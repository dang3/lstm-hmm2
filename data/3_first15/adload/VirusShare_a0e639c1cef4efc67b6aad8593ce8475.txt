pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fcomip
mov
add
dec
outsb
je
addr16
and
iret
scas
xchg
ffreep
pop
cs
jns
insb
daa
push
outsl
jb
aas
int
fs
orb
popa
imul
add
cwtl
or
push
je
sub
outsb
mov
imul
push
imul
les
or
and
xorl
ds
push
cmp
xor
pop
pop
push
pusha
fs
mov
mov
push
dec
bound
arpl
pop
sbb
js
roll
lds
std
ret
insl
dec
and
or
jb
popa
arpl
add
pop
inc
add
js
ds
lcall
dec
inc
imul
inc
sbb
add
cmpsb
std
mov
addl
jmp
adc
int3
int3
movsl
subb
xorb
inc
adc
or
rorl
or
pop
jb
jb
adc
pop
lock
add
dec
rorl
in
fs
fs
imull
jmp
push
add
popa
sbbl
push
sbb
in
call
inc
loopne
sbb
enter
fcomps
aam
push
sbb
rorb
int3
enter
nop
sarb
mov
enter
test
fists
push
sbb
mov
xor
sub
and
popa
jb
inc
dec
nop
mov
xchg
orl
xor
popa
push
sbb
cmpb
xchg
inc
je
add
mov
mov
add
imulb
je
movzwl
mov
aaa
inc
pop
ret
popa
ret
push
jns
jo
punpckhbw
push
sbb
pusha
pop
pop
push
xchg
inc
push
push
mov
add
push
jg
push
in
mov
test
jne
xor
pop
leave
mov
push
mov
mov
ret
lea
mov
mov
mov
inc
cmp
jne
in
out
mov
push
mov
mov
push
nop
mov
add
scas
mov
mov
xchg
add
out
aas
in
sub
rclb
mov
or
adc
idivl
inc
add
push
mov
push
or
or
ret
push
push
push
mov
mov
mov
mov
pop
mov
rcrb
mov
out
push
or
push
jg
ja
or
ret
and
lea
or
inc
add
sarb
cmp
jne
aaa
sub
fistpll
jmp
scas
sub
jle
mov
cmp
test
pop
aas
js
rcrl
fidivs
mov
fucomip
imull
cmp
jb
mov
add
call
ja
and
dec
pop
mov
aaa
or
mov
adc
out
mov
ret
jmp
pop
mov
add
pop
rol
ja
sub
orb
lock
mov
jl
sub
mov
aam
std
jnp
add
jmp
sbb
sti
jne
shrb
loopne
pop
and
mov
cmp
popl
jge
mov
call
jg
enter
add
and
push
jg
data16
cld
mov
mov
test
je
mov
mov
dec
arpl
test
push
and
add
int
lahf
loop
mov
sub
or
push
lahf
push
fcoms
jne
icebp
add
cmp
dec
popf
cmpl
in
adc
fsubrp
mov
lock
inc
lds
fs
mov
sti
pop
icebp
cmp
faddl
lds
pushf
jmp
outsl
ud0
ja
mov
add
cmp
ja
cmp
mov
imul
sbb
ret
jmp
movl
filds
mov
ljmp
sbb
push
fs
out
mov
or
push
adc
hlt
outsl
lock
pop
mov
mov
and
sbb
repz
loop,pt
mov
sub
or
sahf
loopne
lds
mov
jle
add
or
add
jbe
or
nop
loope
ret
jbe
scas
adc
sti
push
push
mov
icebp
mov
dec
jmp
ss
jae
and
push
xor
adc
xor
or
push
cmp
add
sbb
or
push
jo
sti
sbb
jae
mov
cmp
jae
std
add
pushf
mov
addl
popa
rcll
add
dec
xadd
pop
arpl
clc
mov
aas
or
mov
repnz
shll
cmp
jg
inc
xlat
dec
out
fimull
pop
fs
je
mov
aaa
sbb
xor
push
std
insb
push
push
pop
add
jne
jne
sti
int3
cmpl
movsl
and
push
and
lods
hlt
fdivs
mov
and
out
cli
jge
add
je
add
test
inc
jle
popa
scas
mov
sub
push
stos
mov
xor
mull
mov
mov
popa
dec
adc
ficompl
push
cmpsl
or
fwait
aas
lea
jne
jmp
xchg
jmp
imul
jne
sbb
scas
xlat
js
lret
rolb
cmpsl
sub
inc
popf
adc
push
cltd
xchg
xchg
mov
mov
adc
jecxz
add
ds
mul
out
cmp
jae
mov
out
rorl
xchg
xchg
mov
pop
test
loopne
je
imul
jo
inc
shrl
or
adc
jl
insb
loop
add
sbb
femms
xor
add
aaa
push
push
in
aas
xor
and
or
cmp
lea
mov
and
adc
push
push
and
mov
cmp
add
sbb
leave
add
imull
cmp
in
mov
jle
mov
mov
les
pop
pop
pop
pop
add
push
ret
ja
out
sub
mov
dec
push
xchg
pop
xchg
test
shlb
add
mov
rcrl
add
popa
rclb
test
sub
out
loope
or
shll
arpl
jmp
dec
pop
sbb
and
clc
loopne
fistpl
push
cmp
push
mov
jb
or
push
pop
jg
adc
test
jns
add
sar
pusha
in
adc
hlt
jmp
sub
mov
sub
mov
mov
mov
sub
imul
fld
jb
add
or
mov
cmp
and
add
lock
decl
lea
cmp
jl
movl
idivb
pop
jb
les
or
in
testl
mov
cld
jmp
mov
leave
adc
adc
jnp
hlt
lahf
jbe
or
push
or
push
rolb
and
or
ret
decb
pop
cmp
je
ja
outsb
push
add
cmpsl
sub
out
ljmp
testb
je
mov
incb
cmp
cmp
idiv
sbb
or
add
test
sti
sti
mov
int3
or
fsubs
test
jne
mov
and
mov
inc
or
andl
mov
pop
sbb
dec
shlb
aad
jno
xorb
into
jge
cld
stos
out
inc
jg
clc
sub
sub
cmp
jge
mov
mov
sub
adc
lock
pop
xor
cld
lea
and
in
mov
mov
sub
stc
add
dec
jae
lea
sbbb
ret
or
jg
add
mov
mov
icebp
cmc
scas
jae
add
sub
jo
fs
test
mov
in
call
cmpsb
adc
mov
hlt
rorl
cmp
inc
adc
ja
sarb
pop
add
sub
cmp
or
sahf
fists
gs
mov
popa
sti
je
sbb
inc
adc
enter
or
movb
es
out
or
adc
mov
lea
sbb
dec
cmpsb
cmp
add
and
lea
movsl
movsl
mov
xor
gs
cltd
cmovl
sub
mov
push
push
mov
cmp
popa
xchg
insb
sub
movq
adc
and
xor
push
sub
adc
ja
lock
add
xorl
mov
std
adc
leave
aam
loope
psllq
xchg
or
mov
cmp
popf
cmp
sets
popa
pop
pop
inc
mov
insb
sub
ret
pusha
or
mov
xchg
inc
mov
das
adc
cmp
aaa
loopne
adc
push
adc
or
ljmp
lock
int3
xlat
dec
cmp
test
pop
push
jle
adc
clc
loop
mov
mov
pop
je
pop
jmp
in
jae
loope
or
dec
sbb
dec
shll
jle
lahf
cmp
loopne
mov
movsb
sub
cmpl
adc
inc
add
xor
mov
out
sub
orl
pop
jae
lret
mov
and
leave
jmp
inc
pop
push
stc
repnz
jne
js
dec
mov
lea
or
ret
and
test
xchg
add
pusha
or
incl
or
jbe
daa
xor
push
push
mov
mov
add
cmpl
push
cld
lret
cmp
add
mov
jle
jg
mov
jns
movb
pop
inc
mov
shlb
push
or
sub
jmp
mov
jge
inc
cwtl
adc
dec
pop
add
loopne
add
js
xchg
and
jmp
mov
pop
daa
lahf
cmp
movzwl
jnp
add
xor
shrl
mov
in
sarl
sub
adc
push
adc
pop
push
push
inc
mov
adc
clc
mov
ljmp
jno
in
loop
xor
sub
lock
test
jne
test
ja
loope
push
popf
decl
call
cld
cltd
add
mov
mov
dec
addl
iret
jge
pop
sbb
or
and
inc
push
add
mov
das
jb
ret
cmp
or
xchg
add
and
add
test
pusha
mov
adc
ret
sbb
cli
add
lcall
testl
jmp
mov
cmpl
jge
jo
clc
push
adc
fwait
push
adcb
sbb
and
inc
jno
pop
mov
fnstsw
loopne
pop
jle
jg
in
add
out
mov
add
scas
push
fstpt
cmp
icebp
mov
push
stos
adc
xchg
adc
iret
cmp
adc
mov
jge
outsl
mov
negl
loopne
add
cmpsb
mov
clc
loop
sbb
mov
push
jo
jle
pop
and
test
mov
ja
sub
cmpb
jl
xlat
je
test
xor
das
xor
xor
movl
mov
adc
icebp
test
inc
fbld
add
push
xchg
pop
jecxz
sbb
cmp
fwait
loopne
mov
loop
sub
xor
or
mov
add
add
ret
add
xchg
cmp
and
fdivs
push
xchg
in
or
jl
sbb
dec
jl
js
sbb
movhps
nop
int
imul
pop
push
adc
add
ss
adc
ret
mov
fstpt
lock
mov
aaa
inc
adc
rorl
sbb
jge
jo
jmp
sub
cmpsb
test
jle
call
jo
push
or
add
lret
je,pt
je
loopne
enter
test
je
das
sbb
into
sti
fstpt
sbb
xchg
neg
or
jne
sub
sarb
out
push
rcrb
mov
pushf
sbb
ret
rol
bound
sbb
sbb
inc
ret
cmpsl
ret
jg
mov
popa
or
xor
jle
jecxz
cmp
fdivrs
dec
sbb
outsl
lahf
cwtl
add
jo
mov
mov
adcb
cmp
aas
and
xchg
cmove
fmull
xor
cmp
jno
pop
jne
xor
pop
pop
fs
psubsw
jl
sbb
lock
mov
rcrl
push
je
jae
sbb
ret
sub
inc
dec
std
lcall
cmc
jl
cmp
jg
add
mov
inc
rep
jmp
mov
pop
shll
jmp
mov
jmp
mov
iret
ret
lock
les
add
jp
push
je
push
flds
mov
shrb
jnp
cmp
add
lea
add
loopne
call
sub
arpl
and
inc
mov
adc
lahf
popa
adc
mov
sbb
pop
loope
cmp
mov
inc
cmp
ja
je
push
js
repz
ja
loope
lahf
jns
je
cld
mov
fdiv
lea
xor
std
xor
cld
adc
mov
mov
aas
jbe
mov
rcrb
jnp
loope
cmp
jb
cmp
ja
sub
lahf
mov
fldcw
mov
jae
aaa
in
or
mov
adc
sub
adcl
pop
cmc
adc
cmpsb
hlt
fidivrs
adc
or
lea
push
mov
adc
pop
add
scas
push
test
push
pop
bound
ss
rorl
add
test
push
andl
fwait
mov
notl
push
dec
sete
nop
push
movw
jno
sbb
test
jp
insb
jecxz
mov
out
add
pop
sub
dec
je
add
add
subb
out
rcll
movl
daa
cs
add
test
mov
and
sub
in
sbb
cld
ja
push
cmpsl
push
push
lea
push
pushl
cmp
test
add
xlat
jne
outsl
dec
decw
dec
pushl
inc
push
sub
fmuls
jae
ja
xchg
push
aaa
cwtl
lret
int3
into
mov
loop
rorl
repz
mov
jae
cmpb
push
je
inc
jmp
push
xchg
sub
jp
loopne
out
jg
dec
jne
jmp
lea
roll
out
and
adc
mov
je
js
or
imul
push
cmp
hlt
jmp
cmc
in
pop
mov
movsb
jo
cmp
xor
pop
shll
adc
add
rol
pop
push
xor
fcomps
ss
iret
push
mov
mov
das
push
jl
lea
cmpsl
mov
inc
data16
pop
push
inc
sbb
aas
mov
push
xor
scas
mov
cmp
mov
lock
arpl
mov
cmovns
jmp
shl
jmp
xor
jmp
cmp
pop
cmp
shrb
add
push
test
fwait
sbb
sbb
insb
push
das
adcl
xchg
mov
push
incl
movzwl
and
ret
pop
push
inc
cld
add
push
push
int3
call
enter
add
pop
bound
lods
loope
pop
iret
shl
jae
sbb
mov
fdivrp
push
cld
xchg
and
jne
je
sbb
sbb
call
adc
cmp
mov
push
cmp
call
push
pusha
enter
xchg
xchg
sbb
out
jle
pop
pop
jb
or
ja
and
push
mov
out
push
sbb
lock
mov
clc
int3
adc
sbb
pop
rol
cmp
xor
inc
mov
cmp
cmp
mov
inc
inc
stos
adc
ret
notb
mov
loope
xor
mov
mov
inc
inc
aas
shlb
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
add
dec
and
aaa
fisttpl
or
dec
sti
dec
jne
jmp
adc
loop
je
mov
cmp
jne
dec
je
mov
gs
decb
cmp
jne
or
jmp
out
scas
add
adc
std
jne
shr
shr
sbb
fisttps
pop
push
push
mov
shr
or
sbb
dec
pop
cmp
bnd
rol
pop
and
mov
cmp
rcrb
jne
dec
dec
dec
and
lret
dec
sbb
mov
jecxz
incl
mov
mov
shl
mov
mov
enter
mov
stos
pop
loope
xorl
xchg
push
add
in
arpl
rclb
ret
adc
or
mov
mov
add
stos
mov
mov
mov
inc
xchg
adc
xchg
dec
jle
sub
sbb
xorb
js
sbb
dec
arpl
push
add
int
adc
sub
xchg
addb
sub
and
inc
je
inc
inc
xchg
cmp
or
mov
cmc
jle
das
cltd
inc
je
mov
jmp
out
cmp
clc
cli
je
cmpsb
jmp
mov
test
sub
sub
mov
push
pushf
insb
sti
std
out
mov
mov
push
inc
cmp
je
mov
or
lret
lret
iret
repnz
js
pop
pop
je
xor
fnsave
dec
and
and
add
jg
sbb
and
lea
fistps
ret
add
push
dec
je
sarl
jmp
jmp
inc
sbb
js
pop
sub
jmp
inc
inc
jmp
mov
das
andnps
popa
jb
xchg
and
jbe
movups
or
in
add
aad
cltd
pop
xor
mov
mov
jmp
or
cmp
in
jbe
sub
mov
dec
jne
pop
aaa
insl
jb
pop
mov
cmpsb
lea
mov
sub
sub
leave
jne
jmp
jo
cs
jge
dec
je
adc
mov
mov
fldt
rdpmc
jne
cmp
sub
je
das
inc
and
je
and
jmp
push
xchg
jge
mov
pop
in
xchg
xor
sbb
jmp
mov
fcomp
stos
add
out
mov
pop
jl
adc
xchg
inc
mov
cli
nop
pop
jns
or
or
ret
pmulhuw
aas
jns
hlt
adc
mov
lahf
cld
sub
sbb
add
mov
push
adc
daa
sub
test
cld
mull
out
sub
pop
jecxz
add
leave
sbb
aaa
jg
mov
jbe
imul
cmp
mov
mov
jg
das
jg
lods
lods
inc
cmpb
xlat
fadds
outsb
xor
lcall
lret
xchg
push
or
push
push
int3
into
sbb
rorl
mov
incl
push
pop
test
enter
mov
inc
lret
and
daa
lret
dec
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
idiv
incl
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
incl
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
call
cmp
inc
xor
cmp
call
mov
sti
jmp
stos
call
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
call
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
cmp
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
decl
cmc
and
addr16
repz
mov
subb
and
and
push
pop
aad
bound
xor
jmp
in
jp
fisubl
push
pop
and
div
or
cmpsl
add
jecxz
xor
add
test
pushf
or
imul
push
dec
call
push
push
mov
movl
test
push
addr16
add
addr16
sub
andb
mov
sub
out
mov
dec
lea
std
jmp
push
clc
pop
aas
or
sub
adc
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
icebp
repz
pushl
imul
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
int
pop
stos
pushl
mov
inc
xlat
mov
xor
mov
inc
rep
push
push
push
or
pop
mov
or
dec
cld
jne
dec
mov
xlat
cmp
xor
out
jne
ret
repnz
mov
sbb
andb
fadd
add
out
es
or
js
rcrb
daa
adc
in
mov
pop
sbb
pop
cwtl
jbe
in
add
fld
fsubrs
rorl
jns
sub
cmp
sub
movups
jae
pop
insl
ret
xor
mov
pop
mov
or
push
cld
ret
mov
or
jge
mov
xor
push
shr
dec
rep
pop
pusha
mov
mov
mov
aas
jmp
push
mov
sub
mov
je
pop
mov
add
jae
fadds
out
aas
dec
push
mov
mov
pop
sbb
cmp
loopne
sub
mov
mov
mov
fimuls
icebp
out
pop
lods
mov
lret
jmp
stc
mov
jae
paddd
add
test
ds
mov
roll
lret
orl
sahf
arpl
jno
testl
out
inc
cmp
adc
shrb
dec
test
sbb
mov
aad
adc
clc
mov
add
push
push
mov
push
add
pop
lea
arpl
inc
loopne
sbb
daa
mov
ret
cmpsb
jecxz
dec
setne
scas
inc
mov
hlt
xor
lods
lock
mov
sub
mov
mov
cmp
jne
jb
cmp
ffree
mov
mov
or
pop
mov
mov
lds
push
arpl
nop
mov
xor
test
mov
mov
cmp
je
mov
pop
std
leave
jne
mov
add
add
jle
ret
decl
pop
or
movl
or
push
icebp
jg
negb
pop
add
sub
mov
pop
cs
insl
jg
push
je
rcrb
jmp
out
mov
nop
sarb
subl
lock
jne
das
shll
sarb
mov
dec
orb
jle
ss
pop
push
aad
or
jl
repz
pop
mov
loop
jecxz
pop
mov
js
aas
mov
mov
sarb
decb
dec
movb
dec
push
cmp
sbb
add
dec
jne
sbb
add
sbb
jecxz
inc
add
lahf
push
movsl
xchg
xchg
out
enter
insl
notl
repnz
sbb
jmp
cmpsl
fistps
pop
add
mov
pushl
lock
jl
push
hlt
xor
movups
mov
mov
jecxz
cld
imul
stc
mov
cmp
jecxz
pop
sub
movsb
xor
mov
mov
push
mov
aaa
stos
pop
push
call
sbb
stos
jbe
add
scas
mov
aaa
cmpb
outsl
cld
add
cli
in
push
call
inc
arpl
mov
push
popa
push
iret
out
ds
or
das
add
add
scas
cmp
jae
sub
xlat
pop
push
mov
and
leave
roll
cmp
je
or
jne
movsbl
inc
inc
jmp
add
and
sbb
imulb
and
loope
pusha
xchg
fildl
loop
pop
mov
adc
add
shl
xor
stc
cmpl
mov
testb
dec
adc
outsb
cld
inc
cmp
pavgw
mov
adcl
push
cs
cmp
cli
out
push
je
or
jae
jbe
dec
dec
loope
test
push
pop
pop
loop
xor
mov
ja
pop
hlt
nop
outsl
imul
push
push
push
cmc
adc
push
jns
sub
or
je
orl
out
shl
or
push
cmp
sub
pop
movq
push
mov
iret
mov
dec
decl
std
pop
outsl
or
movl
add
test
jmp
xlat
cmpsl
mov
call
nop
cmovno
xor
add
xor
pop
dec
sarl
add
mov
mov
cltd
push
or
mov
pop
add
lds
mov
mov
out
sub
repnz
addl
fdivrs
dec
fdivs
xchg
mov
imul
rclb
aas
or
insb
insb
je
jg
adc
jg
pushl
jg
jne
fs
loop
xor
inc
jmp
xor
out
daa
push
adc
lahf
adc
adc
insl
or
cs
push
or
pop
inc
pop
lds
push
push
cld
inc
sbb
clc
jmp
prefetch
jmp
in
inc
add
pushf
ret
push
xorb
call
inc
outsl
or
mov
scas
jmp
push
push
push
mov
xchg
gs
fstpt
aas
lahf
sbb
or
pusha
add
testl
mov
aas
mov
mov
mov
cmc
lea
jae
mov
cwtl
inc
xlat
pop
lods
pop
insb
push
shlb
lock
xor
xchg
ret
jle
jne
push
mov
add
jg
je
cmp
push
sub
jg
jmp
pusha
add
sub
jb
je
jmp
cmp
cmp
sahf
xchg
cs
adc
std
sbb
dec
cmp
jmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
loope
cld
pushl
or
lret
adc
loopne
call
mov
imul
out
jno
orb
jns
jno
dec
ds
fwait
outsl
jp
ds
cld
push
cmp
je
lock
mov
mov
mov
out
push
inc
cli
sub
add
cmpsb
push
sub
lock
adc
enter
xchg
jbe
ret
inc
xor
movsb
clc
mov
adc
popa
mov
adc
pop
fsubrs
enter
adc
clc
push
or
cmp
jne
adc
cmp
or
lock
dec
mov
mov
xor
inc
sbb
fistpl
test
jle
dec
mov
inc
fisubrs
adc
sub
shlb
jg
jecxz
adc
pushf
inc
sbb
lods
rcll
or
pop
mov
add
dec
mov
mov
mov
daa
cmp
jle
add
sbbl
mov
cmp
jg
movl
sbb
or
dec
mov
addr16
stos
mov
movb
ret
stos
sub
jnp
cmp
sbb
sbb
fadds
ret
shrl
ss
jne
pop
pop
pop
inc
pop
xor
cmp
sbb
out
mov
inc
or
inc
aas
loopne
adc
je
inc
cmp
lock
mov
ret
cmp
loopne
or
cltd
idiv
add
sub
lock
test
mov
daa
pusha
pop
jmp
mov
mov
sar
ret
mov
push
push
scas
inc
push
out
sti
xchg
adc
imul
rolb
adcb
sbb
pushl
add
or
push
scas
push
pop
movsl
pop
leave
aas
push
filds
lock
rorb
cmpl
cmpl
or
cmp
rorb
inc
push
push
mov
dec
xor
inc
sub
out
pop
ret
mov
insb
xchg
ja
mov
jge
cmp
or
lods
or
addb
fs
cmpb
push
add
ret
aas
aas
adc
sbb
pop
mov
call
and
dec
and
pop
jno
xor
es
inc
xchg
jno
jne
ss
cmp
roll
lds
loopne
cs
lock
icebp
inc
adc
jno
or
push
insl
fsubs
rcrl
jne
imul
insb
xor
dec
jne
cmp
mov
dec
das
adc
out
shll
mov
xchg
xor
push
insl
orl
mov
popl
into
jmp
cli
or
clc
dec
jl
lock
jno
lea
mov
xchg
fdivrl
mov
push
sbb
add
or
clc
inc
arpl
dec
jne
orb
into
dec
and
inc
jg
jno
repz
xor
sbb
pop
pop
jmp
mov
jnp
ja
xchg
adc
xchg
inc
test
jle
jle
push
add
jmp
push
xor
movl
sbbl
cld
mov
clc
movsb
das
addr16
add
mov
das
stc
mov
ret
add
scas
sbb
aas
mov
cmp
clc
xor
mov
mov
push
add
push
push
fistl
mov
and
jo
jle
push
fsub
aaa
dec
xchg
add
cmp
cld
adc
cli
jg
jge
jg
stos
jmp
lea
cmp
test
xchg
push
push
push
mov
ss
out
jl
and
mov
and
jmp
jbe
fwait
jbe
fistpl
cmp
insb
in
pop
pop
jge
xor
icebp
xchg
call
loop
or
out
xor
mov
je
js
mov
add
loope
sti
or
jmp
inc
add
jmp
fld
pop
sub
and
pop
pop
or
mov
std
lcall
or
add
out
jne
int3
mov
inc
xchg
nop
push
push
pop
add
icebp
rcrl
pusha
pop
mov
rcrl
mov
std
inc
mov
pop
cld
sti
adc
fnstcw
loopne
scas
aad
inc
add
mov
pop
add
aas
mov
test
lret
ret
loopne
sbb
jns
push
cld
add
cmp
pop
and
mov
dec
and
cmp
fldcw
sub
mov
outsl
fisubs
cmp
adc
or
fidivs
sub
cmp
inc
hlt
and
mov
mov
out
jbe
in
mov
cli
lds
push
sbb
stos
xchg
out
jg
clc
mov
mov
jmp
adc
mov
pop
loope
xor
xchg
adc
or
and
cmp
jmp
imul
cmp
gs
dec
jne
mov
cmp
and
aaa
add
dec
loopne
xor
push
scas
inc
pushf
sbb
dec
out
into
pop
dec
jne
sbb
sahf
xor
dec
and
pushf
pop
and
lea
jmp
xchg
xchg
jecxz
xchg
daa
cmp
add
rolb
push
mov
aas
adc
sbbb
push
andl
daa
cmp
xchg
icebp
or
loope
jbe
or
jmp
aam
inc
and
jg
cmc
jp
clc
inc
lods
push
add
add
jl
jmp
mov
je
push
scas
adc
mov
out
cmp
lea
mov
out
cmp
pop
pop
sub
push
es
jl
clc
adc
sbb
fidivrl
sub
fistps
jae
adc
stos
aad
pop
adc
jmp
xchg
push
mov
inc
jmp
and
lret
cmp
outsb
dec
jl
sub
mov
jno
divl
stc
add
lea
inc
dec
xor
shlb
or
mov
push
sahf
cltd
mov
push
mov
addr16
fidivs
cmp
adc
imul
add
gs
cmp
incb
mov
lea
lock
push
add
mov
shr
add
xchg
dec
cld
push
insb
dec
js
mov
inc
pop
shrb
pop
adc
push
mov
in
pop
aaa
icebp
add
out
xchg
ret
cmp
xor
push
out
and
sbb
loopne
rorl
das
loopne
mov
lock
jo
in
sub
aad
xchg
test
cmp
fidivl
pop
insl
mov
push
inc
sbbb
lods
push
stos
in
push
push
push
sbb
ret
cs
push
mov
inc
js
fisubs
insb
and
adc
mov
mov
repz
mov
ds
add
pop
movsb
sbb
cmp
or
ffree
cmp
pop
mov
cwtl
xchg
addl
dec
push
outsb
clc
in
das
int3
pop
pushl
mov
and
xchg
pop
add
and
mov
add
mov
sti
mov
pop
add
shr
xchg
je
mov
enter
inc
xor
sbb
aaa
movsb
jmp
pusha
and
testl
adc
mov
mov
add
cmp
cmp
jge
pop
dec
cmp
mov
pushf
lcall
sub
cmp
push
cld
jno
push
lods
add
add
movsl
enter
xchg
cmpsl
cmp
fwait
jle
cltd
cmp
push
pop
daa
and
xchg
stos
add
and
aad
add
xchg
pushf
push
inc
mov
clc
jmp
dec
add
je
mov
mov
orb
aaa
ds
jg
das
adc
gs
jmp
jge
push
add
or
or
and
or
lods
mov
cmp
mov
je
mov
std
dec
inc
push
jecxz
cltd
clc
jmp
jp
lret
mov
add
out
jmp
lock
call
or
dec
cs
adc
cmp
pop
jmp
cmp
mov
cltd
pusha
xlat
mov
cmp
jmp
pop
lahf
clc
iret
cmp
jecxz
daa
adc
aad
rclb
mov
call
cmp
and
push
lcall
pop
fistpll
mov
aas
rolb
pop
ljmp
lret
cmp
and
xor
push
dec
enter
loopne
repz
clc
loopne
pop
enter
jmp
test
mov
sbb
cmp
inc
mov
and
jmp
ret
cltd
push
rcll
xchg
pop
add
sbb
das
jl
rdtsc
rorb
mov
cli
loop
dec
clc
push
pop
add
sarl
add
xor
gs
pop
push
mov
cmp
mov
or
je
or
dec
or
mov
pusha
adcb
jl
pop
data16
pop
dec
mov
mov
sbb
jmp
jl
daa
and
mov
lock
icebp
pop
repz
jmp
jg
mov
inc
and
jmp
aas
insb
jns
mov
add
xor
and
dec
js
aas
and
mov
cld
dec
jne
sub
add
add
iret
bswap
xor
mov
in
inc
push
popa
and
pushf
push
and
popa
adc
pop
and
fldz
rorb
out
sub
mov
shl
jp
std
daa
adc
mov
lock
cmp
cmp
xor
ja
sti
add
add
inc
ljmp
mov
icebp
mov
jno
add
je
insl
test
cmp
jmp
mov
es
adc
in
nop
inc
mov
push
mov
mov
das
mov
arpl
in
setno
fidivs
push
jo
sbb
push
loopne
dec
orb
adc
imul
cmp
pop
push
js
mov
cmpb
aaa
xor
les
into
fiaddl
inc
mov
or
sub
pop
mull
mov
cli
cltd
std
mov
fs
add
dec
adc
pop
pop
ret
insl
sahf
inc
filds
xor
cmpsl
cltd
loopne
sub
pop
add
cmp
adc
inc
fildl
jl
lcall
mov
mov
sti
idivl
inc
jmp
cmp
jne
mov
inc
and
sub
ret
add
pop
je
xor
int3
mov
cs
out
shll
ret
or
psubw
sub
push
jb
out
cmpsl
mov
and
or
aaa
jmp
add
or
outsl
dec
sar
inc
jmp
jl
andl
jl
or
jg
mov
cltd
aas
sub
loopne
pop
popa
movl
adc
out
subb
xor
ljmp
jno
fcom
mov
cmp
std
stos
testl
sub
xorl
cmpsl
cltd
dec
inc
cli
jne
mov
adc
int3
cs
jg
jae
add
lds
sub
jo
adc
jmp
sub
sub
add
incb
sbb
setb
jmp
setl
cmp
je
dec
xor
inc
pop
add
or
push
lea
mov
test
jg
cltd
push
xlat
cli
clc
inc
in
dec
jle
decl
jle
ficoms
add
xchg
push
loopne
inc
inc
mov
repnz
pop
add
dec
stc
mov
test
jg
xchg
pop
mov
push
pusha
cwtl
add
adc
lock
dec
inc
push
or
xchg
push
movl
pop
popa
mov
test
or
mov
adc
testb
call
arpl
in
cmp
je
andl
xchg
incl
jne
mov
cmp
jge
rcrl
add
sbb
scas
xchg
xor
or
add
mov
sub
add
in
and
fisttps
or
jmp
lock
in
xchg
jge
or
push
in
test
pop
xchg
dec
in
push
insb
adc
into
pop
and
repz
push
dec
shll
cli
addb
out
fs
or
or
lock
clc
ret
mov
add
cmpsl
cmpl
jle
test
push
ds
or
xchg
dec
jno
and
xchg
push
push
xchg
add
or
cmp
pop
dec
jne
pop
sub
outsb
mov
cmp
jno
sub
add
outsl
divb
loopne
cld
cltd
lock
jne
pop
insl
lea
lods
push
movsl
inc
pop
dec
mov
mov
gs
ficomps
inc
enter
xor
push
push
push
mov
incl
out
jecxz
ret
pop
jae
in
sbb
call
js
pop
jae
add
jne
sbb
inc
das
mov
sbb
inc
sbb
jecxz
sub
push
xchg
pop
inc
int
add
add
mov
imul
push
xchg
xor
pop
xor
inc
mov
or
testl
mov
adcb
jmp
add
mov
test
out
dec
mov
mov
push
clc
mov
std
dec
sub
hlt
push
or
mov
xchg
inc
push
adc
push
push
je
push
rol
sahf
ret
vmovapd
fistl
mov
push
sbb
js
lret
mulb
pop
jne
add
inc
mov
scas
loopne,pt
push
out
filds
in
jne
movb
sub
sub
iret
jg
inc
fidivrl
jno
sub
add
inc
in
data16
cmp
inc
push
push
gs
imul
shl
andl
aas
loop
ds
push
inc
lea
addr16
cmp
test
mov
dec
push
push
mov
inc
xlat
jg
xor
test
add
test
mov
jae
imul
gs
xor
cs
insb
pop
inc
gs
out
idiv
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
outsl
loopne
xchg
adc
sbb
fsub
sub
movb
int3
push
xchg
fs
dec
mov
cmp
orb
aam
jb
and
fcoms
cmp
or
push
push
int3
call
pushf
out
inc
clc
int3
pusha
push
data16
aas
into
hlt
cmp
cmpsl
lock
xchg
xchg
pop
add
and
inc
inc
sti
repnz
repnz
jecxz
push
lods
repz
sub
add
and
mov
pop
test
or
repz
or
fldt
mov
jnp
and
pop
imul
dec
cmpb
stos
pop
cmp
jne
push
mov
popf
inc
addb
sub
sbb
cmp
push
testb
lods
sub
lock
jb
in
je
das
outsl
repz
in
ret
xor
cmc
add
movb
outsl
data16
popa
jb
stos
fnstsw
dec
mov
jae
aaa
mov
push
adc
cltd
test
out
push
and
add
xor
push
add
mov
pop
jbe
xor
push
sbb
in
pop
clc
sbb
mov
xor
les
jp
mov
enter
add
mov
lret
mov
mov
dec
or
fnstcw
dec
cli
mov
arpl
cmp
pop
mov
rcl
roll
add
jne
xorl
push
adc
mov
popf
mov
sahf
inc
or
stos
add
ja
dec
pop
pop
dec
les
mov
lea
nop
test
cmp
das
and
pop
mov
pop
mov
cmp
cmpb
cld
jne
pop
cmpsb
push
fistl
xor
jmp
sbbl
add
push
or
sbb
xor
loop
push
stc
pop
mov
or
xor
inc
popf
or
push
mov
cs
mov
push
mov
sbbl
pop
lahf
pop
fcmovu
sub
pop
pop
ret
sbb
add
sti
mov
and
pop
xchg
decl
pushf
mov
inc
outsl
mov
mov
loope
lds
pusha
jecxz
iret
les
or
mov
xlat
insl
mov
ret
mov
js
inc
fbld
sahf
mov
les
outsb
je
jp
xlat
arpl
push
or
mov
mov
jg
cmp
add
mov
dec
inc
cmp
ja
mov
das
pop
loope
pop
cmp
pop
add
pop
cld
ja
std
std
aas
push
fcmovb
jmp
or
mov
adc
and
sbb
cmpb
mov
xor
gs
popa
imul
dec
popa
rolb
cld
xchg
add
dec
or
lds
or
mov
add
or
xor
add
pop
add
or
pop
outsl
cmp
lea
ret
cmp
hlt
std
mov
dec
or
lock
jbe
punpckhwd
push
xchg
xlat
out
cld
test
xor
inc
test
je
neg
mov
or
mov
aas
and
je
cmp
cltd
fisttps
and
cmp
jne
push
arpl
shl
or
mov
pop
icebp
fcmovnbe
cmpsb
lea
dec
dec
cld
mov
out
fstpl
inc
inc
fwait
xlat
or
mov
jo
adc
or
movl
and
inc
inc
mov
ret
pushf
mov
sbb
out
out
out
sbb
push
sbb
or
jb
bound
mov
test
scas
icebp
cmp
push
loopne
popa
mov
xor
movsb
enter
test
or
mov
adc
sbb
and
mov
imulb
scas
lea
es
pop
fistpl
sti
repnz
outsl
jmp
adc
enter
popa
test
enter
jb
push
lret
and
and
push
popf
pop
mov
rolb
cmp
jb
imul
nop
adc
mov
dec
sarb
push
hlt
dec
ss
bound
pushf
test
lahf
and
enter
add
mov
cmp
jge
push
xlat
outsl
mov
nop
add
aam
pop
or
push
shlb
xchg
push
dec
pop
push
push
lock
lock
out
push
lea
push
push
add
mov
and
mov
push
and
xchg
je
jge
or
in
lock
jl
adc
es
ret
aam
mov
push
push
je
inc
ficomps
adc
push
or
jl
xor
cmpsb
mov
subl
add
test
and
stos
adc
xor
push
add
outsl
test
and
insl
fsubrp
adc
cmp
push
mov
adc
push
pop
cld
jo
in
push
adc
mov
pop
cmp
enter
mov
test
pop
insl
pinsrw
add
mov
sar
and
or
jns
push
jl
sub
nopl
jle
mov
and
enter
dec
inc
push
push
lods
in
add
dec
clc
sbb
or
inc
inc
cmpl
or
cltd
loop
ficoml
dec
out
cmp
sub
or
mov
push
push
xor
mov
clc
and
leave
jne
imul
test
sub
add
mov
out
and
ret
mov
xor
mov
bound
push
sbb
shrb
cmp
or
fildll
sarb
push
popa
xchg
sbb
pop
dec
gs
jle
xor
sub
cmp
xchg
mov
push
lock
push
or
lret
lock
sbb
int3
mov
push
incb
cmp
mov
add
push
or
rcll
fcmovne
je
add
cs
mov
pop
mov
aam
or
push
gs
aas
add
mull
or
adc
addr16
repnz
insb
adc
imul
outsl
divl
jae
gs
jne
je
dec
outsl
je
imul
out
dec
outsb
popa
lea
gs
outsl
inc
arpl
or
ja
push
ret
or
xor
fisttps
xor
outsl
insl
bound
outsl
js
imul
ja
nop
mov
loopne
andl
andps
outsb
dec
inc
xor
je
push
stc
sbb
add
je
xor
and
push
or
pop
pop
inc
push
cmp
test
movsb
mov
pushf
cwtl
sahf
adc
push
sarb
or
sbb
inc
jnp
test
jno
push
push
cld
loopne
orl
ja
jl
and
cmpl
enter
insb
push
xor
pop
orl
push
push
dec
dec
or
enter
cmp
enter
xor
enter
sub
and
orl
sbb
orl
adc
or
push
xor
and
cld
bound
dec
clc
hlt
lock
inc
push
sbb
call
fs
fadds
sbb
ror
enter
inc
sarb
mov
and
movsb
orl
mov
xor
and
and
ret
sbbb
mov
sbb
in
fs
fs
inc
mov
inc
push
mov
test
inc
push
sbb
fs
xchg
nop
push
sbb
mov
jl
je
nop
inc
push
jo
push
fs
pop
inc
push
sbb
push
push
sbb
dec
inc
inc
sbb
cmp
xor
nop
inc
push
xor
nop
inc
push
sbb
sbb
push
sbb
adc
sbb
or
xor
leave
inc
cld
arpl
hlt
enter
lock
call
in
faddl
aam
int3
or
enter
shlb
push
addr16
inc
nop
inc
push
sbb
sub
push
sbb
cmp
sbb
inc
and
sbb
sbb
adc
nop
inc
push
adc
leave
inc
push
sbb
cld
orw
clc
hlt
lock
or
enter
loopne
enter
fcom
nop
popa
orl
mov
fs
sarb
mov
sbb
test
mov
pushf
cwtl
xchg
nop
inc
push
sbb
sbb
jl
sbb
je
insb
sbb
push
inc
push
pop
pop
push
nop
inc
push
sbb
dec
inc
push
sbb
cmp
sbb
xor
sub
fs
inc
sub
fs
inc
push
sbb
adc
and
xchg
or
add
gs
inc
push
mov
push
sbb
in
sbb
aam
fs
inc
ror
enter
push
sarb
mov
push
sbb
movsb
push
sbb
pushf
cwtl
xchg
sbb
nop
mov
test
sbb
jo
push
sbb
fs
sbb
pop
pop
push
sbb
push
dec
dec
fs
inc
push
inc
inc
cmp
inc
push
sbb
xor
inc
push
sbb
and
sbb
sbb
adc
fs
inc
adc
jb
inc
push
add
cld
and
lock
in
call
enter
movzwl
inc
xor
adc
ret
ds
and
pop
fs
ficoms
test
movsb
ja
sbb
cmp
inc
inc
sub
or
sbb
cmpl
fistps
mov
shr
sarl
pop
sub
sub
pop
pusha
pushf
ret
das
fsqrt
lcall
rcrb
fsubs
or
adc
sbb
subl
dec
push
sarb
xor
ficompl
insb
mov
xorb
jge
xchg
scas
sbb
shrb
push
outsl
stc
cwtl
push
jge
adc
push
ficoms
pop
dec
ljmp
xchg
in
push
push
sbb
int3
ud2
inc
pop
ficoms
test
cmp
repz
or
inc
pop
or
and
fiaddl
dec
popa
gs
push
hlt
decb
push
dec
inc
inc
dec
add
outsl
adc
in
std
int
and
dec
pop
inc
push
dec
pop
and
jbe
mov
dec
push
push
pop
sub
push
inc
dec
pop
mov
dec
inc
push
das
xchg
dec
js
jae
and
enter
jl
xor
jns
jne
lock
fs
inc
repz
cmc
fs
inc
push
div
clc
nop
inc
push
sbb
cli
sti
inc
push
sbb
incb
sbb
loopne
loop
fs
inc
jecxz
in
nop
inc
push
out
call
jmp
sbb
out
push
sbb
rcl
rcrb
fs
inc
rcl
aad
nop
inc
push
xlat
fcoms
fcmovu
inc
push
sbb
fiadds
sbb
rol
sbb
ret
lds
push
mov
nop
inc
push
sbb
lret
push
sbb
into
push
sbb
mov
mov
fs
inc
mov
mov
nop
inc
push
mov
mov
mov
sbb
mov
mov
fs
inc
mov
inc
push
cmpsb
cmpsl
test
inc
push
sbb
dec
data16
aas
gs
and
inc
insb
jbe
les
add
add
pop
add
jbe
ret
inc
push
arpl
pop
xchg
and
decl
mov
gs
imul
xchg
call
js
popf
testb
gs
jo
nop
mov
sbb
mov
jo
lcall
or
dec
jne
dec
dec
gs
outsl
jb
dec
in
push
xor
aas
inc
sti
outsb
lahf
or
outsb
mov
cmp
scas
xchg
or
cmp
lret
pop
sub
or
divl
sbb
scas
xchg
scas
xchg
lock
xchg
pop
and
inc
in
hlt
mov
sbb
sbb
jns
and
test
or
and
ljmp
inc
jns
gs
nop
movsb
movsb
insl
in
add
popa
outsb
addr16
scas
lsl
inc
cld
or
dec
inc
sti
adc
outsl
ja
jp,pt
ret
or
inc
pop
jp
fimull
xchg
dec
mov
add
inc
xchg
stc
decl
jbe
insb
imul
jnp
lds
insb
jle
fs
mov
pusha
scas
pusha
cmpsl
xor
inc
xlat
shll
xchg
mov
jnp,pt
outsb
fs
adc
ret
adc
mov
mov
add
ss
or
or
inc
popa
jae
push
add
enter
mov
inc
dec
shl
inc
shll
and
jo
lock
inc
enter
roll
movups
push
test
inc
enter
push
jb
sti
pusha
mov
fsubrl
fmull
inc
xchg
mov
imul
cmp
mov
jle
je
mov
inc
xlat
nop
scas
ds
sbb
xchg
and
sub
pop
sub
mov
pop
addb
mov
shll
repnz
jg
bound
jb
out
test
add
ret
push
data16
add
popl
dec
sbbl
stos
lea
ds
push
or
push
popa
data16
scas
les
je
adc
cs
xor
pop
dec
mov
or
push
inc
insb
jae
nop
fsubrl
out
inc
cmp
push
addb
mov
dec
mov
call
aad
adc
jb
popa
fs
jnp
aaa
loopne
jne
int3
add
test
pop
lsl
insb
or
in
sub
aam
aam
imul
pop
and
lcall
jnp
sbb
push
loopne
xorb
negb
cmp
mov
sbb
xor
adc
aas
pushf
dec
in
jge
push
dec
jne
push
scas
subl
jne
xchg
jl
pushf
fld
lods
outsb
arpl
mov
sbb
pop
or
daa
in
shr
div
cmp
add
pop
js
adc
lret
jns
sub
jl
popa
scas
mov
mov
ret
cmpsl
cmp
aas
adc
xchg
pop
js
xor
jae
add
in
pop
shlb
pop
xor
push
adc
add
or
dec
cs
insb
call
pop
pop
or
bnd
int3
pop
xor
mov
mov
loopne
and
add
xor
jo
cmp
xchg
sbb
aaa
pop
adc
inc
add
push
inc
inc
dec
scas
fimull
push
or
jg
inc
add
imul
xor
inc
ror
shll
cmp
repz
je
movzbl
and
push
pushl
mov
push
loop
addr16
inc
pop
push
repz
jne
sbb
inc
inc
aas
cmp
sub
mov
cltd
mov
push
idiv
repz
out
and
sti
je
loope
out
sub
pop
push
sahf
mov
lcall
inc
or
dec
daa
add
jae
jmp
pop
push
xchg
pop
adc
or
xchg
pop
sbbl
bound
clc
push
inc
xchg
int3
cwtl
pop
pop
dec
add
gs
ret
movl
sbb
jo
add
and
insb
inc
je
or
sbb
jp
push
adc
mov
push
nop
ljmp
lock
repz
cmp
pop
cmpb
jbe
adc
mov
dec
sub
clc
imul
lret
inc
subl
cmp
les
push
pop
data16
mov
mov
xor
add
mov
add
sub
jb
sub
test
add
adc
jae
cmp
sub
cmp
notrack
in
into
adc
je
jae
js
mov
fistpl
or
jne
aaa
inc
ljmp
sarb
insb
jbe
mov
inc
dec
pop
cli
pop
clc
ret
ret
mov
shl
icebp
dec
jg
std
incb
add
pop
mov
test
pop
pop
sub
ljmp
lret
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
and
and
repnz
or
dec
xor
inc
mov
pushl
mov
negl
ljmp
in
jnp
aas
jge
gs
lcall
sarb
add
add
xchg
negl
fldcw
mov
dec
add
faddl
or
fildll
clc
sti
fildll
fistps
ret
add
add
sub
add
rorl
out
fprem
fdivr
mov
xor
fdivrp
sub
pop
sub
loopne
jae
fldcw
das
clc
jmp
ret
ffree
pop
aad
pop
adc
add
push
mov
and
or
sub
pop
cmp
loope
cs
mov
sbb
and
adc
cmpsl
call
lock
mov
mov
pop
push
pop
mov
mov
pop
inc
jb
icebp
fstl
fidivl
imul
xchg
clc
orb
mov
add
lret
addr16
inc
mov
cltd
inc
mov
jnp
cmp
push
mov
cmp
jo
push
inc
test
dec
mov
mov
mov
in
nop
xchg
nop
int3
and
and
xor
add
mov
mov
test
jl
les
pushf
addb
mov
and
xchg
paddusw
push
cmp
jmp
inc
mov
pop
or
add
push
pop
push
cmp
dec
inc
aaa
inc
shlb
pop
cld
inc
lds
fldt
fcomps
outsb
filds
xchg
add
dec
ss
push
push
dec
jns
fld
pop
js
pop
addr16
inc
nop
pop
mov
ret
ret
lods
xor
sub
xor
mov
out
test
ret
testl
jmp
and
leave
nop
cmp
rorb
int
xchg
pusha
sbb
fildl
or
loope
testb
out
cmp
ja
sbb
inc
add
adc
ja
xchg
push
push
daa
ljmp
test
add
push
lgs
sahf
jno
adc
push
hlt
inc
jae
adc
mov
push
adc
orl
jp
lahf
push
imul
imul
out
divb
popf
adc
mov
pop
dec
pop
mov
or
ret
push
out
and
mov
push
mov
les
jae
cs
cld
jbe
push
adc
loopne
xchg
out
xorb
push
fs
mov
xor
pop
idivb
mov
enter
pop
push
mov
inc
cld
or
pop
mov
jns
pop
pusha
or
iret
int3
iret
divl
adc
xor
push
push
clc
ret
notl
push
pop
decb
addr16
cmp
je
dec
push
jmp
add
out
fsubs
dec
adc
rep
jne
cmpsl
je
call
lcall
add
hlt
push
popf
popa
mov
call
jg
pushf
ljmp
insb
mov
jnp
sbb
pusha
sbb
push
adc
lea
cmp
or
and
fdivrs
sbb
jne
push
jg
sub
imul
mov
cs
push
rcrl
xlat
cmpsb
push
xor
push
push
jl
mov
sbb
cmp
mov
or
xor
mov
push
fldenv
cld
push
jnp
jbe
clc
xor
cld
imull
xchg
inc
call
xor
cmp
mov
jl
mov
dec
or
xor
dec
bound
and
daa
add
subb
jbe
pusha
popa
jecxz
adc
int3
pushl
daa
mov
mov
mov
das
lea
es
xchg
mov
fsubs
hlt
imul
imull
push
xor
lock
dec
ds
cli
mov
ret
cmp
lret
lahf
movsl
dec
jecxz
or
enter
lret
pop
lret
fsts
pusha
cmpsl
das
xchg
sbb
push
dec
pop
bound
aam
or
xchg
fstl
iret
push
ds
clc
aas
sbb
xor
xor
repz
mov
mov
into
les
dec
or
pop
cmp
cli
sbb
ss
adcb
rorb
mov
adc
cwtl
addb
cmc
and
xchg
inc
ja
mov
not
jne
scas
std
inc
inc
dec
jo
add
jae
clc
ds
aas
inc
dec
je
mov
mov
pop
sub
jbe
sbb
aaa
mov
adc
push
mov
push
mov
jne
jo
add
push
jmp
shlb
add
out
jo
ret
and
aam
nop
into
mov
and
ret
inc
pcmpeqd
push
pop
inc
mov
clc
cmp
stos
dec
clc
pop
jbe
mov
outsl
lock
jne
jbe
jb
xchg
lret
fisttpl
cmp
inc
xchg
cltd
and
fidivrs
mov
sub
sti
add
mov
cmp
je
mov
jbe
push
ljmp
das
xor
xchg
mov
clc
cmp
into
filds
ret
adc
or
adc
mov
mov
jmp
push
or
and
repz
adc
insl
sub
andl
lock
mov
das
outsl
fildl
andl
das
hlt
and
lods
jmp
fidivrl
push
cmp
sub
jge
std
dec
sub
mov
adc
arpl
das
ja
std
std
mov
cmpb
or
lret
roll
xchg
loopne
mulb
mov
rep
sbb
cmpl
xchg
sub
pop
pop
mov
dec
pop
jnp
jmp
sub
xor
or
cld
cmp
ja
imul
mov
add
and
hlt
stos
jmp
in
dec
jp
cmp
mov
movsl
repz
add
pop
jne
ret
je
xchg
ret
and
mov
iret
repnz
imul
jne
xchg
std
or
xor
mov
fwait
push
add
and
xchg
xchg
mov
imul
xchg
popl
out
shlb
lret
and
scas
cmpsb
or
faddl
hlt
imul
fsubrs
shrl
jg
mov
mov
addl
hlt
xchg
loop
inc
sahf
aaa
xor
jle
push
jo
ficomps
cmpsl
pop
outsl
adc
nop
pop
jb
repz
into
sbb
mov
aad
stc
push
jne
cs
ret
sbb
add
mov
int3
in
pop
xchg
adc
lock
xor
inc
inc
adc
pop
scas
mov
cmp
cltd
fnstsw
or
jne
aas
and
fisubs
cld
call
pop
jns
mov
ja
inc
add
push
rcrb
ja
or
jmp
jecxz
imul
cltd
pop
ds
leave
adc
sbb
lods
out
dec
out
aad
add
outsl
mov
in
pop
mov
add
add
adc
jbe
je
dec
jge
mov
mov
adc
and
sbb
xor
jb
inc
fdivrl
jne
clc
adc
cvtps2pd
jp
mov
inc
iret
dec
test
stc
cmpsl
cmpsl
adc
xchg
ret
xor
and
pop
int
add
pop
pop
adcl
aaa
and
test
test
sub
mov
sahf
cld
addb
pand
insb
lds
mov
pop
dec
popa
and
push
fmuls
inc
jle
mov
pop
test
push
push
xor
dec
sub
sbb
lods
mov
es
dec
clc
dec
cld
lea
add
jmp
dec
fidivs
ret
jmp
add
outsb
add
insb
movsl
add
pop
push
lea
xor
out
push
lea
adc
push
xor
stos
or
dec
sbb
loop
decl
pop
jge
mov
neg
jmp
or
leave
mov
stos
xchg
movsb
add
jmp
pushf
gs
call
inc
dec
shr
or
jg
dec
mov
stos
cmp
jne
pop
pop
adc
sub
mov
dec
flds
push
cmp
mov
mov
jle
cli
mov
mov
mov
aad
adc
mov
ja
or
mov
pop
jle
or
sub
daa
adc
adc
jb
rorb
mov
loopne
and
jge
movzwl
sub
jmp
xchg
mov
inc
xchg
jp
jno
pusha
inc
nop
push
sub
mov
push
add
ja
movswl
sti
shl
jno
mov
add
lea
sbb
or
rorl
popf
jmp
enter
mov
dec
dec
lock
inc
dec
inc
dec
lods
or
dec
xchg
jge
add
pop
mul
pop
jno
ret
std
mov
aam
jmp
or
sbb
sbb
dec
stos
cli
sti
loope
ja
cmp
sbb
stos
jmp
fstpt
out
inc
mov
loop
push
adc
push
dec
jge
fiadds
inc
clc
dec
test
mov
testb
gs
pop
dec
add
sbb
sub
xlat
add
rorl
mov
mov
mov
or
or
call
cmp
mov
fcoms
add
je
loopne
ljmp
mov
inc
test
jne
or
jle
sbb
jne
stos
xor
int
xchg
pop
sti
add
je
inc
jne
pop
xchg
jle
jne
ret
xchg
repz
adc
shrb
sbb
mov
loope
push
cmp
pushf
fwait
mov
cld
aas
inc
js
cmp
je
push
push
cmp
xlat
pop
mov
pop
sbb
xchg
jmp
lea
or
mov
lret
ret
and
inc
add
and
pop
mov
or
adc
and
sub
inc
sub
ja
sti
or
sub
sbb
and
addr16
pop
sub
sub
shrl
sub
xor
fldenv
loopne
lret
inc
ljmp
jae
inc
mov
adc
ljmp
movsl
cmp
testl
or
cmp
cmpl
add
movb
mov
cli
inc
pop
mov
imul
adc
or
fabs
push
push
pop
std
or
and
frndint
rcr
scas
nop
or
std
fstps
mov
testb
je
fidivl
jne
aas
mov
add
inc
sub
xchg
shr
and
add
icebp
fildll
push
push
cmp
xor
stos
mov
add
jns
xor
call
jge
pushf
or
cmp
mov
jb
movb
js
decb
and
ja
jmp
push
mov
xor
jmp
mov
ret
dec
sbb
je
notl
shl
xlat
mov
fisttpl
xchg
out
stos
push
movsl
lcall
mov
scas
rorl
je
popa
sub
bswap
jge
cmpsb
push
std
fisubl
or
ds
shlb
jl
mov
cltd
std
fistpll
fidivl
repnz
add
and
loopne
push
in
insl
or
xchg
sbb
fbstp
or
mov
arpl
loope
fwait
mov
pop
sub
xlat
pop
loopne
push
popf
and
jne
dec
sub
cmp
push
sbb
and
inc
ljmp
dec
adc
sub
movb
cmpb
testl
mov
mov
scas
adc
iret
inc
pop
push
push
add
popa
inc
cmp
mov
fldcw
fwait
add
sbb
inc
mov
ljmp
lods
or
xor
adc
popa
jne
std
fistps
mov
sbb
dec
and
jne
inc
push
add
xchg
std
sub
pop
add
jg
jne
mov
sahf
jmp
arpl
add
call
loopne
adc
aas
jmp
fstpt
adc
jge
test
mov
jp
xor
test
insl
and
push
pop
add
int3
add
and
add
add
jae
fimull
inc
jmp
pop
mov
push
negl
orb
ss
push
push
inc
imul
pop
cmp
pop
nop
jb
add
jp
dec
cltd
inc
lcall
test
shr
mov
rolb
adc
pop
fistps
mov
push
cs
add
fistl
inc
addr16
mov
push
push
add
cmp
pushw
fldt
fstpl
fwait
inc
push
pushf
pop
inc
scas
mov
sti
call
fcmovnb
fldl
inc
sbb
shr
pop
sub
adc
mov
xor
inc
clc
hlt
add
adc
sub
in
dec
or
or
ds
xchg
xchg
sbb
or
cmp
inc
jmp
inc
popf
icebp
scas
aaa
icebp
lahf
jae
inc
addr16
add
lcall
ljmp
dec
cs
fildl
jmp
or
sbb
imul
hlt
push
lret
movsb
dec
dec
cmp
fbld
inc
pop
pushf
iret
das
mov
addr16
jl
nop
jb
fnstsw
mov
enter
aam
push
dec
add
jne
add
testl
mov
sub
jl
mov
popa
push
cmp
xchg
dec
mov
cld
call
popa
mov
roll
push
and
fldenv
mov
gs
testb
mov
lods
add
nop
sbb
add
pop
jecxz
std
add
insl
les
inc
lea
std
pop
mov
incb
jb
ja
xchg
ja
jo
push
jb
or
jb
sti
insb
sbb
in
sti
cmp
ja
adc
push
ds
add
inc
dec
jne
sub
dec
mov
test
or
cltd
idiv
imul
mov
repnz
aas
pusha
ds
push
jl
stc
add
popa
ret
or
xchg
xchg
sub
std
lds
mov
jge
inc
mov
nop
inc
pop
jb
push
call
xchg
and
dec
in
test
jg
mov
jns
leave
loop
psubb
cld
shl
or
movsb
aas
nop
pop
clc
and
dec
retw
out
call
iret
cmp
jl
addl
jecxz
mov
in
shl
lock
aaa
movsb
clc
lods
mov
jne
decw
mov
negl
sub
fcoms
mov
pop
sbbb
add
lea
sub
push
push
or
int3
mov
lahf
fcmovnb
push
mov
jns
mov
mov
cmc
fsubp
xchg
cmp
jb
sbb
and
and
push
sbb
out
sub
mov
sbb
mov
stc
outsl
rcrb
lret
add
add
mov
fnsave
mov
shll
pop
in
icebp
addr16
sub
push
or
sub
int
mov
push
cmp
push
adc
add
inc
fstpl
lret
xchg
cmp
and
xor
fldcw
cltd
cld
mov
call
sub
and
lea
cmp
sbb
add
inc
test
loopne
mov
mov
pop
aas
xchg
rcl
mov
add
add
loopne
push
imul
add
xchg
inc
icebp
sbb
lret
mov
jb
push
mov
dec
sub
mov
mov
xor
mov
or
sti
je
sbb
fs
inc
push
jnp
add
cmpb
jne
cmpsb
mov
int
fisttpl
push
lea
or
xchg
repnz
nop
sub
out
inc
in
add
jecxz
mov
jge
call
jecxz
sub
rcrb
ss
add
xchg
aam
mov
mov
lret
adc
rcrb
push
push
test
add
in
sbb
arpl
stos
imul
mov
xor
mov
movsb
adc
mov
push
inc
scas
je
or
mov
and
sbb
pop
cmpl
sub
js
mov
jb
push
mov
xor
ret
xor
lret
loopne
out
lcall
push
xor
add
jbe
pushf
push
popf
in
xor
arpl
aas
addr16
iret
in
test
stc
lock
movsl
jg
int3
test
or
loope
ret
je
jecxz
push
inc
cmpb
jne
push
or
enter
mov
sub
jne
pop
testb
jns
pop
add
leave
xor
xor
mov
ud2
mov
fdivrl
sbb
or
nop
lods
jns
mov
pop
mov
ja
jge
pop
incl
pop
sbb
lcall
push
jg
push
imul
cmp
and
fmull
sub
sbb
xchg
jns
adc
sub
mov
push
mov
pop
icebp
xchg
mov
jne
mov
xor
xchg
fiadds
sbb
cmpsl
cmp
xchg
mov
sub
pop
and
mov
clc
or
aas
xor
leave
or
add
out
add
add
or
or
stos
fnstenv
jnp
hlt
addb
jo
add
scas
test
inc
imul
xchg
mov
sbbb
pop
add
and
loop
ror
mov
cltd
xchg
xor
notb
sbbb
mov
jl
popf
dec
push
lea
or
scas
fldenv
xchg
and
pop
adc
jo
imul
and
sbb
xor
mov
push
aam
mov
jnp
add
test
xchg
xor
add
dec
in
leave
mov
repz
je
add
aad
or
xchg
push
mov
nop
insl
mov
or
cmp
dec
cs
nop
push
daa
xchg
xchg
inc
ret
xchg
add
mov
push
xor
and
cmpl
ret
and
add
adc
xchg
dec
out
and
add
push
jmp
sub
je
pop
je
gs
sti
pusha
jmp
cmpb
dec
mov
jns
popf
test
sub
cmp
xor
jne
rolb
jmp
sub
cmp
xor
mov
xor
pop
mov
ret
pop
adc
pop
or
dec
push
data16
or
cmc
or
or
ja
mov
jle
or
or
fcomip
fcoms
call
mov
add
test
sbb
lret
in
dec
shlb
sub
lea
enter
and
cmp
stos
daa
jns
add
lds
xor
fnstenv
jae
lret
pushf
inc
jmp
mov
mov
and
je
xor
inc
sahf
fildl
push
in
or
stos
add
out
jmp
test
xor
cmp
ljmp
adc
shrd
jge
dec
cs
mov
cmp
add
aaa
or
cltd
push
pop
dec
icebp
inc
data16
cwtl
je
inc
cwtl
jmp
jne
mov
test
cmc
jmp
decl
mov
mov
sub
or
mov
adc
cli
clc
lcall
and
fstl
dec
lods
pop
filds
das
push
dec
adc
push
adc
add
or
cmp
into
adc
dec
add
int3
sahf
push
sub
mov
ret
jne
or
mov
xchg
stos
add
imul
mov
mov
or
adc
push
pushf
dec
cmp
xor
daa
mov
xchg
pop
or
fistpll
fdivrs
je
mov
cmp
mov
idivl
cld
std
or
jnp
cwtl
rcl
xor
jmp
mov
adc
mov
sti
arpl
push
pop
ja
xor
ret
pmaddwd
xchg
mov
shrb
jae
sub
mov
ja
outsb
sbb
fisttps
rolb
xor
ret
add
xchg
in
rcrb
mov
add
push
iret
jmp
scas
cmp
inc
xor
inc
repz
scas
les
push
or
push
lea
jae
nop
or
pop
ss
add
or
xor
xor
mov
jo
loope
adc
fwait
pop
inc
cld
mov
inc
push
cmp
jne
incl
cs
leave
dec
out
mov
or
inc
notrack
sub
je
dec
je
sub
decl
je
jmp
mov
jmp
push
push
push
fcmovb
jle
push
ja
push
inc
mov
jle
fadd
add
jecxz
pop
mov
shlb
add
cmp
gs
push
hlt
mov
add
jl
pop
inc
mov
icebp
or
in
mov
xchg
mov
or
adc
sub
mov
pop
popa
or
mov
mov
bound
push
shr
and
sub
test
mov
cmp
cmp
pop
jno
sarl
sarb
aas
cltd
xor
sub
add
iret
add
fs
push
jo
push
cmpl
push
adc
pop
push
mov
push
dec
cld
gs
mov
mov
fadds
pop
shl
push
push
and
push
sbb
or
test
mov
clc
sahf
dec
mov
xor
nop
push
dec
out
ds
xchg
mov
cwtl
push
mov
dec
scas
insb
mov
lea
adc
cmp
sahf
rcr
and
sbb
mov
pop
ljmp
cmp
mov
hlt
fiaddl
mov
fistl
sbb
and
xor
repnz
out
into
add
lock
clc
xchg
pusha
shll
imulb
jb
and
pop
out
out
ret
push
mov
and
and
call
dec
jmp
aaa
int
and
repnz
sbb
aaa
into
test
lock
insl
lods
or
aad
lahf
xor
push
shll
mov
jmp
cmpb
ja
filds
push
inc
inc
sub
push
fstps
out
mov
dec
shl
add
cmpb
shlb
jle
and
fs
jne
testb
movb
or
aas
or
popa
adc
daa
or
cmp
aaa
sub
xor
cmp
movsl
bound
and
jmp
out
jp
or
mulb
jne
sarl
stos
pop
jecxz
fsubrl
fildl
daa
pop
fcmovnbe
fcomp
das
ficomps
mov
push
fsubs
shlb
pop
lods
add
mov
repnz
out
dec
in
loope
cltd
add
sub
fs
ret
pop
push
xchg
adc
or
dec
push
adc
fildl
lock
mov
imul
mov
adc
and
or
sub
enter
movb
sub
pop
add
fists
pop
insl
imul
inc
inc
add
mov
push
or
or
and
je
orl
cmp
add
pop
inc
or
jb
inc
add
and
test
and
loope
mov
test
or
jne,pt
pop
imul
scas
mov
or
add
push
lret
add
into
or
push
pop
mov
cwtl
arpl
pop
push
rclb
je
das
xor
nop
sub
loope
or
cmp
mov
add
aam
es
psubsb
add
push
jno
insl
adc
movsb
cmp
mov
gs
mov
cmp
ret
xchg
icebp
sub
shlb
negl
mov
jb
sbb
stos
fstpl
fwait
adc
xchg
fldpi
or
adc
cli
adc
ss
add
inc
jecxz
xchg
lahf
push
dec
push
pop
xor
push
rcrb
dec
mov
sub
jb
adc
jle
or
xchg
xor
pop
es
pop
fwait
mov
pop
inc
lea
and
push
hlt
mov
rcrl
jne
pusha
add
push
loop
mov
lcall
add
mov
pop
pop
addl
lahf
lock
adc
adc
add
cmpsb
or
mov
push
mov
aam
and
test
push
add
iret
mov
sbb
mov
pop
dec
fmull
push
push
and
mov
inc
inc
dec
lret
dec
adc
fs
or
daa
adcl
fiadds
scas
rorl
or
inc
add
pop
add
mul
xchg
push
in
adc
xchg
in
add
loope
dec
jb
inc
xchg
call
int3
arpl
inc
or
aas
mov
dec
or
lods
jle
pop
aaa
mov
shll
jge
loopne
out
pop
je
xchg
cmp
insb
push
orb
add
loopne
mov
push
adc
xchg
in
add
lcall
mov
pop
sbb
lods
sub
push
sbb
xchg
and
cmp
sub
insl
push
cmpsl
and
mov
or
pusha
xor
ja
orl
sbb
cmp
add
mov
and
jle
dec
testb
pop
sti
mov
outsl
push
dec
jne
push
push
adc
inc
push
sbb
jns
lods
in
mov
push
inc
xor
or
push
in
repz
mov
mov
xchg
out
mov
sbbb
addb
sub
ja
rcrb
mov
jmp
adc
das
mov
sbb
je
scas
xor
sbb
mov
jle
stos
out
mov
inc
jne
push
sbb
mov
mov
add
lock
and
or
add
jle
mov
mov
xchg
jne
dec
mov
arpl
cmp
adc
aas
movsb
dec
add
jmp
mov
cmp
and
add
push
xor
shlb
push
xor
cmp
movsb
jns
mov
add
cs
aaa
and
fisubrl
mov
cmpsb
or
add
push
sub
pop
mov
and
popa
and
cmp
test
cld
push
mov
int
test
jge
jecxz
inc
cmp
loopne
add
pop
out
mov
sti
sub
test
dec
or
pusha
int
and
xchg
lock
scas
xor
in
in
mov
popf
cmpsl
dec
mov
xor
push
stos
xor
mov
inc
pop
rep
add
div
test
or
sbbb
mov
lea
sub
pusha
mov
roll
fmuls
add
pop
add
jecxz,pn
bound
dec
rcrl
sub
add
dec
add
and
pop
in
xchg
fidivrs
es
pop
sbb
or
movb
and
aam
mov
xor
mov
aaa
add
les
add
push
lea
xor
push
test
push
mov
cwtl
fildl
cs
or
cmp
sahf
sbb
dec
imul
sbb
test
jb
push
or
fdivrl
imul
push
std
hlt
xchg
insb
jle
inc
pop
adc
dec
les
jl
xchg
push
ljmp
inc
push
cmp
cld
adc
pop
scas
jno
dec
xlat
or
adc
push
jge
lods
xchg
rorl
mov
cmpsl
sub
jmp
jo
testl
fisubl
inc
dec
or
add
int
test
inc
mov
jno
mov
ja
mov
stos
pusha
test
ja
imul
shll
test
jne
xchg
aas
mov
inc
inc
fwait
inc
jnp
lea
sbb
or
adc
dec
pop
jl
pop
es
or
add
fisttps
cmp
xor
jg
xchg
dec
stos
pop
lock
mov
xor
dec
ret
jne
sbb
and
mov
lods
shr
sbb
test
loop
in
or
enter
pop
nop
dec
fcmove
decb
push
test
add
sar
lret
mov
dec
sub
jb
xchg
fsubrp
sub
pushf
and
lea
orb
or
dec
sti
jae
pop
adc
popf
sbb
nop
pop
cmp
rcll
clc
ret
or
adc
or
fcoml
pop
in
lret
bound
mov
or
js
lahf
stos
scas
in
push
loopne
dec
dec
dec
loopne
popf
sub
mov
dec
roll
js
fwait
add
rcrb
and
and
les
mov
lea
roll
push
jmp
iret
or
add
test
jae
and
cmp
in
stc
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
xchg
gs
fidivs
pop
or
pop
xchg
gs
or
sub
xchg
mov
push
mov
pop
shlb
nop
fs
add
nop
adc
addr16
jmp
loop
das
push
mov
lahf
cmovns
dec
inc
addb
sbb
or
sbb
ror
or
or
rcl
arpl
push
mov
out
out
dec
decb
insb
sbb
lea
sbb
jl
mov
jae
cmp
xor
or
enter
cltd
std
mov
shll
lods
mov
daa
fnstenv
outsb
fdivrs
sub
cltd
popf
fsts
sbb
sbb
movsb
test
add
leave
addr16
xchg
dec
nop
and
jecxz
leave
bnd
nop
mov
dec
xchg
addb
aad
jb
adc
aas
push
pop
cld
std
rolb
or
mov
dec
jae
jae
jbe
jo
cmp
xor
lods
hlt
add
pop
lock
dec
js
test
xchg
mov
sub
mov
mov
cld
sbb
into
mov
scas
cmpsl
jae
jg
cmp
mov
jl
xor
jnp
cmp
rcrb
and
enter
or
jmp
inc
mov
xor
inc
push
sbbb
inc
mov
cwtl
push
sbb
adc
pop
cmp
inc
or
adc
or
adc
in
inc
loope
adc
inc
or
mov
mov
mov
leave
push
js
mov
xchg
daa
pop
push
les
mov
popf
dec
outsl
mov
hlt
xor
sbb
mov
lcall
clc
and
push
adc
sbb
add
add
jne
cmp
mov
fucomip
sub
sub
clc
jne
sub
xor
loope
nop
pusha
adc
mov
pop
inc
lods
pop
adc
call
xor
and
and
test
xor
push
leave
and
sbb
push
pop
dec
add
repz
and
cmpsl
mov
sub
or
mov
jns
test
into
push
adc
jno,pt
shll
pusha
call
adc
add
dec
xchg
inc
les
add
lahf
fstpt
dec
adc
aas
or
sub
and
dec
jns
dec
or
inc
mov
ret
add
add
push
ret
add
in
je
sbb
mov
and
mov
jle
leave
cmp
daa
mov
or
ja
cltd
sbb
jnp
jle
adc
pushf
sarb
sbb
inc
pop
jg
mov
scas
das
adc
out
push
adc
jl
mov
and
cmp
inc
jl
cmc
inc
inc
inc
jge
rcl
bound
push
daa
jno
xorl
inc
movsl
lds
cwtl
sbb
mov
fisubs
cmpl
sbb
sbb
leave
aam
or
imul
push
arpl
in
xor
loopne
xor
fwait
aas
adc
rcrb
fildll
push
in
rep
cmc
push
cli
mov
jg
cmc
or
jbe
pop
xchg
or
or
movsl
test
movl
or
iret
jnp
sub
es
jge
pop
mov
mov
loop
scas
pop
aam
ret
sub
fsts
fildll
and
pop
and
nop
sbb
dec
pop
shrb
outsl
lea
bswap
jb
push
adc
in
es
out
pop
push
inc
push
adc
jmp
add
xchg
lahf
sbb
jbe
mov
cmp
cmpl
scas
jae
lock
xchg
test
sbbl
pop
sbbb
add
sti
movl
and
mov
sub
dec
mov
xor
call
jl
xor
adc
adc
aam
test
sbb
adc
cmp
andb
inc
lahf
jge
punpcklbw
and
xor
ljmp
je
push
rorl
lahf
js
jge
jb
push
mov
and
adc
push
aad
or
mov
mov
mov
jmp
add
push
push
or
clc
sub
ss
and
fwait
inc
inc
add
push
nop
js
ret
sub
sub
cmp
jbe
xchg
and
or
add
mov
popa
mov
inc
daa
xchg
push
or
jno
cmc
cwtl
mov
roll
dec
fisubrl
add
cmp
sub
jne
jle
cmp
subb
push
hlt
dec
rcrb
and
ds
xchg
xor
dec
repz
int
ret
pop
idivl
sub
dec
imul
mov
dec
js
xor
out
aaa
push
mov
sub
jb
inc
mov
sub
std
inc
sti
stos
sbb
loope
jne
dec
es
inc
pop
mov
jne
or
out
clc
aam
clc
pop
ja
pop
xor
inc
lahf
addr16
fdivr
imulb
cmp
push
mov
adc
dec
jne
sub
mov
dec
data16
leave
data16
mull
ds
mov
or
ljmp
or
or
xchg
mov
push
adc
add
add
sti
mov
pop
mov
jno
inc
insb
lock
pop
mov
push
repnz
popa
mov
les
inc
cmp
test
dec
adc
sbb
push
add
jo
pop
scas
sti
shrl
pop
sbb
cmp
cmpl
xchg
rorl
movsb
test
addr16
outsl
cld
jne
jmp
push
sbb
xchg
shlb
add
arpl
jbe
push
add
out
mov
dec
jne
push
scas
push
add
cmpb
inc
test
decl
push
loopne
jle
dec
add
adc
iret
push
lock
add
jge
mov
sbb
je
jo
ja
inc
jb
cmpl
sbb
ficomps
mov
mov
mov
mov
push
mov
enter
insb
das
mov
push
fmull
lret
adcb
inc
loopne
sahf
ja
mov
and
jns
in
fcomp
mov
sbb
fdivrs
jg
sub
and
mov
mov
add
int3
mov
sub
jge
enter
sbb
and
dec
dec
rcrb
or
sbb
nop
ja
les
ret
rolb
shl
fs
sbb
clc
mov
iret
jle
cld
push
mov
add
aaa
lock
test
or
and
repnz
inc
sub
icebp
and
lret
rol
push
insl
das
fs
jg
xorb
fs
xlat
add
popa
insl
pop
jo
movsb
push
in
xchg
push
loope
cmp
sbb
daa
mov
sub
int
push
cmp
fldt
shll
out
in
xchg
jne
add
aam
inc
or
je
xchg
jo
rorb
adc
nop
ret
sub
adc
daa
and
sub
xchg
pop
inc
les
or
mov
push
stos
jge
ss
lret
inc
adcl
pop
mov
fmuls
pop
sbbb
daa
or
pop
clc
push
test
pop
and
add
daa
lods
or
inc
sub
jae
test
repnz
fs
in
aaa
mov
int3
mov
in
icebp
movsl
mov
pop
daa
cld
cld
push
mov
mov
mov
enter
and
adc
fmuls
mov
dec
sbb
mov
insb
jg
aam
dec
or
adc
sbb
ret
rol
add
rcrl
aaa
lcall
inc
repz
movsl
dec
jmp
mov
daa
adc
sub
inc
push
fsubrs
push
add
std
sub
dec
and
pop
xor
pop
or
push
dec
push
pop
lret
clc
lahf
or
imul
gs
jo
push
adc
xchg
inc
js
cmp
inc
push
clc
in
push
test
pop
dec
ret
xchg
fsubrs
das
incb
js
xchg
enter
mov
les
out
push
or
sbb
les
cmp
jne
sti
and
mov
test
or
ret
dec
mov
or
stos
dec
mov
int3
xchg
adc
xchg
popa
lds
xchg
cmp
mov
in
xchg
add
jmp
data16
repz
loopne
ja
mov
push
sub
call
jb
pop
lret
mov
or
mov
lea
out
xor
test
mov
or
leave
or
enter
mov
in
xchg
pop
xchg
and
inc
or
test
inc
orb
inc
cmp
adc
fsubrl
jns
roll
xor
cmp
aam
inc
cmp
in
jp
test
clc
and
add
pop
adc
sbb
xchg
jb
and
bound
fcoms
aad
insb
or
mov
cmp
movsl
cmpsb
icebp
adc
addr16
sub
mov
enter
pop
hlt
pop
pop
or
and
mov
sbb
inc
pop
adc
loop
mov
clc
mov
jnp
ja
jnp
loop
je
push
sbb
aam
inc
clc
mov
movsb
pushf
out
xchg
ret
popa
mov
or
sub
sbb
rolb
imul
lds
jns
cs
inc
mov
xor
add
aam
xchg
ja
imul
cld
cmc
dec
cmp
jnp
fstps
add
dec
sbb
pop
and
cmpl
xchg
sbb
shr
scas
inc
or
xor
lret
sbb
outsl
rcll
incl
scas
jno
push
jae
add
inc
cmp
sub
roll
sub
add
ljmp
or
cmp
enter
mov
and
fwait
shlb
ja
leave
adc
or
dec
out
iret
add
inc
xor
int
enter
or
adc
add
jmp
and
dec
insl
mov
rorl
pop
adc
cwtl
sub
push
adc
mov
adc
add
inc
bound
push
dec
cmpsl
add
cmp
inc
mov
cmpsl
inc
dec
pusha
adc
shlb
adc
cmp
cmp
insb
pop
jne
cmp
out
and
inc
ret
xchg
subb
jg
int
add
nop
push
rcr
fnstcw
and
pop
mov
pop
out
push
inc
nop
cltd
lods
mov
jmp
test
rol
cmp
int
cmp
or
sub
cwtl
gs
shrb
sub
negl
cs
int
fwait
add
inc
daa
cld
xor
push
mov
dec
rcrl
in
in
int3
xchg
lods
imul
insb
xchg
lods
imul
mov
dec
lods
imul
inc
pushf
pop
fsubrl
shll
call
push
mov
insb
dec
mov
scas
hlt
inc
je
insb
mov
jle
fs
mov
bound
in
pushf
insb
iret
mov
es
inc
push
adc
cmp
fs
test
cmp
inc
xor
ret
outsb
nop
shlb
pop
sub
rcrb
inc
and
mov
movsb
or
clc
inc
nop
out
jae
add
adc
inc
fisubl
insl
adc
push
or
enter
mov
les
mov
mov
mov
xor
push
inc
pop
hlt
je,pn
frstor
int
sbb
in
xchg
call
xchg
inc
rolb
out
sbb
push
mov
int
insl
aam
hlt
shl
inc
xorl
inc
les
imul
mov
lods
mov
ss
cmpsb
mov
out
inc
xchg
shrb
mov
outsb
shlb
iret
fiaddl
push
mov
adc
sub
les
add
mov
xchg
out
ljmp
ds
mov
sbb
movsb
jns
xor
xchg
adc
cmp
int3
jl
divb
jae
mov
sbb
popf
push
push
cmpsb
jge
sub
pop
enter
or
inc
add
and
movsb
adc
xchg
xchg
nop
test
xor
sti
leave
and
cmp
in
and
jno
mov
in
cmp
subl
adc
fiaddl
or
add
sub
mov
mov
cmpxchg8b
mov
push
mov
inc
dec
mov
mov
fisttps
sub
out
js
inc
xchg
jmp
je
inc
lea
cmpl
add
add
sub
data16
adc
mov
iret
fs
ret
dec
sbbb
pop
or
sbbl
mov
and
outsl
leave
or
and
insl
mov
adc
outsb
xorb
dec
sbb
cmp
addr16
push
adc
adc
mov
adc
or
mov
in
enter
loope
add
and
and
mov
xchg
add
pop
xchg
push
loop
and
das
pop
clc
clc
lea
jns
jbe
aas
cmpb
cmc
sbb
adc
mov
std
push
loop
or
clc
xlat
roll
ret
or
orl
or
pushf
sub
add
xor
lea
jb
jecxz
loop
jb
sbb
add
add
mov
pop
xor
jecxz
push
add
orb
inc
jns
out
pop
or
stos
adc
insb
or
enter
pusha
shrl
xor
mov
outsb
arpl
mov
ret
push
movsb
in
add
jo
clc
flds
and
movsb
jg
jb
repz
cmp
xchg
lods
lods
sub
pop
jb
and
leave
and
leave
and
push
and
pop
enter
leave
fs
insb
shlb
xchg
cmp
mov
and
loopne
dec
sahf
xchg
dec
fcompl
loopne
loope
in
enter
mov
out
and
in
addr16
shr
hlt
or
jecxz
clc
lea
call
pop
add
inc
and
inc
push
rclb
or
dec
add
and
inc
fs
jne
dec
ds
enter
imul
fs
pop
outsb
dec
jb
pop
outsl
jb
fnstsw
inc
insl
jo
inc
jb
insl
push
je
push
push
and
inc
shlb
in
xor
mov
fistpll
inc
jae
push
inc
jns
pusha
xchg
nop
add
or
push
das
or
dec
cmp
cld
mov
add
xchg
adc
add
and
scas
popf
testb
pop
adc
sbbb
das
leave
or
push
outsb
out
call
sbb
add
repz
inc
je
inc
add
pop
add
shll
je
imul
fwait
lods
cmp
sub
push
dec
jno,pt
mov
adc
dec
dec
add
ret
nop
cmp
pop
xor
and
or
jae
fwait
mov
out
fsubrs
scas
mov
inc
jle
inc
fsubrs
sbb
mov
scas
inc
pop
and
jmp
or
in
jb
mov
jb
inc
dec
pusha
inc
inc
jb
cmp
loopne
loopne
shlb
adc
push
inc
jb
lret
xchg
push
addr16
cmpsl
movl
nop
mov
xor
adc
push
sub
or
add
cmp
dec
outsl
sbb
sbb
das
je
je
xor
sahf
inc
jb
sbb
fsubl
add
inc
fcoml
or
jnp
insl
jo
xchg
inc
in
inc
and
inc
in
dec
mov
loop
sbb
ds
push
outsb
pushf
arpl
jo
or
adc
jns
or
push
mov
dec
add
xor
mov
aam
cld
inc
push
rorl
in
cs
pop
repnz
movsb
out
pop
in
in
add
in
pop
out
lret
stos
add
xchg
cmp
sub
inc
or
call
xchg
dec
repnz
mov
pop
sub
mov
sbb
pop
jb
push
mov
jo
add
and
jmp
or
or
jb
jns
jmp
out
pop
xor
icebp
pop
imul
outsb
nop
icebp
imul
out
icebp
xor
dec
daa
clc
in
test
jmp
pop
push
scas
loope
out
in
and
dec
je
sbb
dec
sbb
gs
repnz
dec
ja
add
loopne
or
mov
pop
ss
adc
jmp
imul
insb
inc
clc
xor
hlt
mov
ljmp
inc
dec
lock
and
mov
in
enter
mov
jle
movsb
hlt
inc
adc
mov
jnp
jae
test
roll
pop
in
adc
add
dec
mov
enter
jg
int3
or
jae
mov
xor
fmul
int
mov
inc
xor
inc
je
daa
nop
jle
icebp
scas
rcrb
xchg
dec
loopne
or
sbb
or
mov
mov
fists
xchg
jp
in
sub
or
inc
ret
insb
psubq
je
adc
mov
xchg
add
pusha
jl
pop
jns
adc
insb
mov
and
mov
cmp
adc
adc
xchg
sbb
jmp
inc
jl
add
push
dec
mov
cmp
lcall
cmp
repnz
cmp
inc
daa
in
data16
mov
push
pop
pop
add
dec
lock
roll
sarl
lods
sbbl
dec
ja
jge
sub
incl
fwait
std
and
add
xchg
ret
xchg
scas
jecxz
mov
jmp
inc
mov
sub
ret
pop
enter
in
pop
mov
call
call
testb
jecxz
ret
inc
aaa
push
add
pop
test
data16
adc
rcll
jge
and
test
cld
xchg
pop
les
adc
mov
dec
xchg
clc
jmp
repz
and
pushl
jo
lock
or
mov
lea
or
orb
jbe
mov
xchg
lea
outsb
or
inc
sub
inc
pop
lcall
sahf
push
jmp
inc
lea
imul
dec
repz
dec
jnp
aam
mov
jns
subb
in
test
insb
mov
jb
cmp
push
insl
xchg
outsl
ret
out
add
mov
push
iret
push
xchg
xor
adc
fidivrs
pop
push
movsl
xor
push
aas
jmp
or
push
ret
sbb
jne
enter
or
inc
fmuls
imul
pop
fistpll
div
and
pusha
jmp
dec
pop
pop
dec
jle
pushf
add
or
adc
sbbl
daa
jnp
clc
call
push
xchg
jp
pusha
inc
loope
fcoml
je
ret
sbb
movsb
loopne
mov
pop
clc
fimull
jb
aaa
add
sahf
mov
sub
or
adc
push
inc
mov
in
loopne
xchg
andl
cmp
loopne
fisubrs
rclb
or
mov
movl
mov
insl
adc
out
inc
das
test
inc
xchg
dec
call
in
in
ret
outsb
pop
sub
call
add
lahf
movsb
xchg
jmp
push
fistpl
shlb
call
pusha
fiaddl
add
cmp
call
lcall
mov
adc
fwait
stos
test
sbb
push
lock
dec
and
dec
incl
adc
cmp
xor
inc
adc
adc
xor
enter
sub
mov
sub
shr
push
imulb
jmp
cmc
pop
push
and
daa
clc
lock
je
pop
jne
imul
and
mov
or
or
jo
es
addr16
xchg
jns,pn
div
lock
push
xor
xor
xchg
inc
push
mov
cmp
fadd
or
flds
stc
in
xchg
ja
nop
out
mov
mov
ds
xor
pop
jo
adc
and
imul
and
dec
sub
jo
cmp
lds
or
dec
cwtl
in
das
es
push
fidivrl
pop
adc
xchg
push
xchg
xchg
jae
and
sub
test
les
sub
or
stc
push
mov
push
push
mov
mov
pop
clc
jne
xchg
xor
lret
in
jae
push
push
pop
loopne
mov
or
cmpsl
popa
mov
and
mov
call
sub
xlat
popa
sbb
or
inc
andl
mov
or
jmp
sbb
shrb
or
imul
cmp
jmp
or
dec
in
jb
add
les
loop
dec
adc
adc
shll
fs
pop
ss
cwtl
mov
std
dec
sar
cmpsb
xor
es
push
cld
filds
mov
push
and
data16
cmpb
or
adc
shlb
call
xlat
pop
das
fcomps
mov
sbb
mov
sub
adc
cld
add
push
and
in
fisubrl
pop
call
frstor
fwait
xchg
cmp
or
xchg
fistpll
adc
fidivrl
addr16
fs
rcrl
jmp
inc
add
mov
pusha
jl
xchg
and
or
sbb
xchg
psubw
cmc
mov
jmp
testb
jmp
stc
aam
push
mov
inc
xchg
jmp
adc
jecxz
loopne
sub
adc
lea
data16
daa
or
adc
imul
lcall
inc
push
in
clc
push
xlat
sbb
adc
lcall
adc
fcomip
or
sti
std
jg
sub
test
jmp
lret
mov
lea
sbb
test
push
sbb
pop
adc
mov
cmp
pop
lock
cmp
inc
push
mov
add
inc
imul
adc
mov
and
dec
push
add
in
shr
xchg
sub
in
cmp
and
pop
sub
aam
mov
in
inc
subl
add
xchg
aam
jmp
outsl
ljmp
outsl
addr16
hlt
test
call
mov
inc
scas
cmpsl
mov
xchg
jl
add
add
sahf
dec
arpl
inc
lcall
pop
shll
loop
insl
and
lods
pop
ss
dec
insb
add
adc
imul
and
ljmp
imul
movsl
outsl
aas
sub
mov
mov
mov
fldenv
test
out
push
sar
cmp
pop
popl
clc
inc
leave
fstp
push
push
push
add
test
in
js
jo
pop
repnz
xchg
mov
cmpl
adc
mov
push
sar
test
cwtl
je
dec
je
jmp
outsl
mov
lahf
or
test
push
push
mov
cmp
jno
mov
test
mov
lods
movb
mov
mov
es
jb
inc
sbbb
in
dec
hlt
push
xchg
add
rcl
mov
shrb
addb
mov
fldcw
xchg
mov
inc
fstp
sub
nop
stos
in
pop
xchg
fwait
mov
mov
inc
xchg
jns
mov
fbstp
dec
pop
adc
push
push
sbb
xorb
jp
pop
jmp
jmp
fisttps
in
add
pop
int3
jae
aaa
mov
push
pop
and
stos
push
and
loope
fadds
and
or
inc
in
fucomi
icebp
aaa
addr16
jb
mov
or
add
loopne
jmp
pop
jge
and
insl
leave
adc
arpl
mov
jmp
rcpps
add
dec
or
add
push
lcall
andl
shll
outsl
push
sbb
nop
pop
push
je
cltd
nop
add
pop
push
pusha
and
add
inc
add
push
dec
adc
or
dec
push
dec
and
daa
loope
cld
mov
loope
in
hlt
or
add
sub
idiv
or
adc
pop
xor
pop
dec
cwtl
cmpsb
inc
dec
pop
cmc
cmpsl
int3
test
mov
jp
mov
adc
mov
pop
mov
push
nop
add
add
mov
xchg
aas
add
xchg
pop
pop
out
adc
out
add
std
andb
add
cmp
sub
add
pop
sub
cmpsb
jg
adc
adc
adc
mov
and
nop
push
call
sub
inc
add
or
push
push
xor
fisubs
pop
das
loop
jmp
adc
push
pop
mov
nop
xor
imul
xor
push
adc
add
enter
mov
add
inc
inc
and
adc
xlat
mov
and
xchg
sbb
pop
cltd
orl
iret
pop
add
push
push
adc
add
aaa
mov
adc
sbb
inc
add
mov
push
sbb
inc
mov
leave
adc
or
add
in
stc
ret
les
and
bound
pop
movups
lock
inc
and
repnz
loop
popa
dec
call
out
adc
aaa
mov
loopne
nop
adc
sbb
inc
clc
mov
lret
inc
fstl
xchg
adc
bound
mov
call
adc
in
call
mov
rcll
sbb
jle
mov
dec
sbbl
outsb
sub
inc
add
repnz
imul
or
imul
xor
or
push
mov
cmpsb
imul
jae
pusha
lcall
or
stos
adc
adc
jbe
rclb
lock
mov
repnz
lds
sub
sub
loopne
mov
push
xor
and
sub
mov
pusha
push
xor
push
sbb
and
add
jo
ljmp
bound
sahf
jecxz
xchg
or
mov
pop
lods
or
lods
les
xor
cli
adc
and
lcall
jne
or
stos
rorl
xor
fadds
loop
pop
xchg
aaa
and
sub
push
movsl
jmp
and
mov
mov
enter
add
inc
test
lds
jmp
sub
sbb
inc
stc
adc
and
lds
sub
filds
pusha
and
xchg
sbb
aas
mov
rcll
imulb
adc
mov
mov
loopne
jecxz
inc
inc
nop
lock
pop
jle
add
mov
or
and
pop
fimull
inc
lock
insb
test
or
dec
dec
pusha
int3
rclb
lahf
sbb
js
out
inc
pusha
aaa
cmp
and
pop
jg
das
outsl
mov
jmp
testl
push
or
pusha
orl
add
les
cld
dec
shll
inc
adc
dec
push
test
scas
fsts
popa
lcall
adc
clc
add
adc
and
pop
mov
add
or
cmp
cmp
fstps
xchg
sbb
dec
adc
push
out
sbb
inc
scas
rcrl
sub
fildll
pop
fcomps
sub
sbb
ret
xor
sbbb
dec
addl
mov
and
mov
lods
aad
loopne
mov
lock
sbb
sbb
nop
and
arpl
inc
mov
out
adc
cmpsb
imul
imul
push
loop
dec
sarl
into
rorl
sbbb
push
xor
push
sbb
mov
fisubrl
sbbb
jbe
push
inc
dec
jmp
adc
nop
imul
cmp
pop
inc
shll
and
xor
jmp
cmp
aam
pop
xor
mov
sub
sub
add
rcll
clc
imul
adc
inc
out
mov
mov
add
insl
call
jecxz
pop
leave
add
or
test
les
add
bound
adc
pop
pop
xor
jns
adc
dec
add
adc
pusha
inc
pop
add
push
xchg
adc
clc
decb
pop
jle
fwait
cmpsb
imul
leave
sub
call
std
gs
push
mov
bound
and
filds
inc
shrb
pop
fistpl
add
fld1
add
in
jle
lcall
inc
cmpsl
jge
add
sbb
mov
inc
or
push
sub
pop
push
mov
xchg
and
hlt
add
ja
stc
fildll
inc
lods
sub
and
imul
fcompl
fbld
mov
sub
inc
repnz
aad
mov
pop
sub
aaa
insl
shll
pop
inc
lcall
daa
mov
or
dec
roll
fdivp
or
scas
inc
es
fistpl
flds
mov
push
sbb
sub
aad
les
inc
in
icebp
and
test
mov
pop
enter
push
sub
stos
bound
ds
adc
xor
and
pusha
dec
aam
mov
cwtl
imul
xor
jo
dec
sbb
cmpsb
xor
jp
into
push
fcoms
shrb
clc
pop
sbb
cltd
dec
roll
fsubs
cmp
push
arpl
insl
add
lea
gs
or
test
arpl
xchg
outsl
xchg
fildll
fisttpl
test
fildl
sbb
add
add
adc
and
jg
cmp
lock
dec
inc
jbe
xchg
inc
pop
inc
in
sbb
ss
xchg
add
invd
dec
adc
setbe
loopne
push
leave
sbbl
push
pusha
in
or
jecxz
enter
jno
dec
cmpsb
shl
loopne
adc
cld
push
jb
pop
lret
or
dec
push
cmpsb
push
sub
mov
jecxz
stc
mov
mull
adc
and
hlt
push
ret
inc
push
mov
lods
adc
push
lock
es
int
push
cmpsl
and
or
xchg
sbb
sbb
leave
fcompl
pop
lcall
dec
sbb
push
scas
shrb
imul
xorl
lcall
jno
sbb
cmpsl
pop
inc
pop
xchg
adc
jb
fisttpl
imul
push
or
pop
and
popa
mov
or
or
insl
xor
enter
push
mov
in
adc
jb
mov
adc
ret
or
adc
inc
sbb
push
xchg
pop
jl
and
sbbb
jns
pop
push
popf
pop
pop
imul
or
xchg
stos
inc
mov
push
inc
daa
shr
push
std
jae
ret
push
sub
orl
mov
orl
adc
xchg
fsubrl
pop
leave
jns
dec
sbb
lods
mov
or
xchg
xchg
or
or
or
pop
dec
and
and
dec
leave
lea
test
xor
js
push
mov
push
xor
xor
add
lock
xchg
sbb
add
push
scas
nop
and
fildll
push
jns
cmp
fildll
sub
inc
and
inc
dec
fildll
int
inc
cs
pop
push
cmp
or
xor
pop
outsb
andb
nop
pop
and
push
inc
and
lcall
or
leave
mov
iret
adc
in
adc
and
push
je
frstpm(287
fsubs
ficoml
cwtl
pop
out
adc
pop
push
enter
xor
add
insl
push
and
aas
mov
pop
adc
adc
jae
pop
adc
ss
into
pop
in
xchg
add
jle
shrb
sub
and
xor
inc
pop
imul
imul
orl
push
pusha
push
icebp
fildl
lods
pop
mov
jnp
xchg
ss
sarl
mov
sub
dec
mov
lods
lods
in
imul
mov
sub
mov
pop
adc
ljmp
jae
mov
mov
addb
sbb
jo
mov
and
fisubrl
inc
pop
mov
inc
pop
dec
repnz
popf
sahf
sbb
pop
push
mov
mov
test
scas
dec
je
and
inc
pushf
shlb
cld
jae
fidivl
cmp
jmp
inc
lock
psubsb
add
add
xchg
mov
pop
mov
pop
sarb
inc
mov
ret
xor
loopne
or
inc
add
jno
add
cld
adc
idivl
mov
push
add
add
sub
xchg
and
daa
inc
cmp
or
mov
push
cwtl
cmp
mov
inc
and
mov
or
rcll
or
pop
in
add
sbb
cmp
or
xchg
rol
or
cmpb
pop
call
sub
mov
insb
pusha
lods
jo
pmuludq
adc
inc
sub
pop
push
or
in
out
sti
or
ret
mov
xchg
dec
imul
sub
imul
xchg
insb
int
out
push
xchg
sub
or
shll
dec
push
popa
add
push
pusha
pusha
enter
inc
jb,pn
adc
dec
les
sub
jbe
xor
orl
mov
in
push
mov
push
in
hlt
inc
out
add
lock
add
xchg
aas
stc
add
xor
add
ss
push
or
call
push
fsubl
inc
pop
sbb
mov
neg
aam
and
dec
mov
push
xor
xor
shlb
jmp
rolb
enter
sub
or
inc
fmuls
les
sub
sbb
cmpb
pop
enter
or
in
outsl
aas
mov
sub
sub
insl
sub
cmpsb
leave
in
or
sub
int
dec
mov
pop
jne
dec
shll
scas
int3
sbb
xchg
mov
mov
xor
mov
in
mov
pop
pop
adc
push
shrl
cmp
jo
test
mov
adc
js
or
cwtl
popa
movsb
idivl
mov
mov
inc
push
mov
repnz
enter
cwtl
jo
jno
xor
stos
xchg
jno
sub
enter
adcl
jmp
jo
fwait
in
mov
push
mov
stos
pop
les
mov
mov
dec
mov
dec
outsb
mov
dec
jle
or
mov
or
mov
mov
mov
xchg
mov
out
jmp
push
and
inc
jo
push
mov
test
dec
iret
and
add
int
inc
cmp
sbb
orb
inc
sahf
cs
cmp
push
pop
jo
or
cmp
push
xor
rcl
mov
das
in
fs
pop
ret
add
jne
xchg
push
or
nop
loopne
das
in
mov
jns
das
loopne
or
push
push
ss
cmpsl
push
xor
scas
movsb
lcall
push
ss
imul
out
xor
xor
insl
rorl
mov
pop
push
and
rcrl
xor
push
mov
xchg
pop
and
or
mov
nop
sub
adc
lcall
cwtl
push
inc
push
orb
sub
fisubrl
jbe
mov
push
cmp
in
in
or
jno
aaa
loopne
xchg
jnp
fmull
mov
fdivs
fdivs
xor
xor
xor
aaa
rcl
iret
add
or
popa
and
mov
push
sbb
mov
rep
sbb
inc
dec
aaa
cmp
nop
in
inc
les
mov
xor
xor
mov
pop
ss
mov
ret
xor
mov
mov
push
push
add
ret
int
xchg
push
scas
lret
call
imul
ret
adc
mov
bound
mov
imul
jge
and
loope
ja
mov
daa
es
mov
aaa
pusha
pusha
test
lds
aaa
test
movsb
aam
pop
jb
mov
mov
aaa
mov
adc
cmp
enter
aaa
loop
lds
push
nop
xchg
daa
outsl
inc
aaa
cmp
test
and
mov
push
mov
ret
out
xor
mov
nop
daa
insb
add
mov
and
dec
sbb
cwtl
jo
loopne
test
pop
ds
mov
or
repnz
lea
inc
xor
xchg
cmp
jg
or
outsb
push
incb
je
jmp
sub
or
xchg
scas
xchg
or
cmpsb
ss
in
lock
pusha
jmp
cmc
or
cmp
mov
sbb
test
test
push
shr
xor
add
or
stos
or
inc
ret
or
or
sub
dec
lret
mov
xchg
push
rcrl
sar
pop
data16
sub
outsb
and
insl
or
and
jb
inc
nop
add
mov
shlb
xchg
push
movsb
lret
fnstsw
pop
outsb
sub
je
xor
jg
fucomi
rol
mov
pop
jmp
movw
ja
dec
push
data16
dec
aas
add
lahf
repnz
inc
shlb
ds
adc
mov
xor
insb
jg
andb
mov
nop
mov
mov
scas
adc
scas
mov
ljmp
mov
dec
bound
rolb
push
and
push
xchg
xchg
daa
or
and
add
dec
ja
repz
dec
xchg
adc
pop
push
and
fwait
into
daa
dec
sbbb
fistpll
push
sbb
scas
hlt
cltd
sub
pop
mov
push
push
or
push
lock
lahf
pop
mov
aas
or
test
or
dec
mov
inc
adc
xor
decb
cs
push
movsl
adc
cmp
sbb
imul
cmp
rolb
das
push
xchg
hlt
and
sub
sarl
sub
das
sbb
insl
std
jo
lock
test
sub
mov
pop
xchg
or
mov
dec
add
cmpsl
mov
int3
testb
je
xor
or
or
aas
cmp
jmp
and
jnp
out
push
push
xorb
jl
jno
jne
pop
pusha
adcb
gs
jae
sub
sarl
imul
pop
push
jp
aaa
pop
and
lmsw
pop
shl
xchg
pop
jmp
out
movl
and
frstor
js
or
mov
inc
or
shlb
in
pop
fimull
ret
dec
pusha
out
inc
insl
jo
jns
shrb
addr16
jne
mov
or
popa
and
sbb
jmp
pop
mov
xor
inc
push
aas
insb
add
test
or
bound
outsb
arpl
lret
aaa
inc
popa
je
dec
lods
xor
addr16
push
and
pop
hlt
setne
push
cld
xchg
aas
insl
aas
push
outsb
imul
inc
arpl
jno
adc
dec
iret
push
and
jns
shlb
cwtl
push
aaa
outsl
cmp
aaa
ss
imul
jp
addr16
cmp
push
push
mov
out
dec
sbb
pushl
leave
scas
xlat
lahf
pop
mov
daa
push
sti
add
mov
add
mov
push
mov
rclb
aas
je
mov
cmp
cld
clc
sbb
testb
push
cmp
dec
lock
pop
aam
sub
popa
into
mov
adc
out
adc
jl
and
sbb
dec
push
or
je
sbb
test
push
in
and
lahf
stos
imul
dec
pop
inc
outsb
jns
in
addr16
inc
push
push
gs
cmpsb
lcall
andb
jle
ret
ds
cli
pop
test
and
call
add
jg
and
push
cmp
push
flds
push
pop
aas
push
aad
clc
inc
xor
add
cwtl
cmp
add
insb
or
jb
pop
cwtl
xchg
sbb
push
js
pop
push
enter
into
and
push
push
sub
data16
jp
sar
lds
decl
xor
jge
cmp
je
fwait
sbb
adc
ds
clc
mov
bound
adc
push
imul
idivb
lea
test
cmp
inc
pop
lea
add
add
pop
imul
int3
sahf
xchg
push
push
testb
or
lcall
sub
pop
or
mov
in
adc
std
xlat
inc
push
xor
cmp
dec
sbb
adc
or
add
cmp
inc
mov
shr
es
push
jle
mov
sub
xchg
sbbl
popl
lods
rorb
stos
add
pop
ret
rorb
xor
jp
loop
addr16
js
xchg
in
out
adc
pop
sbbl
iret
int
test
push
rolb
pop
dec
jb
or
jbe
cmpsl
mov
or
scas
xor
jle
cld
xchg
dec
inc
mov
adc
sti
cmp
ret
jno
jno
ss
mov
cli
add
cld
push
fnstenv
cmp
inc
pop
test
inc
xchg
es
mov
enter
lock
cs
push
xor
adc
mov
jl
inc
xor
inc
sbb
pop
cwtl
push
cmp
adc
add
fistpl
ret
add
add
and
or
sbb
dec
shrl
mov
sbb
cltd
ss
cmp
inc
in
std
jb
stc
cwtl
nop
push
sarb
add
add
push
clc
leave
pop
adc
pushf
sub
xchg
fdivrs
inc
enter
push
mov
pop
inc
xor
jno
insb
and
or
out
xchg
popa
inc
subl
ds
mov
enter
mov
out
dec
mov
cmpsb
adc
and
mov
adc
jo
nop
loopne
sarb
jl
mov
sbb
inc
test
xor
sub
pushf
jge
dec
sbb
xor
lods
push
push
jecxz
inc
lods
scas
jb
jb
scas
nop
xchg
xchg
jb
jb
xchg
xchg
xchg
xchg
jb
jb
xchg
cwtl
cltd
lcall
popf
sahf
jb
jb
lahf
addb
addl
xchg
dec
jb
mov
inc
pop
or
inc
mov
pop
add
inc
subl
push
cwtl
daa
push
add
and
add
in
call
add
ret
lret
loop
jl
mov
call
adc
sbb
test
jne
adc
mov
das
inc
dec
xor
cmp
jle
dec
push
test
push
daa
add
test
or
lods
cs
cli
clc
jle
xor
jge
add
pop
cmp
sub
aam
push
popa
fildl
adc
mov
mov
inc
gs
xchg
lock
cmpsl
or
or
js
fbld
sbb
mov
dec
loope
pop
imul
dec
cmp
sbb
lret
je
mov
dec
sarb
cli
and
sbb
shr
jnp
jmp
jg
in
jne
jmp
cmp
sub
test
out
xor
sub
push
mov
mov
mov
cmpb
je
cli
jo
pop
lar
decb
ja
sub
xor
adc
sbb
mov
mov
cmp
cld
mov
push
add
add
adc
add
mov
sti
sub
jg
and
mov
dec
sti
shll
aaa
mov
in
fisttpl
lea
push
adc
mov
mov
cmpb
ja
dec
sar
shll
testb
call
out
pop
jns
lock
mov
or
push
mov
push
lea
test
or
add
call
dec
fwait
xlat
sbb
lea
add
out
push
into
inc
mov
lods
cmp
fwait
mov
stos
mov
sub
test
mov
les
orb
loop
cmp
jns
insb
popf
push
push
fistps
es
mov
inc
mov
dec
je
xor
inc
sbb
mov
xlat
dec
icebp
sub
leave
xchg
loopne
out
dec
loopne
inc
push
testl
testl
cltd
adc
adc
ret
or
pop
pushf
mov
div
pop
aam
mov
ljmp
movb
lea
push
cmp
jl
idivl
xorb
and
cs
and
lcall
movsl
xor
sub
inc
fadds
push
insb
cmp
cmp
jmp
xchg
add
jbe
inc
aam
add
test
cld
inc
mov
hlt
xchg
sub
out
loop
push
xor
iret
lods
pop
or
jns
ja
dec
hlt
push
jmp
imul
or
sbb
cmp
cmp
cmp
mov
dec
mov
fbstp
insl
or
sbb
cmp
adc
fiaddl
arpl
mov
or
invd
inc
ret
fdivrs
fistpll
pop
fmuls
pop
cs
mov
rorl
jge
in
sarb
stos
mov
pop
jae
add
or
dec
lret
dec
shrl
xor
bound
inc
push
out
les
or
sub
inc
cmp
cmp
js
push
outsl
xor
adc
sub
inc
push
xchg
and
mov
int3
jmp
pop
jmp
cmp
dec
add
jmp
mov
pop
ret
jb
mov
subb
cmp
in
push
mov
jp
out
vmwrite
jno
pushl
jl
add
call
mov
jo
add
adc
sub
outsb
insl
xor
adc
ja
jb
je
pop
mov
pushf
sub
enter
outsb
push
data16
jbe
add
movl
mov
mov
inc
nop
fxch
fadds
ds
cmp
or
nop
or
outsb
jae
roll
or
test
pushf
sbb
xchg
or
jno
mov
fcomps
xchg
push
inc
sub
addr16
inc
inc
into
mov
ret
sub
or
dec
push
dec
push
dec
pop
push
dec
or
pop
mov
inc
invd
dec
push
gs
imul
fs
add
inc
pop
test
inc
sub
movsb
and
fcompl
lret
gs
insl
test
or
out
daa
imul
into
adc
jecxz
orb
inc
pop
inc
inc
push
mov
pop
js
dec
and
and
or
dec
sub
ljmp
add
adc
adc
sbb
int3
jb
addr16
or
iret
jae
pop
dec
outsb
push
insb
nop
ja
insl
push
cmp
pop
xchg
ja
xchg
sbb
adc
sbb
imul
aas
mov
sbb
mov
add
cld
push
ret
jnp
pop
data16
jmp
je
scas
add
pop
push
andb
jg
dec
sbb
scas
movsl
sub
out
sbb
adc
add
sti
mov
je
inc
emms
jae
icebp
filds
aas
stos
shrl
inc
cmp
in
lock
aam
jo
jns
or
jne
push
orb
out
int
jnp
mov
stos
pop
push
popa
xchg
inc
inc
das
addr16
sbb
movsb
mov
inc
cwtl
xchg
nop
fs
inc
push
mov
sbb
mov
subl
fs
dec
shrb
or
inc
imul
es
mov
dec
gs
outsl
push
push
jbe
sbb
adc
dec
outsl
inc
insb
pusha
mov
fsubrs
sub
sbb
insb
jns
inc
push
insl
cmp
cli
push
pop
xor
scas
shr
std
pop
xor
sub
pop
aaa
push
push
je
or
insb
or
ss
clc
fwait
cmpsl
or
dec
imul
xor
nop
test
movl
ret
push
dec
jae
gs
fisubrs
jmp
add
rcll
and
add
mov
imul
ja
mov
f2xm1
cmpsb
outsl
dec
pop
pop
add
inc
jne
adc
add
cmp
dec
hlt
ja
pop
or
xor
or
push
and
push
dec
add
add
push
ds
insl
add
mov
leave
orl
lea
and
mov
gs
mov
mov
jno
mov
adcl
lods
outsb
mov
scas
and
daa
or
inc
push
dec
mov
mov
mov
nop
pushf
scas
sbb
xor
data16
mov
scas
hlt
adc
inc
and
inc
das
mov
pop
sbb
nop
push
push
cmpsl
push
push
movsb
sbb
or
push
outsb
mov
push
add
adc
dec
imul
push
scas
add
inc
nop
mov
jae
pop
movsb
add
pop
mov
imul
push
jo
mov
mov
stos
add
ds
cmp
jnp
mov
xchg
jb
or
test
je
outsl
push
sub
je
xchg
or
aam
stos
or
xchg
xlat
ficompl
cmpsb
jns
sbb
jge
enter
and
push
sysret
push
add
cmp
or
pop
mov
xchg
fildl
mov
scas
nop
sbb
imul
jb
push
push
in
pop
pop
cmp
rcr
lock
cmpsb
add
addb
adcb
pushl
mov
mov
pop
and
or
test
inc
inc
jmp
iret
pusha
daa
add
lods
jge
jb
adc
push
dec
and
push
shll
pop
pop
inc
insb
cmpsb
mov
aam
gs
xlat
pop
pop
inc
and
cmp
xchg
pop
cwtl
and
dec
cmpb
inc
enter
aaa
pushf
mov
sub
out
xor
cmp
adc
inc
pop
cmovns
jae
fs
jo
lcall
jae
push
rclb
sahf
cmpsb
add
scas
cmp
roll
inc
pop
xlat
cwtl
sub
in
pop
push
pop
adc
js
xlat
mov
test
out
bound
jg
mov
cmp
gs
push
xor
adc
pop
imul
push
lock
int
dec
xchg
mov
dec
mov
int
lods
popf
push
push
addb
push
mov
xor
mov
pop
inc
or
xor
nop
scas
pop
sbb
ljmp
inc
push
or
mov
adc
push
or
mov
and
xchg
or
nop
sbb
int
test
xchg
pop
xchg
aaa
insb
fidivs
pop
mov
popf
pop
cmp
and
repz
pop
sbb
pop
insl
mov
xchg
pop
test
les
sub
int3
mov
rorl
sahf
mov
jne
mov
push
invd
pop
out
or
jp
pop
inc
es
mov
enter
mov
jno
fldl
pop
push
outsb
lcall
mov
daa
inc
test
pop
mov
cltd
insb
fidivrs
push
dec
fimull
imul
das
xchg
daa
xchg
sub
jl
int
and
inc
in
add
pop
out
adc
sbb
and
lock
add
and
dec
jae
loopne
pop
stc
and
sub
sbb
sahf
inc
cmp
xchg
sbb
sahf
jo
inc
in
mov
or
pop
idivl
rcrb
hlt
mov
adc
andps
repz
in
or
bound
or
fs
es
sbb
fs
and
adc
add
nop
jecxz
stc
in
in
shll
push
ss
adc
imul
mov
lcall
and
lcall
push
pop
dec
sbb
pop
adc
popf
sub
je
rcr
sub
out
loopne,pt
jo
pop
loope
shll
in
mov
in
insb
in
push
mov
nop
jo
add
or
jo
push
cmpl
xchg
add
sub
fsub
rorl
push
pop
mov
xor
pop
daa
mov
jl
add
lret
jbe
dec
test
push
loopne
hlt
stos
shrb
cld
lret
lret
ds
xor
test
jo
adc
call
pushf
push
inc
sbb
data16
sbb
lea
mov
bound
aam
ds
sarl
xchg
mov
mov
stos
mov
rorb
mov
mov
cmp
mov
pushf
inc
fsubrs
pop
leave
test
aam
sbb
sbb
xor
adc
loop
leave
lcall
mov
xchg
pop
inc
int
dec
addb
bound
dec
mov
cmpsb
aas
jb
sub
ficompl
ss
and
mov
push
add
lods
push
xor
add
inc
push
aad
addr16
mov
and
fsub
push
lods
xlat
lock
lods
xor
sbb
push
clc
push
and
nop
aam
jp,pn
mov
aas
bswap
cld
sti
inc
cli
stc
clc
push
push
push
pushl
repz
jecxz
push
call
xor
sarl
out
xchg
dec
aam
fsts
mov
mov
push
nop
fcomps
or
cmp
pop
and
mov
mov
push
and
insl
pop
add
outsl
and
cmp
cmp
mov
add
addr16
in
gs
lcallw
push
and
adcb
rorl
cmp
cltd
jl
ljmp
call
lods
cltd
testb
cmp
push
dec
xchg
fst
ficoml
pop
cld
mov
mov
push
cmp
sbb
pop
push
ss
or
call
push
icebp
stos
sbb
dec
dec
fs
les
jo
cltd
lahf
jns
or
sbb
test
push
sarb
scas
xchg
push
data16
push
xor
outsb
push
jae
adc
push
jl
outsl
jmp
cmpl
jne
jg
je
fnstenv
add
repnz
sub
fidivrs
aaa
add
jb
jne
xlat
les
les
insb
icebp
push
ja
movsl
xor
nop
mov
and
xor
push
mov
dec
fidivl
and
bound
xor
and
dec
rol
fwait
dec
fbstp
pop
or
and
jmp
lret
mov
cmp
inc
pop
movl
push
cmp
add
xchg
mov
cmc
xor
sub
sub
jne
mov
and
jmp
sbb
in
insl
mov
add
and
jmp
out
rol
jge
cltd
stc
mov
stos
in
or
xchg
sub
leave
testb
movsb
pop
or
mov
push
iret
mov
xabort
popf
push
dec
les
and
std
xchg
add
sbb
cmp
adc
jne
pop
xchg
add
sub
add
pop
fistpl
sar
clc
mov
lods
push
out
and
adcl
xchg
pop
xor
and
push
sbb
or
mov
pop
fwait
imul
jae
loop
push
fisttpl
dec
pusha
push
inc
or
ret
jns
lods
dec
jne
addl
pop
add
mov
div
jecxz
push
rorb
jae
inc
in
cld
sbb
pop
fs
fs
lea
push
add
test
inc
dec
push
inc
sbb
mov
jno
or
in
push
xchg
imul
popf
outsl
adc
adc
repnz
outsb
inc
sbb
fsubrs
inc
cmp
sbb
enter
repnz
imul
add
mov
es
lahf
fsubrs
xlat
imul
ss
dec
imul
je
cmp
adc
sbb
mov
aad
pop
bound
addr16
les
fst
xor
iret
push
fisubrl
push
fwait
lea
pop
pop
jl
pop
lods
aas
pop
cmp
addr16
data16
add
pusha
fcmovbe
cmp
inc
adc
adc
aas
pushf
popf
cmpsb
push
lea
push
sub
push
rcrl
jl
inc
push
jmp
jne
mov
inc
subl
dec
mov
test
lds
or
inc
sbb
xchg
sub
jg
inc
rcr
inc
push
mov
xchg
sub
xchg
addr16
cmpb
jle
dec
je
popf
fiaddl
jp
imul
cwtl
dec
ds
clc
cmpsb
dec
sbb
in
pop
ret
inc
ja
dec
daa
mov
enter
cs
sub
push
mov
xchg
and
pop
sub
xchg
sub
jl
test
xor
pop
push
sbb
xor
and
push
jg
or
call
or
push
rol
fwait
add
cmp
pop
and
dec
inc
push
imul
shrb
sub
cmpsl
in
xor
jne
push
xor
cmpsb
clc
ja
sbb
dec
call
xchg
mov
jl
adc
adc
or
xchg
aad
xor
pop
mov
out
mov
jge
fnstsw
or
xorb
int
add
xor
rorb
adc
pop
mov
mov
inc
and
pop
xor
sbb
add
dec
imul
jne
ja
mov
hlt
xchg
cltd
mov
test
lahf
cli
dec
dec
jl
leave
mov
mov
lahf
jo
pop
pop
pop
cmp
and
imul
xor
xor
pushf
push
enter
pop
nop
or
or
daa
rolb
sub
jne
xorb
xorb
fcom
cmpsb
jo
leave
inc
popa
cmp
inc
sbb
dec
pop
dec
mov
das
dec
push
sbb
mov
lahf
das
shll
push
jno
pop
enter
jae
mov
add
dec
inc
sbb
and
cmpsl
jp
loope
mov
dec
arpl
inc
unpckhps
popl
or
xchg
scas
sbbl
or
subb
ja
jno
mov
and
sahf
leave
push
mov
dec
das
inc
jb
xor
or
pop
push
inc
dec
jb
sbb
inc
push
pop
mov
das
add
rolb
xchg
xchg
in
fimull
aad
sbb
sbb
push
je
mov
insl
cmp
adc
or
faddl
lds
and
dec
cltd
sub
add
inc
xchg
outsb
push
leave
and
pop
lock
jb
and
and
mov
lds
sbb
in
mov
mov
adc
cmp
add
add
adc
pop
jo
pop
or
dec
add
lock
jae
addr16
add
xchg
mov
int
or
or
push
insb
call
sub
mov
fs
pop
xchg
fnstsw
inc
outsl
pop
lea
mov
pop
push
enter
dec
orl
xor
push
mov
or
push
mov
cmp
shlb
push
sti
js
mov
addl
cmp
jecxz
pop
pop
or
add
xchg
mov
mov
or
adc
sti
loope
add
je
in
inc
and
outsl
pop
lret
inc
das
sub
add
sbb
sbb
stos
and
jns
sub
mov
jp
xlat
frstor
js
rorb
es
jle
add
mov
pop
imul
shrb
sub
cmp
cwtl
lahf
pop
mov
pop
inc
popa
jecxz
mov
sbb
das
sub
sbb
nop
ja
adc
movsl
mov
add
sbb
lea
lods
push
pop
xchg
sbb
push
in
push
insb
enter
xchg
dec
push
xor
adc
in
loop
mov
sub
mov
or
loopne
sbb
inc
mov
shlb
fists
popa
mov
or
sbb
popa
imul
jne
and
in
cmp
sahf
mov
push
xlat
xor
sbb
adc
sbb
sarl
adcb
lods
and
loope
leave
lock
push
or
fsubrl
push
push
in
fwait
insb
xchg
cld
dec
push
push
dec
jge
js
fstpt
xor
loope
aas
mov
jo
je
mov
lock
add
inc
inc
or
add
pop
popa
roll
add
add
icebp
dec
inc
mov
mov
ret
out
mov
subb
add
jo
cmp
mov
shlb
dec
ficoms
push
mov
or
mov
inc
pop
das
int3
mov
jecxz
gs
es
notl
and
xor
loop
bound
push
or
mov
shll
and
ret
inc
adc
cmp
popa
test
incl
or
leave
mov
add
xchg
or
adc
ja
inc
add
push
insl
adc
stos
mov
hlt
push
or
dec
or
fwait
aam
xor
push
out
test
add
lea
or
mov
hlt
mov
lock
xchg
cmp
mov
bound
jns
cmpsl
mov
cmpsl
aaa
pusha
push
pop
mov
pop
jb
or
jp
push
ficoml
mov
into
test
pop
cmp
jp
and
inc
inc
ret
add
jbe
mov
sbb
cmp
cmp
stc
or
dec
lret
push
and
lret
jmp
xchg
add
mov
aad
jg
inc
scas
sub
dec
or
imul
fildl
adc
jne
sbb
leave
daa
xchg
orl
inc
mov
sbb
shrl
shrl
pop
jg
jecxz
pop
sub
inc
in
mov
mov
test
add
loop
enter
inc
or
sub
adc
adc
xchg
dec
or
mov
cmp
push
rolb
dec
scas
aaa
add
push
dec
shl
lahf
sbb
sbb
pop
enter
jns
inc
jle
pushf
loope
in
dec
jle
test
xor
inc
or
movsb
addl
jmp
mov
sub
jg
dec
fiadds
inc
repz
pop
or
mov
jl
xor
cs
inc
mov
movsl
cmp
loopne
sub
mov
add
jge
adc
mov
sarl
mov
sub
in
add
enter
jmp
and
fildl
jne
sub
insl
out
add
add
cmp
or
inc
mov
mov
mov
inc
or
mov
test
mov
inc
and
subb
jge
nop
add
add
iret
push
sbb
pop
dec
mov
inc
pop
enter
mov
dec
pop
mov
fistps
sbb
xor
outsb
xor
rorb
pop
lahf
fsubrs
mov
shl
sbb
call
je
lock
je
jp
push
cmp
js
mov
xor
and
jne
push
lds
enter
test
sbb
adc
cwtl
fidivrl
cmp
loopne
cld
adc
cmp
jae
dec
or
je
pop
loopne
inc
stos
adc
btr
push
add
mov
jle
xchg
out
adc
hlt
push
por
fadds
cmp
inc
daa
mov
jne
test
dec
adc
addb
ja
jmp
ret
cli
pop
ja
and
bt
jb
mov
mov
ret
or
jmp
inc
cmp
push
sbb
jne
inc
decl
jne
les
nop
push
add
aaa
xor
lods
lcall
adc
push
movsb
or
mov
in
pop
and
sbb
dec
lods
lods
je
inc
in
cmp
inc
inc
in
lock
add
leave
add
push
mov
mov
inc
ret
or
mov
sbbb
outsb
imul
jo
notl
cli
xchg
or
sbb
fisttpll
sbb
test
sbb
mov
adc
stos
jne
xor
nop
and
and
aaa
xlat
mov
inc
imul
sbbb
push
push
mov
js
pop
inc
adc
xchg
sub
and
dec
movsb
and
cmpsb
in
cmp
and
out
imul
dec
lahf
jp
and
sbb
adc
imul
cmp
jno
mov
dec
and
cmp
push
or
mov
outsl
cmpl
cwtl
dec
mov
jno
jns
push
adc
daa
push
mov
cmpsl
jmp
jo
sub
mov
test
aam
int
pusha
mov
cs
mov
test
out
dec
movsl
xchg
pushfw
and
sub
test
outsb
add
dec
jne
sub
icebp
lock
push
jb
flds
sub
call
loopne
add
mov
cmp
fnstenv
mov
pop
sbbl
shrb
out
xchg
icebp
jo
je
inc
iret
and
sub
das
loopne
repz
pop
mov
adc
sbb
pop
push
push
add
or
pop
js
pop
cmp
xchg
jo
dec
and
sub
push
inc
lret
xor
pop
mov
jmp
pop
ss
ja
es
pop
sbb
dec
clc
inc
jbe
repz
jmp
and
mov
sub
xchg
cmp
les
sbb
inc
inc
jge
push
es
pop
sub
pop
fdivp
jnp
mov
outsl
lret
daa
jp
and
dec
shll
mov
mov
aad
dec
in
outsl
movsl
xchg
xor
lret
cmp
cmp
stc
cmp
xor
cld
lock
pop
in
ljmp
cmp
inc
rorl
jmp
xchg
movsb
nop
xchg
inc
in
mov
push
fucomp
jbe
adc
push
imul
iret
lds
repnz
mov
pop
shrb
ret
and
dec
push
ss
nop
mov
sub
mov
xchg
enter
repnz
stos
and
loope
aad
xor
mov
bswap
ret
and
cld
lock
fcmove
sbb
ja
mov
sbb
sbb
mov
sub
lret
mov
adc
mov
pop
loopne
push
mov
ret
adc
sub
push
fstpt
or
mov
sbb
sub
mov
adc
sbb
or
adc
xchg
add
cmc
push
push
inc
lret
pop
mov
dec
mov
fisubl
leave
pop
call
xor
xchg
or
in
pop
test
cmp
out
cmc
cmpsb
mov
or
aas
loopne
add
push
pusha
push
out
leave
push
dec
and
rcll
sub
clc
lods
xor
test
shrb
repnz
pushf
or
and
cmp
pusha
dec
leave
cmp
xorl
and
adc
or
fisubl
and
subb
xchg
sub
add
jo
dec
mov
mov
mov
sbb
orl
jg
jne
xchg
adc
push
jge
push
or
lods
jecxz
adc
adc
imul
xlat
pop
rorb
or
adc
lahf
or
enter
pop
or
outsl
dec
clc
inc
xor
movsb
pop
sbb
mov
xlat
enter
aaa
shrb
insb
lds
repnz
mov
push
enter
clc
clc
add
cwtl
dec
imul
sub
lock
sub
lea
push
push
xlat
pop
aaa
xor
push
out
sub
dec
sbb
js
pop
add
xchg
clc
xlat
in
lods
add
clc
mov
xor
nop
dec
push
add
clc
add
push
push
bound
dec
push
add
cmp
lea
lods
push
push
push
sub
xor
call
xor
test
sbb
inc
out
scas
loop
mov
or
and
insb
test
fildll
and
out
push
mov
mov
aam
cltd
add
add
out
inc
dec
aad
int
scas
adc
imulb
push
ds
jb
js
mov
add
add
ja
mov
sbb
gs
add
imul
nop
les
pop
femms
adc
mov
adc
xchg
push
mov
push
adc
ss
or
daa
dec
dec
or
lahf
inc
popl
mov
dec
adc
rcrl
in
xchg
xchg
nop
xlat
jmp
fcompl
dec
mov
dec
inc
jmp
fldl2t
pop
adc
or
xlat
jnp
inc
je
or
lret
mov
sub
push
movsb
ljmp
mov
jne
or
add
int
jb
cmp
seto
mov
dec
mov
shrl
mov
arpl
push
push
arpl
adc
jecxz
in
xchg
nop
cltd
icebp
and
test
shl
repnz
cmp
pop
ja
adc
pop
pop
jne
testb
orb
orl
mov
out
cmp
push
sub
adcl
js
inc
or
cs
ds
push
adc
mov
ret
test
sub
das
ret
sub
xor
mov
lock
xor
push
xor
sbb
sbb
sbb
stos
es
add
jae
dec
jmp
lock
insb
adc
and
mov
and
or
repz
add
inc
and
and
cmpsl
enter
sub
sbb
xor
sbbb
ret
xor
push
push
addb
dec
pop
jno
gs
jns
test
in
les
addl
inc
lock
insl
mov
rol
push
lock
decl
insl
movsb
xchg
pop
iret
in
xorb
movsb
mov
mov
sub
push
icebp
inc
dec
rorl
mov
cltd
push
add
mov
and
icebp
sbb
add
loope
inc
scas
inc
lock
cwtl
mov
rorb
dec
outsb
cmp
maskmovq
jg
mov
jmp
mov
adc
hlt
out
aas
or
jge
lea
sub
dec
rcrl
or
xor
jg
add
jl
xchg
add
xchg
adc
stos
jg
mov
test
addr16
cmpsl
jo
sbb
ret
aas
pop
add
inc
fisttpl
push
or
in
sbb
test
movb
mov
mov
xor
sahf
cmpsl
push
scas
mov
mov
dec
adcl
jo
test
push
nop
das
int
je
and
xor
test
xor
pop
inc
dec
cs
add
cmp
in
ljmp
or
orb
xchg
and
ret
jns
push
fsubp
dec
lods
add
out
jge
repnz
insl
stos
cmpsb
add
rol
dec
lods
mov
sub
sbbl
pusha
jne
addr16
add
inc
hlt
shr
out
inc
loope
mov
insl
or
push
jns
adc
dec
jg
sbb
pop
pop
jl
and
cmp
jne
mov
or
or
cmpsl
movsb
fcomip
lock
dec
inc
jge
sbb
jle
dec
mov
pop
test
xchg
popa
hlt
jl
shlb
ljmp
adc
out
adc
jg
je
fwait
addr16
pop
cwtl
nop
mov
push
push
add
loope
test
sahf
stc
lret
test
enter
mov
xchg
js
xchg
inc
push
jge
dec
jle
sub
add
push
sbb
or
add
ja
sbb
cmpb
sti
xchg
rorb
or
mov
mov
mov
or
inc
inc
jecxz
es
adc
inc
ss
pop
pop
jno
popf
fldenv
sub
fwait
call
push
subb
adc
cmp
mov
cmpl
push
add
jge
adc
cmp
sbb
pusha
popa
add
jnp
push
sub
jno
loop
cmpsl
es
adc
adc
jno
mov
xor
push
mov
sub
in
mov
es
out
lea
mov
test
mov
ret
mov
add
nop
insb
daa
hlt
int
or
cmp
pop
movsl
daa
es
mov
pop
flds
and
adc
mov
fdivr
xor
lcall
push
or
imul
popa
imul
fbstp
or
pop
mov
sub
jb
idiv
push
pop
mov
pusha
outsl
adc
inc
push
push
outsb
faddl
ja
jns
sbb
popf
sbb
movsb
lahf
ret
xchg
adcl
or
es
add
or
inc
out
sbb
fwait
insl
pushf
or
in
jno
and
xor
cmp
add
sub
in
jmp
and
xlat
popf
jne
lret
stc
mov
dec
mov
mov
sbb
mov
mov
scas
mov
xchg
add
mov
inc
xor
add
movsl
clc
rclb
in
pop
xchg
xchg
push
test
inc
adc
std
mov
lcall
fwait
clc
dec
push
or
push
mov
mov
push
or
mov
js
xchg
rorb
movsb
cmp
mov
rcrb
xchg
fisubrl
xchg
enter
inc
in
pop
pop
or
ds
imul
cwtl
les
dec
xchg
pop
js
and
mov
or
mov
int
ss
xlat
pop
fisubs
add
popf
adcl
xchg
and
or
push
popf
andl
shlb
lret
mov
add
lret
sub
iret
add
andl
movsl
mov
gs
fucomp
add
stc
dec
add
arpl
dec
fisubs
jge
leave
loopne
jno
push
mov
inc
sbb
mov
dec
xchg
xchg
out
lea
fmull
mov
mov
ret
add
addr16
mov
cli
mov
dec
or
jnp
sub
xor
cli
pop
sub
pop
pop
cmp
lea
sbb
icebp
or
xor
mov
outsb
into
jae
rol
std
iret
sub
add
je
dec
or
adc
mov
push
or
cmc
mov
push
mov
outsb
and
loop
or
or
push
push
ljmp
lea
add
sub
mov
dec
outsl
cmp
sbb
or
lea
lods
dec
filds
cmpsb
std
mov
cmp
jge
data16
push
rolb
and
sub
cmp
fwait
or
loopne
push
sar
add
rclb
sbb
test
std
or
xchg
cmp
je
push
into
add
push
jne
pusha
loopne
clc
mov
mov
inc
cmp
sub
xor
pop
add
add
arpl
int3
or
idivl
push
std
mov
cmp
xor
add
mov
sub
stc
jle
or
cmp
sub
xlat
test
popa
xor
lds
and
push
add
repz
cmpsb
addr16
sarb
mov
mov
or
inc
pop
cltd
sbb
sbb
push
inc
add
andb
and
dec
sbb
bound
mov
adc
ret
nop
adc
icebp
xor
pop
nop
out
les
and
adc
add
inc
int3
xchg
pop
dec
popa
add
jmp
movl
sub
or
inc
mov
sbb
add
fidivl
adc
js
mov
addr16
sbb
push
shlb
leave
out
cmp
sbb
inc
jae
add
cld
adc
ret
add
fcmovu
push
sbb
or
daa
or
mov
sbb
xor
mov
mov
jbe
unpcklps
push
or
gs
imul
push
repnz
cmpb
into
inc
mov
mov
nop
push
mov
sub
in
or
fiadds
loope
lea
jp
adc
mov
pop
or
popf
mov
mov
mov
jmp
fidivs
hlt
cmpsl
jmp
out
mov
lea
and
test
lea
shlb
sbbl
stos
inc
or
adc
jle
fs
pusha
sub
mov
hlt
add
lods
inc
popa
faddl
push
aad
outsl
mov
aaa
push
sub
sub
sub
and
mov
in
fistpll
fcmovnbe
pop
push
inc
push
prefetcht2
xchg
inc
in
push
mov
pop
mov
rcl
fldl2e
add
scas
xchg
push
dec
cld
inc
leave
xchg
inc
adc
cmp
mov
xchg
cltd
fnstenv
mov
mulb
add
add
mov
lock
lahf
fsts
sbb
rcrl
jbe
clc
jl
inc
imul
fimull
cld
xchg
out
add
sbb
sarb
inc
nop
pop
inc
movsl
cmpsb
lret
pushf
in
xchg
jne
xor
mov
pop
xchg
mov
dec
addr16
lds
xchg
jno
repz
jecxz
jl
adc
ss
cmpsl
jecxz
movaps
lock
sub
adc
les
inc
xchg
inc
mov
imul
adc
xchg
mov
cli
fsubrs
aad
or
rcrb
ja
jl
addb
arpl
sbb
add
sub
push
aaa
in
lcall
mov
addr16
decl
sbb
outsb
cld
xchg
in
sbb
cmpsb
push
lea
je
fwait
rcr
ret
cmp
in
xchg
dec
inc
inc
jecxz
cmpsl
pop
das
inc
or
xchg
add
add
push
lock
fnstcw
lea
mov
call
adc
adc
and
es
pusha
sbbb
xor
fs
mov
and
add
add
inc
or
call
aad
imul
outsl
dec
dec
pop
xchg
pop
add
xbegin
mov
repnz
stos
sub
rclb
loopne
push
sbb
add
mov
lahf
orl
push
adc
movw
mov
leave
xchg
mov
loope
fnsave
dec
adc
cmp
ret
mov
rclb
lock
add
call
and
and
out
jno
stos
cmpsl
jecxz
push
jae
gs
andb
add
cmpsl
ds
jo
jne
sti
sbb
dec
adc
pop
xchg
loopne
add
movb
adc
and
mov
in
mov
sti
movsl
std
rorb
aaa
test
jo
pop
aam
adc
test
add
jecxz
mov
movsl
aaa
sbb
add
cwtl
movsl
decl
or
inc
dec
xchg
add
pop
int
inc
lret
xchg
sbb
pop
add
nop
xchg
inc
dec
cmpsl
ja
add
add
mov
xor
nop
xor
push
mov
imul
sbb
adc
cmp
lds
je
outsb
shll
movsl
cmp
sub
mov
mov
lret
outsl
inc
sub
fs
ds
stos
sub
cmp
push
add
push
or
push
add
cltd
dec
mov
out
loope
iret
stos
sub
fs
mov
rolb
jecxz
sub
push
xor
nop
xchg
cmp
stos
sbb
mov
xor
negb
adc
jno
push
in
or
xor
or
arpl
lcall
push
bound
sbb
inc
mov
and
push
imul
pop
ret
pusha
movsb
inc
call
xchg
adc
insl
xchg
push
leave
inc
push
int
pushf
adc
stos
push
movl
in
clc
add
popa
or
inc
stos
adc
sub
lcall
push
xlat
es
xorl
push
jbe
jne
pushf
stos
inc
hlt
jne
test
scas
lods
mov
jmp
scas
popa
orb
movswl
lahf
scas
into
mov
or
inc
xchg
pop
pop
cmp
or
cmp
test
out
outsb
xor
loopne
xchg
nop
cmp
jne,pn
jl
push
pusha
mov
clc
sub
mov
cmp
int3
popa
mov
loop
inc
out
sub
sub
dec
or
cmp
iret
xchg
pop
in
jge
push
jecxz
cwtl
sub
test
sub
xchg
xchg
mov
cmp
stos
pop
loopne
xor
mov
test
fldcw
pop
add
fsts
lret
cli
out
sub
mov
stos
inc
cmp
pusha
adc
jle
pop
aas
mov
cmp
jl
dec
xchg
sbb
adc
enter
and
shrb
push
cmp
cmp
pop
aam
or
ret
dec
jle
and
sbb
and
inc
enter
adc
imul
xchg
mov
mov
sbb
cld
sbb
and
add
and
in
jbe
mov
je
cmp
cltd
or
fwait
mov
and
or
push
xlat
les
pop
xchg
hlt
icebp
dec
inc
and
insb
mov
add
les
and
and
mov
or
sbb
or
int
lret
js
sarl
mov
fbld
je
mov
push
pop
mov
repnz
dec
jl
sbb
gs
inc
or
mov
rclb
sbb
or
dec
add
jge
jns
mov
adc
inc
sbb
or
gs
jmp
sub
shlb
sub
mov
xchg
push
aad
sbb
xchg
add
enter
push
or
cmp
jmp
pop
into
jecxz
jbe
orl
add
xchg
cmp
pop
push
popf
adc
push
jae
or
dec
mov
int3
and
push
arpl
imul
lock
push
mov
or
sub
xor
jb
push
int
xchg
jo
andb
insb
mov
xchg
rorb
imul
jno
push
hlt
mov
iret
push
pop
mov
divb
in
dec
sbb
adc
or
jb
ds
dec
sub
lret
shrl
xor
fs
pusha
test
ret
xor
in
data16
sahf
xor
mov
push
cmp
clc
or
or
mov
sub
sbbl
lea
xor
xor
sbb
je
in
or
adc
and
pop
and
enter
adc
in
add
xor
dec
inc
cmc
lods
fistl
nop/reserved
dec
stos
or
test
xor
cmp
inc
and
test
mov
testl
sbb
data16
out
sbbl
xchg
outsl
insb
and
leave
jp
jge
jl
xchg
je
xlat
out
arpl
jmp
mov
test
sbb
xchg
lahf
adc
mov
mov
mov
pop
pushf
jne
mov
jo
sbb
add
xchg
adc
mov
adc
cld
pop
adc
pusha
sbb
push
xor
fimuls
adc
in
fadds
stc
adc
and
fnstenv
mov
push
aaa
nop
sbb
scas
xchg
test
arpl
nop
lods
bound
xor
shlb
sbb
fsubs
imul
add
add
adc
fst
mov
and
test
add
mov
mov
jbe
outsl
mov
movsl
orb
leave
mov
xorb
xlat
pop
out
cmp
jmp
cmp
cmove
cmp
nop
and
mov
sub
repnz
sti
ss
mov
das
dec
dec
cmp
push
outsl
cmp
sbb
popa
sub
xor
jae
push
enter
dec
mov
sub
lret
cld
clc
cld
hlt
sub
adc
xchg
jbe
xchg
mov
push
add
fstpl
and
jmp
and
mov
popa
dec
or
xchg
jbe
push
hlt
lcall
or
pop
outsb
add
sbb
add
lock
adc
and
add
dec
or
mov
ret
mov
adc
adc
lods
add
int
xchg
cmpsl
mov
lcall
sahf
enter
xor
or
mov
lods
mov
mov
push
decb
add
pop
sbb
add
imul
js
in
push
arpl
xchg
cmp
ret
sub
or
das
sbb
movsb
cltd
movsb
pop
adc
inc
or
jns
adc
fsubrs
iret
xchg
or
sub
clc
sub
push
mov
adc
inc
pop
rcrl
add
movsbl
iret
xor
mov
push
mov
push
or
test
dec
cmpsl
daa
cmp
sbb
mov
ret
in
insl
invd
xchg
ret
cltd
fwait
or
cwtl
test
mov
aas
mov
or
mov
mov
jne
mov
and
das
testb
mov
pop
test
and
adc
pop
xchg
jno
fsubl
xchg
or
fadd
lods
leave
adc
dec
pop
lods
xchg
pop
add
and
mov
sbb
inc
cmc
fdivrl
mov
push
loope
call
pusha
and
dec
pop
fdiv
sbb
xor
stos
push
push
mov
or
or
mov
pop
adc
hlt
inc
xor
mov
or
dec
popa
insb
jp
or
insl
or
fdivr
cmp
andb
out
xor
push
or
mov
add
dec
popf
mov
jo
xor
sahf
orb
xchg
std
popf
jmp
ds
pop
cmpb
mov
outsb
inc
test
dec
dec
repnz
sub
stos
insb
loop
inc
jmp
sbb
rcrl
sbb
iret
scas
pop
add
add
lock
stos
jno
fadd
sbb
sti
xor
push
test
mov
xor
out
js
lea
sub
push
fidivrl
jno
xor
icebp
arpl
fisubrs
xchg
mov
fs
test
cmp
call
or
roll
ljmp
stos
or
push
dec
sbb
test
xor
faddl
movsl
pop
push
lds
inc
fistpl
je
xor
test
dec
mov
mov
in
mov
adc
out
add
or
orl
add
repnz
addr16
inc
cmpsl
cmp
insb
pop
xor
and
out
xor
leave
or
sub
pop
mov
cmpsb
cmp
dec
dec
repnz
hlt
lock
pop
popa
pop
hlt
es
sub
add
jnp
subb
es
gs
push
pop
cmp
subl
sub
outsl
roll
in
sub
shrl
loop
rolb
imul
aam
or
cltd
mov
push
jo
ret
call
fldt
xor
push
sbb
fs
mov
dec
pop
cmpsl
in
ret
add
fdivrs
or
fimull
ret
int3
pop
push
mov
leave
fdivl
mov
mov
in
sti
add
add
sub
xor
cmp
orb
popa
divb
mov
sub
das
mov
mov
sbb
push
sub
jmp
mov
adc
scas
ss
cmp
pop
mov
loop
aaa
hlt
sbb
daa
push
fdivp
pop
pop
sti
mov
aas
js
fdivrl
jmp
adc
pop
adc
movsb
aam
sub
pusha
adc
scas
es
xchg
ret
lea
and
jge
inc
loope
xor
adc
push
push
jo
int3
and
addl
data16
mov
aaa
mov
and
jns
inc
sub
rcl
add
gs
ficomps
les
pop
es
push
and
jno
dec
repnz
xor
out
sti
dec
mov
inc
sub
shrl
bound
call
lods
jl
dec
repnz
adc
sbb
pop
pop
mov
fdivl
mov
sbb
jns
fsubr
xor
mov
lar
shl
mov
nop
gs
aam
sub
add
sbb
dec
cmpb
and
pushf
cmp
ret
dec
fstl
add
or
call
xor
jbe
in
mov
loop
xchg
xchg
sub
rcll
insb
orl
mov
imul
aam
mov
sbb
fwait
push
adc
pushl
stos
test
adcb
xor
orl
test
loope
aam
push
fbld
xor
rcrl
dec
je
mov
pop
add
push
add
xchg
or
lea
notb
cmpsb
pop
inc
cld
mov
mov
mov
xchg
mov
pop
hlt
add
xchg
jb
cwtl
mov
push
push
or
inc
movsl
push
adc
xor
lea
push
dec
pop
or
pop
xchg
pop
add
cmp
cmp
mov
popa
enter
adcb
mov
outsl
out
bts
jmp
lds
jo
push
out
add
sbb
xchg
das
outsl
mov
mov
ret
cmp
mov
ret
mov
fwait
dec
xchg
nop
inc
sbb
mov
and
and
sbb
dec
imul
mov
ss
mov
sbb
iret
fcomps
or
adc
mov
add
jmp
and
dec
imul
push
inc
popa
inc
jae
mull
cmp
and
mov
jae
push
push
int
mov
inc
out
jae
or
add
pop
push
roll
ds
dec
or
add
add
cltd
cmp
in
adc
out
pop
rclb
test
in
add
mov
push
add
movl
das
mov
out
ret
jbe
adc
or
jbe
adc
pop
cmp
shrb
les
adc
and
and
fs
cmp
leave
das
pusha
scas
pusha
and
pop
mov
pop
xor
push
sbb
loope
jl
jecxz
cmpsl
enter
jle
cli
jno
or
push
xor
fstpl
movsb
push
jmp
xor
nop
jl
push
xchg
mov
dec
ror
leave
cmpsl
mov
pop
mov
xchg
dec
cmpsb
in
add
mov
hlt
shl
pop
addr16
jmp
das
jo
lret
jbe
push
adc
inc
fiadds
cmp
xchg
or
mov
sbb
or
stos
xchg
pushf
add
lret
dec
pop
inc
das
dec
lret
enter
xor
mov
test
mov
in
imull
lcall
pop
and
cmpb
ret
test
dec
dec
ret
ret
jmp
loopne
sbb
scas
adcl
sub
addl
test
xchg
paddq
jno
mov
or
dec
es
inc
movsb
andl
jno
in
call
cmp
jl
fsts
cmp
push
push
mov
adc
sbb
lret
insl
push
push
enter
push
add
testl
dec
xlat
dec
rorl
jle
adc
clc
stc
inc
push
mov
mov
cmp
pop
inc
inc
call
call
movl
cmp
fmul
push
fnstcw
rcl
pop
movsb
pop
cmpsl
sbb
mov
or
js
ror
leave
push
pop
push
lcall
mov
dec
add
or
outsb
pop
xchg
fisubrl
ja
or
test
jle
cmp
jo
push
sub
pop
test
jg
add
xchg
daa
call
adc
mov
pop
aam
bound
pop
cld
push
mov
in
xor
pop
test
cmp
inc
arpl
inc
mov
dec
inc
cld
mov
add
mov
jno
setl
pop
repz
push
xchg
aaa
hlt
rorb
in
xlat
mov
mov
mov
in
into
and
mov
lea
int
mov
lret
sbb
xchg
mov
mov
adc
adc
xchg
rorb
mov
int
and
into
hlt
sub
cwtl
dec
cmp
clc
stc
dec
and
xchg
sbb
pusha
das
sbb
mov
std
incl
or
inc
pop
sub
aas
sbb
xor
inc
ja
add
shl
rorb
and
xchg
cmpb
pop
sub
inc
imul
js
das
negb
divb
shrb
mov
dec
dec
ss
fbld
shlb
dec
pop
aas
or
xor
in
aaa
xor
dec
rorb
mov
mov
sarb
cs
cmpsb
add
fmuls
subl
pop
in
fsub
cmpsl
sub
xchg
and
jbe
xchg
add
xor
jmp
mov
sub
leave
sub
jmp
daa
js
mov
pop
pop
lds
test
mov
jae
pop
lea
sub
ret
xor
shll
dec
repz
cmp
inc
orb
cmp
xchg
repz
or
dec
pushf
pop
mov
clc
ror
mov
lret
sub
std
add
adc
cmp
or
lds
mov
rolb
jecxz
jne
mov
cmp
ret
mov
bswap
and
cmpb
jg
push
addb
xor
adc
jl
and
mov
jl
adc
sub
jg
mov
push
add
mov
mov
ret
fstl
push
dec
cli
cmp
sbb
jmp
xchg
push
call
fisttps
nop
and
cmp
add
xchg
or
or
cmc
and
xchg
cmpsl
pop
shlb
test
cmp
loope
mov
aaa
pusha
shlb
mov
pop
rorl
or
in
xchg
sbb
lcall
push
xor
out
arpl
cmpl
dec
mov
sbb
pop
inc
cmp
push
pop
pop
inc
pop
addb
mov
les
push
testb
adc
je
sbb
daa
cld
sub
inc
push
push
je
bound
xchg
shr
mov
rclb
xor
jle
mov
push
push
cmp
add
and
mov
or
or
adc
loopne
pop
dec
sbb
cmpsb
loope
faddl
add
pop
inc
cmp
xor
cmp
ds
adc
mov
mov
cwtl
cmpsl
and
mov
imul
imul
loopne
xor
lahf
test
imul
inc
call
insb
mov
dec
jmp
add
inc
sbb
inc
icebp
or
and
iret
push
addr16
sub
cmp
push
or
inc
xor
add
mov
push
push
sub
mov
adc
outsl
aam
adc
jo
adc
pushf
mov
push
ret
cmpb
push
sahf
add
mov
xchg
cmp
add
cmp
imul
adc
insl
bound
sbb
jg
loop
sti
lds
dec
sbb
nopl
lcall
sbb
hlt
sbb
push
mov
in
and
movups
and
adc
adc
mov
scas
mov
xor
adc
scas
add
or
pop
adc
xlat
or
movsb
dec
xchg
sub
adc
testb
push
filds
pop
imul
ds
or
dec
out
dec
outsb
lock
mov
xchg
and
sbb
daa
add
lock
aas
ss
jne
mov
inc
sbb
into
sub
rol
sbb
movsl
pushf
jmp
sbb
mov
imul
cmpl
scas
jo
sbb
shrb
orl
nop
addr16
push
adc
inc
pusha
ds
sub
adc
xchg
popa
push
add
jnp
stos
xchg
cmp
mov
xor
cmpsb
pop
sbbb
test
and
inc
popf
mov
add
mov
jp
int
adc
lds
fdivrs
adc
dec
add
lahf
mov
cltd
and
divl
sub
push
push
lock
daa
mov
mov
xchg
sarl
inc
enter
xchg
and
inc
sbb
push
jmp
bnd
dec
gs
outsl
jo
fstpl
push
dec
test
pop
es
in
inc
jle
cs
push
inc
notl
arpl
stc
je
inc
decb
movsl
adc
add
pusha
xchg
lret
loopne
xor
test
xchg
inc
in
je
cmp
mov
loop
jne
es
xchg
paddusb
je
or
jo
dec
mov
aaa
lock
push
adc
addr16
adc
hlt
xchg
movmskps
cmovp
xor
xor
scas
jo
mov
sbb
add
add
dec
push
arpl
push
inc
jg
inc
dec
jne
in
popa
and
out
clc
ret
xchg
fsubrs
mov
add
dec
push
shlb
xor
shrl
stos
mov
sbb
pop
fstl
adc
and
jo
and
xchg
lahf
aam
pop
daa
adc
xor
xor
addl
inc
add
dec
sub
leave
push
push
push
add
jp
push
fistps
movsb
pop
outsl
jge
cmp
jg
push
dec
cmp
je
mov
xor
xor
push
fwait
xlat
clc
outsb
pop
jg
mov
jmp
or
and
sbb
es
outsb
sbb
push
mov
inc
lock
and
popf
mov
mov
xor
add
sbbb
or
mov
jp,pn
test
fcomps
out
mov
jmp
xor
mov
movb
sub
or
and
xchg
push
mov
and
inc
and
push
out
dec
outsb
daa
add
or
mov
or
inc
and
rolb
lret
add
jle
adc
or
inc
and
add
jle
mov
mov
push
insb
xchg
adc
mov
scas
aas
or
and
rorl
mov
pusha
xor
out
pop
sub
adc
iret
sbb
inc
daa
shrb
fsubr
inc
popa
enter
lcall
push
jg
inc
outsw
sub
sbb
roll
mov
add
or
add
test
sbb
or
daa
mov
add
les
push
or
pop
clc
in
orb
sbb
sbb
jmp
dec
repz
jl
sarb
sbb
push
push
out
inc
push
add
mov
dec
movsb
das
out
js
aad
into
ja
test
or
ja
imul
fwait
pop
inc
push
js
pop
adc
push
arpl
dec
repnz
aaa
repz
cmpsb
ss
dec
sub
pop
mov
out
xlat
or
inc
inc
rorb
inc
je
dec
push
dec
push
mov
or
or
xlat
sub
in
repz
mov
test
in
and
add
repnz
arpl
or
addr16
mov
movsl
lret
test
xlat
es
ljmp
pop
adc
popa
scas
frstor
wrmsr
push
push
pop
mov
fst
and
addl
add
jle
add
adcb
or
mov
adc
iret
pop
enter
inc
push
loopne
hlt
fists
or
add
xor
pop
jle
dec
adc
adc
push
push
xchg
daa
imul
inc
pushf
mov
iret
mov
adc
add
xor
popa
and
mov
cmpsl
mov
nop
not
or
sti
add
add
mov
lret
ss
sbb
push
rorb
sbb
cmpl
test
sbb
pop
mov
cltd
sti
movsl
add
xchg
loope
and
imul
jne
add
pusha
ds
add
dec
movsl
lods
subb
movsl
xchg
enter
aam
pop
mov
hlt
lods
jecxz
inc
rcl
out
mov
loopne
ret
nop
add
mov
lret
mov
add
hlt
add
adc
fwait
js
add
or
je
dec
rcrl
mov
test
pop
mov
test
jne
jle
adc
jle
mov
std
sbb
popf
or
fwait
inc
xchg
andl
sti
scas
xchg
icebp
add
push
mov
push
in
jns
fcompl
push
pop
or
push
or
push
or
fcompl
in
push
and
movsb
jne
add
mov
sub
push
pop
repz
sbb
push
push
fmul
sbb
sbb
and
pusha
and
cmp
das
sbb
jl
arpl
cltd
cld
incb
sbb
popa
sahf
in
loopne
jnp
mov
sub
in
mov
inc
adc
lcall
push
cmpsb
fadd
jmp
jmp
lahf
push
mov
xchg
adc
push
add
sbb
aad
sub
js
push
in
cmp
push
nop
call
xchg
cs
or
sbb
and
sub
nop
push
xchg
pop
inc
pop
mov
mov
or
arpl
adc
daa
pop
push
and
clc
flds
addl
andb
adc
insl
and
cmpb
mov
fsubrl
push
cmp
mov
add
adc
pop
dec
dec
sub
or
mov
mov
rorb
sub
mov
push
and
mov
jmp
mov
sarb
inc
pop
or
add
shrb
and
add
pop
add
out
inc
push
xchg
cmp
fisttpl
and
pop
mov
pop
jo
or
cmp
or
jge
std
sbb
stos
adc
push
mov
sbb
loopne
push
cmp
xchg
roll
fnstenv
test
clc
je
xor
mov
ja
pop
inc
insl
fwait
mov
pop
pop
jp
fldl
push
push
rcrb
push
ud1
and
aas
popa
cmp
jge
adc
ja
or
sbb
cld
push
test
mov
xor
sbb
cmpsl
outsb
cld
push
jo
and
pop
dec
cmp
xor
repnz
push
pop
out
inc
movsb
dec
sarb
lret
pop
stc
rorb
aam
mov
je
bound
inc
scas
orb
adc
mov
jmp
jne
fstl
dec
cld
mov
mov
fs
arpl
aaa
negb
out
popa
cwtl
js
inc
jae
xchg
js
addl
imul
inc
push
and
js
fcoms
pop
and
push
insl
add
xor
pop
clc
inc
pop
cltd
xchg
out
push
lea
sbb
jo
sbb
jb
je
nop
inc
push
jne
ja
inc
push
sbb
jp
push
sbb
jge
sbb
jg
popa
sbb
bound
fs
inc
push
gs
inc
push
sbb
push
push
sbb
insl
push
sbb
outsl
push
push
sbb
push
push
push
fs
inc
push
push
push
push
nop
inc
push
sbb
pop
inc
push
sbb
pop
push
sbb
pop
inc
inc
sbb
inc
inc
inc
fs
inc
push
inc
inc
inc
nop
inc
push
sbb
dec
inc
push
sbb
dec
push
sbb
dec
xor
sbb
xor
xor
nop
inc
push
xor
push
sbb
cmp
adc
nop
dec
xchg
ljmp
mov
add
rorb
or
pop
insb
outsl
std
mov
fwait
and
push
or
enter
dec
push
pusha
mov
test
sbb
clc
mov
or
je
imul
cmp
jo
test
adc
rcrb
dec
dec
mov
cmp
or
sbb
or
add
xor
gs
or
rorl
rcr
push
je
insb
cltd
or
push
data16
leave
mov
dec
je
mov
or
cli
adc
inc
rclb
imul
dec
cmp
insb
cmpl
or
je
daa
mov
outsb
int
jo
jo
outsl
mov
xor
popa
jae
add
sbb
push
scas
pop
xchg
or
push
inc
jge
or
addr16
outsb
jae
adc
pop
add
loop
cmp
bswap
fsubrs
mov
imul
push
dec
outsl
jo
fxam
popf
or
inc
jns
sbb
or
dec
shll
nop
dec
add
dec
imul
adc
xor
sbb
xor
aas
dec
xchg
in
mov
adc
sbb
pop
pop
ret
gs
adc
in
add
xlat
xor
jb
fisttpl
xchg
in
fimuls
imul
mov
imul
fimuls
inc
imul
sti
sbb
outsl
jae
es
sbbl
mov
mov
push
sbb
lar
sub
std
jmp
fs
add
aad
fcmove
or
sub
insb
popa
or
lcall
cmpsb
nop
nop
rcrb
mov
and
inc
pop
fs
insl
add
lock
xor
xchg
pusha
pop
dec
and
xor
and
adc
dec
shll
je
inc
mov
roll
lods
jb
push
lret
add
icebp
into
pop
adc
mov
in
jmp
sbb
inc
push
stos
sbbl
mov
xor
ljmp
push
push
dec
addb
mov
or
push
push
dec
test
repnz
add
inc
sbb
dec
fwait
cltd
ret
cwtl
cmp
hlt
xchg
jmp
and
mov
shlb
push
xchg
in
mov
push
xchg
call
inc
xor
imull
cmp
nop
or
add
jnp,pn
mov
sahf
pop
sbb
les
pushl
adc
add
or
mov
push
shlb
add
add
jo
add
cmp
sub
ds
in
add
push
add
je
lods
icebp
mov
pop
mov
cmp
push
adcb
imul
cmp
add
leave
in
and
movhps
jmp
xchg
pushf
nop
adc
add
jo
inc
mov
daa
cmp
add
adc
pop
mov
dec
clc
mov
enter
inc
popa
sbb
pop
sbb
scas
sbb
push
movsl
shl
xor
cs
adc
mov
ds
aas
pop
add
mov
imul
xchg
shl
jo
dec
fwait
adc
add
lds
jle
fcoml
push
cmp
add
movsb
adc
xor
ficoms
mov
xor
inc
lret
int
jp
inc
sbb
testb
pusha
mov
jb
and
lods
sbb
xchg
add
push
pop
pusha
push
sub
mov
sub
ss
movsl
idiv
sub
sub
jbe
cli
push
add
cs
test
call
in
pop
cld
les
es
push
adc
pop
shll
mov
inc
pop
and
jb
inc
mov
jnp
or
add
fs
or
fcomp
fsubrs
fiadds
mov
xchg
cltd
hlt
daa
pop
pop
xor
cmc
int3
fidivl
sub
pop
push
mov
add
xor
sub
cmp
pop
mov
xor
insb
push
call
loope
pop
int3
out
arpl
mov
imulb
lods
shlb
rcrb
out
pop
and
xor
aaa
push
jbe
xchg
pop
or
or
lods
push
and
mov
pop
je
mov
ss
sub
push
mov
add
xchg
testb
addb
ret
and
jle
push
push
xchg
ret
jg
gs
insl
popa
addr16
hlt
mov
imul
mov
xorb
push
lods
ret
nop
push
idivl
enter
mov
test
and
ss
enter
inc
pop
aas
pop
je
inc
pop
cs
cwtl
mov
inc
call
mov
nop
call
xor
imul
inc
dec
clc
hlt
push
cmp
pop
rorb
pop
xchg
notl
and
insb
hlt
xorl
pop
cmp
je
dec
push
mov
dec
dec
or
insl
fsubs
xchg
mov
andb
pop
xchg
lret
xchg
xchg
adc
call
aaa
insb
ficomps
pop
rclb
pusha
jg
push
pop
fs
pop
loopne
pop
push
insb
sub
cld
push
push
outsb
pop
jnp
add
jo
xor
xchg
mov
cmp
pop
xor
addb
pop
sbb
mov
mov
stc
push
jae
add
stc
shrl
stos
adc
push
or
outsl
outsb
pop
out
xchg
mov
cli
pop
cmp
jb
mov
fdivl
fcmove
dec
cmp
jl
test
repz
mov
inc
pop
push
pop
repz
ret
rcll
cld
jb
cld
je
je
and
pop
pushf
push
mov
ja
push
ret
pusha
cmp
sbb
push
cmp
sbb
pop
push
cli
add
data16
pushf
sub
push
xchg
inc
sbb
cmp
nop
and
lcall
scas
mov
mov
xor
rol
xor
inc
dec
jne
adc
shll
js
and
push
push
or
adc
test
aas
jg
pusha
add
adc
sbb
push
cmp
mov
jmp
sbbl
mov
mov
or
inc
cmp
test
or
jmp
pusha
adc
xchg
insl
fmul
scas
mov
inc
and
repnz
aam
pop
push
test
mov
adc
xchg
mov
fiaddl
mov
fmuls
add
ret
shlb
cld
add
push
fwait
lods
test
push
ret
daa
mov
xor
xor
fwait
andb
adc
test
xchg
pop
cmp
test
sete
pop
mov
sahf
shrl
mull
and
adc
add
mov
inc
jmp
pop
push
loopne
cmpsl
mov
dec
cmc
popa
std
dec
loopne
adc
aaa
pusha
es
les
push
enter
das
nop
in
inc
and
adc
add
jg
insl
int
jmp
xchg
pop
adc
incl
imul
push
jle
aad
add
cltd
rcll
int
cmp
rclb
pop
or
rep
clc
sahf
sbb
adc
pop
adc
jb
push
jb
loopne
inc
xor
les
add
mov
enter
aaa
sub
xor
in
add
call
or
xchg
cmp
push
mov
loopne
in
fsubs
dec
loopne
in
pop
cld
cs
shl
jo
xor
add
faddl
sahf
cmp
out
xchg
xor
arpl
jb
outsl
outsb
fsubs
test
outsb
pop
repnz
pop
dec
insb
imul
jbe
add
add
jb
insb
gs
push
gs
insb
lahf
fadds
sbbl
addr16
imul
jb
cmpsl
repnz
mov
iret
pop
gs
insb
outsl
ja
ret
push
push
lahf
jne
or
clc
test
jne
push
jno
popa
mov
push
pop
or
pop
cmp
lahf
jns
add
push
imul
add
insl
inc
dec
addr16
es
push
addb
in
test
cs
jo
push
pop
imul
pusha
dec
adc
pop
push
addr16
das
test
xchg
std
inc
je
inc
push
xchg
dec
or
sbb
insb
add
or
xor
dec
lods
cmp
push
inc
adc
in
js
or
in
xlat
jmp
sbb
mov
imul
sbb
cmp
subl
pusha
add
push
xchg
sub
mulps
aam
mov
jg
sbb
aaa
push
rcll
popa
adc
pop
or
outsw
inc
cmp
adc
imul
in
push
outsb
jne
or
xchg
mov
bswap
inc
inc
dec
mov
ja,pn
cmp
aas
push
arpl
add
inc
xor
roll
xchg
cmp
add
movsl
inc
dec
es
xchg
das
or
mov
or
sahf
jge
jae
sbb
ret
push
mov
push
push
int3
sbbb
inc
out
iret
or
rclb
pop
or
pop
pop
testw
decl
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
and
rcrb
divb
lods
std
push
pop
dec
inc
dec
dec
arpl
inc
inc
push
push
in
jg
adc
inc
push
dec
dec
push
mov
and
inc
shll
dec
and
mov
inc
popa
out
inc
inc
xor
xor
aam
cs
adc
inc
dec
inc
and
inc
xor
cld
inc
push
inc
inc
dec
mov
push
push
dec
dec
push
dec
sub
lea
leave
scas
neg
cs
inc
inc
dec
push
aaa
and
sbb
dec
inc
dec
or
repnz
js
dec
pop
adc
push
push
daa
stc
push
push
dec
push
inc
scas
dec
inc
dec
push
mov
jecxz
and
nopl
loop
pop
mov
mov
xchg
add
jmp
dec
orb
mov
sub
faddl
add
dec
call
orb
imul
or
sbbb
jne
add
imul
inc
xor
fimuls
lea
stc
sub
cmp
inc
or
mov
int3
dec
sbb
sub
cmp
rolb
inc
sbbl
add
add
mov
dec
adc
xchg
mov
cmp
shlb
pop
gs
ljmp
xor
mov
and
push
dec
das
or
mov
dec
xchg
lahf
fcomip
pusha
stos
and
in
sahf
and
rcrb
aam
enter
adc
push
fstps
out
and
pop
push
repz
jae
inc
jno
mov
ret
das
push
dec
or
add
sbb
jecxz
ss
rol
and
cli
je
and
dec
sub
out
xchg
push
mov
mov
clc
test
mov
xor
mov
cmp
cmp
psubd
adc
call
orb
jne
lret
jae
nop
imul
push
xor
dec
pop
push
cmp
mov
or
jns
mov
add
xchg
or
data16
inc
adc
or
xor
dec
inc
sbb
dec
out
repz
jne
inc
or
enter
fcmovne
testb
je
rol
add
int
jmp
adc
fs
jle
aam
add
or
mov
adc
lea
mov
ret
mov
or
cmp
test
es
cmp
idivl
jmp
jno
xor
rcll
fiaddl
pop
fcomp
add
call
sub
pop
inc
fildl
push
xorl
add
cmpsb
loope
iret
pusha
les
sti
jo
xor
or
inc
pop
out
and
imul
cwtl
sbb
scas
jecxz
in
ret
repz
push
gs
pop
adc
insb
cmc
push
and
mov
pop
pop
xor
push
inc
mov
pop
int
inc
pop
pusha
rcrl
cmpsb
mov
dec
push
and
aam
rclb
mov
sqrtps
add
sub
inc
cwtl
sub
cmpl
xor
neg
pop
mov
adc
inc
push
das
jg
mov
fcomip
ficoml
jp
mov
mov
add
or
shrb
add
imul
addr16
sti
or
xchg
imul
add
loope
xchg
pop
inc
fisubrs
imul
das
jns
xchg
movb
add
sbb
or
inc
push
aaa
loopne
push
leave
cmpb
nop
mov
dec
add
jb
std
pushf
movl
imul
inc
pop
adc
int
loopne
pop
and
and
in
cld
insb
cld
test
dec
push
or
aaa
jo
add
fisubs
mov
ds
sbb
mov
or
mov
add
sub
in
fcompl
and
and
nop
or
push
cmp
sbbb
adc
adc
cltd
pop
sbb
lods
in
pop
or
shl
lods
adcl
js
adc
or
push
in
and
and
or
push
nop
outsl
push
xchg
stos
or
inc
js
aas
in
dec
enter
nop
pandn
mov
mov
sub
inc
incl
cmp
jmp
and
mov
enter
add
inc
xlat
lock
mov
push
rcll
fildll
mov
jnp
loopne
test
popl
adc
cmp
sbb
sub
inc
jge
add
sub
addr16
adc
in
dec
sti
sub
jmp
je
pop
adc
pop
shl
or
add
hlt
lcall
adc
mov
inc
pop
aas
xchg
mov
xor
or
mov
and
in
nop
addr16
fists
push
sbb
sarb
negb
roll
clc
xor
sbb
fs
mov
insl
inc
pusha
lock
enter
dec
adc
adc
aam
inc
or
shlb
inc
je
xor
rclb
mov
mov
or
cmc
add
and
movups
or
movsl
adcl
loope
mov
lcall
sbb
mov
mov
mov
push
mov
sub
xor
or
pop
or
or
mov
push
push
or
push
sub
push
pop
mov
or
pop
pop
test
add
or
or
in
testb
dec
xor
in
sbb
ja
pusha
adc
pushl
test
or
sub
add
cmpsb
rorb
and
enter
adc
mov
inc
adc
pop
inc
sub
xchg
sub
mov
push
pop
pushf
test
in
les
cwtl
or
jge
sbb
in
push
insl
pop
pop
push
dec
fistpll
or
push
in
shl
incl
sbb
repnz
sub
xlat
dec
push
mov
cmpsl
clc
les
pop
sbb
aad
leave
sub
pop
repnz
mov
bswap
test
add
dec
into
add
cmp
pusha
mov
mov
sti
xchg
lods
fsubrs
inc
scas
scas
adc
dec
jmp
fs
aaa
ret
cs
cmp
adc
cmpl
mov
add
adc
add
or
sub
ss
pop
test
sub
in
mulb
in
inc
orl
xchg
in
and
mov
or
and
push
or
dec
pop
popf
xor
rol
das
in
and
cld
les
add
popa
jl
cltd
sub
int
add
mov
jge
dec
mov
jecxz
out
push
hlt
pop
inc
jae
pushl
hlt
dec
mov
and
mov
cmp
je
mov
sub
mov
rcrl
movsb
jne
add
sub
out
add
aas
es
test
loope
aam
add
xor
and
orb
add
loope
push
mov
jb
mov
aas
or
or
shll
sbb
mov
je
push
pop
push
sbbl
sub
inc
sbbb
sub
add
sbb
sahf
adc
pop
add
cmpb
or
adc
mov
imul
addb
mov
xchg
clc
add
xchg
std
dec
jae
or
jge
loopne
add
rcrl
cmp
fistps
mov
jnp
add
shlb
sbb
shll
push
movsl
rclb
xchg
and
orl
xchg
notb
sub
pop
je
xor
sti
inc
push
imul
mov
sbb
mull
xor
xor
repz
push
mov
inc
add
or
add
out
mov
xchg
push
xchg
dec
xchg
xchg
inc
je
int3
push
inc
and
enter
inc
arpl
sbbb
mov
or
cmp
inc
push
adc
pop
add
add
mov
shrb
lea
jp
xor
xor
adc
rorl
pop
fwait
dec
aas
ljmp
in
add
cwtl
int
mov
aas
jge
or
adc
pop
movsb
adc
sub
xchg
pop
mov
dec
mov
call
jo
test
mov
sbb
bound
xchg
mov
imul
pushf
adc
add
std
bound
movsl
pop
pop
mov
ficoms
mov
in
sub
fcomps
imul
aam
mov
imul
add
mov
test
xchg
fimull
push
mov
add
inc
pop
ret
mov
cmp
es
add
push
dec
mov
je
or
sar
and
loopne
icebp
outsl
test
dec
divl
shl
and
cltd
cmpsl
mov
mov
mov
pop
stos
sub
and
mov
inc
pop
mov
mov
pop
sub
cwtl
in
adc
and
out
or
inc
fs
dec
push
test
push
clc
mov
cmp
stos
test
hlt
xchg
gs
adc
or
ss
mov
and
mov
lret
push
rcrl
cld
pop
cmpsl
push
or
nop
fdivrl
lock
enter
push
push
jge
imul
mov
mov
adc
or
pop
imul
and
fsubl
in
testb
jmp
jns
popa
imul
pop
in
dec
mov
jne
xor
lock
das
push
pop
bound
test
sbb
push
add
sub
fiaddl
xor
stos
dec
add
outsl
jnp
rcll
loopne
lds
pop
call
dec
dec
cmp
mov
or
sub
bound
and
mov
adc
push
mov
mov
or
add
orb
xor
pushl
faddp
inc
add
pop
dec
add
cmp
jp
lock
dec
jg
xchg
jmp
mov
push
mov
lock
pop
push
add
jne
pop
mov
add
adc
adc
adc
pop
inc
jnp
push
sbb
hlt
mov
inc
pop
dec
test
adc
aam
jl
adc
rorb
jne
sti
jmp
and
add
ja
adc
bswap
shr
mov
dec
jns
jmp
out
in
sub
and
mov
sub
shl
mov
mov
jmp
cmp
movw
in
subl
mov
repz
xor
enter
push
scas
xorb
jl
push
jo
pop
or
out
jge
iret
rolb
jne
aas
sbb
in
and
lret
cmp
mov
lea
jg
sarb
mov
sbb
mov
outsb
das
daa
jmp
addr16
cmp
sub
addr16
mov
mov
sar
icebp
pop
push
dec
lods
popa
aam
ss
jecxz
pop
add
cmpl
lds
clc
dec
and
sub
adc
clc
and
jl
div
out
std
call
mov
add
cmp
inc
sub
push
imul
and
push
xchg
xor
add
inc
andb
cmp
pop
push
push
ret
dec
dec
clc
adc
mov
shlb
shll
xor
adc
dec
mov
pop
xchg
xchg
push
sub
lret
mov
dec
cmp
pop
dec
movups
pop
jp
insb
sets
push
push
mov
mov
jne
gs
add
adc
ja
shrb
mov
inc
jge
divl
push
push
in
sub
jo
cmc
stos
and
js
inc
push
outsb
push
dec
popa
out
fidivrs
xor
cmp
data16
shrl
inc
or
pop
adcb
push
xchg
fucom
add
shrb
lret
rorb
js
and
cs
dec
vhsubpd
jne
loop
and
push
and
mov
push
cwtl
test
jl
adcl
pushf
pop
loopne
adc
movsb
mov
cmpsl
je
sub
and
nop
outsl
test
cmp
add
add
mov
cmp
add
or
aam
and
stos
rcrl
movl
inc
nop
and
mov
and
push
jb
dec
and
mov
jae
sbb
lock
and
sub
push
mov
cwtl
xlat
lahf
or
sub
aas
or
pop
add
or
ret
outsb
mov
mov
sbb
add
cmp
jns
adc
ror
adc
xchg
pop
cmp
jg
test
jle
cmp
jl
push
enter
jg
and
mov
je
pop
clc
jle
sub
xor
ja
push
pop
mov
jbe
ret
push
pop
jb
add
popa
inc
jnp
cltd
and
pop
dec
lea
clc
aad
or
jne
push
int
mov
pop
cmpl
push
add
pop
cmpsb
test
fcomp
adcb
insl
and
jbe
movsl
xchg
sbb
scas
iret
movsl
add
stos
xor
in
sbb
lods
sbb
jae
sub
aas
in
xchg
enter
add
adc
loope
test
xchg
loope
test
pop
adc
mov
aas
inc
ret
imul
sub
loopne
es
dec
mov
adc
lea
jno
lock
mov
jnp
add
inc
dec
jne
cmp
adcb
stos
cmp
or
adc
xor
or
pop
daa
ret
and
inc
adc
rcrb
fwait
adc
mov
repz
test
dec
call
cmpsl
xchg
int3
adcb
jns
imul
enter
xchg
sbb
ja
xchg
pop
cwtl
leave
adc
loope
mov
insl
mov
push
mov
loope
dec
sbb
call
xor
cmp
jne
push
sti
rolb
repz
push
mov
mov
fwait
imul
push
sub
icebp
pop
mov
xor
loope
push
cmp
daa
adc
add
rcrb
mov
bound
inc
aam
fiaddl
pop
pop
xchg
pop
lock
ljmp
cmpb
sarb
jmp
xor
cmp
jl
ret
fbstp
subl
push
test
clc
call
inc
jl
pop
sbb
jb
or
je
or
test
jmp
lods
sub
fs
sahf
movl
sti
or
je
dec
or
fisttps
jg
lock
jmp
fisubrs
in
and
test
or
cmp
shrw
call
sub
or
ds
cmp
and
mov
das
into
and
in
pop
add
xor
push
adcl
adc
push
add
mov
xchg
out
adc
pop
mov
jns
or
pop
lcall
lock
shr
jnp
xor
xor
add
test
hlt
lret
or
push
add
jns
adc
inc
cmp
add
mov
or
int3
stos
push
imul
bound
sub
sub
int
push
cwtl
sub
clc
hlt
cmpsb
xor
hlt
inc
or
jecxz
xchg
add
lock
xor
lret
sbb
gs
dec
push
xchg
out
sbb
dec
adc
inc
pusha
xchg
pop
out
mov
add
popf
mov
pop
push
pop
in
out
inc
xchg
hlt
int3
inc
call
dec
and
orb
clc
call
push
pusha
nop
hlt
loopne
fcompl
idivb
in
dec
dec
mov
and
sub
fcoml
loopne
loopne
orl
add
jo
sbb
and
jl
dec
sub
fidivl
mov
mov
mov
or
roll
lods
push
insl
dec
push
arpl
mov
lods
cmpsl
pop
fistpl
jg
mov
popf
lret
add
test
sbb
in
in
pushf
sub
gs
in
sub
repnz
loopne
fcoml
clc
call
pushf
imul
adc
and
jg
and
cli
inc
movb
scas
adc
mov
pop
outsl
pop
push
and
cmp
pop
mov
adc
sbb
mov
sbb
shll
out
sbb
jg
das
and
adcl
mov
sub
pop
jl
loop
adc
add
sbb
sbb
sub
or
stos
int3
jne
popa
xchg
mov
les
or
enter
fwait
adc
add
and
sub
pop
mov
push
cmpsb
add
std
sbb
icebp
stos
xchg
out
out
sub
pusha
clc
roll
inc
sahf
hlt
shl
rorb
into
inc
imul
pop
arpl
sti
add
ret
jle
pop
jne
cmp
popa
push
pop
ret
add
mov
nop
fsts
and
idivb
clc
mov
xchg
mov
ret
in
bound
cs
and
inc
xchg
inc
jle
adc
insb
sbb
and
or
pop
adc
imul
and
out
cmpsl
pop
ret
leave
push
jo
out
fistl
xor
popl
mov
call
mov
rolb
out
pop
or
iret
push
outsl
jb
lret
xchg
test
sbb
add
push
pop
and
seto
inc
mov
fdivs
inc
movb
adc
fdiv
pop
and
push
rorl
xor
xchg
stos
in
jmp
idiv
cmp
scas
push
daa
stc
and
and
mov
and
mov
hlt
mov
repnz
mov
mov
mov
rolb
and
enter
ja
popw
imul
bound
psllw
sarl
negb
inc
dec
jno
test
inc
ds
clc
sub
dec
jne
sub
mov
dec
mov
cmpsl
xor
sub
mov
ficoms
add
js
push
xor
filds
lea
jmp
mov
call
xor
mov
test
inc
popf
adc
and
cmp
cmp
inc
mov
clc
pop
adc
add
pop
pusha
dec
and
cmp
inc
inc
daa
xchg
cmp
pop
xor
inc
sub
inc
sub
das
lret
or
inc
pusha
test
xor
cmpxchg
and
sbb
mov
cmp
and
dec
push
inc
dec
sahf
clc
add
or
dec
jno
scas
dec
and
add
nop
ja
cwtl
xor
cmp
xchg
test
and
arpl
xor
rcll
clc
adc
cmpsl
xor
daa
imul
mov
add
mov
movsb
mov
cmp
add
mov
insb
popa
pop
sbb
cmp
xchg
iret
ds
pop
cmp
or
mov
mov
jno
je
add
or
xlat
pop
jne
mov
loopne
imul
lahf
pop
into
dec
mov
cmpsl
lea
inc
or
nop
out
sbb
xor
rcl
jns
pop
addb
adc
xor
mov
or
inc
addl
and
adc
dec
inc
and
mov
adc
pop
and
push
adc
sbb
mov
sbb
sbb
fdivl
fistps
cmpsl
sbb
mov
pop
pop
mov
and
lods
add
xchg
xlat
inc
imul
jnp
cmp
sub
hlt
je
insl
xor
cmp
and
sub
or
xchg
push
and
push
sub
incl
jl
mov
jnp
sbb
mov
push
sbb
repnz
and
loope
sbb
das
mov
adc
aaa
mov
sub
testl
cmpsl
nop
sub
inc
mov
jo
mov
mov
inc
fildll
cmpsb
sti
xor
lds
pusha
data16
ret
sub
ss
cmp
sbbb
mov
jmp
mov
mov
arpl
push
das
adc
mov
scas
mov
adc
push
and
add
mov
add
mov
mov
add
sbb
mov
ret
inc
loope
dec
fimuls
or
lret
mov
imul
dec
adc
add
add
insb
bound
rcl
outsl
clc
or
adc
inc
ss
sub
xor
icebp
ret
adc
pop
cli
dec
or
inc
popa
or
pop
into
shrl
and
mov
nop
pop
hlt
out
add
mov
out
mov
stc
mov
rclb
popf
xor
mov
add
jo
cld
clc
fmuls
stos
pop
int3
iret
jae
cmp
sbb
clc
mov
lret
scas
xor
inc
mov
jmp
cli
dec
dec
cmp
cld
and
pop
add
push
pop
scas
cmp
pusha
adc
jne
sub
mov
mov
inc
pop
push
or
popa
sbb
mov
sbb
filds
fs
jge
imul
or
push
fimull
lea
sbb
jno
aam
and
add
pop
enter
and
rcll
arpl
fisttps
add
sbb
push
mov
push
inc
pop
adc
jl
mov
push
adc
shlb
lock
xor
jecxz
stos
push
mov
arpl
aaa
test
pusha
imul
dec
loope
push
mov
movsb
or
add
add
xchg
andb
mov
adc
xor
dec
and
enter
xor
add
push
jecxz
or
xchg
shlb
or
inc
jg
fdiv
pop
add
rol
sub
pop
and
and
inc
adc
popl
jle
enter
and
and
add
or
push
imul
inc
inc
sub
aas
gs
mov
mov
mov
mov
jmp
mov
cmpb
negb
daa
add
jbe
sub
adc
test
xchg
test
ret
lahf
sub
loope
scas
fadds
sbb
subl
add
pop
call
mov
testl
sub
inc
push
xchg
jbe
and
in
adc
xchg
inc
inc
pop
fdiv
fmuls
out
push
fsubs
je
into
xchg
xchg
or
jle
out
fwait
xchg
mov
push
shlb
jge
movsb
push
mov
pop
leave
enter
addr16
dec
mov
add
and
inc
add
mov
and
inc
pop
xor
xor
call
jns
adc
dec
iret
pop
mov
xchg
xor
and
sub
scas
xchg
jmp
push
push
push
pop
packuswb
pop
imul
sbb
faddp
out
push
jns
adc
in
inc
xorb
negl
xor
shll
and
int3
add
cmpsl
pop
data16
arpl
add
push
fs
je
and
cmp
inc
and
and
data16
adc
imul
in
xor
dec
ja
sbb
dec
adc
sbb
imul
aaa
add
cmp
lods
ja
jae
sbb
and
mov
sub
aaa
xor
or
mov
mov
les
push
mov
xchg
xchg
loope
clc
dec
dec
daa
lds
add
or
andb
sub
jmp
cmp
test
and
jge
mov
cwtl
stos
addb
ret
cwtl
ret
outsl
push
xor
orb
shlb
dec
inc
je
cmp
jne
loopne
fs
sub
mov
rol
cmp
enter
fs
cltd
or
out
loope
mov
dec
adc
mov
dec
ret
sbb
sub
or
sbb
push
repnz
add
inc
enter
and
adc
or
mov
and
int
lcall
loopne
inc
mov
lret
subl
enter
sar
hlt
pop
inc
lds
add
xchg
xor
xchg
test
lock
cwtl
fs
or
int
pusha
std
orl
pop
scas
lret
jg
pusha
fucomip
pop
push
in
ret
cmp
out
ds
inc
in
or
fimull
sub
clc
je
xchg
clc
inc
lea
mov
cmpsb
or
xchg
data16
or
into
dec
sbb
add
inc
popa
shlb
lods
std
fsubl
rorb
sub
jns
ljmp
in
ret
inc
sti
sub
inc
aam
movsb
pop
jl
cmc
xchg
insl
aas
mov
inc
call
fdivs
add
push
mov
dec
adc
mov
push
sub
or
stc
fidivrs
aad
xor
add
cwtl
pop
js
je,pn
cmpb
adc
test
ret
or
fwait
pop
xchg
scas
adc
sub
push
and
xchg
dec
mov
adc
divl
push
sbb
add
add
fstp
lcall
or
and
add
sub
in
orb
sbb
inc
js
das
psraw
test
add
and
lea
cli
daa
pop
fs
push
sbb
das
aaa
sbb
loope
or
jo
xchg
or
adc
sub
or
or
test
fistpll
or
push
inc
push
xchg
and
data16
call
or
push
dec
adc
cmp
or
mov
jo
roll
movsl
push
sbb
push
sub
and
cmp
xor
nop
cmp
xor
add
dec
dec
lods
imul
xchg
jb
xchg
adc
or
sbb
sbb
enter
adc
test
lret
and
add
inc
dec
mov
roll
dec
out
cmpl
or
insl
insb
imul
xchg
jle
push
cmp
pop
popf
inc
icebp
fisubs
cmpsl
fcmovb
adc
pop
cltd
inc
dec
bound
adc
inc
stos
nop
andl
mov
movsl
add
pop
sub
nop
dec
test
and
cltd
dec
stc
xchg
push
sbb
inc
jmp
xchg
sbb
cmpsb
adc
shrb
cmp
push
je
pop
dec
inc
push
or
movl
loop
or
jmp
cmp
or
push
decb
movsb
movsl
or
inc
test
add
repnz
rorl
xchg
sbb
aad
sub
xor
minps
nop
inc
lret
mov
cmp
andb
sbb
add
push
dec
aas
or
inc
xchg
in
das
or
daa
mov
test
adc
or
mov
mov
xchg
and
sub
mov
addb
xor
bound
pop
fmul
sub
outsb
jge
add
test
jmp
lret
out
pop
scas
lock
add
and
mov
into
pop
pop
dec
add
or
fs
lods
cmpl
lds
mov
sahf
sbb
or
aaa
mov
dec
dec
out
adc
jl
add
pusha
cmp
outsl
stc
mov
insb
and
test
and
cmp
jl
sub
inc
decl
mov
mov
push
mov
mul
sbb
mov
divl
cmp
adc
enter
lret
or
es
inc
mov
xor
ret
mov
adc
dec
sti
fcmove
xor
add
mov
aas
mov
xchg
jmp
ja
mov
xor
cltd
dec
mov
iret
lods
xchg
inc
mov
adc
fwait
add
inc
push
jmp
js
rorb
dec
sub
pop
push
mov
jns
addb
xor
push
pop
pop
adc
xchg
mov
push
mov
in
pop
xlat
dec
cld
pop
pop
lods
test
inc
lcall
cmp
push
hlt
adc
add
aaa
push
hlt
cmpsb
xlat
inc
pusha
dec
jo
in
fwait
mov
xor
jbe
test
push
pop
dec
adc
push
pusha
push
dec
mov
mov
dec
dec
jb
aad
rol
dec
lea
push
fmuls
bswap
dec
add
test
lahf
sub
adc
addl
pop
jecxz
cmc
add
xchg
js
fs
insb
or
into
dec
outsl
pushl
out
cmpsb
cmp
je
mov
or
mov
es
fildl
icebp
les
xchg
adc
arpl
fs
lock
mov
mov
push
jns
or
adc
jo
lahf
adc
stc
jp
bound
cmp
push
adc
lock
nop
aad
inc
push
test
jnp
inc
xor
dec
adc
imul
xlat
daa
icebp
jmp
add
add
aaa
lods
add
pop
cli
adc
movl
rorl
stc
fdivrl
cmp
jne
add
shrb
stos
xchg
pop
andb
sbb
ror
lret
mov
push
sbb
sbb
imul
sub
or
pop
insb
fcomps
cmc
add
mov
sbb
js
out
js
or
jge
mov
es
sbb
dec
pop
or
loop
push
dec
sub
jle
sub
pop
rolb
or
cltd
add
outsb
push
or
jb
lods
out
orl
pushf
pop
cmp
les
sub
inc
sub
in
faddl
hlt
push
movl
testl
cmp
and
add
push
mov
dec
mov
out
jp
out
push
stc
jo
pop
or
sbb
insb
mov
insl
movsb
push
and
lods
ss
fcmovnu
fwait
loope
sbb
sub
sbb
or
vmovaps
xor
add
push
adc
xchg
push
sbb
lea
cmpsl
lds
pusha
stos
add
in
nop
add
push
pop
scas
fcomi
add
jecxz
loopne
cmp
and
add
or
xlat
out
sbb
jmp
jnp
mov
je
mov
or
pop
daa
sub
push
adc
mov
mov
mov
or
push
in
cmp
mov
popa
cwtl
inc
push
mov
test
inc
adc
cmp
jne
mov
sbbb
jbe
xchg
test
imul
and
sti
sub
or
pop
scas
xorb
push
cmpsb
xchg
mov
pop
push
lods
jl
fldt
outsl
jg
mov
fcoms
sbb
mov
push
mov
jo
out
push
loope
movsl
sbb
sub
shlb
jmp
pop
mov
pusha
dec
sub
dec
pop
mov
leave
sbb
lea
lea
mov
xor
and
cmp
sub
cmp
push
shlb
sbb
dec
repnz
test
loopne
ds
loopne
mov
sbb
mov
inc
loopne
adc
jbe,pt
xor
loopne
pop
shlb
dec
sti
in
adc
and
je
or
call
sub
dec
push
inc
cmc
rorb
std
mov
adc
cmp
adc
sub
insb
leave
xchg
movsl
push
rcrl
mov
xor
lock
and
pop
cmc
inc
mov
icebp
xchg
call
add
into
mov
xchg
or
iret
sub
xchg
inc
sbb
or
rorb
push
xor
les
lock
adc
push
pusha
xor
adc
push
inc
and
sbb
dec
sbb
push
pop
mov
lods
ss
sbb
orb
nop
dec
rorb
sub
nop
push
popa
shlb
pop
test
mov
mov
addr16
loopne
add
int
enter
ds
pop
xor
sub
inc
addr16
stos
mov
sbb
hlt
mov
test
pop
pop
movsb
cmp
mov
test
into
inc
loop
push
ret
sub
push
jo
ret
call
leave
push
pop
cwtl
cmp
fisubrl
lock
jecxz
push
subl
stos
xor
ret
sub
pop
enter
hlt
jns
ret
dec
pop
ret
in
popa
xor
lret
lea
test
jnp
mov
addb
movl
pop
jne
divl
cmp
mov
fidivs
loope
add
insb
push
in
inc
cmp
jge
sub
imul
rcll
xchg
jmp
lods
xchg
pop
pusha
jnp
fcomp
or
call
xchg
xchg
testl
xor
jecxz
test
push
dec
xchg
bound
mov
push
push
xchg
push
push
das
dec
pop
xchg
in
pop
lods
in
cmp
or
and
call
or
xchg
xlat
movsb
or
loop
xchg
push
mov
push
xchg
or
sbb
pop
cmp
mov
clc
mov
inc
ret
lods
cld
loopne
sub
enter
or
subb
jo
add
mov
test
dec
es
xor
or
add
not
dec
mov
adc
ja
or
insl
pop
jmp
inc
xor
enter
mov
or
adc
add
daa
fcmovb
sti
mov
push
or
sbb
testl
lock
lret
int
mov
lds
scas
push
push
test
mov
movsl
add
pop
dec
pop
xchg
loope
dec
ret
rol
daa
std
add
xchg
pop
imul
mov
jl
and
inc
or
jmp
sbb
jg
fstpt
movzwl
pop
dec
sub
scas
shrl
addl
gs
add
data16
loope
cmp
push
dec
pop
sub
nop
cmp
jmp
popa
dec
lock
push
nop
pop
fildl
dec
imul
mov
pop
leave
xchg
push
insb
mov
inc
cmp
xor
mov
sub
cmp
nop
or
or
xchg
call
dec
sub
dec
inc
or
inc
sti
test
push
leave
xlat
inc
sbb
pop
sbb
fmul
and
aaa
pop
fsubs
push
mov
ficompl
nop
mov
out
mov
or
andl
nop
xorb
imul
pop
mov
stos
push
adc
out
loopne
pop
xor
xchg
jo
xor
ja
mov
jo
jnp
xorl
push
cmc
icebp
enter
xchg
popa
cmpsb
xchg
adc
and
pop
adc
stos
sub
bound
stos
sbb
sub
pop
jae
sub
nop
pop
nop
sahf
jo
insb
add
stc
sub
cs
mov
mov
sbb
out
and
lock
pop
sub
pop
ljmp
adc
les
fiaddl
cmp
add
pusha
rclb
xchg
or
mov
cld
xchg
ret
adcl
adc
sbb
cs
adc
les
aaa
push
mov
inc
sub
nop
pop
mov
xchg
jo
push
aaa
sbb
lea
incb
lods
push
adc
sbbl
mov
cmp
mov
mov
and
test
pop
inc
aam
rcrb
sub
sbb
sbb
das
call
movsl
gs
sbb
adc
loop
sbb
or
cmp
movl
inc
sub
idivb
sar
fbld
adc
adc
push
ja
fmull
pop
dec
jae
repnz
lret
adc
addr16
mov
mov
aaa
iret
jne
adc
sbb
cmp
cmp
ss
push
xchg
in
fwait
aaa
adc
hlt
mov
popf
lea
aaa
xchg
dec
mov
fnstcw
push
inc
sbbb
or
sub
and
jmp
mov
jb
stos
add
sbb
xor
dec
pop
fimull
or
addl
test
sbb
fidivrs
sbb
inc
adc
dec
movb
pop
xor
outsl
xor
inc
wrmsr
sub
pop
pop
sti
mov
xchg
sbb
addl
rorl
cmp
and
fldcw
test
pop
lret
mov
mov
sub
sbb
push
push
leave
adc
or
testl
adc
pusha
xor
mov
xchg
xor
pop
je
js
push
cltd
adc
movb
pop
jne
jno
lods
fld
orl
jge,pt
xor
and
jne
lods
lret
mov
push
pop
sbb
adc
inc
movb
mov
inc
lods
rol
and
fs
loope
lods
inc
ret
sub
pop
in
inc
mov
push
push
mov
outsl
fbld
repnz
adc
lock
mov
dec
pop
add
mov
dec
mov
adc
mov
mov
mov
gs
mov
xchg
pop
fs
and
cwtl
in
fs
mov
jno
pop
jo
or
data16
mov
jne
mov
or
pop
sbb
push
movsb
repz
mov
xchg
and
in
or
adc
push
ffreep
filds
stos
loopne
lcall
add
push
sub
dec
inc
mov
imul
movsb
pop
mul
mov
lds
xchg
sbb
pop
mov
outsl
or
inc
sbb
cmpsb
jns
or
push
sub
dec
push
sbb
ss
call
arpl
sbb
seta
call
movsl
enter
dec
add
add
dec
hlt
clc
push
aad
add
enter
insl
negb
sbb
or
mov
push
jmp
shll
push
or
add
add
out
and
dec
or
add
call
add
or
and
jmp
clc
out
jne
aaa
push
inc
push
jge
mov
adc
adc
ja
sbb
mov
or
fs
push
ret
orl
or
xchg
and
mov
mov
ficompl
and
fidivs
mov
and
imul
ret
jmp
cmp
ss
or
aam
pop
test
in
jo
mov
or
adc
xchg
outsb
sub
pushf
in
adcl
jbe
mov
inc
adc
mov
sbb
jo
fwait
int3
cld
shrl
daa
jecxz
pop
dec
add
push
push
and
adc
orb
es
int3
in
inc
sub
aam
loope
inc
jp
jns
push
xchg
fwait
mov
xor
jl
xchg
lods
sub
inc
sbb
leave
mov
dec
and
and
repnz
test
out
or
icebp
bound
fcomps
sbb
and
pop
fs
pop
in
mov
insb
mov
stos
add
xchg
adc
add
enter
and
adc
mov
nop
or
movsb
imul
sbb
and
or
inc
xchg
fisttpl
and
or
sub
push
test
mov
mov
dec
add
lds
mov
jmp
imul
ret
mov
jl
sub
mov
xor
sub
jle
jnp
cmp
push
xchg
int
or
push
cmp
dec
push
jle
pusha
pop
push
sbb
adc
jbe
in
mov
or
stc
sub
or
ss
adc
add
je
mov
pop
lds
or
out
popl
mov
add
xchg
aaa
addb
push
push
push
push
call
pop
or
pshufw
je
add
cmc
xorl
push
and
out
sbb
lret
js
or
sub
lock
ds
outsl
adc
adc
push
jo
xchg
int
jle
cmpl
sub
mov
jmp
iret
add
lcall
xchg
push
cmp
or
mov
pop
iret
lock
div
add
mov
and
fs
and
mov
aas
movsl
and
mov
mov
je
jmp
or
mov
push
mov
aad
pop
xchg
adc
jg
enter
js
lea
jnp
arpl
push
loop
add
cmp
mov
ja
shl
sub
adc
fdivrs
xchg
arpl
repz
adc
inc
jb
test
xlat
mov
lahf
inc
test
jmp
jb
mov
test
arpl
stc
xor
test
dec
inc
in
cmp
insl
jne
push
jp
or
xor
cld
fistpll
inc
lea
stc
cmp
aas
nop
movb
sub
dec
sbb
xchg
out
add
mov
jo
sub
push
inc
aam
sbb
mov
lods
xchg
and
add
rcr
es
lds
rorb
loopne
nop
dec
inc
xchg
xor
pop
insb
fbld
inc
jmp
sub
inc
les
test
xor
lahf
sbb
push
jl
pop
aam
addr16
cmpb
mov
and
or
fidivrl
ja,pt
add
lea
out
jno
data16
mov
jg
jno
sbb
ljmp
in
movsl
lea
subb
in
sub
mov
pop
xor
fldt
mov
sbb
add
sbb
inc
bound
mov
adc
sub
sub
pop
mov
or
adc
pop
add
add
rol
push
sarl
or
lock
inc
stos
in
daa
and
pop
jne
ja
and
sbb
mov
lea
xor
jno
dec
inc
and
or
pop
inc
push
loopne
mov
adc
or
sti
aam
jmp
inc
push
xor
sti
das
fsts
je
aaa
pop
jns
adc
xor
jo
mov
jno
ja
test
sub
nop
mov
sbb
dec
add
mov
rcrb
adc
inc
mov
or
or
scas
addr16
mov
mov
rcrl
das
adc
and
test
pop
xlat
push
jmp
inc
and
mov
or
jle
inc
inc
adc
xchg
pop
dec
inc
pusha
ljmp
mov
sbb
aam
sbb
inc
push
push
lea
sbb
inc
mov
jno
and
leave
xor
sub
and
mov
adc
pusha
outsb
ss
rclb
mov
mov
cs
dec
jmp
cli
add
gs
mov
pusha
sbb
add
adc
sub
xor
nop
cmpsb
adc
icebp
inc
lds
aam
jl
in
mov
jmp
nop
or
arpl
fs
jno
pop
inc
adc
xchg
or
xor
mov
cmc
pop
sbb
ja
xchg
lock
sub
xchg
test
ret
adc
or
mov
jmp
sub
inc
loope
out
and
adc
add
xorb
add
ds
or
cmpsl
xchg
or
xchg
or
adc
je
cmp
adc
push
cmp
xchg
pop
mov
push
imulb
cmp
pop
addr16
inc
and
sbb
inc
dec
xor
test
xchg
xchg
dec
push
adc
cmp
sbb
pop
sub
mov
push
push
cld
adc
or
inc
stos
pop
dec
pusha
or
lret
stos
xor
ret
sub
mov
sub
xchg
pop
enter
stc
hlt
loope
xchg
or
jo
ret
sbb
cmpb
push
pop
sub
shlb
push
dec
fnstcw
adc
clc
cmpsl
xor
adc
or
fs
or
ss
sub
xlat
and
fisttpl
mov
or
negb
imul
xchg
push
pop
daa
push
mov
pop
push
mov
adcl
punpcklwd
and
js
pop
inc
arpl
enter
test
mov
add
cs
aaa
pop
push
adc
pushf
add
pop
and
sub
sub
and
xorl
push
sbb
xchg
xchg
mov
or
adc
mov
ljmp
jne
mov
pop
inc
mov
fs
or
subb
subb
sbbl
push
cld
jp
and
scas
sbb
inc
js
and
and
add
shrb
and
xor
cmpsl
sbb
nop
pusha
or
das
or
adc
push
inc
sahf
sub
sti
subb
ljmp
loop
jne
sbb
add
int
mov
imul
test
or
in
adc
dec
add
cvtps2pi
lock
cwtl
sub
imul
inc
add
fdivl
enter
jp
fadd
push
and
xor
insl
or
or
clc
notb
add
dec
notl
test
xor
mov
jp
out
sub
hlt
pop
xchg
gs
idivb
dec
mov
jg
cltd
cli
dec
or
inc
outsb
sbb
inc
lret
sarb
ret
shlb
inc
add
or
das
or
mov
dec
lock
nop
sub
jg
bound
outsl
jmp
push
enter
ret
pop
ret
or
xchg
mov
cmp
inc
mov
mov
sub
mov
in
cmpb
mov
mov
pop
mov
insb
pusha
mov
pop
xchg
das
inc
ss
inc
push
push
xchg
xchg
and
imul
popf
adc
cwtl
cmp
imul
adc
xor
dec
xor
nop
fnstsw
arpl
in
push
ss
jle
pusha
stc
adc
inc
xorb
or
xor
test
inc
ds
push
stc
add
in
rol
rcrl
lods
adc
and
mov
cmp
pop
mov
jg
inc
fiadds
jb
aam
test
addr16
mov
adc
inc
fiadds
ljmp
nop
adc
in
das
add
and
in
mov
and
outsb
fisttps
lods
mov
push
or
mov
pop
inc
fisttpl
pop
add
inc
ficomps
rcl
outsl
push
jl
in
sub
lock
in
clc
jl
lock
jge
mov
push
cmpsl
pusha
ds
inc
push
lahf
testl
mov
iret
out
cwtl
sub
jg
aad
scas
mov
push
inc
push
or
les
fidivrl
lods
fs
and
sub
leave
push
leave
daa
insb
jge
js
inc
add
dec
cmp
push
sahf
imul
dec
je
inc
push
jbe
push
jecxz
in
das
lods
adc
imul
jae
scas
movsl
je
aad
stos
adc
jno
mov
mov
adc
add
dec
adc
dec
cld
test
aaa
sub
loopne
mov
loopne
call
dec
dec
aaa
adc
shrl
push
inc
scas
add
stos
dec
inc
jbe
sbb
push
orl
and
or
or
insb
unpcklps
or
xor
and
add
sub
stos
mov
and
ret
add
mov
clc
hlt
push
sbb
in
call
inc
loopne
fsubs
push
aam
int3
xchg
inc
adc
enter
jae
pmulhuw
movsb
cmp
adc
movsb
mov
cs
lods
push
jmp
int3
cmpb
sub
add
cmp
pop
xor
mov
int
sub
mov
adc
lods
mov
aas
xor
or
mov
mov
test
je
movb
out
movb
out
cmp
sbb
pop
dec
adc
sub
imul
sub
out
and
fs
and
pop
cmp
jmp
ljmp
sub
sub
jb
je
cmp
jbe
mov
mov
or
inc
or
sbb
push
push
bound
jo
and
adc
mov
adc
dec
loopne
aaa
jge
sbb
cmp
popa
es
mov
mov
push
sbb
cmp
add
or
and
or
push
push
popa
cmp
jle
push
pop
xchg
add
push
pusha
ret
sbb
das
sub
sub
dec
and
mov
jns
shlb
add
shr
fstl
dec
jmp
jmp
pop
sbb
shr
sub
push
pusha
rcrl
xchg
sbb
out
leave
jnp
jmp
pop
lock
adc
jb
sub
or
or
adc
push
repnz
orl
nop
inc
les
or
dec
xchg
repz
or
jmp
xor
mov
and
lock
pop
pop
inc
and
jl
inc
or
adc
dec
pop
enter
sub
test
roll
jge
pushf
test
ja
cmp
cmp
shlb
xor
sub
shrb
sub
xor
dec
aaa
xorb
adc
or
add
push
lea
lea
fcomps
or
mov
ds
jb
push
lods
add
repnz
xchg
shll
push
sarl
decl
push
dec
inc
pop
cmpsl
sahf
out
push
sub
adc
adc
dec
leave
inc
repnz
test
inc
xchg
sbb
in
adc
and
and
push
xchg
add
jne
sub
rorb
mov
push
push
xchg
xchg
pop
enter
pusha
mov
xor
add
or
sbb
les
clc
or
push
hlt
testl
mov
mov
mov
and
or
enter
nopl
xor
jmp
ficoml
xor
mov
fs
sub
es
and
adc
xchg
jne
out
insb
popa
jns
pop
add
pop
jae
push
jbe
push
mov
cwtl
jge
fiadds
adc
and
mov
or
or
adc
mov
ss
adc
test
pop
xchg
and
adc
inc
push
jecxz
dec
repnz
lcall
or
dec
and
cmp
pusha
mov
mov
mov
pop
jg
dec
push
xor
adc
or
es
sbb
loope
pop
xchg
cld
mov
pop
rcll
mov
cmp
inc
lret
inc
sub
ret
daa
lods
outsb
or
cli
lcall
adc
pushl
shll
imul
sbb
inc
or
adc
adc
adc
push
enter
jnp
mov
add
jmp
xor
jo
out
jo
popa
jbe
sbb
add
cwtl
or
inc
sbb
in
int3
add
sbb
ds
adc
sub
popa
or
dec
fcmovb
jl
mov
xchg
jo
scas
popa
sub
fmull
push
movsb
push
and
test
xchg
sub
rorl
sub
adc
mov
aam
hlt
je
enter
xchg
jl
pop
xchg
xchg
or
lods
ss
shll
mov
mov
cmpsb
pop
adc
xlat
mov
out
xor
out
idiv
enter
sub
pop
sub
mov
sub
loope
ficoml
add
cmovo
sub
push
mov
xchg
sub
mov
dec
loopne
lcall
nop
sbb
sub
cmp
add
and
clc
fstpt
cmpb
mov
and
pop
add
jle
dec
mov
add
pop
dec
js
pusha
xlat
dec
or
fst
add
sub
ss
lock
iret
ja
adc
add
sub
addl
pop
cmp
popa
add
ret
je
add
das
outsb
xor
inc
jbe,pn
sbb
and
sub
outsl
pop
int
test
sarb
iret
sub
inc
hlt
rorl
xor
sub
sbb
adc
into
in
lock
xor
or
fnstcw
subb
je
cmpb
xor
mov
hlt
hlt
push
jmp
mov
rcll
rorb
repz
sub
call
imul
xlat
loopne
mov
fcmove
insb
icebp
inc
jne
pop
mov
add
clc
xlat
jg
push
and
mov
inc
push
xor
sti
sbb
jl
mov
ljmp
dec
pop
mov
mov
xchg
js
out
add
add
sbb
loopne
xor
or
inc
stos
jl
test
mov
pop
mov
fwait
sub
xchg
mov
inc
insl
cmpsl
mov
mov
pop
xchg
push
sbb
clc
adc
xchg
cmp
fisttpll
xchg
je
jne
push
test
das
pop
jle
adc
or
sbbb
cmp
fldt
add
inc
in
push
repnz
nop
sub
push
ret
add
jmp
mov
xchg
dec
mov
adc
xchg
movsb
add
stos
mov
aad
push
inc
cmp
jge
inc
sbb
and
inc
sbb
add
dec
fdivrs
dec
jne
mov
dec
ljmp
js
rcr
add
stos
add
adc
in
xchg
sahf
into
and
inc
push
cmp
xchg
lock
fldl
adc
js
fimull
xor
push
das
ja
add
add
loopne
fldenv
test
xchg
cld
jns
sbb
rorl
unpckhps
and
jns
fs
outsb
dec
fwait
xor
outsl
dec
or
pop
dec
sbbb
jne
rcrl
sub
movsb
push
lds
or
mov
and
enter
sbb
push
mov
dec
add
mov
jle
and
mov
in
and
push
and
adc
sbbl
jmp
shr
popf
in
sub
sbb
in
es
mov
js
fadd
cmp
ss
inc
test
les
ss
dec
lea
in
jmp
or
mov
fwait
outsl
lock
loopne
push
inc
sbbl
dec
cltd
movsl
jbe
dec
and
and
add
shr
imul
repnz
jg
call
and
mov
cmp
dec
iret
icebp
mov
jne
mov
and
jmp
inc
inc
scas
jmp
addr16
dec
mov
lock
movsl
jne
or
dec
xchg
and
call
imul
push
cld
loope
push
or
repnz
push
xchg
call
push
push
jnp
dec
bound
pop
inc
jg
call
fldcw
add
icebp
or
and
pop
pop
adc
jl
pop
clc
ss
leave
mov
and
movsb
rcrb
imul
pushf
in
stos
or
inc
and
dec
push
fimuls
data16
jae
push
es
fistl
push
movsb
ret
adc
inc
mov
add
outsb
cmp
fdivr
movsl
jns
cmp
xchg
loope
mov
mov
dec
je
or
mov
adc
sbb
push
repnz
xor
jmp
adc
jmp
mov
jmp
push
daa
and
in
mov
sbb
rorb
popa
aaa
dec
addl
push
outsb
push
xchg
les
inc
pop
icebp
adc
fidivrl
jne
sbb
fsubp
push
adc
adc
es
sbb
inc
and
xchg
sub
jle
cmpl
bound
or
adc
xchg
dec
pop
iret
push
cwtl
xor
adc
je
cmp
add
pop
cwtl
subl
add
lea
fadd
xchg
xchg
cwtl
cmp
sar
test
sbb
mov
dec
cmpsb
xchg
inc
inc
cmp
leave
lcall
xor
neg
sbb
push
addr16
lahf
mov
push
test
add
mov
dec
push
mov
enter
mov
insb
or
xor
sbb
xor
nop
neg
les
inc
and
xor
cltd
dec
inc
jo
cmp
out
adc
dec
push
out
fs
push
rclb
push
cltd
nop
insb
push
fcoms
es
pop
lock
pop
jae
test
pop
call
pop
lods
pusha
clc
cld
int3
adc
sbb
arpl
arpl
add
mov
mov
and
pop
push
inc
es
adc
mov
sub
pop
lods
jae
jp
push
rclb
inc
enter
inc
outsb
dec
pop
or
pop
pusha
dec
push
and
xchg
mov
inc
and
outsl
jae
fisubrl
pop
daa
jg
fbld
jns
inc
xchg
jmp
jb
lock
cmpsl
mov
mov
pushf
outsl
cwtl
flds
mov
push
aam
push
push
fimull
nop
mov
rorb
mov
mov
jnp
popf
aas
dec
push
push
adc
imul
les
cmp
adc
pop
inc
and
push
popa
or
adc
scas
add
push
and
push
cmp
pop
push
xchg
popf
js
inc
repnz
pushf
popf
js
ljmp
pop
enter
or
decl
adc
pusha
subb
test
xor
dec
inc
mov
imul
test
dec
dec
mov
dec
cwtl
pushf
mov
dec
test
mov
dec
dec
dec
dec
mov
dec
dec
dec
enter
dec
dec
dec
dec
fcomp
loopne
dec
dec
dec
dec
call
dec
dec
dec
clc
cld
add
daa
daa
daa
daa
or
adc
daa
daa
daa
sbb
and
daa
daa
daa
sub
xor
mov
cwtl
mov
inc
jno
or
mov
lods
jecxz
mov
arpl
testb
int3
repz
add
xchg
lods
jmp
jl
and
repnz
pop
test
iret
orl
xchg
mov
enter
les
mov
iret
movsb
or
test
sahf
add
lods
sub
inc
cmp
mov
js
mov
cwtl
les
enter
out
sahf
add
push
in
nop
in
fdivr
fsubl
iret
cmpb
sbb
sbb
jae
xor
inc
iret
cmpl
sbb
jae
hlt
test
cmpl
in
nop
out
pop
mov
enter
push
or
or
cmp
adc
cmp
repnz
sbb
enter
sbb
and
repnz
insb
sub
sub
xor
xor
xchg
inc
jmp
and
lock
je
gs
gs
pop
xchg
lods
inc
push
sbb
add
cmp
inc
insb
outsl
jae
and
cltd
inc
mov
mov
xchg
rclb
das
adc
insl
sub
pusha
add
jb
pop
pusha
int
faddl
daa
test
sub
or
je
daa
mov
test
mov
gs
fldcw
sbb
fs
pop
dec
arpl
orl
jae
sbb
mull
cmp
idiv
adc
outsb
jae
sbb
les
inc
out
mov
adc
inc
push
adc
pop
mov
adc
xor
pop
xchg
inc
sbb
popa
push
or
les
cmpsb
pop
rorl
xor
push
xchg
lods
cltd
xchg
cmpsl
or
xor
lods
gs
cmp
jb
popa
and
orl
and
roll
lea
pop
mov
pusha
mov
pop
xchg
aas
cmp
and
inc
inc
add
mov
in
inc
and
adc
adc
jns
fisttpll
nop
jne
insb
mov
sbb
mov
les
imul
xchg
add
cmp
movb
inc
outsl
arpl
sbb
mov
ljmp
outsl
pop
rcll
fists
xor
cltd
inc
pop
adc
ret
sub
mov
inc
ja
cmpsl
cmp
and
push
add
sbb
es
cmpsl
xor
sbb
add
and
out
addr16
jo
mov
jns
cmp
notl
leave
dec
pop
shrl
inc
cmpsb
in
dec
stc
inc
repnz
push
push
add
and
test
test
movsl
in
cmp
xor
daa
sub
sub
xchg
sbb
ljmp
xor
orl
enter
repnz
mov
add
leave
sbbl
subl
jo
enter
scas
cmp
push
sub
pop
mov
mov
mov
call
insb
subb
jg
or
daa
add
lcall
mov
negl
push
dec
push
lods
pop
inc
or
aam
xor
lds
push
pop
sub
push
xor
jae
sub
xor
dec
fisttps
flds
push
pop
cmp
cmp
or
push
inc
add
push
dec
dec
dec
clc
pop
dec
dec
cmpb
cmovns
inc
push
push
add
ss
jo
pop
shlb
cld
inc
xor
push
push
inc
inc
arpl
and
out
cmpsl
adc
push
push
cmc
pop
push
adc
inc
sbb
js
adc
aas
sbb
add
dec
push
jmp
xor
jmp
je
mov
push
loop
fadds
inc
lock
leave
stc
sub
jns
nop
jns
stos
out
cmp
testb
mov
sbb
adc
jne
daa
pusha
data16
arpl
or
mov
or
dec
test
inc
in
and
pop
cmp
xorb
add
aas
ficompl
adc
mov
jo
inc
push
jg
insl
call
pop
lods
pop
mov
add
in
dec
paddsb
in
lds
sbb
lods
dec
mov
sbb
shll
leave
inc
adc
orb
lret
or
lods
loopne
aam
adc
mov
aaa
mov
or
pop
push
or
inc
popa
cltd
in
push
push
push
int
popa
or
repz
add
xchg
cmp
outsl
add
mov
shll
pop
add
inc
bound
je
push
inc
push
clc
xor
push
pop
dec
outsb
outsl
cmp
enter
inc
insb
insb
pop
push
outsl
pop
push
inc
jmp
out
inc
mov
shrb
scas
cmpsb
or
dec
mov
js
inc
push
jbe
je
sub
sbb
dec
pop
cltd
sub
mov
mov
addl
pop
mov
ja
mov
imulb
push
and
frstor
std
repz
adc
jecxz
push
lret
and
aaa
fiaddl
enter
les
fstps
int3
inc
mov
fs
mov
mov
lcall
les
push
imul
leave
out
or
jo
inc
fisubl
int
pop
fs
lods
in
jmp
pusha
mov
scas
mov
lock
cmp
sub
mov
add
insb
mov
mov
scas
inc
insb
xor
cwtl
dec
xor
clc
mov
in
add
arpl
adc
popf
adc
jl
adc
pop
fstpl
je
cmp
insl
pusha
pop
push
adc
pop
jne
push
mov
dec
pop
add
shlb
push
imul
jne
adc
jo
mov
movsl
jle
add
and
push
jae
jl
xor
xchg
adc
add
lea
sub
inc
test
subl
jp
add
push
xor
push
mov
xor
insb
add
mov
mov
mov
leave
or
xor
aas
sahf
ret
adcl
and
and
sbb
movsb
xor
xor
push
rolb
add
or
inc
pop
push
inc
push
dec
jnp
jmp
fimull
adc
mov
cmpb
jmp
xor
in
gs
inc
pop
je
add
or
or
cmp
arpl
out
or
xor
and
xor
mov
or
aam
xchg
sub
pop
and
mov
enter
and
or
sub
and
sub
or
enter
adc
enter
adc
enter
adc
or
sbb
and
sbb
or
enter
add
enter
add
enter
add
or
or
and
or
or
enter
das
add
cmp
inc
mov
push
cmp
cmpsb
imul
imul
cmpsb
imul
mov
imul
imul
imul
cmpsb
imul
pushf
nop
xchg
mov
addb
imul
lcall
lcall
cmp
imul
imul
imul
cmpsb
imul
cmpsb
imul
xor
cmp
add
js
mov
in
popf
das
or
js
mov
xor
in
fsubrl
in
scas
and
mov
out
gs
xchg
sbb
push
scas
insb
mov
pop
test
mov
pop
mov
and
rcl
test
push
pop
and
inc
mov
adcb
pop
sub
lcall
and
xor
imul
stos
ja
mov
jno
addb
jl
outsl
mov
mov
popa
and
pop
cs
pushf
insb
ja
aas
push
jbe
cmp
cld
inc
pusha
cmp
pop
lcall
sbb
movsb
inc
push
push
pop
dec
dec
mov
movsb
cmp
or
out
mov
or
cmp
nop
pop
sbb
mov
mov
and
mov
sbb
pop
push
adc
div
and
sahf
enter
add
xchg
mov
iret
jg
iret
pop
mov
out
and
popa
lea
jle
adc
fsubrs
mov
lods
lcallw
cmpl
push
imul
pusha
test
out
inc
fdivrl
sub
cmpb
in
fidivl
cmp
in
adc
add
jb
sub
add
jmp
add
pop
and
mov
xchg
subl
mov
dec
aas
outsl
js
push
lock
dec
and
inc
int3
jle
pushf
jmp
bsf
sbb
inc
lcall
das
lods
ja
je
gs
adc
fs
inc
or
adc
xchg
nop
out
ret
xchg
mov
fisubs
mov
loopne
jmp
and
push
sbb
xor
fcompl
test
mov
mov
int3
xchg
pusha
fwait
add
jne
cs
xchg
push
pop
inc
or
sahf
jp
dec
dec
sbb
dec
movsb
xorb
lcall
clc
fwait
les
mov
jmp
test
bound
add
dec
mov
inc
jmp
sbb
je
pushl
adc
jne
test
mov
mov
loopne
aam
inc
fcoml
and
inc
fsubrs
xchg
repz
les
mov
mov
lock
jns
int
lock
rclb
call
dec
rclb
mov
pop
cwtl
add
dec
dec
stos
or
daa
lods
cltd
adc
es
das
loop
inc
jno
testl
inc
int3
inc
mov
add
insl
cltd
adc
xor
les
outsl
push
cwtl
sti
repnz
fidivl
cmp
jno
mov
mov
dec
cmpsb
cmp
inc
mov
hlt
mul
sbb
outsb
adc
inc
push
test
dec
dec
cmp
cmp
pop
or
xor
lods
aad
xor
mov
int3
jns
adc
xor
pop
pop
fstl
cmc
mov
cmp
dec
inc
inc
in
or
push
arpl
push
pop
test
sub
pop
jmp
push
adc
dec
stc
leave
push
icebp
faddl
hlt
push
mov
or
cli
aam
iret
inc
mov
mov
movsl
xlat
mov
xchg
hlt
aaa
dec
sbb
push
into
inc
add
or
ret
xor
push
aam
mov
push
dec
lea
iret
scas
fsubl
subl
daa
ljmp
scas
sub
mov
fcom
dec
xlat
rorl
xor
inc
push
cmp
mov
movsl
or
pop
cmp
es
mov
sub
cltd
xor
aas
adc
cmp
aad
adcl
xor
movb
mov
mov
orl
ret
cld
sbb
popa
mov
and
adc
add
mov
leave
sbbl
or
pop
jp
popa
clc
pop
add
test
leave
mov
out
inc
ror
in
xor
ror
fs
mov
push
jbe
inc
fildll
popa
jg
cmpl
sub
dec
sub
xor
push
iret
mov
xchg
int3
mov
ret
cmpb
jnp
rcl
push
rol
fs
inc
shrb
cmp
and
pushf
ret
pushf
call
ret
push
rol
notb
push
or
and
jle
adc
mov
int3
gs
or
cmp
repz
es
sbb
jmp
sbb
mov
mov
dec
pop
or
clc
adc
add
rcrl
mov
leave
aam
daa
pop
repnz
enter
ret
loopne
or
icebp
dec
or
mov
daa
mov
call
cld
popa
fnsave
mov
ret
inc
dec
lds
mov
lret
mov
enter
and
jo
mov
testl
ss
push
mov
int3
jo
subb
daa
jg
call
imul
and
xor
jge
out
fbstp
sub
xor
dec
imul
verr
out
add
outsb
pop
lods
mov
jnp
add
add
insl
inc
outsl
pop
fisubs
fnstcw
arpl
pop
daa
jo
lods
int
jb
jb
popa
or
sbb
es
bound
cltd
addr16
jbe
daa
ja
imull
jbe
in
add
addr16
jb
addr16
fimull
and
push
insb
daa
push
jg
imul
outsb
insb
das
je
fcmovnu
data16
sbb
and
mov
jb
mov
cmp
pop
je
jo
jb
dec
pop
shlb
daa
jns
outsl
dec
add
fldenv
das
add
es
pop
push
hlt
dec
enter
ret
mov
mov
rorb
inc
js
in
cmp
push
pop
add
jo
add
mov
outsb
cmp
shlb
cmpb
daa
fldl
jle
pusha
jl
or
and
imul
cmc
and
xchg
out
pop
aaa
mov
dec
mov
jns
roll
push
mov
jae
pop
push
mov
push
inc
addr16
mov
xlat
into
mov
mov
cmp
fstpl
mov
insb
loope
out
icebp
out
mov
cmpb
ja
sub
push
mov
xorl
nop
aam
nop
xchg
or
pusha
mov
inc
nop
or
adc
jge
sub
lcall
xchg
xchg
inc
fcmovne
add
pop
cmp
popf
clc
inc
inc
dec
push
fldl
int
add
cmp
icebp
mov
mov
adc
insb
mov
fstpl
sahf
or
nop
pop
or
fadd
psrlq
rolb
aad
pop
iret
mov
loope
cmp
fucom
inc
dec
add
or
add
add
add
lcall
or
or
or
or
or
or
cmpsb
imul
cmpsb
imul
imul
and
and
hlt
lret
fnstenv
stos
push
mov
lcall
xor
lcall
lcall
fucomp
pushl
and
inc
push
shll
xchg
mov
scas
mov
daa
xor
xchg
or
mov
repnz
xor
add
add
adc
adc
enter
push
or
or
enter
or
push
cmp
repnz
and
and
and
orb
adc
repnz
sub
xor
and
cmpb
cmp
or
xor
adc
add
inc
pop
dec
or
xor
sbb
cmp
repnz
sbb
and
sbb
pop
sahf
idivb
sbb
popa
imul
jns
out
dec
and
cmpsl
jns
and
and
jns
jns
adc
and
add
subl
add
sarb
and
les
push
push
lcall
pop
in
mov
enter
pop
arpl
push
aam
ds
lea
mov
fiaddl
push
out
popa
or
pop
push
pop
imul
test
adc
push
add
test
and
lods
lock
push
aaa
movsl
mov
sub
and
push
xchg
aaa
push
mov
sub
push
pop
push
xchg
roll
and
nop
push
loopne
faddl
clc
addr16
pop
add
dec
int3
mov
dec
xchg
sbb
and
bound
mov
mov
pop
ljmp
sbb
enter
push
iret
push
call
enter
fbstp
roll
lret
int
lock
hlt
js
jecxz
mov
pop
push
pushf
pop
lock
into
dec
push
enter
into
mov
mov
das
and
mov
out
mov
inc
add
stc
popl
out
add
or
inc
mov
call
sbb
repz
add
push
fistps
dec
mov
lret
ss
and
fdivr
mov
in
add
or
outsb
jae
sub
inc
jbe
jl
faddl
sub
test
cli
fsubr
movb
sbb
and
dec
cld
iret
outsb
cmpb
mov
loopne
lock
fadd
in
aas
pusha
xor
and
ret
test
inc
push
jns
dec
push
jle
add
and
fimull
loopne
rcrl
push
or
shrd
xor
vpmullw
in
xor
shll
push
adc
and
xchg
mov
cld
aam
insl
push
pop
push
pop
pop
dec
jge
cld
push
roll
and
fildl
mov
mov
push
aam
jecxz
or
iret
lea
pop
sbb
dec
fst
inc
add
xorb
add
or
push
mov
mov
adc
push
das
pop
repz
cmp
sub
clc
sbb
clc
push
push
add
adc
popa
in
lods
rcl
xchg
fbld
inc
add
je
stc
shrl
adc
rcpps
daa
pop
bswap
lcall
fistpl
mov
test
inc
shrb
ret
shll
add
rcrb
pop
sub
or
or
add
pop
pusha
and
pop
popf
hlt
xor
mov
jns
jecxz
or
sub
sbb
jl
lods
or
cmp
cmp
inc
inc
inc
mov
cmpsl
cmp
test
subb
push
add
inc
clc
dec
popa
xor
fs
aaa
dec
stos
sbb
testl
adc
or
or
out
imul
movsb
roll
aam
negb
dec
cli
and
lds
lcall
and
sbb
cmp
lcall
pop
gs
aas
ret
xchg
aam
cmp
sarb
xor
rorl
fldl
add
dec
lcall
clc
sbb
inc
dec
outsl
aaa
mov
filds
sub
sub
and
sub
push
pop
xchg
out
sti
sbb
cmp
sub
sub
and
xor
sbb
xor
sub
or
xchg
test
inc
adc
inc
aad
adc
rcl
xchg
or
fisttpll
mov
sbb
inc
pop
int3
aad
add
pushf
xlat
nop
inc
and
mov
mov
mov
enter
lock
add
mov
xor
jecxz
loopne
in
adc
inc
nop
mov
jbe
adc
imul
lds
sub
or
inc
pop
inc
mov
lods
fadds
stc
insb
or
sbb
cmp
shll
dec
inc
jmp
sub
sub
push
jb
push
sbb
push
xlat
push
enter
mov
or
sub
pop
jbe
insb
lods
cmp
fists
mov
sbb
aaa
mov
mov
rorl
sbb
cmp
rclb
rorb
ja
xor
andb
cmc
and
sub
shll
sbb
popa
add
jecxz
decl
je
or
je
out
test
pop
arpl
mov
mov
or
dec
popf
outsl
jbe
add
mov
mov
pop
sarb
das
in
adc
in
or
lea
push
fildl
imul
in
or
addb
mov
rclb
lahf
in
mov
push
jle
das
push
addb
push
and
cld
mov
lods
push
pop
push
dec
dec
dec
inc
dec
and
in
dec
mov
add
inc
repnz
xorl
aaa
adc
push
or
mov
inc
hlt
rcrb
xor
popl
xor
cmp
push
pop
mov
push
aaa
cmpsl
push
push
hlt
adc
pusha
or
cmp
jne
sub
rol
fildl
out
adc
jae
jecxz
xor
sti
jmp
cmp
push
add
cmpsl
stos
inc
fimull
jge,pn
fstpt
add
mov
mov
or
mov
and
mov
push
and
pop
adc
mov
je
inc
cmp
xor
dec
andb
adc
mov
movsb
lock
add
sub
btr
and
pop
jge
sbb
adcb
jmp
enter
cmc
or
inc
sub
fistl
idivl
sbbl
addps
mov
cmp
fsub
and
outsl
fmull
pop
inc
mov
sub
or
adc
or
mov
daa
or
cmp
xchg
xchg
subl
cmpsl
dec
hlt
ror
push
jns
orb
aaa
dec
cs
mov
mov
sbb
pop
push
addr16
jb
pop
mov
xchg
mov
push
xor
xorb
popa
dec
add
or
outsl
je
or
pop
into
popa
insb
cs
jae
outsb
adc
add
mov
pop
fnstsw
decb
sbb
add
add
je
inc
lods
cmp
cld
add
push
fs
les
lods
imul
add
ret
addr16
mov
and
dec
xor
pop
cltd
adc
sbb
inc
incb
fiadds
mov
cmp
fldl
xchg
pop
jb
add
add
mov
pusha
cmp
insl
dec
fiadds
shl
les
push
mov
push
outsb
xchg
movsb
imul
add
add
add
push
jg
fildll
jns
mov
fisubrs
and
jns
insb
ss
sbb
jo
cmpsl
js
adc
mov
scas
in
add
lods
cs
pusha
mov
je
xchg
mov
imul
out
pop
sub
cwtl
inc
movsb
loopne
sbbl
xchg
fists
add
xchg
aaa
inc
loope
sbbb
mov
and
pop
inc
cwtl
cs
push
ficoms
ret
nop
movb
adc
mov
loopne
pop
loop
sbb
dec
ror
out
outsb
out
fcompl
inc
cld
sbb
inc
pmulhuw
pop
or
fstps
lods
xor
inc
push
aam
nop
push
adcb
in
imul
cs
inc
push
int3
dec
imul
js
es
rorb
imul
push
clc
out
adc
mov
nop
je
add
mov
sub
add
xchg
sub
bound
cmp
shll
bound
and
jle
test
mov
mov
or
nop
lds
fstl
inc
jne
sti
xchg
mov
arpl
or
out
lock
jae
jbe
repz
xor
fs
ret
pushf
jb
dec
gs
jbe
or
push
jo
rclb
mov
outsb
cmp
push
imul
popf
out
imul
inc
std
push
ss
addb
dec
sti
dec
outsl
jb
add
and
adc
adc
or
cmp
adc
imul
ja
or
fmull
add
add
mov
fwait
js
cmpb
inc
in
jo
pop
pop
inc
add
inc
jbe
lds
enter
adc
inc
push
mov
movb
adc
js
jmp
fdivrs
insl
repnz
sbb
or
and
mov
or
mov
add
orl
decb
dec
imul
push
add
jbe
in
add
or
inc
inc
xor
pop
shlb
or
lret
pop
dec
pop
sbb
imul
and
xchg
out
dec
outsb
mov
add
pusha
mov
lds
or
xchg
xchg
add
add
mov
iret
mov
repz
push
jb
add
in
sbbb
nop
ja
imul
mov
adc
mov
iret
add
test
push
or
jb
repnz
loope
adc
jb
sub
cmove
jo
sub
sub
mov
or
mov
adc
xorl
lock
cmpl
in
cmp
iret
push
iret
push
stos
sub
addr16
leave
mov
repz
outsb
enter
add
icebp
mov
jmp
or
jp
or
sub
jecxz
xor
stos
mov
fnstcw
jmp
fsubl
or
add
xchg
nop
ret
es
sarb
mov
or
aam
jnp
test
push
or
or
or
adc
adc
mov
sub
adc
pop
lea
inc
or
dec
lea
or
sbb
add
jno
mov
mov
fwait
and
xor
dec
fmull
ficoms
inc
gs
add
push
out
mov
out
testb
pop
enter
lock
imul
push
add
popa
adc
divl
stos
sbb
sets
add
scas
fs
lods
add
sbb
das
push
enter
push
push
jo
ja
and
rclb
negb
or
out
or
cld
mov
imul
test
mov
mov
daa
call
pop
xchg
int
out
pop
push
sbb
inc
sahf
loopne
fs
inc
jo
call
dec
pop
cmp
inc
int3
dec
push
loope
cmp
and
lahf
xchg
int
cmpsl
cwtl
sbb
mov
scas
mov
test
das
pop
and
outsl
imul
push
pushf
dec
enter
xchg
in
pop
pop
xchg
scas
stc
ss
jg,pn
sub
xor
sbb
fldt
push
and
mov
andps
dec
mov
mov
add
push
add
inc
jmp
xchg
add
pop
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
xlat
call
call
call
call
call
jmp
call
dec
add
dec
dec
dec
mov
lret
leave
dec
aas
inc
add
xor
lods
pop
cmpb
test
add
dec
mov
call
mov
imul
lcall
clc
sbb
je
sub
push
xchg
lods
les
pop
inc
in
insl
lcall
dec
loopne
insl
xor
inc
cld
cmp
or
cmpsb
xor
pshufw
and
data16
je
sarb
mov
xor
cmp
addr16
dec
jl
xlat
pop
sub
inc
iret
sbb
dec
js
lods
jns
mov
fs
and
mov
push
dec
cltd
int
mov
mov
xchg
pushf
and
nop
xor
sarb
pop
lods
leave
movsb
push
fcmovbe
nop
pop
pop
sbb
mov
pop
or
pop
or
mov
cmp
sub
icebp
xchg
mov
cmp
add
dec
repz
ds
js
sbb
pushf
idivl
xchg
adc
push
jns
loope
push
aas
incl
insb
push
xlat
xor
mov
push
jno
orl
add
push
adc
mov
add
jbe
orl
push
cmp
add
pop
dec
add
shl
jns
mov
add
loope
mov
dec
sbbl
adc
xor
icebp
int3
dec
dec
pop
into
dec
lds
push
out
adc
mov
nop
test
jg
jle
inc
outsl
arpl
std
sbb
add
mov
insb
rcl
or
jg
push
insb
cmc
pop
popa
lcall
push
test
pop
lahf
les
sbb
and
push
pop
sahf
push
dec
and
push
lahf
lods
push
in
pusha
repz
sub
lahf
sub
or
mov
xchg
lahf
mov
pusha
insl
mov
cmp
fisubl
es
pop
in
fsubs
outsl
imul
mov
call
pop
cs
xchg
xor
movsb
fmull
sub
andb
test
add
add
clc
pop
xlat
add
add
pop
pop
and
add
nop
rcrb
add
mov
das
iret
add
mov
test
adc
ja
adc
sbb
cmp
or
add
mov
mov
mov
mov
mov
cld
lcall
or
mov
mov
mov
mov
mov
mov
mov
and
ljmp
mov
mov
mov
mov
mov
mov
add
push
mov
xor
cmp
cmp
sbb
lret
inc
inc
inc
lock
inc
inc
inc
inc
jecxz
loop
clc
das
cmpsl
std
mov
stc
sar
das
jo
sar
fwait
mov
pushl
int
rcr
mov
pop
adc
lcall
pop
jl
ss
cmpsb
mov
jns
lret
cmpsb
fldenv
push
lock
test
fisttpl
adc
insb
xchg
jns
imul
pushf
mov
sarb
xor
fwait
cmpsb
test
dec
mov
enter
rcl
fsub
cmp
dec
mov
push
and
in
movsb
push
adc
imul
push
and
je
fbld
hlt
push
cld
push
add
mov
or
test
lea
pusha
add
dec
imul
addr16
addb
xlat
lcall
mov
repnz
push
jl
sub
clc
push
imul
cwtl
xchg
scas
test
movb
imul
ds
xchg
addr16
inc
xchg
lret
scas
pop
cmp
or
push
pop
inc
pop
and
mov
outsl
push
pop
dec
fdiv
div
mov
ss
in
divb
inc
pop
test
cs
add
push
pop
or
imulb
sub
sub
mov
das
xchg
divl
lret
in
clc
xor
sbb
mov
test
or
movsl
into
test
insb
imul
push
je
ss
adc
adc
inc
push
stos
sti
inc
push
in
mov
scas
inc
clc
cwtl
mov
lods
and
mov
js
jbe
add
sub
or
pop
pop
mov
aas
out
mov
test
dec
test
outsb
xchg
or
or
or
push
in
sub
inc
push
in
and
push
add
les
cmp
in
mov
cmpsl
inc
shll
cmpsb
push
push
sar
rcr
lcall
ss
pusha
test
hlt
add
je,pn
cli
mov
add
loopne
or
or
jl
sbb
mov
das
test
int3
xchg
and
les
push
mov
lahf
test
test
mov
pop
adcb
add
pop
lea
add
push
nop
outsl
dec
mulb
or
orb
xor
push
mov
dec
push
sarb
je
push
and
fldenv
pop
lea
add
pop
aam
movb
and
loopne
ja
add
or
or
fsubrl
or
cmpsb
push
push
lock
sbb
rcrb
pop
fcoms
ret
jno
stc
pop
xor
adcb
mov
dec
jne
inc
push
mov
xor
sub
rorl
je
cmp
adc
mov
lock
fs
jmp
mov
push
mov
mov
jg
push
push
pop
push
or
inc
or
nop
nop
dec
enter
pop
daa
subl
dec
push
pop
dec
inc
gs
insl
dec
add
jno
jbe
aad
xchg
daa
push
in
fmuls
push
inc
push
inc
insl
shrl
daa
push
jo
daa
or
enter
inc
insb
popa
pcmpgtd
push
mov
dec
outsl
mov
add
xchg
daa
dec
push
jo
imul
sub
into
adc
mov
pop
mov
movb
pusha
adc
jnp
out
loope
in
sub
sub
cmp
dec
ljmp
punpckhdq
xchg
mov
mov
mov
pop
push
cmpsb
jae
mov
inc
jl
lret
dec
pop
scas
xchg
loope
pop
jl
cmp
shlb
dec
and
mov
xchg
les
jp
les
cmpl
aam
adc
ret
mov
push
outsb
mov
out
sub
adc
and
jne
mov
xor
aas
mov
xor
out
or
pop
dec
and
inc
int3
incl
add
cmp
add
push
jne
add
lret
adc
cmc
out
andb
sub
push
or
fisttpl
pop
addr16
mov
pop
sbb
mov
pusha
xchg
pop
loop
lods
pop
and
int
sbb
pop
mov
add
xlat
lock
add
icebp
imul
frstor
jno
nop
fwait
inc
pop
sbb
int
jne
cmpl
mov
sub
das
push
xor
in
dec
dec
jne
cld
mov
mov
jmp
jl
push
push
and
pop
es
adc
fidivs
sbb
push
or
push
pop
mov
fwait
js
and
aam
insl
sub
repnz
or
adc
mov
lret
mov
adc
sbb
lret
mov
lret
and
sub
sub
cmc
adc
scas
push
push
xchg
arpl
mov
push
in
and
fisubs
insl
mov
add
jno
dec
sub
jne
mov
lods
mov
push
xor
idivl
lret
xchg
adc
cmp
je
sub
push
or
je
push
outsb
fiadds
icebp
mov
je
ja
xchg
push
fadds
popa
mov
lock
fisubl
hlt
lahf
sbb
push
sti
movsb
rclb
add
pop
mov
stc
sbb
dec
mov
inc
jg
jne
sbb
les
sub
push
sub
loop
adc
or
pop
in
lret
cmp
pop
push
fcomps
mov
xor
adc
mov
cmp
mov
pop
xchg
add
and
hlt
popa
xor
or
jmp
ss
dec
and
repnz
push
add
adc
add
sub
pop
mov
sbbb
imul
xchg
xor
nop
jg
xchg
je
fs
xchg
fstl
cmpb
inc
cmp
nop
sub
dec
and
pop
inc
mov
inc
xor
pop
out
mov
sbbb
xchg
testb
dec
fbstp
or
and
or
push
or
inc
push
pop
jp
pop
call
dec
sbb
mov
dec
sbb
pop
dec
popf
and
aas
push
inc
mov
cmp
add
nop
add
pop
cmpsl
test
inc
xchg
xor
les
xor
aad
dec
or
cmp
mov
pop
adc
mov
mov
aaa
out
jns
add
push
pop
mov
pop
insb
cmp
bound
lea
loopne
xchg
mov
push
pop
pop
inc
inc
sub
jecxz
inc
cld
pop
xor
pop
xlat
mov
push
sub
aam
inc
adc
fdivrs
add
and
stos
cmpsb
sub
add
xchg
jo
mov
or
or
mov
sub
pop
push
mov
ret
fmull
dec
or
adc
rolb
and
xchg
inc
sbb
or
or
push
mov
sbb
xchg
fisubl
int3
xchg
mov
fstps
aas
aaa
xor
add
xor
and
mov
ja
add
out
fistps
mov
sarl
jb
jne
test
xorb
adc
xor
adc
mov
dec
mov
mov
jnp
xlat
mov
or
imul
test
xor
adc
or
in
rol
cli
dec
jno
pop
imulb
je
out
push
adc
loope
sbb
pop
xchg
icebp
cmp
adc
mov
cmp
pop
mov
cmp
inc
je
or
pop
in
pop
movsl
in
sub
orl
imul
in
ja
bound
or
bound
mov
adc
push
mov
clc
adc
inc
jae
jbe
mov
cmp
inc
inc
dec
and
xchg
rclb
sub
inc
in
xchg
rcrb
sub
add
mov
mov
sbb
popf
add
mov
lea
loopne
inc
sub
inc
cs
mov
test
lea
and
jno
stos
ret
dec
xchg
pusha
cmp
lock
or
or
cmpsb
jo
inc
cs
sub
loop
jge
test
or
test
mov
inc
or
pop
pop
iret
add
push
cmp
mov
inc
mov
sbb
push
hlt
jp
jo
gs
cmpb
in
xchg
and
scas
jno
push
xchg
add
popa
fsubs
xor
mov
jle
inc
jno
call
mov
daa
ljmp
xchg
cmpsl
imul
fmuls
mov
mov
jne
in
dec
and
or
dec
cld
test
fdivl
and
or
test
cmp
add
pushf
int
xchg
push
push
cmp
mov
inc
jne
and
add
imul
xor
mov
adc
test
add
inc
and
insl
nop
cwtl
pop
in
sbb
or
enter
sbb
dec
xor
dec
jmp
call
das
mov
add
cmp
push
fists
xchg
cmpsb
mov
nop
and
xchg
dec
push
push
pop
inc
pop
lcall
adc
cmpsl
push
ret
insb
movsb
xchg
gs
add
pushf
pop
out
and
pusha
xchg
sbb
clc
mov
mov
adc
or
ret
test
ret
jmp
push
call
push
mov
mov
movsl
sbb
jbe
mov
cmp
xor
jb
and
xchg
mov
pop
insl
pusha
push
popa
cmpsl
call
jo
jl
mov
cmpl
adc
insl
in
pop
adc
dec
jne
adc
aaa
call
cmp
pop
daa
test
add
js
out
or
and
sti
sbb
mov
mov
repz
divl
clc
ret
mov
fistps
dec
jge
mov
push
int
imul
mov
es
or
in
jecxz
stc
lret
cmpsl
es
je
jecxz
xchg
push
insb
arpl
loop
sub
fmull
lock
movb
data16
mov
xchg
add
dec
mov
je
ljmp
cmp
out
cmp
push
sub
fwait
push
test
mulb
lahf
adc
pop
cmp
andb
bound
mov
push
das
push
adc
or
pop
inc
mov
fidivs
inc
ret
dec
push
pop
rclb
push
push
testb
inc
int
loopne
std
les
subb
sti
mov
mov
inc
std
fmul
jmp
mov
pop
shlb
pop
popf
cmp
mov
sbb
icebp
stos
add
sbb
pop
or
inc
jo
outsb
push
push
cmp
xlat
out
pop
nop
sti
adc
imul
pop
pop
and
fistpll
in
adc
xor
add
or
pop
in
pop
hlt
ret
dec
out
mov
movsl
push
pop
sub
sub
lret
cmp
sub
mov
aam
xor
xor
inc
cwtl
xchg
fdivrl
das
ss
push
xchg
fidivl
cmpsl
repnz
push
mov
loope
scas
jns
push
aam
sti
lea
inc
adc
or
dec
imul
mov
pop
loopne
dec
sub
lea
fprem
loopne
js
or
stc
frstor
mov
fmull
sbb
add
mov
pop
fistpl
incb
fdivrp
fstpl
fwait
jmp
inc
and
cmp
and
adc
or
sbb
sub
imul
insl
stc
imull
push
push
insl
pop
sub
add
adc
sti
and
sbb
jmp
pop
or
dec
in
pop
adc
or
pop
sub
or
cld
or
push
cmp
mov
in
bound
jno
xchg
hlt
rclb
and
push
add
mov
lea
inc
daa
push
out
push
sbb
es
cmovo
imul
add
aad
fiaddl
popa
outsl
fiaddl
popf
add
and
xchg
jecxz
sbb
or
xchg
test
jo
add
sbb
sub
sub
in
jge
jle
cmpsl
sub
xchg
mov
push
lret
les
dec
inc
dec
jmp
stos
clc
adc
mov
into
dec
xchg
mov
lods
push
call
fisttpl
sub
add
mov
add
pop
mov
cmp
dec
add
dec
shrd
je
push
mov
pushf
je
xor
insb
sub
and
ror
loope
test
mov
hlt
mov
jne
mov
inc
out
sbb
es
mov
sub
sahf
push
outsl
add
aas
push
add
add
in
xor
mov
aaa
ds
mov
movb
or
add
sbb
adc
push
lret
cmpsb
jp,pn
in
pop
movb
adc
sbb
cmp
and
test
call
rol
mov
ret
mov
xchg
sub
dec
add
fsubrs
stc
cmp
xor
in
je
or
cli
jmp
and
xor
push
pop
test
cmc
push
rep
inc
cmp
jge
jb
movsl
mov
push
adc
arpl
mov
ja
pop
outsb
je
test
xor
adc
mov
sub
xchg
mov
push
adc
cmp
mov
pop
add
aaa
and
push
js
jo
gs
mov
pop
sub
loope
pusha
pop
mov
add
and
adc
mov
or
sub
insb
sub
adc
movsl
arpl
adc
add
into
inc
xor
pop
jno
lds
and
xchg
cmp
and
adc
adc
mov
and
ror
repz
and
sub
enter
xchg
ret
es
pop
loopne
or
adc
fwait
shrb
inc
mov
dec
dec
sub
inc
filds
out
pop
xchg
loope
push
call
sub
add
add
sbb
pop
xor
test
cmp
mov
mov
imul
lock
add
stos
push
add
and
out
cmp
test
in
push
fsubl
push
adc
mov
lahf
mov
or
push
or
jp
jl
test
xchg
scas
lock
adc
mov
inc
scas
insb
jo
xor
cld
mov
lock
aas
jp
sub
aaa
xchg
xchg
jmp
aad
push
inc
lock
pop
inc
mov
xor
dec
mov
ljmp
cltd
pop
inc
daa
ss
data16
adc
gs
push
sub
mov
dec
mov
mov
imul
jno
ret
jmp
pop
shll
gs
pop
pop
inc
or
sbbb
fsubrl
mov
lret
lea
inc
dec
add
adc
dec
dec
or
in
sub
jge
sbb
sub
jb
pop
xor
pop
mov
sbb
mov
pop
jnp
inc
imul
xchg
dec
insb
repz
push
inc
pusha
adc
sbb
mov
sbb
loope
push
mov
push
adc
test
ljmp
push
subb
jg
cwtl
rorb
mov
inc
add
xchg
pop
popa
push
xchg
jecxz
out
mov
and
push
adc
adc
mov
adc
lock
mov
and
jno
push
icebp
adc
out
ljmp
dec
out
pop
jmp
cmp
je
mov
ja
in
test
jbe
pop
adc
popf
jge
cmp
xchg
in
je
or
adc
and
aaa
inc
jbe
cmp
jns
pop
repnz
pop
je
cmp
cs
pushf
or
arpl
and
daa
inc
fstpl
pop
test
push
mov
cli
add
dec
bnd
outsl
push
inc
adc
in
jbe
or
gs
fisubl
xlat
cmpb
cmp
outsl
ljmp
shll
into
pop
xchg
cmp
cmp
mov
adc
popf
add
add
loopne
inc
pusha
leave
jns
jne
int3
aaa
jecxz
add
add
out
jae
filds
and
pop
and
and
inc
insl
xchg
aam
add
lock
sbb
test
icebp
mov
mov
xchg
shlb
sbb
lcall
rcr
sbb
mov
push
push
int
mov
push
add
sbb
test
dec
outsl
movsb
sbb
cmp
mov
push
gs
cmp
adc
and
push
sub
movsb
xor
and
mov
enter
lcall
imul
mov
fs
jg
imul
cmp
jp
mov
xchg
outsb
imul
movsb
filds
imul
and
mov
ss
aaa
jne
mov
sbb
xchg
jne
movsl
xor
mov
xchg
or
dec
insb
scas
cmp
push
push
xchg
stos
daa
xor
insb
repnz
push
adc
adc
cld
addr16
mov
push
xlat
sbb
mov
stos
je
xor
add
mov
pop
andl
aas
mov
jae
insb
inc
mov
xlat
addb
cmp
ljmp
je
sbb
cmp
inc
jo
jo
loop
xor
inc
push
add
pop
pop
pop
sbbl
adc
push
pop
cmpb
push
mov
xor
out
inc
sarb
push
add
dec
je
add
bound
or
lods
mov
xor
test
push
sub
jns
cmp
aas
push
push
jp
xchg
shlb
int3
jl
popa
add
mov
or
push
in
sbb
inc
insb
xor
sbb
inc
pop
punpckhbw
mov
fcoms
xor
sbb
ret
push
and
mov
cmp
adc
mov
mov
add
cwtl
push
push
mov
fisttpl
pop
mov
insl
jno
add
xor
cmp
xor
fnstsw
inc
pop
adc
push
pop
in
adc
js
lds
push
aaa
push
ret
andb
jbe
cs
nop
shlb
adc
mov
in
xchg
fdivrs
push
and
or
cld
push
call
or
push
outsl
adc
arpl
repz
orl
stos
inc
cs
push
cli
lods
mov
in
and
push
mov
inc
or
dec
mov
and
adc
push
out
sbb
inc
pop
adc
sbbl
push
lret
push
xor
pop
lock
dec
mov
ds
cli
adc
adcl
add
sbb
xchg
clc
or
dec
lds
push
sub
aaa
mov
and
or
enter
push
idiv
cmp
je
icebp
call
xchg
and
or
xchg
and
push
cmpsl
xchg
mov
and
jle
or
test
mov
sbb
jmp
cmp
clc
jo
jbe
jne
sub
or
xor
and
test
lods
adc
xchg
or
push
cmpsb
ret
nop
jo
pop
fisubrs
clc
cltd
jne
mov
pop
xlat
mov
adc
push
je
mov
mov
add
rorl
ljmp
cs
and
add
ja
ret
inc
dec
push
pop
dec
dec
inc
jp
insb
loop
push
inc
out
xchg
test
or
aaa
jns
out
adc
dec
and
xor
inc
mov
push
or
xor
icebp
hlt
clc
jb
inc
ja
jnp
jne
je
jmp
xchg
dec
jne
mov
cmp
loop
popa
push
push
push
and
jns
inc
inc
mov
mov
test
stc
dec
repnz
scas
shl
inc
push
ret
testb
iret
dec
xchg
cs
cmpb
int
ret
sub
xorl
mov
cmp
int3
mov
out
nop
es
xchg
jecxz
push
dec
jmp
repnz
fisubs
das
mov
push
adc
or
fcmovnbe
iret
xrelease
sub
add
subl
adc
sbb
sub
add
cmp
incl
or
pop
xchg
jle
and
inc
cmc
xchg
inc
mov
loopne
pop
fistpl
pop
adc
mov
mov
das
push
dec
xor
adc
das
les
mov
rolb
dec
roll
sub
inc
push
ficompl
mov
dec
add
push
xchg
pusha
pop
cmp
dec
add
push
inc
in
sarb
cmp
in
outsb
xor
aad
mov
pop
je
and
and
or
dec
push
imul
or
enter
adc
xchg
and
adc
in
in
cmp
cli
clc
ja
push
lock
and
mov
push
bound
cli
lds
fmulp
mov
push
cmp
mov
sub
jo
clc
pusha
push
sti
decl
mov
imul
sub
jb
cmp
jns
cmpsl
repz
add
cmpsl
pop
inc
mov
lods
jo
movb
imul
add
and
mov
dec
mov
outsl
dec
add
add
lea
fldenv
daa
scas
cs
cmp
inc
add
push
sub
adc
and
pop
mov
leave
xchg
push
xchg
mov
lea
mov
xchg
dec
mov
push
or
mov
push
shrb
pop
sub
and
xchg
outsb
in
xchg
hlt
pop
lret
nop
mov
mov
push
icebp
and
xchg
movsl
and
aam
daa
sbb
pop
sub
pop
fiadds
push
or
js
iret
psraw
inc
repnz
inc
pop
mov
stos
mov
xchg
mov
stos
pusha
mov
add
nop
and
icebp
inc
shrl
lock
and
xchg
or
mov
sub
jno
add
mov
jmp
mov
inc
sub
inc
and
push
push
cmpsl
or
jns
mov
cwtl
or
xchg
cmpl
ja
shll
push
jnp
sahf
sub
pop
jmp
mov
pop
mov
aaa
dec
sbb
sbb
call
shrb
adc
inc
add
jmp
sbb
rcrb
pop
cmp
sbb
rcrb
add
jnp
dec
xchg
or
xchg
adc
insl
add
data16
nop
add
pop
ret
fwait
adc
enter
or
imul
mov
jo
daa
sub
test
adc
xchg
test
and
push
or
pop
pusha
jnp
pop
ret
sbbb
push
push
xchg
pop
outsl
adc
frstor
pop
aam
add
and
mov
push
sbb
nop
mov
and
outsl
dec
push
push
pop
je
mov
push
sub
les
cmpsb
shrl
mov
je
movsl
rclb
cmp
lods
sub
jl
sub
test
sbb
and
aas
leave
in
adcl
leave
or
and
mov
js
jge
dec
jo
ficoml
mov
mov
dec
sbb
inc
dec
xor
inc
sub
and
aas
mov
cmpsl
sbb
cmp
mov
fmuls
pop
cltd
ds
add
and
adc
dec
pop
out
sbb
rcrb
push
je
jl
mov
clc
aam
adc
orl
sbb
loop
and
mov
pop
adc
or
or
xchg
pushf
pop
das
pop
push
add
or
jp
nop
lods
sahf
sarb
enter
flds
or
jae
fcomp
sub
add
cld
adc
xchg
adc
mov
adc
icebp
mov
add
clc
popa
dec
sbb
xlat
add
dec
mov
out
sbb
les
xor
or
xchg
sbb
or
pop
aaa
and
movsl
xor
inc
or
jg
outsl
pop
je
mov
movb
ja
xchg
pusha
leave
cmp
inc
add
sub
inc
les
push
test
xor
orb
add
xor
push
push
add
xorl
cli
xor
mov
mov
xor
das
pop
je
mov
push
rcl
add
mov
pop
xor
cmp
shufps
int3
mov
dec
and
push
jo
outsl
leave
leave
repnz
pop
or
iret
and
or
and
pusha
cmp
data16
data16
movnti
dec
incl
or
icebp
out
cmp
fsubrs
pop
add
orb
inc
fs
jmp
xchg
adc
push
xchg
mov
xchg
jmp
xor
jecxz
and
adc
pop
inc
mov
ljmp
insl
and
loopne
adc
or
rorl
mov
leave
je
cmp
lods
rcrb
dec
mov
nop
mov
adc
lahf
or
mov
add
pop
outsl
pop
xchg
or
mov
mov
in
dec
dec
js
xor
loopne
pushl
leave
les
nop
aaa
add
and
fcoml
and
cmp
add
add
mov
loopne
dec
dec
jno
jnp
test
mov
data16
fadd
xor
faddl
mov
sbb
xor
add
sub
mov
push
jbe
pop
sub
mov
ret
jl
add
pusha
call
push
ds
inc
xor
sahf
shlb
cmpb
adc
imul
adc
pop
inc
fiaddl
mov
je
outsb
xchg
mov
xor
dec
cmp
aas
sbb
inc
int3
xor
or
cmp
je
adc
movb
jns
jne
movsb
xchg
inc
add
addb
mov
cli
dec
mov
push
pusha
and
or
test
sbb
movsb
add
das
call
andb
pop
cmpsb
outsb
push
push
sub
repnz
mov
jno
inc
sti
pop
mov
pop
cld
add
push
popa
or
sahf
cmp
dec
push
push
xor
sbb
jbe
xchg
out
clc
mov
sbb
mov
inc
pusha
sbb
xor
adc
psubsw
inc
add
lods
movb
nop
imul
pop
das
cmp
xchg
sbb
je
outsl
pop
jl
arpl
adc
cmp
stos
adc
mov
and
daa
icebp
test
and
jo
stc
mov
sahf
xor
xor
negl
pushl
mov
inc
push
jns
and
aam
or
scas
je
add
and
les
push
pusha
push
fmuls
add
or
imul
fldenv
add
and
adc
mov
inc
outsl
pop
jg
loope
dec
movb
lock
mov
sbb
orl
mov
push
jecxz
push
xor
lods
je
ret
xchg
arpl
shrl
pop
in
idivb
call
add
inc
dec
inc
repz
add
adc
dec
mov
add
and
mov
sbb
aaa
add
pop
or
inc
sub
movsb
dec
icebp
mov
inc
adc
adc
fildl
or
pop
add
dec
and
inc
or
loope
dec
cltd
in
mov
adc
fwait
lea
fst
pop
insl
xchg
push
fucomp
adc
mov
add
mov
lea
test
jmp
jb
in
adc
and
jle
mov
push
insb
push
mov
mov
xor
inc
jp
mov
mov
out
shrb
mov
ds
in
or
or
or
int3
cs
add
add
hlt
aaa
addb
out
and
add
cmp
loop
sbb
notb
aaa
rcll
cmp
test
mov
add
mov
shlb
mov
mov
aam
clc
jbe
neg
pop
lea
pop
xlat
mov
stc
shr
sub
scas
xor
and
mov
cmp
push
idivl
xchg
mov
addr16
pop
dec
int
hlt
test
daa
xor
daa
jns
fs
add
rclb
pop
dec
and
push
pop
jl
addl
and
pop
jge
scas
nop
sub
xchg
dec
dec
rcll
dec
faddl
adc
insl
mov
push
aaa
pop
nop
neg
js
loopne
jmp
sbb
imul
or
add
mov
cmp
push
adc
jmp
cli
push
call
inc
sub
sub
cmp
push
dec
cmp
faddl
aaa
fcmovu
mov
cmp
aaa
call
aad
in
sub
das
in
or
inc
in
push
or
inc
imul
cmp
insb
xor
sub
xchg
push
or
dec
mov
mov
mov
hlt
add
in
outsl
or
dec
inc
push
mov
das
ret
enter
les
xlat
jo
jns
incl
fmull
jne
mov
sub
jb
je
adc
sbbb
loop
enter
imul
xchg
loope
adc
or
sti
and
mov
adc
fimuls
jns
std
test
sbb
xor
insb
mov
push
mov
xor
cmp
xor
adc
cmp
dec
xor
jecxz
pop
add
jle
jecxz
add
mov
xchg
inc
loopne
lds
xchg
push
subb
jmp
push
mov
je
inc
iret
test
adc
cwtl
add
nop
ficomps
inc
rolb
aas
cli
insl
mov
inc
int3
push
pop
sub
fistps
xchg
loopne
jne
stos
or
into
in
inc
sub
jmp
mov
mov
mov
cs
cmp
and
inc
fwait
xchg
fcomip
imul
cmp
mov
push
orb
stc
cmp
push
sbb
gs
add
js
or
or
testb
adc
pop
adc
js
jne
pop
push
sbb
jmp
ja
and
aam
push
in
movsl
mov
and
xchg
mov
xlat
sahf
in
pop
xchg
loopne
mov
cmc
pop
mov
or
icebp
mov
notb
cmp
mov
push
fsubl
sbb
mov
adc
sub
mov
mov
and
and
pop
mov
orb
ss
add
xor
push
add
test
inc
push
popf
les
and
jmp
les
mov
pop
add
dec
rcrl
ljmp
adc
pop
pop
jg
movsl
inc
or
scas
jne
daa
aas
pop
mov
sbb
mov
or
push
popw
adc
xchg
pop
xlat
cltd
xor
and
mov
sub
or
or
add
or
mov
jle
int3
enter
dec
out
mov
int3
adc
add
xchg
out
scas
sub
add
jns
ljmpw
je
syscall
adc
jno
add
push
mov
add
lock
fs
jmp
mov
jbe
insb
mov
rorb
adc
int3
int3
push
pusha
lret
push
sub
enter
or
mov
pop
adc
mov
cmp
lods
imul
dec
popa
or
xorl
jno
or
add
rolb
or
or
xchg
movsl
pop
add
jmp
sub
push
add
push
fsubl
sub
rolb
or
out
cmpsl
adc
xchg
sub
push
adc
inc
push
xchg
out
and
pusha
adc
jne
dec
lods
push
inc
cmpb
ss
mov
jl
int
inc
jae
addr16
jmp
add
cltd
mov
add
inc
or
xchg
sbb
nop
inc
jp
push
pop
sub
dec
xchg
sub
dec
fs
xor
dec
pop
push
push
sarb
dec
sub
je
adc
sub
jnp
sub
mov
jmp
mov
xchg
iret
and
test
add
cmp
outsl
or
aaa
cmp
mov
je
adc
outsl
xchg
mov
je
arpl
dec
jle
cmp
fbstp
adc
cmp
daa
push
rol
and
sub
xor
lcall
jecxz
add
dec
sbb
add
ret
dec
loope
jbe
push
add
pop
add
repz
sub
movsl
outsl
cld
sti
dec
push
add
jle
push
jmp
xchg
subb
cld
or
popa
lds
cmp
jne
or
imul
and
subl
xchg
push
outsl
imul
adc
cmp
sub
push
popa
mov
jg
xor
ficoms
dec
loopne
ucomiss
outsl
adc
inc
inc
mov
add
pop
pop
lahf
pop
outsl
clc
ja
call
or
dec
rclb
aam
jo
jecxz
mov
das
aas
mov
decl
sbb
xchg
and
pop
lods
clc
xchg
in
frstor
push
sbb
add
adc
dec
outsl
popf
add
add
inc
not
pop
or
push
loope
loopne
shll
mov
xor
inc
lods
andb
cmp
mov
inc
pop
or
xor
add
repz
add
or
sbb
or
and
sub
les
test
pushf
outsl
cld
add
and
and
pop
add
jne
das
notb
sbb
sbb
push
arpl
xchg
sub
sub
out
into
sbb
xchg
rolb
out
rcrb
std
fmuls
sahf
aam
outsb
add
xor
inc
push
mov
cmpw
or
dec
or
mov
int3
dec
mov
mov
out
sbb
or
fmuls
les
movswl
rcr
sbb
or
push
ss
add
mov
pop
adc
push
xchg
jp
push
nop
sbb
pop
les
mov
cmp
xchg
insb
aaa
xor
bound
xchg
add
rclb
xlat
cltd
sbb
mov
sbb
and
mov
jl
addr16
sti
pop
scas
push
xchg
mov
sub
lock
dec
imul
ret
pop
dec
loop
test
dec
enter
test
sub
sahf
pop
dec
add
mov
add
jo
ret
repz
fs
enter
sahf
xchg
mov
or
inc
or
inc
sub
andb
int3
dec
sahf
outsl
push
dec
push
jno
sti
fiaddl
sbb
andb
cmp
addr16
xchg
inc
cs
fs
cmpl
sub
sbb
cwtl
push
es
pop
aam
or
rcrb
dec
or
dec
das
add
mov
test
loopne
pusha
mov
or
rorl
dec
jb
sbb
rclb
push
loop
cmp
std
aam
push
dec
cmp
push
es
xchg
addr16
adc
mov
jmp
push
dec
rcrl
pop
cmp
outsl
add
test
mov
add
adc
xchg
jne
xor
test
mov
jns
pop
lret
inc
mov
add
ret
movsb
or
and
fldenv
or
fsubl
inc
cmpl
xor
pop
ret
clc
add
adc
loopne
pop
and
jle
je
pop
scas
les
push
dec
push
jns
and
or
adc
adc
fmulp
cmpsb
or
adc
or
addr16
or
dec
xor
sbb
es
je
mov
test
lds
arpl
jne
testb
in
sbb
push
test
adc
sbb
loopne
sbb
sbb
push
fs
pushf
push
push
inc
push
sbb
loop
add
scas
jl
fbstp
test
pop
insl
and
jp
push
or
sbb
xor
sbb
in
pusha
pusha
sbb
daa
or
xchg
adc
mov
mov
inc
push
mov
add
mov
mov
lock
repz
xor
stos
aad
mov
adc
add
rcll
and
push
nop
add
mov
xorb
xchg
jecxz
in
out
pop
js
xorl
js
in
pop
push
in
lahf
mov
pop
dec
push
sahf
hlt
inc
and
movl
rorb
insb
ret
push
das
into
andb
dec
cs
xor
inc
subl
adc
enter
or
inc
add
add
outsb
adc
mov
sbb
sub
push
mov
cmp
dec
push
hlt
or
loopnew
sbb
cld
pop
mov
or
or
pop
dec
or
les
xchg
lahf
or
inc
loope
dec
icebp
jb
and
sub
aas
test
or
dec
clc
jecxz
mov
push
inc
add
dec
mov
jmp
push
or
pop
push
mov
sbb
xchg
inc
mov
leave
add
xor
sub
push
xor
or
sbb
movsb
xchg
fmul
imul
sub
test
adc
loope
stos
pop
je
or
and
lods
pop
test
or
pop
clc
fcoml
and
sti
or
push
jmp
inc
arpl
movsb
or
mov
cltd
loope
xchg
imul
jle
xor
cmpb
or
test
xchg
andb
inc
loop
cmova
out
adc
or
inc
jge
movb
imul
sub
mov
mov
push
out
jecxz
xchg
insb
test
aam
sub
add
or
inc
leave
cmp
inc
mov
andb
jnp
shl
or
push
outsl
mov
inc
mov
aas
shlb
orl
push
or
jle
mov
jl
sbb
jae
out
adc
fidivrs
jp
adc
clc
loope
pushl
js
xchg
push
repnz
jno
sub
dec
jmp
das
movsl
pop
test
dec
pop
hlt
xor
stos
fcompl
dec
ret
inc
adc
lcall
mov
xorb
dec
cli
rcl
adc
js
mov
test
lds
mov
jmp
ss
push
add
insl
cmp
push
add
ljmp
lock
mov
dec
pop
xlat
fwait
sub
sub
pop
and
sbb
sbb
shlb
and
out
add
adc
lods
sub
idiv
fisubrs
dec
je
add
jmp
in
aam
push
jecxz
ror
mov
daa
adc
adc
sbb
rolb
xor
fcomps
mov
push
dec
push
pop
dec
sbb
icebp
movsl
pop
push
mov
add
inc
fwait
mov
and
js
inc
aam
mov
in
outsb
cmp
add
loop
mov
orb
or
gs
mov
dec
mov
and
aad
rolb
sbb
xchg
inc
cli
add
jo
das
in
adc
cmp
inc
mov
nop
inc
mov
sbb
ret
sbb
leave
or
mov
enter
addr16
dec
fisubs
jne
xor
or
cmpb
mov
scas
loopne
pushf
mov
inc
sbb
xchg
sub
popa
dec
cmp
ret
xor
inc
movl
jns
aad
sub
sub
ret
jno
xor
orl
sbb
adc
jmp
or
adc
je
in
hlt
cmpsb
imul
mov
imul
inc
or
mov
test
push
nop
clc
outsl
sbb
or
pop
or
ja
and
add
mov
aam
jl
stos
mov
mov
fldenv
jl
and
or
adc
lea
stos
and
jbe
test
cmp
mov
push
roll
addr16
and
lret
fs
sbb
stos
test
push
repnz
xor
maskmovq
pop
cli
pop
sub
mov
adc
xchg
mov
xchg
andb
lea
das
inc
jp
into
call
sub
subb
pop
xor
out
cmp
push
push
ffreep
mov
dec
adc
jns
int
cld
push
jne
shll
adc
adc
add
push
push
insb
push
data16
test
daa
cmc
cwtl
sub
or
hlt
negb
rcrb
pop
xchg
mov
inc
stos
jmp
mov
dec
ficomps
stos
xchg
cmp
mov
push
mov
addr16
add
fst
outsl
sbb
loope
xorb
in
add
add
mov
movsb
into
inc
push
pop
test
in
push
shll
rcr
das
adc
lahf
repz
push
lahf
bound
icebp
ss
inc
aam
adc
mov
xor
cvtps2pd
jo
pop
outsl
pop
push
mov
pop
cmpsb
inc
pop
jmp
ja
jmp
push
pop
push
xor
lcall
cmp
cmp
setg
jmp
inc
add
lret
jnp
icebp
inc
mov
cmp
setle
sub
mov
es
dec
inc
dec
les
cld
adc
leave
mov
cmc
mov
pushf
jl
rcl
jl
lret
pop
outsb
ret
inc
sti
sub
inc
popa
jmp
movl
add
es
stos
jne
arpl
dec
pop
push
ret
sub
sbbl
cwtl
aam
movsb
mov
jmp
int3
in
sub
hlt
ss
xor
mov
or
add
inc
adc
sbb
popa
mov
mov
bound
rcr
jmp
aaa
push
xchg
ret
sahf
hlt
jmp
xorl
out
push
gs
lea
sar
rcl
insl
rcr
mov
or
mov
mov
lock
add
in
orb
sbb
pushf
movb
repnz
inc
ljmp
mov
pop
push
icebp
mov
jne
inc
movsl
mov
xor
sub
add
jecxz
aaa
jl
push
xchg
add
ret
add
dec
or
lods
addl
popa
or
mov
lods
dec
pop
add
pop
iret
roll
lock
xchg
loopne
xchg
push
repnz
data16
mov
imul
push
test
jle
sub
lods
or
xor
mov
in
add
jmp
sbb
shll
push
roll
pop
jbe
ficoms
lea
rclb
mov
mov
add
sysexit
dec
leave
sub
push
gs
lods
pcmpgtb
cs
stos
lods
movsl
das
xchg
push
in
enter
push
inc
cli
add
ljmp
xchg
stos
mov
mov
dec
sub
mov
aas
pusha
punpcklwd
in
inc
cmp
cmp
pop
subl
rcrb
outsb
dec
cmp
test
lods
adc
xchg
test
lock
mov
push
fistpl
pop
subb
popf
fistpll
pop
pop
jne
and
cltd
test
inc
mov
dec
jne
sub
adc
or
mov
loop
sbb
jg
push
mov
fidivrl
out
sbb
or
dec
or
dec
mov
pop
or
je
pop
ret
in
add
cmp
jge
push
sbb
inc
inc
and
sbb
sarl
iret
mov
mov
mov
clc
pop
fiaddl
push
loopne
mov
divl
mov
orb
add
and
ror
mov
cmpsl
jne
pop
add
inc
cmpsl
add
xchg
arpl
pop
sub
xchg
fcom
push
or
insl
loope
pop
mov
and
idivb
push
popa
jne
push
aaa
dec
mov
das
xor
inc
sub
and
mov
lock
mov
pop
sub
cmpsl
sbb
shlb
lds
aas
cs
ljmp
pusha
pop
xchg
cmpsb
aad
inc
xchg
xchg
mov
mov
pop
push
orb
and
add
push
xor
pop
xchg
lock
dec
nop
xchg
pop
xchg
cmpsb
or
bound
iret
das
inc
or
and
jbe
faddl
fs
pusha
or
dec
prefetcht0
jae
and
cmpl
ficomps
sarb
jl
nop
dec
pop
pusha
push
out
push
adc
pop
lods
call
repz
sbb
js
jp
pop
addl
je
movsb
xchg
push
fwait
push
xor
inc
lahf
xchg
inc
pop
inc
popa
popf
add
inc
jno
cs
add
sbb
push
lods
sub
cmp
and
hlt
mov
xor
lret
dec
sub
fdivrp
shl
sbb
test
mov
add
sub
in
dec
pop
mov
and
pop
cmpsb
and
dec
sub
push
sbb
mov
sbb
nop
iret
sub
pop
movl
inc
cli
rcrl
aas
adc
nop
int3
icebp
mov
aad
rcrb
pop
fadds
imul
mov
mov
xlat
mov
adc
adc
push
popf
fdivl
orb
xor
and
push
out
fsubrp
inc
pop
les
and
dec
ficoml
rcrb
or
pop
push
add
add
cmc
jne
jne
es
mov
popf
mov
dec
je
jno
lds
inc
dec
xchg
add
xchg
dec
jmp
sbb
aaa
mov
stos
add
daa
add
jbe
mov
xchg
and
dec
add
push
sbb
jne
mov
mov
data16
arpl
mov
xchg
lret
test
sbb
jne
cmp
cmc
pop
cmp
adc
insb
nop
out
imul
sbb
xor
dec
ss
adc
inc
iret
and
in
idiv
mov
aas
jmp
cli
popf
jmp
lds
or
cwtl
fsts
add
jecxz
lods
test
and
sub
jmp
stos
fdivrs
bound
mov
jle
les
fists
icebp
lods
jmp
jp
ds
pop
and
and
mov
je
add
or
pushf
ret
ret
sub
sbb
cli
jmp
es
call
push
xor
cmpsl
mov
nop
push
fstpl
movzwl
in
rclb
and
je
push
add
enter
pop
push
orl
add
rolb
inc
ficoms
add
sub
imul
jle
mov
mov
dec
add
pop
andb
jno
bound
inc
and
cmp
into
lea
insb
movsl
idiv
pop
push
add
dec
sub
or
leave
ljmp
pop
adc
ror
or
inc
adc
and
sub
insl
jle
fdivrl
and
xchg
je
add
inc
dec
or
xchg
mov
sbb
movb
xor
adcb
xchg
cld
lea
stos
std
bound
mov
call
or
or
xchg
je
cmp
cwtl
mov
nop
std
jae
test
inc
out
cli
add
and
inc
lea
pop
rolb
pusha
loope
addb
dec
incl
out
push
insl
fcoml
lea
xlat
pusha
ds
inc
pushf
mov
lock
add
daa
test
pop
pop
adc
or
aas
cmp
and
mov
ds
push
mov
xchg
sbb
mov
cmp
or
pushf
sbb
mov
adc
pushf
mov
and
incl
and
sub
nopl
repz
xlat
pop
cmpsl
or
addr16
pusha
imul
push
rclb
xor
notl
and
sub
repnz
int3
fs
inc
decl
jg
xor
sbb
sbb
cmp
and
pop
das
add
cmp
stos
test
push
ja
xchg
add
movsl
mov
sbb
add
fsubl
fisubrs
pop
sub
jae
mov
sub
mov
shl
incb
push
andb
mov
pop
mov
fists
xor
sbb
pop
clc
or
lea
push
inc
arpl
add
test
sbb
mov
es
sub
cmp
mov
cmpb
mov
inc
cld
pop
inc
popa
jne
or
lea
or
xchg
or
cmpsl
cmpsl
sub
les
clc
add
cmp
and
sbb
mov
data16
xor
icebp
push
sub
sbbl
adc
mov
jp
sbbb
pushf
ret
fstpt
pop
or
push
jo
js
mov
mov
test
xchg
xchg
mov
shll
bound
adc
xchg
push
lcall
inc
es
addr16
inc
es
popa
outsb
or
pop
out
popl
in
in
inc
pop
repnz
mov
or
shl
xor
popa
ret
mov
mov
sbbb
repz
aaa
sbbl
jnp
arpl
sub
or
and
ja
scas
ret
push
mov
lea
mov
shll
adc
and
mov
mov
or
adcl
inc
jo
outsl
je
jns
push
mov
inc
stos
loope
mov
adc
mov
or
cmp
mov
clc
sbb
xchg
and
adc
pushf
or
adc
fbld
inc
or
es
or
push
or
dec
or
push
lcall
lds
cmp
shrb
pop
mov
je
adc
cmpb
je
pusha
enter
nop
and
push
xchg
or
sbb
jmp
mov
iret
xor
inc
mov
dec
stos
xorb
test
or
leave
sub
cmp
mov
inc
cs
or
adcl
andb
inc
icebp
jge
js
mov
je
aad
arpl
mov
inc
mov
push
adc
mov
test
add
loopne
xchg
mov
dec
add
inc
daa
add
jmp
adc
mov
pop
nop
push
mov
xchg
sarl
add
xchg
sti
ss
inc
mov
sbb
hlt
mov
dec
clc
scas
sbb
sub
mov
adc
push
sarl
test
push
pushl
add
shrb
jge
rclb
testb
pop
or
jmp
xchg
xor
icebp
or
js
icebp
and
lds
rorb
ret
adc
xor
hlt
push
push
fwait
aaa
mov
or
add
or
pushf
test
sbbl
adc
dec
add
jo
ret
loop
imulb
xor
insl
inc
xchg
inc
cs
jmp
push
and
add
out
out
adc
js
pop
xor
mov
jnp
pop
xor
jmp
sbb
push
pop
inc
fs
xchg
pop
xor
and
aam
dec
jnp
sbb
or
and
xchg
push
sbb
inc
sbb
cmp
pusha
jae
push
cmp
mov
pop
adc
sbb
movsl
aas
adc
jo
or
adc
mov
lcall
jns
imul
pop
insl
notb
mov
mov
jmp
xchg
and
test
sbb
subb
xor
in
adc
rolb
add
sub
insb
xchg
into
pop
or
mov
mov
cmp
jo,pn
jae
mov
sub
push
mov
sbb
and
es
add
add
and
lods
popa
es
repz
aaa
jecxz
cmp
frstor
pop
gs
les
xlat
push
insl
dec
stc
xchg
mov
test
pop
rcll
add
scas
dec
loope
or
pop
inc
adc
imul
out
fimuls
add
cld
negl
imul
push
adc
dec
jo
pop
dec
add
xor
js
xchg
jl
cmp
sbb
into
fisttpl
or
hlt
jo
orb
jne
divl
adc
jne
ret
repnz
mov
test
push
addl
xor
ret
and
inc
push
daa
and
sbb
mov
sbb
je
bound
addl
test
and
jno
inc
pusha
out
pop
mov
or
cld
pop
popa
cmpsl
fidivs
inc
xchg
cwtl
sahf
lock
or
xor
sub
and
imul
xor
inc
xor
pop
add
sub
sub
int3
mov
scas
adc
inc
ret
mov
inc
push
daa
jno
push
add
pop
movsb
push
jne
int3
cmp
cwtl
adc
xchg
int3
add
rcll
xlat
rorb
stos
add
inc
xor
xchg
push
adc
jl
xchg
cmpsb
imul
pop
loopne
pop
mov
inc
in
pandn
inc
insb
and
lea
ret
sub
add
add
popa
insl
sbb
add
cmpb
je
aaa
dec
out
inc
xor
dec
popf
xchg
mov
mov
std
pop
lret
shlb
push
pop
xorb
push
cltd
pop
push
or
rorb
loopne
mov
push
xor
add
fsubs
shlb
push
outsb
mov
pop
icebp
in
loopne
mov
dec
inc
fadds
movsl
sbb
sbb
cmpsb
cmp
ret
xchg
lcall
paddsb
in
into
and
arpl
dec
or
unpcklps
sarl
pop
aam
js
mov
mov
test
xor
jl
sbb
les
mov
pop
dec
sbb
in
mov
ja
add
ljmp
dec
ret
arpl
add
or
dec
lds
ret
xor
les
mov
call
fcoml
sbb
js
mov
loopne
fadds
inc
mov
inc
insb
leave
xchg
into
mov
arpl
setae
mov
xor
repz
lock
jl
arpl
add
int3
xor
cmpsl
xchg
sub
dec
pop
jl
jecxz
cmpsl
mov
sub
dec
and
mov
xchg
mov
pop
cld
sbb
add
sub
popf
add
pushf
push
push
lret
clc
push
jno
fisubl
inc
out
cld
pushf
or
push
mov
mov
jbe
mov
mov
or
lods
xchg
jnp
sbb
das
fs
sbb
pop
aaa
add
je
ss
rol
jmp
in
push
frndint
test
or
and
inc
roll
ljmp
aas
mov
inc
push
test
out
inc
ds
push
push
inc
rcll
sbb
push
daa
pusha
in
inc
mov
mov
push
shll
fsubr
inc
nop
inc
movsb
push
or
jg
mov
push
jae
inc
dec
or
je
xchg
and
inc
lods
shlb
and
push
call
repz
and
cmp
jne
scas
sbb
imul
loop
sub
fst
or
cmp
xchg
mov
cmp
adc
int
xorl
or
sbb
add
push
pop
lods
sub
testb
inc
sub
mov
or
movl
insb
add
mov
insl
aaa
xor
sbb
add
cwtl
shlb
jns
daa
mov
jns
push
sbb
mov
dec
adc
inc
add
lea
pop
pop
orl
mov
sub
adc
ret
adc
into
pop
dec
je
add
xor
inc
repz
push
and
mov
jb
xor
inc
ret
jmp
adc
das
mov
and
js
data16
dec
lret
xor
fwait
test
xchg
pop
or
stos
repz
sub
iret
mov
iret
cmpl
inc
sub
sbb
shll
or
or
mov
adc
jnp
mov
lcall
cmp
push
stc
arpl
pushf
or
gs
test
daa
push
pop
daa
xor
icebp
leave
imul
ret
mov
add
scas
scas
jnp
shrb
loopne
or
push
cld
or
and
cld
mov
mov
lcall
sbb
inc
and
dec
rorl
jmp
xor
in
aaa
lods
roll
stos
or
jg
add
xchg
jno
xchg
xchg
adc
pop
adc
xchg
das
pop
xlat
roll
imul
orb
cmp
and
dec
or
xor
mov
sub
dec
jl
sahf
jbe
pop
xor
and
push
jl
ret
addr16
mov
imul
xor
rclb
test
or
or
mov
dec
sbb
jo
mov
xchg
jns
pop
rcrl
adc
das
cwtl
mov
sbb
addr16
or
inc
add
mov
jo
mov
aaa
ret
loopne
dec
xor
addb
aas
mov
data16
push
hlt
jmp
ror
push
sarb
jno
and
cmp
add
and
prefetchwt1
or
nop
rorb
das
add
js
dec
sbb
lods
rcrl
rorb
jge
push
xchg
adc
dec
divl
or
xor
test
sub
mov
int3
enter
sarb
movsl
dec
aaa
stos
lds
loopne
pop
leave
push
and
xchg
insb
cmp
inc
inc
xchg
fsubp
xlat
xor
jmp
xlat
mov
enter
lret
daa
cmpb
sbb
mov
or
adc
add
mov
dec
dec
rorb
cmpl
add
jno
xchg
jg
lahf
in
je
mov
or
loopne
in
fs
imul
test
and
sbb
adc
xorl
test
fneni(8087
adc
dec
sub
dec
push
mov
jno
pop
xlat
jg
mov
orl
call
aam
enter
or
test
es
sub
push
sbb
call
mov
aas
mov
ja
add
inc
movsb
subb
xor
js
and
push
inc
inc
cmp
lea
cmp
add
dec
push
repnz
testb
push
mov
mov
faddl
outsl
mov
sti
pop
cmc
push
or
sbb
enter
pop
mov
xor
inc
add
icebp
in
dec
mov
and
push
lea
adc
mov
outsl
dec
xor
or
mov
mov
add
inc
add
pop
add
add
int
push
fcomps
outsb
lcall
sbb
cmc
imul
mov
jno
sub
xor
add
inc
or
sbb
ror
jnp
mov
in
jg
pop
inc
arpl
stos
nop
lea
adc
inc
and
push
enter
call
jb
mov
jb
es
cltd
nop
or
loop
jns
inc
in
jae
cwtl
lcall
fidivrl
push
pop
mov
xor
add
jae
push
dec
or
pop
sbb
je
mov
push
inc
pushf
stos
push
xor
add
fcoms
je
sub
lea
add
add
cmpsb
and
dec
adc
mov
xor
and
push
add
roll
dec
shlb
sbb
cmp
push
jle
push
inc
xlat
dec
and
ss
icebp
sub
cld
inc
fdivrl
and
cmp
arpl
punpcklbw
adcb
fnstcw
pop
inc
pusha
and
or
mov
mov
adcb
sub
or
arpl
push
push
jmp
cmp
roll
jae
retw
fisttps
xchg
push
cmp
adc
and
cmpsl
pop
xchg
and
pop
addr16
cmp
xor
xchg
data16
cmp
jae
or
adc
pop
mov
mov
pusha
jge
sbb
int3
subl
test
jne
popf
cwtl
add
or
pushl
mull
inc
cs
add
push
add
orb
out
xchg
mov
lds
cmp
add
pop
addl
notl
out
call
fidivl
pop
fcomps
je
lcall
call
inc
ret
pop
fsubr
and
add
nop
gs
cmp
or
pop
xchg
ret
rorl
enter
and
test
in
sahf
jb
jecxz
icebp
in
inc
or
jle
les
and
mov
fisubl
cmp
ret
fcmovu
das
mov
mov
push
dec
mov
push
shlb
adc
jmp
sub
ret
scas
inc
mov
pop
push
xor
push
stos
cmp
or
in
pop
pushf
pop
fs
or
cmp
mov
push
dec
dec
adc
sbb
les
mov
pop
bnd
push
pushf
dec
jne
dec
sub
les
sub
insl
jo
mov
jle
sub
es
jp
fstpl
xor
xor
xchg
fs
xlat
jo
xor
je
dec
and
pop
cld
imul
jg
jp
sbb
or
or
or
inc
add
cmpsb
aam
cli
xchg
jmp
xchg
xchg
pusha
and
jg
test
aaa
movq
lcall
sub
mov
fcoms
cmp
ljmp
jmp
aaa
jo
adc
cmp
stos
jne
pop
dec
pusha
or
or
jg
cmp
lods
dec
jo
adc
rcrb
add
mov
je
xor
sbb
stos
push
xlat
dec
jno
inc
inc
adc
test
test
mov
and
pop
sarl
or
or
dec
ret
stos
adc
xchg
sbb
aam
mov
add
rolb
outsb
jmp
xor
sub
fcomps
les
pop
and
jae
mov
mov
adc
lods
dec
add
jae,pn
xor
leave
xchg
pushl
inc
add
clc
sbb
push
xlat
and
clc
sub
cld
pop
adc
pop
jmp
add
jb
or
lret
ret
mov
mov
out
dec
add
mov
addl
add
sub
adc
add
clc
xor
adc
popa
add
jbe
lock
dec
and
jle
pop
enter
dec
push
sbb
jmp
and
xor
adc
cmpsl
movsl
cmp
adc
test
push
inc
fmuls
xchg
out
out
add
in
add
stos
loopne
and
lahf
inc
lock
and
and
rolb
addr16
dec
xor
adc
shll
or
test
test
pusha
or
or
cltd
rolb
push
clc
fsts
sub
push
add
mov
sub
sbb
les
inc
pusha
or
sbb
outsl
ret
sub
sbb
pop
xor
lds
and
lods
nop
push
fldln2
xchg
test
pop
jecxz
mov
pop
xchg
cmp
mov
das
jle
sbb
dec
arpl
je
cmpb
xorb
xchg
cld
stos
cli
add
mov
scas
fldl
mov
mov
cmpsl
std
mov
cmp
dec
hlt
out
add
pop
movsl
addb
push
xor
sbbb
cmpl
adc
inc
sub
pop
rorb
popf
mov
add
dec
and
std
in
inc
jmp
lret
jne
cmp
dec
imul
mov
add
nop
test
jns
inc
and
xlat
mov
je
add
out
rcll
or
xchg
rcl
mov
sub
inc
mov
nop
cwtl
cmp
sbb
js
xor
cwtl
popf
push
inc
sub
jecxz
pop
lock
jg
les
dec
ret
push
shrb
pushf
add
inc
xchg
pop
fiadds
nop
pop
cmp
test
movsb
jo
jge
nop
fbld
movsb
xor
jle
push
push
arpl
xchg
daa
mov
aad
xor
fsubrl
dec
push
call
lret
xor
mov
or
push
mov
jo
insl
cmp
ret
aaa
arpl
inc
jb
push
fcomi
push
dec
add
lahf
sbb
sbb
jnp
xlat
ja
inc
int3
push
xchg
loopne
push
popl
add
ja
jge
xchg
mov
jne
aaa
nop
andl
mov
xor
or
lds
jp
mov
test
js
sub
push
pop
cmp
cmp
jbe
lret
repz
je
dec
loopne
ror
xor
push
adc
and
pop
push
sbb
in
repz
sbb
loope
fbld
or
mov
adcl
adc
stc
movsb
adc
jl
mov
ss
pushl
les
add
add
jne
adc
and
xchg
push
mov
jne
dec
jg
xor
stos
pop
mov
ret
inc
pop
mov
xchg
xor
movzwl
add
adc
cmp
call
adc
ja
push
insl
mov
push
and
sbbb
sub
iret
clc
jmp
rolb
mov
dec
cmpsb
shll
popa
orl
dec
sarl
mov
cmpsb
pop
push
push
xchg
or
jle
das
mov
outsb
adc
lcall
lahf
mov
fisubrl
sub
pop
hlt
inc
fmuls
shlb
ja
fwait
xor
xor
and
mov
popa
xor
lods
adc
pop
add
mov
jle
mov
mov
cmp
es
popf
icebp
push
movb
fiaddl
fmuls
lock
xor
gs
sub
pop
rol
xor
pushf
lock
jl
pop
add
xor
inc
or
cld
xor
cmp
mov
cmp
cmp
jl
lahf
aad
jmp
repz
xchg
sbb
loopne
adc
movsb
push
mov
sbb
mov
add
and
inc
cli
or
test
sub
push
enter
jns
cmp
sldt
clc
xor
repz
xchg
add
into
ret
cmpl
xor
ss
adc
lcall
cmc
iret
je
adc
xchg
jo
push
popa
inc
add
sub
int
or
stos
rcrl
andl
clc
sub
in
pusha
popa
adc
je
and
mov
enter
mov
dec
nop
outsb
add
add
dec
inc
adc
pop
mov
push
les
cmpsb
pusha
movsb
mov
cmp
test
dec
addr16
mov
dec
xorl
pusha
dec
jne
dec
test
call
dec
sti
mov
hlt
adc
in
and
mov
sbb
mov
cmp
mov
pop
shlb
mov
jne
hlt
or
dec
push
mulb
mov
xor
es
inc
cmovns
dec
fcoms
xchg
push
mov
sub
jno
rclb
cmpsb
cmp
bound
cmpb
es
sub
jge
add
cmp
gs
in
hlt
mov
pop
pushf
iret
push
sub
xor
push
lcall
adc
xor
xchg
nop
stos
xchg
repz
or
popf
int
or
push
push
and
nop
sub
fists
cmp
push
enter
xor
sub
push
sbb
jbe
push
nop
sbb
mov
pop
pop
daa
adc
mov
adc
or
adc
nop
push
in
sbb
mov
mov
inc
jge
adc
inc
sub
and
mov
orb
mov
add
mov
test
add
mov
fcoms
rclb
mov
xchg
out
cmpsl
xor
jmp
dec
scas
sub
sub
ret
push
add
mov
aaa
fisttpl
adc
clc
push
jns
inc
clc
lock
gs
pop
in
or
call
aam
popf
cmp
push
add
jns
rcr
ljmp
aam
add
and
jl
add
js
cmp
jmp
xchg
mov
sbb
sbb
dec
or
mov
mov
adc
jecxz
mov
jmp
movb
or
out
add
add
popf
adcl
cmp
cltd
inc
popf
or
sub
add
cmpsl
jmp
pop
sbb
add
adc
notl
mov
lret
inc
imul
mov
mov
push
repz
push
dec
or
mov
xchg
mov
add
sub
or
adc
pop
inc
push
fimuls
adc
sarb
dec
dec
or
loopne
adc
outsl
das
das
or
iret
adc
int3
sahf
popf
mov
adc
imul
push
rolb
mov
push
sbb
adcl
into
adc
ja
das
or
fnsave
mov
inc
cs
add
jns
mov
mov
and
and
lods
add
sbb
pop
cmp
and
into
repnz
or
outsl
not
sbb
xchg
cmp
clc
and
das
in
sbb
pop
dec
les
sbb
lds
or
fs
add
add
push
pop
dec
pop
das
mov
sub
adc
addb
insl
mov
sub
das
push
add
int3
lahf
push
adcl
mov
das
add
adc
les
cmp
test
jl
insb
or
enter
sub
repz
xor
xchg
arpl
xor
sbb
movsl
adc
mov
jp
adc
sbb
add
nop
pop
jecxz
mov
dec
shlb
rcrb
mov
mov
pop
and
xchg
dec
popa
sub
pop
addb
mov
xchg
or
fmul
jmp
outsb
sub
or
fldt
dec
sbb
xlat
pop
jmp
push
mov
push
mov
jns
inc
pop
icebp
push
ret
dec
data16
and
add
fiadds
inc
dec
or
mov
jo
adcl
pop
adc
push
inc
push
clc
xchg
sub
gs
fs
in
dec
aam
sub
int3
hlt
add
mov
push
dec
mov
and
sbb
adc
insb
enter
mov
adc
push
sub
or
adc
and
cmp
jmp
div
nop
or
add
adc
cmp
pop
add
inc
or
xchg
dec
sub
xchg
les
jne
insb
sbb
clc
xacquire
or
insl
and
mov
aaa
cs
add
fdivs
add
or
sbb
in
imul
pop
jne
lea
mov
ds
insl
pusha
cmp
sbbb
aam
mov
mov
mov
mov
push
add
xor
fs
movsl
or
dec
fstpt
add
sbb
outsl
dec
into
add
test
inc
push
adc
pushf
jmp
iret
repz
jnp
dec
or
adc
loopne
test
fwait
jmp
or
in
push
and
or
out
mull
adc
in
testl
or
pop
imul
xor
push
pop
pop
mov
les
dec
sbb
mov
mov
leave
addb
jns
mov
rcrb
add
sbb
xchg
cvtps2pi
shrl
test
mov
adc
flds
call
mov
inc
imul
adc
sbb
sbb
xchg
xchg
int
inc
inc
pusha
xchg
push
inc
test
push
mov
sub
or
adc
cmp
add
pusha
inc
enter
sbb
scas
and
cmpl
addl
inc
and
jmp
pop
shll
rclb
push
add
xchg
push
add
inc
and
cwtl
mov
push
mov
jmp
not
and
inc
lret
add
mov
orb
xor
add
mov
clc
mov
mov
jmp
mov
mov
pop
movsl
ret
pusha
mov
addb
dec
and
adc
inc
push
xlat
lcall
mov
mov
xchg
iret
bound
add
popf
add
int3
shll
and
push
and
jmp
xor
adc
movsl
push
or
or
mov
cmpsb
lock
xor
jmp
hlt
add
andb
jne
inc
and
out
lods
xchg
leave
lock
or
and
dec
imul
jcxz
mov
pop
test
or
in
cmpsb
inc
sahf
inc
add
iret
dec
add
pop
jbe
rclb
mov
invlpg
cmpl
cwtl
int
pop
sub
add
add
out
xchg
add
jbe
or
mov
xchg
lret
xchg
in
pushf
into
imul
mov
fs
jecxz
or
jb
mov
mov
jae
insl
pop
arpl
les
je
jb
or
and
jecxz
les
push
xchg
loop
xor
add
nop
lods
mov
push
test
sub
addb
inc
or
pusha
or
mov
lret
pop
dec
fsts
daa
insl
mov
inc
enter
insb
dec
call
lret
dec
call
or
fldl
hlt
push
hlt
push
enter
dec
push
or
sbb
mov
ss
ficompl
pop
cmc
mov
add
add
popf
cmp
jge
mov
cmp
sub
daa
das
jne
fidivl
push
pop
das
mov
and
sbb
sbb
cmp
and
adc
rclb
and
scas
adc
mov
adc
call
xor
ret
pop
jl
add
inc
add
push
test
pop
test
jae
popa
add
mov
lock
pop
rcr
xor
popa
scas
add
iret
int
dec
test
sbb
stos
or
jb
filds
or
pop
or
jmp
or
inc
fidivl
adc
add
mov
add
and
jne
push
jmp
iret
jmp
cmp
lcall
add
and
pop
imul
lods
ret
inc
adcb
add
movsl
dec
pop
addl
or
scas
jmp
out
hlt
adc
in
clc
sub
inc
lret
sti
sbb
fnsave
addb
nop
out
push
xor
add
push
rorl
mov
mov
mov
stos
movswl
sarl
push
lock
call
sbb
xchg
cltd
shlb
addr16
ss
add
arpl
inc
test
ja
test
int
loope
push
sub
pop
out
lock
mov
jo
in
in
and
je
cmp
call
sbb
adc
push
and
pop
dec
jg
push
or
cld
add
scas
lds
insl
mov
push
loope
outsl
call
push
js
fcomps
jbe
add
clc
push
pushf
cmp
pop
bound
mov
movsb
cmp
cmc
ret
fnstcw
cmp
ja
je
pop
pushf
mov
insb
pop
push
ret
cmp
test
imul
mov
xlat
test
or
das
push
sbb
popa
sub
xchg
xor
xlat
pop
and
mov
fprem1
or
mov
jb
mov
fwait
inc
bswap
aad
leave
aad
decl
das
add
lahf
das
je
pop
push
out
leave
shll
fs
les
pop
xlat
jns
icebp
push
add
pop
hlt
sub
sbb
dec
mov
or
lods
fmuls
jo
or
pop
xchg
and
push
movsl
add
mov
sbb
je
std
add
flds
dec
mov
scas
mov
pop
fisubs
fwait
into
scas
inc
aaa
bound
push
enter
ljmp
ss
mov
xchg
shr
call
dec
xor
sbb
ljmp
add
pusha
cld
popf
pop
or
push
inc
out
push
xchg
add
data16
cmpb
sbb
xchg
inc
fs
xor
in
adc
add
in
push
push
add
xchg
sbb
inc
inc
push
je
icebp
clc
inc
xlat
mov
movsl
push
inc
xor
in
imulb
add
add
mov
jmp
mov
push
inc
mov
adc
in
jbe
out
and
cmp
std
pushf
outsl
mov
cmp
ja
jecxz
sub
ret
pop
add
mov
por
xor
xchg
js
pop
mov
inc
out
mov
mov
and
sbb
xchg
je
add
or
cld
mov
jmp
mov
lods
push
pusha
popa
faddl
mov
sbb
sbb
pop
shr
sub
push
jmp
cs
test
loopne
flds
ret
je
push
mov
cmp
fists
outsb
inc
outsl
push
dec
jne
into
addl
mov
les
es
dec
aaa
jmp
sub
jo
adcl
lahf
mov
stos
movsb
pop
xchg
sub
lahf
lock
mov
jo
fs
nop
bound
inc
scas
push
dec
sub
or
movsb
gs
or
loop
mov
stos
pop
cmp
bound
add
inc
add
inc
cwtl
pop
imul
mov
mov
or
adc
shlb
in
nop
and
or
addr16
mov
rorl
jb
push
mov
in
cmovge
or
mov
ds
lods
icebp
jo
js
push
fld
inc
test
mov
inc
xchg
push
aad
inc
lock
hlt
inc
in
or
sarl
xchg
mov
and
pop
cmp
mov
fs
dec
cmp
sub
insb
stos
sarl
nop
mov
or
adc
cld
inc
int
add
test
cltd
adc
adc
or
pop
in
pop
mov
push
xchg
cltd
add
jl
dec
sbb
jp
pop
test
pop
push
adc
nop
push
pop
pop
pop
movsb
xor
fdivrs
lock
imul
xor
mov
mov
xor
sub
inc
test
test
outsb
fcmovnb
mov
push
repz
and
mov
daa
add
daa
nop
cmp
xor
jnp
and
loope
fs
sbb
cmp
icebp
xor
add
xchg
dec
push
sahf
bswap
cmp
mov
sbb
mov
pop
xchg
jne
add
dec
in
mov
mov
stc
add
cmp
push
add
add
jo
bound
add
mov
pop
mov
ret
mov
add
mov
cli
and
jle
loop
out
outsb
xor
inc
pop
fwait
pusha
iret
sub
jbe
fisubs
dec
and
adc
adc
in
jle
adc
add
scas
or
push
loopne
mov
out
rorl
pop
sbb
lods
movsb
add
sbb
adc
nop
scas
mov
mov
mov
add
int
jo
das
add
cmp
or
sub
adc
test
or
les
lods
sbb
fidivs
push
pop
aad
sbb
add
and
fs
adc
pusha
or
pop
adc
cs
pop
ret
fldenv
and
test
or
addb
push
and
in
out
pop
mov
xchg
adc
adc
aas
rcrl
sub
mov
mov
or
xchg
shlb
mov
aad
fldenv
dec
mov
insl
adc
loop
cld
push
xor
push
xor
fsubrs
lahf
or
inc
xor
mov
cmp
idiv
pop
inc
mov
add
addl
incl
pop
push
insb
jbe
pop
ret
dec
in
enter
adc
rorl
addr16
fprem
aam
mov
cmp
mov
push
jl
sbb
leave
and
sti
and
or
push
loopne
test
add
cmp
jl
or
stc
fs
flds
test
mov
xlat
fadd
push
jle
cmp
adc
push
call
aam
or
xor
pop
loopne
mov
inc
incl
push
fs
push
or
mov
dec
mov
and
cmpsb
sub
jmp
ja
push
cmp
ret
es
jle
pop
subl
inc
scas
ret
hlt
inc
mov
adc
pop
push
fs
mov
cmp
jle
pop
movsl
add
cltd
cmp
jmp
stos
mov
adc
and
inc
inc
adc
inc
jge
sub
mov
jp
inc
pop
and
pushf
movsb
pop
cld
mov
inc
push
insb
or
adc
add
imul
mul
rolb
mov
jo
sbb
mov
orl
inc
adc
or
push
and
test
in
repz
lods
inc
inc
ds
fstp
or
sub
sbb
pop
dec
inc
fxch
fiadds
dec
jne
mov
xor
mov
or
sub
jbe
dec
and
insb
sti
jmp
mov
jmp
push
and
inc
enter
movsb
add
cmpsl
xchg
push
or
shrl
loopne
xchg
push
or
fincstp
cmp
or
add
xchg
and
xorb
push
fnstcw
push
cmpb
push
cmp
sbb
cs
sbb
das
sub
mov
fdivrs
inc
test
pop
cltd
xor
mov
inc
push
inc
movl
sub
inc
sarl
loopne
mov
mov
mov
mov
cltd
cmp
push
fisttpll
sub
lock
jmp
xor
nop
xchg
mov
or
pop
mov
or
out
add
add
adc
mov
ja
out
jo
pusha
push
lds
pop
or
jns
pusha
sub
cs
or
or
xchg
loope
or
xchg
dec
jo
lcall
repz
mov
sbb
sub
or
jmp
mov
sbb
pusha
adc
js
enter
pop
mov
add
movsl
or
and
sti
pop
push
jne
sbb
push
add
and
pop
add
notl
jmp
sub
pop
xchg
or
sbb
pop
or
sbb
push
push
pop
push
stos
xor
outsb
enter
add
add
bound
cmp
clc
sub
xor
daa
push
out
add
xchg
add
add
lds
xor
adc
xchg
jg
sbb
or
xchg
cmp
fsubrp
adc
sbb
sti
jmp
aad
clc
sbb
inc
out
add
cmp
xor
mov
cmp
rclb
adcl
add
aaa
mov
adc
ljmp
ss
and
add
mov
cmp
push
jns
jg
lock
orl
jg
in
rolb
add
xor
pusha
cmp
loop
fcoms
lock
add
popa
push
sti
jmp
loop
add
xorl
sbb
sahf
call
outsl
add
xchg
outsl
loope
dec
sbb
or
sub
dec
je
xor
xchg
sbb
mov
mov
push
jp
inc
stos
test
mov
stos
add
or
adc
sbb
lock
push
or
pop
imul
pop
pop
rcl
adc
pusha
push
dec
pop
dec
ret
dec
cmp
mov
sbb
push
sub
push
daa
mov
call
sbb
or
mov
scas
loope
sub
adc
sbb
lods
in
sbb
popf
adc
lret
popa
enter
mov
or
jle
test
ret
and
xchg
mov
scas
push
ret
icebp
inc
loop
popf
mov
rcrl
jge
jno
mov
push
imul
dec
mov
pop
sbb
mov
sbb
inc
sbb
jmp
sahf
cmp
fildl
loop
lock
jne
sub
mov
fildll
xchg
nop
xor
in
cli
mov
xchg
add
lea
push
xchg
cmp
mov
push
and
mov
pop
sbb
lcall
mov
pop
testl
push
call
daa
mov
fidivrs
cmc
or
or
push
mov
pop
pop
xor
or
shlb
cli
in
adc
pop
out
xor
sub
negl
in
sub
pop
sub
sarb
lods
cld
mov
movsl
pop
ret
xor
push
cmp
adc
dec
lret
xchg
popa
cmp
nop
jne
add
js
xchg
add
or
push
add
iret
add
gs
daa
jmp
adc
sub
mov
outsb
pop
sbb
xor
xorl
cltd
data16
xlat
pushf
movsb
sub
adcb
mulb
and
sarb
dec
aaa
push
pop
pop
cmp
jo
rolb
inc
mov
pop
sbb
ljmp
sbb
or
leave
leave
xor
push
pop
xchg
and
test
mov
mov
push
add
fistl
jg
mov
cltd
xchg
or
and
ja
sub
add
leave
out
cld
xchg
lds
or
lds
rcr
add
mov
insl
pop
gs
add
cmp
or
inc
cmp
jne
dec
and
or
mov
loopne
in
add
sub
adc
sarb
adc
push
dec
addb
jo
sub
call
ret
ror
sbb
adc
push
jmp
jnp
sub
push
arpl
sbbb
xorb
adc
jnp
popf
and
sbb
fstps
outsb
js
test
test
int
jb
adc
mov
cli
lods
push
cmp
insb
and
loope
mov
or
jg
in
xor
and
imull
sbb
mov
das
adc
bound
das
in
inc
scas
pop
add
or
into
add
jnp
ljmp
dec
xlat
adc
test
lods
or
inc
add
xor
clc
adc
sbb
adc
lea
add
pop
jne
add
or
ds
sub
pop
sbb
loope
jecxz
push
ds
rorb
lods
shll
outsl
dec
mov
dec
sbb
and
in
or
test
dec
push
xchg
add
in
pop
push
outsl
sbb
insl
movsb
jns
or
sbb
call
mov
add
mov
outsl
fcmovnb
pop
sbb
and
inc
cmp
xchg
and
xchg
int3
and
shlb
dec
scas
adc
dec
test
fnstsw
es
ds
testb
inc
and
nop
rcll
mov
mov
andb
mov
hlt
hlt
lock
enter
and
or
insb
call
mov
loop
mov
sub
loope
adc
mov
jnp
dec
clc
sub
xchg
mov
addl
mov
cmpsb
dec
imul
push
xchg
push
fbstp
out
xchg
adc
push
mov
add
cmp
sarl
pop
xlat
adc
mov
shll
movsb
in
inc
loope
adc
in
rclb
enter
mov
jl
popa
and
ja
enter
pop
mov
pop
or
fsubl
cmp
out
sbb
mov
dec
adc
fmul
sbb
or
pop
sub
fsubl
pop
je
sbb
sub
or
sahf
push
shrb
push
push
das
sub
es
or
aam
pop
lock
nop
mov
sub
ja
fnstsw
and
add
pushf
movsl
sbb
sub
fdivp
das
adc
lcall
lea
mov
jp
movd
ja
jnp
orb
sbb
sbb
adc
lret
sbb
xchg
std
dec
sbb
push
cmc
inc
push
push
test
scas
xchg
popa
fsubrl
lock
or
push
inc
iret
push
fldt
sbb
add
inc
dec
fistps
xchg
add
mov
clc
sbb
outsl
cld
lods
inc
js
pop
jecxz
inc
inc
jne
fs
push
xor
cli
stos
jle
sub
cmp
sub
cs
ljmp
aaa
nop
out
inc
in
lahf
int3
sbb
cltd
adc
and
add
dec
push
xor
sbb
mov
movsb
imul
daa
bnd
ret
int3
inc
jb
lea
sbb
in
sbb
push
adc
in
xchg
scas
insl
call
sub
push
lods
sbb
adc
enter
popa
decl
dec
jmp
adc
and
dec
cmp
in
and
mov
push
inc
dec
push
cmp
xor
nop
out
mov
int
adc
adc
adc
sahf
inc
sarb
and
in
int
pop
lret
cmovl
adc
dec
mov
mov
or
jle
dec
jae
cmp
jne
pop
das
aam
ret
gs
pusha
shl
addl
sbb
ja
sbb
add
xor
mov
mov
mov
adc
je
add
add
push
dec
xor
roll
icebp
sbb
push
mov
fs
dec
cmp
or
aas
lcall
call
icebp
pop
mov
push
push
mov
push
subl
xchg
dec
sbb
insl
cmp
arpl
pusha
jae
jp
test
add
pop
in
sub
add
push
and
jo
mov
pop
cltd
js
xor
insb
mov
add
or
sub
dec
adc
push
sbb
das
and
pusha
xchg
inc
inc
sub
loop
or
xor
pop
movsl
outsb
cmp
sbb
push
sub
popl
push
ss
cmp
and
mov
movsl
repnz
push
ror
xor
shlb
icebp
pop
adc
shl
mov
adc
inc
enter
pop
fcoml
imul
ljmp
sbb
inc
and
jae
sbb
adc
arpl
aam
mov
arpl
and
sbb
icebp
sbb
mov
mov
mov
push
mov
iret
clc
jo
add
sti
les
adc
add
test
fcmovnu
leave
call
imul
clc
push
std
mov
adc
jb
scas
jg
push
pusha
pusha
mov
and
cmp
divl
in
and
pop
jge
jle
dec
ret
jl
xor
lock
loopnew
ss
ss
es
clc
and
jno
lahf
and
add
bound
adc
and
mov
icebp
and
push
xchg
sbb
scas
and
xlat
sbb
adc
dec
pop
push
mov
inc
sbb
unpckhps
or
xchg
pop
and
mov
in
test
sub
aam
and
xchg
mov
mov
enter
in
inc
adc
mov
jmp
ret
aam
ja
test
out
add
rorb
adc
popa
inc
cmp
sub
clc
shl
xlat
sub
cmp
jnp
jbe
mov
pop
nop
and
add
cltd
mov
out
pop
jmp
lret
inc
aaa
adc
popf
mov
fadds
inc
test
push
imul
or
inc
popa
push
outsb
dec
call
and
jo
inc
push
adc
mov
pusha
adc
inc
aaa
scas
int
stos
mov
inc
imul
sbb
xor
mov
ror
add
mov
test
sub
and
dec
mov
xchg
or
dec
add
pop
ss
dec
sub
mov
inc
push
jl
or
rorb
sub
jg
jmp
push
das
and
xor
pop
adc
pand
or
mov
fadds
jg
dec
mov
mov
dec
stos
mov
sub
popa
mov
sub
mov
sub
xchg
jl
test
adc
test
iret
xor
xchg
sbb
sbb
in
les
scas
pop
dec
push
pusha
outsb
pop
ds
dec
arpl
dec
cltd
mov
xchg
cmp
shrb
jb
pop
push
test
inc
outsb
jo
lock
pusha
sub
and
inc
cmp
repz
pop
test
inc
add
push
addb
xchg
or
lock
hlt
xchg
sbb
fcmovnb
popf
outsl
mov
jne
fsubl
pop
cmp
je
in
mov
ret
fwait
sub
leave
inc
sub
movsl
adc
and
pop
adc
inc
mov
and
sbb
mov
xor
adc
cli
leave
lcall
hlt
sbb
jp
daa
or
add
lods
mov
and
or
adcb
add
xor
xchg
sbb
sbb
xchg
mov
pusha
repnz
mov
xor
dec
or
pop
xor
sub
inc
add
add
and
sub
add
imul
clc
xchg
es
inc
xor
xchg
inc
push
clc
ja
das
and
inc
xor
push
xor
sahf
movb
inc
add
popa
daa
cwtl
leave
lock
mov
clc
cltd
push
pusha
gs
pusha
or
addb
lods
sbb
repnz
loopne
inc
inc
cmp
inc
mov
call
inc
dec
push
jmp
adc
add
sbb
jge
jmp
cmp
inc
sbb
mov
movsb
jns
inc
sti
fdivrs
lahf
push
clc
and
pop
or
mov
xorb
sbb
daa
add
movsb
ds
jg
adc
dec
or
sub
or
mov
inc
aaa
lods
dec
testl
outsb
arpl
jle
and
hlt
push
push
adc
arpl
or
mov
xor
stc
inc
push
cmp
lock
inc
mov
sub
cmp
adc
push
and
adc
hlt
les
push
and
popa
or
mov
and
xchg
add
stos
xor
push
push
rorb
dec
pop
dec
adc
xor
pop
cli
ljmp
pop
mov
addr16
jmp
popa
push
xor
addb
adc
jecxz
mov
popa
das
pop
sub
mov
cmp
mov
inc
cs
es
adc
icebp
pop
in
push
xor
cmp
xchg
mov
fsubrl
fadd
cmp
push
movsl
sub
movsl
mov
sahf
lss
cmp
out
ja
nop
xor
push
mov
iret
arpl
test
je
and
cmp
repnz
test
xor
nop
je
js
repnz
enter
nop
iret
nop
cmp
test
mov
mov
add
and
fs
fsubl
inc
aam
xchg
cs
dec
push
or
lahf
lcall
insl
insl
xor
cltd
dec
pop
inc
cmp
push
gs
jge
test
mov
inc
int
pop
push
das
push
xor
fiaddl
jo
fcmovbe
adc
inc
das
inc
in
inc
dec
mov
out
mov
inc
xchg
dec
jae
pop
jo
in
xchg
pop
jno
pop
pop
cmpsl
jno
cmc
sbb
push
rcrb
xchg
arpl
push
in
fists
imul
pop
sbb
push
int
inc
lods
into
das
mov
sbb
xor
push
stos
insb
in
inc
jl
pop
jl
or
sub
popf
pop
cmp
sub
cmp
jmp
push
adc
imul
pop
inc
outsb
dec
das
loop
ret
enter
mov
add
sbb
push
sub
je
loopne
popf
inc
inc
ss
pop
cmp
mov
push
sub
jo
movsb
lea
inc
and
cmpsb
jle
mov
sub
jb
repnz
and
or
jl
dec
dec
pop
filds
sbb
jns
lods
addb
cmp
repnz
rol
add
dec
sub
sbbb
adc
js
fldl2e
lcall
clc
push
mov
and
lock
lcall
movsl
mov
aaa
fs
stc
and
cmpsl
fsubrs
cli
leave
sub
loop
xor
mov
enter
mov
loop
mov
js
sbbb
aas
cwtl
add
std
mov
pushf
faddl
mov
gs
test
cwtl
mov
pushf
inc
notl
pop
mov
lcall
and
push
scas
es
cmc
mov
cs
ja
outsb
add
add
pop
mov
adc
mov
add
inc
or
outsl
push
sbb
mov
lahf
inc
and
mov
and
aad
jg
jl
and
add
xchg
xchg
iret
xchg
repnz
sbbb
aam
inc
pop
setae
sti
mov
imull
repnz
push
pushf
loope
loop
cwtl
nop
sub
jle
or
push
xchg
push
pop
push
pusha
cmpb
lcall
sbb
adc
sti
ss
test
out
ret
ss
pop
cld
push
loopne
lock
mov
je
mov
in
pusha
fmull
pop
xor
cmp
adc
dec
out
jnp
pop
push
outsb
or
sar
movsb
cmp
xchg
or
imul
or
sbbl
pop
inc
push
pop
jl
insb
stos
push
push
ret
adc
xchg
cmp
inc
lods
push
gs
cld
outsb
add
imul
aas
repz
push
xchg
adc
mov
roll
jo
or
pop
mov
pop
orb
stos
mov
and
adc
lahf
inc
movsb
pop
fs
mov
sbb
or
sbb
movb
gs
lds
call
rcr
cmp
in
pop
push
pushf
pop
push
xorl
pushf
loope
in
inc
in
in
inc
xchg
vmread
jl
add
test
rcrb
or
or
pop
mov
in
jl
pminub
sbb
sbb
sbb
into
sub
push
sbb
dec
shll
xchg
test
dec
shll
rol
int3
shll
fsub
or
call
shrl
lcall
mov
cltd
int
pop
xchg
cmc
movsl
or
xchg
and
add
fwait
sbb
fadds
aaa
pusha
xor
mov
lcall
dec
add
adc
pop
lea
add
pmovmskb
movsb
xchg
jo
cwtl
push
sub
sarb
lret
pop
mov
pop
mov
movsb
lret
adcl
inc
pop
inc
ficompl
add
pop
fldcw
cmpsl
sbb
inc
mov
pop
movsl
mov
mov
mov
and
movsl
mov
lret
pop
cmpsb
loope
add
xor
popf
mov
add
inc
into
or
mov
inc
lods
cltd
xor
xor
or
subb
dec
jb
aas
sub
arpl
mov
inc
sub
rorb
xor
xchg
icebp
pusha
add
add
lods
addr16
js
xor
loopne
mov
and
lea
lods
movsl
xchg
decb
sbb
in
and
xor
addr16
push
adc
xor
sub
sbb
mov
jo
enter
pop
ret
jg
ret
rorb
cmpsl
cmp
xor
icebp
les
adc
sub
sub
jne
jle
mov
sub
jle
push
repnz
loope
lods
orb
mov
pop
sbbl
jmp
push
sub
fcoml
fsubrl
xor
add
pop
add
hlt
jge
and
push
adc
mov
cmpsl
xchg
movsb
mov
aas
inc
fwait
loop
pop
out
in
adc
mov
inc
loopne
call
cmp
inc
and
push
and
sbb
les
ret
sub
cmp
bound
cmpl
popf
jecxz
aad
mov
and
inc
add
push
sub
lods
test
pop
leave
sbb
fcomps
dec
dec
xchg
dec
cmpsb
aas
push
push
push
sbb
nop
pop
dec
add
or
rorl
int
inc
jns
xor
sub
jl
adc
mov
enter
movsl
nop
add
xchg
pop
xchg
push
inc
or
add
mov
sub
and
push
outsl
mov
adc
push
fs
stos
imul
sub
adc
sub
pop
repnz
cmp
fsub
cmp
test
andl
mov
loop
jae
add
ss
out
inc
dec
or
push
les
pop
pop
and
shrl
pop
lret
sub
xchg
enter
sti
push
aas
shl
add
push
dec
scas
lea
cmpsb
jg
sbb
mov
dec
pop
fbstp
pop
stos
lret
sbb
jp
jo
inc
cmp
out
push
xchg
sbb
out
cmp
rolb
ret
test
mov
mov
jb
xchg
adc
push
ficoml
dec
jne
test
ss
jle
out
push
pop
or
jnp
dec
flds
movsb
add
jno
inc
pop
cmp
fdivl
dec
inc
cld
je
lds
mov
cmpsl
cmc
sbb
xchg
xchg
repz
rol
js
xor
out
push
mov
in
pop
outsl
cmp
jae
divl
sbb
or
sub
add
add
xorl
jb
dec
xor
ljmp
jae
lods
xor
imul
push
mov
adc
jno
add
call
dec
mov
es
jmp
je
test
xchg
jbe
mov
add
xor
and
jl
addl
clc
into
je
jne
add
test
mov
in
test
imul
jo
jg
andb
mov
cmc
call
adc
mov
mov
cs
shll
test
inc
fiadds
cmpsl
xchg
test
jne
nop
sbb
pop
push
or
movsb
or
mov
pop
push
test
or
cwtl
pop
fidivrl
add
mov
adc
mov
cli
xorb
mov
lea
cmpb
std
cmpb
cmpb
or
js
inc
adc
mov
sbb
int3
mov
pop
clc
xchg
pusha
adc
setl
pushf
jecxz
adcl
or
out
xchg
movl
test
push
les
inc
cwtl
add
push
lahf
push
jbe
inc
testl
sbb
pop
ret
daa
call
adc
xchg
in
push
xor
inc
into
or
inc
xchg
pop
sub
or
xchg
adc
int3
and
jno
and
push
jl
add
test
pop
loopne
or
nop
or
jecxz
les
or
sub
add
push
sbb
and
scas
clc
notl
mov
pop
cmc
pop
cmp
inc
cmc
adc
adc
imulb
adc
in
add
mov
mov
in
les
outsb
pushf
or
or
pop
addl
lds
inc
inc
subb
adc
ss
xor
daa
daa
addr16
or
scas
insl
sub
int3
pop
addb
or
into
xor
test
je
inc
xor
push
aas
and
mov
movl
sbb
push
mov
test
das
repnz
cmp
out
mov
cs
cmp
sbb
nop
dec
je
sub
sub
jp
push
mov
scas
cs
cld
inc
add
sbb
push
xor
pmulhuw
inc
sub
jg
and
inc
cmp
inc
inc
add
mov
lods
js
sbb
jns
inc
movb
cmp
dec
gs
inc
or
xchg
enter
test
fdivs
push
add
add
xor
add
insl
add
add
pop
pushf
adc
push
or
mov
xchg
shlb
and
ret
dec
ljmp
gs
sub
lret
sti
lock
or
icebp
add
mov
or
add
push
test
sub
or
push
sahf
xor
push
lcall
or
push
pop
out
dec
adc
lret
add
les
stos
lods
mov
movsb
or
icebp
push
das
movsl
mov
pop
add
icebp
pop
xchg
or
std
xor
or
out
xchg
aam
popa
adc
xor
add
hlt
test
stc
jno
cmp
out
sub
inc
xchg
pop
push
mov
loop
push
xor
popa
mov
mov
jecxz
cmp
nop
dec
dec
cmp
add
adc
cmpsb
lock
inc
arpl
jo
stos
jnp
and
mov
cmp
adc
cli
add
jmp
jl
fcmovbe
and
sbb
dec
xor
cmp
rclb
push
inc
cli
xchg
xor
cli
iret
push
lods
leave
and
jno
cmp
inc
and
lea
xchg
sbb
sub
ljmp
adc
jmp
lret
push
xchg
rcll
sub
mull
sti
sbb
lea
mov
ret
jae
andb
loopne
add
mov
mov
dec
cs
imul
sub
mov
arpl
add
dec
icebp
push
inc
imul
xor
subl
in
pop
cmpl
cs
mov
push
dec
pop
movsb
pop
xchg
push
dec
add
lods
aam
fwait
xchg
push
loopne
lea
dec
add
dec
xor
add
lods
xor
arpl
dec
push
lds
aaa
loop
inc
add
addb
adc
outsb
inc
sub
mov
sub
cmp
or
sub
xor
inc
cmp
rol
mov
and
push
inc
pop
loop
andl
pop
je
adc
sub
push
cwtl
xchg
xor
addb
or
mov
push
inc
xchg
movb
jecxz
imul
incb
inc
addr16
xchg
and
faddl
push
cmp
inc
dec
mov
cmc
xchg
stos
push
rcll
adc
push
in
or
xlat
cli
push
cmp
movsb
xchg
loopne
scas
inc
fimuls
and
sub
mov
dec
enter
lock
jne
adc
pop
adc
push
fdivs
int3
divl
clc
push
in
mov
sbb
movl
in
call
ljmp
and
add
lcall
out
cltd
cmp
js
orb
insb
pop
and
adc
jae
loop
ror
sti
in
aam
aas
cmpsl
insb
adc
jne
mov
mov
lods
hlt
add
std
mov
mov
or
mov
cmc
push
and
pop
inc
inc
ret
cmp
sub
or
jmp
adcb
push
lea
arpl
and
push
push
insl
or
or
mov
loope
jl
add
cmc
or
push
jo
arpl
and
push
lds
jo
adc
fistps
jl
pop
sub
push
lds
sbb
pop
addl
sbb
clc
loope
cmp
je
mov
ja
lcall
scas
adc
test
ds
jg
dec
inc
mov
and
inc
mov
cmp
lea
adc
test
adc
xor
pop
cs
test
inc
popa
in
and
add
mov
inc
dec
xor
dec
lods
andb
roll
mov
mov
push
or
loope
mov
fwait
cmpsl
mov
cltd
pop
push
scas
movl
fdivs
cltd
repz
cmp
adc
cmp
jge
or
js
inc
mov
repz
hlt
pop
hlt
mov
ret
and
repnz
test
add
bound
inc
sbb
cmp
add
sub
inc
out
lods
hlt
inc
sub
stc
add
adc
repnz
adc
add
lahf
rclb
add
add
bound
dec
dec
cmp
out
out
sbb
add
mov
add
inc
mov
sub
ret
fistps
adcb
je
or
mov
scas
add
mov
les
fs
xor
popl
aaa
xor
add
adc
xchg
scas
push
fdivl
popa
adc
shrb
jno
adc
adc
jno
pop
xchg
and
in
push
inc
in
xchg
rorb
xchg
rorb
push
test
dec
xor
push
pop
jno
call
sub
rol
fcoms
int3
sbb
mov
push
mov
cmp
adc
movsl
add
rolb
xlat
scas
loope
sub
adc
loopne
clc
mov
dec
cmp
adc
lea
pop
add
sbb
and
loope
dec
in
arpl
dec
in
mov
push
dec
inc
pop
loopne
pop
inc
jmp
push
cmp
nop
push
xor
pop
mov
lock
lret
push
adcl
xchg
xchg
xlat
adc
jb
into
jno
lahf
push
lods
pushf
pusha
add
test
xor
and
loopne
movl
out
rclb
stos
outsb
or
cmp
add
test
nop
adc
or
xchg
mov
push
sub
lahf
test
test
pop
lock
sarb
xor
inc
dec
cmp
xlat
nop
pop
out
es
or
xchg
add
mov
dec
fwait
sbb
gs
add
add
xor
dec
or
or
jno
lock
push
lods
in
dec
das
mov
pop
add
ljmp
sub
inc
cmpl
and
repnz
js
xor
xor
clc
sbb
cmp
jne
dec
sub
cmpsl
sub
xor
inc
jp
cmp
sbb
pushf
pop
test
add
outsl
repnz
subl
ljmp
add
xchg
add
dec
push
push
push
or
adc
fisttpll
or
dec
xchg
popl
cld
push
mov
call
mov
inc
pop
jmp
stc
push
inc
lods
outsl
daa
pop
imul
mov
mov
and
add
in
add
mov
incl
ret
push
add
decl
addb
sarb
fwait
movb
sub
mov
pop
add
icebp
cld
inc
and
add
or
cwtl
pop
or
in
mov
ds
addb
mov
outsb
jne
and
jo
jmp
xchg
jp
test
imul
or
insb
fwait
pop
pop
or
jb
add
and
push
cltd
popa
jmp
lret
and
and
push
mov
mov
bound
insb
inc
add
test
inc
or
adc
mov
add
pusha
cmpl
jne
cmovne
or
icebp
mov
in
and
mov
je
sbb
fs
arpl
lret
push
mov
jnp
out
and
roll
mov
gs
add
movsl
push
lahf
pushf
dec
push
mov
xchg
pop
or
adc
sbb
dec
lds
insb
and
aam
cwtl
aam
dec
or
cwtl
ja
sub
scas
dec
aad
movsb
mov
dec
add
adc
fsubl
addr16
icebp
adc
and
and
pop
repnz
test
mov
dec
and
push
adc
test
sub
cmpsb
push
mov
mov
and
enter
xor
or
mov
adc
mov
pop
in
scas
lcall
nopl
lods
clts
mov
pushf
dec
lock
sub
xchg
out
adc
in
je
test
scas
xor
mov
xor
xor
ffree
push
aam
outsb
sbb
data16
sbb
cmp
cmp
sub
mov
push
test
lcall
pop
cmpsb
pop
sbb
call
xor
cmpb
pop
or
lock
push
int
mov
jno
lea
call
outsb
je
mov
enter
add
inc
out
ret
adc
dec
cmp
cmp
inc
push
add
pushf
std
and
fs
or
sub
test
push
cmp
scas
dec
cwtl
cwtl
inc
inc
outsl
inc
add
add
dec
mov
inc
orl
and
inc
cmp
inc
pushf
xor
cltd
xchg
add
pop
nop
das
gs
push
xor
or
or
ja
adc
xchg
cmp
pusha
inc
mov
aam
or
imul
or
xchg
in
mov
test
adc
adc
push
dec
jns
mov
push
cld
lea
push
sarb
fdivl
sub
seto
push
sbb
fildl
ljmp
or
or
add
mov
push
popa
fs
sbb
add
je
or
imul
mov
inc
mov
dec
out
adc
jae
lock
sub
mov
push
sbb
adc
add
inc
imul
xor
adc
imul
push
add
push
push
xchg
adc
pop
call
mov
scas
stos
ljmp
dec
mov
jl
pop
jb
pmulhuw
inc
jo
scas
nop
pop
inc
or
lods
push
scas
inc
dec
mov
push
aaa
cmp
jge
xor
push
daa
addb
nop
jbe
push
pop
arpl
inc
pop
adc
jl
add
cs
adc
out
pushf
filds
in
add
fistps
insl
push
pop
inc
pusha
out
adc
adc
enter
outsb
mov
or
push
push
pop
and
or
jmp
push
push
add
add
add
repz
dec
pop
add
inc
cmp
pop
push
add
icebp
repnz
pop
es
mov
xor
and
dec
lods
pop
inc
or
out
fdivl
dec
rcrb
pop
in
xchg
pop
jnp
into
jno
pop
enter
icebp
pop
xchg
push
mov
push
or
pop
sub
mov
add
sub
mov
nop
pushf
adc
out
andps
lret
jecxz
sbb
cwtl
adc
test
cmovae
ret
rolb
inc
in
sub
jb
arpl
fdivs
je
imul
mov
jnp,pn
push
call
sbb
int3
data16
jae
add
push
sub
insl
popa
and
adc
push
les
and
push
sbb
mov
nop
test
push
push
add
call
cmp
stos
add
insb
scas
insl
pop
repnz
imul
jbe
mov
pop
or
and
enter
push
fsts
or
inc
pusha
daa
pusha
inc
mov
dec
sbb
add
pusha
rorl
push
push
and
pop
jb
and
mov
in
cwtl
insb
fisttps
insl
or
push
pop
imul
jecxz
xor
add
xchg
jbe
push
sbb
or
popa
dec
pop
adc
jo
jo
movb
adc
xchg
out
sbb
add
adc
dec
in
ja
sub
jmp
inc
loopne
test
xlat
add
inc
daa
cs
scas
scas
aam
cmc
push
imul
mov
cs
xor
xor
ss
cmp
xor
inc
xchg
aas
inc
loope
dec
dec
dec
dec
dec
dec
dec
dec
rcl
inc
fsts
push
push
push
pop
pop
pop
inc
sub
mov
push
rcl
and
push
dec
jb
daa
lret
sub
cwtl
in
xor
or
js
mov
adc
inc
sbb
add
out
mov
xor
loop
pop
js
and
mov
and
add
mov
outsl
pop
or
push
mov
js
xlat
push
xorl
mov
shr
data16
dec
and
cmp
or
incb
adc
sbb
test
adc
mov
dec
clc
sub
clc
lret
scas
addb
or
je
push
es
dec
add
sub
jle
dec
pop
mov
hlt
add
lea
jge
lret
imul
aas
or
sarb
pop
fisubrs
sbb
pop
ret
cmp
and
xchg
pop
in
out
cltd
mov
test
add
clc
cmp
fs
jmp
loope
repnz
es
jmp
inc
es
jbe
inc
inc
dec
pusha
sub
dec
call
sub
sub
jp
or
enter
xor
js
or
mov
aas
lds
xor
jnp
loopne
add
inc
xor
mov
daa
mov
jecxz
test
sub
in
sbb
pop
cmpsl
outsl
inc
push
dec
or
mov
pop
or
add
jo
push
dec
addl
stc
cmpsb
sbb
add
push
push
out
sbb
jno
mov
rcrl
sahf
sub
arpl
iret
aad
add
add
fstpt
std
and
sbb
out
mov
cmp
iret
pusha
inc
xor
inc
xor
mov
cmc
cli
sbbl
adc
bndstx
lods
xchg
decb
std
or
jmp
inc
arpl
push
add
insb
test
inc
mov
pop
mov
out
outsl
sbbl
sbb
and
pop
dec
sbb
lock
push
xchg
roll
fstps
fists
inc
aas
push
cmp
ja
sbb
fbstp
mov
popa
jne
mov
add
or
cmp
jg
mov
ret
lds
rolb
and
sbb
xlat
sbb
pop
test
insl
stc
lock
ss
rcrb
mov
add
loop
mov
ret
adc
daa
mov
es
sub
subl
sub
shrl
scas
icebp
cmp
ja
jo
int
jg
mov
push
pushf
pop
mov
jmp
jmp
xor
fidivrs
add
pop
enter
gs
cmp
ss
adc
or
push
cmp
add
mov
and
adc
dec
aaa
pusha
neg
pop
bnd
mov
dec
stos
pop
mov
fadds
in
push
ja
lock
cltd
inc
sbb
pusha
push
add
shlb
lret
faddl
aad
imul
addb
sbb
and
inc
sub
je
cmp
sub
push
inc
jle
mov
arpl
das
cmpb
fcompl
sbb
in
aaa
inc
insb
movzbl
cmp
fistpll
ret
cmp
inc
inc
je
nop
inc
sub
imul
push
dec
and
mov
add
js
add
add
movsb
mov
inc
adc
lods
cmp
ds
fbstp
push
mov
pop
sbb
decl
popa
xchg
aas
cmp
insl
addb
xchg
mov
jo
leave
mov
or
test
in
add
pop
xchg
int
movb
pop
cmp
add
jl,pt
orb
add
mov
inc
xchg
js
inc
sub
mov
or
test
push
or
add
in
sbb
inc
rolb
aaa
aam
jmp
add
and
push
popa
out
filds
mov
jle
adc
sbb
jns
out
mov
das
inc
pop
roll
ja
push
vmread
push
data16
leave
add
dec
test
pop
fmuls
cmpsb
rol
rorb
add
dec
inc
pop
cmp
daa
cmpb
mov
cli
or
sbb
xor
sbb
pop
adc
fucomi
dec
pop
pusha
adc
or
cmp
push
cmp
adc
mov
and
dec
or
test
mov
psubw
daa
sarb
testl
inc
sub
or
fs
int3
lret
aas
out
cmp
and
mov
inc
and
mov
sub
add
pop
inc
aas
je
add
xlat
shlb
inc
cld
adc
jno
mov
dec
inc
mov
push
cmp
mov
or
in
je
sbb
cmpsb
fstpl
xor
mull
jmp
fcmove
push
pusha
ret
lock
xor
arpl
insb
ret
cltd
cmp
roll
sahf
push
fmulp
pop
xlat
or
imul
inc
ret
or
adc
sub
xor
push
imul
fdivr
adc
lcall
sub
xchg
lock
adc
fistpl
mov
psubq
into
adc
pop
jmp
lahf
cmpsb
xchg
jbe
adcb
nop
in
mov
daa
inc
shlb
sub
jne
pop
sub
inc
pop
dec
sti
xchg
cmp
xchg
fbstp
add
rorb
xchg
les
pop
jo
add
inc
cmpsb
cmp
aas
cld
adc
or
push
xor
and
or
dec
outsb
or
cmc
out
addr16
jl
adc
xchg
pop
daa
sub
xor
push
mov
cmp
inc
and
jp
lods
testb
and
inc
xor
xchg
push
mov
add
mov
push
rol
pop
insb
scas
mov
mov
mov
mul
and
push
adc
push
push
je
push
and
mov
push
call
inc
cli
in
jne
mov
add
adc
and
pushl
loope
sahf
test
cmp
daa
push
inc
pushf
test
lret
mov
xor
shlb
jg
icebp
and
jle
dec
cmpl
jo
xchg
fadds
and
pop
cmp
add
aas
shll
xor
push
jl
fildl
pusha
mov
jmp
daa
jb
xlat
mov
xchg
inc
cmp
cmp
mov
mov
mov
or
xor
sbb
dec
aad
loopne
rorb
cmp
cs
addr16
lods
xchg
aaa
or
add
or
je
in
dec
aad
jo
pop
enter
sub
rclb
sahf
add
adc
xchg
inc
mov
test
pop
jle
inc
inc
or
cmp
push
fcoml
mov
call
std
xchg
inc
fsubrl
or
push
lock
and
dec
add
js
test
or
and
mov
test
je
push
adc
imul
push
js
pop
cmpsl
in
push
shlb
sub
sbb
jmp
cmp
lock
lock
clts
arpl
pop
sahf
push
or
aad
jle
or
and
dec
add
jmp
or
inc
cmp
xor
orb
inc
or
cmp
inc
or
div
push
xorb
xor
add
xor
test
push
movsb
subl
movsb
adc
pop
mov
sahf
inc
int
ret
cwtl
and
inc
outsb
out
or
pop
xor
sub
or
or
push
dec
and
inc
xchg
imul
add
stos
xor
notl
or
or
in
sub
jl
xor
sahf
filds
fadd
pusha
imulb
lea
sbb
scas
and
lods
cltd
sbb
mov
xlat
popa
push
xlat
or
mov
or
adc
push
cli
in
xor
movb
inc
cmc
inc
dec
cmp
pop
adc
pusha
add
dec
cltd
mov
inc
iret
dec
pop
das
loopne
int3
cmpsb
cmpsb
f2xm1
sbb
hlt
mov
pop
enter
xor
push
int
pop
test
cld
call
shll
and
rolb
jge
jno
inc
lahf
jle
sbb
rcrb
sub
lds
jo
sbb
push
sbb
aaa
push
sbb
mov
movsb
sbb
xor
add
ret
cmc
mov
sbb
mov
add
sub
insl
adc
daa
push
add
jns
adc
in
hlt
xor
fmul
inc
push
test
dec
sbb
and
test
rclb
cld
mov
push
jns
imul
cmp
invd
dec
insb
and
dec
nop
jmp
and
lock
sbb
dec
adc
mov
xchg
dec
lcall
or
inc
leave
inc
push
push
cwtl
pop
add
cmp
pop
push
push
inc
adc
and
mov
dec
icebp
push
fsubrs
aam
in
sub
not
xchg
jl
mov
sti
xor
dec
mov
push
je
les
xor
cltd
pop
roll
mov
xchg
or
inc
push
dec
or
sub
sub
and
add
inc
push
sub
daa
in
clc
pop
lock
roll
fld
jo
sbb
cmpsl
add
xor
inc
and
lea
rolb
clc
movl
sbb
mov
sbb
sbb
xor
bound
jbe
into
hlt
cmp
rorl
in
hlt
pop
iret
hlt
sub
inc
add
sub
movsb
lock
cmp
add
or
pop
jns
inc
jne
dec
push
mov
pop
or
cmp
push
jo
jne
dec
add
int3
add
jp
movl
fildll
push
rolb
sbb
xorb
out
xor
xchg
adc
shrl
clc
loopne
mov
enter
or
loopne
ja
or
mov
outsb
aaa
fistps
scas
addb
sub
jmp
adc
xchg
push
sbb
add
es
mov
pop
mov
ja
or
lock
call
dec
iret
push
inc
sub
enter
xor
das
add
pushf
fwait
sbb
add
or
dec
or
dec
loopne
ss
call
fisttpl
or
mov
addl
xchg
add
or
aaa
bound
adc
xor
es
pusha
adc
test
in
add
cmp
cmpb
push
repz
and
adc
addr16
jo
nop
and
data16
mov
adc
dec
call
ret
pop
lods
inc
sbb
call
adc
movl
dec
xor
cmovno
and
ds
sbb
repnz
call
pusha
sbb
les
xor
insl
stos
and
lea
clc
xor
and
dec
cmpsb
mov
xchg
clc
sub
clc
addl
xchg
call
test
lock
clc
cmp
pop
cmp
and
inc
mov
aaa
pusha
inc
or
sbb
pop
inc
xchg
pop
sbb
cs
adc
mov
dec
call
test
mov
mov
mov
orl
les
adc
cmp
push
and
and
add
jo
cmp
or
gs
jno
pusha
shll
lahf
sbb
dec
adc
daa
loopne
daa
out
lods
mov
adc
adcb
jl
ret
pop
xor
es
pop
mov
jle
dec
add
repnz
ret
jae
jl
jge
in
pop
and
je
rolb
push
sbb
inc
in
sbb
mov
and
cmp
adc
cmp
pop
sahf
popa
push
xchg
pop
pusha
inc
push
sbbl
jmp
fistl
xchg
scas
add
mov
inc
loop
add
mov
mov
lret
push
fs
lret
adcl
xor
mov
or
insl
push
adc
pop
dec
pop
push
mov
inc
jbe
loop
push
push
lea
dec
adcl
sub
push
push
pop
test
cs
xchg
or
rolb
sub
fmul
imul
push
jno
outsl
bound
cvtpi2ps
sbb
add
xor
int
outsb
mov
les
arpl
imul
push
cmp
adc
push
inc
inc
inc
incl
xchg
add
int
call
cmp
mov
mov
sbb
pop
add
aaa
dec
dec
fnsave
dec
bndldx
adc
adc
push
inc
fs
push
or
stc
es
or
mov
lret
or
xchg
cltd
test
sahf
or
mov
outsl
add
mov
std
ja
sbb
faddp
int
mov
mov
or
pop
cmp
xor
add
push
and
push
add
adc
add
xchg
subb
lret
or
mov
pop
incb
xor
into
popl
out
mov
lret
add
fcoml
out
lods
jge
stos
pop
leave
dec
fdiv
ret
shrb
adc
dec
mov
aad
push
dec
fldl
jne
push
xor
fsubl
addb
mov
addb
outsl
cmp
push
js
inc
sub
mov
xor
fs
jae
lret
sub
mov
cmp
or
push
arpl
pop
mov
cmp
push
dec
or
add
and
pop
jae
inc
push
adc
add
in
pop
pop
in
rorb
and
cmpb
add
insl
xchg
out
cmpsl
cmp
pop
dec
mov
ss
fs
insb
loopne
sub
mov
mov
add
pop
mov
jno
out
aas
je
inc
adc
aaa
push
not
sub
lret
jne
mov
imul
xor
mov
or
sarb
pop
xor
cwtl
in
add
add
jl
lcall
loop
mov
outsl
mov
inc
inc
pop
inc
inc
andl
inc
orb
and
mov
jne
ret
insb
pop
mov
out
xor
aaa
adc
pusha
aas
ret
mov
cmp
sub
andb
inc
add
call
aaa
mov
out
mov
sbb
and
and
and
scas
outsl
pop
pop
add
pop
cmp
faddp
jl
cmp
fs
outsb
aas
add
mov
push
pop
movb
fsubl
fimuls
pop
lods
xchg
es
sub
add
push
bound
dec
push
test
mov
jbe
push
push
test
fiadds
inc
aas
jbe
and
xor
fs
mov
popa
push
das
test
xor
jo
push
das
xlat
fstps
add
sbbb
lea
pop
inc
lods
push
fiadds
aas
adc
fwait
bound
push
mov
in
nop
loopne
popa
pop
imul
fs
or
mov
shrl
lods
jmp
xchg
ss
sahf
gs
xor
inc
fnstcw
xor
and
jne
xor
mov
cmp
or
sub
leave
and
add
add
dec
jmp
and
inc
inc
and
mov
lods
add
mov
popa
ss
and
movsb
add
and
insl
adc
cltd
or
je
dec
push
insl
jl
push
sbb
ss
mov
les
loopne
dec
pop
mov
cmp
aaa
mov
xchg
xchg
xorb
or
fdivs
adc
pop
adc
add
in
pop
and
inc
jmp
ja
sub
jno
push
inc
test
jno
lret
es
inc
dec
inc
push
xchg
loop
popf
push
outsl
push
jl
jnp
dec
mov
and
push
repnz
pop
dec
inc
test
addr16
inc
dec
push
or
or
dec
add
xchg
jmp
adc
sub
out
scas
add
subb
cmpl
loop
ret
iret
xchg
add
int
add
inc
popa
lret
aaa
aam
enter
adc
push
fnstcw
out
jbe
mov
jo
pop
xor
fs
lret
jo,pt
fidivrs
push
cmp
cmp
ret
lret
mov
repnz
sti
mov
ret
dec
pop
mov
push
dec
pop
sbb
xchg
lahf
add
mov
mov
out
xor
add
ja
push
movsb
sbb
xchg
xlat
push
and
dec
fcompl
pop
mov
inc
pop
sbb
inc
cwtl
pop
jbe
aas
add
jb
insb
loopne
inc
xchg
push
xor
inc
je
xchg
xchg
mov
pusha
push
push
xor
mov
add
xor
mov
mov
mov
insb
inc
popf
jecxz
imul
push
xchg
in
scas
dec
cmp
sub
fdivrs
and
dec
xchg
sub
cmp
rorb
inc
or
jno
dec
pop
je
or
inc
and
mov
out
push
or
enter
loope
xchg
and
insb
or
fs
mov
mov
inc
les
push
jl
xor
and
popf
or
cmc
mov
addl
pop
push
pop
sarb
cmp
js
fadd
imul
inc
notb
roll
or
mov
push
pop
sub
sti
lods
lods
add
mov
inc
popf
xor
lods
lods
insb
push
xchg
mov
push
dec
sub
cmpsb
mov
pop
orl
or
addr16
jo
lcall
sub
sub
mov
push
sbb
loope
inc
sar
call
cmp
inc
cmpsl
imul
stos
xchg
xchg
inc
daa
cs
repnz
mov
add
pop
adc
data16
adc
cmp
mov
inc
and
lret
mov
sbb
cmp
add
repnz
lock
mov
inc
mov
pushl
push
pop
sbb
sbb
push
pop
in
ret
dec
sbb
aaa
pushl
dec
inc
test
dec
add
jge
movsl
mov
sbb
adc
inc
aaa
sbb
sbbl
es
xchg
mov
cwtl
sub
add
mov
loop
sbb
add
out
sbb
push
movb
out
push
cmp
mov
sbb
or
mov
mov
adc
or
loopne
es
dec
mov
aam
pop
hlt
sbb
in
loopne
repz
ficoml
mov
mov
or
nop
aaa
fnstcw
push
aaa
les
pop
adc
adc
mov
xor
adc
insl
mov
jne
dec
push
pop
dec
xor
imul
int3
xor
std
je
sbb
push
je
push
sbb
call
xor
outsl
popf
mov
shl
pop
inc
adc
adc
icebp
pop
enter
int3
or
cmp
pushf
sub
enter
int3
push
stos
push
or
lds
inc
push
fs
rol
mov
add
inc
adc
lods
inc
and
jp
loope
and
inc
jmp
xor
sbb
dec
sbb
xor
jns
outsb
mov
cmp
insl
fnstsw
ds
jmp
push
mov
mov
and
in
push
mov
adc
jmp
inc
pop
sub
pop
mov
sub
scas
loopne
sbb
sbb
or
dec
pop
cmp
imul
xlat
cmp
ret
mov
loopne
mov
xor
sahf
decb
leave
dec
test
xchg
mov
add
clc
push
shll
sbb
jne
cmp
sbb
ret
aas
call
test
or
ret
push
mov
ret
mov
xchg
testl
mov
lea
push
mov
dec
repnz
cmpsb
sbb
imul
xchg
push
sbb
ss
into
mov
pop
or
cmpsb
sub
cmp
pop
cmp
dec
jb
fdivs
xchg
inc
iret
sbb
lods
out
pusha
sti
cmp
out
xchg
inc
and
jl
sub
cli
adc
roll
mov
pop
ja
sti
jl
inc
test
mov
sarl
jp
inc
movb
cmpb
mov
dec
ret
inc
addl
cmpb
insl
sbb
xor
jo
mov
mov
mov
xor
fsubl
add
jl
jg
aaa
dec
lahf
xchg
sub
jne
xchg
lret
movq
mov
sahf
cmp
mov
cmp
push
pop
adc
cmpl
call
das
ret
mov
cmp
je
push
cmp
adc
xor
or
xchg
roll
adc
lea
mov
lock
inc
les
insb
cld
adc
iret
xor
std
fnstcw
inc
cmp
xor
bound
inc
mov
inc
inc
jae
and
pop
jnp
push
rol
inc
xor
mov
and
fisubrl
fdivrs
push
mov
mov
ret
push
lahf
mov
xchg
push
xor
iret
cltd
ret
add
lea
dec
fstl
push
add
pusha
xchg
and
inc
pusha
or
scas
xor
lock
or
push
and
sub
mov
clc
and
sbb
hlt
pop
xorl
adc
pop
scas
add
mov
sbb
push
pushl
add
sbb
gs
sbb
call
mov
jmp
aad
sbb
jle
jmp
js
insb
jecxz
inc
int3
js
pusha
add
xlat
xor
cmp
or
adc
mov
cltd
pop
loopne
nop
inc
jle
pop
out
outsb
inc
sbb
ficomps
aaa
test
clc
or
repz
lahf
pop
imul
fstps
das
incl
cs
in
cmp
fildl
adc
adcl
inc
test
loop
nop
sbb
push
jl
adc
sub
movl
and
lds
mov
push
test
decl
hlt
scas
sbb
fidivl
dec
adc
ss
movsl
xchg
add
cmp
or
or
aam
adc
lar
int
sub
or
loope
sbb
jge
adc
mov
in
mov
lods
sub
pop
es
push
fisubrs
mov
or
jge
loop
xchg
xchg
sbb
jno
xchg
or
add
sbb
push
pop
int
jmp
bound
and
add
dec
sbb
push
add
push
pop
inc
inc
adc
add
xchg
inc
shrl
mov
loop
ret
xlat
add
movsw
cli
mov
cmc
add
pop
jge
mov
and
push
and
mov
mov
sbb
or
push
pop
fs
outsb
mov
cmp
fwait
repz
rcr
pop
inc
jae
imul
xchg
in
arpl
push
or
pop
mov
sbb
inc
lea
inc
repnz
imul
xchg
and
test
popa
pusha
loope
ficompl
mov
xor
lds
add
subb
or
push
adc
sub
stc
inc
mov
inc
insb
and
xchg
push
sub
ret
lods
xchg
nop
add
sahf
dec
inc
in
cmpsb
mov
fdivrs
jno
rolb
ret
xor
pop
shl
dec
inc
arpl
adc
lcall
ret
hlt
pop
les
pop
les
mov
sbb
repz
das
jne
cmp
movsl
mov
jp
hlt
adc
xor
jmp
rolb
dec
xor
push
cmp
mov
pop
xchg
jno
mov
inc
fistpll
cmp
push
lahf
pushf
test
pop
movb
inc
pop
add
inc
adc
add
or
std
inc
cmp
pop
clc
jb
xor
nop
mov
mov
mov
in
adc
adc
jmp
insb
dec
insb
pop
cmp
es
fstpt
cmp
rcrb
jle
dec
es
mov
into
add
mov
cmpb
add
loopne
adc
arpl
je
in
or
shrb
inc
mov
test
inc
xor
mov
fwait
push
sbb
mov
mov
das
mov
mov
xchg
into
xor
cmpsb
mov
aad
loop
add
or
jmp
rcrb
fcomps
or
sub
test
or
clc
cmp
inc
inc
mov
inc
or
pop
or
enter
inc
in
cmp
push
stc
test
iret
dec
nop
xchg
inc
inc
inc
dec
inc
and
inc
loopne
js
sub
nop
stc
push
mov
mov
aam
xor
jne
ret
sbb
clc
push
add
mov
mov
mov
add
in
adc
xor
push
adc
ret
test
dec
dec
in
xchg
push
gs
cmpl
pop
pop
pop
cmp
mov
push
das
call
in
inc
testb
push
fsubr
sub
ret
pop
movsl
dec
adc
jge
xchg
adc
xor
inc
push
inc
and
mov
movsl
ret
jle
hlt
cmpsl
mov
and
pop
fisubl
pop
adc
inc
xor
leave
add
jno
push
or
jecxz
mov
nop
add
inc
adc
inc
add
into
leave
adc
aad
or
cmc
fisttps
and
into
ja
clc
movsb
pop
jbe
aas
pushf
mov
rolb
and
pop
add
sarb
incb
xlat
fldpi
cs
out
mov
pop
adc
pop
cmpb
imul
adc
pop
xor
jne
decw
cwtl
xor
add
and
outsl
addb
xchg
test
inc
dec
or
or
insb
push
bound
fcoms
xchg
fistl
and
jg
push
es
push
dec
sub
outsb
mov
mov
aaa
mov
enter
fldl
sub
mov
add
orb
fs
mov
jno
mov
sbb
test
sub
jge
mov
mov
movsl
movsb
add
sbb
pop
ja
xor
inc
hlt
add
mov
inc
aam
add
adc
and
sbb
pop
loopne
inc
cmp
push
mov
inc
addb
push
mov
mov
mov
daa
loop
dec
sysenter
push
flds
subb
dec
xor
dec
mov
ret
aas
cmp
popa
sbb
sbb
push
cmc
jmp
out
cmp
push
movsb
add
pop
fbld
sub
pusha
and
in
dec
mov
mov
movl
sbb
movb
test
fmuls
sub
sub
inc
adc
nop
ss
dec
xor
or
lahf
sbb
sbb
aam
mov
jno
adc
loop
sbbb
mov
inc
jns
cld
je
mov
push
adc
dec
inc
aas
cmp
sbb
or
add
xchg
loop
repz
insb
ret
movsb
sub
adcb
out
and
loop
repnz
fcomps
jecxz
out
inc
mov
xor
pop
es
and
je
dec
pop
stos
testb
cmp
test
cmp
addr16
int3
cltd
nop
cmpsl
push
sub
adc
adc
cmpsl
dec
push
jnp
shrb
and
push
cmp
call
ljmp
add
daa
imul
dec
sub
push
popa
pop
xchg
loop
inc
pop
add
sub
xchg
add
adc
cltd
sub
lods
dec
push
mov
cmp
and
and
imul
and
pop
loop
ljmp
aad
adc
ljmp
jl
add
inc
pop
dec
and
sbb
test
pop
add
inc
adc
dec
pop
xor
mov
and
sbb
sbb
push
dec
add
mov
lea
sbb
mov
adc
vphaddbw
mov
sub
lahf
xor
push
loopne
gs
je
sub
sbb
jmp
and
cmp
adc
xor
int3
inc
or
ret
dec
lcall
mov
mov
push
arpl
push
sub
mov
testl
sub
mov
sbb
sub
sbb
or
sbb
in
xor
add
in
and
jg
xor
or
xchg
or
add
divb
loop
out
test
push
sbb
push
push
pusha
outsl
in
sub
outsb
push
loop
push
lea
sbb
pop
or
adc
stos
mov
pop
int
xor
imul
repnz
fdivs
push
nop
sub
cli
pop
rcrb
and
pop
sbb
pop
push
insl
bound
dec
mov
and
push
push
in
xor
aaa
inc
fmuls
shll
mov
inc
mov
mov
push
test
aad
sbb
pop
test
push
and
pop
push
dec
mov
jbe
sub
cltd
push
cmpb
add
cwtl
cmp
sbb
push
pop
ret
pop
push
lds
pop
and
lret
imul
adc
in
call
mov
notb
add
cwtl
add
pop
in
push
fistpl
xor
flds
xor
inc
and
mov
test
rolb
pop
addb
jmp
mov
pop
inc
or
dec
popa
nop
dec
xchg
imul
pop
mov
popa
cmp
xor
adc
mov
test
push
mov
test
mov
cwtl
push
or
in
dec
xor
pop
or
inc
rorl
adc
or
addl
cmpb
dec
imul
pop
or
sbb
pop
push
pop
ret
add
or
and
adc
pop
sbb
repnz
sarl
ja
inc
xor
lret
mov
and
mov
inc
sti
pusha
fwait
sub
jg
filds
or
in
push
imul
mov
or
mov
add
fsubrs
stos
mov
cmp
adc
xor
xchg
add
popa
in
xor
add
fistps
subb
gs
test
movsl
xchg
xor
push
cmpb
dec
scas
adc
xor
testb
dec
sbb
sbb
sbb
push
push
mov
add
jne
inc
enter
push
je
add
adc
pop
xchg
jno
ss
xrelease
lds
mov
inc
add
add
dec
jo
scas
or
lcall
es
inc
ss
xor
pusha
addb
loope
and
mov
adc
add
jne
dec
mov
xchg
std
jmp
sbb
ljmp
jg
test
in
imul
cmp
jl
mov
adc
adc
and
add
jmp
gs
jl
inc
xchg
out
xchg
enter
push
js
sub
ret
mov
mov
add
push
negb
xchg
clc
hlt
adc
lods
repz
jbe
test
adc
lcall
mov
lcall
xor
push
dec
aas
int
imul
lods
imul
mov
sub
cmp
mov
xor
dec
es
clc
orb
pusha
lcall
out
out
mov
jno
lods
cmp
sub
imul
mov
pop
enter
sbbb
imul
mov
sbb
inc
test
insl
or
movsb
push
je
cmp
in
adc
bound
in
roll
and
jle
fs
inc
movsb
lods
add
mov
pusha
push
cld
xor
or
adc
mov
in
add
sbb
add
fidivl
add
cmp
out
std
push
xor
gs
aaa
push
adc
or
jl
je
pop
push
lock
pop
mov
dec
add
pop
mov
loop
mov
fs
adc
js
adc
cmp
pop
xor
movsl
stc
add
push
and
add
adc
pushf
add
nop
lock
hlt
sub
add
call
mov
out
clc
ret
adc
jb
push
push
pop
and
or
push
add
xor
mov
scas
push
rcrb
negl
push
add
popa
add
in
mov
pushf
add
or
pop
or
and
iret
dec
repnz
inc
adc
and
add
dec
cmp
and
pop
push
insl
outsl
gs
add
mov
popf
shll
fidivl
les
adc
or
cmp
sar
xchg
fmull
inc
push
push
push
sbb
and
sbb
xor
mov
sbb
sahf
addb
pop
je
mov
xchg
cmpsb
das
js
sub
ja
dec
notl
adc
enter
imul
or
push
inc
jne
jbe
dec
add
adc
cmp
sbb
or
stos
shlb
stc
and
inc
mov
inc
add
or
inc
sbb
inc
add
cmp
movsb
pop
pusha
cmpsb
inc
jbe
add
push
cmp
in
imul
sbb
mov
push
clc
cmp
pushf
pop
adc
jp
divb
test
xchg
dec
add
ljmp
rol
or
adc
mov
or
inc
jp
sarb
or
inc
mov
fmuls
adc
mov
testb
push
mov
xorb
int3
jbe
les
or
fmull
adc
mov
insl
or
push
outsl
mov
int
inc
and
pop
idivl
ja
prefetch
dec
aaa
imul
mov
push
ljmp
inc
std
das
mov
ret
adc
lea
or
adc
loope
int
pop
test
sbb
pushf
pop
je
pop
push
push
jb
cwtl
ja
pop
push
push
shlb
inc
mov
add
mov
adc
pop
and
dec
outsb
lock
in
or
sbb
das
sahf
mov
call
je
outsb
jne
sbb
popa
js
dec
inc
sbb
repnz
add
push
cmp
lahf
push
or
add
ljmp
add
cmp
lret
pop
push
or
addr16
lahf
xchg
mov
outsl
adc
mov
shlb
inc
inc
jns
lock
gs
rorl
imul
insl
mov
add
xor
subb
pop
lods
and
js
mov
in
paddd
or
adc
imul
cmpl
sub
sbb
outsb
sbb
popa
dec
inc
jns
jo
mov
inc
cmpsl
pop
and
mov
sbb
aas
inc
add
nop
mov
fcompl
arpl
xlat
lock
imul
fldenv
or
insl
inc
int3
push
stc
push
shll
mov
test
xchg
jp
push
jne
jns
sub
dec
pop
push
push
test
into
pop
mov
cmpb
popl
adc
dec
jae
push
push
push
dec
pop
fisubs
js
btr
call
add
pop
add
gs
pop
leave
add
popa
arpl
std
pop
xchg
sub
imul
jnp
xor
mov
inc
jge
push
ret
out
div
je
adc
inc
add
stos
inc
xor
inc
loopne
enter
mov
jl
clc
cmp
scas
inc
divl
nop
call
inc
add
shr
test
mov
cmp
mov
xchg
mov
sub
int
lock
inc
psubw
clc
jmp
fcomp
xchg
outsl
mov
pop
adc
nop
fsubr
daa
dec
stos
fsubr
xorl
in
sahf
divb
xor
scas
cmp
xor
lcall
fs
jg
add
add
jmp
push
pop
sub
add
jmp
adc
adc
sbb
and
and
filds
sub
add
inc
inc
dec
adc
fcmovb
mov
mov
lock
add
push
rorb
dec
push
lock
xchg
sbb
mov
pop
or
sar
mov
mov
pushl
scas
ljmp
lods
ljmp
enter
imul
fmuls
flds
rorb
shrl
mov
fiaddl
pushf
sub
mov
mov
xchg
dec
fcoms
fdivrl
gs
pushf
sub
ds
sbb
inc
or
imul
pop
lock
icebp
push
repnz
fldt
int
inc
fldl
mov
fldt
in
movl
pop
cmp
push
dec
cwtl
pop
mov
out
xor
in
push
js
imul
jo
mov
repz
shlb
mov
xor
movups
test
repnz
mov
in
call
mov
sahf
pop
and
loopne
repz
add
inc
arpl
rorl
pop
xor
pop
lock
lock
push
loope
data16
inc
jg
movsb
sarb
sbb
in
pop
push
data16
add
or
inc
or
push
and
cwtl
mov
push
pop
adc
or
insb
outsl
mov
xchg
ljmp
lret
insb
mov
inc
mov
cld
repnz
or
popa
inc
insb
imul
sar
add
out
push
test
push
add
jbe
mov
add
add
shl
or
mov
xchg
fsubs
jo
sbb
les
xor
sub
call
dec
rorb
pop
inc
jo
lods
daa
sbb
or
and
and
mov
aam
push
jmp
movsb
sbb
dec
add
xchg
nopl
andb
add
sbb
jae
mov
sub
push
sub
push
push
sbb
icebp
fisubs
dec
sbb
mov
sbb
cmp
dec
pushf
insb
cmp
fstp
xchg
insb
mov
fsubrl
inc
sbb
jae
inc
fnstcw
ret
xor
push
xchg
in
push
aam
add
shrl
je
add
inc
aam
inc
pop
inc
or
add
xchg
xor
mov
mov
dec
scas
andl
xchg
inc
or
pop
and
push
push
jae
lods
xor
push
mov
sub
add
and
test
jg
sub
add
jne
adc
pop
cmp
inc
and
mov
sub
push
pop
push
fistl
inc
mov
rclb
fs
dec
jne
or
dec
fbld
adc
add
sub
nop
dec
dec
jo
aam
cs
push
xor
cltd
pop
add
push
das
int3
dec
ret
pop
shrb
xchg
cmp
rcl
inc
add
vpmovmskb
push
push
sub
inc
dec
insl
inc
lock
shrb
mov
inc
cmp
cli
jns
or
jo
or
and
pop
cwtl
push
add
in
dec
sub
and
jbe
ja
fwait
divl
adc
dec
nop
les
sbb
inc
sar
bound
aad
insb
fs
dec
lcall
pusha
inc
and
jg
dec
inc
sbb
inc
jb
divb
xchg
fs
xchg
imul
pop
add
xchg
jae
data16
pop
lds
push
in
inc
int
sub
xor
lods
xor
xorb
xor
dec
movl
pop
pop
cmp
xchg
jo
fnsave
int
addb
sbb
out
push
sbb
jecxz
cltd
int3
fsubs
sbb
mov
in
cltd
inc
or
addb
gs
enter
sbb
inc
test
int3
jle
dec
filds
cmp
aam
inc
scas
or
push
sub
cmp
sarb
test
pop
push
cmp
adc
shlb
addb
mov
sarl
pop
xchg
pcmpeqd
push
ljmp
sbb
xchg
or
cmp
and
cmp
xchg
sarb
nop
lcall
adc
inc
cwtl
cwtl
adc
push
dec
pop
inc
nop
out
pop
insb
jl
dec
enter
push
mov
adc
sbb
pop
xor
xor
xor
add
das
cmovns
dec
adc
rolb
or
sbb
xor
or
inc
inc
sbb
xchg
fadds
test
stc
jns
ficomps
xchg
andb
dec
jae
sbb
shl
ja
mov
and
enter
cmp
dec
mov
inc
pusha
nop
adc
call
mov
dec
dec
jb
dec
lcall
lock
inc
rcrb
fmull
dec
int
push
pop
mov
jmp
mov
or
daa
or
mov
push
test
and
add
test
inc
inc
push
push
push
inc
add
fsubs
fmuls
addl
and
stos
rclb
loopne
pop
cwtl
inc
pusha
lods
mov
inc
rorb
push
add
push
jo
in
xchg
lcall
dec
fcomp
and
xchg
neg
fcoml
add
sarb
inc
fisttps
mov
cmp
push
inc
push
inc
cmovns
cmpsb
mov
adc
push
dec
adc
jno
addr16
push
push
cmc
or
mov
inc
sub
sbbb
clc
add
cmpsb
jae
pop
icebp
pop
jne
xchg
cmpsb
jbe
rcrb
imul
shl
test
xor
loopnew
and
add
pop
sahf
lcall
dec
lock
jmp
push
or
mov
test
lock
lea
aam
jge
aas
jb
cmp
imulb
cmc
mov
mov
jle
addl
or
adc
popl
int3
lcall
adc
data16
negb
push
repz
loopne
insl
or
out
pop
sub
test
movsb
inc
rorb
mov
or
or
push
push
shll
pop
lods
dec
push
or
mov
pusha
pop
adc
or
push
adc
pop
aam
icebp
adc
inc
iret
cmp
push
pop
sbb
hlt
fs
test
andb
adc
je
inc
xchg
inc
mov
inc
inc
sub
xchg
fs
popl
jns
in
in
inc
clc
or
inc
inc
push
push
push
popf
sub
xchg
ja
dec
push
mov
inc
xchg
push
mov
mov
mov
mov
popw
and
mov
mov
xor
loop
in
adc
imul
lahf
jne
cmpsl
sti
lods
fldt
je
and
sub
push
jp
add
and
addl
jecxz,pn
xor
push
das
adc
cwtl
popa
sub
sub
sub
aam
add
sbb
dec
int
mov
movsb
sbb
dec
dec
fcomps
cmp
clc
out
adcb
dec
pop
pushf
mov
jnp
test
sti
mov
push
hlt
mov
insl
enter
or
rclb
pop
and
inc
cld
inc
mov
aad
or
lret
nop
out
inc
fcoms
mov
inc
es
push
call
or
ficomps
jmp
pop
pushf
in
lcall
mov
sbb
add
inc
pop
or
adc
ja
sbb
mov
mov
je
mov
cwtl
fs
push
test
adc
leave
cmp
idivl
mov
push
ret
adc
test
xor
xchg
lahf
icebp
inc
fdiv
je
mov
jbe
sbb
push
loope
adc
pusha
dec
fs
in
mov
cmp
lds
inc
hlt
push
inc
jbe
ret
mov
mov
and
repz
mov
mov
into
and
mov
adc
sub
and
or
sub
pushf
cmp
sub
icebp
sbb
push
loopne
pop
andl
mov
mov
test
add
xor
int
or
or
call
adc
adc
sbb
cwtl
stos
and
sub
add
xchg
xor
push
xchg
xchg
gs
js
inc
adc
pop
inc
xchg
xchg
adc
add
add
and
push
outsl
sbb
jecxz
and
xchg
aam
and
jns
xchg
and
add
mov
divl
ret
pop
xor
je
pusha
mov
push
sbb
sub
shll
adc
pop
aaa
push
dec
push
mov
xchg
dec
jg
mov
push
das
mov
or
sarb
or
lods
and
test
inc
add
or
rol
cmp
aas
sub
pop
inc
add
inc
dec
push
pop
mov
pop
nop
scas
nop
pop
jb
sub
push
int3
xor
pop
mov
test
mov
mov
fwait
das
shll
adc
add
xchg
ja
push
add
popf
fiadds
or
mov
add
lods
push
das
icebp
les
or
sar
subb
inc
sub
mov
or
and
mov
icebp
faddl
inc
add
mov
insb
shlb
xor
push
hlt
ss
subl
and
add
mov
xor
dec
push
or
jecxz
push
xlat
and
pop
ret
pop
dec
mov
xchg
test
lea
xchg
daa
lret
add
cmp
inc
fistl
push
cmp
test
jmp
sub
nop
xchg
add
mov
add
adc
lock
sbb
pop
dec
aam
sbb
rcll
cmp
sbb
pop
nop
push
pop
lahf
inc
add
pusha
add
test
adc
mov
mov
xor
outsl
fmuls
xchg
movsl
sbb
test
pop
es
rcll
pusha
adc
mov
xor
ja
xor
fs
sbb
xor
jb
incl
pop
hlt
neg
jmp
arpl
fs
rclb
sub
cli
mov
push
push
adc
mov
pop
sbb
inc
repnz
push
mov
int3
aam
push
cmp
stos
insl
push
fcompl
jmp
addr16
mov
cltd
cwtl
mov
and
imul
leave
pushf
sub
inc
sub
push
mov
mov
sbbl
je
sub
add
imul
jbe
es
push
shr
xor
xor
xchg
xor
inc
or
xlat
popa
dec
jmp
push
js
lret
lods
imul
mov
jno
orl
pop
adc
and
inc
call
pop
mov
inc
into
incb
mov
inc
or
add
cmp
xor
dec
or
fld
les
and
xor
fwait
lods
pusha
loop
mov
sub
mov
mov
hlt
imul
mov
and
add
pop
das
push
or
jmp
jb
jmp
xor
aaa
and
add
adc
push
xchg
push
pop
jmp
mov
sahf
movhlps
dec
mov
sbb
jge
jmp
sub
and
je
mov
mov
pushf
fwait
lds
pop
fnstenv
out
pushf
sbb
data16
daa
xchg
mov
arpl
inc
cmpsl
xchg
cmp
jbe
rolb
dec
inc
xor
xchg
mov
cmpl
dec
loopne
pop
add
jmp
test
sahf
push
push
and
sbb
mov
sub
shll
pop
loop
mov
push
and
jbe
push
mov
sbb
add
xor
cmp
or
movb
adcb
dec
xchg
xor
sbb
jle
je
mov
xchg
add
dec
inc
nopl
sub
sub
incb
pushf
push
and
push
xor
call
and
cmp
dec
rorb
rclb
lahf
in
insb
cmp
pop
xchg
das
pshufw
adc
cld
sub
enter
sbb
mov
adc
lds
add
fs
in
push
cmpl
jo
pop
or
cmp
add
push
sub
xchg
imul
aas
inc
push
nop
xor
aas
xor
pminub
push
or
fists
mov
mov
add
cmp
leave
jge
outsb
loope
lea
nop
xrelease
arpl
add
cmp
ficoms
xchg
lds
mov
addb
adc
jmp
std
xor
test
sbb
es
push
mov
mov
pop
cmpl
sub
xor
mov
in
cltd
nop
cmp
cltd
xor
sub
pusha
inc
sbb
xlat
mov
fildl
adc
mov
sub
repz
stos
icebp
mov
stos
scas
mov
mov
xchg
push
out
add
js
inc
cwtl
xchg
jae
or
inc
inc
loop
jmp
or
adc
or
cmpsb
mov
ljmp
out
ds
sbb
pop
stc
notb
cmc
pop
inc
jns
test
pop
adc
out
sti
lea
cmp
int
dec
mov
sbb
xchg
add
popa
add
cmp
mov
add
xor
xchg
add
xchg
movsb
push
rcl
cs
inc
sbb
dec
popf
les
add
xor
ret
ss
inc
push
sub
movb
stc
and
mov
filds
mov
es
adc
arpl
pop
push
add
movsb
inc
add
pop
and
mov
mov
dec
testl
add
mov
dec
push
mov
lret
jae
lods
arpl
add
lock
mov
push
mov
sub
ss
xor
lea
data16
pop
test
popf
cwtl
jns
inc
sbbl
cmp
movb
lock
lods
jb
popa
ss
daa
xor
xchg
fcmovbe
add
push
in
push
test
cmp
or
dec
rep
mov
push
push
adc
dec
adcl
popa
jns
mov
sub
jecxz
xchg
pop
je
mov
sbb
push
insl
and
inc
or
lods
addb
sub
test
sbb
test
pop
fadds
loope
push
inc
pop
movsb
pop
xorb
sbbb
loope
mov
fimull
mov
imul
push
fcmovne
and
pop
dec
outsl
or
pusha
adc
or
dec
inc
sbb
or
cwtl
xchg
add
out
sub
stc
adc
fstl
in
adc
loopne
cld
movsl
test
outsb
mov
daa
movsl
jmp
sbb
sub
sbb
inc
inc
add
or
sbb
aad
xchg
mov
iret
mov
adc
xor
lea
push
mov
push
sbb
pop
adc
orb
mov
addl
outsl
or
lds
sbb
out
mov
pop
imul
mov
pop
jnp
and
mov
mov
daa
pop
jb
inc
fmull
push
push
sbb
pusha
test
dec
push
dec
inc
or
mov
pop
adc
jns
enter
jge
adc
ss
adc
sahf
lods
xchg
jle
or
jnp
mov
adc
loopne
push
shl
adc
vpmulhuw
and
or
add
dec
dec
pushf
in
inc
xchg
xchg
jle
jp
fisttpl
fs
cmpsb
inc
mov
mov
pushf
hlt
aad
xor
je
mov
push
outsb
add
sbb
aad
and
cmp
mov
xlat
push
or
jb
fistl
stos
nop
cmpsb
cmp
or
sub
mov
ret
aad
jb
ds
in
xchg
mov
data16
ret
inc
or
cmp
add
ret
popf
mov
xchg
dec
push
adc
or
or
rcll
or
inc
mov
sbb
neg
sub
fadds
shlb
je
add
inc
and
push
or
mov
pusha
flds
add
pop
pop
test
test
push
movl
gs
pop
pusha
test
xor
je
mov
das
push
add
adc
popl
mov
rcrl
repnz
mov
in
test
xorb
test
int3
xchg
push
xor
clc
sbb
jl
sbb
test
and
jb
and
hlt
movsb
fwait
in
gs
test
sarb
push
jbe
jecxz
pop
shrb
add
sbb
in
xchg
in
push
lds
fwait
test
add
hlt
mov
jbe
dec
aam
add
sbb
ss
inc
repz
or
insl
in
xchg
bound
xor
mov
icebp
testb
and
mov
jg
sub
fistpll
add
push
mov
or
and
js
test
sub
mov
push
mov
xor
psllq
cmp
mov
ficomps
orl
loop
sbb
mov
dec
add
cmp
pusha
jo
mov
xor
sub
or
xor
xor
inc
fldenv
das
idiv
sbbl
jno
xor
mov
cltd
loope
sub
cmp
mov
jmp
sbb
mov
lods
adc
pop
pop
add
movsl
in
sub
and
lods
test
adc
mov
fistps
fistl
scas
or
ret
push
mov
jecxz
add
test
sarl
mov
insb
lods
and
cmp
xchg
xchg
xlat
loope
movsl
lcall
dec
pop
inc
lods
add
sub
mov
add
cli
pop
xchg
imul
lods
and
leave
jg
push
cmp
lcall
lods
push
and
pop
dec
add
popf
and
mov
adc
popa
fwait
or
hlt
add
iret
cmpsb
sbb
xchg
and
neg
and
mov
cmpsl
popa
jb
pop
jb
pop
bound
dec
push
inc
stc
rcrb
fucomp
mov
pop
sbb
or
and
insl
dec
adc
pop
ja
inc
jecxz
negl
push
sub
mov
xor
jnp
mov
add
test
sbb
jle
jne
dec
fs
mov
stc
add
mov
xchg
sbb
pop
dec
and
xchg
mov
sahf
xchg
pop
xor
lret
test
faddl
push
iret
xchg
adc
dec
xchg
pop
xor
xor
mov
jno
in
scas
mov
adc
sbb
push
mov
test
call
es
stos
lcall
jo
dec
lret
hlt
mov
adc
xchg
sub
mov
push
pop
xchg
js
cmp
stc
rol
mov
fsubrs
dec
sub
inc
in
pop
pop
mov
das
repnz
xor
push
add
cmp
jo
adc
or
or
add
and
fistpl
push
mov
insb
aam
ds
insb
and
push
and
mov
je
rclb
and
nop
sbb
mov
push
mov
imul
and
mov
repnz
into
cmp
sbb
mov
sub
xor
div
mov
mov
push
push
add
add
mov
cmp
ret
jne
mov
adc
and
arpl
lods
xchg
xchg
add
pop
movlps
shrl
popa
arpl
push
scas
xor
repz
add
in
cmp
xchg
add
in
inc
xor
hlt
addr16
or
xchg
cmpsb
adc
fildll
sub
xor
pop
in
shr
or
add
nop
cmpsb
int3
cmp
loope
es
scas
mov
and
push
imul
sub
fdivs
rorb
lods
ret
adc
ret
aas
cmpb
lds
sbb
xor
out
aam
or
mov
sahf
pop
pop
adc
lock
mov
hlt
sbb
adc
xor
add
xchg
mov
adc
out
test
push
pop
mov
push
add
push
xchg
add
or
xchg
push
into
mov
mov
mov
xchg
xchg
addl
pusha
inc
xlat
frstor
gs
sarl
cmpl
inc
fwait
lock
movsb
sbbb
xchg
mov
adc
add
push
mov
mov
test
rcrl
rcrb
mov
pop
dec
cli
push
clc
or
dec
xor
icebp
jl
jns
outsb
push
addb
add
dec
psrlw
cmpb
add
xchg
add
loop
adc
xchg
in
sub
adc
xchg
dec
test
sub
js
aaa
addl
arpl
jmp
mov
add
test
sarb
outsb
adc
inc
add
imul
test
jbe
fadds
mov
sbb
xchg
pop
or
push
sbb
mov
pop
insb
enter
mov
or
xchg
adc
mov
orb
jmp
andb
pop
push
fs
add
mov
jns
push
push
nop
xchg
imul
or
push
inc
pop
fmuls
test
mov
inc
lods
inc
mov
and
les
xchg
insl
rcrl
pop
xchg
sub
vmread
add
adc
enter
or
test
das
adcl
and
and
pop
add
dec
cli
and
cli
inc
jg
insl
out
and
add
sub
dec
or
cld
and
ljmp
push
loop
je
daa
cmpb
popa
xlat
movsb
fistpll
pop
jne
sbb
fbstp
push
test
jne
mov
subb
daa
or
add
sbb
popa
mov
cmp
mov
lods
pop
cmpsb
pop
xchg
push
lods
repnz
adc
mov
mov
push
in
inc
or
pop
mov
nop
mov
lods
jae
and
push
cmp
adc
adc
lea
test
bound
sub
dec
sbb
inc
bound
add
xor
imul
insl
jbe
add
inc
repz
adc
xchg
adc
mov
mov
dec
jnp
cmp
or
dec
lea
mov
pop
add
in
xor
imul
jb
cmp
hlt
in
xchg
add
cmp
sbb
push
mov
jmp
clc
push
insl
xchg
imul
ds
nop
add
jne
out
arpl
mov
lock
xchg
mov
sub
sub
lock
push
lock
dec
or
aad
and
pop
mov
pop
test
ja
inc
or
adc
ljmp
inc
xor
jl
and
or
mov
or
pop
pop
fists
nop
das
pop
test
mov
pop
adc
adc
rcl
sbb
push
mov
add
inc
add
pop
mov
jno
sub
jecxz
pop
add
enter
or
or
jl
dec
jb
mov
ret
js
cs
iret
in
xchg
xor
inc
shll
lods
and
xchg
adc
clc
xchg
push
addr16
jge
subl
jnp
mov
inc
xor
sbb
lock
popf
ds
sbb
in
dec
movsb
insb
mov
push
add
dec
subl
mov
leave
dec
addl
sbb
loope
jg
lea
imul
icebp
inc
push
sub
nop
dec
lahf
dec
add
cmpb
inc
xchg
mov
adc
nopl
out
inc
or
neg
xchg
movsb
testl
in
add
enter
cld
nop
lret
fmuls
adc
adc
sbb
in
das
xorb
fsubs
add
scas
add
jge
leave
and
jle
sub
push
adc
std
ret
stc
push
push
push
testb
sbb
xor
push
popa
sahf
adc
insb
inc
push
adc
scas
xor
cmp
or
pop
xchg
mov
pushl
insb
xchg
out
fistpll
push
in
les
add
adc
mov
add
mov
xorl
aaa
adc
lods
rol
jne
mov
push
add
adc
add
jno
das
mov
mov
cmp
clc
push
jnp
jns
xchg
or
pop
push
dec
push
xor
rolb
inc
nop
addr16
adc
or
dec
xorb
cmp
jo
sub
xchg
fstps
mov
loop
aam
inc
jno
sbb
pop
or
cwtl
lcall
mov
or
jne
nop
cmp
je
and
icebp
xchg
sub
pop
mov
xor
iret
ret
inc
and
add
mov
jmp
sbb
jns
sub
movb
sbb
and
movsb
cmpsl
movsl
daa
add
and
jo
mov
sub
mov
sbb
ja
aaa
mov
jecxz
cmp
add
mov
cltd
ret
movl
cmp
xchg
mov
cmp
and
arpl
add
lods
sub
adc
insb
ror
adc
cmpsb
lods
xchg
ficompl
rcrl
sbb
addr16
je
xor
mov
add
ret
inc
fsubl
xchg
or
mov
daa
pop
imul
test
sub
inc
mov
fldt
xor
les
clc
mov
mov
sub
mov
test
adc
adcb
sarb
mov
fs
es
mov
mov
arpl
scas
push
jno
cwtl
je
or
pop
inc
mov
or
setg
int3
sub
cmpsl
das
add
dec
cmc
pushaw
adc
icebp
xchg
mov
mov
arpl
filds
movsl
add
add
and
aaa
adc
jne
mov
sbb
fdivrl
stc
mov
iret
cmpb
adcl
sub
sub
and
push
jne
pop
mov
jg
movsb
xchg
shrb
test
lds
adc
sbb
mov
pop
dec
push
mov
in
xor
xor
test
jne
bound
cmp
mov
outsl
mov
fs
cmpsb
dec
push
mov
push
jo
sbb
lcall
loop
popf
cmp
fadds
fdivs
dec
push
and
xor
pop
xor
jne
jmp
cs
mov
or
inc
adc
and
sbb
push
sub
cmpsb
push
push
ss
iret
and
stos
mov
push
dec
je
lods
dec
repnz
add
testb
sbb
push
sbb
mov
fadds
into
cmp
imul
nop
pop
cs
push
sub
aad
data16
or
ret
pop
movb
addb
xchg
ret
movsb
sar
rclb
test
adc
sbb
pop
loope
mov
roll
mov
cmovo
push
ss
mov
je
push
mov
shrl
add
xorb
and
leave
lds
loope
jl
cmp
hlt
add
mov
inc
dec
jg
scas
mov
fidivrl
mov
add
cmp
aas
sub
aad
mov
jo
daa
jne
aad
in
test
sub
sbb
ret
xor
xchg
movsb
fildll
jl
rorl
mov
cli
sbb
movhps
popf
mull
xchg
xor
arpl
pop
inc
ret
movsb
aas
lret
inc
xchg
ds
shl
xor
mov
add
adc
dec
adc
cmpsl
mov
jle
orb
movsb
inc
ja
add
sbb
repnz
mov
push
push
cmp
cltd
xor
js
mov
cmp
mov
repnz
add
aad
xchg
cmp
jbe
dec
cmpsl
push
outsb
sbb
ficoms
or
test
mov
sub
xor
das
xor
imul
jmp
fwait
sub
vcvtsd2ss
rclb
cmp
xchg
sub
arpl
call
push
and
push
cmp
push
aad
addl
and
mov
inc
xor
add
mov
xchg
add
mov
addl
sub
jmp
add
nop
xchg
or
addl
inc
or
push
push
or
dec
adc
es
mov
mov
pop
aam
xchg
add
dec
addl
inc
adc
sub
cmp
movl
in
xchg
or
in
lea
lods
scas
test
mov
ficompl
data16
cld
mov
mov
mov
or
dec
pop
iret
ds
call
push
es
clc
mov
lahf
sub
lods
sbb
jge
pop
popa
nop
add
add
mov
and
clc
add
enter
int3
ret
pop
push
cmp
movsb
push
imul
xchg
mov
sbb
data16
fwait
sbb
mulb
iret
leave
repnz
cmp
adc
jmp
shlb
dec
add
cs
jge
mov
xor
add
in
xchg
inc
mov
push
inc
add
insb
fisubs
js
call
sub
add
ret
imul
xchg
jo
lock
lret
inc
or
test
nop
ja
push
push
pop
sub
add
mov
push
jmp
sub
ret
and
adc
adc
xorl
or
fisubrs
or
add
sbb
idivb
jecxz
mov
sub
pop
popa
pusha
movsb
pop
lock
lahf
xchg
sbb
or
sub
sbb
and
das
push
rolb
add
or
das
repz
aas
pop
fisubrs
mov
incl
xchg
mov
add
push
es
mov
xor
adc
iret
push
and
lods
ror
rclb
imul
pop
fs
push
test
and
mov
xchg
stos
pop
cld
in
and
je
imul
push
addl
and
add
sbb
pop
pop
subl
add
dec
dec
inc
dec
push
dec
fcoml
adc
addb
in
lea
xor
or
or
std
push
test
subl
xchg
pop
and
mov
dec
movsb
mov
push
inc
push
loopne
in
ficoms
adc
xchg
gs
adc
sbb
test
pop
xchg
add
and
push
imul
push
or
lret
montmul
cmpsb
orb
xor
push
cli
mov
adc
andl
aaa
dec
sub
push
shl
mov
push
jecxz
in
nop
inc
cs
call
test
or
and
shrl
cmc
inc
ret
inc
mov
push
pop
inc
cmpl
jne
inc
mov
out
adcl
rorl
mov
lcall
mov
xchg
sarl
mov
ret
lea
filds
insl
jl
and
jle
lea
test
jo
pop
mov
mov
call
cmpsl
test
rorb
inc
shl
add
or
daa
xlat
sbb
dec
ds
mov
popa
and
xor
out
scas
dec
cmp
shrb
cs
ret
shll
add
or
jmp
add
pop
insl
jne
cmp
cwtl
inc
ss
xorl
xor
mov
ret
dec
dec
aas
into
adc
into
pop
sbb
adc
xor
sub
dec
lret
and
and
sbb
adc
adc
lahf
loopne
notl
add
jne
or
sub
cltd
js
cmp
mov
adc
and
les
aaa
xor
dec
jmp
or
dec
add
jns
and
mov
mov
jmp
fucomi
xor
loopne
in
adc
sbb
or
lods
inc
aas
or
mov
ss
add
orl
mov
xchg
loope
or
jne
fs
lcall
push
xchg
or
xchg
push
testb
or
xchg
mov
scas
adc
in
sbb
bound
cmp
and
push
mov
mov
in
and
loopne
add
inc
outsl
nop
and
dec
push
dec
fimull
mov
cwtl
push
xchg
popa
mov
lock
inc
popa
sub
outsb
sbb
addl
sub
int
xor
aaa
cmpl
lea
mov
mov
cmp
mov
jae
add
arpl
cmc
sbb
dec
inc
xor
mov
add
jbe
dec
rcrl
popa
pop
inc
scas
sbb
mov
adc
push
insb
push
and
cwtl
std
imul
xchg
mov
cmpl
iret
je
cmp
je
ja
addr16
sbb
jecxz
dec
xor
xor
sbb
loop
gs
cmp
mov
mov
inc
hlt
xchg
sbb
push
loopne
adc
adc
pop
unpckhps
push
ficoms
or
pop
and
mov
and
add
daa
push
pop
xchg
test
nop
push
and
test
test
fs
xchg
dec
dec
mov
test
mov
sbb
mov
shll
or
or
dec
imul
sbb
or
push
sti
sub
popw
pop
cmpsb
xor
movsl
in
mov
lods
inc
dec
push
add
push
mov
xchg
fisttpl
ds
mov
ficoml
enter
inc
xor
inc
dec
dec
loope
imul
dec
xchg
xchg
inc
cwtl
lcall
mov
pop
mov
dec
jne
mov
das
fwait
arpl
cmp
jbe
jo
test
pop
shlb
push
mov
jne
xchg
xchg
mov
inc
push
jns
nop
xor
je
sub
adc
jmp
push
stc
push
les
jnp
negb
pop
movsb
loope
hlt
mov
in
decb
addr16
lock
adc
jmp
inc
push
add
pop
mov
andb
ret
xchg
xchg
fldl2e
movl
adc
or
lcall
xchg
sbb
and
and
dec
mov
add
test
and
push
add
mov
jne
lds
icebp
jge
jo
es
sub
push
or
add
push
movsb
sbb
add
fwait
mov
cmp
or
pop
outsl
mov
add
or
mov
cwtl
pusha
mov
adc
mov
ret
push
leave
push
imull
enter
add
push
sbbl
lds
mov
rcrb
dec
adc
pop
stos
mov
stc
and
and
adcl
je
pusha
sbb
add
sub
sbb
xor
jne
xor
sub
mov
mov
fmul
fcompl
xor
cwtl
jmp
data16
add
mov
roll
inc
add
push
jae
pop
mov
mov
pop
addl
addb
ds
fdivrl
loop
jecxz
jp
call
pushw
sub
pop
or
inc
add
inc
push
or
loope
lods
xlat
inc
fcoml
clc
xchg
push
and
add
sub
sbb
rcrb
adcb
cwtl
aad
fmull
push
pshufw
add
xlat
sbb
xchg
stos
movsb
pushf
scas
push
loopne
test
push
mov
mov
shlb
pop
xor
nop
fcom
sub
les
test
lds
hlt
xor
pop
mov
push
sbb
dec
sbbl
adc
cmp
mov
fnstcw
or
push
popf
mov
jl
or
pop
push
cmp
sub
inc
inc
add
cmpsb
fdivl
fwait
inc
xchg
adcl
aam
iret
mov
adc
mov
adc
sub
mov
cmpsl
jmp
add
inc
adc
scas
mov
pop
dec
jmp
daa
loop
stos
pop
iret
movb
mov
xor
adc
jmp
inc
ljmp
adc
ret
jno
inc
add
inc
popa
jg
mov
test
arpl
mov
inc
aaa
ret
and
and
mov
sbb
stos
dec
popf
mov
es
enter
mov
ret
xchg
inc
cmp
mov
sbb
jmp
sub
rcrb
pusha
adc
int3
add
sbb
loopne
sbb
or
cmp
enter
pop
aas
orps
lods
push
add
push
dec
jb
adc
add
sub
lret
jne
push
add
cmp
iret
mov
movb
mov
mov
sbb
xchg
push
xchg
hlt
add
mov
leave
pop
loope
xchg
cltd
sub
adc
jmp
mov
fnsave
test
out
adc
cmp
xor
pushf
sbb
sub
fs
jbe
idivl
aam
fsubrl
fcompl
aam
or
jmp
roll
xchg
mov
mov
sti
sub
and
adc
testb
out
jne
in
xor
sbb
adc
fs
mov
xadd
fcomps
sub
cld
jmp
cwtl
orl
or
fs
adc
sub
es
sub
dec
pop
clc
xchg
mov
lea
push
xchg
adc
pop
ficomps
adc
mov
sub
or
out
inc
push
or
push
pop
and
sbb
cs
out
or
mov
pop
pcmpeqw
add
sub
loop
inc
pop
adc
icebp
mov
and
mov
sbb
test
incl
inc
orb
inc
or
push
adc
orb
scas
inc
scas
insl
add
and
imul
or
inc
dec
cmp
sub
xchg
add
or
pusha
mov
or
gs
and
dec
dec
clc
dec
lret
pop
pop
jne
in
xchg
movsb
add
cltd
fsubrs
inc
mov
pop
or
sub
jl
imul
pop
dec
sbb
xor
lods
xlat
test
sub
setge
mov
out
movl
rorl
jnp
cli
daa
mov
sub
or
adc
arpl
ja
push
dec
inc
lods
cmp
cmp
jmp
clc
sub
xor
dec
cmp
jg
dec
mov
inc
or
add
cmc
call
xchg
mov
movsl
pop
xchg
add
leave
or
pusha
in
scas
int3
push
inc
push
sbb
imul
int
add
push
add
pop
jne
cmpsb
inc
inc
sub
pusha
popl
dec
sar
cltd
roll
aaa
sbb
jmp
in
mov
aam
int
jmp
addr16
xchg
cltd
jbe
xor
arpl
stos
sub
or
add
or
dec
adc
test
mov
cmpsl
shlb
cmpb
call
js
shlb
into
sti
jo
shlb
sub
pop
jne
sub
pop
ljmp
jo
dec
pop
dec
add
push
push
jo
dec
pop
push
inc
adcl
jb
dec
cmp
inc
popf
xchg
sbb
sbb
jge
in
pop
dec
adc
xor
ss
pop
das
nop
fwait
sbb
pop
daa
push
xor
cmp
bound
insl
int3
inc
aam
dec
mov
das
imul
mov
add
test
push
push
insb
jmp
fcomp
in
in
ss
ss
out
fldl
test
insb
lds
dec
lds
pop
mov
pop
loope
pop
push
jmp
and
in
imul
pop
fsubl
dec
sub
popa
mov
mov
mov
inc
sbb
cmp
xor
cld
call
mov
sbb
pop
std
pop
mov
mov
adc
js
add
les
mov
xchg
xchg
push
xor
fcoms
sub
cmpb
popf
inc
pop
pop
pop
push
pop
dec
inc
push
add
sbb
sub
push
push
cld
add
arpl
add
sbb
sub
stos
andl
jbe
push
cmp
into
or
shrl
xchg
jb
adc
js
jmp
nop
into
pop
loope
or
cmpsl
pop
adc
and
mov
jp
int
dec
add
push
cmp
daa
mov
adc
sbb
jne
jmp
mov
fdivl
lea
push
or
pop
or
jmp
fiadds
pusha
nop
arpl
sbb
leave
dec
sbb
and
es
add
add
fildll
and
pop
hlt
xlat
or
xchg
lods
jmp
popa
pusha
fwait
repz
adc
sub
loop
add
and
mov
pop
push
por
sub
mov
ss
lret
call
inc
ss
insb
ret
jle
sbb
lcall
inc
or
mov
xor
aaa
adc
mov
insb
push
push
popa
or
pop
xchg
aas
insl
in
inc
in
mov
jne
jmp
mov
xchg
loopne
inc
mov
sbb
xchg
lds
push
addb
sbb
arpl
mov
push
outsb
loopne
insb
inc
fldl
nop
xchg
loopne
mov
fwait
jmp
adc
fldenv
xchg
sub
cmp
push
push
mov
mov
inc
pop
or
dec
addr16
dec
js
xor
fwait
adcl
mov
callw
or
pop
gs
pop
push
rclb
dec
cmp
enter
sbb
fsubrl
imul
popf
add
adc
add
bswap
adc
push
sbb
cmpb
or
adc
dec
or
aam
cmp
rolb
sbb
or
mov
fdivs
jmp
out
jbe
jo
sbb
and
xchg
or
adc
xor
in
or
rcrb
lahf
sbbl
loop
jl
and
inc
mov
push
mov
pop
adc
or
sbb
imul
rorb
cltd
mov
mov
xchg
jecxz
negl
cmp
inc
pop
pop
mov
fcom
mov
pop
xchg
push
nop
push
loopne
outsl
mov
or
fs
adc
arpl
add
xchg
adc
movsl
and
lock
fs
insb
rolb
pop
push
mov
lea
dec
xor
and
dec
xchg
lock
in
data16
push
xlat
sub
sbb
shl
sub
sarb
adc
jp
imull
cmc
add
cwtl
xchg
das
jne
subb
mov
sbb
or
and
repz
aam
pop
ret
add
adc
mov
dec
loopne
and
adc
lods
ret
shrb
mov
adcl
out
cs
sub
xor
test
sbb
push
test
pop
lahf
insb
dec
sub
or
lock
dec
mov
push
in
loope
or
xor
lock
xchg
outsl
mov
xorb
popf
pop
push
cmp
and
add
or
in
icebp
addb
shlb
xchg
ret
mov
xchg
push
in
mov
pop
xchg
inc
jp
push
stos
and
daa
add
push
push
out
pop
or
mov
mov
xor
lahf
or
xor
inc
pop
daa
adc
sbb
sub
adc
int3
sbb
adc
mov
call
cwtl
add
sub
jne
add
and
nop
sbb
dec
cli
or
aaa
ffree
rcrb
add
push
inc
xchg
jmp
sahf
mov
add
iret
mov
mov
pop
sbb
jp
lret
push
or
add
imul
call
jns
loopne
cmp
jmp
in
call
add
loopne
ljmp
and
xor
nop
aam
or
paddsb
daa
loope
lea
loope
nop
in
mov
dec
inc
and
bound
cmp
sbb
fwait
mov
or
ret
dec
mov
popf
fwait
mov
push
pop
cmp
ret
adc
mov
add
sbb
sbb
enter
push
stos
imulb
or
outsb
es
cmp
jecxz
test
mov
insb
add
js
mov
addl
sub
push
sbb
xchg
sub
pop
or
xor
mov
push
xchg
addb
shll
ret
sbb
xchg
out
add
outsb
div
aam
xchg
mov
mov
ret
mov
jne
push
subb
and
es
mov
adc
rcl
or
and
into
mov
fisttpll
push
or
jg
jmp
mov
icebp
mov
or
pop
jne
pop
and
mov
pop
sub
cmpsb
inc
das
jge
je
xorl
push
inc
or
jno
pop
mov
clc
add
inc
push
aas
mov
add
cwtl
fbld
cltd
jp
adc
pop
and
add
pop
mov
dec
scas
jnp
cmp
or
popf
mov
or
push
les
sbb
outsb
mov
ljmp
ret
sub
mov
test
loop
sbb
sbb
jmp
sbb
es
xchg
sbb
nop
cld
inc
add
xor
add
cld
cld
cld
in
fimull
xchg
icebp
clc
je
add
xlat
jo
test
xchg
pop
jno
cmp
aas
ja
int3
sbb
xchg
sbb
add
lock
jmp
gs
adc
jmp
fisubrl
out
sub
addr16
jp
inc
fimull
sub
sub
xchg
mov
je
pop
inc
fs
sti
jmp
jg
pop
adc
push
inc
or
das
or
mov
add
jnp
clc
sbb
pop
in
int3
mov
pop
sub
popf
sbb
push
push
pop
push
mov
pop
jl
push
mov
inc
mov
inc
xor
or
xchg
mov
jle
xchg
lahf
int
mov
pop
jae
aaa
int3
mov
mov
and
or
add
js
fmuls
jns
mov
sbb
xor
sbb
jl
and
nop
sub
inc
pop
mov
cmp
outsb
and
out
sub
adc
sbb
jb
mov
push
dec
add
mov
dec
orb
dec
dec
xor
pusha
leave
dec
fistps
mov
pop
xor
or
push
push
sbb
movsl
int
xchg
dec
cmpb
aaa
movsl
leave
push
mov
push
sbb
xchg
push
sbb
fs
mov
jns
xchg
pop
jp
sub
adc
outsl
je
xor
imul
outsl
rcl
adc
dec
adc
pop
adc
inc
enter
sbb
xchg
and
add
and
xchg
iret
cli
pusha
push
sub
out
es
insb
mov
jl
and
jl
hlt
jle
daa
cmp
mov
lret
pop
jbe
inc
dec
out
test
pushl
out
nop
test
mov
xor
xor
and
or
jmp
clts
push
cmp
xchg
xor
mov
fisubs
int
fs
cmp
push
addl
fcompl
mov
push
pop
sbb
mov
pop
fimull
add
jle
dec
mov
pop
rclb
add
xor
or
sbb
pop
sub
cmp
adcb
mov
es
fs
mov
insb
and
xor
push
cmp
mov
adc
cmp
test
mov
cmp
inc
pop
mov
push
mov
push
sbb
mov
adc
dec
jb
pop
mov
add
sub
mov
scas
inc
into
movsb
scas
loopne
or
push
pop
jne
cmp
xor
and
in
std
adc
sbb
movsl
rol
cmp
and
pop
lock
push
out
jno
andl
incl
pop
lock
negb
mov
inc
sbb
and
addl
rorb
mov
xchg
dec
sbbb
xchg
ret
je
adc
pop
jge
inc
std
pop
ljmp
je
pop
das
js
sub
sbb
xor
inc
mov
je
inc
mov
test
fisttps
clc
sbb
das
cmpl
std
mov
xchg
out
mov
cmpb
push
cltd
clc
imul
jmp
or
cmp
or
push
fwait
cmc
or
pusha
adc
rol
imul
cmpsl
adc
movsb
mov
push
jno
jne
call
loopne
push
add
inc
jmp
inc
lock
cs
and
push
int
or
push
aam
lds
mov
jnp
and
orb
inc
dec
cwtl
dec
sub
movd
or
dec
in
das
push
and
mov
ss
mov
or
push
ret
lret
pop
and
out
pop
mov
and
pop
les
lods
jmp
icebp
les
int
movl
daa
ficoms
popf
xorb
ret
inc
mov
and
mov
mov
mov
out
dec
push
rcrb
mov
pop
adc
xor
pop
popf
cmp
rclb
or
icebp
or
imul
loop
xchg
inc
mov
pop
outsl
ds
mov
mov
push
testb
inc
add
xor
clc
add
leave
add
lcall
cld
inc
cmpsb
addr16
pushf
shr
adc
add
and
pop
bound
cmp
insb
addr16
mov
mov
sub
inc
inc
inc
inc
bound
mov
dec
jae
sbb
adc
das
sub
inc
negb
dec
jl
dec
mov
push
push
es
adc
add
jae
imul
sbb
xlat
aam
lock
push
pop
xchg
pop
and
popa
movsl
add
adc
jo
pop
sbb
loopne
roll
leave
push
lock
sbb
sbb
mov
aaa
je
jmp
sbb
xor
rcrl
jmp
sub
add
test
mov
dec
xor
and
sub
sub
push
mov
or
cmp
icebp
rolb
add
add
jecxz
push
sub
dec
push
jne
mov
or
cld
pop
cmp
inc
or
xor
lock
daa
pop
add
sbb
imul
lock
shlb
clc
hlt
dec
cwtl
les
shlb
hlt
rolb
enter
cmp
sub
lods
sbb
push
cmp
and
sbb
pusha
test
and
data16
aaa
adc
xor
inc
les
pop
inc
lcall
rclb
add
loope
dec
mov
xchg
mov
cmp
sbb
stos
imul
flds
cmp
mulb
es
adc
mov
aam
and
xlat
sub
and
rcrb
fisttps
lahf
mov
rcll
ss
test
sbb
cwtd
sbb
xchg
pop
lea
gs
sbb
stc
push
adc
adc
lock
lods
xor
ret
int3
xor
inc
addr16
clc
and
add
pop
inc
add
sbbb
lcall
inc
repnz
test
inc
mov
mov
xlat
inc
sbb
fcoml
jmp
cmp
sub
xchg
dec
mov
sub
adcb
lret
cmp
and
xor
out
xchg
xchg
add
es
xor
adc
aad
add
adc
push
or
push
inc
or
push
sbb
add
inc
pop
ljmp
test
mov
mov
adc
jb
int
sbb
nop
lds
popa
insb
xor
mov
sti
mov
sub
and
movsb
push
mov
nop
sbb
mov
xchg
or
adc
aas
pusha
lcall
push
mov
cmp
xorb
test
icebp
push
mov
push
mov
es
pushf
iret
out
pusha
dec
xor
adc
push
iret
fwait
loope
aas
movsl
bound
jne
jo
sbbb
jbe
dec
or
lsl
enter
and
cmp
adc
jnp
fwait
push
mov
or
xchg
lock
call
scas
or
cmp
leave
je
xchg
lcall
or
outsl
xorl
sub
dec
sbb
mov
movsl
sbb
sbb
fdivs
and
sub
adc
or
add
sub
pop
test
push
popa
pop
xchg
fwait
shlb
xlat
pushf
adc
dec
dec
es
sbb
out
into
pop
mov
hlt
test
add
sbb
sbb
push
mov
push
dec
pop
lea
jne
pop
outsb
in
xchg
mov
dec
pop
pop
into
xor
movb
and
and
test
or
data16
movl
or
inc
js
test
ret
xor
dec
or
loopne
dec
popf
add
mov
or
jl
sbb
sub
or
rcrb
inc
shll
sahf
push
sbb
sub
add
xchg
arpl
daa
mov
stc
mov
and
add
mov
push
add
mov
push
fnstcw
mov
sbb
cmp
movsb
lea
xchg
stc
pop
inc
mov
sti
std
cld
or
xchg
out
pop
enter
int
adc
lods
inc
rorb
mov
inc
dec
dec
dec
inc
dec
dec
xor
andb
cltd
lea
aam
pop
cmp
sbb
gs
or
frstor
jb
enter
mov
popa
aam
push
xchg
sbb
jnp,pn
test
push
push
lretw
sbb
pop
mov
push
push
push
cmp
loopne
fldl
xor
repz
mov
stc
cmp
je
rcll
ljmp
pop
adc
pop
or
or
in
nop
cwtl
addb
jecxz
dec
loope
and
aam
dec
sbb
mov
fadds
sub
sbb
pop
dec
imul
adc
xor
addl
test
mov
idivl
sbb
dec
push
fmuls
js
xchg
sbb
aam
cwtl
inc
aam
test
ret
mov
and
adc
orb
inc
or
add
lret
mov
push
pop
sbb
jl
adc
movsb
fwait
dec
or
push
and
fcmove
sub
add
jno
inc
sbb
repnz
pushf
push
cmpsb
and
mov
inc
add
sub
ja
add
test
inc
aam
xorl
inc
dec
cmpsl
add
cltd
inc
adc
test
cmp
xchg
sbb
dec
jle
push
insb
inc
js
es
cmp
pusha
popa
or
out
add
ja
into
call
dec
cmp
or
mov
cwtl
inc
pop
je
xor
lods
xor
js
sahf
inc
inc
jp
test
or
sti
adc
sbb
sbb
or
fs
sub
stos
cltd
loope
xchg
mov
xor
push
adc
mov
adc
inc
mov
mov
dec
sbb
les
ss
das
inc
pop
lock
dec
push
rclb
xor
pop
mov
or
sbb
push
stos
movsl
mov
daa
push
add
xor
rcrl
aad
add
pop
movsb
out
cmp
or
rclb
mov
adc
add
ret
add
mov
ljmp
mov
fadds
sub
push
xchg
shrb
pop
and
lea
sbb
aas
jne
test
adc
mov
xorb
test
pop
enter
xor
dec
daa
test
mov
sbb
movsl
pop
je
dec
paddq
out
jl
insl
pop
sbb
pop
mov
ja
addr16
add
push
dec
push
mov
inc
inc
sbb
xchg
jno
daa
enter
andl
popl
adc
lahf
add
orb
in
out
adc
jg
mov
inc
pusha
mov
dec
inc
cmpsl
sbb
mov
xor
push
pop
movsb
daa
push
nop
push
or
sub
int
cmp
inc
cmp
add
push
lea
mov
xor
shll
loopne
jnp
xor
add
mov
stos
inc
sbb
in
jg
add
adc
mov
repnz
pushf
into
or
das
sbb
sbb
sub
in
adc
adc
mov
mov
jg
pop
inc
fsubp
repz
sbb
inc
add
jns
out
mov
cmp
adc
add
jb
add
xchg
mov
push
imul
mov
arpl
jb
or
and
jns
add
cmp
stos
out
add
mov
repnz
pop
push
add
dec
icebp
add
jge
add
xor
shl
inc
nop
subps
adc
dec
bound
lods
sbb
mov
dec
sub
or
repz
aam
hlt
pop
xor
mov
and
das
xor
pusha
mov
add
pop
jg
movl
adc
sub
js
adc
lods
mov
sbb
test
sub
bound
inc
stos
and
int3
or
bound
pop
or
add
inc
test
cltd
xor
mov
adc
inc
bound
loopne
dec
push
lods
add
fldt
fs
jbe
mov
scas
mov
xor
or
jbe
int
fimull
xchg
icebp
mov
lods
and
jbe
sub
lsl
xlat
fcoms
cmp
bound
fidivs
xchg
add
add
push
pusha
ficomps
jbe
cmp
pusha
ret
mov
pop
iret
inc
xor
mov
mov
inc
sti
xor
jmp
lds
mov
or
pushf
pusha
mov
outsb
push
in
rcll
es
xchg
ret
xor
mov
shll
and
ja
imul
cmp
les
or
out
dec
cmp
xchg
fs
sti
and
mov
aas
movsb
sub
mov
shlb
ljmp
int3
insl
add
xchg
mov
stos
loopne
cmp
xor
insb
es
sbb
and
dec
or
xor
daa
aaa
or
sbbb
fcmovnb
cmp
push
jp
rorb
xor
cmpsb
xchg
imul
sbb
pop
xchg
cmpsl
adc
in
sub
inc
cmpl
xor
inc
pop
ss
mov
adc
jae
je
fildll
arpl
lcall
cmpsb
test
mov
xchg
es
cmp
push
and
fistpl
mov
rclb
test
in
jmp
push
add
adc
mov
je
jbe
insb
je
xor
inc
mov
movsl
adc
or
pop
sbb
fadd
or
scas
fmuls
popa
xchg
pop
mov
add
mov
mov
xor
inc
inc
xchg
dec
adc
jle
sub
inc
push
inc
pop
fidivl
adc
dec
xchg
push
aaa
dec
inc
inc
pop
push
loope
cld
jmp
xchg
and
mov
and
sbb
pop
pop
test
xchg
pop
enter
sub
add
rcll
icebp
or
push
fldenv
cwtl
add
rcll
and
add
dec
iret
adc
xchg
xorps
sbb
andb
xchg
or
dec
lods
jmp
sub
je
nop
test
out
pop
dec
push
adc
adc
ss
daa
mov
pop
dec
mov
pop
xor
lods
xor
stos
or
enter
lock
stos
xchg
pop
sbb
repnz
xchg
or
sub
dec
cwtl
in
sbb
xor
jmp
pushl
popa
sbb
pop
ss
pop
or
movsb
push
or
add
out
push
sub
xchg
add
in
sub
pop
inc
jecxz
mov
xor
adc
mov
adcb
pushf
or
cmpsb
daa
inc
loope
addb
sarb
js
push
test
inc
icebp
mov
mov
sbb
test
fists
jo
dec
loope
jmp
push
nop
mov
pop
xchg
jne
pusha
jmp
push
jecxz
xor
lahf
inc
loop
push
push
push
mov
fdivrs
cmp
les
js
mov
cmpsb
push
cli
fildll
test
fs
xchg
fcoml
and
add
subb
mov
fistpl
int3
mov
mov
popf
or
rol
out
adc
inc
and
add
arpl
push
loopne
test
push
adc
xchg
out
adc
xor
adc
mov
push
ljmp
pop
xchg
push
hlt
movb
and
mov
fs
shlb
or
inc
xor
dec
into
outsb
pop
xchg
push
cwtl
fdivr
in
cs
sbb
sub
inc
inc
mov
pop
or
and
jle
lahf
subl
mov
dec
mov
insl
lds
out
rolb
push
ja
dec
push
fs
add
add
inc
stc
push
popa
lods
loope
cmp
jne
adc
ret
jne
jge
and
mov
pop
cmp
cld
cs
push
mov
push
mull
sbb
dec
gs
mov
cmp
or
push
add
nop
cmc
adc
inc
loop
adc
push
sbb
jle
xchg
ret
jnp
adc
mov
gs
and
mov
rorb
leave
adc
mov
add
push
enter
pop
adc
in
mov
pusha
cmp
insb
pop
pop
jbe
jno
loope
push
cmpsl
or
push
add
ds
adc
mov
mov
sti
mov
push
aas
cmpsb
and
cmp
and
inc
jmp
dec
add
movsl
inc
jne
inc
fsubs
cmc
inc
mov
in
pop
movsb
rolb
pop
cmp
fucomi
adc
dec
jae
aas
adc
jno
push
sub
xor
lods
xor
rclb
pop
xor
in
mov
jnp
mov
call
pop
je
movl
lcall
mov
daa
mov
sbb
add
sub
sar
and
adc
ljmp
add
dec
adc
lcall
sub
lock
or
jmp
add
ret
cld
inc
and
sub
pop
mov
cld
imul
add
dec
dec
jno
and
mov
lods
and
lods
jns
fs
fwait
dec
hlt
in
sbb
mov
pop
fwait
in
cvtdq2ps
clc
clc
loope
xchg
daa
adc
loop
insl
cmp
gs
adc
or
or
nop
insb
cltd
push
call
cmp
lods
outsl
loop
ret
sbb
cmp
pop
mov
xchg
and
inc
cmp
cs
fcmovbe
lcall
cmp
lret
andb
sbb
jno
cmp
cmp
mov
or
cmpsl
icebp
sbb
xchg
cmp
mov
rclb
xchg
andb
sub
add
imul
xchg
push
mov
push
fldl
subl
mov
andl
add
cmc
cmp
lods
jo
xchg
es
pop
adc
sbb
jge
ss
pop
dec
daa
inc
dec
cmp
shrb
cmc
push
test
outsb
xor
pop
jg
dec
push
popa
or
mov
pop
cli
push
loop
pushf
movzwl
push
xchg
in
rcll
inc
lock
clc
xchg
mov
sbb
and
push
cmpsl
dec
fadd
inc
jecxz
out
je
inc
mov
sbb
cmp
adc
daa
adc
cmp
dec
aas
lods
rcl
and
and
sub
add
pop
adc
jae
mov
xorb
or
enter
pop
stos
je
sub
sub
sbb
out
movsb
frstor
adc
fsubl
xchg
or
fdivs
mov
hlt
pop
inc
ret
jmp
mov
xchg
subl
push
push
cmp
jne
insl
out
scas
adc
dec
xchg
sbb
dec
jns
dec
adc
mov
addr16
mov
mov
or
sub
loopne
pop
mov
mov
stc
outsb
shll
add
inc
dec
repnz
add
sahf
inc
xor
add
sti
pop
xchg
shrb
push
xlat
lcall
fldenv
xorb
loope
js
mov
outsb
xchg
add
repnz
btr
inc
insl
add
roll
sbb
test
rolb
xchg
adc
pop
sub
mov
cld
and
sub
gs
mul
orl
jbe
inc
push
ret
ret
aas
rcrl
push
push
mov
push
shrb
jae
into
sahf
mov
add
loopne
dec
loope
sbb
call
cmp
pop
imul
shlb
push
imul
xor
sbb
push
push
inc
and
xor
pushf
lcall
mov
sub
pop
pop
pop
adc
mov
mov
cmp
xlat
and
cmc
ds
push
andl
inc
fiadds
cmpsb
and
aad
addr16
pop
jmp
inc
mov
sbb
sbb
nop
dec
and
iret
sahf
ret
ffreep
sbbb
pushf
inc
add
add
aam
jbe
scas
out
mov
lahf
mov
dec
idivl
mov
loopne
push
xor
adc
add
into
mov
sub
dec
sub
xchg
inc
cmpsb
loopne
adc
and
or
xor
popa
inc
adc
mov
or
es
mov
or
pop
pusha
jne
xchg
xor
push
add
arpl
xlat
shrb
int3
fidivrs
addb
fiadds
inc
add
pop
imul
call
jp
mov
sub
push
add
roll
inc
dec
pop
xor
gs
adc
lock
add
les
jg
dec
ud2
ljmp
mov
mov
xorb
imul
sub
dec
shlb
and
xor
xlat
adc
cmp
and
add
jne
sub
inc
xchg
dec
test
and
repz
rorb
xchg
xorb
ss
fmuls
andb
and
lret
mov
cmc
add
sbb
bound
sbb
sbb
lods
aas
push
hlt
loopne
adc
pop
clc
inc
jne
or
pushf
and
arpl
mov
mov
shlb
mov
push
rclb
push
add
and
mov
pop
sar
clc
clc
das
jge
dec
movsb
mov
gs
pop
data16
push
sbb
pcmpgtb
shlb
cmpb
sbb
cmp
cltd
test
adc
sub
scas
inc
sbb
sbb
filds
inc
call
out
sbb
insb
fcomps
ret
inc
mov
loope
mov
movsb
das
xchg
mov
jecxz
sbb
sbb
dec
test
xorb
mov
cmp
lock
sahf
clc
sarb
jl
jmp
pop
jmp
repz
cmp
and
add
fsubs
sub
push
arpl
sub
adc
mov
das
push
call
adc
ret
jle
push
stc
test
bound
push
inc
and
cltd
je
and
movsb
cmp
fldenv
pop
mov
fmull
cmp
test
popa
cmpsb
add
pop
and
dec
or
fcomi
xorb
jmp
xor
into
add
push
notb
test
mov
test
lcall
add
int
shl
pop
sub
andb
sub
cmc
orb
in
in
dec
add
adc
jnp
push
nop
nop
push
cmp
push
fmul
aas
jmp
jo,pn
mov
test
or
sbb
sub
push
cmpb
adc
lea
outsb
push
fxch
int
test
repz
div
enter
lea
frstor
xor
and
ds
adc
mov
paddq
and
and
push
lea
xor
ret
adc
jecxz
jge
stos
jge
push
or
sbb
jecxz
push
stos
dec
adc
xchg
xor
nop
push
cwtl
addr16
xor
push
popa
sub
test
mov
xchg
sbb
pop
fdivrs
adc
jl
repz
push
insb
and
sbb
ret
dec
or
push
sub
jmp
insb
sbb
stc
fcoml
dec
mov
roll
loope
fdivrs
pop
adc
xchg
sbb
cwtl
scas
mov
sbb
mov
adc
rorb
jmp
rcrl
in
push
pop
lea
aam
add
mov
loopne
test
lods
pop
push
or
jmp
outsl
push
aam
or
adc
push
test
sbb
cmp
movsl
lods
inc
and
push
das
fiaddl
je
mov
shrl
lahf
add
sarb
mov
xor
sbb
push
cs
lret
inc
insb
mov
push
dec
loopne
incl
pop
dec
std
outsb
inc
cmp
je
test
aaa
adc
sbb
or
lret
sbb
adc
fmull
push
xchg
add
loope
jbe
mov
lea
adc
xchg
pop
sbb
nop
imul
lock
xor
and
insb
xor
test
sbb
es
push
rol
mov
add
je
loope
cld
mov
sub
ret
pop
jno
aaa
movb
add
in
stos
shll
pushf
or
or
xchg
aas
outsb
mov
inc
mov
xchg
sbb
push
lcall
inc
xchg
inc
adc
mov
inc
xchg
sarb
out
sub
and
xchg
mov
pop
rorb
add
push
ret
or
xor
bound
sbb
push
fs
aam
pop
jae
sete
inc
aam
outsl
in
push
fs
mov
inc
cmpsb
fsubr
push
sbb
out
push
repnz
and
mov
push
enter
fcoml
shrb
add
or
push
shll
insb
das
aam
pop
fsubrl
lcall
and
mov
mov
cmp
adc
imul
addb
mov
je
xor
inc
jb
sbb
imul
pop
dec
or
popa
jno
push
subb
lock
inc
movb
mov
out
cmp
call
or
jb
or
and
shlb
leave
pop
clc
add
add
push
add
leave
fwait
cmp
mov
inc
cmp
or
push
movsl
mov
mov
sbb
les
out
dec
pop
fcmovbe
es
pop
scas
test
xor
test
mov
mov
xchg
addr16
shll
adc
sub
adc
push
lock
ret
adc
ljmp
xchg
inc
adc
push
and
movsb
mov
inc
imul
scas
xchg
stc
add
fisubrs
push
push
ss
lret
popa
dec
or
in
adc
jmp
pop
jle
sub
movsb
sbb
in
lret
mov
pop
adc
cltd
dec
adc
sbb
adc
xorps
mov
mov
and
insb
jl
adcb
and
mov
mov
xor
leave
mov
inc
push
fwait
inc
mov
dec
jecxz
test
stos
push
jecxz
cs
mov
and
push
jle
xor
jo
cs
into
or
fistl
add
les
push
xchg
rolb
push
pop
lret
adc
lds
xchg
je
mov
loopne
xchg
mov
adc
or
ret
xchg
mov
mov
pop
mov
inc
push
das
call
aas
push
cmp
test
leave
clc
and
add
aam
mov
mov
mov
push
pop
sbb
ss
and
add
sar
int
mov
pop
sbb
adc
cmp
inc
and
push
cmp
outsl
cwtl
test
pop
cmove
push
add
sub
xchg
fsts
adc
push
jbe
stos
cli
add
push
roll
push
call
xorl
add
push
push
mov
aaa
in
dec
push
push
jo
hlt
adc
stc
cwtl
dec
popf
pop
ds
fs
xchg
rorb
lret
pop
xor
dec
mov
dec
push
jbe
dec
shlb
pusha
dec
cld
sbb
ja
add
or
out
arpl
clc
addl
ds
loop
push
push
push
inc
inc
mov
test
and
js
int3
and
andb
mov
icebp
sbb
inc
outsl
add
adc
es
andb
cmp
mov
lods
sub
add
push
subb
inc
nop
js
xor
jae
or
push
mov
push
pop
cs
jne
jo
sbb
repnz
inc
sub
popa
pop
subb
add
cmp
jae
mov
and
insb
jne
lret
adc
sbb
sbb
xor
push
push
xor
dec
xchg
in
call
add
sub
sbb
mov
in
pop
sub
cwtl
pusha
call
and
inc
mov
and
daa
dec
adc
push
dec
pop
lea
adc
dec
adcl
pusha
sbb
jle
loopne
movzbl
cmp
jle
lods
inc
in
aaa
inc
pushf
and
dec
dec
ret
pop
aam
imul
pop
test
in
fildl
or
mov
fsts
dec
imul
mov
lock
sub
shlb
fcoml
inc
or
add
dec
mov
inc
mov
push
lea
push
shl
and
test
cmpsl
add
mov
and
inc
add
shlb
xchg
or
call
enter
in
cmp
out
push
add
pop
jbe
out
sub
cli
or
and
fwait
inc
arpl
jne
iret
rclb
imul
fldt
adc
cltd
pop
mov
outsl
add
jnp
cs
loopne
fnsave
sbbb
loopne
loopne
xchg
lret
inc
inc
pop
adc
and
mov
push
add
or
xchg
faddp
xor
gs
loope
loop
hlt
movsl
fildl
jl
or
jg
insb
jecxz
mov
xchg
and
pop
jne
inc
dec
dec
bound
adc
jge
mov
pushw
test
add
out
rolb
lea
adc
and
jne
das
or
push
ret
movl
add
loope
incl
dec
inc
cmpsl
insb
mov
or
dec
add
dec
mov
push
je
xchg
mov
and
outsb
xchg
mov
lea
or
shlb
cmp
daa
fdivl
jns
jge
shlb
push
rolb
sbb
je
jo
adc
mov
pop
dec
out
jns
and
push
repnz
gs
aaa
inc
pop
ljmp
and
pop
fs
xchg
dec
cmp
mov
pop
xchg
add
popa
sub
pop
add
inc
xor
cmp
fbstp
pusha
add
loop
or
in
sbb
sti
lds
rorb
call
pop
cmp
xchg
idivb
sub
mov
inc
inc
push
iret
mov
jg
inc
add
inc
cmp
jne
or
xor
or
or
jmp
add
xchg
aas
les
pop
jmp
lods
adc
jae
push
js
mov
test
dec
mov
add
cmp
sti
jbe
out
mov
aad
cmp
sarl
jmp
pop
imul
sbb
xchg
ss
addr16
xor
push
mov
and
or
lea
dec
dec
dec
or
jle
pop
mov
lea
or
xor
sbb
xchg
push
push
mov
sub
push
adcb
movsb
stc
cmc
mov
clc
or
jb
xchg
mulb
adc
or
xchg
dec
xor
cld
jecxz
jecxz
fadd
stos
aas
in
adc
inc
sub
sub
xchg
fsubrs
jmp
or
or
cmp
jno
push
adc
les
and
sub
jg
xor
lock
mov
add
ficoms
sbb
enter
add
cli
ljmp
cmp
ja
pushl
ss
push
pop
neg
das
jge
pop
pop
or
or
pop
imul
jg
push
inc
je
and
imul
mov
lock
cld
shll
lock
jne
xchg
jne
sub
stc
push
push
push
out
std
jecxz
add
or
gs
hlt
push
mov
enter
push
push
fisttpll
sbb
lock
stc
jb
dec
sbb
push
fdivs
push
dec
bound
nop
cmp
mov
mov
bound
or
add
scas
sub
ud0
adc
fs
cmp
mov
dec
dec
roll
mov
aas
inc
pop
sbb
dec
pop
inc
jae
daa
outsl
xchg
sub
pop
fisttpll
push
jne
pop
int
insb
dec
mov
mov
lock
test
xchg
jl
adc
cmp
fmuls
fwait
lods
lcall
pop
cltd
adcb
push
dec
in
pop
ret
adc
jbe
adc
jecxz
fisttps
cmp
aas
fisubl
mov
fs
sbb
dec
adc
xor
clc
inc
mov
ret
loope
ja
fwait
dec
fisubrs
mov
dec
mov
in
mov
push
jmp
xor
dec
cmpb
mov
xlat
add
mov
test
pop
dec
jl
fdivrl
fs
push
mov
iret
dec
out
nop
mov
dec
fwait
sbb
push
out
bound
pop
mov
add
sbb
sbb
orb
outsl
clc
sbb
clc
lods
dec
ficoml
into
es
stos
rclb
push
or
dec
imul
mov
push
xchg
sub
inc
push
insl
rorl
nop
push
adc
fiaddl
rclb
inc
xor
xchg
mov
fs
sub
enter
cmc
sub
push
cli
scas
xor
loope
push
add
mov
sbb
mov
add
lahf
cwtl
sbb
push
lock
int3
push
add
adc
push
or
imul
push
or
xchg
shl
stos
and
insl
inc
sub
inc
mov
xor
cmpsb
pusha
test
das
jecxz
lods
pusha
nop
dec
fdivrl
xor
shll
sar
pop
rcr
loopne
pop
movsl
lret
push
push
rclb
mov
add
pop
addl
addb
cwtl
mov
mov
ss
mov
sub
add
sub
pusha
dec
inc
inc
in
xor
sbb
push
ret
mov
aas
push
cmpb
rorb
dec
shll
icebp
int
pop
or
adc
sti
push
add
xor
lock
stc
dec
pop
jns
inc
xchg
sub
fsubrs
jns
dec
aam
dec
dec
aas
in
cmpl
shld
mov
cmp
dec
mov
fildll
push
sub
test
lods
mov
sub
inc
inc
push
inc
push
mov
insb
mov
sub
dec
push
mov
jl
popf
add
pop
inc
xchg
mulb
mov
xor
addb
cmpsl
dec
mov
dec
ret
sub
mov
mov
push
and
push
cmp
fistpll
and
ljmp
dec
inc
js
je
insb
and
mov
and
clc
repz
push
jge
mov
lods
and
sbb
add
inc
mov
sbbl
adc
push
dec
mov
add
sbb
jb
mov
clc
sbb
cmp
repnz
pop
mov
repz
fadd
cmp
popf
aas
or
and
sub
dec
icebp
es
ja
xlat
push
xchg
xor
pop
push
mov
and
std
movsb
nop
inc
test
sub
mov
stos
push
inc
push
and
mov
add
push
dec
dec
inc
hlt
add
cs
pop
adc
jp
sbb
jns
jge
dec
jno
push
add
dec
ret
aas
insb
add
in
push
inc
pop
push
inc
shlb
adc
mov
enter
wrmsr
ret
les
inc
sbb
and
jbe
push
inc
orb
call
test
cs
mov
inc
and
or
fcoml
enter
push
inc
adc
add
loopne,pt
jno
pop
mov
or
inc
mov
les
pop
sbb
ds
movsb
push
aad
mov
push
bound
mov
jne
mov
je
fldcw
fdivrl
test
push
mov
fmul
ds
pop
sbb
sbb
pop
xor
and
ja
scas
sbbl
and
jb
sub
xor
shlb
loop
cld
push
orb
movsb
roll
mov
xchg
pop
jl
sti
sbb
sbb
insl
call
insl
and
xchg
mov
adc
adc
pusha
sub
leave
cwtl
popa
fucompp
inc
outsl
xor
mov
fcompl
fwait
dec
jmp
idivb
jb
and
dec
dec
dec
jg
bound
or
mov
mov
sbb
aam
imul
and
add
adc
movsl
aaa
scas
cmp
add
mov
inc
je
fildl
sbb
mov
add
mov
mov
cmp
sbb
xchg
sbb
sub
sbb
xchg
xor
cmp
leave
cmp
sbb
xor
push
in
inc
add
jmp
or
leave
push
inc
repz
adc
inc
and
rcl
sbb
and
fldcw
int
enter
xchg
arpl
aam
movl
cmp
fsubrl
repnz
loopne
shrb
jge
fwait
mov
cmp
das
imul
nop
add
pop
sbb
pusha
sbb
xchg
xchg
daa
in
add
movsb
mov
or
push
psrlw
out
push
addl
nop
loope
inc
inc
cmp
add
push
fs
bound
push
add
pop
repz
scas
rclb
inc
add
loopne
jl
pop
fists
mov
mov
xor
ret
push
enter
addr16
mov
out
popa
push
add
jle
xchg
lock
pop
push
cmp
and
imul
pop
inc
aad
pushf
scas
cmpsl
push
aad
pop
dec
sub
push
dec
mov
enter
fbld
push
adc
push
dec
in
adc
jo
or
sub
fwait
je
and
xchg
pop
mov
sbb
rcrl
inc
fcmovnu
inc
fucomi
push
popa
or
adc
pushf
xchg
pop
stc
inc
xchg
mov
stc
inc
es
nop
popf
movsb
xchg
sbb
movsb
and
dec
sub
add
or
lret
xchg
pop
sbb
enter
sub
lock
jns,pt
sub
test
leave
dec
xor
nop
cmp
fldcw
call
test
add
push
mov
push
xor
mov
and
enter
mov
xor
mov
lock
sbb
mov
mov
aam
cli
leave
mov
call
cmpsb
flds
pop
add
inc
pop
jg
push
xchg
loop
xor
jne
sub
lock
inc
jno
gs
cmpsl
jmp
pop
or
xlat
inc
pop
inc
fsub
adc
dec
and
out
xor
push
push
and
shll
push
add
pop
psrlq
and
xchg
add
add
daa
or
popa
loopne
lahf
pop
in
inc
push
mov
loop
push
adc
and
rorb
inc
in
or
inc
add
sub
xor
inc
push
adc
roll
sbb
adc
inc
and
inc
pop
push
call
clc
je
push
push
test
inc
fcoms
add
sbb
pusha
in
push
lock
outsb
mov
fiadds
pop
pop
arpl
inc
pop
mov
out
or
dec
add
xchg
dec
or
pop
adc
js
js
add
push
lock
shll
sbb
aaa
dec
xor
sbb
or
gs
pop
cmpsl
imul
inc
negb
push
lods
inc
adc
insl
mov
mov
aas
lods
shlb
sub
add
and
sbb
dec
add
pop
inc
iret
inc
in
dec
dec
orps
and
mov
push
pop
pop
pop
popf
push
cmp
push
fldl
mov
add
mov
sub
sarb
adc
aas
and
or
pop
push
lods
movsb
add
test
push
sub
dec
enter
outsl
push
pop
xor
push
or
stc
mov
pop
inc
jae
mov
xchg
mov
add
sub
lea
pop
inc
cmp
repnz
in
jno
pusha
mov
mov
jns
dec
pop
mov
xchg
sbb
add
xchg
in
pop
das
outsl
insb
gs
outsl
cwtl
enter
add
mov
pop
push
das
test
imul
xor
ss
outsl
popa
xor
movsb
or
xchg
andb
push
in
or
aas
push
xchg
enter
inc
test
mov
push
jmp
dec
out
sub
and
adc
fiaddl
and
pushf
aaa
cmp
lcall
in
popaw
out
pop
mov
xchg
scas
cmp
cld
cs
add
dec
inc
adc
cmp
jl
inc
xor
jmp
add
push
clc
or
mov
lcall
enter
enter
testl
add
cli
out
bound
and
cmp
pop
dec
bound
cmpsb
pop
sahf
add
clc
pop
inc
adc
enter
fs
mov
fcmovbe
sbb
sub
jge
xchg
xchg
imul
imul
dec
setl
or
insl
xor
arpl
bound
add
add
sbb
push
adc
or
or
jle
nop
subl
cmp
jl
sbb
push
mov
push
daa
loopne
in
inc
push
in
mov
sbb
inc
push
in
sbb
inc
nop
mov
lods
nop
mov
cmp
nop
add
cwtl
sar
sbbl
dec
and
jb
or
sbb
and
jb
cmp
add
push
xor
fadds
inc
sbbb
lods
shl
push
in
push
pusha
test
in
push
test
int3
dec
xor
shll
sbb
xchg
movsb
movsb
sbbl
or
enter
and
fmull
mov
sbb
mov
cmp
pushf
sbb
nop
add
or
xor
cmp
fs
pushf
imul
jl
mov
imul
sub
stos
sbb
arpl
add
push
cmc
add
lcall
mov
cmpsb
mov
outsl
jl
pop
shll
stos
mov
imul
imul
mov
xor
dec
gs
lret
cmpsb
imul
and
xor
shrl
inc
shll
or
add
sub
sbb
xchg
dec
cs
sbb
ljmp
mov
dec
enter
add
addr16
nop
dec
push
sbb
shrb
dec
bound
or
add
lods
and
xchg
adc
add
addr16
push
test
insb
adc
push
push
addr16
jne
sub
movsb
jg
pop
leave
jbe
add
inc
mov
pop
repnz
insb
inc
in
addb
inc
jo
jl
and
inc
dec
enter
pop
lahf
adc
and
mov
rclb
mov
pop
test
xor
das
add
xor
or
jno
popa
lcall
adc
push
xchg
out
mov
dec
sub
xor
xchg
rclb
ret
popa
pop
or
dec
pop
or
dec
sub
aaa
push
cld
pop
in
insb
xchg
mov
push
pusha
or
push
fs
mov
pop
and
inc
sub
jns
mov
movsb
push
mov
push
sub
shlb
sbbl
inc
mov
sbb
push
imul
in
movsl
mov
pusha
imul
imul
fdivr
in
pop
ret
nop
imul
ss
mov
xchg
sbb
xor
add
dec
push
xchg
outsb
nop
mov
push
filds
mov
dec
push
push
sbb
sub
sub
ss
mov
ror
push
imul
adc
or
or
dec
pop
xor
sti
jecxz
bound
addb
cmp
lds
daa
test
and
adc
into
push
push
adc
mov
jne
mov
imul
jg
dec
cmp
sbb
sbbl
nop
xor
cwtl
fs
int
jno
mov
mov
push
incl
adc
sbb
insl
cmp
ret
push
adc
sub
lods
fwait
repz
and
xchg
sub
imul
lret
mov
mov
leave
and
cmp
cmp
and
mov
rcrb
in
xchg
cld
and
push
xor
das
sub
mov
pusha
cmc
arpl
xchg
lret
mov
test
pushf
outsb
daa
fstpl
sbb
mov
testb
pop
pop
jae
sub
rcrb
or
sub
mov
outsb
adc
ss
inc
adc
cmp
call
leave
mov
fstpt
pop
and
adc
push
movsb
outsb
pop
pusha
jp
test
call
adc
pop
add
add
pop
daa
push
add
mov
and
or
fsts
xor
inc
xchg
dec
add
test
jae
cmpl
insb
xchg
xchg
cmp
or
and
shlb
das
pop
fcoml
sub
arpl
cmp
in
mov
dec
xchg
adc
pop
roll
enter
push
mov
inc
into
arpl
and
es
push
or
push
sbb
lea
inc
shll
into
and
adc
cmp
push
adc
test
inc
loop
mov
and
jl
xor
jge
cwtl
adc
push
inc
lea
pushf
sbb
jmp
rclb
push
jb
sub
adc
mov
sbb
push
add
mov
cmp
dec
scas
nop
dec
test
pop
mov
xchg
mov
in
pop
or
push
andl
push
ja
dec
sbb
push
cmp
sbb
mov
pop
add
lea
lea
lock
pop
jae
movsl
das
out
nop
dec
aas
or
inc
ss
std
add
add
nop
xor
add
push
and
and
sub
mov
and
sub
jb
adc
repnz
aaa
mov
je
mov
nop
stos
gs
jne
scas
ret
mov
cmp
jno
out
xchg
inc
xchg
inc
dec
je
pusha
mov
fcoms
sub
pop
pop
dec
insb
mov
shll
xchg
jl
rorb
cmp
sub
dec
cmp
lock
sbb
dec
mov
sbb
cmp
leave
push
sahf
and
mov
jmp
jl
mov
or
sub
imul
je
push
cmp
jb
jg
add
mov
xchg
xchg
cmp
xchg
push
mov
test
shlb
cmp
jns
cmp
push
adc
mov
inc
xlat
jb
sbb
sbb
in
inc
fcomp
sarb
cmp
pop
in
jne
loopne
mov
jl
add
mov
scas
mov
pop
jne
pop
leave
das
push
inc
inc
mov
arpl
sub
sbb
and
add
shll
repz
dec
inc
add
insl
cmp
add
inc
jne
lret
pop
adc
nop
pop
daa
or
mov
push
xor
mov
orl
outsl
mov
or
pop
enter
std
jbe
push
mov
movsl
enter
adc
adc
inc
test
and
cmp
out
nop
inc
mov
xchg
cs
inc
pushf
stc
push
ja
mov
mov
mov
and
add
mov
loopne
mov
push
sub
adc
mov
adc
xor
mov
pop
push
orl
jb
imull
add
dec
dec
scas
push
aaa
dec
dec
add
fs
adc
xor
movl
cmp
lahf
les
mov
or
xchg
dec
addb
into
xchg
fs
orl
and
mov
cwtl
mov
jns
jno
xor
adc
je
inc
cmp
jne
insl
loopne
adc
jns
xchg
and
mov
sbb
les
pop
jmp
mov
and
add
pop
mov
ret
pop
fisubrl
ret
js
int3
xchg
imul
mov
pusha
sbb
cmp
adc
inc
les
sub
shll
add
inc
fmul
or
ss
je
cmp
leave
nop
inc
or
frstor
test
aaa
or
inc
in
dec
rorl
popa
push
ret
mov
aaa
fistl
pushf
cmp
jecxz
and
cmp
loopne
fnstsw
arpl
and
push
jp
pop
nop
dec
pop
cli
mov
nop
and
outsb
sbb
pop
sbb
data16
xor
adc
aad
mov
xor
mov
and
subb
stos
fidivs
sub
mov
pushf
push
push
sbb
dec
add
mov
gs
add
xor
rol
pop
push
mov
sbb
out
pop
xor
push
lea
mov
cmp
ja
push
test
mov
psrlq
mov
cmp
pop
and
push
mov
cmp
and
mov
pop
test
imul
lea
jge
pop
cmpl
rorl
test
jl
xchg
int3
jnp
insl
mov
call
iret
sahf
rorb
dec
push
mov
sub
and
and
movsl
pop
les
js
cli
or
push
cwtl
or
pop
stos
push
mov
pop
test
sub
fs
mulb
jle
jmp
sub
es
test
xchg
incl
andb
dec
or
aad
scas
or
je
jmp
scas
push
xchg
neg
add
jmp
adc
sub
in
divl
xor
push
je
sbb
inc
add
rcrb
push
mov
inc
mov
cmp
mov
jecxz
push
push
dec
lea
pusha
clc
push
sub
dec
add
loop
and
adc
je
iret
and
mov
sub
cmpl
mov
and
insl
scas
js
mov
jge
jae
pop
in
adc
test
inc
add
shlb
pushl
ss
and
addr16
cmp
xchg
ja
daa
jg
inc
sbb
adc
add
call
cs
jmp
dec
pop
fcompl
jne
mov
inc
outsl
jmp
test
adc
inc
inc
cmp
pop
xor
out
and
xchg
notl
lret
stos
and
movl
inc
adc
cmpsl
sahf
mov
jno
mov
adc
push
enter
jne
mov
xadd
test
pop
fisubrs
xchg
arpl
adc
pop
xor
imul
loop
test
and
ret
les
lahf
in
xchg
fcomip
mov
pop
imul
mov
cs
mov
enter
inc
and
jnp
adc
push
arpl
mov
popf
test
sahf
adc
test
or
xor
popa
jne
pop
mov
int3
fwait
inc
cmc
mov
mov
push
rclb
sub
xchg
sub
sub
dec
dec
je
lods
add
push
nop
outsl
pusha
dec
test
add
scas
lea
jb
call
xchg
add
mov
sbb
ret
jb
jo
add
adc
mov
adc
sbb
push
inc
push
push
or
jmp
xchg
xor
inc
aam
xor
pop
mov
cmp
insb
add
das
test
test
or
jo
in
subb
addb
sub
shll
and
pop
adc
shll
loop
cs
xchg
mov
xchg
push
or
xchg
push
fs
idiv
clc
add
inc
mov
adcl
lret
shlb
imul
cmpb
inc
cmp
add
out
test
pop
add
inc
and
inc
jp
jnp
xchg
adc
jne
dec
adc
inc
push
jmp
xor
xchg
add
fisubl
push
xchg
subb
mov
cwtl
or
and
mov
mov
xor
or
sarb
pop
enter
mov
and
lahf
push
or
or
and
orl
test
push
push
sbb
inc
movsb
nop
out
adc
jecxz
rcrl
rolb
bound
dec
data16
xchg
lret
inc
and
nop
pushf
nop
ret
pop
scas
ret
xor
cltd
sbb
and
adc
xchg
in
testl
jp
or
pop
test
jb
dec
pop
jp
xor
xlat
mov
js
pop
jo
jg
test
pop
ret
or
inc
sub
xchg
xchg
imul
insl
and
negl
outsb
xor
sbb
push
aad
jmp
mulb
add
cmpl
fadds
jl
push
cmp
adc
clc
sub
daa
loopne
sub
and
mov
xor
sbb
xor
push
adc
mov
fbstp
adc
jns
into
cmpsl
in
mov
aad
inc
icebp
ja
sbb
add
xor
aaa
mov
popa
lahf
add
test
test
sbb
and
repz
pusha
mov
cmpsl
cli
adc
adc
xorb
out
ret
lret
mov
fimuls
cmpsb
jno
inc
rorb
arpl
inc
push
sub
pop
push
and
sar
xchg
or
xchg
addr16
jl
stc
push
jmp
cmp
ja
cmpl
adc
addr16
sub
imul
jg
mov
pop
lods
adc
repz
loope
adc
sbb
adc
lret
mov
or
cwtl
imul
jo
jmp
mov
xchg
inc
and
and
sbb
push
adc
pop
push
dec
cmp
xbegin
cs
fidivs
xchg
shlb
loop
jne
je
fcomps
mov
pushf
or
int
adc
mov
lcall
push
sub
insl
cmpsb
test
inc
mov
insl
in
das
cmp
mov
inc
fs
mov
mov
pushf
addb
dec
dec
mov
jne
inc
and
xor
addl
gs
inc
add
inc
cmp
xor
vsubpd
push
and
dec
pushl
dec
add
jmp
add
mov
xchg
push
push
cmp
adc
add
ffree
mov
aas
push
mov
bound
je
sub
dec
aam
push
jb
sub
dec
sbb
mov
jo
fstpt
lcall
adcb
pusha
loop
aaa
push
add
pop
push
dec
push
adc
repnz
mov
sbb
mov
divl
sbb
push
jnp
leave
mov
mov
in
movsb
push
adc
sbb
les
jns
sbb
inc
movsl
jg
or
sbb
shlb
push
mov
in
add
dec
cmp
adc
xor
imul
mov
mov
aaa
xor
bndstx
in
sbb
mov
jne
bound
inc
and
xchg
test
insl
data16
test
cmp
push
sub
jae
sahf
mov
sbb
inc
pop
pop
add
push
bound
int3
scas
pop
cmpsl
pop
in
or
push
ret
adc
inc
ja
xor
rorl
cwtl
scas
mov
mov
test
movb
lock
inc
pop
lahf
sahf
dec
or
push
or
rclb
mov
and
test
imul
clc
mov
out
adc
xchg
aaa
mov
dec
sub
pop
adc
dec
call
push
adc
fidivl
sub
xor
sub
cwtl
inc
add
or
dec
aaa
mov
cmp
aad
setns
dec
popa
xor
clc
clc
gs
sub
or
scas
fadds
cmpsl
adc
or
pop
add
inc
nop
roll
jl
mov
mov
negb
addb
inc
mov
fildl
fstps
fwait
inc
add
pop
add
mov
mov
jmp
flds
fmuls
fcmovnu
stc
mov
cmpsl
add
add
inc
add
inc
adc
insl
sub
stc
mov
pop
lock
inc
lahf
or
sub
adc
xor
pop
mov
mov
xchg
pop
sbb
addl
inc
push
lea
mov
mov
aaa
xor
mov
fistl
inc
mov
add
cmp
sbb
xor
jns
dec
adc
clc
push
mov
sub
push
pushf
cmp
dec
and
dec
pushf
fcmovnbe
leave
lock
fmuls
jne
mov
xor
pop
aas
sbb
or
sbb
ret
or
out
ss
or
dec
push
cld
pop
mov
inc
or
xchg
cmp
and
xchg
sbb
xchg
outsb
or
outsl
xchg
adc
scas
add
mov
int
mov
out
inc
mov
inc
loop
ja
or
or
sbb
shr
fcompl
push
adc
mov
adc
push
inc
inc
jp
ret
add
ret
and
xor
mov
sbb
outsl
jnp
pop
cmp
add
dec
pop
test
xchg
lcall
add
push
xor
cmp
test
push
mov
lock
dec
jg
out
lock
pop
mov
sub
mov
xchg
dec
sbb
or
xchg
inc
sbb
insl
lret
inc
xchg
cmp
xor
dec
add
or
push
ja
cmpsl
push
movsb
xor
xchg
xchg
arpl
pop
inc
xor
lret
in
xchg
fsubl
jo
add
cmc
loope
inc
sahf
pop
insb
jnp
add
or
or
xchg
addb
xor
test
mov
ret
cs
pop
sbb
xor
adc
inc
lods
pop
adc
jo
ret
and
and
mov
pop
adc
and
ret
mov
clc
in
add
out
mov
inc
add
test
fwait
jmp
xor
clc
xchg
mov
es
shlb
dec
ss
sbb
jne
xchg
mov
pop
jae
xchg
xchg
es
mov
jno
mov
pop
and
and
loop
rclb
mov
nop
xchg
sbb
std
imul
imul
lds
leave
xchg
dec
mov
or
push
das
pop
xchg
or
and
mov
enter
push
lock
dec
dec
jb
pop
jne
sarl
inc
adc
mul
sub
mov
xor
test
pop
xchg
cmp
dec
ja
or
xchg
xlat
and
fiaddl
sbb
es
and
sub
lcall
pop
push
push
cmpsb
aaa
mov
shrl
add
subl
enter
sub
inc
inc
es
or
push
mov
test
wbinvd
dec
insb
xchg
imul
into
outsl
outsb
outsb
stos
outsl
lret
xor
push
arpl
sub
add
cmp
sbb
test
adc
and
sti
incb
adc
inc
je
ss
pop
cli
arpl
outsl
jge
in
repnz
adc
add
cwtl
lcall
imul
movsl
imul
xchg
push
repnz
inc
add
aas
jmp
cwtl
sbb
and
shll
inc
adc
cmc
xor
push
xchg
mov
sbb
cmp
dec
jno
jg
mov
dec
xchg
push
xchg
stc
xchg
cwtl
fcmove
add
or
addr16
cwtl
push
push
je
mov
int3
push
add
push
add
test
popf
inc
mov
adc
lahf
ja
enter
mov
dec
mov
cmpsb
aaa
add
rorb
pop
and
jle
dec
dec
sbb
pop
stc
cld
sahf
sub
ss
shrb
inc
xchg
xlat
das
addb
push
mov
dec
clc
sahf
add
psrlw
bnd
adc
insb
movb
dec
push
sbb
pop
sbb
pop
data16
inc
inc
inc
movntps
mov
mov
and
nop
lcall
nop
imul
pop
repnz
inc
aas
dec
decl
adcl
pop
test
push
sahf
pushf
sbb
dec
pop
push
ljmp
rclb
push
inc
push
jo
dec
fildll
xor
hlt
loopne
mov
rorb
xor
cmpsl
add
and
push
fsts
ficoml
mov
fsubr
das
imul
rorb
orl
add
ret
lea
add
popl
and
out
inc
cmp
jne
push
and
add
mov
sarl
fidivrl
push
enter
sarl
xchg
ds
push
popa
fistpl
into
mov
mov
and
test
fstpt
test
mov
div
adc
insl
cmpsl
mov
inc
test
xchg
icebp
or
mov
cmp
fistl
outsb
mov
addl
lahf
mov
add
js
adc
hlt
mov
or
push
jmp
sbb
das
add
in
shl
sahf
ja
push
xchg
jne
sub
lods
sbb
inc
jp
movsb
rclb
xor
inc
loop
int
add
sub
loopne
aaa
sub
je
or
xchg
cwtl
cmpsb
xchg
xor
push
call
xchg
push
jns
in
loop
push
mov
push
stos
loopne
pop
pop
andb
addb
mov
ljmp
jmp
mov
push
inc
aaa
adc
fistps
xor
sbb
sbb
and
inc
ss
sub
lock
or
or
shll
scas
dec
ret
ficoms
and
popf
cmp
cmp
cmp
sub
inc
ret
mov
push
loopne
xchg
psrld
xor
xor
push
and
rcrb
xor
xor
jb
jmp
or
cmp
mov
inc
push
sub
insl
loopne
pop
mov
int3
push
repnz
inc
adc
xchg
rorl
add
insl
or
mov
popf
push
cwtl
push
push
sub
movsl
or
leave
fwait
lods
test
pop
mov
inc
jns
dec
push
test
mov
cmp
sti
cld
seto
sbb
incl
sbb
loop
sbb
in
out
fs
inc
out
jmp
ljmp
in
out
out
inc
push
sbb
rolb
sbb
aam
sbb
xlat
fcomp
fs
inc
push
fcmovu
fcoml
inc
push
sbb
ret
fs
ret
fs
inc
enter
inc
push
lret
nop
inc
push
sbb
into
iret
cmp
mov
xchg
mov
inc
cwtl
mov
xor
mov
or
call
xor
jne
mov
fucomip
cmp
popf
push
scas
mov
add
popa
rorl
or
jl
jmp
popa
push
sbb
push
push
nop
xor
fnstsw
jno
ret
movsb
cmp
nop
dec
adc
adc
insl
push
or
mov
gs
pop
adc
pushf
jmp
scas
add
add
leave
nop
or
add
push
or
nop
or
or
nop
or
nop
or
leave
nop
or
or
push
or
nop
or
adc
nop
or
nop
adc
leave
nop
or
adc
push
or
nop
or
sbb
nop
or
nop
sbb
leave
nop
or
sbb
push
or
nop
or
and
nop
or
nop
and
leave
nop
or
and
es
nop
or
sub
nop
or
nop
sub
leave
nop
or
sub
cs
nop
or
xor
nop
or
nop
xor
leave
nop
or
xor
ss
nop
or
cmp
nop
or
nop
cmp
leave
nop
or
cmp
ds
nop
or
inc
inc
nop
or
nop
inc
inc
leave
nop
or
inc
inc
inc
or
nop
or
dec
dec
nop
or
nop
dec
dec
leave
nop
or
dec
dec
dec
or
nop
or
push
push
nop
or
nop
push
push
leave
nop
or
push
push
push
or
nop
or
pop
pop
nop
or
nop
pop
pop
leave
nop
or
pop
pop
pop
or
nop
or
pusha
popa
nop
or
nop
bound
nop
or
fs
nop
or
push
nop
push
leave
nop
or
insb
insl
outsb
lcall
inc
inc
into
xor
ss
jo
popa
testb
mov
mov
or
mov
add
roll
sbb
insl
pop
fbld
jo
outsb
insl
gs
sarl
sub
outsl
xchg
push
dec
mov
pop
popa
fs
dec
pop
jp
outsb
xor
insb
out
push
ja
jns
outsb
push
ret
jle
jbe
pcmpgtd
and
jae
push
jle
jl
dec
push
je
out
jae
jne
push
fs
adc
outsb
aas
pop
mov
jge
cs
lcall
outsl
movsb
pusha
insl
push
xchg
aaa
mov
pop
mov
pop
imul
and
xor
daa
dec
mov
add
xchg
mov
sbb
inc
dec
jae
sbb
leave
and
outsb
fidivl
daa
dec
push
add
sub
lea
sub
ss
jmp
ss
jns
adc
sbb
das
push
scas
das
push
addb
jbe
das
iret
add
fsubs
pop
sub
sbb
inc
iret
push
cmp
push
idiv
push
gs
stos
notl
arpl
and
daa
fcmove
add
push
pop
pop
mov
pop
les
xchg
and
inc
jne
fcoms
sti
gs
daa
push
fld
stos
js
jp
pop
ja
imul
push
in
out
fldt
nop
add
mov
mov
jg
imul
jne
das
xor
push
push
dec
sub
pop
out
dec
mov
decl
imul
sub
fcomps
cmp
imul
aaa
inc
adc
pop
cmp
cmpsb
xorb
mulb
push
outsl
pop
imul
ss
mov
push
and
outsl
xchg
negl
mov
ret
popl
cmc
jae
aad
insb
add
into
push
adc
imul
clc
lea
fcomp
push
jmp
gs
push
das
push
mov
lds
js
das
fdivs
orb
xorl
mov
jecxz
pop
adc
pop
sub
lea
sub
mov
push
das
aaa
pop
out
lcall
pop
xor
push
iret
push
jnp
dec
icebp
mov
jp
mov
push
cltd
push
push
inc
pop
loopne
mov
iret
in
push
imul
inc
test
hlt
mov
and
push
arpl
addl
or
dec
xchg
jo
mov
das
test
inc
dec
mov
test
cmp
insl
xchg
cmp
adc
repz
or
push
xor
add
mov
add
movsb
mov
jno
xchg
or
xor
test
dec
mov
sarb
mov
mov
cmp
popf
adc
je
xlat
iret
mov
out
mov
das
inc
sbb
push
adcb
enter
add
adc
push
shll
xchg
xorl
stos
fmuls
adc
sub
push
fstpl
int
cmp
ds
dec
or
sbb
inc
and
xchg
push
popa
xchg
xchg
pop
cmpsl
movsb
adc
testl
test
sub
iret
add
mov
int3
mov
mov
dec
stos
xor
lea
and
icebp
or
dec
enter
pop
leave
int
pop
push
mov
pusha
mov
push
push
push
addr16
mov
push
es
in
pop
adc
fs
push
mov
pop
pop
mov
add
fisttps
or
mov
sub
test
or
inc
stos
aaa
add
mov
sub
outsb
ds
mov
lods
mov
inc
in
loopne
inc
jo
jo
and
and
out
dec
adc
jp
push
leave
add
in
test
ds
cmpsl
nop
and
rcll
xor
lock
jne
pop
insb
out
ret
rclb
icebp
inc
jp
pop
cmp
mov
adc
out
xorb
fsubr
or
cmpsb
dec
adc
jo
cs
mov
mov
mov
shl
mov
mov
les
inc
or
sub
add
mov
mov
int
fsub
fistpl
xchg
pushf
in
cwtl
mov
fcmovbe
cs
dec
cmp
mov
fdivrl
in
mov
shll
jne
dec
shll
fucomi
lcall
pop
xor
lcall
nop
cmpsb
imul
fs
mov
jmp
dec
xchg
mov
inc
inc
mov
mov
hlt
dec
lock
ficoml
inc
cmp
inc
push
leave
nop
sbb
inc
hlt
add
push
leave
shlb
rcrb
rorl
movsb
push
leave
mov
adc
sbb
push
mov
shlb
cld
test
fstps
cltd
outsb
adc
pusha
test
xchg
in
inc
mov
xchg
pop
sub
imul
sbb
or
faddl
mov
out
xlat
mov
lods
filds
dec
js
mov
js
xor
insl
insb
adc
cmpsl
or
adc
xor
fdivl
das
add
pop
inc
adcb
cmp
aas
adc
inc
sbb
add
dec
add
mov
stos
add
jl
stos
orl
mov
in
push
aas
or
push
in
cs
out
mov
repz
inc
enter
xor
pop
movsb
adc
sbb
lods
add
mov
sbb
enter
divb
push
ret
jbe
push
pusha
ret
mov
jl
ret
jbe
sub
cwtl
call
test
jbe
pop
fdivl
sbb
xor
xchg
sub
ds
and
mov
pmulhuw
push
mov
cmpb
int3
add
xor
or
mov
je
mov
dec
mov
mov
xchg
xrelease
mov
add
add
mov
bound
add
clc
mov
and
mov
and
xor
in
and
push
pop
es
hlt
jp
add
jl
mov
pop
lret
pop
mov
fadds
inc
fcmovne
adc
in
sbb
in
or
rclb
push
ret
clc
xorl
mov
mov
lods
xchg
mov
mov
inc
mov
cld
push
dec
inc
loop
or
or
in
inc
lods
cmpsl
call
dec
xor
jns
cld
pop
mov
mov
mov
mov
testb
push
push
cltd
or
insb
daa
or
lods
pop
cltd
cld
dec
inc
dec
mov
sarb
fs
cmpsb
adc
in
hlt
movsl
leave
jg
repnz
push
mov
aam
aas
out
test
mov
imul
sub
mov
cmc
add
add
movhps
add
mov
dec
leave
pop
mov
stc
mov
sbb
pop
scas
and
jo
add
test
sub
leave
int
in
or
cltd
mov
adc
and
xchg
xor
sbb
outsl
loope
and
idivb
or
repnz
mov
insl
sub
xlat
test
ret
stc
pop
xor
inc
repnz
or
ret
test
rclb
sbb
jae
rcrb
adc
jecxz
dec
int3
add
add
jbe
fsubrs
imul
and
clc
mov
mov
pop
mov
sub
mov
push
push
add
push
enter
ja
popa
nop
mov
adc
rolb
pusha
movsl
add
inc
mov
aad
add
imul
cwtl
add
pop
in
ret
cld
lock
add
jne
and
ret
insb
lods
mov
sub
and
push
leave
lock
in
cld
xchg
push
rcr
mov
sbb
sbb
push
sbb
cmp
dec
fucomi
es
adcl
jno
mov
inc
xchg
mov
dec
sahf
clc
sbb
cmp
pop
imul
sbbl
popa
dec
enter
xchg
sbb
inc
pop
fs
and
aam
mov
adc
lahf
cmp
xlat
push
pop
pusha
inc
pop
pusha
popf
add
repnz
rolb
add
jne
lds
xchg
insl
and
adc
or
adc
mov
mov
add
movsb
and
push
pop
and
sub
xchg
insl
and
xchg
in
das
xor
mov
sub
inc
or
bnd
jne
lods
ficomps
jb
jnp
movsl
and
push
lods
cltd
push
dec
push
dec
ds
inc
push
dec
js
inc
inc
and
push
jge
aad
pop
pop
inc
jmp
adc
cs
mov
mov
push
or
nop
push
jno
les
in
enter
jl
inc
mov
pop
ja
fcmovb
push
push
andb
daa
inc
pusha
dec
inc
mov
mov
pop
push
fxtract
xor
mov
scas
or
sbb
push
lock
inc
mov
ljmp
sbb
sbb
mov
mov
push
jne
pop
dec
cs
fisttpll
dec
xchg
and
add
mov
xor
fcomp
or
and
rorl
lods
gs
imul
sbb
inc
imul
dec
sub
or
push
mov
dec
xchg
sti
fisttpl
push
enter
enter
and
aam
mov
filds
xchg
pop
hlt
mov
shlb
scas
or
add
out
pop
mov
pop
mov
jmp
xchg
in
popf
addr16
ds
test
out
push
daa
inc
in
imul
movsb
leave
faddl
ror
test
mov
scas
and
nop
popf
nop
or
cmpsl
insl
mov
add
mov
pusha
pop
leave
cmp
cmp
hlt
and
sahf
inc
add
lock
and
add
xchg
lret
adc
add
inc
jle
fadds
test
dec
pop
inc
lret
jno
pop
or
in
jo
add
sbb
rcl
jmp
add
call
scas
jne
out
test
lret
frstor
orb
scas
nop
loop
das
push
movsb
xchg
jmp
xchg
and
js
adc
add
sub
nop
inc
pop
cld
cld
sarl
pop
push
mov
cmpsl
call
int3
outsl
add
rcl
mov
andb
cmp
push
mov
pop
nop
or
jecxz
push
or
cltd
fnsave
or
mov
pop
and
shll
push
xchg
aam
cmpsb
mov
push
loopne
inc
dec
jne
pop
test
sbb
jns
mov
sbb
stc
sub
mov
in
cld
or
xchg
pop
pop
cmp
dec
mov
adcl
mov
adc
or
pop
std
jg
icebp
and
xchg
into
sahf
and
cli
mov
and
dec
jbe
js
dec
mov
leave
test
sbb
pop
sbb
cltd
fcmovb
xchg
fs
push
sti
adc
push
jne
add
dec
outsl
xchg
cmp
dec
push
jne
das
push
gs
jne
jb
add
mov
bound
imul
inc
jo
jns
pop
neg
imul
pop
jne
xlat
gs
sub
xchg
pushf
dec
arpl
jbe
and
sub
push
test
or
push
roll
cmp
dec
fs
gs
fs
inc
xchg
insl
sbb
rcr
call
insb
outsl
bound
lea
cmp
jno
add
adc
inc
das
add
dec
loope
jne
sarb
and
cmp
das
pop
rol
repnz
adc
rol
add
dec
or
gs
mov
mov
mov
shlb
jne
enter
pop
movsl
jmp
cmpsb
add
and
jmp
hlt
pop
cmp
adc
inc
scas
orl
add
dec
cmp
jmp
add
into
dec
sub
fs
inc
sbb
rcrl
les
mulb
dec
rcl
and
or
sub
lret
dec
lret
or
dec
adc
add
xabort
or
test
test
fs
iret
sub
sub
inc
push
xlat
jmp
adc
fmuls
or
dec
sarl
or
pop
push
pusha
push
adcb
inc
popf
in
push
lea
test
hlt
push
add
sub
mov
faddl
scas
push
inc
push
and
test
pop
int3
dec
out
mov
hlt
iret
inc
and
rolb
cmp
xor
sbb
enter
repnz
and
out
adc
aam
das
add
jp
popf
and
sbb
les
dec
dec
pop
stc
xorb
or
mov
bound
jmp
mov
in
lret
and
ror
inc
cs
nop
dec
pop
mov
hlt
pop
or
cmp
aad
push
in
add
aam
add
popl
jg
dec
push
inc
and
add
pusha
sub
mov
dec
pop
nop
push
subl
inc
movb
nop
sub
pop
mov
pop
xor
mov
xor
push
std
aad
add
mov
xor
cltd
xchg
add
sti
inc
inc
mov
jae
setnp
or
enter
inc
lret
data16
push
dec
mov
cwtl
xor
mov
and
rcl
cmp
mov
push
cmp
mov
cmp
mov
inc
sbb
inc
cmp
push
sub
inc
sbb
xlat
inc
popa
sub
nop
subl
nop
dec
cltd
dec
cmp
shll
cmp
in
sub
or
push
sbbl
leave
orl
enter
jns
orl
or
mov
mov
pusha
jmp
xor
in
fldcw
sbbl
leave
andl
popf
add
ficompl
push
pop
push
cmp
movsb
pop
faddl
inc
pop
test
mov
add
out
ret
pop
and
push
mov
push
mov
xchg
xchg
xchg
add
pop
add
jmp
fdivl
hlt
clc
mov
xchg
or
test
push
iret
xor
ror
sub
lock
xor
enter
adc
scas
push
inc
jbe
negl
je
sbb
cmpb
pusha
shll
out
cld
dec
xchg
cmc
mov
mov
add
in
jmp
mov
inc
call
neg
inc
jmp
and
or
push
cld
das
sub
jne
cmp
jne
push
jmp
xor
ja
and
mov
dec
repz
jne
jp
stc
xchg
add
xchg
add
pop
sbb
adc
push
xor
iret
sub
inc
inc
sub
lret
aaa
cmp
jmp
je
mov
loopne
xor
nopl
shlb
ljmp
sbb
clc
or
inc
insl
cwtl
jb
pop
adc
sub
sbb
scas
inc
xor
js
adc
nop
mov
cltd
or
inc
inc
sbb
adc
and
inc
jb
mov
xchg
divl
mov
jl
xchg
movb
pop
xor
test
leave
cmp
xor
ja
push
movsl
add
mov
inc
xchg
adc
shlb
or
dec
fadds
push
enter
ret
adc
clc
xor
out
psubb
daa
hlt
hlt
xor
test
or
iret
fldl
and
loop
aaa
inc
dec
sbb
xchg
adc
shrb
and
mov
subl
jmp
push
add
mov
push
add
aas
in
loopne
leave
sub
xor
cmpsl
jg
fiadds
inc
xchg
adc
pop
and
fmuls
out
adc
ja
fisttps
lret
pusha
and
sub
xchg
and
mov
test
sub
mov
mov
orb
pop
mov
or
cmp
imul
rclb
add
jg
or
cmp
pop
cmp
inc
fneni(8087
lret
xlat
call
cmpb
jb
mov
add
lds
xor
adc
lahf
push
repnz
add
jmp
or
mov
push
aas
shll
loope
mov
jns
xor
push
adc
ret
aaa
pop
mov
lea
loope
iret
enter
xchg
les
push
jae
add
pop
imul
cltd
inc
fwait
je
and
or
lods
cmp
cld
add
pop
jne
dec
add
test
mov
jne
pop
loope
imul
lahf
jmp
mov
ret
jae
xor
aas
cmpsl
popa
andl
xor
cmpsl
and
sub
jns
call
leave
or
or
test
xor
std
clc
cwtl
fmul
inc
add
inc
sbb
push
test
jecxz
xlat
xlat
cmp
lcall
inc
adc
cmp
cmpb
jecxz
sub
int
push
pushl
outsl
inc
dec
push
into
clc
sub
aas
aam
or
inc
hlt
push
adc
test
xor
lods
or
pop
and
push
xchg
cmp
daa
cmp
sbb
pushf
jecxz
test
jecxz
mov
jns
aad
jnp
pop
push
push
or
mov
fadds
and
movsb
out
add
daa
in
lock
test
nop
in
push
and
and
gs
pop
and
pop
mov
or
xchg
and
xchg
cltd
mov
dec
or
mov
sub
sbb
clc
xor
pop
in
mov
les
inc
js
xacquire
cld
fisubrl
jno
inc
xlat
aam
cmp
enter
in
in
pop
jb
in
movsb
in
adc
in
xor
inc
add
mov
nop
out
out
push
jecxz
scas
xor
mov
xlat
jno
shll
outsl
xor
sarl
fiaddl
sub
in
test
add
aad
dec
pop
mov
sub
adc
dec
xor
adc
push
rorl
jae
mov
insb
nop
out
xor
pusha
pop
dec
jns
or
mov
aaa
in
out
insb
pop
xchg
jne
fistl
incb
sub
incb
imul
ret
ret
rclb
mov
hlt
movb
inc
mov
and
mov
lcall
pop
mov
add
add
cmc
dec
pop
mov
inc
dec
loopne
inc
mov
xchg
cmp
je
add
mov
xchg
orb
mov
xlat
sbb
fidivs
in
in
leave
mov
mov
orl
jbe
sbb
pop
cmp
and
mov
test
and
es
xor
xchg
dec
cmc
flds
out
mov
pop
xchg
jmp
push
loopne
cmc
loope
imul
loopne
into
aas
sub
sub
adc
sbb
out
xor
pop
xor
jns,pn
sbb
fadds
fsubs
lods
add
or
in
or
sub
push
cmp
dec
test
inc
xchg
inc
ret
jb
xchg
fdivrs
fildl
clc
xchg
xchg
add
movsl
push
adc
shl
pop
mov
sbb
or
rcrl
push
jns
incb
incl
add
shlb
mov
clc
pop
and
ret
mov
iret
aas
mov
in
pop
hlt
dec
stos
cmp
jno
ret
adcb
sti
xor
or
jns
shlb
adc
push
and
inc
enter
fistpl
fcom
cmp
nop
pop
sbb
in
lret
mov
sbb
mov
mov
jge
adc
frstor
repz
push
pop
rol
leave
push
dec
daa
scas
lret
sub
and
lret
mov
sbb
mov
inc
sub
jmp
cwtl
sbb
or
cmp
out
cs
arpl
sub
push
fildl
mov
adc
jmp
ffreep
sti
movl
add
inc
into
insl
sub
icebp
xor
push
cmp
subl
decb
cmpsb
mov
addl
push
add
clc
adc
or
fcmovb
jmp
and
arpl
pop
mov
add
in
and
flds
and
arpl
repnz
adc
divl
mov
inc
shll
dec
adc
and
insb
mov
add
adc
mov
mov
mov
pop
and
jb
in
js
in
shlb
in
js
in
int3
pop
and
cmpxchg
test
sarb
inc
mov
mov
nop
incb
sub
out
sub
inc
stos
mov
pop
addr16
imul
jo
jb
je
jbe
js
cwtl
insl
loopne
jp
sub
das
dec
xchg
pop
mov
jno
and
cmp
out
jo
pushf
in
in
cld
pop
xorl
mov
pop
push
jmp
jl
out
int3
out
xlat
test
in
mov
aaa
je
pop
add
or
shl
or
push
repz
lds
je
test
push
adc
rolb
pop
push
xor
testb
xchg
and
push
inc
jecxz
dec
lea
adc
cmpl
out
cs
cld
mov
inc
cmp
inc
add
push
push
test
mov
push
mov
push
sub
xor
inc
in
rorb
inc
pop
add
mov
inc
dec
xor
shr
sub
push
mov
insb
and
mov
out
and
mov
and
ds
sub
outsb
mov
pop
mov
sti
adc
pop
pop
int
icebp
in
ljmp
jo
dec
aaa
mov
xchg
test
repnz
cld
out
aaa
add
add
les
mov
mov
pop
inc
lret
inc
sub
ja
and
jae
test
outsb
nop
push
test
clc
dec
jo
cmp
test
outsb
xchg
stos
push
inc
fistpl
les
cld
loopne
pop
mov
jno
rclb
and
sub
xor
or
aaa
lods
mov
call
lcall
or
inc
dec
sbb
jmp
push
sbb
inc
or
ret
mov
xor
mov
xlat
dec
jne
pop
sub
jmp
sub
push
je
ret
mov
inc
lcall
test
int3
pop
int
xchg
cmpsb
add
inc
jo
or
jae
ja
clc
rolb
ds
test
sarb
lahf
dec
outsb
add
xor
insb
push
lahf
mov
or
add
ret
mov
movb
sub
hlt
hlt
sahf
loop
lea
cs
test
test
in
imul
mov
jo
in
fldt
push
hlt
jo
nop
fistpll
dec
adcb
xchg
mov
dec
into
pusha
jns
cmc
add
fs
stc
hlt
in
add
movsl
jle
mov
rcrb
insl
add
cmp
lock
pop
pop
add
xchg
mov
cmp
out
push
jecxz
mov
push
sbbb
ss
pop
inc
or
daa
das
add
and
into
in
movb
push
sub
push
jns
cmp
cmc
and
sbb
fsts
nop
xchg
add
imul
sub
sub
aaa
mov
aas
mov
adc
jno
cwtl
fldenv
pop
aaa
xor
aad
btc
pop
in
mov
pop
cmp
sub
pop
push
add
insb
inc
sbb
mov
fisubs
and
mov
testb
add
dec
icebp
adc
push
testb
mov
add
xlat
jns
dec
fisubrs
test
out
ror
add
cmpl
fisttpll
add
push
pop
sbb
in
in
or
sbb
mov
xchg
cmp
loope
mov
div
dec
sub
or
scas
dec
divl
xchg
xchg
pop
pop
push
imull
fs
push
adcl
dec
adc
adc
adc
fs
push
icebp
sbb
and
sub
in
push
enter
sbb
fs
push
popa
and
push
fs
and
and
and
fs
push
shrl
fadds
mov
roll
or
xlat
icebp
pop
mov
stc
inc
sub
xchg
pushf
in
loopne
stc
dec
or
test
scas
inc
adc
cmp
cmp
mov
jb
and
test
xchg
cmp
mov
inc
inc
cmpsb
jbe
mov
push
in
inc
hlt
mov
inc
cmpsb
inc
and
xchg
pop
pop
sub
insb
pop
sti
inc
fbstp
xor
pop
xor
and
daa
xchg
mov
inc
dec
pop
cmpsb
mov
cmp
scas
dec
cld
dec
pop
dec
xchg
or
rcrb
unpcklps
inc
sbb
rcrb
push
xchg
incl
pop
sub
jl
sub
pop
jnp
jge
andl
push
xor
dec
cmpsb
or
push
add
fs
pop
mov
xchg
mov
cld
pop
dec
mov
and
pop
jb
icebp
cld
pop
clc
cld
and
sub
pop
inc
gs
xor
pop
aas
push
inc
adcb
pop
jb
out
jnp
pusha
xor
and
cli
pop
sbb
scas
push
and
cmp
movsb
inc
lret
pop
mov
pop
and
sbb
mov
and
insb
pmulhuw
sub
and
jb
jo
xor
je
xor
pop
xchg
js
and
xor
pop
xor
pop
xor
pop
add
inc
orb
orl
dec
leave
orl
enter
enter
js
test
mov
mov
out
xor
xor
aaa
xor
xor
xor
inc
xor
sti
pushl
inc
xor
inc
xor
dec
xor
dec
xor
xor
dec
sub
pushl
push
xor
push
xor
push
xor
push
xor
pop
xor
pop
xor
pop
xor
pop
xor
mov
pop
xor
popa
xor
arpl
dec
mov
jg
xor
cmp
cmp
cmp
cmp
xor
inc
je
and
add
sar
xor
add
push
mov
sbb
movsb
adc
out
add
popa
iret
lock
jb
outsb
in
es
push
in
xchg
mov
pop
or
jno
dec
pop
std
add
add
add
inc
mov
cltd
ficoml
mov
lods
test
xchg
dec
movsb
mov
cltd
cwtl
dec
pusha
adc
mov
sbbl
sbb
inc
mov
push
test
or
dec
ja
pop
adc
sub
inc
pop
push
movb
add
das
pop
dec
jne
pop
jnp
jae
dec
out
pop
and
xchg
pop
add
and
aam
adcb
in
mov
ja
je
mov
fcoml
push
and
decl
aam
scas
flds
cmc
push
clc
add
dec
jecxz
xchg
fadds
mov
and
lea
sub
stos
cmp
nop
ds
rorb
inc
inc
fsubl
pop
inc
lahf
push
cld
mov
dec
pop
inc
repnz
inc
fwait
or
aas
xor
pop
add
das
je
push
movsb
or
pusha
sbb
xchg
roll
nop
loope
adc
and
pop
or
and
push
jnp
test
dec
push
pop
mov
add
divb
popf
sahf
or
sbb
sbb
inc
sbb
pop
clc
in
daa
add
lods
iret
cmpb
xor
dec
push
or
addl
das
in
shl
sub
pop
adc
out
lcall
fdivp
adc
popa
push
inc
inc
aad
sar
outsl
imul
pop
sub
orl
xchg
sub
popf
out
push
in
push
enter
les
push
sbb
outsl
pop
orb
pop
testb
or
push
add
jge
and
movsb
daa
loop
shll
inc
mov
xchg
cld
mov
xchg
xor
adc
sbb
inc
lds
and
push
arpl
cmpsb
mov
inc
shlb
xor
sbb
mov
fwait
xchg
sub
rclb
xchg
in
or
cld
adc
push
ss
outsb
out
inc
jp
enter
inc
add
das
dec
mov
and
lock
xor
test
add
pusha
dec
mov
cmp
daa
inc
pop
and
insl
imul
rorb
cli
cmp
push
push
push
loopne
add
add
enter
push
lods
or
iret
dec
sti
cmp
stos
into
popf
jbe
adc
mov
add
inc
les
sbb
or
and
andb
mov
inc
out
cmp
dec
aam
inc
mov
and
je
gs
dec
pushf
add
xchg
cmp
mov
and
jno
fcoml
push
mov
inc
xor
or
sbb
xchg
mov
mov
in
addr16
pop
adc
dec
imul
ret
dec
imul
pop
inc
js
insb
jecxz
xor
pop
mov
movsl
add
or
fidivrs
xor
inc
add
daa
int
incb
inc
inc
xor
inc
inc
ss
cmpsl
in
push
or
int3
or
pushf
bound
aad
orb
enter
or
loope
dec
pop
push
arpl
jo
ljmp
das
scas
push
fwait
jae
xor
inc
inc
nop
or
jns
mov
inc
xchg
inc
in
mov
or
pop
fs
dec
xor
inc
add
push
mov
fadds
popf
jmp
jbe
push
scas
lods
testb
loope
leave
xor
mov
dec
and
aas
sub
dec
push
inc
push
cs
or
push
add
and
pop
stos
loopne
inc
sub
or
and
jbe
aas
outsb
xchg
daa
sub
pop
xchg
sbb
fisttpl
and
push
pop
push
xor
aaa
add
or
cs
xor
xor
and
outsb
sub
testb
mov
push
inc
push
jo
test
xorb
adc
adc
sbbl
lea
mov
and
js
sub
sarb
lcall
fs
mov
jno
aad
add
pop
popa
sbb
jmp
and
add
push
xchg
cwtl
dec
inc
dec
pop
dec
test
jns
stc
or
outsl
inc
push
fcoms
add
push
push
sub
lea
inc
notb
lret
push
and
cs
ljmp
adc
inc
je
add
push
pop
fisubl
inc
pop
das
xchg
in
adc
cmovbe
call
faddl
mull
jg
decl
cmp
das
fs
and
outsb
arpl
or
and
in
jecxz
and
push
pop
fsubs
cmpsl
mov
cli
sub
mov
sbb
xor
xor
xor
xor
xor
jecxz
jb
pop
cs
in
out
out
cs
lret
in
fs
xor
addr16
mov
imul
cs
lret
icebp
insb
repnz
rep
hlt
outsl
cmc
jo
in
mov
clc
jae
je
mov
sti
jbe
ja
js
jns
pusha
add
jle
and
pop
cld
mov
or
sbb
add
fcoms
pop
mov
lahf
repnz
loope
xchg
adc
sbb
fnstcw
pop
adc
jl
cli
sbb
mov
pop
xchg
pop
es
push
popa
loop
leave
sbb
hlt
dec
mov
in
add
sbb
scas
cmpsl
add
cmp
and
cmpl
ret
dec
sub
and
fistpll
icebp
clc
shl
push
addr16
cmpsw
xchg
popa
and
gs
incl
and
and
and
inc
jb
jae
ss
cmp
inc
imul
ja
jae
lea
jne
xchg
mov
aas
inc
gs
jb
inc
gs
imul
js
jo
jp
mov
push
scas
insb
and
inc
inc
and
mov
and
and
inc
and
pop
adc
mov
punpcklwd
jns
lods
and
sub
dec
ret
jge
in
xchg
xchg
sbb
mov
dec
push
insl
jg
mov
cmp
jnp
or
dec
add
rcrb
and
int3
dec
mov
pop
sti
mov
mov
dec
imul
push
imul
shl
repnz
push
mov
jle
sbb
shr
fs
mov
cmp
in
addr16
mov
je
hlt
mov
mov
adc
push
fs
mov
cmp
enter
lods
push
mov
pop
aas
xor
movsb
mov
mov
adc
std
sbb
xor
repnz
jmp
dec
lods
add
pushf
mov
mov
pushf
mov
fildl
xor
or
jl
or
cwtl
cwtl
xchg
push
xchg
pop
int
pop
mov
nop
mov
ror
mov
push
sbb
lock
mov
outsl
and
or
rcrb
mov
jnp
and
push
and
rcrl
push
and
rcll
jo
xchg
pushf
pop
jo
adc
subb
fs
fs
pusha
pop
je
dec
pop
adc
cmp
pop
push
pop
sbb
push
push
imul
dec
inc
ficoms
cmp
inc
dec
add
mov
adc
pop
adc
sbb
cwtl
push
dec
test
pushf
adc
lret
pop
pop
inc
mov
test
sub
mov
push
adc
pop
aam
cmpsl
insl
leave
ret
pushf
adc
xchg
dec
add
xor
xor
fs
sub
push
xor
sub
jne
roll
cmp
pop
enter
sti
sub
and
leave
leave
and
mov
call
fs
leave
leave
sbb
sbb
adc
adc
xchg
xchg
sub
loope
cmp
test
mov
sbb
or
loope
leave
sti
pop
jb
xor
add
fldenv
decb
in
cld
clc
clc
pushf
pop
mov
lock
enter
sub
mov
pusha
call
mov
jnp
in
mov
mov
loopne
je
fmull
pop
outsl
enter
sub
mov
inc
call
jmp
leave
and
in
dec
jb
push
enter
mov
inc
scas
pusha
sarb
xchg
sub
push
adc
lahf
inc
mov
fdivp
rclb
sub
pop
int
lahf
dec
std
pop
and
and
and
and
or
sarb
and
or
cmc
mov
and
insl
inc
jae
jbe
mov
or
das
lahf
scas
fwait
pop
jns
andl
insb
aas
add
ficomps
js
aas
jle
inc
push
adc
and
and
push
inc
push
in
xor
pop
or
mov
pop
test
mov
lahf
or
daa
lret
leave
les
mov
and
lock
xor
es
push
lcall
push
fs
dec
and
arpl
sbb
and
add
ja
sbb
dec
push
enter
cmp
enter
outsl
arpl
insl
or
dec
outsb
and
sbb
dec
arpl
bound
int3
xor
push
sbb
call
repnz
mov
add
rcr
insb
mov
cmp
or
inc
inc
add
inc
cs
gs
jl
sub
out
out
sub
pop
cld
jl
add
mov
test
sub
lret
data16
mov
xchg
xor
jnp
add
jp
or
jl
lret
fmull
push
jno
add
mov
pop
ss
dec
cmpsl
hlt
cmpsb
mov
pop
pushf
xchg
mov
lcall
aam
xchg
int
dec
test
sbb
fmul
fisubl
push
test
push
je
lods
scas
push
lcall
enter
xchg
fs
insb
mov
aam
mov
push
adc
lods
mov
mov
insb
cmp
push
or
mov
js
imul
mov
iret
push
mov
ret
lret
scas
xor
ret
fiadds
aam
nop
fmulp
in
or
inc
add
inc
inc
fdiv
fwait
in
fildl
hlt
fwait
les
inc
add
xor
cwtl
ss
out
xchg
int
cwtl
dec
sbb
dec
lret
data16
popa
jo
bound
xchg
int
insb
xchg
pushw
nop
lahf
pusha
fmull
fwait
insl
xchg
dec
lods
adc
in
mov
fldenv
sub
push
push
in
cwtl
cmpsb
push
cld
int3
scas
aas
enter
fcmovne
hlt
roll
sbb
paddsb
imul
xchg
movsb
xlat
data16
xlat
push
imul
dec
sbb
hlt
les
fsubrl
insb
cmp
fcoms
mov
frndint
fs
xor
mov
dec
jecxz
test
das
js
fldt
imul
sub
push
dec
shrl
cmc
pop
clc
cli
enter
lcall
and
xchg
ss
cmpsb
imul
mov
xor
mov
pop
insb
clc
cmp
add
imul
lods
sbb
in
inc
stc
pop
or
mov
ss
pop
cwtl
sti
push
mov
sub
xchg
cld
jle
std
mov
ss
cld
push
test
and
sub
les
enter
push
insb
aam
xor
imul
jl
insl
xchg
dec
shll
add
lcall
enter
mov
xchg
add
cmp
daa
xor
cltd
or
inc
push
addr16
mov
scas
orl
inc
or
jbe
fistl
shll
pop
test
xchg
add
cmp
repnz
inc
les
nop
cmc
add
adc
adc
pop
add
outsl
fildll
mov
leave
xlat
iret
enter
fcomp
push
nop
idiv
fxch
loopne
jecxz
in
pop
add
fiaddl
dec
fistl
mov
push
jne
cld
mov
push
and
popa
je
xor
and
add
in
or
pop
push
mov
fcoms
sbb
sbb
rolb
pop
sbb
add
cmp
sbb
movl
cltd
ja
inc
add
pop
dec
cmp
jmp
add
adc
push
and
xor
shll
cmp
push
shll
jo
dec
shll
mov
xor
mov
xor
rcr
loopne
lock
cmpsb
imul
test
sub
cmp
orl
cmpsl
add
add
add
xchg
push
movsb
cld
push
cmp
mov
or
mov
insb
jl
jge
bound
mov
fcoml
inc
cs
xchg
js
jg
jne
repnz
add
pop
and
jmp
clts
mov
or
adc
adc
adc
in
cmp
push
or
imul
imul
imul
cmp
xor
cmp
add
sub
iret
movsb
inc
mov
les
pop
roll
push
push
inc
xor
jmp
dec
jle
insb
inc
int3
in
aad
and
push
and
or
imul
aam
daa
jle
call
and
scas
pop
rorl
xorb
and
add
sub
push
je
jge
add
adc
push
mov
fcompl
mov
xchg
mov
lock
bound
fcoml
push
repz
stc
cmpsb
lret
sub
sti
cmp
mov
rcrl
and
push
add
xor
shll
add
dec
rcll
adc
adc
mov
wbinvd
adc
sub
jbe
rcrl
sbb
scas
push
adc
cwtl
push
lods
sbb
or
add
dec
shrl
adc
add
xor
inc
xor
shll
pop
push
push
sarl
ficomps
test
shll
adc
dec
shll
or
sahf
imul
add
call
roll
xchg
mov
jl
cmpsb
imul
cmpsb
imul
or
out
and
inc
push
mov
push
mov
mov
push
incb
pop
imul
and
xor
push
femms
insb
push
shlb
ret
add
fmuls
add
or
pop
add
out
out
or
popa
jnp
aad
sbb
xchg
dec
jmp
dec
add
fs
lods
dec
shll
xchg
movsb
mov
dec
shll
shl
hlt
dec
data16
shll
pushf
movsb
add
lcall
sbb
lds
pop
adc
push
popa
inc
orb
fwait
push
adc
and
xor
jae
xchg
add
das
push
jns
in
sti
setbe
and
add
enter
adc
adc
xor
push
jns
or
sbb
sbb
add
xor
and
inc
rcll
orl
lods
add
call
mov
lcall
add
xor
es
hlt
sarb
add
pop
dec
ret
ret
xor
add
cmp
fs
lcall
enter
cmpsb
fsubr
hlt
or
adc
shll
fs
dec
shll
cwtl
test
aam
fbstp
call
pop
or
nop
lods
xchg
push
stc
add
jp
push
std
xor
shll
cld
cmp
dec
shll
jo
dec
shll
lods
hlt
xor
shll
repz
in
ss
shl
clc
lock
out
cmpsb
imul
imul
xlat
inc
nop
std
aaa
xchg
add
mov
out
add
adc
adc
andb
or
add
fmuls
mov
into
pop
pusha
jnp
outsl
inc
inc
or
or
add
add
cltd
cmp
pop
sbb
inc
adc
add
out
sbb
fcmovb
mov
and
or
andb
imul
pusha
mov
pop
mov
jbe
dec
pop
inc
sbb
jecxz,pn
sbb
movl
fcoms
or
pop
add
xchg
insl
xchg
xchg
xchg
add
in
popw
pop
add
pop
xchg
stc
mov
sar
sti
cld
std
decl
xor
incb
add
addb
xchg
add
adc
loop
call
adc
cs
dec
dec
pop
mov
push
mov
xor
clc
lret
push
pop
adc
and
xor
jmp
ret
adc
xor
pop
or
dec
sbb
shll
push
sub
shll
pop
inc
xor
shll
pop
dec
andb
dec
rcrl
fs
push
shlb
je
shll
lock
dec
mov
mov
test
test
xor
shll
dec
shll
int3
push
xor
shll
aam
cwtl
xor
shll
call
xor
hlt
nop
movsb
cld
mov
ss
mov
sbb
imul
imul
data16
pop
add
les
and
mov
lcall
shlb
aam
pusha
fsub
cmpsb
imul
xor
adc
call
inc
mov
pop
rcl
dec
shl
je
hlt
mov
xor
loopne
pushf
lock
lods
sarl
pop
mov
dec
add
and
aam
xor
shll
in
adc
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
mov
mov
test
xor
rorl
push
aam
shll
pop
hlt
lcall
mov
pusha
imul
imul
imul
cmpsb
imul
cmpsb
imul
insb
lcall
adc
and
shll
movsb
add
inc
lods
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
imul
popf
insl
lcall
push
adc
dec
and
and
xor
rolb
inc
push
test
push
xor
pusha
push
pushf
cvttps2pi
or
jo
test
jg
mov
xor
add
enter
rclb
sub
jg
hlt
pusha
mov
int
stos
clc
jo
cld
je
add
push
pop
pop
xchg
xor
lock
js
dec
push
nop
pushf
shll
int3
fsubs
xor
in
cld
or
adc
cmpsb
imul
shll
xor
testb
pop
fs
dec
shll
mov
sarl
add
dec
hlt
add
or
int
movsl
idiv
in
dec
push
push
je
mov
shll
cmpsb
pop
ss
in
clc
add
adc
inc
sti
dec
test
add
mov
sbb
xlat
std
std
xor
shll
shll
std
std
xor
xor
std
std
std
incb
sbb
or
mov
hlt
pop
inc
les
nop
jae
pop
arpl
dec
jle
pop
add
jge
cmp
push
sbb
insb
mov
mov
ljmp
lcall
pop
sub
call
lahf
enter
xchg
dec
add
pop
imul
dec
and
or
lret
lcall
sub
add
xor
and
sub
inc
je
les
jbe
pop
mov
mov
push
fs
lods
fldcw
pop
es
ds
cmp
xor
adc
xor
cs
insb
xchg
add
imul
mov
ficoms
adc
fidivs
push
sbb
rorl
push
dec
or
xchg
fidivrs
push
jo
jne
rcrb
in
push
ds
hlt
mov
pop
xchg
push
mov
pop
lock
lcall
mov
pop
fmul
addl
inc
scas
adc
insb
iret
mov
es
insb
dec
imul
outsb
int3
shlb
mov
ds
fdivl
dec
inc
cld
imul
pop
or
push
push
call
xor
ljmp
ss
out
adc
mov
ss
inc
lock
ljmp
jae
call
xor
adc
sbb
sahf
pop
ss
scas
add
dec
aas
jae
push
into
add
add
lods
mov
ds
pushf
dec
movsb
pop
pusha
mov
mov
jo
mov
add
push
push
jbe
pop
fadds
test
popa
out
sbb
dec
push
loopne
je,pn
out
mulb
dec
xor
mov
rolb
pusha
jae
inc
aam
or
inc
mov
adcb
sbb
data16
lods
popf
mov
sahf
xor
pushf
lods
xor
mov
test
fnstenv
push
mov
push
adc
xchg
in
ja
out
pop
cmp
sbb
call
lods
out
into
mov
data16
shll
mov
push
pop
rcrl
lods
push
lock
jle
movsb
jmp
xor
out
ds
inc
imul
mov
mov
cmp
loopne
cwtl
into
dec
mov
dec
imul
lods
pop
and
xchg
insl
rorl
outsb
es
cs
add
and
pop
pusha
adc
add
push
or
cwtl
jae
push
shlb
out
ss
push
and
push
es
sub
and
xchg
test
cmpsb
jle
push
pop
xchg
paddsb
adc
push
push
inc
xchg
ss
mov
xchg
sub
jmp
lods
jbe
ds
xchg
cmpsb
push
into
call
cmpsb
push
hlt
pop
jle
fsubrs
inc
lods
ds
mov
add
call
hlt
push
add
mov
lods
push
dec
imul
inc
sub
xchg
push
mov
pop
rcll
cld
xor
sub
fildl
add
push
ds
sbb
or
es
adc
cmp
cwtl
cmpsb
sbb
push
mov
adc
push
mov
sbb
pop
sbb
je
clc
cmpsb
mov
fisubrl
dec
fmuls
fisubrl
cmp
mov
add
add
mov
sahf
push
je
cmp
bound
pop
add
mov
add
insl
add
nop
out
push
les
mov
push
mov
and
nop
push
adc
add
and
add
mov
pop
add
push
dec
add
mov
xchg
aas
add
push
imul
pop
dec
ret
data16
pop
push
and
pop
dec
aaa
push
pop
dec
mov
inc
lcall
insl
rcrb
dec
xchg
push
loop
push
inc
sahf
cmp
xor
or
dec
xor
ret
inc
push
pop
push
cs
and
inc
cmp
inc
push
cs
and
xor
pop
rcrl
sbb
inc
dec
testb
push
push
rcrb
push
push
push
xchg
pop
dec
dec
add
pop
jnp
dec
ss
push
push
jmp
cmpsl
inc
inc
outsb
dec
dec
pop
jg
mov
mov
movsl
repnz
add
add
sarl
add
mov
and
jb
mov
add
fists
incl
pop
incb
and
clc
aas
push
pop
ds
int
loopne
cld
add
fisttpl
repz
or
push
aas
jg
prefetchnta
push
addb
cmp
test
or
repnz
mov
xchg
out
roll
mov
mov
jg
addr16
lcall
ficompl
in
xor
rolb
loopne
leave
idivl
lock
sbb
pop
pop
aas
out
outsb
push
cs
xchg
stos
sbb
add
lock
push
nop
out
popa
xor
pop
std
cmp
push
fldl
insb
jl
mov
lcall
jg
sub
ret
pop
inc
add
jo
push
sbb
pop
pop
incb
lcall
jo
ror
into
sbb
push
cwtl
pop
nopl
dec
pop
aas
es
push
add
je
aas
into
push
add
lcall
adc
push
fnstsw
cmp
xorps
dec
pop
outsb
es
dec
xor
pop
pop
std
clc
lock
dec
cs
jg
aas
rcrb
dec
add
cs
pop
outsb
es
mov
popa
addr16
inc
xor
add
pop
repnz
mov
stos
dec
test
xchg
fcomp
fldl
push
cs
jle
sub
bound
call
loopne
jns
pop
in
les
test
fcmovu
cmpb
push
push
cs
xchg
add
addr16
add
and
cld
pop
cmp
fcoml
lods
es
mov
lock
imul
call
cmp
pop
jg,pt
or
push
sub
inc
add
inc
addl
pusha
xor
sbb
dec
xor
push
sbb
mov
lds
int
ret
ret
shll
cmp
mov
sbb
push
sbb
or
test
sar
xchg
shl
xchg
loop
divps
inc
pop
inc
push
push
in
add
orb
adc
add
movsb
fnsave
or
add
aam
and
xor
add
mov
cmp
subl
mov
das
xor
daa
sbb
cmp
xor
daa
and
cs
xor
scas
pop
cmp
orl
push
adc
cmp
clc
jbe
ja
dec
push
dec
push
movb
push
push
daa
cmp
imul
pop
fldt
daa
dec
addl
daa
mov
xchg
gs
data16
push
es
push
hlt
popl
sahf
mov
inc
mov
and
xor
jl
inc
leave
inc
cmp
cmp
outsb
imul
xor
and
daa
inc
mov
movsl
daa
dec
sub
out
ficoms
aas
push
xor
mov
stc
mov
cmp
push
js
clc
xor
jbe
jbe
in
dec
and
push
lds
popa
int3
push
and
and
cwtl
testl
mov
xchg
xchg
push
cmp
fldl
push
lret
mov
popa
daa
push
and
push
mov
mov
push
data16
daa
mov
jns
mov
xbegin
popf
inc
andl
mov
push
jo
add
testl
or
sub
or
dec
push
pop
daa
xor
iret
add
xor
inc
aad
xchg
push
daa
mov
dec
dec
pop
daa
mov
inc
mov
dec
out
in
fstl
leave
orl
shlb
lahf
dec
clc
add
fcoms
outsb
daa
add
mov
daa
ja
dec
jnp
stos
mov
es
jne
push
aas
sbb
or
inc
arpl
cmp
scas
outsl
daa
ds
rorl
out
mov
pop
sbbl
cmp
repnz
leave
mov
mov
out
fs
cmpsl
mov
push
lcall
lcall
leave
aas
es
lret
jmp
je
movsl
aas
dec
inc
inc
es
pop
mov
add
jle
xor
lock
imul
push
sub
jecxz
sbb
or
mov
xchg
push
fcoml
adc
inc
xchg
sbb
or
stos
movsb
stc
mov
add
sub
or
xor
xor
cmpsb
arpl
push
ja
out
cs
bound
in
mov
movsb
inc
sub
push
mov
xor
push
sub
add
je
jle
shl
stos
inc
push
shll
push
inc
mov
daa
cmpl
and
inc
ds
aas
clc
fsubrs
jecxz
mov
lock
jns
fldenv
movsb
pop
ss
sub
dec
dec
xchg
pop
mov
cmp
adc
jmp
xchg
jne
and
ret
sub
and
push
cmp
sbb
xchg
xchg
sbb
jecxz
lcall
test
xlat
dec
addr16
jl
and
clc
or
out
imul
dec
xchg
xchg
daa
fcoms
fst
mov
daa
dec
xor
dec
xor
dec
insb
jbe
mov
dec
daa
dec
daa
clc
dec
fidivl
dec
sarb
dec
lret
ret
push
dec
rorb
arpl
push
cmpsb
xorb
xorl
cltd
cltd
push
mov
mov
shlb
cltd
cltd
and
jg
add
mull
inc
xor
repz
inc
push
cmp
cmp
mov
leave
xor
jae
shlb
dec
xor
inc
fwait
sbb
insl
push
daa
cmp
enter
shlb
arpl
xor
cmp
push
adc
pop
pushl
inc
sub
inc
jb
lar
cmp
mov
or
mov
jo
loop
inc
popf
ss
cmp
aas
daa
aaa
xor
or
jl
and
sub
cltd
push
xlat
xchg
or
insb
sbb
js
out
insb
jbe
les
push
imul
mov
lea
inc
push
outsb
pop
clc
daa
and
in
cmp
jmp
xchg
add
push
push
mov
xchg
and
push
xor
push
in
aaa
inc
adc
movb
adc
lahf
pop
add
data16
sets
paddb
iret
fwait
outsl
push
lock
add
pop
mov
lock
insb
addr16
add
xor
or
inc
sub
push
jge
mov
adc
dec
and
jge
sub
add
push
inc
jle
insb
movsb
add
dec
gs
dec
mov
mov
jae
jbe
sub
in
push
in
int3
add
xor
sbbb
add
pop
cmp
push
outsb
jb
push
push
and
push
inc
mov
mov
shrl
outsl
out
je
ja
imulb
adc
mov
outsl
cmpsb
mov
arpl
sbb
inc
lret
je
mov
inc
inc
lcall
pop
jns
jo
shlb
add
sbb
jne
data16
mov
jbe
xchg
insb
popa
insl
jo
or
stos
or
push
insb
push
fs
and
mov
pop
bound
lcall
mov
inc
xchg
outsb
and
dec
or
pop
push
nop
movsb
pusha
mov
jecxz
int
outsl
mov
ret
ss
add
jns
adc
ficoml
in
mov
sub
pshufw
notb
push
lods
orl
xchg
dec
shrl
or
mov
out
xchg
adc
addb
dec
push
into
sahf
sbb
inc
sbb
popa
imul
push
or
cs
mulb
lcall
cs
sbb
adc
in
insl
and
into
inc
sub
lods
xor
adc
insl
in
pop
sbb
jo
daa
bswap
cmp
aam
aaa
data16
stos
mov
mov
push
xchg
cmp
add
push
andb
sarl
imul
repz
adc
push
inc
jb
pop
outsl
xchg
or
and
sub
adc
imul
sarl
jno
or
cmp
inc
aas
push
xor
insb
xchg
mov
bound
jecxz
loope
roll
movsb
sbb
adc
popl
jns
sbb
pop
rcll
stos
scas
pop
push
xor
jo
mov
mov
imul
and
add
roll
cmpsl
sbb
pop
jns,pn
pusha
mov
inc
aaa
ja
xchg
push
mov
sti
push
inc
sub
pop
pop
cs
mov
loopne
jno
push
addr16
jae
cwtl
stos
shll
add
ss
imul
pop
outsb
adc
cmp
mov
inc
push
outsb
push
test
ficoml
outsl
stos
add
xor
shrl
adc
mov
es
and
insl
mov
jmp
jg
or
jae
scas
ds
in
add
push
inc
and
mov
cmp
das
mov
jne
push
addr16
and
inc
cmpsl
arpl
or
mov
imul
sti
inc
cmp
popa
ss
and
inc
das
rcll
cmpsb
pop
loopne
cmp
movsb
imul
ret
lea
shll
mov
popa
inc
fadds
xchg
iret
or
scas
jle
dec
lea
adcl
mov
addr16
decl
mov
and
jo
ret
mov
lcall
sbb
ja
add
push
movsb
imul
je
jle
add
dec
fldl
movsb
loop
inc
jp
and
pusha
mov
daa
xchg
daa
js
adc
aas
mov
pop
inc
cmp
das
add
stos
subl
ret
fisubrs
mov
push
dec
sarb
inc
push
out
out
inc
add
pop
adc
ss
out
add
jb
adc
jbe
fimuls
shrl
pop
dec
mov
movsl
loope
ds
add
into
jle
jg
shlb
xorb
jbe
sub
sbb
mov
fwait
sbb
in
mov
das
dec
pop
sbb
bound
mov
xchg
mov
mov
and
addr16
mov
sbb
stos
pusha
mov
bound
push
xlat
bound
jne
pop
and
daa
ficoms
jecxz
mov
lret
lods
mov
outsl
xchg
ret
pusha
xor
movsl
push
xor
pop
pop
out
bound
inc
pop
das
or
push
arpl
mov
jp
mov
push
push
mov
push
js,pt
addl
or
or
sbb
jmp
sti
xor
call
mull
or
or
jmp
es
add
jbe
movb
xchg
sub
cs
cmp
push
ja
jbe
insl
adc
aaa
sub
ffree
sbb
cmp
push
ret
push
dec
adc
jmp
push
push
fidivl
sub
adc
sbb
mov
adc
aad
sbb
adc
sub
mov
jbe
aas
bound
es
addr16
addr16
and
cmp
inc
or
sub
sub
adc
out
mov
add
sbb
mov
jle
or
dec
shll
aas
sbb
adc
inc
fwait
mov
test
xor
sbb
sbb
xchg
cmp
adc
outsl
mov
es
lcall
iret
push
imul
outsl
das
jns
inc
jecxz
bound
dec
jl
inc
sahf
insb
mov
xor
daa
or
pusha
flds
sub
dec
pop
adc
mov
or
xor
stos
or
daa
ret
pop
push
outsl
add
or
inc
ret
fwait
sbb
inc
and
jo
les
popa
sbb
mov
ja
mov
or
pop
push
outsb
pop
inc
xor
outsl
add
sub
lret
pop
cwtl
pop
jns
push
add
jle,pn
subb
mov
cmpsl
push
andb
add
out
push
insb
rolb
ds
push
add
cmp
in
push
push
out
popa
xor
adc
hlt
inc
popa
push
add
jo
stos
sbb
jae
inc
loop
cmp
push
jp
iretw
mov
push
insb
sub
inc
cmp
jne
jo
xor
cmpsb
inc
lods
fisttpl
adc
adc
dec
push
mov
loop
or
inc
xor
pop
fadds
sub
bound
pop
mov
inc
int3
scas
insl
xchg
je
sbb
add
push
test
sbb
mov
xchg
lahf
data16
mov
push
dec
push
push
sub
scas
dec
jp
sub
inc
cmp
pop
push
mov
pop
and
in
adcb
stos
mov
push
imul
xchg
add
xor
and
sarl
xchg
cmp
fwait
iret
dec
inc
stos
mov
and
aas
jno
mov
sbb
sub
push
inc
fwait
or
es
or
xor
pop
cmpsb
mov
mov
inc
lcall
and
inc
or
push
ljmp
adc
jmp
cmp
or
fwait
jnp
push
add
adc
test
mov
jmp
loope
xchg
push
push
mov
dec
mov
add
mov
or
push
push
push
xchg
mov
jmp
or
push
pop
int
data16
ds
xchg
xor
add
pop
add
push
dec
xor
mov
aaa
dec
and
pop
pop
add
outsl
jb
sub
mov
js
mov
sbb
xchg
push
cltd
mov
imul
xchg
scas
push
inc
bound
mov
push
pusha
cmp
mov
xor
pop
scas
outsl
addl
inc
sbb
push
out
add
cmpsb
jg
adc
push
mov
jp
sbb
adc
or
mov
jbe
mov
cmp
xchg
outsb
popw
jbe
xor
mov
push
add
dec
mov
rep
push
sub
sub
adc
pushl
mov
cmp
adc
es
cmpsl
rcl
cmp
lret
inc
pop
mov
mov
add
add
fildl
dec
push
xor
lret
or
movl
cs
mov
push
sub
push
ret
arpl
pop
pop
jecxz
add
testl
adc
or
xlat
dec
xchg
dec
in
adc
dec
sub
inc
es
xchg
push
push
sub
aas
fwait
jbe
bound
popa
jnp
ds
mov
xor
xchg
or
sub
inc
insl
stos
pop
mov
cs
cmpsl
jnp
inc
push
mov
sbb
out
cmp
push
ds
shrb
mov
imul
scas
jg
mov
pop
jp
push
stos
inc
xchg
shrb
in
out
mov
rolb
dec
add
pop
mov
jae
xchg
xchg
mov
mov
out
and
repnz
imul
mov
sub
jp
sbb
ja
bound
jae
sub
xor
add
ja
cmp
jno
inc
pop
dec
lea
lds
sbb
bound
add
push
adcl
lahf
adc
loopne
mov
xchg
pusha
cli
rolb
mov
fldt
push
mov
cmpsb
pop
outsl
push
imul
stos
adc
sbb
xlat
and
xor
push
push
dec
add
mov
and
pop
mov
xor
jo
arpl
cmpsl
and
outsl
push
fwait
adc
cmpsl
pop
adc
notl
jmp
cs
jecxz
pop
ja
adc
call
sbb
mov
imul
sbb
add
lret
daa
mov
add
lcall
fadds
arpl
xchg
xor
pop
arpl
daa
mov
lds
lahf
jbe
sub
xor
xchg
addr16
push
pop
mov
xchg
mov
xchg
cmp
pop
sub
ss
or
pop
mov
ljmp
jo
push
sub
xor
mov
inc
data16
daa
out
mov
insb
inc
and
arpl
inc
fwait
mov
push
cs
sbb
fisubrl
fwait
addr16
sbb
fbld
sbb
inc
or
movsb
scas
stos
or
push
push
cmpsb
mov
push
cmp
sbb
lods
dec
popa
mov
mov
adc
imul
mov
add
andb
add
adc
xorps
push
in
sar
push
push
push
push
mov
lret
sarb
fldt
dec
pop
xchg
pop
or
xor
xchg
insl
arpl
ret
aas
iret
inc
and
inc
jecxz
dec
xor
adc
and
fldl
pop
jnp
push
ret
add
pop
mov
dec
add
daa
or
arpl
xchg
cwtl
adc
lcall
das
push
popa
jno
sub
shlb
fisttpl
in
cs
shlb
xor
inc
pop
decl
mov
push
out
or
pop
pop
outsl
pop
out
das
imul
and
adc
test
mov
xchg
add
or
sbb
xor
push
imul
jle
mov
notl
inc
pop
or
ja
sub
mov
out
push
rol
sub
pop
arpl
pop
pop
test
aas
neg
cmpl
xor
stos
pop
and
jp
repnz
push
adcl
xor
in
mov
or
adc
lahf
adc
sub
mov
sub
stos
sbb
ret
xor
pop
add
add
mov
mov
fadds
loopne
jbe
mov
cmpsl
lahf
mov
jg
mov
test
dec
add
add
and
scas
push
push
das
mov
cmpsl
xchg
scas
or
pop
sub
xor
lahf
aaa
arpl
adc
aas
sbb
cmpsb
inc
movsl
jmp
adc
arpl
pop
cmp
sub
sub
adcb
or
inc
mov
jmp
lcall
cmpsl
pop
test
loop
dec
fucomip
and
push
aas
divl
adc
mov
iret
pop
adc
adc
jne
and
pop
dec
sbb
adcb
push
xor
jp
outsb
and
cmp
arpl
aam
pop
idiv
push
das
add
shll
dec
outsl
rorb
push
mov
divb
in
loopne
pop
pop
jg
fsubrs
jnp
cmp
push
mov
adc
ljmp
lea
arpl
add
imul
sbb
stos
and
arpl
inc
lods
or
pop
sub
and
out
out
or
push
push
out
imul
xor
sub
mov
push
test
jae
fstl
jo
add
sub
push
adc
cmp
xor
jnp
mov
aaa
push
mov
sub
push
pop
xchg
das
stos
aam
inc
jo
pop
and
adc
jae
dec
dec
push
iret
add
negb
ljmp
or
loopne
shlb
pop
cmpsl
stos
add
dec
xchg
mov
lods
test
or
xlat
or
das
shll
mov
push
aas
mov
jecxz
and
cmp
lds
xor
popa
sbb
addr16
lcall
sbb
adc
or
imul
pop
adc
or
xor
xchg
push
adc
fwait
xchg
push
popa
xchg
mov
mov
or
add
and
inc
jg
dec
sti
lcall
cmp
aaa
mov
pop
fwait
cmp
add
imul
dec
or
sub
push
inc
imul
cmpl
sbb
add
add
sbb
push
xchg
popf
cmp
pop
roll
ficoms
stc
cmp
sub
push
push
dec
xor
jae
cwtl
xchg
test
inc
imul
cmpsb
xchg
push
xor
sub
shll
jae
pusha
loopne
fstl
sub
dec
sbb
or
xor
push
dec
or
ret
jb
mov
sub
adc
fisubrl
or
add
push
push
sub
mov
inc
pop
int
fists
xorb
mov
sub
mov
sub
gs
insb
inc
push
dec
es
or
xor
cltd
imul
adc
xchg
inc
jo
push
daa
and
jnp
nop
test
fwait
xchg
push
push
rcl
int
sbb
sbb
mov
ficomps
inc
insb
mov
shrl
jbe
cmp
inc
sbb
notb
mov
pusha
clc
repz
jne
cltd
sbb
push
jecxz
mov
xorl
adc
orl
movsb
inc
xlat
lods
xchg
loopne
sbb
mov
add
add
push
sbb
in
xchg
insb
pusha
movsl
gs
pop
aam
rcll
xchg
pop
push
cmp
nop
push
xorb
lret
repz
mov
xor
stc
inc
jne
rcll
push
and
dec
daa
repnz
sbb
mov
icebp
testb
dec
push
push
push
inc
jo
ds
gs
jmp
testb
jb
cmp
pop
push
movsb
push
dec
inc
outsl
arpl
inc
mov
dec
popa
cwtl
jns
jno
nop
sbb
mov
or
mov
aaa
pop
inc
in
push
inc
dec
adc
dec
push
dec
push
dec
or
push
sub
cmp
fmuls
js
sub
jne
bound
das
pop
and
and
lds
dec
adc
mov
sub
jns
sahf
outsl
and
sbb
push
sbb
adc
pop
sbb
test
mov
insl
pop
inc
jae
inc
push
fwait
sbb
jne,pn
xor
imul
rol
sbb
dec
out
adc
or
or
pop
mov
pop
dec
jp
or
or
push
inc
mov
xchg
push
inc
push
aaa
inc
xor
cmp
bound
insb
and
cmp
dec
push
clc
imul
add
insl
mov
mov
mov
push
ret
mov
adc
roll
lcall
mov
mov
in
dec
fiadds
addr16
xchg
inc
push
sbb
push
sbb
push
outsl
popf
es
xchg
lea
repnz
repz
sbb
sbb
leave
iret
xor
add
adc
pop
pop
dec
xor
mov
mov
lret
icebp
stc
xchg
pop
decb
imul
inc
mov
cmp
xorl
int3
jl
dec
dec
imul
push
inc
scas
fiadds
push
insb
xchg
xor
stc
popa
push
in
daa
pop
push
dec
inc
mov
test
into
les
add
out
jp
xor
inc
or
das
add
push
inc
add
jl
pop
je
out
push
pusha
sbb
add
or
xchg
rcll
pop
out
js
lret
dec
add
sub
add
out
pop
or
or
cs
add
pop
xadd
icebp
or
addr16
push
bound
push
or
leave
inc
sbb
push
cmc
or
xchg
pop
mov
jg
lret
inc
or
or
xor
in
sahf
or
iret
or
jg
xor
jle
lcall
xchg
adcl
push
and
loopne
pop
dec
push
push
xor
add
pop
inc
inc
xor
daa
add
ficompl
addb
xor
jo
loopne
push
or
in
scas
pop
ss
aad
or
gs
adc
sub
pop
pop
adc
jo
push
jno
or
push
xchg
push
add
push
or
sub
loope
dec
shll
xchg
or
sub
adc
add
fwait
test
iret
xor
push
and
push
test
int3
mov
add
ss
jne
or
or
xor
or
pop
dec
dec
jo
push
jge
cmc
or
mov
inc
push
mov
xchg
mov
add
orb
add
add
add
or
and
jl
push
add
insb
adc
dec
xchg
arpl
pop
rclb
pusha
pushf
sbb
cmp
outsl
jne
imul
popa
insb
es
les
bound
or
mov
gs
subl
je
insl
dec
mov
and
test
insl
sbb
push
mov
in
adc
js
inc
sbb
or
rorl
imul
fcmovnu
push
fwait
sub
ret
jle
outsl
mov
xchg
jbe
inc
imul
mov
es
imulb
sbb
xchg
pop
dec
imul
mov
lock
xchg
push
jno
imul
les
test
push
push
pop
sarl
shlb
dec
imul
inc
out
xor
inc
cwtl
and
popf
fcomp
or
inc
xchg
popf
inc
js
xchg
sbb
mov
xchg
dec
inc
dec
inc
daa
push
test
ficompl
push
xchg
or
and
daa
and
ret
stos
cwtl
inc
and
sahf
fistl
lock
pop
pop
arpl
fistl
pop
mov
gs
inc
and
data16
and
sti
jo
add
enter
cld
pusha
or
jne
insb
movsb
sub
add
orl
pop
adc
loope
cmpl
sti
mov
rcll
dec
fs
mov
and
adc
xor
mov
std
inc
push
jmp
mov
psrld
pusha
aam
sbb
gs
add
or
notb
sbb
insb
or
xor
popa
sbb
shll
push
aam
fcompl
cmp
inc
rolb
xor
inc
cmp
push
fcmovnb
jbe
loope
inc
cmp
sbb
mov
sbb
popf
cmp
movsl
xchg
sbb
lea
xchg
aas
inc
sub
push
inc
sbb
sbb
aad
imul
andb
push
push
aaa
pop
push
push
push
mov
push
push
sub
sub
addb
das
outsb
adc
mov
dec
pop
xor
or
mov
in
sub
sbb
add
mov
bound
sub
and
adc
arpl
inc
movsl
lds
cmp
add
adc
push
pop
push
or
test
inc
cltd
adc
adc
pop
scas
cmp
loopne
mov
adc
and
orl
ja
inc
outsb
mov
lret
push
adc
jne
imul
adc
inc
scas
mov
xor
fwait
cs
and
loope
je
mov
jns
mov
pusha
xor
mov
push
and
xor
rcll
movsl
cmp
out
sub
sarb
and
dec
add
sbb
rcrb
pop
jae
push
sbb
insb
inc
fisubl
enter
push
push
or
insl
xor
mov
insl
xor
xchg
add
mov
dec
and
outsl
jbe
jecxz
cmp
dec
sub
or
ret
jle
cmp
dec
pop
outsl
negb
int
cld
daa
shrb
shll
sub
and
or
cs
mov
mov
ja
or
jg
roll
or
pusha
arpl
dec
pop
dec
mov
or
les
dec
cmc
mov
aaa
mov
aas
rclb
and
ret
int3
into
lods
pushf
js
inc
insb
pop
int
jb
xor
add
and
push
add
dec
cld
fwait
jle
pop
mov
dec
push
xor
enter
jo
cmp
out
push
bound
pop
pop
rolb
rclb
popf
sbb
sbb
dec
push
inc
inc
mov
add
adc
gs
sbb
cmp
or
and
jle
push
outsl
or
and
test
push
push
mov
push
jo
shr
jae
dec
lret
inc
repnz
lods
or
rcl
or
daa
dec
mov
lods
ret
cmp
cmp
xchg
adc
push
dec
mov
mov
cmp
jne
xchg
sti
sub
arpl
adc
jbe
lahf
mov
push
lock
imul
and
add
pushf
pop
sbb
sub
or
sub
adc
push
xor
sbb
sbb
and
inc
orl
and
jne
arpl
add
sbb
add
mov
or
stc
daa
sub
fsub
xchg
sti
sbb
push
daa
inc
add
jnp
arpl
outsl
jo
xchg
adc
xchg
stc
inc
imul
dec
cmp
dec
icebp
loope
adc
repnz
and
sub
stos
cmp
ljmp
cmp
push
test
insl
lods
mov
xchg
inc
push
dec
inc
push
std
orb
push
pop
dec
add
sbb
leave
and
fidivrl
jmp
push
jns
jnp
pop
inc
inc
jno
inc
push
popf
fwait
add
pusha
cs
call
jecxz
xchg
sub
sub
jne
daa
dec
xchg
nop
sbbl
pop
sbb
shr
daa
adc
dec
and
inc
cmp
mov
ss
inc
insl
xor
frstor
sbb
and
mov
dec
add
and
dec
ss
push
xchg
imul
and
pop
or
addr16
insl
jae
push
jo
shlb
xor
pop
mov
test
pop
lcall
loope
enter
cwtl
sub
pop
pop
inc
sub
and
ret
lds
rclb
jbe
pop
insl
lea
xchg
push
mov
inc
cs
and
inc
xor
xor
sbb
imul
ret
outsl
outsb
addr16
push
pop
loop
pop
xchg
sbb
or
push
rcrl
cwtl
pusha
mov
leave
adcb
out
pop
and
out
scas
jge
dec
or
jne
fwait
push
mov
frstor
pop
jo
pusha
cmp
xor
iret
orl
add
and
fcoml
add
pusha
or
sbb
mov
mov
push
dec
cmpsl
shll
aas
jp
les
xor
inc
loopne
daa
push
mov
add
or
inc
and
lock
das
sbb
imul
jae
or
icebp
dec
jae
iret
sarl
sbb
mov
mov
adc
scas
fwait
push
pop
arpl
test
sbb
cmpsb
inc
pop
lretw
sub
adc
and
sbb
sbb
jne
mov
mov
divl
and
and
xchg
outsb
loope
sbb
sbb
imul
inc
in
and
or
mov
inc
faddl
orw
inc
and
pushw
sub
notl
push
mov
dec
out
pop
jo
inc
adc
add
addb
mov
lods
dec
mov
sbb
andl
jne
push
popa
pop
enter
inc
inc
movsl
pusha
leave
push
dec
inc
push
outsb
int3
sbb
adc
cmpsl
lret
pop
cmp
je
adc
pop
stos
shll
sbb
lea
adc
add
and
ret
sub
push
sub
test
jge
and
stc
inc
rclb
adc
aaa
inc
mov
mov
push
fwait
sbb
sbb
pop
inc
and
dec
loop
adc
mov
jnp
daa
mov
leave
inc
inc
push
insl
cs
mov
sub
test
sub
jbe
or
sbb
aad
inc
andl
leave
leave
push
inc
adc
and
push
and
fadd
push
xchg
dec
pop
adc
inc
and
shll
sub
dec
sti
insl
rorl
shrl
sbb
les
lods
sbb
pop
mov
add
jg
mov
mov
imul
and
pop
xchg
push
sub
mov
inc
mov
cltd
popa
popa
or
js
repz
jge
inc
fldt
test
or
or
test
adc
jp
xor
js
jns
aaa
push
jo
xchg
dec
adc
add
inc
fs
dec
test
cs
xor
test
add
xchg
or
sub
mov
rolb
imul
and
sub
int3
test
add
lods
fidivs
add
aad
mov
pop
push
push
lods
and
or
inc
adc
mov
and
outsl
add
add
add
pop
inc
sub
aas
es
fldl
popl
add
push
mov
add
lods
and
adc
xor
mov
in
pop
add
rolb
add
add
pop
movups
pusha
scas
mov
mov
aas
and
push
xchg
ret
aas
sbb
push
loopne
inc
dec
inc
inc
adc
mov
inc
push
inc
js
or
push
push
adc
push
rorl
ds
inc
jae
inc
xor
imul
out
dec
es
sub
sub
orb
push
nop
lahf
pop
dec
lcall
add
xchg
in
push
gs
jbe
jae
aad
bound
push
daa
rorb
loope
mov
cs
and
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
clc
stc
inc
add
cli
inc
add
xor
