mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
ljmp
add
jb
gs
push
jns
je
insl
add
mov
xor
add
inc
outsb
jae
inc
push
popa
jb
incl
xor
cs
or
lcall
push
outsl
jb
dec
outsb
je
mov
fildl
xorb
jg
test
insl
insb
ss
push
data16
cmp
mov
gs
cwtl
mov
xor
das
add
jns
addr16
in
fwait
shrb
push
int3
fs
call
adc
push
outsl
imul
push
sub
cld
out
xor
out
sbb
adc
ss
icebp
add
cmp
push
inc
jns
inc
pop
xlat
sbb
mov
test
push
jbe
inc
js
outsb
fs
jne
mov
mov
jb
dec
arpl
inc
mov
add
jb
mov
fnstenv
sbb
push
int3
das
clc
or
fsts
ret
in
or
xor
loopne
je
jnp
rcll
fcomps
jle
nop
adcl
inc
adc
jae
jl
push
cmp
or
daa
push
shll
or
push
popa
push
popa
in
cmpsl
fisttpl
pop
or
and
fcos
adc
push
inc
insb
popa
jae
adc
push
daa
mov
daa
dec
push
inc
push
cld
pop
repnz
push
dec
push
int3
cs
add
adc
push
pop
sub
cmp
fs
inc
xor
add
push
xchg
fnstenv
add
sbb
xlat
and
cmpsb
loopne
mov
jb
popa
arpl
adc
cmp
orl
push
andps
jns
loopne
enter
es
adc
push
popa
call
mov
mov
dec
data16
and
es
insl
jo
inc
mov
add
xchg
pop
enter
outsl
xor
incl
scas
pop
or
sbb
cmovg
ret
mov
imul
pop
push
cltd
jbe
mov
cld
hlt
fs
in
inc
push
add
sub
scas
sti
add
popa
je
jge
jbe
sbb
push
mov
arpl
movsb
adc
mov
push
in
push
in
push
ss
or
lahf
out
add
push
loopne
push
ja
add
add
call
push
inc
negb
inc
xor
mov
xchg
push
arpl
mov
das
rorb
daa
daa
and
pop
dec
jns
fsts
sbb
lahf
insl
in
mov
pmulhw
sbb
pop
xlat
iret
leave
lcall
psadbw
addr16
maskmovq
pop
clc
mov
xchg
sub
sti
call
xchg
push
dec
add
jmp
in
mov
mov
loopne
pusha
jg
bound
arpl
sbb
inc
inc
aas
cmp
fcmovu
add
sub
add
cwtl
loop
insb
add
sub
dec
add
inc
je
add
bound
lcall
push
inc
in
and
jecxz
sub
loopne
je
dec
jnp
in
cmovae
adc
jle
jne
xor
sub
mov
or
pushf
xor
ss
push
xor
mov
neg
xchg
cmp
inc
adc
js
add
xchg
cmp
or
push
cmp
jb
adc
add
jno
add
sbb
nop
mov
das
and
rcrl
fcoml
mov
outsw
add
push
sub
push
xchg
or
jp
aad
xor
push
push
push
or
jae
outsl
insl
jae
ffree
lret
pushf
push
inc
add
add
cmp
adc
aad
inc
inc
fs
in
in
xchg
cmp
add
push
add
cmp
mov
or
add
adc
popa
add
xlat
cmp
or
imul
and
sbb
push
nop
add
fldl
pusha
sbbb
or
xor
add
imul
push
mov
jmp
cmp
xchg
or
pop
pop
pop
pop
jnp
inc
test
ret
push
nop
adc
sub
add
xor
push
inc
jno
push
ret
stos
add
add
jecxz
or
mov
sub
push
ficoml
test
cmp
pop
loopne
cmp
adc
gs
shl
add
call
outsb
jb
subb
or
lods
in
dec
jmp
addr16
inc
push
lahf
pop
adc
cwtl
or
jle
insb
loop
jne
mov
xchg
test
inc
gs
or
inc
gs
cmp
or
jo
lods
mov
push
clc
icebp
call
fnstsw
jnp
lods
mov
enter
outsb
fs
jb
and
sub
or
ja
ljmp
push
pusha
add
or
daa
popl
rep
jns
in
rcrb
and
jmp
mov
mov
or
or
fsubs
shlb
das
and
inc
and
clc
jmp
mov
out
mov
cmpsb
ja
adcl
adc
pop
ja
pop
in
daa
sub
cs
push
push
jl
aam
in
mov
lock
adc
jne
xchg
clc
mov
cmp
or
inc
push
mov
pop
sbb
mov
je
sbb
jmp
shrb
pop
xor
call
shlb
popa
int3
sub
mov
jecxz
or
aas
pop
inc
xor
pop
mov
push
testl
push
jno
pop
mov
lock
sub
or
dec
arpl
push
dec
push
pop
das
or
out
or
nop
in
nop
es
or
adcb
hlt
imul
test
push
push
push
ljmp
dec
lds
cmpsb
in
add
mov
in
aaa
sbb
insl
arpl
jl
or
popa
push
mov
mov
push
es
or
sbb
pop
lock
adc
insb
test
aaa
or
push
cltd
loopne
or
arpl
aaa
dec
repnz
pmaxsw
lcall
push
dec
adc
jno
push
mov
and
jae
jbe
cmc
sbb
add
add
xor
adcb
dec
movsl
push
ja
push
and
push
adc
mov
pop
push
fldenv
xchg
xchg
pushf
mov
mov
sub
sahf
js
xchg
in
enter
sub
add
inc
cwtl
outsl
dec
imul
pusha
xchg
xor
outsl
es
outsb
imul
fs
rclb
mov
jbe
xchg
negb
rcrl
adc
or
xor
push
lock
xor
and
mov
xchg
xor
jns
cld
push
test
add
aad
popa
sub
andl
push
sub
mov
mov
jecxz
sub
popa
ja
data16
or
cmp
mov
stos
pop
out
push
inc
sub
or
xlat
ljmp
adc
cmp
imul
inc
pop
sub
ss
adc
jb
mov
or
imul
jns
adc
jns
push
or
sbb
pop
dec
imul
dec
outsl
fs
hlt
push
fstps
das
sbb
pop
fsubs
or
ds
gs
clc
fcoms
xlat
mov
pop
or
das
dec
int3
popa
cltd
or
das
adc
cwtl
jbe
lds
sub
push
or
das
sti
or
xchg
inc
sbb
test
or
insl
sub
adc
and
les
push
or
enter
pop
in
adc
ffreep
add
xchg
shlb
imul
inc
cwtl
xchg
lock
inc
ret
mov
and
xchg
xchg
jbe
push
nop
mov
test
xchg
xchg
je
insb
push
fs
pop
pop
fsubl
in
rcrb
sbb
dec
popf
pushf
pushf
pushf
dec
mov
cmp
xor
cmp
cmp
and
out
jb
jb
sbb
adc
in
jbe
mov
fcmovne
in
in
lods
push
add
daa
daa
mov
cld
mov
daa
daa
daa
daa
hlt
lock
call
push
add
mov
and
or
mov
adc
sub
je
movzwl
mov
inc
inc
pop
ret
das
mov
idivb
in
paddusb
add
adc
lock
icebp
bound
dec
dec
and
insb
xchg
and
imul
and
xor
xor
sub
nop
sbb
and
imul
outsl
mov
popa
insb
and
je
popa
inc
inc
gs
outsl
dec
gs
test
mov
mov
fdivs
gs
insl
enter
aas
lock
and
and
arpl
and
push
test
jae
and
andb
xchg
arpl
imul
dec
nop
dec
jae
jle
popa
jbe
sarl
xorb
outsb
and
fistpl
iret
and
fs
pop
pop
jge
insb
cmc
mov
jnp
arpl
sbb
jbe
mov
fstps
dec
xorb
outsl
decl
mov
mov
mov
dec
add
inc
or
and
imul
adc
sahf
fldl
cmp
inc
adc
mov
xor
sbb
fildll
fildll
add
pop
mov
sbb
cs
jp
add
jp
cmp
inc
and
and
sub
inc
dec
sub
mov
push
lahf
push
pop
aad
xor
xor
cmp
xor
cs
cmp
imul
jmp
lret
jns
fistpll
mov
fildll
jl
push
cmp
add
js
and
mov
xor
add
dec
mov
js
mov
add
nop
call
cmp
mov
hlt
ljmp
mov
jmp
mov
shr
movzbl
mov
jg
rol
and
pop
mov
and
icebp
cmpsb
ret
es
ljmp
push
es
and
add
xchg
mov
cmp
mov
push
add
divl
loopne
sbb
mov
jnp
push
ret
cmpl
inc
adc
mov
cld
add
orl
adc
dec
add
cld
mov
cmp
dec
pop
mov
sti
push
and
sub
call
ret
cmp
mov
inc
sbb
push
push
push
push
out
or
rcr
xor
push
mov
sbb
loop
mov
idiv
add
sarb
ret
push
sub
mov
sub
mov
mov
sub
sbb
xor
fadd
mov
cmpb
jmp
insl
pushl
and
push
or
int3
ficompl
add
jbe
orl
or
pop
mov
shll
push
push
push
mov
lea
movb
sbb
fwait
and
loopne
pop
mov
movb
outsl
or
mov
ja
pushf
sbb
movl
pop
mov
jo
inc
ss
add
ret
pop
pop
pop
icebp
sti
ja
pop
faddp
add
mov
sub
jae
hlt
mov
fidivrs
adc
mov
push
and
or
test
jne
push
sub
push
js
add
xor
jmp
or
cli
imulb
cmp
in
push
push
lea
ja
outsb
or
jne
push
push
mov
jmp
cmp
jbe
sub
add
jmp
test
jne
lods
fimull
and
fisubrs
rorl
inc
loopne
repnz
call
jecxz
jmp
fidivs
loope
pop
shll
add
cmp
jbe
ljmp
out
mov
adc
xchg
or
jo
xor
push
mov
cmp
mov
pop
test
jo
fs
mov
stos
inc
push
fistps
jae
mov
add
dec
and
push
in
cmp
jae
fdiv
pusha
lods
movsb
sbb
add
lea
or
pop
push
mov
rolb
lds
pop
or
pusha
or
lds
mov
in
or
std
sub
add
jbe
ret
push
addr16
lcall
sti
or
mov
shr
cmp
jb
addb
lcall
and
mov
into
or
loope
and
cmp
jp
mov
dec
les
lock
pop
push
lea
mov
inc
or
lahf
mov
fisubl
sub
idiv
je
dec
and
mov
adc
mov
add
sarl
or
jbe
mov
cmp
insl
pop
mov
adc
es
mov
lods
pusha
and
and
rcll
mov
pause
jns
pop
fwait
or
aas
je
fwait
jae
lods
cmp
cmp
imul
or
insb
mov
or
mov
clc
ja
jo
mov
add
js
lcall
int
loopne
addb
add
cmp
jne
mov
movsl
ret
push
jne
btr
mov
push
jle
pusha
or
jb
mov
dec
add
cli
lea
mov
jo
jmp
sbbb
das
cmp
jb
mov
mov
sbb
add
out
sub
sub
cmp
and
inc
sbb
fbld
dec
rclb
mov
fs
cld
notl
clc
jg
lea
mov
xor
das
mov
mov
movl
clc
jae
lea
imul
mov
xchg
fisttps
dec
sub
idiv
clc
mov
movsb
or
faddl
jno
mov
lea
mov
shr
mov
in
sbb
std
push
je
loope
rol
or
jmp
mov
cmp
or
push
adc
mov
shl
push
xor
push
js
jb
adc
fdivs
xchg
mov
jmp
mov
dec
cmp
scas
mov
or
aaa
int
xchg
inc
inc
cmp
movl
xchg
adc
test
push
pop
xorb
xor
mov
setno
inc
fcmovnb
nop
divl
test
pop
inc
jns
ret
mov
push
push
mov
test
roll
test
add
mov
jne
subl
je
imul
inc
inc
inc
fadds
dec
shll
test
imul
mov
aad
inc
adc
and
sub
and
mov
push
mov
iret
add
lea
lds
xchg
scas
ljmp
jmp
xor
mov
aam
inc
push
push
adc
out
pop
pop
lock
fmull
scas
testl
sub
xor
testb
jne
cmp
in
je
lea
and
ss
xchg
mov
xlat
mov
test
pop
sbb
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
sub
adc
in
mov
lahf
mov
or
cmp
sbb
add
loopne
movsl
movl
js
mov
lret
addb
mov
adc
push
mov
shlb
in
or
in
or
xlat
pop
enter
sub
sub
xor
clc
das
mov
ret
jg
or
jmp
pop
movsb
test
lea
push
mov
loop
roll
idiv
and
add
hlt
sub
jbe
clc
iret
mov
call
xchg
xor
je
fimuls
push
and
cmp
push
mov
cvttps2pi
cmp
jb
sbb
and
and
sub
adc
push
das
jo
add
and
stos
jmp
or
xchg
in
xor
cmp
mov
push
add
mov
mov
or
cmp
imul
push
mov
add
or
shll
pop
data16
mov
roll
xlat
out
icebp
mov
pop
clc
addl
sahf
sub
xor
push
scas
inc
mov
out
xchg
out
sbb
imul
add
sbb
add
ljmp
and
pop
xor
subl
sarl
aaa
cmpb
ja
cmp
xchg
pop
mov
and
add
xor
sub
adc
fiaddl
add
lea
ja
andl
sbb
pop
push
add
push
jle
push
lea
xchg
mov
push
pop
add
sub
jg
or
mov
jecxz
sbb
insl
pop
rcl
dec
iret
push
dec
mov
shll
popa
push
clc
jge
xor
add
negb
out
hlt
push
cmp
lea
jecxz
lea
in
mov
cltd
jae
neg
fldz
fstl
add
js
or
icebp
ffree
fincstp
outsb
mov
mov
hlt
mov
lea
add
mov
adc
test
jne
xor
stos
incl
sbb
aad
cmp
jb
mov
and
shrb
sbb
jg
mov
ret
and
adc
mov
or
pop
or
sbb
jmp
sbb
add
scas
shl
mov
add
fmuls
mov
clc
mov
xor
inc
pop
jo
mul
loopne
xor
cmp
faddp
jmp
mov
xchg
add
enter
mov
loopne
stc
fisubrl
jp
insl
inc
sbb
wbinvd
shrl
xchg
dec
push
nop
lret
mov
sbb
sbb
jb
pop
add
add
jb
test
add
lret
push
aas
mov
xor
aaa
cmp
adc
inc
add
icebp
mov
push
hlt
and
xor
mov
add
pop
cs
vmovaps
adc
in
mov
inc
inc
ds
mov
jo
push
loop
in
loop
movsb
in
rcrl
xor
outsl
shlb
test
adc
loopne
arpl
adc
cmp
ja
pop
or
push
lock
jg
add
push
jae
ss
mov
push
adc
ret
and
add
push
adc
negl
sahf
jne
push
testb
je
adc
das
nop
xchg
call
add
fimull
addr16
mov
cli
dec
cmp
test
fmuls
fcomps
idivl
fs
push
and
xor
mov
std
cmp
jne
test
daa
dec
movb
enter
push
add
jne
push
sbb
leave
cmp
in
in
mov
and
shlb
in
dec
out
pop
mov
dec
pop
in
mov
or
lcall
test
ljmp
setne
imull
cld
movsb
sub
aas
inc
sbb
out
sub
sbb
addb
out
mov
mov
mov
inc
mov
mov
stos
stos
push
pushw
mov
sbb
enter
dec
icebp
mov
pop
mov
cmp
jne
add
push
mov
outsl
aaa
adc
or
mov
add
dec
jne
js
mov
mov
mov
cld
mov
call
faddl
loopne
lea
lea
lea
icebp
fstl
inc
in
es
sub
add
jne
movsl
cltd
pop
and
mov
dec
or
cmp
gs
mov
je
aaa
sub
mov
test
pop
incb
xchg
jge
mov
push
jnp
dec
inc
hlt
adc
std
rcrb
jge
les
or
fs
inc
imull
fistpl
cmp
hlt
jb
fsubrl
mov
jl
jecxz
jg
sarl
jne
sahf
arpl
jl
jle
adc
aaa
and
mov
cmpb
jae
fstpt
dec
add
dec
aam
loope
mov
sbbl
jns
push
jmp
popf
es
xchg
in
pop
in
pop
cmp
adcw
inc
cmp
popa
in
xchg
das
mov
pop
test
je
orl
inc
cmp
mov
add
incl
mov
add
fmuls
xchg
xor
push
mov
das
ret
cs
dec
jne
bound
push
push
das
int3
loopne
stos
lea
in
lds
push
cmp
jl
pop
lock
clc
push
movb
les
jbe
sub
pop
and
sbb
xor
sbb
hlt
pop
pusha
push
mov
sub
pop
jmp
ja
add
jge
and
push
out
fiadds
and
int3
shr
enter
mov
loop
fucomp
jmp
mov
pop
push
retw
ds
jp
jno
aaa
dec
adc
in
jae
in
xchg
scas
mov
xchg
push
pop
xchg
sti
cli
je
dec
mov
jnp
jl
cmpb
negl
lock
pusha
leave
or
fdivr
lea
sarb
movl
adc
xchg
sahf
mov
mov
dec
out
in
loope
outsb
add
mov
mov
mov
scas
cmp
cli
mov
xchg
cmpl
xchg
or
subl
shll
or
lcall
push
test
jnp
add
mov
es
mov
and
pusha
outsl
pop
adc
sub
pusha
or
loopne
incl
add
je
dec
je
jmp
std
dec
push
divb
je
je
dec
push
in
mov
inc
cld
add
cmpl
js
xchg
pop
jl
jno
mov
cmp
stos
add
push
and
push
sbbl
pop
cmp
pushf
loop
push
ja
fnstsw
test
xchg
push
pop
push
jb
mov
inc
inc
xor
mov
je
lds
cmpsb
dec
cltd
add
push
idivb
xorl
dec
jne
mov
insl
inc
push
sbb
rcrb
ds
adc
rcrl
test
xor
mov
xor
add
jne
mov
fstpt
add
cmp
jbe
mov
scas
fcoms
cmc
bound
ret
aaa
jne
nop
sbb
mov
cmpl
push
jg
std
test
mov
in
inc
clc
or
repnz
lock
rcrl
add
add
data16
jae
mov
scas
rolb
call
jbe
pop
scas
enter
push
stos
mov
loop
push
in
loopne
add
mov
in
lods
push
xor
loope
lea
add
shll
into
jne
sbb
mov
xchg
jecxz
sbb
shl
xlat
mov
xor
div
imul
mov
or
push
adc
mov
adc
xor
cli
das
lods
movl
adc
mov
mov
xchg
push
in
cmp
or
repz
adc
rclb
aam
pop
push
push
mov
jne
mov
jmp
mov
add
call
cmp
jne
mov
ret
mov
adc
add
inc
or
or
or
and
stos
sbb
cmpl
ss
xchg
inc
mov
fistpll
fdivp
clc
mov
mov
cmp
je
mov
jno
push
xor
mov
jae
pop
jle
fdivrl
je
scas
pop
mov
popf
lea
pop
sbb
loope
cmp
xor
or
in
or
jo
dec
adc
repz
mov
fidivl
jo
jle,pn
jbe
lcall
addr16
jne
mov
test
je
test
je
push
fadds
fimull
or
inc
das
insb
jnp
mov
xor
jne
test
out
xor
ss
push
push
aas
dec
cwtl
test
sbb
mov
aas
pop
stos
pop
add
and
or
mov
cmp
cmp
rol
out
jmp
out
fwait
ljmp
xor
mull
lcall
mov
jge
mov
cmp
cmp
or
idiv
push
jmp
cmp
ja
movzbl
add
jl
adc
hlt
jno
pushf
sbb
mov
ret
push
push
push
lea
or
jne
pop
pop
jne
lret
mov
das
pop
call
xlat
ret
clc
xchg
pushf
testb
lock
jmp
xchg
add
cmp
je
cmp
ja
sub
jg
jmp
or
sub
jle
orb
fs
sarb
jecxz
adc
adc
cwtl
cmp
repz
lods
mov
leave
in
scas
fcomi
aam
mov
or
adc
pushaw
div
flds
in
jl
jl
rcrl
cs
shrl
lret
adc
jbe
pusha
sti
pop
sbb
push
add
clc
sub
pop
mov
push
testb
mov
or
or
cmpsb
mov
adc
cmp
and
add
add
pop
into
rcrl
adc
ret
mov
stos
jg
add
add
jnp
push
pop
cli
and
or
and
js
or
sub
cmp
loopne
add
sub
std
pop
dec
in
xlat
and
pop
jmp
inc
imul
dec
cmp
sub
mov
dec
mov
or
fsubr
fiadds
xlat
mov
pop
jmp
push
test
adc
mov
rcll
push
xlat
jbe
lcall
das
cli
or
mov
jmp
xor
sbb
jno
idiv
lock
xor
xor
outsl
fucomip
adc
pop
cmpl
add
jmp
pop
pop
pop
pop
jecxz
pop
adc
jo
dec
bound
andb
pop
pop
push
pop
add
outsl
add
pop
pop
in
pop
rorb
divb
push
shrb
pop
decl
int3
jmp
add
mov
add
sarl
dec
jmp
movsb
or
push
rclb
clc
in
mov
cmpsl
lds
lea
mov
iret
mov
fldcw
dec
cs
cmp
pop
push
sub
adc
xor
sub
jl
add
ljmp
or
push
add
fldcw
pop
inc
dec
cmp
movsl
sub
push
and
mov
inc
pmulhuw
fistps
or
lea
push
mov
push
adc
jmp
nop
push
mov
clc
insl
jne
mov
sbb
push
pop
ds
loopne
jne
push
subb
lods
es
push
sbbl
or
or
mov
push
dec
sete
push
movw
jo
aaa
xchg
add
add
outsb
add
mov
add
sub
in
xor
cs
cmp
xchg
push
mov
jb
inc
sbb
inc
dec
jmp
das
inc
jge
pop
outsl
mov
push
shlb
rorb
jo
and
jle
xor
sub
mov
push
fst
push
push
lea
stos
dec
clc
cmp
pop
je
mov
mov
jne
imul
pushl
inc
pop
inc
inc
out
sub
dec
jae
js
xchg
push
aaa
mov
in
loopne
jle
mov
scas
rorl
jge
popf
divb
dec
mov
imul
sarl
push
xchg
inc
jmp
push
xchg
sub
cmp
orb
jmp
lea
or
and
adc
mov
add
xlat
je
imul
push
cmp
add
push
insl
hlt
jmp
cmc
movsl
pusha
je
popf
mov
dec
pop
mov
add
add
push
dec
and
xor
and
imul
enter
lahf
or
sbb
inc
mov
fcoms
pusha
test
mov
inc
sbb
xchg
add
lea
mov
jmp
add
add
jmp
pop
cmovns
adc
or
outsl
call
push
sbb
fucomi
pop
cmp
cmp
aad
add
lods
sub
insb
push
or
mov
sbb
mov
subl
inc
daa
scas
incl
pusha
push
add
sarb
ret
push
push
adc
push
push
int3
call
enter
hlt
sbb
dec
jle
pop
call
adc
std
add
lock
xor
jmp
cmp
je
inc
imul
xor
and
sub
adc
sub
test
pusha
roll
dec
push
push
imul
mov
add
xor
and
insl
push
das
or
ja
and
addb
push
jne
test
lret
mov
lock
scas
repnz
fucomp
adc
mov
xor
dec
sbb
lret
jbe
mov
sti
lret
mov
inc
inc
sbb
xchg
adc
pop
decb
je
enter
jne
dec
je
fcoml
jg
cwtl
pop
add
cmp
jmp
mov
outsl
push
xchg
adc
pop
and
je
mov
cmp
jne
push
adc
loope
cmp
adc
add
add
cmp
cmp
jne
add
decb
jmp
sbb
push
jae
icebp
and
int
aas
pop
cmp
in
cmp
add
ljmp
fstl
mov
and
fldt
add
shl
fisubrl
notb
jl
or
mov
sarb
mov
and
inc
lea
jns,pn
out
xchg
sbb
sbb
push
adc
jns
out
adc
or
pop
cmp
je
push
push
or
push
add
or
or
mov
cmpsl
mov
mov
xor
mov
mov
jnp
add
xchg
pop
pop
push
add
jae
ficoml
xor
sbb
dec
fs
test
cli
add
loop
pop
rorb
test
sub
cld
add
je
add
cltd
cld
or
xchg
sbb
pop
lret
je
scas
mov
jmp
call
addr16
push
adcb
fidivrs
in
push
sbb
or
cld
and
cmp
insb
mov
fs
push
ss
sub
and
nop
push
pop
pop
lock
lea
inc
add
punpckhbw
andl
jmp
sbb
xor
adc
sub
cmp
je
mov
repz
push
sub
je
and
je
je
das
repz
je
xor
arpl
push
push
data16
pop
pop
sub
inc
or
jg
or
cmp
ja
lea
add
add
gs
pusha
mov
mov
jge
add
js
incl
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
addr16
sahf
popa
jb
mov
insl
jle
popa
mov
add
adc
shl
ror
hlt
mov
pop
xor
shr
mov
testl
out
mov
mov
in
sub
inc
mov
rol
scas
jmp
jae
or
pop
inc
xchg
cmc
push
dec
mov
and
shlb
std
outsl
aam
xor
push
cmp
cmp
jne
dec
jne
fdivrs
mov
mov
cmp
repz
sbb
mov
inc
or
inc
incb
jae
in
leave
jne
push
fidivrl
add
ror
add
ret
jl
fcompl
xor
lcall
push
test
lods
push
mov
inc
fmulp
adc
enter
jns
pcmpeqb
in
push
add
popa
aas
ror
andb
adcl
pushf
xchg
jge
dec
dec
gs
idiv
das
test
fstp
fldt
adc
rcr
in
jg
inc
sahf
jl
aas
mov
lahf
jl
leave
cli
or
or
ret
mov
adc
xchg
cwtl
push
and
jg
xor
mov
xchg
and
inc
mov
stc
imul
lret
mov
jb
pop
es
test
pop
xor
out
sub
pop
jecxz
add
leave
sbb
sub
cs
jbe
imul
cmp
mov
aaa
push
and
mov
bound
cmpb
xlat
fadds
int
nop
lods
outsb
xor
xchg
push
or
push
push
int3
into
lcall
ret
inc
mov
push
pop
test
enter
mov
inc
cmp
and
daa
lret
dec
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
idiv
incl
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
incl
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
call
cmp
inc
xor
cmp
call
mov
sti
jmp
stos
call
mov
push
sbb
sarb
repnz
test
nop
ljmp
xchg
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
decl
xchg
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
jmp
pop
mov
and
addr16
repz
mov
subb
and
and
clc
lcall
outsb
bound
xor
fninit
fwait
xchg
std
mov
movzwl
cmp
movsl
xchg
mov
jno
stos
adc
add
xchg
sub
mov
lea
iret
inc
iret
sbb
popf
fsts
sbb
pop
arpl
cli
xchg
add
clc
clc
push
mov
rolb
jne
add
insb
mov
jb
mov
xchg
pop
jle
sbb
cmc
mov
xor
adcl
rcrb
inc
xor
aaa
loope,pt
pop
inc
or
int3
jnp
add
outsl
test
jb
imul
int
mov
cs
xor
incl
mov
pop
mov
mov
call
lock
sub
jg
or
xor
dec
rep
pop
and
loopne
aad
push
mov
mov
sub
shl
mov
jmp
cmp
je
pop
mov
mov
adc
es
mov
mov
push
sbb
inc
jl
push
cmp
out
mov
mov
mov
mov
sub
outsl
in
add
les
adc
cli
testl
cmp
jb
sgdtl
cs
jmp
and
sarl
push
mov
scas
hlt
xorb
mov
mov
mov
sub
add
sub
inc
rorb
pop
test
adc
push
cmp
pop
lea
push
add
push
lea
push
sbb
mov
insb
hlt
aad
jmp
mov
push
pop
dec
mov
cmp
scas
aam
push
int3
sbb
push
or
cmp
and
lar
push
je
mov
scas
hlt
lods
push
xchg
ret
xor
cmp
cmp
add
xor
xor
jb
cmp
adc
or
jne
or
jle
push
icebp
pusha
inc
loop
xor
cltd
es
xchg
inc
imulb
mov
pushf
xor
mov
add
adc
std
xchg
push
fidivl
jmp
mov
push
ret
inc
pop
insb
arpl
cmp
inc
les
out
sub
rorl
mov
js
xor
jne
mov
cmc
nop
push
xchg
jmp
fidivrl
push
mov
mov
push
add
repnz
je
pop
std
js
cli
imulb
pop
add
sub
je
cld
pop
ficoms
cs
jl
pop
cli
jmp
pop
mov
les
addr16
xchg
mov
mov
inc
iret
mov
loopne
mov
dec
pop
jg
insb
cmp
aas
pop
push
data16
or
pop
orw
dec
push
aad
add
dec
inc
mov
push
add
mov
push
test
dec
adc
aad
push
bound
std
arpl
int3
push
inc
add
in
les
clc
add
push
cmp
xor
test
mov
and
aam
xlat
out
loope
mov
xor
mov
jne
jo
push
in
ds
mov
cmp
sub
push
add
dec
jne
inc
clc
testl
jmp
push
lea
mov
addb
and
sbb
push
test
ja
test
jne
xor
psubusw
pusha
out
jmp
jecxz
mov
jecxz
scas
nop
xchg
aas
inc
mov
ss
xlat
pusha
or
or
fiaddl
rcll
cmp
je
add
fidivs
or
add
push
sarl
cmp
fucompp
cmpsb
test
outsb
in
xor
mov
sub
or
sub
je
pop
ret
pop
jmp
roll
pop
xor
call
pop
test
iret
push
pop
add
xchg
push
add
scas
iret
inc
mov
push
push
push
test
jl
or
xor
lea
mov
mov
mov
test
add
pop
push
inc
or
or
aaa
icebp
inc
xchg
dec
dec
push
sub
push
cld
leave
and
push
xchg
aas
mov
sbbb
dec
push
mov
incl
push
sbb
push
clc
ret
mov
gs
pop
xor
test
in
pusha
sub
push
or
sub
mov
xchg
jae
sbb
pop
mov
xlat
and
add
or
add
push
or
cmpl
cld
cmpb
inc
add
and
push
sbb
lock
add
mov
xor
or
mov
add
cmp
adc
out
jg
in
push
call
pop
push
inc
lcall
in
imul
cs
shlb
insb
mov
jae
out
imul
iret
filds
or
inc
add
jmp
or
mov
rolb
roll
sti
pop
xor
jecxz
cmp
add
mov
push
aas
or
sbb
loop
test
adc
mov
cmp
clc
adc
push
jne
fidivs
push
sub
je
cmp
push
js
adc
je
xchg
inc
aam
push
call
and
aam
addb
je
dec
sti
xchg
jbe
test
lea
shr
push
push
inc
nop
add
stos
ss
pop
cmc
inc
jmp
adc
jne
push
jne
push
cld
and
fidivs
dec
sbb
sbb
add
pop
test
push
mov
push
cmp
sub
add
jo
sub
mov
mov
pushl
jle
das
iret
outsl
jo
add
inc
add
push
add
adc
mov
jecxz
test
mov
dec
adc
inc
sub
xor
push
outsl
in
xor
pop
dec
or
add
push
clc
lock
or
cmp
add
lds
mov
in
rcl
aas
sbb
addb
cmp
mov
inc
enter
add
lock
mov
and
shlb
cmp
mov
dec
jne
test
loop
shll
outsl
inc
jmp
xor
fsubp
sbb
mov
push
cmp
daa
lahf
adc
sub
push
adc
fldenv
mov
pop
pop
test
adc
fmull
or
jmp
lss
sbb
in
test
or
cmpsb
xor
sub
addb
add
aad
movsl
jecxz
push
shr
rorl
lods
adc
scas
jecxz
and
mov
dec
in
addr16
or
dec
test
in
loopne
loope
adc
out
mov
or
decl
push
adc
push
push
push
push
mov
addb
push
jg
sbb
cmp
jo
add
adc
int3
outsb
lcall
push
pusha
in
mov
mov
into
add
add
nop
cmpsb
xor
and
lds
lahf
pop
std
sbb
popf
sti
or
pusha
add
shrl
xlat
or
cld
xchg
adc
adc
adc
lea
and
js
cwtl
sub
or
and
loop
xor
rorb
dec
pop
nop
or
xor
lahf
mov
fsubl
ret
scas
push
add
xchg
stos
jg
je
cmp
push
sub
insb
push
sub
je
jmp
add
pop
pushf
sub
jb
je
jmp
cmp
sub
jge
inc
adc
jmp
sub
cmp
mov
jmp
sti
ljmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
fldl
icebp
jmp
mov
pop
lret
add
xlat
movzbl
push
or
dec
ja
or
ret
push
xchg
pop
xor
out
je
sub
pop
or
pop
mov
mov
adcl
inc
sbb
cli
into
out
add
adc
inc
incl
sub
or
or
es
loope
fld
lcall
xor
ret
pop
int3
inc
lock
or
out
lret
mov
pop
loopne
mov
add
inc
or
inc
cmp
ret
ljmp
dec
cmp
push
mov
add
and
hlt
and
xchg
push
mov
sahf
std
xchg
pop
or
pusha
test
jle
dec
mov
je
add
int3
inc
and
pop
xor
pop
loope
fdivs
jg
cmp
adc
inc
leave
sub
push
je
pop
push
jg
push
rcll
cmp
fildl
mov
xor
sti
jle
mov
fcoms
mov
ss
xlat
data16
test
movl
sbb
call
movsl
mov
cmp
mov
sbb
movb
mov
hlt
mov
xchg
mov
sti
adc
mov
in
inc
mov
jecxz
add
sub
gs
lea
in
bound
fldenv
cmp
lea
test
dec
jbe
add
mov
add
mov
pop
dec
mov
xchg
fidivl
clts
push
nop
jmp
or
decl
or
jne
pop
pop
push
xchg
incl
or
call
xor
xor
xor
orb
pushl
cmp
inc
inc
inc
inc
inc
inc
and
mov
cmp
mov
xchg
lock
sbb
xor
mov
and
mov
dec
int3
fdivl
push
adc
add
dec
shrl
cli
pop
rorl
cmpsl
add
inc
lret
popa
xlat
aaa
mov
and
pop
int3
outsl
adc
ja
add
mov
mov
push
rep
cmp
stc
neg
sbb
inc
leave
aaa
adc
xchg
push
dec
push
subw
sarb
cmp
test
jl
iret
or
push
push
add
iret
xor
add
arpl
ret
push
xor
adc
mov
fidivl
add
mov
clc
mov
cmp
out
inc
scas
or
push
push
sar
xchg
push
sbb
xchg
mov
adc
cmpb
sbb
es
sti
jge
pop
jl
jne
xor
jne
xchg
add
sub
loope
adc
ffreep
mov
je
mov
mov
aam
icebp
pop
xchg
mov
mov
jne
cmp
je
popf
jge
js
push
xchg
call
arpl
mov
aad
sbb
addl
push
jo
push
rorl
adc
jp
mov
push
lods
dec
mov
shlb
inc
cmp
popl
sbb
add
leave
push
xor
push
aad
adc
and
ficoms
push
jmp
pop
pop
call
in
or
scas
fsts
push
iret
jo
mov
xorb
inc
inc
outsl
lods
movsl
push
imul
sbb
inc
push
sbb
lods
mov
mov
push
push
jnp
test
inc
jo
shlb
roll
rcl
lods
sbb
mov
clc
dec
jl
lock
js
lea
pop
push
stc
adc
movl
bound
fcmovbe
dec
push
scas
adc
cmp
jp
add
adc
inc
jg
lods
inc
or
fists
push
addr16
mov
dec
cld
jo
shl
jge
jmp
inc
clc
xchg
add
adc
xchg
cmpl
es
push
add
jo
outsb
bound
js
add
push
dec
mov
mov
mov
mov
push
mov
fcmove
data16
dec
inc
in
fadds
mov
daa
das
mov
mov
test
cs
inc
push
xchg
movb
or
mov
mov
mov
push
fldt
cltd
inc
andb
xor
cli
out
push
push
adc
pop
outsb
or
jge
das
mov
push
inc
mov
inc
lea
adc
outsl
cmpsb
push
ja
fldl
fcomip
adc
mov
movsb
pop
sarl
movsb
cmp
rolb
cld
add
push
push
mov
cmp
xlat
pop
aam
ja
mov
cmp
dec
sub
cmp
jne
xchg
inc
in
out
rorl
jle
xchg
clc
addb
clc
add
adc
push
mov
pop
mov
add
test
pop
sub
rol
mov
push
or
xor
mov
cld
ficomps
dec
pop
dec
das
dec
pop
sub
mov
or
scas
fistps
add
addr16
xchg
push
add
and
or
adc
and
adcl
out
mov
pop
sub
jmp
cmp
cmp
or
or
or
outsl
or
in
add
iret
jl
pop
and
add
xchg
push
mov
jg
pusha
rcrl
rcrl
cmp
out
aam
addb
mov
add
loopne
cli
mov
cld
mov
cmp
jl
frstor
mov
inc
inc
jo
mov
mov
jbe
push
js
or
dec
fistl
push
dec
dec
rolb
sub
push
xchg
mov
fwait
lods
cli
adc
movsl
cmp
je
dec
adc
imul
jle
and
mov
push
xorps
clc
cmp
jp
shr
and
xor
sbb
sub
xor
loopne
push
mov
mov
hlt
fisttpl
add
jo
or
dec
hlt
lahf
rorl
pop
mov
adc
cmp
pop
fwait
sbb
pop
mov
jg
xor
xlat
rcll
cli
shl
jo
mov
xor
push
mov
ret
fwait
add
imul
push
enter
or
hlt
iret
push
xchg
mov
rorl
jp
push
subb
dec
add
push
hlt
xor
cltd
shr
mov
adc
dec
jo
mov
mov
add
loope
insl
jl
pop
xor
adc
outsb
dec
mov
jmp
push
sbb
ret
je
movb
inc
addr16
hlt
pop
add
outsb
daa
call
arpl
je
js
js
mov
pop
loopne
sbb
ljmp
scas
incb
dec
xchg
add
jnp,pt
mov
popf
ret
fimull
rol
fimull
jno
jg
aaa
jne
cmp
jne
iret
mov
dec
jmp
push
jmp
inc
mov
dec
daa
test
movsl
mov
sbb
test
xchg
call
mov
je
cmpl
fsubrs
ja
xchg
dec
jge
pushl
test
aaa
dec
jmp
lahf
jbe
jnp
inc
dec
loope
cmp
mov
inc
dec
mov
fisttpl
and
dec
jne
dec
call
push
test
mov
test
outsl
pop
sahf
sub
pop
movsb
loope
je
inc
lea
pop
pop
mov
stos
pop
pop
push
jmp
jns
pop
fcoml
add
aaa
test
cmp
jp
ljmp
ret
pop
push
lea
lea
neg
fisttps
mov
jne
fdivrs
add
cmp
sbb
repz
and
mov
mov
ret
cmp
xchg
dec
cmp
ret
lcall
dec
push
adc
pushfw
cmp
ret
outsb
popfw
mov
inc
inc
inc
sub
sub
test
repz
ds
dec
mov
stos
lahf
shlb
push
fildl
push
ja
shl
jl
dec
pop
dec
inc
lret
cmovae
pop
negb
mov
push
add
pop
xchg
jl
cmp
sub
icebp
jge
sub
fdivrl
jg
cld
xor
push
xor
mov
mov
jp
push
jmp
pushl
mov
jmp
add
lret
pop
push
jecxz
add
xchg
xlat
pop
call
xchg
dec
jl
mov
jne
bound
bound
sub
xor
imul
lea
xor
loope
mov
sub
aas
or
negb
pop
pop
cmpb
push
push
je
inc
pop
fcomps
jo
pop
mov
repnz
pop
dec
roll
add
jo
push
and
xor
or
lock
cltd
push
cmp
sbb
push
xor
pop
cmp
cmp
icebp
push
jge
cli
sarb
inc
orl
lret
test
cmp
call
js
mov
nop
push
in
inc
mov
push
push
das
enter
xlat
push
push
sub
addr16
js
mov
pop
leave
add
ja
adc
add
int
and
notl
in
insl
push
lods
jl
test
test
test
es
sub
pop
cmp
insb
lea
cmp
js
jge
push
je
out
test
pop
add
fisttpl
jg
sub
xchg
xor
lret
pusha
dec
jmp
lea
sbb
jp
rol
and
rcrl
jbe
jno
adc
inc
fadds
in
shl
loop
xchg
pop
mov
mov
push
ja
mov
pop
pushl
mov
imul
pusha
cmp
push
xchg
mov
test
ret
push
sbb
jae
addr16
pop
or
jbe
jb
jno
push
xor
out
data16
sahf
dec
movsl
jbe
dec
dec
rol
or
nop
add
aam
add
and
push
je
mov
and
pushf
push
not
ja
frndint
inc
push
shr
push
mov
inc
dec
dec
cmp
mov
add
sbb
fidivs
dec
mov
add
and
cmp
adc
inc
sarl
sti
and
shr
xchg
jmp
cmpsb
or
pop
das
or
pop
faddl
jg
xor
popa
dec
test
mov
lahf
cmp
jmp
jg
and
add
xor
add
sbb
jmp
repz
cmp
mov
loop
icebp
in
or
rolb
rorb
mov
push
enter
ret
xor
adc
cmpb
popf
add
in
fildll
ret
or
cmp
lcall
or
pop
sub
mov
xchg
xchg
syscall
push
pop
out
bound
pop
cli
add
lret
inc
fdivrl
mov
insb
pushf
shl
movl
cmpsl
mov
ja
ret
mov
in
push
punpckldq
or
data16
insb
inc
xor
je
sar
arpl
xorl
or
add
push
mov
mov
cmp
pop
aaa
xchg
aam
xor
lods
mov
int3
pop
xchg
adc
xchg
mov
lahf
xor
clc
or
ret
xlat
or
or
inc
js
mov
in
sbb
xlat
pop
mov
fbld
lds
xor
jmp
std
mov
imul
ljmp
add
mov
pop
dec
push
sub
mov
mov
sbb
je
fdivrs
adc
cs
and
sub
shll
fmuls
lea
lea
aam
sarl
ret
add
fdivrl
dec
lret
aad
je
idivb
mov
push
fdivrs
pop
popa
test
sub
fwait
aaa
add
jo
add
jo
sub
add
adc
inc
push
xor
dec
nop
scas
mov
adc
enter
insb
test
pop
adc
nop
int3
push
pop
cmp
faddl
test
xor
xchg
shl
sbb
push
add
and
int3
fwait
or
add
mov
sahf
and
xor
sbb
data16
data16
fcoms
addb
ret
subl
sbb
sbb
and
insl
cmp
jg
fsts
mov
loop
push
addl
add
sarl
cwtl
or
xchg
gs
adcl
cmp
enter
aas
xchg
xor
cmp
lea
sbb
jne
je
push
mov
call
inc
jge
pushl
shl
push
or
or
inc
dec
adc
ss
leave
dec
jecxz
in
sbb
pushf
dec
dec
call
push
call
lcall
jp
cmc
fidivl
dec
and
leave
or
call
insl
push
mov
cmp
jne
dec
js
or
cltd
inc
cmp
nop
and
xorl
push
sbb
into
cmpsl
mov
pop
add
das
xchg
jp
xlat
mov
sti
adc
pop
pop
fucomi
pop
dec
cmp
or
jl
add
sti
cmp
incb
test
lcall
icebp
jmp
mov
rcrb
cwtl
or
mov
mov
pinsrw
and
pushf
jp
mov
or
sti
xchg
fs
adc
cmp
adc
or
and
xor
add
jl
mov
push
sub
sub
mov
mov
pop
lea
sub
loop
inc
or
leave
xor
out
xchg
xor
pop
sub
push
jl
call
mov
xchg
mov
push
popl
ss
jmp
cmp
jge
orl
sete
xchg
cmp
jge
mov
push
in
lods
cmp
sbb
push
mov
add
int
fidivrs
dec
sub
adc
sarl
jge
bound
insl
inc
mov
cmp
in
jmp
and
stos
js
jl
cltd
dec
inc
sahf
inc
dec
add
mov
push
and
ss
inc
pop
jle
push
add
jo
pop
add
shrb
stos
mov
pushf
add
adc
mov
add
adc
pusha
add
das
xchg
ss
mov
push
jl
mov
and
aam
sub
jle
xchg
loopne
das
adc
cmpsw
scas
idivb
fsubs
ljmp
clc
sub
ret
shr
xor
inc
divb
cli
cld
mov
das
daa
push
jg
adc
sub
push
imul
xchg
pop
pop
cmp
sarb
lock
movsb
sub
push
cmc
sbb
rcr
mov
xor
or
das
sbb
add
leave
sub
lcall
mov
xor
cmp
icebp
sub
inc
fstpt
movb
enter
shll
lods
pop
or
push
xchg
cmpsl
test
jbe
repz
and
pop
xor
testb
add
data16
int3
sbb
jle
push
xor
adc
mov
add
loopne
int3
lea
jl
push
mov
xor
xchg
jmp
outsl
dec
je
jg
push
lret
jmp
pushl
rorb
xchg
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
pop
les
cmp
je
cmp
test
je
mov
fstps
mov
clc
inc
adc
add
ljmp
or
adc
jmp
push
mov
mov
mov
add
mov
cmpsl
fimull
add
pop
cmp
pop
test
lret
xor
push
jns
inc
xchg
jo
mov
daa
jne
dec
adc
rorl
adc
call
adc
mov
jae
jo
sub
jb
lcall
push
mov
adc
fbstp
cmp
push
adc
jg
adc
pop
hlt
cmp
cmp
push
pop
cmp
mov
bound
push
inc
add
repz
shrb
inc
in
sub
aaa
roll
sbb
rorb
aaa
and
icebp
jmp
mov
cmpsl
adc
inc
sbb
lods
push
data16
clc
pop
mov
add
fsubr
movsb
outsl
or
test
rolb
sbb
adcb
shl
pop
mov
add
and
clc
adc
stc
scas
cmp
test
push
imul
mov
or
insl
or
jo
xchg
xchg
mov
add
ret
cmpsl
mov
xchg
sbb
pause
shll
jb
bound
jmp
and
insb
lea
push
mov
in
test
push
mov
inc
sbb
test
jmp
aas
add
sarl
xor
cmp
adc
and
jp
add
decb
inc
cmpsl
or
negl
or
sbb
or
cmp
insb
and
mov
and
push
pop
insl
jl
sbb
sbb
outsb
aam
mov
loop
jne
pop
int
stc
sub
mov
sub
push
sub
mov
adc
dec
mov
cmp
cmp
add
push
mov
add
inc
call
xor
in
sbb
cli
cmp
add
in
sub
int
iret
dec
iret
adc
popa
add
or
push
sub
mov
xchg
inc
pop
add
shrb
pop
sub
xchg
out
push
dec
or
or
shr
imul
rolb
mov
es
test
add
sbb
les
or
orb
pop
add
pop
xchg
jl
xor
lcall
jg
xchg
jg
pop
mov
adc
adc
and
mov
in
sbb
and
add
outsb
dec
xor
notb
lret
jmp
shrb
mov
mov
lock
in
add
or
push
cltd
jne
cmp
ja
inc
pop
push
movsl
incl
and
inc
out
inc
in
iret
pop
dec
push
sub
jmp
push
cwtl
dec
mov
sub
mov
and
sbb
call
or
lahf
or
cmc
out
sbb
and
or
pop
notb
dec
je
jcxz
jne
fstpt
js
or
xlat
or
test
dec
adc
popa
push
test
lods
adc
pop
inc
sbb
cwtl
rcl
imul
adc
push
jb
out
jg
jge
jmp
inc
icebp
sub
jmp
getsec
jmp
push
fstpl
loop
xor
or
jb
idivb
loope
pop
nop
push
hlt
and
sub
sub
or
jl
adc
mov
xor
add
pop
andl
cmp
loope
outsb
inc
xor
hlt
jbe
cmpb
fnstcw
jnp
lods
pop
neg
adc
neg
dec
add
push
cmp
dec
or
ja
pop
and
mov
cmp
push
cli
loopne
adc
int3
sbb
jg
jl
adc
fs
cmp
arpl
sub
jmp
sbb
adc
adc
add
sbb
pop
jge
lret
xchg
testb
pushf
sarb
je
dec
push
pop
push
adc
out
roll
jmp
xchg
sbb
adc
adc
sbb
and
xchg
pop
call
add
js
dec
decl
add
loope
scas
divl
enter
dec
inc
jg
test
sub
mov
sbbl
or
cmp
pop
mov
mov
ss
lods
dec
xchg
fucomi
jg
adc
or
push
push
movzbl
mov
sbb
push
add
in
push
aas
push
sbb
lret
mov
divl
in
insl
in
loopne
loopne
idiv
cmp
je
andl
mov
add
test
aam
clc
pop
ret
mov
cmp
jge
push
lock
fiadds
scas
add
mov
sub
adc
sbb
fwait
adc
pop
mov
pop
jmp
pushl
push
jae
subb
xchg
out
ret
call
fwait
mov
cmp
int
test
xor
nop
dec
push
shl
push
fmuls
push
sub
movl
add
sub
lahf
jg
fwait
or
cmpsl
or
jle
jo
ret
add
lods
dec
mov
sbb
push
or
mov
lea
fmull
shl
push
lcall
dec
jne
out
pop
shl
add
addl
cmp
push
xor
mov
clc
jne
outsb
inc
mov
adc
push
push
test
adc
ret
mov
mov
scas
adc
dec
push
jne
icebp
outsb
test
incl
pop
pop
pop
mov
daa
push
add
mov
xchg
and
in
sbb
add
adc
xor
mov
push
pop
inc
sub
lret
jge
sub
add
mov
nop
jmp
mov
adc
xchg
in
dec
lods
xchg
xor
or
pop
push
test
pop
outsl
jl
les
cmp
inc
push
push
and
jae
sbb
inc
pushf
or
sbb
push
vshufps
cwtl
mov
jmp
sbb
or
test
scas
lret
or
test
out
lcall
inc
push
pop
je
popa
outsb
insb
pop
outsb
bound
negb
shlb
inc
jns
insb
push
clc
popa
jp
dec
popa
je
sub
push
insl
fldz
or
dec
sub
push
push
xchg
sbb
insb
fwait
ret
inc
push
push
jo
pop
inc
mov
outsb
pop
popa
sub
daa
paddusb
addr16
dec
jae
pop
mov
jae
popl
pop
lock
jae
inc
inc
sub
xor
or
push
in
loopne
add
mov
jg
loopne
andl
jp
sbb
insl
sub
mov
leave
popa
jb
dec
inc
mulb
testl
test
xchg
xchg
in
in
bound
inc
inc
pop
push
inc
mov
aaa
popa
xchg
popa
aaa
divl
fcmovnu
insl
fldcw
cmpsb
aaa
sbb
and
or
jae
push
aaa
outsb
outsb
rcr
pop
bound
das
fdivrp
dec
in
pop
push
movw
adc
and
setae
imull
cmpb
jle
ljmp
fwait
and
mov
nop
lret
push
sbb
or
push
push
xor
pushw
xor
push
cwtl
jne
mov
add
add
or
xor
test
mov
ja
add
pop
sbb
inc
enter
mov
fwait
mov
mov
add
mov
shll
fldt
imul
mov
fs
ljmp
add
aam
or
das
lods
adc
fs
leave
popf
test
sub
jle
mov
mov
jo
sub
inc
dec
jne
adc
xchg
fisubrl
jge
jmp
pushl
xchg
push
mov
add
mov
loopne
dec
push
mov
sti
add
push
fstpt
mov
lods
sbb
imul
dec
xchg
jne
movsb
cmpl
stos
loope
mov
mov
add
cmp
test
and
xchg
sub
loope
jbe
or
mov
or
xchg
dec
clc
xchg
cmp
add
jb
adc
scas
mov
outsb
adc
cmp
jb
mov
add
sti
mov
cmp
fstl
add
and
adc
mov
adc
add
clc
and
aam
add
pop
ljmp
push
lcall
nop
and
nop
push
jle
notb
pop
ficoms
mov
push
xchg
and
lea
shr
jmp
pushl
inc
cwtl
dec
in
mov
inc
cwtl
pop
loop
sbb
mov
test
and
sub
lds
sub
sub
adc
test
add
sub
push
or
xchg
xor
cmpsl
cmp
outsl
test
adc
fldl
cli
mov
xchg
in
mov
inc
jmp
cmpsb
rcrl
mov
aam
or
ror
fiadds
ljmp
jbe
lock
xor
xchg
xor
xor
pusha
faddl
or
cmp
jb
add
sbbb
rorb
out
inc
pusha
dec
push
shlb
bound
push
dec
lock
je
add
adc
add
and
jmp
add
arpl
clc
lock
in
insl
xchg
pop
or
cli
sbb
es
int
pop
je
lock
popf
xor
in
pusha
mov
data16
inc
lea
pop
outsl
or
and
push
push
xchg
add
cmp
xchg
test
sti
dec
xchg
in
pop
sbb
lods
test
or
or
mov
in
ret
enter
pop
jne
js
or
adc
bound
xchg
fstpl
ja
jo
xor
loop
decl
push
jge
test
rcr
cmp
shr
rcll
cld
cmp
adc
les
add
sbbb
ds
insb
and
lahf
sub
inc
add
adc
push
mov
mov
sub
sar
jns
adc
mov
fldt
es
sub
sar
pop
rolb
add
inc
cmp
imul
adc
inc
push
push
scas
lods
daa
nop
cmpl
and
lock
lock
xor
adc
clc
int3
std
aas
pop
lea
jle
jg
cld
test
add
mov
and
ret
dec
push
push
mov
sub
add
mov
mov
push
pop
testl
push
xlat
fadd
scas
or
push
pop
push
xchg
in
sbb
adc
mov
pop
lea
scas
cmp
or
nop
cmp
mov
insb
sub
addr16
addr16
cmp
dec
pop
jo
in
pop
bound
add
push
ss
lods
and
loopne
sub
inc
jo
roll
mov
psrld
test
jae
push
cmp
lea
fdivl
push
lock
clc
scas
je
add
sahf
mov
int3
insb
mov
jmp
mov
push
orl
sbb
in
push
jl
clc
ja
pop
cs
pop
push
xchg
inc
jo
icebp
xchg
ret
push
add
je
ja
popa
fnstsw
sub
add
inc
and
push
rcr
fisubs
and
insb
and
shr
mov
inc
adc
jbe
rclb
pop
mov
inc
daa
jo
add
adc
cmpl
add
mov
adc
inc
or
mov
and
ficomps
jle
mov
addr16
mov
loope
adc
dec
mov
push
lret
mov
scas
pop
sbb
xor
nop
jp
adc
mov
mov
xchg
mov
jmp
mov
jb
je
jb
or
out
loopne
xchg
ret
test
je
fwait
inc
and
pop
pop
in
xor
inc
sti
add
and
fimuls
sti
call
ret
add
orl
call
jne
data16
sahf
and
sbb
sbb
sbb
std
mov
pop
mov
add
sub
mov
cltd
movzbl
adc
push
ret
sarl
test
inc
aad
insb
xorl
pop
dec
mov
cmp
xchg
ds
fmuls
cwtl
cmp
in
fiaddl
or
nop
sbb
leave
adc
mov
or
mov
pop
imul
stos
notb
add
sub
js
call
das
lods
pop
mov
fnstenv
cmp
jne
adc
insb
sub
addl
out
das
mov
sub
sar
inc
out
pop
not
xor
jge
push
addb
es
push
sub
mov
fcomps
popf
mov
push
cmpsl
pusha
fsubrl
sbbl
inc
sub
dec
sarb
push
xor
fadds
push
sbb
je
sub
arpl
lds
fiaddl
lea
add
pop
dec
scas
push
sub
orb
mov
outsl
xor
mov
mov
cmp
sbb
and
cmp
jne
mov
mov
cmc
push
add
sub
xor
inc
pop
adc
push
mov
dec
and
mov
add
lahf
mov
sbb
daa
mov
push
ret
fsubrl
add
aaa
addr16
jg
jne
pop
rclb
movsb
inc
sub
xchg
and
outsb
xchg
dec
popf
ret
push
stc
pushf
mov
cmp
sar
inc
add
pop
fdivs
movsb
js
cmp
inc
pop
adc
loope
test
jne
jmp
push
sbb
mov
push
push
cmp
push
add
lea
or
fistl
add
jns
test
bound
sbb
es
or
push
push
mov
les
fstl
mov
pop
ret
das
and
sbb
push
loopne
adc
mov
stos
jae
adc
push
inc
shlb
mov
dec
mov
lock
std
and
into
les
fisubl
push
fwait
xor
pop
fnstenv
fucomip
or
cltd
stos
mov
ss
dec
adc
lock
popa
loope
scas
dec
je
push
mov
push
push
rcll
jmp
jbe
cmp
jb
cmpb
adc
imulb
std
and
clc
mov
jbe
testb
adc
ficoml
rolb
adc
sub
sbb
push
shrl
ret
pop
repnz
dec
jbe,pn
push
pop
push
pusha
xchg
mov
decl
lock
sbb
xor
outsb
pusha
xor
adc
push
andw
or
adc
fbstp
dec
or
sub
mov
orb
pop
cltd
test
pop
sbb
mov
sub
or
shrb
push
movsl
add
xchg
mov
jle
imull
sbb
nop
push
sbb
cmp
ds
or
push
push
andb
lret
mov
pop
mov
add
rorl
jmp
sbb
or
push
pop
lahf
lods
je,pt
push
add
push
loopne
int3
push
push
lret
mov
mov
and
call
xor
sbb
ret
push
push
xchg
stos
ss
rorl
nop
loop
push
das
mov
xchg
mov
ja
cld
and
inc
inc
test
jg
jbe
mov
sbb
movsb
xor
ret
xchg
pop
js
lret
lock
aam
and
testb
sub
adc
lret
daa
enter
xor
andb
addb
cmp
add
xor
ss
cmp
cld
cld
int
or
mov
pop
scas
xchg
clc
and
rol
push
adc
xor
lods
test
hlt
sbb
inc
sti
cmp
dec
loopne
cli
jge
decb
adc
cs
movsb
fstl
adc
loopne
xchg
dec
into
mov
loope
push
add
mov
inc
cmp
mov
gs
cwtl
into
test
adc
add
std
cli
loopne
cmp
jne
and
adc
movl
or
imul
push
ror
jo
push
enter
pushf
jo
sub
in
int3
out
adc
hlt
dec
or
push
sub
nop
mov
dec
test
insb
and
mov
dec
xchg
fs
push
popa
or
sti
shlb
aam
ret
adc
jae
mov
xchg
stos
push
sbb
push
add
sbb
adc
mov
add
or
insb
dec
fisttps
xchg
loopne
sub
push
xor
add
clc
add
je
popa
sub
mov
inc
jbe
testl
sub
lds
sub
loopne
push
sbb
mov
andl
cmp
jne
test
dec
shl
dec
fs
push
jmp
inc
shlb
rclb
cwtl
adc
in
push
and
jne
jb
sub
xchg
cmp
or
jge
in
or
jbe
in
push
clc
aas
mov
add
testb
sete
mov
loopne
or
inc
in
or
mov
sbb
push
mov
push
jle
pop
je
mov
push
mov
popf
cli
dec
push
lea
sbb
dec
adc
add
xor
jg
outsb
rolb
pusha
add
andl
sbb
pop
mov
out
js
mov
cmpl
push
call
mov
mov
js
call
stc
dec
inc
mov
aas
lods
adc
cmp
adc
inc
icebp
mulb
push
inc
cmpl
ja
inc
sub
pop
jb
inc
sbb
and
jg
out
shlb
hlt
lods
adc
sbb
iret
pop
fistpl
add
jmp
xchg
in
adc
roll
push
shl
hlt
jg
xchg
xor
stc
dec
cs
in
pusha
push
lock
push
push
jg
and
xor
in
stos
scas
push
aaa
loopne
js
outsb
cs
mov
popa
nop
add
jg
sbb
pop
xor
xor
or
mov
cmp
xlat
repz
mov
jns
sbb
jmp
fwait
sbb
add
mov
mov
adc
loopne
sbb
repz
loopne
mov
shlb
sti
push
xchg
push
sub
negl
mov
add
mov
outsl
outsl
jmp
cld
mov
imull
pushf
jle
test
jg
sub
mov
sub
adc
mov
clc
out
and
mov
push
pushf
push
fstpl
mov
cmp
push
and
push
mov
cmp
ss
ljmp
daa
loopne
xchg
cwtl
sub
frstor
jmp
push
mov
pop
ret
lea
fsubp
mov
es
mov
pushf
adc
jns
divb
and
pop
scas
jno
fcmovnb
mov
xchg
pop
ja
lods
mov
mov
mov
sub
sbb
add
in
or
mov
mov
insl
or
and
push
push
push
push
js
dec
rcll
add
loope
push
cmpsl
add
adc
test
insb
ret
mov
jo
add
push
lock
add
gs
add
jo
sub
addr16
out
inc
je
outsl
insl
and
test
jnp
bound
ja
push
pop
adc
clc
sysret
je
addr16
dec
pop
inc
pop
rcll
test
sbb
jae
stos
outsb
or
sbb
es
fnsave
jae
clc
xor
add
push
add
jne
sub
jb
je
dec
pop
push
call
sbb
and
pop
repnz
mov
sub
rclb
and
cmpsl
cltd
lcall
add
enter
nop
mov
sti
push
jle
xorl
popa
jmp
jle
pushf
dec
mov
add
dec
rcrl
add
inc
pop
cmp
shlb
adc
cmp
push
push
inc
dec
xor
push
cmp
add
fistpll
push
add
xchg
test
scas
repnz
adc
add
adc
or
popa
cwtl
call
mov
inc
jl
or
dec
sar
sbb
add
fnsave
adc
or
push
adc
std
sbb
add
lds
out
clc
sar
dec
aad
xchg
aaa
imul
sub
lea
stc
ror
mov
sub
mov
cmp
jne
test
xchg
enter
jne
mov
push
jne
or
inc
orb
add
adc
pop
pop
inc
pusha
or
cmp
sub
or
insb
ret
or
fldl
sub
loop
inc
sbb
adc
add
fisubrl
mov
or
jge
pop
imul
rcl
jl
push
push
jb
roll
das
mov
movsb
xchg
aam
xchg
repnz
mov
sub
mov
add
into
cmp
adc
inc
adc
and
repz
lea
push
xor
mov
mov
ss
cmp
jle
pop
out
lcall
add
add
add
or
pop
pop
cmpb
out
add
pop
mov
dec
lods
cmc
mov
dec
fbstp
sub
out
mov
push
out
lods
addr16
dec
dec
push
push
pop
inc
dec
push
faddp
push
negb
dec
cmp
fbld
add
add
mov
test
adc
inc
popa
rorl
adc
cld
push
gs
in
gs
scas
lcall
cld
sub
aas
sbb
jne
call
cld
inc
push
sbb
inc
push
dec
push
dec
inc
inc
adc
inc
dec
in
or
dec
pop
inc
inc
inc
push
inc
and
mov
cmp
cwtl
push
test
adc
xor
jb
xor
lds
gs
movsb
sysret
jo
inc
or
pop
push
ss
test
and
jae
or
inc
jae
aas
jge
push
xchg
xor
adc
xor
add
inc
push
jo
xorl
fs
scas
mov
or
les
test
icebp
mov
sub
add
add
push
pusha
jne
jae
ret
and
dec
ja
add
push
xchg
add
add
cli
insl
popa
jo
outsl
xor
loop
lcall
and
pop
dec
push
dec
inc
ljmp
fcompl
inc
mov
push
xor
mov
push
push
push
push
dec
sub
xlat
pop
add
inc
sub
daa
add
add
imul
das
lahf
push
das
lret
jo
pusha
inc
inc
push
das
and
dec
push
cmpsb
fwait
or
pushf
inc
push
push
inc
dec
inc
aaa
add
pop
daa
data16
pop
mov
dec
dec
clc
cmp
mov
and
cmp
je
fimull
pusha
or
int3
mov
xchg
jl
pop
inc
and
sub
mov
sbb
clc
outsb
dec
sub
push
pop
adc
jo
inc
enter
scas
arpl
jo
mov
adc
add
fld
fistps
mov
or
dec
mov
dec
dec
sbb
or
loopne
enter
cmp
push
xor
das
inc
lcall
xor
pop
mov
jo
push
bound
stc
pop
and
sub
and
gs
fmuls
int3
push
adc
push
cmp
daa
adc
or
push
imul
or
adc
sub
movl
bound
inc
ficoms
sub
or
jb
push
xchg
imul
and
int3
es
dec
aaa
adc
push
daa
or
pop
cmpsb
xor
insl
jo
fnstenv
or
fwait
out
andb
sub
push
or
enter
xor
xor
xor
xchg
cs
and
insb
jb
jae
sbb
test
shlb
jl
sbb
sub
and
or
inc
sbb
rorl
mov
jae
insl
sub
mov
jne
out
push
pop
imul
xor
jae
mov
sub
push
fsubs
jg
pop
pop
decl
push
dec
push
inc
sbb
in
add
push
jl
push
sbb
loop
and
push
ja
jmp
add
popa
insl
subl
call
xchg
jl
mov
jle
add
sub
push
add
cmp
movsl
mov
mov
outsl
fs
imul
nop
jns
rolb
aad
insl
lcall
imul
outsl
xor
mov
pop
jae
das
push
dec
outsl
je
test
dec
dec
adc
popa
add
gs
ds
outsl
inc
arpl
or
adc
pop
fs
out
xor
pop
bound
outsl
js
xchg
inc
je
pop
push
or
rclb
loopne
inc
push
andps
inc
sbb
je
jno
enter
cld
mov
dec
inc
pop
adc
mov
inc
in
push
push
inc
pop
add
inc
add
ja
inc
fldl
push
push
addr16
push
mov
test
sub
mov
xchg
xchg
pop
inc
or
xchg
xchg
xchg
xchg
mov
lods
movsb
cmp
mov
xchg
cmp
cmp
nop
mov
cmp
xchg
xchg
or
push
popa
push
push
fsubl
add
dec
fs
setae
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
jmp
fistps
sbb
mov
cli
cmp
adc
cmp
or
and
loopne
fadds
inc
imul
ret
in
movsb
inc
add
sbb
leave
leave
leave
leave
adc
add
fs
add
sbb
in
lock
call
in
aam
leave
leave
leave
ror
enter
leave
leave
sarb
mov
test
leave
leave
leave
leave
mov
leave
leave
leave
nop
mov
leave
cmpb
fs
insb
inc
sbb
pusha
in
in
pop
pop
push
push
in
in
dec
dec
cmovo
in
in
cmp
in
in
sub
and
in
in
sbb
adc
in
in
or
add
jb
xor
cld
sbb
hlt
lock
jb
in
call
jb
aam
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwtl
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
push
jb
jb
dec
cmp
xor
jg
sti
push
lods
pop
pop
xchg
ret
xor
sub
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
fmull
sahf
cld
sbb
hlt
pop
lock
xchg
xchg
xchg
fneni(8087
paddusb
aam
nop
xchg
xchg
ror
enter
jb
jb
mov
jb
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
jb
cld
sbb
sbb
jb
fcomi
pop
lock
jb
daa
daa
in
fdivl
jb
fcom
ror
dec
dec
outsb
pop
enter
mov
mov
dec
dec
dec
test
mov
dec
cwtl
xchg
nop
mov
dec
dec
mov
dec
js
jo
cmp
fs
cmp
cmp
pop
pop
push
push
add
dec
inc
shll
pusha
add
jbe
imul
inc
cmp
cmp
pushf
pushf
fsubrl
xor
xor
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
sbb
in
inc
dec
hlt
lock
in
in
call
or
in
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
mov
cpuid
cmp
ss
xlat
or
sbb
js
out
and
sbb
dec
cmp
push
mov
loopne
aad
nop
jae
jne
or
jnp
push
dec
jl
push
or
cmp
adc
lods
push
cmpb
sbb
ret
pop
add
outsb
sub
scas
inc
or
sti
cmp
sahf
or
aas
inc
pop
adc
and
push
daa
jp
sbb
push
addr16
fisttps
add
push
add
inc
add
sti
out
mov
jne
jae
pop
pop
mov
std
les
add
dec
push
dec
das
inc
aas
jnp
mov
cmp
push
push
outsb
add
mov
mov
push
xor
or
inc
cmpl
dec
jb
push
decb
mov
in
addb
popa
xchg
and
cmpsl
js
and
xor
xchg
fistl
out
add
sub
mov
bound
xor
jl
mov
clc
and
dec
movsb
outsb
jmp
push
jb
sub
mov
cmpsb
loopne
test
xor
xchg
pop
mov
dec
jae
xchg
xchg
push
ds
add
addr16
push
test
dec
clc
jbe
cmp
outsl
daa
jb
mov
dec
or
imul
daa
dec
ret
or
push
daa
dec
subb
outsb
mov
dec
gs
and
pusha
sub
imul
inc
push
push
outsb
fildl
stos
pusha
sub
pushf
jle
sbb
sti
push
sysenter
out
or
jbe
stc
dec
add
add
cmp
xchg
in
inc
pop
hlt
or
les
fadd
xchg
and
les
add
sbb
fmuls
cli
les
add
test
sbb
pop
icebp
jo
and
not
or
or
push
inc
dec
jl
mov
adc
arpl
cmp
cmc
lea
mov
cmc
arpl
add
frstor
pop
pop
sub
and
sub
push
outsb
dec
adc
daa
loopne
push
jne
insb
popw
imul
insb
jae
fs
inc
imul
push
or
std
xchg
xor
mov
sbb
lock
adc
dec
push
gs
repnz
je
sarb
cli
jg
sub
cmp
sbb
into
adc
adc
insl
push
mov
push
ja
dec
arpl
add
dec
xchg
and
arpl
es
mov
out
or
pushf
mov
inc
call
inc
popf
inc
imul
sbb
mov
fwait
leave
orb
outsl
rolb
mov
pop
or
pop
inc
inc
xchg
leave
in
dec
test
add
or
in
les
or
mov
jg
add
adc
lock
adc
push
outsl
jne
bound
in
add
in
imul
jo
add
jne
stos
sub
js
cmp
or
out
cwtl
cmp
lock
sbb
lock
daa
call
in
loopne
fmuls
dec
dec
aam
enter
daa
daa
and
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
xchg
daa
daa
daa
add
cld
push
adc
lock
popf
pop
clc
add
ret
repnz
daa
daa
daa
repz
cmc
mulb
daa
daa
daa
idiv
stc
cli
daa
daa
daa
daa
sti
cld
std
daa
daa
daa
daa
jmp
loope
daa
daa
daa
daa
jecxz
in
daa
daa
daa
daa
out
jmp
daa
jmp
in
out
daa
daa
daa
daa
out
rcl
shlb
daa
daa
daa
rcl
aad
daa
daa
daa
daa
xlat
fcomp
fisubl
daa
daa
daa
fcmovnu
fstp
daa
daa
daa
daa
ffreep
rol
daa
daa
daa
ret
daa
daa
daa
enter
daa
daa
daa
lret
int3
int
daa
daa
daa
daa
iret
mov
mov
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmpsl
test
stos
daa
daa
daa
daa
stos
lods
lods
scas
daa
daa
daa
daa
scas
nop
xchg
xchg
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
cwtl
cltd
lcall
popf
sahf
daa
daa
daa
daa
lahf
addb
addl
xchg
daa
daa
mov
daa
jo
jb
daa
daa
daa
jae
jne
daa
daa
daa
daa
ja
jns
daa
daa
daa
daa
jnp
jge
daa
daa
daa
daa
jg
popa
bound
loope
daa
arpl
sub
jae
jb
sub
jne
pop
cmp
in
setle
out
mov
sub
cmp
jge
cmpsl
and
rolb
jne
inc
mov
mov
out
movsb
es
and
shlb
adc
mov
cmpsl
mov
xor
dec
ljmp
je
and
lock
pop
mov
push
pop
je
xchg
ds
insl
pop
add
shll
mov
out
fucom
outsl
and
fistpll
pushl
or
iret
inc
outsl
push
fdivrs
sub
sahf
movsl
iret
add
push
sub
cmpsl
mov
mov
mov
push
pusha
lret
mov
mov
imul
pop
sub
rcrl
push
adc
adc
loopne
sarb
dec
add
sub
push
jp
inc
ds
push
aas
dec
ja
mov
shrb
loopne
mov
decb
jg
adc
ret
xchg
pop
testb
sub
sarl
mov
pop
add
cld
sub
loop
cmp
jl
ljmp
adc
ret
call
out
rorl
lahf
jg
jecxz
fimull
sub
neg
mov
xchg
add
mov
inc
dec
mov
xchg
or
adc
sbb
test
jecxz
xor
pop
dec
pushf
bound
imul
or
jne
push
fisttps
add
xor
sar
std
lcall
jne
cmp
jge
mov
sbb
jne
movsl
cmp
pop
lret
lcall
adc
rcl
xorl
aas
hlt
jecxz
hlt
rolb
adc
push
xor
jo
adc
add
je
jecxz
out
imul
adc
sub
cmpsb
push
push
cltd
fsubs
shll
pop
push
aaa
push
jge
js
sub
dec
mov
jge
mov
les
jno
rcrl
adc
xor
sarl
xchg
adc
insl
bound
mov
out
add
adc
jmp
sti
pop
jb
popa
adc
es
push
add
imul
shr
push
int3
push
cmpsb
push
or
fsubrp
sub
sbb
orl
inc
pop
mov
mov
push
push
mov
inc
cmpsl
in
shlb
jmp
mov
sbb
jns
rcrb
inc
loopne
add
arpl
inc
loopne
pop
and
sbb
inc
cmpl
sbb
addl
jg
inc
inc
arpl
imul
or
pmulhuw
fs
aam
jge
xor
in
mov
enter
scas
fst
push
push
pop
jmp
xor
idiv
cmp
inc
ds
wbinvd
das
xor
pop
inc
sub
cmp
sti
or
out
loopne
sub
or
dec
and
insl
je
inc
pop
or
and
testb
add
jnp
clc
mov
and
fisttpll
dec
dec
jge
in
or
mov
xor
inc
pusha
adc
sbb
and
lds
jo
cmp
xchg
sub
inc
in
outsb
lods
sbb
or
out
les
push
mov
or
mov
adc
inc
sub
test
in
pop
cmc
leave
lcall
jecxz
inc
popa
jae
scas
cmc
pop
ljmp
cmpsb
outsb
sbb
adc
pop
shr
cmovno
push
popa
imul
adc
and
pop
inc
add
ss
ja
nop
pop
xor
dec
push
pop
daa
inc
sub
add
cmp
pop
add
xlat
fmuls
push
xchg
mov
cltd
cmp
or
dec
std
incl
dec
jbe
push
xor
jns
lcall
push
lret
ret
fnsave
inc
repnz
add
mov
add
push
adc
ret
fbld
add
push
fadds
push
pop
nop
jl
xor
push
inc
inc
bound
nop
scas
pop
sbb
shr
sub
stos
xor
push
pop
push
fldenv
in
or
pop
adc
and
cmp
inc
scas
adc
enter
add
jecxz
insb
insb
mov
mov
and
fs
inc
jb
jo
shll
push
sub
xchg
lret
mov
add
fldenv
jg
ja
jo
out
jge
and
mov
out
fdivr
je
adc
inc
sbb
daa
aas
add
add
pop
nop
je
pop
lods
push
jl
sub
js
ficompl
iret
adc
push
sub
add
dec
or
pop
aaa
js
dec
and
pop
daa
lods
aad
adc
test
push
sub
scas
push
xor
push
sub
add
mov
outsl
pop
xchg
and
add
lret
push
imul
cmp
mov
add
pop
xor
sub
aam
adc
pop
nop
movl
pusha
pop
fcoml
movsb
xchg
fmull
int3
leave
xchg
add
movsl
jne
pop
and
sub
and
pop
cmp
sub
cld
daa
dec
scas
out
or
imul
jmp
dec
outsl
nop
mov
and
mov
rcll
shrb
xchg
pop
shlb
out
mov
mov
and
imul
lock
insb
pop
pop
ficomps
sbb
or
dec
jbe
sarl
pop
sub
adc
add
nop
in
fidivrs
add
hlt
fiadds
dec
cld
inc
and
pop
and
out
pop
in
and
test
pushf
pop
mov
xchg
leave
cmp
xchg
fidivrs
adc
stos
jbe
imul
test
sbb
adc
and
das
fcomps
sbb
movsb
lret
fsub
or
stc
fists
mov
int3
ret
mov
mov
popf
test
mov
bound
shll
loope
pusha
pop
add
push
icebp
push
loope
push
outsb
fs
mov
fstl
xchg
andb
paddb
sbb
jne
call
lods
lret
and
sub
xor
or
xchg
and
pop
mov
inc
jo
daa
push
or
inc
jmp
outsb
sbb
push
mov
or
add
sub
loopne
sbb
negl
and
mov
or
push
loope
daa
mov
adc
cmp
jbe
pop
shl
test
inc
pop
jae
push
imul
mov
stos
add
adc
fwait
nop
in
pop
fs
mov
jb
insb
outsb
mov
push
mov
and
pop
rcll
fcomip
das
adc
cld
push
inc
lods
sbb
pop
adc
sub
pop
adc
xchg
pop
test
das
jbe
pop
pushf
in
cmp
mov
mov
mov
and
sub
sub
pop
inc
pop
xor
mov
push
dec
pop
inc
sbbb
pop
mov
dec
addl
aaa
inc
leave
test
add
sbb
icebp
sahf
popa
mov
mov
xchg
push
and
test
jge
insb
fdivr
mov
sbb
pop
mov
mov
mov
test
rcr
aas
adc
xchg
loopne
dec
inc
data16
mov
aas
sub
aas
xor
sub
stc
inc
fnsave
call
clc
or
push
das
inc
and
jmp
pop
pop
sub
je
sub
pop
jmp
pop
push
jno
in
lahf
pusha
jmp
xor
clc
sbb
xor
je
inc
push
scas
add
adc
pop
or
dec
sub
adc
je
arpl
dec
mov
and
enter
ja
daa
mov
pushf
test
adc
rorb
jmp
mov
pop
cmp
adc
inc
jmp
dec
push
lock
dec
jmp
sbb
mov
subb
fistps
lods
pop
xchg
xlat
pop
inc
aaa
cld
mull
imul
cmp
xor
or
leave
in
adc
int3
dec
xor
je
add
and
in
jge
inc
cli
testb
test
sbb
mov
and
xchg
or
fcoml
mov
inc
inc
mov
xlat
push
xorl
mov
mov
out
inc
daa
das
and
push
dec
pop
subb
jmp
sbb
jne
xor
hlt
and
sti
test
pop
in
cmp
adc
jp
or
pop
pop
cmpsl
es
push
daa
add
and
mov
jo
outsb
ja
nop
popa
inc
add
xchg
or
jmp
push
lds
xor
mov
insb
andb
sbb
negb
outsl
jae
mov
andb
pop
mov
aam
adc
insb
push
xadd
insl
pushf
pushf
pop
imul
mov
mov
int3
push
out
out
sahf
out
xor
inc
dec
mov
push
mov
jnp
sbb
push
loopne
sbb
popa
out
jo
out
negb
add
fmulp
out
adc
inc
daa
out
cli
push
xor
and
int3
fdivrs
mov
negl
inc
loop
inc
push
lock
push
mov
push
imul
sub
cmp
movsb
gs
sbb
out
jecxz
sarb
rcrl
adc
and
inc
inc
pop
je
pop
and
jns
cmp
push
or
divl
jnp
push
dec
daa
cli
sbb
pop
lock
dec
outsb
and
push
add
mov
imul
xchg
xchg
jns
arpl
push
mov
push
jp
add
push
inc
push
popf
in
icebp
sbb
pop
dec
pop
mov
outsb
loopne
push
jl
inc
gs
ja
pushf
and
lahf
les
sbb
add
fs
sub
jnp
mov
jae
out
cmp
ficoml
adc
or
inc
xor
mov
lock
xor
mov
and
pop
adcb
mov
roll
lds
or
lea
cmpsb
dec
cmpsl
dec
das
adc
das
jo
ss
mov
daa
pop
sub
adc
pop
push
pushf
test
pushf
jnp
mov
sub
inc
or
push
push
fnstenv
subb
repz
ja
or
push
xchg
and
inc
pop
add
adc
sub
adc
xor
or
loope
popa
js
pop
pop
cltd
jge
call
hlt
movsbl
enter
inc
and
push
cmp
add
cmp
ficompl
xchg
adc
dec
scas
lock
enter
stc
filds
cli
lret
stos
xchg
mov
mov
sar
add
cmp
or
sysret
jne
xchg
push
xor
add
inc
insb
sti
jmp
mov
lret
sub
das
jne
jae
out
int
sbb
and
lret
rcrl
inc
adc
mov
nop
cmp
xchg
scas
daa
adc
xchg
jle
or
xor
ja
pop
lea
xchg
push
pop
xor
mov
insl
fcomps
jo
adc
inc
sti
sbb
enter
movsb
sbb
imul
std
add
rorb
loopne
aad
aam
subl
inc
dec
xlat
inc
jae
popa
or
jne
adc
sbbl
xor
xchg
xor
sub
add
addb
adc
fbld
das
pop
add
subl
ret
inc
jmp
or
mov
lahf
add
filds
sbb
adc
roll
dec
and
add
inc
pusha
pop
add
xor
add
jp
stos
and
scas
jno
movsb
sub
or
or
daa
push
mov
jne
and
test
sub
push
loop
ljmp
mov
loope
mov
push
test
in
add
inc
cmp
mov
or
iret
sbbl
dec
movsb
aad
lret
or
and
mov
pop
lret
js
cmp
inc
mov
inc
cmp
push
subb
ss
ficoml
adcl
xor
mov
adc
push
jbe
mov
test
jmp
icebp
push
add
or
dec
subb
and
test
and
sbb
sbb
inc
insb
rorl
pop
push
mov
lret
inc
enter
fwait
sti
add
shrb
cld
cmpsl
ja
outsb
dec
adc
xchg
das
lret
push
xor
repz
ljmp
inc
fs
ds
insb
jo
xchg
js,pt
adc
or
mov
jg
inc
dec
inc
push
outsl
push
in
dec
sub
xor
mov
push
fnstenv
mov
stos
decl
mov
std
aad
js
wbinvd
add
jb
popa
sti
outsb
and
push
pop
or
mov
or
test
add
imul
popa
add
int
adc
pop
popa
cmpsb
shll
push
adc
push
test
dec
mov
mov
loopne
fs
xchg
push
xor
xor
xor
stos
jp
xor
stos
push
mov
push
cwtl
pop
mov
push
add
cmp
fisttpl
or
and
xchg
sti
iret
rcrl
lock
mov
mov
mov
jle
jmp
pop
inc
lcall
mov
push
inc
aaa
outsb
loop
in
mov
incl
dec
push
pop
mov
insb
pop
xor
orl
or
jno
pop
jns
ret
loop
int3
jmpw
sbb
mov
inc
leave
push
ja
push
decl
in
push
mov
pop
pusha
adc
incl
mov
call
xchg
push
jmp
setnp
cs
cmp
pushf
pop
aaa
dec
push
mov
push
pop
dec
es
adc
adc
addl
cmp
test
pop
pop
jmp
dec
je
and
fisubrs
test
das
fs
adc
adc
les
iret
sarl
in
or
adc
nop
sbb
jb
mov
add
inc
inc
mov
add
push
arpl
orb
pop
add
or
jne
lods
sbb
inc
add
push
or
jne
push
shlb
inc
idiv
pop
icebp
ja
add
cltd
mov
add
add
sub
jg
es
xchg
and
dec
mov
pop
xor
add
sbb
addr16
addl
cmp
sbb
pop
add
sub
and
xchg
sbb
xchg
push
dec
jg
test
shr
div
cmp
insb
push
xor
add
pop
pop
push
lret
mov
mov
xor
loopne
out
out
push
test
mov
adc
lret
in
or
mov
ds
xor
call
xchg
mov
and
popa
mov
gs
scas
imul
mov
add
out
cmp
or
inc
jl
mov
mov
icebp
rolb
js
ss
mov
cmp
cmp
adc
add
or
adc
and
and
rolb
dec
jne
pop
outsl
add
cli
scas
or
roll
adcb
mov
push
rcr
or
div
dec
jmp
inc
sti
pop
and
push
or
pushw
mov
fistpl
and
xor
in
out
add
mov
add
add
loopne
pop
out
pop
xor
push
inc
push
xchg
notb
mov
enter
je
pand
ss
mov
add
push
mov
ljmp
xor
fistpl
cld
push
adc
and
sub
or
pusha
xor
pop
pop
mov
adc
push
add
xchg
scas
clc
cmpsl
sbb
mov
fildl
fprem
xchg
nop
fnstcw
cmpsb
adc
adc
rcrb
jmp
mov
fwait
xorb
fdivs
jl
testb
into
sub
dec
xor
mov
sar
into
popa
loope
add
rorl
jg
cmp
inc
mov
and
sub
jg
sub
pop
add
mov
dec
adc
pop
sub
lahf
cmp
rolb
aaa
sub
mov
and
mov
aam
mov
mov
pop
cmp
and
out
xorl
jo
fadd
add
push
push
push
mov
jecxz
push
xchg
out
fisttpll
and
xor
fadds
testl
dec
cmp
cmp
je
data16
mov
je
jecxz
ljmp
insb
or
mov
cmp
sti
dec
shr
jmp
sub
jne
outsl
and
into
pop
or
mov
pop
jb
rolb
stc
add
call
std
sbbl
stc
add
sub
sub
push
sub
sbb
inc
adc
or
or
push
and
or
leave
sub
lods
and
inc
or
adc
jp
mov
rclb
rcr
dec
out
ss
fldl
sbb
jl
lret
ret
mov
xor
andl
xchg
dec
inc
xor
in
add
xor
pop
scas
or
test
lret
inc
das
add
repz
or
dec
pop
mov
and
es
cmp
jmp
dec
inc
jo
sub
sub
inc
mov
dec
sbb
adc
and
outsl
push
fs
hlt
add
mov
xchg
cli
sbb
jns
dec
or
ja
sub
dec
mov
insb
inc
and
out
mov
add
dec
imul
and
adc
pusha
int3
testl
mov
aas
lea
je
pop
inc
push
lods
inc
xchg
lods
xor
sbb
add
or
xchg
pop
sub
dec
inc
adc
dec
lods
mov
mov
das
mov
or
repz
mov
lcall
inc
cltd
cmp
loop
jo
fninit
sahf
xorb
addr16
add
xchg
popa
lods
jo
pushl
arpl
mov
jne
add
or
xor
push
pop
idivb
sub
sub
jne
adc
mov
fnsave
or
xor
fwait
sbb
mov
popf
shrb
aad
test
test
dec
dec
or
arpl
jle
repnz
xor
or
mov
enter
std
aad
outsb
inc
push
add
popa
xor
cmp
mov
inc
mov
pop
push
mov
test
mov
std
jp
stos
add
rep
adc
jbe
fildll
or
hlt
je
or
je
shrl
jmp
clc
mov
inc
jmp
lods
cmp
sub
add
jne
sub
or
or
add
jp
ret
and
hlt
repz
pop
cld
scas
push
jl
pop
iret
sbb
pop
add
pop
jb
imul
jmp
mov
movl
orb
jbe
mov
inc
or
daa
push
repnz
add
ret
xor
mov
fcmovu
or
pop
movsl
adc
mov
loope
rcrb
inc
xor
test
jbe,pn
pop
lods
shl
les
jb
je
jle
mov
pop
jne
je
and
out
std
and
mov
je
insl
sub
jl
call
add
pop
in
adc
in
cmp
pop
sti
push
jne,pn
inc
dec
jne
jmp
repz
in
adc
icebp
xor
out
fcmovb
adcb
dec
lods
loop
jmp
jne
or
jns
neg
mov
inc
dec
mov
rcrl
ret
mov
xor
mov
xor
cmp
jb
push
pop
mov
push
jne
pop
pop
jns
ljmp
icebp
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
sbb
adc
sbb
mov
mov
adc
add
data16
fstps
stos
out
data16
dec
scas
in
jmp
mov
insl
jp
add
mov
fistpll
in
adc
leave
push
mov
mov
pop
dec
in
mov
stc
fcoms
pop
mov
sarb
mov
aaa
sbb
adc
adc
pop
and
mov
adc
lds
xchg
cmp
inc
testl
je
arpl
xorl
pusha
dec
mov
pop
or
les
cmpsb
mov
mov
and
fnsave
dec
mov
orl
sub
push
fsts
inc
or
testb
or
filds
es
fistps
ret
adcb
fiaddl
shrl
popa
xchg
adc
xor
add
add
fcom
fstsw
sahf
jae
fnstcw
sbb
loope
add
ret
ffree
ffree
ffree
pop
jne
sarb
jge
push
inc
sbb
jge
or
inc
push
xor
and
incl
aam
inc
ljmp
mov
push
push
dec
mov
dec
andl
add
scas
loope
cwtl
adcl
xor
aas
jp
xor
icebp
inc
loopne
and
adc
mov
push
push
subb
test
sub
jmp
nop
mov
mov
jp
pushf
adc
add
push
clc
mov
test
lods
sub
icebp
push
les
pop
inc
jne
mov
pop
jo
mov
pushl
repnz
push
cmp
call
lods
push
in
imul
push
add
mov
mov
sub
mov
lods
mov
jns
testb
mov
adc
insl
sbb
mov
ret
das
cmp
shll
inc
push
call
pop
dec
mov
jae
push
cwtl
lock
test
mov
inc
stos
mov
mov
push
hlt
test
flds
je
pop
add
push
jo
inc
and
rclb
ljmp
paddusb
outsl
sahf
imul
add
cmp
fwait
test
fldt
fcomps
setne
cmp
add
dec
pop
dec
pop
sti
fldt
pop
imul
cltd
nop
mov
ljmp
pop
xor
call
mov
sub
mov
ljmp
adc
push
aas
and
mov
movb
xchg
enter
and
clc
or
mov
mov
aad
faddl
mov
and
fdivr
inc
ja
jmp
fucomp
cmp
rcll
fmull
push
mov
test
movsl
mov
scas
and
sbb
cmpb
xchg
dec
pop
pop
xor
pop
and
or
add
in
jae
or
test
aam
lods
aas
pop
jecxz
mov
sub
push
ret
popa
push
xchg
stc
sahf
sbb
pushl
mov
movsb
popl
subl
dec
rcll
ret
cltd
hlt
lock
scas
imul
adc
mov
into
popa
cmpsb
xchg
or
sbb
push
lea
jae
or
je
jnp
or
or
mov
mov
mov
scas
bound
cs
pop
or
mov
pop
inc
decb
and
xlat
or
cmpw
or
out
mov
cmp
or
incb
fdivs
ud0
ja
sbb
je
add
lcall
daa
xchg
push
push
xor
insb
sbb
mov
adc
je
pop
adc
adc
add
xor
nop
cmpsl
xor
inc
jnp
push
or
movl
mov
jg
mov
mov
jns
sbb
mov
xchg
push
rorl
jge
shrl
loopne
test
dec
sbb
add
mov
pop
cs
test
mov
dec
pop
lret
dec
adc
das
into
pop
ja
lock
outsl
xor
pop
outsl
sub
or
sahf
adc
testl
int
cmp
pop
sarl
mov
push
add
add
out
cwtl
mov
jg
sub
dec
sbb
ficoml
push
xchg
push
adc
aaa
push
mov
cmp
ret
shrb
stos
test
inc
sbb
movsl
jle
pop
push
mov
stc
imul
sub
or
mov
pop
cmp
jle
outsl
add
ss
jo
sub
aas
call
xor
push
lahf
ds
hlt
clc
cld
push
stc
test
push
hlt
fcmovnb
imull
inc
call
lcall
xchg
dec
pop
add
inc
rcrb
ss
adc
adc
cmpb
es
neg
push
decl
pop
add
jmp
into
jp
cld
je
test
jne
xor
inc
or
les
sbb
push
data16
dec
adc
pop
cmp
xor
mov
filds
aaa
xchg
test
sub
test
imul
out
pop
je
push
add
adc
cmp
sti
ja
pop
ret
inc
or
lds
xor
ficoml
les
jmp
fnsave
lret
imul
mov
scas
cmp
push
jle
cld
sbb
xor
dec
mov
and
or
sbb
mov
xor
mov
test
cmp
scas
cmp
or
mov
jb
cmp
data16
lret
push
sbb
or
sub
je
dec
rorb
inc
fidivrs
fiadds
inc
cli
xor
cmp
jae
js
pop
shrb
shl
lock
ljmp
push
jb
negb
dec
fs
rcrb
pushf
push
cltd
add
cmpsb
dec
xor
jmp
ficompl
addb
mov
cmp
pop
mov
mov
dec
jge
out
jne
xor
ss
imul
inc
pop
outsl
pop
dec
mov
jmp
xchg
pop
pushf
dec
mov
inc
adc
dec
hlt
pop
pushw
adc
mov
sti
out
fdivp
rorl
xor
sub
jbe
push
lea
and
testl
push
mov
and
shll
inc
jmp
push
pop
pop
push
pop
push
clc
dec
gs
mov
jge
int3
aaa
mov
push
mov
rorb
and
mov
push
pop
cli
or
rclb
add
push
push
and
lret
pop
cwtl
inc
add
movsb
mov
popa
dec
insb
sub
fildl
sti
mov
and
adc
add
mov
dec
testl
psubq
lock
test
mov
mov
push
cmp
sub
or
subl
mov
cli
cmp
jbe
mov
lea
div
popa
jp
sbb
mov
inc
es
lret
test
pop
or
lods
addr16
or
push
or
add
in
xor
adc
jmp
adc
test
je
inc
les
dec
adcl
inc
adc
ret
jg
in
inc
ret
and
pop
push
shrb
xchg
lods
in
jne
sbb
sqrtps
xchg
xchg
filds
adc
mov
xchg
add
outsb
and
or
loopne
push
and
push
inc
cmp
pop
jge
mov
movsb
jo
sahf
lock
cld
mov
and
cvtps2pi
fcoml
xor
loop
sub
fadd
icebp
mov
mov
add
fs
jmp
lcall
add
adc
sub
decb
loopne
xor
js
mov
leave
inc
outsb
dec
das
aad
jl
icebp
jle
sti
in
mov
cwtl
or
and
and
push
sub
mov
rolb
shl
mov
mov
lret
call
jl
in
inc
sbb
cmp
xchg
repz
push
ret
popa
pop
cmp
test
das
mov
add
inc
mov
xchg
and
cmp
out
mov
loopne
les
xor
lock
outsl
enter
icebp
jo
or
or
add
and
sbb
add
push
adc
jle
clc
outsl
ficoms
stos
dec
jne
mov
sub
add
and
sub
jo
cmp
jecxz
cld
scas
or
sub
movsb
ss
adc
adc
out
loope
es
adc
xchg
ja
and
push
stos
inc
fcmovnu
outsl
xor
mov
push
push
sbb
sub
jg
add
xchg
sub
add
shll
dec
fiaddl
movsl
xchg
sbb
and
and
cmp
mov
sahf
sbb
nop
sbb
xor
jb
push
cmp
mov
pusha
sbb
add
and
pop
fdivrs
test
pop
sub
adc
push
mov
cmpb
ret
je
dec
fcompl
and
mov
sbb
inc
inc
imul
fildll
add
and
push
and
push
daa
es
daa
imul
jns
mov
test
dec
aaa
loopne,pt
fidivrs
stos
pop
mov
fs
mov
fdivl
test
pop
push
mov
mov
cld
iret
inc
mov
sub
je
rcrl
cmp
sbb
or
dec
mov
cld
jmp
lea
je
add
jle
jmp
jmp
jge
jo
xor
cwtl
cmp
test
lock
cmp
sbb
dec
pop
add
out
xchg
push
jle
lods
movsb
pop
xor
jle
call
mov
out
xchg
mov
sahf
ljmp
pop
jg
adc
js
std
in
inc
ds
jl
dec
jo
adc
fstps
inc
cmp
ja
sbb
data16
mov
divl
es
mov
cmpsb
jo
imul
pop
inc
push
xchg
pop
fs
dec
pop
inc
in
add
push
add
inc
je
jl
in
aas
mov
or
je
mov
inc
je
mov
dec
je
aas
fcompl
mov
mov
ret
clc
cmp
and
fcoms
add
pusha
loopne
inc
ja
push
cmp
ds
arpl
jl
sti
orl
push
scas
ja
sub
and
sub
shl
leave
push
cmc
ret
jb
inc
pop
in
push
lock
dec
inc
dec
push
xor
sbb
imulb
shrb
push
mov
mov
neg
loop
pop
lock
or
outsb
mov
inc
xchg
push
push
mov
add
inc
add
mov
add
pusha
subb
inc
dec
xchg
jbe
mov
jg
cmp
add
rorb
cmp
sbb
aas
loopne
ret
jle
lcall
mov
testb
mov
repz
adc
in
pop
cmp
jge
sub
es
mov
daa
dec
jge
sub
sub
mov
fcmovbe
push
and
push
sub
cld
je
sbb
sbb
push
xchg
dec
and
inc
sar
jmp
call
fldl
mov
je
out
adc
or
mov
add
shll
add
mov
sbb
sub
push
repnz
ds
adc
inc
lods
or
dec
xor
jbe
faddl
push
stos
ret
or
pop
sbb
add
and
and
dec
jnp
and
xor
ret
mov
neg
and
insl
idivb
inc
movsb
je
sahf
and
cmc
adc
ja
loopne
push
stos
xor
es
push
xchg
sub
lret
fisttps
sub
scas
mov
movsl
loopne
outsl
and
divl
cld
sub
leave
mov
mov
bound
imul
ret
jb
mov
in
pop
or
ja
loopne
cs
je
mov
dec
into
icebp
cs
jecxz
mov
lock
jne
loop
faddp
stos
js
ljmp
and
pop
xor
push
add
or
dec
js
jne
add
add
adc
inc
ja
sbb
mov
or
mov
inc
mov
lock
loop
xchg
and
cmp
or
or
std
ja
mov
pop
inc
loop
ret
push
mov
test
push
in
cs
inc
add
and
mov
sti
or
adc
and
sub
inc
sub
in
or
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
leave
dec
add
push
jmp
loop
nop
test
mov
in
icebp
cmp
lcall
mov
ret
je
cmp
mov
push
xchg
adc
or
mov
inc
adc
sbb
movb
sbb
fldt
sarb
cltd
or
fisubrs
adc
push
xlat
push
js
les
fabs
push
add
aad
aas
ds
pop
frndint
xor
scas
or
fcomp
fstsw
fwait
pop
mov
pusha
je
fidivl
out
fistps
call
or
mov
mov
shr
and
fldt
cmp
mov
clc
add
leave
or
jge
jns
pop
mov
jge
outsl
mov
call
jae
cmpb
jb
movb
js
dec
cmpb
ja
jmp
add
cmpl
cmp
inc
xor
pop
adc
shr
mov
add
clc
add
out
ret
aad
jp
neg
jno
clc
daa
iret
rorl
into
mov
and
add
push
push
sub
shrl
and
or
loope
sub
xor
adc
jl
mov
push
inc
sub
mov
loopne
jae
dec
add
outsb
adc
aas
sub
fildll
cli
mov
cmp
mov
mov
sub
setnp
jne
mov
sbb
sub
mov
and
jne
dec
in
out
adc
cmp
aas
and
mov
inc
ljmp
enter
or
push
into
cmpb
divl
pop
jmp
xor
je
mov
iret
loop
hlt
js
push
or
pop
mov
mov
xor
f2xm1
fwait
add
lcall
das
push
fldz
push
pop
mov
cmp
je
or
pop
adc
mov
daa
and
imull
js
cmp
icebp
je
and
fistpll
sub
clc
xlat
jnp
pop
add
jg
jne
mov
cld
movsl
inc
and
pop
inc
push
mov
add
loopne
call
fstpt
xchg
adc
sub
test
adc
test
push
pop
rclb
insl
and
push
add
and
clc
outsl
mov
dec
ret
mov
sub
add
jae
fimull
adc
jmp
aaa
mov
idiv
daa
push
sbb
es
push
inc
imul
mov
cmp
add
adc
or
test
into
mov
cs
xorb
outsb
xchg
test
lret
sahf
sbb
sbb
and
xchg
cs
andb
aaa
push
bound
mov
push
fisttpl
fs
fwait
nop
stos
outsl
pop
add
add
push
stos
cmp
sarb
je
das
cmp
aam
and
sub
notl
pop
jo
mov
js
fldcw
ja
and
repz
mov
dec
push
fstpl
fwait
mov
aas
push
jno
addr16
mov
mov
sti
mov
repnz
pop
inc
add
and
and
inc
sub
fld
pop
sti
jg
push
leave
jle
pop
or
push
addl
xor
lcall
inc
dec
call
cmc
insb
mov
xor
push
adc
inc
leave
sub
add
les
test
clc
mov
fcmovnb
ficomps
jae
or
cmp
inc
stc
inc
xor
jbe
cmp
imul
shrb
pusha
ljmp
adc
cmp
ficomps
insb
fildl
xor
sbb
arpl
fstpl
fwait
nop
sbbb
jg
adc
and
add
sbb
add
or
add
xchg
in
jg
hlt
lea
mov
nop
xor
daa
inc
lret
push
push
cmp
xchg
and
mulb
xor
enter
loopne
call
fs
ret
mov
push
lcall
add
push
in
icebp
into
ja
xchg
sub
sqrtps
leave
sub
add
hlt
and
movsb
jg
sbb
add
and
fcomps
xchg
ja
and
cmpsb
std
push
shlb
or
jb
sti
insb
je
cmp
test
pop
inc
ja
adc
jle
mov
add
inc
dec
jne
sub
dec
mov
orb
aas
aas
cltd
idiv
imul
cmp
add
cli
add
repnz
ds
mov
or
ds
add
or
js
jne
vpaddw
adc
je
add
sub
sbb
faddl
pop
pop
dec
test
jg
pop
movl
cmp
push
lock
sbb
cmpb
cmpsl
inc
pop
inc
mov
dec
data16
outsb
mov
inc
add
push
je
popf
jne
add
mov
mov
pop
push
lods
mov
fisubl
and
cmp
imul
psadbw
or
push
sub
out
mov
push
sbb
add
ss
sub
push
pop
mov
cwtl
inc
stos
push
jbe
daa
xor
fsubrl
cmp
fisubrl
jb
adc
sbb
sub
sbb
add
ret
lods
inc
adc
sub
pop
outsb
not
add
jbe
dec
push
fwait
and
ret
ds
fwait
loope
test
mov
divl
je
mov
test
and
jg
or
inc
cmpb
cld
nop
scas
cmp
aaa
and
mov
add
lea
sarl
aaa
xor
icebp
fwait
out
insb
and
pop
shlb
adc
adc
push
xchg
xor
sub
imul
adc
adc
xor
rcrb
xlat
or
push
sub
adc
into
sahf
cli
mov
adc
enter
rorb
loop
loopne
mov
test
mov
bound
push
and
je
mov
mov
test
inc
in
sub
cmpb
jne
mov
xchg
lea
or
dec
sti
fucomi
cmpsl
jns
mov
movb
outsl
loop
fistl
shlb
push
repnz
jge
js
lahf
lret
idiv
and
nop
mov
mov
in
push
xchg
test
adc
pop
xorl
iret
stc
int3
sbb
adc
in
leave
repnz
add
ja
dec
outsb
pop
in
push
pop
and
rolb
pop
ret
xchg
std
jl
mov
mov
sbb
add
sti
add
lret
inc
fisttpll
je
or
popf
pusha
pop
or
mov
lahf
or
enter
jno
cmp
dec
pusha
add
sub
mov
or
hlt
cmpsb
rcl
mov
clc
clc
inc
xchg
add
or
pop
movsb
pop
adc
aam
xor
in
push
jb
sti
sbb
loopne
jne
pop
add
fptan
imul
inc
cltd
add
jb
inc
or
mov
and
cmp
inc
mov
jmp
xor
je
xor
push
add
and
pop
xor
sarl
sbb
insb
into
dec
xor
and
dec
lods
push
or
xor
jns
aaa
push
dec
popa
fildl
das
fists
mov
into
aam
fcomps
les
lahf
test
sub
mov
pushw
clc
std
mov
xor
andb
movsb
stos
jbe
enter
inc
pop
hlt
fistpll
repnz
adc
or
loop
bswap
scas
inc
stos
add
data16
out
int3
imul
rcr
sub
pop
ljmp
call
push
loopne
pop
adc
fsub
dec
jne
flds
ss
fs
fisubrs
js
mov
xchg
push
xchg
mov
pop
cmp
and
xchg
adc
or
insl
loopne
mov
pop
fisttps
or
lret
or
fxch
sarl
js
andb
iret
shrl
cmp
mov
pusha
aad
xor
push
jle
clc
jge
push
mov
dec
pop
cmp
test
cmp
xchg
mov
or
and
mov
mov
lea
in
rcr
iret
xchg
sub
into
sbbb
dec
fcoml
cmpb
ljmp
sub
sbb
xchg
xor
leave
mov
or
dec
add
jmp
out
aad
add
fwait
jl
pop
aam
mov
dec
leave
inc
and
js
ret
xchg
dec
nop
and
pop
sahf
fimuls
mov
lcall
sbb
mov
inc
push
push
add
adc
mov
je
or
push
jmp
or
je
inc
jge
shrl
pop
jmp
cmpb
dec
mov
pop
or
push
inc
sub
movsb
repnz
dec
rolb
push
mov
xor
mov
rclb
or
ret
ret
call
rcrb
dec
fldcw
or
int3
ficompl
sbb
or
or
or
add
push
or
jb
mov
inc
push
fsubs
hlt
inc
lea
inc
mov
add
and
sarb
mov
xchg
lret
add
repnz
inc
test
and
jne
xor
aam
mov
and
push
addb
test
jns
add
xchg
xor
jae
repnz
gs
and
push
pop
xor
cmpsb
dec
lea
xchg
in
movsb
xor
cld
add
roll
sbb
dec
push
sub
adc
and
hlt
push
scas
call
insb
cs
jns
add
mov
push
in
fiaddl
or
mov
adc
jmp
add
test
add
mov
push
mov
xchg
dec
mov
jne
loope
sbb
clc
push
in
sub
jnp
movsl
xchg
mov
sbb
adc
pop
push
cli
mov
data16
add
mov
dec
sahf
ret
adc
inc
aam
idivl
das
add
fldt
sahf
sbb
cmovge
push
add
test
mov
and
aad
sarl
pop
xchg
sbb
les
mov
push
sbb
or
lea
or
mov
js
mov
add
inc
cmp
pop
xchg
dec
ficoms
hlt
mov
pop
je
mov
and
je
pushl
hlt
mov
push
rcll
negl
call
xlat
xchg
xor
xchg
add
ret
push
nop
mov
mov
jecxz
test
clc
ljmp
push
aas
sbb
pop
xor
or
cmp
jle
js
rorb
je
sub
add
mov
add
in
repz
ret
shlb
popa
mull
pop
pusha
repnz
ret
int
inc
jecxz
aam
mov
adc
pop
shrb
icebp
push
mov
outsl
jmp
outsb
mov
mov
mov
inc
aam
lea
je
and
stc
sub
push
sub
movl
stos
add
inc
jl
jne
ljmp
add
pop
and
adcb
mov
ret
and
idiv
mov
and
dec
je
adc
je
or
push
jmp
mov
and
sbb
sbb
dec
dec
ficoms
scas
lock
push
pop
icebp
jle
xor
sub
mov
sub
xlat
jmp
gs
add
data16
sar
dec
test
jbe
and
ret
dec
sti
mov
je
dec
fcoml
or
jecxz
jo
incl
add
jmp
mov
fidivs
and
cld
add
mov
mov
or
mov
mov
roll
adc
cvtps2pd
mov
jmp
ret
shrb
loop
shrb
jmp
pop
or
cmp
jg
mov
rcll
inc
enter
xor
mov
cli
ret
add
pop
lahf
stc
imul
add
fisubs
pop
dec
mov
div
adc
decl
gs
and
aam
loop
adc
aam
add
inc
lock
push
dec
rorl
rcrl
rorb
in
jl
xchg
lock
out
add
xor
mov
leave
sarl
adc
ljmp
jne
shll
pop
cmpsl
aad
and
dec
xchg
mov
add
es
lods
xchg
push
clc
dec
hlt
in
mov
rcrl
sub
int3
lcall
cmp
xchg
mov
mov
xor
adc
mov
pusha
and
in
push
into
dec
nop
xor
fmull
loop
enter
xor
xchg
add
call
add
out
sub
jb
and
pusha
cmp
js
inc
mov
xor
cmp
sub
ljmp
cmp
ljmp
in
jecxz
icebp
adc
mov
xor
mov
add
cmp
jl
imul
jmp
into
test
xor
lock
jl
mov
jle
and
fs
jno
mov
stos
mov
sub
or
inc
cld
or
cmp
mov
dec
add
cwtl
pop
jo
adc
leave
aad
movsb
arpl
or
push
popa
pop
xor
adc
mov
pop
shlb
jne
jmp
dec
jnp
data16
out
xor
aas
fsubs
dec
sar
rolb
pop
aam
mov
sbb
popa
pop
loopne
or
test
xor
out
pushf
mov
out
lds
dec
add
mov
hlt
cmpsl
mov
pop
out
out
fiadds
jmp
add
push
pop
push
repnz
mov
lret
mov
les
outsl
or
mov
sqrtps
sub
test
jb
push
add
or
mov
pop
lds
jb
int
inc
outsl
fisubl
fisttpll
sysenter
push
int3
and
or
dec
ret
jle
cmp
or
add
add
xchg
pop
xor
add
push
test
mov
cmp
inc
ss
je,pn
ja
jne
mov
sahf
push
adc
jnp
jno
data16
loopne
dec
add
push
pop
sub
xchg
loop
xchg
mov
inc
adc
mov
mov
das
dec
mov
fimull
call
xchg
lret
mov
pushf
mov
xor
sbb
add
jp
pushf
sbb
shll
sbb
dec
lea
inc
loopne
add
push
jb
cmp
inc
inc
arpl
fmuls
pop
dec
and
cmp
cmp
jp
push
loope
push
dec
loopne
jno
inc
inc
cmp
dec
lock
fistpl
xchg
pop
mov
jg
pop
xor
hlt
dec
add
std
cld
jle
pop
jge,pt
ljmp
in
popf
ret
fbstp
sub
push
pushf
and
xor
sbb
add
mov
pop
adc
and
push
stos
mov
and
imulb
fdivrs
aas
mov
mov
sub
push
push
sbb
daa
xchg
lock
push
pop
fdivrs
mov
lock
loopne
sbb
push
sbb
mov
xor
int3
cmpsb
jle
sub
jge
aaa
dec
gs
aaa
push
inc
mov
dec
pop
leave
stos
cmp
in
bound
or
inc
adc
sub
add
push
jmp
add
push
xchg
xor
imul
inc
and
or
and
push
lret
xchg
popa
sub
aad
dec
ja
sbb
insb
das
sub
test
inc
jmp
fs
add
inc
jecxz
into
pop
bound
xor
add
push
or
jp
jp
mov
outsl
bound
xchg
jle
and
cmp
jg
add
hlt
push
or
mov
mov
mov
mov
push
aam
adc
sbb
pop
mov
push
inc
or
shrb
mov
jge
inc
inc
inc
dec
into
aas
insb
pop
or
or
jl
xchg
inc
lock
cmp
cmpsl
xchg
xchg
inc
inc
addr16
dec
and
sti
or
fucomp
push
fidivrl
scas
mov
in
nop
es
pop
leave
cld
shlb
in
or
movsb
stc
dec
call
xchg
icebp
nop
or
adc
test
push
inc
jb
fisttpl
ljmp
jl
je
mov
cmp
icebp
jne
orb
adc
test
add
mov
jp
jne
xchg
add
test
pushf
sub
lock
add
sub
pushf
add
mov
cmpsb
je
insl
jl
pop
clc
mov
in
pop
push
mov
push
cmpsl
mov
push
mull
adc
aam
cmp
xchg
fiaddl
std
mov
jae
push
push
and
push
sahf
shl
pop
jae
in
xor
push
sahf
cmpsl
sbb
hlt
push
push
leave
and
in
push
out
push
es
adc
bound
test
je
mov
rorb
outsl
push
jnp
adc
lret
cmpsl
lods
hlt
mov
es
hlt
movsl
shlb
xchg
add
sub
loopne
xchg
pop
aas
inc
je
or
rcll
dec
xor
or
call
je
or
je
pushf
inc
sbb
test
mov
xchg
add
jle
lret
rcrb
mov
stos
ss
ficompl
test
out
mov
push
aaa
jle
in
imul
mov
dec
add
or
add
iret
xor
push
cli
cmp
mov
outsb
add
subb
ss
xor
jb
adc
add
inc
sahf
or
jmp
mov
sub
in
aam
cmp
push
je
jne
mov
pop
jns
clc
jmp
int3
cmp
xchg
call
mov
push
inc
jbe
sbb
push
inc
add
mov
mov
jb
jbe
aad
add
aas
adc
aaa
jg
jo
cs
sub
sbb
pushf
stc
cmpsl
adc
xor
mov
addb
mov
xor
jne
repz
sbb
xor
sbb
and
jne
fiaddl
mov
loop
mov
popf
mov
or
ja
cmp
ret
inc
dec
push
jb
pop
and
dec
filds
bound
inc
cmp
and
sbb
add
mov
or
jge
jl
fs
jp
cmp
lret
hlt
movsb
dec
xor
push
adc
scas
orb
pop
iret
out
xchg
movb
jae
and
lods
or
mov
add
adc
mov
les
in
orb
rolb
cs
lods
stc
lea
mov
sbb
mov
push
sbbl
call
xor
add
stc
dec
dec
js
js
xchg
psadbw
clc
adcb
aas
rolb
mov
ds
cmpb
popl
mov
push
cmp
lock
bound
mov
push
push
add
test
hlt
dec
subl
xchg
xor
test
push
xchg
push
gs
dec
adc
aaa
push
rcl
std
mov
dec
push
das
js
xor
dec
xor
mov
lcall
fwait
pop
mov
jecxz
cwtl
sub
fdivl
lret
and
pop
dec
ss
xchg
shr
pop
lods
adc
mov
push
jb
xchg
inc
push
or
sub
xchg
jl
addb
xor
jo
pusha
fmull
lock
pusha
les
fstps
inc
jo
mov
xchg
ja
loopne
jnp
add
loop
add
mov
pop
pushf
test
push
adc
and
fwait
popf
xchg
inc
adc
inc
mov
xchg
jg
or
lea
insl
sub
mov
adc
adc
test
mov
and
imul
inc
sbb
sub
pusha
mov
sub
divl
das
sub
push
jnp
sbb
aaa
push
imul
fs
insb
addr16
pop
adc
daa
aam
fldcw
sbb
mov
pusha
rcrb
pop
sub
inc
daa
xor
push
or
adc
pop
pop
jae
mov
pop
ljmp
test
adc
ljmp
mov
fadds
fsubl
push
mov
jbe
and
inc
rcrl
pushf
movb
add
fdivs
outsb
cmc
mov
cmp
jg
jl
sbb
loopne
bound
sbb
pop
flds
or
dec
cmp
sbb
repnz
push
jg
ja
or
xor
loope
add
cld
dec
add
push
sbb
dec
clc
pop
sbb
xor
gs
and
adc
adc
test
add
inc
dec
adc
jnp
sub
gs
xchg
adc
int3
add
and
sbb
mov
ret
test
or
adc
add
push
push
push
inc
add
mov
or
add
sbb
test
sbb
sbb
add
push
or
test
es
mov
pop
push
inc
lahf
cmp
mov
add
lcall
adc
ljmp
mov
mov
jmp
push
mov
mov
mov
xor
mov
sbb
in
ret
jecxz
jle
pop
adc
lcall
loopne
scas
loopne
inc
push
loopne
cld
jno
and
inc
or
and
inc
xchg
jmp
push
mov
fst
hlt
in
inc
call
or
aaa
push
test
hlt
clc
cmp
push
loopne
dec
inc
push
pop
nop
movsb
loop
insb
out
leave
repz
int3
jge
pop
loopne
and
insl
add
mov
push
cs
push
aam
dec
push
add
cwtl
outsl
cwtl
movsb
out
test
adc
fildl
add
jb
xchg
rcrl
push
xchg
movsb
sub
cmp
in
rcll
je
jmp
xor
lahf
lret
jmp
and
add
add
imul
push
push
push
test
fcompl
pop
les
ljmp
or
push
adc
mov
inc
mov
jo
nop
iret
cmpb
cld
pop
cld
orl
xor
fs
jae
pop
into
jl
or
pop
jge
xor
test
sub
jecxz
xor
mov
pop
les
xorb
mov
push
xor
mov
dec
lods
popa
addl
int3
repz
lock
mov
repnz
mov
mov
cmp
loope
loope
arpl
jle
jecxz
mov
sub
lret
enter
mov
xchg
nop
add
bound
push
mov
adc
xor
add
popa
test
lcall
gs
out
imul
or
push
xor
and
mov
cmp
jl
pop
sarb
xor
jbe
jecxz
inc
fsubs
jle
es
pop
adc
popa
inc
sbb
dec
adc
sbb
movsl
je
mov
rcll
out
sub
faddl
aaa
and
mov
lret
data16
mov
mov
xchg
lret
xor
lock
inc
adc
mov
dec
bound
inc
mov
mov
or
popa
pop
sub
jle
in
cmc
mov
mov
sbb
mov
xchg
movsl
imul
rcr
shufps
adc
aaa
inc
mov
rcrb
les
into
movl
dec
adc
mov
xor
xor
inc
push
insb
xchg
jnp
push
in
ret
loopne
mov
mov
aad
and
add
push
loopne
cmpsb
cmp
adc
mov
add
push
push
mov
add
mov
outsl
jl
xchg
xchg
dec
push
repz
sbb
add
mov
lods
lock
push
push
mov
pop
dec
jne
lea
push
and
cmp
mov
inc
mov
mov
inc
jo
inc
cld
and
ret
aam
push
xchg
mov
mov
xchg
sahf
cmp
int3
add
sub
sub
push
in
dec
shlb
push
mov
cmp
sub
jnp
inc
inc
push
cwtl
mov
xor
mov
lcall
lcall
push
ret
test
add
xchg
or
or
mov
and
popa
mov
and
cmp
jne
inc
dec
and
fadd
pusha
mov
jecxz
mov
popa
mov
mov
adc
push
and
cwtl
inc
sbb
aas
push
mov
mov
or
loopne
cmp
add
and
aas
imul
dec
mov
pop
adc
mov
adc
mov
sahf
inc
test
jl
prefetcht0
imul
inc
or
fwait
out
push
out
data16
xchg
jle
insb
xchg
and
test
sub
movsb
jae
pop
mov
mov
sti
pop
pavgb
and
mov
addr16
lret
cmp
cwtl
mov
dec
cmp
xchg
outsb
sbb
aaa
dec
pop
dec
push
cmc
data16
leave
and
loop
outsl
add
mov
xor
or
setge
inc
mov
leave
mov
int
cli
bound
pop
int
int3
lods
inc
call
push
pop
lock
adc
mov
mov
fisttps
push
push
push
addb
mov
sub
mov
inc
pusha
fldl
test
pop
xor
dec
scas
inc
push
xchg
shl
adc
test
sbb
lea
mov
and
addb
sub
cli
push
inc
xor
jne
jg
add
ret
mov
and
dec
inc
movsl
mov
nop
jle
cmp
or
out
iret
jno
xor
clc
inc
and
inc
aaa
mov
add
test
sahf
inc
adc
add
lods
aas
inc
out
std
dec
add
or
pop
in
jle
dec
dec
push
add
xor
jge
clc
jl
xor
or
sbb
fdivs
jb
or
add
pop
bound
and
sub
orl
xchg
imul
nop
repnz
push
cmp
jns
cmp
add
divb
push
or
movsb
lods
loop,pn
nop
hlt
jle
sahf
sbb
push
xchg
push
enter
push
sahf
imul
or
ficomps
pop
enter
mov
jle
sbb
add
sarb
mov
arpl
add
bound
lock
pop
mov
mov
subl
lods
jmp
cmp
mov
mov
js
cli
push
shld
xchg
push
sbb
and
mov
sbb
xor
daa
or
ret
js
pop
pop
in
jp
cmp
fcomps
mov
addl
pop
sbb
pusha
cmp
add
add
inc
pop
insl
mov
sub
xor
loope
jae
and
cmpsl
mov
xor
lahf
inc
enter
repz
sub
iret
jmp
outsl
mov
popf
adc
adc
cmp
mov
cltd
adc
repz
push
rcll
inc
mov
outsl
test
and
dec
outsb
pop
xchg
pop
cvttps2pi
or
mov
jge
stos
xor
in
push
fbld
dec
jne
cwtl
aaa
dec
pop
aaa
pop
sub
jmp
mov
add
clc
sub
sbb
lret
jne
ret
fstpt
jge
pop
or
pop
jne
cmpsl
test
dec
push
mov
mov
or
cmp
mov
clc
xorb
mov
data16
gs
push
mov
add
shr
mov
mov
mov
xor
cmpl
push
jecxz
cmpsl
add
movb
push
fmul
lods
adcb
or
clc
dec
push
sbbl
push
mov
rorl
mov
scas
decb
stc
push
stc
inc
jae
mov
inc
mov
aam
push
sbb
sbb
xchg
pop
push
mov
adc
lock
lock
xchg
sbb
push
subb
jb
pop
cld
inc
call
test
sub
mov
testl
or
leave
aaa
test
sarb
jae
sbb
fsubrl
in
sbbl
mov
fwait
aam
mov
aam
add
mov
jbe
nop
push
xchg
rolb
or
sarb
dec
repnz
pushf
sbb
jbe
leave
adc
enter
aaa
add
xor
outsl
fdivs
jb
mov
sbb
and
ret
adc
hlt
mov
inc
fistl
sbb
sub
push
hlt
mov
pushf
fcoml
cmp
sbb
dec
sub
dec
jae
mov
or
cmpsb
fstps
push
dec
insl
fs
mov
fldt
and
push
and
sub
xlat
push
xor
jo
rclb
jmp
push
push
call
mov
mov
and
out
and
cmpsl
daa
or
cmc
inc
ja
add
push
push
mov
into
out
fadd
mov
insb
es
jo
xor
adc
mov
push
xchg
outsb
pop
lods
pop
add
insl
insl
pop
in
jbe
fsubs
pop
les
dec
pop
jg
mov
in
mov
imul
inc
sbb
add
jae
xor
push
lret
gs
insb
pop
incl
nop
movsb
loopne
cs
loopne
adc
jns
sbb
sbb
dec
and
out
sub
flds
adc
sbb
or
insb
gs
popa
cmp
add
push
adc
inc
inc
mov
shr
push
push
mov
cmpsl
enter
push
hlt
das
push
jbe
mov
pop
les
mov
dec
mov
or
sub
incl
pop
pop
fidivrl
adc
shl
shr
or
pop
or
lret
mov
movsb
push
xor
test
jecxz
ljmp
ja
sub
ret
push
or
nop
mov
pop
push
jo
rclb
add
inc
jge
sbb
inc
jl
imul
lcall
add
inc
jmp
pop
les
sbb
out
and
pop
les
lods
movsb
jno
insb
je
push
orb
adc
pop
fcomp
addr16
rcrl
js
mov
mov
subb
fldt
jmp
adc
rolb
call
push
xchg
pop
inc
xor
lea
cmpl
or
dec
adc
mov
or
adc
jmp
cmp
popa
shrl
lea
push
inc
ret
jmp
cli
data16
jbe
addr16
nop
inc
cmp
jbe
orl
popf
sub
mov
and
add
xchg
cmp
xchg
adc
inc
in
bound
rcll
or
adc
push
cmp
mov
rcrb
sbb
mov
push
pop
xchg
adc
dec
test
dec
mov
in
sbb
adc
push
movb
inc
insb
mov
pop
movsb
fildl
adc
add
add
adc
xchg
add
rorb
mov
mov
cmp
xchg
adc
mov
push
in
lret
push
dec
loop
push
mov
cmp
and
sub
push
dec
mov
xor
cmpb
cmp
lods
cs
push
lahf
fmul
cmp
lods
fidivs
and
dec
stos
xor
popf
aas
aam
shlb
jbe
and
xor
test
je
jmp
test
imul
lods
test
push
ss
add
rcrb
inc
fs
xchg
pop
adc
movl
lret
adc
jo
nop
mov
or
xor
sub
push
push
in
gs
inc
cmp
inc
cmp
loop
jnp
jns
lds
inc
mov
iret
sar
sub
xor
and
adc
movsl
add
sahf
shll
loopne
cmp
aas
pusha
test
add
add
inc
data16
jo
ja
insl
pop
mov
adc
push
push
sbb
mov
sub
cld
push
mov
mov
insb
jae
add
fs
inc
mov
stos
jp
cmp
lock
mov
daa
mov
or
sbb
loopne
push
aam
pop
lret
inc
addl
in
sub
mov
sbb
or
mov
pop
bound
cmpsb
cmc
inc
shlb
clc
jb
add
adc
incl
xor
cmp
add
adc
sbb
add
pop
adcb
push
mov
jae
and
mov
mov
popa
pusha
sub
add
pop
jb
or
jp
in
in
mov
inc
push
cmpsl
fcoms
clc
adc
notb
pushf
push
aaa
test
pop
adc
inc
add
nop
call
or
jno
dec
and
in
mov
cmp
cmpsl
mov
or
sahf
subb
xchg
adc
inc
push
into
loope
mov
mov
fsubrl
xor
mov
cmp
test
and
das
scas
insb
jge
sub
in
sub
incl
push
pop
add
adc
pusha
mov
sbb
ficoml
xchg
nop
inc
jo
stc
push
or
ret
mov
or
mov
ret
pop
outsl
roll
inc
incl
mov
add
cmp
je
push
insl
jge
test
test
inc
fwait
sbb
xchg
pop
xor
pop
das
std
jo
dec
add
jbe
loopne
int
jg
dec
or
imul
dec
in
inc
test
push
das
mov
or
add
sub
fmuls
xor
xor
push
push
pop
push
add
pop
mov
push
inc
cmp
ret
int
jge
hlt
xchg
cmp
mov
add
iret
aad
cmp
jne
roll
insb
ret
cmp
push
daa
adc
jl
mov
xchg
jecxz
sbb
inc
dec
testl
and
inc
pusha
xor
push
cmp
jmp
repz
ret
pop
lcall
das
jl
xor
pop
out
movsb
outsl
push
and
test
jno
sbb
loope
add
ret
mov
loope
jo
jbe
cwtl
and
adc
jge
mov
mov
movsb
movsb
pushf
add
xchg
xchg
rol
gs
cmp
push
ret
jp
rol
push
mov
xchg
sbb
pop
dec
push
xchg
add
and
sahf
fdivs
aaa
and
adc
fdivrs
mov
and
jo
lock
jbe
pop
cmp
call
or
jmp
pop
lods
lret
dec
icebp
cmpb
add
addb
mov
les
sub
aas
loopne
push
xlat
outsl
push
mov
and
hlt
fnstsw
dec
hlt
xor
iret
test
nop
sbb
push
lds
mov
sub
es
fadds
cld
loopne
push
and
lds
xchg
and
push
add
imul
leave
inc
orl
dec
sbbl
icebp
pop
pop
cld
and
add
mov
adc
cltd
ds
cmpsb
adc
scas
add
add
pop
xchg
mov
pop
sub
inc
bound
cmpsb
cmp
and
add
dec
addb
push
add
and
fdivr
in
jo
pop
pusha
in
mov
lds
mov
mov
mov
or
clc
jns
jb
sub
cmp
hlt
addr16
stc
and
lahf
ficompl
outsl
and
xchg
add
sbb
push
pop
cli
enter
mov
popf
jge
and
in
dec
xchg
mov
lsl
pusha
mov
and
loopne
inc
je
scas
nop
hlt
jb
push
add
cmp
xor
mov
lahf
jno
and
cmp
jle
cld
mov
into
add
sarl
into
dec
or
sbb
mov
lea
daa
xchg
test
dec
addb
or
mov
dec
orb
xchg
aam
or
inc
xor
lock
or
pusha
mov
inc
add
mov
pop
inc
popa
xchg
hlt
add
push
jno
pushf
out
enter
fcoms
icebp
rclb
push
aas
or
mov
js
lret
cwtl
sub
mov
xor
sahf
cmpb
jb
xor
cwtl
add
es
push
mov
ljmp
scas
ljmp
js
sbb
sub
rolb
je
rorl
arpl
and
loope
push
pushf
enter
or
pushf
pushf
ja
and
int3
xchg
mov
mov
push
lcall
nop
xor
test
incb
push
pop
cmp
cmp
push
and
movsb
add
ret
jg
lods
pop
test
dec
dec
inc
lea
mov
mov
add
add
and
xchg
push
sub
add
sbb
in
add
call
gs
in
pop
or
mov
inc
or
shlb
cmp
stos
push
adc
call
jo
add
addr16
jne
arpl
aas
pop
js
adc
enter
xor
imul
ret
add
sbb
xlat
mov
sbb
adc
testl
cmpsl
in
jns
mov
sub
roll
push
rclb
rorl
or
jmp
pop
je
cwtl
movl
inc
loop
add
mov
std
mov
movb
or
mov
repz
movsb
mov
sub
mov
lods
add
cmp
inc
or
add
f2xm1
push
mov
nop
and
push
sub
int
inc
pusha
ja
sub
aaa
mov
mov
loop
enter
xchg
inc
int3
mov
fists
test
cmp
icebp
dec
mov
movsb
imull
pop
jg
shr
mov
sahf
sbb
push
push
inc
xchg
dec
jne
jno
add
xor
dec
inc
push
cmpsl
popa
shlb
dec
loope
mov
fs
pop
xor
shl
or
mov
push
xchg
dec
jne
jle
inc
inc
cmp
xor
cs
mov
fisttpl
je
popf
nop
add
stos
jne
or
enter
clc
mov
lock
mov
call
cmp
fcoms
or
rcrb
enter
mov
jns
les
xor
ja
dec
mov
mov
pushf
mov
cld
orb
js
pop
jo
adc
push
int
ja
cs
push
push
mov
dec
sahf
xchg
mov
mov
in
enter
aam
movsl
mov
mov
movsl
repz
pop
push
sbb
mov
cs
fmul
movsb
mov
xchg
in
repnz
lods
add
daa
outsl
movsb
mov
inc
push
pushf
cs
xchg
iret
leave
sub
or
dec
nop
push
jl
cmpsb
xor
pushf
mov
jle
mov
inc
leave
or
xchg
ja
daa
je
das
jo
inc
out
in
mov
push
add
in
jns
pusha
je,pn
push
test
popf
mov
push
cmpsb
sub
daa
out
in
jl
mov
dec
pop
inc
leave
xor
cmp
inc
or
jns
iret
cmp
cmp
out
in
xor
and
inc
add
mov
nop
cmpsl
scas
adc
ds
xor
sub
push
gs
push
ret
xor
lahf
les
xor
lahf
std
inc
and
cmp
push
ret
push
stos
adc
adc
cwtl
pushf
imul
movsb
xlat
xlat
das
jl
or
and
jae
std
fistpll
pop
add
sbbb
int3
adc
mov
clc
loopne
dec
push
enter
or
add
mov
inc
push
repnz
dec
pop
test
dec
into
or
mov
sbb
sbb
mov
fstps
and
mov
outsb
jae
scas
orb
js
loope
pop
jbe
adcb
push
and
pop
add
adc
add
or
pop
loopne
jg
xorl
dec
jp
xchg
sbb
movsb
or
or
push
arpl
jmp
adc
cvtdq2ps
adc
add
sub
cmp
nop
fbld
rclb
push
xchg
inc
pop
leave
sbbl
es
cs
jb
in
cs
add
je
xchg
scas
in
enter
mov
cmpsb
cs
cmp
xchg
sub
clc
movsb
push
push
stc
loop
inc
cmp
cmc
sbb
out
mov
sub
sahf
jb
les
cmp
mov
add
mov
add
in
mov
sbb
sbb
dec
push
ja
jb
fstpt
xchg
xchg
pusha
nop
fisttps
nop
add
sbb
wrmsr
insb
jo
jecxz
add
adc
or
pop
cmp
add
push
call
iret
adc
xchg
mov
leave
leave
push
into
je
insb
subl
roll
aam
xor
mov
sub
add
jne
cmp
fbstp
xor
enter
push
mov
pop
or
mov
dec
xor
sub
add
mov
js
xchg
dec
xor
mov
xor
and
and
xor
and
sub
xor
and
dec
int3
cmp
and
dec
xor
dec
lret
and
lret
fadds
xchg
nop
pop
loopne
push
in
xchg
js
and
lret
call
lret
and
inc
xchg
cwtl
lock
test
iret
lret
and
sub
mov
clc
pushf
enter
and
adc
push
arpl
sub
push
divb
add
xor
push
mov
dec
add
outsl
je
stc
push
shl
rcpps
push
inc
iret
inc
cmp
movsb
jle
adc
outsl
fs
outsb
dec
jb
and
pop
outsl
jb
inc
insl
jo
dec
mov
je
pop
push
popf
or
dec
insb
mov
jns
jae
pusha
sub
pop
dec
xor
pop
add
pop
outsl
push
add
ds
dec
inc
out
jb
adc
jle
mov
push
and
sbb
jb
sub
jmp
add
pop
pop
adc
or
pop
inc
push
mov
sub
mov
js
push
mov
and
mov
pop
sti
arpl
fmul
int3
inc
cltd
cmpsb
dec
push
pop
rcrb
scas
fs
jo
add
push
and
push
inc
cmpsl
pextrw
inc
ret
call
cmp
add
sbb
js
mov
je
fsubrl
call
push
jno
mov
sarb
push
xor
lock
xchg
sbb
daa
mov
mov
inc
insb
dec
loop
fwait
inc
add
lahf
jge
movd
push
cmpsb
sysret
add
pushf
push
mov
loop
push
lret
jb
lock
add
das
or
popf
add
mov
adc
cmpsb
insb
dec
inc
orl
or
push
orb
test
xor
gs
push
xor
clc
ret
mov
mov
pop
xor
mov
data16
add
sbb
xchg
sub
add
sbb
jae
in
pop
je
push
jnp
adcl
adc
mov
sti
jno
daa
cmp
pop
or
dec
lcall
add
pop
xor
push
pop
sub
jns
jecxz
les
mov
jb
das
and
rcll
or
jb
dec
jo
ss
scas
ja
sahf
or
pushf
lea
sub
cld
repnz
mov
aam
dec
inc
pop
push
stos
jns
test
popl
pop
lret
add
sbb
aad
pop
jae
scas
jmp
cmp
addb
or
jg
or
imul
daa
pop
sbb
mov
jbe
sub
out
mov
mov
and
mov
add
add
das
inc
or
les
xchg
jno
repnz
sub
test
xorb
iret
pop
cmp
out
call
or
orb
cwtl
aas
mov
mov
rcrl
iret
pop
andb
cmp
inc
mov
mov
push
push
inc
mov
cmp
push
lock
leave
test
pop
lds
aad
jb
and
pop
cmp
pop
inc
mov
adc
test
mov
mov
or
addb
iret
pop
cmp
pop
mov
and
je
xor
pop
mov
xor
pop
iret
pop
cmp
or
xor
or
dec
cld
push
and
and
inc
leave
add
sbb
das
sub
xor
gs
cs
xlat
pop
inc
cld
cltd
or
and
mov
addr16
and
and
mov
fadds
andb
movsb
aam
bound
mov
insb
movsb
iret
add
orb
pop
xor
pop
adc
and
movsl
cmp
inc
cmp
sbb
add
sbb
push
pop
xlat
pop
inc
inc
or
xor
leave
adc
and
adc
scas
inc
or
sbb
and
inc
xlat
mov
je
cwtl
pop
jl
inc
or
pop
add
inc
iret
pop
cmp
pusha
xor
and
aaa
dec
pop
sub
add
sahf
inc
sbb
dec
xorb
sbb
cs
test
lods
sti
lret
mov
push
push
mov
push
xchg
sbb
cmpsl
mov
rcrl
pop
pop
out
in
add
and
lea
sbb
lret
lahf
xorb
add
cld
adc
loopne
dec
outsb
es
dec
push
jns
es
test
in
mov
ret
sbb
and
test
mov
dec
ffreep
test
into
adc
push
test
and
cmpsb
adc
inc
cmpsl
test
nop
mov
inc
xor
fildll
inc
push
and
pop
mov
and
jp
les
std
cmp
cmp
add
rorb
clc
push
or
sub
mov
mov
shrl
mov
int3
sbb
xor
lods
fs
push
nop
es
push
dec
mov
jbe
add
jl
pushf
and
repnz
ss
movsb
dec
mov
dec
pop
cwtl
insb
clc
mov
mov
xchg
clc
pop
stos
hlt
mov
into
hlt
insb
dec
lock
cmpsb
sub
sbb
movsb
mov
xor
call
mov
cmpb
pushf
dec
in
mov
jmp
ret
movsl
stos
pop
jecxz
inc
push
mov
or
fwait
enter
pop
or
and
je
les
popa
cmp
jns
je
cltd
sarb
lods
sti
add
loopne
or
mov
mov
xchg
aas
sub
jmp
pop
ret
bnd
add
in
fldt
xchg
or
shr
adc
movsl
mov
rcrb
rcr
push
cmp
adc
int
jl
pop
push
pushf
fs
in
loopne
jmp
inc
pop
xchg
vtestps
push
out
jb
push
xlat
mov
push
mov
pop
sbb
lods
inc
jge
xor
cmp
pop
out
roll
test
hlt
push
roll
roll
int3
ret
addl
ret
test
add
iret
divl
inc
cmp
incl
mov
jnp
mov
pushf
xchg
jne
rcrl
pushf
xchg
stos
shr
cmp
mov
rcll
popf
mov
in
loop
or
add
cmp
jae
test
adc
and
fs
scas
es
add
pop
pop
sub
icebp
and
dec
int
mov
or
test
mov
test
inc
xchg
lea
cmp
and
sbb
popf
or
jo
fdivrs
shlb
push
in
lods
or
sub
pop
push
jno
pop
pop
test
test
fdivl
pop
adcl
dec
inc
fisubrl
insl
negl
add
js
mov
aas
dec
or
jae,pt
shl
dec
repz
dec
ja
pop
mov
subb
call
xor
in
cwtl
cmp
mov
insl
mov
mov
clc
andl
sub
inc
jns
addr16
or
add
jmp
sub
or
out
or
rcll
repz
sub
inc
shlb
out
add
ss
mov
inc
bnd
mulw
and
call
in
aam
and
push
rorb
adc
sbb
push
and
or
or
mov
test
es
or
pop
push
movsl
pop
xlat
call
shl
cmp
jne
push
daa
and
add
add
inc
adc
cmpl
jb
loope
cs
adc
add
cmp
rol
push
xchg
call
jmp
push
push
jmp
sub
mov
les
ljmp
dec
scas
in
push
add
pop
jge
out
call
mov
push
lret
repnz
rorb
insl
repz
insb
add
daa
sub
mov
stos
pop
nop
push
push
call
and
cs
jo
lea
stos
mov
outsb
add
or
jo
outsl
jmp
sbb
dec
call
enter
sub
pop
xor
fmull
lret
std
in
push
jno
xchg
imul
mov
add
push
jbe
adc
mov
clc
leave
mov
test
stos
dec
pop
cmp
push
sti
outsl
mov
inc
call
mov
jmp
push
adc
mov
adc
and
xlat
ljmp
imul
push
push
ja
test
jp
sub
sbb
orb
movsb
mov
dec
jae
daa
aas
add
add
inc
bound
test
push
je
inc
into
nop
inc
dec
or
or
sti
cmp
and
test
adc
inc
add
clc
int3
add
in
sub
push
ljmp
jno
jg
fdivrs
sub
es
and
mov
or
xchg
pusha
sbb
inc
mov
xchg
mov
lock
frstor
cmp
mov
xchg
sub
add
in
cmp
sbb
and
mov
cmp
test
loope
test
out
lcall
movsl
mov
and
xchg
lret
pop
adc
push
rol
and
in
mov
add
sbb
pop
jns
lock
hlt
adc
or
imul
repz
or
jmp
xchg
adc
sub
pop
push
fwait
xchg
push
fbld
mov
ds
push
mov
arpl
in
push
jae
add
pop
push
push
pop
push
shlb
arpl
pop
xor
add
cmp
or
lcall
shr
inc
inc
adc
xchg
insl
and
sbb
es
push
js
add
aaa
add
sbb
or
cmpsb
mov
mov
cmp
jne
loope
pop
push
out
adc
jle
js
in
test
adc
rolb
cmp
shll
mov
push
jo
xchg
mov
es
push
mov
push
mov
xor
jns
out
pop
jo
xchg
sub
das
pop
jo
sbb
loopne
inc
loope
xor
int3
push
pop
dec
jnp
adc
ja
popf
jo
fimull
jle
mov
imul
sub
jns
xor
in
mov
insl
neg
sbb
fwait
pop
dec
xor
fdivr
fnstsw
pop
sbb
cmp
pushf
lret
lock
sbb
aas
movsl
cmp
jo
sahf
pushf
ss
sub
pushf
fs
hlt
push
mov
je
push
in
mov
xchg
jmp
lret
mov
push
push
lock
fbld
and
and
push
and
lods
pop
das
cmpsb
cmp
insb
sarb
scas
adc
ljmp
dec
aas
in
and
and
jmp
adc
mov
xor
dec
cmpsl
cmp
sub
pop
lahf
mov
aaa
roll
fsubl
and
cltd
pusha
shll
xchg
ret
pop
or
sti
std
jg
sub
xor
add
hlt
adc
int3
sbb
add
or
data16
movsb
xchg
test
std
cmpsb
mov
sbb
mov
fiaddl
add
add
aad
add
adc
mov
movsb
push
pop
repnz
inc
mov
xor
in
and
dec
sahf
ret
add
inc
mov
pop
push
cld
es
dec
test
add
aam
adc
pusha
loopne
fldenv
or
push
js
outsl
mov
insb
jl
jle
pop
sbb
sub
mov
sub
mov
or
clc
add
dec
jnp
repnz
push
pop
mov
iret
repz
xchg
rep
mov
jns
out
pop
pop
nopl
out
jb
out
sub
mov
adc
nop
ss
xor
pusha
rcrl
cmp
clc
ja
xchg
push
sar
cmp
pop
outsl
inc
lock
xchg
imul
in
jo
pop
fdivs
adc
xorl
insl
sbb
sub
enter
mov
inc
push
and
addl
scas
aad
mov
xchg
push
stos
lods
mov
std
push
and
divb
dec
je
or
jmp
fisubrs
adc
mov
test
mov
mov
and
jmp
lock
enter
lock
aaa
jnp
mov
pushf
mov
cmpsb
jge
cs
pop
out
sahf
cmpsl
dec
pusha
jno
cwtl
sbb
xor
push
adc
and
repnz
fstp
sub
or
fs
fisubrl
test
mov
xchg
in
jmp
sub
repz
xchg
push
cmp
test
pop
movl
pop
repz
or
push
xchg
ret
push
pop
pop
pop
in
fcmovnbe
pushf
cwtl
push
pop
xor
and
lock
sbb
pop
clc
imul
dec
or
add
dec
inc
andl
xchg
pop
push
mov
jg
adc
mov
pop
or
pop
adc
add
shrb
push
call
orl
and
sbb
in
and
add
dec
push
xchg
addr16
jg
or
rcrl
push
sub
jne
dec
dec
adc
inc
add
ja
fisttps
add
dec
sahf
negl
add
sti
xor
push
sbb
and
jns
leave
mov
xor
nop
sub
repnz
divb
push
subb
inc
mov
jb
and
jl
jb
adc
out
vshufps
fmuls
add
mov
sbb
add
sub
call
mov
pop
push
and
adc
mov
xchg
sbb
pop
pop
ret
ljmp
pop
scas
adc
jle
ret
mov
and
push
jl
mov
push
or
adc
mov
xchg
add
imul
mov
dec
push
push
fiadds
les
pusha
lret
dec
pop
inc
push
dec
and
add
adc
and
xchg
outsb
call
sbb
ja
pop
inc
add
sub
cltd
lods
push
pop
imul
xrelease
fnstsw
pop
pushf
fcomps
sbb
xor
loope
dec
or
xor
aaa
sbb
adc
inc
jo
sub
popa
in
sbb
push
cmpsb
mov
jno
lahf
popa
jge
add
fadd
jo
mov
fdivl
adc
aam
rcl
adc
jo
dec
sti
inc
cltd
lret
jmp
dec
loopne
fadds
cmp
adc
ss
push
xor
gs
enter
lds
faddl
lods
pop
je
dec
call
leave
enter
jbe
sbb
xor
hlt
xchg
cwtl
jno
jb
push
arpl
jo
sbb
xchg
or
pop
sub
and
stos
aam
insl
out
loopne
cmpb
jns
idivb
push
movl
iret
sarl
in
enter
dec
mov
cmp
cmp
cmp
repz
ja
sahf
mov
sbb
stos
and
or
and
inc
es
sub
sbb
push
popf
ja
push
arpl
add
pop
fs
dec
pusha
sub
mov
mov
xor
je
pop
bound
sbb
mov
ror
mov
adc
or
xchg
cltd
xor
lahf
fwait
push
mov
leave
cld
lret
push
jge
jns
rolb
in
add
and
cmp
cmpsl
pop
repnz
inc
dec
push
fadds
out
sahf
ja
mov
dec
sbb
daa
inc
mov
adc
mov
inc
imul
stos
and
push
xor
sub
pop
lods
push
stos
js
pushf
dec
pop
mov
add
mov
jmp
sub
cmp
sub
and
jl
cmp
mov
xor
arpl
pop
das
lock
scas
lock
mov
fimull
nop
lret
add
push
int3
xor
lahf
negl
push
xor
mov
adc
push
push
jne
push
and
scas
sub
jmp
in
pop
push
outsl
jmp
jb
int3
mov
or
cmp
push
sbb
lcall
shrl
push
add
adc
jb
int
mov
inc
cmp
and
addr16
mov
sti
mov
dec
fmuls
aad
add
dec
enter
jns
mov
or
mov
inc
arpl
mov
pop
out
xchg
xchg
dec
push
sbb
out
out
and
orl
das
push
pop
push
push
pop
dec
decl
enter
or
bound
mov
out
add
xchg
mov
out
out
push
iret
sbb
iret
repz
aas
push
imul
rcrb
nop
push
jmp
jns
jmp
mov
enter
and
inc
sar
sbb
or
mov
mov
flds
push
ret
fcomps
frstor
add
push
push
or
pop
xchg
mov
arpl
fistl
pop
lods
push
sub
or
pusha
rol
pop
rclb
push
ret
sbbb
add
mov
pusha
cmp
mov
jno
cwtl
pop
andl
aaa
fsts
jmp
sub
inc
mov
dec
sti
pop
roll
push
rolb
iret
repz
jns
xchg
sahf
stos
mov
mov
sub
pop
push
sbb
das
nop
mov
fstp
sub
pusha
xor
sbb
sbb
pop
fdivrs
push
sbb
mov
cmpb
jno
out
andl
xor
mov
lahf
jmp
jo
stos
mov
lods
and
xor
pop
dec
or
pop
mov
rclb
sbb
mulb
add
mov
pop
add
xor
mov
loopnew
jmp
push
cmp
insl
loopne
pop
lock
jmp
and
mov
add
add
frstor
shll
fimuls
sub
mov
mov
data16
or
mov
jbe
mov
cmp
xchg
ret
mov
sub
cmp
ret
pop
pop
add
jge
addl
push
aam
jns
cmpsl
push
pop
orb
sahf
mov
scas
in
iret
jae
jl
aad
add
sub
into
repz
pop
data16
push
dec
shrl
mov
rcll
pop
repnz
fsts
lea
jbe
imul
rcl
inc
jno
jge
mov
inc
push
nop
imul
mov
inc
mov
int
or
sbb
and
mov
inc
dec
inc
nop
leave
sbb
push
adc
sub
aas
mov
les
fwait
and
or
int
in
or
ret
sub
jb
sub
cmp
int
sbb
pop
insb
push
jp
mov
stos
mov
test
adc
push
cmp
pop
xchg
sbb
rorl
sbb
shlb
add
out
std
pop
adc
jno
dec
and
dec
mov
addl
push
inc
pop
inc
lds
push
dec
cmc
pop
lds
jmp
jmp
cmp
xor
or
sub
gs
adc
fnstcw
sahf
adc
fldt
push
or
jae
adc
push
jmp
fsubr
push
in
cmp
insb
mov
ja
or
push
cli
jecxz
mov
push
xor
test
cltd
pop
xlat
leave
xchg
sbb
or
sub
outsb
fistps
fwait
sbb
xchg
out
push
movsb
lods
outsl
lock
sub
mov
mov
call
xor
clc
push
mov
jb
pop
data16
loop
xchg
cmpsb
push
push
or
push
adc
inc
xorb
aaa
jb
adc
movsb
pop
mov
add
enter
cwtl
inc
push
and
add
add
in
in
dec
sti
js
push
loopne
xor
loopne
xor
dec
call
lock
outsb
xor
inc
pop
push
cmpsb
orl
fldcw
data16
adc
lcall
xchg
pop
mov
fwait
stc
popa
and
or
addb
sub
mov
pop
and
inc
cltd
fildl
xor
inc
mov
xor
adc
push
iret
jbe
cmpsb
mov
leave
testl
in
mov
mov
stc
push
and
cmp
ucomiss
das
iret
in
sbbb
inc
das
fiaddl
pop
rclb
fstpt
pop
mov
test
das
push
popa
out
sub
mov
push
mov
adc
push
in
push
mov
xchg
int3
lock
rcr
inc
imul
pushl
add
pop
lret
inc
add
pop
shlb
mov
jnp
or
filds
adcb
push
pushf
sub
rolb
xchg
repz
daa
out
push
adc
test
daa
sub
es
push
adc
add
or
push
pop
leave
mov
aaa
and
out
adc
out
add
pop
mov
pop
es
or
sbbl
sbbl
and
mov
iret
mov
in
and
fs
and
jb
mov
in
in
or
insl
testl
push
mov
testl
pop
fildll
mov
jge
loope
or
or
push
fsubp
gs
loop
push
jb
xchg
out
xchg
test
lret
dec
repz
call
xlat
jecxz
iret
jae
pop
pop
xor
jns
loopne
mov
add
inc
div
sub
inc
out
je
fildl
shl
pop
nop
mov
cmovae
iret
aam
imul
das
mov
xor
pop
inc
pop
aas
pusha
in
les
movsb
fcomps
imul
lds
sti
pop
pusha
imul
imul
pop
xchg
cmp
fidivl
mov
out
mov
iret
leave
jnp
lret
out
add
adc
cltd
mov
imul
loopne
cmp
pop
push
jns
mov
sbb
ret
fildl
inc
loopne
pop
dec
orl
push
sub
roll
mov
push
lods
nop
mov
push
lods
add
mov
fbld
enter
pop
fbld
cmpsl
add
push
mov
xor
ljmp
dec
stos
xchg
outsb
and
mov
out
lock
push
or
cmpb
add
je
add
mov
adc
xchg
shlb
ja
sbb
es
je
and
inc
fstps
add
outsl
add
pusha
mov
imul
inc
lock
cmc
cwtl
hlt
inc
aaa
mov
rcrb
ret
je
movsl
das
pop
push
add
jg
ret
arpl
ret
and
mov
mov
clc
cmp
insb
mov
test
cmp
xchg
inc
rcrl
cmp
in
flds
leave
xchg
call
sarl
add
in
mov
imul
out
sbbl
jl
adc
mov
sub
sbb
mov
cmpb
je
add
arpl
inc
dec
adc
orl
xor
call
pop
stc
sbb
loopne
xor
or
inc
and
ret
xchg
roll
mov
iret
repz
xor
out
sahf
jle
push
ret
add
in
out
dec
ds
pop
mov
sahf
sub
insb
mov
or
imul
cwtl
and
cmpsl
mov
out
mov
cs
ret
dec
pop
cmpsb
repnz
int3
xor
mov
cmp
movsl
add
clc
cs
sbb
into
mov
in
push
fmuls
mov
xchg
pushf
lock
add
inc
in
sbbl
lcall
rcll
pop
mov
neg
in
add
sub
xchg
mov
jae
leave
or
aas
je
xchg
sbb
aam
aas
aam
sbb
imul
insb
shlb
in
int3
inc
int3
enter
jmp
rol
xchg
mov
xlat
pop
vfmsub213pd
pop
rcl
add
inc
sbb
fcmovnb
stos
fdivrs
mov
pop
jge
pop
dec
sub
add
inc
jp
push
and
adc
cmp
fwait
cmp
call
and
push
inc
push
mov
repz
mov
in
inc
lock
push
push
test
orb
dec
sahf
adc
or
pusha
movsb
enter
adc
icebp
mov
sbb
sub
imul
mov
mov
and
sbb
inc
mov
jae
mov
dec
jb
leave
add
mov
xchg
and
dec
sbb
dec
lods
lods
inc
test
inc
push
das
test
mov
hlt
test
movsb
rep
ret
xchg
fmull
movsb
mov
sub
mov
insb
mov
inc
cwtl
dec
jo
roll
add
xchg
xchg
sub
jbe
adc
pop
in
mov
mov
jl
cwtl
push
or
xor
xchg
mov
sub
pushf
push
jo
imul
test
leave
out
mov
mov
sbb
pop
push
sbb
xor
ret
xor
inc
mov
fmulp
loope
inc
fiaddl
aam
pop
call
ja
lock
lock
addl
outsl
pop
cmp
mov
addb
or
cmpsb
nop
xorl
ss
push
jecxz
xor
sbb
lock
stc
lock
push
and
push
pop
add
sub
icebp
jo
cmpsb
cs
test
rcrb
sub
fsubrp
sbb
adc
ja
lret
mov
mov
daa
cmp
and
test
dec
imul
or
addr16
xchg
cmp
testl
cmp
repz
jns
mov
sahf
out
repz
neg
fildll
cs
daa
test
sahf
mov
or
int
cmp
push
mov
adc
and
push
imul
inc
inc
pop
adcb
inc
mov
js
les
insb
mov
sti
in
jb
xchg
xor
or
fsub
fdivl
fsubs
and
rcl
aam
push
dec
insl
test
or
insb
int3
scas
dec
loope
rcr
or
repz
test
pop
ror
stos
pusha
faddl
lahf
les
add
stc
xchg
loopne
les
orb
iret
rcrl
push
cmc
insl
mov
out
or
in
xor
daa
cmp
push
imul
fmul
stos
mov
sub
shlb
inc
pusha
xlat
xchg
mov
insb
in
mov
or
mov
mov
mov
sbb
cmpb
rolb
test
orl
movsb
push
add
andb
insl
bound
pushf
lods
cmp
cwtl
cwtl
test
cmp
nop
adcl
and
jo
pop
fucomi
dec
mov
cmp
mov
sub
fldl
jg
dec
cwtl
sbb
jp,pn
push
mov
dec
testl
test
mov
cs
addr16
loop
leave
pop
mov
xchg
adc
nop
ja
clc
and
cmpsl
jmp
push
adc
add
inc
cmpsb
xlat
clc
aam
dec
mov
sub
mov
pop
push
imul
adc
push
sub
add
push
pop
ds
es
cmpsl
stc
cmp
movsb
int3
out
cli
and
jns
inc
pusha
jge
sti
nop
mov
push
data16
daa
mov
jno
jnp
push
sub
dec
push
mov
and
out
mov
push
adc
popa
dec
dec
push
xor
xor
inc
push
inc
cmp
popa
push
cmp
movsl
insl
xor
imul
xor
lods
loope
xor
dec
xor
lods
sarl
mov
sub
shlb
add
jecxz
les
sub
sbb
dec
adc
aam
rolb
add
outsl
or
mov
pop
mov
movsl
push
shl
std
adc
xor
inc
std
inc
push
std
outsl
fldenv
jns
out
dec
inc
movsl
adc
les
pop
xor
inc
repz
stos
pop
dec
pop
jmp
dec
fistpll
xchg
and
or
rcrb
aad
fisubrl
mov
push
fisubrl
cmp
lds
push
cmp
outsl
fs
ret
xor
add
bound
call
cs
call
dec
pop
push
xchg
pop
add
imul
xor
lcall
inc
xor
lahf
xchg
loop
pop
jbe
imul
lock
addb
jno
push
jge
daa
cmp
filds
clc
or
xchg
cli
fidivrs
pop
mov
sub
or
or
call
ss
arpl
insb
leave
xor
or
push
fsubl
data16
aas
pop
sbb
jmp
movsb
add
sbb
hlt
cmpsb
and
mov
add
or
lret
ret
inc
add
xor
xchg
pop
pop
sbb
add
sub
inc
outsb
inc
dec
leave
and
mov
xchg
inc
pop
cmp
add
in
or
iret
imul
pop
sub
push
mov
ljmp
inc
jo
mov
mov
fildl
les
cmp
xchg
cli
mov
add
pop
xchg
out
push
pusha
jns
push
adc
mov
and
jg
cmpb
ljmp
inc
and
addb
or
mov
fstl
bound
dec
push
xchg
movsl
cwtl
or
push
mov
lahf
push
push
or
daa
or
cmp
adc
xor
inc
gs
in
or
or
push
xor
sbb
js
lret
leave
or
scas
loope
sahf
sub
xor
mov
pop
les
js
push
dec
pop
nop
xorl
insl
stos
push
repnz
push
cmp
push
or
add
or
lods
dec
fidivrs
adc
leave
adc
ja
fs
push
mov
jae
lds
loopne
icebp
out
daa
call
popf
sbb
push
mov
add
insl
mov
jae
rcl
dec
cmp
cmp
push
lock
test
sahf
shl
mov
and
je
gs
fiadds
lea
sub
pop
mov
or
mov
pop
push
mov
jnp
ja
std
adc
imul
add
and
pop
jb
xchg
add
int3
dec
jne
pop
dec
iretw
adc
jmp
popf
test
sbb
stc
inc
jmp
ds
in
dec
insl
xchg
stos
cmp
inc
nop
jmp
sbb
imul
cmp
aaa
pop
into
cmp
jge
mov
xor
shl
add
fs
das
sub
jl
rolb
scas
or
mov
sub
jecxz
sti
adc
or
pop
xlat
xchg
or
push
mov
jb
adc
inc
mov
bound
mov
cmp
mov
lds
push
gs
ds
jns
imul
fisttps
shll
xor
mov
lret
in
lods
call
inc
jle
push
and
pop
jo
xor
cmp
or
cli
add
add
ret
call
mov
and
je
dec
mov
jecxz
adc
adc
adcb
xor
push
add
or
or
sbb
sub
jl
jnp
inc
sbb
mov
xor
cwtl
std
jle
ss
or
jmp
xchg
jmp
adcl
test
jne
pop
repnz
adc
sub
cmp
int
sbb
pusha
sbbl
adc
or
loop
or
mov
or
adc
leave
jecxz
xor
int3
push
adc
push
pop
sub
jae
xor
dec
lods
inc
jge
sbb
jbe
outsl
cmpsb
lea
ret
add
push
daa
jbe
idivb
pop
or
jnp
xchg
push
fildll
add
fcompp
xchg
inc
rol
mov
and
cld
sub
nop
cmp
and
or
ret
insl
popf
rclb
rcll
clc
popa
pop
pusha
adc
pop
loopne
insb
and
clc
shlb
test
and
std
pop
or
je
mov
cmp
pop
xorb
or
pop
adc
jnp
icebp
adc
sahf
loopne
push
fidivrl
dec
or
repz
fimuls
dec
lea
or
inc
xchg
into
fcomi
enter
fadd
in
shll
pop
scas
mov
pop
fnsave
pop
xchg
movsb
fistl
aaa
in
fcomps
ss
and
sbb
out
dec
sub
inc
mov
sbb
ljmp
stc
fsubr
xor
or
unpckhps
loopne
xor
icebp
mov
mov
pop
add
lahf
pop
aam
add
inc
repz
xor
mov
jnp
jge
mov
adc
push
mov
mov
push
sahf
popf
insb
data16
add
mov
add
enter
movsl
shlb
mov
psubsw
dec
in
add
xor
push
cmp
jl
or
add
add
inc
test
sbb
dec
das
aam
ja
popw
sbb
dec
gs
icebp
inc
mov
adc
add
and
mov
shl
mov
add
inc
icebp
mov
and
adc
aam
into
test
inc
xchg
dec
xchg
cwtl
or
or
sbb
cmp
dec
or
and
xor
mov
and
jno
add
push
clc
mov
cmp
leave
call
loop
out
push
jo
call
scas
scas
pop
flds
out
je
cs
repnz
out
mov
sub
sub
lods
pop
stos
xchg
incl
pushl
pop
ss
ficoms
inc
imul
or
sbb
cmp
aam
mov
daa
mov
mov
add
ret
mov
adc
rep
push
push
push
xor
shll
ljmp
or
and
subl
xor
jmp
and
out
outsb
fwait
cltd
bound
out
addl
loopne
inc
idiv
hlt
nop
or
dec
inc
cmp
add
fcom
mov
mov
and
mov
fucom
jo
jns
ret
cmovle
jne
out
mov
pop
or
xor
jnp
add
dec
sub
jmp
ja
pop
enter
xor
inc
insb
das
bound
out
add
jb
gs
addr16
popa
out
dec
fwait
push
cmovno
jo
sub
arpl
inc
shll
mov
out
test
outsb
aaa
push
es
imul
imul
cmp
cmp
outsl
inc
lcall
inc
dec
and
jo
adc
inc
pop
push
xor
fistpl
inc
inc
mov
das
push
imul
mov
dec
cs
add
ds
push
xor
xchg
push
dec
je
das
adcl
cmp
fs
shlb
adc
outsl
cmp
adc
into
aad
sar
ret
insb
popa
cmp
mov
add
inc
xchg
jge
icebp
and
mov
inc
xor
jmp
or
hlt
rolb
js
and
xchg
jb
and
sub
sub
and
sub
mov
xor
mov
hlt
pop
mov
daa
add
and
arpl
push
aas
inc
es
inc
sarl
inc
ja
and
jp
cmp
aaa
jmp
call
fidivrl
je
xchg
dec
add
xchg
add
fwait
cmpsl
jmp
adc
add
sti
movsb
xor
lea
and
fisttps
scas
add
or
or
orl
je
loope
loop
add
xor
and
pusha
xchg
xchg
mov
loopne
jmp
in
pop
adc
xor
imul
movups
jmp
test
add
outsl
pop
fidivl
aaa
addb
addl
add
test
fsubs
pop
jmp
mov
das
jge
hlt
enter
and
sub
push
inc
mov
ljmp
sub
mov
inc
add
mov
addb
xchg
fstpl
adc
or
add
sub
clc
outsb
push
sbb
test
adc
ficomps
les
lods
jge
inc
xchg
test
dec
xor
or
dec
push
inc
out
xor
or
leave
xor
mov
inc
fs
jle
dec
mov
sub
decl
in
xor
push
push
push
fsubs
mov
sbb
cwtl
cmp
fs
inc
sub
inc
outsb
jne
or
cmpsl
test
jnp
mov
bound
cwtl
outsl
push
mov
mov
add
adc
dec
into
out
lods
push
or
mov
add
mov
jge
jnp
je
stos
jnp
gs
adc
ja
add
mov
aaa
cli
movsl
lea
call
push
icebp
pop
add
lcall
fisubl
add
in
or
sbb
xor
adc
lock
sub
adc
dec
loopne
mov
xchg
inc
or
dec
jmp
add
in
sbb
in
bound
add
mov
nop
adc
sbb
sahf
fs
repz
addb
push
sbb
lea
inc
sbb
in
mov
jle
sbb
push
shlb
lock
pop
xor
xor
out
add
add
ret
adc
pop
xor
sbb
mov
cmp
add
into
mov
cs
jno
sbbb
aas
xchg
xor
xchg
jno
cmpb
xor
pop
xor
jo
outsl
dec
jle
flds
sbb
xchg
fwait
push
rclb
clc
mov
test
dec
xchg
adc
jne
popa
or
xor
ret
sbb
loopne
inc
lock
or
mov
or
inc
popa
jne
lock
xchg
sub
jl
les
les
add
sbb
mov
aam
inc
lock
add
pop
add
sbb
xchg
inc
dec
jne
jno
mov
inc
add
add
lock
push
cmpb
add
cwtl
push
mov
jge
sbb
add
cmp
dec
jne
int3
mov
jo
pusha
xor
cmp
movhlps
mov
xlat
adc
dec
mov
jecxz
jo
xor
sbb
or
adc
pop
dec
mov
xchg
adc
inc
clc
or
adc
xor
push
adc
mov
clc
or
insl
push
mov
pop
sbb
outsl
adc
push
and
mov
gs
imull
out
sub
and
jnp
dec
push
adc
adc
add
xchg
jne
add
cs
cmp
or
inc
jns
dec
xchg
pop
xlat
mov
loope
data16
mov
push
fs
jp
inc
pop
add
inc
xor
or
pop
add
out
add
pop
arpl
dec
das
or
mov
sub
jnp
adc
dec
das
add
push
push
add
add
and
pop
out
and
pop
subl
pop
fs
mov
das
sbb
or
or
xchg
dec
pop
nop
lret
insb
xor
roll
or
add
hlt
sub
sahf
inc
sbb
movsb
xchg
imul
sbb
xor
xchg
or
sbb
mov
nop
pop
cmpsl
inc
test
jg
jns,pn
xor
iret
lock
lea
mov
fisttpl
adc
mov
les
outsb
push
add
fwait
xchg
mov
sbb
leave
fcompl
cmpb
mov
icebp
out
push
mov
or
or
loope
xor
mov
jge
mov
add
dec
xor
and
jg
test
mov
inc
sbb
out
lret
push
les
jecxz
xor
add
sub
js
lods
or
inc
add
hlt
lock
scas
loopne
mov
int
jecxz
mov
inc
add
aaa
xor
fs
add
dec
iret
sbb
adc
push
inc
xchg
cmpsl
enter
in
shll
cmp
push
xor
test
push
lea
dec
add
test
add
or
inc
mov
out
jp
sbb
dec
add
adc
or
dec
inc
mov
push
les
seto
jne
mov
call
std
xchg
repnz
sbb
movups
fbstp
dec
jne
jmp
addb
mov
inc
hlt
push
xor
popa
jle
cld
enter
mov
sahf
xor
cmp
jle
pop
pop
cmp
and
les
jnp
mov
sub
leave
mov
jge
insl
lods
cmp
pop
pop
aaa
dec
sti
pop
shrb
mov
and
pop
push
cmp
jo
add
sbb
ret
push
or
mov
mov
inc
pop
movsb
sub
mov
dec
ja
ljmp
ret
xchg
loopne
or
push
testb
push
test
dec
fstpt
push
sahf
filds
out
cmp
je
mov
dec
push
sbb
sub
sarl
dec
mov
scas
movsb
and
cmpsb
sbb
loop
mov
imul
leave
outsl
push
out
insb
sbb
adc
jne
jmp
roll
sbb
pop
and
pop
je
mov
push
inc
nop
shll
adcl
and
cmp
movsb
out
mov
xor
adc
or
stos
mov
cli
imul
push
or
cli
mov
mov
pop
sbb
lcall
or
bndstx
test
insb
jbe
test
cli
adcl
or
rorl
pop
cmpb
jp
decb
ja
ja
popa
add
mov
add
mov
mov
and
adc
cmpb
je
mov
cmp
add
ja
jmp
std
sbb
sbb
mov
cmp
sti
jle
test
add
adc
add
mov
movsbl
jp
cltd
mov
add
orb
in
ds
pop
in
push
push
adc
ljmp
mov
cmpb
ja
jb
add
add
call
jb
lret
repz
out
mov
mov
mov
pop
aas
or
and
mov
jb
fcmovnbe
add
push
adc
or
and
lea
xor
xchg
mov
xchg
je
jl
sbbl
inc
fsubrl
in
add
and
push
shl
push
and
and
sub
jp
push
push
adc
jmp
popa
cmc
sub
pusha
je
push
dec
rcrb
fwait
pop
int
je
pop
add
xchg
dec
adc
or
call
mov
dec
push
pop
pop
and
mov
sbb
xor
adc
jl
mov
rorb
rep
push
sbb
sbb
mov
mov
in
lods
outsl
mov
incl
cmp
pop
mov
call
or
xbegin
into
scas
mov
lods
cmp
loopne
pop
movsb
repnz
stos
mov
test
insb
lods
fldcw
inc
or
adc
outsb
aam
pop
fdivl
prefetchnta
pop
dec
aas
inc
insb
arpl
out
inc
mov
xor
dec
orb
lods
lret
push
mov
gs
jno
sub
testl
lahf
and
xor
adc
mov
mov
adc
clc
movb
adc
aaa
or
sarb
dec
stos
xchg
cs
fcomps
xor
cmpsl
mov
les
lret
jne
or
in
sbb
lods
xchg
addr16
sbb
mov
cmpsb
es
hlt
mov
sub
daa
lods
or
popf
sbb
lods
dec
daa
nop
addb
scas
xor
dec
or
adc
scas
xor
sbb
jp
loop
in
push
adc
push
call
sub
push
xor
xchg
sbb
sbb
decb
adc
lret
je
adc
sbb
xchg
je
movsl
test
inc
clc
pop
scas
hlt
pop
rcrb
in
icebp
inc
div
adc
test
xor
adc
or
movsb
ds
inc
mov
add
ret
dec
inc
frstor
aaa
rolb
icebp
aam
add
push
inc
add
or
sar
jne
dec
jecxz
add
lahf
hlt
mov
cs
not
fwait
dec
cmp
jne
ljmp
add
add
mov
cmpl
mov
ss
xor
or
push
adc
pop
fnstsw
stos
push
xor
inc
mov
add
fstp
sub
je
sahf
sub
sbb
sbb
mov
aas
jb
xor
jp
lock
sbb
adc
fisubrs
sbb
loope
cmp
mov
adc
sti
push
jne
xchg
cmp
add
lods
cltd
xor
iret
lods
pop
and
lock
hlt
sub
jle
sub
mov
xchg
ror
bound
or
mov
rcrb
aaa
fmul
inc
jecxz
jmp
pop
cld
and
dec
pop
cld
add
mov
push
clc
test
push
pop
sbb
mov
sub
loope
dec
xor
pop
xor
test
clc
or
stos
or
pop
mov
in
mov
repz
cltd
mov
sbb
test
sbb
push
test
ret
push
shl
je
leave
mov
or
adc
fiadds
sbb
insl
sub
test
mov
jg
sbb
push
sub
push
shlb
dec
xorb
xlat
lahf
cmp
enter
aad
sub
fnsave
aas
pop
sbb
out
lea
xor
lea
jbe
es
call
adc
jbe
add
xlat
inc
lea
dec
cmc
sbb
mov
enter
add
mov
inc
jmp
in
and
hlt
mov
and
mov
das
or
loope
sub
ja
out
mov
rolb
add
jle
sbb
adc
sbb
dec
mov
adc
das
ljmp
fstl
dec
fildll
jmp
push
fdivs
pop
mov
jmp
das
ljmp
inc
rolb
lret
sbb
inc
jp
jmp
or
imul
aas
jne
sub
or
lea
add
cmpb
jne
ss
or
loope
fwait
inc
xchg
xor
lahf
stos
xchg
loop
rcrl
loope
xchg
xchg
and
pop
dec
xlat
notl
ja
lahf
cmpsl
stc
mov
das
pop
sub
insl
mov
fndisi(8087
or
sbb
and
fnstsw
es
ds
adc
sbb
fistpll
pop
fmuls
sbb
test
arpl
sub
add
xlat
add
jl
mov
jecxz
cld
insl
xchg
xchg
faddp
enter
jns
lea
mov
mov
int
fisubrl
or
mov
xchg
mov
fwait
xor
dec
jnp
inc
push
push
inc
push
fistpll
inc
push
inc
outsl
xor
sahf
jp
inc
and
xor
clc
cmp
imul
mov
cmp
jmp
adc
addb
or
orl
test
xchg
and
lea
mov
je
add
pop
dec
mov
cmpb
add
cs
cwtl
sub
or
cmpsl
add
cli
and
pop
jle
or
cmpl
outsl
add
jnp
insl
imul
pusha
rorb
mov
ja
push
leave
stos
fs
or
ja
lock
lahf
mov
out
or
ret
or
and
ret
pop
adc
cwtl
les
dec
add
hlt
movsb
add
push
add
inc
fidivl
je
or
jge
stc
inc
adc
xchg
mov
mov
addr16
sbb
sbb
sbb
incb
subl
fadds
mov
dec
sti
fstps
idivl
cmp
sbb
call
or
add
cld
add
test
into
add
and
xor
bound
lds
loop
mov
cmp
cmp
gs
dec
orb
jb
outsl
cmp
adc
rcrb
jae
cmp
in
arpl
push
pushl
cmp
dec
cmpsb
and
in
insl
out
mov
mov
jle
insl
and
test
sub
add
fsubrs
jns
sbb
jae
inc
pusha
gs
fwait
dec
jne
lahf
or
inc
imul
notl
bound
lea
nop
loopne
cmp
adc
dec
outsl
and
sub
lods
gs
insb
pop
adc
mov
in
xor
aaa
insb
iret
pop
js
push
and
ss
push
inc
fdivs
je
or
jb
or
mov
cmpsl
or
dec
imul
pop
roll
jbe
shlb
push
nop
dec
cmpb
lods
movsb
push
into
movsl
add
pop
or
or
sub
cmpsl
inc
roll
hlt
sbb
pop
in
or
loopne
and
or
or
adc
addb
ja
dec
fcmovne
pop
adc
mulb
xor
mov
out
cmp
je
in
imul
out
dec
in
push
pop
or
or
or
mov
mov
adc
add
sub
xchg
lock
out
pop
fmul
add
aam
or
lods
pop
push
pop
sub
sbb
mov
test
out
divl
in
insl
inc
and
mov
das
xchg
add
sbb
sbbb
xchg
xchg
sbb
outsl
pop
adc
inc
xor
pop
or
add
and
outsl
iret
mov
enter
or
outsb
pop
leave
or
or
idivl
mov
je
orb
adc
sbb
or
or
fidivrs
mov
add
cmp
adc
or
pop
and
adc
mov
inc
add
push
pop
or
stos
loopne
sub
mov
cs
sbb
jb
mov
and
push
lds
mov
fwait
nop
cmp
inc
cmp
dec
cmp
inc
and
jne
push
movzwl
and
mov
sub
mov
pusha
dec
lret
xor
pop
mov
and
pop
pop
and
sub
or
push
cmp
js
push
push
inc
jecxz
inc
pop
ja
or
andb
cmp
fadds
pop
or
push
adc
xorl
sub
mov
add
aaa
mov
mov
cmp
shlb
mov
and
fwait
or
dec
pop
cmp
addb
mov
lock
mov
and
in
push
or
in
das
dec
cs
adc
sub
or
xchg
ret
mov
push
cmp
push
cmovne
outsb
sarb
mov
add
or
loopne
insb
inc
and
adc
and
add
jp
sbb
or
sub
lock
or
add
push
ret
mov
jg
inc
popaw
dec
and
aam
movl
mov
pop
nop
clc
ds
xchg
xor
arpl
into
sub
mov
cs
outsb
add
cs
arpl
jo
or
xor
inc
aas
inc
jmp
pop
sbb
addr16
stc
mov
pop
cs
dec
andl
cmp
std
adc
les
sbb
mov
divb
insl
xor
sbb
add
stc
jg
unpcklps
shll
push
arpl
sbb
out
or
jg
jle
push
add
fdivrs
push
push
cmp
cld
mov
pop
inc
ret
adc
or
ficoms
add
dec
jb
pop
rorb
or
push
adc
js
and
nop
mov
push
xor
int3
mov
push
pop
mov
out
xchg
inc
push
pop
jbe
daa
fldt
testl
addb
push
inc
addl
mov
jge
mov
pop
pop
inc
lds
cmp
cmp
inc
por
movsb
xor
inc
nop
inc
jecxz
pop
mov
lods
add
sub
test
lods
lea
insb
cld
xlat
push
sub
gs
lock
rorb
pop
hlt
xchg
cmp
sarl
les
call
les
mov
in
add
cs
cmp
and
pop
push
mov
cs
pop
sbb
test
push
adc
aam
inc
gs
inc
dec
scas
scas
fstps
dec
pusha
outsb
or
push
pop
test
inc
xchg
lds
cmp
add
lods
in
jmp
fcmovbe
gs
popa
cli
arpl
add
add
pop
add
push
mov
sti
add
push
ret
pop
dec
push
add
mov
inc
enter
dec
dec
data16
imul
fimuls
ds
enter
icebp
cmp
fs
leave
mov
and
loop
inc
daa
add
and
push
ljmp
movsl
orb
ss
pop
sub
push
cmp
popa
and
and
stos
push
add
xlat
push
fmuls
dec
les
mov
pushf
sub
inc
jae
dec
mov
push
cwtl
ret
sub
stos
or
or
and
jl
xor
push
loop
dec
ret
sbb
pop
push
nop
and
push
xor
pop
xor
es
push
add
xor
inc
push
add
fildl
imul
imul
and
in
sub
or
imul
std
dec
pop
add
or
loopne
add
movsl
inc
sub
clc
loope
pop
adc
lahf
xor
in
movsb
fs
scas
push
or
sub
xchg
jg
and
in
in
mov
cmp
mov
push
sub
mov
leave
dec
bound
sbb
and
pop
jno
loope
loope
sti
xor
loopne
push
push
repnz
pop
or
call
pushf
addl
sub
ljmp
dec
xor
jl
add
aas
lcall
mov
mov
push
data16
xchg
adc
daa
mov
insl
pop
jp
loope
jle
add
mov
shll
jno
or
cmpsl
and
or
xor
inc
fimull
fcmovnbe
add
xor
pop
dec
loope
push
sub
jl
cmp
mov
bnd
or
filds
pop
test
push
gs
jne
push
test
dec
xlat
dec
push
daa
fsts
xor
push
sub
andb
rolb
xor
outsl
or
mov
imul
lahf
lock
dec
dec
sbb
dec
outsb
xchg
dec
cmpsl
bswap
hlt
sub
add
and
add
push
outsb
sub
loopne
shll
sub
jno
pop
popa
sub
push
adc
int3
inc
add
cli
xlat
mov
dec
stos
into
int3
dec
mov
and
dec
and
je
das
jne
roll
je
cli
jno
inc
xorl
sub
adc
outsb
insb
push
mov
negb
mov
pop
rorb
xchg
mov
pop
popa
or
pop
dec
mov
push
daa
jp
mov
sub
inc
lods
add
push
test
dec
pop
jp
js
pop
and
sub
xchg
dec
xor
pushf
ret
aaa
mov
xor
xlat
fs
cmp
add
enter
mov
jnp
lods
shl
push
dec
arpl
xchg
and
addl
push
jnp
add
pop
xchg
cs
roll
mov
fsubr
cmp
fdivr
push
loopne
out
lret
addr16
push
dec
fxch
push
mov
or
push
bound
jo
in
mov
sbbl
jae
sbb
js
repnz
pusha
dec
lds
and
dec
dec
add
out
or
inc
imul
daa
rolb
or
jne
stos
and
xchg
mov
xor
sbb
nop
adc
or
fcompl
mov
dec
pusha
or
out
int3
adc
cmp
jge
int3
test
cmp
or
xor
out
pusha
push
cmp
jb
inc
dec
hlt
push
xchg
dec
ljmp
sbb
addb
inc
rorb
nop
xchg
es
mov
cmovbe
ret
sbb
mov
mov
psubw
or
ja
shlb
jne
jns
add
repz
adc
cmp
pop
xor
shll
xorl
ret
cmp
push
xchg
lea
inc
and
daa
mov
mov
shrl
jo
jnp
push
mov
adc
cs
cmp
adc
js
add
push
test
inc
cmpb
push
rolb
daa
insb
mov
or
popf
xchg
inc
insb
or
mov
jmp
sti
movsb
scas
clc
jp
dec
sti
andps
dec
push
pop
mov
push
pop
addl
or
jae
mov
jne
in
inc
cmc
push
aad
lret
or
call
pop
sbb
or
sub
push
adc
outsl
jno
bound
jg
dec
mov
mov
addr16
add
jnp
scas
xor
aas
add
push
push
jns
sbbb
push
mov
adc
pop
xchg
adc
sti
dec
or
push
dec
push
inc
daa
popa
das
and
jp
push
call
aas
push
sarb
or
testl
adc
pop
cmp
push
imul
aam
cwtl
nop
sbb
or
inc
push
pop
bound
mov
and
andb
aad
xchg
pop
bound
mov
bound
shrl
aas
cld
jo
push
push
push
jle
nop
scas
iret
ljmp
aaa
leave
adc
adcb
push
push
call
out
loopne
add
adc
pop
add
pop
scas
aam
fstpl
ret
push
sub
adc
jmp
jo
lods
aad
mov
or
push
cld
or
push
push
int
scas
jae
dec
push
xlat
jo
cmp
push
add
paddb
push
int
mov
repz
push
das
or
pop
fs
rcr
ud0
xor
rclb
std
cld
sti
jle
divb
int3
or
mov
sar
stc
xorb
insl
adc
test
test
jno
add
in
push
add
xor
cmp
test
lea
pop
push
sub
or
jno
add
popa
push
cmp
cmp
dec
ret
test
dec
push
rolb
cwtl
sub
or
add
shl
inc
aad
sbb
inc
sub
inc
mov
push
lds
cmp
mov
in
push
sub
adc
add
js
mov
flds
pop
int
push
or
inc
mov
in
leave
les
adc
push
sbbb
leave
add
mov
insb
scas
sbb
dec
addr16
or
dec
or
das
pushf
jae
xorb
in
push
rclb
sahf
cmpsb
mov
cmp
js
shlb
or
mov
dec
and
jae
nop
in
ja
imul
outsl
adc
adc
out
mov
movb
sti
mov
gs
cld
imul
add
arpl
mov
or
add
push
add
imulb
or
or
daa
pop
das
jbe
add
in
or
iret
mov
pop
rorl
notb
and
adc
mov
pop
int3
test
insl
xlat
push
inc
jnp
adc
mov
mov
xorl
mov
fstl
ret
sahf
stc
push
pop
sub
or
jno
cs
sbb
pop
into
aam
pop
rcr
ja
out
jle
inc
pop
das
das
pop
lret
mov
pop
sub
or
pop
xor
mov
movaps
addb
adc
fistpl
push
or
mov
add
out
jge
mov
or
adc
fsubrp
roll
movsb
js
aaa
lods
push
faddl
xor
fcompp
mov
adc
and
push
nop
mov
out
jns
mov
ret
xor
adc
sbb
lret
and
push
xchg
pop
dec
es
pop
mov
shrl
sub
or
and
adc
sub
push
rcrl
movsb
sub
jbe
push
das
sbb
mov
dec
out
lldt
pop
loope
insl
out
fldl
pop
push
fdivrs
pcmpgtd
lahf
cmp
loopne
stos
les
adc
stc
fsubr
into
fisubrs
and
pop
pusha
pop
adc
mov
push
mov
cmc
unpckhps
daa
popa
push
add
cmp
pop
add
sbb
repnz
cmp
sbb
jae
add
sbb
decb
scas
arpl
outsb
push
nopl
cltd
pop
add
pop
out
jbe
call
add
add
and
adc
stos
inc
psrld
sbbl
sbb
test
jo
mov
inc
std
or
mov
add
or
jne
insb
pop
inc
popa
xchg
xchg
inc
jo
in
pop
dec
cs
mov
mov
scas
imul
out
les
insb
outsb
cmpl
pop
and
pop
or
mov
les
dec
rcll
mov
repnz
or
aaa
add
push
test
xor
push
xor
and
push
jo
sbb
push
add
mov
add
dec
dec
xor
xor
add
sbb
stc
shrl
sarl
push
sbb
arpl
mov
jne
add
mov
test
mov
push
sub
jg
xor
test
sub
push
test
popa
fs
and
mov
adc
mov
push
push
push
push
dec
add
orb
imul
mov
lds
fdivl
dec
cmpsb
fadds
cwtl
jnp
pushf
xor
sbb
sbb
push
mov
mov
popa
mov
and
sub
cltd
ret
pop
or
mov
repz
xor
pushf
mov
mov
jmp
js
cmp
jae
pop
fdivrl
ljmp
xchg
gs
sahf
mov
inc
or
push
jg
inc
inc
inc
test
push
lods
mov
pop
sbb
xor
xor
sbbl
sbb
jg
add
or
mov
shr
xchg
push
iret
mov
test
fs
pop
sbb
filds
sub
out
adc
flds
sbb
repnz
pusha
in
movhps
sub
loop
and
das
incl
test
xor
clc
pushw
push
or
inc
add
push
push
pop
pop
cmpsl
or
add
sbb
lea
lahf
mov
mov
cmpsb
mov
or
inc
or
jne
adc
repnz
adc
mov
call
mov
push
pop
cltd
sbb
mov
sbb
xor
jo
jb
mov
adc
outsb
mov
mov
pmulhuw
and
xchg
cwtl
jecxz
inc
pushf
and
cmp
clc
push
cli
jle
pushf
push
and
jb
fcompl
mov
pusha
pop
mov
hlt
and
and
out
mov
mov
data16
lcall
push
add
pop
sbb
sbbl
sbb
and
or
nop
and
sub
dec
fxch
repz
xor
jl
push
jae
push
push
inc
mov
dec
out
cmp
xor
dec
outsb
add
cmp
sub
and
fisttpll
lds
outsl
mov
stos
push
setg
jb
add
imul
inc
adc
lret
add
daa
je
outsl
xor
out
leave
pusha
jo
sbb
or
mov
push
and
js
add
adc
sub
mov
mov
push
stos
xchg
ret
js
mov
adcl
xchg
lods
xchg
and
dec
std
das
pop
call
or
mov
repnz
mov
xchg
jmp
or
xor
ret
cmp
out
adc
inc
cmp
jecxz
or
and
and
and
mov
inc
sub
or
push
pop
pusha
add
movl
pop
sub
out
lea
push
jnp
mov
fimuls
mov
outsb
lcall
sub
rorl
inc
add
or
mov
push
daa
repz
stos
lock
js
mov
xor
fidivl
or
sub
inc
or
sbb
cmp
inc
lods
int
insb
jo
mov
add
jae
int3
sbb
sub
andl
aam
and
imul
test
mov
mov
fwait
shld
fisttps
dec
jo
leave
in
mov
xchg
mov
cli
repnz
in
jno
ret
sbb
xor
adc
les
cmp
jmp
push
repz
ret
jno
cmp
pusha
insl
mov
mov
inc
push
xor
push
sti
sbb
loop
imul
fistpl
push
fwait
xchg
xor
cltd
xchg
mov
add
dec
xor
or
fcomip
sub
xchg
sub
push
daa
adc
sbb
adc
or
lock
add
aad
inc
sub
cwtl
aas
in
mov
xchg
shrb
nop
data16
pusha
das
cs
leave
adc
pop
ror
addl
addb
addl
pop
push
adc
popf
pop
inc
cltd
nop
out
dec
mov
xchg
shlb
mov
sub
je
mov
pop
jb
addl
in
inc
loopne
dec
int
add
add
push
pop
subb
xor
js
in
inc
ficoms
jno
inc
daa
lods
les
push
adc
sub
lods
pop
xlat
mov
and
add
adcl
and
pcmpeqb
xor
xor
push
mov
pushf
jecxz
xchg
push
outsl
nop
cmp
adc
xchg
adc
inc
or
push
hlt
notb
jbe
es
pop
jne
inc
jbe
ljmp
or
inc
sub
push
hlt
sub
add
ret
mov
lea
mov
adc
jne
pop
loop
outsl
dec
jne
psadbw
adc
rorl
mov
and
xor
push
aaa
sub
jbe
cmp
push
sub
adc
push
sbb
cmp
jo
pop
nop
addr16
adc
sub
or
dec
push
cmp
inc
scas
mov
les
jmp
test
pop
js
repnz
emms
add
icebp
data16
sub
adc
push
je
xor
xor
inc
testl
and
popa
add
cmp
rcr
in
ja
pmullw
or
jecxz
addl
mov
inc
cld
ja
xor
xlat
ficompl
add
fcmovnb
lea
adc
sbb
cmp
xchg
cli
movsb
xor
mov
mov
dec
insb
scas
add
pop
stos
add
popa
adc
test
sub
mov
syscall
mov
nop
test
neg
in
imul
les
add
adc
adc
stos
imul
jo
es
xor
test
push
in
mov
add
pop
or
pop
popa
mov
inc
cmp
add
in
dec
mov
ljmp
adc
loope
jp
sub
push
or
inc
or
addl
std
fsubr
add
and
xchg
mov
stos
lret
and
das
or
push
enter
in
pop
adc
jl
jnp
xlat
fwait
insl
push
sub
sbb
js
icebp
fs
jo
sbb
pop
ja
sub
into
cmc
and
and
push
add
sbb
cmp
mov
dec
pusha
jo
jnp
outsl
mov
xchg
pop
dec
push
xor
mov
mov
cld
shr
clc
sub
nop
jno
lret
inc
lds
ds
adc
cmc
cmp
add
mov
lods
jno
hlt
adc
xchg
insb
or
loopne
les
push
nop
call
pop
scas
pop
inc
dec
ffree
pop
out
jge
mov
mov
push
das
nop
push
sbb
push
cmp
cwtl
jp
sub
mov
rolb
and
sti
sub
icebp
inc
popf
jge
or
sub
ss
insb
sub
lods
shll
inc
out
pop
xchg
mov
enter
or
jle
and
mov
cmpb
stc
xor
mov
and
and
jl
xchg
pushf
add
das
pop
int
insb
fcmovnbe
sbb
cltd
add
or
popa
sbb
xor
xor
xchg
daa
daa
mov
jge
cmp
xchg
outsl
movsl
xorb
test
xchg
or
mov
fisubrl
jno,pn
sub
insl
sbb
push
mov
mov
cs
inc
mov
pusha
add
sub
cwtl
inc
mov
and
rcll
push
add
mov
daa
cwtl
das
imul
or
popa
mov
sub
leave
sbb
dec
mov
popa
test
xchg
mov
shrl
daa
pop
pop
mov
cmpsl
insl
pop
jmp
mov
or
xchg
fs
xor
decl
mov
fwait
add
push
mov
sub
test
es
xchg
push
sbb
pop
lods
pop
dec
call
sbb
addb
and
cmp
dec
cmp
mov
xor
pop
dec
inc
insb
outsl
bound
enter
pop
xorl
imul
dec
leave
stos
test
pop
shrb
inc
lods
push
outsl
aad
push
mov
and
xor
or
or
pop
adc
mov
cltd
add
mov
inc
jae
jae
sbb
push
jno
sahf
sub
dec
sub
xchg
xlat
pop
jae
je
lods
es
test
cltd
cmpsl
daa
dec
and
sub
push
lret
or
addl
popf
cmp
fs
pusha
daa
das
mov
in
push
in
adc
in
push
sbb
inc
push
in
and
inc
pusha
cltd
pop
push
add
inc
jle
adc
mov
sahf
out
fsubp
push
out
mov
sahf
out
pop
imul
or
pushf
out
mov
stos
jo
xchg
mov
loope
shrb
enter
add
add
pushf
mov
add
lods
test
lcall
mov
stos
jns
out
pushf
movsb
lods
mov
enter
out
push
lods
pop
call
inc
pop
out
test
repz
push
jge
or
xchg
push
dec
xor
push
sub
cmp
mov
add
add
out
pop
pop
mov
push
sbb
wbinvd
add
or
push
hlt
test
dec
add
sub
pushf
lcall
add
and
or
shrb
xchg
lahf
jne
cs
sbb
inc
or
ss
cmc
or
jo
lret
xchg
popl
arpl
pop
push
stos
mov
flds
jo
jnp
push
and
pop
fwait
or
pop
je
outsb
mov
sbb
cmpl
mov
insl
push
fs
add
mov
and
and
leave
mov
scas
push
inc
hlt
int
lock
add
mov
or
stos
xchg
jge
in
les
mov
pop
push
outsl
jae
in
jae
or
call
insl
lea
add
jne
sbb
or
mov
ret
ret
jl
sub
pop
mov
push
popa
cmpsb
orb
or
movsb
cmpsl
es
mov
jnp
pop
mov
or
ret
add
and
push
jbe
or
into
lock
lds
out
and
or
jne
dec
mov
dec
roll
sbb
cli
jae
aam
adc
jae
push
loopew
push
inc
jg
pop
insb
pop
rolb
in
dec
mov
shll
xchg
push
or
pop
ja
mov
pop
cs
inc
mov
pop
push
or
or
fwait
pop
jo
and
or
sub
mov
or
aaa
xor
subl
add
mov
mov
xor
sti
and
bound
mov
mov
push
daa
outsl
das
xchg
push
or
pushf
pushf
mov
in
or
repnz
test
mull
push
jp
icebp
sbb
mov
push
inc
movsb
mov
sbb
inc
aas
push
shlb
nop
mov
ds
outsb
rcll
add
push
dec
push
mov
adc
rcr
xor
add
dec
add
stc
aas
sub
dec
sbb
jno
adc
jmp
fnstcw
pop
pop
add
movsb
mov
rorb
fists
mov
adc
add
negb
fstpl
push
cmp
or
inc
test
xor
sub
mov
aaa
mov
mov
loop
loope
lret
rorb
jbe
testl
imul
scas
xchg
xor
mov
rorb
loopne
push
sub
add
adc
pusha
inc
xlat
iret
test
xchg
gs
test
adc
or
push
xchg
push
inc
push
jne
in
sub
cmp
ja
mov
or
andb
mulb
or
insl
ss
adc
xchg
movsb
cwtl
cs
divb
aaa
and
dec
xchg
mov
xchg
pop
sub
mov
nop
or
popa
mov
test
pop
mov
mov
pop
xchg
test
es
das
and
cmpsb
sub
aad
or
mov
and
or
fsubl
leave
add
and
mov
and
push
popa
push
add
adc
mov
adc
mov
sbb
stos
cmpl
imul
and
dec
ja
adc
push
in
sbb
adc
nop
scas
mov
lret
xchg
cmovbe
push
jb
gs
inc
dec
xchg
xor
push
mov
scas
add
jmp
lods
lods
scas
inc
sahf
sti
ffreep
jb
lods
jb
fcoms
bound
sbb
pop
jmp
sub
fildl
mov
and
adc
xchg
mull
loop
adc
in
es
out
mov
in
jne
push
movsl
sub
lods
push
and
scas
dec
or
fs
adc
cltd
pop
popa
inc
popf
sbb
xchg
mov
pop
or
aad
test
inc
xchg
call
inc
and
loope,pn
mov
test
adc
push
icebp
notl
nop
mov
loopne
adc
mov
add
adc
xchg
dec
sub
and
pop
and
cmp
jnp
push
adc
add
dec
lods
lds
sbb
adcb
nop
push
adcl
leave
add
add
or
pusha
add
add
scas
loopne
loope
push
add
add
popf
and
xchg
pop
call
or
sub
and
inc
add
clc
push
sub
push
xchg
into
push
push
pop
adc
inc
add
sbb
arpl
push
adc
lods
or
inc
mov
inc
sbb
xchg
lahf
stc
dec
sbb
xchg
mov
push
sub
xchg
xchg
pop
jae
inc
nop
or
test
mov
test
test
arpl
sub
nop
addl
lahf
test
jno
sbb
inc
cltd
repz
xchg
out
xchg
and
lret
sbb
lea
loop
add
cmp
aad
push
addb
loopne
jne
mov
mov
adc
adc
jno
inc
pop
cmpl
ja
imul
lea
sarb
data16
sub
adc
inc
fs
inc
inc
push
adc
adc
jp
and
or
or
cmp
dec
sbb
push
mov
or
mov
das
add
test
sub
call
je
daa
fwait
das
and
push
xchg
dec
rorb
add
jmp
pushf
push
dec
aas
cmp
popa
mov
bound
add
pop
sbb
cmpsb
rcl
sub
push
ja
push
dec
test
or
xchg
sti
jae
ds
outsb
and
fs
dec
arpl
cmp
outsb
lea
aam
sahf
out
xchg
inc
adc
mov
or
jns
xchg
dec
sub
push
adc
imul
pop
adc
jl
add
sub
into
or
xchg
or
mov
les
mov
into
adc
cmp
cmp
leave
ds
sbb
les
jns
aad
adc
outsb
aad
dec
pop
mov
push
and
mov
lcall
xchg
in
loopne
movnti
fucomi
lods
popf
das
lsl
fildl
and
icebp
xchg
xchg
xchg
daa
sbb
enter
mov
leave
leave
mov
lock
fs
jge
aad
leave
insl
testb
and
fs
leave
mov
or
in
mov
xchg
daa
lods
push
add
lds
pop
das
or
ror
mov
mov
lock
or
repnz
push
or
mov
jp
push
xor
js
push
fnstsw
or
adc
out
push
sub
dec
inc
mov
addr16
les
jge
mov
mov
mov
rclb
dec
xlat
pop
sub
pop
add
cmp
rcrl
les
ja
mov
insb
stos
addb
ljmp
push
pop
fwait
lcall
lods
and
test
aam
inc
dec
pop
dec
push
sahf
daa
nop
dec
sub
test
xor
add
notb
adc
mov
mov
push
mov
mov
bound
popl
adc
mov
sbb
dec
or
gs
fs
seto
sub
rorb
xchg
push
mov
push
js
insb
in
adc
xchg
movsl
mov
adc
and
add
pop
mov
orb
gs
sbb
push
push
cwtl
cld
les
lods
jnp
lods
adc
lods
dec
mov
ret
or
lock
jmp
or
push
push
cltd
add
mov
ljmp
ret
or
jp
mov
in
lea
enter
sbb
or
mov
adc
xchg
adc
cmp
add
inc
adc
lds
addl
pop
pop
subl
and
add
movsb
in
cmp
mov
lods
pop
mov
push
pop
xchg
adc
loopne
push
jl
add
push
xorb
rcrl
testl
les
add
addb
add
stos
popa
repnz
pop
push
imul
sub
push
jg
pop
xchg
dec
cmp
cmpl
movsb
push
mov
stos
int
push
movsl
mov
rcrb
cmpsb
icebp
sub
sub
rclb
push
arpl
sbb
hlt
pop
in
sbb
inc
xor
mov
pop
xor
scas
and
imul
iret
pop
test
sahf
mov
jno
cmpsl
mov
pop
dec
or
dec
mov
addr16
push
mov
dec
pop
adc
xchg
mov
mov
adc
mov
stos
push
inc
push
dec
mov
daa
bound
or
fmull
adc
push
test
add
xor
dec
or
cmc
pop
mov
mov
frstor
lods
das
pop
push
xchg
dec
pop
lock
xchg
filds
insl
mov
fdivs
out
std
pop
repz
dec
stos
je
cmpsl
xchg
je
lods
fstp
adc
inc
add
imul
add
dec
jp
or
push
xor
ja
push
aam
pop
push
sub
das
adc
movsb
pop
subps
sahf
dec
stos
fisubrs
push
mov
shl
subb
sub
mov
or
lret
pop
mov
in
sub
push
pusha
enter
xor
or
ret
cmp
xchg
lret
es
push
cmpsb
por
mov
sarb
sti
adc
xchg
sub
test
push
loop
xchg
cmpl
stos
add
stos
aaa
mov
add
mov
push
stos
pop
push
stos
jnp
mov
push
lods
dec
xchg
sahf
pushf
ret
adc
dec
dec
sar
scas
insl
xchg
daa
daa
daa
test
adc
cmp
leave
leave
enter
xchg
pop
push
push
mov
shrb
dec
and
call
cmp
div
imull
sbb
test
fsubr
sub
or
add
fidivl
dec
test
cmp
mov
or
and
add
sub
mov
add
rorb
mov
pop
jnp
sub
inc
adc
inc
pushf
xchg
js
xor
test
adc
shlb
xchg
pop
ficoms
cmp
in
outsb
or
les
fldenv
aas
adc
sbb
sbb
aas
cmp
push
lock
jo
or
lock
or
and
leave
xchg
je
pushl
push
push
lea
push
dec
push
add
jo
lds
fdivs
pop
lods
jbe
out
mov
push
push
push
or
out
and
inc
scas
mov
mov
push
adc
inc
pushf
sbb
fildl
sub
cs
adc
push
mov
rcrb
fisttps
push
iret
push
inc
add
inc
sub
cmp
or
arpl
je
mov
push
cmp
xchg
and
sub
mov
fs
mov
or
mov
cld
sbb
aad
test
lea
sub
test
jg
add
sbb
and
pop
mov
mov
sbb
mov
cmp
mov
adc
dec
push
dec
mov
and
aad
xchg
push
aaa
pop
fnstsw
les
mov
lea
inc
push
dec
inc
sub
aad
adc
push
inc
push
mov
test
rorb
mov
cmp
inc
cmp
add
daa
loope
mov
dec
test
mov
add
push
inc
add
pop
and
add
scas
fdivs
ja
sbb
leave
notb
push
je
dec
in
or
inc
sub
scas
clc
pop
adc
push
adc
jb
dec
xor
adc
ficoml
mov
or
inc
ret
dec
push
imul
xchg
andl
push
sbb
push
sub
imul
xor
adc
push
nop
je
and
mov
add
inc
or
repz
adc
inc
flds
add
movsb
push
mov
push
and
ds
jb
das
push
mov
and
adc
sub
push
mov
push
jecxz
filds
shll
add
aad
and
aas
rorl
push
jne
jo
test
mov
or
insl
push
cmp
repz
and
adc
fistpl
stos
add
subb
pusha
mov
inc
in
jnp
les
sub
test
frstor
add
mov
add
mov
xor
adc
mov
push
mov
das
aas
adc
push
mov
mov
jb
cld
jp
ljmp
pop
mov
out
sbb
inc
test
leave
enter
mov
in
out
xor
call
aas
add
cmp
cltd
sbb
vmwrite
mov
inc
les
sub
xor
mov
pop
sub
mov
xor
adc
and
xchg
les
rclb
jecxz
add
sbb
scas
fcomps
and
push
out
inc
jecxz
mov
cmp
jne
dec
xchg
jb
inc
mov
mov
popa
aam
mov
ret
jge
jae
add
xchg
jge
enter
xchg
adc
orl
loop
xchg
jo
push
pop
or
inc
add
xor
pshufw
add
lds
xor
adc
or
pop
bound
filds
jmp
pop
jp
out
les
jo
fstp
or
shlb
jo
dec
andl
and
dec
je
jge
adc
popw
loop,pn
jo
mov
or
inc
pop
test
cmp
cld
pop
mov
xor
xchg
adc
push
in
add
pop
push
add
sbb
and
rorb
cmp
aaa
mov
pop
test
lcall
ret
repz
hlt
jbe
in
test
inc
or
iret
adc
sub
mov
lock
sub
mov
je
cmp
inc
inc
testl
dec
repz
sti
mov
or
addr16
aam
inc
cmpsl
add
sbb
inc
adc
sbb
cmp
add
inc
loop
and
add
dec
popa
inc
shlb
outsl
pop
push
shrb
mov
iret
push
ror
mov
nop
js
lahf
popa
test
push
jecxz
cmp
or
cmp
leave
loopne
inc
sub
mov
out
xchg
ss
imul
loope
arpl
adc
mov
adc
shl
push
adc
add
outsb
cwtl
or
adc
add
or
adc
loope
adc
pop
sbb
add
mull
mov
sub
scas
inc
in
mov
and
lods
mov
mov
sahf
lret
loopne
jbe
push
and
pusha
dec
inc
sub
fidivl
dec
shr
mov
cwtl
add
and
dec
arpl
adc
add
mov
inc
dec
xor
adc
adc
push
nop
fildll
dec
mov
addr16
nop
lcall
add
das
addr16
call
rcll
insl
pusha
and
stos
mov
rorb
mov
lahf
add
fnsave
inc
inc
rolb
in
insl
jb
adc
mov
xchg
jns
out
push
mov
aam
sbb
inc
int
dec
addb
add
push
in
shrb
pop
ficoml
xor
push
sahf
out
push
pop
mov
sub
push
mov
push
add
ret
push
add
fsubl
mov
cltd
mov
jnp
jo
sub
orb
mov
neg
nop
push
mov
call
mov
xlat
xor
xchg
lret
or
sub
push
popa
imul
adc
mov
movsb
dec
cltd
unpcklps
imul
pop
add
inc
lea
out
mov
and
nop
mov
int3
data16
add
std
hlt
adc
leave
mov
dec
outsb
std
ret
jg
andl
call
jg
nop
lock
mov
mov
outsl
pop
sub
mov
das
jg
dec
adc
pop
repnz
jns
lcall
aas
in
sub
outsl
sbb
and
lret
push
mov
inc
por
jle
pusha
add
stc
decl
push
push
ljmp
repz
mov
push
xor
repz
dec
jl
push
pop
divl
push
shlb
push
popf
and
cmp
or
sbb
xor
imul
insl
dec
mov
das
mov
cmp
popa
or
scas
jne
jl
xchg
popa
sub
js
push
mov
sub
cmp
adc
lock
cmpltps
mov
iret
dec
mov
sar
dec
mov
fwait
pop
jns
inc
mov
inc
sbb
jbe
popa
mov
add
aad
push
push
inc
mov
cmp
mov
jae
dec
adc
mov
push
out
xor
adc
lds
push
in
xor
fisubrl
arpl
and
mov
xor
fstpl
insl
inc
out
iret
mov
ficomps
loopne
ret
out
sub
aam
test
rolb
arpl
jle
jne
test
rorb
add
frstor
and
inc
aaa
dec
or
and
adc
mov
and
mov
adc
arpl
and
scas
adc
inc
int
add
adc
popa
adc
or
cmp
clc
setg
pop
mov
test
adc
outsl
mov
fisttps
adc
cmp
test
lock
sub
push
or
lcall
enter
inc
inc
inc
mov
pop
inc
sub
mov
shrl
xchg
adc
or
pop
in
inc
dec
movsb
rorb
or
mov
hlt
push
push
xchg
or
add
xor
xor
pushf
mov
xor
mov
stos
in
mov
lcall
sub
or
nop
enter
cwtl
test
lret
pop
es
das
mov
sbb
out
mov
push
push
call
jnp
sbb
insb
push
add
dec
sub
pop
or
xor
rolb
adc
pop
dec
dec
push
dec
int
pusha
and
lret
mov
out
pop
bound
fsubrl
fldcw
gs
imul
or
sub
or
movsl
popa
or
jle
push
sbb
or
pop
xchg
cltd
pop
push
mov
mov
mov
jae
loopne
push
pop
pop
test
bound
test
inc
ficomps
imul
imul
or
xchg
add
cmpsb
xor
push
test
int
sahf
hlt
cld
pop
sub
inc
push
leave
and
mov
inc
js
or
fadds
out
pop
xchg
dec
xchg
popl
stos
xor
adc
xchg
dec
sub
out
mov
out
iret
sub
cs
jl
sbb
xor
or
int
aas
int
int
loope
push
jmp
minps
mov
lock
cmpl
push
mov
mov
hlt
ja
sub
push
mov
mov
sub
jne
push
es
push
and
jae
or
ljmp
fwait
mov
ja
ja
lds
cmp
sti
pop
jns
shrl
mov
pop
mov
add
psubsb
test
dec
jb
jae
or
push
add
out
sti
mov
popa
movsb
hlt
jp
push
outsb
jg
inc
inc
enter
mov
imul
adc
fistpl
stc
daa
iret
push
or
jne
pushl
push
std
mov
cmp
out
pop
leave
xlat
shr
push
dec
cwtl
add
outsb
or
sub
popa
jo
mov
jne
fdivs
and
and
call
outsl
inc
pop
ja
adc
ret
pop
popa
inc
xor
inc
pushl
outsl
imul
push
loope
pop
fwait
add
push
push
in
test
and
adc
adc
test
adc
add
dec
movsl
movups
pusha
test
xor
cli
push
xor
add
pop
iret
mov
add
mov
dec
fisttpll
sub
sub
popf
mov
nop
sub
add
inc
ret
pop
push
shll
xor
inc
daa
fsubrs
cmp
push
inc
test
jbe
xchg
or
xchg
add
add
cmpsl
lcall
lahf
or
test
loopne
movsb
push
jg
push
inc
shl
loopne,pt
jl
pop
mov
enter
rorl
jo
enter
fistps
insl
shr
leave
cmpsl
out
push
adc
add
cmpsb
jns
aad
sub
dec
std
fstp
push
dec
pop
jmp
enter
flds
inc
or
add
jle
inc
outsb
daa
mov
pop
add
decl
cmpsl
xchg
pop
push
inc
pop
mov
mov
outsl
add
xchg
dec
xor
fldt
ljmp
test
cmp
add
loopne
cmp
mov
pop
pop
mov
and
push
add
int
out
addr16
add
popa
in
nop
fldl
mov
shrl
aas
inc
push
outsb
jb
add
in
jge
add
adc
scas
outsl
xor
mov
push
das
js
call
adc
shrb
stos
add
mov
push
mov
fsub
add
and
sbb
sub
outsl
or
dec
sahf
xor
test
push
add
mov
push
in
cmp
jge
xor
sub
xor
insb
test
xchg
daa
daa
jecxz
fcoms
enter
jecxz
fsts
ret
leave
leave
jge
or
jae
dec
fstl
call
lods
scas
inc
inc
in
cltd
sbb
out
fmulp
pusha
push
jne
popf
add
fcmovnbe
cmc
add
movsl
sub
adc
in
jb
dec
loopne
ret
xchg
jo
outsl
cmp
fcoml
call
add
adc
inc
loope
pop
lock
jle
jno
add
or
mov
push
xchg
jae
mov
mov
jmp
xor
cmp
xchg
pusha
outsb
jmp
loop
push
xor
push
push
pop
jb
xchg
add
and
mov
adc
push
adc
shrb
stos
xchg
loop
sbb
rorb
scas
xor
push
fnsave
dec
pop
pop
adc
or
add
aam
or
loopne
lods
les
pop
clc
xchg
mov
jg
pushf
cmp
jo
dec
into
fadd
mov
pop
cmp
movsb
add
cs
jecxz
adc
add
fadd
lret
mov
xchg
sarb
jg
clc
fidivrl
pop
test
lcall
xor
divb
idivb
mov
into
fnstenv
xor
sbb
outsb
jmp
push
fistl
jecxz
and
cmp
imul
fists
insb
adc
aam
repnz
push
cmp
push
ds
inc
xlat
and
clc
inc
int3
cmp
ret
test
mov
popl
add
sub
or
and
arpl
out
mov
sbb
and
out
lcall
and
or
mov
mov
test
sbb
add
test
in
fists
pushf
loope
dec
cmp
push
into
decl
dec
cltd
xchg
xchg
fld
adcb
add
xor
ljmp
mov
pop
or
inc
cwtl
sbb
push
cltd
rorb
rorb
dec
jp
xorl
lcall
cmpsl
xor
and
add
push
repnz
dec
leave
int
loopne
fbstp
add
js
clc
mov
dec
adc
add
sbb
add
or
ja
adc
and
jecxz
lea
jo
add
dec
mov
push
push
adc
pop
orl
or
sub
popf
ror
cmp
push
in
cs
jo
js
andb
sub
xchg
xchg
push
jo
decb
sbb
push
cmp
jecxz
jp
loope
push
jnp
xor
loop
ss
ja
aad
cltd
add
dec
xlat
mov
sbb
jecxz
out
sbb
inc
daa
fcmovne
cwtl
add
das
in
pop
xor
mov
xchg
ret
adc
stos
xor
cmpsl
jge
scas
or
dec
mov
sbb
nop
pop
push
or
sbb
jle
xor
mov
inc
pop
adc
xchg
es
push
pop
lock
inc
and
scas
je
mov
adc
add
and
das
cs
sbb
add
cwtl
popa
mov
adc
jecxz
aad
add
xchg
call
mov
push
cmpsl
les
or
and
aad
bound
and
inc
dec
jno
rclb
in
sbb
js
xor
dec
in
push
lea
clc
lret
and
or
xor
xchg
cltd
out
je
mov
mov
and
cwtl
lcall
loop
subb
xor
mov
js
enter
test
pop
rcrb
add
enter
xchg
pop
lock
lods
adc
push
push
loope
lods
dec
jne
icebp
pop
inc
dec
adc
inc
clc
jo
movsb
pop
pusha
xorb
or
adcb
std
fwait
mov
cmc
out
sub
rolb
pop
jae
orb
push
pop
ja
push
scas
les
mov
jg
fwait
lds
cltd
cmp
mov
pop
cmpsl
test
or
loope
movb
data16
mov
or
fdivs
push
dec
xor
movsb
int3
fmull
adc
call
mov
sahf
aaa
lods
xorl
notb
cmpsl
push
sub
sbb
daa
inc
cmp
xorb
out
lcall
and
and
idivb
andb
adc
ucomiss
fisubl
outsl
sbb
jmp
cmpsb
pop
mov
jbe
popf
mov
loopne
mov
aam
aas
lret
popf
aas
or
lock
aad
adc
inc
mov
vmovshdup
add
call
dec
out
mul
lock
add
xor
dec
jae
insl
push
int3
and
add
xor
mov
fdivs
jno
jbe
add
cmp
sub
and
jo
dec
xchg
in
dec
and
ret
push
xlat
lcall
loopne
daa
inc
dec
add
pop
stc
push
push
dec
arpl
jae
rolb
repnz
lea
out
pop
inc
cmpsb
arpl
xchg
jl
aas
pop
roll
fcmove
or
sbb
add
popa
sbb
adc
or
add
pop
pop
or
enter
pop
adc
mov
jl
mov
in
hlt
or
arpl
nop
hlt
xlat
xorl
clc
pop
cmp
mov
pop
dec
or
lret
inc
loope
mov
lret
lock
aad
pop
lods
ret
inc
sti
sbb
in
pop
jns
fcoml
cld
jb
jo
adc
add
shl
cmp
mov
cmpb
inc
jo
cld
xchg
rcll
andb
adcb
cmp
mov
pmullw
daa
or
leave
fsub
push
and
cmp
fs
cmp
out
in
sub
fldcw
adc
fistps
nop
call
and
and
test
add
fdivs
jmp
aam
iret
das
rcr
adc
adc
dec
out
inc
sbb
test
aas
ret
cltd
adcb
sbb
mov
sbb
or
adc
aas
addr16
jl
in
inc
cmp
sbb
bound
inc
inc
mov
inc
das
clc
mov
testl
lret
add
sub
push
imul
add
jno
sub
pop
and
dec
add
adc
or
or
aad
jo
add
imull
loop
xchg
clc
hlt
fnstenv
pusha
lods
jmp
jge
aas
std
cld
add
xor
cmp
dec
sbb
inc
ljmp
jne
cmp
shr
cmp
and
cltd
fistps
js
sbb
cltd
rclb
idivl
or
adc
jl
mov
jl
inc
lea
mov
cwtl
mov
pop
push
sarb
mov
cld
mov
jmp
or
pop
ja
ret
push
xchg
inc
mov
sub
inc
ljmp
stos
cmp
mov
out
mov
jmp
jge
sub
sbb
sbb
jp
inc
cwtl
dec
js
cmp
push
loopne
mov
daa
jl
test
inc
mov
pop
dec
mov
ja
xor
daa
sbb
test
out
popa
cmp
pop
mov
unpcklps
rcrb
call
mov
adc
mov
mov
push
ja
pushf
aaa
lods
aaa
adc
sbb
fldt
adc
sub
ss
pop
aad
cmp
mov
movsb
mull
lret
or
adcl
rcl
fbld
cmp
sbb
add
fimuls
and
mov
pop
arpl
mov
add
pop
mov
cmp
xor
aaa
pusha
push
aas
push
arpl
loope
mov
pop
scas
jno
mov
inc
cltd
and
adc
lods
loopne
xor
jecxz
lock
mov
push
or
aam
xchg
and
jne
xor
scas
adc
repnz
fstpt
xor
les
cmp
shr
test
cwtl
add
mov
rolb
sarl
outsl
cmp
outsl
and
loopne
lea
pop
rcrb
or
inc
and
out
jns
cmp
push
movsl
and
enter
mov
sbb
and
fldl
enter
mov
testb
dec
mul
xchg
imul
mov
add
in
pop
das
fstpl
aas
mov
or
test
movsb
bnd
fsubs
and
push
or
inc
pop
pop
and
inc
sub
leave
and
jb
pop
cmp
out
xorl
mov
das
call
push
mov
and
pop
sbb
call
shrl
cwtl
jp
outsl
mov
iret
stos
fmulp
cmp
bound
and
pop
into
push
lret
inc
push
bound
adc
addl
in
or
push
cmp
push
add
push
inc
outsb
mov
insb
add
mov
cmp
mov
or
mov
loopne
or
lret
or
scas
inc
pop
push
jae
jae
rol
push
add
lods
ret
incl
mov
loope
pop
lods
cmp
sub
arpl
sub
clc
shlb
das
aaa
add
mov
jnp
sbb
js
mov
xchg
push
inc
divl
sbb
add
lea
or
jle
imul
mov
inc
mov
ret
and
cmp
mov
les
cmc
mov
mov
cmp
loop
imul
jb
nop
scas
sub
icebp
inc
into
push
insl
add
xor
xchg
inc
dec
and
dec
inc
ret
mov
add
and
add
pop
add
add
adc
test
inc
sti
mov
inc
add
stc
add
adc
pusha
adc
add
jmp
mov
cmp
ror
scas
adc
or
outsb
jo
rcrl
add
leave
cmp
je
pop
js
das
xchg
or
sub
or
dec
mov
ja
test
bound
or
je
adc
inc
insb
jecxz
jne
dec
aas
nop
xchg
sub
mov
mov
jge
jo
movl
and
or
inc
nop
cld
ret
jmp
sbb
push
std
cmp
je
pop
js
cmp
adc
adc
and
jo
mov
mov
sub
mov
out
push
jmp
je
sub
and
sbb
jl
in
call
scas
in
push
addl
shl
xor
pusha
xor
roll
ret
push
xchg
lock
pusha
xor
xor
xchg
jle
add
and
cwtl
sub
sbb
mov
cs
cmp
pop
add
adc
jmp
sbb
bound
xchg
inc
or
inc
add
shl
fistps
test
outsb
or
daa
jl
hlt
test
xor
es
add
in
add
add
xor
imul
insl
jge
mov
jle
pop
mov
jle
dec
rcrb
adcb
or
add
dec
pop
mulb
aas
mov
mov
adc
sarb
dec
imul
cs
fiaddl
shrb
fsts
add
or
fidivl
mov
mov
inc
cmovge
inc
cmc
testb
sub
in
test
add
nop
add
cmpsl
out
add
adc
cwtl
jo
or
ret
mov
cs
mov
ljmp
push
je
cmp
mov
lcall
cltd
cwtl
mov
mov
dec
cmp
cld
adc
dec
nop
pop
mov
ds
pop
hlt
jl
xor
incl
arpl
push
xor
xchg
add
jle
push
icebp
sbb
xchg
mov
xlat
stos
adc
outsb
lahf
adcb
out
jmp
out
jp
add
ja
dec
popf
lahf
cld
mov
mul
xor
out
divl
clc
xchg
jo
add
xchg
mov
subl
aas
subl
jp
fcoms
xor
push
jne
add
out
mov
in
pop
sbb
outsb
insl
aas
rol
inc
jne
sub
fsubr
enter
add
mov
repz
cmp
pop
clc
push
adc
add
jl
iret
inc
mov
leave
adc
rolb
and
je
test
pop
cs
push
cmp
mov
pop
loope
push
jo
lods
out
add
leave
and
rcll
and
ficomps
dec
sbb
pop
or
sub
clc
jg
addb
dec
or
fs
and
add
inc
and
push
sub
push
das
rol
movsb
stos
and
jecxz
rolb
lds
cmp
ljmp
jmp
test
mov
jno
sub
jmp
js
cmpb
mov
sysenter
popw
push
loope
push
dec
add
adc
or
inc
out
ja
jg
adc
sub
ja
ret
and
leave
sub
inc
xlat
push
pop
insb
aaa
ss
sbb
inc
lock
dec
push
jae
lret
das
sti
es
aam
daa
aaa
dec
inc
loope
add
dec
pop
add
popf
jo
and
pop
sbb
add
rorb
test
idivb
add
imul
ljmp
mov
add
fidivrs
cwtl
sbb
call
out
je
add
or
xchg
xor
jo
adc
add
scas
es
push
outsb
lds
mov
call
mov
aad
xor
pop
or
and
or
fisubl
cmovo
leave
je
stos
adc
lods
stos
in
ret
btr
cmp
sbb
push
inc
adc
fcmovb
fmuls
add
imul
aaa
cwtl
call
adc
je
sbb
mov
into
cmp
ja
adc
mov
shl
mov
cs
mov
jle
ret
adc
push
inc
cmp
jne
inc
add
inc
dec
mov
and
add
add
xchg
lds
add
sbb
pop
andl
sarl
std
js
lock
add
dec
mov
cmp
add
es
xchg
jae
inc
call
loope
scas
in
inc
dec
cmp
and
adc
adc
push
call
add
xchg
mov
jg
mov
das
ret
mov
mov
stos
inc
or
sbb
mov
or
xor
aaa
dec
adcb
xor
data16
pop
add
fs
push
inc
and
mov
shlb
adcl
scas
mov
add
stos
lods
adc
inc
add
cmp
cltd
mov
lods
pop
stos
iret
cmp
fmull
pushw
mov
test
sub
jo
mov
ds
mov
sbb
je
addr16
push
inc
mov
sub
sub
adc
and
xor
dec
or
push
xor
sub
or
lds
and
pusha
push
add
push
adc
or
outsl
popa
pop
enter
add
fcoms
loopne
push
enter
jle
mov
out
push
das
cmp
out
mov
or
ret
push
dec
adc
xlat
out
dec
and
xor
add
arpl
in
das
cmp
cli
in
test
pop
or
push
div
cli
adc
test
add
mov
stos
mov
pusha
xor
cmp
pop
dec
mov
in
jmp
xor
fbld
test
lods
add
push
popf
xchg
adc
mov
subl
divb
pop
mov
cmpb
pop
dec
pop
fnstcw
rcrb
outsb
pop
int3
xor
push
int
into
cmp
movsb
xchg
push
ljmp
xor
les
das
icebp
imul
pop
cmp
fcoms
adc
fcmovbe
add
inc
jl
test
cli
aam
push
inc
sub
adc
xlat
xchg
inc
lods
xor
mov
dec
bound
and
lsl
or
inc
mov
xor
jnp
jg
ja
push
push
push
jae
sbb
adc
repnz
pop
cmc
inc
mov
or
jmp
or
in
mov
and
or
and
add
aam
add
dec
push
into
arpl
lock
cmp
orl
xchg
and
int
notb
lahf
and
adc
sub
inc
sub
xchg
xchg
loope
and
sbb
xchg
dec
add
dec
loop
xor
dec
or
inc
sbb
mov
dec
pop
dec
test
setnp
inc
sub
xorl
clc
or
mov
inc
pop
push
movsb
push
clc
insl
push
adc
push
sub
xchg
sbb
ret
jae
add
jne
adc
mov
popa
addr16
test
mov
call
mov
inc
shlb
stos
repz
fisttpll
xchg
into
xchg
dec
stos
fdivrl
out
mov
hlt
aam
cmpsl
adc
jge
adcb
pop
jae
xorl
push
cmpl
inc
pop
jmp
jne
sub
subb
adc
pop
jne
dec
or
add
dec
pusha
mov
inc
dec
jne
jnp
call
pop
add
stc
or
push
cmc
jecxz
and
cmp
lods
mov
insb
mov
sbb
js
dec
push
push
mov
adc
decl
sub
cmp
xor
sub
das
mov
clc
imul
clc
mov
mov
push
fstl
je
jp
or
jecxz
cmp
js
mov
add
sarl
pop
orb
jb
sbb
sbb
and
pop
cld
sub
add
hlt
lcall
std
into
stos
jno
loope
push
js
cmpsb
adc
sbbb
mov
les
loopne
jb
mov
lock
pop
xor
xor
fiaddl
hlt
hlt
inc
jmp
push
stc
adc
sub
hlt
fsubrs
clc
repz
in
test
aas
mov
enter
jnp
pop
xor
xor
fcoms
dec
or
xor
loopne
aaa
ret
lods
pop
add
mov
imul
push
cld
xchg
or
out
aad
xor
movzwl
adc
jns
andb
or
add
imul
pop
pop
or
nop
cmp
cmpl
push
loop
add
fdivs
and
pop
adc
and
add
sbb
sub
sbb
pop
adc
clc
shr
popf
mov
adc
sub
add
adc
cmpsl
clc
push
push
popa
cmp
mov
pop
or
inc
xor
int3
jge
dec
adc
and
or
jae
dec
adc
js
imul
and
xlat
addr16
rolb
jo
jo
inc
iret
sbb
cmp
popa
jmp
lock
xchg
dec
cmp
pop
mov
or
inc
daa
mov
jb
pusha
xorl
nopl
das
inc
scas
cli
xchg
insb
cmp
push
adc
addr16
cltd
inc
loopne
or
iret
fstpl
cwtl
pop
push
add
imul
cmp
mov
pop
roll
or
mov
out
sbb
xchg
xchg
cld
repz
sbb
xor
dec
xchg
stos
adcl
add
sbb
addb
hlt
and
jmp
sub
push
test
lock
and
dec
push
mov
mov
adc
pop
adc
or
mov
xchg
or
push
and
aas
stos
into
adc
mov
mov
hlt
push
mov
adc
nop
adc
mov
inc
and
mov
subl
jl
lcall
enter
mov
neg
push
cmpsl
pusha
aaa
add
push
jne
lea
aas
sub
icebp
cmpl
aaa
push
sahf
and
cmp
xchg
imul
in
push
sub
rclb
pop
std
adc
ret
mov
notl
call
mov
fcomip
mov
jns
mov
inc
ds
and
fs
sub
stc
sub
mulb
int
cmp
jl
jnp
xor
mov
pusha
negb
mov
dec
lea
inc
push
imul
icebp
add
or
mov
stos
and
sub
push
enterw
inc
jg
dec
mov
mov
je
xchg
outsl
sti
mov
sbb
mov
and
sbb
pushl
and
jne
push
adc
adc
adc
push
mov
and
loope
mov
cwtl
shrb
add
add
pop
addb
inc
add
mov
and
cmpsb
cltd
rcrb
js
dec
or
fwait
nop
shll
fsubrl
push
pop
rolb
or
test
hlt
jae
add
mov
ret
and
push
jne
adc
adc
int3
in
faddl
hlt
iret
stos
out
adc
inc
pop
jae
or
sbb
add
add
mov
inc
dec
js
scas
inc
dec
call
pop
mov
or
jbe
cld
dec
arpl
adc
test
cmp
or
loopne
mov
cmpsl
sub
clc
adc
add
imul
psrlq
sub
clc
or
or
clc
lock
push
xchg
or
and
xor
or
sahf
clc
fdivrl
and
adc
pusha
les
or
mov
adc
adc
addr16
enter
ret
repnz
add
shlb
and
fdivs
dec
movsb
pop
dec
inc
test
test
test
les
outsb
adc
add
popl
jecxz
stos
inc
movsb
rclb
icebp
movaps
adc
call
push
add
mov
fisubrl
testb
cmp
mov
mov
dec
icebp
xchg
xor
mov
xorl
and
adc
push
orl
fsubrl
cmp
and
or
lods
mov
insb
xchg
jge
mov
je
and
adcb
rcrb
push
les
aad
pusha
pop
pop
clc
lds
mov
adc
and
sub
loopne
jne
dec
cmp
xchg
outsl
hlt
or
jo
sub
ret
push
ror
mov
es
cmp
adc
sub
inc
push
pop
fistps
test
fwait
addb
push
pop
lret
popa
repnz
mov
xchg
xlat
mov
adc
ret
push
jne
les
in
jnp
adc
cmp
and
jmp
pop
fstl
shlb
pop
lds
mov
sarb
cs
cmp
dec
mov
jae
mov
sub
or
int3
push
jb
out
adc
cmp
pop
sbb
dec
xchg
shlb
rcrl
mov
add
adcl
add
or
mov
pop
inc
popa
xchg
jecxz
pop
ret
dec
xor
sbb
lock
sbb
daa
cld
mov
adc
adcl
std
mov
cmp
sub
cld
leave
jae
xor
pop
hlt
inc
add
push
push
fwait
rcrl
sub
sub
mov
xlat
push
jo
addl
rcrb
adc
test
das
hlt
and
inc
scas
ret
sti
and
fs
cmp
push
add
fwait
ret
inc
out
xchg
fidivs
nop
sbb
in
dec
shrb
pop
ret
sbb
mov
add
inc
les
mov
xor
repz
pop
add
nop
cmp
nop
lcall
imul
sbb
test
push
jecxz
fdivr
cmp
mov
nop
or
jne
jmp
in
or
call
inc
xchg
inc
in
cmp
and
stc
inc
insb
push
jg
pop
xor
jmp
das
push
lock
sti
jne
sbb
cmp
neg
or
jno
sbb
shlb
sub
stc
jno
jne
out
das
sub
xchg
bound
je
xor
lea
xchg
xchg
jne
jnp
jb
jne
xor
int
sbb
pop
leave
and
lea
inc
ficomps
sarl
sub
jns
push
xor
mov
sarb
scas
fsubrs
ljmp
and
cltd
adc
or
popa
mov
cmp
jb
std
pop
jmp
mov
cmpl
jne
jecxz
ja
and
mov
mov
adc
or
push
inc
or
mov
testl
dec
fnstenv
imul
orb
and
out
mov
xor
in
sbb
testb
pop
movsl
add
and
rolb
cmp
das
add
cmp
inc
aas
xchg
xlat
inc
or
xorb
scas
add
scas
or
adc
call
xchg
mov
testb
push
sub
orb
mov
mov
add
mov
push
aaa
push
dec
or
das
insl
test
pop
add
pop
add
mov
idivb
pop
adc
add
pop
orb
loope
add
in
ret
adc
das
leave
jae
cmp
push
test
pop
cs
push
aas
jmp
xor
mov
mov
mov
jae
dec
adc
and
js
cmp
mull
and
add
cld
sub
nop/reserved
xchg
dec
inc
cli
push
ffreep
fwait
and
mov
mov
jp
cmp
or
xor
and
xchg
pushf
jl
sbb
sub
es
add
mov
cli
lods
cmp
mov
mov
ret
cwtl
mov
lods
push
inc
test
sbb
jae
fiaddl
cld
xor
cmp
test
cmp
in
xor
shrl
jno
xchg
scas
dec
dec
ret
test
jae
inc
and
add
popa
dec
and
stos
mov
sub
dec
mov
mov
jbe
pop
cmc
push
sub
es
ds
add
jno
push
fsubr
jbe
jmp
adc
or
push
lock
pop
test
shrl
xchg
sbb
jnp
adc
and
mov
mov
not
mov
push
cmovae
faddp
sbb
add
cmpsl
xor
mov
outsl
push
xchg
sub
xchg
add
pusha
das
or
jb
je
pusha
outsl
inc
xor
jmp
sub
fidivrl
outsl
ret
clc
mov
sbbl
jbe
sarb
jmp
cld
imul
jne
xchg
add
repz
js
xchg
jle
mov
cwtl
xor
sbb
pop
add
dec
cmp
xor
ljmp
mov
mov
or
mov
faddl
inc
push
and
repnz
mov
movb
mov
mov
aaa
or
mov
add
dec
cmpsl
adc
sbb
xor
pop
sbb
fs
push
fs
dec
ds
mov
mov
out
jle
xchg
test
sub
fsubp
cmpsl
cmpsl
or
loopne
and
pop
adc
aas
js
push
repnz
mov
ret
xchg
push
in
or
mov
fdivr
sbbb
or
mov
xlat
mov
mov
mov
or
sub
shll
sbb
adc
or
push
and
and
cmp
aaa
push
jo
lahf
fldt
movsl
or
mov
or
or
sbb
outsb
sbb
mov
js
dec
add
mov
xchg
mov
jg
jecxz
js
pop
and
adc
test
das
mov
mov
sub
or
ret
rorl
lock
insb
ret
push
es
jbe
mov
frstor
sbb
or
pushf
imul
sbb
dec
in
dec
mov
in
sub
add
loopne
or
inc
or
and
rolb
jle
es
or
pusha
ret
stos
test
daa
aas
in
pop
or
cmp
je
mov
rcll
pop
jp
outsl
notl
js
add
dec
and
sub
and
movl
sub
lock
push
enter
or
cmp
sbb
cs
subb
add
cwtl
sbb
pop
or
aam
jge
jne
cmp
jge
mov
mov
and
aam
push
push
fs
movsb
pusha
frstor
shl
cmpsl
in
dec
cmp
hlt
lock
and
xor
ret
inc
movsl
push
pop
mov
and
arpl
out
cmpsl
sbbl
in
leave
add
sbb
in
adc
dec
pusha
sbbb
mov
dec
repnz
test
sbb
pop
dec
out
pop
add
jae
sbb
adc
dec
and
es
sub
jo
pushf
out
shr
dec
aad
xchg
jnp
rclb
sub
adc
xor
sub
sbb
jb
mov
jo
cmp
leave
xlat
pop
test
loopne
in
sbb
add
jb
mov
and
and
sbb
add
dec
rcll
adc
insb
lods
or
push
or
rolb
mov
rol
mov
cmpsl
jo
sub
in
xor
call
filds
or
add
jo
sbb
pop
cwtl
push
std
mov
adc
xor
ret
cltd
sub
push
cmp
inc
mov
xor
xlat
in
cs
lods
inc
sti
xchg
cmpsl
dec
call
adc
rcrb
movsl
iret
pop
inc
xor
adc
pop
call
popf
ds
stc
xchg
cli
dec
push
mov
call
xchg
add
rorb
pop
pmaxsw
pop
cld
lods
add
xorb
int3
dec
clc
cmp
mov
sbb
repnz
lea
mov
aaa
jg
and
jg
push
cmpsl
call
xor
and
jge
pusha
aad
cwtl
or
test
push
rcrl
push
push
and
or
adc
cmpsl
sub
or
and
rclb
jl
add
sbbl
bound
insl
pusha
add
in
dec
add
pop
mov
cmp
mov
movsl
mov
lods
shr
cmp
or
insb
mov
xchg
in
and
cmpb
adc
jmp
xlat
and
test
jne
enter
dec
enter
sbb
enter
mov
lret
xor
femms
mov
push
sub
mov
cmp
pop
push
mov
clc
pop
movsl
xchg
mov
push
and
outsl
dec
inc
lea
adc
or
push
outsb
mov
sbb
sub
push
popa
mov
dec
insl
sbb
dec
add
testl
sbb
pop
xor
stos
xorb
leave
or
adc
push
or
repnz
lods
fistps
hlt
ljmp
inc
ret
inc
pop
or
lea
in
xor
mov
mov
push
add
aaa
pop
sub
arpl
jecxz
mov
or
pop
mov
ret
jo
repnz
std
popf
es
andb
cmp
andb
je
sbb
insb
cmpsl
xchg
mov
leave
push
lret
push
dec
mov
pop
sbb
daa
es
test
ficoml
jmpw
loope
or
adc
lret
or
pop
aam
sbb
xor
jmp
test
adc
jno
repz
mov
les
call
lcall
imul
cmp
inc
pop
and
push
repnz
pop
push
push
add
js
sub
jnp
fwait
xchg
xor
sub
insb
add
push
adc
hlt
lds
push
xchg
adc
lea
or
cmp
push
sbb
adc
inc
fadds
mov
out
pop
inc
mov
jle,pt
inc
push
or
xchg
add
lcall
je
jb
sbb
sub
imul
ja
sbb
into
and
add
add
jl
add
dec
out
insl
adc
gs
jne
das
enter
pop
sbb
xchg
test
popa
ja
jl
add
outsb
decb
dec
xlat
mov
push
adc
or
add
je
ja
cmpb
pusha
je
daa
sbb
dec
enter
call
mov
or
fldenv
fwait
pusha
mov
mov
js
push
test
lock
xchg
dec
mov
js
es
and
lock
cwtl
pushf
add
outsb
xor
mov
jl
pop
lret
rorb
lret
or
pop
xchg
cltd
cli
fs
add
adc
test
xor
mov
mov
imull
xor
jp
popa
cld
inc
xchg
cld
adc
test
mov
into
jns
fcomps
movsb
bnd
xor
inc
addr16
sbb
dec
push
mov
arpl
cmpb
dec
cmpsb
dec
dec
push
jno
cmp
push
rcrb
aam
iret
mov
adc
mov
or
mov
addl
pop
andb
pop
xchg
arpl
adc
insb
ret
cld
testb
mov
push
lods
xor
sbb
mov
das
cmpsl
push
movsb
inc
jno
addr16
jo
aaa
adc
xor
push
icebp
cld
adc
jmp
sub
jbe
inc
sub
sub
dec
das
shll
xor
add
fimull
xchg
jbe
xor
inc
gs
adc
sub
addb
xor
sbb
fld
sub
push
out
or
adc
adc
or
add
dec
cmpb
dec
xchg
outsb
lret
pusha
outsb
adc
xor
testl
sbb
adc
mov
xchg
xor
pop
mov
pop
divl
dec
test
pop
or
mov
jbe
add
cs
mov
sbb
jle
iret
aam
and
test
xor
push
inc
push
jo
mov
dec
mov
push
pop
addb
iret
rolb
mov
dec
or
cltd
aam
sahf
or
adc
or
sbb
shrb
bound
and
lock
mov
cmp
lds
ret
popa
sbb
jge,pn
pop
sub
fstpl
add
push
das
xchg
movsl
push
sbb
inc
test
push
pop
sbb
add
nop
orb
mov
aad
mov
mov
sub
and
rolb
sti
and
aam
inc
or
call
push
ficomps
js
xchg
sbb
mov
xor
xchg
daa
or
ss
mov
jno
xchg
adc
jae
fsubs
or
sarl
rolb
in
jle
hlt
cmpl
scas
nop
dec
mov
adc
xor
mov
fisubs
xor
movsb
inc
les
sub
and
cld
filds
dec
sbb
nop
cld
das
dec
sbb
movb
aam
adc
ret
jl
inc
loopne
outsl
jmp
or
xchg
xor
mov
stos
mov
dec
lods
ret
jmp
pop
shl
lock
cmp
push
jne
xor
cmpl
pop
insb
add
inc
shl
in
pop
lret
cli
cmp
dec
dec
negb
and
icebp
test
outsl
stos
int3
adc
jno
into
mov
sbb
xchg
xor
push
aas
das
testb
or
sbb
jne
mov
es
out
addr16
push
imul
jmp
sbb
clc
pop
sti
cltd
cmp
or
or
add
pop
cmp
jl
xorb
bound
push
push
clc
pop
and
sbb
lcall
mov
add
sbb
mov
cmp
loopne
test
add
dec
adc
jne
fldl
bound
push
cmpl
adc
popf
in
imul
daa
lcall
sbb
outsl
adc
ds
mov
pop
aam
xchg
mov
mov
sub
popa
je
pop
xchg
sub
add
pusha
dec
adc
xlat
out
fisttpll
add
pop
dec
and
or
mov
int3
xchg
insb
addl
out
push
mov
movsl
xchg
and
adc
dec
movsl
push
jns
xlat
rcrb
pop
push
sub
sbbb
jg
cmp
lods
or
push
sbb
sub
xchg
data16
sbb
daa
test
push
xchg
mov
adc
fsubrs
dec
adc
dec
sbb
xor
std
pushf
push
pop
xchg
testw
adc
push
adc
cmp
testl
mov
push
ret
les
add
in
dec
outsb
sbb
rorl
push
movb
dec
add
shlb
fwait
xor
jnp
mov
push
js
hlt
aaa
scas
aad
adc
dec
lea
cmp
insl
cmp
lret
jo
adc
cli
out
xchg
lock
test
decl
sbb
lret
and
lret
add
jp
jl
orb
nop
aaa
pop
cwtl
ret
jne
repz
test
and
arpl
inc
sub
cld
lret
mov
push
lea
sbb
aaa
in
iret
sahf
inc
inc
jmp
cmp
push
cmp
fcoms
mov
add
mov
pop
cmc
push
cli
cmp
into
lock
dec
filds
in
jmp
pop
pop
inc
leave
pop
loop
xlat
lock
sub
loope
jge
push
add
push
push
or
jne
rcrl
push
or
cwtl
jb
mov
cmp
push
negb
pop
cmp
pop
cmp
inc
xor
repz
sbb
aas
aaa
popa
adc
ret
cmp
ret
jmp
pop
push
dec
sub
and
sbb
sub
sbb
lods
inc
jl
js
push
aas
mov
imul
icebp
shlb
mov
xor
mov
xor
xor
dec
mov
and
das
push
ds
pop
xor
adc
sbb
stos
je
mov
ret
jmp
pop
xor
and
xlat
cmp
push
ja
stos
sub
mov
rcrb
inc
mov
aam
jne
movswl
sbb
sahf
add
pusha
cmp
xchg
xchg
dec
cld
rcrb
pushf
xchg
sbb
adc
dec
jne
jp
nop
cmp
scas
jne
lock
enter
pop
addr16
mov
or
pop
dec
add
pop
rcrl
ret
pop
mov
fimull
sub
mov
dec
ret
lret
mov
pushf
dec
mov
dec
adc
mov
jg
sbb
flds
fsts
lret
cli
add
push
dec
test
shll
add
rep
mov
lret
or
jne
mov
xchg
movsl
pop
inc
loopne
adc
inc
dec
pop
iret
rorb
dec
pop
or
xor
cmp
or
and
scas
ror
cwtl
inc
add
or
popa
aad
jle
iret
enter
sbb
inc
and
lods
mov
enter
cmp
subl
sbb
scas
lret
cmp
subl
mov
add
dec
adc
inc
in
xchg
hlt
mov
jae
cmp
cltd
bound
and
loopne
fldenv
aad
sub
and
movsb
leave
mov
scas
inc
xchg
mov
add
xor
or
mov
mov
xor
imul
mov
push
mov
outsl
jmp
and
mov
lock
cmp
mov
or
add
jae
sbb
sbbb
mov
inc
xor
inc
mov
xchg
mov
sbb
or
mov
cld
pinsrw
push
std
pusha
in
dec
add
aad
lock
add
jge
sbb
mov
cwtl
rolb
or
mov
rcrb
not
and
aaa
shrl
dec
xchg
xchg
inc
push
out
shlb
xchg
xchg
test
or
sub
jmp
fcmovb
add
pushf
add
cmp
xor
incb
addr16
test
push
cmc
xchg
cmp
jae
mov
cmp
shr
add
add
dec
push
ss
pop
in
pop
dec
xchg
push
mov
jne
adc
sbb
inc
das
jnp
jl
clc
xchg
jo
imul
scas
je
jo
and
or
int3
jno
xor
adcb
clc
iret
push
out
mov
dec
sbb
adc
sbb
or
pop
add
inc
or
sbb
sub
xchg
sbb
xchg
sbbb
clc
lock
xor
adc
fisttpl
inc
adc
test
lahf
push
sbb
xor
adc
je
pop
hlt
add
out
test
in
adc
stos
inc
dec
repnz
or
sub
adc
test
push
add
or
add
mov
adc
sbb
xor
inc
mov
sub
call
ror
js
push
dec
push
pop
aas
and
cmp
adc
shlb
pop
xchg
rolb
adc
sbb
xchg
enter
ret
push
testb
lock
or
sub
jmp
out
push
lea
inc
cmp
jae
cmp
je
xor
pop
or
mov
add
mov
pop
lahf
jne
xor
sarl
gs
adc
sbb
and
inc
out
sbb
add
jae
not
inc
incl
sbb
push
js
jecxz
push
pushf
popa
adcb
stc
sti
xchg
sub
xor
ficoml
pop
test
xor
adc
pop
sbb
jecxz
cs
aas
and
or
inc
lcall
push
jmp
aad
sub
leave
cmp
out
shl
xchg
cmpsl
mov
mov
lret
xor
add
xor
or
inc
sbb
or
repnz
dec
add
orb
je
pop
stos
jmp
sub
pop
jmp
dec
fdivrs
jmp
cmp
mov
ljmp
dec
adc
mov
mov
shll
inc
dec
cmp
add
cld
imul
jge
popa
sub
adc
rorb
mov
sub
sub
hlt
sub
xor
out
lods
cmp
pop
cmp
jne
iret
mov
push
push
sub
cmp
dec
nop
outsb
lock
and
cmp
sbbb
std
mov
xchg
and
jns
add
flds
sahf
inc
mov
adc
fmuls
and
fwait
sub
cmp
aas
sbb
test
aam
vcvtdq2ps
ja
dec
ret
out
add
icebp
sbb
jns
sti
xchg
inc
add
jo
push
jns
mov
pushf
out
mov
dec
jo
shrl
dec
idivl
dec
loope
xchg
push
or
xorb
roll
mov
sbb
jno
mov
movsl
and
xor
mov
in
in
das
or
nop
out
and
xor
lea
add
xchg
leave
andb
out
out
ret
pop
dec
sahf
ud1
jno
mov
sub
test
and
ss
push
pop
xchg
loope
repnz
xor
mov
test
push
adc
movsl
addr16
xlat
out
adc
inc
mov
inc
bound
cltd
pop
push
pop
inc
add
push
sub
bound
jge
aas
mov
add
mov
flds
fcmovnu
jne
ret
and
testb
mov
andb
xchg
xor
inc
inc
add
xor
dec
adc
adc
inc
adc
es
mov
adc
inc
mov
faddl
pop
push
cwtl
adc
loopne
sti
push
sub
ret
adc
movsl
outsb
mov
movsb
adc
sub
jg
mov
movsb
scas
mov
mov
movsb
push
push
xor
test
xchg
push
cmp
movsb
jae
xchg
dec
mov
pop
orb
mov
rcrl
sub
pop
mull
ret
iret
clc
jne,pn
inc
lods
andb
mov
insl
adc
mov
xchg
pop
mov
lret
inc
or
movl
out
add
rorl
mov
mov
xchg
mov
xor
movsl
test
or
push
inc
jp
sub
or
in
cmpsb
mov
mov
or
lock
and
aas
or
mov
movsb
and
ss
add
mov
jmp
jnp
mov
jno
sbb
out
xor
les
cmp
daa
setg
jns
cmp
ret
jp
sbbl
outsl
repz
mov
imul
nop
mov
ficoml
sbb
adc
shll
or
cmpsl
loope
pop
scas
leave
add
js
dec
loopne
test
popf
and
and
xchg
dec
push
mov
pushf
andb
jnp
lock
js
xor
test
pushf
stc
pop
ja
das
shlb
fmul
subb
arpl
and
pop
jbe
pushl
add
lods
fisttpll
sub
aad
sbb
outsl
pop
jecxz
push
or
mov
outsl
pop
jge
or
dec
clc
sbb
and
out
shlb
lret
cmp
cmp
repnz
daa
add
mov
adc
xor
push
popf
push
cltd
rclb
adc
sub
push
dec
add
dec
imul
xor
faddl
sbbl
sbb
emms
lock
rolb
ficompl
push
push
push
push
sahf
fcomi
xor
fiaddl
daa
out
negb
pop
push
push
aas
daa
ss
adcb
ljmp
xor
test
xor
data16
test
xor
and
fstl
mov
cmp
mov
shl
push
mov
test
jne
cmp
xchg
dec
aas
imul
fcom
nop
sbb
cmp
dec
dec
ljmp
stos
mov
push
lea
inc
dec
sbb
xchg
mov
xlat
sbb
popf
add
mov
lods
push
xor
add
adc
cmpsl
xor
xorl
jne
sbb
dec
cmp
pop
and
insb
nop
enter
cs
lcall
add
fidivl
sub
in
or
cmc
rsqrtps
mov
cmc
inc
test
movsb
push
dec
ljmp
outsb
aaa
dec
daa
aam
fcomps
loopne
test
ret
jae
pminsw
inc
sbb
mov
pusha
jns
and
jge
pusha
or
sub
in
pop
or
add
loop
dec
fucomi
das
adc
pop
fs
iret
inc
xor
add
fsubs
test
in
pop
cmp
movsl
mov
dec
cltd
adc
push
push
stc
not
pop
lock
sub
push
sub
inc
sbb
inc
fstpl
mov
pusha
lods
mov
adc
or
aam
sarl
testl
sub
psllq
rcl
sbb
mov
test
push
sub
mov
addl
mov
loopne
adcb
inc
sbb
push
dec
xor
rclb
cmp
xor
adc
xor
push
or
out
xchg
dec
pop
lds
sub
mov
jmp
leave
xchg
push
arpl
adc
and
pusha
test
and
xchg
dec
ss
movsl
and
mov
mov
cwtl
inc
add
pushl
dec
aad
add
orl
fadds
imul
fistps
and
jg
mov
imul
insb
mov
stos
sub
sub
mov
pop
shrb
xchg
and
adc
sub
cli
mov
hlt
sbb
sub
push
gs
cmp
pop
sarb
adc
inc
clc
xchg
mov
std
lds
ds
or
mov
js
rorb
out
clc
xchg
mov
jge
push
push
in
clc
pop
ja
bts
jmp
or
add
test
or
mov
or
pop
cmp
mov
mov
adc
pop
pop
push
shrb
enter
aad
inc
pop
pop
mov
xor
xor
lcall
dec
jne
mov
sbb
and
pop
ljmp
sbb
jg
into
adc
add
imul
mov
das
jae
jno
pusha
mov
push
adc
xchg
lods
and
sar
and
subb
mov
add
in
inc
test
leave
sub
rcrb
push
jne
xchg
add
into
push
push
adc
fnstsw
pop
add
xchg
inc
pop
daa
sahf
mov
mov
adc
leave
add
cmp
lods
xchg
sahf
mov
lock
stos
dec
xchg
xor
or
in
in
lods
pop
mov
pusha
or
sahf
jns
jge
inc
mov
add
inc
jne
lret
test
rcll
test
call
and
or
pop
and
inc
jae
cli
inc
nop
scas
add
and
add
inc
fldz
adc
mov
push
stc
cmp
mov
scas
sarl
sub
push
mov
fcom
std
std
push
mov
xor
push
sub
in
and
add
imul
pusha
in
insl
in
pop
pop
inc
stos
dec
mov
enter
mov
add
cmp
leave
stos
adc
and
iret
jae
inc
push
leave
push
jae
nop
jle
mov
cmpsl
mov
pop
pop
in
pusha
test
pop
dec
and
xchg
sbb
add
mov
or
mov
mov
test
mov
jmp
xor
mov
lret
adc
mov
jmp
mov
fadd
imul
cmp
inc
je
dec
sub
jecxz
in
popa
or
inc
push
adc
enter
inc
hlt
mov
in
sub
sbb
jmp
sub
and
enter
lock
ret
or
in
loop
jmp
xor
shll
mov
mov
sbb
lock
ja
ret
addr16
and
dec
loope
mov
sbb
sbb
mov
cmpb
mov
mov
pop
cmp
adc
sub
scas
cwtl
cmc
in
adc
mov
pop
push
adc
fiaddl
xor
out
fidivrl
or
rcl
push
mov
cmp
cmp
pop
into
cmp
je
mov
add
xchg
cmpsl
mov
rclb
iret
rolb
mov
jns
scas
test
mov
sbb
inc
sbb
bound
lret
push
sub
shrb
imul
cli
cltd
and
subl
add
lods
fisttps
test
aam
add
das
and
add
adc
fistl
inc
out
sub
adc
ljmp
xor
in
inc
test
xchg
sbb
aam
loopne
adc
sub
clc
fs
cmp
add
addr16
add
cmp
in
daa
pop
inc
jbe
shll
pop
pop
imul
or
repnz
lock
mov
xchg
jns
jne
push
int3
mov
fwait
sub
fs
ljmp
pop
inc
lret
pop
in
add
cmp
lcall
in
or
ja
cmp
mov
call
push
adc
pop
pushl
ficompl
mov
sub
pusha
mov
add
sbb
xor
inc
into
add
addr16
adc
out
mov
push
adc
push
or
cmpsl
push
sub
data16
shlb
call
pop
cs
push
jl
nop
push
daa
jno
sahf
mov
into
mov
inc
fdivrl
jns
push
and
movsbl
mov
xor
lock
xchg
clc
mov
mov
xlat
repz
push
jb
add
mov
sbb
nop
xchg
adc
lods
and
clc
xor
arpl
gs
inc
sbb
cli
sub
jl
lahf
ret
push
push
pop
push
inc
push
sbb
lock
dec
jmp
inc
inc
mov
jmp
sub
and
test
in
and
bound
xchg
pop
pop
insb
pop
scas
add
lahf
mov
dec
sub
mov
cmp
jnp
pusha
mov
xor
inc
lcall
sbb
adc
pop
in
push
push
ss
sbb
add
clc
and
cmp
inc
hlt
push
in
inc
js
shl
je
dec
aam
nop
in
add
cld
popa
in
inc
push
lea
mov
lods
mov
cmp
jg
push
adc
cmp
jp
jmp
loope
sub
or
bound
mov
push
scas
xor
lcall
sub
inc
jmp
out
xchg
sbb
sub
push
ret
xor
jo
cmp
in
cs
pop
mov
lods
push
pop
pop
xchg
imul
mov
sbb
inc
das
aaa
push
jecxz
mov
xor
pop
divb
pop
leave
imul
xchg
push
adc
rorb
xchg
mov
in
mov
ret
enter
imul
arpl
sub
pop
or
xchg
out
lahf
test
push
nop
ss
jo
and
cmc
leave
clc
out
and
mov
push
cs
add
scas
pop
xor
movsl
xor
in
jbe
outsb
shlb
adc
xchg
mov
sbb
pop
jo
shrb
aaa
out
mov
xor
xchg
or
daa
ficompl
inc
arpl
mov
or
push
inc
in
ss
rorl
push
mov
hlt
les
in
insb
add
loop
jne
daa
js
mov
popa
jo
mov
je
pop
mov
pop
fcomps
mov
rcrl
sub
dec
sbb
sbb
or
cmp
jg
sbb
xchg
xchg
add
lods
aam
dec
pop
inc
xchg
rcrl
and
ror
aas
and
ja
sub
pusha
ja
jp
sub
fists
mov
cmpsb
rcl
sub
in
rolb
aam
adc
xor
sbb
aam
jl
sbb
dec
rcrb
cmp
xchg
arpl
jg
rorl
sub
lea
cmp
jge
ds
arpl
orl
xor
sub
mov
mov
xor
sti
scas
pop
cld
and
inc
pop
push
orb
jmp
or
xor
mov
xor
cmp
jge
inc
or
std
sbb
pop
xor
aad
loopne
mov
es
cmp
fcmovnb
mov
shlb
int
push
inc
inc
ret
pop
pop
cmp
int
dec
shlb
mov
pop
adc
sub
mov
ret
out
add
jl
jmp
push
outsb
sbb
outsl
and
xchg
adc
cmp
adc
push
mov
out
and
push
dec
jns
adc
imul
xor
fdivl
outsl
xor
xor
sbb
test
mov
jb
add
sahf
loop
sub
and
adc
adc
cli
push
mov
adc
mov
cmp
mov
sub
pop
kortestw
pop
or
icebp
in
je
and
mov
adc
faddp
in
loopne
fdivl
sbb
divb
mov
jae
cmp
jne
mov
ljmp
adc
inc
sti
and
add
in
xchg
inc
rolb
aam
adc
xor
mov
mov
pop
fmuls
mov
xor
enter
inc
add
sbbl
inc
jb
mov
shl
inc
xlat
or
or
cmpl
mov
ret
sbb
std
jmp
mov
sub
mov
mov
adc
cmpl
pop
shl
or
cld
mov
cmpb
jg
mov
mov
mov
pop
frstor
scas
inc
pop
mov
cmpl
pop
mov
adc
jg
mov
push
enter
add
pop
mov
mov
sub
sbb
loope
and
cmp
push
mov
popa
mov
adc
adc
aaa
mov
push
scas
icebp
mov
jge
sbb
and
adc
mov
inc
and
je
ret
add
and
ffree
sbb
jecxz
scas
pop
clc
arpl
in
test
insl
enter
xchg
pop
dec
test
fidivl
jp
pop
ja
popl
cmp
lea
mov
lret
cmp
lods
adc
je
inc
dec
or
lods
and
mov
add
push
and
lock
or
xor
ret
inc
push
std
adc
fcom
push
push
aaa
lock
sbb
cmp
mov
lods
cs
pop
rolb
sbb
ret
jge
bound
sbb
fwait
shlb
insl
lock
jge
stc
jmp
mov
pop
push
jecxz
add
jp
fistpll
xchg
sub
mov
xchg
fiadds
mov
mov
adc
es
xchg
cld
adc
adc
inc
jne
sbb
cmp
fsubl
cmp
rclb
out
rcl
ret
lcall
jnp
rorb
inc
and
pop
push
out
pop
or
inc
lcall
call
xor
lods
fmuls
bound
inc
xor
cmpsl
xor
pop
or
icebp
gs
addb
adc
cmp
cmp
add
and
in
jle
andnps
pop
sub
loop
inc
add
ja
jo
insb
and
sbb
sub
ja
filds
addr16
mov
adc
pop
pop
push
jo
cli
jecxz
jnp
push
pop
add
or
out
bound
adc
outsb
cmp
or
cmp
and
sub
aas
clc
inc
pushf
ja
inc
cmp
mov
mov
or
cmp
push
fwait
cmc
mov
nop
mov
inc
pop
in
push
add
jne
xor
insb
add
aas
jge
lock
cwtl
and
push
jbe
fbld
or
jb
add
test
or
out
mov
or
rcrl
pop
cmpsl
sub
not
mov
sti
lea
movsl
mov
jmp
push
xor
push
rclb
ja
xor
test
dec
ret
dec
add
adc
sub
leave
xchg
pop
negb
cmp
pop
daa
jmp
push
xor
or
mov
lea
push
inc
xor
add
sbb
testl
mov
xchg
lds
and
loopne
pop
pop
mov
pop
incl
add
loopne
pop
roll
lcall
aam
xchg
in
xchg
dec
loope
inc
stc
or
call
sar
fwait
adc
aad
call
sub
or
ds
bound
mov
ss
ljmp
fstps
mov
inc
cmp
and
pop
mov
add
add
and
adc
orl
or
into
or
add
add
add
jge
mov
std
sub
push
mov
repz
repz
hlt
xchg
fucom
aad
push
mov
dec
adc
lods
push
shlb
movsl
mov
push
or
fnstcw
or
test
out
rolb
push
jnp
cmp
push
and
pop
jnp
out
imul
into
xchg
hlt
out
mov
or
data16
jl
mov
jae
mov
in
and
iret
mov
and
xchg
inc
push
push
inc
and
in
rorb
pop
punpckhbw
rcr
imul
dec
movsl
adc
popf
jo
jecxz
int3
sub
inc
push
cmpsl
sbb
dec
pop
jl
pop
xor
sti
sbb
imul
fidivs
push
movsl
jb
dec
push
fistpl
inc
dec
stc
shrb
inc
push
sub
push
loop
push
pushf
or
daa
out
call
cmpsb
out
jge
lcall
jns
bound
or
mov
jbe
mov
pop
pop
lods
pop
popf
xchg
fdivrs
shrl
adc
sub
push
mov
fistpl
jmp
imul
ffree
push
pop
hlt
inc
dec
jle
lods
enter
add
or
push
jmp
jge
inc
mov
dec
shll
dec
test
div
jmp
outsl
jg
insb
test
lock
push
or
or
fs
add
jmp
nop
jbe
lea
push
repnz
dec
pop
cmp
and
jb
shlb
clc
pusha
push
cmc
hlt
rorl
hlt
push
cmp
jg
xchg
orb
xchg
mov
imul
outsl
fildll
aaa
mov
jnp
push
aam
sbb
dec
je
cmpl
aaa
jp
outsl
push
sbb
outsb
dec
js
cmp
sub
and
push
add
and
cmp
out
xor
or
and
adc
cmc
push
add
inc
inc
out
rclb
dec
jmp
pop
cltd
inc
adc
and
sbb
push
xchg
addps
or
jo
cmc
std
push
mov
clc
in
ja
sub
jno
add
mov
ljmp
ror
jle
iret
inc
add
loopne
pop
sbb
les
cmpsl
mov
sub
push
mov
out
mov
adc
mov
roll
fildll
push
pushf
mov
rolb
js
jg
cmp
out
xor
inc
pusha
jno
rcrb
dec
push
adc
cmp
cmpsb
add
shlb
add
call
add
mov
or
dec
and
cmpl
cmp
sbb
dec
lea
cmp
shrl
xor
sub
add
icebp
hlt
cmp
push
lods
dec
cwtl
mov
add
dec
shlb
hlt
mov
pop
sub
or
dec
inc
or
mov
arpl
popa
lds
inc
push
arpl
pop
je
test
cmp
mov
int
adcb
pop
leave
sub
xchg
add
outsb
nop
xchg
out
add
cld
sbb
jnp
loop
sbb
xchg
sti
add
sbb
popf
pop
xchg
out
fs
inc
out
int
dec
add
inc
or
mov
push
clc
or
jecxz
std
movsl
lret
out
or
bound
mull
mov
test
jns
out
inc
dec
push
pop
gs
sbb
insl
add
cmp
mov
xor
je
pop
mov
mov
adc
jae
sbb
inc
adc
inc
mov
pusha
in
pop
outsl
jbe
les
int3
jmp
pop
xchg
lock
adc
sbb
inc
lock
dec
adc
fmull
imul
push
scas
imul
repnz
sahf
xchg
cmpsl
jge
xchg
pop
sahf
mov
mov
push
adc
push
sbb
mov
jl
insb
push
add
dec
shlb
addr16
or
call
push
mov
xchg
add
mov
jo
loop
inc
rclb
int3
roll
outsb
jae
aam
nop
shlb
lret
xchg
sarb
sbb
bound
jle
nop
xor
lahf
inc
adc
add
xor
and
clc
pop
rorb
or
sub
sbb
cmpsb
push
sar
fdivr
jne
fsubrs
add
movsl
popa
mov
push
adc
and
mov
push
in
inc
sbb
hlt
xchg
inc
enter
and
push
pandn
xor
fcomip
nop
out
pusha
add
call
iret
ret
sbb
shl
pmulhuw
hlt
lahf
sbb
add
adc
xlat
sub
and
jno
inc
in
in
cmp
fwait
or
ret
fildl
mov
clc
lock
fs
xor
in
shlb
dec
and
cmp
pop
jb
pop
int3
xor
shrb
dec
into
test
dec
sbb
xor
addb
arpl
inc
dec
cmc
lods
stos
loope
adc
mov
daa
and
push
popa
sbb
mov
std
pop
addl
xchg
jbe
xchg
adc
int3
xchg
inc
loope
mov
rorb
add
or
insb
push
xor
aaa
ret
adc
push
jns
hlt
mov
sub
pop
cld
cld
pop
js
pop
inc
jle
loopne
and
cmpb
rolb
push
inc
mov
or
sbb
daa
mov
mov
xchg
ret
add
js
mov
or
cld
push
pop
add
stos
push
cli
or
imul
push
xor
pushf
nop
mov
mov
popa
jmp
aam
xor
dec
adc
fdivrs
orl
cmc
jp
jmp
mov
xor
or
test
lods
dec
hlt
xchg
mov
xor
lods
push
add
ja
pusha
cmp
jne
ret
rcrl
adc
pop
adc
mov
movsb
push
adc
mov
or
xchg
sbb
cs
or
adc
adc
pop
addps
push
sbb
xor
push
or
or
xchg
xor
ret
xchg
inc
cli
xor
mov
xor
test
xchg
or
inc
int3
mov
or
ret
mov
je
mov
inc
xchg
mov
xor
and
loopne
out
pop
sbbb
or
arpl
and
cmpsl
fdiv
push
pop
fsubrs
cmp
xor
cmp
pop
movsb
lock
movsl
push
cmpb
hlt
fld
cmp
cmc
mov
inc
dec
sub
mov
in
mov
leave
jecxz
fdiv
dec
pop
inc
mov
enter
negb
xchg
mov
add
push
pop
add
or
push
mov
in
lock
insl
cmp
loopne
push
inc
mov
inc
add
push
clc
mov
jnp
bound
add
enter
adc
hlt
ds
adc
nop
andl
or
adc
mov
aam
or
jbe
orl
out
jmp
out
pusha
imul
sbb
mov
fdivrs
jg
and
stos
mov
add
stc
or
and
sub
mov
or
xchg
pop
or
in
sub
ss
adc
call
jb
cld
pop
lock
mov
arpl
or
ror
add
sbb
aad
inc
fwait
or
mov
test
or
add
or
icebp
lock
or
push
cmpb
les
jnp
inc
push
and
push
push
sub
mov
subb
and
ficompl
dec
add
inc
lock
movsb
movsb
add
mov
imul
fs
mov
or
popf
mov
add
insl
mov
cmpl
daa
outsb
and
pop
fildl
sbb
push
sbb
pop
fwait
js
int
sub
js
add
adc
and
cmp
mov
jecxz
add
mov
imul
dec
jae
or
data16
or
sub
pop
test
mov
loope
test
jns
stos
xchg
je
es
movsb
inc
pop
inc
ss
lods
add
dec
xlat
mov
in
cmpsb
imul
rcl
inc
popf
adc
imul
cmp
ficompl
sbb
int3
dec
and
lock
mov
int3
out
adc
es
mov
pusha
xchg
mov
adc
insb
orb
int3
adc
xor
adc
inc
mov
inc
dec
andb
lock
pop
jne
xlat
les
xchg
or
je
testb
shlb
movb
push
sbb
ret
rcll
add
lods
adc
orl
mov
push
inc
enter
cmp
cmp
cmp
aas
sbb
test
sbb
inc
ja
push
mov
test
pop
je
icebp
push
cmp
cmpsl
jmp
dec
inc
add
jge
adc
mov
gs
sbb
adc
pop
sti
cmp
or
hlt
or
sbb
sbb
test
xchg
out
das
call
dec
cmpl
out
inc
mov
ret
add
fnstsw
jge
sub
inc
add
push
out
call
jmp
sub
add
in
push
shlb
cmp
dec
pop
jb
cmp
fisttpl
out
jno
or
xchg
call
xor
mov
jecxz
and
pop
mov
rol
push
xor
or
or
adc
inc
xor
or
xchg
mov
or
clc
aaa
add
xor
call
jb
incb
jl
mov
and
add
rol
stos
adcb
push
fcomps
sub
cmp
adc
or
dec
and
adc
std
xor
pop
mov
adc
pop
aad
mov
aas
xor
popa
aas
push
xchg
insb
xchg
inc
movsb
push
cwtl
sub
add
sub
lcall
and
nopl
push
cmp
fwait
add
or
testb
rclb
lods
add
fsts
outsl
rcrl
add
adc
dec
dec
add
ds
xchg
js
xor
cli
cmp
mov
aam
adc
sbbl
add
and
add
mov
std
enter
mov
or
clc
mov
faddl
push
scas
ret
es
push
adc
xor
sub
or
mov
mov
dec
or
nop
cltd
inc
and
clc
mov
dec
xlat
orl
pop
cmpsl
enter
outsl
mov
in
push
add
ret
flds
xor
mov
lcall
je
sub
ds
fs
adc
dec
push
in
faddl
fwait
mov
jl
and
je
inc
adc
ds
jg
push
adc
movsl
jno
xlat
xchg
mov
push
jl
ss
enter
xor
sbb
or
mov
dec
cli
mov
jg
aaa
xor
sub
or
mov
xchg
sub
xor
out
sbb
cmp
repz
loope
mov
sub
inc
xchg
lods
adc
test
fisubl
mov
and
test
imul
fldt
icebp
cltd
add
or
sbb
faddl
fsubl
pop
adc
sbb
in
or
sbb
xchg
jns
adc
jb
adc
xchg
sub
inc
lahf
rorl
mov
push
scas
test
xor
adc
rcrl
les
arpl
ss
jb
inc
pop
dec
or
fstl
xchg
push
js
dec
or
pop
adc
adcb
hlt
aaa
xor
mov
jmp
xchg
rcl
cs
clc
lock
add
pop
and
adc
push
test
or
shl
lods
dec
das
sbb
adc
mov
and
imul
fiaddl
subw
mov
or
sub
add
and
jmp
pusha
sub
je
mov
and
call
and
adc
adc
dec
sbb
or
fidivs
push
mov
push
icebp
cmpsl
xchg
mov
add
dec
xor
add
hlt
rorl
mov
inc
xor
je
ja
data16
push
dec
sub
dec
cmp
pop
push
inc
and
xlat
lcall
xchg
mov
js
popa
cld
push
push
mov
or
pop
adc
xchg
sarl
es
inc
nop
mov
je
icebp
mov
rolb
xchg
dec
call
je
push
sub
pusha
push
mov
cmp
out
dec
pop
loop
and
popa
arpl
inc
aaa
inc
inc
cs
scas
pop
arpl
push
mov
push
dec
xchg
cmp
xchg
push
add
mov
mov
jge
aad
ret
xor
mov
dec
mov
ret
orl
add
stc
fwait
adc
lock
add
push
cmpsl
and
add
sahf
jno
mov
xlat
push
bnd
hlt
xchg
mov
pop
xchg
dec
push
outsl
hlt
jmp
and
inc
jle
mov
int3
cmp
inc
push
dec
xor
out
ljmp
push
mov
add
pop
aas
adc
nop
mov
outsl
shlb
mov
gs
sbb
and
arpl
lea
pop
dec
stc
cmp
rolb
mov
or
notb
clc
sub
addl
xchg
add
or
adc
pop
jp
mov
rol
ljmp
cltd
jnp
jne
jne
push
add
dec
mov
push
fidivs
arpl
inc
fisttps
dec
mov
add
in
cmp
mov
cs
sub
pusha
xchg
popa
cmp
xor
push
and
sub
popa
inc
xchg
call
sub
loope
pop
jp
dec
sbb
cmp
jl
lea
mov
adc
or
dec
or
mov
push
adcb
lods
cmovp
mov
ret
inc
xchg
sbb
js
ret
pop
movsb
or
mov
dec
nop
xchg
mov
int3
mov
push
inc
lahf
loopne
lahf
loop
pop
pop
mov
pop
add
push
nop
cli
push
das
outsl
xchg
cmp
jle
and
rol
push
mov
push
jnp
lods
cld
pop
jmp
sbb
jecxz
xchg
insl
xchg
mov
and
and
clc
stos
lock
js
push
mov
sub
shll
adc
adc
and
stos
adc
adc
inc
or
jnp
sbb
cmp
and
iret
rolb
cltd
aas
bound
xor
inc
call
jge
cmp
jg
mov
dec
cmp
inc
xlat
roll
lret
loope
mov
jbe
aas
lock
add
jmp
xchg
xor
or
sbb
jns
repz
and
dec
fdivrs
push
pop
loope
shll
test
inc
dec
jne
fucomip
adc
cmpsb
adc
les
xor
sub
xlat
and
jnp
sbb
lods
inc
or
inc
dec
inc
push
or
and
dec
pop
or
lods
arpl
xor
and
out
and
repz
ret
add
add
or
mov
sub
shlb
adc
sbb
and
scas
movsb
sbb
inc
inc
and
push
pop
pop
scas
mov
mov
pop
jge
mov
or
mov
test
xchg
sub
adc
or
sbb
mov
insb
add
adc
dec
mov
bound
or
and
and
pop
adc
orl
jge
out
cmpsb
cmp
cld
adc
sub
call
sbb
fdivs
das
in
add
xor
mov
xlat
sub
jbe
int
push
dec
lret
shrl
cld
in
in
pop
mov
dec
rol
xor
sbb
addr16
push
push
test
inc
push
insb
outsb
cmp
movl
and
sbb
hlt
rolb
dec
sub
stc
adc
inc
push
inc
xor
arpl
mov
gs
mov
mov
insl
addr16
jne
pusha
push
cmp
jp
push
fistps
nop
int3
lahf
aaa
dec
mov
aaa
pop
pop
pop
les
inc
inc
ds
cltd
shrl
inc
je
dec
push
pop
sbb
dec
and
movsl
mov
out
inc
inc
xor
sub
mov
jecxz
stos
jo
movsb
sub
fcmovb
inc
jecxz
mov
inc
sub
sarl
dec
insb
or
and
sbb
xchg
xor
test
pop
or
in
or
popa
mov
and
mov
ret
or
roll
sbb
movsb
mov
stc
xlat
imul
inc
mov
test
or
jno
ret
jns
mov
hlt
mov
adc
fcomps
mov
dec
jne
lds
and
ja
fwait
adc
andb
adc
enter
lock
stos
jl
and
add
add
inc
lret
xor
push
xchg
push
or
lock
xor
and
and
icebp
orb
pop
cmc
mov
mov
adc
adc
add
pop
lock
and
mov
into
insl
icebp
in
mov
movl
and
in
push
inc
cmp
lret
or
sbb
loop
sbbb
sbb
cmovg
mov
sbb
jne
loopne
sti
jg
cmpsb
add
mov
adc
mov
rcrb
jne
push
cmpsb
lock
rcrb
xor
mov
aaa
pushf
jne
or
sub
stos
mov
fcomp
lea
cmp
add
adc
fcompl
sti
and
addr16
and
fadds
rcrl
mov
mov
pop
addl
sbb
pop
push
jp
ret
sub
xchg
push
adc
push
or
pop
or
mov
sbb
inc
cmp
loopne
sub
jae
or
mov
inc
sahf
ret
mov
xchg
lods
or
xchg
push
add
pop
jg
add
and
leave
dec
fsubs
or
xor
sub
repnz
aaa
lods
cmp
and
mov
inc
adc
arpl
or
sbb
fstps
dec
or
add
lea
mov
add
push
sbb
inc
popa
xchg
lahf
sbb
inc
fisubs
enter
lea
dec
and
lret
or
xor
mov
push
mov
add
adc
pop
call
xorl
ja
nop
mov
movsb
lea
push
rcll
js
orl
adc
add
lea
mov
add
pop
fistpll
out
jecxz
sub
dec
inc
pop
or
add
dec
rol
negb
mov
or
adc
or
je
mov
idivl
xor
mov
pop
inc
push
or
lods
outsb
xchg
pop
adc
and
add
mov
or
and
jns
jmp
jo
or
inc
scas
pop
push
sbb
mov
pop
aam
adc
iret
dec
jne
pop
pop
icebp
push
cmp
rol
mov
jg
imul
lea
cmp
dec
inc
add
mov
inc
mov
test
je
add
out
dec
sbb
in
dec
mov
aam
out
xor
scas
jb
cmp
andb
mov
add
shll
fisubrs
lea
mov
mov
or
sbb
andb
scas
push
call
push
jb
push
out
add
inc
xchg
mov
pop
mov
in
pop
xchg
call
adc
test
addl
mov
mov
je
sbb
inc
pop
push
mov
push
in
int
call
movsl
or
push
push
mov
add
hlt
adc
and
rolb
lods
rol
push
cld
mov
mov
add
pop
push
cld
push
hlt
lods
mov
stos
nop
cmp
adc
cmp
inc
jle
dec
mov
pop
inc
jo
pusha
sub
lcall
mov
popf
fs
add
ret
inc
mov
jbe
push
adc
in
mov
mov
lds
test
movsb
mov
cmp
and
pop
xor
add
imull
xchg
aas
pusha
sub
imul
and
das
xchg
inc
xchg
xlat
xchg
mov
ss
ds
out
dec
jl
pop
add
sub
jbe
mov
in
das
push
aas
adc
inc
mov
outsb
inc
push
fs
es
cmovbe
sub
pop
add
lcall
mov
inc
fistps
imul
xchg
leave
mov
es
icebp
cs
pop
adc
push
add
xor
xor
ja
dec
cmp
inc
xor
test
or
inc
bound
xchg
ss
push
push
imul
dec
dec
push
cmp
cli
jl
iret
xbegin
push
adc
loopne
lea
imul
sbb
mov
mov
sub
fsubrs
add
shll
inc
mov
sbb
mov
mov
dec
popl
pop
add
imul
sub
push
xlat
sub
imul
or
push
ja
call
jae
or
push
jbe
inc
or
test
adc
lods
or
jecxz
and
jne
dec
subl
rclb
pop
insl
mov
ret
cs
sub
dec
pop
cmpsl
mov
mov
clc
outsl
rol
in
cwtl
bswap
les
jmp
cmp
or
jae
rcll
fs
push
int
or
mov
movsb
enter
sub
aaa
inc
or
cmovl
dec
fists
xchg
stc
les
xor
fiaddl
add
mov
xchg
test
cmp
hlt
push
mov
test
pop
pusha
das
adc
mov
sub
cwtl
pop
mov
push
push
xchg
fidivrs
jns
push
push
subl
lock
push
mov
jns
xchg
jmp
movb
and
or
cli
push
test
adc
or
jecxz
lea
mov
leave
cmpsb
nop
or
and
or
pop
mov
jne
inc
or
jl
push
sub
nop
das
pop
dec
stos
add
push
ja
xor
lahf
mov
jo
add
test
and
push
xchg
pushf
ja
addb
lar
cwtl
jl
enter
jae
sbb
nop
xchg
mov
pop
inc
loop
xlat
or
mov
mov
adc
arpl
es
or
movsb
mov
jne
dec
jg
or
add
pop
ret
push
fcoms
pop
sbb
in
sub
test
loop
bound
cmp
and
push
cmp
push
repnz
dec
push
sbb
mov
xor
cli
shlb
cmp
jne
mov
jl
mov
ljmp
jl
inc
out
inc
xor
push
sbb
pop
fistl
lods
rcll
ret
mov
ficomps
sbb
popa
mov
mov
jb
popa
ljmp
inc
ds
pop
call
lods
jne
or
rorb
lret
testl
adc
adc
scas
test
push
data16
add
cmp
repnz
hlt
outsl
outsl
sbb
jmp
test
mov
neg
sbb
out
add
loope
and
xor
pop
mov
jmp
sbb
add
scas
pop
adc
and
pop
cmpl
cmp
jae
sub
orl
scas
lods
mov
les
xor
ret
das
fcomps
popa
int3
sub
das
lods
mov
jle
jae
enter
adc
jmp
sti
ret
cmp
push
mov
add
jb
mov
mov
mov
loope
lret
pop
daa
cmpl
pop
xchg
stos
mov
inc
outsb
xchg
sub
call
nop
sub
das
jno
dec
jl
push
mov
add
pop
sbb
push
scas
push
scas
dec
dec
lock
leave
lock
pop
sub
pop
das
lods
or
outsl
adc
cvtps2pi
jg
or
popf
aaa
mov
add
push
ss
mov
mov
movsb
jmp
ds
push
mov
add
inc
notl
outsl
inc
dec
je
sub
orb
xchg
add
push
xchg
jle
shrb
add
clc
dec
add
add
in
pop
cmp
inc
or
or
adc
and
out
fimull
adc
pop
push
or
pop
and
adc
sbb
int
iret
add
fistps
push
fwait
inc
xchg
and
pop
fcomps
cmp
cwtl
jb
add
pop
lea
adc
dec
fcoml
aam
loopne
fwait
lahf
cmp
and
mov
jb
or
rolb
js
mov
xor
cltd
mov
push
cmp
sub
pop
dec
ret
stc
inc
cmp
mov
cmc
add
adc
hlt
inc
add
add
dec
stos
or
sbb
and
int3
mov
sbb
sahf
adc
fbld
out
or
add
or
fistpll
and
add
pop
xor
decb
icebp
or
push
push
fwait
sbb
sbb
mov
or
sub
arpl
xor
pause
dec
jmp
in
pushf
adc
pop
inc
mov
sub
fists
shrb
or
or
seta
push
rcrl
sbb
dec
hlt
scas
sbbl
mov
pop
loopne
repnz
xorb
imul
or
adc
test
push
mov
pop
xor
shlb
jne
or
cs
jb
sahf
and
xor
stos
xlat
inc
sub
cwtl
add
lods
stos
lret
sbb
fsub
mov
and
or
ret
cmp
sub
jns
dec
neg
aam
mov
push
adc
insb
pushf
and
mov
push
xchg
cmp
adc
stos
xor
mov
mov
push
mov
in
push
and
mov
fstpl
dec
iret
out
xchg
inc
rolb
inc
jl
push
mov
scas
loopne
arpl
nop
sub
jne
sub
shl
loope
inc
imul
xor
or
sub
gs
adc
fadd
dec
mov
call
sub
add
sahf
lret
rcll
mov
arpl
push
shll
push
inc
popf
mov
push
dec
andl
popa
or
mov
out
jp
or
es
push
dec
adc
sti
mov
jnp
imul
xor
es
push
iret
add
loopne
fcoms
pop
add
push
xor
inc
pop
pushf
imul
mov
nop
es
dec
dec
cmp
nop
xchg
nop
nop
mov
mov
add
xor
lds
scas
bound
push
decl
cltd
and
call
adc
sahf
pop
mov
outsl
lock
mov
or
enter
and
rcl
fsubs
and
and
loopne
call
in
lock
clc
int3
and
cld
add
add
or
adc
mov
sub
xor
mov
dec
mov
pop
mov
push
insb
jo
js
bound
mov
sub
and
aad
xchg
addr16
mov
mov
nop
jnp
pop
sub
fdivp
xor
sub
mov
aam
and
test
in
in
xchg
enter
sub
fs
push
movsb
xor
fdivrs
xlat
and
xlat
lret
and
and
jo
push
movsb
xor
mov
test
nop
lret
sar
xchg
push
cs
sbb
cld
cmp
add
cmp
and
js
dec
gs
or
lods
adc
push
push
movsb
xor
sbb
int
and
adcb
and
push
sbb
mov
xor
xor
push
mov
xor
gs
sub
jo
add
mov
movsb
xor
dec
aam
leave
lret
lock
or
push
push
movsb
jb
sub
nop
lret
xchg
fs
sub
push
shrb
mov
shlb
imul
push
repnz
xlat
xchg
inc
pushl
leave
call
aaa
mov
insb
xchg
push
cmp
lahf
dec
bound
cli
add
popa
fisubs
push
inc
outsl
xchg
scas
mov
push
jb
ja
inc
test
js
into
xor
fcmovb
pop
in
sub
gs
add
or
mov
in
or
arpl
mov
aad
jae
fists
and
jbe
push
xchg
inc
pop
loope
or
mov
sub
dec
jae
mov
jnp
dec
lcall
aas
pop
push
fsubrs
dec
pop
mov
or
adc
inc
cs
gs
jnp
orl
ja
scas
mov
pop
out
outsb
jb
aaa
pop
push
or
mov
fidivl
xchg
aaa
fimull
mov
xor
adc
pop
inc
jne,pn
push
shr
mov
outsl
xor
push
push
mov
jecxz
adc
fcoml
shll
ds
ret
adc
faddp
lds
push
dec
inc
lahf
fists
mov
popa
adc
mov
jb
movsl
loop
mov
inc
push
into
jae
fidivrs
addb
jne
push
bound
imul
jg
add
fcmovnbe
cs
cmpsb
pop
inc
jg
jbe
shr
fnsave
and
inc
cmpsl
mov
xlat
dec
jmp
lods
add
mov
pusha
or
xorps
mov
pop
pop
imul
inc
scas
in
cmp
mov
lret
dec
imul
out
arpl
addr16
add
inc
arpl
pop
add
pop
arpl
andb
cmp
mov
push
adc
test
or
sbb
add
cmp
sub
push
push
rorl
mov
or
jg
out
shrb
mov
xor
movsb
pop
movsb
shl
mov
mov
add
mov
roll
mov
test
pop
inc
shll
int
or
inc
and
push
sbb
dec
aam
add
push
jl
aaa
pop
or
notb
js
cmp
arpl
leave
mov
loopne
in
repnz
sub
jb
cmp
or
add
nop
push
cmp
xor
dec
lret
mov
fwait
dec
testl
mov
push
push
jae
dec
icebp
mov
push
inc
xchg
and
mov
add
aad
adc
sub
addr16
nop
pusha
sti
ja
xchg
and
add
jo
dec
lret
xchg
test
mov
insb
or
scas
mov
sub
inc
pop
outsl
sti
inc
imul
sub
outsb
jb
fwait
testb
add
pop
int3
or
loope
shrl
rcl
jno
scas
ret
sti
mov
das
push
push
fstpt
mov
sbb
or
and
repnz
frstor
inc
add
xor
push
or
or
loop
dec
es
or
aaa
fmuls
out
punpckhwd
mov
xor
add
push
inc
add
or
or
shl
or
xchg
mov
outsl
idiv
xor
cld
mov
pop
rcll
mov
test
dec
jns
cmp
inc
mov
out
outsl
or
in
sub
push
add
fistl
outsb
adc
mov
push
imul
jnp
or
ss
pop
lods
dec
fstpt
xor
in
imul
inc
ret
les
in
add
fisttpl
or
dec
inc
cltd
icebp
sbb
xchg
cmp
add
mov
iret
pop
pop
inc
sbb
dec
add
adc
or
sbb
mov
iret
pop
cmp
push
or
fdivl
dec
shlb
fsubrs
add
in
fcoml
addr16
jbe
mov
dec
fcomp
xor
fists
hlt
loop
lock
in
fsts
xlat
fidivl
out
jbe
fstpt
jo
fsubs
fnsetpm(287
fcoms
cmp
add
push
movsl
ljmp
mov
xlat
or
cmp
push
sti
push
fidivrs
cmpsl
push
or
sbb
es
push
lret
negl
jecxz
ss
push
shlb
sahf
pop
inc
sbb
ljmp
fisubrs
and
out
gs
pop
lcall
xlat
popf
rolb
stc
lcall
outsb
xor
dec
loop
push
inc
mov
movsl
leave
aam
or
xor
mov
stc
dec
and
pop
and
sub
fdivrs
xlat
push
int3
push
pop
into
es
push
adc
pop
adc
mov
add
shlb
cmpsl
push
xor
adc
lcall
push
sbb
inc
cmp
repnz
aam
inc
fsubrl
cmp
sbb
xchg
xchg
jno
adc
inc
loope
pop
and
lods
add
in
jns
sub
ficoml
popf
jns
xor
dec
fstpt
adc
mov
sbb
and
jo
inc
sahf
pushf
rolb
fidivrs
push
sahf
xchg
or
push
loope
js
fcmovnu
faddp
push
adc
insb
xchg
mov
dec
add
test
pop
add
add
add
pop
outsb
inc
dec
add
push
sbb
sub
mov
outsl
ja
pop
in
sbb
mov
loopne
lods
or
adc
xlat
mov
or
sub
pop
mul
movsb
invd
mov
and
mov
mov
pop
fisttps
push
dec
inc
scas
xor
je
ret
push
lcall
outsl
dec
imul
xor
inc
push
adc
or
outsl
jo
arpl
add
sbb
mov
sbbl
mov
aas
add
xchg
sbb
mov
add
sub
jmp
xchg
adc
and
or
clc
push
sub
inc
jae
ret
das
stos
js
lds
cmp
scas
push
outsl
dec
dec
or
mov
and
out
lcall
popa
jb
push
mov
test
or
inc
push
and
js
or
sbb
ss
repnz
popf
mov
cli
push
idivl
hlt
addr16
sbb
pop
addr16
dec
and
adc
repz
mov
push
sahf
push
or
cmp
mov
lock
dec
in
and
or
xlat
nop
pop
lret
bound
mov
or
pop
adc
inc
or
inc
stos
incl
and
vprotw
bound
cmpsb
lcall
dec
loopne
ret
das
decb
mov
push
and
jbe
add
divl
movl
cwtl
pop
mov
or
jnp
loopne
je
lock
outsl
push
imul
adc
push
loopne
loopne
or
leave
push
mov
xchg
call
adc
mov
imul
mov
jecxz
inc
dec
nop
jne
xchg
clc
mov
add
jb
dec
inc
fcmovnu
mov
dec
mov
cld
imul
les
inc
mov
adc
jecxz
add
mov
and
xor
out
fists
add
adc
or
movsl
add
inc
pop
pop
adcb
mov
and
cs
add
loop
lret
imul
jl
or
jnp
xchg
mov
pop
nop
movsl
hlt
loop
xchg
pop
or
pop
fbstp
test
add
sbb
ret
fldcw
mov
add
pop
mov
or
jp
rorb
adc
mov
and
arpl
enter
sbb
xor
pop
stc
adc
adc
mov
pusha
sti
push
das
subl
out
mov
sub
mov
xchg
add
pop
dec
adc
xchg
inc
dec
test
mov
xchg
sbb
push
and
ret
add
enter
daa
inc
inc
vmwrite
mov
mov
add
xchg
cltd
dec
push
out
jl
xchg
mov
ret
pop
in
call
test
scas
and
mov
jmp
mov
out
in
adc
fstpt
push
cld
jnp
scas
push
adc
cmp
clc
divl
rcl
addr16
adc
mov
add
lret
lea
mov
or
pusha
and
add
sbb
es
push
jmp
pop
stos
sub
fsubr
dec
stos
sub
bound
js
dec
pop
xchg
mov
loopne
pop
decl
jne
addl
mov
mov
into
fmuls
xchg
push
mov
or
int3
adc
cmp
loopne
out
jmp
in
sbb
fcmovnbe
and
in
add
popf
sub
out
adc
pop
rcrl
add
add
scas
test
inc
in
inc
push
add
nop
xor
cmpsb
cmp
lret
sbb
cmp
add
sbb
repnz
out
xor
jne
enter
jg
push
mov
add
repz
cmpsb
push
mov
adc
cli
cld
sbb
push
inc
cs
jmp
inc
push
out
dec
sbb
insb
and
inc
shr
cmp
add
jns
out
sub
adcl
push
aas
jmp
xor
sbb
arpl
xor
cmp
add
cmovle
scas
out
add
inc
pop
gs
xchg
or
int3
int3
mov
js
imul
icebp
push
loope,pn
dec
dec
sbb
dec
pop
dec
ss
push
daa
sahf
xor
inc
mov
ds
js
xor
dec
lea
cmpsb
loopne
pop
fsubs
mov
outsl
hlt
mov
and
jmp
mov
mov
ds
insb
mov
inc
jne
fsubrs
adc
dec
dec
adc
or
jl
push
xor
xor
xchg
xor
test
sbb
fs
mov
dec
test
daa
fucomip
jg
mov
mov
shll
rol
test
dec
ja
aad
fdivl
cmp
mov
fsubs
xor
or
mov
nop
popa
fldl
aad
iret
int3
xor
xor
pop
sub
ljmp
dec
pop
mov
test
pop
mov
push
push
aas
es
sub
icebp
mov
push
idivb
lret
stos
sarb
ret
sbb
and
pushf
add
jb
pop
aam
nop
outsb
hlt
cmp
xchg
loopne
in
inc
inc
jnp
mov
sbb
add
mov
add
sbbl
out
rcrb
pop
shll
das
arpl
add
popf
adc
inc
sbb
pop
hlt
mov
outsl
jns
dec
and
addl
mov
adc
inc
in
or
adc
pop
leave
ja
hlt
mov
dec
mov
dec
dec
pop
push
in
shll
or
xor
xor
popl
lods
lahf
mov
push
lods
dec
stc
idivl
or
js
add
aaa
jge
outsb
mov
nop
movb
je
and
pushf
adc
sub
push
test
jg
jmp
std
xor
mov
jmp
icebp
lret
mov
rcll
jmp
jmp
aaa
shlb
and
mov
arpl
cmc
arpl
sbb
adc
or
out
add
out
jecxz
hlt
xchg
cs
rcll
loopne
pusha
fidivl
pop
fisttpll
repz
in
popf
inc
fs
dec
sub
adc
cmpsb
out
inc
mov
roll
add
icebp
pop
inc
xor
mov
test
adc
lea
mov
dec
push
test
or
decl
popl
dec
pop
cltd
dec
sahf
adc
data16
je
movl
out
mov
lock
push
inc
bound
push
ja
aaa
stos
or
mov
xor
call
and
mov
sbb
lock
dec
push
sbb
shr
and
scas
inc
std
shlb
fldl
push
mov
inc
xor
or
inc
fstpl
and
sbb
in
lods
cmpsl
xor
f2xm1
leave
and
lock
in
jns
lret
lret
inc
sbb
xchg
lock
lock
mov
push
in
sub
or
inc
inc
ds
insl
inc
mov
rorl
cmp
icebp
pop
out
inc
sbb
and
in
lldt
dec
jmp
out
dec
and
lahf
in
icebp
test
mov
mov
mov
test
outsl
aad
push
in
cmp
dec
mov
stos
in
or
inc
dec
ffreep
sub
test
repnz
clc
aas
mov
mov
cltd
aas
cs
dec
xchg
test
xchg
xchg
loopne
popa
jecxz
repz
inc
sbb
sub
ret
pop
dec
push
inc
or
enter
push
inc
push
jmp
movsb
xchg
xorl
mov
adc
pop
ret
xchg
xchg
mov
push
sub
lret
cmc
sbb
push
fwait
or
push
push
pop
ljmp
add
mov
xor
outsl
pop
adc
pop
mov
addr16
cmp
mov
xchg
hlt
mov
push
jmp
or
enter
mov
movsb
mov
dec
push
dec
push
fldenv
clc
in
cmp
fcmovb
insl
lcall
cld
outsl
loope
jno
mov
jp
test
je
jle
cmpb
jae
mov
movsb
sbb
or
mov
pop
aas
rol
and
movsl
mov
pop
out
aam
inc
mov
dec
call
testl
or
add
xorb
mov
cmc
add
mov
jl
adc
inc
inc
outsl
les
adc
adc
notl
movsl
and
notb
mov
jmp
add
lods
aaa
data16
push
or
mov
jb
je
insb
jecxz
mov
adc
xor
rorb
pushf
aaa
mov
dec
push
ret
mov
and
adc
lcall
fmuls
test
out
movsl
repnz
cmovno
negb
pop
push
inc
nop/reserved
jmp
mov
or
jbe
fidivrl
outsb
enter
or
mov
add
push
pop
inc
add
add
popa
xor
jg
jg
adc
inc
jae
pop
insl
lea
test
mov
dec
mov
lcall
dec
call
lods
cmc
daa
clc
inc
fidivrl
stc
jmp
adc
ljmp
int3
inc
sbb
rclb
out
test
sub
insb
or
pop
or
dec
mov
mov
add
push
imul
adc
movsb
cmp
xor
mov
pop
lock
jl
or
dec
inc
or
inc
bound
inc
or
out
sahf
cmpsb
bound
xlat
cld
jne
rol
dec
dec
xor
stc
dec
frstor
pop
movsb
outsb
cmp
inc
sbb
pusha
cmpl
jb
pop
sbb
dec
xor
mov
dec
mov
sarb
or
xchg
insl
cld
pop
loopne
xchg
push
lea
pop
es
xor
clc
lahf
ds
add
mov
xorb
fucomip
push
push
pop
push
inc
decb
push
out
or
daa
add
shll
test
dec
inc
sub
leave
or
inc
push
jns
add
mov
in
movsb
push
lods
lods
dec
inc
test
cld
rcrl
cs
or
push
pop
pop
ffreep
jnp
cmp
pop
in
inc
pop
pop
mov
cmp
mov
jne
sbb
inc
in
fdivr
and
ret
xchg
test
add
or
ja
mov
and
in
or
pop
sbb
lods
clc
push
xor
pop
jnp
ss
sub
xchg
push
and
les
mov
mov
adc
cmp
pop
adc
add
movsl
lds
pop
pop
push
sub
cld
sbb
popf
mov
fcoms
xor
adc
repnz
sahf
lret
mov
clc
sub
stc
lods
push
cli
or
cmp
inc
lock
push
sub
push
test
ds
loope
cli
data16
inc
ret
nop
enter
je
or
gs
pushf
pushf
pushf
push
pushf
pushf
pushf
insb
insl
outsb
outsl
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
xor
xor
pushf
pushf
pushf
pushf
xor
ss
pushf
pushf
pushf
pushf
cmp
cmp
pushf
pushf
pushf
pushf
cmp
ds
pushf
pushf
pushf
pushf
and
and
pushf
pushf
pushf
pushf
and
es
dec
adc
das
push
shrb
add
sbb
mov
aas
push
das
or
adc
ds
push
aas
sub
in
loope
int
pop
ja
push
pop
or
lea
sbb
loop
cmp
aam
inc
jbe,pn
jnp
fcomps
fadd
and
xor
add
notl
jb
push
arpl
xor
xchg
dec
cmp
sbb
mov
sti
inc
mov
add
cs
sub
adc
cmp
cmpsl
adc
or
clc
jnp
jns
sub
mov
pop
xor
push
push
popa
fwait
getsec
pop
cmp
or
pusha
ss
cs
mov
add
or
dec
inc
fs
cmpsl
and
mull
pop
pop
sub
popf
lret
rol
fisubrs
sub
clc
sbb
in
add
stc
inc
inc
mov
ss
push
add
pushf
mov
add
test
cmpsl
mov
mov
or
imul
adc
add
add
mov
arpl
xchg
imul
repnz
and
mov
mov
mov
pop
inc
add
pop
test
add
jnp
in
pop
push
in
push
adc
mov
sub
push
and
mov
test
incl
dec
jo
insl
push
clc
mov
or
mov
jno
add
sbb
imul
fwait
sar
add
jnp
ss
imul
lea
insl
sbb
inc
xchg
dec
loop
xor
sbb
pop
xchg
out
xor
and
in
pop
test
nop
fwait
movsl
test
mov
leave
leave
leave
enter
test
in
fs
pop
jo
out
jb
repnz
popa
mov
cmp
sbb
or
jecxz
pushf
mov
dec
dec
inc
sahf
and
push
nop
shll
daa
and
or
xchg
notl
or
enter
push
popf
jecxz
in
in
mov
jb
dec
cltd
or
push
push
pop
loop
sub
outsb
push
pop
or
mov
lret
mov
dec
mov
lret
mov
sub
fmuls
jbe
lods
shlb
ss
dec
add
or
cs
mov
mov
mov
inc
sbb
mov
jbe
xor
inc
jae
add
insb
xchg
dec
jns
roll
cmpsb
or
sbb
xchg
xor
icebp
cs
inc
pushf
inc
or
stc
or
jo
inc
sub
add
mov
movl
fdivrl
jnp
pop
cs
ss
jnp
or
sbb
mov
add
cmp
jae
inc
and
test
inc
in
popf
or
popf
jnp
sub
shrl
into
lods
mov
adc
gs
dec
inc
hlt
hlt
inc
inc
js
jae
inc
xor
cmc
add
rcrb
mov
mov
imul
mov
sti
adc
dec
insb
outsl
xchg
add
push
aas
nop
orl
inc
and
xchg
inc
cmp
push
popaw
outsb
insl
jg
adc
xchg
mov
dec
add
inc
add
xchg
mov
test
mov
addr16
shlb
mov
pop
mov
pusha
packssdw
addr16
mov
push
imul
add
push
jae
orb
lea
xchg
idivl
push
in
adc
pop
sub
adcb
stos
cwtl
add
xchg
andb
test
mov
pop
mov
pop
inc
mov
orl
pop
push
dec
inc
jecxz
outsb
leave
pop
inc
add
pop
inc
xor
ret
or
arpl
cmp
jmp
xchg
push
push
lods
insl
pusha
xor
shll
jno
or
std
jle
or
add
and
sbb
fldenv
mov
imul
imul
test
andnps
lods
inc
jle
cmp
mov
pop
or
lock
rcrl
add
add
xchg
inc
mov
cmc
js
adc
mov
es
mov
pushf
mov
ficoml
mov
out
in
inc
lret
in
adc
aam
mov
xlat
inc
lea
or
and
xchg
pop
mov
enter
mov
sbb
sbbb
shrb
popa
imul
or
mov
imul
loope
or
xchg
sbb
mov
xchg
add
or
pop
rolb
cwtl
ds
pop
and
or
clc
add
lods
adc
mov
dec
pusha
cmp
sbb
cmpsl
mov
scas
notl
jno
pop
xor
nop
icebp
cmp
adc
dec
mov
pop
mov
sbb
fidivrl
push
push
push
adc
adc
sbb
ss
mov
cmp
enter
dec
sbb
mov
adc
aas
in
ficoml
add
jmp
add
fiadds
add
xchg
mov
jnp
lret
jl
inc
dec
or
adc
push
sbb
cmpsl
add
aam
xor
or
test
testb
out
inc
or
or
je
or
fs
add
xchg
and
xorl
cmp
inc
sbb
cli
or
lret
push
pop
push
stc
pop
mov
push
mov
cmp
mov
daa
gs
and
aaa
add
inc
dec
lods
aaa
inc
or
cmpsl
test
or
adc
or
jns
xor
inc
rolb
mov
adc
xchg
mov
and
fldt
push
push
cmpb
add
inc
or
aas
cwtl
rcll
addl
mov
cmp
addr16
imul
test
cli
xor
and
inc
insl
jne
mov
push
cmp
cmpb
mov
scas
xor
outsb
mov
test
add
add
mov
or
pop
arpl
mov
sbb
or
sbb
jg
ds
test
cs
pop
jmp
or
jae
cmp
add
sub
insb
in
int
adc
or
movl
jno
fwait
add
lods
inc
or
fcoml
mov
mov
sahf
lods
jne
jo
je
cmp
fists
out
sub
add
mov
inc
push
sbb
push
orl
mov
inc
ret
dec
push
inc
ss
jbe
xchg
pop
shlb
or
pusha
inc
adc
fidivrs
ficoms
push
inc
cs
push
push
ss
cmpsb
loopne
jg
push
inc
scas
sbb
es
addr16
inc
or
notb
and
add
lahf
push
ja
notb
adc
nop
or
nop
mov
push
xor
scas
or
aam
dec
loopne
or
scas
sbb
ret
into
fwait
xor
adc
mov
shlb
pop
cmpsl
or
lods
andb
mov
icebp
cmp
push
inc
lcall
or
aad
cmpsl
ljmp
test
inc
dec
cmpl
push
or
pop
imul
mov
sbb
mov
xor
in
movsb
mov
shlb
sub
movsl
jp
cli
pusha
repz
inc
dec
add
divl
add
add
cltd
and
sub
add
aaa
push
inc
push
ret
dec
inc
test
test
cld
sbb
sub
inc
sub
int
lcall
ret
test
in
sti
in
jl
fnstenv
movsl
cs
sub
dec
rcll
mov
pushf
fbld
inc
lock
cltd
add
es
lods
mov
mov
xchg
sahf
gs
push
xchg
subl
pop
cmp
sub
fimull
sbb
add
jo
imul
pusha
adc
sbb
sub
adc
pop
mov
push
xchg
aas
enter
in
test
push
call
adc
shrb
inc
xchg
pop
jp
jle
test
push
rol
add
add
je
movsl
or
inc
xor
sahf
imul
dec
test
sbb
data16
add
add
mov
gs
inc
and
repz
mov
jne
xchg
xchg
or
lods
insl
sub
out
gs
pop
andl
mov
mov
jecxz
xor
data16
pusha
lret
je
sbb
sti
add
or
cmc
lea
fisttpll
push
dec
imul
sbb
insb
or
jae
xchg
cs
or
sub
jl
dec
pop
paddsw
inc
addr16
nop
iret
push
push
xchg
xor
add
cmc
xchg
dec
push
pop
sbb
pop
insl
add
sti
add
mov
add
fiaddl
outsl
mov
add
or
add
mov
filds
pop
test
outsl
push
jo
jae
add
in
outsl
je
sbb
or
push
inc
pop
add
or
outsb
int3
les
inc
test
sbb
mov
rclb
inc
je
pusha
mov
pop
or
push
adc
imul
mov
or
push
push
pop
add
fildll
outsl
jo
je
fidivs
pop
or
adc
insl
dec
mov
mov
sbb
sbb
adc
xor
iret
gs
adc
loopne
mov
or
adc
and
movsb
lds
add
add
cmp
mov
mov
add
jl,pt
in
or
or
xor
pop
cmp
inc
jb
dec
mov
and
add
fcomp
or
dec
mov
jp
fimuls
sbb
add
adc
inc
cs
addr16
inc
outsl
adc
jae
jb
jae
es
adc
decb
or
add
lods
scas
call
pop
add
push
test
cmp
int
add
and
dec
scas
test
scas
adc
add
scas
mov
sbb
shlb
das
pushf
xor
movsb
movsb
xor
imul
popf
mov
mov
add
sahf
cmpsb
pop
xchg
sbb
pop
xchg
inc
fs
pop
jnp
insb
push
mov
add
loopne
sub
add
jnp
or
andb
es
adc
pusha
ds
and
bound
add
add
jge
and
adc
jo
mov
pusha
imul
xor
adc
pop
push
and
adcb
adc
popa
inc
pop
jge
inc
xchg
arpl
inc
or
xchg
cmpsl
pusha
cmpsl
imul
pop
out
xlat
pop
mov
repnz
or
pop
or
adc
pop
adc
shlb
pop
loopne
xor
ret
adc
xor
bound
js
dec
sub
mov
and
popa
add
xchg
xor
pop
test
xchg
push
cwtl
and
push
cmpsb
push
in
das
or
sub
or
mov
sarb
push
mov
push
xorl
pop
ds
jnp
push
inc
inc
cmpsl
push
pop
inc
push
inc
xchg
push
fs
lret
dec
js,pt
subl
jns
mov
pop
xor
adc
rorb
bound
aaa
push
or
push
outsb
movsl
jae
sbb
mov
rol
test
cmp
mov
scas
pop
je
cmp
in
or
shll
ret
push
jns
pop
das
cmc
mov
mov
iret
dec
cmpxchg
mov
jmp
fisttpl
imul
outsl
es
xor
jno
rolb
xchg
add
ret
leave
mov
sbb
mov
mov
out
add
dec
sbb
pusha
pop
rcl
enter
jl
cs
sahf
cltd
push
or
xor
mov
notb
mov
fwait
push
inc
in
mov
mov
test
loope
bound
jbe
adc
xchg
mov
pop
rorl
add
sub
push
es
shll
xor
clc
ret
push
das
add
xchg
enter
pushf
pop
push
sub
sub
rorl
sahf
sbb
jp
sub
sbb
cs
lcall
cmp
bound
pop
daa
test
jl
xchg
lahf
push
mov
ljmp
popa
add
add
fsubl
xor
cmp
jns
popf
fdivrs
loopne
jne
in
and
push
imul
inc
jl
xchg
jecxz
sub
or
mov
mov
out
outsb
mov
mov
sub
hlt
das
adc
icebp
push
sbb
in
in
mov
sbb
pop
sub
jb
sub
jle
or
pushf
sub
dec
ss
pusha
rolb
jno
sar
pop
and
repz
pop
xorb
cmpsl
and
movsb
pop
repz
adc
loopne
add
pop
insb
pushf
sbb
add
adc
xor
addr16
dec
mov
out
add
nop
fs
mov
inc
ja
insl
or
add
jne
add
ljmp
xchg
mov
push
inc
popa
or
and
dec
adc
inc
lcall
lret
push
scas
or
dec
pop
or
mull
adc
insb
addb
mov
stc
faddl
lods
aaa
sbb
adc
cmp
push
cmpsl
jg
sub
outsl
subb
mov
inc
push
aad
xchg
subb
ror
inc
xor
adc
hlt
or
or
faddp
lods
and
arpl
es
push
inc
mov
adc
xchg
dec
lods
scas
adc
add
jo
jae
sbb
aaa
in
or
sbb
imul
leave
add
jg
popa
jne
negb
push
and
push
jo
cmp
dec
outsl
inc
orb
in
pop
loope
addl
xchg
xchg
or
mov
jge
stos
sub
mov
add
jbe
or
xor
shrl
loopne
into
imul
in
cs
ffreep
cmp
data16
roll
fstps
in
cmp
fcomps
and
addb
push
shr
push
ds
pop
and
or
inc
jb
in
sbb
popa
ja
pop
jb
add
test
jge
inc
iret
or
lret
xor
pop
scas
cld
jb
add
push
add
verw
or
push
push
inc
movlps
lcall
iret
pop
adc
xor
adc
aaa
stos
mov
popf
push
push
xor
pop
iret
mov
cmp
bound
pusha
stc
mov
dec
bndstx
ljmp
negb
lea
pop
and
in
add
lret
movsbl
or
das
cmp
and
test
and
add
cmp
insl
sete
sbb
or
adc
addl
jb
add
add
pop
mov
mov
xor
add
into
leave
sbb
xor
pop
adc
fdivrs
jns
xor
pop
or
xor
and
mov
shlb
add
outsb
add
push
clc
insb
test
fldenv
cmpl
mov
lret
test
push
and
dec
xchg
or
push
fdivrp
sub
add
pop
fildl
pop
lcall
pop
lea
push
pusha
xchg
or
jo
and
mov
dec
mov
cmp
out
add
push
adc
inc
add
lock
push
or
add
or
xchg
mov
xor
or
fcoml
popa
sbb
sbb
jne
pop
popa
dec
in
or
or
jecxz
aaa
es
adc
mov
outsl
sub
andb
sbb
adc
xchg
xor
orl
pop
test
mov
movsb
mov
call
inc
push
inc
push
lock
add
stos
mov
sbb
scas
adc
or
jp
adc
or
adc
dec
movsb
pop
sub
add
insb
ja
xchg
lcall
pop
or
je
push
cmp
fwait
sbb
xchg
sub
cs
xor
dec
mov
xor
imul
popf
inc
pop
and
sbb
or
insl
adc
mov
xor
addps
add
add
leave
cmp
mov
xor
fs
in
mov
inc
inc
dec
add
add
fsubrs
adc
add
pop
jb
xchg
dec
mov
or
sub
test
lcall
mov
outsb
scas
pop
xor
arpl
mov
adc
or
push
pop
add
mov
jb
sub
sarb
xor
les
mov
and
add
and
insl
inc
pop
pop
sbb
mov
xchg
xchg
pusha
mov
xchg
hlt
sub
sbb
sbb
or
add
mov
sub
adc
xrelease
mov
in
sbb
push
push
inc
cwtl
jno
push
or
dec
jne
iret
mov
lcall
inc
cmp
je
aas
mov
add
cmp
xchg
cmp
jg
push
jge
mov
fidivrs
test
pop
add
cwtl
lea
push
and
into
repz
dec
cwtl
aas
pop
jnp
xchg
push
jo
enter
inc
mov
sbb
int3
add
jns
jge
mov
push
je
or
cmpb
mov
repz
push
nop
les
into
test
adc
sub
lods
cmp
jp
or
pusha
mov
add
pusha
mov
or
popl
packsswb
add
add
mov
and
push
mov
jns
or
movsl
jle
sub
lods
cmp
mov
dec
nop
push
cmp
push
or
pop
jecxz
inc
ds
cwtl
push
mov
jecxz
mov
aas
movups
jp
pop
mov
adc
inc
push
enter
int
unpckhps
lahf
inc
jg
pop
push
addb
pop
jb
add
leave
nopl
xlat
cmp
repnz
add
sbb
negl
inc
lret
lahf
loop
pop
arpl
push
and
pop
add
mov
add
and
mov
add
and
sub
stos
xor
dec
xchg
cmp
fsubr
aam
jno
jl
add
mov
rcll
and
inc
rcrl
add
imul
aad
inc
inc
add
add
or
jnp
je
adc
xchg
mov
cmp
sti
dec
inc
outsl
or
xor
xor
aam
adc
and
insl
add
push
sbb
push
pop
or
push
and
add
popa
or
inc
push
mov
push
or
mov
adcl
add
push
mov
popa
mov
push
popa
add
ja
subl
in
sbb
push
in
je
sbb
sbb
sbb
sbb
sbb
addr16
adc
and
lock
or
or
add
stos
dec
hlt
mov
hlt
adc
or
sub
sbb
dec
sbb
popf
or
mov
sbb
les
arpl
ljmp
incb
push
add
int
adc
jmp
adc
pop
and
sub
mov
ret
addr16
cld
nop
in
pop
ret
xchg
sbbl
movsb
ret
mov
into
push
inc
stos
inc
or
inc
in
or
add
sbb
mov
cwtl
nop
xchg
iret
push
inc
dec
outsl
js
add
and
pop
xor
jbe
mov
je
mov
push
and
or
jo
notb
mov
mov
and
les
cmp
push
add
or
inc
sbb
leave
insb
je
cwtl
rorb
adc
ja
mov
ja
adc
push
mov
jo
push
push
xchg
or
mov
or
add
add
push
imul
push
sti
sti
jl
xor
es
push
push
adc
pop
and
ret
sbb
cmp
adc
int3
add
jns
pusha
lret
inc
mov
clc
aas
lds
int
jp
aam
sbb
sbb
outsl
jl
sbb
push
add
dec
push
in
jp
jl
imul
clc
jno
ret
movsb
test
enter
inc
mov
pop
push
test
test
aaa
imul
test
mov
pop
or
fcoms
push
jo
loopne
test
loopne
pop
loopne
inc
push
adc
cmp
scas
or
pop
dec
sub
cmp
loopne
push
subb
and
adc
and
add
das
and
xchg
add
mov
cli
in
dec
or
fistpll
cmc
lcall
dec
pop
dec
sti
cltd
dec
mov
xlat
dec
adc
pavgb
dec
pusha
std
cmp
pop
adc
mov
or
sub
es
mov
mov
xchg
mov
dec
jno
push
shrb
add
xor
add
mov
ja
rolb
sbb
lods
mov
ja
repz
test
bound
jb
adc
mov
mov
add
dec
jmp
add
sub
dec
lret
xor
addr16
cltd
add
add
stc
add
add
pusha
lods
shll
adc
sbb
out
pop
out
cmp
imul
aad
dec
cltd
dec
pop
mov
or
dec
sbb
sbb
outsl
mov
pop
popf
ficoml
jno
inc
insl
dec
cmp
and
js
xor
int3
inc
xchg
mov
and
pop
sub
xor
mov
inc
repnz
xchg
inc
or
ja
inc
pushf
dec
xor
iret
ret
xorb
rorb
or
pop
add
nop
add
dec
add
loopne
loop
in
sub
mov
cmpsl
cmp
out
dec
rolb
fstpt
insb
push
mov
xchg
push
imul
mov
test
fisttpl
and
and
daa
or
test
pop
push
sbb
pop
pop
ja
mov
mov
dec
iret
dec
iret
addr16
orl
push
js
add
pop
mov
dec
jl
adc
ja
loopne
or
or
pop
cmpsb
sub
fcoml
imul
aaa
notb
cmpsl
cmp
mov
sbb
add
mov
dec
aad
jo
or
mov
jno
cmp
jmp
xor
outsb
clc
adc
add
inc
dec
emms
popa
loope
pop
pop
jne
adc
out
je
add
test
das
jo
add
in
push
mov
inc
inc
jg
mov
rorb
clc
or
or
push
jbe
enter
je
xor
or
cmp
iret
cmp
sub
js
out
sbb
xor
mov
sbbl
push
out
insb
and
or
cmp
popa
data16
out
test
add
mov
xor
iret
xor
adc
jbe
adc
std
pop
roll
jne
pop
or
call
push
outsl
aaa
sti
mov
es
push
das
fmuls
push
adcb
adc
inc
pop
jl
inc
jecxz
out
push
mov
jge
dec
je
mov
les
mov
add
pop
mov
call
outsb
aad
jl
sti
pop
or
push
sbb
inc
or
adc
lret
test
dec
fistpll
jo
rolb
js
pop
ds
mov
sub
push
sbb
inc
mov
loope
cmp
xor
les
xor
les
insb
xor
and
test
or
adc
xchg
push
add
popa
mov
repz
das
xchg
clc
dec
cmpb
pop
les
push
scas
sub
daa
mov
rorl
sbb
dec
outsb
mov
adcb
das
pmuludq
push
push
push
adc
nop/reserved
push
and
daa
push
aaa
fisttpll
pop
lds
adc
push
in
adcb
dec
xchg
mov
stos
aam
dec
jne
les
xchg
cmp
and
sbb
xchg
mov
mov
dec
outsb
je
jmp
adc
les
jbe
gs
push
sti
jl
les
adc
xchg
imul
pop
insl
popa
popf
ds
arpl
inc
pop
call
fs
aas
addr16
or
adc
adc
sub
push
clc
shlb
pop
decl
dec
jle
mov
pop
adc
and
int3
jecxz
insl
cs
dec
xchg
push
loope
movsl
pop
bound
jb
gs
lods
enter
imul
movb
add
or
sbb
cmpsb
nop
paddq
mov
arpl
lds
add
mov
or
mov
mov
or
add
adc
test
pop
and
jge
or
pop
jecxz
jo
mov
cltd
push
pop
aam
push
push
jne
xchg
mov
jecxz
pop
sub
push
jle
mov
test
imul
and
loope
cmp
mov
lock
inc
or
rcrl
push
sbb
addr16
adcl
cltd
aad
xchg
mov
fmuls
sub
fsubrs
js
bound
pop
lret
dec
sub
or
dec
je
dec
nop
xlat
or
pop
inc
aad
inc
jne
lea
cmp
loopne
inc
jl
jno
mov
mov
ljmp
mov
sub
mov
sub
mov
push
jo
jl
sbb
jmp
mov
mov
cmp
or
or
ret
rorb
xlat
and
loope
aas
xchg
fildl
arpl
in
mov
enter
adc
pop
lahf
pop
jno
stos
adc
adc
xchg
icebp
push
xor
lahf
pop
and
ficomps
inc
pop
cmpsb
add
sbb
fbstp
adc
push
outsl
cmp
inc
pop
lods
jnp
jl
test
outsl
aam
push
ds
push
outsb
in
jecxz
and
push
sub
inc
pop
lods
outsl
pop
fildll
ss
add
iret
jnp
push
jl
pop
and
jbe
sbb
leave
test
data16
in
ret
outsl
cmc
dec
dec
mov
pop
jo
xchg
pop
int
pop
ds
lds
fwait
pop
in
mov
pop
xlat
imul
in
cmpsl
pop
out
pop
inc
pop
add
loopne
mov
pop
adc
dec
push
pop
push
pop
ss
loope
dec
and
into
pop
xor
outsl
pusha
aad
or
mov
mov
ds
ret
mov
leave
and
frstor
mov
imul
gs
push
test
inc
dec
adc
mov
and
push
js
test
test
adc
pop
lahf
pop
pop
inc
adc
arpl
movl
jle
pop
jecxz
cmc
adc
xchg
jle
add
mov
ret
nop
push
pop
xlat
push
mov
mov
das
fisttps
push
jo
or
bound
ljmp
inc
adc
pop
ret
adc
jno
add
in
data16
or
jg
filds
test
pop
cvttps2pi
fistpl
pusha
in
bswap
ror
leave
enter
mov
sbb
or
mov
inc
sub
adc
rorb
ja
pop
pop
lds
jns
jae
mov
sbb
cmp
dec
test
shr
insb
fildl
sarl
fs
jbe
dec
or
dec
mov
xchg
mov
inc
sti
imul
push
push
jg
test
pusha
and
aaa
cmp
or
sub
pop
add
lods
mov
jnp
rol
jg
inc
or
fwait
or
lahf
xchg
ficomps
lods
dec
and
jo
xor
jecxz
pop
pop
in
inc
dec
push
bound
inc
and
pop
pop
inc
inc
call
push
push
pop
incb
add
test
fldl
ret
data16
xor
adc
add
jne
pop
mov
or
push
daa
mov
pusha
mov
popa
movsl
int3
xchg
mov
pusha
inc
push
icebp
cmp
mov
push
and
cmp
add
pop
pop
pop
or
dec
orb
mov
xchg
fidivs
data16
mov
dec
icebp
mov
sti
in
dec
insl
sbb
jne
cmp
xor
adc
pop
or
sub
fsts
ljmp
popf
xchg
sub
push
ja
movsb
lahf
int
fdivs
add
shll
decl
xchg
pop
cmp
or
and
push
hlt
dec
iret
jg
add
and
jno
int
cmp
in
in
leave
stos
or
pop
sbbb
fwait
sbb
cmp
les
sbb
loop
or
push
push
lea
add
or
test
addb
rorb
popa
pop
in
add
pop
les
add
xor
mov
push
adc
push
xor
or
xchg
push
or
pusha
gs
popa
sub
cmpsb
addr16
adc
adc
pop
hlt
sti
jb
ljmp
add
inc
sub
inc
loope
add
add
inc
cmpb
inc
sbb
push
pusha
xchg
add
pusha
pop
jbe
inc
mov
lods
xor
mov
movsl
sub
sbb
push
or
nop
xchg
or
test
test
jge
incl
push
add
mov
sub
ljmp
addr16
push
iret
xchg
lds
mov
jmp
subb
paddsw
push
jg
mov
mov
test
fwait
mov
mov
mov
outsl
pop
cmpsl
dec
jae
clc
mov
or
pop
out
sbb
inc
loopne
add
stos
or
mov
les
fnstenv
dec
outsl
mov
inc
xor
aaa
dec
push
daa
rorl
inc
ja
push
dec
aam
cmp
jns
push
jnp
ret
roll
ja
mov
push
push
jp,pn
aaa
and
popa
scas
xchg
popf
sbb
shrl
add
in
xor
outsb
adc
dec
in
mov
in
rol
fwait
ja
xchg
mov
jne
or
push
lods
sbb
popa
ja
cmp
dec
in
inc
popa
out
sbb
ret
sbb
or
js
push
addr16
xor
push
fadd
push
push
imul
movl
xchg
imul
push
fstpt
push
ss
adc
mov
xorps
sahf
jo
scas
xor
out
dec
jo
push
mov
imul
sub
dec
je
sub
in
ss
xchg
out
dec
shll
mov
xchg
insb
loopne
enter
popa
data16
jbe
adc
fidivrl
or
fisttpl
sbbl
popa
aaa
pop
pop
mov
andl
iret
sbb
mov
stos
loop
popa
dec
or
sbb
or
jnp
mov
aaa
inc
sub
mov
pop
or
cs
aas
adc
aaa
mov
mov
adc
pop
ja
or
incl
andb
mov
lahf
adcb
push
ret
cmpsl
insl
aaa
daa
jb
push
cmp
push
bound
push
or
dec
pop
add
and
scas
stos
sbbl
xor
add
scas
dec
sbb
xchg
out
and
aas
or
inc
insl
cmpsl
fistpl
add
dec
out
ljmp
ja
or
push
mov
add
add
adc
adc
ret
mov
arpl
push
xor
cltd
xchg
pop
add
or
ror
push
sbb
xor
adc
inc
mov
ds
test
lods
add
inc
mov
dec
push
scas
jle
fcoms
addb
pop
ret
dec
push
push
mov
dec
stos
inc
xchg
notl
sub
pop
mov
mov
inc
roll
inc
xor
xor
cmp
int
call
or
mov
dec
jp
shrd
cs
cs
dec
dec
add
push
push
xor
dec
addr16
pop
dec
sti
scas
push
addr16
jnp
fstl
inc
push
inc
push
adcl
inc
push
or
add
jnp
push
loop
es
shrl
loopne
jnp
adc
push
cs
pop
dec
out
test
or
dec
inc
dec
ficompl
adc
jle
rclb
xchg
mov
adc
clc
xchg
jae
mov
mov
mov
in
aaa
mov
movsb
push
push
jns
stos
adc
mov
sub
mov
aaa
sar
out
orb
mov
shlb
mov
or
or
xchg
icebp
cmpsl
or
lret
imul
or
or
sub
jl
mov
sti
push
cmp
mov
lret
sub
jp
add
or
loopne
xor
xor
inc
adc
loopne
lea
mov
js
insl
dec
scas
inc
or
inc
cmp
cmp
lret
pop
add
mov
jbe
sbb
lfs
inc
aaa
add
mov
mov
sub
aaa
and
das
arpl
hlt
or
adc
add
lahf
lahf
js
xchg
fmull
mov
das
loopne
arpl
ja
test
bound
andl
pop
sub
push
ja
adc
test
loop
aam
inc
sbb
aaa
popf
cmp
lret
jo
in
add
mov
loopne
pusha
inc
adc
xor
cmp
inc
jg
sbb
push
jne
jne
arpl
fsubr
or
imul
pop
sarb
push
sbb
and
iret
cwtl
or
add
std
ret
mov
or
or
arpl
mov
out
mov
mov
cli
movsb
jno
leave
rolb
mov
push
jmp
xchg
sbb
inc
loope
pop
dec
mov
fists
xchg
sbb
cwtl
cwtl
push
stos
add
jmp
ja
movl
nop
xor
cmp
sbb
movsl
or
addl
cmp
xchg
or
icebp
cmp
scas
add
ret
roll
mov
das
xor
and
dec
mov
mov
pop
add
or
and
xchg
lret
xchg
mov
inc
clc
clc
clc
inc
inc
add
add
aam
cmp
or
popf
fs
adc
or
jle
addb
dec
repz
pushf
mov
test
jmp
test
mov
add
imul
in
or
dec
stos
fldcw
call
ret
or
inc
imul
pop
or
cmp
pop
pop
push
push
mov
jno
pop
sbb
jno
mov
inc
add
adc
sub
in
ficompl
push
pop
and
sbb
push
pop
mov
stos
ja
and
icebp
imul
sub
jb
ljmp
and
inc
pop
nop
add
pop
mov
or
loopne
sbb
pop
orl
sub
and
jmp
xor
sar
mov
fiaddl
sbb
hlt
mov
ret
mov
hlt
mov
lea
pop
sbb
push
dec
pop
lar
mov
dec
cpuid
sahf
adc
jo
xchg
sbb
insb
cmp
stc
in
mov
pop
mov
mov
sbb
mov
in
jg
add
push
jle
nop
mov
sbb
leave
fwait
sub
or
aaa
mov
outsb
mov
cmpsb
xchg
mov
cwtl
mov
mov
in
push
sbb
mov
je
inc
test
imul
lret
push
add
test
or
pop
scas
add
push
jmp
sbb
mov
fs
push
or
lahf
push
cmpsb
jp
push
mov
bound
and
neg
pop
jae
mov
push
push
mov
out
inc
popa
push
sbbb
add
mov
sbbl
add
xchg
dec
aam
mov
push
xor
cmpsl
mov
adc
and
inc
sbb
push
dec
adc
xchg
inc
adc
inc
push
and
add
out
push
shll
xor
sub
nop
ret
test
xor
sbb
nop
out
fwait
sub
xchg
sbb
stos
or
jns
dec
loopne
ficoml
addb
inc
rorl
mov
xor
dec
dec
jo
out
in
adc
or
or
xchg
dec
or
enter
cmp
into
xor
sub
adc
call
adc
addb
xor
test
scas
jg
cmpsb
fistps
shrl
or
mov
jmp
push
jne
rclb
xchg
xchg
insl
pushf
cmp
mov
xchg
repnz
insb
add
and
hlt
jg
xlat
push
movb
fs
push
or
push
adc
adc
sub
dec
cmpsb
jmp
shr
in
stos
adc
jl
bound
jb
stos
add
and
popa
sbb
push
in
and
adc
testb
push
or
mov
fmuls
mov
xor
or
movsb
aad
outsb
xchg
dec
inc
mov
dec
add
inc
dec
mov
je
pop
test
and
nop
jg
jg
push
enter
inc
xchg
jg
popa
add
test
insb
testl
and
jg
js
cmpsb
cmp
out
push
xor
fadds
and
cld
lock
sbb
jno
fisubl
xchg
mov
adc
ljmp
int3
push
add
xor
xor
mov
sub
jb
cli
dec
pop
mov
shl
pop
mov
mov
js
adc
ja
push
adc
aas
test
or
adc
data16
ja
push
adc
mov
arpl
xchg
call
dec
push
push
inc
outsb
adc
outsl
rolb
pop
sbb
adc
cmpl
push
dec
and
xchg
mov
cmp
insl
jae
sub
shll
daa
adc
in
xor
sbb
ret
sub
sub
inc
xor
inc
lea
sub
lcall
and
loopne
repz
push
adc
pop
xor
xchg
pusha
xor
xlat
aad
inc
sbbb
xor
and
xchg
and
pop
mov
negl
dec
sub
sbb
xor
sub
cmp
dec
das
dec
add
lea
inc
jmp
xchg
and
mov
mov
sub
xor
inc
rolb
adc
inc
push
xor
push
pop
inc
outsb
cwtl
dec
jo
sbb
movl
and
push
or
sbbb
rorl
stc
testl
or
orb
ja
inc
dec
lea
adc
inc
lahf
int3
jne
popa
adc
addr16
sub
les
push
dec
push
out
cmpsl
sub
cmp
outsl
imul
cltd
mov
fdiv
inc
loope
xor
loop
add
and
jno
add
or
and
ss
sub
movsl
inc
or
jne
cmp
les
and
sub
cmp
cmp
mov
cmp
ja
sub
adc
adcb
fildll
xchg
inc
jmp
mov
dec
imul
add
sahf
xor
push
out
mov
mov
add
cmp
ret
loopne
stos
pop
shlb
imul
sbb
inc
mov
in
push
push
xchg
sub
dec
mov
push
hlt
cmp
movsl
insl
pop
pop
push
jge
lea
cmp
orb
in
push
fsts
inc
add
mov
push
ja
sarb
loop
and
mov
jnp
cmpsb
daa
js
push
loopne
mov
push
mov
call
ret
xor
inc
fcompl
insb
loope
outsb
sbb
fmuls
cmp
mov
mov
jae
add
push
add
lret
jno
mov
adc
cltd
inc
and
cwtl
mov
add
push
mov
iret
jge
mov
leave
cmpsl
or
push
push
push
mov
push
mov
enter
or
dec
rorl
or
xor
push
jb
loop
ja
sub
push
push
inc
or
adc
or
popa
pusha
dec
in
ret
sub
call
test
mov
adc
shrl
inc
pop
lea
imul
js
inc
sub
mov
cltd
and
repnz
sbb
xor
iret
test
cmp
xorb
fsts
or
aas
add
movsb
jb
push
or
jle
or
pop
adc
popa
sbb
rorl
xchg
sub
cld
inc
stos
adc
add
sbb
mov
inc
mov
test
xchg
or
sbb
das
add
mov
dec
cmpsb
or
inc
push
dec
inc
push
sbb
test
pop
nop
sub
aaa
mov
dec
sub
jge
or
xor
outsb
or
leave
jo
gs
add
cmp
push
iret
enter
sbbb
cmp
inc
inc
jns
sub
add
lds
xor
pop
enter
xchg
sbb
pop
mov
xchg
in
stos
dec
scas
mov
jns
pop
das
pop
lea
pop
jns
pop
ret
adc
inc
mov
jo
or
aaa
sarb
movb
mov
je
push
stc
add
loopne
cmpb
pop
inc
dec
inc
pop
stc
psubb
imul
cmp
mov
das
pop
jecxz
aam
shlb
movsb
inc
add
xchg
add
mov
rclb
mov
xlat
mov
add
imul
add
es
pusha
and
loope
mov
or
pop
inc
cvtps2pi
repz
fisttpll
pushf
jnp
or
mov
mov
add
testb
jl
adc
in
push
das
addb
pop
push
and
addl
mov
sarb
mov
xchg
and
mov
mov
shrb
or
inc
add
adc
arpl
imul
xchg
int3
insl
loope
fstpl
movsl
lret
pop
push
dec
mov
mov
pop
ret
inc
dec
addl
icebp
sub
call
clc
sbb
and
and
or
mov
mov
push
ja
xor
sarb
inc
inc
jae
daa
int
xchg
inc
cltd
mov
inc
sbb
dec
flds
xchg
ret
and
push
movsb
cmpsl
stos
xchg
xor
adc
pop
dec
add
mov
xchg
mov
pop
mov
jmp
enter
or
dec
shll
xchg
mov
sub
push
icebp
and
daa
dec
jae
pop
lock
negb
dec
add
inc
cmp
or
inc
jg
cmp
je
mov
mov
or
iret
sbb
or
ss
mov
add
pop
pop
push
addps
aas
insb
es
or
adc
dec
xorl
push
andb
sub
pop
adc
adc
lea
push
sbb
daa
xor
pop
cmp
std
out
not
and
pop
xchg
cmp
je
test
daa
add
xchg
add
cmpl
xchg
or
sbb
dec
mov
push
ds
jo
dec
xor
add
pop
push
add
or
inc
pop
cmp
or
scas
inc
push
inc
or
subl
inc
test
cmpb
nop
sbb
sbb
xchg
mov
sub
sbb
add
push
jne
bound
add
andb
inc
or
add
loop
loope
push
adc
std
lods
mov
xchg
imul
nop
jb
testl
out
push
dec
enter
sbb
movsb
insl
jp
test
sub
imul
and
push
mov
fwait
cld
mov
sub
sbb
adc
add
out
cs
sbb
es
and
dec
pop
dec
test
mov
ret
adc
lea
mov
add
inc
addl
movsb
mov
orb
push
test
add
shrb
int3
add
push
push
pushf
or
mov
or
xchg
jmp
jl
xor
shlb
cmc
push
mov
sub
cld
add
daa
push
mov
bound
jnp
push
add
fwait
mov
sub
ja
movsb
jge
pop
mov
bound
cs
movsl
scas
or
pop
hlt
add
call
dec
test
in
lock
sarb
mov
into
add
pop
push
shlb
jbe
test
xchg
xchg
sbb
cld
push
adc
adc
cld
cmp
outsb
out
push
rorb
sbb
push
lret
mov
je
or
add
pop
addl
fiaddl
fincstp
shll
fldenv
fcmove
inc
add
mov
or
fsubl
or
and
inc
mov
jle
mov
pop
sub
popf
jne
fs
and
popf
cmp
xchg
rorb
pop
daa
in
xchg
mov
test
push
adc
push
add
mov
inc
and
test
inc
mulb
push
and
xchg
or
xlat
sbb
sub
jo
pop
sub
push
and
push
mov
lock
jmp
jns
arpl
xor
dec
add
mov
xchg
sbb
inc
shrb
add
imul
inc
les
mov
pop
or
movb
mov
dec
mov
ss
out
jmp
rcl
inc
pop
or
mov
lods
sarl
mov
add
fisubrl
adc
dec
dec
mov
lea
insl
lcall
add
add
mov
add
push
mov
inc
adc
inc
cmp
adc
pop
mov
popa
cmp
aas
loopne
sub
or
dec
add
mov
rcrl
pop
push
inc
dec
jne
addps
adc
sub
aam
pop
fistl
sub
pop
push
sbb
inc
mov
xchg
mov
iret
enter
into
imul
xchg
adc
dec
hlt
dec
js
jle
add
add
movmskps
add
insl
or
jmp
dec
call
cmp
mov
mov
dec
jecxz
mov
mov
jmp
out
cmpsl
clc
movw
hlt
lods
adc
sbb
sub
add
aad
pushf
xchg
outsb
rolb
sbbl
mov
xor
or
cld
rolb
push
xchg
fcompp
jne
ds
add
xchg
inc
movzwl
lea
es
mov
push
cmp
fwait
negb
push
addr16
ret
andb
loopne
sahf
pushf
cld
icebp
push
add
movsl
lods
add
call
cmpl
andl
sbb
clc
stos
jl
xorl
das
push
icebp
inc
ss
xchg
mov
dec
mov
jo
in
or
add
sar
xor
dec
pop
cvtps2pd
mov
cmp
push
cmp
inc
pop
dec
or
mov
push
push
pop
pop
rcrl
das
inc
inc
inc
mov
fwait
out
ss
and
mov
dec
mov
ficoml
leave
or
mov
fsubrs
movups
les
in
push
add
mov
xor
sub
cmp
adc
push
xor
outsb
andb
movsl
and
call
cmp
inc
push
outsl
push
sub
ret
cs
test
cmpsb
shll
mov
in
dec
pop
add
shrl
pop
pop
push
inc
push
sbb
mov
xchg
imull
mov
aaa
add
adc
xchg
lods
cmpl
pop
cwtl
pop
jne
data16
mov
inc
sub
xor
add
ret
pop
and
add
xchg
push
cwtl
jge
mov
and
sub
xchg
sahf
lret
cmp
loopne
add
lds
add
adc
and
push
or
shrl
pop
adc
adc
xor
in
mov
inc
xor
insb
pop
xchg
sub
dec
push
push
lahf
mov
xchg
inc
jo
nop
add
lahf
push
je
mov
js
insl
lds
orb
add
pop
add
pop
add
or
pop
dec
jne
ss
into
push
inc
cmp
adc
add
rcr
jg
in
adc
clc
jg
test
jle
cmp
mov
ret
aaa
push
add
jg
mov
mov
rorb
fistps
fnsave
loope
jo
addb
mov
mov
mov
sub
mov
or
push
ss
push
or
inc
or
pop
pusha
xchg
adc
sub
out
push
call
movsb
jno
std
mov
fildl
imul
and
or
in
adc
xchg
lret
inc
pop
add
fsubr
jmp
adc
scas
add
imul
or
cmpsb
mov
lock
dec
data16
sti
cmp
jg
or
jl
push
inc
lea
pushf
xchg
jp
jns
dec
add
mov
pop
and
dec
hlt
mov
or
mov
push
add
adc
in
jle
add
inc
adc
test
and
fst
aam
cmc
mov
loopne
add
add
sub
pop
sbb
xor
pop
aam
sbb
dec
adc
cmpsb
cmc
dec
and
enter
adc
mov
mov
movsl
sub
pushf
ret
xchg
xor
pop
push
fidivrs
mov
push
mov
add
orb
add
xor
shlb
jge
push
rolb
repz
push
mov
pusha
push
push
sub
shrb
xchg
imul
add
inc
stos
push
cmpsl
mov
inc
mov
xchg
xchg
outsb
call
pop
and
xorb
aam
inc
je
ljmp
test
mov
mov
enter
xchg
xchg
push
push
pop
rolb
push
pop
pop
mov
jl
jecxz
adc
xor
sub
jb
je
sbb
or
inc
roll
jmp
ret
cmp
dec
inc
mov
in
inc
xor
mov
movb
sti
mov
dec
or
jle
lock
jmp
xchg
pop
roll
push
mov
add
sarb
jae
jmp
adc
sbb
notw
data16
add
xor
push
jae
mov
movsb
aam
and
and
push
sub
jae
add
fmull
ret
fsubs
push
mov
xchg
xchg
shll
lret
js
ret
rol
xchg
and
out
adc
popa
nop
mov
addl
xor
fnop
andb
lea
adc
ret
pop
add
cli
push
add
or
hlt
stos
cmp
adc
pop
push
xor
mov
adc
arpl
mov
mov
mov
lret
test
sahf
ret
mov
aas
and
inc
fwait
aas
hlt
nop
movsl
outsl
dec
lods
pushf
xor
js
add
scas
adc
inc
jg
imul
mov
sarb
mov
testb
lods
adc
mov
mov
inc
xchg
cmpsl
add
test
mov
push
in
hlt
repz
push
int3
adc
push
aaa
enter
sbb
push
clc
imul
stos
adc
add
popf
sbb
fabs
mov
jp
cmp
popf
test
out
xchg
jecxz
add
xlat
push
add
dec
and
addr16
jns
popf
adc
or
mov
mov
out
adc
mov
or
lods
mov
shrb
or
push
orb
scas
mov
mov
mov
leave
mov
xor
insb
add
dec
shll
lods
sbb
in
in
xchg
rcrb
sbb
and
int
loopne
pop
daa
int
fcoml
in
cmp
and
orl
and
insl
lods
mov
and
inc
and
xchg
mov
add
jmp
mov
mov
test
es
adc
jbe
pop
and
nop
out
add
sti
sub
cmp
mov
mov
cmp
popa
mov
mov
inc
jne
sbb
adc
adc
out
addr16
cs
movsb
push
push
int3
and
test
xchg
test
and
je
sub
popa
and
and
jno
adc
sbb
xchg
test
orl
hlt
rclb
mov
loopne
cmpsl
and
aaa
jnp
mov
cwtl
cmp
pop
popl
test
fsts
pop
inc
jmp
or
pop
add
pop
es
and
popa
sub
imul
cwtl
mov
cld
xor
cmp
fiaddl
push
testb
ljmpw
push
rcrb
fisttps
cmc
ja
insl
divl
jo
insl
add
add
pusha
ret
shll
push
cmp
xchg
xor
or
inc
arpl
xlat
adc
or
cmp
jo
pop
aam
out
dec
dec
jl
push
pop
or
insb
negb
lods
pop
add
js
dec
scas
jmp
inc
mov
add
gs
aas
or
add
pop
insl
insb
mov
and
sub
or
jb
add
lods
or
push
cmp
ss
or
pushf
or
shrb
cli
fistpl
aam
insl
scas
stc
outsl
and
pop
loope
jne
rclb
cmpsl
push
addr16
push
mov
lods
xor
push
pop
movsb
sbbl
sti
push
xchg
jo
test
sbb
jb
sahf
mov
sysenter
sub
arpl
add
dec
je
jne
dec
dec
add
sub
mov
dec
rol
repz
shl
and
shlb
sbb
pop
mov
cli
cltd
mov
dec
sbb
lods
add
dec
push
subb
lahf
dec
loop
adc
mov
xlat
sub
adc
scas
add
xor
or
jmp
ss
dec
push
movsb
mov
repnz
pop
jl
jl
inc
jmp
sub
pusha
or
movsl
cmp
push
mov
rclb
mov
xchg
adc
dec
push
inc
scas
dec
mov
pop
out
les
enter
mov
pop
fbld
adc
popf
lods
imul
sub
mov
jp
jo
jle
mov
jmp
dec
pop
dec
xchg
cltd
loopne
adc
aam
jo
mov
cmp
push
repnz
jmp
mov
ficoml
dec
arpl
dec
add
insb
add
fs
push
decl
shlb
call
push
mov
test
push
push
mov
adc
imul
sub
pop
leave
ret
and
mov
inc
push
shlb
fisubrl
xor
jmp
sahf
shlb
stos
add
mov
inc
dec
inc
lret
lock
and
mov
sahf
pop
jns
jbe
clc
or
xchg
push
mov
or
mov
or
shrl
dec
cwtl
arpl
sti
test
fsts
cmp
adc
push
inc
xlat
mov
sub
je
andb
xor
jne
fsubl
xchg
fwait
mov
pop
movl
loopne
dec
mov
jmp
cmp
jne
leave
rcr
dec
cmp
cmp
aas
out
xchg
data16
inc
cmp
rcl
lcall
repnz
cmpsl
repnz
sbb
outsl
nop
aaa
add
add
jae
and
xchg
ret
call
cmp
jge
mov
cmpsl
dec
mov
ret
push
xor
and
inc
aam
dec
mov
mov
loop
adc
inc
adc
or
dec
mov
or
xor
push
mov
loop
pop
insb
pop
bound
inc
mov
or
fadds
mov
cwtl
add
js
xor
add
sub
pop
xor
dec
scas
call
leave
push
sbb
dec
mov
pop
mov
fmuls
mov
sbbl
push
and
or
fisubrl
int3
sub
push
cmpsl
push
or
mov
add
push
fnstcw
add
movsb
jmp
int3
fidivrs
test
cmpsl
add
xchg
hlt
cmp
and
adc
add
je
scas
fneni(8087
loopne
popa
lea
adc
fisubs
insl
xchg
mov
test
sbb
mov
in
jmp
outsl
andb
je
mov
pop
daa
sub
jbe
push
fcompl
adc
imul
sbb
dec
loopne
mov
mov
jne
jl
adc
and
inc
push
in
inc
add
mov
jecxz
dec
mov
lock
inc
xorb
jbe
xchg
sub
mov
test
or
fucom
test
je
mov
lods
mov
pop
mov
rclb
sbb
cli
fldt
outsl
jg
fucomp
inc
add
cmp
sbb
sahf
mov
in
adc
out
pop
aam
pop
iret
sbb
add
divl
sub
mov
mov
inc
adc
popa
adc
pop
mov
das
lea
int3
jge
lock
and
nop
jmp
push
or
jne
mov
xor
fnstenv
icebp
add
dec
xor
adc
in
jnp
xor
loopne
sbb
mov
js
dec
ljmp
mov
and
push
and
push
sti
push
inc
sbb
add
ret
or
xor
arpl
nop
fisttpl
mov
sbb
or
push
xchg
jl
cmpsl
mov
nop
push
js
gs
add
into
rcr
insl
xchg
jg
iret
and
test
cmc
add
inc
sub
or
pop
push
xor
and
ret
add
xchg
add
push
push
or
out
adc
sub
rolb
out
movsb
inc
das
cltd
nop
inc
and
insb
jmp
mov
push
arpl
mov
bswap
loopne
push
test
mov
imul
ljmp
addl
inc
addr16
push
inc
sti
jne
nop
stos
mov
hlt
mov
test
leave
scas
mov
sbb
into
or
mov
out
jbe
push
add
arpl
mov
mov
push
add
adc
lock
imul
stos
pop
notl
push
dec
in
jge
sub
xchg
js
in
popa
inc
loope
cmp
int
fstps
clc
adc
or
dec
and
add
dec
loopne
or
inc
push
and
inc
cmp
mov
clc
dec
inc
xor
add
cmpb
add
test
pop
pop
popa
mov
mov
push
mov
and
scas
aas
test
mov
and
push
mov
shlb
cltd
lods
fsubrl
mov
jo
sbb
cmpb
iret
add
sub
cwtl
and
and
xor
jge
jns
cmp
adc
clc
repnz
out
and
cmp
jmp
and
test
push
test
and
push
fldenv
xlat
mov
imul
lret
push
push
cmp
lods
xorl
add
stos
outsl
outsl
mov
shlb
push
mov
mov
scas
je
unpckhps
or
pop
add
ret
cmp
adc
clc
mov
test
dec
das
or
cwtl
lcall
sub
sub
add
push
push
sub
enter
cld
cld
adc
bound
dec
fsubrl
test
sub
xchg
or
inc
jg
inc
fnsave
inc
xor
xor
sbb
orl
add
je
orl
jmp
js
popa
dec
adc
pop
sbbb
or
inc
fisubrl
xchg
pusha
fstl
jns
jb
or
arpl
rcll
negl
and
and
adc
fwait
in
mov
adc
and
sbb
cmp
adc
ror
jo
test
mov
ljmp
enter
dec
in
scas
rorl
cmp
mov
lods
or
push
ret
mov
subl
jmp
popa
sbb
dec
call
add
lret
enter
xlat
shl
je
sub
mov
pop
mov
and
std
dec
mov
mov
adc
call
rclb
rcr
add
pop
and
sub
mov
fs
lock
and
dec
rclb
sbb
lods
add
fidivl
xor
sbb
hlt
dec
mov
andl
loopne
push
movsb
loopne
lock
inc
mov
adc
inc
mov
pop
xor
cmp
cmp
rcrl
pop
adc
and
sbb
inc
xchg
enter
ret
add
sub
xchg
ret
in
inc
xchg
push
mov
mov
inc
hlt
pop
dec
and
dec
mov
mov
mov
dec
mov
sub
ret
popf
andl
pop
cli
das
fsubrl
pop
inc
cmpb
mov
lcall
push
loopne
mov
lods
enter
pop
cmp
and
mov
mov
inc
xor
leave
loope
cli
dec
or
dec
pop
enter
push
insb
dec
push
ret
or
xor
sub
clc
sbb
mov
stos
sbb
cmp
sub
mulb
popa
and
adc
adc
test
in
push
fcoms
mov
lods
mov
cmpsb
push
addb
loopne
add
cmp
jne
je
cltd
negb
push
or
jp
orl
ljmp
rolb
jmp
sbb
in
pop
lahf
or
rcrb
cmp
frstor
inc
xchg
xlat
push
lods
pop
mov
fsubrl
divl
add
call
lea
adcl
sarb
or
adc
dec
je
or
or
mov
or
je
or
je
jmp
mov
xor
xor
sub
push
cli
push
jo
mov
fistps
sbb
mov
jmp
mov
or
sbb
mov
dec
js
dec
jg
sub
mov
sub
out
addb
inc
js
mulb
sbb
xor
ds
and
sbb
aam
into
mov
cmp
lods
cmp
push
pop
mov
pushf
out
push
push
add
mov
popa
fisttps
es
jae
mov
mov
mov
sub
and
adc
inc
inc
cmp
fsubs
ljmp
addr16
movsl
jnp
cltd
shlb
inc
loop
shl
push
rcrb
add
add
dec
jns
jo
and
push
sub
ss
daa
jg
or
outsb
dec
sub
inc
jg
mov
cmp
nop
sbb
mov
inc
lcall
or
xchg
ss
cmp
mov
mov
imul
sub
add
lret
fs
lret
clc
sub
iret
xor
pop
nop
lock
sub
loopne
inc
insl
sbb
pop
sub
jmp
xor
gs
dec
jbe
loope
lahf
adc
cmp
out
dec
scas
xchg
aam
aad
mov
mov
stos
cmp
pop
aas
lcall
dec
adc
mov
sbb
ja
jmp
not
jae
bound
pusha
cmpsl
sub
insb
xor
ret
cs
jne
decl
das
pop
imul
mov
and
dec
cltd
adc
lret
enter
sbb
cmp
xchg
dec
insb
adc
jo
xchg
das
rcrb
test
pop
roll
xchg
push
jecxz
xor
mov
jmp
loope
shl
leave
xor
cmpsl
mov
les
sahf
cli
test
push
add
add
movsb
xor
in
mov
fdivrl
outsl
cmp
lcall
test
daa
adc
mov
xor
dec
outsb
and
pop
add
inc
ret
adc
push
fisttpl
push
mov
xlat
dec
movb
inc
add
xor
lahf
add
push
in
outsl
sub
jge
adc
pop
jnp
or
xor
add
mov
sub
pop
or
push
mov
outsb
lea
popf
inc
push
and
daa
in
or
cmpsb
movl
cmp
cmpsb
lea
push
sub
ljmp
mov
jo
or
mov
adc
adc
sbbb
fwait
rclb
movsb
test
movsb
sbb
pushf
mov
or
add
arpl
mov
sub
fnsave
xchg
push
sub
inc
and
adc
lahf
dec
push
iret
rolb
or
sbb
pop
sub
ret
xchg
push
fcmovbe
jae
movsl
jmp
int3
dec
stos
sub
stos
es
and
push
call
lea
movsl
adc
es
jno
and
aad
sub
cltd
popf
inc
insl
addl
push
inc
pusha
pop
lea
lock
insb
popf
cs
je
dec
int3
imul
outsb
movsl
inc
cwtl
sahf
xor
inc
mov
frstor
and
add
jmp
xchg
or
std
xor
jle
ja
dec
pop
rorl
lods
xlat
push
push
push
out
cmp
mov
loopne
and
loopne
decb
xor
cli
or
loopne
loopne
xchg
shrb
add
sub
jns
mov
inc
mov
mov
pop
pop
stos
mov
daa
xor
mov
lahf
cmpsl
jge
mov
or
push
add
lods
out
or
mov
cwtl
jo
test
adc
les
xchg
stos
push
sbbb
or
mov
cld
push
data16
and
inc
or
enter
out
dec
mov
and
mov
fstl
rcr
daa
daa
movb
adc
neg
push
push
js
inc
stos
test
push
notl
add
mov
jnp
add
roll
push
sub
test
sub
jns
inc
adc
dec
inc
lret
or
fmull
fsubs
xor
mov
je
inc
push
or
jmp
jecxz
dec
mov
ret
dec
orb
int3
popa
daa
es
push
jb
pop
dec
adc
clc
cs
push
adc
sbb
mov
or
cmp
jbe
sarl
xor
or
rorb
push
mov
inc
jb
sbb
es
or
sub
xchg
out
clc
and
mov
jno
shlb
call
lods
testb
pop
push
push
sub
sub
test
sbbl
cmpsl
and
shr
sbb
add
push
sti
loopne
aaa
or
add
test
xor
xchg
ds
shlb
xchg
push
shll
aam
sub
cmp
or
add
jp
lcall
or
cmp
inc
dec
sbbl
ror
and
fsubrs
popa
and
hlt
in
cmp
sub
lcall
sbb
inc
insb
adc
dec
and
dec
aad
adc
fs
loope
lahf
and
mov
sub
cwtl
adc
pushf
and
sub
lea
nop
outsl
loopne
rcll
sarb
je
lods
add
insl
lea
jno
jne
push
pop
sbb
mov
and
cltd
aaa
add
lret
sub
sahf
mov
add
pop
xchg
pop
popl
dec
adcb
dec
data16
pop
push
mov
mov
test
or
jnp
add
scas
dec
and
mov
sbb
jp
jp
cwtl
push
jle
ja
jno,pn
pop
insl
push
jmp
sbb
les
pop
sub
xor
cwtl
jl
sub
add
nop
mov
mov
mov
pop
cld
pop
loop
or
cli
inc
pop
adc
sub
cmp
mov
dec
pop
arpl
xchg
insb
jne
or
fs
icebp
push
mov
add
push
rclb
pop
cmpb
xchg
ficoml
or
or
add
out
loop
push
mov
sbb
adc
adc
push
jno
cwtl
fucom
dec
int
xchg
mov
imul
js
or
in
out
adc
jne
xchg
lea
xor
add
add
sbb
inc
push
popa
adc
test
adc
lea
cmpsl
inc
addb
add
dec
push
pop
pop
adc
xchg
in
fstps
aaa
loop
sbb
ss
testl
pop
out
or
packsswb
add
push
movsl
inc
stos
pop
ja
xor
or
insb
xchg
cmc
push
add
js
cmp
xchg
pop
mov
pop
push
sub
aaa
lods
and
adc
loop
or
jns
or
inc
inc
xor
push
and
pop
cmp
pop
add
jo
sbb
jge
cmovns
jl
loopne
sbbl
lock
iret
imul
xor
and
pop
mov
add
rcl
inc
lea
loopne
push
sub
inc
je
movb
arpl
dec
jp
pop
mov
mulb
xor
pop
xor
cli
pop
pop
jo
jmp
mov
inc
js
movl
mov
add
mov
rolb
dec
imul
inc
mov
mov
test
dec
mov
stos
lret
xor
jl
pop
leave
mov
lock
add
lret
add
xor
dec
lea
inc
ret
fcoms
lock
push
adc
push
rorl
scas
lret
movsb
or
cmp
inc
jmp
je
pop
xor
and
push
xor
dec
scas
sbb
push
mov
rcr
sarl
es
test
add
jmp
sar
lock
je
cmp
cmp
stos
xchg
sbb
or
mov
rcr
add
adc
fdivl
je
pop
mov
aas
sub
mov
adc
shlb
ffreep
xor
pop
scas
and
enter
faddl
add
sub
push
movsb
cmpsl
pushf
mov
adc
insb
mov
push
sub
pusha
mov
mov
dec
pop
insb
pop
pop
rolb
pusha
add
pop
lret
push
jle
dec
push
push
xchg
dec
pop
iret
jo
or
pusha
outsl
mov
push
dec
xorl
aam
sbb
or
jb
ja
jno
push
or
add
pusha
scas
push
mov
jmp
insl
inc
cltd
insb
jge
outsb
pop
cmc
adc
fs
ficoml
test
xor
push
adc
iret
inc
test
mov
jecxz
jmp
sarl
fisttps
cmp
add
xorl
inc
fiaddl
lcall
sub
jae
jo
adc
jbe
adc
sbb
fcompl
pusha
add
adc
adc
pop
adcb
out
mov
popa
sbb
push
dec
stc
loopne
daa
and
nop
fmuls
inc
and
jo
leave
sub
and
enter
push
push
sbb
mov
adc
and
es
add
cmpsb
inc
push
push
jle
xlat
call
push
jecxz
jmp
adc
mov
test
lods
std
testb
je
ss
jns
jno
push
outsl
insb
push
mov
and
xchg
push
out
dec
inc
sbb
xor
aas
movl
movsb
ret
push
rorb
push
out
xor
sub
mov
test
cmp
inc
cmpsl
sub
pop
insl
sbb
rclb
cmp
call
sbb
xchg
popa
fistpl
mov
xor
addb
pop
push
jb
xor
cmp
dec
add
jo
jp
pop
add
and
sbb
jle
rclb
ret
jae
addr16
jne
lods
mov
mov
inc
je
addb
shrb
stos
adc
add
pop
sbb
cmp
rol
and
adc
idivb
add
xchg
push
push
sbb
lock
add
in
shll
dec
test
loopne
inc
stos
jne
inc
xchg
or
lahf
xor
hlt
push
mov
insb
mov
adc
mov
rcll
adc
les
cmp
xor
mov
arpl
mov
sub
adc
pop
insb
mov
loopne
and
cmp
nop
sbb
push
call
xchg
xor
into
xchg
mov
mov
bound
fucomp
jge
mov
imull
test
insb
idivb
fbstp
lock
cmp
xchg
mov
in
push
idivl
cmp
or
inc
int3
arpl
pusha
int3
push
lods
inc
and
movsb
jb
add
inc
push
add
jecxz
sbb
xchg
xor
pop
clc
call
cmp
mov
test
test
dec
inc
mov
insb
xor
push
lret
cli
cwtl
xchg
push
mov
adc
dec
jne
outsb
fisubl
jb
je
stos
cwtl
dec
push
fildll
sub
xchg
aad
out
subb
dec
sub
xor
push
cmp
test
inc
add
aam
mov
loop
inc
xchg
sbb
pop
js
inc
and
mov
pop
ja
pop
xchg
mov
add
stos
aaa
loope
adc
xor
xchg
call
pop
jns
bound
inc
mov
mov
push
cltd
sbb
in
sub
cli
shl
cltd
test
jmp
fs
js
xchg
adc
pop
mov
jp
or
das
pop
fldl
roll
cmpsl
jnp
push
mov
push
sbb
jnp
rol
sbb
jp
cmova
in
or
pop
mov
mov
or
pop
mov
jl
push
adc
addr16
xorl
push
aam
sub
js
mov
fiadds
ja
inc
inc
mov
inc
sub
add
and
inc
push
rorb
add
adc
gs
adc
cmpsb
ja
int
push
inc
sbb
das
xor
xchg
or
and
or
jle
push
pushf
add
cmp
add
testb
imulb
xor
mov
pop
repnz
popa
or
mov
cld
gs
jno
cli
ss
pusha
xchg
andb
add
xchg
mov
add
rcl
adc
imul
mov
xchg
dec
nop
pop
fcmove
faddl
insb
pop
sbb
and
adc
sub
sbb
or
js
pusha
icebp
outsl
and
pusha
adc
adc
and
jns
push
jmp
shlb
leave
xlat
lock
dec
jle
push
ds
aam
xor
jecxz
rcll
into
or
adc
adc
push
aam
cltd
out
jbe
fdivs
jno
mov
das
and
jmp
movsl
inc
dec
sarb
fiadds
cmpsb
rolb
outsb
mov
rcrl
sti
or
sub
dec
xor
xlat
push
rcrb
ja
push
or
push
and
inc
mov
inc
pop
std
fbld
ljmp
xor
and
aad
pop
mov
mov
inc
nop
adc
sbb
cli
pop
sbb
and
mov
sub
add
adc
push
add
rolb
add
and
push
xor
mov
or
movsb
pusha
aaa
sbb
add
dec
ss
and
add
xor
leave
adc
mov
and
insb
enter
jecxz
test
add
pop
loop
shl
in
sub
mov
xchg
add
pushf
negb
add
dec
mov
daa
or
add
in
gs
add
and
enter
xchg
sbb
xor
or
daa
cmpsl
dec
mov
cmp
dec
push
push
push
push
out
out
inc
adc
inc
cmpsl
dec
mov
push
sbb
pop
mov
pop
lcall
add
and
pop
imul
jb
mov
push
jg
dec
bound
je
jae
ljmp
mov
and
push
out
push
inc
push
xor
xchg
jbe
xor
in
mov
sub
daa
add
out
dec
pop
rcrb
add
ds
sbb
or
dec
adc
in
sub
or
inc
addr16
imul
push
daa
adc
test
dec
call
xlat
out
fadd
addl
add
pop
jo
movsl
rcl
adcb
call
lret
xlat
cltd
int
hlt
das
and
cmove
or
getsec
mov
dec
mov
or
movsb
ja
or
add
test
xor
aad
or
nop
aaa
sub
sub
movsb
push
jmp
inc
xorb
inc
test
sub
pop
nop
mov
fsubr
lds
jae
sbb
push
ljmp
pop
or
dec
mov
ja
pop
dec
inc
inc
popa
adc
pusha
outsl
pop
and
mov
lods
and
int
adc
and
enter
js
inc
pop
jg
pop
inc
inc
and
mov
sub
ljmp
loop
jne
mov
or
es
into
inc
fcmove
loope
add
add
shr
mov
outsb
dec
or
pushl
in
or
push
nop
xor
push
mov
inc
sbb
xchg
movsb
aad
ret
imul
fcompl
dec
sbbl
int
test
ljmp
hlt
jns
xchg
and
call
or
inc
xor
sbb
inc
xor
mov
adc
add
mov
jne
inc
cmp
or
push
sarb
dec
inc
or
sbb
pusha
dec
lds
mov
xchg
pop
sub
inc
push
ret
xlat
sub
hlt
movsl
imul
sbb
inc
xor
sub
out
mov
adc
pusha
jne
or
std
ret
cmpsl
shlb
call
push
repnz
ficompl
jbe
in
fidivs
imul
les
jg
pushf
clc
mov
inc
adc
cmp
dec
dec
rcll
ret
fildll
ret
int3
pop
or
xor
mov
xchg
sub
iret
inc
rcll
test
and
or
gs
push
movsl
inc
or
ret
iret
or
lcall
and
pop
ret
dec
push
jbe
insl
push
and
addr16
dec
adc
rcrl
mov
cmp
or
inc
loope
push
imul
or
fists
sub
lods
or
sub
inc
jne
cmpsl
inc
sbb
push
adc
pop
mov
push
inc
add
ret
sahf
negl
bound
push
adc
cs
jae
out
push
sbb
pusha
xor
jo
fadds
push
jns
jo
sbb
push
push
cmpsl
testl
and
mov
out
mov
push
jns
add
pop
jno
push
jp
out
call
add
or
push
mov
fadds
ja
mov
cmp
jl,pt
dec
or
inc
cmp
outsl
push
pop
enter
in
jecxz
sub
stos
fs
jg
inc
sub
or
inc
add
mov
push
jmp
test
or
popf
icebp
push
push
repnz
mov
and
aam
es
xor
ja
fwait
cmp
xchg
loop
movsb
shll
fisttpl
push
popa
int
cmovns
es
mov
ss
push
sti
pop
inc
xor
pop
adc
jle
mov
rclb
push
pop
pop
or
outsl
inc
lret
mov
or
add
push
bound
adc
outsl
sbb
add
push
lods
mov
mov
add
mov
pop
xor
fwait
loopne
push
inc
push
xchg
mov
push
inc
divb
scas
and
xchg
lods
push
mov
inc
sarl
pop
pop
lea
fisubrs
add
push
xchg
shll
pop
cmpsl
stos
lock
inc
mov
push
lahf
gs
push
mov
dec
imul
movsl
mov
imul
or
mov
mov
add
sub
xchg
testl
inc
cmpsl
xor
push
shll
fisubrs
gs
int3
xchg
test
popa
sub
insb
subl
pop
pop
cmpsl
popa
pusha
pop
push
lahf
lret
push
call
dec
scas
imul
dec
inc
mov
incl
bound
xor
pop
push
add
lahf
sub
fsubs
outsl
dec
lods
adc
imul
movlps
mov
inc
daa
adc
adc
jbe
aaa
push
addr16
inc
xor
adc
sub
addr16
adc
add
jp
shlb
ss
lcall
jo
fbstp
and
add
dec
pusha
mov
add
adc
xor
push
mov
outsl
mov
adc
outsb
push
shrl
je
imul
sbb
pop
or
mov
jno
dec
or
and
push
outsl
mov
push
mov
pop
mov
adc
pop
adc
testl
push
adc
mov
mov
adc
mov
lret
pop
out
adc
xor
pop
gs
insb
movl
lret
daa
inc
push
add
pop
jae
insl
push
je
inc
ja
notl
mov
aas
jnp
or
and
push
adc
loop
pop
pop
xchg
sub
cmc
fisubs
mov
sub
fistps
or
cmpsl
stos
les
push
cmpsl
mov
xchg
inc
push
adc
adc
xor
inc
pop
jmp
mov
jo
xor
inc
or
add
insl
adc
inc
inc
shrl
sbb
dec
push
icebp
mov
cs
pop
push
jg
dec
and
leave
pusha
pop
ljmp
sbb
sbb
adc
je
fwait
mov
pop
jo
push
aas
popa
add
pop
lahf
xlat
imul
adc
and
lcall
inc
lret
jns
ss
or
movsb
sub
negl
les
push
mov
movntq
mov
push
imul
mov
inc
aaa
xchg
sub
mov
out
inc
adc
repz
fbld
adc
out
mov
bound
daa
inc
xchg
jmp
jecxz
mov
dec
cmpsl
and
push
push
jns
pop
in
add
pop
sub
add
lret
cmp
pop
movsl
loop
adc
mov
mov
adc
hlt
cwtl
xchg
into
stos
dec
out
jb
mov
pushf
cwtl
xchg
nop
add
cmp
sahf
add
icebp
scas
cmpsl
dec
popa
jns
jne
shrb
inc
mov
insb
or
xchg
or
adc
sbb
clc
or
fs
and
xchg
push
jg
mov
sti
sbb
jl
push
gs
and
push
or
jbe
adc
sbb
inc
mov
nop
cmp
leave
dec
in
xor
cmc
or
inc
inc
inc
fs
add
or
scas
fdivl
leave
fildl
mov
dec
pop
leave
fcoms
inc
adc
clc
adc
inc
and
inc
add
adc
and
mov
or
insb
mov
mov
pusha
out
paddusb
add
or
pop
sahf
out
test
push
js
push
stos
aam
adc
call
insb
cld
inc
insl
movl
push
je
inc
mov
fisttpl
aam
xchg
push
adc
in
loop
notb
or
test
inc
push
imul
push
or
add
jle
out
xor
jo
fcomp
movsb
call
lods
ror
adc
push
dec
cmpsb
cmp
int
jle
push
pop
in
jecxz
out
mov
jge
stc
test
adc
ljmp
sti
mov
push
xor
xor
sub
push
lret
sub
xor
das
cltd
jmp
adc
mov
dec
sub
inc
pop
lods
js
jae
loopne
mov
xor
pop
pushf
rcr
add
ja
cmp
xchg
call
mov
sub
pop
sbb
mov
and
aam
mov
dec
hlt
jns
cwtl
dec
mov
loop
mov
movzwl
sahf
push
add
push
sahf
out
cld
mov
inc
mov
mov
test
in
cs
add
clc
ss
inc
or
je
lock
mov
xchg
xor
sbb
mov
inc
lret
adc
jno
or
jge
imulb
or
in
imul
push
inc
mov
push
mov
popa
and
aam
data16
adc
mov
or
bound
jbe
outsb
lock
movsb
or
push
or
test
xor
push
cmp
loop
sbb
ret
cmp
inc
outsb
fmuls
scas
and
lcall
lds
adc
add
rclb
pop
jbe
xchg
xchg
aad
inc
roll
push
test
aad
push
fwait
js
insb
and
adc
fidivs
or
aam
popa
mov
fnstenv
out
pop
adc
cmp
jns
add
mov
mov
sarb
sbb
ds
inc
mov
add
andl
ja
mov
jp
pop
dec
hlt
aad
hlt
test
xor
inc
clc
mov
pop
xor
dec
sarb
pop
jecxz
inc
xchg
or
movsl
mov
sbb
jmp
xchg
push
push
sti
gs
lods
inc
test
adcb
lcall
dec
sbbb
xchg
and
dec
add
rcrl
lea
andl
bound
add
pop
rclb
mov
sbb
pop
adc
cs
rclb
push
sub
bnd
and
nop
cmpsl
xor
dec
sub
fwait
or
lock
aam
outsb
jl
loopne
bound
adc
pop
cmp
shlb
dec
pop
adc
and
add
inc
dec
mov
je
repz
pop
and
test
dec
enter
xor
dec
shlb
test
mov
in
daa
add
jl
adc
call
add
mov
pop
push
and
sti
sub
ds
inc
imul
mov
orb
push
adc
inc
pop
aam
inc
dec
sbb
sub
ja
inc
mov
call
pop
fcmovbe
jne
push
push
inc
test
sbb
lock
sbb
pop
cmp
sbb
cs
mov
add
xchg
jl
dec
loopne
or
enter
fsubrl
loop
cmp
pop
test
xor
inc
shrl
je
or
inc
in
mov
and
pop
dec
inc
push
xor
or
xorl
out
add
stos
mov
dec
mov
std
push
shlb
push
sbb
push
push
xor
push
jb
iret
mov
dec
enter
cmp
or
rolb
xor
loope
push
ss
push
jmp
mov
je
faddl
pop
dec
xor
add
jns
jbe
inc
cmp
into
xor
cmp
mov
xchg
outsl
cltd
cmp
mov
nop
scas
ds
aam
xor
rorb
add
xor
xor
scas
aad
jb
xor
sbb
xor
xor
xor
pop
or
cmp
xor
xor
xor
dec
imul
cmovae
xor
xor
mov
xor
xor
and
dec
outsb
xor
xchg
mov
add
inc
inc
icebp
push
mov
dec
addb
or
mov
or
gs
adc
jae
push
dec
scas
pop
pop
insl
sbb
in
pop
adc
cmp
push
push
out
imul
and
dec
cmpl
prefetchnta
xor
fldt
push
fdivl
inc
pmuludq
fdivrl
push
sbb
inc
sete
sbb
sub
je
jle
lds
insb
jno
mov
movsb
insl
inc
nopl
mov
mov
cmp
lods
mov
or
inc
clc
outsb
or
pop
imulb
add
push
nop
and
xor
mov
cmp
or
out
push
les
mov
mov
cwtl
aas
es
inc
jnp
jns
ss
cmp
dec
mov
fidivs
nop
push
hlt
cmp
cmp
divl
mov
mov
adc
pushf
sbbl
xchg
loope
mov
pand
cli
jl
out
dec
xchg
dec
sbb
push
or
jne
mov
pop
jp
add
outsb
lds
jae
ss
jl
push
sbbl
or
sbb
mov
add
loopne
fwait
mov
orb
das
test
dec
xor
add
and
clc
cmpsb
in
ss
add
push
enter
xchg
sub
push
sbb
data16
xor
rorl
xchg
arpl
sahf
fnstenv
xchg
or
pop
lret
sarb
jae
mov
mov
or
in
outsl
push
jno
add
jp
dec
int3
lret
and
pop
pop
push
mov
add
xchg
push
push
dec
dec
das
in
in
cli
nopl
inc
addb
outsl
or
pop
or
mov
push
mov
adc
push
mov
lcall
jns
popf
pop
pusha
push
mov
scas
or
mov
push
or
or
inc
in
mov
xor
push
mov
xor
bound
or
pop
imul
rorb
xor
mov
sbb
inc
fcoml
aaa
fs
hlt
ret
xor
adc
add
sbb
inc
lahf
pushf
push
gs
xor
push
roll
mov
cmc
in
rclb
outsl
cmpsl
sub
cli
jb
mov
cmp
rorb
test
loop
out
and
lds
aaa
push
lds
mov
popa
pop
loopne
mov
or
arpl
and
pop
add
les
stc
add
and
or
lcall
fwait
add
pop
push
xor
and
or
inc
call
add
pcmpeqd
dec
repnz
sbb
mov
das
push
jbe
sbb
sbb
outsl
loop
push
and
fdivrl
movsl
inc
sbb
ror
fisttpll
add
add
xor
into
inc
mov
mov
nop
loopne
jno
arpl
push
sub
adc
cmpsl
rol
cltd
inc
xor
ds
pop
inc
clc
fiaddl
sub
stc
inc
scas
pop
pop
xchg
push
test
push
movsb
outsb
xchg
and
shrb
cmp
fwait
fwait
mov
les
add
jle
xor
arpl
inc
add
push
sub
and
or
or
lahf
jae
mov
push
rcrb
jns
xor
inc
push
popa
lods
test
nop
xchg
test
dec
inc
test
push
xchg
dec
inc
dec
dec
xchg
xchg
push
test
movsb
dec
xchg
sbb
xchg
dec
cmp
outsl
mov
ret
adc
daa
add
mov
and
cmpsb
add
les
xchg
pop
cmpsl
outsb
je
mov
sub
insl
sbb
hlt
xchg
mov
add
ror
mov
dec
repnz
shrl
iret
and
aas
lea
sbb
xor
les
hlt
add
ss
rolb
sbb
addr16
push
add
inc
or
mov
sub
inc
bnd
lods
dec
add
fstl
pop
pop
adcb
push
sbb
push
shl
pop
add
pop
sbb
dec
xchg
or
cmp
push
pop
jae
cmp
adc
movsl
pop
popa
enter
adc
cs
inc
fs
adc
shl
repz
scas
in
jle
adc
inc
pop
fimull
rclb
pusha
pop
adc
subb
mov
push
xchg
popa
xchg
sbb
addl
push
testb
fmuls
add
lcall
add
divl
add
push
sti
mov
inc
aas
les
pop
pop
xor
shlb
add
push
xchg
mov
shlb
add
call
push
js
add
in
je
cmp
insl
jo
xchg
shlb
insl
gs
push
dec
dec
shlb
inc
mov
xchg
add
rolb
dec
mov
imul
movsb
jge
roll
sub
xor
sbb
leave
add
cmp
mov
pusha
mov
popf
sub
testb
sub
mov
add
sub
mov
and
xor
gs
mov
sub
xchg
add
sbb
cmp
xor
pop
call
ret
aad
mov
xchg
mov
xor
push
add
mov
or
pushf
pop
jno
popf
cs
xor
dec
cmpsl
or
aaa
pop
adc
jmp
rorb
jo
xor
xor
adcb
sbb
or
and
dec
cs
xchg
cmp
in
mov
cmpsb
xchg
aas
inc
dec
shl
sahf
add
inc
add
sbb
cmc
or
sub
test
pop
push
inc
js
je
inc
shr
dec
pushf
aaa
inc
sbb
mov
nop
cmpsl
jge
sbb
inc
and
aaa
push
hlt
cltd
mov
mov
sub
sub
dec
push
jo
jb
add
add
dec
inc
add
add
jo
jae
mov
xlat
add
add
dec
inc
cwtl
loopne
jg
enter
or
enter
mov
cld
enter
and
inc
gs
enter
aam
sbb
enter
aas
popa
subb
in
or
xor
enter
jle
lret
in
stc
push
and
imul
enter
stc
enter
sbb
enter
leave
in
push
es
aaa
pop
andl
xor
enter
jns
shlb
in
enter
ret
or
and
test
add
sub
cmp
clc
es
ja
push
and
pop
xchg
dec
and
test
lahf
mov
or
or
adc
outsb
mov
imul
ja
adc
pusha
xchg
mov
fs
inc
push
push
repnz
adc
inc
inc
fsubs
sub
addr16
arpl
aam
or
push
ja,pn
enter
adc
cmp
xor
andl
ja
sub
xor
xor
mov
dec
in
bound
cwtl
adc
push
sbb
addr16
pop
pop
xchg
cs
stos
dec
add
xchg
xor
bound
pop
adc
or
inc
push
or
xor
inc
pop
das
push
lret
inc
mov
cmp
add
das
dec
loopne
and
pop
les
and
scas
mov
jle
not
and
jmp
popf
inc
sub
or
jnp
daa
xor
in
fcmovb
jmp
ja
aad
sub
cmpsb
shrd
add
cs
jmp
mov
pushf
add
mov
and
lock
mov
rolb
es
sti
pop
insl
mov
dec
lods
mov
adc
int3
sbb
mov
fcomi
adc
adcb
add
ja
push
iret
sbb
mov
and
andb
sbb
int3
xor
cmp
mov
leave
and
sub
add
lret
lahf
add
dec
dec
pop
clc
js
dec
into
pusha
or
dec
or
icebp
je
or
jle
sti
arpl
mov
dec
push
dec
je
or
push
sarb
inc
push
aas
and
xor
js
jne
or
sbb
jb
mov
fs
pop
fidivrl
or
mov
cmp
xchg
pop
inc
mov
or
int
shrb
loope
and
mov
add
sub
mov
loopne
insb
mov
sbb
movsb
sub
jne
push
loopne
or
add
movb
cmpl
jnp
xchg
mov
jge
push
into
sub
ret
lock
call
adc
js
setg
pop
push
mov
xor
test
add
jge
lea
dec
mov
and
sub
mov
mov
int3
pop
shlb
or
add
push
clc
mov
or
test
lock
push
pusha
roll
lret
push
sbb
xor
and
adcl
jmp
xor
push
or
xor
mov
lahf
and
add
add
or
cmpsl
add
and
push
mov
add
sub
mov
int3
or
fisubs
adc
insb
mov
push
and
cmp
push
inc
sbb
rolb
mov
ljmp
add
fidivrs
mov
dec
iret
fdivl
jno
testb
dec
push
jnp
pop
testl
cmp
add
iret
sti
shll
movzwl
iret
inc
and
xchg
scas
jbe
or
mov
test
add
cmpsl
sbb
or
and
cli
lds
dec
push
arpl
fcomps
dec
sub
testb
sub
rclb
cmp
adc
not
xor
lock
push
imul
movsl
mov
hlt
and
in
pop
fld
or
lods
inc
stos
inc
mov
sahf
xor
cmpsl
xchg
cmp
jo
mov
orb
loop
add
leave
fwait
push
sub
jno
dec
push
and
movsl
mov
mov
in
ret
xchg
paddsb
lea
cwtl
test
or
dec
sub
mov
mov
mov
insb
or
mov
pop
cmp
mov
repz
nop
imul
shufps
or
sbb
fadd
xchg
jmp
out
push
dec
xchg
shlb
mov
rcr
cmp
or
call
jnp
ss
das
jbe
ret
add
sub
enter
xor
jge
or
cmpsb
jne
data16
adc
adc
jbe
xchg
xchg
fdivrs
xchg
lds
sbb
jge
xor
lahf
xchg
sub
cmp
out
cmpl
movsl
fnsave
ret
dec
push
out
cmp
mov
stos
clc
xor
nop
inc
das
inc
pop
cmpsl
inc
aaa
sub
cmpl
dec
dec
lods
jo
imul
lea
jg
jle
or
xchg
mov
sbb
mov
adc
or
inc
or
dec
pop
jo
fisubrs
inc
sbb
sysret
add
mov
inc
sbbl
inc
les
fs
add
enter
or
sub
inc
cmp
aad
shrl
mov
idivl
pusha
enter
jns
loope
mov
cld
mov
xlat
or
andb
jge
pop
lret
or
movl
test
mov
insb
cwtl
lea
xchg
test
mov
and
push
dec
push
pop
in
nop
xchg
push
and
lahf
aas
jae
imul
push
hlt
sti
jle
ret
sub
int3
adc
push
mov
push
arpl
xlat
jnp
sbb
dec
aas
jo
mulb
xor
es
das
rol
push
fsubrl
inc
frstor
cwtl
mov
mov
xor
add
insb
outsl
add
and
orl
and
test
pop
enter
cmp
push
push
push
lock
in
test
xchg
in
testl
xorl
mov
or
adc
loope
mov
in
dec
bound
out
fsubs
and
fimull
push
push
adcl
mov
pushf
dec
jnp
jnp
mov
mov
iret
push
movsl
adcl
and
mov
jmp
push
les
lcall
pusha
mov
xchg
sub
fimull
popa
mov
mov
and
cmp
movsb
testb
movsl
mov
add
and
insb
rcll
xor
out
lea
pop
push
data16
hlt
fnstenv
es
clc
lock
push
ret
outsb
in
lret
shll
cwtl
adc
out
test
mov
hlt
xor
jnp
pop
push
subb
sub
or
test
sub
lea
push
repnz
and
test
xorb
pusha
add
cmp
mov
and
push
sub
xchg
push
andb
in
cld
cltd
mov
ret
cmpsb
xchg
inc
outsb
add
pop
mov
jmp
sbb
jg
addb
inc
in
or
sbb
xchg
adc
fsubs
or
pop
aas
icebp
aam
add
xchg
add
inc
inc
xchg
or
pusha
dec
mov
add
insb
insl
mov
cmp
lods
fs
nop
outsl
scas
sbb
jl
fs
mov
fs
cmp
and
add
sub
loope
push
andl
mov
adc
xchg
push
add
fsubs
adc
je
testb
or
loope
je
outsb
cld
mov
xor
inc
negl
das
or
pop
andb
sbbl
rcl
pop
pop
lea
pop
inc
push
mov
ror
push
or
addb
fs
add
xchg
jo
xor
add
add
adcb
mov
mov
jo
movsl
repnz
xor
sub
mov
sbb
mov
xchg
cmc
jge
mov
fildl
inc
jmp
sbb
repnz
push
dec
nop
or
mov
jno
or
jbe
push
fimuls
sub
mov
pop
rorb
cmp
fbstp
mov
daa
loopne
int
mov
icebp
mov
inc
and
mov
cmp
insb
test
and
push
pop
cmc
mov
xchg
push
lock
push
aad
adc
sub
xchg
and
sub
inc
addb
mov
push
sbbb
jae
add
add
ret
jb
out
cmp
cmp
hlt
push
call
add
xor
xchg
insb
mov
push
or
lods
xchg
add
das
test
adcl
sar
add
mov
addl
lods
out
testl
dec
pop
cld
and
xchg
sub
mov
pushf
push
incb
inc
outsl
push
jl
sub
xor
dec
push
sub
jae
or
test
imul
test
aas
mov
push
pushf
je
imulb
jne
sarb
adc
decl
inc
jp
fninit
insl
shr
daa
dec
je
pop
push
mul
ss
inc
pop
dec
sahf
jo
sub
scas
fnstenv
les
mov
or
pop
jno
push
mov
lods
mov
push
es
pushl
and
xor
xor
out
push
aam
sbb
and
or
push
or
push
iret
pop
addb
scas
pop
jp
mov
mov
lea
aam
pop
jmp
stc
or
mov
int
jmp
lds
pop
lret
cmpw
or
mov
sbb
push
lcall
sbb
ret
das
cmp
aas
sub
cmp
sbb
imul
and
mov
test
mov
ja
enter
cmpsl
lods
add
inc
sbbb
or
movlps
pop
mov
add
sbb
or
das
xor
sub
add
or
call
jne
inc
stos
test
imull
cmp
sbb
add
iret
add
or
loope
or
pusha
adc
pop
xchg
jb
xchg
xor
mov
jb
mov
sbb
jne
frstor
mov
mov
shrb
lock
in
mov
push
mov
jl
pop
add
movsb
sub
rorl
push
mov
testl
xor
pop
mov
pop
dec
add
imull
mov
add
rcl
test
xchg
mov
sbb
add
add
out
or
adc
inc
inc
insl
xor
add
push
inc
lret
add
lock
imul
out
imul
pop
adc
push
aaa
and
add
push
pop
sti
pop
mov
mov
add
add
inc
cmpsl
lcall
push
dec
adc
pop
dec
ret
inc
lods
loopw
rolb
or
mov
sub
icebp
or
push
and
test
and
sbb
mov
outsb
ret
push
mov
mov
je
xor
adc
pop
push
push
sub
jl
shrb
sbb
sbb
test
call
inc
cs
daa
mov
insb
in
imul
loop
adc
clc
sar
ret
push
xor
jecxz
sbb
fsubrs
fldenv
filds
loope
dec
out
cs
or
or
inc
test
mov
push
ds
mov
adc
push
jno
add
mov
xor
add
out
jle
roll
inc
adc
mov
ret
pop
pop
je
sbb
aaa
mov
movsl
add
mov
inc
mov
scas
mov
pop
xchg
fadds
mov
sub
ficoms
adc
adc
loopne
and
cwtl
dec
xlat
xchg
dec
enter
pop
pop
inc
ret
iret
fidivs
outsl
ret
sub
into
jne
inc
adc
rorb
sbb
fs
mov
push
mov
ret
pop
jae
outsl
and
mov
fstpt
lock
not
and
or
into
imul
loopne
ficoms
mov
lahf
dec
inc
mov
inc
inc
data16
xor
inc
faddl
and
and
push
adc
dec
and
rol
mov
add
mov
loopne
bound
and
pushl
xchg
jnp
mov
xchg
sbb
inc
mov
pop
ja
xor
cmpsb
dec
mov
sbb
add
xchg
sbb
fcomps
fistl
inc
push
sbb
clc
xor
dec
scas
roll
cli
into
dec
lds
dec
repz
inc
sub
push
dec
cmp
in
cltd
loopne
sub
mov
scas
dec
cmp
inc
fldcw
aas
mov
jne
adc
inc
cltd
pop
lds
gs
movsb
mov
movsl
sbb
jnp
pop
cmpb
mov
andl
and
or
and
mov
sti
mov
jb
adc
in
inc
mov
pop
dec
fs
lcall
mov
add
sbb
inc
outsb
mov
jo
ret
je
daa
enter
mov
push
cld
es
push
outsb
push
jbe
and
push
loop
mov
adc
cmc
loope
stos
sbbb
xor
xchg
lret
aam
push
dec
ljmp
inc
mov
lea
xchg
inc
mov
fimull
and
icebp
cs
daa
in
mov
in
dec
jge
mov
xlat
sub
xchg
repnz
push
inc
aad
jbe
pop
fmull
arpl
lods
movsl
insl
pop
sbb
popa
jmp
pop
aad
xchg
add
out
mov
sbb
xorl
push
inc
dec
jnp
inc
adc
pop
push
pop
mov
sub
sbb
pop
dec
lds
aas
pop
add
dec
insb
stc
push
dec
xlat
dec
or
mov
movb
movl
fstl
sub
mov
cmp
fwait
or
sarl
cmp
mov
nop
daa
push
adc
adc
xor
push
ljmp
push
ret
jno
adc
add
cmp
stos
or
pop
sbb
pop
and
xchg
test
stos
push
mov
data16
fmul
neg
sub
fs
push
inc
xorb
scas
adc
cmp
aam
stos
in
mov
add
dec
sbb
es
hlt
aad
je
cmp
push
xor
negb
inc
or
sub
movsb
or
es
or
jl
mov
and
push
pop
mov
ljmp
push
xor
lock
in
dec
mov
ja
call
or
sub
push
mov
scas
adc
push
push
roll
inc
mov
fbld
jmp
adc
mov
push
inc
jecxz
imul
or
imul
nop
iret
pop
stc
mov
sub
fistpl
movsl
aas
add
adc
aaa
mov
cmpl
push
adc
sbb
xchg
mov
lds
xchg
movsl
sub
or
xor
mov
mov
mov
je
push
or
cmp
xlat
mov
pop
mov
mov
or
sub
lea
shl
inc
add
push
fs
xchg
scas
mov
stos
in
add
xchg
hlt
inc
add
test
xchg
dec
mov
mov
inc
adc
sbb
xchg
adc
or
icebp
add
ret
adc
pusha
jo
push
call
jmp
dec
cmc
daa
mov
hlt
sbb
fs
orb
mov
test
mov
cmp
mov
loopne
push
sub
xor
dec
ljmp
mov
mov
push
push
imul
push
cmc
and
and
loope
js
inc
and
and
les
pop
aas
dec
cmpsl
jge
cld
xchg
dec
pop
push
adc
mov
inc
xchg
daa
rcll
sub
jecxz
xor
movsb
sbb
aam
jl
cmp
ljmp
inc
cmp
jmp
inc
push
sahf
insl
mov
jo
and
test
lods
stos
daa
push
mov
xrelease
pop
mov
sub
nop
mov
add
sti
sub
nop
shlb
pop
enter
add
test
add
xchg
push
lods
push
jb
push
das
jmp
push
ja
mov
les
out
decl
cmp
and
cmp
pop
and
sbb
jle
insl
insl
sbb
dec
pop
adc
and
inc
and
test
mov
les
dec
pop
pop
rcrl
dec
fnstenv
or
inc
sbb
lea
xor
test
lods
outsl
add
lea
lea
mov
jnp
push
xor
jae
mov
pop
pop
shlb
jmp
stos
fsubs
into
inc
inc
lods
mov
loope
add
and
testl
lahf
mov
pop
inc
inc
mov
or
xor
pop
add
mov
cmpb
cwtl
mov
pop
cmpl
or
outsl
les
jp
pop
test
xor
push
push
sub
jne
xor
mov
push
fs
mov
popa
lods
add
add
lea
ljmp
push
into
movsl
rclb
lods
sub
jle
mov
push
or
jmp
or
or
mov
cmp
add
add
jbe
clc
jle
cld
mov
xor
fadd
inc
or
mov
les
sub
dec
push
xor
sbb
inc
xchg
pop
pop
xor
adc
xchg
or
pop
mov
or
jnp
daa
push
out
icebp
xorl
in
pop
pop
add
dec
add
clc
addr16
cwtl
adc
call
scas
call
loop
pusha
pop
xchg
loopne
xorb
pop
or
andl
add
pop
xor
add
loope
push
mov
xor
mov
jo
mov
add
sub
andl
scas
push
lods
adc
and
bound
add
in
ret
add
dec
add
xchg
inc
iret
inc
xchg
inc
lahf
outsl
sahf
insb
bound
add
inc
ret
je
mov
or
push
mov
out
jl
add
gs
add
pop
inc
sbb
shr
push
push
aaa
or
pop
lahf
dec
or
add
ret
bound
fidivs
jbe
hlt
and
fcompl
ds
or
test
clc
cmpsl
sub
dec
push
inc
mov
sub
push
fildl
mov
sub
lock
insl
add
or
add
faddl
addl
pop
fisubl
push
mov
loop
mov
stos
jp
stc
push
icebp
cmp
hlt
aam
dec
ja
loopne
xchg
addr16
dec
cs
mov
popf
mov
inc
push
fcoml
sub
iret
leave
jae
adc
sub
cmp
lock
sub
sbb
popf
mov
cwtl
adc
movsb
into
and
nop
mov
cmp
push
mov
mov
ret
push
loop
xchg
mov
fisubrs
pop
pop
cld
das
or
movsb
sbb
hlt
outsl
dec
mov
mov
jg
ja
sub
dec
negl
jg
js
fildll
sbbl
call
or
fldt
adc
push
mov
insl
xchg
sbb
pop
xchg
and
rolb
ljmp
sbb
mov
ret
and
jb
and
fisttpll
movb
loopne
fldl
adc
inc
cltd
or
jo
and
mov
jl
int3
movsb
test
rol
cld
test
or
xor
jnp
rorb
mov
pushf
inc
sub
push
sahf
orl
shlb
movsb
pop
mov
dec
test
adcl
movsl
lods
fdivs
popf
mov
mov
test
sub
cmp
mov
adc
mov
xlat
xchg
movsb
inc
out
xchg
out
dec
scas
inc
inc
push
dec
adcb
sbb
jmp
in
mov
push
push
movsl
add
jne
pop
mov
dec
push
and
mov
outsl
add
lock
jbe
divl
cmpsl
incl
jbe
mov
or
pushf
movsb
add
inc
mov
imul
movzwl
and
sub
push
shll
test
daa
rcll
add
addr16
data16
arpl
pop
or
or
popa
jb
sub
jnp
mov
fnstcw
adc
jmp
or
add
test
pop
sar
test
jne
insb
rol
sbb
inc
cmp
pop
jns
sahf
or
inc
popf
frstor
rol
xchg
sbb
pop
adc
add
and
shll
add
xlat
add
pop
inc
pop
adc
clc
rcll
add
movsb
adcb
cmp
mov
mov
add
out
ret
mov
sub
pop
jl
push
add
inc
fs
fs
aam
test
adc
sbb
push
and
rclb
test
sbb
add
add
and
or
add
pop
cmp
and
cltd
cmp
pop
mov
sbb
pop
add
adc
call
lret
popa
das
or
das
adc
mov
jbe
addr16
or
pop
add
dec
add
xor
pusha
push
and
iret
dec
and
sub
add
xchg
inc
call
and
xchg
inc
adc
cmpsb
pop
sti
fdivp
push
jl
inc
lods
push
aam
fsubrl
repz
negl
addb
adc
iret
jo
nop
pop
push
push
push
jo
jns
lods
rolb
lock
in
out
shrb
es
and
push
or
jle
jno
mov
pop
sub
add
dec
add
js
nop
loopne
push
repz
addr16
shrb
femms
pop
sub
mov
push
adcl
adc
adcl
xchg
js
inc
mov
mov
dec
lods
lretw
pop
and
pop
jb
imul
mov
mov
imul
inc
ja
pop
shll
cs
dec
or
lods
out
sti
les
add
push
in
push
fwait
and
mov
push
int
fidivs
jle
or
popf
outsb
push
mov
mov
mov
rclb
lcall
das
data16
jecxz
xchg
scas
fs
lds
int
lret
pop
int3
inc
fs
dec
sbb
xor
mov
outsl
cmp
push
or
push
xchg
cmp
outsl
and
cmp
cwtl
push
jmp
cmp
or
jl
jae
cmp
jno
pop
lock
jne
jecxz
xchg
cltd
push
popa
fs
mov
jne,pt
add
inc
aas
jb
sbb
mov
mov
dec
lret
cmp
lcall
xlat
add
or
movsl
or
rorb
add
cli
push
and
fistl
xchg
lods
add
xor
icebp
add
cmpsb
dec
jne
fs
cmp
fsubp
fs
add
loope
xor
jg
je
pop
mov
sub
sbb
lods
aaa
hlt
xchg
inc
inc
sbb
out
add
push
jne
xchg
inc
adc
xor
clc
das
in
lock
xor
push
les
jbe
sub
gs
adc
jecxz
sub
icebp
jno
lcall
fst
repnz
or
and
jae
add
ljmp
outsl
add
outsl
ljmp
mov
aas
adc
jo
aaa
xchg
push
outsw
or
push
jno
xor
and
or
and
pop
icebp
mov
push
daa
daa
daa
daa
xchg
pop
fstl
jae
clc
ret
testb
stc
incl
mov
push
pushf
iret
cs
push
xchg
lret
into
jno
stos
push
push
cwtl
cs
shr
cmp
mov
imul
or
jle
dec
movsl
push
bound
pop
test
mov
pop
mov
pop
cmp
rolb
imul
fmul
test
ljmp
aam
xor
fs
xor
test
ret
addb
insl
imul
jno
mov
add
inc
fcmovnb
dec
pusha
aad
jae
das
and
pop
push
inc
repz
js
push
push
scas
adc
or
inc
add
gs
dec
sbb
or
cmp
lret
stos
jns
mov
push
sub
arpl
iret
bound
popl
cmpsl
pop
frstor
je
loope
xchg
add
pop
push
xchg
gs
mov
pushf
adc
sbb
pop
inc
es
rcll
mov
adc
stc
mov
inc
adcl
or
sbbl
sbb
cmp
fwait
ljmp
sub
imul
jnp
test
bound
pop
dec
in
cwtl
shl
sub
or
push
xchg
jl
movsb
adc
push
push
or
inc
subb
xchg
fdivrs
cmpsl
pop
mov
adc
adc
sbb
push
icebp
jl
fcomps
xor
addb
and
cmp
and
pushf
test
loope
push
daa
inc
xchg
pushl
movsl
adc
adc
daa
in
dec
cmp
faddl
adcl
sub
lret
mov
add
cmp
movl
pushf
push
pop
ds
sbb
cld
in
inc
push
or
inc
insb
enter
adc
sbb
rolb
sub
std
mov
push
mov
or
fst
cmp
and
add
and
pop
cmp
dec
mov
cmp
xor
test
or
or
mov
mov
inc
inc
dec
cmpsl
jge
stc
inc
shr
mov
mov
cmp
daa
and
pushl
inc
cmp
sub
mov
iret
mov
das
push
fadd
out
adc
and
inc
incl
in
and
gs
adc
popa
or
or
incl
or
inc
cmpl
inc
and
loope
fisubl
cltd
pop
mov
test
mov
cs
or
or
cs
cs
add
jae
push
je
inc
inc
inc
inc
pop
jns
mov
fldl
inc
inc
inc
outsb
xchg
mov
inc
cs
inc
cld
pop
jbe
arpl
inc
inc
mov
push
call
mov
pushf
jnp
pop
or
sbb
test
cld
adc
cmp
inc
idivl
or
pop
pop
inc
push
add
js
sub
mov
push
dec
add
popa
aam
mov
or
arpl
mov
sub
xor
adc
and
xchg
inc
mov
scas
or
sti
lcall
cmp
or
cmp
jns
fs
jne
sbbl
lret
and
xlat
and
lods
dec
sub
xor
test
out
addr16
jno
scas
or
lock
cmp
jnp
push
cmp
imul
xor
imul
movzwl
inc
dec
nop
addl
sbbb
call
lea
mov
std
jp
and
jb
lea
gs
jnp
mov
filds
lods
jl
out
decl
sbb
packsswb
sbb
mov
inc
mov
loope
shl
push
mov
pusha
movsb
push
sbb
ss
outsl
mov
inc
push
cs
xor
mov
imul
sbb
push
sub
dec
or
fists
push
sub
lods
push
rcll
mov
pop
dec
cmpl
pushf
add
jge
xchg
shrl
mov
imul
mov
dec
lods
fwait
cmpl
lret
addr16
adc
stos
stos
stos
mov
mov
pop
lcall
add
mov
xor
loop
or
push
mov
xor
cmp
or
xchg
mov
xor
cltd
adc
or
adc
and
ret
cmc
int
pop
add
sti
ja
insb
ljmp
roll
prefetcht1
push
pop
inc
pop
loop
sub
js
add
adc
cmp
repz
inc
inc
inc
or
mov
inc
ljmp
jg
jge
add
adc
adc
outsb
jae
rcrb
xor
mov
mov
andps
pop
daa
jge
lods
mov
jge
test
push
and
in
sbb
les
inc
inc
repz
test
inc
sub
out
or
jb
addl
mov
add
mov
rclb
enter
je
push
outsl
ja
fadds
or
jge
sbb
adcl
lds
nop
nop
jg
dec
xchg
or
mov
lods
pop
and
xor
dec
pop
xor
mov
cmc
mov
mov
pop
test
mov
cmp
inc
inc
out
fisttpll
dec
in
xchg
push
jmp
sbb
nop
out
aad
push
lods
xchg
insl
imul
xchg
test
add
pop
inc
and
xchg
pushf
or
mov
adc
pop
rorb
push
mov
sub
pop
fcmovnu
jg
push
bound
les
add
xchg
mov
popa
inc
cmp
mov
cmp
pop
pop
push
subl
xor
leave
jb
pop
add
push
xchg
and
pop
dec
pop
call
stc
or
test
shll
mov
ljmp
gs
adc
push
xchg
jge
ja
jno
cmp
jo
lcall
xlat
push
loopne
loop
sbb
add
negl
sub
addb
cmpsb
sub
cld
subb
bound
mov
pushf
sbb
adc
outsb
imul
or
add
xchg
sub
aad
js
pusha
iret
mov
das
sbb
and
push
sbb
mov
rorl
push
push
push
add
es
cmc
push
and
jp
jnp
adc
pop
xor
sub
outsl
mov
xor
fists
aaa
pop
jbe
jmp
or
pop
jl
mov
add
add
popa
and
cmpsb
jmp
test
mov
outsl
jo
mov
inc
imul
pushf
xorb
stos
sub
rcrl
daa
pusha
cmp
test
sbb
or
inc
loopne
leave
mov
lods
movsl
dec
sbb
out
ret
pop
xchg
imul
insl
sub
adc
pop
push
ss
add
or
popf
es
add
nop
add
jno
flds
ljmp
pop
fdivs
inc
add
xchg
dec
mov
add
fnsave
enter
or
pushf
pop
cmp
dec
sbb
inc
or
call
mov
pushf
popa
jns
inc
sub
push
xchg
ret
shrb
xchg
mov
mov
sbb
testb
sbb
sbb
sbb
outsl
xchg
mov
mov
sub
enter
add
dec
std
pop
pop
inc
mov
ss
add
enter
xor
xor
pop
mov
adc
sbb
xchg
out
sub
adc
mov
mov
jo
subb
shll
mov
test
jnp
push
scas
arpl
xlat
xchg
bound
cmp
repz
push
ret
movsl
aad
or
mov
sub
adc
pushf
fldt
pop
pop
punpckhbw
mov
adc
push
and
mov
test
loopne
xor
xchg
insb
jl
mov
adc
mov
xor
lods
rcll
sbb
cmpl
das
xor
push
sbb
push
sub
add
testl
inc
jle
and
ret
dec
cmp
addr16
push
inc
pop
rolb
stos
leave
es
fiaddl
rol
add
loop
push
pop
sub
inc
sbb
mov
or
inc
inc
pop
dec
clc
lahf
add
jnp
push
fwait
pusha
arpl
inc
or
push
imul
push
sub
push
and
or
add
outsb
and
aaa
enter
ret
adc
inc
dec
sbbb
add
pop
das
bound
or
and
lahf
mov
loopne
lret
leave
adc
and
gs
pop
movsb
aam
pop
mov
inc
inc
fistpl
in
jno
testl
daa
outsb
xchg
and
xor
push
mov
xchg
adc
sti
fldt
mov
mov
jge
lods
jbe
sbb
sub
xchg
sarb
cmpsb
jge
cmp
test
xor
sahf
dec
cld
sbb
imul
popa
test
movsb
stc
push
xor
ret
add
sbb
jp
or
call
xchg
xor
rorb
arpl
jmp
inc
inc
cmp
sbb
dec
xor
add
cmp
dec
inc
mov
xchg
mov
jmp
loopne
shll
push
les
push
call
mov
adc
insl
or
sub
data16
daa
inc
fdivrl
loopne
lods
push
test
adcb
jne
mov
stos
add
sbb
clc
insl
movsb
outsb
imul
pop
pop
xchg
push
pop
xchg
dec
sbb
outsl
lcall
test
test
cs
push
sbb
xchg
sub
cmpsl
and
pop
add
add
mov
mov
mov
dec
ret
xchg
jmp
in
dec
jno
jg
pusha
fsubs
push
pop
mov
jb
nop
jmp
mov
add
into
ds
pop
ljmp
inc
jmp
mov
hlt
xor
and
ljmp
jl
dec
and
jb
or
rcr
pop
mov
sti
jmp
inc
cmpl
add
dec
es
pop
xchg
xchg
bound
je
pop
push
mov
clc
inc
in
pusha
adc
add
sub
negl
and
mov
ficomps
test
and
sbb
fisubs
inc
pushl
xchg
loopne
clc
adc
xor
push
mov
popa
insb
incl
test
arpl
jmp
addr16
jle
push
xlat
call
cmpb
and
lods
xchg
out
je
or
sub
pop
lock
adc
lods
adc
dec
fisubl
jle
popf
outsl
add
sub
jle
mov
sub
adc
or
adc
jle
pop
das
clc
xlat
scas
pop
pop
mov
out
fnsave
jmp
cmp
je
in
push
hlt
aaa
sub
lcall
xchg
mov
in
in
fists
in
cld
push
sbb
pop
jne
jbe
mov
inc
jg
cli
and
add
or
mov
into
xchg
adc
xor
nop
inc
test
xchg
sbb
aaa
sub
addb
clc
sbb
lods
and
or
adc
push
cmpsb
lock
ljmp
outsl
orb
inc
imul
jb
inc
mov
push
jnp
pop
push
mov
pop
iret
adc
inc
push
nop
in
push
les
and
xor
sbb
js
xchg
stc
mov
fldcw
pop
jo
push
aas
cmp
addb
push
xchg
or
outsb
or
xor
nop
imul
loop
outsb
and
push
roll
add
sbbl
or
js
leave
jb
sbb
xor
jmp
xchg
or
sbb
les
enter
mov
or
mov
mov
mov
aaa
cmp
orb
add
cmp
call
cmp
push
les
inc
mov
mov
push
paddq
fwait
mov
or
aad
dec
lock
adc
pop
loopne
add
cmp
add
inc
arpl
push
sub
orb
fimuls
hlt
roll
cmp
imul
pop
cld
adc
mov
jmp
fbstp
scas
add
and
pusha
fistl
sarb
fadds
cmp
sub
ret
jg
cmpl
mov
addr16
or
mov
inc
cs
test
inc
push
pushaw
sbb
idiv
movups
sub
jne
inc
cmpsl
es
fildll
ret
xchg
sbbb
mov
sbb
or
cltd
cmpb
mov
jo
syscall
or
jmp
xor
stos
stos
mov
out
jle
adc
dec
or
add
sar
pop
fs
cmpl
jg
and
adc
test
mov
mov
jo
dec
call
es
add
cmp
jbe
ret
add
pop
arpl
popa
cs
lcall
adc
incb
mov
sub
sbb
xchg
sub
or
orb
adc
adc
fs
lds
aas
pop
mov
and
das
lret
push
sbb
cmpsb
dec
mov
fistps
jg
jne
or
imul
cmpsl
xor
mov
xchg
sbbb
dec
sbb
add
xor
cmp
jo
adc
lea
mov
push
testl
jecxz
sbb
je
pop
fsubrp
lea
xor
lea
fwait
aam
push
or
movsl
fcompl
movsb
aam
and
adc
inc
dec
add
bound
dec
lods
lock
mov
loopne
sbb
add
dec
hlt
cltd
std
cmp
out
cmp
or
or
xchg
icebp
and
pop
add
lret
adc
call
xorl
out
sbb
push
dec
cmpsl
mov
aas
or
or
pop
lret
sub
mov
xchg
or
add
rclb
das
and
pop
and
je
pop
add
mov
pop
mov
jecxz
cmp
mov
add
loop
lret
adc
xchg
lcall
pusha
push
jl
jo
jecxz
or
adc
cltd
lcall
testb
cmovns
push
jb
xor
aas
jmp
mov
sbb
mov
in
sub
out
and
fcomp
in
and
mov
push
push
adc
or
ret
aad
mov
je
jp
mov
mov
call
test
call
je
jmp
mov
pop
and
and
lods
clc
repnz
adc
testb
inc
cli
rcrb
adc
mov
cltd
stos
inc
mov
and
mov
jo
daa
iret
arpl
xchg
pusha
add
test
iret
cmc
dec
dec
sbb
adc
pop
inc
in
adc
inc
aas
mov
ret
cmp
inc
jg
adc
cmp
jge
aad
cmp
jae
mov
dec
dec
push
insb
jmp
nop
or
jbe
sbb
xor
pop
mov
sbbb
xorl
cmp
cmpl
sbb
subb
mov
lods
sarl
push
jmp
add
pop
inc
xchg
lock
xchg
mov
dec
inc
addl
or
push
and
jmp
adc
push
add
mov
outsb
lahf
lea
sbb
adc
imul
add
ret
sbb
inc
add
incb
dec
add
xchg
stos
add
lcall
insb
mov
dec
outsl
add
test
je
pop
jo
test
dec
adc
cmp
jne
inc
mov
add
push
sub
orl
gs
loope
xor
mov
mov
jns
adc
push
xchg
xor
ret
rol
mov
push
dec
rolb
push
dec
aad
mov
jecxz
jle
jno
js
stos
jmp
push
inc
test
push
repz
in
mov
sub
xor
push
orb
dec
and
push
add
inc
arpl
rol
mov
sub
mov
imul
fimuls
leave
push
lret
clc
or
into
push
clc
mov
mov
adc
leave
ficoms
or
addb
sub
inc
mov
lahf
xchg
addl
mov
and
sub
movswl
push
sub
repnz
push
xchg
test
sub
cmp
push
inc
mov
jo
xchg
jp
inc
test
adc
lret
add
test
rorb
loopne
inc
mov
test
lods
add
mov
shll
mov
push
stos
xor
add
and
fsubs
inc
int
call
push
mov
sbb
enter
pop
adc
test
mov
out
dec
mov
call
dec
shrl
andl
cmp
mov
mov
cwtl
aaa
sbb
pop
or
faddl
and
lods
inc
shll
adc
fidivl
inc
adc
xchg
pop
lock
push
push
jg
scas
popa
and
ret
mov
sbb
dec
dec
popf
mov
fsubrs
sub
mov
setne
push
les
mov
pop
or
cmpsb
mov
lods
andl
push
cmp
dec
iret
dec
mov
jne
test
dec
lock
mov
data16
or
add
add
and
pop
jp
mov
dec
cmp
enter
enter
js
push
mov
mov
and
fildll
jo
sbb
es
iret
add
add
or
mov
std
inc
jmp
insl
dec
clc
outsl
add
sub
int3
sub
fcmovnb
pushl
lea
lea
ljmp
aam
je
aam
xchg
les
test
lds
jo
inc
sub
incb
inc
in
xor
cmp
and
mov
xchg
popa
dec
add
sub
or
sub
and
call
sbb
fs
inc
sub
jo
mov
mov
xchg
rorb
push
mov
fcoms
mov
cmc
adc
je
add
fmuls
jmp
and
sub
fmull
rcl
lea
cmc
jne
mov
test
add
movb
cs
icebp
ret
push
jbe
sub
push
hlt
sub
push
mov
test
sub
fbstp
cmp
orl
jnp
mov
cmp
jl
xor
mov
push
dec
add
mov
ror
stos
into
stos
mov
xchg
push
xchg
dec
test
ret
pop
js
test
sbb
jns
push
adc
in
in
lret
jg
shrl
aam
dec
xor
add
push
les
inc
push
out
adc
cltd
rcll
dec
call
mov
dec
cmp
add
lds
cli
rorb
xchg
cwtl
jne
test
cmp
lret
xchg
test
mov
imul
push
in
or
xchg
or
jmp
mov
adc
pop
fisubrl
xor
push
sub
fxch
lcall
imul
arpl
shlb
and
and
pushf
dec
rcl
cs
aaa
je
movsb
dec
push
cld
or
dec
lea
add
int
xor
cmp
sub
add
daa
add
mov
pusha
daa
rorl
inc
adc
push
rorb
test
daa
mov
shlb
scas
test
sti
adc
aam
lahf
lock
adc
mov
or
leave
sub
add
call
fiaddl
sbb
xor
sub
push
fnstsw
inc
jp
push
fldl
dec
or
mov
mov
and
push
inc
iret
mov
push
xchg
ljmp
enter
cmp
aas
add
orl
sbb
test
imul
js
jg
add
or
fcoms
cmp
loopne
dec
mov
test
loope
les
dec
mov
jbe
lret
popf
idiv
aad
add
sbb
js
data16
scas
push
nop
movups
pop
ret
into
pop
push
add
enter
nop
inc
jne
clc
sub
or
loopne
fcoms
mov
add
sub
add
inc
gs
mov
mov
je
pop
sub
inc
push
ret
jno
aas
mov
rolb
and
xor
lock
add
in
mov
enter
sub
test
or
dec
stos
mov
or
mov
mov
and
push
add
xchg
jns
cmp
jmp
je
aas
adc
rcrl
inc
pop
nop
or
adc
adc
and
adc
aad
rolb
fwait
mov
hlt
in
stos
mov
fsubrl
pushl
jne
inc
je
lods
mov
mov
pop
jae
cltd
pop
inc
cmpsl
or
test
jle
xchg
fdivrs
adc
sbb
dec
subl
cmp
xchg
add
fcompl
popf
mov
inc
add
cs
dec
cmp
decl
call
sub
xor
jo
test
dec
add
jno
xor
sbb
les
dec
nop
iretw
sub
push
fsub
add
mov
jnp
mov
cmp
mov
mov
dec
cwtl
xor
dec
lret
shlb
xchg
pop
addl
pop
inc
popa
xchg
fnstsw
or
cmc
pop
sbb
leave
inc
outsl
dec
jge
sbb
bound
mov
inc
adc
adc
scas
xlat
sbb
adc
out
fstps
mov
lods
aas
mov
lods
dec
mov
jne
aas
push
mov
jne
pusha
or
mov
insb
push
in
pop
push
or
sub
in
data16
sub
gs
mov
inc
push
xor
pop
loopne
rcl
inc
aad
xchg
inc
xor
or
out
pop
ljmp
or
js
pop
add
xchg
daa
ss
cmc
sub
cmp
jge
cmp
push
or
sub
mov
xorl
insl
bound
iret
in
pop
and
push
sbb
in
mov
add
xchg
stc
mov
stos
ljmp
sub
lods
les
cld
test
push
jns
icebp
mov
or
cmp
lock
jo
loopne
in
jb
or
mov
and
or
push
mov
mov
movups
mov
cmp
movsl
movsl
add
jge
inc
inc
xchg
adc
cltd
mov
push
add
test
test
mov
andb
mov
test
mov
inc
lock
outsb
and
pop
ret
sbb
add
jne
add
and
ret
pop
mov
ret
or
loop
xchg
xchg
cmp
es
lret
sbb
imul
adc
imul
mov
daa
sbb
out
adc
rorb
mov
jbe,pt
mov
cmp
adc
ror
inc
or
in
sbb
adc
call
fs
inc
add
test
jo
and
inc
or
stc
dec
sbb
mov
xchg
inc
and
and
sbb
dec
adc
dec
call
pop
mov
adc
call
and
leave
les
in
loopne
call
and
jb
inc
pop
pop
dec
loopne
call
stos
outsb
pop
mov
jb
ljmp
ret
add
rolb
or
dec
in
adc
call
add
adc
fwait
movups
ret
push
adc
sbb
mov
add
and
adcb
sbb
dec
jo
aad
or
jo
cmpsb
mov
sub
xchg
dec
inc
enter
dec
mov
jg
int3
mov
mov
popa
adc
inc
faddl
rcl
testb
inc
int
push
ret
jg
adc
mov
adc
jo
sbb
popf
or
mov
xchg
pop
inc
and
mov
jge
add
jmp
jmp
data16
sub
add
xchg
ss
jge
int3
gs
insl
scas
pop
popa
shlb
jmp
push
sbb
pop
pop
inc
add
faddl
sub
mov
cs
nop
scas
je
pop
inc
outsl
inc
cmp
jb
xor
test
pop
mov
imul
mov
lods
nop
clc
jmp
xor
pop
test
ret
mov
and
cld
shrb
mov
fisttps
xor
push
xor
inc
and
xor
pop
addr16
inc
xchg
out
mov
lcall
js
cwtl
push
fstps
jmp
push
inc
fdivrs
or
ret
or
mov
or
sub
ror
sbb
xchg
loopne
rcrb
iret
jl
or
nop
clc
and
xchg
pop
mov
push
dec
add
dec
call
adc
nop
xchg
adc
sbbl
movb
fmuls
pop
jmp
jle
sbb
inc
cmp
out
mov
std
fistpl
sub
pop
push
jp
add
rorl
push
clc
mov
rorl
or
or
cld
xchg
mov
pop
hlt
enter
xchg
loopne
pop
and
sbb
mov
add
push
cwtl
dec
rcrl
loopne
call
adc
inc
insl
sbb
daa
jecxz
mov
and
mov
jne
insb
push
jo
xor
scas
loopne
lds
adc
inc
adc
js
cld
mov
sbb
push
and
jecxz
xchg
pushf
pushf
xor
aam
aam
dec
xor
pop
test
pop
dec
jmp
jo
push
pop
lea
hlt
cmp
mov
mov
test
mov
pushf
addb
sbb
les
push
add
adc
dec
xor
dec
dec
lahf
cmpb
lret
bound
mov
ret
cmp
imul
xor
test
or
and
and
lret
ret
pop
sub
movb
or
rolb
dec
cmp
out
xchg
loopne
addr16
loopne
popa
jl
popa
in
and
jae
jge
fstpl
or
test
mov
subb
or
loopne
push
push
xor
add
cmc
shr
jno
das
pop
iret
loope
adc
push
fdivl
and
add
cmp
adc
cmp
pop
rcr
je
iret
cmp
xchg
sbb
mov
push
sbb
jp
in
divl
sub
ret
add
sbb
sbb
dec
and
ss
js
xor
and
fmuls
mov
jmp
ret
aas
xor
push
sbb
cmp
jno
les
in
js
aam
mov
icebp
or
nop
clc
inc
fnstsw
inc
lret
jb
sahf
mov
clc
sub
jne
stc
sub
cmp
push
jmp
daa
in
ss
dec
fildl
mov
data16
movl
int3
sub
cmpb
add
or
push
arpl
test
adc
dec
ret
addr16
push
fisttps
or
or
xchg
test
js
scas
inc
psubusw
or
imul
aas
cmp
call
jmp
popa
xchg
xchg
inc
pop
cmpsl
and
fcomi
cmp
or
xlat
cmpsb
loopne
and
xchg
insb
pop
sbb
pushf
add
shlb
sub
and
inc
outsl
inc
inc
sbb
sarb
js
pop
or
retw
inc
cmp
push
adc
imul
or
insb
and
adcb
add
mov
adc
jp
in
mov
aas
aas
je
mov
popa
mov
push
lret
adc
push
add
adc
adc
inc
cmp
mov
push
js
dec
pop
jne
daa
inc
or
xchg
shufps
pop
dec
pusha
mov
pop
cmp
push
fadds
or
outsb
sub
out
ds
inc
push
inc
sbb
inc
nop
inc
cmpsb
dec
or
adcl
insl
jl
out
cs
daa
push
enter
jg
adc
clc
ret
inc
mov
in
xor
in
fildl
sarb
std
xor
loopne
adc
jae
jecxz
and
sahf
push
or
adc
adcb
mov
aas
push
ds
dec
xor
add
pop
cmp
fs
mov
inc
lret
aas
lcall
movb
lods
nop
adc
mov
inc
daa
pop
xchg
add
scas
push
fsubrl
cmpl
pop
dec
ss
sbb
cs
pop
mov
dec
xorb
sub
je
jnp
addl
mov
xor
dec
aas
sbb
es
popw
mov
pop
out
sahf
or
xchg
sbb
movsb
int
pop
add
jp
pop
or
push
fistl
mov
adc
push
xchg
inc
lds
jo
sti
andl
or
rorb
icebp
inc
repz
and
cmp
or
mov
cmpb
and
xchg
ret
jne
xor
ret
xor
jno
sbb
jno
fimuls
mov
orl
adc
jmp
mov
jne
call
inc
les
sbb
mov
and
pusha
sbb
or
hlt
pop
inc
inc
hlt
mov
int
into
adc
sub
lock
insb
pop
rorb
pop
hlt
push
bound
ja
inc
es
add
rclb
fsubs
adc
js
xchg
arpl
jb
lea
adc
stos
xor
ss
movsl
or
pusha
jo
sbb
mov
fiadds
pop
mov
xchg
push
mov
sub
cmpsl
push
inc
popf
push
sbb
or
xchg
data16
rcl
inc
jmp
mov
cld
dec
out
adc
mov
push
adc
decl
mov
pusha
xor
and
ret
fnstcw
xor
loopne
cmp
push
or
push
xchg
fbstp
fdivr
ljmp
out
pop
loopne
xchg
iret
or
jo
xchg
rolb
in
pop
mov
out
dec
inc
add
enter
pop
cmp
cmp
mov
mov
lret
mov
push
lret
cmp
xchg
push
xor
out
movsb
push
test
repz
mov
mov
inc
aas
lock
and
xchg
mov
xor
jge
fidivl
push
sbb
sbbb
jne
ret
and
add
jnp
fildll
fcoml
jb
inc
imul
pop
mov
test
aas
insb
xchg
pop
jl
les
or
fwait
cli
subl
jle
add
ds
xchg
test
les
xchg
xchg
sahf
inc
fmuls
push
sub
adc
xchg
inc
mov
mov
lock
add
cmp
pop
mov
sub
inc
sub
in
adc
xchg
mov
and
mov
cs
mov
xor
in
mov
sub
cmp
push
push
cmp
in
sbb
daa
push
adc
push
pop
daa
pop
lcall
je
xor
jl
inc
inc
imulb
sub
mov
mov
mov
xor
or
adc
or
lret
outsl
lds
xchg
adc
movsl
test
dec
or
mov
jle
pop
adc
aas
ret
push
push
js
scas
ja
jl
loope
inc
lods
push
js
dec
lea
and
mov
pop
movl
rolb
adc
sub
inc
test
push
push
lds
jb
mov
xchg
inc
dec
push
or
cmpsb
test
pop
mov
sub
es
rolb
or
pop
pop
ret
adc
cmc
shr
dec
jo
or
xor
sub
xor
sbb
pop
mov
sbb
call
or
pop
lock
mov
inc
push
icebp
pop
es
pop
push
and
fucom
mov
rcrb
loope
mov
js
cmp
cmp
aad
dec
cmpsb
or
dec
jne
mov
into
test
xchg
bound
push
pop
pop
cwtl
add
sub
movsb
aad
bound
xchg
or
pop
push
sbb
and
hlt
push
or
or
sbb
mulb
aaa
pushl
dec
inc
add
adc
sahf
imul
gs
and
in
stos
push
mov
pop
test
pop
sub
rcrb
into
sub
in
mov
in
call
push
shlb
add
fisttpl
sub
jne
aam
loopne
sar
sbb
cmp
sbb
or
mov
or
repnz
mov
xchg
test
scas
sbb
inc
aam
stc
pop
sahf
add
adc
movl
pop
dec
xlat
mov
inc
push
sbb
inc
bnd
int3
popa
cmpl
mov
adc
mov
jg
push
les
cwtl
nop
pop
fwait
mulb
and
push
popa
dec
xor
sets
aam
jmp
daa
mov
xchg
das
push
in
je
and
jo
push
sbb
sti
dec
sti
shlb
rcl
rorb
push
pop
iret
filds
add
xor
push
decl
push
dec
jp
mov
jl,pt
pop
aam
pop
xchg
imul
fadd
std
fidivl
in
mov
mov
or
je
mov
push
pop
sub
push
mov
pop
adc
jecxz
inc
mov
loopne
daa
adc
loope
adc
sarb
xchg
insl
mov
adc
dec
ficompl
mov
mov
les
jmp
push
mov
mov
mov
das
adc
popf
push
movsb
sbbb
dec
dec
loope
or
sarb
jbe
push
pop
rorb
or
aaa
inc
and
pop
and
sbb
jmp
inc
testl
adc
pop
clc
cmp
aam
std
in
popf
pop
aas
push
push
js
jne
pop
jb
xchg
sub
pop
xor
sbb
dec
sub
repnz
and
inc
outsb
push
dec
mov
cmp
cmp
or
jge
cmp
mov
call
iret
xor
jmp
mov
push
in
ret
scas
sub
add
xchg
sub
sub
jne
xchg
jno
ja
lahf
adc
dec
rolb
push
aam
dec
lods
or
inc
fwait
or
enter
mov
fcompl
push
push
lods
xorl
dec
xchg
iret
sub
or
lods
cmp
inc
mov
push
dec
aad
out
add
jno
mov
and
lock
add
cmpsl
cmp
in
rcl
or
xchg
scas
sub
jbe
mov
lret
je
sbb
or
xor
inc
movb
push
into
rorb
mov
ret
inc
pop
sub
mov
cmpb
mov
mov
mov
add
or
sbb
add
jmp
outsb
loope
xor
jb
mov
jle
aaa
dec
and
inc
jb
adc
movsl
lods
add
movsl
and
cmp
cmp
in
mov
add
imul
cmpsb
in
jmp
pop
cmp
mov
mov
mov
inc
xchg
xlat
mov
add
pop
ljmp
mov
mov
inc
sbb
jo
pop
push
jo
inc
inc
mov
or
mov
cmp
mov
dec
or
xor
rolb
es
push
cmpsl
cmp
into
adc
or
dec
add
xor
and
pop
sub
inc
sbb
or
stc
pop
mov
or
push
shll
cmp
cmp
push
jns
sbb
xor
and
cs
subb
add
in
mov
and
sub
pop
pusha
inc
movsl
mov
mov
pop
hlt
pushf
lods
xor
sub
add
lock
push
fs
xchg
pop
xchg
mov
hlt
sbb
pop
and
lods
les
sub
popa
lea
dec
sarl
pusha
fimuls
shrb
cltd
sbb
aam
movsl
sub
fildl
xchg
out
rcr
adc
cmpsb
adc
in
fsubrp
and
cmp
aam
xchg
sarb
mov
cwtl
ret
es
adc
adc
rol
pop
daa
cs
cmc
mov
mov
cmpl
fidivs
cmp
rcrb
je
enter
and
addr16
popf
hlt
dec
mov
push
jo
dec
jp
inc
adc
sbb
inc
les
add
cmp
adc
add
add
sahf
pop
sub
add
pop
mov
mov
push
mov
ret
movl
dec
or
pop
daa
neg
enter
adc
or
daa
xlat
int
xor
in
push
lods
fdiv
in
loope
cltd
sbb
jno
add
leave
add
sbb
xchg
dec
fsubs
call
pop
add
iret
nop
lods
jno
loop
daa
push
sbb
or
clc
push
push
imul
push
clc
addl
cmp
loopne
or
lock
xchg
add
sbb
adc
or
add
cmp
and
pop
movsb
pop
push
pusha
inc
orl
inc
xor
jae
in
mov
jle
pop
sub
dec
jns,pn
mov
popa
pop
and
scas
daa
inc
jns
mov
inc
pop
or
mov
adc
and
cs
fnstsw
cmp
inc
or
adc
push
push
lret
inc
sbb
cmpsb
dec
mov
ljmp
leave
lods
rcrb
icebp
out
dec
jge
push
jp
cmp
sbb
ficomps
cwtl
rclb
ret
aam
and
test
arpl
cmpsb
mov
cs
popf
fmuls
and
and
test
inc
and
and
imul
jp
filds
push
inc
jl
push
push
mov
aad
mov
add
add
and
jnp
pop
sub
mov
add
jbe
les
add
cld
test
push
cmp
out
std
movsl
int
imul
cli
cmpxchg
test
adc
imul
or
incl
aam
arpl
lods
or
in
movsl
lret
adc
xor
dec
jmp
and
fsubrp
jp
cmp
dec
mov
in
testb
mov
xchg
add
add
and
xchg
cld
nop
call
mov
scas
inc
and
inc
movsl
add
inc
mov
pop
add
mov
clc
rcrb
lcall
and
sub
hlt
call
mov
adc
add
in
or
in
jo
adc
shrb
cmc
imul
and
xor
pushf
adc
pop
lds
aam
jo
cmp
imul
dec
or
fcomps
nop
push
data16
popa
jne
mov
add
push
es
inc
xor
cmpsl
xor
or
repz
pop
dec
ret
movl
sahf
pop
jo
mov
shrb
mov
add
push
sub
push
insb
lods
hlt
popa
inc
inc
movsb
cmpsb
in
jle
lock
pusha
cli
cli
xor
pop
clc
cmp
jne
push
dec
loop
insb
inc
inc
shl
mov
push
lcall
test
pop
xor
pop
ss
inc
cmp
add
mov
xchg
xchg
inc
or
rolb
les
iret
sbb
cmp
dec
jnp
xchg
lock
and
call
push
and
jge
fucom
orb
cld
xchg
and
add
mov
push
mov
adc
movl
sub
inc
inc
sahf
ds
inc
add
nop
xchg
and
cmp
fsubs
jge,pn
int3
subb
push
add
scas
pop
xor
ja
mov
push
mov
cmp
push
sbb
test
mov
cmp
mov
jbe
cmp
icebp
jnp
aaa
mov
push
sub
xchg
push
movsb
rcl
cmp
pop
xor
loopne
pop
cmp
or
popf
cmove
and
sub
iret
je
add
pop
les
push
inc
mov
push
and
xchg
cmp
out
sub
push
arpl
mov
lret
push
je
test
mov
inc
int
cmpsb
loopne
cmpsl
out
mov
xchg
xlat
pop
or
xchg
cmpsb
push
cmpb
mov
es
jle
lock
or
test
test
mov
fcoml
xor
adc
or
mov
and
adc
adc
shr
or
inc
push
add
mov
popa
in
pop
xor
or
sbb
dec
jno
stos
flds
mov
push
lcall
repnz
adc
lods
xor
inc
mov
ret
sbb
lret
inc
addl
mov
and
jg
nop
xchg
pop
lock
xor
cmp
cmp
xchg
adc
test
sub
aam
gs
sbb
jne
out
add
push
int
mov
adc
in
testb
push
ret
fsubs
push
xchg
loopne
jge
out
add
xor
add
jp
je
sub
inc
mov
sbb
pop
imul
and
and
pop
dec
or
lock
mov
mov
pop
xlat
and
push
ficomps
lock
lretw
pop
call
lret
xchg
rclb
add
mov
or
xor
js
cs
xchg
mov
jae
imulb
mov
sahf
fstpl
pusha
fldenv
mov
jmp
jmp
sbb
push
js
lock
adc
rolb
xchg
xor
adc
inc
sub
xor
js
decw
enter
fcomp
push
mov
jb
xchg
lret
or
andb
mov
mov
xchg
or
adc
push
out
out
adc
mov
push
push
push
in
aaa
adc
push
mov
data16
cmp
and
push
movsb
mov
push
push
mov
jne
dec
enter
fsts
popf
mov
stos
dec
dec
dec
adc
dec
and
pop
xlat
dec
or
jge
testb
jmp
jp
sbb
insl
aaa
test
adc
cmp
or
or
call
inc
movsb
aad
popl
jmp
movd
daa
faddl
inc
sbb
test
jne
add
or
cmpsb
xlat
sub
mov
rolb
pop
dec
sub
cmp
je
add
cmp
nop
int3
inc
lods
dec
fiadds
xchg
mov
jo
xor
cmpsb
inc
cmp
xchg
xor
xchg
mov
mov
inc
mov
cs
adc
addb
ds
cmpl
or
push
jne
arpl
inc
mov
jle
and
fcomp
loop
fnstenv
daa
loopne
or
or
adc
mov
or
adc
dec
dec
push
popa
in
cmp
xor
aaa
sub
scas
js
pop
aas
add
add
add
and
pop
ljmp
aaa
lds
xlat
enter
pop
adc
cmp
add
cli
call
into
adc
mov
daa
and
dec
in
sub
pusha
sti
push
xorb
add
dec
les
jge
mov
icebp
outsl
loope
sbb
iret
push
cmp
loope
test
mov
js
aas
arpl
loop
testb
add
jecxz
jnp
add
add
aaa
add
adc
pop
push
mov
adc
and
out
mov
inc
add
xlat
pop
add
push
repz
or
xchg
jns
aaa
push
popf
mov
aam
mov
adc
adc
mov
ret
cld
inc
dec
pop
sbbl
jno
mov
and
sub
fcomps
or
lret
add
sub
in
cs
or
add
push
cmp
xor
push
and
push
aam
sub
mov
es
push
or
adcb
mov
dec
cmpsl
je
lock
sbb
pop
sbb
adc
aam
addb
or
ret
sub
cmc
push
or
movsl
clc
in
jae
pushf
xchg
roll
pusha
cmp
push
push
or
and
mov
push
xor
scas
add
imul
clc
inc
test
jle
xor
push
lea
or
out
fistpl
mov
arpl
ret
pop
inc
popa
adc
sbb
xchg
sub
xchg
add
sbb
push
popa
adc
fldt
and
aam
dec
scas
shl
cmp
dec
jno
jo
xchg
xor
inc
shlb
loopne
adc
addl
adc
push
add
xor
jb
adc
outsl
pop
ret
aam
cltd
repz
ja
xor
fdivl
insb
je
scas
or
call
mov
cmpsl
sbb
push
aas
int3
push
sub
push
dec
add
push
or
out
inc
and
push
jno
out
in
jmp
mov
mov
sub
push
push
outsl
gs
enter
sub
je
push
push
xor
or
inc
fs
cmc
daa
das
cmpb
pop
cmp
inc
or
lea
adc
addr16
pusha
xchg
inc
fs
in
rorb
add
cmp
bound
sbbl
or
shlb
push
movsb
arpl
jmp
mov
mov
xorb
loope
or
mov
inc
push
inc
xorl
and
pop
mov
push
xor
xor
dec
pop
js
push
jmp
xchg
lock
push
adc
cltd
cmp
addr16
jns
movsb
cwtl
sub
adc
popa
fisubrs
adc
push
pop
lea
xchg
ret
adc
pop
adc
pop
or
add
add
popf
mov
cmp
xchg
adc
push
or
jge
enter
shrb
mov
or
sub
mov
jo
or
daa
mov
sbb
shl
js
rorb
push
shll
mov
xor
mov
pop
dec
jno
and
xor
addl
and
or
aas
xor
mov
jo
push
pop
mov
xorb
cmp
sbb
push
fdivs
lds
test
scas
mov
sub
or
xor
sbb
test
pop
and
sbb
push
mov
and
je
add
push
fs
adc
aaa
jbe
push
hlt
jmp
add
popa
sbb
neg
or
mov
fucomi
lods
push
sub
fisubl
sbb
jl
dec
push
adc
es
cmpl
xor
jge
rorl
out
and
daa
sbb
ljmp
shlb
out
movsl
mov
or
mov
sub
or
or
sub
into
movsl
mov
mov
inc
or
loopne
mov
notb
pushf
add
in
mov
inc
xchg
and
cmp
jle
sub
lock
pop
dec
cli
inc
fwait
add
push
mov
mov
mov
mov
or
scas
pop
or
aad
mov
push
cmp
pop
jne
pusha
lock
in
int3
sub
dec
jl
inc
je
popf
adc
push
dec
out
sub
loopne
sub
popl
inc
pop
mov
push
cli
push
or
push
or
movsb
stc
cltd
xchg
scas
cli
add
or
jmp
cld
mov
imull
jne
push
rolb
inc
add
out
adc
sub
adc
mov
dec
dec
fcoml
and
out
in
stc
enter
rcrb
stc
dec
sahf
xchg
movsb
int3
add
push
cwtl
mov
les
pop
sarb
mov
lret
jns
js
mov
cmp
movsl
das
test
movsb
cmpsl
ja
and
mov
adc
nop
xchg
and
fsubs
fs
rclb
outsb
cmpb
mov
mov
outsl
mov
ja
and
sub
out
insb
push
push
ret
daa
lock
push
mov
xchg
push
lods
outsl
adc
xor
mov
or
pop
addr16
nop
pop
or
or
pop
mov
popa
add
mov
mov
mov
xchg
dec
loopne
adc
xchg
ret
xchg
imul
in
outsl
insl
add
push
test
adc
push
ja
ds
add
or
cmp
inc
push
sbb
testl
adc
scas
in
movsb
push
fsubrl
add
dec
ja
xchg
sbb
sbb
mov
shrb
aad
pushf
xorb
mov
lock
inc
jne
in
sbb
mov
test
jae
push
sbb
test
sbb
loopne
inc
mov
mov
outsl
adc
lock
xchg
mov
leave
cmp
inc
or
aaa
jl,pt
mov
subb
or
mov
inc
and
cwtl
push
xchg
cmp
mov
pop
mul
pop
push
adc
dec
mov
popf
dec
test
mov
pop
and
sub
xor
push
outsb
or
or
inc
push
adc
pop
mov
mov
inc
shrb
pop
ja
and
sub
stos
sbb
sub
mov
and
rcr
mov
gs
pusha
xor
cltd
cmp
or
mov
cmp
push
cmpsl
pop
xlat
xor
adc
movsl
adc
and
movsb
popa
xchg
popa
cwtl
addl
test
idiv
adc
scas
mov
cmpsb
add
add
es
add
xchg
push
shlb
rolb
imul
negl
mov
push
add
je
js
data16
push
orb
mov
ja
jns
adc
or
inc
add
int
insb
insb
scas
sarl
pop
in
pop
and
or
fadds
push
leave
sti
push
fwait
jg
sbb
shlb
and
divb
or
pop
test
adc
adc
je
mov
pusha
dec
loope
adc
sarl
js
dec
add
dec
hlt
aam
cs
xchg
call
cld
adc
pop
pinsrw
push
sbb
ret
add
pop
ss
aaa
je
or
aaa
es
sbb
xor
pop
mov
insl
pop
dec
aad
ljmp
add
aaa
fucom
mov
sub
roll
dec
fldl
stos
sbb
sbb
push
int
test
lds
mov
sbb
sub
incl
inc
adc
mov
push
pop
add
sbb
mov
mov
mov
pop
adc
mov
add
adc
xor
leave
rcrl
add
mov
dec
cmp
or
or
cmp
adc
sbb
ss
popf
insl
pop
add
rcl
ss
add
fimull
adc
add
inc
push
add
in
mov
push
fs
push
dec
push
add
adc
incl
mov
loopne
leave
sub
pop
es
jl
cmp
add
jae
xor
and
imull
jbe
jecxz
arpl
aaa
shll
dec
adc
cmp
sub
loopne
lock
das
lds
jmp
xlat
loopne
cmp
mov
cwtl
outsb
adc
sbb
jne
push
adcb
inc
pop
aad
inc
pop
mov
mov
add
sub
unpcklps
aaa
loopne
aaa
dec
enter
mov
mov
mov
test
mov
mov
adc
fcoml
sub
and
test
icebp
ret
icebp
xor
into
out
pop
or
ds
fwait
sbb
add
adc
ja
pop
inc
into
lock
cmovs
ja
push
adc
js
add
imul
jnp
jge
js
int3
inc
inc
inc
inc
ja
jl
xchg
cmpb
nop
test
or
mov
or
es
pop
jno
nop
jo
adc
shlb
fdivp
fisubrs
push
cld
and
push
add
fadd
push
adc
clc
cmp
xor
pop
stos
cmp
adc
or
mov
testl
inc
xchg
sahf
nop
lock
add
or
xlat
add
aaa
dec
push
stos
jne
jecxz
sub
xor
loope
mov
scas
aad
or
add
mov
mov
xchg
and
sub
lods
dec
and
scas
pop
push
clc
dec
mov
clc
push
lcall
and
and
jns
leave
repz
xchg
and
or
jmp
mov
insb
popa
xchg
popa
jnp
out
mov
pop
aas
or
push
push
test
xchg
mov
adc
xor
sub
mov
jmp
and
ficoml
mov
mov
adc
xchg
sbb
cmp
enter
cmp
rcrl
nop
xchg
or
dec
outsl
mov
sub
or
dec
leave
or
les
sub
cs
add
adc
out
cmp
or
xor
fs
sbb
pop
shlb
inc
cmovbe
xchg
push
das
scas
push
in
cmp
mov
lret
push
adcb
pop
les
leave
sarb
cmpb
outsl
pusha
and
dec
subb
push
inc
in
pop
ret
mov
in
lea
pop
pop
filds
sbb
addl
gs
insb
cmpsl
or
push
das
lret
iret
add
push
dec
pop
mov
shlb
mov
sub
es
jl
loope
je
out
or
lcall
add
adc
loop
pushw
pop
lcall
push
ret
loopne
mov
mov
outsb
sub
loope
int
movsb
mov
xor
test
pop
pop
movsb
punpckhwd
inc
les
add
lock
nop
sysret
xor
or
add
add
stc
pop
ss
adc
adc
pop
dec
push
push
inc
or
jns
subl
dec
or
pop
lahf
sbb
leave
cmpsl
movsb
cmp
movl
push
dec
ret
push
pop
jae
sbb
rcrb
add
inc
jno
pop
outsb
negl
sbb
repz
xchg
movsb
push
lods
cs
neg
rolb
inc
in
push
cld
adc
fs
sahf
divl
push
rolb
jnp
jnp
add
loopne
and
or
push
ja
jnp
sub
nop
fadds
and
and
dec
push
ret
mov
out
or
les
adc
mov
pop
dec
ret
pop
xor
ja
jecxz
pop
shlb
fldcw
xor
lock
and
dec
movl
add
movups
adc
add
inc
dec
push
inc
xchg
xchg
lods
fldenv
dec
gs
add
and
dec
ja
filds
dec
mov
cmpl
add
and
rcr
jo
ret
ficoml
fidivrl
mov
sub
sbb
or
insb
shrl
inc
push
dec
testl
xchg
adc
loopne
and
push
or
xchg
nopl
fcoml
aaa
xor
fisubl
aam
sbb
mov
add
pushf
fcoms
adc
adcb
sbb
test
or
or
mov
pop
sub
pop
sub
popa
cmpsl
cwtl
jno
mov
or
test
xor
sbb
xchg
cmp
outsl
fsts
or
xchg
das
icebp
push
sbb
outsb
cmpsl
or
fs
movl
cmpsl
or
or
out
adc
imul
jecxz
scas
or
inc
ret
arpl
xor
ja
push
xor
cmc
inc
bound
sbb
dec
lods
add
cmp
or
adc
fidivrl
add
roll
add
pop
insl
insl
bound
or
push
in
push
imulb
sbb
test
sub
imul
xchg
cmp
adc
xor
scas
adc
adc
bound
or
and
adc
aas
out
push
mov
les
cmp
or
es
das
or
pop
jnp
mov
or
jecxz
enter
xor
xor
ret
shl
rcll
dec
or
loopne
and
stc
nop
mov
setg
pushf
cmpsb
xchg
push
jle
push
imul
fsubrs
shrl
pop
or
add
call
mov
jmp
or
pop
inc
inc
sub
dec
xor
pop
xor
add
in
add
pop
or
and
push
jae
cmp
dec
shufps
outsl
pop
pop
daa
push
ja
lods
and
cmp
fidivrl
je
or
push
ficoms
stos
add
jo
imul
xchg
out
or
push
fldt
add
mov
jns
aam
add
push
rolb
lock
xlat
dec
dec
sbb
cmp
adc
in
sub
push
and
sahf
mov
in
daa
mov
push
add
dec
mov
push
or
cmpsl
and
mov
clc
jnp
sub
in
fwait
fs
push
adc
push
or
mov
inc
xlat
imul
push
adc
movsb
shll
push
rol
dec
mov
cmp
cmp
mov
pop
fwait
mov
pop
push
add
pop
mov
fsubl
sub
cmc
inc
or
pop
xchg
lea
dec
mov
jb
add
lea
clc
push
xchg
mov
jo
inc
sbb
sbb
stc
or
ret
sbb
jp
fadds
xchg
test
sbb
cmp
es
sbb
sbb
mov
dec
push
cmp
pop
push
mov
ljmp
shlb
and
sahf
sub
cmp
pop
adc
push
push
fisubl
sbb
sbb
jo
dec
mov
xchg
out
hlt
cmpsl
push
add
js
or
push
and
sbb
cmp
mov
loopne
mov
adcl
mov
inc
aad
inc
or
orb
adc
mov
mov
sub
add
incl
inc
jae
into
bound
add
fadd
xchg
adc
or
sub
lcall
dec
push
mov
imul
ret
cmp
or
cmp
cmp
pop
adc
mov
mov
push
dec
in
imul
push
push
or
fs
jp
jb
jb
out
sbb
add
sbb
xor
enter
adc
add
lcall
inc
sbb
aam
add
dec
in
sbb
add
mov
or
nop
arpl
add
add
push
inc
aaa
push
jmp
add
pop
dec
push
add
and
call
add
pop
mov
and
push
in
mov
call
xor
sti
xlat
filds
and
inc
xor
or
leave
add
add
adc
inc
decb
xchg
and
sbb
mov
adc
or
push
test
hlt
cld
arpl
rcrl
mov
mov
lock
or
push
adc
arpl
aad
aam
mov
or
shrb
dec
ficoml
ds
add
and
sub
pushw
out
and
xchg
aaa
mov
sbb
lock
and
out
daa
or
xorl
lret
cmpsl
pop
and
or
js
or
or
dec
pushf
dec
data16
adc
inc
mov
andl
loopne
rolb
roll
add
ds
or
jbe
aas
test
cmp
push
and
outsb
rorl
sbb
mov
inc
shlb
and
je
int
dec
insb
daa
dec
sbb
popa
push
dec
mov
outsb
and
jge
adc
data16
ja
xchg
aaa
xor
sbb
push
push
insl
cs
or
outsb
sti
or
fimuls
popa
sbb
shll
jle
push
pmulhuw
push
jae
jno
lock
ss
or
popa
clc
dec
mov
insl
in
xor
addr16
dec
push
push
je
jne
xchg
ss
int3
adc
inc
lods
add
or
inc
aas
mov
stos
inc
cmp
outsl
cmp
or
xchg
and
add
les
xor
shlb
test
sub
pushf
adc
les
sahf
out
ss
adc
jne
and
xchg
xchg
sarl
adc
mov
jae
jno
insb
jno
jbe
sbb
jle
clc
fiaddl
dec
sbb
data16
push
jb
mov
das
sbb
shrl
flds
mov
stos
xchg
dec
add
ss
stos
fldenv
and
xchg
xchg
mov
sti
sbb
xchg
cmp
add
mov
cmp
and
pop
jmp
jnp
sub
or
xchg
sub
dec
or
sbb
and
jge
jge
rorl
stc
cwtl
and
ficoms
jno
or
fbld
and
push
sbb
jnp
or
cmpb
push
or
es
jae
and
or
cmp
dec
aaa
fsubs
lahf
xor
les
fwait
dec
jg
shrd
xchg
mov
fbld
out
shll
push
or
ret
add
bswap
repnz
add
add
push
shld
adc
stc
repnz
add
imulb
inc
ret
add
mov
sbb
and
add
orl
push
gs
add
ret
or
mov
xor
sub
test
aad
pusha
mov
aaa
mov
push
mov
repnz
mov
les
mov
lods
cltd
shll
movsb
rorl
insl
cmp
inc
prefetch
or
or
orb
and
adc
xchg
mov
inc
xchg
mov
mov
or
sti
push
in
subl
paddd
inc
ret
mov
inc
mov
pop
inc
repz
lret
nop
mov
add
add
pop
aas
pop
adc
bound
pop
and
add
pusha
aas
sbb
inc
enter
sbb
xchg
fs
gs
pop
add
sbb
or
dec
sbb
testl
push
sub
mov
push
sub
inc
sub
jo
mov
dec
jl
and
xchg
jmp
repz
inc
xor
lret
hlt
inc
fsubp
dec
mov
jge
cmpsl
or
sub
je
movsl
jne
ret
or
pop
test
jnp
and
cltd
in
ret
inc
add
or
cmp
nop
pop
pop
jno
ja
je
mov
nop
es
mov
sub
aam
push
add
inc
ret
xchg
addr16
enter
xor
sub
add
inc
movsb
adc
in
femms
add
mov
or
or
add
imul
add
mov
imul
mov
add
and
xor
sbb
ret
rorb
inc
mov
push
leave
mov
stos
sbb
mov
sbb
sbbl
mov
setl
and
insl
jle
cmp
lea
pop
ds
in
das
xor
movq
pushf
pushf
test
or
addr16
adc
in
test
cmp
sbb
sarl
adc
mov
ret
xlat
add
aas
jns
or
aam
cmp
cmp
loop
dec
xchg
add
inc
push
adc
cmp
adc
xchg
push
inc
mov
nop
mov
pop
add
pusha
dec
insl
enter
push
xor
insb
xchg
enter
ret
mull
inc
stos
mov
insb
in
jne
mov
adc
loope
pop
inc
repnz
cmp
pop
xor
mov
push
push
incl
sbb
adc
rcrl
aas
mov
and
inc
ret
popa
adc
call
dec
out
jno
scas
shlb
xor
pop
repnz
or
lds
mov
pop
fdivl
add
les
push
loop
mov
movl
sub
or
dec
add
or
dec
push
inc
int3
dec
pusha
push
xor
insl
je
inc
les
adc
ret
mov
lahf
int
sti
or
jae
xor
stc
fs
push
pop
mov
dec
dec
xchg
mov
xchg
popa
inc
ss
add
and
xor
fildll
push
lods
jl
add
insl
jecxz
push
in
adc
jbe
adc
adc
push
sbb
push
inc
inc
nop
pusha
mov
pop
arpl
dec
push
addr16
test
inc
xor
or
push
cmp
adc
enter
insb
lods
sbb
cmp
mov
insb
or
pop
adc
and
mov
das
add
sub
aaa
push
inc
add
push
les
add
ss
shrl
rorb
add
fnstenv
jle
cmp
and
inc
add
jb
dec
popf
dec
lcall
in
and
stc
insl
arpl
fcomps
xchg
jno
ret
repz
outsl
dec
rolb
test
pop
mov
dec
adc
ret
sbb
add
movl
pusha
adcb
cmpb
dec
mov
add
and
int3
cmpsb
imull
dec
pop
daa
clc
cmp
pop
or
adc
add
push
imul
adc
int
movsb
in
or
xor
loope
scas
sbb
bound
lods
push
or
or
push
lds
push
mov
cmp
imul
sbb
lret
test
dec
dec
or
push
aas
pop
sbb
addl
xchg
dec
test
push
xor
pushf
push
mov
or
push
sarl
adc
or
xchg
pop
pushf
imul
aam
xor
sbb
stc
pushf
push
add
jb
int
nop
xchg
dec
mov
insl
mov
cmp
push
dec
xchg
inc
fisttpll
lahf
ds
shl
addb
mov
and
or
jno
sub
pop
adc
inc
add
and
or
add
add
sub
shl
jnp
movb
or
xchg
cmp
cmp
pop
stc
in
fadds
faddl
aam
push
das
cmp
mov
pop
mov
jo
add
xchg
lret
cmp
and
jae
leave
pop
lds
shrl
pop
add
gs
les
dec
jg
mov
pop
add
daa
dec
sub
test
pop
xchg
dec
xchg
mov
insl
arpl
pop
mull
repz
xorl
adc
outsb
jecxz
lahf
fsubl
mov
add
or
push
sub
dec
mov
pop
mov
add
in
pop
pop
repnz
out
xor
push
jo
cwtl
icebp
xor
lods
sbb
jp
addb
test
add
or
pushf
test
add
pop
mov
add
lahf
addb
add
inc
scas
ret
xchg
int
frstor
outsl
dec
outsl
cmp
sub
outsb
or
cs
roll
inc
data16
mov
cli
loop
xor
mov
outsb
dec
push
add
or
lods
out
gs
rolb
xor
inc
leave
inc
fdivl
mov
cmpsb
xchg
push
inc
inc
mov
and
in
jp
add
xor
push
rclb
shlb
syscall
xchg
cwtl
outsb
pop
push
inc
insl
and
lods
push
and
jmp
mov
jo
dec
mov
fs
adc
add
mov
sbb
rol
mov
or
je
int3
inc
or
cwtl
xchg
dec
dec
pop
pop
ret
aam
ss
lods
sbb
fistps
push
lcall
js
inc
inc
in
pop
sub
mov
and
and
xor
repnz
adc
ret
xlat
xchg
bound
or
icebp
mov
mov
mov
test
movsb
push
test
mov
push
int
dec
cmp
sbbb
sub
outsl
and
pop
pop
and
jp
sub
outsl
jl
jmp
in
addb
jnp
pop
sub
xchg
push
pop
mov
aaa
lods
leave
sbb
ret
dec
push
imul
xor
pop
xor
inc
mov
mov
outsl
nop
repz
dec
rorb
imul
pop
mov
jne
mov
ffree
xchg
cmp
inc
testb
mov
add
lret
insb
popa
mov
add
movsb
push
inc
inc
sub
ss
or
add
aaa
pop
dec
push
fwait
icebp
icebp
je
lods
mov
push
cmp
inc
and
mov
cmp
pop
cs
aas
mov
je
ds
push
mov
outsb
sahf
pop
repnz
popa
pop
in
push
jmp
sbb
divl
std
sub
xchg
push
call
push
mov
test
gs
gs
cmp
mov
dec
add
or
pop
xchg
add
push
pop
ret
adc
leave
popa
test
pushf
mov
cmp
daa
and
outsb
mov
mov
push
mov
in
xor
xorl
sarl
xor
dec
adc
shrl
mov
lods
adc
cmc
mov
cltd
pusha
gs
add
rcrb
and
inc
mov
add
cmpsb
aad
lock
rcll
jo
and
jmp
adc
je
and
pop
xchg
fistpl
mov
mov
sub
rcr
das
test
xorl
adc
in
jb
and
pop
aaa
icebp
scas
test
xor
mov
sarl
das
scas
sbb
pushf
push
mov
xor
loope
pop
add
pusha
test
sbb
faddl
or
sub
push
lahf
fcmovne
lods
dec
cmovg
popf
pop
cmp
int3
cmp
push
lret
ljmp
mov
jp
bnd
fwait
pslld
int
push
aas
sbb
lahf
jecxz
mov
orb
add
leave
pushl
in
fstl
push
outsl
and
lret
fldt
dec
jns
add
mov
pop
push
psubb
ds
push
test
cmp
out
das
push
push
cmovge
jge
test
insb
cmp
sbb
push
in
mov
and
add
add
add
dec
sbb
add
add
add
lcall
jmp
mov
add
mov
mov
mov
mov
mov
mov
je
pushl
adc
sbb
cmp
cmp
mov
cmp
call
cmpsb
out
in
in
jmp
ljmp
jmp
jmp
fcomip
das
clc
in
jecxz
loop
jmp
fdivrp
fstpl
call
loopne
fdivs
call
call
mov
sar
sar
sar
sar
iret
incl
mov
inc
lret
push
and
mov
out
stos
push
push
ret
add
push
sbb
cltd
into
repz
je
push
dec
mov
mov
add
andb
int
push
add
sub
inc
mov
adc
and
push
mov
call
stc
mov
cs
or
sti
sahf
out
les
inc
pop
mov
push
sub
cld
adc
pop
and
icebp
jp
push
fcmovbe
sbb
push
xchg
push
cmpsl
jge
call
cwtl
in
push
test
imul
nop
repnz
push
dec
lahf
sbb
aad
cmp
ljmp
in
int
mov
ds
cmpsb
dec
call
lods
mov
in
in
sarb
out
jbe
dec
les
push
inc
ret
roll
lea
push
ja
mov
rcrb
dec
not
xor
orl
cld
nop
adcb
or
lock
roll
shrb
sub
pop
aam
out
inc
inc
lcall
xor
mov
sbb
inc
lods
shrb
mov
push
xor
nop
leave
aaa
and
mov
adc
insl
pop
push
adc
stc
inc
or
int
or
icebp
jl
xor
popf
mov
xchg
pop
pushf
dec
dec
add
sub
jle
or
imul
imul
hlt
packuswb
and
or
dec
add
or
stos
mov
inc
or
jmp
add
int
dec
push
js
add
mov
inc
or
pop
xchg
rorl
mov
adc
das
pop
enter
mov
add
cmp
out
xor
cmpsl
mov
lea
arpl
adc
je
jmp
fcoms
jmp
push
les
and
adc
sub
or
test
and
scas
and
adc
iret
pusha
xchg
stos
lods
push
inc
imul
imul
add
adc
in
adc
lret
outsl
shlb
fcmovbe
or
adc
sbb
mov
test
xor
fwait
ror
push
sub
mov
push
add
ss
mov
push
roll
inc
or
add
dec
lcall
repnz
cmpsl
bound
int3
dec
push
jo
dec
dec
sub
test
adc
mov
xchg
sbb
sbb
xchg
sbb
imul
loopne
push
xor
mov
rcrb
mov
sub
dec
jbe
lods
mov
adc
cmp
mov
xchg
or
inc
dec
sbb
adcl
push
mov
push
insb
push
and
inc
or
in
rcll
daa
pop
sbb
ret
test
adcl
stos
movsl
push
mov
movsb
push
push
pushl
adc
rolb
sbbb
sub
add
and
dec
outsl
insb
jg
call
dec
mov
or
in
daa
xchg
lods
or
je
imul
or
inc
add
adc
jmp
pusha
jno
icebp
push
jmp
addl
lea
push
hlt
fldenv
stos
pop
cmp
lea
ds
cmc
jo
or
sub
prefetch
sub
xlat
jp
adc
jle
cmp
jb
fiaddl
cmp
repnz
add
or
dec
inc
add
outsl
aas
dec
js
mov
outsl
inc
sub
out
inc
mov
xor
pop
je
inc
mov
or
test
or
mov
decl
xchg
inc
pop
jae
orl
inc
ficoml
adc
or
or
js
or
in
test
in
mov
insb
orb
sbb
movsl
inc
outsb
aad
or
test
sub
adc
adc
xchg
or
dec
insb
mov
std
and
dec
xchg
xchg
xchg
xchg
outsl
xchg
mov
lret
or
lret
xchg
xchg
xchg
stos
into
and
xchg
dec
outsb
xchg
mov
xchg
lret
xchg
faddl
pusha
and
xchg
xchg
lret
xchg
push
pop
pop
xor
xchg
xchg
xchg
outsl
mov
xchg
xchg
lret
xchg
lock
pop
or
xchg
xchg
andl
mov
xor
lcall
sub
xlat
sbb
mov
int
inc
shrb
xor
hlt
dec
xor
dec
test
sub
fiadds
mov
xchg
cltd
xor
lods
sti
aam
dec
stc
in
dec
lcall
fisttpll
push
in
or
adc
jb
push
addr16
and
xchg
outsb
cwtl
push
arpl
iret
adc
dec
push
dec
adcb
loop
cwtl
andb
dec
mov
imul
sahf
xchg
lods
daa
stos
or
dec
lods
jbe
dec
and
push
and
add
xchg
and
pop
or
daa
mov
inc
test
adc
flds
add
ljmp
imul
sahf
mov
push
add
das
push
add
test
movsb
arpl
repz
cmpsl
nop
and
leave
pushf
cmp
sub
insl
movsb
cwtl
add
lea
popf
adc
mov
insl
test
sarb
sbb
inc
pop
outsl
xor
mov
xchg
icebp
dec
lods
sub
popa
add
pop
xchg
add
pusha
cmp
cs
adc
repnz
xor
inc
xor
mov
push
xchg
gs
inc
adc
xchg
aad
and
ret
mov
lea
addb
in
pop
cmp
dec
outsb
push
call
push
mov
xor
cwtl
dec
add
sub
imul
pop
adc
ret
imul
xlat
mov
mov
decb
cmp
push
packuswb
adc
sbb
jnp
hlt
cmp
gs
jbe
push
clc
addr16
insb
sub
daa
shrb
push
js
adc
mov
push
incl
add
aad
movsl
mov
rol
lea
icebp
xor
insl
stos
xor
loope,pn
aam
inc
inc
pop
jp
cmpsl
jge
sbb
cmp
sbb
dec
jno
sbb
cmp
jns
xchg
mov
popf
adc
push
bound
xchg
jge
add
or
mov
mov
add
stos
adc
push
jo
mov
xchg
fs
cltd
pusha
sub
or
xlat
xchg
lods
fmull
fisttpll
jmp
inc
xor
or
jae
xorl
sbb
or
mov
in
imul
jecxz
fs
xor
add
push
jno
out
aaa
jne
test
jns
sbb
pop
adc
rorb
jo
fwait
sub
pop
pop
outsb
or
cmpsl
adc
dec
inc
adc
inc
nop
sahf
ret
mov
pop
xor
nop
outsb
xor
shlb
aam
lcall
pop
cmp
xor
rorl
pop
hlt
das
push
add
adc
aam
rorb
sub
add
adc
pop
add
mov
fisubrl
inc
test
add
inc
add
mov
adc
les
fsts
and
mov
sti
inc
or
or
jge
push
add
ja
jae
stos
and
loope
add
addr16
or
mov
dec
nop
addr16
fwait
in
cmp
push
push
insb
push
sbb
outsl
inc
mov
xchg
sbb
inc
xchg
cmp
repnz
adc
or
daa
mov
test
clc
sub
fsts
imul
jg
push
sub
sahf
cmpsb
inc
inc
and
add
das
lds
and
ret
imul
xor
lods
cmp
or
aas
mov
sub
mov
adc
mov
sub
outsb
lahf
add
fistpll
mov
jp
mov
hlt
insb
mov
jno
das
mov
pop
or
pop
jb
push
push
rolb
dec
loop
mov
sub
xor
in
xor
sbb
lret
add
shll
loope
and
lcall
loope
pop
mov
xchg
daa
fdivr
movb
call
loopne
cmpsl
mov
add
lahf
in
insl
in
mov
popf
call
lods
in
jmp
div
dec
and
pop
sbbl
pushf
sbbb
in
add
adc
sbb
sub
decb
lret
movl
lock
dec
movsl
mov
jns
movsb
clc
cmc
ret
dec
aad
les
push
js
xor
mov
and
xchg
pop
xchg
and
lods
or
sbb
mov
cmp
mov
pop
sub
sub
mov
add
xor
pop
inc
popf
jbe
cmp
ret
sub
lock
aas
addl
outsl
jb
lret
mov
xor
lods
pop
arpl
shrb
and
xchg
pop
adc
jno
cmp
pop
leave
add
sbb
mov
pop
mov
add
repnz
add
stc
ja
repnz
popa
stos
and
repnz
sub
ds
add
jo
adc
lret
fidivs
jno
mov
inc
adc
and
push
arpl
pop
mov
jb
push
jg
fisubrs
loope
es
jmp
mov
mov
in
xchg
das
std
call
mov
adc
movzwl
je
aam
sbb
jne
push
outsl
mov
test
out
push
jbe
cs
or
xor
jbe
pop
ds
and
push
dec
add
jne
mov
daa
add
mov
mov
mov
dec
push
adc
adc
cmpl
and
sbb
rcr
mov
add
add
pushf
lock
ret
orb
pop
rcrl
cmp
adc
sbb
sbb
rcll
rolb
sbb
or
aaa
mov
mov
mov
mov
or
scas
cmp
mov
mov
mov
mov
mov
sub
dec
fcomps
stos
and
lcall
and
mov
mov
mov
add
push
mov
adc
adc
add
pop
mov
add
cld
mov
mov
mov
out
in
jmp
ljmp
inc
inc
inc
orb
sbb
mov
repnz
mov
jo
stc
ret
shll
or
repnz
cs
cmpl
push
cmpsb
outsb
push
nop
dec
sahf
cmpsl
fldcw
adc
test
call
cmp
cmpsl
stc
and
fdivl
push
lods
enter
sti
clc
pop
cs
xchg
adc
mov
cmpsl
mov
push
mov
into
out
jg
popa
push
adc
xchg
rorb
jns
push
push
into
fs
je
push
in
or
insb
out
mov
and
outsb
int3
mov
mov
repz
arpl
sub
push
lods
push
cmpsl
stc
cmp
sbb
cwtl
hlt
fistpll
rcll
fcomps
gs
test
lock
fs
push
call
pushw
mov
push
mov
addr16
xor
shrl
push
loopne
outsb
pop
outsb
or
xor
filds
sbb
cmp
stc
fisubs
data16
sbbb
cwtl
mov
imulb
push
movsb
jno
push
push
add
push
in
jnp
jnp
push
push
cmp
push
les
mov
push
mov
mov
lock
test
pop
out
imulb
fistpl
xor
popa
or
jbe
fidivrs
int
insl
pusha
outsl
in
sub
push
xchg
mov
sti
cs
je
je
into
movsl
push
add
add
cmc
mov
nop
std
ja
imul
push
or
fldl
mov
and
sub
xchg
add
pop
leave
inc
loop
pop
andnps
add
sub
inc
roll
mov
leave
popa
xchg
xchg
or
adc
mov
lret
or
in
inc
aad
push
mov
mov
or
iret
mov
jge
cmp
cltd
push
dec
xchg
ret
adc
fimull
or
or
or
pop
fwait
or
sub
or
or
daa
or
jno
mov
sub
into
jb
inc
daa
insb
inc
subb
or
andl
adc
dec
dec
loope
pop
adc
aad
stos
stos
sub
or
icebp
dec
lret
mov
and
and
dec
lods
xchg
dec
cmpsl
sub
or
jo
mov
iret
add
loop
jge
sub
xchg
push
mov
inc
add
xchg
push
repz
cmc
jl
push
sbb
cmc
and
add
shlb
and
mov
jo
or
int
adc
add
inc
mov
adc
push
sub
cmpsb
outsb
sub
sub
ret
ret
rorl
loope
dec
add
dec
fdivr
sbb
fcom
push
outsl
aad
mov
or
add
ret
or
ja
adc
sbb
xchg
add
sbb
insb
subb
cs
push
into
mov
clc
add
sub
jns
shrb
push
xor
cmp
mov
adcb
xor
mov
push
cmc
adc
dec
inc
add
mov
loope
fwait
jnp
nop
insl
sub
jne
clc
lahf
addr16
test
dec
xorl
jo
and
adc
sbbl
sti
mov
sbb
movsl
adc
mov
addb
xor
cmp
or
adc
arpl
pop
std
cmpsb
cmp
cmp
lcall
jb
xor
into
hlt
sbb
xor
insl
sahf
mov
cmp
jp
push
jle
xor
xor
cli
or
inc
movsl
pmaddwd
pop
pushf
dec
out
jmp
notl
sub
incl
jecxz
add
loopne
push
loop
or
or
or
fcomi
mov
mov
pop
pusha
movl
lods
lods
xchg
push
mov
xor
out
sub
push
icebp
jbe
mov
xor
dec
test
inc
add
sub
insl
sarl
in
push
iret
mov
adc
inc
lods
push
jae
add
add
add
mov
pusha
and
shrl
call
jmp
cmp
cmp
daa
cmp
shrb
jae
inc
pop
or
pop
mov
mov
movaps
addb
push
jne
ljmp
add
xchg
push
mov
roll
mov
dec
loop
test
add
pop
jecxz
cmpsl
push
inc
xor
jge
jae
adc
push
popf
add
cmp
jl
enter
daa
in
mov
inc
mov
push
and
fwait
aaa
sbb
jno
les
outsb
jle
jle
sarb
insb
push
dec
cmp
xor
lods
mov
and
xor
insl
iret
mov
jecxz
daa
sub
and
mov
dec
push
jg
iret
shll
daa
int3
sbbb
into
call
test
loopne
mov
test
nop
add
in
mov
sti
xor
jnp
xchg
ss
push
fcoms
mov
dec
rolb
sub
nop
or
jmp
sub
clc
sub
cs
outsl
add
subb
jl
sti
pop
es
add
jmp
jmp
sub
cmpsl
lcall
pop
add
mov
push
dec
xchg
es
or
mov
ljmp
orb
or
or
popf
ja
dec
or
add
mov
sbb
sqrtps
dec
jae
mov
add
or
mov
sub
insb
and
ret
fdivl
jne
inc
or
mov
pop
pop
arpl
and
rcll
mov
sub
xor
cmp
dec
adc
je
or
xor
jno
push
scas
push
pop
push
dec
cmpsl
ret
mov
lcall
xlat
sub
ja
leave
mov
stos
icebp
in
adc
and
fwait
add
dec
adc
mov
sub
add
shlb
pusha
adc
adc
loopne
add
test
push
test
xchg
jmp
aaa
test
inc
and
dec
ficomps
mov
push
cwtl
pop
push
hlt
pop
push
or
insb
test
daa
je
push
pop
add
rclb
jo
popa
push
pusha
bound
inc
bound
cmp
test
shlb
sbbb
sub
pop
ficomps
jo
imul
mov
fisttps
add
jno
sbb
jmp
fucomi
dec
rcr
lods
pop
fimull
xchg
scas
test
push
push
sub
pop
loop
ja
jmp
jecxz
push
pusha
fwait
jne
movsl
aam
push
push
rcrb
cmp
jnp
lock
add
dec
dec
jnp
inc
mov
sub
cld
shlb
fldl
jne
aam
sub
or
add
pop
xor
jecxz
push
int
xor
and
push
xor
push
js
mov
mov
pop
insl
push
or
pop
add
or
adc
sub
inc
sub
shll
pop
pop
rorl
add
pop
mov
push
push
aaa
pop
imul
pop
sub
inc
out
mov
cmc
push
loopne
mov
push
imul
popf
addb
adcb
icebp
cmc
bound
xlat
mov
enter
iret
cmc
mov
inc
sbb
addl
or
sbb
pop
and
or
scas
or
test
insl
mov
fimuls
inc
ret
ja
into
daa
dec
lods
xchg
pop
push
dec
inc
or
add
adc
mov
scas
cmp
cmp
mov
ret
add
jns
fisubl
xorl
out
or
cmp
mov
pop
out
add
shl
or
lock
aaa
pop
divl
inc
push
ja
popa
sub
call
popf
inc
pop
addr16
xor
xchg
sbb
in
scas
test
ss
push
push
mov
mov
jae
pop
repnz
cmp
gs
add
add
mov
enter
push
ja
enter
mov
push
add
lret
dec
push
mov
cli
cltd
adc
mov
sub
fbld
fisttps
push
rorb
enter
xor
pop
add
or
or
shlb
adcb
inc
cs
insb
add
cmc
outsb
cs
addr16
sub
inc
mov
inc
xor
stc
push
cs
hlt
call
jb
insl
imul
sub
out
mov
inc
lods
fmulp
leave
leave
enter
popa
nop
mov
pop
shll
pushf
shlb
xchg
add
push
pop
es
xchg
inc
mov
pop
dec
adcl
sub
sub
mov
xchg
adc
popa
testl
sbb
test
data16
sahf
xchg
pusha
or
pop
push
push
jae
scas
mov
inc
shrl
jne
inc
push
scas
das
subb
pop
out
pop
lds
add
inc
mov
mov
fcmovnbe
and
push
sub
add
and
and
and
and
inc
outsb
mov
push
das
and
hlt
sarl
fsubs
dec
stos
lret
mov
mov
popf
fisttpll
flds
adc
add
rclb
nop
popf
and
sbb
or
iret
in
inc
stos
adc
int3
cwtl
jmp
sbb
cmp
inc
nop
xchg
add
aaa
adc
sub
cmpsl
std
pop
add
je
inc
in
pop
sub
add
ja
jb
sbb
dec
pop
xchg
pushf
push
cmp
ret
mov
or
add
pop
sbb
dec
xor
add
and
cmp
add
les
mov
repz
jg
int3
int3
xor
mov
iret
repz
mov
hlt
loopne
out
cmp
sbb
lock
ret
push
js,pn
mov
add
addr16
imul
dec
sbb
pop
xor
dec
les
aas
xor
push
and
or
jge
scas
push
fs
push
push
data16
mov
mov
movsl
idivl
lds
shrb
rcrb
adc
or
sub
xor
adc
add
int3
bound
orl
sbb
insl
pop
pop
outsl
dec
pop
xchg
dec
sub
fucomp
adcl
push
or
xchg
scas
jecxz
adc
xchg
insl
jmp
js
mov
lock
dec
mov
cmp
adc
cmpsb
ret
cmp
xor
pop
daa
insb
pop
sbb
jnp
pop
or
inc
mov
pop
or
in
xor
pusha
sub
outsb
sbb
daa
sti
mov
cmp
pop
mull
sub
daa
jo
lret
mov
fs
add
pusha
lods
add
test
add
xchg
adc
jbe
popf
push
mov
addb
in
stos
cmp
xchg
push
xchg
mov
cmp
adc
mulb
jno
lods
or
mov
adc
movsb
dec
xchg
ss
mov
xchg
addb
jne
outsb
das
push
pusha
les
adc
push
add
mov
xchg
pop
je
add
ja
test
jo
les
sbb
push
dec
ja
pop
mov
fisubs
push
fimull
and
or
mov
and
outsb
cmp
insl
jp
jb
fsubrp
cli
adc
push
fldl
aam
mov
outsl
xchg
sub
mov
shll
popa
call
or
mov
add
push
cmp
outsb
adc
arpl
cmpsl
pop
cmp
addl
or
jle
and
sub
inc
pop
pusha
cltd
inc
daa
pop
cwtl
jno
les
xchg
push
xor
cltd
or
adc
in
add
mov
outsl
or
jge
es
jecxz
adc
sbb
mov
cmp
in
lock
pop
jecxz
adc
mov
pop
push
jnp
js
roll
adc
das
push
mov
pop
jno
pop
ljmp
aaa
ret
ja
imul
jns
add
and
inc
loopne
frstor
movsl
das
lds
mov
jne
cmc
push
xor
cli
sub
hlt
addl
std
orb
rcrl
or
gs
push
lds
fsts
sbb
pusha
int3
mov
jmp
inc
inc
loope
dec
aas
ficompl
or
daa
jl
aaa
into
mov
mov
add
lock
pop
pop
lret
xor
pop
adc
shll
dec
pop
scas
inc
jecxz
jp
mov
incl
cltd
imul
push
inc
or
aad
sbb
or
sbb
sbb
xchg
mov
add
xor
push
and
pop
mov
popf
pop
and
mov
in
mov
or
xor
xor
dec
sbb
ljmp
push
loope
dec
pop
shlb
sub
inc
xchg
cmp
mov
int
fnstsw
or
inc
inc
or
andl
lcall
add
xor
dec
mov
subl
pop
aad
adc
mov
ret
test
ror
and
test
or
jae
loopne
mov
push
pop
xchg
jbe
sbb
pushf
dec
inc
popf
clc
lahf
push
mov
push
iret
push
sti
adc
adc
out
insb
fildl
leave
enter
faddl
fdivrl
push
ret
sbb
imul
add
cmp
inc
or
mov
testb
mov
cld
sub
or
test
clc
inc
repnz
or
sahf
mov
clc
inc
jns
sahf
popf
test
mov
negb
sarl
push
fisttpl
pushf
adc
and
shll
sub
cli
push
push
nop
sbb
mov
add
and
lods
filds
pop
xchg
adc
lds
cmpb
jno
stos
adc
and
xor
jmp
and
pop
das
stos
sbb
xchg
lret
inc
inc
les
in
ret
jecxz
jo
inc
or
cmp
add
push
dec
jo
sub
insl
pop
sbb
push
sub
clc
mov
mov
popf
movsb
stos
push
mov
sub
mov
je,pn
mov
fdivs
xchg
nop
fsubrl
adc
inc
hlt
out
xchg
push
add
adc
dec
daa
inc
dec
sbb
add
inc
add
add
es
and
xor
dec
clc
mov
mov
mov
sbb
in
sbb
ja
jo
repnz
mov
mov
loopne
clc
call
sub
fs
imul
leave
pop
dec
jg
mov
mov
jmp
lods
mov
imul
xchg
inc
xor
sbb
jmp
daa
andl
mov
mov
jmp
inc
ret
dec
in
adc
inc
scas
dec
nop
pop
movsb
inc
mov
aam
and
test
xchg
and
sub
in
movsb
das
xchg
push
out
cmp
loopne
je
inc
das
adc
out
addr16
or
mov
rolb
add
or
test
pop
inc
les
test
push
or
fwait
xchg
inc
sbb
imul
sbb
xor
sub
mov
inc
ror
loop
xchg
cmpsb
mov
fiadds
mov
sahf
cmp
loop
mov
cmpsb
outsl
lods
addl
add
nop
lahf
sbb
sahf
movsb
and
aas
or
movsb
sti
movsb
movsl
cvtps2pd
dec
dec
nop
leave
icebp
xor
and
ret
push
sti
sbb
mov
ss
cmp
push
orl
repnz
sbbb
insb
cmpsl
push
xchg
mov
dec
aaa
insb
jbe
test
or
jecxz
push
insl
daa
lods
xor
shr
xchg
lcall
inc
fwait
xchg
rcll
out
rcll
cmp
aam
fisubl
mov
inc
add
add
aas
lods
add
lods
or
jge
lods
push
jb
lret
add
sahf
mov
fimull
adcb
mov
rcl
push
jmp
jo
xor
loopne
or
mov
orl
stos
stos
les
cmp
push
je
jmp
adc
push
imul
dec
inc
mov
cmpsl
gs
inc
inc
cs
add
cmpsl
aas
pop
jg
pusha
in
lret
rcrl
enter
or
sbb
and
add
in
add
and
imul
jns
rsm
xor
sbb
xchg
imul
pop
cs
add
xchg
adcb
ds
mov
popa
pushf
xor
lea
add
ljmp
sti
mov
and
add
in
mov
cmp
xor
adc
lods
test
lods
je
push
and
pop
fsubrs
sbb
fsubl
xchg
dec
mov
fwait
nop
paddusb
fmull
sti
sub
arpl
gs
pop
inc
movl
and
add
sub
cmpsl
lock
push
cmc
fdiv
sbb
mov
xchg
xchg
jne
dec
or
mov
push
dec
sub
xor
fwait
int
jne
xor
cld
and
lods
sti
or
pop
cs
jne
adc
jecxz
or
xchg
subb
cltd
int3
and
nop
xor
xchg
dec
inc
rorb
sbb
out
or
adc
call
add
adc
js
mov
mov
inc
pop
sub
enter
xchg
mov
xchg
test
xchg
push
mov
in
pop
aas
inc
subl
mov
pop
xchg
mov
pop
xchg
test
and
push
aas
mov
push
ds
push
xchg
addr16
inc
push
aas
cmp
js
notl
jo
or
xor
cmp
jne
inc
sbb
jg
jb
jnp
in
decl
inc
mov
scas
pop
mov
roll
pusha
aas
push
aas
inc
or
movsl
stos
pusha
push
addb
popa
xor
xchg
testl
xchg
or
lahf
sbb
or
adc
mov
xchg
xor
insb
push
aas
add
sbb
loopne
pop
fcmove
inc
dec
push
mov
adc
or
adc
adc
add
bound
fisubl
sbb
lea
sbb
xchg
fadd
imul
loopne
imul
mov
push
cmovo
fldcw
lret
dec
lret
cmp
loopne
xor
dec
dec
inc
add
loopne
mov
cmp
sbb
mov
add
push
fcmovne
scas
mov
and
sbb
cmp
fwait
mov
jae
mov
stc
xchg
popf
arpl
and
xchg
or
or
cmpsb
scas
nop
inc
pop
fadd
xchg
xor
sbb
fwait
dec
sti
adc
add
add
outsb
insb
push
jnp
test
outsb
push
or
mov
ud2
push
mov
mov
fs
addl
in
adc
cld
mov
inc
movsb
fisubrs
das
and
adc
cmp
repnz
mov
or
mov
outsb
or
daa
xsha256
xchg
cmp
js
adc
push
adc
test
and
adc
xorb
push
or
fs
pop
and
inc
and
and
cmp
adc
cmp
std
rclb
mov
mov
xor
rorb
sub
cmpsl
pop
mov
adc
das
cs
cmp
fstp
sub
and
and
add
xor
incl
mov
movsl
xchg
lret
mov
sarb
roll
repz
or
jp
pop
cmp
repnz
rolb
lock
xchg
or
mov
aas
jle
mov
push
in
mov
inc
cmc
mov
and
shlb
push
test
mov
or
jno
add
inc
pop
lret
cmp
loopne
mov
xorb
shrl
mov
sbb
loopne
mov
jo
std
popf
push
jne
mov
or
jmp
gs
push
inc
nop
push
mov
xor
jae
xchg
and
push
or
push
dec
xor
addl
mov
cmp
mov
xor
cwtl
adc
or
shll
sbb
sub
sub
xor
inc
shll
xor
scas
cmp
clc
nop
jno
mov
rcll
mov
das
aad
inc
push
inc
aaa
fs
outsb
xorb
add
ret
shll
test
cld
rcll
add
je
sub
aam
and
pop
arpl
cwtl
mov
mulb
mov
imul
cwtl
movswl
or
repnz
pop
or
in
xor
lods
mull
pop
pop
mov
in
sti
scas
and
outsb
hlt
adc
pop
sbb
push
rolb
xor
pop
inc
cmpl
jne
mov
fwait
mov
subl
and
adc
add
cmp
movl
ljmp
inc
ljmp
daa
add
pop
movl
mov
xor
cltd
insb
repz
dec
add
add
cmpsl
scas
enter
mov
or
adc
aaa
js
mov
ret
xor
and
lcall
mull
pushf
add
mov
jae
push
inc
cmp
push
mov
movsl
mov
sbb
inc
call
pop
mov
aaa
stc
enter
shrl
in
cli
inc
inc
loope
movsb
pop
ss
push
iret
dec
and
movntps
cmpsl
mov
shlb
jp
and
rcrl
sbb
and
arpl
sbb
sbb
sbb
inc
sub
sub
ret
movsl
loope
in
movb
fdivrs
adc
dec
pop
outsl
pop
xchg
mov
ljmp
sub
xlat
mov
sub
dec
jo
or
les
cmp
fwait
out
xlat
pop
mov
push
pusha
mov
sbb
sub
je
dec
lea
xor
dec
dec
inc
add
ficoml
add
sbb
popl
out
daa
sbb
inc
jg
scas
lods
add
adc
add
mov
add
daa
repnz
push
cli
inc
adc
or
mov
scas
adc
mov
inc
sti
xchg
xchg
das
leave
in
sahf
dec
or
adc
shl
imul
ret
enter
movsb
das
or
lea
cmp
add
inc
pop
sub
sbb
xacquire
mov
mov
stos
dec
xchg
nop
mov
gs
and
fildl
sub
lods
inc
sbb
lea
jp
fcoml
sbb
pushf
je
fbld
imul
jmp
cmp
adc
jp
and
adc
shrl
add
sbb
ret
inc
shl
or
sub
icebp
xchg
and
lods
nop
or
inc
outsl
lods
cmp
sbb
in
xor
sarl
leave
and
idivl
xor
mov
inc
cmpsl
mov
inc
add
pop
insb
inc
or
adc
fsubs
mov
insb
push
mov
mov
cmp
sbb
push
adc
fwait
mov
hlt
sbb
movsl
cmpsb
into
clc
jae
je
and
clc
sub
sub
pop
lret
pop
cmpsb
pop
sub
mov
xchg
andl
repz
rolb
aaa
mov
subl
aas
cmp
je
mov
cmp
addr16
pusha
push
xor
in
gs
in
icebp
daa
movsb
je
inc
stc
xchg
nop
ret
jle
xchg
fdiv
adc
call
je
hlt
sbb
test
movsl
sbbb
cmpb
mov
jo
lea
xchg
add
or
and
mov
in
cmpb
or
outsb
or
jo
imul
pop
in
and
test
sbbb
inc
das
shlb
sarb
fimull
inc
push
lcall
fadds
jmp
sbb
jno
xchg
in
insl
add
push
cld
xorb
or
or
sbb
push
jae
xchg
or
fsubr
and
fbld
lea
xchg
inc
test
xor
adc
das
inc
testb
and
stc
adc
shrb
test
aam
hlt
jo
or
cmp
cmpsb
mov
cld
pop
add
mov
or
hlt
or
lock
xchg
mov
fnstcw
and
push
or
mov
iret
pushw
cmp
dec
push
push
iret
inc
cmp
and
jne
sub
inc
xchg
sbb
push
lds
xchg
cli
and
push
jns
xchg
cmpsb
ds
mov
sub
sbb
fisubl
lods
push
sub
jmp
js
shlb
enter
popf
scas
fiadds
mov
adc
sbb
add
push
add
loopne
xchg
or
pop
lds
in
cmpsb
sbb
and
or
mov
cmp
add
mov
jg
mov
mov
fcmovnb
or
insb
bound
loopne
push
push
xchg
in
add
mov
ds
add
iret
mov
and
hlt
jmp
xlat
xchg
inc
hlt
pop
and
jmp
push
les
repz
pop
test
mov
jg
fcmovnbe
sub
add
push
out
add
mov
sub
mov
mov
movsb
enter
mov
adc
jmp
lock
adc
xchg
sbb
add
xlat
mov
ss
movb
sub
jmp
xchg
push
sbb
sub
int3
xor
pop
out
inc
mov
lods
inc
or
or
sysenter
mov
or
xlat
push
add
insl
loope
jbe
sarl
pop
or
sbb
scas
push
dec
or
xchg
add
mov
or
cs
add
or
or
inc
testb
testb
jne
fidivs
sub
mov
inc
push
adc
or
shrb
or
sahf
pop
or
movsb
lods
rcll
xor
adc
insb
cld
mov
mov
movswl
jnp
sbb
mov
jl
pop
je
add
aad
add
mov
imul
mov
jmp
jl
cmp
cwtl
and
lea
popa
adc
daa
pop
fiaddl
inc
dec
push
mov
sub
push
imul
dec
test
mov
add
push
fs
push
pop
or
rcl
in
fsubrs
add
xor
and
add
in
xor
test
clc
xchg
sahf
sti
inc
aad
xor
mov
or
push
movhps
add
mov
aaa
js
sbb
xchg
fsubl
ret
test
cld
cltd
and
lea
mov
or
stc
movsb
icebp
testb
or
mov
fistpl
push
imul
or
fistl
fdivrp
fstpl
fwait
jmp
pop
mov
cmp
push
lods
mov
sub
shll
sub
imul
popf
mov
mov
pop
xor
add
movsb
rclb
sbb
je
adc
por
hlt
lcall
or
arpl
sub
mov
and
or
lcall
sub
adc
das
and
das
add
rorb
push
in
les
sbb
push
cmpsl
sbb
in
mov
das
dec
inc
fisubrs
cli
fldcw
sub
mov
mov
push
popf
add
xchg
in
das
mov
cmp
cmpsb
and
loop
lea
mov
xor
fisttpll
xlat
and
out
mov
sub
xor
lret
dec
outsb
fidivl
and
dec
or
push
jmp
pop
xchg
shr
in
addr16
stc
push
into
cld
dec
fdiv
aad
pop
fcompl
dec
dec
mov
xor
push
push
adc
inc
cmpsl
imul
xor
dec
cmp
in
inc
inc
jo
insb
mov
inc
andb
ja
aad
mov
jle
lock
jne
dec
jae
adc
sbb
subl
push
es
or
sbb
dec
xchg
imul
clc
mov
dec
ss
add
fcmovnbe
sub
add
sbbb
and
cmpb
out
adc
das
dec
movb
adc
ljmp
adc
adc
add
xor
jo
inc
je
and
jno
sub
sbb
sub
daa
adc
mov
push
sbb
lahf
cmp
or
hlt
mov
sbb
stc
push
adc
push
cmp
adc
in
xor
inc
jle
in
outsl
je
call
push
hlt
ret
push
sbbb
inc
cmp
rclb
nop
inc
or
and
mov
pop
xchg
jnp
and
or
add
or
mov
jbe
rol
aas
or
pop
jecxz
repz
mov
add
pop
or
pop
andl
xor
adc
or
sub
clc
pop
flds
fs
sub
sbb
testb
adc
stos
in
and
imul
or
mov
add
push
add
mov
push
insl
lcall
enter
icebp
loop,pt
and
mov
adc
pop
pushl
jne
fldenv
mov
mov
out
daa
sbb
out
mov
or
call
cmp
sahf
push
inc
daa
aas
stc
popa
int
popa
scas
xor
sbb
mov
xor
test
out
andl
call
pop
mov
xchg
fs
gs
sbb
add
sub
aas
adcl
pop
bound
dec
decl
mov
sarb
cmpsb
popa
outsl
aam
dec
mov
sbb
push
mov
dec
add
adc
adc
cmp
mov
loope
lahf
sti
jne
add
add
push
or
jae
pop
mov
js
add
leave
and
insb
push
test
and
sub
push
sub
outsb
dec
clc
xor
mov
inc
loope
jno
pushf
dec
inc
mov
mov
fcomps
mov
push
sub
out
jl
inc
mov
dec
insl
hlt
push
mov
cmp
shrl
push
or
je
ret
lret
pop
mov
cmp
loope
inc
jne
movsb
mov
jb
sub
inc
xor
cld
pop
push
ret
pop
lea
mov
aam
add
lock
or
daa
fisttpll
in
adc
xor
js
adc
mov
adc
aas
pop
sub
testl
mov
inc
fsubr
push
sbb
pusha
cmc
test
nop
xchg
in
ret
dec
push
daa
mov
push
and
xchg
lahf
pop
call
push
fmull
dec
sbb
mov
arpl
jg
pop
pop
push
leave
push
adc
add
add
fwait
push
lock
cmpsb
mov
dec
and
push
adc
or
sub
adc
or
test
and
push
or
lret
movsl
lahf
mov
movsb
outsl
cmpsb
push
outsb
or
es
jmp
cmp
adc
xchg
inc
sti
xor
push
adc
xchg
out
xor
cmp
push
or
mov
xchg
adc
pop
je
dec
mov
pop
cmp
cmp
insb
pop
je
cmp
or
fcomps
pusha
scas
aas
push
xorb
iret
inc
add
imul
rolb
in
cli
cmc
push
nop
jae
in
int
lea
stos
test
dec
jbe
dec
xor
mov
jl
push
sub
pop
push
cmp
test
shlb
xor
enter
or
mov
in
add
adc
in
push
sub
out
outsl
inc
and
pop
test
inc
mov
mov
hlt
movsb
adcl
inc
imul
out
pop
and
sub
sub
mov
or
xchg
xor
enter
aad
pop
mov
add
sbb
outsb
mov
fstp
lea
out
scas
xchg
sbb
std
fstpl
push
push
mov
push
and
sbb
dec
dec
insl
hlt
xchg
mov
xchg
filds
imul
sbbb
rclb
xchg
movsb
jl
pop
push
ret
dec
pop
pop
cwtl
lods
pop
and
add
push
mov
xchg
and
pusha
xchg
lods
jmp
pop
imul
push
add
lcall
push
aam
add
jae
or
mov
push
dec
push
sbb
je
addb
dec
jne
cmp
xchg
jne
and
inc
inc
jo
xchg
fildl
in
jne
aas
xor
lcall
nop
xor
push
inc
jae
pop
sarl
jl
test
fcompl
ja
pop
insl
sub
mov
in
negl
aad
cmp
push
outsl
inc
jmp
push
push
fs
mov
add
sbb
cmp
lcall
sbb
cmp
jb
pop
sbb
mov
movl
add
xor
roll
pop
pop
pop
adcl
bound
pusha
add
jp
fnsave
into
mov
pop
sub
negl
shr
add
nop
scas
sub
insl
dec
push
adc
adc
push
adc
stos
add
sbb
push
pop
test
subb
imul
or
mov
imul
pop
adc
inc
ss
and
subb
movsl
int
mov
and
int3
cmc
mov
or
imul
push
lea
inc
pop
and
orl
movsb
jns
loope
je
jae
sarl
lea
scas
call
xor
push
xchg
ret
pop
sbb
add
jno
xchg
rclb
dec
xor
inc
sub
andl
mov
rolb
add
flds
sbb
mov
dec
or
inc
mov
lds
lock
add
push
push
dec
stos
jo
push
test
lds
jecxz
or
scas
jp
or
enter
push
daa
ret
cmp
jmp
sbb
and
jle
jne
ljmp
inc
pop
adc
and
xchg
cmp
jne
imul
dec
jne
out
adc
shlb
and
pop
mov
or
pop
mov
mov
jecxz
push
leave
push
in
sub
outsl
out
insb
and
jnp
fisttps
push
mov
push
and
xor
jl
jns
push
inc
dec
or
aas
pop
or
mov
sbb
cmp
rolb
add
adc
movsb
lahf
pop
xor
jmp
testb
cmp
or
inc
adc
cmpsb
add
mov
popf
sub
push
or
cmp
shr
test
jb
push
add
mov
test
lea
xchg
sub
fnop
adc
lods
lret
pop
lcall
test
scas
pop
aas
jbe
movsl
adc
ljmp
mov
mov
rclb
xor
jge
mov
jl
add
in
stos
popf
xorl
mov
or
nop
or
movsl
mov
add
pop
pop
std
rorb
xor
jmp
gs
in
hlt
outsl
and
adc
cmp
mov
das
mov
and
and
cmp
adc
sarl
xor
stos
orl
jg
push
xchg
inc
pop
cmp
fs
mov
push
ret
pop
nop
dec
jmp
je
mov
cmpsl
sbb
pusha
push
and
adc
and
call
adc
setb
or
push
sbb
std
ret
loopne
lret
ret
sub
cmpsb
fnsave
adc
push
movb
push
dec
xor
push
pop
mov
adc
cmp
imul
xor
inc
ficompl
inc
add
inc
or
sbb
dec
in
das
cmp
add
mov
jns
pop
ljmp
inc
xor
fldenv
rcrl
iret
pop
rcrl
push
pop
push
sub
dec
mov
mov
push
mov
inc
or
pop
add
and
sub
push
pop
int
int3
movb
pop
cwtl
jno
add
imul
insb
mov
lret
mov
adc
popa
inc
xlat
mov
sub
lods
loopne
and
test
add
jle
aad
inc
je
jbe
call
mov
push
xchg
sub
clc
push
dec
call
nop
or
test
xchg
xchg
rcr
rcrl
lret
test
pop
mov
shll
js
adc
loopne
cmpb
and
addr16
ja
mov
das
add
mov
inc
mov
test
fcmovnu
jo
adc
fmuls
cmpsb
lea
mov
nop
add
jecxz
mov
aam
pop
pusha
dec
inc
imul
mov
lock
insl
and
push
inc
imul
push
cltd
add
xor
push
push
leave
arpl
dec
orb
mov
movsb
sbb
and
push
test
cwtl
xchg
stos
sbb
psraw
imul
mov
cmpsl
dec
insb
ret
adc
xor
mov
fcmovu
pop
adc
rolb
aas
inc
lock
orl
daa
mov
fsubl
ss
out
push
loopne
adc
fs
dec
xchg
jnp
inc
xor
aam
arpl
nop
jbe
les
mov
mov
mov
mov
pop
pop
mov
mov
adc
test
les
or
xor
add
push
push
pop
xorl
xchg
dec
jmp
adc
mov
jmp
sbb
pop
testb
movb
inc
pop
mov
dec
pop
clts
or
sbbl
mov
and
cld
mov
rcrl
and
sti
in
mov
push
or
rorb
add
adc
mov
dec
push
les
cmpsl
and
sub
push
and
push
loope
idivb
sub
adc
rolb
sbb
push
cmpl
pop
fiaddl
inc
xchg
mov
cwtl
dec
das
pop
xor
cmp
adc
pop
mov
and
rorl
xor
add
push
inc
lods
fisubrs
sub
push
dec
xchg
fwait
mov
pusha
jl
xorl
jmp
fsubrp
xchg
shll
inc
add
or
add
ss
cmp
mov
xchg
xchg
inc
fiaddl
push
add
xchg
orl
add
and
pop
jo
imul
cmp
or
enter
in
adc
pusha
cmp
add
add
add
icebp
cmp
cmp
repz
ss
pop
adc
pop
enter
add
orb
cmp
sbb
sub
push
mov
shlb
shrb
xor
je
adc
jne
dec
add
lret
xlat
mov
or
adc
hlt
loopne
clc
adc
and
icebp
and
insb
enter
inc
mov
inc
inc
mov
scas
add
ss
push
add
mov
cmp
ficomps
mov
pusha
sahf
mov
sbb
adc
sub
loop
add
call
mov
mov
adc
inc
xchg
jb
js
cmp
out
shlb
xchg
mov
xor
loope
sbb
sub
movsl
sbb
mov
daa
xchg
insl
cwtl
sti
cmp
jne
fstl
xchg
out
rorb
mov
adc
std
fwait
iret
sub
lods
insl
adc
mov
or
sub
mov
lock
cwtl
adc
add
int3
repz
lea
pop
mov
je
pop
push
rclb
pop
cmpb
popa
adc
mov
je
pop
movsl
int
enter
sbb
lret
rcll
pminsw
adc
xchg
ficoms
int3
pop
mov
cmp
je
jp
inc
arpl
adc
pop
iret
add
add
mov
and
inc
push
and
jne
xor
js
xor
pusha
shll
ja
cmp
test
out
mov
dec
push
adc
dec
icebp
push
imul
cli
xchg
xchg
rolb
push
and
loop
shlb
add
add
call
pushf
mov
inc
dec
test
add
pop
lahf
jbe
adc
sbb
dec
dec
inc
xlat
push
loopne
or
stc
jp
xchg
mov
cmpsl
dec
daa
cmp
xchg
cmp
fsubs
push
pop
pop
sbb
addr16
sbb
xchg
sahf
add
daa
cmp
pushf
push
in
push
add
push
test
or
lea
or
je
mov
dec
inc
jle
cmp
or
pop
push
add
mov
pushf
jle
adc
nop
les
leave
enter
cwtl
dec
movsb
movsb
cltd
das
mov
mov
mov
nop
xlat
jl
jg
xor
mov
pop
sub
xlat
or
or
jne
pop
call
lret
adcb
pop
lcall
add
lods
add
out
add
dec
xor
sub
jae
mov
sbb
cwtl
jo
inc
adc
lahf
popa
add
movq
movb
cmp
stos
and
pop
into
inc
fs
push
cli
or
mov
or
das
mov
push
cmpsl
sub
pop
sbb
adc
mov
or
adc
xor
gs
and
je
mov
popa
inc
add
call
cmp
mov
shufps
into
xchg
je
mov
fwait
ret
in
pop
nop
pusha
inc
fndisi(8087
push
mov
cmp
je
mov
fidivl
ja
or
adc
or
xchg
por
or
xor
or
imul
test
or
js
pminub
lahf
and
sub
and
or
test
sbb
sbb
push
iret
dec
mov
jns
cmpb
ficompl
push
xchg
push
es
or
icebp
add
mov
dec
xor
or
pusha
adc
push
repnz
dec
cmp
xor
fisttps
leave
je
loop
mov
out
or
xlat
mov
xchg
mov
xchg
lds
insb
arpl
popf
push
inc
je
mov
das
addr16
xor
bound
jmp
nop
inc
inc
pop
pop
mov
or
pop
or
rclb
call
leave
loope
inc
jmp
aad
cmpsl
fs
jnp
addb
hlt
mov
cmp
jle
dec
add
lea
repz
je
sbb
push
inc
lcall
nop
xchg
lret
cmpsb
add
call
int3
aaa
sbb
mov
mov
mov
nop
push
sbb
add
mov
test
lcall
or
push
add
push
nopl
push
mov
lock
and
cmpb
pop
aas
push
pop
rolb
or
add
xchg
xor
inc
xor
lahf
pop
sbb
or
pop
add
int
sar
mov
andb
mov
sub
daa
dec
jecxz
push
add
push
ret
out
mov
or
push
or
inc
cmp
add
mov
pop
dec
xor
dec
add
add
mov
sub
inc
adc
xor
or
ret
jnp
inc
mov
insb
jne
les
jge
adc
fidivs
leave
mov
fidivrl
nop
scas
inc
inc
int3
push
rolb
mov
es
shrl
cmpsl
aaa
loope
mov
lret
je
adc
mov
xor
shlb
scas
dec
cmp
mov
fsts
in
rclb
dec
pop
push
inc
sar
cld
add
push
popa
push
sbb
dec
mov
mov
and
mov
cwtl
dec
or
xor
adc
and
cmp
add
or
shlb
push
dec
xchg
loopne
aam
mov
push
add
mov
add
xchg
mov
mov
adc
mov
xor
out
lods
movsb
adc
test
and
les
rorl
sbb
jne
lahf
xor
in
testb
xor
dec
cmpsb
into
mov
aam
clc
or
cwtl
int3
shl
or
add
add
cmp
add
inc
or
mov
xchg
cli
into
std
mov
cmpb
inc
jbe
mov
movb
out
popf
push
loop
imul
dec
xchg
push
push
inc
in
sbb
mov
ficoml
cmp
mulb
scas
jbe
pop
push
add
add
shr
inc
fsub
add
add
inc
insl
pop
movb
out
cwtl
rolb
adc
push
mov
xlat
or
or
or
inc
xlat
push
insl
xlat
fcmovu
or
dec
dec
adc
mov
jecxz
insl
mov
jmp
adc
pop
add
fildl
fmull
fildl
fsubp
cmpsl
sbb
mov
insb
daa
xor
fsubl
hlt
mov
lea
push
mov
xorb
cld
scas
push
lcall
add
outsb
or
lret
inc
mov
les
mov
push
cs
and
outsl
adc
push
outsb
push
mov
mov
and
faddl
inc
or
jo
xlat
pop
dec
cs
jb
cld
clc
cs
fs
xchg
sbb
xor
xor
push
movsl
mov
sbb
xchg
lock
adc
lahf
sub
jnp
dec
pop
and
dec
add
shlb
push
or
aam
inc
insb
dec
cs
or
add
imulb
xchg
outsb
idivb
pop
out
push
iret
repz
dec
pop
insb
shrb
xchg
inc
jnp
aaa
add
jne
add
loope
icebp
cmp
and
mov
js
sbb
mov
xchg
and
jecxz
add
lock
jecxz
jb
mov
jmp
sub
jecxz
clc
js
mov
lahf
daa
lret
and
scas
pcmpgtd
shl
push
cmc
mov
adc
dec
test
dec
dec
pop
or
push
pop
pop
enter
cmpsl
movsl
dec
outsl
pop
loopne
sub
sub
cmc
push
aaa
lret
mov
cmpsl
jmp
add
dec
enter
sub
movb
data16
in
mov
cmpsb
and
ret
sbb
pop
cli
je
fwait
push
fnstsw
push
sub
sub
sub
cmp
push
testb
dec
mov
inc
mov
cmp
out
cs
aaa
call
inc
loopne
imul
push
addl
inc
sub
cmp
int
cwtl
movl
enter
push
loop
push
mov
pop
inc
cmp
mov
mov
outsl
or
loope
or
dec
push
dec
pop
or
jl
jo
pop
loopne
add
jb
rcr
mov
add
je
push
jecxz
and
and
adc
cmp
pop
xchg
cmp
adc
mov
or
ss
or
ret
inc
and
gs
jbe
inc
loopne
or
fucomip
xor
or
sbb
pusha
xor
rclb
add
sbb
cwtl
add
addl
add
pop
xor
add
jbe
sbb
call
add
xchg
je
fsubs
nop
and
jnp
inc
inc
mov
inc
loopne
sti
sub
aam
ja
xor
aam
inc
fdivs
les
mov
in
fmull
lea
jle
lea
inc
shl
mov
jmp
push
inc
dec
mov
test
cmp
nop
loope
add
add
test
push
inc
fcmovnbe
inc
push
adc
push
push
mov
push
jbe
wbinvd
scas
imul
push
xchg
std
push
out
adc
adc
or
and
or
aaa
push
push
std
xchg
or
push
lea
jne
pop
push
call
loopne
imul
mov
cmpsl
jge
xchg
in
xor
xor
push
and
ret
aam
push
inc
idivl
movsl
and
pop
jle
or
daa
sub
inc
mov
pusha
and
lock
dec
mov
push
and
outsb
xor
jnp
or
push
loope
push
mov
inc
addr16
sub
jmp
and
stos
dec
or
add
mov
xchg
mov
add
loope
je
mov
mov
adcb
lods
mov
mov
adcb
mov
and
je
push
fists
xchg
or
sbbb
pop
cmpsb
push
or
or
add
sub
filds
sub
jae
mov
mov
sbb
add
xchg
insb
sbb
add
add
out
out
mov
aas
mov
inc
cmc
cltd
mov
mov
xchg
push
pop
int3
movsl
inc
inc
dec
scas
stos
push
inc
xor
add
lods
lock
xor
push
add
adc
or
cmp
mov
mov
mov
jbe
insb
push
rorb
adc
pushf
jl
sbb
sub
cmp
mov
or
cmp
jp
aam
aas
and
enter
lret
jecxz
add
ret
lret
jo
jge
rcll
lds
push
jmp
sub
maxps
push
or
or
out
adc
pop
mov
or
fsub
mov
xchg
into
mov
add
dec
addr16
inc
or
and
outsl
xor
js
ret
dec
std
xor
test
push
pop
bound
inc
and
or
int
lret
adc
mov
movb
inc
cmpb
adc
adc
in
ss
imul
inc
add
inc
or
int3
out
xor
mov
adc
sbb
sub
lret
or
or
test
mov
test
inc
cmp
pushf
ja
sbb
add
adc
sub
push
mov
out
pop
in
sbb
mov
cmp
push
ja
fiaddl
xorb
sub
dec
out
mov
pop
dec
in
dec
adcl
sbbb
push
adc
xchg
cs
out
mov
imulb
add
or
les
add
clc
pop
push
imul
and
push
cmp
jge
cltd
sti
push
mov
mov
or
hlt
or
fdivrs
inc
add
cld
inc
and
push
shrb
adc
mov
push
enter
imul
mov
loop
or
je
sbb
sbb
push
push
out
sahf
mov
push
subb
xor
mov
mov
pop
out
inc
or
push
sbb
pop
add
int3
mov
fs
outsl
inc
xor
sub
imul
adc
hlt
cmpb
scas
cs
sub
push
add
mov
mov
sbb
movsb
inc
pop
inc
add
inc
sbb
sarl
push
test
inc
and
adc
addb
push
inc
cli
addb
xchg
sbb
shr
and
sub
mov
inc
dec
and
out
inc
bound
rolb
into
sar
mov
test
mov
mov
add
out
add
rolb
pop
push
cli
sub
mov
leave
dec
push
push
scas
xlat
loope
mov
gs
jns
xlat
mov
out
cwtl
loop
aaa
dec
cmp
pusha
das
mov
shl
mov
sarl
push
inc
adc
mov
notl
mov
xor
pusha
xchg
and
aad
rcrb
xchg
and
and
rclb
mov
dec
jo
faddl
mov
rcpps
adc
and
sbb
push
add
jo
out
push
lods
adc
addb
sbb
pop
jne
mov
add
in
ds
cmpl
push
sbb
arpl
add
jge
ret
fs
rolb
cmp
pop
jmp
add
repz
add
add
mov
xor
push
mov
xlat
push
xor
dec
jb
add
mov
add
jo
lcall
or
mov
add
add
ljmp
jno
sub
scas
unpcklps
iret
dec
out
push
in
sbb
pusha
orl
in
sbb
or
das
sub
add
leave
xchg
mov
clc
adc
pop
cmp
sub
and
and
cwtl
outsl
push
xchg
add
sbb
jp
lea
xchg
mov
test
es
push
and
arpl
add
sub
mov
mov
xchg
imul
fs
push
mov
sub
mov
cmp
jbe
adc
jns
scas
add
mov
lods
pop
mov
adc
adc
push
mov
arpl
sbb
sbb
sbb
add
ret
mov
les
add
sysexit
add
cli
jnp
mov
jl
jle
jg
adc
aam
dec
dec
jle
dec
cmpsl
cltd
push
push
jmp
push
lahf
shr
or
cwtl
insb
pop
adc
nopl
adc
pop
or
arpl
cmp
add
aas
shlb
mov
sbb
ja
ret
inc
jle
xlat
sbbb
outsb
loop
je
lret
or
push
mov
shr
cmp
and
xchg
sbb
dec
inc
pop
cli
rcl
mov
call
fdivp
andl
inc
cmp
adc
ret
lahf
jmp
add
scas
inc
adc
jb
and
rcrb
pop
jg
out
inc
gs
cmp
jo
mov
jle
cmpb
dec
push
popf
dec
mov
sbb
adc
dec
lcall
or
cwtl
xor
pop
and
aaa
rorl
inc
add
jae
xor
dec
outsb
pop
enter
add
lret
enter
push
pop
add
xchg
and
cmpsl
push
sbb
mov
enter
es
xchg
es
xchg
insl
mov
dec
xor
shll
movsb
roll
daa
imul
dec
or
inc
gs
aaa
rolb
cs
aam
jle
test
movsb
and
stos
xchg
icebp
add
dec
shl
xlat
pop
pop
inc
xchg
mov
stos
push
sbb
hlt
std
mov
and
mov
shrb
mov
daa
xchg
sub
or
push
inc
ds
fidivs
mov
pop
sbb
pop
inc
push
xor
cmp
xor
aaa
or
adc
xchg
mov
sbb
inc
inc
movsl
xor
scas
mov
or
negl
pop
nop
xchg
mov
fs
add
push
push
movb
push
lock
lods
add
shll
or
mov
and
pop
jle
inc
jo
push
pop
push
and
cld
or
sub
pop
ds
mov
or
adc
dec
movsb
dec
or
adc
and
pop
movsb
sub
add
es
push
cmp
sbb
inc
add
push
sub
aaa
adc
pop
push
inc
cs
push
inc
mov
cwtl
cmpl
iret
mov
sbb
lds
daa
adc
lock
inc
pop
nop
pop
sub
mov
dec
or
inc
add
or
addb
jbe
ja
or
insb
and
add
test
aas
cmpb
adc
sub
aam
and
and
hlt
push
jle
and
lea
cmp
add
inc
in
inc
inc
or
add
push
cmp
test
dec
add
enter
jge
inc
mov
loope
push
dec
mov
jo
push
lods
xchg
adc
out
outsb
dec
mov
daa
xor
xor
imul
icebp
adc
jl
jmp
into
push
loop
xchg
popa
stos
sub
or
nop
inc
lahf
std
leave
jp
mov
push
xor
inc
sarl
sbb
test
movsb
loop
and
sti
add
push
lcall
mov
mov
movsb
imull
sub
add
cmovns
jb
jo
rcll
in
adc
or
roll
cmp
lret
cmp
cmp
xchg
or
inc
les
ja
adc
vsubss
adc
enter
xor
cmp
les
lock
mov
jne
or
sbbl
sub
jl
pop
pop
cmp
xchg
js
jno
push
testb
cmp
shlb
je
sbb
cmc
mov
insl
frstor
lret
mov
mov
sbb
cmp
sub
inc
push
xchg
inc
mov
les
out
adc
repnz
pop
mov
add
loopne
pop
ret
add
movsb
pop
int3
pop
cli
dec
mov
lea
jo
nop
jnp
xor
mov
push
les
sbb
xor
pop
jb
sub
sub
jnp
imul
dec
dec
push
jno
insl
sub
push
inc
add
sub
add
sub
popf
sub
mov
cs
push
push
pop
dec
les
pop
sub
lods
lods
adc
push
testl
push
dec
xor
or
sbb
mov
jecxz
push
add
dec
push
shr
pop
xchg
test
adc
ss
add
test
lods
mov
clc
and
xchg
call
ficoms
or
pop
cmp
lret
jmp
cmpl
sbb
xchg
sub
outsl
fs
in
inc
push
cmc
movb
inc
adc
fidivs
inc
xor
mov
cmc
xchg
xor
inc
mov
jge
cmp
mov
pop
mov
call
pop
dec
and
sub
leave
inc
jb
xor
pop
and
xchg
mov
push
mov
insl
add
je
rcrb
jecxz
leave
jne
lret
int3
es
cltd
pop
pop
pop
pop
jg
mov
test
jno
push
subl
mov
nop
mov
sub
push
mov
por
ljmp
or
add
sbb
jo
fisubrs
es
xor
sbbl
test
js
in
sub
mov
fiaddl
add
popa
jg
cwtl
jns
mov
aas
add
push
add
insl
cmp
push
add
stos
rcll
cmp
jne
xchg
pop
fwait
push
sub
sub
repz
xor
xor
test
xor
and
jle
xor
insl
mov
dec
jo
dec
je
add
dec
add
mov
jmp
in
ror
push
lahf
push
cmp
scas
sbb
fs
and
pop
jno
sub
lea
mov
mov
mov
lock
dec
push
push
lods
dec
inc
or
mov
mov
shll
or
add
ss
or
add
aaa
add
mov
daa
adc
pop
mov
or
call
push
mov
pushl
push
adc
sub
mov
rclb
inc
fbstp
mov
aas
fs
loope
fiaddl
fiaddl
adc
aad
dec
add
inc
lcall
sbb
cmpsb
jns
sbb
sbb
adc
mov
sbb
and
popa
mov
out
sub
jne
mov
test
adc
or
sbb
mov
and
insl
jne,pt
xor
push
dec
cmp
aam
jnp
inc
push
loope
mov
jmp
imul
sbb
and
push
loopne
ret
cmp
sub
pop
cmc
loope
ss
push
inc
pop
test
add
mov
pop
push
sub
out
push
ljmp
orb
mov
mov
jo
xchg
pop
mov
call
daa
sub
push
or
cmp
call
jo
adc
push
xchg
dec
sub
rclb
sbb
bound
sub
addr16
inc
add
xor
adc
or
mov
cmp
sub
stos
shrb
mov
nop
mov
and
aas
adc
push
out
xorb
test
dec
test
out
pop
clc
mov
push
addl
je
push
testb
sarl
cmp
adc
jb
nop
orl
dec
push
push
call
lods
ja
arpl
sub
jl
leave
and
mov
movsl
mov
dec
sbbb
out
pop
enter
pop
mov
xchg
push
and
xchg
rorb
enter
cwtl
das
mov
setg
sbb
mov
pop
dec
cmp
daa
push
push
rclb
clc
push
lahf
dec
inc
push
sub
push
mov
pusha
push
push
adc
sub
sahf
or
test
xchg
orb
cmp
jbe
dec
test
cmpsl
popf
rcll
pop
add
int3
add
and
jnp
cld
jge
pusha
les
sbb
jecxz
jnp
sbb
cmp
jp
push
inc
ljmp
add
sub
shlb
leave
push
aam
cmp
pop
xlat
jne
popf
mov
outsb
mov
add
add
bound
cmc
or
nopl
call
rclb
hlt
jle
mov
cmc
movb
push
stos
mov
sub
loopne
xor
and
out
or
ffree
pop
push
inc
adc
incb
sbb
add
push
shlb
sbb
stos
popa
sbb
sub
or
and
pop
sbb
fisubrl
push
jne
cld
shlb
addb
and
sbb
inc
test
fildl
movsl
loope
mov
push
loopne
mov
lods
mov
pop
add
inc
add
sbb
pop
adc
hlt
mov
inc
sbb
adc
dec
push
nop
in
jl
cmp
adc
enter
cmp
add
xor
adc
inc
pop
insb
inc
aam
loopne
testl
mov
mov
pop
pop
pop
pop
fs
mov
jl
pop
rcrb
mov
pusha
lahf
pop
or
hlt
xor
dec
adc
adc
aam
cltd
dec
add
sub
fucomip
ret
loop
mov
dec
or
or
pop
call
sub
adcb
adc
dec
daa
add
das
fdivs
fsubrs
sub
jo
push
mov
loop
lret
sub
and
movsb
scas
inc
mov
push
mov
push
jno
lea
lock
adc
dec
pop
call
icebp
pop
xor
add
mov
pop
xchg
iret
sub
jmp
das
das
test
sti
hlt
jmp
imul
xchg
jae
scas
cmp
or
gs
in
cmp
or
cmp
add
mov
jmp
xor
jmp
outsl
jne
jns,pn
imul
call
lock
jnp
imul
test
and
adc
mov
pop
test
mov
mov
adc
dec
jecxz
add
in
rolb
out
shrb
mov
push
in
xchg
lock
jb
sub
imul
test
pop
mov
push
lcall
nop
jmp
mov
outsl
ret
xchg
cmp
pusha
cmp
scas
push
push
pop
insl
inc
sbb
inc
xchg
push
sub
loopne
inc
mov
push
jmp
or
or
mov
mov
cs
push
push
or
or
add
adc
cmpb
add
adc
cmp
loopne
nop
mov
cmp
jmp
loop
movsb
mov
adc
cmp
repz
pop
jne
popf
pop
shrl
sub
sub
outsb
sub
xchg
or
add
aam
dec
in
push
loopne
pop
or
sub
add
pusha
sub
sub
cmpl
fisubl
pushf
adc
mov
add
ss
imul
inc
pop
call
mov
pop
mov
cmp
movsb
sub
popa
add
fnsave
cld
jnp
orb
mov
lcall
or
mov
out
sti
cmp
or
xchg
jbe
sti
mov
xchg
push
mov
daa
sbbl
aaa
addr16
out
jp
and
je
and
mov
mov
aaa
push
fiaddl
xchg
dec
push
xor
repz
jbe
mov
add
dec
and
lods
in
imul
inc
jb
pop
lds
loop
adc
fstps
and
test
xchg
mov
mov
cmp
xchg
dec
mov
cmc
add
or
dec
cmp
sbb
lods
fisttpl
mov
add
mov
lock
ficompl
pop
sbb
icebp
sub
or
in
add
sbb
cmp
jne
out
pop
jp
cltd
or
imul
movsb
or
aaa
push
inc
sub
pop
loop
testl
mov
push
mov
and
adc
stos
xchg
or
gs
pop
cmp
pop
aam
push
cmp
xchg
repz
imul
movsb
sbb
and
mov
fsts
xor
adc
dec
in
pop
push
dec
xor
cmp
add
mov
add
or
divb
xchg
inc
pop
mov
push
mov
stc
fsubl
push
push
mov
int
into
pushf
std
add
pop
cmpsl
jne
sub
inc
inc
aad
push
push
call
sbb
cmc
movsb
mov
sub
inc
cmp
lods
cltd
sbb
mov
arpl
sub
inc
call
fs
inc
negl
leave
adc
pop
pop
inc
inc
inc
mov
mov
out
and
add
sbb
fldl
mov
stc
jo
xchg
pop
int3
imul
repz
inc
add
outsl
ss
mov
adc
cmp
xchg
shlb
and
adcl
mov
push
cmp
or
lea
mov
sbb
xchg
aaa
inc
add
test
add
mov
sub
cmp
jno
mov
xchg
outsl
xlat
or
add
adc
es
dec
ja
fimull
dec
push
push
dec
mov
sub
pushf
jo
movsb
test
adc
bnd
imul
xchg
and
cwtl
or
daa
leave
divb
lods
cmpsl
sbb
mov
or
cmpsb
inc
xor
loop
nop
cmpsb
add
lds
orl
dec
jg
aam
push
xchg
arpl
idiv
jg
lock
add
and
pop
or
sub
rcll
sarb
dec
and
lcall
pop
imul
lea
jo
cmovl
das
pusha
dec
jno
and
cmp
jmp
dec
bound
decb
int3
sub
cmp
jne
jge
inc
out
mov
outsl
and
lods
mov
notl
push
imul
scas
hlt
xor
pusha
inc
inc
push
popa
cltd
orl
fnstcw
cmp
push
js
rcl
sub
rclb
sbb
rolb
jmp
loopne
nop
lds
subb
adc
mov
jnp
sub
inc
cmc
jmp
in
mov
test
xchg
mov
jl
or
imul
les
add
push
add
push
mov
int3
ret
mov
cmp
aaa
xchg
es
xchg
jp
fucom
pop
daa
adc
pop
cli
popa
ja
std
cmp
movsb
pop
mov
inc
mov
jae
cltd
clc
pop
or
mov
adc
loope
or
ffree
das
mov
mov
mov
mov
iret
rolb
ljmp
int3
int3
adc
adc
dec
xchg
push
mov
dec
je
sbb
or
rcrb
xchg
dec
adc
mov
push
out
jmp
dec
imul
sbb
push
mov
rorb
jne
and
loop
stos
mov
mov
pop
mov
ljmp
leave
and
ret
lock
mov
xchg
inc
pop
push
data16
test
roll
pop
push
mov
sub
sub
sub
push
dec
sub
es
mov
jecxz
sbb
push
in
pop
sub
and
je
mov
pop
jns
add
insl
imul
das
inc
test
add
xchg
outsb
adc
cmp
push
aam
mov
jl
gs
pop
add
mov
test
je
adc
xchg
aam
push
adc
ljmp
fisubs
imul
adc
push
enter
ret
ss
sub
lods
add
xchg
add
cmc
push
sub
cmpsl
je
outsl
mov
decb
test
xlat
push
fstpl
imul
sbb
jmp
sbb
pop
and
jg
jne
test
add
add
mov
test
push
cmp
ljmp
sub
fs
into
jp
in
into
mov
mulps
in
add
add
push
jo
add
sub
jne
lahf
ret
add
adc
pop
sub
xchg
adc
cwtl
xchg
lods
xor
cli
jmp
es
negb
in
pop
stos
rcrb
pop
add
mov
pop
call
jbe
sbb
int3
push
iret
or
add
dec
ret
or
jecxz
and
mov
pusha
push
or
push
add
mov
or
cmp
jle
movsl
dec
dec
mov
xchg
jmp
sub
mov
pop
and
mov
sub
push
or
loopne
inc
push
mov
clc
ss
stos
and
sarl
test
jo
add
push
cmp
nop
nop
rorb
cmp
pop
inc
pop
cmp
and
add
and
pushf
sbb
add
jp
pop
cmp
add
mov
push
popa
add
sahf
pop
mov
inc
cwtl
or
sbb
imul
call
mov
push
cmpsb
pop
push
xor
xchg
push
and
popa
jmp
and
or
xchg
pop
mov
aaa
outsl
push
orl
and
add
scas
sub
sbb
ret
adc
sub
or
orl
cmpsl
add
mov
mov
xchg
mov
pop
inc
cld
rol
inc
rolb
mov
mov
add
dec
sub
push
inc
or
es
or
idivl
cmpb
dec
xor
sarl
push
or
inc
adc
mov
sbb
sbb
and
or
aam
adc
ret
and
push
inc
push
fdivrl
inc
sbb
mov
sub
lahf
xchg
mov
xor
imul
pusha
or
jl
pop
xchg
adc
mov
xor
outsb
arpl
mov
push
xchg
push
fidivrs
shlb
cmp
inc
inc
pop
or
es
je
push
xchg
add
mov
test
inc
pushf
test
sar
jo,pt
or
adc
outsb
mov
sub
arpl
movsl
mov
jbe
popf
jbe
add
sub
call
or
sbb
push
mov
out
pop
jle
dec
arpl
and
outsl
in
adc
jl
pop
xchg
scas
call
and
int
cmp
push
pop
mov
dec
adc
inc
push
inc
sub
divb
and
sub
in
add
inc
sbb
cmp
test
mov
inc
mov
clc
xor
xor
add
jno
jne
jg
adc
mov
divb
pusha
loopne
push
and
dec
add
movl
dec
pop
pop
jmp
xlat
aad
dec
mov
test
and
sbb
inc
lret
jb
shlb
in
scas
push
mov
mov
scas
test
mov
sub
ja
imul
in
jno
loop
test
popa
mov
push
lret
adc
pop
les
add
sbb
push
pop
dec
cmp
lea
dec
rclb
and
jl
outsl
enter
out
sbb
mov
fimull
push
xchg
sbb
enter
push
and
dec
test
xchg
loopne
xchg
and
or
adc
mov
mov
dec
push
out
jo
xor
add
nop
push
mov
sub
xor
inc
push
inc
loope
dec
push
fisubrl
or
je
inc
inc
imul
mov
inc
mov
add
mov
add
and
pop
xchg
clc
mov
lds
dec
mov
in
and
dec
dec
movsl
enter
dec
add
push
mov
mov
xor
arpl
aad
out
stos
nop
and
xor
mov
lods
orl
jno
push
dec
mov
pop
pop
arpl
pop
mov
hlt
sbb
sbb
shrl
in
push
lock
cmp
cmpsb
mov
shll
rcrb
lods
sub
bound
xchg
push
and
orl
sub
pop
sub
pop
adc
xchg
mov
addl
stos
sub
idivl
add
cmpsb
mov
or
daa
cmp
pop
or
fisttpl
and
insl
pop
lock
mov
cs
dec
sub
sub
jo
cld
pop
add
xchg
inc
dec
push
and
mov
rolb
test
pop
adc
jp
push
mov
xorb
push
sub
rcll
pusha
int3
jge
push
or
outsb
pop
cmpsl
aaa
or
ret
movsl
je
insb
mov
inc
xchg
jmp
jbe
xchg
pop
dec
clc
out
xchg
sbb
fs
dec
je
sbb
xorb
cltd
sbb
insb
dec
push
xlat
xor
out
or
mov
push
pop
push
ja
jne
jge
popa
inc
inc
ss
sbb
mov
mov
xor
subl
mov
mov
pop
iret
push
aaa
pop
lcall
mov
and
mov
sbb
and
inc
pop
es
sub
push
or
push
mov
mov
scas
sub
in
dec
ljmp
movsl
xlat
sbb
shrb
das
stc
mov
into
add
inc
sbb
das
push
fstps
outsb
dec
dec
add
dec
add
lret
out
add
mov
cmp
adc
lcall
add
shll
adc
dec
fwait
xorb
ficoms
mov
mov
fs
outsl
jae
clc
and
pop
adc
jo
iret
mov
adc
aam
ds
jo
repz
cmp
cmp
and
mov
xchg
cmp
add
cmp
mov
dec
mov
adc
insl
movsb
test
xor
mov
inc
pop
xor
mov
add
push
cmpsl
or
mov
mov
and
mov
sbb
xchg
adc
pop
mov
loope
adc
into
xchg
adc
and
cmp
mov
inc
sbb
push
ret
mov
add
mov
or
push
adcb
cmp
push
imull
adc
push
pop
adc
push
mov
dec
push
outsb
test
inc
cli
inc
sbb
lock
push
or
push
jns
xor
jecxz
lods
lock
sbb
cmp
test
adc
mov
rolb
hlt
pop
call
cmp
repnz
cmpl
lock
gs
mov
cmp
xor
pusha
xchg
es
mov
adc
sbb
mov
sub
jne
ret
mov
sub
xchg
jo
jl
fsub
mov
daa
or
sub
xchg
pusha
and
add
pop
cmp
push
or
mov
rcrb
insl
sub
inc
test
sub
sbb
sbb
or
pop
cmpsw
roll
rolb
cmp
push
in
adc
in
loope
pop
sbb
mov
out
sbb
clc
mov
sub
rclb
mov
jg
inc
adc
adc
sub
pop
xor
test
xchg
adc
fwait
cmp
push
or
sub
push
jp
outsl
cwtl
add
popa
test
xchg
js
in
sbb
adc
cmp
sub
lret
sbb
sub
add
jmp
cmp
add
sti
push
xor
xchg
sub
fiadds
ja
or
push
movb
mov
adc
jmp
aam
cmp
movsl
ret
lea
andl
ffreep
mov
jl
pop
sub
cmc
insb
sbb
xor
ficoms
imul
clc
and
adc
xchg
in
mov
inc
pop
adc
push
pop
loopne
ret
dec
jle
xchg
sub
jnp
inc
add
test
cmp
lods
sbb
jg
imul
pinsrw
mov
mov
repz
xor
test
adc
insl
pop
cmpsb
and
mov
push
add
push
xchg
int
sub
fildll
mov
cmp
out
stos
lods
add
out
sub
cld
adc
dec
les
ret
jnp
dec
add
inc
mov
loopne
add
inc
jnp
xchg
pusha
jle
std
add
or
sahf
or
subl
add
inc
test
cli
mov
and
xchg
add
mov
movb
in
sub
push
cmp
rorl
sbb
inc
outsl
mov
pushf
jnp
inc
in
test
add
inc
stos
das
loop
ja
xchg
inc
les
sbb
in
xchg
pop
jge
fs
mov
test
nop
push
xor
in
lahf
clc
cmpl
add
test
inc
bound
pop
xor
loopne
popfw
inc
cmp
int
or
sub
inc
xor
jp
sbb
incl
cmp
adcl
aam
push
jns
or
outsl
adc
adc
pusha
testl
je
jmp
or
lret
sub
pushf
xchg
lods
or
push
and
xor
add
or
pop
insb
jmp
mov
sbb
das
pop
xor
jne
add
mov
imul
adc
add
sbb
int3
loope
call
mov
shl
pop
sub
in
jno
test
int
jb
test
aam
and
leave
jne
xchg
jnp
dec
dec
sbb
out
lods
adcb
mov
sbb
inc
stos
popf
insl
jge
sbbl
inc
cld
cs
nop
mov
fwait
xor
xchg
ss
arpl
dec
xor
mov
add
movsb
das
xchg
cmp
mov
mov
hlt
arpl
sbb
jmp
stos
adc
inc
sti
add
adc
leave
ret
sub
cltd
out
call
pop
loopne
fwait
clc
iret
fmull
jnp
and
jno
aad
push
or
add
mov
dec
sbb
push
mov
add
addr16
pop
inc
adc
pop
int3
cmpsb
and
push
push
add
daa
lret
loop
nop
fs
dec
mov
outsl
and
sub
pusha
insb
push
jg
cmp
pop
mov
sbb
cmp
push
sbb
mov
push
push
or
fsts
push
in
push
jecxz
xor
mov
sbb
xorl
mov
or
xor
mov
pop
push
rcll
adc
push
pop
mov
inc
add
fdiv
adc
xchg
aam
sub
sbb
imul
push
xchg
jnp
data16
int
xorl
dec
sbb
pop
aaa
inc
push
inc
pop
xor
add
and
push
loope
fbstp
lret
push
push
push
push
add
inc
out
and
ja
popf
dec
je
push
lds
inc
lock
and
js
jo
push
dec
addr16
mov
lods
inc
rcrb
lods
adc
movsl
popa
push
xchg
fldl
rclb
movsb
xchg
xchg
jo
xorl
and
xor
push
and
pop
movsl
subl
cmpl
iret
js
xor
push
add
mov
dec
test
mov
hlt
pop
test
mov
jnp
ret
aaa
sahf
lea
and
loope
inc
iret
bound
adc
and
or
sbb
inc
fisubl
sbb
mov
inc
dec
outsl
rolb
bound
add
mov
dec
push
movsb
jns
int3
inc
shll
add
pop
int
outsb
push
mov
insb
sub
pop
dec
call
jecxz
pop
dec
dec
fcomps
inc
dec
push
nop
pop
js
mov
outsl
sarl
adc
popa
dec
addr16
and
clc
push
stos
std
loopne
inc
jg
cltd
jnp
ret
lea
inc
popa
inc
add
scas
cmp
sahf
mov
fwait
dec
cmpsl
xchg
mov
lds
cmp
je
adc
clts
cmp
pop
aad
push
sub
lock
cli
dec
cmp
daa
and
xor
inc
push
sub
inc
dec
sub
inc
adc
ja
cmp
mov
inc
mov
xchg
dec
and
xchg
sub
push
pop
das
shlb
and
push
mov
stc
stos
cli
push
adc
test
adc
adc
in
int3
or
jnp
cmp
and
repz
cmpl
cld
push
add
lock
loopne
cmpsb
mov
das
adc
mov
sbb
mov
insl
int
cld
ljmp
add
mov
mov
add
push
inc
fbld
sti
add
cli
ljmp
mov
cld
sti
or
sbb
inc
cmpsb
stc
inc
jnp
xor
ret
subl
in
scas
mov
push
ret
fcoml
flds
cmp
or
inc
pop
mov
ret
mov
adc
dec
mov
jmp
inc
pushf
xchg
or
sub
loopne
test
jmp
out
adc
and
adc
imulb
mov
bswap
enter
xor
cltd
mov
aam
push
lret
push
in
cmp
xlat
mov
xor
cld
rolb
dec
lods
xchg
jo
add
test
xor
add
jne
ja
mov
jecxz
xor
mov
push
mov
cltd
jb
adc
les
jl
clc
jecxz
mov
dec
jmp
int3
fistpll
inc
add
popf
mov
and
sbb
sbb
mov
faddl
jmp
movsb
mov
inc
in
out
inc
subb
mov
xor
mov
and
popa
lahf
or
adc
jge
fdivrs
insb
inc
lret
cmpsl
dec
dec
xchg
mov
add
es
rcll
adc
sti
adc
push
jge
or
lret
enter
pusha
adcb
iret
scas
dec
outsb
dec
push
push
lock
icebp
es
jbe
or
add
aam
mov
xchg
adc
enter
fdivl
int3
and
dec
aas
mov
inc
add
or
sbb
and
sbb
add
and
cmp
or
pop
daa
addr16
adc
inc
lods
movl
adc
cmp
inc
add
outsl
lret
orb
sub
jl
adc
xlat
push
adc
lods
adc
mov
pop
shrb
mov
aas
mov
aad
jecxz
testb
clc
inc
xor
cmc
push
pop
movsb
add
sahf
and
push
xor
aas
rcr
rcll
andl
mov
cmp
push
inc
mov
push
xor
outsb
inc
or
icebp
push
lcall
pop
add
mov
jecxz
inc
jo
push
adc
inc
and
inc
push
loopne
lock
popa
stc
push
add
lret
push
lock
rorl
test
iret
add
sub
adc
fistl
pop
pop
push
popa
data16
sbb
aad
notl
or
jne
shlb
adc
xchg
pop
push
mov
sub
push
and
rcll
lea
lea
inc
or
loope
dec
flds
adc
add
adc
and
jmp
add
insl
jb
adc
cwtl
mov
pop
xchg
xor
imul
or
mov
imul
test
or
insl
xor
cmpsb
lcall
roll
dec
imul
jnp
push
js,pt
jecxz
add
ja
popf
add
or
rolb
loopne
dec
data16
mov
inc
add
sub
adc
loop
mov
je
push
sahf
pop
stos
mov
inc
cwtl
sub
pusha
popf
loop
dec
add
jle
add
fwait
and
add
bound
js
and
jmp
and
cmp
cmpsb
sub
push
clc
xchg
nop
movl
pop
rcr
push
push
cmp
dec
xchg
out
add
push
xchg
pusha
aad
and
push
push
add
or
scas
rol
shrl
clts
mov
stos
dec
outsb
add
adc
push
sbb
arpl
add
push
outsl
sahf
mov
mov
dec
jecxz
mov
jnp
fsubrp
mov
sbb
shufps
add
cmpb
inc
rorl
xor
sbb
lret
and
les
in
insb
sub
imul
pusha
iret
mov
xor
dec
jb
fisubs
mov
or
in
bound
jns
lret
pop
jg
jne
dec
cmp
cmpb
mov
dec
xchg
test
sub
sub
jl
cmp
lock
clc
push
push
inc
loopne
iret
jne
scas
sbb
xchg
push
ret
push
jb
loope
push
inc
shrl
je
sub
loopne
cmpl
and
or
adc
aas
loopne
cmovbe
cmpb
cmp
fidivs
frstor
add
cmp
inc
cwtl
xchg
fildll
popa
xchg
ja
xchg
add
xchg
add
xchg
lret
gs
outsb
aas
or
loopne
insl
adc
mov
or
cltd
and
call
jl
sbb
cmp
call
test
push
sub
lock
cmpsl
pop
and
xor
adc
cmp
mov
es
pop
pop
ret
mov
notb
jle
inc
retw
mov
addb
loope
pop
idivl
or
cmp
mov
std
xor
pusha
jg
inc
add
lea
dec
mov
lcall
adc
addr16
push
ret
sbb
or
negb
sub
popa
adc
std
adc
push
sti
fcmovnu
xor
or
push
js
lock
jo
nopl
mov
adc
adc
pop
rcrb
pop
out
dec
push
leave
dec
fcomip
adcl
xchg
jo
ret
rolb
out
jp
push
dec
mul
enter
gs
and
lahf
push
and
push
mov
je
push
inc
cmpsl
mov
rol
add
pop
adc
or
mov
add
inc
je
dec
pop
fisttps
sub
push
xchg
lock
fdivr
cmp
cwtl
sbb
dec
pop
cmp
push
loopne
mov
pop
sbb
xchg
jge
lea
pop
movsl
mov
and
popa
pop
dec
in
mov
sbb
rorb
adcl
loopne
insl
pusha
pop
push
or
outsl
insl
decb
movb
jp
dec
call
mov
int
or
push
pop
sub
repz
faddl
addr16
pop
aas
add
xor
leave
je
add
push
xor
dec
clc
ss
xlat
dec
pop
or
mov
sbb
imul
test
xchg
movsl
xor
push
xlat
test
xor
adc
repz
imul
stc
push
cmpsb
lret
dec
das
loope
pop
popf
xlat
xor
xchg
fwait
insb
jne
xorb
aad
jmp
inc
lea
enter
loope
adc
sahf
test
cmp
loop
pop
fchs
and
movsb
ja
xchg
push
lock
push
sbb
xchg
mov
sbb
or
or
mov
pop
push
and
dec
imul
insl
pop
push
cmp
je
cmpb
loop
aas
pop
dec
inc
je
jge
add
jp
lds
addb
int3
or
inc
sbb
push
out
jecxz
cmc
insl
cmp
or
add
sub
sbb
loope
dec
fwait
int
lea
bound
outsl
add
cmp
mov
xor
adc
adc
xor
sbb
xor
push
outsl
sbbb
sub
pop
ret
and
push
imul
nop
addl
dec
js
cmp
lods
cmp
and
adc
repz
xchg
push
test
xchg
jb
mov
adc
pop
and
rcll
xchg
and
xchg
inc
push
leave
mov
mov
add
adc
and
adc
je
pop
adc
sbb
and
and
push
inc
insb
mov
ldmxcsr
add
jne
loope
jne
and
adc
sti
mov
xchg
cmpsl
rclb
icebp
push
xchg
inc
mov
push
inc
fdivr
cmp
and
sub
data16
loopne
icebp
adc
aas
cmp
stos
mov
aam
add
sub
aaa
pusha
sub
or
xor
es
inc
test
pop
pop
push
pop
ret
inc
test
outsb
outsb
push
or
xor
inc
cwtl
jmp
daa
xcrypt-ecb
cmpsl
mov
js
out
lds
call
and
aad
xlat
xchg
mov
ret
popf
fadds
inc
mov
movb
pop
orb
cmp
fstl
lea
xchg
addl
sbb
ret
pop
sub
test
sbb
and
and
push
ret
ret
or
cmp
pop
scas
or
and
in
or
add
and
cwtl
add
aas
inc
or
sbb
adc
mov
adc
lahf
xchg
mov
push
adc
sar
daa
or
shlb
sbb
cmp
nop
outsl
lahf
push
insl
pop
mov
sbb
divl
enter
scas
jo
fwait
dec
loope
push
xchg
lcall
jmp
pop
inc
pop
sbb
inc
inc
inc
add
dec
pop
xchg
add
ja
sbb
bndstx
inc
iret
or
ljmp
mov
daa
popf
pop
dec
in
push
adc
mov
sbb
je
lods
or
ret
sub
xchg
cmpsl
push
sbb
push
push
jno
jmp
pop
sbbb
mov
std
jne
push
shll
popa
xor
popa
mov
das
clc
inc
dec
lds
imul
xchg
pop
dec
xor
sbb
or
stc
js
push
or
and
inc
mov
fdivs
arpl
xchg
pop
pop
imull
push
cmpb
cmpb
sbb
mov
in
iret
adc
mov
and
lods
insl
dec
pop
negl
dec
xor
add
sbb
in
cmp
test
in
adc
or
rorb
cld
jmp
gs
dec
and
add
lahf
sub
bndstx
cmp
orl
orb
cmpsl
insl
jecxz
add
sub
jb
shlb
mov
je
inc
cld
inc
gs
mov
lods
jmp
adc
loope
popa
adc
rcll
dec
and
push
flds
adc
pop
lock
mov
leave
sahf
mov
addb
push
cli
push
insb
mov
or
aam
or
das
mov
add
mov
push
shll
arpl
dec
andb
add
mov
inc
ja
arpl
repz
dec
sub
and
jnp
pusha
inc
and
lods
dec
outsl
scas
mov
dec
dec
add
cs
ret
xchg
std
and
addb
sbb
jg
lods
roll
or
je
push
pop
jmp
enter
pop
fistl
jb
xor
jmp
ret
dec
out
jmp
mov
nop
dec
icebp
cwtl
lret
dec
cmp
sbb
add
push
sbb
data16
test
xor
mov
xlat
add
movl
push
jle
dec
in
movsl
xor
sbb
jmp
mov
repz
iret
fldenv
insl
adcl
jns
test
imul
loope
xor
xor
add
stos
out
and
mov
push
and
dec
and
adc
and
inc
mov
mov
inc
jne
cmp
sub
inc
es
dec
dec
aaa
arpl
add
inc
mov
jp
mov
and
xor
push
add
jmp
mov
cmp
mov
xchg
cmp
lcall
loop
imul
xor
sti
inc
sbb
scas
in
rcl
mov
pop
push
xchg
clc
inc
dec
add
and
push
and
lahf
inc
push
xchg
cmpsb
mov
sub
jp
or
xchg
dec
mov
pop
and
and
into
adc
test
bound
sbb
adc
test
xchg
pop
fs
and
sbb
jge
sbb
leave
pop
xor
push
xchg
imul
hlt
lret
xor
daa
flds
mov
or
sbb
test
in
fcompl
pop
aam
xchg
insb
mov
sub
and
je
inc
push
jl
sbb
stos
adc
sub
jo
jo
ret
push
xchg
daa
add
daa
inc
add
push
inc
lret
and
in
xchg
clc
popf
mov
cwtl
or
je
xor
sbb
push
cmp
nop
fmull
xor
fistps
lahf
fisttpll
lods
mov
jl
push
inc
sub
and
orl
add
pop
mov
xchg
sbb
adc
shrb
dec
ret
adc
mov
lock
movsb
movsb
sub
mov
push
insl
jnp
mov
sub
add
daa
scas
xchg
add
xor
xchg
xchg
sahf
dec
or
push
add
xlat
xchg
pop
xchg
lds
andb
ret
negb
pop
pop
push
inc
rorl
push
ret
lock
daa
insl
adc
jge
or
imul
mov
nop
xchg
inc
mov
mov
xchg
lods
jne
or
push
dec
or
and
sub
mov
cmp
mov
test
ret
inc
xor
mov
or
pop
jno
adc
rcrb
imul
ret
shlb
and
movsl
or
mov
jo
inc
add
sbb
gs
fmul
sbb
push
push
pop
or
inc
push
push
jns
arpl
dec
test
push
xchg
pop
pop
sbb
add
lea
call
push
sti
sbb
scas
mov
or
das
sbb
lret
in
push
jne,pn
add
das
pop
push
or
daa
jae
cmp
and
cltd
xchg
in
mov
pusha
test
ret
hlt
ja
or
and
das
lret
and
push
repnz
js
add
push
lods
ja
leave
sub
xchg
pop
push
cs
mov
or
mov
movsl
and
and
inc
mov
xor
enter
shr
cmp
jge
sbb
pop
cmp
jge
and
addr16
movsl
aad
fistpl
xor
push
aas
mov
cmp
fisttps
and
loopne
push
add
dec
xor
mov
test
aam
test
test
orps
bound
sbb
adc
adc
sbb
pop
sarb
sti
je
mov
test
jmp
or
mov
and
adc
sub
call
out
xchg
sub
imul
pop
shlb
xchg
or
shrl
mov
pop
cmpsl
popa
bound
roll
ds
fisubrs
jo
pop
xor
cmp
xchg
adc
adc
jo
cmp
sbb
fwait
ret
aad
pop
pop
lret
adc
mov
js
xor
mov
inc
pop
pop
call
test
sub
xchg
cmp
and
adc
mov
cmp
sbb
push
repnz
jae
jmp
mov
sbb
call
shlb
xor
out
ret
or
adc
je
cltd
cwtl
test
xchg
fwait
mov
loopne
jns
push
sbb
inc
scas
xor
or
inc
fsubrp
adc
shlb
push
push
popa
jg
shlb
insb
push
push
dec
add
je
pop
pop
mov
fwait
adc
and
jnp
push
pop
scas
and
in
inc
pop
dec
adc
insb
enter
xchg
cltd
js
negl
xor
and
sub
dec
sbb
inc
repz
movsb
daa
pop
test
add
pop
rolb
cmp
loopne
push
xor
xor
idivb
push
in
je
mov
jne
push
cltd
adc
imul
sti
jns
push
adc
jns
inc
gs
push
dec
jbe
out
add
cmp
xchg
jle
adcl
sub
adc
daa
hlt
or
imul
inc
xor
xchg
mov
or
pusha
dec
fmull
fs
xchg
imul
or
jle
popw
je
in
adc
pop
cmp
push
jp
push
add
lods
pushf
cmp
in
adc
push
xor
outsl
add
cmp
dec
sbb
sbb
pop
and
dec
cmp
call
shlb
scas
enter
and
lahf
xchg
icebp
push
add
or
rorl
loop
clc
cwtl
push
aaa
and
cmp
lods
inc
insl
loope
and
ficoms
xlat
mov
lock
lds
xchg
adc
mov
sbb
out
stc
mov
sbb
sbb
or
ja
outsl
add
pop
or
decl
js
add
insb
cltd
add
sbb
je
xor
fwait
add
cmp
add
jge
test
in
or
add
stc
repnz
add
xchg
jo
pusha
inc
and
or
movsb
xchg
add
push
out
xchg
cmc
sbb
adc
pop
popl
cmpsl
mov
cmc
in
adc
mov
and
xchg
or
xchg
outsb
and
das
add
call
add
loopne
jle
push
xchg
out
jge
sub
push
lock
daa
or
or
and
dec
cmpsb
loopne
pop
jl
fnstsw
les
ror
xchg
or
sbb
fsubl
outsl
fwait
mov
and
fidivl
dec
mov
inc
pop
mov
xor
mov
sub
rolb
push
mov
xchg
mov
jmp
aaa
insl
sbb
xor
or
fisubl
adc
test
sahf
mov
rorl
rorb
mov
int
inc
mov
add
inc
sub
push
and
adc
sbb
cltd
pusha
fimuls
stos
stos
jo
cmp
mov
mov
lcall
inc
lods
push
sub
daa
or
stos
stos
adc
pop
jmp
ja
sbb
mov
jge
dec
jno
jo
scas
adc
fdiv
add
cmp
cs
jle
das
ficomps
and
jle
adc
sbb
sbb
xchg
lret
and
lock
push
cmpl
stos
flds
shl
shrb
lods
or
and
fwait
movsb
rolb
pop
test
jmp
imul
scas
sbb
add
cmp
jle
sbb
push
mov
cmp
and
test
and
dec
aam
or
dec
sub
xchg
cmp
lock
int3
or
dec
mov
or
mov
pusha
hlt
repz
add
pop
out
push
adc
adc
xchg
mov
push
out
mov
addb
loopne
xor
std
add
pop
pop
add
fs
mov
pop
call
xor
mov
dec
xlat
adc
mov
xchg
jge
cmp
pop
dec
outsb
lret
les
scas
sbb
stos
pop
xchg
cmp
add
popf
test
mov
mov
fcom
sub
inc
in
push
in
add
adc
pop
mov
dec
loopne
popf
adc
push
stos
xor
sub
inc
xchg
das
push
add
aaa
dec
test
push
lock
aam
enter
add
fsubl
sbb
mov
xor
lret
xlat
cwtl
add
outsb
sub
dec
jne
pop
dec
mov
push
loop
ret
sbb
call
shlb
mov
fnstenv
dec
cld
add
or
sub
mov
add
fs
and
jg
shlb
xor
dec
aam
mov
add
push
movsb
add
jge
cld
or
fwait
or
cmp
mov
cli
xor
dec
movsl
cmp
dec
dec
out
mov
inc
add
ficompl
xchg
cmp
sbb
pop
xchg
in
inc
rorb
lcall
push
fwait
lahf
jecxz
popa
pop
pop
or
push
xor
pop
xor
fwait
out
mov
mov
into
mov
fwait
xor
xchg
mov
ret
add
loopne
mov
imulb
inc
add
adc
xor
mov
pop
push
sub
pop
or
xchg
sub
push
add
jne
and
out
sub
jbe
sbb
pop
cwtl
mov
orb
lahf
pop
imul
stos
aam
fcoms
push
aam
xchg
sub
xchg
pop
mov
movl
sbb
lea
push
imul
push
repz
in
shrl
dec
arpl
sub
and
add
add
and
adc
stos
dec
mov
xchg
mov
out
sarb
mov
dec
mov
dec
xchg
icebp
adc
sbb
push
mov
jne
and
decb
mov
mov
sbb
or
les
shlb
jmp
push
jo
add
sbb
jp
add
adc
mov
fldz
lods
mov
faddl
es
test
add
adc
inc
das
push
icebp
fldenv
aam
inc
push
fisttps
mov
xchg
in
dec
in
cmovns
sub
popf
adcb
lods
xor
or
movb
out
adc
sub
pusha
adc
aaa
nop
push
jp
daa
clc
cmp
mov
pop
fsubrs
or
enter
lcall
in
mov
cmp
xorl
push
in
popf
or
adc
jnp
inc
add
adc
insb
push
sbbl
sbb
push
xor
mov
jle
and
lds
mov
sub
scas
adc
fisubl
cmp
jmp
ret
add
adc
test
mov
cmp
and
push
mov
mov
pop
sub
jecxz,pt
lods
xchg
mov
dec
dec
inc
subb
push
imul
or
bound
insl
xchg
outsl
push
lds
enter
mov
xchg
sub
call
jmp
sbb
aam
aam
pop
or
ss
jbe
add
xchg
push
add
add
fldcw
gs
inc
or
inc
shrl
js
es
jae
xor
xor
dec
mov
jge
mov
js
movb
enter
mov
jl
cld
nop
cli
outsl
ret
add
mov
add
repz
dec
and
adc
insl
insb
or
movsl
push
pusha
dec
mov
jecxz
je
inc
adc
je
mov
fnstenv
ja
testb
dec
ja
hlt
sub
mov
mov
lcall
pop
xor
lods
or
and
movsl
lea
pop
push
insb
push
fidivrl
mov
les
mov
xchg
and
orb
add
dec
and
shrl
push
out
incb
cmpsl
hlt
add
das
dec
ss
xchg
xchg
mov
cmp
test
mov
dec
jnp
and
in
call
inc
xor
ja,pt
dec
adc
lahf
mov
add
loopne
mov
cmpsl
or
loop
int
push
out
faddl
sbb
hlt
addb
xor
sub
adc
adc
jb
shl
cs
shlb
push
aam
cs
cs
push
sub
fdivs
jp
fldt
mov
xor
jmp
loop
adc
inc
mov
adc
shrb
jg
inc
xorl
call
jo
or
dec
je
int
sbb
jmp
push
lcall
add
cmpw
sub
dec
ja
jg
push
inc
test
lock
fimull
leave
movsb
pop
add
sub
lock
mov
xor
adc
sbb
fadds
stc
and
lock
mov
data16
sbb
rorl
in
in
adc
add
xor
add
xor
loope
mov
jge
mov
in
out
push
add
ds
xchg
es
in
out
sub
lock
adc
in
sbb
sub
in
mov
das
in
dec
cmp
adc
out
lea
jo
loopne
jle
inc
jne
jb
les
ss
inc
inc
loopne
push
lods
cwtl
test
inc
enter
sti
push
inc
fidivrl
push
jnp
push
imul
adcb
imul
fcoms
sbb
call
mov
pushf
and
fs
xchg
sbb
and
add
add
mov
xor
xlat
mov
lret
daa
rorl
add
or
fwait
adc
fwait
fwait
mov
mov
xor
sbbl
sbb
fwait
mov
sub
and
fistl
sbb
or
sub
sub
jae
sub
xor
adc
and
rol
cmpsb
xor
mov
add
and
push
push
mov
push
aas
test
sub
sbb
mov
adc
jmp
dec
dec
mov
inc
ficoml
adc
lods
movsb
nop
push
cmpsb
pop
sub
adc
pop
adc
loope
rcrl
hlt
sbb
push
xorl
mov
cld
sti
emms
dec
mov
bt
cwtl
les
ljmp
inc
ret
ja
cmp
jne
or
popl
fwait
or
mov
inc
xor
sbb
fwait
add
imul
je
push
add
mov
inc
mov
aas
add
dec
xor
movsb
dec
xor
mov
lods
mov
adc
add
jp
push
xor
inc
loop
mov
sbb
pop
addb
iret
sbb
hlt
ja
and
lock
inc
jne
dec
rorb
and
stos
adc
aam
adc
and
dec
push
ret
aaa
cs
filds
add
dec
and
sbb
pop
test
mov
push
fs
call
adc
mov
sbb
mov
dec
cmp
popf
les
movl
pop
push
sbb
dec
mov
test
xchg
dec
xlat
adc
enter
sarl
and
mov
xor
dec
test
ficomps
and
and
call
loopne
shll
ljmp
or
clc
cmp
test
cmp
mov
insl
nop
lods
and
xchg
mov
add
mov
dec
je
or
in
add
cmp
sbb
cmp
repnz
nop
mov
push
cmp
mov
inc
and
or
out
pop
ret
mov
aas
xchg
mov
xchg
inc
popa
xchg
cs
add
dec
daa
xorb
or
and
mov
addb
test
adc
mov
xor
out
call
push
jecxz
sub
pop
lret
adc
adc
ret
bndldx
mov
clc
sbb
xchg
mov
nop
xchg
in
sahf
inc
movsb
int
xchg
clc
test
push
nop
scas
int3
les
cmpsb
xor
mov
xchg
or
sub
fdivl
arpl
xchg
rolb
test
in
push
add
pop
cwtl
add
movsl
add
sub
mov
and
aad
or
rclb
sbb
hlt
add
and
or
push
sbb
jo
sub
int3
jle
loope
sub
jge
add
fdivrl
adc
rolb
and
js
decl
push
insl
jecxz
xor
xchg
pusha
out
rorb
xchg
xor
push
pop
and
and
pop
jbe
or
stc
jl
inc
push
add
js
dec
testl
scas
inc
fcoml
mov
cmp
cmpsl
stos
mov
push
push
or
xchg
push
or
lds
inc
mov
rcll
iret
mov
sub
mov
push
movb
test
xor
push
cmp
and
xor
les
xchg
add
aas
aam
cmp
jne
jl
dec
rolb
xchg
cwtl
cmp
addl
rcl
xor
jg
ret
mov
jmp
or
xchg
clc
or
icebp
rorb
mov
xchg
or
jp
rcrl
sub
sbb
or
nop
inc
cs
or
mov
add
hlt
add
clc
jge
cmp
sub
mov
jae
lock
stos
mov
jo
cmp
mov
cltd
or
outsl
xor
push
jle
adc
fildl
pop
push
xchg
mov
add
jmp
inc
push
and
inc
ds
cmpsl
sub
push
cmp
movsb
add
fisttps
loopne
setl
jns
cmp
inc
hlt
sbb
arpl
adc
mov
in
mov
cs
sbb
mov
sub
adc
or
sbb
xor
push
loop
push
mov
call
xlat
lea
stos
sbb
jge
or
inc
cmp
cmp
mov
sbb
lahf
xchg
mov
bnd
or
into
sub
pusha
pusha
inc
nop
shll
push
pop
cmp
inc
push
in
adc
stc
dec
fistps
pop
push
scas
adcb
mov
push
addl
push
or
push
pusha
jmp
loop
insl
sbb
pusha
insb
dec
dec
mov
punpckhdq
mov
cmc
outsb
lods
xor
push
jge
insb
push
add
ret
inc
sub
and
inc
mov
je
in
stc
cmp
adc
adc
dec
pop
jg
mov
mov
lock
call
call
adc
lea
mov
cmp
js
aaa
inc
sub
iret
xor
pop
inc
clc
dec
and
push
or
cltd
mov
adc
lahf
enter
movsb
addl
jp
mov
push
pop
jne
inc
rol
scas
js
add
add
adc
rcll
and
or
in
push
cmpb
lock
adc
inc
mov
popf
xchg
cmpb
xor
xor
push
xchg
insl
outsb
mov
pop
fisttps
ljmp
pop
xor
adc
rol
and
inc
inc
and
and
add
xchg
sbb
mov
out
cmp
ja
je
push
mov
pop
jl
cld
lock
test
mov
sbb
cmpl
fildl
and
xchg
mov
adc
or
inc
popa
jo
sbb
and
sub
push
js
add
cmp
jae
inc
sbb
lahf
and
out
pop
cmp
pop
or
das
or
or
sbb
mov
cmp
cwtl
cltd
pusha
clc
loopne
inc
movb
jmp
movsl
pop
xchg
xchg
mov
xor
inc
sbb
dec
lock
xor
mov
inc
fdivrs
insb
pop
dec
xchg
cmp
sub
sbb
pushf
lods
ffreep
xor
mov
fwait
jae
sbb
aaa
or
ss
inc
mov
cs
lret
in
mov
dec
lcall
lret
jno
call
add
test
pop
sbb
xor
les
sbb
inc
fs
lret
movsb
jo
xchg
sub
sbb
and
pop
xchg
inc
cmp
jbe
cmp
xchg
mov
jge
sbb
inc
and
xor
movzbl
jmp
mov
mov
dec
lcall
je
and
jbe
dec
out
pusha
and
addb
fwait
mov
dec
adc
mov
xor
ret
push
add
and
xchg
pop
push
jmp
adc
and
push
pop
ret
loopne
mov
loopne
or
sbb
sbb
lret
cmc
or
adc
dec
lahf
stos
push
lods
or
xor
dec
mov
mov
pop
fstps
outsb
sub
mov
nop
sbb
mov
jne
scas
jnp
and
stos
push
out
or
dec
jp
andl
es
addr16
inc
adc
jb
jo
cmp
inc
inc
jmp
jne
mov
cmpsl
jo
jne
fcmovnu
pop
xchg
pop
inc
repz
mov
jp
sub
outsb
push
add
push
adc
sub
repz
mov
bound
iret
ds
mov
lods
int3
sub
ljmp
sti
ljmp
cmp
xchg
add
push
add
ret
imul
addl
and
cmp
pop
movb
out
adc
and
ret
push
mov
xchg
fadds
mov
add
sbb
sub
sbb
inc
aaa
fld
dec
jbe
or
int3
nop
push
daa
or
mov
jecxz
leave
iret
jg
movsb
out
insl
sub
inc
mov
pop
sbb
cwtl
sub
or
pop
push
adc
and
imul
sbb
xchg
cmp
nop
push
add
std
lahf
sub
and
jb
in
mov
mov
jp
or
iret
andb
and
jne
aas
loope
leave
jmp
nop
out
jecxz
shrb
push
inc
and
scas
popa
dec
popf
mulb
adc
subb
insb
push
test
ja
shrb
sbb
jmp
fadds
jl
inc
jbe
or
rcll
push
call
pop
sbb
pop
or
adc
in
push
jne
push
cmc
xchg
jge
push
and
ljmp
pop
mov
notb
jl
mov
dec
and
in
rorb
aaa
inc
loope
fs
push
xchg
mov
pusha
scas
mov
sbb
mov
pop
cmc
xorb
push
test
lds
pushf
shrb
aas
call
mov
cli
mov
xchg
mov
add
imul
and
in
enter
and
pop
les
arpl
fucom
loope
out
inc
daa
adc
fdivl
insl
dec
fiaddl
out
jl
daa
mov
es
adc
sbb
push
daa
sub
addr16
xor
mov
inc
leave
adc
mov
pop
sbb
fs
dec
dec
or
sbb
ror
in
add
jno
sahf
xchg
sbb
js
mov
push
inc
mov
cmp
sbb
xchg
rcrl
add
test
add
and
test
imul
pop
adc
adc
xchg
pushf
pop
xchg
xchg
aad
and
test
fwait
mov
pop
push
jle
and
sbb
fsubr
test
fcoml
nop
push
or
sbb
dec
cmp
cmp
or
adc
xchg
cmp
cmpsb
push
sub
dec
fildl
dec
inc
mov
dec
inc
xlat
pop
pushf
or
out
cs
adc
lea
fbstp
mov
lahf
jmp
inc
add
or
push
scas
incl
insb
or
jg
imul
jge
mov
pop
sbb
or
pop
adc
test
lods
cmc
ret
pop
sbb
add
and
aaa
or
dec
add
cwtl
rcrb
outsl
adc
cs
fs
out
rolb
mov
mov
cwtl
rolb
push
adc
add
jb
mov
dec
in
mov
pop
test
lahf
adc
sub
inc
fs
xor
shll
jo
stos
xor
xchg
scas
or
add
inc
sbb
inc
paddsw
jb
and
mov
pop
lret
add
and
movsb
hlt
repz
add
pushf
hlt
xchg
pop
xor
and
push
fcomp
xchg
cmp
fsubrs
loopne
add
sbbb
push
or
mov
ljmp
sub
fldcw
xor
data16
fwait
jne
pusha
fucomip
or
push
adcb
sbb
jne
adc
pop
sbb
je
call
mov
into
inc
xchg
sbb
or
or
subl
into
xor
inc
jbe
add
mov
shrb
aam
sub
ret
pusha
and
shrb
loopne
dec
jne
addb
adc
push
imul
push
push
adc
inc
mov
lcall
push
xchg
jmp
jmp
dec
add
adc
add
mov
cmp
push
loope
xchg
sub
adc
mov
adc
add
sahf
dec
shll
push
xchg
push
pusha
lret
int3
jmp
push
push
cmp
cwtl
sub
or
imul
fcomip
leave
fsubrs
and
js
clc
adc
mov
fadds
rcrl
dec
mov
insb
outsl
hlt
inc
dec
xchg
inc
inc
inc
loopne
add
shr
leave
xor
push
or
mov
sbb
or
andb
int
or
xchg
pop
mov
inc
push
and
xor
sbb
insb
scas
add
dec
inc
dec
inc
sbb
inc
push
sbb
out
inc
push
pop
sbb
ja
mov
dec
adc
xor
jae
or
les
dec
rcr
fdivr
or
or
sub
shrl
cmp
jne
or
pop
adc
addr16
aas
jmp
mov
jo
bound
mov
push
mov
mov
sbb
rcll
rorb
ret
sbbl
popa
mov
sbb
js
aam
jae
or
test
mov
push
jl
and
sbb
and
adc
lcall
and
jmp
jle
push
mov
sub
mov
enter
sub
sbb
out
loopne
xchg
and
sbb
movlps
movsl
mov
aam
out
pop
add
inc
sbb
sbb
enter
orb
or
movsl
std
mov
pop
add
cmp
and
add
dec
lds
push
mov
loopne
cmp
sub
and
into
cwtl
in
inc
push
dec
aam
adc
sub
cmp
jge
xchg
adc
xchg
fiadds
push
fucomp
add
xchg
jl
or
sbb
push
xchg
jg
fdivp
mov
arpl
clc
and
sub
sbb
or
nop
xchg
scas
ret
adc
pusha
or
loopne
adc
mov
mov
mov
fs
pop
ret
mov
add
dec
cmpsl
jo
inc
cwtl
test
mov
add
sbb
nop
or
and
mov
mov
cmp
and
imul
and
mov
hlt
sub
test
adc
pop
in
jmp
xchg
pop
in
or
jne
add
add
sub
and
test
insl
mov
sbb
test
popa
cmp
inc
je
mov
in
mov
pop
pop
adc
or
xor
pop
mov
add
fwait
xor
or
imul
mov
cmp
stc
push
cmp
sub
sub
and
fcom
dec
lret
and
inc
inc
mov
or
push
daa
push
in
cmp
sbb
daa
lock
jne
and
movsl
rorb
je
xor
jle
rcrb
fnstcw
mov
popa
ret
bound
int3
inc
lret
gs
sub
nop
dec
add
adc
ja
movsl
mov
or
lahf
je
xor
lret
add
add
add
cmpl
ljmp
fidivl
mov
int
push
je
mov
imul
ficompl
jmp
pop
add
data16
or
js
and
rclb
outsb
inc
movsl
mov
xchg
mov
cs
lcall
pop
pop
inc
cmp
push
lea
aad
add
or
lock
dec
push
hlt
test
or
jl
scas
lock
pusha
xchg
cmpl
fadds
test
sbbb
ficompl
lock
subl
or
inc
push
inc
imulb
cmp
jo
dec
jl
push
imul
or
insl
ret
push
xor
mov
jg
add
adc
add
dec
std
sbb
push
adc
dec
cmp
sbb
pop
inc
sub
hlt
lahf
into
popa
or
add
and
and
outsb
jne
and
push
lods
add
dec
push
jae
inc
int3
jmp
pop
mov
push
pop
jle
sub
push
inc
jge
xchg
sbb
push
test
inc
lods
sub
jb
mov
out
and
inc
sbb
add
fstpt
lods
imul
and
push
inc
mov
xor
mov
adc
adc
adc
sti
sar
enter
loope
jle
mov
iret
rcll
js
push
add
or
addr16
sub
add
and
add
xor
into
adc
pop
inc
ret
inc
pop
fnstenv
lock
and
mov
sub
fiaddl
stos
shrb
or
jecxz
movsb
fnstcw
insb
mov
or
pop
sbb
fcoms
test
inc
mov
mov
inc
lret
dec
and
sbb
ret
push
fadds
dec
or
sbb
js
dec
popa
push
adc
or
mov
xor
push
xor
pop
sub
inc
mov
inc
les
xchg
sub
add
int
inc
in
or
or
or
pusha
mov
sbb
inc
call
mov
dec
push
inc
cwtl
fbstp
fldl
adcb
xchg
add
add
sbb
inc
or
xchg
adc
test
xor
adc
mov
test
lahf
loopne
xor
adc
add
sahf
das
jmp
push
aaa
add
pop
cmp
and
add
add
or
push
lods
push
and
pop
ret
sub
movsl
push
stc
adcl
xor
mov
xor
cmpsb
pop
pop
inc
inc
dec
rolb
pop
lret
xor
mov
cs
fnstcw
cmp
xor
xor
dec
in
in
imul
outsl
xchg
rolb
int3
adc
mov
dec
and
pop
or
jno
cmp
dec
lcall
and
in
rclb
fbstp
pop
add
push
and
outsl
and
scas
inc
sub
or
mov
mov
add
inc
nop
clc
jle
js
adc
cmc
gs
cmp
or
push
push
or
popl
sti
cmpsb
cmpsb
loop
cmpsl
and
mov
clc
push
mov
pop
mov
xor
and
bound
add
dec
scas
or
mov
push
fdivrs
inc
das
adc
scas
dec
sub
xchg
or
mov
ret
outsl
jg
in
or
sar
jns
adc
and
xchg
inc
push
dec
adc
push
out
pop
dec
xchg
mov
jle
test
add
inc
add
outsl
hlt
add
pusha
test
iret
mov
cld
sti
pop
push
pop
sbb
sub
aam
pop
sahf
jnp
fcoms
xchg
popa
mov
push
xchg
stos
xchg
push
dec
adc
les
push
mov
leave
sbb
out
pop
fs
test
fs
jmp
daa
cmp
jne
lret
sbb
inc
ret
mov
xchg
shrb
sbb
mov
sub
adc
and
push
sub
sbb
loopne
push
inc
dec
clc
lods
xorb
xor
lock
mov
loope
rorl
shl
cmpsl
bound
cmp
stos
or
inc
mov
xchg
or
test
inc
jnp
outsl
cmc
add
cmp
pop
mov
mov
sub
rorb
dec
dec
mov
adc
pop
xor
ffreep
inc
jnp
sbbl
pop
jmp
cld
adc
rcr
divl
scas
and
lret
hlt
jg
negb
loop
and
jecxz
test
ljmp
xor
fisubrs
mov
cmpl
mov
sahf
or
fsts
pusha
sub
xchg
ljmp
cltd
jecxz
sub
inc
jp
and
add
test
loopne
ds
sbb
push
cmp
jmp
mov
movsb
sbb
push
sub
popa
or
loope
rol
lahf
shrb
inc
push
addb
ja
adcb
inc
shll
inc
sbb
in
add
adc
imul
mov
cmp
adc
inc
cmpsl
adc
push
movsb
mov
test
adc
clc
lea
les
je
add
push
imul
adc
jmp
cmp
icebp
arpl
stos
addr16
insl
xor
inc
add
sub
dec
sub
sbb
pop
sub
jo
sub
and
jg
xchg
sub
es
cmp
xchg
ss
xor
lods
movsb
lock
and
jmp
pop
cwtl
insb
adc
sub
xor
adc
push
repz
cmc
xchg
push
push
psubb
sub
shll
xchg
icebp
pusha
sub
push
adc
pop
mov
jg
xor
popa
rorb
and
sbbb
ds
adc
push
mov
adc
adc
pop
lcall
add
int
in
cmp
addr16
add
and
sbb
and
pusha
jo
cmp
into
push
inc
and
rclb
loopne
sbb
pop
push
divl
push
lock
les
push
inc
sub
fwait
cmp
lods
dec
or
daa
cmp
mov
pop
lret
lods
inc
dec
scas
jno
popa
adc
and
inc
mov
test
cmp
sub
pushf
je
xchg
mov
mov
fisttpll
inc
sbb
out
fs
xor
cs
mov
sub
push
xchg
dec
push
push
xor
xor
cmp
push
imul
adc
lcall
movsb
pop
pop
addb
rorl
cmp
in
scas
es
out
xchg
xchg
clc
in
shll
xchg
loop
mov
sbbb
mov
push
idivl
clc
sbb
xor
inc
or
push
xorl
mov
push
mov
dec
pop
dec
pop
movsb
add
xor
pop
in
jo
jne
repz
push
inc
and
sub
add
lods
and
cli
inc
mov
daa
cld
and
scas
push
pop
and
xor
or
mov
or
mov
fisubs
pop
mov
xlat
loop
or
push
jg
add
loop
dec
je
xchg
add
xchg
fcomip
jno
dec
or
bound
push
mov
mov
pop
push
mov
imul
mov
or
ret
sbb
icebp
mov
aaa
or
pop
cmp
xchg
cmp
pop
push
pop
push
adc
adc
sbb
pop
mov
sbb
push
cltd
adc
push
inc
mov
sahf
push
mov
and
int3
push
fwait
and
push
push
xchg
ret
dec
jne
shl
add
or
mov
sbb
pusha
add
clc
mov
rcll
sub
and
xor
xchg
adc
inc
inc
cmp
jmp
push
push
add
xchg
or
addr16
sub
pop
push
cltd
xchg
hlt
push
imul
adc
insb
es
ret
stos
lods
mov
scas
insb
lret
jb
cmpl
xorb
in
mov
or
pop
les
je
outsl
and
rcll
in
inc
inc
ret
xor
loopne
lahf
jle
aaa
or
inc
pop
loope
ds
enter
inc
jle
push
adc
fldt
and
push
mov
and
mov
dec
iret
add
cmp
pop
or
ret
push
jne
dec
xchg
add
mov
add
xchg
lcall
shrb
pusha
mov
mov
nop
sub
lret
mov
in
add
loopne
out
fnstsw
daa
ss
ss
es
inc
and
jg
push
lret
aaa
mov
push
or
adc
xor
and
and
adc
dec
out
sbb
std
call
mov
jns
mov
unpckhps
sub
xor
fsubrs
add
and
jbe
cltd
fnstcw
push
mov
adc
aam
xor
and
add
ds
jae
outsb
fldl
aaa
add
and
cmp
pop
adc
pop
push
jae
pop
push
push
and
movsb
jge
outsl
mov
mov
inc
and
es
aas
jo
add
sbb
dec
hlt
cltd
jg
mov
cmpsl
xor
subl
test
dec
jg
add
dec
and
imul
pop
push
ret
and
mov
push
push
jmp
fimuls
jmp
inc
cmp
and
js
popa
cwtl
cwtl
add
addl
mov
mov
das
dec
test
mov
call
or
orb
cmp
cmp
adc
and
sub
out
pop
push
inc
mov
jno
add
in
jle
sub
add
ficoml
cmp
sti
loope
push
dec
int3
mov
ret
mulb
or
add
and
int3
lcall
fs
mov
adc
or
movsb
mov
add
lahf
add
mov
stc
adc
push
xor
pop
popf
movsw
addr16
nop
cmp
or
lret
fcomps
jle
arpl
rcrb
popa
pop
add
jne
adcb
movsb
push
adc
inc
je
xchg
inc
mov
mov
test
mov
xor
xor
sbb
xor
sub
jge
insl
xor
cmpb
fistl
dec
imul
test
sbb
fmuls
jmp
mov
xchg
mov
loopne
ss
mov
cwtl
fdivrp
mov
js
mov
mov
fmuls
dec
cmp
cli
inc
jmp
pushf
add
and
decl
inc
or
add
inc
inc
add
sub
fdivl
cmp
add
inc
push
adc
sub
pop
dec
sub
and
or
sub
dec
insl
sbb
mov
lret
dec
mov
mov
mov
adc
movsb
add
adc
inc
or
sbb
pop
inc
jecxz
xchg
jbe
adc
jge
lret
decl
aaa
mov
push
sar
add
inc
mov
mov
repnz
call
lret
push
xchg
mov
sbb
in
sti
dec
pushf
cmp
dec
jmp
leave
jne
mov
into
or
rorb
jle
push
and
sahf
jne
out
orl
shrb
xchg
test
mov
mov
push
push
xor
or
mov
and
push
and
ds
sbb
sbb
mov
pusha
aas
ss
mov
lods
pop
fisubrl
pop
fdivrs
mov
mov
lcall
nop
inc
es
xor
xor
add
das
inc
fimull
jg
or
dec
out
loopne
sub
nop
xchg
daa
in
into
sub
clc
push
or
add
mov
sub
test
ret
pop
cli
lret
adc
xor
add
test
cmp
jo
xor
xor
adc
sub
jg
nop
mov
and
mov
sbb
jae
and
xorb
outsl
fsubs
inc
test
es
and
cs
xor
push
insb
or
xor
cld
enter
in
mov
negb
sbb
les
cmp
shlb
jnp
mov
pushf
dec
xor
loopne
add
mov
add
xchg
call
dec
call
inc
xlat
push
rep
push
cmpb
arpl
outsb
push
fdivrs
scas
sub
dec
fiadds
inc
or
nop
jo
mov
add
daa
mov
test
or
or
mov
out
push
xor
inc
je
orb
push
dec
xchg
ret
shlb
pusha
push
das
and
mov
add
dec
stos
adc
inc
add
ficoml
push
mov
inc
xchg
mov
leave
pop
nop
cs
xor
aaa
rcrb
sub
adc
imul
scas
imull
jmp
or
pusha
xchg
iret
push
cmp
inc
mov
or
jl
inc
adc
push
data16
push
loopne
jg
ljmp
adc
xor
xchg
mov
je
dec
sbb
mov
push
jb
js
je
push
fcmovbe
push
push
pcmpgtb
adc
scas
sbb
fildll
popw
insb
dec
mov
inc
ret
roll
fsubs
add
or
and
push
pop
mov
jnp
lret
jmp
adc
pop
add
ret
sub
adc
and
cltd
ret
and
daa
test
xlat
pop
xor
addr16
fiaddl
int
inc
lahf
jl
mov
cmpl
ja
push
out
sbb
push
jmp
dec
addr16
dec
test
test
add
push
cmpsl
test
daa
sbb
aaa
or
and
int3
mov
inc
sub
movsb
jb
dec
dec
js
nop
lret
test
inc
sub
push
int3
pop
cld
push
es
sub
pusha
pusha
mov
je
or
sbb
sti
mov
imul
mov
adc
dec
ficoms
dec
push
loop
imulb
mov
daa
mov
imul
push
mov
insb
mov
jg
jge
pop
xor
add
and
pop
push
stos
out
dec
pop
cmpsl
and
dec
push
jo
push
pop
xor
pop
sub
push
addr16
pop
mov
pop
dec
fiaddl
jae
daa
fwait
out
outsb
dec
bound
add
and
jp
pop
nop
inc
cmc
sbb
push
cmp
and
and
add
nop
or
cmpsl
add
mov
push
sub
sbb
jp
mov
adc
sub
leave
stos
xor
push
subl
popf
or
insb
xchg
shrl
in
push
adc
sbb
loopne
fldl
ret
xchg
jbe
dec
mov
pop
push
or
lahf
xchg
sahf
sbb
mov
add
mov
and
pop
push
pop
shlb
sub
fsubr
shlb
orb
in
ret
xor
clc
dec
aad
and
or
push
outsb
mov
cs
push
push
mov
in
mov
mov
fisubs
ret
mov
jmp
pusha
setp
and
inc
inc
mov
jo
movsl
mov
lock
mov
cld
jecxz
lret
ret
jmp
cmp
dec
gs
test
jmp
mov
pop
inc
movntps
sti
inc
cli
adc
or
outsl
mov
sub
push
cmc
repnz
fimull
neg
or
sub
aam
mov
notb
push
je
xor
test
mov
mov
push
insb
or
cmp
add
adcb
inc
sbbl
or
and
mov
mov
rcrl
ljmp
sbb
sbb
push
popa
push
inc
inc
arpl
xchg
sub
pusha
sbb
dec
in
rorb
js
outsb
cmp
adc
imul
aad
mov
xor
movsl
xlat
popa
rorb
jmp
test
cwtl
pop
cmp
data16
mov
inc
rorl
ja
mov
in
pop
out
iret
movsb
cltd
dec
cmp
xor
xchg
pop
push
pop
insb
xlat
push
push
sbb
pop
lcall
push
psraw
inc
ret
pop
int
adc
dec
cmp
or
or
outsb
dec
lret
sbb
aaa
movsl
xor
dec
jmp
je
nop
fstl
pop
aaa
and
or
inc
pop
and
jbe
sahf
or
push
and
pusha
repnz
lret
scas
fnop
push
inc
getsec
add
or
or
aam
je
popf
shr
add
push
cmp
or
and
adc
movsb
popl
add
mov
pop
das
pusha
stos
mov
es
xor
mov
nop
loopne
push
aas
adc
dec
add
mov
mov
fcmovnbe
lods
sub
jge
test
hlt
enter
cmp
idivl
iret
ficoms
jns
ds
rep
iret
mull
fcmovnb
sbb
inc
mov
fists
xchg
dec
inc
sub
jp
inc
adc
int
jnp
dec
inc
or
xor
sahf
dec
add
lcall
or
sarb
sarb
push
push
sbb
jl
in
in
dec
xor
cwtl
or
pop
adc
daa
cmp
pushf
push
jmp
sbb
pop
dec
sub
test
add
ljmp
subb
jge
mov
cwtl
pop
jmp
sbb
push
jae
inc
adc
mov
out
in
roll
xor
mov
sbb
scas
push
subps
in
rol
or
xchg
or
push
push
sub
xor
js
xchg
inc
cmp
dec
pop
xchg
pusha
cmp
test
addr16
es
or
cmp
push
es
js
xor
add
rorb
inc
dec
inc
cmpsl
pop
divb
shll
and
in
shl
test
xor
rclb
sbb
pop
mov
pop
test
dec
and
pusha
out
scas
cmp
fstl
sub
dec
xchg
out
xor
repnz
or
and
or
scas
psubd
outsl
add
insb
pusha
or
sbb
fwait
ss
pop
sbb
or
or
xor
loopne
xchg
sarl
add
xor
test
sub
not
and
jbe
fcoms
clc
jns
push
sbb
adc
clc
sub
jo
in
dec
inc
fldenv
jns
push
adc
lea
je
push
lahf
and
add
int
cmpsb
ret
cmp
pop
inc
ret
lods
adc
cmp
adcl
mov
rcll
jecxz
and
inc
push
call
mov
shlb
adc
dec
hlt
xchg
push
push
add
iret
rcrb
sti
into
mov
fildl
fisttpl
mov
or
pop
jne
xchg
inc
or
inc
inc
push
out
push
test
jb
push
enter
bound
pop
or
push
movsb
xor
ja
sbb
movsb
cmpsl
dec
mov
call
jne
mov
lods
jge
andl
pop
and
insl
mov
out
push
out
mov
dec
xor
hlt
mov
loop
adc
mov
pop
add
test
mov
hlt
stos
push
sbb
cmpsl
lcall
add
addb
mov
test
mov
movsl
inc
stc
push
insb
push
mov
mov
movsb
sub
cmp
jo
movsb
mov
ss
aam
test
cltd
in
les
jno
ret
movb
mov
jo
dec
xlat
xlat
inc
es
in
aaa
dec
pusha
or
add
in
insb
jecxz
jg
popf
jecxz
movsl
inc
dec
jle
add
mov
mov
sbb
sub
xchg
loope
inc
jmp
push
add
inc
xor
dec
rclb
and
cmp
fmul
push
dec
shr
cmp
add
cmp
xor
push
daa
gs
pop
inc
add
inc
jbe
popa
dec
rorb
aaa
jmp
push
mov
mov
jo
mov
jmp
nop
push
ret
push
dec
sub
leave
shlb
js
aam
sti
adc
popa
add
ljmp
outsb
push
lahf
movb
lea
lret
xor
sahf
pop
sub
inc
and
push
dec
sbb
inc
xchg
in
and
int3
mov
xchg
push
xlat
xor
cs
pop
mov
js
addr16
and
dec
sbb
lock
dec
movsl
icebp
inc
inc
fmul
popa
shlb
or
pop
sarl
pop
scas
out
mov
add
test
cld
mov
lods
mov
mov
xor
mov
inc
out
push
sbb
pop
addl
inc
fadds
dec
add
inc
shlb
push
or
ret
les
rol
push
dec
or
orb
adc
sbb
test
mov
in
orb
pop
lret
test
lods
inc
dec
mov
xor
stos
add
xchg
js
out
popl
cmpsl
pop
xchg
cmp
sub
cmp
movsb
mov
adc
orl
ja
aam
lret
mov
outsb
push
arpl
xor
mov
pop
and
rcl
mov
jecxz
fcmovnbe
lahf
mov
add
out
inc
aam
add
int3
addr16
sbb
mov
lcall
aad
pop
mov
or
pop
mov
icebp
inc
xchg
jnp
dec
cwtl
les
push
es
and
adc
out
sub
mov
jbe
adc
andl
sbb
push
or
mov
lea
test
and
cmp
or
dec
fdivp
loopne
sub
add
add
xor
cs
lock
lock
js
adc
inc
pop
cmc
dec
call
call
mov
faddl
jle
es
xchg
mov
inc
mov
pop
loopne
sub
call
jne
sbb
mull
adc
mov
xchg
int3
cmp
lea
push
pusha
sti
mov
jg
fnstenv
in
xchg
adcl
and
fcomp
sub
adc
in
sbb
daa
jns
push
xor
push
jbe
dec
imul
add
pop
sub
sbb
inc
lock
ljmp
ljmp
dec
pushl
decl
xchg
mov
pop
popf
xchg
add
and
or
out
sarb
push
xorb
fildl
pop
sub
xchg
xchg
or
lea
jbe
add
aam
mov
into
or
fldcw
rcrb
sbb
add
pusha
or
and
pop
sub
mov
sti
int
and
adc
mov
pop
add
lods
hlt
mov
mov
shr
aam
xor
jae
sub
movb
xor
jmp
dec
mov
lea
and
repz
jp
mov
push
pop
jne
xchg
inc
rolb
lahf
rcrb
sbb
addr16
cwtl
stos
mov
push
fimuls
adc
nop
test
xor
ret
sbb
mov
mov
sbb
push
into
fidivrl
inc
imul
adc
lock
movsl
fsubrl
xchg
mov
push
pusha
daa
cli
shlb
sub
es
cmp
jne
adc
jl
icebp
pop
sub
mov
out
add
stos
adc
xchg
mov
sbb
daa
lods
xchg
pop
leave
mov
add
test
cmp
in
les
and
jo
jns
push
je
icebp
jno
or
popa
cmpsl
scas
add
arpl
pushf
loopne
cmp
push
sub
and
sbb
loopne
adc
mov
rorb
xor
rcr
test
xlat
and
xchg
sub
push
inc
dec
rolb
push
pop
mulb
and
mov
inc
je
add
insb
xchg
pop
add
ret
sub
cmp
xchg
ds
mov
movsb
sbb
or
dec
sbb
inc
lods
or
push
loope
aad
pop
mov
test
sbb
pop
push
mov
xchg
push
iret
add
and
or
sbb
inc
gs
dec
iret
lock
add
daa
lock
punpcklwd
push
stos
or
adc
lcall
and
sub
addl
cmpsb
push
push
or
sub
and
mov
repz
subl
les
or
pop
inc
or
mov
andb
sbb
jnp
mov
dec
cli
std
nop
push
push
cmpb
popa
or
inc
call
rol
adc
mov
add
add
mov
or
addr16
xchg
imul
cli
je
jae
shlb
push
ret
mov
or
or
jne
outsl
test
push
imul
imulb
or
jns
lock
xchg
das
gs
mov
xchg
ret
xorl
int
add
je
in
push
or
sub
and
inc
adc
adcb
ss
aas
dec
inc
adc
pop
jae
push
bswap
adc
xor
dec
adc
adc
adc
sbb
sub
fsubr
sbb
xlat
sbb
sbb
in
ljmp
orl
jecxz
lods
ss
xor
mov
outsb
fistpl
xlat
test
inc
lock
ret
xor
insl
mov
rcrb
sub
and
mov
pop
mov
adc
sbb
ret
jb
lods
pusha
pop
adc
dec
imul
insb
mov
bound
cmp
and
in
inc
popa
imul
and
ret
fiaddl
jbe
mov
sbb
mov
or
daa
adc
mov
xor
arpl
mov
pop
cmp
movsb
arpl
in
imulb
sbb
jbe
aaa
xchg
xchg
push
mov
andb
inc
test
xor
out
adc
dec
push
pop
pop
adc
push
xor
in
sbb
or
andb
mov
inc
or
xorb
pop
inc
xchg
ss
cmp
insl
or
adc
sbb
dec
roll
js
adc
shlb
jns
pop
imul
les
lods
adc
mov
dec
jecxz
imul
jbe
pusha
sbb
xor
sub
in
and
adc
add
push
imul
jnp
insl
sbb
inc
adcb
jbe
cmp
ret
inc
ss
push
and
fwait
xchg
sbb
lock
adc
popa
jo
nop
pusha
ret
xor
nop
pop
xorb
sbb
out
mov
das
popf
adc
push
push
or
shll
imul
sbb
les
cmp
inc
and
cmp
imul
mov
sub
sbb
std
or
fldt
sub
and
sbb
ret
dec
and
pop
and
daa
fiaddl
sub
loopne
sub
fldenv
test
add
mov
ja
jbe
pusha
sbb
mov
push
js
mov
ja
cs
jo
xor
addb
in
stc
fsubl
fs
sub
inc
insb
das
mull
mov
xchg
and
bound
in
add
or
inc
movsb
insb
adc
and
loopne
and
clc
lret
nop
dec
pop
lods
rolb
pop
pop
rorl
addr16
scas
adc
adc
inc
adc
xlat
add
and
lea
rolb
sbb
or
fstpt
outsb
or
and
push
idivl
sti
sbb
arpl
sbb
cmp
daa
cmp
loopne
ja
ja
or
movsl
jne
imul
dec
and
jno
mov
out
or
xlat
adc
or
pop
or
insb
jbe
sub
push
test
sbb
outsb
movhps
pop
pop
ficompl
and
xchg
jnp
sbb
shrb
adc
mov
mov
sbb
sub
xchg
inc
sub
xor
cmp
or
js
cwtl
push
pop
add
dec
sbb
sub
outsb
mov
jae
imul
daa
out
cld
sbb
add
pop
ret
xor
jb
nop
sub
aad
jb
imul
or
ja
lods
cmp
or
xchg
mov
es
jno
imul
or
stos
or
inc
popa
arpl
adc
mov
adc
inc
xchg
daa
pusha
mov
fimuls
sub
ret
inc
lds
loopne
jle
popf
xchg
mov
imul
xor
js
xorl
add
sbbl
lds
or
sub
insb
mov
and
sub
jbe
sub
int3
movsl
sub
je
adc
sub
mov
mov
mov
stos
dec
cs
push
cmp
push
sub
je
push
cmpsl
adcl
xchg
fidivl
push
and
mov
dec
xor
sub
cli
daa
shrl
sub
push
mov
outsb
mov
sub
es
andb
das
outsl
sbb
add
outsl
andb
imul
das
outsl
push
adc
fidivl
cs
cs
push
fwait
xchg
ss
sarb
pop
test
sbb
lahf
cmp
shlb
xor
mov
pushf
in
pop
iret
imul
testl
fstpl
or
xor
je
nop
dec
js
cmpsl
sbb
fs
jae
jae
fs
dec
jae
jae
push
in
jae
nop
or
sbb
jae
repnz
xor
push
fwait
popa
dec
mov
jo
popa
push
xlat
popa
mov
sub
and
sub
movhps
andl
shlb
or
or
jge
mov
sub
sbbb
lods
pop
mov
sub
jae
push
sbb
adc
mov
push
push
notb
adc
push
push
icebp
or
sti
imul
pushf
loope
jbe
lock
adc
insb
jno
push
in
ss
inc
and
push
or
or
in
dec
jg
add
stc
adc
leave
sub
je
mov
mov
mov
arpl
pop
mov
movsl
push
cmp
inc
test
outsl
pop
and
sub
std
insb
mov
fisubrl
ret
shll
jecxz
xor
xor
adc
xor
stc
arpl
push
or
push
rcrl
mov
icebp
sub
xor
xor
adc
fadds
outsl
jo
rol
sbb
pop
aad
movb
in
stos
cwtl
lods
pop
xor
out
das
icebp
cmp
sbb
insl
stos
pop
pop
shll
lret
sbb
inc
mov
pop
adc
pop
sub
pop
lds
sub
ret
push
sub
push
cmp
add
or
rcl
mov
fs
insb
or
out
mov
push
fsubl
adc
dec
dec
or
inc
add
inc
push
sbb
pop
sbb
dec
imul
pop
push
fucomp
addb
add
cmp
xchg
jge
sub
sub
ret
dec
or
dec
lret
and
or
adc
xor
and
cli
cmp
insl
rcr
sbb
push
daa
inc
sub
dec
sarb
mov
andl
das
pop
sbb
mov
pop
xor
xor
sbb
inc
jo
jb
repnz
imul
sub
add
adc
add
fstps
sub
mov
or
or
and
add
jbe
addb
mov
mov
inc
shll
and
roll
lds
daa
lods
sbb
sbb
jns
sub
test
xlat
sub
das
mov
int3
or
iret
sub
push
enter
bts
call
add
and
push
pop
dec
push
add
xor
jne
mov
push
ja
outsl
or
or
scas
adc
mov
rorl
jo
adc
das
sub
xchg
or
les
pop
xor
stos
das
or
js
cmc
das
xor
mov
inc
inc
daa
jne
pop
mov
push
or
sbb
and
and
ret
adc
leave
mov
aaa
insl
xlat
pop
mov
fsubrs
insl
mov
mov
push
xchg
shrl
fwait
int
and
sbb
insb
and
and
fimull
icebp
mov
mov
insl
insl
gs
roll
mov
mov
and
movsl
push
pop
daa
mov
sub
add
mov
mov
sub
adc
sbb
imul
add
rclb
popa
add
ja
add
xor
jg
mov
push
loopne
or
aas
sbb
rcrb
int3
and
adc
adc
inc
adc
das
fsts
js
ret
xchg
sbb
movsl
xchg
or
dec
sub
add
add
es
ljmp
and
xchg
xchg
test
repz
dec
scas
jnp
sbb
sbb
hlt
call
js
insl
and
jle
inc
outsb
jnp
adc
fadd
pop
dec
outsb
popa
and
rcrl
imul
fcmovnu
push
sub
mov
cwtl
sub
push
dec
adcl
insl
push
das
mov
mov
popa
js
push
sbb
fcmovb
inc
sbbl
ret
push
adc
dec
adc
adc
lock
pop
jg
daa
and
pop
pop
and
fwait
cmp
inc
mov
cs
stc
sbb
and
mov
mov
adc
xchg
and
jmp
rorb
lods
and
pusha
pushf
and
les
testb
xchg
adc
cwtl
dec
adc
push
sub
push
shll
and
inc
xor
xor
loopne
sub
cltd
roll
pop
dec
xor
adc
and
inc
xor
lea
cmc
xchg
adc
mov
daa
cmp
rcrb
and
push
mov
mov
pop
lds
shll
test
sub
shrl
sub
jnp
stos
mov
sub
mov
pop
sub
xor
pop
sub
xchg
adcl
and
lods
inc
mov
or
adc
mov
test
push
or
add
nop
or
fstpl
scas
cmp
mov
inc
inc
and
cmc
sub
sbb
adc
andb
and
cs
and
pop
or
and
fmuls
ret
pop
and
lea
test
lahf
rcll
or
les
add
pop
std
sbb
cmp
add
xchg
push
xorl
cmc
lods
add
cmp
xchg
mov
aas
sbb
adc
sbb
ja
loopne
les
rcrb
add
add
mov
adc
pop
sbb
dec
push
pusha
cld
xchg
incb
adc
cmpsl
adc
jae
sbb
sbb
push
and
add
adc
pop
pusha
pop
movsl
test
dec
xor
mov
add
pop
or
lods
adc
push
divb
mov
push
aam
push
sbb
jbe
push
push
je
or
data16
push
push
xchg
xor
imul
fs
mov
sti
add
cmp
adc
leave
jnp
rclb
lret
pop
mov
or
adc
push
test
dec
and
dec
and
xchg
mov
lock
pop
dec
outsl
pcmpgtb
leave
leave
ja
dec
and
add
and
sbb
daa
and
int
and
daa
daa
std
dec
es
leave
leave
enter
daa
jns
in
fs
sub
cmc
jns
xor
inc
sub
cmp
sbb
or
push
inc
sahf
pushf
pushf
mov
subb
leave
push
lock
inc
jp
pushf
jb
loopne
in
das
dec
mov
inc
loopne
or
inc
shll
mov
mov
insb
adc
jo
jns
pop
loopne
add
sbb
inc
scas
fmuls
inc
sbb
push
xchg
inc
xchg
gs
or
jae
movsl
bound
dec
inc
pop
inc
lods
mov
or
inc
orl
xlat
inc
sub
adc
mov
lods
ja
jo
ret
lret
or
push
add
jo
outsl
jo
mov
or
xor
mov
jb
and
fbstp
xor
xor
aam
push
dec
sbb
jne
inc
inc
mov
insl
xchg
dec
add
mov
insb
and
inc
xchg
or
inc
and
daa
test
lcall
adc
adc
test
pop
cmp
xor
enter
add
lock
xor
dec
xchg
sub
add
pop
sbbl
adc
add
adc
loop
add
inc
mov
inc
inc
mov
roll
xchg
adc
and
adc
pusha
xor
push
mov
rclb
pop
add
shll
les
dec
adcl
cmpsb
imul
adc
lods
iret
pusha
inc
mov
push
pop
dec
jo
fadds
push
mov
add
repnz
rcl
es
adc
scas
orb
xchg
and
add
adc
fs
nop
push
sbbb
jb
sub
xor
scas
add
adc
inc
xor
sub
add
cmp
add
push
popa
add
and
enter
sbbb
adc
push
inc
dec
push
mov
xor
scas
popa
pusha
lds
or
rorl
mov
outsl
jnp
cmc
adc
push
arpl
cld
aaa
jno
add
cmpl
mov
mov
or
mov
push
jb,pn
or
push
dec
xchg
push
or
shl
adc
shl
push
pop
test
mov
jnp
push
in
out
add
push
bound
sub
add
ljmp
test
and
clc
sti
jnp
adc
sub
pop
mov
and
dec
lret
jb
test
adc
push
loopne
adc
jp
movsb
jno
sbb
das
andl
or
je
in
fimuls
ss
push
or
fistps
dec
inc
outsl
pop
js
imul
shll
je
es
xlat
xor
loopne
add
jmp
popa
out
shrb
jbe
es
mov
sbb
jo
pop
or
js
jb
addr16
mov
aaa
push
mov
push
mov
je
daa
push
jg
and
and
outsl
das
sbb
sti
sbb
and
sbb
fiaddl
inc
daa
mov
in
loop
daa
or
jb
arpl
jns
lea
cmpsb
pop
das
gs
mov
ja
insb
push
cmp
xor
mov
mov
and
and
fs
les
nop/reserved
mov
icebp
sahf
or
inc
in
scas
je
fs
mov
dec
or
mov
jo
mov
mov
or
ds
popf
jne
test
push
adc
icebp
inc
adc
xchg
add
xchg
xchg
dec
xorb
sti
dec
push
cmpsb
push
pop
dec
sub
fwait
daa
and
lods
and
pop
test
clc
pop
and
jle
mov
xchg
jl
or
adc
stos
sti
and
sbb
inc
sarb
adc
mov
inc
mov
sbb
les
xchg
into
or
test
push
pop
mov
cmc
xchg
and
nop
popf
in
mov
mov
inc
ret
xor
jne
push
ret
and
int
cmpsb
adc
xchg
adc
pop
xor
cs
loop
and
push
icebp
and
mov
mov
push
int3
push
pop
and
mov
and
dec
imul
sti
xor
or
inc
sbb
mov
sub
ret
mov
lcall
inc
add
nop
pop
lods
aaa
mov
stos
adc
cs
xorb
ljmp
test
test
stos
scas
inc
add
push
sub
add
nop
xor
xchg
or
sub
inc
mov
or
fcoml
ja
push
andb
push
aaa
or
jnp
iret
jno
add
xchg
sub
pop
sbbl
fists
nop
aas
add
xor
add
push
cmp
add
push
scas
adc
out
aaa
push
ja
pop
xor
in
in
cli
xor
xor
and
dec
sahf
out
inc
dec
push
inc
sub
or
sbb
push
sub
push
test
sub
nop
or
mov
pop
ds
jae
imul
sbb
cltd
aam
sbb
xlat
iret
pushl
pop
pop
or
or
or
or
or
or
cmp
adc
adc
repz
repz
push
pop
sbb
repz
sbb
sbb
and
iret
rcll
loop
and
push
lahf
mov
lcall
add
out
daa
cmp
imul
sahf
out
lea
jns
shl
repz
adc
sahf
out
dec
pop
push
sahf
out
sahf
xchg
xor
fidivl
daa
jmp
push
jmp
add
in
or
pop
push
cltd
mov
and
adc
xchg
push
cs
and
or
dec
in
lret
or
push
mov
push
and
cs
sub
dec
sub
in
lret
cmp
movsb
jb
cmp
inc
push
cs
dec
sbb
xchg
push
dec
sbb
lret
sbb
jmp
pop
sbb
xchg
push
ja
push
popa
imul
push
bound
arpl
and
xor
and
lods
adc
and
xchg
aaa
mov
out
test
bound
cmp
xor
or
mov
fsubs
adc
fistps
push
scas
movsl
or
adc
fmuls
adc
adcb
pusha
and
pop
inc
mov
adc
sub
imul
aam
pop
loopne
add
js
mov
cmp
xchg
ja
out
movsl
int3
mov
pop
sbbb
call
fs
rcrl
xchg
fdivr
cmp
mov
dec
int3
jmp
xorb
push
jge
loopne
or
pop
mov
push
pop
mov
out
inc
mov
mov
rcrb
aas
inc
cmp
push
jns
rcrb
addr16
sbb
enter
dec
xor
adc
xchg
imul
or
jecxz
nop
mov
push
add
jo
dec
shlb
mov
pusha
jecxz
adc
aas
xor
out
jo
fbstp
iret
jmp
push
daa
mov
inc
add
xchg
push
es
add
movl
pop
popa
xor
push
enter
push
push
add
adc
push
sub
test
daa
add
sbbl
mov
jno
lods
dec
and
pop
shrl
clc
sar
leave
pushf
out
sahf
sbb
adc
dec
or
stos
or
and
lret
pop
sub
lods
icebp
sub
icebp
or
push
adc
jne
adcb
shlb
cmpsl
xchg
das
fs
or
adc
sbb
inc
or
in
cmpsl
mov
loope
jmp
imul
lods
shrl
and
outsb
push
arpl
pop
imul
inc
dec
mov
je
jb
orl
push
adc
cmp
cmp
add
adc
dec
pop
pop
cmp
cmp
imul
ss
insb
jb
sbb
test
ss
test
or
fdivl
lods
and
insb
jo
inc
dec
jae
push
adc
xor
outsl
mov
stc
dec
shll
cld
testb
subb
sbb
adc
sub
xor
scas
inc
push
inc
insl
xchg
jb
cld
xchg
xor
arpl
adc
shl
cmp
adc
and
fwait
out
pop
or
pop
xor
rdmsr
xor
sbb
mov
add
jb
ds
stos
aas
testl
jl
test
addl
push
dec
lods
pop
aaa
adc
or
stc
xor
in
and
cmp
add
popf
filds
cs
lcall
dec
and
or
and
push
add
fmull
pusha
imul
mov
sub
pop
filds
dec
add
lret
add
or
sub
add
and
pop
jnp
fwait
pusha
repz
sub
add
lock
sub
xchg
push
dec
out
mov
jo
iret
scas
sub
jl
inc
xor
or
push
pop
cmp
andl
test
fdivrl
cltd
std
sub
inc
pcmpgtb
loop
inc
pop
jge
inc
sahf
pushf
mov
inc
mov
inc
xchg
xchg
daa
and
adc
int3
fidivrs
sahf
mov
adc
pop
cs
setle
pushf
pushf
int3
stc
js
or
daa
daa
and
enter
mov
in
leave
xchg
out
pop
dec
mov
xor
in
pop
dec
mov
adc
adc
dec
or
pop
xchg
xor
mov
push
adc
pusha
jns
or
and
sub
jae
add
xor
inc
je
test
addb
dec
inc
add
mov
fsub
push
dec
mov
lcall
and
add
mul
cmp
jmp
pop
jle
in
aad
into
xchg
pushf
pop
xchg
or
cmc
sbb
sub
lds
cmp
xchg
orl
push
scas
xchg
lods
xor
mov
sub
dec
sub
cltd
or
push
dec
dec
in
fwait
hlt
enter
push
fcmovnb
dec
cmc
push
push
jo
and
cmp
inc
bound
or
push
dec
adc
pop
pop
mov
cs
enter
out
push
adc
rcll
les
rcrl
adc
roll
js
adcl
mov
xchg
mov
test
sti
aaa
adc
dec
ss
jae
pusha
stos
cmp
pusha
cmp
mov
in
and
xor
inc
sbb
adc
test
and
add
roll
jne
and
inc
pop
pop
mov
fsts
mov
sub
mov
xor
jne
lahf
es
inc
inc
das
daa
dec
adc
in
scas
add
and
sti
dec
push
mov
ja
add
inc
testl
or
xchg
repz
adc
mov
nop
inc
sti
or
mov
add
fildll
xchg
add
mov
dec
in
cs
sub
jecxz
or
sbb
pop
lcall
add
jae
cmp
adcl
xchg
and
push
cltd
sti
mov
imul
enter
adc
lds
mov
or
and
and
sbbb
adc
loopne
sbb
pop
push
fs
cmp
mov
or
mov
add
xchg
lea
sub
inc
inc
sub
loopne
fcmovnbe
das
enter
dec
add
addl
push
pop
dec
mov
hlt
push
gs
sub
add
add
scas
push
shr
mov
or
sbb
xor
shl
sbb
movsl
or
pusha
xchg
popa
xchg
or
xor
aaa
lds
add
xchg
movsb
out
inc
pop
es
sahf
adc
mov
nop
outsb
pop
sar
mov
xchg
mov
pop
out
mov
or
ja
mov
dec
fucom
enter
or
enter
cmp
test
leave
out
jge
push
andb
leave
lods
sub
add
inc
popa
mov
xor
repnz
dec
jecxz
push
rol
inc
inc
xor
addb
push
add
shlb
mov
add
add
sbb
or
or
mov
jne
push
adc
mov
push
push
add
or
mov
rcrb
addr16
dec
test
xchg
push
or
cmp
add
mov
je
iret
adc
mov
or
and
lahf
xchg
testb
add
xchg
mov
test
dec
push
notl
divl
lahf
adc
mov
repz
inc
inc
push
and
lea
scas
adc
push
dec
rolb
dec
pop
test
fnstsw
test
lea
aaa
lods
mov
or
mov
jge
rclb
mov
shlb
enter
add
notb
mov
call
and
dec
push
push
fsubs
jo
dec
push
cmp
cli
push
inc
imul
push
xor
movsl
fstpl
leave
data16
pcmpeqw
or
ret
xlat
call
popf
test
and
jecxz
popa
add
inc
es
in
cmpsl
ret
in
add
mov
add
mov
movsb
mov
test
inc
inc
jmp
and
mov
je
inc
lock
lock
sahf
and
addl
mov
add
adc
ja
cmp
je
mov
nopl
cmp
sub
icebp
or
xor
cld
add
jno
adc
jg
fbld
nop
cmp
insl
daa
and
js
push
ja
mov
ret
les
and
inc
dec
fs
mov
notl
in
int
movsb
xor
fs
out
insl
addr16
sbb
inc
or
jmp
inc
jp
insl
mov
xor
or
adc
pop
pop
cmpb
mov
jne
mov
and
fldenv
and
fsubrs
push
adc
push
dec
pop
popf
iret
push
rorb
popf
push
inc
dec
cmc
sahf
rcll
aas
sub
fdivr
aas
mov
and
fcmovnb
jno
and
push
pop
imul
xchg
mov
lock
cmpsb
les
mov
hlt
je
leave
push
xchg
push
cmp
mov
xchg
in
adc
ljmp
inc
pop
inc
pop
rcrl
movsb
hlt
hlt
rorb
aam
or
insb
cmp
push
shrl
scas
cmp
push
cmp
mov
and
cmp
push
outsl
ret
push
loopne
xchg
xchg
lock
les
pop
dec
mov
sbb
mov
pop
or
es
testl
adc
xor
lods
xor
je
jmp
dec
add
pop
jo
int3
lea
cmp
or
inc
stos
push
cmp
add
lock
test
lock
cmpsb
hlt
out
adc
dec
sbb
jmp
gs
dec
mov
mov
clc
pushf
sbb
aam
data16
sahf
iret
inc
adc
fadds
inc
adc
mov
pop
call
lods
dec
cmp
push
pop
dec
cltd
jp
cmp
add
flds
aaa
cmp
add
stos
cmpl
outsl
and
adc
out
fildll
or
xchg
mov
mov
add
test
jns
inc
dec
inc
inc
jb
dec
jno
adc
cltd
in
adc
adc
inc
lcall
adc
ljmp
jl
mov
cmp
or
cld
adc
lock
push
or
adc
adc
pop
pop
iret
dec
push
push
lock
daa
jmp
inc
xchg
pushf
cmp
add
sbbl
inc
pop
inc
arpl
mov
add
enter
xchg
lods
or
or
mov
pop
add
push
pop
ret
sub
test
push
pop
sbb
xor
dec
mov
sbb
and
or
xor
dec
adc
lea
enter
or
orl
fistpl
cmpsb
and
jbe
push
cwtl
sub
or
fadds
es
add
je
or
and
sbb
xchg
jo
adc
mov
inc
dec
jne
pop
or
mov
cs
push
inc
es
es
insl
aaa
aaa
add
aaa
mov
dec
xor
jl
push
cmp
add
loopne
iret
pusha
test
sub
inc
pop
adcb
add
push
test
ret
xor
sbb
inc
push
pushf
subb
add
xorb
cmp
rcr
mov
cmp
cltd
fs
clc
test
lret
dec
hlt
addr16
cmc
in
hlt
mov
int
or
iret
fisubs
cmp
mov
outsb
pop
scas
cmp
lea
out
andb
call
idivl
xchg
adc
mov
lods
dec
push
das
das
andb
xchg
push
jbe
xchg
add
stc
add
pop
dec
xchg
xchg
or
lcall
mov
pop
dec
lea
push
and
fistpll
nop
sub
mov
fcompl
xchg
js
xchg
add
and
pop
or
icebp
jns
jecxz
mov
fwait
mov
outsl
sbb
test
roll
push
in
mov
mov
imul
sbb
dec
push
adc
sbbl
and
cltd
or
mov
scas
xor
cmp
xchg
jle
call
subb
or
xchg
fsts
cmp
cmpsl
sbb
push
mov
dec
cs
push
movsl
add
adc
scas
xlat
ja
ret
and
inc
iret
adc
adc
adc
and
in
nopl
imul
lcall
in
adc
xor
shlb
push
ds
xchg
punpckhwd
hlt
or
pop
lock
sub
shrl
and
pop
jge
add
lds
cwtl
orb
pop
dec
pusha
inc
test
js
pop
in
xor
push
loope
add
add
adc
js
push
pusha
pop
cmpsb
roll
test
push
and
cmp
subb
mov
lds
neg
stos
add
sbb
sub
pop
sub
adc
inc
je
adc
sub
dec
dec
jne
nop
dec
ficomps
dec
cmp
stos
cmp
mov
xchg
shlb
fmuls
push
pop
cmp
in
je
lock
scas
or
push
testl
cld
adc
dec
leave
in
jg
in
xchg
orb
mov
cmc
pop
stos
sbb
ret
sbb
inc
xor
ss
mov
or
jmp
add
sti
dec
jne
movb
adc
dec
inc
loop
fistps
dec
call
push
dec
mov
hlt
push
sbb
adc
add
sbb
xchg
js
out
fiadds
mov
and
les
xor
cmp
push
adc
test
into
cmp
xchg
dec
add
in
mov
jns
mov
dec
call
jbe
or
mov
loop
mov
cwtl
push
and
in
shrb
arpl
xchg
rorb
dec
inc
or
lret
je
insl
ret
add
pop
xchg
and
jb
lock
pusha
ret
sarl
dec
pusha
push
or
xchg
or
in
fimull
iret
cmp
pop
jg
adc
cltd
add
fs
cmp
imul
push
mov
sub
pop
js
adc
fs
cmpb
dec
mov
add
arpl
out
shrb
test
add
or
pop
adc
push
shrl
lock
stos
push
les
pop
mov
mov
xchg
jg
test
xlat
pslld
or
into
fs
lret
pushl
cmp
xor
roll
push
add
dec
jnp
or
nop
jo
into
xchg
jno
in
je
cmp
add
inc
pop
popf
xchg
xor
lret
mov
and
xor
jo
inc
mov
arpl
pop
fstl
or
pop
inc
jg
sbb
and
inc
mov
or
leave
roll
and
cwtl
adc
adc
or
add
cmp
sbb
mov
push
jbe
mov
sub
sbb
jbe
sub
xchg
or
js
pop
inc
test
mov
jno
cmpsb
in
flds
daa
shrl
in
push
sub
adc
dec
sbb
add
push
cmp
push
inc
push
mov
and
movsb
jne
loop
push
inc
dec
xor
jns
loopne
push
orl
adc
add
adc
pop
dec
dec
lds
pusha
lock
mov
add
fs
sbb
inc
andl
lret
es
add
pusha
je
inc
fstps
fwait
cli
or
movsb
mov
lods
dec
adc
dec
jmp
imul
pop
dec
add
cmp
call
xor
and
pop
mov
mov
adc
ds
es
ret
cmp
pop
imul
push
and
add
xlat
idivl
pop
call
lods
jl
fnstcw
test
int3
push
add
xor
cmp
inc
or
and
shll
add
orb
shlb
lea
push
icebp
and
lea
addl
mov
out
add
jo
lock
push
jp
xchg
add
add
decl
mov
xchg
ret
mov
iret
inc
mov
stc
decl
pop
add
adc
fnsave
push
push
out
push
daa
jno
ss
mov
adc
test
insl
pop
or
jne
cmp
mov
jo
sub
and
push
pop
in
je
pop
sbbl
adc
push
xchg
push
dec
jp
push
xchg
cmp
sbb
pop
aad
xchg
call
stc
push
and
xlat
mov
mov
loope
lods
bound
or
xchg
cmp
jp
mov
dec
pop
sbb
ficoms
push
push
rorl
cmp
lods
push
inc
add
jmp
pusha
cmp
inc
mov
outsl
pop
push
add
ss
das
loopne
in
dec
pop
addr16
xchg
mov
imul
testb
fs
ret
cmpsl
mov
pusha
mov
add
test
jo
pusha
push
adc
addb
ret
leave
jae
ljmp
dec
or
pop
fisttps
xchg
add
dec
loope
out
add
xlat
sbb
push
or
les
xchg
add
add
and
cmpsb
xchg
ja
or
push
sub
sub
inc
cwtl
mov
testb
jae
dec
jo
movsb
push
je
push
adc
sarl
cwtl
cmpsb
movsb
mov
fldenv
xlat
pop
cmpl
cmpsl
vmread
test
xchg
adc
adc
dec
fndisi(8087
or
pop
adc
roll
add
add
xor
imul
pushf
inc
dec
mov
stos
and
jmp
push
inc
or
cltd
push
sub
es
jl
leave
xchg
pop
lret
xor
xchg
mov
lea
outsl
inc
push
fdivs
mov
mov
or
out
les
inc
cwtl
shll
xchg
lock
mov
mov
xor
lahf
fldl2e
jb
push
jbe
hlt
or
mov
push
or
sub
fisubl
or
dec
test
jle
jo
add
mov
ja
fucomi
push
inc
outsl
jge
insb
lea
pusha
test
mov
nop
xlat
pop
sbb
sbb
xor
syscall
je
sub
insl
lcall
pop
jne
push
mov
in
movsb
pop
mov
jbe
xor
or
jbe
orb
dec
inc
xchg
divl
andb
mov
loopne
and
cmpsb
pop
mov
add
pop
stos
cli
inc
adc
push
andl
stc
loopne
adc
mov
je
dec
mov
inc
in
xchg
sub
and
push
sub
inc
jne
iret
xchg
fadds
dec
repnz
incl
leave
ja
dec
stos
mov
push
mov
xchg
push
test
int
xchg
mov
sahf
hlt
sbb
sbb
lea
push
lock
add
ja
clc
ds
inc
and
pop
adc
scas
test
pushf
out
sahf
cwtl
lods
rcl
sahf
ja
inc
ja
push
cmp
sahf
out
inc
inc
dec
dec
push
out
sahf
out
pop
pop
pusha
fs
and
mov
pusha
and
or
inc
inc
push
popfw
mov
ja
nop
xchg
add
xchg
lahf
testb
cs
add
fsts
push
les
gs
xor
inc
jg
cmp
mov
lar
inc
mov
sub
and
add
pop
mov
or
imul
inc
xor
shlb
push
or
push
xchg
xchg
push
lea
or
fistpl
and
mov
xor
sub
sbb
in
push
sbb
mov
scas
dec
sbb
and
push
mov
js
add
xor
lock
stc
int3
or
pop
and
inc
xchg
nop
rcl
psraw
dec
mov
mov
push
sub
pop
or
jne
movsb
xor
pop
push
aas
mov
lods
inc
cmp
and
mov
and
xor
pop
sbbb
cmp
stos
mov
pop
lods
push
mov
insb
push
das
inc
cmp
loop
ret
or
lock
lahf
mov
jmp
inc
xor
push
sbb
sbb
xchg
or
movsb
pop
add
dec
push
push
mov
loopne
pop
jecxz
mov
daa
sub
sub
sbb
dec
rolb
pop
sub
or
dec
mov
and
dec
jo
xchg
sub
push
xor
ret
nop
icebp
pop
xor
loopne
es
mov
lahf
movb
lods
imul
add
push
cmp
or
int
aas
xor
add
in
inc
lea
dec
mov
xchg
pop
pop
and
scas
dec
mov
pop
and
sbb
inc
xlat
mov
push
pop
cmp
dec
loopne
add
add
arpl
sbb
add
es
mov
push
mov
add
add
push
fisubl
bound
add
sub
push
bound
push
sbb
out
dec
xor
stos
test
scas
scas
sbbb
push
popf
jbe
pushf
jbe
push
aad
loopne
fidivrs
mov
in
sbb
or
and
sbb
dec
shll
add
adc
and
push
push
movb
inc
cmp
mov
inc
mov
movsb
cltd
xchg
ja
pop
in
out
add
idivl
inc
sub
jne
jmp
add
in
or
add
jo
xchg
in
jle
mov
push
into
add
inc
sbb
cs
lock
dec
xchg
mov
cmp
sub
lds
dec
das
jno
add
pop
push
sub
es
xchg
add
mov
adc
jecxz
push
xchg
or
adc
sub
aaa
adcb
cli
sub
es
test
pop
mov
push
cwtl
loope
test
in
push
sbb
jo
bnd
cmp
push
push
insb
adc
mov
jb
je
inc
xor
js
push
push
jo
mov
sbb
shlb
andl
ret
arpl
mov
xchg
lock
jae
add
shlb
jne
sbbl
push
imul
dec
dec
or
lcall
and
sub
push
jns
xchg
xchg
dec
xor
shll
jbe
adc
mov
dec
inc
rorb
dec
mov
fwait
mov
data16
daa
push
cwtl
mov
push
leave
pusha
or
outsb
lahf
mov
enter
notl
xor
ss
das
popf
jp
nop
js
push
out
push
nop
dec
fadds
and
jns
xchg
sub
adc
pop
leave
push
fiaddl
xor
jle
out
icebp
ret
push
jnp
dec
daa
push
jmp
pop
sbbl
xchg
test
cld
and
shlb
dec
adc
add
add
ret
rol
xor
push
loope
std
fisttps
lods
add
icebp
rol
add
xchg
loope
sbb
dec
mov
sbbl
push
pop
and
or
mov
dec
sub
xchg
sahf
xchg
add
or
sub
or
nop
fisttpl
sub
cmp
imul
adc
pop
lods
hlt
roll
inc
mov
push
xor
mov
and
inc
je
dec
out
inc
movsb
je
inc
xor
mov
push
ss
xor
rorl
pop
cmpsb
aam
popa
xchg
je
cmpsl
sbb
and
pop
roll
addl
inc
jne
jns
add
fidivl
mov
adc
mov
jg
xor
movsb
ret
addl
inc
fnstenv
mov
adcb
adcb
dec
and
or
cmp
or
adc
pop
dec
adc
pop
push
pushf
ja
inc
aad
jl
or
les
adc
pop
adc
jge
scas
xchg
test
stos
int3
cltd
mov
adc
inc
dec
daa
dec
orb
aam
cmpb
or
test
lea
shlb
mov
or
add
mov
or
adc
int3
insl
dec
inc
aam
mov
or
mov
mov
push
pop
inc
add
xor
push
xlat
inc
dec
aaa
icebp
or
rcll
pop
das
or
mov
in
mov
jmp
push
jg
adc
mov
sbb
aad
inc
mov
and
push
repnz
xor
dec
inc
aas
clc
or
xor
sbb
cmp
inc
aaa
adc
inc
xor
cmp
mov
bound
or
jecxz
andb
xchg
or
sbb
jge
dec
rcrb
cwtl
invd
mov
xchg
cmp
or
mov
insb
ss
adc
adc
sarb
rorl
cmp
ds
dec
cmpb
and
jbe
js
mov
call
je
or
es
xchg
and
sub
jne
pusha
sbb
loop
cmpl
sbb
or
mov
adc
lods
sub
push
psubw
daa
dec
int3
sbb
inc
movsb
in
pop
xchg
sbb
xchg
and
adc
push
lcall
ja
mov
loope
and
cmp
fldl
jmp
and
mov
lods
or
repnz
leave
aam
push
sub
and
orl
mov
xor
inc
adc
cmp
cmc
mov
dec
mov
pop
imul
pop
stos
daa
icebp
sub
iret
mov
add
mov
mov
inc
adc
mov
out
and
xor
enter
sbb
add
int
add
dec
pusha
data16
imul
mov
or
add
pop
shrb
add
sub
pop
ja
mov
jo
leave
ljmp
ljmp
push
js
jecxz
inc
mov
xchg
push
push
aaa
inc
fstl
dec
add
adc
in
test
and
out
inc
adc
dec
push
inc
push
enter
dec
push
mov
pop
dec
xchg
enter
xor
push
xor
aam
mov
or
fbstp
pop
cmp
add
shll
or
pop
sbb
sbb
arpl
mov
sbbl
sub
add
mov
mov
mov
mov
lock
mov
mov
mov
cmp
jmp
or
inc
mov
cmp
jo
lahf
add
push
sahf
aaa
movsb
jns
or
insb
lea
jnp
ficoml
dec
inc
imul
inc
adcl
cmp
jnp
adc
popl
cmpsb
sar
inc
test
xor
repnz
dec
cmpb
sbb
mov
adc
add
adc
dec
xor
xor
xlat
jo
adc
xorb
outsb
cmp
push
mov
cs
inc
pop
jmp
inc
mov
js
shrl
dec
and
or
stos
sbb
js
xchg
or
and
aad
add
test
out
imul
gs
mov
push
push
lds
nop
jb
js
arpl
jo
pop
mov
popf
fmull
iret
pop
push
loopne
sbb
pop
cmp
in
data16
mov
ret
push
shlb
push
mov
mov
adc
adc
dec
adc
mov
mov
add
mov
mov
imul
fcomps
inc
xor
cmp
pop
xchg
stos
dec
outsb
scas
outsb
push
or
add
je
movsl
inc
xchg
pop
sub
jmp
adc
dec
popa
push
jge
mov
incl
pop
adc
pop
inc
les
sbb
test
jmp
or
loopne
sub
dec
mov
cmp
int3
test
jg
inc
xchg
add
or
sbbb
inc
sub
add
add
adc
and
or
adc
pusha
lahf
and
or
xchg
lcall
fsubs
daa
je
pop
ja
fs
pushf
sbb
and
orb
jae
ljmp
fmull
movsl
sbb
out
mov
das
mov
in
scas
popf
popaw
or
push
dec
cmpsb
fists
push
loopne
popa
shl
int
xor
mov
mov
ret
call
orb
sub
push
icebp
or
mov
and
leave
and
getsec
andb
je
add
xchg
or
jo
add
adc
adc
or
pop
push
mov
out
les
or
push
pushf
shlb
pop
in
xchg
ret
sbb
adc
push
adc
sbb
adc
sahf
push
or
add
loope
jb
aaa
xor
add
push
cld
sahf
outsl
roll
sub
or
push
testb
or
or
adc
ret
inc
or
cmp
push
jo
dec
lret
enter
lea
lret
pop
or
into
xchg
aam
and
in
mov
xchg
roll
pop
outsl
ret
fucomi
sbb
pop
int3
cmp
fs
mov
adc
add
cs
test
lds
iret
sbb
sub
out
test
sbb
and
push
and
inc
scas
dec
out
sbb
or
pop
insb
sub
je
je
insb
mov
add
cld
jbe
xor
jae
fwait
inc
and
adc
adc
adc
pop
cs
insb
jl
aad
mov
nop
pop
shlb
xchg
inc
pusha
and
pop
mov
ret
sar
push
mov
add
sbb
adc
inc
sbb
ja
xchg
arpl
dec
mov
or
ret
add
inc
or
fistps
pop
insb
cs
jns
mov
adc
mov
adc
loope
adcb
dec
and
add
pop
int3
lods
fadds
sbb
aas
jae
imul
and
or
and
cmp
arpl
nop
xor
loop
stos
es
test
pop
addr16
adc
cltd
je
push
test
daa
mov
mov
loop
sbb
or
push
ja
sub
jl
aad
cmp
dec
mov
ret
insl
das
loope
inc
cmp
cwtl
out
or
jmp
mov
adc
gs
test
insb
pop
loope
add
or
or
push
xor
ret
dec
mov
lods
roll
push
clc
inc
cwtl
cwtl
inc
cmpsl
test
cmc
cwtl
sub
ret
rorl
or
jno
jbe
lahf
sub
aas
outsb
iret
sub
lcall
sub
cmc
push
xor
in
dec
sahf
aad
cmc
mov
pop
mov
push
jg
add
push
xor
or
dec
enter
adc
fistpl
add
and
and
in
stos
sub
je
sbb
fisttpll
lcall
lcall
push
insl
pop
pushf
sub
rol
ss
imul
lcall
xlat
mov
push
sbb
scas
mov
rcrb
gs
lea
js
insl
je
sub
mov
shll
or
shrl
and
pop
fistl
sub
stc
and
push
cltd
and
aad
sbb
inc
inc
pop
push
add
out
insl
in
sub
adc
mov
cmp
outsb
xchg
adc
movsl
mov
add
add
fadds
mov
or
pop
mov
pushf
and
fists
xor
xchg
sub
add
xor
mulb
and
popa
add
push
pusha
xor
xor
fwait
js
mov
ja
adc
cmp
cmp
negl
scas
lods
jl
sbb
mov
in
sbb
repnz
mov
ja
mov
adc
in
and
in
movsb
inc
clc
and
je
or
pop
xchg
hlt
and
and
push
pop
dec
inc
lock
negl
hlt
pop
or
stos
inc
popa
rcrb
xchg
and
push
pop
cmpsb
and
mov
dec
int
push
fucomp
outsb
es
int3
sahf
in
fnstcw
xorb
push
insl
ss
dec
outsl
dec
lods
cmp
ss
jns
clc
clc
sbb
mov
outsl
loop
dec
cmp
dec
add
xchg
ds
imul
or
sbb
xchg
mov
add
inc
or
or
cltd
or
push
xchg
pusha
lcall
add
add
lds
pushf
sub
push
addr16
test
popf
add
pop
pop
fwait
inc
sahf
mull
ffree
lahf
add
and
mov
adc
add
mov
fdivs
or
mov
adc
and
sub
lds
sarb
ficomps
int
add
dec
sar
jno
dec
in
int
sbb
mov
mov
sub
mov
push
rcr
sbb
sbbl
inc
insl
xchg
xchg
cld
or
sbb
add
inc
and
cmpsb
xchg
gs
fsubs
bound
mov
add
or
and
inc
test
in
inc
push
loop
push
arpl
cmp
fucom
hlt
adc
sbb
loope
mov
mov
or
mov
fmuls
inc
xchg
out
and
lock
mov
dec
dec
sahf
clc
or
mov
popa
mov
mov
push
add
fmulp
fsubrs
adc
js
inc
enter
lods
inc
adcb
test
sub
lret
xor
shrl
cmp
out
enter
mov
lock
arpl
mov
adc
fisubl
outsl
add
add
andb
inc
pop
cmpsl
add
lds
fwait
dec
sub
sub
adc
push
add
in
pop
fwait
enter
jmp
xchg
bnd
pop
add
test
movsl
or
add
jnp
mov
jle
mov
sub
ret
fs
shlb
mov
mov
inc
cmp
pop
in
push
jge
popf
js
mov
je
test
insl
pop
popa
addr16
inc
pop
mov
rcll
sar
int3
push
mov
ja
imul
jl
jne
jnp
add
loopne
push
ror
cmpsb
test
stos
loop
xor
inc
sbb
cmpsb
clc
pop
jle
ja
inc
add
mov
cmpsl
adc
inc
pushf
fnstenv
lds
inc
call
dec
test
xchg
pop
lret
mov
das
loope
lcall
pop
pop
test
leave
jmp
xor
push
divl
fistpll
mov
push
sub
xchg
int3
das
push
daa
stos
or
unpcklps
das
mov
stc
jmp
les
adc
psubd
add
inc
daa
push
orl
mov
add
add
add
mov
xchg
shl
out
add
add
add
adc
push
jbe
mov
bound
push
lcall
mov
mov
sbb
test
dec
sub
ljmp
xor
mov
mov
mov
mov
mov
mov
ljmp
cmp
ljmp
ljmp
jmp
xor
out
shll
dec
stos
ret
xchg
push
rclb
xor
cmp
fcomps
pop
push
xor
pop
test
int
clc
add
cld
test
push
int
jnp
pop
push
sub
push
push
popa
pusha
je
mov
arpl
sub
push
les
or
xchg
cmp
push
sbb
cmp
jle
pop
push
lods
lahf
idivb
cs
lock
out
fldcw
jbe
push
push
push
pop
push
cmp
les
and
int3
cmp
inc
mov
out
and
in
inc
lock
jnp
int
xchg
and
push
xor
and
inc
es
cmp
sbb
push
shrb
pop
mov
arpl
pop
add
xor
imul
pusha
mov
loopne
mov
insl
insl
jns
loopne
por
scas
add
sub
cmp
dec
sub
or
push
sbb
pop
sbb
sbb
push
mov
jge
insb
sub
test
lcall
rcll
out
add
bound
inc
add
adc
mov
mov
mov
sbb
lea
or
or
push
mov
add
popa
xor
inc
cwtl
jno
dec
pushf
inc
push
pop
adc
outsb
jne
rcll
aas
xor
shl
adc
or
call
cmc
leave
push
ret
or
sbb
dec
mov
hlt
sbbl
les
fmuls
rorl
xor
adc
mov
stos
ror
cmovg
mov
mov
pop
xor
or
jmp
xchg
movsb
mov
imul
fnstcw
and
test
xchg
cmp
xchg
inc
in
mov
or
mov
mov
push
orb
or
dec
aad
push
adc
fbstp
mov
or
rcl
scas
and
cmp
and
dec
arpl
pop
jb
cmp
push
sub
xor
pop
std
add
bound
sbb
daa
pop
xchg
aas
xor
jg
sbb
les
fnstsw
dec
push
in
popa
nop
cmpsb
pop
addr16
movsl
push
call
add
add
push
lods
cs
insl
loope
jns
or
push
aam
mov
sbb
lods
out
or
inc
cwtl
ret
jmp
inc
cs
outsl
xchg
inc
inc
inc
inc
mov
cld
pop
scas
inc
inc
inc
cs
arpl
inc
shl
sbb
inc
pop
cs
inc
add
lods
push
add
ret
addr16
testl
pop
ss
push
sbb
push
sbb
xchg
loopne
sarl
pop
inc
out
adc
ret
fsubl
xorl
adc
sub
dec
add
mov
adc
add
push
push
movsl
inc
sbb
es
incl
xlat
lds
and
adc
or
xor
jns
sbb
or
dec
fstl
push
xchg
rorl
outsl
incl
adc
or
pop
jno
xchg
call
jmp
int3
mov
or
jp
lret
mov
and
dec
mov
or
jno
int
mov
lret
outsb
push
test
int
pop
mov
out
test
int
incl
pop
or
clc
push
cmp
sti
xor
add
leave
push
pop
nop
nop
push
pop
pop
jmp
and
divl
fisttps
sub
mov
add
je
mov
in
inc
leave
jne
in
add
dec
inc
rclb
pop
clc
mov
jecxz
dec
push
jle
arpl
dec
and
sub
int
cmpsl
aad
in
xchg
sbb
add
scas
pop
mov
inc
and
outsb
mov
loope
cmp
adc
adc
adc
adc
mov
jne
xchg
mov
or
movsb
fldcw
cltd
incl
xor
psubq
sbb
in
repnz
cmp
loope
scas
nop
es
insb
mov
mov
pusha
xchg
xor
mov
or
movsb
add
jns
imul
sub
mov
inc
push
dec
orb
inc
aas
cmpl
das
orb
or
and
inc
and
stos
add
lahf
xchg
sbb
fcomp
and
fcompl
push
and
stc
mov
mov
sub
and
repnz
sbb
adc
add
and
fsubrs
sub
push
or
sub
xor
mov
pop
sbb
and
test
sub
sub
and
stc
and
stc
leave
add
lcall
lods
or
iret
cs
push
pop
or
shrl
ss
push
xchg
mov
or
stos
adc
xor
inc
mov
jmp
int3
xorb
push
bound
mov
call
fs
pop
or
cmc
fs
or
and
das
cmp
add
cmp
test
mov
push
or
pusha
loop
push
cmpl
jl
push
and
andl
gs
in
cmp
adc
mov
push
repz
inc
movsb
add
mov
inc
fiadds
cmp
dec
shll
inc
popa
sbb
test
ds
sub
xor
mov
test
outsb
icebp
pop
cmp
push
dec
cmp
mov
movsl
add
inc
add
push
mov
or
and
and
or
inc
and
sub
add
pop
inc
sbb
mov
jnp
das
bound
iret
cmpsl
orl
sbb
add
fcomps
fcmovnb
data16
or
xor
xor
adc
pop
dec
adc
outsb
and
les
jbe
sbb
incl
stc
shrb
push
cmp
dec
add
orb
xor
push
inc
dec
testb
xor
nop
clc
add
and
push
sub
pop
jo
rorl
adc
xor
test
insl
push
jnp
add
add
push
cs
push
sbb
ret
inc
loope
add
mov
dec
lock
loopne
jbe
push
fistpll
les
roll
or
cwtl
shlb
loope
dec
and
rorb
or
in
jne
adc
push
xlat
sub
sbb
dec
jmp
sahf
push
push
adc
pop
xor
jb
mov
push
jbe
xchg
pop
inc
push
add
or
pop
mov
add
dec
inc
push
dec
and
xor
pop
dec
adc
sbb
and
inc
push
pusha
add
add
rol
inc
enter
add
xor
rolb
dec
jb
in
add
loopne
gs
inc
and
sub
movsb
jge
dec
dec
data16
sbb
scas
popf
or
push
push
mov
scas
dec
sbb
or
rclb
push
aaa
js
xchg
imul
test
addr16
add
pop
push
jg
cs
shrl
sub
and
and
insb
jo
mov
insl
mov
mov
push
add
ret
icebp
lret
enter
les
enter
adc
in
enter
out
adc
enter
aaa
pop
andb
out
adc
enter
mov
enter
cld
and
enter
mov
enter
inc
push
in
enter
sti
sbb
aas
popa
subb
sti
and
enter
fxch
enter
pop
mov
enter
shl
enter
pop
mov
in
enter
mov
enter
enter
jmp
enter
jle
enter
enter
cmp
in
enter
in
mov
xor
in
enter
rorb
enter
mov
je
test
stc
add
shlb
aam
push
addr16
and
mov
inc
add
xlat
push
fadds
mov
fbstp
adc
lds
pop
push
adc
int
aam
add
scas
lods
pop
sbb
aad
out
push
sub
pusha
aaa
xchg
jle
cmp
and
test
mov
arpl
roll
xchg
ret
inc
mov
subb
sub
les
call
jg
insl
daa
sahf
mov
adcl
int
push
in
jl
je
loopne
clc
adc
enter
je
xchg
jo
pop
test
sub
xlat
pop
mov
and
pop
push
dec
adc
inc
or
test
pop
dec
sub
das
mov
bound
iret
int3
loope
xchg
push
inc
jb
add
add
aaa
add
rol
pusha
mov
and
daa
adc
inc
das
add
mov
dec
test
int
sub
sbb
pop
pusha
sbb
mov
pop
mov
xchg
leave
and
xchg
xchg
inc
push
add
jo
insb
pop
rorl
add
mov
orl
or
cmp
test
in
or
cmp
test
cs
and
or
jmp
push
dec
add
call
pop
pop
jle
fadds
adc
push
call
int3
push
cmpb
decl
mov
or
arpl
pop
mov
mov
xchg
aam
and
arpl
sbb
lret
rorl
xlat
fldt
push
or
adc
or
cmpsb
xorb
outsb
arpl
sbb
pop
inc
sbb
mov
rorb
push
xor
jp
and
lret
pop
int
push
into
dec
jp
add
and
or
js
imul
imul
les
jmp
in
adc
sub
inc
sahf
out
mov
adc
mov
push
rolb
fidivl
add
daa
dec
cmp
add
push
sbb
rorb
das
pop
mov
or
lds
sbb
enter
or
jl
dec
jle
pusha
add
inc
dec
inc
leave
cmp
add
jl
push
sub
fwait
insb
popf
pop
aad
aaa
shlb
cmp
mov
pusha
pop
inc
das
jae
mov
push
aaa
fbstp
jl
sbb
sub
mov
adc
je
xchg
sub
sub
xchg
imul
ja
mov
rclb
cmpsb
xchg
jecxz
sbb
ss
xchg
adc
inc
mov
cmpsb
fidivrl
cmp
pop
sub
filds
es
mov
pop
into
sub
cmp
jns
fidivl
iret
xchg
outsl
int
cmp
adc
faddl
jb
rolb
bound
pop
leave
mov
push
sub
push
lock
lods
bound
push
adc
lods
movsb
cmpsl
test
add
lret
pop
adc
add
and
and
scas
fmull
out
sub
lods
outsb
push
xchg
inc
mov
mov
pop
adc
lods
pop
mov
lods
add
mov
mov
popa
lods
and
adcb
xchg
dec
or
push
sub
mov
sub
jo
and
inc
inc
or
icebp
pop
rolb
inc
cmp
mov
inc
inc
inc
fcos
daa
rorl
inc
inc
inc
jb
shr
inc
cs
adc
ss
addl
in
adc
inc
inc
inc
xor
fwait
cs
inc
inc
aaa
pop
inc
inc
inc
push
xchg
pop
jmp
push
nop
mov
adc
xor
sub
mov
xchg
in
dec
setae
mov
mov
push
mov
inc
jbe
push
loope
mov
fidivrs
jmp
add
fisttpll
leave
add
lcall
adc
movsb
or
sbb
loope
xchg
outsl
xchg
inc
mov
pushf
fmuls
nop
js
dec
inc
fisttpll
fwait
shll
in
dec
or
rorb
mov
jno
dec
cwtl
popa
inc
in
inc
push
fcoms
mov
xor
inc
nop
add
xchg
ret
add
mov
sbb
cmpsl
pop
pop
inc
orb
inc
test
dec
mov
xchg
inc
mov
outsb
stos
jo
lods
dec
mov
movsb
or
leave
pop
sbb
mov
ss
or
mov
or
sub
jle
mov
cli
les
mov
xor
rorb
orb
xchg
jo
shlb
push
aam
mov
jl
push
xchg
pusha
les
or
pop
mov
cmp
and
andl
inc
loopne
or
cs
xchg
in
xor
cmpsl
daa
and
pop
jb
sub
pop
mov
mov
test
mov
or
mov
adc
insb
jns
dec
add
out
mov
lock
addr16
js
dec
pop
xchg
mov
lods
mov
lods
dec
pop
nop
lret
test
inc
sub
pop
push
movaps
rorl
inc
or
sub
nop
pusha
inc
jge
outsl
les
push
sub
jmp
stc
and
and
add
das
dec
rol
mov
and
and
mov
inc
mov
sub
movsl
xchg
scas
outsb
and
aas
sbbl
in
xchg
xchg
sbb
scas
add
or
rcrb
adcl
inc
addl
inc
and
add
mov
fld
dec
or
mov
movsl
aam
mov
rolb
push
and
or
cmpsl
adc
push
pop
fildll
movsl
movsl
test
movsl
add
rcl
pop
jge
mov
adc
adc
add
and
movsb
out
aas
mov
dec
or
mov
jl
les
dec
outsb
adc
push
aam
push
adc
mov
mov
mov
cmp
cmp
push
orb
jno
push
scas
loop
or
xor
xchg
jns
repnz
test
or
mov
push
pop
jge
hlt
aam
dec
pop
push
andps
int3
push
js
fcomps
dec
push
lea
ret
or
inc
out
movsl
xor
outsl
or
and
jnp
cmp
push
out
dec
xchg
or
popa
les
jmp
test
sti
rolb
push
popa
inc
mov
mov
add
arpl
imul
dec
push
sub
insb
pop
loopne
scas
daa
pop
sub
rclb
mov
jmp
arpl
pop
lock
lods
shl
mov
and
fldenv
xchg
idivl
mov
mov
jle
jns
xchg
mov
popa
or
xor
sub
imul
in
jl
adc
mov
pop
or
imul
inc
inc
data16
cmp
fmuls
fwait
push
cmp
arpl
int
mov
icebp
cmp
nop
push
mov
jp
xlat
outsb
mov
das
lds
mov
sub
lahf
pushf
or
sub
jo
das
movsb
popa
xchg
orb
dec
add
add
pop
jae
pushf
aaa
sbb
pop
bound
and
outsb
cltd
jecxz
lods
pop
and
mov
xor
sti
test
pop
repz
adc
lds
lret
or
lods
lahf
pop
rolb
adc
repnz
sbb
jne
stc
and
ss
sub
xlat
adc
mov
adc
les
sbb
pop
in
arpl
imul
fiaddl
bound
jae
popa
pop
push
xor
aaa
in
fs
sbb
jb
xchg
xor
insl
dec
add
clc
push
xchg
aad
and
mov
add
ja
loopne
sbb
inc
call
nop
cmp
inc
fsubrs
or
xchg
pop
push
cli
clc
stc
dec
and
dec
xchg
xchg
inc
dec
pop
nop
jge
adc
pop
aas
je
jbe
les
inc
xlat
cmp
cmp
jge
and
loope
in
xchg
pop
hlt
stos
and
imul
sbb
xor
sbb
add
pop
dec
roll
sub
dec
dec
sub
add
xchg
adc
add
fsubrs
and
pop
xlat
fnstenv
add
and
pop
int
in
pushf
ja
add
lods
negl
xchg
popa
movsl
sub
leave
les
add
push
mov
in
jbe
xchg
add
in
pusha
pop
in
dec
in
push
xchg
fwait
xchg
inc
mov
leave
enter
mov
in
fs
out
js
jb
repnz
cs
mov
ficoms
mov
lret
add
sub
pushf
pushf
pushf
jg
fmuls
jb
jb
lahf
scas
cmp
sbb
jmp
pusha
mov
cmp
jno
pushf
pushf
pushf
cmpsb
fisttpll
add
xorb
loope
in
inc
add
sub
jg
jge
lret
dec
or
mov
xchg
lds
gs
and
sub
pop
and
pop
and
testb
push
lahf
jae
lods
in
mov
push
inc
add
mov
popf
push
mov
gs
jmp
xchg
subb
push
adc
xrstor
leave
add
xor
inc
adcb
inc
bound
xor
pop
and
inc
fiaddl
aad
popf
cmpsb
or
fdivs
cmp
dec
popa
and
pop
call
daa
test
pop
jmp
push
push
mov
gs
sbb
sbb
lret
cltd
xor
loopne
push
inc
xchg
push
lods
rcrb
sbb
ja
add
adc
icebp
dec
xor
mov
mov
mov
cwtl
dec
inc
loope
inc
in
xchg
dec
mov
lret
add
insl
jo
pop
inc
lret
inc
or
out
mov
or
andl
test
lock
popa
fmuls
xchg
xchg
in
dec
dec
or
add
cmp
cmpsb
mov
cmp
fcoms
pop
loop
push
sub
mov
and
in
fbstp
mov
out
pop
dec
add
sub
shrl
stos
rcll
jo
inc
cmpsl
stos
adc
xor
dec
and
pusha
loope
push
cltd
sbb
jmp
lods
stos
adc
inc
xchg
xor
mov
sbb
push
or
aas
pop
pop
add
adc
dec
or
popf
jae
in
jno
dec
adc
dec
add
inc
lahf
mov
dec
mov
or
pusha
out
daa
pop
scas
adc
add
xchg
sub
sbb
inc
stos
lcall
mov
jp
mov
test
pop
inc
mov
cmpb
sarl
mov
lods
or
adc
push
cmpsb
inc
inc
cmpsl
jp
sti
fsub
and
orl
mov
pop
iret
sub
stos
dec
je
pop
loop
mov
sub
mov
pop
add
mov
adc
push
lods
cs
fmuls
pop
hlt
sbb
addr16
test
pushf
lea
pop
test
movsl
dec
cmp
sbb
lret
pop
hlt
or
lret
xchg
xchg
xchg
pushf
shr
lock
xchg
xchg
xchg
cmp
mov
lret
xchg
xchg
shl
pop
icebp
inc
xchg
xchg
xchg
xchg
imul
ljmp
repnz
jns
xchg
xchg
xchg
pushf
ret
in
adc
xchg
xchg
xchg
xchg
aaa
pop
jl
xchg
xchg
lret
xchg
fiaddl
sub
xchg
jns
iret
std
xchg
xchg
xchg
lret
push
cmc
aas
pusha
test
xchg
xchg
xchg
test
xchg
xchg
xchg
xchg
arpl
dec
mov
movsl
inc
faddp
mov
arpl
cmp
rcll
add
lds
or
xchg
out
or
pop
xchg
aad
cwtl
mov
repz
inc
and
shrb
and
cmp
push
dec
ss
mov
and
mov
adc
mov
rcrb
jmp
and
ss
nop
sarb
dec
sub
shlb
iret
adc
push
dec
les
mov
imul
clc
sarb
xor
add
imul
dec
inc
cs
int
scas
cmc
mov
inc
rcll
push
cmc
xchg
fcompl
adc
or
add
xor
inc
pop
sbb
mov
inc
addr16
sbb
rcll
jmp
jae
dec
sbb
xor
dec
dec
rcll
enter
or
movsb
sbbl
test
movsb
test
add
mov
fwait
nop
fcmovu
push
sbb
loope
pop
pop
mov
pop
mov
xor
shlb
and
mov
lods
xlat
pop
pop
jmp
minps
add
in
sub
loopne
lods
les
push
xor
shll
mov
ljmp
addb
sub
rcrl
xchg
mov
mov
popf
clc
add
iret
pop
test
xor
add
dec
sahf
inc
and
mov
sahf
cmp
or
cmp
sub
mov
je
xchg
mov
lods
pop
sub
lock
add
xchg
and
sub
cmpsb
add
mov
add
dec
pop
mov
jno
push
push
loopne
sub
xchg
jne
dec
out
inc
popa
sbb
jb
jae
inc
push
loop
xchg
pop
push
sbb
mov
or
cmovne
mov
xor
cmpsb
icebp
sub
fidivrs
xor
adc
push
mov
js
and
fildll
fsubl
jne
or
je
cmp
push
inc
scas
fadd
mov
or
and
fnsave
cmpps
cltd
mov
pushf
or
insb
je
sub
mov
push
jne
cmp
or
adcl
in
pop
iret
sbb
in
xchg
or
push
jle
jbe
cwtl
in
sbb
adc
loopne
das
jmp
dec
sti
mov
push
and
push
dec
add
dec
fwait
cmp
or
xchg
lcall
imul
or
dec
mov
jbe
pop
inc
or
adc
mov
js
inc
idivl
sbb
out
addl
test
pop
dec
popf
add
push
aaa
adc
xor
es
push
enter
lods
adc
jae
hlt
mov
mov
dec
movups
xor
inc
mov
fs
xchg
repz
and
es
repnz
mov
xchg
mov
stc
int3
imul
repz
push
adc
pop
xor
mov
mov
je
push
xchg
and
sbb
subl
push
jne
je
dec
inc
sbb
pop
sub
shlb
push
test
or
inc
cmp
mov
sbb
and
sbb
inc
or
sarl
pop
mov
mov
shr
sbb
dec
xor
and
sub
add
cs
add
sbb
lcall
add
mov
decl
pop
add
fs
test
sarb
ret
in
jne
and
call
xchg
xor
iret
push
or
dec
sub
pop
dec
dec
jo
push
push
sub
outsl
or
sbb
xchg
sbb
or
mov
call
shlb
orb
dec
cmp
cmp
scas
lds
and
fidivrl
nop
xchg
ret
jae
sbb
jl
pop
clc
cmp
addr16
loopne
insl
add
add
dec
ja
movsb
js
orl
inc
cmp
xor
aam
adc
mov
into
add
or
or
adc
adc
pop
add
dec
popl
cmpsb
lock
sti
push
dec
lret
add
pop
add
xor
push
ret
add
cs
daa
pushf
inc
adc
mov
adc
add
int
add
add
add
lods
adc
push
mov
pop
movsb
mov
pop
xor
add
cmpsl
fs
movsl
mov
pop
pusha
and
cs
sub
js
addl
popf
add
jbe
mov
mov
in
subl
push
and
ret
lahf
pushf
sub
or
push
add
jg
mov
and
mov
xor
pop
dec
or
mov
pop
xor
test
mov
jb
push
inc
or
es
pop
ss
inc
and
or
shlb
add
inc
add
or
xchg
inc
pop
xor
or
faddl
cmp
push
orl
xchg
xchg
inc
adc
or
cmpsl
add
inc
xchg
cmp
push
add
jp
popa
iret
mov
sub
sub
lock
sbb
add
insb
push
outsl
imul
jmp
sbb
pop
lock
push
mov
pop
es
or
cmp
sub
clc
add
mov
inc
jmp
and
in
inc
jbe
decl
adc
add
rolb
mul
nop
pop
or
push
inc
add
cmp
jl
xlat
mov
inc
mov
add
ljmp
fists
cs
or
add
sub
nop
fadds
cmovp
and
xchg
add
pop
and
mov
aam
add
sarl
push
outsl
mov
hlt
push
mov
cmp
cmpb
push
cmp
cltd
mov
cld
pop
jmp
sub
adc
out
insb
pop
adc
and
mov
inc
mov
rclb
fwait
sbb
enter
aaa
fdivrs
enter
sahf
cmpsl
ficoml
sbb
mov
loop
lock
lock
push
adc
lahf
mov
xchg
push
outsb
mov
daa
mov
cs
mov
push
ljmp
lock
and
cli
fisubrs
jge
hlt
mov
mov
cmpsb
sahf
je
in
outsl
fs
sub
neg
jmp
arpl
test
pop
and
arpl
out
mov
push
or
and
insb
add
rolb
and
push
sub
jp
daa
lock
pop
stos
insl
mull
add
jmp
push
inc
cwtl
and
lock
jl
test
nop
pop
leave
cmp
insb
cmp
pushf
dec
stos
inc
pop
sub
mov
inc
repnz
mov
push
sbb
clc
mov
push
sub
mov
iret
add
pop
fidivs
popa
test
pop
xlat
and
inc
test
sbb
inc
sahf
push
push
call
and
xchg
and
or
inc
xchg
in
dec
pop
sub
repz
push
fisttps
out
stc
jmp
inc
inc
lcall
cmp
sti
dec
add
jbe
cs
jmp
or
pop
push
cmc
rcl
mov
sub
push
cmpb
and
popf
and
and
xchg
shlb
pushw
ja
dec
xchg
sub
push
data16
xadd
push
sti
jmp
and
dec
and
adc
sub
or
jge
xchg
sbb
pusha
mov
orb
inc
jmp
sub
xlat
sub
push
xchg
xchg
pusha
mov
xchg
and
add
push
int
jns
mov
push
push
mov
cmp
icebp
cmp
and
std
aaa
add
call
inc
jne
negb
add
adc
jg
fmulp
inc
xchg
jle
push
adc
dec
out
mov
xchg
andl
dec
dec
jno
pop
popa
cmpsl
and
xchg
pop
gs
in
fcoms
pop
or
lock
data16
les
or
push
push
xchg
mov
xor
and
xchg
mov
std
dec
insl
std
cmp
mov
inc
ljmp
or
inc
sub
test
mov
push
dec
inc
ret
cld
addr16
sub
popa
mov
cld
and
daa
test
int
jbe
or
negb
icebp
jle
push
test
and
sarb
adc
hlt
ja
cmpsb
mov
or
dec
pop
das
adc
ret
fisubs
adc
fnstcw
enter
insb
pop
mov
cli
pop
push
test
mov
add
push
lods
mov
fidivrl
je
adc
push
xor
and
xor
test
cmpsl
add
xor
mov
mov
pop
xchg
cmp
mov
and
adc
or
and
movb
bound
add
ret
sub
stos
lea
pop
xor
sub
pop
mov
xor
mov
repnz
sub
sbb
test
js
in
fldl
sub
xor
fs
in
and
cmp
push
sbb
xor
add
insb
push
sub
in
pop
sbb
mov
mov
divl
sbb
lea
push
mov
add
add
sbb
pop
sbb
push
fstps
push
aam
mov
sub
add
sbb
xchg
xorb
fiadds
xor
shl
pop
ret
out
mov
addl
or
pop
in
push
sbb
inc
and
inc
lods
outsb
lcall
mov
lret
notl
pop
shll
push
lea
inc
xchg
enter
push
nop
jge
test
jne
andl
add
je
inc
mov
jecxz
popf
lret
xchg
mov
rorl
lods
pop
add
inc
inc
mov
mov
iret
pop
jecxz
mov
mov
call
push
sub
lret
aas
sbb
xchg
adc
adc
mov
les
adc
mov
xchg
and
xor
and
mov
sub
lret
cmpsb
incl
mov
popa
out
or
xchg
and
fwait
mov
mov
add
sbb
subb
js
cld
mov
andl
in
dec
repz
dec
rcl
lock
lahf
stos
pop
out
or
test
sysret
mov
adc
cmp
and
add
fisttpll
sub
stc
add
aaa
inc
and
and
or
inc
cs
ss
adc
inc
cmp
inc
push
in
or
sbb
shll
jmp
mov
push
dec
aaa
push
lock
push
std
cmpw
popa
movb
testb
ss
jl
or
ja
addps
mov
dec
add
mov
cmp
rcr
adc
or
mov
shrb
leave
add
lret
mov
add
mov
pop
add
pusha
add
pop
cmp
daa
jo
repnz
adc
out
fcoms
cmp
pmaxub
inc
fisttpl
cmp
outsl
and
mov
out
pop
mov
and
js
mov
push
fildl
lret
push
xchg
sub
sbb
sbbb
pop
sarb
pop
pop
arpl
loope
add
and
fstpt
jmp
dec
outsl
mov
pop
jb
and
dec
xchg
xor
pusha
icebp
pop
ror
xlat
test
xchg
test
mov
sbb
inc
add
sbb
push
push
sbb
test
stc
mov
cwtl
sub
stos
test
lods
and
cld
ficoml
pop
dec
jno
popf
push
imul
pop
add
outsl
sbb
iret
movsb
pop
adc
dec
shlb
out
int3
mov
pop
push
push
push
lea
push
hlt
outsb
lds
push
nop
aaa
les
push
jle
loope
mov
pop
xor
mov
lds
sbb
out
sbb
pop
sub
jno
push
jle
fs
cmpsl
shll
add
mov
imul
sbb
or
mov
inc
mov
or
sbb
sub
xor
rolb
unpcklps
imul
jle
xchg
mov
orb
outsb
stos
inc
les
dec
test
pop
mov
adc
movsb
cmp
mov
loopne
popa
in
add
rolb
addb
mov
xchg
clc
adc
mov
jo
dec
movsl
inc
sub
pop
lret
add
testb
mov
xchg
or
lock
and
das
mov
mov
cmp
push
dec
adc
pop
sbb
mov
xchg
adcb
jle
xor
stc
sbb
nopl
dec
into
pop
out
lods
orl
jp
mov
inc
or
bnd
and
ret
inc
mov
mov
mov
sbb
and
movsb
in
shrb
xchg
xor
jle
cli
push
enter
fisubl
inc
adc
sahf
add
inc
mov
scas
je
pop
testl
repz
fstps
mov
hlt
test
adc
and
push
cmp
add
mov
add
jb
aam
scas
push
dec
mov
inc
add
and
call
pop
dec
cmp
sub
stc
jl
clc
movsb
hlt
nop
cmp
popa
adc
push
xchg
inc
dec
push
adc
xorb
sbb
xor
das
inc
movsb
test
pop
push
dec
cmp
mov
add
sahf
sbb
rcrl
pop
jl
and
fiadds
ds
xchg
andl
and
or
sbb
sti
popa
sbb
mov
nop
cs
pop
ret
cmp
sbb
sbb
outsl
in
inc
mov
xor
xor
push
pop
stc
inc
loopne
out
stc
push
ret
div
orl
fadds
je
mov
push
or
andb
push
popa
mov
or
adc
ss
sarb
test
inc
xchg
push
lods
fdivs
inc
push
daa
sbbl
cmp
fsubrl
pop
dec
and
add
pop
xor
movsb
sbb
mov
push
fidivrl
pusha
cltd
or
or
int
sbb
xor
mov
sub
mov
dec
or
mov
mov
int3
jp
jo
ret
add
mov
push
cltd
inc
or
sbb
subl
cmp
or
out
or
xor
fadds
fidivrl
lds
xor
sar
inc
movl
add
inc
dec
mov
pop
adc
orb
les
fs
test
or
cmp
mov
sub
int3
add
aaa
adc
cmpb
lret
addb
inc
mov
pop
les
test
cmp
stos
push
and
aaa
inc
adc
and
mov
movsl
cmpsb
leave
xchg
push
xor
dec
pop
pop
add
inc
pusha
inc
inc
out
sbb
les
js
add
movsb
ret
sub
add
scas
fcoms
or
sub
cmp
es
jecxz
inc
dec
or
ret
sti
dec
aas
xorb
mov
idivb
mov
xor
cmp
es
and
pop
shrl
mov
jnp
and
inc
sub
xor
enter
cmp
pop
xor
rorb
jge
xlat
xor
inc
insb
popa
mov
mov
inc
push
andl
sarb
mov
popf
cmpxchg
lcall
fisubs
sbb
dec
lods
mov
negl
xor
xor
push
lds
sub
pop
lahf
inc
mov
lods
pop
enter
jp
or
dec
jmp
repz
jbe
mov
jle
xor
testb
and
xchg
mov
idivl
sub
test
mov
jne
sub
push
movsb
cmp
rclb
push
lret
test
xchg
cld
and
repz
ds
push
pop
and
push
outsb
mov
insl
int3
pop
add
insb
push
loopne
adc
add
ds
aad
cmp
dec
sub
cmpsl
in
mov
dec
push
push
and
xor
adc
ret
orb
out
lods
xor
push
fcomi
mov
or
add
pop
cld
rolb
pop
adc
push
inc
inc
fwait
adc
push
jl
cs
push
dec
jne
push
loope
and
inc
sbb
int3
pop
or
or
xchg
cmp
push
mov
icebp
cmp
xchg
add
xor
fwait
repnz
mov
pop
in
or
and
jl
add
and
push
xchg
sbb
sbb
repnz
inc
push
inc
pusha
push
lcall
xor
sbb
popf
mov
add
aam
lahf
mov
fadds
js
mov
xchg
mov
jo
sub
sub
cmp
loopne
add
ret
bound
or
xchg
push
dec
pusha
or
lock
sub
test
cmp
sbb
in
rcrb
das
test
dec
sub
sub
hlt
cli
js
jae
cmpsb
xor
fwait
dec
outsl
mov
add
xchg
push
mov
cmpsl
or
fists
lods
fnsave
mov
add
and
cmpsl
xlat
push
and
add
adc
ret
shlb
addr16
sub
xor
adc
cld
adc
and
mov
shl
imul
loopne
mov
int
inc
push
test
or
pop
lcall
shrl
rclb
xchg
adc
frstor
fwait
call
inc
in
dec
adc
cs
push
pop
push
and
testb
lds
xchg
aad
pop
incb
mov
call
je
movsl
inc
aam
pop
nop
push
xor
popl
or
insb
sbb
and
popf
or
lock
mov
mov
dec
sti
sbb
pop
add
lds
imul
xor
and
push
xchg
sub
add
xchg
push
push
push
sbb
pop
hlt
add
xchg
adcl
adc
adc
lret
popa
daa
sub
xor
push
dec
loop
jns
add
dec
add
push
cmpl
and
stos
call
push
inc
or
jnp
or
adc
add
push
mov
inc
and
mov
sti
mov
jle
nop
cmp
mov
inc
test
push
into
add
and
ss
xor
icebp
adc
sar
xlat
pop
aad
dec
add
dec
pop
add
push
push
addr16
xchg
lock
or
mov
jns
pop
jne
or
inc
dec
and
push
dec
call
stos
pop
adc
loopne
dec
out
ja
jmp
adc
pop
or
sub
popa
and
cwtl
shll
inc
pusha
xor
mov
je
inc
jp
inc
addr16
dec
lock
int3
insl
mov
push
mov
jg
mov
ret
jne
xchg
add
push
pop
push
xchg
add
loope
push
dec
or
adc
loopne
jne
mov
icebp
push
jb
lcall
cmpsl
add
cmp
push
sti
fbld
add
orb
jmp
andb
mov
pop
je
sub
int
outsl
push
jecxz
orl
test
inc
pop
fdivs
jge
adc
push
mov
nop
pop
test
lcall
cmp
sub
popf
add
adcl
data16
lea
jne
insl
rcrb
sbb
nop
xchg
lret
adc
cmp
jle
push
mov
adc
stos
mov
wbinvd
test
sbb
pop
add
mov
add
inc
or
mov
or
psubq
ds
add
je
add
sbb
frstor
jb
adc
dec
or
add
sbb
les
cld
add
inc
rcrl
scas
jb
ljmp
pop
xlat
add
xor
jp
sub
xlat
js
loopne
icebp
inc
and
insb
outsl
xchg
jno
inc
mov
sbb
xchg
out
xlat
movsb
insl
mov
ret
inc
lds
mov
imul
inc
out
aad
xor
movd
pop
lahf
cli
ret
sbb
cmpb
cmpl
int3
jo
xor
jno
in
sbb
mov
out
dec
call
rorb
sbb
push
shlb
xchg
js
pop
test
jo
inc
mov
or
lret
jne
push
dec
cmp
push
shll
dec
daa
out
in
pop
imul
cmp
cmp
js
inc
sarb
adc
xor
xchg
testb
inc
popa
adc
sbb
mov
scas
daa
jnp
cmpl
add
scas
inc
add
sbb
inc
mov
les
popa
cmp
xchg
jo
cmpsb
lock
push
xlat
push
pop
cmp
lahf
movsl
fcoml
push
xchg
mov
cmpb
lcall
xchg
or
in
pushf
rorb
das
cltd
out
daa
xor
add
ret
loopne
sbb
imul
int3
xor
pop
cmp
xor
fiadds
cmp
test
fdivrs
or
push
lea
in
loopne
popf
hlt
mov
es
clc
cmp
pushf
hlt
add
cltd
hlt
call
call
scas
add
ss
push
test
loope
add
mov
cmpl
lods
add
pop
push
out
inc
push
or
in
sub
cmp
daa
rorb
lock
aas
add
dec
or
test
mov
adc
enter
loope
sub
lock
dec
and
xchg
jmp
mov
dec
rolb
and
dec
xchg
fs
cmp
add
adc
enter
fistl
add
adc
jbe
mov
mov
push
inc
arpl
or
fildl
loopne
imul
rcrb
and
loopne
inc
add
pusha
push
inc
add
add
sbb
jl
fnstenv
sub
push
inc
add
push
sahf
sbb
push
es
and
inc
loopne
out
xor
sbb
add
dec
add
shl
insl
cmp
push
jo
es
test
imul
push
mov
push
push
mov
inc
add
mov
insl
sub
xor
add
lock
cmc
sub
inc
in
mov
orb
add
imul
hlt
inc
or
and
in
movsb
neg
in
xchg
shlb
cmp
sub
sbb
inc
popa
test
xor
outsl
loopne
or
xchg
push
into
xchg
cli
mov
movl
push
sub
aad
cmp
iret
dec
bound
ret
mov
jmp
hlt
dec
add
popa
or
dec
cmpsl
sub
or
inc
call
adc
sbb
orb
sbb
lock
imul
imul
ret
lods
fisttpll
je
cmp
jo
cmp
sahf
and
fistpll
aad
sbb
gs
mov
or
or
aaa
sti
sbb
das
cmp
jg
shlb
jns
push
out
gs
add
loope
cs
cmp
pop
shlb
pop
mov
and
mov
jmp
and
adc
or
jl
lret
dec
enter
mov
lds
out
add
lcall
sbbb
pusha
mov
and
cmp
push
add
xchg
lods
xor
add
popa
mov
adc
sbb
push
sub
call
out
xor
fyl2x
cwtl
das
lea
push
aaa
add
mov
lahf
inc
pop
adc
rcll
mov
daa
jo
incl
ret
fcomp
push
xchg
icebp
sbb
adc
inc
mov
add
sahf
xchg
es
mov
rolb
sbb
and
rcr
loopne
sbb
jmp
negb
add
add
mov
popa
sub
clc
adc
sub
sbb
add
sbb
push
add
test
add
movsb
cltd
stc
cmp
pop
icebp
test
scas
fstl
mov
xor
xchg
and
loopne
cmc
xor
adc
jl
or
mov
or
cmp
cs
lock
stos
sti
push
mov
add
push
or
xor
jmp
dec
fwait
insb
inc
clc
mov
and
cmp
inc
inc
test
jle
or
sbb
loopne
lds
sub
push
mov
cmp
stos
cmpsb
lock
idiv
and
cmpsb
inc
mov
iret
fabs
push
jmp
sub
mov
cmp
xor
jne
sarb
les
fcompl
cmpsl
push
je
aaa
mov
or
out
or
out
or
fwait
cmc
aam
sbb
cmpsl
cmp
push
mov
mov
dec
in
adc
or
decb
add
cld
mov
mov
cmp
xlat
shl
movsb
add
cmpsl
jle
pusha
inc
mov
cmpb
je
xchg
mov
cld
loopne
sub
lods
pop
sahf
add
cmp
jg
mov
mov
xchg
sub
loop
mov
and
adc
inc
lea
cwtl
lret
push
mov
push
jl
inc
jo
mov
mov
inc
lods
gs
scas
lods
pop
out
push
cmp
inc
pop
fcoms
adc
push
cltd
orb
mov
outsl
push
push
mov
lret
pusha
and
ret
or
or
shl
xchg
lock
mov
sub
pop
adc
cmp
je
adc
adc
pushf
inc
or
jb
xchg
mov
outsb
and
jmp
es
ret
call
loopne
stos
mov
push
aad
cmpl
sbb
sub
or
dec
mov
xor
test
lea
gs
test
fisubrs
add
add
daa
or
ret
notl
orl
push
adc
in
dec
or
dec
movsb
jo
and
push
or
pop
adc
adc
mov
jne
or
add
mov
xchg
lahf
les
shrb
and
nop
xorb
push
jmp
mov
test
aam
lods
mov
xor
dec
scas
push
add
pop
pop
lock
add
or
sbb
mov
pop
adc
dec
push
add
mov
adc
fldt
loop
push
lcall
mov
pop
mov
mov
popf
adc
adc
adc
notl
xchg
out
sbb
fstpl
cmc
sub
loopne
repz
mov
bswap
hlt
aaa
sub
push
dec
outsl
push
sbbb
add
push
ffreep
rcr
std
mov
mov
sbb
addl
lahf
sti
aaa
hlt
adcl
cmpl
add
in
ds
imul
adc
xchg
lds
lock
ret
inc
xchg
push
xchg
dec
xor
fwait
les
fcoms
pop
sub
rcrl
jecxz
rolb
jp
mov
mov
mov
push
out
mov
ja
rcl
lods
daa
cld
lahf
das
adc
add
ljmp
hlt
clc
mov
inc
int3
lds
lock
lea
je
add
mov
or
and
xchg
cld
jne
rolb
pop
fdivs
add
call
or
add
mov
pusha
cmpsl
movsb
stos
sub
or
adc
cmp
mov
pop
pop
pop
arpl
mov
dec
ret
mov
sbb
push
iret
shlb
xchg
sbb
pusha
jmp
int
ss
sub
in
adcl
xchg
jmp
aaa
sysexit
loopne
push
jl
popa
in
adc
popa
in
and
subl
inc
jge
and
int
repnz
pop
jp
loopne
shrb
mov
or
daa
sub
inc
add
mov
pop
or
shlb
decl
or
add
inc
mov
adc
mov
jl
out
je
dec
orl
adc
scas
xchg
xchg
stos
inc
daa
loopne
fs
jo
fists
xor
jno
dec
adc
sub
sub
test
orl
and
or
sub
inc
push
add
push
adc
inc
xor
cmp
es
xor
inc
popa
adc
adc
dec
xchg
mov
sub
cmp
mov
or
adc
xor
pop
push
lock
push
insb
pop
adc
shlb
add
jo
mov
pop
hlt
jmp
dec
mov
je
cmp
imul
fisttpll
jne
mov
xor
pop
stos
inc
les
movsb
fst
mov
sbb
les
arpl
xchg
mov
addr16
cmpb
scas
or
test
fcompl
xchg
push
mov
fmull
mov
adc
cmpsl
addl
cltd
xor
jp
add
loopne
push
adc
arpl
fstps
jns
add
jo
xacquire
enter
fs
je
and
cmp
pop
inc
inc
jecxz
sbb
sbb
pop
sub
mov
cs
add
int
mov
jne
add
imul
scas
inc
cmp
and
or
mov
and
sub
jne
rorl
cmp
dec
and
sub
and
dec
dec
mov
sbb
sub
sub
loopne
popa
sbb
inc
inc
xor
fsubs
and
or
popa
sbb
dec
leave
jno
cmp
ret
push
jne
pop
std
xor
insl
or
xor
sub
or
mov
mov
sub
fiaddl
clc
mov
popa
sub
mov
shll
and
jne
adc
adc
movsl
dec
popa
and
push
test
icebp
mov
and
adc
cwtl
ss
jmp
rcrb
nop
je
push
mov
in
mov
pop
aad
inc
push
adc
or
push
enter
push
rolb
lea
lcall
and
loopne
test
pop
inc
inc
and
adc
mov
mov
js
inc
gs
pop
filds
cwtl
push
xchg
xlat
dec
cmp
icebp
push
insb
mov
push
xchg
sbb
add
pushf
rorb
leave
jo
pop
jecxz
sub
je
lock
pop
scas
lret
stos
push
sub
jmp
mov
out
mov
mov
stos
xchg
adc
pop
test
xor
xchg
cmp
xorl
out
cmp
sbb
mov
les
outsb
jle
inc
pop
fs
outsl
sbb
adc
call
xchg
subb
sub
adc
jl
inc
jo
xchg
adc
popa
outsl
and
test
ljmp
jg
xlat
push
push
loopne
xchg
push
cmpsl
lock
jmp
adc
cmp
jg
and
popf
push
mov
mov
fdivs
xlat
or
sbb
mov
pop
fistps
ja
jnp
or
xor
sub
sbb
cmc
outsb
or
pop
dec
cmp
lahf
add
mov
and
push
and
push
bound
push
imul
test
sbb
xchg
dec
test
arpl
xor
pop
aas
sbb
push
lcall
pusha
dec
sbb
push
dec
cmp
jne
push
jmp
movsb
loopne
iret
add
sub
scas
inc
mov
scas
jns
pop
je
lods
and
popa
mov
por
push
inc
dec
iret
mov
outsl
mov
xchg
rcll
stos
add
dec
add
adc
sbb
aad
sub
dec
mov
outsl
xchg
dec
or
lea
lea
outsb
mov
xor
pop
cmpsb
xor
xor
mov
sbb
sbb
and
sub
pop
repnz
cmp
jne
adc
sbb
dec
push
inc
and
add
lods
fstps
cmpsb
add
push
push
adcb
fisubrs
jl
add
fs
sbb
pop
push
gs
inc
cmc
inc
lock
aas
jmp
mov
mov
jo
sub
cwtl
sbb
jbe
push
pop
or
lods
mov
cs
adc
les
mov
cmp
sti
jne
in
xor
xor
and
or
or
mov
jl
adc
or
jecxz
daa
add
or
pop
lods
pop
xor
cmpsb
and
adc
mov
das
mov
or
sahf
and
lock
or
into
ss
sbb
xchg
jle
mov
mov
arpl
xchg
mov
es
adc
imul
in
nop
sbb
lods
mov
fbstp
push
push
or
shrl
lcall
mov
test
push
xor
xlat
sbb
jno
jno
cs
sub
pop
cmpsb
mov
rclb
jge
pushf
rclb
adc
add
imul
xchg
mov
sbb
sbb
sbb
inc
lock
cld
add
dec
inc
or
mov
ret
dec
push
add
xor
and
dec
pop
rcrb
dec
add
or
stos
pop
xor
rorb
cwtl
stos
ret
in
adc
pusha
or
sub
jno
inc
fnstsw
daa
lea
mov
mov
ds
in
mov
inc
or
call
adc
adc
sbb
xor
clc
and
popa
insl
scas
push
in
repz
roll
mov
orb
adc
out
mov
movsl
sbb
add
and
inc
sub
sub
stc
clc
or
cli
in
movsl
arpl
out
push
or
adc
sub
shrl
pop
inc
ret
push
frstor
and
or
pushf
inc
out
sbb
jbe
sbb
clc
and
xchg
dec
test
mov
push
ret
cmp
xchg
bound
mov
cld
sbb
fnsave
js
inc
int3
pop
movsb
push
fistpll
shlb
pop
adc
xor
hlt
hlt
mov
push
jl
int3
xchg
aad
sub
or
in
pop
mov
jns
cmc
movsl
adc
jl
adc
inc
cmpl
jne
sub
sbb
and
add
jno
testb
push
push
xor
cmpsl
insl
or
cmpsb
cli
fwait
mov
cmp
je
and
and
icebp
cmp
je
sub
lea
test
repnz
or
fimuls
std
or
hlt
or
fisubrl
mov
mov
cmp
loope
push
pop
scas
push
sbb
mov
mov
add
sbb
xor
xchg
xor
mov
addr16
pop
xchg
lcall
lcall
scas
sti
cmp
cmp
cmp
mov
es
repz
mov
or
and
insl
std
push
orl
jne
cmp
mov
daa
jo
jbe
add
movsl
aaa
mov
jg
mov
push
mov
mov
and
and
xor
mov
jns
push
jne
out
and
jmp
and
add
pop
into
rolb
jb
les
add
inc
push
add
pop
or
test
test
push
lods
fistpl
je
mov
inc
jl
adc
outsl
cmp
aad
or
dec
add
xchg
clc
dec
pop
jl
mov
xchg
test
lock
push
xchg
mov
arpl
sbb
jo
mov
out
inc
push
pop
fcomip
xlat
pop
mov
ss
mov
pop
xor
lahf
inc
jne
mov
and
fmuls
sbb
ret
jne
cmp
jnp
xchg
lods
enter
lea
and
dec
jp
cwtl
fistl
pop
and
inc
mov
movsb
movsb
sub
sub
adc
rolb
inc
or
push
or
outsb
mov
add
dec
movsl
and
add
movsb
mulb
adcb
fwait
cwtl
fwait
adc
push
xor
jecxz
sbb
sbb
mov
es
pop
jp
adcb
insl
dec
sub
loope
mov
aad
andb
inc
pop
mov
xchg
pop
test
sub
inc
aaa
add
cmc
mov
lcall
repz
push
sub
jb
ret
loopne
adc
jge
inc
xchg
rorl
and
sbb
js
into
add
shl
fwait
xor
push
adc
jo
adc
sub
or
mov
push
mov
dec
inc
cmpl
iret
je
cmp
je
jg
and
out
mov
dec
cmpb
call
flds
or
jns
shlb
mov
mov
jae
adc
adc
or
fs
stc
sub
ljmp
pop
inc
fisubs
lock
ds
cmp
add
jl
sub
push
fwait
adc
inc
or
fadds
xchg
xor
mov
pop
rorb
fsubr
in
scas
inc
sbb
mov
pop
add
enter
add
add
in
arpl
sbb
ror
dec
inc
das
rorb
lcall
shl
xchg
push
in
aaa
and
cmp
test
jo
sbb
cmpxchg
loop
psubd
cmpb
nop
cs
fcom
adc
cmc
mov
and
lods
in
or
aam
cmpsb
push
sbb
imul
fstps
jl
inc
divl
push
cmp
ret
add
leave
andl
sub
rcrb
or
js
sub
mov
sub
sbb
es
xor
mov
or
popa
loopne
les
mov
dec
or
sbbl
xor
pop
xchg
mov
fcmovne
pop
mov
mov
adc
push
or
cmp
mov
mov
fadds
dec
add
subb
jae
pop
pop
inc
scas
mov
je
mov
dec
cwtl
cltd
xor
fidivs
int
xor
pop
push
push
ret
push
add
push
xor
mov
or
xor
add
inc
push
mov
daa
mov
insl
movsb
test
jmp
push
addr16
adc
stos
enter
aad
lods
adc
inc
and
jo
cmp
dec
sub
mov
pusha
sub
ds
xchg
movsl
lds
xor
stos
das
fstp
stos
and
ret
sar
sbbl
movl
jbe
outsl
and
imul
xchg
lahf
fwait
test
insl
and
fiadds
xchg
imul
push
mov
ret
data16
fwait
add
divb
icebp
outsb
cmp
push
xchg
adc
add
enter
add
sbb
jmp
dec
rorb
outsl
clc
aaa
add
xor
loopne
testl
add
adc
mov
or
popa
push
inc
ret
jbe
test
movsl
addr16
sub
movsl
lcall
sub
and
ret
imul
or
lds
push
push
aam
xchg
and
fwait
lock
and
sbbb
mov
jb
arpl
xchg
xchg
push
repz
lahf
repnz
xchg
push
inc
dec
sub
sti
mov
sub
imul
mov
adc
pop
jo
fdivl
sbb
jmp
xlat
jno
lea
mov
daa
inc
jle
and
or
or
push
lock
adc
mov
adcl
loopne
adc
sub
add
lea
and
jno
lret
mov
push
and
popf
icebp
or
andb
sbb
mov
xchg
inc
mov
inc
or
adc
sbb
sbb
or
out
lcall
in
jno
leave
jmp
dec
roll
les
mov
push
rolb
sarl
sbb
mov
sbb
xor
inc
roll
cmpsb
cli
sbb
mov
fcmovb
shl
inc
push
clc
shlb
adc
sub
inc
or
push
push
sbb
lret
clc
fisttpll
fsubrs
xchg
imul
sub
inc
fisttpll
js
movsl
push
mov
jmp
mov
jbe
sbb
pop
aam
addb
dec
and
pop
js
movl
pminub
ret
roll
fsubs
sbb
mov
mov
movsl
mov
adc
xchg
andb
inc
sub
or
jo
jnp
jle
adcb
push
push
scas
cmp
pop
adc
mov
es
popa
xor
jno
ret
mov
or
scas
dec
scas
inc
daa
lock
cmp
jne
dec
mov
add
push
xchg
adc
ret
sbb
in
add
dec
test
in
fsubl
or
add
or
and
xor
add
movb
inc
or
push
xor
add
dec
adcb
or
int
loopne
movzbl
fisubl
mov
outsl
add
pop
inc
jg
xchg
movb
test
scas
daa
jae
shlb
cmp
mov
inc
cmp
xor
push
or
jne
adc
mov
daa
mov
jo
rorl
lock
or
dec
add
stc
add
leave
andl
pop
dec
aad
pop
xchg
into
push
mov
fistps
call
mov
sub
imul
adc
clc
cmpsb
mov
in
or
pusha
add
cmpl
loope
sub
sub
in
jg
out
fisubrl
movb
jne
outsb
adc
jb
pusha
sbb
or
mov
int3
xor
inc
bound
dec
add
dec
sub
loope
scas
movsb
mov
push
in
push
mov
popa
cltd
xor
or
dec
or
push
jno
inc
mov
lea
out
cwtl
movsb
mov
loopne
call
adcb
cld
xor
adc
adc
scas
xchg
outsb
insb
mov
jl
jg
fadds
mov
aam
testb
inc
pop
inc
loopne
add
push
cltd
call
test
xchg
mov
jl
push
rorb
add
lret
mov
test
and
call
pshufw
ss
sub
hlt
ret
cmp
insb
sbb
xchg
mov
aas
fwait
pop
sbb
inc
js
in
xchg
test
xchg
inc
jo
push
xchg
add
add
sbb
and
jnp
cwtl
push
inc
dec
and
mov
dec
add
jno
push
mov
sub
xlat
aam
add
andb
add
icebp
mov
int3
xchg
ficoml
pop
pop
dec
inc
push
dec
imull
sbbb
add
add
call
jns
mov
add
js
dec
sbb
insb
out
stos
dec
stc
add
adc
rcll
data16
jg
xlat
push
push
shr
sbb
pop
jns
or
ja
dec
inc
and
push
movsb
and
dec
dec
and
bsr
inc
inc
fadd
xchg
and
test
mov
test
xchg
outsb
decl
and
xchg
rcr
loop
into
sub
sub
adc
push
pop
fiaddl
sbb
outsb
mov
sbb
sub
lock
test
inc
adc
add
inc
cltd
cmp
inc
pop
pop
push
mov
cmp
adc
add
and
int3
ficomps
inc
cmp
inc
mov
add
jmp
sbb
jle
lea
cli
stos
in
push
cmpsl
mov
fsubl
add
loopne
loopne
dec
or
scas
popf
ljmp
jno
das
pop
mov
mov
sbb
xchg
test
and
lds
push
inc
adc
rclb
push
pop
mov
add
out
and
jnp
xchg
pusha
jnp
inc
adc
xor
add
and
and
sarl
mov
out
mov
dec
or
shlb
push
pop
adc
dec
es
and
daa
mov
or
je
pop
add
jl
mov
loop
inc
pop
push
mov
shlb
daa
jae
jl
or
cmp
or
jg
inc
add
adc
xor
addr16
inc
pop
shlb
sbb
popf
sarl
pusha
aas
cmc
mov
test
or
je
xchg
inc
and
sbbl
sub
mov
das
and
push
es
shlb
imul
in
dec
call
pushf
and
mov
repz
in
xor
or
clc
xchg
sarl
add
pop
testb
mov
stos
fisttpll
sbb
insb
dec
pop
push
dec
loope
es
in
jne
pop
jp
push
roll
ret
mov
shr
clc
aaa
js
sbb
xchg
lret
fsubrl
sub
enter
jne
push
popf
jbe
jmp
mov
jge
sbb
rol
imul
xchg
dec
or
out
fs
cmp
pop
mov
dec
inc
add
and
jp
dec
sub
lods
and
inc
or
ret
sbbl
push
loop
xchg
inc
pop
jne
adc
sub
xchg
xchg
outsl
cmp
mov
inc
dec
test
rcrb
lock
mov
cmp
push
adc
sbb
xor
dec
push
and
and
popa
inc
xlat
or
pop
mov
dec
or
jmp
sbb
popa
imul
pushl
xchg
dec
clc
jmp
cmp
dec
xchg
mov
mov
ss
and
sbb
or
mov
sbb
aas
jmp
testl
mov
and
in
pop
rolb
pop
dec
and
sarl
sub
bound
add
inc
idivb
ret
sti
push
lods
adc
jecxz
inc
and
test
xchg
sub
adc
sub
fldt
xchg
mov
inc
insl
loopne
inc
jne
cmp
and
mov
jp
add
and
xchg
inc
rclb
sbb
adc
add
sbb
add
push
add
lea
add
adc
mov
movzwl
mov
jge
pop
rol
or
push
cmp
add
sbb
cs
push
adc
sub
or
pop
inc
jmp
test
push
mov
test
mov
xor
xor
push
xchg
or
dec
jns
push
jae
pop
sarl
jmp
adc
and
or
outsb
or
mov
adc
inc
cmp
pop
or
test
sub
ret
sbb
jmp
test
sub
pop
imul
shlb
mov
push
mov
pop
or
inc
loope
or
orl
daa
int3
inc
rcll
clc
xor
scas
enter
xor
pop
sbb
add
adc
fstpt
inc
pop
lcall
nop
xchg
cmp
addb
jge
or
arpl
or
or
aaa
inc
jnp
and
icebp
pop
sbb
in
or
or
outsl
fisttps
gs
dec
and
into
cmp
xor
add
cltd
mov
cmp
sub
adc
ss
das
mov
xor
or
sub
or
sub
lds
inc
daa
and
or
add
outsb
mov
mov
dec
scas
gs
xor
cmp
mov
pushf
lcall
jb
ficomps
sbb
add
nop
in
adc
jb
inc
and
pcmpeqd
or
add
sub
sub
pop
inc
push
cld
or
popf
mov
add
add
inc
test
daa
xor
lds
mov
gs
add
jno
and
int3
movsl
das
es
cld
in
jno
add
cmp
lret
add
shll
addb
mov
sub
mov
lea
xor
add
xor
push
rcr
fmuls
insl
push
sub
mov
pop
cmpsl
les
inc
xor
mov
std
xchg
push
out
xor
sbb
sbb
cmp
or
xorb
nop
mov
rorb
ret
dec
je
gs
xchg
pop
sbb
in
sbb
cmp
adc
pop
subl
lret
popa
cld
adc
stos
add
and
mov
icebp
cmp
inc
add
jb
ret
push
incl
adc
addb
mov
das
pop
clc
mov
scas
or
mov
and
stos
or
add
mov
clc
push
jne
and
and
addr16
rclb
test
inc
or
imul
arpl
mov
mov
icebp
movsb
mov
push
loope
out
push
aam
scas
adcb
cmp
mov
push
ret
lods
mov
or
pushf
jbe
xorl
adc
push
push
arpl
xlat
xchg
js
das
cmp
loopne
sbb
call
ret
addl
aas
dec
adcl
or
subb
sbb
or
ja
add
test
inc
test
leave
push
fwait
pop
push
cmp
mov
add
sub
movsb
cmpsb
dec
xor
adc
lods
rol
xchg
xor
and
push
js
movsl
sbbl
ds
jbe
rcrl
push
in
or
sub
mov
ja
adc
push
or
mov
inc
mov
je
and
in
enter
mov
push
xor
or
fcomi
xlat
pop
icebp
pop
mov
adc
inc
pop
pop
sbb
test
xor
push
dec
xor
mov
loop
mov
jmp
inc
sub
and
pushfw
pop
imul
shlb
hlt
dec
sbb
and
lea
ss
dec
insl
andl
repz
leave
xchg
or
mov
push
icebp
xlat
sub
or
mov
insl
add
push
js
sbb
adc
xorb
ficoml
push
lock
cmpsl
or
loopne
adc
add
inc
pushf
std
mov
cmpsl
inc
mov
fidivl
xor
pop
aas
mov
filds
das
mov
and
or
cmp
push
cs
movsb
inc
push
xorb
pusha
push
or
bound
jl
pusha
rol
mov
mov
pop
enter
push
inc
out
insb
sbb
adc
rcrb
movb
sbb
mov
dec
jmp
pop
pavgw
es
fsubp
inc
dec
inc
cmp
roll
daa
pop
push
xchg
xor
sbb
add
mov
int3
gs
sbb
pusha
pop
xor
xchg
pusha
clc
enter
dec
mov
lret
jo
xchg
jmp
mov
xor
ret
sbb
dec
out
movsl
jmp
lds
xor
mov
pop
xor
and
or
pop
xor
ja
xchg
adc
dec
push
push
pop
mov
ret
push
cmp
or
or
mov
inc
adc
dec
lret
adcb
sahf
sbb
add
in
xor
pop
cmpsb
invd
sbb
dec
cmp
mov
sbb
dec
xchg
mov
sbb
pusha
call
mov
lods
xchg
ret
pop
adc
leave
and
push
pop
add
dec
nop
jb
dec
mov
fwait
jg
add
ret
jmp
adc
adc
loopne
dec
or
mov
in
lret
nopl
dec
mov
dec
adcb
adc
sbb
negl
cld
daa
bound
xor
push
jp
imul
in
aas
push
sbb
xchg
lock
shrl
shlb
sub
nop
fwait
inc
outsb
sbb
jl
add
jg
imul
movsl
adc
and
mov
ss
mov
inc
test
add
rolb
lret
jo
sarl
roll
or
loop
outsl
xchg
add
fistpl
daa
in
lss
test
inc
cmovns
or
adcb
or
pop
xchg
dec
and
movsb
inc
jle
push
mov
adc
enter
addl
andb
adc
adc
pop
xchg
orb
mov
lcall
jae
pop
stos
mov
inc
adc
test
lds
inc
sub
loope
cmpsl
mov
cltd
cmc
inc
xchg
rolb
pop
pop
test
push
dec
mov
dec
repnz
jnp
inc
or
add
lock
fmuls
movsb
test
xchg
push
dec
clc
movq
fs
push
test
rcrl
sub
fisttpll
or
out
dec
loope
fcomp
jmp
sub
cmp
sub
pop
rorl
fs
push
enter
iret
pop
jl
dec
dec
in
jae
pop
xlat
jle
inc
push
je
sbb
cmpl
push
push
push
push
sub
popa
inc
mov
push
cmp
push
or
shlb
inc
or
xchg
xor
cs
cmp
xchg
push
movups
test
sub
adc
pop
mov
or
pop
rcll
es
ret
pop
sub
or
push
cli
cmpsl
push
cmp
and
jnp
adc
lods
jp
push
cmpsl
fistl
or
pop
mov
mov
cmpsl
jl
hlt
push
and
push
aad
inc
push
jbe
dec
cmp
add
push
dec
insb
mov
fidivl
rorl
daa
int
push
xchg
xlat
int
popa
loope
loopne
stos
roll
adc
pusha
add
les
fwait
ja
pop
sbb
aaa
das
or
je
sbb
int3
sub
cwtl
xchg
mov
dec
gs
aas
pop
push
or
pop
sub
sbb
push
adc
mov
shlb
imulb
mov
scas
cmp
daa
orl
pop
mov
es
sbb
test
mov
ret
fs
fsubrs
dec
lea
or
dec
pop
pusha
or
or
pusha
sbb
cmp
lods
cmp
fsubrl
sbb
or
je
mov
aam
push
movl
loopne
and
ret
xlat
ja
sbb
add
sbb
enter
adc
pop
inc
and
in
cmc
es
mull
add
pop
push
mov
insl
in
fwait
mov
push
insb
push
mov
and
lea
mov
leave
and
mov
mov
mov
aaa
clc
lahf
pop
lcall
pop
mov
or
imul
push
adc
inc
jl
test
in
mov
or
mov
andl
mov
mov
loopne
adc
icebp
inc
push
in
lods
in
in
pop
xor
push
pop
add
imull
imul
in
dec
dec
dec
dec
xor
imul
or
push
push
fwait
shlb
pusha
mov
addr16
push
ss
add
enter
sarl
inc
jo
or
sub
xchg
repz
pusha
insb
insb
adc
lcall
jl
mov
mov
cwtl
bound
sbb
mov
push
cmpsl
movsb
dec
pop
pop
cmp
fmull
adc
lods
orb
sbb
cmpl
ja
inc
dec
pop
fnstcw
es
cmp
inc
lods
scas
orl
outsl
inc
pop
mov
dec
mov
jl
or
jle
nop
cmp
enter
data16
dec
and
xor
push
outsb
add
inc
aaa
pushl
dec
pusha
jbe
pop
mov
sbb
mov
imul
jmp
and
adc
stos
cmpsb
cmp
adc
nop
or
inc
cmp
sub
lahf
adc
lss
or
cmp
lea
shl
das
push
arpl
shll
cmpsl
inc
push
or
or
pop
inc
xor
add
mov
xchg
or
dec
jo
mov
and
sahf
mov
pop
or
xchg
adc
pusha
dec
inc
push
cmovne
pop
or
test
pop
xchg
xor
inc
jns
sbb
jbe
sarb
or
fldenv
lock
dec
add
cmp
adc
add
test
add
insl
mov
test
lea
mov
or
cmpsb
je
rcrl
aam
or
mov
add
pop
out
int3
sbb
imulb
fstpl
loopne
test
cmp
lea
add
sbb
xlat
movsb
mov
sbb
cmp
adc
add
jno
lcall
fs
push
sub
mov
inc
sub
and
sbb
jecxz
jno
add
push
dec
bound
adc
add
mov
pop
insb
rorb
add
scas
xchg
test
mov
mov
jg
xchg
add
dec
data16
sbb
jg
mov
jae
jne
cmpl
adc
mov
add
stos
jae
pop
pop
pop
outsb
lret
pop
pop
pop
movb
ss
xor
pop
add
jne
cmc
adc
push
mov
push
shrl
lcall
sub
and
jae
divb
xchg
xchg
push
loop
clc
pop
add
xorb
inc
dec
stc
imul
adc
sbb
es
shr
sbb
mov
aas
loopne
push
push
cld
cmp
or
and
jmp
movswl
cli
add
jno
inc
dec
aaa
xchg
mov
jl
xor
pop
xchg
or
dec
add
mov
pop
icebp
push
xchg
jne
and
jns
xor
cld
mov
aaa
dec
lret
mov
xor
xchg
cmp
sub
rol
movsl
addl
xor
sub
loopne
or
cmp
or
xchg
test
insb
dec
xlat
inc
das
arpl
inc
xchg
jno
mov
cmpb
sbb
mov
mov
add
test
jae
ss
dec
test
arpl
xchg
xchg
pop
cs
insb
xchg
jg
pop
pop
ja
push
shlb
adc
adc
push
fmulp
mov
lds
loope
sbb
lcall
arpl
or
xchg
inc
add
mov
or
dec
rcrl
dec
mov
and
dec
gs
dec
jmp
pop
mov
adc
insl
sbb
pop
dec
inc
sbb
cltd
jge
xor
rcrb
mov
lods
fistpl
addr16
inc
dec
pop
mov
insb
shrb
or
push
adc
or
pop
ret
inc
addl
bound
dec
sub
jl
dec
movsl
and
sub
cs
int
sub
dec
iret
mov
mov
cmp
and
jb
adc
outsl
push
or
adc
insl
aas
xor
inc
inc
push
ds
testb
sbb
push
or
or
pop
xorb
iret
sbb
xor
subl
mov
jno
cwtl
and
inc
aad
loopne
pop
loop
imul
nop
clc
adc
sub
adc
push
push
cmp
je
sbb
js
add
xchg
or
repz
and
inc
push
pop
ss
xchg
dec
push
sub
inc
aaa
push
ret
add
sub
andb
inc
sub
pop
add
fcomp
jmp
sbb
pop
mov
inc
test
add
pop
test
sub
das
mov
or
pop
cmp
mov
lock
in
push
in
push
xchg
xchg
cmp
fadds
mov
int
xchg
add
sbb
shlb
sbb
dec
pop
movsb
cmp
inc
push
cmp
lock
cmp
and
lret
dec
push
adc
jne
sub
mov
shrl
push
xor
fmulp
and
rcrb
data16
and
mov
push
movl
mov
addl
inc
fsubrs
int3
mov
popa
adc
push
or
xor
push
data16
or
xchg
sbb
jl
adc
add
xchg
inc
push
add
test
or
test
jo
add
inc
inc
js
clc
add
pop
jae
or
daa
xchg
lcall
xor
pop
add
pop
rol
push
jmp
dec
movsl
test
jg
xor
inc
add
dec
pop
push
xor
fdivr
add
adc
mov
jo
jl
pushf
test
dec
ljmp
pop
pop
xchg
dec
lret
inc
movsb
inc
ss
loope
xor
outsl
fbstp
and
xor
sbb
dec
cmp
pop
adc
cwtl
and
add
xchg
lret
push
mov
add
sbb
and
or
sarb
cmp
movsl
xchg
adc
mov
pop
pop
mov
std
fisubrl
mov
cmp
jmp
cmpl
imul
sbb
inc
insb
add
adc
sub
mov
aaa
pop
mov
cwtl
bound
add
popf
or
adc
shll
jmp
add
stos
scas
or
jns
mov
hlt
mov
ds
mov
lods
arpl
loopne
jne
adc
push
ds
mov
add
inc
shlb
das
lahf
add
push
je,pn
dec
add
sti
dec
les
lret
je
pop
jae
cmp
mov
stos
mov
cmp
cmp
inc
add
add
jmp
enter
xchg
and
outsl
rolb
loopne
dec
test
fldl
aam
sub
lret
rclb
ja
mov
lahf
lcall
or
loopne
push
mov
popa
cmp
mov
in
insb
sub
rcll
out
dec
jne
mov
sbb
lea
xchg
mov
pop
ret
and
pop
out
lods
dec
push
pop
lahf
cmp
push
adc
add
xor
and
rorb
inc
mov
push
mov
mov
jg
xchg
cmp
sbb
cmp
lods
pushl
decl
and
mov
movsb
mov
jns
dec
imul
lock
sbb
test
and
mov
mov
sub
inc
cs
mov
adc
aad
movsl
add
mov
pop
dec
and
push
pop
dec
and
push
mov
orl
adc
icebp
cmpsl
mov
lock
pusha
cmp
or
call
jecxz
movsb
pop
mov
push
xor
iret
pop
xor
movb
or
or
jl
and
enter
stc
mov
mov
mov
or
movl
hlt
and
cmp
je
or
int
lods
xchg
or
add
ss
mov
out
jo
mov
and
roll
aaa
adc
inc
cmc
fadd
dec
cwtl
jns
cmp
xchg
lock
testl
into
push
lea
sub
or
test
mov
sbb
push
cltd
es
jbe
xchg
lock
adc
push
push
cwtl
call
cmp
mov
out
ja
lea
pop
and
jmp
data16
aaa
fmull
repz
shl
jge
or
ret
lods
sahf
movsb
aad
dec
sti
dec
or
ja
fisttps
add
push
nop
inc
pop
add
and
call
xchg
add
inc
inc
fnstsw
lods
mov
or
add
dec
sbb
dec
cmpsb
popa
cmpsb
adc
xchg
ret
inc
insb
add
fs
sbb
insl
mov
push
sub
dec
cmp
addb
mov
mov
sbb
movsl
mov
cmp
add
inc
dec
xchg
xchg
pop
rol
je
sbb
test
dec
ficoml
cwtl
ret
and
push
xchg
movsl
cmp
scas
xchg
and
xlat
add
lds
std
rol
cmp
cmp
repnz
and
outsb
sbb
add
add
popa
adc
xor
inc
fbld
inc
sbb
pusha
pop
xor
dec
jae
cmp
push
sbb
or
rcl
ss
insb
inc
pop
gs
mov
push
add
xchg
add
jae
add
cs
push
cmp
call
push
int
mov
pushf
sub
inc
add
int3
jnp
fdivs
sub
sbb
fdivs
in
sbb
leave
or
xchg
xor
lahf
aam
xor
xchg
rcll
and
add
and
dec
mov
add
push
pusha
test
mov
pusha
sbb
jne
fs
add
pop
mov
lods
add
and
xorb
add
push
lock
add
xchg
sbb
jnp
and
out
push
sub
add
ret
dec
sbb
add
fs
sbb
sbb
pop
scas
test
or
sbb
mov
in
push
xchg
xor
mov
cmp
push
invlpg
ja
sbbl
cmpl
fnstsw
loop
jmp
mov
lods
lods
fs
cmc
pop
push
xchg
lock
adc
dec
adc
pop
push
add
sbb
add
xchg
push
push
and
adc
inc
std
sbb
inc
punpckhwd
xlat
cmp
add
mov
sub
xchg
dec
sub
adc
push
mov
sub
xchg
mov
daa
nop
inc
ret
mov
movsl
sub
in
inc
and
xchg
out
mov
lea
mov
add
sti
lret
push
fs
pop
orb
or
daa
mov
or
inc
shlb
js
mov
push
pop
scas
jle
xchg
sub
lock
push
aas
fsubrs
mov
mov
jne
adc
das
sbb
add
push
inc
fdivrs
dec
dec
sub
or
pop
ret
adc
xchg
xchg
out
xchg
cmpsb
js
imul
adc
cmpsb
jne
je
push
ret
in
add
jge
mov
and
push
and
sbb
js
pop
cmp
movb
xchg
mov
mov
roll
out
pop
rorl
add
xchg
mov
rolb
aaa
or
xor
xchg
out
fcoml
dec
daa
lret
adcb
les
pop
mov
adc
and
fimuls
incl
aas
jmp
imul
mov
pusha
jae
and
sbbb
mov
xchg
mov
inc
shll
xor
push
ret
cld
add
pop
ficompl
jne
inc
jmp
btc
enter
clc
xor
pop
jmp
jg
jne
daa
test
mov
sbbb
xchg
jbe
ds
lods
cltd
add
sub
je
xor
sub
push
mov
add
scas
add
fs
rol
dec
inc
add
pusha
or
ja
xchg
pop
mov
test
ret
push
cmc
push
es
cmc
test
xchg
xor
or
pop
lods
imul
xor
dec
mov
arpl
jo
or
xorb
daa
cltd
pop
insl
adc
scas
add
pop
cmp
adc
ret
push
mov
mov
mov
sub
ret
in
jg
ss
adc
add
ja
aam
or
inc
cwtl
lods
leave
imul
mov
cmp
dec
imul
sbb
lods
and
mov
fmulp
adc
gs
adc
icebp
add
mov
or
sub
rolb
sbb
cmp
ret
mov
and
add
sub
add
loop
inc
sbb
shl
xorb
loope
xor
cmp
fsts
dec
add
push
add
fbld
sub
les
fcmovnbe
adc
add
jns
addr16
movsl
add
sub
mov
sub
or
cmp
movsb
sbb
sub
xor
dec
cmpl
add
cmpsb
dec
repz
inc
shrl
ja
mov
popf
mov
popf
or
pop
mov
add
push
test
dec
push
push
ret
and
pop
cmpl
insb
pop
adc
adcb
dec
pop
or
xchg
ret
xorb
sbb
adc
js
stos
xchg
int3
data16
mov
add
enter
cmpb
jne
leave
insl
mov
in
jge
adc
mov
daa
mov
pop
and
testl
pushf
inc
dec
pop
jne
cmpsl
sub
xor
xor
push
adc
shrl
loopne
pop
inc
rol
je
mov
loop
arpl
frstor
nop
ficomps
mov
mov
mov
in
pop
xor
push
clc
mov
sbb
out
or
aaa
rcrb
fcoms
jno
add
clc
test
xchg
cmp
ja
inc
mov
cmp
lock
mov
add
inc
xbegin
iret
fldcw
push
adc
add
push
ds
test
lds
mov
loopne
inc
jl
addb
adc
push
sti
aam
lea
and
mov
test
lret
pop
pop
inc
cmpsl
jo
cmp
or
xchg
lea
mov
xor
sub
addr16
xor
mov
or
inc
dec
stos
mov
lds
lds
lods
insb
popf
add
xor
mov
insl
push
cltd
inc
cmpsb
push
das
mov
addr16
xorl
aad
mov
mov
fsubs
xor
rcll
mov
sarl
jns
and
and
xor
or
insl
adc
or
test
dec
dec
add
ljmp
js
push
mov
mov
sub
jmp
cmc
dec
adc
push
psrld
imul
lahf
jo
push
mov
sub
pusha
outsb
cmpb
xor
pop
movb
inc
xchg
add
stos
adc
cmp
sub
add
sbb
insl
jmp
faddl
lret
push
mov
adc
je
push
xchg
xchg
sub
cmp
rclb
sbb
loop
sbb
jne
fldl
jecxz
mov
sbb
in
mov
stos
nop
mov
ret
inc
push
adc
dec
sub
add
and
add
pop
addl
lar
lret
movsb
rcll
out
nop
or
pop
add
push
push
mov
sub
pop
push
adc
fisttpll
and
icebp
pop
int3
int
push
or
or
dec
orb
push
lea
xchg
mov
mov
shl
sub
push
sti
je
push
cli
lret
outsb
and
mov
adc
adc
inc
push
xchg
subb
mov
lods
xchg
push
daa
dec
push
ljmp
or
ret
mov
add
nop
add
jne
fcoms
or
mov
add
ja
jg
sub
push
xor
aad
push
inc
xchg
inc
mov
cmp
loop
mov
movsl
or
cmpsb
mov
inc
sarl
popa
sub
adc
and
add
add
scas
cltd
jne
fildll
pop
or
rorb
mov
cmp
sub
mov
sbb
dec
push
imulb
and
and
adc
sbb
popf
mov
mov
and
jg
push
cmp
and
push
xchg
mov
cltd
ret
and
inc
fisttpll
pop
mov
or
popf
enter
fists
adc
mov
sbb
test
movsl
cmpl
jmp
push
inc
xchg
push
shll
lds
jg
jmp
fnstenv
jbe
js
dec
add
push
adc
cmp
cmp
ds
lret
fcomps
in
or
push
fsubs
jne
jg
insl
or
dec
dec
adc
call
test
cmpsb
xor
jae
xor
test
adc
and
pusha
push
les
push
icebp
lahf
aad
and
dec
jnp
lock
or
mov
and
mov
imul
adc
add
cmp
cmp
mov
jecxz
xor
cwtl
inc
and
movsl
js
inc
mov
xchg
sub
adc
pop
dec
sbb
aam
mov
jl
or
adc
mov
aas
mov
sub
sbb
or
dec
fwait
jmp
mov
sbb
aaa
pop
shl
aas
xchg
cmp
add
push
negb
andl
fwait
nop
insl
push
adc
jae
inc
inc
ljmp
stos
movsb
test
fs
je
sbb
movsl
cwtl
sub
cmp
test
lods
fwait
cld
mov
adc
xchg
jp
or
mov
js
mov
or
fisubrs
push
xor
pop
sbb
js
add
jne
daa
mov
sahf
popa
sbb
adc
adc
imul
stos
test
sub
rolb
and
fcmovu
cmp
adc
sbb
pop
pusha
inc
daa
pop
sbb
sub
or
cmp
jecxz
aas
mov
sbb
jmp
mov
int3
pop
jo
or
pop
pop
rolb
stos
or
and
and
mov
cmp
ss
testb
jne
cmp
lods
lea
and
ret
mov
negb
test
daa
sub
inc
decb
cmp
ret
lahf
lret
rolb
ja
or
mov
jno
stos
adc
in
test
mov
mov
pushl
mov
mov
outsb
or
and
packssdw
sti
and
ret
andl
xor
dec
add
pop
les
lock
jne
dec
adc
mov
push
fstl
jbe
sbb
sarb
adc
shlb
andl
jnp
push
push
rcll
fwait
xchg
sbb
or
mov
mov
cld
jmp
mov
pop
mov
fisubs
push
clc
add
scas
pop
mov
dec
fs
dec
out
inc
cmp
jnp
dec
push
xor
icebp
outsl
dec
das
inc
call
adc
ret
xchg
add
mov
fidivl
xor
arpl
inc
mov
mov
sub
mov
notl
pop
outsb
shrb
jmp
fdiv
and
nop
pop
lahf
inc
mov
sbb
jmp
cmp
fwait
ja
and
notl
add
add
fcoms
rorb
mov
mov
incl
jbe
xchg
push
xor
and
js
idivb
and
xlat
jne
dec
xchg
mov
and
les
sbb
dec
or
mov
imul
test
ja
mov
mov
cmp
rorl
mov
jae
lock
lock
rcrb
sub
fsubs
cmpsl
das
call
in
push
adc
add
ja
adc
cmp
popa
popa
jnp
push
jae
sbb
lret
mov
mov
add
inc
and
lea
xchg
mov
lahf
inc
jne
aam
mov
or
xor
mov
sub
mov
mov
or
add
cmp
mov
xor
shrb
jne
in
lods
xchg
inc
pushf
test
cmp
ficompl
pop
daa
dec
mov
mov
fidivrs
inc
adc
mov
test
aas
jmp
sbb
and
xchg
ret
test
out
adc
jbe
mov
mov
cmp
ret
mov
pop
pop
aam
and
xorb
mov
les
mov
mov
int3
aad
pop
push
movsb
adcb
and
mov
or
loopne
and
bound
les
xor
cmpl
sbb
push
sbb
in
pop
dec
aaa
pop
loop
fstpt
dec
test
lods
out
xchg
test
push
faddl
outsl
mov
push
inc
ret
fs
lock
and
loopne
adc
jle
jbe
xchg
jne
jae
out
mov
les
dec
push
xchg
push
jne
outsl
and
testl
pop
push
cmpsl
cltd
xchg
cwtl
rcrb
push
ja
hlt
mov
add
xor
mov
cli
ljmp
or
adc
int
push
int3
je
or
xchg
or
jae
pusha
lds
fs
push
sub
fwait
push
add
sbb
roll
dec
adc
pop
fdivs
sbb
leave
addb
pop
out
mov
decl
add
xchg
ret
push
adcb
pop
mov
cmp
dec
push
cmc
mov
adcb
clc
pop
ja
addl
adc
jle
roll
icebp
fldenv
dec
dec
xor
js
loopne
ret
dec
mov
mov
clc
sub
and
mov
notl
dec
sub
dec
loope
sub
sbbb
roll
sbb
inc
sbb
aaa
pop
cwtl
sbb
aas
inc
lret
inc
mov
rcll
mov
xorb
jo
in
dec
fsub
add
xchg
sub
inc
pop
xchg
sbb
outsl
xchg
jno
ret
test
mov
xchg
xchg
mov
inc
and
loopne
adc
sbbl
rcll
les
movsb
jle
fwait
jo
loop
rcrb
lahf
mov
jp
adc
lahf
in
js
ljmp
ja
push
jecxz
adc
in
adc
rorl
xor
adc
or
pop
outsl
hlt
and
mov
imul
pusha
bound
rclb
sti
and
cwtl
inc
stos
xor
dec
inc
test
jmp
imul
adc
or
add
aas
mov
popa
aam
mov
xorps
cltd
xor
and
sub
addr16
lcall
shlb
add
movb
push
and
scas
repz
or
or
and
push
pop
dec
ja
cld
cmc
loope
xchg
xor
add
adc
add
xchg
cmp
cmp
pop
mov
mov
pop
inc
push
rcll
fidivs
pop
dec
adc
jp
xorb
mov
push
fmuls
pop
orl
es
daa
add
ret
adc
int
xor
xchg
adc
mov
inc
jge
fcomps
xchg
xchg
cmp
out
inc
les
cmp
imul
inc
sti
cmpb
inc
or
mov
push
popa
orl
mov
push
push
inc
lret
add
scas
hlt
mov
inc
sbb
mov
lea
add
sti
aaa
xlat
add
ja
and
subl
jne
push
xlat
mov
or
or
mov
xchg
and
pop
sbb
shl
and
adc
mov
mov
test
sbb
push
rol
xlat
xor
xor
xor
add
data16
cmpb
pop
sbb
divl
pop
mov
xchg
lcall
and
cmp
push
push
mov
andb
jmp
or
push
mov
and
jo
mov
cmpb
cmp
jg
cmp
pop
aaa
mov
loopne
in
and
sbb
fs
mov
pop
ret
imul
pop
cmpsb
jecxz
loope
jno
and
cmp
cwtl
lods
or
es
in
push
adc
dec
and
dec
ret
adc
mov
jmp
add
shrb
xor
inc
inc
lret
cmp
in
and
cmp
xchg
lds
or
sbb
or
inc
mov
jne
cli
sarb
jns
jno
iret
push
fdivl
xchg
pusha
stos
insl
push
inc
es
ret
sub
mov
sahf
push
dec
fdivrs
fwait
shlb
adc
js
movsb
lret
jnp
test
vmread
fs
cmpsb
cmp
inc
or
add
mov
std
mov
cli
mov
pop
repz
mov
mov
xchg
mov
data16
add
fsubrs
or
push
lods
fsub
leave
and
xor
cmp
or
add
jo
inc
sar
push
insl
mov
dec
pop
adc
add
push
arpl
lods
jns
jmp
ficomps
outsl
shlb
push
daa
nop
ret
and
and
sar
jb
jge,pn
rclb
filds
or
sbb
mov
fnsave
rcrb
push
pop
mov
scas
xlat
and
inc
imul
loopne
sub
dec
push
xchg
push
bndldx
lock
sbb
inc
call
adc
in
bound
fidivrs
mov
bound
mov
xchg
mov
daa
ret
lahf
adc
cmp
shll
add
sub
roll
dec
sbb
xchg
call
and
inc
inc
add
or
jno
push
push
push
jo
pop
mov
mov
fcompl
add
xor
rolb
or
fldt
pop
fsubs
dec
inc
or
dec
jo
push
xchg
and
or
or
cmp
jle
push
imul
daa
dec
jo
or
or
pop
dec
mov
cld
sub
lea
ror
out
mov
add
inc
jns
pusha
inc
xchg
adc
mov
or
stos
push
push
out
rclb
pushf
mov
cmp
mov
rcll
popa
nop
cmp
xorl
shll
les
in
out
cwtl
add
lahf
mov
lods
scas
sub
push
pop
popl
mov
subb
lods
mov
xorl
test
jo
dec
xorl
clc
jle
jmp
jo,pn
and
inc
add
mov
or
xchg
sbb
test
dec
mov
movsb
test
rol
imul
movsl
or
adc
and
inc
div
call
les
cwtl
sub
sub
aam
ficoms
fildl
sbb
push
in
push
push
sbb
les
jge
or
jo
jnp
bound
pop
mov
lea
xor
or
push
or
mov
adc
inc
imul
movsb
gs
sti
or
add
pop
aam
test
and
mov
nop
push
das
mov
cmp
adc
rclb
les
lahf
ja
and
adc
hlt
mov
sti
pop
add
sub
cwtl
cmpsl
aam
bswap
or
adc
xchg
dec
fsubrl
or
jo
push
shrb
fimull
or
pop
jle
pop
adc
addl
or
xchg
jnp
jmp
pop
cmp
mov
pop
in
sbb
sbb
dec
inc
jne
test
lea
pusha
xor
adc
fs
lock
cmp
orb
loop
es
lahf
in
sub
mov
shrb
sbb
imul
scas
leave
call
cmp
sbb
pusha
in
or
jle
or
cmp
add
or
mov
pop
xorb
lock
pop
mov
stos
rorl
push
sbb
ljmp
mov
xchg
jle
add
sbb
push
inc
mov
jecxz
les
test
mov
dec
xor
inc
ret
jno
je
pop
inc
xchg
adc
sbb
mov
sub
adc
mov
rcrl
inc
cmp
setae
call
es
xchg
add
movsb
xchg
lock
idivl
jecxz
rcrb
jecxz
lret
leave
icebp
jno
push
add
jno
sahf
mov
decl
outsb
inc
cmp
je
test
aaa
lds
push
add
imul
dec
gs
inc
sbb
into
test
ss
sub
jnp
pop
add
sub
mov
addr16
push
mov
loopne
nop
lret
orb
call
ja
rorl
nop
jo
in
push
push
add
or
xor
push
jb
cmpsb
leave
nop
fisubrs
je
gs
stos
and
ss
cmp
jb
bound
or
add
adc
and
movl
mov
ret
mov
sub
addr16
push
ret
dec
mov
pop
or
xor
movb
lods
adc
test
pop
cmp
mov
ret
mov
lods
add
xorb
or
add
push
inc
rol
push
sahf
test
or
add
push
push
repz
mov
inc
into
and
lea
push
push
dec
fisubl
mov
int
xchg
sbb
mov
and
mov
cmp
inc
push
dec
pop
inc
mov
or
jmp
das
and
sete
pop
mov
xor
ds
and
push
push
sbb
sub
jno
aam
adc
mov
sub
xchg
push
fldenv
or
push
pop
lret
add
popa
mov
pop
pop
nop
adcb
mov
mov
movb
outsl
push
sub
stos
xchg
aam
fiadds
popa
pop
std
push
dec
push
inc
pop
sbb
or
adc
shll
adc
sbb
xor
mov
popa
pop
mov
sbb
dec
lock
orb
and
inc
inc
or
ss
add
jae
rol
mov
or
inc
adc
mov
outsl
data16
lods
mov
sbb
or
lcall
adc
xlat
sub
sbb
cmp
jl
add
jg
or
add
add
iret
sbb
imul
test
dec
adc
jge
in
mov
inc
jne
movb
xor
sub
adc
and
je
adc
nop/reserved
imul
adc
mov
add
shll
adc
jl
xor
sbb
inc
pop
ret
or
adc
in
xor
jle
jo
int3
add
mov
rorb
add
ss
pop
das
test
mov
sti
dec
lahf
adcb
dec
inc
and
adc
sbb
rcll
push
outsl
xor
and
gs
mov
fs
fs
and
adc
add
movsl
mov
andl
mov
mov
inc
sub
xlat
pop
mov
push
and
inc
gs
addl
mov
xchg
adc
shrb
dec
dec
pop
pop
add
mov
data16
dec
or
adc
or
jmp
lret
pop
sub
fbstp
add
add
jo
add
pushf
and
pop
insb
out
ret
jp
imul
out
inc
cmove
push
push
pop
lcall
loope
mov
push
mov
imul
cs
sub
scas
pop
in
adc
lock
and
push
jbe
add
xchg
and
inc
aam
test
roll
xlat
add
mov
cmp
inc
pop
andl
or
nop
lahf
pop
sbb
lock
shrb
lea
xchg
sub
or
cs
das
imul
adc
pop
mov
sub
sbb
add
or
mov
add
out
push
push
dec
test
or
or
mov
pop
aad
in
sbb
test
dec
add
mov
mov
ror
xor
aam
out
mov
int
test
inc
subb
and
je
mov
nop
ja
inc
pop
dec
std
andb
mov
pop
inc
or
hlt
popa
imul
adc
push
dec
xor
scas
loope
or
cmovs
cmp
adc
nop
cmc
pusha
add
add
adc
xor
imul
in
ror
push
cmp
in
in
sub
and
xchg
and
test
adc
inc
lidtl
and
aad
adc
xor
int
cmp
dec
xor
rcrb
xor
int
and
and
mov
adc
ficomps
sub
fists
or
rolb
sub
stos
or
js
and
mov
cld
fisttpll
and
les
mov
and
xchg
mov
add
or
xchg
dec
jo
push
xchg
es
adc
testl
loop
and
enter
loopne
cwtl
sbb
xchg
lods
sub
out
and
inc
jne
test
pop
rorb
sub
pop
sub
pop
or
pop
call
gs
int3
push
aam
out
add
mov
add
add
dec
jae
or
in
adcb
mov
outsb
jle
jecxz
push
mov
clc
shll
jle
add
into
dec
mov
xchg
push
cmp
xchg
dec
add
jb
enter
les
inc
mov
push
fiaddl
add
ljmp
jne
pop
rorb
jno
push
gs
je
aas
dec
sbb
or
and
lahf
test
mov
push
lret
jne
ljmp
push
ja
adc
arpl
xlat
sub
add
notl
cmp
sub
lahf
shlb
sbb
hlt
jge
xchg
je
or
ret
push
xor
inc
push
xchg
push
push
rclb
inc
inc
idivb
int3
pop
adc
xchg
cwtl
adc
jne
lret
pop
mov
movl
xor
pop
inc
call
pop
and
and
rcl
mov
sub
add
lahf
in
imul
sbb
jl
sub
mov
adc
dec
add
fidivrs
add
add
arpl
jae
or
in
jecxz
loop
clc
ljmp
or
sub
lock
loope
imul
add
or
icebp
fdivs
push
in
inc
dec
clc
inc
push
sbb
jno
sbb
xor
xor
int3
sbb
imul
pop
inc
nop
ja
popa
inc
or
mov
and
out
and
pop
loopne
shlb
sbbb
ss
jle
and
mov
fmuls
xchg
lea
notb
xorl
lock
ds
loopne
jb
aad
insb
pop
aas
xor
shrb
scas
inc
mov
rorl
imul
shlb
add
addb
in
push
sbbb
stc
push
adc
dec
jge
into
inc
pop
or
or
sbb
dec
pop
inc
xlat
adc
addr16
cwtl
cmp
movb
or
sbb
fidivrs
es
push
std
insl
xchg
cmc
jecxz
inc
pop
sbb
xchg
lock
xor
xlat
daa
mov
add
push
out
cmp
lods
sub
mov
lock
push
out
mov
jl
adc
or
jmp
outsb
and
sbb
sub
loopne
fidivrl
cld
mov
pop
mov
mov
jnp
adc
or
pusha
mov
push
andb
hlt
ja
testl
sbb
pop
add
pop
pop
mov
enter
push
add
push
jmp
xchg
xor
in
jo
movsb
clc
mov
nop
and
mov
lods
add
jmp
mov
sbb
dec
cmpl
inc
lcall
std
jb
imul
shrb
mul
cmp
lea
mov
sub
iret
pop
sbb
fs
cmc
lret
xchg
cltd
cwtl
sbb
xor
mov
jnp
pop
pop
cmc
pop
mov
xlat
sbb
outsb
sti
fwait
xchg
ss
fnstcw
aam
dec
mov
sub
dec
add
aad
mov
loopne
arpl
inc
adc
and
sahf
pushl
push
movsb
push
sbb
into
pusha
cmp
and
test
and
addr16
les
or
cmp
jge
rorb
dec
or
xor
inc
and
sbb
adc
inc
clc
cs
jne
addb
mov
enter
add
stos
inc
scas
cmp
and
popa
inc
jo
xchg
movsb
adcl
js
lods
inc
lea
or
inc
ret
das
jns
xchg
add
sbb
push
and
adc
inc
lcall
cmp
lock
cmp
add
js
and
sahf
inc
bound
push
pusha
sbb
push
and
push
call
mov
mov
or
xor
je
jo
sbbb
loop
shll
cmp
jne
je
imul
inc
ret
shll
scas
add
or
jge
mov
aaa
push
loopne
or
xchg
and
sbb
cmp
jge
imul
fsubrs
lcall
pop
jmp
arpl
shlb
jl
cltd
ss
inc
aad
xor
pusha
movd
jmp
lds
and
xlat
cmp
mov
fmul
push
jmp
sub
inc
in
cwtl
test
jl
rorl
jl
sub
inc
into
mov
mov
or
add
mov
mov
insb
pushl
jo
add
cmp
popf
jbe
xchg
add
or
sbb
xor
add
or
and
rcll
pushf
xchg
rcrl
cmpb
das
xchg
fsubrl
push
outsb
enter
arpl
cmp
adc
sbb
push
arpl
pop
mov
or
adc
rol
addl
lret
mov
cmp
add
popf
loopne
pop
push
lock
and
dec
mov
popa
shll
outsb
imul
cmp
dec
mov
xor
cltd
and
pop
dec
mov
test
and
fdivl
push
cmp
jmp
scas
xchg
outsb
imul
add
fcoml
or
pop
and
popa
sub
and
addb
sub
fiadds
js
sbb
push
push
mov
cltd
nop
adc
inc
cmp
xlat
or
or
mov
jmp
arpl
ret
pusha
dec
imul
or
addb
adc
push
mov
vxorps
inc
iret
test
pop
inc
xchg
cmpsb
sub
cwtl
fs
data16
inc
inc
mov
xor
and
dec
fnstcw
add
pop
or
inc
insb
pop
daa
sbb
cmp
inc
push
fmuls
sub
aaa
lahf
movsl
add
mov
out
xor
xor
xor
push
sub
fdivrs
popa
incb
in
js
ja
sub
insb
xor
inc
mov
adc
adc
ja
mov
mov
cmp
daa
and
minps
fwait
ja
cmp
das
or
jmp
test
lret
addr16
jnp
lods
test
push
or
inc
xor
fs
in
bound
cs
fbld
push
andb
mov
xchg
movsb
push
dec
daa
add
lods
dec
daa
ds
out
jne
outsl
bound
mov
add
and
mull
js
ja
push
data16
fsubrl
insl
adc
jecxz
js
or
fs
sub
sbb
pop
mov
inc
xor
pusha
or
cmp
popa
sbb
jle
and
sub
sub
adc
add
push
jbe
pop
add
loop
or
into
inc
arpl
jle
dec
pop
sbbb
dec
dec
inc
push
mov
push
mov
fistpll
cmp
inc
push
pushl
icebp
inc
add
sahf
dec
xor
int
mov
or
int3
add
pop
mov
adc
sub
imul
xor
dec
loope
jae
sti
lea
es
xchg
pop
pop
or
dec
clc
sub
xchg
or
mov
xchg
push
inc
mov
mov
jg
cmpsb
xchg
jo
mov
push
push
push
dec
frstor
ret
icebp
mov
pop
adc
xchg
insb
push
add
push
js
or
sub
mov
add
ror
movl
mov
cmp
adc
outsl
cmpl
sbb
sbb
add
lret
mov
int
inc
lret
add
mov
loop
rorl
test
xchg
add
test
inc
jmp
mov
scas
test
and
fldl
dec
jne
mov
sub
je
xor
jb
adc
sbb
add
or
pop
lods
xor
pushf
jbe
ficoml
jl
cli
sbb
mov
push
and
xor
sti
scas
mov
setl
mov
add
mov
mov
or
mov
pop
mov
sub
jb
dec
pushf
mov
fmulp
mov
xchg
aam
mov
xor
inc
fidivrl
fidivrl
jg
rorb
lds
adc
imul
scas
fistps
adc
repnz
faddl
cmp
or
mov
and
inc
das
bound
dec
add
es
inc
or
or
test
loopne
insb
cmp
push
sbb
outsb
and
jg
negl
addb
add
jl
lea
add
lods
xchg
ljmp
pop
popf
jp
mov
enter
mov
arpl
movsb
xor
clc
ss
pop
xor
lods
push
push
and
pusha
lds
cmc
pop
cmp
push
xor
jle
sub
sub
fdivs
lock
test
mov
or
or
insb
iret
sub
pop
and
push
dec
add
cmp
leave
adc
testb
negb
es
das
sahf
push
xchg
and
adc
subb
push
push
or
mov
pop
loope
push
pop
mov
stos
ret
and
pop
xor
lahf
mov
cmp
dec
dec
andl
sub
es
movsl
lcall
sub
ret
or
iret
pop
ret
mov
in
lret
ja
pop
add
bound
fnstsw
or
shrb
repnz
das
push
push
sub
add
aas
sbb
shlb
pop
add
orb
jle
inc
mov
aad
ds
or
pusha
roll
inc
or
cmp
cs
fs
or
lret
mov
pop
sub
mov
cmp
push
inc
mov
push
or
stc
inc
adc
test
roll
rclb
inc
mov
je
and
mov
or
enter
daa
bound
dec
insb
mov
push
mov
out
mov
test
pop
adc
lea
fadds
data16
negl
mov
call
sbb
push
loope
je
inc
imul
cld
dec
pop
mov
cli
push
rclb
cmp
xor
movsb
mov
push
lock
mov
insb
cmp
dec
in
jbe
adc
xchg
add
mov
sub
andps
test
rclb
adc
push
movsb
xor
mov
adc
fldl
pusha
or
and
pop
call
lea
jecxz
dec
mov
adc
push
mov
shll
mov
les
mov
jo
push
lds
ja
lret
gs
dec
loopne
test
subb
fiadds
push
pop
gs
insb
loopne
mov
dec
cmp
jne
cmp
add
mov
push
fisubrl
mov
fucom
mov
sbb
pop
frstor
fnstsw
scas
add
les
push
adc
jge
sti
loopne
or
clc
pop
rcll
xchg
call
or
loop
insb
loopne
jo
insb
xlat
scas
sub
adcl
out
adc
inc
and
xor
mov
mov
nop
test
cmpsl
adc
xchg
or
xor
push
and
and
enter
push
push
adc
insb
sub
mov
jo
sub
decb
xchg
lret
jl
add
add
in
pop
data16
and
push
and
sahf
aaa
dec
mov
dec
ffree
push
aas
inc
stos
jnp
loop
shll
stos
jbe
test
ret
setnp
push
add
pop
push
jo
mov
pop
jne
inc
andl
mov
dec
jg
push
jnp
or
sbb
pop
or
adcl
dec
adc
rcll
dec
push
push
adc
test
lcall
rorb
and
adc
add
sbb
in
or
mov
in
sub
mov
loopne
push
mov
hlt
push
loopne
testl
test
jge
dec
mov
rolb
mov
call
pop
nop
out
test
int
mov
dec
fdivs
adc
ja
fdivr
adc
clc
xchg
xor
xor
push
and
clc
sub
cmp
cmp
jle
adc
adc
sbbl
adc
or
lock
in
or
enter
xor
push
or
dec
and
shrb
orb
xor
or
xor
sub
icebp
scas
cmp
je
push
inc
jae
xchg
aad
mov
mov
mov
mov
add
adc
xchg
or
roll
les
enter
add
lcall
add
call
idivl
inc
cli
or
and
xchg
xor
mov
rorb
pavgb
inc
add
ficomps
xchg
xchg
mov
cmp
cmpl
rclb
loopne
fdivl
rol
loopne
inc
shr
imul
pusha
push
push
push
ljmp
bound
or
xchg
or
dec
data16
adc
push
fcomi
or
add
decb
xor
lock
cmp
jmp
push
cmpsb
imul
into
mov
jge
bound
and
mov
or
mov
push
xchg
jle
or
jecxz
jne
mov
sar
xchg
mov
in
add
fs
test
jne
stos
dec
mov
mov
jmp
or
push
push
pop
push
and
fdivl
adcl
rcrb
lea
adc
mov
andb
in
imul
xor
pusha
pop
adc
test
sbb
iret
mov
or
sbb
pop
mov
pop
iret
ljmp
sub
in
paddw
add
fbld
rorb
push
loope
mov
pop
call
mov
gs
mov
add
les
push
lcall
push
test
pusha
push
vunpckhps
adc
rolb
and
popa
ret
cwtl
in
mov
push
inc
push
cwtl
sub
push
sbb
divb
dec
or
pop
scas
insb
and
xlat
and
push
loope
mov
fiadds
add
les
jo
add
movsb
push
inc
cmp
div
enter
inc
mov
lods
jo
jle
dec
rcrl
adc
movnti
cld
dec
or
pop
pop
add
push
outsl
cmpl
pushf
in
daa
nop
push
sbb
roll
sbb
insl
dec
pop
adc
out
xchg
adc
stc
repz
test
push
lea
stos
repnz
out
xchg
js
jnp
mov
push
mov
dec
add
out
mov
xor
dec
das
inc
xchg
adc
dec
cmp
push
jmp
outsl
or
push
add
clc
sbb
mov
hlt
pusha
orb
lock
sarl
sbb
fidivl
add
and
push
sbb
mov
sbb
lahf
or
or
test
dec
and
mov
push
or
mov
js
lcall
lcall
ja
pop
movb
or
adc
add
fcmovu
rol
and
push
push
add
jmp
push
or
push
mov
add
and
aam
jg
ja
push
inc
dec
jne
mov
aam
push
lods
lock
cld
add
or
sub
stc
xor
pop
cmpsb
push
or
loopne
out
add
or
or
dec
fsubrs
push
outsb
push
push
leave
je
or
sub
fstpl
push
and
add
sbb
pop
pop
adc
add
jmp
and
sbb
xor
xchg
aam
mov
sub
push
cmp
add
shlb
mov
fstpt
mov
pop
loope,pt
out
in
mov
mov
pop
pop
daa
fnstcw
pop
fisttpll
push
fildll
daa
loop
sbb
mov
cmp
xchg
test
mov
dec
add
jge
xchg
xor
lock
outsb
push
mov
adc
mov
andl
or
jnp
and
xor
mov
mov
mov
push
testb
inc
xchg
fists
jo
pop
push
scas
sarb
inc
sahf
or
adc
aas
sbb
movb
mov
xchg
mov
mov
mov
jmp
mov
inc
mov
pusha
aaa
push
xchg
pop
pushf
sbb
dec
ja
jbe
or
mov
push
loop
or
nop
mov
inc
ret
add
dec
mov
push
int
mov
pop
rcll
jp
dec
xchg
fidivs
nop
xor
gs
mov
adc
mov
lods
jecxz
xchg
js
and
jne
mov
data16
dec
xorb
dec
pop
mov
push
push
cwtl
or
add
adc
or
aas
mov
push
jne
jne
rcll
and
jg
adc
cmp
mov
cmpsb
fdivl
adc
dec
xor
punpcklbw
les
lods
and
orl
fwait
inc
jecxz
inc
and
fcompl
mov
or
and
jg
idivl
hlt
adc
loopne
push
mov
inc
or
inc
bound
fdivr
push
and
sub
inc
jecxz
pop
leave
repz
enter
insb
xchg
mov
in
push
dec
mov
lret
xchg
outsl
inc
es
pop
jg
pop
loop
adc
js
xor
sbb
add
mov
inc
les
mov
sbbb
xchg
cmp
adc
lret
test
sub
sbb
and
daa
mov
mov
insb
adc
mov
dec
cltd
push
pop
dec
sub
xchg
pushf
out
xor
add
aas
mov
push
movsb
cmpsl
sbb
inc
nop
dec
push
jp
push
inc
bound
cmp
add
pop
ret
outsb
cmp
push
sub
inc
and
and
add
jnp
mov
test
iret
stos
dec
inc
mov
fstpt
add
cli
add
jl
jo
ja
ret
or
adc
add
and
inc
add
aad
add
mov
xor
movsb
enter
shlb
push
or
pop
mov
movsl
inc
clc
stos
sub
nop
loope
add
ret
and
fs
cmp
inc
mov
fiaddl
or
cwtl
push
inc
and
imul
sbb
or
jbe
mov
scas
lcall
stc
or
dec
andb
xor
scas
in
adc
inc
dec
in
aam
or
int3
add
pop
in
xchg
jmp
dec
xor
mov
push
mov
insb
movsb
punpckldq
es
lret
add
lods
add
insb
cmpsl
push
and
iret
sbb
mov
aad
push
xor
test
fisttpl
and
or
aaa
xor
sub
or
sbb
mov
rcll
mov
jnp
int3
fsubr
fbstp
ret
ljmp
inc
aam
jge
push
mov
nop
pop
cmp
outsl
xchg
mov
mov
inc
sbb
shlb
cmp
pushf
or
sbb
nop
or
add
mov
adc
mov
push
adc
bound
adc
push
adc
andb
mov
dec
dec
xor
xchg
sbb
mov
add
add
lock
fbld
jbe
jle
pop
or
inc
pop
rcr
sub
pop
movsl
xchg
sub
adc
pusha
inc
loopne
push
nop
or
call
data16
adc
ss
punpcklwd
in
mov
cmp
add
mov
sbb
imul
or
xor
mov
add
aam
pop
das
mov
addr16
ret
cld
dec
and
sbb
pusha
in
les
sbb
mov
dec
sbb
pop
enter
inc
mov
lcall
fbstp
test
cltd
pop
push
adc
ss
hlt
mov
rolb
xor
lods
lods
insl
lods
jns
jg
movsb
inc
ret
faddl
test
mov
test
cmp
fs
mov
xor
cmp
cmpsl
inc
lcall
ffree
fnstenv
es
add
aad
inc
adc
test
add
loop
lcall
and
aas
or
sub
push
or
nop
popf
jb
inc
popa
adc
pop
mov
mov
mov
add
pusha
movsb
das
cmp
mov
pop
popf
sbb
clc
cwtl
xor
shlb
jo
add
or
mov
xchg
sub
cmc
sub
ss
dec
loope
out
and
dec
jecxz
pop
incl
test
icebp
aam
and
les
xchg
dec
cmpsb
arpl
mov
icebp
ljmp
pop
add
leave
enter
loope
mov
rcl
add
inc
and
mov
outsb
imul
xor
or
cmp
cmp
sbb
js
js
xor
nop
sbb
cmp
sub
lods
pop
push
in
or
add
clc
sbb
fs
imul
mov
pop
aaa
das
sub
aaa
jo
jae
add
sub
pop
push
push
test
cmpsl
push
add
push
daa
cmpl
push
dec
lea
inc
inc
cmp
and
mov
imul
pop
sahf
out
es
mov
lods
out
jno
add
xor
rcrb
add
aas
or
and
adc
andb
xor
pop
sub
or
add
fsubrs
in
sub
fldenv
mov
pop
loopne
lahf
shlb
xor
arpl
sbb
xor
push
mov
popa
adc
pop
sub
aam
or
call
add
xor
push
push
pop
insb
mov
jecxz
hlt
out
std
fsubs
inc
push
stc
aam
les
dec
inc
jecxz
cwtl
adc
sbb
mov
fcomps
jb
orl
insl
pop
jb
lcall
xchg
sub
inc
and
shrb
hlt
int3
pop
push
pop
fcomps
jg
or
shrb
test
jge
dec
sbb
lea
inc
fldenv
inc
shlb
jmp
getsec
stc
mov
fcom
sbb
and
mov
sub
pop
mov
mov
sub
ds
int3
dec
pop
push
fmull
xor
cmp
das
mov
jns
mov
cmpb
cwtl
add
mov
mov
adc
mov
mov
adc
addl
sti
enter
lea
xlat
jl
mov
xor
cmp
sub
ret
dec
jle
add
outsl
out
nop
xor
adc
enter
adc
sbb
jmp
pushl
movsb
sarb
push
bound
sbb
lock
pushl
lea
fs
adc
and
mov
insb
mov
sub
cmp
mov
pushf
fsubs
inc
cwtl
jge
shlb
aam
pop
cld
dec
call
add
lret
das
cmp
add
adc
cmp
add
mov
fdivl
sbb
sbb
mov
movsb
mov
and
inc
jno
dec
sarl
cltd
mov
pusha
jno
xchg
ret
pop
pop
mov
inc
sbb
repz
and
push
inc
push
rcrb
jae
imul
sti
insl
push
insl
dec
mov
rorl
cmpsl
das
adc
imul
popa
sbb
pop
ret
das
mov
pusha
pop
imul
ja
cmc
sbb
sub
jmp
test
in
add
je
inc
add
cmp
rol
dec
fstps
cs
cld
lcall
dec
testl
inc
add
sbb
sub
int3
pop
lods
mov
push
stos
mov
stc
jne
jbe
les
int3
push
push
cmpsl
fdivl
jno
cwtl
mov
sbb
jb
lock
mov
push
add
dec
push
test
add
push
jae
xchg
ljmp
push
pushf
mov
mov
mov
mov
dec
les
nop
in
inc
jg
aaa
leave
ja
mov
movsb
ret
and
in
sarl
rolb
aas
sarb
jp
jb
xchg
cs
dec
mov
enter
mov
sti
fidivrl
pusha
hlt
cwtl
push
pop
arpl
leave
int
iret
dec
jns
dec
inc
imul
ficoms
cmpsl
in
push
sbb
cs
dec
push
lcall
mov
pushf
sbb
mov
jl
or
push
mov
inc
negb
cs
in
lock
xor
mov
mov
insb
mov
mov
mov
outsb
and
mov
lahf
in
cmpsb
das
inc
cmpsl
scas
push
loop
insl
fldcw
and
and
sbb
push
pop
mov
push
and
movsb
push
les
stc
icebp
push
call
addr16
add
xchg
lods
daa
les
add
bound
fcomps
mov
and
cmp
cmpsl
push
daa
rorl
das
add
inc
push
das
and
sub
mov
sbb
sub
jg
mov
add
or
test
mov
mov
adc
and
clc
test
inc
ljmp
rcrb
xchg
mov
insb
test
stos
mov
sub
push
dec
out
sahf
out
sbbb
in
adc
xor
xchg
test
js
push
pushf
idivb
jns
mov
enter
push
test
pop
andl
testb
adcb
jo
jns
cmp
adc
jl
push
sbb
cmp
call
and
lahf
inc
push
mov
lahf
fistpll
sbbb
daa
cld
add
cmp
adc
test
jg
xchg
and
inc
repnz
out
fcoms
adc
and
lock
aad
rcrl
sahf
push
enter
fdivs
flds
lock
sarl
xor
push
mov
imull
push
cwtl
xor
scas
push
pop
loope
imul
dec
jecxz
aam
in
shlb
in
mov
out
loopne
and
mov
push
push
pop
je
shl
imul
fs
ja
pop
dec
push
sbb
rorl
cld
in
mov
icebp
test
and
or
insb
sti
fdivr
jbe
push
scas
dec
jns
add
scas
inc
xor
ds
lds
mov
mov
adcl
and
ljmp
fimull
sub
data16
dec
ret
pop
add
outsb
inc
test
lss
push
rolb
sbb
sti
data16
lcall
data16
cmp
out
roll
mov
cmp
jl
jg
cmp
sti
out
imul
cmpb
sarl
push
hlt
cmp
push
jl
cmpsl
jge
cmp
push
nop
inc
push
call
push
sub
xor
add
in
cs
dec
leave
jbe
mov
fistl
pop
adc
ss
cs
ja
inc
ss
hlt
data16
add
fdivl
jbe
rep
ss
ja
jp
jl
jge
int
stc
outsb
int3
subl
sub
dec
repz
mov
xchg
adcl
xchg
out
xchg
xor
out
mov
incb
dec
xchg
xor
stc
adc
cwtl
lock
jnp
mov
outsl
shlb
fidivl
je
cwtl
aam
aaa
inc
int
fwait
mov
ss
push
mov
cmp
xor
push
lret
outsl
jo
into
scas
call
push
sbb
inc
ss
das
push
pop
ja
subb
out
push
addl
push
push
xchg
into
cmpsl
mov
negb
lods
inc
rorb
dec
dec
fadd
pop
mov
sub
xor
mov
push
ret
fbld
push
push
test
sub
pop
sub
ds
pop
sbb
or
mov
pop
ret
and
inc
lods
out
fdivs
xchg
push
aas
orb
or
rcr
cmp
sbb
xchg
lock
add
pop
inc
pop
jo
mov
aas
or
dec
add
pop
cmpsl
sbb
nop
sub
hlt
jl
inc
push
mov
movsb
mov
andb
shr
add
dec
dec
or
cmp
push
adc
insb
ds
push
clc
fs
pushf
data16
dec
cli
add
sub
pushf
adc
push
mov
into
testb
add
inc
or
or
xor
hlt
push
test
jl
sbb
loop
mov
out
addb
sahf
mov
push
inc
std
push
add
sub
inc
dec
clc
dec
out
pop
fimuls
jns
pop
cmp
hlt
fmul
xchg
push
daa
sbb
ret
rolb
xorl
popf
popf
std
and
mov
inc
mov
bsf
cmpsl
stc
cmp
cs
push
push
rcr
jns
pushf
aam
xlat
into
repz
jo
mov
add
cmp
outsl
and
xchg
jecxz
pop
pop
andb
andps
dec
sbb
and
inc
and
cmp
imul
call
pop
and
out
fstpt
sti
mov
sub
xor
sbb
mov
sti
xor
js
push
pushf
aaa
cmp
jl
int
stc
pop
cmp
insb
cmp
movsb
or
in
jge
cmp
cmp
dec
pusha
aas
out
inc
sub
push
shlb
sarl
pop
ss
idivl
aaa
in
je
push
test
adc
jbe
int
jns
test
add
and
nop
lods
repz
jl
shlb
xchg
mov
mov
or
pop
cld
push
adcb
pop
cltd
inc
lods
fwait
inc
fs
sub
sarb
movsl
je
xchg
arpl
sbb
orb
add
xchg
push
jo
repz
cwtl
es
push
cld
inc
xchg
inc
jge
out
push
rclb
sub
and
dec
repz
cs
sar
xchg
mov
lcall
lcall
and
mov
test
cmpsb
sbb
mov
sti
into
mov
push
and
push
xor
aas
call
push
inc
xlat
push
je
cmp
subb
loopne
fxch
cmp
mov
inc
mov
xlat
dec
pop
outsl
and
les
enter
xlat
or
outsl
dec
cld
push
sub
push
add
push
add
add
pop
mov
add
outsb
and
je
adc
cmpsl
dec
or
xchg
test
fbstp
adcl
pop
add
sub
iret
pop
push
les
sahf
cmpsl
stc
push
sbb
dec
xchg
test
stc
cmp
repz
xor
add
dec
repz
push
sub
movsb
mov
pusha
and
xchg
and
jge
jbe
xlat
pusha
sub
pushf
push
cld
push
sbb
fstpt
cmpsb
pop
sub
push
je
shlb
int3
dec
pop
testb
lahf
xlat
jo
lods
and
push
call
push
adc
add
std
xor
pop
push
add
pusha
loopne
inc
xlat
insl
adc
xor
orl
nop
lock
data16
imul
push
pusha
imul
sbb
jo
pop
add
negl
es
push
xor
sarb
jge
gs
pushw
call
adc
jp
add
cmp
lcall
push
mov
sarl
lods
aam
pop
test
adc
or
out
or
xchg
push
call
xor
out
clc
adc
xor
xor
and
inc
fadds
out
imul
mov
test
xchg
add
or
pop
in
mov
mov
aam
hlt
movntq
push
push
rorl
xlat
hlt
daa
add
iret
bound
popa
dec
mov
filds
push
add
in
cmc
sbb
add
add
rolb
or
push
xor
rol
popl
and
and
or
jae
or
jae
adc
repnz
or
popa
arpl
jb
push
push
dec
jae
insl
cmp
mov
sbbl
or
xchg
cmpsb
gs
test
scas
adc
or
mov
insb
in
inc
out
test
push
inc
ja
jo
pop
push
js
adc
mov
add
inc
push
push
inc
sbb
and
pop
sbb
jmp
fisttpl
sub
popa
inc
insb
addr16
or
push
fs
cmp
sub
sbb
pop
xchg
or
pusha
add
adc
push
insb
mov
add
mov
push
dec
movsl
push
pop
pop
add
orl
pop
mov
sbb
or
ret
or
mov
add
push
mov
mov
and
jo
jl
adc
popf
xchg
outsb
xor
out
jbe
rol
outsb
or
pop
bound
aaa
stos
inc
sub
imul
stc
or
pop
push
or
nop
add
jae
or
cs
sub
dec
bound
lret
add
jmp
fs
push
inc
add
insl
inc
jo
hlt
and
aas
push
push
xlat
mov
inc
outsb
xor
push
mov
mov
or
sub
addl
or
lock
sub
lods
rol
ss
mov
push
adc
dec
xchg
adc
pop
shr
jle
adc
add
pushw
pusha
jg
xchg
out
mov
adc
mov
mov
adc
mov
ja
adc
or
sarb
aam
mov
add
test
cmp
ds
sahf
push
dec
fdivl
and
or
sbb
test
shll
insb
cltd
and
leave
mov
movsl
dec
into
cmpsl
pop
jno
lods
jae
mov
out
mov
lods
push
dec
mov
cmpb
sbb
jecxz
jo
mov
jo
pop
cwtl
push
in
jns
pusha
sub
and
push
mov
in
cmpsb
hlt
test
push
popa
jno
push
add
out
push
add
clc
es
test
sub
inc
jns
dec
add
jnp
add
mov
out
mov
mov
test
sbb
sub
push
sub
mov
xor
sub
sub
mov
adc
mov
inc
sbb
mov
dec
in
cmp
jmp
fdiv
mov
test
or
in
and
fisttps
in
xchg
xchg
jge
rclb
jo
pop
pop
push
lahf
or
out
dec
sbbl
push
xchg
aam
aaa
mov
movsl
push
sub
xor
cmp
pusha
and
xor
nop
xlat
enter
data16
mov
add
pushf
andb
pushf
mov
mov
cmpsl
mov
push
jl
dec
mov
out
int3
mov
push
add
pop
pop
movsl
mov
inc
mov
in
test
movsb
sbb
adc
aam
mov
cmpsl
push
es
adc
pop
cmpsl
repnz
sahf
int3
cmp
cmp
dec
add
test
adc
add
inc
fcmovnu
frndint
bound
cmovo
add
add
push
add
add
add
or
push
pop
adc
adc
daa
dec
sahf
cmp
or
or
or
repnz
xchg
or
and
dec
sahf
cmp
and
and
adc
adc
leave
xchg
daa
sub
sahf
cmp
repnz
xor
xor
ss
xchg
daa
dec
cmp
sbb
shl
pop
push
adc
loopne
loop
inc
ds
jl
jo
add
jp
shlb
idiv
sub
testl
xor
and
clc
clc
xor
and
and
and
clc
orl
clc
clc
clc
clc
or
enter
clc
xor
and
and
and
clc
xchg
daa
mov
sub
repnz
inc
cmp
dec
ds
aas
add
cmp
pop
push
push
add
push
or
push
hlt
add
push
push
hlt
push
xchg
daa
outsl
sub
cmp
aas
add
xchg
fisttps
pop
enter
lock
mov
lock
xchg
lock
inc
stc
dec
lods
add
in
jne
mov
cld
es
int
in
outsl
add
mov
cmp
popa
fstpl
pop
lret
cmp
pop
or
imul
adc
aad
mov
cld
pop
inc
pop
leave
test
xor
adc
out
or
popa
dec
and
in
mov
adc
negb
outsb
pusha
mov
into
and
lock
loopne
es
jb
sbb
mov
iret
xor
mov
sbb
sbb
add
and
and
sub
add
and
xor
dec
ret
xor
xor
push
add
daa
push
push
cmp
cli
mov
push
or
popf
outsb
je
fiaddl
mov
mov
xchg
add
aas
loopne
dec
xchg
dec
pop
out
jl
out
mov
fldl
lods
or
es
adc
pop
cld
push
xlat
dec
push
js
push
aaa
test
dec
aas
repz
cmpsl
subb
pop
imull
lret
fdiv
jmp
mov
call
fbld
pushf
fisttpl
sub
nop
ja
cmp
sub
and
loope
cmp
xchg
mov
push
mov
xchg
push
xor
push
mov
shll
dec
xchg
out
xchg
pop
and
subl
jle
pop
push
xor
push
clc
dec
fnstsw
shl
not
fsubrl
cwtl
mov
out
shlb
lahf
and
mov
pop
stc
aam
enter
scas
jnp
pop
mov
js
push
cmp
jmp
add
add
std
inc
jge
xchg
sub
inc
test
cmp
lret
imul
fs
xlat
jns
inc
mov
push
fnstenv
test
loope
mov
push
mov
orb
and
scas
lds
into
arpl
push
das
mov
cs
mov
adc
jl
mov
inc
jl
nop
inc
arpl
aas
cltd
cmp
inc
movsb
add
lods
mov
call
push
cmp
movsb
cld
mov
sbb
movl
in
adc
xor
cmp
push
dec
pop
and
out
paddusb
push
rcl
mov
push
pop
lret
mov
in
jo
fimull
mov
mov
in
mov
movb
pop
test
add
test
add
rorb
xor
fldt
pop
add
movsb
fisubs
pop
movsb
cmpb
jne
xchg
es
out
ds
lods
aam
daa
and
inc
aad
sahf
xor
dec
daa
xchg
adc
push
adc
inc
pushf
sub
lret
enter
adc
test
inc
in
imul
mov
pop
aas
pop
and
leave
pusha
push
xchg
js
xchg
pop
and
mov
cwtl
mov
and
pop
and
in
sarb
loopne
and
add
adc
xchg
mov
xor
pusha
mov
mov
and
adc
xchg
pop
and
inc
jo
fiaddl
mov
leave
inc
pop
and
rorb
pop
and
inc
repnz
xchg
pop
leave
loopne
push
adc
jns
dec
and
orb
inc
jb
push
or
or
or
or
call
xor
mov
mov
decl
loopne
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
jne
aam
jmp
nop
cmpsl
jl
bound
xor
orl
lahf
dec
and
and
popa
je
xor
shlb
pushl
mov
ficompl
or
xor
repz
inc
sub
inc
cmp
repz
push
jo
test
iret
repz
dec
push
lcall
push
int3
sbb
cmp
cmp
cs
sahf
out
or
scas
push
or
sbb
int
jns
and
or
add
sarl
push
pop
adc
pusha
sahf
shlb
je
adc
push
cwtl
cmpsl
xor
out
push
movsb
sbb
rcrb
rorb
fcompl
and
push
clc
pop
and
lea
stc
mov
and
xor
outsl
fisubrs
mov
mov
insb
jo
jo
xchg
mov
fidivs
js,pn
lock
dec
js
jg
js
or
js,pn
and
push
jl
sbb
jg
fildll
push
dec
scas
jl
mov
sub
jl
jl
pushf
fdivl
mov
rclb
jl
lea
add
push
push
adc
or
lods
push
sbb
or
add
adc
add
push
sbb
sbb
fucomi
cmp
add
xor
add
sbb
sbb
sbb
add
sbb
mull
adc
xor
test
push
push
adc
fwait
adc
push
cmpsl
cld
jmp
aam
lcall
addb
loop
xchg
movsb
leave
xchg
sbb
cmpsb
sbb
out
aas
ret
adc
add
xlat
jbe
inc
out
sub
xchg
lret
push
sahf
out
sahf
movsb
lods
mov
int3
jns
out
aam
in
hlt
repz
out
add
or
sbb
repz
and
xor
inc
dec
cmp
repz
pop
fs
je
cmp
repz
mov
movsb
lods
mov
bound
push
jo
mov
xor
push
lret
fldl
faddp
adc
cmpsb
sbb
push
dec
loope
loop
rcrl
pop
in
push
hlt
sub
push
int
fnstcw
in
ss
pop
jmp
bound
pushf
fmull
or
or
pushf
pushf
pop
or
pushf
pushf
pushf
adc
mov
ds
push
inc
test
add
cmp
add
imul
outsb
leave
push
sub
sbb
inc
test
jb
xchg
or
pushf
fidivrs
or
adc
adc
insl
sbb
outsb
push
add
fcmove
xchg
mov
pop
or
xor
push
add
in
pop
jbe
add
add
aam
or
push
add
or
push
jbe
testb
pop
popl
or
or
jbe
add
cld
sahf
or
das
or
or
or
or
add
scas
inc
cwtl
mov
int3
push
in
adc
out
and
js
dec
jo
out
int3
in
push
sbb
iret
repz
push
push
iret
repz
out
ss
push
js
sahf
push
test
inc
adc
daa
push
push
inc
sub
incl
lcall
pop
lods
out
pop
jmp
or
cmp
sub
incl
push
push
ljmp
sahf
out
cmpsl
in
sbb
es
je
loopne
or
out
or
cltd
or
inc
xor
dec
mov
gs
data16
fbstp
lock
sahf
jnp
mov
pop
push
pushf
pop
and
aas
add
aas
push
hlt
aas
push
adc
add
add
fdivl
jne
dec
push
adc
sbbb
in
mov
and
push
fdivrl
push
cmp
pop
clc
jg
adc
cmpsb
lret
cmp
sti
pop
mov
or
repz
bound
lock
push
inc
adc
jns
out
adc
xlat
add
aam
cld
push
sbb
iret
jae
rorl
sbb
adc
iret
repz
loopne
or
or
sahf
out
xor
pusha
adc
sahf
sbb
pop
call
cmp
rorl
push
sub
sti
loopne
insl
fistps
cwtl
push
and
jns
push
add
and
cmp
repz
inc
or
sahf
cmpsl
stc
mov
outsl
add
jns
out
je
cwtl
or
sbbb
pop
jo
repz
repz
mov
out
cmp
shlb
sahf
out
sahf
int3
push
fiadds
out
fmull
pop
xchg
arpl
push
add
xchg
out
ficoml
outsl
or
test
sub
add
ficomps
push
jne
adc
mov
rorb
testb
or
addl
cli
insl
add
push
shrl
mov
adc
sbb
nop
pop
sbb
sbb
mov
adc
sub
sbb
sbb
pop
cli
cli
ds
pop
cli
cwtl
popf
loope
fmuls
lock
decb
std
cmc
out
das
jmp
xor
out
clc
fdivr
push
cmc
cmc
in
repz
push
cli
jmp
add
clc
xchg
call
push
clc
adc
out
scas
inc
push
push
daa
or
repnz
jbe
popf
pusha
out
aad
pmaxub
lock
das
sub
jle
lock
xorb
push
cmc
and
ficompl
push
cmp
mov
icebp
fcmovnu
dec
repz
jmp
in
pop
pminub
aas
push
shlb
jl
out
add
xor
mov
loopne
cli
jns
int
pop
ds
cli
xorb
sbbb
outsb
adc
clc
cmp
arpl
fcoml
sahf
push
movsl
sub
mov
out
push
shrb
mov
mul
or
mov
out
hlt
push
mov
decb
inc
into
push
mov
and
sti
xor
repnz
mov
incb
or
push
jmp
mov
lds
jle
out
call
rcrb
int
lds
mov
testb
lcall
push
jg
cs
nop
out
cmc
adc
out
pop
aam
push
mov
pop
push
mov
push
fisubl
jmp
imulb
insb
push
imul
push
aaa
mov
xor
jl
mov
cwtl
or
xor
data16
push
push
lods
call
xchg
push
mov
push
out
cmp
push
call
xchg
in
in
cmp
push
rorb
scas
psubd
scas
cli
mov
dec
push
and
pop
scas
jecxz
out
cs
loopne
in
lods
fsub
or
rorl
xchg
cli
out
fs
in
pop
sti
jp
rorb
xchg
decb
dec
and
push
inc
ret
scas
ljmp
loopne
outsb
cld
lods
lret
push
mov
jle
cld
jmp
xor
mov
cs
imul
jle
testb
sbb
std
push
into
shrl
loope
push
push
pop
sahf
mov
lods
imul
rcl
mov
nop
lock
and
jg
jo
xchg
add
jne
or
push
cltd
xor
mov
or
rorb
jle
adc
or
push
out
push
mov
loop
stos
stos
pop
sti
push
mov
xchg
jo
stos
inc
inc
clc
mov
call
pop
movzbl
add
ja
push
fidivl
push
push
frstor
sub
fdivrs
imul
push
mov
ret
jnp
ds
scas
outsb
mov
jle
sub
xlat
jmp
push
roll
fimuls
pop
js
shrb
fiaddl
jle
push
push
les
jo
pusha
scas
or
lock
cmc
add
add
sbb
std
pop
dec
push
imul
pop
mov
dec
cmp
dec
pop
shr
cltd
dec
push
faddl
mov
lods
adcb
push
dec
femms
mov
pop
push
inc
adc
daa
push
adc
push
addl
or
mov
movsl
pop
adc
xor
insl
add
mov
inc
sets
call
fdivp
push
clc
into
incb
repz
sbb
xor
cmp
repz
dec
push
pop
sub
jns
repz
inc
pop
sahf
pop
push
insb
sbbb
int3
call
out
repz
push
call
or
xor
xchg
xor
incl
mov
or
daa
or
dec
lds
inc
add
xchg
or
adc
dec
aas
add
push
pop
mov
das
test
pop
loope
pop
or
or
out
jmp
sysret
or
nop
daa
jl
xor
enter
push
std
add
repz
sar
and
cmp
iret
repz
pusha
clc
xor
idivb
iret
repz
cmc
in
or
and
inc
icebp
out
sahf
out
lock
test
out
sahf
out
enter
ljmp
jmp
ljmp
mov
addb
lods
lret
or
sub
ret
ret
inc
lods
scas
outsl
dec
xorps
sbb
add
or
adc
adc
dec
pusha
inc
mov
push
je
aaa
pop
outsb
lret
aaa
inc
or
or
add
out
sahf
testb
in
iret
repz
add
sbb
inc
dec
pop
cmp
repz
js
cwtl
mov
cmp
repz
in
cld
jns
out
das
and
dec
xchg
outsl
inc
cmp
add
aaa
rclb
push
and
adc
pop
pushl
rcl
pop
into
adc
pop
push
add
sub
xchg
push
xchg
ja
pop
add
mov
faddp
jg
jg
stc
mov
repz
mov
cmp
repz
incb
add
jns
iret
repz
add
pop
les
je
loopne
pusha
mov
dec
xlat
lahf
pop
inc
sysret
cltd
dec
aaa
xchg
jo
xor
pop
ds
fiadds
aas
push
xor
ss
out
sahf
aaa
cmp
cmp
cmp
bound
into
xor
lcall
xor
rorl
or
or
jns
mov
adc
sahf
out
sahf
adc
adc
push
pop
out
mov
bound
sbb
sbb
repz
sbb
cmp
repz
and
es
sub
sub
cmp
repz
sub
and
repz
xor
dec
pop
test
pop
xor
push
push
push
jne
leave
es
jle
mov
jmp
enter
xlat
pop
aas
out
mov
out
loopne
test
test
mov
cs
negl
push
adc
mov
or
mov
inc
fmul
cmpsl
enter
ljmp
fsubl
inc
insb
mov
or
ss
push
xor
mov
sahf
push
adc
jo
loopne
out
push
and
enter
inc
jge
mov
lock
push
push
hlt
enter
fisubrs
data16
push
nop
push
popa
jo
fcompl
popa
loopne
xchg
in
mov
div
mov
mov
shlb
out
inc
push
js
and
push
iret
imul
shlb
inc
sbb
jnp
cmp
idivb
push
adc
add
mov
mov
push
cs
xchg
ficoms
pop
out
push
adc
js
push
bound
pop
mov
dec
cs
repz
sarb
jl
push
je
pop
add
fsubl
ss
int
cmp
out
adc
push
xor
push
lods
ds
pavgb
mov
jno
xlat
mov
mov
fdivrp
push
cwtl
fs
sarb
mov
push
cwtl
ds
pop
addl
mov
movq
xchg
in
scas
fsubrs
enter
imul
xor
xchg
les
mov
out
pop
loop
outsb
sub
cld
push
or
mov
fdivp
icebp
fsubrp
inc
fcoml
pop
adc
cmpsb
and
lock
push
pushf
cmpsl
jo
mov
or
dec
push
call
repz
and
dec
aaa
add
cmp
cmpsl
cmpsb
push
cmp
adc
es
push
iret
loop
addr16
push
xchg
es
orl
neg
dec
push
insb
push
sub
xor
test
sbb
mov
data16
jp
pop
xchg
push
inc
push
addb
int3
pop
ficomps
xor
dec
mov
jbe
fadd
lds
push
fs
iret
popa
pusha
out
push
cs
push
movsb
xor
jnp
jl
pop
push
mov
shlb
xchg
or
push
out
sarb
sbb
out
clc
mov
shl
push
inc
dec
jl
mov
loopne
dec
jo
pop
cwtl
push
mov
pop
dec
push
sahf
fidivrs
mov
mov
ss
jl
fbld
adc
xchg
idivl
imulb
or
cmp
mov
out
js
pusha
jbe
in
adcb
jno
mov
push
or
dec
lea
cmpsl
loop
into
rorb
je
push
inc
es
mov
push
loopne
cmp
dec
scas
out
sub
inc
lcall
jg
inc
in
and
add
push
adcl
adc
add
xor
dec
mov
rolb
push
xor
iret
dec
mov
aas
into
nop
aam
jns
pop
repnz
cs
mov
out
push
fistpl
mov
push
xor
imul
push
ret
fnstsw
or
inc
xchg
je
mov
fmulp
jnp
mov
repnz
push
inc
push
pop
jo
sbb
cmp
inc
and
adc
mov
lods
jb
xor
fs
insb
inc
dec
or
mov
mov
addr16
fadds
sub
xor
je
and
mov
add
jns
pushf
inc
ss
xor
adc
int
and
jne
je
add
adc
int
jno
or
in
xor
pop
cs
mov
mov
jns
push
pushf
mov
mov
push
pusha
std
sti
xchg
inc
cs
dec
dec
cmp
dec
jae
mov
mov
fidivs
mov
test
mov
sub
pop
cmp
mov
cmp
dec
ret
shlb
mov
inc
add
push
orb
push
add
nop
push
add
add
addl
mov
test
ficompl
sbb
cmp
dec
cs
inc
outsb
dec
inc
push
sub
or
pmullw
adc
rcr
adc
jae
pop
add
ljmp
incb
add
cmp
testb
out
pop
rolb
sbb
or
push
subb
pop
add
sar
fdivrl
xor
cld
jg
clc
aas
push
in
jns
pop
jmp
rol
popf
in
insl
add
pop
or
push
aas
jg
andb
add
inc
cmp
popa
add
test
sahf
int
cmp
pop
jo
pusha
shlb
add
fisubrs
jg
add
sahf
data16
push
out
ficompl
in
xor
out
mov
add
pushf
lock
sbb
pop
push
aas
fcmovnu
cmp
xchg
add
pop
lock
xchg
mov
xor
push
pop
std
lock
add
sahf
ss
insb
jl
rolb
data16
loop
into
repz
sbbb
add
cmp
iret
rolb
nop
cltd
jecxz
mov
lock
int
ds
push
xor
push
cltd
shr
jo
pop
xor
jg
mov
lret
call
aas
sbb
or
fnstcw
es
and
lods
ffree
gs
add
sarl
dec
pop
outsb
daa
shll
insb
add
inc
ss
iret
clc
lock
aas
rcrb
fcmovnu
push
push
inc
pop
cwtl
scas
insl
popl
adc
add
data16
jmp
sbb
out
dec
test
inc
nopl
jo
dec
in
ds
jle
add
lds
pop
in
fs
adc
adc
out
inc
aas
nopl
aas
xor
add
xchg
push
les
cld
push
cmp
mov
insb
push
fsubrl
aaa
add
lds
lock
aaa
andb
sbb
inc
fwait
int
jge
cmp
sbb
push
sub
mov
insb
ss
add
inc
addl
popa
push
pusha
xor
sbb
push
push
sbb
cwtl
loopne
outsl
aas
jnp
cmp
jne
ret
roll
cmpsl
xor
notb
clc
fcompl
jl
sbb
insb
ss
cmp
sbb
or
test
subl
jge
test
sub
push
loop
add
mov
inc
and
adc
sub
popf
and
subb
sti
and
jns
push
lret
and
jne
jo
pop
push
popa
or
cs
sbb
add
and
cs
ret
fs
imul
popa
stos
and
or
and
insl
add
ss
in
fidivrl
jae
adc
dec
insb
lret
jbe
repz
bound
addr16
fiadds
sub
popa
inc
push
push
jno
pop
aam
push
cwtl
inc
imul
xorl
add
cmp
push
inc
loop
xor
ja
jb
test
lahf
adc
loope
sbb
and
pop
push
push
ret
in
mov
jp
mov
xchg
lods
xor
sbb
sub
inc
jo
pop
dec
arpl
aad
loopne
pop
fs
addr16
icebp
nop
jg
unpcklps
cs
scas
aam
inc
adc
xchg
js
xor
mov
and
adc
push
lock
inc
dec
cmp
inc
clc
mov
adc
mov
xor
idivl
mov
out
popa
and
shll
xchg
bound
pop
orps
jecxz
aaa
cmpb
jle
scas
mov
aaa
pop
shll
mov
jae
xchg
mov
repz
filds
inc
bound
and
ja
lahf
jmp
jle
dec
jae
adc
cli
fcompl
xlat
inc
bound
inc
cmp
add
push
bound
ja
mov
inc
dec
addr16
or
xchg
push
sub
push
adcb
sbb
add
ja
dec
outsb
es
js
add
push
into
cmp
aam
inc
imul
stos
ja
ja
add
rcrb
lds
inc
rdmsr
imul
filds
or
dec
add
stos
xor
add
xor
adc
sbb
mov
add
mov
incb
or
sub
mov
or
sub
xor
imul
dec
adc
add
sub
and
outsl
sbb
test
sub
xchg
push
lock
xchg
xor
insb
imul
test
imul
pop
daa
and
pop
add
mov
les
xchg
push
aaa
sub
jae
jbe
sti
shll
sbb
push
cmp
mov
mov
insb
mov
inc
ret
sub
shll
ret
addr16
pop
jp
or
outsl
mov
pop
mov
and
movsb
jle
scas
xlat
dec
adc
popa
fs
or
jne
jb
shll
pop
adc
and
rcl
sbb
ja
pop
or
sub
mov
sbb
cmp
dec
das
jl
ljmp
inc
jb
loope
ja
jbe
mov
xchg
push
cmp
push
jg
aaa
bound
adc
pop
ret
jmp
lock
shll
mov
addr16
xlat
push
mov
daa
das
xlat
xor
mov
out
xor
ret
dec
add
sub
ja
shlb
shrl
dec
lahf
sub
ret
adc
pop
jmp
je,pt
xchg
and
pop
daa
rcll
or
mov
addr16
xor
push
out
ja
pop
andb
jo
push
push
movl
and
ret
sub
fisubrl
aas
lret
outsb
inc
xorl
jnp
and
jo
sub
and
xchg
jl
push
stos
daa
das
je
insb
mov
xchg
arpl
cmpsb
hlt
jbe
adc
xor
outsl
xchg
pop
xchg
adc
sbb
mov
add
jg
or
inc
xlat
inc
test
sub
outsl
rol
mov
jp
loop
orb
xchg
lcall
sbb
jne
scas
dec
or
mov
call
out
inc
pop
faddl
xchg
and
ja
ret
push
daa
repz
repz
inc
sbb
jg
dec
push
imul
mov
ja
fcoms
ja
inc
in
jmp
lahf
stos
pop
mov
add
aas
cs
add
out
lods
add
cmc
je
outsl
mov
pop
stos
lds
adc
cmp
outsb
cmp
insb
fistpll
and
fldt
arpl
out
fildl
lods
mov
jmp
pop
inc
in
js
push
adc
xchg
sbb
bound
dec
adc
jbe
and
push
cmp
adc
pop
inc
inc
outsb
push
xor
pop
fimuls
sbb
push
sbb
aas
add
fmull
jae
outsb
iret
jns
lds
sub
push
popa
pop
mov
xor
and
sti
insb
daa
fimuls
jnp
adcb
jae
jg
nop
add
mov
adc
pop
mov
push
loope
jg
arpl
inc
arpl
mov
and
lret
adc
aaa
insb
aad
aaa
jne
and
lock
inc
sub
setle
imul
push
pop
negl
nop
push
xlat
orl
or
and
push
call
stos
push
test
xlat
push
das
pop
lods
fidivl
aas
adc
and
push
sbb
fisttps
jo
lea
daa
aas
adc
push
lahf
sbb
ret
sbb
push
inc
je
loope
data16
ja
xchg
sub
iret
pop
sbbw
addr16
mov
pop
push
sbbl
sub
push
sub
addr16
xchg
clc
shr
cmp
pop
dec
iret
push
sub
sbb
mov
fiadds
adcl
add
jnp
pop
adc
das
outsl
pop
or
xor
out
arpl
stos
mov
xor
outsl
jae
test
sbb
push
rorl
mov
jae
jo
mov
sbb
adc
add
inc
ljmp
or
pop
cs
out
stos
stos
pusha
xor
test
les
or
cmpsb
repz
cmpsb
pop
loopne
int3
mov
stos
ret
sub
daa
dec
popf
pop
adc
cmp
sbb
push
rsm
jns
add
xchg
jg
arpl
jmp
jecxz
push
ret
adc
int
cmp
stos
sub
dec
xchg
mov
push
pop
bndstx
push
aad
sbb
sbb
fistpll
dec
dec
xor
mov
or
loope
xor
sub
xchg
dec
daa
push
jo
push
xlat
insb
inc
push
mov
pop
sbb
inc
push
and
es
cmp
addr16
and
push
test
add
add
pop
sbb
mov
fstpl
add
fcmovb
imul
push
inc
inc
push
push
inc
idivl
jns
jp
pop
mov
jne
pop
or
outsb
daa
or
mov
ret
aas
iret
inc
and
scas
popa
push
sbb
lret
jb
push
addr16
pop
dec
and
pop
sub
inc
fistps
ss
idivl
stos
ret
push
push
aaa
inc
addr16
dec
test
loope
addr16
addr16
push
in
xchg
dec
and
push
jae
inc
ljmp
das
ds
mov
jp
sbb
inc
inc
jnp
out
movsb
push
sub
out
jb
mov
xchg
outsl
pop
or
jbe
sbb
inc
and
pop
add
icebp
mov
adc
pop
cmpsb
xchg
push
sub
jnp
push
rolb
ljmp
fwait
aas
push
jp
arpl
notl
pop
or
fsubrs
imul
push
cmp
gs
sarb
sbb
inc
mov
imul
push
add
inc
into
inc
cmp
fmulp
and
stos
xchg
pusha
pop
push
push
aad
inc
push
and
push
dec
adc
add
add
cmpsl
ror
lds
mov
imulb
add
scas
cmpsb
sub
xor
mov
add
aas
lcall
fadds
and
bound
lret
sub
js
rorl
xadd
ficoml
daa
outsb
stos
movb
pop
mov
loope
or
cmp
jbe
out
sarb
jmp
divl
or
ljmp
pop
inc
or
adc
or
or
pop
out
or
gs
xor
loop
xor
mov
inc
testb
pop
push
cmp
mov
das
mov
test
xlat
cmp
inc
pop
add
jp
and
sbb
adc
scas
das
arpl
xor
lret
sub
insb
add
fisubrs
or
pusha
push
add
ret
inc
cmp
adc
push
jmp
pop
inc
sub
or
xlat
fcmovb
lds
mov
push
cmp
outsl
test
jno
dec
xlat
mov
cmpsb
popa
xchg
pop
sub
xchg
inc
mov
pop
mov
jo
pop
adc
fwait
xor
insb
mov
xchg
rcrb
push
arpl
mull
mov
push
push
push
push
rolb
add
and
roll
jae
inc
pop
inc
testl
mov
test
sub
sub
push
out
jne
mov
xor
repz
xor
mov
or
mov
mov
ds
ljmp
outsl
jns
and
fsubp
adc
pop
mov
fs
imul
repz
out
cmovl
xlat
push
ss
or
pop
mov
lds
mov
ret
ljmp
jg
or
mov
pop
outsl
inc
lcall
mov
and
scas
adc
shrl
jg
or
loop
sbb
roll
pop
jg
ss
arpl
pop
xor
arpl
pop
add
stos
popa
push
dec
adc
jp
push
arpl
xchg
pop
and
inc
fs
push
push
and
fs
mov
mov
and
movsb
push
movsb
push
mov
outsb
add
sti
out
mov
add
pusha
add
addb
add
sbb
aaa
inc
add
add
add
add
add
sti
jmp
add
add
push
add
jo
sbbb
add
cmp
add
add
add
enter
push
int3
jp
adc
addr16
lock
mov
and
xor
add
jbe
add
add
test
jo
add
push
add
loopne
lock
sub
pop
adc
or
fcomps
sbb
add
testb
pusha
add
addr16
and
xchg
jg
nop
add
add
add
add
add
add
lret
adcb
inc
adc
add
dec
fwait
adc
test
and
add
andb
and
add
jg
inc
push
sbb
add
mov
add
lock
xor
push
cmpsl
lock
sahf
adc
rolb
sahf
inc
negb
push
xor
aas
cmp
sub
int3
pop
add
dec
shlb
inc
fcmovne
ficoms
jle
into
add
adc
rcr
sub
push
add
push
add
dec
loope
scas
adc
add
mov
fucomip
adc
roll
sub
mov
mov
add
bound
xor
add
fisttpll
add
add
and
adc
test
iret
loopne
mov
push
add
fcmovu
cld
mov
push
add
pusha
add
nop
add
jle
mov
rcrb
loopne
lock
adc
and
xor
inc
push
xlat
in
aas
fistps
push
pusha
push
push
jo
addb
push
fisubs
divb
mov
or
aas
and
push
pop
xor
inc
in
pop
inc
pop
sbb
out
mov
sbbb
nop
or
mov
pop
rolb
loopne
lock
arpl
and
xchg
add
xor
mov
or
pusha
or
orb
add
out
mov
pop
add
rorb
xor
movsl
popa
testb
add
pop
mulb
adc
and
cmova
or
or
pop
imul
jo
cmpsl
call
mov
orb
add
or
shll
arpl
mov
push
add
xor
incl
or
or
push
or
jo
orb
icebp
sti
push
pop
or
pusha
lock
aam
adc
rorb
ds
pop
mov
sbb
add
adc
push
or
mov
ret
inc
or
pusha
or
mov
mov
add
nop
or
xlat
sbb
mov
shrb
sar
mov
mov
or
push
and
gs
incl
inc
or
or
or
or
or
or
or
or
or
or
ds
decb
and
jbe
pusha
loopne
jg
jo
orb
or
loopne
lock
sti
divl
push
inc
push
xor
push
dec
pusha
sti
repz
pop
add
sub
subb
nop
push
mov
sub
or
rcrb
fcmovu
rorb
sbb
add
push
or
fisubs
or
lcall
push
and
xor
inc
cpuid
pusha
sbb
orb
inc
mov
mov
lahf
sarl
rorb
xchg
jb
push
mov
movswl
add
into
invd
push
repnz
and
xor
adc
adc
inc
xchg
add
fists
pusha
adc
pusha
popa
push
lcall
adc
adc
imul
rcr
jle
insb
fcmovbe
adc
cmpl
push
cmp
out
mov
push
add
mov
or
aaa
cmp
insb
fwait
adc
add
jmp
stos
xlat
jg
adc
xor
out
jecxz
addr16
add
adc
ljmp
mov
neg
add
testl
mov
add
sbb
dec
int
fcmovu
mov
rclb
loopne
adc
adc
mov
shrl
or
ljmp
adc
add
adc
push
adc
jo
test
adcb
adc
mov
mov
or
rclb
adc
push
adc
adc
out
sbb
push
add
imul
lcall
arpl
push
inc
jg
fsubrs
ficoml
rcll
adcb
loope
push
xor
cmpsl
into
pusha
or
pop
mov
cmp
aaa
add
dec
add
xchg
adc
mov
cld
fisubrl
stos
aas
scas
add
or
adc
lahf
sub
adc
lock
xor
push
push
pop
pusha
xchg
cwtl
fisttpl
repz
mov
fiaddl
push
mov
adc
adc
adc
or
or
loopne
adc
adc
jg
cwtl
xor
add
or
adc
push
adc
popf
push
or
imul
std
outsl
pusha
sbb
adcb
sbb
adc
out
jns
pushf
push
adc
adc
mov
movsb
mov
adc
xorl
push
pop
cmp
push
or
addl
xchg
mov
push
das
sbb
adc
insb
jnp
mov
sbb
pop
dec
inc
add
mov
add
or
popf
pop
ss
fwait
cmp
pop
add
add
sbb
sub
and
in
or
sub
push
push
xlat
popa
neg
adc
add
and
jb
rolb
sub
add
packuswb
pop
sbb
aaa
sbb
or
xchg
inc
push
ficoml
add
or
ja
jl
add
add
enter
adc
add
add
mov
dec
aas
call
xchg
fstl
pop
dec
pusha
in
dec
imul
jg
or
into
jnp
shrl
push
cmpps
ss
sbbl
sbb
and
add
push
pop
bound
xor
pop
cld
xchg
lahf
or
inc
or
mov
add
insl
xor
or
push
dec
jnp
mov
movsl
pop
fnsave
jne
adc
cs
sbb
push
jne
sub
lidtl
mov
mov
add
and
mov
inc
fldt
pop
inc
jmp
ret
pop
add
imul
pop
push
pop
dec
insb
pop
sbb
sbb
nop
add
jmp
dec
adc
sbb
mov
out
decl
adc
cmpsb
sub
test
pushl
adc
add
sbb
in
js
or
adc
or
lahf
icebp
jg
push
mov
pop
jg
insl
addl
add
sti
mov
jg
fnstenv
aas
mov
mov
shrb
jg
xor
pop
jge
mov
and
mov
int
cmc
dec
mov
push
mov
xor
or
and
dec
dec
popa
pop
pop
push
insl
pop
rsqrtps
add
adc
add
mov
sbb
sbb
add
add
cmp
pop
das
push
mov
pusha
adc
mov
mov
test
test
nop
sub
ret
jnp
xchg
mov
ss
fistps
das
sbbl
sgdtl
inc
adc
add
or
mov
adc
jg
fbstp
push
sti
mov
pop
or
loopne
sub
lcall
add
add
mov
jmp
int
mov
sbbl
add
pop
add
fcoml
or
mov
fildl
push
cmp
and
inc
mov
mov
dec
mov
or
fcomp
dec
inc
lods
loop
insb
or
or
mov
lods
mov
and
aaa
fildll
fwait
add
fmull
pop
adcl
sub
enter
outsl
aas
and
mov
pop
and
aas
or
sub
lahf
or
add
fidivrs
mov
sub
inc
imul
jb
pop
out
adc
push
adc
mov
sbb
adc
sbb
in
dec
adc
jbe
icebp
test
daa
cmpsb
mov
add
mov
pop
adc
ja
add
adc
cltd
mov
or
and
push
fiadds
add
fdivp
js
lds
adc
jge
add
sbb
and
add
add
mov
jg
or
mov
adc
inc
sbb
add
not
push
inc
pop
and
sub
int3
xchg
mov
addr16
dec
push
or
pop
push
pop
bound
mov
daa
jg
and
cmp
push
imul
daa
push
adc
mov
in
arpl
sub
subb
gs
aas
sbb
aad
ret
out
and
mov
loope
subl
sbb
xchg
or
add
jne
inc
dec
pop
sbb
adc
sub
mov
or
push
pop
push
mov
cltd
inc
fs
lea
rcr
stos
adc
sbb
jl
push
icebp
pop
pop
adc
cmp
sub
xchg
test
inc
popf
mov
and
mov
or
or
aad
and
shrb
addl
fwait
sbb
lds
add
incl
mov
adc
push
sbb
inc
aas
cld
adc
aam
in
adc
adc
cmp
adc
add
jmp
mov
or
test
or
movq
sbb
add
shll
cld
daa
lahf
ret
nop
scas
aam
decb
jg
mov
pop
push
repz
mov
inc
shll
shrl
cmpsb
lahf
inc
das
lea
xchg
push
lea
inc
adc
pop
xor
icebp
or
imul
adc
add
mov
or
cs
aas
and
imul
sbb
icebp
inc
pop
or
inc
dec
mov
mov
fcmovu
mov
insl
xor
dec
scas
pop
int
fldt
xor
and
aam
and
mov
sbb
adc
sbb
sbb
lret
pusha
cmpsl
roll
mov
jno
mov
ss
add
jge
movsl
or
ja
mov
or
fimull
pop
xor
inc
das
push
adc
in
pop
adc
dec
popa
jno
loopne
nop
cmp
inc
push
pop
pop
inc
adc
loopne
lock
adc
inc
sub
subb
leave
test
adc
xchg
sub
xor
sbb
xor
inc
enter
jg
and
xchg
and
push
les
adc
jo
or
push
jo
cli
arpl
inc
and
repz
push
xor
ret
and
add
add
add
mov
cld
testl
inc
jae
fiadds
push
stc
mov
pop
addr16
push
dec
and
shll
cmp
es
das
jo
testl
mov
orb
push
testb
outsl
pop
xchg
test
mov
jae
leave
in
inc
invd
adc
leave
leave
leave
sbb
and
mov
orb
inc
aas
das
shl
sysenter
sub
js
aas
dec
das
pop
adc
pop
iret
xor
and
in
or
add
inc
mov
enter
iret
clc
inc
leave
leave
leave
leave
or
push
sbb
leave
push
and
das
xor
xchg
xchg
fildl
leave
xchg
xchg
xchg
inc
dec
dec
adcb
leave
push
push
lahf
mov
and
inc
xor
add
xor
mov
mov
push
out
inc
pop
imul
push
aad
pop
push
dec
or
imull
lcall
xor
jecxz
in
mov
je
sub
pop
push
lds
mov
stos
ljmp
rcr
in
inc
pop
inc
cmpl
pop
enter
mov
jg
sub
and
out
nop
sub
cs
push
mov
pop
decb
orb
jg
sub
test
orb
les
dec
out
and
pop
push
xor
aas
jmp
dec
or
loopne
inc
xchg
call
aam
jg
mov
sub
sub
sbbb
sysexit
inc
jb
jb
ss
cmp
pop
jo
jb
cmp
cmp
aas
pop
inc
addb
ret
leave
inc
inc
dec
inc
das
daa
daa
daa
out
nopl
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
dec
dec
add
cltd
adc
dec
xor
adc
shlb
cld
test
rolb
ret
and
lock
inc
scas
jo
pop
cmp
mov
dec
mov
push
in
repnz
aas
pop
icebp
repz
stc
cmc
pop
inc
dec
inc
aas
adc
xchg
das
adc
dec
les
dec
and
lcall
jno
mov
out
fisttps
add
lahf
movq
add
dec
jnp
movl
mov
add
mov
push
icebp
scas
aas
loopne
mov
or
and
fists
das
dec
add
adcb
push
mov
mov
or
and
cs
aas
xchg
fsts
pop
or
dec
fbld
add
add
add
int3
fistps
scas
jg
inc
add
pop
pop
sub
leave
mov
andb
clts
adc
xchg
jg
mov
add
aas
test
inc
pop
test
test
movsl
aas
sarb
and
mov
dec
add
inc
push
sub
test
lcall
cmp
aaa
mov
lea
cmp
add
pop
es
pop
sbb
in
mov
sarl
mov
orl
dec
mov
rorl
xchg
inc
adc
cmp
jb
inc
pop
subl
adc
out
adc
adc
mov
adc
cmp
insl
sbb
jg
push
lcall
adc
andl
ja
inc
lods
or
decb
add
rol
in
cmp
rol
int
push
pop
push
mov
shll
adc
mov
and
mov
adc
adc
mov
outsb
cmpsl
insl
and
mov
mov
pop
add
push
adc
adc
pop
inc
adc
sbb
neg
and
cmp
sub
cmp
xor
mov
es
or
jbe
icebp
outsb
ret
jp
int
adc
mov
movsl
mov
fimull
push
adc
sub
mov
pop
and
sub
in
mov
popf
adc
mov
ja
movsl
outsb
adc
lcall
sub
aas
dec
adc
dec
nop
adc
loop
dec
pop
leave
out
movsl
add
ret
ds
mov
fisubl
dec
sub
and
sbb
mov
lods
mov
lcall
outsl
adc
adc
stos
dec
inc
xor
push
cmpsb
and
xor
sbb
pop
adc
sbb
inc
mov
mov
adc
xor
add
leave
push
adc
out
adc
inc
sbb
inc
push
inc
add
add
mov
mov
add
out
fcoml
mov
push
inc
cmp
ret
scas
and
add
arpl
pop
pop
push
call
inc
cwtl
cs
lret
aas
loop
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
xor
or
adc
fnstcw
or
lret
add
or
push
and
sub
cmpsb
sub
addl
pop
dec
or
add
movsl
mov
lret
out
add
inc
fcmovne
xchg
mov
xchg
sbb
test
push
pop
shll
addr16
cmpsl
and
add
shlb
ja
add
dec
inc
and
js
fildl
adc
xor
ja
add
adc
or
push
dec
push
and
and
xor
or
add
push
jae
and
and
pop
add
add
pop
lods
adc
pushf
pusha
xchg
pusha
add
add
into
or
xor
jb
push
shlb
add
add
and
push
jno
pop
or
push
lea
push
dec
std
dec
inc
and
ud2
lahf
adc
gs
pushf
or
sub
ret
jecxz
inc
sahf
mov
and
out
pop
xchg
push
sub
pop
push
aad
ljmp
or
insl
jo
aam
arpl
xor
dec
insl
or
adc
inc
inc
push
adc
push
imul
fisttpl
push
xor
mov
lret
sbb
mov
and
xchg
and
sbb
mov
cmp
or
mov
lret
sbb
push
xchg
dec
sub
cmp
add
fwait
and
insb
xchg
push
jecxz
jns
mov
pop
and
push
lock
adc
xchg
rcll
fxch
aaa
je
push
and
mov
in
dec
and
fisttpll
sub
out
pop
add
fldenv
scas
int3
and
mov
test
sbb
or
std
push
push
mov
loop
add
adcb
push
jo
dec
enter
or
imul
xchg
xchg
push
add
ss
pop
and
jno
movsb
lds
ja
sub
outsb
adc
pop
xor
xchg
les
outsl
push
mov
or
ja
adc
sub
fmuls
sub
jo
sbb
mov
push
scas
sbb
sbb
mov
dec
dec
mov
mov
sub
data16
sub
inc
sbb
cltd
xor
or
dec
or
clc
jl
or
and
mov
in
mov
dec
jo
jae
dec
mov
fistps
push
push
sub
or
shrb
inc
fmull
cmp
mov
jp
xlat
dec
and
xchg
mov
cmpsb
mov
sub
pop
adc
jbe
xchg
inc
and
cmp
mov
sbb
test
addb
ret
inc
and
jbe
sbb
sbb
dec
dec
pop
gs
je
lret
xchg
popf
or
dec
add
xchg
or
bound
cltd
sbb
xchg
loopne
xchg
push
pop
shll
mov
call
mov
sti
add
out
shrb
xchg
lea
ja
mov
and
sub
arpl
lods
or
aas
push
lahf
cs
pusha
test
add
shrb
push
mov
stc
fst
xchg
push
lock
inc
orl
sub
nop
mov
out
cmpsl
shlb
xor
insl
cmpsl
out
in
mov
shrl
inc
cli
and
andb
adcl
fs
pop
das
sbb
clc
adc
push
popf
pushf
cs
cmpsl
imul
add
fld
sbb
in
pop
pop
sbb
push
or
sub
out
inc
adc
cmpsl
repz
adcl
lock
push
sbbl
int
pop
hlt
iret
xor
sub
and
inc
add
jecxz
fstl
cs
inc
stos
cmpsb
sbb
sub
inc
pop
and
pop
int3
add
outsl
loope
fldt
std
dec
sub
pop
mov
dec
outsl
pop
xor
sbb
repnz
sub
adc
adc
imul
cmpsb
ja
ja
or
and
inc
sub
lods
push
and
sbb
mov
or
cmpsl
xor
pop
or
jae
xchg
mov
push
sub
add
imul
lea
inc
push
scas
loope
test
pop
cmp
cmp
add
sbb
xchg
imul
adc
adc
pop
fcoms
stos
adc
pop
cmpsl
and
fdivrs
mov
lods
dec
pop
add
sub
mov
subl
mulb
inc
inc
push
sbb
jne
add
in
movsb
sub
sub
js
push
xchg
adc
sbb
cmpsl
mov
xor
mov
subl
pop
xorl
inc
xor
and
mov
dec
sarb
movb
xor
push
push
jb
pop
xchg
xor
test
mov
xor
test
dec
arpl
inc
es
pop
and
xchg
dec
stos
push
push
outsb
inc
outsl
mov
fldcw
pop
adc
mov
jmp
outsb
and
icebp
xor
mov
shll
xchg
sub
add
mov
test
ret
addr16
fdivl
push
sbb
xchg
jo
mov
loopne
test
int3
mov
xchg
dec
sbb
arpl
adc
mov
adc
in
and
cmpsl
add
popa
or
mov
pop
and
or
ret
lea
pop
jno
or
es
daa
inc
roll
outsl
cmp
mov
inc
sbbb
jb
in
lea
arpl
loope
cltd
adc
sbb
aaa
push
mov
push
dec
inc
add
xchg
add
addr16
xchg
in
push
outsl
int
sbbl
add
dec
push
in
js
push
clc
dec
data16
mov
inc
jns
jno
and
dec
stc
enter
xchg
and
outsl
jo
sbb
sbb
and
testl
fwait
mov
testb
ret
loope
pop
das
sbb
jns
and
and
out
mov
dec
pop
add
adc
mov
sub
lret
adc
fstps
xchg
jo
pop
sbb
jp
data16
jge
dec
adc
sbb
or
and
arpl
xchg
inc
mov
lret
movsb
les
mov
insb
xor
inc
mov
roll
sbb
imul
and
mov
jo
imul
adc
adc
jno
fsincos
push
sub
cmpsl
sbb
ss
and
and
inc
popl
insl
repz
or
lcall
sbb
es
ja
ret
test
popf
push
jbe
push
mov
mov
inc
xor
jne
or
sbb
xchg
movsb
adc
insb
mov
cltd
adc
xchg
test
dec
test
pop
push
lret
daa
sub
sub
adc
insl
or
inc
aaa
push
sub
push
leave
or
cmpb
adcb
dec
enter
and
insb
jo
stos
les
inc
adc
adc
arpl
lahf
sbb
sbb
or
ss
mov
mov
inc
mov
mov
and
outsb
in
add
call
loope
mov
lret
divb
cs
lahf
push
fdivrs
pop
pusha
inc
mov
dec
mov
pop
mov
aad
mov
imul
jno
inc
push
popa
xor
pop
and
dec
mov
pop
and
shl
and
jne
and
loop
push
and
shlb
adc
push
jo
adc
loope
cltd
dec
jnp
sbb
add
fdivrs
lods
and
mov
adc
and
mov
and
rol
jnp
sub
push
mov
fsub
push
adc
pop
mov
push
inc
icebp
pop
sbb
dec
pop
sbb
jbe
ja
inc
xchg
imul
sarb
pop
lcall
adc
dec
sbb
and
add
lcall
or
mov
sbb
adc
jmp
mov
xchg
les
adc
mov
icebp
lea
adc
jge
mov
jl
jecxz
jae
inc
mov
cmp
sbb
sbb
ret
xor
dec
data16
and
jns
cmpsl
and
xorl
jmp
loopne
or
jmp
fstpl
cld
lea
addb
loopne
add
push
pop
add
out
popa
dec
xchg
adc
sti
pop
popa
insl
call
or
and
fwait
adc
inc
fs
stos
imul
cmp
adc
pusha
mov
cmp
andl
repnz
hlt
add
sbbb
in
or
arpl
and
mov
mov
sbb
lods
and
aam
jo
faddl
xchg
icebp
inc
and
ficomps
add
add
add
stc
pop
inc
xor
add
sbb
push
sbb
std
jne
jl
adc
inc
pop
xor
addr16
push
inc
dec
push
push
inc
paddw
sbb
push
jo,pn
xor
rolb
mov
add
sbb
cwtl
sbb
aad
ss
pop
push
sahf
sti
xchg
pop
mov
je
scas
dec
pop
mov
les
imul
or
jo
out
dec
repnz
clc
stos
popaw
push
cmp
inc
es
outsb
jle
bound
mov
dec
add
in
sbb
cs
xchg
lahf
mulb
nop
push
xchg
out
data16
cs
je
cmp
or
sahf
outsb
in
jb
dec
pusha
add
inc
dec
sbb
jo
repnz
int
jae
ss
ja
push
in
mov
outsb
mov
das
jb
or
add
add
xchg
incl
add
add
dec
add
inc
xchg
jp
add
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
shrb
or
dec
add
mov
