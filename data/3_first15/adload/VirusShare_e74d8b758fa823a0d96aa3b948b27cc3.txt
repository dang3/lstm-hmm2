pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fcomip
mov
add
dec
outsb
je
addr16
and
iret
scas
xchg
ffreep
pop
cs
jns
insb
daa
push
outsl
jb
aas
int
fs
orb
popa
imul
add
cwtl
add
push
gs
add
mov
add
inc
add
mov
push
out
dec
dec
outsl
outsb
addr16
int
sbb
hlt
or
push
je
in
jae
out
add
pop
or
push
imul
popa
pop
sbb
je
and
or
cmp
xchg
push
inc
push
push
dec
push
mov
ds
push
push
xor
pop
push
pusha
fs
mov
mov
clc
pop
push
dec
bound
arpl
pop
sbb
pop
sbb
jae
jae
insl
repnz
loope
mov
clc
jb
popa
arpl
add
push
mov
add
pop
or
imul
mov
fistps
nop
int3
addl
jmp
adc
jle
add
int3
sbb
andl
sub
lock
or
lods
xchg
mov
inc
push
add
or
cs
outsb
inc
inc
adc
pop
mov
leave
int3
pop
adc
inc
or
inc
pop
jmp
push
xor
xor
and
and
and
adc
or
enter
add
cmp
and
cld
mov
enter
hlt
inc
aas
lock
pop
pushf
sbb
fcomps
push
in
loopne
in
sbb
mov
and
pop
sbb
aam
or
enter
les
clc
and
les
ret
add
jle
das
sub
je
movzwl
mov
aaa
inc
pop
ret
data16
xchg
mov
or
enter
movsb
pop
out
daa
push
mov
add
push
div
std
filds
mov
test
jne
xor
pop
leave
mov
mov
pushl
rorb
inc
roll
mov
mov
inc
cmp
jne
mov
mov
mov
push
popa
mov
push
inc
add
scas
mov
mov
xchg
pusha
test
xchg
fistpll
decl
mov
or
adc
add
mov
or
adc
clc
jnp
ret
push
push
push
mov
mov
mov
mov
add
ret
jg
fcmovbe
pop
mov
or
push
or
ret
and
fimull
lea
or
inc
add
adc
movsl
jge
jne
aaa
sub
fistpll
jmp
loope
mov
sbbb
cmp
test
pop
pop
pop
push
fistpll
jo
mov
jne
sti
mov
xchg
cmp
jb
mov
mov
dec
imul
imul
ja
and
mov
popa
lahf
mov
mov
dec
ret
out
and
fucomip
aas
pop
mov
add
pop
repz
in
sub
ja
pop
pop
sub
mov
loope
pop
sub
mov
aam
or
sti
divl
or
jmp
sbb
sti
jne
sbb
jle
pop
jo
es
mov
cmp
mov
or
add
aas
push
mov
add
and
push
jg
clc
mov
lret
test
je
mov
mov
dec
cmpb
lock
and
lock
push
mov
fisubrs
sub
cmp
push
in
shlb
add
cmpl
in
mov
jno
and
in
mov
movq
jo
or
lret
mov
call
faddl
lds
pushf
jmp
in
div
lock
daa
out
ja
mov
add
cmp
ja
cmp
out
xor
or
sbb
push
ss
in
or
add
pop
and
filds
mov
cmp
cmpl
sbb
push
mov
and
popa
sbb
pop
and
cmp
push
adc
hlt
outsl
or
rorb
lock
sbb
loop
xor
jae
sub
or
lds
mov
cmp
add
mov
jbe
mov
cmp
or
or
jbe
jo
mov
sti
push
push
xorb
lock
dec
jmp
ss
jmp
push
jb
lcall
xor
jmp
mov
and
and
rorb
or
sbb
jae
mov
sub
clc
or
out
jae
std
add
add
into
shlb
addl
xor
ja
loopne
cld
xor
aas
or
add
repnz
cmpsb
inc
pop
pop
shll
cmp
jg
inc
xlat
mov
cmpsb
ja
movsb
pop
cwtl
in
je
mov
inc
stos
fwait
push
cltd
ds
push
pusha
test
mov
pop
push
add
mov
jne
jp
negb
imul
movsl
and
push
inc
loopne
insb
fdivs
inc
jo
out
cli
jge
add
loope
mul
je
cmp
inc
jle
xor
mov
sub
push
stos
mov
xor
xor
lds
mov
xor
lds
insl
scas
mov
daa
or
aas
lea
add
test
cld
icebp
jne
xchg
jmp
imul
jne
or
jo
nop
cmp
push
cmp
popa
xchg
mov
ret
imul
mov
mov
lea
addr16
sti
loope
adc
fidivs
mov
out
rorl
ret
add
mov
add
je
imul
jo
mov
push
adc
jmp
addb
ss
jo
hlt
pop
sbb
roll
sbb
in
aaa
push
push
std
pop
mov
xor
push
cmp
rcr
adc
shll
adc
xchg
push
jle
cmp
cmp
add
int3
fistpll
jg
hlt
inc
cmp
in
mov
adc
add
les
or
clc
aas
pop
pop
pop
pop
adc
sub
sbb
ret
mov
mov
repnz
push
xchg
test
shlb
and
iret
add
and
sub
arpl
popa
rclb
adc
and
sub
jns
imul
add
cmp
adc
inc
dec
shll
xchg
sbb
loopne
push
pop
fistpl
push
cmp
cmp
add
adc
dec
call
stc
pop
jg
adc
test
jns
add
adc
stc
add
and
out
sti
frstor
sub
mov
pop
adc
mov
fld
jb
add
or
mov
cmp
jne,pn
or
sbb
jmp
jmp
cmp
jl
movl
lock
mov
jb
clc
lahf
daa
add
or
or
fisubrs
mov
mov
and
mov
sub
test
cld
scas
pop
push
adc
adc
jbe
push
sarl
or
push
or
push
rolb
push
xchg
fadds
jg
or
ret
decb
popl
out
jo
xor
adc
je
fisubrs
cmpsl
sub
ret
arpl
testb
je
mov
sbb
cmovge
sub
cmp
cmp
testb
shr
add
test
cli
out
out
sti
aas
add
mov
clc
add
and
repz
out
test
mov
sub
pop
outsl
sti
push
adc
add
lret
mov
dec
xorb
into
jge
cld
jg
cli
mov
jnp
sub
cmp
jge
mov
loope
fucom
or
adc
shlb
xlat
cld
lea
and
in
jno
addr16
mov
aad
lds
pop
out
jge
dec
jae
lea
ret
cmc
jnp
or
cli
pop
push
xor
jae
pop
pop
out
mov
cltd
jo
aaa
dec
xchg
mov
adc
pop
into
mov
nop
hlt
cmpsb
adc
mov
js
pop
cmp
inc
adc
push
pop
jge
cs
add
sub
cmp
or
add
stc
gs
mov
nopl
jle
adc
or
sbb
xor
es
outsb
jo
mov
popa
loopne
cmp
mov
dec
cmpsb
psubb
push
lock
mov
cltd
movhps
sub
cld
daa
push
push
mov
cmp
popa
xchg
mov
lock
pop
adc
and
push
arpl
loopne
adcb
sub
xorl
and
out
subl
mov
mov
adc
mov
mov
sbb
int3
daa
xchg
or
ja
sbb
int3
add
pop
inc
fstps
int3
rol
pusha
or
push
pop
or
mov
add
fldl
adc
or
ljmp
lock
push
xor
adc
mov
mov
jnp
lods
jecxz,pn
out
cmpl
mov
pop
je
pop
jmp
mov
mov
mov
out
add
jle
sarl
jne
movsb
sbbl
cmpl
adc
or
clc
cmc
inc
add
xor
pop
out
sbb
out
sub
cmp
int
roll
cmpsb
roll
xchg
leave
jmp
sbb
jne
js
xor
into
xor
pop
add
fwait
cmp
jne
pusha
or
je
sti
clc
cld
or
push
stos
jle
inc
cld
jbe
pop
xor
push
push
repnz
mov
mov
add
and
jp
lret
cmp
add
sub
clc
es
loope
mov
je
test
add
pop
inc
incl
adc
scas
shlb
push
or
xor
loopne
mov
jge
inc
jg
dec
fsub
or
or
subb
jbe
or
sbb
gs
pushf
lahf
cmp
movzwl
cwtl
out
or
sbb
shrl
in
push
xchg
inc
add
push
mov
pop
pop
push
push
sbb
lret
clc
mov
stos
xorl
or
jno
add
adc
in
scas
pop
pop
lock
test
jne
test
ja
or
or
call
pop
loopne
push
add
loopne
push
or
or
or
test
rclb
das
add
pop
xchg
or
mov
cmp
push
inc
push
ss
in
andl
add
es
pop
mov
adc
ret
sbb
cli
add
jmp
or
or
orl
jmp
mov
cmpl
in
jmp
push
clc
push
adc
pop
fnsave
sbbb
shll
and
mov
mov
out
movb
pop
jle
add
shrl
mov
js
jge
push
jecxz
out
mov
cmp
icebp
mov
push
fists
xchg
adc
iret
neg
loope
sbb
cmp
add
inc
jle
jns
sub
mov
add
and
add
mov
sbb
mov
push
pop
test
testl
punpcklbw
mov
ja
sub
cmpb
jl
mov
iret
adc
xor
dec
js
jmp
inc
sahf
add
dec
add
or
pusha
mov
test
sub
pusha
dec
add
push
hlt
sbb
sbb
cmp
fadds
mov
loop
sub
andl
push
xchg
gs
add
add
ret
add
push
mov
jno
fdivs
add
das
inc
mov
push
hlt
rcrb
movl
lcall
jns
adc
cld
jmp
out
adc
clc
xor
mov
fstpt
lock
mov
jp
aaa
inc
adc
and
mov
jbe
mov
movsb
daa
sti
aaa
popa
add
call
mov
mov
sbb
jmp
xor
mov
inc
lcall
add
add
mov
test
je
das
sbb
enter
out
dec
pop
or
mov
ret
push
jmp
pop
xor
add
out
dec
adc
repz
out
in
mov
fidivrs
xchg
xorl
inc
or
rol
daa
adc
add
inc
sbb
sbb
inc
xor
bound
aas
mov
or
jle
jecxz
cmp
push
mov
dec
sbb
call
dec
sti
sbb
mov
mov
dec
adcb
inc
sbb
xor
mov
jmp
push
push
xor
loope
popl
rclb
and
mov
ja
call
inc
or
je
push
lcall
sbb
ret
sub
inc
fnstsw
sarl
mov
inc
rep
cld
mov
mov
jmp
mov
jmp
mov
daa
pop
mov
xchg
add
addl
mov
roll
rcl
dec
mov
arpl
cmp
add
lea
ss
push
cmpsl
or
add
pushf
lea
lods
jle
push
aas
or
sub
adc
xchg
pop
add
fwait
nop
sbb
mov
lock
xlat
sub
divl
je
cmp
rep
aaa
sbb
loope
lahf
jns
je
cld
lea
mov
push
sti
xor
std
xor
cld
inc
scas
mov
in
or
outsl
arpl
mov
es
sbb
cmp
jb
std
out
in
cmp
ja
sub
ret
nop
mov
fldcw
fnstcw
pop
jae
fwait
pop
pop
pop
in
or
mov
fwait
orw
insb
inc
negb
fldcw
pop
inc
sub
movl
xorl
jle
cmp
push
add
jmp
data16
loope
loopne
jmp
sar
jmp
testb
cmp
pop
cmp
and
sahf
fwait
in
add
pop
mov
xor
mov
ljmp
jg
repnz
mov
scas
jb
or
jg
mull
mov
adc
jne
call
mov
test
adc
jge
sbb
jmp
cmp
mov
mov
push
clc
decl
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
push
ljmp
incb
mov
sub
jbe
mov
stos
xchg
jmp
mov
mov
inc
xchg
loope
mov
cmp
push
add
mov
lret
mov
inc
inc
and
push
push
mov
jg
cli
xchg
inc
inc
add
ret
ljmp
pop
cmp
inc
dec
movsl
mov
pop
add
aaa
mov
or
dec
jne
jmp
adc
loop
fimuls
mov
cmp
jne
push
adc
jne
adc
pop
add
jne
add
jmp
pop
cmp
cmp
jne
shr
ret
lods
rorb
xchg
int
testl
dec
dec
pop
mov
add
or
ret
and
movsl
stc
das
mov
cmp
jne
dec
dec
dec
and
xor
dec
sbb
and
popf
mov
cld
shl
mov
or
mov
ret
inc
outsl
clc
stos
pop
es
imul
push
outsb
sub
push
nop
insb
fstpt
push
inc
xchg
fucomip
mov
mov
or
sub
in
pop
pop
jle
je
pop
je
xor
dec
and
push
push
cmp
add
sub
and
ja
mov
jmp
lea
push
add
push
jbe
aas
clc
idiv
int
or
jge
jmp
inc
cmc
neg
jle
js
pop
sub
jmp
out
in
dec
mov
inc
jmp
mov
filds
ja
xchg
and
add
not
add
scas
leave
aad
stos
aad
test
sbb
testb
filds
notb
stc
sbb
add
jge
inc
mov
dec
jne
pop
aaa
mov
fistpll
xchg
repz
mov
sub
inc
or
inc
dec
jne
mov
std
roll
dec
je
adc
lea
pop
xchg
orl
push
comiss
dec
fidivrs
cmp
sub
je
das
inc
xor
or
and
jmp
jae
sahf
mov
mov
xor
pop
nop
out
sbb
jmp
fstp
fldt
clc
push
add
fldz
mov
and
inc
push
jb
inc
enter
in
push
in
pushf
or
ret
mov
adc
xchg
lahf
cld
adcb
sbb
imul
js
inc
jle
add
mov
fistpll
lods
or
daa
sub
test
out
sub
jg
repz
mov
lds
mov
cld
int
cld
jbe
imul
cmp
mov
mov
bound
das
jmp
mov
xlat
fadds
outsb
xor
xchg
push
or
jg
aas
push
push
int3
into
sbb
rorl
mov
push
pop
test
enter
ljmp
outsl
movsl
push
inc
mov
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
pushl
test
lds
iret
decl
js
inc
mov
stos
mov
cmp
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
ljmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
jmp
int3
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
jmp
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
jmp
pop
or
addl
cmp
xor
in
cmp
cli
lcall
mov
mov
popa
cmc
mov
and
addr16
repz
mov
mov
outsb
fwait
xchg
and
and
outsb
bound
xor
jmp
and
push
xor
adc
cmp
clc
pop
inc
cmp
jne
push
pop
and
add
xor
rcll
cmc
mov
pop
test
xchg
hlt
movzwl
lea
xchg
lock
push
imul
mov
xor
push
push
mov
mov
movl
dec
mov
push
addr16
add
andb
mov
aas
std
mov
mov
jmp
push
clc
pop
aas
or
int3
test
inc
push
call
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
pop
stos
lock
insb
jne
fninit
fwait
cmp
int
add
mov
mov
aam
leave
mov
inc
rep
push
or
fildll
sub
cmp
jne
dec
mov
xor
loope
aas
push
out
jne
ret
repnz
mov
ss
faddl
mov
sti
fsubs
int3
or
lods
mov
sbb
adc
jp
fcmovnu
and
pop
int3
jbe
rcr
test
or
sub
sub
movups
outsl
cmp
nop
jle
push
mov
loopne
mov
or
push
cld
cmp
ret
jge
mov
xor
push
shr
dec
rep
pop
loope
icebp
cmp
mov
pop
faddl
add
sbb
in
cmp
je
pop
mov
add
jae
mov
fidivrs
push
mov
mov
pop
sbb
cmp
sar
mov
lods
mov
mov
mov
sub
cmp
xchg
cmp
push
jae
paddd
add
loope
and
loope
and
roll
adc
inc
sahf
or
push
mov
pusha
enter
push
cld
mov
pop
inc
xor
jecxz
bound
sub
and
and
mov
sbb
adcb
add
mov
flds
push
mov
lock
jmp
rcll
outsb
outsb
aaa
test
and
setne
jecxz
insb
cmp
sub
inc
sub
int
pop
loope
mov
pop
mov
cmp
loop
xor
jb
cmp
fisttpll
or
jne
xor
pusha
pop
or
pop
inc
inc
fsubrl
lds
push
inc
add
mov
mov
enter
testb
mov
mov
cmp
je
mov
leave
jne
mov
add
nop
push
xchg
jmp
lret
icebp
or
decl
push
add
repnz
je
pop
in
negb
pop
add
sub
jle
test
mov
pop
cs
xchg
je
rcrb
insb
and
pop
mov
fsub
mov
xor
lock
jne
das
mov
enter
dec
out
es
les
dec
orb
pop
push
icebp
lods
pop
aas
aad
or
mov
sbb
inc
push
stos
pop
jnp
pop
mov
pop
in
popa
lock
xor
decl
jmp
adc
outsl
sti
mov
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
add
pop
xor
xor
jecxz
dec
cmp
filds
aaa
insl
lahf
push
pushf
enter
fidivs
repnz
push
mov
jmp
push
xor
call
add
rcrb
jle
push
push
push
arpl
hlt
xor
pop
cli
lcall
cmpsl
adc
mov
mov
movl
rorb
or
pop
sub
movsb
shrl
lret
sub
or
or
mov
sub
clc
stos
xchg
fisubrs
jbe
mov
jg
add
call
sub
pusha
cmpb
cli
in
push
lea
adc
aaa
mov
push
sti
xchg
movsb
std
popa
push
push
cmp
cmp
pop
into
and
sarb
add
scas
or
jae
es
test
push
push
and
leave
sar
scas
pop
inc
add
or
jne
movsbl
inc
inc
jmp
or
push
add
and
daa
and
loope
mulb
cmp
adc
loop
cmp
cwtl
pop
fdivrl
adc
cmp
in
or
pop
jne
fiadds
in
fwait
cmc
cmpsl
push
mov
adc
outsb
mov
adc
add
icebp
mov
shl
mov
out
loop
sbb
push
je
or
jae
push
sub
mov
add
cmp
pop
ja
pop
hlt
leave
psubw
adc
adc
inc
std
or
push
jns
add
dec
add
out
inc
pop
pusha
clc
push
sbb
push
sub
andb
addl
addr16
jmp
decl
std
jo
aaa
fld
inc
add
push
add
test
jmp
jnp
xchg
jb
push
mov
mov
cmp
xor
add
mov
in
dec
jb
je
dec
or
jmp
jne
mov
inc
push
pop
rol
push
or
shr
mov
jno
mov
add
loope
push
sub
repnz
addl
jne
add
push
lcall
inc
inc
mov
jg
pushw
push
jno
cmp
dec
jne
cld
shll
sub
loop
outsl
inc
jmp
sbb
fs
push
cltd
push
adc
cmp
adc
mov
add
inc
xor
or
pop
adc
adc
or
mov
clc
jmp
sub
subl
pushf
pop
or
xchg
cmpsb
movl
lock
push
xorb
aaa
push
pop
jno
and
push
push
push
outsl
loope
push
push
push
mov
insl
test
mov
cmp
sbb
or
pusha
add
lds
cmp
pop
ret
mov
adc
adc
adc
lea
test
mov
pop
lods
pop
jo
dec
ljmp
loop
xor
mov
out
pop
dec
xchg
xor
xchg
ret
xlat
mov
jg
jle
add
je
cmp
aas
jl
push
sub
and
dec
je
jmp
add
fdivp
out
incl
je
jmp
cmp
cmp
adc
jnp
add
std
sbb
dec
cmp
mov
jmp
mov
jmp
mov
mov
iret
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cmp
or
push
or
hlt
aam
fcomps
inc
icebp
aam
fmuls
push
insl
mov
push
outsl
jp
mov
pop
test
mov
push
pop
inc
sbb
cli
into
shlb
mov
or
push
inc
pop
xor
daa
test
je
sub
fnstenv
adc
xor
jecxz
ret
scas
ret
cmpsb
loop
mov
enter
ret
popa
mov
in
or
adc
sbb
cmp
cmpsl
add
sbb
pop
repz
cmp
jne
adc
inc
push
xlat
mov
add
aad
dec
mov
mov
enter
jno
addl
xor
hlt
call
and
jl
jg
jecxz
adc
or
fdivrl
mov
cmp
mov
mov
loopne
mov
dec
js
xchg
repz
add
sbbl
add
cmp
jg
movl
sbb
mov
test
dec
mov
mov
iret
cmp
push
sub
jne
dec
jnp
cmp
sbb
pusha
and
inc
das
push
add
add
or
pop
in
pop
ss
jne
pop
pop
pop
inc
pop
sbb
data16
jmp
dec
jo
in
add
mov
xchg
or
aas
pop
sbb
loop
pop
aaa
mov
mov
pop
mov
pusha
aaa
sahf
aad
loopne
mov
cld
cltd
idiv
add
fld
mov
daa
mov
sti
mov
dec
mov
add
sarb
in
sub
ret
mov
push
push
adc
jmp
scas
inc
push
out
lock
imul
rolb
sbb
adc
ja
add
or
fistpll
mov
push
fisttps
clc
imul
sarl
adc
cmp
lods
or
lds
or
shll
jecxz
push
push
pop
fwait
jmp
xor
inc
ret
pop
pop
ret
mov
jns
mov
add
cld
and
and
les
sbb
mov
dec
orb
jne
cmpl
adc
add
pop
mov
call
and
dec
into
icebp
cmp
xor
sbb
mov
add
pop
pop
mov
jecxz
mov
jbe
roll
pop
stos
dec
cmp
dec
mov
inc
in
adc
jno
or
push
dec
adc
mov
xor
jne,pt
aaa
or
add
jne
cmp
mov
xor
mov
push
or
mov
ret
pop
xchg
das
leave
shll
js
loop
pushf
inc
das
orb
add
out
ljmp
mov
dec
jl
lock
jno
lea
mov
leave
in
pop
push
mov
push
sbb
add
lods
pop
xor
or
dec
jne
shlb
dec
cmpsb
dec
and
inc
jg
jno
jns
cmp
sbb
dec
sbb
pop
pop
jmp
flds
xchg
adc
xchg
aam
or
jle
push
loop
hlt
ret
add
loopne
push
xor
movl
pop
pop
mov
sbb
das
scas
imul
mov
mov
das
stc
mov
sbb
roll
mov
shlb
arpl
rorb
mov
or
push
push
adc
xchg
add
push
je
aaa
jl
addl
cmp
cld
filds
add
clc
fnstcw
stos
jmp
jo
mov
lea
cmp
push
push
cmp
adc
nop
mov
jl
fs
mov
and
jmp
lds
sbb
ss
fldl
sbb
add
cmp
add
call
loop
jle
inc
mov
nop
xor
mov
je
lret
outsl
mov
popa
jg
add
mov
jmp
inc
add
out
jge
mov
sub
and
jnp
out
pop
pop
or
push
push
data16
in
add
jae
jbe
mov
inc
xchg
shlb
lock
push
push
ret
lds
icebp
rcrl
rcrl
mov
sbb
cld
outsl
push
and
pop
cld
or
jne
sti
adc
fnstcw
or
pop
or
pop
xchg
ds
add
or
ret
push
aas
sahf
je
bound
mov
push
cld
add
cmp
out
mov
mov
adc
push
jbe
mov
sub
testl
cmp
adc
or
mov
mov
sub
cmp
mov
mov
loope
cld
add
mov
daa
aas
mov
fmuls
add
pop
lret
pop
lea
jg
clc
mov
xchg
testl
or
mov
xchg
adc
or
fsub
pop
lods
and
dec
jmp
dec
sub
ret
ja
add
cmp
gs
dec
jne
mov
sub
cmp
pushl
add
dec
loope
xor
push
scas
inc
pushf
sbb
test
into
pop
dec
jne
mov
or
and
xor
sbbb
lea
jmp
xchg
imul
cmp
add
stos
adc
pusha
imul
outsl
add
nop
pop
dec
and
ficoms
cmp
and
adc
int3
into
push
andl
sbb
or
adc
add
cmpsl
push
clc
inc
std
dec
lods
pop
lods
push
add
add
scas
sub
xor
mov
pop
cmc
mov
arpl
fdivl
lea
xor
clc
daa
pop
mov
out
xor
mov
mov
es
jl
cmp
jge
xchg
ffreep
sub
sbb
adc
inc
pop
mov
adc
jmp
inc
jmp
push
stos
mov
and
push
xor
pop
cld
loope
jl
sub
mov
mov
add
cs
sub
add
lea
inc
dec
movsb
push
push
jo
sbb
or
mov
in
sahf
cltd
mov
push
mov
sub
in
fstpt
xlat
adc
imul
add
gs
cmp
pop
sub
jmp
push
mov
lea
lock
inc
cmp
sub
popa
add
fildll
push
decl
dec
js
mov
inc
jae
adc
add
push
pop
adc
shlb
inc
lret
aaa
fstl
sub
mov
xchg
inc
sbb
pop
in
cli
add
lods
and
sbb
mov
jl
das
loopne
in
pop
sub
push
jecxz
cld
in
sub
mov
sar
pop
cmp
dec
add
enter
xchg
das
dec
jle
jmp
pop
dec
fsubrs
hlt
in
fldlg2
lock
mov
pop
ret
lods
push
faddl
mov
std
shlb
fistps
push
push
fcmovne
adc
les
push
push
push
sub
ss
cmp
jne
insb
and
push
cmp
call
pop
shrb
push
repz
mov
sbbl
pop
movsb
sbb
push
aad
sbb
and
jns
pop
mov
and
addl
dec
push
outsb
clc
in
das
int3
pop
pushl
mov
and
out
jae
xchg
pop
add
and
fadd
add
mov
push
loop
outsl
add
shr
fistpll
sub
inc
mov
add
cmp
popf
lock
inc
push
pop
jle
lcall
xlat
aas
pop
lret
js
out
call
sbb
xlat
pop
insb
lock
or
cmpsb
push
push
inc
popf
xor
xor
lcall
data16
sbb
push
cvtps2pd
or
inc
popa
mov
aaa
aaa
mov
ret
insl
mov
stos
cmp
jge
shl
xchg
pop
dec
cmp
push
out
sbb
scas
mov
stos
sub
cmp
push
insb
add
add
dec
or
cs
mov
imul
cwtl
xor
pop
stos
sbb
cmp
aad
enter
sub
mov
push
mov
sub
je
or
xor
jo
lea
dec
cmp
fs
cs
jmp
cmp
cmp
and
je
cmp
clc
decl
and
or
je
cmp
dec
cmp
je
mov
dec
sub
cli
xchg
outsl
jns
lahf
and
mov
add
scas
incb
das
out
jmp
stos
aad
push
cs
add
roll
adc
cmp
pop
jmp
mov
aad
cmp
mov
ja
pop
scas
push
jmp
in
cmp
xlat
adc
repz
mov
call
sub
xchg
loopne
fcmovnbe
dec
shll
jbe
js
repz
test
jnp
adc
jnp
add
jg
inc
and
lret
pop
in
xchg
cmp
out
xor
pop
xchg
aaa
xchg
jmp
daa
push
dec
insb
sub
nop
xchg
pop
enter
test
sar
cmp
jmp
test
lock
test
icebp
jmp
cmpsb
fldt
test
jns
xchg
test
sbb
pop
push
jb
out
adc
push
out
add
cld
xchg
mov
clc
push
pop
add
sarl
add
dec
pop
sbb
mov
aas
pop
push
mov
subb
mov
or
je
or
dec
or
sub
push
je
pusha
adcb
pop
movl
scas
test
push
gs
jmp
pop
in
arpl
aaa
mov
mov
cmp
repz
jmp
pop
stos
push
cmp
aas
mov
add
jns
xor
cmp
daa
mov
inc
adc
and
rorl
adc
xor
push
pop
rcrb
inc
outsb
dec
daa
out
cmpb
in
inc
push
nop
inc
inc
sahf
popa
jge
pushf
sub
test
sub
pop
xchg
subl
jne
sub
fwait
aaa
mov
jmp
cmpsb
std
daa
adc
lds
dec
xor
add
daa
cltd
fisubs
clc
or
ja
sti
add
add
inc
ljmp
mov
icebp
mov
jno
add
repnz
mov
add
dec
inc
sbb
fcompl
es
adc
in
enter
pop
movsb
nop
push
leave
push
jle
sbb
cmp
call
pop
daa
xchg
xchg
push
push
mov
cmpsb
shlb
test
ja
push
loopne
inc
adc
sub
xor
les
fsubrl
inc
push
loope
mov
into
mov
scas
jmp
lea
and
sarl
or
rcrl
pop
pop
ret
push
adc
aaa
adc
jg
and
sbb
leave
jne
in
pop
or
je
vmwrite
neg
mov
arpl
adc
add
sbb
neg
sbb
and
int
test
xor
jg
push
shl
rcl
rcl
rcl
cmp
jb
scas
cmp
jb
sub
sbb
inc
loop
pop
add
shl
ret
js
mov
loopne
filds
div
adc
pop
notl
pop
pop
sub
or
mov
mov
stc
std
jle
mov
cli
repnz
or
add
pop
dec
inc
shl
or
movsl
pavgb
ss
rorb
cld
aas
lods
rcl
ljmp
lock
mov
dec
adc
push
or
test
sub
inc
cmpsl
inc
cmpb
mov
and
mov
sub
lcall
add
add
mov
inc
and
sub
xchg
jmp
je
es
fcmovb
pop
pop
fadds
sub
inc
xchg
div
jecxz
gs
ljmp
jb
jg
xchg
pop
out
daa
mov
and
test
out
xor
sbb
aaa
jmp
push
inc
cmpsb
subb
mov
jmp
jl
lcall
outsb
sub
jbe
jmp
jg
mov
pop
pusha
mov
shld
xlat
ret
add
adc
mov
xchg
push
inc
xor
ljmp
dec
ficompl
push
sub
pminub
enter
xorl
rorl
xchg
jne
xchg
int3
cs
jg
or
inc
mov
add
dec
aas
sub
pushf
loopne
rcll
nop
sub
or
and
xchg
fildl
sbb
setb
jmp
setl
cmp
je
dec
cmp
adc
add
rorb
iret
arpl
adcb
mov
movsl
jno
scas
cmpxchg
mov
lock
push
les
push
push
pop
lcall
mov
test
fisttpll
mov
test
jg
mov
push
clc
pop
pop
mov
and
mov
lods
loopne
inc
imul
outsb
mov
scas
pop
psllw
rorb
inc
add
in
add
adc
mov
or
stc
jle
es
testb
call
fmuls
and
cmp
je
andl
daa
jmp
add
mov
cmp
jge
inc
mov
xchg
dec
imul
add
mov
sub
add
lea
mov
les
divb
mov
pop
decl
stos
sbb
jl
jo
adc
in
xchg
jge
or
sub
test
jmp
mov
adc
into
stos
xor
dec
push
dec
shll
fsubrl
enter
mov
or
in
mov
add
cmpsl
cmpl
jle
loope
subl
or
xchg
dec
jno
and
jns
pop
das
add
or
cmp
pop
test
js
sti
pop
dec
jne
enter
mov
cmp
and
xor
lahf
inc
pop
lock
jne
aaa
push
jp
adc
cmp
inc
pop
sbb
dec
jbe
inc
icebp
pop
pop
ret
pusha
scas
adc
dec
push
push
push
mov
incl
fisubrs
cmp
out
pop
pop
jae
in
sbb
into
and
pop
inc
mov
push
mov
sbb
in
loop
sub
jnp
jne
xchg
pop
add
fcompl
fnstenv
mov
inc
and
push
pop
or
xchg
inc
imulb
cmp
add
mov
push
xor
adc
aam
jno
mov
rol
clc
add
aam
adc
push
jecxz
jmp
pop
lahf
add
daa
cmp
jne
fisubrs
mov
push
clc
inc
jg
mov
cltd
push
in
dec
loop
cmp
inc
push
inc
mov
push
fimull
sbb
das
pop
test
xor
add
rcll
mov
das
mov
pop
insb
mov
cmp
std
mul
cmp
js
pop
jne
add
jmp
lret
cmpb
imul
and
roll
in
lret
jle
ja
jne
movb
fisubrs
popf
lea
mov
insl
movl
rolb
roll
cli
dec
jg
in
inc
push
push
lds
mov
jns
aaa
xor
je
push
ds
dec
jg
loop
je
push
add
cmp
arpl
filds
sub
dec
push
push
mov
inc
mov
add
pop
sahf
test
dec
jmp
push
mov
jb
gs
xor
cs
insb
cmp
je
push
popa
je
dec
popa
insl
gs
test
pushf
loop
outsl
loopne
sbb
out
or
movb
das
mov
int3
push
pop
test
and
and
sbb
sbb
pop
jo
push
xchg
pop
dec
in
or
push
push
cwtl
call
test
inc
clc
int3
xchg
jo
rcl
aas
into
sarb
idivb
repnz
pusha
pop
inc
and
pop
mov
sti
xchg
notl
push
lods
repz
push
and
mov
mov
repz
or
rol
mov
fdivrs
and
popf
jmp
dec
cmpb
stos
pop
cmp
jne
adc
xchg
scas
jns
popf
inc
andb
sarb
ret
or
push
mov
lock
das
jo
pop
insb
outsl
repz
js
sti
adc
add
mov
mov
popa
jb
out
push
pop
mov
jae
aaa
lock
dec
rol
int3
ret
dec
lock
mov
push
add
push
testl
xor
pop
jbe
push
sub
mov
push
mov
inc
mov
pop
mov
daa
mov
testb
sti
add
mov
fmuls
add
pop
jo
or
les
das
cli
mov
js
dec
mov
adc
mov
out
test
push
jmp
or
xchg
mov
jne
in
and
cmp
popa
inc
ss
and
stos
and
mov
mov
fsubp
sub
add
mov
ret
fcompl
mov
cmp
jne
sub
cmpsb
xchg
pop
mov
and
les
repz
push
or
sbb
add
and
dec
xchg
pop
mov
pop
popf
or
push
inc
call
lahf
je
sbb
xchg
movaps
adc
mov
pop
pop
and
sbb
mov
mov
pop
pop
ret
sbb
xor
sti
aam
sub
adc
jmp
pushf
mov
test
add
clc
push
lahf
dec
adc
repnz
pop
push
enter
or
xchg
aam
mov
jbe
js
xor
lea
int
inc
ret
lea
push
insl
lea
and
lahf
jge
shll
adc
xor
mov
xchg
jmp
ficompl
repz
xor
jg
daa
push
cli
xchg
add
decl
cmp
ja
mov
inc
jmp
cmp
pop
std
std
aas
clc
add
pop
cld
ja
fcmovb
jmp
or
mov
adc
and
imul
loop
lret
add
gs
sti
in
and
and
shr
xchg
imul
add
mov
add
faddp
xchg
mov
add
or
xor
adc
dec
jbe
pop
add
xor
sbb
lea
ret
pop
test
hlt
xor
cmp
pop
bswap
shl
lret
out
cld
test
jmp
inc
cld
loopne
cmp
inc
test
je
or
call
loope
and
je
cmp
adc
mov
and
cmp
jne
int3
dec
mov
and
nop
shl
or
mov
pop
lea
out
testb
adc
xchg
push
adc
inc
fwait
orl
or
xorb
adc
stos
clc
cmp
add
and
inc
inc
mov
dec
ret
xor
cs
cli
xorb
sbb
xor
cs
jb
inc
sbb
sub
out
stc
xchg
xchg
rcrl
pop
ficomps
mov
mov
je
adcl
lea
dec
sub
and
add
in
pusha
inc
push
and
xor
arpl
and
mov
dec
outsl
jmp
adc
push
xor
adc
push
pop
cmp
mov
pop
jp
or
jl
pop
jne
jo
rolb
imul
nop
adc
xor
and
jl
xchg
dec
push
aaa
mov
ss
add
pushf
jbe
hlt
xchg
cmp
cltd
dec
insb
lahf
or
and
push
add
jl
cmc
cmpb
jge
push
mov
pusha
inc
pop
cmp
push
xor
sbb
sub
jle
clc
xor
push
daa
pop
push
clc
pop
pop
xor
pop
lea
push
push
dec
adc
nop
test
mov
add
sbb
test
loop
jge
pusha
lock
xchg
mov
es
repz
inc
incl
push
nop
and
loope
dec
rclb
call
mov
or
clc
loopne
ljmp
sbb
movb
jae
inc
xor
nop
lahf
push
flds
and
dec
popa
and
je
cmp
in
xchg
loop
aas
sti
adc
inc
cmp
cld
mov
cmp
sub
jg
cmp
jbe
shrb
and
xchg
sub
nop
mov
pop
mov
and
mov
nop
js
push
push
je
xchg
jae
pop
addr16
cmpl
or
imul
cmp
jge
sub
or
mov
mov
mov
jbe
sti
test
jne
imul
lods
push
cmp
ret
mov
sti
xor
fcmovnb
mov
lahf
jno
dec
outsb
stos
push
add
neg
mov
lods
sub
mov
mov
lods
jne
sti
push
mov
pushf
push
mov
arpl
testl
adc
xor
mov
push
or
xchg
jne
mov
in
roll
inc
add
add
cmp
push
dec
push
or
test
je
je
or
add
xor
mov
and
outsl
fs
gs
daa
gs
out
jb
jns
es
popa
bound
inc
jle
cs
push
outsl
arpl
inc
gs
jle
sti
popaw
jne
je
dec
outsl
je
imul
lea
xlat
idivw
arpl
or
or
in
sarb
xor
xor
outsl
aas
clc
ljmp
outsl
inc
outsl
js
imul
ja
nop
jo
cmp
rol
fidivs
dec
inc
xor
je
dec
add
dec
mov
test
fs
inc
movsb
mov
push
cwtl
xchg
nop
leave
inc
push
sbb
xor
aam
jmp
and
adc
or
sbb
inc
mov
ss
push
push
cld
dec
nop
jg
push
sbb
sarb
mov
nop
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
js
jo
nop
inc
push
insb
push
sbb
pop
inc
push
sbb
dec
push
sbb
inc
inc
cmp
fs
inc
cmp
fs
inc
push
sub
and
inc
push
sbb
sbb
inc
push
sbb
or
sbb
add
cld
mov
enter
hlt
lock
in
call
xor
orl
aam
int3
enter
and
shr
pop
nop
inc
push
mov
sbb
call
or
enter
add
cmp
clc
hlt
nop
inc
push
sbb
in
call
in
faddl
sbb
aam
int3
sbb
enter
nop
inc
push
mov
push
sbb
sbb
pushf
push
sbb
xchg
nop
mov
fs
inc
mov
jl
je
inc
push
sbb
push
fs
pop
push
sbb
push
push
dec
sbb
dec
inc
inc
fs
inc
push
cmp
xor
inc
push
sbb
sub
inc
push
sbb
sbb
sbb
adc
or
fs
inc
or
in
daa
pop
cld
mov
int3
mov
push
sbb
enter
sbb
test
mov
mov
shlb
mov
push
sbb
mov
jl
je
sbb
insb
push
push
pusha
pop
pop
nop
inc
push
sbb
inc
push
sbb
inc
push
sbb
cmp
sbb
sub
and
nop
inc
push
and
nop
inc
push
sbb
or
push
sbb
add
enter
clc
hlt
lock
and
and
popa
orl
ror
mov
enter
sbb
mov
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
xchg
test
enter
jo
leave
and
enter
pop
pop
enter
push
push
dec
and
inc
orl
cmp
xor
or
enter
and
enter
sbb
enter
adc
or
orl
add
push
sbb
in
mov
hlt
lock
in
call
push
loopne
fcoms
ror
inc
push
sbb
rolb
fs
mov
fs
inc
lods
test
fs
inc
push
mov
push
sbb
mov
jl
je
sbb
insb
push
push
pusha
pop
pop
nop
inc
push
sbb
inc
push
sbb
inc
push
sbb
cmp
sbb
sub
and
outsl
inc
push
and
mov
rol
loop
or
ret
shr
mov
outsb
pop
push
xor
mov
push
jo
and
mov
pop
or
outsl
not
out
push
and
cmpl
daa
lret
or
pop
call
push
sub
push
ja
add
in
jge
cli
pop
lahf
pop
daa
mov
xchg
and
inc
add
dec
sub
cvtpi2ps
pop
add
sbb
lods
add
ss
and
push
add
pusha
movsb
mov
inc
or
adc
sbb
and
jnp
subl
shrb
cmp
xchg
mov
push
ret
mov
or
stos
jo
add
add
stc
fldenv
lock
push
or
in
repnz
jge
aas
das
push
push
inc
arpl
rcrb
push
mov
inc
push
fs
adc
or
dec
jb
aas
inc
pop
or
dec
and
test
inc
add
gs
add
dec
push
fwait
cmp
inc
inc
dec
add
outsl
jnp
push
and
pop
push
dec
dec
dec
pop
inc
push
dec
pop
and
rorl
in
out
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
fs
ja
out
test
and
mov
js
leave
orl
dec
mov
lock
inc
fisubrs
icebp
repnz
inc
push
sbb
cmc
testb
fs
stc
push
sbb
sti
cld
std
sbb
jmp
fs
inc
push
loope
jecxz
inc
push
sbb
in
inc
push
sbb
jmp
ljmp
inc
out
out
shlb
push
rcl
rcll
aad
inc
push
sbb
flds
sbb
fcmovnu
fstpl
fs
inc
shlb
rol
nop
inc
push
sbb
push
sbb
leave
push
sbb
lret
int3
int
fs
inc
into
iret
mov
nop
inc
push
mov
mov
inc
push
sbb
fs
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
cmpsl
test
push
sbb
stos
lods
lods
in
ret
fs
or
insb
jb
movups
cs
sub
movb
addr16
mov
jp
scas
mov
sbb
lock
inc
js
gs
imul
aam
xlat
add
cwtl
adc
or
push
and
lods
in
hlt
pop
hlt
std
mov
push
inc
inc
bound
je
dec
jbe
aam
mov
sub
mov
jo
nop
movsb
mov
nop
inc
xchg
or
dec
jne
dec
dec
gs
imul
ja
jge
xchg
inc
dec
outsb
inc
xchg
mov
mov
scas
pop
and
add
pop
xchg
xor
xor
daa
xchg
orl
or
adc
loope
in
adc
inc
in
pusha
sbbl
outsl
push
enter
inc
inc
imul
cld
pop
gs
nop
rol
inc
and
popa
outsb
sbb
cld
pop
cmpl
jbe
jb
insb
outsl
ja
mov
or
and
push
or
sbb
js
gs
int3
scas
int3
incl
and
sub
outsb
jbe
insb
imul
nop
and
and
imulb
push
xchg
insb
jle
gs
push
adcl
xlat
aam
mov
andnps
mov
sub
or
inc
add
sub
and
push
outsl
imul
mov
movl
lods
mul
mov
or
inc
inc
dec
shrb
mov
adc
add
add
jae
push
adc
test
mov
js
push
jb
insb
adc
aam
lds
hlt
or
push
inc
sti
arpl
nop
test
push
jge
jl
or
je
insb
inc
xlat
lods
push
push
pop
test
ds
sbb
add
jle
adc
inc
addb
test
mov
or
out
jb
fiaddl
mov
cmpsl
or
push
data16
mov
jg
and
push
xor
and
scas
ds
sub
arpl
insb
ja
mov
jle
add
aaa
xor
dec
dec
pmulhuw
dec
movntq
sub
mov
and
addr16
loop
pop
adc
adc
jb
popa
fs
lds
int3
add
in
leave
loopne
enter
das
push
jmp
aam
cmpsb
mov
inc
aam
imul
pop
cmpsb
imul
decl
dec
pushf
fists
jno
cmp
mov
sbbl
adc
adc
jge
push
dec
jne
push
mov
popa
jo
adc
push
fld
lock
lock
outsb
arpl
cmp
frndint
pop
rolb
cmpsl
sbb
div
pop
loop
and
adc
mov
pop
push
mov
mov
mov
out
cltd
scas
or
pop
ret
cmpsl
enter
push
aas
dec
loop
push
test
cltd
pop
lods
dec
popf
mov
mov
jl
jno
push
mov
iret
js,pt
unpckhps
or
loop
loop
or
rcrl
aas
int3
pushf
in
cmp
adc
ret
out
sub
movl
sbb
movsl
or
rcr
cmpsl
or
aaa
pop
adc
mov
inc
inc
dec
inc
jmp
xchg
movsl
mov
add
xor
xor
or
or
mov
cmp
jbe
cli
pop
ret
cmp
repz
je
movzbl
pop
push
decl
decl
loopne
loop
js
repz
jne
xchg
mov
push
jne
inc
inc
aas
push
mov
add
pop
jmp
cltd
out
sbb
outsb
mov
incl
out
std
out
and
sti
je
loope
out
sub
pop
jp
lods
pop
xchg
sbb
lret
sarb
lds
mov
push
push
mov
aam
adc
inc
xchg
xchg
or
aam
push
mov
sbbb
ret
push
arpl
xchg
in
ret
addr16
mulb
mov
sbb
pusha
outsl
add
inc
inc
lock
xchg
shlb
inc
mov
adc
jno
enter
aas
push
lock
repz
cmpb
jbe
sub
mov
lds
pop
repz
clc
imul
lret
inc
xorl
nop
pop
lahf
cmp
leave
sti
push
inc
jae
repz
sub
sbb
ja
mov
cmp
pop
not
sub
mov
push
xor
dec
dec
inc
mov
xor
in
push
add
sub
xchg
sub
je
jae
cmp
fstpt
cmc
jl
inc
mov
pushl
adc
je
decb
mov
jae
inc
dec
jne
xor
or
jne
cs
push
imull
dec
push
mov
mov
shl
icebp
dec
lahf
test
cli
cmp
sysret
mov
pop
ljmp
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
cld
push
outsl
cwtl
nop
mov
pop
stos
mov
mov
dec
es
xor
sbb
pushl
mov
sar
loopne
sbb
sbbl
lods
lea
movb
int3
add
cmpsl
mov
loopne
stc
orw
adc
std
and
mov
add
inc
mov
mov
or
fs
push
fildll
fistps
ret
add
add
sub
add
loopne
icebp
sti
rorl
fdivr
mov
xor
dec
xlat
scas
inc
pop
sub
loopne
jae
ljmp
dec
or
ffree
ffree
ffree
mov
repnz
add
test
frstor
push
ret
cmp
loop
and
out
loop
daa
cmp
add
push
mov
adc
nop
xlat
pop
jno
ficoms
hlt
lock
enter
lock
mov
popf
bswap
or
sahf
mov
fwait
lcall
sbb
fidivl
or
xchg
and
jns
cmpsl
mov
mov
daa
aas
inc
mov
cmp
mov
sahf
mov
jmp
lock
adc
je
dec
xchg
mov
mov
xor
mov
jns
in
nop
cmp
dec
dec
dec
add
ror
jp
pop
add
cmpsb
push
movb
repnz
icebp
add
loopne
and
out
mov
dec
mov
adc
je
push
cmp
jmp
adc
loopne
je
mov
stos
pop
add
lea
sub
lods
ud2
testb
add
fcomps
xchg
add
dec
ss
push
inc
dec
pop
inc
fidivrs
js
pop
addr16
inc
nop
mov
fs
add
ret
add
out
lahf
add
pop
dec
add
data16
punpckhdq
bound
test
sbb
xchg
xchg
jmp
and
lds
mov
adc
cmp
sub
add
mov
clc
or
push
out
in
add
add
adc
pop
inc
ja
add
xor
push
push
cmpsb
dec
inc
push
sub
mov
imul
xor
push
xchg
sbb
jae
in
mov
inc
jbe
dec
test
jns
aas
mov
dec
mov
imul
push
in
out
out
push
negb
sbb
inc
mov
adc
pop
out
popa
cmp
or
add
in
imul
stos
cmpl
or
push
mov
and
adcl
clc
pushl
add
into
adc
jne
idivb
enter
pop
push
and
repnz
or
mov
pop
loopne
inc
lods
stc
inc
pop
add
loopne
inc
xchg
repnz
push
pushl
sbb
incl
mov
sub
fwait
icebp
mov
dec
sbb
hlt
mov
repnz
popf
jne
dec
push
loopne
jo
jg
lcall
jmp
mov
sub
push
mov
lock
int
pusha
mov
out
aaa
pop
cmp
dec
out
sarl
mov
sbb
adc
xchg
sub
and
lods
notl
push
rorl
pusha
xor
push
adc
sbb
enter
push
and
push
daa
enter
jnp
push
fldenv
cld
push
jnp
es
xor
cld
imull
out
call
xor
vunpckhps
mov
dec
cld
or
xor
imul
adc
ret
nop
or
mov
int3
pushl
les
outsl
das
scas
mov
mov
lahf
das
movsb
adc
lea
es
pop
dec
mov
addr16
out
popf
cmp
xchg
hlt
imul
lret
cmp
mov
aad
shl
ds
pop
pop
ret
in
ror
dec
mov
and
pop
lret
xchg
pop
fstps
xor
sub
mov
pusha
cmpsl
fcmovu
pop
and
cmpsl
fwait
pop
adc
stos
les
push
mov
mov
xlat
mov
cltd
icebp
jg
xor
xor
repz
mov
mov
jbe
popf
rolb
insl
mov
cli
lods
cli
ljmp
je
dec
mov
mov
add
or
mov
xchg
pop
jmp
insl
add
loopne
repz
call
jne
add
inc
inc
movlps
xchg
inc
dec
je
mov
into
mov
pop
sub
jbe
sbb
lods
push
aam
or
push
add
mov
les
adc
mov
cmp
insb
push
pop
int
ret
or
cld
into
jo
test
dec
jl
pop
inc
mov
mov
loopne
add
inc
outsl
jbe
pop
clc
pop
inc
mov
cmp
jbe
mov
dec
sub
dec
outsl
js
add
les
dec
fisttpl
les
and
and
testl
fs
pop
fwait
sub
mov
cmp
je
fisttpl
sbb
mov
jmp
xor
xchg
push
xchg
add
xlat
xchg
push
lods
mov
jge
adc
mov
mov
or
and
and
shll
insl
sub
sub
dec
jg
dec
bnd
mov
in
std
mov
pop
add
andb
jne
das
hlt
and
fisttpll
loope
mov
push
aam
movsb
inc
mov
fadds
das
ds
scas
pop
jecxz
jae
fildl
jge
xchg
or
lret
roll
xchg
pop
add
imul
and
stos
sbb
cmpl
push
sbb
jg
and
mov
jmp
sub
jb
cmp
ja
movsl
loopne
les
call
rolb
and
inc
mov
dec
mov
adc
sarb
or
repz
jne
ret
je
xchg
ret
and
mov
lahf
in
add
pop
pop
jne
pop
pop
sti
lea
mov
fwait
push
add
and
fsts
mov
pop
sbb
rorl
imul
in
es
jg
insl
nop
mov
push
xor
faddl
aas
dec
add
sub
pop
rorl
jg
cld
lea
and
ret
add
lahf
hlt
xchg
cmp
sub
cmpsb
or
outsl
mov
push
cwtl
jmp
imul
outsl
adc
add
or
and
jne
cwtl
pop
ret
sbb
mov
jbe
mov
aad
or
jmp
aas
pop
cltd
leave
inc
inc
mov
cmp
mov
mov
cld
aas
and
jnp
popa
je
cld
call
pop
jns
mov
push
add
data16
popa
mov
inc
pushl
ja
or
jmp
movsl
pop
std
and
dec
mov
cltd
pop
ds
nop
loopne
cltd
leave
xor
out
mov
add
xchg
jg
sub
inc
je
mov
or
add
jnp
adc
dec
jge
mov
mov
clc
push
pop
cmp
jbe
mov
clc
push
and
ret
fdivrl
xchg
cmovp
adc
xchg
mov
inc
iret
dec
test
stc
xchg
ret
xor
and
pop
push
push
pushf
int
movsb
popa
add
imul
jge
daa
daa
and
mov
push
push
cmpsb
imul
icebp
pop
insb
and
nop
pop
xor
cmp
mov
sbb
test
stc
add
movsb
faddl
or
add
lods
jge
push
cmc
cmp
fldl
insl
clc
dec
cmp
imul
out
or
sbb
das
rcr
cmp
jl
jmp
add
es
cltd
ret
rclb
lea
jnp
call
push
lea
cmpl
cmpl
add
push
mov
neg
jmp
or
push
js
dec
mov
stos
xchg
push
mov
xchg
cli
xchg
lea
in
or
jg
dec
mov
stos
and
add
clc
pop
pop
ja
dec
sti
add
in
fwait
sti
mov
iret
cmp
mov
mov
mov
cmp
aad
mov
add
jns
or
jge
pop
jle
adc
rolb
daa
lret
mov
add
dec
push
xchg
jge
fcomps
fimuls
mov
sub
push
lahf
testb
dec
mov
pop
pop
xlat
add
sub
jge
fldt
or
or
mov
add
lea
sbb
call
imul
sub
popf
jmp
std
push
push
jmp
fs
sahf
dec
dec
inc
dec
inc
dec
lods
or
cld
mov
xor
jge
add
stos
ret
ljmp
dec
aam
adc
stc
std
jl
clc
dec
jp
pop
sbb
addr16
mov
stos
neg
sbb
stos
jmp
inc
inc
mov
mov
clc
push
adc
push
pop
inc
clc
dec
mov
pop
pop
test
fldenv
inc
pop
dec
sbb
sub
xlat
add
leave
mov
mov
mov
push
aam
mov
insl
cmp
ss
mov
sub
scas
je
mov
dec
mov
clc
mov
mov
je
dec
jne
sbb
faddl
mov
xor
jle
repz
sti
add
je
inc
jne
pop
dec
jne
fwait
and
mov
jecxz
or
jp
pusha
stc
repnz
mov
adc
call
xchg
iret
mov
jg
inc
je
push
push
cmp
xlat
outsl
adc
sbb
out
testl
lea
or
mov
lret
ret
and
inc
add
and
out
sti
xor
sub
sub
sub
xor
addr16
sub
sbb
and
sub
pop
sub
or
pop
in
push
sub
sub
sub
cmpsl
loopne
rclb
mov
je
mov
or
xchg
and
adc
testw
mov
or
lock
inc
xor
inc
inc
push
cwtl
fldt
mov
aas
imul
adc
mov
inc
fabs
push
pop
jne
iret
adc
push
pop
frndint
rcr
scas
insb
or
fstps
std
fcomip
fwait
mov
testb
je
fidivl
jne
lea
icebp
jmp
fstpt
inc
sub
xchg
shr
and
add
push
std
loop
cmp
xor
stos
mov
add
jns
fwait
aas
rorl
or
or
cmpb
jb
jg
out
and
dec
js
decb
and
ja
jmp
data16
fbstp
enter
cmp
inc
xor
rolb
shr
mov
push
add
xchg
out
xor
stos
inc
push
push
adc
dec
fldcw
rorl
test
jb
pop
or
or
sti
lock
pop
mov
packuswb
jg
sbb
jae
dec
add
xor
aam
mov
fildll
cli
add
outsb
js
ret
or
mov
cmpsl
cwtl
mov
jl
xchg
sbb
cli
add
jne
dec
sub
cmp
mov
inc
or
sar
inc
ljmp
enter
cmpb
loope
loopne
divl
pop
jmp
mov
adc
iret
inc
add
stc
add
or
push
jns
dec
push
push
icebp
fwait
cmp
std
decb
mov
cmp
lods
or
ret
jp
nop
mov
cmp
out
psubusw
inc
sbb
dec
and
jne
inc
push
add
lret
jb
add
jg
jne
mov
jne
xor
jg
mov
xor
add
aas
jmp
fstpt
or
sub
mov
cmp
test
insl
and
push
addl
jg
add
and
ljmp
pminub
inc
pushf
adc
jmp
aaa
mov
negl
rolb
sbb
push
push
inc
imul
pop
cmp
sub
add
inc
cmp
ljmp
mov
test
push
notb
lods
fistps
mov
jmp
push
stc
inc
loopne
jno
mov
mov
xchg
jns
push
jmp
loop
adc
pusha
addl
and
xchg
sbbb
iret
pop
stos
jge
mov
mov
fldt
push
fwait
outsl
push
xchg
adc
mov
js
cmp
cmp
inc
or
dec
arpl
cli
jno
adc
mov
xor
pop
xchg
or
rcrl
test
jp
clc
pop
or
pusha
pop
inc
sbb
or
cmp
inc
stc
inc
xor
inc
popf
pop
jae
inc
cli
xor
filds
imul
out
enter
shr
add
sub
adc
add
cmc
sub
fstpl
fwait
es
pop
mov
add
mov
movsb
dec
fildll
les
inc
sbb
sub
mov
push
mov
lods
test
xor
leave
insb
pop
out
jg
mov
jp
sub
jne
add
loopne
push
aam
dec
mov
sub
mov
push
mov
fstps
cmp
mov
movsl
fstp
xlat
and
call
repnz
cltd
push
pop
enter
add
and
fldenv
mov
sbb
sbb
mov
nop
rclb
push
inc
pusha
add
push
lock
idiv
add
stos
or
pop
xlat
lea
lea
loope
mov
addb
ja
and
push
jb
or
jb
sti
insb
sti
cmp
push
clc
nop
fidivl
adc
push
out
adc
add
inc
dec
jne
sub
dec
mov
aas
cltd
and
xchg
cli
idiv
imul
fisubrs
lahf
add
sub
aas
pusha
ds
add
popa
ret
push
sub
clc
or
inc
cmp
or
push
clc
sbb
adc
lea
xchg
xchg
pop
xor
mov
pop
and
dec
in
test
jg
mov
mov
int3
movsb
psubb
or
clc
add
xchg
sahf
pop
and
fisttps
idivl
cmp
jl
addl
add
jge
shl
lock
lods
mov
xchg
mov
add
or
dec
lock
imul
ljmp
add
add
mov
xchg
sub
dec
mov
pop
loop
inc
mov
out
lea
lahf
push
jns
mov
push
xor
cmp
jns
or
sbb
inc
jmp
jae
addr16
mov
mov
ret
sbb
aaa
jbe
or
or
xchg
jmp
out
mov
mov
sbb
inc
roll
ror
outsl
inc
mov
in
and
or
fbld
iret
sub
sbb
push
lret
fwait
out
cmp
push
adc
mov
inc
fnsave
adc
sbb
lret
das
insb
xor
adc
pop
and
subb
cld
cli
add
and
cmp
mov
sbb
xchg
and
pop
sub
jo
xchg
adc
cmp
add
xor
pop
test
adc
pop
aas
xchg
mov
add
loopne
in
sarl
icebp
cmovae
mov
adc
rcrb
sub
mov
mov
xor
inc
daa
push
mull
or
sti
je
sbb
gs
lea
inc
hlt
out
push
jnp
add
cmpb
jne
into
mov
lret
or
lea
or
xchg
xchg
arpl
mov
movsb
adc
inc
in
add
jecxz
inc
pop
dec
push
in
jge
call
ljmp
into
daa
cmpsb
call
mov
jb
enter
mov
ret
jo
inc
popa
adc
lock
out
repnz
or
jp
or
inc
xchg
sub
in
xchg
jo
je
push
stos
inc
sub
sbb
lea
push
mov
pop
lods
iret
jmp
es
or
xor
add
enter
popl
dec
pop
add
sub
mov
mov
push
pusha
shl
add
lods
rcrl
xor
dec
lea
mov
pop
popa
push
mov
mov
imul
int
add
addr16
iret
in
add
mov
int
bswap
add
jmp
pusha
cmp
ljmp
loope
sbb
push
inc
cmpb
jne
push
or
or
or
cmc
mov
inc
xchg
emms
sub
popa
fadds
fdivrl
cltd
stos
jo
lcall
iret
fildl
mov
pop
incl
stos
and
dec
pop
jecxz
rolb
sub
fwait
fs
add
ljmp
cmp
pop
inc
push
out
mov
and
addr16
jns
mov
dec
inc
mov
lahf
js
lcall
or
cmp
jne
mov
xor
aas
sahf
mov
xchg
fisubs
push
cli
xchg
xor
xor
jmp
cmp
push
insb
prefetchw
frndint
out
lahf
or
or
add
add
add
pop
ret
sub
or
add
fwait
roll
lock
sub
pop
mov
icebp
fs
mov
dec
mov
call
into
mov
pop
jno
je
lock
and
lret
test
mov
cltd
nop
mov
std
push
pop
in
mov
mov
mov
dec
push
lea
and
pop
xchg
fcoms
movsb
fdiv
dec
push
inc
lock
dec
mov
lock
inc
sub
insl
push
xchg
xor
leave
jge
pusha
sub
fisttpl
dec
push
xor
add
aad
inc
add
rolb
les
sub
or
jge
mov
adc
mov
fs
lods
adc
ljmp
cmpsl
cld
sbb
ja
jl
clc
mov
dec
jg
je
mov
stc
mov
pop
sbb
pop
sub
je
pop
je
jmp
sbb
mov
mov
test
mov
push
enter
mov
jne
rolb
jmp
inc
mull
add
or
scas
ljmp
outsl
dec
push
inc
jmp
ret
lea
call
inc
or
or
sbb
pop
repnz
fcomip
in
mov
push
pop
inc
call
push
out
add
sbbb
movsb
test
mov
mov
lock
xchg
cmp
xlat
jne
mov
aam
cltd
jle
cmp
add
addl
mov
push
daa
jns
add
ja
lcall
lret
pushf
inc
dec
pop
xchg
fldpi
mov
nop
add
mov
cmc
and
in
inc
xchg
les
sub
adc
add
sti
out
ret
mov
adc
adc
sub
push
call
sub
lods
into
jge
enter
loopne,pt
add
cltd
fisubrs
mov
cwtl
or
cwtl
jmp
sbb
orl
cmc
add
add
testb
sub
cld
sub
mov
add
jmp
sub
sbb
clc
jns
xor
mov
stos
dec
stos
nop
mov
jmp
cli
loope
inc
inc
dec
das
push
dec
mov
into
in
in
or
push
or
adc
or
out
clc
insl
mov
loopne
mov
decb
jne
or
mov
adc
xchg
adc
mov
in
pop
or
adc
test
shlb
adc
pop
xor
push
cmp
jg
mov
jge
in
mov
cmp
sbb
or
movb
sub
pusha
pushf
push
jle
mov
jmp
mov
add
jg
jl
mov
xor
ret
nop
ja
mov
xor
sub
jae
loopne
jmp
sub
sbb
pop
adcb
test
add
lret
fidivs
inc
add
mull
xor
test
or
test
xlat
xchg
cmp
cmp
or
push
les
mov
mov
inc
add
mov
in
adc
push
into
sub
mov
fdivr
loopne
xor
in
cmp
jne
dec
loop,pn
incl
je
fbld
jno
aas
mov
decl
jmp
sub
je
dec
je
sub
sub
je
jmp
sbb
adc
push
push
push
ja
push
inc
mov
adc
fadd
daa
cmpsb
jnp
loopne
push
add
cmp
cmp
enter
and
divb
or
pop
js
adc
ja
call
aam
xchg
mov
and
or
pop
fld
adc
mov
mov
mov
jmp
bsr
pusha
or
jne
lds
sub
hlt
out
inc
cmp
cmp
jg
sarb
lcall
add
fbld
add
add
js
add
scas
scas
mov
adc
pop
push
push
push
dec
cld
gs
outsl
cmp
fadds
sub
in
push
and
jge
in
mov
movl
sbb
push
test
decb
int
int3
mov
mov
mov
push
push
nop
ds
shrb
sbb
or
outsl
loopne
fisttpl
adc
pop
aaa
sbb
pusha
push
sbb
mov
dec
sub
nop
jne
mov
push
hlt
lods
pushf
je
shl
fiaddl
and
dec
repz
jae
xchg
sbb
repnz
orl
cwtl
nop
lock
imulb
jb
sti
cmp
mov
ret
push
mov
and
cli
ret
hlt
and
xor
les
dec
jmp
aaa
repnz
jae
dec
xor
hlt
jmp
sbb
ret
pop
push
aad
clc
jg
or
pop
push
jmp
cmpb
ja
fildll
xchg
daa
or
aad
icebp
sub
pop
data16
mov
add
cmp
jle
and
fs
addb
lret
jne
testb
or
aas
ja
arpl
or
cmp
sub
divb
imul
mov
xor
adc
out
cli
mov
lret
lds
cmpb
shl
lds
das
fcmovnbe
stos
pop
fildl
fcomp
das
mov
daa
pop
ficomps
mov
fsubrs
xor
adc
push
out
loope
lods
add
add
test
sub
mov
xchg
jg
rorb
jne
mov
repnz
dec
push
hlt
fildl
dec
mov
outsl
popf
fstpl
mov
xchg
notl
xorb
jmp
push
mov
dec
add
adc
xchg
push
arpl
lahf
inc
push
and
stos
pop
inc
inc
add
xor
and
jb
lret
mov
lcall
pop
adc
add
push
cltd
nop
xchg
add
pusha
inc
test
int
loop
and
sbb
sahf
ja
jne
push
add
lods
aad
sbbl
or
xor
jae
add
push
or
pop
loopne,pn
into
mov
cli
outsl
inc
or
les
ret
sbb
ja
xor
sahf
inc
xchg
into
mov
sub
adc
or
xchg
cmp
push
pop
lea
or
das
mov
loope
call
in
xor
mov
movsb
dec
repnz
adc
xlat
les
cs
cli
movsb
jl
fnstsw
sbb
mov
sbb
stos
fstpl
fwait
jmp
sbb
jno
adc
aas
loop
ds
repz
dec
push
pop
cli
xor
decl
clc
push
insb
jmp
dec
mov
sub
jb
or
je
or
xchg
stos
jo
lret
add
fwait
clc
sbb
xchg
lods
les
push
in
mov
rcrl
mov
or
jmp
lock
inc
mov
adc
xchg
sbb
mov
add
aam
popa
xchg
call
adc
adc
inc
add
movsl
mov
push
mov
popa
mov
or
fwait
jo
push
pop
dec
push
add
lods
and
rolb
repnz
push
push
inc
stos
mov
dec
mov
shll
inc
inc
dec
lret
dec
adc
inc
lock
repnz
inc
sub
fstpt
scas
rorl
or
inc
mov
es
repnz
push
in
in
fsubl
shlb
in
dec
call
or
in
insb
out
loopne
jne
aas
push
mov
stos
loopne
es
aas
pop
mov
fdivr
push
xor
push
push
jge
je
xchg
cmp
lock
add
movsb
loopne
mov
add
mov
add
sahf
sub
incl
xchg
std
sbb
mov
push
and
fstpl
stos
popf
ret
cwtl
cmpsl
mov
mov
mov
shll
lret
ficompl
std
subl
push
push
pop
cld
xor
cmp
xor
pop
outsl
lret
dec
adc
cmp
jne
push
push
pushf
push
sbb
enter
mov
xor
xor
ret
nop
pop
mov
pop
enter
add
movsb
cmp
loopne
test
addb
sub
xor
repz
adc
jecxz
and
sbb
je
scas
rol
lods
ret
sbb
pusha
sbb
add
jecxz
push
orb
xor
mov
lock
jg
mov
ffreep
lods
add
jle
mov
mov
fs
dec
mov
fsubrs
add
jle
mov
sti
punpckhwd
add
jmp
mov
jo
fdivl
jmp
push
xorb
xor
jmp
in
test
leave
in
jle
pop
mov
orb
xorb
fcompl
add
sub
and
cwtl
mov
sub
imul
test
aas
or
lahf
sarb
imul
pop
shlb
jne
xchg
cmpsl
loope
or
test
dec
cmp
add
fidivs
cmp
sub
cmpsl
dec
mov
ret
inc
test
pop
rep
add
fadd
pop
cld
mov
or
enter
and
fsubs
dec
and
fdivs
and
ret
lcall
ljmp
jecxz
bound
outsb
loop
push
cld
adc
inc
add
loopne
or
lea
out
and
mov
cld
xchg
aaa
push
add
and
data16
lcall
into
in
testb
popf
sarb
mov
xor
sahf
clc
push
lea
aam
aaa
inc
sub
push
popw
sbb
or
cmp
cmc
adc
hlt
mov
mov
add
sub
dec
sbb
push
xchg
inc
int3
dec
lods
sub
cmp
dec
mov
adc
hlt
inc
push
or
sbb
inc
mov
xor
ss
adc
cwtl
cmpl
stos
inc
les
lock
movsl
sub
pop
xor
dec
daa
or
xor
sbb
loopne
xchg
sti
or
add
sub
lea
sub
push
ljmp
dec
or
pusha
inc
popf
mov
mov
jo
mov
mov
or
test
adcb
ja
add
mov
xor
ret
sub
mov
cmp
fwait
xor
sbb
inc
sbb
imul
pop
hlt
cltd
and
cmpb
and
hlt
mov
push
or
xchg
aam
invd
mov
test
mov
cld
aas
jmp
lock
cmp
out
jne
sbb
sbb
lods
push
jmp
pop
psadbw
push
xor
prefetchwt1
cli
data16
mov
pop
pop
iret
mov
xor
jno
push
rcl
lret
jg
cmp
ljmp
fisubs
setl
ljmp
lds
cli
dec
sti
adc
jae
pop
adc
sbb
pop
cmp
lods
les
clc
nop
rol
pop
or
jo
fcoml
push
test
lret
jbe
lret
in
push
inc
or
jge
clc
inc
push
adc
loopne
sub
cmp
fs
dec
loopne
mov
add
jae
shl
js
push
push
jmp
or
test
jns
vfrczps
mov
roll
pushf
adc
shrb
dec
dec
sbb
imul
jae
push
jg
pop
sbb
dec
je
jmp
xor
inc
enter
xor
lret
repnz
and
add
mov
add
lret
mov
or
or
push
push
xchg
mov
add
xchg
sub
adc
adc
mov
or
mov
mov
pushf
insl
imul
pop
cld
cmpl
inc
pop
jl
movaps
inc
mov
cmp
pop
jae
or
pushf
jo
inc
dec
or
adc
test
fiaddl
pop
repz
inc
xchg
xchg
fs
and
lret
mov
xchg
pop
push
mov
fs
or
mov
jae
jle
sahf
mov
int3
mov
int3
lods
aam
jns
jmp
mov
insb
adcb
pop
sub
cwtl
mov
mov
mov
sub
lds
ret
nop
adc
inc
and
xchg
pop
shlb
adc
daa
gs
cld
ds
sub
rolb
or
sbb
std
jae
jae
cmp
and
adc
ret
pop
xchg
popa
hlt
add
mov
fs
fs
adc
test
push
push
jnp
repnz
add
enter
das
scas
movsb
pop
jbe
xchg
out
xor
xchg
jp
pop
sbb
adc
jl
adc
popa
test
les
adc
cwtl
roll
das
inc
jl
mov
test
add
loop
sbb
push
mov
mov
or
adc
adc
in
lods
pop
inc
pushf
dec
loope
or
adc
push
or
aaa
push
xor
and
jne
cmp
pusha
adc
es
inc
xchg
insl
pusha
mov
mov
fildl
js
mov
mov
lock
add
lods
fs
mov
jmp
inc
fcomps
or
outsb
enter
fidivrs
add
or
pcmpeqw
cmp
add
clc
jne
daa
insb
xchg
mov
jnp
jl
mov
pop
xor
mov
jae
and
dec
repnz
movsl
mov
dec
sbb
xchg
xor
insb
xchg
dec
lret
aam
dec
xor
aaa
xor
push
mov
inc
mov
cmp
fstpt
inc
sub
rcrl
push
pop
cmp
dec
faddl
push
and
data16
hlt
mov
pusha
sbb
add
aas
xor
cmp
testl
movsb
dec
adcl
loope
or
jb
mov
sub
and
or
xchg
lock
mov
iret
cmpb
add
push
xlat
and
inc
je
dec
mov
fmull
popf
in
add
daa
push
shll
push
stc
lock
adc
in
mov
inc
ret
inc
pop
jg
mov
mov
and
jl
mov
adcl
dec
adc
cmpsl
mov
inc
jge
xor
mov
cmc
xchg
imul
shlb
out
rol
into
rol
mov
aad
pop
hlt
jge
jl
fwait
fs
jne
sbb
addr16
imul
mov
xorl
add
sbbb
stos
aas
push
jle
fildll
push
cld
jp
std
dec
jnp
adc
push
jg
mov
jg
xchg
or
or
aam
enter
cmp
dec
push
push
in
iret
es
mov
xchg
mov
rorb
mov
sub
inc
push
daa
xchg
mov
das
pop
and
push
adc
xor
shl
cmp
adc
mov
ja
push
and
pop
arpl
xorl
imul
addr16
test
jno
xchg
mov
add
lret
jbe
fs
pop
sub
sbbb
sub
std
mov
add
inc
mov
push
int3
pop
imul
insl
aas
pop
mov
movsl
dec
xor
cmp
jmp
pop
sbb
xchg
imul
fisttps
mov
jmp
mov
inc
or
push
cmp
addb
shlb
mov
gs
sarb
jl
ljmp
je
cwtl
test
jl
js
jge
jb
adc
pop
xlat
lcall
cmp
cmpsl
fs
pop
out
ja
loopne
js
and
adc
test
push
xchg
sub
and
and
inc
inc
add
nop
clc
add
ret
sub
sbb
loope
jbe
subb
mov
shld
lds
sub
inc
daa
push
or
push
xor
sarl
jns
inc
adc
and
fisubrl
je
stos
inc
inc
inc
or
dec
jne
leave
subb
lods
int3
stc
dec
rcrb
push
in
mov
push
mov
repz
jmp
pop
dec
hlt
lahf
sub
pop
ret
in
push
mov
js
mov
idiv
aaa
push
mov
sub
sub
jb
inc
mov
inc
sti
stos
adc
outsl
sbb
pop
inc
pop
mov
or
out
clc
aam
inc
idiv
pop
ja
pop
or
dec
imul
push
incb
iret
push
mov
add
dec
add
sub
aam
pop
in
jne
mov
leave
data16
loopew
sbb
adc
ljmp
mov
mov
sub
sbb
jns
push
mov
adc
add
out
jge
ret
sub
pop
mov
xchg
and
add
xor
ret
mov
outsl
popa
mov
jp
xchg
mov
inc
inc
cmp
test
scas
popa
and
push
inc
cmovo
adc
movd
cmp
cmpl
xchg
rorl
and
jne
jmp
jb
loopne
push
mov
subb
sti
cmp
and
pop
arpl
sub
add
loopne
lret
sub
dec
jne
push
imul
fidivl
mov
and
sub
incl
jecxz
rcrb
js
rclb
fists
mov
add
mov
mov
mov
int3
inc
call
cmp
mov
cltd
or
mov
mov
cmp
inc
push
sbb
mov
add
das
mov
rorl
pop
fdivl
iret
mov
loopne
nop
aam
movsb
and
jb
aam
fdivrs
xchg
cwtl
rclb
mov
pushf
repnz
int3
mov
pop
inc
jge
orl
repnz
adc
roll
jns
pop
loopne
jge
and
mov
ret
rcrb
shl
in
add
inc
clc
mov
aas
sbb
push
hlt
mov
push
xor
cmp
test
mov
add
inc
jb
jp
sarb
push
incl
insl
das
fs
loopne
test
scas
insl
add
fs
scas
pop
push
and
add
pop
jo
add
xchg
push
punpckldq
and
in
scas
dec
js
and
int
jbe
hlt
leave
push
cmp
out
in
scas
jle
rclb
jne
add
sub
and
inc
or
je
cmpsb
jecxz
add
dec
dec
lea
adc
adc
popa
das
jo
sub
adc
daa
mov
ret
sbb
inc
mov
push
sub
or
ss
mov
push
xor
inc
loopne
es
dec
arpl
fisubl
into
es
xor
pop
dec
add
and
cmp
js
jge
pop
fcompl
and
imul
add
push
cmpsl
and
adc
in
push
cmpl
push
fdivrl
mov
std
aaa
in
icebp
or
add
cld
popf
sbb
aas
or
add
aam
gs
mov
mov
mov
mov
ret
repz
dec
insb
pop
push
xor
pop
test
mov
adc
jmp
push
mov
loop
rep
addr16
mov
call
and
xchg
mov
shlb
push
adc
cmpsb
cld
mov
xchg
mov
lods
or
dec
testl
and
push
xchg
dec
imul
lret
gs
jo
inc
js
in
push
cli
push
dec
xchg
lock
inc
or
pop
popa
cmp
dec
ret
xchg
jbe
pop
mov
inc
daa
cmpsb
out
incb
fdiv
mov
es
ret
les
or
lock
jne
inc
cmp
jne
sti
xchg
cmc
pop
les
test
pop
ret
adc
ljmp
pop
mov
movhps
or
xchg
xchg
pop
int3
push
mov
adc
dec
inc
data16
jo
ret
in
xchg
add
ljmp
push
loopne
push
mov
call
jle
jo
jno
pop
mov
inc
or
mov
arpl
add
in
add
adc
mov
mov
or
mov
fidivrs
aas
andl
sub
je
aas
adc
xlat
sbb
outsl
cs
or
xor
and
movl
sar
add
icebp
cmpsb
in
jp
inc
adc
ljmp
jb
or
pop
jno
fisubs
pop
fcoms
ljmp
sub
inc
pop
adc
adc
push
cltd
cmp
push
push
in
pop
fcoms
adc
sbb
nop
dec
xor
cmp
adc
jle
sahf
daa
clc
mov
jnp
ja
je
push
mov
mov
outsl
sub
inc
clc
lds
jl
mov
and
xchg
pushf
jmp
adc
je
and
in
xor
enter
aam
sbbb
ja
or
dec
cmp
cmpps
sbb
fsin
dec
adcl
sbb
push
sub
shr
mov
enter
jecxz
dec
xor
ja
pop
cmpsl
js,pn
xor
inc
incl
scas
add
into
pusha
add
inc
cmp
cmp
roll
cmpsl
mov
inc
push
test
dec
inc
test
shrb
and
aaa
ja
dec
mov
xor
inc
pusha
negb
mov
cmp
inc
xchg
popa
iret
sarb
dec
pop
xor
xchg
adc
mov
and
mov
add
imul
ret
pop
dec
and
flds
push
dec
imul
xor
jbe
mov
fdivrs
enter
adc
jne
movsb
inc
jo
movsb
jns
frndint
xorb
xor
sub
stos
ret
sahf
in
neg
jge
and
fiaddl
scas
ret
mov
dec
data16
jmp
shll
std
rol
cmp
mov
out
int
pop
mov
lret
inc
xlat
add
jb
insb
push
hlt
test
bound
add
push
loopne
int3
subl
dec
rorb
push
inc
xor
sarb
data16
cmpsb
push
pushf
test
xchg
imul
adc
xor
imul
jo
cmp
push
jl
cs
pop
xorl
out
push
push
dec
jle
inc
ds
lcall
xorb
sub
and
add
xor
fcmovne
mov
xchg
popa
ja
adcl
adcl
sahf
pop
pushf
insb
xorl
test
or
cld
popa
pop
je
out
jae
push
int3
test
faddl
nop
in
sub
int
mov
subb
daa
fadd
fdivrs
push
aam
cld
shrb
inc
dec
xor
int3
push
lock
nop
les
insl
mov
cwtl
xchg
mov
enter
push
imul
and
lock
rolb
imul
in
cmpsl
cmp
or
mov
pushf
data16
sub
add
cld
add
fdivrs
fistl
mov
sub
test
and
iret
mov
popa
or
xchg
add
adc
add
add
int3
mov
xchg
stos
cmpb
cmpsb
and
insb
push
nop
and
fcoml
add
dec
es
mov
fs
nop
test
pusha
les
in
daa
aaa
jl
shlb
nop
nop
movl
subl
fiaddl
xchg
icebp
popa
pop
or
cmp
add
jl
addr16
push
push
mov
inc
in
movsb
or
inc
add
xor
out
mov
fs
popa
pmuludq
in
mull
aam
cmpl
add
sub
data16
adc
in
fldt
pop
ret
dec
or
xor
cltd
xchg
or
xor
leave
or
and
aam
dec
jecxz
adc
insb
jo
inc
xor
sbb
adc
loop
push
movsl
xchg
popf
sub
xlat
sbb
and
nop
pop
mov
inc
xchg
sbb
or
repnz
inc
dec
movsb
mov
inc
push
test
loope
mov
gs
clc
pop
mov
sub
das
clc
lea
js
cmpb
cmc
sbb
xor
add
mov
std
in
inc
mov
push
xlat
ret
inc
cmp
push
or
cmp
mov
sahf
mov
xchg
jae
adc
xchg
test
fninit
push
loop
pusha
dec
and
ffreep
jb
pushf
add
add
jecxz
adc
or
cltd
mov
jns
out
push
cmp
adc
jecxz
nop
enter
call
sbb
fsubl
sbb
rolb
mov
mov
and
mov
mov
shr
and
cmp
lahf
push
push
and
push
mov
sahf
ja
fbld
movsb
sub
lods
mov
mov
cs
mov
mov
int3
mov
aam
fcoml
in
dec
cs
sbb
rorb
mov
out
push
or
repnz
sbb
inc
imul
jns
in
loope
xchg
cmp
xchg
call
xchg
cmp
lock
lock
sahf
xchg
dec
lcall
outsl
cwtl
dec
clc
sub
imul
pop
cs
sub
inc
push
xchg
mov
mov
add
outsl
je
push
jns
inc
fs
jne
dec
jne
inc
imul
dec
adc
outsl
fs
outsb
xchg
inc
push
stc
dec
jb
pop
outsl
jb
insl
jo
and
xor
jb
insl
push
je
push
push
cmp
or
inc
andl
adcb
mov
sbb
jae
push
inc
jns
imul
outsb
pop
jb
inc
outsl
shl
xchg
enter
popa
dec
cld
les
mov
das
add
add
and
inc
cld
adc
mov
inc
or
sub
hlt
out
jnp
xchg
adc
out
js
sbb
push
pushf
push
push
xor
mov
pop
data16
incb
push
inc
add
push
pop
movsb
push
fmul
mov
lcall
fdivs
sub
push
in
ds
xchg
ret
mov
jne
dec
inc
add
sbb
xlat
testb
ret
jbe
sbb
sub
xchg
inc
push
inc
inc
fdivrs
cmp
nop
xchg
inc
call
jbe
push
inc
mov
dec
add
std
push
sahf
push
test
adc
or
pop
daa
or
flds
or
jo
or
mov
jo
jo
xor
test
push
inc
jb
and
enter
lret
xor
pop
inc
popa
adc
and
ljmp
xchg
fs
inc
xchg
xor
pushf
adc
inc
push
sbb
adc
push
rorl
xor
add
xor
and
gs
add
inc
leave
insb
insb
adc
jle
and
insl
jo
xchg
add
cmp
push
or
cmp
add
in
push
mov
test
int
push
sbb
push
ds
sub
xor
pop
push
xor
in
inc
ret
mov
mov
leave
pop
jecxz
scas
pop
call
and
movsb
out
mov
in
in
repnz
in
lret
add
xchg
rorb
loopne
or
stos
jo
daa
call
repnz
in
push
and
pop
enter
in
push
nop
inc
scas
cli
in
add
out
enter
in
inc
clc
out
push
and
cmc
xchg
orl
mov
fsubrp
dec
and
in
test
xchg
xor
aas
or
icebp
movsl
cmp
les
pop
add
ficompl
daa
clc
sub
movsb
mov
loopne
sub
or
aas
dec
je
sbb
or
and
enter
push
xchg
daa
loopne
ja
add
shll
loope
mov
xchg
jmp
and
mov
xchg
mov
mov
aaa
mov
in
and
mov
add
push
ljmp
jmp
mov
xor
call
dec
enter
das
jmp
dec
jae
lret
adc
loopne
xchg
dec
jmp
pusha
test
pop
add
or
xchg
mov
les
fcomp
dec
repnz
test
cmpsl
jno
fldenv
xor
into
and
sub
dec
loopne
or
fwait
sbb
sahf
xor
dec
fsubp
addr16
ljmp
pcmpeqb
leave
ret
add
in
add
adc
pop
or
sbb
je
push
mov
imul
sbb
add
and
inc
jns
xor
jnp
xchg
adc
xor
jnp
cltd
in
add
cmp
inc
dec
mov
dec
repnz
dec
enter
push
in
add
sbbl
data16
pop
das
movsb
icebp
jne
add
add
scas
adc
fstpt
xchg
subl
dec
hlt
mov
or
sbb
ret
cwtl
repz
inc
rorb
int
sti
add
xchg
dec
jmp
dec
mov
ljmp
xchg
je
pop
adc
loop
pop
in
pop
mov
je
adc
cld
push
loope
loope
or
inc
add
inc
push
add
or
jno
pop
cmp
shlw
jle
pusha
maskmovq
testl
ds
xchg
pop
les
adc
fnstsw
xchg
clc
jmp
and
jns
clc
movzwl
lock
or
jg
sarl
xor
lea
pop
in
call
add
mov
rorl
mov
push
and
push
pop
orl
pop
dec
inc
push
neg
add
inc
lea
and
sbb
repz
dec
xchg
xlat
icebp
adc
loop
pop
subb
in
mov
pop
in
pop
cmp
fcomp
cmpsb
fsts
xchg
jne
pop
ret
repnz
into
xorps
add
mov
xchg
fwait
fs
push
aas
jmp
cmp
jne
test
mov
mov
add
jl
lods
cmpsb
cmpsb
adc
or
imull
and
lock
sahf
push
mov
shrb
icebp
flds
jmp
mov
aaa
jae
mov
cmp
stos
mov
pop
ret
aas
cmp
nop
cmp
xor
clc
mov
mov
aaa
hlt
xchg
cltd
nop
add
or
testb
sbb
in
adc
jb
loopne
in
leave
xchg
or
in
loopne
mov
lock
jle
push
push
jo
mov
xor
add
push
pop
or
adc
and
and
adc
cmp
xor
ret
outsb
cmp
mov
push
aad
xor
jmp
push
push
add
mov
in
add
adc
adc
xchg
fiaddl
add
gs
call
decl
push
adc
call
add
push
and
push
and
xchg
subb
dec
incl
adc
cmp
imul
adc
pusha
neg
inc
in
jmp
jo
xor
cmp
sub
shrl
or
lock
pop
addr16
je
inc
inc
push
dec
pop
jne
imul
dec
add
inc
add
xchg
gs
or
or
int3
add
out
inc
and
aad
int
push
mov
rolb
and
push
dec
push
ljmp
call
add
push
add
push
or
fadd
call
movsb
inc
imull
test
addr16
cmpsb
sub
mov
inc
das
add
dec
das
adc
xchg
shrl
fcomip
clc
inc
push
cli
pop
inc
stc
pop
insb
pop
shll
inc
inc
imul
insl
leave
push
cmp
es
push
add
lcall
inc
shrl
or
mov
sub
imul
cld
pop
fsts
dec
push
fldenv
sub
ret
or
in
cmp
call
and
imul
mov
sbb
pop
bound
rorl
adc
jmp
and
daa
imul
adc
pop
dec
lcall
push
push
jecxz
mov
sbb
jp
mov
das
jmp
std
add
into
sub
outsl
test
sbb
mov
call
testb
jne
jae
mov
push
mov
push
arpl
add
pusha
sahf
sub
xor
sub
or
bnd
iret
addr16
sub
in
cltd
or
in
xchg
ja
push
scas
leave
mov
js
mov
lods
in
fs
cltd
pop
sti
inc
jb
adc
dec
repnz
sub
hlt
movsl
xor
push
xchg
jo
daa
hlt
jb
dec
push
sub
in
ss
sub
cmp
cmp
sbb
push
jb
push
ljmp
fwait
push
push
mov
mov
push
xor
dec
pop
ja
jae
push
push
sarl
mov
out
or
mov
or
sarb
jmp
inc
mov
adc
xlat
or
jo
sbb
orl
fwait
test
jmp
mov
inc
lahf
inc
hlt
mov
lret
mov
rcrl
or
adc
in
or
xchg
push
mov
pop
mov
jne
scas
push
hlt
add
adc
sub
xchg
adc
pop
jbe
sub
mov
es
lret
out
add
dec
ret
movsb
sbb
adc
addl
shl
dec
daa
scas
and
pop
loop
ret
scas
pop
or
mov
sub
lock
add
xor
or
pop
mov
lcall
in
xchg
xlat
xor
mov
xlat
push
fnstcw
addr16
fidivs
cltd
nop
or
mov
adc
add
inc
mov
sub
adc
xchg
nop
jl
xchg
jmp
clc
push
pop
add
ljmp
mov
adc
ljmp
add
fs
mov
iret
int
jbe
cwtl
in
pop
adc
xor
ja
decl
movsl
enter
clc
adc
adc
sbb
frstor
inc
fists
xchg
mov
clc
jg
sub
xor
sbb
jno
hlt
lea
add
adc
hlt
dec
or
imul
pop
mov
push
add
enter
aaa
jl
pop
lock
push
test
push
mov
add
arpl
or
adc
and
je
xor
orl
out
jmp
in
pop
in
cmp
and
cmc
cmpsl
pusha
das
xor
push
pusha
aaa
inc
int3
test
and
hlt
add
pop
and
push
adc
js
cli
push
xor
push
sbb
sub
mov
jno
add
dec
mov
arpl
xor
jnp
daa
add
mov
xchg
dec
rol
jecxz
add
dec
add
mov
loope
push
pop
into
shll
mov
add
mov
push
popf
cmc
or
mov
movswl
push
sub
lods
push
sar
cmp
fadd
rol
pop
dec
inc
inc
fst
or
sub
push
push
pop
mov
push
out
pop
insl
sbb
inc
mov
cmpsb
mulb
xor
mov
cmpsb
mov
push
or
push
loopne
push
sbbl
je
jmp
push
inc
pop
subb
pop
nop
cmp
je
and
mov
inc
mov
int
jbe
add
lahf
add
data16
add
push
add
bound
aam
xor
and
jae
xchg
cmp
xor
mov
mov
sub
pop
fldcw
stos
movsb
test
sub
mov
jae
insl
adc
inc
xor
in
jmp
sbb
fidivrl
adc
push
es
dec
add
cmp
jmp
add
sbbb
aaa
pop
out
dec
or
pop
adc
loope
lods
add
bound
dec
xor
sub
inc
xchg
push
jg
in
addr16
jb
mov
or
dec
add
jmp
xlat
jge
add
xchg
or
xor
shlb
jmp
rcpps
add
dec
xor
cmp
repnz
inc
cmpsb
loopne
out
and
sbb
outsl
orl
nop
pop
push
je
adc
and
pop
lods
in
enter
push
mov
adc
adc
sbb
push
dec
in
xor
and
adc
mov
fcompl
add
jmp
or
lock
push
adc
sbb
pusha
cwtl
cmpsb
and
testl
mov
adc
mov
pop
mov
push
jo
mov
cmp
pushl
add
xchg
pop
pop
out
adc
out
pop
leave
pop
add
cld
andb
add
sbb
jecxz
pop
mov
xor
dec
push
or
adc
jg
adc
fcoms
sbb
mov
and
dec
or
jb
and
adc
enter
mov
or
daa
cmp
push
or
ss
push
jecxz
shll
mov
xor
add
imul
nop
pusha
push
adc
out
inc
xor
sti
mov
shrb
jl
adc
cmp
gs
and
jo
sbb
hlt
lods
and
sbb
xor
sbb
mov
push
adc
in
dec
cmp
mov
dec
jne
stc
enter
xor
aaa
sbb
sbb
test
xchg
sbb
cltd
add
jle
or
test
xchg
in
mov
or
adc
mov
orb
mov
push
lcall
lea
or
jns
movsl
xor
inc
xchg
jmp
dec
call
call
mov
push
xor
and
clc
out
arpl
and
mov
enter
call
xchg
push
or
call
and
add
fiaddl
inc
insl
pop
or
shrl
mov
push
dec
ja
add
dec
adc
mov
mov
xchg
leave
lock
lret
imul
jnp
cmpsb
imul
xor
pushf
or
pop
push
dec
shll
jb
jne
push
stc
lock
adc
mov
fcoms
inc
dec
cmp
pop
mov
sub
add
dec
mov
lods
arpl
cld
pop
leave
pop
adc
and
fsubrs
movsb
push
mov
and
pop
mov
and
inc
scas
push
jnp
and
ljmp
xchg
nop
cli
xchg
test
push
orb
arpl
shll
mov
pop
repnz
add
cmpsb
imul
adc
daa
nop
test
ffree
push
bound
push
pop
inc
inc
mov
loopne
popa
movsl
jmp
and
cmpsb
lea
sub
outsl
add
inc
out
sub
mov
sti
push
push
cmp
enter
xchg
xchg
shlb
fwait
sbb
mov
outsb
stc
push
lods
ljmp
test
sub
jl
xor
leave
adc
sti
pop
xlat
jmp
loopne
sbbl
enter
jle
add
or
and
or
ljmp
and
mov
push
ljmp
sbb
pop
adc
adcb
cmp
out
sub
xorl
out
stos
rolb
inc
jmp
test
push
or
pop
sub
test
inc
cs
add
les
shll
pop
sub
gs
xor
out
fstps
adc
fadds
fnstenv
or
outsl
mov
add
or
pop
imul
mov
sbb
flds
mov
inc
push
and
xchg
xchg
sub
fildll
xlat
sbb
push
jo
clc
mov
cli
push
incl
sbb
arpl
rclb
aad
test
sbb
add
inc
pop
add
xchg
addl
push
arpl
inc
ss
fildl
pop
in
hlt
add
fwait
cmpsb
pop
sbb
dec
pop
adc
sarl
push
jge
add
dec
xchg
mov
rcll
push
sbb
flds
shrl
pop
push
inc
adc
adc
jne
nop
jbe
adc
cmp
int3
insl
sbb
inc
loop
push
ret
add
rorb
aas
jmp
cmp
or
jl
aam
fs
inc
push
adc
sub
mov
add
sbb
imul
jecxz
dec
cmp
inc
dec
call
icebp
mov
fldt
fstpl
mov
add
add
outsb
lods
mov
dec
or
inc
rcrl
or
mov
data16
pop
pop
popa
push
push
xor
sub
mov
push
dec
pop
pop
faddl
add
push
push
adc
pop
dec
shll
adcb
push
sbb
out
fstps
inc
sbb
push
or
js
cmpsb
pop
sbb
pop
je
xchg
or
adc
fildll
inc
push
fs
cltd
dec
inc
mov
imul
out
pop
or
popa
cmpsl
popf
lahf
add
inc
movswl
push
sub
or
pop
in
iret
push
mov
ja
add
adc
inc
dec
sub
scas
sub
add
add
ja
pop
lret
or
dec
je
xor
and
mov
add
pop
imul
and
fisubl
jg
mulb
xchg
sbb
add
das
xchg
nop
mov
fsts
push
xor
sbb
fisubrl
cmc
inc
and
cmp
icebp
sub
repnz
enter
es
mov
pop
or
push
hlt
insl
inc
xor
jmp
inc
adc
push
vmaxsd
aam
jbe
scas
sbb
adc
int3
dec
adc
ja
dec
sub
movsl
fwait
dec
es
xor
rcrl
push
scas
push
mov
in
add
jns
add
sbb
fwait
cmpsb
imul
sbb
and
mov
lret
adc
xchg
fistps
add
pusha
lods
push
dec
hlt
fildl
inc
sub
or
and
sbb
in
sub
dec
movsb
xchg
in
dec
inc
pop
inc
pushf
bound
cmp
popf
sbb
ss
jb
add
add
or
push
jo
iret
in
test
movsb
sbb
pop
enter
push
and
xchg
pusha
in
movsb
push
test
push
cmpsb
inc
xor
or
pusha
xchg
fs
fildl
es
push
cmpsb
inc
test
adc
data16
adc
jl
mov
push
test
adc
push
stc
push
lock
mov
scas
cmpsl
pop
push
nop
pop
and
mov
in
sbb
cmpl
ljmp
dec
pop
sahf
mov
push
mov
ror
xchg
pop
jns
mov
cmpsb
cld
push
test
push
adc
insb
lcall
cmpsl
adc
and
adc
pop
xchg
push
pop
fisttpl
or
and
popa
inc
or
addr16
or
insl
sub
pop
push
mov
adc
in
adc
inc
popa
mov
ret
or
sbb
push
add
addl
or
xchg
and
pop
inc
imul
xorb
xor
pop
dec
and
dec
fidivl
inc
fwait
push
and
dec
imul
icebp
or
push
pushf
adc
adcl
cmp
cmp
aaa
sub
lods
cmp
in
dec
inc
mov
push
or
adc
rorb
movl
and
das
mov
clc
xor
int3
and
mov
push
push
adc
lock
rolb
insl
iret
push
enter
push
fildll
pop
and
push
push
repnz
sub
and
add
jge
and
insl
pop
nop
pop
addl
lea
and
fwait
cmpsb
sbb
and
dec
sbbb
and
cmpsb
xor
or
mov
pop
xor
push
adc
in
xor
or
and
mov
frstpm(287
adc
add
inc
insl
adc
pop
pop
mov
xor
sbb
insl
mov
or
aaa
aas
inc
mov
jae
pop
adc
add
ss
pop
les
inc
xchg
inc
pushf
jle
pusha
adc
push
pop
outsl
pop
in
and
dec
mov
es
pop
push
add
jbe
push
mov
js
lods
shr
inc
daa
fildl
mov
mov
lods
pop
sub
jnp
and
dec
sbb
mov
sbb
mov
push
add
dec
lds
sub
adcl
sbb
pop
cmp
ljmp
mov
or
xor
je
outsb
mov
psubusb
outsl
mov
inc
push
mov
or
idivl
adc
push
rcrl
sub
rcll
imul
outsl
dec
je
and
adc
lret
je
frndint
jb
mov
leave
sti
sbb
es
lock
xchg
hlt
or
add
inc
shll
subl
stc
add
cmp
sub
mov
loopne
adc
inc
pop
jno
sbb
add
cld
js
pusha
add
and
adc
xchg
adcb
inc
bnd
and
inc
in
cmp
cmp
mov
out
aaa
xor
test
dec
push
stc
sub
lcall
sarb
sub
mov
js
push
loope
and
mov
mov
cmpb
pop
pop
inc
push
lsl
add
mov
add
xor
orl
or
in
cmp
out
xchg
inc
sbb
sti
arpl
mov
inc
add
mov
shll
or
and
sbbl
push
jbe
xor
imul
push
cmp
fadds
sbb
repnz
adc
add
inc
sahf
xor
les
fidivrs
fdivl
scas
xor
push
xchg
pop
push
cmp
in
sbb
cmp
push
mov
xor
xor
jmp
or
or
stc
add
inc
and
xor
adc
bound
rcll
shl
xchg
in
ss
pop
push
fsubl
xchg
mov
faddl
ret
mov
arpl
push
mov
aam
rcll
pop
shlb
and
jmp
insb
jbe
int3
enter
or
jne
cli
push
mov
mov
js
je
adc
nop
nop
les
sbb
nop
in
inc
sarb
and
stc
jle
cs
imul
mov
aas
push
sbb
pop
imul
or
cmpsb
lods
sbb
xchg
mov
mov
jb
rorb
mov
fisttpll
mov
nop
adc
shrl
cmp
adcb
popa
ret
icebp
xchg
sbb
jo
mov
inc
fiadds
call
mov
xor
stos
xchg
jno
nop
popa
push
jo
push
leave
movl
loope
mov
gs
cltd
in
stos
stos
sbb
cmp
add
mov
xchg
movsb
push
cld
xor
add
icebp
mov
in
inc
push
adc
out
jmp
cmpb
imul
pop
and
and
push
lcall
add
jle
jo
jns
and
xor
push
enter
xor
rcl
inc
xor
jb
popa
in
fs
adc
out
mov
mov
add
cs
dec
xor
xor
nop
dec
adc
imul
imul
loop
out
shll
dec
insb
lea
mov
xchg
cmpsb
imul
and
mov
xor
jl
sub
bound
dec
popa
insl
xor
and
xor
dec
or
push
in
add
ret
aaa
mov
test
cli
pusha
and
test
dec
in
pop
adc
jnp
enter
fmull
mov
push
es
fdivs
aam
popa
mov
aaa
aam
aaa
adc
leave
rcl
iret
jno
add
inc
jne
sub
pop
cwtl
push
inc
ret
insb
pop
insb
enter
xorl
cmp
les
adc
lret
mov
dec
call
inc
aaa
push
in
dec
repz
push
jno
stos
jo
dec
fmul
xor
pusha
ret
mov
dec
dec
sbb
mov
mov
xor
pusha
ja
mov
les
mov
imul
es
aaa
test
inc
push
cmp
jbe,pn
loope
aaa
mov
pop
adc
pushf
cmp
mov
cwtl
jno
mov
mov
aaa
outsl
ss
scas
or
and
popf
xchg
aaa
and
nop
aaa
aaa
jl
fs
and
imul
mov
in
xchg
daa
add
push
mov
les
sbb
loopne
test
pop
push
aaa
inc
add
cmp
push
insb
or
in
loope
gs
inc
aas
and
and
add
jg
je
outsb
push
aas
loopne
add
jmp
sub
or
cmp
jmp
mov
sub
js
or
cmp
test
jecxz
fistpl
aas
test
dec
rclb
cmp
and
adc
or
pop
or
xchg
xchg
popf
dec
lret
jecxz
mov
mov
push
add
pop
data16
sub
outsb
inc
xchg
or
and
addb
add
sub
sub
sbb
xchg
mov
testl
call
sar
clc
mov
ret
mov
pop
jmp
movw
ja
sbb
pop
add
or
aas
xor
add
leave
mov
mov
xchg
jbe
cmpl
subb
popf
sbb
push
out
sbb
pushf
insb
sbb
dec
mov
rcll
gs
popa
lahf
push
push
xchg
add
pop
daa
andb
and
das
aam
add
loop
inc
dec
ret
adc
pop
or
push
daa
pop
push
add
xchg
push
or
js
lcall
push
insb
xchg
es
or
dec
pop
lcall
adc
mov
inc
or
das
push
out
cmp
rcrb
jb
push
mov
sub
adc
lahf
pop
cmp
shlb
stos
and
test
and
popa
cmp
sub
es
cmpl
or
jmp
pop
push
cmp
loope
adc
mov
cmp
push
imul
nop
mov
mov
pop
cmpsl
testb
je
xor
push
add
cmpl
ja
jmp
fildll
xorb
jl
jno
add
imul
jne
jmp
push
mov
mov
sarl
xchg
sub
lahf
and
dec
jg
cmp
lahf
jmp
cmp
nop
inc
das
and
fdivl
cmp
pop
fs
clc
mov
outsb
rorb
xor
shr
cmp
xchg
sbb
pop
pop
xor
inc
cmp
xchg
hlt
jmp
pop
hlt
jno
cmp
and
pop
lock
cwtl
sbb
hlt
imul
stos
xchg
mov
scas
push
adc
push
movsb
mov
cs
mov
mov
sbb
rorb
loop
lods
or
add
mov
add
inc
sub
cmpl
add
cmc
pop
jb
fstpl
inc
je
xchg
fdivs
mov
adc
bnd
xor
push
sarb
cmp
jns
aas
fdivrs
rcll
lret
or
mov
sbb
jmp
roll
or
clc
aas
roll
cmp
out
in
mov
adc
add
sahf
sbb
in
or
lock
dec
inc
lock
adc
mov
lea
in
leave
rcll
xchg
clc
cmpl
push
cmp
je
ja
inc
add
mov
addr16
in
icebp
addl
sub
adcl
shl
add
xchg
push
jb
leave
cltd
inc
mov
add
inc
insl
ret
test
jecxz
outsb
scas
fisubrs
jbe
loope
push
mov
xor
test
sub
add
sbb
xchg
iret
dec
in
push
add
ja
push
xor
xchg
adc
adc
lret
add
fbld
jle
fwait
sub
or
sub
pop
jmp
xchg
fdivrl
sahf
inc
fisubrs
fs
dec
test
cmc
sbb
out
flds
das
pop
sub
test
and
push
or
or
pop
bnd
je
jmp
out
adc
jmp
push
adc
adc
stc
into
ret
or
xchg
imul
and
ss
dec
inc
fcompl
sar
rorb
nop
mov
push
insl
and
pop
imul
adc
sub
notl
sub
and
pop
push
sub
test
repz
insl
pop
and
xor
imul
or
mov
insl
or
insb
jmp
addr16
mov
push
imul
sbb
cmp
fistpl
and
xchg
sbb
sbb
ds
jo
mov
pop
rcl
incl
xchg
inc
fwait
imulb
xor
rorb
jbe
inc
unpcklps
fs
push
cltd
sub
push
hlt
pop
sbb
je
dec
je
repz
repnz
sbb
iret
adc
jmp
daa
sub
out
xchg
sub
pop
pushl
add
inc
jne
aaa
sub
ss
add
stos
test
mov
push
jp
add
mov
and
jnp
add
int3
pop
jno
sub
das
sbb
pop
push
lahf
inc
and
daa
xchg
sub
sub
xor
sub
mov
sbb
adc
test
adc
out
xchg
cmpsb
arpl
or
bound
adc
adc
push
cld
ds
sub
addr16
je
aaa
and
cmp
or
add
loop
push
jmp
mov
cmpsb
mov
mov
cmp
dec
aam
es
pusha
mov
pop
xor
and
adc
xchg
addr16
subb
ja
or
ss
add
jmp
xchg
push
in
inc
mov
fdivrs
and
mov
js
sub
add
add
les
pop
cmp
mov
xchg
or
inc
adc
outsl
or
xchg
sbb
jge
mov
insl
lock
pop
enter
ds
and
or
mov
or
pop
mov
push
cmp
jne
popa
leave
fdivs
bound
mov
icebp
fmuls
pop
sahf
push
sbb
pop
popa
fmull
push
mov
jp
mov
pop
das
lock
fwait
ret
dec
sbb
push
mov
and
sbb
xor
int
add
xchg
cld
sarb
stc
push
sbb
sbbl
ljmp
cwtl
sub
and
xor
pop
andb
xor
add
or
in
js
rorb
add
add
lods
pop
add
xor
popa
stos
push
push
lock
dec
mov
lcall
dec
xor
cmp
cs
sub
int
test
dec
sti
xchg
pop
aaa
xor
dec
xor
repnz
xor
inc
cmp
push
add
jb
or
ja
push
es
sub
add
or
push
in
or
xor
stos
in
add
dec
cmp
or
daa
mov
push
cmp
cltd
push
and
jle
fcom
aas
je
sub
xchg
addb
out
fists
push
xorb
cmp
or
adc
cmp
dec
xchg
jmp
push
jbe
and
jmp
sub
in
sbb
jmp
xor
or
lods
aas
mov
lods
mov
test
cmp
add
popa
shrb
mov
pop
mov
sub
stos
les
cmp
imul
cs
sbb
aad
pop
push
stos
or
pop
inc
or
jo
inc
inc
dec
adc
loop
dec
add
mov
in
inc
fmuls
pop
lock
je
cmpsl
dec
jne
out
and
push
or
popa
and
mov
repz
pop
out
int3
jbe
sti
inc
push
aas
addr16
ds
insb
add
inc
outsl
jne
xchg
jb
repnz
outsb
arpl
popa
je
or
insb
and
ret
std
sbb
or
adc
inc
push
and
sbbl
sub
push
outsb
or
outsl
ja
arpl
out
or
mulw
inc
iret
push
or
inc
inc
jns
shll
push
and
loope
and
daa
add
aaa
ss
mov
js
fwait
inc
js
inc
jecxz
nop
test
or
mov
ja
call
das
movb
pop
mov
adc
fdivrs
mov
adc
mov
push
add
punpckhwd
jmp
push
arpl
daa
aam
cmp
notl
xchg
cld
clc
filds
popf
fadds
jge
or
scas
sbb
fcmovnbe
js
rorl
popa
pavgb
lock
and
adc
jl
and
jns
orl
and
dec
into
mov
inc
popf
adc
std
and
data16
xlat
in
and
lahf
xor
sbb
inc
outsb
jns
sub
push
or
in
push
gs
add
add
dec
xchg
call
lret
inc
out
aas
jl
add
or
xor
imul
and
aaa
mov
and
sub
pushf
push
xor
push
dec
push
cmpsb
sub
jnp
xor
mov
cmp
fisttpl
mov
add
pushl
add
add
push
mov
out
xor
rcrb
add
scas
iret
push
mov
xchg
lea
xor
repnz
jns
popa
ljmp
mov
push
ret
jge
cmp
je
sbb
adc
into
sahf
clc
xor
mov
inc
pop
push
stos
cmp
cmp
mov
aas
mov
mov
push
add
add
xorl
subb
xchg
orb
sub
call
mov
add
arpl
bound
ret
incl
push
mov
cmpl
push
and
das
lcall
mov
mov
and
cwtl
and
mov
test
and
mov
es
jo
and
cmpl
rcl
mov
lods
ds
xor
add
in
add
pop
ret
orb
lret
xor
loope
addr16
outsl
adc
enter
lods
fnstsw
pop
ja
push
sub
sti
cwtl
push
dec
or
add
or
jbe
rclb
push
in
sbb
popa
cmp
cld
call
cmp
cmp
negb
setg
inc
cmp
test
mov
dec
aam
fnstenv
and
push
in
ret
es
rorl
dec
lock
into
push
jns
test
sub
push
jl
subb
jbe
push
inc
xor
push
mov
outsb
cmp
or
and
push
fstps
dec
mov
les
and
adc
xchg
movsl
sbb
add
dec
jne
xchg
bound
in
push
jmp
inc
cmp
nop
insb
out
sbb
pushf
add
cs
incl
or
loope
mov
and
dec
inc
fsubs
enter
adc
in
xor
in
inc
push
inc
lahf
xchg
out
or
jae
mov
cli
push
adc
movsb
in
iret
test
mov
xor
push
push
ds
call
sbb
mov
xor
sub
mov
push
xor
imul
adc
in
push
shr
jbe
scas
in
in
nop
xchg
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
cwtl
cltd
lcall
popf
sahf
lahf
in
in
addb
in
test
in
mov
in
lea
jl
inc
inc
cwtl
dec
push
inc
test
sbb
inc
cwtl
dec
and
cmp
cld
aaa
mov
lea
pop
sub
aaa
push
orb
inc
or
add
lea
fbstp
add
mov
push
mov
repnz
sbb
test
jne
out
mov
push
das
inc
dec
xor
cmp
aam
and
jle
test
pop
mov
or
fistps
sbb
js
jge
push
fldl
dec
jae
cmp
popa
adc
mov
add
popf
out
leave
test
ja
gs
ret
xor
sub
mov
cmpsb
fisttpl
mov
pop
jl
or
sbb
dec
std
xorl
fnstsw
lret
jnp
jmp
je
mov
dec
and
sbb
fucomip
inc
and
jmp
jg
in
jne
jmp
cmp
lock
lret
insb
sbb
test
out
call
mov
mov
mov
cmpb
je
jg
pop
push
push
pop
lar
decb
push
adc
loope
cmc
iret
imul
sbb
jae
ja
icebp
mov
cmp
std
push
add
add
pop
es
or
movsbl
repnz
ds
sbb
decl
in
aaa
mov
in
fisttpl
cmp
sub
mov
mov
cmpb
ja
jb
jns
imul
call
out
mov
sbb
or
xorl
sti
in
jb
incl
cmp
pop
dec
fwait
xlat
or
lret
test
movsb
std
jae
mov
lods
cmp
fwait
mov
stos
mov
aad
outsb
sbb
test
andb
test
xor
orb
adc
icebp
pop
push
add
adc
fstl
inc
mov
add
inc
cmp
fbld
push
xlat
cmp
xchg
cmp
test
fsubrl
test
sbb
sti
and
or
or
adc
pop
xchg
sbb
stos
xchg
outsb
hlt
inc
push
and
dec
ret
fisubs
lea
push
sbb
sub
pop
idivl
mov
and
fsubs
adc
pop
or
mov
sti
fadds
outsb
pop
jl
lcall
and
xchg
add
mov
ss
or
jne
and
adc
mov
push
cld
push
xor
iret
lods
pop
add
jns
pop
lods
pop
push
cmp
ljmp
test
lea
jnp
add
xlat
jg
int
cld
mov
xchg
pop
pop
cli
cmpsb
imul
sbb
mov
and
fnsave
mov
sub
push
inc
add
jge
arpl
adc
or
cmp
or
ret
fadds
add
mov
sarb
cs
mov
jge
stos
jb
in
pop
xchg
aaa
or
cwtl
pop
lods
rcl
fsubs
and
add
sub
push
xchg
push
insl
shrl
cmp
outsl
xor
sub
inc
aas
push
inc
shlb
and
jmp
pop
jmp
sbb
mov
jmp
or
iret
ret
mov
adc
sarb
jp
jns
jno
fcompl
loopne
pushl
jl
add
call
mov
pusha
mov
cmp
stc
mov
pop
mov
insb
jge
sbb
data16
testb
cs
gs
dec
add
xlat
icebp
sbb
jbe
fnstcw
and
add
nop
cmp
and
or
nop
or
inc
mov
hlt
push
call
mov
rcrl
push
and
out
pop
inc
sub
inc
pop
mov
sub
popl
xor
outsl
push
into
inc
sub
or
dec
in
and
daa
dec
pop
push
dec
or
mov
pop
imulb
invd
dec
push
gs
imul
hlt
or
add
inc
sahf
ret
rcrb
pop
push
fdivrp
dec
inc
add
insl
fs
imul
lcall
dec
mov
lods
dec
popf
popa
sub
push
loopne
sbb
or
pop
pop
sar
cmpsb
jle
inc
pop
inc
inc
push
or
fwait
sub
and
cmp
enter
cmp
add
pusha
xchg
scas
dec
outsb
outsw
xlat
dec
and
lret
add
adc
roll
or
sub
leave
adc
xchg
sbb
adc
jo
xchg
add
adc
ds
adcl
adc
pusha
jbe
pusha
or
cmp
sahf
xchg
and
dec
adc
je
inc
jb
int3
jo
iret
adc
push
xlat
push
test
addl
lds
push
popa
jb
and
mov
mov
stc
dec
push
aas
mov
mov
sbb
mov
add
pop
dec
rorl
and
push
adc
decb
xchg
push
andb
jg
dec
sbb
scas
dec
mov
lahf
adc
pop
add
aas
shl
adc
dec
or
emms
jae
mull
lahf
icebp
stos
shrl
inc
cmp
in
out
sub
pushf
jbe
imul
cld
or
or
jnp
mov
stos
pop
jp
repz
int3
adc
js
push
sub
mov
cmp
dec
mov
jo
fidivrl
das
mov
push
sbb
sub
inc
push
sbb
sbb
sbb
adc
or
fs
inc
or
fs
inc
push
push
dec
dec
adc
sbb
pop
xchg
fildl
les
mov
dec
fistps
dec
cld
add
push
inc
insb
push
mov
call
sbb
loope
inc
fprem
xor
gs
mov
decb
imul
push
lret
or
popf
pop
inc
pop
ret
and
nop
dec
arpl
inc
imul
arpl
cmp
outsl
test
push
sbb
adc
rorl
sub
pop
dec
outsb
insb
jns
dec
mov
jle
xor
roll
mov
aaa
push
push
mull
jg
push
insb
or
cld
int
mov
cmpsl
or
dec
imul
add
xchg
test
sub
push
or
test
xchg
fiadds
add
dec
jmp
insb
jmp
push
add
nop
inc
insl
sbb
fnstenv
add
push
add
mov
fisttpl
jns
fnsave
jae
js
fcmovnbe
inc
shrb
jne
pop
push
movsl
movsl
and
or
int3
inc
jbe
cmp
or
dec
or
push
fldenv
fsubrs
or
inc
gs
add
sub
mov
mov
cmpsb
mov
adc
or
pusha
mov
xor
xchg
inc
sub
adc
or
popa
pop
sbb
mov
pop
sub
and
dec
lods
outsb
pusha
mov
scas
ds
xchg
int3
inc
mov
jb
int3
mov
sub
inc
repnz
nop
and
scas
and
adc
add
fsts
mov
scas
jl
inc
cltd
push
push
inc
and
inc
sbb
mov
cmpsl
sbb
mov
xor
inc
pop
mov
mov
push
iret
dec
pop
iret
mov
mov
je
add
inc
leave
in
sub
lods
pop
mov
mov
or
imul
out
inc
in
jbe
push
mov
insb
call
fimuls
inc
sets
push
inc
xchg
outsl
cld
adc
sub
pop
sbb
jg
push
push
mov
rep
push
pop
mov
jne
pop
mov
bound
mov
shlb
or
bound
mov
imul
or
push
xchg
push
fcom
push
inc
push
push
insb
cmpsl
cwtl
pop
pop
inc
pop
sbb
xchg
xchg
int
outsb
xchg
pop
or
divb
mov
rcrl
test
out
pop
and
dec
mov
scas
mov
add
lods
test
sub
int3
mov
jbe
push
aad
add
dec
loope
inc
pop
insb
pusha
insl
or
cwtl
push
paddsb
roll
rclb
xchg
iret
addb
inc
cmp
xchg
fucom
pop
xor
cmp
adc
outsb
sub
cmovns
jae
fs
jo
arpl
clc
jg
xor
pushf
jae
push
rclb
sahf
cmpsb
popa
scas
cmp
sub
add
push
sub
sbbb
jp
fisubrl
sahf
pushf
test
mov
xchg
cmp
arpl
ss
pinsrw
mov
ss
push
mov
and
jbe
sbb
js
pop
push
aam
fldt
mov
inc
pushf
pop
shlb
sahf
pop
fsubrs
int
or
mov
mov
inc
or
dec
sub
nop
call
test
ljmp
sbb
dec
jg
test
aaa
js
add
outsl
xchg
or
xor
insb
mov
mov
fwait
out
inc
inc
dec
cmpsb
pop
mov
lret
sbb
pop
pushf
shlb
mov
push
movsl
pop
xor
movsb
cmpsb
push
lock
pop
imul
jle
cmpsl
xchg
push
mov
scas
xor
push
add
mov
push
das
nop
outsl
out
lods
outsl
inc
jle
rolb
in
test
insb
xchg
pop
push
stos
lock
je
push
push
lret
mov
popl
jo
sbb
or
inc
outsl
inc
xor
int3
mov
lods
hlt
fiadds
or
les
jnp
and
out
xchg
mov
adc
inc
add
inc
in
sub
or
mov
adc
or
inc
js
adc
xchg
add
dec
ss
mov
jo
dec
ds
mov
mov
jnp
cmp
in
add
sbb
fisubrl
out
mov
testl
mov
xor
adc
or
or
adc
and
adc
sbb
adc
and
and
lds
xor
push
add
and
and
xor
loope
in
stos
and
dec
rcrl
shll
xorl
or
cs
adc
jae
push
imul
jae
fidivrl
aad
pop
repnz
nop
push
clc
pusha
repz
mov
js
push
fildll
nop
clc
jae
add
adc
or
loopne
push
adc
enter
lea
je
fs
insb
bnd
cmp
pop
or
sahf
jle
loopne
imul
push
or
fstpt
mov
bswap
ss
in
mov
fidivrs
push
mov
lret
inc
out
jo
andb
pushl
nop
adc
xchg
dec
jne
shll
movb
andps
jno
xchg
jne
xchg
cmp
icebp
jmp
adc
mov
stos
mov
rorb
je
xchg
nop
mov
mov
filds
test
adc
aam
cmp
leave
aam
int3
movsl
or
dec
mov
add
pop
sbb
inc
int
dec
addb
ljmp
aas
cli
jne
pop
dec
popf
nop
jbe
push
inc
push
inc
ja
lcall
xor
mov
inc
fsub
inc
addr16
fsts
jmp
push
js
jo
lret
mov
push
sub
sbb
or
cmp
sti
adc
pop
jmp
mov
cli
stc
clc
push
push
push
pop
sti
addr16
push
push
push
jecxz
push
lcall
and
sub
cmpsb
imul
lods
xor
sbb
cmp
dec
push
sub
subl
or
jno
pop
and
mov
xchg
xor
inc
outsb
loope
roll
cmp
mov
out
mov
push
add
test
push
popa
addr16
js
sbb
pop
adc
out
mov
dec
shrl
test
or
fmull
rolb
mov
push
inc
imul
in
jmp
inc
lahf
dec
cmp
jo
dec
imul
aam
mov
jbe
and
lock
icebp
pop
sub
in
rorb
out
cmpsb
pusha
adc
xchg
push
pop
push
aam
icebp
and
ja
sub
mov
dec
dec
fs
clc
add
xchg
jno
jns
popa
xor
jne
mov
pop
mov
push
leavew
pop
push
xor
sub
add
pop
gs
mov
pop
add
xchg
cmpl
jne
iret
pushl
jne
hlt
jns
add
inc
hlt
jns
jnp
incl
inc
jb
jne
pusha
outsl
shrl
outsl
jp
ds
pop
xchg
sub
fdivrs
jae
mov
sub
lods
push
or
inc
mov
in
push
mov
dec
or
mov
jno
and
bound
ss
out
xor
inc
loop
adc
sub
inc
sub
sub
mov
pop
or
mov
pop
insb
adc
push
mov
mov
adc
cld
sub
int
lock
unpckhps
ja
and
jmp
sbb
adc
jne
divb
mov
je
mov
push
decl
xchg
fs
add
adc
inc
add
sub
sbb
push
fwait
or
js
or
and
xlat
pop
jge
add
or
mov
std
xchg
add
push
adc
jne
ret
das
lret
push
pushf
mov
inc
add
and
subl
clc
mov
lods
call
and
sub
fdivrl
inc
push
and
push
sbb
pushl
fwait
or
pop
pop
scas
pop
sbb
sub
mov
pop
loop
push
fisttpl
dec
pusha
push
inc
or
or
ret
jns
xor
fcomp
push
mov
in
push
hlt
jnp
popa
or
das
jge
inc
in
and
cld
cld
mov
imul
inc
sbb
fcoml
lea
push
mov
push
add
inc
sub
stos
sbb
mov
ds
xorl
insb
mov
loope
popf
and
pop
dec
jg
and
popa
adc
in
fdivrs
int3
push
ss
loope
jb
cwtl
sbb
arpl
repnz
jl
nop
or
mov
popa
add
or
push
add
jno
dec
inc
fadds
or
imul
bound
pop
iret
inc
call
je
cwtl
fidivs
ja
sbb
in
sbb
jmp
pop
lock
dec
mov
inc
add
arpl
shll
imul
jg
fwait
lea
push
xor
mov
cmp
mov
cli
fcmovbe
cmp
inc
adc
adc
iret
push
lea
push
sub
rcrl
subb
mov
sbb
push
inc
dec
jne
popl
sub
mov
xchg
dec
mov
xchg
fisubrl
mov
and
or
push
inc
add
jo
rcr
xchg
sub
xor
not
cmpb
and
or
jns
fiaddl
xchg
dec
and
leave
dec
aas
andb
push
dec
imul
enter
filds
lods
jmp
push
sub
inc
inc
mov
sbb
xchg
adcb
adc
pop
nop
lret
int
outsl
xor
mov
jne
push
sbb
xchg
xor
cmpsb
icebp
inc
dec
add
hlt
mov
insl
xor
movq
xor
xorl
aaa
inc
push
imul
lret
xor
push
imul
icebp
cmp
pushf
popf
mov
push
xor
cmpsb
popl
jecxz
mov
mov
call
dec
ja
add
xor
outsl
dec
loop
jl
adc
cmp
sbbl
aaa
insl
cmp
andl
pop
cwtl
outsb
mov
jge
and
int
or
sbbl
push
mov
pop
xor
add
jo
pop
add
cmpsl
add
repz
xchg
pop
subl
pop
xchg
xchg
rcrl
inc
inc
inc
xchg
stos
dec
pushf
or
daa
popa
mov
push
nop
xchg
xchg
addl
cmp
and
mov
pop
xor
and
xor
hlt
test
into
call
shlb
cmc
xchg
push
cmpsb
push
nop
sub
aad
sti
dec
test
cwtl
add
jmp
mov
in
das
test
bound
popa
inc
inc
push
xchg
lods
lds
xorl
mov
jmp
or
test
shlb
mov
fisubl
nop
push
cmpsl
add
adc
cwtl
add
and
sti
js
mov
fcmovnb
in
or
pusha
xchg
or
jg
inc
fs
xchg
mov
lds
push
lret
shrb
dec
les
rcl
cld
push
push
add
adc
jbe
pop
sbb
dec
in
test
sbb
mov
push
je
mov
inc
add
push
shll
test
cmpsb
mov
fildll
insl
aam
mov
dec
jb
sbb
js
pop
sbb
mov
xchg
xchg
mov
xchg
jo
and
outsl
mov
push
in
mov
adc
test
dec
cld
cmp
rolb
adc
pushf
les
jae
addr16
dec
add
fnsave
or
movsl
add
pop
pusha
adc
ja
imul
xchg
cmpsl
pop
loopne
xchg
mov
xchg
scas
push
lcall
add
or
inc
mov
cmp
dec
ret
fbld
xchg
inc
mov
mov
add
sbbb
pop
pop
xor
add
sbb
das
add
mov
mov
jmp
ret
pusha
sub
in
ljmp
push
inc
jl
movsb
dec
jae
jg
sti
inc
sub
sbb
push
hlt
or
sub
mov
sbb
addr16
add
push
sub
push
mov
lods
mov
inc
jecxz
pop
jl
mov
ja
xor
jle
adc
mov
sbb
lds
add
mov
sub
and
fcomps
out
xor
into
adc
js
xor
add
dec
sbb
cmpsb
lret
sahf
push
mov
inc
push
sub
xchg
push
fs
dec
push
xor
lds
mov
or
pop
xor
sub
mov
sbb
inc
sub
das
dec
orl
gs
sbb
inc
frstor
mov
cmp
sbbb
mov
adcl
inc
repz
loopne
or
out
lcall
or
pushf
adcb
addr16
test
movsl
push
or
add
orb
mov
cs
arpl
inc
idiv
sarb
enter
pop
mov
fstpt
xor
into
je
mov
jo
je
pop
or
jp
add
test
out
in
cvtdq2ps
or
cmpsb
or
jbe
and
add
in
js
xchg
or
sbb
hlt
push
out
in
out
cmp
hlt
es
add
jecxz
shlb
in
xor
push
push
inc
xchg
add
shrl
add
into
das
pop
test
xor
aas
in
dec
and
mov
dec
sbb
icebp
push
add
xchg
xchg
xchg
aas
jae
aad
pop
shll
loop
inc
adc
cmp
inc
aaa
ljmp
leave
lea
xchg
or
popa
iret
or
jg
adc
cs
push
loopne
inc
push
loopne
inc
cmpb
call
cmpb
add
pop
pop
dec
jecxz
inc
decl
int
fcmovne
dec
popf
sbb
shl
loop
adc
or
pop
popa
mov
and
mov
push
lret
cmp
lock
rol
push
mov
add
push
cmp
call
insb
jo
jb
dec
lea
mov
into
repnz
das
insl
test
enter
xchg
push
outsb
inc
inc
sub
orb
dec
xor
adc
push
sbb
jo
call
lds
int
aaa
jmp
and
xor
sbb
add
mov
aad
sub
jmp
inc
cmp
jge
add
adc
jne
ss
scas
sbb
leave
daa
rcll
std
adc
dec
push
jle
push
mov
sub
push
inc
add
and
add
jecxz
aad
mov
cmp
and
sub
sahf
or
fsubs
pop
push
push
enter
shrb
repnz
test
lock
mov
scas
dec
shl
pop
jmp
push
inc
pop
in
sbb
mov
test
push
jns
test
in
dec
sub
jo
sbb
xchg
arpl
mov
call
dec
mov
sub
jg
dec
cmc
dec
dec
inc
sbb
pop
dec
jnp
ret
ret
daa
shrl
xchg
icebp
roll
inc
and
in
add
in
or
rolb
inc
rolb
sbb
push
daa
ret
dec
xor
sub
push
inc
movsb
and
pop
in
xchg
dec
add
jmp
inc
cmpb
adc
bound
cvtps2pi
pop
fistps
jmp
dec
add
add
cmp
or
inc
inc
inc
pop
movsl
lds
es
and
aaa
cmp
and
sbbl
nop
pop
movsb
rolb
inc
add
pop
repnz
cmp
inc
push
in
rcl
shrl
rcr
es
pop
popf
add
xor
jecxz
sarb
addl
pop
sar
mov
shl
or
daa
jbe
sub
shl
cmp
je
flds
sub
pop
lods
sbb
mov
mov
push
lcall
push
lds
imul
cwtl
movzbl
fcmovnbe
adc
int3
mov
addl
pavgb
loopne
dec
or
je
stos
adc
btr
jo
mov
push
add
mov
movsb
push
push
inc
xchg
cs
int
pop
adc
pop
fmuls
mov
inc
dec
test
in
jmp
rolb
sbb
test
cli
pop
ja
and
rorb
mov
jb
jbe
dec
inc
xchg
dec
pop
mov
mov
jg
jmp
inc
cmp
jne
inc
decl
jne
les
add
lcall
enter
xchg
loopne
add
adc
push
sub
and
in
out
and
add
xor
push
lods
sahf
and
repnz
xchg
inc
inc
in
lock
in
jae
test
fldcw
adc
int3
das
sub
test
add
shrl
push
out
add
insb
add
jno
notl
test
icebp
cli
mov
les
mov
mov
fidivrl
gs
xchg
ja
pop
adc
mov
lcall
jns
sub
outsl
jne
xchg
cmp
add
xor
pop
inc
pop
add
push
mov
sub
xchg
push
adc
sub
push
ret
pop
and
push
cs
add
outsb
adc
add
mov
in
aas
or
and
dec
lods
stos
daa
sbb
cmp
sbb
aam
mov
and
add
push
ljmp
dec
and
xchg
push
fmuls
push
lret
repnz
pop
jnp
in
xchg
and
and
lcall
and
in
scas
inc
cmp
lahf
int
push
inc
daa
pusha
inc
inc
mov
out
mov
imul
and
loope
aaa
dec
stc
hlt
pop
xchg
and
les
xchg
loopne
clc
icebp
lock
add
lea
in
cmp
push
or
and
enter
shlb
xor
lea
enter
xorb
xchg
icebp
fld
add
push
mov
imul
rcrb
mov
mov
mov
add
pop
pop
push
sarl
pop
js
orb
rcl
sbb
mov
xchg
inc
xor
and
adc
pop
aaa
fiadds
mov
sub
mov
daa
es
dec
clc
rclb
repz
adc
jecxz
ljmp
dec
or
xchg
js
mov
push
cmpsb
bswap
mov
pop
fidivrs
cmpsb
ficoms
push
imul
mov
jne
add
in
sub
in
aas
mov
mov
jo
imul
jecxz
cmp
lock
scas
add
jno
push
pop
in
push
in
sbb
add
icebp
xor
jne
inc
sar
and
pop
adc
xor
inc
in
mov
dec
out
out
mov
or
sbbl
cmc
xor
push
xchg
lds
add
lret
cltd
push
movsb
sub
out
in
pop
enter
mov
and
hlt
adc
push
pushf
xchg
enter
shll
xor
pop
fcompp
stos
aad
xor
and
inc
jb
es
xchg
lcall
cld
lock
in
mov
push
es
rorl
jno
add
push
int
fwait
nop
cwtl
pop
adc
xor
loopne
daa
pushf
ret
mov
inc
inc
adc
fcmovnb
push
popa
subl
dec
xor
xchg
sbb
and
adc
jo
and
push
push
push
cmp
pusha
es
or
adc
push
push
call
leave
inc
mov
mov
pop
dec
mov
sbb
cmp
out
adc
jae
cmc
cs
loopne
add
xchg
repnz
inc
cmc
inc
mov
ret
addr16
clc
push
adc
pushf
ss
adc
cld
xor
or
lret
clc
fcoml
ret
adc
or
lea
scas
nop
cmp
sub
and
mov
addr16
xor
mov
xchg
sbbb
push
or
rcl
imul
out
and
aam
into
sbb
xor
rorl
out
sqrtps
xchg
js
addl
add
adc
lods
jecxz
inc
push
or
out
xor
push
or
ds
cmp
ret
cmp
out
or
pop
scas
in
or
rolb
cmp
inc
mov
sub
sbb
inc
ret
repnz
push
sahf
add
cmp
das
mov
insb
or
and
sahf
pop
cmpsl
add
pop
push
clc
clc
add
sahf
lods
sbb
nop
cmpsb
lahf
popa
lock
adc
ja
enter
inc
loopne
out
sub
and
pop
mov
pop
push
dec
sub
xlat
push
mov
add
les
cmp
imul
push
add
pop
xchg
lahf
pop
or
in
mov
pop
inc
xor
jbe
pushf
loope
adc
sbb
lds
inc
insb
scas
loop
mov
xchg
inc
sub
outsl
mov
shr
push
enter
das
mov
inc
mov
xchg
pushf
jbe
int
scas
push
mov
xchg
push
sub
jmp
js
mov
fiadds
inc
mov
leave
xorb
add
mov
cmp
lcall
insb
adc
push
test
shlb
daa
je
leave
mov
cmpsb
adc
inc
in
adc
movsl
in
xor
nop
mov
cmpsl
jae
dec
inc
testl
mov
das
or
add
or
lret
mov
sub
movsl
xchg
out
ds
and
cmpb
jne
or
dec
dec
shll
add
int
mov
xchg
mov
call
shl
adc
popf
adc
pushf
arpl
pop
mov
test
xor
sbb
scas
jne
call
add
sub
jl
inc
inc
mov
mov
pop
pop
jne
testb
orb
sbb
push
mov
inc
add
aad
or
test
inc
rcrb
pop
cmp
xchg
mov
pop
push
adc
das
ret
mov
andb
add
adc
cs
xor
mov
sbb
mov
sti
es
rolb
lock
jmp
fsubs
leave
js
inc
fmuls
adc
mov
mov
addr16
mov
or
inc
and
xchg
imul
and
sub
sub
xchg
sub
adc
mov
xchg
test
sub
push
sbbb
adc
les
sub
test
add
cmp
inc
stos
sbb
inc
adc
or
shll
fstl
decl
iret
test
insl
movsb
in
xchg
insb
mov
das
pop
cld
icebp
inc
dec
push
aas
sub
dec
sbb
push
adc
add
sub
icebp
adc
pop
loope
inc
cs
lock
cwtl
mov
ret
adc
mov
maskmovq
jg
mov
jmp
mov
adc
jmp
test
out
add
rorl
add
insb
lock
or
mov
add
jl
js
loopne
shrl
mov
jg
test
adc
int3
cld
adc
mov
xchg
sbb
ret
pusha
jns
push
aas
fisttpl
inc
mov
repnz
movb
jecxz
xchg
inc
mov
cmp
cwtl
or
sbb
xchg
scas
mov
sbb
mov
push
mov
adc
mov
imull
xor
int
je
and
mov
in
test
dec
pop
sub
scas
add
sbbl
and
insb
ret
jge
inc
or
or
xchg
mov
cmp
adc
adc
fidivrs
xor
jge
aad
and
xchg
push
push
test
xchg
mov
lods
rorl
mov
add
inc
hlt
shr
sub
loopne
mov
and
jecxz
or
and
arpl
rol
jg
jl
fcomip
iret
and
add
cmp
jne
test
testl
mov
clc
jle
and
fistpl
push
xchg
mov
hlt
jl
xor
in
rcr
lea
sbb
js
mov
jg
je
orb
fwait
pop
cwtl
nop
rcll
cmpsl
enter
or
test
data16
mov
lret
or
inc
or
js
xchg
inc
push
dec
jle
adc
sub
add
adc
adcb
out
rolb
js
mov
orl
sti
mov
mov
pop
shlb
lods
cmp
dec
inc
jecxz
mov
les
or
inc
pop
ret
jno
pop
add
ss
mov
call
subb
dec
mov
and
ret
enter
movsl
cmpl
pop
adc
and
jb
and
outsl
jbe
and
jl
je
inc
mov
jno
loop
adc
mov
add
scas
int3
mov
inc
pusha
mov
sbb
mov
pop
push
add
adc
orb
nop
adc
out
loope
sbb
add
into
jne
sbb
lcall
popa
xor
loopne
jbe
arpl
xor
lods
mov
pop
cmp
lea
lcall
push
xchg
lret
mov
test
fisttps
add
adc
fstpl
daa
pop
ret
inc
sbb
data16
jbe
pop
outsl
adc
sub
jns
test
dec
pusha
mov
popf
sbb
or
pop
int3
movsb
cltd
aam
lret
rcll
adc
dec
mov
add
and
fwait
push
je
sub
insb
add
cmc
call
pop
mov
insl
xor
cmp
jge
ret
ja
add
ja
mov
and
lret
stc
fwait
loopne
mov
pushf
in
sub
cmp
xor
imul
sub
aaa
mov
inc
adc
mov
cmpsb
movsl
ret
add
dec
sahf
sbbl
enter
nop
xchg
pop
lahf
ret
cld
pusha
add
cs
add
mov
mov
ret
mov
dec
sub
push
cmp
pop
cmp
mov
adc
pop
cmp
xchg
pop
fisubl
mov
imul
jno
pop
mov
mov
insl
lods
pop
jno
test
fisubl
mov
mov
lret
loopne,pn
stc
sahf
lods
fwait
sbb
test
xlat
arpl
adc
add
push
push
icebp
xchg
insb
xor
nop
scas
or
fwait
mov
clc
sbb
fistpll
popf
movsb
cmpl
xchg
inc
or
lods
and
or
sub
inc
pop
pop
xor
cmp
or
xchg
lret
repnz
add
gs
mov
push
jmp
adc
enter
jge
leave
loopne
cmp
pop
dec
andb
or
rcr
ss
sarb
scas
fmull
adc
mov
push
sbb
add
xor
outsb
dec
pop
jbe
aad
or
inc
inc
mov
jae
sub
pop
mov
into
jne
or
add
lods
mov
into
jae
mov
add
fldl
jb
je
dec
or
adc
sbb
testb
push
or
cmc
outsl
adc
or
mov
test
mov
ja
or
lock
jp
test
cli
int3
subb
add
mov
cmp
pushf
cmp
dec
or
js
lock
or
std
or
pop
movsl
cmp
jge
xchg
and
add
or
mov
addl
xor
sar
add
loopne
add
inc
test
sub
cmp
push
jne
pop
cmp
lea
lahf
inc
cmc
pop
loopne
loope
mov
push
out
loope
dec
lods
shrb
pop
pop
or
cmp
mov
notl
ljmp
rcll
mov
add
cmp
fidivrs
xchg
sub
jnp
jle
or
mov
and
jne
js
lds
dec
and
sub
inc
aas
lcall
mov
mov
popa
or
lcall
or
adc
xor
mov
pushf
cmp
sbb
mov
xchg
call
push
or
out
aas
sahf
mov
sahf
mov
xor
adc
xor
push
out
and
icebp
push
int3
xchg
pop
jg
les
jmp
adc
cmpsl
jo
fadds
test
and
push
xlat
les
fcmovu
mov
js
loope
addr16
sbb
add
xor
lock
imul
push
or
popa
cld
push
adc
ret
mov
nop
pop
daa
stos
sbb
mov
fcom
rclb
add
adc
cmc
int
data16
push
mov
js
jo
fstl
mov
mov
cmpsb
xchg
outsl
out
inc
mov
enter
add
ret
nop
rorl
inc
push
mov
adc
daa
or
or
inc
inc
xchg
ja
enter
or
popf
mov
jp
mov
mov
fidivs
lods
jne,pn
imul
lea
xchg
pop
inc
sbb
add
int3
jae
mov
pop
dec
popa
mov
or
leave
mov
daa
aas
mov
add
hlt
popa
jle,pn
subb
push
add
push
push
push
movb
call
push
sub
fidivrs
jp
mov
mov
sbb
pop
dec
sub
push
xor
push
repnz
in
jmp
mov
or
lock
jae
scas
inc
fmull
adc
inc
lea
imulb
fisubrl
mov
inc
ljmp
and
or
fistpl
xor
inc
fisttpll
int
sbb
push
and
jl
inc
test
sbb
cmpl
dec
xchg
outsb
and
add
mov
in
mov
sub
jns
gs
xor
cmpl
add
ja
sbb
mov
leave
jae
and
clc
popf
test
dec
sub
repz
pop
dec
aas
adc
jmp
movaps
lods
ss
js
inc
xchg
cmpsb
dec
shlb
push
dec
cmpsl
adc
aas
jbe
arpl
aad
or
dec
pop
inc
cmp
repnz
icebp
ja
jl
or
jmp
pusha
sbbl
or
cmp
andw
inc
cmpsb
pop
add
fldenv
inc
inc
outsl
adc
fs
add
mov
add
add
adc
cmp
jno
mov
adc
rol
testl
inc
pop
push
shlb
or
adc
xorl
mov
adc
and
mov
repnz
dec
je
inc
pop
mov
sub
add
and
add
xlat
mov
sbb
daa
lret
fldenv
mov
pop
or
or
stos
push
and
out
mov
dec
loopne
rorb
push
sub
out
add
adc
mov
push
adc
data16
adc
sub
cwtl
mov
movsb
adc
and
cmp
in
fcoms
sub
jnp
dec
adc
lret
mov
xchg
push
jo
pusha
icebp
mov
addr16
add
mov
push
dec
bound
icebp
cmpsl
jecxz
adc
cmp
popa
mov
xor
xor
cmpsl
ds
outsb
mov
or
sbb
dec
adc
stos
adc
js
adc
test
add
scas
test
mov
mov
dec
hlt
aaa
push
test
or
cmpsl
pop
xor
sub
mov
outsb
jle
pop
leave
in
decl
pop
and
or
rcrb
push
inc
lret
or
sbb
pop
add
and
aad
mov
inc
call
and
xor
ljmp
jl
and
jnp
jmp
xor
test
into
add
rorb
addb
add
fldenv
nop
jl
push
mov
mov
jne
or
push
add
dec
xor
push
mov
pop
test
inc
les
mov
sbb
lods
and
mov
cld
sbb
mov
sbb
mov
lods
push
push
in
or
adc
or
arpl
arpl
faddl
movsb
jno
xor
movsl
in
insl
sbb
rolb
xor
leave
xor
jle
jmp
movsb
inc
incl
cmc
insl
pop
inc
jb
xchg
push
mov
mov
lcall
shlb
outsb
sbb
mov
add
lods
mov
jne
add
out
dec
jne
and
jbe
jmp
cmp
hlt
jne
pop
or
pop
lods
mov
jmp
scas
fistps
add
cmp
enter
or
lock
call
pop
or
negb
xor
loopne
aam
call
sub
adc
pop
jl
push
into
cmp
xchg
sub
mov
je
sbb
add
shll
scas
cltd
shlb
add
push
jecxz
stos
mov
xor
pcmpgtd
mov
clc
add
or
dec
ja
ja
mov
incb
jle
sbb
fldenv
mov
aam
test
lret
or
cmpsl
fsubs
pop
test
add
jl
dec
mov
sbb
adc
inc
fdivrl
shll
dec
cmpsl
push
cmp
jecxz
sub
rol
sub
orl
dec
jle
push
mov
and
xor
std
inc
cmp
sbb
jne
or
lods
and
sbb
inc
or
mov
mov
adc
in
cmp
jbe
and
fwait
inc
sarl
add
inc
hlt
icebp
xor
dec
loop
pop
daa
ss
mov
loop
js
mov
inc
xor
sub
jne
data16
sbb
fnsave
js
shll
or
fdivs
inc
push
mov
stc
dec
pop
aad
roll
shlb
push
js
ds
cmpsl
mov
arpl
outsb
es
sbb
inc
cmpb
or
xchg
mov
inc
sbb
in
fstp
or
gs
mov
sti
not
and
aaa
int3
ret
pop
mov
dec
xchg
add
add
cmpsl
pushf
xor
ret
add
add
pop
push
mov
pushf
mov
pop
test
arpl
jno
push
popf
andb
or
int3
fdivs
sub
or
push
mov
adc
nop
pop
int3
bnd
scas
sbb
xor
into
js
popa
cmp
dec
push
aad
addr16
int
xchg
jo
imul
push
insb
mov
xchg
in
dec
jno
sub
daa
mov
hlt
xchg
jnp
pop
test
push
pop
mov
dec
sbb
adc
addl
ret
pop
dec
sub
lret
mov
pop
sub
adc
das
fwait
mov
push
and
jae
cwtl
xchg
data16
outsb
xchg
xchg
les
popa
mov
clc
lds
in
xor
jo
fisttpll
sbb
je
in
xchg
xchg
xchg
or
jne
in
mov
pop
inc
pop
subb
aaa
vmovaps
enter
adc
xor
fdivs
rcll
xor
inc
xor
daa
fadds
cmc
and
ss
or
add
and
push
mov
cmp
adc
jns
in
jne
adc
fcoms
jecxz
inc
lret
push
imulb
or
mov
cli
jge
mov
pop
ss
jb
fs
xchg
out
push
mov
mov
pop
pushf
jne
jo
pushf
mov
push
add
add
mov
je
into
sbb
and
sbb
add
addr16
in
adc
pusha
sbb
push
xor
int3
les
loope
push
push
stc
adc
fs
inc
xor
mov
cltd
insb
pop
aaa
nop
sbb
scas
and
js
je
or
lods
sarb
sbb
pop
movl
sbb
fdiv
mov
and
lods
mov
xchg
or
in
adc
test
mov
add
inc
sbb
dec
mov
xor
push
and
or
lods
pop
push
or
insb
ret
pop
xlat
jecxz
pop
bound
jmp
cmp
lcall
push
inc
ret
je
sbb
sub
ret
fwait
sti
xorb
cld
data16
cld
push
sbb
popa
sub
cmp
out
shlb
cmpsb
cltd
aad
clc
cld
test
mov
sub
lahf
push
add
ja
mov
cmp
pusha
jb
fsubrs
mov
cmpsb
fcoml
mov
xchg
mov
or
sbb
add
mov
adc
cmpsb
cltd
nop
add
or
roll
pop
mov
lret
lds
lahf
bound
fwait
test
xor
imul
xchg
sbb
lret
add
mov
add
and
imul
or
xchg
inc
dec
lods
shll
add
push
movsb
mov
imul
imul
adc
roll
and
add
je
pop
add
cmpsl
rcrb
in
mov
pop
adc
inc
movb
dec
loopne
movsbl
insl
lock
mov
mov
adc
test
dec
cmpsl
mov
mov
daa
cmp
ret
in
insl
movsl
jo
xchg
push
cltd
fwait
out
stos
or
test
inc
adc
aas
aas
in
fsqrt
mov
mov
jne
sub
comiss
push
push
mov
inc
inc
call
jecxz
adc
mov
ds
sbbl
leave
adc
pop
and
add
pop
mov
jne
sbb
shl
push
inc
fwait
out
fsub
mov
or
daa
in
or
jae
mov
mov
jne
or
movsb
in
int3
dec
push
jmp
int
hlt
lret
xchg
nop
outsb
arpl
out
test
stc
in
dec
inc
push
sub
into
sub
pop
loope
hlt
inc
xor
pop
popa
sub
jp
ficoml
jp
or
fdivl
nop
sti
jno
cmpb
mov
mov
xchg
adc
mov
mov
and
fcoms
pop
inc
cmp
xor
std
scas
xchg
push
ret
aam
pop
pop
cmpb
inc
popa
add
xorb
test
and
scas
push
mov
sub
mov
lock
sbb
rclb
adcb
cwtl
scas
mov
add
loope
movsb
lds
adc
jl
push
rcl
test
mov
fnstenv
adc
js
mov
imul
out
and
sub
lret
mov
outsb
add
push
lea
call
mov
push
inc
pusha
xchg
imul
and
mov
pushf
mov
jne
inc
mov
adc
or
repz
faddl
jle
push
lret
iret
lock
pop
sar
loope
lds
in
cmpsb
hlt
dec
mov
jmp
iret
cld
inc
and
add
push
data16
or
or
out
or
aad
dec
rcll
pop
mov
addr16
clc
jge
inc
or
fdivl
mov
cmp
pushf
xchg
call
xchg
mov
test
push
aaa
mov
xchg
shl
inc
es
imull
fstl
sub
clc
jnp
add
mov
adc
loope
orl
ret
adc
dec
imul
arpl
insb
push
mov
int3
repz
jnp
cmpsb
pop
dec
push
rolb
xor
pushf
imul
pop
inc
mov
idivl
push
ret
add
daa
mov
add
insl
mov
dec
and
movsl
jbe
mov
fwait
aaa
cmpsl
in
popf
adcb
insl
adc
mov
mov
movsl
into
and
push
repnz
leave
add
fdivl
in
sub
sti
sub
adc
loopne
lret
cmp
and
insb
xchg
push
xor
shl
pushf
inc
push
sbb
fdivrs
and
into
sbb
dec
fimuls
gs
adc
stos
lea
sub
icebp
data16
daa
loop
aaa
jge
out
jb
daa
push
fidivrs
sarl
bound
ficoml
aas
dec
repz
pop
aam
adc
or
aam
ret
rolb
pop
and
and
push
scas
ret
inc
dec
pop
dec
pop
jmp
inc
pop
jge
mov
or
mov
mov
push
clc
int3
cwtl
inc
or
add
add
xor
addr16
repnz
mov
rcl
add
lret
fcomp
fidivrs
jno
scas
fstps
xlat
imul
dec
test
push
and
stc
add
inc
sbb
pop
cmp
sti
es
mov
cld
xlat
adc
sub
shlb
lods
cmp
adc
fwait
sbb
mov
fdivl
mov
mov
fsubr
xor
jns,pn
lea
shlb
mov
out
ret
pushf
aam
add
jo
sbb
dec
cmp
out
subb
mov
sbb
sbb
imul
and
mov
nop
ja
call
mov
xchg
ficoml
or
ficoml
sub
dec
fwait
mov
lds
mov
fisubs
insb
iret
mov
xchg
and
mov
xor
sub
fcoml
pushl
or
or
fstl
xchg
xor
orl
cltd
ss
popf
aam
push
fistps
sbb
sbbl
loop
lock
push
dec
jmp
adc
mov
cld
mov
mov
or
xchg
jb
add
test
xlat
xchg
xchg
fwait
movl
popa
push
adc
test
aaa
or
inc
mov
mov
cmp
rolb
sub
and
or
adc
daa
movsl
ja
push
mov
ret
jmp
adc
inc
mov
movsl
clc
mov
frstor
pop
inc
cmpb
add
cli
sbb
test
pop
ret
push
fwait
mov
push
sbb
mov
and
div
fdiv
adc
dec
aas
inc
insl
add
dec
adc
rorb
inc
out
loopne
fildl
push
je
push
adc
mov
sbbl
push
and
mov
push
cmp
sub
idiv
fsubs
jl
jns
and
or
int
int
inc
out
ret
ja
inc
shll
adc
je
jmp
push
and
or
and
add
dec
add
inc
cmpl
movsb
rclb
addb
dec
sbb
inc
push
leave
mov
jo
nop
mov
incb
push
or
add
cmp
xchg
fisubrl
popf
aas
fisubrl
loope
push
add
cs
sbb
or
pop
ljmp
dec
fadd
and
imul
mov
pop
pop
or
leave
popa
mov
das
pusha
repz
nop
xchg
nop
sub
mov
pop
xor
mov
sub
dec
imul
push
xchg
push
cmpsb
ja
lcall
cmpsb
or
cli
add
push
sbb
cmp
gs
insb
insl
push
mov
fdivl
in
mov
xchg
dec
leave
add
ret
lea
mov
push
fdivs
jmp
pop
push
adc
push
mov
mov
add
cmp
sub
pusha
shll
in
mov
push
das
rcr
pushf
and
lods
or
xor
fsubl
les
mov
dec
pop
imull
jne
jmp
dec
aad
pop
and
or
lock
jb
adc
loopne
jmp
scas
bound
jne
orl
pop
cmpsb
es
lea
mov
pop
inc
aam
jae
jae
jbe
mov
inc
sub
push
push
data16
mov
call
cmp
xchg
mov
jl
push
cmp
test
push
dec
test
ficomps
inc
mov
mov
testl
lret
rorl
mov
stc
add
repnz
inc
push
mov
mov
inc
inc
call
call
in
test
dec
adc
push
fmuls
jp
sub
pop
push
cmp
movsb
pop
cmpsl
sbb
jg
sbb
leave
push
sbb
or
fs
bound
sarl
or
jmp
mov
popa
push
add
push
fisubrl
push
rcr
stos
push
cmp
cmc
sub
jmp
dec
and
aaa
pop
jg
add
movsb
ja
mov
loope
xorb
pop
fwait
test
xor
sub
and
mov
js
inc
arpl
jno
mov
cmp
adc
push
pushf
movb
ds
repz
rclb
arpl
mov
xor
clc
clc
mov
lea
loope
or
rcrb
mov
lock
les
lds
push
mov
daa
adc
ret
cmp
stc
int3
and
or
call
das
mov
jmp
mov
or
inc
pop
sub
push
mov
xor
arpl
xlat
pushf
cli
loop
cmp
popf
ficoms
loope
xchg
push
mov
mov
push
int
call
push
push
mov
and
adc
stos
das
sbb
je
lret
clc
nop
lret
inc
rcl
movsbl
lods
xor
jns
cs
cmp
sub
in
add
mov
push
inc
dec
int3
out
rcr
push
cmp
insl
outsb
adc
imulb
test
ret
call
inc
push
mov
iret
xor
dec
scas
dec
push
cmpl
leave
ret
and
cmp
cmp
in
adcb
lret
mov
loopne
xchg
int3
xchg
movsl
mov
dec
or
dec
rcrb
mov
lret
int3
ret
lods
inc
or
inc
adc
cmp
fwait
test
ret
adc
pushf
sbb
pusha
mov
pusha
cmpsl
mov
add
ret
mov
bswap
cmpsb
test
jle
jl
or
sbb
cmp
jo
inc
adc
add
gs
and
cmpl
xchg
imul
and
mov
push
add
jb
ret
xor
cmpb
add
inc
test
psubusb
jl
das
sbb
cmp
call
fisttps
inc
andb
add
ss
dec
cs
or
aam
enter
loope
int
push
int
dec
mov
cmp
add
call
dec
push
mov
pop
sarl
insb
sbb
push
jmp
insl
xor
jmp
addr16
sub
cmp
xchg
sbb
mov
xchg
cmp
push
pop
push
cld
add
aad
pop
push
xchg
movsl
cmpb
cmp
icebp
orb
push
sub
cld
nop
and
je
or
pop
push
mov
and
push
out
push
enter
xor
out
sbb
jg
add
mov
sbbb
sbb
and
dec
sbb
sbb
jl
test
mov
adc
add
fwait
mov
adc
jl
add
push
mov
inc
nop
lret
pop
push
test
pop
xor
out
mov
in
adc
rorl
push
and
adc
jo
mov
and
inc
call
int3
icebp
les
add
lahf
add
hlt
add
fnstenv
daa
icebp
push
or
mov
xor
mov
movsl
push
sbb
aad
adc
lea
add
mov
push
outsl
pop
movsb
xchg
jge
adc
and
mov
jo
cmpb
ret
fs
addr16
pop
xor
icebp
insl
movsl
aas
jnp
cmp
in
xor
lcall
js
fwait
or
sbb
aaa
lods
rcrl
dec
sbb
call
mov
jnp
popa
mov
daa
sbb
cmp
cmp
xchg
fidivrl
sbb
movups
repnz
push
lock
add
sub
ficoms
mov
mov
inc
mov
mov
or
inc
mov
leave
xor
mov
jnp
ret
mov
fucomp
testb
jmp
addb
popf
push
ficompl
dec
mov
pop
sub
lock
adc
and
xor
lock
lock
sub
aad
add
mov
add
adc
mov
cmp
push
shll
inc
push
sub
movsb
loope
pop
adc
rcrb
mov
shrb
or
popa
mov
push
and
lahf
pop
adc
fnstenv
adc
xchg
adc
add
xor
and
jnp
adc
testl
and
in
outsb
sbb
aad
je
ss
aam
jp
and
add
and
cmp
jl
add
inc
scas
and
aam
and
or
push
jecxz
fsubp
push
fs
out
mov
setne
mov
pop
mov
inc
incb
loopne
pusha
repnz
enter
push
pop
dec
gs
mov
jo
cmpsl
xor
or
shlb
add
mov
ss
inc
push
inc
popf
add
movsl
notl
arpl
decb
in
dec
push
mov
xchg
lret
cwtl
or
dec
dec
or
in
inc
mov
cmp
jne
es
je
call
dec
hlt
and
inc
ds
add
push
dec
mov
push
pusha
imul
addr16
ret
bnd
addr16
pop
dec
aas
sub
cmpl
inc
mov
mov
or
sarl
aad
or
arpl
inc
dec
jne
addl
adc
add
or
outsl
cs
scas
sarb
and
adc
add
mov
sub
jmp
sbb
mov
insb
adc
sub
aas
mov
dec
lods
lahf
xlat
inc
or
dec
inc
add
xor
dec
and
mov
sbb
shlb
push
lods
xlat
leave
aas
xchg
xor
fs
pop
jp
push
outsl
jge
dec
mov
jg
push
dec
cmp
xlat
sub
fisttpll
xor
lret
pop
mov
pop
xlat
clc
pop
jl
inc
outsb
mov
jmp
dec
sbb
decb
and
outsb
pop
sub
lods
sbb
and
or
popf
push
imul
aaa
mov
ja
repnz
add
mul
xor
inc
inc
and
mov
icebp
add
cmp
push
mov
push
bound
loope
jnp
add
fcoms
sbb
rcl
dec
cmp
sub
pusha
add
dec
sbb
xchg
outsb
daa
add
loope
inc
inc
ds
jge
jne
and
and
lret
aas
xlat
or
adc
or
and
and
lcall
scas
inc
fmuls
insb
sahf
or
mov
dec
or
popf
and
pop
or
cmpsl
adc
add
das
out
mov
mov
pop
out
mov
jmp
test
test
lods
mov
loopne
mov
dec
scas
jg
xchg
sub
lock
add
mov
int
insb
dec
add
pop
or
push
imul
inc
add
add
adc
rolb
jne
push
mov
insl
push
in
andb
pop
inc
xchg
lods
sbb
jmp
pop
adc
into
dec
sarb
sbb
push
pop
sar
and
out
inc
push
pop
xor
and
add
pop
aas
js
fidivl
imul
ja
fwait
xor
inc
push
sub
je
xchg
repz
and
ss
dec
dec
rclb
inc
inc
fwait
lock
rorb
inc
je
dec
push
out
fldl
sbb
jo
mov
mov
stos
mov
mov
and
push
cwtl
movsl
cmpsl
arpl
or
xorb
or
stos
or
xlat
adc
imul
sbb
lret
cmp
jne
pop
lods
pop
pop
adc
fwait
lock
frstor
adc
sub
mov
cmp
aam
aad
mov
push
in
or
pop
push
movl
and
push
adc
cmp
xor
or
add
fs
btc
add
fldenv
inc
dec
adc
jge
add
data16
imul
xchg
test
or
add
push
repz
inc
xor
add
add
xlat
pop
adc
dec
or
mov
jg
cmpl
mov
ss
test
or
xchg
outsb
and
sbb
add
add
insb
or
sub
xor
pop
loope
adc
push
adc
cmp
xchg
inc
dec
inc
add
lret
incl
or
imul
test
hlt
xor
stos
or
mov
sarb
in
notb
or
add
adc
aaa
icebp
cld
hlt
add
adc
add
or
cmc
push
imul
cmp
or
mov
and
testb
stos
cmpsb
hlt
popf
add
cmp
into
xchg
sbbl
fwait
fs
es
adc
jp
sbb
add
les
cmp
fdivrl
push
mov
push
inc
cld
sub
pop
loopne
mov
pusha
in
push
and
shlb
movsb
push
mov
out
sub
adc
cmp
adc
push
push
outsb
out
pusha
aaa
addr16
and
or
sbb
dec
xlat
add
xchg
xchg
movsl
inc
push
sbb
loopne
pop
xchg
jnp
sub
sub
xchg
in
mov
xchg
xchg
or
add
cmp
or
pop
cwtl
jmp
divps
mov
in
push
add
sbb
gs
aad
sub
jmp
adc
movl
add
sub
sub
repz
and
ljmp
ljmp
or
inc
inc
adc
xchg
mov
add
xor
popa
testl
cmpsl
lret
inc
xor
and
pop
cmp
jne
scas
mov
sbb
xor
cmp
cmp
inc
add
adc
or
dec
sub
jo
mov
aaa
mov
xor
insb
push
shrb
lret
push
lahf
add
cmp
push
cmpl
mov
sub
mov
pop
or
add
movb
shll
add
jg
add
xchg
cmp
jg
idivl
xor
push
cmp
test
popf
fnstenv
or
jle
out
jge
adc
test
lock
mov
push
adc
xchg
pusha
or
pop
sbb
xor
adc
cmpb
popa
pop
sbb
clc
cs
add
and
push
adc
inc
pop
pop
dec
lods
mov
pop
hlt
push
push
push
test
adc
fisubl
adc
fadds
jge
push
push
loope
adc
lock
push
cld
push
test
sbb
add
jle
outsb
cld
push
jo
push
push
pop
insb
jmp
sti
xor
call
push
pop
scas
in
and
pop
jge
lret
sub
push
dec
in
rclb
addr16
into
lret
scas
orb
sub
je
xor
test
mov
mov
call
or
push
std
jmp
and
cmp
cli
pop
popa
cwtl
add
rcr
dec
sub
addb
xor
pop
imul
inc
cmp
jp
outsb
pusha
mov
pop
and
mov
sbb
xlat
cmp
nop
push
cmpsb
push
jo
nop
inc
push
sbb
je
push
sbb
ja
sbb
jns
jnp
fs
inc
jl
jle
nop
inc
push
jg
popa
nop
inc
push
sbb
fs
push
sbb
addr16
sbb
imul
insb
insl
outsb
fs
inc
push
outsl
push
push
nop
inc
push
sbb
push
inc
push
sbb
push
push
sbb
pop
pop
pop
sbb
pop
pop
pop
fs
inc
push
pop
inc
inc
nop
inc
push
sbb
inc
inc
push
sbb
inc
push
sbb
dec
dec
dec
sbb
dec
dec
dec
fs
inc
push
dec
xor
nop
inc
push
sbb
xor
push
sbb
aaa
push
sbb
cmp
cmp
fs
inc
cmp
ds
inc
push
aas
and
mov
dec
std
and
and
push
fcomps
push
aaa
insb
outsl
inc
movsb
rcll
adc
push
stos
std
xchg
add
mov
das
cmpl
pop
sbb
inc
sub
xchg
jle
outsl
add
push
imul
jo
loop
or
bound
ss
add
fwait
jae
xor
ret
or
dec
nop
nop
push
out
xor
gs
cmpsb
ret
adc
fists
rorl
je
insb
leave
test
push
data16
faddl
or
or
sarb
gs
cmp
gs
cmc
ficompl
dec
ljmp
popl
divl
nop
das
adc
cmpsb
push
gs
int
outsb
int
adc
pop
jo
outsl
mov
imulb
popa
jae
add
sbb
or
jo
xchg
add
inc
jge
or
in
outsb
jae
imull
out
jl
or
loop
cmp
int3
js
inc
popf
mov
push
push
push
dec
outsl
jo
je
pusha
jns
in
inc
jns
sbb
or
not
addr16
dec
add
dec
imul
test
xor
insl
xchg
or
aas
mov
lahf
mov
or
ror
ret
adc
add
add
jne
fs
xor
inc
jnp
fmuls
add
dec
jge
jp
neg
test
aaa
or
push
or
outsl
enter
inc
imul
mov
jae
es
outsl
cld
ret
jnp
add
pop
or
adc
sbb
les
addr16
jle
mov
test
fcoml
ja
push
aad
jb
sbb
mov
sbb
or
cmpsb
push
push
aam
adc
addr16
xor
and
mov
pop
cmpsl
inc
xchg
insl
or
rolb
loopne
add
in
in
add
sbb
sbb
jbe
adc
dec
andb
outsb
das
push
sub
adc
add
shr
pop
shl
aam
adc
and
push
add
pop
xchg
pop
aas
pop
std
lret
sbb
add
bound
add
dec
mov
sbb
and
scas
push
push
dec
and
ret
jl
xchg
add
cmp
fs
pop
repz
cmp
add
lret
sarb
imul
push
jns
addb
lea
fcmovb
push
cmp
lahf
fs
pop
sbbb
sbb
or
xchg
cmp
mov
sahf
pop
sbb
jg
and
adcb
add
dec
enter
add
xor
sbb
add
add
lods
sbb
xor
cmp
adc
ds
ds
xchg
inc
add
push
inc
je
test
incl
or
out
scas
jbe
shlb
clc
push
push
cmp
bnd
sbb
add
add
xchg
pop
mov
and
and
decl
jns
sub
mov
jns
add
adc
push
xor
pop
daa
dec
and
test
shrb
push
inc
popa
jne
out
or
jae
pop
sbb
mov
pusha
lret
mov
roll
mov
ds
aas
pop
int3
push
or
lods
cld
add
stos
sbb
rcrl
add
ret
imul
lock
stos
sub
mov
std
inc
test
or
aam
mov
insl
cmp
jo
or
and
jne
outsb
adc
inc
outsb
adc
dec
fisubs
xchg
and
vpmacssdd
add
fiadds
or
arpl
mov
add
or
fs
dec
outsl
jmp
addb
nop
lock
std
push
xchg
add
sub
mov
dec
push
mov
cmp
repnz
or
add
push
dec
push
sbb
cmp
xchg
ret
sbb
inc
push
movsb
adc
popa
shll
fildll
cld
mov
mov
sbb
pusha
mov
inc
cmp
fucomp
cs
xchg
insb
pop
testb
mov
and
shlb
fadds
sub
adc
in
nop
insb
fs
inc
hlt
aas
inc
stc
mov
push
ds
movlhps
inc
pop
or
jbe
inc
das
jl
push
in
insl
lods
mov
hlt
mov
aas
pop
inc
jno
pusha
ret
add
inc
in
xorl
pushf
push
cs
xlat
add
test
xchg
or
pushf
mov
fbld
sbb
xchg
daa
push
xor
sub
sbb
adc
cmpsl
or
js
xchg
xchg
rorb
or
push
or
loop
lock
sub
mov
dec
clc
push
movsb
dec
mov
pop
aaa
dec
adc
sbb
jle
push
push
testb
movsl
cs
pop
and
stos
popa
nop
sub
insb
or
cwtl
pop
test
enter
add
dec
push
movups
adc
addr16
pop
inc
lods
movb
adc
lcall
or
mov
aaa
or
jp
ret
or
push
mov
dec
insl
mov
mov
jo
inc
or
dec
xchg
movsl
mov
lods
ret
int3
lds
in
out
mov
xor
ficoms
jbe
mov
fcoml
or
inc
mov
mov
sbb
les
push
out
stc
test
pop
inc
dec
pop
pop
dec
outsl
cmp
movsb
pop
or
mov
pop
xchg
sub
cmp
pop
jg
pop
or
sbb
and
dec
subl
test
push
sub
hlt
fs
insl
mov
aas
or
mov
cmp
inc
xor
xchg
outsb
daa
xchg
daa
das
shrb
jo
jno
imul
jae
je
je
jbe
jp
int
add
pop
cmpb
test
pusha
sub
mov
fdivrl
js
pop
jb
mov
cmpb
push
les
cmp
popw
sbb
mov
hlt
or
mov
nop
in
or
mov
push
pop
enter
push
dec
arpl
pop
push
or
mov
daa
das
jns
mov
mov
mov
inc
push
or
inc
push
mov
or
das
test
loopne
ja
dec
pop
sbb
cmp
inc
mov
cmp
push
mov
fildll
insl
add
sbb
cmp
nop
and
cmp
xor
rol
xor
inc
dec
jne
inc
adc
roll
js
and
jg
push
or
push
pop
mov
test
pusha
adc
nop
iret
dec
push
ficoms
add
adc
add
cmovb
or
shll
add
cmp
jne
adc
flds
jb
shll
cmp
incb
inc
and
cmp
lret
xor
lock
adc
or
xchg
xchg
outsb
icebp
xchg
or
aam
mov
subl
lahf
inc
decl
dec
ds
int3
add
mov
pusha
orl
adcl
decl
lock
xor
sub
xchg
lret
add
sbb
mov
outsb
cwtl
xchg
js
sub
idivl
adc
pop
leave
sub
mov
sbb
dec
jbe
add
xor
xor
orl
outsl
add
jnp
fidivs
les
cmp
je
add
std
xlat
cmp
mov
xor
pop
fidivrl
add
repnz
sbb
inc
push
jle
aad
sbbl
int
mov
adc
lock
and
loope
mov
add
pop
inc
inc
fcomps
pop
leave
mov
push
loopne
mov
out
cmp
rol
and
mov
ret
insl
lea
jl
add
dec
incl
loopw
adc
pusha
sahf
jle
cs
jg
mov
push
mov
jae
adc
cld
push
repnz
push
cmpsb
adc
sbb
mov
or
shrb
and
mov
insb
mov
jmp
dec
popa
jb
outsl
outsb
inc
inc
and
mov
or
imul
xchg
jbe
add
jb
insb
gs
ret
push
xchg
aas
mov
push
aaa
addr16
imul
jb
dec
xchg
aas
fsubs
dec
imul
insb
outsl
ja
or
pop
lahf
jne
or
arpl
jae
popa
inc
jno
popa
mov
mov
or
pusha
pop
cmp
jns
add
mov
inc
or
push
or
inc
dec
addr16
push
sbb
cwtl
enter
dec
insl
push
das
pmaxub
lock
rcrl
push
pop
imul
mov
push
addr16
mov
dec
mov
inc
je
inc
push
aam
ficomps
es
lods
insb
cmp
in
mov
or
sbb
push
gs
mov
inc
fs
fmuls
and
inc
xchg
fs
inc
bound
mov
cmp
inc
pop
or
in
pusha
add
es
sub
sub
ffreep
xchg
fistpl
repz
adc
inc
ss
push
adc
sbb
imul
es
iret
push
dec
outsb
aas
push
outsb
jne
or
adc
bswap
and
pop
fimull
das
lahf
dec
cs
push
arpl
add
inc
xor
roll
cmp
das
cmp
and
das
sbb
nop
popa
daa
inc
das
or
mov
or
jmp
adcb
ret
push
mov
and
loop
push
out
pop
ja
ret
scas
cmp
xor
or
push
adc
or
in
test
pop
testw
pop
mov
or
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
aas
mov
notl
dec
inc
bound
ret
fimull
arpl
inc
inc
push
outsl
sar
adc
inc
push
dec
dec
push
mov
mov
inc
inc
shll
dec
and
cs
pop
out
inc
inc
xor
xor
adc
out
rol
inc
dec
inc
and
inc
xor
in
or
inc
dec
mov
push
push
dec
dec
push
dec
frstor
cmpsb
dec
lea
cs
cld
push
sbb
inc
inc
dec
push
ja
repnz
push
dec
inc
dec
or
pop
das
outsl
mov
inc
push
push
push
dec
push
jle
scas
xchg
dec
inc
dec
push
mov
cmp
pop
vmptrld
fwait
out
test
sti
mov
add
push
in
les
push
into
pop
insb
rclb
add
addr16
inc
mov
dec
or
sbbb
add
add
push
dec
or
lea
cmp
sbb
and
sbb
sbb
dec
sbb
add
add
pop
push
and
inc
lods
inc
mov
fmull
add
add
mov
dec
pusha
shrl
mov
fistpll
xor
imul
adc
mov
syscall
add
mov
stos
cmpsl
and
sbb
iret
and
xor
cmp
dec
sbb
iret
mov
call
leave
push
xor
jmp
inc
ret
das
and
cs
into
dec
xchg
out
push
inc
sbb
in
and
push
insb
imul
aaa
shrl
popf
push
or
xchg
loop
ficompl
cmp
and
cld
scas
sbbl
test
inc
das
cmp
inc
jo
cli
das
cltd
add
decl
cmp
jae
dec
dec
cmp
sbb
or
sbb
daa
mov
mov
sbb
mov
sbb
inc
adc
or
ret
jg
out
mov
sbb
out
repz
mov
or
enter
fcmovne
testb
mov
call
pop
adc
mov
aam
add
hlt
mov
mov
adc
lea
mov
mov
loope
sbb
add
push
mov
mov
mov
in
inc
fnstcw
jmp
jno
xor
out
nop
mov
inc
fiaddl
pop
fcomp
add
imul
push
pop
or
dec
cltd
lahf
stc
pop
inc
fildl
or
jmp
arpl
mov
scas
and
sbb
pop
subl
out
call
xchg
inc
or
mov
inc
in
mov
xlat
stos
pop
inc
mov
notb
cmp
loopne
inc
or
and
mov
pop
adc
push
inc
add
pop
int
and
pusha
rcrl
cmpsb
lahf
adc
jmp
cs
xchg
jbe
inc
lea
pop
mov
or
pop
enter
dec
xchg
mov
cld
movsb
fwait
jle
push
push
mov
fsubs
rorb
xor
push
das
cld
rcr
fcomip
ficoml
jp
mov
mov
adc
mov
sahf
adc
inc
rcr
mov
sti
or
arpl
into
inc
outsl
inc
sbb
cli
out
or
sbb
sbb
pop
sbb
inc
push
dec
push
inc
das
jns
addr16
loopne
inc
sbb
adc
mov
add
inc
push
leave
addb
mov
dec
dec
add
adc
mov
sbb
pop
movsl
add
pusha
and
in
pop
inc
and
dec
and
pusha
pop
and
lock
and
pmulhuw
cld
mov
push
dec
cld
addr16
jo
add
jne
fidivrs
push
and
or
mov
sbb
mov
inc
xor
push
xchg
push
push
and
cs
sbb
xchg
scas
dec
in
aam
and
add
loopne
or
inc
add
mov
imul
pmulhuw
sbb
shll
adc
pop
or
add
dec
xchg
inc
in
mov
and
or
js
nop
mov
imul
cmpsl
push
and
mov
nop
outsl
push
xchg
js
and
add
in
rolb
cmp
and
mov
mov
inc
inc
fwait
int3
adc
pop
dec
pushf
pushf
and
add
push
adc
xlat
lock
pop
lds
pop
xor
xchg
and
jnp
sub
xchg
adc
outsl
add
push
inc
out
insb
das
cmp
xchg
or
inc
or
ljmp
jmp
sub
jmp
je
pop
mov
shrl
add
call
in
gs
lock
and
pop
cmp
inc
dec
aas
aaa
adc
and
jmp
mov
mov
xchg
loop
xor
add
inc
cmp
inc
cmp
adc
or
daa
inc
dec
inc
add
adc
sbb
rclb
add
dec
sahf
and
mov
pop
ret
movl
mov
lods
lea
cmpsl
pop
adc
rorl
shlb
pusha
das
int3
mov
rolb
and
lds
nop
mov
and
das
jge
mov
cld
and
adc
sbb
mov
outsl
shrl
mov
mov
push
mov
sub
or
sub
mov
adc
xor
mov
or
push
sub
push
pop
push
outsb
xchg
mov
pushf
mov
les
or
or
xor
dec
in
test
hlt
outsb
cmc
data16
ja
icebp
jecxz
dec
fdivs
sub
iret
shll
test
jl
and
mov
mov
xlat
add
mov
leave
sbb
imul
and
sahf
out
inc
jb
push
push
pop
adc
push
push
push
in
in
test
xor
jge
into
pop
jnp
push
insl
pop
int3
rep
or
arpl
pop
incl
sbb
bound
xor
and
mov
andb
cmpsl
add
fcomps
nop
sub
and
stos
lods
push
jne
sub
test
sbbl
mov
pop
pop
mov
pop
add
sbb
xchg
shrl
jbe
xchg
aaa
pop
emms
popa
mov
cs
add
inc
and
mov
out
or
pop
pop
and
push
add
pop
outsl
aaa
sub
out
cmp
daa
inc
sub
push
inc
inc
loopne
jnp
push
lds
shlb
pop
sub
xor
movsl
mov
dec
jb
mov
arpl
mov
adc
outsl
jb
jno
pusha
or
stc
xor
push
lods
sub
rcll
push
ret
ss
xorl
je
add
scas
clc
sub
or
jne
sbb
inc
sub
inc
sub
into
add
cmpsb
jge
aam
or
jae
dec
mov
mov
inc
or
je
mov
repnz
mov
mov
movsb
pushf
dec
jo
jne
add
push
or
les
or
sbb
mov
lock
add
arpl
and
orb
in
mov
out
push
lods
scas
orl
lock
not
and
mov
push
ret
je
je
adc
jle
inc
ds
or
xchg
add
sbb
pop
add
or
or
cmpb
add
add
xchg
push
xor
mov
loopne,pt
or
or
imul
adc
push
pop
insb
fcmovu
andb
and
sbb
and
mov
push
movsl
cmp
pop
and
inc
orl
ja
push
test
clc
pop
je
xor
sti
or
sub
mov
fs
mov
sar
sar
das
je
dec
cmp
mov
dec
jb
xcrypt-cfb
cmpsl
mov
pop
repnz
push
mov
add
inc
push
imul
les
smsw
adc
jnp
cs
push
mov
cs
pop
add
nop
inc
hlt
pop
fldenv
lea
dec
adcl
aad
push
sub
loopne
add
add
int
addl
pop
xor
iret
int3
aas
jge
fnstcw
pushf
adc
inc
xchg
setae
pop
lcall
push
mov
test
movsb
push
add
mov
xchg
in
and
cmc
lcall
jno
xchg
icebp
mov
push
pop
add
or
xorb
mov
sub
fcomps
shl
lock
arpl
sarb
push
out
pop
jbe
lods
mov
push
xchg
fimull
push
outsl
addr16
adc
mov
shrb
test
stos
sbb
or
ljmp
cmc
dec
ja
enter
and
fbld
sbb
xor
not
and
cmpsb
and
clc
add
inc
mov
or
add
cmp
int
pop
sub
test
sub
add
push
cmp
addl
pop
push
stc
clc
mov
mov
stos
repnz
leave
or
jo
lret
or
sub
sub
mov
push
bnd
mov
rcrl
add
cmpsl
faddl
sbb
pusha
xor
adc
push
push
jge
mov
cltd
dec
push
es
negb
pop
fsubl
and
addr16
mov
mov
sub
dec
jmp
jns
push
cmp
pop
pop
pop
cld
dec
add
movsl
push
push
sub
jle
lock
das
mov
adc
lret
dec
aad
push
push
jnp
xor
add
dec
out
jo
loopne
adc
xor
or
pop
call
addr16
cmp
add
roll
and
sub
and
adc
sar
add
push
push
lock
mov
mov
or
add
rolb
pop
faddp
inc
adc
mov
cmp
aas
dec
cmpsl
ret
pop
es
mov
gs
xchg
decl
adc
mov
pop
pop
in
xor
push
add
jne
xor
add
pop
mov
adc
adc
sbb
pop
inc
add
push
hlt
mov
inc
pop
scas
pop
or
test
push
jg
dec
inc
xchg
loopne
sub
dec
js
and
out
ljmp
mov
enter
mov
or
cmovns
jmp
add
movl
jecxz
adc
jecxz
mov
mov
jmp
out
das
sti
movw
add
cli
push
adcb
xchg
cld
push
mov
inc
push
repz
jns
push
fmull
popa
sbb
adc
jl
fstpl
jp
or
mov
add
iret
testl
cld
add
fadds
xchg
mov
lea
xchg
jg
pop
push
cmp
fucom
imul
jmp
addr16
repnz
out
or
or
cld
icebp
pop
ret
sbb
int3
das
cmp
xchg
sti
push
shl
jno
lds
clc
xor
mov
sbb
mov
xlat
jle
stos
adc
aaa
cs
adcb
idivl
in
or
repnz
and
and
push
adcb
and
and
stos
add
cmp
or
push
push
dec
clc
pop
popa
lock
xor
fadds
dec
shl
xor
adc
dec
mov
pop
push
sub
scas
lret
pushf
cmp
das
movups
rolb
hlt
add
push
xchg
mov
and
xor
and
daa
add
xor
sub
fistps
add
xchg
xchg
je
push
and
add
mov
dec
and
loopne
adc
outsb
push
dec
je
mov
ret
cmpsl
les
jb
data16
shrl
or
mov
push
push
jno
sbb
pop
enter
js
aaa
xor
test
push
and
dec
xchg
shlb
jge
add
dec
adc
es
xchg
pop
popa
mov
add
stos
jo
andl
push
popf
bswap
je
mov
adc
hlt
dec
lods
addl
out
icebp
add
mov
and
stos
shrl
movl
jae
subb
inc
es
cld
push
push
xor
sbbb
inc
pop
or
jae
aaa
sub
cltd
push
cmp
lock
aam
call
or
das
pop
fcoml
and
add
rorl
sub
mov
add
movzbl
sbb
dec
xlat
cmp
pusha
roll
add
cmp
mov
test
leave
jle
cmp
jl
aaa
enter
dec
xchg
cmp
jg
push
cmp
adc
roll
and
dec
orb
mov
push
icebp
add
cwtl
jno
jae
inc
or
insl
mov
jle
add
loope
sbb
inc
and
repz
or
orl
out
add
xchg
sub
pop
fcomp
mov
cmp
sbb
scas
jmp
xor
in
inc
mov
or
lods
inc
repnz
sub
sti
and
loope
inc
inc
add
inc
cmp
daa
fcoml
add
mov
aas
inc
ret
imul
sub
loopne
shr
jo
es
cmp
dec
pop
sbb
jno
call
dec
out
ja
dec
inc
dec
jne
cmp
xchg
out
adc
pop
fs
dec
repnz
push
cmp
add
jo
lock
shlb
loop
jnp
xor
pop
aam
lret
xor
or
int3
andb
mov
enter
lock
fwait
ja
xchg
pop
cwtl
leave
inc
mov
mov
mov
push
mov
and
lock
ret
xchg
call
sahf
shlb
xlat
sbb
rolb
repz
push
mov
mov
mov
push
aas
adc
xchg
test
sbb
or
cmc
pop
sbb
sub
dec
aaa
cmp
sub
add
faddp
cltd
ss
pop
pop
or
sub
in
inc
ljmp
pusha
lock
jg
inc
push
pusha
sarb
jmp
xor
incb
jl
ret
fists
incb
xchg
push
sbb
test
jl
sbb
aas
sbb
sbb
sub
test
mov
lea
or
dec
mov
jl
sub
add
add
clc
mov
idiv
add
push
jg
lock
jmp
or
cmp
repnz
jmp
test
adc
aas
gs
and
jbe
inc
movaps
or
mov
and
mov
xsave
mov
in
pop
add
xchg
mov
adcl
adc
sub
mov
sub
ljmpw
adc
js
negb
add
or
mov
icebp
imul
pusha
in
insb
popa
pop
push
pop
push
push
cmpsb
push
add
sti
or
sub
xlat
hlt
stos
enter
or
filds
and
adc
mov
aas
and
das
int
push
or
jno
mov
mov
push
sub
lcall
clc
clc
popa
dec
push
pop
hlt
hlt
inc
add
xor
imul
inc
mov
cmpsl
xchg
mov
ret
dec
jns
sub
sbb
movsb
adc
and
leave
add
scas
aas
add
into
push
mov
mov
pop
push
pop
in
repz
and
hlt
int3
inc
call
and
xchg
push
or
fistl
arpl
xor
hlt
loopne
fmull
jnp
jb
dec
dec
mov
in
pop
fsubl
inc
add
cs
xor
add
lock
outsl
pop
stc
xchg
push
push
add
or
xor
jnp
push
in
mov
mov
or
mov
data16
push
insl
lahf
jge
in
mov
lods
cmpsl
mov
mov
mov
adc
pop
mov
push
or
test
sbb
in
in
sahf
push
in
cmp
mov
hlt
xchg
pop
loopne
fcoml
pop
call
xorb
int3
xorl
push
pop
pop
cmpsl
cmp
pop
lahf
movb
scas
adc
div
in
ror
cmpsl
sbb
pop
mov
mov
and
inc
sbb
roll
sbb
sbb
fadds
daa
jmp
pop
sub
adc
xor
nop
push
push
pop
or
inc
push
enter
pop
add
or
mov
int3
sub
lret
adc
mov
adc
andb
orl
cmp
sub
mov
xor
push
or
in
int3
iret
add
outsl
clc
in
fadd
mov
test
push
hlt
rorb
push
jmp
push
add
sti
in
addr16
loope
pop
jne
cmp
sahf
cmp
inc
cmp
mov
rol
lds
cltd
sbb
push
icebp
inc
sub
inc
and
fs
sahf
test
dec
inc
inc
push
adc
inc
ds
inc
inc
insb
add
lahf
inc
sbb
pop
adc
push
adc
mov
jne
mov
xchg
and
pop
ret
iret
shll
xchg
pop
add
sahf
fimull
outsl
cmp
rorl
or
fsubr
ss
gs
add
daa
pop
clc
clc
pushf
loope
outsl
jb
lret
adc
add
or
aaa
in
in
mov
adc
rolb
sbb
mov
add
jo
aas
adc
or
xchg
push
in
jmp
or
rolb
add
repnz
jle
scas
push
inc
add
sbbl
and
mov
mov
dec
hlt
mov
xchg
xchg
jl
mov
sti
add
sub
sbb
push
nop
imul
insl
popw
gs
jecxz
push
imul
lea
mov
or
sbb
shrl
add
iret
inc
ds
or
add
mov
sbbl
lahf
inc
popf
mov
mov
add
sbb
xor
jmp
lea
add
pusha
dec
out
adc
mov
rol
enter
push
nop
movsb
inc
clc
daa
cs
inc
bound
xor
and
or
sub
clc
clc
inc
loopne
dec
or
jo
jne
pop
dec
leave
movl
insb
fnsave
push
and
out
lret
pop
jb
movb
popa
sub
push
push
jae
push
mov
xor
add
int3
dec
fcom
add
or
add
pop
insb
inc
inc
add
imul
jmp
lds
fwait
sbb
push
or
xchg
add
rclb
dec
sahf
or
xchg
or
xor
pop
lea
lret
daa
loope
adc
nop
pop
or
inc
pop
cmp
mov
jne
test
arpl
fidivrs
mov
arpl
and
sub
push
jns
ja
cmp
rcll
sub
add
cwtl
mov
xchg
xchg
mov
inc
ss
test
inc
or
mov
sub
push
adc
mov
les
mov
adc
or
add
sbb
ds
or
jno
popa
jecxz
add
dec
inc
cmp
js
mov
aaa
cmp
inc
int3
jge
outsl
and
test
mov
mov
adc
xchg
cmp
xor
in
repnz
orb
adc
popa
addb
inc
inc
and
sbb
jno
pop
and
push
adc
fs
enter
out
ss
inc
push
sub
nop
or
ret
orb
sub
sbb
lds
sub
les
movhps
filds
mov
je
bound
jmp
mov
sub
xlat
or
pushf
jg
pop
mov
push
call
and
inc
pop
es
cmp
enter
mov
sub
je
mov
cli
jnp
xchg
jcxz
ficomps
adc
lea
mov
daa
adc
in
and
sbb
mov
ret
mov
xchg
ljmp
out
mov
dec
mov
test
pop
das
inc
sub
pop
adc
xor
jecxz
inc
inc
aas
test
mov
pop
xor
sub
xor
pop
pop
sbb
sub
sahf
ret
mov
shlb
rolb
je
mov
leave
clc
and
aas
ss
add
jo
inc
push
es
test
sbb
xor
loopne
add
push
loope
out
jo
js
fidivs
cmp
fstpl
imul
fld1
lcall
add
sar
and
dec
or
mov
in
inc
xchg
adc
dec
inc
sub
mov
cmp
test
inc
jg
dec
or
adc
gs
mov
loope
and
nop
cwtl
or
fcoms
adc
dec
inc
mov
xor
repnz
rcl
mov
mov
inc
sub
cld
clc
jno
je,pt
push
iret
sarl
hlt
add
cmp
add
push
inc
arpl
pop
add
enter
cmpsb
aaa
leave
push
jne
cli
lock
pop
mov
add
mov
cmp
adcb
sbb
movsb
out
pop
fsubrs
mov
inc
test
popa
sbb
mov
addr16
imul
push
dec
out
orl
jmp
push
xor
push
dec
fisttpll
cli
lea
sbb
jno
nop
and
dec
int3
or
and
push
and
orb
add
fists
add
add
add
and
popa
daa
frstor
out
jle
push
push
outsb
mov
push
sbb
into
test
jae
xor
stos
push
mov
adc
jo
lock
shlb
mov
mov
dec
fmuls
fisttpl
loope
mov
dec
push
mov
jns
add
add
xor
inc
test
cmp
push
mov
inc
xor
imul
dec
or
add
out
das
mov
pop
and
and
sbb
je
inc
test
and
daa
pop
repnz
stos
adc
adc
adc
lahf
fnstcw
xchg
dec
cmp
mov
mov
mov
xor
jmp
jg
or
jns
cmp
pop
and
cmp
adcl
inc
and
pop
dec
fdivrl
sub
xor
rolb
mov
test
je
sub
or
push
jbe
adc
sbb
pop
cld
xchg
push
sbb
mov
stos
addb
push
adc
in
pusha
cs
lcall
test
daa
jno
or
dec
dec
je
into
mov
push
push
or
dec
mov
mov
push
fiadds
and
aaa
pop
and
mov
into
inc
addr16
push
xor
mov
add
enter
add
inc
shlb
loop
popf
xor
add
mov
jno
inc
and
adc
xor
pop
sub
sbb
add
pusha
sub
ss
into
decb
sbb
xor
sti
pop
imul
cmp
sbb
adc
adc
insl
or
mov
lret
sub
add
shll
push
shlb
or
call
dec
imul
arpl
add
fs
divb
incb
or
xchg
cmpsl
xor
mov
insl
ss
sub
in
cmp
sbb
xor
aas
sbb
imul
or
xabort
dec
mov
jmp
xchg
push
shld
leave
cltd
mov
sub
aaa
inc
push
icebp
nop
out
dec
insb
or
les
add
xchg
sbb
inc
movsl
xchg
dec
pop
inc
cmp
add
stos
add
sbb
sarb
ret
jmp
cmp
or
test
imul
mov
cwtl
jnp
mov
js
jg
jge
and
inc
je
leave
enter
push
in
pop
sub
pop
mov
push
push
lea
or
pushf
mov
dec
enter
mov
cltd
out
loope
test
or
lret
sbb
mov
mov
xor
outsl
push
xor
push
enter
ret
and
and
sub
insl
pop
inc
scas
int
lcall
and
cmp
push
subl
add
sbb
sar
hlt
fistpl
loop
jo
mov
nop
roll
jl
inc
adc
push
pop
mov
aaa
out
pop
push
jb
outsl
call
mov
in
ret
cmp
repnz
out
into
or
xlat
mov
fimull
stos
dec
test
mov
dec
dec
jl
test
in
or
xchg
data16
les
add
and
cld
add
pop
xchg
pusha
push
xor
jne
sbb
xchg
dec
lock
add
pop
push
dec
fisubs
xchg
inc
sti
sub
or
add
jnp
notl
in
mov
inc
jo
ret
bnd
add
xor
js
cld
mov
mov
add
add
lcall
js,pn
sbbb
add
je
cmpb
outsl
dec
mov
or
pop
das
clc
adcl
jmp
loop
push
lea
mov
add
adc
adc
ficomps
int
sbb
xor
adc
sub
sbb
add
add
or
mov
lcall
sbb
inc
js
mov
cmpl
aas
pop
jge
add
fs
inc
and
jo
sbb
das
aaa
in
or
xchg
loope
cmp
adc
inc
xchg
mov
add
jle
nop
cmp
xor
push
or
or
push
cld
shll
jecxz
fisubrl
fs
loope
test
dec
fs
or
or
dec
mov
or
orb
push
cmp
and
cmpsb
push
inc
mov
mov
pop
jae
jle
dec
sbb
imul
jb
adc
mov
sbb
jns
dec
xor
sbb
sbb
xor
xor
pushf
enter
mov
cli
and
insl
dec
test
shrb
sub
jle
in
lret
dec
and
and
icebp
inc
test
out
adc
adc
pop
cltd
adc
pop
dec
lds
mov
or
push
pusha
pop
sub
add
test
dec
subl
pop
mov
or
fcoml
add
dec
cld
inc
nop
sub
push
jecxz
inc
adc
dec
jbe
cmp
add
jmp
psubsw
add
xchg
add
call
mov
movl
sub
lods
sbb
mov
xor
movsb
shlb
sbb
cmp
pop
shll
pop
mov
pushf
mov
push
test
sahf
or
shlb
or
andl
shrd
sarb
iret
inc
push
mov
pusha
repnz
lea
lahf
fwait
adc
jns
push
mov
mov
lret
out
pop
add
sub
pop
adc
mov
xorl
pusha
xor
fwait
sbb
pop
xor
mov
push
int3
popa
pusha
mov
dec
cwtl
bound
or
add
aas
movb
mov
push
inc
xor
xchg
mov
stos
xor
push
popa
outsl
sub
cmpsl
call
pusha
xchg
lcall
sub
xor
xor
hlt
daa
in
add
cmp
sub
and
dec
cmp
xchg
sub
mov
gs
mov
addb
imul
xchg
test
out
push
xor
and
test
sub
add
mov
sti
fimull
adc
add
mov
pop
mov
add
push
jmp
fldl
fwait
test
imul
add
sub
fnstsw
push
xor
jne
lods
sub
xchg
fbld
and
cld
add
push
addb
in
sbb
pop
rolb
ja
outsb
jnp
xchg
jecxz
pushf
adc
add
add
aaa
addr16
ss
jo
in
orps
xor
pop
jmp
xor
dec
adc
int
sub
push
inc
mov
pop
aad
in
pop
pop
jle
rcr
dec
imul
add
push
pop
add
test
xor
fldl
pop
xchg
inc
shrl
adc
daa
and
inc
mov
fmull
add
imulb
adc
cmp
je
mov
or
jnp
inc
fildl
adc
jo
dec
push
adc
data16
ja
rolb
lock
mov
inc
adc
xor
inc
adc
add
lahf
and
mov
push
and
push
lea
adc
push
pop
jmp
push
inc
jns
mov
dec
xor
sbb
xchg
push
jnp
int3
subl
pop
aad
je
fildl
jne
xor
pop
jl
es
adc
movl
cmp
pop
pushf
popf
iret
lods
mov
cmp
jne
add
or
mov
in
sbb
sub
outsl
int
lcall
sbb
and
lods
sbb
sbb
in
nop
jbe
sub
or
cmc
add
lds
nop
dec
sbb
add
call
xchg
cmp
xchg
push
arpl
sbb
cmp
insl
xor
imul
jae
pop
dec
loop
es
inc
adc
sbb
call
or
inc
sub
test
pop
mov
fisttps
inc
pushf
fcoms
cmpb
faddl
mov
movl
test
xchg
xchg
and
call
inc
push
mov
dec
mov
pusha
fcompl
out
fwait
jo
and
adc
mov
mov
hlt
push
and
lods
xor
jbe
fistpl
int
cmpsl
push
popa
iret
aad
or
push
push
mov
push
imul
sbb
lea
sbb
sbb
in
mov
in
repz
mov
je
scas
loopne
pop
cmp
push
inc
cmp
and
popf
mov
mov
in
jmp
outsl
cmp
je
dec
fs
data16
pop
daa
sub
push
jle
pusha
adcl
fcmovb
inc
mov
ss
inc
xor
sub
out
dec
xchg
outsl
out
push
mov
rorb
jecxz
test
dec
cmp
loopne
push
ret
jne
mov
xor
test
xchg
sub
and
imul
popa
jge
lock
xchg
or
in
jns
daa
push
imul
lcall
imul
rorb
sbb
cmpsl
mov
lea
mov
inc
push
add
xchg
addr16
push
out
push
mov
sub
mov
imul
jl
sub
xor
ret
push
push
pop
pusha
pop
adc
mov
push
or
inc
push
xchg
lea
add
lock
or
push
rol
jno
shl
dec
repnz
sbb
loopne
sub
sbb
fcoms
mov
xchg
jbe
xor
test
push
enter
or
orb
insb
mov
decl
push
push
stc
push
inc
dec
xchg
or
test
cmp
test
sahf
sub
popa
push
jecxz
dec
loope
inc
sub
jo
sbb
pop
test
scas
push
lods
xchg
cmp
jb
call
sub
mov
pop
loope
xor
iret
testl
dec
jp
loop
inc
xor
xor
add
cmpsb
filds
lock
cltd
sub
push
jp
sbb
sub
pop
add
mov
je
sbb
pop
out
nop
dec
rclb
or
sub
arpl
outsb
adc
iret
xchg
jecxz
mov
pop
sbb
inc
push
cmp
add
in
pop
lea
sbb
addr16
ljmp
leave
hlt
popa
pop
repnz
insl
movsb
out
add
mov
test
into
inc
cmp
xchg
lock
push
sub
push
mov
push
sbb
iret
cltd
fisubrl
lock
cmpsb
lock
xor
sub
js
stos
mov
out
dec
shll
inc
sub
insl
sbb
jns
jns
in
cmp
popa
xlat
and
xor
test
or
or
sbb
fsub
and
or
movl
jne
or
cmp
sahf
adc
mov
mov
mov
inc
sub
xor
scas
add
test
adc
mov
xor
outsl
jnp
mov
pusha
jne
mov
or
add
sub
mov
push
and
xor
cmp
push
push
xor
push
dec
test
daa
sbb
cld
mov
outsl
lods
mov
jmp
and
cmp
cmp
scas
sbb
stos
out
aas
movsb
jl
test
xchg
push
mov
inc
ficompl
ret
jl
movsl
lret
or
dec
jo
cwtl
mov
out
aad
mov
pop
mov
movsb
sub
inc
fsubrs
or
subb
jo
daa
ret
sbb
add
test
jl
fidivs
insb
ret
mov
testb
jo
or
or
pop
lahf
pop
movb
enter
arpl
fcomp
rcrb
push
cmp
mov
sbb
or
xor
add
pop
or
adc
lret
inc
mov
cwtl
int
scas
push
push
test
inc
pop
in
dec
or
mov
pop
xor
ret
rol
jmp
adc
and
pop
mov
cmp
movsl
add
and
bound
adc
sti
imul
pop
jg
movzwl
pop
dec
sub
scas
shll
or
add
add
mov
gs
cmp
je
repz
dec
push
xor
mulps
popa
fisubrl
rorb
insl
inc
imul
pop
mov
pop
leave
cmp
lock
inc
shll
in
cmc
jb
adc
or
dec
xchg
test
pop
xchg
call
loopne
pop
dec
inc
or
inc
leave
mov
notl
inc
sbb
pop
and
ss
mov
add
dec
cmp
mov
mov
sbb
fwait
andl
ret
loope
dec
rcll
mov
mov
lock
out
xchg
mov
loopne
mov
ret
pop
sub
add
jo
jnp
addl
cmp
pop
enter
dec
and
inc
and
adc
stos
or
push
jecxz
sbb
mov
movsb
jo
das
sub
and
insb
add
sub
sub
mov
clc
sbb
push
repz
int3
pop
cmp
gs
out
or
pop
sub
add
inc
xor
jbe
test
cmp
pusha
jl
jo
adc
mov
clc
aaa
test
in
jmp
pop
pop
es
xchg
add
jmp
and
mov
outsb
sub
in
sub
and
sbb
das
jmp
mov
inc
add
cmpsl
pop
xchg
lods
pop
js
and
pushf
adc
mov
rol
outsl
fs
cmp
mov
aam
or
add
addl
daa
dec
je
aam
sub
je
sub
inc
or
mov
cmp
or
adc
xchg
sbb
cmp
cmc
lea
sbb
add
lahf
pop
xor
mov
or
add
and
es
fdivrs
mov
cmp
jge
jl
mov
cltd
push
int3
xchg
aas
pop
mov
mov
bound
lahf
daa
mov
sahf
sub
enter
push
out
add
dec
pop
pop
test
pop
xor
push
jne
mov
push
test
jmp
cmp
cwtl
pop
dec
and
rcrl
xor
lds
int3
add
jecxz
or
rolb
pop
jl
test
dec
jge
add
gs
js
sub
andl
and
dec
add
push
sbb
movsl
testl
cmp
and
dec
jae
lret
sub
bound
cmp
sub
ret
mov
sub
inc
inc
mov
pop
xor
push
dec
fmull
adc
into
out
push
sub
and
cmp
fistl
flds
sub
or
pop
test
add
mov
test
mov
daa
or
xor
adc
orl
dec
jb
or
push
ds
xor
adc
push
push
adc
inc
cli
fimuls
inc
xor
pop
xor
dec
jl
das
ss
sub
test
inc
dec
jge
adc
sbb
mov
shr
dec
cmp
sub
and
inc
out
dec
jne
or
mov
repz
push
push
andl
cmp
out
push
sub
ljmp
test
jae
cmp
out
mov
push
jno
add
inc
xor
pop
pop
mov
xor
fld
xor
sub
fstpt
mov
arpl
mov
and
js
in
stos
or
jle
inc
jo
jecxz
imul
and
and
filds
ret
lea
adc
and
fisubs
inc
and
addl
jns
rcll
inc
gs
jbe
jp
mov
mov
shll
gs
inc
cmpsl
or
arpl
inc
mov
mov
insb
movb
xchg
clc
xchg
je
sub
jns
pushf
dec
xor
cmp
inc
push
daa
adc
out
jns
aam
mov
pop
sbbb
lods
data16
xchg
dec
sub
push
or
sahf
push
fwait
add
inc
push
popf
rorb
pusha
sti
xchg
into
fadds
loopne
push
and
clc
icebp
mov
rcr
ljmp
loopne
or
add
unpcklps
and
mov
jg
xchg
mov
dec
rolb
jnp
mov
or
mov
movsl
mov
pop
mov
iret
or
inc
cmc
rcrb
sarl
sub
daa
imul
dec
jns
push
push
call
xor
push
xor
clc
add
sbb
push
test
add
cmove
xor
push
aad
pop
or
cmp
enter
cmp
pop
sbb
or
mov
mov
push
pop
sbb
daa
push
dec
daa
inc
es
mov
fidivrl
inc
adc
je
xchg
push
dec
or
ljmp
push
inc
in
or
pop
ret
pop
sbb
sub
femms
cmc
jge
pop
sbb
adc
inc
adc
aam
jmp
jae
in
popa
pop
xor
inc
adc
aam
mov
dec
and
mov
push
rclb
clc
xor
xor
je
dec
das
mov
xor
lock
cmc
add
push
jbe
xchg
sahf
mov
inc
xchg
jl
adc
sub
addb
add
xchg
call
jo
jge
jo
and
imul
ficomps
mov
pop
sbbb
int3
jmp
jbe
mov
daa
lcall
rorb
nop
cmp
pcmpeqd
or
add
add
mov
movsl
xchg
sahf
cmpsl
xrelease
jge
jno
dec
int3
mov
inc
pop
inc
rorb
jle
adc
rolb
loope
in
xchg
int3
in
sarl
movsb
push
add
rolb
shll
add
bound
inc
enter
fcomps
jle
in
sbb
or
ss
sub
pop
adc
and
sbb
xchg
pop
fs
and
fsubrs
pop
xchg
adc
and
pop
pushf
and
and
loop
jno
fwait
dec
pop
pushf
ss
sub
jp
add
in
push
jb
mov
xor
push
movsl
mov
orl
sbb
or
push
movsb
subl
mov
push
popa
rol
or
adc
sbb
pop
or
push
mov
clc
push
push
mov
adc
sub
jle
and
mov
lret
stc
movsl
scas
pusha
xlat
ret
and
push
orl
mov
pushf
push
in
lret
sbb
jmp
fisttpll
jmp
mov
and
xchg
push
and
inc
sub
pop
cld
add
xchg
pop
imul
out
cmp
mov
add
push
xchg
aaa
andb
or
pop
pop
push
pop
sub
or
cltd
add
jno
pshufw
push
je
cmc
push
fdivl
fdivr
or
ss
sbb
xchg
loop
jle
js
push
cltd
cltd
outsl
adc
adc
push
jo
xchg
int
xor
adc
jle
imul
push
jns
sub
sarb
jne
aam
mov
pop
or
and
and
dec
fldenv
icebp
add
mov
mov
push
jecxz
and
mov
mov
xchg
sbb
aas
mov
mov
and
int
rorl
mov
push
and
sarl
dec
aad
or
adc
push
cmpsl
xchg
or
fstpt
push
or
and
push
add
cmovg
shl
adc
push
and
sahf
out
adc
inc
xlat
in
or
mov
lahf
inc
mov
sarb
jbe
int3
inc
add
or
inc
arpl
stc
sbb
and
mov
pushf
inc
mov
lret
xchg
sbbl
mov
iret
das
test
or
outsl
ds
pop
inc
lea
stc
cmp
push
dec
movb
inc
shll
add
nop
push
mov
faddl
clc
dec
shl
xchg
push
sub
ja
xlat
cs
mov
mov
mov
adc
sbb
xchg
mov
xor
fldenv
adc
orb
movl
jmp
mov
sbb
adc
mov
jg
fiadds
cwtl
clc
sub
or
adc
xor
dec
out
aaa
push
fdivrl
jmp
aad
push
imul
push
fucomip
sbb
xchg
lock
ror
jl
jecxz
and
out
jmp
icebp
test
inc
aaa
loopne
push
xchg
fs
orb
xor
adc
push
arpl
adc
inc
jmp
testl
test
cmpsl
mov
xor
movsbl
and
lea
and
pop
lock
push
lds
mov
adc
movl
push
mov
lds
push
enter
inc
pop
add
shrb
rol
iret
adc
push
push
push
push
bound
pushf
xchg
xor
adc
in
or
lods
xor
ja,pt
mov
sub
sahf
sub
cmp
rcl
shrl
lret
es
daa
sbb
in
cmpsl
sub
push
or
xor
and
pop
xor
cwtl
or
mov
outsb
sti
mov
or
ss
inc
bound
sbb
jne
loop
xchg
push
jo
xor
sub
clc
enter
pop
fistpll
or
js
jbe
adc
jl
add
dec
cltd
or
jle
pop
or
cmp
xchg
push
mov
push
in
cmp
cmp
je
inc
orl
lods
sbb
test
and
sbb
dec
ja
mov
push
sbb
mov
repz
and
or
lret
push
mov
jle
in
dec
adc
mov
mov
xor
negl
adc
je
aaa
pop
jns
xor
add
jo
mov
js
sub
out
dec
inc
sbb
rolb
cmp
lret
mov
sbb
stc
lret
pop
mov
movsb
out
sub
mov
sbb
pop
adc
jl
fdivs
sahf
test
ret
sti
sub
lea
add
cmp
xor
mov
faddl
popf
inc
dec
xor
in
js
bound
adc
arpl
and
add
decl
lods
xchg
push
mov
mov
or
add
add
add
stc
jno
or
or
pop
nop
mov
push
pop
lcall
ss
mov
popf
dec
mov
jmp
lret
mov
mov
cmp
testl
cmp
es
cli
add
mov
cltd
inc
cmc
or
fcoml
inc
mov
cmpsl
jne
add
jno
scas
inc
adc
inc
mov
or
or
es
fnsave
outsb
or
sub
stos
lret
test
and
cmp
rorl
mov
pop
push
jmp
dec
inc
repz
sar
lea
movzwl
pop
adc
add
js
and
movsl
fsubs
ja
pop
ret
add
or
xchg
frstor
add
pop
and
outsl
push
cmp
add
lock
insl
cmp
and
adc
movsl
stos
movsb
xor
sub
arpl
ret
cmp
and
push
dec
pusha
adc
pop
cmp
stos
pop
jne
jo
lret
ret
pop
jno
mov
mov
imul
nop
xorb
add
pop
add
push
aaa
mov
ret
cmp
sbb
sub
ret
outsb
dec
cmpsl
shlb
or
and
xchg
loop
jns
xlat
xor
mov
andb
aaa
sub
cmp
push
idivl
mov
and
adc
mov
daa
or
push
push
jmp
mov
iret
pop
push
mov
pop
cmp
xor
js
jno
adcb
divl
xor
enter
push
daa
mov
push
aas
push
inc
add
pop
movsb
add
pop
and
sti
dec
mov
push
sbb
mov
push
outsl
push
outsl
add
dec
mov
xor
insb
push
mov
in
jle
loopne
xorb
mov
cmpsb
test
lret
inc
cmp
pop
add
inc
mov
aas
clc
aas
subb
subb
sbbl
dec
or
or
and
or
or
daa
dec
mov
lea
popf
bndldx
and
inc
or
adc
xchg
pusha
push
ja
das
or
das
sbb
sahf
cmp
pop
mov
cmp
jne
push
imul
push
sub
dec
inc
or
jge
sbb
sti
dec
mov
inc
and
test
dec
sbb
add
js
jnp
daa
pusha
xor
add
lahf
rolb
sub
xchg
adc
andb
adc
pusha
dec
pop
sbb
mov
in
push
push
mov
adc
jmp
negb
sub
jmp
stc
dec
or
bound
and
dec
and
incb
mov
dec
or
inc
cmp
lret
insl
jecxz
rorb
loopne
clc
push
or
lock
aas
or
punpcklbw
std
push
test
dec
jg
pop
pmulhuw
add
mov
ret
sbb
scas
popa
mov
enter
pop
jmp
jne
js
xchg
mov
std
in
and
fsts
icebp
mov
fdivrs
mov
pop
mov
insb
rol
sbb
and
inc
lds
cmp
inc
cmpsb
mov
cwtl
push
mov
xchg
imul
in
test
fadds
sub
les
mov
cld
jl
adc
js
lock
or
push
test
lret
mov
es
mov
rcll
out
jns
adc
and
mov
mov
or
push
ret
or
or
cld
adc
mov
add
pusha
mov
fisubrs
adc
icebp
xchg
daa
jae
sub
mov
push
fldln2
sti
and
int3
or
enter
cmp
les
es
mov
enter
sarb
push
jl
jl
mov
xchg
inc
lock
or
mov
add
adc
and
sub
pop
jbe
cmp
pushf
xchg
inc
or
push
sub
cmp
and
inc
push
push
push
push
or
hlt
gs
fisubrs
xor
sahf
dec
jl,pt
inc
mov
ret
xchg
push
andl
mov
movsl
sbb
std
das
adc
movsl
add
outsl
rolb
movsl
jne
adc
adcb
lret
jg
adc
add
adc
inc
cs
and
aaa
mov
lods
inc
stc
mov
ljmp
lahf
lock
or
shll
test
jne
ja
dec
or
sub
sub
push
jno
stos
jbe
pop
and
xchg
hlt
or
hlt
xor
cmpsl
mov
orl
pushf
stos
add
push
and
out
xchg
ret
ss
nop
jl
mov
jl
je
sbb
insb
push
inc
pusha
pop
out
nop
dec
push
lods
xchg
clc
mov
xchg
nop
into
xchg
clc
iret
sbb
and
fmul
sbb
cwtl
negb
and
add
cmp
mov
adc
ss
iret
sub
mov
mov
mov
aas
nop
nop
inc
pop
addl
aaa
add
mov
pop
test
stc
sahf
mov
jmp
lods
je
movb
cmp
jmp
mov
and
sub
xchg
pop
and
or
pop
ret
movb
push
ret
and
mov
filds
push
jmp
dec
adc
mov
sub
jb
je
ret
dec
mov
adc
jmp
adc
or
ret
sbb
rolb
push
push
push
int3
adc
push
push
adc
or
mov
mov
dec
lock
addr16
sbb
ja
loopne
sahf
out
mov
add
push
push
pop
sub
cmp
sub
cmc
xchg
js
cmp
jle
or
push
std
adc
das
popa
cmp
jle
push
pop
cmp
mov
mov
das
mov
insb
pop
sub
and
rcrb
mov
and
in
add
push
dec
jmp
mov
cmp
sbb
pusha
pop
xchg
clc
shr
sub
pop
leave
jnp
and
sbb
pop
lock
adc
mov
daa
stos
and
push
bnd
dec
adc
daa
fcompl
dec
or
or
pause
push
sbb
fsubr
ss
popa
dec
dec
xchg
int
inc
test
sbb
push
mov
pop
pop
inc
or
pop
enter
das
adc
ss
lcall
sub
mov
std
dec
xor
shlb
outsb
cmp
pusha
cmpl
clc
shl
movsl
jb
sub
xor
shrb
mov
in
orb
adc
push
lea
or
adc
jne
fcomps
inc
and
ds
jb
push
mov
cmp
popa
pop
pop
shll
push
or
adc
dec
push
push
dec
inc
pop
cmpsl
repnz
mov
add
adc
nop
fs
push
xchg
pushf
cmovno
jae
sub
push
popf
adc
add
and
adc
or
push
pop
sub
scas
aam
jne
sub
mov
repnz
pop
push
cmpsb
mov
push
push
inc
xor
les
add
sub
gs
hlt
test
pop
sbb
sbb
mov
xchg
sub
add
fdivs
sbb
pop
mov
mov
push
pop
sbb
pop
adc
in
test
ss
sub
mov
loop
push
xor
or
adc
pusha
insl
bound
testl
outsb
jne
pop
xchg
insl
into
insb
popa
jns
jae
push
or
push
mov
movl
repz
rcrb
sbb
lcall
push
pushf
sbb
adcl
aaa
loope
jecxz
dec
dec
ljmp
jb
cltd
xor
cmp
cmp
xchg
pop
mov
jb
add
je
cwtl
popa
fnstsw
ret
test
prefetchw
adc
xor
adc
out
pop
xchg
cld
mov
pop
rcll
mov
inc
idivl
cmp
inc
cmp
es
dec
aaa
mov
dec
and
data16
xchg
enter
shll
push
imul
adc
or
xorb
adc
inc
xchg
scas
pop
stc
fs
lahf
inc
pop
dec
scas
cltd
add
jbe
or
and
cmpsb
jnp
mov
in
mov
fisubl
adc
xor
scas
popa
push
add
sub
ds
sub
imul
inc
aad
pop
rolb
mov
loop
test
sahf
inc
or
lahf
inc
and
cmc
push
jno
xor
add
jl
lcall
repnz
xchg
adc
aam
add
fwait
sbb
dec
push
jns
sub
popf
xor
mov
mov
leave
xor
rorl
lods
roll
fnsave
data16
mov
out
gs
dec
shl
incl
mov
and
ja
sub
or
ret
adcl
push
cmpb
out
mov
pop
fsubrl
inc
add
shrl
push
fldlg2
movsb
add
push
and
or
es
jns
outsb
clc
clc
mov
pop
xlat
cmp
sar
sbb
mov
push
add
out
test
dec
inc
ret
push
or
nop
es
lcall
xchg
test
add
lock
imul
and
clc
mov
jo
or
fcompl
stc
inc
sbb
jns
mov
divl
xchg
das
test
sbb
adc
lea
pop
movl
cmp
pop
mov
ss
hlt
shll
sbb
xchg
sbb
adc
dec
loope
cmpsb
into
in
shlb
or
and
lret
clc
enter
mov
xchg
adc
cltd
inc
fidivrs
hlt
push
lods
mov
into
rcll
loopne
mov
and
sub
call
rorb
enter
icebp
movsb
stos
mov
mov
pop
add
mov
and
xchg
sbb
iret
lds
sbb
mov
sub
push
pop
mov
cmp
pop
repnz
dec
dec
mov
jne
rolb
sbb
jo
xor
xchg
fsubs
push
ds
test
mov
xchg
mov
xchg
inc
or
dec
dec
lret
xor
test
dec
ret
sbb
or
sarl
pop
push
test
jne
push
add
cs
adcl
sbb
popl
fsubl
sub
jle
sbb
adc
jmp
mov
pop
push
stc
test
insl
lret
enter
inc
mov
mov
test
jge
jo
andb
mov
pop
sbb
dec
jne
mov
xor
pop
sbb
or
dec
add
mov
bnd
test
into
and
cmp
addb
pop
mov
pop
xor
ljmp
fstl
adc
das
push
shlb
add
or
or
shlb
xchg
or
repnz
shll
fadds
jl
jae
daa
xor
sbb
addb
pop
xor
lock
in
es
mov
push
or
pop
adc
xchg
sub
dec
cmp
ficompl
mov
dec
ret
pop
add
inc
mov
mov
and
pop
cmp
pusha
sub
sub
outsl
das
fcoml
outsl
adc
sbb
shlb
in
js
fadd
fdivs
fwait
mov
push
test
pusha
dec
ja
les
lea
in
lret
insb
outsl
cmpsb
cmp
loopne
cmp
gs
inc
jmp
xchg
fiaddl
dec
and
out
gs
and
or
ja
pop
xchg
movsb
es
lret
in
lock
sub
push
imul
mov
inc
adc
sbb
sbb
inc
cmpsb
cmp
addr16
repnz
lock
lock
mov
in
mov
cmp
and
sbb
inc
call
inc
sub
push
cld
loope
and
rcll
lods
call
xor
add
pop
jbe
shll
jno
fldcw
adc
cltd
or
and
pop
pop
lcall
clc
fadds
lods
out
xchg
adc
lock
addb
sub
repnz
stos
sbb
nop
clc
ja
pop
outsl
and
orl
movsl
jmp
pop
push
popa
or
mov
add
ljmp
sbb
loope
mov
fidivs
lcall
or
inc
cmp
jp
lea
xchg
jmp
adc
xchg
aas
pop
jmp
push
notl
cld
mov
sub
pusha
or
mov
movsb
rol
sub
ret
jg
mov
mov
mov
and
add
or
cmp
jne
sbb
out
loope
adc
adc
adc
and
sbb
xchg
add
dec
cmpsb
mov
xor
lods
xchg
ret
push
int3
push
sub
push
pop
es
iret
scas
xor
adc
sbb
in
pop
cmp
mov
sub
fsubr
popf
cmp
pop
sbb
outsl
loope
loope
pusha
incl
mov
cltd
push
xchg
inc
loope
enter
sbb
adc
or
call
test
rclb
xor
jb
push
dec
jo
dec
test
mov
ds
dec
push
cmp
and
fdivs
dec
ds
push
lock
xor
pop
sarl
rcrb
inc
inc
xor
out
adc
outsb
dec
dec
sarl
inc
dec
adc
xchg
push
add
and
bnd
or
test
pop
pusha
outsb
push
cltd
nop
cmpsl
pop
movsb
pop
pop
inc
es
pop
mov
popf
push
insl
arpl
adc
inc
push
mov
das
pusha
loope
inc
pop
push
inc
es
inc
loopne
pop
sub
pop
lods
add
adc
jbe
das
push
inc
outsb
test
in
push
or
imul
add
adc
xor
sbb
dec
add
pop
outsl
jae
pop
insl
adc
and
push
fs
push
enter
fs
mov
cmp
dec
xchg
inc
and
push
lahf
push
dec
popa
imul
push
push
xchg
test
sub
mov
xor
mov
adc
loop
testb
aas
pop
push
adc
imul
inc
sub
mov
push
push
jo
cmp
pop
push
sub
enter
dec
scas
add
push
and
push
cmp
pop
push
movsl
mov
cmp
inc
lods
mov
ss
insb
enter
or
decl
adc
pusha
subb
test
xor
dec
inc
mov
imul
test
dec
dec
mov
dec
cwtl
pushf
mov
dec
test
mov
dec
dec
dec
dec
mov
dec
dec
dec
enter
dec
dec
dec
dec
fcomp
loopne
dec
dec
dec
dec
call
dec
dec
dec
clc
cld
add
daa
or
adc
daa
daa
daa
sbb
and
daa
daa
daa
sub
xor
sub
mov
sbb
movsb
je
jecxz
jno
pop
mov
cmpsb
adc
cmp
add
outsl
add
cmp
loope
sub
dec
dec
loopne
pusha
dec
pop
push
jl
and
push
xchg
add
mov
lods
xchg
rclb
pushf
call
mov
jae
iret
subl
push
mov
iret
cmpl
enter
shrb
mov
jae
int3
fcom
cmpl
in
nop
iret
fmuls
fcompl
add
loopne
in
cmp
in
add
in
lock
out
sahf
hlt
xchg
clc
movsb
xor
in
cld
mov
lcall
fmuls
pop
repnz
call
addr16
ds
adc
jns
in
sbb
sbb
out
sahf
add
fs
in
nop
jl
nop
sub
sahf
add
xor
pushf
stos
xchg
xor
xchg
inc
pushl
mov
and
icebp
aas
jne,pn
je
gs
gs
dec
loopne
push
push
sbb
inc
insb
outsl
adc
adc
jae
and
mov
nop
enter
jnp
mov
rcll
faddl
add
add
sarb
push
add
add
popa
mov
loopne
cmp
lods
push
dec
jne
test
cmp
dec
imul
inc
addr16
fs
pop
dec
arpl
or
jno
jae
shr
sbb
dec
xlat
fs
or
outsb
jae
sbb
push
xor
fiaddl
jo
mov
daa
jg
popa
movsb
lea
sub
ret
cmp
bound
rclb
pop
or
adc
or
cmp
pusha
int
cmpsl
fwait
sub
outsl
push
or
dec
out
cmp
mov
addl
adc
daa
or
pop
in
cmp
fcompl
mov
xchg
aas
lds
mov
pop
xchg
jb
sbb
loopne
inc
adc
and
sbb
out
jle
je
addr16
jne
insb
mov
ret
pusha
imul
sub
mov
push
pusha
pop
sbb
xor
xchg
cltd
arpl
leave
mov
fsubp
adc
arpl
ljmp
outsl
pop
or
sbb
adc
adc
insb
jecxz
pop
insl
add
pop
iret
hlt
dec
mov
les
xchg
push
add
jg
es
mov
scas
sub
jbe
mov
js
mov
cltd
leave
sub
add
mull
push
dec
lcall
pop
fdivrs
orl
and
in
sbb
pop
dec
outsl
push
push
pop
in
dec
cmp
aam
rcrb
fs
inc
int3
enter
or
sarb
iret
pop
and
and
dec
insb
prefetcht1
outsb
test
sbb
jns
cld
pop
cwtl
push
out
leave
ljmp
sub
icebp
scas
aaa
dec
test
loopne
outsl
xchg
testb
sarb
das
gs
or
pusha
ja
or
and
jne
xchg
cmp
imul
rolb
enter
mov
dec
push
fs
mov
addl
fs
xchg
pop
xor
and
in
sub
push
test
add
pop
les
inc
pop
lods
push
in
pop
daa
enter
dec
ret
inc
out
ret
fiaddl
pop
int3
jle
push
sbb
mov
add
add
int
dec
sti
out
out
call
ss
add
lds
sbb
ret
imul
xor
in
or
xor
jae
mov
cmp
imul
inc
std
inc
and
cmp
sbb
sub
xor
cmp
out
test
test
dec
inc
push
movsl
repnz
xor
add
insb
jecxz
pop
movb
push
lock
loopne
mov
xor
loopne
inc
inc
and
pop
rorb
xlat
pusha
leave
adc
movsl
aaa
loopne
adc
js
rcr
filds
jo
push
xchg
inc
cmp
shlb
mov
jmp
lret
aam
pop
add
cmpsb
addl
fcompl
add
and
outsb
daa
shrl
inc
fstps
mov
lea
divb
sbb
pusha
in
inc
insl
fmuls
and
inc
mov
sub
xchg
out
test
push
fwait
mov
loopne
add
cld
fisttps
shlb
pop
or
adc
out
cmp
or
dec
sub
cmpsl
or
inc
xor
push
dec
jnp
jecxz
pop
dec
subl
jp
enter
or
inc
jl
and
lea
aam
lcall
mov
mov
das
pusha
fcoms
pop
fisttps
aad
push
lahf
mov
mov
push
push
or
pop
push
cmpsl
int3
pop
nop
inc
and
dec
inc
mov
or
or
cmp
jne
in
sbb
xor
js
popa
push
push
fwait
movb
add
mov
add
int
pop
pop
pop
mov
lods
jg
scas
add
jmp
add
outsl
dec
repnz
es
inc
inc
insl
fstpt
xlat
sbb
push
fcompl
cs
inc
imul
inc
out
es
xchg
pushl
data16
pop
cwtl
mov
add
xor
mov
psubq
xchg
in
and
lock
out
pop
adc
pop
mov
call
insl
outsl
repz
xchg
je
jl
or
lret
ja
out
cld
adc
cmp
rcl
cld
ss
jl
pop
mov
pop
rorb
mov
mov
push
stc
pushf
push
lret
ja
mov
jl
pop
mov
stc
lcall
push
pusha
cmp
pop
sahf
testb
mov
lcall
pop
sub
ljmp
test
scas
repz
mov
jle
inc
jmp
test
adc
mov
sub
add
adcl
and
jecxz
dec
inc
push
push
and
out
push
popf
scas
dec
sbbb
mov
inc
inc
icebp
pop
sub
mov
jp
xlat
mov
fnstenv
mov
test
sbb
outsb
xchg
and
scas
adc
fsubrl
push
or
daa
pop
mov
mov
dec
adc
push
add
add
pop
loope
stos
enter
add
test
and
rcrl
stos
nop
pop
mov
add
xchg
jl
pop
mov
sub
xchg
je
hlt
mov
mov
into
andl
ret
push
mov
cmp
pop
or
in
nop
add
or
or
add
jne
leave
lret
push
or
xchg
pop
arpl
xor
lret
adcb
or
xchg
xchg
or
pushf
and
mov
mov
xor
add
add
add
repnz
xchg
test
xor
scas
mov
loope
lock
lock
sbb
add
into
pop
pop
out
pop
rcrb
cmp
sub
jbe
ret
pushf
mov
lret
sbb
test
push
lods
mov
add
fmuls
xchg
mov
out
les
enter
ror
jb
sbb
fcomp
loopne
adc
or
mov
inc
nop
in
adcb
inc
mov
pop
sbb
sbb
insl
lock
xor
aas
daa
inc
or
outsl
es
push
dec
push
add
orl
sarb
dec
outsl
add
dec
dec
aas
and
jmp
push
mov
pop
push
lahf
mov
xor
outsb
inc
gs
sbb
insb
insb
pop
push
outsl
pop
or
push
leave
mov
ss
sub
ficoms
mov
jge
sub
pop
lcall
push
lds
and
push
xor
jo
add
xchg
ficomps
nopl
out
pusha
and
subb
pop
mov
fmuls
jo
adc
add
sbb
inc
cmovs
outsb
pop
mov
aas
cmp
iret
and
fdivl
sti
cmpsl
and
fstpt
fisttpl
test
cmp
cmpb
pop
push
test
bt
jae
push
pop
mov
jecxz
or
test
or
push
and
test
sbb
addr16
test
add
push
faddl
jle
or
ja
js
sub
cmp
cmovno
cmpsb
push
dec
pop
adcb
aam
ficompl
pop
loop
imul
and
and
loopne
clc
and
and
push
repnz
dec
dec
or
jle
xor
mov
jns
mov
out
adc
mov
and
push
mov
pop
lcall
loop
add
or
jmp
incb
imull
add
or
cltd
fiaddl
sahf
popf
js
repnz
test
mov
add
add
sbb
cmp
imul
mov
rolb
jo
jmp
mov
aam
mov
add
and
fildl
push
ja
dec
test
sbb
js
aaa
xchg
and
out
inc
pop
shll
aam
insb
hlt
push
mov
dec
mov
pusha
out
push
insl
mov
push
xorb
jae
push
bound
movsb
pop
xchg
sbb
ja
push
add
mov
sbb
add
mov
sbb
mov
adc
les
adc
push
sbb
mov
inc
jns
adc
jbe
das
fisubrs
sub
testl
mov
inc
xchg
je
pop
push
cmp
inc
loopne
loop
inc
dec
pop
xchg
aaa
pop
pop
xchg
inc
or
xor
xor
and
fsubrp
ret
add
adc
add
repnz
ret
pop
or
mov
add
ret
ret
sbb
push
ret
inc
repnz
scas
sbb
pushf
and
inc
jae
ficoml
push
inc
jns,pn
mov
sbb
adc
js
scas
mov
cmp
jne
popf
cmp
lret
lret
and
ret
adc
in
aam
repz
cmp
add
cmp
js
add
or
xor
sbb
push
and
pop
pushf
mov
dec
mov
stos
movsl
sub
jg
nop
inc
sbb
pop
mov
sub
and
jne
mov
int
xchg
adc
sarl
inc
sub
sub
and
fs
inc
lret
mov
dec
mov
leave
lds
rclb
fmuls
add
pop
cmp
jne
sarl
negb
in
push
aas
loop
aad
jge
add
and
or
es
movsb
mov
repnz
test
sti
dec
dec
push
mov
cs
ret
xchg
push
adc
push
push
imulb
adc
sub
mov
cmp
js
pop
lcall
xor
fs
addr16
push
jne
pop
add
push
loopne
xadd
jb
cmp
and
int
mov
cmp
jg
push
hlt
test
inc
pop
push
pop
xchg
xchg
movsb
cmp
dec
cs
xchg
leave
xor
inc
mov
or
push
add
hlt
addr16
jae
and
lock
nop
mov
and
pop
shrl
push
clc
and
add
addr16
mov
add
fst
inc
test
and
mov
sti
ljmp
push
push
add
adc
out
test
cmp
xor
ret
xlat
dec
dec
and
pop
cld
imul
push
sub
pop
inc
iret
dec
mov
inc
aas
out
jmp
pop
and
inc
outsb
hlt
mov
hlt
rcl
push
mov
das
iret
jo
iret
jns
je
movsb
inc
add
jmp
inc
outsb
fmull
mov
inc
idiv
dec
mov
push
sub
inc
outsb
mov
pop
sarb
cwtl
sbbb
insb
xchg
mov
incl
cmp
inc
cmp
fsubr
lcall
pop
sbb
decb
pop
sub
mov
stos
divl
addb
sbbl
jnp
xchg
mov
ret
cltd
inc
fmuls
sahf
or
mov
push
incb
je
test
mov
int3
inc
jns
leave
inc
ljmp
push
decl
imul
mov
jmp
or
push
lock
pusha
push
jp
jp
add
xchg
addr16
mul
adc
jae
cld
dec
dec
fwait
shrl
pop
roll
adc
lock
dec
or
inc
pop
bound
inc
mov
mov
cmp
adc
mov
add
mov
pop
sbb
jp
mov
lea
jb
loop
pop
lock
addps
shl
push
adc
shrb
or
pop
dec
ret
daa
push
pop
adcb
fs
pop
popa
mov
addb
cld
xchg
sbb
cld
das
pop
add
push
outsl
jo
jo
push
inc
shlb
jge
sbb
scas
popa
add
lods
imul
fimuls
sahf
xchg
mov
pop
xchg
js
andl
insb
sbb
outsl
add
mov
lds
push
dec
push
push
mov
xchg
lahf
sbb
inc
imul
aam
ljmp
imul
movsb
mov
inc
push
add
pop
xchg
inc
add
inc
rclb
pop
add
inc
xlat
fwait
sbbl
and
dec
cmpsb
mov
pop
xchg
push
sbb
jns
lret
xchg
dec
or
or
add
cmp
ud0
sbb
and
sbb
and
add
fnop
shlb
or
mov
mov
ja
jl
fsubrs
leave
nop
xor
and
or
loopne
faddp
cmpsl
lea
push
jo
pop
jo
sbb
and
push
mov
add
adc
add
fld
or
leave
nop
xor
push
dec
dec
adc
sub
add
fnop
fisubl
fisubl
push
sub
inc
adcb
call
xlat
inc
pop
subb
into
add
cmp
add
pop
sbb
or
aaa
lret
fcoml
int3
in
inc
add
adc
xor
arpl
push
mov
lea
inc
outsl
inc
in
cmp
or
imul
repnz
adc
shlb
cld
push
push
test
and
cmp
ds
add
cwtl
fadds
inc
sbb
es
adc
das
adc
sbb
sahf
insb
hlt
inc
cmovno
xor
inc
repz
xor
lahf
fdiv
inc
add
les
add
test
es
inc
lahf
adc
pop
jnp
roll
sbb
hlt
inc
mov
jbe
pop
or
lock
adc
inc
lcall
out
out
ss
dec
js
fidivl
ror
or
cld
mov
gs
into
js
adc
pop
sub
push
nop
bts
xlat
nop
orb
pop
dec
sub
mov
fiaddl
cmp
nop
push
pop
sbb
inc
leave
je
push
inc
jg
clc
loope
lret
mov
inc
repnz
xor
jle
popa
sbb
inc
pop
or
xchg
movsb
pop
jno
rorb
mov
jnp
sub
pop
outsb
dec
adc
push
adc
jne
in
adc
mov
adc
andb
and
xor
push
loopne
jns
jno
xchg
cmpsb
and
mov
movsb
mov
sbb
inc
xchg
lds
dec
dec
out
xchg
je
jno
cmp
insl
leave
mov
add
push
push
stc
or
mov
lds
pop
repnz
shlb
mov
push
cmpsl
in
ljmp
lds
adc
movsl
int3
sbb
jno
dec
arpl
adc
and
sbb
push
sbb
loope
mov
cmp
call
add
inc
shll
cmp
and
xchg
sbb
fwait
stc
inc
call
lret
pusha
push
add
les
out
jno
push
push
inc
add
pop
pop
adc
or
push
pop
add
xchg
fwait
mov
insl
push
std
jo
enter
jbe
and
das
in
dec
jo
add
leave
adc
push
lret
and
sub
inc
mov
sub
test
popa
push
div
out
pop
sbb
ds
push
ja
enter
push
movsb
add
pop
mov
jbe
inc
xchg
push
pop
inc
sbbb
jno
xchg
aaa
add
imul
cltd
xchg
add
aad
xchg
and
lahf
test
sbb
mov
sarb
imul
mov
xor
orb
xor
orb
cmp
xchg
aaa
insb
rolb
cmovns
cmp
pop
jno
cmovns
inc
enter
push
js
mov
jl
movsb
cltd
rolb
add
repnz
or
push
sbb
adc
pop
and
and
jo
inc
clc
aam
mov
mov
and
inc
aaa
and
jnp
dec
dec
lock
fdivl
dec
xchg
mov
pop
cld
or
add
add
inc
rorl
add
adc
loopnew
fcomps
push
loopne
in
add
push
mov
pop
add
mov
jns
shrl
cld
push
lcall
hlt
or
jns
add
push
sub
es
adc
or
add
sub
sbb
sub
dec
pop
out
mov
cld
mov
jg
push
inc
pop
mov
jg
pusha
adc
lcall
add
push
and
or
loopne
cli
cmp
pop
adc
outsl
psrld
loop
and
and
add
lea
pop
or
mov
add
mov
xchg
dec
pop
rcl
adc
incl
and
dec
mov
pop
add
pop
and
call
mov
add
cmp
sbb
mov
std
rorb
inc
adc
mov
sbb
jge
lahf
inc
push
test
or
jl
pop
xchg
mov
int
ret
jbe
jb
fdivl
lock
adc
rolb
out
cmovs
adc
stc
cmp
jge
mov
dec
enter
mov
std
scas
hlt
mov
mov
push
add
dec
xor
jmp
sub
jle
xchg
rol
fldpi
pop
and
mov
movsb
xchg
rcl
bound
jb
jns
mov
fs
sbb
push
cmpsb
lret
rol
aas
sbb
mov
inc
adc
xchg
sub
cwtl
pusha
stc
xor
ds
add
adc
fisubs
mov
add
pop
fsubrs
cmpb
xchg
jnp
movb
mov
pop
es
mov
sub
push
adc
mov
and
rcrb
mov
mov
shr
pop
xchg
mov
mov
or
push
jns
std
push
sbb
inc
sbb
dec
outsl
outsl
cmpb
inc
push
jne
movb
push
jne
test
int3
aas
adcl
adc
lock
xorb
xlat
aaa
cmpb
test
mov
dec
and
xchg
call
add
add
push
out
insb
mov
mov
or
outsb
sbb
jmp
push
js
scas
adc
jmp
fnstenv
mov
or
mov
jb
hlt
or
push
xor
out
or
je
xchg
jo
sti
pop
out
pop
adc
nop
jns
or
fldt
pop
rcr
pmaxub
cltd
xchg
cmc
dec
js
xchg
nop
inc
js
jnp
inc
xchg
jge
lock
shrl
pop
cmp
rcrb
addr16
sbb
cmp
push
pop
fcoms
pop
jne
data16
test
popa
aaa
mov
inc
les
mov
xor
jne
inc
subb
and
push
das
sbb
cmp
pushf
imul
out
leave
hlt
pop
sarb
jg
push
cld
movsl
std
or
jl
adc
jl
mov
xchg
add
or
jmp
idivl
sbb
jl
dec
lds
mov
xchg
ret
inc
jne
push
jl
pop
sub
sub
into
add
testb
sbb
pop
repnz
das
mov
out
sub
std
sub
jae
push
mov
xor
stos
rcrb
push
pop
lock
and
push
ljmp
push
push
push
lahf
loop
mov
add
jle
jno
cmp
addl
pop
or
dec
xor
aas
add
sbb
adc
mov
test
sbb
xchg
adc
add
mov
and
fmul
mov
xor
hlt
mov
push
inc
pop
inc
ficompl
xor
inc
xchg
push
imul
sub
sbb
enter
lcall
or
inc
xchg
xor
or
pop
mov
es
cmp
or
cmp
mov
aaa
and
cmpsl
xchg
mov
and
loopne
shlb
mov
decl
sub
mov
jno
xor
cld
mov
fwait
or
shlb
rorb
push
add
imul
test
addb
add
addr16
filds
mov
adcb
out
call
jnp
or
add
and
add
testl
orl
add
adc
shll
add
inc
sahf
iret
movsl
pop
adc
icebp
push
cltd
andl
pusha
add
jbe
and
flds
popa
jp
loop
pcmpeqd
fildll
jbe
inc
jo
mov
mov
fildll
or
mov
jne
jb
lock
sbb
inc
pushf
mov
sbb
or
jmp
mov
xor
repz
adc
adc
or
cmp
dec
ds
inc
sbb
cmp
je
jecxz
clc
sub
cmp
push
testb
fldcw
int
lods
push
inc
xchg
xchg
gs
lock
hlt
mov
cmp
sbb
repnz
das
xor
in
cwtl
or
jl
fsubrl
adc
test
cmp
clc
adc
inc
clc
pop
jmp
enter
dec
sbb
repnz
lea
mov
jae
std
adc
loope
dec
pop
loopne
pop
int3
andl
cwtl
ja
or
sbb
int
popa
rclb
xchg
sbb
jns
cmp
xor
cmpsb
sbb
sbb
xor
test
add
xor
imul
fcoml
inc
loope
lahf
inc
sbb
cmp
inc
sbb
add
stc
cmp
mov
test
iret
inc
add
dec
cmp
or
xchg
ret
fnsetpm(287
lds
push
les
jns
sub
xor
mov
xchg
mov
push
enter
aaa
adc
xchg
adc
cmp
mov
ret
mov
push
daa
imull
mov
xchg
fsubs
or
shll
jno
xor
insl
push
pop
pop
mov
cmpb
adc
adc
mov
add
jmp
lea
lea
movsl
add
pop
stos
pusha
push
jne
push
stos
lcall
clc
inc
push
or
lock
in
add
cmp
cmp
adc
lcall
testb
sbb
int3
push
inc
pusha
inc
test
dec
arpl
xchg
mov
xchg
hlt
in
xor
xor
outsb
iret
xchg
ja
xchg
hlt
in
jns
push
push
xchg
sub
inc
xchg
rolb
subl
bswap
fdivs
and
add
pop
ret
ss
mov
inc
clc
pop
ret
pop
xorl
rolb
push
out
or
push
cmp
xchg
sub
not
pop
out
cs
decl
sub
sub
inc
push
sbb
cs
sbb
adc
adc
fs
inc
adc
push
pop
sbb
sbb
inc
push
sbb
push
push
sbb
add
add
fs
inc
add
push
pop
or
or
inc
push
sbb
push
or
jb
icebp
repnz
and
shlb
negb
inc
negb
push
cmp
xor
sub
dec
mov
cld
imul
dec
rcll
or
add
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
jl
je
lcall
xor
sub
lcall
inc
cmpsb
imul
sub
sub
push
xor
shll
in
faddl
lcall
hlt
les
mov
mov
lcall
add
movsb
adc
push
inc
das
nop
das
or
outsl
lock
mov
movsb
pop
and
dec
imulb
mov
inc
movsb
flds
sbb
and
aam
lcall
leave
test
test
lcall
mov
daa
xchg
hlt
and
push
mov
shlb
cwtl
dec
and
insl
and
nop
mov
pop
pop
mov
rdtsc
stc
or
enter
cmp
pcmpgtw
cmp
rclb
in
sub
les
mov
or
push
add
push
add
orl
insb
cs
cmpb
jae
cmp
and
xor
xchg
int
ss
je
inc
xor
sub
or
fisubl
and
int3
adc
cmp
cli
mov
arpl
inc
pop
psubd
sbb
fadds
dec
mov
popa
in
pop
push
xchg
in
push
lret
out
js
cmpb
subb
adc
iret
jg
mov
sub
movl
xchg
jns
push
or
mov
mov
mov
inc
out
sbbl
cltd
push
nop
lock
ss
cmpsl
mov
gs
cmpsb
nop
cld
mov
fdivr
inc
push
clc
pop
and
cmpb
je
ret
pop
pop
xchg
push
cmp
adc
adc
sbb
fcompl
cltd
or
arpl
cmpsl
jno
mov
jle
mov
mov
jmp
adc
jmp
add
adc
in
inc
rorb
imul
mov
xchg
ljmp
sub
outsb
lahf
and
lcall
jmp
lfs
xchg
std
xor
sbb
xchg
in
adc
movb
and
ljmp
cmp
sub
adc
add
pop
xchg
sub
add
ss
add
cld
test
lcall
cli
fs
jne
sbb
fisttpl
mov
xchg
dec
ret
sbb
push
pop
mov
xor
or
popa
dec
ljmp
test
and
jge
or
adc
cmp
pop
call
sub
dec
sbb
adc
inc
fdivl
inc
nop
ja
xchg
lcall
mov
hlt
add
or
push
adc
push
sub
rol
into
dec
push
mov
pop
mov
mov
adc
addr16
mov
mov
xor
adc
sbb
jbe
add
subb
adc
addl
adcl
cwtl
inc
cmp
xorb
lret
iret
les
fs
pop
fmull
inc
lock
sbb
cltd
lock
lret
inc
dec
push
push
lock
xchg
pop
repz
in
enter
mov
add
outsb
jge
mov
icebp
mov
sub
inc
or
ja
sbb
inc
int3
inc
mov
add
insl
cltd
leave
pop
push
add
mov
sarb
dec
fcmovnb
ret
out
lods
or
loop
mov
and
xchg
mov
lds
rcrl
and
mov
hlt
xlat
and
sbb
pop
inc
inc
addl
shll
in
inc
pusha
pop
dec
sbb
andb
jl
mov
sahf
fs
or
sbb
cmpsl
insb
loopne
fildl
les
repnz
jp
pop
inc
out
xor
ret
and
add
mov
or
mov
dec
shlb
inc
and
lea
ror
fwait
arpl
or
cmc
jbe
xor
in
jl
pop
push
dec
lea
add
inc
clc
xchg
in
inc
cmp
out
call
inc
imul
push
lcall
outsb
add
xchg
add
ljmp
push
jle
sbb
xchg
inc
test
push
outsl
arpl
cltd
std
pop
test
xor
jbe
push
mov
mov
xor
cmp
sbb
out
icebp
adc
mov
sbb
inc
scas
push
adc
call
cmp
xor
add
mov
and
pop
lods
test
pop
iret
pop
push
jbe
daa
ret
xchg
or
int3
jne
and
orb
cld
inc
pop
xchg
loop
insl
ret
out
int3
cmp
aas
mov
ds
clc
inc
mov
rolb
cld
xor
clc
add
jecxz
sub
inc
fs
cmp
pop
cmpsb
xchg
andl
xlat
add
sub
or
sbb
xor
sahf
push
mov
push
cltd
cmp
inc
outsb
iret
out
push
or
adc
stc
jb
mov
xor
scas
pusha
sub
daa
cmpsb
mov
js
mov
aad
stos
push
mov
int
subb
mov
pop
add
mov
loopne
xchg
mov
xchg
dec
and
dec
jnp
xchg
sub
shll
inc
or
sbb
adc
jg
xchg
cmpsb
push
dec
fbstp
shlb
and
push
pop
ret
inc
dec
xchg
lock
imul
sub
fnstsw
push
clc
ret
or
mov
shlb
sbb
lock
sub
add
push
push
sbb
push
lods
mov
orl
mov
aad
lock
dec
rorl
lret
hlt
xchg
mov
and
dec
mov
mov
xor
lock
inc
or
inc
scas
loope
in
sbb
pop
mov
xchg
xchg
dec
sarb
sarb
mov
rolb
dec
repnz
hlt
hlt
mov
fiaddl
adc
imul
enter
add
add
enter
in
dec
into
and
pop
or
mov
fs
and
lods
add
repnz
stos
sarl
aaa
fsubrl
ds
fcomps
testl
sub
or
mov
sbbl
sub
loopne
rol
pop
decl
punpckldq
and
call
dec
or
test
or
outsl
cld
cmpsl
push
lods
stc
jno
dec
or
add
and
jno
clc
cmpl
divb
insl
pop
in
mov
and
adc
adc
lcall
imul
and
pop
sarb
test
rcrl
or
cmp
sbb
inc
mov
or
pop
xchg
xchg
hlt
push
lahf
or
je
sbb
outsl
or
push
dec
outsl
add
scas
xbegin
enter
add
mov
push
sbb
dec
outsl
or
and
into
inc
inc
clc
scas
pop
leave
idiv
xor
sbb
adc
add
push
roll
ss
scas
xchg
or
or
pushf
or
subb
cld
or
inc
cmp
push
or
das
jae
addl
adc
test
pop
cwtl
imul
jb
push
mul
popa
imul
jo
insl
loopne
or
and
pop
scas
or
loopne
cmp
roll
insb
pusha
sub
and
outsb
pop
or
or
dec
or
nop
xchg
daa
adc
imul
xchg
aas
int3
jo
or
cmp
test
jns
sbb
decl
or
add
wbinvd
and
push
push
push
inc
mov
andl
int3
int3
mov
sub
insl
daa
mov
fistpll
test
xor
xor
dec
imul
sbb
verr
movl
jnp
outsb
pop
arpl
insb
push
arpl
imul
data16
lods
inc
outsl
pop
js
arpl
pop
pusha
lods
int
daa
jo
jb
jb
popa
or
popf
mov
xchg
sbb
add
repz
cmp
data16
daa
ja
imull
outsb
cmpsb
cmp
pop
jb
addr16
mov
xchg
push
mov
add
inc
cmpsb
insb
daa
push
jg
int
mov
outsb
insb
das
imul
insb
je
cmpsl
sbb
and
mov
shll
lods
sbb
pop
je
jo
mov
dec
fidivl
arpl
jns
outsl
xor
xor
add
movsb
imul
pop
push
and
in
mov
shll
add
add
cmpsb
je
inc
sub
inc
cmp
fimull
pop
add
push
enter
stos
adc
pop
dec
push
or
bound
popf
cmpb
daa
sarb
les
out
mov
shlb
pop
adc
loopne
mov
dec
mov
lret
pop
sub
gs
push
push
add
push
jmp
push
mov
push
pop
aas
rolb
insb
test
outsl
mov
sbb
pop
add
pusha
adc
call
cld
cmpsl
adc
cmp
push
cmpsl
mov
and
cwtl
cmp
mov
in
iret
movsb
fidivrl
xchg
cs
adc
and
dec
or
jge
sub
push
dec
cmp
mov
sub
adc
mov
xor
into
clc
inc
sbb
addb
sub
cmc
and
fildl
pop
sub
push
adc
inc
inc
add
sti
add
add
pop
mov
pop
or
mov
rolb
xchg
ja
jae
adc
jmp
ja
nop
jo
adc
adc
xchg
add
add
pop
pop
pop
or
or
or
or
or
or
lcall
lcall
sbb
sbb
jmp
push
pop
and
and
and
dec
adc
out
loopne
adc
adc
ss
cmpsb
imul
imul
dec
shrl
and
inc
push
shll
fwait
lods
dec
shll
clc
push
shll
xor
sbb
jmp
add
and
or
in
nop
or
add
pop
adc
sbb
sbb
sbb
sbb
nop
addr16
or
or
and
and
addr16
sahf
movaps
sub
push
in
adc
adc
inc
sahf
add
cmp
in
nop
cmp
inc
push
inc
sahf
add
pop
dec
in
nop
sbb
push
sahf
add
sbb
sbb
sbb
xor
sbb
popa
imul
bound
arpl
int
xor
fs
and
cmp
and
and
repnz
addr16
mov
mov
cwtl
push
inc
xchg
jle
test
jle
rol
push
loop
fs
in
cmpb
fadds
popa
adc
sbb
sub
push
lea
lret
pop
outsl
pop
add
lock
sahf
inc
rorb
pop
push
push
clc
push
add
fsubrs
add
inc
outsb
mov
and
sub
shl
and
dec
or
adc
or
push
pop
and
imul
sahf
outsl
int
push
loopne
faddl
rcrl
pop
push
adc
add
add
add
add
decl
push
cmp
jb
jmp
dec
pop
popa
test
push
sbb
les
cld
lods
fmuls
and
or
xor
sbb
xor
mov
add
les
sbb
sub
cli
dec
popa
jns
jne
mov
ss
xor
mov
dec
adc
outsl
je
or
fs
jbe
shr
rorb
sbb
push
push
jl
sub
addb
cmpsl
add
inc
sahf
inc
incb
insb
sub
cmovo
movsb
inc
mov
pop
mov
add
pop
add
mov
mov
mov
mov
mov
ss
inc
lcall
cmpsl
nop
jno,pn
pop
dec
popa
bound
adc
push
pop
sub
pop
scas
and
dec
push
push
je
push
lcall
cwtl
nop
js
and
xchg
push
cmpps
stc
nop
scas
pop
sbb
nop
sbb
shlb
xchg
bound
sub
in
xchg
insl
add
push
inc
add
mov
aaa
dec
xchg
push
adc
add
add
je
adc
leave
push
xor
and
pop
inc
cmp
xchg
push
ret
rclb
dec
sbb
sbb
add
mov
and
les
sbb
and
sbb
rorb
fwait
or
mov
mov
dec
test
in
mov
jnp
rclb
sub
subl
and
test
cmp
fnstenv
and
and
es
or
or
sub
rclb
xchg
sub
add
add
enter
orb
inc
scas
dec
xor
dec
gs
inc
mov
mov
cmc
inc
push
xor
add
adc
aas
pop
and
inc
mov
inc
mov
and
test
sbbl
sbb
nop
push
std
cmp
push
inc
dec
push
loopne
repz
hlt
push
test
sbb
pavgb
das
rep
popf
xchg
inc
push
hlt
xor
daa
and
movsl
in
dec
inc
push
push
mov
and
and
mov
outsb
or
xor
jbe
je
pop
inc
push
pop
push
or
jns
stc
fistpll
jo
inc
sub
outsb
jg
push
push
sub
in
sahf
mov
mov
fildl
push
sbb
add
cmp
mov
sbb
push
enter
or
jo
lods
cmp
je
sub
cmp
push
das
cmp
cmp
push
mov
and
pop
cs
and
sub
leave
sub
dec
xor
loopne
in
xor
inc
or
add
lret
pop
mov
mov
enter
xor
xchg
int
out
mov
ljmp
popa
push
pop
stos
push
sub
xor
mov
cltd
mov
out
enter
xchg
mov
inc
stos
ret
push
push
and
or
push
add
lret
xchg
icebp
add
inc
dec
adc
ficoml
mov
rolb
movl
adc
sub
xchg
xor
sbb
push
adc
adc
mov
push
xor
push
xor
or
add
mov
sbb
sbb
sbb
xchg
test
adc
sub
pop
leave
sub
add
xor
and
mov
enter
and
add
and
es
pop
and
inc
or
mov
add
or
add
loopne
loopne
xchg
jo
call
push
call
pop
and
fldt
jb,pn
xor
aas
das
xor
test
cmpsl
dec
dec
movsl
in
inc
cld
mov
cmp
adc
push
insl
movsb
or
add
dec
add
ret
xchg
inc
or
and
push
sbb
sbbl
push
push
rorb
ja
outsb
sub
nop
js
xlat
adc
push
dec
inc
es
add
jno
sbb
jne
push
add
add
test
dec
jne
or
mov
orl
fistl
push
xchg
dec
ret
push
or
daa
dec
inc
call
sbb
add
jns
push
mov
inc
adcl
add
adc
and
sub
xchg
je
ret
push
je
add
push
or
and
movsb
sub
adc
and
in
test
aam
aam
and
adc
push
outsb
mov
pop
sahf
mov
or
inc
es
or
or
mov
insl
outsb
pop
push
aas
pop
sbbb
iret
adcl
adc
lret
pop
jno
pop
add
mov
sbb
scas
mov
or
jmp
sub
cmp
lods
adc
add
add
dec
dec
fisubs
xchg
sub
in
outsb
sbb
jo
mov
or
sbb
adc
and
inc
jmp
mov
xchg
pop
out
inc
lock
or
addr16
xchg
jns
mov
add
or
ret
les
fstps
pop
das
inc
dec
mov
jbe
loopne
add
or
adc
add
mov
or
movsl
xchg
daa
cmp
push
cmp
cmp
mov
mov
adc
sbb
mov
xor
inc
inc
sub
lea
cmp
jo
mov
inc
jo
mov
xchg
cmpsl
add
and
repnz
inc
sbb
and
iret
mov
enter
outsb
outsb
fisttps
and
xchg
outsl
cmp
mov
xorb
dec
syscall
mov
dec
add
sahf
mov
aaa
adc
mov
cmp
ret
mov
push
das
inc
xor
jge
push
mov
or
xor
cmpsl
imul
xlat
inc
pop
cmpl
dec
inc
add
pop
inc
movsb
add
jecxz
sub
cmp
cmp
fwait
insb
mov
adc
test
movl
enter
xlat
arpl
loopne
pusha
sbb
inc
cmp
test
push
and
jp
js
add
pop
sbb
test
or
inc
xchg
push
and
orl
popa
or
mov
in
push
inc
pop
cmp
jnp
xor
inc
push
enter
movb
cmp
cmp
rcll
int3
pop
insl
cmp
mov
inc
dec
pop
dec
dec
rsm
and
mov
cmpsb
jo
test
jne
adc
mov
loopne
mov
lods
pop
mov
adc
or
and
push
mov
inc
pop
sub
popa
sub
out
or
jmp
arpl
inc
cmp
jne
movb
negb
daa
add
pop
fld1
cmp
add
xchg
pop
daa
push
xor
and
lret
and
ja
mov
in
dec
add
add
mov
jmp
mov
iret
popa
cmp
call
cmp
shll
les
in
outsl
addr16
es
or
orl
cmp
or
or
dec
push
or
pop
jo
test
push
xchg
dec
es
dec
sbb
mov
sub
and
dec
imul
mov
dec
cmp
and
test
fiaddl
fwait
cmp
and
jecxz
sbb
and
clc
das
mov
adc
cmp
pop
in
adc
adc
das
jmp
and
mov
stos
and
dec
dec
and
mov
sarb
aam
xorb
hlt
push
inc
push
push
push
dec
dec
push
mov
mov
sbb
fidivs
push
sub
stc
test
leave
jmp
xor
or
mov
jne
mov
xor
or
das
pop
adc
jne
stos
sbb
sbb
lods
jmp
push
out
das
loope
testl
stos
xor
add
bound
aad
cltd
dec
adc
mov
out
js
jno
xchg
loope
cmp
jns
cmp
popf
movsl
je
mov
mov
outsb
arpl
push
rclb
test
push
push
lcall
inc
pop
aas
nop
dec
fimuls
test
nop
sbb
xor
or
insb
pop
pop
mov
push
das
xchg
decl
mov
pop
inc
pusha
push
inc
add
ds
inc
mov
push
in
pop
sub
pop
or
pop
cmp
pop
ss
and
clc
and
dec
adc
outsb
jae
mov
mov
pop
inc
sbb
jb
aas
sbb
sbb
pusha
inc
iret
in
pop
jb
sub
ss
and
testb
int
mulb
cwtl
cvttps2pi
subb
sbb
movaps
fsubrs
push
in
enter
jg
mov
sbb
call
or
loopne
lcall
push
mov
pop
imul
imul
push
mov
mov
fs
dec
je
movsb
aaa
push
push
pop
add
mov
dec
rclb
inc
daa
les
mov
inc
orl
fbstp
sahf
and
ud2
mov
leave
add
adc
or
mov
push
adc
mov
pop
ja
dec
mov
testb
and
mov
idiv
push
xor
loope
dec
inc
mov
shlb
add
filds
sbb
adc
push
or
lea
pop
add
rorb
int3
add
fistpl
cwtl
or
inc
cmp
sub
or
or
adc
adc
lret
sub
cmp
mov
lahf
pop
dec
in
push
aas
fdiv
sub
jns
or
adc
pop
pop
xor
mov
xchg
hlt
jl
lods
add
push
cmp
xchg
push
mov
cmp
dec
and
dec
pop
fisttps
pop
xchg
mov
xor
add
movb
inc
clc
push
adc
popa
loop
or
mov
dec
dec
shrl
lcall
lods
and
inc
aaa
or
sub
pop
ds
clc
addr16
arpl
inc
or
int
or
ss
js
jne
pop
xchg
and
or
loope
in
lock
dec
mov
shlb
jns
ret
pop
gs
pusha
push
mov
xor
add
sub
rcrl
mov
clc
stc
cmpl
dec
dec
cmp
in
mov
dec
inc
sub
sub
and
sub
std
std
fisubrl
push
pop
sbb
cmp
sub
sub
and
gs
das
sub
push
ret
movb
add
cmpsb
and
pushf
in
adc
cwtl
scas
or
lods
jmp
in
push
bnd
mov
test
xlat
adc
or
inc
jnp
popf
pop
or
or
xchg
add
push
push
mov
jbe
mov
adc
lds
xchg
movsl
jbe
fldcw
push
lock
lds
repz
inc
or
inc
mov
adc
stc
adcl
pop
sub
jg
jne
jo
inc
jmp
mov
and
sbb
push
jb
or
cmp
push
mov
sbb
ds
inc
test
test
ds
mov
mov
pusha
imul
xchg
bound
adc
cmp
add
popl
jns
pusha
and
or
xchg
adc
dec
or
and
dec
pushl
or
and
add
mov
adc
adc
or
add
rol
pop
xchg
sbb
sub
dec
jb
adc
enter
mov
pop
inc
mov
pop
das
leave
lock
fwait
adc
in
clc
pusha
stos
mov
pusha
test
push
insl
lods
in
mov
in
mov
stos
mov
and
mov
in
xchg
and
mov
and
jge
clc
or
mov
mov
xor
adc
sub
jb
idiv
lcall
dec
dec
dec
inc
dec
push
add
cmp
nop
mov
add
mov
and
xor
aaa
inc
push
fcmovnbe
test
or
or
add
inc
pushf
cmp
fsubrl
and
cmpsl
pop
inc
or
fbld
add
pop
dec
xchg
sbb
clc
pop
mov
jne
sub
xchg
fidivrs
inc
push
adc
jb
mov
sti
jmp
cmp
push
jmp
inc
outsl
imul
add
inc
mov
add
movsb
sub
sub
mov
jb
or
stos
cwtl
addl
les
cmovnp
js
out
js
sbb
mov
loope
inc
xor
sbb
fsubl
jb,pn
das
insb
dec
loop
add
mov
dec
push
xor
inc
cs
push
push
and
or
ret
cmp
nop
adc
shl
or
inc
hlt
inc
mov
or
xlat
mov
loopne
xchg
sbb
push
push
clc
jb
adc
bound
xchg
inc
xor
mov
sbb
je
adc
mov
inc
and
adc
jo
ret
push
in
cltd
in
nop
out
cmp
icebp
pause
inc
subl
xor
clc
jns
cltd
jo
adc
aaa
in
outsl
inc
jnp
add
popa
inc
lret
es
sbb
mov
fldt
fists
jns
sub
or
jl
add
mov
cs
ds
pop
dec
xchg
push
popa
loop
popa
mov
clc
mov
sub
jns
or
inc
mov
sbb
adc
or
xchg
jae
sub
inc
inc
ds
and
jne
inc
imul
imul
xchg
int
adc
push
mov
int
imul
mov
es
adc
fimull
and
pop
and
add
les
inc
add
aam
repnz
inc
int3
imul
xchg
imul
shll
bound
inc
outsb
cmp
jbe
push
push
push
test
adc
into
mov
mov
inc
jb
add
sbb
xchg
pop
and
inc
insb
adc
lock
inc
pop
inc
inc
stos
xchg
xchg
cmp
inc
fs
adc
inc
js
movsb
pop
or
jo
int3
xchg
mov
inc
outsb
cld
insb
pop
imul
pop
insl
das
push
push
push
inc
and
push
cmp
cmp
out
pop
sub
cwtl
inc
push
in
movsb
inc
pop
inc
pop
outsb
shll
push
adc
aaa
int3
shrb
in
dec
xor
sbb
add
sub
add
push
sbb
in
dec
inc
scas
nop
movb
shlb
rorl
push
push
inc
xchg
cmp
and
cwtl
addb
xchg
push
inc
movsb
push
inc
and
and
pop
inc
adc
adc
sbb
inc
addl
xor
addl
cmp
adcl
bound
js
or
stc
shlb
fs
jecxz
and
rcrb
imul
bnd
dec
arpl
fsubl
fs
mov
adc
enter
rolb
out
add
inc
inc
movsb
movd
cld
cmpsl
cmp
fcoml
imul
add
add
mov
mov
dec
or
push
mov
push
push
and
push
fldcw
adc
popa
imul
adc
add
test
imul
movsb
pop
stos
shll
jae
js
mov
adc
mov
inc
and
mull
dec
mull
xor
jecxz
das
loopne
mov
inc
test
pop
mov
adc
dec
cwtl
in
and
lret
or
pop
adc
lods
mov
or
js
and
and
inc
or
faddp
cmpb
adc
add
xor
sbbb
repnz
jbe
dec
lahf
or
xchg
dec
inc
imul
jo
push
dec
mov
pop
test
js
imul
and
inc
xchg
pop
adc
sarl
and
pop
incb
ss
notl
int
call
pop
in
xchg
fmull
ja
add
add
or
iret
dec
cmp
mulb
dec
xchg
push
or
mov
pop
mov
sbb
inc
sub
dec
mov
rcll
pop
iret
add
pop
or
sub
loope
adc
pusha
and
rclb
or
sub
dec
cmpsl
out
loop
ret
dec
or
inc
mov
pushf
and
jl
or
add
nop
lret
dec
and
jo
clc
dec
pop
outsl
arpl
pushf
pop
add
dec
jnp
dec
lock
inc
pusha
dec
iret
mov
imull
div
dec
and
mov
sbbl
dec
adc
mov
xchg
gs
or
jmp
fisubrl
xor
or
dec
push
icebp
fcomps
fmull
cmp
test
add
dec
loopne
push
xlat
dec
sbb
or
adc
bound
arpl
add
cmp
loope
or
icebp
add
popa
cmp
xchg
cmp
rolb
addr16
inc
or
xor
add
add
mov
cmp
and
imul
fmull
ficoms
push
add
add
scas
out
mov
inc
mov
out
xchg
add
cmp
sbb
cmp
push
push
add
add
andb
inc
add
jae
inc
out
sub
bsf
les
cmp
push
push
jo
inc
sub
pop
test
mov
in
mov
xor
and
test
or
out
xor
pusha
push
ja
pop
jp
dec
adc
jbe
call
xchg
xchg
dec
cmp
iret
fwait
or
or
push
add
push
sub
add
add
add
add
xlat
mov
xchg
sub
pop
add
call
xchg
sbb
decl
mov
mov
mov
mov
sahf
sbb
cmp
pop
clc
cmp
fsubrp
lcall
stos
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
fdivr
fidivl
fdivr
xlat
call
call
call
call
test
sar
sar
sar
sar
iret
cmp
dec
push
sarl
int3
dec
dec
icebp
dec
xchg
lret
sbb
imul
call
scas
push
mov
cmpsb
fldenv
push
clc
add
in
mov
adc
loopne
mov
pop
fs
jl
xchg
lods
mov
scas
insl
lcall
mov
mov
enter
xchg
fwait
pusha
xchg
je
in
push
hlt
xchg
int
mov
cmpsb
sahf
psubusb
sub
imul
pushf
mov
lret
data16
sub
mov
adc
xchg
movl
scas
cmp
mov
mov
jo
mov
mov
mov
js
decb
outsl
imul
push
sub
xchg
jbe
nop
pop
pop
sbb
or
and
ficompl
mov
int
and
cmp
call
stos
dec
cmp
mov
lea
ds
xor
sbb
mov
mov
push
xchg
add
cmp
or
je
sbbb
mov
enter
push
push
adc
inc
mov
push
cmp
mov
sub
or
mov
mov
pop
and
add
insb
or
push
xchg
xchg
lahf
push
add
dec
inc
adcb
sbb
xchg
and
inc
adc
addr16
adc
pop
dec
in
adc
add
pop
mov
xchg
or
pop
dec
orb
scas
mov
movsb
pop
bound
or
outsl
ja
or
push
popa
imul
sub
aaa
lock
or
pop
xor
or
inc
scas
add
jns
insl
fcmove
repnz
jo
cltd
or
scas
xor
push
pop
push
pop
pop
push
inc
test
loop
daa
mov
add
adc
xlat
and
dec
and
cwtl
or
or
push
add
js
js
nop
jo
dec
and
cmp
add
fistl
xlat
inc
xchg
push
push
sahf
and
add
shlb
and
sub
cmp
jnp
outsb
inc
pop
mov
ja
and
incb
adc
sbb
sbb
cli
xlat
nop
stos
jnp
aaa
mov
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
mov
incl
xchg
sbb
and
mov
mov
mov
add
aas
lock
mov
xor
cmp
mov
xchg
in
call
cmp
add
lock
inc
xor
outsl
std
mov
sar
pop
cmp
pushl
pushl
mov
mov
movsb
xor
cmpsb
imul
push
sub
dec
shll
loop
jecxz
fwait
insw
rcll
dec
in
pushw
in
in
dec
mov
cs
out
add
and
cmpsb
sub
sub
rclb
les
mov
iret
fs
xchg
in
in
or
lods
mov
repnz
xchg
dec
shll
jl
mov
pop
imul
test
push
push
mov
cs
hlt
xadd
push
rcr
es
mov
rep
fdiv
xchg
xor
push
fmuls
xor
int3
xlat
pop
shl
sti
jmp
pushf
sahf
mov
push
arpl
cmp
clc
pop
mov
xor
sub
verr
int3
cmp
imul
lds
cmp
mov
mov
jmp
in
inc
add
dec
out
pusha
pop
sti
out
mov
cli
push
cld
addr16
das
adc
and
push
or
stos
mov
in
inc
pop
and
jb
add
fs
adc
pop
hlt
ss
push
fs
mov
addb
in
push
add
mov
add
inc
push
lods
rorl
inc
xor
movb
mov
or
adc
test
or
pop
push
pop
sub
fs
pop
and
pop
roll
sbb
or
nop
sbb
mov
mov
test
insb
pop
sub
out
ja
pop
mov
pop
or
in
pusha
rclb
push
inc
inc
mov
inc
mov
pop
adc
or
sub
cmpsl
adc
adc
adc
add
adc
adc
mov
mov
sti
enter
mov
in
pusha
push
roll
pop
scas
pop
or
rorl
pop
sbb
or
xchg
jno
outsl
cmp
notb
push
adc
or
nop
add
add
nop
add
and
les
add
mov
in
inc
mov
cmpsb
out
push
clc
imul
xor
fwait
test
ret
inc
ror
fmull
add
adc
cmpsl
ficoml
mov
push
cmp
add
ss
xchg
push
pop
mov
fistl
sub
les
lcall
xor
aaa
shlb
or
inc
out
push
pop
and
dec
xchg
lahf
sub
sub
pop
jp
inc
hlt
inc
scas
push
ffree
addr16
cmc
nop
mov
mov
jmp
outsl
test
push
cmp
pop
outsb
cmp
cli
cld
mov
nop
cmp
cmpsb
outsb
sbb
sahf
rcll
push
popa
sub
and
imul
hlt
and
sbb
mov
iret
add
inc
dec
mov
cmp
into
fiadds
or
adc
push
fld
inc
ja
push
push
push
sbb
adc
arpl
jne
pushf
pop
sbb
sbb
mov
pop
rorb
dec
insb
lahf
in
pop
nop
in
jne
mov
ret
mov
add
js
cmp
adc
dec
inc
sub
dec
cs
jb
push
add
lcall
push
sbb
push
push
fisttpl
xchg
pop
push
or
nop
aaa
jb
test
daa
add
insb
mov
ret
pop
inc
jle
outsl
mov
dec
inc
gs
insl
or
or
je
negb
xchg
daa
push
or
in
dec
push
push
inc
push
inc
enter
daa
push
jo
daa
or
pop
rorb
insb
popa
clts
cmp
add
stc
xlat
dec
add
xchg
daa
dec
push
jo
imul
lods
and
adc
movups
gs
mov
movb
mov
sub
out
adc
xchg
pop
xorl
adc
cmp
notl
pop
pop
test
pop
mov
jg
cbtw
push
cmp
fisttpl
icebp
cmp
adc
dec
ret
or
push
xchg
jl
clc
mov
xor
push
xchg
xchg
adc
sub
shrb
add
mov
ja
adc
andl
or
sub
inc
mov
jb
jne
mov
push
les
stc
pop
hlt
addr16
xchg
pop
adc
les
adc
mov
scas
es
xor
push
sbb
inc
addr16
xchg
mov
pop
pop
xorb
adc
das
push
or
add
cmp
aam
jecxz
jl
out
or
movsb
out
imul
or
in
jb
xor
gs
or
pusha
jl
pop
faddl
es
sub
lret
pop
inc
add
lock
and
pop
push
int3
pusha
mov
lds
clc
adc
xchg
mov
jno
add
into
ds
fnsave
sub
mov
xor
in
in
dec
dec
jne
push
cmc
addb
cmp
add
shll
fisttpll
nop
push
or
or
add
mov
out
mov
or
sub
mov
adc
adc
lret
mov
lret
sbb
and
and
add
mov
sub
sub
scas
inc
or
push
push
int
sbb
add
push
dec
in
cmpsb
test
adc
dec
or
add
dec
stc
fstl
pop
fidivrl
mov
xchg
aas
icebp
and
push
xchg
cmp
jle
and
add
inc
or
je
loopne
jge
mov
js
mov
or
loop
ja
xchg
push
out
or
add
or
bound
in
movsl
cmp
push
jmp
mov
inc
daa
inc
js
jg
jne
addr16
dec
sub
adc
xchg
mov
test
xchg
cmp
push
xor
mov
xor
lcall
xlat
mov
dec
lods
adc
fisttps
hlt
jmp
or
decl
ss
dec
movl
inc
or
xor
inc
inc
mov
push
pop
pop
xorb
or
fnsave
or
sbb
sbb
or
cmpsl
mov
inc
cmp
rolb
fildll
movsb
lea
mov
cmpsl
test
outsl
pop
out
or
movsl
lahf
test
jne
dec
fildll
push
xor
ror
ret
inc
jle
mov
and
or
lea
mov
or
pushf
dec
cmpsl
sbb
or
xor
push
sbb
push
xchg
pop
dec
dec
pop
push
mov
jae
mov
ss
rclb
adc
test
or
push
inc
jl
test
adc
pop
inc
ljmp
mov
loope
pop
push
pop
mov
pop
insb
insb
push
inc
xchg
mov
mov
movsl
pop
push
pop
pop
arpl
sbb
pop
inc
inc
rclb
add
scas
mov
mov
pop
sarb
cs
inc
push
ret
adc
add
rolb
xor
mov
jle
fisubs
movntps
mov
pop
push
and
and
jle
or
inc
or
add
mov
ficoms
inc
dec
or
sbb
xor
mov
jo
xchg
pop
fidivl
cmpsl
ret
mov
movb
mov
cmp
enter
sbb
sub
mov
add
push
add
mov
sarl
cmp
sub
inc
adc
jmp
cmp
jne
adc
lea
xchg
xchg
adc
push
sub
lods
repz
les
fwait
das
movsl
xor
mull
mov
in
and
in
push
roll
sub
imul
sub
push
or
orl
xchg
aad
sub
ja
popa
mov
inc
fnstsw
cmp
pop
js
pushf
pop
mov
mov
ret
popa
jo
sti
in
sub
add
sub
inc
mulb
jo
in
lods
inc
and
and
fsts
jae
lods
pop
iret
and
adc
ret
inc
pop
sti
mov
in
shr
cmp
les
lret
cmc
xlat
pop
inc
in
sub
add
fcoms
cmpb
and
sbb
push
ret
sbb
cwtl
push
push
pop
add
and
nop
dec
in
lea
dec
and
jo
pop
insb
ret
jo
mov
or
xchg
sub
jl
cmpl
loope
push
jo
addb
xor
xor
stos
rorb
sbb
push
jl
fidivs
out
jp
sbbl
lock
cmpb
pop
ficompl
cmpl
and
scas
jno
push
cmp
xchg
gs
repz
fnstenv
push
fmuls
inc
inc
jno
sub
lcall
add
sarl
daa
fmuls
sub
shrb
inc
dec
jne
jbe
and
xchg
cmpsb
cmp
loopne
mov
inc
int3
jmp
mov
adcb
psrlq
add
or
xor
scas
fisttpll
push
inc
jne
and
push
push
cmp
shlb
mov
out
outsl
test
sbb
add
cwtl
pop
in
sbb
hlt
mov
cld
fwait
jl
or
push
or
lock
call
xor
mov
push
arpl
stos
fbld
xor
push
pop
inc
movsl
cmp
dec
adc
dec
push
sub
inc
cli
movsb
pop
or
movsb
mov
jne
repnz
inc
pop
aaa
pop
adc
sbb
inc
bound
clc
in
fsubr
xchg
sarb
leave
sub
jmp
push
inc
out
rorl
je
add
xlat
pop
int
cmp
or
pop
fisubl
aaa
test
mov
dec
imul
push
xchg
and
xor
mov
rorl
fwait
popa
aas
xchg
jg
jg
inc
jo
jl
mov
mov
js
push
xlat
mov
mov
sbb
xchg
jmp
outsb
shl
add
je
out
aas
cmpsb
or
mov
insl
cld
loop
shlb
push
cs
or
sbb
in
pop
xor
repz
loop
and
dec
xchg
xor
test
shrb
fsubrl
jnp
das
js
sbb
sub
mov
mov
out
mov
arpl
call
jnp
and
jbe
cs
xor
pop
cmp
cmpb
movb
and
jmp
xchg
add
push
jecxz
sti
cmp
je
ljmp
ja
mov
mov
call
orl
or
in
pop
insb
std
insl
mov
add
mov
add
add
adcb
das
push
adc
or
mov
insb
xor
add
xchg
mov
inc
and
xorb
cmp
testb
mov
clc
add
std
and
xorb
or
push
jne
mov
xchg
pop
ret
cmovno
xor
and
and
pop
pop
cwtl
movswl
pusha
lahf
cmp
pop
fcomp
or
xor
or
es
sbb
push
mov
pop
js
cmp
nop
int3
fidivl
xchg
int3
cltd
pop
pop
and
lea
arpl
fists
pop
fadd
imul
push
jmp
push
jl
mov
adc
and
dec
adc
ret
mov
or
lret
rcrb
ja
aam
cltd
testb
push
xor
fdivrl
pop
out
test
dec
ret
lret
push
jl
pop
inc
push
aam
jo
xor
sbb
ss
je
add
les
mov
pop
rol
dec
mov
js
cmpb
loope
mov
mov
mov
and
jae
adc
icebp
pop
and
add
cmp
and
sti
xchg
lea
jno
adc
cli
imul
mov
imull
push
push
insl
pop
sub
or
sub
test
add
jmp
sbb
pop
adc
or
pop
sub
xor
sub
mov
rolb
push
inc
ficoml
or
mov
jmp
call
loope
mov
jp
or
jp
cmp
ficomps
aam
mov
fisubl
and
imul
lds
jbe
and
mov
and
cmp
jne
lea
push
or
pop
fs
rorb
sbb
dec
jge
mov
notb
repz
cmp
adc
sub
push
lahf
bound
lret
inc
dec
jmp
mov
popf
jo
and
cltd
popf
mov
push
jne
sub
fists
sub
add
mov
add
pop
jno
bound
jb
push
sbb
xor
test
loope
xor
push
adc
mov
dec
add
dec
jg
test
xor
mov
loope
iret
push
push
jne
ss
mov
sbb
mov
sub
sbbb
mov
outsl
aas
push
add
xor
mov
lahf
shlb
cmp
fcmovnb
inc
incb
filds
int3
mov
xor
cld
xor
pop
repnz
cmpsb
cs
adc
and
sbb
push
cltd
movsb
lahf
and
mov
ret
or
insb
cmc
repnz
sub
cmp
mov
adc
fs
sbb
jmp
and
mov
sub
pop
xchg
stc
sbb
dec
add
in
dec
mov
jmp
dec
push
out
mov
je
test
adc
push
cmp
adc
add
test
cmp
adc
and
or
addl
jns
loope
sub
ds
sbb
pop
mov
add
rcrb
sub
xor
jmp
cli
sub
fildll
cld
push
adc
and
xchg
ss
mov
add
js
or
pop
mov
cli
test
and
fsin
push
and
notb
and
inc
divl
push
movsb
mov
inc
dec
repnz
sub
movsb
pusha
dec
adc
in
xchg
inc
je
dec
xor
fwait
fwait
test
repz
sbb
lds
sbb
xchg
inc
or
inc
xchg
js
push
add
cmp
inc
inc
inc
cmc
push
leave
add
and
lds
lret
imul
adc
cmp
orl
add
dec
sbb
aas
push
in
add
or
push
sarb
pop
jmp
or
push
or
jp
xchg
sbb
jo,pt
lock
sub
dec
jo
inc
xchg
xor
pop
insb
cld
mov
lock
aas
jp
adc
clc
aaa
jl
mov
push
jg
add
mov
push
lahf
dec
ja
xchg
or
shll
add
sahf
sbb
add
repnz
data16
daa
mov
adcb
and
push
mov
pop
pop
dec
ret
adc
jmp
gs
mov
out
ss
data16
mov
sub
sub
dec
and
dec
or
adc
xorb
push
jb
pop
xor
dec
or
addr16
sbb
inc
add
or
jmp
sub
pop
sub
andl
gs
cmp
dec
add
push
mov
xchg
cltd
es
or
ret
xor
arpl
mov
xchg
pop
loope
mov
popa
aam
mov
xchg
dec
and
push
adc
mov
or
or
push
add
xor
sub
mov
push
outsb
and
push
jle
jmp
cmp
je
mov
test
jbe
pop
adc
popf
cmp
mov
jge
cmp
push
or
xchg
into
mov
adc
je
mov
jbe
cmp
cmp
pop
je
nop
in
addr16
imul
fstpt
cmp
jmp
mov
xchg
mov
and
roll
lods
push
rorl
and
inc
sbb
cli
gs
lock
addr16
out
inc
inc
pop
xor
xchg
mov
push
in
mov
stc
pop
pop
lds
add
push
dec
pusha
icebp
mov
add
add
test
shrb
iret
pop
and
pop
push
add
xchg
dec
or
push
sub
imul
pop
mov
dec
adc
out
fadd
add
mov
js
mov
or
sarl
or
mov
sbbb
dec
add
sti
jecxz
pop
mov
push
gs
add
pop
pop
loopne
add
fsts
mov
add
sbb
mov
or
push
sub
shrl
sub
imul
fs
jg
add
arpl
sub
pusha
lcall
adc
inc
arpl
popa
or
aaa
and
sbb
lahf
jne
jg
or
je
sbb
xchg
jne
push
sbb
sarb
push
js
xchg
or
daa
mov
cmp
push
pop
inc
pusha
xor
daa
xor
ss
jle
aas
mov
movsl
xchg
mov
push
xlat
popf
xchg
incb
mov
stos
je
and
add
mov
mov
jae
mov
in
pop
shl
fwait
mov
popa
sub
rcr
call
lret
repnz
je
sbb
pop
lcall
add
pop
pop
pop
sbbl
adc
push
pop
add
jp
jmp
cwtl
out
and
aas
push
add
cs
push
in
fisttps
int
fs
dec
xor
shlb
cmp
cmp
add
mov
push
js
jle
int3
mov
jecxz
mov
xlat
into
sub
xor
and
adc
je
push
fidivrl
jg
pusha
adc
mov
rclb
push
sbb
adc
ret
xor
and
addb
inc
sbb
ret
fistpl
inc
mov
sbb
cwtl
jle
xor
add
cmp
mov
popa
jge
pop
sub
push
pop
cld
mov
les
pushl
push
xor
mov
cmpsl
mov
cmp
cltd
fucomi
adc
fdivrs
cmp
add
inc
push
or
pop
sbb
incl
arpl
repz
orl
into
subl
cmp
and
push
fldcw
rolb
mov
add
aas
incl
or
packssdw
cmp
shll
xchg
mov
jg
add
add
push
or
xchg
sti
ds
mov
push
xor
mov
adc
cli
adc
add
movb
daa
popl
hlt
add
sub
enter
aaa
xlat
sub
fisubs
arpl
sbb
call
mov
pop
or
mov
dec
xchg
inc
pop
cmpsl
mov
xor
mov
and
jle
or
test
jmp
ret
and
clc
jne
sub
xchg
push
pop
sub
xchg
cmpsb
ret
movsl
add
jo
dec
adc
jo
movsb
fidivs
and
shrb
pop
xlat
push
je
nop
mov
or
dec
sub
fistps
pmaxsw
std
sub
ret
jne
cmp
enter
jne
sub
dec
sar
inc
dec
push
pop
dec
push
push
inc
leave
shrl
adc
jmp
out
out
and
adc
sub
cmpsl
adc
inc
push
or
add
popl
cmp
jne
cld
dec
cmp
invd
dec
and
mov
mov
inc
and
lods
mov
mov
mov
ret
or
xchg
lret
inc
add
sahf
jl
scas
shl
inc
testb
sub
and
dec
or
xor
cmpb
call
test
mov
call
cmp
cmp
into
add
flds
sub
mov
das
adc
or
inc
dec
das
mov
cmpl
repz
cs
add
or
dec
in
subl
adc
sbb
sub
adc
imul
jne
mov
inc
and
xchg
jle
mov
je
mov
add
adcb
ret
insl
adc
das
or
xor
das
rolb
clc
sub
push
dec
push
roll
lods
adc
inc
inc
lret
inc
imul
dec
add
push
xchg
sbbb
push
inc
xchg
outsl
or
or
in
fbld
loopne
in
outsb
test
mov
cld
inc
adc
pop
rcr
xchg
shrb
push
and
xor
inc
mov
or
movsb
adcl
xor
dec
push
mov
adc
in
mov
mov
fdivr
clc
mov
and
mov
push
bound
cli
lds
out
gs
push
cmp
mov
sub
mov
sti
inc
inc
fs
fadd
mov
imul
or
push
sbb
jbe
inc
scas
jmp
outsb
sahf
pop
inc
pop
movb
adc
scas
mov
sub
dec
addl
cmpl
inc
ja
mov
or
outsl
dec
add
add
dec
cmp
adc
push
mov
daa
ret
cmp
aad
inc
add
adc
and
ja
cmpsb
mov
mov
test
je
cmp
pop
fs
adc
or
jo
dec
inc
jmp
int3
test
call
add
or
mov
notl
ss
hlt
pop
lret
cmpb
mov
and
mov
add
inc
dec
lods
xchg
daa
sbb
add
or
and
mov
pop
test
cmp
mov
lahf
dec
jmp
add
xchg
ficompl
sub
dec
andb
inc
mov
sarb
xchg
cmpsb
icebp
inc
js
xor
push
mov
and
dec
mov
add
mov
mov
cmc
jae
inc
inc
pop
xchg
inc
and
loope
imulb
cmp
fmulp
mov
xchg
cwtl
bound
or
jno
xor
je
jmp
sahf
pop
jmp
mov
push
sub
cmp
aaa
lret
leave
call
pop
outsb
inc
adc
inc
into
jbe
cwtl
pop
jmp
sbb
repnz
sarb
push
out
mov
sbb
sbb
dec
pop
jnp
xchg
dec
xchg
sahf
or
jecxz
data16
mov
nop
add
pop
ret
sub
cmp
in
or
jnp
andb
dec
adc
inc
imul
pop
mov
test
mov
pop
add
pop
ret
gs
xchg
pop
push
adc
jmp
cmpb
mov
loopne
arpl
inc
pop
ja
rcrb
push
sbb
pop
es
push
or
sbb
andl
cmp
pop
add
push
pop
je
pusha
and
adc
add
pop
psrad
xchg
inc
testb
je
push
jmp
pusha
and
adc
cmp
inc
add
and
fmuls
lds
add
add
fcoml
inc
dec
mov
or
inc
outsb
xor
xchg
inc
addb
and
inc
dec
lcall
inc
sbb
or
jne
sbb
push
sbb
xchg
test
cmp
xchg
jg
mov
mov
sbb
shl
je
scas
cmp
je
jl
mov
push
pop
adc
orl
sbb
btc
mov
pop
je
mov
push
lahf
or
cmp
add
dec
js
mov
sbb
jle
and
cmp
or
nop
test
ffreep
jge
lock
jo
add
pop
adc
out
push
iret
sbb
adc
adc
push
test
add
int3
pop
rorb
and
pop
cmp
adc
test
push
leave
xchg
xchg
lcall
xor
adc
ficompl
xchg
clc
jnp
dec
outsl
pop
je
or
inc
pusha
add
cmp
inc
ss
fiadds
pop
push
lds
dec
cmp
adc
mov
push
cmp
add
cmpsb
push
add
insl
shrb
cli
xor
fisttpll
out
loopne
mov
xor
das
pop
je
mov
mov
add
push
cmpsl
add
dec
lock
aas
or
nop
cltd
sbb
fldlg2
sbb
dec
and
mov
setnp
xchg
xchg
sbb
mov
pop
and
dec
dec
or
and
inc
pop
xor
enterw
fnstcw
data16
jo
push
push
clc
cmp
mov
nop
das
xchg
sbb
mov
fs
or
adc
out
sub
pop
les
mov
sbbb
aad
xchg
add
arpl
insl
xchg
stos
fstpt
xor
mov
pop
std
pusha
or
mov
lds
or
inc
fs
roll
dec
icebp
leave
iret
push
pop
je
dec
mov
cs
lcall
ret
notl
das
and
out
cwtl
or
pop
adc
shr
inc
xor
dec
dec
pop
xchg
cmp
jl
mov
or
les
sbb
popf
xchg
jo
pop
clc
ret
jp
xor
dec
dec
xor
sbb
testb
mov
ret
mov
faddl
mov
sub
out
pop
pop
imul
out
jg
push
aaa
mov
dec
jmp
mov
sub
xor
add
pusha
call
popa
nop
rclb
lea
adc
add
add
ret
fistl
aas
outsb
jne
sub
cltd
sbb
bound
sbb
mov
outsb
and
outsb
add
mov
and
mov
pop
cmp
pusha
adc
lea
cmp
add
cli
dec
filds
inc
pop
cmp
add
loope
jo
mov
xor
and
add
push
call
imul
sbb
xor
adc
mov
pop
cmpsb
outsb
adc
rcll
mov
jl
fwait
inc
incb
sbb
add
push
add
mov
sbb
pop
inc
fwait
arpl
push
or
lret
sub
test
dec
fnstcw
jecxz
mov
je
call
mov
dec
push
in
sahf
sub
jb
das
add
mov
jb
loop
and
pop
inc
add
mov
sbb
push
jp
fdivrl
es
das
cmp
mov
mov
ret
xchg
sbb
test
xor
adc
jne
jecxz
mov
jns
push
adc
aam
xchg
add
sub
mov
les
test
test
dec
add
aad
mov
sub
or
flds
jl
dec
sbb
push
inc
xchg
mov
xchg
mov
rep
add
orl
stos
sbb
push
mov
push
push
lret
mov
icebp
lock
in
test
bound
push
pop
ds
enter
add
adc
mov
inc
pop
adc
adc
xchg
sbb
rcrl
jns
add
add
or
test
cmpb
jne
fadds
test
inc
adc
pusha
cmp
jg
jl
pop
insl
add
fmull
fildl
fsubp
jbe
insb
daa
add
adc
inc
push
jno
lea
fst
incl
loope
fucomp
adc
or
outsb
mov
mov
lea
imul
gs
pop
cmp
adc
sbb
jg
push
insb
push
mov
mov
jo
int
movsbl
ret
and
sub
jns
add
or
cmp
inc
add
es
cltd
scas
hlt
push
xchg
in
push
dec
jne
cmp
push
cmp
cmp
test
adc
enter
inc
cmpl
movsb
rclb
es
pushf
rolb
fldl
test
icebp
imul
add
pop
lea
mov
push
mov
shr
sub
mov
mov
fnstsw
jge
mov
mov
div
add
sbb
push
or
inc
inc
lea
or
sbb
jl
addl
cmpsb
pop
sbb
ja
dec
sub
mov
repnz
data16
add
add
insl
push
push
insb
cmp
and
pusha
dec
jnp
jmp
sbb
adc
inc
mov
enter
and
lds
mov
repz
push
js
mov
push
sbb
and
imull
sub
cmp
push
outsb
insb
xchg
jno
dec
pop
in
mov
lea
push
aaa
call
ss
add
das
in
or
sbb
fidivrl
in
push
xor
sbb
or
sub
jg
sub
call
stos
adc
add
mov
adcl
push
les
pop
icebp
or
das
ja
add
jo
jns
inc
jne
and
add
inc
add
add
pop
jnp
sub
add
rorl
ror
xor
mov
subl
iret
adc
es
and
inc
fdivp
mov
jo
jmp
mov
sbb
leave
mov
xor
lret
sub
xor
push
hlt
js
ret
std
test
scas
cmp
mov
sub
rcrb
scas
test
adc
orl
cmp
in
outsl
inc
and
and
fcoml
in
inc
adc
test
sbb
and
mov
pop
sbb
mov
push
pop
jmp
loope
jl
in
icebp
fnstsw
cli
push
in
inc
xchg
adc
pop
sti
test
push
push
sbb
rolb
xor
jecxz
test
lds
sti
nop
xchg
inc
testb
mov
and
or
hlt
sub
movsb
push
inc
or
mov
mov
or
sbb
pop
js
or
lods
push
adc
pop
adc
js
jne
ret
sbbl
push
int3
js
call
loop
mov
or
sti
jl
stos
ss
out
loopne
rcll
iret
and
mov
mov
or
clc
dec
xor
jg
and
push
sbb
push
popa
leave
adc
int
adc
inc
int3
and
test
push
pop
call
movb
adc
pop
ret
push
sbb
adc
push
popf
les
jecxz
add
test
xchg
pop
add
xor
mov
into
adc
andb
push
pop
movsl
inc
or
jmp
test
xchg
rorl
dec
cmc
mov
sub
sbb
add
bound
mov
ss
in
pop
xlat
cltd
xor
and
adc
pushf
mov
fwait
jbe
add
or
add
enter
enter
jmp
out
push
shrl
or
rolb
pushf
or
ds
out
jp
xchg
add
xor
mov
je
syscall
adc
sbb
push
mov
sahf
daa
push
or
pop
ret
sti
shlb
insb
xor
cmp
adc
cltd
fnstenv
dec
fiaddl
sub
sub
sbb
or
or
ss
push
or
pop
insl
xor
popa
adc
cmp
test
mov
adc
sub
jge
shrb
repz
push
or
or
pop
jmp
cmp
mov
sub
push
add
push
or
adc
addr16
inc
jp
jge
cmpsl
inc
mov
loopne
clc
jmp
adc
clc
xlat
xor
pop
adc
notb
push
dec
mov
pop
xlat
cmp
mov
cmp
imul
inc
jmp
sbb
dec
add
mov
fwait
mov
repnz
jmp
sub
dec
jno
sti
nop
in
sub
dec
mov
pop
xchg
test
mov
int3
add
loop
jns
mov
aaa
and
stc
sbb
pop
jle
and
test
add
cmp
cmp
insl
ja
mov
jbe
dec
dec
jle
sarb
cltd
sarb
stos
jb
adc
pop
das
inc
loop
push
jg
add
dec
repnz
push
or
or
sbb
add
ret
mov
mov
mov
pop
jp
es
aas
in
sub
clc
mov
add
jle
push
jmp
xchg
bound
sbb
popa
lds
cmp
jne
roll
push
imul
fistpl
and
adc
sub
and
mov
and
cmp
push
popa
mov
sarb
adc
lock
mov
adc
ds
je
test
stos
mov
outsl
clc
ja
imul
shlb
xchg
xchg
and
mov
jl
or
das
aas
mov
call
sbb
xchg
and
xchg
insl
clc
xchg
add
push
sub
adc
rorb
push
pop
mov
mov
not
pop
dec
test
in
push
test
and
adc
add
inc
pop
sub
add
or
xchg
add
aam
dec
xor
adc
xlat
mov
cltd
lock
sbb
mov
and
mov
sbb
xor
cmp
clc
lcall
sub
xchg
or
adcb
push
fisubrs
and
in
xchg
add
sub
and
xchg
rolb
cmp
js
xchg
std
fmuls
rcl
sarb
data16
push
cmp
cmpw
cmp
adc
or
sbb
jnp
add
daa
pop
or
adc
inc
movsb
fcom
aad
test
push
mov
sbb
seto
or
mov
add
push
mov
xchg
or
xchg
cmp
lods
and
cltd
shlb
cmp
fwait
xor
test
and
dec
rcl
fs
push
jp
mov
inc
pop
xchg
dec
inc
jl
dec
xor
sbb
push
add
cltd
orb
xchg
xchg
push
ret
mov
call
movsl
inc
das
outsl
cmp
push
sub
gs
xor
add
jne
pop
rorb
dec
lcall
inc
ret
arpl
jecxz
mov
xchg
inc
shll
dec
into
jno
add
mov
add
lahf
leave
add
push
outsl
and
fisubl
shrl
andb
xchg
xchg
push
mov
dec
fs
cmpl
sub
adc
jb
es
pop
aam
push
mov
pop
dec
or
enter
mov
or
loopne
and
push
xorb
shll
call
aaa
leave
xor
push
sbb
mov
push
sub
mov
arpl
pushf
mov
lahf
sahf
xchg
mov
outsl
leave
adc
add
ret
inc
xchg
mov
sbb
ret
or
mov
add
aaa
fmul
inc
mov
add
adc
fsubs
je
and
dec
push
dec
mov
pop
jmp
push
movb
xor
sbb
test
adc
pop
outsl
mov
repnz
das
int3
mov
and
push
bound
or
pop
mov
sahf
adc
adc
outsl
rorl
jle
adc
or
mov
dec
or
dec
sbb
ret
es
je
mov
mov
bound
arpl
jne
testb
xchg
sub
inc
sbb
push
and
pusha
add
mov
jae
cmp
pushf
push
inc
add
leave
push
and
lcall
jbe
jle
and
mov
loopne
add
or
pop
outsb
cmp
lock
daa
or
dec
fcoml
ljmp
mov
aas
cmp
push
mov
mov
aam
ljmp
out
rcll
push
mov
adc
inc
xchg
idivl
clc
sbb
or
js
mov
mov
nop
fildl
data16
cmp
mov
scas
in
pop
xor
sbb
out
pop
pop
push
in
fmuls
xor
dec
bound
push
jecxz
divb
pop
jns
ret
push
das
popf
add
xchg
push
inc
divl
testb
add
cmp
adc
icebp
ret
dec
daa
jmp
sahf
or
xchg
xchg
andb
rcrb
ret
sbb
sub
mov
or
pop
popa
lret
inc
mov
imul
push
inc
or
xor
fcomps
xor
and
lea
mov
dec
icebp
jb
xchg
mov
push
jns
sub
sbb
dec
loope
cwtl
cmc
or
dec
dec
imul
adc
clc
mov
sub
pusha
add
rorb
push
pop
iret
rolb
add
bound
andl
add
sbb
mov
sub
je
push
xor
idivb
sbb
in
in
xor
xchg
aad
adc
outsl
fsubrl
nop
mov
fwait
je
cmp
push
sbb
cld
int3
test
or
pop
clc
fcoml
jecxz
jbe
or
push
add
mov
inc
fs
jmp
cmpb
xchg
cmpb
outsb
xor
cmpb
or
adcl
data16
cmova
out
adc
jecxz
pusha
jmp
xor
out
mov
inc
rorl
sub
push
add
stos
jecxz
mov
push
out
insb
fdivl
adc
add
and
xor
and
inc
outsl
and
and
mov
shrb
out
ret
mov
or
push
mov
enter
push
pop
mov
pushf
push
mov
incb
xchg
mov
das
lds
dec
out
into
push
daa
dec
cwtl
cli
adc
popa
scas
icebp
dec
pop
pushl
sub
cld
xchg
cmp
or
mov
enter
scas
lea
cwtl
outsb
sbbl
ret
add
sbb
mov
adc
lcall
arpl
dec
js
add
push
jmp
mov
add
add
scas
dec
pop
stc
jns
or
in
fisttpl
cmp
push
add
mov
iret
push
lock
add
pop
mov
add
jbe
inc
sub
sub
xor
dec
stos
nop
xor
xor
and
xor
addb
and
outsb
lahf
fwait
and
mov
dec
je
ljmp
push
repz
in
aam
int
xchg
dec
loop
ljmp
xor
add
insb
mov
adc
shll
out
push
jns
sbb
jmp
dec
sub
push
popl
sub
std
push
fistpl
call
and
jmp
jecxz
std
loopne
add
add
push
or
rcrl
mov
jo
stos
mov
stos
or
jp
adc
mov
cmp
js
sarb
inc
inc
pushf
push
xor
in
xor
mov
les
inc
pop
push
mov
repz
adc
test
les
mov
jmp
mov
inc
and
stc
adc
loope
sbb
sbb
sub
outsl
mov
out
xchg
add
pop
or
sti
inc
inc
and
xor
hlt
xchg
or
popa
aas
adc
pushf
mov
inc
jp
xchg
ficompl
mov
xchg
add
push
imul
es
cmp
jmp
add
push
rep
pop
xor
movsb
xorl
push
jo
ljmp
test
xor
shrb
and
imul
adc
mov
nop
mov
std
lea
mov
scas
xor
sbb
inc
jnp
loop
inc
add
adc
add
jo
shrl
test
rclb
int
add
test
or
inc
or
xchg
roll
and
sub
mov
cmp
mov
insb
sub
popf
mov
push
and
lret
fs
or
add
mov
add
shr
xor
popf
push
inc
movb
inc
loopne
lea
add
daa
decw
call
mov
lret
mov
xor
push
sub
dec
sbb
fwait
leave
or
js
mov
repnz
jne
shll
loopne
mov
test
dec
mov
pushf
adcb
enter
sbb
add
and
pop
push
lret
adc
add
xor
jecxz
mov
xor
and
inc
nop
mov
not
ljmp
jecxz
addr16
ret
mov
outsl
sbb
loopne
dec
sub
mov
sbb
out
rclb
jns
mov
mov
add
jbe
push
mov
lahf
pop
mov
lahf
pop
lods
cmp
jl
inc
cmp
and
xor
xorl
adc
jecxz
or
pop
push
mov
aas
and
ja
jmp
pop
mov
shl
lock
add
pavgb
push
cmp
setg
jmp
fdivrp
icebp
inc
add
inc
add
cmp
setle
xchg
in
inc
es
dec
inc
push
imul
cld
mov
cld
adc
and
out
rolb
inc
dec
mov
pop
outsb
ret
in
sti
lods
cmp
inc
jle
cs
push
or
daa
pop
xchg
stos
jne
pop
data16
adc
scas
test
addb
in
push
and
ja
imul
and
sub
adcb
rcrb
jne
out
imulb
push
popa
add
inc
adc
andl
cmp
mov
loopne
adc
test
add
xor
jno
add
sbb
adc
sub
nop
fwait
ret
or
jns
push
sbb
xchg
aaa
lock
add
leave
leave
xchg
in
call
pushf
movb
xchg
lods
addb
push
jb
dec
fsts
push
and
mov
fyl2x
test
dec
mov
xor
dec
sub
aaa
jl
push
cs
push
xchg
sub
fldt
fcoml
xchg
pop
or
das
xchg
jne
add
popa
or
ja
xor
add
cmp
nop
hlt
lock
scas
pop
xor
pop
roll
insl
lcall
shll
push
lcall
insl
mov
sub
lods
or
fs
in
add
jmp
sbb
rorl
cmp
cmpsl
ss
lea
xor
xchg
xchg
movaps
dec
pop
sbbl
xchg
loopne
xor
xchg
mov
jle
mov
cli
add
rcr
fstpt
ret
push
call
adc
push
xor
or
push
sub
sub
addl
test
xor
add
pop
push
inc
or
or
sbb
dec
mov
ja
mov
out
sbb
and
pop
loop
fdivr
fistpl
cmp
jne
jge
or
int3
rcrb
mov
int
sub
mov
out
or
xchg
enter
inc
mov
fcomip
adc
shlb
dec
or
dec
addr16
mov
inc
pop
test
out
jo
jge
push
sbb
popf
lret
inc
lods
mov
lods
xchg
sarl
iret
cmp
and
fiaddl
inc
and
sub
fisttps
pop
lock
into
and
in
movsl
xchg
shrl
leave
push
punpcklbw
lock
pop
sub
inc
cmp
sbb
xchg
push
or
pop
lea
jg
cs
or
sbb
test
insb
bound
dec
dec
mov
insb
sub
cmpsl
sbb
dec
andb
rolb
mov
pop
mov
fld1
xchg
xchg
xor
pop
dec
xchg
fiadds
mov
pop
adc
cmp
nop
inc
add
push
xor
repnz
cli
testl
push
xchg
cmpsb
or
mov
iret
cmp
mov
push
loop
cs
insl
fs
pusha
pop
js
push
prefetcht0
jae
jnp
test
leave
imul
lock
push
in
nop
mov
pusha
push
out
sahf
fwait
mov
incw
faddp
js
ret
addl
fcoml
repnz
jo
aaa
popf
in
sub
xor
mov
or
arpl
cmpl
sub
xor
lret
dec
sub
pop
data16
shll
sub
jo
adc
lods
in
mov
in
mov
adc
inc
xchg
inc
nop
sub
test
sub
sub
dec
and
cs
push
aaa
push
ret
aas
adc
mov
add
aad
rorb
rolb
mov
je
shl
xlat
mov
jp
jmp
mov
push
cmp
popf
cmp
fidivl
fs
mov
fucomi
fsubrp
sub
pop
roll
es
push
adc
test
jg
add
xorb
adc
cmc
sysenter
dec
dec
lods
shlb
std
or
sbb
gs
add
call
cltd
push
pusha
lea
xchg
inc
pop
repnz
repnz
jae
pop
sub
jne
mov
pop
insb
test
sbb
push
or
cmc
repz
or
mov
jb
cmp
test
cmp
jne
inc
adc
mov
adc
dec
sbb
xor
dec
ss
dec
mov
jbe
sti
mov
aas
jmp
jge
jmp
lds
or
int3
and
ss
add
cmp
xchg
bound
and
fcoms
pop
cmp
jle
bswap
js
sbb
jmp
cmp
mov
in
fldcw
imul
add
push
or
pushf
ret
adc
pop
jmp
cs
es
call
inc
or
or
movsl
or
xor
sbb
mov
in
or
or
pop
add
mov
aas
xchg
mov
ss
xorl
ret
nopl
cmp
mov
dec
push
dec
pop
ficomps
and
adc
adc
fmuls
fbstp
sbb
push
orl
xor
or
fwait
sub
mov
nop
lret
adc
dec
jecxz
push
sub
sub
sub
push
mov
lret
nop
sub
mov
add
dec
movb
lea
pop
cmp
add
dec
sub
imull
or
pop
stos
adcb
call
lock
dec
mov
lret
fldt
or
inc
adc
pop
popf
jle
lock
adc
or
sbb
shr
popa
xchg
cltd
insl
pusha
or
sbb
mov
inc
xor
xor
inc
scas
mov
push
nop
pop
mov
pop
dec
push
jge
lret
stc
ror
inc
mov
inc
call
insl
aam
sub
xchg
je
adc
cwtl
xor
addr16
nop
aad
testb
jmp
lahf
and
jmp
sub
mov
test
add
addr16
incl
out
push
add
lea
scas
inc
jo
pop
rcrb
lock
mov
test
mov
sub
dec
xchg
push
inc
scas
fsubr
outsb
je
and
mov
ds
inc
lret
push
ds
push
lret
mov
push
mov
or
pushf
es
aam
jp
add
cmpl
and
hlt
sub
cmpsl
or
xor
adc
fs
cli
sub
sub
adc
outsb
stc
and
mov
into
inc
inc
lcall
push
mov
or
dec
shll
adc
push
in
aam
inc
pop
and
add
add
push
mov
daa
mov
and
int3
mov
jmp
sbb
paddusb
mov
sub
xchg
jae
neg
out
push
xchg
dec
xchg
cli
sbb
mov
decb
pop
insl
mov
or
lds
push
test
mov
push
pop
adc
pop
xor
lods
sbb
lea
stos
mov
mov
das
dec
aad
inc
xchg
data16
mov
data16
sub
cmp
movb
clc
cmpb
mov
cld
sbb
inc
popa
jne
loope
lea
adc
pushf
pushf
or
imul
cmp
addl
into
and
sbb
and
mov
xor
pop
sub
or
inc
jae
ret
jmp
adc
ja
cmc
adc
dec
jle
fs
add
into
or
jle
pop
push
push
mov
inc
push
push
xchg
mov
test
sub
andb
sbb
rcll
mov
cmpsb
and
rcrl
nop
dec
push
push
mov
addb
xchg
popa
sti
les
repnz
xchg
mov
jecxz
fiadds
adc
pop
scas
shl
add
mov
sbbb
repz
addr16
fisubs
cmp
dec
popa
loopne
ret
push
jnp
outsb
out
add
je
test
cmp
js
mov
lret
adc
inc
inc
aad
out
dec
insl
in
push
ja
lock
xor
push
mov
mov
xor
xchg
and
mov
push
scas
mov
scas
pop
mov
cmpl
adc
imul
xchg
or
fld
sub
sbb
daa
and
sbb
adc
mov
je
xor
sub
cmc
xchg
daa
add
mov
sub
popa
ret
sub
pusha
ret
je
es
lret
je
sub
mov
xor
rclb
imul
call
ret
das
fsubrp
or
xor
sub
mov
pusha
xor
incl
nop
aas
pop
data16
rcrb
xlat
enter
inc
je
in
cmp
aad
arpl
inc
mov
loopne
cmp
cmp
inc
test
mov
in
add
data16
sbb
arpl
pop
rolb
jmp
adc
mov
mov
sbb
nop
add
xor
mov
fstl
jmp
test
xchg
inc
call
les
outsb
call
add
push
inc
mov
and
outsb
push
mov
add
lods
push
pushl
pop
sub
hlt
add
inc
test
add
fcoms
jne
pop
test
jmp
xor
add
fwait
xlat
sbb
repz
loop
sub
and
gs
in
addr16
sbb
mov
push
adc
cmpsb
xor
cmpw
pop
pop
cmc
stos
out
pop
or
shll
dec
lds
subl
das
add
mov
insl
cwtl
jmp
or
insb
imul
pop
arpl
mov
push
cmp
test
mov
sbb
inc
pop
push
or
outsl
or
sahf
and
sbb
loope
sbb
adc
inc
sub
adc
shlb
nop
sub
mov
jb
push
cmp
js
sbb
call
rolb
fidivs
pop
inc
std
mov
int3
cmc
enter
and
mov
sub
popl
jbe
mov
stos
push
ret
cmp
jle
mov
and
test
inc
cmpsl
adc
jno
xchg
mov
sub
rolb
push
ret
adc
inc
xchg
js
popf
dec
jp
mov
push
pminsw
jo
jae
push
lods
add
push
xor
push
fcompl
inc
jmp
dec
es
add
add
and
lods
popa
inc
cli
repz
aaa
jecxz
cmp
frstor
in
jle
les
xlat
lock
dec
sub
in
js
inc
notb
rcll
into
jg
adc
add
or
dec
cld
adc
push
mov
pushf
push
lret
iret
pop
in
lods
bound
sbb
mov
mov
fbstp
cmp
push
or
push
push
in
popf
mov
pop
or
je
pushl
inc
clc
or
sbb
xor
cltd
dec
add
fwait
push
cmp
imul
push
xor
ret
inc
push
inc
sbb
inc
push
sub
pop
mov
adc
cmpsb
pop
mov
mov
adc
pop
repnz
sbb
add
neg
rorl
jno
fidivs
lret
data16
cmp
cmpsb
cld
mov
and
js
sbb
inc
xchg
cwtl
ret
nop
jb
insb
xor
sub
je
inc
xchg
xor
or
ss
ret
mov
sub
scas
dec
sub
int3
adc
roll
adc
xor
sti
fcmovb
aam
loopne
adc
pop
int3
mov
cwtl
movl
mov
stos
imul
or
call
shll
adc
push
cmp
mov
insl
shlb
loopne
push
sub
imul
xchg
cmp
in
movsb
push
or
mov
sub
dec
imul
or
and
and
adcb
dec
sbb
cmpb
cmpsb
adc
mov
pop
rclb
loopne
loopne
andb
shrb
loope
xchg
jle
add
outsb
mov
push
mov
rcrb
cmpsl
adc
cmp
loopne
scas
inc
push
jo
movlhps
clc
pop
add
int3
inc
mov
pusha
sub
fdivl
inc
stos
int
inc
call
mov
in
xor
movsb
lcall
push
loope
push
pop
push
or
sbb
dec
movswl
adc
adc
pop
js
mov
push
test
cltd
inc
lods
inc
pop
addl
and
adc
loopne
xchg
test
in
push
xchg
add
xor
inc
or
jmp
rcrb
push
push
xchg
and
or
lds
lock
test
jp
inc
add
jo
sarl
push
negb
in
jl
and
test
jl
inc
cmp
leave
insb
leave
xchg
mov
rclb
cmp
jmp
lock
xor
dec
fwait
repz
sti
pop
lock
int
scas
lock
bound
sbb
pop
pop
int3
xor
mov
rorb
hlt
je
and
lods
xchg
pop
stc
orb
mov
rolb
leave
rcrb
sub
popa
pop
frstor
push
sbb
pop
es
dec
adc
enter
lahf
pushf
and
add
mov
mov
or
test
and
xor
lods
and
outsb
popf
push
aas
pop
aaa
test
rorl
adc
ret
rorl
jb
add
xchg
or
in
and
outsl
sbb
test
outsb
aam
sarl
xor
repnz
jne
sbb
rcrl
aas
mov
inc
ds
add
inc
test
push
mov
pusha
in
inc
scas
mov
daa
pop
push
mov
push
shll
fsubr
inc
nop
inc
xor
clc
sbb
xor
mov
daa
imul
push
gs
ret
dec
add
jmp
jge
or
inc
or
mov
test
scas
sbb
dec
add
leave
add
shrl
and
add
inc
jl
in
jg
je
jp
pop
enter
or
sbb
rorb
pop
in
adcl
inc
inc
add
jbe
xor
or
fsubp
inc
arpl
in
pop
out
mov
inc
sbb
push
sbb
shlb
add
jg
jmp
mov
jecxz
aaa
pop
rcrb
adc
push
adc
pop
orl
call
or
fisttpl
es
adc
cs
xor
ja
bound
repz
mov
and
xchg
imul
and
dec
adcl
push
lahf
shrb
js
popw
dec
pop
add
xor
jb
test
xor
and
stos
mov
repnz
js
inc
jnp
pop
nopl
dec
sbb
jmp
cmpw
cmpsl
mov
jbe
pop
sub
aam
pop
push
sbb
cmpsl
insb
adc
insl
int
xor
popa
sbb
push
scas
daa
mov
in
aam
pop
daa
aad
movb
scas
xor
sbb
out
xchg
add
enter
pop
sahf
addb
cmpl
xor
inc
out
cld
mov
imul
bound
pop
push
shll
fisubrl
cmp
sbbl
xchg
test
sti
push
cmp
mov
bound
push
jb
icebp
inc
ja
jno
xchg
xchg
lret
cmp
mov
sub
sbb
imul
mov
ret
orb
cmp
and
dec
or
xor
mov
sub
and
sub
shlb
push
cmp
ret
addr16
lcall
les
leave
rclb
fucomp
inc
test
mov
fistpl
imul
push
rcrl
fidivl
pop
in
add
sbb
fld
sarl
jmp
fistpll
add
test
mov
and
aaa
pop
pop
stos
mov
mov
bnd
add
sbb
iret
push
hlt
jmp
lock
push
mov
sub
cmp
sub
lock
bound
pusha
and
cmp
cmp
pop
mov
test
stos
xor
jmp
push
mov
lea
push
add
cmp
or
lea
push
nop
jmp
rcrb
and
in
mov
scas
aam
xchg
inc
shlb
fildll
inc
mov
dec
sbb
insl
pop
ljmp
out
inc
mov
movsb
push
pop
test
push
cmpsl
int
inc
aaa
mov
mov
imul
or
mov
adc
test
je
dec
jne
pusha
loopne
jecxz,pt
es
add
xchg
push
adc
out
and
lahf
in
je
mov
mov
jne
popa
popa
mov
mov
pop
test
and
js
inc
mov
bound
dec
push
scas
test
jno
cmp
and
mov
jmp
dec
sub
mov
aaa
or
cmp
inc
pop
and
mov
pusha
cmp
ret
pop
jbe
ret
push
fisubs
xchg
or
mov
add
loopne
xchg
dec
xor
push
pop
push
mov
rolb
lea
cmp
pop
and
mov
les
bound
inc
mov
in
fadd
add
pop
cmc
push
or
cmp
ds
lea
xlat
or
add
dec
in
push
or
sub
mov
scas
test
repz
inc
inc
dec
mov
inc
addl
jo
out
mov
and
push
and
fstpl
mov
jg
dec
adc
dec
push
fcomps
push
dec
pop
imull
shl
sbb
cmc
imul
in
xor
dec
add
adc
and
mov
adc
mov
sub
sbb
xorb
enter
and
in
sub
xor
fcompl
jb
fs
mov
es
adc
in
loop
loopne
push
and
jns
push
lcall
mov
aaa
and
add
lea
push
push
jb
and
nop
xor
inc
mov
jo
movsb
arpl
push
xor
std
push
xor
add
icebp
mov
roll
and
loopne
pushf
inc
rorl
dec
add
adc
sub
cs
and
add
pop
pusha
push
cld
dec
movsb
push
or
fucomi
sbb
hlt
movsb
arpl
popa
or
pop
cmp
shlb
lea
js
and
adc
adc
add
adcb
xlat
insl
or
pusha
std
push
add
mov
mov
push
pop
sub
or
sbb
cmp
mov
ss
aas
add
fisttps
push
push
add
popa
mov
dec
out
nop
mov
xchg
cmp
dec
pop
addr16
mov
xchg
jae
adc
jle
fcomps
adc
mov
xor
pop
mov
lds
js
jge
sbb
movsb
subl
test
jne
or
pop
rcrb
inc
pushl
imull
in
pop
cli
add
pop
push
inc
or
add
adc
mov
stos
mov
lods
pop
outsl
mov
and
fisubs
lret
sbb
jno
int3
xor
push
cmp
dec
add
or
jnp
and
push
pop
adc
and
orb
cmp
cmp
add
xchg
adcb
nop
push
nop
pop
jb
dec
sbb
and
in
jle
pushf
setae
stos
add
lods
mov
sbb
inc
or
xor
lret
pop
imul
ret
mov
push
les
imul
sub
pop
test
scas
inc
mov
out
pop
add
scas
or
push
xchg
test
pop
les
mov
loope
xchg
out
ret
mov
jns
loop
jae
jns
push
mov
sub
es
mov
inc
sub
add
sbb
imul
test
mulb
push
xor
js
cmpb
or
lea
ret
adc
pop
pop
push
into
mov
jg
cmp
test
sub
adc
movsl
pop
and
in
int
xchg
jmp
inc
popa
dec
sub
sbb
push
idivl
adcb
imul
and
mov
jnp
add
add
push
dec
loopne
scas
and
cmpl
js
sub
pop
xchg
inc
jmp
or
rclb
push
xor
data16
jne
lods
subb
cmp
push
out
xor
adc
inc
adcl
pop
adc
ficompl
test
aad
andl
mov
pop
inc
inc
adc
adc
hlt
orb
sarl
mov
xor
jae
inc
or
rcll
mov
jmp
test
push
pusha
add
addl
insb
add
push
sbb
adc
lods
dec
add
jae,pn
fists
xor
cmp
sub
shrb
stc
mov
adc
pop
jmp
add
inc
loop
mov
subb
out
int3
inc
loopne
and
xchg
xor
mov
xlat
add
add
clc
sub
fadd
xor
add
int3
add
push
loopne
aaa
pop
iret
add
jle
pop
dec
push
sbb
cmp
adc
jmp
add
or
push
iret
adc
cmpsb
movsl
cmp
sub
xor
or
xor
mov
sti
dec
mov
lods
lahf
cmc
and
push
add
and
cmp
pop
adc
bnd
push
adc
sbb
mov
mov
insb
loopne
jne
push
add
jns
lds
or
xchg
cmp
inc
aam
adc
inc
inc
andl
rorb
pop
jl
aaa
adcl
jecxz
arpl
cltd
push
icebp
and
mov
lds
push
out
jecxz
jns
inc
push
div
xor
orl
das
out
jns
loop
pop
dec
arpl
je
mov
mov
push
push
popa
mull
cmp
cld
mov
mov
sbb
sbbl
clc
mov
jbe
ja
push
add
jge
dec
inc
rclb
loopne
test
out
sub
cmp
je
xchg
sbb
pop
rolb
insb
inc
add
inc
repnz
ss
es
xlat
push
and
daa
in
inc
jmp
lret
test
cmp
out
cltd
lods
mov
add
cmovo
mov
gs
xchg
dec
fdivl
or
daa
jg
or
dec
mov
rcr
cmp
cmpsl
subb
mov
nop
cwtl
cmp
jbe
lods
mov
js
push
ret
sub
inc
sub
das
popa
sarl
cmp
lret
ret
cltd
dec
add
fnop
push
adc
adc
dec
jb
cmp
flds
adc
push
mov
jge
push
pop
pushf
jmp
sub
subb
and
jmp
cmp
addps
jo
sbb
les
jno
mov
inc
xchg
or
test
ljmp
xchg
mov
dec
mov
testb
push
ret
mov
jb
push
dec
or
jo
pop
pop
pop
or
or
jge
xor
mov
insb
push
ja
xchg
ret
ret
jge
adc
aaa
jne
aaa
nop
sbb
dec
loopne
mov
mov
in
push
pop
jp
nop
sahf
mov
orb
insb
or
inc
adc
repz
lods
stos
test
lea
and
pop
and
ds
adc
test
fbld
or
sub
or
cld
aaa
pop
add
sub
inc
add
jno
sbbb
add
mov
decl
rolb
scas
addl
movsb
push
dec
jb
sbb
jae
das
jne
mov
ja
les
add
or
sti
adc
push
hlt
mov
or
push
pop
mov
pop
mov
xor
xchg
aad
imul
cmpsl
adcl
mov
mov
or
cltd
adcl
inc
jnp
jle
adc
scas
add
sarb
or
push
scas
push
or
adc
cltd
shll
or
mov
adc
aam
lahf
mov
push
shlb
test
cvttps2pi
lret
xor
sub
iret
xchg
xor
mov
or
jl
cmp
lock
icebp
mov
adcb
cltd
dec
adc
mov
test
jb
aas
xor
xchg
sub
push
andb
lock
out
mov
stos
loopne
add
js
xor
cmp
or
adc
push
jno
xlat
cwtl
jo
jns
xchg
jo
xor
filds
pop
dec
arpl
gs
cmp
flds
movsb
xchg
dec
mov
bound
cmp
jle
lock
aad
or
je
nop
inc
dec
out
xor
jb
xor
fcoms
inc
lea
das
mov
faddl
cmpb
shlb
ret
imul
xchg
pop
pusha
or
and
js
sbb
fstl
add
push
je
mov
test
inc
cmp
or
jmp
push
xor
jae
notb
pop
adc
pop
int3
fstl
or
nop
fisubs
adcl
add
push
inc
loop
movsb
cmp
inc
adc
outsw
test
xor
cmp
mov
sbb
je
xchg
dec
sbb
jne
pop
or
daa
pop
in
xchg
push
add
sti
pop
push
jne
arpl
in
xorb
mov
sub
add
cltd
sbbb
pop
jl
sub
imul
sbbb
or
je
push
psrlw
imul
adc
fadds
xchg
into
xchg
and
jnp
les
xchg
or
dec
mov
xor
cmp
inc
dec
jge
inc
stos
add
add
xchg
in
jge
inc
in
hlt
add
loop
lock
and
jl
out
and
add
push
xlat
push
push
and
bound
and
jle
lea
call
loop
lods
or
aaa
sahf
xor
push
inc
mov
pop
cwtl
cmp
pushw
xchg
jmp
add
je
popa
addl
mov
pop
repnz
inc
js
daa
adc
mov
das
mov
and
or
jecxz
movsb
sub
or
adc
jmp
xor
xchg
out
adc
jne
adc
inc
pop
sbb
rclb
addb
outsb
adc
mov
or
scas
in
push
aas
lcall
pop
sub
and
mov
test
sub
insb
inc
jmp
incb
dec
scas
sub
sub
popf
rolb
cmp
insl
adc
sub
xor
stos
sub
and
clc
lock
or
in
or
mov
xor
pop
inc
sahf
out
dec
cmp
or
fmul
jl
out
fmul
aam
adc
mov
push
inc
fmull
aam
cwtl
cmpb
sbb
les
mov
cmp
mov
das
sbb
mov
cmc
sub
imul
add
or
push
out
ret
inc
fists
add
sbb
push
mov
cmp
cltd
cmova
mov
cmp
sub
add
fisttpl
pop
imulb
jmp
pop
push
mov
sarl
add
xchg
dec
mov
dec
mov
xor
repnz
inc
movsb
movsb
cs
sti
cmovg
dec
or
mov
sub
sub
push
scas
mov
dec
mov
mov
pop
inc
and
jle
add
sarb
dec
xchg
cmpsl
sbb
or
loopne
adc
outsl
das
das
or
push
adc
in
mov
jle
adc
repz
dec
add
add
push
inc
sub
mov
ret
or
into
adc
fmul
adc
jns
xchg
mov
das
or
push
mov
and
into
adc
into
inc
dec
fwait
add
jno
mov
jge
cmp
rorb
movsl
pop
sub
jle
sbb
sbb
in
dec
fdiv
ror
repnz
int3
or
dec
fadds
fdivrs
enter
aam
fisubs
and
aam
les
push
flds
sbb
cs
dec
xchg
pop
test
loopne
das
mov
add
add
ja
enter
aam
push
mov
in
or
idivb
or
dec
jle
ret
mov
pusha
cmpsb
sub
ret
push
cmpsl
dec
mov
adc
dec
mov
sub
add
repz
add
cwtl
mov
sbb
push
dec
cltd
mov
hlt
push
cmp
add
sbb
mov
mov
inc
pushf
cwtl
cmpl
or
mov
cmp
push
dec
mov
aam
imul
addl
push
or
fmul
xlat
push
cltd
sub
push
push
mov
sbb
xlat
mov
jmp
or
aaa
inc
pop
icebp
push
ret
inc
and
adc
mov
jle
inc
dec
mov
or
mov
das
sbb
sbb
cmp
adc
movsb
add
xchg
sub
test
addr16
es
fmull
mov
dec
sahf
hlt
add
mov
push
or
dec
les
xchg
and
mov
push
mov
mov
mov
add
enter
sbb
add
in
or
fildl
push
adc
pop
add
leave
lret
add
inc
or
sub
xchg
pop
les
jne
insb
dec
dec
pop
clc
xacquire
gs
or
inc
addr16
cmp
mov
xchg
xor
mov
fmuls
aam
inc
dec
or
lret
mov
clc
or
lea
mov
insb
insl
pusha
cmp
push
jo
in
xchg
in
xchg
les
mov
push
add
sub
inc
add
xor
jp
sbb
cmp
into
add
test
aas
xchg
adc
pop
test
add
or
push
push
in
adc
fisttpl
stos
adc
cmc
or
cld
sti
mov
mull
add
int3
dec
or
fcompl
adc
mov
mov
mov
inc
xchg
in
pop
mov
test
aam
cmp
and
push
or
or
lea
arpl
xchg
cmp
xchg
cvtps2pi
jbe
sbb
add
xor
pop
add
cmp
inc
inc
mov
addl
enter
or
sbb
push
test
inc
pusha
test
xor
lcall
sub
or
adc
cmp
add
sbb
nop
ja
sbb
pop
dec
mov
jp
add
inc
jl
add
inc
clc
fs
jmp
jecxz
inc
dec
movsl
adc
push
pop
pop
or
or
outsb
adc
jmp
inc
cwtl
adcl
push
sub
lcall
inc
inc
adc
mov
push
jno
and
stos
sub
cmp
popa
cmp
xchg
adc
aam
ja
ret
iret
or
hlt
fidivl
in
dec
pusha
pop
fisttps
inc
cmp
mov
addr16
inc
lret
pop
ss
mov
aas
ret
cmp
imul
inc
jmp
dec
sbb
sub
xor
mov
scas
and
loope
cmc
jbe
inc
mov
pusha
adc
mov
inc
je
mov
fucomi
movups
xchg
adc
bound
dec
aam
inc
pop
lcall
stc
push
add
xchg
pop
rclb
int3
fnstenv
jp
pop
xlat
adc
imul
sub
inc
enter
clc
mov
push
inc
xchg
ja
mov
roll
xchg
pusha
mov
subb
adc
jne
sub
pop
pop
mov
repz
lock
sbb
inc
xchg
lods
or
and
ss
inc
mov
inc
add
icebp
cltd
xchg
mov
adc
adc
adc
add
cmpl
mov
stos
jns
adc
out
jbe
sbbl
add
dec
loop
dec
repnz
or
add
sbb
loop
mov
sbb
add
sub
add
imul
jl
mov
push
push
and
mov
sbb
jmp
cmp
adc
push
adc
inc
test
add
add
dec
sbb
add
xchg
mov
daa
dec
pop
or
subps
dec
call
mov
push
clc
cmp
jle
pop
cmp
sub
hlt
in
mov
push
push
adc
sbb
push
pop
std
test
enter
cmp
imul
fwait
gs
clc
fs
cmpl
sbb
add
add
rcll
xchg
jle
dec
sahf
leave
je
pop
sbb
sub
nop
sahf
sbb
jno
sbb
std
sub
adc
push
clc
mov
xor
test
stos
ja
addl
out
in
xor
jnp
xor
les
add
inc
inc
push
dec
inc
mov
adc
mov
loopne
adc
xchg
lock
lock
sbb
add
leave
sbb
iret
inc
xor
sbb
and
mov
push
pop
or
add
popf
push
ljmp
dec
add
mov
xorb
pop
jne
push
add
jmp
cmp
or
add
push
aas
inc
add
icebp
jbe
ret
sbb
or
scas
sbb
or
lcall
movsl
mov
test
sbb
std
and
mov
sub
adcb
cld
in
cmc
dec
add
adc
hlt
nop
flds
dec
arpl
jge
mov
dec
sub
push
out
or
pop
pop
xchg
mov
cmpsl
icebp
inc
movswl
jmp
xchg
adc
add
jmp
negl
mov
lret
insb
pop
adc
cmp
xor
arpl
out
lret
ljmp
sbb
push
fcoms
mov
mov
add
in
insb
and
mov
fsubs
es
and
push
fmull
cmp
add
adc
scas
loop
and
jle
loope
mov
aad
js
push
fdivr
shlb
or
pushf
mov
pop
push
pushf
mov
bound
xor
movsb
lods
test
cmp
ja
je
pop
jne
pop
add
pop
test
xchg
pushf
add
ror
mov
mov
shlb
andl
mov
ja
ds
xor
push
push
pop
pop
and
int
adc
fprem1
inc
ljmp
dec
insb
and
mov
dec
push
das
add
jae
bts
loope
sbb
fcompl
xchg
and
andb
gs
pop
ja
xchg
inc
stos
dec
or
dec
mov
insb
mov
sbb
add
jne
mov
pop
jmp
out
les
andb
mov
or
dec
or
lods
popf
nop
daa
pop
in
adc
or
push
daa
cmpsb
xor
and
scas
pop
push
mov
in
inc
adc
sarb
jmp
jp
push
and
aas
leave
mov
jne
mov
pop
sbb
nop
sbb
shlb
inc
pusha
addb
rclb
sti
fidivl
sub
adc
fnstcw
add
mov
jmp
mov
push
push
cmp
daa
dec
inc
mov
cmpl
sub
adc
inc
pushf
outsl
mov
cmp
xchg
mov
xchg
ret
pop
add
mov
insl
loop
xor
fs
dec
mov
out
or
enter
or
insl
in
jle
stos
jmp
enter
jge
shlb
or
add
enter
push
loope
sbb
pop
mov
movsb
outsb
fiaddl
sbb
pop
lret
js
cmp
jo,pn
adc
xchg
sbbb
test
push
jno
jo
in
jne
sarb
xchg
pop
inc
outsl
mov
jne
into
inc
dec
push
pop
inc
xor
pushaw
cmp
jmp
sub
inc
jae
sub
push
adc
cltd
loopne
or
xchg
sub
jmp
aam
jmp
jae
pop
pop
iret
adc
fs
fnstenv
and
sbb
add
das
cmpsl
add
mov
dec
mov
jo
lds
pop
add
mov
mov
pop
pop
and
mov
pusha
nop
mov
dec
sub
aaa
aam
insb
add
jno
or
inc
out
or
mov
dec
mov
sbb
mov
hlt
lea
xor
push
sbb
push
outsb
test
fimuls
je
aam
loope
hlt
out
mov
add
add
sbb
jmp
inc
cmp
push
jmp
sbb
and
xchg
xor
add
test
cmp
and
or
adc
rorb
clc
lret
mov
pushf
roll
test
lcall
add
push
add
xor
add
adc
sbb
rcll
pop
test
pop
push
adc
shrb
loope
imul
lock
loopne
pop
and
and
cmp
sub
insl
jnp
mov
push
jne
push
repz
pop
and
in
in
inc
adc
add
fcomp
push
push
nop
mov
dec
clc
loope
fs
leave
add
add
loopne
dec
push
mov
enter
movsb
sbb
mov
pop
adc
add
mov
add
mov
adc
scas
sub
outsb
inc
out
jo
add
je
shlb
mov
ret
mov
sbb
mov
cli
and
loopne
outsb
xor
inc
pushf
add
jne
in
jns
and
arpl
dec
xlat
ds
xchg
out
jl
daa
movb
cmp
jle
cmc
mov
out
shr
push
cmp
scas
adc
loopne
or
xlat
cmp
shlb
cmp
jns
jmp
sbb
add
dec
and
or
or
shr
mov
jo
xor
lcall
mov
sbb
outsl
adc
fcomps
xchg
xor
mov
mov
movb
xchg
pop
adc
mov
mov
es
test
lcall
cmp
push
mov
mov
cwtl
in
out
xor
cmpsb
lret
jmp
mov
out
rcrl
ljmp
fisttpll
xor
cmp
cmp
ss
xor
cmp
xor
rolb
push
cli
mov
inc
mov
enter
lahf
lcall
push
adcb
test
decl
mov
js
addl
ret
dec
add
out
addl
incl
pop
dec
insb
daa
sahf
and
jg
in
cwtl
or
sub
jo
mov
add
les
pop
add
adc
shrl
sbb
and
push
or
mov
mov
xor
xorl
fs
xchg
xlat
fsubr
xor
mov
call
aam
or
inc
pop
adc
inc
insb
out
or
ret
adc
dec
outsb
or
push
sub
rorl
jmp
cmc
rolb
ja
ret
es
movsl
imul
and
mov
inc
scas
adcb
out
and
add
and
adc
in
cltd
cmp
mov
jo
hlt
jmp
xlat
rolb
imul
inc
jge
sub
mov
sub
cmp
add
dec
jae
jge
ret
cmp
ret
mov
rorb
mov
add
xchg
and
push
inc
and
je
xor
push
lret
xchg
mov
inc
mov
add
push
fmull
add
pop
inc
or
pop
lods
xor
fnop
sbb
inc
pop
sub
xchg
data16
inc
jo
fidivrs
dec
jne
mov
xor
pop
in
insb
or
or
push
bound
jge
jmp
cltd
int
pusha
pop
mov
mov
dec
in
popf
dec
pop
mov
sub
adc
jmp
adcb
dec
jp
push
into
push
add
fincstp
cmp
paddusb
sbb
nop
xchg
imul
push
cmp
sub
sbb
cmpsl
xor
mov
les
ret
adc
test
rclb
inc
daa
lock
jmp
or
inc
dec
and
movl
sbb
inc
mov
or
rolb
add
mov
and
ss
dec
in
jbe
lock
jmp
xor
sbb
stc
push
adc
mov
dec
inc
and
adc
cmp
inc
dec
stc
mov
push
sbb
aas
push
lds
pop
fsubp
jecxz
or
sbb
leave
repnz
jbe
or
or
sbb
dec
adc
aas
or
adc
adc
push
mov
sbb
loopne
out
jno
arpl
js
jmp
mov
sbb
or
mov
lods
push
mov
sub
add
fwait
adc
inc
stc
adc
push
inc
fnstenv
ja
mov
sbb
sub
pop
cmp
es
push
inc
mov
and
or
sbb
sbb
mov
pop
dec
and
sbb
sub
pop
cwtl
adc
inc
adcb
push
icebp
or
push
insb
cmpsl
push
jl
and
sub
xor
jg
xlat
movl
testb
and
test
inc
add
xchg
adc
add
adc
aaa
fldcw
xor
cmp
jns
inc
or
fildl
imul
sbb
add
cmp
xor
push
cmp
rolb
add
aaa
mov
mov
sub
aas
push
jae
movups
ja
add
inc
fsubs
insb
jns
xchg
jg
fwait
cmp
pop
jg
pop
jg
cmp
add
xor
cmp
fimuls
punpcklwd
sti
inc
pusha
mov
jmp
cmc
or
jne
movsl
repnz
or
push
add
or
dec
pop
dec
enter
test
cmpsb
ret
add
loope
and
mov
pop
push
and
mov
shrb
pop
add
enter
lods
pop
mov
pop
ret
clc
adc
xor
lahf
jno
xor
fstpl
sub
fbstp
jo
adc
sbb
or
or
mov
neg
rcrl
dec
in
divb
and
push
pusha
stos
mov
and
sub
push
daa
mov
sbb
jne
movl
cmp
es
jno
ret
adc
fcoms
mov
dec
repnz
cmpsl
rcl
sub
das
repz
push
cmp
aas
mov
push
in
cmp
icebp
inc
mov
pop
mov
adc
sarb
mov
push
or
sbbb
xor
cmp
lock
mov
pop
inc
sbb
lock
rorb
mov
clc
lock
mov
lea
filds
jae
inc
mov
or
and
jae
xchg
add
inc
jecxz
cmp
shll
and
insl
lods
xchg
pop
pop
jle
or
jno
mov
add
fs
and
fsubr
push
call
xorl
jns
jns
or
or
pop
xor
test
in
xchg
pop
sbb
negl
push
popf
sbbb
cld
sbb
fiaddl
inc
movsl
mov
dec
adc
jnp
push
and
fbld
add
inc
sub
iret
add
adcl
sub
xor
test
and
xchg
inc
adc
adc
jl
arpl
je
lds
cmp
dec
pop
sahf
mov
mov
adc
dec
mov
fadd
and
and
pusha
test
inc
mov
inc
popa
aas
sbb
add
push
push
test
inc
add
xor
roll
inc
push
cmp
mov
or
jmp
push
mov
andl
popa
andl
cmp
cwtl
and
mov
ss
or
inc
mov
inc
ret
ja
inc
rorb
mov
dec
repnz
xor
add
sbb
ss
flds
outsl
dec
sbbb
cltd
push
add
xor
push
inc
adc
popa
mov
mov
int
cmp
jne
jns
or
or
adc
shrb
sahf
mov
adc
or
sbb
jo
jne
sahf
lret
push
call
pop
lock
loopne
push
sbbb
out
sbb
shlw
out
cmp
xor
dec
add
cmp
xchg
fadd
xor
in
cmp
dec
loope
adc
or
hlt
mov
add
mov
adc
pop
xchg
inc
add
fwait
jg
xor
mov
imul
fs
sbb
mov
sub
sbbb
or
add
bound
jb
or
add
mov
enter
es
fistps
jb
dec
xchg
clc
mov
inc
popf
or
aas
and
jns
clc
sar
jns
adc
xchg
pusha
and
push
mov
lea
daa
pop
negb
incb
jne
add
hlt
add
or
iret
popf
sbb
cmp
push
push
push
push
and
bound
outsl
pop
enter
and
dec
lret
push
arpl
dec
std
dec
push
pop
push
outsl
imul
cwtl
sbb
or
sbb
adc
or
sbb
popa
jae
pop
mov
fs
call
mov
and
inc
in
lret
jno
je
and
xchg
rclb
or
nop
push
pop
dec
test
pop
and
xor
mov
push
js
and
or
stc
mov
push
sub
setbe
adc
adc
in
xor
lock
dec
push
hlt
push
or
add
dec
rclb
dec
mov
dec
mov
and
cmp
les
fnstsw
dec
clc
lret
inc
jmp
push
inc
or
sarb
and
xchg
cmpsb
dec
imul
out
jmp
mov
add
cmp
and
cs
adc
loopne
fwait
divl
fsubrp
push
lods
push
adc
sbb
jb
jecxz
and
in
test
sub
popf
je
mov
xchg
xor
adc
pop
cmp
add
lods
dec
push
pop
or
sbb
enter
sbb
fs
adc
addb
jmp
pop
jo
push
subl
fcompl
enterw
sub
or
or
sahf
push
shrb
inc
xor
mov
push
das
sub
mov
cmp
and
add
daa
sarl
add
fsubs
mov
das
adc
fs
add
mov
cmp
aas
push
cmp
add
inc
cmp
xchg
xchg
pop
mov
dec
dec
push
sbb
xchg
xor
popa
addb
insl
xchg
cltd
xor
sub
out
int3
xor
icebp
jle
movsb
adcl
jecxz
fcoms
loopne
xchg
push
push
push
xchg
mov
cmp
push
fldt
js
inc
add
inc
dec
fcomip
enter
mov
dec
inc
les
imul
int
aaa
inc
jno
popa
adc
rcrb
adc
sub
adc
adc
mov
mov
lea
push
and
dec
xchg
jae
bound
lods
rcr
aam
push
pop
inc
sub
mov
imul
or
cmp
inc
imul
inc
xchg
rcrl
cmp
add
int
rclb
cmp
and
sub
lods
bound
orl
mov
and
popf
mov
sbb
xor
mov
in
push
sahf
push
push
packssdw
in
repz
es
sti
cmp
sbb
mov
jecxz
rorl
sub
xor
jae
inc
loope
cmp
add
jp
jbe
jne
mov
mov
push
sub
adc
jne
pop
add
push
push
das
loope
imul
and
sub
and
rorb
sub
push
and
push
inc
sbb
or
test
loope
cmpsl
add
jae
push
pop
adc
adc
jge
mov
decl
cmp
daa
inc
jl
and
ja
ds
push
in
pop
gs
inc
cs
push
push
mov
cmpsb
adc
cmp
push
outsb
xchg
mov
pop
sbbl
pusha
jae
jp
stos
movsl
rolb
cltd
add
push
cmp
or
addl
and
pop
pop
push
pusha
rol
inc
cmpsb
jl
in
or
xchg
minps
jbe
add
idivb
mov
sbb
retw
dec
jecxz
test
pusha
ljmp
inc
inc
daa
sarb
jae
jb
sbb
push
js
mov
fcoml
dec
jg
push
int
mov
adc
insb
insb
test
mov
pop
enter
jo
fs
or
add
and
xchg
sub
lret
movsb
jge
inc
enter
pop
in
arpl
ret
out
cmp
pop
cld
xor
popa
test
cmp
or
xor
mov
sub
cwtl
rcll
mov
arpl
movsl
leave
gs
or
daa
dec
sbb
clc
jne
dec
fs
cmpsl
insb
and
clc
loope
adc
or
add
rolb
fimull
jno
mov
js
add
clc
push
std
adc
sbb
in
scas
jg
push
pusha
rorb
dec
adc
pop
notl
mov
and
pop
jge
inc
and
push
xor
addr16
lock
ss
ss
jno
add
es
pop
lahf
add
jg
dec
xor
adc
and
sbb
scas
and
xchg
xlat
sbb
push
xchg
rcll
mov
or
xchg
xchg
push
and
xor
addps
and
lea
aad
sub
dec
aad
insb
cs
and
mov
mov
das
xor
add
xor
mov
cmp
add
sub
icebp
sub
cmp
mov
dec
lcall
int
adc
lret
mov
popa
adc
inc
pop
movsb
and
fadds
fadds
loop
insl
lret
lock
adc
and
mov
fmull
add
lret
and
dec
add
sub
aaa
mov
xlat
data16
imul
sbb
push
mov
push
inc
sbb
fnstsw
push
push
push
les
and
or
dec
clc
or
or
add
mov
pop
ss
sti
mov
inc
push
jl
or
mov
pop
xor
sub
in
enter
xor
add
repnz
jb
xor
inc
mov
mov
inc
inc
mov
lret
and
jg
push
movsl
je
stos
call
sub
xor
inc
dec
adc
mov
sub
test
les
xor
jle
cmpl
xchg
cmp
in
das
pusha
jns
xor
outsb
pop
xor
lods
mov
dec
xchg
fdivs
sbb
push
push
jb
pop
push
pop
pop
pusha
flds
rcrl
out
test
adc
js
stos
inc
insl
mov
add
add
cwtl
inc
add
popf
hlt
mov
frstor
mov
pop
idivb
fidivs
cmp
lahf
sub
fldenv
cwtl
dec
fwait
sub
or
sbb
cmc
bound
dec
aaa
xor
mov
ret
fsts
add
imul
mov
push
cli
leave
ljmp
enter
mov
cmpb
pushf
sub
jno
add
jno
call
clc
add
daa
test
sub
sub
lret
pop
dec
fmulp
out
mov
or
das
shll
pop
sub
inc
add
and
add
sub
fwait
inc
add
sbb
or
idiv
xchg
nop
ja
adc
mov
dec
add
ja
loope
and
inc
xor
push
xor
xchg
push
or
icebp
or
xchg
cld
mov
mov
daa
mov
cmpsb
jnp
and
fbld
adc
inc
inc
cmp
repnz
push
aas
repnz
inc
loopne
inc
inc
jne
mov
arpl
sbb
scas
adc
xchg
mov
jmp
add
inc
js
hlt
and
xlat
jne
jmp
sub
add
cmp
cmpsb
pop
cld
push
and
sub
incl
inc
mov
aas
add
shrb
iret
mov
add
or
insl
in
and
add
jg
adc
out
push
push
lahf
xchg
jge
inc
or
and
cmp
jnp
addl
mov
mov
cmp
push
push
or
pop
dec
pusha
fisttpll
jno
push
cmp
inc
mov
sub
pop
xlat
inc
adc
mov
push
sub
mov
push
dec
adc
push
and
pop
shrb
pusha
mov
icebp
adcl
push
test
pop
pop
pop
sub
test
data16
mov
hlt
dec
std
stos
xchg
xor
and
push
cmp
cmp
test
cmp
mov
das
push
movsb
loopne
in
sub
mov
nop
add
insb
fstps
scas
push
inc
sbb
sub
xor
xorb
inc
xchg
mov
cmp
es
push
add
sub
jbe
lcall
push
push
mov
pop
repz
rcl
mov
leave
xor
sub
pushf
clc
sahf
or
or
adc
sub
xchg
addr16
test
lods
and
in
mov
xchg
addr16
sahf
mov
mov
push
mov
inc
add
adc
push
addr16
sub
xchg
dec
dec
push
sbb
aas
mov
dec
dec
inc
add
insl
sar
test
jmp
pop
push
gs
mov
pop
pop
bound
inc
frstor
shlb
jne
das
push
dec
popa
add
lret
or
push
insl
jo
scas
xchg
mov
mov
inc
adc
mov
in
inc
out
insl
jo
aam
inc
xchg
dec
jae
pop
test
mov
jg
cmpsl
jo
jno
cmc
sbb
rol
lea
and
push
in
rolb
sahf
pusha
push
mov
sbb
mov
lods
xor
mov
sbb
inc
out
cwtl
in
jl
js
in
pushf
or
mov
mov
test
dec
mov
adc
adc
test
mov
jae
or
dec
cltd
andb
movsb
push
add
cmp
or
and
cmp
pusha
arpl
sub
sub
pop
sti
push
aad
mov
dec
fwait
xchg
mov
sbbb
sbb
or
lcall
jne
dec
inc
inc
shll
mov
jns
movsb
add
loop
push
push
mov
ds
mov
les
sbb
inc
xor
inc
push
sarl
stos
lcall
clc
push
mov
push
int3
sbb
and
dec
sub
inc
or
pop
fwait
mov
cmp
cmp
adc
bound
jno
jnp
inc
dec
stc
fadds
repz
and
cbtw
mov
xchg
mov
subl
sti
loopne
aam
xchg
mov
inc
adcl
push
xlat
add
hlt
dec
inc
out
add
pusha
divl
inc
xlat
insb
jmp
add
or
pop
es
sub
cs
scas
xlat
jne
ja
outsb
pop
push
imul
enter
arpl
xor
pop
js
mov
fbstp
adc
push
mov
and
dec
leave
test
bnd
push
dec
pop
clc
and
setae
scas
sbb
xor
test
jl
pusha
inc
cld
pop
cld
dec
and
in
dec
sbb
cmp
add
xor
add
inc
repnz
and
lock
inc
add
push
inc
rolb
jle
pop
in
adc
inc
idiv
out
cmp
ds
or
insb
push
inc
push
push
adc
sbb
fsubrl
and
pop
xor
cwtl
aam
sahf
arpl
outsb
push
add
push
add
xchg
cmp
pop
or
cmp
sbb
insb
mov
aam
mov
push
mov
ds
scas
js
inc
pushf
push
inc
cmp
pop
and
inc
add
or
sahf
or
insl
in
jae
sub
and
pop
xor
pusha
mov
xchg
mov
pop
in
ds
sub
cmp
add
pushw
pop
loopne
or
sahf
sub
les
jecxz
nop
inc
or
int
push
ds
movb
or
outsl
aaa
add
mov
dec
inc
or
and
dec
pop
inc
sbb
add
fs
js
jl
add
inc
loop
lods
or
push
or
out
push
sub
rclb
popf
pop
inc
add
insb
push
add
dec
in
in
sbb
mov
notl
push
lcall
mov
mov
hlt
or
and
xor
shrl
sub
xor
imul
inc
dec
or
rorb
repz
jp
inc
sbb
cmp
nop
pop
mov
xchg
je
xorl
xor
jb
ds
aaa
push
popa
xchg
int
xor
inc
lcall
sbb
pop
mov
cmpsl
and
add
inc
push
inc
mov
push
lahf
leave
inc
and
leave
and
mov
pop
sub
in
inc
xor
fwait
insb
fdivrl
push
lea
inc
inc
clc
add
mov
sub
rcll
mov
repnz
loopne
sbb
xchg
pop
xchg
shlb
mov
mov
dec
mov
push
int3
add
and
adc
adc
fdivrs
inc
jg
in
lods
ret
lock
jb
and
loope
aas
push
popa
arpl
inc
xor
popa
arpl
pop
inc
data16
insb
sub
nop
aas
pop
add
push
icebp
pusha
cmova
cmpl
xor
jmp
and
mov
xchg
cmp
int3
sub
and
inc
stos
shll
shrl
loopne
test
xor
das
cmp
mov
pusha
xlat
xor
mov
je
rorl
cmpsl
cmp
fidivs
mov
xor
pop
pop
xchg
mov
adc
andb
push
std
cwtl
cmp
jne
jle
rorl
jle
stc
xor
or
push
inc
mov
push
mov
movsb
add
aas
jle
loopne
insb
test
mov
jb
out
or
dec
dec
adc
inc
scas
mov
loopne
lcall
push
jmp
jo
test
adc
sub
and
das
sub
pop
in
loopne
xchg
ljmp
and
dec
jecxz
shrb
push
and
sbb
lret
fs
sub
cmp
stos
sbb
dec
add
or
inc
push
lea
push
in
push
mov
imul
cltd
jbe
lcall
pop
es
push
sub
sub
insb
and
orb
sbb
mov
inc
add
mov
add
mov
pusha
pop
push
mov
cwtl
add
xchg
insb
or
pop
popl
xor
mov
xchg
mov
jb
bound
sbb
clc
jmp
fxch
push
sub
mov
mov
cmp
ja
cwtl
sbb
push
xor
cmpsl
jae
add
and
outsl
inc
dec
or
cmp
mov
cmp
sub
or
aaa
xchg
jmp
push
mov
and
rcrl
outsb
push
dec
scas
fmull
xchg
cs
fbstp
pop
mov
addl
inc
adc
stos
or
out
and
and
push
addb
pop
imul
push
or
inc
test
mov
not
loopne
adc
jne
test
or
pop
out
adc
and
pop
les
in
inc
pop
cmp
cmp
je
lds
add
push
cmc
or
enter
rol
js
sbb
shrb
and
sbb
ffreep
xlat
imul
std
aam
cmp
mov
jecxz
or
xor
fstpl
dec
add
pop
push
cmp
add
popa
cmp
mov
js
cmp
pushf
dec
lods
xor
cmp
xlat
xor
enter
iret
js
cmp
adc
dec
inc
cmp
je
test
jb
jg
nop
or
aas
jl
mov
sbbl
inc
jne
nop
dec
sub
mov
sub
test
in
adc
mov
pop
fstpt
aas
sub
adc
rcll
sub
inc
sbbb
roll
rorl
mov
xor
push
arpl
out
cmp
imul
push
add
inc
fucomip
jge
fdivrs
adc
add
and
dec
add
add
add
test
orl
mov
sbb
mov
push
pop
jmp
sub
iret
ret
sbb
push
add
xor
pop
or
add
dec
cmc
cmpsb
in
or
inc
pusha
and
adcl
aaa
xchg
out
xchg
cltd
sarb
movsb
mov
pop
dec
je
xlat
repz
adc
test
dec
cmpsl
dec
push
inc
bound
and
adc
xchg
sbb
xchg
jmp
pop
add
aaa
pop
pop
inc
shlb
pop
enter
int3
and
jno
fdivl
in
lea
push
and
lock
test
or
mov
or
jle
or
xchg
cwtl
add
outsb
outsl
fiaddl
jbe
pusha
idivl
mov
jo
dec
shrb
pusha
div
outsl
jle
iret
lret
mov
inc
and
hlt
data16
jae
test
insl
jle
adc
adc
or
imul
pop
xor
xlat
daa
addr16
insb
pusha
nop
subl
sub
jmp
cmp
test
test
in
scas
movsl
in
je
inc
fistpll
inc
shlb
movl
sbb
adc
lahf
out
mov
or
inc
mov
out
inc
push
cmp
out
push
xor
lods
sbb
push
je
xor
mov
inc
popa
mov
push
fbld
incb
jl
cmp
repnz
pop
repz
cmpl
pop
mov
inc
cmp
inc
inc
sbb
popf
ljmp
sbb
jo
mov
dec
movsb
push
sbb
mov
bound
addl
mov
push
dec
cmpb
por
jmp
mov
pop
adc
dec
aad
loope
add
insl
loopne
imul
ret
lahf
pop
mov
aaa
sub
nop
pop
adc
push
arpl
xchg
add
dec
or
push
push
pop
and
data16
int3
and
nop
popa
fsubr
fsts
xchg
push
lcall
xor
xor
test
mov
mov
push
stos
push
mov
les
inc
dec
test
push
orl
and
outsl
push
add
icebp
or
push
add
inc
xor
pcmpgtw
out
loopne
add
adc
xchg
pop
inc
sub
or
mov
jmp
cmp
xor
inc
xchg
push
sbb
mov
mov
jecxz
cmp
push
push
xchg
xor
xchg
push
nop
jmp
xor
jb
gs
add
mov
ret
jnp
leave
cmpsl
adc
mov
push
sbb
add
fwait
xor
mov
cmpsb
mov
sbb
dec
lock
cmp
icebp
sub
movsl
cmp
mov
ret
roll
cmp
push
mov
cmp
outsb
cltd
pop
cwtl
push
and
aam
aam
lock
sbb
add
xchg
testl
pop
push
mov
ret
jae
loopne
popa
ljmp
inc
mov
out
aam
test
pop
push
outsb
das
sbb
xchg
imul
xor
dec
icebp
and
sbb
or
add
push
cwtl
dec
fadds
loope
adc
or
mov
cs
ljmp
add
mov
xchg
movsl
fwait
xchg
inc
mov
punpckhdq
add
inc
dec
xor
les
outsb
push
pop
aaa
push
fistl
dec
jne
aaa
adc
and
add
sbb
mov
push
adc
mov
shll
pusha
and
adc
outsl
inc
cmp
jl
dec
pop
sbb
mov
pop
in
pop
loop
adc
fstl
dec
push
insb
lcall
xchg
mov
sahf
mov
fbld
pop
inc
push
inc
stos
imul
testl
xchg
xchg
fdivrp
inc
adc
cmp
shrb
or
dec
insb
les
mov
stos
adc
adc
dec
mov
sbb
lods
dec
adc
push
in
jns
enter
shrl
cmp
test
sbb
repz
push
pusha
add
cltd
nop
arpl
xchg
jmp
adc
sub
scas
pandn
add
mov
int3
testl
mov
sbb
popa
addl
adc
cmp
adc
insl
bound
dec
add
in
icebp
sahf
push
add
hlt
fcoms
sub
mov
add
das
mov
lds
cli
ror
sti
ss
xlat
shrl
mov
cmp
pop
fidivrs
add
mov
or
mov
rclb
inc
inc
ret
ret
adc
sub
daa
jmp
lea
inc
pop
add
jl
push
insl
stos
lock
enter
adc
aam
faddl
sub
mov
adc
addb
arpl
shl
cmc
out
rorl
fsubrl
mov
negb
pop
sub
in
pusha
push
sbb
sub
jle
je
loopne
ret
push
mov
ja
and
flds
in
je
xchg
ljmp
dec
lea
xchg
mov
lods
xor
ds
call
jo
sbb
inc
sub
pop
sub
cs
xchg
stos
and
add
jle
dec
push
mov
dec
dec
or
addb
nop
test
faddl
loope
jecxz
adcl
mov
or
call
or
fimull
out
scas
movl
and
inc
mov
mov
mov
adc
push
mov
outsb
addr16
xchg
inc
mov
repnz
mov
loope
scas
dec
movsb
pop
mov
inc
push
or
ret
fildll
sub
inc
fiadds
repnz
inc
sbb
add
clc
adc
js
lahf
rclb
add
mov
cmp
out
jb
movsl
popa
add
call
and
cltd
mov
inc
dec
dec
je
subl
loopne
sbb
jecxz
jb
cltd
les
cmpsl
call
pusha
cmp
movsl
rolb
jne
aam
pop
jge
or
bound
push
rclb
in
push
adc
xchg
rolb
jno
pop
pop
pop
pop
push
dec
xor
js
push
mov
loopne
call
fcoms
cmpb
xor
push
mov
add
data16
movsl
add
or
scas
xlat
scas
adc
fcompl
clc
add
ss
imul
pop
adc
xchg
dec
in
leave
xchg
arpl
dec
in
push
jp
jecxz
push
dec
inc
pop
loopne
push
mov
icebp
jno
nop
push
cmp
pop
dec
xor
fisttps
jb
push
test
jb
xchg
add
inc
or
in
iret
stos
cmpsl
and
lods
and
add
xor
loop
xchg
ja
sbb
dec
nop
sub
insb
adc
inc
or
or
in
jb
test
pop
daa
add
jns
mov
daa
inc
lret
in
jb
and
fsubrl
ja
emms
push
sub
out
pop
lock
or
push
mov
dec
and
jne
dec
cmp
inc
and
scas
es
or
xchg
movsl
and
cmp
add
ret
nop
add
lock
sub
adcl
sarl
lock
sub
add
pop
jae
int
inc
or
mov
mov
xchg
test
lock
jecxz
repnz
and
dec
xor
aam
testl
out
dec
pop
dec
xchg
xchg
pop
pushf
pop
cmpsl
push
incl
xchg
cmp
or
and
push
or
xchg
pop
pop
and
in
push
push
push
cmp
or
sbb
lds
jg
cld
push
ds
test
dec
test
iret
jmp
outsl
nop
out
pusha
les
insb
imul
pop
mov
add
dec
dec
add
adc
in
and
cmp
jg
lock
ret
push
add
decl
cmpb
pop
mov
or
mov
pop
testl
add
pop
mov
lahf
popa
jbe
inc
push
nop
inc
les
inc
mov
shrb
jl,pt
push
lret
addr16
outsb
jne
rcll
popa
ljmp
int3
inc
sub
jbe
push
pop
jne
insl
jbe
aaa
or
popa
jb
add
xchg
ja
or
cltd
mov
arpl
movsb
mov
push
mov
add
push
bound
insb
mov
in
inc
push
popf
adc
inc
es
xchg
inc
lods
mov
je
ret
inc
push
pop
shlb
xchg
test
aam
mov
sbb
jns
arpl
dec
lret
filds
mov
mov
dec
js
pop
xchg
gs
add
sbb
dec
fstp
bsf
add
xchg
mov
add
cmp
mov
mov
dec
insl
lret
xor
imul
push
divb
dec
or
addl
stc
mov
push
lea
inc
imul
push
adc
dec
push
inc
push
data16
in
sbb
lcall
lcall
push
push
bound
test
fsts
xchg
push
push
scas
mov
xor
push
lods
out
stc
pusha
add
xchg
inc
cwtl
inc
xor
add
lret
mull
push
inc
stos
out
outsl
hlt
stos
pusha
cmp
lcall
movsb
scas
sarl
es
out
clc
sub
mull
cwtl
mov
cwtl
scas
pop
push
add
mov
lods
cmp
xchg
call
in
sbb
push
mov
mov
xchg
adc
sbb
rcl
test
test
movsl
xchg
or
jno
pop
cmp
sub
mov
add
inc
push
jl
fwait
imull
jns
dec
cmp
roll
loop
dec
fs
and
js
test
cld
mov
xchg
cmp
xchg
push
cmp
push
inc
dec
add
xchg
or
and
add
cmp
mov
add
jmp
mov
orb
inc
and
mov
adc
bound
mov
or
sbb
jo
or
cmp
sub
jo
sbb
jmp
or
xchg
inc
scas
lock
mov
or
add
dec
enter
push
pop
lea
xchg
out
sbb
pop
cmp
xchg
or
pop
push
adcb
xor
clc
jl
xor
xor
push
sbb
insb
mov
cmp
pop
xchg
je
pusha
nop
aam
dec
pusha
lods
pushf
iret
sub
test
mov
inc
call
dec
mov
add
sahf
sbb
inc
pop
loopne
daa
mov
pop
enter
nop
adc
rcl
cwtl
cwtl
push
push
xchg
xchg
add
and
dec
mov
dec
js
mov
jne
sub
add
inc
lods
push
fcompl
mov
rcrl
test
mov
repnz
ror
inc
add
mov
inc
cld
push
call
sti
jp
call
daa
loopne
or
nop
push
psrlq
arpl
nop
stos
shll
adc
adc
xor
pushf
ffreep
cs
add
xor
insl
mov
jg
adc
test
xchg
inc
in
mov
iret
popl
imul
outsb
mov
push
pop
and
mov
scas
or
jns
mov
add
pushf
push
dec
add
dec
lods
mov
or
les
or
icebp
mov
add
lret
adc
addl
lret
push
add
mov
lret
xchg
insb
xlat
push
cs
jnp
into
hlt
leave
sbb
lret
icebp
add
sub
xor
xlat
lcall
mov
mov
cld
sub
push
cmp
mov
jns
jmp
cmp
jo
mov
ret
or
sbb
ftst
mov
inc
push
push
jb
arpl
gs
or
xor
je
imul
mov
sbb
or
fdivs
add
push
jae
fsts
adc
outsb
mov
mov
sbb
and
fwait
sbb
sub
sbb
int
in
push
push
nop
inc
ja
add
inc
mov
in
push
pop
xlat
scas
xor
mov
fldcw
fcompl
xchg
fmuls
sbb
push
nop
push
pop
and
sub
cmp
adc
push
jb
pusha
mov
adc
popa
ljmp
insb
and
pop
mov
or
lock
clc
xlat
cmpsb
inc
test
mov
lock
and
loopne
pop
imul
cmp
add
xchg
mov
xor
call
jmp
or
and
inc
sbb
jo
in
xchg
sbb
imul
inc
cmp
adc
add
sbbl
shl
pop
mov
xchg
xchg
nop
pop
test
fs
mov
inc
sbb
cs
cmc
xchg
inc
push
das
pop
jbe
xor
aas
or
pushl
xor
ss
cmp
xor
inc
mov
dec
incl
decb
dec
dec
dec
dec
dec
inc
push
push
push
push
push
pop
mov
pop
xchg
push
push
mov
inc
or
clc
adc
repz
insb
adc
fsubs
push
mov
jbe
cmpsl
hlt
push
sbb
xor
xchg
clc
movsb
sub
fs
das
loop
inc
std
ja
sti
and
add
xor
mov
orb
test
mov
js
xorl
dec
and
push
iret
mov
pop
data16
nop
scas
movsl
push
pop
jl
arpl
pop
mov
mov
and
js
mov
adc
clc
sub
clc
jbe
or
pop
dec
add
je
push
in
sub
xor
es
mov
ja
iret
sub
in
push
inc
jge
shrl
xchg
dec
xchg
ja
in
or
mov
jns
stos
pop
cli
push
sbb
pop
mov
ret
dec
and
cs
ja
ds
stos
and
sub
imul
movsb
mov
loope
add
dec
xchg
dec
fisubs
xor
push
inc
inc
inc
cmp
and
dec
pusha
sub
nop
inc
jecxz
sbb
xchg
or
mov
mov
enter
sub
js
sbb
imul
subl
lods
xorb
cmpsl
adc
pop
xchg
enter
stc
js
inc
hlt
scas
inc
xchg
pop
inc
mov
or
js
adc
cvtps2pd
adc
sub
sets
nop
imul
add
add
jno
or
sahf
dec
add
negb
sbb
lock
and
lahf
outsb
or
out
mov
sahf
inc
jmp
pusha
inc
xor
mov
jmp
mov
mov
sahf
sub
mov
shlb
xchg
or
jmp
inc
dec
inc
jmp
push
add
adc
enter
adc
fimull
mov
sub
push
inc
fidivl
insb
movsl
dec
dec
pop
cmp
loope
push
inc
or
into
and
xchg
mov
lods
push
aaa
sti
imul
inc
aas
push
cmp
ja
sbb
xor
sub
jne
mov
add
push
fmull
popa
pushf
cmp
jg
mov
ret
mov
dec
dec
daa
hlt
mov
sub
fcmovnbe
jo
test
lock
xchg
pop
clc
push
imul
mov
add
adc
and
jle
lods
out
add
arpl
xor
in
outsb
sub
icebp
pop
pop
dec
fistpll
or
jo
and
jns
pop
mov
jmp
jmp
xor
enter
push
xor
pop
inc
fidivrs
ss
adc
dec
fistpll
in
xchg
lret
mov
inc
dec
jmp
negl
add
pop
jnp
inc
imul
dec
popa
cmpsb
or
xchg
mov
mov
insl
inc
xor
lret
pusha
jecxz
shlb
add
sbb
mov
imul
enter
pop
push
lret
pop
mov
cs
outsl
popa
dec
lods
test
nop
push
inc
arpl
data16
cmpb
int
xor
add
mov
aas
cmp
sbb
lods
xchg
leave
mov
imul
add
mov
jb
xchg
adc
js
dec
inc
push
test
iret
xchg
mov
and
add
inc
dec
outsl
test
je
je
jp
ds
push
mov
cwtl
mov
rcl
and
aas
cmp
hlt
xchg
bound
aas
shlb
stc
adcb
add
mov
gs
iret
movb
pop
cmp
add
add
xlat
cmp
fsubl
movl
mov
js
mov
add
inc
jmp
xor
adc
fs
xor
jmp
add
and
push
popa
out
filds
mov
jle
adc
orl
mov
xchg
ja
push
vmread
movsb
mov
xchg
push
data16
leave
add
dec
test
sbb
or
rol
cmp
add
inc
pop
cmpb
jnp
adc
je
or
jae
xor
push
clc
adc
test
fucomi
dec
fcomps
loopne
pusha
dec
jae
xchg
jne
adcl
rorl
and
or
hlt
cwtl
mov
inc
jmp
sub
pusha
mov
outsb
jae
clc
push
pop
or
sub
or
aas
push
and
xorb
dec
cmp
aam
cmpb
and
test
pop
adc
or
pcmpeqb
xor
bound
bound
gs
pop
jno
iret
add
push
cmp
lods
test
leave
mov
or
fst
je
or
push
notl
push
pusha
sbb
iret
ret
in
icebp
insb
ret
fidivrl
xor
pop
cmp
rcrl
iret
pop
xlat
or
fistps
cmp
loopne
xchg
imul
jo
or
pop
adc
pop
add
xor
shl
adc
mov
cmp
mov
fstpt
mov
into
adc
inc
lock
in
jmp
inc
push
adcb
dec
imul
lret
pop
rcl
sub
cmpsl
test
adc
dec
dec
inc
or
cmp
adc
cmpb
shrb
mov
pop
jo
or
pop
push
jg
neg
ja
add
pop
adc
cmp
adc
dec
popa
pop
push
dec
pusha
test
je
jp
mov
js
xchg
inc
ffree
daa
bound
and
les
mov
xchg
add
rolb
lods
inc
sub
testb
push
insl
sbb
and
ds
xor
mov
sbb
mov
lods
adc
insb
pop
mov
test
add
pop
loop
push
push
adc
cmpsl
push
je
inc
shll
jp
int
jmp
in
jne
push
je
sub
pop
and
and
incl
mov
stc
fdivs
loopne
daa
push
inc
xchg
lea
cmp
test
xor
pop
mov
fidivrl
dec
push
std
sub
cmpl
mov
loop
jo
and
or
push
xchg
shrl
xor
inc
add
lds
dec
aam
push
dec
movsb
push
jno
out
mov
scas
inc
cmp
sub
sub
aas
jae
mov
and
jbe
and
mov
sbb
and
push
je
xchg
xor
mov
xor
xchg
icebp
orl
out
movsl
mov
or
and
or
mov
in
xchg
jle
xchg
test
fimull
and
ds
mov
inc
add
and
ljmp
sub
dec
pop
enter
dec
push
dec
adc
and
xchg
cmp
cwtl
add
clc
jmp
xor
ret
mov
or
out
jecxz
mov
adc
push
and
add
lret
and
mov
test
je
push
adc
pop
sbb
hlt
pop
push
flds
sbb
insb
frstor
je
xor
fwait
or
leave
lock
or
cmpsb
lock
push
push
movsb
mov
push
lret
mov
xchg
jmp
out
and
fmulp
ds
dec
add
sub
sbb
or
nop
adcl
fimull
nop
dec
or
or
or
mov
gs
pop
or
pop
subl
sub
or
and
lds
in
ret
adc
mov
dec
and
add
fs
dec
xchg
shrb
cld
mov
push
mov
sbbl
pop
stc
xor
fistpll
xor
gs
fbstp
imulb
xor
inc
pop
fcomp
test
inc
bound
and
push
push
sbb
imul
push
xlat
dec
nop
je
or
adc
loopne
in
popa
insb
push
stos
inc
cmpl
ljmp
cmp
pop
add
xchg
mov
sub
mov
mov
mov
dec
pop
das
loopne
dec
add
in
mov
jns
mov
popa
das
std
xchg
sbb
and
orb
fistpll
sarb
mov
cltd
pop
inc
mov
adc
fcomp
dec
mov
sub
xchg
enter
push
sbb
aaa
xor
add
push
sbb
test
and
arpl
or
dec
retw
cmp
add
sub
loopne
sbb
push
add
sub
fstpt
hlt
xor
popf
or
push
shll
cld
jno
inc
in
test
and
dec
sub
or
fsts
sub
cmp
fadds
jbe
invd
cmp
inc
cmpsb
cwtl
or
lock
das
mov
xlat
orl
or
mov
xchg
dec
lcall
or
mov
pop
add
aaa
cmp
dec
jge
pop
push
push
into
inc
push
jbe
adc
push
fsubrs
pop
les
push
xor
mov
pop
pushf
fs
scas
pop
mov
jl
clc
and
xor
xor
roll
sbb
mov
xchg
push
or
or
dec
or
sub
leave
fstpt
dec
pop
push
add
inc
push
or
xor
clc
pop
lock
mov
inc
aad
movsb
sub
out
insb
in
and
popf
test
mull
lea
js
test
movsb
push
add
sbb
lock
arpl
dec
cmp
shrl
sbb
mov
aad
mov
xor
insb
vcvttps2dq
hlt
cmp
jp
popf
pop
hlt
hlt
pop
iret
hlt
mov
pusha
sub
adc
and
movsb
lock
imulb
repz
or
ljmp
inc
jne
cmp
and
or
pop
rcr
rorb
or
xor
inc
jp
ds
pop
or
fistpl
push
push
dec
add
lahf
mov
cmp
sbb
insb
push
outsl
lea
mov
pop
sar
loopne
mov
aad
adc
enter
jge
sbb
subb
fistps
mov
add
loopne
and
push
sbb
add
cltd
mov
mov
jb
ja,pn
or
ret
xchg
hlt
out
push
dec
iret
push
inc
sbb
or
mov
dec
nop
xchg
push
pushf
fwait
mov
or
dec
pushf
leave
xor
xor
xchg
pusha
fadds
mov
cmp
or
or
or
aaa
mov
cmp
xor
xor
insl
xchg
rclb
jmp
and
push
push
inc
or
repnz
loop
add
mov
cmp
sub
enter
data16
test
push
xor
or
sbb
call
or
test
inc
ds
add
mov
mov
xchg
cmp
stos
adc
sbb
jns
call
xor
push
bound
pushf
inc
xor
clc
xor
push
mov
enter
clc
and
enter
pop
repnz
dec
lock
clc
pushf
inc
push
inc
xchg
js
movsl
stos
in
xchg
jl
and
add
sbb
arpl
mov
mov
shrb
mov
and
xor
inc
pop
sbb
xchg
out
lock
call
test
pop
inc
stos
movsb
push
test
nop
inc
xchg
sbb
mov
pop
push
add
sub
out
loopne
mov
cmp
scas
xor
cmp
shll
dec
or
filds
and
xchg
not
pop
inc
stos
add
add
rolb
ds
xlat
cmpsl
scas
andb
add
cmp
mov
je
es
popa
jae
jl
jge
repnz
adc
je
gs
repnz
adc
mov
outsb
sbb
rcrl
fadds
sub
push
and
insb
sbb
inc
push
cs
xor
push
sbbl
jmp
fistl
xchg
scas
mov
xor
daa
xchg
sbb
pop
shlb
lret
push
mov
fs
inc
aad
sbb
or
mov
push
add
test
push
sbb
xchg
lret
insb
mov
or
les
mov
cld
fists
lcall
pop
pop
push
inc
xor
mov
mov
xorl
mov
ret
mov
imul
xor
and
adc
bound
cmp
mov
inc
xchg
loop
cmp
bound
push
mov
in
sbb
movsb
xchg
cltd
mov
dec
dec
sarl
cwtl
lods
insl
add
adc
adc
push
or
stos
test
ds
xchg
fsts
dec
out
adc
add
sbb
sub
cmp
mov
outsl
add
insl
jmp
dec
sbb
test
fdivl
adc
push
jo
pop
fisubrs
or
add
push
and
push
add
sub
and
xchg
inc
ss
inc
loopne
ds
scas
dec
into
aas
pop
incb
add
mov
mov
add
xchg
clc
xchg
xor
lods
xchg
lock
or
dec
push
dec
ffree
add
in
adc
fimull
lea
addb
sub
sbb
rcr
icebp
sub
mov
in
push
clc
xchg
mov
adc
pop
jp
aas
jbe
sti
push
pop
mov
cmp
push
push
clc
je
addl
jne
test
pop
jae
inc
push
cmp
add
in
pop
pop
pop
je
add
fadds
sub
lret
mov
out
cmpsl
cmp
pop
xchg
xor
bound
jl
fmuls
inc
movsb
mov
push
in
dec
test
xorb
mov
je
add
rclb
or
mov
jne
jb
push
inc
mov
sub
push
sbb
les
daa
jo
mov
test
test
movsb
adc
pop
adc
loopne
push
pusha
mov
or
fistpll
sbbl
pop
inc
inc
inc
rcrl
outsl
mov
rolb
ret
xor
push
sbb
shrd
add
lock
sbb
daa
inc
sub
xor
mov
out
mov
jo
cltd
push
sbb
nop
ret
ljmp
outsl
pop
int3
mov
pop
cmp
mov
push
lret
fs
add
pushf
and
pop
mov
das
cmp
pop
movb
mov
fcmovnu
mov
or
mov
cwtl
jl
adc
je
cmp
xchg
out
and
mov
push
fisubl
inc
pop
jnp
xor
aas
jbe
and
cld
mov
dec
fs
inc
mov
faddl
inc
lock
sahf
ljmp
sub
mov
or
xchg
dec
lods
push
mov
out
adc
fwait
bound
push
mov
in
nop
loopne
popa
pop
jl
mov
xchg
or
out
lods
popf
push
lods
jmp
xchg
es
sahf
gs
sub
sbb
test
inc
sub
mov
inc
and
mov
xchg
jne
xor
imul
sub
xchg
pop
xchg
inc
mov
mov
jmp
inc
in
xchg
in
inc
inc
popf
push
arpl
cmpsb
mov
mov
jo
aam
xor
push
rolb
or
adcb
mov
mov
add
sbb
sbb
or
and
cmp
and
mov
addb
outsb
xchg
xchg
xorb
pop
pop
ret
adc
call
inc
rolb
mov
mov
mov
sarb
inc
addb
imul
sub
xchg
jnp
dec
mov
pop
repnz
lcall
pushf
inc
mov
movsb
cmpsl
addr16
push
add
psubusb
adc
shrd
out
cmpl
loop
ret
iret
sub
les
mov
or
clc
fmuls
fnstcw
shrb
scas
test
fbld
adc
push
cmp
cmp
adc
lret
sub
xchg
out
cmpsl
enter
mov
loop
mov
xor
mov
rcrb
fs
sbb
adc
mov
cmp
pushf
je
add
ja
popa
lret
mov
rcl
in
xlat
push
pop
pop
mov
inc
pop
mov
test
jbe
movsl
aas
mov
jae
inc
jmp
outsb
mov
sub
nop
imul
test
mov
repnz
in
add
lods
insb
inc
in
and
clc
pop
and
pop
and
xchg
dec
inc
aas
xchg
or
add
inc
leave
push
xor
xor
xchg
or
inc
inc
or
leave
push
or
and
xor
je
or
add
push
pop
or
cwtl
insb
cmp
sub
addb
mov
jl
lds
mov
xor
or
dec
pop
dec
mov
xchg
jmp
jne
nop
js
jne
stc
addr16
jl
inc
sbb
jb
js
sub
test
in
roll
sbb
and
into
xor
inc
sbbb
sub
inc
pushf
push
negb
push
fstpt
imul
sarl
lcall
add
xchg
mov
enter
push
sbb
and
push
adc
sub
loopne
dec
xor
das
mov
or
mov
inc
sub
daa
pop
cmc
shlb
call
xor
inc
push
cmp
pop
inc
shll
inc
inc
rcrb
and
mov
cmp
mov
and
lds
sbb
adc
add
add
out
ret
dec
insl
arpl
and
subb
add
inc
jbe
xchg
nop
inc
cmp
inc
push
lock
nop
out
cmp
push
mov
push
popf
lahf
or
cld
push
push
sti
jo
sbb
aaa
pushl
dec
mov
add
pop
je
movsl
mov
push
leave
and
rorb
ljmp
and
or
pop
add
das
outsl
cwtl
xlat
int3
add
out
adc
mov
sub
sbb
sub
mov
lea
cmp
or
pop
ficoms
inc
mov
sub
loopne
rorb
shrb
nop
mov
fmuls
xchg
mov
pusha
inc
iret
mov
fldenv
jle
shlb
dec
sub
xchg
mov
add
mov
outsl
or
dec
les
or
adc
dec
push
pop
clc
test
js
xor
push
aas
pop
push
je
push
sbb
mov
mov
testb
xor
fsubp
out
push
daa
leave
sbb
movsb
mov
and
pop
frstor
data16
jns
aas
cld
int3
push
push
test
out
lds
ja
fs
fsts
cltd
ja
sbb
mov
jmp
jecxz
hlt
cmp
adc
add
js
bound
mov
rorl
mov
mov
jns
fnsave
je
xchg
fnstsw
cld
jmp
push
mov
lea
and
add
shl
imul
push
mov
mov
sub
scas
loopne
cmp
js
xlat
or
dec
pop
cmp
imul
xlat
cmp
ret
fsubs
jb
or
sahf
decb
leave
dec
sub
pop
sbbl
popa
movsb
add
clc
push
shll
cmp
jne
test
dec
les
call
test
inc
sub
into
mov
inc
daa
jo
inc
xorl
arpl
xchg
ret
mov
inc
xchg
push
pop
pop
mov
sub
and
fsubs
rolb
sarb
xchg
add
popf
adc
jo
into
mov
popf
jp
push
cmpsb
sub
cmp
lret
fdivs
xchg
inc
iret
adc
lea
iret
add
xor
xchg
inc
and
fcoml
add
iret
aad
add
pop
mov
sub
jl
inc
add
fisubrl
xchg
into
dec
cmp
inc
cmpb
rcl
mov
dec
ret
inc
in
movsb
test
jge
sub
mov
inc
out
inc
jo
daa
add
pop
jne
mov
mov
fsubl
add
jg
aaa
dec
xchg
dec
leave
test
adc
dec
inc
jne
mov
mov
add
cmp
cmp
mov
pop
xchg
push
adc
cmpl
jmp
sbb
andb
adc
push
sbb
faddl
sub
subb
jle
flds
mov
mov
or
pop
jo
inc
and
inc
int3
das
add
iret
lds
pop
add
fnstcw
inc
cmp
fidivrl
adc
add
mov
xor
inc
jae
les
sbb
sub
xchg
arpl
cmpsb
loop
mov
sahf
scas
inc
stc
es
xchg
ja
sbb
push
mov
mov
pop
push
push
sub
and
push
xor
aas
cltd
ret
sbb
cwtl
cmp
jne
and
into
xchg
push
add
pusha
xchg
cs
or
outsb
hlt
rclb
sbb
sbb
adc
mov
pop
cmp
ror
fucomip
adc
mov
add
pop
add
and
ljmp
mov
mov
aad
sub
add
xor
or
call
out
in
shll
cld
adc
sti
aad
sbb
fs
sbb
int3
js
movsl
fcmovnb
lret
cmpsl
mov
ja
adc
mov
es
mov
cmpsl
mov
cltd
and
fnstcw
or
push
or
out
cmc
adc
or
sub
rcrb
sub
aad
mov
into
aas
imul
incl
inc
and
imulb
cmp
cli
repnz
xor
adcl
test
and
xchg
add
in
pushf
insb
mov
sbb
or
or
inc
cs
dec
sub
pushf
test
push
xor
test
or
test
add
jb
sbb
mov
xchg
add
cwtl
pop
js
push
and
mov
add
sbb
lcall
in
jecxz
mov
mov
adc
jo
push
jge
adc
push
cli
xchg
mov
fsubr
mov
lods
popa
lret
adc
add
fistpll
loop
pusha
xor
lods
adc
and
xor
daa
sbb
pop
int
sbb
dec
loope
jp
rol
test
add
jb
inc
adc
push
add
sbb
add
push
push
add
cltd
jnp
inc
add
sbb
pop
mov
repz
jle
rol
movsw
cli
xchg
cmc
add
je
pop
adc
jge
xchg
jnp
inc
sub
inc
loopne
xchg
mov
outsl
sub
inc
inc
pop
in
mov
add
repz
jo
mov
ret
inc
mov
pop
popa
xchg
ret
push
dec
inc
mov
dec
inc
mov
push
cwtl
inc
dec
les
loop
repz
adc
push
cmc
test
popa
jle
or
inc
inc
xor
or
add
pop
push
lods
test
andl
movsl
cmpsl
xor
push
xchg
addb
cmp
les
push
stos
jmp
aam
aam
or
mov
nop
adc
mov
test
or
xor
loope
loopne
jmp
lcall
cltd
ret
ret
mov
pop
xor
inc
cmp
dec
sub
lret
add
jne
xorl
add
mov
imul
pusha
add
mov
call
cmp
rcl
mov
addr16
pop
jl
inc
push
idiv
xchg
lahf
int3
test
pop
movb
inc
pop
add
sahf
xchg
inc
add
or
outsl
xchg
movsb
jne
pop
clc
jb
pop
cmpsb
inc
sarb
fucom
enter
test
pushl
xor
push
sbb
sbb
mov
cmp
loopne
or
lea
sub
sbb
lcall
into
add
or
mov
xor
add
imul
xor
add
ja
inc
or
jp
sub
fidivrl
or
jbe
pop
idivl
ja
addb
mov
or
mov
sarl
add
cmp
mov
cmpb
inc
cs
inc
adc
mov
xchg
popa
dec
nop
lods
jne
or
cmpsb
and
cmpsl
out
pop
sbb
inc
and
inc
or
mov
enter
mov
mov
cmp
jb
lret
mov
iret
dec
xchg
dec
or
out
mov
gs
dec
cmp
push
nop
into
aaa
mov
out
and
aaa
xor
and
sahf
jne
ret
sbb
test
or
mov
xchg
add
jnp
jno
jmp
xor
ret
nop
mov
xor
cmp
leave
test
push
adc
cmovl
bound
add
insl
fstl
add
loop
xchg
call
imul
push
fsubr
sub
adcb
jp
fnstsw
xchg
xor
movsb
inc
inc
jo
adc
sbb
lret
mov
hlt
sub
negb
mov
and
pop
shlb
or
pop
adc
inc
xor
dec
push
lock
lock
dec
imul
addl
or
aad
dec
sahf
inc
jb
lock
fbld
push
xor
jmp
bound
cmp
aas
mov
mov
or
xor
inc
fildll
xor
add
loop
into
ss
sbb
out
movsl
cltd
jbe
test
adc
pop
cmpb
sbb
adc
in
xor
jne
decw
mov
mov
or
or
inc
shll
fwait
jmp
and
test
xorb
or
dec
sbb
xchg
in
push
pop
cwtl
insl
xor
or
xchg
sub
pop
add
je
dec
mov
or
in
add
daa
sub
popf
lods
mov
inc
fldl
sbb
push
movsb
add
mov
or
sbb
adc
jo
mov
jmp
jb
adc
movsl
aam
push
cwtl
les
movb
add
cld
adc
movsb
xchg
mov
sbb
aaa
sbb
sub
test
addb
lcall
jne
das
push
jmp
mov
pushl
mov
mov
flds
andb
pop
push
xor
adc
cmc
ret
aas
cmp
ret
add
sbb
pop
or
subl
mov
test
leave
or
addr16
sbb
add
arpl
cmp
shlb
adc
loope
lret
and
inc
fcom
sub
or
daa
orl
inc
adc
dec
int
decb
cmp
jne
xor
test
aam
push
sbb
inc
scas
jno
cmpsl
push
pop
xchg
xchg
fdivrs
and
jo
push
xchg
js
adc
dec
inc
aas
cmp
sbb
or
add
dec
aaa
add
mov
jp
adc
dec
xor
bound
fimuls
repnz
fcomps
cld
outsb
in
jecxz
xor
dec
cs
jb
out
lea
testb
cmp
push
cmp
xorl
ljmp
add
popl
test
lea
push
cmp
mov
sub
test
lcall
mov
cmp
stos
sub
and
loop
inc
pop
add
xchg
aaa
or
sub
or
fstpt
pop
mov
sbb
adc
pop
daa
iret
mov
imul
push
aad
adc
xor
mov
test
mov
jne
push
mov
movzwl
add
inc
rolb
sbb
cltd
out
xlat
mov
dec
lock
sbb
xor
test
jbe
add
loopne
je
fisttpl
adc
lds
lods
and
cli
in
jo
add
mov
push
loopne
outsl
lods
push
pushf
adc
and
mov
xchg
xor
xor
or
mov
jge
push
enter
sti
mov
cmp
mov
sub
or
inc
mov
subb
mov
add
pusha
enter
andl
xchg
and
and
dec
cmp
and
pop
inc
add
jg
xorb
mov
and
ret
pop
repnz
fdivl
and
xchg
adc
cmp
aam
sbb
push
mov
sub
adc
sbb
sub
inc
cmp
ljmp
lea
aam
rcl
and
mov
mov
inc
push
push
adc
fadds
xor
sbb
pop
nop
in
add
cs
dec
xor
in
test
pop
fwait
adc
push
in
xchg
xchg
or
cmp
dec
push
inc
cltd
sbb
cmp
rclb
inc
es
jne
ret
sub
test
xchg
push
dec
mov
insb
and
mov
add
pop
lds
push
add
lea
and
ljmp
push
lds
jecxz
inc
adcl
andb
bound
aaa
adc
push
push
rcrb
fadds
add
in
fs
jle
push
xor
cmpsl
sub
cmp
insb
icebp
pop
add
xchg
xor
icebp
or
inc
pop
addb
mov
pop
cmp
lcall
repnz
std
cmp
inc
popa
add
add
pop
popa
and
add
adc
add
movsb
push
jb
jbe
or
je
movl
push
mov
ret
inc
in
dec
xor
add
mov
cli
dec
jmp
push
bound
arpl
or
cmpb
rcrb
movsl
dec
or
enter
insl
mov
push
pop
ret
add
and
fldenv
mov
imul
xor
pop
pop
aam
iret
push
cld
mov
mov
nop
xor
xor
sbb
or
mov
xor
pusha
fwait
sub
fucomip
aaa
push
sub
or
in
push
imul
loopne
or
sub
fdivrs
push
stos
pop
add
les
cltd
sub
inc
add
mov
sbb
add
fistps
rclb
dec
sahf
mov
call
add
adc
sub
sbb
testb
xor
sbb
or
lcall
pop
xor
test
add
add
jne
andb
repnz
push
je
add
inc
inc
jbe,pn
aaa
pop
dec
pop
xchg
xchg
mov
xchg
add
movsb
push
lds
cmpsl
fldl
enter
sub
scas
adc
and
imul
ss
adc
sub
mov
leave
sbb
arpl
mov
jne
xchg
jp
cli
mov
xchg
mov
addr16
ljmp
shrb
sub
sbb
jo
push
sti
jl
mov
rorb
jmp
adc
popa
push
dec
jl
inc
sbb
mov
jns
ret
pop
aam
movsl
mov
sub
mov
or
ret
sbb
sub
repz
test
jb
fcmovnb
inc
jne
jbe
xor
mov
lods
push
sbb
mov
dec
fsubs
in
cwtl
imul
nop
mov
cmpsb
xor
mov
fstps
push
sbb
scas
and
js
mov
imul
insb
push
leave
mov
faddl
push
inc
xor
cmp
pop
cmpsb
mov
sub
mov
pop
sub
mov
shrb
dec
int
mov
push
pop
push
test
jp
xchg
adc
xchg
shlb
fcompl
mov
test
push
cwtl
jg
test
mov
and
or
sub
insb
add
add
leave
push
js
add
fimull
cmp
out
std
adc
insb
aaa
push
adc
or
jl
je
pop
xchg
lock
adc
add
push
sub
xor
inc
xor
dec
cpuid
cmpb
fisubrs
add
mov
lock
aad
add
mov
pop
and
xor
push
inc
fwait
or
dec
dec
add
outsb
leave
push
sub
sub
or
jnp
add
or
push
inc
inc
aas
pop
and
or
or
sbb
sbb
or
jns
xchg
andl
jns
add
dec
or
or
pop
icebp
or
ret
inc
adc
in
or
dec
inc
rclb
fstl
pop
pop
pop
mov
pop
das
push
insl
outsl
gs
dec
and
pop
or
or
mov
or
cmp
orb
jae
incl
push
push
sbb
or
xchg
cmpsb
cmp
mov
and
in
push
or
sbb
sub
loopne
mov
add
das
mov
or
or
dec
into
xchg
scas
jge
xor
insl
hlt
fs
popa
js
adc
loopne
mov
daa
mov
pop
je
lcall
aaa
je
inc
nop
mov
jg
or
add
out
or
fildl
mov
inc
add
in
or
sub
icebp
adc
add
inc
jbe
lahf
push
cmp
in
inc
iret
and
push
or
jo
shll
adc
inc
add
nop
pusha
setbe
xor
and
in
stos
and
or
ja
push
orb
dec
aad
inc
dec
inc
jp
dec
or
adc
xor
loope
pushf
cmpsb
pop
dec
xor
adc
rcrb
pop
sbb
sub
inc
jae
or
adc
adc
mov
test
outsl
mov
mov
cwtl
loop
mov
add
mov
xorb
dec
in
incb
dec
movsl
sbb
out
mov
das
mov
popa
hlt
es
test
call
out
in
dec
shl
int
pop
add
mov
and
out
and
outsb
out
and
and
adc
in
inc
icebp
xor
sti
add
adc
pop
repnz
jns
outsb
sub
ficoms
je
or
mov
loope
imul
lret
cmpsb
int
popa
js
in
cwtl
pop
add
les
nop
or
add
dec
xor
add
scas
and
ret
jo
addr16
jo
adc
adc
repnz
imul
push
add
adc
loopne
jge
xorb
and
mov
rolb
or
mov
add
fs
arpl
ffreep
mov
push
jb
insl
popa
jb
or
or
xchg
sbb
xor
outsb
pusha
popa
rcrl
lahf
enter
outsl
subb
add
or
jecxz
loopne
pop
aas
inc
add
mov
jae
fildl
arpl
dec
imul
or
fs
pop
mov
or
or
fstpt
or
mov
cmp
xchg
cmp
push
pop
outsb
dec
das
sti
xor
push
in
push
xor
adc
or
dec
ficoms
daa
mov
add
sbb
fsubrl
and
pop
mov
popa
add
popa
jnp
push
insl
xchg
or
add
mov
xchg
mov
mov
add
out
sti
test
addr16
into
pop
sub
outsl
dec
jmp
loopne
inc
addb
lret
xchg
loop
push
lock
cmpsb
fs
jg
mov
and
icebp
clc
mov
jmp
clc
decb
lahf
adc
adc
sbb
and
sub
add
sbb
ret
incl
add
push
lock
push
lock
stos
or
pop
shlb
iret
push
lock
mov
sar
mov
mov
pushl
scas
ljmp
pop
lods
ljmp
flds
xchg
stos
dec
adc
ss
pop
inc
pop
fs
or
inc
lods
fldenv
push
jl
mov
dec
fldt
pushw
mov
dec
push
int3
in
xor
call
dec
add
outsl
rorl
rcl
pop
aas
push
pop
lret
data16
xor
sub
dec
fnstenv
cmp
push
in
cmp
lret
mov
scas
sub
inc
mov
in
inc
xchg
aas
mov
push
sbb
aam
hlt
adc
xlat
fldt
push
inc
mov
fldt
lret
push
and
and
js
inc
xlat
inc
or
xor
sbb
push
hlt
mov
and
loopne
jns
push
adc
inc
or
incl
fwait
cs
pop
add
sbb
pop
ds
lret
pop
jmp
mov
lea
data16
and
cs
push
orl
mov
pmulhw
mov
inc
aas
adc
or
popa
inc
insb
imul
push
call
add
sub
xchg
mov
adc
or
cwtl
mov
xchg
push
fcmovb
adc
loope
xchg
dec
adc
pop
pop
mov
les
lcall
repz
dec
lock
sub
pop
popa
or
ret
add
js
sbbl
adc
movsb
in
sub
in
or
addl
pop
inc
sbb
mov
xchg
pop
adc
add
adc
dec
lcall
lret
push
outsb
sbb
fimuls
test
push
and
adc
xchg
pop
push
sbb
lock
and
add
mov
sub
sbb
push
mov
push
and
dec
dec
xchg
and
inc
xchg
dec
mov
xchg
or
rcrb
and
enter
es
push
sub
add
adc
push
enter
int3
in
cs
sbb
dec
or
mov
inc
jno
and
add
imul
sbb
mov
add
les
pop
adcb
in
dec
sub
in
dec
out
xor
ja
lods
jg
dec
xor
mov
xchg
cli
bound
pop
cs
insb
fs
imull
insl
dec
loop
jp
pusha
call
and
push
ret
mov
iret
mov
xor
and
fwait
sbb
or
push
imul
jae
data16
imul
lcall
dec
pop
enter
dec
arpl
stos
xor
mov
cmpsb
inc
xor
js
mov
js
dec
xor
into
out
int
addb
ss
mov
push
out
push
sbb
lcall
and
in
cmp
orl
inc
jne
gs
inc
inc
dec
add
xorl
inc
or
jae
add
or
or
jle
xor
sub
mov
sbb
pop
xchg
or
imul
push
into
jae
popa
dec
mov
lret
adc
add
xchg
mov
mov
push
ss
dec
ds
pop
jns
out
in
nop
imul
fcompl
pop
and
jo
mov
and
xchg
ss
pop
sar
rolb
or
inc
enter
add
es
inc
test
fdivrs
dec
daa
stc
jns
mov
shlb
rclb
ret
add
add
adc
or
inc
popa
add
add
cs
pop
xor
repz
and
push
sub
dec
mov
add
and
adc
sbb
in
popa
add
fmull
inc
fadd
les
orl
pop
push
push
inc
push
sbb
inc
popa
push
dec
push
lds
or
fadd
push
push
dec
inc
popa
add
push
push
test
push
and
pop
xor
cmp
shrl
push
inc
push
mov
dec
inc
inc
push
add
and
outsl
xor
push
dec
adc
mov
push
cmc
cs
mov
add
sbbb
popa
bound
pop
or
jae
loopne
ja
rcrb
test
in
adc
ret
pop
sbb
mov
popa
pop
inc
imul
dec
xor
jbe
inc
mov
pop
pop
push
and
test
xchg
clc
aas
cmp
add
int3
pusha
or
inc
add
mov
clc
iret
or
outsl
mov
add
arpl
pushf
fs
mov
lcall
insl
in
inc
mov
or
out
pop
sub
sbb
rorb
and
pop
mov
or
nop
inc
stc
iret
inc
push
add
or
fimull
ror
enter
scas
push
and
dec
or
jl
addr16
loop
enter
inc
cmp
xchg
adc
out
pop
sbb
dec
inc
inc
mov
cli
mov
outsl
mov
sbb
enter
jo
lods
sbb
in
pop
cmpsl
or
push
lcall
and
add
fs
jb
mov
lret
sbb
test
mov
popa
nop
fadds
and
loopw
push
insl
scas
mov
mov
stos
cmpl
pop
cmc
js
pop
jne
cmpsl
out
jmp
push
dec
outsl
lahf
jne
and
pop
je
cwtl
add
mov
mov
mov
repz
sub
ret
pop
es
adc
fnstenv
xchg
sbb
push
es
jns
sub
adc
and
jb
xlat
pusha
insl
adc
dec
add
fldenv
cmpsb
mov
and
lods
divb
movsl
in
sti
push
hlt
mov
add
cld
movsb
xchg
mov
sbb
mov
repnz
inc
add
pushf
or
mov
sub
popf
cmp
cmc
cld
inc
fidivl
stc
cmp
call
ret
inc
negl
jo
mov
push
sbb
or
cmp
xchg
aam
mov
sub
ja
mov
ret
add
je
mov
lea
pop
xchg
sub
push
test
push
sub
sbb
mov
adc
mov
push
adc
pop
pop
or
or
je
mov
push
ret
mov
add
adc
fists
sub
movsb
insb
cmp
pushf
shrl
mov
xor
mov
cmp
ljmp
inc
jg
xchg
mov
enter
xor
and
mov
inc
pushf
std
repz
orl
popf
mov
pusha
dec
sub
and
sub
test
inc
and
xchg
cmp
daa
jae
shlb
pop
mov
addr16
loopne
and
mov
data16
movsb
or
dec
inc
mov
clc
mov
movsb
sbb
add
adc
add
inc
lcall
aam
add
sbb
mov
bound
inc
pop
test
mov
mov
movsl
mov
jns
fimuls
testb
sbb
sbb
add
sbb
xchg
or
adc
xchg
cmp
add
lcall
adc
xchg
cld
or
mov
arpl
pop
loopne
add
ljmp
lods
test
imull
ret
pop
dec
xchg
shlb
fnstsw
or
add
adc
add
stc
cwtl
or
jo
inc
popa
sbb
jae
iret
add
mov
mov
insl
push
test
inc
sarl
cli
pop
inc
or
xchg
and
pop
pop
and
inc
add
or
mov
jae
sahf
aas
sub
pop
inc
add
inc
pop
dec
pop
and
movlps
cli
sub
stc
pop
push
push
mov
adc
lods
or
pop
and
das
pop
sub
mov
bound
xchg
call
fldenv
and
or
hlt
movsb
jbe
sahf
sub
out
jno
push
addr16
xor
rcll
sub
notl
mov
lock
inc
sub
mov
add
inc
mov
ret
adc
inc
jns
add
add
mov
adc
lods
lahf
mov
push
hlt
scas
popf
subl
and
nop
gs
push
pusha
add
and
dec
outsl
sbb
cmp
xlat
lods
mov
aaa
sbb
pushl
jo
or
ret
bound
outsl
push
xorb
hlt
mov
cmpb
mov
lods
push
push
cmp
xchg
mov
adc
clc
fmull
dec
dec
push
add
test
cld
add
adc
stc
xchg
pop
bound
rcrl
clc
dec
pop
or
sbb
inc
sbb
mov
add
add
dec
test
fwait
call
mov
mov
or
outsl
fmuls
xchg
bound
jecxz
addr16
sub
sti
pusha
adc
adc
cltd
jns
xor
cmp
jnp
inc
sbb
xor
int3
lahf
jb
incl
pop
hlt
neg
jmp
arpl
fs
shlb
stos
mov
nop
pop
and
adc
mov
pop
cmp
repnz
push
mov
int3
adc
in
sbb
sub
and
ds
dec
les
dec
insl
mov
icebp
dec
hlt
cmp
add
add
pushf
sub
add
fistpll
sbb
xchg
lods
or
sbb
mov
lahf
mov
lock
shr
aam
cmpsl
sub
inc
xchg
and
mov
sarb
push
cmpsb
rolb
sahf
adc
leave
adc
orl
adc
or
jmp
inc
pop
fistpl
lret
ret
mov
ret
loop
inc
call
xor
or
push
fiadds
aaa
dec
cmp
adc
mov
xchg
popa
mov
es
push
gs
or
ss
sub
mov
subl
imul
jmp
push
and
lahf
imull
or
jmp
fsubr
mov
call
sub
adc
and
cmp
addb
dec
out
test
stos
or
je
mov
lahf
neg
fs
inc
sub
lahf
dec
adc
pop
jo
and
roll
sub
jbe
loope
std
sbb
cmp
fldcw
mov
rcrb
xchg
test
cmp
mov
mov
loop
fldl
xchg
mov
xchg
inc
hlt
dec
out
mov
test
push
pop
leave
inc
sbb
push
jno
dec
pop
or
mov
arpl
movsl
adc
out
mov
cmp
push
out
sbb
arpl
mov
add
daa
xlat
inc
add
or
mov
inc
addr16
jle
aam
movsl
es
leave
dec
sub
or
es
inc
into
pop
dec
inc
push
cwtl
rcr
sub
and
and
lods
aaa
test
sub
pushf
shlb
pop
xchg
or
insl
arpl
stos
jle
es
jmp
rclb
daa
add
rolb
xchg
or
dec
pop
das
add
mov
inc
scas
xchg
popf
pop
lock
call
lret
pop
mov
adc
enter
mov
test
push
cmpl
fsubrs
ret
inc
sbb
adc
in
sub
xchg
imul
cmp
push
nop
xor
aas
xor
mov
outsl
xchg
fildll
mov
clc
xchg
or
lret
leave
jge
lea
mov
nop
loope
loope
jnp
cmpl
mov
jb
cmp
sbb
mov
or
cld
ja
lock
pushf
in
and
sbb
mov
je
pop
pop
es
add
inc
dec
and
sub
xor
dec
jb
dec
js
cmp
enter
insl
orb
push
cltd
fcomp
shrb
pop
test
and
add
pop
mov
and
fisttpl
ret
push
mov
mov
mov
mov
inc
pop
jne
push
mov
mov
clc
pop
xor
inc
ret
ret
pop
popa
adc
inc
loop
adc
dec
push
or
jae
and
or
ds
xor
mov
pop
adc
add
aaa
and
xchg
adc
xchg
or
stos
add
add
cmp
sub
or
and
rcll
aaa
lahf
add
jo
sbb
fisubl
lahf
sub
into
push
sub
mov
or
xchg
inc
dec
lods
test
and
je
data16
push
addr16
ret
outsl
pushf
andl
add
adc
dec
lea
inc
jp
and
cmp
mov
sub
inc
pop
daa
xor
xorl
in
xor
inc
sahf
push
add
inc
mov
out
aaa
mov
jge
xor
sub
inc
inc
imul
inc
jmp
inc
sti
enter
jg
lock
ss
jmp
lods
popa
xchg
or
aam
mov
in
fldl
add
push
fs
mov
inc
lock
adc
mov
out
mov
ret
sub
or
jno
and
xchg
pop
je
mov
inc
push
xchg
nopl
rsm
xchg
mov
loopne
or
nop
ret
sub
inc
xchg
fstps
or
outsl
pop
movsb
xchg
fadds
xchg
stc
lret
push
inc
and
shufps
xchg
xchg
hlt
dec
or
add
cli
loopne
push
xchg
test
pop
dec
outsl
or
mov
cltd
or
dec
sbb
jecxz
pop
adc
xchg
inc
sbb
mov
outsl
or
lret
or
lea
sar
rcr
push
aaa
scas
xor
or
mov
add
cmp
scas
lret
mov
or
out
inc
add
or
sbb
dec
mov
push
adc
out
repz
adcl
pop
mov
or
push
sti
adc
sbb
adc
and
addl
outsl
or
lds
sbb
out
sbb
in
fiadds
pop
mov
push
mov
dec
ja
mov
xor
cwtl
or
sbb
xchg
test
mov
test
mov
ficoml
mov
dec
jns
pop
xor
mov
ss
adc
jle
or
call
stos
inc
fstpl
addb
shrl
mov
in
or
cmp
push
or
dec
xchg
jb
lock
sub
or
out
xorb
add
xchg
adc
xor
dec
cmp
or
add
movsb
scas
fidivrs
mov
mov
add
flds
jns
mov
pop
out
mov
sub
scas
ret
mov
or
fstpt
xor
pusha
jne
jg
xor
or
mov
gs
aaa
jp
mov
push
insl
jns
or
in
push
shlb
mov
or
ret
je
add
xor
and
test
dec
push
adc
divb
adc
fidivs
push
hlt
mov
sbb
jo
inc
xchg
and
add
test
mov
push
inc
mov
pop
std
adc
add
add
or
add
cmp
cltd
add
inc
pop
stos
js
sar
add
dec
adc
and
add
cmpsb
fsubl
adcb
and
jg,pn
mov
xor
repnz
nop
adc
xchg
mov
cmp
xchg
sbb
sbb
add
cmp
data16
and
cmp
test
cmp
adc
ss
shr
shrb
and
push
in
mov
xor
lds
inc
aaa
push
gs
lcall
mov
jecxz
mov
enter
ja
add
sbb
inc
xchg
in
test
or
in
xchg
jnp
je
clc
loopne
icebp
testb
jecxz
push
fdivl
or
movl
in
test
push
aad
pusha
adc
and
add
leave
movsl
mov
rcl
jnp
or
daa
lcall
mulb
adc
push
daa
sbbl
xor
sub
adc
sbb
mov
add
sub
imul
add
add
je
and
and
fnstcw
daa
mov
add
enter
adc
nop
outsl
adc
xchg
insb
pop
and
fsubrs
mov
rol
and
lods
out
push
push
jecxz
stos
dec
inc
insb
ss
sbb
adc
pop
add
and
mov
fs
jno
xchg
pop
inc
js
adc
outsb
out
mov
push
or
push
sarl
xchg
pop
xlat
ja
lcall
or
popa
dec
lods
movsl
sub
xor
jns
mov
sbb
enter
sbb
mov
cmpsb
scas
mov
add
jo
movsl
sbb
ret
xchg
jmp
add
stc
pop
jae
dec
add
push
add
mov
cmp
xchg
enter
repz
push
hlt
add
lods
push
or
cmp
lods
inc
neg
inc
orl
leave
pop
jb
or
mov
push
and
cmp
andl
idiv
pop
sbb
or
movsl
test
das
je
leave
aas
sub
mov
scas
pop
ja
add
rcl
loop
cmpl
jbe
orb
jnp
addr16
or
sbbl
sbb
or
jp
jle
jne
aad
stc
loopne
gs
and
jecxz
xchg
testb
sbb
dec
leave
dec
aam
jns
leave
mov
and
inc
xchg
or
pusha
pop
in
add
push
iret
xchg
xchg
imul
xor
sbb
scas
sub
adc
pop
jp
es
xor
xchg
lods
movsb
hlt
lret
mov
daa
pop
jo
dec
gs
push
jecxz
je
adc
push
std
pop
mov
and
mov
daa
push
pop
cmp
loope
dec
movsl
mov
xchg
ret
sbb
adc
pop
xchg
push
cs
pop
push
xchg
repnz
mov
mov
fsubrl
cmp
jl
mov
out
aaa
mov
cmp
add
and
push
adc
shr
aam
pop
or
and
insb
and
push
mov
jmp
test
xor
jmp
xchg
insb
add
dec
sub
lret
rclb
cwtl
nop
inc
push
cwtl
aas
and
pop
xchg
sub
sub
push
sbbb
ret
add
rcrb
pop
loopne
dec
lahf
mov
xor
mov
jle
adc
mov
mov
hlt
sbb
loopne
es
fistpl
push
add
or
inc
and
adc
mov
add
dec
xchg
mov
mov
xlat
scas
push
add
scas
in
test
cwtl
jo
bound
mov
ds
and
and
push
movsb
mov
or
cmpsb
or
add
pop
add
scas
mov
aam
addl
sbbl
pop
bound
ljmp
add
cmp
imul
sub
lahf
ret
push
jns
xor
pop
fdivrl
cmpb
in
xor
sbbb
or
xorl
mov
mov
cs
add
jge
cmp
xchg
cmpb
sbb
add
xorl
mov
insb
out
inc
bound
xor
fwait
sbb
push
out
adcl
lahf
xchg
add
nop
add
outsb
add
mov
add
pusha
aas
int3
enter
mov
jl
lret
cmp
cmpl
lahf
add
bound
cmp
cmp
dec
pop
pusha
xor
add
adc
test
push
mov
push
out
sbb
xchg
adc
sbb
inc
repnz
jno
add
dec
mov
dec
fisttpll
ss
and
and
add
icebp
jl
add
or
aad
add
scas
leave
lods
add
push
jne
xchg
mov
notl
xchg
and
lods
and
cld
jmp
and
cmpsb
sub
inc
cmp
and
dec
aaa
jp
or
in
pusha
pop
shlb
je
inc
jne
adc
xlat
dec
dec
out
dec
pusha
xchg
xchg
outsl
bound
add
enter
adc
jbe
sbb
mov
cmp
mov
sbb
or
stos
add
testb
pop
insb
insb
call
or
sbbb
orb
jmp
andb
dec
fs
pop
push
popa
add
rorb
pushf
cmpb
cmp
xor
test
add
add
adcb
push
add
add
mov
outsl
and
mov
mov
pusha
xor
fisubrl
pop
jl
mov
fildl
arpl
das
subl
and
xchg
pop
cmpsl
daa
pop
add
inc
jg
cmc
notl
cli
lea
or
xchg
addr16
sub
or
adc
pop
ds
xor
lods
in
dec
je
daa
rcl
outsl
ds
clc
jnp
add
pop
jne
mov
mov
sbb
add
and
pop
sbb
xor
sbb
sub
dec
sbb
arpl
in
ret
sub
or
inc
xor
cmpsb
pop
xchg
push
sbb
mov
ficompl
inc
out
mov
cmp
mov
adc
add
push
iret
int
inc
enter
push
sub
fs
and
adc
push
shlb
pop
mov
pusha
mov
inc
bound
add
imul
test
popa
add
inc
into
jnp
fmul
cltd
cmp
aam
jnp
cmp
or
dec
adc
pop
add
hlt
or
nop
inc
in
clc
cmp
and
cli
hlt
cmp
hlt
in
xchg
add
cmp
mov
cmc
notl
jne
clc
push
cmc
inc
mov
ret
mov
nop
add
nop
add
rcll
add
pop
adc
jo
add
xor
in
daa
mull
push
lock
or
xchg
lea
adc
es
add
sbb
inc
lock
sbb
cmp
mov
adc
and
in
mov
in
cmp
or
xchg
mov
inc
lahf
mov
and
add
adc
push
sbb
mov
fisttpl
mov
inc
add
in
mov
push
mov
sub
xlat
adc
pushf
or
push
mov
jle
dec
jb
jbe
xchg
add
add
dec
cs
in
mov
inc
leave
mov
push
sahf
pop
enter
cmp
cltd
clc
xchg
test
es
sbb
sbb
xchg
test
xor
add
sbb
inc
rcrl
ds
pusha
fisubrs
mov
push
fsubrs
inc
mov
add
dec
mov
orb
inc
sbb
add
loope
jmp
ret
pop
ret
push
mov
xchg
js
pop
les
insb
enter
sub
xchg
repz
pop
lea
sbb
out
inc
or
test
dec
test
fsts
xchg
pusha
mov
leave
shlb
sbb
mov
sbb
arpl
sti
in
or
popa
add
es
inc
mov
and
sub
push
adc
adcl
pusha
adc
subb
movsb
cmc
fcmove
daa
pop
lods
dec
cmpsb
sbb
or
outsl
adc
daa
lds
mov
or
insl
cmpsl
push
cmpl
pop
je
inc
push
dec
pop
sub
loope
das
aaa
xorl
ficoms
clc
lods
in
jne
push
push
add
mov
cmp
je
jmp
and
adc
jmp
sbb
mov
shrb
or
nop
aaa
popf
testb
xor
mov
push
dec
orb
sbb
xchg
pop
xor
popf
pop
mov
lret
add
jno
leave
shlb
cltd
inc
loopne
xor
aam
rorb
inc
cwtl
adc
je
lea
mov
lcall
push
cmpsb
cmpl
xchg
fs
jmp
sbb
jecxz
enter
add
jecxz
sbb
jle
cmpsl
movsl
pop
adc
rcrl
pusha
sub
jne
popa
test
aaa
test
cmp
into
pop
sbbb
movl
imul
and
push
inc
add
gs
mov
clc
xchg
xor
add
push
inc
rolb
sbb
mov
cmp
cld
adc
push
data16
fcompl
xor
daa
pop
pop
or
pop
roll
test
fldt
xor
mov
insb
pushf
loop
imul
mov
ret
mov
das
je
jbe
pushf
or
cltd
xchg
mov
and
mov
nop
ret
add
jno
es
and
pop
pop
inc
dec
in
push
setg
cmpsb
mov
int3
outsl
lret
fwait
dec
or
dec
cmc
add
adc
jnp
enter
and
xchg
arpl
add
sbb
add
push
lea
lret
and
jne
shlb
ljmp
repnz
pop
cmpl
adc
pop
add
mov
pop
dec
push
cmp
fadds
or
rcll
aas
push
sub
lds
fimull
adc
pop
or
sahf
enter
ljmp
jne
mov
push
divl
xchg
cli
xor
dec
pop
shll
cld
popa
cmp
and
aad
mov
dec
in
add
inc
daa
fdivs
push
cmc
fsubrl
and
jecxz,pn
sbb
ret
loop
sbb
cld
jne
jmp
mov
push
sbb
jl
xor
dec
or
adc
inc
out
je
leave
mov
nop
cmpsb
push
jns
jne
iret
and
pop
or
or
pop
push
dec
and
and
je
add
cs
jno
ret
clc
je
cmp
add
sub
jnp
jmp
int
push
lcall
dec
scas
popf
jmp
aaa
cs
shrb
popf
data16
gs
add
inc
inc
rolb
lock
add
rorl
dec
cmpsl
loope
inc
loopne
push
adc
adc
into
pop
loope
sbb
aaa
scas
or
adc
or
sbbl
add
push
negb
sbb
andb
xor
lret
out
push
sarl
add
or
jo
adc
or
mov
add
pop
push
push
insb
jnp
jecxz
test
je
inc
jo
daa
out
ja
xchg
rol
popl
arpl
mov
rorb
js
push
or
loop
xchg
jmp
sbb
xor
sub
mov
movsb
hlt
lcall
adc
jg
jmp
jno
mov
mov
mov
popa
lea
movl
int3
pop
dec
pop
mov
rol
cmp
adc
mov
mov
movsl
inc
ja
add
outsl
in
sbb
push
ss
ja
push
cmp
cltd
xor
sub
cmp
int3
movsl
add
aad
cmp
insb
sub
pop
mov
push
outsb
sbb
dec
mov
repz
sub
test
lea
lods
lahf
xor
dec
push
filds
mov
and
pop
dec
popa
inc
xorl
xor
popa
cmp
mov
arpl
call
pop
add
adc
fiaddl
fsubs
addl
jbe
pop
add
sub
push
add
xlat
es
add
clc
push
mov
dec
add
imul
xchg
and
or
mov
pop
mov
sbb
inc
push
dec
lcall
and
adc
mov
push
add
mov
cmpsb
or
popa
test
inc
in
sub
xchg
push
ret
incb
pop
and
pushf
cmp
mov
cmpl
push
bound
sarl
movl
pop
adc
std
bound
inc
add
sub
mov
sbb
push
orb
mov
lea
lock
clc
push
je
sbb
rolb
jmp
or
add
cmp
ja
lcall
loope
push
shll
pop
adc
push
rcrb
xchg
movsl
jmp
sbb
loopne
fld
mulb
add
jne
mov
sbb
dec
mov
testl
sbb
or
push
sbb
in
dec
add
push
inc
add
loope
jge
adc
and
fdivs
sub
loope
bound
push
neg
inc
xchg
cmp
add
js
outsb
push
cmpl
jmp
lock
ret
and
adc
sbb
or
adc
push
dec
sbb
push
or
add
sbb
jecxz
jl
test
push
js
jno
add
movsb
out
cwtl
mov
out
mov
loopne
cmpl
cs
inc
das
jl
addr16
test
add
repz
mov
xchg
outsb
sub
cmp
xchg
mov
mov
push
es
divb
push
mov
lea
mov
dec
inc
insb
pop
push
arpl
movsl
mov
sub
add
sarb
push
push
imul
xor
xor
push
ret
fiaddl
decl
mov
pop
pop
orb
faddl
out
dec
jmp
out
or
or
out
mov
adc
rolb
test
or
lea
test
cs
mov
pop
adcb
out
dec
loopne
inc
test
pop
xchg
in
xchg
call
pop
xchg
gs
add
mov
mov
push
sbb
sti
pop
lock
add
mov
and
lock
mov
jo
out
andl
data16
xor
push
bnd
rorb
cmc
mov
inc
pop
add
in
incl
adcl
dec
pushf
iret
je
push
ss
inc
rcll
mov
push
pop
adc
ds
sub
xor
lret
mov
les
cmpsl
dec
xchg
pop
vmwrite
cli
stos
in
cmp
popa
adc
ss
mov
adc
aas
mov
je
xor
mov
sub
mov
sbb
or
lock
jmp
rolb
inc
jg
ds
xlat
sbb
mov
mov
roll
pop
enter
inc
mov
sahf
cs
or
and
rcl
push
pop
out
mov
xchg
jle
add
adc
sbb
jge
cwtl
and
add
into
les
adc
sub
lods
dec
pop
es
pop
sbb
pop
test
nop
popa
add
jno
dec
push
dec
jmp
and
movsb
sub
add
notl
sbb
or
jne
mov
sarb
cltd
js
add
jo
push
pop
adc
mov
adc
daa
jns
js
or
lds
mov
and
cmp
dec
nop
bound
push
and
mov
mov
jmp
mov
insl
and
sbb
das
nop
xchg
adc
sbb
and
lock
dec
gs
fsts
cmp
cmp
dec
sbb
push
xor
jne
flds
or
sub
sub
pop
inc
sub
jl
or
out
adc
xchg
sub
mov
shlb
push
push
push
mov
mov
test
add
and
jmp
mov
ss
popa
fisubrl
sub
xchg
push
popa
sub
mov
adc
adcl
xor
rcr
aaa
cmpl
jo
xchg
and
sub
push
and
rcl
nop
ljmp
jmp
lea
dec
cmc
sbb
xor
push
and
pop
fisttpl
test
push
adc
push
movsb
sahf
push
mov
or
cmp
xchg
mov
cmpl
mov
and
inc
inc
je
ja
jge
fmuls
je
xor
loop
add
aam
rep
mov
pop
sub
hlt
xchg
sbb
and
pop
adc
sbb
xor
xchg
inc
sub
test
das
shlb
push
mov
ds
jo
rol
jge
push
in
adc
push
sahf
loop
xchg
push
mov
pushf
test
sbb
mov
movsb
scas
mov
inc
mov
bound
sti
and
push
sbb
and
inc
push
nop
sub
cmp
inc
inc
mov
adc
lahf
and
sti
cwtl
inc
add
jmp
lods
push
fwait
pop
sbb
sbb
mov
inc
dec
pushf
mov
and
xlat
test
sbb
mov
fcmovnu
pop
and
sbb
out
dec
mov
sbb
dec
mov
add
sub
test
adc
xchg
inc
sbb
jno
or
mov
fldlg2
add
into
arpl
cmp
pop
stos
test
xlat
dec
ret
sub
pusha
inc
mov
mov
xchg
mov
fwait
push
orb
push
les
sti
push
imulb
cmp
inc
pop
mov
sti
adc
inc
hlt
and
decb
adc
lock
adc
mov
sbb
add
mov
das
arpl
jo
movl
ret
adc
mov
rcll
pop
out
jmp
and
push
dec
xchg
add
test
adc
push
adc
mov
cmpsb
xchg
fwait
add
lds
icebp
mov
xchg
dec
pusha
push
or
add
push
movsb
sbb
add
fwait
mov
cmp
or
pop
outsl
mov
add
or
mov
or
push
nop
mov
adc
mov
test
or
lds
push
pop
mov
jne
mov
insb
data16
cmp
shll
mov
adc
push
inc
subl
mov
cmp
pushf
add
inc
adcl
je
pusha
sbb
add
sub
sbb
xor
fbstp
xor
sub
mov
or
fcom
jl
mov
loopne
lret
jno
shrb
add
lods
add
lods
push
jae
fsts
xchg
imul
mov
and
imul
inc
outsl
clc
ds
dec
arpl
mov
cmp
clc
cmpl
mov
rcll
lcall
ret
push
sarl
dec
xlat
inc
add
ja
inc
xor
outsb
cmp
enter
inc
xchg
lods
sbb
aad
and
push
sbb
inc
pop
sub
and
movsb
inc
scas
push
push
mov
jbe
lea
inc
rcl
add
movsl
pop
filds
xor
pop
loopne
sbb
jo
add
dec
pop
add
jbe
mov
pop
mov
addl
adc
outsb
adc
jae
push
mov
das
push
push
or
mov
xor
adc
shlb
aam
popf
add
fdivl
adc
rcr
inc
add
not
arpl
and
adc
mov
fstl
fsubr
cmp
or
jno
push
cmpsl
into
dec
jnp
jmp
adc
inc
nop
sbb
or
inc
aad
xchg
pop
dec
jmp
pop
push
testb
subl
xor
in
test
add
fisttpll
cmp
xor
add
in
jno
or
push
cmovl
cmp
arpl
jb
cwtl
into
inc
aaa
add
adcb
insb
add
sbb
insb
lds
mov
ret
inc
xchg
cmc
dec
daa
dec
add
sbb
push
test
jmp
mov
add
fisubrs
inc
out
or
outsb
and
shrl
test
pop
adc
inc
loope
and
std
cmp
dec
lods
push
add
dec
popf
mov
adc
add
push
add
in
nop
mov
mov
movb
neg
adc
mov
sbb
push
inc
push
popa
repnz
pop
push
add
pusha
test
dec
rcll
dec
outsl
cmp
mov
fstpl
mov
inc
add
daa
add
inc
xor
dec
sbb
idivl
js
fcoml
fcompl
inc
mov
pop
test
jb
rcrb
xchg
popf
jl
add
push
pop
fidivl
or
cltd
xor
mov
daa
outsb
cmpsl
jne
rcrl
shr
in
test
mov
and
mov
out
mov
test
adc
repnz
sub
push
add
xchg
or
inc
imul
lds
out
dec
les
inc
je
dec
lcall
repnz
add
jns
jb
or
inc
and
and
sarb
dec
sbb
insl
shlb
jmp
jmp
jne
push
sar
add
shrl
mov
or
add
icebp
mov
popa
xor
es
incl
add
addb
mov
mov
sbb
bound
add
fadd
sahf
frstor
cmp
and
lock
gs
and
cltd
dec
clc
dec
sarb
pushl
shrb
and
dec
inc
mov
add
mov
push
gs
jl
dec
lea
sub
test
xor
addr16
cmc
cmp
jl
sub
setge
mov
push
test
rcrl
adc
pop
fwait
push
cli
daa
mov
sub
ret
popf
xchg
imul
stos
cmp
cmp
push
clc
sub
mov
repz
mov
and
clc
jg
add
aam
inc
std
add
cltd
push
scas
mov
inc
jmp
pushf
add
jb
roll
scas
mov
adc
fiaddl
movl
jae
pop
jne
test
inc
fsubs
scas
cld
sub
sar
cltd
roll
aaa
push
xor
cmp
cmp
xor
loopne
xor
mov
mov
cs
or
add
addl
and
addb
or
movsb
ja
push
les
inc
mov
push
mov
into
jp
push
pop
sti
jo
jmp
jne
cmp
push
pushf
pop
adcb
sub
adc
pop
inc
shlb
adcl
add
inc
popf
repz
and
cs
adc
adc
ss
nop
cmc
add
out
jne
mov
sub
inc
pusha
sub
mov
movsb
mov
lods
add
daa
inc
inc
jbe
fadds
sbb
jmp
inc
jge
fs
pop
gs
mov
inc
or
insb
push
lods
sbb
in
or
lds
rcr
loope
je
loope
movb
pop
push
mov
pop
fwait
jmp
fimuls
or
dec
adc
mov
aas
dec
mov
in
cmp
mov
cmp
jmp
cmp
imul
mov
xchg
sti
mov
sarb
dec
adc
std
jmp
and
cmovg
pop
xchg
stos
add
cmp
cmp
adc
xchg
adc
xchg
ja
push
subl
jo
rcl
jae
pop
mov
daa
leave
sbb
out
inc
and
gs
mov
push
cld
popf
add
and
test
mov
movsb
aaa
xchg
xchg
stos
in
or
cmpsl
push
xchg
loopne
shlb
sbb
inc
jne
jb
dec
aaa
xchg
and
aam
jae
jmp
or
cmpsl
test
movsl
ret
sahf
mov
or
add
daa
xchg
mov
adc
inc
jo
jno
jmp
sbb
jne
and
push
call
dec
adc
imul
pop
ja
inc
add
adc
push
add
jns
gs
inc
stc
push
pushf
out
test
cmp
clc
push
push
add
add
xchg
scas
adc
push
mov
add
jmp
ret
outsb
call
xchg
jmp
push
sbb
inc
lret
inc
das
loop
xchg
inc
ss
pop
sbb
sbb
aam
mov
inc
pop
add
insl
and
mov
or
pop
or
sub
adc
in
addb
jmp
mov
xor
cmpsl
xor
xor
xorb
adc
and
loopne
add
sbb
arpl
adc
cmp
xchg
int
adc
sbb
push
jecxz
shrl
pop
add
fistpll
ret
in
sti
test
add
js
movsl
sbb
or
out
pop
and
mov
cmp
mov
test
fidivs
sbb
out
mov
fiadds
cmp
xchg
xchg
adc
adc
mov
mov
xorb
jns
adc
dec
loope
push
inc
add
xor
xchg
flds
mov
mov
fdivs
xchg
adc
repz
push
xchg
pop
jbe
rcl
in
cmp
xor
adc
and
test
fimuls
in
mov
xchg
call
jge
mov
push
inc
sub
mov
adc
js
fs
nop
xchg
mov
jno
and
pop
or
lcall
pushf
out
cld
mov
pop
loop
mov
movsl
or
rcrb
add
xor
aad
popf
pop
adc
jo
cltd
adc
push
mov
add
shlb
inc
paddusb
arpl
ljmp
push
adc
xor
enter
and
push
sub
xor
insb
inc
shl
fcmovnb
push
lock
push
mov
dec
push
ja
push
push
sahf
das
jne
inc
add
lahf
sbb
add
add
popa
popf
mov
subb
add
push
dec
push
add
mov
cmpsb
adc
push
ret
sbb
push
mov
stos
pop
or
shll
push
rcll
or
dec
push
test
push
dec
pop
xchg
sbb
dec
dec
nop
sbb
orl
pop
lock
into
and
inc
cmp
xor
popf
sbb
adc
inc
pop
add
xchg
fcmovnb
add
and
iret
or
ret
cmpl
lods
dec
xchg
sub
imul
dec
push
stos
xchg
push
pushf
add
push
out
push
dec
mov
add
xor
daa
add
jge
push
push
sbb
sbb
outsb
in
push
fisubs
or
mov
call
or
cmp
movsl
les
roll
mov
or
xor
or
pop
ffree
add
or
dec
inc
push
scas
ret
js
mov
add
iret
mov
xor
sub
shll
add
jge
in
push
or
push
add
loopne
mov
daa
mov
enter
in
insl
cmp
jmp
and
adc
xchg
cmp
shlb
mov
loopne
sbb
in
ret
daa
loope
xchg
daa
sbb
cmp
test
orl
cmpsl
ret
lock
aas
je
fwait
notl
and
mov
orl
mov
inc
test
shl
inc
push
sub
ret
out
cld
jmp
clc
mov
push
call
lods
ja
or
repnz
bound
shr
mov
les
inc
sbb
enter
je
pop
js
inc
lea
cmpsl
daa
scas
dec
and
sbb
decl
sub
mov
mov
mov
and
add
dec
ret
fs
cmp
and
sbb
adc
xor
hlt
xchg
mov
xchg
mov
jne
movsl
dec
sbb
dec
add
xor
in
push
push
mov
mov
ret
inc
push
fisttpll
and
adc
dec
fsubr
cmp
pop
or
xor
ffreep
jno
pop
jmp
arpl
adc
mov
sbb
pop
fnstcw
cmp
pop
mov
enter
int3
aas
mov
add
es
insb
outsl
or
rolb
adc
and
fs
jnp
cmp
mov
xlat
insl
mov
or
pusha
es
jg
popa
add
hlt
mov
popa
pusha
sub
fimull
scas
test
loop
in
jo
mov
push
and
cltd
in
cld
cld
nop
and
in
add
cld
adc
cld
cld
sub
arpl
je
add
ficompl
xchg
pop
aas
inc
jno
cmp
mov
andl
push
lock
and
jo
add
dec
jmp
pop
or
mov
xchg
test
lahf
pop
mov
outsb
cmp
or
aam
rcrb
sub
mov
rcrb
and
sti
jmp
jg
pop
adc
adc
test
jno
push
imul
mov
push
xchg
xor
mov
cmp
test
pop
jno
movb
jecxz
pop
lea
inc
or
rorb
pusha
aam
xor
mov
mov
aaa
push
or
mov
jo
mov
mov
mov
shll
jne
add
nop
popa
daa
mov
push
inc
push
sbb
xor
dec
push
push
mov
pop
mov
and
jno
dec
int3
xchg
mov
dec
push
xor
add
mov
stos
test
push
fildl
jb
jo
pop
dec
dec
and
dec
arpl
fiaddl
loopne
pop
pop
mov
fisubrl
push
pop
pop
jb
xchg
pop
dec
dec
es
xchg
ss
push
jno
pop
xchg
cmp
sbb
sbbb
pop
pop
sbb
inc
fs
cmpsb
rol
xchg
xchg
lea
dec
scas
ror
pop
or
xor
mov
inc
outsl
add
adc
sbb
nop
cmp
jno
inc
adc
xor
xor
push
leave
mov
push
xchg
addr16
mov
inc
pusha
mov
hlt
mov
jl
nop
push
add
daa
cmp
mov
sub
fwait
pop
jbe
insb
push
jg
pop
sub
pushl
outsb
xchg
test
pop
push
dec
ret
xor
clc
add
xchg
clc
or
jmp
clts
push
cmp
xchg
push
sub
mov
gs
sub
dec
cmp
push
in
addl
xor
jg
xlat
inc
pop
mov
push
push
xorl
daa
xchg
in
and
mov
cmpsl
outsb
in
std
xchg
adc
imul
orl
pop
push
xchg
mov
xchg
nop
ss
inc
and
es
lock
orl
int3
push
lock
cmp
dec
jbe
popa
add
pop
xchg
aam
std
rorb
cmp
cmc
sbb
adc
mov
test
adc
xchg
mov
sub
push
sub
ret
cmp
dec
scas
loopne
fsubrl
cmp
sbb
rcpps
in
std
xchg
xchg
sbb
insb
js
addl
loopne
xchg
pop
movsl
inc
dec
ret
jo
pop
aaa
addl
jo
negb
mov
inc
sbb
jnp
pop
xor
cmp
add
push
insb
mov
and
xchg
and
das
add
ret
rcll
mov
and
cmp
js
pop
aam
outsl
insb
sbb
mov
scas
pop
xor
rcll
push
andl
sbb
test
int3
jne
cmpl
std
mov
sub
adc
dec
push
pop
lahf
xchg
add
or
sar
xor
cmp
jmp
push
or
or
mov
call
daa
pusha
adc
shl
sbb
push
xor
jae
add
mov
and
and
cmp
inc
cmp
mov
add
cmc
add
mov
pop
jl
xchg
and
lock
pusha
stos
xchg
and
in
or
jne
lds
jnp
and
pop
daa
test
inc
dec
fwait
dec
add
jle
sbb
xor
push
fnsave
push
mov
outsb
push
xchg
dec
or
push
add
mov
and
xor
inc
and
sbb
dec
pushf
jbe
jmp
js
mov
cmc
sub
test
leave
jne
xlat
outsl
xor
enter
dec
lcall
fwait
and
cmp
mov
out
dec
sub
pop
inc
pop
popf
nop
xor
pop
call
cld
icebp
or
repz
and
pushl
lahf
and
pop
mov
mov
mov
push
testb
inc
add
mov
mov
test
add
lcall
jmp
cld
inc
cmpsb
rcr
das
pushf
shr
add
and
rcl
mov
aam
mov
mov
dec
addr16
sub
lcall
es
push
dec
jae
das
mov
cld
sarb
and
push
push
es
adc
push
sub
imul
pop
mov
lock
hlt
push
pop
cmpb
add
insl
adc
mov
push
cs
cltd
shl
push
lock
cmp
or
adc
ss
sbb
xor
pop
sub
adc
into
push
xchg
push
cmp
test
or
jne
dec
stos
inc
mov
sub
and
jle
jl
adc
lret
mul
xchg
shll
jo
mov
cli
es
mov
ret
or
incl
pop
cld
pop
add
jmp
sub
inc
sub
pop
pusha
jle
sbb
imul
and
es
lock
clc
add
push
shl
es
rcr
scas
cwtl
les
cmp
lods
sbb
enter
insb
pop
xchg
mov
xchg
sbb
aaa
adc
ret
pop
jl
pop
pusha
add
jl
test
lock
jns
cmp
or
inc
mov
js
outsl
sbb
mov
and
sahf
pop
hlt
je
clc
add
imul
hlt
sub
push
xlat
inc
fs
cmp
xchg
test
insl
unpckhps
sub
mov
pop
shll
sub
outsb
nop
je
insl
filds
add
lahf
mov
shrl
sbb
xor
xchg
popa
push
rcl
cltd
sbb
xchg
pop
lea
test
sbbl
lock
cmpsl
and
xchg
xor
dec
add
and
adc
inc
jae
add
xchg
adc
add
sbb
or
dec
dec
clc
xlat
add
and
flds
mov
jmp
int
and
cmp
sbb
dec
and
push
in
fiaddl
inc
xchg
enter
xor
jns
mov
lock
inc
stos
jno
fisubrl
add
or
sub
jne
rorb
mov
push
inc
leave
pop
dec
call
sbb
xchg
pop
ljmp
or
sub
mov
je
or
push
sbb
test
or
xchg
movsb
mov
cmp
mov
cmp
stos
movsb
or
push
push
mov
cmp
jnp
lret
adc
enter
push
mov
andb
cmp
shrb
adc
rclb
push
add
mov
iret
aad
cwtl
loopne
xchg
jns
xor
xor
dec
xchg
xor
adc
pop
clc
jne
push
jbe
mov
movb
xchg
mov
cmp
adc
xchg
flds
cld
sbb
jno
xchg
xchg
je
call
mov
ret
push
iret
leave
je
pop
mov
mov
add
mov
test
add
shl
jmp
fdivrl
push
loope
ret
ret
fsubr
and
or
leave
movsl
xchg
or
mov
popa
dec
loopne
or
dec
leave
cmpsb
adc
dec
mov
xor
cs
add
or
and
pop
dec
cmp
lret
shlb
addl
push
pop
call
xor
xor
movb
and
lods
and
or
inc
pop
adc
inc
js
popa
mov
xor
jo
cmpsb
or
mov
push
push
jl
or
adc
rcl
pop
pop
or
jge
pslld
cwtl
add
dec
mov
pop
fadds
mov
shrb
ficoml
mov
call
cmp
lock
add
mov
sti
repz
pop
xlat
sub
xchg
mov
rorl
xchg
push
imul
sahf
adc
daa
xchg
mov
dec
dec
dec
inc
in
ss
fiaddl
pop
pop
and
andb
push
ror
rcrb
dec
pop
mov
pop
push
test
push
or
popf
fldcw
sbb
sbb
inc
sbb
xchg
ja
fs
lret
sbbb
mov
cmp
push
push
jl
out
js
inc
add
cmpb
arpl
cmp
je
ret
dec
rcll
dec
adc
xchg
dec
rorb
pusha
fldl
cmp
nop
cwtl
add
das
add
out
aam
andl
sbb
and
dec
xchg
bound
imul
leave
and
or
mov
outsb
sti
push
outsb
fidivrs
sbb
inc
jbe
subb
or
cmp
mov
jne
and
inc
stos
sbb
adc
rorb
lods
repz
js
test
cmp
and
adc
movsb
add
xchg
fwait
and
or
sub
jbe
inc
sbb
add
fwait
repnz
enter
mov
add
shll
sub
and
dec
jnp
aam
es
xchg
mov
rolb
cltd
inc
adc
or
daa
dec
lea
xchg
daa
mov
jae
sbb
push
push
or
jne
xor
add
inc
pushf
lret
jae
fistpl
add
daa
mov
sub
js
adc
add
es
or
fsubs
pop
bound
jmp
sti
adc
or
mov
xor
pop
dec
mov
sub
movsl
aad
pop
aad
xor
xchg
and
repz
add
mov
inc
cmp
pop
and
pop
das
or
lock
and
sub
dec
push
add
add
pop
loop,pn
xor
sub
add
jp
pop
inc
lahf
dec
or
xor
aad
arpl
lods
incl
pop
xchg
mov
mov
pop
dec
in
ja
ss
ret
push
push
fs
mov
ljmp
ss
and
sbb
push
comiss
je
add
loopne
and
lea
jne
inc
addb
push
lock
jbe
mov
cmp
test
in
xor
adc
dec
adc
sti
pusha
cmp
test
aam
sbb
jl
push
adc
pop
pop
ja
addr16
or
popa
test
or
push
inc
push
inc
sub
push
es
sbb
xor
inc
and
and
xchg
jle
loopne
and
lahf
inc
test
add
in
jg
in
mov
mov
dec
jbe
add
in
xor
push
push
pop
int3
adc
xchg
or
pop
inc
and
fcomp
test
sub
add
sub
daa
pop
or
push
dec
sbb
call
sub
jnp
mov
sarl
mov
insl
aam
sbb
daa
sti
lods
xchg
jg
add
out
push
jg
adc
dec
or
enter
neg
and
pop
int
adcl
mov
inc
andl
sti
sbb
call
pop
fiadds
jle
push
sub
sbb
repnz
mov
jg
push
imul
sub
nop
iret
mov
arpl
jb
jns
add
sub
adc
in
and
dec
icebp
into
push
stc
inc
add
xor
andb
insb
shl
andb
pop
stos
sub
xchg
mov
outsl
push
scas
icebp
jbe
dec
rcrb
lock
sbb
pop
xor
mov
subb
aam
dec
cmpxchg
clc
movl
mov
cld
js
sbb
pop
insb
mov
addr16
lret
out
xor
bound
leave
in
push
xchg
cmp
enter
add
xor
int3
cltd
adc
fsubl
inc
and
sub
push
lods
imul
mov
scas
or
sbb
fildl
jbe
iret
adc
mov
repz
sbb
push
lods
inc
xor
lsl
sbb
jbe
mov
xchg
add
bound
fidivrs
add
push
pusha
fidivrs
pop
xchg
mov
mov
mov
dec
mov
subb
loope
daa
inc
mov
mov
xor
repz
xchg
push
rcl
jge
rcll
add
push
outsb
push
fcoml
xor
je
jno
or
xor
cmp
xor
push
dec
mov
push
dec
out
and
ljmp
sub
in
mov
adc
add
mov
add
lret
sahf
jecxz
push
cmp
test
xchg
adc
push
sub
fwait
sbb
aaa
or
push
rcrl
or
ret
mov
pop
mov
and
xor
sbb
jbe
cmpsb
xor
push
test
jge
mov
insb
nop
push
push
add
sub
mov
sbb
push
insl
bnd
inc
jnp
das
jl
bt
mov
jmp
arpl
add
jge
jmp
xor
mov
imul
cmp
cmp
adc
repz
pop
mov
adc
push
or
inc
jnp
mov
add
mov
jmp
je
xor
push
dec
out
gs
rcrl
push
add
ret
mov
mov
inc
push
test
xlat
push
pop
mov
in
or
xlat
cli
cmp
xchg
dec
adc
cld
inc
sub
inc
push
inc
mov
inc
push
inc
push
dec
xchg
cmp
pop
push
ret
jmp
push
outsl
inc
call
and
sbb
jo
add
call
push
cmp
and
enter
icebp
or
push
fldenv
cwtl
add
rcll
and
add
dec
iret
adc
xchg
psubd
cmp
outsb
js
mov
push
xchg
sbbb
push
add
ljmp
jmp
clc
movsb
out
push
clc
xchg
test
sbb
sbb
xor
and
lds
jg
push
lods
pushf
pop
and
jmp
sahf
add
mov
jmp
pop
xchg
decb
test
or
add
inc
adc
js
insl
mov
dec
mov
sbb
mov
xchg
adc
in
mov
mov
mov
mov
inc
mov
cmp
add
mov
jnp
pop
inc
cmpb
adc
mov
mov
aam
mov
scas
inc
clc
add
cmp
es
pop
fidivrs
mov
sbb
test
std
push
mov
sbb
sbb
pop
lds
jne
pusha
mov
mov
push
dec
cwtl
addl
push
daa
or
push
adc
add
mov
pop
js
and
rcr
cli
fiadds
lock
pop
pop
mov
fs
and
imul
arpl
mov
inc
scas
ds
int3
mov
ljmp
outsl
add
or
ror
adc
cmc
rorb
dec
pusha
add
je
push
mov
add
shll
add
fs
and
sub
adc
or
push
stos
jns
faddl
fcomps
dec
rclb
hlt
movb
and
mov
or
add
imul
sub
sbb
arpl
mov
in
aam
and
cmp
subb
sbb
cs
movsb
push
test
icebp
jmp
pop
and
subl
push
cmp
mov
lret
and
in
push
sub
nop
xchg
mov
adc
and
test
cmp
sub
and
jne
xchg
test
push
jge
mov
mov
fldl
adc
or
adcl
xor
es
popf
ret
sbb
inc
loop
and
adc
push
insl
loopne
scas
cmpl
sbb
and
sti
rcll
mov
dec
popl
movsl
clc
inc
int3
push
fs
lea
stc
orb
mov
adc
add
inc
push
push
push
adc
cld
pop
loopne
cwtl
sbb
pusha
pop
cmpsb
and
or
push
add
outsb
rorl
lds
ffree
mov
daa
popl
pop
sbb
push
test
addl
mov
inc
daa
test
inc
insb
pusha
jnp
aam
add
cmp
lcall
sub
push
adcb
pop
push
sub
shlb
je
mov
hlt
test
or
pushf
hlt
jecxz
sahf
cmp
and
dec
sub
push
or
call
inc
mov
lret
pop
push
icebp
aam
mov
scas
lock
sub
sub
sar
push
shll
xchg
xlat
push
jp
test
faddp
xor
shlb
dec
mov
test
add
movsb
fcoml
gs
push
xor
nop
inc
sbb
sti
inc
add
cmp
or
inc
xchg
and
cmp
mov
in
lods
nop
fwait
imul
push
fs
dec
imul
push
push
xchg
daa
in
clc
clc
iret
nop
inc
mov
add
xchg
adc
xchg
jp
sub
push
adc
lgs
cld
jbe
mov
inc
adc
nop
inc
push
mov
iret
test
inc
pmulhuw
mov
or
and
clc
add
push
sbb
iret
das
jmp
cmp
inc
pushf
or
xchg
mov
dec
push
imul
jecxz
and
data16
lods
jnp
lret
xchg
test
es
and
repz
add
lret
xchg
dec
mov
dec
inc
add
add
pop
inc
jmp
out
push
frstor
inc
dec
jmp
add
push
push
inc
insl
xor
test
roll
jnp
pop
cmp
loope
or
idivb
xchg
movsl
pop
lock
adc
dec
push
inc
dec
addb
addr16
jne
push
call
push
adc
jg
sbb
adc
dec
push
jns
div
lods
enter
mov
push
mov
inc
pop
inc
pushf
or
lods
sub
enter
sbb
sbb
add
ficomps
mov
outsl
xor
jb
iret
adc
adc
add
inc
das
inc
pop
push
aas
cmp
xchg
daa
add
jns
add
shlb
inc
insl
push
dec
push
sub
cmp
fisubrs
adc
insl
mov
adc
and
cwtl
nop
xchg
jl
push
jecxz
adc
adc
cmpl
xchg
mov
mov
inc
popa
adc
push
aaa
nop
test
aam
add
cmp
add
cmp
jne
dec
add
push
adc
dec
cmp
add
adc
add
lock
and
adc
pushf
sbb
fldenv
or
dec
mov
fcomip
add
leave
push
dec
dec
bound
xchg
add
sti
pop
pop
and
pop
test
fildll
inc
push
es
int
test
xchg
add
or
ja
xchg
inc
add
mov
test
das
pop
pop
cmp
ror
xorb
sbb
or
sub
cmc
pop
ret
jmp
jmp
cmp
imul
sbb
pop
mov
or
lea
pusha
or
jecxz
cli
outsl
rorl
jmp
sbb
test
and
dec
cmp
xchg
inc
cmc
movsb
xchg
add
hlt
popa
push
popf
push
inc
push
cltd
cmp
cmpsl
mov
xor
sbb
inc
xchg
mov
or
imul
mov
loop
sbb
sahf
insb
sbb
rorb
pop
push
cmp
add
movsl
push
push
addl
or
xchg
mov
xchg
mov
ljmp
xchg
or
clc
les
lock
outsb
xchg
sar
push
cmpsl
jno
mov
mov
clc
insb
mov
fcom
popa
mov
pop
cmpsb
data16
jmp
adc
shlb
xor
cmp
sub
dec
sub
dec
loopne
xchg
and
push
push
rol
and
jo
inc
adc
dec
cwtl
mov
stc
or
sarb
fucomp
or
cmp
jne
xchg
add
fstl
push
add
or
mov
mov
fiadds
popa
dec
loop
fdivrs
repz
sub
or
mov
xchg
daa
test
mov
inc
sarl
add
mov
inc
jmp
inc
and
insb
lods
dec
gs
stos
sub
repz
pop
push
popa
lahf
lock
xchg
aas
or
and
push
inc
sbb
xorb
or
pop
xor
rclb
inc
popf
add
or
mov
arpl
dec
inc
xlat
inc
adc
fcompl
movsb
daa
jmp
pop
addb
sbb
pop
repz
mov
pop
and
stos
xchg
test
and
insb
xchg
or
and
sbb
sub
dec
movsl
and
mov
sub
test
sub
inc
and
clc
inc
pop
lock
inc
jne
addl
inc
mov
jne
cmp
push
dec
and
add
and
xor
sar
imul
in
mov
lods
hlt
cmpsb
lods
sub
inc
and
rcl
sbb
loope
pop
fiadds
rolb
adc
mov
mov
in
adc
sub
scas
add
add
fwait
mov
fwait
mov
xor
sub
inc
call
orb
sub
inc
xor
mov
lds
je
sub
je
outsl
pop
or
jo
and
dec
notl
pop
sahf
movsl
into
clc
shlb
pushf
jae
mov
jne
test
ret
ret
loopne
mov
jge
push
mov
sub
cwtl
arpl
sub
adc
or
pusha
add
popa
inc
popa
lret
pop
aam
push
jle
push
push
or
movsb
inc
repnz
sub
leave
movsl
adc
je
xor
stc
push
xchg
inc
inc
jle
stos
cmp
and
lahf
pop
cmp
test
adc
out
int
ret
mov
mov
popf
add
adc
mov
mov
inc
gs
mov
or
jge
in
jns
int
paddw
mov
pop
and
andb
int3
outsl
lds
in
lcall
sub
insb
addr16
dec
cli
aas
jmp
jo,pn
mov
mov
mov
cmp
ja
xchg
mov
fcomps
loop
xchg
daa
leave
js
in
sti
mov
lea
iret
int
jnp
mov
test
enter
adc
jo
xor
repz
mov
mov
outsb
or
ficoms
mov
inc
pop
and
push
lea
or
cmp
aas
cmpsb
jecxz
jge
fisubrl
sbb
jecxz
les
int3
xor
sbb
repz
xchg
mov
xchg
mov
add
adc
push
stc
push
cmp
add
and
repnz
sub
push
cwtl
rclb
sub
fadds
pop
dec
lahf
ss
mov
fcomps
inc
jge
push
add
arpl
mov
arpl
out
push
adc
shlb
inc
xor
in
push
repz
les
fs
push
rcr
jmp
adc
push
or
jmp
add
fsubrs
lahf
push
aam
sbb
push
and
cltd
add
lahf
cmpsb
je
test
scas
movsl
xor
push
cmp
fiaddl
push
or
cmp
sub
push
frstor
adc
mov
adc
pop
addr16
mov
mov
js
je
xor
inc
orb
dec
inc
scas
std
paddw
cmp
je
test
aaa
vsqrtsd
sbb
imul
push
inc
sbbl
sahf
or
adc
add
adc
xchg
sub
mov
add
imul
lret
pop
adc
lock
sub
and
dec
xor
and
push
rolb
or
push
shl
add
jne
push
or
cltd
mov
ret
movb
add
mov
test
mov
sub
popf
pushf
or
inc
xlat
mov
int
sub
add
push
mov
sub
mov
jp
add
fsubp
insb
ret
addr16
fcompl
in
ljmp
mov
nop
hlt
push
dec
adc
adc
call
bound
xor
fs
fistl
decb
clc
stc
es
sbb
sti
pop
repnz
out
pop
jno
inc
add
jns
add
pop
outsl
ds
xchg
push
dec
insb
pop
sub
scas
adc
cmp
cmp
xchg
stos
movsb
imul
fs
ljmp
pop
xor
push
dec
pop
inc
mov
cmpsl
popf
jb
inc
outsl
je
pop
add
push
popa
xchg
add
lock
pop
or
inc
sub
rol
gs
adc
sub
dec
rorb
push
and
mov
ror
sub
push
aaa
sbb
popl
pushf
cmpb
mov
enter
or
or
xor
bound
adc
xorb
leave
inc
sbbl
and
in
pop
adcl
movsb
mov
fdivrl
std
out
movsb
hlt
and
popf
push
adc
pushf
pop
inc
xor
mov
xchg
cmp
xchg
popa
xchg
jle
adc
adc
push
das
sub
repnz
and
fdivs
cmp
hlt
out
push
mov
push
movsb
test
movsb
sarb
sbb
push
push
ss
shrb
pop
sbb
pop
aam
cmp
sahf
push
inc
cltd
xor
mov
test
inc
or
add
and
mov
xor
mov
aam
xchg
and
sub
fs
pusha
inc
nop
push
repnz
pusha
nop
subb
pop
xchg
sbb
push
leave
mov
arpl
outsl
mov
addr16
popa
pop
cmp
loop
adc
stos
push
xor
es
cs
pushf
test
mov
ja
adc
mov
push
loopne
aas
pop
mov
xchg
push
xchg
xchg
ficoms
addl
inc
je
or
mov
popf
cwtl
dec
cltd
mov
je
stos
ret
cmp
leave
pop
or
sub
fwait
or
jo
test
cli
add
jl
mov
or
dec
push
push
mov
shlb
enter
hlt
adc
inc
repnz
mov
cmp
insl
or
push
test
cmc
fistl
xor
and
dec
sbb
xor
jb
cld
sbb
ja
add
sbb
cmp
cld
inc
addl
jo,pt
push
push
mov
mov
rclb
call
out
addr16
je
aam
into
xor
js
outsl
and
aam
xchg
inc
js
xor
push
add
leave
or
test
imul
add
test
jae
and
flds
fisubrs
pop
cs
jne
jo
pusha
movsb
mov
jle
push
inc
mov
push
jno
in
insl
mov
inc
repnz
sti
test
hlt
jge
and
adc
jmp
cmpsl
sbb
push
lods
cltd
push
movsb
lret
sub
pop
xchg
sbb
pop
test
adc
aam
adc
out
xchg
jl
xchg
daa
stos
inc
mov
add
rol
and
jg
addb
pusha
pop
lea
pop
ret
add
sbb
push
aam
scas
movzbl
cmp
jle
nop
xorb
movsl
cmpsl
add
dec
mov
mov
cmc
test
in
inc
stc
xor
mov
push
mov
and
cmp
adc
daa
frstor
sub
cs
movl
adc
ret
in
mov
loopne
popf
push
cmp
je
cmpsb
xorb
aad
gs
aaa
js
movsb
xor
idivb
xchg
and
mov
and
inc
add
or
lcall
cmp
xor
in
push
add
push
aam
add
repnz
inc
shr
int3
inc
cli
or
and
es
fstl
jne
iret
rorb
inc
scas
or
mov
inc
adc
test
cmp
jne
cs
loopne
xchg
or
loopne
xchg
mov
sbb
data16
inc
pop
adc
adc
mov
push
or
push
or
shl
hlt
and
add
mov
or
jg
xor
movb
test
les
inc
rclb
mov
mov
push
lret
mov
cmp
scas
sub
sub
insb
std
psllq
or
mov
ret
movl
or
in
aam
call
mov
pop
ss
dec
add
add
jmp
mov
hlt
add
movsl
mov
pop
push
mov
add
fimull
or
insb
add
mov
nop
je
int
or
aam
repnz
negl
jo
adc
cs
push
sbb
add
lods
leave
mov
pop
test
xchg
mov
xor
xchg
xchg
and
adc
sbb
xchg
sarb
mov
movsb
gs
mov
dec
cmc
mov
fdivl
adcl
push
sahf
faddl
add
sbb
in
or
pop
call
xchg
mov
jb
jmp
xchg
in
lock
jle
or
cwtl
mov
rcrb
cmp
inc
inc
push
fildl
fiadds
out
cmp
jne
or
sub
sbb
das
jmp
in
in
push
or
enter
negl
jae
push
add
xchg
xor
and
pop
sub
add
insl
xlat
aas
jo
add
jnp
xchg
out
flds
cli
or
cmp
pop
sbb
jl
sub
cld
lahf
test
mov
addl
inc
mov
push
addb
lods
stos
or
and
out
lea
xor
and
xorb
add
out
push
inc
inc
lcall
clc
pusha
imul
inc
adc
or
and
lock
ret
stos
xchg
inc
xor
jo
adc
xadd
mov
aam
fcomps
pop
nop
loopne
jmp
cmp
adc
pusha
mov
xor
aad
adc
inc
lahf
rorb
cld
xlat
xor
add
mov
fs
dec
jge
cli
decl
mov
loope
cmp
je
cmp
jb
cmp
ja
pushl
sbb
push
cmc
jmp
pop
rcrb
mov
pop
fisttps
and
enter
fistl
imul
mov
or
movsl
lock
cld
mov
or
xchg
dec
jne
sub
stc
in
pop
mov
push
push
push
xor
push
or
push
mov
xor
enter
sbb
xchg
dec
ret
push
sbb
push
and
bound
mov
sbb
fs
add
pushl
cmpsl
add
dec
jecxz
subb
add
icebp
sbb
inc
mov
out
loop
push
inc
fisubl
dec
mov
ret
mov
sar
push
adc
or
insb
dec
xorb
fadds
iret
loopne
jmp
daa
xchg
daa
andl
mov
inc
or
mov
mov
pop
lds
orb
jo
mov
mov
mov
mov
xchg
outsb
mov
addl
imulb
sbb
and
inc
or
ret
loope
lret
or
mov
fimull
add
dec
movb
add
mov
adcl
and
sahf
push
mov
mov
or
pop
add
pushf
sti
in
push
xor
jl
sub
scas
mov
iret
mov
or
test
leave
in
pop
in
push
movntps
out
bound
pop
in
dec
cmp
push
cs
std
dec
dec
dec
dec
jmp
xchg
add
leave
mov
in
sbb
mov
cs
sub
insb
adc
wbinvd
sub
xchg
pop
xchg
and
mov
pop
es
mov
add
xor
arpl
inc
aad
ja
movsl
or
xchg
adc
xlat
mov
mov
or
frstor
adc
popa
arpl
outsl
sub
ss
and
mov
hlt
xchg
test
adc
leave
and
dec
fsubr
adc
clc
dec
xor
int3
add
dec
ja
dec
shll
arpl
sub
pop
insl
mov
or
aaa
int3
fiadds
sbb
jmp
ja
and
cmc
inc
pop
jmp
lfs
xor
or
cmpsl
sub
sub
pop
push
add
imul
dec
nop
call
data16
sub
jg
mov
xchg
cs
adc
test
sahf
mov
aaa
pushf
pop
sahf
or
outsb
fisttpl
mov
mov
dec
inc
es
sbbl
xor
pop
pop
fwait
inc
xor
lret
sub
or
addb
movsb
sbb
dec
aam
inc
addb
psrlw
adc
and
dec
insb
dec
pop
test
inc
loopne
aas
in
adc
add
dec
inc
shrl
sbb
pop
popa
scas
xchg
sbb
and
and
adc
pop
xchg
xlat
insb
mov
sub
out
jnp
or
ffree
mov
fsts
mov
pushl
aas
xchg
nop
pop
pop
aas
sub
dec
aad
push
mov
shll
gs
movsb
popa
out
sbb
xlat
dec
pop
inc
pop
rcrb
mov
lock
sti
popa
pushf
mov
add
nop
inc
push
xchg
or
out
or
aaa
js
xor
inc
adc
mov
inc
repz
push
sbbb
lea
pop
add
and
dec
sbb
imul
jmp
imul
ret
popa
fsubl
mov
pushf
pop
push
or
mov
add
adc
in
inc
cltd
je
paddusw
cmp
sar
mov
adc
add
dec
sti
fmuls
dec
adc
mov
xor
inc
sarl
and
iret
std
popa
jecxz
cmp
cmpl
and
and
adc
sbb
movsl
sbb
pusha
out
jge
fwait
and
daa
scas
sub
mov
les
andb
xor
inc
cmp
mov
push
clc
popa
push
les
test
dec
cmp
dec
xchg
mov
jb
repz
lods
aam
dec
movsl
and
cmp
sub
push
daa
add
outsl
push
inc
jne
mov
sub
mov
test
dec
stos
and
orl
fdivrs
mov
xor
add
subb
lods
loope
test
jbe
call
rclb
fcoms
and
movsl
sbb
xor
jecxz
lea
mov
icebp
push
mov
rol
add
and
pop
jmp
adc
and
adc
mov
or
or
popa
xor
xchg
nop
sub
pop
fistl
es
push
pusha
test
test
pusha
push
ss
dec
dec
out
popa
or
popf
cmp
cmp
add
adc
aaa
inc
ret
sbb
dec
les
jmp
adc
mov
orb
mov
les
orl
je
cmp
ss
clc
dec
or
daa
adc
daa
sbb
cs
sub
cwtl
push
iret
xor
mov
aad
push
adc
adc
addl
nop
adc
and
push
mov
push
sub
lcall
add
mov
add
test
and
ss
adc
dec
shrl
xlat
clc
adc
js
push
xchg
push
xchg
pop
and
xchg
shl
mov
bts
xor
rcl
jmp
roll
sbb
imul
adc
cmpsb
imul
lret
push
push
rclb
mov
das
pop
push
pop
andl
sbb
mov
jo
shll
and
adc
aaa
mov
sbb
sub
sarb
in
mov
pop
into
xor
push
adc
loopne
and
push
int3
cmp
ds
push
push
sub
inc
shll
pop
add
xor
jns
inc
pop
xor
xchg
mov
inc
pushf
shrb
ret
dec
xor
aas
lods
rcrb
enter
push
lret
movnti
sbb
cwtl
jbe
and
push
push
or
mov
add
push
insb
into
inc
mov
mov
push
mov
mov
scas
rolb
mov
enter
inc
cmp
push
roll
roll
roll
mov
mov
adc
pop
xchg
loopne
or
es
popa
inc
sti
or
cmp
pop
and
ror
mov
js
push
inc
sbb
jg
lods
and
push
add
and
icebp
bound
pop
adc
aaa
push
enter
in
add
into
shlb
jb
xchg
enter
mov
sbb
inc
jns
mov
lahf
sbb
sarb
sbbb
sbb
mov
inc
inc
lahf
sbb
repnz
push
ret
cmpb
adc
xchg
punpckhbw
daa
xor
push
push
and
mov
add
mov
dec
clc
popf
dec
and
in
mov
ljmp
les
les
mov
les
daa
sub
push
clc
dec
mov
push
and
popa
jmp
or
add
arpl
fisttps
inc
fcompl
and
clc
push
adc
mov
xchg
sub
push
add
inc
popa
adc
adcb
mov
cwtl
js
fisubl
xor
pop
and
aad
or
jno
pop
das
lret
ret
mov
dec
sbb
jmp
jno
inc
aas
fsts
jns
and
pop
add
mov
inc
jmp
rcll
cmp
enter
dec
mov
dec
pushf
enter
daa
bound
fsubl
xor
fdivrl
push
mov
iret
and
ja
sbb
mov
daa
sub
pop
jb
subl
and
loop
orb
sbb
cmp
add
insl
adc
jmp
jno
adc
fildll
fdivs
pusha
or
push
sbb
popa
mov
mov
adc
es
inc
push
cpuid
jl
je
or
test
cbtw
iret
xor
loope
or
mov
aas
or
je
mov
mov
inc
dec
ja
push
mov
sbb
dec
add
in
in
cmp
leave
dec
mov
imul
es
xor
mov
cmp
sub
mov
fildl
test
lret
dec
mov
push
sub
in
cmp
add
dec
push
in
add
mov
cmp
les
dec
push
imul
jmp
dec
cltd
jno
dec
loope
adc
loopne
inc
sub
lds
dec
enter
rcl
mov
add
int
or
test
fst
dec
aam
or
mov
mov
and
dec
loopne
xchg
insl
pop
ror
xchg
fistpll
fwait
das
ret
movsb
pop
das
mov
add
push
or
or
xor
repnz
mov
in
leave
and
dec
add
or
movsb
xor
xchg
lret
loopne
addl
or
in
mov
cmp
xchg
adc
inc
mov
add
jb
scas
add
dec
dec
mov
add
aas
lret
inc
mov
sub
add
sub
addr16
lret
cmpsl
cmpsb
inc
xor
ret
lcall
sti
pop
adc
push
int3
xlat
in
cli
mov
inc
aad
inc
or
aad
inc
or
or
xlat
rcll
or
push
aam
mov
fbstp
sub
subb
jo
hlt
bound
mov
loop
add
add
mov
leave
roll
loopne
in
push
js
add
sbb
adc
hlt
push
testl
lret
pop
repnz
clc
add
sbb
mov
or
movsb
jge
jmp
add
adcl
repnz
orb
nop
lock
pop
enter
pop
lcall
add
add
pop
in
into
push
and
xchg
ds
call
test
cltd
cmp
sbb
add
dec
lods
fdiv
cwtl
xor
mov
mov
mov
addr16
lods
and
aad
into
and
xor
shlb
xchg
test
dec
into
flds
xor
jg
mov
inc
outsl
push
mov
rorl
mov
sub
mov
push
jae
subb
out
jmp
nop
in
pop
mov
fistpl
clc
mull
movsl
add
push
xor
add
push
and
add
adc
les
pop
pcmpgtd
cmpb
mov
orb
or
loopne
jno
mov
xor
and
push
aas
adc
or
inc
add
sub
mov
xchg
and
cmp
roll
sbb
inc
and
xchg
test
lret
push
call
movsl
loopne
sbb
data16
movsb
inc
add
and
fbld
lock
add
pop
imul
add
add
les
xorl
mov
clc
jl
repnz
inc
xchg
aam
mov
outsl
pop
push
or
cmp
dec
or
dec
es
es
aaa
sbb
or
sub
cltd
insl
cmpsl
imul
jo
sbb
inc
aam
push
xor
aaa
pushf
mov
push
pushf
rcrl
lret
lcall
mov
pushf
add
dec
orps
enter
lahf
iret
or
mov
pop
jmp
add
mov
test
pop
lods
sub
rcrb
test
xlat
aas
inc
insb
adc
ja
push
lods
push
dec
pop
mov
mov
cwtl
nop
lods
stos
int
jle
test
test
lods
add
popa
inc
pop
inc
rcl
data16
jns
sar
jns
repnz
xchg
pop
shll
sarl
push
rorb
pushf
dec
popf
sbb
mov
jno
shll
sub
jnp
mov
mov
inc
repnz
sub
cmp
out
ds
cmp
stc
shll
das
outsl
insb
gs
outsl
xor
dec
cmp
sbb
mov
imul
sbb
je
jne
notb
pop
xor
xor
xor
or
sub
nop
addb
cmp
out
jo
inc
inc
push
xchg
incl
and
xchg
jge
aam
cmp
inc
inc
imul
sbb
lcall
cmpsl
jecxz
aam
adc
mov
arpl
add
xchg
out
inc
aam
adc
fs
jae
addb
sub
sub
xchg
loop
and
sbb
sbb
cmp
nop
ret
or
xor
test
inc
adc
fs
fwait
in
into
mov
adc
jge
xor
imul
push
xchg
push
pop
imul
aad
pushf
aad
add
movsl
lock
fcmovnu
mov
ds
add
or
sbb
testl
sbb
sub
insb
pop
ret
lock
dec
faddp
sbb
push
mov
mov
mov
movsl
in
inc
push
in
mov
sbb
inc
push
in
and
dec
nop
mov
lods
nop
mov
cmp
nop
add
mov
sbb
and
jb
adc
and
and
jb
inc
repz
push
xor
fadds
dec
sbbb
mov
in
push
in
pop
push
push
mov
aam
xor
shll
sbb
xchg
movsb
movsb
sbbl
adc
enter
sub
in
mov
sbb
mov
cmp
pushf
sbb
nop
add
adc
cmp
cmp
fs
pushf
imul
jl
mov
imul
sub
stos
sbb
fwait
sub
testb
adc
push
cmc
add
imul
dec
imul
outsw
jl
pop
shll
stos
mov
imul
imul
mov
xor
inc
dec
fsub
xor
cmpsb
imul
and
xor
shrl
inc
shll
or
add
sub
sbb
xchg
dec
cs
adc
ljmp
mov
dec
enter
add
ficompl
dec
push
sbb
shrb
dec
arpl
or
add
lods
and
xchg
adc
inc
add
push
test
mov
adc
push
push
pop
in
call
movsb
jg
pop
leave
jmp
rolb
add
inc
mov
inc
test
inc
jp
jl
call
adc
xor
fists
jmp
mov
lock
loopne
dec
shrl
jmp
or
mov
out
pop
fs
sbb
or
jl
and
in
pusha
xor
or
dec
repz
pop
sub
push
push
or
nop
cs
sub
and
cmp
mov
mov
lock
je
mov
add
pusha
jae
int
in
pushl
fidivrl
jo
movsb
push
mov
pop
and
inc
sub
sub
xor
xchg
push
pop
sub
fstl
stc
push
mov
add
and
fldl
dec
or
mov
lods
push
int3
xchg
cmp
stos
pusha
faddp
sarb
sub
pop
fimuls
test
pushl
es
and
and
add
pop
sub
push
enter
xchg
cmp
mov
or
mov
popa
rcr
arpl
les
jno
pop
out
cld
js
sarb
imul
jg
hlt
mov
inc
dec
or
sbb
adc
add
and
inc
stos
or
dec
lea
mov
dec
mov
popa
mov
incl
adc
and
jle
rcrb
xchg
fwait
jnp
jl
ficoml
push
pop
aaa
mov
subl
and
dec
subb
enter
fidivrl
xlat
lods
loope
cmp
xchg
dec
push
in
cmp
push
or
out
icebp
addl
sbb
dec
int
and
movsb
in
lret
sbb
cmpsb
hlt
scas
add
ret
cmp
adcl
sub
sub
aam
or
sbb
outsb
cmp
fld
mov
xchg
cmpl
imul
lock
enter
push
jnp
scas
sbb
icebp
inc
enter
aam
push
pop
adc
cmp
cmp
test
mov
mov
pop
sbb
mov
mov
gs
inc
push
call
cs
xor
test
jno
jle
cld
push
sbb
or
mov
push
or
add
mov
xchg
mov
out
cmpl
or
fiaddl
scas
movsl
loope
lea
mov
sbb
ja
sub
roll
mov
call
adc
mov
imul
lea
shll
outsl
cmp
fcmovnb
and
or
push
or
stc
xchg
sbb
cmp
mov
test
push
ret
lret
jmp
push
jnp
loope
mov
bound
inc
movl
lcall
or
jmp
shrb
sbb
movsl
sbb
or
add
push
xor
nop
dec
fimuls
test
mov
xchg
dec
mov
sbb
sbbl
sbb
jecxz
icebp
into
cmp
repnz
add
inc
push
xor
adc
push
mov
nop
dec
push
enter
or
std
add
data16
add
mov
dec
and
push
pop
add
or
inc
ds
push
ret
add
mov
sub
aaa
and
je
xchg
cli
scas
push
add
add
jne
call
lret
xchg
loop
push
movsl
lods
mov
push
popa
mov
cmp
and
mov
pusha
xor
insb
cmp
pop
pop
mov
inc
push
mov
xchg
cli
subl
sub
mov
push
add
and
shrl
sbb
jns
mov
mov
xchg
pop
sahf
aad
pop
jmp
jl
mov
test
add
pop
and
das
inc
cmp
and
out
mov
stos
sub
fnstsw
add
xchg
cmp
add
add
scas
leave
add
lods
sub
mov
xor
cmp
xchg
adc
jb
adc
mov
fadds
jb
inc
fcomp
add
and
or
ret
shl
lret
jne
push
addr16
dec
out
push
por
dec
sub
cmpl
jne
mov
sbb
cld
es
sub
sbb
outsb
inc
inc
xorb
test
inc
arpl
lcall
testl
or
add
inc
jne
subl
adc
sbb
push
rol
cmpb
pop
imul
mov
adc
stos
sub
push
dec
dec
and
add
pusha
std
jmp
jnp
pop
push
xchg
sub
adc
mov
sbb
inc
mov
cmp
out
sbb
sub
cmp
orl
fmuls
and
imul
rcrb
ss
mov
lods
scas
push
xor
mov
ret
lea
and
testl
ja
frstor
push
cs
or
xor
cmp
or
int3
push
daa
jnp
enter
mov
addb
sub
sub
adcl
pop
mov
test
outsl
mov
cli
bound
jno
xor
adc
mov
or
clc
jne
or
sub
xor
mov
mov
xchg
pop
xor
or
cmp
jecxz
xor
adc
ret
jne
add
xchg
ret
pop
and
jle
xor
int3
fsubr
push
orb
mov
mov
cmp
pop
or
or
xor
mov
cmp
sub
add
mov
mov
fimull
cmpsb
and
pusha
in
leavew
pop
fcmovnu
mov
scas
in
insl
dec
mov
xor
movsb
lret
xchg
mov
mov
daa
mov
adc
mov
push
xchg
dec
daa
dec
leave
sub
outsb
in
dec
xchg
or
mov
add
push
test
sbb
sub
xchg
adc
dec
or
jg
sub
dec
cmp
fst
rorb
mov
rol
mov
mov
adcb
fmul
pop
dec
xor
dec
aaa
jl
int3
lret
enter
inc
cmp
test
in
mov
bound
pop
add
mov
mov
je
mov
mov
sbb
xchg
push
push
les
pop
in
push
mov
or
cmpsb
in
lods
xchg
hlt
ljmp
push
cmp
ja
sbb
lock
add
leave
lds
or
adc
pushl
dec
notb
mov
pop
test
std
inc
mov
lea
loope
sbb
sbb
jl
cmpsb
pop
je
push
lock
inc
cltd
idiv
insl
mov
hlt
add
stos
or
xor
inc
add
sub
int
cmc
les
xchg
or
insb
mov
or
fimull
pop
stos
xor
and
push
push
or
pop
jle
add
xchg
mov
inc
test
lahf
adc
sub
xchg
sub
or
loope
xlat
shrl
xchg
dec
repnz
dec
je
jmp
scas
add
jmp
adc
imul
divb
pop
xor
push
sbb
sbb
inc
push
jmp
cmp
loope
xorb
test
mov
push
dec
lea
and
lcall
fldt
in
and
test
je
mov
or
mulb
and
cmp
cmp
das
sub
imul
fsubp
pop
cmp
pop
icebp
loop
js
lock
test
enter
icebp
mov
add
test
or
jo
cmp
lahf
push
cmp
sbb
ss
xchg
adc
add
pop
jo
xchg
sub
push
push
rclb
or
test
fdivrl
jne
fbld
push
les
orl
adc
xchg
adc
jbe
scas
gs
ret
and
dec
adc
dec
in
adcb
dec
jo
mov
push
pop
sahf
add
pop
pusha
inc
les
lds
inc
enter
rorb
cmpsl
inc
jne
fwait
or
mov
icebp
pop
pop
xor
loopne
cmpsb
in
jmp
lea
ljmp
mov
sub
sbb
cmovnp
or
test
lcall
mov
mov
jns
xor
xchg
push
cmpb
sbb
xor
pop
movsb
inc
and
cmpsl
push
sbb
dec
mov
or
xchg
inc
es
aam
je
sbb
cmp
mull
dec
adc
push
dec
jnp
cmp
push
sub
sub
pop
dec
pushf
pop
loopne
and
ret
and
or
inc
inc
js
jg
out
pop
inc
push
pop
mov
jecxz
daa
ret
push
adc
mov
loope
xchg
ret
mov
or
xchg
mov
test
mov
hlt
pop
jecxz
or
sub
sub
test
jge
ljmp
xor
pop
mov
addb
or
adc
scas
and
es
outsl
or
pop
js
xlat
out
out
xor
jne
inc
xchg
pop
push
mov
imul
test
rolb
adc
adc
arpl
or
les
jns
cmc
test
xor
ds
push
dec
clc
mov
lret
push
adc
sbb
xchg
lods
xchg
add
sub
jb
pop
enter
mov
out
test
add
add
cbtw
inc
dec
dec
inc
stos
rolb
iret
jp
inc
lods
push
adc
xor
sub
sbb
add
sbb
in
add
xor
cmp
mov
pop
testb
sub
in
movsb
inc
cs
testl
push
hlt
fs
or
and
pusha
pop
scas
add
push
inc
jnp
mov
or
push
push
jno
xor
in
cs
inc
or
and
lret
cmp
outsl
lock
sahf
sub
imul
and
je
inc
pop
cwtl
xchg
xor
cmp
mov
inc
mov
jbe
aas
imul
jmp
jl
mov
out
jl
xlat
xor
hlt
ss
xor
xlat
cmp
or
adc
movsb
xlat
mov
cmp
xor
mov
or
mov
push
fwait
push
mov
test
out
and
dec
jo
dec
pushf
arpl
add
jb
mulb
pop
cwtl
lods
pop
lcall
jbe
out
push
fstp
inc
mov
push
and
sbb
adc
rcl
aam
fwait
lock
fs
repnz
clc
sub
movsb
je
sub
and
in
ret
icebp
pop
mov
xchg
mov
pop
xor
popf
adc
adc
scas
or
fidivrs
mov
cmp
mov
ja
mov
movsb
mov
mov
mov
popa
jns
and
add
dec
cld
sbb
adcb
xchg
int3
jnp
cli
adc
sti
add
mov
pop
lret
pop
rcl
lahf
mov
test
pop
pop
mov
out
lret
aad
repnz
nop
iret
sub
mov
incl
in
imul
push
lock
cmp
ja
cmpl
aam
arpl
inc
sub
xchg
out
or
pop
fisubrl
or
pop
fcoml
adc
inc
cmpsl
std
adc
loope
adc
sbb
add
dec
push
or
popa
inc
in
push
rol
xchg
mov
xor
es
dec
das
inc
push
imulb
and
and
sbb
dec
adc
fcmovnb
xor
dec
inc
or
clc
inc
movsb
push
dec
ds
and
enter
cld
sbb
loop
adc
pop
xchg
aaa
xor
fcomps
cmp
pushf
push
pop
bound
js
ja
cld
pop
test
xchg
inc
xor
sbb
xchg
mov
cld
inc
cmp
xchg
inc
cwtl
adc
leave
or
xor
push
arpl
js
adc
test
jne
inc
and
pop
dec
inc
push
in
stos
pop
adc
inc
sbb
adc
xchg
dec
sbb
rolb
push
das
add
test
inc
cmp
movl
in
pop
mov
inc
pop
jg
add
bound
adc
mov
cmp
std
dec
jo
jmp
fisubrl
adc
pop
add
and
inc
push
enter
dec
xchg
xor
cwtl
hlt
aad
leave
mov
leave
leave
and
aas
push
dec
leave
mov
incl
in
js,pt
test
mov
mov
sbb
xor
and
popf
lock
inc
push
std
cwtl
cmp
add
popa
dec
cmp
movsb
test
or
fucom
in
out
add
jns
decl
cmp
xor
outsb
lcall
xorb
mov
mov
push
insw
xchg
cmp
nop
mov
sub
in
outsb
shlb
inc
and
popa
mov
fwait
or
add
adc
xchg
iret
xchg
or
in
xor
pusha
repnz
xor
or
cwtl
jl
xor
inc
scas
stos
inc
test
inc
cltd
cmpsl
push
icebp
adc
dec
mov
sbb
and
push
ret
lock
dec
mov
mov
adcb
mov
push
repnz
pusha
aas
mov
and
adc
add
inc
daa
fiaddl
push
insb
or
cmpsb
push
xchg
shlb
adc
shll
call
xchg
and
aad
rolb
push
mov
clc
gs
call
jne
mov
and
mov
sub
and
mov
out
scas
insl
or
pop
roll
xor
pusha
jl
movhps
aaa
scas
or
sub
negb
inc
inc
add
mov
push
fwait
inc
add
idiv
mov
add
jmp
flds
fmuls
add
jno
stc
lds
flds
aaa
addl
adc
jno
rorl
inc
push
inc
lahf
sub
xchg
or
inc
push
outsl
popa
mov
sarb
in
jne
insl
leave
push
addl
push
push
lea
enter
cwtl
add
jmp
jb
xor
add
rolb
add
mov
adc
jg
push
jno
insl
sbb
dec
adc
pop
or
push
sub
loop
cmp
adc
fisubs
push
push
or
sbb
mov
xor
xchg
in
adc
and
dec
push
lcall
shlb
out
inc
xchg
xor
addr16
mov
jb
sbb
mov
push
adc
add
lret
mov
repnz
bound
push
inc
mov
pop
dec
pop
ja
or
enter
shr
and
sbb
fcmovnbe
es
inc
inc
ret
fsts
inc
jp
mov
add
addb
rcr
rcrl
sbb
add
pop
fldt
and
sbbl
mov
insl
and
sbb
mov
pop
mov
sbb
push
out
inc
pop
shr
pop
mov
or
jne
jne
dec
aam
sbb
frstor
sbb
push
sub
enter
dec
add
xchg
xor
imul
push
arpl
cltd
mov
nop
jle
imul
dec
ret
cmpsb
cmp
adcb
mov
ret
sahf
into
insb
push
mov
rorl
adc
or
jo
popa
dec
pop
std
jbe
test
mov
sbb
pop
lcall
popf
inc
or
push
nop
shr
mov
adc
sbb
adc
xchg
ret
push
outsb
dec
xchg
jbe
in
mov
pop
adc
addl
adc
inc
mov
call
xchg
sbb
or
pop
aaa
in
bound
xor
or
push
mov
es
dec
push
xor
dec
ss
sub
or
test
in
jae
pushf
or
jno
loopne
loopne
out
jp
xor
cmpsb
jnp
in
test
xchg
dec
vmwrite
std
fdivrl
das
pop
or
sbb
aad
mov
lds
dec
pushf
dec
dec
mov
or
xchg
sbb
mov
mov
jb
dec
push
lock
dec
xor
rol
adc
xchg
sub
pop
xor
jecxz
lds
pop
cli
pop
pop
int3
add
push
sub
pop
pop
sbb
sbb
add
mov
mov
outsb
shlb
or
push
xor
cmp
mov
fistpl
call
es
pop
in
pop
in
lcall
mov
and
pop
pop
sub
pop
inc
push
in
pop
pop
in
cmpsb
in
pop
xchg
cmpsb
in
push
pusha
pushf
pusha
inc
push
in
int
repnz
cmpsb
in
fs
pop
push
push
int
fs
je
mov
or
mov
dec
push
rcrb
inc
adc
dec
daa
add
or
sub
cmp
into
push
sbb
sub
add
or
adc
push
sub
test
outsl
movsl
or
in
lods
or
and
loope
seto
sbb
in
inc
push
sbb
call
jmp
fs
inc
in
out
out
fs
inc
push
rcl
rclb
aam
inc
push
sbb
fadds
sbb
fcmovu
fcompl
fs
inc
fstp
fbld
push
rol
nop
inc
push
sbb
lds
sbb
enter
nop
leave
lret
sbb
int
iret
fs
inc
push
mov
mov
inc
push
sbb
adc
mov
lea
jo
inc
repnz
xchg
pshufw
inc
aaa
add
popl
adc
xor
iret
and
mov
je
bound
pop
or
mov
xor
addl
mov
rorl
pop
jmp
in
xor
dec
shrl
push
push
push
adc
add
inc
jno
inc
dec
nop
jl
adc
and
cmp
out
fwait
dec
imul
rcr
or
cmovl
push
mov
adc
cwtl
jmp
cmpsb
xchg
and
fdivr
pop
add
sbb
push
and
xchg
and
or
or
sbb
push
and
xchg
and
adc
adc
sbb
push
and
xchg
and
sbb
sbb
sbb
push
and
xchg
and
and
and
sbb
and
xchg
and
sub
sub
sbb
and
xchg
and
xor
xor
sbb
and
xchg
and
cmp
cmp
sbb
and
xchg
and
inc
xchg
and
xchg
inc
inc
inc
sbb
inc
and
xchg
and
xchg
and
xchg
dec
dec
dec
sbb
dec
and
xchg
and
xchg
and
xchg
push
push
push
sbb
push
and
xchg
and
xchg
and
xchg
pop
pop
pop
sbb
pop
and
xchg
and
xchg
and
xchg
popa
bound
xchg
and
fs
xchg
and
xchg
and
xchg
imul
insb
insl
outsb
push
mov
push
inc
inc
mov
fimuls
jne
sub
fbld
arpl
jae
pop
ret
mov
imul
pop
jo
jge
sbb
sub
outsl
xchg
push
repz
inc
push
jae
cmp
fs
ljmp
insb
fstpl
outsb
push
jnp
dec
jbe
pcmpgtd
push
jae
mov
sub
je
out
nop
pop
inc
clc
jae
jne
outsb
aas
cmp
outsl
int
jns
pop
xchg
xorb
fcmovnbe
mov
outsb
inc
lods
insl
pop
push
daa
jmp
outsl
or
and
xor
daa
jp
cmp
dec
mov
dec
fiadds
add
inc
movsl
test
dec
jae
leave
pop
imul
pushf
pop
push
outsb
add
daa
dec
push
add
sub
push
arpl
push
sub
outsl
push
inc
jae
arpl
ss
jns
jo
or
das
push
scas
das
adc
push
jbe
das
cwtl
loope
or
addr16
pop
adc
mov
push
cmp
jecxz
cmp
jno
stos
notl
push
inc
inc
daa
fcmovb
mov
push
pop
mov
push
adc
insl
inc
mov
jne
push
push
inc
daa
imul
sbb
jp
pop
ja
imul
fs
das
out
inc
push
fdivs
outsl
inc
daa
push
push
sub
push
jmp
jo
fs
mov
push
mov
sub
inc
dec
mov
outsb
dec
gs
dec
cmpsl
arpl
sub
mov
pop
dec
xor
imul
cwtl
add
ja
pand
aaa
fisubrl
push
outsl
pop
imul
jo
xchg
pop
push
xor
outsl
and
xchg
gs
mov
fdivrl
cmc
jae
in
outsb
cmp
daa
push
adc
ret
aaa
inc
daa
dec
dec
ja
movsl
test
jmp
gs
push
pop
sub
js
xor
push
jl
push
jmp
inc
cmp
flds
mov
or
or
or
mov
pop
sub
push
addb
das
adc
in
sahf
arpl
lock
fs
hlt
jno
jbe
aaa
push
iret
dec
fs
fldln2
icebp
mov
jp
push
mov
sbb
pop
iret
add
stos
in
push
imul
cmpsb
mov
mov
mov
mov
push
call
inc
aaa
mov
shll
aas
pop
inc
ljmp
shrb
jo
int
das
int3
outsb
inc
push
int3
test
jecxz
testb
fcmovb
push
push
clc
push
xor
pop
rcrb
jno
xor
xchg
mov
add
mov
fmuls
adc
and
jecxz
fldl
inc
idivb
mov
clc
pop
add
xchg
adc
xchg
mov
fs
and
push
inc
and
adc
push
cwtl
add
push
and
roll
push
shll
push
shl
andl
in
push
mov
or
add
mov
push
cmp
adc
jmp
ret
sbb
xchg
rorb
mov
xchg
pop
insl
sub
adc
ss
movsb
and
or
fwait
in
ljmp
sub
in
pusha
jne
dec
in
out
mov
call
enter
data16
in
dec
pop
mov
hlt
and
imul
dec
and
inc
push
sbb
mov
push
addr16
mov
jo
adc
inc
inc
insb
cmp
cmp
pop
data16
and
pop
or
loop
sub
movsb
and
stos
ss
aaa
add
mov
and
pop
and
add
or
sbb
insb
xlat
insb
xor
inc
pop
jp
loope
xchg
test
adc
cmp
nop
adc
inc
inc
jne
cltd
test
or
into
adcb
insl
or
mov
shlb
cmp
add
push
out
add
jl
out
xorb
xor
xchg
mov
std
fmuls
add
add
pusha
rorl
push
mov
and
inc
call
dec
add
mov
inc
shlb
in
fcoms
ja,pt
xchg
fists
daa
mov
mov
psubusb
jmp
imul
imul
imul
dec
shll
cmp
xor
sarl
lcall
shl
out
and
rol
loope
xchg
push
pop
mulb
or
fs
jo
and
xchg
and
sarb
jns
or
cmp
mov
leave
rcrb
enter
xor
pusha
test
cmp
xchg
rolb
and
push
rcll
cmp
shll
pushf
les
dec
rcrb
sbb
in
xchg
insb
imul
xchg
test
sbb
dec
lcall
push
pop
xchg
or
sbb
imul
orl
mov
mov
cmp
and
test
or
jg
sub
dec
sbb
lcall
xlat
xorb
dec
add
sub
ljmp
xchg
inc
adc
mov
and
inc
insb
sub
add
pushf
stos
inc
and
js
mov
push
loopne
adc
xchg
ss
push
mov
out
sub
out
jns
mov
xor
in
xor
imul
mov
push
data16
sahf
gs
les
push
sbb
cld
mov
lods
mov
or
and
xor
pop
js,pn
lcall
sub
xchg
in
ss
xor
jbe
pop
fdivs
pusha
jo
sub
pop
sub
add
add
insb
adc
rorb
and
adc
inc
push
adc
cmpb
outsl
add
test
cs
cmp
out
add
cmp
out
lret
insb
lock
mov
inc
inc
add
mov
add
add
inc
insb
xchg
dec
and
pop
cmc
add
sbb
loopne
test
inc
lods
mov
add
sbb
mov
icebp
clc
xor
sub
enter
clc
add
and
xor
jl
xor
aam
cmpl
adc
movsl
popa
inc
scas
outsb
in
push
xchg
add
add
popl
test
mov
loope
push
jbe
frstor
scas
inc
jecxz
fwait
ljmp
stc
add
xchg
sub
in
mov
xchg
pusha
xchg
and
enter
or
jmp
cmp
inc
mov
mov
lock
push
push
test
mov
rorl
stos
add
inc
sub
adc
or
in
in
hlt
lcall
push
mov
lods
adc
pop
xorl
add
push
add
mov
into
add
fimuls
test
out
shll
mov
inc
or
adcl
or
outsl
dec
stc
scas
mov
xchg
das
dec
and
push
dec
inc
sahf
or
call
jno
or
push
pusha
mov
mov
add
adc
and
pop
push
add
jns
mov
and
movsl
arpl
or
test
lea
repnz
das
nop
sbb
js
and
inc
scas
or
das
inc
sbb
pop
adc
test
inc
js
int3
xor
lret
xor
test
jge
shlb
sbb
pop
mov
mov
stos
pop
movsb
and
inc
jle
enter
mov
mov
add
mov
add
popa
nop
rcrl
movsb
and
imul
lods
insl
imul
aad
and
in
lods
add
cmp
nop
bound
and
cld
adc
insb
sbb
lcall
add
lock
into
jno
repnz
cld
xchg
push
pop
dec
push
xchg
or
sbb
aaa
xor
cld
sbb
push
mov
fisubrl
push
in
cmp
xor
xchg
mov
sub
sbb
adc
push
pop
and
xor
adc
or
pop
leave
inc
pop
and
pushf
adc
pop
out
scas
andl
sbb
pop
and
orps
mov
xchg
pusha
ljmp
fsubl
xchg
imul
push
mov
repnz
mov
jb
test
push
mov
mov
loope
push
inc
mov
mov
mov
ds
or
push
outsl
dec
jne
sbb
and
inc
arpl
xchg
fs
xchg
xchg
push
dec
pop
push
pop
repnz
shlb
dec
call
xchg
push
ja
xor
mov
adc
cs
adc
and
push
dec
nop
nop
push
and
aas
jno
xor
mov
inc
cmc
sub
and
pop
xor
pusha
dec
ret
push
shll
inc
inc
xchg
test
or
push
jle
sub
imul
test
mov
lock
xor
push
sahf
in
invd
rol
fidivrs
sbb
jne
dec
cs
fldl
movsb
cs
loopne
cmp
and
mov
mov
cmp
mov
and
icebp
aas
fidivs
es
mov
imul
push
jne
mov
xorps
push
stos
jl
inc
inc
sbb
cmp
sti
fisttpl
in
or
fnsave
xchg
mov
or
or
mov
dec
scas
sbb
hlt
mov
les
push
sub
ds
mov
add
fcompl
xchg
in
pop
repnz
imul
mov
test
mov
pop
add
ss
iret
push
int3
mov
js
or
cmp
mov
rclb
and
es
rorl
rcrl
mov
pop
nop
jb
out
push
sub
sbbl
add
lock
in
add
cmp
xchg
mov
inc
cltd
push
adc
jmp
cmpsl
dec
dec
ds
inc
and
in
sbb
mov
adc
call
scas
jne
out
and
aaa
mov
cmp
js
dec
aas
ficomps
repnz
and
jno
xchg
mov
xchg
test
push
les
xchg
inc
mov
jl
xchg
add
pop
cld
cld
dec
xor
dec
dec
roll
jno
fimuls
adc
jp
inc
rcl
adc
add
or
push
insl
aad
imul
sub
jo
adc
and
adcl
ds
pop
mov
push
loopne
inc
dec
jne
mov
add
loopne
pop
mov
rcll
stc
sub
aam
or
pop
push
jmp
lds
bound
and
adcl
mov
pop
je
mov
adc
filds
fcoml
add
mov
pop
dec
adc
xor
xchg
mov
xchg
pop
cmp
pusha
mov
xchg
add
dec
ja
jne
sarl
dec
outsl
push
jne
das
push
fisubl
jns
gs
add
popa
je
popa
inc
bound
popa
jb
inc
jo
jns
mov
push
insb
pop
jne
jl
imul
jbe
ret
cmpsl
add
ja
ds
nop
lds
jo
aas
inc
and
enter
push
gs
sarb
scas
lea
sarb
scas
adc
push
inc
insb
outsl
bound
hlt
inc
push
in
sbb
mov
adc
add
js
ja
rolb
xchg
nop
push
sub
push
ret
mov
xchg
mov
test
push
sub
shll
and
arpl
or
push
pop
sbb
aam
je
and
je
xor
or
aaa
sbb
pop
call
dec
pop
and
lock
rolb
addl
loopne
xor
into
dec
add
sub
and
push
add
dec
xor
cmp
or
cmp
rcrl
loop
ds
add
movsl
fbstp
out
cmpsb
lret
or
dec
out
xchg
and
aas
mov
clc
jmp
sbb
dec
or
leave
enter
sub
sbbl
mov
push
mov
sub
test
mov
cmpsb
xor
mov
adc
orb
add
xchg
aas
pop
icebp
sbb
pop
jp
pop
sahf
sbb
adc
sub
mov
aaa
and
data16
push
adc
dec
scas
inc
cmp
and
sbb
add
push
sbb
aas
out
or
ret
inc
jp
les
jl
pop
cmp
lcall
rclb
pop
pop
in
leave
rolb
jne
movl
or
psubw
int3
cmp
pop
xchg
inc
cs
mov
push
push
lock
or
movl
add
lock
addr16
dec
push
inc
push
push
inc
rclb
jb
dec
pop
inc
inc
pop
mov
cmpsb
int3
mov
dec
add
inc
and
sub
mov
rcrb
xor
mov
dec
ja
xor
mov
stc
inc
and
and
mov
inc
outsl
push
cmp
or
inc
inc
fsub
shlb
rclb
enter
shrl
insl
xor
es
cmpl
push
fcoml
je
insb
adc
jle
dec
loope
inc
aas
insb
sbb
shlb
addr16
add
jo
dec
push
repnz
cmp
push
jbe
inc
je
outsl
js
cmpsb
in
fs
inc
push
in
jl
push
in
cmpsb
jl
addb
inc
aam
in
pop
repnz
push
in
mov
inc
inc
mov
inc
push
in
mov
inc
cmpsb
mov
inc
mov
in
push
in
xchg
in
pop
repnz
cmpsb
xchg
sbb
in
and
cwtl
in
push
in
pushf
pop
jg
inc
cmpsb
pushf
mov
scas
dec
inc
inc
add
push
mov
cmp
mov
ja
outsb
push
mov
add
fcmovb
ret
add
pop
and
inc
testl
add
or
xor
sbb
cmpsb
dec
mov
clc
mov
xor
xor
mov
xor
test
ret
rolb
lock
fwait
pop
bound
dec
mov
enter
dec
xor
sbb
outsl
dec
out
je
sbb
cmpb
pusha
add
mov
nop
push
mov
in
mov
fisttpll
in
jmp
and
inc
popa
call
xchg
ss
in
ret
and
or
and
paddd
cmp
jne
push
jmp
xor
and
and
xchg
lock
jne
mov
stos
jl
jg
inc
add
popf
pop
adc
in
xor
sub
inc
lock
lock
inc
sub
jmp
and
push
pop
mov
loopne
xor
adc
dec
in
test
cwtl
mov
sbb
jl
insl
cwtl
jb
pop
adc
mov
push
or
inc
sbb
nop
mov
xchg
cli
mov
xchg
in
mov
movsl
dec
inc
xchg
ret
xchg
mov
mov
pop
adc
xor
inc
xor
dec
pop
mov
add
adc
ret
or
xchg
and
inc
adc
addb
sub
lock
mov
inc
pop
in
add
das
clc
clc
cmpb
idivl
and
hlt
hlt
or
sbb
add
mov
je
inc
and
stos
daa
imul
dec
rcrl
jnp
mov
xor
dec
and
dec
and
hlt
inc
cmpl
or
mov
aas
in
or
pop
in
pusha
jg
jg
into
mov
test
mov
jecxz
mov
orb
push
ja
dec
dec
sbb
push
pusha
lahf
fnstenv
and
mov
xchg
jmp
or
dec
dec
je
and
je
test
add
mov
sub
cmp
pop
dec
lods
add
leave
xchg
xor
mov
jg
push
mov
and
sbb
leave
rcr
lret
iret
push
mov
jle
in
cmp
add
cmp
xchg
xor
outsl
jbe
mov
call
lahf
push
bound
dec
mov
or
xchg
or
lcall
cmp
pop
inc
inc
bound
jg
enter
cwtl
dec
dec
test
pop
mov
mov
lea
les
sub
or
fnstsw
mov
and
sub
ret
das
pop
rcrl
pushf
inc
imul
je
lods
imul
pop
pushl
add
pop
jne
xor
inc
pinsrw
mov
push
push
insl
sbb
popa
leave
or
test
lahf
shll
dec
in
cltd
test
pop
sbb
daa
dec
adc
ret
mov
xchg
pusha
fisttpl
xor
mov
push
inc
cwtl
mov
and
dec
inc
sub
cs
inc
adc
jl
iret
add
xlat
xlat
fs
and
bound
inc
cmp
xchg
sub
cmp
push
pushl
mov
clc
sub
fidivl
ds
hlt
cmp
sub
cltd
sub
imulb
or
pop
or
pushf
outsb
sub
cmp
or
add
inc
dec
sbb
cwtl
dec
ja
dec
inc
cmpl
inc
loop
test
push
or
cmp
in
cmp
and
mov
pop
add
daa
inc
and
and
push
jl
pusha
outsl
repnz
inc
testb
add
push
inc
sbb
xchg
das
mov
push
cmc
add
or
clc
cmp
fldcw
adc
clc
addr16
lcall
clc
bound
or
xchg
inc
and
js
cld
adc
les
push
cmp
outsl
xchg
ret
xor
xchg
mov
pmulhuw
stos
cmp
push
pop
sub
inc
add
and
dec
dec
jmp
stos
icebp
fcoms
mov
shl
je
xor
es
sub
outsb
fmuls
or
sub
mov
or
mov
lods
pop
cli
sub
push
js
adc
adc
mov
insb
psubusb
adc
pop
imul
mov
cld
sub
pop
or
push
jne
fisubs
incb
sub
ret
addl
lsl
jae
cmpsl
ret
add
inc
or
sub
xor
movb
inc
sbb
arpl
rclb
push
xchg
mov
dec
pop
mov
inc
dec
out
adcl
sub
cmpsl
xchg
andb
dec
sbb
sbb
and
and
add
xor
mov
lret
in
or
pop
xchg
or
adc
cmc
fldt
lea
js
dec
lahf
mov
inc
add
push
stos
sub
pusha
mov
sbb
push
inc
mov
and
mov
push
adc
or
pop
cmc
cmp
mov
aas
sub
jge
out
and
xchg
ja
lods
pop
xor
fsubl
xchg
cmp
sbb
fadds
fdivs
lea
push
divl
int
xor
push
add
pop
push
mov
inc
adc
xchg
fcomps
inc
insl
fildl
or
jb
dec
dec
add
shl
das
pop
adc
pop
sbb
or
sub
cmpl
jp
add
mov
sub
jg
mov
dec
loope
mov
sysret
lahf
sbb
rcrb
movsb
push
sbb
hlt
insl
push
ret
rolb
inc
cmp
cmp
das
push
sbb
add
xlat
mov
sub
xchg
pop
or
lea
fdivp
popa
in
lds
add
jns
add
ss
lret
push
jge
adc
test
repz
sub
push
cmpsl
add
sub
dec
bound
mov
dec
sbb
mov
inc
loopne
xorl
jmp
cwtl
sbb
or
adc
push
pushf
add
adc
jbe
cld
adc
jmp
dec
ret
sti
movl
add
inc
into
mov
mov
xor
rcl
decb
sbb
test
je
mov
repz
icebp
xor
fcmovb
jmp
sub
xor
sbb
mov
rcrb
adc
imul
push
das
out
and
pop
adc
mov
js
jns
push
sbb
inc
shll
dec
cli
pop
jmp
aas
insb
mov
add
loope
sbb
push
mov
pop
dec
push
enter
pop
push
subb
enter
mov
pop
shrd
loopne
cmp
inc
mov
pop
inc
nop
incb
sub
add
push
out
int3
ss
popw
fists
bound
addr16
imul
jo
jb
je
jbe
jp
ss
jp
popa
sub
push
lret
xlat
add
adc
movsl
push
stos
je
fnstcw
daa
xchg
mov
mov
xchg
pop
sub
xorl
fisttps
mov
adc
jmp
enter
movsb
mov
pop
lret
or
mov
jecxz
or
mov
cmp
or
lcall
movsb
pop
mov
cmpsb
push
adc
add
mov
push
testb
inc
push
sbb
fwait
adc
out
sbb
add
test
sub
sub
loopne
inc
gs
inc
add
popa
push
add
mov
dec
push
or
bound
cmpsb
inc
inc
mov
pop
cmp
jle
push
mov
jbe
pop
dec
int3
pop
adc
add
insl
sub
adc
out
dec
sub
dec
lods
scas
insl
jmp
ds
and
outsl
andps
ror
imul
jne
in
lea
out
mov
mov
and
adcl
es
push
jp
xlat
clc
movsb
in
mov
out
in
xchg
push
nop
pop
xlat
enter
dec
sub
outsb
inc
imul
rclb
lret
add
xor
dec
jo
daa
push
int3
and
or
outsb
nop
cmp
dec
jo
push
les
mov
scas
or
push
pop
mov
int3
add
add
into
adc
or
mov
lods
mov
sub
pop
inc
jae
inc
insl
inc
mov
dec
sub
xor
inc
or
sbb
ss
mov
push
aas
mov
xlat
dec
jne
pop
aas
xchg
dec
insl
and
jmp
jb
test
ret
mov
inc
lcall
test
enter
shlb
xchg
jo
jae
ja
hlt
test
or
push
xchg
les
pop
out
outsb
add
push
inc
cmp
or
lahf
or
inc
mov
dec
insb
cltd
stos
mov
mov
pusha
sub
dec
shl
and
and
inc
mov
imul
inc
repz
adc
sub
and
jl
pusha
stos
test
rcrb
cmp
and
dec
popa
mov
pop
fadds
push
stc
lock
cmp
jo
mov
or
xchg
sbb
scas
andb
xor
adcl
sub
cmpl
iret
iret
or
jecxz
mov
add
mov
mov
ss
pop
xorb
loope
frstor
jmp
in
movb
test
in
rolb
test
inc
add
add
mov
pop
adc
add
test
jg
sub
adcl
js
insb
insl
scas
cwtl
fnop
mov
pop
subb
mov
dec
mov
ret
bound
push
daa
inc
sbb
push
mov
jne
add
sbb
sbb
cmp
mov
dec
xorl
xchg
and
popf
mov
roll
dec
push
xlat
int3
inc
jo
lahf
jns
xor
dec
push
and
subl
jle
mov
push
xor
xor
fcomps
in
fs
nop
popa
imul
mov
daa
jns
mov
push
inc
repnz
arpl
leave
cmp
arpl
dec
pop
jb
dec
arpl
nop
add
jge
test
cmp
sub
nop
inc
mov
cmp
dec
hlt
xchg
cmp
sub
fs
nop
and
sub
dec
cmp
add
nop
sub
nop
sub
nop
push
pushf
push
cmp
aam
loop
sub
pusha
lahf
sbb
adc
xchg
mov
gs
pop
push
loop
jb
fdivl
gs
xor
bound
in
data16
sub
leave
push
and
andb
repnz
mov
jo
cltd
fiaddl
add
nop
jmp
add
lds
jb
sub
add
xor
xor
pop
xor
mov
jl
cmp
cltd
cmp
scas
jl
lock
and
and
or
sub
xorps
push
inc
dec
mov
jo
pop
push
scas
pop
and
dec
push
repnz
sub
sub
jge
jge
sbb
lahf
xorb
mov
dec
cmpsb
notl
dec
dec
push
add
fs
pop
test
mov
push
and
pop
jb
in
push
xchg
mov
lahf
inc
gs
sub
lahf
aas
push
inc
adcb
pop
jb
out
ja
nop
xor
xchg
and
cli
pop
and
or
push
inc
fsubl
movsb
pop
lods
xchg
mov
mov
and
jb
outsl
in
jns
push
jb
pushf
sbb
mov
add
push
movsb
jb
push
jb
movsb
lea
and
test
test
xor
and
cs
push
rcr
sub
clc
shll
adc
or
push
dec
push
ror
das
push
ja
and
pushw
cwtl
and
push
scas
mov
popa
insl
xchg
cmp
insb
outsb
or
cmp
xor
push
push
or
scas
int
adc
leave
loop
nop
outsb
adc
push
mov
mov
cmp
adc
adc
add
mov
or
mov
cld
das
xchg
sahf
sbb
mov
xchg
popa
fwait
add
arpl
insl
or
and
sbb
js
addb
mov
xlat
adc
sub
push
add
addl
int
pusha
insl
push
js
ret
cmp
sub
les
xchg
and
jp
iret
pusha
lock
xchg
xor
imul
push
and
or
je
xchg
add
dec
inc
ret
cmp
xorl
lea
jno
or
sbb
scas
aaa
js
xor
pop
insl
sbb
pop
pop
mov
mov
popa
xor
call
and
adc
fisubrl
clc
stos
cwtl
cmpsl
xor
lcall
mov
arpl
inc
imul
inc
push
push
outsl
jp
shl
sub
stos
xchg
mov
mov
mov
jo
adc
movsb
lea
dec
outsb
daa
push
shrl
aad
in
fcmovbe
ss
dec
push
inc
inc
jmp
xor
ret
nop
mov
mov
ror
xor
fdivs
sub
or
xchg
and
pop
or
sub
add
cltd
or
push
cmp
inc
cmp
je
push
cmp
mov
pop
or
or
fwait
sub
jae
add
sub
add
fildl
or
mov
js
insb
hlt
add
sub
lock
out
jle
sti
xor
pop
and
cmp
sbb
out
sub
inc
xchg
insb
arpl
les
inc
inc
xchg
xor
push
in
enter
xchg
stos
or
adc
dec
cmpsb
adc
add
inc
ret
adc
ret
jnp
xchg
stos
fs
sbb
sbb
push
xor
fiaddl
cwtl
xor
in
mov
xchg
push
sbbb
jo
jb
inc
xchg
sbb
nop
xchg
lret
ss
inc
lock
inc
clc
xchg
mov
les
out
jno
dec
fsubr
add
xchg
sbb
nop
mov
sbb
sub
or
add
data16
inc
push
xchg
daa
and
lcall
sbb
add
lea
jb
xor
adc
add
in
pop
sub
daa
shll
sbb
and
andb
pop
sbb
xor
and
mov
push
loope
jnp
mov
nop
pop
jo
xchg
and
adc
lcall
test
adc
pop
orb
pop
subb
xor
inc
add
arpl
stos
fcomps
sub
mov
ret
fists
xchg
nop
sub
or
in
movsb
dec
cwtl
mov
sub
fcmovb
mov
clc
push
mov
and
and
das
mov
rclb
cmp
test
or
lret
cwtl
pop
mov
into
nop
xor
and
push
pop
shlb
popf
adc
push
jne
lcall
xor
inc
cmp
mov
xor
mov
aaa
mov
fdivs
mov
cmp
aam
loopne
jo
pop
inc
xor
ljmp
ss
push
shrl
mov
aaa
push
cli
lcall
mov
adcb
xchg
xor
jbe
cmp
outsl
jp
sbb
and
pop
fcompl
inc
add
inc
es
sub
add
fdivrs
and
push
add
je
cmpsl
cmpsl
inc
inc
call
cli
aam
jo
lods
push
push
pop
call
daa
mov
dec
scas
inc
cmp
pop
mov
jnp
mov
add
push
dec
bound
cmp
inc
imul
inc
add
xor
mov
ss
or
nop
and
lcall
xlat
std
sbb
or
aam
in
add
add
push
enter
xor
jl
push
fs
lods
imul
jo
sbb
sbbb
test
sbb
xchg
mov
enter
mov
inc
fnstenv
xor
xor
aaa
xor
xor
xor
inc
xor
inc
xor
xor
dec
xor
dec
xor
dec
xor
dec
xor
jg
push
xor
push
xor
push
xor
push
xor
pop
xor
pop
xor
pop
xor
pop
xor
mov
pop
xor
popa
xor
arpl
mov
xor
dec
outsb
mov
ret
cmp
cmp
cmp
cmp
xor
mov
xchg
fs
fildl
xlat
rcrb
push
mov
es
inc
adc
sub
jge
in
test
outsb
sbb
out
je
push
aaa
aaa
mov
repnz
sub
in
xor
sar
pusha
pop
mov
in
push
mov
inc
add
fcoml
fmuls
cltd
fs
int3
mov
les
jg
add
repnz
nop
andl
xchg
sub
sbb
cs
mov
in
enter
dec
jg
leave
add
or
add
mov
dec
dec
das
xor
clc
loope
inc
add
or
mov
inc
jb
andl
pop
dec
inc
jo
js
inc
cmovle
cmp
sbbl
push
dec
fbld
inc
test
or
inc
ficoml
out
pop
and
and
ss
enter
cmp
shrb
lock
cmpl
pop
push
icebp
pop
subb
or
and
inc
cmp
enter
movsb
xchg
aas
inc
xor
dec
and
jo
and
adcl
xchg
aas
fdivs
or
add
inc
push
je
dec
and
inc
jecxz
js
or
lock
inc
xchg
mov
adc
mov
outsl
ss
mov
ffreep
inc
mov
std
mov
fdivs
insb
popa
imul
outsb
cld
cmpl
mov
mov
sbb
mov
mov
push
push
mov
add
dec
xor
das
mov
mov
adc
add
ret
sbb
jno
push
mov
adc
popl
pop
or
jo
and
and
and
sub
and
sbb
gs
fistpll
and
outsl
gs
outsb
outsl
adc
scas
xor
in
in
pop
sbb
cmp
imul
pop
test
adc
xor
sub
mov
lahf
inc
jo
or
mov
loopne
rclb
mov
test
in
test
in
loope
add
cmc
push
inc
add
push
cs
les
mov
subb
mov
xor
jae
imul
lret
ja
outsl
outsl
jne
data16
je
push
sub
test
insb
adc
adc
or
cltd
leave
or
pushf
sub
loop
fbstp
xchg
adcb
mov
cwtl
insl
imul
cli
push
pop
mov
sbb
or
wbinvd
iret
xor
add
and
add
mov
jmp
cmpb
add
adc
xor
sbb
cltd
adc
inc
dec
cmc
test
das
or
add
test
push
arpl
push
addb
xchg
mov
lahf
and
xchg
cmp
fnstcw
ja
movsl
pop
mov
call
nop
insl
mov
mov
cwtl
sub
popl
mov
pop
xchg
cmp
cmc
outsl
arpl
push
and
cld
cld
or
iret
and
cld
sbb
orl
or
mov
pop
xor
push
jl
sub
mov
inc
adc
pop
adc
push
xchg
lock
pushf
ret
adc
sbb
into
shll
cmpl
mov
decb
mov
or
testl
sub
lea
cmp
push
inc
xchg
sbb
or
daa
add
pop
or
mov
xlat
mov
cmp
or
push
je
es
leave
leave
addl
push
fimuls
imul
and
mov
mov
jbe
ud1
push
or
or
and
inc
mov
nop
pop
rorb
hlt
cltd
sbb
push
inc
inc
mov
sbb
lahf
pop
jl
mov
cs
hlt
scas
stc
mov
xchg
stos
cmp
sbb
fcompl
jo
or
pushf
push
fs
ds
pop
insb
popf
subb
lahf
jne
adc
xchg
clc
pop
popf
dec
shlb
ja
inc
or
iret
inc
arpl
xchg
aad
push
xchg
push
or
add
xor
inc
cwtl
xlat
pop
int3
mov
pop
sbb
or
inc
sub
cmpsb
pop
dec
sbb
or
mov
xchg
dec
lods
shlb
imul
xor
outsb
pop
aaa
adc
mov
dec
out
jle
js
fstpl
fisttpll
stos
mov
in
xor
mov
ret
clc
lock
sub
pop
adc
pusha
push
sbb
jle
cmp
add
adc
cld
push
mov
add
mov
mov
fadds
and
dec
mov
adc
push
sub
lcall
aaa
mov
xchg
movsb
cmp
mov
push
mov
daa
add
cmp
pop
inc
add
add
gs
xchg
gs
mov
and
cmp
lods
rcl
inc
dec
cmp
and
aaa
add
xchg
je
pop
int3
mov
int3
xchg
je
pop
jbe
xor
jg
cld
ret
jp
add
xchg
pop
sub
sub
and
xor
mov
push
rorl
imul
cld
jge
xchg
push
lds
rolb
shll
mov
jno
adc
fcom
mov
lret
sub
cmp
mov
push
and
mov
test
mov
xor
or
dec
jo
lea
or
push
and
sbb
jmp
aas
sbb
xor
inc
clc
inc
ret
clc
insl
or
stc
mov
mov
pop
adc
out
mov
shl
xchg
sahf
and
out
into
mov
adc
shl
sub
xchg
jae
test
arpl
xorb
cmp
out
push
add
mov
adc
pop
inc
xchg
outsb
sbb
push
pop
repnz
xchg
dec
mov
mov
je
and
loopne
push
push
mov
mov
cmpb
mov
add
nop
stc
insb
imul
add
push
dec
inc
dec
ret
fildl
mov
rorl
outsl
lods
cmpsl
fstpt
push
xchg
pop
mov
mov
test
xchg
jmp
in
sub
inc
in
hlt
pushf
pop
or
cmp
and
and
or
lret
out
jne
cmp
in
sbb
popf
inc
aas
add
xchg
and
xchg
int3
in
adc
das
adc
sub
les
mov
pop
mov
adc
cmp
fnstenv
xor
inc
push
adc
repnz
adc
cltd
clc
add
dec
add
dec
lds
fbstp
out
js
pop
mov
fldl
into
je
mov
mov
test
aam
or
stos
test
mov
in
inc
adcl
xor
jo
ret
dec
pushf
jns
movb
xchg
rolb
adc
pop
in
or
out
xor
pop
push
dec
inc
lea
inc
dec
inc
cmp
or
pop
sarl
loopne
ljmp
fstl
mov
sub
sbb
ss
dec
mov
mov
inc
xor
call
es
mov
pop
dec
mov
sub
dec
cmpsb
lock
sti
fcom
push
jns
sqrtps
and
scas
jge
aad
test
inc
sub
cmp
push
es
div
inc
adc
les
in
mov
add
xchg
in
lock
mov
fwait
jge
sub
push
jae
cmpsl
and
mov
or
dec
sbb
xchg
inc
and
or
test
pop
inc
movsb
inc
dec
xorb
xor
cltd
push
call
add
gs
out
push
pop
jmp
and
leave
sub
sbb
and
mov
push
mov
pop
das
or
pop
or
insb
cmc
jmp
jle
or
and
outsl
aas
inc
nop
in
scas
jge
push
add
test
in
test
andl
cmp
inc
imul
sub
dec
rorl
cld
cmp
jb
ja
andl
sbb
push
add
out
cmp
pop
or
mov
adc
mov
aaa
mov
rcll
sbbb
mov
sbb
push
bound
sub
test
jne
xchg
add
or
enter
fsubl
pop
pop
xchg
insb
aaa
sbb
cmpsb
inc
push
mov
jp
dec
loop
inc
mov
push
cli
adc
dec
bound
xchg
or
sub
sub
movsl
je
xor
xchg
and
cli
lods
add
movzwl
js
jne
sub
xchg
rorl
and
mov
add
inc
add
insl
add
lret
pop
enter
cmp
mov
out
sbb
ja
lea
mov
inc
or
sub
nop
xchg
cmp
je
inc
sbb
jnp
inc
xchg
mov
into
mov
mov
mov
movsb
loopne
mov
dec
sti
jge
sti
push
sub
mov
dec
adc
dec
add
push
lea
mov
lock
loopne
bound
mov
xor
ljmp
into
mov
rcll
add
dec
sbb
push
mov
fimuls
test
rolb
fwait
sbb
dec
push
sub
or
test
cmpl
adc
inc
jmp
sbb
push
cmp
arpl
dec
out
jp
dec
pop
and
testl
aas
repz
sahf
add
push
sarl
popa
xor
push
cmp
adcl
and
fwait
in
mov
inc
das
rolb
ret
sub
sub
div
fisubl
es
popf
sbb
mov
pusha
add
testb
inc
xchg
mov
divl
or
stos
imul
iret
mov
test
xor
add
adc
push
mov
add
dec
pop
inc
and
add
or
sarb
sub
jmp
or
test
enter
subl
adc
adc
push
dec
and
adc
loopne
in
popa
push
sbb
cmpb
push
adc
test
cmp
xor
or
pop
repz
and
aad
out
or
cmp
out
fdivrl
es
cmp
lcall
push
decb
cltd
adc
ljmp
lcall
add
nop
push
imul
mov
xchg
push
inc
cmpsl
inc
js
sub
inc
adc
xor
movsl
inc
adc
inc
add
sbb
inc
pop
cmp
cmp
sbb
ficoms
outsl
push
leave
addr16
movsl
push
arpl
push
push
clc
push
fcmovbe
call
push
les
cmp
je
outsl
in
inc
jp
les
les
or
stos
inc
test
je
shr
pop
jnp
mov
nop
push
sub
add
and
xor
shrb
inc
mov
xor
mov
inc
sub
add
mov
pop
mov
scas
pop
and
mov
mov
push
stos
sarl
adc
jo
inc
mov
cmpsl
sub
push
arpl
sbb
mov
stos
push
arpl
daa
pop
and
jmp
pop
xchg
push
cmp
xchg
inc
and
fwait
push
lcall
jns
je
je
cld
lea
push
add
adc
fimull
or
popa
adc
push
inc
adc
movb
adc
les
mov
roll
adc
inc
pop
mov
das
cs
inc
pop
repnz
mov
movsb
nop
fs
and
lods
jmp
xchg
addr16
imul
mov
enter
aaa
nop
out
mov
or
xor
and
rolb
leave
sahf
inc
pushf
push
jnp
sbb
popl
imul
movsl
pop
xchg
cmp
aam
or
xchg
in
scas
push
mov
inc
cmp
push
and
out
sbbb
cmpb
pop
or
inc
jae
sub
jbe
es
and
xchg
lea
loopne
sbb
xor
xchg
mov
sub
push
fcoms
push
daa
shrb
cmp
dec
dec
mov
inc
imul
aaa
jle
push
jg
test
ds
mov
inc
adc
or
fs
adc
inc
adc
rolb
jo
adc
jge
jnp
push
enter
iret
pop
mov
mov
das
jno
imul
popf
xchg
xchg
add
mov
pop
inc
fldl
dec
test
jl
sbb
xor
mov
out
nop
xor
popl
inc
fs
sub
adc
mov
xor
mov
loop
andps
ja
dec
je
push
pop
dec
in
ret
mov
cmp
sbb
sub
pop
rolb
jnp
sbb
add
js
dec
mov
lea
push
jmp
inc
add
xchg
xchg
ret
sub
sbb
bound
push
xchg
add
xchg
push
xchg
test
mov
sub
dec
test
mov
mov
mov
push
inc
inc
add
add
insl
dec
mov
pusha
sbb
sub
xlat
in
inc
fisubs
insl
xchg
dec
fcmove
add
or
adc
movsl
or
add
outsb
fwait
dec
pop
jno
jg
shl
loop
addr16
mov
inc
push
jmp
popa
jp
cmp
lods
cmp
aas
inc
inc
inc
xor
xchg
xchg
ja
dec
push
push
xchg
daa
mov
cmp
nop
sarb
xchg
andb
jbe
sub
xchg
pop
cmp
sbb
leave
or
sub
push
adc
push
ret
test
xchg
jo
lret
loope
scas
xchg
push
or
movsb
jmp
aas
add
movl
jbe
pop
cwtl
sub
stos
cmp
add
inc
mov
sub
inc
push
outsl
arpl
or
add
add
pop
pop
mov
sbb
or
add
inc
nop
cmpsb
push
dec
fiaddl
push
sub
or
push
pop
out
sbb
push
nop
je
adc
cmp
cmp
mov
push
mov
jmp
loop
jle
or
jl
cmp
outsl
or
insl
addr16
cmpsb
inc
adc
je
lods
aad
into
and
ret
jne
out
push
andl
or
nop
in
adc
adc
rolb
adc
js
and
sbb
sub
add
imul
bound
mov
jp
je
ret
sbb
lea
pushf
cmpsb
adc
add
mov
push
pop
cmp
sub
add
icebp
fxtract
leave
lcall
les
or
xchg
cmp
rcrb
mov
ljmp
insl
add
add
dec
int
cmp
push
adc
xlat
mov
xor
iret
xchg
mov
sub
or
repz
shrl
mov
push
mov
xchg
clc
pop
add
mov
fildl
test
ja
lret
adc
sub
sub
jp
add
sub
aad
and
sarl
sti
xor
mov
xor
iret
mov
add
add
xor
sbb
or
cwtl
mov
arpl
push
idiv
jne
dec
out
mov
xchg
jmp
lret
or
cmp
jo
into
ret
pusha
sub
jg
push
out
xor
popa
mov
add
jo
xchg
lds
mov
iret
lds
mov
sbbb
add
mov
add
subl
xchg
adc
cltd
call
add
and
sbb
mov
or
jge
push
divl
mov
fiadds
add
push
dec
add
sbb
js
jge
in
jge
jo
jae
or
inc
push
jne
mov
xbegin
out
lods
data16
xor
outsb
pop
and
inc
adc
pop
jbe
dec
js
pop
cmp
in
sbb
dec
shl
jne
popf
lret
or
call
adc
out
ja
jne
pop
nop
fimuls
ja
cmp
stos
inc
sub
nop
or
and
and
lods
mov
pop
mov
pop
ja
mov
mov
faddl
enter
leave
mov
xchg
and
adc
mov
std
dec
cmc
add
adc
push
mov
or
jmp
aaa
sub
and
sub
dec
push
or
mov
xchg
fiadds
inc
adc
mov
iret
xor
dec
cmp
jne
push
and
add
xor
sub
and
mov
je
pop
cmp
loop
dec
cmc
ja
add
int
fiaddl
and
pop
sub
fistl
sub
cmpl
call
imul
pop
or
fiadds
mov
cmp
pop
mov
add
rcrl
mov
addb
sub
mov
dec
mov
inc
xorl
ds
dec
dec
imull
loopne
lea
cmp
push
xor
out
roll
fcoms
rcrb
dec
xor
orl
push
mov
jae
mov
jp
mov
enter
outsb
loop
and
or
loop
xchg
inc
adc
aam
xchg
aas
sbb
fimull
cwtl
les
test
sub
hlt
add
jg
ja
adc
fdivs
adc
jns
sbb
lret
jl
adc
sbb
lret
shlb
xchg
inc
mov
test
cmpsl
mov
or
mov
fnstsw
lods
imul
push
push
xor
sub
imull
add
aam
addb
js
push
subb
addb
mov
or
ds
aad
clc
cmp
ja
inc
or
add
add
push
xchg
sbb
insl
hlt
add
test
push
pop
lcall
inc
cmp
jp
dec
xor
clc
xor
lcall
jge
sbb
cmp
fld
sub
xor
inc
rcl
or
pop
sbb
jae
jae
push
inc
fimull
shll
inc
inc
xchg
gs
lret
imul
xor
add
and
out
xor
sub
sub
jbe
pusha
add
divl
inc
inc
and
jmp
test
inc
pop
xchg
jne
add
inc
cltd
push
mov
sbb
pusha
sub
xchg
sbb
xchg
adc
sub
sub
cmpsl
jbe
jge
mov
jl
sbb
pop
clc
adc
jl
mov
dec
les
inc
add
pop
sbb
rol
or
add
push
inc
mov
movsl
in
push
inc
adc
add
dec
dec
sbb
fdiv
and
xchg
push
aas
sub
cmp
inc
sbb
add
cld
lret
mov
or
mov
enter
mov
insl
xchg
xor
jne
inc
arpl
push
mov
pop
icebp
mov
mov
outsb
mov
mov
outsb
dec
mov
mov
pop
mov
divl
xor
jnp
fdivrs
push
push
cmp
jmp
in
popf
call
mov
fcompl
lods
mov
rolb
les
ljmp
movl
lahf
inc
or
je
or
cmpsl
adc
xchg
and
cld
sbb
stos
and
out
xor
test
xchg
push
jmp
mov
dec
mov
and
xor
roll
lret
dec
pop
adc
arpl
mov
xor
ret
pop
pop
mov
shll
pushf
xchg
cmpsb
add
mov
pusha
add
fs
lods
xlat
fdivr
icebp
pop
jns
aaa
sbb
jle
subb
add
or
cmpl
lock
shrl
in
stos
pop
or
cmp
bound
clc
nop
lahf
test
add
xorl
xchg
mov
adc
shlb
fsubs
add
push
xlat
les
xchg
jg
or
mov
hlt
jle
or
fistl
xor
orl
jo
cmp
and
ss
in
xchg
int
or
cmp
mov
cmp
repz
inc
jl
idivl
outsl
lods
mov
mov
insb
imul
mov
sbb
das
and
insb
mov
outsb
or
sub
mov
daa
or
daa
sub
shr
mov
outsl
dec
jl
mov
scas
push
xchg
dec
orb
dec
inc
mov
add
hlt
movsb
movsl
lds
jg
pop
sar
mov
jo
orw
cmp
sbb
pop
push
and
inc
cmp
or
dec
fimuls
push
inc
inc
sbb
ljmp
ret
rolb
add
fs
push
pop
movsb
cmp
fsubl
push
fcoml
jle
out
xchg
cs
add
pop
xchg
fcomps
mov
pusha
mov
pusha
lock
in
adcl
out
out
inc
cmp
pusha
fisttpl
xor
jl
lahf
fisttpl
imul
sbb
test
out
inc
xchg
out
inc
and
dec
pop
clc
test
or
and
outsb
nop
loope
or
in
add
push
adc
cld
mov
in
lock
sub
movsl
add
addb
xorl
jns
xchg
jl
push
lock
imul
adc
jae
cli
add
or
cli
add
xor
mov
loope
push
dec
sub
or
insl
or
dec
cltd
adc
cmp
inc
mov
or
outsb
dec
pop
imul
mov
cmp
sub
adc
xor
adc
dec
cmc
add
mov
je
add
push
mov
jle
pop
push
xor
or
xchg
dec
outsb
mov
pop
lcall
bsf
sbb
repz
js
sbb
pop
cmpsb
jne
sahf
sahf
and
and
fsubr
ds
adc
ljmp
pusha
popa
lods
mov
cmp
nop
xor
jge
mov
nop
enter
lea
or
dec
addb
adc
mov
pop
outsl
adc
mov
add
mov
or
sub
call
mov
dec
in
int3
testl
sbb
mov
pop
adc
xchg
pop
and
pop
sbb
pop
add
pop
inc
mov
hlt
jle
loop
aaa
lods
ja
in
push
mov
push
orb
or
int
jl
pop
pop
fscale
mov
adc
sahf
cmp
dec
jle
mov
push
mov
scas
push
dec
jl
jg
ja
jle
jmp
sub
into
cmpsb
pusha
outsb
pop
jle
sbb
jg
add
sub
loopne
ds
mov
inc
loop
jae
mov
call
adc
push
fbld
repz
or
out
out
mov
sbb
push
inc
sbb
mov
nop
rclb
loopne
lods
push
add
jno
lgs
out
and
mov
sbb
fisubl
gs
adc
lret
inc
ds
push
lret
push
mov
and
lret
nop
dec
mov
adc
jne
pop
push
into
lret
jns
dec
jle
push
fmull
lret
mov
add
pushf
mov
push
add
repz
int3
inc
mov
and
pop
pop
ds
rol
add
mov
jmp
mov
cmp
repnz
add
or
push
ret
arpl
into
enter
js
shlb
dec
push
jb
inc
stos
lods
add
loope
fwait
xchg
loope
fmulp
dec
inc
mov
sbb
mov
scas
add
mov
xor
and
ss
in
cmc
dec
sub
fsts
aas
jnp
or
cmp
pop
cmp
push
inc
stos
xchg
rorb
ret
push
xlat
ret
push
in
mov
add
adc
rclb
out
test
pop
adc
push
sbb
cmp
mov
into
cli
pop
outsb
ret
fldl
scas
mov
adc
cmp
jbe
mov
pop
xlat
icebp
sbb
push
or
jmp
add
sbb
adc
enter
int3
aaa
icebp
dec
mov
aas
push
mov
push
sbb
mov
ret
stos
or
dec
adc
sbb
cmp
add
jb
ljmp
jns
mov
push
xchg
stc
rcll
mov
js
add
or
mov
insl
cmpsl
data16
js
scas
les
loope
or
cmp
cmpl
mov
sub
jg
pusha
or
mov
jmp
fnstenv
cmp
or
stos
jne
mov
out
cmp
out
cmp
loopne
shl
xor
das
mov
popa
out
out
inc
jo
and
jb
je
lds
jae
sub
add
mov
add
je
insb
add
imul
xchg
add
add
addr16
ljmp
cs
fldcw
jmp
add
mov
xor
fldl
rolb
jp
sarl
and
cmp
xchg
inc
rol
loope
sbb
sbb
lods
cmp
outsb
and
imul
bound
insb
inc
xchg
and
sub
pop
inc
add
mov
or
sar
or
sbb
xor
adc
push
mov
cmpb
mov
or
lcall
jl
stos
sbb
pop
push
or
addb
mov
inc
femms
inc
ss
sbb
addb
adc
lock
dec
test
lea
data16
cmpsl
sub
movsb
inc
and
fistpll
or
pop
divb
jp
hlt
push
push
mov
ljmp
jl
popa
test
xchg
adc
cmpsl
push
mov
sysret
lods
xchg
out
cmpl
xchg
and
fldt
inc
add
add
dec
or
sbb
xor
daa
and
inc
pop
xchg
mov
fs
push
dec
insb
dec
cmp
pusha
adcl
add
pusha
loope
adc
jmp
xchg
adc
mov
cmp
pop
sbb
adc
loop
incl
adc
nop
xchg
sbb
outsl
mov
cmp
sarb
inc
sbb
cmpsl
lret
aam
mov
mov
mov
adc
lds
inc
sbbl
xchg
mov
push
test
lret
jne
inc
insb
xchg
dec
inc
stos
jae
lods
out
adc
push
sti
xorl
xchg
add
pop
jg
and
dec
in
or
loopne
push
or
inc
mov
cmc
ror
add
inc
lret
jecxz
nop
dec
and
mov
mov
inc
loope
lret
pushl
and
fidivs
fstp
scas
cmpsb
add
mov
inc
in
test
mov
cmpsb
cmp
pop
inc
insl
jne
pop
sbb
lock
int
adc
insl
sti
movl
and
or
pop
mov
subl
pop
and
aad
into
ror
inc
ret
push
pop
push
add
inc
enter
les
add
enter
outsl
pushf
in
mov
add
adcl
dec
ss
out
xlat
lret
jecxz
mov
sbb
roll
xchg
adc
and
jne
stos
add
cmp
add
push
push
xchg
test
fadds
incl
pop
jno
mov
daa
in
and
sub
cmpsl
xor
dec
lahf
mov
ss
lods
or
pop
and
dec
repnz
daa
jl
xchg
add
sub
adc
outsb
adc
shll
push
scas
xor
mov
inc
inc
cli
mov
stos
mov
popl
sub
jae
add
add
mov
jns
inc
fldt
shll
js
movsb
mov
adc
dec
sbb
divl
add
adc
xor
ret
ja
pop
sbb
and
pushf
and
sub
or
sbb
mov
push
je
lds
cmp
out
leave
mov
je
shl
add
mov
mov
ds
lock
jge
xchg
imul
aas
jae
iret
jo
adc
test
mov
add
mov
jns
sbb
popa
adcb
orl
add
shrb
jle
in
enter
xor
xchg
loope
test
push
cld
mov
push
aam
popa
loope
inc
rcrl
pusha
push
das
in
sub
insb
lcall
aaa
or
adc
cmp
pop
pop
and
xor
adc
into
lea
push
mov
mov
sub
pop
inc
cld
push
das
pop
mov
add
addb
add
or
xor
test
jl
mov
cltd
push
ja
lret
and
and
loopne
adc
mov
cmc
movsb
adc
aam
iret
mov
lret
sbb
push
sub
pop
stc
lods
aas
scas
inc
sbb
leave
inc
mov
sbb
mov
sub
inc
sub
mov
add
dec
sbb
aas
or
stc
push
ret
mov
or
mov
jns
sahf
adc
lods
xor
les
je
push
xor
mov
and
addl
aad
sub
test
mov
addr16
test
inc
loope
mov
and
mov
movsl
and
xchg
mov
cs
pop
pop
jge
push
test
and
xor
sub
adc
jecxz
cli
out
jge
sbb
hlt
push
mov
fs
ret
mov
sub
pop
lea
xor
and
cmp
and
stos
mov
xchg
xorb
add
sub
sti
xor
shl
adc
sub
repz
xor
or
into
push
push
xchg
testl
test
xor
fidivrs
push
add
jnp
cmp
repz
test
sub
shl
dec
and
cmp
das
adc
xlat
popf
dec
adc
shrb
sub
test
pop
test
pop
mov
call
shl
mov
sbb
aaa
mov
sbb
xchg
fs
jg
sbb
inc
mov
sbb
cmp
cmp
phaddd
sub
lea
imul
add
sub
les
fs
das
int3
jecxz
pushf
or
insb
orl
shlb
mov
sahf
rol
sarb
xchg
push
fisttpl
lods
mov
mov
adc
jl
add
icebp
xor
mov
and
mov
cmp
out
and
sub
push
add
pop
pop
jp
leave
add
das
push
cmp
arpl
or
cmp
jl
pop
enter
cs
lret
mov
mov
sub
insb
test
pop
mov
cmp
lea
sbb
mov
cld
lods
xor
fisubs
movzbl
adc
and
arpl
ret
clc
jge
adc
jle
test
pop
jno
je
add
xchg
sub
shlb
decb
in
push
add
mov
mov
jle
out
jno
xchg
test
jns
jl
jge
inc
jmp
fs
mov
xsha256
cmpsb
adc
pop
xor
mov
adcl
jle
push
adc
push
push
push
in
or
mov
and
mov
js
push
push
jno
fs
mov
xor
and
mov
jg
or
pop
sub
adc
inc
adc
xchg
mov
sub
xor
je
mov
pop
fdivl
or
je
sarb
mov
lret
and
fwait
mov
jno
and
mov
adc
mov
flds
dec
and
test
icebp
dec
push
jge
xchg
shlb
xchg
jno
cmp
or
dec
dec
cld
aaa
in
sar
test
gs
add
or
inc
fmull
xor
dec
imul
sbb
das
or
push
mov
sbb
andl
mov
cmpsl
stos
or
sbb
xlat
xchg
cmpsb
adc
aaa
nop
inc
adc
mov
das
cmp
add
repnz
inc
test
xor
xchg
dec
xor
push
mov
cmpsl
paddd
push
push
and
int3
sbb
jecxz
clc
sub
dec
std
push
lea
cmp
dec
pop
insb
add
sub
es
or
cmpsb
cmp
and
mov
jl
mov
mov
cmp
mov
cmp
add
insl
mov
sar
or
xchg
dec
stos
or
imul
fs
incb
push
add
push
and
rolb
xor
jle
jecxz
push
pop
or
pop
or
jmp
cmp
or
ljmp
mov
cmp
and
push
rcll
and
add
mov
je
pop
add
mov
lret
addw
jbe
cmp
dec
jl
xor
and
pop
xchg
movswl
and
sub
inc
call
and
inc
cmp
dec
js
jmp
loop
xchg
mov
sbb
das
sbb
push
cmp
sub
add
cld
std
adc
sbb
filds
sbb
nop
add
add
sbb
pop
or
add
jno
pop
cmp
and
in
xchg
nop
xchg
xor
jo
mov
sub
sub
sub
and
jle
xchg
dec
jle
cwtl
sbb
sbb
cli
pop
popf
fstl
cmp
cmp
in
out
pop
inc
add
mov
scas
xchg
pusha
movl
dec
mov
sarl
mov
dec
popf
xor
xchg
pop
lcall
jmp
ss
fs
push
and
jmp
shrb
scas
outsl
int
aaa
pop
jne
das
aas
mov
dec
add
pop
push
xor
pop
mov
xchg
cli
std
or
inc
adcl
mov
push
lock
cwtl
xchg
push
arpl
mov
stc
push
mov
pop
xor
adc
inc
int3
or
or
or
mov
xor
out
aaa
lock
dec
lea
jmp
mov
fdivr
mov
lret
sarl
mov
fcoml
or
pop
pop
js
ffreep
sbb
xor
mov
and
rolb
ret
add
jmp
sti
sti
mov
add
rcl
inc
push
jg
add
ljmp
and
mov
cmp
xlat
enter
mov
arpl
daa
out
arpl
sbb
add
aam
test
cmp
mov
test
outsb
push
xor
jns
and
add
jb
mov
mov
insl
arpl
ret
outsl
dec
dec
jle
inc
inc
div
mov
pop
add
or
int3
mov
push
cmpsb
push
call
cmp
mov
das
lods
inc
call
int3
push
outsb
cltd
and
in
inc
sbb
jne
inc
inc
mov
fiadds
jg
add
and
mov
mov
daa
inc
call
inc
lea
outsl
lcall
or
icebp
je
mov
add
ret
loopne
pusha
sarl
sbb
fildl
ljmp
test
rcr
fldenv
sub
clc
lea
adc
sub
nop
ja
mov
add
mov
out
dec
loopne
inc
mov
inc
inc
stos
mov
cmpsb
std
inc
mov
xorl
add
stc
jmp
fdivs
lret
hlt
add
inc
cmp
leave
or
cwtl
loope
loopne
add
daa
rorb
adc
jb
lret
rorb
sbb
push
inc
test
shll
sbb
adc
pop
aam
aaa
ret
aaa
push
lods
xchg
jle
mov
inc
aam
jo
loop
mov
mov
inc
inc
jg
insb
fwait
mov
rcrb
mov
call
loopne
lods
popl
mov
inc
sub
mov
pop
ss
daa
hlt
lcall
mov
mov
xchg
xchg
jl
jle
icebp
xchg
in
cwtl
pop
jl
push
lock
or
dec
lock
jecxz
mov
out
pop
mov
or
push
or
mul
test
pusha
jp
sbb
mov
jl
rolb
push
pop
mov
cmpsb
orb
cli
das
jmp
loope
or
sub
roll
rolb
inc
sbb
mov
mov
out
jne
cmp
sub
lock
jmp
test
pop
lods
mov
clc
mov
dec
outsb
inc
sub
gs
es
or
add
icebp
mov
or
sbb
push
outsl
rcrl
dec
inc
cmp
lea
pusha
mov
mov
or
push
inc
add
ss
mov
add
rolb
lahf
mov
inc
push
add
cmp
int3
cli
push
aam
mov
int3
addb
xor
sbb
and
adc
repz
ret
mov
dec
cmp
xor
adc
test
mov
movsl
add
aas
lea
mov
mov
mov
add
and
jns
and
clc
lret
cs
add
sub
inc
sahf
mov
dec
mov
es
repz
icebp
sar
lea
push
sahf
inc
mov
jb
and
movsb
rcrb
shll
xor
test
addr16
dec
xor
test
sbb
nop
adc
mov
sub
jnp
ret
test
jge
xchg
jge
sbb
xchg
lret
or
in
add
femms
pusha
test
inc
add
fsubrl
sti
add
mov
les
xor
or
adc
xchg
shll
and
and
cmp
xchg
add
xor
lret
arpl
mov
xor
mov
rcll
lock
push
fs
push
adcb
ret
pop
loopne
aad
inc
jmp
scas
xlat
sti
es
add
lds
inc
cmp
fstp
mov
push
fs
push
sbb
and
ret
js
loop
or
cltd
movsl
mov
pop
test
lcall
adc
pop
dec
fdivs
js
imul
dec
push
push
movsl
and
push
jg
iret
out
add
mov
xchg
add
jmp
mov
lock
push
arpl
cmc
push
add
lea
xor
js
loop
daa
nop
nop
add
adc
add
dec
push
ljmp
imul
roll
xor
adc
stc
push
jb
divl
lds
dec
mov
jae
pop
out
sbb
inc
and
aam
inc
inc
lds
xor
adcl
pop
pop
jb
dec
mov
pop
ljmp
dec
jno
push
add
subl
mov
adc
call
fildl
jmp
mov
sub
fbld
jno
into
jae
je
push
lret
sub
shlb
add
mov
push
inc
or
push
cmp
mov
jp
inc
mov
loopne
rcr
add
sub
push
jne
xchg
sbb
cmp
ja
dec
fs
sub
pushf
rolb
mov
imul
xor
shl
test
xchg
and
adc
sahf
popa
add
fdivrl
mov
cmpsb
jne
mov
or
mov
xchg
andb
sub
fwait
in
push
inc
mov
adc
jmp
jno
insb
and
dec
cmp
imul
sti
mov
bound
jmp
xor
or
sar
dec
xor
or
ja
lea
jmp
jge
lea
mov
push
mov
lea
xor
adc
inc
in
inc
mov
push
incl
pop
cmp
xchg
je
inc
jo
je
adc
or
ret
insb
loop
jmp
sbb
ljmp
daa
les
movntq
xchg
sub
divl
add
hlt
cltd
jecxz
or
pop
xchg
adc
sbb
rcr
scas
push
les
and
fiadds
xchg
jle
mov
movsl
mov
mov
mov
addr16
adc
and
imul
inc
aas
push
call
adc
pop
sub
or
cmp
arpl
xchg
fucomi
lret
enter
fsub
shr
hlt
iret
enter
xchg
enter
lds
xchg
dec
ja
mov
lea
fistpll
jle
pop
mov
lea
pop
lock
mov
mov
sbb
add
out
andl
add
mov
mov
arpl
xor
or
imul
pop
mov
add
aam
xchg
movsl
fpatan
push
inc
mov
xchg
sub
daa
push
stos
iret
mov
xorb
popa
cmp
add
mov
enter
sbb
or
and
clc
xor
xor
mov
and
pop
mov
enter
test
push
wrmsr
hlt
addr16
cmpl
sbb
jnp
sbb
mov
js
sub
inc
jmp
inc
xchg
faddl
int3
cs
or
sub
add
es
xchg
scas
in
scas
xlat
enter
scas
in
adc
add
or
xor
int3
mov
mov
mov
mov
or
push
xor
hlt
xchg
adc
inc
pushf
push
stos
mov
hlt
das
adc
enter
xor
ljmp
ljmp
cltd
aas
pop
leave
je
push
xchg
popl
jae
mov
pop
sbb
lea
push
sahf
jmp
inc
jge
xor
faddl
sbb
sar
xchg
push
loopne
fstpl
divl
clc
shll
lods
fbstp
mov
jns
popa
mov
adc
jb
xor
xchg
sub
dec
dec
push
cwtl
pop
adc
lea
aam
adc
test
jbe
mov
mov
inc
sbb
subl
push
dec
add
jl
inc
repnz
xchg
lods
insl
ljmp
rolb
aam
jmp
sahf
xor
sarl
sbb
push
cld
jmp
fdivl
mov
rol
add
stos
mov
mov
push
rcrl
fadds
es
adc
cmpsb
lock
xor
enter
xor
xor
fcom
aam
loop
add
mov
movsl
in
or
xchg
push
dec
lds
enter
rolb
loop
addl
into
sbb
icebp
enter
dec
mov
repz
nop
mov
aam
aas
outsl
ds
adc
inc
add
add
mov
xor
fimull
mov
les
or
mov
sbb
xorb
or
adc
js
lahf
nop
sbb
mov
imul
adc
push
or
jmp
nop
sub
push
inc
or
add
sub
sub
je
adc
mov
adc
inc
jne
test
adc
and
aam
lods
das
movl
mov
cmp
inc
bound
and
inc
lahf
add
adcb
xchg
xor
pop
js
xchg
daa
lea
es
out
adc
jbe
aas
xor
jne
rorb
jne
jl
fwait
or
xchg
jbe
sbb
add
jne
jb
cmp
xchg
jecxz
inc
js
aaa
and
add
dec
sub
sub
inc
jb
dec
paddw
sarb
push
or
jl
imul
jl
and
nop
adc
mov
inc
mov
xchg
popf
or
dec
shlb
inc
imul
inc
jge
jl
idivl
inc
loop
orb
or
jge
dec
adc
jns
add
cmp
popf
add
imul
jge
inc
repnz
loope
sbb
stos
outsb
push
outsb
inc
mov
dec
ret
push
je
outsl
ret
or
sbb
roll
xor
pop
mov
cltd
idiv
shrl
xor
inc
cltd
ret
mov
pop
lock
xchg
adc
js
subl
mov
test
xchg
xchg
add
shrl
sarl
mov
pop
lsl
dec
dec
push
aam
jmp
ret
add
add
mov
int3
jo
mov
push
mov
and
mov
jne
inc
cli
rcl
or
lock
pushf
sub
or
and
sub
inc
fisttps
push
rcl
sub
jb
mov
and
mov
mov
push
ljmp
sbb
pop
jnp
std
jmp
inc
pop
sub
loop
fldenv
cmp
xchg
icebp
jl
lock
cmpsl
push
inc
iret
es
daa
mov
mov
jge
sub
push
pushf
mov
sahf
push
dec
mov
push
pop
rolb
inc
inc
cmpsl
add
outsb
es
pop
cmpsl
push
lock
sbb
flds
fadds
fistpll
mov
add
add
test
jl
xchg
dec
call
sub
jno
xor
dec
js
adc
popl
ret
out
leave
and
loopne
cmp
pop
ds
lahf
adc
sub
mov
insb
or
lcall
xchg
jo
loop
push
arpl
inc
mov
xor
adc
outsb
ret
popa
in
xor
and
loope
in
push
mov
inc
daa
push
push
mov
das
cmpsl
in
add
adc
imul
fdiv
in
add
pop
ret
push
cmp
mov
cmp
jge
mov
dec
loop
sbb
das
jl
xchg
int3
sub
inc
xchg
mov
inc
je
les
add
xrelease
sti
sar
fiaddl
lret
outsl
adc
mov
jno
adc
fadds
sbb
cmp
jl
and
enter
inc
je
pop
popa
mov
push
inc
add
or
sub
repz
lret
lods
lock
mov
push
add
mov
adc
jecxz
xchg
movsl
add
neg
cmp
cmpsb
and
dec
or
adc
add
adc
pusha
or
sub
popa
pop
clc
sub
pusha
addl
test
fidivrl
add
xor
clc
test
pop
js
inc
push
jp
add
add
insb
pop
js
mov
aas
mov
pop
jo
popa
push
mov
hlt
mov
push
or
popa
push
sbb
add
push
das
xor
sbb
and
push
push
cmp
jp
push
mov
pop
add
sub
mov
adc
fisttpl
ja
and
loopne
pop
in
xorb
lds
aas
add
mov
add
push
or
mov
es
addr16
xchg
sub
lock
lock
and
ficoml
add
mov
jl
jno
cmp
adc
push
sub
jg
inc
cmp
mov
sub
pop
ja
adc
adc
xor
pop
aaa
int3
jno
arpl
sbb
or
jns
jge
push
xchg
xchg
lea
and
rolb
outsl
aam
adc
imul
mov
adc
cmp
or
inc
stos
cwtl
das
adc
jno
sub
mov
pop
mov
jmp
mov
dec
rorb
hlt
pop
mov
loope
jno
add
adc
adc
in
jl
mov
loope
mov
aaa
xor
int3
and
in
xor
xchg
sbb
daa
pop
add
mov
mov
das
mov
push
icebp
sub
lock
fcoml
aaa
sbb
adc
lock
or
andb
xchg
dec
xor
loop
sub
sbb
dec
cmp
cmp
inc
cmpl
out
mov
clc
mov
repnz
lea
and
xchg
loope
sbb
lds
es
dec
addr16
xor
xchg
mov
inc
ljmp
mov
cmp
inc
fsubrl
imul
aaa
int
jno
mov
fadd
enter
bound
shlb
rcl
add
enter
inc
dec
jl
fists
mov
push
mov
mov
insl
aam
adc
or
pop
pop
inc
adc
cmpl
and
pop
pop
aas
mov
scas
pop
add
add
adc
and
punpckhbw
fdivrl
jmp
dec
xor
xchg
sbb
inc
aam
in
and
sbb
loopne
loopne
and
pop
ljmp
insl
sbb
add
test
jnp
outsl
and
rclb
adc
mov
aad
xchg
mov
push
mov
add
dec
add
or
dec
xchg
adc
pop
in
arpl
mov
call
lret
add
mov
pop
lcall
fmul
enter
ud2
sbb
xorb
and
arpl
rcl
mov
imul
push
popf
xchg
jo
pusha
and
inc
loope
out
jo
test
or
jle
push
jnp
jl
sbb
mov
inc
adc
add
arpl
mov
sub
dec
pop
or
es
je
stc
loop
ret
iret
imul
loop
push
adc
ret
cmp
pop
out
jle
adc
inc
notl
pop
push
fsts
xor
les
repnz
push
push
push
dec
inc
loope
mov
cmp
in
cmpsl
add
aad
or
push
inc
out
jmp
xor
xlat
mov
addps
lahf
or
insb
icebp
xchg
movsb
cmpb
xor
mov
pop
aaa
divb
jnp
cmp
cmp
cmp
xlat
loopne
jnp
add
ffreep
sub
sbb
sti
cmpsl
push
mov
inc
sub
hlt
scas
jbe
or
test
scas
sar
fldenv
dec
shl
xor
incb
add
inc
and
clc
adc
cltd
pop
jmp
or
jl
call
loope
bound
add
mov
sbb
dec
jp
push
or
jle
push
fsubs
jbe
inc
jbe
jg
int3
xor
sbb
test
rorl
push
or
mov
and
and
or
repnz
mov
cmp
dec
sti
ss
adc
sbb
mov
bound
insl
add
push
loopne
xchg
fs
andb
idivb
mov
enter
pop
mov
jg
sub
loopne
push
push
xchg
push
psubq
cmp
aam
cmp
dec
dec
dec
add
xchg
sahf
shr
xchg
jge
inc
jl
roll
sarl
mov
dec
jne
faddl
mov
or
and
subl
sub
pop
jb
sbb
or
dec
outsb
xchg
push
ret
lea
mov
jo
shr
mov
pop
add
mov
cmp
bnd
mov
add
and
mov
jl
xor
enter
or
mov
sarb
gs
xchg
out
test
dec
xchg
cmp
cwtl
mov
or
or
sbb
aad
lret
mov
loope
iret
dec
cwtl
lods
add
xor
sbb
mov
pop
add
loope
mov
add
cmp
sub
leave
out
mov
adc
sbb
out
cmp
rcr
movsl
jne
mov
sbb
arpl
inc
dec
lret
dec
loopne
or
sub
ljmp
jp
mov
add
jge
loop
sbb
std
nop
mov
sub
mov
add
inc
repnz
mov
cmp
out
inc
addr16
pop
push
mov
mov
shrb
mov
cmp
mull
push
cltd
aas
mov
inc
inc
test
pop
cwtl
add
xor
bound
push
mov
jp
testl
stc
or
insl
popa
sub
xchg
inc
sub
sbb
test
sub
jns
cs
dec
pop
adc
pusha
inc
sub
push
xor
jae
add
imulb
ret
leave
pop
pop
je
dec
je
jmp
xchg
sbb
sub
les
adc
cmp
sub
xchg
in
out
jmp
sub
adc
adcl
xor
dec
xchg
adc
mov
xor
mov
adc
xchg
dec
sbb
jmp
sbb
or
jb
pop
sub
push
pop
pushf
pop
or
addr16
xor
push
jb
mov
mov
jle
and
stc
jmp
or
adc
cmp
mov
cli
jae
jecxz
hlt
bnd
inc
movl
adc
shrl
ret
lea
mov
add
mov
cmp
cmc
clc
push
and
test
add
pop
pusha
adc
mov
stc
mov
add
dec
jl
adc
popf
add
cmp
xor
fs
sub
jmp
sub
mov
push
mov
rorb
fxch
das
sarl
call
push
cmp
pop
dec
pop
mov
or
mov
push
xor
int
or
test
out
sbb
push
icebp
pusha
mov
add
add
call
jmp
scas
sub
movsb
andb
sti
mov
pop
lahf
outsb
adc
sti
repz
arpl
xchg
idivl
daa
in
jnp
gs
sbb
clc
in
loopne
mov
or
adc
sub
adc
push
neg
lea
sbb
mov
mov
push
push
dec
enter
sub
imul
aaa
int3
mov
or
popa
inc
adc
cmp
jle
adc
xchg
ret
sub
not
cmp
out
jmp
xor
lock
cld
sbb
scas
cmp
jb
or
mov
inc
clc
jge
jno
cmpsb
lock
sub
or
aaa
dec
add
mov
ja
lret
jmp
pop
inc
mov
in
clc
insb
dec
dec
and
fcomps
or
mov
popa
jb
push
rorb
dec
call
in
in
mov
and
jg
outsl
sub
mov
jmp
push
adc
dec
aam
iret
or
stos
xorb
pop
add
shl
mov
mov
test
dec
pusha
pop
jo
or
jo
push
aam
pop
mov
inc
negl
lods
xchg
mov
jl
roll
push
add
aas
mov
in
arpl
cmp
fisttps
add
addl
loopne
inc
push
pop
les
adc
cmp
adc
and
mov
icebp
pop
les
bound
xchg
dec
dec
add
sub
push
push
xchg
push
jl
pop
sub
jne
jo
ficoms
jmp
pop
cmp
out
ficomps
add
push
or
lock
lods
out
adc
lret
js
hlt
in
mov
pop
add
push
or
aad
in
enter
enter
jg
lret
and
xlat
sbb
xchg
and
fsubrs
cmp
jge
mov
imul
loopne
push
dec
testl
dec
mov
fistpll
add
dec
inc
rclb
mov
shrb
xchg
push
sub
movsl
xchg
or
adc
fistpl
orl
xchg
and
lret
imull
jge
add
clc
add
xchg
cmp
mov
shl
shl
jns
or
andps
popa
add
ret
rcrl
es
ljmp
jecxz
push
hlt
mov
popa
mov
dec
gs
gs
mov
add
lcall
mov
cwtl
clc
mov
inc
mov
cltd
add
add
lret
jl
nop
dec
mov
mov
mov
fdivrl
enter
cmp
adc
add
sbb
xor
shl
sbb
jbe
sbb
fldl
idiv
xchg
fisttps
add
shrb
subl
icebp
repz
or
aaa
out
prefetcht1
sbb
lcall
mov
push
xchg
jp
xchg
outsb
jo
lahf
ja
jl
test
in
ja
nop
dec
shrl
movsb
nop
into
inc
in
popa
clc
xchg
mov
mov
inc
shll
test
sbb
add
movsb
inc
add
mov
xchg
dec
pushf
jae
inc
roll
or
mov
loopne
inc
mov
andl
enter
sbb
mov
and
sbb
cmp
mov
test
or
mov
arpl
and
orb
aas
xor
or
and
and
pop
push
push
or
sub
cwtl
outsb
jno
and
mov
adc
ljmp
inc
or
mov
jbe
sub
xor
sbb
cli
movswl
repnz
push
add
fidivl
subb
sbb
ret
imul
adc
sti
ljmp
mov
xchg
jns
dec
fcmovb
lds
lods
iret
mov
test
add
cmp
test
ss
subl
mov
and
cmp
mov
out
adc
icebp
push
mov
test
lock
add
mov
movsb
lods
fwait
mov
mov
sub
mov
cwtl
frstor
loopne
arpl
add
nop
andb
mov
cwtl
cmp
fadds
lock
ret
popf
push
fwait
push
push
mov
sbb
sub
aam
fcom
ret
pop
cmpl
loopne
adc
xor
add
in
sarb
vaddsubpd
jbe
push
addr16
fdivrl
mov
mov
shlb
jns
mov
aam
xchg
cmp
mov
test
mov
cmp
enter
imul
dec
sub
adc
cli
neg
mov
or
cltd
daa
call
adc
sbb
wrmsr
jge
cmp
cmp
ss
add
inc
jmp
inc
inc
dec
xchg
decl
fistl
jbe
sbb
and
lcall
stos
add
out
test
jmp
sub
push
pop
sahf
inc
sbb
inc
je
pop
or
sub
imul
pop
inc
in
repnz
lret
add
andl
add
cmpsl
addr16
add
call
ljmp
mov
jne
mov
and
ljmp
es
cmp
das
adc
cmp
pop
cwtl
aad
mov
sub
xor
or
dec
ljmp
sub
adc
cmpsb
xor
lock
sub
cmc
iret
mov
xchg
jge
jmp
sbb
push
and
dec
sub
mov
test
lods
popa
popf
in
push
call
popa
push
mov
inc
or
add
lods
pop
mov
adc
sub
mov
jnp
stos
test
mov
adc
sub
and
cs
inc
xor
cmp
mov
xchg
mov
sub
jge
cmp
sbb
imul
push
imul
movsb
daa
ja
mov
fldl
and
xchg
ret
add
pop
daa
pusha
and
adc
outsb
shrl
pop
or
subl
adc
inc
addr16
and
xchg
jge
shrb
mov
adc
cmpsb
push
repnz
mov
test
scas
push
dec
inc
fdiv
push
ficoms
fistpll
test
loopne
in
or
push
movsl
xor
push
cmp
mov
mov
mov
rol
push
add
clc
int
mov
sub
cmp
jl
add
add
aaa
and
cwtl
xor
cmp
and
cmc
and
add
loopne
test
ret
mov
jno
inc
addl
test
cmp
cmp
cmp
xchg
sub
mov
mov
mov
jl
sbb
test
jmp
in
inc
mov
mov
test
adc
or
loope
inc
lar
jl
jnp
lock
pop
cli
dec
adc
stc
add
sarb
pop
cmp
sub
fwait
mov
inc
ss
pop
dec
inc
ss
jbe
pop
roll
xchg
push
jmp
mov
mov
inc
sbb
lods
sbb
cmp
js
and
sbb
xor
add
and
or
call
add
imul
mov
or
jle
mov
xor
repz
sub
jbe
repnz
add
xchg
adc
adc
inc
in
inc
shl
mov
cmpsl
testl
mov
les
xchg
rorl
leave
push
jg
jmp
lret
pop
nop
inc
mov
stc
jmp
movb
add
lret
std
nop
lea
xchg
lock
incb
dec
adc
cli
test
ret
mov
mov
sahf
loopne
ja
cmp
sub
or
dec
add
daa
dec
mov
xorl
das
lock
and
sbb
fstps
inc
dec
divb
add
adc
mov
dec
add
xor
sub
lret
and
or
xchg
mov
add
shlb
lock
sahf
out
clc
add
pop
dec
sbb
inc
fldt
filds
mov
or
push
sar
jl
add
mov
push
add
loopne
push
cli
inc
jb
adc
inc
clc
aam
movsb
test
icebp
dec
fwait
inc
bound
xchg
cmpl
sbb
fildl
call
ja
js
aad
dec
je
insl
add
jmp
jne
out
dec
int3
pop
xorl
mov
pop
xorb
mov
sub
loopne
adc
pop
pusha
and
mov
dec
pop
cmpsb
cmp
push
xchg
clc
hlt
incl
ss
push
adc
pop
ret
fisubs
adc
jb
cmpsl
dec
add
idiv
xorl
xor
cmpsb
fldl
pop
mov
or
das
cmp
mov
mov
js
inc
and
dec
fiaddl
ud2
fdivrs
mov
loop
mov
mov
push
mov
mov
out
jns
cmpl
dec
sbb
outsb
cmc
call
aaa
hlt
cmpsb
xchg
repnz
es
imul
pop
insl
clc
jmp
mov
pop
mov
adc
add
stc
jmp
dec
and
mov
add
sbb
inc
and
mov
popl
dec
dec
lret
jle
jge
mov
xor
dec
cmp
and
jbe
pop
sarb
mov
mov
sbb
clc
dec
adc
sbb
mov
ret
mov
push
pop
mov
mov
jmp
ret
push
push
push
imul
sub
pop
faddl
xchg
repz
adc
adc
and
outsl
repnz
sub
lods
or
xchg
rorb
push
into
and
adc
out
bound
mov
or
and
or
loopne
xchg
mov
fs
rorb
xchg
inc
pop
push
rclb
scas
xor
mov
out
or
add
sub
fistpl
lods
cmp
insb
push
js
pop
inc
jmp
cmp
pusha
cltd
jmp
or
xor
js
ret
jno
adc
add
mov
mov
add
jecxz
cmpsb
sub
lahf
shlb
scas
fadds
lcall
inc
mov
in
and
gs
xchg
adc
or
add
push
jge
jl
idivb
clc
or
sub
popa
and
std
sti
ds
dec
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
and
inc
adc
in
add
fistps
mov
sbb
adcb
dec
pop
xchg
inc
pop
sbb
popl
das
mov
mov
jnp
mov
adc
and
sbb
adc
push
cmp
xorl
cmp
adcl
bswap
int
in
xchg
adc
movb
push
or
inc
add
stc
pop
rcll
mov
cmc
mov
sub
dec
dec
enter
jnp
jp
push
push
sbb
decl
addr16
dec
ss
push
and
pushf
push
lret
or
scas
jge
pop
inc
mov
cmp
adc
push
add
pop
sbb
pop
inc
inc
ds
mov
addl
add
push
xor
outsb
cmovg
xchg
push
and
cmp
xchg
mov
stc
pop
mov
push
sbb
lahf
stos
cmpsl
stc
ret
inc
inc
cmp
mov
xor
ljmp
pop
test
add
jge
mov
jae
and
sbb
adc
jmp
cld
pop
or
lds
loop
or
sti
enter
jo
adc
sbb
mov
iret
aam
sub
pop
mov
mov
add
push
adcb
push
divb
mov
mov
sub
jne
xchg
push
jbe
xlat
add
mov
pop
mov
and
mov
sbb
jne
xchg
xchg
sahf
test
jle
cs
and
js
shlb
test
lret
enter
xchg
sarb
mov
data16
jo
mov
and
add
adc
or
xchg
in
nop
es
pop
mov
add
add
push
ss
sbbb
es
add
jns
pop
icebp
into
add
jmp
push
scas
add
or
or
hlt
cli
in
sbb
push
or
add
movsb
into
and
adc
adc
xor
stos
push
and
push
dec
xchg
out
sbb
and
mull
and
ret
push
dec
pop
xor
mov
fstps
pop
xchg
add
mov
mov
fbstp
sbb
imul
lea
jo
jae
add
push
or
and
mov
xor
or
and
or
rclb
adc
jae
int
add
pop
jle
push
aam
pop
or
ret
inc
lret
jbe
inc
mov
fsubrl
inc
mov
mov
cmpsb
sub
jb
mov
or
jle
cmc
inc
or
scas
pusha
fmull
sbb
test
sub
fsubs
nop
out
lea
je
cwtl
sub
arpl
push
in
push
cwtl
xchg
addb
jbe
addb
mov
cltd
jle
sub
mov
xor
shll
cmc
push
cwtl
imul
jbe
dec
jmp
call
adc
or
jl
sti
rcrb
inc
clc
and
mov
sub
jae
cmp
ficompl
sub
enter
push
sarl
inc
and
and
dec
and
jb
jno
or
sti
mov
dec
cmp
jbe
roll
mov
dec
add
sub
dec
sti
loopne
lods
sahf
push
dec
aas
mov
fstpl
fs
pusha
cmp
xchg
cmp
jmp
dec
subl
xchg
push
or
iret
fs
sub
sub
dec
mov
xor
add
xor
pop
push
mov
pop
mov
inc
push
push
xor
nop
adc
add
pop
inc
push
xor
fsubrp
ljmp
adc
out
cwtl
outsb
pusha
mov
pop
inc
dec
cmp
mov
shrl
push
scas
lret
push
pop
push
or
xor
sbb
push
or
pop
or
or
sub
mov
push
dec
cwtl
dec
push
dec
cld
dec
xor
inc
cwtl
and
lret
aaa
pop
sbb
movl
push
ja
jnp
js
je
test
jbe
pop
cmc
mov
repnz
cwtl
xor
mov
lret
jae
cmp
test
sahf
push
adc
cmp
jne
fstpl
push
pop
cwtl
mov
ret
cmpb
jp
mov
js
sbb
les
and
fs
add
sub
mov
xor
ret
into
sub
scas
adc
leave
jl
mov
jb
pop
push
ja
mov
xchg
cs
xchg
daa
cmp
jmp
mov
sbb
and
or
enter
fsubs
lcall
test
or
mov
insb
into
enter
inc
mov
inc
arpl
cmp
dec
test
cltd
mov
mov
add
in
lock
sub
pop
dec
shrb
movsb
insb
arpl
xor
inc
mov
jb
stos
lea
mov
mov
subb
arpl
stos
adc
hlt
xchg
add
cmp
ss
shrb
je
notb
pusha
arpl
adc
dec
pushf
cmp
mov
pop
in
lea
and
xor
mov
dec
push
pop
push
xlat
xlat
pop
loope
imul
and
jae,pn
add
sub
rorb
xor
and
scas
lds
xchg
xor
ss
cmp
or
dec
sbb
jl
lahf
sub
cmpsl
inc
testb
das
stc
subb
pop
lock
mov
pop
add
xlat
mov
es
jo
icebp
mov
sub
fwait
mov
adc
movsl
imul
lahf
adc
and
mov
add
xor
mov
adc
mov
rcll
fnop
push
dec
pop
and
inc
arpl
es
lea
add
pop
clc
push
ret
ja
popf
adc
lret
push
imul
test
mov
popa
ret
or
lahf
fadds
fnstcw
adc
push
je
jl
push
inc
jns
sbbb
mov
loop
data16
mov
dec
je
add
negl
mov
and
stos
subb
lock
call
popa
aam
add
pop
mov
add
or
add
js
ror
and
out
sub
cmpsl
adc
adc
xchg
lods
xchg
push
insl
add
in
nop
in
add
xor
movsl
popl
dec
mov
test
adc
or
lea
push
andb
lds
hlt
ret
or
push
bound
pop
mov
popa
nop
movsl
push
push
cmp
lds
lock
insl
xor
sahf
adc
mov
or
out
int
sbb
into
xor
pop
xchg
cmpsb
dec
cmp
sub
cltd
add
pop
cwtl
cli
push
int3
shll
cs
cmp
mov
lock
gs
add
ljmp
push
pop
data16
fwait
aas
sbb
cmp
or
xchg
outsb
mov
cmp
sub
cmp
jae
push
jbe
inc
and
rcrl
and
es
xorl
add
add
mov
dec
sub
lahf
mov
popa
rcrb
sub
pop
mov
add
add
in
dec
jae
std
xor
je
loope
xchg
cmc
or
outsb
js
je
hlt
ss
pushf
and
shrl
stos
adc
sbb
adcb
and
js
adc
pop
out
pop
mov
popf
sub
sbbb
adcb
adc
xchg
xchg
arpl
mov
imul
xchg
lock
pop
call
sub
inc
dec
xor
stos
xchg
push
adc
out
dec
or
and
ss
push
je
mov
jecxz
stos
xor
push
mov
gs
dec
dec
je
add
mov
ss
inc
and
sbb
cmp
xor
xor
mov
push
add
pop
cmp
in
or
stos
adc
sarb
movsb
push
cmp
sub
fistl
jae
push
nop
jns
fimull
sbb
rcll
in
sub
ret
imul
add
and
sub
sbb
sbb
cmpsl
outsb
out
dec
jno
aaa
pop
mov
mov
mov
and
fiadds
daa
loop
sar
add
mov
sub
addl
and
xchg
xchg
mov
lea
mov
lea
nop
sbb
jge
cwtl
aam
pop
adc
fmull
mov
jmp
lock
jl
xchg
sub
ret
iret
mov
mov
mov
adc
lret
js
mov
imul
push
jns
inc
outsl
push
mov
mov
add
and
lea
movsl
je
rclb
jmp
sbb
adc
add
mov
fsubl
fists
pop
mov
pop
mov
dec
rcll
jl
rcrl
cmp
jmp
arpl
in
cmp
cmpsb
pusha
in
aaa
add
outsl
push
or
push
imul
call
mov
pusha
sub
mov
jmp
and
ret
sub
add
pop
lret
mov
sbb
sbb
add
mov
lret
inc
leave
fidivl
push
push
ds
mov
adc
add
jmp
ljmp
pop
xchg
mov
adc
push
or
jbe
mov
enter
and
xlat
movups
push
fmul
or
sub
mov
mov
push
push
rol
dec
xchg
test
cmpsl
or
jo
nop
fistpl
call
arpl
or
loop
das
inc
clc
pop
cmp
mov
jne
test
xrelease
sub
lea
or
add
and
inc
add
test
jo
xchg
lea
mov
inc
lea
test
or
movq
ja
and
add
add
dec
push
jae
cmp
popa
push
cmp
mov
push
sarb
arpl
mov
lahf
mov
jg
mov
jo
hlt
jne
adc
arpl
or
popl
out
scas
add
out
jns
cli
cmp
jbe
pop
dec
jmp
add
je
repnz
adc
jg
insl
xchg
aam
mov
or
adc
rorb
add
insb
movsb
or
mov
add
fistpll
insl
jb
or
xchg
lea
fucom
pop
xchg
sbb
cli
dec
cmp
sbb
roll
push
hlt
lock
lods
aad
or
hlt
jg
add
push
or
jb
lock
fsub
xor
push
lret
repz
add
inc
fiadds
jp
sub
test
in
iret
out
pushl
dec
cmp
mov
push
add
inc
jecxz
or
mov
gs
das
out
in
jbe
mov
faddp
xchg
inc
xor
sbb
pop
adc
stos
cmp
push
inc
js
rcrb
sbbl
dec
test
loopne
dec
in
add
faddl
cs
cld
fimuls
inc
out
mov
adc
pop
pop
inc
sbb
fcomps
or
in
dec
inc
or
push
sub
in
std
xor
testl
jbe
movl
inc
iret
fwait
inc
sub
mov
add
jbe
lea
mov
ja
pop
in
jp
int3
ret
cmpl
loop
mov
ja
dec
cmp
fdivrs
xchg
mov
or
add
test
sub
rcrb
aaa
adc
sub
fldl
incl
movl
or
xor
mov
add
dec
sub
push
pop
jnp
add
test
xchg
insl
or
or
add
pusha
std
scas
daa
pusha
sarb
mov
mov
jno
mov
sti
out
adc
or
lahf
mov
mov
pop
jnp
or
enter
pusha
sub
jp
and
enter
mov
sarb
dec
or
mov
push
cmp
push
cmp
xchg
sub
fisttps
jbe
pop
hlt
and
sub
pop
xchg
xchg
jbe
inc
push
jo
sbb
or
adc
cmpsb
dec
outsl
push
jle
jmp
mov
std
lea
adc
adc
lcall
pop
popa
stos
push
mov
cmp
jmp
nop
cltd
or
es
or
pop
daa
fwait
push
sbb
movsb
pop
ret
dec
loopne
push
xchg
test
add
xchg
popa
or
imul
icebp
sbb
mov
or
mov
es
xor
mov
add
mov
pushf
jne
or
jae
xchg
imul
gs
jo
xchg
pop
pusha
push
jo
fbstp
insb
fstps
fincstp
xor
mov
or
or
enter
mov
adc
sbb
fldl
sbb
mov
cltd
xchg
cld
filds
fmuls
adc
inc
fsubs
lret
repnz
cli
pop
hlt
pusha
shl
jns
scas
fldcw
lds
fsubl
lahf
mov
fsubs
clc
lock
lock
jnp
xor
cld
jge
mov
and
mov
pop
ficomps
adc
xor
call
push
mov
jns
repnz
loopne
in
adc
enter
adc
rclb
mov
pop
jns
add
enter
int3
flds
pop
dec
dec
and
sbb
or
enter
sub
cmpsl
aam
push
es
push
in
call
out
in
cld
sbb
inc
fwait
inc
enter
or
fstps
pop
sub
inc
xchg
addr16
bound
adc
call
enter
andb
and
outsl
mov
in
js
inc
pop
mov
push
sar
jns
rcrl
add
pop
iret
jnp
mov
inc
or
sbb
shlb
fisubrs
xchg
repz
or
mov
arpl
and
adc
xor
xchg
or
sub
xlat
les
and
nop
test
gs
pop
repnz
or
inc
insb
lds
aaa
cmp
cmp
add
iret
adc
mov
lds
dec
inc
inc
add
js
ljmp
ljmp
aas
pop
sub
aam
mov
jne
daa
rolb
aad
mov
fdivrs
mov
je
dec
push
add
out
mov
in
jp
or
mov
dec
mov
xor
push
dec
mov
dec
push
dec
pusha
inc
jo
ret
add
xor
stos
mov
fisttps
scas
or
data16
mov
loopne
jle
dec
dec
rorb
nop
lods
out
dec
lock
stos
sbb
xchg
add
pop
and
dec
lcall
xchg
clc
dec
lahf
add
aas
shl
mov
sbb
push
xor
pop
out
or
sti
sbb
xchg
jecxz
mov
into
xor
adc
and
loopne
jns
cltd
aaa
sti
and
mov
and
lret
sbb
xor
mov
loopne
jge
sub
dec
ja
or
mov
sub
mov
mov
pop
arpl
sti
shl
sub
or
adc
adcl
or
sub
aam
xchg
xor
mov
inc
into
add
xor
or
js
adc
inc
loopne
push
sbb
sub
fisttps
push
sub
and
jne
andl
mov
push
add
or
ret
ret
decl
cmpl
adc
push
std
push
les
sbb
rolb
pop
ficoms
add
ds
in
or
xchg
lret
mov
pmaxsw
adc
sbb
je
mov
add
pop
dec
test
or
add
add
andb
and
lret
xchg
adc
pop
incb
xchg
mov
sbb
fdivrs
inc
mov
rorb
push
and
add
add
jne
adc
and
jae
sub
jecxz
sbb
sub
pop
in
push
mov
enter
bound
push
push
outsb
sub
pop
add
ret
sbb
das
or
sub
xchg
mov
ljmp
pop
pushl
jb
in
loopne
jae
aad
inc
inc
inc
in
fsubrl
fcoml
int
lcall
xor
sub
rclb
pusha
and
andb
adc
push
pop
shlb
push
fisttpl
aaa
cmp
push
scas
arpl
or
mov
in
icebp
shl
sar
fcmovnu
loope
or
push
lea
add
neg
lea
shl
hlt
dec
jp
negl
testl
jecxz
shrl
dec
adc
fwait
push
jo
xchg
test
enter
hlt
push
mov
mov
in
adc
add
cmp
out
hlt
xor
or
lds
pop
sbb
mov
mov
cmp
inc
call
dec
push
cmp
hlt
neg
and
imul
push
in
int
adcb
addl
ret
or
ja
cld
add
or
sti
jmp
mov
push
sub
xor
dec
popa
clc
add
add
daa
push
aas
nop
sub
ret
add
in
cmp
shrb
ds
fcoml
push
push
fadds
aad
enter
fnstenv
sbb
mov
xor
loop
xchg
testl
push
add
cld
stos
and
lret
add
sahf
xchg
lret
lret
lret
mov
sti
neg
sub
loopne
pushf
inc
out
and
icebp
and
mov
or
add
pop
imul
and
daa
push
pop
fxch
lret
imul
pop
lret
push
sti
faddl
pop
add
shrl
sbb
pop
sbb
lret
test
loopne
pop
lods
sbb
add
leave
aad
dec
cmp
dec
add
insl
insl
movsb
pop
adc
ljmp
cwtl
test
push
sbb
mov
faddl
das
inc
xchg
lods
popa
adc
jp
push
cli
push
sbb
dec
xor
add
add
repz
sub
and
push
cltd
movsl
push
sbb
jne
sub
pop
pop
push
shl
rcrl
pusha
sub
inc
sbb
lahf
cmpsl
pop
popf
cmpsl
sahf
imul
lock
push
and
mov
ja
sub
pop
pusha
and
adc
sub
and
add
or
xor
add
aam
pushf
adc
sbb
push
sub
dec
roll
out
scas
clc
pop
or
sub
clc
inc
test
in
xchg
leave
dec
shll
adc
andb
adc
loopne
pop
repz
add
sbb
imul
loopne
jo
sarb
or
sbb
loopne
add
iret
xchg
xor
sub
or
add
cli
aaa
add
bound
push
and
cmp
mov
push
mov
nop
cmpl
pop
loope
rorb
cmpsl
jae
movsl
adc
or
push
rolb
ficomps
test
les
int
push
rclb
in
sbb
pop
movb
push
or
inc
adc
dec
push
add
mov
inc
sub
xchg
sub
pop
mov
sbb
push
add
in
sbb
repnz
test
addb
cld
data16
sarl
mov
sbb
lods
mov
sbb
cmpsb
lock
jle
call
and
or
sub
ds
push
outsl
or
stos
outsl
dec
sgdtl
fdivr
mov
shl
inc
jns
and
fisttpl
add
pop
xchg
das
pusha
out
aam
xor
dec
inc
add
lock
nop
inc
and
inc
push
push
sbb
cmovb
fdivrs
insb
xchg
mov
push
adc
pop
ficoms
pop
and
adc
dec
add
mov
test
fisubrs
movsb
jbe
or
sbb
push
jg
and
cmp
je
or
push
arpl
addl
adc
inc
or
xchg
bound
pop
adc
or
aad
jge
popf
mov
mov
imul
add
cmpsl
insb
pusha
test
jne
ja
stos
and
in
jno
getsec
mov
mov
adc
gs
aam
mov
rorb
pop
and
sbb
mov
add
jg
jp
cmpsl
cmp
mov
jmp
push
jb
lds
test
fnstsw
das
aam
xchg
push
jno
jle
dec
add
iret
inc
pop
jl
popa
test
pop
add
dec
inc
shlb
mov
mov
stos
pop
out
or
push
decl
inc
and
and
sti
or
mov
push
or
adc
jge
in
push
jmp
pop
xchg
xchg
sbb
sub
adc
movhps
dec
jo
shlb
out
leave
add
xchg
dec
negl
and
adc
andb
dec
inc
and
cmp
xchg
inc
bnd
push
sbb
jecxz
and
pop
cmp
adc
sahf
ret
sbb
dec
rcr
add
xchg
fwait
out
mov
mov
lcall
and
add
jbe
xchg
nop
mov
sbb
mov
pop
imul
adcl
cmp
push
add
mov
adc
adc
lahf
inc
ja
push
adc
in
cmpsb
ljmp
push
cmpsl
xor
xor
dec
pop
adc
clc
popa
es
sti
es
add
subl
leave
cmp
cmp
cltd
add
lret
inc
mov
aam
push
fimull
pop
sbb
lds
test
inc
xor
inc
mov
mov
add
dec
scas
loopne
add
jle
bound
icebp
out
or
cmp
cmpsb
cmpsb
clc
and
and
cltd
bound
cmp
sbb
sbb
adc
adc
cwtl
loopne
xchg
sbb
sbb
push
fs
mov
and
and
push
cmp
and
mov
push
adc
ss
and
pop
mov
or
in
inc
loopne
shll
cwtl
and
jge
jno
loopne
mov
adc
adc
jae
scas
sub
gs
lret
jmp
in
sbb
clc
add
add
loop
pop
xor
add
add
cltd
iret
push
push
dec
sbb
inc
mov
and
int3
shrl
ret
add
push
loopne
ret
out
xor
jae
std
sub
push
xor
popl
arpl
test
fcmovnbe
testl
inc
fwait
jecxz
xor
dec
jae
es
inc
xlat
adc
int3
pop
or
dec
pop
jb
call
mov
fbld
pop
push
imul
add
add
push
icebp
xchg
addr16
push
cmp
inc
fidivrs
xor
lahf
add
enter
mov
xlat
jns
sti
jmp
dec
pop
push
pop
cmp
popf
and
jo
in
mov
test
cmp
or
mov
cwtl
andb
pop
dec
dec
or
nop
inc
and
push
notb
leave
inc
and
fadds
sub
inc
adc
mov
les
pop
mov
lcall
insl
aad
inc
or
mov
sub
movzwl
pop
or
adc
sub
or
push
or
adc
xor
or
sbb
cli
sbb
std
into
push
push
or
inc
mov
add
inc
cmp
and
pop
xor
push
adc
cmp
lcall
iret
insl
imul
adc
fs
mov
imul
push
adc
add
mov
and
arpl
rolb
add
inc
and
mov
mov
rcll
mov
xlat
adc
push
imul
jge
add
push
or
adcb
test
inc
adc
dec
daa
dec
les
mov
inc
adc
aaa
cmp
scas
in
faddl
add
stc
fists
cli
push
push
mov
dec
pop
mov
jbe
sub
or
data16
and
in
mov
push
std
das
or
loope
enter
sub
mov
sarl
mov
out
movsl
add
mov
mov
add
xchg
jecxz
mov
out
into
in
mov
repnz
and
jno
insl
enter
fwait
pop
dec
je
std
or
inc
or
aas
dec
and
or
or
or
ljmp
je
ss
dec
cmp
movsl
popa
cmp
loop
mov
stos
add
pop
into
push
mov
add
jecxz
adc
push
movups
and
add
aad
xlat
dec
enter
xor
test
outsb
cmp
mov
fdivl
enter
sbb
and
sbb
mov
test
add
mov
pop
mov
outsl
mov
bound
add
jne
pop
inc
add
int
push
add
and
xor
and
or
or
mov
mov
jb
mov
cld
clc
hlt
rolb
or
fs
ljmp
add
adc
push
bound
dec
shl
loopne
data16
outsl
pop
sub
and
push
pop
mov
cmp
mov
push
mov
test
mov
jl
or
add
inc
push
loop
rolb
pop
rorl
mov
pop
jae
pop
push
jge
lods
adc
bound
inc
mov
jb
sub
sahf
pop
rcrb
shll
push
ljmp
inc
movsb
repz
std
or
mov
ss
jmp
cmc
orb
adc
das
cmp
jne
or
sub
ljmp
mov
or
movsl
or
fisubs
inc
pop
in
cmp
dec
sbbl
adc
clc
pop
jmp
jo
xor
aam
fs
in
inc
test
out
cmp
xchg
das
mov
fisttpl
add
dec
jbe
adc
lcall
test
adc
cmpb
mov
sbbl
add
test
popf
push
insb
cmp
aam
pusha
or
rcll
pusha
dec
aaa
test
mull
loop
test
lods
inc
shlb
sub
pop
insb
and
xchg
pop
nop
mov
aas
nop
hlt
shlb
sbb
cmc
adc
xor
mov
in
jmp
arpl
clc
adc
fwait
mov
adc
out
pop
fistpl
sub
jo
push
inc
mov
scas
sbb
jne
jae
or
and
dec
inc
fwait
mov
ja
adc
mov
add
cmp
arpl
jmp
mov
or
adc
clc
or
das
js
pop
push
hlt
cwtl
pop
or
pop
push
and
jmp
and
mov
cs
sub
adc
inc
les
popf
pop
aam
fiadds
add
add
xorb
dec
sbb
dec
push
notb
adc
lret
das
push
jg
push
add
test
sub
call
xchg
frstor
jae
cs
pop
in
dec
inc
push
adc
sbb
and
in
nop
pusha
andb
test
mov
mov
mov
inc
jo
adc
lods
cmp
xor
add
in
jne
loope
movzbl
inc
dec
cmp
xlat
push
incl
or
imul
sbb
enter
add
push
sub
aaa
cmp
nop
and
hlt
push
lods
pop
ret
add
mov
mov
ja
sub
js
pop
dec
xor
inc
fldenv
sub
push
push
lods
add
jmp
loope
popa
xchg
add
movsb
add
xor
fwait
shll
add
subb
xor
and
and
sub
inc
ret
push
fadd
nop
hlt
xor
out
unpckhps
loopne,pt
repz
popf
xchg
dec
cli
int
jge
pextrw
test
pop
lret
inc
ret
je
xor
add
inc
scas
and
dec
inc
jecxz
lock
xor
in
inc
jne
ljmp
in
xor
das
push
cmp
inc
add
stc
inc
mov
std
test
add
pop
sub
inc
jns
xor
xchg
test
pop
inc
sahf
xchg
or
fisubl
dec
push
pop
jecxz
mov
adcb
cmp
ret
and
adc
in
test
add
sub
lahf
jnp
enter
push
cs
rcll
lds
insb
subb
adc
in
sub
cmp
add
jno
cmp
shlb
lret
mov
lgdtl
les
inc
imul
inc
nop
out
repnz
sahf
adc
pushf
xor
xchg
xor
cmpsb
dec
xchg
mov
mov
out
dec
popa
aas
and
and
sbb
lret
scas
sbb
mov
xlat
jo
inc
jne
sub
and
jne
xchg
inc
xlat
adc
jg
pmulhw
cwtl
xorb
dec
in
lods
inc
js
mov
mov
bound
andb
dec
daa
aas
subl
in
insl
arpl
adc
subl
and
loop
roll
inc
adc
jne
add
mov
loopne
leave
cld
xchg
jns
add
hlt
adc
incb
repz
faddl
sbb
xlat
imul
dec
jle
ret
xor
xchg
mov
adc
mov
xor
add
pop
pop
cs
jne
sub
cltd
fld
inc
jg
std
movsb
loopne
sbb
mov
push
pop
dec
je
add
sub
arpl
add
or
mov
adc
push
dec
cltd
nop
aaa
shlb
mov
push
nop
mov
jb
sarb
andb
mov
adc
rclb
push
movsl
movl
xor
inc
and
add
push
adc
cld
cld
or
dec
dec
cltd
pusha
jmp
add
inc
jbe
out
inc
ficoms
jl
dec
and
dec
pop
or
sbb
sub
dec
cwtl
pop
mov
out
add
jmp
into
inc
sbb
fldcw
out
jecxz
push
or
push
jae
mov
mov
or
and
pop
je
les
mov
mov
add
jl
stc
mov
mov
mov
bound
jo
mov
nop
fimuls
mov
mov
lods
aad
adcb
pop
xor
sbb
stc
fmull
inc
push
lods
lea
xchg
movsl
and
clc
and
adc
lahf
add
cld
xchg
outsb
ss
adc
icebp
add
pop
xchg
or
pop
add
push
outsb
push
push
pop
dec
js
movsl
mov
jecxz
loop
sub
inc
loope
insb
fnstsw
mov
test
pop
mov
xor
insl
or
mov
icebp
xchg
stos
imul
push
push
dec
pop
xorb
and
test
jl
pop
sbb
mov
push
cmp
adc
mov
or
cmp
mov
fmuls
xchg
jle
imul
dec
daa
jnp
dec
addr16
cmp
cltd
dec
adc
pop
fs
adc
adc
xorb
or
iret
pop
sbb
fisubrs
jbe
test
mov
or
adc
cmp
pop
xor
lock
adc
add
pop
pop
add
sbb
push
dec
popa
sbb
outsb
or
add
inc
or
or
pop
adc
adc
loope
sbb
ret
jmp
add
xchg
cmp
in
pop
jo
lea
jae
add
push
cmpsl
outsl
dec
sbb
pop
imull
add
mov
xor
or
cmp
lods
pop
or
or
mov
jns
add
push
clc
push
jo
lock
dec
mov
movl
lock
ja
lock
ud1
dec
and
push
xor
push
xchg
jl
and
add
cmc
mov
fisubs
fs
mov
std
or
leave
mov
adc
scas
ret
fmull
ret
push
out
adc
pusha
mov
imul
push
xor
adc
popa
adc
add
inc
iret
inc
sub
jno
repz
adc
dec
jb
dec
or
sti
lods
mov
dec
adc
test
dec
mov
push
or
testl
pop
es
fs
xchg
out
xor
jle
inc
nop
add
adc
js
mov
jno
mov
dec
add
out
or
data16
cmovnp
pop
js
mov
test
test
leave
mov
mov
adc
repz
jnp
aas
push
add
ds
mov
xor
add
iret
addr16
icebp
xor
rcrl
add
sbb
mov
pop
pop
dec
or
sahf
cs
test
pop
pop
pop
popa
outsb
shll
dec
pop
arpl
dec
and
mov
add
outsl
js
aaa
mov
jmp
or
and
sub
mov
int3
mull
pop
testb
data16
mov
enter
loopne
sbb
add
xor
inc
pop
sti
imul
sub
pop
inc
cmp
pop
ja
scas
in
push
daa
dec
or
adc
adc
fdivrs
es
add
inc
lods
ret
loopne
adc
or
and
or
mov
popf
add
pusha
and
sahf
and
push
mov
dec
or
das
inc
sbb
and
and
sbb
dec
add
xchg
loopne
std
dec
mov
dec
dec
movsb
pop
dec
push
mov
popa
inc
nop
jno
and
xor
sbb
cld
add
sub
or
movsb
pop
test
mov
dec
adc
jg
jmp
lea
ja
sub
or
push
iret
mov
inc
mov
inc
filds
test
lea
inc
or
push
lret
add
test
loope
xchg
cmp
or
and
lcall
add
add
test
in
sarl
addr16
popf
push
add
inc
insb
jge
js
xchg
adc
inc
jg
and
jbe
mov
mov
sub
orb
push
insl
rolb
push
addr16
in
mov
dec
xorl
pusha
arpl
test
inc
pushf
add
push
cmpl
cmp
xor
add
incl
es
add
inc
cmp
adc
sbb
add
inc
jge
jge
add
or
and
inc
push
inc
jle
add
xchg
sbb
mov
or
adc
jge
or
pop
arpl
push
add
pop
ror
scas
mov
daa
xor
int3
jp
lahf
mov
or
cmp
inc
mov
adc
or
mov
add
movsb
pushf
daa
add
lret
xor
repz
and
add
cwtl
cltd
or
dec
pop
dec
popl
add
rorl
pop
and
xor
and
sub
mov
sub
sub
push
push
mov
push
fimull
xchg
or
sbb
pop
push
mov
inc
inc
sub
mov
movsb
cwtl
sbb
xchg
and
xchg
mov
push
jae
jge
inc
sbb
and
ljmp
bound
leave
and
fsubl
sbb
cmpl
aaa
push
or
sub
ds
add
testl
dec
dec
add
bound
mov
pop
mov
roll
es
inc
mov
pop
shl
cltd
in
and
add
inc
arpl
leave
xchg
pop
rcll
dec
je
bound
rcl
addl
push
xchg
pop
or
test
sbb
push
or
xor
xchg
mov
aam
lret
push
mov
mov
jmp
mov
cmc
sbb
xor
in
sbb
fidivs
das
add
loop
jne
cmp
and
icebp
adc
jns
addr16
cwtl
es
dec
in
pop
and
jmp
out
adc
pushf
inc
xchg
loope
in
jecxz
scas
daa
mov
sbb
cmp
jb
cmc
push
adc
and
sub
or
sub
sub
jne
fists
mov
pop
or
sbb
inc
inc
fnstsw
fstpt
dec
sub
add
inc
fdivrl
xlat
inc
addl
in
pop
inc
mov
add
sbbl
cwtl
fildll
mov
pusha
lds
dec
dec
mov
pusha
je
adc
xor
xchg
pop
xorb
out
push
jle
lret
fldenv
or
call
popf
and
and
popf
jge
or
adc
sbb
or
add
enter
rolb
bound
mov
sub
aas
movsl
add
add
push
adc
mov
pop
out
dec
xor
fsubrs
lret
pop
mov
sub
sar
ret
dec
scas
inc
or
xchg
push
or
xchg
mov
imul
lock
or
cmp
cmpl
add
inc
xor
inc
fisubrs
lods
pop
sbb
mov
add
or
addl
movsl
movsl
and
cwtl
jns
adc
mov
popa
xor
mov
push
add
add
push
pop
ljmp
sbb
sbb
or
movl
pop
mov
cmp
andl
cltd
loop
adc
sub
xchg
xor
setne
mov
mov
mov
ljmp
ficoms
andb
jle
popa
dec
or
xor
lret
rclb
outsb
mov
adc
xor
adc
pop
dec
or
jmp
rclb
sbb
jnp
and
xor
push
xchg
les
adc
pop
fistps
in
cltd
les
aas
xor
daa
mov
pushl
and
outsl
xor
fsubs
in
push
and
and
push
iret
jae
push
push
pop
push
or
and
pop
adc
adcb
or
jl
ja
inc
fs
sbb
shl
mov
lods
sbb
push
lret
and
in
arpl
clc
jecxz
mov
aaa
inc
push
mov
push
sbb
adc
andb
test
es
cmp
aam
bound
shlb
mov
mov
or
sbb
add
test
fsubrl
out
loopne,pn
sahf
and
pop
lock
in
mov
add
fimull
nop
sbbl
aam
sbb
mov
mov
out
insb
inc
push
fs
inc
fs
or
bound
mov
adc
or
ss
pop
and
shll
pop
stos
cmp
loopne
or
lea
shll
dec
xchg
mov
ret
iret
pop
and
pop
xchg
sbb
pop
sub
int3
mov
ja
js
fcomps
ja
dec
xor
lds
inc
pop
xlat
adc
sbb
stos
ljmp
loopne
xchg
scas
int
xchg
in
jmp
mov
pop
sbb
sbb
jle
jge
ffreep
dec
popa
adc
adc
vmovlps
xchg
mov
jns
sar
sub
imul
mov
mov
rorb
sbb
adc
inc
cmovne
shll
ret
scas
and
hlt
sub
out
je
ret
pop
jnp
lock
mov
imul
and
pusha
or
sbb
imul
sbb
xchg
outsb
sbb
pop
adc
mov
imul
mov
mov
fsts
bswap
push
and
cmpl
and
and
out
shll
add
mov
inc
pusha
jo
or
es
fcomp
orb
daa
jne
out
adc
and
sbb
inc
pop
or
aas
jl
hlt
adc
jo
fsubrl
sbb
add
popa
insl
in
enter
add
and
adc
cmpsl
out
add
inc
dec
cmove
adc
xchg
mov
in
xchg
mov
and
cmp
or
add
add
add
mov
cwtl
sbb
or
cmp
movb
push
bound
or
mov
test
mov
adc
mov
test
pop
cmc
pop
inc
pusha
xor
xchg
adc
mov
add
xor
iret
nop
pop
scas
lods
or
std
pop
int3
sbb
je
movl
dec
xor
sub
add
add
cmp
jp
pop
mov
jmp
pop
dec
popf
mov
daa
mov
adc
mov
adc
in
out
pop
les
popa
cmp
inc
add
and
cwtl
jne
sbb
or
sbb
pop
popa
xor
cmpsl
test
mov
jne
add
inc
popa
xchg
fistpll
add
dec
add
cmp
loopne
sub
insl
ret
in
xchg
or
cmp
jg
push
scas
outsb
or
add
bound
dec
or
ror
es
inc
int
ret
mov
aam
das
or
jge
popa
imul
call
cmp
jg
xchg
or
sbb
sbb
pop
adc
jne
gs
add
add
rcrb
adc
cltd
lods
mov
lea
sbb
pop
insl
sbb
cli
dec
add
fbld
les
jge
lock
inc
imul
push
sbb
xchg
jecxz,pn
aaa
and
sub
lea
loop
je
ss
push
jl
rcl
mov
lods
add
cs
mov
jle
sub
jge
adc
jne
mov
stos
pusha
xchg
repz
adc
sub
cmp
and
call
pushf
and
xor
andl
movsl
add
lods
mov
lds
idivl
iret
push
and
mov
xchg
lds
arpl
add
fistpl
and
les
ret
xor
add
aam
iret
or
arpl
insl
lods
lea
jl
dec
and
movsb
mov
jecxz
xor
adc
out
clc
mov
jl
add
shl
add
mov
ret
ret
enter
jl
dec
cmp
push
mov
or
sbb
sbb
xorb
or
jmp
cmp
and
and
push
js
xchg
xchg
adc
push
insl
pop
inc
jns
inc
dec
sub
ret
cmp
addr16
or
inc
and
mov
test
fcomip
int
sbb
add
mov
add
test
add
or
pushf
or
loope
test
jae
jmp
outsb
pop
lock
add
add
add
leave
leave
test
or
add
push
add
inc
pop
and
inc
jb
or
adc
jns
lock
lahf
sbb
stos
mov
bound
add
adc
cmp
stos
gs
movb
rcrb
repnz
cmc
adc
data16
movsb
or
and
test
imul
cmp
push
adc
mov
mov
repnz
pop
into
push
pushf
push
or
adc
test
sub
pop
popl
bound
insb
jmp
fldl
jle
popa
sbb
sbb
jbe
or
cmpsl
push
add
fwait
mov
cmp
scas
sbb
mov
and
stc
dec
sbb
dec
sbb
sbb
xchg
lahf
arpl
or
xlat
dec
mov
das
push
push
insb
or
rcrl
sahf
xchg
xor
lods
clc
or
mov
dec
and
movl
cmpl
sbb
adc
adc
mov
ret
sbb
or
das
mov
lea
inc
jae
adc
repnz
and
ja
mov
or
fcoms
aaa
pop
mov
enter
push
bound
int3
add
out
xor
outsl
sub
xor
and
mov
mov
and
push
pop
add
sbb
es
arpl
mov
adc
iret
and
mov
xor
stos
out
mov
or
or
arpl
adc
filds
jae
inc
add
jl
jl
rolb
nop
jmp
dec
or
loopne
pusha
rcrb
lea
addr16
or
push
add
push
rolb
add
sti
pop
repz
jne
inc
inc
add
test
xor
add
sbb
or
sbb
cmp
jmp
es
cmp
adc
inc
pop
jo
ljmp
push
mov
test
dec
loop
push
dec
sub
push
stc
cmp
cld
jnp
dec
push
sbb
adc
pop
xor
xchg
adcl
pusha
adc
push
pop
into
and
inc
inc
add
loope
test
and
pop
push
adc
push
xor
or
mov
inc
call
rol
fists
add
add
sbb
in
or
lea
push
xchg
fadds
jl
les
stos
and
fisttps
mov
adc
add
jb
add
sub
mov
daa
dec
add
jmp
dec
out
push
ret
mov
push
lea
adc
mov
bound
loope
adc
add
dec
add
lret
aas
outsb
cmp
xor
add
gs
pusha
lods
sbb
fstl
mov
rolb
sbb
jge
adc
and
out
es
jns
or
push
or
pusha
lret
lret
fdivl
ret
or
sahf
rcll
xor
inc
jecxz
jmp
int3
mov
push
xchg
or
add
or
push
pushf
mov
sub
jno
inc
mov
nop
mov
shll
or
sbb
jae
es
sbb
or
enter
cmp
in
pusha
push
mov
xor
dec
in
loope
shll
hlt
adc
subl
xchg
dec
lock
adc
lock
push
cmp
repnz
mov
icebp
or
pcmpeqw
bound
push
ds
aam
jmp
xchg
js
jmp
push
outsb
out
fiadds
into
or
out
es
enter
cmp
jle
inc
in
mov
jno
mov
add
outsl
push
or
sbb
xor
xor
inc
xchg
js
adc
ja
xor
or
or
clts
cmp
test
cmpsl
fcmovnu
mov
loop
jl
mov
add
mov
cmp
and
lahf
je
mov
mov
cmp
pop
or
cld
dec
sbb
xor
add
test
push
fistl
popa
pop
add
lret
test
jo
dec
jecxz
and
or
mov
mov
insb
and
dec
push
iret
mov
icebp
test
mov
adc
adc
imull
or
fstenv
sub
addr16
lds
rcll
lcall
sarb
cmp
cwtl
je
and
cmp
mov
js
xchg
hlt
sets
inc
mov
adc
lds
mov
add
inc
insl
or
add
dec
vmwrite
or
lahf
adc
and
xchg
cmp
add
dec
bound
fildll
jne
test
clc
mov
jmp
mov
cs
mov
jg
sbb
push
int3
inc
xchg
push
popf
xor
or
mov
leave
adcl
stos
addb
adc
jae
mov
fs
push
add
cmp
mov
sub
mov
or
inc
dec
ss
add
adc
aaa
and
push
lcall
and
je
dec
sbb
loop
pop
lods
push
shrl
xchg
pop
dec
add
seto
inc
push
imul
jo
lret
push
cld
xorb
or
in
add
addl
xchg
nop
xor
movsl
xchg
mov
scas
xorb
xor
mov
ss
adc
arpl
push
push
inc
add
and
inc
inc
imull
pushw
pop
adc
add
in
mov
imull
jb
cmp
or
sbb
dec
dec
jge
arpl
lahf
and
sbb
shrl
add
pushw
or
movsl
adc
sub
mov
gs
and
adc
lock
xchg
sbb
test
push
shrb
adc
jne
addr16
jmp
rolb
les
mov
mov
cmp
jl
jmp
out
inc
test
xor
push
adc
stc
mov
inc
imul
cmp
cli
add
jo
shlb
or
dec
lock
mov
enter
sbb
sbb
lods
daa
sti
idivb
and
inc
push
cmp
bound
lret
inc
adc
mov
sbb
jo
add
and
mov
sbb
xchg
movsl
sbb
enter
and
incl
std
sub
and
mov
push
mov
jbe
pop
je
adc
push
inc
push
lea
cmp
add
dec
lods
data16
push
inc
or
xchg
push
cs
hlt
popa
gs
xor
dec
cmp
lret
pop
rol
add
repnz
aas
and
and
sub
xchg
fxch
popa
mov
sbb
ss
div
dec
jle
outsb
or
mov
pop
and
inc
rcrl
dec
adc
lret
cmp
and
xchg
inc
fistl
mov
cmp
or
mov
jnp
inc
or
mov
imul
xchg
sbb
sti
icebp
add
lock
push
jle
loope
add
sub
nop
xorb
and
and
adc
or
mov
outsb
add
xor
repz
mov
push
adc
inc
jmp
xor
jae
cld
cld
adc
adc
adc
scas
or
pop
push
cmp
xorb
inc
cmp
popaw
push
inc
fadds
loopne
xchg
and
aam
lds
pop
sub
inc
add
sub
add
gs
rcrb
pop
lcall
sub
xchg
outsl
sbb
jecxz
insb
or
adc
inc
jb
add
loope
xchg
add
add
or
inc
xor
leave
in
adc
mov
xor
adc
or
jle
add
sbb
inc
push
nop
lock
mov
and
or
xchg
sbb
xchg
adc
mov
inc
xchg
cmp
inc
ret
mov
push
inc
call
push
loopne
inc
jl
sbb
inc
faddl
push
add
lret
rcr
push
add
dec
iret
addr16
xchg
sub
pop
dec
mov
add
mov
push
pop
or
sbb
push
add
mov
jae
aas
push
mov
jle
add
incl
mov
shrl
int3
inc
repz
or
inc
xchg
mov
sbb
pop
das
sbb
ds
gs
sti
push
or
stos
xor
sbb
sahf
fisttps
push
jg
adc
rcll
ss
sbb
inc
cmp
push
lea
mov
push
xchg
inc
pop
jb
rcll
subl
cmp
ds
jle
xchg
or
or
sar
mov
pop
sbb
jmp
sbb
sbb
sarl
loopne
xor
addr16
lock
test
adc
xor
loop
inc
hlt
xlat
outsb
adc
les
mov
or
xchg
pop
mov
cmp
xchg
xchg
sbb
xchg
mov
out
xor
stc
adc
sar
adc
loopne
in
adc
and
mov
push
pop
or
or
fcom
loopne
popf
and
inc
movsl
inc
mov
or
lmsw
sbb
dec
insl
inc
or
in
int
inc
and
jb
insb
popf
sbb
inc
cmpsb
dec
daa
fsubr
test
mov
stc
sbb
lock
xor
sub
fadd
push
scas
mov
rcll
in
enter
push
scas
mov
lock
push
cld
pop
sub
mov
sbb
lret
into
add
and
sub
xor
inc
and
and
loopne
fmuls
inc
in
fsubs
dec
mov
or
jmp
iret
xor
or
xor
mov
push
xchg
push
mov
inc
mov
xor
mov
or
push
dec
mov
fcoml
hlt
jmp
cld
out
adc
cld
mov
cld
cmp
jge
sbb
mov
or
test
inc
push
mov
hlt
jb
jmp
lret
adc
out
pop
cmp
pop
or
sub
rorb
es
or
sub
jl
pop
test
ja
push
nop
pop
push
in
push
and
jo
cmpsl
xor
xchg
les
inc
and
pop
or
jb
in
and
cwtl
mov
pusha
xchg
mov
dec
or
rolb
xor
rorl
cltd
insb
mov
pop
cmp
cltd
add
or
bswap
or
mov
and
push
xor
into
inc
and
push
pop
or
pcmpeqw
xor
hlt
lods
and
adc
jle
dec
std
cld
orl
and
test
mov
inc
adc
mov
xor
clc
inc
cmp
jl,pt
sbb
call
inc
dec
test
or
pusha
sub
add
mov
sbbl
pop
add
jae
or
mov
fcomps
enter
call
dec
pushf
lsl
jge
inc
xchg
jo
xor
enter
bound
int3
ror
mov
push
jb
inc
fistl
test
orl
jbe
cmp
cltd
call
insb
es
incb
adc
pop
leave
lret
push
in
mov
sub
in
push
adc
sbb
rorb
or
andl
pusha
mov
lock
jmp
xor
add
and
and
loop
fsubr
aam
push
loopne
or
repnz
jge
jo
fiaddl
adcb
lock
or
mov
add
inc
inc
push
jl
inc
js
adc
dec
jl
in
rcrl
sub
mov
aad
ss
mov
aam
scas
cmp
add
pusha
pop
mov
lcall
xor
outsb
fst
xlat
outsl
adc
xchg
ror
mov
inc
xor
xchg
jno
and
or
mov
addb
xor
leave
and
nop
out
or
mov
dec
lds
fwait
call
sbb
nop
outsl
cs
addr16
push
jmp
add
fnstcw
and
cmp
icebp
jo
adc
mov
sbb
mov
inc
mov
inc
cld
fwait
icebp
add
sti
pop
cmp
push
jo
xor
loop
ret
clc
orb
call
add
lock
in
xchg
inc
divb
pop
adc
sub
sbb
fs
loopne
add
cmc
jae
inc
jg
testl
add
add
fiadds
or
out
popa
jb
adc
jne
xchg
popf
sub
cmpsl
aam
inc
lahf
sbb
icebp
lea
push
lock
mov
add
push
adc
into
add
or
inc
stc
and
add
shl
dec
rolb
mov
cmpsl
inc
adc
aam
adc
mull
aas
std
aaa
xchg
jecxz
mov
das
pop
add
cmp
sbb
mov
mov
pop
fimuls
inc
pop
xor
sbb
ret
jnp
or
or
or
push
popf
jb,pn
adc
add
popa
in
add
sbb
cld
push
mov
movb
call
idivb
pop
loopne
and
push
lret
negb
daa
lods
jmp
xor
test
inc
jo
inc
push
or
loopne
call
lcall
mov
decl
xchg
dec
rorb
out
inc
add
pushf
sbb
loopne
fsubs
dec
inc
inc
xchg
divb
cs
decl
int
lock
add
push
inc
inc
cmp
push
xor
ret
cmp
dec
ret
mov
xlat
leave
aam
dec
clc
out
inc
loop
jns
sub
sbb
sbb
add
or
in
and
mov
fs
rorb
stos
das
xor
cld
cmp
dec
andb
into
outsb
pop
mov
add
sub
add
push
fwait
mov
xor
xor
repz
or
mov
adc
or
and
mov
stc
scas
rcll
lret
clc
add
push
ljmp
adc
int3
in
insb
insl
enter
mov
sbbb
stos
ja
cmpsl
sub
pop
fiadds
imull
mov
inc
loopne
int3
push
jns
jae
dec
and
add
stos
and
fldl
mov
add
out
cs
add
enter
xchg
mov
add
fwait
test
mov
cmp
leave
xor
jne
or
jnp
inc
gs
adc
loope
insl
sti
mov
xchg
inc
adc
jns
je
sbb
add
push
mov
jbe
xor
rcl
and
xchg
inc
adc
popa
add
iret
call
in
push
leave
sbb
call
imul
xor
pop
movl
xlat
sbb
adc
inc
adc
pop
xchg
inc
inc
lods
pop
inc
or
pop
jle
sbb
or
call
test
lahf
xchg
cmovb
sti
cmp
cwtl
inc
sub
lret
xchg
rorl
fs
pop
lret
lock
cltd
inc
push
rolb
jne
add
roll
or
pusha
cmc
rcrl
sti
ljmp
movsb
pop
mov
adc
inc
fistps
inc
add
add
dec
or
and
push
add
inc
jl
ret
cmp
and
pop
pop
adc
mov
sbb
insl
and
sub
out
xchg
daa
mov
sbb
imul
js
lea
cmp
and
pop
nopl
or
or
sbbl
inc
or
add
inc
or
inc
iret
lds
and
jl
sahf
xchg
jnp
or
mov
add
dec
cmp
cmc
inc
fsubs
out
cs
andb
pop
push
sbb
adc
push
nop
push
add
shr
add
leave
cmp
push
popa
cmp
adc
scas
dec
and
jl
enter
mov
push
add
inc
dec
push
rcrb
orb
sub
add
xchg
lea
xchg
xor
cltd
in
add
enter
and
shrb
out
ds
call
inc
popa
cld
dec
loop
sarl
sti
jg
xchg
fisubrs
sub
push
out
addl
lcall
xchg
and
add
ds
inc
es
xor
les
hlt
sbb
cmpsl
cltd
inc
es
sbb
inc
leave
adc
call
loopne
mov
fcmovnb
fstps
sub
sub
fsub
in
dec
fsub
dec
dec
mov
aam
inc
dec
mov
ror
int3
inc
es
push
dec
cs
dec
enter
push
addr16
shrb
popf
mov
pop
dec
or
lock
push
rol
jmp
add
jl
and
rcrb
es
inc
ret
enter
adc
sarb
jmp
or
and
pop
mov
pop
out
rcrb
lcall
add
add
in
dec
pop
push
push
popf
sbb
lods
test
es
push
xor
sbb
inc
mov
or
adc
and
and
mov
enter
nop
lret
sbb
das
ficomps
add
mov
movsb
xor
lcall
cwtl
cmpsb
arpl
pop
add
jg
add
mov
aam
popa
imul
xor
les
addb
add
lea
jecxz
loopne
stos
fwait
adc
sub
cmp
xor
adc
push
mov
xor
dec
jno
cmpsb
cmp
cmp
xor
push
add
jecxz
mov
adc
sub
mov
pop
push
mov
lock
xchg
pop
mov
or
cld
fadds
cltd
push
enter
fnstsw
mov
cmp
das
inc
mov
and
inc
and
aaa
pop
and
xchg
je
adc
and
mov
push
mov
rcr
subb
repnz
hlt
xorl
out
jmp
mov
int
out
jae
cmovp
jl
mov
out
ljmp
adc
orl
sub
adc
fisubl
and
inc
add
mov
addl
mov
insb
sbb
xlat
adc
sbb
ss
xchg
test
icebp
test
mov
ljmp
cmp
jmp
nop
stos
sbb
movsbl
mov
test
mov
jg
cs
inc
adc
dec
adc
xchg
mov
ja
xchg
test
clc
jne
testl
jle
test
or
and
sub
or
inc
or
movb
mov
mov
sub
xor
jb
inc
decl
mov
sub
ret
adc
push
and
lcall
lea
push
out
xchg
je
mov
lods
ret
in
lahf
shlb
mov
push
icebp
inc
xor
lea
inc
outsb
inc
lahf
int
inc
mov
inc
cmpb
les
cmp
mov
lea
adc
ror
mov
sbb
add
adc
cmpsb
xchg
repz
sarl
xor
sub
and
in
or
pop
ja
mov
push
pop
hlt
jo
pop
jmp
jle
cmp
jle
mov
xor
push
mov
adc
jae
push
fdivp
fcmovne
add
or
loopne
mov
inc
inc
out
push
add
mov
sbb
dec
or
mov
shrl
incl
dec
pop
decl
inc
or
inc
sub
push
push
test
into
enter
or
adc
cs
add
je
stos
inc
adc
mov
jbe
jnp
ret
test
mov
cmp
cmp
and
add
xor
loop
add
sbb
jo
mov
inc
jnp
inc
ds
adcb
adc
filds
loope
not
lods
in
fsts
icebp
cmpsb
adc
insl
jb
jecxz
push
movd
mov
adc
sub
cmpsb
dec
fdivr
je
std
add
inc
sar
std
or
aas
sbb
xor
ret
add
sbb
adc
mov
push
testb
add
sbb
mov
call
insl
fwait
mov
addl
add
sbb
dec
lret
xor
xor
jnp
inc
arpl
adc
sbb
mov
xchg
mov
jmp
cli
lahf
test
inc
mov
shlb
fdivr
fldl
nop
xor
and
pop
outsb
sar
addr16
cmp
cmp
ficompl
inc
sbb
stos
add
add
ficoms
nop
orb
dec
and
movsl
dec
add
test
arpl
sahf
push
mov
push
pop
out
sahf
bswap
test
xor
jae
mov
outsb
daa
jge
negl
add
into
rcrl
les
nop
loop
test
mov
mov
popf
jle
loop
inc
add
xor
cmp
movsl
sbb
mov
xchg
and
cwtl
pop
aam
sbb
jo
cli
and
cwtl
imul
sbb
adc
aad
sbb
mov
call
or
outsl
sbbl
inc
rolb
push
enter
fxch
jne
fwait
and
xchg
dec
fstpl
loope
jge
and
and
mov
popa
xor
fsts
cmp
fists
sub
ljmp
add
repnz
mov
cmp
add
rol
and
and
fwait
adc
jl
inc
cmp
mov
outsb
pop
mov
in
iret
mov
addl
inc
orb
aaa
int3
test
cmp
mov
xlat
add
dec
and
cmpb
pop
sbb
sbb
icebp
aaa
stc
push
lea
jmp
xchg
push
add
or
enter
std
xor
pop
outsb
lcall
cmp
jo
push
loope
mov
xchg
jb
shrb
or
enter
jp
pop
or
pusha
lahf
inc
dec
xor
fcmovnbe
adc
cmpsb
inc
cmpsl
mov
adc
clc
ret
out
arpl
lcall
test
cmp
dec
add
mov
adc
ljmp
clc
cs
push
cli
add
sub
icebp
je
push
sub
add
jns
mov
testl
add
push
or
sub
int
insb
movsb
dec
int3
jo
int3
test
xor
sub
add
jnp
mov
mov
mov
pushl
mov
add
jmp
add
lea
push
shl
push
sbb
fcmovnb
sti
daa
sti
mov
popa
neg
stc
lds
andb
dec
cmp
xor
mov
testl
cmp
idivb
movsb
jo
mov
inc
movsl
cwtl
xor
pusha
cmp
pop
adc
pop
and
lahf
bound
nop
or
imul
add
pop
stc
sti
xor
pusha
pop
pusha
add
adc
test
push
inc
mov
cmpl
jae
and
loopne
inc
outsb
xor
into
inc
push
pop
movsl
std
shr
rcr
flds
fadds
fstps
push
bound
sti
push
jno
inc
add
sbb
add
sahf
cmpsl
sub
adc
or
fdivrl
repnz
or
adc
pop
in
add
clc
adc
and
sbb
push
and
int3
sahf
imul
sbb
fs
hlt
dec
fistpl
sub
sub
or
xor
lahf
imul
adc
and
rcrb
not
ficompl
push
sbb
pop
sub
testb
les
fmuls
and
xor
push
sti
cmp
sbb
sbb
push
inc
fs
fidivl
sti
dec
dec
jg
adc
fs
inc
add
enter
add
cmp
ret
cmp
jg
nop
outsb
pop
dec
ret
in
orb
sahf
fstpt
das
rcrb
mov
add
xor
imulb
adc
sbbb
faddl
pushf
mov
xchg
sbb
and
push
jno
add
sub
push
das
pusha
and
call
dec
decl
xor
ds
or
aas
xlat
lock
inc
push
cmp
cmc
and
bnd
mov
push
pop
mov
dec
sahf
fbld
push
adc
sbb
add
xor
cmpsb
or
or
push
js
out
pop
or
jl
push
push
and
inc
dec
dec
xchg
ss
mov
enter
imul
outsl
xchg
pop
adc
adc
sbbl
jle
jmp
lea
imul
movb
adc
inc
andl
mov
dec
xor
push
loope
xchg
or
lods
inc
pusha
push
mov
sar
inc
es
add
inc
mov
adc
ficompl
adc
and
add
mov
adc
sti
call
or
jge
and
lea
push
loope
inc
popf
mov
jp
int
shl
inc
insb
call
movb
mov
sbb
repnz
call
popf
repnz
xor
inc
push
rcrb
dec
call
inc
sbb
movsb
xor
loope
mov
test
mov
mov
test
lods
mov
test
dec
inc
sbb
ud0
adc
shll
adc
subb
adc
sbb
mov
cmp
jg
or
fdivs
movsb
or
mov
inc
pop
add
add
mov
add
pop
or
lods
adc
das
xor
dec
cmp
les
lcall
mov
or
mov
cmp
push
ljmp
sbb
cmpsl
push
push
jnp
inc
push
shrl
sbb
sbb
push
sub
fbstp
mov
pop
aaa
cmp
inc
loope
decl
clc
push
mov
push
cmc
lahf
enter
ficomps
in
lahf
incb
idiv
or
jb
pushf
sbb
fldenv
popa
mov
push
mov
sbb
cmpsl
movsl
pop
int
push
sbb
aaa
push
fisttps
add
or
dec
cmp
sub
mov
push
inc
dec
lahf
cmp
jle
lods
sub
mov
add
xchg
push
mov
fwait
pop
jg
jnp
sub
inc
mov
sti
test
cmp
xlat
dec
jb
ret
adc
adc
push
or
mov
outsl
inc
xor
ret
and
in
dec
arpl
adc
faddl
push
xlat
je
lcall
cmp
and
lods
popa
aaa
or
push
cmpb
adc
pop
sahf
jne
inc
pop
lahf
scas
adc
adc
lods
xchg
dec
and
jno
imul
hlt
adc
rol
fildll
sub
movsl
in
pop
pop
pop
jmp
jo
aam
mov
cmp
lods
outsl
sbb
xchg
sub
rcrb
pop
push
and
lea
repnz
popa
sbb
insb
mov
ljmp
lods
es
sbb
jge
inc
cmp
pop
or
je
insb
push
xchg
mov
and
cmp
sub
aaa
push
lods
imul
or
add
sbb
iret
or
mov
add
add
shll
enter
fs
inc
sub
sub
add
pop
mov
jge
add
and
jbe
push
out
inc
jmp
inc
push
sub
jb
incb
mov
stos
or
push
jp
dec
aas
cmp
incl
test
int
xchg
nop
pusha
insl
or
rorl
repz
mov
jl
loop
sub
and
lahf
push
jno
out
mov
mov
sub
and
add
adc
aaa
cmpsl
movsb
les
add
repz
or
xor
xchg
xchg
dec
sbbl
adc
cs
and
mov
out
sub
fwait
loop
fmull
lea
jg
add
test
negl
adc
xor
push
pop
bound
lea
arpl
adc
sub
test
add
xlat
andl
inc
out
pop
movl
mov
leave
iret
or
adc
hlt
cmp
jl
dec
ret
push
out
lret
xor
in
or
jl
ret
je
mov
cs
sub
xor
enter
add
cmp
ss
imul
cmp
incb
mov
test
jge
mov
iret
xchg
rorb
cmp
stos
jle
lret
sub
lock
xchg
arpl
and
adc
rolb
daa
insl
push
incb
enter
adc
jg
nop
jle
into
jmp
mov
cmovns
dec
pop
adc
addb
incb
addb
decb
add
das
xorl
movswl
rol
sbb
dec
dec
cmpb
or
mov
sbb
and
std
fisubrs
mov
cmp
sbb
mov
inc
inc
and
sbb
sub
inc
movsl
pop
mov
ljmp
cmp
pop
mov
ret
sub
adc
adc
and
mov
and
push
xor
push
sbb
pop
lret
ret
push
mov
lret
jge
mov
enter
fs
pop
and
test
shlb
mov
jns
mov
outsl
addb
ds
push
lea
adc
adc
out
mov
mov
dec
test
jl
adc
mov
mov
subl
stos
inc
dec
push
mov
adc
lods
orb
enter
adc
clc
mov
dec
std
cmp
inc
xlat
ss
jb
dec
add
ret
insl
push
add
or
inc
adc
mov
pop
cmp
ret
outsl
lds
nop
cld
push
andb
cltd
fcmove
xchg
push
sbb
xchg
and
push
add
add
add
add
int3
divl
loope
stc
daa
mov
loop
insb
mov
cmpsl
sti
xchg
push
add
sbb
dec
fdiv
rolb
fisubl
adc
rcrl
test
mov
daa
xchg
push
in
mov
pop
pop
andl
test
push
xor
add
lret
shll
sub
sbb
adc
mov
mov
bound
imul
mov
outsb
xor
add
cli
adc
mov
xchg
popf
stos
inc
xchg
xchg
aam
cmp
in
mov
insb
sbb
sbb
push
xchg
mov
mov
adc
scas
sbb
dec
fdivs
xor
pusha
cmpsb
dec
sub
inc
mov
sbb
mov
inc
sub
lret
shlb
lock
mov
flds
sbb
push
movsb
incb
sarb
xor
mov
testb
cs
dec
insb
in
repnz
jle
pop
inc
or
enter
mov
sbb
js
sbb
gs
sub
sbb
addb
mov
mov
xchg
pusha
inc
push
add
roll
sub
mov
jns
adc
add
ss
adcb
and
push
mov
sbb
in
inc
add
cmp
stos
ret
mov
lds
test
loopne
mov
loope
or
jo
pop
and
rclb
push
jl
mov
iret
das
ret
call
cmp
xor
je,pn
mov
faddl
outsl
adc
add
adc
cltd
or
jle
fistps
test
or
push
mov
fldt
test
or
add
pop
aad
aad
xor
rcrl
adc
or
sbb
xor
aaa
xor
pop
gs
pop
jmp
add
sbb
lret
add
imul
lock
jo
inc
repz
and
sti
js
movsb
cmp
lea
leave
pop
pop
xor
and
add
insb
xor
inc
or
mov
mov
and
mov
and
adc
loopne
rolb
rcr
cmp
inc
out
hlt
movsb
cltd
nop
int
or
sbb
inc
insb
add
and
cmpsb
dec
movsb
inc
cmp
and
adc
cmp
mov
pop
pusha
pop
pushf
sub
ja
inc
mov
pop
add
clc
bound
ret
cs
jbe
adc
dec
imul
mov
inc
js
mov
dec
sbbb
push
popa
add
mov
divb
outsl
push
push
pop
pop
outsw
outsl
je
out
cmpps
pop
insb
mov
daa
or
ficompl
lret
push
push
or
pop
jge
or
mov
push
add
cmp
mov
push
inc
insl
loop
mov
inc
or
sbb
jae
push
out
add
push
and
jb
dec
pop
dec
popf
and
in
or
or
inc
and
rol
inc
add
roll
adc
fmull
addr16
mov
fs
mov
sbb
cmp
adc
clc
lods
adc
sbbl
and
bswap
or
xor
nop
adc
jmp
mov
loope
mov
or
enter
inc
mov
je
lea
das
adc
lret
add
jle
outsb
out
push
add
stc
push
imul
xorb
test
add
adc
rorb
jns
movsl
adc
mov
adc
ljmp
push
rclb
mov
pop
xor
test
scas
sbb
pop
pop
add
cwtl
call
popa
je
mov
imul
and
das
js
adcl
mov
sub
inc
cmp
jb
enter
cmp
sarb
bound
inc
xchg
pop
mov
push
out
or
pop
mov
xor
aaa
das
inc
clc
andl
dec
mov
insl
clc
sbb
dec
ror
aaa
pop
pusha
or
clc
xor
out
dec
push
sbb
cmp
fmuls
sbb
push
and
cmp
mov
hlt
inc
arpl
test
push
dec
inc
dec
inc
and
mov
sbb
dec
psubsw
push
xchg
mov
cmp
cmpsl
incl
push
push
xchg
hlt
add
dec
add
adc
fwait
ret
dec
add
sub
jge
pop
pop
pop
pop
ret
jno
mov
xor
repnz
jg
xor
and
inc
inc
shlb
adc
inc
push
mov
lock
iret
roll
inc
idivb
add
inc
sub
sbb
movsbl
out
bt
das
das
ja
bound
add
sbb
sub
jns
or
mov
push
pop
cltd
add
adc
cmpsl
cmp
mov
push
jg
push
fucom
pop
lods
jae
inc
addr16
push
jne
or
sti
lea
xchg
ds
insl
xchg
adc
jmp
lret
add
sbb
inc
ss
clc
xor
dec
sbb
xchg
cmp
pop
inc
das
nop
clc
push
lret
sub
sbb
add
hlt
aad
subl
inc
push
ror
scas
add
mov
imul
movsl
cli
and
les
sub
scas
pop
test
add
inc
loopne
sbb
or
mov
movsl
rcl
loopne
test
test
or
pusha
int
xor
mov
pop
xlat
int3
add
sub
unpcklps
add
dec
testl
into
movsb
insl
stos
add
into
add
nop
das
push
push
insb
in
int
add
hlt
mov
lret
scas
leave
sbb
mov
scas
pop
fildll
pop
mov
jmp
scas
gs
inc
pop
sub
or
xor
adc
insb
add
pop
add
int
and
test
jle
call
lret
sbb
xor
add
mov
or
xor
adc
add
push
arpl
sub
sub
mov
cmp
cmpsl
xchg
mov
shlb
push
xor
push
fildll
fsubrl
or
add
pop
add
imul
adc
lods
add
cmp
push
roll
add
inc
dec
add
and
popa
aas
push
push
sub
repnz
outsl
fs
in
or
sub
out
push
cmp
and
push
gs
xchg
and
adc
sbb
andb
test
and
pop
mov
pop
add
or
or
sub
add
call
adc
inc
mov
mov
or
inc
pop
add
add
out
xor
das
repnz
push
dec
outsb
jbe
imul
push
mov
adc
dec
sbb
inc
adc
or
enter
cmp
dec
lret
dec
ret
push
outsl
lods
sti
les
je
dec
push
inc
push
inc
add
ret
dec
push
rcll
pop
mov
xorb
shll
mov
sbbb
ror
sbb
push
or
jne
jbe
pusha
test
sub
mov
shr
push
js
decl
sbb
mov
push
pushl
push
push
ss
add
fs
fmuls
gs
fildl
add
cmp
out
clc
ss
in
cltd
add
add
inc
adc
push
rorl
out
or
xchg
or
sub
jne
add
inc
loopne
xchg
or
movsl
xor
sqrtps
push
jo
and
mov
test
movsl
inc
pusha
sub
dec
add
add
inc
mov
dec
add
pop
fidivs
enter
push
int3
pop
inc
pusha
cwtl
loopne
sarb
pusha
jg
aas
pop
inc
bound
je
adc
fs
les
xlat
dec
nop
cwtl
inc
adc
xor
fisubrs
test
popa
xchg
add
data16
cmp
ja
inc
fmuls
sahf
add
jle
push
push
jne
push
mov
aaa
loopne
or
cwtl
mulb
lea
rorl
xor
xchg
push
mov
lret
jl
mov
jo
arpl
add
xchg
and
add
add
push
adc
lds
sbb
mul
sbb
pop
rclb
adc
sarl
adc
add
shll
add
or
mov
and
jge
ficoms
in
push
xchg
push
outsb
popf
stc
xor
arpl
ficoms
push
dec
sub
mov
stos
push
leave
xchg
pop
add
adc
cmpsb
adc
popa
jmp
jo
or
es
bound
or
xor
mov
je
nop
or
ja
lds
add
ret
sub
nop
add
mov
mov
call
push
pop
ret
adc
mov
or
sub
add
shll
pop
add
sub
sub
add
sbb
add
push
adc
adc
and
xor
lods
sbb
pop
jo
push
sbb
add
out
mov
mov
mov
inc
movsb
push
adc
adc
push
dec
pop
add
dec
add
mov
xorb
or
sbb
mov
push
das
push
adc
adcl
dec
jne
data16
add
mov
imul
cmp
pop
das
jo
push
in
sahf
push
pop
and
fwait
jae
rolb
jp
or
pusha
push
out
aas
xor
adc
adc
mov
fisttpll
adc
int
sbb
js
jns
push
sbb
push
xchg
call
add
ja
aad
outsl
call
xor
add
outsl
cmpsb
cmp
loopne
adc
adc
sbb
add
dec
sub
arpl
mov
int
push
xor
nop
add
sbb
dec
fdivrs
xorl
mov
pop
add
sbb
ljmp
mov
cmc
test
fmuls
test
push
push
out
jne
lock
lds
sub
cmp
inc
pushf
pusha
imul
dec
insb
ds
xor
adc
sbb
add
push
bound
jo
adc
mov
inc
scas
xor
add
scas
nop
loopne
jnp
push
push
in
jmp
or
fs
sbb
mov
pop
xor
icebp
arpl
ljmp
adc
repnz
add
int3
popa
inc
push
jo
mov
add
adc
dec
push
inc
dec
inc
push
dec
pop
fsubr
idiv
or
inc
inc
lahf
or
push
lret
inc
dec
push
aaa
xor
jg
inc
push
dec
push
dec
inc
push
adc
lahf
jbe
nop
ret
leave
or
inc
fidivs
adc
and
das
sbb
mov
adc
imul
cmp
or
mov
inc
xor
dec
inc
push
out
divb
jmp
adc
outsl
pop
cmp
mull
mov
inc
adc
dec
dec
push
add
push
adc
mov
mov
popf
pop
sub
in
out
xbegin
pop
cmp
dec
inc
sub
push
aas
fidivs
int
mov
pop
dec
inc
inc
rclb
cwtl
push
and
int
push
sbb
popa
mov
dec
dec
and
xor
pop
pop
or
lds
add
mov
push
push
xor
lcall
movsb
inc
lock
inc
gs
adc
adc
dec
push
or
xor
and
mov
and
dec
lahf
pop
dec
mov
or
gs
push
push
and
jo
inc
das
push
addl
xchg
adc
pop
dec
inc
dec
gs
rolb
insl
pop
xchg
xchg
inc
inc
adc
pop
mov
sbb
dec
xor
adc
or
push
imulb
dec
out
inc
icebp
sbb
xor
test
sbb
sub
outsb
jo
pop
adc
ja
arpl
in
in
call
inc
aas
dec
rcll
out
xchg
or
pusha
mov
dec
inc
push
xor
mov
pop
inc
clts
aaa
fdivrl
push
jb
adc
sub
inc
dec
mov
ret
push
push
sbb
add
rolb
scas
jl
inc
pop
loope
xor
loopne
sbb
jo
rcl
jnp
dec
dec
push
pusha
jo
js
das
pop
sbb
arpl
testl
addr16
push
fnstcw
dec
mov
dec
inc
lds
ja
mov
test
adc
dec
dec
add
nop
xor
push
adc
sbb
add
inc
adc
xor
mov
rcrb
adc
xchg
mov
add
nop
movsl
sbb
test
test
sub
sarb
or
mov
loopne
xchg
push
xor
push
or
mov
xchg
pop
arpl
xchg
andl
or
add
cs
lcall
loop
add
lock
jno
rcrb
or
sub
mov
xchg
or
shl
and
sub
dec
outsb
in
imul
fwait
jbe
jb
or
or
addr16
jns
push
jb
dec
push
cmpsb
push
add
add
bound
push
aam
dec
cld
pop
orb
push
popa
add
adc
sub
cmp
cmpl
and
add
enter
out
add
or
push
dec
inc
int
movl
pop
and
addr16
rcrl
jo
or
adcl
jae
mov
incb
cmpsb
mov
push
stos
add
lods
nop
mov
movsl
or
ret
mov
adc
add
notb
subb
mov
movsl
shrl
sbb
add
push
xor
xor
pop
lods
ljmp
push
or
xchg
outsl
in
nop
in
push
or
pop
pop
setnp
nop
xchg
add
add
push
add
imul
jne
push
xchg
or
xchg
push
sarb
mov
dec
adc
inc
sub
inc
lldt
movsl
cltd
add
push
xchg
out
adc
adc
sets
push
pop
push
in
xor
inc
mov
neg
fwait
cmpsb
add
push
test
jb
dec
pop
out
add
inc
or
bound
cmpsb
inc
iret
dec
inc
adc
fmuls
adc
dec
mov
dec
push
nop
movsb
in
mov
fcoms
and
xchg
cmpsl
ret
test
add
popa
push
mov
pop
sub
push
fiadds
add
cmp
push
jno
push
add
push
lock
xor
mov
out
cwtl
out
out
add
addl
gs
jno
inc
jnp
pop
sub
or
or
sub
mov
jb
imul
mov
or
cmc
movsb
mov
mov
sbb
xchg
lret
pop
or
sub
push
sahf
xchg
fdivrp
out
scas
loope
jo
push
fadds
sbb
sub
push
pop
xchg
xorl
fsubl
divb
add
dec
pop
repnz
inc
inc
lods
and
popf
push
test
jae
and
mov
leave
in
sbb
stc
pop
sbb
andb
or
stc
xor
mov
data16
sbb
push
dec
mov
sub
xchg
cmp
jge
sbb
insb
pop
dec
sbb
icebp
add
add
outsb
fs
xchg
out
add
push
call
dec
or
xchg
popa
outsl
adc
adc
mov
jl
out
je
adc
push
gs
sub
pop
inc
pop
xor
or
shrb
push
lods
jnp
sbb
pop
and
nop
xchg
inc
add
mov
and
add
cmpsb
repz
mov
nop
xor
mov
sarb
add
cmp
rclb
push
sub
xor
sub
mov
push
add
or
push
pop
xchg
push
or
pop
and
in
push
push
shll
add
inc
ret
popa
push
scas
push
pop
pop
lock
jl
mov
pop
in
test
xor
inc
add
dec
xchg
dec
dec
mov
inc
jno
daa
add
inc
xor
sbb
and
or
fwait
cmp
sti
or
sbb
orb
cmp
xchg
sbb
mov
std
jo
enter
mov
cmp
fildl
sbb
hlt
psubusb
cmp
cmpl
pop
ljmp
enter
add
sbb
add
sbb
insb
pushf
sbbb
int3
cld
jb
pop
in
xor
or
pop
jb
pop
add
add
or
cmc
test
popa
cmp
sbb
mov
int3
int3
jnp
mov
dec
popa
outsb
mov
shll
adc
and
fsubrp
jmp
jb
xor
add
sub
push
fs
jno
shll
mov
shll
add
xor
imul
cmp
popf
or
test
hlt
pop
mov
dec
add
roll
ss
cltd
xor
mov
or
xchg
push
add
decb
shlb
mov
push
xor
xor
imul
pop
shlb
mov
fs
cmp
mov
rol
mov
out
pop
nop
sbb
sbb
or
cld
lock
icebp
push
or
pop
shlb
xchg
pmulhuw
or
mov
dec
add
outsl
mov
add
pop
jle
pop
les
add
dec
cmp
push
aaa
mov
andl
stos
mov
iret
das
sub
pop
and
push
cmp
fidivs
add
sub
roll
loopne
cmp
jecxz
iret
pop
cmp
xchg
sbb
fidivrl
jno
into
movsl
inc
inc
cmp
or
mov
rorb
xor
and
sbb
dec
dec
dec
cmp
mov
imul
and
imul
es
or
aas
shrb
inc
push
dec
lcall
sbb
nop
mov
inc
out
push
dec
sub
sbb
jne
mov
dec
xor
xor
xchg
rorb
jo
add
out
or
js
push
push
xchg
js
add
jae
sarb
addb
adc
add
std
or
stos
mov
lcall
nop
nop
out
adc
inc
fdiv
cwtl
or
dec
jae
stos
mov
aam
mov
or
in
clc
rcrb
test
add
loopne
sub
pop
mov
ret
mov
lea
xchg
xorb
mov
aaa
nop
ss
mov
xchg
out
rol
nop
xor
les
rolb
enter
into
dec
aad
mov
inc
cmpsl
push
push
xchg
rclb
adc
push
sbb
pop
fcomp
push
imul
adc
add
mov
jns
lcall
lods
or
call
test
push
leave
insb
fsts
xchg
out
lock
add
sub
orl
clc
push
and
das
in
sbb
cs
add
add
add
dec
xor
dec
loop
dec
or
mov
movsb
jns
adc
pop
in
dec
repz
inc
or
roll
sbb
add
test
dec
aad
and
pop
push
or
ret
jo
sub
into
nop
adc
sub
int
and
or
inc
lea
pop
fwait
aam
dec
adc
pop
loope
xor
inc
or
popf
or
clc
loopne
push
xchg
out
adc
pop
add
dec
lcall
sbb
rolb
jnp
add
inc
mov
add
sbb
inc
popa
mov
rcrb
rcrb
lea
bound
dec
sub
inc
mov
out
std
or
push
dec
les
sti
pop
add
rcl
and
movsb
xchg
dec
adc
xor
dec
adc
push
int3
or
repnz
push
mov
pop
stc
inc
jecxz
add
dec
pop
mov
mov
push
xor
dec
lea
xor
pushf
fxch
xor
fstpt
jle
stc
inc
add
dec
sbbb
sub
xchg
ret
out
add
add
and
sbb
dec
pop
dec
adc
cmp
test
lret
add
or
or
xchg
jno
sti
sub
cmp
lock
lea
call
fidivs
in
push
hlt
mov
adc
inc
push
fs
lock
add
fs
in
mov
add
inc
call
arpl
cld
inc
out
ret
sbb
cld
mov
adc
subl
pop
sub
aaa
in
push
cmp
sbb
cld
loopne
inc
xchg
dec
or
inc
leave
add
stos
pusha
add
inc
cmp
mov
sti
push
adcb
lock
dec
stos
xor
jb
shlb
xor
and
pop
inc
push
pop
or
stos
dec
gs
pop
popa
and
test
jo
xor
ss
jl
outsl
insb
jmp
pop
in
mov
pop
mov
sbb
push
inc
subl
roll
sbb
sbb
gs
inc
arpl
inc
popa
fdivrs
xchg
or
jns
data16
add
pop
aaa
dec
ds
loop
cmc
ljmp
add
dec
or
sbb
mov
cmc
outsb
adc
push
lret
inc
ljmp
cmp
add
inc
xor
mov
ja
popa
cmpl
adc
outsl
bswap
xchg
sbb
rcll
insb
adc
int
cmp
fmuls
adc
dec
and
xchg
add
leave
inc
std
add
sbb
dec
adc
sub
and
xor
sub
je
mov
xchg
out
je
jmp
adc
fidivs
dec
add
push
adcb
jbe
das
dec
xor
xor
jae
jns
cmp
pop
jbe
sti
jle
sti
cmp
sub
data16
nop
or
lret
cmpb
lods
push
lock
lock
xchg
lock
jno
add
lock
fsubs
out
inc
push
xor
sbb
clc
bound
adc
nop
popa
pop
scas
add
sub
xchg
sarb
dec
inc
js
jmp
insl
xor
out
adcb
addl
cmp
inc
sahf
push
cs
out
sbb
in
lock
test
pop
push
fwait
add
movsb
sub
cmc
cmp
lock
fildl
cmp
jg
sbb
test
sbb
inc
sbb
xlat
test
pushf
xchg
popa
pop
push
inc
and
div
mov
mov
and
sahf
lods
cmp
add
in
and
jbe
inc
pop
out
or
cwtl
push
ficomps
test
pop
adc
and
xchg
inc
sbb
pop
xor
add
inc
jg
insb
cmovno
add
int
je
lds
leave
stos
fmull
insl
jb
jnp
add
std
cwtl
andl
test
add
jno
movsl
dec
sub
pop
aam
fnstsw
mov
sti
daa
jne
adc
insl
pusha
outsb
pop
sub
adc
ss
mov
std
xor
lods
shll
sub
pop
xor
pop
shl
jo
test
add
std
sub
movb
push
or
xor
push
xor
negb
xor
jne
jne
int3
or
es
mov
in
fidivs
mov
in
push
push
test
push
adc
jmp
icebp
add
xor
inc
cmp
lds
or
sub
movsb
movsb
add
aas
xor
and
aas
xchg
inc
mov
sbbb
push
push
add
push
pop
repnz
cmp
mul
xchg
xor
mov
cmp
sbb
in
cmp
ja
mov
xor
mov
leave
in
pop
sub
or
jge
repnz
mov
test
mov
jbe
clc
mov
or
pop
ja
sub
jmp
and
xor
call
fwait
sbb
jbe
aam
ficoms
test
cmp
test
xor
in
push
lahf
adc
lods
add
rcrb
or
aaa
dec
xchg
loopne
mov
sub
jns
and
mov
in
lds
pop
scas
loopne
add
jmp
stc
and
jnp
adc
add
in
cli
test
mov
add
jb
add
daa
movb
insb
or
adc
dec
movsb
mov
loopne
mov
mov
inc
mov
dec
xor
or
pop
jl
add
inc
push
push
loopne
adc
orl
fstps
je
xor
js
fldcw
adc
leave
shll
sar
push
sarb
add
insb
nop
cvtps2pi
cs
cmp
fldenv
fsubr
mov
ja
add
or
jle
mov
inc
sbb
adc
adc
enter
push
fimuls
lcall
push
pop
or
insb
lcall
or
push
dec
mov
mull
xor
sbb
pop
dec
push
and
inc
out
mov
xor
xorb
and
xor
cmp
std
test
outsl
vmwrite
adc
cmp
call
push
enter
pop
dec
or
lcall
add
fwait
cmc
data16
and
and
jo
xchg
pop
xchg
add
jg
inc
sub
sub
mov
or
or
push
ja
js
sbb
enter
sbb
or
sbb
pop
jb
and
adc
xchg
inc
ds
lods
jnp
mov
fwait
pushf
sub
outsb
das
adc
fildll
xor
cld
nop
sbb
push
push
lcall
inc
repnz
shlb
popa
or
aad
sub
or
lds
pushl
clc
fisubs
push
xchg
pop
push
shlb
add
push
xchg
pop
ficomps
adc
cmc
loopne
sbb
push
pop
sbb
push
test
add
add
insb
adc
rcr
jno
mov
rcl
lods
dec
pushf
or
mov
mov
push
or
jecxz
ret
inc
loope
mov
adc
mov
pop
jmp
mov
into
jp,pt
xchg
pushf
mov
das
adc
inc
push
sub
pushf
mov
test
inc
sub
mov
cmp
sti
popa
push
jne
pusha
add
cmp
cs
xchg
xchg
sbb
cmpsl
xor
nop
mov
in
dec
dec
cltd
into
aam
js
adc
xchg
orb
cli
shrl
adc
inc
add
jne
repnz
test
inc
fldt
jg
test
flds
mov
mov
outsb
jmp
inc
and
mov
pop
add
xacquire
jb
mov
pop
test
adc
sub
repnz
lea
add
sbb
lea
mov
cli
xchg
push
std
sub
loopne
push
punpckhbw
dec
mov
push
and
xor
jne
sub
clc
testl
inc
cld
enter
das
daa
mov
sub
sbb
xor
sbb
int
cltd
repz
mov
xor
sub
mov
or
int3
xchg
xchg
xor
test
pop
out
push
add
adc
xor
imul
xchg
xor
push
sub
sub
and
sbb
ud2
bound
arpl
pop
adc
repnz
and
inc
lock
xchg
push
jge
lods
and
cltd
fcomps
add
pop
xor
xor
xchg
xchg
sub
add
add
add
or
pop
outsb
add
add
jge
or
or
in
push
or
cmp
or
and
dec
or
fs
rcl
mov
fcoms
xchg
pop
push
fs
or
cwtl
popa
pop
add
push
mov
cwtl
pusha
orb
inc
dec
cmp
insb
orb
xor
cs
sub
mulps
sbb
push
push
pop
xchg
adc
adc
xchg
cmp
or
adc
sbb
cltd
imul
push
sbb
adc
imul
hlt
mov
push
movsb
dec
mov
imul
push
or
cs
lcall
sahf
aam
aad
sahf
test
and
repz
push
or
pushf
inc
aam
add
pop
xor
adc
xlat
aas
mov
mov
call
and
pop
dec
cltd
xchg
xchg
arpl
add
sub
xlat
pop
fcoms
lcall
mov
lds
or
mov
or
jb
push
hlt
paddb
xor
mov
sub
sbb
adc
xor
nop
in
xor
test
push
mov
add
loop
bound
add
mov
adc
inc
lock
mov
adc
aad
cmp
mov
jb
inc
aad
dec
or
jne
dec
fistl
push
dec
decl
or
les
test
mov
fsubrl
cmp
add
mov
and
sahf
jo
push
dec
xchg
add
cs
push
sub
stc
push
adc
test
sbb
sbb
push
push
sbb
sbb
dec
adc
push
int
cmp
xchg
rolb
add
repnz
sub
add
add
shrl
scas
adc
adc
and
inc
cmpsb
sub
cltd
nop
andl
sbb
ljmp
aas
in
insl
call
adc
mov
in
sbb
cmp
bnd
nopl
and
les
mov
jno
mov
jne
fidivs
aaa
or
out
arpl
pop
pop
add
xchg
out
inc
inc
jne
cmp
out
inc
jne
and
push
or
out
inc
jne
pmulhuw
inc
outsl
adc
cmp
or
jmp
or
fistps
sbbb
add
lahf
sub
cltd
push
pop
insb
fs
fidivrs
mov
sub
rolb
add
and
pop
and
outsl
jp
nop
or
jl
js
and
xor
or
pop
and
cmp
and
or
or
mov
mov
add
movsl
sbb
jno
and
sub
xor
ret
jo
push
push
in
fnstsw
scas
push
mov
xlat
cwtl
mov
or
sbb
adc
jecxz
push
out
mov
sbb
lea
jnp
or
push
add
sbb
fs
mov
sub
xor
scas
test
ret
iret
leave
push
inc
inc
or
dec
adc
add
mov
pop
data16
je
lock
cmp
lock
addl
aaa
or
push
inc
pop
and
or
cwtl
dec
inc
mov
or
sbb
scas
cmc
loope
or
adc
in
or
das
pop
and
les
xor
push
xlat
mov
mov
cwtl
xchg
and
mov
hlt
mov
mov
je
cwtl
shll
inc
aas
add
pop
sar
jnp
insb
mov
and
sbb
outsb
cwtl
inc
cltd
fmuls
sbb
sbb
pop
push
inc
jp
inc
in
das
jne
add
inc
clc
insb
sbb
andl
sbb
inc
adc
ret
dec
andb
pop
mov
or
and
sbb
add
mov
adc
nop
add
adc
fucomp
xchg
push
xor
sahf
dec
stos
push
xchg
cmc
fldcw
and
cmpb
mov
sub
pop
adc
adc
mull
inc
addl
sub
sbb
test
adc
and
xchg
cmp
lahf
sub
cmp
and
or
push
dec
fiadds
sbb
mov
jmp
cmp
or
mov
add
aam
add
daa
adc
cmp
mov
clc
adc
sbb
mov
sbb
and
lods
ret
test
ficomps
push
imul
xlat
lods
insl
add
ret
and
adc
push
cmp
add
sub
mov
jmp
fmul
clc
pop
adc
pop
ret
add
pop
cmp
push
test
adc
fdivrs
scas
pusha
inc
fmull
adc
pop
adc
add
inc
or
lret
fs
xchg
adc
ja
sub
mov
add
int3
movsl
shll
xor
cmpsl
lret
cmpsl
mov
xchg
mov
sub
and
shll
mov
mov
in
outsb
cmpsl
mov
int3
mov
ljmp
movsl
jne
shrb
pop
sarl
mov
push
incb
inc
ret
inc
iret
insb
movsb
add
hlt
pushf
jmp
sbb
popa
popa
and
push
andl
fmuls
test
mov
push
dec
push
je
call
adcb
mov
inc
popa
lock
push
inc
sub
sahf
lret
jo
sub
push
xchg
push
push
cs
sbb
enter
fucomip
pop
sub
push
pop
and
push
pop
sbb
adc
push
sbb
push
inc
and
adc
pop
and
dec
or
ljmp
pop
and
adc
sahf
out
in
lock
dec
inc
add
jae
or
sub
xlat
xchg
leave
inc
push
push
rorb
jbe
fwait
or
add
cld
push
jns
sub
cmp
push
icebp
jmp
push
and
leave
or
cvttps2pi
ds
adc
and
and
mov
dec
loop
push
xchg
gs
cmp
rcrb
adc
push
dec
add
das
push
das
xor
pop
adc
cmp
sub
xchg
pushf
sub
test
sbb
pop
xor
mov
fcoml
add
cmp
fstl
jle
push
cld
lcall
cmp
fwait
xor
sbbl
dec
dec
sub
push
sahf
movsl
std
inc
cmp
lcall
jne
mov
pop
or
movsb
cmp
pop
fcmovnbe
mov
out
fdivr
add
sub
jne
push
push
popa
movsb
xor
xchg
in
fs
inc
in
mov
add
sarb
and
lock
arpl
hlt
mov
sbb
jl
je
clc
add
lock
jns
mov
add
sbb
pop
clc
push
mov
add
cmc
add
fadds
aam
js
or
and
sub
in
cmp
mov
add
rcl
lods
mov
and
repnz
mov
mov
mov
test
add
add
or
inc
pushf
pop
inc
ret
add
dec
add
rcrb
adc
push
push
daa
push
inc
test
and
and
mov
fstps
or
lods
mov
enter
call
test
scas
lods
mov
movsb
cmpsb
mov
mov
push
pop
add
scas
add
inc
in
or
adc
fs
das
sbb
shll
ss
mov
add
lahf
insb
mov
sbb
mov
xchg
jmp
popa
dec
loopne
add
dec
push
xchg
adc
and
pusha
inc
jecxz
andl
jg
jo
in
and
adc
mov
pop
stos
add
insb
xor
mov
test
mov
jmp
movsb
loopne
fucomi
sbb
jbe
mov
repz
stos
imul
xchg
ret
aas
push
jbe
push
aam
cmp
mov
popf
adc
out
out
add
testb
inc
inc
sbb
mov
in
push
or
dec
inc
jae
add
cmp
stos
and
lea
add
orb
sti
mov
adc
dec
xor
and
inc
inc
inc
sbb
mov
daa
dec
add
inc
dec
aaa
icebp
jae
popf
into
push
daa
dec
cmp
mov
cmp
andb
filds
addl
outsb
mov
dec
addb
inc
loopne
pop
cltd
insb
jecxz
sub
inc
pmaxsw
mov
lods
mov
push
xor
dec
aaa
mov
add
jns
inc
cld
mov
mov
add
imul
jnp
fistl
shll
out
sbb
and
sbb
out
jg
and
xor
pop
repnz
inc
test
iret
cmpl
enter
lods
and
cmpl
enter
pushf
cwtl
iret
cmpl
sbb
jae
xchg
mov
repnz
fadds
sbb
call
iret
xorl
in
sub
inc
sahf
insb
adc
sbb
push
in
pusha
sub
inc
sahf
add
cmp
inc
sahf
add
dec
and
nop
out
nop
inc
mov
pop
lods
mov
inc
mov
iret
xchg
mov
mov
scas
mov
in
cmp
aam
jp
mov
mov
gs
mov
pusha
insl
sub
inc
or
lret
or
push
movsl
sbb
fsubrl
movsl
add
push
retw
cmp
inc
lods
mov
or
dec
loopne
xor
rclb
gs
insl
or
mov
pop
cmpsb
test
cmpsl
shrb
test
sub
loop
push
inc
mov
mov
lods
fildl
dec
call
ret
inc
push
cs
xchg
jbe
or
dec
les
fldl
mov
jo
sbbl
fcmovbe
or
push
lods
cld
mov
shlb
push
scas
rorb
xor
aam
ret
cmp
cs
or
movsl
inc
insb
insb
or
xor
inc
leave
lods
cs
nop
sbbl
fdivl
push
mov
add
or
or
push
push
enter
push
pop
insl
popa
jbe
pop
jnp
das
imul
push
outsl
sti
jae
fs
push
outsl
outsb
fs
stc
imul
mov
data16
inc
push
or
andb
dec
imul
or
inc
cmp
push
fs
ja
clc
gs
repnz
jne
pop
dec
jbe
enter
sahf
and
push
jb
leave
dec
sahf
in
loope
fsubr
push
jae
push
push
cmp
xchg
lahf
les
mov
lcall
xchg
jl
mov
dec
nop
cmpsb
sbb
and
jg
movl
pop
push
mov
adc
ss
xchg
jne
sbb
jns
or
xor
and
int3
dec
xor
popf
and
outsl
jns
dec
push
rolb
insb
fsubrs
add
cld
pop
shrb
add
push
adc
cmpsl
sub
jg
inc
xchg
push
cli
adcb
jae
mov
pusha
outsl
mov
and
push
loopne
in
bound
lret
dec
aam
fwait
add
adc
mov
add
iret
and
aam
mov
inc
cmp
jno
cmpsl
dec
test
push
loope
mov
add
dec
mov
and
pop
sarb
addb
sti
xor
inc
mov
push
jmp
jo
fadds
insb
mov
pop
xor
enter
inc
xchg
add
inc
sub
cli
and
and
addr16
mov
shrb
pushl
cmp
mov
mov
push
xor
jae
mul
stos
test
popa
push
inc
inc
test
sahf
push
mov
mov
incb
xor
jbe
rorb
and
xor
jns
xor
out
pop
or
cld
dec
xchg
daa
in
fdivs
dec
xorb
verw
es
pop
aas
pop
dec
sbb
dec
out
pop
and
mov
and
inc
mov
mov
xor
push
ja
je
mov
ds
outsl
popa
mov
out
or
add
lds
js
int3
pop
pop
dec
xlat
rorb
mov
inc
jbe
mov
or
sarl
lds
std
push
ret
pop
clc
cmp
fchs
inc
push
fdivrl
lods
shll
dec
dec
pop
or
test
fistl
cwtl
in
inc
inc
dec
cmp
popf
add
ret
dec
or
clc
sbb
push
xor
push
inc
xchg
negl
in
popa
mov
sbb
movb
dec
adc
sahf
outsb
jmp
aaa
dec
clc
addb
lods
push
push
add
addb
cmpb
and
mov
rorb
in
pop
xacquire
cmp
cmp
inc
mov
cmp
cmp
setno
pop
fcompl
push
or
and
add
ja
inc
clc
add
gs
addb
add
sub
jae
add
adc
sbb
into
add
push
push
outsb
je
xorl
sbb
inc
aad
add
jnp
or
rcll
jl
add
mov
push
or
imul
add
inc
xor
and
push
xchg
and
mov
addb
pop
inc
repnz
push
and
mov
mul
or
dec
mov
mov
imul
adc
sbb
inc
enter
add
das
cmp
xchg
and
inc
hlt
cmp
fs
cs
lock
xor
ret
lock
nop
inc
add
adc
sbb
pop
inc
xor
add
push
xchg
cmpb
pop
xchg
repnz
lock
sbbb
shlb
add
adc
pop
sub
dec
out
scas
mov
mov
sub
ret
shlb
push
outsl
xchg
int
rep
ss
lret
loope
repnz
sbb
sbb
mov
adc
add
mov
mov
subb
cmp
push
add
xchg
cmpsl
xor
ret
inc
and
dec
or
jo
test
jg
repnz
xchg
dec
cmp
cmp
hlt
clc
sub
stos
xchg
test
mov
in
push
cmp
mov
jbe,pn
mov
stos
loope
inc
enter
and
fucomip
sti
and
jecxz
ds
push
adc
sbb
xor
or
or
adc
xchg
add
jns
shl
sti
fiadds
mov
jecxz
mov
out
and
mov
icebp
loope
mov
xor
cltd
or
scas
fwait
pusha
mov
ja
or
or
in
sub
enter
mov
nop
mov
adc
add
movsl
gs
sbbb
push
cmc
or
adc
add
cmp
lock
popa
mov
or
jae
add
push
mov
dec
enter
lock
and
sub
jle
xchg
inc
in
inc
fmulp
inc
dec
fcomps
sub
push
pop
inc
push
rorl
xchg
xchg
sub
xor
push
sbb
add
mov
or
jb
inc
inc
adc
mov
pop
loope
outsb
xchg
pop
call
dec
or
pop
movsl
and
push
mov
mov
imul
add
in
inc
dec
or
dec
js
jp
stos
and
loopne
std
outsl
test
dec
inc
cmpb
jne
and
sbb
inc
mov
aas
insb
sub
sub
mov
test
cmp
cltd
rcr
shrb
insl
inc
mov
mov
movsb
or
call
mov
call
jp
call
add
add
add
jmp
or
sbb
data16
mov
xor
adc
xlat
js
xchg
nop
xchg
pop
test
and
cmp
add
adc
test
and
mov
mov
stos
jb
jno
jg
sti
push
repz
mov
xchg
cmp
ret
out
jle
xchg
and
cwtl
nop
mov
leave
nop
push
mov
mov
or
or
repz
scas
add
jl
or
mov
je
xlat
clc
mov
mov
or
jnp
sbb
dec
xchg
std
inc
sub
push
imul
or
fs
lcall
out
push
or
sbb
cwtl
jns
push
sbb
pusha
aam
push
pop
fists
shrb
inc
adc
jns
nop
out
push
cwtl
pushl
adc
add
movsl
xlat
mov
call
mov
adc
lods
fwait
pop
mov
pop
ljmp
cmp
jb
sbb
dec
dec
loopne
in
xchg
and
mov
inc
es
push
and
xor
or
call
mov
fadds
jle
mov
dec
and
popw
mov
dec
lods
mov
dec
stos
std
fwait
sbb
adc
loope
orl
daa
test
and
add
out
jbe
cwtl
mov
insb
and
pushf
adcb
push
inc
xor
mov
sarb
js
popa
jae
das
jb
data16
insb
cmp
inc
or
mov
or
add
and
es
xor
sub
sub
insb
rcll
stc
adc
inc
orb
movsb
lock
add
imul
popf
mov
sub
jg
push
enter
mov
test
jns
hlt
in
mov
and
lock
scas
fsubrs
xchg
dec
dec
enter
adc
fsubrl
ds
dec
clc
pop
leave
sbbb
push
popa
cmpsl
jo
jne
jge
adc
ret
push
fistps
mov
jl
nop
xor
and
adc
call
mov
xchg
fdivl
push
pop
dec
fcomps
roll
jae
mov
popa
adcl
push
daa
mov
cmovl
pop
pop
mov
rcl
int3
int3
test
pop
lcall
dec
enter
mov
xor
xchg
xchg
mov
jge
addl
xor
rcll
mov
push
mov
add
lds
int
sarb
aas
popa
or
pop
mov
mov
int
pop
mov
lods
pop
add
int3
out
fists
loop
push
mov
dec
fwait
je
nop
sarb
inc
and
add
or
sub
pushf
or
adc
jl
jnp
lods
subl
mov
lods
add
imul
dec
push
push
or
loopne
cmp
mov
loope
jnp
xor
adc
test
sub
mov
fldenv
mov
xor
pushf
pushf
cwtl
and
or
mov
dec
and
and
and
test
push
inc
mov
das
nop
jle
inc
lcall
dec
orl
xor
or
adc
mov
js
out
lahf
mov
enter
mov
xchg
jnp
insb
cmp
loopne
rcll
or
pusha
xor
test
jl
stos
mov
movsl
addr16
les
sbb
mov
fsubs
cld
lret
popf
pop
inc
push
push
subl
pop
jb
mov
shlb
push
ret
xor
call
adc
adc
inc
or
jae,pn
or
pusha
hlt
jg
inc
sbb
shll
sub
popf
bound
add
pop
test
push
mov
dec
pop
pop
xchg
pop
repnz
in
push
push
in
adcl
scas
or
xchg
mov
or
pushl
out
fs
cmp
xor
pop
dec
cmp
xchg
xchg
xchg
cmp
sub
xor
nop
sub
and
mov
shll
add
out
sub
mov
and
push
sub
aaa
ret
fnsave
clc
cmp
mov
pop
jb
mov
push
and
adc
mov
mov
insb
out
out
mov
xchg
andl
or
notb
int3
jns
lret
addb
add
sbb
dec
inc
push
addl
xchg
adc
add
mov
mov
cli
gs
movsb
frndint
mov
clc
sub
cmp
xor
and
cmp
hlt
hlt
lods
dec
enter
out
in
mov
gs
adc
cmpsb
pop
imul
addr16
push
add
xchg
inc
in
aam
loopne
mov
sahf
fmull
fdivrs
shlb
int3
or
xchg
inc
push
cs
out
xor
inc
push
in
and
mov
std
mov
mov
dec
mov
jno
mov
mov
lods
dec
das
rcl
addr16
lcall
mov
mov
adc
push
add
xor
test
hlt
ret
je
pop
mov
sbb
shrb
pop
mov
loop
mov
lock
mov
push
loope
cmp
cwtl
xchg
xchg
int3
dec
jb
nop
nop
mov
or
in
mov
in
mov
or
xor
mov
test
and
in
jl
andl
mov
outsl
popa
js
sub
test
je
orb
je
push
jo
loop
cmp
data16
nop
jns
push
fs
jmp
xchg
dec
pusha
mov
inc
pop
pop
push
xchg
or
les
pop
adc
xchg
addl
arpl
fwait
add
push
jae
xchg
xchg
cmp
pop
addr16
add
in
adc
and
jb
cmp
fbstp
sbb
cwtl
dec
push
mov
sub
dec
sbb
andps
jp
pop
fs
push
shlb
repz
push
inc
push
cmp
xchg
xor
xor
fbld
xchg
daa
and
cmc
hlt
mov
pop
outsl
cs
inc
xor
sahf
push
loop
add
aaa
jp
decl
in
popa
das
xor
xor
sub
inc
js
mov
cmp
dec
push
dec
inc
and
sub
jge
mov
jmp
dec
push
and
push
xor
cmp
sbb
inc
imul
data16
jmp
outsb
cmp
and
cmp
push
push
pusha
mov
adc
add
aaa
pop
and
addr16
pop
inc
pminub
jle
jo
inc
testb
ljmp
data16
mov
pop
sub
push
and
push
and
mov
aaa
jo
xchg
push
fadds
adc
push
add
in
clc
xchg
andb
cltd
nop
mov
sbb
mov
nop
data16
in
leave
cmp
dec
xor
addl
mov
and
inc
xchg
in
nop
mov
xor
data16
fmull
enter
sub
or
cwtl
lahf
outsb
mov
add
movsb
sbb
clc
add
sbb
sbb
sbb
push
leave
mov
mov
xor
mov
xor
dec
pop
mov
dec
lret
or
dec
fstpt
add
push
rorb
popa
xor
inc
sbb
push
and
outsl
arpl
push
inc
cmpsb
arpl
outsl
popa
sbb
push
xor
fwait
ja
xchg
pusha
pop
mov
arpl
jno
mov
mov
rclb
lret
in
pop
fmul
out
mov
cs
hlt
push
push
push
and
pop
in
lret
in
pop
lock
inc
or
inc
add
xchg
mov
ss
les
cmp
or
inc
add
xchg
mov
cld
repnz
add
xchg
insb
jbe
add
inc
dec
push
rcr
inc
fwait
gs
pusha
mov
inc
add
rcrb
mov
xor
rclb
jo
inc
mov
mov
test
xchg
int
imul
mov
loopne
test
clc
notl
lods
lods
push
movsb
je
cli
fiadds
movsb
or
adc
pop
adc
fdivr
outsb
push
cmp
stc
lret
subb
clc
push
ss
xor
pop
adc
pop
shrb
es
push
and
pop
call
jle
dec
inc
add
pop
xor
inc
push
insb
gs
fildl
add
divb
mov
mov
jl
dec
in
fs
in
xor
pop
rcl
xchg
mov
je
inc
add
imul
clc
push
enter
lcall
mov
mov
test
or
loopne
clts
fldt
gs
andb
and
jl
shll
clc
enter
cmp
lock
mov
sbb
psubsb
add
aam
dec
nop
inc
fiadds
xor
push
xor
inc
fiadds
sbb
lock
test
push
cmp
mov
inc
cs
shrl
pusha
xor
sub
cld
lcallw
dec
adc
push
das
je
pop
scas
insl
pop
imul
pop
test
bound
popa
push
hlt
imul
shll
rclb
enter
mov
cmpsb
imul
lcall
gs
add
bound
gs
xchg
addr16
mov
cmpsb
xor
push
push
push
subb
imul
lock
imul
mov
push
cwtl
shll
cmpsb
push
jl
shll
hlt
jge
imul
clc
lret
mov
cmpsb
enter
push
add
imul
mov
call
data16
inc
add
pop
rclb
mov
sbb
insb
xchg
out
sbb
je
xor
gs
nop
daa
pusha
test
cmp
data16
insb
xor
insl
xchg
int
js
dec
cmp
cmp
pusha
iret
dec
push
push
add
js
cmpsl
pop
mov
les
sbb
or
inc
jl
xchg
pop
jnp
cwtl
inc
testb
push
ret
scas
add
sqrtps
mov
pop
push
pop
fwait
lret
neg
dec
fsubl
daa
insb
and
es
int3
test
dec
leave
xlat
iret
enter
fcomp
fxch
loopne
jecxz
in
pop
pushf
dec
ret
xchg
outsl
bound
and
and
dec
mov
jg
popa
je
xor
test
cmp
xor
pop
fildl
push
adc
das
add
jg
insb
jns
testl
xorb
add
push
subb
jo
dec
push
das
or
add
add
and
shll
int3
aam
shll
cld
add
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
xor
push
add
fs
leave
popf
test
gs
in
outsl
push
rcrb
int3
and
jl
push
jb
in
jnp
jl
push
jge
mov
fcompl
clc
lods
jge
or
xchg
mov
pop
mov
les
jae
push
pop
and
iret
clts
add
pop
xchg
shll
sbb
push
sbb
add
xor
dec
adc
ja
cmpsl
out
add
adc
jbe
out
arpl
push
pop
or
dec
add
pop
outsb
dec
or
adc
or
iret
sti
add
add
pop
addb
fbstp
leave
or
insl
or
or
ret
imulb
or
mov
imul
shl
lock
mov
add
adc
cmp
xor
rcrl
js
xchg
and
xor
test
enter
nop
add
pop
adc
sarl
add
pop
in
push
inc
xor
jmp
inc
push
inc
cs
out
or
add
jmp
rorl
imul
lahf
je
ja
test
cwtl
push
subb
pop
add
aas
pop
fmull
in
rcr
fsubr
add
push
sub
adc
in
fidivl
pushl
push
and
push
movsl
insl
out
aas
pop
push
fdivrl
cmpsb
lret
mov
mov
pop
add
add
xor
cmpsb
or
adc
and
push
lcall
adc
lcall
and
mov
cld
xor
mov
or
sbb
xor
sarl
push
add
xor
adc
xor
shll
rcrb
loopne
add
inc
shl
pop
push
push
fisttps
push
in
pop
and
and
push
adc
shll
add
jnp
rorl
pushf
pop
xlat
pop
lmsw
xor
shll
dec
dec
pusha
adc
dec
shll
subb
rorb
fnstenv
or
mov
mov
lcall
insb
cmpsb
imul
je
mov
pop
push
sarb
add
push
cmp
or
or
push
syscall
mov
push
mov
pop
icebp
jg
jecxz
adc
and
loope
or
in
out
icebp
not
or
lret
adc
rclb
cld
cmpsb
jmp
sti
in
push
mov
cld
jg
pop
add
loopne
roll
jg
sbb
out
push
xor
dec
shll
push
pusha
jo
xchg
ss
rorl
xor
shll
cmp
xor
roll
and
jbe
inc
sahf
das
pop
add
pop
jb
mov
daa
or
sub
adcb
mov
and
imul
jmp
shlb
test
pushl
scas
jle
lods
mov
push
das
sti
movd
or
add
enter
adc
and
in
inc
push
dec
push
or
push
or
adc
pop
add
pusha
adc
or
enter
push
add
orl
insb
pop
je
imul
rcl
mov
ss
mov
incb
dec
mov
pop
push
mov
hlt
or
cmp
dec
fwait
dec
inc
fs
shll
mov
imul
cmpsb
imul
cmpsb
imul
unpcklps
and
push
adc
pop
dec
add
or
nop
push
cmpsb
jne
in
fs
aam
std
lret
cmpsb
imul
out
xor
clc
ljmp
inc
imul
imul
imul
cmpsb
imul
in
shlb
ljmp
add
dec
sbb
aas
jg
cmp
push
inc
cmp
adc
or
mov
mov
ja
outsl
jle
or
or
add
add
xor
fiaddl
lods
pop
jl
inc
adc
adc
negb
inc
fimull
cmp
inc
and
cwtl
fisubl
or
outsl
andl
inc
add
js
ficompl
pop
add
pop
insl
imul
add
pusha
rolb
jg
out
lds
or
js
xor
pop
mov
and
outsb
push
mov
fadds
pop
add
mov
mov
cmpsb
cli
sti
cld
std
lcall
add
addb
xchg
add
and
jbe
lahf
cmp
cs
push
mov
cmpsb
mov
call
xor
cwtl
or
mov
pop
add
add
insl
lods
arpl
ja
js
dec
shll
sub
and
xor
roll
dec
shll
mov
dec
shll
nop
push
mov
pushf
cwtl
insb
lods
dec
shll
jl
xor
shll
mov
test
shll
cld
mov
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
lods
shll
loopne
dec
shll
call
xor
in
pop
cld
lock
cmpsb
imul
sub
cmp
popf
mov
add
xor
shll
or
insb
or
ss
shl
jl
or
mov
and
sbb
cmpsb
imul
cmpsb
imul
cmpsb
imul
insb
lcall
sbb
dec
shll
shrb
loopne
xor
sarl
hlt
dec
dec
cmpsb
imul
cmpsb
imul
cmpsb
imul
lcall
lcall
cwtl
fdivl
lcall
cld
lcall
adc
imul
imul
xor
add
nop
or
dec
shll
jl
sub
xor
mov
dec
lods
test
mov
shll
mov
fdivrl
nop
in
mov
ss
les
fwait
cmpsb
imul
dec
shrl
fcompl
dec
loopne
xor
shrl
in
insb
dec
shll
je
xor
shll
mov
shrl
lcall
add
out
adc
lcall
cld
and
fwait
cmpsb
and
dec
inc
or
cmp
sbb
push
pop
sub
movsb
outsl
inc
sbb
aas
dec
push
shlb
xchg
push
fcomps
jg
call
cmpsl
pop
clc
je
add
or
adc
sbb
dec
shll
fsubrl
insb
xor
shll
sub
cld
xor
shlb
push
je
lcall
cwtl
movsb
mov
imul
xor
mov
cmp
sbb
xor
xorb
xor
push
dec
cmpsb
imul
imul
cmpsb
imul
cmp
pop
inc
clc
pop
dec
dec
lcall
fs
mov
cmpsb
imul
fsubr
hlt
add
fnstenv
addr16
int
imul
cmpsb
imul
imul
imul
imul
cmpsb
cltd
push
sbb
dec
shll
push
mov
dec
cli
sti
jmp
ret
incl
daa
cld
outsl
lcall
or
adc
mov
mov
gs
xchg
dec
inc
scas
lods
dec
adc
in
pop
daa
movsb
jne
xchg
add
loope
jg
ret
push
mov
mov
add
pop
mov
mov
mov
pop
xor
inc
xor
pop
xor
cmp
mov
adc
inc
push
xor
iret
cwtl
sbb
adc
add
or
sub
and
cmpsb
pop
mov
loope
sahf
cmpsb
imul
movsl
imul
mov
lock
call
xor
bswap
inc
inc
mov
mov
incl
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
insb
pushf
pop
jmp
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
decl
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
ljmp
addr16
push
add
xor
push
into
incb
shll
or
inc
mov
mov
jle
incl
dec
mov
shrb
out
push
fisubs
loope
shrl
bound
pop
jmp
insl
popf
pop
or
cmp
push
testb
cmp
add
dec
mov
jbe
pop
decl
inc
mov
sub
sbb
es
or
call
fldenv
push
pop
cmpsb
xchg
push
test
gs
push
mov
fistpll
lahf
push
inc
dec
cmovns
mov
pop
and
out
repnz
jae
push
jle
aaa
sbb
push
bound
mov
out
mov
adc
push
aaa
sbb
mov
mov
out
out
inc
or
aaa
jb
sti
mov
mov
bndstx
sarb
outsl
getsec
sbb
ljmp
lock
out
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
jmp
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
fstpl
cmp
inc
or
xor
je
sbb
xchg
cs
cs
adc
or
sub
jb
sbb
sub
xchg
lret
mov
and
ss
adc
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
add
push
or
xchg
xor
push
mov
sbb
dec
cmp
aaa
das
and
fimull
cmp
xchg
scas
push
xchg
fdivs
pop
inc
cmpsb
insl
xchg
and
inc
nop
jbe
pop
daa
push
pop
xor
scas
outsb
jns
js
imul
insb
or
arpl
adc
das
es
or
pop
ss
and
cmp
das
inc
mov
cmpsb
outsl
pop
add
cwtl
sub
or
cmp
add
add
add
add
incl
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
sbb
sbb
sub
or
add
add
add
addl
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
inc
ret
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
rcll
cld
cmc
div
clc
stc
cli
fs
test
sbb
roll
adc
pop
jle
aas
arpl
adc
pop
popa
jno
and
adc
xchg
mov
pusha
lock
lret
lock
loope
icebp
push
pop
inc
nop
imul
adc
push
pop
push
adc
scas
pop
sub
inc
inc
cmp
inc
pop
addr16
jmp
cs
push
cmpsb
imul
cmpsb
imul
lods
imul
ror
fsub
shrl
cmpsb
lock
or
adc
jns
xor
sub
inc
push
xor
xor
je
pop
jbe
dec
pop
xorb
xor
pop
movsb
xor
lcall
dec
shll
add
adc
xor
push
sub
in
mov
mov
call
xor
mull
xorl
sub
push
out
imul
test
pusha
js
mov
pop
and
outsl
jnp
insb
outsb
and
pop
xor
dec
mov
adc
cs
dec
inc
shlb
or
pop
inc
rclb
dec
cmpsl
ds
int3
cltd
dec
lods
idiv
dec
fs
je
mov
arpl
jbe
or
mov
push
push
mov
sarl
cld
les
mov
lock
sub
push
int3
and
jb
or
dec
add
sahf
rcrb
inc
push
mov
or
cltd
xchg
js
push
sub
add
push
lret
sbb
sbb
pop
stos
xchg
push
ss
jbe
push
sbb
aam
adc
and
adc
pop
subb
xchg
push
push
fs
push
in
mov
aaa
xchg
lcall
es
xchg
pusha
push
pop
fdivrs
out
loopne
out
cli
pop
lods
shlb
pop
push
add
in
cmpsb
imul
fs
iret
lods
mov
xor
or
mov
xchg
push
mov
dec
test
or
or
cltd
in
xor
fidivrs
xchg
add
cld
adc
lods
xchg
or
jbe
cmp
pop
cmp
add
dec
cmpsb
jno
sub
cmp
int3
es
mov
lods
xor
pushw
mov
movsb
ss
insl
dec
and
push
inc
sahf
pop
sub
in
cmpsb
out
dec
nop
push
xor
push
pop
cmp
inc
inc
add
sub
mov
test
pop
push
into
mov
push
aas
test
sub
outsb
cmpsb
cs
enter
mov
jg
cmp
js
inc
fwait
pop
mov
push
dec
clc
xor
shll
std
das
cmp
push
mov
inc
orb
mov
cmove
add
cmpb
add
mov
inc
sub
push
push
cmp
push
cwtl
push
pop
sbb
or
int
les
push
mov
call
xor
adc
sbb
loopne
add
mov
mov
mov
xchg
pusha
callw
jb
test
mov
ss
repz
and
lahf
sub
pop
sub
pop
fcomps
jb
mov
mov
xor
push
push
cmpsb
mov
push
mov
pop
imul
mov
loopne
push
imul
ds
xchg
pop
mov
pop
xchg
dec
dec
je
and
fldl
jle
ds
dec
cmp
mov
subb
lock
push
fs
add
jle
xchg
jle
cmpsl
push
cmp
adc
sbb
pop
sub
add
cmp
dec
jle
test
pushw
push
aam
cmpsb
clc
xchg
jbe
int
or
push
mov
mov
insl
sahf
xor
pop
movsb
dec
test
or
pop
ss
pushw
sub
mov
pop
rcrl
or
fcompl
int
jle
mov
les
outsb
xor
repnz
mov
jb
fs
sahf
mov
push
mov
pop
and
mov
jb
push
popa
and
pop
pop
xchg
pop
or
push
ss
je
xchg
inc
out
clc
ds
adc
push
inc
lods
adcl
push
cwtl
mov
push
lods
mov
sahf
mov
bound
out
pop
cltd
imul
out
and
dec
cwtl
setl
in
lods
imul
jb
dec
mov
cmp
push
enter
pop
imul
inc
scas
hlt
inc
fdivl
inc
adc
add
add
mov
loopne
add
and
fwait
adc
repz
adc
nop
adc
test
inc
add
sub
out
pop
add
push
dec
pop
sbb
xchg
das
push
add
pop
fisubl
lods
mov
sbb
inc
and
dec
pop
push
jns
insb
and
pop
dec
aaa
push
pop
dec
add
ja
lahf
lcall
dec
xchg
push
loop
push
inc
mov
mov
push
mov
push
xchg
dec
xor
enter
or
inc
push
pop
push
cs
and
inc
imul
fiaddl
cs
and
xor
mov
imul
inc
dec
testb
and
xor
add
adc
push
mov
bound
inc
dec
imul
cmp
sbb
mov
add
add
repnz
add
sarl
enter
pop
rolb
sbb
sbb
add
jb
and
cmp
and
add
incb
cld
jg
clc
and
and
jmp
rcrb
int
cld
add
pop
or
push
aas
sbb
fisttpl
jg
push
sub
jo
mov
or
pop
jo
cmpsb
int3
add
rorl
mov
psubb
stc
mov
out
ficompl
neg
out
cmp
mov
pop
loopne
lock
sbb
out
outsb
leave
negl
pop
aas
push
cs
pop
xchg
addr16
popa
fisubrl
xor
pop
pop
push
nop
std
cmp
add
push
inc
add
ret
imul
cmpsl
sub
inc
add
jo
iret
inc
dec
into
push
rolb
incb
lock
sbb
xor
push
cwtl
dec
pop
ror
pop
nopl
es
shll
nopl
notb
fmul
push
add
add
lcall
loopne
ds
out
cs
lods
cmp
xorps
dec
pop
add
out
outsb
es
pop
cs
dec
xor
clc
lock
aas
rcrb
aam
dec
clc
dec
add
cs
mov
outsb
es
lods
adc
aad
popa
addr16
mov
pop
sbb
repnz
test
inc
push
push
sbb
fdivrs
pop
jle
jns
shrl
pop
in
loopne
les
test
cmpb
push
and
ds
and
push
ss
cld
pop
lods
es
add
fsubrl
cmp
add
mov
adc
imul
call
sbb
push
stc
ss
sub
inc
add
inc
addl
xchg
scas
popa
push
pusha
xor
sbb
push
push
sbb
or
jbe
cmc
in
mov
ja
lock
mov
clc
dec
sbb
cmp
sbb
out
jb
pop
or
test
pop
cmp
xor
jge
imul
inc
imul
or
push
movsb
popf
orb
adc
add
jbe
push
and
add
incl
and
imul
mov
jbe
out
dec
cmp
subl
mov
daa
mov
das
cmp
xor
daa
and
cs
xor
mov
orl
push
adc
cmp
clc
fldt
dec
push
movb
data16
push
daa
cmp
in
xchg
movsl
insl
ja
push
sbb
dec
daa
dec
addl
daa
mov
pop
xchg
mov
es
push
hlt
sbb
cs
jbe
mov
sbb
push
cmpsl
lahf
adc
inc
enter
inc
cmp
and
cmp
cmp
mov
and
inc
pop
daa
inc
divl
daa
dec
sub
nop
mov
xor
mov
out
push
cmp
push
js
clc
xor
jbe
in
fstps
push
lds
xchg
push
and
and
cmp
movaps
mov
rcll
pop
push
cmp
insl
jbe
ss
xlat
push
lret
ret
out
test
push
and
push
mov
mov
vrangess
insl
pop
daa
push
daa
cltd
in
fcoml
clc
repz
andl
mov
lahf
add
addb
ja
testl
mov
mov
hlt
or
inc
mov
pop
daa
xor
outsb
daa
pop
popf
loopne
inc
aad
mov
dec
dec
fsts
mov
out
in
pop
or
xchg
fwait
jl
inc
inc
add
clc
add
mov
add
ss
popa
pop
mov
daa
or
inc
push
fisttpll
or
fisttps
ss
arpl
daa
ds
rcll
xor
es
sbb
insl
mov
lahf
xor
mov
cmp
lahf
mov
ret
sbb
fs
out
mov
popf
lcall
mov
mov
fstl
aas
dec
inc
inc
es
rcrl
arpl
jle
xor
in
repz
cmp
mov
out
jecxz
test
adc
dec
push
xor
xor
in
inc
xchg
sbb
lcall
movsb
out
sub
dec
repz
or
xor
mov
xor
cmpsb
arpl
cs
bound
jg
fdivrl
in
push
inc
sub
jl
out
ret
push
push
xor
push
cmp
and
fs
xchg
or
inc
push
shll
jns
in
jne
push
inc
mov
fbld
pop
aad
call
mov
fsubrs
push
mov
fcomi
sub
in
fldenv
movsb
pop
xor
adc
mov
dec
xchg
pop
mov
in
stos
xor
mov
push
insb
ja
jmp
xchg
jne
lea
lret
adc
ja
sub
and
push
cmp
sbb
xchg
xchg
sbb
jecxz
lcall
adc
es
xor
and
clc
or
mov
xchg
xchg
daa
fcoms
daa
jbe
lret
fimull
dec
xor
dec
daa
mov
test
dec
daa
dec
daa
clc
dec
push
dec
sarb
dec
lret
or
push
dec
rorb
mov
sbb
xchg
or
aaa
mov
fs
sarb
cltd
cltd
push
mov
mov
ret
sbb
jg
push
sub
mull
adc
mov
repz
xchg
inc
cmp
mov
and
cmp
jae
sahf
cmpsb
sbb
mov
cmp
sbb
dec
push
daa
shlb
pusha
sbb
pop
cmp
lahf
adc
pop
pushl
inc
sub
inc
cmp
into
es
mov
scas
orl
jno
stos
imul
repnz
cmp
aas
daa
ss
ret
xchg
jl
es
adc
lcall
imul
jbe
stos
sub
aaa
fs
insb
push
ja
leave
sbb
jbe
les
sub
daa
sbb
fnstenv
fdivl
sbb
lods
adc
daa
and
mov
xchg
add
mov
and
inc
scas
jp
aas
subl
mov
and
lahf
add
inc
pop
pop
lahf
mov
mov
cwtl
xor
out
aaa
mov
push
lock
add
pop
mov
lock
xor
or
out
xchg
fnsave
popf
add
in
cs
mov
sub
in
or
sub
inc
add
push
add
dec
jo
sbb
push
push
out
shll
jae
jl
call
xchg
inc
add
sbbl
fldl
inc
dec
es
mov
pop
jg
insl
adc
pop
mov
outsl
sub
imul
mov
je
fiaddl
sub
lahf
outsb
insl
cmpsb
int
adc
dec
pop
jb
jne
rcrl
addr16
inc
jb
arpl
fnstenv
mov
daa
lods
fnsave
scas
sbb
imul
lret
push
outsb
ss
pop
jae
jp
push
push
inc
ret
push
repnz
addr16
push
push
sub
jnp
lock
repnz
inc
add
add
in
movsl
loopne
rdpmc
push
fcmovu
or
popaw
push
mov
mov
dec
add
inc
scas
insl
and
sub
nop
or
mov
fimuls
addr16
and
add
mov
inc
mov
test
scas
push
pop
repz
jae
jne
divl
mov
pop
push
fs
and
in
popa
add
pop
ret
inc
fcomi
push
cmp
jns
or
ss
popa
rcr
fisubrl
addr16
outsb
jno
xchg
sysexit
pop
mov
gs
cwtl
mov
repz
inc
mov
rorl
bound
xor
insb
xchg
mul
push
pusha
lds
pop
aas
dec
outsl
inc
outsl
loope
mov
outsb
andb
into
out
and
loopne
xor
ljmp
out
sbb
sub
push
iret
daa
gs
dec
rcll
sbb
shlb
sub
push
pop
lcall
lods
or
sbb
imul
outsl
arpl
jae
adc
mov
xchg
iret
sbb
stos
mov
jbe
xchg
addb
fsubp
mov
and
add
jns
adc
or
sub
pshufw
notb
mov
nop
sub
and
push
push
insb
lret
push
jae
je
jb
jae
insl
nopl
push
dec
hlt
imul
push
add
inc
arpl
pmaxsw
or
popa
fstpt
outsb
cmp
inc
push
xor
push
xorl
jne
add
adc
fwait
cmp
dec
das
jb
daa
loop
jbe
add
mov
mov
loop
pop
cmp
pusha
and
sub
push
jecxz
mov
jnp
mov
clts
sub
and
add
mov
inc
and
popa
adc
jecxz
jbe
mov
ja
lea
jns
mulb
and
shll
pop
rcll
pop
leave
pop
pop
pop
inc
dec
push
jae
adc
adc
inc
and
arpl
insb
pop
sti
stos
push
sbb
push
push
mov
dec
cli
inc
fcoml
cli
pop
sub
test
xorb
inc
push
xor
mov
push
outsl
sahf
push
or
jb
fistpl
icebp
pop
mov
and
dec
incl
pop
sbb
scas
and
push
loope
dec
ret
cmpsb
daa
push
lret
jo
sahf
jae
mov
jecxz
notl
loop
push
sbbl
js,pt
add
fimull
arpl
xor
cmp
les
cmpsb
pop
repnz
sbb
es
mov
mov
ds
mov
xchg
cwtl
pop
sub
fmuls
jg
leave
add
inc
adc
mov
sbb
inc
or
outsb
or
push
ret
jg
add
push
cmp
xorb
push
sub
daa
sbb
arpl
cmp
add
sbb
push
popa
jecxz
sbb
add
pop
adc
jbe
jbe
lds
push
xor
or
xor
test
mov
insl
xchg
adc
fstpl
or
push
aad
pop
repnz
adc
and
sub
or
sbb
fcomps
dec
jl
push
mov
push
cmpsl
jbe
or
ss
or
sbb
and
add
xor
or
cwtl
jecxz
das
jo
imul
jecxz
sti
cwtl
cmp
stos
or
daa
stos
sbb
or
add
sbb
cs
out
das
loop
clc
sbb
push
bound
xchg
xchg
adc
outsb
mov
dec
pop
jo
out
mov
push
imul
adc
xor
mov
or
push
imul
mov
ret
adc
ds
dec
je
mov
data16
pop
or
sub
mov
mov
ja
lcall
and
inc
push
stos
cs
jmp
mov
cmpsl
aad
adc
push
xchg
stos
arpl
mov
pop
ja
push
sub
daa
push
xlat
stos
rcrb
mov
adc
xchg
and
dec
push
imul
mov
jg
inc
push
mov
aaa
cmp
or
or
push
xor
stos
lret
or
mov
xchg
and
push
sbb
pcmpgtd
in
push
aas
xchg
aas
push
insl
sub
adc
rcr
mov
imul
loop
add
sbb
stos
mov
add
mov
push
dec
add
push
aam
movsb
ljmp
xchg
pop
lods
sub
data16
addr16
xor
adc
ds
je
dec
repz
xor
mov
or
movsl
pop
fisubl
lahf
imul
push
icebp
addl
inc
popa
xor
ret
test
inc
outsl
insb
xchg
push
ljmp
dec
xor
outsl
or
in
inc
pop
add
dec
rorb
fsts
aaa
adc
fs
lea
cmpsl
cmp
push
sub
xor
inc
xlat
sub
sbb
scas
xor
and
pop
mov
es
dec
push
and
lods
aas
dec
inc
xchg
push
adc
xor
pop
add
mov
or
push
lods
lods
loop
scas
fwait
jae
push
ret
pop
jo
inc
lods
frstor
ja
sbb
add
mov
add
xor
add
mov
xor
push
out
test
add
arpl
mov
popl
test
int3
pop
ficoms
add
add
fisubrs
dec
inc
roll
xor
aad
dec
inc
mov
xchg
and
data16
push
jge
lret
add
data16
mov
push
xchg
mov
inc
outsb
sub
repnz
or
pusha
mov
repnz
cmpsb
lods
jmp
dec
pop
pushf
push
mov
adc
test
arpl
and
xchg
mov
rclb
fldt
cs
ret
test
xor
lcall
push
arpl
xor
push
testl
mov
repz
pop
insl
cmp
push
push
inc
cmpsl
rorb
push
jmp
pop
sbb
mov
mov
and
mov
xchg
es
sub
xor
sub
mov
push
fiaddl
dec
outsb
xorb
and
push
aam
cmp
ret
jle
inc
lods
mov
roll
jnp
add
add
xchg
push
inc
cli
divb
mov
adc
push
fisubl
add
mov
insl
cs
push
adc
and
jbe
outsb
daa
sub
ja
mov
sub
push
sub
mov
and
add
xlat
adc
mov
xchg
ja
imul
scas
xchg
jnp
aam
adc
pop
sub
insl
xchg
jecxz
fs
dec
jbe
push
or
int
xor
jo
or
push
jae
pop
ret
mov
outsb
testb
dec
out
and
stos
and
jmp
or
xchg
mov
inc
dec
js
push
xor
pop
adc
cmpsb
inc
data16
je
mov
iret
fcmovbe
scas
push
inc
sti
sub
rcrl
lret
cmp
addb
cli
cmp
pusha
push
mov
or
pop
pop
jo
ret
push
lea
mov
frstor
ja
pushf
sbb
bound
inc
addr16
daa
xlat
sub
mov
mov
cmp
outsl
and
jmp
xor
dec
and
loopne
cwtl
icebp
sub
and
xlat
popf
jbe
push
xor
je
adc
fcmovnbe
daa
iret
sbb
addr16
pop
mov
xchg
sub
das
jmp
push
sub
pusha
adc
bound
outsb
js
push
imul
xchg
out
es
or
inc
and
rorl
sub
repz
cwtl
mov
cmp
adc
mov
push
dec
cmpsb
sbb
pop
add
sbb
or
mov
jb
add
or
add
sbb
movsb
cmpb
ja
adc
push
mov
adc
aad
and
pop
pop
inc
jp
sub
jg
mov
lret
popa
jnp
arpl
sbb
xor
add
sti
stos
inc
pop
mov
mov
pop
adcl
sub
mov
inc
in
test
mov
sbb
mov
jne
aas
inc
rclb
bound
jae
or
ja
mov
sub
mov
sahf
push
pop
cmpsb
jo
fistps
je
mov
sbb
pop
adc
test
pop
cmp
adc
add
mov
push
add
je
or
or
push
mov
lods
mov
pop
or
add
adc
jb
mov
mov
xlat
inc
xchg
push
or
dec
rclb
push
or
inc
shlb
mov
pusha
pop
andl
mov
mov
in
mov
xchg
mov
out
sbb
cs
sbb
and
or
xlat
subl
fcompl
cwtl
jno
das
sbb
push
mov
add
stos
in
and
sub
mov
in
daa
cmp
ljmp
sbb
rcll
cmp
outsb
push
movsl
and
jle
arpl
lcall
xchg
stos
add
jg
scas
mov
dec
pusha
or
cmpsb
push
bound
out
mov
shl
jmp
cmp
mov
je
ss
mov
mov
push
mov
lcall
loopne
mov
xor
and
shrw
orb
movmskps
adc
insb
inc
push
sub
xor
inc
jecxz
xorb
and
or
inc
sbb
inc
test
addr16
mov
inc
imul
daa
push
cmpsl
nop
stos
scas
ss
neg
stos
jge
xchg
mov
push
cmp
gs
repz
xlat
pop
cmp
xchg
add
fsubrl
dec
add
push
xchg
mov
push
gs
push
imul
push
pop
outsb
mov
imul
fcmovnb
jp
fnstenv
insb
fadds
xchg
or
scas
daa
or
sbb
ret
aas
iret
inc
and
cmp
inc
adcl
loope
pop
stos
sbb
mov
pusha
pop
mov
pop
jp
movsl
ljmp
imul
jmp
push
sbbb
lcall
rcrl
bound
adc
jbe
pop
fiadds
andb
cwtl
pop
and
or
imul
mov
or
outsl
pop
out
das
add
scas
inc
or
cmpl
push
sub
cs
mov
sbb
and
cmp
adc
aaa
pop
jno
or
pop
sbb
push
pop
sub
inc
test
mov
or
aas
push
mov
push
pop
xchg
loope
and
mov
inc
jnp
gs
adc
sbb
push
sub
mov
jp
xchg
in
inc
cmp
jecxz
cmp
push
mov
push
adc
stos
testl
roll
adc
out
add
fiaddl
pinsrw
push
out
add
bound
xor
sub
popa
test
mov
test
sub
push
lods
adcb
mov
sub
cs
mov
adcb
scas
lahf
bound
or
test
jg
add
ret
xor
mov
or
mov
mov
ret
add
jmp
cmp
mov
cmp
mov
push
mov
loop
fdiv
adc
aam
or
pop
adc
inc
dec
inc
jno
xlat
pop
dec
dec
pop
inc
xlat
sbb
insl
or
or
pusha
sbb
or
cmp
lcall
daa
dec
jnp
jno
mov
shlb
pop
pop
orl
or
push
pusha
stos
inc
in
sbb
arpl
and
ror
jnp
and
mov
xlat
arpl
sbb
or
inc
xor
add
ret
push
scas
xchg
ficoml
and
sub
dec
ja
push
lret
xchg
or
sbb
fs
popa
cmp
outsb
mov
jg
xorl
movsb
or
rorb
fistpl
sub
test
outsb
xor
in
and
mov
movl
and
or
mov
add
jmp
adc
bound
jb
inc
push
or
xchg
xor
mov
pop
ja
push
or
adc
jg
lods
test
sbb
mov
cmpsl
lods
add
adc
scas
movsl
push
mov
pop
mov
shlb
pop
pop
adc
mov
mov
arpl
adc
inc
jae
sarl
sbb
add
or
mov
ja
imul
push
dec
and
xchg
sub
push
adc
stos
inc
add
push
ljmp
cmp
or
iret
jmp
jg
push
add
cmp
aaa
mov
pop
push
add
subl
cltd
mov
xor
mov
push
mov
pop
add
adc
and
push
dec
xchg
adcl
cld
test
js
gs
dec
lds
subb
pushf
push
push
movsb
gs
and
or
icebp
push
push
or
dec
lret
cs
insb
cmp
mov
call
mov
push
push
dec
inc
adc
imul
xchg
pop
adc
insb
push
faddp
adc
test
adc
mov
xchg
add
mov
lahf
adc
mov
mov
movsl
or
pop
xchg
pop
or
push
xchg
inc
push
dec
push
es
dec
sbb
mov
outsb
adc
jbe
fbstp
inc
ret
add
adc
jnp
ret
lcall
sbb
sbb
or
fwait
mov
fisttps
sbb
inc
insb
mov
insl
add
rclb
lea
cltd
pusha
adc
cmp
aas
pcmpgtw
int3
lret
or
xorl
adc
sbb
cmpl
sub
xchg
push
adc
pop
cmpb
add
shlb
push
push
sub
lds
shll
sbb
xchg
loopne
or
insl
and
pop
push
test
in
fstl
xchg
popa
and
aaa
repz
popa
data16
adc
xchg
push
cmp
and
push
inc
adc
cld
push
push
dec
inc
jns
ret
jo
inc
dec
test
jno
or
sub
outsl
adc
repz
adc
adc
sarl
in
loope
sub
dec
dec
test
fsts
add
ss
push
imul
adc
call
pop
push
loop
push
cmp
call
dec
lods
adc
mov
inc
adc
inc
push
pushf
jo
xchg
xchg
pop
insl
inc
aam
sti
gs
inc
jne
cmp
mov
fs
inc
push
imul
mov
mov
hlt
outsb
jp
pop
and
xchg
popa
loop
dec
test
push
xchg
adc
jl
enter
sub
dec
adc
loopne
and
add
push
push
inc
push
and
in
xchg
add
movsb
adcl
mov
out
pop
lret
push
dec
adc
inc
mov
pop
mov
xor
push
add
xor
test
jae
xchg
adc
dec
mov
xchg
aad
fdivs
mov
sub
shlb
ret
mov
mov
test
mov
add
jp
and
test
out
push
dec
ss
addr16
push
or
gs
inc
shrl
dec
and
inc
xchg
andb
xor
adc
fdivrs
xlat
adc
pop
or
xor
cmpsl
andl
movsb
jae
shrb
add
xor
loopne
lods
iret
mov
adc
xlat
cmpsb
in
movsb
inc
cwtl
adc
roll
cmpb
cmpsl
popa
jp
insl
call
daa
xchg
popa
cmp
inc
adcl
fisubl
hlt
and
sbb
push
cmpl
xchg
jge
jmp
fisubrs
ldmxcsr
lea
fldt
pop
mov
mov
ds
xor
clc
popa
push
lea
push
loopne
repnz
jae
sbb
push
aas
mov
xor
popa
pop
push
dec
inc
add
cs
cs
ror
inc
icebp
shll
js
shlb
outsl
push
mov
insb
add
repnz
jg
ret
test
jg
inc
insb
or
pop
cmpsl
cmc
loopne
lods
stos
add
mov
pushf
cmpsb
jnp
insb
cmpsb
and
rorl
or
movsl
arpl
fisubs
dec
dec
pop
psubusw
push
insl
or
addr16
int
movsb
nop
sbb
or
inc
or
int
push
mov
jg
or
or
loope
dec
imul
pop
xchg
sub
cmp
or
loope
inc
or
ret
push
in
inc
add
imul
or
pop
leave
rcrb
add
xor
roll
or
or
sbb
cwtl
mov
pop
xchg
add
adc
jo
pop
inc
and
je
jnp
ret
gs
cwtl
fnstenv
inc
or
lcall
pusha
mov
lret
adc
push
xor
dec
or
add
movsb
mov
int
add
mov
andl
or
fstl
daa
and
lock
add
out
or
mov
pop
andl
mov
pop
aad
xchg
sub
sbb
cmpsb
nop
xchg
or
add
mov
lea
pop
dec
shll
xchg
arpl
fimull
mov
mov
enter
jae
add
mov
push
dec
adc
inc
sub
add
inc
sub
mov
mov
dec
clc
movb
inc
and
daa
add
add
sbb
add
push
mov
pop
jmp
adc
cmpsl
or
add
gs
and
gs
mov
lock
fdivrl
adc
push
xor
lret
and
push
mov
or
imul
inc
sbb
mov
stos
add
outsl
add
lea
adc
ret
ret
push
push
xchg
jo
adc
mov
outsb
fs
sbb
add
sub
sub
sahf
loop
sub
bound
sub
cmpsb
sub
paddusb
in
sbb
dec
imul
sbb
jb
push
addl
nop
pop
lcall
add
rcr
sbb
pop
shrl
insl
popa
sub
sub
movsl
adc
movsl
xor
xor
pop
test
cmp
bound
ret
roll
pop
sbb
roll
outsb
sbb
push
fwait
sti
test
dec
inc
daa
push
mov
mov
imul
gs
jo
cltd
mov
nop
or
cwtl
sbb
or
pop
mov
cwtl
arpl
pop
or
sbb
inc
inc
and
es
enter
pushf
dec
jp
sti
pusha
test
sub
xchg
sub
mov
inc
xchg
inc
or
add
and
test
pop
fidivs
dec
fs
movsb
test
daa
scas
imul
mov
dec
mov
std
rcr
dec
ret
inc
push
cmp
psrld
add
pop
pop
inc
jl
fcmove
xor
pusha
and
sbb
dec
movsb
adc
sbb
pop
mov
loope
sub
dec
sub
cmp
pop
sbb
inc
pop
sub
stos
inc
shlb
xchg
xor
fimull
ret
mov
sub
inc
sbb
push
fisubrl
adc
lock
sbb
add
jp
cmp
push
cmp
nop
fs
jl
inc
mov
mov
mov
or
imul
out
adc
or
and
add
shrl
sahf
jne
xchg
pop
data16
push
xchg
sub
or
inc
sub
add
push
sub
outsb
insl
aaa
push
cmp
push
or
xor
inc
xchg
push
cmp
inc
mov
je
inc
jno
nop
loopne
lods
mov
popf
xchg
inc
lds
adc
dec
push
pusha
pop
and
jne
bound
ja
xchg
push
adc
sbb
roll
dec
jge
adc
cs
push
je
ja
adc
adcb
jae
sbb
popa
enter
gs
push
or
mov
adc
mov
cwtl
sbb
pop
jae
push
sbb
mov
flds
xchg
mov
mov
aas
and
sub
push
or
add
shrl
test
inc
mov
in
pop
or
loop
sub
or
and
or
outsl
push
lret
jbe
dec
sub
adc
jbe
dec
outsl
or
and
sbb
outsl
aam
test
dec
sub
pop
scas
dec
sub
mov
inc
and
mov
push
xor
loope
jg
shl
pusha
sub
inc
imul
push
imul
cmpsb
shrl
les
cmc
mov
and
mov
adc
adcb
sbb
inc
dec
mov
andl
test
dec
jb
pop
push
lcall
leave
cmpsb
int3
daa
rcrb
mov
or
sbb
adc
adc
addr16
inc
fs
in
push
movsl
dec
adc
jbe
jnp
jmp
and
xchg
mov
dec
shll
shlb
fistpl
push
inc
inc
sbb
adc
inc
popa
inc
adc
mov
mov
mov
jns
and
clc
xchg
loope
jns
push
outsl
ss
and
mov
inc
push
mov
ret
cltd
push
fsubp
inc
inc
sub
xchg
es
add
sbb
or
push
push
testl
lds
adc
dec
mov
pop
push
cmp
mov
repz
pop
pop
or
int3
lahf
in
popa
xchg
sub
dec
sbb
dec
xor
and
adc
faddl
loop
outsl
push
lret
jno
sbb
add
imul
xchg
arpl
ja
loop
cmp
sbb
or
jmp
xchg
sbb
push
insl
xchg
add
das
mov
ret
sbb
mov
push
mov
xor
sbb
daa
dec
lcall
inc
bound
daa
jnp
mov
inc
or
push
shrl
adc
pop
cmp
aaa
inc
imul
bound
test
cmpsb
add
shlb
mov
mov
mov
push
test
cmp
imul
xor
adc
jnp
call
inc
xchg
dec
push
sub
and
pop
sub
and
movsl
add
imul
dec
lahf
or
jp
cmpsl
mov
out
fcoml
sbb
dec
sbb
fcoms
add
mov
rorl
cmpb
mov
xorl
push
inc
inc
test
mov
and
or
test
mov
lds
add
sbb
push
mov
leave
and
and
jg
call
cmp
fs
mov
insb
push
negl
cmp
sbb
ret
mov
inc
or
fisubs
lret
dec
adcl
dec
adc
push
and
in
jno
jo
dec
inc
daa
and
sbb
out
insl
cmpsl
inc
and
sbb
and
insb
cmp
outsl
outsl
push
cmpsb
test
insb
dec
adc
push
imul
scas
and
pop
insb
sub
cmp
pop
or
fimuls
pop
gs
or
and
fldt
jae
adc
pusha
and
inc
and
mov
adc
ret
fiaddl
daa
test
imul
pop
dec
pop
push
push
pop
xchg
loopne
mov
sub
test
aam
insb
pop
arpl
daa
cwtl
pop
fisttpl
out
xchg
outsl
jecxz
jo
xor
or
sbbb
sbb
xchg
test
ljmp
add
adc
adc
sub
xchg
sub
insl
roll
mov
dec
xchg
xor
shrl
rclb
add
push
ss
jle
push
outsl
out
inc
gs
adc
jns
stc
adc
sub
and
aam
sub
and
repz
mov
xor
mov
push
je
xchg
jge
xor
pop
pusha
mov
jne
and
sub
gs
sub
aad
data16
dec
test
adc
popa
les
or
lret
icebp
iret
and
sbb
mov
or
test
movsl
sbb
xor
inc
sub
cltd
adc
adc
ret
sbb
xor
push
icebp
mov
adc
sub
or
popf
ret
adc
adc
sbb
sbb
loopne
arpl
pop
cmp
mov
fnstenv
loop
or
cmpsb
jb
insb
mov
mov
jae
inc
and
xor
jecxz
mov
imul
stos
cmp
pop
jne
mov
sub
pushf
dec
or
push
mov
pop
arpl
mov
push
dec
dec
adc
sub
and
sbb
jmp
sbb
or
mov
xchg
jmp
pop
inc
xor
gs
mov
add
xchg
pop
xchg
mov
lret
and
les
inc
sbb
push
and
inc
imul
push
fsubs
xor
inc
pop
mov
mov
insl
cli
inc
sbb
stos
jge
or
ss
inc
adc
fildl
aaa
xchg
outsw
cltd
inc
xchg
dec
add
lds
scas
je
mov
int3
outsl
mov
push
xor
add
mov
mov
push
fstp
stos
cmp
push
bound
adc
inc
jae
or
and
insl
xor
cmp
sub
sbb
or
jno
push
outsl
sbb
mov
or
sti
lret
and
and
mov
jne
push
sub
pop
fisubl
sbb
sub
nop
lods
mov
data16
pop
lods
test
fcoms
and
fcmovnbe
movsl
and
jmp
or
jmp
rorb
imul
adc
dec
jb
cmp
inc
mov
xchg
mov
xor
inc
adc
mov
or
pusha
pop
aaa
push
jo
adc
js
dec
push
inc
fs
or
xlat
icebp
mov
adc
xor
and
mov
popa
sbb
push
scas
inc
add
psubsb
aad
cmp
loope
imul
push
data16
xor
lds
in
mov
sti
sbb
movsb
dec
aad
sbb
mov
pusha
mov
inc
cmpsl
sbb
lock
imul
cmp
mov
insb
sbb
inc
mov
xor
in
add
pop
inc
sub
lods
popf
cld
jmp
add
sbb
dec
or
add
pusha
ret
or
push
add
mov
or
nop/reserved
or
lods
xchg
es
pop
push
adc
ljmp
nop
or
add
scas
nop
mov
or
sbb
xor
jl
test
push
dec
add
adc
push
adc
idiv
fadds
inc
pop
rolb
pop
sbb
jl
add
mov
popa
lahf
ljmp
inc
nop
popa
shl
ja
loopne
cmpsb
dec
repz
push
jb
dec
lock
push
gs
seto
fstl
jae
push
bound
push
daa
cmp
dec
ret
inc
cmp
or
add
and
add
add
add
add
add
add
add
mov
ss
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
mov
add
pusha
dec
