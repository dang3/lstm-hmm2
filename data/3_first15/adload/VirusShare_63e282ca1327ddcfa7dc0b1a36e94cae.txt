pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fcomip
mov
add
dec
outsb
je
addr16
and
iret
scas
xchg
ffreep
pop
cs
jns
insb
daa
push
outsl
jb
aas
int
fs
orb
popa
imul
add
push
add
mov
add
outsb
mov
push
je
jge
int3
push
or
push
imul
fdivl
lods
je
in
push
shr
mov
or
and
imul
pop
pushf
cmp
fwait
cmpsb
mov
in
or
inc
imul
pop
push
dec
bound
arpl
pop
sbb
fcoml
jae
insl
jo
dec
mov
fidivrs
pusha
jb
popa
arpl
add
pop
inc
lcall
and
adc
pop
or
imul
fwait
add
mov
sbb
add
add
int3
lahf
fs
addl
jmp
adc
sbb
pop
imul
imul
cs
mov
dec
or
adc
dec
and
mov
clc
adc
mov
cmp
dec
pop
adc
ret
adc
fs
jg
and
nop
inc
push
jns
sbb
inc
push
sbb
add
jb
nop
add
loope
hlt
enter
pop
lock
in
popa
orl
call
fs
loopne
fcom
sbb
ror
enter
push
sarb
sub
mov
inc
cmp
in
ret
loope
and
pop
sbb
cmp
enter
cwtl
xchg
sbb
nop
mov
push
add
mov
inc
add
nop
idiv
jg
add
mov
and
mov
aaa
inc
pop
ret
data16
sbb
insb
orb
js
sbb
jo
push
push
mov
add
push
mov
adc
enter
add
mov
mov
mov
inc
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
sti
std
std
push
inc
add
scas
mov
mov
xchg
push
test
xchg
mov
mov
fdivrp
sti
push
or
mov
mov
adc
add
out
ss
mov
push
or
or
sar
ret
push
push
push
mov
mov
mov
mov
add
rcrb
mov
or
push
or
ret
ret
outsl
stc
fcmovu
mov
push
or
inc
add
adc
sbb
mov
aaa
sub
fistpll
jmp
loope
mov
cmp
lock
lods
test
pop
pop
pop
push
fdivrp
fisttpl
push
mov
jne
sti
mov
xchg
cmp
jb
mov
add
loopne
sti
imul
imul
ja
and
mov
aaa
cmp
rcl
or
mov
dec
ret
jmp
pop
std
sbb
add
iret
pop
repz
ljmp
ja
pop
pop
sub
mov
cmp
mov
aam
or
or
js
push
sbb
scas
sbb
sti
jne
sbb
nop
lock
mov
mov
cmp
mov
lock
add
xchg
add
fisttps
and
push
jg
clc
mov
test
je
mov
mov
in
mov
adc
mov
push
adc
sub
sub
add
push
mov
pushaw
outsl
mov
sub
push
lahf
push
dec
mov
pop
icebp
add
popf
nop
addb
cmp
in
mov
stos
cmp
fsubrp
mov
mov
sbb
lret
mov
loop
add
mov
adc
in
daa
out
ja
mov
ret
movb
cmp
ja
cmp
jnp
fnstenv
mov
sbb
push
add
inc
or
movl
filds
mov
ljmp
loopne
jg
sbb
push
mov
cltd
mov
sbb
pop
push
adc
xchg
dec
hlt
outsl
mov
mov
and
cld
sbb
ret
loop,pt
mov
in
cmp
inc
sub
or
lds
mov
pop
cmp
add
and
mov
cmp
bnd
jbe
or
jbe
scas
adc
sti
push
push
andb
jae
shl
ss
sub
jb
inc
jb
xor
jmp
inc
cmp
sahf
xchg
out
sub
or
notl
jae
mov
cmp
jae
in
loopne
std
add
add
mov
add
dec
aas
xor
emms
mov
mov
cld
xor
aas
or
add
repnz
shll
cmp
jg
inc
xlat
mov
pop
mov
fsubrp
je
mov
inc
fldcw
fnsave
push
pop
add
cli
and
cmp
pop
movsl
and
push
push
push
and
aam
insl
shr
mov
mov
cli
jge
fimuls
je
cmp
add
mov
sbb
xlat
sub
or
sarb
add
xor
lea
fs
sub
nop
pop
fcoms
or
or
mov
aas
lea
adc
jge
test
xchg
jmp
shl
imul
jne
nop
cmp
xlat
js
inc
cmpl
sub
or
popf
adc
sbb
xor
mov
mov
out
jmp
imul
out
cmp
jae
mov
push
pop
pushf
jge
sub
mov
and
fisttps
jno
pop
pop
test
je
imul
push
cltd
push
addr16
add
adc
fsub
orb
adc
ja
fs
or
or
add
push
sub
push
push
pushl
mov
push
ja
xor
cmp
or
lea
popf
adc
push
vpperm
cmp
imull
adc
xor
cmp
jle
repz
mov
mov
les
aas
pop
pop
pop
pop
adc
sub
sub
or
movsb
jmp
mov
ja
xchg
push
xchg
test
rolb
jle
jo
sbb
sbb
sbb
add
arpl
adc
lret
test
popa
or
add
outsb
imul
push
jo
sub
sbb
enter
dec
fistpl
or
ds
jne
add
adc
pop
js
jb
or
add
pop
test
jns
add
sar
test
jnp
hlt
jmp
sub
imul
ja
add
inc
dec
lds
dec
fld
or
jge
jb
add
or
mov
cmp
incl
xchg
add
xchg
lea
xorl
jl
movl
jb
in
lahf
sti
mov
jl
inc
or
mov
and
mov
rolb
cld
addr16
adc
das
fists
pop
jbe
or
push
or
push
xchg
fldcw
xchg
or
ret
loope
mov
jg
add
adc
je
add
cmpsl
push
mov
xor
test
negb
fdivl
testb
je
mov
or
cmp
cmp
testb
fisubrs
mov
xor
add
mov
clc
fucomip
cmc
filds
fsubs
test
jne
mov
bound
and
adcb
adc
sbb
out
testb
dec
addb
lret
mov
into
jg
or
jge
cld
jg
clc
sub
sub
cmpl
push
cmc
clc
or
adc
add
fucomp
sbb
out
push
jmp
daa
xlat
cld
lea
and
mov
in
mov
aad
lds
lret
add
adc
nop
jmp
xor
ret
or
and
mov
xchg
iret
mov
mov
mov
add
sub
jo
cmovbe
lret
aaa
adc
std
lcall
adc
mov
cmp
inc
pop
fimull
pop
add
sub
cmp
or
mov
pop
mov
scas
add
sbb
inc
cmp
insb
adc
or
loopne
cli
push
inc
sub
adc
fcoml
or
mov
pop
cmp
jno
cmpsb
lock
pop
lock
movsl
mov
cltd
pcmpeqb
sub
clc
dec
sub
or
push
push
mov
cmp
in
mov
ja
xchg
xchg
sub
add
adc
loope
add
sub
dec
cmp
sub
xorl
fs
subl
add
daa
add
mov
leave
aam
loope
or
fwait
mov
sbb
rolb
pop
popa
pop
loope
pop
inc
stos
pop
int3
lea
ret
pusha
or
mov
xor
cmp
or
adcl
mov
div
mov
add
lea
test
push
jle
filds
insl
icebp
adc
jg,pn
pop
mov
pop
je
or
jmp
sub
outsb
lahf
lods
jne
sbb
push
jl
or
cmp
movsb
sub
cmpl
icebp
add
sbb
add
dec
loope
sub
sbb
xor
pop
cmpsb
aad
lea
and
jmp
xchg
leave
jmp
repnz
jne
imul
leave
js
pop
xor
fwait
pop
xlat
test
js
push
fwait
pop
jne
pusha
or
sbb
jp
je
sti
clc
stos
jle
inc
cld
in
clc
pop
jbe
dec
xor
push
push
mov
hlt
loopne
scas
add
or
sti
mov
mov
test
jg
mov
or
es
add
pop
inc
scas
shlb
push
or
js
mov
jmp
mov
jge
lds
cmp
mov
add
lcall
mov
andl
cmp
sbb
sbb
xor
arpl
movzwl
insl
in
xor
or
xor
fdivrs
arpl
cmp
push
adc
xchg
movsl
test
pop
push
push
sbb
mov
sub
jne
out
lahf
adc
jno
xor
or
lock
test
lock
jne
test
ja
decl
iret
cld
or
call
add
or
or
loopne
push
or
test
jge
push
lcall
das
add
xchg
add
clc
cmp
or
in
andl
add
jb
dec
mov
adc
ret
sbb
or
es
cli
add
or
test
pushl
orl
jmp
mov
cmpl
clc
push
adc
or
adc
fnsave
and
cmp
pop
and
stc
and
sub
out
jle
add
out
js
sarl
jge
stos
pop
wbinvd
loope
cmp
icebp
clc
stc
mov
rcll
sbb
cmp
iret
notl
ret
adc
add
call
sub
std
fdivp
pushf
mov
cmpsb
mov
jo
mov
out
pop
outsb
test
push
pop
and
or
punpckhwd
pop
xchg
mov
sub
xorb
fstpt
and
iret
adc
rcrl
dec
xor
dec
daa
add
add
and
dec
or
mov
movsb
test
add
xor
sbb
cmp
jge
pop
mov
add
pop
mov
jmp
push
or
mov
push
xchg
mov
lock
add
test
and
fcomps
adc
adc
pop
push
or
rcrb
and
hlt
lret
cmc
adc
xchg
daa
mov
push
adc
cld
jmp
ss
sbb
adc
xchg
ret
mov
jp
std
cwtl
fstpt
lock
aaa
inc
adc
mov
mov
xchg
dec
sbb
jbe
mov
add
mov
sti
aaa
cmpsb
test
jle
call
or
mov
pop
add
mov
rorb
add
or
sbb
enter
or
repz
sbb
pop
xor
das
jne
sub
bound
shl
lock
out
mov
aas
scas
pop
push
dec
sbb
lds
push
add
movsl
jae
mov
sbb
sbb
inc
or
popf
loope
out
mov
movsb
jle
pop
insb
clc
xor
fstpt
mov
aaa
dec
sbb
push
mov
cmp
ja
mov
mov
pop
mov
aas
and
adc
mov
cmp
ret
push
push
push
xor
pop
jne
adc
push
fbstp
rclb
jmp
xor
popf
xor
js
sub
nop
lds
aas
cld
pop
or
je
jae
sbb
ret
sub
inc
cmc
jl
cmp
aam
inc
jg
add
mov
inc
repz
mov
jg
xor
jmp
mov
jmp
mov
iret
ret
push
dec
aaa
add
je
cmpsl
cmpsl
scas
push
push
flds
mov
jnp
in
neg
add
or
add
push
push
add
mov
mov
jle
push
aas
and
inc
mov
adc
lahf
popa
adc
mov
sbb
mov
adc
inc
cmp
ja
je
push
js
rep
lcall
or
ja
loope
lahf
jns
je
cld
lea
pop
jnp
jge
adc
xor
cld
inc
push
roll
mov
loopne
or
sbb
sahf
pop
jg
sbb
jnp
loope
cmp
jb
cmp
ja
sub
lahf
mov
fldcw
mov
jae
jae
fwait
pop
pop
mov
in
or
fldpi
add
add
fsts
fistps
fldcw
pop
inc
test
xor
inc
sub
cmp
sub
fwait
xor
out
sub
sarb
lea
push
sbb
adc
lahf
loop
out
add
clc
insl
jne
les
mov
xadd
fwait
and
test
dec
test
mov
or
rolb
movb
or
imull
xchg
arpl
xchg
mov
inc
add
or
jno
sbb
lods
scas
jmp
es
adc
mov
mov
test
dec
je
add
pop
movsb
cmp
add
sbb
sub
popf
mov
cs
add
and
adc
push
sarb
or
mov
xor
fwait
cmp
cmpsl
xor
mov
rsqrtps
inc
dec
test
negl
cmp
test
mov
jne
out
jnp
decl
dec
pushl
inc
nop
inc
inc
out
sub
fcmovb
jae
ja
xchg
push
aaa
ror
lods
or
mov
scas
rorl
lcall
mov
jae
cmpb
add
out
push
xchg
sub
jp
add
dec
jne
jmp
lea
lods
cmp
js,pt
imul
xlat
je
imul
sar
clc
push
cmp
hlt
jmp
cmc
movsb
outsb
out
or
je
popf
mov
pop
mov
mov
xor
adc
lea
pop
fwait
xor
mov
iret
push
or
jns
leave
mov
das
push
jl
lea
cmpsl
mov
inc
scas
and
pop
push
inc
sbb
stos
aaa
jl
jl
push
dec
pop
jb
fidivl
das
add
rorl
arpl
pusha
mov
sub
out
shl
jmp
xor
jmp
mov
notl
cmp
pop
cmp
rclb
loopne
pop
inc
cltd
insl
mov
rcrl
sbb
mov
ja
icebp
cs
aas
pop
mov
inc
adc
mov
add
rorb
pop
call
inc
cld
imul
push
push
int3
call
loopne
xor
enter
sahf
std
adc
pop
shl
jae
sbb
sbb
xlat
jmp
cmp
je
mov
push
cmp
leave
mov
test
ret
fildl
or
mov
push
gs
push
adc
ljmp
nop
negb
fldl
pop
jb
or
ja
data16
mov
mov
jns
push
sbb
ds
mov
dec
adc
sub
mov
cmp
lahf
sbbb
inc
mov
cmp
or
clc
or
and
aas
xor
sub
xor
mov
mov
inc
inc
incl
sbb
jno
ret
ljmp
pop
cmp
jne
dec
sti
jg
jmp
mov
sbb
add
add
dec
jne
jmp
adc
add
pop
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
scas
pop
gs
or
jmp
add
adc
cmp
jne
shr
shr
sbb
fisttps
adc
push
mov
shr
or
repnz
dec
pop
cmp
out
cld
xor
ret
and
mov
cmp
jne
dec
lret
rcrb
dec
and
add
mov
xor
incl
int
enter
or
add
or
stos
mov
stos
pop
es
imul
pushf
add
xor
sub
mul
mov
push
shl
adc
fdivrl
mov
sbb
scas
mov
stos
jg
mov
add
cmp
shld
push
fadds
add
lds
push
sub
inc
sbb
dec
arpl
jbe
and
adc
sub
xchg
insb
push
or
lock
sub
and
inc
xlat
cmp
inc
inc
xchg
cmp
adc
push
ja
sbb
shlb
fcom
cmpsl
jmp
cmp
cmpsb
jmp
mov
imul
xor
fldpi
and
push
pushf
insb
mov
mov
push
inc
cmp
je
mov
or
sub
je
and
je
pop
je
dec
mov
adc
dec
inc
incl
pop
clc
xlat
and
add
subb
or
cmp
jg
std
clc
ja
lea
jg
fcoms
out
int
std
inc
mov
jmp
inc
sbb
js
pop
sub
jmp
inc
jle
fistpll
ja
push
je
andl
notb
cltd
jbe
movups
or
leave
std
add
aad
repz
cltd
pop
xor
mov
mov
dec
fnstenv
cmp
fwait
inc
mov
clc
hlt
dec
jne
pop
pop
mov
cmpsb
lret
pushl
mov
mov
inc
or
inc
dec
jne
jmp
xchg
movsb
cs
jge
dec
je
fstl
add
lea
pop
mov
xchg
fldt
cmp
sub
je
aas
ret
daa
outsl
das
xchg
xor
je
and
xor
jmp
jae
jge
mov
xor
sbb
push
negb
stc
jmp
fstp
fldt
fldz
push
sub
xor
jb
pop
cltd
aas
mov
push
in
push
cli
or
or
ret
setg
in
and
adc
mov
xchg
sbb
imul
stc
add
lods
js
inc
mov
or
sub
test
jg
hlt
and
mov
adc
xor
leave
sbb
jg
cs
jbe
imul
cmp
mov
in
cld
int
bound
cmpb
xlat
fadds
das
call
xchg
aas
push
push
int3
into
sbb
add
call
dec
inc
mov
push
pop
test
enter
mov
inc
lret
jmp
hlt
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
incl
inc
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
fistps
js
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
jmp
imul
divl
jl
xor
cmp
call
mov
lcall
push
inc
mov
push
sbb
sarb
repnz
test
nop
incl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
aas
rorb
stc
repz
mov
subb
and
add
les
outsb
bound
xor
jmp
jmp
push
xor
out
and
push
add
div
or
rolb
cmc
mov
pop
lret
xor
xchg
hlt
movzwl
push
mov
imul
push
cmp
dec
dec
xor
push
push
ds
and
inc
hlt
int3
pop
hlt
push
addr16
xchg
sahf
xor
andb
movsb
sbbl
jg
jg
and
mov
pop
aas
or
pushl
mov
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
out
jmp
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
inc
orps
fninit
fwait
aad
mov
pushl
lcall
xlat
mov
xor
mov
inc
out
aad
leave
rep
push
or
pop
mov
or
dec
cld
jne
dec
mov
xor
out
jne
ret
out
add
lock
mov
ss
fadd
add
out
daa
and
div
pop
mov
pop
aaa
daa
mov
pop
add
xor
add
outsl
test
or
jle
cmp
sub
je
movups
fs
pop
ficoms
xor
ret
xor
jle
push
pop
insb
test
xor
incl
mov
stos
mov
xor
push
shr
dec
rep
pop
mov
mov
mov
sub
pop
mov
sub
in
cmp
je
pop
mov
add
jae
ss
and
mov
mov
pop
sbb
cmp
outsl
mov
lods
mov
mov
mov
jbe
aaa
pop
sub
ds
mov
lret
jmp
lock
cmp
jb
sub
roll
and
loope
cmp
roll
rorl
sahf
or
add
mov
popa
enter
push
cld
mov
pop
mov
jge
mov
push
mov
sub
add
add
ds
cmpb
push
push
mov
push
add
pop
lea
add
daa
aam
fadd
cmpsb
jecxz
xlat
dec
setne
scas
xchg
mov
hlt
xor
lods
lock
mov
sub
mov
mov
cmp
jne
jb
cmp
ffree
mov
mov
or
pop
mov
mov
lds
push
arpl
nop
mov
jl
sti
mov
rclb
rorl
mov
pop
std
leave
jne
mov
add
add
jle
ret
decl
mov
add
repnz
je
pop
in
push
icebp
jg
negb
pop
add
sub
mov
pop
cs
insb
sti
jecxz
xchg
add
sbb
pop
jmp
out
mov
fsubrl
xchg
test
xchg
xor
das
mov
add
sarb
push
mov
mov
clc
icebp
shll
or
jecxz
cmp
inc
push
stos
pop
test
pop
mov
sar
jmp
mov
sarb
std
negl
adc
mov
cmp
sbb
add
dec
jne
repnz
fistpll
push
jmp
add
sbb
jecxz
fimull
inc
add
lahf
push
pushf
enter
xor
push
sbb
insb
mov
repnz
sbb
jmp
lahf
ds
decb
mov
jl
decl
xor
push
adc
mov
mov
pop
pop
jg
inc
add
stc
mov
cmp
and
pop
sub
and
push
xchg
or
or
fscale
inc
sbb
adc
push
clc
push
arpl
bnd
jge
outsl
test
pop
daa
cmpb
enter
fcomp
in
push
cmp
adc
pop
push
sub
jnp
popa
push
iret
cmp
push
movsb
jns
cmp
pop
into
das
add
add
jle
jae
data16
in
imul
push
push
and
leave
sar
mov
cmp
je
or
jne
movsbl
inc
inc
jmp
or
add
and
sub
loope
mulb
cmp
adc
loop
cmp
cwtl
pop
fdivrl
adc
xlat
cmp
adc
inc
add
mov
test
inc
cmpl
notb
lahf
mov
adc
outsb
push
test
adc
icebp
mov
addb
sbbb
pop
leave
cmpl
je
dec
or
xchg
ret
jbe
test
sti
pushfw
pop
and
cmp
pop
ja
jle
pop
hlt
leave
or
xor
sbb
push
mov
sti
push
pop
loopne
mov
je
orl
out
loope
or
sbb
push
push
push
push
sub
push
mov
ljmp
xchg
decl
mov
movl
lret
ret
add
xlat
out
shr
in
cmovno
xor
push
mov
es
outsl
je
jnp
nop
arpl
push
add
mov
ja
push
or
int
add
lds
inc
push
aad
mov
out
sub
repnz
add
fdivrs
dec
fdivs
xchg
mov
mov
xor
aas
or
mov
jg
inc
rcrb
pushw
jg
jne
lods
jno
cmp
shll
outsl
inc
incl
out
daa
push
adc
lahf
adc
mov
insl
or
cs
push
push
ds
adc
mov
inc
adc
adc
jmp
movnti
adc
pushf
pop
jmp
movl
or
mov
call
inc
outsl
or
mov
pop
jmp
push
push
push
mov
or
js
and
mov
xor
mov
aas
lahf
sbb
orb
add
testl
in
xor
pop
sti
movq
and
pop
mov
mov
cmc
lea
pop
mov
and
cmpsb
jg
jne
lods
pop
insb
mov
loop
xor
mov
daa
pop
adc
xchg
xor
xchg
movsb
fisttps
ret
push
mov
add
jg
jg
je
cmp
push
sub
jg
cmp
pusha
add
sub
jb
je
jmp
cmp
idiv
mov
cs
adc
std
sbb
dec
jg
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
pop
or
jmp
mov
jmp
mov
jmp
mov
jmp
mov
adc
popa
call
in
pusha
pop
add
or
sbb
loopne
push
jns
jno
xchg
dec
aad
outsl
jp
mov
lcall
push
pop
inc
sbb
push
scas
add
imul
in
add
out
push
inc
cli
sub
mov
add
leave
je
sub
test
pusha
or
xor
loope
scas
ret
inc
or
pop
inc
call
cmp
ljmp
xor
cmp
psadbw
repz
cmp
jne
add
add
xlat
ljmp
ret
hlt
or
or
jo
std
inc
jbe
js
inc
test
jle
dec
mov
mov
fiadds
call
and
jecxz
test
push
jmp
mov
xor
push
mov
loopne
pop
dec
mov
std
js
sar
cli
lock
repz
add
sbbl
dec
mov
movl
sbb
inc
jmp
mov
lock
stos
mov
loopne
add
add
pushf
mov
jnp
cmp
xorl
add
or
ss
jne
pop
pop
pop
inc
pushf
sbbl
repnz
xor
dec
add
mov
xchg
or
jno
sbb
mov
push
cmp
add
pop
sbb
inc
mov
add
xchg
mov
ret
mov
add
add
jns
jno
mov
daa
mov
notb
mov
mov
mov
mov
push
push
scas
inc
mov
out
imul
out
pop
js
rolb
sbb
pushl
add
cmc
mov
mov
leave
aas
push
add
add
push
cmpw
jmp
ret
mov
or
cmp
in
aam
mov
je
enter
dec
xor
inc
ret
pop
pop
ret
mov
jns
mov
add
call
push
js
rcrb
mov
dec
cmpb
sub
cld
jne
cmpl
adc
and
pop
mov
call
and
dec
cmp
mov
and
xchg
xor
push
inc
xchg
jno
jne
jle
cmp
add
roll
das
push
aad
cli
sbb
sbb
xchg
cmp
or
push
dec
addr16
imul
or
or
mov
xor
xchg
jne
cmp
pop
sub
das
adc
xchg
mov
xlat
loopne
add
lock
ret
pop
aaa
mov
xchg
mov
shlb
jmp
sbb
or
clc
dec
jl
imul
jno
lea
mov
push
mov
push
sbb
add
push
push
jecxz
jne
mov
add
dec
and
inc
jg
aas
out
jno
pusha
xor
pop
dec
sbb
pop
sbb
add
insl
xchg
adc
xchg
fidivl
or
cld
xchg
jle
jle
push
add
loopne
push
xor
movl
sbbl
cld
psubusw
push
gs
movsb
xor
add
clc
das
stc
mov
ret
pop
sbb
aas
mov
cmp
sarb
adc
push
xchg
mov
shlb
je
and
in
out
jo
add
cmp
cld
pop
std
mov
jg
stos
jmp
lea
cmp
ret
sub
push
mov
inc
ss
jl
adc
sbb
mov
and
jmp
ffree
push
mov
mov
add
pop
jge
xor
mov
loop
or
out
xor
mov
je
push
lret
outsl
xor
jg
add
mov
jmp
inc
add
jmp
jbe
pop
sub
and
pop
pop
or
out
je
push
data16
in
add
mov
mov
inc
xchg
nop
push
add
jo
ljmp
std
rcrl
rcrl
mov
jg
xchg
or
cld
sti
adc
fld
add
aad
inc
add
aaa
sub
add
aas
icebp
adc
jle
sbb
xchg
mov
push
cld
add
cmp
pop
negl
and
mov
adc
mov
sub
out
int
xchg
cmp
adc
mov
fidivs
test
das
or
mov
mov
daa
aas
mov
fmuls
add
pop
lret
pop
lea
jg
clc
mov
xchg
testl
or
mov
xchg
adc
or
rcrb
and
dec
jmp
sti
sbb
add
cmp
gs
dec
jne
mov
pop
out
ja
jge
and
test
pushl
add
dec
jmp
and
inc
pushf
sbb
add
add
pop
dec
inc
lock
jne
mov
or
or
loopne
and
and
lea
jmp
xchg
sbb
scas
add
cmp
add
fcomps
mov
mov
inc
push
in
aas
pop
dec
or
fwait
and
inc
pop
imul
adc
fldl
dec
and
jmp
sub
mov
aam
addr16
stos
xlat
adc
lods
out
dec
call
ret
add
dec
cmp
xor
cmc
mov
fnsave
pop
adc
cwtl
daa
pop
mov
out
cmp
into
sub
lock
es
jl
cmp
jge
sub
daa
sbb
lods
loope
adc
adc
test
inc
jmp
and
je
sub
int3
cmp
jg
je
lret
jl
sub
mov
dec
lock
inc
sub
add
lea
inc
dec
pushf
inc
xchg
cmp
pop
jl
adc
mov
push
mov
mov
dec
jge
cmp
adc
imul
add
gs
lock
cmp
cmp
mov
lea
lock
push
add
mov
fucomp
add
xchg
xor
mov
push
insb
dec
js
and
negl
mov
inc
jae
adc
pop
lret
cmp
push
inc
lret
pop
cld
add
frstor
xor
movsb
fwait
aaa
cmp
cld
mov
movsl
jge
out
and
sbb
hlt
or
or
loopne
loopne
cmp
pop
pop
sub
in
sub
gs
cmp
arpl
cli
add
push
mov
cmp
pop
pop
loope
sub
ret
push
push
test
test
mov
xor
or
jle
push
push
cs
loope
insl
in
push
push
sub
push
cmpsl
in
cmpsl
push
cmp
cs
adc
mov
sub
add
jno
data16
cmp
add
nop
jle
mov
sub
cmp
mov
cmp
call
push
das
int3
pop
incl
add
nop
sbb
add
bnd
cld
outsl
add
add
add
mov
shr
xchg
push
dec
shl
je
mov
inc
test
jb
xor
jmp
imul
add
mov
push
cvtps2pd
or
aaa
inc
fs
pop
mov
jle
orb
jl
mov
add
push
scas
adc
pushf
pushl
mov
ret
cmp
push
lods
add
add
push
cld
sub
nop
xchg
in
shll
daa
cltd
push
xchg
cmp
pop
stos
add
aad
daa
and
enter
sub
jle
pop
test
mov
pop
jge
lahf
dec
lea
jl
push
adc
enter
ds
push
mov
xor
sahf
mov
fisubs
and
push
push
add
das
jnp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
mov
fdivr
cmp
je
mov
sub
clc
jmp
adc
cli
scas
xchg
mov
and
xchg
aad
push
or
movd
dec
cs
adc
pop
ficomps
jmp
cmp
mov
sub
lock
in
push
push
jmp
jb
aas
inc
cltd
sbb
mov
fildl
mov
call
adc
sahf
popa
loopne
and
pop
mov
fisttps
mov
inc
test
add
jg
pop
and
mov
push
mov
outsb
xchg
loopne
pop
daa
ja
cmp
sbb
out
mov
outsb
daa
push
dec
sub
repz
dec
inc
pop
and
inc
inc
mov
fisubs
jmp
test
test
cmp
inc
add
jmp
xor
cs
adc
inc
push
lret
aas
inc
pop
sbb
xor
mov
lea
loope
jl
mov
clc
push
pop
add
sarl
rclb
mov
into
div
subl
pop
push
mov
cmp
xor
in
in
or
je
or
jo
lret
xor
mov
loop
cmp
pop
dec
mov
gs
adc
jge
cmp
mov
cmpl
inc
cmp
adc
adc
jmp
clc
or
inc
jo
jmp
aas
add
daa
mov
and
mov
aas
and
js
addr16
dec
jne
inc
push
xor
add
loopne
or
iret
and
mov
xchg
out
cmpsb
in
inc
push
popa
jge
sub
nop
xchg
pushf
adc
pop
mov
pop
rorb
out
sub
pop
pop
pushf
in
cmp
jmp
cmpsb
or
adc
les
jle
sub
cmp
cmp
or
ja
sti
adc
add
add
inc
ljmp
out
pop
sub
add
je
cmp
ja
mov
les
pusha
pop
push
or
sub
pop
mov
adc
push
mov
push
xor
addr16
clc
in
adc
pop
lar
call
push
push
and
adc
mov
push
dec
lock
ss
mov
lods
mov
sub
aaa
jl
mov
arpl
push
addr16
mov
pop
incl
mov
pop
fs
add
iret
and
int3
dec
adc
pop
pop
ret
add
jo
ss
sub
rorl
or
or
dec
orb
cmpb
sti
mov
add
jne
sbb
inc
jmp
cmp
jne
sti
jge
mov
inc
and
sub
push
mov
je
es
ret
inc
fisubrl
add
sub
pop
lret
inc
pusha
in
das
out
out
add
ljmp
jb
out
or
sbb
mov
and
sbb
mov
jmp
push
sar
fwait
test
or
jb
jmp
jl
andl
sub
jbe
jmp
jg
mov
cltd
aas
push
pop
jl
sub
adc
loopne
add
adc
out
enter
fistpl
inc
xchg
inc
ficompl
mov
neg
rolb
neg
js
cmp
push
cmp
cltd
nop
sub
xor
inc
rcll
or
jne
adc
int3
lds
mov
sub
adc
shl
push
xor
sub
sub
inc
outsb
mov
add
xchg
inc
pop
fdivr
shr
setl
cmp
je
dec
add
dec
xor
inc
rorb
push
roll
lea
cli
arpl
dec
jle
or
push
jg
or
ljmp
mov
repnz
hlt
mov
pop
add
test
jg
xor
pop
mov
movsb
ss
xor
xchg
and
out
lea
pop
jne
pop
lret
push
movl
xorl
jnp
push
call
mov
testb
call
aas
jmp
in
cmp
je
andl
inc
cld
inc
nop
add
mov
cmp
jge
sar
mov
imul
add
mov
sub
add
inc
loopne
push
in
test
pop
jmp
decl
stos
cltd
jbe
out
jne
lock
in
xchg
jge
or
push
in
test
lods
inc
clc
dec
in
push
insb
adc
into
stos
dec
xchg
pop
fisubl
repz
push
dec
shll
jmp
inc
movl
xor
mov
or
psubq
or
cmpl
jle
adc
js
cltd
or
xchg
dec
jno
and
push
pop
cmp
lea
jno
push
out
pop
lods
fmul
mov
outsb
mov
cmp
add
xchg
mov
cmp
xor
lock
jne
dec
mov
push
into
add
movsl
inc
pop
cmp
es
sbb
add
sbb
add
xchg
xlat
scas
adc
dec
push
push
push
mov
incl
loope,pn
push
loop
xchg
je
cwtl
icebp
in
sbb
add
popa
pop
sbb
sbb
xchg
mov
fs
clc
mov
clc
decb
and
ret
int
repz
add
mov
addr16
or
push
sbb
mov
inc
inc
mov
mov
or
je
rcrl
aam
adc
ret
jg
dec
lods
jmp
fmuls
cli
pop
jne
das
aam
add
xchg
mov
push
clc
inc
call
sub
hlt
push
in
inc
loop
xor
push
and
mov
adc
or
or
pop
test
xor
push
rcll
insl
cs
pop
mov
cmp
xor
out
loope
push
js
pop
jne
add
les
gs
add
loopne,pt
push
inc
test
push
xchg
std
hlt
out
in
jne
movb
fisubrs
popf
lea
mov
fcmovb
test
sub
rolb
inc
cmp
inc
out
push
fistl
lds
mov
out
ja
imul
je
sbb
out
rcr
jns
loop
push
inc
cmp
fcomip
push
movb
ret
dec
push
push
mov
inc
mov
push
call
push
pop
dec
mov
ret
imul
gs
xor
cs
jno
jmp
je
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
xchg
dec
outsl
loopne
sbb
fucomi
jae
fsub
sub
inc
out
and
push
ffreep
add
pop
add
cmp
and
adc
sub
fstps
dec
faddp
loopne
insl
or
call
out
out
inc
cmpsb
lods
popf
aaa
clc
int3
mov
into
inc
or
loopne
cmp
pop
repnz
in
jno
loopne
inc
inc
and
dec
xor
and
std
in
sub
repz
dec
and
mov
inc
test
or
repz
xor
out
sarl
cmp
mov
sbb
add
cmp
stos
pop
pop
repz
jle
fdivs
adc
inc
addb
sub
sub
sbb
jnp
push
or
push
push
mov
push
je
das
outsl
repz
loope
xor
cmc
add
pop
mov
mov
ja
jb
out
aas
inc
inc
dec
mov
jae
pusha
sub
test
loopne
cwtl
dec
push
ja
jo
rorb
out
mov
pop
add
mov
xor
xor
push
je
outsl
daa
inc
sbb
mov
mov
jp
sbb
add
mov
lret
xlat
pusha
pop
sub
mov
dec
or
pushf
jno
fnstcw
mov
mov
arpl
mov
minps
roll
add
xor
jns
fs
faddl
loop
mov
and
sahf
mov
xor
dec
movsb
pop
mov
inc
push
stos
aad
jge
repnz
cmp
loop
in
jmp
mov
adc
mov
cmp
jne
pop
cmpsb
mov
push
mov
jmp
mov
call
sub
js
and
cmp
push
stc
ja
push
push
rolb
jns
push
test
enter
je
sbb
cs
iret
pop
imull
push
push
mov
xor
fildll
mov
pop
pop
ret
sbb
add
sti
enter
and
inc
pop
flds
call
mov
outsl
mov
push
in
je
or
sub
aam
mov
add
or
lods
nop
lret
xlat
insl
mov
mov
test
jbe
js
inc
fisttps
or
popf
mov
push
xlat
sbb
pop
movsl
mov
pop
mov
mov
lcall
adc
add
movzwl
inc
cmp
ja
mov
jg
adc
inc
jmp
cmp
pop
add
pop
cld
ja
std
out
out
fcmovb
jmp
or
mov
adc
and
sbb
and
add
in
lret
add
dec
xor
jnp
dec
popa
rolb
inc
jecxz
cmp
jae
lds
or
jo
subl
movb
and
sbb
sub
dec
jbe
pop
add
cmp
cmp
jecxz
push
rol
mov
call
std
mov
gs
imul
ret
dec
jae
cmp
test
xor
hlt
sti
mov
inc
test
je
or
or
sbb
loope
and
je
cmp
adc
xor
repz
cmp
jne
push
cwtl
and
or
mov
pop
xor
fimull
cld
mov
pop
fdivrs
fistl
or
inc
fwait
xlat
or
xorb
or
inc
adc
or
movl
and
inc
inc
mov
ret
pop
nop
xorl
sbb
in
xorb
sbb
or
jb
inc
adc
popa
sbb
mov
adc
icebp
sbb
repnz
popa
mov
xor
movsb
adc
pop
adc
loope
adc
sbb
addr16
fs
inc
push
and
lahf
cmc
fidivrl
es
pop
imul
or
jmp
adc
enter
popa
push
or
push
add
pop
bound
push
popf
pop
mov
rolb
cmp
or
jl
clc
dec
cwtl
and
cmp
cmp
xchg
cmp
pop
fidivrs
nop
imul
or
outsl
mov
mov
adc
push
lea
mov
sub
add
add
pop
or
insb
add
jle
shlb
xchg
push
out
pop
push
push
lock
and
and
arpl
lea
push
push
cltd
jb
and
test
mov
push
and
and
imul
cmp
cmp
arpl
jecxz
repnz
mov
add
push
xchg
mov
mov
jns
add
call
mov
xchg
scas
clc
subl
add
test
inc
mov
sub
dec
rolb
pop
push
fldenv
loopne
inc
and
rclb
test
push
mov
adc
ret
out
in
ret
adc
mov
pop
stc
adc
mov
cli
stos
in
inc
or
and
cmp
jbe
es
cmp
sub
mov
mov
adc
xor
jmp
pop
push
pusha
subps
push
push
pop
insb
and
das
inc
xor
mov
les
or
or
loop
push
test
or
jmp
push
mov
sub
jg
jmp
and
leave
jne
mov
mov
cwtl
push
je
int
cld
lret
add
mov
ret
mov
lret
inc
shrb
jge
fmull
push
mov
shl
mov
aam
fsubrs
sbb
jl
sbb
popf
push
xor
push
pop
xchg
and
adc
cmp
xor
adc
xchg
out
push
or
daa
pusha
sub
sbb
add
jbe
push
stc
mov
xor
inc
add
add
push
or
pop
repnz
or
mov
adc
je
add
cs
lcall
or
push
gs
xchg
or
adc
xchg
testl
insb
adc
and
jnp
imul
outsl
arpl
inc
gs
jne
je
jle
mov
dec
imul
lea
gs
outsl
inc
arpl
imul
push
ret
or
fbstp
xor
xor
outsl
insl
bound
outsl
js
fisubrs
clc
jmp
pop
push
imul
aam
push
andps
outsb
dec
inc
pop
rorl
ja
je
dec
add
or
insb
nop
mov
and
xchg
orl
jecxz
inc
push
sbb
mov
std
xlat
inc
sahf
adc
or
sbb
inc
mov
push
push
dec
xor
loopne
pop
lods
test
movsb
enter
mov
or
xchg
nop
mov
test
and
jo
enter
push
or
pop
pop
and
dec
orl
dec
inc
inc
cmp
xor
and
xor
xor
and
and
and
or
or
enter
cld
sbb
loop
hlt
lock
inc
push
in
call
sbb
inc
push
sbb
int3
push
sbb
sarb
mov
nop
inc
push
lods
test
nop
inc
push
sbb
sbb
shl
int3
cmp
enter
in
fs
inc
push
in
fcoml
aam
inc
push
sbb
les
sbb
mov
nop
inc
mov
test
nop
inc
push
movsb
mov
sbb
sbb
test
sbb
jl
je
fs
inc
jo
push
fs
pop
nop
inc
push
sbb
push
inc
push
sbb
inc
push
sbb
cmp
xor
fs
inc
xor
fs
inc
push
and
sbb
inc
push
sbb
adc
inc
push
sbb
add
jb
nop
add
jecxz
hlt
xor
and
and
inc
dec
push
xor
jo
insb
push
sbb
push
push
dec
sbb
dec
pop
pop
fs
inc
push
push
push
sbb
cmp
sbb
sub
sbb
and
sbb
fs
inc
sbb
fs
inc
push
or
add
daa
pop
sbb
cld
out
orl
hlt
lock
call
in
fdivl
enter
aam
nop
inc
xchg
inc
push
sbb
mov
mov
lods
test
fs
inc
movsb
mov
push
cwtl
xchg
nop
nop
inc
push
sbb
cmpb
fs
je
insb
push
fs
pop
fs
inc
push
pop
push
push
nop
inc
push
sbb
inc
push
sbb
cmp
xor
sub
or
enter
sbb
xor
nop
sbb
xor
and
xchg
orl
in
inc
push
sbb
in
push
sbb
in
fcompl
fs
inc
fcom
shlb
push
int3
enter
push
sbb
mov
fs
lods
push
sbb
movsb
mov
inc
cwtl
xchg
nop
fs
inc
push
mov
sbb
sbb
insb
push
sbb
fs
pop
sbb
pop
push
push
fs
inc
push
dec
dec
inc
nop
inc
push
sbb
cmp
sbb
sub
sbb
and
sbb
fs
inc
sbb
fs
inc
push
or
add
daa
pop
sbb
cld
in
rdtsc
push
jecxz
mov
rol
loop
or
push
pop
nop
jnp
sub
or
into
and
push
or
jns
call
xchg
rorb
hlt
mov
scas
push
dec
mov
lahf
add
aam
adc
lea
daa
mov
or
jge
and
pop
cvtpi2ps
int3
adc
popa
pop
pop
mov
cs
mov
sub
sbb
int3
negl
movsb
cmpsb
imul
testl
sub
push
pushf
jmpw
cwtl
outsl
or
xchg
mov
lods
outsb
inc
cmp
scas
cmpsb
mov
mov
add
test
out
enter
mov
jbe
inc
add
or
pop
xor
pop
pop
sti
mov
movsl
mov
add
sbb
pop
xor
popa
dec
pop
lret
mull
add
aas
push
fs
add
call
lcall
or
cmp
push
mov
or
dec
popa
gs
xchg
mov
mov
push
dec
inc
inc
dec
add
outsl
inc
pop
push
and
pop
push
dec
dec
dec
pop
inc
push
dec
pop
and
std
mov
std
mov
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
dec
repnz
js
xchg
cmpb
cmp
jl
test
lock
enter
icebp
repnz
and
and
and
cld
orl
std
jmp
or
enter
jecxz
enter
in
enter
out
jmp
ljmp
in
out
out
rorb
enter
shll
enter
aad
enter
xlat
fcomp
and
faddl
rorb
and
ret
enter
and
and
int3
orl
int
iret
mov
xor
and
and
and
and
mov
mov
xor
and
and
and
xor
lods
pop
jb
popa
aas
leave
jbe
rorb
sbb
xchg
jbe
sub
or
push
jg
add
sbb
ja
or
popw
push
arpl
pop
mov
rorb
inc
js
gs
imul
xchg
orl
push
inc
dec
xor
incb
outsl
jb
nop
in
in
sbbb
inc
pusha
shlb
gs
jo
repnz
ds
ja
loopne
push
or
dec
jne
dec
dec
gs
imul
add
sbb
pushf
pop
inc
in
fnstsw
or
outsb
mov
hlt
scas
hlt
cmp
and
js
sbb
pop
out
frstor
scas
ds
test
scas
and
push
adc
lods
xor
xor
mov
mov
push
sbb
jp
push
repnz
scas
pusha
jns
inc
inc
imul
cld
pop
gs
nop
pop
pop
aam
and
popa
outsb
addr16
clc
xor
xor
mov
adc
outsb
jnp
cmp
inc
pop
adc
dec
test
loopne
xchg
gs
push
fs
jbe
or
jmp
imul
bound
insb
jle
sbb
sbb
arpl
rcl
scas
notb
push
outsb
fs
jo
notb
add
xchg
movswl
imul
and
daa
and
movsl
pop
fwait
add
inc
popa
jae
and
mov
mov
lock
inc
inc
dec
shrb
aam
ds
cmp
dec
rclb
mov
insb
popa
das
xchg
dec
add
push
cmp
cmp
orl
in
test
nop
xchg
scas
xchg
inc
scas
addb
inc
imul
inc
enter
lock
icebp
loope
ret
or
je
insb
inc
xlat
dec
jg
or
push
in
xor
add
xchg
mov
popa
fsubl
pop
pop
mov
out
orb
xchg
sub
mov
sbb
pusha
adc
pusha
mov
popf
cs
or
jo
data16
inc
jbe
and
inc
push
stos
push
add
andl
and
arpl
sub
mov
add
aaa
xor
add
clc
scas
or
push
inc
insb
jae
or
fildl
or
add
sbb
ds
aas
aas
aad
add
push
push
cs
fiadds
rcl
leave
adc
push
push
jns
jl
and
jb
and
aam
aam
insb
fidivs
std
incb
addb
fldl
dec
in
cmc
xchg
adc
sbb
push
loopne
sbb
jno
cmp
mov
push
fimuls
sbb
xchg
adc
jne
outsl
loopne
rcll
insb
jne
pop
push
pop
push
cmpsl
push
fld
lods
outsb
arpl
in
push
push
das
cmp
cmpps
ret
adc
repz
cmc
push
fimuls
cs
mov
inc
or
fcompl
enter
dec
cmp
aas
sbb
sub
es
mov
push
pop
pop
xchg
unpckhps
scas
or
les
mov
mov
pop
cwtl
cmp
dec
aaa
or
xchg
gs
adc
sub
jo
inc
loopne
outsl
cli
cli
sbb
inc
add
ljmp
add
movsl
lahf
inc
jge
push
inc
inc
dec
loope
imul
lea
or
dec
rorl
addr16
cmp
jbe
cmp
repz
je
movzbl
pop
push
decl
movsl
test
jge
sub
add
repz
jne
mov
aaa
inc
bnd
inc
inc
aas
push
mov
sub
or
mov
mov
jmp
and
sti
je
loope
out
sub
pop
sbb
sbb
in
shlb
or
je
cmp
add
outsb
je
pop
push
adc
cmpsl
loop
sbb
add
cmp
pop
dec
clc
lock
adc
cwtl
aam
mov
cwtl
cwtl
mov
push
xchg
xchg
push
inc
enter
outsl
add
or
jbe
mov
popf
ja
jp
push
adc
test
ljmp
lock
sub
inc
cmp
jl
cmpb
jbe
adc
out
dec
aad
dec
sub
clc
imul
lret
cmp
popl
jno
fcoml
sbb
les
aas
xor
data16
cmpsl
xchg
push
mov
mov
push
nop
pop
lock
in
test
incl
add
sub
jb
sub
je
jae
cmp
mov
inc
mov
jmp
test
or
or
push
inc
dec
jne
xor
push
inc
js
leave
jne
sarb
inc
jbe
mov
pop
clc
call
ret
mov
shl
icebp
dec
inc
std
pop
pop
cmp
jb
sysret
mov
lcall
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outsl
cwtl
fmull
mov
xor
sbb
push
push
pushl
pushl
mov
negl
xor
pop
insb
cld
hlt
xchg
out
jl
gs
lock
andl
aas
adc
test
out
mov
sub
mov
dec
add
xchg
mov
orl
fistpll
and
fistps
ret
add
add
sub
add
rorl
jge
fdivr
mov
call
movsl
pop
sub
loopne
jae
cld
pop
pop
push
inc
addr16
ffree
ffree
ffree
pop
mov
add
inc
sub
and
das
pop
sarb
loop
dec
and
mov
cli
mov
mov
je
push
xlat
loop
lea
adc
rcrb
mov
lea
nop
and
or
mov
xorl
mov
add
fstp
jno
imul
roll
clc
cmpsl
mov
mov
orb
rcl
lret
mov
mov
sub
mov
sub
push
inc
hlt
pop
dec
mov
adc
shrb
dec
nop
cmpsb
mov
add
test
or
add
cmpsb
push
adc
movb
repnz
jl
inc
sbb
cmp
dec
mov
mov
mov
push
cmp
jmp
int3
jecxz
pop
inc
mov
loopne
lahf
and
push
ud2
decl
adc
mov
fcomps
cmp
adc
xchg
add
dec
ss
fld
outsb
or
inc
dec
pop
jns
pop
addr16
add
add
inc
nop
nop
sbb
dec
ret
lods
cmp
add
add
xor
bound
scas
mov
adc
loop
adc
jmp
and
cmp
rorb
pop
inc
sbb
sbb
incl
enter
add
add
enter
loop
pop
inc
ja
popf
mov
push
imul
add
xlat
jle
mov
mov
mov
and
jo
sahf
outsb
push
inc
hlt
xor
fidivs
orl
jnp
lahf
push
imul
cmpsl
or
int
fstps
out
divb
dec
or
mov
xchg
pop
adc
ret
push
out
stc
shlb
push
lea
faddp
jbe
jae
cs
cld
dec
movb
test
aas
pop
test
inc
sbb
inc
lock
mov
jbe
adc
jne
sti
out
popf
cmpsl
notb
xor
loop,pn
das
mov
or
fistl
sahf
push
pop
pop
iret
pop
and
push
mov
push
pop
pop
pop
push
push
dec
notl
mov
xchg
and
je
dec
push
call
movsb
or
mov
dec
xor
xchg
push
pop
rep
mov
imull
mov
fidivl
lds
icebp
add
jne
dec
cmp
and
and
mov
ret
pushf
and
mov
lock
mov
and
xchg
mov
out
shrl
ret
sbb
jne
push
jg
mov
jmp
inc
sub
imul
mov
cs
scas
mov
pushf
push
push
pop
jg
mov
sbb
xchg
dec
loope
push
call
jns
packsswb
push
pop
hlt
clc
lock
cmp
jbe
imull
out
mov
xor
inc
call
adc
xor
inc
cld
mov
lock
xor
mov
cmc
nop
shll
push
sbb
cmp
int3
pushl
fsub
in
adc
mov
mov
out
das
sub
jmp
int3
xchg
dec
mov
pop
jno
in
in
lock
dec
not
mov
add
mov
stc
push
jo
and
popa
cli
pop
pop
ret
cmp
lret
dec
jne
inc
sub
pop
adc
pop
flds
pop
pusha
cmpsl
inc
insb
das
xchg
sbb
pop
adc
push
bound
mov
push
ds
xlat
mov
clc
aas
sbb
xlat
xor
repz
mov
mov
xchg
and
stc
pop
cmp
cli
ljmp
je
dec
mov
mov
adc
or
mov
xchg
daa
cwtl
pop
pop
jmp
lea
mulb
dec
shll
scas
add
adc
inc
inc
aas
dec
jo
jae
inc
dec
je
mov
fistps
sub
jbe
sbb
lods
aas
push
xorl
adc
mov
jne
push
push
mov
jo
cmpsl
icebp
add
movsb
mov
nop
shlb
add
into
jo
ret
xchg
sub
inc
mov
mov
push
out
ret
jbe
push
clc
jg
mov
cmp
jbe
mov
dec
js
dec
outsl
test
add
les
dec
fisttpl
jg
pop
js
and
push
stos
add
mov
lock
mov
clc
mov
cmpl
je
mov
add
ljmp
add
push
inc
lret
loop
adc
filds
or
adc
sbb
shl
mov
mov
lock
lods
cmp
mov
insl
sub
cmpsl
insl
xchg
test
pop
sub
jmp
mov
inc
out
add
xor
idivb
fidivrl
jne
das
hlt
and
lods
jmp
jecxz
shr
lds
inc
mov
add
mov
call
out
push
das
arpl
cmpb
or
mov
jae
roll
xchg
pop
mov
repz
mov
cmpl
mov
pop
mov
lcall
mov
shll
jb
cmp
ja
imul
cmp
movzbl
add
and
in
dec
xor
cmp
mov
loopne
or
repz
ret
je
jmp
adc
xchg
ret
and
mov
lods
out
jg
ja
push
pop
pop
jne
lea
mov
fwait
push
cmpsb
popf
add
add
and
dec
xchg
pop
push
xchg
jbe
cmpsb
fsts
xchg
push
push
inc
mov
xorl
es
sbb
stos
imul
dec
mov
loopne
std
jmp
inc
cmpsb
jo
jne
clc
lahf
jbe
and
jmp
hlt
sbb
loop
insl
xchg
xchg
out
jle
push
jo
mov
popf
ja
imul
repz
sbb
cwtl
test
and
jne
aaa
mov
sbb
add
mov
aad
jae
xchg
or
jmp
xor
inc
inc
mov
lods
and
jmp
mov
mov
dec
inc
jg
cld
aas
and
sub
cld
call
pop
jns
mov
ja
or
xor
cli
xor
cmp
ja
or
ds
jecxz
in
ljmp
pop
ds
leave
addb
sbb
jmp
mov
outsl
mov
cld
sti
dec
jnp
je
mov
or
add
adc
cs
je
dec
jge
mov
mov
ret
cmp
jbe
mov
xchg
ret
loope
mov
adc
mov
xchg
rdmsr
push
pop
scas
js
loopne
mov
inc
iret
dec
xchg
hlt
je
sti
stc
xchg
ret
xor
and
pop
jp
xchg
loop
lahf
movsb
or
mov
fistps
add
mov
test
sub
mov
sahf
cld
cmp
pop
popa
mov
addl
sub
in
mov
jne
jne
add
xlat
jg
into
enter
inc
xchg
filds
sub
imul
fcoml
sbb
clc
dec
cld
lea
imul
jmp
dec
sbb
das
mov
ret
jmp
add
rolb
inc
ret
adc
lea
cmpl
push
xchg
push
lea
call
push
xor
stos
scas
test
mov
ljmp
sub
or
leave
mov
stos
xchg
push
mov
xlat
mov
gs
incl
mov
inc
dec
shr
or
jg
dec
mov
stos
cmp
jne
pop
pop
inc
test
addr16
inc
icebp
sub
mov
inc
push
stc
cltd
test
hlt
mov
repnz
xchg
arpl
adc
add
jns
lods
mov
adc
rolb
cmp
pop
mov
add
dec
cmpsb
mov
mov
fmul
add
movzwl
sub
add
testb
dec
cld
xchg
jp
pop
clts
push
push
out
fldt
push
add
ja
movswl
jge
pop
jge
jle
lret
lea
sbb
adc
mov
call
dec
cld
popf
jmp
sbb
mov
test
cwtl
dec
dec
inc
dec
inc
xchg
or
dec
xchg
jge
add
clc
mov
jno
ret
std
mov
aam
dec
scas
loope
adc
stc
std
jl
pop
sbb
xlat
fisttps
pop
dec
je
mov
stos
neg
sbb
stos
jmp
inc
fdivp
sti
ss
mov
loop
push
adc
push
pop
outsl
ljmp
add
xchg
mov
mov
mov
decb
add
sbb
sub
xlat
add
rorl
mov
mov
mov
les
push
call
cmp
mov
fcoms
add
je
loopne
ljmp
mov
inc
test
jne
or
jle
sbb
jne
stos
xor
int
push
sti
add
je
inc
jne
pop
xchg
jle
jne
ret
xchg
repz
and
repnz
movsb
sbb
jmp
lret
adc
cwtl
iret
mov
js
cmp
je
push
push
cmp
xlat
or
jno
sbb
negl
rcrb
test
lea
or
mov
lret
ret
and
inc
add
xlat
insb
fldt
and
and
adc
and
sub
inc
sub
fnstcw
sub
sbb
and
pop
mov
sub
or
insl
fimull
xor
sub
xor
flds
ljmp
mov
popl
dec
dec
cmp
push
and
adc
call
adc
or
testl
xchg
cmpsl
aam
jle
add
movb
pop
mov
or
jne,pn
imul
push
rcr
inc
out
add
inc
inc
fabs
push
adc
pushf
pop
frndint
jg
aad
rcr
scas
nop
or
fstps
mov
testb
outsl
pushl
je
fidivl
jne
lea
mov
inc
sub
xchg
shr
and
add
push
cmp
or
shrb
jns
xor
jmp
or
cmpb
jb
movb
aas
sti
add
or
ja
jmp
outsl
fsub
mull
add
enter
cmp
inc
xor
rol
icebp
notl
clc
shr
mov
imul
sbb
mov
das
cmp
aaa
push
into
rorl
je
add
sbb
iret
aad
test
pmaxub
or
or
pushf
fildl
pop
mov
cmpsl
sbb
jae
dec
fidivrs
mov
sbb
inc
loopne
push
in
insl
or
sbb
or
mov
je
jecxz
sbb
jne
mov
sbb
sub
popf
bound
jne
dec
sub
cmp
jmp
fldenv
inc
or
ljmp
enter
rol
iret
cmpb
divl
add
loope
jmp
mov
sbb
cmc
rol
inc
pop
cs
add
push
ds
mov
fyl2x
fwait
decb
push
fldz
cmpsb
mov
sub
std
lea
inc
loopne
lret
scas
lcall
sbb
out
icebp
je
and
jne
inc
push
sub
pop
add
jg
addb
cwtl
jne
mov
sahf
add
lds
add
loopne
xchg
mov
fistpll
jmp
fstpt
jge
test
cld
pop
mov
aam
push
jg
cmp
insl
and
push
int3
add
and
test
or
fimull
add
add
mov
idivl
sbb
push
inc
imul
loopne
rolb
cmp
add
sub
inc
cmp
test
xor
test
in
xchg
sbb
inc
adc
inc
cmpsb
pop
add
test
dec
adc
popf
mov
or
cmp
aam
fldt
fstpl
fwait
and
mov
push
dec
dec
sub
mov
and
hlt
mov
fcmovnb
fldl
inc
movsb
addb
adc
jl
neg
mov
xor
pop
xchg
push
mov
jb
lea
pop
daa
or
adc
mov
jg
outsl
sbb
or
cmp
inc
stc
inc
fwait
clc
mov
jne
jae
std
fwait
clc
xlat
in
addr16
add
imul
testl
add
xchg
hlt
xlat
jne
xchg
fildl
jp
mov
jp
fstpl
fwait
out
pop
and
lret
movsb
dec
fbld
mov
outsb
xor
cs
lea
mov
divl
cmp
ja
hlt
aam
ljmp
or
jp
push
fsubp
dec
mov
inc
jl
mov
fldl
adc
out
mov
movsl
and
call
js
cli
repnz
enter
add
adc
cli
xor
cmp
mov
enter
adc
mov
adc
xchg
sub
mov
pop
idiv
add
incb
add
lea
incb
jb
out
xchg
adc
jle
push
jb
idivb
mov
pop
sti
insb
sti
cmp
ja
adc
adc
push
jbe
add
inc
dec
incb
fdivl
sub
dec
mov
aas
cltd
idiv
imul
movsl
xor
and
sbb
sub
aas
pusha
ds
add
popa
ret
or
sub
jne
inc
std
or
mov
push
sub
xchg
mov
or
out
call
xchg
and
cmpsl
fs
dec
dec
in
test
jg
mov
adc
and
or
dec
or
movsb
aas
nop
iret
sahf
pop
inc
jg
jl
pop
dec
iretw
cmp
fsubp
testl
add
scas
pop
jecxz
and
shl
shl
lock
lods
mov
sbb
decw
cmp
jno
ret
fs
ljmp
add
add
cmc
outsb
rorb
xchg
sub
mov
int3
mov
lahf
mov
add
xor
insl
pusha
jecxz
cmp
jb
mov
sub
fildll
test
into
sbb
out
cmc
and
stc
xor
xor
mov
test
hlt
nop
pop
jge
fnsave
mov
addr16
imul
mov
mov
pop
les
and
or
mov
mov
repz
push
cmp
mov
adc
rcr
sbb
sbb
popf
aam
push
lret
lock
mov
xchg
and
testl
mov
nop
loopne
xlat
push
shrl
fcmovb
sbb
outsb
xlat
sub
xchg
and
lea
ss
out
cwtl
inc
mov
pop
jcxz
push
mov
xchg
mov
aas
xchg
add
ljmp
popa
in
jns
sbb
imul
lret
mov
mov
adc
sbb
mov
pop
jo
pop
jge
daa
incl
dec
sti
sub
cmpl
and
fcmovnu
inc
hlt
out
push
cmpb
jne
cmpsb
neg
fisubs
or
lea
or
xchg
mov
nop
fcoml
inc
in
add
sti
inc
mov
jecxz
push
in
jge
xor
xor
call
push
test
call
sub
dec
outsl
pop
fsubrl
movsb
sub
xchg
push
sub
inc
jae
fcoml
out
cmpb
cmp
push
movsb
mov
cmp
adc
stos
mov
mov
adc
mov
out
lea
dec
mov
mov
je
or
lods
xstore-rng
cmpsl
add
enter
pop
mov
pop
cmpl
sub
mov
jne
rcrl
sub
lods
rcrl
lea
mov
sbb
ret
rcrl
sub
mov
mov
rorb
xchg
aas
addr16
iret
in
mov
movsl
and
pop
add
movsl
cmp
loope
or
xor
aas
sbb
jecxz
push
inc
cmpb
jne
push
movsl
and
ret
push
repnz
sub
int3
mov
add
cvttps2pi
push
inc
mov
repnz
xorl
or
lods
in
sbbb
cmp
pop
mov
pop
repz
stos
iret
incl
pop
jecxz
arpl
inc
loop
pushf
pushf
add
push
bt
pop
push
out
add
mov
andl
xchg
jns
dec
inc
movsl
mov
lahf
push
lcall
mov
pop
cmp
jne
aas
sahf
mov
mov
xor
xchg
fisubs
aas
jecxz
push
cmpsb
aaa
shll
movsl
in
and
insb
or
or
or
or
or
or
add
add
or
or
or
mov
lods
insb
lcall
cmpsl
push
mov
mov
xchg
ret
clc
sub
pushf
stos
cli
and
adc
pop
cmp
cmp
push
and
lret
push
jl
test
xchg
in
pop
mov
fiadds
inc
mov
or
popa
xchg
fsubl
add
imul
int3
fcoms
fdiv
dec
xor
mov
lock
lods
adcb
inc
sub
xchg
xor
leave
pop
add
push
mov
mov
je
add
aad
xor
add
roll
mov
fsts
and
nop
daa
xchg
dec
cmp
and
lods
loope
sub
cltd
adc
or
push
ja
aas
cli
ret
and
add
adc
xchg
dec
out
and
add
push
jmp
sub
je
pop
je
in
sti
pusha
jmp
cmpb
dec
mov
jns
popf
test
sub
cmp
in
add
sbb
add
adc
sub
cmp
xor
mov
xor
inc
xchg
popa
mov
ljmp
outsl
dec
push
data16
or
adc
ja
mov
jle
or
or
fcomip
fcoms
call
mov
add
test
sbb
lret
in
dec
cwtl
mov
jne
mov
popf
test
enter
and
cmp
stos
daa
jns
add
lds
xor
fnstenv
jae
lret
pushf
inc
jmp
mov
mov
and
je
xor
inc
sahf
fildl
push
in
or
and
or
mov
adc
sub
adc
out
adc
or
insb
lock
jl
into
jge
add
loopne
add
cltd
fisubrs
mov
cwtl
das
fs
std
ja
cwtl
jmp
pop
es
sbb
or
pop
jmp
jmp
stc
mov
push
aam
mov
sub
insb
outsl
insl
or
jmp
lret
xor
clc
push
adc
dec
fsubrs
fstl
jle
lods
jmp
inc
dec
das
push
dec
adc
push
adc
add
or
test
ret
insb
pop
clc
insl
add
sahf
push
sub
ret
xor
inc
ret
jne
or
mov
xor
adc
mov
push
daa
or
jbe
loop
adc
das
xor
adc
and
and
cmp
jg
in
xchg
mov
cmp
roll
testl
cld
sbb
cmpb
pop
mov
jl
xchg
push
pop
ja
xor
ret
nop
ja
mov
xor
sub
jae
loopne
jmp
sub
inc
sbb
pop
addb
test
add
lret
fidivs
add
notl
ja
add
enter
scas
xor
fmull
cmpl
xor
les
push
loop
xchg
fmull
loope
inc
inc
nop
test
add
movl
mov
mov
pop
or
out
fdivrl
cmc
sbb
in
cmp
enter
jne
incl
dec
out
xchg
mov
sub
jg
lock
jmp
sub
je
dec
je
sub
sub
je
sti
lea
add
sbb
push
push
push
ja
push
inc
mov
fwait
push
fadd
pop
sarl
jo
sub
aam
je
or
lds
adc
push
add
jl
pop
pop
or
scas
sbb
loopne
call
push
aaa
xorb
sbb
mov
popa
gs
dec
add
shlb
nop
mov
jmp
hlt
push
adcb
jne
ret
cmp
pop
sarl
in
jne
cmp
jg
sarb
pop
jno
je
xlat
cltd
xor
sub
xchg
cmp
add
iret
add
add
mov
cld
add
adc
pop
push
push
push
dec
cld
loope
push
mov
fmuls
pop
shll
loopne
push
push
notl
pop
and
sbb
push
in
test
rclb
test
cmp
push
nop
ds
push
addr16
leave
lahf
push
mov
mov
dec
mov
and
subb
lahf
cwtl
push
sbb
test
cmp
mov
popa
xchg
nop
cmp
add
fiaddl
int
iret
cltd
and
sahf
int3
sbb
repnz
xor
add
add
lock
out
out
clc
clc
imulb
jb
and
cmp
push
mov
and
pop
in
call
and
sti
and
ss
repnz
jmp
or
into
lock
loop
cmc
popa
aad
in
pop
push
jmp
cmpb
ja
push
push
hlt
filds
push
lods
pop
mov
pop
data16
div
idivb
icebp
add
cmpb
jle
and
fs
jne
cmp
pop
xchg
testb
or
add
ja
pop
inc
push
cmp
inc
stc
divb
jmp
fwait
mov
cwtl
and
jmp
movsl
mov
jl
jne
rcrl
cs
cmp
das
fidivrl
fcomp
das
nop
in
icebp
ficomps
mov
fsubs
sbb
adc
push
out
dec
and
lds
add
sub
leave
enter
jno
or
jno
push
xor
add
scas
push
jo
cwtl
repnz
fildl
xchg
outsl
mov
add
fildll
and
and
and
jmp
push
mov
adc
push
jo
push
mov
das
fcmovu
push
pop
and
add
in
push
cmp
mov
or
orl
add
add
pop
inc
and
daa
in
add
sbb
test
cmp
xor
sahf
cmp
adc
jne,pt
xchg
push
imul
add
sbb
lcall
out
add
push
pop
rorb
or
into
jo
xorb
les
pop
push
add
add
lock
popa
mov
outsb
add
inc
xchg
cmp
dec
pop
mov
pop
addr16
ret
psubsb
add
pop
test
in
fisubl
add
sbb
dec
fwait
push
cmp
ret
sbb
mov
fnstsw
mov
fcomps
or
adc
jmp
sbb
pop
icebp
pusha
and
fisubrl
out
dec
test
push
pop
mov
xor
jmp
dec
mov
xchg
pop
lock
sub
jb
or
xchg
fdivs
add
mov
pop
or
ljmp
and
mov
lods
es
mov
cltd
mov
lcall
pop
loope
xor
pop
bound
addr16
lock
adc
sarb
mov
or
cmc
push
aam
jo
flds
add
arpl
movsl
xchg
sbb
lods
rcr
or
or
mov
lea
mov
xor
dec
adc
int3
add
inc
lock
cwtl
ror
lock
inc
xor
sub
or
sub
and
sahf
or
out
cs
jnp
xchg
push
in
adc
faddl
dec
cmp
and
sub
in
out
loopne
or
aas
mov
lods
ss
pop
fdivr
loopne
push
xor
sub
jge
lock
je
xchg
cmp
insb
add
movsb
jnp
add
loopne
pop
xor
or
add
cmp
xchg
sub
lcall
adc
js
mov
lret
cmp
pop
xor
ljmp
in
jecxz
jno
mov
cmpsl
mov
mov
cmp
sbb
lock
ja
subl
push
push
sbb
mov
dec
push
nop
mov
xor
sbb
rcpps
hlt
push
push
aam
add
ljmp
inc
xor
enter
repz
mov
pop
lea
in
clc
fdivrl
or
add
or
repz
adc
test
scas
mov
jmp
mov
sub
je
sub
je
loop
mov
add
call
test
xor
sbb
cwtl
jno
mov
mov
mov
mov
popa
inc
jg
lods
add
jle
mov
xor
mov
jb
pop
fdivrs
jle
lock
add
inc
add
add
mov
sbb
fwait
adc
xor
ret
and
repnz
je
jne
xor
jmp
loopne
or
in
in
jle
mov
mov
mov
push
mov
mov
dec
incb
and
popf
add
sub
and
adc
aas
cs
adc
shrb
cld
daa
test
int
xchg
icebp
subb
testb
nop
cmpl
cmp
out
cwtl
test
dec
add
push
and
ret
daa
xchg
xchg
inc
icebp
jmp
sub
lock
mov
xor
xchg
inc
pop
repz
add
mov
mull
or
fcomp
test
mov
mov
dec
lcall
ljmp
jecxz
bound
mov
or
sbbl
cmp
dec
lea
adc
mov
cld
inc
fisubs
add
and
mov
xchg
addr16
xor
mov
mov
fstps
mov
aam
loopne
clc
push
lea
aam
sbb
test
data16
pop
fsubrs
push
or
cmp
sub
aam
outsl
aam
xchg
cwtl
pop
mov
pop
dec
rorl
sbb
xchg
inc
push
or
push
inc
adc
mov
adc
hlt
sbb
pop
push
inc
mov
jmp
push
cmp
sbbb
stos
inc
les
push
fimuls
movsl
sub
inc
pop
cmpsb
jmp
push
cwtl
adc
cmp
ds
or
loope
test
rorl
test
inc
mov
adc
sbbl
nop
mov
insb
test
mov
push
add
mov
ja
ret
push
mov
mov
lock
fldt
ret
xchg
xchg
idivl
cmp
fwait
lea
inc
mov
test
or
pop
cmpb
daa
add
jo
and
or
and
mov
mov
pop
xor
stos
or
iret
jp
lock
cmp
test
mov
nop
les
sbb
add
push
out
movsb
mov
mov
orb
decb
push
or
movsb
xchg
test
pop
pop
rcl
lret
adc
ljmp
sbb
inc
jmp
setl
mov
clc
pop
ljmp
mov
or
pop
adc
pop
jmp
push
out
sbb
or
lods
cld
rol
add
dec
add
pop
xchg
mov
jg
and
in
or
aas
push
lds
hlt
clc
scas
in
push
loopne
sub
f2xm1
nop
mov
loopne
pop
jg
int3
test
sbb
adc
ret
xorl
mov
hlt
insl
add
les
ja
mov
lea
rorl
into
mov
mov
scas
iret
fcomp
lcall
add
les
dec
pop
push
aas
in
mov
dec
je
jmp
xor
in
fs
inc
xor
gs
and
and
add
pop
xchg
pop
or
or
push
push
xchg
mov
add
adc
loopne
nop
scas
adc
add
mov
mov
cmpl
and
ds
movaps
inc
pop
daa
pushf
in
jae
or
lea
inc
or
or
mov
dec
fwait
xor
ds
in
xchg
fs
adc
insl
pop
dec
mov
xchg
pop
add
sub
and
cli
in
mov
jae
or
iret
enter
enter
shrb
aam
jmp
fwait
lods
mov
outsb
nop
cltd
dec
jo
jge
pop
sub
fnstenv
xchg
xchg
xchg
test
add
cs
leave
dec
xor
or
rcll
dec
loopne
mov
iret
mov
inc
outsl
mov
add
sub
iret
sbb
and
push
push
jae
cmp
in
cwtl
outsb
inc
mov
xor
xchg
gs
add
mov
pop
sahf
add
adc
ret
je
push
push
jnp
test
jns
lds
lods
mov
repnz
xorl
mov
jl
stc
xchg
push
sbb
fucomip
or
adc
nop
test
lret
or
ret
sbb
inc
jo
les
test
les
jnp
add
fs
sbb
movb
adc
lods
pop
ret
in
pushf
pushf
adc
inc
aaa
fneni(8087
adc
and
jns
nop
dec
jo
cmp
jno
repnz
rclb
ss
pop
test
adc
in
nop
mov
lock
mov
add
cs
daa
stos
repz
xor
push
adc
fcoml
addb
fidivrs
add
cwtl
jl
pcmpeqw
cmp
inc
mov
add
call
add
adc
leave
jnp
jae
ds
push
je
pop
jl
mov
pop
jae
push
lcall
addr16
xor
sub
push
aaa
xor
dec
xor
mov
cmp
jmp
movl
add
and
inc
stos
test
fcmovnb
adc
mov
cmpb
pop
cmpl
adc
add
dec
hlt
pop
es
or
add
fdivr
xchg
dec
adc
aas
or
sub
ja
mov
add
inc
jge
ds
add
add
xchg
mov
pop
mov
sarb
je
cmp
add
cmp
daa
lods
mov
add
ja
push
fadds
lock
adc
into
adc
fsubs
pop
jg
mov
scas
lock
ljmp
mov
and
cmp
jo
clc
cmc
inc
inc
inc
jge
rclb
add
dec
das
mov
inc
sub
sbb
int3
sub
mov
mov
outsb
jl
jne
jno
dec
in
sbb
addr16
imul
insb
xor
pop
sbb
dec
loopne
jb
dec
ds
or
aaa
or
push
in
pop
das
movsl
fcomip
mov
jg
and
xchg
or
or
lcall
inc
sbb
ror
ret
es
jge
fidivl
jns
add
out
sbb
ret
sub
ss
daa
fildll
inc
jb
sub
and
flds
dec
pop
rcrb
repnz
sub
jae
push
adc
jb
emms
out
lods
data16
adc
imul
push
pusha
mov
adc
jge,pn
sbb
jae
test
das
push
cltd
sub
subps
sbbb
mov
push
movl
mov
push
mov
loop
aas
dec
mov
mov
inc
cmp
jl
xor
xor
adc
adc
inc
jmp
mov
inc
jo
cmp
add
clc
lahf
jge
add
push
sbb
ljmp
je
test
or
mov
jb
add
sub
int
xor
aad
rclb
ret
jge
test
aam
cmp
adc
out
sbb
daa
ss
movsb
std
fwait
inc
inc
add
mov
sbb
sub
sub
cmp
jbe
dec
adc
sub
inc
mov
mov
rclb
mov
mov
cwtl
inc
ret
icebp
movb
or
outsl
xor
je
stos
inc
inc
inc
mov
addr16
hlt
pushf
fs
ss
stc
pop
dec
sub
pusha
setae
push
pop
das
push
dec
xor
jns
cwtl
jge
int
loope
dec
lods
pop
jge
adc
push
mov
fwait
jmp
loope
sbb
mov
sub
xchg
mov
inc
mov
inc
sti
stos
dec
lods
test
jne
dec
add
sbb
pop
or
or
clc
pop
ja
pop
xor
inc
mov
imulb
dec
icebp
jle
movl
dec
repz
add
push
sbb
dec
data16
leave
data16
lahf
test
push
mov
call
or
jmp
mov
movsb
pop
or
xchg
outsl
hlt
inc
loopne
nop
adc
add
mov
mov
pop
mov
es
mov
and
adc
dec
repnz
popa
mov
inc
xchg
mov
inc
inc
cmp
pop
jne
lea
addr16
lea
scas
pop
mov
imul
cmp
xchg
dec
mov
or
mov
jne
jmp
push
pop
pop
add
mov
sbb
inc
jo
arpl
add
or
out
das
flds
stc
push
lret
mov
add
add
pop
inc
test
jecxz
test
adc
jne
push
add
push
lock
mov
pusha
add
mov
rolb
mov
inc
inc
call
cmp
mov
int3
push
in
cmpsl
or
mov
mov
sbb
in
xchg
xchg
add
insb
das
mov
loopne
add
fsubl
pop
repnz
test
aam
aam
cmp
mov
inc
mov
mov
leave
pop
ret
repz
sub
mov
ja
inc
clc
sub
mov
sub
jge
inc
push
cmp
enter
pusha
or
adc
roll
sbb
pop
jb
les
ret
rorb
sbb
adc
hlt
mov
and
mov
pop
lea
push
mov
pop
and
test
dec
test
mov
add
inc
jb
stos
rol
mov
je
movl
loopne
test
jg
insl
add
fs
scas
pop
push
and
add
pop
jo
add
xchg
push
punpckldq
das
and
fwait
es
sbb
lahf
cmp
sub
daa
mov
push
cmp
out
clc
jno
fnsetpm(287
add
mov
cli
sbbl
aam
inc
or
je
cmp
add
xchg
ret
repz
lea
popa
das
jo
jmp
cltd
sub
adc
daa
subl
mov
mov
inc
mov
sbb
push
or
pushl
push
mov
pop
inc
loopne
inc
adcl
movsb
xor
sbb
adc
arpl
arpl
push
xor
mov
stos
bound
out
lock
clc
cli
test
xchg
add
pop
jp
add
add
movups
or
dec
es
push
nop
or
sbb
dec
notl
cmp
mov
std
pop
cmpb
pop
mov
xor
add
in
in
xorb
sbb
pop
mov
insb
xorl
in
sbb
test
mull
les
xor
mov
add
sti
inc
jae
inc
repz
mov
pop
shll
xor
pop
jmp
push
pusha
int3
cmpsb
pop
in
mov
std
and
pop
xchg
pushf
or
mov
cmp
push
jmp
mul
imul
gs
clc
pop
push
jo
inc
js
addr16
rcrb
roll
test
pop
dec
ret
or
fwait
ret
ds
pop
outsb
cmp
mov
push
or
cmp
andb
repnz
cmp
jne
sti
and
lods
out
mov
mov
sub
mov
push
add
mov
shld
pop
daa
xchg
popa
in
fmuls
xor
ret
in
xchg
add
ljmp
push
loopne
push
in
call
icebp
jnp
adc
pop
mov
inc
or
mov
push
mov
add
in
add
sub
add
movsl
or
pushf
outsb
cmp
pop
orl
xor
shll
clc
fiaddl
push
jno
lods
popa
sbb
adc
pop
rcrb
and
inc
cmp
incl
clc
cmp
scas
xor
dec
sbb
dec
movsl
push
push
xchg
jo
cmp
and
fcomp
aad
inc
scas
cmp
and
mov
mov
push
adc
cmp
addr16
xchg
push
mov
pop
dec
mov
pusha
adc
sbb
xchg
imul
icebp
inc
icebp
test
clc
mov
jnp
ja
je
add
mov
mov
aam
inc
clc
pop
mov
out
xchg
ret
mov
lea
mov
aas
mov
jmp
adc
inc
testl
imul
scas
orb
xchg
ja
fmuls
cmp
sete
incl
test
push
fdivrp
xchg
add
inc
decl
cmpl
adc
and
shr
sbb
popa
scas
clc
or
cs
ja
pop
outsl
lock
daa
sub
scas
add
or
cmp
cmp
add
inc
aad
fsubl
xchg
inc
lahf
ret
orb
fwait
shlb
ja
fcoml
xor
inc
xor
dec
mov
mov
stc
rorl
and
mov
and
mov
pop
xor
pop
adc
sbbl
sbb
xor
dec
or
pusha
cmpsl
or
xchg
push
gs
fidivrl
inc
xor
lods
adc
out
insb
or
adc
cmp
hlt
pop
jne
ret
adc
imul
cld
dec
test
orb
mov
int
pop
mov
fcmovnu
jge
and
shrb
mov
fwait
negb
cmove
jmp
add
jbe
cmp
int
mov
sub
inc
sbbb
xlat
and
clc
mov
xor
imul
insb
xchg
out
mov
xchg
mov
je
imul
in
fdivrl
fisubs
push
movsb
int3
jo
outsl
les
lret
cmpsb
imul
cmpsb
pop
lods
loopne
cs
pop
lods
imul
pop
mov
js
push
nop
xor
xor
shlb
mov
in
lcall
subb
insb
dec
mov
inc
mov
jnp
es
add
scas
pop
cmp
jl
repnz
imul
inc
lcall
add
imul
and
and
inc
test
mov
xor
movsb
fcoms
rclb
nop
ss
sub
cwtl
or
and
add
mov
push
cmp
mov
lods
push
or
hlt
cs
lock
in
lcall
call
inc
in
mov
pop
pusha
add
mov
push
int
insl
nop
sub
mov
sarb
int3
cwtl
enter
dec
ss
mov
adc
push
imul
inc
xor
push
mov
mov
jae
imul
add
jge
xchg
mov
test
mov
adc
in
sbb
hlt
hlt
es
mov
out
and
mov
aas
inc
mov
xchg
pop
insb
pusha
xchg
add
cmp
mov
add
jl
dec
xor
adc
sub
orb
or
and
add
or
mov
and
xchg
dec
mov
dec
xor
mov
in
cmp
repnz
cmp
lock
fildl
mov
jle
dec
mov
cmpb
add
mov
add
leave
imulb
mov
jo
mov
xor
out
js
repnz
cmpsl
out
push
push
xor
sbb
jnp
mov
xchg
sub
insw
int3
push
jae
or
lcall
adc
dec
rclb
rolb
jns
push
in
loopne
or
mov
cmp
inc
mov
jo
mov
xor
push
test
xchg
inc
sub
addr16
imul
inc
enter
les
adc
dec
loope
inc
and
enter
add
adcl
nop
and
add
mov
lea
cmp
pop
clc
clc
push
jecxz
mov
clc
lea
jns
add
incl
cmc
sbb
adc
mov
std
and
jae
jecxz
xlat
add
or
ret
pop
xor
pop
or
sbb
xorb
ljmp
jae
enter
xor
jecxz
jecxz
xor
sahf
popa
nop
fucomip
add
add
popf
je
inc
or
in
pop
in
pop
stos
add
or
xor
inc
jp
out
stc
mov
stos
nop
mov
push
mov
add
or
ss
mov
in
sbb
add
cmp
es
adc
push
xlat
cmpps
mov
and
aam
pop
mov
aam
dec
cs
xchg
dec
sahf
fs
in
xchg
dec
cs
das
mov
out
pop
jb
rorb
pop
jb
and
enter
shlb
and
jl
enter
fsubr
inc
fsubl
xchg
out
loope
loopne
dec
jae
xchg
fs
loop
jb
xor
cwtl
test
sbb
xchg
lock
sbb
mov
hlt
xchg
inc
sub
ljmp
rclb
push
cmp
cmp
es
add
outsl
je
fs
xchg
inc
push
jne
dec
jne
inc
imul
adc
outsl
fs
outsb
dec
jb
jns
xchg
add
jb
insl
jo
inc
jb
and
out
insl
push
je
push
push
cmp
or
mov
mov
aas
sarb
dec
enter
jae
push
inc
jns
mov
aas
in
daa
cmp
out
lock
ret
pop
xchg
mov
mov
ret
aas
xchg
fadds
outsl
ret
and
push
inc
popa
add
adc
and
rorl
sbb
fdivs
cmpsl
push
inc
jno
call
mov
fcomps
add
sbb
pop
mov
cmpsb
xor
sub
pop
fs
in
lock
inc
and
add
push
cmp
xchg
inc
jne
dec
inc
adc
inc
cmp
or
dec
or
jae
sbb
fldenv
enter
insb
jmp
fsubrs
sbb
mov
cmp
jb
rclb
and
es
xor
ds
adc
movl
cwtl
cwtl
data16
pop
push
inc
jb
lret
cld
jge
xor
cld
inc
popa
mov
pusha
jmp
ds
leave
pusha
jmp
xchg
fs
inc
insl
sbb
mov
sbb
add
repnz
sub
iret
sub
cwtl
add
xchg
inc
jb
sbb
adcl
adc
dec
insl
jo
xchg
add
push
jb
clc
push
pop
add
and
cmp
pusha
in
push
mov
test
int
push
sbb
push
ds
sub
aaa
mov
mov
jg
out
test
push
xchg
shufps
test
xor
cs
pop
aaa
and
leave
in
add
call
adc
pop
add
add
scas
pusha
or
call
xor
clts
daa
in
jl
in
jp
add
out
dec
inc
add
fists
out
inc
cs
inc
and
test
xor
scas
inc
mov
pop
repnz
mov
push
lock
sbbl
or
xor
das
aad
repnz
cmp
and
jg
adc
sbb
je
daa
clc
sub
jae
div
jno
loope
sub
dec
je
sbb
or
fnstsw
lahf
push
xchg
daa
loopne
fcoms
add
ja
add
or
mov
xchg
dec
pop
fmulp
clc
mov
xor
fs
pop
pop
hlt
add
data16
lock
lock
mov
in
xchg
xor
jl
mov
adc
inc
fdivl
lret
jae
xor
loopne
and
fs
in
negl
add
sti
int3
or
inc
push
test
jae
les
jecxz
push
xchg
rolb
xor
cld
jle
movsb
sarl
pop
repnz
rorb
dec
loopne
or
push
and
sub
popa
loopne
aam
movl
clc
xchg
xchg
je
sbb
jnp
pop
add
adc
fadd
pusha
pusha
cmpsl
sbb
xor
pusha
jl
and
mov
push
and
insb
cmp
dec
int3
jnp
xchg
sbb
inc
jmp
inc
xor
test
add
cmp
or
test
scas
js
and
adc
jns
daa
cmpsl
push
and
out
data16
pop
pop
std
dec
sbb
roll
push
roll
shl
std
or
pop
setg
dec
jmp
scas
jge
out
jbe
xor
cmp
addl
insl
jp
ret
std
jmp
pushf
xchg
jne
pushf
xchg
sahf
xchg
xchg
scas
jecxz
movsb
aam
mov
mov
scas
push
cld
jecxz
pop
in
pop
mov
call
cld
test
xor
inc
ret
testb
aaa
push
add
pop
adc
jecxz
pusha
sub
push
and
xlat
or
test
xorl
adc
mov
int
dec
xchg
clc
jmp
and
repz
lock
or
jl
inc
xor
lea
cmpb
inc
add
sahf
jl
mov
aam
and
shr
lea
pop
adcl
inc
sub
inc
pop
dec
inc
sbb
sahf
jmp
inc
lea
mov
mov
cwtl
mov
dec
repz
dec
and
mov
sub
in
test
push
jbe
in
cmpb
mov
mov
lea
ret
sti
xchg
xchg
adc
or
xor
pop
repnz
push
inc
ret
jg
pop
ficoml
sub
or
adc
push
adc
sti
xor
div
and
jae
cmp
sbb
and
subl
inc
shll
nop
and
or
daa
jae
mov
lldt
push
or
je
ret
aas
out
inc
repnz
loopne
clc
mov
jb
fimull
roll
inc
jae
or
rcr
xor
or
adc
in
dec
enter
loopne
and
xor
push
xor
xchg
std
jecxz
sti
clc
push
push
jo
or
mov
pop
inc
inc
inc
fisttpl
adc
out
out
dec
call
in
cmp
aaa
mov
outsb
cmp
xchg
rcrl
out
xchg
jmp
push
fcmovnb
arpl
add
push
pusha
repnz
inc
cmp
add
mov
adc
decl
push
adc
cmpsl
pop
dec
jns
pop
add
sbb
clc
bnd
add
mov
sahf
es
or
and
clc
leave
sbb
iret
inc
out
jmp
js
add
aas
sub
ffree
sar
sub
or
pop
push
in
add
lock
je
pop
jne
imul
push
pop
xchg
notl
inc
add
or
or
faddl
mov
div
lock
and
xor
fdivr
xor
shlb
push
mov
cmp
fstpt
rcll
ja
add
in
stc
out
pop
mov
rol
xchg
ret
xor
push
and
fadds
xor
daa
leave
and
fcoms
xchg
dec
xor
dec
push
ret
sub
jb
dec
leave
dec
lods
xchg
dec
xchg
push
sti
add
inc
mov
adc
loop
call
popa
int3
jo
mov
testl
push
fisubl
jl
into
xchg
xor
add
jbe
pop
push
push
pop
jo
adc
outsl
push
shll
inc
inc
add
popf
std
sbb
hlt
fldenv
jl
inc
lds
jl
das
add
mov
popa
sbb
es
loopne
or
push
ss
inc
fs
jbe
jmp
mov
sbb
and
xadd
shrb
or
dec
inc
jmp
cmp
shl
test
dec
out
pop
shll
ja
push
push
cld
roll
fsubr
xor
pop
ss
sbb
push
push
push
nop
gs
add
js
dec
rcrl
push
mov
fsub
mov
push
sbb
add
add
outsl
shlb
call
xlat
pop
cltd
dec
pushf
mov
cmc
in
das
mov
out
enter
scas
dec
pushf
add
stos
cld
fsts
pop
mov
fnsave
adc
addr16
das
cmp
or
sub
imul
mov
dec
mov
sub
hlt
sbb
adc
in
xor
aam
jp
and
jb
push
testl
jmp
and
mov
je
inc
aas
add
imul
sub
adc
ljmp
add
xor
jmp
data16
iret
arpl
adc
imul
lcall
inc
push
in
clc
push
xlat
adc
in
fbstp
or
sti
std
jg
sub
xor
lret
hlt
lea
and
cmp
dec
xor
mov
mov
pop
in
inc
dec
push
fdivrp
mov
xchg
pushf
call
out
sti
mov
add
aas
adc
lret
or
add
outsl
fildll
adc
jmp
xchg
sub
cmp
and
pop
sub
aam
jg
mov
in
inc
subl
add
aam
jmp
outsl
or
aam
add
adc
and
test
call
or
popf
jo
inc
iret
mov
xchg
push
mov
scas
xchg
jl
add
add
push
pushf
dec
arpl
lcall
push
add
push
fwait
cmpsb
imul
dec
shrl
mov
lcall
popa
jo
push
subb
mov
jp
imul
rcrl
movswl
sbb
mov
fld
jle
fistps
lods
push
sar
cmp
pop
mov
nop
inc
sbb
inc
leave
fstp
push
add
push
push
out
xor
nop
or
mov
shrb
sbb
pop
mov
sahf
mov
xor
ss
mov
in
push
sar
test
cwtl
je
dec
je
jmp
outsl
sbb
gs
sbb
clc
or
test
push
push
mov
mov
cltd
clc
inc
mov
in
adc
add
ja
mov
mov
add
cmpsb
jns
imul
popa
subl
xor
mov
fstps
sub
fildll
xor
push
pop
xchg
fwait
and
pusha
test
mov
mov
jns
mov
fisttps
xor
sub
test
jmp
or
mov
jmp
add
or
fistpll
cmp
and
in
pop
and
loop
add
add
sub
sbb
mov
fildll
addr16
jb
mov
or
add
sub
cs
jge
add
xchg
xor
adc
pop
rcpps
xor
inc
pushf
and
orb
inc
mov
add
sbb
fldt
test
pop
push
fs
push
fs
pop
xchg
jl
sbb
dec
add
push
dec
adc
pop
and
sahf
sbb
loope
cld
mov
xchg
aam
lods
or
add
cltd
rcr
sti
sbb
add
enter
jmp
repnz
add
dec
enter
negb
add
pop
rol
mov
push
cmp
movsbl
cmp
push
dec
xor
add
cmp
stos
fs
aas
add
lock
out
push
mov
repnz
add
repnz
daa
push
xlat
loopne
loope
jg
test
fistl
gs
inc
jo
mov
and
and
call
lret
push
xchg
inc
lahf
adc
push
mov
pop
lcall
lcall
loopne
insb
pop
mov
mov
nop
adc
mov
ja
adc
xlat
das
in
or
mov
or
push
xchg
xchg
gs
xchg
test
xchg
xchg
inc
push
fwait
pop
xor
sbb
cmp
push
adc
in
pop
sub
or
aaa
test
adc
jbe
shlb
sbb
scas
xor
inc
aaa
add
dec
or
sbb
or
xchg
scas
in
in
dec
mov
lds
or
xchg
or
shll
adc
je
in
in
fadds
in
test
enter
ret
inc
loop
popa
dec
call
in
adc
aaa
mov
push
xor
pushf
adc
sbb
sbb
inc
in
les
hlt
adc
mov
leave
and
call
and
ja
add
loope
or
insl
shl
sbbb
dec
ja
fstl
mov
mov
pop
xchg
or
lds
imul
or
sub
fwait
cmpsb
imul
leave
sub
jmp
cld
pusha
lcall
dec
enter
stc
lock
adc
mov
rclb
cmp
ss
aam
mov
enter
push
xor
push
xor
clc
aam
and
mov
mov
mov
shlb
sub
cmp
jnp
andb
jge
and
dec
cs
inc
xchg
test
sahf
gs
pop
cmp
push
fs
mov
cmpsb
dec
fidivl
push
daa
repnz
lods
imul
push
xchg
in
stos
pop
rorl
xor
adc
push
imul
adc
lods
in
mov
or
jmp
and
or
insl
and
in
add
jno
js
inc
out
sub
loope
sbb
mov
adc
cmp
enter
cltd
or
outsl
lcall
pcmpeqw
cmp
sub
add
mov
dec
pushf
pop
adc
mov
cmp
sbb
lock
pop
jle
mov
loopne
add
nop
or
fs
mov
or
bound
popa
mov
pop
dec
jo
sbbb
mov
enter
out
sub
sub
into
pop
aaa
pusha
push
rolb
outsl
mov
es
nop
stos
testl
test
popf
jns
nop
add
add
jp
lret
inc
cmpsb
cld
cli
push
add
and
shll
jl
add
lcall
cli
imul
in
rcl
aaa
mov
add
inc
pop
xchg
dec
or
jnp
xchg
sbb
adcb
inc
out
rclb
inc
add
jbe
scas
sub
mov
imul
rorb
sbb
sbb
sbb
mov
and
lds
lahf
aad
lcall
sbb
das
add
fadds
and
add
push
add
int3
fcmovnbe
ss
cmpsb
repnz
and
adc
cmpsb
jns
imul
add
imul
pop
int
sbb
flds
shrl
pop
sbb
add
sbb
dec
jmp
ss
adc
adcb
pop
dec
jno
cltd
fistpl
push
pop
inc
lds
add
rorb
add
and
mov
pushf
mov
pusha
sub
pop
or
mov
nop
pop
les
sub
mov
push
xor
clc
imul
jmp
dec
call
and
pop
dec
rclb
sti
add
add
sbb
ffree
xlat
adc
inc
stc
mov
cwtl
or
mov
sbb
pop
pop
cmp
jnp
add
nop
xchg
adc
xor
add
addl
add
shll
inc
dec
pop
fnstenvs
pop
cmp
jns
mov
push
sbb
es
push
loopne
push
xor
test
pop
je
xchg
or
loope
add
adc
fildll
inc
push
fs
cltd
add
imul
out
pop
or
popa
cmpsl
popf
mov
rolb
mov
and
mov
pop
push
mov
ja
add
adc
inc
dec
sub
scas
sub
add
test
xchg
pop
and
pop
loopne
je
lods
sbb
push
lea
fcompl
pop
loope
imul
or
mov
sbb
push
into
push
dec
shll
ret
les
xchg
scas
loope
sbb
xchg
adc
push
insl
jno
sub
cmp
inc
cmc
inc
in
popf
nop
mov
icebp
sub
jmp
or
in
mov
mov
push
sub
push
push
insl
jmp
icebp
mov
xor
and
pop
jmp
imul
cmp
dec
adc
test
in
fwait
mov
xchg
mov
xor
xchg
nop
inc
ss
shll
imul
mov
or
push
dec
sbb
gs
or
sbb
add
sbb
push
cs
mov
mov
and
fildl
push
xor
test
filds
insl
in
dec
nop
popf
lcall
sbb
add
and
mov
cmpps
setbe
loopne
push
jb
popf
jl
int3
mov
dec
test
ret
cmp
pushf
test
xchg
cld
pop
enter
pop
pop
add
or
push
cmpsb
push
mov
fs
jecxz
mov
adc
or
push
ret
inc
push
and
imul
push
lock
or
xor
mov
push
and
push
inc
jb
jb
sbb
cmpsb
sub
xchg
add
pop
push
lcallw
xchg
mov
mov
outsb
push
jle
push
pop
push
ss
mov
adc
sub
in
adc
cmpsl
adc
pop
and
leave
or
sub
fildl
call
lds
or
sub
addr16
mov
jb
or
sub
enter
push
mov
jb
adc
xchg
pop
or
xor
dec
sbbb
jns
xor
in
or
pop
and
xor
dec
arpl
inc
jae
lcall
pop
mov
imul
sub
mov
adc
cmp
mov
mov
jb
gs
xchg
stos
loop
pop
or
and
in
or
or
test
mov
or
pop
push
leave
mov
mov
mov
mov
xor
and
js
das
fs
or
fildll
andl
jb
pushf
xchg
push
fildll
xchg
pop
enter
sub
pmaddwd
xchg
enter
and
insl
loopne
add
and
cmpsb
imul
add
push
fnstenv
adc
xorb
jae
add
add
leave
mov
push
or
push
adc
in
or
or
and
mov
frstpm(287
adc
add
inc
insl
adc
xor
mov
xor
sbb
insl
mov
or
aaa
aas
inc
mov
jae
pop
adc
add
ss
pop
pushf
sub
in
pushf
jle
mov
and
pop
lds
in
std
and
fcmovbe
adc
and
dec
shll
push
dec
imul
andl
lods
pop
pop
mov
rorl
cmp
cmp
lods
lods
cmp
push
mov
push
sub
xor
mov
xor
pop
rolb
and
jae
mov
shr
fdivl
or
mov
outsl
sbb
cmpl
adc
pop
sbb
leave
add
inc
daa
popf
push
mov
mov
xchg
or
jle
scas
dec
je
and
enter
adc
ds
call
lock
lret
mov
movsb
hlt
add
movsb
rorl
add
popf
pop
mov
mov
pop
test
jns
sub
in
insb
sbb
add
inc
inc
pushf
adc
inc
add
sahf
or
cld
xchg
cmp
mov
pop
ja
add
lret
cwtl
aaa
xchg
inc
xchg
pop
hlt
and
popf
sarl
push
sub
mov
push
or
pop
xchg
inc
mov
jb
inc
rcrl
inc
and
sbb
or
jns
pop
or
and
push
loope
adc
push
sbb
adc
xchg
cmc
or
addl
pop
adc
cmc
jle
lret
pusha
lods
jo
arpl
sbb
sbb
adc
pop
push
or
mov
adc
out
sub
nop
sar
cmp
mov
inc
add
int
imul
fnstenvs
pop
sub
push
dec
sub
lods
jns
es
clc
adc
mov
sbbb
xor
and
add
pop
add
xor
inc
rorl
pop
inc
scas
fidivs
mov
pusha
xor
mov
sbb
fildl
sbb
inc
hlt
nop
inc
push
in
lock
inc
hlt
pushl
add
push
sbb
mov
push
into
push
or
loopne
xchg
mov
adc
in
push
fsubl
xchg
mov
adc
in
mov
sbb
aam
aaa
rcll
pop
xor
shlb
insb
and
sub
mov
push
jmp
ret
fmul
cmp
jne
test
fsubs
nop
nop
push
dec
dec
push
les
sub
sbb
shrb
rol
test
add
sarl
lcall
sub
pop
xorl
push
mov
pop
adc
shlb
mov
sbb
inc
mov
mov
rorl
adc
or
jno
push
shrl
cmp
orb
cmp
ss
jecxz
xor
loopne
mov
xchg
shll
jae
mov
xor
ret
jno
add
ret
scas
loopne
push
xchg
popl
dec
mov
ret
ret
mov
gs
leave
sub
push
mov
or
mov
es
enter
cmp
or
mov
ret
push
sbb
sub
in
out
jmp
jns
aad
or
xlat
adc
cmc
push
mov
push
adc
fsubrl
push
cmp
mov
dec
add
lods
push
das
inc
repnz
push
and
pop
das
das
adc
loope
push
xor
rcl
sbb
sub
nop
xor
fs
or
out
inc
cmp
mov
repnz
push
xor
imul
out
xor
dec
es
rolb
fcmove
xchg
pushf
jle
xor
xchg
dec
roll
out
or
and
lcall
xchg
mov
push
es
push
jns
ss
adc
das
dec
xor
pushf
les
jb
add
add
push
mov
dec
push
xor
push
xor
inc
push
or
test
or
cmp
cmp
inc
cmpsb
or
in
in
es
jno
aaa
loopne
nop
dec
ds
movsbl
mov
fdivs
ret
test
aaa
aam
lods
adcb
add
xchg
repz
and
subb
mov
or
aaa
cmp
test
jns
jno
fs
inc
xor
cmpsb
imul
cmpsb
insl
in
clts
mov
movsb
or
xor
rorb
rclb
or
xor
jge
push
lods
test
mov
nop
sbb
ss
in
pushf
push
mov
or
test
and
pop
test
movsb
aam
push
es
enter
mov
cmp
dec
sbb
cwtl
jno
adc
test
aaa
outsl
out
rcll
aaa
and
es
mov
sbb
cmp
outsb
push
add
mov
adc
xchg
add
test
jns
test
sbb
addr16
int3
loopne
adc
nop
pop
mov
adc
adc
add
lods
or
jo
add
gs
les
std
xor
xchg
cmp
adc
je
outsb
push
out
push
je
jmp
sub
or
or
or
inc
cmpsb
ss
popf
add
js
jmp
cmc
or
cmp
fldt
pop
push
sbb
aas
test
mov
or
in
add
xor
push
mov
stos
shlb
mov
push
mov
lret
xchg
mov
push
lea
shrl
xchg
push
adc
shrl
pop
data16
sub
outsb
inc
push
xor
xchg
dec
or
xor
inc
pop
test
cmpsl
insb
aaa
or
repz
mov
pop
outsb
dec
mov
rol
clc
jecxz
jle
add
pop
sbb
pop
jmp
movw
ja
push
xor
dec
push
or
jae
lahf
xchg
jg
xchg
and
push
adc
mov
mov
cmpb
adc
inc
aas
sbb
scas
mov
lahf
push
pop
test
shrb
xchg
push
and
fs
stos
lahf
push
push
xor
xor
or
add
and
jae
inc
dec
xchg
lcall
pop
or
add
pop
push
add
js
xchg
subb
or
inc
repz
push
adcb
jmp
in
cvtps2pd
or
sub
repnz
mov
push
pop
xor
mov
or
adc
das
pop
sub
nop
movl
sbb
and
and
ss
movsb
pop
mov
loope
icebp
or
cmp
loope
insl
std
andb
shl
and
mull
pop
mov
adc
addr16
xchg
cmpsl
mov
andb
adc
add
inc
les
cmpl
ja
jmp
and
fmuls
jb
and
jne
stc
add
mov
add
push
rcll
and
sub
push
jp
and
lmsw
and
jecxz
jmp
out
jmp
and
adc
invd
jb
pop
mov
inc
cmp
fisubl
mov
mov
xchg
xchg
lock
dec
out
inc
insl
jo
jns
add
sub
jne
push
pop
leave
mov
popa
and
daa
pop
pusha
lret
sub
mov
xor
aas
insb
add
inc
outsl
jne
mov
inc
jne
jb
outsb
arpl
test
popa
je
dec
insb
cwtl
lods
xor
pop
sbb
and
hlt
xchg
xchg
mov
pop
push
aas
adc
xchg
aas
push
outsb
imul
inc
arpl
push
lock
and
inc
iret
push
mov
mov
inc
jns
push
push
mov
push
pop
jae
sbb
daa
add
aaa
ss
mov
and
adc
xor
cmp
aas
test
out
mov
pushl
leave
scas
jmp
mov
xlat
daa
push
shrl
fildll
sti
add
mov
inc
lcall
lea
aas
cmp
test
lea
add
cmp
stos
sbb
pop
sbb
lock
sub
mov
js
cmp
xchg
sbb
jle
test
push
or
sbb
enter
add
jne
sub
test
push
adc
ret
lret
outsb
adc
cmp
inc
mov
test
push
gs
push
shll
xor
inc
inc
mov
add
pop
popa
jle
mov
cli
xchg
xor
rolb
imul
movsb
sub
inc
fwait
sub
pushf
push
mov
inc
mov
sub
das
xor
add
push
pop
push
cs
call
out
jb
pop
or
pop
pusha
inc
push
enter
fdivl
mov
dec
movb
orb
mov
push
adc
and
pop
pop
into
stc
inc
and
jnp
insl
aam
daa
daa
std
daa
aam
std
jge
cmp
je
out
insl
jbe
adc
ds
clc
xchg
inc
adc
mov
imul
jg
push
shrl
push
add
mov
subb
pop
inc
sbb
sub
sub
orl
sub
dec
pusha
mov
inc
rorb
inc
push
sub
js
add
call
sbb
xor
pushf
add
repz
inc
mov
shr
daa
inc
mov
js
push
jle
sbb
les
cmp
mov
es
add
mov
loopne
lods
add
pop
ret
rorb
mov
jecxz
loopw
sbb
test
mov
cmp
pop
push
mov
cmpsl
dec
movsb
ret
inc
enter
xor
or
jbe
add
rcl
lock
add
jle
adc
and
js
dec
inc
sub
pop
cmp
shufps
mov
jno
inc
mov
adc
ds
in
lods
pop
fnstenv
loope
inc
adc
or
lock
sub
es
jb
mov
inc
jp
push
push
push
jl
inc
xor
inc
sbb
subb
or
xchg
lock
sbb
add
mov
cld
push
inc
push
or
sbb
mov
mov
xor
adc
sarb
dec
in
pop
sar
nop
push
js
outsl
inc
cmp
mulb
incl
push
mov
add
sub
js
xchg
cmp
js
nop
aas
inc
push
sbb
test
jno
and
repnz
or
inc
out
fcmovne
inc
push
sbb
sub
mov
cmpb
mov
adc
dec
adc
fsubr
mov
and
sub
nop
lods
mov
cmp
sbb
mov
scas
cmp
xor
add
xchg
cmp
clc
mov
sub
js
test
imul
inc
dec
lcall
dec
dec
dec
scas
nop
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
cwtl
cltd
lcall
popf
sahf
dec
dec
dec
dec
lahf
addb
addl
xchg
dec
dec
mov
inc
inc
enter
xchg
dec
inc
inc
inc
enter
nop
scas
pop
dec
popa
sub
rol
pop
xchg
daa
push
add
xchg
mov
xor
jge
add
adc
ret
mov
mov
push
cli
decl
adc
sbb
test
jne
add
idivl
jmp
das
inc
dec
xor
cmp
jle
dec
in
adc
mov
or
fs
pop
fildll
mov
sti
jge
add
pop
nop
divl
sub
aam
sub
mov
icebp
dec
jo
test
mov
adc
jl
cmpsl
or
roll
mov
sbb
mov
sub
loope
imul
jmp
mov
cmp
mov
arpl
add
sbb
lds
mov
std
jle
jmp
and
jne
jmp
cmp
cmpl
insb
sbb
test
out
nop
jg
out
mov
mov
mov
cmpb
je
fistps
push
jle
lar
decb
ja
movsl
jg
dec
lret
adc
sbb
xchg
mov
xchg
rorl
out
jnp
mov
add
jae
or
mov
mov
jg
and
mov
dec
sti
sar
aaa
mov
in
fisttpl
lea
push
adc
mov
mov
cmpb
ja
dec
sar
shll
testb
call
out
pop
jns
lock
mov
or
push
mov
push
lea
test
or
add
call
dec
fwait
xlat
sbb
lea
add
out
push
into
inc
mov
lods
cmp
fwait
mov
stos
mov
sub
test
mov
les
andl
cmp
pop
insb
popf
push
push
fistps
es
mov
inc
mov
add
mov
ja
dec
inc
sbb
mov
xlat
dec
icebp
sub
leave
xchg
loopne
cmpsl
dec
loopne
dec
push
pop
mov
mov
mov
xor
testl
cltd
adc
adc
loope
jnp
int3
pop
xchg
adc
push
dec
pop
adc
das
div
xchg
dec
add
cmpb
or
bound
jp
outsb
sbb
and
lcall
xchg
in
xor
incl
and
mov
cmp
sbb
jmp
xchg
add
mov
jl
movsb
and
test
cld
xchg
cmp
mov
xor
iret
lods
pop
ja
dec
pop
test
dec
sub
add
dec
cmc
and
xor
dec
jnp
cmp
pop
lock
adc
clc
mov
and
fimull
loop
inc
fldt
fstps
sbb
xchg
adc
push
stos
push
inc
fiaddl
fadds
dec
jnp
jge
adc
or
cmp
or
mov
pop
lret
add
in
rorl
jge
stos
mov
aaa
or
xchg
dec
test
shr
mov
lcall
fistl
repnz
push
fistl
adc
fistpll
outsl
xor
sub
inc
cmp
push
mov
lcall
push
shll
cmp
jmp
add
subb
jmp
or
pop
ret
jno
xchg
pushf
jmp
pop
xor
mov
jp
jns
jno
pushl
outsb
sbb
pop
jl
add
call
mov
inc
mov
or
xchg
out
xchg
test
mov
je
pop
adc
xor
or
dec
add
fnsave
sub
icebp
jbe
fnstcw
cltd
sti
fstps
flds
mov
fdivrs
sahf
and
jmp
inc
fwait
or
dec
mov
mov
call
aad
rcl
pushf
sbb
dec
repnz
sub
pop
mov
dec
pop
rcrb
aas
xor
pushl
inc
sub
or
dec
push
dec
push
dec
pop
inc
fisubs
push
dec
or
insb
adc
fs
invd
dec
push
gs
imul
repnz
add
inc
add
or
ja
ror
gs
insl
pusha
daa
imul
andl
into
int3
push
or
pop
pop
js
jecxz
inc
push
mov
and
outsl
mov
mov
pop
push
fimull
mov
or
les
sbb
and
adc
and
or
add
ret
push
insb
and
outsb
fistl
jmp
and
dec
test
adc
shlb
jae
sub
insl
pushf
or
pop
lods
cmp
xchg
mov
mov
add
cld
push
shl
adc
adc
imul
andb
jg
dec
sbb
scas
movsl
sub
daa
add
jae
jbe
out
negl
or
emms
jae
in
iret
repnz
shrl
inc
cmp
in
add
xchg
div
nop
mov
imul
fstpl
or
jnp
mov
stos
pop
push
ss
je
out
nop
inc
push
sbb
int3
enter
fs
sarb
mov
sbb
test
call
in
test
xchg
xchg
ror
push
pop
xor
fs
js
dec
jp
clc
fisttpl
inc
imul
imul
fs
gs
es
je
outsl
push
pusha
sbb
sbb
in
jnp
adc
dec
outsl
inc
insb
outsb
sbb
fbld
xchg
data16
insb
jns
push
dec
sbb
test
jg
fisubs
pop
shl
pop
aaa
push
push
je
xor
mov
insb
or
cmpsl
or
rcrb
cmovge
fs
adc
test
push
or
testl
jecxz
roll
rclb
or
je
add
fldt
gs
nop
xorb
or
or
cs
dec
gs
jae
out
pop
cwtl
adc
mov
jmp
sbb
jne
mov
imul
std
fucom
jns
push
imul
sub
loopne
lods
cmp
xchg
enter
add
add
push
ds
insl
add
divb
and
push
aad
testl
mov
in
ds
lds
mov
push
inc
xchg
jo
ss
scas
ds
lea
daa
or
or
sub
outsb
xchg
ds
push
hlt
or
lods
nop
fs
fs
or
and
push
fwait
lea
mov
jmp
fiadds
sub
push
push
cmpsl
sbb
jbe
test
mov
nop
mov
je
ret
add
iret
dec
mov
int3
scas
repnz
je
add
and
push
ds
add
cwtl
fildl
push
test
inc
insl
mov
imul
mov
pop
sub
push
sets
sub
or
outsl
cmp
push
or
scas
daa
mov
stos
xor
or
adc
mov
fs
fbld
dec
sarb
push
or
push
rcrb
filds
movl
stos
or
jle
add
xorb
mov
scas
pop
or
sbb
push
push
lods
mov
mov
fcomps
mov
out
push
xorb
inc
addb
push
fistpl
cld
sbb
in
popf
arpl
pop
and
or
test
sub
or
out
lahf
jbe
dec
adc
std
jbe
pop
pop
adc
and
mov
push
pushf
sbb
push
xlat
push
fcomp
leave
imul
pop
fiadds
addl
les
mov
fucom
pop
pusha
mov
xorb
stos
lahf
clc
nop
or
cmovns
jae
fs
jo
pop
ret
jo
xor
pushf
jae
push
rclb
sahf
cmpsb
pop
scas
cmp
sbb
add
outsb
add
or
or
pop
sbb
daa
sub
mov
test
popf
fadd
in
xchg
lahf
cld
mov
adc
clc
lea
xchg
xor
sbb
fsubl
jbe
insl
imul
push
mov
or
mov
mov
in
sbb
xchg
sahf
loopne
int3
mov
pop
push
xchg
adc
nop
scas
pop
push
ljmp
inc
push
or
or
dec
and
aaa
mov
inc
mov
mov
pop
cmpsb
jns
in
xchg
dec
xchg
pop
addb
pop
cld
xchg
pop
xchg
sub
dec
ds
in
push
xchg
pop
or
test
jns
push
call
in
and
fdivrs
xchg
pop
jo
mov
xchg
arpl
mov
push
add
sahf
mov
jne
mov
push
pop
out
or
jp
pop
inc
repnz
ret
sub
cs
nop
cwtl
pop
xor
mov
pop
push
popl
mov
or
test
xor
push
jo
pop
test
fimuls
or
push
movsb
inc
jnp
out
jns
or
aam
sahf
inc
rorl
es
mov
adc
mov
mov
sahf
inc
mov
jo
movsl
sbb
cmp
pop
leave
cmpsb
adc
pop
fadd
testb
cmp
pop
mov
imul
and
testl
sbb
scas
popf
hlt
mov
mov
ds
cmpsb
in
or
xor
adc
or
adc
xor
adc
sbb
and
xor
and
jo
enter
in
ljmp
push
dec
fcoml
cmpsb
imul
mov
mov
pusha
sub
cld
push
mov
mov
mov
push
add
inc
adc
fsubl
jnp
lcall
cmp
int
sub
mov
xchg
mov
lods
mov
mov
nop
cmp
xor
and
or
push
xchg
rorb
mov
sub
mov
add
pop
sbb
mov
mov
xor
jl
dec
xchg
in
in
adc
je
test
mov
cs
stos
lret
mov
ds
clc
mov
movsb
shlb
popa
call
jmp
mov
adc
adc
inc
sete
xchg
sarb
popf
push
mov
test
ds
sarl
icebp
mov
mov
enter
stos
mov
rorb
mov
pushl
fs
fcomps
ja
inc
xchg
dec
es
aam
mov
pop
ror
or
push
std
fldl
call
int
pop
add
pop
sbb
inc
int
xor
addb
sub
insw
xchg
in
fs
sbb
add
xor
cmpsl
push
add
push
je
out
roll
xor
inc
mov
je
movsb
aad
fsubrs
int
push
mov
loopne
push
rcr
inc
mov
call
arpl
sbb
sti
aas
jecxz
incl
stc
clc
push
push
push
push
push
push
jecxz
push
xor
rcr
lcall
push
push
imul
dec
pop
push
js
imul
mov
insb
push
pop
mov
sbbl
shrl
aam
xchg
xor
pop
mov
lds
mov
cmp
mov
stos
pop
lods
cmp
xor
inc
xchg
pop
push
data16
fstpl
push
call
add
dec
imul
adc
inc
pop
mov
dec
pop
cmp
adc
pop
clc
or
sub
ss
push
mov
sub
xchg
add
pusha
pop
les
push
push
add
dec
add
adc
out
pushl
or
push
adc
adc
ss
sub
gs
push
cmp
data16
push
dec
dec
fs
loopne
test
dec
mov
mov
cmp
or
inc
adc
add
adc
pop
push
loope
lods
sub
imul
inc
pop
pop
dec
enter
jne
test
jle
lahf
pushl
pop
leave
mov
xor
xor
add
rorb
imul
addr16
jb
jne
xlat
mov
pop
inc
sbb
jae
orl
pop
mov
sub
inc
mov
ret
push
jo
in
push
mov
dec
popa
sbb
sarl
xlat
bound
lret
xorb
and
sub
mov
and
mov
std
and
jmp
aad
jle
lret
mov
out
test
adc
pop
or
les
adcl
xor
sub
sub
jne
mov
and
jmp
sbb
adc
xchg
insl
xor
add
xchg
les
or
mov
ljmp
pushf
ret
dec
push
pop
inc
cmp
and
inc
add
insb
pop
or
mov
pop
fcmovnu
xabort
jge
pop
cmp
sub
ret
std
cmpsl
repnz
dec
or
mov
enter
add
mov
jg
or
sbb
add
and
sbb
clc
mov
mov
mov
and
ljmp
ret
mov
rcrl
sbb
lcall
test
in
adc
je
inc
jae
or
push
popa
jno
mov
sbb
mov
insb
test
pop
add
pop
xchg
hlt
xchg
xor
jmp
lock
repnz
cmp
les
adc
lea
push
movsb
add
dec
into
jo
push
sub
jmp
jl
xor
adc
and
cmpsl
gs
arpl
jo
push
sub
cmp
mov
jg
mov
cmp
dec
sbb
nop
dec
inc
cmp
sbb
jo
and
pop
loop
cs
or
sub
enter
popa
add
and
and
add
lods
mov
fsubrs
imul
mov
dec
imul
out
inc
and
je
cmp
sbb
in
sbb
inc
aas
orl
inc
adc
xor
arpl
jmp
movl
ds
cmp
add
pusha
fcmovbe
mov
les
add
iret
push
lea
adc
cmc
ret
push
js
push
push
inc
push
cs
inc
dec
jne
adc
add
xchg
xchg
push
lds
inc
cltd
add
jg
pusha
sbb
push
sub
fs
cmpb
inc
sbb
lcall
xchg
dec
in
mov
jg
xchg
xchg
cmpb
ficoml
xchg
xchg
js
lods
add
inc
hlt
je
push
loopne
mov
sub
jno
mov
mov
scas
call
fsubs
jo
and
xor
jne
push
add
clc
lock
pop
xchg
inc
lahf
add
sub
jp
push
call
xor
push
fidivrs
xorl
cwtl
arpl
imul
imul
cmp
sub
cmp
push
rorl
cmpsb
jecxz
dec
cld
cmp
call
les
decb
mov
inc
mov
lock
ror
sbbl
aaa
pop
js
rcll
test
enter
daa
mov
imul
xorb
int
cmpsl
loopne
cwtl
rorb
inc
push
push
cmp
pop
inc
and
mov
xchg
xor
jno
jne
repz
xchg
mov
or
mov
xchg
dec
xchg
leave
sbb
xchg
pushf
or
inc
xchg
stos
lahf
cli
jmp
mov
cmp
jno
cmp
cmp
mov
jne
and
add
nop
push
out
xor
and
enter
mov
pop
daa
rolb
rol
lds
dec
push
sub
mov
jae
movsl
mov
mov
movsl
scas
in
das
je
sub
fistpl
pusha
pop
or
imul
cmp
sub
sub
and
add
sti
and
fisubl
sbb
adc
enter
into
test
mov
leave
xlat
inc
mov
or
movsl
add
push
ja
mov
sub
sahf
leave
push
jno
aad
or
xor
push
and
and
test
jnp
dec
sbb
bound
sbb
jnp
in
mov
sbb
sbb
push
mov
insl
push
push
xor
cmp
and
and
jbe
cltd
or
ljmp
cltd
icebp
xchg
ss
daa
jns
pop
mov
xchg
mov
jbe
mov
xor
mov
push
xchg
in
mov
dec
lds
pop
push
scas
jmp
sbb
jne
cmp
lock
les
jae
addr16
inc
xorb
gs
or
or
inc
push
test
mov
add
cmp
dec
les
scas
cmc
pop
xchg
cmp
aad
pop
outsl
shlb
add
lahf
ljmp
js
jne
sub
and
cmp
sti
js
add
imul
pop
cld
cmp
sub
ror
sbb
pop
dec
cld
mov
jmp
sti
mov
loope
cmp
pop
in
inc
lret
pop
sbb
inc
dec
cmp
jne
sbb
imul
or
sub
cmp
shl
std
rolb
fistpl
outsb
loopne
mov
testl
pop
push
subl
mov
xchg
or
push
clc
xlat
xor
aad
pop
mov
sbb
pop
xor
insb
jl
call
adc
inc
ja
push
xchg
jno
or
adc
leave
pop
sbb
add
sub
xor
sbb
test
adc
xchg
xchg
adc
jle
dec
push
xor
fcomps
test
and
mov
ja
test
mov
inc
sbbb
pop
sbb
inc
sbb
iret
or
sbb
mov
sbb
inc
fisttpll
sahf
mov
pop
adcb
arpl
adcl
sbb
out
adc
push
xor
loope
sub
andb
mov
push
or
movsb
adc
pop
inc
mov
dec
or
mov
xchg
push
sbb
loop
jns
cmp
inc
xor
cmp
mov
jo
je
mov
fadd
call
int3
or
cvtdq2ps
or
pop
pop
cmp
add
pop
fsubs
test
in
add
mov
dec
decb
dec
bnd
mov
and
iret
es
shlb
inc
sub
xchg
jmp
cmp
cwtl
adc
mov
cmp
xor
das
jo
aas
andb
bound
subl
jl
fisubs
push
adc
push
or
adc
xor
xor
jae
loop
inc
adc
inc
mov
incl
or
leave
cmpsb
adc
ja
sbb
adc
add
pop
or
test
seta
jp
push
dec
adc
inc
or
jecxz
inc
decl
push
mov
sbb
shl
loop
adc
or
pop
dec
or
and
mov
push
lcall
or
add
mov
push
sbb
and
sub
pop
pop
subl
jb
mov
inc
mov
into
in
test
cmp
lods
outsb
inc
inc
pop
or
xchg
ret
lcall
push
sbb
jl
add
sbb
jecxz
sub
lea
iret
jmp
and
pop
mov
sbb
jle
add
mov
aad
sub
jmp
inc
cmp
jge
add
adc
jne
ss
scas
sbb
leave
daa
rcll
std
adc
dec
push
jle
push
mov
sub
push
inc
add
and
mov
add
aad
mov
cmp
and
sub
mov
pop
add
test
or
mov
mov
push
sub
shl
inc
and
int3
mov
dec
mov
scas
dec
shl
pop
jmp
add
pop
loopne
movzbl
call
hlt
mov
ret
jbe
jle
lock
xor
dec
jo
sbb
adc
xchg
arpl
aam
call
dec
mov
sub
jg
dec
cmc
dec
dec
inc
sbb
sbb
adc
ret
xchg
pop
outsb
inc
shrl
xchg
icebp
roll
inc
and
add
out
xor
xchg
or
rolb
sbb
push
ja
jns
dec
xor
idivb
imul
jmp
cmp
adc
or
sub
jmp
dec
add
add
pop
roll
sahf
or
pop
jg
outsb
or
push
mov
sbbl
jnp
ficoml
and
xchg
push
and
sbb
dec
cs
in
lahf
adc
mov
push
push
cmpb
inc
enter
mov
rcr
add
mov
sub
jge
sbbb
ret
outsl
sarb
dec
mov
std
cmpsl
inc
pop
sar
mov
shl
sbb
jmp
shl
cmp
je
lcall
jb
mov
dec
je
push
dec
xlat
je
dec
push
lds
pop
mov
fcmovnbe
adc
shlb
addl
cmp
jae
dec
or
je
add
cmova
pop
push
add
mov
gs
xchg
gs
inc
adc
dec
gs
jmp
scas
mov
test
dec
inc
lods
inc
pop
pop
dec
test
jne
loopne
dec
xorl
ja
cli
pop
ja
and
add
jg
mov
add
and
hlt
dec
xchg
mov
inc
cmp
jne
inc
decl
jne
les
andl
pop
sub
cwtl
and
lock
adcb
insb
pushf
xchg
and
ss
adcb
test
sub
adc
jns
addb
lock
jae
test
mov
orl
jb
add
incl
inc
add
insb
add
cs
notl
cli
fcoml
inc
xchg
loope
sbb
test
mov
fimuls
imul
dec
sbb
jno
dec
adc
es
push
jmp
clc
cmpsb
incl
jne
jo
stos
adc
inc
imul
and
mov
inc
mov
in
sub
and
jb
adc
mov
dec
aaa
sbb
jg
mov
movsl
jae
mov
outsb
and
dec
pop
cmp
xor
outsb
mov
mov
mov
sbb
push
xchg
dec
and
test
mov
in
pop
pop
jnp
cmpsb
pop
pop
jg
cmp
shrb
and
enter
push
jg
and
jno
ja
fcompl
popa
adc
push
inc
lahf
int
pusha
jo
push
ret
fsubs
push
sbbb
push
dec
push
dec
xor
jg
add
mov
cmc
mov
jns
jbe
sub
icebp
lock
mov
lods
mov
outsl
hlt
sub
call
push
sbb
enter
cmp
sbb
or
leave
test
xchg
xchg
icebp
shlb
pop
inc
inc
push
addb
lock
pop
lock
inc
mov
mov
pop
mov
out
mov
adc
pop
push
push
push
jo
mov
or
pop
js
xorl
xchg
push
jno
mov
movsl
call
xchg
jo
pop
aaa
add
add
ss
ja
fsubrp
pop
daa
es
dec
clc
rcl
xchg
xor
repz
adc
jecxz
add
jne
lahf
sub
xor
in
dec
cmp
push
nop
adc
lcall
mov
push
mov
and
dec
shll
imul
in
mov
in
insl
xchg
pop
or
mov
xor
ret
cmp
cmp
popl
lock
pop
push
push
in
sbb
inc
sub
rorl
insl
or
in
mov
push
out
out
ja
sub
outsb
mov
cmc
sbb
inc
iret
lds
inc
shrb
cmpsl
jo
daa
pop
outsb
lock
nop
ret
and
mov
xchg
fwait
out
fwait
cld
adc
mov
pop
cmpsb
insl
pusha
stos
and
mov
aad
xor
and
and
rorl
repz
lock
xchg
data16
sbb
shrb
xorb
add
test
adc
stos
push
movsb
js
or
je
sbb
fildl
xchg
sub
orb
inc
cmp
inc
filds
ss
add
test
imul
xor
add
lret
pop
mov
in
fwait
pop
call
stos
lcall
es
lds
pop
sbb
pop
jb
in
in
mov
nop
lahf
shl
outsb
mov
mov
imul
adc
rcll
addr16
clc
lods
xor
test
push
scas
jo
sbb
xor
or
cmp
push
sarb
add
cmp
xor
adc
insb
call
pop
rorl
cmp
and
dec
js
stos
subl
mov
stos
pusha
or
data16
and
sbb
cmp
sahf
shrb
test
nop
popa
jne
xchg
add
les
lods
rolb
rorl
adc
rcrl
dec
stos
ds
cmp
cli
pop
cmovae
pop
subb
push
jns
dec
pop
or
outsl
into
push
xor
jg
lret
pop
repnz
test
adc
adc
nop
mov
mov
add
out
addr16
mov
mov
push
clc
clc
in
add
add
sub
or
imul
sub
lea
xchg
into
push
push
inc
loopne
jmp
sub
and
inc
lea
xor
jg
and
sbbb
add
mov
adc
fs
bound
dec
dec
rol
push
add
addl
push
or
mov
loope
adc
lods
push
push
fidivs
and
adc
and
or
adcl
push
mov
add
aam
lcall
cmpsl
lds
add
mov
adc
ds
sub
shlb
adc
rolb
pop
testl
pop
lret
push
mov
inc
jg
je
in
addl
insb
adc
in
repnz
or
out
mov
seto
mov
adc
mov
push
nop
adc
movsl
in
xor
rclb
divl
testl
fldcw
mov
das
or
add
or
lret
mov
sub
cmc
xchg
out
ds
and
cmpb
jne
or
dec
dec
shll
add
int
nop
inc
mov
leave
js
sbb
gs
inc
and
movb
mov
pop
cmp
inc
and
pop
xchg
movsl
and
iret
testb
cmp
inc
test
pop
pop
sbb
push
testb
orb
sbb
push
movl
outsl
and
sub
je
ucomiss
jmp
stos
faddl
adc
mov
inc
push
adc
mov
mov
ret
out
sub
adcb
mov
push
xor
xchg
mov
cmp
sbb
sbb
clc
inc
arpl
jmp
call
mov
leave
mov
mov
xchg
mov
mov
mov
or
fidivrl
aas
inc
and
and
sub
push
fs
sub
sbb
arpl
add
cmp
rorl
inc
ret
push
add
xor
inc
mov
dec
cmpsb
jno
gs
lea
inc
xor
les
addl
inc
lock
pop
nop
mov
rol
and
sub
fldl
fidivl
rorb
sub
pop
rol
pop
cld
icebp
ljmp
dec
sbb
pop
add
push
lock
outsl
mov
fists
xchg
clc
popa
pusha
movsl
lock
ficoml
xchg
sti
fisttpl
aas
mov
jmp
mov
add
adc
push
decb
out
add
rorl
add
lods
dec
jo
or
addb
add
inc
pop
out
ja
jl
mov
lret
jg
inc
push
or
cmp
push
int3
addr16
sbb
and
adc
aas
fisttpl
loop
push
sbb
lret
test
movb
mov
ficomps
shll
mov
xorb
push
mov
fwait
push
and
ss
add
movsl
int
je
lock
movsb
or
pop
pop
sub
mov
aaa
pop
je
and
lods
or
shll
cmp
or
xchg
and
divb
ret
fwait
pop
mov
xchg
or
jno
repnz
insl
stos
cmpsb
add
shll
mov
subl
pop
jne
addr16
add
inc
hlt
shr
out
inc
loope
mov
insl
or
push
jns
adc
dec
jg
sbb
pop
aaa
jl
and
cmp
jne
mov
or
or
mov
mov
sbb
jle
insl
clc
sub
xchg
add
test
daa
scas
faddl
lea
sbb
mov
rclb
je
fwait
cmp
nop
or
push
add
loope
out
dec
jne
data16
stc
lret
or
hlt
jne
stos
enter
adcb
xchg
xchg
inc
push
jge
pop
dec
repnz
add
push
add
dec
out
xchg
cmpb
sti
dec
add
sbb
popa
movsl
movsl
push
mov
cmp
pop
enter
pop
adc
sbb
es
movsb
and
mov
pop
lret
fiaddl
jno
in
int3
ss
scas
mov
into
push
push
subb
pusha
xchg
jbe
rorl
movsl
cmpl
jb
jb
pop
adc
cld
fildl
jb
sbb
js
and
jp
mov
out
add
loop
cmpsl
push
les
mov
and
cmpsl
scas
enter
xabort
mov
cmpsl
test
and
into
lea
sub
xchg
jmp
loopne
push
rorl
mov
jns
sbb
add
into
jne
sbb
mull
stc
xor
fucomp
movsl
arpl
xor
js
jle
cltd
push
popf
out
arpl
js
lcall
push
mov
lret
mov
popa
imul
xchg
out
or
dec
mov
test
add
outsl
adc
cmp
mov
push
adc
outsb
fmull
ja
popf
sbb
or
pop
int3
movsb
mov
jb
movsb
adc
adc
or
add
add
add
jbe
out
lcall
push
arpl
add
add
bound
cmp
add
jnp
jge
in
in
jmp
popf
jne
push
and
lret
stc
mov
out
mov
mov
cltd
sub
dec
mov
push
mov
sub
ja
xchg
sub
addr16
inc
inc
cmpsb
movsl
dec
loop
xchg
cmp
sub
pop
xchg
or
and
push
xchg
fdivr
lahf
sub
cs
and
pop
dec
mov
es
mov
mov
test
pop
jp
xor
call
pop
pop
fcomps
or
xchg
arpl
nop
sahf
out
loopne
test
pop
mov
mov
mov
pop
icebp
adc
dec
fistps
lds
inc
xchg
push
xchg
vmovsldup
add
in
inc
fwait
xor
fwait
xlat
sub
xchg
push
add
inc
insl
pop
icebp
nop
add
sbb
andl
shrl
icebp
mov
cmpl
mov
pop
add
pop
out
add
bound
sbb
sarb
scas
mov
or
inc
mov
add
adc
jmp
rcl
jp
test
jge
leave
loopne
lea
enter
scas
or
inc
mov
xchg
xor
lods
and
mov
adc
jnp
inc
or
or
aad
or
shrb
pop
jae
sub
mov
pop
cmp
jne
or
mov
imul
jae
jg
add
add
je
in
int
out
dec
or
adc
add
sbb
sbb
cmc
outsl
or
in
push
popl
inc
loopne
out
push
jle
or
xlat
adc
xchg
icebp
push
movsb
add
cmc
mov
cmp
pop
jp
arpl
dec
aam
dec
cmp
and
je
test
lock
mov
cmpsb
std
movsl
cmp
jge
push
sbb
add
add
inc
imul
or
lcall
add
loopne
or
les
adc
es
in
pop
xchg
cmp
je
push
jne
push
les
inc
loope
add
mov
mov
jecxz
int3
leave
popa
fildl
daa
or
cwtl
jo
xor
lods
lret
sbb
push
and
or
cmp
mov
add
sub
sub
jnp
jle
or
mov
or
and
push
pop
mov
popf
and
filds
inc
cmpsb
push
das
sarb
xchg
dec
out
sbb
leave
or
cltd
sbb
sbb
xor
add
nop
mov
dec
mov
fstl
insb
xchg
xor
pop
andl
out
arpl
fcompl
jo
cmp
xor
adc
add
inc
adc
adc
xchg
adc
and
jg
repnz
mov
adc
popa
adc
shrl
or
pop
fs
inc
adc
js
xor
mov
filds
ja
jmp
out
inc
punpckhdq
mov
adcl
adc
popa
cld
dec
sbb
int3
mov
xor
pop
rclb
das
clc
mov
fcom
or
unpcklps
push
push
xchg
cmc
lds
inc
imul
outsl
pop
mov
sub
xor
and
dec
ret
nop
push
mov
add
inc
out
or
or
or
inc
enter
out
jp
adc
sbbl
mov
fwait
cmc
jbe
mov
fidivs
lods
jne,pn
gs
jmp
xchg
push
cli
sub
mov
lea
mov
cmp
jecxz
mov
aas
lret
or
cmp
dec
push
xchg
aaa
jg
je
adc
hlt
popa
faddl
xor
add
push
aaa
adc
push
push
movb
sbb
dec
gs
push
fidivrs
cmp
dec
lods
ss
add
in
xor
xchg
outsb
std
add
addr16
jmp
mov
jle
adc
fldl2e
add
scas
pop
adc
data16
sbb
adc
dec
pop
add
sbb
jmp
in
pop
fisubrl
outsb
cmp
cld
ret
cmp
lret
nop
xor
xchg
adc
call
insb
mov
sbb
or
test
test
insl
inc
fsub
push
cld
xchg
out
jge
add
pusha
fldl
mov
cmp
insl
cmpsl
mov
push
dec
repnz
jg
mov
adc
bound
xlat
dec
das
cmp
frstor
dec
test
aas
adc
ss
lods
xor
inc
inc
add
imul
clc
bound
or
jge
push
pop
fwait
cli
aad
icebp
aas
jbe
or
mov
cmp
jl
or
mov
jmp
sub
push
aaa
add
adc
sub
andl
xchg
xchg
movl
push
cmpsl
push
lea
push
rcll
je
mov
cmp
test
jno
test
and
push
pop
das
pinsrw
mov
sub
out
add
cmp
sbb
fstl
pop
cwtl
add
add
push
test
add
je
inc
cmpsb
in
inc
lahf
sub
or
inc
cmp
xlat
pusha
movsb
nop
dec
cmpsb
inc
lea
int
lret
aad
or
and
and
add
icebp
jmp
repnz
rolb
dec
mov
add
cmp
lahf
andl
arpl
lock
adc
les
mov
add
lock
mov
dec
adc
popf
pop
movsb
in
mov
push
shrb
loopne
jo
clc
add
add
call
nop
jmp
icebp
idivl
mov
jecxz
push
jae
dec
inc
nop
ret
push
or
lret
jnp
cmpsl
ds
mov
sbb
dec
adc
lods
dec
lock
movb
adc
adc
dec
cwtl
idivb
clc
sarb
fmull
jne
hlt
aaa
push
or
jo
push
or
jo
add
jno
fimull
lea
dec
adc
fiaddl
fisubl
hlt
adc
lret
inc
out
sbb
pop
add
dec
dec
and
and
xor
rcll
sbb
push
sub
mov
sub
sbb
mov
pop
sbb
lds
mov
xor
loope
inc
fiadds
adc
outsl
mov
fstps
xor
ficoml
mov
add
push
or
push
add
out
loope
xchg
xchg
add
mov
fdivs
inc
les
pop
xor
sub
xchg
insl
lds
aam
negb
or
fstp
popf
cmp
in
push
lea
insb
or
arpl
arpl
fwait
sbb
xor
adc
nop
and
xor
leave
xor
insb
test
pusha
movsb
inc
decl
scas
in
xchg
xchg
lods
pushf
fdivl
xor
outsl
popf
lods
add
orb
mov
push
sbb
out
xchg
mov
push
sti
stos
and
xlat
es
jne
and
sarb
cmp
into
hlt
jne
lods
mov
jmp
scas
bound
xor
mov
inc
out
or
inc
xchg
pop
mov
sub
or
cmp
xor
loopne
inc
xchg
ja
xchg
fdivrl
sub
pop
cmp
xor
jle
mov
push
jmp
mov
bound
test
sbb
lds
roll
cmp
xor
xchg
dec
shlb
int3
rcrb
mov
rcrb
ja
mov
mov
xchg
sbbb
add
lret
ret
ja
cmp
hlt
push
and
or
jne
pop
addl
iret
inc
mov
sbb
outsb
sbb
and
xor
ss
cmp
push
mov
shrl
loopne
cltd
dec
jle
inc
push
add
or
scas
pop
or
ret
std
subb
in
dec
or
dec
ljmp
jae
test
cmp
in
stos
push
mov
fisttpll
in
cmp
and
fwait
xchg
add
test
hlt
push
dec
sbb
icebp
dec
pop
push
sub
cmp
outsl
adc
and
xchg
xor
and
aam
cmp
xor
js
shll
mov
in
inc
mov
movsl
mov
mov
mov
xchg
clc
xor
push
pop
gs
mov
loopne
cmpsl
mov
daa
mov
adc
jge
cltd
ja
jmp
test
mov
or
gs
jmp
sub
shlb
sub
pusha
jmp
mov
jle
testl
cmpsl
add
addb
mov
loope
out
add
jbe
mov
pushf
mov
mov
push
test
xchg
mov
cmpb
outsb
std
sub
adc
add
xor
scas
xor
shrb
sub
int3
mov
dec
push
int
xchg
jo
test
or
mov
hlt
adc
lcall
hlt
cs
jo
cmpsb
iret
push
pop
xchg
popa
mov
mov
dec
mov
addl
pop
or
pop
dec
sub
adc
test
and
pop
xor
pop
das
cmpsb
add
push
and
ret
sbb
call
subb
popa
popl
mov
clc
loope
mov
sub
and
xchg
inc
jle
sbb
je
in
or
pop
add
cmp
in
sub
push
mov
mov
mov
in
add
xor
jmp
adc
sbb
rcll
cmc
and
xor
fadds
ss
mov
or
and
fimuls
or
push
cmp
vmovups
xchg
xchg
xorl
xchg
jge
pop
jmp
or
clc
pop
jmp
mov
in
ss
mov
mov
mov
lahf
adc
mov
mov
mov
pop
pushf
jne
mov
mov
lret
das
add
mov
sbb
adc
xchg
cld
pop
push
in
adc
pusha
sbb
push
xor
xor
mov
adc
add
or
adc
fldlg2
sub
xor
mov
and
sbb
push
xor
scas
and
pop
aaa
pop
lods
mov
cwtl
mov
adc
les
sbb
fdivrs
adc
out
enter
add
in
adc
mov
sarb
mov
inc
inc
add
mov
add
mov
setnp
dec
pop
dec
pop
xlat
cmp
dec
pop
out
or
ds
ret
sbb
push
inc
mov
mov
sub
or
aam
ret
fwait
sti
ss
dec
dec
repnz
mov
cld
push
js
and
jge
popa
sub
xor
push
enter
pushf
stc
sub
lret
jae
mov
clc
cld
hlt
adc
mov
xchg
xchg
mov
add
ret
aam
cmp
jmp
push
loope
sbb
mov
ss
mov
and
fistl
enter
add
in
mov
flds
lock
add
mov
add
cmp
xor
scas
adc
adc
mov
les
add
cmpsl
mov
loop
pop
or
pop
mov
insl
or
mov
xor
mov
test
mov
rorb
add
shll
aam
shrb
inc
cmp
dec
rolb
das
sbb
and
dec
rorb
jns
pusha
movsl
test
dec
iret
dec
ret
call
adc
xor
xor
ss
js
fneni(8087
lea
movsbl
xor
mov
add
xor
sbb
movb
cmp
bound
sqrtps
dec
loope
fwait
out
test
adc
cltd
dec
adc
add
push
or
mov
inc
push
mov
jne
mov
jp
loopne
push
push
mov
pop
jae
add
inc
sub
sbb
outsl
das
daa
in
pusha
leave
adc
dec
add
dec
add
and
out
test
fsub
sbb
shlb
in
rorb
ret
sub
inc
xchg
popf
cli
dec
nop
adc
sub
pop
stos
xor
dec
aad
pop
mov
cli
lret
mov
out
shlb
testl
stc
and
pop
fsts
push
nop
mov
sbb
xor
push
jp
xor
test
hlt
fdivr
mov
pop
or
cmpb
hlt
add
lret
push
or
lea
aam
push
mov
sub
in
stc
popa
pop
aaa
cmp
xchg
out
adc
hlt
mov
pop
addb
adc
pop
enter
inc
popa
dec
imul
nop
fwait
stos
xor
add
sbb
ja
iret
and
jmp
mov
add
lock
mov
or
xor
sbb
sub
mov
xchg
add
stos
mov
nop
xor
cmpb
jecxz
push
push
fidivrl
or
dec
icebp
sub
xlat
lea
sbb
pop
gs
das
popa
pushf
cmp
call
mov
cmp
stos
or
enter
mov
push
movsl
or
pop
aam
inc
adc
ss
xchg
push
repz
fsubrl
aad
into
cmpb
mov
ss
pop
mov
add
cmpsb
hlt
cmp
xchg
or
adc
or
jns
lret
xchg
shrb
or
out
adc
insb
aad
xchg
andb
in
inc
fsubs
clc
jge
xor
push
jo
pop
xor
add
pushf
mov
sarl
xchg
call
pusha
mov
xchg
push
les
push
add
shl
inc
pop
fcomip
inc
es
sub
clc
jnp
gs
pusha
xor
add
adc
xchg
adc
test
jge
fsubrl
mov
or
xor
stos
pop
movsb
mov
es
jl
and
lcall
pop
jecxz
push
ret
call
dec
lods
xor
mov
xor
jo
dec
cmp
test
aaa
cmpsl
in
ret
sub
bound
cmp
cmpsl
sbb
enter
mov
lods
loopne
xor
push
xchg
daa
xchg
mov
fcoml
jnp
mov
mov
mov
in
rorl
ret
sub
push
popf
fsubs
inc
sarb
push
add
lds
mov
inc
push
sbb
das
js
fcmovne
sbb
mov
cmp
jmp
mov
ss
sub
add
daa
cwtl
adc
loop
aaa
jb
mov
fidivrs
push
popf
in
push
push
cmp
pop
push
movsb
jns
adc
pusha
sbbb
xlat
xor
push
sbb
cmpsl
push
scas
es
es
ret
pop
jmp
loope
lea
mov
or
cs
sbb
xor
inc
addr16
cld
xor
mov
and
in
sbb
rcl
add
xchg
fcomp
fcompp
jo
xor
pop
lds
and
or
dec
inc
xchg
inc
dec
mov
les
dec
call
in
pop
add
xor
jmp
sub
leave
jns
push
sub
mov
loopne
aam
jmp
fwait
mov
fdivl
mov
mov
fsubr
xor
jns,pn
lea
shlb
mov
out
mov
aam
add
jo
sbb
dec
cmp
out
sub
pusha
cmp
and
sbb
sbb
imul
or
or
call
cmp
repnz
jg
inc
cmp
pop
loop
adc
push
mov
mov
scas
sbb
add
das
xchg
add
or
xor
sub
ret
dec
pushl
push
xchg
cltd
and
push
orl
test
xor
cltd
imul
je
addl
mov
adc
sub
adc
inc
cld
add
stos
or
inc
mov
lods
cmp
lds
inc
xchg
xorl
jns
push
movsl
or
sub
mov
in
jmp
push
inc
or
jge
add
nop
and
add
pop
loopne
insb
push
clc
push
jmp
inc
push
loopne
stos
ret
jmp
shrl
sbb
sub
testl
mov
add
mov
hlt
and
pop
ret
daa
or
xor
fwait
sbb
push
mov
xlat
mov
xor
inc
notl
jge
jnp
mov
jne
mov
sub
and
nop
shll
push
adc
mov
cmpl
mov
in
inc
popa
cmp
cmp
mov
xchg
sbb
pushf
fistps
and
jae
enter
test
push
int
or
mov
xchg
ja
adc
mov
sub
pop
push
add
addb
in
add
dec
adcl
dec
xchg
adc
add
mov
jl
lahf
push
enter
sbb
ja
add
sub
js
xor
inc
inc
dec
lods
lock
jg
push
xchg
ret
add
out
aam
sub
mov
mov
pop
iret
shl
mov
scas
rorl
mov
mov
adc
ret
insb
pusha
repz
push
pop
mov
adc
lret
mov
sub
dec
outsl
leave
pop
rcrl
inc
mov
enter
out
or
or
sbb
mov
push
cmp
push
pop
push
push
xor
rorl
lods
push
ret
push
sub
loop
pop
pop
mov
insl
and
add
loopne
leave
or
push
xlat
call
test
addr16
jmp
mov
push
adc
push
push
imul
inc
mov
xchg
push
mov
or
aad
dec
add
lret
and
lret
or
in
sub
xor
lret
hlt
hlt
inc
and
mov
and
lcall
sbb
dec
adc
mov
aam
and
aaa
lock
fsubrs
push
mov
push
addr16
test
imul
paddq
jae
jae
sub
inc
es
inc
rol
shl
inc
push
push
dec
cmp
inc
sub
call
cmp
jl
insb
or
mov
mov
lea
int3
insl
add
test
testl
cmpsb
xlat
dec
rorl
mov
stc
inc
push
mov
mov
sbb
inc
call
call
orb
popf
sbb
rcrl
fstps
or
movsb
pop
cmpsl
sbb
inc
rcll
bound
push
js
push
add
pop
test
cmp
mov
dec
jmp
cmpsl
dec
and
xor
dec
cli
das
movsb
das
or
sarb
adc
sub
sbb
or
stc
pop
aaa
pop
jg
add
sub
mov
and
rorl
or
and
jecxz
pop
aam
nop
into
xchg
popa
adc
lock
inc
arpl
adc
inc
dec
inc
cld
js
add
xchg
lea
mov
cmp
push
pop
repz
inc
dec
fdivp
rcl
in
pop
cmp
mov
mov
cmp
cmp
into
or
xor
and
mov
dec
cmp
jg
sub
mov
insl
dec
jmp
xor
mov
fmulp
hlt
push
dec
int3
es
clc
stc
dec
adc
das
or
or
pop
rolb
daa
or
inc
pop
sub
aas
adcl
mov
or
xlat
cld
cmp
sbbl
and
push
std
rorb
repnz
shrl
movsb
mov
push
xorb
cmpsl
ljmp
je
stc
movsl
aaa
xor
rcll
movsbl
fnstcw
mov
js
ss
sahf
mov
pusha
outsl
cmp
pop
cmp
lock
cmp
cmp
inc
clc
xor
sub
xor
jmp
mov
pop
sub
inc
push
or
pop
push
mov
pop
lea
sub
ret
inc
sbb
insl
and
mov
inc
shl
or
addr16
mov
dec
or
dec
xor
jbe
clc
rcll
jg
lret
lods
inc
or
inc
adc
cmp
add
push
or
mov
rorl
popf
je
mov
and
dec
arpl
ret
sub
mov
bswap
dec
or
jle,pn
jl
or
sbb
cmp
loopne
lea
roll
dec
mov
and
and
jg
mov
push
add
fiaddl
add
ja
add
jle
xchg
and
fnstsw
enter
sbbb
xchg
cwtl
inc
mov
push
rolb
dec
or
or
ss
mov
andb
mov
ret
and
ret
in
dec
aaa
sub
or
add
push
mov
pop
rorl
xchg
push
leave
je
jmp
dec
outsl
cmpl
mov
jg
inc
js
dec
imul
pop
push
push
pop
cwtl
repnz
and
pop
cmp
add
std
add
sbb
sub
push
enter
arpl
outsl
adc
cwtl
jmp
es
add
aad
iret
outsb
mov
aaa
fcoms
daa
outsb
add
mov
xchg
push
mov
inc
adc
lds
inc
pop
dec
sbb
repnz
ret
push
test
stos
icebp
aam
sbb
leave
ret
inc
cmp
dec
lcall
pop
pusha
adc
mov
mov
jl
cmp
mov
imul
pusha
add
icebp
adc
pop
xor
popa
jnp
adc
inc
scas
aad
mov
inc
fcompl
fbld
and
mov
inc
dec
sub
push
adc
sub
or
pop
cmp
hlt
sbb
jg
lock
loop
or
mov
xor
adc
push
dec
scas
js
insl
jle
fisttps
outsb
sub
pushf
movsb
sub
mov
loope
cmpb
ret
pop
leave
push
iret
sub
loop
dec
aas
jnp
cmp
enter
sub
adc
fimuls
xor
aam
adc
cld
sti
cmp
push
add
addl
xor
daa
sbb
push
enter
ficompl
nop
leave
shll
push
sbb
adc
js
dec
adc
adc
mov
mov
clc
push
dec
and
adc
or
xlat
adc
sahf
je
cmc
inc
or
cmp
xchg
mov
cli
int3
sub
inc
xchg
jmp
lret
lea
ds
mov
sub
mov
arpl
xor
push
in
or
imul
aad
add
mov
add
adc
hlt
xlat
dec
imul
jns
sbb
mov
add
sbb
adc
mov
xor
adc
test
pop
shrb
orl
inc
push
sarb
add
hlt
ret
sarb
adc
xchg
adc
mov
and
das
push
xchg
pop
stos
enter
add
and
mov
adc
dec
pop
test
and
jbe
push
into
iret
adc
aad
je
add
addb
dec
xlat
adc
clc
andl
add
lock
fists
repz
aam
and
or
xor
imul
or
fildll
setne
mov
inc
ficoms
mov
incb
xor
inc
sbb
cmp
je
pop
dec
pop
pop
in
data16
outsl
jo
cmpsl
sub
fnstsw
nop
or
rcll
pop
ficompl
dec
and
inc
inc
cmp
pop
push
inc
notl
arpl
shl
into
decb
movsl
fcoms
lret
xchg
inc
loope
inc
lds
xchg
or
pop
add
xor
sbb
and
jne
and
mov
cmp
call
adc
mov
por
adc
sub
sub
jns
es
ret
hlt
pop
xchg
push
add
dec
psraw
cmpl
sub
pop
mov
sbb
dec
decb
pop
push
push
arpl
inc
dec
jne
and
mov
jo
inc
imul
fsubrs
fsubrl
dec
push
js
mov
add
cmpsl
mov
sub
jmp
push
mov
or
or
lret
cmp
sbb
pop
dec
lahf
out
test
mov
adc
inc
add
inc
xor
pusha
dec
cmpsl
mov
fwait
rolb
lods
cmp
leave
aas
xor
xor
add
xchg
fs
push
outsl
jge
mov
jg
push
dec
cmp
jecxz
push
call
fs
lods
popa
es
mov
mov
jo
ja
or
andb
xchg
subl
pusha
sbb
sbb
and
push
adc
xchg
dec
aas
add
ja
repnz
lret
aam
xchg
test
and
mov
mov
orl
fcmovb
pop
cmp
cs
or
push
ret
jg
cmp
jmp
les
outsb
daa
or
push
mov
mov
inc
jne
daa
inc
and
sbb
insb
movsb
lret
movl
or
inc
and
and
mov
or
push
insb
es
sub
fmuls
sarb
scas
aas
or
or
add
inc
mov
add
and
push
pop
jne
or
nop
loope
add
or
or
test
sbb
jl
out
divb
lock
int
mov
or
int
cmpsl
iret
aam
add
sub
popa
lea
or
lds
adc
cwtl
push
or
pop
clc
or
andb
cli
rcrb
into
jg
xchg
sarb
sbb
push
push
out
inc
push
xor
add
pop
mov
inc
sub
divps
enter
cmp
fcmovnu
sbb
iret
pop
push
ret
les
inc
lea
repz
cmpsb
ss
popa
xchg
gs
dec
mov
cmp
rorb
inc
je
mov
push
out
cmp
outsb
sbb
push
pop
imul
mov
shlb
mov
and
rclb
mov
jecxz
or
inc
test
xlat
es
or
adc
and
push
popa
scas
frstor
wrmsr
dec
insb
jcxz
push
pop
mov
xchg
push
inc
mov
dec
or
or
cltd
mov
or
sbb
or
test
inc
jle
and
push
inc
daa
push
adc
iret
inc
push
push
push
incl
loope
jnp
mov
aaa
mov
icebp
push
sbb
adc
lock
hlt
outsl
adc
imul
dec
mov
xchg
inc
adc
iret
inc
jb
jb
adc
sub
add
add
or
loop
mov
sti
add
add
or
lret
ss
shlb
lods
mov
or
sbb
in
mov
add
push
xchg
push
pop
pop
xlat
sub
leave
insb
pop
sti
insl
pop
test
loope
dec
jmp
dec
adc
push
adc
and
add
and
lret
sub
in
incl
dec
sub
cmp
and
jne
movl
shrb
sbb
out
mov
inc
fiadds
lret
add
adc
fadd
repz
add
adc
add
or
je
in
dec
jnp
shl
jg
or
lock
fldl
mov
jle
stos
pop
hlt
jle
mov
clc
ljmp
or
xor
adc
sti
scas
aam
cmp
clc
loopne
add
fcomp
push
mov
pop
inc
sub
or
inc
cld
daa
pusha
jns
sub
pop
loopne
incb
rclb
xor
out
jecxz
jne
sub
and
sbb
andl
push
push
outsb
sbb
pop
mov
or
sbb
sub
adc
cld
incb
mov
jl
sbb
loopne
xchg
int3
cmp
jnp
sub
in
or
push
jno
rcll
repz
push
vhaddps
adc
sbb
jmp
nop
fld
sbb
iret
divl
jge
mov
add
sbb
nop
push
add
stc
je
imulb
in
cmp
sbb
inc
sub
sub
or
sbb
and
push
clc
pop
adc
daa
or
inc
add
orl
add
daa
nop
in
stos
das
clc
mov
xor
xor
test
and
pop
les
push
cmp
ret
adc
pop
cld
ret
add
inc
add
adc
pop
mov
sub
or
or
xchg
mov
push
insb
lcall
rorb
pop
pop
mov
mov
add
add
xchg
sub
push
mov
sbb
imull
push
aad
mov
pop
or
add
ljmp
add
pop
add
std
std
or
jl
mov
lahf
mov
pop
jo
cmp
popa
jns
or
jge
cmp
pop
adcl
mov
push
adc
add
pop
mov
cmpsl
ss
xor
sub
pop
push
xchg
lahf
cs
ja
pop
lods
mov
push
pop
inc
pop
push
pusha
fsubrs
push
dec
dec
mov
push
fcmovnbe
add
mov
test
inc
mov
mov
add
adc
and
in
cld
push
test
pop
popa
sbb
fnstcw
cld
push
jo
mov
pop
mov
sti
xor
jmp
jl
xchg
xchg
and
and
pop
push
and
jge
lret
dec
test
xchg
in
popa
or
mov
fisubrs
orb
xor
jbe
mov
dec
jbe
outsb
lods
mov
mov
inc
lods
gs
push
stos
add
outsb
rcr
xor
mov
inc
lret
inc
movsb
int
push
adc
cmpsb
jge
je
add
cmp
or
pop
mov
pop
mov
dec
ds
enter
gs
push
mov
shr
nop
inc
push
jns
lea
fs
jb
sbb
je
jbe
fs
inc
ja
jns
nop
inc
push
jp
jl
inc
push
sbb
jg
push
sbb
bound
sbb
fs
addr16
push
push
insb
nop
inc
push
sbb
outsl
inc
push
sbb
push
push
sbb
push
push
push
sbb
push
pop
pop
fs
inc
push
pop
pop
pop
nop
inc
push
sbb
pop
inc
push
sbb
inc
push
sbb
inc
inc
inc
sbb
inc
dec
dec
fs
inc
push
dec
dec
dec
nop
inc
push
sbb
dec
inc
push
sbb
xor
sbb
xor
sbb
aaa
cmp
fs
inc
push
cmp
cmp
popa
push
sbb
out
pop
sub
mov
dec
mov
push
test
daa
insb
outsl
lods
mov
and
jmp
fs
inc
clc
jmp
or
sarb
in
sub
push
in
mov
xchg
sub
outsl
push
adc
cmp
push
inc
push
dec
es
je
imul
pop
jo
or
xor
jno
dec
adc
adcb
insb
push
rcrl
or
fs
dec
loope
nop
enter
or
or
jae
je
imul
out
in
push
je
insb
xchg
xor
data16
leave
add
ja
or
or
and
sarb
adc
sbb
gs
mov
in
insb
or
adc
nop
das
dec
in
xchg
push
outsb
int
stc
or
mov
in
jo
outsl
insl
mov
or
popa
jae
add
sbb
or
push
inc
jge
js
sub
jae
les
and
divl
sbb
int3
mov
inc
das
mov
push
push
push
dec
outsl
jo
jbe
or
pop
inc
jns
sbb
or
dec
shll
nop
dec
add
dec
popa
data16
imul
adc
xor
sbb
xor
aas
adc
loopne
xchg
xlat
jo
or
adc
out
add
xor
jne
dec
pop
insb
aaa
orl
bound
add
out
pop
sbb
shlb
or
push
mov
das
inc
inc
imul
incb
jae
and
pusha
pop
shrl
xor
mov
push
push
sbb
inc
adc
jne
std
cmp
inc
pmullw
pop
sub
xor
or
cmpsb
mov
inc
xchg
mov
sub
mov
xchg
fstl
scas
mov
mov
cmpsl
inc
adc
push
pop
xchg
insl
rcr
jl
or
xchg
cmp
dec
push
xor
es
call
mov
push
enter
daa
test
inc
outsb
das
push
cmp
je
add
or
push
xor
aam
adc
hlt
or
push
add
loope
sbb
int3
or
mov
jmp
fdivs
aaa
mov
aas
mov
push
dec
adc
sbb
mov
int3
cmp
jmp
push
cmpl
add
xor
mov
pop
dec
cwtl
addb
fiaddl
pop
sbb
mov
push
adcb
mov
sahf
pop
mov
rol
add
inc
dec
enter
or
add
lds
js
add
pusha
insl
lock
xor
cmp
adc
ds
les
add
adc
jp
je
addr16
lcall
push
inc
rorb
sbb
xor
jnp
mov
pop
push
push
cmp
in
xchg
add
add
in
nop
adc
dec
enter
lods
adc
mov
rep
pop
in
mov
lods
adc
mov
or
sbb
outsb
in
cmp
sbb
pop
sbb
mov
movsl
cwtl
repnz
ret
shll
push
and
push
aas
pop
int3
push
or
xor
test
fwait
imul
xchg
rcrl
icebp
cmp
jo
dec
imul
jle
fcoml
push
xchg
ret
sbb
xchg
inc
push
daa
hlt
mov
roll
aas
or
int
jp
aam
jle
loope
sbb
pusha
mov
dec
cs
gs
ret
out
pop
push
out
inc
imul
push
sub
repnz
pop
subb
adc
jle
cmpxchg
in
push
adc
sbb
pop
cwtl
fucomi
int3
cld
adcl
pop
sbb
imul
movsb
aas
pop
adc
or
mov
inc
pop
nop
or
and
pop
mov
mov
popa
mov
pop
jnp
fadds
jns
xchg
xchg
imul
sahf
cmc
sub
pushf
and
mov
xor
pusha
mulb
lret
in
cmpsl
inc
notb
sub
filds
adc
pop
sarb
aaa
inc
adc
push
pop
test
jge
jo
pop
test
out
sbb
cmp
test
add
and
out
pop
and
das
push
xchg
pop
leave
stos
data16
push
cld
repnz
and
je
rcr
ret
xchg
movb
aad
push
daa
mov
adc
xchg
insb
mull
mov
jo
jnp,pn
dec
clc
jle
push
push
add
popa
addr16
int3
mov
shlb
and
movsl
mov
js
push
lods
sbb
lds
mov
inc
mov
xor
inc
cmp
and
sub
inc
mov
pop
xchg
mulb
mov
js
cmpsl
int
sub
fs
pop
push
xor
or
ror
push
adc
pop
addl
cwtl
or
push
inc
movl
and
mov
je
sub
add
push
and
rorb
mov
and
sub
stc
cmp
xchg
add
mov
in
pop
jb
inc
jnp
pop
es
jg
pusha
test
data16
in
popa
xor
sbb
outsl
pop
push
add
add
sub
dec
pop
aas
xor
sete
pushf
pop
pusha
nop
subl
xchg
pop
call
inc
pop
sbb
pop
xlat
push
cli
addps
sbb
testb
push
dec
arpl
mov
mov
sti
pop
leave
add
fdivs
daa
das
jns
ja
ja
push
aam
iret
iret
inc
add
call
inc
test
pop
add
mov
movb
jns
mov
ja
mov
sbb
dec
pop
sbb
jbe
add
sbb
pop
push
ret
nop
pushf
sti
add
mov
pushf
sti
int3
and
popa
mov
xorb
jo
inc
nop
inc
clc
pushl
into
mov
mov
xor
rol
xor
inc
dec
jne
push
dec
js
mov
loope
test
push
fs
pop
or
inc
lahf
mov
adc
xor
pop
pop
push
js
hlt
add
jmp
mov
in
and
adc
adc
inc
dec
add
dec
and
pop
push
fiaddl
dec
sub
lea
pop
add
rol
jbe
add
and
xchg
ja
xchg
jp
test
inc
xchg
or
xchg
sbb
jo
sbb
ffree
mov
push
sub
sbb
push
or
pop
std
sub
mov
or
adc
cltd
add
cmpsl
xor
fiaddl
xchg
xor
xchg
adc
sete
in
roll
sub
cmp
cmpsb
xchg
rolb
push
and
fsubrp
sub
and
and
sub
or
dec
pusha
sbb
jae
addb
mov
dec
adc
mov
jnp
fidivs
cmp
sub
incb
call
leave
sub
sbb
inc
cmpsb
xorb
mov
jmp
pop
or
sbb
inc
push
jle
xchg
pop
pop
pop
aad
stos
insb
inc
add
int
sub
pop
faddl
sahf
dec
sub
repz
test
adc
jge
pop
dec
mov
loopne
sbb
mov
rorb
fs
or
call
lock
lcall
imul
pop
in
add
call
pop
jl
push
add
cmp
xlat
mov
cmpsb
pusha
in
mov
in
adc
pop
cld
add
rorb
dec
push
cmpsb
mov
add
push
in
or
rclb
push
xchg
arpl
in
cld
popl
arpl
jb
outsl
outsb
inc
inc
repnz
and
outsb
pop
dec
insb
imul
push
xchg
jbe
add
jb
insb
gs
mov
cmp
gs
insb
pop
push
stc
adc
aaa
addr16
imul
add
xchg
roll
iret
pop
gs
insb
outsl
ja
nop
jg
fdivs
or
arpl
imul
jno
popa
mov
sbb
or
insl
pop
in
cmpb
xchg
push
imul
push
adc
fs
xor
mov
push
nop
rcl
sbb
popa
das
psadbw
pop
lods
dec
mov
pop
imul
es
mov
push
addr16
pop
add
int3
das
inc
je
inc
push
mov
es
std
insb
add
mov
aaa
das
or
pop
jg
gs
or
sub
xlat
adc
ss
daa
pop
xchg
sub
cmpl
mov
in
sbb
orl
fiaddl
or
mov
andl
test
push
mov
adc
pop
jb
ret
repz
adc
insl
sub
adc
cmp
outsl
inc
imul
push
iret
push
outsb
jne
pop
and
pop
or
inc
xchg
bswap
or
pop
sub
lahf
dec
cs
push
jmp
mov
arpl
inc
fsub
pop
icebp
xor
roll
ret
cmp
outsl
mov
das
es
popa
das
or
xorb
test
pushf
jmp
push
pop
push
ret
push
mov
fs
jb
jo
pop
and
out
or
sahf
sbbl
mov
pusha
das
test
sbbl
testw
pop
inc
dec
inc
push
push
inc
push
add
pop
xchg
ja
inc
inc
inc
in
pop
push
ficompl
dec
inc
dec
dec
arpl
mov
popa
pop
dec
inc
inc
push
adc
aaa
pusha
decl
inc
push
dec
dec
push
mov
shrl
dec
dec
and
imul
inc
xor
xor
adc
inc
in
divb
inc
and
inc
xor
inc
dec
push
repnz
test
dec
push
dec
dec
imull
ja
arpl
cs
jle
inc
das
inc
inc
dec
push
mov
or
push
push
dec
inc
dec
or
pop
dec
pop
ret
xchg
aaa
inc
adc
push
push
push
dec
push
inc
scas
sbb
leave
push
dec
inc
dec
push
mov
dec
pop
sbb
and
mov
test
sti
mov
or
popa
daa
push
add
into
pop
enter
add
or
add
decb
add
or
sbbb
add
lcall
push
or
mov
lea
push
mov
int
insl
jle
sbb
pop
sbb
jo
add
imulb
or
or
loop
out
jmp
add
push
dec
test
das
shlb
clc
or
inc
adc
jno
cli
mov
inc
loop
sbb
or
stos
or
test
call
cmp
cwtl
add
push
and
inc
dec
lods
ja
push
push
jecxz
stc
pop
xor
mov
cwtl
dec
cmpsb
pop
jb
or
das
cs
sbb
inc
rcrb
addr16
cmp
push
into
inc
addr16
dec
push
xorb
adc
sahf
jbe
adc
dec
enter
pop
cmp
popl
pop
das
cmp
pop
jo
cli
das
xor
add
or
mov
jne
cltd
jbe
mov
jmp
add
cmp
sbb
or
or
mov
add
outsb
nop
aaa
or
inc
adc
push
inc
or
xor
mov
and
rorb
adc
outsl
iret
repz
testb
imul
shr
adc
aaa
xor
mov
xchg
xchg
xchg
add
or
mov
jmp
mov
inc
mov
stc
inc
add
clc
mov
push
fwait
call
mov
pop
adc
mov
dec
fisubrs
jno
xor
movb
insb
add
fcomp
add
rclb
movsb
lcall
or
add
outsb
imul
pusha
imul
nop
or
mov
call
repnz
mov
je
imul
test
imul
pop
xchg
dec
out
add
sub
push
xchg
mov
das
push
stos
cltd
and
pop
sbb
xor
fists
sbb
test
incl
aam
rorb
mov
pusha
repnz
adc
add
repnz
movsl
sub
ret
cmpl
leave
cli
rorb
test
xor
fmuls
xor
push
das
fcomip
ficoml
xor
cld
sarl
push
sbb
add
negb
mov
or
mov
xor
xchg
sbb
cli
xchg
pop
mov
lods
or
sbb
repnz
dec
loopne
add
xchg
and
add
cmp
andl
sbbl
cmp
nop
loopne
je
or
nop
pushf
sbb
add
mov
movsl
or
loopne
or
pop
lock
inc
xchg
inc
adc
std
pop
and
add
push
jne
xchg
adc
push
jne
js
outsb
inc
sbb
mov
or
add
das
jae
pusha
das
hlt
dec
rcrb
xchg
in
xor
loopne
inc
call
push
cmp
inc
add
shrl
lock
inc
or
adc
sbb
pop
sbb
push
adc
or
iret
add
xchg
shl
or
mov
in
cmpsb
lret
sbb
mov
and
cmp
bswap
cmovs
nop
in
rorb
push
je
sbb
seto
inc
mov
push
xchg
js
leave
test
push
adc
mov
fmull
inc
aas
add
sbb
mov
pop
mov
jmp
and
add
sbb
xor
dec
and
adc
cld
test
push
cltd
adc
mov
mov
add
adc
insb
das
cmp
push
add
adc
jl
pusha
inc
mov
in
mull
sub
jmp
je
pop
fldt
push
call
jb
gs
lock
call
mov
push
inc
dec
aas
dec
mov
dec
jmp
or
mov
jns
mov
nop
mov
adc
xchg
daa
cmp
in
cmp
std
inc
clc
sarb
jle
ret
mov
sbb
adc
and
jns
dec
enter
in
adc
test
cmp
movl
ss
inc
aad
xorl
cwtl
adc
pop
mov
sahf
cmc
mov
push
jns
xor
movups
mov
mov
subl
setns
loope
inc
fisttps
rorl
xor
mov
mov
mov
push
mov
sub
or
sub
or
inc
orb
push
push
or
sbb
sti
xchg
push
sub
push
pop
ja
sbb
or
pop
inc
cmpsb
mov
mov
aaa
inc
ret
xchg
cmpsl
loopne
jp
sbb
ja
cmp
sbb
and
loope
rorl
jb
roll
jbe
sub
xchg
and
lret
rol
dec
addl
js
push
subb
and
iret
bound
xchg
rorb
pop
fisubs
and
push
pop
je
in
mov
enter
pop
sub
cwtl
or
cmp
testb
into
jge
lods
loopne
dec
push
insl
pop
and
and
arpl
adc
jecxz
ljmp
das
push
dec
mov
cmp
mov
xchg
adc
xchg
adc
shll
es
js
mov
lods
xchg
mov
into
sbbb
mov
inc
inc
add
test
pop
lock
dec
pop
dec
lea
daa
addl
inc
aaa
cmp
daa
mov
dec
push
cmpl
sub
data16
pop
mov
pop
dec
dec
jb
or
push
fldt
xchg
nop
inc
daa
sbb
or
sbb
and
pop
adc
push
enter
xchg
push
sbb
pushf
nop
mov
pop
push
xor
or
adc
out
push
test
adc
pop
sbb
fsub
mov
jne
bswap
pop
imul
in
cmpsl
sub
mov
mov
mov
aam
pop
inc
jae
dec
mov
std
push
shlb
inc
or
je
mov
dec
enter
mov
movsb
jne
sub
pop
mov
cmp
es
es
xchg
aas
es
cmc
push
movsb
and
xor
rcr
add
arpl
and
orb
sbb
xor
enter
pop
sub
lock
not
and
mov
inc
sarl
ret
je
les
lock
mov
jle
daa
pop
rorb
nop
mov
lock
xchg
push
adc
sub
mov
or
pop
and
mov
clc
and
xor
push
xor
js
ljmp
nop
sysret
clc
fdivl
inc
lcall
mov
sbb
sbb
pop
mov
cmp
sbb
cs
and
mov
in
add
inc
sub
dec
add
arpl
and
adc
sti
out
ds
inc
enter
pushf
or
popl
push
enter
or
nop
nop
in
out
insb
pop
enter
mov
or
movsb
xchg
sbb
mov
nop
xchg
jl
aas
cmpsb
sbb
mov
push
inc
ds
push
inc
lods
sbb
in
add
test
dec
sbb
add
push
mov
push
outsb
add
int
adc
mov
lea
add
test
jmp
mov
insb
mov
adc
jo
pop
in
add
xor
bswap
movsb
add
push
aas
jge
dec
repnz
clc
adc
in
mov
movsb
dec
pop
dec
insl
push
adcl
pusha
inc
enter
movsb
mov
or
shl
bound
mov
and
imul
subl
int3
into
bound
pop
imul
dec
repz
fcomps
fstpl
xchg
mov
add
mov
out
pop
push
call
sub
xchg
fimull
push
adc
mov
popf
mov
adc
push
push
or
fildll
pop
or
or
imul
add
das
mov
jg
movsb
lahf
insb
shl
rorb
xor
not
and
push
pop
sar
pop
or
aam
fcoml
add
pop
mov
ds
cmpl
mov
in
push
rcrb
adc
xchg
out
add
push
orl
test
push
clc
inc
jg
in
sbb
add
lcall
xchg
sub
sub
lods
pushf
in
push
and
sbbl
add
enter
cmpsl
fsub
and
xchg
lock
push
pop
xor
mov
mov
testl
fsubl
jbe
add
and
pop
push
sub
dec
mov
xor
pop
xchg
shlb
dec
dec
add
sbb
inc
call
mov
pushf
inc
das
inc
test
mov
xchg
jle
sbb
mov
or
inc
add
stos
dec
pushf
mov
adc
orb
add
call
add
sub
adc
punpckhdq
adc
ficompl
xor
mov
xchg
lea
add
mov
or
cli
inc
add
mov
add
sub
inc
iret
faddp
inc
add
inc
sub
dec
ret
cmp
aas
dec
pop
es
lahf
or
push
mov
mov
push
mov
xchg
gs
pop
pop
pop
add
ljmp
jge
adc
adc
adc
sbb
xor
add
dec
xchg
mov
aam
leave
push
inc
int
mov
fsubrl
js
movsl
dec
js
and
jg
push
inc
and
enter
mov
dec
fmulp
adc
jns
jmp
leave
and
mov
add
in
ljmp
adc
jecxz
mov
mov
jmp
shlb
sti
movw
add
cli
cmp
sbb
push
mov
xchg
cld
xchg
and
loopne
or
jno
enter
in
out
fstpl
jp
or
xor
mov
ret
sub
sbb
add
xchg
mov
dec
gs
std
lea
push
imul
sbb
daa
xchg
mov
addr16
or
imul
cld
mov
pop
orb
or
cmp
lahf
mov
xchg
lds
clc
leave
inc
nop
test
and
clc
and
mov
and
pop
xchg
pusha
icebp
aaa
cs
roll
in
or
push
xchg
cmp
fisubl
movb
push
sub
lret
add
lock
sarl
pop
sbb
dec
clc
test
mov
push
xor
rclb
hlt
aas
and
adc
dec
mov
aam
xchg
push
cmp
lret
push
pop
out
adc
insl
jmp
lods
subb
xchg
mov
adc
sub
and
add
or
fstps
add
ss
push
in
inc
stos
or
sub
sub
xor
or
push
dec
rcrb
mov
aas
mov
in
in
shrl
clc
push
push
das
adc
jmp
xchg
cmp
adc
push
outsl
dec
mov
sbbl
inc
and
in
and
icebp
xchg
push
jge
add
inc
sbb
in
add
mov
jle
or
or
and
ret
push
push
cmpsb
or
add
and
pusha
bound
add
sub
push
rol
and
stos
shrl
movl
popf
dec
adc
and
add
leave
add
push
adc
enter
push
enter
add
sbb
sarl
repz
mov
mov
aam
inc
add
or
xor
aam
enter
lock
pop
es
fcoms
sbb
cmc
pop
cmp
fadd
jmp
out
add
clc
jg
test
jle
cmp
jl
aaa
enter
lods
outsl
cmp
jg
or
pop
clc
jle
inc
movsb
cltd
cmc
out
pop
xchg
add
sbb
mov
xor
pop
jae
inc
mov
sub
dec
push
cmpsl
xorb
jne
lahf
dec
loopne
push
sub
xchg
lock
pop
sti
mov
adc
pcmpgtb
mov
or
xchg
sbb
scas
iret
xor
push
test
in
or
sbb
add
mov
fdivrs
inc
adc
add
adc
loopne
int3
and
hlt
test
adcl
ret
cmp
out
xchg
jg
or
jl
push
cmp
ja
lea
inc
rclb
xor
inc
dec
jne
cmp
xor
je
arpl
adc
xchg
xor
cli
pop
xchg
inc
ret
outsl
sub
push
lock
lock
in
add
sub
sub
loop
and
adc
lret
jae
js
pop
aam
xor
push
or
sbb
cmpb
nop
mov
pop
sbb
out
pop
push
jl
pop
cwtl
leave
inc
mov
insl
mov
push
push
jle
loope
imul
lds
xor
dec
call
mov
jp
sarb
push
mov
jecxz
mov
mov
push
cmpsb
adc
std
mov
pop
mov
jp
push
lods
pop
pusha
loope
mov
dec
push
sub
rorb
fisubl
mov
jbe
or
mov
jns
aam
test
pusha
lock
std
push
add
xlat
pusha
sarb
jmp
xor
jmp
cmp
jl
ret
and
lods
mov
insl
clc
movsl
cmpsb
sbb
test
pop
dec
xor
aas
sbb
sbb
sub
clc
adc
or
lea
xor
jmp
cmp
push
mul
sub
movl
push
rclb
or
fimuls
dec
or
jg
lock
jmp
jl
mov
lea
in
and
test
or
out
and
scas
lock
insb
and
sub
fcmovbe
xor
inc
and
add
mov
xchg
and
push
push
sub
xor
adc
mov
andb
or
dec
cwtl
jmp
mov
out
adc
adc
cs
add
or
hlt
or
sub
adc
test
fisubs
cmc
mov
test
inc
test
ret
nop
or
sbb
push
fisttps
shrb
enter
sub
insb
test
daa
and
int
pop
push
imul
or
stos
ficoml
cwtl
xor
sbb
lods
sub
nop
or
pushf
clc
hlt
hlt
and
fwait
ret
pop
daa
or
daa
jg
add
sub
and
mov
ret
lods
repnz
incl
out
inc
out
iret
mov
adc
mov
lret
into
push
xor
mov
pop
push
push
and
repnz
in
hlt
int3
inc
call
or
loopne
andb
clc
call
repnz
hlt
loopne
jnp
jb
fsubr
dec
dec
mov
jns
shlb
jo
inc
cs
add
add
and
inc
add
daa
imul
inc
fmuls
fidivrl
mov
mov
add
lods
or
lods
data16
ja
ds
push
scas
lods
cmpsl
mov
add
stc
fnstcw
mov
daa
bound
add
gs
in
test
cmpsl
dec
dec
cltd
lock
sub
sub
fcoml
clc
call
fiaddl
roll
push
enter
pop
movb
scas
adc
dec
jo
js
fistl
aaa
pop
es
inc
loop
pop
and
jmp
aas
sbb
cmp
mov
das
dec
mov
push
nop
insb
and
pmulhuw
push
adc
aas
xchg
js
push
adc
sbb
test
mov
sub
xchg
adc
cwtl
push
add
loope
cs
xor
popf
cltd
idivb
orl
je
test
jne,pn
jne
push
and
int3
cwtl
dec
mov
outsl
clc
out
push
or
dec
hlt
and
leave
out
hlt
rorb
pop
cmpsl
add
push
add
aas
jecxz
lods
sti
cltd
fstps
push
mov
into
popa
cmp
imul
xchg
nop
testl
sarb
ret
xchg
mov
fs
inc
push
adc
cmpsl
dec
mov
lea
push
xor
pop
adc
pop
adc
or
adc
cmpsl
pop
ret
scas
andb
insb
test
inc
dec
daa
cmp
rorl
in
add
inc
sbb
dec
push
cltd
inc
outsl
jb
in
sbb
lret
adc
xor
push
and
jns
out
movsb
xor
pop
inc
push
andb
in
xor
add
ss
stc
shrb
je
push
add
push
adc
and
xchg
cld
in
mov
push
inc
add
xor
jb
sahf
in
pop
mov
mov
enter
mov
and
sub
mov
dec
dec
xchg
sub
movsl
inc
mov
add
pop
scas
mov
pop
gs
xchg
cmp
imul
dec
addl
movb
sbb
add
aaa
lds
js
dec
jne
inc
and
test
add
ret
cs
push
mov
sbb
mov
fs
xchg
sbb
push
in
jne
pop
fildl
jno
add
and
push
ret
pop
sub
leave
pop
inc
xchg
cs
clc
daa
dec
xor
bound
xor
mov
sub
out
in
clc
mov
lret
jo
jne
pop
and
push
xor
lret
pop
xor
and
out
xchg
xchg
sarl
fsts
push
inc
loope
fdivl
dec
push
pop
rcll
pop
hlt
aam
push
fidivrl
ds
inc
loope
pop
mov
add
imul
popf
icebp
test
add
sbb
push
or
jb
popf
and
and
inc
sub
repz
add
mov
push
sub
js
mov
rcl
push
test
repnz
clc
xor
addr16
or
xchg
jo
insb
jne
fiadds
pusha
ret
mov
imull
fisubrs
and
adc
test
or
shll
and
dec
xchg
neg
roll
mov
mov
adc
jb
xor
mov
pop
mov
or
mov
mov
lea
dec
outsl
pop
sbb
mov
or
jbe
lret
outsl
push
xor
xlat
cmpb
add
inc
mov
adc
sub
call
arpl
pop
cmp
push
les
cmc
fs
enter
cld
cltd
mov
pop
shll
mov
inc
xor
filds
pop
cs
loopne
mov
sbb
inc
cmp
adc
inc
and
or
popl
js
pop
adc
pop
and
sbb
das
sbb
sbb
mov
mov
and
fcompl
cmpsl
and
push
xor
lods
loop
pop
mov
pop
sub
and
xlat
push
add
cmp
mov
ret
pop
push
aam
or
dec
mov
and
push
or
push
jg
data16
push
pop
or
mov
ljmp
in
rol
cmp
xor
xchg
mov
js
push
jnp
sbb
or
jo
sbb
enter
sbb
push
push
and
test
mov
dec
push
or
xlat
cmp
popf
stos
aad
xor
fimuls
daa
mov
xorb
mov
add
dec
repnz
aas
test
pop
pop
sbb
mov
test
add
mov
lea
cmp
inc
or
ds
push
sbb
fidivs
lahf
sbbb
inc
mov
jmp
lods
mov
scas
jmp
pusha
add
add
ss
jo
and
add
push
xchg
xor
loopne
add
inc
push
loope
out
xor
fisubrs
or
mov
fstpl
imul
fld1
cwtl
stos
adc
add
fwait
clc
adc
mov
jbe
rolb
insb
inc
or
call
mov
sub
cmp
dec
addl
dec
or
adc
ss
xor
sbb
push
das
and
imul
mov
cmp
jle
mov
shr
sahf
mov
mov
add
dec
cli
rorb
sbb
clc
mov
iret
test
sub
and
in
cmp
inc
inc
sbb
sbb
ss
hlt
push
or
cli
shlb
ds
adc
add
inc
inc
add
ss
iret
sbb
jne
mov
fildl
ds
pop
push
in
push
jno
sbb
aas
in
ret
test
shlb
and
aaa
push
fdivs
fs
dec
cli
fldcw
lea
sbb
imul
and
or
jae
aaa
call
xor
pop
push
arpl
push
and
les
or
popa
out
jle
push
push
xchg
in
push
push
cmp
and
mov
jl
stos
cmp
adc
jmp
loopne,pn
mov
in
xchg
and
pusha
insl
shll
sub
out
daa
loope
pusha
and
jno
mov
add
add
sbb
ret
xor
pop
test
mov
rol
xor
mov
shll
add
popa
lahf
test
sub
sbb
movb
pop
and
and
sub
popl
jle
mov
les
daa
stos
orb
adc
and
mov
inc
sub
js
xchg
clc
pushl
mov
mov
mov
jmp
negb
iret
jg
negl
daa
add
repnz
pushf
out
cmp
adc
push
movsl
inc
and
sub
mov
cmp
adc
inc
dec
or
lcall
ret
or
ret
in
or
push
push
jecxz
mov
sbb
or
sbb
lods
and
addb
sub
pusha
and
arpl
adc
and
test
loope
adc
daa
dec
rorl
inc
into
xchg
dec
cmp
jle
dec
dec
dec
sbb
cmp
pop
fcmovu
inc
sub
or
dec
std
shlb
nop
adc
inc
addr16
xchg
xchg
dec
mov
add
add
and
enter
mov
mov
xchg
xchg
in
ret
aad
sub
sub
jg
pop
icebp
nop
adc
imul
mov
and
sub
and
add
xlat
ret
fnstcw
jmp
push
push
sti
mov
icebp
mov
adc
adc
in
lods
cmp
sub
mov
shll
fadds
aas
das
or
adc
imul
popa
adc
jne
shlb
jg
movsl
divb
incb
adc
xor
adc
lahf
lock
adc
int
xor
test
in
test
cltd
push
xor
rclb
enter
or
daa
adcl
xchg
sbb
mov
sbb
daa
xchg
pop
sub
aaa
dec
or
or
mov
out
les
inc
mov
lea
test
xchg
dec
dec
daa
xchg
add
andb
clc
stos
add
or
ret
jmp
cmp
jnp
push
lock
and
cwtl
push
add
xor
pop
adc
cmpl
je
dec
es
pop
nop
notb
push
inc
lea
call
dec
enter
test
mov
out
mov
xchg
or
jecxz
lret
inc
mov
adc
adc
shll
push
repnz
inc
enter
adc
and
das
nop
jno
adcb
mov
xchg
int
lcall
fiadds
enter
repnz
subl
sar
loopne
push
xor
testl
mov
dec
mov
adc
sbb
in
or
sbb
xchg
mov
sub
int
cltd
cwtl
pusha
mov
in
mov
into
or
ds
lods
rorb
fimull
inc
push
test
fcoms
cltd
lcall
rep
in
pop
fistl
mov
jbe
cmpsl
cld
add
add
incb
std
sbb
test
xchg
dec
lock
and
cmp
sub
sbb
jge
fdecstp
cwtl
inc
jg
loopne
mov
push
addr16
jne
add
ret
pop
mov
cmp
sti
mov
mov
mov
xchg
add
mov
js
je,pn
cmpb
add
cmp
mov
xor
clc
mov
adc
lahf
ss
cmp
mov
xchg
stc
adc
leave
push
daa
mov
xor
adc
or
fstp
sbb
inc
sbb
adc
test
jnp
mov
add
pop
shlb
xor
mov
add
push
pop
push
adc
pop
fdivrl
inc
test
das
aaa
addb
mov
pop
loope
lock
js
jo
xchg
or
adc
jb
push
arpl
or
mov
fists
dec
push
add
sbb
and
and
mov
fisubl
cmp
jle
xorl
or
loope
sub
add
cmp
add
push
or
nop
pusha
mov
and
js
mov
mov
rcl
add
dec
xor
mov
sbb
pop
fadds
xchg
xchg
adc
sbb
outsl
in
call
sbb
les
mov
pop
pusha
inc
adc
cmpl
scas
push
movsb
inc
js
dec
jmp
insl
xor
jle
aad
jb
mov
cmp
icebp
or
push
inc
bound
sub
pushf
sbb
les
test
movsb
and
jo
adc
shlb
push
sub
scas
mov
add
inc
dec
andl
dec
xchg
mov
sahf
push
js
and
dec
mov
push
jecxz
inc
add
cmpsb
inc
or
jmp
mov
mov
inc
pop
sub
adc
lods
dec
outsl
inc
add
repnz
loope
dec
push
mov
mov
inc
pop
add
out
pop
sub
arpl
sub
or
dec
int
and
or
dec
hlt
push
inc
and
pushf
gs
inc
mov
test
imul
mov
test
mov
popa
push
addb
or
mov
ror
inc
sub
xor
push
repnz
daa
dec
add
ss
inc
jns
jbe
ret
in
jmp
fsubrp
pop
adc
sbbb
cltd
cltd
inc
sub
sbb
shlb
add
fnstcw
nop
dec
mov
pop
or
lds
mov
pop
sub
cltd
adc
xchg
push
sbb
push
mov
push
movsl
mov
dec
pusha
sbb
xchg
lahf
dec
xchg
fwait
add
dec
push
xchg
lock
add
jo
dec
add
push
decl
cltd
jbe
hlt
mov
pop
pop
pop
mov
and
divl
in
dec
or
mov
push
adc
test
mov
add
xchg
rolb
mov
sti
fisubl
adc
outsb
call
ja
subl
je
xchg
out
iret
fldl
imul
les
lds
add
push
xchg
or
cmp
pushl
xchg
mov
xchg
fbld
cwtl
xor
scas
dec
cld
or
dec
sub
out
rolb
xchg
push
fdiv
dec
sub
add
int3
and
sub
push
mov
dec
dec
jo
in
orps
push
test
pop
jmp
lcall
adc
sbb
pusha
pop
dec
pop
andl
aad
sub
leave
outsb
cwtl
lcall
push
xchg
inc
js
and
dec
add
bound
lahf
or
pop
mov
or
mov
push
jecxz
cmc
daa
fs
cld
push
mov
insb
out
add
push
add
mov
dec
cmp
je
mov
dec
repnz
lcall
mov
jno
adc
lock
test
push
xor
pop
xchg
je
es
adc
mov
lcall
adc
stc
jp
mov
push
sbb
popf
mov
sbb
xchg
push
inc
inc
fdivl
dec
xor
jo
jae
stos
leave
xlat
daa
not
add
les
add
push
sti
movzbl
movl
repz
pop
addr16
imul
cmp
jne
add
or
lods
inc
mov
or
sub
xchg
test
sbb
sbb
and
sub
and
inc
jne
cmp
sbb
add
jae
movsb
nop
dec
sbb
inc
sbb
push
xchg
dec
mov
mov
or
stc
stos
popa
sbb
mov
and
pop
sub
pop
xchg
js
mov
insl
test
cli
and
jne
aaa
mov
out
or
lds
adc
inc
iret
aas
inc
pushf
fdivs
sub
cmpb
inc
faddl
int3
push
leave
mov
inc
divl
xchg
xchg
leave
add
sub
and
pop
test
call
call
dec
mov
out
push
fmull
add
pushf
or
sbb
mov
and
lods
ss
outsl
xchg
sub
in
mov
fsubrl
push
or
add
mov
ret
sbb
lea
adc
hlt
cmp
pusha
stos
xchg
xchg
add
mov
je
scas
arpl
cmp
or
inc
cmp
mov
mov
mov
pop
cwtl
mov
pop
jmp
outsl
cmp
je
mov
pop
daa
sub
push
adc
das
push
sub
inc
and
fcmovb
inc
mov
fst
push
in
sbb
lds
add
xor
xor
lods
inc
push
mov
test
sbb
cmp
jne
add
jbe
xchg
test
add
das
mov
xchg
jo
roll
sub
push
add
mov
and
jae
sbb
adc
lods
jl
fldt
outsl
mov
js
pop
dec
push
shrb
lea
mov
popa
nop
aam
and
shl
cmpsl
out
push
xchg
outsb
insb
test
sub
ss
rcll
mov
adcb
in
xor
pusha
pop
adc
mov
jnp
adc
sub
or
jmp
cmp
pop
or
dec
repnz
push
mov
pop
inc
andl
add
loopne
lock
fcoms
std
or
push
enter
dec
adc
loopne
dec
and
enter
iret
decl
call
push
inc
pushf
and
mov
push
adc
xchg
jl
icebp
sub
sub
ret
push
jecxz
imul
gs
push
inc
out
cmp
pop
or
jle
jae
in
call
mov
enter
rclb
enter
add
jmp
pop
add
sbb
sbbl
push
xor
push
push
arpl
add
cmp
pop
out
nop
dec
fcmovnb
dec
or
rorb
repnz
pop
push
dec
inc
or
iret
sbb
mov
mov
sbb
mov
pop
pop
sbb
ds
in
mov
jg
addr16
xchg
mov
leave
xor
jns
hlt
mov
pop
movsb
rolb
pop
inc
movb
pop
test
or
test
inc
std
mov
out
push
psubsb
dec
push
inc
stos
mov
sbb
fmuls
es
stos
or
cmp
testl
push
mov
pop
hlt
inc
imul
jns
in
xlat
test
in
ds
lock
sbb
rorl
test
or
mov
movl
and
clc
ja
xchg
or
xchg
add
insb
push
xor
inc
sub
mov
and
pop
test
xor
pop
loop
sahf
mov
mov
pop
in
add
andb
and
icebp
sub
add
pop
scas
mov
or
and
enter
push
leave
mov
push
ret
mov
daa
sbb
repnz
lods
int
movsl
or
imul
or
cmp
mov
mull
xchg
push
mov
push
ficompl
ret
jge
dec
xchg
sub
out
pop
mov
xor
jmp
clc
mov
dec
aam
movsb
jmp
sub
test
subb
jo
fcomps
movsb
add
test
jl
fidivs
insb
ret
mov
div
cmp
add
push
mov
push
add
sahf
add
insl
pop
movb
leave
cwtl
push
push
pop
mov
lods
fst
pop
xor
add
mov
mov
mov
push
or
jl
sbb
adc
mov
xor
lret
int
scas
add
test
inc
pop
in
xchg
addr16
sub
pusha
add
call
in
lahf
fiadds
das
and
sbb
xor
xchg
and
push
sbb
adc
ljmp
movzwl
pop
dec
sub
scas
sarl
movsl
pop
add
push
testb
push
ret
rolb
fnstsw
repz
dec
pop
nop
jmp
popa
pop
jmp
jnp
push
insl
pop
or
sub
test
or
les
pop
jne
fadds
jns
insl
and
inc
call
sub
add
sub
clc
popa
insl
sub
dec
inc
or
inc
leave
popf
notl
inc
sbb
pop
and
push
pop
mov
test
clc
push
mov
and
mov
sbb
inc
andl
ret
and
adc
rorl
xchg
mov
jmp
or
jo
out
and
imul
push
lock
dec
insb
sub
inc
jo
jnp
xorl
xchg
inc
pop
inc
push
add
inc
mov
and
pop
cmpsb
stos
sub
dec
adc
sbb
sub
movsb
daa
push
sub
jo
adc
insb
add
in
push
xor
clc
sbb
dec
aam
push
call
mov
sub
pop
sub
add
jb
xor
inc
xor
movsl
imul
cmp
jl
dec
cwtl
iret
mov
popa
or
push
in
xor
push
adc
pop
sbb
dec
dec
and
roll
inc
or
inc
sub
movl
cmp
sub
or
sbb
push
add
add
enter
pop
mov
push
mov
push
js
add
cmc
add
inc
addr16
lea
inc
inc
loopne
and
dec
sbb
adc
ljmp
sbb
sub
inc
or
addl
or
je
mov
xor
sbb
and
mov
xor
out
movsl
dec
push
fildll
sbb
inc
lock
jmp
jmp
mov
or
adc
or
xor
push
and
fdivrs
mov
outsb
mov
or
xor
jg
cs
sub
dec
mov
dec
je
test
push
sahf
sub
in
out
mov
rorl
pop
mov
cmpsl
push
xor
push
jne
push
scas
push
lds
pop
jmp
jne
xor
rcrl
mov
repz
pop
jp
out
xor
adc
dec
pop
dec
lret
jo
pop
jge
test
mov
mov
add
inc
push
pop
inc
inc
or
sbb
add
xor
dec
dec
add
dec
or
adc
jns
sbb
jl
sti
dec
cmp
push
ja
jae
adc
sarb
jae
pop
sub
ret
les
jle
mov
outsb
jne
pusha
dec
or
loopne
cs
push
dec
push
nop
xchg
mov
fs
mov
lods
dec
cmp
addl
mulb
popf
inc
mov
test
adc
add
mov
and
push
rolb
sub
dec
aaa
lcall
or
call
adc
fidivrs
jl
xchg
inc
adc
dec
movb
ss
cli
pop
xor
pop
inc
pop
pop
das
nop
sub
dec
iret
test
jge
adc
rcrl
popf
adc
sub
hlt
cmp
rcll
gs
out
jne
or
xor
mov
daa
push
push
mov
adc
pxor
imul
or
ret
call
jno
scas
orb
adc
loopne
lea
add
inc
xor
pop
fbstp
lods
fld
push
add
xor
mov
xchg
arpl
mov
fstpl
lock
rcrl
jle
inc
jo
jecxz
sbb
mov
jo
push
fs
test
xor
test
stos
and
fisubrs
inc
and
addl
data16
mov
or
mov
sub
fldt
mov
mov
push
and
inc
or
xchg
sub
cmpsl
dec
push
pusha
int3
pop
mov
insb
lds
rcll
dec
bound
sub
cmp
gs
enter
or
sbbb
jno
in
sbb
scas
data16
loope
rcrb
decb
add
push
jns
add
rorb
fcoms
insb
pop
rolb
loopne
ljmp
or
fildll
filds
mov
dec
popf
loopne
or
add
in
inc
add
mov
insb
mov
xor
dec
mov
imull
pop
les
sbb
movl
pop
jp
mov
push
sub
daa
pop
pop
inc
pop
inc
and
or
shlb
cltd
sub
xchg
inc
or
clc
add
shr
test
dec
cmp
push
lods
sbb
jae
clc
push
aad
inc
add
cmp
enter
cmp
pop
sbb
or
mov
mov
push
pop
sbb
daa
push
dec
arpl
and
lds
ds
xchg
out
and
jecxz
pop
mov
ljmp
or
inc
mov
or
jne
mov
push
sbb
adc
inc
adc
push
imul
lock
xorl
popa
inc
fnsave
jo
fs
push
ljmp
movzbl
and
xchg
pop
jecxz
insb
xorl
xchg
xor
fisttpll
jp
arpl
jbe
movsl
lods
dec
icebp
mov
mov
mov
inc
xchg
scas
imul
inc
jne
rcr
or
push
mov
jo
sub
pop
mov
jmp
mov
pop
rorb
sub
dec
je
hlt
data16
int3
cld
jmp
ljmp
push
or
pop
adc
sahf
cmpsl
cmp
add
pop
pop
ror
mov
push
pop
inc
shlb
in
rcll
xor
xchg
loope
cmp
and
add
in
inc
inc
xchg
xchg
xchg
jle
and
in
push
adc
ret
dec
in
shl
mov
ss
das
xchg
sbbl
rclb
push
dec
and
or
fs
rolb
and
lods
inc
mov
and
mov
sub
and
and
xor
insb
popa
add
add
call
orb
dec
dec
pop
call
stos
mov
and
mov
jnp
outsb
add
rorb
mov
push
pusha
popa
in
push
sbb
mov
dec
popf
lretw
and
or
bsr
xlat
push
push
inc
mov
pop
xchg
xor
mov
xchg
push
push
mov
jb
mov
push
jle
pop
push
sbb
outsb
adc
in
pusha
sbb
sub
shlb
xor
or
push
mov
inc
adc
ret
sub
mov
mov
fsubs
push
add
ficoml
or
loopne
adcl
out
pshufw
cmp
jns
or
inc
xor
mov
mov
xchg
loop
push
mov
push
outsl
adc
adc
cld
sbb
push
jo
xchg
int
notb
add
mov
out
adc
ja
or
pusha
mov
xchg
lea
or
aaa
mov
call
pop
icebp
add
mov
mov
push
jecxz
lock
or
mov
jmp
push
mov
aas
mov
ss
inc
xchg
icebp
inc
push
lods
clc
and
or
fdiv
shr
mov
push
and
dec
movsl
push
test
and
inc
cs
stc
xor
push
add
cmp
inc
pusha
inc
mov
loope
push
add
lock
and
adc
sbb
adc
xlat
mov
add
js
je
pop
and
lock
dec
pop
pop
arpl
daa
adcb
stc
jge
and
test
mov
lret
jp
xchg
xchg
xorl
add
das
bound
xchg
cld
inc
lea
std
out
xor
xlat
inc
push
shrl
je
push
mov
xabort
loop
adc
pop
xorb
mov
mov
adc
xchg
mov
mov
fldenv
mov
jnp
icebp
mov
inc
mov
mov
out
sub
cmp
sub
flds
add
stos
fists
adc
jmp
out
mov
aad
xor
cmp
mov
xchg
fisubrs
push
notb
jmp
mov
ds
test
inc
out
jmp
das
stc
pusha
int3
or
mov
mov
dec
lret
push
mov
arpl
sub
xor
and
inc
jmp
testl
pop
xchg
ret
add
bound
push
add
lea
loop
mov
mov
add
push
lds
pop
add
xchg
inc
fbld
pop
dec
pop
insb
scas
mov
and
dec
add
enter
test
outsb
sub
xchg
add
push
and
push
cmp
pusha
sbb
aam
mov
mov
and
in
ja
mov
mov
imul
cmp
outsl
dec
sarb
mov
mov
jne
adc
sub
xor
pop
or
sub
or
inc
pop
nop
ds
and
cmp
jae
inc
push
leave
rolb
ss
imul
out
fsubl
adc
xchg
sbb
jbe
adc
shr
or
nop
cmpsl
xor
inc
or
rol
test
sbb
or
dec
push
in
daa
and
cltd
test
mov
pusha
dec
and
xchg
xchg
sub
xor
mov
inc
and
or
cs
push
outsb
push
test
sub
jns
push
push
mov
dec
jmp
inc
push
xor
incl
inc
add
pop
jns
inc
frstor
sbb
pop
sub
xor
sbb
cmp
adc
cmp
dec
or
sbb
stc
lret
cmp
ficomps
sub
jbe
xor
adc
adc
leave
test
add
cmp
addb
adc
inc
jle
and
push
daa
push
inc
xchg
test
popf
nop
pop
adc
cmp
add
sbb
xor
add
ljmp
dec
js
pop
push
mov
rolb
push
test
and
jno
adc
dec
movsb
add
nop
mov
push
call
jb
pop
sti
mov
popf
lock
loopne
cmc
jmp
lret
and
adc
movsb
add
movsl
ja
adc
push
insb
addb
addr16
cltd
inc
int
fdivrs
or
lods
mov
cmpsl
jne
scas
dec
dec
mov
fs
daa
adc
insl
add
andb
pusha
and
sbb
mov
out
aam
sub
stos
mov
stos
roll
inc
clc
or
nop
push
jmp
insb
loope
and
xor
mov
adc
add
add
movsl
sub
push
mov
ja
dec
push
scas
xor
pop
call
add
rcrl
outsl
push
cmp
xchg
imulb
mov
adc
adc
push
push
stos
dec
dec
ds
aam
ss
mov
andb
mov
ret
pop
sub
xchg
in
ljmp
shlb
pop
lret
push
adc
shlb
cmc
mov
and
and
ret
loopne
pushf
outsl
or
and
lock
ret
inc
outsb
sbb
cmp
xor
pop
sub
or
sbb
addr16
jle
fnstcw
mov
mov
xlat
xor
mov
enter
aaa
sub
jo
pop
imull
fstpt
dec
in
cmpsl
mov
and
mov
daa
pop
rolb
jmp
pop
sbb
xor
push
mov
aas
jo
sbb
mov
mov
pop
mov
enter
push
daa
mov
sub
test
clc
out
clc
add
pop
and
sti
xchg
inc
and
cmp
push
xor
jecxz
dec
outsl
push
fisubrs
out
das
mov
or
mov
in
imul
xorb
inc
mul
mov
pop
inc
cmp
testb
or
jg
cmpsl
subb
subb
sbbl
dec
sub
je
and
push
pop
addr16
mov
lds
adc
movsb
ffreep
and
fs
inc
pop
adc
call
sbb
dec
pop
repnz
push
jge
xchg
jo
dec
adc
pop
or
push
ret
sti
jecxz
sub
dec
test
mov
test
fidivrs
test
pop
adc
add
and
cvtps2pi
lock
mov
imul
out
add
fmull
pusha
enter
jle
cmp
push
les
sbb
jecxz
sub
mov
in
mov
cli
add
push
scas
sbb
pop
xchg
je
int
loope
cmp
sub
shll
incb
jg
fwait
push
sbb
inc
cmp
xchg
fld
dec
mov
enter
adc
or
add
or
cmovae
inc
push
sbb
inc
add
hlt
or
xor
mov
imul
inc
cmp
movsb
cmp
inc
pop
jmp
jge
sub
imul
loop
and
test
mov
insb
adcl
push
loope
inc
push
push
pop
push
mov
imul
inc
adc
cwtl
cmp
and
cmpsb
dec
call
enter
in
mov
adc
mov
jns
loope
cmp
adcb
mov
call
pop
loopne
scas
in
mov
pop
pop
add
push
push
loopne
pushf
int
jae
pop
add
test
add
add
mov
add
add
mov
cs
pop
fiadds
jmp
mov
lcall
rolb
mov
bound
sbb
popa
int
mov
mov
jmp
gs
and
es
les
lock
nop
in
sarb
adc
aaa
jns
push
stc
sbb
addl
jl
add
adc
ljmp
inc
or
in
jo
xor
out
pop
imul
inc
addl
jo
or
aaa
pop
fwait
and
gs
dec
xchg
dec
pop
mov
iret
pop
sbbb
cmpsl
movsb
addl
mov
outsl
call
push
inc
inc
imul
ret
js
pop
and
cmp
adc
sbb
pop
outsl
push
adc
orl
jmp
inc
insl
imul
les
cmp
out
xchg
pop
inc
push
lock
or
add
adc
iret
ljmp
add
xchg
push
push
out
arpl
push
lea
pop
inc
cmp
xor
and
faddl
fiaddl
call
push
sbb
xor
push
or
sub
push
and
repnz
jle
sub
and
fs
inc
sbb
adc
nop
inc
push
adc
leave
inc
push
sbb
cld
out
or
enter
pop
jb
and
leave
test
rclb
sarb
xchg
test
jno
movsb
mov
cmp
fwait
test
clc
pop
gs
leave
add
cmp
or
xor
sub
mov
mov
mov
mov
sbb
mov
test
jo
sbb
aaa
test
repz
imul
or
add
movb
mov
inc
dec
movsl
pop
nopl
gs
cltd
imul
ds
sahf
sbb
pop
pop
and
mov
mov
push
push
jmp
xchg
sbb
mov
ljmp
dec
sbb
mov
jae
mov
or
pop
inc
pop
sbb
mov
push
int3
outsb
sbbl
sbb
dec
adc
addr16
loopne
addr16
sbb
ja
mov
int3
xchg
push
push
sbb
push
pusha
or
lock
pop
add
and
or
push
sti
sub
pop
popa
cmp
jle
push
pop
cmp
mov
loop
adc
fdivs
and
xor
dec
mov
and
sahf
xchg
add
dec
jmp
outsb
popa
mov
jmp
pop
sbb
cwtl
and
shr
sub
pop
lock
mov
ret
jmp
pop
lock
jnp
push
adc
jbe
daa
push
or
pop
ret
dec
adc
daa
clc
jno
sahf
xchg
cmp
adc
push
or
jmp
xor
cwtl
rcl
and
test
pusha
call
sbb
jl
jno
xlat
push
inc
or
push
xor
iret
das
adc
cltd
adc
nop
out
cmp
test
push
outsb
inc
je
mov
dec
xor
hlt
pop
dec
outsb
cmp
pusha
cmpl
jb
sub
xor
pusha
mov
lods
psubw
adc
push
push
mov
std
lea
lea
fcomps
loopne
mov
ds
jb
push
sub
or
add
insl
shll
push
enter
cmpsl
dec
push
push
dec
inc
pop
cmpsl
sub
mov
add
adc
cmovno
cmp
xorl
push
adc
or
adc
mov
enter
jge
stc
dec
shll
cs
adc
pop
push
xchg
xor
xor
jle
orl
test
xlat
mov
inc
push
movsl
dec
inc
andb
or
outsl
mov
mov
int3
lea
stos
or
mov
jo
sbb
xor
and
push
nop
ss
pop
or
mov
xor
sub
dec
sub
inc
adc
test
mov
lods
dec
pop
xlat
inc
outsb
jne
adc
ret
jo
popa
jns
jae
push
jbe
and
mov
repz
mov
leave
faddl
dec
dec
or
or
sahf
int
repz
adc
mov
and
ret
push
push
inc
push
xchg
aaa
loope
lret
inc
dec
dec
decl
pop
dec
pop
jb
leave
push
mov
cmp
xchg
pop
jnp
xlat
mov
jb
add
nop
xor
popa
fnstsw
ret
mov
adc
pop
sub
outsl
and
jmp
pop
xchg
cld
mov
pop
rcll
mov
inc
idivl
cmp
inc
hlt
adc
out
inc
out
fsubrs
inc
fisttpl
imul
lea
dec
popa
push
dec
mov
push
imul
mov
jbe
adc
test
sti
jnp
jnp
lea
mov
pop
xor
jbe
or
dec
or
popa
push
jnp
int3
cs
inc
add
les
adcl
mov
xchg
sbb
decb
inc
mov
inc
rcll
aad
addr16
movsb
test
mov
decl
lea
sbb
xor
push
dec
inc
dec
push
stc
filds
cwtl
sbb
push
andps
xor
push
hlt
fcoms
adcb
xchg
js
cmpl
mov
js
pusha
imul
lods
out
push
shll
xor
cmp
sbb
push
cmpsb
imul
in
test
push
sub
aaa
imul
nop
rcll
in
sbb
stos
in
out
nop
inc
scas
js
pop
fwait
inc
pushf
mov
mov
or
fsts
out
and
and
sbbb
idiv
push
call
nop
xlat
cmp
add
cmp
fnsave
mov
or
ljmp
test
repz
xchg
xchg
mov
in
test
adc
push
sub
cld
or
mov
dec
fcmovb
push
pop
mov
xor
xor
cmp
xchg
out
bound
pushf
loopne
subl
icebp
das
in
sbb
popf
push
add
cmp
das
cmp
hlt
in
xchg
iret
test
pop
mov
push
sbb
sub
push
push
adc
sbb
shlb
jbe
arpl
push
lock
leave
hlt
xchg
test
ja
add
and
into
rcll
xchg
mov
sbb
sub
call
and
mov
int
icebp
stos
lret
mov
and
jg
push
and
prefetcht1
fsubrl
stos
add
adc
sbb
ret
adc
loope
ljmp
mov
push
xchg
lret
dec
out
add
rclb
test
sub
push
adc
xor
stc
or
test
lds
subl
test
xchg
arpl
sbb
xor
mov
test
mov
jge
sbb
rclb
sarl
fldl
push
and
movb
popf
pop
cli
test
aad
call
fucomi
daa
leave
and
adc
xchg
pop
nop
outsl
dec
sub
adc
scas
pop
or
inc
xor
clc
lea
loop
test
dec
lods
push
push
shlb
inc
daa
add
sbb
jo
and
or
or
adc
aas
mov
sbb
add
les
inc
and
or
jne
sbb
into
and
push
xchg
inc
push
cmp
nop
and
mov
xchg
xchg
mov
mov
shlb
fstl
popf
jl
dec
push
rcl
loope
fdivr
add
sub
pop
movsb
push
xchg
push
sbb
daa
rol
inc
add
or
data16
mov
xor
pop
jmp
add
inc
mov
and
pop
js
popa
daa
in
sub
push
jg
or
dec
inc
mov
addb
adc
push
mov
dec
add
inc
rcll
insl
push
push
inc
sarl
fadds
xchg
cmp
adc
cmpsb
xchg
lret
jae
xchg
xchg
das
fmul
ror
mov
shr
mov
dec
in
fsubs
cmp
fadd
cmp
insb
cmp
test
insl
xor
lea
in
sbb
or
mov
inc
outsl
lock
loopne
cmp
jmp
mov
add
and
add
jae
and
rolb
sub
adc
jge
inc
inc
es
test
lock
sub
cltd
sbb
xorl
lahf
jecxz
adc
sbb
push
xor
inc
pop
rcrl
adc
xchg
jl
mov
in
lock
cmc
push
pop
mov
cmp
and
xor
xchg
call
cmp
jmp
cld
loope
push
rclb
inc
lock
fs
fisttpll
add
addb
nop
dec
ret
les
sub
lcall
and
and
cmp
xor
je
xlat
pop
clc
jo
xchg
mov
xor
sbb
lock
ret
add
test
in
ss
ja
adc
adc
dec
sub
movsl
mov
xchg
xor
or
cmpsb
and
add
bound
fdivr
cmp
sbb
loope
mov
fidivs
inc
lcall
or
inc
jnp
jp
inc
xchg
fld
test
orl
sbb
jle
jmp
push
mull
sbb
mov
xchg
test
and
mull
sarb
mov
inc
pusha
sti
mov
or
jg
push
adc
cltd
nop
or
adc
or
dec
cmpsb
clc
add
inc
sub
int3
push
sbb
xchg
iret
sbbl
in
pop
cmp
mov
sub
fsubr
mov
xchg
add
pushf
cmp
std
or
addr16
incl
mov
pushf
push
xchg
pusha
pop
insb
sbb
or
adc
push
aaa
neg
sbb
push
addr16
sub
jmp
push
xor
xchg
outsb
push
dec
push
mov
stc
outsb
pop
hlt
je
in
in
lahf
push
xchg
in
cmp
pop
mov
out
cld
xlat
mov
push
xor
dec
movsb
jo
int
es
dec
inc
outsb
dec
jae
test
push
xor
xor
iret
push
cwtl
push
cmp
dec
enter
pop
push
nop
or
jo
rcrb
out
pop
fsubs
sub
cmp
mov
sbb
arpl
arpl
sbb
mov
mov
push
adc
test
es
test
pop
xchg
lods
incb
push
das
push
inc
outsb
push
bound
inc
gs
sahf
xchg
pop
push
sbbb
addb
mov
push
shrl
daa
jg
push
jbe
fists
orb
cmp
inc
lea
jl
repnz
mov
push
test
add
xchg
mov
add
dec
std
nop
loopne
call
imul
adcb
sti
xor
push
inc
jb
jle
int
adc
aas
push
outsl
cmp
xchg
push
push
js
or
add
xor
add
push
sbb
adc
pop
push
shll
enter
inc
pushf
js
inc
lret
add
and
enter
xor
pushf
ja
mov
cmp
shll
test
xor
fldt
or
leave
andb
daa
daa
test
daa
daa
xchg
cwtl
pushf
mov
movsb
test
mov
daa
daa
daa
mov
mov
daa
enter
daa
daa
daa
aam
fsub
daa
daa
daa
daa
in
in
lock
daa
daa
daa
hlt
clc
cld
add
add
or
xchg
xchg
xchg
adc
sbb
xchg
xchg
xchg
and
sub
add
xchg
xor
jg
mov
push
nop
cpuid
cmp
mov
icebp
inc
cmpsl
adc
pop
movsb
add
shlb
pop
xor
out
es
fs
je
or
jl
and
test
mov
sub
cmp
and
cmpb
and
sbb
jae
cmp
pop
lods
pop
mov
sbb
jae
mov
mov
movsb
mov
iret
rol
aam
pop
repnz
loopne
hlt
sbb
test
in
fsubrs
nop
out
sahf
fdivrl
loopne
jns
in
in
call
add
test
push
in
nop
cwtl
hlt
mov
inc
sahf
add
cld
shl
sbb
repz
loopne
hlt
dec
push
ds
or
or
cmp
repnz
and
jae
iret
adc
sbb
repnz
push
iret
andl
enter
xor
roll
xchg
inc
inc
add
push
ja
cmpsl
loop
rolb
je
gs
shlb
sbb
mov
fwait
roll
outsl
jae
and
xchg
or
sbb
adc
test
inc
ficoml
add
add
pusha
cld
push
popa
jb
test
daa
pop
in
sbb
js
test
mov
mov
dec
inc
xchg
gs
rcrl
adc
fs
pop
dec
adc
dec
jae
mov
xchg
out
mull
jns
jnp
jae
sbb
inc
mov
pop
pop
or
movsl
adc
pop
arpl
mov
sbb
xorl
imul
dec
fsts
imul
addr16
adc
mov
orl
movl
cmpsl
in
loopne
repz
xor
lret
push
or
cmp
mov
dec
insl
add
and
or
das
faddl
in
pop
xchg
dec
insb
inc
bound
pop
xchg
jno
das
rcr
nop
inc
mov
and
fs
jg
mov
je
addr16
jne
insb
mov
sub
out
jge
ret
imul
das
pop
and
cmp
insb
icebp
inc
outsl
arpl
rcrl
loope
ljmp
outsl
pop
sub
jbe
filds
inc
adc
sbb
cmp
mov
xchg
push
cltd
cmp
xchg
push
cmp
cmp
add
sbb
es
xor
sub
loopne
jae
xchg
xchg
push
fbstp
dec
lret
stos
dec
lret
fsubs
add
lods
cmp
lods
push
add
nop
add
adc
xchg
xchg
fs
pop
xchg
inc
xchg
test
ljmp
lods
pop
outsl
xor
pop
pmulhuw
sub
and
jb
pusha
pop
xor
fs
xor
pop
xchg
push
and
mov
mov
xor
push
push
pop
xchg
pop
dec
xchg
nop
popl
scas
inc
adc
cmp
fadd
xor
mov
ret
adc
sbbb
incl
push
je
mov
jo
mov
insl
xor
push
xchg
sub
push
xor
jae
mov
imul
fildll
movsl
inc
pusha
push
pop
push
inc
inc
fidivrl
cmp
or
and
dec
cmpb
int
repnz
push
push
add
pop
test
lock
movb
push
push
and
inc
inc
out
test
push
out
xor
push
or
lds
jno
cmp
js
prefetch
or
dec
mov
inc
cmp
add
cwtl
sub
sbb
cmp
in
add
add
xchg
mov
sub
jecxz
fadd
sub
xchg
cmpb
negl
mov
inc
or
adc
pusha
in
mov
dec
adc
or
test
cmovle
es
pop
out
sub
adc
pop
pop
cmp
fimull
or
out
push
push
pop
shlb
adc
xchg
cld
inc
push
ret
rcrl
call
nop
pop
dec
in
mov
and
add
pop
mov
mov
sbb
jo
inc
cwtl
pusha
or
cld
push
pop
push
mov
ja
daa
adc
add
cmp
and
rol
inc
loopne
inc
das
adc
mov
push
sub
push
outsb
fimuls
sarl
pop
repz
add
add
pop
dec
mov
jge
inc
sbb
and
pop
repnz
outsl
cmp
inc
insb
insb
mov
cmp
pop
push
outsl
pop
or
and
lods
adc
mov
mov
shrb
test
lret
mov
add
je
add
adc
lret
pusha
addr16
sub
fmuls
mov
pusha
aas
jecxz
test
mov
mov
fs
xor
fs
addr16
push
out
inc
imul
xlat
push
arpl
dec
jmp
lret
and
outsl
rorb
bswap
push
lock
insl
nop
jbe
cs
les
pop
mov
imul
mov
or
inc
xchg
mov
insl
nop
ss
test
shrb
and
mov
xor
push
imul
push
lods
pop
into
mov
xchg
rol
lock
addr16
mov
jl
stc
add
mov
push
cld
test
insb
xor
add
test
and
enter
lock
ja
adc
adc
test
pop
cmp
push
ss
fs
test
xchg
push
test
inc
adc
jl
fildll
fsubrl
mov
in
mov
push
imul
testb
add
pop
pop
jo
mov
sub
jae
jb
mov
subb
jl
add
imul
adc
lea
inc
sbb
mov
rolb
mov
mov
movsb
push
push
add
shlb
add
jle
sahf
daa
cmpsb
and
imul
nop
xchg
xor
adc
sahf
out
mov
add
xor
xorb
inc
inc
clc
push
and
mov
nop
out
mov
pop
sbb
pop
dec
cmpsl
mov
cmp
mov
and
jnp
push
mov
xor
adc
jnp
push
inc
pusha
pusha
add
adc
or
push
ss
enter
out
loop
push
inc
or
and
mov
in
ss
cmp
or
cmp
adc
xor
sub
add
and
enter
and
or
sub
sub
sub
cs
enter
adc
enter
adc
and
and
sbb
sbb
push
or
enter
add
enter
add
and
and
or
or
push
cmp
enter
icebp
int
jne
das
mov
pop
jo
ds
push
cmp
pop
sub
xor
rcll
dec
sbb
shll
add
lcall
lock
imul
xor
cmpsb
sar
mov
lock
dec
call
test
dec
shll
mov
xor
rcll
dec
shll
cwtl
push
nop
pusha
mov
shll
jo
dec
shll
pop
sub
dec
sbb
xor
rcll
cmp
xor
cmpsb
imul
cmpsb
imul
cmp
xor
jp
mov
jg
sub
aaa
mov
mov
xchg
mov
pop
xor
out
xchg
leave
stos
adc
jl
scas
cwtl
mov
jl
aad
test
pusha
push
repnz
faddl
lahf
inc
daa
push
mov
lods
jl
pop
cmpb
adc
and
lds
xorb
mov
nop
dec
cs
mov
out
jl
xchg
xchg
mov
xchg
adc
loopne
adc
aaa
movsl
repnz
jl,pn
or
mov
mov
mov
rorb
dec
add
cs
pusha
hlt
mov
lcall
xor
push
mov
and
mov
push
out
stos
insb
pop
cmp
into
sbb
enter
and
shll
ret
mov
inc
mov
xchg
mov
and
lods
ja
hlt
les
js
xchg
sti
aaa
jo
adc
mov
inc
jg,pt
or
fdivs
adc
mov
push
mov
scas
sbb
mov
pop
jb
or
jle
add
mov
inc
sub
cmpb
in
xorl
out
scas
pop
add
push
add
mov
jmp
adc
jmp
mov
ret
push
xchg
je
pusha
jg
jle
sbb
xchg
cwtl
hlt
imul
push
push
mov
outsl
loope
subb
addb
jge
xchg
push
aam
add
mov
xchg
notl
je
gs
movb
and
mul
cs
xchg
outsl
sub
xchg
push
outsl
or
mov
mov
sub
cmp
lret
inc
and
add
addl
add
shlb
inc
mov
cli
lods
ds
jge
adc
adc
cmc
insl
lods
sub
inc
and
jb
xchg
and
xchg
adc
mov
or
inc
scas
and
popf
add
outsb
fs
inc
jmp
test
or
push
pop
add
lock
loop
mov
filds
dec
loop
je
pushl
pusha
rol
add
pop
xor
dec
subl
test
add
push
loop
in
rorb
ret
mov
das
push
les
pop
repnz
mov
shl
sbb
xchg
lock
or
inc
push
lock
aaa
mov
push
add
xor
mov
jnp
hlt
push
push
dec
scas
push
enter
nop
jo
cli
fs
inc
inc
or
inc
cmp
clc
push
mov
jle
inc
int3
inc
or
add
inc
mov
sbb
sub
in
inc
ret
fimull
mov
and
and
jns,pt
add
lock
dec
into
dec
jnp
arpl
ret
aam
push
cmp
hlt
mov
xor
xchg
jecxz
cmp
xchg
jb
std
cmp
pop
or
arpl
imul
add
addr16
rcrb
sbb
mov
xor
pop
cmp
mov
fiaddl
add
or
mov
pop
xorl
aam
push
cld
ret
sub
push
cmc
lcall
pusha
fdiv
js
mov
add
fwait
cld
in
add
push
mov
and
cli
aam
mov
pushf
fwait
cltd
mov
movsl
add
aam
les
lcall
push
inc
lds
inc
add
or
push
xchg
push
mov
push
and
shrl
mov
push
mov
lea
dec
popa
push
mov
bound
shrl
dec
lcall
lods
dec
sbb
jle
xlat
mov
mov
add
clc
andb
xor
cmp
cmp
imul
dec
sahf
int3
daa
pop
or
rorl
add
inc
loopne
dec
sub
mov
and
jne
push
cld
sbb
push
enter
ret
ret
jne
nop
and
adc
pop
sub
dec
jb
sub
push
vorps
xchg
clc
sbbb
jp
popa
clc
enter
cmp
mov
repnz
orb
enter
inc
mov
lahf
sbbl
push
orl
dec
fdivrs
push
je
ret
mov
or
cmp
lds
cmp
rcrb
adc
insb
aaa
stc
rcl
push
sar
mov
cltd
shrb
add
mov
pop
cmp
xchg
mov
push
data16
test
filds
or
inc
pusha
jmp
and
dec
cwtl
fcomp
or
jb
inc
test
je
loope
dec
je
sbb
sarb
mov
and
pop
les
sub
add
shrl
mov
daa
mov
push
jmp
loopne
sbb
loop
or
insl
shll
mov
jbe
call
or
ds
mov
test
repnz
pop
leave
xchg
xchg
loopne
enter
inc
xchg
enter
push
popa
jnp
ja
pop
push
push
push
mov
add
movsl
imul
mov
sub
insl
loope
std
out
and
xor
xor
dec
imul
mov
verr
out
cmp
add
arpl
insb
push
arpl
imul
xchg
int
insl
inc
outsl
pop
js
arpl
insl
pop
daa
jo
jb
jb
popa
or
sbb
es
mov
lods
mov
jae
jbe
daa
ja
test
out
pop
addr16
aaa
xchg
in
fidivl
addr16
push
lods
mov
imul
mov
push
jg
sub
stos
outsb
jnp
or
loop
sbb
adc
jbe
and
pop
jb
mov
cmp
pop
insl
dec
fwait
mov
ljmp
cmp
ss
outsl
dec
pushw
das
add
push
push
pop
ja
imulb
adc
fdivrl
xor
ret
and
outsb
pop
push
xchg
nop
mov
push
inc
ja
mov
cmp
and
pop
add
ret
ret
daa
mov
adc
xor
mov
ja
jle
je
push
lock
xor
and
adc
testl
mov
or
adc
mov
js
sub
mov
jae
and
fidivrl
insl
aaa
sub
push
sub
push
les
jne
pop
xor
out
ret
jmp
insb
out
icebp
inc
mov
inc
pop
adc
out
add
enter
mov
cmpl
cmp
inc
nop
xchg
xchg
enter
or
mov
add
jge
cltd
or
stos
lcall
xchg
xchg
mov
sbb
dec
out
into
in
push
jecxz
in
clc
inc
sbb
popf
dec
pop
femms
push
jne
pop
in
sbb
jo
imul
sbb
loope
xchg
jecxz
cmp
and
inc
repnz
sbb
movb
mov
push
incb
xor
jge
add
lret
sti
testl
and
push
sbb
icebp
or
int
cs
push
and
push
xlat
int
mov
cs
xor
cmp
repz
and
adc
add
or
xchg
mov
imul
pop
and
lock
jmp
add
js
or
test
ss
cmpb
lcall
mov
out
or
add
xor
mov
or
or
or
or
or
or
rorl
adc
adc
dec
shll
sbb
decl
xor
sbb
and
and
imul
push
shl
repnz
and
xor
pop
imul
shll
iret
loopne
add
imul
imul
imul
shll
rorl
push
jbe
fwait
add
inc
sahf
add
add
push
push
adc
inc
sahf
add
or
in
nop
or
or
sahf
add
or
push
sbb
push
add
in
movaps
sub
xor
in
adc
cmp
sahf
add
adc
inc
push
inc
pop
inc
sahf
add
sbb
nop
sbb
push
sahf
add
sbb
pop
mov
imul
push
repz
repz
imul
cmp
mov
fs
sbb
and
xchg
adc
push
pop
mov
test
lods
add
pop
mov
and
or
sub
jl
jp
fadds
push
cltd
dec
pop
ja
or
ljmp
jge
stos
and
sti
aas
js
lock
fidivl
and
add
clc
push
adc
push
add
lret
push
cmp
sbb
xor
aas
stos
mov
iret
lods
notl
mov
xchg
inc
mov
mov
loopne
faddl
jg
dec
pop
pop
lea
mov
push
mov
sarb
mov
mov
and
jp
rclb
cmpb
lock
mov
scas
sbb
adc
hlt
mov
lods
or
shl
imul
xor
cmp
cmp
pop
mov
push
and
ds
or
in
dec
scas
aam
inc
js
inc
add
lods
mov
add
xor
mov
mov
cwtl
fcmovnu
mov
fsubrl
push
inc
xor
test
lret
xor
cmp
mov
mov
insl
lods
pop
cwtl
mov
aas
cmpsl
sarb
pop
cs
inc
addb
sbb
enter
insl
test
hlt
mov
jnp
in
pop
push
fsub
js
adc
xchg
jl
xor
push
push
cs
jp
test
ret
jg
sub
fmul
push
mov
mov
mov
dec
rcll
js
loopne
push
mov
lar
add
xor
sti
xor
ret
pop
popw
sub
mov
cmp
mov
jb
scas
lods
aam
mov
pop
mov
fcomip
rolb
out
pushf
or
aad
subb
fs
xor
test
out
and
adc
adc
add
inc
mov
xor
push
cmp
or
or
inc
mov
dec
rclb
xchg
add
ret
sub
xrelease
sbb
mov
aas
icebp
sbb
pop
inc
push
add
mov
int
lret
mov
int
fwait
add
je
add
pushf
nop
adcb
or
inc
push
jb
xlat
jae
jnp
push
pop
movsl
jg
test
clc
test
mov
mov
cmp
fsts
push
push
imul
push
jp
mov
hlt
push
pop
outsl
loop
or
jns
test
outsl
mov
dec
dec
scas
push
fs
pusha
adc
sub
push
cmp
push
cld
xchg
sub
sub
loopne
lock
xchg
push
out
pop
fmull
lods
loop
loopne
mov
lods
mov
pusha
push
push
pusha
xchg
insb
push
fisubrs
nopl
push
push
push
pop
xchg
push
add
test
sbb
test
sbb
pop
xchg
sbb
or
sbb
or
or
pusha
sbb
sbb
mov
add
aas
push
out
outsl
jo
aam
in
add
cltd
cmp
lds
roll
pop
in
jo
xchg
add
xor
cwtl
mov
sbb
and
jmp
sbb
movsb
enter
ficomps
fildl
push
or
lret
push
insb
pop
pusha
jne
push
imul
jbe
and
sbb
and
and
insb
jmp
and
adc
cmp
lahf
and
enter
inc
jmp
in
xchg
sub
and
cmp
push
addr16
xor
aaa
and
dec
jl
cmp
es
xchg
xor
popf
and
std
xchg
mov
nop
xor
cmp
dec
pushf
mov
enter
stc
inc
xchg
push
xchg
out
dec
fdivr
xchg
or
sub
or
cwtl
inc
sbb
mulb
xchg
xchg
add
inc
add
xchg
shrb
int
inc
sarb
push
js
insl
lea
in
jmp
test
add
sub
dec
add
push
add
mov
inc
shlb
dec
fcomp
xor
mov
dec
loopne
or
in
xor
or
cwtl
add
out
addr16
xchg
xor
int
and
lret
cli
dec
adc
imul
xor
bound
pop
lock
lock
or
adc
xchg
jne
add
pop
dec
maskmovq
mull
mov
lahf
daa
daa
mov
imul
shrb
cld
hlt
mov
add
in
orl
inc
or
pop
loop
mov
sbb
pop
add
ret
push
stos
add
movsl
bound
lods
in
or
xor
lods
gs
andl
aaa
adc
dec
sub
ja
add
mov
movsb
cmp
mov
or
push
int
sarb
mov
das
xchg
lds
adc
add
lods
mov
cwtl
movsb
popf
inc
jo
test
sub
mov
add
movsl
daa
pop
lock
jne
mov
sub
dec
and
mov
enter
push
or
test
data16
outsb
dec
lock
imul
sub
push
sub
xchg
mov
mov
jle
fistps
sar
rcl
xor
jge
rol
push
push
pop
fcmovnbe
adc
inc
rcl
and
push
cwtl
icebp
push
mov
sbb
add
lahf
mov
dec
mov
push
repz
mov
mov
cmp
dec
repnz
pop
push
fstpl
inc
push
jg
pushf
sub
subl
mov
data16
mov
push
sbb
jecxz
push
ds
fiadds
movsl
sub
cli
and
rcl
dec
mov
add
cwtl
shlb
add
sbb
xchg
pop
jecxz
add
pop
jbe
jnp
test
or
mov
cwtl
sbb
pop
imul
and
outsl
daa
and
aas
das
mov
test
mov
sub
rclb
push
lea
lea
and
jno
mov
and
fs
andb
mov
test
add
clc
xor
ret
push
nop
imul
mov
sbb
pusha
andl
leave
shlb
cwtl
pop
mov
movsb
ja
add
pop
xor
cli
mov
and
data16
notb
pop
sub
and
iret
or
push
adc
and
in
loopne
outsl
jnp
push
cmp
test
sbb
jo
addr16
jge
out
push
pusha
inc
pop
ja
loope
jns
and
adc
inc
dec
fs
pop
xchg
push
stc
inc
in
dec
fadds
inc
add
add
add
and
inc
add
push
inc
or
inc
jno
cs
cld
pop
sbb
mov
pop
lock
or
add
dec
inc
mov
sbb
ss
and
mov
add
jae
fsubl
fs
je,pn
gs
sub
jb
add
add
mov
insl
loop
cmp
dec
cld
je
push
cmp
nop
mov
mov
loopne
hlt
psubusb
mulb
lock
pmullw
enter
xor
push
xchg
mov
sub
lods
inc
inc
mov
mov
in
loopne
stc
pop
add
pop
dec
shrl
or
leave
shll
jmp
dec
rcrl
ficoml
sahf
movsb
add
stc
sbb
in
pop
jecxz
insl
mov
and
gs
out
cmp
icebp
sbb
lea
push
push
mov
adc
sbb
mov
sbb
popa
or
jl
jne
adc
or
scas
cmp
and
xchg
aam
fsts
fstl
fists
lret
repz
mov
push
adc
and
into
jle
clc
push
mov
xor
or
cmpsl
call
sub
das
nop
sbb
pusha
adc
push
or
lea
or
mov
sbb
add
push
fistpl
loopne
inc
sahf
lahf
in
test
lea
aam
int3
add
andb
mov
cmp
push
sarl
and
mov
hlt
cmp
lods
imul
pop
and
pop
lea
cmpsl
mov
xchg
mov
test
test
add
inc
push
ret
mov
shll
roll
jl
and
push
cmp
inc
clc
or
mov
jns
popa
add
sbb
sbb
lock
lock
sbb
popf
dec
lods
or
test
inc
mov
pop
pop
sbb
loop
rol
dec
popa
mov
pop
xor
or
sbb
or
pop
mov
gs
jns
clc
push
js
lcall
xor
roll
xchg
loopne
ret
push
pop
jno
stc
adc
orl
cmp
inc
dec
sub
and
sub
push
bnd
mov
jae
sub
sub
and
xor
outsl
sub
das
sub
sbb
ret
movb
add
aad
adc
in
adc
and
rorl
andl
shll
shr
pushf
sbb
inc
mov
test
xchg
xlat
adc
inc
adc
imul
push
lock
jo
add
icebp
add
jmp
cmpsb
cld
incl
xchg
fldcw
push
lock
and
cwtl
cld
sub
pop
sub
cmp
cmp
pop
test
lds
stc
or
loopne
cmp
cld
mov
insl
jo
inc
jmp
push
out
sub
xchg
inc
jno
or
push
inc
mov
and
sub
pop
jbe
add
xchg
insb
dec
fwait
call
pop
ret
fwait
ret
imul
imul
and
daa
push
xor
ljmp
add
cmp
out
or
add
push
ret
cmc
and
push
or
imul
and
decb
add
cmp
or
je
int
or
xor
sti
sbb
pop
and
shll
ja
hlt
push
iret
dec
loopne
imul
mov
fidivl
ret
sub
add
inc
dec
or
clc
shrd
push
or
filds
fildl
repz
or
push
add
or
pop
adc
insl
sbb
push
mov
jg
or
mov
push
jg
xor
arpl
jmp
add
mov
xor
mov
lods
push
pop
push
dec
dec
dec
inc
dec
push
add
and
or
mov
mov
and
xor
aaa
xchg
mov
or
or
andb
pop
push
and
adc
cmp
and
aaa
mov
incl
adc
and
jmp
imul
xchg
push
adc
mov
sbb
sti
jmp
cmpsl
jecxz
or
inc
sbb
stos
inc
in
adc
or
aas
sub
pushw
lock
adc
dec
and
inc
rolb
add
test
pop
pop
xchg
mov
and
or
adc
sbb
lcall
sub
enter
pop
lret
outsb
adc
adc
fcomip
xor
inc
and
cs
sbbb
mov
jp
ret
cmp
mov
or
inc
add
out
inc
pop
daa
sbb
imul
ja
clc
aam
data16
or
jb
ja
dec
cmp
or
mov
and
inc
mov
adc
into
clc
or
sub
push
inc
out
cmp
mov
out
xchg
subl
sub
or
jns
shlb
jge
sbb
filds
sbbb
shr
movsb
sbb
pop
push
lahf
xor
scas
and
add
push
mulb
dec
push
popa
mov
aaa
mov
add
or
je
sub
xor
inc
nop
popa
insb
popa
sbb
subl
xchg
mov
inc
push
ds
stc
scas
xchg
das
call
adc
mull
adc
fs
adc
orb
sub
push
mov
push
mov
lea
clc
xchg
mov
and
inc
roll
inc
cmpsl
xchg
fwait
in
icebp
cmp
lock
je
mov
jns
sbb
dec
es
or
sub
cmp
or
fiadds
add
mov
push
nop
cmpsb
test
xchg
in
dec
roll
test
and
push
int3
push
in
push
inc
shrl
repnz
dec
pop
repnz
bnd
or
f2xm1
dec
scas
adc
js
in
add
repnz
repz
leave
or
je
mov
imul
les
fmuls
pushf
mov
out
pop
sub
cwtl
inc
test
nop
sbbl
cwtl
repnz
stos
inc
jle
add
mov
loopne
shll
hlt
nop
adc
pop
jo
pop
hlt
mov
in
shrb
inc
cld
cs
push
fwait
mov
notl
fiaddl
sub
pop
leave
mov
hlt
pusha
add
test
dec
pop
int
cmp
fs
sub
stc
call
inc
dec
cs
mov
imul
faddl
cmp
push
sbb
imul
pop
test
cmpsb
mov
fs
enter
mov
in
out
adc
or
add
add
add
adcl
pop
cmpsb
addl
cmc
insl
call
inc
mov
jle
test
or
xchg
or
jp
sbb
in
cltd
pop
loopne
jne
dec
arpl
out
sub
jbe
insl
ficompl
dec
xrelease
pop
mov
into
fs
pop
dec
gs
jbe
cwtl
or
and
xchg
jno
ss
imul
cmp
out
imul
fisubs
jg
mov
or
pusha
xchg
int
pushf
mov
push
jl
imul
popa
imul
leave
pop
or
inc
and
flds
xor
or
clc
push
adcl
sbb
loopne
ljmp
lcall
sbb
add
inc
sub
imul
push
loopne
dec
cwtl
push
movsb
test
xor
aam
cmp
adcb
xor
mov
xchg
add
or
js
in
mov
push
mov
dec
push
or
mov
orl
add
imul
add
adc
outsb
clc
add
dec
push
lahf
or
in
mov
push
shr
js
shlb
adc
pop
dec
pop
mov
push
ret
add
jg
loop
xchg
push
push
dec
shr
sub
add
andl
and
sbb
testb
add
add
sti
push
insb
dec
mov
mov
iret
sbb
xchg
push
push
jb
in
xchg
inc
dec
push
jnp
movd
gs
cmp
pop
adc
mov
iret
add
mov
pushf
test
push
adc
push
js
loope
adc
adc
sub
invd
mov
add
inc
mov
mov
cmpsl
jno
popa
dec
pop
dec
or
pop
loopne
cmp
pushf
sub
mov
or
dec
adc
popa
jb
gs
and
jo
sti
pop
outsl
arpl
xor
xor
inc
inc
mov
and
addr16
mull
adc
cld
adc
inc
popa
addl
inc
fmuls
outsb
clc
jns
gs
or
push
add
push
js
mov
inc
rcr
pushf
cld
push
sbb
inc
nop
sbb
xchg
call
add
sub
xchg
sbb
jp
adc
fbstp
arpl
add
test
test
dec
les
jle
inc
das
add
dec
add
loopne
in
std
pop
lea
push
xor
lea
or
movsl
shl
jno
mov
sub
cmpsb
and
adc
sbb
pop
xlat
adcl
dec
insb
scas
out
and
mov
inc
jnp
dec
popa
js
push
addl
push
loopne
push
push
add
or
sbb
add
lret
syscall
xor
nop
subl
jo
sub
test
or
push
repz
decl
test
push
test
mov
bound
push
mov
pop
mov
dec
push
push
pop
hlt
push
inc
xor
arpl
aam
divl
dec
iret
cmp
int
mov
out
fs
pop
pusha
xor
pop
call
inc
xchg
xor
xor
pusha
push
rolb
add
pop
cs
sub
push
add
out
mov
pop
add
add
add
inc
pop
jp
add
pop
add
mov
pushl
or
and
adc
cmp
inc
mov
lcall
pop
jle
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
xlat
call
call
call
jg
sar
sar
sar
sar
sar
iret
cmp
dec
repz
cld
dec
dec
dec
icebp
dec
dec
jmp
mov
xor
mov
pop
int3
call
nop
push
js
lock
shrl
cmpsb
mov
js
mov
dec
mov
loopne
push
mov
ss
mov
pop
add
or
cmp
pop
xor
repz
push
es
bound
sbb
mov
in
fwait
push
pushf
dec
cmpsb
dec
jo
fwait
gs
pop
and
add
push
dec
inc
xchg
dec
shrl
in
enter
out
insl
aam
addr16
lahf
test
imul
pusha
pop
xchg
xchg
enter
pop
sbb
mov
mov
push
add
cwtl
cwtl
mov
inc
cs
push
rolb
dec
cmp
push
leave
nop
pop
pop
sbb
lcall
stos
or
inc
dec
iret
lea
or
and
or
mov
or
outsb
and
inc
mov
inc
clc
inc
add
dec
mov
incl
sbb
xor
xlat
xchg
pop
mov
jo
jmp
push
adc
adc
mov
inc
mov
js
cmp
or
pop
add
pop
dec
fs
and
or
and
xor
and
ds
cwtl
hlt
inc
nop
daa
inc
push
shlb
or
leave
and
fs
test
daa
orb
jle
dec
xor
pop
int3
pop
inc
sub
sub
mov
inc
outsl
arpl
cmpl
xchg
jns
pusha
mov
insb
fs
jg
push
bound
pop
inc
and
lea
call
data16
fs
xchg
psubw
jne
push
and
cmovo
ret
in
dec
mov
test
fsts
add
dec
add
pop
sub
dec
xchg
add
xor
and
add
mov
das
jecxz
mov
cld
cmp
add
add
xchg
push
sar
jmp
push
add
aaa
mov
mov
mov
mov
mov
pop
test
or
aas
adc
add
mov
mov
mov
mov
xchg
and
and
pushl
add
add
push
mov
xor
cmp
lcall
pop
rcrb
add
in
inc
inc
inc
inc
inc
inc
add
ss
inc
cmp
cmpsl
std
mov
mov
psubsw
fwait
mov
pushl
shll
add
mov
insb
nop
loopne
imul
fldcw
mov
mov
dec
lea
imul
xchg
push
les
cwtl
cmp
pop
nop
push
mov
ss
test
in
lcall
imul
sar
mov
movsb
mov
int3
loopne
jbe
cmpsb
push
fsub
pop
mov
shr
lock
pushf
pop
push
mov
pop
shrl
je
push
and
mov
pop
rcrl
dec
test
nop
hlt
test
mov
add
push
adc
lahf
sbb
insb
mov
jge
movsl
fbld
xlat
xchg
fcoml
cmpsb
mov
xlat
fs
in
xor
enter
nop
int
pop
cs
or
cwtl
nop
int
pop
mov
dec
push
jl
movsb
data16
int
insl
xchg
jo
cmpsl
inc
xchg
and
adcb
jnp
movsb
push
cmpsb
addr16
mov
stos
or
xor
pop
and
adc
or
inc
or
cltd
xorl
adc
push
push
or
sbb
sbb
mov
adc
add
getsec
mov
push
mov
inc
xchg
lret
sub
push
mov
or
test
jl
xchg
mov
sbb
adc
repz
mov
and
add
sti
adc
add
dec
ret
sub
cmp
icebp
scas
test
and
enter
sbb
adcl
mov
pop
mov
scas
mov
sbb
mov
or
popf
mov
cmp
nop
add
nop
adc
and
aaa
cmp
sarl
push
cmp
xor
rorl
cmpsb
stos
push
mov
sub
sarl
shll
jle
cwtl
push
add
mov
je
shrb
fiaddl
bound
js
mov
lret
outsb
push
lcall
adc
daa
cld
xlat
fiaddl
sbb
fsub
into
fidivs
lret
ret
lock
inc
out
push
jb
xchg
jb
loop
stos
lahf
call
jnp
out
dec
push
aad
or
cmp
pop
or
and
nop
or
orb
lock
add
fimull
or
push
and
fildl
sbb
pop
lea
and
push
dec
enter
cmp
popf
mov
or
add
or
faddl
jbe
inc
add
or
lock
pop
orb
sbb
dec
fcoml
mov
mov
xor
and
scas
dec
std
dec
jne
xor
sub
push
and
enter
ror
jo
adc
pop
in
jmp
add
movsb
popl
push
xor
sbb
js
add
adc
xchg
test
ja
or
nop
jb
sbb
es
daa
push
mov
pop
push
pop
dec
inc
gs
insl
or
movsb
in
cmp
push
xchg
mov
fmuls
pushf
inc
repnz
push
inc
push
inc
daa
imul
loopne
jo
daa
or
xor
fwait
inc
insb
popa
clts
or
dec
outsl
lock
ficoml
insb
imul
xchg
in
mov
dec
push
popa
push
mov
cmpb
and
out
push
orl
jbe
dec
pop
mov
call
outsl
and
mov
insl
ljmp
loope
mov
testl
and
lret
add
pop
mov
mov
lea
outsb
popa
roll
mov
fcomp
inc
lcall
adc
inc
ds
sbb
clc
mov
push
push
out
sub
outsb
mov
out
xor
cmovae
mov
mov
aas
sub
scas
and
xchg
popa
pusha
movsl
jg
add
and
adc
push
mov
pop
dec
sub
jg
pop
inc
loopne
add
adc
pop
push
or
push
or
mov
sub
push
or
push
es
add
or
xor
loopne
sbb
loopne
pop
aas
sub
jno
inc
or
fistl
add
mov
add
xlat
lock
inc
xor
je
push
cmpl
insb
xor
push
daa
clc
add
or
sbb
dec
test
icebp
jmp
push
icebp
gs
sbb
or
jne
push
mov
cmp
cmp
push
aad
es
sarb
push
pop
and
push
xor
push
or
call
push
pusha
add
pop
xchg
mov
pop
lods
sub
repnz
or
adc
mov
lret
mov
adc
sbb
lret
mov
lret
and
sub
sub
lock
scas
push
push
add
sub
pop
outsl
inc
inc
jmp
inc
out
rolb
push
es
dec
add
mov
adc
enter
lods
nop
pop
ficoml
cmpb
fimull
cs
jno
imul
sbb
inc
sub
inc
aaa
out
pop
jle
add
add
dec
je
dec
inc
pop
std
ja
inc
or
add
cmp
sbb
pop
das
dec
push
fcmovnb
leave
outsl
adc
add
jnp
xchg
adc
mov
sub
dec
adc
lods
adc
push
cmp
jbe
outsb
add
jg
add
pusha
and
divb
pop
cmp
mov
adc
mov
xchg
lds
mov
jmp
or
call
pusha
add
dec
or
and
mov
inc
lcall
test
inc
inc
mov
push
pop
movsb
xorb
mov
jo
add
dec
pop
adc
jp
out
cld
adc
sbb
inc
cmp
cmp
scas
sbb
test
inc
andb
xchg
mov
mov
or
inc
and
iret
add
push
pop
fcomip
and
orl
jp
and
lea
dec
mov
mov
mov
push
aas
mov
xor
cmp
inc
inc
jmp
into
push
mov
loopne
pop
and
xor
imul
inc
jl
test
adc
sbb
xchg
aaa
mov
push
bnd
ret
mov
pop
insb
insb
insl
inc
std
adc
int3
push
pop
rol
mov
inc
inc
icebp
inc
mov
les
adc
mov
addr16
in
shrl
iret
push
enter
fdivs
push
jbe
jecxz
daa
test
dec
jmp
subb
inc
fsubrl
cmovl
ret
movntps
loope
nop
das
fimuls
push
idivb
dec
or
adc
cwtl
or
cmp
xchg
neg
xchg
inc
inc
lds
outsb
or
push
mov
fidivrl
popa
out
movl
jbe
sbb
or
add
sahf
dec
jl
inc
inc
and
cmp
adc
out
mov
add
jb
jne
mov
lock
inc
adc
jmp
cmp
jne
mov
fisttpll
nop
fisubs
out
xlat
lret
pusha
xorb
mov
testl
and
js
pop
mov
in
cli
js
js
bound
mov
jno
je
out
push
push
or
sbb
or
repz
xor
mov
cmp
pop
mov
dec
add
inc
je
pop
mov
in
sub
xchg
xchg
mov
jnp
cmp
out
add
and
sti
or
sbb
pop
pushf
push
or
xor
addl
adc
adc
dec
loope
shl
xchg
xchg
sarb
jg
inc
mov
in
sub
add
pop
or
and
es
cmp
je
push
xor
or
push
insl
test
out
push
or
aad
in
andw
in
loopne
and
ret
loope
adcl
lock
or
ret
push
and
pop
popf
cs
adc
test
sub
jmp
xorb
mov
outsb
and
jl
nop
sub
sbb
cmp
xor
and
push
cmpb
test
rcl
mov
dec
push
insl
cmpb
mov
pop
xor
mov
inc
movsb
push
idiv
sub
mov
daa
dec
out
add
mov
add
or
and
dec
in
mov
flds
mov
jne
cmp
or
or
cmp
loope
ja
and
insb
mov
adcl
rorl
inc
ljmp
xlat
xor
cmp
xlat
fiadds
inc
jne
and
movsb
int
mov
or
mov
xor
xor
sub
push
lock
in
sbb
sbb
add
pop
fadds
cld
fwait
jp
call
das
mov
push
rolb
fisttps
pop
xor
dec
push
push
pop
inc
cmp
and
adc
imul
dec
and
adc
xchg
push
inc
ds
les
pusha
clc
cmp
cmovbe
and
jmp
xor
test
sub
mov
jge
out
rorl
es
sbb
mov
xlat
cmp
or
addb
push
pop
fisubrl
inc
imul
jmp
inc
xor
push
xchg
push
pop
or
fwait
and
mov
popa
jg
shll
xchg
inc
jo
jl
mov
dec
jbe
cmpl
xor
pop
pop
adc
mov
ds
add
imul
fdivs
aas
test
movsb
and
data16
xor
mov
les
sub
mov
repz
mov
mov
lds
fistpl
shrb
fsubrl
stos
mov
int
jge
mov
sub
addr16
mov
mov
insb
adc
sbb
call
cmpsl
es
subb
xchg
es
out
mov
mov
lea
adc
add
test
add
arpl
add
cmp
je
ljmp
xlat
and
mov
mov
or
inc
inc
push
add
or
pop
in
subl
inc
and
insl
inc
xchg
dec
mov
cmp
movsl
mov
push
adc
or
mov
insb
test
add
xchg
pop
add
and
add
add
testb
or
cwtl
dec
rcl
pop
adc
stc
jne
mov
inc
aas
ss
icebp
jmp
shlb
mov
jmp
jl
pop
imul
cmpsl
inc
stos
or
cmpsl
fsub
push
and
test
test
xchg
add
adcb
xchg
xlat
out
xchg
push
je
pop
pop
outsl
or
pop
and
fists
pop
fsubrs
mov
xor
push
inc
adc
jl
sub
rorl
ret
push
out
dec
inc
pushf
pop
pop
sbb
sbb
pop
fadd
sub
outsb
and
inc
or
cmp
xor
js
xchg
mov
ret
mov
jecxz
fisubl
push
or
fsubp
sub
mov
js
aam
inc
mov
fldt
ss
dec
imul
cmp
cmp
or
inc
test
sbb
sub
cmc
cmc
jp
jno
gs
dec
daa
or
pop
push
stc
fstpl
fwait
jmp
inc
and
jo
and
inc
fmuls
sub
jns
sub
imul
out
in
push
push
insl
pop
sub
push
cmpsl
in
andl
adc
sbb
xor
jmp
sub
push
cltd
cmpsl
or
repnz
lret
adc
inc
pop
addr16
shlb
dec
pop
loopne
inc
inc
test
loope
mov
leave
xchg
enter
popf
pop
cltd
sbbl
jl
or
movsl
sbb
ret
add
xchg
push
push
cs
or
ret
mov
add
popf
add
xchg
jecxz
into
push
and
repz
or
pop
mov
push
adc
fimuls
push
das
lret
loop
pushf
inc
jnp
pop
cmpl
sub
and
lret
mov
shll
dec
jmp
sbb
and
outsl
pop
loopne
cltd
popf
popf
xchg
mov
adc
in
std
rcr
mov
jne
push
dec
sub
add
inc
inc
add
pop
xchg
arpl
dec
adc
cmp
add
test
fbld
push
daa
popf
push
adc
push
rorb
inc
lods
dec
or
push
adc
mov
iret
push
push
and
dec
mov
xchg
cmp
sbb
mov
mov
stos
sub
sahf
fwait
pusha
adc
aas
push
add
add
mov
mov
outsl
ds
inc
jp
movb
or
add
sbb
sub
cmpsb
fisubs
rcrl
add
mov
mov
add
aad
cltd
dec
lahf
and
xor
ret
add
dec
add
mov
xlat
test
pop
mov
mov
or
popa
inc
xchg
or
arpl
loop
or
je
cmpsb
mov
sub
insb
xchg
movsl
ret
cmp
jge
fcoms
mov
ja
loopne
jo
outsb
je
je
pop
mov
repnz
adc
xchg
out
cmp
add
aad
add
fldt
sub
cmp
jmp
icebp
add
jmp
mov
subl
sbb
jns
pusha
pop
mov
add
rcrb
or
and
adc
lock
iret
ficoms
adc
cmp
and
adc
ss
mov
add
or
mov
and
and
or
push
and
fcomps
notb
add
mov
insl
inc
pop
cmp
mov
mov
insl
sub
enter
jb
and
dec
pop
repz
mov
pop
jo
ret
jecxz
mov
rcrl
icebp
push
pop
repz
imul
inc
mov
lds
movsb
pop
xor
adc
mov
add
inc
add
jo
cmc
push
shlb
lret
adc
add
sbb
push
and
sub
xor
add
push
cmp
add
sub
push
add
add
or
xchg
adc
pop
push
cmpsl
xor
or
xor
push
or
enter
push
lock
and
sub
and
jb
insb
cld
aad
sbb
pop
lock
aas
jp
sub
mov
test
popf
jmp
in
clc
sub
les
inc
cmp
sub
or
jmp
hlt
mov
cltd
ret
sbbb
insl
xor
push
andl
mov
leave
push
mov
mov
pop
pop
dec
jmp
xlat
and
cmp
and
mov
sbb
push
pusha
orl
push
sub
and
nop
push
mov
cmpl
arpl
mov
jb
pop
dec
adc
pop
in
aaa
add
adc
pop
mov
push
add
xor
add
mov
mov
push
cmp
cmc
cmp
dec
pushw
mov
fs
mov
lock
and
or
dec
jg
or
arpl
lret
add
leave
out
loope
mov
testl
and
push
adc
mov
out
mov
adc
mov
xchg
adc
ret
jno
js
out
cmp
inc
add
add
idiv
add
dec
or
or
adc
xchg
in
jnp
jge
cmp
push
or
jl
sahf
adc
pop
je
pop
repnz
jbe
cmp
cmp
pop
dec
jns,pn
je
cmp
add
pop
sbb
iret
test
dec
dec
sbb
push
xchg
lea
xchg
aaa
add
out
outsl
or
sub
push
add
inc
adc
stc
inc
jbe
addl
push
inc
xlat
cmpb
or
cli
cmp
xor
inc
ds
xchg
or
cmp
push
push
in
mov
adc
mov
add
push
dec
dec
pusha
mov
inc
add
xor
sbb
or
lods
add
fucom
mov
pop
dec
ds
scas
jecxz
cs
mov
test
sub
sbb
add
icebp
in
push
fs
fildl
dec
shll
mov
inc
mov
mov
loop
pop
cmp
je
sbb
icebp
add
add
jl
sbbb
rcrb
pop
sti
jecxz
and
cmp
gs
push
xchg
xlat
into
inc
adc
test
pop
inc
mov
lods
sbb
pop
and
adc
leave
push
xor
xchg
orl
in
sbb
cmp
shlb
dec
xor
mov
mov
repnz
and
mov
adc
and
jne
pop
add
testl
dec
jle
adc
jne
cmp
xchg
mov
sbb
and
or
jo
xchg
jns
pop
inc
daa
xor
je
xchg
ss
pusha
addr16
mov
ds
mov
mov
xlat
test
add
ret
mov
xor
inc
aas
mov
pop
jae
mov
jae
rolb
pop
outsb
inc
mov
push
jmp
add
dec
je
sbb
inc
int
xor
push
add
pop
pop
mov
mov
push
adc
push
pop
add
xor
jg
jp
jmp
mov
aas
push
add
add
int3
xchg
ja
inc
fbld
add
xor
jns
imul
cmp
cmp
inc
xor
cmpsb
push
xchg
ud1
mov
movsl
lea
insb
mov
je
and
andb
xchg
rcll
ja
dec
out
ret
push
andl
add
xchg
adc
push
sbb
xchg
and
mov
inc
add
inc
scas
mov
repnz
dec
push
pop
mov
insl
xlat
daa
mov
pusha
push
inc
xor
cmpsb
ret
lock
mov
inc
inc
dec
mov
pop
js
cmovs
mov
lods
lds
popa
mov
fisubs
sahf
insb
or
xor
divb
mov
push
and
pop
and
push
dec
pop
pop
fcoms
push
push
outsl
adc
jecxz
lock
orl
mov
fnstcw
jo
jge
mov
notb
and
mov
inc
or
jo
inc
mov
sarl
out
loopne
add
push
and
les
popa
mov
pop
add
loope
push
sbb
loopne,pt
ds
testb
push
mov
push
pop
enter
sahf
cli
adc
addl
xchg
clc
or
jno
mov
lret
sub
imul
ljmp
push
arpl
mov
sbb
xor
xchg
pop
or
xor
cmp
adc
add
adc
xor
jne
filds
mov
clc
jo
jbe
jne
sub
insb
xchg
add
xor
and
test
xchg
pop
into
je
test
fidivs
adc
push
cmpl
lds
clc
xlat
push
je
adc
push
out
mov
jno
sub
out
ret
cmpsb
in
fildl
ret
cs
loope
iret
test
and
jns
test
dec
push
pop
dec
cmpsl
xor
inc
mov
pop
xchg
test
xor
out
out
adc
je
inc
cmp
imul
shl
pushf
pop
add
jb
inc
ja
pop
add
cmp
jne
int3
dec
jne
pfrcp
or
push
push
ficompl
xor
inc
inc
mov
push
xchg
push
mov
jl
stc
mov
lret
scas
shlb
scas
cmp
iret
pop
push
mov
pop
xchg
xor
jle
popa
jno
mov
test
mov
sahf
sub
ret
cmp
xchg
push
lahf
popa
jecxz
pop
adc
xchg
dec
das
mov
insb
nop
testl
sub
fmuls
or
mov
mov
dec
stos
add
sub
mov
and
adc
inc
fiadds
roll
xchg
sbb
dec
lock
cmc
lcall
and
or
push
pop
adc
idivb
inc
dec
das
push
dec
xor
or
sub
rolb
dec
roll
mov
jnp
cs
push
inc
dec
add
push
xchg
in
pusha
inc
pop
dec
add
push
inc
jl
cmp
or
data16
in
outsb
movsl
inc
sub
cli
cmp
cltd
pop
out
cmpsb
add
sub
push
and
cmpl
ds
pusha
cli
pop
lods
roll
cmp
sub
into
cmp
loope
fdivr
scas
inc
or
dec
and
mov
push
bound
shl
jecxz
cli
lds
jnp
add
cmp
mov
inc
add
adc
pop
dec
mov
or
mov
imul
or
or
movsl
sub
sarb
adc
mov
cmpsl
roll
mov
or
mov
popf
push
sarl
mov
cmpl
loop
lea
test
mov
outsl
dec
add
add
test
sahf
mov
fldl2e
shrb
sub
ljmp
push
sub
adc
and
pop
mov
leave
xchg
push
xchg
mov
inc
xchg
dec
ror
mov
add
insl
ja
scas
int3
test
je
pop
mov
mov
jbe
sub
adc
aaa
jb
inc
hlt
hlt
pop
loop
dec
mov
add
or
or
pop
or
mov
push
mov
lret
pop
fiadds
imul
inc
add
sbb
rorl
xlat
mov
jecxz
sbb
push
out
and
out
and
mov
push
sub
or
sub
and
and
popl
add
pop
ret
sub
mov
jecxz
pushf
mov
outsl
add
data16
mov
cltd
lods
lahf
fwait
inc
add
inc
and
push
inc
imulb
cmp
ror
inc
pusha
mov
scas
decl
jmp
out
cmpl
ja
and
andl
insl
add
nop
push
inc
adc
add
call
aaa
outsb
inc
adc
inc
jo
mov
jmp
sbb
nop
ja
sub
cmp
sbb
sub
loopne
dec
pop
jnp
xor
pop
mov
xor
adc
insl
xor
mov
jne
pop
ret
inc
fiadds
in
or
fdivl
adc
or
adc
call
adc
and
and
mov
fadds
fildl
xchg
in
jns
pop
push
mov
add
dec
mov
push
cmp
xchg
push
icebp
outsl
sbb
push
ljmp
pop
cmpsl
sub
inc
fimull
push
cmp
je
mov
push
inc
xor
push
and
leave
ds
testb
je
xorb
and
dec
cmp
add
xorb
iret
or
push
daa
test
lods
and
mov
sbb
inc
push
inc
xor
call
lret
inc
dec
jo
insb
pop
push
adc
push
adc
dec
adc
cmpb
inc
inc
scas
cmp
aas
cmp
cmp
lods
mov
and
inc
add
fs
les
arpl
rcrb
mov
pop
push
je
aam
sbb
jl
mov
adc
and
clc
orl
sbb
loop
mov
pop
je
mov
push
pushf
pop
nop
pop
lahf
or
pop
push
add
or
sahf
sarb
add
sbb
sbb
sub
xchg
mov
jo
add
xchg
jo
pop
jecxz
mov
mov
idivl
dec
adc
int
adc
inc
lods
sbb
lds
pop
cmp
mov
andl
leave
movsb
xor
add
xor
sbb
dec
adc
mov
imul
inc
inc
outsl
pop
je
mov
adc
loope
pusha
add
cmpsb
jmp
jp
inc
add
push
out
push
pushf
cmp
xor
fcoms
sub
and
pop
cs
or
movsl
insl
shrb
aaa
mov
pmaxsw
mov
xor
das
pop
je
mov
mov
add
push
cmpsl
add
dec
lock
aas
or
nop
cltd
sbb
fldlg2
sbb
dec
and
mov
setnp
xchg
xchg
sbb
mov
pop
and
dec
dec
or
and
inc
pop
xor
enterw
fnstcw
data16
push
icebp
data16
push
add
addl
in
xor
mov
add
test
adc
add
shr
into
and
insb
mov
and
movsl
pop
popf
and
daa
xor
inc
inc
add
adc
push
add
or
rorb
rcrl
dec
icebp
leave
iret
ss
sbb
mov
cs
lcall
ret
notl
das
and
xchg
inc
or
pop
jae
sub
in
mov
shr
inc
mov
out
dec
leave
and
adc
popf
inc
gs
jno
faddl
rclb
lods
pop
lock
xor
clc
xchg
jle
dec
jp
and
cmpb
loop
rol
inc
imul
fsubrl
or
sbb
and
adc
mov
pop
cmpsb
xor
pop
xor
mov
xchg
dec
ret
push
jnp,pt
sbb
add
pusha
and
adc
add
ret
lea
cld
outsb
push
dec
add
aas
int3
push
loope
imul
and
loop
and
mov
fcomps
ljmp
push
and
sbb
movsl
int3
clc
das
loop
pusha
adc
fidivs
lea
ds
shrb
inc
pop
mov
pop
add
movsb
cwtl
push
scas
xor
shlb
adc
mov
out
jne
or
adc
rcll
sub
lcall
inc
sahf
std
mov
add
push
popa
inc
mov
cmp
dec
iret
sbb
adc
mov
mov
dec
jne
mov
xchg
outsb
stos
ss
xor
or
psubsw
loope
mov
insl
enter
das
add
loopne
or
adc
mov
xor
fadds
or
jp
test
ret
jg
inc
int3
ret
cmp
push
sbb
push
mov
push
sbb
les
or
loope
push
loope
jne
jecxz
inc
push
jns
push
cmp
arpl
push
aam
jecxz
lea
add
movsl
or
js
add
sbb
mov
ss
sub
nop
push
or
xchg
xor
adc
ret
addl
mov
mov
cmp
repnz
sbb
orl
mov
push
cmp
stos
push
push
lret
lock
push
dec
js
jg
insb
jnp
add
pop
bound
push
pop
in
sahf
iret
xor
call
add
mov
lret
inc
pop
adc
adc
aaa
inc
aas
xchg
sbb
sbb
pop
xchg
xchg
jl
add
or
inc
mov
insl
mov
jle
fadds
das
mov
mov
iret
adc
gs
dec
pop
fmull
fildl
fsubp
sub
sbb
inc
mov
adc
cld
orl
fst
mov
push
fucomp
adc
fwait
mov
add
mov
lea
or
inc
lret
mov
je
cltd
jl
mov
push
push
push
insb
push
mov
mov
movb
jo
popa
adc
sub
xchg
mov
add
flds
add
xchg
mov
hlt
outsb
adc
call
loop
mov
mov
cmp
push
mov
push
jmp
ss
inc
test
xor
hlt
push
or
add
push
cmc
sbb
shlb
aaa
fldl
test
icebp
pop
or
cs
neg
pop
lea
mov
mov
lea
push
shr
sub
mov
jmp
jge
mov
xlat
loopne
test
cltd
add
and
rolb
icebp
cmp
inc
add
mov
insb
or
xorb
mov
adc
xchg
dec
mov
enter
add
cmp
sbbb
push
push
lcall
sbb
loope
cmpsb
jmp
sbb
or
add
xchg
sbbb
jp
repnz
lea
cltd
cmp
js
dec
scas
mov
aas
sub
sub
cmp
push
aaa
dec
inc
sbb
dec
cmp
sbb
aaa
call
push
loopne
in
or
and
adcb
sub
sub
jnp
and
sbb
add
sbb
leave
call
adcb
iret
mov
push
and
or
mov
and
push
ss
loop
enter
jl
das
jo
add
movsb
pop
jns
inc
jne
mov
sar
inc
add
add
je
jnp
rclb
add
mov
or
ss
adc
or
and
inc
jle
push
arpl
mov
mov
xor
xor
push
xchg
cmp
adc
add
scas
cmp
enter
shlb
ret
test
imul
les
sbb
pop
jmp
push
outsl
je
inc
jecxz
movb
jge
inc
test
sbb
sub
aas
call
js
int3
push
pop
mov
popa
lret
ljmp
lea
push
jle
ds
add
push
scas
sbb
xor
sbb
push
test
hlt
lds
and
dec
and
les
fs
hlt
sub
adc
or
add
ljmp
push
cs
sbb
xor
js
in
or
lret
or
sub
fwait
add
das
cmpsl
jnp
jne
pop
push
push
outsb
cwtl
js
call
or
cld
mov
mov
sub
dec
dec
sti
punpckhbw
add
loopne
mov
cmp
sub
sbb
test
xchg
dec
inc
cmp
lds
dec
xor
sub
adc
add
cwtl
lret
out
lea
adc
xor
int3
and
adc
or
outsb
push
cmp
lods
push
pop
cmpsb
jp
add
xchg
add
ret
cwtl
add
pop
push
inc
mov
pushf
rorb
nop
mov
std
adc
jnp
pop
add
lods
dec
adc
into
push
insb
int3
adc
jo
rol
outsb
mov
movsl
cmp
or
call
xlat
cmp
xchg
pop
mov
jae
adc
lret
bound
lods
adc
fucomip
pop
sub
xlat
cltd
xor
and
add
bound
mov
or
add
or
mov
jle
int3
enter
dec
pop
scas
push
and
insb
mulb
movsl
test
insb
jecxz
push
sub
ljmpw
cmp
add
adc
or
add
sahf
clc
dec
jmp
lock
je
push
fnstenv
cltd
fsts
fs
daa
rorb
adc
mov
push
sub
enter
sub
or
or
mov
adc
cmp
shr
dec
or
adc
sub
cmpsl
sbb
push
push
or
or
movsl
pop
jno
pop
jmp
sub
push
mov
cwtl
loope
jge
or
or
inc
push
out
and
cmpsl
adc
add
aam
sub
xor
imul
push
push
dec
mov
dec
xchg
dec
mov
push
dec
loopne
mov
mov
pop
jecxz
inc
pop
inc
jae
addr16
jmp
cltd
mov
jl
je
add
inc
or
adc
pop
ds
in
sub
into
jp
dec
mov
insl
filds
loopne
ss
sbb
lcall
jl
sbb
sbbb
cmpb
adc
test
add
outsl
das
add
cmp
ja
je
mov
dec
jle
wrmsr
iret
mov
inc
xor
jbe
fidivrs
jb
adc
mov
push
pop
sub
sbb
or
mov
arpl
rcrb
cmp
scas
mov
xor
dec
pop
add
repz
sub
jge
fistpll
push
dec
push
add
jle
push
jmp
xchg
jp
adc
and
adc
inc
sbb
push
sbb
insl
cmp
subl
and
and
push
movsb
les
mulb
add
push
adc
and
cmp
push
popa
mov
shrb
loopne
pop
sub
adc
sub
add
mov
clc
ja
js
mov
mov
xchg
lock
pop
push
mov
sub
mov
data16
sbb
xchg
and
add
mov
sub
adc
push
sub
popf
xor
addl
pop
testb
adc
xlat
pop
mov
xchg
ja
mov
adc
cmp
inc
ljmp
rolb
sub
or
jl
adc
cmpsl
add
push
inc
aam
les
xchg
cmpsl
test
mov
sub
les
test
pushf
outsl
cld
add
dec
popa
xor
jne
xchg
add
pop
sbb
insl
sbb
pop
mov
sub
sub
sub
cmp
push
setae
cmpsl
add
add
test
lret
mov
pusha
adc
clc
testb
cmpw
or
loopne
adc
or
xchg
inc
sub
xorl
enter
cmpl
aad
movswl
fiaddl
fs
or
ret
push
nop
mov
and
cmp
add
es
movsl
sbb
mov
dec
movl
dec
xor
push
or
mov
mov
inc
dec
or
ds
jl
addr16
stos
pop
jbe
cli
xor
mov
cld
push
push
loopne
repz
test
outsl
cmp
push
dec
nop
pop
add
or
pop
nop
and
dec
lcall
mov
ret
repz
xchg
xor
jno
add
push
dec
or
inc
mov
add
pop
dec
sahf
outsl
push
xor
fiaddl
push
fcomps
pop
dec
dec
push
mov
jnp
sub
popa
hlt
adc
je
pop
or
ret
pop
aam
sub
mov
inc
clc
mov
loop
loopne
jmp
xor
imul
mov
dec
xor
or
mov
push
sbb
inc
push
add
mov
xchg
loopnew
pop
adc
cmc
stos
push
dec
shll
dec
cmp
inc
lds
out
outsl
add
add
adc
or
xchg
jne
and
xchg
cmp
xor
pop
fisttps
inc
mov
mov
in
add
and
fstps
xor
or
xchg
mov
sbb
xor
movb
lods
daa
movsl
leave
xor
add
adc
pop
ret
mov
outsl
and
jo
das
je
jle
scas
les
and
lock
xor
lds
outsb
adc
enter
adc
jle
adc
or
dec
or
loop
xchg
sub
inc
xor
jne
testb
or
sub
into
push
call
pop
push
rcrb
jbe
dec
pop
push
fs
add
out
push
push
inc
loop
addb
nop
lcall
psubusw
push
pop
pop
insl
and
lret
inc
fdivs
xor
jo
add
aaa
pushf
mov
clc
inc
cmp
or
pop
daa
in
ljmp
mov
mov
mov
add
loop
fs
or
ja
ja
push
aad
sub
cltd
test
cs
mov
or
mov
adc
fistl
pushf
addl
adc
out
pop
ret
and
nop
jmp
push
out
pop
pop
push
in
arpl
loope
testl
test
xor
sbb
insb
ret
push
xchg
dec
mov
test
testb
pop
adc
or
dec
daa
xor
jl
or
addb
ss
dec
ljmp
and
sub
cmp
add
test
mov
test
mov
sub
pop
fcomps
xor
push
or
loope
ljmp
xor
and
inc
jns
sub
mov
dec
cmc
or
dec
dec
imul
push
inc
add
sub
cld
pusha
addl
inc
adc
cmp
cld
push
pusha
or
cld
sub
dec
daa
or
jo
or
push
xor
sbb
sbb
gs
inc
sbb
pop
push
pop
lods
and
popa
cmc
pusha
xor
je
cmp
daa
jmp
iret
icebp
and
clc
mov
sub
push
fs
mov
push
dec
pop
cmp
push
fs
and
mov
jnp
adc
adc
outsb
xor
cmpb
or
xchg
mov
repz
add
inc
data16
or
out
adc
bound
subl
xor
movaps
jecxz
add
pop
push
mov
mov
test
mov
fs
xchg
aas
sub
dec
xchg
add
push
cltd
data16
movsb
sti
push
shlb
out
lea
push
or
jo
arpl
cltd
push
push
mov
sub
dec
icebp
hlt
cmp
jo
test
sar
outsb
mov
adc
nop
pushl
nop
popa
es
sbb
movsb
in
or
ja
daa
push
mov
xchg
scas
mov
movsb
and
jno
cpuid
hlt
or
add
fcompl
or
xchg
xorb
inc
and
xchg
mov
lcall
xchg
mov
mov
jg
aas
push
jmp
push
pop
inc
jg
fildl
scas
sub
jns
mov
add
je
or
insl
cmp
push
add
ljmp
lock
add
jbe
mov
sbb
xor
dec
stos
nop
xor
xor
and
xor
addb
and
outsb
mov
add
mov
dec
je
add
jmp
in
aam
sbb
mov
push
or
ret
sbb
arpl
sbb
roll
out
ficoms
inc
ret
jmp
dec
and
mov
inc
cmp
sbb
fidivl
enter
and
call
cld
loopne
add
or
aaa
add
aad
or
cld
or
cmpsl
xorl
daa
dec
stos
mov
sbb
adc
outsb
cmp
js
pop
leave
sbb
imul
cltd
cld
sub
pop
or
mov
dec
pop
mov
repz
push
jae
inc
mov
les
xor
dec
test
push
sbb
sbb
sbb
ret
mov
mov
jo
out
xchg
gs
fldcw
or
cli
add
xor
or
popa
adcl
aas
loopne
and
jnp
sbb
push
xorl
cmc
addl
mov
inc
sub
jmp
arpl
sub
jns
mov
jp
pop
xor
xor
xor
lea
jecxz
pop
mov
push
je
sarb
lea
xor
pop
insl
push
adc
pop
xor
inc
and
aas
cld
mov
push
sbb
in
gs
aad
sbb
movb
inc
jmp
mov
adc
cmp
jae
pop
shlb
xchg
push
mov
test
dec
inc
xor
add
test
or
mov
jne
lea
add
add
clc
cmp
xor
ljmp
cmpl
andl
lcall
fs
sbb
call
mov
push
adc
test
pop
hlt
cmpb
xor
pop
mov
or
lea
inc
movsl
xchg
daa
push
mov
call
mov
out
stos
lods
leave
fs
sub
dec
sbb
outsb
adc
and
cld
out
jns
push
jne
shll
cmc
sub
and
adc
ljmp
sub
mov
pop
and
cs
imulb
sbb
add
fadds
pop
mov
xor
fwait
popa
and
nop
ljmp
pop
jge
or
mov
insb
test
shrl
xorb
mov
movsb
mov
cltd
push
inc
out
movsb
in
add
or
mov
pusha
pop
fcmovu
and
das
and
lahf
outsl
arpl
fs
pop
push
in
and
adc
outsl
bound
movd
mov
xchg
les
pop
pushl
ja
lcall
popf
push
mov
lea
daa
stos
notb
cmp
setg
jmp
idiv
insl
inc
add
sbb
push
dec
cmp
setle
jns
inc
inc
es
dec
inc
pop
or
pop
dec
adc
sub
cld
add
push
mov
cmp
rcl
es
rorb
faddl
lods
cmp
cld
pop
pop
jmp
push
or
dec
mov
xchg
stos
jne
mov
sbb
adc
or
loope
pop
dec
inc
fcmovnbe
inc
inc
mov
xchg
and
jmp
or
enter
jne
int3
inc
sub
loope
fimull
outsl
loope
push
popa
add
inc
adc
pop
dec
call
or
sub
rcrb
adc
mov
push
aaa
hlt
jmp
xorl
push
sbb
jo
mov
scas
addr16
mov
or
xor
and
into
call
inc
dec
dec
push
xchg
in
add
add
call
or
leave
mov
ret
inc
jb
and
cmc
insb
mov
aad
les
xchg
jne
icebp
inc
and
test
dec
sub
aaa
jl
pop
add
add
dec
or
jb
adc
pop
or
add
out
mov
popa
or
pop
add
outsb
sub
loope
add
cmpb
sbb
lds
scas
push
pop
mov
pop
imul
pop
jbe
test
int3
mov
sahf
stos
daa
lds
das
inc
push
sbb
mov
imulb
push
or
or
fs
add
jmp
adc
mov
sbb
rcll
fisubs
shr
cmp
jbe
xchg
lea
ror
push
ficomps
int3
mov
mov
add
insb
insl
dec
leave
sub
stos
adc
xchg
lods
loope
cs
movsl
das
xchg
push
mov
in
enter
add
cli
push
xchg
popa
imul
stos
inc
imul
push
sub
sub
in
ret
aas
in
push
punpcklwd
xor
pop
pop
and
addl
mov
cmp
push
xchg
test
cmc
xchg
fisubrl
subb
jbe
insb
pop
loop
pop
cmp
jne
add
xor
ret
mov
pop
sub
xor
lds
add
fdivrl
out
cmpb
mov
aas
repz
adc
or
push
shr
xchg
dec
or
dec
push
cmp
outsl
lahf
push
cmp
jge
cmpsb
pop
adc
mov
loop
inc
pop
xor
sarl
mov
mov
clc
ss
shlb
pop
xor
and
hlt
lods
fnsave
lock
sub
ror
rcrb
inc
sbb
leave
aaa
add
and
add
push
inc
push
xor
sub
pop
cmp
push
push
jbe
sarb
idivb
push
popa
jne
push
mov
cmp
fildl
or
mov
dec
mov
fldcw
pop
cmpsl
sbb
xchg
add
adc
push
cmp
ljmp
mov
xchg
mov
fwait
push
pop
dec
pop
cmpsl
outsl
fiadds
xchg
push
outsb
pop
leave
adc
cmp
nop
inc
add
push
xor
repnz
cli
imull
push
xchg
cmpsb
or
push
dec
mov
das
in
in
or
push
mov
fs
pusha
jo
jmp
push
jae
jnp
movsb
lret
jo
shrb
inc
or
xor
nop
nop
pop
pop
pusha
push
out
jnp
loop
lods
call
fisubs
jbe
ret
js
pop
out
push
test
cwtl
mov
push
repz
enter
xchg
push
jno
shrb
aad
mov
cmpsb
mov
mov
call
xorl
inc
push
and
xor
lret
dec
sub
adc
adc
std
shll
adc
dec
rol
lods
inc
xor
add
xorl
pop
inc
inc
or
cmpsb
sub
sbb
sbb
mov
push
push
xchg
sbb
dec
jb
or
push
fsubrl
inc
cli
rcrl
aas
adc
mov
xchg
mov
rorl
ds
mov
in
add
mov
and
or
sbb
bound
ss
inc
lock
pop
mov
enter
stos
mov
mov
jg
push
std
add
add
dec
jne
sub
rorb
xor
jae
push
push
std
or
add
push
xchg
add
je
jecxz
mov
cltd
dec
xchg
inc
sbb
sbb
or
xor
jne
adc
cltd
orb
sbb
rclb
repz
mov
sbb
aam
lcall
inc
inc
xchg
add
inc
inc
adc
mov
mov
or
inc
mov
dec
mov
mov
dec
mov
pop
mov
mov
aas
jmp
or
or
and
push
lods
xchg
jmp
cmp
sub
bound
dec
jecxz
ja
nop
jo
fadds
pop
cmp
jle
sbb
and
sub
and
mov
add
dec
je
add
sbb
pop
sbb
rclb
inc
xchg
add
cmp
push
xor
xchg
js
pushf
push
loop
sbb
mov
faddl
jb
mov
mov
adc
push
lods
xor
pop
push
orl
pop
and
in
movsb
inc
add
popa
sbb
inc
imul
xor
inc
insl
or
push
add
cmc
or
ja
and
lea
push
out
std
add
dec
sub
or
add
adc
mov
or
dec
pop
xchg
mov
xchg
inc
or
inc
adc
push
dec
push
xor
and
pop
loopne
sbb
xchg
rorb
shlb
jo
sub
xor
xchg
icebp
hlt
sbb
inc
xor
lds
or
into
pop
or
cld
lea
mov
or
xchg
inc
call
sbb
js
lods
test
cmp
cwtl
mov
jle
jae
test
inc
jne
add
shl
and
pusha
addl
inc
sbb
inc
xor
inc
in
stc
in
mov
dec
incl
out
ss
mov
iret
adc
ljmp
mov
xor
test
das
inc
or
outsb
ja
std
jno
push
inc
je
and
mov
cli
xchg
fs
ds
jle
dec
push
push
fists
jo
xchg
mov
inc
out
mov
xchg
inc
push
xchg
fisubl
pushf
pop
and
sub
ret
repz
and
inc
and
adc
push
popf
cmp
notl
and
jb
sub
fdivrl
inc
decl
lcall
adc
adc
orb
and
sti
cmp
adcb
mov
pop
mov
daa
in
xor
and
in
sub
rolb
or
and
in
bound
stc
sub
or
mov
sarl
fcoms
or
sub
xchg
shll
rol
push
out
adc
rcr
bound
sub
mov
mov
insl
lods
or
sub
cmp
scas
icebp
jo
clc
cmpb
mov
adc
dec
or
lea
or
dec
movsl
add
cmpsl
lret
pop
add
mov
inc
enter
pop
jns
dec
ss
imul
mov
dec
and
fstpt
int3
rol
adc
adc
mov
inc
les
fwait
fs
add
out
arpl
aam
lock
push
sub
xlat
imul
lods
xchg
mov
imul
cmpsb
ret
xchg
jnp
and
mov
jnp
xchg
orb
test
pop
popl
in
inc
pop
sbb
lods
pslld
fidivrs
push
shl
fisttpll
add
jg
mov
arpl
mov
mov
shl
popl
mull
sub
mov
and
add
ffree
pop
jge
mov
js
shr
je
rol
and
mov
ljmp
xor
lods
lock
sbb
enter
loope
pop
je
test
mov
loope
sub
or
mov
pushw
cmpl
daa
xor
mov
sbb
push
xor
sarb
add
and
sbbl
or
push
or
popf
test
je
xor
sub
dec
sbb
imul
stc
mov
mov
pusha
jno
cmpb
je
push
fisttpll
jecxz
and
jle
pop
add
sbb
pop
mov
push
dec
out
mov
shll
lret
xchg
ret
pushf
push
sub
dec
mov
ret
incl
and
data16
jbe
lock
mov
je
aad
arpl
cwtl
in
cmp
inc
mov
push
ret
jo
add
push
mov
add
xchg
add
sub
scas
int
adc
add
inc
push
fsubl
daa
add
jmp
adc
insb
sbb
jns
dec
xchg
pop
jo
sbb
arpl
and
dec
push
andl
and
and
jae
jp
add
dec
clc
lea
mov
push
inc
mov
jecxz
aam
lret
jbe
imul
hlt
or
hlt
cs
pusha
cmp
ret
adc
pop
jmp
inc
sub
decl
shl
xor
shl
or
adc
jmp
pop
mov
jp
test
test
adc
pushf
cmpl
addl
sub
stos
out
shll
dec
outsl
ja
and
xor
sub
nop
mov
jmp
push
dec
inc
scas
add
scas
dec
cmp
out
pop
mov
mov
lock
test
or
cmp
jmp
lock
xor
xchg
jo
adc
mov
sbb
sbb
or
adcl
aam
push
mov
or
adc
mov
jg
shr
adc
xor
sbbl
mov
jb
push
lock
or
add
mov
imulb
cmp
incb
adc
and
test
inc
addr16
jno
inc
pop
sub
imul
ret
push
mov
insb
xchg
fiadds
add
sbb
test
insl
dec
xor
adc
jae
rorl
lds
mov
mov
addb
cmp
es
add
and
mov
xor
inc
aaa
jecxz
mov
jnp
jle
fistpl
push
xchg
nop
cmp
or
in
pop
rcll
into
ret
fidivrs
jb
add
mov
aas
shll
imul
mov
es
lret
negl
xchg
add
push
inc
test
scas
lods
dec
or
enter
cmp
rsqrtps
jae
pop
dec
push
loope
fisttpl
cld
lret
shrb
or
sbb
pop
scas
lret
adc
lock
repnz
mov
cmp
icebp
add
adc
ret
mov
xor
inc
test
mov
rcrl
sbb
pop
xchg
and
aam
pop
mov
and
xor
sub
fcmovbe
xor
inc
je
sbb
xor
jp
mov
inc
push
adc
cwtl
jb
dec
js
or
xor
push
out
ss
je
imul
or
inc
xor
mov
pop
int
pop
add
inc
fldt
xchg
or
ret
lret
pop
xor
and
mov
test
adc
pop
or
cwtl
movl
mov
shll
ret
or
jecxz
lret
rcll
adc
push
sti
orb
jl
xchg
aad
enter
and
loopne
push
sub
fs
fistps
incl
cwtl
lods
movsb
push
or
mov
sub
dec
imul
or
dec
add
mov
cmp
inc
dec
jp
das
and
inc
popf
hlt
cmpsb
adc
mov
les
push
or
loopne
orb
sub
and
sbb
push
enter
fisubrs
cmpsl
pop
data16
mov
push
test
js
fdivr
pop
xchg
popa
cs
loopne
stos
fsubrs
push
inc
movsl
mov
pop
sbb
mov
mov
prefetch
ret
sbb
xor
jb
dec
or
punpckhbw
cmp
push
mov
pop
fwait
inc
fwait
inc
test
pop
inc
in
dec
sbb
les
inc
loopne
or
push
xchg
and
hlt
pop
add
test
xor
in
jmp
pop
je
int
push
xchg
sahf
mov
lock
inc
test
sahf
lods
xchg
add
inc
cmp
jo
jge
negb
in
rolb
mov
xchg
psubw
mov
fstps
setae
jb
cmpb
scas
insb
aas
xor
repz
sti
ja
cmp
sub
lock
sub
cwtl
popa
pushf
push
pop
cmpsl
xchg
lea
clc
jecxz
inc
or
add
sub
dec
outsb
inc
xchg
push
repnz
mov
jp
adc
dec
fnstcw
sbb
pop
mov
mov
pusha
add
sbb
xchg
faddp
clc
push
prefetch
int
add
dec
cltd
jo
mov
dec
cmpsl
sbb
pop
sub
pusha
pop
lods
jns
sub
loopne
das
js
fs
pop
aaa
inc
fwait
loopne
inc
aas
enter
movsb
add
jmp
mov
xchg
dec
cld
xchg
sbb
pop
inc
mov
sbb
or
jae
es
mov
mov
mov
inc
mov
shr
xchg
and
jge
or
push
cmpsb
outsb
adc
in
and
or
es
pop
daa
inc
lea
aas
jmp
inc
nop
inc
imul
aaa
cltd
adc
je
add
and
ret
movsl
adc
cmpsl
call
repz
int
xor
inc
or
scas
and
adc
push
mov
icebp
test
add
adc
ffree
movsl
and
cmp
dec
inc
cld
popa
cmpsl
adc
ret
jp
pop
int
or
sahf
lea
add
push
pop
adc
add
inc
add
or
in
mulb
inc
or
mov
xchg
ficoms
insb
inc
fidivrl
mov
les
fs
sbb
pop
dec
jecxz
xchg
pcmpgtd
and
cmp
clc
sbb
aaa
adc
push
adc
pop
orl
or
inc
call
adc
inc
cmp
inc
mov
pop
add
shlb
mov
clc
mov
pop
xchg
das
repz
or
adc
das
mov
imul
mov
xchg
stos
push
fwait
test
rorl
sahf
jns
mov
inc
or
je
movswl
jno
shl
dec
sbb
cs
add
cmpsl
sbb
mov
subb
adc
jns
cmpsl
mov
cmc
push
xor
push
mov
xchg
daa
jle
pop
daa
es
cmp
movb
push
push
daa
add
das
mov
scas
mov
movsl
in
out
push
mov
sbbl
mov
sbb
adcb
fimull
shlb
call
loope
shll
test
test
xchg
test
jbe
adc
lock
add
jno
popa
insb
ja
xchg
xchg
adc
hlt
popf
or
test
lea
push
nop
jle
xor
sbb
loopne
popf
inc
cmp
and
xor
pop
les
pop
nop
pop
pusha
loopne
cmpsl
xor
and
cmp
ffreep
addr16
xor
rcrb
repnz
mov
sbb
lea
adc
jo
mov
mov
mov
outsl
mov
fwait
mov
enter
cmpsl
xchg
dec
lea
adc
addr16
inc
pop
adc
dec
push
test
mov
push
ds
ret
das
xchg
push
sbb
addb
aas
mov
or
fld
iret
push
hlt
jmp
add
cmp
xor
add
test
add
mov
pop
cmp
pop
cmp
mov
out
int3
js
xchg
sbb
and
jns
pop
xor
jge
jecxz
cmp
push
xchg
cwtl
push
add
sub
add
test
sbb
push
dec
inc
shrl
shl
mov
stos
dec
stos
lds
mov
out
cs
push
lods
xchg
sub
dec
fsubp
dec
sub
push
inc
mov
push
xchg
addr16
daa
cmpb
add
sbbb
inc
daa
mov
test
mov
adc
pusha
loopne
fmuls
imul
and
loopne
js
fsubr
cmp
push
in
fs
sub
mov
sbb
imul
js
xor
scas
mov
jno
in
rcr
out
dec
lods
push
xchg
sub
mov
or
xorl
sub
lods
sbb
arpl
pop
xchg
push
aas
mov
jbe
cmp
sub
xor
divl
and
testb
adc
push
or
cmp
repnz
sub
mov
xor
pushf
add
sub
mov
pop
cmc
push
enterw
sbbl
fcomps
lods
pop
push
mov
leave
xchg
clc
push
outsb
xchg
xlat
iret
ret
push
lea
adc
int3
pop
add
jg
mov
pop
ja
dec
ljmp
push
scas
mov
dec
add
mov
cmpsl
fcoml
mov
fcomps
mov
jmp
sbb
cmc
imul
adc
insb
cmp
je
xchg
in
call
sbb
or
mov
clc
and
jg
loopne
bound
jae
mov
xchg
push
sarl
test
negl
addb
ljmp
inc
and
xchg
nop
xchg
es
xor
pop
aas
loop
repz
pop
mov
xor
cmp
mov
shrb
aam
mov
leave
dec
xor
or
pop
mov
fcoml
jmp
and
push
or
insl
lods
and
arpl
je
mov
stc
dec
adc
mov
adc
push
and
push
icebp
push
cld
dec
loopne
andb
dec
add
adc
push
cmp
dec
and
jg
movaps
or
or
rcrb
adc
lret
jno
lock
inc
das
fnstcw
pop
inc
pusha
push
or
jne
push
jbe
pop
pushf
pop
dec
mov
pop
sub
or
adc
lods
cmp
push
mov
ret
cmp
jae
retw
fimull
orb
add
test
pop
cmp
xchg
es
push
or
pop
fbstp
movb
data16
nop
int3
test
adc
shlb
add
xchg
push
or
cs
pop
adc
jge
sbb
hlt
aas
imul
and
sbb
cmp
fadds
jne
xchg
lar
xchg
dec
movsb
test
mov
sbb
lds
outsl
add
push
daa
and
pop
outsl
dec
add
nop
idivl
xchg
in
out
clc
imul
push
das
arpl
mov
aas
lds
fs
mulb
and
cmp
leave
inc
inc
push
cmp
ret
fiadds
xor
pop
jo
test
jb
xchg
jecxz
icebp
jle
add
add
pminub
aad
mov
push
fisubl
repz
outsl
and
xchg
xor
dec
dec
cmp
mov
push
fdivs
cmp
xchg
pusha
js
add
dec
xchg
scas
inc
mov
pop
push
xor
push
ljmp
add
dec
es
mov
enter
xchg
xor
bound
movsb
mov
sub
ret
xchg
ja
or
dec
cmp
arpl
and
mov
jne
xor
std
jo
mov
sbb
and
sbb
lock
xor
xor
cmpb
sub
sub
addl
cld
imul
jp
jp
das
or
or
lcall
cmc
cwtl
shr
adc
ret
jg
mov
cmp
cmovnp
add
pop
hlt
fstl
lock
add
dec
adc
cmp
cmp
mov
add
cmp
cmp
sbb
pop
push
sbb
jo
jne
inc
mov
shrb
sub
adc
pop
ljmp
cmc
mov
jne
aad
es
cwtl
leave
jb
push
adcl
inc
adc
add
and
xchg
mov
mov
jl
mov
dec
ret
stos
sbb
incb
fistpll
add
push
mov
mov
aam
pushl
out
add
sub
xor
xchg
add
or
mov
adc
iret
test
add
jae,pn
out
leave
mov
xchg
pushl
inc
cmp
shrl
mov
fwait
clc
sub
and
out
adc
pop
jmp
add
jb
or
sti
imul
add
test
or
push
push
jo
add
adc
add
clc
xor
or
xchg
int3
gs
sub
out
mull
lds
pop
dec
push
fwait
inc
jle
sbb
jmp
add
add
push
iret
adc
shll
xchg
pop
leave
test
push
pop
sbb
inc
out
out
mov
pop
sbb
xor
jne
sti
daa
pop
xor
cmc
and
sub
sbb
addr16
xchg
sub
scas
repnz
or
sbb
les
je
xor
push
or
or
jns
or
jmp
iret
push
aam
popa
xchg
cmp
inc
scas
test
cmpsl
nop
adc
fildl
loopne
les
sbb
jmp
add
bound
sbb
shll
and
push
dec
stos
fldln2
xchg
ret
arpl
jecxz
vunpckhps
mov
into
das
xchg
cmpl
xlat
xchg
push
inc
xorb
push
push
stos
cli
add
mov
sbb
sbb
repnz
xchg
cmpsl
or
push
pop
out
xor
addb
dec
inc
rorb
xor
addb
loopne
movsb
sbb
jmp
or
pop
hlt
mov
inc
ljmp
inc
or
cmpsb
lock
push
and
dec
in
inc
jmp
lret
jne
cmp
adc
add
xchg
daa
mov
cmovo
add
mov
adcl
pusha
test
push
and
or
xchg
rclb
out
out
inc
mov
sub
pop
roll
cmp
inc
test
jg
les
sub
sub
inc
add
pushf
xchg
pop
and
inc
sbb
out
fistpll
test
sbb
ret
dec
fnstenv
inc
sub
inc
sbb
pushf
jmp
sub
and
adc
aaa
pop
adc
add
shr
xchg
lock
divb
mov
or
mov
add
cmpsl
xorb
rorl
push
ret
out
inc
movsb
inc
aaa
jb
push
dec
xchg
push
pusha
push
push
xchg
add
rcrb
enter
xchg
loopne
push
mov
xlat
add
ja
jge
in
insb
outsb
dec
ret
divl
nop
pusha
sub
or
out
xor
inc
dec
jno
inc
jp
ficoml
mov
or
pop
cmp
int
and
pop
fadds
dec
sbb
push
mov
and
aad
mov
test
sarb
repz
sbb
cs
popw
or
or
sub
aaa
pop
or
sbbl
add
cmpl
mov
ljmp
js
add
push
pop
loopne
add
push
movsb
push
xlat
inc
mov
sbb
push
or
pop
adc
das
jne
dec
pop
shrl
xorb
pop
les
lods
dec
xor
adc
inc
xor
mov
adc
pop
jno
or
or
and
mov
lds
and
int3
add
repz
push
pop
mov
fldcw
or
outsl
jmp
scas
xchg
jo
cmpsb
shll
inc
orl
mov
inc
movsb
mov
mov
loopne
xchg
je
pusha
fwait
or
fdivrl
or
adc
ja
daa
or
mov
xor
fiaddl
push
in
pop
pop
fcmovnb
je
inc
push
punpcklbw
jecxz
add
xor
mov
ret
loope
and
in
inc
imulb
adc
lock
xor
push
movb
inc
inc
scas
fs
or
push
xor
test
shrb
shll
push
stc
cltd
sub
mov
dec
or
dec
mov
inc
loopne
addr16
cmp
in
and
inc
aam
outsl
aad
cmp
cmp
xlat
je
jo
outsl
and
or
in
pop
mov
mov
pop
cmp
ret
dec
sub
and
jbe
or
cs
cmp
out
add
sub
filds
add
scas
xor
mov
fmull
test
je
push
ret
addl
fcoms
mov
jae
mov
andl
push
and
je
shl
dec
test
add
push
xor
dec
andl
pop
cwtl
imul
insb
mov
fstl
dec
inc
mov
mov
push
hlt
and
sub
push
cmp
and
mov
outsl
test
and
fistpll
inc
test
xor
inc
jg
shlb
mov
es
jmp
jne
test
out
mov
mov
mov
popf
in
ror
and
mov
push
insb
mov
push
xlat
sbb
jbe
cmp
or
jne
jl
sub
add
aad
jbe
and
inc
xor
scas
test
xchg
psrlw
push
fadds
stos
push
push
sbb
popa
add
mov
and
pop
hlt
xchg
mov
cmpb
aaa
inc
iret
inc
xor
sub
dec
jge
add
push
pushf
adc
mov
lods
xlat
bound
js
ffreep
add
fwait
xchg
or
adc
inc
pop
xor
pop
mov
push
insb
dec
and
insb
fs
nop
sub
push
xchg
or
and
call
loop
xor
insb
mov
inc
pushf
nop
cmp
and
pop
fidivl
pop
push
aas
pusha
pop
popf
jno
mov
push
add
out
push
and
pop
daa
adc
mov
pop
fs
inc
adc
push
fadd
mov
jl
int3
rcrb
or
in
adc
and
pop
sbb
adcb
or
mov
adc
test
flds
mov
icebp
adc
dec
push
add
adc
frstor
scas
inc
jb
inc
cltd
stos
sub
pop
dec
inc
imul
scas
sub
sub
add
aam
shr
cmp
push
call
cmpl
clc
lock
or
in
or
in
mov
repz
fcompl
or
sahf
inc
sbb
pop
adc
mov
aam
push
mov
fmull
xor
mov
in
add
jb
sub
das
xchg
popf
les
gs
repz
pop
or
jmp
movb
or
dec
cmp
add
imul
xor
add
mov
inc
in
inc
inc
jnp
shrb
scas
and
cs
or
mov
pop
add
or
rcll
fdivp
xchg
arpl
push
mov
lret
inc
imul
mov
mov
push
repz
push
dec
or
mov
xchg
mov
add
sub
sbb
xchg
sbb
cld
mov
jmp
inc
and
sar
movsb
sbb
jge
adc
or
dec
push
sahf
loopne
adc
out
or
fists
push
mov
and
jle
adc
jnp
dec
add
add
mov
fisubs
jbe
sub
fsubs
mov
fsts
mov
das
or
push
mov
and
into
adc
into
inc
dec
add
add
jns
repnz
sbb
mov
dec
mov
cmpsl
mov
sbb
fsubl
pop
pop
and
or
int
ficompl
dec
fadds
in
popf
clc
sbb
lret
sbb
dec
les
sbb
push
nop
or
lds
add
faddl
mov
stc
adc
mov
add
testl
sahf
dec
and
cli
push
mov
lahf
lods
mov
pop
add
dec
sub
mov
shlb
ret
push
cmpsl
dec
or
xor
xchg
hlt
add
jo
mov
and
cwtl
mov
add
dec
iret
pop
adc
jbe
cmp
sbb
mov
sbb
aaa
adc
jns
mov
andl
or
sub
inc
xor
mov
dec
aam
mov
cld
popa
sub
pop
add
push
mov
or
fmul
push
fimull
dec
sub
inc
sub
insl
push
or
jmp
lret
outsl
repnz
mov
icebp
push
cli
xchg
aam
ret
aaa
adc
inc
stc
mov
data16
aaa
and
inc
dec
or
mov
mov
cmp
adc
cmpsb
rclb
dec
mov
mov
sub
test
fmull
iret
mov
int3
hlt
add
add
iret
hlt
mov
mov
movsb
mov
adc
cltd
insb
call
xchg
adc
push
outsl
lock
or
push
in
arpl
pop
push
adc
add
cmp
enter
mulb
mov
push
adc
lret
in
or
add
inc
or
add
or
les
adc
sub
mov
adc
test
push
add
andb
or
sahf
mov
push
in
subb
sub
cwtl
adc
jb
ljmp
xor
mov
sbb
xor
xor
lea
sub
insl
rcrl
pusha
cmp
aam
mov
sbbl
xor
mov
mov
push
add
add
cmp
movsl
inc
jbe
add
sbb
add
into
add
div
dec
push
adc
insb
mov
cmp
imul
nop
out
loopne
adc
or
dec
stos
adc
or
movsl
adc
mov
mull
add
loopne
or
lock
jle
cmp
mov
adc
push
dec
pop
adc
and
sbb
rcr
shll
roll
movsl
mov
push
shrl
jno
cmp
sbb
xchg
wbinvd
fwait
loopne
sub
sbb
or
cmpsl
pop
add
push
iret
stos
add
jb
jns
pusha
pop
lcall
push
jnp
jno
lea
fstl
and
mov
push
mov
sub
test
add
cmp
add
inc
enter
sbb
out
and
cmpl
xchg
inc
cmp
add
aam
or
sbb
or
lods
mov
imul
in
inc
jo
xchg
andb
idiv
out
or
mov
and
pop
loop
push
and
push
jo
pop
sbb
cmp
xchg
aam
sbb
mov
add
mov
addb
jmp
adc
push
push
outsl
lcall
mov
pop
push
push
sub
mov
dec
sub
int3
shrl
push
and
jno
mov
sbb
inc
enter
pop
mov
adc
dec
inc
ficompl
in
cmp
sbb
cmp
hlt
add
adc
movsl
or
sahf
adc
push
lret
cmpb
fwait
insb
cmp
mov
cwtl
dec
add
inc
loopne
nop
mov
lret
clc
int3
inc
ret
pop
jbe
or
rcr
jge
int
out
push
add
cmpl
inc
cmp
cmp
adc
mov
sbb
push
jbe
inc
dec
pusha
jnp
mov
mov
leave
pop
push
pushf
into
add
cmpb
push
and
mov
add
addl
inc
fadds
jno
cmp
rorl
pop
adc
and
repnz
mov
cmp
js
xorb
shr
mov
xor
addb
cmp
add
xor
add
mov
and
dec
call
and
or
pop
push
or
adc
pop
sub
cld
hlt
push
pop
xchg
ss
mov
pop
push
sbb
adc
sbb
dec
cmpsb
or
adc
cmp
or
xor
clc
fs
dec
or
mov
call
push
jle
or
das
sbb
sbb
adc
fisubs
insl
xor
lods
xor
imul
sbb
cmp
out
cld
jbe
jae
xor
outsb
mov
adcl
inc
cmp
mov
add
xor
adc
es
adc
mov
iret
shrl
test
ret
push
xor
push
lds
and
push
pop
ljmp
cs
add
push
ds
add
mov
jne
push
out
push
add
fucomip
daa
pop
mov
fs
out
mov
add
push
and
xor
inc
push
xchg
pusha
xor
lods
test
or
push
pop
call
adc
call
and
ret
call
je
xchg
negl
mov
paddb
in
inc
add
pop
mov
dec
fwait
push
bound
or
pusha
inc
jae
or
or
push
sbb
mov
xor
lock
inc
jp
push
and
sub
arpl
test
int3
out
jae
fisttpll
inc
outsl
push
or
sti
enter
mov
mov
pusha
pop
clc
je
dec
cmp
push
sub
mov
mov
pop
push
mov
xchg
adc
clc
iret
push
icebp
and
ret
scas
imull
cmp
cmpsl
push
loope
push
xchg
popa
ja
aad
js
mov
or
mov
sub
inc
adc
sbb
lds
ret
cmc
ret
jg
cmp
ja
je
pop
mov
mov
mov
xchg
cmp
ret
lret
dec
xor
xor
add
mov
out
adc
insl
dec
ficoml
ret
aas
notb
push
push
out
adc
cmc
or
mov
mov
fiadds
iret
aad
dec
jo
imul
add
lahf
das
je
and
cwtl
dec
or
or
movb
popl
xor
pop
lods
and
push
lock
fwait
add
inc
in
add
lods
sub
add
call
inc
or
jbe
sub
push
inc
or
int3
or
cwtl
mov
add
mov
add
pop
outsl
ss
mov
jbe
xchg
inc
aaa
sarl
pop
faddl
add
and
push
cmc
enter
ss
imul
dec
imul
adc
mov
jbe
pop
or
addb
xor
mov
sbb
jle
iret
adc
cmpb
roll
inc
ret
icebp
adc
in
xor
rolb
push
cwtl
je
je
mov
sub
fdivrs
loopne
mov
in
enter
inc
repz
mov
jmp
mov
push
xor
adc
daa
inc
mov
jbe
out
or
adc
aas
adc
stc
xlat
inc
jge
sub
pop
add
mov
icebp
jmp
xor
push
fdivl
adc
out
mov
adc
test
pop
adc
jmp
enter
lahf
push
jo
adc
pop
inc
out
mov
jnp
cltd
push
loope
mov
test
sbb
push
sbb
pop
test
pop
dec
jne
inc
call
or
fldenv
cltd
pop
fs
push
mov
ret
addl
outsl
nop
add
mov
dec
jne
into
inc
inc
daa
loopne
mov
xchg
and
or
cmp
dec
xlat
xchg
and
push
cli
sub
outsb
adc
cmp
xchg
sub
dec
fstpl
jmp
cmp
adc
fs
xchg
cmp
push
add
sbbb
nop
jl
pop
xchg
ror
xor
fmuls
mov
fsubl
add
les
jl
adc
pop
adc
push
adc
mov
test
xor
xor
inc
dec
mov
inc
xor
add
daa
test
mov
fcomp
pop
add
loop
adc
push
sub
dec
popa
popa
adc
cmp
or
inc
fdivl
outsb
dec
jo
fwait
and
sub
xchg
hlt
adc
test
push
xor
ret
hlt
out
mov
inc
adc
add
xchg
aam
inc
cmp
call
lea
xchg
dec
jb
jne
push
dec
add
cmp
xchg
cmp
popa
mov
adc
add
xor
jb
xor
adc
ljmp
gs
mov
stos
dec
push
add
sbb
mov
sbb
jp
pop
jg
repnz
test
pop
push
adc
push
shrl
fdivrs
jb
lcall
mov
jp
enter
pop
pop
adc
jo
imul
mov
and
arpl
xchg
in
adc
push
ss
or
push
clc
loope
or
fiadds
and
dec
mov
addl
sbb
mov
pop
mov
mov
dec
in
rol
loopne
push
les
enter
add
pop
outsl
mov
into
shlb
roll
and
dec
sub
mov
sub
or
and
lods
add
xchg
sub
or
loop
loopne
push
fstpt
fiaddl
bound
and
jge
out
jl
daa
movb
cmc
call
or
scas
mov
cmp
jo
inc
data16
sbb
or
loopne
and
and
adcb
inc
add
pushf
or
sbb
or
push
add
inc
mov
dec
insl
jmp
int3
and
lea
mov
pusha
and
pop
cmpsl
bound
icebp
or
adc
and
fnstcw
fldenv
and
ret
clc
es
repz
jno
or
push
out
mov
sbb
xchg
mov
shll
outsl
sub
mov
lcall
or
cmp
test
mov
addb
shll
cmpsb
push
lea
pop
add
push
adc
sbb
inc
xor
xchg
test
add
dec
or
add
addl
add
jle
incl
pop
dec
insb
push
cmp
add
pusha
lods
roll
cmp
test
clc
and
xchg
or
mov
push
pop
inc
adc
or
sbb
and
pop
aaa
or
push
adc
cmp
cmp
int
sub
sbb
or
daa
adc
cwtl
cmp
js
mov
mov
add
fs
xor
cmp
and
push
add
jp
sub
jmp
ja
es
pop
paddsb
cmp
mov
inc
scas
xor
int
das
and
mov
add
mov
out
rolb
ret
cltd
cmp
and
out
mov
mov
testl
loopne
cli
mov
inc
jge
sub
inc
movsl
nop
xorl
xor
mov
loopne
lahf
and
or
lock
shrb
movsl
sbb
add
test
or
lcall
imul
inc
popa
loop
inc
test
pop
push
push
sbb
ret
ds
jne
push
adc
fadds
int3
js
notb
pop
sub
and
pop
pop
sbb
cmpsl
fidivs
test
pop
cmp
push
jnp
xor
cmpb
sub
sub
mov
daa
add
insb
dec
pop
mov
add
inc
fsubrp
sub
andb
or
sub
jmp
add
xchg
dec
into
push
loopne
sbbl
add
adc
fnstcw
rorl
sbb
notl
mov
nop
push
cs
data16
add
sub
les
sbb
sbb
loope
test
cltd
xor
into
push
push
sarb
or
inc
sub
inc
add
mov
insb
xor
loopne
mov
or
add
mov
cltd
aam
push
fisttpll
sub
lock
jmp
xor
nop
xchg
mov
or
mov
adc
ret
add
inc
pop
jecxz
test
add
mov
fsubs
dec
stc
ja
push
repnz
ja
lds
pop
or
xchg
testl
or
or
or
dec
sbb
mov
adc
push
mov
mov
jno
arpl
js
jmp
push
mov
and
or
sub
ret
sub
adcl
xchg
adc
cmpsb
mov
test
sbb
jne
sbb
sub
leave
and
inc
mov
repnz
jmp
sub
sbb
mov
daa
or
pop
inc
or
xor
push
push
pop
les
inc
pusha
adc
pop
pop
sub
jb
xor
clc
int3
add
sub
xor
loopne
jmp
add
or
mov
jne
xchg
bound
add
add
xchg
jg
aaa
or
add
outsl
idiv
jns
out
push
movsb
std
je
mov
clc
sbb
inc
out
add
cmp
xor
push
cmp
mov
add
aaa
mov
dec
mov
mov
ljmp
sbb
int3
adc
and
pop
cmp
outsl
xchg
sub
orb
jg
pop
popf
jbe
sarb
add
xor
aaa
push
mov
loop
add
rcrl
or
sti
jmp
cmc
and
orl
push
push
sbb
dec
enter
add
or
jg
mov
sbb
jmp
jg
sub
call
dec
rcll
add
ds
push
pop
cltd
leave
rcr
cmp
xor
mov
roll
outsb
and
cwtl
push
pop
pop
aaa
dec
icebp
and
mov
push
sbb
lods
pop
sbb
cmpsl
dec
mov
push
dec
call
leave
inc
in
dec
in
arpl
and
adc
stos
push
sub
push
daa
jne
lds
dec
or
add
iret
mov
jbe
cmp
mov
pop
jb
push
loopne
ret
loope
xlat
repz
arpl
adc
push
sbb
out
push
in
inc
mov
cmp
adc
pop
mov
gs
rorl
push
imul
enter
outsl
dec
pop
lock
inc
ret
mov
inc
sbb
jp
test
lock
cmp
mov
cmp
lock
jne
sub
or
lea
fucomip
dec
and
pusha
testb
addb
cmp
loope
cmp
jecxz
jae
push
and
popa
sub
into
dec
sub
pop
add
pop
imull
add
fs
call
add
jle
mov
or
or
pop
pop
or
xor
les
and
cli
in
add
and
sub
sbbb
inc
inc
pop
inc
lea
sub
cld
not
ret
clc
mov
repnz
imul
inc
popf
or
pushl
add
xchg
xor
js
mov
iret
or
inc
shlb
bound
cwtl
enter
mov
imulb
jmp
mov
lcall
insb
test
data16
add
dec
pop
dec
or
adcb
stos
subb
cmp
or
cmp
add
inc
mov
inc
sbb
sbb
jnp
add
inc
add
xchg
sub
push
sbb
roll
inc
jo
test
or
jmp
push
xor
lock
inc
mov
sub
push
add
xchg
jg
mov
fmull
push
imul
in
inc
inc
sub
push
push
fiaddl
data16
push
test
inc
dec
mov
hlt
fnstenv
aad
inc
insl
mov
lods
popl
inc
adc
or
rclw
xor
cltd
pushf
xchg
loopne
lret
das
lock
in
add
sub
adc
call
add
add
leave
mov
dec
lock
fistpll
inc
pop
push
mov
adc
sbb
inc
and
and
sbb
sti
add
dec
or
xor
mov
fabs
add
movsl
int
arpl
inc
adcb
or
lods
and
shll
sbb
sub
rcrl
adc
outsb
or
mov
mov
imull
roll
push
or
fiaddl
arpl
sub
or
add
mov
adc
or
add
jnp
cli
andl
mov
adc
cmc
add
dec
clc
sar
jns
adc
inc
jae
sub
or
movsb
icebp
aaa
cmp
pop
pop
jne
add
xorb
or
iret
or
inc
inc
popf
lock
jo
fdivrs
push
cmpsb
pop
push
inc
jmp
pop
push
dec
pop
movsl
outsl
dec
lret
lods
push
push
faddl
icebp
cmp
popa
push
sbb
sbb
pop
push
outsl
sbb
imul
adc
or
sbb
sbb
sbb
in
fwait
inc
fs
jg
icebp
xchg
and
inc
dec
xchg
mov
imul
shlb
dec
sub
adc
or
push
sbb
and
test
mov
sub
loopne
xchg
adc
push
mov
int3
mov
hlt
dec
aam
adcb
sbb
or
push
popf
cmp
rcll
leave
mov
ljmp
dec
clc
mov
test
jnp
inc
or
js
mov
push
and
jle
adc
push
mov
xor
add
cs
mov
adc
divl
or
gs
or
jb
jecxz
xchg
xchg
push
inc
ja
jl
xchg
movlps
mov
sbb
daa
mov
pop
and
mov
and
dec
adc
push
int3
sbb
jmp
pop
sub
pop
je
inc
fcompl
or
and
push
push
outsb
roll
das
rorw
shrl
inc
aam
pop
lock
nop
les
in
dec
add
and
add
add
pushf
movsl
sbb
movsl
push
adc
das
adc
lcall
push
sbb
or
pop
ja
orb
sbb
or
dec
xchg
pop
mov
dec
dec
push
sbb
push
dec
sbb
jo
jge
push
dec
mov
test
push
je
inc
or
rcll
push
insb
pushf
and
aaa
dec
push
xchg
ss
inc
or
push
fldt
pop
inc
add
inc
dec
mov
lahf
xchg
fildl
dec
sub
or
paddb
int
test
jne
push
ljmp
sub
cmp
punpckhdq
xor
testl
lea
hlt
out
aaa
arpl
adc
or
xor
les
push
push
nop
cmpl
push
movsb
imul
daa
repnz
fcmovnb
sti
loope,pt
jb
lea
sbb
jge
sbb
push
adc
in
sub
subl
rolb
mov
push
lods
xorb
sub
dec
aam
stos
popa
decl
jmp
in
push
sub
and
and
hlt
in
and
mov
push
inc
dec
push
cmp
xor
nop
out
mov
loop
adc
adc
adc
sahf
inc
sarb
and
test
in
pop
lret
cmovl
adc
dec
mov
mov
or
jle
dec
jae
cmp
jne
pop
das
aam
ret
gs
pusha
shl
add
push
or
push
adc
cltd
sub
push
mov
push
sbb
loope
xor
and
push
lock
stos
pop
adc
pop
and
xor
and
mov
in
cmp
daa
inc
cld
imul
mov
push
fdiv
pop
add
inc
push
inc
push
push
mov
cwtl
pop
xor
xchg
jno
mov
sbbl
pusha
jae
jp
pop
or
test
jo
in
arpl
sub
adc
test
and
xchg
test
push
add
rcrl
lea
rol
push
pushf
sub
rorl
inc
inc
cmc
movb
dec
xor
pop
sub
inc
std
adc
lahf
add
inc
mov
out
addr16
adc
repnz
push
mov
fcmove
cltd
xor
pop
adc
cmp
add
mov
jbe
jnp
enter
inc
enter
sub
popf
cmp
jo
ret
cld
je
pushf
nop
pop
cmp
in
add
shll
mov
lock
popa
arpl
aam
jae
rorb
cmp
sbb
les
in
clc
jne
xchg
sub
iret
xchg
shrb
clc
or
sub
add
push
jbe
fcmove
call
stos
add
sub
pushf
inc
bound
mov
orb
dec
sub
add
in
and
jge
jle
jl
fstp
pop
pop
xor
lock
ss
mov
mov
add
es
pop
lahf
sbb
repnz
dec
test
dec
scas
mov
add
push
movl
xchg
mov
loopne
fs
pop
cmpsl
in
adc
jle
pop
mov
pop
xor
call
shlb
jo
jle
jecxz
aas
aad
xlat
pusha
pop
push
cmpsl
or
adc
mov
sub
loope,pn
mov
jmp
shlb
xor
and
cmp
pusha
jno
mov
xlat
sub
cmp
mov
pop
sub
add
cltd
pop
jmp
lret
fmuls
pop
pop
aaa
adc
inc
pop
call
fadds
add
or
push
add
add
push
aaa
inc
imul
rolb
insl
mov
sub
aaa
mov
mov
xchg
imul
pusha
add
pop
loopne
or
sub
test
lret
push
ljmp
js
mov
xchg
or
xchg
add
mov
ss
lret
xor
cmp
jl
or
rorb
pop
mov
sub
jg
jmp
leave
test
addb
push
jns,pn
subb
insb
pop
jg
xchg
les
or
and
ss
and
cmp
mov
aas
fistpll
sub
test
adc
test
and
out
xor
shl
aaa
dec
in
mov
or
fcomps
pop
cmp
aam
mov
inc
xchg
loop
or
fcoms
lret
rclb
pop
push
test
adc
lock
test
fnstcw
or
lock
pop
push
lahf
mov
pop
push
nop
inc
add
sbb
add
popf
hlt
les
popf
outsl
mov
jne
inc
mov
add
push
xchg
lea
or
xchg
mov
pop
js
adc
jo
mov
insb
xchg
adc
mov
mov
push
cli
leave
call
ss
adc
and
mov
adc
cmp
hlt
mov
xor
jl
out
call
xchg
and
or
sbb
cmc
js
pop
xor
mov
mov
test
pusha
ljmp
xchg
nop
dec
daa
sub
or
imul
divl
cld
pop
sbb
adc
mov
jo
push
add
fisubrl
and
inc
xor
push
xor
sbb
movb
add
sub
sbb
jo
cwtl
fnstcw
adc
leave
cmp
mov
adc
jo
je
inc
and
lea
inc
and
inc
inc
pop
jmp
sti
in
call
inc
dec
arpl
inc
xchg
mov
cmpb
sbb
sahf
ret
add
pop
cld
lcall
in
mov
ja
das
pop
pop
add
or
mov
mov
or
popa
pop
fs
add
sub
add
ljmp
dec
mov
ret
mov
mov
adcb
push
pop
addl
sbb
ja
mov
arpl
rclb
push
sti
xchg
xor
fs
push
push
or
mov
scas
loopne
imulb
cmp
inc
mov
sub
test
xlat
inc
adc
aam
push
jbe
cs
inc
pushf
dec
adc
push
and
and
loopne
push
daa
push
leave
clc
sub
mov
xorl
add
adc
push
jmp
xor
dec
jne
fiadds
or
and
push
popa
jo
jnp
sahf
mov
jmp
adc
das
pop
sub
mov
cmp
add
inc
dec
daa
shll
or
scas
xchg
add
pop
add
sbb
adc
cmp
fcomps
cmp
cmp
lock
or
mov
fwait
out
add
icebp
inc
adc
or
xchg
fldt
and
insb
sub
and
jo
je
sbb
jl
jns
in
orb
mov
pusha
xchg
sbb
adc
lock
rorb
addr16
dec
xchg
addb
cmovg
ljmp
dec
dec
inc
mov
imul
gs
pop
push
gs
fmuls
dec
movsl
daa
inc
xor
xchg
aam
or
das
push
cmc
ficompl
insl
jo
or
imul
das
inc
in
inc
out
cmp
xchg
inc
xchg
dec
jae
pop
les
nop
pop
aaa
lods
push
cmp
pop
jno
loop
lahf
pop
cmc
sbb
push
mov
test
fists
mov
les
mov
push
int
inc
fcomps
mov
sbb
mov
insb
jns
add
pop
jl
or
je
push
ret
mov
fwait
jbe
mov
cmp
adc
xor
and
hlt
stos
push
jns
jge
or
dec
mov
xchg
sub
add
add
je
loopne
enter
popf
nop
pop
ja
orb
sub
outsl
int
sub
cli
mov
and
and
sbb
and
xor
and
mov
push
shlb
and
insb
cmp
shr
hlt
inc
pop
ret
xor
std
xor
mov
mov
test
ret
mov
add
outsb
pusha
jo
or
sub
inc
stos
inc
enter
or
clc
dec
sahf
divb
mov
cwtl
cmp
add
test
sbb
cmp
sbb
aas
outsl
pushf
or
adc
pop
inc
pop
mov
pop
ret
out
mov
sub
add
cmc
sti
sub
mov
sub
mov
or
or
out
dec
xor
scas
xchg
insb
dec
push
nop
scas
imul
hlt
add
sbb
imul
int3
lret
sub
cmp
adc
cs
ja
add
pop
repz
mov
inc
sbb
mov
jmp
subl
imul
ds
xchg
pop
push
mov
jp
sub
inc
mov
sbb
cmp
lret
setae
inc
pop
push
iret
inc
or
andb
in
testb
sbb
xor
nop
sbbb
inc
imul
push
pusha
sahf
dec
pop
pop
lahf
fs
inc
or
sti
inc
sbb
inc
ss
inc
cli
inc
lcall
xchg
lods
pop
sub
xchg
push
js
mov
cmp
sbb
sbb
sub
dec
push
sbb
rclb
bound
outsb
je
roll
movsb
je
sub
cmp
or
or
iret
movsb
daa
add
pop
lcall
push
push
scas
mov
inc
aam
inc
cmp
pop
pop
fiadds
std
and
prefetch
aam
imul
push
dec
add
adc
lret
lods
ds
shlb
push
stos
sub
ret
clc
add
clc
mov
popa
imulb
pop
sbb
nop
aad
insb
pop
cld
pop
inc
andl
or
mov
loope
bound
or
pop
aaa
add
and
push
xor
pop
mov
xchg
mov
push
and
outsb
xor
push
and
test
inc
xor
nop
fwait
dec
add
lods
xor
add
out
inc
push
push
dec
sbb
sysenter
cli
sub
cmp
or
push
movsb
out
add
sbb
stc
out
gs
xor
sub
mov
fsubrl
gs
add
sbb
cmpsb
imul
imul
mov
orb
jecxz
push
push
addr16
push
sarb
pop
out
cmp
or
into
cmpsl
pop
popf
lods
aas
pusha
or
xor
imul
aaa
enter
mov
add
sbb
test
pop
enter
pop
testl
in
ds
sub
pop
imul
jo
lahf
dec
pop
mov
nop
popa
and
mov
inc
pop
inc
mov
and
push
sub
xor
sbb
inc
inc
add
sbb
or
mov
sbb
adc
pop
loopne
les
xchg
mov
inc
and
push
int3
sbb
or
add
inc
iret
sub
adc
sahf
mov
insb
fnsave
scas
lock
or
les
xor
enter
mov
aaa
fnsave
mov
sbb
or
fwait
movb
enter
callw
jno
sbb
sub
inc
xor
test
ja
fcmovnbe
cmp
ljmp
sbb
inc
sub
xor
inc
inc
lret
sub
pushf
xchg
pusha
aad
scas
loopne
push
xlat
dec
out
dec
mov
mov
adc
enter
shrb
pop
rorb
or
or
cmpsl
cmp
add
mov
adc
and
cmp
xor
sarl
jne
jle
adc
adc
cmp
mov
dec
adc
sbb
adc
insl
dec
xor
iret
cmpb
loope
inc
pop
mov
ss
xlat
jae
ret
inc
push
dec
inc
jae
add
adc
dec
jo
imul
or
sub
push
xchg
mov
ja
cmp
xchg
ret
dec
inc
add
mov
rcrl
pop
ret
call
fcom
push
ret
sbb
ret
repnz
sbb
lret
mov
sbbl
adc
pusha
push
test
push
sbb
pop
and
andb
inc
ds
sub
dec
cmp
push
push
push
dec
pop
ss
mov
sbb
daa
pop
sbb
shlb
outsb
scas
into
pop
inc
add
mov
int3
xor
test
add
adc
push
arpl
fwait
jl
cwtl
add
repnz
nop
add
stc
mov
and
push
daa
push
arpl
cmp
fs
cmp
repz
lods
lods
xchg
xor
stc
sub
adc
jo
lock
sbb
inc
mov
inc
add
sbb
dec
pop
xchg
gs
dec
cmp
cmp
or
fisubrl
sti
lret
adc
xchg
dec
rcl
daa
sti
push
shlb
aas
pop
cli
mov
fmull
sub
in
fbstp
pop
imul
jp
add
lods
push
mov
sub
add
cmp
and
lea
pushf
or
add
inc
mov
adc
push
adc
jne
test
adc
pop
out
and
cmp
push
jnp
in
out
ret
repnz
inc
pop
cmp
je
push
aaa
or
je
lds
insb
loope
cmc
sub
and
pop
popa
rol
js
push
and
ror
xor
dec
adc
loope
mov
fldt
pop
leave
jle
jae
sbb
or
stos
lods
outsb
sbb
mov
or
add
mov
test
mov
ljmp
cmp
xor
push
mov
adc
mov
enter
iret
js
movsb
push
ret
jg
jno
je
cmp
je
test
dec
cmp
jg
add
inc
aas
jl
lcall
and
adc
inc
jne
add
aam
jns
mov
out
pusha
fs
ret
pop
and
mov
push
mov
jmp
and
cmpsb
inc
inc
mov
mov
pop
mov
shll
faddl
out
test
rorl
push
cmp
dec
mov
arpl
rolb
ja
mov
adc
test
out
sahf
insl
sbb
pop
mov
or
and
inc
inc
add
sbb
mov
lret
int
inc
jge
cmpb
cmpb
and
sbb
push
pop
mov
sub
or
or
test
mov
outsb
xor
inc
sbb
mov
push
or
cmp
leave
out
movl
sbb
cwtl
and
movl
mov
xchg
popa
repnz
loope
or
push
js
sbb
test
ret
xor
in
xchg
or
imul
xorb
bound
xor
sbb
add
test
add
test
mov
pop
pop
and
sub
add
imul
or
nop
div
mov
aam
faddl
xlat
mov
or
adc
sbb
cmp
pop
ss
in
pop
sub
pop
adc
xor
sarb
push
test
dec
push
adc
inc
add
imul
ss
xor
daa
addr16
sub
inc
sub
inc
pop
inc
push
jmp
in
cmp
test
mov
je
inc
ret
movsl
fistpll
adcl
and
add
outsl
sbb
inc
and
adc
cwtl
adc
mov
ja
out
add
les
jp
sbb
dec
dec
sbb
test
daa
adc
inc
mov
pop
ret
xor
jl
cmp
sub
push
xor
jge
sbb
add
push
icebp
movl
add
add
dec
js
sbb
inc
popa
add
sbb
ljmp
pop
xor
fdivs
sbb
lcall
add
lahf
call
subb
arpl
or
xchg
rcrl
loope
test
loopne
sbb
or
xchg
and
or
mov
fisttpl
pushf
test
in
mov
test
or
inc
push
sub
pusha
sub
clc
jl
shlb
sub
fstps
fsts
or
cwtl
nop
jecxz
aam
push
cmp
test
pop
out
frstor
cld
or
push
add
mov
or
xor
stc
nop
ret
rclb
add
int3
and
add
and
jmp
icebp
or
xor
lcall
lock
cmpb
adc
mov
jg
in
or
loop
sub
divl
push
stos
adc
cmpsl
jno
cmp
mov
das
xchg
fs
repnz
stos
sbb
pushf
add
mov
mov
movsb
rcll
mov
shl
dec
jmp
push
adc
nopl
hlt
push
xchg
cmp
mov
outsb
mov
icebp
popa
xor
or
or
sbb
mov
into
cmp
push
push
cmp
adc
dec
xchg
iret
cmp
sub
inc
psrad
mov
mov
movq
decl
lock
mov
xchg
xor
cmp
imul
jge
out
xchg
stos
pop
ret
dec
cli
orb
int3
popa
movsl
adcl
inc
and
mov
adc
cmp
insl
test
xor
xchg
cmpb
sub
inc
push
cmp
dec
icebp
inc
dec
push
inc
test
filds
xor
pop
add
pop
and
cmpl
cs
cmpsl
fiadds
dec
push
ja
push
test
adcb
or
mov
adcb
dec
xor
sub
add
push
pop
aaa
push
mov
test
aaa
inc
and
and
clc
jge
adc
mov
push
adc
inc
xchg
cmp
es
or
lods
push
in
sub
inc
cmp
enter
test
inc
pop
loop
dec
aad
imul
dec
pop
enter
adcl
add
add
in
mov
push
inc
test
outsb
add
pop
pop
mov
and
lcall
dec
and
xchg
iret
add
fwait
mov
adc
loop
and
pop
sbb
in
adc
pop
push
stos
push
push
in
or
xlat
add
movsb
add
in
adc
jo
bnd
sbb
repz
push
iret
adc
enter
lock
mov
in
jl
sub
cmpsl
das
fbstp
das
add
test
divl
mov
sbb
pop
sub
fstpl
and
sbb
inc
inc
psubd
inc
and
icebp
adc
and
adc
push
imul
pop
mov
jae
push
test
lahf
add
cmpsl
insb
adc
jne
mov
dec
jb
or
adc
aas
mov
inc
inc
or
mov
adc
pop
inc
inc
ret
cmp
or
jmp
mov
pop
cwtl
jo
inc
pop
add
insl
pop
add
and
and
adc
add
jne
adc
int3
mov
mov
push
lods
cmpsl
sbb
or
jno
xor
adc
jns
push
mov
dec
cmp
jl
pop
sub
repnz
push
pop
scas
mov
push
xchg
mov
ja
adc
movsl
mov
decl
call
popa
lods
push
dec
push
jg
enter
dec
and
inc
xor
daa
ds
cmp
inc
xor
jmp
pop
cwtl
adc
push
mov
cs
push
and
dec
outsl
add
or
and
mov
dec
dec
adc
mov
or
mov
adc
mov
sahf
cmp
push
aad
pusha
mov
lcall
add
mov
scas
movl
testb
lcall
insl
sbb
cmp
leave
push
and
test
sbb
sbb
hlt
mov
pop
hlt
mov
adc
pusha
in
sbb
jns
jns
pop
inc
pop
sbb
xor
fdivp
repnz
enter
inc
call
jecxz
pop
jb
add
lahf
shrb
jbe
or
add
int3
and
push
adc
andb
pop
enter
rcrb
inc
cmpsb
adcl
les
daa
jmp
je
mov
add
push
sbb
sbb
sahf
or
lock
add
sub
push
dec
xor
mov
inc
movsb
lods
pop
aas
jge
lock
and
and
inc
mov
in
cmp
enter
push
movl
mov
dec
xor
mov
lock
lcall
fcoms
xor
add
inc
cld
push
mov
push
adc
or
movsl
add
pop
inc
imul
scas
adc
dec
mov
clc
add
hlt
mov
push
rcrb
add
lock
arpl
adc
fistl
add
loopne
push
aas
sub
cmp
jns
mov
adc
xchg
xchg
sbb
jb
xlat
in
nop
lahf
push
cmovle
push
sbb
loop
sub
dec
in
push
cmp
mov
cld
fdivs
arpl
mov
cmpb
cmp
in
sbb
push
movsl
sub
sbb
adc
ljmp
pop
lock
gs
mov
dec
xlat
add
and
mov
dec
cmp
es
push
or
xchg
shlb
gs
add
jns
xor
in
add
jecxz
sub
push
sbb
cmp
pop
adcb
sub
pushf
int
inc
sub
dec
add
cld
subl
and
jecxz
push
and
add
pop
mov
mov
xchg
call
or
jne
mov
dec
lods
push
dec
outsl
in
or
or
rol
mov
xor
pushf
lret
mov
cmp
cmpl
xor
imul
fmuls
add
jae
sub
and
xor
push
mov
and
adc
mov
push
or
push
mov
pop
mov
rcrl
pop
push
add
and
push
in
pop
inc
movsb
movsb
daa
repnz
ret
push
adc
push
or
jle
decl
cmpb
fs
fwait
movb
nop
imul
jns
push
xchg
add
dec
fiadds
cltd
pop
cwtl
mov
nop
sbb
pop
cwtl
ret
clc
add
mov
jl
dec
outsb
jne
and
js
and
xor
xor
inc
mov
jne
sahf
pop
or
jb
nop
aam
adc
jle
movsb
xor
xchg
adc
inc
enter
or
jg
dec
dec
add
push
bound
insb
jns
adc
mov
adc
mov
xchg
cmp
sub
cmc
in
jb
and
adc
test
adc
jbe
push
jnp
or
sbb
fs
arpl
xchg
adc
lds
adc
shr
and
andl
and
les
cmp
stos
inc
dec
aam
push
pop
fwait
push
mov
push
fidivrs
adc
inc
inc
insb
sub
or
movsb
dec
inc
jne
shlb
inc
fisubrl
push
iret
in
cmp
mov
xchg
dec
fildll
cld
inc
jl
mov
ss
jns
cmp
ds
pop
dec
lods
pop
lods
loopne
jl
add
cmpsb
imul
and
fisubl
and
pusha
aaa
jl
mov
push
shl
scas
pmullw
push
movl
out
data16
and
out
lods
push
add
add
xchg
jo
cmp
pop
mov
cmp
dec
push
aas
pop
jl
pop
das
xchg
lret
in
inc
sub
cwtl
pop
push
pop
mov
xor
push
push
xor
pop
dec
jl
mov
pop
scas
xor
pop
mov
sub
push
imul
sub
cmpsb
pop
sbb
in
sbb
push
xor
mov
pop
sbb
dec
push
jb
add
nop
gs
xchg
inc
or
imul
dec
pop
cmp
pusha
imul
imul
ss
gs
dec
cmp
push
add
in
adc
fs
or
repnz
stc
sub
fildl
jb
cmp
push
and
inc
bound
add
ss
inc
adc
inc
xor
nop
arpl
or
inc
cmp
xor
or
lock
mov
test
bound
add
or
mov
clc
pop
or
arpl
cmp
push
cmp
ret
decb
xchg
jl
or
adc
pusha
adc
cmp
push
xchg
lea
arpl
jb
push
je
addps
xor
stos
inc
pop
xor
movsl
or
add
jle
adc
cwtl
mov
mov
adc
aam
pop
sbb
test
hlt
js
sahf
sbb
push
adc
cmp
jns
pushf
test
stos
rclb
or
dec
cwtl
cwtl
jo
cmp
push
add
and
andb
pop
add
out
jbe
daa
in
adc
pop
idivb
pop
pop
loopne
inc
or
cmc
inc
or
je
mov
lock
insb
dec
and
es
aaa
cmp
push
mov
mov
push
sub
aad
cmp
inc
pop
adc
xor
add
xor
or
adc
pushf
filds
cld
fs
pushf
sub
mov
pusha
pop
daa
inc
adc
adc
jns
and
sbb
andl
mov
cmpsb
and
or
repz
dec
or
cmp
js
aam
inc
addb
dec
in
add
hlt
add
add
into
push
pop
adc
xor
push
add
lods
and
dec
sahf
inc
jno
dec
jb
mov
push
mov
dec
push
mov
push
jnp
into
sub
or
outsl
pop
sub
inc
inc
jmp
js
or
cmpsb
and
mov
shlb
xor
xor
out
andps
mov
js
insl
addb
repnz
sub
xor
popa
cmovae
add
notl
arpl
jbe
dec
or
or
mov
mov
or
xchg
sbb
call
xor
inc
sbb
jae
add
add
dec
mov
arpl
xchg
sbb
popa
sbb
jo
jbe
in
dec
sbb
and
jl
les
nop
sbb
iret
push
push
inc
push
fldl
sub
or
aam
les
das
inc
scas
push
subb
jnp
adc
pop
int3
or
push
nop
push
pop
and
rcll
adc
xchg
sub
pusha
mov
and
popa
ljmp
push
and
add
mov
in
add
fisttps
insl
or
sub
mov
dec
lcall
inc
jecxz
or
xchg
add
push
xchg
push
xchg
sbb
or
in
adc
pop
jo
jo
in
movb
xor
fwait
push
add
jge
jmp
js
dec
add
xlat
pushf
pushf
cwtl
or
xchg
orb
inc
mov
lcall
xchg
and
xor
xor
ss
cmp
xor
inc
inc
cli
jmp
inc
dec
dec
dec
dec
dec
dec
dec
dec
bound
dec
jno
push
push
push
push
pop
pop
pop
cmpsl
or
es
cmc
push
rcl
inc
ret
fisubrl
dec
mov
dec
push
pop
cmp
sub
push
repz
inc
or
push
adc
push
push
jp
inc
cltd
xor
jno
inc
sbb
and
std
inc
fcmovbe
pop
ja
sti
and
add
add
imul
jo
mov
js
addr16
sbb
jne
movsb
push
mov
sub
xchg
pop
push
push
dec
inc
xlat
pop
mov
and
cs
imull
push
cmp
sub
clc
sub
bound
hlt
push
push
cwtl
js
or
sub
stc
std
sub
mov
add
and
sub
jns
shrl
xchg
dec
aas
or
sarb
xor
pop
cli
push
sbb
pop
addl
xchg
fwait
push
xor
and
andl
xor
and
loope
add
gs
mov
es
jmp
inc
inc
into
xor
mov
dec
pusha
sub
mov
add
dec
mov
jmp
loopne
icebp
mov
enter
sub
lock
aas
lds
mov
sbb
cmp
rolb
sbb
inc
adc
jmp
lret
xor
adc
sbb
mov
popa
adc
dec
loopne
pop
fnstcw
in
mov
sbb
jne
or
lods
aam
mov
adc
mov
ja
lds
sahf
sub
dec
mov
in
lea
movsl
andb
jp
pop
into
sbb
out
mov
sbb
jmp
pusha
inc
xor
xchg
xchg
mov
sub
sub
mov
daa
add
dec
mov
pop
lcall
jmp
inc
arpl
jl
push
hlt
push
add
adc
popa
sub
pop
mov
xchg
jo
pop
mov
add
decb
dec
add
hlt
push
dec
sbb
fcomip
inc
adc
dec
in
mov
mov
cmp
ja
sbb
xor
outsl
add
aaa
popa
jne
mov
add
rorb
cmp
jg
mov
ret
test
jne
pop
hlt
mov
popa
mov
fcmovnbe
pusha
insl
and
add
stc
lock
xchg
adc
shr
ret
push
add
adc
inc
loopne
fwait
jle
insl
jge
mov
sub
scas
subl
jmp
cmp
push
or
jo
fdivs
cmp
xchg
jg
xor
mov
jmp
jmp
xor
inc
fidivrs
lcall
pop
push
repnz
jbe
ss
adc
cli
cmp
addb
or
adc
push
dec
aaa
idivl
cmp
inc
pop
fcoms
subb
mov
xchg
in
fcomip
mov
fs
lcall
cltd
jbe
add
outsl
pushf
sbb
jne
cli
push
inc
imul
sbb
das
pop
mov
cmp
push
jb
fmuls
hlt
cmpsb
popa
outsl
dec
call
arpl
data16
cmpb
dec
jae
psubusw
sbb
stos
sbb
push
aas
cmp
fists
cmp
stos
mov
inc
sub
imul
sub
cmpb
pop
js
add
inc
dec
xchg
out
add
cmp
lcall
mov
xchg
das
enter
inc
xchg
inc
xor
mov
mov
addr16
add
aas
fcom
push
enter
xchg
mov
out
pushf
dec
mov
add
iret
movb
jne
mov
add
ds
xchg
rolb
imul
cmp
ret
sbb
lahf
das
push
mov
and
imul
dec
insb
ds
add
mov
dec
jg
cmpl
adc
lcall
nop
ret
inc
pop
mov
js
push
inc
lret
fisubs
xor
add
xchg
test
dec
sahf
insb
into
rol
clc
pushf
pop
call
mov
sub
addl
and
xor
imul
mov
dec
pop
pusha
and
fs
js
sbb
adc
fcmovbe
xor
mov
sbbb
stos
lret
fimuls
push
or
daa
sarb
out
or
inc
sub
or
jnp
cwtl
cltd
aas
out
dec
aad
dec
ret
adc
inc
ds
adc
xor
adc
mov
fdivr
adc
pop
fbld
pushf
push
cmp
mov
bound
dec
dec
or
xor
xchg
jmp
xor
imull
dec
mov
jecxz
iret
ret
clc
fwait
cmp
dec
sbb
xor
cltd
cmp
inc
jns
jns
iret
pop
xlat
or
fbld
inc
loopne
jno
or
dec
scas
movsl
or
xbegin
add
out
add
jge
test
cli
push
dec
fdivrs
enter
and
rclb
xchg
jmp
in
outsl
in
push
or
push
in
pop
rorb
inc
insl
movl
cmp
xor
add
test
or
outsb
adcl
js
pop
mov
pop
or
add
aas
push
sub
add
add
xchg
adc
add
push
pop
nop
pop
or
shll
push
and
out
xchg
paddusw
cmp
and
popa
adc
loopne
or
add
and
mov
pop
push
lods
testb
add
add
and
icebp
jbe
mov
mov
sbb
mov
xorb
cmp
fs
push
push
adc
mov
je
divl
cmpb
testb
lcall
add
mov
lods
lock
imul
and
lcall
pushf
scas
stc
or
arpl
dec
push
inc
pop
shll
sub
pop
jg
inc
cmpsb
push
jecxz
cmpl
push
cmp
mov
rol
and
dec
and
es
inc
sub
cmpl
jno
nop
iret
flds
les
out
icebp
pusha
loope
cmpsb
inc
cmp
popf
aad
and
sub
mov
adc
mov
or
mov
and
and
stc
shll
push
xor
cmp
pop
jb
sub
cmp
iret
int3
jnp
jmp
adc
or
or
in
xchg
mov
int3
push
push
add
ds
addb
add
add
and
jb
in
or
and
adc
jmp
mov
push
hlt
sbb
jecxz
stos
jmp
add
std
add
ret
and
mov
and
adc
xor
pop
push
cmp
jne
push
js
pop
fidivl
sub
clc
fisubrs
insb
fucom
pushl
outsl
jmp
mov
inc
call
test
mov
lret
rcl
out
jmp
cmpb
sbb
cli
fstpt
js
add
mov
nop
fmulp
les
xchg
xchg
rcrb
orb
or
fidivrl
or
inc
popa
mov
push
xor
ret
add
adc
std
movsl
sbb
or
pop
mov
mov
cwtl
xchg
nop
or
jl
dec
out
inc
or
sub
push
or
pop
daa
icebp
outsl
sub
divl
lret
les
sbb
and
jecxz
jl
dec
mov
xor
xor
je
inc
sub
mov
fsubs
shlb
push
push
fisubl
mov
mov
push
xlat
or
adc
mulb
sbb
push
dec
lahf
fcompl
stos
inc
cmpl
inc
iret
imul
sub
sub
push
fistpl
das
loopne
xchg
fsts
sbb
hlt
fcoms
std
mov
dec
popa
das
std
xchg
dec
add
loope
xchg
cld
call
es
inc
aaa
pop
cmp
inc
cltd
pop
inc
les
adc
and
mov
jl
aas
lds
push
sbb
mov
ret
add
add
mov
xor
in
dec
pusha
sbb
adc
mov
and
outsb
retw
cmc
mov
test
gs
lock
mov
adc
in
jns
hlt
xor
dec
and
push
loopne
pusha
and
dec
sbb
lods
jno
rolb
mov
nop
pop
inc
sub
or
in
and
jns
sbbb
insb
and
mov
cmp
push
dec
push
pop
ficoml
adc
xchg
dec
lcall
or
inc
push
push
insb
inc
cwtl
pop
add
sbb
leave
dec
jge
pop
push
push
and
cmp
mov
dec
icebp
push
fdivs
add
cld
sub
mov
push
mov
xchg
inc
insb
cmp
mov
mov
jl
clc
or
loope
sub
push
xor
loope
imul
mov
xlat
mov
cld
mov
dec
or
sub
sub
fisttps
and
push
or
xor
clc
pop
lock
xor
fcmovnbe
inc
aad
mov
or
pop
movsb
inc
or
out
and
fbld
lea
movsb
mov
test
push
lock
movl
push
mov
sbb
stos
mov
xor
into
hlt
cmp
mov
pop
lods
mov
hlt
iret
hlt
sub
adc
add
in
rcll
imul
or
pop
jns
inc
insl
jb
aad
insl
sbb
inc
add
xor
stos
fwait
or
rorb
or
push
mov
mov
add
fildll
push
push
sub
sbb
cmpb
xchg
or
fsubrs
dec
and
cmp
mov
rorl
adc
or
outsb
ja
jbe
jge
aaa
fistps
and
add
loopne
ss
js
and
xor
lea
in
pop
or
or
fwait
loopne
ret
int
or
push
inc
xor
popf
inc
call
push
pushf
add
sbb
add
arpl
js
orl
rcll
in
fisttpl
adcb
mov
pushf
mov
adc
xchg
add
xchg
cmp
je
inc
test
in
add
out
repz
pop
repnz
or
addr16
adc
pop
cli
loope
pop
pop
pusha
adc
lock
jb
call
bound
ret
out
es
and
movsb
testb
jmp
cmp
popl
xchg
subps
push
sbbl
in
inc
mov
call
or
std
bound
push
insl
sbb
mov
stos
inc
clc
xor
daa
mov
lods
clc
sub
and
mov
sub
or
mov
dec
lock
add
aas
mov
inc
jb
lahf
dec
mov
nop
test
rolb
outsb
shlb
subb
xor
pop
rorb
inc
pop
sahf
adc
call
test
pop
js
loopne
add
movsb
leave
inc
xor
inc
test
xor
enter
or
enter
out
add
xchg
and
push
cltd
inc
pop
sbb
cmp
loopne,pn
shll
inc
sbb
addr16
arpl
cmpsl
push
and
cwtl
scas
ret
test
loopne
inc
stos
in
jnp
add
lods
mov
xchg
mov
add
xlat
and
repz
xchg
jle
mov
je
jae
xchg
cmp
add
inc
jns
inc
xchg
je
rclb
push
sbb
mov
outsb
sbb
mov
loopne
mov
insb
inc
leave
sub
push
je
dec
push
fdivl
pop
xchg
addr16
insl
pop
pusha
inc
push
sbbl
jmp
fistl
xchg
scas
add
dec
rol
rolb
shlb
jo
lret
push
fs
pop
movsl
push
and
jl
xor
rcll
insl
mov
dec
xchg
sub
dec
out
repnz
and
out
movl
pop
inc
sbb
test
xchg
sbb
push
pop
lcall
pusha
pop
faddl
fidivrl
loopne
mov
bound
push
jl
add
sub
or
push
mov
faddl
jo
insl
push
mov
daa
mov
push
imul
pop
mov
cmp
adc
lock
or
inc
xchg
mov
jne
call
les
mov
pop
in
sbb
movsb
ljmp
dec
dec
es
adc
bndldx
adc
adc
push
cmpsb
add
mov
int
es
cmp
or
mov
and
mov
and
mov
movsl
addr16
push
std
ja
sbb
inc
cmpsl
out
int
cmpsl
int
in
mov
xor
daa
pop
push
adc
fiadds
add
add
data16
add
ljmp
subl
push
pop
cmp
add
out
mov
mov
idiv
or
ds
arpl
lods
adc
test
and
ret
outsb
sbb
les
pop
dec
fldl
xor
xchg
jo
addb
push
or
add
outsl
cmp
push
or
ret
cltd
and
inc
mov
aad
movsl
lock
pop
cmc
inc
push
decl
mov
cmp
xchg
inc
lods
fs
mov
sub
cmp
inc
js
je
addl
ret
and
pop
adc
imul
inc
mov
out
jle
mov
stos
imul
cmpsl
cmp
es
inc
mov
invd
fwait
pop
add
mov
insb
mov
mov
add
mov
xchg
sub
ret
je
mov
movsl
dec
and
jne
mov
test
xlat
jne
push
enter
mov
sub
mov
pop
xor
popf
rcrb
daa
push
xchg
dec
pop
es
mov
outsl
mov
ds
inc
pop
inc
rolb
enter
jp
add
or
fs
adc
add
mov
jno
jnp
subb
sub
dec
pusha
mov
out
mov
dec
xor
lds
push
test
and
dec
bound
outsl
pop
in
mov
cmp
cmp
add
lret
fs
and
outsb
lret
fs
cmp
pop
fsubl
mov
mov
sbb
inc
outsl
push
stc
push
sub
dec
bound
mov
mov
push
ja
and
xchg
xor
addl
loop
aad
push
aas
jbe
jg
cltd
and
dec
js
dec
aas
cmpsl
sub
xor
loope
test
inc
insb
xor
add
mov
inc
jo
daa
pop
mov
mov
lea
push
lock
push
or
fists
dec
mov
imul
pop
push
fisubl
loop
cmpsl
aad
or
out
jmp
out
cmp
imul
or
loop
fsubs
and
push
xor
je
cmp
data16
xor
mov
sub
or
add
xor
inc
xchg
arpl
sub
dec
popf
push
arpl
fadds
push
and
insl
call
adc
inc
sub
xchg
xor
dec
insl
mov
sbb
clc
xchg
lods
xor
dec
adc
test
ret
xchg
push
jl
daa
mov
shl
mov
fs
mov
xchg
xorb
lods
cltd
or
sub
adc
xor
sub
add
jne
ret
adc
leave
rcll
nop
mov
jb
movsl
dec
inc
dec
or
push
xlat
arpl
inc
inc
fcmovne
and
out
cmp
rcrb
inc
lock
inc
fcoms
inc
lret
outsb
sub
test
add
lods
fdivs
test
or
out
cmpl
loop
jo
dec
add
int
test
aaa
enter
adc
or
cmp
loopne
dec
popf
cmp
ret
push
ss
jmp
lret
fidivrs
push
cmp
or
stc
sarb
dec
lret
pop
push
fs
jbe
icebp
leave
mov
mov
or
push
test
pushf
mov
es
mov
lods
cmp
push
sbb
jbe
ja
mov
fcompl
push
stc
xlat
push
pop
pop
inc
mov
inc
pop
das
in
jb
jbe
movsl
aas
insb
jge
pushf
lea
xchg
je
dec
sub
cmp
push
push
xor
ret
ds
repnz
add
sbb
add
dec
insb
inc
dec
ficoml
clc
inc
and
js
cmpsl
dec
mov
inc
sbb
mov
and
xchg
mov
sub
dec
xchg
xor
inc
sbb
adc
je
enter
or
daa
outsl
jb
adc
enter
insb
fwait
mov
mov
mov
mov
jl
and
scas
xor
sarl
xchg
add
in
jmp
sbb
icebp
repnz
cld
jmp
push
addr16
addr16
jl
fs
js
js
sub
cmpsl
xorl
pop
pop
roll
sub
mov
mov
subl
dec
mov
inc
lods
mov
dec
mov
mov
ss
mov
xchg
and
scas
aad
add
mov
adc
add
cmp
mov
xor
sarl
repnz
xor
in
clc
call
popa
xor
xor
xor
stc
pop
fs
daa
test
push
sbb
mov
repnz
mov
mov
ret
add
push
shl
das
mov
shlb
push
xchg
mov
push
rolb
jo
jno
faddl
inc
and
sbb
out
stc
scas
jno
push
mov
push
fldcw
or
cld
push
daa
jno
push
sbb
mov
dec
inc
add
or
dec
data16
inc
dec
xorb
push
sbb
sub
es
sub
add
aaa
pushf
and
int3
add
mov
sub
inc
fidivs
out
xchg
les
stc
sbb
cmpsl
popa
sbb
or
inc
and
insb
movsl
mov
sub
hlt
icebp
clc
xchg
xor
adc
clc
push
pop
hlt
sbb
enter
dec
xor
enter
cmp
leave
dec
and
jle
imul
test
mov
ror
stos
xchg
les
sbb
push
inc
xchg
les
dec
xor
jmp
sbb
push
je
push
sbb
lea
repz
pop
sti
shlb
out
jae
mov
pop
popa
aam
lret
test
sub
fwait
test
popa
jne
out
pusha
int3
imul
cltd
cmp
adc
out
lds
inc
push
fs
imul
adc
mov
test
decb
sarl
add
inc
jmp
cmpsb
dec
xor
sbb
ret
sbb
jns
dec
adc
setnp
daa
shrb
dec
add
xor
sbb
adcb
imul
mov
xor
adc
ds
cmp
dec
jmp
inc
gs
pop
mov
sub
scas
adc
movsl
jle
push
mov
xlat
dec
mov
pop
cmp
in
loopne
pop
pop
arpl
repz
mov
pop
iret
add
push
pop
leave
fsubrs
xchg
orb
xor
shll
add
and
addr16
imul
add
movsb
das
pop
js
push
sub
sbb
call
mov
lock
mov
loope
test
xor
push
inc
and
aam
sbb
jecxz
bound
test
push
mov
adc
stos
jecxz
jo
and
xchg
in
imul
add
popf
inc
add
into
mov
aam
jb
cmpsb
sub
es
pop
cmp
mov
dec
or
lcall
xchg
pusha
sti
xchg
inc
shlb
jl
add
pop
adc
add
push
fwait
addl
dec
mov
sti
jl
inc
movsb
mov
je
sbb
test
dec
nop
lods
cmp
inc
sarb
xchg
add
scas
mov
in
aam
pop
inc
sbbl
fldt
pop
cmpb
movb
orb
and
repz
loopne
in
fsubl
add
jl
jg
aaa
dec
xchg
dec
leave
test
adc
dec
inc
jne
mov
xlat
les
repnz
cmp
mov
pop
xchg
push
adc
cmpl
mov
pop
adc
les
jl
push
cmp
arpl
or
xchg
ret
roll
sub
push
cmp
sbb
fprem
and
pop
jo
inc
fprem
and
push
mov
in
pusha
mov
std
fnstcw
sub
daa
ret
test
sub
xlat
mov
enter
jae
les
sbb
sbb
inc
arpl
cmpsb
loop
mov
sahf
scas
inc
stc
es
xchg
ja
push
insb
push
mov
mov
xor
and
pop
push
lahf
fiadds
pushl
popf
and
cwtl
cmp
cmp
add
iret
into
sbb
fstl
inc
or
and
xchg
pop
nop
outsb
hlt
outsb
xor
lock
and
insb
and
xchg
sub
enter
fbld
hlt
subb
mov
pop
add
and
aaa
pop
add
ljmp
add
sub
push
xor
gs
sbb
add
cmp
out
jno
flds
pop
or
and
aad
pop
sub
in
jmp
js
int
fisubrs
int3
js
lahf
add
cs
mov
adc
pop
push
push
and
add
push
fdivs
mov
cmp
pop
fimuls
mov
mov
out
adc
pusha
loop
call
mov
mov
pop
insb
stos
into
aas
mov
pop
dec
sbb
das
incl
cmp
sbb
popa
mov
in
xor
adcl
adcb
pop
test
insb
mov
sub
addr16
xor
add
and
add
nop
aam
or
push
add
dec
xor
les
mov
scas
sbb
nop
push
dec
sub
or
and
adc
std
fnstcw
mov
add
rcrb
and
dec
sarb
xchg
push
push
leave
push
jbe
add
pusha
mov
or
or
push
cli
in
mov
lods
add
popa
push
mov
scas
lret
pop
jge
loop
push
dec
dec
add
lret
sahf
xor
and
adcb
xchg
ret
pop
int
jmp
and
nop
outsl
adc
and
pop
add
dec
sbb
push
add
push
pop
and
push
adcl
add
test
dec
adc
cmp
pop
loop
cmp
and
push
cli
movsw
cli
pop
xchg
in
mov
add
pop
jge
mov
sub
outsb
punpcklbw
mov
push
add
push
outsl
pop
in
pop
lea
call
push
mull
repz
aaa
pushf
mov
imul
mov
push
inc
cmp
repz
movsl
add
lods
xchg
test
add
ficompl
repz
push
sub
test
popa
pusha
loope
ficompl
mov
xor
lds
add
cmpb
or
je
mov
sub
jns
mov
bound
andb
push
sub
adc
lods
clc
test
xchg
sahf
dec
or
mov
ret
sbbl
je
xor
lock
and
lahf
sbb
nop
xchg
ret
ret
mov
pusha
cs
cmp
sbbl
aas
jne
dec
inc
sub
lea
hlt
adc
xor
jmp
xor
and
lea
rcl
mov
addr16
xchg
xor
xchg
inc
push
sti
pop
add
add
pop
into
xor
mov
and
inc
cmp
inc
rclb
psubq
mov
jg
mov
loopne
test
lcall
sub
push
sbb
insb
bound
sbb
cmp
sub
pop
add
divl
cmp
je
dec
push
sarb
lcall
xor
jg
or
ja
xor
andb
push
xor
or
enter
mov
lods
jae
rorl
lcall
dec
test
push
out
mov
fs
cmp
mov
or
add
daa
dec
loop
into
cltd
bound
aad
orb
cltd
or
mov
cwtl
fscale
or
xor
mov
sub
cmp
dec
test
je
pop
je
or
clc
or
enter
add
cmpsl
cmpsl
cmp
ds
js
inc
inc
out
iret
dec
inc
dec
loop
in
inc
dec
pop
js
pop
sub
cmp
push
push
mov
nop
push
mov
aam
and
and
nop
xor
je
push
iret
inc
mov
jo
adc
test
lock
xor
and
add
xor
or
test
test
dec
push
push
sbb
xor
lods
sbb
cmp
push
das
call
and
testb
push
fsubr
sub
adc
nop
ret
shlb
xchg
xor
xor
push
movsb
fstpt
mov
xor
hlt
cmpsl
mov
and
xchg
hlt
pop
pop
adc
movsl
dec
lret
xor
lock
shlb
subl
repnz
jbe
xorb
push
add
adc
aad
or
pushf
in
fisttps
add
into
ja
dec
push
xlat
dec
clc
and
push
push
xchg
pop
mov
xor
mov
sti
fs
mov
add
insl
jge
jmp
sbb
cltd
jbe
loop
test
adc
jo
sbb
sar
sarb
jl
adc
data16
mov
loop
addr16
or
sub
iret
gs
or
outsl
sub
or
mov
iret
or
negb
mov
xor
push
nop
push
in
xchg
push
dec
cwtl
aaa
in
std
cld
dec
xchg
mov
push
pop
lods
inc
pop
adc
lods
repnz
add
lcall
jecxz
clc
popf
lods
data16
push
test
mov
imul
rol
mov
add
sbb
inc
pop
add
sub
add
adc
jne
inc
fdivrl
outsl
movsb
xor
inc
inc
repz
inc
inc
add
or
inc
add
ret
movsl
or
push
mov
push
dec
fsubrl
push
add
push
sbb
push
rcrb
push
cmp
sbb
xchg
jo
or
ret
aas
cmp
imul
adc
aam
add
arpl
push
adcb
mov
loopne
test
in
and
sahf
testb
mov
or
sbb
pusha
cwtl
adc
adcb
inc
fmuls
add
add
sub
sbb
insl
cwtl
pop
adc
dec
dec
dec
push
imul
xor
or
ret
push
add
aam
cmp
and
push
lahf
sbb
sahf
xor
cmp
xchg
jns
cld
es
pop
xchg
mov
adc
or
add
outsb
add
adc
dec
repz
pop
xchg
nop
insb
in
aad
add
mov
nop
repnz
fcomps
jno
jecxz
xor
cmc
jl
inc
pop
negb
jmp
adc
cmp
shlb
pop
push
pop
loope
sub
repnz
add
ret
add
adc
popa
popl
test
pop
addb
xchg
jg
repnz
std
xor
sub
test
lcall
mov
pop
daa
sub
js
jecxz
pop
adc
xchg
lea
ja
pop
add
push
or
and
dec
xchg
ret
xchg
add
add
faddl
enter
cmp
loope
fmuls
pop
imul
pop
loop
testb
jbe
mov
test
xchg
adc
and
arpl
push
add
int3
or
and
mov
dec
sbb
add
mov
mov
out
hlt
sbbl
ret
dec
das
or
std
and
lea
sub
dec
push
add
addl
or
or
sub
sbb
jmp
and
inc
xor
jb
repz
nop
inc
or
imul
push
outsl
cs
mov
push
fldenv
js
cmpsl
mov
sub
mov
lea
subb
add
dec
pop
mov
sub
loopne
adcb
sub
pop
imul
jnp
adcl
xor
adc
mov
push
dec
add
push
in
testb
xchg
mov
xchg
repnz
orb
cmp
sbbl
xchg
and
mov
push
jl
xchg
mov
push
lea
cmpsb
dec
mov
inc
cwtl
lret
pushf
stos
mov
out
ficoms
add
xchg
fdivs
orb
fdivr
add
and
pop
sbb
fimull
and
dec
dec
adcl
inc
leave
repnz
lret
inc
fmuls
xchg
jg
adc
xchg
in
loope
xor
in
jg
jne
ret
lock
pop
rolb
stos
stos
push
dec
mov
and
sub
add
in
imul
dec
stos
cli
data16
push
push
lds
jecxz
mov
mov
cmpsb
and
jg
nop
mov
and
rclb
pop
xchg
rol
ret
inc
out
jne
xorb
inc
enter
push
js
fmuls
adc
add
lods
pop
jl
repz
mov
inc
ljmp
pop
movsb
rcll
imul
pop
aam
add
and
dec
in
add
add
faddl
lea
pop
fsubrl
sbb
je
movl
into
ret
inc
in
dec
xor
fiaddl
adc
or
adc
sbb
xchg
cmpb
rorb
xor
cmp
adc
pop
ret
add
test
mov
dec
xchg
xor
fxch
inc
inc
out
jno
xor
mov
jno
mov
popf
cmpl
nop
outsb
cmp
mov
inc
dec
sti
pusha
in
aaa
push
mov
push
push
sub
mov
in
push
imul
or
fdivs
add
dec
insb
stos
adc
dec
lods
dec
aaa
add
or
pushf
and
fistps
dec
push
pop
pop
ds
inc
sub
sub
pushf
add
add
shll
sub
xchg
sub
inc
scas
sub
pusha
jbe
jle
or
push
or
sbb
or
add
add
jne
inc
enter
out
xorb
adc
pop
xchg
jno
test
cmp
aad
lds
fldl
jb
pop
dec
xorl
adc
loope
lcall
es
inc
ss
xor
pop
adc
maxps
imul
sub
or
mov
shr
push
inc
jg
test
mov
in
nop
movsb
lock
daa
loopne
or
cmp
shrb
lahf
adc
out
xor
jmp
jmp
jne
popl
jl
inc
sbb
test
jns
ret
mov
cmpsl
arpl
test
jo
negb
pop
xor
ret
sbb
hlt
mov
push
repz
test
mov
and
adc
ficompl
xlat
rorb
mov
fnstenv
mov
sub
insl
lcall
pusha
mov
cmpsb
imul
pushf
hlt
imul
ds
xchg
push
adc
push
sbb
jbe
imul
test
push
out
mov
lcall
and
inc
lods
cmp
mov
insb
fdivrl
mov
pop
xlat
mov
add
adc
add
inc
mov
cmp
fsubrs
xor
xor
or
xchg
inc
outsb
gs
fsubrs
repz
inc
add
mov
cld
cwtl
or
add
arpl
pop
mov
jle
jg
add
insl
cltd
cs
xchg
lods
cmp
idivl
sbb
addr16
aaa
push
adc
push
push
mov
pop
sub
js
mov
or
jae
xchg
pop
mov
dec
cmpps
mov
stos
mov
jae
outsl
das
cmp
mov
xor
mov
add
and
js
imul
inc
dec
mov
hlt
sub
mov
es
adc
addr16
ret
adc
decb
push
push
adc
or
push
add
xor
mov
scas
push
rcrb
negl
push
lods
dec
and
mov
inc
sub
pop
stc
xor
ss
add
jo
xchg
and
or
inc
adc
mov
push
inc
and
test
push
dec
adc
adc
pop
pop
push
insl
outsl
addb
xor
roll
fidivl
adc
cmp
or
cmp
nop
or
push
fsubrl
xchg
sbb
enter
push
push
mov
imul
mov
push
inc
add
subb
and
jae
into
and
fisttps
imul
or
push
fmuls
in
mov
lods
push
rolb
sbb
loopne
inc
das
test
mov
in
out
cmp
inc
add
mov
shlb
mov
loopne
pop
adc
inc
jbe
clc
pop
add
lcall
rep
xchg
lods
and
push
sbb
mov
inc
adc
inc
jp
in
popa
cmp
nop
xchg
pop
xor
ljmp
rcrl
dec
mov
faddp
and
inc
dec
inc
jp
dec
repz
xchg
dec
or
or
or
dec
push
sbb
aas
lret
mov
inc
jno
inc
mov
and
mov
or
outsb
or
xor
andb
or
push
outsl
inc
fdivs
mov
jae
xchg
jbe
nop
prefetchw
decl
movsb
arpl
push
ljmp
inc
std
das
mov
dec
adc
mov
mov
inc
sub
pop
lcall
sub
insb
mov
dec
and
jb
xor
jb
mov
inc
pop
adc
mov
adc
jns
outsb
dec
fisttpl
test
jae
ret
das
jbe
sub
rorb
aaa
cmpsb
jnp
lret
outsb
jne
sbb
push
add
enter
repnz
aam
push
or
add
mov
lds
repz
xchg
rolb
outsl
popa
ret
rorb
adc
sbb
and
and
les
push
adc
shlb
je
pop
andb
sub
pop
mov
adc
imul
scas
mov
lds
test
or
out
pop
stc
mov
push
jb
insl
popa
jb
or
pop
adc
cmpsl
fmull
scas
push
outsb
adc
dec
jo
mov
outsl
addb
sbb
inc
or
pop
adc
fneni(8087
aas
inc
add
push
fmull
jo
inc
js
cmp
mov
imul
or
adc
icebp
add
dec
mov
mov
push
or
mov
push
test
filds
hlt
xchg
sar
push
popl
addr16
push
push
dec
or
push
aad
mov
jbe
btr
neg
outsl
add
pop
add
sub
sahf
add
popa
xor
or
pop
xchg
mov
xchg
add
aam
idivb
nop
pop
insb
xchg
pop
ljmp
testl
enter
call
push
movb
jl
ret
in
ret
inc
testl
int3
inc
add
inc
add
inc
leave
inc
cmp
inc
sub
and
or
mulb
enter
loopne
jecxz
loop
ds
mull
pop
jae
in
add
icebp
rcll
ret
divl
daa
nop
pushl
add
adc
clc
pop
sub
scas
cmp
fstps
rclb
sbb
add
cmp
add
add
aas
lret
jmp
add
jmp
and
add
add
add
add
adc
push
pop
clc
and
adc
loopne
add
mov
xchg
xchg
add
dec
or
testl
mov
lret
add
fs
sub
clc
lahf
incl
mov
mov
pushl
repnz
add
lods
ljmp
shl
stos
ss
loope
sub
in
cli
in
pop
je
out
mov
mov
sbb
push
loopne
lock
ss
pop
mov
les
int3
push
repnz
mov
fdivl
push
clc
shl
mov
notb
add
push
fwait
stc
ss
mov
dec
pushf
testl
fldcw
cmp
pop
clc
daa
aam
out
fwait
pushw
cld
dec
aam
push
ss
mov
push
cld
ljmp
sub
lcall
leave
and
js
or
cmp
cs
in
mov
fs
fstpt
cmp
or
scas
pop
adc
add
xor
pop
and
rcll
es
out
nop
fsub
repnz
pop
sti
add
xchg
pop
int3
xchg
pop
mov
add
xor
push
pop
lret
nop
dec
rclb
add
jo
inc
test
cmp
lods
js
dec
in
xlat
inc
add
jb
or
mov
bound
pusha
or
fiaddl
or
popa
inc
insb
imul
je
adc
nopl
ret
nop
and
rcll
adc
or
insb
mov
jo
sbb
les
xor
adc
dec
mov
bound
sbb
inc
aam
jne
aam
lcall
mov
add
bound
or
mov
cs
add
dec
push
push
les
push
lods
xor
xchg
and
push
inc
loopne
insl
js
inc
sbb
pop
outsb
add
mov
in
imul
das
inc
and
dec
jae
inc
fnstcw
ret
xor
push
xchg
in
push
mov
add
shll
dec
xchg
jmp
andl
cld
nop
aaa
sub
sbb
xor
push
mov
push
and
add
xor
cmpsb
xchg
and
fbld
es
add
or
sub
enter
pop
das
int3
cld
xlat
push
jecxz
dec
ret
or
sub
or
xlat
incl
push
nop
add
sub
enter
jp
mov
or
rcl
sub
test
sub
sub
in
lahf
nop
int
push
sub
dec
inc
flds
xchg
insl
jl
and
aad
insb
fs
xor
or
pusha
clc
loope
mov
ret
inc
or
test
sbbb
sbb
das
rcll
stc
fwait
sub
or
push
imul
jae
data16
mov
lret
xor
lea
jns
jb
dec
mov
xor
xor
or
xor
roll
and
fsub
add
dec
xor
addr16
loop
push
int
add
test
push
sbb
sub
nop
cmpsb
mov
in
cmp
shll
gs
int3
xlat
inc
mov
inc
test
inc
or
and
orl
inc
enter
sub
fsubl
jp
cmp
test
pop
xchg
sbb
imul
add
ss
into
mov
pop
xchg
jo
in
add
pop
imul
cmp
mov
adc
or
pop
dec
ds
aaa
and
cmp
mov
nop
aas
inc
nop
xor
inc
fsubrl
insb
lods
pop
inc
insb
loopne
ds
and
jg
xchg
fadd
add
dec
push
mov
inc
call
sar
ror
inc
es
add
mov
xor
and
inc
xor
int
mov
fadds
das
or
pop
dec
daa
stc
jns
mov
shlb
pop
push
ret
add
add
adc
or
loope
addl
imul
cwtl
fisttpl
xor
rorb
or
mov
test
jns
add
and
add
test
inc
nop
push
adc
inc
and
fadds
rorl
or
rcrl
loopne
pop
add
sbb
mov
dec
call
jo
mov
sbb
push
fmuls
and
cmp
stos
gs
dec
push
addr16
repz
mov
cmp
sub
js
icebp
clc
dec
cmpl
add
and
xorl
dec
adc
int
lods
popf
push
push
cmc
cs
and
inc
test
sbbb
clc
add
lds
mov
rclb
xor
in
orl
enter
push
inc
push
mov
push
enter
pop
js
mov
mov
aas
dec
or
add
fmull
inc
or
inc
loopne
xchg
repz
inc
and
sbb
stos
lds
mov
mov
or
lods
or
les
cs
push
sysret
and
ss
test
sub
rorb
or
popa
xor
lock
insl
or
xor
or
dec
scas
or
insl
fcoms
clc
iret
ljmp
xchg
adc
and
inc
outsl
shrl
into
cmp
push
and
dec
hlt
addl
sbb
fmulp
inc
xchg
and
push
lock
andb
enter
mov
add
in
lods
pop
push
pop
pop
ret
dec
aam
sbb
dec
push
andps
or
jbe
add
mov
and
stos
adc
in
cltd
pop
mov
pop
cmpsl
idiv
in
in
xchg
inc
mov
lods
jp
push
scas
jne
cmpsl
out
jmp
movsl
mov
mov
or
push
inc
pusha
push
das
and
mov
xor
cwtl
xor
sub
adc
hlt
pushf
mov
jmp
cmpsl
cmp
adc
mov
adc
pop
sub
je
ficomps
pushf
adc
dec
pop
mov
addr16
imul
push
hlt
mov
insl
enter
mov
lahf
mov
mov
inc
loop
and
cld
sbb
test
sub
inc
pop
js
jae
xorl
mov
xlat
call
or
fidivs
cmc
add
sbb
test
ja
ja
mov
sub
inc
ljmp
mov
imul
mov
xchg
jno
bound
dec
nop
std
leave
cmp
sbb
fsubrp
mov
push
adc
pop
insb
or
mov
in
movsl
lahf
je
mov
movl
rclb
pusha
sbb
push
mov
xchg
test
aaa
js
xor
sbb
xchg
fsts
movsl
pop
imul
daa
ret
rcrb
adc
mov
mov
cmpsb
repz
fdivp
xchg
jbe
mov
ror
inc
imull
sub
movsl
bound
fs
rclb
fld
movsl
je
mov
add
nop
and
popa
mov
loopne
and
inc
imul
daa
and
insb
cld
inc
push
xchg
movsb
std
std
test
lret
add
or
inc
lcall
sbb
je
movhlps
sbb
mov
bound
pop
mov
xchg
out
push
dec
mov
xor
ja
testb
sbb
adc
add
add
sbb
or
adc
push
sub
and
inc
repnz
test
xor
arpl
repz
rcll
mov
test
inc
push
cltd
cwtl
aam
pop
notl
push
jle
outsl
ret
pop
incl
fisttpll
jns
repnz
add
lods
sbb
adc
adc
inc
ret
clc
jae
dec
outsl
add
mov
movsb
lahf
das
mov
inc
sarl
jmp
inc
inc
inc
and
sbb
repnz
sub
dec
jl
dec
aas
sub
pop
inc
add
test
inc
pop
xchg
ljmp
inc
sub
cs
push
adc
mov
or
mov
xor
sbb
or
sbb
add
orb
cwtl
sbb
dec
pushf
sbb
mov
xchg
add
cmp
jmp
jno
push
jcxz
and
adcl
add
cmp
inc
sub
mov
sbb
mov
jecxz
mov
push
inc
add
insl
adc
pop
aas
jae
xor
push
hlt
jle
add
add
jae
inc
cmpsb
lret
add
push
jb
inc
dec
fimull
imul
xor
push
cmpsb
jle
jnp
dec
mov
or
inc
outsl
dec
sbb
cmp
dec
xchg
add
cmp
push
xorb
lea
lcall
or
dec
add
push
inc
mov
pushf
add
adc
mov
pop
cmovb
add
cmpsb
popf
inc
repz
sbb
leave
or
inc
add
lock
and
orb
outsb
data16
cmp
push
fcoml
ds
outsl
fmuls
xchg
pop
loopne
or
xchg
push
cmp
mov
mov
pusha
adc
sub
push
dec
sub
sbb
push
sub
inc
push
sti
hlt
neg
jmp
arpl
je
imul
cli
roll
adc
push
push
test
sub
push
repnz
xchg
aaa
ret
aad
mov
insl
sub
ficoml
pushf
inc
fldt
pop
inc
sub
aam
cmp
lock
dec
mov
popf
mov
or
or
outsl
insl
loopne
out
sbb
ds
push
push
lea
mov
js
lahf
mov
ret
sub
in
cld
inc
jp
xchg
scas
push
cs
dec
decb
mov
or
js
add
loope
cmpsb
adc
xchg
fcoms
xchg
mov
dec
mov
xor
inc
sub
sub
cmp
addr16
idivl
ret
push
cmc
icebp
jmp
inc
inc
or
dec
cmp
xchg
sbb
or
imul
mov
es
loope
dec
sub
mov
imul
test
sti
and
pop
mov
sub
mov
jbe
mov
sub
mov
and
add
adc
sub
mov
lcall
and
ret
jle
mov
in
mov
pop
mov
sbb
sub
je
inc
insb
push
mov
pop
ja
mov
pop
xor
push
or
fmuls
fwait
aam
cltd
push
xor
dec
or
mov
adc
in
pop
xor
xchg
mov
or
adc
inc
dec
xor
rcr
fs
push
mov
sbb
dec
inc
and
inc
arpl
movsl
adc
lahf
push
lds
fdivrs
push
and
add
fs
mov
push
adc
xlat
inc
add
in
movsb
cmp
inc
addr16
or
in
push
std
and
ljmp
je
mov
cwtl
mov
adc
pusha
inc
add
cmp
sub
or
cmp
fwait
sbb
pushf
mov
lea
sub
xchg
rcl
clc
daa
jl
js
dec
rclb
jp
movsb
add
stos
and
or
dec
pop
das
and
and
clc
cmp
adc
enter
insl
mov
jge
pop
mov
fs
dec
adc
xor
jnp
vxorps
stos
and
sbb
or
cmp
sbb
addb
xor
les
aas
aas
xor
js
das
mov
mov
pop
clc
xchg
or
and
nop
sub
cmpl
rcr
adc
xchg
lds
hlt
mov
pop
mov
popf
lea
lock
sbb
in
inc
dec
arpl
mov
pop
pop
pop
add
hlt
stc
and
sub
xor
mov
enter
nop
xor
shrb
xchg
push
sub
cltd
fcomp
pushf
pop
cwtl
and
and
xlat
mov
pop
mov
fisttpl
pop
test
adc
stos
icebp
in
sbbb
push
mov
pop
jne
mov
clc
sbb
sub
daa
ret
stos
inc
loop
sbb
dec
or
out
adc
dec
push
ljmp
fwait
js
xchg
ja
out
ds
notb
mov
shrb
adc
push
xor
aaa
xchg
ret
xchg
int
mov
pop
mov
insb
or
rcr
add
mov
shr
or
cwtl
popa
mov
xchg
adc
and
pushf
or
sub
mov
push
or
insb
add
inc
sub
add
test
addb
or
and
shrb
add
sub
xchg
adc
jp
cmp
jecxz
in
sub
jmp
dec
outsl
xor
daa
mov
pop
les
mov
sarb
sub
jb
sbbb
pop
mov
jmp
cwtl
out
aaa
rorb
dec
movsb
pop
fwait
mov
mov
pusha
pop
pop
mov
aaa
inc
adc
or
insl
or
sbb
negb
add
pop
fisttpll
in
push
push
cmp
mov
dec
and
out
mov
mov
scas
ds
pusha
subl
mov
adc
test
xchg
pop
je
mov
sbb
fiaddl
stos
outsl
loopne
mov
repnz
pop
add
cmp
pop
adc
pop
xor
push
stc
lea
fstpt
push
inc
sarl
movb
roll
xchg
mov
sub
mov
in
insb
push
and
pop
dec
outsl
or
and
and
adc
dec
icebp
fisubl
xchg
push
pop
out
call
repnz
pop
inc
cltd
mov
or
hlt
xor
push
add
sar
jp
ljmp
push
push
and
in
adcb
or
cmp
jecxz
mov
add
stos
sbb
adc
add
out
jae
adc
push
push
lea
push
adc
xchg
pop
mov
push
sti
aas
adc
fcmovbe
cmpl
outsl
or
lds
fiadds
popa
sbb
out
sbb
pop
mov
jo
push
jg
mov
fimuls
add
or
lret
in
inc
or
sbb
test
xchg
mov
xlat
cs
popa
jns
icebp
add
jge
sub
adc
ss
xchg
rcll
xchg
jle
or
mov
leave
stos
inc
fstpl
mov
cmp
xchg
call
in
dec
mov
push
fildl
add
enter
stos
dec
xchg
fs
inc
mov
mov
xorb
push
push
cmpsb
cmpb
jge
scas
add
dec
pop
mov
or
addr16
outsb
add
mov
jns
push
imul
inc
pop
test
push
sarl
fcmovne
mov
cmp
popa
arpl
adc
lods
enter
jp
mov
fidivrl
or
cld
push
jp
ret
inc
dec
enter
or
cmp
xor
aam
dec
push
adc
jns
push
lods
movsl
and
inc
hlt
out
adc
mov
sbb
fadds
decb
add
adc
push
movsl
inc
xchg
enter
mov
pop
or
or
sub
movsb
rclb
inc
jno
sarb
mov
push
adc
insb
lods
loop
addb
push
xlat
or
cmpsb
jo
add
or
mov
add
js
mov
fmuls
push
mov
dec
or
sbb
pop
movsb
fiadds
jmp
push
loope
or
out
icebp
enter
mov
gs
mov
adc
fimull
inc
sub
or
gs
mov
fsubrp
xor
adc
push
imul
inc
fimull
or
and
adc
roll
inc
cmpsl
xor
das
fildl
mov
les
push
jnp
and
loope
icebp
testb
mov
mov
and
mov
je
mov
and
push
add
pop
mov
lock
andl
sbb
mov
addb
das
cmpl
daa
and
mov
adc
inc
insl
adc
lret
cmp
add
and
int
mov
xor
insl
or
adc
pop
push
xor
gs
daa
mov
sub
mov
lods
sub
shlb
movsl
add
jle
movl
aas
stos
xor
sbb
mov
mov
mov
sbb
inc
mov
sub
andl
cmp
sub
lock
fsubrs
xchg
lea
rcl
and
pop
sub
scas
rcll
cs
add
inc
nop
adc
lods
dec
sub
mov
jns
mov
inc
gs
addb
rol
lcall
int3
mov
inc
push
dec
add
in
rorl
dec
test
ret
cltd
adc
stc
add
cmp
and
repnz
lods
mov
jo
add
iret
cmp
imul
in
mov
jb
cmp
lds
and
push
cwtl
andl
push
aaa
pop
sbb
sub
dec
pop
xchg
and
lock
and
aas
sub
ja
mov
cwtl
shlb
mov
sub
fs
ljmp
orb
addr16
or
test
cld
xchg
dec
jp
jle
jne
test
stc
add
inc
mov
xchg
sbb
xchg
dec
push
popa
enter
mov
mov
jns
pop
sbb
push
push
enter
popa
pushf
dec
faddl
push
xor
xor
inc
movb
mov
insb
outsb
inc
jp
jo
pop
add
xor
in
mov
negl
jo
dec
hlt
xchg
mov
inc
push
dec
or
push
std
pop
inc
subb
das
daa
push
pop
mov
rcrb
cli
test
int
ret
sbb
rorl
xchg
jae
cli
mov
repnz
insl
mov
bound
cmp
roll
sbb
add
and
push
push
adc
sub
insb
in
mov
lea
push
mov
inc
mov
adc
sti
mov
leave
in
sub
jno
pop
lret
cwtl
imul
sub
sub
sub
mov
xchg
and
inc
ja
mov
pop
push
fstpt
loopne
pop
lahf
mov
xor
or
les
and
nop
dec
sahf
cmp
add
sbb
test
lods
lock
and
xor
sahf
mov
filds
ret
inc
data16
xor
add
les
nop
wrmsr
push
popa
cmc
xor
xor
rorb
jo
arpl
pop
imul
dec
mov
mov
push
adc
mov
xchg
mov
push
xlat
xor
rcrb
push
lahf
pop
mov
test
or
xor
sbb
dec
cltd
loope
mov
and
push
fdivr
sbb
push
mov
movsb
movsl
ret
fdivrl
cmpb
xchg
or
sub
xchg
fstpt
push
pusha
sub
adc
dec
or
mov
pop
mov
icebp
xchg
cmpb
xchg
adc
orl
pause
ja
push
adc
inc
sbb
push
sub
addl
test
adcl
inc
xchg
add
nop
add
inc
ss
pop
push
mov
mov
mov
and
cmp
int3
enter
push
xlat
frstor
movsl
lods
sub
sbb
aaa
lock
ss
lock
aam
adc
inc
or
jno
pop
sti
repnz
add
push
mov
and
add
out
mov
add
adc
gs
mov
clc
push
mov
icebp
jb
push
mov
mov
test
and
cltd
pusha
and
xchg
add
dec
movsb
lahf
nop
or
mov
lds
jmp
sub
pop
test
lret
and
jae
adc
aaa
mov
add
push
sbb
cmp
fcom
je
inc
xlat
dec
dec
sbb
int3
jo
pop
mov
cmpsb
push
inc
or
rcrb
adc
outsb
popa
adc
xor
loopne
in
mov
mov
cld
in
or
xor
push
pop
testb
xor
or
testb
or
andb
std
pop
into
cmp
adc
mov
push
pop
xor
jno
repnz
daa
nop/reserved
push
adc
add
sahf
sbbb
mov
adc
movsl
insb
pop
xchg
shrl
mov
popa
sbb
loopne
dec
add
les
arpl
das
subl
mov
subl
lea
dec
cli
cli
inc
jg
movsl
in
ret
and
or
push
dec
or
int
cld
rorb
sbb
jg
fistpll
cmpb
cmp
jne
movsb
add
fbstp
test
jne
inc
add
push
cmpsb
sub
xor
in
cmp
lods
pop
popa
mov
cmpsb
pop
xchg
iret
inc
mov
movb
inc
enter
out
mov
mov
and
and
rolb
inc
mov
pop
popl
sbb
adc
push
adc
call
sbb
inc
pusha
enter
add
imul
sub
insb
lea
movsb
adc
cmp
dec
out
fsubrs
push
cmp
or
push
pop
add
push
stos
hlt
sbb
enter
add
hlt
out
xorb
hlt
in
in
mov
movsl
pop
iret
popf
dec
gs
clc
push
mov
push
test
add
ds
nop
add
adc
mov
arpl
test
push
or
lock
xor
shrb
mov
lock
pop
xor
mov
inc
lea
loope
push
shrb
or
sub
inc
lock
mov
add
sub
jl
and
inc
jb
xor
jb
cmp
or
loop
js
in
cmp
cmpsb
bound
add
jbe
sbb
insb
popf
je
inc
inc
or
insl
or
and
roll
add
popa
jp
jno
sub
jecxz
push
jne
addb
and
rcrb
movl
pop
orl
sub
add
movsb
lods
adc
pop
cmpsb
and
imul
mov
call
jecxz
adc
sub
push
or
and
addl
and
pusha
fisubrs
pusha
test
inc
xchg
xchg
addb
add
push
xor
push
dec
orb
sub
imul
xchg
xchg
insl
xor
shll
sub
jmp
adc
rcl
push
xor
pop
inc
xchg
out
cmpb
ret
and
test
idiv
mov
neg
xchg
movsb
neg
in
jns
rcrb
or
pop
sub
sbb
cmp
or
sti
in
adc
popa
inc
loopne
frstor
gs
sub
push
popa
call
xor
push
add
or
popa
or
dec
jl
pop
fsubrs
sbb
das
dec
pop
pushf
cwtl
cmp
repz
sar
fistpll
inc
add
les
cli
pop
pusha
push
cmp
mov
fimull
das
movsb
inc
popa
jecxz
movsl
outsl
cld
push
loopne
in
jne
outsb
or
sub
fsqrt
xchg
aam
js
addr16
ljmp
in
xchg
fnstcw
xchg
or
pop
and
add
jns
pushf
cmp
jmp
aam
adcb
nop
pop
cwtl
aam
pop
xor
mov
stc
pop
push
adc
fcompl
ret
loopne
mov
mov
loop
mov
inc
jno
add
icebp
fbstp
adc
jnp
aas
mov
cmpsb
xor
adc
or
cmp
je
popa
arpl
sub
xor
movsb
lahf
test
mov
fs
jmp
sbb
idivb
xor
movb
sub
cmpsl
cli
cmp
movsl
and
scas
rcrl
adc
pusha
loopne
pusha
jno
push
test
aas
aaa
cmp
cmp
repz
loope
add
lods
xchg
adc
jb
xchg
and
add
cli
jno
dec
jle
push
addr16
add
andl
or
pushf
sbb
cmpsb
mov
aas
test
mov
out
add
test
aas
data16
ret
and
sub
sub
mov
sub
sbb
mov
stos
fldt
clc
sbb
mov
or
inc
imul
push
mov
add
js
mov
add
xchg
por
or
and
sbb
scas
push
cmp
xchg
divps
add
lahf
cmpsb
dec
daa
addl
test
addr16
ljmp
adc
and
pop
mov
xchg
dec
das
jnp
mov
add
sbb
add
arpl
in
fcompl
xor
mov
je
incb
xchg
pop
cmpl
mov
lea
arpl
and
add
lods
imul
sbbl
cmp
fidivrs
mov
mov
and
stos
je
in
dec
scas
xor
ljmp
add
mov
mov
js
inc
and
js
inc
or
test
add
popa
daa
dec
ret
and
mov
faddl
fdivs
xchg
pop
fcompl
or
gs
in
pop
jl
arpl
xor
or
jle
mov
xchg
push
or
and
jl
adc
mov
push
cmpsb
push
movsl
outsb
dec
or
scas
mov
xor
and
inc
clc
dec
je
add
lds
je
adc
cmp
and
test
jmp
int
inc
push
dec
into
xchg
add
leave
mov
jmp
aaa
adc
cs
popf
pusha
push
adc
sbb
lret
fildl
orb
aad
sub
cmpsl
cmp
or
push
jecxz
jl
push
add
pop
loope
dec
fsubl
mov
iret
nop
add
xchg
sbb
imul
ss
and
insb
pop
lahf
lret
shlb
adc
adc
push
add
and
mov
cmp
notb
test
sarb
add
test
sbb
jo
push
mov
cmp
out
fs
jne
sbb
test
nop
stos
sti
popl
ret
xor
pop
mov
or
cmp
push
xlat
xchg
loop
xchg
jmp
sub
mov
pop
and
das
sbb
mov
dec
pop
test
hlt
xor
push
lret
shl
xor
bound
pusha
fidivrs
pop
push
add
filds
pushf
sub
movsl
inc
ja
mov
jne
outsl
mov
mov
push
cmp
cltd
insl
or
mov
dec
fistpll
inc
or
movsl
add
aad
imul
cmp
lcall
sbb
cltd
mov
or
cmp
push
jns
sbb
sub
and
fcomps
jl
imul
loope
insl
clc
xor
adc
mov
and
rclb
std
cld
dec
lods
ret
out
shlb
sub
mov
outsb
pop
dec
sbb
adc
ljmp
loopne
add
das
nop
fcmovbe
push
sub
push
push
xlat
dec
add
jnp
loopne
add
and
imul
subl
sub
cmp
inc
or
pop
sarl
sub
push
add
adc
mov
pop
pop
enter
cmp
push
aam
cmpsb
inc
inc
ret
int3
adc
stos
jg
fstpt
in
add
stc
lods
lea
lods
push
lods
jne
cmpl
push
adc
data16
cld
mov
mov
mov
or
dec
pop
iret
rclb
mov
sub
aam
mov
lahf
sub
lods
sbb
jge
pop
popa
enter
add
and
clc
add
enter
dec
roll
icebp
xor
xchg
lods
cli
push
pop
loope
adc
jmp
rcrb
mov
rclb
negb
cmp
adc
and
or
jmp
addr16
data16
xor
add
int3
xchg
inc
fildll
inc
add
and
and
fdivs
sub
add
mov
xchg
add
xchg
and
or
cmpsb
sub
pop
inc
or
or
sbb
loopne
push
pop
sub
add
cmp
sub
ret
and
adc
adc
dec
lret
inc
xor
aas
fs
loop
or
or
add
sbb
das
jl
jmp
or
sub
xchg
scas
shrb
lahf
movsl
int3
pushf
shlb
cmp
xor
hlt
add
das
jl
adc
mov
repz
pop
frstor
loop
clc
inc
incl
xchg
mov
shlb
or
pusha
push
lods
jmp
mov
das
and
cmpsl
push
and
pusha
cmp
pop
dec
mov
push
adc
add
sbbl
push
lcall
in
imul
out
mov
je
js
inc
add
dec
push
dec
xor
add
orl
inc
dec
push
xchg
adc
dec
incl
loop
push
xchg
in
imul
mov
sub
jge
jge
aaa
dec
imul
adcl
push
and
add
push
fmull
loopne
and
xchg
xor
lret
repnz
adc
adc
mov
lret
sbb
add
and
leave
and
push
sub
or
data16
or
sbb
lea
push
addr16
pop
incl
idiv
dec
sub
push
adc
out
push
clc
test
sbb
pushf
in
dec
dec
addl
test
dec
and
ret
sbb
inc
imul
xor
adc
ds
pop
add
xorl
rorl
mov
pushl
loop
adc
xchg
in
mov
ret
lds
filds
insl
sbb
and
jle
aad
jne
test
dec
mov
mov
mov
add
xorb
in
inc
mov
pop
popa
call
sbb
bound
popa
xor
cmp
cmp
insl
aas
movsb
dec
sahf
cs
cs
sti
pop
jmp
xor
incl
mov
jge
xchg
cmpl
rclb
into
push
mov
cmp
adc
into
xlat
xor
bound
fs
or
insb
sub
dec
or
cmp
dec
jmp
and
push
sub
aam
leave
aam
push
or
lea
push
mov
loopne
cltd
js
add
jo
push
pop
adc
mov
pop
test
cmp
push
mov
js
data16
sarb
add
nop
bound
mov
mov
mov
jmp
and
sbb
cmc
int3
subb
sbb
mov
mov
lock
in
dec
inc
fnstcw
test
push
xor
mov
pop
xchg
jne
fs
jb
push
fstps
dec
cltd
shlb
testl
pop
out
imul
xchg
stos
or
sahf
dec
sub
out
cmp
std
mov
and
push
mov
mov
xchg
mov
adc
outsl
ss
push
jmp
push
js
pop
movsb
adc
outsb
cmp
movsl
add
mov
inc
xchg
sub
add
loopne
mov
xchg
xchg
xchg
jge
aaa
enter
cmpl
fdivl
loope
out
sbb
add
sbb
push
sbb
push
shlb
mov
add
mov
or
sbb
adcl
daa
push
jo
mov
nop
andl
mov
jns
or
dec
inc
cmpl
iret
je
cmp
je
ja
mov
mov
je
xor
sbb
or
loop
gs
sahf
das
pop
xchg
mov
push
andl
cmp
lahf
adc
inc
xchg
xor
inc
xchg
add
decl
insl
test
out
push
mov
cmp
mov
xor
push
xchg
push
mov
loope
lods
loopne
sbb
in
dec
mov
dec
loope
add
fs
mov
push
push
out
shll
or
and
pop
xor
add
insb
inc
push
in
in
inc
cmp
cmp
and
lahf
mov
sti
sub
fld
cmpl
mov
mov
xchg
pop
mov
jg
xchg
mov
fildl
inc
push
cmovge
ss
rcrb
imul
icebp
test
movl
mov
mov
ret
jle
in
add
cmp
mov
and
test
sub
cmpsl
add
je
mov
pop
iret
fwait
sbb
mov
in
xor
xor
imulb
sti
cmp
mov
xor
pop
mov
sub
sbb
inc
adc
cmpsb
das
adc
push
mov
mov
or
jnp
dec
add
or
movl
and
pop
adc
inc
pop
rcll
pop
shlb
fbld
testb
adc
mov
mov
inc
rolb
mov
jne
push
test
or
push
sbb
push
sbb
and
and
xor
jmp
dec
add
pop
outsl
lock
add
push
dec
xor
pmaddwd
add
cmc
push
nop
cmpsl
xor
lea
into
inc
popa
mov
sbb
inc
imul
cmp
pop
stos
fwait
add
in
xor
push
shll
push
sbb
mov
cs
mov
lock
repz
cld
xchg
cmpsl
mov
and
inc
lods
maxps
xor
andb
sbb
sbb
add
inc
add
fadds
xor
mov
mov
dec
popa
fimuls
mov
pop
pop
cltd
pop
and
dec
mov
dec
add
lods
loopne
in
jae
mov
sub
add
jbe
pop
clc
ds
icebp
insb
loop
mov
jp
insb
jmp
push
call
pop
sub
or
push
inc
add
inc
loope
pusha
add
xlat
inc
mov
dec
or
dec
shrb
and
xchg
sbb
test
inc
pcmpeqd
rcrb
adc
cwtl
mov
data16
dec
arpl
adcb
out
popa
xchg
stos
xor
push
scas
dec
test
sbb
push
mov
loopne
mov
sbb
fistps
mov
lock
fcom
sub
loopne
inc
jo
xor
test
nop
std
jbe
sub
push
mov
sbb
dec
xor
sbbl
adc
push
or
nop
jp
fidivrl
jbe
jae
push
push
int
push
sbb
or
pop
push
cmp
insl
add
mov
inc
mov
out
cmpsb
fdivl
roll
adcl
aam
iret
mov
adc
mov
adc
sub
mov
cmpsl
jmp
add
inc
adc
out
mov
pop
push
dec
jmp
daa
loop
stos
pop
iret
movb
mov
xor
add
adc
jmp
es
sarb
fistl
ret
jno
add
push
rcrl
or
arpl
cwtl
jp
into
inc
aaa
loope
fistl
push
cmp
in
mov
or
pop
movsb
push
dec
daa
dec
add
les
jmp
push
arpl
xlat
fisubrs
inc
out
add
lret
int
mov
or
xor
sbb
in
xor
outsb
lods
lahf
pop
stos
ljmp
mov
stos
loopne
sub
or
sbb
outsl
movb
fidivrs
addr16
outsl
adc
rcl
sarb
push
add
or
adc
or
adc
adc
add
pop
fstpl
fisttpl
addr16
movsb
xor
push
sbb
leave
xor
cmp
mov
in
mov
hlt
mov
pop
popa
js
sub
addb
jl
adc
movsl
jge
mov
cltd
inc
or
sbb
jp
add
cmpsl
jne
pop
or
ja
jl
enter
sbb
clc
mov
insb
sub
push
pop
sub
mov
adc
and
pusha
add
lock
inc
sub
or
xchg
inc
xlat
xchg
lock
mov
push
jnp
out
dec
cld
dec
push
adc
inc
je
dec
movsl
inc
sbb
arpl
jns
ficomps
adc
add
or
mov
and
and
sbb
je
push
xchg
cld
stos
jne
adc
jne
add
sub
mov
add
or
add
icebp
mov
mov
jecxz
scas
fcoml
and
adc
cmpb
fldcw
or
addb
or
int3
out
xchg
imul
cmpb
cmp
add
gs
lock
in
and
dec
sbb
dec
jl
jmp
mov
and
push
mov
and
mov
add
inc
add
jmp
jl
sbbb
push
adc
push
pop
inc
jbe
xor
addr16
stos
lret
jl
sub
setge
mov
mov
rcrl
movsl
push
cli
daa
add
fcomps
or
je
sbb
dec
ret
imul
add
std
mov
cli
sar
mov
cld
pop
add
mov
shlb
popa
and
cld
and
jne
std
add
test
mov
adc
xlat
pushf
and
xchg
add
inc
inc
shlb
mov
xor
pop
push
int
add
add
mov
inc
inc
sub
cmp
mov
pop
dec
sar
cltd
rcll
jnp
xor
and
xor
test
addr16
imul
in
add
stos
sub
shlb
or
push
or
test
cmc
xor
loopne
xchg
sub
das
ja
xchg
inc
add
call
sub
rolb
pusha
shlb
pop
jne
sub
push
rcrl
push
loopne
hlt
inc
jo
cltd
add
push
push
jo
sbbb
sbbl
jb
dec
cmp
inc
popf
and
or
add
jge
adc
cmp
push
adc
or
ss
or
es
mov
jmp
into
test
inc
mov
xchg
lods
jno
pop
xchg
into
adc
lods
add
rolb
popa
adc
scas
fiaddl
out
in
jns
lea
mov
aaa
add
nop
scas
rep
mov
test
in
or
add
push
lds
sbb
jmp
push
cmp
dec
jmp
fdivs
sbb
icebp
inc
and
cs
mov
rcrl
and
add
lock
das
test
pop
repnz
shll
stos
imul
bound
sub
or
mov
sub
xchg
js
je
xchg
sub
lret
bound
and
sub
loope
xchg
lods
xchg
push
xor
inc
inc
fiadds
and
cld
test
inc
lds
jo
pop
shll
stos
dec
outsl
sub
es
push
xchg
shrb
mov
xor
out
test
test
pop
jbe
daa
test
and
jmp
or
dec
or
cmpsl
xchg
aam
mov
mov
enter
int
cmp
cld
jmp
ss
dec
adc
jne
cmpsb
pusha
and
dec
dec
lahf
icebp
and
aaa
pop
ja
mov
fiadds
cmp
subb
sbb
mov
and
dec
cs
adc
push
add
and
inc
cmp
and
push
jbe
jb
add
scas
adc
ret
pushw
rorb
sbb
mov
add
por
xchg
imul
xchg
inc
into
mov
jle
sbb
cmpsl
insl
mov
fisubrl
ja
xor
pushaw
add
mov
adc
rolb
mov
in
jmp
mov
add
enter
cmpsl
or
mov
or
and
je
or
sub
arpl
outsb
loopne
sub
loopne
mov
adc
js
or
loopne
jbe
or
mov
or
aaa
fidivrl
pop
or
jge
js
xor
inc
notl
xchg
ljmp
cmpsl
adcl
or
pop
popa
gs
add
imul
jns
clc
nop
sub
sbb
loopne
and
adc
in
jne
cmpsl
aam
add
aad
cmpb
lret
imul
inc
popw
xor
add
popf
sub
mov
or
adc
pop
adcb
xor
inc
pusha
test
gs
add
dec
lods
rcrl
sbb
imul
or
adc
pop
jl
and
or
inc
mov
inc
or
push
inc
pop
imul
js
adc
lock
push
add
inc
negl
repz
testb
ret
push
or
adc
loop
mov
insl
sbb
mov
push
add
test
pop
push
sub
cmpb
add
sbb
shlb
add
faddl
push
sbb
inc
push
aas
dec
lea
cwtl
pop
and
outsl
inc
mov
andl
inc
xlat
arpl
insb
inc
shl
fisttpl
inc
sub
outsl
shrb
cmp
mov
inc
and
jne
push
mov
dec
sbb
or
xchg
push
sbb
repz
or
pop
and
addl
dec
or
xor
adc
xor
fnstcw
inc
pusha
jmp
in
loop
lcall
adc
push
call
xor
mov
mov
push
rcll
lds
insb
dec
and
mov
lock
sub
push
in
div
xorb
pop
lock
cmp
push
push
subb
inc
pushf
loope
fdivl
push
rolb
sbb
mov
aam
or
pop
loope
mov
mov
push
movsb
loop
and
push
push
out
sub
add
jmp
xchg
inc
mov
sbb
inc
push
stos
daa
adc
sbb
sarl
xchg
push
xchg
inc
jmp
mov
int3
in
push
dec
inc
ret
or
mov
call
xchg
rorb
and
add
pop
dec
jecxz
sub
or
scas
mull
dec
addl
xlat
mov
notb
iret
mov
xchg
mov
pop
testl
push
push
rcll
push
sbb
xchg
mov
add
call
nop
imul
in
call
and
out
jecxz
or
rorb
cwtl
push
nop
fiadds
xchg
std
aam
or
loope
jns
inc
loope
nop
in
mov
dec
xor
mov
call
bound
aas
je
fwait
inc
push
adc
mov
xor
call
orl
in
add
push
ret
adc
jmp
xor
add
dec
int
clc
cmpsl
xor
test
sbb
sbb
add
arpl
lock
push
dec
mov
pop
rolb
notb
aaa
cmpsl
daa
mov
adc
xchg
mov
sbbb
fimull
or
fiadds
loopne
imul
ss
rcrb
jno
inc
and
sub
or
popa
ds
adcl
jbe
shrb
imul
push
ljmp
pop
movl
fisttpll
adc
inc
or
fsubr
sbb
nop
sarb
pop
mov
jno
lods
xorl
mov
in
ss
das
jge
dec
sahf
daa
je
outsb
pop
fnstcw
push
inc
pop
xorl
aas
jbe
daa
in
add
aaa
mov
orb
mov
add
adc
add
mov
lds
mov
or
inc
pushf
mov
call
sahf
or
in
or
test
scas
test
loop
icebp
mov
fs
sub
cld
leave
and
cmp
inc
add
adc
sbbb
cld
pop
mov
or
and
test
push
movsb
fmuls
pop
sbb
int3
mov
andl
or
xchg
movl
rolb
mov
das
movsl
jbe
dec
dec
cmp
xchg
testb
fdivs
and
xor
adc
outsb
inc
sti
and
push
inc
scas
adc
inc
js
aaa
mov
xor
les
js
add
and
cs
aad
push
loop
cs
pop
jl
icebp
mov
mov
mov
xor
add
dec
imul
test
negb
int
mov
mov
pushf
outsl
adcb
inc
add
loop
dec
and
js
adc
leave
test
dec
or
enter
jl
sub
push
fldt
mov
and
mov
dec
fcoml
inc
or
and
and
pop
ds
in
loope
fcmovnb
pop
dec
push
fs
push
dec
dec
dec
mov
add
leave
shlb
mov
push
push
in
sub
push
in
mov
ss
push
add
or
lcall
fs
lea
rcl
mov
pop
and
jns
mov
fimull
inc
outsl
subb
dec
add
fs
les
and
or
sub
add
inc
dec
fstpl
call
mov
pusha
mov
movsb
mov
jl
mov
stc
or
jle
daa
cmp
mov
jno
mov
fistpl
icebp
daa
inc
std
cmp
cmp
pushl
mov
pop
pop
push
and
iret
cmp
out
xchg
add
hlt
xchg
clc
or
jmp
sbb
loopne
xchg
push
daa
pop
or
fisubs
int
lret
js
js
push
popf
push
test
pop
jg
scas
lret
push
pop
sbb
test
or
mov
std
xchg
adc
mov
repz
inc
pop
add
pop
cmp
cmp
shlb
push
rol
xlat
push
addl
in
pop
lock
push
out
loop
and
test
sub
xchg
cmp
test
orb
lea
mov
adc
mov
cwtl
jmp
inc
mov
into
ds
adc
xor
xor
push
sub
gs
push
pop
scas
loopne
and
imul
inc
ds
std
adc
sbb
pop
sbb
cmp
cmp
push
popa
bound
stc
sub
call
subl
outsl
xchg
sbb
cmpsl
jge
arpl
adcl
imul
ret
out
adc
std
pop
mov
cwtl
and
xorb
mov
adc
xor
jns
jne
jae
lcall
insb
sbb
movsl
mov
push
dec
sbb
inc
pusha
lods
rorb
push
xlat
clc
xor
insb
cmp
int3
jne
cmpl
mov
mov
dec
add
pop
lahf
std
enter
push
push
xor
cmp
ljmp
outsl
or
lcall
jmp
cmc
and
pusha
addb
shll
jae
cmpsl
pop
adc
adc
mulb
nop
or
push
fcoml
sub
popf
pop
test
adc
rorb
pop
mov
adcb
test
lds
add
and
add
sbb
inc
dec
ret
xor
jle
xchg
arpl
dec
and
je
mov
pop
popa
xor
mov
pop
pop
jno
push
popa
xchg
cmp
inc
test
xor
mov
addr16
sub
daa
movl
daa
dec
lcall
xchg
js
mov
dec
mov
mov
mov
dec
inc
pop
inc
fimuls
pop
inc
nop
inc
pop
in
cld
or
orb
and
cmp
mov
mov
mov
in
fidivrl
mov
push
testb
enter
sbb
inc
es
sub
fbld
dec
testl
dec
loopne
jmp
scas
das
push
xor
das
pushf
shr
adc
xchg
mov
and
mov
sub
add
sub
jae
das
gs
mov
pop
fs
rolb
inc
add
push
es
data16
sbb
aas
pop
mov
clc
hlt
push
sbb
lea
pop
movsl
add
pop
aaa
mov
add
cs
add
xor
and
cmp
jmp
sbb
xor
push
adc
into
push
adc
rclb
and
sub
pop
sbb
lret
iret
add
sub
push
dec
cmp
xchg
mov
ja
mov
les
jecxz
sbb
fcompl
lcall
or
push
mov
sbb
inc
sub
inc
and
inc
or
xor
lock
sub
pop
add
sbb
push
add
imul
in
add
es
in
mov
rolb
cmp
lret
lods
sub
cmp
xchg
inc
mov
adc
pusha
add
add
movsb
mov
xor
test
clc
cmp
sarb
mov
sbb
rclb
dec
mov
ret
pop
hlt
je
test
xor
sbb
mov
dec
ret
sbb
ret
mov
xlat
cmp
inc
insl
shufps
subl
pop
shrl
mov
sub
outsb
nop
test
out
add
fisttps
rcrl
add
cltd
xor
push
shrl
test
sbb
xchg
xchg
lea
lea
ret
xor
xor
test
aaa
or
or
add
aaa
adc
inc
xchg
ds
add
add
movsb
leave
and
pop
pop
sbb
xlat
mov
xlat
int3
int
add
mov
and
fsubs
and
cmp
fiaddl
adc
in
jns
mov
outsb
loop
fs
rorb
mov
and
and
rcrb
filds
adcb
inc
or
cmp
add
or
ljmp
pusha
dec
mov
sub
push
pop
cmp
sbbl
sub
inc
movsl
push
xor
mov
adc
test
xchg
push
sbb
sahf
mov
cmp
inc
sbb
loope
fisubl
lea
xchg
mov
clc
push
sbb
inc
loop
push
mov
mov
pop
xor
sahf
cmpsb
lcall
cmpsb
sbb
ja
aas
shl
jo
bound
jne
push
mov
and
add
add
add
mov
sbb
cmp
xor
test
push
dec
inc
jo
cmp
leave
addl
push
adc
pop
int3
xorl
mov
add
rcrb
adc
ret
ret
fsubr
and
cmp
add
dec
or
sbb
je
jnp
pop
lea
shlb
xlat
pushf
xchg
cmpsb
adc
dec
js
adc
dec
xor
pop
and
insl
sbbl
fbld
add
xchg
dec
xchg
mov
dec
add
pop
in
repnz
fnstenv
pop
call
xor
outsb
push
xor
movb
and
pop
and
sahf
or
imul
ret
js
ret
pop
test
xorb
loopne
dec
sbb
popf
add
mov
and
pop
sub
dec
push
xchg
lods
sbbb
xchg
push
xor
lods
ds
add
xchg
pop
aam
mov
daa
or
xorb
call
sbb
cmp
fs
pushf
call
inc
sti
or
fsubl
clc
subl
cmp
inc
xchg
enter
lcall
or
cmp
f2xm1
ss
aas
dec
inc
dec
dec
dec
inc
dec
dec
xor
outsl
inc
nop
xchg
sbbb
inc
sub
and
or
ret
lea
inc
or
test
mov
sbb
sbb
es
ret
push
xchg
and
fisttpll
popf
out
pop
push
sbb
inc
outsb
das
pusha
add
es
inc
and
sbb
sbb
movsb
and
lahf
movb
mov
sbb
xor
push
cltd
mov
sub
push
xor
mov
pushf
jp
test
adc
enter
add
rcrl
aam
push
and
repnz
inc
es
bound
adc
xchg
int
sub
inc
mov
mov
cmovs
push
inc
int
pusha
fwait
push
push
aas
xor
mov
popf
sbb
aam
push
push
arpl
jmp
mov
enter
push
sbb
clc
or
iret
or
and
or
aaa
in
jmp
xor
data16
push
sbb
repnz
shlb
mov
and
pop
add
arpl
scas
pop
and
and
or
jge
js
rolb
shl
pop
cltd
inc
adc
sbb
push
fs
cwtl
push
sbb
jne
mov
or
jne
xchg
and
mov
pop
push
rol
add
inc
pop
sahf
sub
cmp
cmp
xchg
je
das
cmp
jecxz
inc
inc
or
sbb
shll
sti
adc
or
mov
and
dec
mov
push
xorb
jbe
push
sbb
mov
xchg
add
xor
add
test
stos
sbb
and
add
pop
cmp
xor
pusha
dec
gs
push
pusha
sub
inc
mov
sub
add
jp
pop
inc
adc
andl
mov
add
push
negl
mov
inc
pushl
add
repnz
mov
ljmp
ss
popa
sbb
comiss
je
sbb
pop
and
lea
dec
enter
inc
test
fmuls
lret
and
test
xor
xchg
and
xor
jno
dec
dec
sbb
dec
mov
jo
pop
in
pop
sub
rorl
addr16
or
mov
dec
xchg
inc
adc
xor
daa
inc
stc
and
push
pusha
adc
push
xor
dec
sbb
or
push
movsb
daa
inc
add
and
lahf
inc
xor
adc
and
fldenv
mov
push
mov
dec
scas
and
mov
push
bound
cmp
sub
fsubr
cs
cmp
mov
mov
xor
insl
rcr
daa
mov
adc
jp
xchg
inc
add
dec
add
cmp
and
sbb
fidivrs
and
add
adc
in
stos
or
inc
fimuls
cmp
int
cs
fucom
push
sbb
sub
push
mov
sub
jle
sbb
xchg
lret
enter
adc
jle
cs
in
push
sub
test
pop
fwait
mov
dec
push
imul
sub
push
sbb
arpl
jb
pop
stc
dec
loope
sbb
fisubs
xchg
out
add
pop
outsl
fs
pop
push
add
dec
icebp
add
in
nop
add
xor
shl
xor
or
andb
subb
mov
lods
sbb
pop
push
ja
repnz
and
mov
test
int3
sbb
xor
mov
test
das
xor
or
in
jg
movl
adc
push
cld
js
adc
pop
jnp
ret
andb
push
or
jae
les
and
bound
outsl
sub
add
jb
and
mov
inc
jo
mov
inc
mov
lods
imul
mov
test
sub
inc
fcmovnbe
push
sub
add
int
push
mov
mov
push
popf
inc
xor
lods
rorb
add
pop
arpl
aaa
bound
gs
add
add
push
pusha
ficomps
fmull
adc
adc
ss
and
cmp
cmp
mov
xchg
mov
popf
push
jb
subb
inc
jecxz
push
xchg
loopne
rcll
push
cmp
mov
sbb
mov
notl
sbb
or
fnstsw
or
loope
mov
pop
cmp
sbb
mov
xchg
sbb
ficomps
and
ljmp
or
aad
adc
sbb
shlb
ljmp
int3
out
inc
loopne
inc
popa
adc
jae
xor
sub
arpl
fs
stos
and
or
in
or
pop
jo
aad
ret
cmp
movb
mov
and
jbe
sub
xor
or
add
and
cmpsl
sub
test
sub
and
push
pusha
push
fwait
das
cld
jno
int3
xchg
outsb
inc
mov
int
inc
fucomi
je
fildll
arpl
in
mov
les
add
pop
cmp
jmp
or
xchg
es
and
adc
pop
jmp
dec
and
jmp
push
jnp
movb
je
or
arpl
sub
pop
int
movsl
xor
inc
mov
jb
pop
imul
rorl
add
scas
fsubrs
lea
aam
xor
pop
jo
inc
inc
jle
mov
xchg
dec
adc
je
push
push
pop
and
jae
and
pop
fiaddl
dec
xchg
inc
pop
loope
aaa
pop
push
pop
inc
pop
cltd
push
mov
push
adc
add
push
pop
test
push
cmp
leave
test
pop
push
icebp
or
cwtl
add
pusha
nop
add
and
mov
or
iret
adc
inc
jecxz
cmpb
push
dec
jnp
test
into
or
push
cmc
mov
sub
fsubr
pop
xor
xor
adc
pop
sbb
faddl
pop
test
pop
and
cmpsb
mov
add
cmpl
pop
popf
xor
push
xor
je
icebp
add
xchg
cmp
cwtl
je
push
mov
shlb
rolb
mov
sbb
fists
inc
xchg
mov
push
movsb
push
pop
call
dec
inc
cmp
icebp
push
jne
dec
imul
sbb
pusha
insb
pop
cmc
cmpb
adc
mov
add
adc
movsl
pop
inc
sbb
filds
loopne
adc
or
mov
mov
std
icebp
ret
cmp
mov
sbb
test
filds
aaa
jmp
push
dec
and
popa
and
pop
lret
or
push
test
pop
jnp
adc
xor
cli
jnp
daa
insl
cmp
cmp
bound
push
cli
fildll
test
xor
outsl
mov
rcrb
rolb
add
ljmp
pushl
add
mov
mov
popf
or
out
out
adc
mov
add
pop
mov
lods
stos
push
push
cmp
xchg
inc
add
add
adc
mov
xor
or
insl
adc
mov
jge
jg
jbe
xchg
fcomps
or
add
movb
and
and
sbb
sbb
pop
mov
test
push
cmp
in
in
scas
mov
push
sbb
jmp
push
in
cmpsl
inc
pop
or
and
cmpsl
xor
subl
or
dec
mov
push
sub
pushf
out
rolb
dec
test
mov
pop
add
rclb
fiaddl
stos
cmp
jne
sub
cmp
sbb
dec
aas
movsl
add
rol
xchg
mov
mov
lds
adc
rcrb
push
pop
testb
pop
dec
ljmp
push
add
mov
dec
lcall
dec
cmpl
ret
repz
mov
sti
mov
or
push
pop
xchg
movsl
jnp
adc
mov
mov
cmp
and
adc
rclb
push
or
jge
push
js
push
pop
or
mov
jbe
jno
or
push
outsb
fists
add
fldcw
mov
loope
xchg
mov
dec
mov
pusha
mov
loop
nop
cmp
xor
shlb
ss
inc
daa
inc
ja
or
movsb
rolb
pop
cmp
and
lahf
push
adc
sub
and
rcl
mov
lea
mov
pop
xor
sbb
mov
in
rol
cmp
call
xchg
je
movl
or
dec
movsb
mov
rorl
xchg
sub
sar
and
sbb
add
jp
test
sbb
inc
mov
gs
popf
in
mov
fcoml
nop
lret
and
stc
cmp
sbb
lret
fsubrs
cmp
pop
mov
and
xchg
mov
jns
scas
mov
sbb
insb
popa
or
push
clc
dec
sahf
nop
inc
clc
cmp
add
sub
inc
or
jl
ficomps
xchg
and
aam
scas
pusha
enter
xor
loopne
mov
test
in
stc
es
sub
dec
ret
roll
ret
pop
mov
scas
insb
mov
and
push
push
decl
adc
je
mov
push
sbb
mov
stos
insb
push
or
roll
or
sarl
push
xchg
push
test
es
mov
insb
or
xchg
dec
mov
dec
jecxz
setns
cmp
outsb
cwtl
adc
push
fisttpll
insb
or
lods
adc
sbb
push
test
loopne
adc
cmp
jle
test
xchg
es
test
adc
hlt
or
dec
daa
inc
dec
aam
or
push
dec
popf
mov
push
orb
cmp
arpl
dec
and
in
shlb
or
ss
jo
lods
pop
xor
mov
movsb
cmp
cmpsl
les
cmp
daa
push
aaa
nop
inc
dec
pop
rorl
sbb
stos
je
add
dec
enter
cmp
adc
cmp
lods
add
mov
push
sahf
dec
aas
lods
shlb
out
or
sub
cmpl
or
out
inc
mov
inc
icebp
mov
pusha
inc
js
repnz
movsl
sbb
sub
sbb
xor
or
fsubl
mov
inc
loopne
das
fdivrs
push
das
clc
movsb
fistps
adc
fcoml
jl
xchg
pop
or
push
cmp
jne
push
inc
dec
jns
in
pop
inc
dec
adc
pop
lock
xor
xchg
cmp
popa
sbb
ds
sub
dec
mov
ror
xchg
subb
daa
dec
scas
add
nop
hlt
hlt
mov
sub
in
add
sti
pop
or
popa
and
lcall
mov
sub
or
loopne
hlt
xchg
add
pop
add
addr16
adc
xor
aam
push
das
pop
insb
pusha
gs
ret
pop
shrb
mov
sbb
sub
movsb
out
sbb
adc
cmpsl
inc
ret
push
xor
pop
xor
mov
aas
rorl
jmp
sbb
loope
add
scas
sahf
rorb
pop
cmc
cltd
sbb
mov
xchg
aas
adc
jbe
ret
pushf
cmp
add
lahf
inc
cmpsl
push
pop
push
imul
cmpsl
sti
inc
inc
xor
sbb
sbb
je
fisubrl
ja
xor
ret
pop
pop
loop
sbb
pop
outsb
insb
sbb
rorb
sub
inc
loopne
nop
aaa
pop
mov
push
push
andl
movb
std
faddl
pop
jmp
inc
mov
mov
sbb
addr16
nop
sbb
nop
dec
and
iret
adc
rol
shl
push
lock
add
mov
jbe
sbb
loopne
dec
testl
test
mov
sahf
mov
and
sub
adc
jbe
dec
out
loopne
push
push
mov
mov
loope
test
adc
insb
int3
or
stc
std
jbe
xor
pop
pusha
jne
jo
inc
mov
jle
push
lock
inc
pop
test
mov
cmp
mov
push
add
loopne
xchg
mov
or
pop
daa
cmpb
sbb
mov
mov
mov
add
pop
or
jmp
inc
dec
push
clc
inc
cs
adcb
icebp
sub
les
or
and
pusha
jmp
fildl
mov
pop
mov
add
fwait
sub
sub
adc
subl
cmp
lahf
sub
or
mov
inc
adc
mov
and
sbb
mov
inc
pop
rcl
popa
sbb
repz
ss
pop
inc
xlat
push
sub
add
dec
hlt
add
sbb
add
lret
cli
adc
inc
sbb
mov
adc
lock
repz
inc
pop
lock
outsb
push
sbb
jne
shlb
ss
add
jns
adc
mov
test
push
add
and
push
shl
mov
sar
fwait
aam
xor
in
mov
sub
int3
subl
add
rcrb
arpl
push
and
sbb
mov
jge
loopne
in
add
scas
cli
inc
mov
lock
pop
insl
jl
sub
lahf
mov
imul
sbb
ret
dec
add
dec
add
mov
xor
sub
push
push
or
mov
pop
or
lea
and
sbb
mov
push
aaa
sahf
clc
popf
jmp
inc
and
mov
sub
adc
xor
fmuls
stos
mov
or
lret
sub
and
and
lods
add
and
cld
mov
add
xchg
cmc
movsb
add
dec
dec
xor
cs
and
sarl
jmp
inc
mov
movsb
push
stc
test
dec
add
js
sbb
or
hlt
push
test
xchg
enter
dec
xchg
es
xlat
adc
flds
inc
out
mov
or
add
lret
jnp
cmpsb
int
mov
pop
mov
or
andb
xchg
addr16
lea
sub
and
inc
dec
adc
daa
andl
inc
lcall
push
cmp
inc
pop
cmpl
lcall
pop
lock
les
or
sbb
sahf
lea
and
sub
out
fldl
and
enter
mov
xchg
jo
xor
and
je
adc
mov
test
js
aam
cmpxchg
orb
fcoml
mov
daa
mov
test
cs
test
icebp
jecxz
jge
stos
fwait
cli
mov
adc
push
dec
xor
jecxz
and
enter
mov
xchg
sub
sbbb
fcoms
adc
das
fs
pop
repz
add
ret
xchg
data16
popa
push
push
xor
add
out
inc
test
pop
dec
jge
shrb
fcoms
add
sub
cwtl
xor
adc
lea
shlb
or
pop
add
push
add
nop
les
inc
pop
fistps
add
mov
jmp
adc
jle
push
aam
sbb
scas
push
imul
dec
movsb
shrl
aad
das
fiaddl
aaa
push
sbb
push
cmp
fldt
imull
xchg
adc
sbb
xor
xlat
rorb
jmp
sbb
dec
std
sysenter
loopne
dec
std
outsb
inc
cmp
je
test
and
scas
aaa
lds
push
inc
jmp
imul
or
push
sbb
cs
dec
dec
loopne
pop
adc
cmp
sub
cmp
nop
mov
leave
ret
add
add
aas
nop
enter
inc
dec
or
rorl
sbb
add
push
arpl
pop
dec
or
mov
add
xchg
or
inc
je
into
shrb
bound
xorb
mov
mov
rol
mov
inc
add
add
ret
mov
jbe
mov
or
cs
inc
es
mov
loope
add
es
mov
enter
pop
les
imull
in
xchg
xor
add
insb
fbstp
je
sub
cmpb
or
sbb
shlb
call
adc
popa
jb
push
int
shlb
sub
insb
ljmp
fs
les
les
inc
mov
or
jecxz
test
adc
mov
push
sub
adc
ss
push
push
into
push
lods
andb
ja
test
inc
sub
insl
scas
mov
leave
inc
sahf
dec
ja
dec
inc
aam
sbb
dec
inc
aam
repz
fs
inc
ficomps
nop
inc
push
sbb
clc
stc
inc
push
sbb
cld
push
sbb
jmp
sbb
loope
jecxz
nop
inc
push
in
out
inc
push
sbb
call
fs
in
out
out
rcrb
fs
inc
rcl
shll
push
aam
nop
inc
push
sbb
fcomp
inc
push
sbb
faddl
sbb
rcrb
nop
inc
rol
fs
inc
push
popa
push
sbb
enter
pmulhuw
je
ss
lock
and
dec
sbb
or
rcrl
push
push
xor
jne
mov
scas
mov
orb
mov
lods
mov
push
or
sub
sub
add
cmpsb
je
pop
in
fsts
push
push
push
adc
sub
movsl
or
inc
loop
popa
adc
add
mov
mov
and
or
cmp
adc
pushf
inc
ss
add
add
xor
xor
inc
pop
or
and
xor
or
and
xor
inc
movups
and
xor
adc
and
xor
inc
pop
sbb
and
xor
sbb
and
xor
inc
pop
and
and
xor
and
and
xor
inc
daa
sub
and
xor
sub
and
xor
inc
das
xor
and
xor
xor
and
xor
inc
aaa
cmp
and
xor
cmp
and
xor
inc
aas
inc
inc
and
xor
inc
xor
xor
inc
xor
inc
dec
dec
and
xor
dec
xor
xor
inc
xor
dec
push
push
and
xor
push
xor
xor
inc
xor
push
pop
pop
and
xor
pop
xor
xor
inc
xor
pop
pusha
popa
and
xor
arpl
and
xor
inc
xor
addr16
and
imul
inc
xor
xor
and
push
push
inc
inc
xor
push
inc
jne
sub
add
out
mov
xorb
outsl
mov
add
outsb
outsb
int3
imul
pop
jo
insl
gs
sarl
sub
outsl
xchg
push
dec
mov
pop
popa
fs
add
mov
pop
mov
outsb
push
jbe
outsl
gs
pcmpgtd
jae
jo
pop
mov
hlt
imul
outsl
out
jae
jne
jge
test
add
outsl
fisubl
sti
int
jns
pop
push
jecxz
dec
roll
dec
pop
aaa
pop
push
jo
ss
push
sbb
ret
sub
dec
mov
sbb
inc
leave
loope
dec
jae
leave
sbb
pop
push
outsb
add
daa
dec
or
lods
push
add
and
sbb
push
inc
jae
arpl
roll
push
push
scas
mov
xor
das
xchg
dec
pop
mov
ss
das
inc
iret
pusha
iret
push
push
cmp
jno
stos
idivl
insb
xchg
push
lahf
pop
pop
and
daa
jecxz
xor
fcmove
and
dec
xchg
pop
and
push
xchg
and
inc
jne
push
push
inc
daa
imul
sbb
jp
pop
ja
imul
fs
das
out
inc
push
fdivs
outsl
inc
daa
push
sbb
inc
jo
jg
std
nop
icebp
add
insb
popa
jo
sahf
jne
hlt
ss
das
push
jnp
push
dec
dec
mov
dec
mov
pop
dec
outsl
imul
sub
pop
pop
push
cmp
xor
push
cmpsl
inc
test
inc
or
in
fs
cmp
sbb
orb
sbb
sti
es
outsl
pop
imul
roll
ficoml
push
nop
cwtl
push
push
xchg
inc
outsl
iret
jnp
lock
popl
cmc
jae
push
and
test
insb
fsubrs
push
adc
mov
int
dec
dec
clc
in
push
mov
push
das
loopne
and
sbb
fdivrs
inc
cltd
pop
xor
dec
inc
mov
sub
das
test
arpl
jno
sub
ss
das
add
xor
inc
fs
hlt
aaa
jnp
sbbb
dec
icebp
mov
cltd
push
fs
push
push
mov
mov
inc
pop
iret
in
dec
gs
add
mov
insl
and
mov
sbb
jle
popl
inc
shl
sbb
inc
fldenv
js
insb
je
push
add
mov
js
add
clc
stos
inc
xor
pusha
push
loopne
pop
add
adc
lock
shlb
movsb
dec
inc
ja
aas
sbb
lea
push
mov
mov
xor
and
cmpsl
lods
dec
pop
inc
out
and
dec
xchg
cmpb
cmp
adc
push
mov
dec
pop
movsb
dec
or
rolb
addr16
das
xchg
mov
out
add
cwtl
cwtl
xchg
pop
inc
je
inc
pop
repnz
xchg
push
roll
mov
mov
fs
fmuls
pop
fstpt
mov
push
mov
sbb
inc
xchg
xchg
sbb
dec
pop
or
mov
lods
pop
xchg
pop
push
push
daa
daa
xchg
mov
clc
mov
das
mov
pushf
in
jne
add
out
mov
adc
xchg
ss
icebp
xchg
nop
imul
xchg
and
movsb
int
pusha
inc
inc
and
jbe
rorb
push
add
mov
dec
leave
popa
inc
push
popa
adc
jbe
push
fs
cmp
pop
pop
xor
in
sbbb
dec
sbb
or
loop
add
pop
test
or
add
inc
stos
out
push
in
lds
add
mov
mov
adc
xchg
popa
sbb
pop
sub
popa
inc
xchg
rcl
xlat
jo
add
pop
jp
fidivrl
add
leave
add
jbe
inc
cmp
movsb
push
mull
inc
jne
mov
insb
movsl
adc
pop
mov
xchg
or
mov
sbb
scas
out
sbb
xlat
imul
mov
movsl
or
adc
loope
mov
inc
jbe
int
fmull
cmp
sbb
and
rcrb
das
mov
call
fs
sub
es
addr16
movb
pop
pop
ja,pt
cwtl
fs
stos
mov
pop
test
dec
insb
jb
bound
fsubl
imul
imul
imul
mov
std
push
popw
xor
xor
rcll
je
nop
dec
shll
in
sub
in
scas
insb
lahf
test
and
mov
or
nop
xor
push
in
insb
mov
shlb
shlb
cmp
inc
movsb
scas
test
mov
and
mov
pop
mov
xchg
dec
mov
mov
mov
xor
loopne
and
mov
cmp
push
cwtl
imul
xor
insb
call
mov
mov
mov
xchg
sub
add
xchg
or
cmp
xchg
sbb
jnp
scas
test
fiaddl
pop
filds
mov
or
add
add
lds
dec
push
mov
daa
inc
movsb
imul
fsubrl
sbb
daa
sbbb
rcrb
addr16
sbb
and
and
fs
push
mov
xor
sub
jl
mov
adc
in
push
aas
or
mov
out
imul
out
push
inc
jae
call
mov
out
imul
adc
cmp
insb
push
sbb
jno
lcall
insl
or
jbe
push
imul
jl
outsb
jbe
sub
cwtl
dec
repz
js
fdivl
jbe
hlt
fs
je
lret
or
sub
or
aaa
in
insb
adc
cmpl
add
aad
shlb
or
inc
popa
daa
sbb
add
pushf
fldenv
lock
mov
mov
add
sbb
movsb
inc
and
mov
sahf
loopne
add
pop
bound
cltd
test
inc
push
out
enter
hlt
adc
inc
add
clc
or
dec
xor
add
hlt
inc
or
xchg
jl
sbb
mov
push
lret
xchg
fsubrs
sub
push
daa
outsb
jo
mov
xchg
sub
in
xchg
imul
cmpsl
cmc
outsl
inc
add
je
lea
dec
xchg
clc
cmpb
and
faddp
insb
adc
push
mov
sub
in
and
lcall
mov
popa
sub
and
cld
in
add
or
mov
nop
subb
js
imul
push
mov
add
mov
popa
test
inc
pop
add
or
addr16
xchg
gs
in
hlt
repnz
cwtl
cld
lock
push
mov
frstor
or
jae
xchg
sbb
xchg
aad
jmp
mov
mov
mov
rorb
out
lea
or
add
cmpsb
fmulp
pop
adc
stc
pop
add
cmp
hlt
mov
dec
insb
cld
or
pop
sub
cmp
or
pop
push
lahf
test
xor
xor
mov
insl
or
mov
mov
push
mov
adc
mov
gs
mov
inc
or
iret
pop
outsb
enter
xor
js
nop
pop
and
push
outsb
and
adc
nop
xor
movsb
push
xor
and
enter
sbb
xor
push
es
push
mov
stos
pop
fs
or
jle
mov
dec
sbb
imul
pop
mov
sub
dec
addr16
rcl
fs
rolb
mov
xchg
mul
or
fildll
push
push
adc
mov
inc
das
mov
xorb
lods
cmpsl
xchg
lods
adc
jmp
repnz
lock
in
ja
sbb
pop
push
sbb
xor
push
sbb
fcmovne
sub
cmp
push
adcl
push
in
xor
das
sbb
loop
inc
xchg
mov
inc
ss
sbb
adc
mov
and
enter
subl
mov
sbb
inc
add
and
in
inc
dec
cld
cmp
mov
nop
push
add
pusha
push
pushf
mov
sub
aaa
cmp
sbb
call
push
mul
insl
stos
leave
mov
lahf
mov
fistpll
push
test
adc
cmpsl
dec
push
add
xchg
sbb
lods
mov
shr
or
imul
cmc
js
ficomps
sbb
nop
inc
sbb
cmp
inc
cwtl
push
dec
out
and
rcrl
cmpl
jno
in
test
mov
jmp
cld
add
add
xor
adc
dec
nop
sbb
jae
mov
nop
inc
cld
mov
dec
ds
jno
dec
pop
fidivl
rcll
cmp
dec
mov
xor
hlt
mov
fldl
xor
aam
push
add
cmp
lock
and
pop
pop
mov
orb
and
and
jae
and
inc
in
dec
xacquire
loopne
fcoml
ds
sub
or
out
jo
insl
adc
cmp
dec
adc
das
jb
inc
or
imul
sbb
jo
lods
gs
ret
ficompl
stc
xor
inc
push
cmp
imul
repz
hlt
sbbl
sub
les
mov
je
inc
add
pop
aaa
rorb
push
out
xor
push
lcall
and
popf
pushl
add
cmpsb
push
daa
out
sub
xchg
cmp
movsb
js
enter
mov
inc
or
shlb
popf
dec
cwtl
addb
jne
add
out
movsb
sub
insl
pusha
push
repnz
gs
sub
enter
inc
add
lock
in
in
add
inc
sub
xlat
xchg
jne
in
or
add
add
sbb
test
jb
jbe
add
arpl
test
sbb
shrb
rorl
aaa
pop
in
loopne
call
lock
call
dec
aas
or
adc
loop
sub
jmp
repnz
add
fwait
inc
jl
xor
xchg
cld
and
fidivl
leave
sub
xor
jne
fisubrs
fdivrl
pop
rcl
sub
aad
and
nop
or
jecxz
push
xor
fnsave
push
xchg
and
add
adc
test
xor
dec
push
es
xchg
sub
pop
adc
loopne
sub
adc
inc
dec
jne
xchg
add
add
cmpl
in
cs
xchg
ss
pop
jmp
push
enter
push
shlb
test
add
adc
jmp
pop
je
mov
mov
add
mov
sbb
adc
mov
rorb
faddl
sbb
xchg
inc
popf
test
and
push
jne
add
dec
outsl
leave
dec
sahf
notb
das
push
gs
ds
jb
add
jns
imul
bound
jo
mov
mov
jns
pop
push
dec
jnp
mov
pop
jne
xlat
gs
dec
arpl
outsl
jbe
dec
addb
xchg
push
and
ds
loopne
xor
inc
push
jno
decb
push
gs
fs
scas
cmp
adc
outsl
bound
jp
inc
adcl
push
jp
mov
movb
and
outsl
jl
imul
scas
mov
and
ret
lret
add
dec
and
pop
mov
mov
mov
mov
rorb
inc
aam
xlat
add
inc
test
fs
popa
out
sbb
pop
sub
andl
xchg
rcrb
pop
dec
cmp
jmp
add
pusha
std
add
dec
mov
inc
sbb
pusha
lods
or
cmp
rorb
jge
or
lret
add
sub
mov
lods
sbb
dec
pop
xchg
and
jle
dec
or
inc
jb
test
and
incb
pop
leave
iret
sub
xlat
mov
ret
mov
movsb
insb
js
sub
add
daa
and
je
dec
adc
adc
pop
add
and
jmp
rolb
addr16
mov
aam
movsl
xor
ja
sub
enter
cmp
mov
jp
add
and
mov
cmpsl
repnz
jle
pop
cmp
out
jp
jg
xchg
mov
subl
test
subl
les
xchg
cmp
mov
aam
inc
pop
rcrb
jne
bound
jmp
lret
inc
jle
push
cmp
in
jp
cs
mov
push
mov
and
or
mov
jg
pop
mov
add
cmp
aas
and
inc
dec
push
inc
push
push
push
xchg
pusha
pop
jo
dec
sbb
dec
add
adc
mov
pop
incb
xor
pop
rdpmc
jns
sbb
sarb
addb
es
add
int3
nop
dec
push
cmp
adc
cmp
or
loopne
jae
vmread
das
jo
mov
lcall
push
and
push
in
xchg
rolb
aam
mov
cmp
aam
xor
dec
xor
loope
loopne
jecxz
cmp
enter
sub
push
in
fsubl
enter
loopne
loopne
enter
in
sbbb
in
enter
call
dec
push
or
sbb
xchg
in
inc
enter
lock
lock
sbbb
addb
enter
clc
mov
sbb
cld
lock
push
enter
test
dec
push
enter
test
fs
cmpsb
outsl
pop
add
insb
fs
add
add
cwtl
mov
add
inc
jno
inc
cmp
test
mov
jno
pop
xor
push
xchg
sbb
dec
bound
out
and
add
je,pn
push
xchg
xchg
add
sarb
mov
or
xchg
pop
lock
mov
xor
out
or
cmp
jns
adc
clc
rcrb
dec
bound
sub
enter
jmp
in
jnp
inc
mov
sbb
cmpb
pusha
adc
dec
xchg
test
out
mov
mov
insb
add
add
pop
icebp
xchg
jmp
and
or
push
sub
sub
jne
cmp
jne
push
jmp
xor
add
cmp
ret
sahf
jne
in
add
dec
lahf
xchg
xor
dec
cmpsl
adc
add
adc
dec
lock
inc
sub
jl
sarl
jmp
je
fwait
add
lods
out
jg
add
cmpsl
cwtl
cmovae
mov
mov
sbb
and
insl
cwtl
jb
pop
adc
movsb
ss
or
inc
mov
jl
mov
and
cli
adc
dec
xchg
test
test
pushf
mov
adc
mov
xor
xchg
add
std
movb
pop
xor
add
cmp
aam
pop
rolb
or
and
and
push
insb
dec
mov
js
cmp
pusha
add
fisubs
out
lcall
cmpb
shlb
hlt
or
lods
add
mov
pop
in
push
mov
lea
mov
lods
mov
repnz
mov
jns
test
loope
movsb
pop
and
mov
sub
hlt
dec
adc
fwait
push
xchg
nop
push
or
aas
in
adc
es
pusha
jg
jg
jo
in
mov
in
call
add
lret
adc
mov
ja
orb
test
sub
test
adc
xchg
and
mov
out
jne
jmp
hlt
cmp
fnstenv
xorb
es
sbb
push
iret
add
and
in
lods
mov
add
pop
mov
or
sbb
xchg
cwtl
in
xor
dec
pop
push
movsb
iret
cmp
xchg
lea
push
pushf
sbb
jmp
aaa
add
xchg
xor
adc
lahf
push
arpl
push
xchg
insb
push
inc
leave
popa
mov
mov
and
sbb
mov
push
sbb
mov
movsb
xchg
std
cmpsb
push
pop
mov
jge
adc
mov
popa
shll
fstpl
push
mov
xorl
jle
lods
dec
cmp
imul
push
xchg
scas
jae
inc
or
pop
jne
subl
jne
fildl
adc
jmp
ret
mov
cmpsl
popa
lea
andl
dec
or
cmpsl
and
sub
jns
enter
fisttpl
add
mov
add
push
stos
xor
lahf
inc
xor
pop
pop
mov
xlat
fistpl
cmp
pop
or
rdrand
cmpb
and
push
pushl
inc
dec
push
dec
xabort
into
or
mov
aas
aam
ds
hlt
js
movsl
or
xor
fisubrs
adc
pop
push
mov
cmp
add
or
test
loopne
mov
jns
rorb
pop
push
popa
push
or
jbe
fdivrs
nop
testb
movsb
out
or
fdivrl
and
dec
pop
sub
test
fcomps
pop
and
push
mov
pop
pusha
adc
inc
dec
or
or
clc
sub
sbb
clc
insl
xorl
clc
les
roll
add
into
push
inc
push
mov
jae
in
ret
mov
popf
nop
or
jb
shld
cmp
xchg
pop
push
and
push
mov
mov
inc
mov
shl
je
xor
es
sub
outsb
fsubl
xchg
add
testb
add
movsl
or
pushf
imul
xchg
inc
mov
ss
dec
jl
insb
pop
out
sbb
pop
pusha
pop
dec
mov
push
shl
aaa
in
xchg
out
mov
adc
incb
sbb
inc
push
add
xchg
out
nop
cmpsl
ret
sbb
sbb
nop
cli
syscall
mov
movb
inc
dec
jne
push
xor
pop
mov
add
jl
popf
push
in
push
clc
arpl
pop
mov
inc
dec
xlat
push
add
popl
aam
add
and
add
imul
cmp
jno
add
inc
dec
mov
in
sub
and
xchg
in
dec
add
cmp
orl
sti
jl
cli
ljmp
or
aam
mov
and
push
jb
cmc
inc
xchg
popf
imul
jmp
pop
inc
push
aaa
loopne
cmc
aam
mov
js
leave
dec
aas
sub
adc
sbb
iret
jns
and
xor
cmp
add
cmp
add
in
jl
test
jo
mov
xchg
inc
and
xchg
fadds
pop
cs
fcmovnb
or
test
jb
fwait
adc
pop
cmp
loop
inc
ficoms
pop
sbb
or
rcrl
sbbb
push
incl
jb
insb
cmp
insl
mov
jo
add
jg
mov
aad
lahf
push
enter
in
mov
jno
insb
and
sub
decl
xor
nop
cmp
sub
das
adc
pop
jno
xlat
mov
add
cmp
cmp
pop
popl
jg
in
lret
pop
xchg
add
cmp
sub
loope
xor
pop
adc
sbb
mov
repz
cmpsl
add
int
push
dec
push
leave
stos
ljmp
dec
sbb
mov
inc
or
jmp
cwtl
mov
add
fists
dec
ret
cs
fucomi
pop
jo
adcb
adc
jmp
mov
scas
cmp
movl
jecxz
mov
cmp
sub
das
decb
dec
sbb
dec
adc
mov
jmp
pop
jp
test
add
xchg
iret
xor
cld
add
rcrb
imul
loop
pop
sbb
push
das
adc
mov
js
mov
call
shll
dec
adc
pop
jmp
mov
add
adc
mov
push
inc
xchg
cmp
cmp
and
cmp
sub
adc
add
pop
mov
daa
cmpxchg
add
cmpl
pop
sub
xchg
cltd
sbb
cmp
sub
inc
jnp
bound
jg
addr16
imul
jo
jb
je
jbe
js
jp
je
xor
stc
sub
xlat
sbb
lds
mov
shlb
inc
mov
out
ud1
xchg
roll
rcrb
xchg
jae
mov
int3
xchg
in
mov
test
xor
fs
or
dec
or
add
pushf
inc
xlat
rorl
xor
sahf
mov
inc
pop
je
test
push
adc
shlb
addr16
adc
daa
or
dec
lea
adc
cmpl
lcall
adc
cwtl
inc
cmp
dec
mov
xchg
push
push
test
mov
push
mov
push
sub
xor
inc
in
rorb
inc
pop
add
mov
inc
dec
xor
rcrb
pop
push
insb
xchg
jns
mov
out
and
mov
or
mov
sub
outsb
mov
inc
cmp
xchg
test
push
clc
lea
add
jmp
pushf
in
xchg
inc
pushf
mov
push
jno
bound
and
push
and
jae
cld
lcall
enter
and
mov
enter
pop
enter
and
mov
or
or
push
int3
test
cmpb
test
adc
sbb
loopne
gs
ljmp
shlb
test
test
jg
sarb
push
or
dec
pop
orl
jg
int
sub
sbbl
inc
jae
je
xchg
xchg
inc
roll
mov
daa
movsl
inc
or
cmp
push
aas
mov
xlat
dec
jne
pop
aas
movb
hlt
jne
pop
add
mov
mov
aam
call
xchg
into
mov
cmp
int
fs
mov
setne
jo
jae
ja
mov
jae
fwait
insb
mov
sbb
add
in
or
jge
lahf
push
adc
xchg
faddl
push
bound
cltd
dec
push
adc
add
ficompl
sahf
aam
and
test
jno
and
test
cmpb
shrb
mov
lea
jno
and
sub
and
lahf
ret
and
push
add
xor
xor
adc
mov
adc
stc
hlt
in
mov
jmp
jle
mov
sbb
mov
mov
lods
dec
popa
pop
add
dec
dec
rclb
cmp
jg
ljmp
lds
jecxz
dec
cmp
arpl
add
das
jb
test
into
in
movsb
push
add
inc
in
pop
cpuid
sbb
push
jb
insl
adc
pop
push
mov
rol
add
push
pop
mov
aaa
cmp
pop
mov
cwtl
lods
das
dec
cwtl
fldenv
or
pop
mov
ret
mov
mov
pop
push
add
fistl
add
sbb
mov
mov
leave
adc
stos
ret
jmp
pop
cmpsb
cwtl
into
ds
aas
movsb
popf
mov
shrb
mov
xor
cmp
sbb
fcompl
jle
mov
add
xor
adcl
or
sbb
mov
xchg
mov
xchg
and
dec
fisubrs
and
roll
into
push
mov
enter
or
orl
add
enter
mov
sub
add
mov
enter
or
orl
andl
and
and
shr
into
arpl
mov
sbb
jne
xchg
or
cs
cmp
scas
inc
mov
aam
mov
mov
cwtl
pmulhuw
test
sbb
outsl
nop
add
nop
fsubr
fdivrl
sub
hlt
fsubl
sub
xlat
ds
mov
xor
xor
pop
xor
ret
sub
aas
mov
jns
into
in
xchg
cmpsb
inc
sbbb
in
sbb
call
nop
add
std
in
add
xor
enter
sbb
mov
int3
and
mov
sbb
lock
mov
ds
xor
jns
mov
pop
adc
aam
and
ds
mov
jae
icebp
mov
mov
mov
and
enter
mov
cmp
stos
scas
or
adcb
je
cmp
mov
outsl
je
stos
andl
shlb
fistpll
push
fwait
jnp
imul
dec
or
andl
call
test
and
xchg
mov
xlat
rcrl
add
pop
clc
sub
jb
popa
adc
inc
xlat
add
rcll
add
mov
or
sbb
mov
mov
mov
mov
add
dec
add
add
mov
mov
sub
mov
or
xorb
jns
stos
inc
call
add
test
and
push
fwait
dec
pop
dec
call
adc
les
cmp
xchg
push
push
mov
lret
lret
loopne
jo
dec
inc
out
dec
cmpsl
movsb
add
xchg
push
pop
push
push
inc
fsubrl
lods
pusha
and
pop
in
in
lea
mov
push
mov
push
movsb
push
mov
dec
stos
pop
push
xchg
cltd
or
add
jbe
or
xchg
mov
andb
dec
inc
mov
stos
lods
add
in
leave
mov
sbb
pusha
and
mov
sarl
mov
adc
shlb
sti
mov
stos
stos
sahf
cmp
mov
sub
mov
xor
or
adc
sub
pop
pop
lods
mov
dec
mov
ffreep
add
mov
mov
loopne
je
mov
add
xchg
and
outsb
mov
stc
vmptrld
mov
and
cmp
add
push
dec
inc
pop
das
call
jb
lods
mov
and
adc
ja
dec
cmp
pop
inc
call
cmp
lcall
dec
fisubs
mov
add
pop
pop
std
inc
lret
inc
adc
call
int
shlb
adc
jne
mov
and
lods
push
out
ret
mov
jae
and
lods
adc
pop
ljmp
loope,pn
mov
xchg
add
stos
test
lea
pop
fstps
mov
je
movsb
and
jecxz
push
push
push
enter
divb
push
push
jo
hlt
repnz
scas
inc
mov
test
mov
test
inc
addr16
dec
inc
inc
repnz
push
push
dec
dec
or
arpl
dec
cld
sbb
or
dec
ja
sahf
push
xor
add
arpl
scas
clc
xchg
xor
or
repnz
scas
cmp
pop
lock
hlt
aam
in
sbb
jl
cld
add
out
adcb
add
and
mov
test
push
mov
inc
pop
in
clc
jo
adc
and
sub
ja
xor
jae
insl
lds
lock
dec
pop
cs
jne
jo
inc
test
lret
xor
cmpsb
jne
dec
daa
or
mov
adc
inc
lds
adc
push
push
pop
mov
enter
adc
rol
push
pop
sbb
sbb
push
xor
imul
in
adc
pop
lock
rolb
sub
cld
pop
and
clc
mov
adc
adc
xchg
jne
out
stc
pop
xor
pop
mov
ja
xchg
rol
jo
mov
lock
sub
sarb
movzbl
cmp
jle
je
popf
adcb
ret
xchg
push
dec
cmp
sub
nop
lods
mov
in
test
call
rolb
and
or
add
add
or
ljmp
inc
or
dec
cmp
cmp
insl
fdivl
jne
push
lea
jmp
mov
fldt
insb
call
and
add
xchg
or
call
or
cmp
in
xor
push
add
pop
in
fsubp
in
repnz
inc
cli
or
and
jbe
shlb
jne
iret
shrb
dec
xor
pusha
mov
or
xchg
xchg
pushf
jne
mov
jae
or
push
idivl
std
loopne
fnsave
add
xchg
loopnew
loopne
and
lods
jmp
inc
pop
adc
es
push
push
add
or
mov
or
dec
shl
popa
ljmp
or
push
add
jg
dec
add
les
loope
data16
push
test
test
ss
mov
mov
mov
xchg
inc
mov
adc
les
loop
aam
gs
or
ror
or
jge
lock
in
aam
cmp
and
or
mov
dec
fs
sbb
rclb
cli
mov
or
push
push
mov
rorb
xchg
or
inc
sbb
pop
add
dec
jns
lret
fnstsw
mov
ret
test
xor
push
daa
fbld
dec
mov
and
out
leave
mov
inc
pop
push
pop
ret
lods
pop
gs
xchg
and
jo
push
addb
adcb
sbb
add
sti
rcr
push
dec
push
addr16
mov
inc
daa
aad
fstps
les
pop
in
outsb
jmp
or
pop
cmp
xchg
jle
add
or
pop
call
mov
mov
cli
roll
xchg
movsb
lock
in
in
cmc
cwtl
mov
aas
incb
inc
inc
push
fildl
fiadds
add
fs
nop
call
or
in
add
xorl
cld
and
movsb
pop
pop
jmp
jae
sub
xchg
fcomip
push
mov
add
enter
iret
movsb
and
loope
adc
lods
mov
add
jnp
and
cmp
dec
xchg
loopne
dec
mov
push
pop
sbb
es
jo
adc
adc
cltd
test
push
xchg
sub
mov
outsl
adc
or
fmull
sbb
or
xchg
pop
or
adc
mov
or
and
pop
out
push
mov
mov
sti
mov
sub
adc
mov
outsl
lock
or
stos
inc
xor
adc
xorb
mov
xchg
fsubr
mov
hlt
cmp
adc
pop
xchg
data16
and
sub
pop
and
mov
add
sbb
incl
ffreep
in
sbb
add
je
cmp
jb
sbb
pop
std
cmp
ja
pushl
ss
lret
fdivrp
movsl
or
pop
pop
or
or
pop
fistpll
adc
jg
push
inc
imul
test
lock
cld
icebp
add
xor
std
mov
in
push
push
push
testb
or
or
popf
mov
out
popa
mov
pop
jp
add
or
lock
xor
xchg
inc
push
sbb
imul
addb
bound
mov
cmpsl
or
jg
cli
sub
adc
pushl
dec
dec
push
das
adc
add
cli
sbb
loopne
sub
ss
roll
jno
ja
addl
sbb
fnstenv
aad
cwtl
pop
fisttpll
push
fildll
cmp
add
xchg
sub
add
cmp
adc
daa
daa
mov
dec
jmp
inc
outsl
xor
mov
sub
or
add
and
in
ss
jge
xchg
inc
mov
mov
aas
and
add
mov
cmpsl
add
shrl
jnp
jns
adc
inc
mov
ret
loopne
mov
xchg
mov
mov
adc
movb
orl
sub
adc
cmp
and
add
movsb
and
add
or
lahf
adc
mov
jl
fnstenv
add
movl
leave
jnp
sbb
loopne,pn
dec
inc
nop
or
inc
mov
fs
imul
dec
mov
and
push
mov
sbb
shrb
in
ljmp
mov
push
mov
push
incl
shrl
pop
or
jg
xor
in
or
adc
push
and
adc
ficoml
inc
nop
imul
mov
and
cltd
sbb
lock
aaa
push
inc
sbb
movb
fwait
icebp
out
sbb
add
adc
xor
lcall
bound
add
subb
adc
push
adc
fnsave
xchg
js
popa
loope
sahf
mov
movzwl
inc
mov
notl
add
fs
sub
jecxz
fdivl
incl
or
pop
rcrl
sub
xor
loopne
gs
push
rclb
mov
cmpl
cs
leave
push
ss
in
mov
nop
in
sbb
add
sub
cwtl
pinsrw
mov
repnz
cld
ret
pushf
popa
push
xlat
aas
mov
loope
inc
int3
adc
imul
cld
xchg
dec
pop
jns
inc
xchg
xchg
mov
inc
je
or
push
enter
test
mov
packssdw
jo
mov
aam
clc
mov
add
inc
xor
lret
inc
cmpsb
fcomps
js
jl
int3
es
ds
imul
andb
in
inc
add
inc
dec
into
inc
xchg
or
ds
push
call
iret
adcl
outsl
rolb
cmp
icebp
sti
or
pushf
ss
fistpll
pop
xchg
andl
mov
xor
fsubrs
das
or
repnz
cmp
sbb
enter
add
les
out
addr16
inc
cmp
lret
push
mov
add
sarl
dec
mov
and
add
mov
mov
repnz
arpl
lahf
sbb
mov
mov
fmuls
sbb
jns
pop
sub
and
jae
movsl
scas
inc
or
push
bound
mov
fstl
xor
clc
adc
das
cltd
shlb
mov
inc
scas
xchg
ljmp
mov
push
insb
test
mov
sbb
add
cld
or
dec
mov
mov
dec
ret
push
lea
inc
dec
sbb
xchg
adc
or
lock
repnz
sarb
popf
mov
in
roll
fisubrs
or
dec
adc
insb
mov
outsl
mov
push
daa
add
test
dec
ret
js
ret
fs
sbb
sbb
mov
adc
addr16
pop
and
xchg
in
mov
sbb
test
ss
hlt
lret
mov
adc
sti
bound
test
xor
mov
jne
mov
fdivrl
test
rorl
fcompl
fisubs
ds
sbb
sbb
in
mov
mov
enter
sub
and
and
xor
loop
mov
sbbl
scas
jae
sub
jl
sbb
popa
int3
adc
aam
cmp
pop
icebp
fs
sti
mov
fldt
sti
push
push
loop
inc
xchg
in
clc
mov
mov
cmp
adc
inc
jmp
adc
fwait
inc
std
orl
je
mov
enter
add
adcb
jg
movsb
sub
inc
xor
mov
into
and
inc
shrb
clc
add
and
push
lret
add
xchg
dec
scas
cmp
insl
adc
jle
xchg
xor
movsb
fildl
or
lret
dec
push
inc
cli
xchg
sbb
sbb
mov
and
enter
sub
jno
xchg
sbb
cmp
dec
lds
sbb
cltd
ss
jmp
xor
xchg
stos
lods
add
sub
loopne
or
and
loopne,pt
mov
aam
xchg
in
bound
test
mov
aam
add
pop
push
fcomps
inc
sub
fcmovnb
in
fmull
rcl
scas
ret
divb
loopne
das
ret
pop
inc
push
mov
add
push
push
nop
add
aam
xchg
xchg
jle
jns
loope
frstor
in
add
fs
dec
lock
adc
movl
in
mov
inc
nop
pop
sub
fwait
mov
pop
pop
pushf
sbb
repz
add
stc
mov
enter
loopne
mov
cld
arpl
add
sub
enter
push
sbb
push
inc
popa
incl
aam
inc
or
ja
sub
in
test
jmp
aad
push
push
enter
pop
adc
cmp
out
cmp
filds
pop
pop
jns
mov
or
pop
addl
je
and
xchg
or
and
pop
int
js
pusha
xor
push
add
outsb
mov
in
movsb
cmc
push
testl
lret
pop
repnz
clc
fs
sbb
inc
out
or
movsb
addr16
jge
ret
xor
fs
in
pop
dec
mov
pop
loopne
mov
iret
jb
lods
lock
addb
mov
scas
sub
lret
fldenv
xchg
sub
jne
nop
cmp
mov
imul
aaa
js
clc
push
xor
add
enter
push
cmp
fdiv
imul
aaa
xor
out
dec
pop
clc
cmc
sbb
and
xor
xor
jnp
mov
repnz
and
fstps
sbbl
xor
int
sub
adc
push
xchg
mov
mov
add
pop
or
imul
addr16
or
dec
mov
add
and
xchg
mov
sbb
btr
popf
adc
lea
inc
cmp
sub
xchg
popf
mov
mov
daa
or
test
cld
in
lock
jmp
push
mov
add
dec
adc
sub
sarb
cmpsb
add
mov
jecxz
and
and
inc
add
or
and
cmpsl
roll
sbb
push
pushl
push
mov
nop
data16
movsb
add
jo
lahf
xor
sbb
lock
std
sbbl
inc
negl
push
push
test
enter
out
jmp
mov
mov
push
add
mov
mov
scas
xchg
mov
or
sbb
mov
adc
sbb
or
adc
jb
fldcw
inc
notb
pop
add
sbb
inc
rol
and
and
test
mov
outsb
lret
scas
mov
pop
mov
into
inc
jno
inc
iret
dec
orps
and
imul
push
shrb
inc
shll
cmp
sub
mov
mov
shlb
es
dec
iret
push
lock
sbb
push
jb
sub
inc
cmp
stos
int
test
ud2
inc
mov
pop
leave
or
xlat
xor
xchg
test
cmpl
in
cmc
jno
shlb
popa
cmp
cwtl
cs
dec
sarb
xchg
sbb
push
and
cwtl
and
sub
outsl
insb
gs
outsl
push
lret
cmp
sub
jns
add
das
test
imul
pusha
fcomps
xor
xor
dec
xorb
and
push
and
push
push
ljmp
das
aas
and
add
mov
jmp
dec
test
lahf
repnz
or
add
sbb
fsubrp
insb
fs
lcall
shll
sahf
rcl
cmp
out
addr16
xchg
lds
rorl
mov
mov
push
test
scas
cwtl
sbb
add
ret
mov
sbb
jecxz
mov
mov
daa
daa
int
nop
ss
iret
mov
and
daa
mov
jns
leave
orl
rclb
out
int3
js
leave
mov
adc
mov
push
lret
call
mov
xor
shll
mov
fiaddl
add
aam
popf
addr16
add
mov
rcll
lock
add
loope
add
lahf
push
cmp
add
sub
int3
cmpl
sbb
idivb
lret
in
test
add
cmp
mov
daa
loopne
mov
cmp
repnz
add
nop
aam
inc
xchg
cmp
mov
in
test
sbb
pop
jb
js
add
pop
lods
mov
nop
mov
int3
sbb
add
fsub
out
test
sub
ss
inc
movsb
outsl
loopne
in
and
jb
lock
push
cld
icebp
or
cmp
or
mov
jmp
and
jb
movsb
movsb
and
bnd
sbb
mov
cmp
pop
jb
in
test
ss
add
and
mov
popa
sbb
fdiv
out
add
inc
fwait
sbb
icebp
pushf
shrl
mov
fnstenvs
aam
cmpsb
pop
ss
into
shl
push
aam
jae
cmpsb
imul
dec
shll
add
into
aam
imul
insb
lcall
hlt
lcall
leave
push
inc
push
popa
imul
xor
scas
mov
push
xchg
push
shll
inc
dec
fnstenvs
xlat
xchg
xor
shll
aad
fxch
incl
add
sub
sbb
xchg
dec
push
pop
aad
sbb
lret
sbb
and
push
mov
cmp
push
push
add
push
pop
rorb
and
mov
dec
or
cmp
outsb
pusha
mov
xchg
inc
sbb
add
data16
sbb
dec
flds
push
fsubrs
mov
insb
mov
push
lods
push
push
mov
inc
pusha
filds
in
stc
fsub
inc
push
inc
ds
inc
add
faddl
icebp
inc
nop
pmulhuw
inc
mov
inc
and
pop
xchg
lods
inc
fisttps
inc
dec
js
push
sub
xlat
in
clc
adc
cmpsb
pushf
add
clts
inc
imul
scas
pop
cld
xor
sbb
movups
fmull
dec
shll
pushf
adc
cs
sub
push
xor
cmp
cli
mov
fidivrs
mov
mov
mov
call
xor
fwait
roll
movsb
add
test
sti
cld
or
sbb
push
push
mov
out
push
pop
and
and
mov
and
xchg
xchg
fisubrl
fstpt
and
add
jl
and
ss
mov
dec
add
mov
mov
cwtl
fndisi(8087
xor
inc
push
xor
nop
mov
xchg
add
cli
xchg
addl
add
xchg
push
mov
mov
aad
add
adc
or
pop
jmp
cli
mov
adc
inc
xchg
inc
sbb
adc
add
js
pop
add
lds
daa
and
mov
pop
adc
jbe
or
push
inc
out
cmp
mov
test
inc
dec
sbb
popf
fadd
inc
inc
jge
fucomip
adc
or
add
pop
out
call
orb
dec
les
sahf
push
xchg
incl
adc
jle
push
mov
adc
push
int
adc
movb
mov
and
jbe
xchg
jnp
cmp
inc
sub
arpl
xchg
dec
push
cmp
cmp
and
inc
movb
inc
clc
movsl
data16
in
lret
rcrl
cmp
lret
les
mov
ljmp
xchg
inc
cmp
dec
mov
xor
xchg
and
aaa
testb
subl
mov
push
or
add
das
xor
or
sbb
mov
popf
inc
call
inc
movsl
cmp
lock
or
mov
mov
xchg
jmp
mov
cmp
pusha
and
xchg
xchg
pop
sbb
cmpl
mov
push
dec
push
mov
adc
add
cmp
inc
imul
cmpl
arpl
insb
sbb
xlat
jl
fsubs
nop
imul
inc
sbb
push
mov
inc
adc
fnstsw
inc
insb
adc
pop
loope
insl
movsb
cmp
add
inc
xchg
cs
pop
in
loop
and
push
or
mov
loopne
sbb
jmp
ja
adc
test
dec
mov
mov
jno
ret
ds
and
jl
mov
es
adc
push
inc
sbb
cmpsl
add
daa
jmp
shrb
mov
sbb
enter
mov
movsl
sbb
push
add
mov
add
jmp
nop
dec
loopne
add
xor
dec
testb
jmp
jecxz
cmp
add
push
cmp
test
pop
add
inc
xor
clc
push
rcrb
aad
push
xor
out
nop
dec
aas
movsb
pop
and
jle
jo
lcall
ljmp
jne
pop
add
or
loop
or
stc
push
ret
add
mov
push
mov
push
mov
dec
gs
jne
sub
inc
mov
xchg
mov
pop
inc
cmpb
mov
shlb
jns
or
push
jne
pop
or
inc
dec
int3
sub
rolb
sub
xor
gs
push
pusha
or
pop
cmp
xchg
scas
add
add
sbb
xchg
dec
ficomps
or
jmp
jl
mov
add
push
jne
pop
aam
mov
test
loopne
inc
jg
nop
or
lds
mov
test
sbb
inc
xchg
jb
jno
adc
test
jge
mov
cmp
into
add
adc
scas
sarl
inc
dec
adc
fsubs
test
sbb
fistpll
push
shrb
fs
lret
jne
out
ret
push
setne
add
or
arpl
jne
or
and
pop
mov
inc
and
xchg
es
mov
jg
mov
jmp
adc
and
movsl
out
dec
and
stc
loop
addl
push
jb
cmp
pop
ja
add
push
stos
push
sarl
or
or
sbb
cmpsl
sub
add
and
or
sub
popa
popa
or
pop
adc
xchg
sub
lods
cmp
pop
push
push
xchg
int3
out
adc
or
or
test
popa
out
je
push
in
dec
imul
cltd
cmovbe
inc
mov
fwait
push
xchg
xchg
dec
inc
pop
movsb
or
lds
sub
jo
mov
or
xor
fadd
mov
orl
xchg
and
aaa
lcall
push
movsl
dec
pop
dec
movsb
jo
xchg
jecxz
inc
pop
xorl
popf
pop
add
sbb
cwtl
push
jnp
mov
nop
sete
inc
mov
orl
je
lds
pop
jns
std
jg
cmc
jno
xor
or
clc
jne
or
insl
xchg
jmp
push
cmpl
popa
pop
mov
adc
pusha
xchg
sub
jg
inc
pop
and
add
pop
cmp
loopne
movsb
or
pop
imul
in
inc
into
xor
ja
push
adc
inc
ret
or
or
jmp
add
adc
mov
es
test
arpl
nop
xchg
inc
dec
adc
fmuls
pop
and
mov
mov
adc
ljmp
mov
scas
sub
sbb
inc
ljmp
aaa
daa
push
add
adc
imul
dec
jae
out
cmp
or
movsb
push
cmpsb
out
jno
mov
xor
push
mov
outsl
lock
inc
and
pop
cmp
sbb
pshufw
mov
jb
daa
push
hlt
pop
cmp
subb
ss
mov
and
mov
pushf
push
jbe
push
xor
and
pop
call
ja
mov
jo
hlt
pop
xor
lea
mov
cmp
ja
jmp
cli
add
dec
add
lea
add
dec
jecxz
add
adc
in
pop
test
in
es
xor
mov
pop
sbb
sbb
pop
nop
dec
daa
fdiv
repz
sahf
add
out
stc
insl
mov
inc
inc
xchg
fmul
xor
push
xor
in
adc
scas
mov
adc
adcl
adc
or
adc
or
stos
loope
popa
and
add
jns
fstps
and
xchg
add
jle
jmp
sub
mov
fldl
lret
mov
je
dec
dec
scas
adc
andb
adc
push
lcall
add
jmp
adc
ret
sub
out
pop
xor
push
je
sbb
js
aad
inc
push
call
xchg
mov
inc
js
xchg
mov
sbb
fisttpl
or
loopne
pushw
dec
lea
pop
mov
mov
repz
mov
cmpsl
popa
adc
je
adc
mov
js
and
repz
pop
scas
das
sub
mov
jmp
cmp
js
lock
mov
jmp
add
jg
or
mov
mov
fbstp
pop
lds
push
jle
push
cmp
sbb
adc
mov
inc
test
out
loope
dec
arpl
push
rclb
or
pop
inc
cmp
mov
in
jne
shll
dec
lcall
outsl
jmp
add
adc
push
add
bound
ret
push
mov
push
adc
mov
mov
jnp
pusha
xor
test
movb
fistps
or
rcrb
lds
enter
insl
cmpsb
cmp
sbb
test
pop
sbb
dec
push
jbe
xchg
sub
inc
mov
mov
loop
es
test
les
sbbb
data16
mov
dec
sahf
mov
add
xchg
fadds
mov
jecxz
bound
mov
inc
jns
jmp
push
adc
sbb
or
mov
add
mov
push
or
or
or
loope
shlb
int
push
or
dec
inc
inc
das
xchg
xchg
or
push
jbe
push
xor
sbb
test
test
mov
subb
or
xchg
test
inc
aas
xor
pop
jb
dec
out
loope
dec
sub
mov
shl
sbb
xchg
rorb
das
add
pop
repnz
bound
icebp
pop
shlb
push
and
in
shlb
jmp
add
filds
pop
sub
xor
mov
pop
in
mov
test
popa
or
or
sbb
ret
jecxz
or
rcl
adc
lods
adc
xor
add
lret
fimull
rolb
adc
inc
and
dec
push
daa
cmc
and
sbb
dec
mov
fs
clc
clc
add
inc
mov
repnz
sbb
mov
outsl
mov
adc
das
cmpb
sbbb
ret
sbb
add
xchg
push
lahf
jp
cmp
jne
dec
fstps
pop
inc
lds
jl
xchg
or
add
dec
sub
mov
push
jo
mov
cld
pushf
addb
xrelease
inc
repnz
in
pop
push
es
repz
add
jmp
sub
dec
push
pop
adc
ret
cmpw
pop
dec
lret
outsl
xor
mov
push
push
jno
dec
and
or
repz
adc
adc
dec
or
outsb
sub
add
xchg
das
hlt
das
mov
stos
xchg
add
je
mov
push
dec
dec
andb
out
inc
popa
mov
pcmpeqw
or
xlat
dec
sub
inc
xlat
dec
mov
loope
xlat
jno
nop
cmp
hlt
cmpsl
sub
adc
sbb
mov
inc
jp
and
fwait
push
mov
mov
fs
sbb
pushf
fs
add
add
pop
rclb
mov
sti
xchg
push
testb
push
push
jle
cltd
jge
jmp
push
enter
cmc
and
cmpl
mov
movsb
arpl
enter
add
adc
sub
clc
sub
out
in
cwtl
jge
incb
xor
popa
repnz
mov
dec
xor
lea
inc
adc
mov
out
fdivrs
in
jne
flds
mov
ja
mov
xor
or
iret
inc
lock
lahf
add
dec
cld
sbb
mov
shlb
and
cmpsb
xchg
xchg
jns
sbb
or
mov
sti
int
repz
adc
ss
je
test
outsl
pusha
mov
out
lret
aad
fisubs
sub
mov
pop
pop
sar
adc
cmp
out
sbb
test
add
or
pop
cmpl
outsl
sub
out
inc
sub
addb
or
mov
adc
adc
mov
inc
adc
icebp
loope
adc
sbb
mov
or
xchg
mov
ds
arpl
out
rcrb
push
jmp
gs
or
xchg
adc
sbb
dec
dec
xor
leave
inc
xbegin
mov
das
clc
test
xchg
jmp
sbb
pop
dec
repnz
test
lock
cmp
stc
xchg
rorl
push
pop
xor
inc
shr
fsubr
and
dec
in
clc
aam
sbbb
data16
and
or
jbe
loopne
les
sbb
dec
les
push
or
xchg
sub
imul
in
stos
or
dec
mov
push
push
xchg
dec
and
js
rcrb
hlt
leave
push
iret
xchg
rorb
imul
mov
sub
mov
aam
flds
dec
xlat
rorb
pop
bound
push
daa
flds
dec
bound
dec
mov
loope
inc
scas
jo
mov
jbe
cmovs
mov
inc
sub
dec
outsl
mov
push
nop
pop
pop
es
or
dec
fs
inc
pop
push
dec
adc
lods
movsb
out
mov
loope
and
or
inc
dec
and
add
cmpl
push
movsb
pop
sub
cs
mov
push
dec
xor
or
call
xorl
std
orb
sbb
mov
xor
lret
adc
in
in
sti
sbb
daa
dec
or
xor
or
in
stos
inc
jecxz
mov
xchg
adc
rorl
mov
add
cmp
jo
inc
adc
xchg
push
mov
aaa
sub
ss
loopne
dec
inc
xor
inc
and
xchg
shll
mov
test
push
sbb
xor
jbe
iret
adc
xchg
cmpsl
mov
xor
cmp
pop
je
xchg
cld
mov
xor
cmp
sbb
lahf
sahf
push
pushf
fisttps
sbb
js
inc
sub
stos
rolb
mov
dec
pop
lcall
aaa
xchg
sbb
cs
add
mov
dec
rclb
pop
cs
or
fimull
mov
and
cmpsl
div
es
or
sub
cmp
outsb
mov
cltd
mov
aad
shlb
enter
xor
popa
sbb
sub
add
and
mov
divb
dec
push
xor
xchg
or
roll
push
adc
dec
sub
dec
add
negb
inc
inc
add
or
inc
mov
push
fwait
inc
aas
mov
inc
pop
add
jmp
flds
fmuls
fistpl
stc
mov
flds
add
sub
or
fnstcw
or
or
inc
push
sub
inc
nop
orl
inc
fld
jne
add
call
jns
stc
inc
and
cmp
inc
faddl
jns
xor
dec
push
add
mov
int
xchg
mov
loopne
jg
insl
sbb
dec
adc
adc
push
jbe
aam
sub
dec
mov
dec
push
dec
inc
fisubrs
push
or
sbb
rorb
movsb
lret
or
adc
cltd
jo
or
ss
mov
sub
jmp
sub
add
xchg
cmp
dec
push
xor
add
popa
ret
sbb
xchg
outsl
or
jp
push
push
mov
loopne
aaa
sub
inc
mov
pop
mov
out
or
sub
fisubs
fisubs
mov
add
adc
popa
or
mov
jnp
popa
jo
xor
sbbl
mov
outsl
pop
adc
mov
nop
mov
or
daa
in
iret
push
push
rcr
pop
xchg
rol
enter
jmp
mov
pop
jno
andl
mov
mov
stos
dec
jmp
and
add
stos
pop
add
sbb
push
push
xor
ror
add
sbb
sbb
arpl
inc
push
pop
or
lcall
push
cmpsb
imul
adc
test
jo
hlt
xor
into
inc
lcall
lcall
popf
fs
add
push
stos
sbb
pop
mov
popa
sete
sbb
mov
movsl
aad
jmp
adc
imul
xchg
ret
and
dec
pop
cmp
xchg
pop
adc
or
add
sub
or
mov
fcoms
inc
add
dec
inc
mov
jmp
xor
popf
push
push
mov
repnz
pop
push
mov
jne
dec
ss
cld
fsts
or
test
cmp
fsubrs
jge
add
cmp
rclb
pushf
movsl
push
or
in
cmp
dec
adc
dec
lahf
inc
cmp
sbb
popa
push
mov
leave
aad
mov
xchg
dec
pushf
mov
or
test
icebp
sub
jne
je
mov
notb
push
xor
mov
popa
xor
les
sbb
adc
mov
push
xchg
pop
movsl
int3
mov
push
fildl
mov
add
pop
ds
sahf
or
inc
inc
iret
xor
mov
pop
cmpsb
xor
dec
shrl
ja
dec
xchg
and
sub
in
lret
and
jmp
cltd
arpl
insb
and
or
mov
loopne
dec
addr16
or
or
add
arpl
xchg
rolb
xchg
add
push
arpl
add
add
push
mov
ja
sbb
pop
push
adc
and
out
sti
roll
inc
je
arpl
sbb
push
outsl
cmp
xchg
push
hlt
sti
test
setns
daa
test
cli
loopne
push
and
adc
imul
inc
push
dec
adc
add
or
xchg
cld
pop
or
or
movsl
cwtl
mov
jbe
add
pop
xchg
xchg
adc
adcb
cmp
sbb
mov
mov
in
hlt
sbb
daa
push
xor
andb
loopne
rcll
mov
inc
or
push
push
or
push
push
dec
add
cmpsl
mov
nop
push
inc
rorb
push
or
xor
xor
mov
add
sbbl
sub
pop
fwait
add
push
push
mov
and
mov
pop
jnp
mov
inc
and
inc
add
sub
sbb
mov
insb
dec
pop
inc
and
add
in
inc
inc
movb
fs
jbe
jns
xor
inc
and
or
jbe
mov
nop
cltd
push
incl
sub
pop
aas
stos
or
jg
push
push
add
rclb
inc
push
mov
cmpsb
and
and
push
adc
pusha
xchg
lock
loope
movd
js
add
pop
inc
repz
mov
std
sub
xor
cltd
xchg
xor
adc
cwtl
and
mov
jne
jmp
push
and
imul
adc
and
cmpsb
sbb
cltd
je
mov
and
jne
xorl
sub
and
add
mov
imul
lret
jmp
xorl
mov
cmpsb
adc
sarl
push
xor
xor
dec
pushf
and
int3
rorb
popa
push
mov
ja
fstpt
adc
cmp
fsubrs
adc
test
dec
sub
mov
inc
cmp
inc
fbld
adc
or
mov
jnp
push
jle
mov
xchg
outsb
std
push
push
sti
fs
les
add
jl
dec
cmp
jmp
pop
lret
hlt
decl
test
mov
or
shrl
sysret
ja
jp
jg
sub
jb
push
or
outsl
mov
push
jl
outsl
add
mov
sbb
cmc
push
fisttps
lods
adc
outsl
xchg
cmpsb
addr16
call
xchg
dec
add
or
cwtl
push
loopne
bound
sub
sahf
sbb
or
adc
inc
adc
and
jmp
fstp
dec
in
sbb
inc
pop
adc
jmp
test
data16
mov
iret
cmp
dec
fcomp
xor
ss
aad
mov
sbb
push
lea
arpl
popf
cmp
mov
loop
inc
pop
aaa
inc
ret
mov
mov
das
movsb
and
sub
nop
inc
inc
xor
inc
inc
daa
add
jl
into
push
xchg
xchg
add
dec
cmpb
add
ljmp
inc
cmpsb
in
mov
insb
pop
or
or
dec
push
aas
push
or
inc
or
pop
pop
mov
int
push
pop
push
pop
and
pop
sub
jl
sub
pop
jnp
jge
out
adc
mov
aaa
xor
fs
dec
cmpsb
adc
dec
cmp
adc
jb
add
adc
pcmpgtb
push
adc
enter
pop
push
fs
push
dec
pop
push
ret
dec
pop
and
mov
inc
adc
out
lahf
adc
lock
xor
fs
fldl
movsb
in
leave
pop
dec
and
inc
and
pusha
aad
in
dec
push
enter
push
push
or
sbbb
insb
inc
enter
jo
jo
enter
je
sbbb
je
enter
js
js
enter
jl
adc
enter
adc
pop
push
aad
push
rolb
cld
aas
add
mov
shll
adc
or
push
dec
adc
mov
iret
push
ja
inc
add
data16
jno
pushf
mov
add
pusha
rcrb
outsb
or
cmp
xor
popa
push
or
scas
int
adc
leave
loop
nop
outsb
adc
push
mov
mov
lea
ret
add
sub
push
rcrb
pop
aaa
pop
add
hlt
sahf
movb
nop
sbb
adc
fcomps
stos
add
dec
js
sbb
into
pop
push
sbb
push
jl
test
xlat
pop
dec
stos
push
adc
cmpsb
lea
mov
bswap
push
push
imul
or
daa
out
arpl
xchg
or
inc
iret
loopne
jns
pop
cmpsb
sbb
in
sbb
rolb
add
cmp
or
push
fists
add
dec
inc
ret
adc
lret
rdpmc
call
cs
mov
je
loope
cs
sub
xchg
mov
lret
mov
dec
mov
and
pushf
push
call
out
cmp
mov
adc
pop
xor
or
jo
loope
nop
out
mov
xor
fsubrs
outsl
mov
adc
add
sbb
test
mov
mov
adc
outsb
in
xchg
add
cmc
add
push
shrl
test
in
fcmovbe
push
inc
inc
jmp
push
xor
ret
lock
popl
cmp
push
fildl
or
es
pusha
xchg
test
inc
inc
rclb
mov
rclb
or
fwait
mov
xor
sbb
imul
xchg
cmp
add
push
sbb
in
pusha
jbe
push
add
cld
jl
and
inc
dec
and
shlb
insb
rcrl
sbb
test
cmpl
fimull
out
sub
xchg
mov
or
adc
stc
or
xorl
cmp
or
adc
xchg
or
movups
dec
adc
inc
fdivl
inc
sub
adc
sbb
inc
sub
inc
leave
push
push
pop
sbb
lea
sbb
add
pop
jmp
lock
push
sbbb
inc
sbb
ret
enter
leave
gs
ljmp
xor
out
jno
dec
hlt
call
inc
dec
xchg
sbb
sbb
enter
sbb
push
xchg
push
inc
xchg
add
js
jae
shlb
lret
adc
sbbl
and
adc
cmp
sub
imul
js
push
cmp
sbb
enter
dec
sbb
rcr
add
add
sbb
xor
xchg
test
sub
push
sbb
test
es
shlb
jo
mov
adc
push
push
js
lret
js
add
inc
rorb
subb
pop
add
add
fiaddl
push
xor
push
bound
adc
ret
test
nop
sbb
and
nop
sub
or
das
add
mov
cwtl
imul
pop
push
mov
mov
xchg
test
add
dec
xchg
or
xchg
dec
mov
xor
cmp
das
add
lret
sbb
mov
push
push
shlb
and
or
jne
xlat
bound
js
push
movsb
inc
shlb
xor
cmp
mov
inc
fcomp
xor
imul
inc
loopne
ret
sub
xor
stos
xor
or
inc
mov
lock
sub
imul
xchg
add
lock
aad
inc
movsl
mov
lea
scas
addb
and
xchg
and
pusha
outsl
test
fs
push
fs
mov
jb
and
xor
and
cmp
mov
shlb
xor
xor
aaa
xor
xor
xor
xor
incl
inc
xor
inc
xor
dec
xor
dec
xor
dec
xor
dec
xor
call
push
xor
push
xor
xor
push
xor
pop
xor
pop
xor
xor
pop
xor
pusha
xor
bound
arpl
mov
jg
fwait
mov
ss
xor
xor
cmp
xor
and
inc
filds
fimuls
aas
sub
movsl
roll
adc
andb
xor
out
jb
push
outsb
js
popl
lcall
or
cmp
nop
dec
push
lds
cwtl
pop
mov
cmp
and
cmc
out
outsl
mov
arpl
adc
and
pushf
cwtl
inc
push
cmpsl
sahf
dec
lods
out
es
pop
fs
pop
cmp
outsl
andl
xor
mov
pop
rol
and
clc
mov
push
sbb
movsl
or
lea
dec
push
daa
int3
daa
xor
orl
and
daa
shlb
nop
sbb
and
daa
and
fmuls
and
daa
fsubrs
sbb
pop
cmp
popa
es
add
push
xor
dec
xor
pop
cltd
sub
jb
mov
dec
mov
sub
cmp
fbstp
inc
sub
and
nop
sub
sub
cs
push
or
loopne
pushf
sub
adc
push
aas
adc
and
dec
adc
ljmp
sub
enter
movsl
pop
xchg
sbb
xchg
hlt
push
xor
add
adc
aam
clc
pop
add
dec
or
or
or
mov
mov
adc
out
cmpsb
sti
test
or
or
cmp
xchg
into
incl
rcr
sbb
mov
imul
adc
push
add
imul
ds
jne
cmpsb
or
dec
xchg
push
imul
pop
push
or
sbb
push
push
inc
sbb
call
push
push
and
jno
movsl
xor
and
mov
push
xchg
movb
dec
inc
adc
js
pop
adcl
inc
add
pushf
push
xor
add
lcall
dec
sbb
jecxz
jp
bound
and
and
lock
aaa
test
pushl
or
mov
std
xchg
adc
in
out
xor
aaa
and
cmpsl
call
add
std
nop
push
mov
test
jmp
loop
cwtl
test
jmp
jne
mov
mov
xchg
xchg
stos
mov
data16
pop
pop
scas
add
int
pop
inc
dec
dec
mov
xchg
popa
daa
or
inc
mov
inc
xor
out
cld
iret
add
fs
jbe
mov
aaa
or
jle
lret
mov
sub
stos
sub
cwtl
inc
out
sbb
aam
imul
xchg
add
add
cmp
or
sbb
or
adc
dec
push
call
jo
pop
pop
cs
and
je
loopne
mov
or
je
repz
cmp
das
and
arpl
inc
or
jae
filds
pop
loop
loope
dec
inc
je
add
fldcw
adc
push
or
mov
jb
sbb
outsl
adc
xor
pop
dec
sbb
pop
xor
pop
xor
sbb
repnz
roll
aaa
cmp
pushf
popf
or
push
xor
mov
push
das
and
mov
insb
and
push
ljmp
pop
and
push
jbe
scas
xor
cmp
adc
sub
and
daa
sub
and
rcll
pmulhuw
xor
xor
fmull
or
cmp
mov
sbb
mov
lgs
xor
ret
lahf
push
cmp
xor
cmp
add
mov
push
inc
xor
push
or
inc
inc
mov
jge
mov
or
mov
pop
stos
fadds
jo
aaa
add
xor
lods
xor
sub
inc
xchg
cmp
cmp
lret
mov
pop
cmp
inc
pcmpgtb
imul
pop
inc
inc
pop
jnp
push
int3
pusha
ss
rcrl
movsb
dec
in
lock
pop
dec
shlb
adc
inc
es
push
pop
and
insb
pusha
xchg
or
sub
sbbb
mov
xchg
nop
pop
ret
pop
rolb
adc
sbb
adc
out
dec
and
sub
jge
and
and
push
imul
aaa
adc
or
fcomps
adc
pop
add
fstpl
fisttpll
sub
js
mov
jns
jecxz
ds
lods
jmp
clc
jo
add
cs
pop
adc
cs
xchg
push
and
jb
cs
add
add
xor
xor
addb
push
or
popl
mov
orl
or
lcall
or
jg
jmp
mov
mov
mov
or
add
ds
sub
mov
add
push
popf
and
or
xlat
or
add
dec
xchg
stc
loopne
shlb
das
inc
xchg
cmpsb
lock
sbb
sarb
xchg
or
dec
sub
es
std
xor
insl
sbb
push
push
push
cld
jge
pop
in
sub
and
sub
rcl
and
push
xchg
add
in
push
mov
jp
jb
mov
and
enter
jl
testl
inc
sub
cld
cwtl
adc
dec
cmpsl
push
and
or
pop
pop
mov
jge
sbb
orb
jmp
scas
or
inc
fbld
mov
stc
push
rcr
aam
push
cmpsb
repnz
mov
adc
push
cmp
sub
mov
push
push
mov
adc
adc
repnz
inc
es
cmpsb
lea
sub
movsb
jae
mov
mov
dec
push
jecxz
inc
pop
out
inc
add
mov
push
fidivl
dec
out
mov
adc
dec
pop
add
mov
xchg
or
mov
dec
imul
lock
mov
mov
mov
jmp
adc
xchg
dec
mov
in
push
cwtl
jne
adc
xchg
mov
xchg
sbb
lods
sbb
and
push
cmp
call
hlt
mov
fwait
mov
adc
daa
test
insb
or
or
cmp
mov
in
add
dec
shlb
outsb
data16
sbb
dec
jmp
adc
in
xchg
cltd
push
das
adc
xor
in
adc
leave
ljmp
in
cmp
inc
push
adc
adc
lods
leave
adcl
clc
add
lods
pop
mov
and
ds
js
jae
inc
int
je
std
or
add
mov
mov
fidivl
inc
push
pushf
mov
or
in
dec
adc
ret
inc
xchg
loopne
and
and
and
xor
insb
mov
test
pop
mov
inc
inc
lea
cli
and
cmp
or
mov
sti
aam
or
sbb
and
nop
cmp
lcall
add
sub
nop
push
add
sbbl
ret
or
fadds
pop
test
pusha
je
mov
loope
inc
fucomip
test
pop
sub
adc
jae
sqrtps
mov
cmp
push
sub
inc
sub
cmp
in
sbb
or
xchg
dec
inc
and
cmp
inc
xor
cmova
xor
add
sub
in
mov
adc
mov
pop
or
pop
and
jmp
js
sbb
mov
inc
insl
mov
je
mov
or
fcoml
xchg
sbb
add
jge
dec
jle
test
inc
lds
pop
cmp
and
insb
inc
test
dec
and
int
inc
nop
in
shlb
test
stc
hlt
jmp
andl
add
push
cli
imul
add
cmc
cld
cmp
jb
ja
mov
cmp
hlt
stos
test
inc
jns
sbb
fs
sbb
js
aas
mov
rorl
mov
movl
adc
push
adc
adc
pop
xchg
push
push
and
add
dec
imul
loope
xchg
outsb
mov
xchg
push
stos
add
ret
and
addr16
push
mov
jp
jp
subl
fcoms
adc
lea
pop
ret
shrb
test
ret
dec
jecxz
mov
or
add
ret
add
movzwl
andb
aaa
cltd
leave
cs
mov
and
aaa
push
ret
mov
add
sub
cld
inc
pop
mov
test
pop
sbb
into
add
xchg
lret
or
rorl
sbb
and
lods
push
sbb
mov
stos
mov
add
test
repz
sub
ja
dec
cmp
jge
mov
ficomps
dec
push
sub
mov
dec
adc
sbbb
out
dec
add
push
lea
mov
dec
or
cmpsb
or
mov
add
mov
push
mov
add
sub
sub
mov
flds
sbb
daa
lods
rol
push
jp
add
mov
xlat
and
or
test
cmp
inc
jns
mov
dec
out
jp
xor
pop
or
imull
movsb
mov
cmp
into
add
push
jecxz
or
push
cmp
dec
pusha
pusha
nop
inc
mov
cmpsb
xchg
mov
add
sbbb
xor
xchg
das
rolb
sub
sub
mov
fisubrl
popf
ret
dec
add
sbb
xor
pusha
add
xchg
xor
divl
js
xor
or
out
push
mov
pop
test
xor
add
jl
add
or
nop
lds
lds
hlt
and
cmp
loopne
add
call
nop
lods
xchg
fidivl
test
add
and
adc
push
int
sbb
cmpb
jl
dec
pop
into
adc
cmp
mov
sub
jne
pop
repz
aad
sub
enter
jns
js
out
sarb
inc
mov
or
sar
mov
dec
ss
ljmp
lcall
add
inc
adc
sbb
and
push
add
pop
sbb
add
test
inc
cmp
jno
mov
pop
les
cmp
hlt
adc
les
fildll
push
aas
stc
or
adc
push
push
call
add
fnstcw
sbb
nop
test
fucomip
xchg
dec
test
dec
out
and
aad
lock
or
inc
es
push
sub
js
push
rorb
aaa
stos
es
mov
cltd
sub
pop
andl
loopne
xchg
lret
adc
ret
jl
pop
inc
sbb
push
sbb
dec
pop
xor
push
add
mov
lret
fidivl
std
push
mov
incl
pusha
popa
pop
dec
dec
pushf
mov
inc
jp
call
push
xchg
sahf
or
xchg
mov
pop
je
je
scas
or
cld
lea
mov
mov
insl
mov
inc
adc
inc
inc
inc
adc
les
sbb
inc
or
mov
xchg
notb
sahf
push
hlt
cs
inc
test
fcmovnbe
stos
and
adc
loop
test
jp
hlt
add
enter
sahf
dec
lahf
push
xor
pop
in
pop
addr16
enter
inc
inc
enter
aas
and
dec
cmp
dec
lea
popf
pop
out
jno
sub
cmp
cmc
dec
sbb
sub
mov
fsubr
sub
mov
or
adc
inc
lahf
cmpsl
nop
and
lea
cmpsb
push
and
or
es
and
and
adc
dec
jne
adc
leave
or
arpl
jno
sub
lret
daa
lock
lock
repnz
xor
jnp
adc
lea
push
pop
fwait
pop
or
dec
cli
mov
mov
inc
adc
jp
shr
or
pop
cmp
push
inc
adc
pop
dec
or
or
and
lahf
cmc
mov
push
and
cmp
push
inc
lods
test
popf
xchg
xchg
movsb
mov
fidivrs
pop
inc
inc
inc
data16
jl
sbb
or
out
nop
int3
ja
fdivs
add
add
jne
mov
loop
cmovs
clc
ret
sarb
or
dec
testl
and
fsubrs
sub
add
add
gs
lret
add
insb
and
or
pusha
add
push
sbb
inc
add
cmp
imul
test
pop
fildl
push
shlb
es
outsb
or
fwait
pop
mov
push
movsb
adc
add
push
add
cmp
inc
das
push
inc
inc
add
mov
ret
sub
sbb
mov
mov
sbb
xlat
arpl
xchg
dec
ds
adc
js
imul
aaa
adc
insl
xchg
dec
pop
jno
jg
pop
faddl
loopne
mov
cmp
xor
lret
sti
mov
jp
cmp
aas
inc
inc
inc
leave
leave
cmp
xor
dec
push
lea
cmp
ds
inc
aam
andb
pop
push
adc
xchg
sti
mov
je
cmp
xor
and
sbbb
inc
pop
push
ret
shlb
es
push
jmp
mov
jmp
out
jp
testl
xor
lcall
xor
add
aas
orb
jl
and
inc
inc
notb
cs
add
add
add
cmpsb
imul
push
cmp
cmp
inc
cwtl
sub
nop
push
push
sbb
invd
xchg
addr16
stos
dec
out
sbb
cmc
aaa
push
cmp
cmp
mov
push
mov
jmp
pop
imul
pop
cmp
outsl
or
insl
addr16
cmpsb
inc
adc
je
lods
aad
into
and
ret
jne
out
xor
jae
or
nop
in
adc
adc
rolb
adc
js
and
sbb
sub
insb
add
aad
sbb
jp
je
ret
sbb
lea
sbb
adc
add
mov
push
pop
cmp
and
icebp
fxtract
leave
lcall
insb
add
or
add
popa
pop
pop
cmp
fbld
sub
add
adc
insb
sub
push
or
jl
pop
dec
push
insl
xchg
loopne
adc
xlat
mov
xor
lret
hlt
adc
jo
jbe
sub
pop
xchg
pop
imul
in
fisubrs
mov
negb
mov
test
or
fdivrl
cmp
jbe
shrl
xor
mov
or
inc
mov
stos
es
mov
xor
mov
adc
pop
jae
cli
or
lret
add
bound
or
cwtl
mov
adc
jne
dec
fimuls
cmp
int
jle
inc
or
cmp
jo
xchg
ret
inc
dec
cmc
inc
push
push
ret
loope
push
dec
popa
mov
add
testl
push
lds
mov
in
add
lahf
add
dec
lock
or
add
add
mov
sub
xchg
adc
adc
mov
ds
xchg
pop
pop
mov
dec
push
cmpsl
lret
mov
pcmpgtd
push
divl
mov
push
xor
gs
addb
mov
in
sbb
jge
fdivrs
or
loope
clc
and
cmp
sbb
adc
int3
jge
pop
adc
sub
pop
jbe
mov
js
pop
cmp
hlt
jbe
and
shl
jne
cld
dec
les
lea
jmp
adc
push
jp
insl
dec
pop
ja
rcl
push
test
inc
cmpsl
cmp
movsl
add
lds
and
or
mov
mov
adc
addr16
enter
jmp
mov
inc
pop
inc
lods
sub
cmp
add
stos
ret
icebp
aaa
add
js
mov
sub
out
add
add
in
lods
movsl
rcrb
cltd
dec
push
or
sbb
and
inc
cwtl
add
loopne
sub
inc
jns
mov
dec
dec
push
jne
xor
cld
jmp
add
jne
inc
dec
movsb
and
pop
sbb
pop
dec
shr
xchg
push
cmc
ja
add
imul
sub
fistl
sub
or
loop
call
bound
clc
push
stos
sbb
push
mov
lock
sub
dec
jl
mov
and
rcrl
sahf
cmp
imul
dec
addr16
cmp
pop
outsb
cld
or
dec
adc
loope
imul
popf
push
mov
cmp
push
xor
out
int3
xor
xor
dec
xchg
loopne
xchg
inc
fmull
jae
popf
or
ret
sbb
dec
mov
outsb
or
add
loop
and
jmp
subb
sub
mov
or
sbb
xchg
adc
pop
ja
fsubrp
rclb
jmp
ja
imul
inc
sbb
lret
jl
sbb
sahf
and
ret
add
mov
inc
fisttpl
jl
ret
add
dec
pop
lock
cmpsl
mov
and
mov
jge
pop
jnp
or
push
xor
sub
fiadds
std
gs
jae
aam
cmpb
pop
scas
dec
jmp
and
inc
or
nopl
clc
add
inc
or
dec
cmpsb
add
sbb
js
sbb
ja
movsb
xchg
mov
out
dec
push
or
ficoml
lea
xchg
test
jle
inc
or
ret
sbb
xor
loopne
cmp
push
add
std
jmp
xor
inc
pop
sbb
jae
mov
mov
jae
fcom
fldcw
jmp
and
fbstp
inc
inc
cmp
jnp
jnp
and
outsl
cltd
mov
jbe
pusha
add
jg
sub
outsl
pop
lret
and
jmp
test
dec
xor
inc
cltd
jne
movsl
pusha
lea
pusha
sub
daa
ret
add
fists
and
inc
mov
jbe
jne
adc
lea
and
fbld
and
popa
jl
adc
jl
push
mov
dec
cmpsl
dec
mov
add
pop
push
push
add
sbb
xor
jle
mov
rclb
dec
dec
clc
adc
or
sbb
subb
xchg
cmp
pop
and
push
lock
test
sub
cld
lret
mov
jge
ret
jbe
xchg
call
insl
xchg
xor
jne
nop
sub
lods
js
mov
push
dec
aam
pop
inc
push
adc
xchg
jb
mov
clc
rorb
dec
and
xlat
xchg
mov
arpl
test
insb
inc
mov
add
jae
mov
jge
mov
push
les
and
push
add
stc
mov
dec
inc
or
push
adc
dec
jle
cmp
adc
sbb
sbb
push
and
xor
jle
insb
push
sub
xor
mov
mov
mov
dec
dec
inc
rolb
out
adcl
dec
pop
dec
lcall
mov
pop
ret
shrd
dec
push
adc
shll
sbb
mov
xor
xchg
and
shrl
mov
adc
subb
push
lock
leave
cmpl
mull
setp
push
pop
or
cmp
bound
ret
test
add
xorl
add
mov
andb
mov
or
mov
add
fistl
cltd
sub
sbb
mov
jae
mov
cmp
push
or
addr16
insb
mov
dec
or
adc
cmp
inc
lcall
or
fisttpll
xor
insb
imul
testb
das
and
insl
mov
and
or
sub
nop
jbe
inc
daa
or
daa
push
rcr
dec
jl
inc
pop
scas
push
xchg
xchg
mov
inc
xchg
imul
and
cmp
mov
fstl
push
pop
jo
orw
xchg
ljmp
xchg
pusha
pusha
popa
xacquire
cltd
inc
or
fcoms
push
push
inc
inc
sbb
ljmp
or
testb
das
enter
pop
fs
push
pop
dec
jne
fsub
scas
bound
add
cmp
and
cmc
add
fcomps
aad
cs
pop
pusha
mov
push
shlb
xor
inc
orl
xlat
insl
out
out
inc
and
push
fisttpl
push
xchg
lock
mov
and
imul
xor
sub
and
fldl
enter
jae
jle
iret
or
jmp
pop
incl
mov
push
xchg
mov
incl
js
ja
cmp
add
addb
sbb
jl
psubb
test
lcall
sbb
dec
std
incl
data16
cltd
mov
or
jo
push
dec
rolb
or
add
aam
dec
cltd
mov
lods
and
cmp
or
ljmp
lods
or
out
adc
mov
leave
shl
adc
out
inc
out
add
push
push
mov
mov
jle
stos
inc
test
push
mov
adc
lock
xor
jo
sbb
repz
in
and
push
into
sbb
pop
cmpsb
jne
sbbl
shr
ds
pop
mov
popa
adc
sbb
and
pusha
popa
je
cmp
aaa
lods
cmp
cmp
addb
ret
push
mov
push
add
cmp
das
and
adcb
sbb
pop
push
mov
insb
sbb
mov
enter
pop
sbb
adc
iret
and
subb
add
inc
loop
pop
pop
sbb
movsb
movsl
cltd
and
add
pusha
loope
subb
ja
in
push
mov
insl
add
nop
sub
and
xchg
add
mov
sub
xlat
pop
fscale
mov
adc
loop
adc
inc
hlt
jmp
mov
test
mov
jle
jmp
gs
into
dec
adc
ja
jg
add
sub
dec
push
call
mov
pop
roll
sbb
mov
outsb
add
je
adc
push
fbld
pushf
repz
add
inc
pop
dec
pop
pop
pop
and
out
enter
sti
sbb
lods
push
inc
mov
loopne
call
lret
xchg
pop
xchg
cwtl
jmp
fwait
gs
push
adc
lret
push
stc
js
push
lret
push
int3
xor
pop
mov
lods
lretw
lret
stos
sub
adc
jne
or
inc
dec
jle
ret
cmp
pop
jl
popf
in
mov
or
mov
jmp
loopne
inc
es
fisttpll
pop
pop
dec
repnz
jae
movsb
mov
inc
addr16
push
cmp
add
adc
or
push
sbb
pusha
idivb
mov
enter
sub
add
jb
aaa
or
pop
insl
loope
push
adc
cmp
fmulp
dec
inc
mov
jle
mov
shll
sbb
ss
in
xchg
fsts
mov
dec
pop
aas
jnp
inc
loope
cli
pop
cmp
pop
jo
inc
mov
inc
rorb
xor
add
xor
push
in
mov
dec
aad
mov
subl
jbe
adc
push
mov
into
mov
mov
cli
pop
jnp
adc
fldl
scas
mov
cmc
jbe
mov
mov
pop
pop
xlat
sub
push
or
jmp
add
andb
inc
int3
lea
mov
xlat
int3
xor
mov
out
push
sbb
mov
rolb
adc
pop
sbb
sti
or
in
shlb
push
adc
and
clc
lahf
mov
jns
or
jg
jp
push
pop
dec
add
out
outsl
xor
adc
and
outsb
fldt
sub
js
aaa
iret
out
lods
add
stos
or
dec
cld
insl
adc
cmpl
cmpsb
adc
punpcklbw
mov
push
pop
in
mov
jmp
add
scas
fnstenv
cmp
jne
mov
out
loop
movsl
sub
jp
sub
xchg
aas
dec
xor
loope
xor
das
mov
popf
or
out
inc
jo
and
enter
pop
and
cltd
mov
add
add
or
nop
add
dec
insb
add
xchg
fildl
leave
imul
pushf
jge
out
push
cmc
mov
cmp
test
dec
mov
jmp
add
xchg
mov
gs
rcrl
paddusw
rolb
jp
pcmpgtb
xor
jle
jo
imul
fidivl
outsb
and
imul
mov
loope
xor
dec
enter
sub
lahf
sub
aas
mov
or
xor
mov
or
sbb
xor
add
add
in
sbb
push
mov
pop
or
xchg
loope
add
mov
into
push
rolb
hlt
orb
xchg
mov
scas
ret
add
scas
adc
lock
inc
outsl
and
lea
xchg
mov
cmp
inc
cmc
cmpsl
sti
fisubs
mov
push
imulb
mov
jp
hlt
push
push
andl
les
add
stos
ret
adc
xor
loope
call
aas
xchg
mov
pop
dec
xchg
mov
and
dec
or
call
adc
inc
push
ss
xchg
mov
xor
push
test
or
push
das
out
adc
adc
aaa
xchg
pusha
loope
jmp
xchg
lea
mov
adc
cmp
push
movsl
insl
and
ja
fs
arpl
xchg
int3
cmp
push
aaa
push
fwait
mov
in
xchg
clc
sub
jmp
jnp
or
mov
mov
or
dec
ljmp
xor
add
fstl
data16
jno
jmp
orb
jae
and
fnop
inc
mov
adc
adc
mov
pop
sbb
xchg
or
sbb
xlat
adc
or
mov
adc
or
cmpsl
sub
add
inc
lret
or
jns
and
add
or
pushl
sub
fidivs
pop
dec
pop
dec
fstpl
enter
mov
jno
out
add
ss
inc
insl
jne
pusha
stos
add
pop
mov
int
jmp
jns
pop
mov
pop
subl
aad
or
pop
cs
rolb
and
pop
push
inc
ss
mov
les
add
or
or
loopne
jb
mov
cltd
adc
xor
add
mov
mov
add
inc
xchg
adc
xor
inc
mov
jne
push
dec
dec
xchg
xor
push
mov
add
cmp
cmp
mov
mov
mov
and
dec
aad
repz
mov
cmp
pop
lret
outsl
movsb
add
mov
adc
nop
push
mov
push
adc
sub
inc
xor
popa
or
cmp
faddp
and
lock
push
sub
aad
mov
push
cmp
and
inc
or
shrl
push
dec
sub
lea
pushf
add
or
inc
lds
xor
ffree
cmp
sbb
and
dec
ret
pushf
and
push
rorb
lea
addb
mov
test
pushf
je
shl
add
mov
add
mov
pop
xchg
movsl
jo
in
jae
int3
aas
pop
les
sbb
adc
sub
pusha
jge
loop
out
pusha
lea
inc
cwtl
loopne
mov
and
xchg
imul
add
xor
xchg
js
mov
mov
je
adc
insb
inc
pushf
insb
inc
xchg
adc
das
loopne
and
jno
leave
mov
movsb
add
lea
mov
lds
adc
into
lea
push
out
int3
hlt
lods
jmp
das
sbb
sub
loop
das
pop
mov
clc
or
adc
add
or
gs
icebp
sub
popf
mov
push
add
push
pop
or
push
pop
daa
divl
movsl
enter
push
movsb
rcll
sbb
push
sub
lret
scas
inc
sbb
leave
inc
mov
lock
or
rorl
enter
or
mov
mov
jl
jnp
test
ret
mov
push
and
js
or
jns
and
es
mov
adc
xor
sub
xlat
push
inc
popa
popf
mov
mov
sub
mov
adc
dec
cmp
adc
inc
loope
xor
jmp
lcall
std
sbb
pop
cmp
add
push
sti
add
mov
test
dec
xchg
sub
scas
mov
jge
sbb
and
fcoml
or
push
sbb
outsl
xlat
sub
xor
test
adc
lea
sar
and
mov
mov
sbb
inc
in
lods
add
sub
notb
ss
mov
sub
or
into
push
sub
push
fucomp
sub
imul
adc
jns
jge
inc
add
jle
push
cmp
repz
xchg
shl
dec
and
lock
clc
ret
popf
adc
jge
xlat
popf
push
adc
shrb
jle
pop
incl
pop
test
pop
mov
add
jecxz
mov
ds
imul
sbb
mov
cmpsb
pop
cwtl
lock
xor
cmpsl
inc
rcrl
jb
and
or
lea
imul
sub
dec
pop
das
int3
xchg
push
popa
test
lods
insb
addl
dec
adc
js
push
push
sarb
jno
push
sub
jno
repnz
or
mov
adc
jl
fsts
pop
add
jmp
mov
mov
mov
and
sub
push
or
pop
jp
js
imul
nop
or
aas
dec
or
cmp
inc
jle
mov
and
lret
mov
mov
insb
test
pop
mov
mov
lea
sbb
mov
outsl
test
sub
fisubs
movzbl
jge
mov
idivb
ret
clc
jge
clc
lock
out
sub
sub
pop
jno
je
sti
xchg
outsl
test
cmc
sar
mov
imul
lock
mov
add
push
jle
out
std
jecxz
adc
inc
jl
jge
inc
jmp
ret
cmp
cmp
cmovl
into
ds
mov
add
repz
push
adc
sbb
or
jo
adc
sub
mov
js
push
test
pushf
enter
nop
adc
xor
and
mov
scas
sbb
pop
sub
adc
inc
adc
and
dec
sub
xor
call
fdivl
or
shr
adcb
es
mov
jecxz
inc
popa
int3
lea
adc
cmp
mov
mov
sub
push
test
icebp
icebp
push
jbe
icebp
call
and
xchg
xchg
clc
ret
mov
push
scas
lret
loope
add
or
inc
pop
add
cmp
xor
cmp
lods
mov
xor
addr16
or
and
aaa
mov
sub
xor
xchg
and
cmp
lahf
aaa
nop
inc
adc
mov
js
pop
jb
gs
addr16
in
adc
add
test
xor
xchg
fs
jo
push
mov
sub
xchg
and
sbb
and
int3
loopne
dec
aad
clc
sub
roll
xchg
dec
int
lea
pushf
mov
insb
add
sub
ss
lcall
stos
sbb
scas
cmp
xchg
and
lods
in
frstor
imul
mov
cmp
fs
add
mov
add
push
aad
std
popa
push
dec
mov
xlat
rolb
xchg
sbb
cld
adcl
pop
push
or
xor
jbe
cmpl
push
cmp
pop
aad
inc
or
dec
adc
popa
ret
cmp
andb
rolb
lods
mov
ds
and
add
fs
call
add
jmp
or
addw
inc
jo
pusha
dec
jl
rorb
movswl
and
adc
or
jl
inc
call
add
cmp
sbb
jmp
dec
js
jmp
jne
xchg
mov
add
das
sbb
push
xor
sub
add
lods
ret
cld
std
outsl
xchg
and
sbb
add
pop
xchg
add
pop
or
add
jp
call
and
leave
and
pop
in
xor
jo
in
nop
or
jmp
sbb
shrb
call
xchg
dec
jle
cwtl
sbb
sbb
cmp
cmp
gs
cmp
pop
inc
add
jecxz
pop
rorb
push
imul
sbb
out
cmp
push
addr16
loope
xchg
sub
js
pop
mov
test
cmpsl
jge
fs
adc
icebp
inc
fsubr
sbb
movsl
mov
sub
pop
jne
das
aas
movsl
subl
adc
or
mov
aas
jmp
std
or
push
loopne
xor
add
mov
xchg
icebp
aam
inc
sub
adc
test
push
mov
pop
xor
adc
or
or
push
pusha
test
mov
xor
dec
lea
jmp
mov
ja
cs
sarl
mov
fcoml
add
inc
pop
pop
js
divl
push
push
int3
popa
mov
je
add
and
setg
and
mov
idivl
add
rcl
sbb
xchg
pop
add
movsb
add
jne
push
xchg
mov
les
push
adc
enter
xchg
jne
insl
icebp
negb
ret
imul
movb
loopne
movsl
adc
or
pushf
jne
push
mov
lock
rcr
test
pop
leave
bnd
add
mov
mov
xor
pop
ret
xor
xchg
and
lea
xchg
xor
fwait
push
xor
rcrb
sub
das
rolb
fildl
out
fstpl
and
mov
loopne
in
jne
inc
inc
mov
mov
add
add
jge
cmpsb
dec
push
in
mov
add
jbe
inc
lea
xchg
xchg
push
fisttpl
sbb
mov
icebp
je
mov
adc
sbb
cmp
jg
icebp
sbb
movb
fildl
cmpb
rcr
sub
or
out
inc
add
jecxz
aas
mov
sub
out
dec
push
mov
add
cltd
mov
dec
loopne
inc
mov
inc
inc
xchg
and
std
inc
add
add
and
loop
stc
mov
xchg
arpl
hlt
add
inc
cmp
xor
sti
inc
or
push
add
daa
rorb
popa
or
inc
lret
adc
fistpll
push
inc
test
rcrl
popa
xor
aam
pop
lea
leave
aaa
popa
adc
outsb
lods
xchg
jle
mov
int3
idivl
inc
aam
mov
mov
inc
inc
jg
insb
nop
xchg
mov
pushf
fimuls
push
call
loopne
addl
cltd
mov
inc
nop
pusha
inc
push
bound
divl
in
xor
loopne
mov
adc
jle
loop
sub
or
cwtl
pop
jl
roll
outsb
fcomip
push
push
add
mov
push
xor
mov
movsl
fwait
mov
out
push
xchg
jne
mov
or
add
outsl
imul
fstpl
mov
std
add
inc
pop
sub
lds
push
xchg
push
cmp
orb
sbb
loope
or
cmp
movsb
rcrl
or
add
jmp
aad
push
and
dec
mov
adc
out
jne
xor
aas
lock
push
mov
sbb
mov
inc
cmp
add
mov
mov
ds
or
or
mov
fists
jge
xchg
pop
lret
loopne
arpl
outsb
test
in
insb
jecxz
dec
inc
cmp
movb
xor
enter
test
add
push
inc
add
push
daa
push
mov
iret
jp
inc
test
clc
push
or
dec
inc
ret
lock
push
add
cmp
jg
sbb
pmaxsw
sub
pop
stos
pop
or
cmc
adc
or
lock
mov
test
adc
or
xchg
adc
mov
rorb
pop
mov
pusha
push
xchg
xchg
in
jno
add
and
sub
iret
pop
dec
mov
jl
xchg
dec
repz
jmp
dec
sub
mov
mov
add
ss
xchg
imul
addr16
inc
addr16
xor
dec
sbb
orl
adc
repnz
mov
push
and
cmpb
jmp
or
dec
repnz
xchg
mov
repnz
rolb
test
pop
sbb
mov
es
js
add
or
xchg
shll
push
or
or
pop
xchg
dec
adc
pop
xor
leave
add
xor
inc
mov
roll
outsb
push
fs
push
add
dec
or
xchg
insl
sub
or
in
in
incb
std
inc
fstp
mov
push
fs
push
sbb
and
ret
js
loop
or
cltd
movsl
mov
pop
test
lcall
adc
pop
dec
fdivs
js
imul
dec
push
push
movsl
and
push
jg
iret
out
add
mov
addl
jge
add
cmp
mov
lock
push
arpl
cmc
push
add
lea
xor
js
loop
daa
nop
nop
add
adc
add
or
lcall
imul
shrl
repnz
cli
jae
sar
or
sub
xchg
sbb
out
sbb
test
outsb
inc
inc
and
lds
movb
jle
test
test
inc
in
dec
jmp
mov
add
addb
or
lret
add
inc
loopne
fmul
adc
dec
mov
lahf
sub
cmc
xchg
mov
cmp
jae
mov
subb
jbe
daa
addb
and
sbb
fsubs
lcall
clc
push
pop
fisttps
sub
push
jne
rol
and
sbb
shrl
mov
cmp
xchg
mov
jl
add
mov
daa
shlb
add
icebp
leave
adc
or
jo
gs
jne
mov
or
cmpsb
jne
mov
mov
sbb
pop
in
sub
add
adc
orb
sbb
jmp
jo
adc
jmp
pop
sbb
mov
and
out
sub
mov
lock
in
jne
xchg
inc
scas
jge
sub
sti
adc
xor
or
sar
decl
ja
loope
clc
lea
mov
and
or
xor
std
add
adc
cmp
mov
push
incl
pop
cs
testb
je
adc
mov
add
dec
inc
loop
test
jnp
jmp
adc
fs
mov
sbb
and
cli
addb
cltd
jecxz
or
jp
movsl
gs
mov
jnp
ja
xchg
rorb
psrld
lcall
insl
les
add
popf
fmull
outsl
and
push
and
aas
push
pop
mov
jo
ljmp
xchg
or
fwait
inc
lock
xchg
fucomi
pop
fsub
mov
and
shr
hlt
in
mov
and
xchg
enter
dec
stc
loope
out
in
hlt
lea
rcrl
mov
jge
mov
pop
lock
mov
push
loopne
xor
mov
adc
hlt
cs
adc
testb
mov
pop
imul
mov
aam
repz
cs
xchg
push
inc
adc
sbb
adc
insb
push
xchg
adc
rol
sbb
mov
mov
pop
inc
or
or
xorb
xor
lret
pop
jecxz
add
add
pop
mov
scas
push
jnp
subl
loopne
cmp
lcall
cmp
sbb
test
mov
and
sub
and
xchg
inc
jmp
inc
mov
push
lea
test
shlb
movsb
addl
in
or
inc
scas
in
adc
dec
es
dec
xor
test
into
aam
xchg
les
mov
add
xchg
adc
adc
pop
jns
ss
inc
pushf
push
clc
mov
mov
cli
cwtl
or
aaa
inc
ret
xor
ljmp
ret
jno
orl
aas
push
push
fimull
xchg
jo
aam
mov
jmp
in
xor
push
stc
mov
inc
jge
xor
out
inc
out
sar
xchg
push
loopne
cmp
push
fstpl
lods
popa
clc
shll
jb
mov
jns
pop
mov
xchg
mov
out
pop
and
jb
cli
dec
dec
xor
dec
lahf
mov
hlt
push
xor
add
add
aam
add
mov
mov
mov
inc
sbb
ljmp
outsl
outsl
testl
repnz
jecxz
inc
ret
mov
aam
jmp
cmpsl
sub
daa
or
add
push
paddb
sub
ret
mov
repz
push
cs
and
mov
xor
out
fadds
es
shlb
adc
cmp
loopne
fwait
xchg
xchg
aam
scas
pop
ja
pop
scas
in
push
dec
fisttpll
fdivl
and
enter
mov
xchg
loop
in
add
addl
in
xor
sbb
add
sub
mov
dec
xchg
cltd
add
aas
incb
mul
arpl
faddl
adc
mov
xorl
ljmp
daa
add
les
enter
and
or
sbb
inc
inc
xrelease
shlb
add
dec
loop
and
je
or
jmp
and
pop
sbb
je
inc
or
mov
inc
sub
je
movsl
sub
sub
je
adc
adc
mov
jp
add
jg
je
je
add
adcl
das
movl
outsl
int3
sub
pop
lods
and
nop
sbb
and
inc
fisubs
add
xor
xchg
or
daa
jns
push
adc
mov
aas
out
cmpsb
fnsave
add
rolb
add
popa
clc
adc
xor
daa
in
nop
sbb
add
jne
mov
xchg
jbe
mov
inc
js
aaa
inc
loop
mov
clc
cmp
jne
sub
in
dec
pmaddwd
movsl
ja
or
jl
imul
dec
mov
call
mov
popf
or
adc
js
imul
inc
jge
fbstp
adc
loop
loopne
dec
jmp
inc
pop
adcl
sbb
and
lret
aam
int3
icebp
sbb
jge
inc
repnz
icebp
xchg
or
stos
pop
adc
dec
or
ss
js
or
lahf
push
hlt
mov
xor
pop
pop
movsl
add
mov
cltd
idiv
xor
inc
cltd
ret
adc
or
pop
lock
fwait
or
movsb
lret
mov
rol
xchg
repnz
jns
add
push
inc
xchg
adc
jo
mov
gs
aaa
ret
pop
lsl
dec
dec
ljmp
ret
add
add
jne
out
shr
int3
push
adc
inc
jge
hlt
arpl
nop
test
inc
xor
xchg
cli
add
or
insl
add
add
push
add
and
sbb
daa
sub
mov
pop
xlat
orl
or
cs
adc
push
inc
fidivrl
sub
out
sbb
fisubrs
loope
std
jmp
push
lret
stos
inc
orb
ret
xchg
icebp
jl
xchg
cmpsb
aam
lock
or
sbb
out
shlb
dec
push
pushf
mov
ss
jle
cmp
pushf
push
scas
push
pop
rolb
fisttps
sub
outsb
cmpsl
push
lock
jge
push
mov
add
add
inc
rcr
pop
sbb
out
add
jnp
cltd
dec
jl
jge
ret
sbb
das
xchg
mov
xchg
in
hlt
dec
js
adc
adc
out
xchg
and
push
leave
test
and
sub
mov
pop
movsl
ret
lahf
adc
sub
int
cmovg
clc
inc
sbb
or
dec
loop
sbb
lds
jmp
adc
adc
jmp
xchg
popa
mov
sbb
cmp
out
adc
push
jge
add
add
add
fiadds
icebp
mul
sahf
ficompl
sbb
mov
push
ret
test
xor
and
insb
in
pop
cli
outsb
ret
jge
mov
dec
lret
into
inc
fs
das
das
jl
inc
and
xchg
xchg
mov
inc
nop
sbb
sti
add
mov
pop
les
lahf
sarl
neg
add
mov
jle
adc
mov
jns
inc
adc
gs
sbb
cmp
jl
mov
xlat
inc
je
icebp
inc
xchg
pop
lods
cmpsb
push
cld
jmp
in
add
mov
loopne
adc
push
adc
push
pushf
call
add
fwait
push
add
mov
sub
sbb
lcall
neg
cmp
or
or
ret
inc
lahf
hlt
and
int3
lea
inc
or
add
xchg
or
pop
clc
sahf
clc
cltd
xchg
push
pusha
xor
mov
cli
sbb
mov
and
fisubrl
dec
ret
out
test
rorb
dec
dec
mov
add
add
mov
stc
insb
pop
js
mov
outsl
mov
fmuls
insb
inc
add
outsb
cld
mov
in
or
push
or
push
icebp
dec
or
sbb
jbe
xor
or
sbb
add
push
cmp
mov
pop
add
sub
lods
inc
adc
mov
jp
icebp
movsl
mov
ja
adc
add
in
push
inc
ret
jl
dec
es
aaa
addr16
in
mov
ds
jle
xchg
mov
outsl
push
pop
push
sbb
es
in
dec
lock
push
push
mov
pop
or
and
jbe
cmp
lock
dec
sub
ret
lock
inc
cmp
adc
hlt
sbb
icebp
ds
inc
pop
ja
lock
xor
lods
dec
jb
inc
aaa
int3
xorb
jno
and
sbb
out
or
into
je
or
sub
mov
push
out
xchg
inc
xor
sti
nop
clc
lea
pop
rolb
outsl
aam
xor
test
or
fcomp
or
in
jge
pop
adc
mov
or
inc
dec
or
sbb
cwtl
in
je
xchg
movsb
lock
jecxz
inc
jae
cmpsb
nop
jmp
pusha
lock
mov
dec
lea
jo
call
loopne
ret
add
inc
sbbl
sbb
xor
mov
add
in
jl
pop
cmp
cwtl
jno
jns
cmpsb
out
dec
in
leave
xor
int3
fsub
lahf
xor
add
ljmp
jmp
adc
pop
pop
lock
daa
outsb
adc
dec
gs
add
jae
push
ficoml
int3
sbb
xor
mov
xchg
repnz
adc
cmp
cwtl
xchg
out
push
jp
or
bound
ss
sar
mov
mov
lea
and
xchg
loope
sbb
outsl
mov
call
in
rcrl
jbe
xor
xchg
loop
jp
mov
inc
ljmp
movsb
loope
cmpl
ret
jp
cs
xor
gs
fadd
enter
pop
dec
push
shlb
rcl
add
inc
das
sbb
testl
push
mov
mov
insl
aam
adc
fcoml
sbb
inc
adc
cmpl
and
push
scas
insl
sbb
pop
add
add
pop
dec
ret
push
test
xor
xor
int3
cs
in
adc
dec
cwtl
adc
pop
mov
pop
ljmp
insl
loope
add
fidivs
jl
test
pop
mov
les
aaa
scas
or
add
cltd
sbb
sti
sub
dec
add
dec
add
or
pushf
xchg
adc
pop
rcr
loop
fdivs
call
lret
or
fdivs
add
mov
inc
jnp
xchg
xchg
inc
shr
mov
cmp
imul
sub
mov
ret
inc
lahf
push
xchg
daa
loope
fwait
mov
ret
out
jo
test
adc
and
or
js
in
leave
cmp
inc
adc
aam
xchg
arpl
sub
jmp
test
je
sbb
pop
stc
mov
ret
lahf
xlat
dec
movsb
xchg
mov
push
add
test
xchg
jle
and
jne
xchg
int3
inc
pushf
mov
out
mov
mov
xor
sbbb
aas
in
xor
push
dec
inc
mov
imul
jo
add
dec
or
add
add
out
jmp
movsl
mov
sbb
aaa
ret
adc
jbe,pn
int3
pusha
cwtl
dec
add
cltd
cmp
jb
push
lock
lods
add
aaa
gs
sub
xor
aam
cmp
add
jle
out
jnp
add
push
push
cs
sbb
sbb
cmp
or
dec
lret
hlt
mov
or
sar
iret
mov
push
xor
push
and
sti
incb
add
adc
sarb
or
adc
outsb
xor
xchg
outsb
mov
jl
inc
rorl
mov
dec
xchg
es
inc
jmp
stos
mov
stos
test
jbe
inc
jbe
jg
pusha
sub
xchg
sbbl
or
xchg
mov
adc
daa
dec
cmp
pushfw
in
bound
mov
xchg
testb
adc
dec
sbb
js
xchg
or
nop
je
loopne
xchg
sub
in
insl
and
cmpb
pop
js
enter
int
cmp
jg
adc
loopne
push
pop
aam
push
push
psubq
mov
ret
cmp
push
cmpsb
loopne
sbb
xchg
jge
inc
jl
roll
idivb
fdivrp
dec
jne
mov
nop
mov
push
mov
sub
inc
mov
sbb
sahf
fmull
cmpsl
or
std
in
dec
xchg
pop
xor
mov
lods
inc
jle
sarb
dec
fwait
loope
or
adc
mov
call
pop
inc
pop
jo
add
fs
adc
xchg
and
cld
push
sbb
sarb
int
or
jle
jns
dec
xchg
cmp
adc
inc
fmull
fsubrs
lret
mov
cltd
xor
loope
add
andb
sahf
icebp
jmp
inc
add
loope
orl
cmp
xor
sbb
push
sbb
fcoms
sbb
pusha
xchg
sbb
rorb
mov
lea
arpl
imul
or
dec
add
test
or
mov
add
rcrl
sbb
jge
loop
sbb
std
nop
mov
sub
mov
add
inc
repnz
mov
cmp
out
inc
addr16
push
push
mov
sub
pop
dec
outsl
ret
movsl
jg
jne
sub
mov
jg
mov
mov
or
js
arpl
xchg
dec
fiadds
add
ljmp
dec
dec
or
adc
ret
ja
or
or
adc
rclb
inc
sub
mov
dec
repnz
pop
sub
sub
adc
pop
and
adc
stos
in
add
add
dec
push
out
pop
pop
je
dec
je
pop
test
sub
ds
add
inc
les
adc
mov
cmpsb
jno
or
and
fisttpl
inc
out
jmp
sub
push
and
int
adc
lcall
in
mov
adc
push
stos
sti
xchg
xor
mov
fldpi
xor
dec
xchg
mov
or
push
mov
push
pop
pushf
pop
or
stos
shrb
fwait
mov
or
pop
adc
or
adc
mov
dec
jbe
mov
and
lret
xor
adc
cmp
mov
call
jae
jl
inc
sbb
or
movl
xor
shl
lea
sbbb
sbb
daa
and
test
adc
inc
pusha
adc
xorl
sar
mov
add
pop
lcall
in
add
cmp
ficompl
fs
sub
shrb
sub
loope
adc
iret
mov
lret
das
sbb
loope
pushl
push
cmp
dec
mov
push
and
pop
or
lds
loope
adc
adc
or
cmp
mov
mov
xchg
add
inc
lret
test
or
out
mov
mov
add
pusha
mov
sarb
pop
lahf
sti
xor
pop
rcrl
add
inc
push
pop
lock
gs
fidivrs
in
sbb
clc
push
and
pop
in
loopne
or
leave
add
iret
repnz
fmull
and
sbb
les
dec
enter
pop
mov
int3
mov
fdiv
fcomp
js
inc
js
popa
cwtl
shlb
frndint
xchg
ret
sub
lcall
fisttps
jne
jmp
xor
ret
leave
and
sbb
lods
pop
push
jb
or
sbb
inc
clc
jge
clc
sub
pop
les
mov
add
ja
lret
jmp
inc
in
jle
or
clc
and
jg
mov
pop
daa
or
xchg
leave
enter
lea
sbb
fildl
xchg
dec
es
inc
or
fdivrl
sub
mov
outsl
push
dec
jo
outsl
xor
adc
dec
aam
iret
or
sbbl
fwait
out
ljmp
aas
jne
add
push
or
aad
push
aam
pop
mov
inc
mov
loop
testl
or
repnz
jl
ss
push
lea
inc
add
jge
and
jbe
push
pop
les
loop
ficoms
fldenv
jnp
sub
bound
and
add
dec
icebp
adc
jne
sbb
pop
cmp
push
std
addl
sub
lea
fwait
mov
int3
inc
pop
add
push
or
mov
sub
mov
mov
mov
mov
pop
add
in
or
push
nop
in
enter
add
push
jg
lret
rorb
mov
repnz
sub
pop
xchg
fnstenv
lods
dec
cmp
jge
mov
imul
jg
jge
mov
add
mov
xchg
out
pop
clc
cli
inc
loopne
jecxz
jge
add
or
rclb
mov
dec
jp
aam
sub
push
add
repnz
mov
int3
ficoms
jg
push
mov
fildll
xchg
jge
add
clc
add
push
xor
or
enter
cld
dec
out
out
shl
jns
push
and
in
jbe
xor
rcll
xchg
jl
ds
push
aam
push
lcall
shll
gs
push
dec
inc
pop
stos
jno
jp
setp
inc
rcrl
rorb
or
sbb
mov
cltd
add
sbbl
jl
dec
movsl
fisubs
or
mov
push
push
adcb
enter
sbb
in
adc
adc
lds
sbb
sbb
sbb
out
sbb
jbe
mov
test
into
pop
fldl
mov
inc
sar
mov
sar
loopne
dec
les
xor
outsb
les
jne
icebp
repz
or
mov
sbb
int
sub
lock
xor
mov
xchg
jp
dec
aaa
cmp
cmpsl
jl
aam
lahf
in
loopne
ja
nop
cmpsl
pusha
xor
and
popa
clc
xchg
rclb
mov
inc
jmp
sub
fwait
sbb
add
mov
xchg
dec
pushf
jae
mov
lcall
loopne
inc
mov
shlb
enter
mov
aas
and
dec
lea
test
ret
enter
in
or
jo
mov
or
mov
sti
pop
outsb
pop
jns
loopne
and
and
cltd
outsb
add
pop
push
jbe
cmp
test
mov
rclb
push
xchg
addb
mov
dec
ljmp
xor
mov
jbe
or
xor
out
push
cli
movswl
repnz
push
add
mov
sbb
ret
imul
pop
adc
sti
cli
inc
jo
cmp
sbb
mov
stos
pop
out
movsl
fdivrl
jne
rorb
xor
imul
add
cmp
jecxz
xor
push
jecxz
and
pop
push
mov
mov
andl
adc
sub
add
mov
inc
mov
add
sbb
cmp
xor
fwait
mov
pushf
sub
mov
add
cwtl
frstor
loopne
cmp
xlat
mulps
sarl
dec
sub
out
jbe
jne
push
fadds
lock
push
push
mov
lret
xchg
sbb
sahf
in
in
pop
aam
fcom
fdivs
loopne
adc
jns
pop
lahf
add
or
jno
jno
cmp
mov
inc
push
mov
jae
lods
pop
mov
dec
mov
rcrb
sahf
js
repz
cmpsb
xchg
mov
or
cld
pop
es
sub
enter
popa
cmp
pop
imul
lcall
adc
cli
neg
mov
pop
inc
jle
mov
lea
wrmsr
jge
add
fidivrs
adc
inc
nop
adc
jmp
push
mov
nop
loope
dec
jl
pop
dec
sub
cmpsl
call
lcall
dec
mov
push
adc
nop
in
or
sarl
sahf
inc
enter
sarb
inc
sub
scas
push
ds
inc
loopne
jl
xorb
mov
fwait
jg
add
add
cmpsb
push
rorb
mov
or
mov
lcall
test
pop
enter
out
or
add
fistpll
stos
int
dec
cmp
adc
or
or
push
mov
sbb
cmp
cmp
mov
and
lock
sub
cmc
iret
mov
and
push
push
and
dec
sub
jno
movsl
sti
lods
popa
popf
in
push
call
popa
push
movsb
and
stos
test
mov
sub
bound
mov
pusha
jo
push
iret
inc
sbb
sub
pop
pop
push
sbbl
or
dec
lods
out
shll
jge
cmp
decl
push
imul
es
sub
lds
or
push
enter
ret
add
pop
mov
jo
daa
adc
or
das
mov
pop
ljmp
pop
sub
fisttpl
push
jns
and
xchg
inc
mov
jo
adc
mov
repnz
sub
call
jge
xchg
jne,pn
scas
push
outsl
cld
fdiv
push
mov
ret
dec
test
mov
push
mov
pop
push
cmp
mov
sub
dec
rol
outsl
push
cs
push
add
inc
sub
cmp
and
xchg
jl
cmpsl
sbb
add
xor
popa
add
fs
movsl
shll
hlt
and
adc
jbe
sbb
adc
test
cltd
test
sbb
inc
cmp
adc
add
cmpsb
pop
test
call
bnd
jl
or
nop
pop
mov
imulb
fs
inc
mov
mov
adc
or
and
cmp
cli
cmp
jl
jnp
cli
jge
test
add
mov
idivb
pop
cmp
sub
push
adc
inc
ss
pop
dec
inc
ss
rcrl
and
mov
rcrl
rorl
repnz
stc
mov
sbb
pusha
mov
cwtl
sarl
add
jecxz
call
nop
insb
sbb
or
pop
cmp
jbe
dec
ss
or
jle
shrl
in
add
repz
sub
lods
mov
mov
xchg
add
adc
mov
loopne
inc
in
add
testl
sti
mov
adc
leave
subl
dec
pop
loope
jo
fldl
jmp
enter
sub
rep
pushf
add
add
lret
and
out
mov
inc
incb
flds
sbb
cmp
sbb
fwait
out
add
cmp
sub
dec
icebp
add
aas
scas
out
test
push
loope
jno
or
and
cwtl
jo
add
mov
push
loopne
subl
add
dec
inc
jo
sub
pop
inc
adc
xchg
in
ficoms
and
mov
es
rclb
add
and
add
ja
scas
sahf
out
dec
nop
icebp
stos
sbb
arpl
mov
push
dec
push
push
push
push
outsb
pop
adcl
fs
arpl
inc
mov
aaa
cs
mov
clc
test
test
dec
adc
cmp
xor
adcb
call
out
and
push
and
dec
roll
dec
jne
fcoml
popl
outsl
lock
push
xchg
mov
mov
dec
jb
bound
inc
and
sarl
jae
mov
dec
pop
dec
cmp
push
xchg
lahf
call
insl
dec
push
push
out
cmpsl
sub
xlat
jb
ffree
mov
cmpsl
dec
add
push
xor
fwait
les
sbb
add
pop
or
adc
daa
mov
or
dec
fiaddl
or
clc
lock
scas
mov
sub
arpl
test
jae
inc
test
pop
cmpsl
jns
pop
pop
aaa
cmpl
mov
fmull
xchg
repnz
jg
lcall
insl
clc
jmp
cmp
add
mov
pop
mov
push
adc
lock
stc
pop
dec
and
movsb
addr16
add
dec
loopne
sbb
inc
and
mov
pop
cmpl
cmp
jge
sub
cs
cmp
nop
lret
pushf
jge
imull
inc
dec
iret
ret
clc
dec
adc
ret
pop
jo
or
ret
or
ret
mov
mov
lods
mov
push
push
push
ds
push
jl
imul
or
mov
xchg
push
stos
pushf
mov
jmp
sub
dec
sbb
push
and
sub
pushf
dec
bound
cmpsb
das
push
mov
or
in
and
add
xchg
mov
xchg
fs
inc
pop
imul
scas
sub
mov
lock
out
sub
fistpl
loopne
add
lods
ljmp
dec
push
jmp
jge
fstpt
cmp
or
dec
add
ret
jno
add
mov
xchg
adc
xor
adc
mov
imul
shrb
dec
cmc
mov
test
push
stc
sbb
int3
inc
mov
mov
or
adc
or
enter
jg
in
sarl
sub
dec
inc
xchg
sub
sahf
in
filds
xchg
sbb
jmp
cmp
jnp
insb
add
mov
adc
in
mov
daa
mov
or
dec
cmp
sub
and
jg
mov
jge
xchg
movsb
insb
adc
and
sbb
mov
jo
adc
push
cmp
cmp
mov
outsl
cmp
adcl
bswap
mov
mov
shlb
and
int3
xchg
dec
pop
xchg
dec
adc
and
lea
cmpsb
pop
or
cwtl
dec
lods
mov
jp
push
push
rorl
decl
mov
orb
push
and
push
mov
mov
inc
sub
mov
sub
test
xor
xchg
in
icebp
push
or
popf
orb
adc
andl
pop
cs
xor
bound
or
adc
jmp
jae
jbe
push
and
cmp
lock
les
pop
clc
pop
mov
mov
add
inc
or
clc
push
inc
inc
inc
les
dec
xor
ljmp
jo
mov
xchg
adc
jge
and
sub
jae
sub
jle
xor
or
mov
or
adc
push
sub
pop
push
adc
or
or
sub
sub
jo
enter
adc
jmp
lret
add
cmp
aam
iret
aam
mov
cmp
mov
push
fldenv
or
add
xor
daa
mov
adc
push
adc
fidivl
mov
stos
cltd
frstor
add
inc
mov
js
cmp
mov
jp
loopne
dec
mov
ret
enter
xchg
inc
cmp
or
sbb
orb
dec
cmp
pop
add
in
or
jge
nop
daa
cmpsb
add
add
or
jge
mov
fstpt
pop
cwtl
lret
icebp
into
aad
jmp
mov
fimull
jmp
jmp
or
push
or
add
xor
xor
jl
push
and
pop
lcall
or
lods
test
pushf
xor
fwait
sub
sub
fstps
adc
mov
ljmp
push
cltd
stos
pop
fbstp
sbb
push
adc
dec
sub
push
pop
repz
ret
dec
jo
jae
add
push
or
and
rol
lods
xchg
les
rolb
and
mov
dec
repz
push
int3
insl
xor
mov
imul
cvtpd2pi
pop
or
ret
inc
mov
scas
add
cmp
loope
mov
lock
test
add
mov
dec
pop
lods
adc
pop
inc
push
inc
out
add
sub
xchg
and
mov
jne
add
cmp
pop
add
or
orb
fnstcw
cltd
xchg
adc
pusha
cli
cmp
ja
imul
jmp
xor
lods
and
mov
xor
adc
and
cli
jl
out
adc
stos
sti
mov
addl
sbb
test
add
add
jnp
jge
inc
and
and
or
jecxz
sbb
jbe
negb
roll
mov
cwtl
add
sti
sarb
mov
mov
movsl
fs
shlb
cmp
jmp
popf
push
fistl
adc
mov
push
push
dec
mov
xor
or
jo
add
scas
imul
dec
adc
inc
push
nop
cmpsl
pusha
ss
add
pop
inc
push
ljmp
inc
mov
inc
adc
int3
mov
outsb
pusha
mov
mov
loope
mov
mov
sbbb
gs
lret
lods
mov
or
xor
lods
sbb
cmp
mov
pop
or
or
ss
mov
push
dec
dec
xor
xor
xchg
lods
dec
mov
push
push
lret
outsb
push
xor
push
movl
or
js
je
test
in
push
mov
jl
repnz
xor
into
mov
cmp
xor
test
cmp
add
add
add
loop
out
add
jae
jp
sub
setp
sbbl
and
fs
add
xor
xor
and
into
sub
xlat
mov
cmp
leave
push
xor
xor
adcb
faddl
lods
mov
mov
jmp
sub
and
pop
jb
neg
inc
lcall
test
or
sub
imull
dec
xchg
or
fs
rorl
sbbb
shrl
inc
jl
push
add
sub
pop
dec
mov
insb
and
adc
mov
adc
loope
sub
dec
xor
add
mov
mov
arpl
dec
push
fs
stos
adc
dec
fdivs
add
movsb
sbb
loopne
je
mulb
inc
add
and
sahf
push
loopne
pushf
cmp
push
lea
fldenv
push
fsubs
rolb
dec
push
addr16
jl
push
das
imul
and
cltd
lret
xchg
mov
or
stos
je
wrmsr
xor
jecxz
xor
fmuls
cmp
aaa
rclb
add
stos
jl
dec
sbb
jl
add
dec
mov
sbb
das
stc
subb
dec
sahf
pushf
pushf
mov
add
mov
je
jb
icebp
mov
test
movl
mov
call
fcoml
lahf
xor
mov
inc
inc
sbb
push
mov
cmp
xchg
xor
nop
addr16
adc
les
pop
and
inc
sarl
insl
adc
add
or
test
ja
popf
adc
popf
mov
mov
and
dec
test
mov
cmpsb
mov
inc
js
mov
lahf
fadds
loopne
xor
rorl
jl
adcb
lods
sub
faddp
out
int
xor
mov
dec
je
add
mov
adc
je
iret
lock
dec
xlat
mov
jno
or
pop
jo
inc
pop
dec
jmp
pop
mov
adc
dec
push
or
es
inc
cmp
insb
bound
sub
sbb
sbb
sbb
jo
insl
add
xor
jo
jge
or
ret
shll
sub
shrl
pop
inc
out
dec
sub
push
sub
mov
popl
ret
add
sub
or
pop
out
mov
adc
rcr
xor
lds
push
imul
push
sub
pushf
xchg
sahf
adc
push
shll
fmul
or
xchg
js
adc
xchg
addr16
xchg
cmpsb
dec
cmp
sub
jae
cmpsb
dec
cwtl
cli
push
int3
cmp
shlb
mov
fidivrl
gs
add
movsl
adcl
enter
fwait
aas
sbb
fsubrs
inc
cmp
sahf
shrb
xchg
into
rorb
movb
out
adc
je
rcrl
leave
mov
loopne
add
xor
jae
lods
shll
push
inc
pop
lahf
rcrb
or
cmp
jecxz
shlb
cmp
fcomi
std
or
jl
js
jnp
dec
clc
push
cmc
or
outsb
js
sbb
pushf
and
jbe
or
stos
adc
sbb
loopne
hlt
xor
js
movsb
test
in
pop
out
push
push
popf
or
addb
sbb
xchg
arpl
imul
sbb
add
mov
jmp
fwait
popf
mov
dec
and
stos
xchg
push
mov
jl
xor
pusha
push
je
sar
ljmp
ljmp
add
cmp
ss
mov
or
add
push
xor
addb
sbb
mov
cmp
xor
into
lods
sbb
sarb
daa
mov
add
xchg
sahf
ss
loopne
push
fimull
xor
and
jo
jo
xchg
in
sub
and
mov
dec
jl
add
imul
in
inc
xchg
cmp
int
push
movswl
inc
fiadds
mov
dec
dec
movsb
sti
and
scas
test
sbb
xlat
jmp
cmpl
xchg
shll
lea
mov
sbb
shrl
add
pop
jge
cwtl
xor
cmp
sti
inc
fmull
fmull
mov
xor
int
fistpll
sub
mov
cmp
shl
jmp
mov
or
or
xchg
adc
adc
out
xor
mov
pop
lret
mov
cmc
add
std
xor
xor
push
sub
add
inc
cltd
add
cmc
mov
movl
mov
adc
push
and
rcll
mov
pop
add
push
jns
pusha
in
push
sbb
lea
inc
xchg
jl
sbb
cmp
fs
or
sti
push
jmp
fwait
test
xchg
push
mov
mov
xor
mov
sub
pop
push
jb
push
lret
mov
push
dec
inc
mov
stos
mov
aad
push
imul
mov
sub
pop
mov
xchg
enter
test
in
adc
push
lea
dec
repnz
cld
addb
outsb
pusha
sub
mov
xchg
mov
fstpl
or
mov
or
pop
popf
push
pop
adc
or
dec
fiaddl
inc
clc
push
mov
js
out
sbb
jne
dec
cld
xchg
scas
test
stos
loopne
cld
mov
lea
pop
and
sbb
test
incl
jp
mov
push
inc
jnp
or
mov
inc
dec
movq
imul
and
imul
les
jae
cmp
stos
mov
arpl
or
loopne
and
cmpl
add
jne
rcrb
fwait
movsl
insl
pop
or
les
rcr
int
pop
cli
cmp
jbe
mov
inc
add
or
pushf
mov
mov
enter
fldt
movzwl
xor
or
sahf
push
push
rolb
lcall
dec
mov
or
mov
or
adc
push
out
insb
lea
fst
hlt
xchg
xchg
setle
dec
roll
push
hlt
or
stos
jecxz
push
aad
ljmp
push
shrb
nop
or
pop
add
inc
rclb
xchg
or
sub
add
ljmp
jo
sub
jbe
dec
cmp
mov
rcr
fstl
fiaddl
inc
sbb
gs
loop
movsl
in
jbe
pop
je
out
mov
fiadds
mov
jnp
adc
out
aas
aam
inc
xchg
fadds
cltd
psadbw
fidivrs
lock
cmp
add
mov
sbb
mov
or
insl
or
stos
fcomps
das
lea
adc
in
and
dec
and
sub
paddw
xor
pushf
or
add
inc
sbb
jmp
fwait
inc
sub
loopne
idiv
jbe
lea
mov
test
add
xor
cmpps
add
sti
out
mov
roll
ja
in
pop
arpl
jecxz
in
cs
or
add
or
jb
mov
inc
in
mov
imul
cmpsb
mov
mov
test
std
aaa
push
movl
inc
loopne
and
or
outsb
imul
movsl
arpl
xchg
shlb
jnp
or
sarb
add
mov
xor
add
std
mov
adc
pop
mov
test
mov
jno
mov
out
jp
mov
dec
loope
imul
lahf
mov
and
xchg
ret
enter
std
add
jp
mov
pop
sbb
mov
enter
inc
and
xor
dec
or
or
jnp
sbb
and
push
rcr
cmp
insl
arpl
shll
add
pop
call
imul
sarb
xor
ret
cmp
adc
add
push
xchg
pop
jmp
xchg
or
and
std
push
xor
adc
and
inc
cmp
add
fmull
es
or
fwait
dec
or
test
jo
jo
or
dec
lahf
xor
push
sahf
xor
icebp
sbb
enter
mov
sarb
lea
mov
push
xor
sti
add
xor
inc
gs
pop
dec
mov
jo
fistps
fimull
xchg
insb
fstps
enter
mov
or
dec
and
inc
pusha
mov
cmp
adc
mov
xor
call
fmuls
adc
inc
fdivr
xlat
xchg
gs
hlt
pusha
shl
imul
rcr
lds
fsubl
and
cmp
adc
lock
xchg
in
rcl
fcoml
cld
int
pop
fisubl
jl
aam
adc
mov
out
jecxz
adc
xor
call
pop
mov
loopne
cmp
jns
in
adc
repz
in
loopne
les
and
or
insb
mov
dec
orl
inc
int3
flds
repnz
sbb
mov
aam
aam
shlb
pop
adc
popf
call
jbe
cld
sbb
inc
fwait
inc
or
in
stc
in
pop
and
shl
pop
sub
adc
call
jno
in
andb
push
mov
outsl
xchg
jmp
and
pop
pop
adc
jns
fnstsw
iret
aam
aas
xor
jne
pop
sbb
ret
out
pop
test
or
sbb
shlb
repz
outsl
adc
adc
adc
enter
adc
arpl
sbb
lahf
xchg
and
adc
das
and
inc
enter
mov
cmp
jns
fadds
and
cmp
add
mov
out
cmp
mov
test
and
inc
add
lock
cmp
ljmp
jg
inc
repz
aas
pop
sub
aam
mov
jne
daa
rolb
aad
push
sbb
test
xchg
push
add
repz
pop
arpl
mov
gs
pop
lcall
push
movsl
pop
lcall
popa
dec
popf
cmpb
xor
push
pop
jg
imul
stos
and
out
pusha
mov
loopne
mov
mov
insl
jne
enter
dec
lock
stos
sbb
dec
orb
in
inc
pop
and
sarb
rcll
dec
jmp
ds
mov
sbb
push
sbb
cs
or
sti
sbb
dec
pushl
mov
into
xor
adc
and
loopne
jns
int3
fwait
std
and
mov
and
in
sahf
cmc
lahf
js
fdivl
sub
mov
arpl
add
loopne
jge
repnz
lea
sub
mov
fmulp
sti
push
pop
pop
arpl
sti
shl
sub
or
xchg
ficomps
adc
inc
test
xchg
mov
lcall
fbstp
adc
mov
mov
fmull
or
lea
fistpl
push
sub
and
cmp
out
shll
and
cwtl
mov
loopne
push
sub
mov
jnp
les
bound
std
push
movsl
and
test
or
ret
adc
push
or
push
sbb
subb
dec
sbb
testl
xchg
gs
mov
and
test
or
add
lret
mov
add
push
pop
cmc
and
dec
loopne
leave
pop
pop
lret
loop
push
call
add
push
sub
dec
xchg
fdivrs
sub
adc
dec
inc
fnstenv
dec
add
dec
aas
sub
add
jno
and
jecxz
pop
movsl
jne
sbb
sbb
fisubrs
dec
addr16
enter
loop
or
sub
insb
xchg
popf
jns
or
xchg
movsl
inc
popa
push
pushf
enter
nop
xchg
in
or
xchg
scas
lods
int3
fdivl
dec
popa
mov
sbb
pop
jmp
stc
aad
pop
fchs
les
inc
in
lock
jae
fmull
fistps
add
aas
or
int
sub
cmp
xor
pusha
andb
adc
pop
rorb
adc
push
and
push
aaa
arpl
pop
pop
iret
push
cmp
or
mov
in
jnp
adc
icebp
shl
or
loop
lea
dec
out
jg
add
neg
lea
shl
not
cli
xchg
jle
add
dec
into
or
cmc
jecxz
shrl
data16
dec
lock
push
jo
xchg
test
hlt
push
mov
daa
mov
add
dec
repz
adc
or
hlt
mov
or
lds
pop
sbb
mov
mov
cmp
inc
call
dec
push
cmp
hlt
neg
and
imul
push
in
int
adcb
addl
ret
or
ja
cld
add
or
sti
jmp
mov
push
sub
xor
dec
popa
clc
add
add
daa
push
aas
nop
sub
ret
add
in
cmp
shrb
ds
fmull
add
ja
xor
stos
xchg
xchg
stos
in
aas
cmp
add
xor
movsl
xor
xor
loop
add
push
mov
add
sub
mov
mov
cmp
iret
lret
lret
lret
lret
mov
je
cmp
fcmovnb
sub
fucomip
and
psrld
aam
cmp
sub
repnz
pop
or
add
out
mov
bnd
test
pop
fxch
lret
imul
pop
lret
push
sti
sub
sub
adc
shll
mov
lds
sbb
in
xchg
stos
test
loopne
shrb
add
fucom
jns
cmp
dec
rcl
inc
mov
pop
adc
mov
ret
stos
push
or
sub
push
add
add
dec
das
lods
popa
push
xor
cmp
xchg
movsl
lea
movsl
xor
mov
xor
pop
lcall
loop
in
mov
push
shl
shl
sub
mov
into
sub
inc
sbb
jns
inc
popf
cmpsl
sahf
imul
pop
sbb
push
and
mov
ja
sub
pop
pusha
and
mov
sub
add
inc
subl
ficomps
add
adc
mov
loopne
cmp
pop
cmpsl
adc
or
sbb
xchg
clc
dec
shr
adc
cmp
adc
js
xchg
mov
lods
sti
jle
popa
loopne
pop
repz
orb
add
sbb
imul
nop
imul
mov
adc
jnp
dec
repz
adcl
jo
xchg
cli
aaa
or
inc
pushf
dec
adc
push
jp
push
push
pop
cmp
mov
enter
jne
ret
jo
pusha
or
cmpsl
jae
or
mov
pop
mov
ficomps
inc
sbb
int
or
push
leave
cmp
add
add
add
or
inc
or
mov
std
add
inc
sub
xchg
sub
pop
pop
cli
test
add
or
push
jns
mov
addb
cld
data16
pusha
pop
or
dec
jmp
add
arpl
adc
sbb
push
js
add
call
adc
or
dec
add
call
roll
stos
outsl
dec
movzbl
shl
inc
jns
dec
or
call
pop
and
popa
sahf
repnz
mov
mov
nop
inc
and
add
enter
sbb
pop
arpl
inc
sub
inc
add
ds
pop
insb
xchg
mov
xor
push
leave
inc
lret
mov
or
xorl
test
jno
cmp
add
sbb
push
jg
shll
xlat
and
cmp
je
or
mov
inc
fld
push
mov
and
out
add
pop
xchg
adc
mov
rcll
add
mov
iret
mov
sbb
pop
imul
add
int3
xor
sub
jbe
add
jno
adc
stc
jl
mov
push
or
adc
mov
cwtl
pop
dec
cmpsl
rorb
pop
mov
out
push
xor
mov
adc
or
stc
lods
icebp
jmp
push
push
push
jne
jo
inc
ds
sbb
stos
out
out
test
enter
cmp
fs
aaa
iret
inc
pop
jl
or
or
lock
push
push
and
rorb
add
and
icebp
push
and
ds
sbb
adc
push
lods
aad
adc
sti
xor
or
or
pusha
bound
jge
dec
int
in
push
jmp
mov
and
xchg
rcr
sub
popl
inc
or
inc
mov
inc
adc
leave
add
fstl
divl
add
inc
dec
adc
and
xchg
fldenv
nop
nop
dec
adc
sbb
xchg
popl
or
xchg
jnp
testb
adc
mov
stos
insb
leave
jns
adc
popf
or
push
fimull
mov
push
push
or
sbb
in
pop
imul
adcl
dec
inc
and
iret
jo
pusha
popf
mov
movl
in
dec
jo
inc
cmpsb
fisubrs
push
scas
loopne
call
fincstp
stc
dec
push
andl
add
clc
popa
push
xor
subl
cmp
add
int3
adc
pop
push
popf
cltd
shlb
out
popa
inc
push
fimull
mov
rol
xor
inc
mov
mov
add
push
dec
inc
jno
pop
arpl
jle
bound
icebp
cmp
xor
sub
cmpsb
adc
lds
sahf
sbb
and
cmp
xor
sbb
lret
push
adc
sbb
lds
pop
sbb
push
addb
enter
shll
and
and
es
sub
push
pop
jo
es
lcall
mov
or
xchg
push
adc
fs
add
xor
jge
jno
test
add
adc
adc
call
jl
scas
sub
pusha
and
rcrb
or
or
add
add
adc
mov
adc
cmp
add
push
lcall
loopne
cld
mov
push
lea
mov
push
aam
pop
xor
xor
mov
push
xor
ljmp
add
rcl
cmovno
jecxz
jo
or
call
inc
adc
pop
or
call
xchg
mov
sub
popa
inc
lcall
add
xchg
add
add
fstpt
xor
mov
jg
xor
daa
adcb
in
loope
jns
sti
jmp
dec
pop
push
push
into
xor
in
popf
and
push
pop
in
test
test
cmp
or
push
and
dec
inc
or
adc
push
std
inc
repnz
push
add
inc
jmp
loope
mov
adc
cld
or
sbb
les
es
int3
pop
loop
mov
push
xlat
push
add
mov
sub
movzwl
pop
or
adc
push
or
int
sub
or
adc
adc
lcall
mov
fiaddl
hlt
or
repz
test
push
add
inc
mov
cs
cmp
and
adc
cmp
push
je
adc
imul
aad
xor
fldl
add
add
inc
sub
add
add
dec
pop
pop
in
mov
jne
arpl
jbe
inc
add
inc
mov
xor
mov
lock
mov
ja
mov
cld
add
mov
cmp
js
enter
test
inc
adc
xor
daa
dec
add
add
std
sub
mov
faddl
add
add
push
mov
dec
pop
mov
jnp
inc
or
or
data16
sub
and
das
or
loope
or
mov
mov
movsb
outsl
testl
xchg
jnp
inc
jo
aam
mov
push
repz
inc
mov
inc
out
into
or
xchg
in
mov
repnz
jno
push
fwait
pop
adc
pusha
pop
inc
or
popf
imul
mov
gs
mov
out
sub
inc
cmp
je
fdivs
arpl
call
loop
mov
stos
add
mov
adc
pop
xchg
add
xor
adcl
pop
push
adc
adc
adc
inc
dec
aad
jmp
xor
xchg
pop
enter
fsubrs
add
cmp
xlat
pop
add
push
pop
and
ja
dec
mov
cmp
addr16
sbb
ror
test
xchg
and
jp
adc
bound
sub
add
jne
int3
inc
repz
dec
push
add
repnz
add
pop
or
and
xor
or
mov
adcl
or
adc
mov
test
je
dec
push
push
mov
mov
push
out
mov
shrl
ret
pop
outsl
mov
xchg
js
cmp
pop
loop
scas
adc
mov
insl
test
mov
jl
add
mov
mov
ljmp
mov
jbe
pop
shrl
movsl
lea
sub
pop
adc
or
jb
xchg
lcall
gs
rolb
ljmp
xor
call
jo
push
aam
fisttpll
jnp
push
das
fcomip
jne
inc
or
ljmp
mov
add
movsl
or
aaa
mov
aaa
and
inc
rolb
xchg
roll
jecxz
movsb
push
adc
and
cs
cmp
jo
xor
jne
fs
cmp
and
dec
loop
or
pop
pop
rorb
push
jno
adc
dec
jbe
pop
adc
data16
adc
jo
xor
xchg
push
inc
das
xlat
dec
pusha
addb
test
daa
push
insb
cmp
jne
fadds
or
dec
add
push
or
aaa
test
mov
test
push
hlt
cltd
lock
pop
pop
or
or
or
ret
nop
hlt
rorb
sbb
push
je
fsubrs
mov
cli
xor
jmp
arpl
ds
es
adc
out
pop
fistpl
dec
xor
push
inc
mov
stos
xchg
dec
lods
mov
mov
or
and
dec
inc
fwait
push
ja
adc
mov
inc
cmp
add
cmp
arpl
jmp
mov
add
or
nop
or
push
cmp
adc
rol
adc
int3
jmp
and
lea
cs
sub
inc
push
les
popf
pop
lock
add
inc
mov
inc
jb
xchg
notb
adc
xor
clc
push
or
in
sub
cltd
fs
enter
and
dec
inc
pop
in
dec
inc
push
add
xchg
and
and
pusha
in
xchg
pop
test
mov
mov
mov
adc
adc
lods
cmp
or
add
sbb
movzbl
inc
dec
cmp
cmc
push
incl
or
ret
add
lds
add
enter
dec
ja
sub
aaa
je
and
je
push
pop
mov
iret
jo
push
jb
dec
adc
mov
ja
sub
icebp
cmpsb
pop
dec
xor
push
lds
cs
ror
mov
ljmp
cwtl
inc
add
xchg
dec
pop
jo
repnz
mov
jo
loop
jo
imul
repz
add
add
aaa
adc
nop
call
or
add
xchg
dec
cli
int
jge
pextrw
inc
adc
pusha
sub
test
push
sub
cltd
and
mov
stos
xor
fxch
add
ljmp
dec
shl
mov
fsubrs
push
cmp
adc
inc
nop
jbe
aas
cs
inc
add
pop
push
push
cmp
out
jns
mov
test
xor
inc
cmp
xchg
je
leave
enter
cmpsl
cmp
adc
xchg
mov
or
les
dec
iret
pop
xchg
lahf
es
add
push
push
rclb
scas
insl
pop
repnz
xor
inc
subb
cmp
xor
push
inc
jo
mov
push
cmp
lret
cwtl
add
andnps
mov
add
cmp
mov
inc
es
shrb
sahf
add
fsubl
xor
mov
mov
pop
out
dec
popa
aas
push
mov
andl
dec
lret
pop
rcll
lods
in
dec
jne
sub
sub
push
jne
mov
sbb
add
push
dec
push
cltd
popf
xor
jne
mov
fdivrs
subb
aas
subl
inc
cmpsb
mov
xor
lods
scas
add
loop
shll
pop
or
pop
mov
inc
sahf
mov
add
pushf
das
xchg
jns
sbb
sti
sar
imul
sbb
xlat
jle
add
add
add
xor
xchg
adc
jbe
cmovne
fcompl
fidivl
inc
cs
loopne
fld
jg
push
push
std
movsb
sbb
mov
repnz
dec
je
add
dec
adc
sub
lret
add
or
mov
adc
mov
cltd
mov
mov
push
nop
pop
sarb
mov
mov
movsb
aaa
inc
mov
lods
test
shlb
adc
rclb
push
movsl
movl
mov
fildl
notl
or
inc
scas
cld
sbb
cmc
cltd
pusha
mov
or
push
fidivs
jl
dec
and
lock
or
push
push
cmp
and
cwtl
mov
jmp
xor
bswap
test
jle
subl
push
or
push
jae
mov
fstpt
jns
or
and
pop
cld
jns
fdivs
add
or
popa
dec
jno
dec
jl
cmp
cli
cmp
out
adc
xchg
cs
cwtl
adc
mov
dec
fimuls
jmp
mov
in
insb
or
and
sbb
adc
push
inc
lea
pop
rolb
add
sub
lahf
shrb
jl
inc
cld
jmp
adc
icebp
add
adc
sub
mov
add
push
push
xor
push
sbb
jecxz
mov
mov
mov
sub
push
dec
sbb
test
and
js
scas
mov
icebp
xchg
rclb
or
out
xor
and
roll
jl
mov
xor
jg
movsl
push
les
mov
test
stos
mov
and
das
sbb
add
sub
mov
xchg
jle
xor
cmp
popa
xor
xchg
dec
movsl
mov
sbb
sub
and
cmp
sub
or
sbb
out
jecxz
pop
sbb
fcomps
jbe
test
mov
xlat
inc
inc
fwait
adc
cmp
pop
inc
out
push
sbb
xor
xor
loop
dec
sbb
mov
std
add
mov
adc
movsl
fwait
push
mov
aas
xchg
test
sub
subb
jo
lea
add
dec
mov
jae
xchg
xor
jo
pop
push
sub
ficompl
insl
scas
shlb
pushf
xorl
outsb
or
and
dec
loop
dec
or
add
push
clc
push
dec
mov
push
or
push
movl
xor
inc
inc
jns
or
out
call
add
jge
or
jle
fs
sar
push
adc
icebp
add
mov
andl
rorb
insl
add
mov
and
divb
shrb
push
sub
push
push
popa
inc
jl
jo
iret
inc
stc
add
cmp
sub
repz
or
add
fcomps
mov
dec
adc
test
dec
xchg
adc
push
ss
jmp
inc
icebp
and
jns
sbb
pop
fs
cmp
pop
push
lods
or
inc
add
push
adc
mov
mov
mov
fimuls
inc
inc
inc
jns
out
or
dec
mov
or
mov
test
inc
xchg
dec
out
add
and
cs
adc
push
pop
jnp
jle
push
int
fbstp
mov
out
pop
cmp
les
andl
rolb
roll
rolb
jne
jns
aam
adc
pop
repz
and
cmp
adc
cmp
sub
cmpsb
imul
gs
mov
ss
jb
add
outsl
movups
flds
popa
outsb
ja
jmp
mov
inc
inc
sub
sbb
paddsb
add
push
mov
int
stc
ss
pop
aam
push
add
ss
pusha
xchg
add
pop
fs
out
fcompl
push
daa
dec
or
sub
jae
jns
dec
add
mov
sub
push
adc
sbb
loop
and
popf
sbb
xor
rorl
int3
popl
cmp
dec
outsb
leave
add
mov
xchg
or
pop
xorb
and
inc
jo
sub
add
or
std
dec
mov
and
or
xchg
cld
dec
push
ret
mov
jno
inc
les
push
xor
pusha
cld
add
pop
les
orb
call
xor
cltd
adc
pushl
sub
add
ja
orb
or
adc
or
inc
pop
or
iret
pop
divb
mov
aas
push
lret
add
push
jmp
dec
or
inc
cmp
sar
dec
and
add
dec
or
cmp
pop
cmp
or
insb
jge
js
mov
fnsave
sti
xchg
insl
jg
mov
add
or
add
mov
in
orl
pop
aad
into
imul
add
scas
lock
push
cmpl
cmp
out
in
push
push
incl
jne
inc
mull
cmpl
sbb
mov
cmc
iret
add
and
and
dec
or
clc
mov
inc
dec
xchg
jo
adc
lock
jge
sbb
push
add
int
lret
scas
mov
test
aas
lods
testl
cmp
lret
ljmp
movsb
enter
mov
adc
test
sub
add
lods
daa
sub
add
inc
add
xchg
xchg
add
adc
sub
or
push
enter
push
xor
or
and
or
sub
sbb
push
push
push
sub
xchg
ss
testl
es
add
in
and
sub
dec
loop
call
sub
test
mov
mov
jge
dec
adc
mov
fnstenv
and
fs
mov
pusha
hlt
pop
mov
cmpl
aam
fmuls
sub
sahf
addb
xlat
jnp
sbb
push
push
repnz
dec
add
mov
and
pop
mov
sbbb
mov
call
repnz
xchg
pop
push
add
sub
dec
fcompl
dec
scas
pusha
mov
cmpsb
in
je
rcrb
ret
mov
gs
sbb
and
lods
push
sbb
xor
mov
dec
push
cmp
cmp
push
jnp
sub
mov
mov
pop
adc
xchg
stc
jmp
les
xor
out
adc
dec
rcr
addl
sub
mov
cmp
mov
shlb
sub
int3
and
push
addr16
in
pop
ret
dec
and
jmp
out
adc
mov
jecxz
pop
xor
dec
scas
add
inc
pusha
fists
jb
cmc
push
mov
sub
or
push
cmpsl
cmpsl
adc
push
xchg
dec
adc
fldt
pop
mov
jne
fstps
or
and
lret
je
fstl
xor
mov
push
xchg
jle
testl
outsb
mov
inc
addl
ret
cs
pop
shl
movsb
inc
in
mov
pop
mov
cwtl
fildll
mov
adc
or
pop
pop
push
jb
pop
push
or
inc
adc
cmp
in
xor
push
and
aas
sbb
dec
inc
dec
bound
xor
loopne
inc
loopne
pop
adc
xor
out
xor
lds
enter
and
jo
les
mov
sarb
sub
add
mov
sbb
aas
pop
add
loope
loopne
aaa
mov
loopne
jbe
test
cmp
es
pusha
imul
xor
adc
jo
dec
add
xchg
or
test
mov
adc
add
ds
cmpl
push
xor
xor
inc
sbb
inc
popa
cmp
xchg
jle
les
add
rolb
lret
add
pandn
mov
aam
mov
ja
xor
push
pop
ljmp
adc
push
sbb
ret
movl
mov
into
jl
orl
add
push
out
xor
mov
xor
mov
adc
ljmp
adcb
ficoms
xchg
push
or
and
jle
sub
in
das
xor
add
sbb
jnp
mov
adc
pop
dec
or
jmp
mov
mov
imul
xor
push
xchg
les
fistpll
push
jg
test
aas
in
push
stc
gs
incl
xor
push
and
adc
cmp
and
iret
jae
xor
pop
or
or
mov
adc
mov
or
jl
push
push
xor
movsb
fimull
sub
and
jg
push
mov
and
in
lea
aaa
adc
add
je
sbb
adc
adc
loop
mov
and
mov
shl
xchg
sbb
cmp
repnz
or
sbb
fstpt
push
sbb
cmpb
pop
in
dec
xchg
mov
fmuls
mov
mov
mov
and
pop
rorb
jbe
ficompl
mov
adc
out
push
nop
orl
sbb
pop
repnz
dec
cmp
cmp
add
add
add
sub
mov
ret
movw
jns
mov
sub
shll
jg
dec
xor
fdivrs
enter
insl
int3
and
adc
roll
insb
pop
fmuls
cmp
ja
or
adc
or
inc
or
stos
xor
iret
loopne
int3
lahf
or
inc
mov
jnp
jle
aaa
jle
add
and
shlb
adc
int3
mov
push
and
mov
leave
mov
or
in
arpl
xor
sbb
shlb
mov
or
rcrl
adc
and
xor
test
add
jmp
loope
je
lahf
ret
je
ret
pop
dec
push
push
out
mov
adc
jmp
and
sub
and
sbb
cmp
popf
cmp
loopne
xchg
xchg
pop
adc
mov
cmp
mov
arpl
jns
pop
mov
out
sbb
mov
fs
pop
dec
nop
mov
mov
popl
mov
dec
xor
or
arpl
push
xor
sbbb
arpl
out
cld
pop
enter
pop
adc
push
or
call
stc
push
adc
adc
sbb
add
nop
lahf
or
insl
sbb
add
and
push
mulb
push
leave
or
aam
and
push
les
cmpsl
inc
pop
repnz
dec
sysenter
cmp
sbb
adc
enter
lret
jb
sbb
in
nop
int
push
in
in
call
bnd
fstl
jno
adc
jecxz
in
call
pop
in
icebp
mov
or
addb
and
or
pop
fistpll
mov
xchg
adc
pusha
inc
inc
sub
xor
test
je
scas
sarl
icebp
lods
or
sbb
je
movl
dec
xor
loope
add
ret
add
cmp
lret
mov
mov
mov
push
and
or
dec
mov
loop
adc
out
jmp
adc
inc
cwtl
or
outsb
inc
or
or
stos
add
jne
mov
ret
inc
fsubrs
cmp
xchg
pop
ret
mov
rcll
adc
mov
pop
ret
cmp
jg
mov
test
nop
mov
jecxz
sub
adc
push
fwait
xor
sub
int
mov
aam
das
or
jge
movsl
sbb
push
and
aas
xor
std
or
sbb
sbb
pop
adc
fisttpl
jne
and
jmp
test
add
imul
adc
sbbb
lea
sbb
mov
nop
cmp
dec
add
fists
sti
addb
add
sti
cmc
or
mov
push
and
aaa
and
sub
mov
test
sbb
inc
icebp
sub
jle
les
dec
add
push
clc
mov
sbb
aas
jne
stos
sbbb
mov
repz
scas
or
inc
cmp
and
cmp
push
pushl
pushf
and
andl
xor
mov
pop
loope
idivl
iret
add
xlat
les
push
sub
outsb
enter
mov
pop
mov
dec
jae
pop
push
jne
cmp
xor
loopne
lcall
cltd
gs
insb
insl
lods
sub
hlt
js
and
adc
adc
mov
jecxz
aam
out
push
dec
adc
jl
add
shl
add
mov
pop
clc
mov
add
pop
sbb
out
or
lret
sbb
shrb
rcll
jmp
cmp
add
dec
and
outsl
out
xchg
xchg
adc
jns
inc
dec
movsl
pop
cmp
addr16
add
in
and
ja
sbb
lock
fistpll
lock
mov
add
or
repz
pushl
or
pop
paddusw
sbb
dec
lock
add
mov
add
or
and
psrlw
daa
shl
inc
cmp
and
or
scas
fs
adc
add
loopne
xchg
mov
lods
jnp
push
mov
ret
fnstcw
push
mov
adc
mov
adc
mov
dec
push
ds
push
nop
cli
cmpsb
or
and
sbb
add
in
pop
ret
push
adc
movsb
or
adc
or
sbb
jle
dec
dec
push
mov
or
lea
shr
xor
sub
lahf
or
in
mov
imul
jecxz
push
aam
sub
mov
inc
sbb
outsb
mov
jnp
rorl
add
fwait
mov
mov
stc
add
or
adc
xor
dec
sbb
or
add
fdivrl
lahf
arpl
or
mov
pusha
cmp
movl
lods
aam
iret
cmpsl
xor
xchg
xor
or
mov
sbb
pushf
loopne
mov
cmpl
fdivrp
inc
sub
sub
aam
cmp
add
mov
lea
and
dec
or
inc
xor
data16
and
int3
js
jp
push
mov
mov
sub
out
mov
xor
xor
cmpb
subl
dec
arpl
add
cmc
lret
cmc
push
dec
inc
imulb
fwait
mov
sar
cwtl
movsb
add
psrad
sub
ficomps
or
arpl
add
popf
push
aad
add
and
subb
aas
nop
jmp
sub
loope
mov
or
addr16
push
orb
or
push
push
mov
repz
dec
inc
inc
call
imul
mov
jmp
es
sbb
cs
or
dec
movsb
rol
pop
lock
or
xchg
cmp
subb
loopne
xlat
and
js
dec
inc
stc
loop
push
add
and
sub
push
addr16
bound
xchg
mov
xchg
and
jno
and
js
and
xchg
adc
loop
inc
push
loope
rolb
and
inc
lock
movsl
inc
add
and
pop
sbb
insl
cmp
xor
sub
jb
cmp
cmp
sbb
call
xorb
sbb
add
push
call
into
fadds
sub
ret
and
fisttps
mov
or
lea
adc
pop
aas
jno
dec
xor
lea
add
daa
dec
add
jmp
daa
adc
mov
push
lea
lcall
mov
mov
mov
add
jbe
addr16
outsb
cmp
or
or
outsb
pusha
push
insl
pop
sti
shlb
add
rolb
fisttps
gs
pop
sbb
and
out
cwtl
mov
imul
pop
pop
fdivl
pusha
or
and
dec
push
clc
adc
jmp
xor
mov
push
xchg
or
add
cmp
and
fiaddl
xchg
shll
or
sbb
adc
push
or
in
or
enter
jmp
andl
mov
aam
pop
dec
in
lods
push
xchg
pop
dec
hlt
adc
subl
push
cli
dec
lock
lock
sub
pop
sub
cwtl
lcall
and
outsl
adc
push
mov
aam
jmp
dec
loop
mov
adc
daa
cmpb
neg
push
xor
js
pop
inc
enter
fwait
push
inc
and
sub
push
jo
xchg
inc
in
cmp
jg
lock
ret
pusha
std
loop
push
mov
xor
inc
xchg
sub
pop
jb
inc
ja
xor
adc
in
lret
add
addb
cmpsl
fcmovnu
or
inc
mov
jne
sbb
imul
cmpb
pusha
fs
mov
adc
popa
or
rclb
xor
sbb
xor
xchg
cmpsb
dec
add
pop
push
fistl
inc
sub
xchg
xorl
call
loop
ret
xor
hlt
mov
mov
sbb
bound
sbb
adc
pop
sbb
pop
mov
les
cwtl
adcb
xor
fwait
and
mov
jle
pop
cmpsl
mov
push
push
lcall
shlb
sar
out
add
cmp
mov
sets
mov
jecxz
inc
mov
push
pop
mov
pop
xchg
scas
jno
mov
cmpsb
pop
or
cmp
jns
mov
adc
or
adc
mov
jg
aad
pop
adc
or
out
aam
adc
inc
adc
pusha
stos
addr16
add
inc
sbb
rcr
dec
push
rolb
sbbl
push
mov
cmp
pusha
test
stos
adc
roll
mov
fs
cmp
and
dec
cmp
dec
ss
sub
add
and
and
inc
or
test
shlb
add
dec
je
dec
mov
adc
push
loopne
adc
xchg
add
int
inc
fidivrl
cmp
push
sbb
int3
xor
aas
and
add
sbb
and
or
and
push
push
nop
xor
ja
or
push
add
xor
and
arpl
push
ret
insl
push
inc
inc
inc
imull
aam
mov
adc
add
int
sbb
out
imul
or
adc
dec
dec
jge
arpl
cmpb
sbb
sub
sbb
adc
shll
or
or
fs
xchg
test
add
dec
inc
adc
adcl
jne
fsts
rolb
les
mov
mov
cmp
out
aaa
out
inc
test
xlat
adc
imul
addr16
cmp
enter
pop
mov
jno
call
cli
add
push
das
rol
mov
daa
mov
sbb
sbb
and
adc
sahf
lret
ret
bound
inc
adc
jo
loopne
test
sbb
adc
jbe
insl
fadd
sub
cwtl
and
jae
inc
incl
std
mov
dec
jge
iret
mov
and
add
or
je
or
jae
sbb
test
add
lea
cmp
add
pop
push
pushw
push
sub
adcl
mov
cmp
lret
pop
rol
add
repnz
aas
and
and
sub
xchg
fxch
popa
mov
sbb
ss
div
adc
outsb
or
stos
lock
pop
and
inc
rcrl
dec
adc
lret
cmp
and
xchg
inc
fistl
mov
cmp
or
mov
jnp
inc
or
mov
imul
xchg
sbb
sti
icebp
add
lock
push
jle
loope
add
sub
nop
xorb
and
and
adc
or
mov
outsb
add
xor
repz
mov
push
adc
inc
jmp
xor
roll
push
out
sbb
adc
adc
scas
or
pop
push
cmp
xorb
inc
cmp
popaw
push
inc
fadds
loopne
xchg
and
aam
lds
pop
sub
inc
add
sub
add
gs
rcrb
pop
lcall
das
jp
outsl
sbb
jecxz
insb
or
cs
nop
xchg
inc
jb
iret
push
hlt
add
pop
cmpsl
loope
add
or
jo
xor
leave
inc
fs
adc
inc
push
sbb
and
and
cmpl
nop
pop
lock
mov
add
or
dec
push
sbb
add
sbb
fistl
xchg
cmp
and
xlat
clc
mov
jmp
dec
loopne
sub
mov
push
xor
pop
inc
faddl
addl
subl
mov
ret
pop
aad
pop
aam
jg
ss
pusha
xor
cltd
out
or
fs
ja
mov
rolb
push
mov
jle
inc
rorb
or
lret
jmp
inc
sbb
cmovbe
cltd
bound
das
sbb
ret
or
sti
push
or
jcxz
xor
addr16
push
jg
adc
rcll
jmp
sbb
inc
andl
push
lea
fwait
mov
jb
mov
in
jb
sub
sub
cld
jo
test
inc
or
cmp
or
xor
out
popa
sahf
popa
jge
sbb
cmp
icebp
inc
out
sarl
loopne
mov
mov
lock
loope
loop
stos
and
je
fcmovnbe
sbb
mov
hlt
mov
xchg
leave
icebp
push
outsl
lock
and
popa
cmpl
mov
mov
sahf
xchg
adc
xchg
xchg
sbb
xchg
mov
jns
or
stc
adc
sar
sub
add
test
add
and
cmpb
enter
pop
psubsb
jmp
or
fcom
inc
daa
mov
mov
inc
jns
pop
pop
add
adc
dec
out
adc
js
bound
sub
xchg
inc
jle
shrb
rorb
popf
sbb
test
fsubr
and
test
sbb
or
sub
shr
or
xlat
xor
mov
rcll
in
inc
sub
scas
mov
movsb
sbb
clc
cld
pop
sub
outsl
sbb
lret
into
add
sti
xor
push
sti
sbb
and
fs
in
data16
mov
mov
bound
aad
mov
xor
js
sub
push
cltd
les
es
push
mov
inc
mov
inc
push
dec
loop
clc
mov
and
lock
or
and
mov
cld
cmp
jge
lods
shl
xchg
adc
cld
inc
hlt
push
add
mov
cld
daa
adc
push
or
sub
mov
jle
in
pop
les
cmp
or
mov
out
push
jl
pop
test
lea
call
aaa
add
loopne
pop
fs
fwait
sbb
jle
jnp
add
or
inc
pop
xchg
pop
or
mov
notb
in
nop
lods
cmp
mov
sub
add
mov
sbb
sbb
mov
pop
mov
jns
cltd
insb
push
mov
xchg
push
pop
sub
cltd
add
inc
cmp
insl
pop
mov
scas
xadd
mov
inc
imul
jne
push
add
out
hlt
cwtl
xchg
push
mov
or
dec
jno
inc
push
std
cld
push
pop
add
xor
push
call
inc
movb
adc
clc
inc
faddl
adc
sbb
and
rolb
inc
sub
mov
daa
sbb
or
mov
minps
pop
add
jae
int3
push
scas
jno
mov
fsubrs
enter
popa
pusha
lods
sar
pop
dec
iret
adc
repz
xor
inc
dec
or
enter
int3
pop
ljmp
add
adc
addr16
or
call
incb
rol
mov
in
pop
lods
add
and
aam
sbb
in
push
adc
sbb
pop
sub
add
ret
int
int3
jmp
adc
addl
fcom
xchg
push
inc
lock
js
dec
insl
insb
jmp
fcomp
outsb
incl
jge
movzbl
add
inc
inc
push
jl
inc
dec
jl
pop
mov
popf
shrb
jge
mov
aad
add
jg
mov
aam
scas
cmp
add
jge
or
jecxz
int3
pusha
push
push
ds
js
add
outsb
xlat
outsl
jo
dec
pushf
push
mov
iret
mov
mov
mov
sub
ds
leave
or
lss
mov
andb
xchg
dec
nop
outsl
jno
mov
adc
inc
push
jmp
ret
xor
push
and
xchg
dec
test
loopne
cmp
adc
call
fwait
icebp
add
sti
enter
pop
cmp
add
lds
loop
ret
clc
jg
push
or
push
jg
daa
lock
and
call
push
xchg
inc
adc
sub
and
xchg
push
add
cmc
jae
inc
inc
sbb
jge
cmp
jp
or
testb
fiadds
and
jb
inc
or
insl
xchg
jb
cmpsb
or
adc
jge
inc
cld
push
lock
lds
jnp
add
add
adc
mov
shlb
adc
and
jb
and
aam
or
adcb
aaa
cs
mov
jecxz
mov
das
pop
add
test
insb
test
mov
mov
jge
jns
pop
xor
sbb
or
xor
or
or
or
push
adc
addr16
test
sbb
pop
inc
movb
call
faddl
roll
fstps
aad
in
outsb
test
daa
cmp
lods
jmp
pop
add
sub
xchg
shrl
push
jp
push
adc
roll
pop
sub
adcb
dec
dec
xchg
dec
adc
fcoms
dec
xor
sbb
fistl
dec
inc
add
sbb
mov
dec
repnz
or
lret
roll
cmp
loopne
sbb
ret
daa
inc
inc
pushf
ret
aam
fcmovnb
xor
clc
out
test
mov
sbb
dec
icebp
sbb
enter
or
nop
inc
xchg
mov
daa
cmp
data16
cltd
shrb
fs
cld
cmp
mov
sub
mov
fwait
mov
stc
add
dec
in
add
and
lock
negb
xor
xor
repz
div
leave
dec
pushl
adc
and
mov
stc
clc
add
ljmp
dec
jbe
pop
xor
mov
mov
mov
jbe
mov
mov
lar
ja
cmpsl
sub
mov
imul
rcr
add
push
jns
jae
sbb
fwait
and
and
lret
cmp
jbe
test
pusha
and
cmp
inc
xchg
pusha
adc
inc
push
in
mov
jge
jae
fidivs
xor
xor
cmp
in
inc
fmulp
or
jnp
adc
mov
or
xor
sub
cmp
jmp
add
sbbl
push
add
jbe
xchg
sbb
add
shll
adc
cmp
inc
jns
cmp
in
int3
leave
sti
leave
sbb
call
mov
movl
data16
arpl
sbb
sbb
inc
adc
cmpsb
mov
test
movb
jo
add
cmp
roll
sbb
sub
adc
cmp
cwtl
inc
push
leave
pop
test
adc
cltd
inc
jnp
pusha
push
rolb
or
data16
pop
jle
sbb
xor
add
dec
aas
ljmp
shl
js
xchg
cmp
mov
add
filds
or
adcb
xchg
test
inc
jl
jb
or
ret
and
sub
pusha
mov
sbb
das
or
inc
scas
sbb
mov
sbb
repnz
cmp
dec
lods
dec
test
pop
nopl
fdivrl
inc
fmull
fmuls
cmp
inc
sbb
shrb
ss
or
inc
iret
lds
and
dec
or
in
jl
jnp
imul
or
xor
das
test
andb
js
sbb
loopne
imul
stos
dec
call
pushf
add
or
push
and
jl
enter
inc
std
adc
xor
pusha
push
pop
pop
inc
sbb
pop
repz
test
call
pop
imul
in
adc
add
push
cmpsl
enter
push
rclb
jbe
ds
jmp
call
sbb
xor
es
pop
sarl
sti
jg
dec
out
mov
sub
push
testl
xor
int3
and
sbb
adc
das
and
jge
xor
lcall
mov
pop
enter
xchg
dec
sbb
inc
or
xchg
adc
dec
jo
mov
sbb
inc
repnz
loopne
jb
and
fdivs
daa
inc
aam
shlb
daa
inc
jb
int3
int3
and
jl
dec
cs
dec
enter
sub
das
jo
push
push
lea
int3
jnp
shlb
push
or
in
fadds
pop
push
sbb
inc
and
or
push
push
inc
ret
adc
sarb
jmp
jo
xor
pop
scas
in
jge
sahf
fs
add
xchg
cld
lock
lods
shll
inc
sub
stc
fstps
dec
pop
push
dec
inc
sbb
push
push
xor
push
xor
sbb
cmpl
mov
clc
mov
xorb
sub
mov
or
sbb
mov
xlat
ret
add
dec
fidivrs
adc
dec
xchg
lods
jns
xor
in
and
mov
xchg
jo
add
jg
add
mov
mov
not
pop
or
pop
adc
dec
jbe
scas
add
push
and
lea
lcall
lea
or
push
inc
mov
or
jno
push
push
std
jle
xor
dec
xor
pop
pop
out
aam
std
mov
sub
push
lea
inc
sub
adc
and
push
mov
lods
add
xchg
add
add
dec
dec
adc
fwait
orb
loope
cwtl
push
fnstsw
mov
movsb
das
push
sbb
les
inc
and
addb
xchg
je
pop
hlt
out
adc
adc
push
xor
and
inc
rorb
adc
stc
xlat
imul
pop
jnp
repnz
sub
cmp
outsb
jnp
out
mov
xchg
and
sub
shl
or
adc
pop
cmp
lcall
adc
fidivl
in
sbb
adc
xor
insb
fcmovu
addl
mov
fisttpl
nop
jge
insb
mov
push
fbstp
mov
ss
cmp
adc
imul
pop
incl
or
add
pop
stos
sbb
movsbl
xchg
arpl
or
push
rdtsc
lcall
jecxz
adc
js
lods
popa
ja
xchg
rcpps
clc
jne
testl
push
test
or
sahf
pop
into
pop
cmp
cmp
in
or
inc
lock
aaa
sub
sbb
or
sbb
xor
mov
out
push
mov
sub
ret
adc
ss
push
and
push
xchg
pop
pop
inc
and
cmp
in
in
jne
mov
lahf
push
icebp
inc
shlb
inc
mov
push
sbb
dec
pop
rolb
cwtl
lods
push
add
push
shlb
jle
icebp
dec
push
and
adc
andb
xchg
jae
ror
xchg
rorb
jmp
stc
adc
mov
adc
sarl
add
sub
push
sbb
pop
add
or
fdivr
daa
xor
pop
hlt
loopne
push
jmp
jle
cmp
jle
and
push
xor
jae
push
cli
mov
adc
icebp
fildl
xchg
out
xchg
and
inc
or
into
rolb
mov
sbb
adc
sarb
push
dec
aas
incl
dec
pop
decl
or
inc
add
push
test
push
mov
adc
xchg
mul
je
adc
inc
mov
add
mov
adc
mov
cmp
and
add
pop
fcoms
loop
add
mov
xor
fdivl
pop
icebp
jnp
inc
add
adc
neg
add
in
lret
loope
not
or
icebp
cmpsb
add
pop
push
add
insl
jecxz
push
or
mov
bound
imul
cmp
sar
std
or
and
divb
adc
and
add
jns
int
sbb
sbb
sbb
sbb
dec
mov
mov
dec
pusha
lock
adcl
cmp
cmp
jno
lret
xor
adc
arpl
inc
xchg
sbb
xchg
mov
mov
jmp
sbb
inc
ja
lahf
mov
jno
in
fdivr
xor
stos
cltd
and
and
sar
outsl
cmp
xchg
mov
sahf
push
inc
sbb
subl
add
jno
loopne
adc
lds
pop
fisubs
and
dec
add
jecxz
test
pop
arpl
aas
or
and
out
sahf
cmpxchg
int
jg
xor
pop
movsb
or
outsb
daa
jge
add
in
negl
sbb
or
mov
nop
inc
xchg
mov
mov
adc
imul
cmp
push
or
sbb
dec
xchg
and
inc
pop
aam
sbb
and
inc
or
pop
sbb
push
out
adc
aad
jge
add
call
or
jle
pop
jle
or
dec
inc
and
xor
sahf
add
iret
jne
or
and
mov
sbb
lret
test
addb
icebp
fnstcw
mov
push
jp
adc
mov
addr16
inc
pop
rorl
mov
out
jae
in
incl
test
enter
aaa
sarb
inc
cmp
mov
pop
mov
or
in
repz
iret
xlat
addl
addb
andb
inc
loop
cmp
aaa
in
scas
mov
les
xlat
mov
js
jnp
pop
sbb
jno
mov
icebp
aaa
stc
push
add
incb
lea
jmp
or
enter
xor
pop
pop
sbb
pop
stc
or
enter
into
xchg
sti
adcl
pop
add
sahf
movl
or
mov
and
adc
cmpsb
inc
cmpsl
push
call
pop
out
es
repnz
into
rcrb
dec
cmp
loope
xlat
dec
add
pop
adc
ljmp
mov
push
mov
js
sub
cmp
sbb
stc
cmpb
popa
shrl
mov
neg
mov
mov
xchg
add
dec
imul
daa
sbb
jo
int3
test
fidivs
dec
dec
sub
sti
add
jmp
jge
mov
cli
and
incl
aad
pushl
sti
in
adc
nop
add
lea
push
ja
jge
sbb
fcmovnb
sti
daa
sti
mov
lds
mov
and
sub
loopne
lods
lret
or
cmp
sub
sbb
sub
pushf
or
dec
push
enter
or
xor
pop
and
cmp
sub
dec
lcall
ret
inc
ds
add
sbb
mov
out
mov
int3
shll
jae
and
loopne
push
sbb
into
dec
sbb
fimull
ljmp
flds
fadds
fstps
push
bound
sahf
idivb
sbb
add
sbb
mov
adc
or
daa
or
ja
mov
adc
pop
cmp
sbb
lcall
fxch
dec
imul
sub
push
and
ss
fisubrl
and
sbb
fs
adc
jge
sub
sub
or
xor
sub
sahf
fldenv
pop
or
ss
mov
adc
rcrb
push
std
in
mov
rcrl
mov
flds
mov
fmuls
and
sub
dec
imul
sbb
inc
inc
pop
cmp
inc
fs
cs
lcall
adc
cmp
xorb
adc
jo
xor
nop
mov
orb
adc
out
outsb
stc
and
rcrb
mov
add
xor
mov
xor
aaa
add
shll
lcall
lcall
pusha
and
mov
dec
lret
jmp
adc
mov
cmpsl
push
sub
movsl
aas
xlat
lock
push
adc
cmc
popf
lods
pop
jmp
bound
push
push
pop
pusha
pop
repz
out
sbb
sbb
xchg
or
jnp
out
call
inc
xorl
or
jns
adc
movsl
ss
adc
dec
xchg
ss
mov
fstl
pop
sbb
dec
js
outsl
xchg
pop
es
and
insb
inc
cld
ds
lea
imul
movb
and
dec
cmp
lea
inc
fwait
call
sbb
xchg
xchg
sub
xchg
in
loope
or
loope
and
add
stc
push
sar
inc
dec
call
mov
and
mov
adc
dec
xchg
push
xchg
mov
xor
mov
sar
rolb
lea
mov
cli
addb
test
movsl
loope
inc
popf
popa
xor
sub
shl
inc
fmuls
mov
inc
cmc
dec
sbb
push
movsbl
clc
in
push
lea
jp
aas
xor
inc
or
mov
je
and
ss
dec
daa
in
mov
imul
cmpb
lret
lock
fs
pop
xchg
test
repnz
ud0
adc
adcb
or
daa
lock
sbb
subb
adc
aaa
add
stc
aaa
adc
jne
jg
or
mov
movsb
or
dec
adc
lock
inc
pop
add
or
jge
sbb
mov
mov
notb
mov
pop
data16
jo
mov
test
stos
push
dec
jae
push
adc
jo
add
cmovp
popf
mov
pop
push
dec
cmpsl
cmpsb
test
push
shrl
ss
sbb
push
cmpsl
push
in
jae
insl
and
pusha
imul
push
cmp
mov
fimuls
dec
loop
sbb
inc
lahf
incb
idiv
or
inc
pop
push
popa
in
cmp
adc
cmp
pop
iret
mov
add
int3
lret
push
push
add
aaa
into
aam
or
in
in
pop
mov
add
adc
loop
lret
push
inc
dec
xchg
cmp
jle
push
add
mov
mov
add
xchg
das
add
dec
mov
inc
adc
sub
jnp
lock
cmpsl
mov
inc
mov
push
xchg
test
gs
xor
add
pop
add
lahf
orb
xchg
xor
push
outsl
sub
outsl
mov
mov
mov
rol
push
cmp
and
adc
adc
dec
adc
fcoms
adc
pusha
addr16
mov
ss
lcall
lea
popf
addr16
scas
or
add
or
movsl
add
jne
mov
pop
adc
sub
movsb
push
sbb
fists
sub
and
push
lret
fmuls
mov
pop
ret
mov
lea
lret
repnz
cli
sbb
xchg
sub
in
mov
shrl
dec
mov
mov
lea
repnz
popa
sbb
insb
mov
sahf
das
or
add
jl
rorl
xchg
add
or
jno
je
jno
adc
xchg
jge
shl
add
and
xchg
pop
aaa
aad
xchg
sub
ficoms
call
cld
int3
xor
sbb
adc
les
xchg
mov
inc
jb
sub
xor
mov
add
cmp
outsb
or
shlb
dec
mov
inc
mov
stos
pusha
fsubrs
cmpsl
add
jp
hlt
shll
stos
inc
mov
rcrb
popa
repnz
or
jbe
insl
or
popf
mov
imul
repz
mov
jl
les
cmp
loop
pop
lahf
adc
push
call
mov
sub
rolb
rolb
adc
dec
cli
les
add
repz
mov
xor
mov
dec
sbbl
adcl
and
mov
out
sahf
adc
fs
fwait
lods
cmp
aaa
pop
lea
xchg
jbe
das
jo
test
negl
xor
push
cli
adc
test
and
mov
lods
daa
jmp
test
add
arpl
mov
in
cmc
loopne
cmp
movl
mov
outsb
iret
or
and
test
dec
ret
incb
lcall
dec
dec
xor
scas
inc
cmp
jl
ret
je
mov
shll
push
dec
lea
mov
out
or
mov
in
test
cmp
push
mov
mov
rorl
xchg
adc
repnz
push
cmp
adc
push
mov
lock
shl
inc
rcll
adc
xlat
add
daa
insl
push
incb
movsb
movsb
push
jb
sarb
xor
decb
jle
ret
dec
dec
jl
mov
add
incb
addb
decb
cmp
jmp
add
int3
fcmovnb
jg
rcrl
dec
cmpb
sbb
pop
adc
push
inc
or
lcall
neg
testl
add
push
inc
inc
and
ss
ja
inc
movsl
pop
aam
sub
cmp
add
pop
aam
mov
inc
dec
aas
or
cmpsl
xchg
pop
fwait
adc
and
jp
adc
test
ja
out
push
sbb
iret
enter
push
mov
mov
lods
sbb
sbb
mov
mov
jne
add
mov
adc
pop
outsl
sub
out
push
insb
shlb
xor
inc
inc
mov
ss
pop
out
xchg
arpl
test
adc
sbb
stc
or
push
sahf
arpl
jns
ja
xchg
subl
push
mov
mov
lods
aam
cmp
mov
dec
clc
clc
mov
xorb
fs
or
out
cltd
dec
insb
push
add
add
or
sbb
pop
repnz
fs
inc
add
push
nop
shrb
shrb
jns
decb
xchg
rorb
inc
icebp
testl
push
gs
popf
lahf
dec
push
sub
pop
sbb
adc
outsl
and
mov
and
fs
xorl
mov
xchg
push
test
adc
inc
push
cld
loope
xchg
add
jl
fs
imul
xchg
insb
push
xchg
xchg
pop
ficoms
fs
cmp
inc
or
add
push
xchg
pop
in
pusha
testb
test
add
pop
add
dec
out
fld
push
mov
inc
inc
push
ja
jl
addr16
js
in
cltd
jg
jg
dec
jne
je
out
pop
and
xchg
add
pusha
push
sub
add
add
fisttps
ja
je
xchg
pop
outsl
popa
int3
push
adcb
or
addr16
adc
rcl
js
js
scas
ret
lahf
rorb
xchg
push
fisttps
inc
idivb
and
cmp
rclb
popa
xchg
xchg
cmp
mov
movsb
cmc
or
xor
mov
add
mov
in
add
nop
jbe
sbbb
fsubs
push
cmp
add
sub
pop
sbb
and
push
sbb
nop
add
nop
int3
cmp
xchg
in
fwait
imul
cwtl
sbb
xor
or
cmpb
faddl
stc
xor
or
mov
mov
push
and
mov
mov
ss
mov
popa
push
inc
inc
xor
push
imul
mov
pop
xor
sub
cs
out
and
or
add
dec
psubsb
push
fs
mov
push
nop
push
inc
shrb
cmp
dec
and
or
fiadds
dec
inc
iret
and
and
test
or
push
das
jmp
insl
push
test
test
sbb
cmovle
xchg
popa
mov
mov
insb
pop
jns
mov
adc
cmp
test
or
scas
or
inc
ficoml
out
pop
and
les
cwtl
or
xchg
sub
gs
outsl
inc
xor
jo
rolb
xchg
inc
inc
inc
inc
push
mov
pusha
icebp
xor
add
sbbb
shll
add
xchg
adc
sbb
xor
enter
and
in
je
out
mov
sub
outsl
pusha
inc
in
xor
pop
lock
mov
roll
pop
les
and
and
mov
push
or
pop
and
loopne
dec
mov
sub
inc
fdivs
inc
cltd
push
int3
pop
loope
mov
adc
jne
sbb
int3
push
enter
ja
imul
scas
mov
push
push
mov
and
jle
aaa
and
les
adc
mov
je
cld
push
jbe
jo
and
icebp
pop
or
inc
jmp
pusha
xchg
and
lock
and
and
outsl
xchg
lcall
sbb
sbb
pop
imul
fiadds
fwait
rol
xor
mov
jbe
jo
es
leave
sbb
les
ret
pop
cmp
fmuls
cltd
mov
xchg
fadd
insl
add
cmc
push
inc
add
cmp
out
or
insb
jne
fildl
and
imul
outsl
jne
data16
loop
mov
je
rcll
mov
enter
jne
jmp
leave
or
sarb
fadds
jne
xchg
mov
lock
daa
movsb
out
mov
push
pop
adc
insl
cmp
jbe
popw
pmuludq
dec
xlat
inc
inc
sub
xchg
jb
add
lock
cmp
xchg
sbb
cmp
mov
pop
jne
mov
adc
scas
xchg
add
pop
jno
orb
adc
shll
xchg
faddl
or
sub
push
adc
sub
cs
fs
outsl
dec
cmpsb
inc
add
rclb
push
cmpsl
into
or
or
test
adc
pop
push
popf
and
or
jmp
push
iret
jns
insb
and
cwtl
mov
push
xchg
aaa
fldl
lock
and
popa
jbe
imul
mov
popa
insl
jae
adc
add
iret
cmpsb
orb
imul
imul
fisttpl
pop
cmp
pop
ljmp
cmp
or
inc
pop
jbe
mov
pop
cmp
add
jge
add
outsb
mov
mov
jl
add
and
fdivrl
and
gs
adc
xchg
les
leave
and
bound
push
push
popa
xor
or
cld
jae
dec
cmp
dec
dec
daa
dec
ret
leave
mov
daa
or
pop
dec
jae
icebp
fidivrl
mov
adc
add
xor
and
cmp
push
xor
push
xchg
pushl
outsb
push
gs
jo
popa
in
pop
fs
sbb
sarb
add
scas
icebp
push
sub
fistl
in
inc
pop
pop
adc
adc
cld
xchg
in
mov
jne
insb
push
lret
jne
fimuls
or
mov
aas
cmp
push
add
inc
clc
adc
cld
add
inc
dec
xor
add
add
xor
pusha
popa
sbb
divl
or
sub
xor
jl
add
ret
or
sbb
push
popa
popa
jmp
imul
aam
cmpsl
xor
sbb
jecxz
dec
ja
cmp
aam
test
or
inc
push
adc
xchg
out
jnp
push
popa
int
inc
mov
fwait
adc
inc
ret
dec
sub
add
sub
test
es
hlt
add
dec
sbb
lock
cmp
push
daa
aam
sbb
or
sbb
adc
and
pop
cmpsl
add
xchg
push
push
add
or
pop
add
xchg
mov
test
mov
mov
add
xor
scas
xor
repz
push
mov
dec
pop
aaa
jae
ret
xor
add
or
cmp
push
mov
adc
jb
or
ret
xor
mov
xchg
mov
or
je
gs
es
gs
jne
adc
fcoml
mov
mov
adc
and
pop
adc
dec
xchg
dec
mov
and
lock
pop
cmpsl
dec
imul
pop
push
mov
cmp
das
push
jmp
push
sbb
mov
arpl
les
adcb
dec
jnp
jg
in
xor
inc
add
daa
inc
inc
xor
inc
inc
ss
jns
or
jb
jp
bound
xchg
adc
pusha
jp
pop
repnz
les
push
inc
cld
pusha
inc
pop
cmpsl
xor
mov
das
mov
fwait
loopne
add
repnz
pop
nop
mov
call
call
add
pop
andb
sub
test
pusha
movq
sub
sub
addr16
and
mov
xlat
push
fstpt
add
je
mov
add
sub
add
aas
sub
and
dec
push
inc
mov
push
cmp
mov
add
jmp
inc
data16
aaa
daa
sub
or
arpl
pop
lods
and
and
outsb
dec
popa
bound
dec
jnp
jne
les
roll
mov
sub
or
popa
out
jmp
inc
push
jo
int
enter
mov
xchg
cmp
sub
jmp
sbb
sbb
xchg
pop
mov
and
jge
adc
cltd
andb
aaa
enter
cli
movsl
xchg
mov
pushf
xor
pop
in
sub
or
push
add
arpl
pushf
je
add
rolb
test
mov
inc
jl
push
mov
push
test
inc
divb
xor
push
inc
and
mov
dec
add
insb
inc
int
mov
add
add
insb
adcb
repz
adc
idivb
and
inc
fadd
inc
dec
adc
lcall
push
inc
je
cmp
das
fs
and
outsb
arpl
adc
decl
inc
outsl
and
and
push
pop
loopne
xchg
xor
cmp
or
roll
xchg
lret
mull
xor
fnsave
fidivs
fbstp
mov
loope
loop
jecxz
cs
lret
in
cmp
popa
out
out
call
pop
jmp
xor
addr16
cs
lret
in
push
lock
lret
in
mov
hlt
outsl
cmc
jo
mov
divl
jae
je
jne
lret
in
sti
jbe
ja
js
jns
jp
pop
dec
or
jle
stc
and
and
sbb
sbb
sbb
add
sbb
cmpsl
dec
jo
xchg
mov
pop
and
pop
xchg
adc
outsb
leave
pop
jg
push
and
cmp
lea
leave
or
mov
push
das
dec
hlt
mov
jge
lods
je
aaa
lock
inc
xor
cmp
cmp
and
or
cld
inc
cmp
jno
leave
xor
and
out
push
cmp
aas
addr16
cmpsw
xchg
popa
and
gs
pop
and
and
int3
mov
imul
ss
push
inc
imul
mov
inc
ja
jae
lea
jne
inc
fnstsw
outsb
jb
inc
gs
imul
js
jo
jp
mov
push
fstpl
inc
and
and
jle
xor
and
inc
and
mov
es
and
popa
cmp
adc
aad
add
and
in
xchg
dec
ss
sbb
mov
lods
push
scas
outsb
push
aam
sti
push
add
into
movzwl
sub
pop
adc
int
push
sarb
push
jl
fistl
mov
dec
add
int3
popf
pop
mov
enter
daa
push
enter
mov
lcall
or
and
rol
cltd
mov
mov
movsb
sbb
fstpt
sbb
add
inc
cs
mov
nop
mov
jb
push
lods
js
nop
data16
test
sbb
sub
popa
ret
cs
pushl
pmuludq
fcoms
in
data16
sub
stos
adc
mov
cwtl
outsb
xor
lcall
jb
and
cwtl
mov
sbb
pushf
pushf
ss
or
inc
adc
jns
xchg
pusha
xor
xchg
nop
nop
inc
push
sbb
cmp
js
mov
aad
mov
dec
sahf
fidivl
cmpb
in
test
lea
insb
push
icebp
push
adc
add
js
adc
dec
and
fisubrs
addr16
in
mov
insb
imul
xchg
push
fisubl
pusha
pusha
and
pop
fidivs
bound
pop
mov
inc
pop
add
push
or
in
xor
or
mov
xchg
imul
push
pop
test
test
pop
push
mov
adc
ret
sub
push
fcoms
add
loopne
dec
cs
inc
in
cs
inc
inc
imul
mov
aad
iret
xchg
icebp
jne
out
or
inc
inc
lock
mov
pop
cmp
sub
add
loopne
loopne
jnp
leave
mov
adc
leave
and
addr16
jmp
and
dec
dec
cs
and
mov
sbb
mov
xchg
adc
adc
adc
inc
add
nop
dec
cs
or
mov
dec
cs
push
xchg
add
sub
add
cld
adc
jb
or
mov
imul
repnz
shrb
cmp
call
xchg
mov
add
in
xchg
mov
sub
fdivrl
xlat
cs
aam
aam
cwtl
test
test
test
pop
js
and
sub
jmp
add
out
pop
xchg
jg
repz
outsb
and
and
or
imul
and
or
push
xchg
pop
imul
jae
jbe
inc
adc
push
das
dec
mov
jle
scas
andl
insb
aas
add
sti
inc
ss
gs
or
or
pop
movl
aaa
mov
xor
sti
and
mov
jo
dec
add
push
das
inc
pusha
sbb
push
loope
mov
enter
scas
jo
movsb
sbb
bound
lock
or
xor
in
aaa
call
mov
mov
inc
or
movsb
das
jb
es
xchg
mov
inc
movsb
outsl
arpl
cmpsb
scas
mov
mov
and
xchg
arpl
popw
jae
dec
mov
jae
push
inc
jb
jl
push
aam
inc
add
out
in
out
js
inc
add
dec
inc
sbb
mov
in
xor
and
mov
sub
loopne
mov
pushf
data16
dec
push
mov
test
jmp
add
daa
sbb
xchg
fistps
jno
xchg
inc
fs
or
int3
mov
inc
add
enter
lods
rorb
push
xchg
int
lods
push
je
inc
adc
mov
loopne
pushf
xchg
or
imul
imul
push
rcrb
mov
lds
inc
push
or
cwtl
push
sub
gs
movsb
js
dec
in
negb
mov
push
cmp
paddsb
stc
lret
push
call
inc
add
or
pop
pop
push
inc
out
aas
int3
out
and
lods
insb
dec
inc
push
pushf
dec
insb
mov
data16
gs
push
push
push
cltd
outsl
imul
js
hlt
jle
xchg
lret
mov
sbb
paddsb
sbb
lcall
xorb
pop
xor
add
and
sbb
xor
les
fsubrl
fwait
cmp
adcl
sub
sub
shrl
fs
xor
sbb
xchg
scas
insl
xchg
int
les
mov
imul
mov
push
mov
sub
gs
movsb
mov
imul
fwait
mov
cmpsb
lods
sbb
in
inc
movsb
pop
or
sub
cwtl
cmpsb
push
rorb
mov
or
sarb
ss
pop
mov
or
repnz
mov
test
test
pop
inc
add
push
cmpsb
imul
shrl
mov
pop
in
imul
data16
fwait
inc
push
adc
push
sbb
adc
dec
rcrl
mov
push
pop
push
rclb
enter
rorb
mov
or
inc
adc
push
and
int
xchg
fs
cmpsb
imul
les
int3
push
daa
and
pop
rclb
movsb
sub
pusha
sub
pop
mov
js
xor
push
test
sub
loopne
sbb
int
sbb
in
push
and
mov
mov
fwait
pop
pusha
das
pushw
aam
push
lcall
arpl
pusha
andb
pop
push
les
int
pop
gs
pop
push
imul
push
push
scas
mov
adc
das
in
and
jae
mov
mov
test
xchg
push
mov
outsl
mov
sub
xor
jg
js
or
sub
stos
nop
cmp
cs
in
inc
ret
int3
nop
add
pusha
dec
rorb
das
addr16
xor
mov
add
ds
mov
pop
add
and
pusha
and
dec
loopne
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
into
mov
cmc
in
add
add
add
mov
inc
jo
ret
dec
jns
and
inc
xchg
nop
add
and
ds
push
adc
jnp
out
aaa
xorb
pop
jne
push
xchg
pusha
adc
pop
ret
mov
mov
ret
loope
adc
cmp
add
adc
xchg
pop
aas
testb
jecxz
sub
dec
shll
xchg
pushf
movsb
xor
shll
mov
int3
shll
in
hlt
cmpsb
imul
cmpsb
imul
cmpsb
imul
lcall
insb
mov
add
add
or
add
cs
gs
pop
enter
mov
jnp
daa
pop
cmp
sbb
jge
sbb
in
cmp
lock
and
and
dec
jg
aas
jns
in
jns
adcb
push
pop
and
popf
aas
push
add
orb
push
mov
cltd
or
or
adc
adc
adc
push
ja
adc
movsb
cmp
mov
les
xor
fsubr
clc
or
lcall
imul
fstpl
add
gs
push
jl
repz
push
push
inc
xor
jmp
inc
repnz
out
add
loope
and
or
xor
insl
popaw
ja
in
sahf
imul
or
inc
add
push
subb
cmpb
lcall
push
into
repnz
jo
adc
das
imul
movsb
push
add
mov
fsubr
cmpsb
lret
cs
xor
mov
mov
lcall
push
push
or
add
cmpsb
imul
adc
adc
or
add
add
sbb
push
sbb
imul
cmpsb
imul
cmpsb
imul
shll
sbb
xor
xor
push
inc
sbb
lcall
push
add
xor
movsb
push
mov
pop
shll
or
pop
sahf
xor
sarl
test
shll
xor
orb
xchg
mov
mov
imul
imul
mov
add
mov
adc
cmp
push
push
lods
sub
and
mov
lods
xor
push
filds
mov
add
mov
adc
and
adc
icebp
mov
not
and
or
lret
xor
cmc
and
push
xor
rcr
cwtl
leave
lahf
mov
push
movsb
dec
shll
lock
imul
push
push
lods
imul
sub
fs
xchg
mov
adc
in
push
or
stmxcsr
xchg
and
xor
divb
dec
fidivrl
cmpsl
cs
punpcklwd
or
clts
sbb
add
adc
fs
inc
adc
or
xchg
or
push
or
enter
adc
pop
pushf
orb
pop
push
push
sbb
rcll
popa
nop
inc
push
or
lcall
int3
mov
cmpsb
aam
in
hlt
xor
mulb
and
sub
cltd
dec
mov
pop
or
sbb
xor
stos
push
push
shlb
dec
int3
in
or
adc
cmpsb
imul
cmpsb
imul
aam
add
jbe
add
mov
add
or
nop
push
push
mov
mov
cmpsb
imul
cmpsb
imul
imul
dec
shll
xor
dec
icebp
shll
out
test
xor
out
cwtl
in
test
mov
jmp
ljmp
inc
xchg
add
bound
mov
fldcw
loop
cmp
orl
and
ficomps
or
inc
or
or
add
add
add
pop
mov
inc
adc
nop
and
fldl
fcmovb
mov
cmpsl
inc
cmp
imul
outsl
mov
and
add
cmp
insl
imul
pop
add
imul
adc
adc
fcoms
push
or
insl
pop
add
mov
mov
in
test
xchg
xchg
pop
pop
fildl
xor
mov
xchg
xor
repz
stc
mov
xor
sti
cld
std
incb
xor
shll
test
dec
roll
adc
aaa
pushf
pop
inc
fisubrs
repnz
push
in
push
lret
inc
xorps
push
loopne
xor
and
lcall
in
cmpsb
imul
imul
cmpsb
imul
jo
xor
shll
dec
shll
loopne
ss
shll
lock
add
lcall
mov
imul
imul
cmpsb
imul
cmpsb
imul
imul
dec
shrl
inc
sbb
dec
shll
cmp
dec
shll
pop
add
pop
insb
adc
lcall
cmpsb
imul
imul
cmpsb
imul
xor
mov
jl
mov
dec
inc
mov
pop
rorb
rorb
rcll
cmpsb
imul
cmpsb
imul
cmpsb
imul
shll
cmpsb
mov
pop
pusha
mov
dec
shll
rorb
xor
les
shll
test
dec
shll
pushf
loopne
dec
shll
test
fdivl
ss
rclb
imul
imul
insb
lcall
or
dec
shll
cld
and
cmpsb
pop
sub
add
mov
or
push
lcall
rcrb
subb
imul
shll
cmpsb
test
push
sub
adc
xor
xor
and
in
xor
add
inc
inc
sbb
lcall
dec
cmpsb
imul
imul
cmpsb
imul
lcall
je
imul
lcall
out
mov
adc
and
mov
inc
sbb
sbb
push
ret
rolb
pusha
push
xor
jo
mov
push
push
push
fs
ficoml
push
insb
inc
sbb
rclb
dec
imul
mov
lcall
push
jnp
cmp
cwtl
xchg
xchg
mov
pushf
test
rcl
dec
ror
fsub
lock
cmpsb
imul
add
fwait
inc
push
jp
xor
cmpsb
push
dec
dec
shll
mov
lods
mov
dec
rcr
call
mov
cld
xchg
dec
push
movsb
shll
je
mov
xor
cwtl
movsb
mov
enter
shll
in
clc
add
adc
lret
cmpsb
imul
xchg
lods
adc
test
ljmp
aam
pop
std
dec
add
mov
dec
sub
cmp
shrl
outsl
push
int3
adc
fsubl
xor
imul
cmpsb
imul
cmpsb
imul
sbb
xor
sub
jle
imul
xor
sti
cld
add
roll
incl
add
decl
popa
stc
push
mov
xor
adc
add
xor
lock
filds
sbb
adc
test
inc
pusha
adcl
das
xchg
lret
pop
dec
dec
add
add
xor
repz
test
sub
pop
ret
or
pop
and
pop
sub
xor
les
pop
cmpb
adc
xchg
gs
add
or
and
jo
fiaddl
std
push
stc
imul
imul
push
lcall
or
mov
cld
add
xor
bswap
cmp
jo
decl
addl
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
ljmp
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
jmp
stos
imul
add
xor
push
into
incb
shll
or
inc
mov
mov
decl
jle
inc
mov
lea
jge
loop
shrb
out
push
fisubs
loope
shrl
bound
ljmp
pop
mov
insl
popf
pop
or
cmp
push
testb
cmp
add
dec
mov
incl
jbe
dec
mov
jne
ljmp
sub
sbb
and
push
pop
cmpsb
ja
loope
xchg
push
test
gs
push
mov
lds
sti
pop
lahf
push
inc
dec
cmovns
mov
pop
and
jae
push
ja
std
fnstsw
aaa
sbb
push
bound
mov
inc
sub
jge
jle
mov
mov
or
outsl
push
aaa
jb
or
ja
ja
bndstx
cmpsl
mov
or
sbb
popf
lock
out
popa
dec
mov
jg
pushl
idivb
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
cmp
enter
jmp
jnp
push
loope
pop
stos
jb
push
test
add
scas
sbb
or
or
cmp
imul
xor
roll
add
and
xor
shrl
xor
and
dec
shll
push
adc
sbb
sub
cmp
xor
sarl
xor
and
dec
shll
and
xor
cmp
xor
shll
cs
cmp
ss
aaa
ds
adc
nop
ss
out
rol
insb
or
push
dec
cmp
fcmovbe
xchg
cmp
inc
insb
sbb
imul
xchg
push
adc
and
pop
inc
cmpsb
insl
addr16
dec
xor
inc
aaa
push
jnp
xorl
jns
xor
xor
js
dec
pop
bound
dec
shll
arpl
adc
inc
mov
pop
ss
out
inc
aas
outsb
cmp
cmpsb
outsl
pop
add
add
add
mov
or
or
int3
test
faddl
cmp
std
dec
out
add
add
add
jo
jg
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
jmp
bound
push
pop
sbb
sbb
sub
inc
test
pusha
cmp
adcl
mov
incl
mov
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
push
or
push
hlt
cmc
div
clc
stc
cli
fs
arpl
shl
or
adc
incl
adc
pop
popa
jno
and
adc
xchg
mov
lock
shll
xor
and
loopne
andb
rorb
nop
cmpsb
cli
mov
inc
out
insb
shll
or
mov
shll
add
jb
push
and
dec
shll
pop
add
jb
push
adc
push
lods
adc
and
imul
xor
mov
jae
sub
inc
imul
sbb
in
lcall
or
and
jnp
outsl
pop
data16
je
cmp
or
jae
sbb
insb
movsl
push
rorb
jnp
mov
push
adc
inc
add
and
call
dec
das
mov
jmp
int
push
hlt
call
push
pop
cmp
nop
push
cmpsb
dec
les
push
sub
mov
dec
rorb
shrl
or
scas
cmp
out
mov
jg
fisttps
mov
inc
dec
les
dec
xor
push
es
add
jle
mov
mov
rcll
ds
addb
adc
lret
aaa
mov
dec
cmpsl
dec
enter
pop
xchg
or
inc
sahf
push
xchg
mov
sub
push
and
inc
dec
push
faddl
shr
mov
mov
mov
in
push
xchg
pusha
xchg
adc
push
jle
push
rcrb
pop
mov
ror
or
xor
dec
in
xor
aam
aaa
in
call
dec
inc
lods
xchg
push
push
mov
rcrb
xchg
es
dec
jo
mov
xor
or
xchg
loopne
mov
call
cmpsb
mov
int3
push
lock
and
cmp
in
imul
xchg
pop
ss
notb
push
sub
push
xchg
pushf
ds
fcoms
addr16
pushf
push
push
je
push
insb
pop
xchg
pusha
int
sahf
xor
push
in
sub
fstps
dec
mov
inc
imul
ds
push
je
pop
les
in
ds
jp
addl
insl
shrb
mov
push
inc
push
jbe
dec
adc
or
sbb
hlt
push
push
and
jg
shrb
cld
xor
xchg
push
in
les
pop
rcrb
inc
sub
fnsave
dec
xorb
mov
out
dec
and
out
popf
dec
pop
sbb
hlt
es
dec
pop
adc
mov
sbb
test
mov
xchg
add
loop
nop
iret
fmull
ret
sbb
jl
insl
out
xchg
xchg
mov
out
fs
cs
push
or
inc
cmp
mov
xor
inc
je
fs
je
lods
sbb
ds
cs
push
inc
loop
lcall
pop
sub
or
fisubs
inc
shll
sahf
scas
push
dec
inc
sbb
sbb
pop
cld
call
outsl
sbb
mov
xchg
rcl
sub
fs
dec
movsl
push
jae
cld
push
inc
jbe
lahf
shrb
outsb
jg
sub
jle
mov
push
mov
mov
into
rcrl
das
dec
cs
out
push
push
adc
clc
push
in
or
mov
mov
pop
sub
les
test
mov
pushf
push
cmpsl
pop
adc
hlt
push
mov
mov
inc
test
and
imul
inc
adc
push
in
inc
es
out
jecxz
popf
and
mov
jo
inc
ds
out
jmp
push
add
jg
ret
stos
imul
mov
xchg
mov
mov
inc
mov
incb
or
add
cltd
fcompl
data16
fsubr
stos
nop
cs
pop
leave
pop
and
imul
mov
ds
lods
negb
cmp
xor
fs
in
mov
pop
and
in
nop
es
scas
mov
or
inc
pushf
push
es
inc
push
in
inc
add
or
adc
adc
dec
add
jbe
popa
or
add
nop
add
test
inc
add
orb
push
pop
add
push
dec
fwait
mov
jg
push
add
pop
inc
sbb
or
pop
dec
pop
push
and
cltd
xchg
popw
dec
aaa
push
pop
dec
add
ja
stc
lcall
dec
xchg
fisubl
push
inc
mov
divb
add
es
dec
in
popf
mov
push
inc
cmp
mov
aaa
dec
lock
dec
or
pop
push
inc
push
scas
dec
lods
mov
xchg
push
add
dec
xor
jbe
push
push
or
push
xlat
push
pop
ss
push
ss
xchg
or
iret
es
iret
or
push
push
push
lcall
push
add
or
pop
jnp
xchg
daa
dec
push
push
sbb
cmp
dec
jmp
scas
dec
mov
and
cmpsb
dec
push
push
cs
adc
or
inc
sbb
inc
dec
sub
or
inc
pop
sbb
xor
fisubrs
push
repnz
dec
dec
push
ficoms
aam
xor
or
int3
scas
test
add
add
in
sub
push
in
pop
and
add
pop
ss
or
mov
push
shrb
addb
pop
repnz
add
cmp
enter
clc
aas
push
pop
jmp
out
rorl
rol
add
pop
or
push
aas
jg
repnz
addb
fildl
prefetch
push
mov
pop
jo
pusha
data16
pop
insb
in
roll
mov
out
push
jg
addr16
pop
out
pop
cs
sbb
fwait
neg
out
fimull
pop
ret
out
ja
add
loopne
xchg
jl
ret
lock
sbb
pop
pop
aas
insl
insl
in
out
push
cs
xchg
cmpsb
mov
lock
gs
push
xor
pop
std
cmp
push
fldl
insb
jl
inc
add
cmpsb
pop
data16
jg
sbbb
add
jo
in
shll
rolb
incb
mov
aas
pushl
xor
adc
cwtl
pop
nopl
shll
push
add
cmovne
sbb
push
add
add
and
cmp
aad
ds
cmp
xorps
icebp
out
out
ds
pop
outsb
es
fnstenv
mov
std
clc
lock
ljmp
clc
dec
add
mov
inc
pop
outsb
es
push
or
popa
add
pop
and
loopne
pop
sub
lods
daa
sub
addb
jbe
fstp
push
push
cs
jle
cmp
pop
push
xchg
pop
in
les
push
out
out
xchg
pop
cmpb
push
push
cs
mov
add
pop
shll
pop
cmp
push
mov
add
lock
stos
int3
jo
cs
inc
cmpb
std
lret
in
loope
cmp
or
push
sub
inc
jl
mov
add
inc
addl
pusha
xor
sbb
push
push
sbb
add
lds
pop
push
ret
shll
cmp
jge
sbb
cmp
sbb
or
aaa
and
pop
aaa
xchg
out
rolb
jge
pop
and
mov
xchg
adc
push
adc
cmp
rolb
and
add
decl
fisttpll
and
xor
add
aas
cmp
subl
repz
stc
mov
daa
sbb
cmp
xor
in
divb
daa
and
xor
mov
adc
and
jbe
neg
jbe
cmp
clc
dec
push
dec
push
cltd
andl
dec
push
push
daa
cmp
adc
push
mov
mov
sbb
aaa
fadds
cltd
add
inc
daa
mov
outsb
xchg
ja
push
es
push
mov
hlt
sbb
mov
push
and
jb
lahf
adc
in
xor
cmp
mov
daa
cmpl
xor
and
push
insb
in
daa
inc
push
movsl
out
daa
dec
sub
aas
push
xor
mov
inc
xor
sub
cmp
xor
ficomps
push
pop
push
fstps
mov
aas
movsb
clc
out
and
and
cmp
mov
xchg
dec
pop
push
cmp
add
push
fs
xlat
mov
lret
push
and
push
mov
or
ss
daa
mov
daa
push
daa
push
xbegin
repz
adc
add
add
testl
das
inc
inc
inc
or
dec
decl
sahf
scas
dec
push
pop
daa
xor
outsb
daa
insb
jne
repz
aad
mov
dec
dec
fs
jb
pop
daa
mov
out
in
sbb
xchg
insl
repnz
clc
add
mov
jecxz
add
fidivl
or
pop
push
jne
pushf
es
data16
pusha
push
sbb
or
inc
arpl
cli
mov
xor
ds
rcrl
into
arpl
out
clc
arpl
mov
pop
sbbl
cmp
lahf
mov
or
and
fs
mov
daa
push
lcall
push
aas
es
lret
ja
stos
outsb
jmp
dec
inc
inc
es
call
fwait
mov
daa
xor
in
repz
loope
or
push
test
stos
sbb
pop
adc
cmp
xchg
in
inc
xchg
sbb
imul
rorl
stos
movsb
out
sub
or
int
pop
aas
xor
imul
out
stc
inc
xor
cmpsb
arpl
cs
bound
cld
insl
jo
in
push
inc
sub
or
or
stos
and
repz
loopne
mov
fs
sbb
data16
inc
push
shll
in
mov
push
inc
mov
and
cs
inc
ds
stos
sub
pop
lock
xor
fldenv
movsb
xor
push
rcll
dec
dec
xchg
in
arpl
mov
mov
scas
xor
ja
gs
testl
and
ss
sub
and
dec
mov
adc
cltd
xchg
sahf
mov
xchg
sbb
inc
mov
andl
or
or
mov
clc
or
sbb
daa
sub
push
daa
dec
xor
dec
xor
data16
dec
daa
dec
daa
dec
mov
clc
dec
or
frstor
adcl
rorb
sub
aas
sbb
es
cmp
aaa
mov
pusha
pop
xor
cltd
cltd
push
or
decl
mov
xor
es
sbb
repz
nop
inc
push
adc
repz
xor
popl
insb
jnp
jae
sahf
adc
adc
sbb
leave
inc
push
daa
sbb
mov
shlb
dec
and
push
push
xor
push
pushl
inc
sub
inc
xor
add
jb
into
es
enter
mov
incl
push
mov
popf
dec
mov
fstpt
repz
pusha
fcoms
xchg
loop
shll
and
add
insl
js
jbe
stos
sub
aaa
fs
loopne
fldcw
jbe
lds
xlat
sbb
daa
sbb
cmp
xor
mov
inc
push
and
out
jmp
xchg
add
mov
and
enter
aas
subl
push
push
aas
adc
and
adc
xor
add
or
orb
push
jo
test
pop
jg
add
add
fsubrs
lahf
enter
jg
js
jge
push
rorb
add
sti
movsb
pusha
xchg
inc
or
mov
adc
cmpsb
int3
add
push
push
mov
mov
emms
add
ud2
jnp
cmp
add
add
mov
mov
add
int3
setge
add
sarl
sahf
cmp
add
div
int
sbb
pop
push
out
add
add
adc
mov
xchg
cmp
push
roll
mov
pushf
jo
repz
aas
orl
psadbw
push
sub
iret
jno
fwait
cmp
or
mov
sarb
mov
jo
addl
mov
ds
or
cmpxchg
lock
jo
xchg
add
or
fsubrl
fs
mov
xchg
arpl
xchg
rcrl
adc
and
or
xor
push
add
lock
add
pop
mov
iret
out
or
out
xchg
cmp
dec
add
xor
cs
add
mov
mov
pop
add
jo
insl
in
out
sub
add
aas
prefetch
or
pop
add
or
stc
iret
rolb
inc
insb
push
jb
orb
ja
mov
bound
adc
and
push
add
push
incl
mov
rclb
adc
fsubs
mov
sbb
mov
adcb
mov
scas
sub
or
add
scas
xchg
pop
fisubrl
xchg
sub
test
adc
cmp
pusha
adcl
punpckldq
shlb
dec
outsl
adc
push
lods
sbb
add
xor
sidtl
rorb
add
sub
add
and
add
push
xor
add
cmpsl
sub
mov
jae
add
out
test
mov
add
add
sbb
add
test
dec
arpl
or
sbb
outsl
imul
jle
sahf
je
outsl
and
daa
push
and
mov
or
dec
insb
add
mov
ficoml
outsb
sub
add
imul
shlb
pop
cmpsb
je
lods
mov
arpl
ret
addr16
dec
jae
sbb
and
push
push
jo
insl
negb
and
jle
cmpsb
cmp
popa
ss
je
adcl
dec
add
mov
push
outsl
sahf
push
fwait
addr16
lods
mov
jae
sub
data16
inc
pop
das
cmp
or
xlat
arpl
cmp
push
stos
jp
outsl
xchg
inc
rolb
imul
sti
shlb
sub
sbbl
addr16
pop
xchg
dec
pop
inc
xorb
sbb
adc
out
and
stos
mov
dec
xor
cmp
and
push
jb
outsb
add
notb
ss
push
jae
adc
jnp
inc
mov
xchg
imul
adc
mov
das
pop
popa
push
fsubr
mov
mulb
or
mov
repnz
imull
loop
test
scas
je
mov
addr16
inc
jb
mov
inc
cmpsl
pop
jns
gs
subb
jo
daa
bswap
jnp
pop
nop
arpl
iret
lret
outsb
addr16
mov
daa
and
push
sub
jnp
jbe
and
inc
add
push
mov
lret
and
or
pusha
mov
rorb
cmp
stos
jae
jne
outsl
sub
int
shll
dec
outsl
ja
inc
subl
outsl
push
ss
jp
test
imul
mov
push
lcall
push
mov
ret
fwait
pop
adc
ljmp
xor
jb
insl
aad
xchg
push
jbe
cmp
out
sbb
mov
lret
sbb
xlat
testl
add
mov
dec
insb
out
adc
mov
mov
add
or
pop
push
pop
add
stos
jo
outsb
mov
inc
jae
push
add
inc
pusha
rcrl
sub
mov
insl
mov
add
ss
push
inc
jb
ja
mov
sti
ret
pop
in
cmpsb
inc
dec
push
cmpl
xchg
es
jecxz
push
cmp
jno
punpcklwd
stos
adc
ja
or
out
pop
inc
test
adcb
scas
or
dec
pop
daa
pop
and
cmp
mull
xlat
adc
dec
and
stos
out
xor
ljmp
loopne
sbb
scas
daa
gs
ret
sbb
stos
stos
in
jne,pn
out
jnp
mov
pop
fistps
cmp
sbb
sbb
rcll
arpl
sbb
push
fists
mov
push
mov
arpl
adcb
inc
mov
stos
dec
ret
inc
cmp
notb
adc
jne
test
mov
inc
dec
xchg
movsb
call
loop
or
inc
scas
insl
pop
mov
mov
jmp
lods
jo
cmp
pusha
roll
xchg
xlat
mov
scas
orl
sarl
push
adc
lret
fisubrs
addr16
popf
add
je
adc
and
pop
sarl
lcall
ja
ret
xor
imul
xor
pop
leave
dec
lret
sbb
inc
outsl
xchg
jns
or
fildll
sbb
pusha
xor
imul
imul
mov
pop
lahf
xor
pop
ja
bound
adc
aas
adc
shll
and
pop
sbb
pop
push
sub
or
inc
stos
ss
movl
pusha
push
add
cmp
push
jns
subl
jo
arpl
sbb
cmp
jp
sub
push
lahf
inc
ja
adc
mov
repz
add
mov
jbe
cmp
dec
jo
lahf
fldt
dec
outsb
mov
sub
add
fidivs
adc
jbe
mov
xchg
pop
mov
and
outsl
mov
or
push
nop
mov
popf
dec
arpl
or
jae
scas
ds
lahf
pop
orb
adc
test
inc
and
push
add
popa
outsl
pop
or
cwtl
xor
mov
pusha
and
scas
jbe
sub
jne
pop
xchg
push
or
sbb
mov
lcall
mov
sub
inc
aad
dec
sahf
insb
add
push
sbb
push
push
rcpps
cmp
outsl
mov
adc
xchg
push
in
mov
in
andb
push
or
dec
cmp
mov
mov
les
addr16
mov
push
shlb
mov
xorl
daa
mov
inc
cmp
shll
in
scas
testl
push
add
add
setl
push
inc
inc
xor
popa
dec
inc
adc
mov
ja
mov
ljmp
inc
imul
insb
push
inc
imul
sbb
imul
mov
sbb
mov
push
pop
push
xchg
mov
xchg
mov
and
sub
or
inc
pop
adc
adc
pop
inc
aas
or
inc
sbb
pop
mov
add
pushf
dec
xchg
inc
xchg
dec
outsb
jmp
dec
and
mov
xor
dec
inc
pop
andl
inc
cmp
jo
xchg
cmp
adc
dec
xchg
je
nop
jecxz
sbb
push
push
popa
mov
xor
ljmp
ja
dec
jne
mov
xor
push
jns
mov
add
cs
mov
dec
cwtl
mov
push
add
sbb
xchg
aas
dec
je
xorl
xor
outsl
aad
xor
xchg
adc
ljmp
sti
fwait
jmp
mov
pop
jae
call
iret
push
dec
outsb
sub
cmp
insb
sub
pop
sbb
lcall
das
push
cmc
mov
sbb
pop
xlat
bound
mov
jg
push
add
pop
dec
mov
dec
iret
insl
xchg
je
or
mov
adc
inc
or
lret
movsl
or
js
idivb
out
repnz
push
mov
xchg
push
sub
and
push
cwtl
mov
pop
loopne
sbb
push
mov
add
out
cmpsw
cs
cs
test
or
ret
hlt
mov
push
inc
and
jbe
ds
mov
dec
cmp
push
ss
dec
inc
mov
ss
sub
shlb
sbb
lret
jae
pop
mov
cmp
fiaddl
jnp
mov
jbe
inc
into
add
outsl
jne
inc
rclb
ficoms
sub
push
stos
dec
dec
pusha
sub
jnp
add
iret
xchg
adc
push
add
mov
push
call
jbe
pop
lods
rcll
push
mov
adc
add
adc
repnz
push
add
out
inc
and
roll
jo
ret
fcmovnb
xor
add
adc
test
scas
test
add
cmpsl
lods
je
jne
stos
imul
decl
into
lret
test
outsb
es
jb
cmpsl
cmp
dec
inc
loop
push
scas
mov
mov
lret
inc
xor
pop
cltd
mov
adc
arpl
xchg
push
sbb
fwait
cmp
sti
sub
add
sbb
cs
cli
or
loopne
aam
jb
jae
aam
lds
pop
jo
jg
loope
mov
push
mov
jmp
or
mov
out
jo
bound
fwait
or
daa
xlat
xor
mov
outsb
insb
mov
mov
push
jmp
xor
add
add
inc
cmpsl
sub
adc
in
dec
loopne
jbe
insb
inc
jae
inc
and
iret
cmpsl
or
adc
les
inc
jmp
add
imul
shrb
outsb
inc
xor
and
shlb
add
mov
push
data16
in
inc
pop
jo
mov
stos
xor
inc
arpl
inc
lods
shll
lods
mov
xchg
or
inc
divb
sbb
inc
pop
jae
popa
stos
xor
repz
mov
iret
cltd
fidivl
dec
dec
stos
jbe
es
jg
inc
rcrb
jno
jg
lret
test
push
pusha
adcb
sbb
xor
andb
mov
mov
push
addl
sbb
xlat
and
sbb
repz
scas
push
daa
out
jae
mov
dec
orl
inc
cmp
or
xchg
fwait
jb
jno
out
fwait
mov
scas
add
inc
stos
cmp
add
push
jmp
jecxz
inc
shll
fwait
sub
adc
out
dec
sub
insb
cmpsb
mov
inc
push
sbb
cmp
pop
mov
pop
adc
adc
fisubl
adc
jecxz
je
cs
ss
sub
sbb
je
push
fdivl
test
pop
sub
out
imul
mov
ss
sysexit
call
inc
call
adc
insb
rcll
dec
push
popa
pop
imul
negl
add
and
popl
fwait
adc
mov
sbb
arpl
xor
sbb
or
cs
pop
adc
lds
repz
push
mov
push
sbb
daa
ret
mov
popa
add
test
daa
imul
cs
jmp
push
pop
or
pusha
test
jbe
pop
xchg
mov
arpl
push
imul
xor
push
scas
sub
mov
stos
inc
mov
sbb
xchg
bound
ficoml
add
push
push
mov
ja
jo
les
jne
push
sub
or
xor
fwait
push
cmpsl
mulb
daa
and
mov
arpl
lahf
push
and
or
push
mov
inc
sbb
xchg
mov
fisubl
mov
mov
imul
or
jne
inc
ret
cmpsl
jmp
in
ret
adc
push
push
ficoml
loop
pop
aad
lods
inc
imul
mov
movsl
dec
imul
sbb
push
loopne
test
add
inc
outsl
loopne
mov
inc
jnp
mov
inc
repnz
push
outsb
lods
in
lods
cmp
jbe
mov
insl
rcrl
pop
xchg
pop
or
ds
or
fdivs
ret
aas
iret
inc
and
mov
pop
movl
sbb
popa
add
cs
repz
pop
pop
xchg
arpl
dec
ret
jbe
jo
lret
arpl
xchg
add
pop
inc
out
inc
cs
and
xchg
push
xor
bound
add
shlb
xor
mov
jp
inc
mov
or
loope
mov
mov
cmp
pop
outsl
pop
out
lods
sub
or
mov
test
rorb
pop
push
or
add
pop
sbb
xor
push
imul
test
sbb
pop
and
pop
pop
or
cwtl
and
fmuls
push
mov
mov
and
pop
je
mov
or
pop
sti
xchg
push
insb
inc
push
addl
and
xor
clc
pop
add
repnz
cs
out
aam
sub
push
inc
les
jo
add
add
shll
ret
mov
pminsw
push
cmpsl
add
adc
mov
add
push
scas
add
push
mov
push
test
cmpsl
xchg
jo
mov
sub
roll
push
aad
dec
lods
jecxz
sbb
ss
xchg
sub
pop
orb
adc
mov
and
roll
sub
cmp
sub
add
xchg
aas
notl
mov
adc
sub
test
pop
sbb
cmpsb
ja
lods
inc
stos
mov
cwtl
add
outsb
and
xlat
sbbl
inc
cli
mov
das
add
stos
push
scas
pop
pop
dec
outsl
mov
xchg
outsw
mov
push
adc
pop
pop
jg
rcll
sbb
arpl
lods
cmpsb
mov
daa
pushl
mov
jae
arpl
sbb
aam
xor
aaa
cmpsb
fiaddl
adc
push
push
pop
or
or
xor
pop
jno
push
scas
dec
out
mov
fs
push
cwtl
push
imul
pusha
pop
and
jae
fisubrs
jo
push
adc
xor
mov
push
xchg
int
adc
xor
jbe
pop
bound
stos
jb
pop
xchg
mov
xchg
das
stos
dec
pop
adc
and
push
popa
test
daa
jae
insl
mov
inc
add
testb
mov
pop
add
push
test
pop
cmpsl
jecxz
dec
loopne
pop
mov
fsubrs
idivl
aam
ficoml
jg
lahf
or
or
stos
cmp
stos
shrb
sub
add
popa
adcl
jno
cmp
jns
sbb
scas
or
mov
pop
mov
sub
adc
xacquire
aaa
ret
and
adc
rcl
fwait
xchg
push
das
push
ret
sub
inc
xchg
stos
imul
or
push
add
es
idiv
ret
mov
pop
fwait
cmp
repnz
fsub
add
imul
mov
inc
insl
cltd
mov
test
adc
mov
adc
adc
js
nop
cmp
add
xor
push
adc
popf
insl
or
and
popa
out
jle
add
xchg
pop
jns
dec
popa
jae
rclb
or
andl
pop
jns
inc
or
sub
sti
outsw
fisttpll
cmp
js
incb
sbb
dec
lock
popa
jge
adc
dec
iret
sbb
jnp
mov
aas
imul
idivl
inc
dec
mov
fimuls
and
mov
arpl
xchg
or
es
dec
adc
sbb
sbb
outsb
or
mov
xor
cld
lock
mov
outsl
sub
movsb
cmpsb
mov
addr16
pushf
sub
push
ds
jno
filds
insl
cmpsl
inc
ret
xor
inc
jns
inc
lods
jb
sub
push
cmpsl
and
push
adc
and
jbe
xrelease
adc
mov
adc
adc
sbb
sub
fs
test
sbb
pop
push
fmuls
rcrl
or
pop
jo
mov
and
fnstenv
adc
adc
lret
lock
les
push
js
adc
cwtl
rolb
fcomps
push
std
push
fadds
xchg
fucomi
cmp
lock
or
loope
sub
adc
sbb
fs
inc
mov
xchg
movsb
lds
jns
cmpsb
lea
rorl
rcrl
in
push
inc
cmp
ss
test
andl
cmp
xlat
adc
andb
sub
ret
cmp
subl
mov
inc
add
inc
rol
or
out
lods
xlat
dec
push
dec
push
dec
sar
pop
ja
xlat
adcl
outsb
or
sub
insb
repz
aaa
aaa
inc
inc
gs
lods
outsl
in
xchg
pop
mov
adc
iret
sti
rorb
xor
jne
arpl
addr16
adc
adc
je
aaa
push
insb
test
sbb
sbb
cmp
cmpsb
insb
and
pop
cmp
sbb
repz
jo
movsb
push
test
xchg
push
fs
cmp
imul
stc
sub
sbb
inc
jne
push
mov
xor
daa
hlt
and
xchg
mov
push
dec
mov
aaa
jo
test
push
push
inc
jo
movl
xchg
aam
add
push
or
sbb
jo
hlt
ret
xchg
adc
test
inc
adc
and
or
jns
adc
xchg
mov
pop
lahf
xor
inc
stos
fs
dec
mulb
ret
xor
sbb
xor
in
jae
xchg
adc
xlat
loopne
mov
in
add
and
je
outsl
add
cmpl
out
pop
gs
out
inc
mov
sbb
inc
lea
push
cltd
nop
cltd
mov
or
and
adc
addl
xchg
sub
dec
ret
mov
bound
add
ret
and
push
clc
repnz
fwait
aas
in
inc
insl
mov
sbb
ret
inc
adc
pop
adc
pusha
insl
sarl
mov
push
xlat
adc
xchg
jb
xchg
push
fwait
outsl
mov
push
sbbb
push
xor
test
xor
ss
iret
xor
add
fs
ds
and
sbb
jo
data16
inc
jns
xchg
pop
mov
xchg
lea
jo
imul
ds
push
dec
dec
imul
out
scas
repnz
jae
cmpsb
test
lcall
jne
pop
push
dec
inc
test
or
into
les
add
out
or
or
adc
add
push
add
and
out
push
pop
or
insb
ljmp
aam
das
xchg
pop
add
add
aaa
pop
or
ret
jns
out
and
je
cs
add
mov
ret
or
enter
or
leave
cmc
or
mov
push
aam
pop
and
xor
adc
pop
pop
sahf
sbb
icebp
add
andl
in
fcmove
or
daa
jmp
andb
add
lock
addr16
stc
push
sbb
imul
stc
or
lods
inc
sbb
or
inc
add
repz
pushf
dec
dec
push
xchg
js
pop
minps
pushaw
pop
add
rclb
jae
iret
adc
inc
in
adc
dec
add
dec
dec
mov
andb
rorb
fwait
lcall
fs
dec
add
ret
sti
in
test
test
or
or
add
xor
or
stos
pop
sub
mov
push
push
cli
xor
or
mov
adc
fwait
cmpsb
xor
sbb
and
jno
jmp
inc
mov
sysret
jne
test
lret
stc
pop
pop
adc
pop
pop
push
or
xchg
mov
add
dec
push
sbb
add
mov
imul
mov
jb
pop
fmuls
xor
add
int3
mov
add
or
cs
push
xor
sbb
jno
flds
add
or
mov
inc
mov
xor
flds
out
fisubl
lret
scas
daa
add
add
sbb
nop
add
push
inc
add
pop
adcl
add
nop
shr
decb
cmp
insb
add
jns
adc
or
nop
add
and
sbb
jecxz
insb
fcomip
rcr
xchg
sbb
insb
outsl
arpl
gs
xchg
fs
outsl
or
mov
je
fisttpl
inc
mov
mov
pop
add
fisttps
mov
sbb
push
adc
sbb
add
out
mov
xchg
push
push
outsl
fidivl
mov
push
sub
push
outsl
lods
mov
scas
imulb
sbb
pop
repnz
dec
imul
xchg
call
pop
sub
dec
sub
popa
int3
sahf
rcll
insb
les
push
pop
add
sbb
clc
cmp
scas
xchg
pop
pop
jnp
into
rcrb
insb
in
push
std
gs
stos
inc
fs
add
rcrl
fldl
ret
sub
js
pop
push
mov
lcall
inc
daa
push
imul
ret
stos
or
pop
les
dec
xor
es
fs
inc
sub
mov
ss
pop
mov
add
inc
and
dec
add
daa
sti
enter
int3
or
xchg
insl
fdivrl
imul
add
xchg
add
pop
or
outsl
inc
fsubs
sub
in
xchg
or
pop
nop
mov
jno
mov
or
movsl
imul
sub
outsb
sbb
push
cmp
psrld
icebp
cmp
push
push
gs
or
inc
add
roll
sbb
stos
movsb
adc
sbb
pop
mov
out
add
adc
dec
pop
cmp
pop
xchg
xor
sub
aam
jo
push
xorl
jle
es
sbbl
into
clc
test
adc
inc
in
and
sub
stc
movnti
pop
push
cs
fisubrl
jle
mov
sbb
add
imul
imul
imulb
cli
shlb
js
pop
sub
push
sbb
pop
and
dec
mov
addb
or
sbb
xor
addb
in
mov
outsb
popa
sub
sbb
add
ret
add
dec
outsb
js
add
and
or
lds
andl
lods
xchg
inc
shl
add
and
in
adc
lea
add
mov
mov
pop
pop
sub
inc
imul
adc
popa
popa
cs
sarl
inc
fnstenv
mov
xlat
push
popa
imul
push
icebp
push
cmpsb
shll
push
ret
push
imul
mov
xor
sbb
pop
jae
push
sbb
aaa
cltd
jae
add
pop
aas
push
mov
or
in
add
add
mov
or
inc
scas
insl
jo
add
insb
mov
and
outsl
cmp
add
add
adc
dec
outsl
add
dec
jle
and
sub
ret
outsl
and
fisubrl
daa
shrb
cmp
lret
mov
ror
xchg
xor
in
jo
orl
aaa
jo
sbb
inc
imul
jb
sub
xchg
sbb
aad
mov
dec
insb
cmc
xchg
aaa
mov
mov
and
jmp
adc
cmp
and
inc
mov
and
push
inc
jmp
inc
fs
lock
dec
jo
imul
in
fisubrl
enter
push
dec
push
xor
pop
adc
pop
push
cmp
push
insl
imul
dec
inc
fisubl
jg
enter
inc
push
popa
inc
mov
sbb
mov
cwtl
push
outsb
sbb
inc
inc
cli
add
inc
adc
lea
push
cltd
push
cmp
or
aaa
jns
and
insl
lock
outsl
sub
outsb
orb
and
out
rolb
sti
sbb
dec
xchg
add
mov
mov
mov
add
xor
jns
out
mov
ret
sbbb
sub
fldt
adc
mov
sub
adc
sub
arpl
jbe
pop
sahf
lahf
mov
dec
ss
sbb
sub
or
sub
mov
pop
sbb
add
mov
or
add
mov
enter
sbb
cmp
push
mov
cmp
mov
and
dec
push
lret
insl
sbb
dec
data16
or
shl
cmp
pop
dec
sub
add
lret
push
mov
jnp
push
nop
pusha
jns
inc
xchg
and
jo,pt
les
imul
dec
sbb
mov
stos
imul
cmp
pop
adc
push
adc
cmp
les
gs
lahf
roll
xchg
and
inc
dec
cmp
insl
mov
lock
inc
mov
push
add
cmp
and
lret
and
insb
call
mov
mov
push
in
inc
jno
cmp
popf
fldt
das
or
adc
push
add
mov
push
mov
cs
pusha
and
dec
push
add
sbb
out
and
adc
sbb
jp
sbb
xor
mov
mov
push
lds
inc
insl
dec
inc
das
push
mov
mov
inc
insb
cs
lret
sub
jnp
add
and
add
fisttpll
inc
add
and
lods
or
inc
movsl
fsubrs
inc
test
xchg
pop
pop
mov
lret
dec
adc
rcrl
jge
insb
outsb
lea
and
enter
fsubrs
std
add
dec
add
or
test
add
cmpsl
pusha
pusha
leave
mov
ret
lret
mov
inc
inc
insb
and
clc
sub
fadds
and
sbbl
sbb
imul
xor
dec
outsl
outsb
addb
mov
iret
pop
xchg
sbb
ret
into
ret
sbb
insb
xlat
stos
jo
aam
inc
adc
mov
fsubs
popa
outsl
ljmp
or
arpl
fstl
push
mov
popa
push
fimull
xor
fisttpll
aad
aaa
les
add
push
outsl
adc
xor
mov
insb
inc
or
push
fsub
cmp
mov
dec
cmpsl
shrl
insb
push
flds
sbb
adc
push
fs
xor
mov
je
jne
shrb
adc
rcrl
imul
xchg
out
jae
dec
popa
mov
pusha
jae
inc
cs
imul
imul
adc
and
je
sbb
std
adc
xor
mov
pop
sbb
sbb
pop
pop
and
mov
fmul
divl
mov
adc
xor
loopne
and
out
imul
enter
adc
lods
xchg
mov
xchg
arpl
aad
jae
les
fadds
sbb
dec
and
sbb
sub
jo
leave
aad
cmpsl
inc
pop
js
icebp
dec
xchg
mov
lcall
sbb
push
pop
aaa
pusha
pop
and
test
ficomps
jne
push
popa
inc
test
inc
dec
mov
xchg
inc
push
adc
je
test
inc
lret
cmc
xorl
inc
sbb
jbe
adcl
or
outsb
sub
mov
sub
push
and
mov
pop
xchg
stos
sub
inc
adc
insb
add
mov
mov
lods
cltd
scas
insl
in
mov
les
adc
xor
loop
push
scas
je
adc
jo
jnp
inc
divb
mov
aad
aam
sub
pop
fsubrs
mov
shll
popa
inc
and
sbb
xor
adc
mov
pop
jbe
adc
dec
sbb
and
ss
pop
adc
rcr
outsb
repz
dec
push
shll
jbe
pop
sbb
imul
dec
data16
or
and
sbb
or
pop
cmp
lea
rcrb
xor
repz
int3
jne
test
push
and
in
sub
or
ret
cmp
test
jns
pusha
es
pop
aaa
push
jo
hlt
add
or
push
adc
dec
call
jae
or
test
xchg
sbb
sub
or
xchg
adcb
add
sub
xchg
test
shrl
push
arpl
cmp
nop
bound
and
add
sbbl
or
dec
sbb
mov
fcom
es
rcrb
push
inc
push
add
add
pop
inc
sub
pop
pushl
and
popl
and
clc
bound
pop
nop
xchg
and
xchg
pop
inc
pop
add
nop/reserved
lcall
movups
fnsave
mov
lahf
mov
or
mov
or
hlt
jle
push
enter
add
inc
dec
inc
inc
mov
pop
jg
add
and
jg
pusha
inc
inc
push
inc
pop
and
loop
test
inc
pop
rolb
push
sbb
inc
test
dec
fiaddl
mov
dec
sub
dec
out
inc
inc
outsb
cmpsl
popa
addr16
adc
lahf
shlb
sbb
add
lret
jb
push
gs
pop
dec
shrl
xor
aam
mov
mov
jb
push
daa
push
or
out
lds
xor
js
jle
jnp
add
add
inc
incl
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
cwtl
sahf
dec
add
nop
inc
