mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
ljmp
add
jb
gs
push
jns
je
insl
add
mov
xor
add
inc
outsb
jae
inc
push
popa
jb
incl
xor
cs
or
lcall
push
outsl
jb
dec
outsb
je
mov
fildl
xorb
jg
test
insl
insb
ss
push
data16
cmp
mov
gs
cwtl
mov
xor
das
add
jns
addr16
in
fwait
shrb
push
int3
fs
call
adc
push
outsl
imul
push
sub
cld
out
xor
out
sbb
adc
ss
icebp
add
cmp
push
inc
jns
inc
pop
xlat
sbb
mov
test
push
jbe
inc
js
outsb
fs
jne
mov
mov
jb
dec
arpl
inc
mov
add
jb
mov
fnstenv
sbb
push
int3
das
clc
or
fsts
ret
in
or
xor
loopne
je
jnp
rcll
fcomps
jle
nop
adcl
inc
adc
jae
jl
push
cmp
or
daa
push
shll
or
push
popa
push
popa
in
cmpsl
fisttpl
pop
or
and
fcos
adc
push
inc
insb
popa
jae
adc
push
daa
mov
daa
dec
push
inc
push
cld
pop
repnz
push
dec
push
int3
cs
add
adc
push
pop
sub
cmp
fs
inc
xor
add
push
xchg
fnstenv
add
sbb
xlat
and
cmpsb
loopne
mov
jb
popa
arpl
adc
cmp
orl
push
andps
jns
loopne
enter
es
adc
push
popa
call
mov
mov
dec
data16
and
es
insl
jo
inc
mov
add
xchg
pop
enter
outsl
xor
incl
scas
pop
or
sbb
cmovg
ret
mov
imul
pop
push
cltd
jbe
mov
cld
hlt
fs
in
inc
push
add
sub
scas
sti
add
popa
je
jge
jbe
sbb
push
mov
arpl
movsb
adc
mov
push
in
push
in
push
ss
or
lahf
out
add
push
loopne
push
ja
add
add
call
push
inc
negb
inc
xor
mov
xchg
push
arpl
mov
das
rorb
daa
daa
and
pop
dec
jns
fsts
sbb
lahf
insl
in
mov
pmulhw
sbb
pop
xlat
iret
leave
lcall
psadbw
addr16
maskmovq
pop
clc
mov
xchg
sub
sti
call
xchg
push
dec
add
jmp
in
mov
mov
loopne
pusha
jg
bound
arpl
sbb
inc
inc
aas
cmp
fcmovu
add
sub
add
cwtl
loop
insb
add
sub
dec
add
inc
je
add
bound
lcall
push
inc
in
and
jecxz
sub
loopne
je
dec
jnp
in
cmovae
adc
jle
jne
xor
sub
push
fisubrs
push
jns
push
pushf
xor
ss
push
xor
mov
neg
xchg
cmp
inc
adc
js
add
xchg
cmp
or
push
cmp
jb
adc
add
jno
add
sbb
nop
mov
das
and
rcrl
fcoml
mov
outsw
add
push
sub
push
xchg
or
jp
aad
xor
push
push
push
or
jae
outsl
insl
jae
ffree
lret
pushf
push
inc
add
add
cmp
adc
aad
inc
inc
fs
in
in
xchg
cmp
add
push
add
cmp
mov
or
add
adc
popa
add
xlat
cmp
or
imul
and
sbb
push
nop
add
fldl
pusha
sbbb
or
xor
add
imul
push
mov
jmp
cmp
xchg
or
pop
pop
pop
pop
jnp
inc
test
ret
push
nop
adc
sub
add
xor
push
inc
jno
push
ret
stos
add
add
jecxz
or
mov
sub
push
ficoml
test
cmp
pop
loopne
cmp
adc
gs
shl
add
call
outsb
jb
subb
or
lods
in
dec
jmp
addr16
inc
push
lahf
pop
adc
cwtl
or
jle
insb
loop
jne
mov
xchg
test
inc
gs
or
inc
gs
cmp
or
jo
lods
mov
push
clc
icebp
call
fnstsw
jnp
lods
mov
enter
outsb
fs
jb
and
sub
or
ja
ljmp
push
pusha
add
or
daa
popl
rep
jns
in
rcrb
and
jmp
mov
mov
or
or
fsubs
shlb
das
and
inc
and
clc
jmp
mov
out
mov
cmpsb
ja
adcl
adc
pop
ja
pop
in
daa
sub
cs
push
push
jl
aam
in
mov
lock
adc
jne
xchg
clc
mov
cmp
or
inc
push
mov
pop
sbb
mov
je
sbb
jmp
shrb
pop
xor
call
shlb
popa
int3
sub
mov
jecxz
or
aas
pop
inc
xor
pop
mov
push
testl
push
jno
pop
mov
lock
sub
or
dec
arpl
push
dec
push
pop
das
or
out
or
nop
in
nop
es
or
adcb
hlt
imul
test
push
push
push
ljmp
dec
lds
cmpsb
in
add
mov
in
aaa
sbb
insl
arpl
jl
or
popa
push
mov
mov
push
es
or
sbb
pop
lock
adc
insb
test
aaa
or
push
cltd
loopne
or
arpl
aaa
dec
repnz
pmaxsw
lcall
push
dec
adc
jno
push
mov
and
jae
jbe
cmc
sbb
add
add
xor
adcb
dec
movsl
push
ja
push
and
push
adc
mov
pop
push
fldenv
xchg
xchg
pushf
mov
mov
sub
sahf
js
xchg
in
enter
sub
add
inc
cwtl
outsl
dec
imul
pusha
xchg
xor
outsl
es
outsb
imul
fs
rclb
mov
jbe
xchg
negb
rcrl
adc
or
xor
push
lock
xor
and
mov
xchg
xor
jns
cld
push
test
add
aad
popa
sub
andl
push
sub
mov
mov
jecxz
sub
popa
ja
data16
or
cmp
mov
stos
pop
out
push
inc
sub
or
xlat
ljmp
adc
cmp
imul
inc
pop
sub
ss
adc
jb
mov
or
imul
jns
adc
jns
push
or
sbb
pop
dec
imul
dec
outsl
fs
hlt
push
fstps
das
sbb
pop
fsubs
or
ds
gs
clc
fcoms
xlat
mov
pop
or
das
dec
int3
popa
cltd
or
das
adc
cwtl
jbe
lds
sub
push
or
das
sti
or
xchg
inc
sbb
test
or
insl
sub
adc
and
les
push
or
enter
pop
in
adc
ffreep
add
xchg
shlb
imul
inc
cwtl
xchg
lock
inc
ret
mov
and
xchg
xchg
jbe
push
nop
mov
test
xchg
xchg
je
insb
push
fs
pop
pop
fsubl
in
sar
stc
push
pop
dec
popf
pushf
pushf
pushf
dec
mov
cmp
xor
cmp
cmp
and
out
jb
jb
sbb
adc
in
jbe
mov
fcmovne
in
in
lods
push
add
daa
daa
mov
cld
mov
daa
daa
daa
daa
hlt
lock
call
push
add
mov
and
or
mov
adc
sub
je
movzwl
mov
inc
inc
pop
ret
das
mov
idivb
in
paddusb
add
adc
lock
icebp
bound
dec
dec
and
insb
xchg
and
imul
and
xor
xor
sub
nop
sbb
and
imul
outsl
mov
popa
insb
and
je
popa
inc
inc
gs
outsl
dec
gs
test
mov
mov
fdivs
gs
insl
enter
aas
lock
and
and
arpl
and
push
test
jae
and
andb
xchg
arpl
imul
dec
nop
dec
jae
jle
popa
jbe
sarl
xorb
outsb
and
fistpl
iret
and
fs
pop
pop
jge
insb
cmc
mov
jnp
arpl
sbb
jbe
mov
fstps
dec
xorb
outsl
decl
mov
mov
mov
dec
add
inc
or
and
imul
adc
sahf
fldl
cmp
inc
adc
mov
xor
sbb
fildll
fildll
add
pop
mov
sbb
cs
jp
add
jp
cmp
inc
and
and
sub
inc
dec
sub
mov
push
lahf
push
pop
aad
xor
xor
cmp
xor
cs
cmp
imul
jmp
lret
jns
fistpll
mov
fildll
jl
push
cmp
add
js
and
mov
xor
add
dec
mov
js
mov
add
nop
call
cmp
mov
incl
pop
mov
jmp
lret
add
mov
mov
shlb
xchg
dec
sub
pop
mov
and
dec
and
es
ljmp
sbb
sbb
and
add
xchg
mov
dec
mov
mov
add
std
adc
ret
or
sbb
push
ret
cmpl
fists
mov
cld
add
orl
adc
dec
add
fsub
mov
sbb
push
add
cmp
dec
pop
out
aad
out
mov
cld
sub
call
popa
xor
mov
jmp
or
inc
sbb
push
add
cld
test
fcmovu
xor
popf
loopne
out
push
mov
mov
loop
mov
pusha
xchg
sarb
ret
push
sub
mov
sub
mov
mov
sub
sbb
cltd
mov
aaa
or
nop
cmpb
jmp
mov
cwtl
frstor
out
push
or
int3
mov
ds
dec
or
pop
test
push
xor
icebp
aas
js
lds
push
push
mov
lea
mov
and
out
fwait
and
cld
mov
test
je
sti
mov
or
jle
push
adc
or
sbb
movl
pop
dec
add
ss
add
ret
jle
outsb
icebp
pop
pop
pop
pop
faddp
add
mov
sub
jae
test
jle
adc
mov
push
and
or
test
jne
push
sub
push
js
add
xor
jmp
in
aas
or
cmp
in
push
push
lea
leave
lods
orl
add
decl
mov
cmp
jbe
sub
add
jmp
test
jne
lods
mov
lods
mov
in
scas
dec
adc
js
sub
dec
nop
inc
loopne
jo
testl
and
jmp
testb
add
bound
add
cmp
jbe
sbbl
ljmp
adc
xchg
roll
pop
xor
push
mov
cmp
incb
test
jo
fs
mov
stos
inc
mov
cmp
jae
mov
add
dec
and
std
fidivrl
ret
jae
fdiv
pusha
je
popa
loopne
iret
lea
rcll
clc
int
js
add
push
pusha
or
lds
sbb
sub
add
jbe
ret
push
inc
pop
sbb
addr16
mov
xchg
mov
pushf
and
mov
shr
cmp
jb
addb
push
ja
jmp
dec
and
jle
mov
or
imul
push
outsb
hlt
bound
dec
les
cli
mov
lds
xchg
inc
or
mov
sarl
mov
in
scas
scas
sub
idiv
je
dec
ja
pushl
nop
dec
adc
mov
add
sarl
or
jbe
mov
cmp
aas
adc
es
adc
lods
pusha
and
and
xchg
xorl
xchg
popa
jns
aas
je
shrl
jae
lods
cmp
cmp
in
aad
inc
and
xchg
roll
movsbl
rcrb
outsb
xor
mov
add
inc
xor
lea
add
push
test
add
cmp
jne
mov
movsl
ret
push
jne
btr
js
jns
mov
or
jb
mov
adcb
dec
jnp
sub
lea
mov
cmp
jmp
sbbb
das
cmp
jb
mov
add
scas
xor
xchg
iret
enter
idiv
add
inc
mov
jmp
ds
sbb
lock
adc
andb
pushl
cld
testl
mov
mov
movl
sbb
lea
imul
mov
lock
jnp
addr16
fisttps
dec
sub
clc
jle
pop
mov
movsb
or
faddl
mov
mov
lea
pop
cmp
jmp
loopne
jge
cmpsb
pop
push
je
loope
rol
or
jmp
repz
cmp
mov
rorb
rol
loopne
push
xor
dec
jecxz
jb
adc
fdivs
lock
loopne
push
mov
jmp
mov
enter
mov
or
cmpsb
mov
cmp
and
mov
cmp
test
push
pop
xorb
cmpsb
js
inc
jb
xchg
or
js
sbb
divl
lods
mov
je
pop
inc
jns
ret
mov
ss
roll
test
add
mov
jne
subl
dec
adc
pop
rorb
pop
imul
xchg
sub
xchg
mov
and
adc
xchg
test
adc
cmp
jne
and
push
mov
iret
add
jmp
xchg
scas
ljmp
cmp
xor
xchg
pop
sbb
jmp
aaa
inc
or
add
and
add
or
loop
fmull
scas
testl
sub
xor
testb
jne
cmpb
inc
cmp
inc
mov
mov
roll
xlat
mov
lock
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
sub
ret
in
mov
lahf
mov
popa
flds
add
pop
fmull
inc
cld
movl
xchg
lret
rcl
adc
loopne
add
sbb
roll
push
or
mov
sbb
sub
mov
jb
sbb
xor
lret
jb
jns
jb
faddl
test
ret
jg
or
incl
test
lea
push
mov
loop
pop
pop
roll
add
hlt
sub
jbe
clc
iret
mov
call
jne
mov
sar
push
pop
fimuls
push
and
cmp
push
clc
xchg
stos
push
xchg
cvttps2pi
cmp
jb
sbb
fs
sub
adc
add
les
lea
jmp
lds
add
sub
cmp
jno
das
push
add
fdivs
inc
or
cmp
mov
mov
pop
cld
or
mov
push
mov
add
aas
sbb
movl
add
cmp
xlat
sub
clc
addl
sahf
sub
push
ret
rcl
mov
out
shlb
out
mov
call
add
orl
cmp
cmp
dec
fistps
dec
adc
add
pop
xor
xor
push
xor
dec
push
roll
xlat
xlat
je
iret
ja
cmp
roll
mov
jg
enter
add
xor
sub
adc
fiaddl
add
lea
ja
andl
addl
sub
add
push
jle
push
mov
lea
jl
mov
push
pop
add
inc
or
mov
fisttpll
and
or
lock
push
gs
shlw
mov
clc
jge
cmp
shll
shll
movl
cld
std
jg
cmc
lea
or
jae
neg
fldz
fstl
add
js
clc
xor
fincstp
outsb
mov
mov
hlt
mov
lods
icebp
mov
in
rorl
shlb
cmc
fbstp
xor
dec
xlat
je
mov
cmp
shlb
mov
and
shr
lret
ret
sbb
outsl
ja
mov
push
into
ret
and
adc
push
mov
cmp
jbe
mov
mov
sub
sbb
add
mov
add
fmuls
pushl
scas
es
mov
mul
cld
lods
xchg
loop
shr
sbb
mov
or
mov
loopne
stc
inc
out
scas
insl
fcmovu
incl
aas
wbinvd
shrl
xchg
add
jbe
aaa
sbb
pop
push
nop
lret
sbb
sbb
inc
cs
nop
sbb
lret
cmp
jg
xchg
push
es
aas
adc
ret
xor
inc
add
icebp
mov
cmp
xor
mov
add
pop
movsl
test
fsubrs
mov
lahf
ds
mov
jo
cld
mov
jl
pop
movsb
in
rcrl
xor
or
cli
adc
loopne
mov
mov
arpl
push
cmp
ja
pop
or
push
lock
push
jae
ss
mov
push
imul
outsl
cld
adc
mov
js
add
push
adc
hlt
sahf
jne
push
testb
je
adc
std
add
jmp
mov
pop
pop
fisubrl
ja
notl
mov
dec
cmp
rolb
fwait
icebp
push
shrb
or
mov
sbb
mov
push
cmp
jne
test
daa
dec
movb
cltd
out
stc
mov
push
and
push
jne
push
lock
cmp
in
cwtl
std
push
cld
sbb
mov
push
xor
mov
adc
fstpl
pop
mov
dec
pop
in
push
jb
in
loopne
je
es
sbb
mov
mov
cmpsl
ret
mov
cld
movsb
sub
aas
inc
out
pop
test
sbb
adcb
and
pop
or
mov
out
push
loopne
pop
inc
mov
mov
push
aad
or
fwait
mov
sbb
enter
jbe
es
pop
mov
cmp
jne
add
push
mov
data16
adc
or
mov
add
das
ret
testb
frstor
jo
out
aam
cld
mov
call
faddl
loopne
lea
lea
mov
push
faddl
es
sub
mov
jne
repz
and
mov
dec
or
cmp
jg
mov
je
aaa
sub
mov
test
pop
incb
mov
shlb
lea
jnp
mov
hlt
adc
pop
sub
in
les
or
fs
inc
idivl
shll
cmp
hlt
jb
fsubrl
push
jl
jecxz
insl
mov
dec
sahf
arpl
jl
jle
icebp
xor
jle
and
cmp
jae
outsl
lods
jmp
jmp
decl
jne
cmp
dec
lods
mov
sarb
shll
jmp
xchg
in
pop
scas
imul
in
adcl
inc
and
mov
lock
mov
jae
sti
fdivp
pop
imul
jle
movq
incl
mov
add
fmuls
xchg
xor
push
mov
daa
ret
cs
dec
jne
lret
fstps
loopne
stos
lea
stos
les
and
pop
mov
sub
and
clc
push
mov
xchg
pop
les
jp
sub
pop
and
pop
sub
ret
aam
test
int3
sbb
mov
sub
dec
scas
loopne
pop
jmp
mov
and
jecxz
sbb
and
fdivr
or
int3
mov
mov
movsl
fwait
cmp
jecxz
jne
mov
testb
ret
ds
scas
sub
adc
sbb
xchg
scas
mov
push
insl
inc
pop
xchg
sti
cli
je
mov
out
push
dec
jl
cmpb
add
sbb
mov
fistpl
lea
sarb
out
imul
loopne
xor
jae
sbb
sub
xchg
xchg
push
mov
ret
mov
scas
cmp
dec
pop
push
movsb
xchg
cmpl
xchg
aas
adc
jne
mov
inc
fisubl
add
pop
push
outsb
scas
sbb
add
mov
add
imul
and
in
rol
xor
movsl
jne
subb
clc
ljmp
je
dec
je
jmp
std
leave
rcr
jo
inc
mov
leave
cmpl
inc
cld
pusha
fs
packuswb
movsb
js
mov
mov
cmp
stos
loopne
mov
push
sbbl
pop
xchg
outsl
cmp
sbb
jg
add
lock
push
pop
push
push
push
sbb
pop
icebp
hlt
inc
inc
xor
jae
call
imul
mull
xorl
dec
jne
mov
cmp
jl
adc
test
ror
xchg
shl
xchg
or
mov
xor
mov
les
add
jne
mov
sti
ja
cmp
out
add
cmp
jbe
mov
fildl
ja
bound
ret
aaa
jne
nop
jecxz
call
mov
mov
movl
inc
in
inc
clc
or
repnz
lock
aaa
lret
inc
in
rcrl
add
add
out
jnp
jae
mov
mov
rolb
call
jbe
pop
scas
enter
pushl
push
in
loopne
add
mov
mov
xor
loope
lea
add
shll
mov
mov
jb
aaa
insb
sbb
shl
xlat
roll
mov
xor
div
imul
mov
or
mov
mov
adc
xor
pop
das
lods
movl
mov
mov
mov
mov
pop
cmp
or
repz
adc
lcall
ja
push
push
mov
add
adc
sbb
std
cmp
jne
mov
ja
push
mov
dec
adc
add
inc
or
loope
lea
dec
jne
sbb
repnz
or
cmp
dec
ja
mov
jnp
fistpll
fdivrp
fistpl
fisttps
cmp
je
mov
push
push
push
xor
mov
jl,pn
push
fcompl
out
cmc
ret
sbb
daa
cmp
out
push
xor
pop
sub
jo
dec
adc
repz
mov
fidivl
jo
push
dec
mov
jle
fs
adc
call
push
test
je
test
fisttpl
push
mov
inc
insb
pop
or
inc
test
push
mov
xor
jne
test
bound
rcr
arpl
ss
loope
dec
cwtl
test
sbb
cmpb
aas
pop
imul
sbb
pop
or
jo
and
sti
inc
addr16
rol
out
jmp
out
push
jge
gs
mov
mov
repnz
mov
popa
mov
out
sbb
fdivr
aas
push
jmp
cmp
ja
movzbl
add
jl
adc
pushf
sbb
inc
jg
cmc
and
push
push
push
inc
jo
pop
lea
pop
pop
jne
repnz
or
pop
call
pop
fdivrs
xchg
pushf
loopne
ficomps
nop
sbb
lcall
cmp
je
cmp
ja
sub
jg
jmp
sbb
or
or
sbb
mov
mov
movsb
adc
jns
out
cwtl
lahf
lods
mov
fnsave
sahf
leave
aam
mov
or
ret
or
mov
and
or
jl
das
js
cmc
pushf
sbb
ret
jle
or
shrl
lret
adc
jbe
incl
add
clc
sub
pop
mov
lret
cmc
pop
mov
or
mov
data16
mov
adc
jmp
mov
add
pop
fldenv
xor
push
add
ret
mov
out
jg
add
add
cli
int3
push
pop
cli
and
or
and
js
pop
test
or
cmp
loopne
add
sub
imul
pop
jmp
inc
imul
mov
sub
stos
mov
hlt
xlat
cmp
xor
lcall
es
test
adc
jbe
fadds
ljmp
out
cmp
pop
notl
or
mov
jmp
xor
xor
fdiv
std
lock
xor
in
in
fwait
popf
xor
cld
pop
cmpl
add
jmp
pop
jno
mov
adc
jo
dec
bound
hlt
mov
mov
loopne
outsl
add
stos
pop
xchg
fs
rorb
divb
push
sbb
clc
loopne
adc
lret
arpl
jmp
add
adc
fisubrl
jmp
movsb
or
js
and
in
mov
mov
andb
or
mov
fldcw
or
out
cmp
pop
push
sub
adc
pop
pop
pop
push
or
fnstcw
fwait
orw
mov
push
add
fldcw
pop
inc
imul
shlb
cmp
rorl
adc
pushf
lcall
rorb
push
adc
aas
sbb
nop
push
mov
clc
ss
loope
jne
push
pop
ds
pushf
mov
push
push
subb
lods
es
push
sbbl
or
add
push
push
dec
sete
sbb
push
movw
jo
aaa
xor
mov
outsl
jecxz
add
ret
scas
cli
mov
add
sub
mov
mov
je
je
sahf
cmp
pop
cmp
mov
mov
mov
in
dec
jmp
das
inc
shld
mov
push
shlb
jno
mov
and
out
dec
push
sub
add
jmp
push
mov
lea
stos
dec
clc
std
mov
je
jle
mov
jne
std
dec
decw
dec
pushl
inc
pop
inc
inc
out
sub
dec
jae
js
xchg
push
aaa
mov
mov
loop
rorl
mov
sahf
inc
jo
dec
mov
imul
push
cmp
xchg
inc
jmp
push
xchg
sub
pop
idivl
dec
jne
jmp
lea
xorl
mov
inc
loopne
mov
imul
push
cmp
shll
lcall
mov
dec
pop
mov
add
imul
cmp
xor
imul
ds
or
sbb
shl
adc
add
xor
dec
push
push
pop
clc
aad
out
sbb
lea
adc
movsl
xchg
jbe
push
jae
pusha
xlat
inc
cmp
add
pop
icebp
mov
dec
fs
int
push
rcll
fucomi
pop
cmp
ret
pop
cmp
sub
adcl
xorl
sbb
cmp
mov
into
push
xchg
mov
cmc
pop
and
add
sarb
ret
push
ret
out
push
imul
push
push
int3
call
enter
push
and
mov
jmp
mov
or
insl
adc
add
fidivrs
or
xor
jmp
cmp
subl
xor
and
sub
adc
inc
pop
pop
test
sub
sub
imul
imul
and
mov
or
das
or
ja
and
push
jne
test
push
push
mov
pop
call
fucomp
adc
push
movsb
mov
add
cmp
dec
pop
insb
pushl
mov
mov
inc
inc
sbb
xchg
adc
jg
mov
shr
je
enter
jne
dec
je
jnp
out
cmpsl
cwtl
pop
add
cmp
jmp
dec
addl
and
je
mov
cmp
jne
push
xor
sub
adc
mov
add
mov
pop
cmp
pop
pusha
fdivrp
cmp
jne
shr
shr
sbb
push
push
cmp
inc
mov
jl
pop
cmp
mov
add
ljmp
fstl
mov
cmp
pusha
ret
push
fisubrl
notb
jl
or
aas
adc
dec
add
and
inc
lea
iret
repz
push
sbb
push
adc
iret
repz
adc
or
addb
out
incl
push
or
add
or
scas
sbb
lods
mov
call
mov
mov
xor
mov
jno
push
mov
ja
loop
xor
add
jae
repnz
dec
cmp
jnp
fs
aas
inc
pusha
push
loop
add
jno
xchg
mov
pop
mov
and
rclb
or
xchg
addl
lret
cmc
jne
jg
and
add
xor
fildl
shr
ret
dec
jmp
mov
mov
push
inc
or
and
add
fs
push
sub
in
loopne
and
nop
push
or
inc
pop
lea
inc
loopne
add
loop
xor
mov
mov
jmp
je
and
xorl
fstpt
push
add
cmp
je
mov
jle
mov
jbe
sub
je
js
outsb
movsl
fstpt
pop
je
xor
arpl
push
pusha
popf
jmp
push
data16
inc
or
decl
sub
ja
cmp
ja
lea
add
add
gs
or
in
dec
mov
jge
add
mov
fdivrs
js
pop
sub
jmp
inc
dec
jmp
mov
addr16
sahf
popa
jb
int
cmp
mov
mov
add
xor
shl
ror
hlt
inc
data16
mov
out
mov
testl
out
mov
mov
in
sub
inc
mov
rol
xor
loopne
add
in
pop
lock
mov
and
movsb
decl
lret
cmp
jne
dec
jne
scas
mov
add
mov
cmp
repz
sbb
mov
inc
or
cmp
inc
dec
jne
push
fidivrl
add
rolb
jl
fcompl
adc
adc
add
clc
sub
inc
fmulp
push
cmp
sub
je
das
in
push
add
popa
daa
pop
mov
adcl
pushf
xchg
sub
mov
xor
jmp
jmp
fstp
fldt
or
fldz
in
jg
xchg
dec
mov
aas
mov
xchg
dec
ds
or
or
ret
setno
adc
mov
data16
imul
mov
push
jge
inc
mov
mov
jb
pop
es
test
sub
sub
pop
jecxz
add
leave
out
jle
sbb
mov
cmp
fidivrs
jmp
jg
call
mov
bound
cmpb
xlat
fadds
stc
aaa
nop
lods
outsb
xor
xchg
push
or
push
push
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
jmp
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
push
leave
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
fbstp
push
stos
mov
cmp
or
mov
pop
out
sub
call
inc
imul
divl
jl
xor
cmp
call
mov
sti
cli
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
inc
xchg
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
push
jmp
dec
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
cmp
jne
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
jmp
pop
mov
and
addr16
repz
mov
subb
and
call
jne
pop
aad
bound
xor
fninit
fwait
lds
mov
mov
mov
cmp
movsl
xchg
mov
push
xor
test
mov
inc
cltd
js
pop
jns,pt
test
iret
inc
cltd
jecxz
jae
push
int3
sbb
pop
aas
jb
in
arpl
sub
clc
push
mov
cwtl
push
mov
sete
mov
mov
insb
mov
push
jle
jmp
pop
cmp
mov
shlb
mov
jg
adc
add
inc
xor
daa
cld
adc
aaa
inc
or
push
mov
test
jb
imul
dec
ja
xchg
fs
sbb
or
xor
push
xchg
dec
in
add
add
loopne
push
cld
inc
sub
das
inc
add
xor
dec
rep
pop
and
jl
fimull
push
mov
mov
sub
sar
aaa
or
sub
jmp
cmp
je
pop
mov
notb
bound
sbb
es
mov
mov
push
mov
push
cmp
out
add
jg
mov
mov
mov
sub
push
in
fsubs
loope,pt
inc
xchg
cmp
jb
punpcklbw
add
and
loope
mov
add
mov
sahf
fsubrs
cmp
mov
scas
hlt
xorb
mov
mov
mov
clc
cmpsl
mov
xor
les
sti
inc
rorb
jne
mov
add
cmp
pop
xor
call
jmp
lea
push
sbb
inc
mov
hlt
aad
jmp
mov
xlat
loop
rclb
mov
cmp
ljmp
push
or
cmp
stos
or
add
push
xchg
or
je
mov
push
hlt
lods
push
xchg
ret
cmp
mov
cmp
mov
add
xor
xor
jb
cmp
xor
lods
ficoml
push
or
jne
or
bound
push
dec
jle
loop
xor
shll
xchg
inc
jle
add
xor
mov
pushf
xor
mov
add
movsb
jg
lret
xor
or
enter
arpl
inc
pop
inc
les
sbb
rorl
mov
jle
outsl
out
leave
jne
mov
cmc
nop
push
xchg
jmp
fidivrl
loop
ja
mov
add
repnz
je
pop
out
push
call
std
imulb
pop
add
sub
je
cld
pop
ficoms
inc
ja
cmpsb
add
jl
pop
cli
jmp
pop
mov
in
jmp
fimuls
das
mov
test
mov
push
mov
pop
jg
or
push
data16
or
icebp
mov
std
pop
cmp
dec
push
aad
add
lahf
js
mov
hlt
popa
lock
add
xchg
jle
push
dec
mov
bound
std
arpl
cmp
test
popf
pop
and
add
push
cmp
es
and
mov
cld
cmp
out
pop
iret
xor
xor
mov
mov
mov
push
in
ds
ja
lcall
fldcw
and
add
or
sahf
loope
jne
cmp
jmp
pop
jmp
push
lea
xchg
ret
inc
xor
jmp
mov
mov
out
lcall
test
jne
xor
psubusw
pusha
out
sbb
jecxz
mov
adc
scas
nop
xchg
aas
inc
and
in
sbb
cli
aas
clc
sub
cmp
je
add
fidivs
repz
lea
ds
js
jne
cmp
fucompp
cmpsb
test
lea
mov
aas
rcll
je
pop
ret
clc
sub
in
pop
jmp
pop
xor
call
sub
fcmovne
push
pop
repnz
add
scas
iret
inc
mov
push
push
push
test
jl
or
xor
lea
mov
mov
mov
or
inc
add
pop
push
inc
or
or
es
sub
xchg
dec
dec
push
sub
aas
cmp
mov
or
sbb
xchg
pop
mov
inc
cmp
adc
push
clc
ret
mov
xor
pop
xor
test
adc
or
sub
lock
movsb
mov
jg
jge
in
or
ja
pop
mov
inc
push
mov
pop
ljmp
cwtl
xlat
sbbb
jnp
dec
inc
add
and
pop
sahf
jne
push
add
mov
inc
loopew
jl
ret
adc
mov
inc
mov
jle
jbe
add
sbb
into
in
push
call
dec
adc
push
mov
in
int
pusha
sbbb
add
sbb
or
jmp
in
adc
pop
push
push
and
leave
outsb
inc
add
jmp
sbb
movsbl
inc
inc
inc
add
incl
xchg
jmp
loope
cmp
adc
xchg
aas
loop
test
sbb
insl
adcb
jecxz
pop
pop
jg
pop
push
jne
pop
sbb
cmp
inc
mov
adc
outsb
cmp
inc
js
adc
je
call
loopne
sbb
dec
addb
je
fbstp
jb
jbe
test
lea
push
push
inc
nop
add
stos
fsubs
pop
pop
cmc
inc
jmp
adc
jne
push
jne
push
pop
test
jns
je
addl
inc
orb
rol
popa
xchg
pop
jp
push
cmp
sub
add
sarb
in
mov
pushl
out
call
pop
add
inc
add
push
add
mov
add
ds
sar
mov
mov
or
out
push
outsl
cmp
xchg
push
add
jl
lock
mov
cmc
xchg
ljmp
or
mov
aaa
sbb
lock
sbb
addb
cmp
jmp
test
push
inc
enter
add
negb
daa
or
dec
and
shlb
pop
lock
shl
push
sbb
shll
outsl
inc
lcall
push
lds
mov
and
daa
lahf
adc
bound
mov
adc
pop
mov
das
push
cmpxchg
adc
pop
adc
fmull
rcl
inc
mov
jbe
mov
sbb
test
popa
rclb
sub
aaa
add
dec
add
cmp
shr
rorl
lods
adc
scas
jecxz
adc
in
daa
js
fsubs
test
in
loopne
pop
ficompl
adc
out
mov
cld
lahf
icebp
arpl
jo
fcoms
push
push
push
sub
mov
addb
push
das
sbb
pushl
add
adc
or
xor
pusha
std
xchg
jmp
shll
mov
push
orb
mov
nop
cmpsb
xor
and
rorl
lahf
pop
aas
ret
mov
popf
sti
or
pusha
add
sub
or
jo
xor
dec
cs
adc
adc
adc
add
fs
sahf
or
and
loop
shr
ret
xor
nop
or
xor
adc
sbbl
scas
push
jl
cmp
add
je
cmp
push
sub
in
push
sub
je
jmp
add
stos
pushf
sub
jb
je
jmp
cmp
sub
outsl
lods
cs
adc
jmp
sub
cmp
jg
pushl
leave
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
sub
decb
mov
jmp
mov
pop
lret
in
mov
or
aaa
jmp
daa
mov
popa
repnz
movsl
add
dec
pop
or
cwtl
fs
pop
pop
mov
and
incb
je
in
fnstcw
inc
adc
inc
shlb
decl
mov
shll
mov
adc
add
push
push
sbb
adc
inc
or
pop
lret
mov
pop
loopne
sbb
inc
or
inc
cmp
push
mov
push
out
or
mov
cmc
and
hlt
mov
rcll
clc
les
mov
repnz
or
pusha
test
jle
dec
mov
je
pop
sub
filds
pop
xor
mov
jg
cmp
adc
dec
sub
add
loopne
dec
sqrtps
push
mov
xor
inc
pop
ds
xor
sti
jle
mov
fistpl
xor
inc
ss
xlat
int3
dec
mov
add
jo
rcll
sbb
pusha
xchg
rcrl
xchg
bound
arpl
addr16
add
xchg
push
fdiv
hlt
push
add
dec
xchg
push
fbld
mov
in
mov
cmpsl
in
and
sub
gs
jno
cmp
bound
cmp
cmp
lea
lock
mov
mov
add
mov
jbe
push
sti
pop
dec
je
add
push
push
nop
jmp
or
mov
add
dec
jne
pop
pop
push
lret
rolb
or
jg
push
dec
aaa
lods
xor
xor
lock
pushl
inc
inc
inc
inc
inc
inc
and
mov
pop
inc
mov
mov
adc
sbbl
idiv
add
sbb
jle
and
and
dec
int3
fdivl
loop
add
loopne
inc
add
sub
inc
cli
pop
rorl
xchg
shlb
popa
xlat
aaa
movsb
mov
clc
mov
mov
outsl
adc
ja
add
mov
mov
push
rep
cmp
stc
neg
sbb
inc
leave
push
inc
aad
stc
nop
push
xchg
push
dec
test
cmpl
cmpl
mov
mov
or
push
push
lea
iret
xlat
or
popa
xor
inc
pop
ret
push
mov
les
jne
cs
sti
push
test
add
shll
or
sbb
mov
push
fidivrl
call
push
push
test
xor
mov
add
mov
jo
sbb
jg
adc
cmpb
ret
mov
pop
push
push
pop
jl
jne
xor
jne
xchg
add
and
add
cli
fwait
sbb
jnp
mov
cli
sub
dec
xchg
mov
mov
jne
cmp
je
mov
push
fs
xchg
call
cmp
mov
add
jo
add
push
sbb
mov
cmova
mov
xlat
sbb
clc
dec
popl
add
add
leave
push
xor
dec
or
push
xor
fcomps
adc
mov
or
ficomps
pop
pop
call
in
or
add
xor
scas
fld
vmulps
mov
pusha
push
ret
outsb
or
inc
call
imul
sbb
inc
sbbl
push
push
mov
push
push
jnp
lock
cltd
xchg
das
or
pop
fisubl
sbb
and
mov
mulb
clc
dec
jl
lock
lock
lea
pop
iret
lret
and
sbb
add
add
mov
push
pop
dec
jne
ret
push
ret
cmp
jp
add
mov
inc
jg
lods
inc
sub
addr16
mov
dec
cld
cs
clc
xchg
adc
or
mov
aam
nop
sbb
jnp
test
push
es
push
add
jo
outsb
and
lock
js
add
pop
test
outsb
fadd
inc
clc
mov
push
mov
mov
data16
dec
inc
in
fadds
ja
adc
das
mov
mov
jo
cs
rcl
call
push
or
push
fstpt
or
movsb
inc
mov
movsb
cli
out
push
push
adcb
push
adc
mov
mov
mov
imul
add
out
outsl
cmpsb
push
ja
jnp
add
notb
lods
ret
imul
pusha
not
cmp
movsb
sbb
push
push
mov
sbb
pop
aam
outsb
icebp
push
pop
cmp
dec
sub
cmp
mov
out
rorl
pavgb
adc
mov
add
adc
push
stos
and
scas
push
adc
movsl
push
inc
ret
xchg
dec
jbe
jbe
and
leave
mov
fistpll
push
dec
pop
dec
das
dec
pop
orl
sbb
pop
scas
fistps
mov
or
push
add
and
or
sbb
xor
call
jmp
inc
add
jmp
in
addr16
and
pusha
pop
or
fcmovu
jmp
push
or
outsl
or
in
add
fnstcw
and
inc
mov
xchg
push
mov
das
push
pusha
rcrl
rcrl
cmp
lcall
xlat
mov
mov
iret
push
mov
mov
mov
cmp
jl
cmp
inc
inc
jo
mov
push
dec
jbe
push
js
or
jnp
xchg
lret
dec
rolb
ljmp
ret
aas
and
dec
movsl
cmp
je
imul
push
push
adc
insl
push
mov
add
push
xorps
cmpsl
pop
iret
push
clc
shr
and
fs
outsl
xor
sub
xor
loopne
push
mov
cltd
jle
adc
add
jo
or
dec
hlt
lcall
dec
sub
sub
loopne
add
pop
add
or
in
xlat
rcll
cli
shl
jo
mov
mov
mov
stos
rol
shrl
cmp
cmp
insl
cmp
push
enter
lock
push
pop
int3
sbb
mov
mov
jg
rolb
xor
jnp
imul
xchg
movsb
sub
mov
jg
dec
jo
mov
mov
add
mov
xor
add
dec
mov
jmp
push
fcoms
fs
or
or
or
hlt
pop
add
sbb
dec
clc
arpl
add
adc
mov
pop
add
pushf
xor
sub
dec
xchg
add
jnp,pt
xchg
mov
and
fimull
js
fimull
das
clc
cmpsb
enter
cmp
jne
iret
mov
dec
jmp
int3
enter
jmp
push
add
mov
in
movsl
mov
xor
mov
adcb
mov
push
adc
sbb
daa
adc
cld
xchg
dec
jge
js
jmp
pushl
add
dec
jmp
lahf
jbe
jnp
call
adc
sti
add
mov
dec
jne
dec
call
or
push
add
sub
mov
mov
lea
pop
pop
hlt
lock
cmp
loopne
mov
and
out
aaa
test
cmp
jne
inc
cmpb
rol
jne
push
lea
lea
negl
hlt
mov
sarb
jne
fdivrs
add
xorl
clc
cmp
je
sbb
and
mov
mov
ret
cmp
xchg
mov
jl
lcall
sub
rcrb
cmp
ret
imul
inc
inc
inc
test
add
lds
mov
inc
js
pop
dec
mov
cmc
adc
mov
push
cs
lock
ja
sahf
dec
push
inc
jns
popa
push
negb
idiv
pusha
fmuls
push
add
pop
xchg
jl
pop
sub
cmp
fidivrl
sub
fdivrl
jg
cld
pop
dec
data16
adc
ret
lret
xor
cmp
pushl
push
outsb
add
data16
add
lret
arpl
pop
jbe
xchg
cli
add
xor
dec
jl
movsb
mov
mov
sub
es
xor
int
scas
and
add
lea
xor
pushf
ds
sub
aas
or
negb
inc
push
push
jns
adcb
adc
or
jmp
jmp
xchg
test
xor
add
jo
push
movsb
imul
xchg
xor
or
fisubs
xchg
stos
cmp
sbb
push
xor
arpl
je
das
cmp
stos
ljmp
icebp
push
icebp
cltd
jo
mov
call
dec
lcall
or
push
push
das
fldenv
push
push
sub
addr16
out
and
and
loopne
ja
adc
pop
jns
add
adc
lods
xor
jmp
insl
push
xchg
dec
cmp
mov
icebp
test
test
add
jmp
lea
cmp
fsubr
jge
push
je
out
arpl
cld
mov
outsl
lcall
xor
lret
pusha
dec
jmp
add
inc
out
lea
sbb
les
out
or
jno
loop
or
inc
dec
in
cmp
mov
pop
pop
call
push
cwtl
loope
test
pop
pushl
mov
imul
pusha
cmp
ljmp
mov
add
xchg
addr16
mov
pop
int3
sub
xorb
adc
and
out
push
test
dec
rol
push
mov
add
cmp
arpl
and
push
cmp
mov
pushf
push
not
ja
fwait
aas
mov
mov
mov
inc
dec
dec
out
ss
add
sbb
or
adc
add
ss
mov
push
out
jle
inc
and
shr
xchg
jmp
cmpsb
or
pop
das
or
sti
and
xor
xor
dec
lahf
cmp
pop
cmc
outsl
or
cli
add
xor
shlb
add
repz
cmp
clc
push
mov
or
rolb
rorb
aam
mov
movsl
dec
cmp
xor
add
mov
ret
test
and
cmp
std
sti
sbb
cmp
lcall
ja
cltd
inc
into
sarl
sub
lret
adc
xchg
shl
fmull
hlt
bound
pop
inc
test
lret
mov
inc
jbe
insb
pushf
shl
movl
cmpsl
mov
ja
ret
mov
test
xchg
bound
rcrl
pcmpgtd
inc
add
jmp
or
jns
call
jge
push
mov
mov
cmp
pop
aaa
jo
and
arpl
int
lods
mov
shlb
adc
xchg
mov
adc
nop
ret
xlat
or
and
inc
mov
pop
arpl
cmc
cmc
mov
add
icebp
mov
cld
std
mov
ret
ljmp
add
pop
sub
push
push
sub
mov
mov
cwtl
out
cmp
fdivrs
adc
and
je
insb
and
fnstsw
xor
jge
push
fmuls
lea
lea
pop
pop
sarl
pop
mov
scas
imul
push
pop
popa
sub
fdivrs
sub
test
jg
aaa
add
jo
add
jo
sub
data16
xor
sub
mov
scas
mov
add
insb
xor
inc
and
nop
int3
loop
daa
xchg
les
cs
ds
test
xchg
pop
xlat
stos
xchg
and
or
or
add
fwait
or
inc
popf
mov
sahf
movl
aam
mov
lahf
data16
fcoms
nop
or
lahf
mov
jnp
nop
sub
int3
push
and
insl
pop
or
jg
fsts
mov
and
mov
mov
js
inc
mov
pop
movl
adcl
pop
cmpl
cltd
or
aas
xchg
lea
rorb
dec
jae
out
jne
sbb
push
hlt
cmpsl
xor
call
push
or
dec
adc
xchg
leave
dec
jecxz
in
ret
xchg
xchg
or
call
popf
inc
dec
dec
dec
push
mov
cs
mov
cmpb
cmp
mov
cmp
jne
dec
add
adc
repz
and
push
into
cmpsl
enter
mov
das
xchg
jp
sbb
adc
ret
pop
fucomi
pop
dec
cmp
lcall
clc
sub
cmp
and
lcall
ret
mov
rcrb
mov
xchg
cmpsb
pop
iret
cmp
std
ss
les
shll
mov
push
pushf
jp
push
xchg
andl
jae
xchg
arpl
cmpsl
xor
add
jl
test
mov
sub
dec
push
sub
sub
mov
mov
pop
lea
sub
loop
inc
and
inc
or
and
inc
jmp
lock
push
or
jl
std
inc
and
jle
mov
jne
mov
std
shrl
pop
ss
jmp
cmp
jge
adc
pop
lcall
repz
xor
jo
cmp
hlt
sbb
out
jge
mov
and
push
mov
add
inc
fidivrs
dec
and
mov
jge
bound
lods
or
pop
sbbl
xchg
cmp
enter
dec
add
mov
in
ret
add
js
insb
inc
pop
jle
push
add
jo
or
add
testb
ret
and
pop
add
inc
add
mov
and
aaa
mov
push
loopne
cld
push
cli
dec
js
mov
add
sarl
cld
std
test
adc
cmpsw
scas
out
add
pop
push
or
cld
mov
sub
shr
xor
enter
cld
mov
das
daa
push
jg
bound
cmp
lock
or
xor
or
aad
sub
cmp
sarb
lock
movsb
sub
shrb
xchg
sbb
es
nop
dec
jbe
std
and
and
add
cmp
xor
pop
mov
in
lcall
aas
push
lcall
mov
xchg
fsubs
mov
ljmp
xchg
cmpsl
mov
mov
mov
push
sysret
in
dec
es
inc
cld
pop
sbb
sbb
or
int3
sbb
jle
push
xor
nop
inc
scas
adc
mov
loopne
cld
add
out
adc
push
sbb
jge
mov
jl
adc
adc
dec
je
jg
push
mov
push
in
aas
xor
mov
mov
xchg
cmp
je
cmp
je
cmp
je
cmp
je
cmp
clc
mov
push
je
cmp
je
cmp
test
je
mov
adc
sarb
shll
cmp
decl
or
adc
jmp
push
mov
mov
mov
add
mov
loopne
cs
adc
cmp
pop
test
in
cmp
mov
sub
and
and
xchg
jo
or
movsb
into
mov
adc
push
out
out
leave
pop
call
call
shll
adc
sarl
push
push
into
sub
jb
mov
mov
push
arpl
movsl
dec
mov
insb
inc
ljmp
lds
add
and
je
dec
dec
pop
cmp
push
pop
pop
sti
xlat
sbb
ja
bound
dec
and
jl
jo
jmp
xchg
or
and
arpl
jmp
repz
test
pop
loope
int3
cmp
jns
icebp
jmp
mov
cmpsl
adc
cmpl
sbb
mov
jl
add
pop
sbb
mov
sbb
adcb
les
je
sarl
lock
and
mov
cmp
cmp
pusha
or
mov
or
or
into
ret
rclb
and
cmpsl
mov
xchg
cmpl
es
bound
mov
nop
jmp
and
insb
lea
push
jle
push
mov
cmp
add
mov
arpl
xchg
test
jmp
aas
add
sarl
and
mov
push
and
add
decb
call
pop
pop
or
adcb
pop
inc
sbb
or
lock
aad
insb
and
mov
and
sub
jl
and
orl
lea
xor
push
and
fbstp
sub
mov
sub
push
sub
icebp
push
imul
add
test
cmp
cmp
add
mov
cmp
inc
call
xor
inc
add
cmp
add
in
out
sbb
adc
popa
add
in
mov
push
xchg
inc
pop
add
clc
movsl
pushf
pop
sub
xchg
out
push
dec
or
adc
sub
jmp
rolb
es
nop
pop
push
je
xor
rolb
push
push
js
loopne
out
rcrl
enter
cmp
aad
xor
jnp
pusha
mov
sub
jg
xchg
popl
push
xor
testl
fs
add
outsb
or
sarl
lret
xchg
xor
loope
dec
shrb
ja
dec
dec
adc
inc
or
sbb
hlt
fdivr
xor
cmp
ja
inc
stos
hlt
pop
mov
pushf
jl
and
inc
out
inc
std
stc
dec
dec
push
sub
jmp
push
leave
jbe
push
sub
mov
and
adc
pop
inc
push
or
clc
or
lahf
insb
mov
jae
and
or
pop
sahf
push
das
dec
je
jcxz
jne
aaa
insb
jnp
fistl
push
or
xlat
or
adc
sub
aad
ds
mov
test
lods
adc
sub
jg
rcl
dec
pop
mov
jb
adc
push
jb
out
out
mov
adc
arpl
sub
jmp
getsec
jmp
fildl
ret
jne
loopne
inc
idivb
fisttps
mov
push
hlt
and
sub
sub
lock
pop
ficoml
movsb
xor
add
xor
sub
cld
lds
inc
xor
hlt
jbe
cmpb
sti
addr16
add
add
fimull
js
and
mov
cmp
and
mov
into
jae
aas
cmp
pop
cmp
mov
lock
sbb
jg
add
lods
jl
mov
cmp
or
add
sbb
loop
add
sbb
or
xchg
testb
pushf
sarb
ljmp
roll
and
push
cmp
sti
jmp
xchg
ret
mov
adc
sbb
and
jo
jmp
push
add
js
dec
jmp
sbb
or
mov
dec
inc
jg
jmp
in
hlt
mov
sbbl
mov
jg
adc
mov
xlat
xlat
cmp
lods
dec
xchg
fucomi
sahf
and
push
push
mov
clc
mov
add
pushf
push
add
in
inc
push
lea
lcall
sti
mov
imull
dec
loopne
loopne
idiv
cmp
je
addl
loopne
shrl
or
jne
mov
cmp
jge
push
jbe
fwait
andb
imul
in
sub
pop
addb
incb
fsubrp
negb
pushl
push
dec
xor
sub
js
sub
mov
cmp
aam
icebp
fwait
out
cmp
flds
test
xor
or
stos
jb
push
dec
shl
add
roll
rol
mov
mov
sub
lahf
insl
xor
sahf
or
add
cmpsl
or
push
cs
add
lods
dec
mov
mov
mov
lea
shl
push
lcall
dec
jne
out
cmp
sbb
addl
cmp
sub
xor
mov
jne
outsb
sub
loope
adcl
push
rclb
or
outsb
sbb
in
rcrl
adc
dec
push
mov
fimuls
lret
clc
pop
pop
pop
mov
and
pop
mov
add
sbb
xchg
in
sbb
inc
dec
imul
adc
mov
mov
push
pop
inc
sub
or
push
inc
push
xor
jle
aaa
les
mov
xchg
fisttpll
lods
xchg
xor
in
add
or
pop
outsl
sete
cmp
inc
push
push
and
cltd
mov
or
sbb
stos
clc
ficomps
cmpl
clc
jmp
sbb
icebp
inc
out
mov
test
push
sbb
push
sub
test
mov
jae
inc
push
pop
je
popa
outsb
insb
pop
outsb
bound
push
mov
or
shlb
inc
jns
insb
push
clc
popa
jp
dec
popa
je
sub
push
fistpl
dec
dec
sub
push
push
xchg
sbb
xchg
insl
xor
mov
inc
push
push
mov
or
outsb
pop
out
cmp
addr16
dec
jae
sub
jae
popl
or
jo
pop
fistl
fs
inc
inc
or
int
sub
sub
push
ss
sbb
mov
adc
jp
sbb
outsb
xor
insl
sub
jb
dec
inc
negb
add
cmpsl
testl
nop
mov
push
push
or
xchg
xchg
pushf
popf
mov
inc
pop
push
inc
mov
jbe
mov
aaa
negl
sub
cmpsb
aaa
sbb
cmpsb
jae
push
aaa
outsb
fcmovu
dec
insb
outsb
cmpsl
aaa
dec
dec
inc
das
sti
pop
mov
push
movw
jg
mov
ljmp
add
pop
sub
push
cmp
sbb
push
add
xor
popa
mov
iret
push
ret
add
fildl
es
and
push
fs
dec
push
cwtl
jne
rcll
imul
outsb
or
inc
insb
xor
stos
popf
xchg
jbe
ja
add
sub
scas
lcall
fdivs
mov
mov
ret
pusha
add
cmp
xor
outsb
dec
leave
and
mov
fs
fnsave
add
xor
push
add
sbb
stos
movsl
adc
dec
adc
in
fstpt
addr16
decb
mov
or
sub
inc
dec
jne
aaa
push
sbb
push
push
std
inc
pushl
pushl
add
mov
loope
dec
push
mov
lahf
inc
xor
jle
mov
lods
lahf
mov
sbb
lock
dec
xchg
jne
je
ja
stos
mov
jo
cld
or
add
and
out
aad
sub
adc
or
sub
outsb
lea
add
das
xchg
dec
clc
xchg
dec
mov
clc
cmp
adc
call
outsb
adc
cmp
jb
mov
mov
pop
hlt
add
shr
cmp
fstl
add
and
jbe
inc
mov
adc
add
clc
push
neg
loopne
in
jmp
jbe
int3
dec
mov
test
push
lcall
nop
and
lret
ds
push
push
ficoms
mov
mov
and
lea
fdivrs
mov
push
sbb
xchg
cwtl
push
cwtl
pop
cmp
add
subl
mov
push
adcl
imul
lods
mov
cmp
lds
sub
ret
in
add
data16
xchg
shll
cmp
outsl
test
mov
mov
push
dec
mov
xchg
push
inc
jmp
xor
ret
mov
fisubrl
sbb
fnstcw
lock
adc
sbb
pop
mov
aad
xchg
shrb
les
push
or
cmp
sbb
push
xor
cmp
rorb
or
push
shlb
mov
add
dec
lock
or
movl
mov
inc
fs
rcrl
jo
imul
mov
or
push
jae
jg
int
pop
sbb
xor
sbb
movsb
inc
lea
lods
loope
in
pop
jbe
and
ljmp
push
aaa
add
icebp
pop
fldcw
xchg
nop
lret
sti
dec
xchg
in
stos
jecxz
es
fwait
mov
pop
or
or
mov
pop
outsl
sbb
cwtl
xor
pop
jne
js
and
mov
jg
add
push
mov
push
loope
fstp
sub
jo
xor
ret
cmpsb
das
fadd
mov
sbbb
pop
cmp
pop
movsb
sbb
sub
cmp
inc
sbb
cmp
adc
add
sbbb
xor
cs
lock
frstor
inc
add
adc
push
mov
incl
clc
adc
sar
jns
adc
ss
mov
frstor
cmpl
sar
pop
rolb
add
scas
sub
imul
adc
inc
push
xchg
cmc
add
push
cmpl
sbb
loop
adc
sbb
adc
clc
int3
std
cmp
in
daa
pop
lea
jle
jg
cld
test
mov
ja
pop
add
push
push
fstpt
loope
inc
add
mov
loop
div
test
scas
lods
push
adc
call
clc
mov
pop
push
popa
je
jp
daa
sbb
push
xchg
in
inc
daa
jo
imul
pop
xor
push
cmp
loope
push
mov
sub
sbb
test
addr16
xchg
and
mov
sbb
mov
add
xchg
lods
and
xchg
enter
cwtl
pusha
dec
andl
lahf
xor
addl
cmpsl
lea
mov
lock
clc
cs
or
push
push
sahf
mov
or
dec
mov
sub
push
cltd
add
jl
popa
lret
movsl
ss
clc
pop
push
loop
inc
jo
mov
push
add
je
ja
popa
jnp
push
sub
adc
fdivrs
mov
push
insb
and
fidivrl
insb
push
outsb
jbe
jp
add
addr16
daa
jo
pusha
inc
add
cmpl
xlat
mov
stos
sub
adc
pop
mov
in
inc
jle
ficomps
jo
sbb
cmp
sbb
lea
dec
mov
and
mov
scas
pop
sbb
xor
adc
mov
mov
pop
ret
sbb
orb
out
xchg
push
gs
mov
add
sbb
loopne
xchg
ret
test
je
fwait
push
sbbl
jmp
sti
add
dec
mov
popf
mov
add
orl
call
jne
xchg
xchg
and
sbb
sbb
push
fists
lock
push
ffree
jp
in
pop
mov
and
mov
cltd
movzbl
add
or
fcomps
sarl
add
inc
aad
insl
adc
push
pop
dec
mov
add
pop
loope
xchg
or
out
or
loopne
xchg
in
dec
jno
sbb
cmpl
in
mov
jbe
orl
add
pop
subb
jo
sub
scas
jb
add
pop
xchg
ret
mov
cmp
jne
adc
addl
out
das
mov
sub
call
cli
not
xor
add
inc
mov
jg
addb
add
push
sub
mov
mov
div
fcomps
cmpsl
pusha
fsubrl
sbbl
inc
sub
iret
nop
adc
push
xor
lock
sbb
je
jno
jmp
or
jbe
jp
add
pop
dec
add
lock
mov
mov
mov
lea
mov
add
adc
sbb
sbb
and
in
mov
sbb
mov
fiadds
add
sub
xor
stos
jmp
aad
pop
adc
push
mov
add
ljmp
pop
pusha
mov
inc
imul
add
or
inc
rolb
lods
daa
inc
dec
movsb
jg
loopne
pop
ljmp
movsl
movsb
inc
mov
into
sub
neg
and
pushf
mov
cmp
outsb
jne
inc
add
jnp
adc
pop
adc
push
cld
inc
pop
adc
jl
test
jne
jmp
add
mov
push
push
lock
mov
push
movsb
adc
inc
push
and
jo
push
add
jns
lock
insb
cs
sbb
fs
push
xor
adc
mov
popf
mov
sbb
mov
and
ret
sbb
pushf
cmc
adc
out
jne
cmp
push
push
inc
rolb
mov
pop
lahf
sub
hlt
mov
loop
lock
pop
test
into
les
cmp
adc
shl
push
mov
addr16
jbe
js
inc
fucomip
cmp
push
or
ret
inc
push
call
ds
lds
pop
aad
adc
push
push
rcll
std
pop
dec
adcb
push
cmpb
lods
movsl
mov
add
clc
mov
jbe
testb
fmull
je
ficoml
rolb
mov
inc
inc
sub
sbb
lea
push
xor
sub
dec
push
pop
jo
dec
jbe,pn
push
pop
push
xchg
jbe
lahf
pusha
dec
cmp
jb
sbb
fisttpll
adc
push
andw
push
adc
fbstp
dec
or
test
jo
push
adc
mov
add
mov
repnz
sbb
push
lea
inc
or
xchg
mov
mov
sbb
sbb
ds
sub
jo
cs
fldenv
adc
pop
mov
inc
rorl
jmp
sbb
loope
push
push
pop
lahf
lods
mov
addl
sbb
cltd
push
push
lret
mov
push
dec
inc
or
insb
xchg
sbb
sbb
push
sub
mov
imul
sbb
dec
and
add
das
adc
push
ja
test
push
push
push
out
push
jg
jbe
mov
inc
gs
ret
adcb
scas
pop
fisubs
push
cwtl
sub
xchg
das
jb
icebp
lock
pop
stos
and
notb
mov
sub
cmc
call
adc
xor
andb
addb
mov
addb
add
and
cld
pop
cmp
int
cld
mov
out
xchg
clc
add
cwtl
cwtl
pop
push
adc
adc
inc
lods
test
andl
sti
cmp
or
jge
and
movb
outsb
fnstsw
push
xchg
dec
cltd
xor
pop
or
add
mov
pop
adc
fwait
fadds
push
or
push
gs
cltd
rcrb
and
adc
add
lcall
or
and
adc
mov
push
lods
add
or
insl
stc
push
cs
aam
ror
dec
inc
sub
or
push
add
fstps
xor
or
push
sub
nop
hlt
adcb
pop
dec
test
dec
add
aaa
call
xchg
shrb
popa
or
sti
xchg
mov
add
cld
mov
push
sbb
push
mov
add
adc
insl
mov
add
or
insb
dec
sbb
mov
xor
add
clc
add
addb
not
adc
jbe
testl
add
sub
lods
popf
stc
pop
shl
push
sbb
push
ss
mov
xor
pop
out
cmp
jne
mov
or
push
dec
fs
arpl
sbb
push
xchg
cwtl
ret
cmp
jne
push
gs
push
fcoms
outsl
test
pop
or
jbe
in
push
incl
push
pop
pop
push
add
testb
sete
push
add
add
and
push
push
add
inc
in
xchg
decb
dec
in
ljmp
pop
jecxz
das
jecxz
into
jo
mov
ret
xchg
nop
jne
lea
push
testb
add
pop
add
inc
jg
dec
lcall
pusha
stos
xchg
outsb
nop
add
and
mov
enter
jle
adc
ja
mov
and
cmpl
and
mov
or
call
stc
dec
inc
mov
aas
mov
and
mov
pop
xor
cs
or
push
inc
cmpl
outsb
xor
pop
jb
inc
sbb
and
jg
sbb
adc
sbb
sbb
and
cmp
jmp
xchg
in
adc
inc
lock
roll
sbb
hlt
hlt
jg
mov
jge
mov
stc
add
push
lock
push
push
jg
in
mov
inc
cmp
push
aaa
loopne
js
outsb
cs
mov
or
mov
add
sbb
mov
inc
xor
repnz
mov
push
cmpsl
mov
xchg
cmp
jmp
arpl
jl
mov
jbe
xchg
mov
xor
push
sub
or
mov
pop
xor
loope
xor
push
xchg
push
sub
jmp
pop
sub
test
add
mov
sub
push
ds
aam
jle
test
jg
mov
add
pusha
sti
mov
add
mov
clc
out
add
test
pop
xlat
in
movsb
push
pushf
push
fnstsw
jnp
cwtl
mov
cmp
push
sahf
mov
call
jbe
ljmp
loop
cwtl
scas
sti
mov
sub
or
jmp
push
mov
ret
and
ret
mov
and
mov
sub
add
jns
push
shlb
inc
pop
ret
shlb
mov
jmp
loope,pn
lods
mov
mov
jae
or
or
std
lea
mov
mov
push
mov
test
js
add
pushf
push
or
ret
pop
test
sti
out
arpl
daa
jo
add
jle
pop
fs
add
gs
add
outsb
aas
inc
adc
add
aas
or
sti
pushf
adc
je
outsl
insl
and
test
fldl
bound
ja
loopne
ret
sysret
je
addr16
sub
loopne
pop
inc
test
xchg
ret
sbb
xor
add
shrl
add
fs
add
add
jge
movsl
add
add
jne
sub
jb
je
ljmp
push
sbb
and
pop
repnz
sbb
rcl
adc
xor
shll
hlt
or
and
push
add
stc
xchg
nop
mov
ror
mov
mov
inc
pop
jmp
insb
popf
ret
pushf
dec
mov
add
dec
pop
sarl
cmpsb
mov
pop
cmp
add
and
adc
cmp
lods
sub
leave
push
xor
push
cmp
shl
jns
push
add
xchg
lock
jnp
pop
lock
or
or
sbb
mov
sub
add
lcall
mov
add
or
push
adc
std
sbb
add
stos
lds
fdivrs
aad
xchg
int
jle
aaa
xor
pop
sub
lea
stc
ror
jle
and
mov
cmp
jne
cmc
es
or
or
mov
push
jne
or
inc
loope
rcl
add
add
push
mov
or
pop
in
cmp
lds
or
insb
ret
or
sbb
mov
mov
call
inc
sti
lods
mov
or
jge
imul
push
rcl
jl
push
push
jb
loopne
daa
mov
out
lock
mov
cmp
cmp
push
sub
xchg
add
repnz
cmpsl
adc
mov
inc
adc
or
pushf
clc
pusha
repz
stos
shrl
leave
mov
adc
aas
pop
cmp
jle
pop
out
lcall
add
add
add
or
inc
jo
sub
testl
loope
add
push
mov
into
dec
fbstp
sub
popf
ss
lods
addr16
dec
dec
push
push
pop
inc
dec
ret
stos
negb
dec
cmp
in
xchg
ret
jae
imul
add
aad
lret
inc
xchg
fiaddl
bound
imul
mov
incl
sbb
jne
call
fucomip
inc
push
sbb
inc
push
dec
push
dec
inc
inc
adc
inc
fsubl
mov
inc
inc
push
inc
and
xchg
pop
cmp
cmp
adc
popa
test
cmpsb
jo
jb
lods
push
jb
push
sub
js
movsb
str
mov
or
ret
lock
adc
pusha
jae
dec
shl
jae
outsl
lds
sarb
xor
mov
cltd
subb
cld
shrb
add
inc
push
jo
jo
test
scas
mov
add
cmpsb
lock
or
push
xchg
test
add
loopne
or
in
push
pusha
jne
jae
test
movsb
add
dec
ja
loopne
jo
add
pusha
pop
loopne
xchg
or
jo
outsl
xor
push
push
pop
fwait
mov
subb
dec
push
dec
inc
in
cmpb
dec
inc
mov
push
xor
mov
push
push
push
push
dec
sub
fisubrl
add
inc
sub
daa
add
popa
lods
cld
push
sub
das
adc
das
lret
sbb
call
and
dec
push
je
rcrl
inc
push
push
inc
dec
inc
aaa
add
loopne
int3
data16
pop
mov
dec
dec
pop
pop
inc
das
insb
mov
and
cmp
sub
in
inc
je
or
int3
mov
xchg
jl
xor
push
sub
mov
xor
clc
outsb
dec
sub
push
and
addr16
pop
adc
jo
pop
xor
inc
scas
arpl
jo
mov
adc
fprem
cmp
add
out
or
dec
mov
dec
dec
sbb
or
pushf
push
enter
xchg
loope
dec
xor
adc
ret
pop
jbe
dec
pop
push
bound
stc
pop
and
push
adc
inc
test
gs
or
movsl
int3
push
adc
or
push
ds
cmp
xchg
adc
inc
mov
fwait
loope
gs
push
adc
sub
roll
adc
bound
inc
pop
xor
and
adc
jb
loopne
ret
imul
fs
imul
push
cmpb
daa
or
lret
mov
test
jo
mov
jns
not
pop
shlb
lods
add
sub
pusha
pop
push
mov
bound
xor
shlb
jb
jae
sub
and
shlb
add
and
or
inc
sbb
leave
out
push
mov
jae
insl
sub
mov
out
rcrb
add
or
push
push
jo
data16
mov
dec
aaa
dec
sub
mov
or
dec
subl
clts
dec
cmpl
inc
sbb
push
jl
push
sbb
sbb
and
push
ja
popf
pop
and
popa
insl
subl
mov
xchg
jl
test
jmp
jo
sub
push
add
cmp
adc
sub
or
adc
lods
addl
push
pop
cmp
pop
cli
mov
push
data16
inc
push
outsl
xchg
adc
stos
xor
adc
push
andnps
icebp
dec
outsl
je
dec
adc
popa
add
mov
fidivrl
inc
arpl
or
adc
pusha
or
cltd
pop
sub
mov
bound
outsl
js
xor
or
add
jl
loopne
push
andps
inc
adcl
je
jno
stc
add
cmp
mov
dec
inc
pop
adc
stos
lds
push
inc
stos
add
dec
xor
shrl
dec
inc
fldl
push
push
push
lcall
inc
rolb
jb
push
jb
jb
mov
lods
movsb
daa
daa
pop
jb
pushf
cwtl
xchg
daa
daa
daa
daa
nop
mov
daa
cmpb
jb
and
push
popa
push
push
fsubl
sbb
dec
fs
jb
jb
pop
push
push
jb
jb
dec
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
mov
fistps
inc
pop
adc
movsb
cli
cmp
adc
cmp
push
insb
and
fwait
pop
fadds
inc
dec
leave
and
lea
ret
popf
mov
and
sbb
cmp
mov
add
mov
add
std
clc
hlt
pushf
pushf
pushf
pushf
lock
call
pushf
loopne
fmuls
cmp
int3
enter
cmp
sarb
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
mov
insb
inc
cld
fs
pushf
pushf
pushf
pushf
pop
pop
push
push
faddl
cmovo
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
dec
dec
inc
sahf
cld
cld
clc
hlt
lock
dec
dec
dec
in
call
dec
dec
aam
dec
dec
dec
dec
int3
enter
dec
dec
dec
mov
dec
dec
dec
lods
test
mov
pushf
cwtl
xchg
nop
dec
dec
dec
dec
mov
dec
dec
jl
je
dec
dec
dec
dec
insb
push
dec
dec
pop
pop
push
push
dec
dec
dec
dec
dec
cmp
xor
adc
jecxz
lods
leave
in
movsb
std
pop
pop
xchg
ret
xor
sub
leave
leave
leave
and
sbb
leave
leave
leave
leave
adc
or
fs
leave
add
cld
sti
clc
leave
leave
leave
in
hlt
pop
lock
call
in
paddusb
jb
cmp
aam
mov
jb
sarb
mov
test
jb
jb
mov
jb
xchg
nop
mov
test
jb
je
insb
push
fs
pop
pop
jb
jb
push
push
dec
dec
jb
jb
inc
inc
cmp
jb
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
sbb
jb
add
cld
cli
clc
cli
jb
fildl
and
daa
pop
call
jb
aam
dec
outsb
pop
jb
enter
dec
dec
dec
dec
mov
dec
dec
dec
lods
test
mov
pushf
cwtl
xchg
nop
dec
dec
dec
dec
mov
dec
dec
jl
je
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
inc
push
or
push
lock
paddsb
cmp
pushf
fsubrl
jbe
pop
xor
xor
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
cld
stc
in
dec
inc
clc
hlt
lock
in
in
call
in
aam
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
lea
inc
ret
ss
xlat
or
cltd
or
adc
sahf
out
sbb
and
ret
add
inc
mov
pop
aam
sbb
gs
cmp
pop
xor
pop
cld
push
or
insb
repz
lods
xor
pop
scas
js
fadds
int3
sbb
pop
test
aam
add
fildll
fs
cmp
fs
lahf
inc
mov
aas
inc
pop
jecxz
ret
inc
repz
outsl
jns
jmp
push
add
adc
repz
jnp
jnp
and
push
add
inc
add
jnp
cmp
jne
jae
pop
pop
inc
mov
add
dec
das
inc
aas
cmp
dec
aam
inc
push
push
outsb
add
push
xor
mov
push
or
pop
push
movsb
push
dec
jb
push
decb
mov
xchg
test
add
xchg
adc
mov
cmp
adc
sub
mov
cmpsl
in
divl
push
jl
mov
lock
mov
dec
xchg
xlat
sub
push
bound
inc
push
cmpsb
fadd
xor
or
and
daa
std
xchg
sub
add
xor
xchg
lret
push
dec
adc
mov
mov
imul
outsl
daa
push
inc
cs
dec
imul
in
or
dec
ret
or
imul
push
daa
dec
subb
inc
pop
push
dec
dec
gs
and
pusha
sub
imul
inc
push
push
outsb
push
fildl
stos
pusha
sub
pushf
outsb
fstpl
into
sti
dec
ljmp
out
or
jbe
stc
dec
add
add
cmp
xchg
in
inc
dec
hlt
or
les
fadd
xchg
adc
les
add
sbb
fmuls
repnz
add
test
or
pop
loope
aaa
sbb
not
or
or
push
inc
dec
jl
mov
adc
arpl
cmp
in
mov
test
into
test
cmc
arpl
add
frstor
pop
pop
sub
and
sub
push
outsb
dec
adc
adc
jne
pop
popw
imul
insb
jae
fs
inc
imul
push
or
in
xchg
xor
mov
adc
lock
movb
push
gs
loop
shrb
cmp
xor
jae
sbb
into
adc
adc
pop
idivb
dec
ja
dec
arpl
add
dec
xchg
and
arpl
es
mov
out
or
xchg
mov
inc
call
inc
lea
les
rclb
sbb
mov
fwait
mov
outsl
addr16
mov
pop
or
pop
inc
inc
test
in
dec
test
add
or
in
les
or
mov
outsl
ja
pusha
sbb
lock
adc
push
outsl
jne
bound
in
add
in
imul
jo
add
jne
fwait
sub
js
sub
or
out
nop
cmp
lock
or
lock
pop
call
in
loopne
fmuls
dec
dec
aam
enter
daa
daa
and
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
xchg
daa
daa
daa
add
cld
adc
lock
popf
pop
mov
icebp
repnz
daa
daa
daa
repz
cmc
mulb
daa
daa
daa
idiv
stc
cli
daa
daa
daa
daa
sti
cld
std
daa
daa
daa
daa
jmp
loope
daa
daa
daa
daa
jecxz
in
daa
daa
daa
daa
out
jmp
daa
jmp
in
out
daa
daa
daa
daa
out
rcl
shlb
daa
daa
daa
rcl
aad
daa
daa
daa
daa
xlat
fcomp
fisubl
daa
daa
daa
fcmovnu
fstp
daa
daa
daa
daa
ffreep
rol
daa
daa
daa
ret
daa
daa
daa
enter
daa
daa
daa
lret
int3
int
daa
daa
daa
daa
iret
mov
mov
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmpsl
test
stos
daa
daa
daa
daa
stos
lods
lods
scas
daa
daa
daa
daa
scas
nop
xchg
xchg
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
cwtl
cltd
lcall
popf
sahf
daa
daa
daa
daa
lahf
addb
addl
xchg
daa
daa
mov
daa
jo
jb
daa
daa
daa
jae
jne
daa
daa
daa
daa
ja
jns
daa
daa
daa
daa
jnp
jge
daa
daa
daa
daa
jg
popa
bound
loope
daa
arpl
sub
jae
int
in
mov
add
dec
cmp
fmull
sahf
rcl
mov
sbb
cmp
sbb
mov
mov
or
pusha
mov
jnp
pop
push
loope
add
es
and
shlb
testl
sbbb
mov
xor
dec
ljmp
fs
and
jl
jp
stos
jbe
sub
pop
je
mov
mov
add
nop
in
sbb
xchg
jg
mov
out
aaa
adc
xchg
aas
mov
lock
push
push
sbb
movsl
iret
add
jns
pushaw
push
sub
mov
pop
fwait
inc
pop
and
mov
loop
or
adc
sub
lcall
and
jo
add
mov
jp
pop
cmp
inc
jp
inc
ds
cmpsb
mov
mov
shl
inc
fistps
cmpsl
or
push
decb
add
adc
ret
lret
sub
pop
out
fisubs
cs
sub
pop
test
icebp
mov
pop
cld
sub
ror
cmp
test
jecxz
jl
xchg
inc
cmp
mov
call
out
shl
add
mov
fsubrs
shl
fisttpl
xor
fisttpll
nop
cmp
aam
movsl
adc
jecxz
lods
es
or
pop
pop
mov
iret
insb
sahf
outsb
cld
je
or
jne
push
fisubrl
cmpsb
std
ljmp
sbb
pop
xor
jne
cmp
jge
mov
sbb
jne
rcrb
pop
push
lret
sahf
cmpsb
mov
lcall
repz
pop
jp
fs
in
rolb
adc
push
mov
mov
mov
icebp
sbb
vandnps
jae
push
sbb
push
xchg
pop
mov
adc
mov
sub
push
xor
nop
mov
and
jbe
pushf
es
adc
popf
dec
cmpsl
mov
mov
adc
sbb
xor
push
imul
gs
and
and
add
adc
ret
pop
jb
popa
adc
mov
icebp
jmp
arpl
fistpll
push
sahf
push
and
sbb
sahf
sbb
fcompl
iret
jnp
adc
push
dec
push
mov
cmp
dec
xor
ret
and
inc
iret
xor
or
popf
or
rorb
inc
loopne
lea
repnz
xor
push
mov
sbb
xchg
push
sti
addl
arpl
imul
enter
stc
out
paddd
aam
leave
leave
leave
jne
fwait
call
cld
dec
aad
mov
aad
frndint
push
dec
fdivrp
loopne
sub
cld
pop
push
inc
ds
arpl
adc
wbinvd
das
xor
pop
inc
mov
and
addl
sub
pop
divb
or
je
xor
pop
or
pop
rorb
add
popa
ret
lock
repnz
outsl
movsb
and
in
push
cmp
in
or
dec
enter
sub
inc
sbb
and
add
mov
sbb
addb
sub
or
fstl
repz
jae
fnstsw
insb
mov
mov
aaa
mov
add
gs
adc
cmpsl
or
lods
aad
les
inc
movsl
lahf
stos
test
jmp
cld
inc
popa
jae
scas
stos
stos
and
fcoms
mov
dec
jg
jne
add
inc
adc
imul
dec
jne
stos
sub
inc
mov
sbb
nop
pop
pop
daa
cmp
addr16
adc
dec
add
xlat
inc
inc
inc
fcmovu
or
pusha
mov
rcrb
call
mov
dec
or
mov
mov
lcall
lret
ret
pushf
add
in
xchg
mov
pop
xchg
push
dec
insl
add
or
inc
sub
fadds
or
sub
mov
inc
inc
bound
scas
pop
pop
lds
xor
bound
outsl
fdivr
dec
fldenv
or
push
pop
or
loopne
xor
inc
scas
inc
pop
add
or
or
insb
mov
push
xor
imull
push
mov
popa
jo
sub
xchg
enter
mov
xor
fsub
lds
add
pop
xchg
add
fsub
test
fadd
cmpsl
inc
or
jl
pushw
xor
loop
aas
sub
sub
or
mov
nop
insb
fcmovb
imul
movsb
push
je
xchg
ficompl
bound
adc
and
add
dec
or
dec
and
testl
lods
push
test
fisubs
scas
push
sub
dec
fldt
sub
add
adc
inc
add
fidivs
pop
or
imul
pop
mov
in
mov
in
ficoml
add
pop
nop
movl
inc
mov
fsubl
sub
pushf
pop
mov
dec
or
sub
int3
leave
xchg
mov
and
sub
loop
xor
and
out
fcomi
lahf
and
inc
inc
imul
nop
mov
ret
outsb
lods
pop
and
cwtl
fcoml
and
shll
imul
mov
pop
and
add
xor
mov
push
ficomps
push
mov
jbe
ret
jmp
push
mov
or
cmp
inc
mov
mov
push
dec
in
inc
adc
lods
sbb
and
out
jecxz
es
fists
xchg
pushf
mov
cmp
aaa
les
dec
jo
mov
and
adc
pusha
clc
fisubrs
adc
sub
push
lock
sbb
das
popa
arpl
lret
fmull
cs
lcall
cmp
dec
cs
mov
loopew
sub
mov
and
pusha
lods
sub
pop
inc
push
mov
loope
push
xchg
shrl
nop
mov
and
xchg
cmovno
mov
pop
loopne
leave
or
setne
mov
pop
inc
das
push
xchg
js
negl
sbb
mov
and
or
sbb
adc
add
mov
adc
subb
jecxz
pop
jno
adcb
jecxz
or
test
mov
mov
les
add
mov
mov
pop
rcrb
mov
sub
jae
push
dec
pop
ljmp
sub
mov
es
jle
in
pop
scas
pop
xor
push
jb
bound
mov
mov
and
les
dec
es
das
or
hlt
xchg
inc
das
push
inc
adc
pop
jmp
pop
sub
aas
mov
mov
pop
movsb
pop
xchg
in
cvtps2pi
js
insb
mov
inc
out
pop
and
dec
add
or
and
pop
sub
pop
insl
dec
insl
xor
mov
and
add
jb
pop
sarl
push
in
and
jge
add
scas
shrl
xor
xchg
mov
or
jl
mov
out
mov
das
sbb
incl
pop
sub
pop
add
ljmp
cli
aas
or
cmp
fidivs
fadds
sub
pusha
mov
aas
mov
push
testl
call
clc
or
push
or
mov
pop
sub
push
push
fists
pop
fnstcw
sub
or
lahf
pop
jmp
adc
ss
enter
xor
scas
clc
daa
in
xor
ljmp
push
arpl
dec
sub
imul
les
ja
pop
xchg
daa
pop
shll
inc
nop
or
sbb
iret
pop
cmp
sub
and
jmp
das
xchg
mov
push
inc
sub
inc
sbb
outsl
and
pop
inc
das
push
add
fisttpl
cmp
xor
int3
push
add
jmp
dec
xor
or
xchg
daa
and
movsb
filds
outsb
adc
push
jne
les
cmpsl
in
add
inc
iret
das
rorl
fwait
jmp
bound
orl
or
pop
pop
jbe
xor
add
in
gs
mov
sbb
dec
xchg
add
add
pop
lods
pop
out
or
daa
lea
adc
loope
in
stos
arpl
leave
in
mov
mov
add
into
pop
pop
push
daa
jo
add
add
aaa
adc
jo
outsb
inc
add
xchg
outsb
push
lds
push
lcall
insb
subb
loopne
xor
outsl
jae
call
pop
mov
icebp
adc
mov
or
int3
add
adc
imul
test
leave
movsl
lea
push
cli
and
int3
dec
out
sahf
out
sahf
sahf
push
pop
sub
cmp
ljmp
dec
push
mov
jnp
sbb
push
loopne
sbb
out
in
shrb
push
test
add
inc
daa
mov
mov
sub
mov
icebp
popf
test
push
testl
shlb
lock
pop
int3
cli
loope
mov
push
imul
sub
mov
xchg
gs
sbb
dec
div
sarb
rcrl
adc
icebp
adc
sahf
fwait
mov
or
cmp
pushf
mov
imul
push
dec
mov
lock
adc
or
lock
daa
mov
fisubs
dec
testb
int
imul
xchg
xchg
jns
arpl
add
mov
inc
dec
add
je
or
sbb
insb
xor
sub
cmp
sbb
gs
fstl
push
push
jo
or
fs
sub
jp
inc
orb
or
out
pop
ret
push
push
dec
rolb
bound
lock
xor
mov
and
push
adcb
mov
roll
lds
or
lea
cmpsb
dec
xchg
dec
das
adc
das
jo
ss
mov
daa
pop
sub
or
pop
push
pushf
test
pushf
jnp
mov
sub
inc
or
push
push
mov
das
andb
das
mov
repz
push
or
dec
sbb
push
enter
xchg
inc
dec
jae
test
sbb
cmp
xor
popa
js
add
dec
popa
pop
pop
repz
mov
jno
hlt
movzbl
inc
xchg
out
stc
sbb
pusha
inc
fwait
leave
leave
enter
notb
in
testl
call
in
rcrl
inc
cli
syscall
add
aam
cli
dec
sti
wbinvd
push
aaa
dec
test
sbb
pop
xor
into
call
add
sti
jmp
mov
and
jne
cmpsb
adc
or
aad
sbb
lret
adc
enter
ror
clc
inc
lock
add
push
aad
call
mov
sti
aaa
add
mov
xchg
insl
adc
test
add
icebp
dec
cmp
cld
imul
mov
pushf
cmp
rorb
mov
xchg
subl
fsts
shlb
or
faddl
sbb
cltd
or
inc
lock
enter
push
das
pop
add
inc
pusha
or
xor
jmp
and
arpl
aaa
addr16
mov
iret
pop
jb
ret
push
adc
jo
dec
dec
aaa
test
insl
iret
dec
inc
addl
xor
movsb
or
jnp
in
jns
adc
and
push
push
andl
add
addl
inc
mov
add
mov
mov
sub
mov
sub
inc
dec
mov
add
inc
addl
shll
jb
iret
or
push
push
iret
adc
shr
inc
add
or
loopne
mov
rcrb
adc
cmp
jo
push
gs
fs
addb
cmp
scas
inc
leave
dec
xchg
add
sbb
jno
jecxz
mov
xchg
inc
outsl
jbe
jmp
xchg
push
add
or
cmpb
and
adc
jo
es
test
ret
sbbl
push
pop
push
dec
lret
in
inc
push
ljmp
and
mov
bound
das
ret
and
fimuls
and
faddl
sub
jge
out
push
pop
fadds
sbb
ljmp
movsl
and
push
jle
dec
inc
push
outsl
push
adc
cmp
js
cmp
shrl
testl
mov
std
wbinvd
add
ret
neg
stos
jb
decb
pop
or
mov
es
jae
cmp
pusha
inc
cmp
dec
or
lea
adc
dec
mov
adc
sbb
or
push
xor
xor
xor
xor
xor
ljmp
push
cmp
sub
aaa
push
cwtl
insl
fcoms
inc
outsl
xchg
mov
decl
sbb
xchg
pusha
and
mov
push
sarb
cmp
xchg
lock
je
cmp
sub
push
inc
and
syscall
mov
push
inc
aaa
lds
aam
jno
popa
andl
xor
adcl
sbb
xchg
jns
xchg
and
lcallw
cmp
cwtl
add
sub
loope
shld
sbb
push
inc
dec
cld
mov
mov
fmuls
icebp
jne
je
sbb
lcall
or
cmp
xchg
mov
push
lds
loop
push
mov
pop
adc
sub
dec
add
fiaddl
incl
rolb
pop
jmp
mov
push
add
das
pop
push
adc
jns
ja
movsb
jb
push
enter
fs
or
outsb
js
insl
add
sbb
xchg
add
add
add
push
dec
inc
inc
push
jne
jb
cmpsl
mov
add
cltd
stos
mov
pop
jne
mov
insb
xor
sub
push
add
incl
icebp
daa
or
fsubrs
daa
mov
jg
add
das
add
and
adc
shlb
cltd
in
lret
push
push
or
push
add
sbb
addr16
mov
outsl
and
push
add
mov
in
movsl
xchg
pusha
popa
push
hlt
ret
adc
repz
or
push
xor
add
pop
pop
rcrb
add
mov
or
rorb
addr16
out
push
call
adc
orb
lret
in
or
mov
ds
xor
call
xchg
mov
cmp
popa
mov
adc
fdivl
loopne
mov
add
movsb
dec
sub
enter
enter
or
sub
add
jo
icebp
nop
mov
lods
cmp
daa
mov
push
fnstcw
mov
jle
or
pop
add
add
aaa
shll
orl
and
add
les
outsb
dec
jne
pop
pop
mov
add
or
mov
test
add
rcr
inc
jmp
or
rolb
mov
fs
pop
jle
mov
jns
shr
and
xor
in
out
add
lock
pop
cmp
or
add
loopne
pop
out
xchg
dec
cmpsb
and
enter
mov
enter
or
lret
test
pushf
sub
shl
adc
push
mov
and
lcall
pminsw
enter
cmp
leave
sub
push
andl
clc
sar
and
sub
lret
push
popa
push
xor
pop
pop
mov
mov
or
xor
add
xchg
adc
pop
ret
bsf
sarl
fnstcw
cmpsb
adc
adc
rcrb
jmp
or
outsb
jb
jle
add
sbb
sarl
mov
mov
clc
add
fnstcw
sub
rorl
jg
sub
push
es
jecxz
sub
jg
sub
pop
add
enter
add
push
or
sub
outsb
jle
cmp
jg
aaa
sub
inc
xlat
pushf
loop
and
mov
pop
jg
xchg
pop
rclb
pop
pop
cmp
adc
xor
inc
out
jo,pn
lock
pop
ds
ret
nop
ret
or
push
push
push
mov
jecxz
push
sub
jmp
and
orb
cli
jle
es
add
cmp
cmp
je
data16
and
je
jecxz
ljmp
ja
test
and
or
fdivs
outsl
and
add
or
pop
jno
dec
es
jb
jl
mov
mov
pop
and
cld
test
add
sub
and
clc
and
lea
gs
bound
or
lods
mov
cmp
sub
xorl
popf
dec
mov
push
or
add
test
outsl
dec
pusha
dec
cmpl
ss
int
inc
inc
dec
xchg
push
add
ljmp
cwtl
pusha
or
dec
pop
push
fldl
dec
and
xchg
or
add
pop
cmpsb
or
inc
loope
mov
add
repz
sbb
not
mov
jmp
jge
jo
mov
leave
jmp
dec
inc
jo
cmp
outsl
mov
sub
inc
mov
dec
imul
adc
mov
dec
rcr
pop
hlt
add
mov
xchg
cli
or
inc
pop
inc
or
lret
sbb
add
adc
insb
inc
and
test
ret
lock
push
data16
and
lock
sbb
int3
out
mov
pusha
cmp
sbb
jge
sti
pop
adc
imul
clc
lods
inc
and
int3
cs
add
shl
stos
sub
dec
inc
add
or
imul
hlt
movsl
xlat
mov
add
inc
xchg
repz
mull
mov
or
sbb
fimuls
inc
mov
dec
sahf
or
mov
cmpsl
mov
sbb
inc
sub
sbb
jmp
fsubrs
test
adc
add
mov
adc
sub
pop
lods
mov
sub
jne
adc
shrb
jne
or
fwait
and
mov
or
mov
adc
mov
test
and
push
lret
das
arpl
lds
inc
and
xor
jb
ret
or
call
lods
sbb
mov
popa
xor
rorl
pop
mov
xrelease
aas
add
repnz
mov
xchg
sub
repz
stos
inc
or
bound
clc
testl
or
es
xor
mov
inc
jmp
adc
cmp
mov
jne
sub
or
or
push
ret
or
or
bound
repz
int
adc
sbb
pop
add
pop
adc
lret
jmp
sub
loopne
add
pusha
and
fildll
test
je
inc
or
daa
sbb
jo
mov
dec
xchg
xchg
and
push
fisubl
add
xor
popf
adc
adc
cmp
mov
outsb
or
sbb
inc
sbb
cwtl
sbb
and
data16
cmp
sub
mov
pop
jne
sbb
jg
mov
sub
jl
jp
inc
test
cli
inc
pop
in
adc
jg
dec
push
sbb
push
jne,pn
inc
dec
jne
jmp
repz
jnp
jl
jmp
mov
or
jo
test
push
dec
movsb
loop
jmp
jne
or
jns
neg
mov
inc
dec
xor
cltd
clc
mov
ret
mov
xor
in
mov
cli
cmp
push
pop
mov
push
jne
fdivrp
lcall
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
sbb
adc
adc
mov
xor
mov
push
mov
cltd
mov
cltd
lods
dec
scas
in
jmp
jbe
scas
jp
add
mov
aaa
mov
in
adc
leave
push
mov
mov
pop
adc
lods
inc
jmp
xor
dec
scas
stos
push
or
decb
adc
adc
mov
mov
push
pushf
shrl
ja
and
push
push
jbe
inc
pop
outsl
add
mov
je
push
mov
negl
mov
and
mov
pop
or
adc
cmpsb
push
and
and
out
cmpsb
icebp
xchg
mov
outsb
adc
adc
push
add
jnp
xchg
daa
andl
rcrl
fistps
ret
xorb
add
roll
scas
fprem
fistps
fsub
mov
clc
mov
cmp
dec
add
fcom
fstsw
sahf
jae
lock
fnstcw
add
ret
ffree
ffree
ffree
pop
jne
sarb
andl
push
jge
mov
and
pop
nop
xor
mov
int3
movb
dec
inc
mov
loope
mov
pop
mov
cmp
add
int3
inc
dec
cmpsb
scas
loope
adc
sbb
aam
aad
mov
and
pop
and
cwtl
and
pop
fprem
xchg
add
push
xchg
inc
testb
aaa
adc
inc
sbb
cmp
mov
mov
pushf
adc
mov
jne
xor
js
movsb
push
les
mov
aam
imul
push
fisttpl
pop
outsl
aas
divb
mov
inc
mov
mull
push
mov
pop
mov
adc
loop
fmuls
mov
dec
mov
mov
es
xor
loopne
das
cmp
lahf
sbb
xor
pop
imul
push
cld
inc
xchg
jae
outsl
dec
popa
ret
pushl
inc
loope
xor
mov
cmpl
popf
or
jmp
rolb
xchg
jae
push
ljmp
sahf
imul
add
xor
outsl
cwtl
adc
insl
lock
setne
jmp
fucomi
sbb
add
dec
pop
sub
imul
add
inc
mov
jle
ret
and
xlat
pop
xor
jp
mov
xor
jo
cmp
mov
inc
test
clc
inc
and
pop
aas
and
mov
pushf
jp
mov
hlt
mov
xchg
fsubs
mov
clc
or
mov
and
push
ror
cmp
ja
mov
and
sar
cli
inc
ja
fldcw
adc
mov
rcll
fmull
gs
cltd
movsl
mov
jnp
push
imull
dec
mov
shrl
push
mov
addr16
dec
loopne
and
dec
rolb
das
xchg
mov
push
test
nop
fcmovu
test
pop
insb
pop
hlt
mov
or
push
inc
js
cmp
xor
push
adc
jne
mov
adc
add
pop
sahf
lea
mov
hlt
push
mov
adc
mov
mov
repnz
popa
cmpsb
xchg
or
fnstsw
push
inc
mov
outsb
outsb
or
je
jnp
or
or
loope
inc
pushf
iret
push
imul
inc
loope
test
adc
push
sbb
pop
mov
pop
inc
decb
and
cmp
loope
and
sbb
sub
or
incb
fdivs
ud0
ja
cmpsb
jo
test
fistl
and
mov
sbb
sub
sub
xchg
pop
mov
fldt
ret
mov
or
into
jae
inc
sahf
push
mov
inc
xchg
movsl
sbb
push
ja
movl
insb
inc
mov
jg
mov
sbb
and
inc
jge
mov
sbb
loopne
inc
sbb
dec
pushf
adc
sub
push
cmc
pop
cs
test
jle
daa
movsl
cmpsb
mov
dec
add
rcl
adc
into
sbb
outsl
and
sbb
test
mov
aaa
out
dec
js
add
mov
rorl
mov
or
push
add
add
out
pusha
cli
mov
inc
jnp
push
sub
jno
es
inc
pop
sbb
push
fwait
inc
push
aaa
push
mov
cmp
jo
adc
push
or
cmp
sbb
sub
dec
dec
push
mov
stc
imul
jnp
and
mov
sti
cmp
jle
outsl
add
ss
popa
adc
stos
ror
push
clc
ret
ds
push
stc
test
imull
push
hlt
sbb
add
adc
xchg
pop
add
inc
shlb
lock
lahf
ss
int3
add
mov
ret
inc
call
cld
decl
pop
mov
jmp
je
test
jne
mov
add
ret
or
les
adc
sbb
push
push
data16
mov
dec
cmpsb
cmc
cmp
adc
mov
xor
xchg
ss
add
xchg
push
push
sub
test
inc
je
or
lahf
mov
sbb
adc
mov
add
adc
sub
pop
ret
inc
les
mov
nop
fisttps
lds
push
jmp
fldl
insl
jecxz
lret
mov
pop
popa
xlat
jo
jb
push
jle
jne
and
fwait
push
mov
xor
dec
sti
sbb
shll
addr16
and
test
cwtl
out
scas
cmp
or
push
mov
cmp
data16
ret
je
js
je
fimuls
inc
in
insl
test
je
cli
xor
cmp
jae
sbb
mov
js
pop
rol
fiaddl
add
movsl
out
lock
inc
push
jb
fs
test
daa
rcrb
pushf
push
cltd
and
push
fs
xor
jmp
ficompl
and
enter
cmp
cli
sbb
pop
pop
mov
pop
add
add
aam
adc
or
sbb
imul
inc
pop
outsl
pop
rolb
pop
pushf
fbstp
push
cmp
inc
dec
dec
adc
into
jg
mov
not
dec
je
mov
mov
and
icebp
jbe
push
lea
mov
lods
jg
loop
and
mov
push
mov
adc
push
imul
push
andl
cli
cmp
aaa
mov
push
orb
pop
sub
mov
pop
lods
shr
and
xchg
fld
sub
jne
push
push
cli
or
ret
andb
je
add
aad
xor
out
imul
sbb
les
fildl
pop
mov
push
cmpsb
adc
sub
mov
xchg
or
std
je
xor
pusha
sbb
mov
test
mov
mov
pop
test
loopne
push
or
fcmovb
xor
mov
ljmp
sub
popa
aad
jo
jp
sbb
push
arpl
lcall
xchg
shlb
test
nop
lock
or
add
in
and
mov
in
loope
mov
je
inc
mov
adc
add
and
imul
ret
push
pop
ret
testl
xchg
aad
lret
xchg
dec
pop
fmull
push
xor
sub
xchg
scas
and
sbb
and
push
and
movsl
inc
cmp
loop
inc
mov
lock
dec
cld
xchg
fildll
inc
fadds
cvtps2pi
aam
add
push
shr
sub
fmuls
outsl
sbb
dec
cmp
jmp
lcall
add
and
jne
aas
and
outsb
add
js
outsl
or
aad
xchg
fadd
xlat
adc
in
mov
cmp
jno
add
and
sbb
mov
cmc
cwtl
jo
call
lret
call
insb
xor
mov
mov
lahf
lock
jo
push
xchg
cmpl
add
sbb
adc
mov
movzbl
sbb
mov
add
mov
enter
adc
or
adc
jne
mov
push
dec
lods
or
fsubrp
inc
cmp
stos
dec
jne
mov
sub
add
sbb
cmp
ret
daa
jecxz
cld
scas
xchg
and
shll
mov
repnz
adc
mov
es
adc
ss
pop
push
pushl
cs
stos
xor
mov
std
loopne
jne
push
push
sbb
sub
pushl
jge
sub
add
shll
shl
movsw
xchg
movsb
jge
xchg
sbb
and
and
ficompl
mov
sahf
adc
nop
or
icebp
push
repz
jb
push
cmp
mov
mov
repnz
and
pop
pop
cmpl
or
decl
jb
sbb
jl
loopne
ret
je
dec
fadd
cmpsb
cltd
xor
fisttps
pop
loope
and
pusha
shlb
push
repz
add
and
dec
and
push
pop
es
sahf
pushw
daa
popa
hlt
push
jne
aaa
fstpl
push
jl
adc
mov
add
xor
inc
lds
fsubl
push
fndisi(8087
movsl
mov
inc
sbb
addr16
mov
sub
je
imul
pop
sbb
or
movsl
fstps
mov
out
bound
cmp
aas
jno
jmp
jmp
sbb
xor
nop
cmp
test
lock
into
mov
and
cmp
sbb
dec
pop
add
aaa
inc
add
movsb
pop
xor
aas
xor
sub
inc
jo
ja
outsb
xchg
mov
inc
dec
jne
hlt
jnp
cld
call
pop
jg
insl
cmp
pop
std
in
inc
cs
mov
adc
fldenv
test
pushf
popf
inc
cmp
ja
or
aaa
xor
fnstsw
jnp
clc
es
xchg
dec
dec
mov
push
cmp
jnp
pop
inc
push
xchg
rdmsr
cmp
cmp
clc
pop
insl
xchg
mov
mov
inc
outsb
mov
mov
or
je
mov
inc
je
mov
dec
je
pop
out
dec
roll
mov
ret
sahf
shlb
ss
fcoms
add
push
loopne
mov
clc
adc
mov
shlb
mov
repnz
iret
mov
mov
xor
xlat
cmp
sub
and
adc
shl
test
insl
test
jb
inc
pop
in
pop
js
dec
inc
dec
push
mov
imulb
shrb
push
nop
or
div
sub
or
outsb
mov
inc
xchg
push
push
mov
andl
add
mov
add
adc
dec
mov
or
jg
cmp
add
pusha
and
sbb
aas
jo
loope
or
dec
jnp
popa
les
mov
testb
mov
repz
adc
mov
cmp
mov
push
adc
test
jge
adc
pusha
push
mov
fcmovu
push
xchg
push
les
sub
push
sub
in
je
sbb
sbb
inc
inc
call
loope
mov
sbb
inc
sar
je
shr
daa
inc
fldl
mov
je
testl
cmp
popf
add
add
mov
lea
sub
push
ljmp
inc
adc
inc
lods
or
mov
test
dec
xor
jbe
fadd
dec
sbbb
stos
ret
or
mov
ret
xchg
or
and
and
or
xor
cmp
dec
mov
neg
and
ss
outsl
inc
movsb
je
sahf
and
cmc
adc
mov
stos
xor
adc
add
gs
fisttps
and
scas
mov
jo
mov
and
divl
xchg
int3
leave
mov
mov
bound
xor
cmc
dec
enter
adc
xchg
add
xchg
call
cs
je
mov
dec
js
fnstsw
jecxz
mov
lock
jne
loop
out
pusha
mov
js
ljmp
and
cs
insl
sub
jecxz
lea
inc
jne
sbbl
in
ret
inc
repz
ja
sbb
mov
add
lret
inc
movl
fwait
fidivrs
cmpb
je
push
push
cmp
or
or
cmp
sbb
pop
inc
loop
ret
push
mov
test
inc
mov
push
in
cs
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
out
in
jbe
sub
sbb
out
jmp
and
sub
sub
cmp
fs
xor
sub
xor
leave
daa
xor
jmp
loop
dec
push
lods
mov
repnz
js
sbb
lcall
or
je
cmp
or
push
xchg
adc
or
mov
or
add
inc
push
pop
fldt
sarb
dec
xchg
imul
jmp
cmp
les
fabs
push
ljmp
frndint
xor
scas
or
fcomp
fstsw
lods
pop
movsb
mov
mov
pusha
je
fidivl
sbb
jne
lea
mov
inc
sub
mov
rcl
adc
call
push
xor
jmp
xchg
insl
mov
clc
add
jns
fisttps
pop
test
jge
cli
or
cmpb
jb
movb
mov
or
dec
js
decb
and
pop
fwait
rcr
add
leave
jmp
mov
cmpb
notb
addl
ljmp
ret
sbb
ljmp
testb
adc
fdivrs
adc
mov
push
test
xor
or
adc
or
pusha
xor
adc
in
lock
pop
mov
cmpsl
sbb
jae
dec
add
in
add
mov
insl
or
mov
xor
jecxz
cmp
mov
imul
fwait
xor
pop
fdivs
mov
push
mov
ja
cli
loopne
pcmpeqw
pop
jmp
mov
add
stos
aas
pop
in
fsubl
ljmp
dec
adc
sub
movb
cmpb
divl
or
or
sbb
mov
or
fdivp
xor
push
mov
add
sti
mov
f2xm1
fwait
decl
push
fldz
push
jp
je
mov
mov
or
icebp
daa
sbb
pusha
jne
inc
sbb
dec
and
fistpll
jmp
sti
inc
jne
inc
push
sub
pop
add
jg
jne
mov
mov
pop
inc
dec
shr
push
mov
mov
aas
jmp
fstpt
sub
test
dec
pusha
sahf
mov
test
insl
and
push
add
aaa
pop
jo
cmp
mov
sub
add
jae
fimull
cmpsl
mov
add
jmp
aaa
mov
adc
or
es
imul
decb
inc
imul
push
cmp
fnsave
aaa
add
xor
cmp
fxch
mov
in
xlat
or
jp
sahf
sbb
aaa
lret
push
addr16
das
or
test
bound
mov
movb
mov
sbb
mov
dec
dec
fwait
outsl
pop
lds
xor
mov
lods
add
xor
sarl
push
insb
imulb
adc
or
fnstsw
fldt
sub
fnstcw
in
ja,pn
and
push
mov
push
fstpl
fwait
mov
addr16
scas
std
pop
push
mov
mov
inc
pop
inc
add
sub
nop/reserved
and
lods
std
aas
nop
push
leave
jle
pop
jnp
dec
push
in
lea
lcall
push
mov
daa
push
scas
adc
mov
xor
push
adc
pop
xchg
sub
add
or
loopne
addr16
mov
bound
sbb
or
cmp
inc
mov
inc
xor
jae
jp
mov
sub
pushf
shrb
pusha
cltd
cltd
mov
xor
ret
cmp
or
fdivs
loopne
pushf
fstpl
fwait
nop
push
jg
sbb
pop
adc
xor
movsl
sbb
and
and
xchg
jge
call
mov
stc
test
xor
push
push
cmp
shlb
repz
iret
and
mulb
imul
xor
and
ret
add
in
mov
popa
mov
lcall
sbbb
sbb
push
and
jbe
add
and
mov
jg
sbbl
jnp
insb
inc
lods
addb
ja
and
mov
add
jb
or
jb
sti
insb
je
mov
inc
cmp
ja
adc
jle
pop
fdivrs
pcmpgtd
pop
dec
incb
jne
sub
dec
mov
lock
pop
aas
cltd
idiv
imul
ljmp
cs
ret
cli
add
repnz
ds
popa
cmp
stc
add
or
das
jnp
rol
std
sbb
xchg
fmull
dec
ds
or
dec
ss
fmull
test
jg
pop
push
in
mov
cltd
push
add
add
jb
or
and
sub
ss
data16
mov
addl
mov
add
and
mov
and
pop
pop
lods
mov
push
decl
cmpl
fs
fsubrs
fcoms
out
mov
pop
mov
in
cmp
ss
sub
inc
jne
push
inc
inc
fsubl
lods
mov
jbe
popf
shl
dec
fsubrl
cmp
imul
sub
inc
out
mov
clc
sbb
add
or
call
nop
add
jbe
dec
punpcklbw
push
fwait
and
or
outsl
cmp
pop
test
mov
test
push
jl
mov
and
jg
das
test
cmpb
icebp
inc
sahf
cmp
fidivrl
and
xchg
and
inc
lea
addl
aaa
mov
rorb
popa
mov
or
xor
std
inc
cmp
rcrb
loopne
xchg
sbb
xor
mov
movsb
cmpl
in
and
adc
xor
or
jnp
pop
fsubrl
add
cmp
mov
dec
enter
mov
and
pop
inc
daa
mov
cwtl
add
xchg
add
cmp
ljmp
push
push
dec
rolb
cmp
jecxz
jne
lods
mov
cmp
dec
cli
or
cmpsl
xor
outsl
stos
jns
lods
adc
inc
jecxz
outsl
loop
outsl
pop
dec
xor
push
jge
mul
stc
pop
sub
cld
jge
nop
and
imul
sbb
pop
and
or
aaa
ret
iret
out
imul
cmp
xchg
out
leave
bnd
adc
fldl
pop
in
stos
add
add
ret
mov
add
std
jl
mov
mov
jb
add
in
pop
lock
mov
je
or
and
mov
in
insb
xorb
out
lahf
addl
add
sub
pushf
mov
jmp
push
pushf
cmp
jno
xor
pop
mov
mov
inc
sbbb
fdivrl
inc
xor
in
sbb
fwait
xchg
inc
jmp
inc
ss
imul
shll
add
dec
dec
test
mov
jg
adc
xor
lds
sub
add
jne
push
pop
mov
sarl
dec
xor
sbb
and
add
daa
jns
jbe
ret
add
das
sub
daa
popa
aam
mov
testb
enter
pop
data16
outsb
xor
icebp
mov
push
dec
lret
andb
and
cmp
loop
js
pusha
pop
shrl
ljmp
stos
adc
add
data16
out
fcmove
scas
fmul
imul
dec
pusha
bound
dec
jle
pop
mov
sbb
insl
push
loopne
jne
fsub
dec
jne
mov
call
inc
fiadds
ja
adc
cmp
and
or
lea
cli
outsb
add
push
lea
sarl
mov
dec
cmp
or
or
aas
js
repz
testb
fmull
xchg
cmp
repnz
cmp
out
sub
push
jbe
mov
and
pop
cmp
and
test
sbb
jo
cmc
icebp
mov
into
ss
or
inc
mov
les
popf
dec
push
lea
fst
xor
fcomps
or
pop
aam
inc
aam
jne
hlt
in
int3
inc
sbb
xor
test
push
sbb
in
push
add
movsb
adcb
aam
mov
je
push
jb
outsb
add
jmp
out
aad
mov
pop
loopne
pop
int3
cltd
push
add
dec
and
out
sub
jo
push
hlt
bound
js
sahf
fiadds
pop
xor
ds
cwtl
xchg
pop
xor
pop
or
add
adc
in
dec
xchg
add
and
add
fwait
jbe
je
jmp
or
je
sub
jmp
cmpb
dec
dec
std
xor
mov
push
pushf
insb
push
ds
out
sub
mov
jmp
add
push
mov
and
mov
bound
pop
jp
fadds
inc
or
jmp
add
dec
and
or
or
add
dec
outsb
cmp
or
sbb
push
enter
add
dec
pop
test
cmp
or
mov
xchg
push
xchg
mov
xor
clc
aam
in
test
push
mov
andl
lret
mov
icebp
xchg
inc
jns
push
and
nop
add
hlt
loopne
xor
jae
iret
cwtl
gs
jns
mov
push
push
aad
imul
cs
lea
jb
sbb
add
stos
sbbl
ljmp
pop
in
orl
testb
adc
jmp
mov
fisubrl
popf
pop
fs
out
and
push
imul
mov
mov
js
jmp
add
pop
adc
ja
jmp
faddl
and
mov
call
push
ljmp
imul
sbb
adc
dec
mov
data16
movsl
shl
cwtl
mov
jae
mov
jle
xchg
sbb
push
insl
fstl
or
adc
dec
and
icebp
insl
fistl
add
adc
aas
sbb
jo
pop
mov
cmp
les
jl
jnp
push
aaa
into
push
adc
lea
and
adc
push
addb
push
sbb
xor
addr16
pop
je
mov
inc
sub
or
push
xor
das
hlt
push
jb
cli
jecxz
outsb
testl
add
xchg
xchg
mov
mov
push
nop
adc
loope
nop
xorb
pusha
fdivl
test
clc
ljmp
cmp
aas
sbb
pop
outsl
test
pop
divl
cmp
jle
dec
jp
js,pn
sub
add
mov
lret
mov
inc
sbb
or
mov
pop
pusha
repnz
fsub
les
cwtl
pop
or
xchg
adc
mov
mov
iret
outsl
jmp
dec
mov
push
les
add
mov
inc
int3
inc
mov
rorb
and
stc
sub
and
lock
mov
jl
or
and
inc
jl
jne
ljmp
and
jns
sbb
inc
mov
push
dec
or
inc
cwtl
mov
std
pop
ja
and
je
dec
je
adc
je
cwtl
js
decl
or
push
jmp
mov
and
sbb
pop
dec
test
inc
scas
enter
lock
xor
sub
mov
pop
fidivrl
sub
push
gs
orb
add
inc
sar
sub
jbe
inc
arpl
cmp
mov
int3
adc
or
out
add
add
jl
and
mov
mov
or
push
inc
aaa
in
outsb
pop
jecxz,pt
and
mov
or
sub
cmpb
popa
ret
mov
jmp
ret
inc
mov
fistpll
daa
inc
std
mov
jne
cmp
dec
jge
arpl
add
ret
jmp
cld
cltd
xor
sub
add
pop
lahf
fwait
sbb
std
stc
imul
add
xchg
nop
jle
push
xor
lock
cld
gs
outsl
aam
dec
test
das
aam
add
inc
inc
cmp
mov
pop
rcll
shl
sbb
loopne
push
out
add
push
ret
fwait
add
out
and
iret
shll
js
adc
addr16
push
stos
aam
aad
sbb
ret
mov
es
mov
dec
push
lock
hlt
fdivrl
out
mov
cmp
cmp
aad
mov
pop
xor
imul
and
xchg
push
pusha
and
cmp
nop
xor
aam
and
repnz
loop
xor
roll
loope
add
sub
jb
and
loope
add
pusha
cmp
jne
es
pop
test
xor
ljmp
cmp
ljmp
in
jecxz
push
cmp
add
mov
xor
xor
outsb
mov
cmp
shrl
sbb
xor
jmp
add
push
mov
cmp
jle
and
fs
jno
mov
ret
test
test
ja
or
arpl
ficoms
scas
xor
add
rcrl
xchg
adc
or
or
sbb
adc
movsl
jge
push
mov
and
jmp
mov
push
mov
push
sub
adc
fmuls
add
and
xor
aam
inc
bound
popa
pop
and
pop
test
xor
or
out
or
and
test
push
add
pop
or
out
out
test
jmp
ret
jg
inc
jge
adc
orl
cmpsb
mov
imul
xor
adc
xor
inc
and
jp
dec
push
sub
inc
cmp
mov
pop
mov
pop
lds
bound
jp
fisttpll
sysenter
push
or
or
dec
sbb
shl
cmp
or
fadds
add
pushf
cmp
or
add
push
test
ret
jge
cmp
cmp
mov
je,pn
ja
jne
pusha
or
je
add
sbb
fcoms
pop
adc
daa
js
push
pushf
push
pop
sub
xor
mov
sub
xor
mov
fildll
push
arpl
inc
je
rorb
jbe
lret
sahf
packuswb
mov
xor
add
sbb
jp
pushf
loope
or
sbb
cmp
lea
push
bound
rcrl
fdivs
push
push
jg
dec
and
adcb
push
mov
js
ficoml
dec
loopne
nop
push
mov
jno
imul
dec
lock
mov
xchg
jge
jle
mov
mov
cld
jle
cmpsb
in
lcall
lcall
mov
lock
dec
inc
sub
insl
insb
daa
sub
sbb
test
inc
pushf
adc
dec
adc
sub
mov
mov
xor
push
fs
in
adc
aas
sbb
push
dec
movsl
lods
adc
push
push
lock
push
xchg
xchg
push
pop
fdivs
mov
fcomps
mov
sbb
int3
cmpsb
or
jmp
sbb
xchg
push
pop
les
jb
mov
sub
or
loope
xor
sbb
sbb
test
std
fisubrl
xorb
push
je
mov
or
add
sbb
or
push
pop
push
lret
xchg
popa
mov
or
push
ja
sub
test
lea
push
mov
rclb
out
mov
pop
icebp
or
nop
xor
sarb
test
mov
pop
jb
inc
jp
pop
dec
test
xchg
or
fwait
jle
into
adc
lahf
or
lock
les
push
or
scas
add
pop
addr16
push
add
in
je
pop
mov
mov
cwtl
pop
mov
xchg
ljmp
mov
add
ss
inc
dec
ffreep
test
aas
fs
or
xchg
inc
lock
and
adc
test
jbe
fstps
scas
rorl
and
pop
rcll
addl
in
nop
in
shrb
mov
loope
dec
call
cs
call
ds
push
inc
push
jp
test
push
xor
mov
testb
pop
xchg
cmp
shlb
shrl
jne
adc
and
push
popa
test
jp
pop
or
mov
push
xchg
sub
popa
and
jne
cmpsb
add
dec
imull
fsubr
mov
mov
je
fwait
test
pop
aaa
dec
mov
jnp
in
pop
push
add
push
pop
cmpsl
je
mov
jne
inc
aam
fimull
jbe
inc
jae
cmc
imul
add
and
push
jae
in
loope
sbb
cmpsl
dec
push
sti
outsb
sbb
hlt
push
push
or
xchg
sbb
out
push
addr16
mov
pop
or
mov
xchg
xchg
out
inc
lods
hlt
test
dec
nop
fs
movsl
jb
insl
mov
aas
or
je
dec
pop
ret
lock
push
inc
je
jp
mov
and
lods
cld
lock
aam
test
mov
les
inc
adc
lret
xor
mov
and
inc
adc
dec
and
aaa
jle
or
pushf
adc
and
add
sbb
in
ljmp
iret
sub
add
push
push
mov
add
inc
fstpl
addr16
sub
in
pop
in
add
jmp
mov
test
cmp
push
repnz
jle
pop
je
jne
inc
lock
jb
bound
ljmp
lcall
dec
push
inc
adcl
add
xor
mov
sbb
cmpsl
add
sbb
add
add
insb
pop
sub
sub
pop
pop
pushf
stc
xchg
repnz
movsb
pop
dec
arpl
enter
out
psubusw
mov
sbb
xchg
mov
jecxz
and
lock
mov
jo
sub
aad
mull
inc
push
jmp
sub
mov
xor
mov
dec
ret
sub
mov
jl
mov
xchg
in
mov
test
mov
sahf
mov
and
sbb
inc
and
pop
into
or
test
jl
fs
inc
jno
xor
aam
dec
pop
sub
lock
inc
scas
js
xchg
pop
fisttps
lods
daa
addl
or
test
repnz
sahf
movsb
adc
and
lods
js
dec
orl
add
mov
rcrb
xor
and
lea
or
xchg
xor
push
stos
mov
lea
xor
pop
mov
addb
adc
push
push
cmp
add
xor
repnz
rcrb
add
mull
adc
daa
lock
xor
aas
xchg
sbb
cmpb
or
jl
popl
adcl
sbb
jl
add
gs
push
add
movsl
push
push
out
test
hlt
xchg
push
dec
or
xchg
fiaddl
sar
test
pop
push
aaa
push
cmpsl
dec
push
das
js
loopne
rcr
xor
xchg
lds
xchg
push
mov
cltd
push
das
push
or
cltd
mov
dec
jecxz
push
xor
pop
dec
clc
insl
push
pop
pop
add
push
sbb
inc
mov
sbb
bound
sub
test
lret
or
sbb
les
rcrl
adc
sti
xchg
ja
cmp
pop
push
add
loop
add
nop
jnp
pop
or
inc
pushf
test
inc
add
lahf
pop
cmp
sub
popf
movsl
push
lds
push
sbb
bound
xchg
xchg
sbb
in
lea
insb
inc
cmp
cwtl
outsl
or
cmpsb
inc
adc
adc
roll
dec
push
inc
sbb
inc
xor
xchg
sbb
ret
test
cwtl
mov
pop
pop
pop
cmpsl
test
xor
cmp
sbb
ds
testb
aam
shlb
pop
adc
mov
xor
lahf
cmpb
orb
sbb
cwtl
add
adc
or
fsubs
insb
shrl
push
adc
fnstcw
cs
pushl
push
test
pop
jae
lea
test
loopne
mov
lahf
mov
int3
aam
addb
fwait
enter
addr16
dec
mov
or
mov
ret
jl
pushf
cmp
fs
mov
and
mov
lcall
jg
ror
bound
sar
jne
sbb
aad
mov
dec
xor
sbb
xchg
push
push
out
or
pop
mov
jo
pop
pop
hlt
dec
add
jg
xor
push
pop
jle
xor
gs
or
and
jno
mov
pop
sub
and
or
pop
cwtl
and
jp
insb
sub
mov
dec
test
xor
and
outsb
test
unpcklps
push
push
add
lods
add
mov
mov
mov
add
mov
lods
sbb
ljmp
inc
xchg
ja
push
dec
ss
push
or
mov
pop
push
inc
push
outsl
mov
cli
push
insb
loop
rclb
push
adc
ljmp
xor
mov
ja
push
xor
mov
movzbl
inc
add
mov
jecxz
jle
pop
adc
shrl
xchg
loopne
xchg
fimull
scas
loopne
add
jno
inc
shrb
inc
or
and
inc
xchg
jmp
push
mov
imul
xchg
in
inc
call
or
jge
mov
cmp
push
loopne
sub
aaa
repnz
fs
int3
dec
sahf
push
add
pop
loopne
pop
add
int3
jo
add
shr
add
dec
in
mov
push
adc
dec
nop
outsl
mov
js
out
push
imul
push
and
jge
push
cmp
je
push
pop
dec
jle
ret
xor
inc
xor
scas
push
jmp
and
add
shll
pop
or
inc
shll
push
insb
jno
sarl
dec
aam
add
push
pop
sub
jl
pop
push
adc
in
or
xchg
xor
pop
cld
dec
mov
addb
test
jecxz
push
push
js
sbb
insb
nop
popa
into
push
or
pop
icebp
mov
jecxz
lock
jne
mov
mov
mov
adc
std
mov
mov
or
test
out
orb
or
mov
lret
bound
enter
lods
fcoms
lea
emms
sbb
loope
add
lea
jle
cmp
jmp
sub
cs
mov
pushf
mov
mov
jo
and
mov
cmp
jb
cmp
mov
and
sub
dec
jno
gs
out
pop
and
or
and
mov
add
cmp
in
lret
adc
sub
mov
xor
mov
andl
stos
test
sbb
adc
popa
inc
push
ret
test
clc
cmp
and
cmp
jne
lock
arpl
sbb
add
loop
xchg
xchg
jmp
inc
in
aaa
dec
aad
sub
push
mov
loopne
js
mov
add
repnz
mov
sub
adc
subl
mov
stc
das
pop
pop
fs
inc
popa
or
mov
mov
mov
inc
sub
xchg
pusha
ljmp
sbb
adc
push
aaa
jmp
mov
adc
out
mov
dec
nop
out
pusha
sub
dec
adc
add
fs
in
adc
add
insb
or
mov
daa
push
fdivrl
add
outsb
ret
cmp
cmp
jne
add
cmp
adc
mov
mov
loopne
and
mov
ret
xchg
xchg
je
pop
loop
sbb
add
stos
loop
or
out
xor
jp
dec
dec
jne
clc
pusha
adc
mov
push
mov
sbb
lods
fadds
mov
adc
jmp
cld
inc
cmp
aam
xchg
or
xor
jge
mov
push
mov
mov
mov
fsubr
sub
fcoms
add
sbbl
mov
xorl
pop
mov
mov
jp
dec
mov
xor
mov
lcall
lcall
push
pushf
mov
xchg
sbb
jl
jg
or
or
mov
and
cmp
xor
adc
in
in
inc
jne
inc
dec
mov
repnz
sbb
mov
fimull
push
push
mov
mov
rcll
pop
mov
test
push
sbb
aas
cli
insb
fs
push
imul
mov
mov
les
or
jae
push
dec
mov
pop
adc
sbb
add
mov
pop
les
jl
loope
xchg
pcmpeqw
cmpsl
in
sub
stc
xchg
call
out
push
out
mov
addr16
inc
insb
sbb
pop
and
add
sub
nop
sub
cmp
push
pop
mov
pop
or
imul
push
ja
dec
xor
mov
rcl
jne
enter
sub
loope
in
data16
fadds
lcall
mov
add
aad
sahf
sub
roll
test
xchg
pop
and
loopne
pop
or
xchg
mov
xor
shrb
pusha
pop
dec
mov
xor
aaa
lock
sub
cmc
lea
cmp
jg
stos
test
mov
inc
adc
adcl
enter
jle
sbb
pop
cmpb
inc
or
xor
jle
xorb
adc
aas
inc
adc
or
pop
in
jle
dec
dec
filds
jge
clc
jl
or
cs
add
pop
sub
cli
adc
rcl
and
or
mov
inc
cmp
and
sub
or
addb
pop
push
das
mov
add
mov
lcall
mov
jle
or
lods
mov
mov
imul
xor
ficomps
int
imul
test
mov
test
inc
adc
stos
adc
fwait
add
inc
jge
cwtl
adcb
jns
arpl
test
mov
sbb
add
xadd
int3
lret
pop
push
ret
mov
xor
adc
test
ret
int3
arpl
lea
dec
out
push
enter
insb
mov
fs
pop
sbb
adc
cmp
ficoms
lods
dec
adc
add
fwait
insb
daa
and
jmp
insl
fnsave
and
sbb
sub
in
pushf
push
outsl
add
xor
or
scas
outsb
loopne
mov
push
outsb
lahf
xor
inc
mov
ret
push
sti
push
adc
mov
cltd
adc
jo
or
repz
or
adc
dec
outsb
pop
xchg
push
or
dec
imul
push
xchg
or
sub
aaa
sub
sub
jle
inc
cli
sbb
inc
jmp
or
pop
pop
aam
sbb
lret
jne
in
shl
mov
or
or
push
pop
jne
cmpsl
lea
loope
push
mov
movsl
test
test
or
or
stos
lea
xchg
out
mov
data16
dec
cmp
outsb
scas
ss
mov
sub
dec
imul
aas
loop
insb
loope
cmp
xchg
jne
adc
clc
push
movb
dec
dec
lock
lds
xor
pop
orb
pop
xor
outsl
adc
imul
shll
pop
cld
sbb
dec
jne
push
stc
sub
lods
and
movsb
add
rcr
add
xchg
pop
xor
adc
daa
ljmp
ret
cmp
jns
inc
cwtl
int
fcomp
mov
mov
faddl
sbb
mov
xor
adc
mov
aas
dec
cmp
subb
push
sbbb
and
aaa
enter
das
sbb
mov
push
pop
outsb
push
cmp
xor
mov
dec
aam
jo
pop
nop
dec
lcall
cmp
add
xchg
rolb
sub
mov
dec
movsl
inc
lods
sub
mov
lea
jb
enter
nop
sub
shlb
outsl
sbb
sbb
movsb
dec
xor
aas
ret
adc
sbbl
or
add
and
jnp
push
hlt
mov
jb
add
cmp
movsb
xor
aas
push
adc
xchg
sub
jb
mov
adc
lcall
insl
fs
sub
fldt
push
test
and
or
pop
popa
inc
daa
jo
pop
lods
pop
imull
push
push
pop
and
loope
pop
das
sub
out
xchg
or
cmp
daa
paddusw
cmp
adc
push
movb
add
xorb
dec
add
decl
aaa
adc
sbb
cmp
mov
or
es
jbe
fsubs
pop
push
sub
fisubl
mov
dec
and
adc
mov
clc
inc
jne
jae
gs
filds
insb
pop
inc
xchg
sbbl
lock
iret
jle
mov
data16
mov
or
out
push
pop
add
in
addr16
add
push
lret
enter
inc
add
or
inc
mov
cli
and
cli
orb
call
fs
popa
cmpsl
enter
or
xchg
divb
mov
out
bound
push
mov
and
or
sub
jl
inc
loop
shl
shr
test
mov
test
fsts
icebp
adc
cmp
mov
mov
jecxz
std
scas
test
push
xor
push
rol
mov
jae
mov
adc
inc
jl
jne
clc
jg
jg
or
xor
inc
jmp
pop
movsb
pop
mov
inc
fs
jp
pop
push
ljmp
js
cmpsb
cmp
or
int3
in
jne
xchg
sbb
fmuls
test
mov
sbb
fmuls
movsl
imul
jmp
adc
dec
shlb
add
cmp
lea
cmpl
dec
mov
gs
dec
pop
and
adc
jmp
pusha
shrl
cmp
lea
push
inc
ret
cli
imul
sti
jbe
addr16
jae
mov
add
inc
xorb
test
sub
mov
or
lret
xchg
cmp
xchg
adc
outsl
xor
adc
fcompl
mov
js
out
inc
xorl
dec
add
mov
sub
cwtl
pusha
out
aas
daa
adc
add
sub
mov
in
std
sti
jbe
inc
inc
imul
pop
pushf
mov
cmp
popf
add
lea
fcompl
adc
test
sub
sbb
add
in
nop
push
push
xchg
sub
cltd
repnz
aam
in
divb
and
mov
dec
cmpb
inc
add
adc
mov
mov
xor
loopne
aam
mov
daa
push
sub
sti
les
mov
popf
movsl
out
pop
aam
rclb
mov
sbb
xor
sub
xorb
test
imul
or
ss
add
inc
mov
cmpb
add
xchg
xchg
jg
lds
sbb
sub
sbbb
add
or
repz
push
add
pop
cmp
inc
cmp
ret
push
push
ds
lds
dec
mov
mov
scas
shll
inc
jmp
fiadds
sbb
ljmp
push
mov
add
add
xchg
add
fistpl
dec
in
inc
jne
jne
adc
push
jbe
jl
pop
call
xor
push
mov
insb
mov
inc
mov
jg
fs
cmp
mov
pop
insb
ret
mov
pop
sarl
mov
sbb
aam
or
push
and
xlat
lret
add
pop
scas
lret
inc
addl
or
cmp
orb
lea
sub
outsl
popa
insl
shlb
clc
xlat
adc
movsb
cmpsb
jb
incl
push
add
adc
dec
addb
adc
sbb
ss
int3
adc
jae
and
pop
out
dec
loope
push
aam
add
and
adc
in
mov
jb
sub
fcoms
push
xchg
in
clc
adc
push
aaa
add
imulb
movsb
adc
inc
xor
adc
pop
and
add
inc
daa
lret
imul
adc
xlat
jo
push
roll
pop
or
xchg
je
add
pusha
or
aam
jae
inc
in
or
popa
sbb
push
xor
lea
jne
mov
test
loopne
jge
sub
in
jno
test
push
pop
pusha
insl
push
add
mov
inc
decl
cmpl
nop
inc
xor
push
jo
stc
ret
in
adc
pop
pop
dec
ja
pop
push
mov
incl
packuswb
cmp
je
fdivr
test
mov
xchg
mov
xchg
pop
xor
xor
pop
push
dec
mov
scas
cmp
pop
jg
fs
xchg
or
dec
in
repnz
fsts
movsb
jp
ror
cmp
or
ret
adc
jl
inc
pusha
sub
xor
insb
push
and
jne
dec
sbb
adc
loopne
sbbl
sbb
lods
mov
rorb
lea
shlb
stos
popa
sbb
ror
iret
or
insb
and
jne
cmp
mov
pop
jl
add
push
cltd
hlt
dec
lea
addr16
fcoms
adcl
jge
or
push
fnstcw
and
sub
adc
cmp
mov
jmp
cmc
inc
rcrb
xchg
out
inc
call
mov
out
add
adc
outsl
pop
add
push
jno
sbb
lea
add
dec
repnz
inc
cltd
insl
movsb
mulb
mov
fcoml
and
mov
xchg
mov
cmp
clc
data16
xor
mov
inc
cwtl
mov
lret
rep
das
in
fmuls
pusha
test
ret
adc
cmp
jl
add
ret
add
or
cmp
mov
or
jmp
sbb
pop
jb
cmpb
arpl
inc
ds
cmpl
cmpb
pop
jbe
or
add
push
push
out
xlat
cmp
in
xor
dec
jmp
adc
hlt
hlt
xor
inc
sub
cwtl
out
mov
push
push
adcl
add
rcrb
sub
adc
lret
movsb
inc
cld
aas
lods
jg
into
adc
pushf
popa
mov
repnz
add
sub
dec
subb
sub
shrl
mov
call
test
jp
xlat
xor
push
ja
sub
pop
sbbl
jne
inc
js
adc
int3
lods
icebp
add
push
popl
dec
pop
addb
leave
je
pop
or
inc
cmp
lea
add
xor
bound
loopne
add
std
aad
jl
outsl
mov
lahf
test
rolb
jbe
sub
add
jns
in
fisubs
xor
mov
sub
in
jg
pop
adc
jne
or
push
pop
cli
test
push
outsl
push
xchg
mov
pop
mov
in
mov
or
orb
mov
add
push
movsl
loopne
roll
jb
xor
call
cld
mov
jg
cmp
cmp
jle
faddl
into
add
cmp
ds
or
jecxz
mov
lea
lods
nop
addl
push
lea
or
adc
lods
adc
jns
cmpsl
pushf
addb
cs
mov
push
mov
rcll
lock
or
test
and
xchg
adc
xchg
push
or
stos
and
test
mov
inc
sub
cmpsb
push
aas
xchg
addb
decl
xor
cwtl
sub
loopne
leave
jle,pt
add
pop
cwtl
cwtl
je
nop
adc
call
jne
xchg
mov
sbb
sarl
je
xlat
lea
rcr
icebp
pop
je
shll
mov
add
inc
mov
pushf
inc
mov
movsb
xchg
js
movsb
movsb
movsl
cmp
mov
push
imul
pushf
adc
cltd
dec
mov
pop
dec
xor
mov
cmp
push
and
sub
ret
jg
and
xorl
mov
adc
push
mov
cwtl
fimull
and
add
mov
dec
xchg
xchg
or
add
lea
repnz
add
loopne
add
mov
in
pop
or
sbb
nop
rcll
daa
mov
mov
hlt
mov
mov
xchg
push
aas
cmp
mov
pop
js
adc
insb
addr16
addr16
imul
cwtl
mov
mov
ret
xor
push
adc
mov
jp
call
or
mov
inc
fadds
int
lock
cmp
js
lea
sub
cmp
rclb
lcall
pop
cmp
lea
mov
add
or
mov
or
mov
add
pop
mov
push
push
push
roll
add
or
adc
add
inc
or
int
std
jbe
or
pop
push
outsb
mov
data16
and
in
jns
add
incb
hlt
icebp
dec
jmp
nop
shlb
shr
mov
add
fisubs
sbb
test
out
push
dec
xor
insl
and
push
mov
dec
xor
inc
pop
xor
and
cmp
out
or
mov
push
add
loopne
cltd
sub
call
mov
and
mov
pand
pop
mov
cld
xchg
iret
or
xchg
push
fadds
clc
insl
fs
call
push
mov
fcoms
in
daa
out
negb
dec
shr
popf
cmp
mov
clc
in
jns
test
adc
sbb
iret
enter
test
popf
cmp
addb
js
popf
mov
lock
xchg
out
xor
je,pn
addr16
cmp
pusha
xor
sbb
adc
in
test
iret
enter
adc
cmp
jbe
push
les
pop
jmp
mov
cwtl
cmpl
dec
fmulp
lea
loopne
xor
sbb
push
sub
movsb
adc
out
popf
cmp
pushf
cs
ja
mov
cs
rclb
xchg
pop
mov
popf
mov
sbbb
jae
iret
int
pop
js
je
das
dec
sahf
xchg
ja
mov
out
in
jns
fs
pusha
inc
push
repnz
push
mov
jae
test
push
pop
daa
out
in
dec
movsb
dec
pop
and
xchg
femms
adc
inc
enter
iret
leave
cmp
cmp
cmp
xor
les
cmp
adc
jg
lods
cmpl
inc
lods
mov
mov
mov
jne
arpl
ret
xor
adc
sub
loope
mov
mov
mov
lods
mov
adc
cwtl
pushf
mov
movsb
pop
mov
pop
mov
fistpll
iret
add
mov
enter
shll
clc
push
addb
enter
repz
das
enter
inc
sub
cmp
lret
sbb
fidivs
xor
mov
outsb
mov
in
jmp
nop
inc
fsubl
mov
popl
mov
js
jge
add
sub
push
add
loop
push
mov
push
push
xchg
leave
mov
pop
dec
jp
or
push
mov
jg
nop
shlb
dec
enter
fists
dec
lret
push
adc
movb
jp
test
test
add
mov
nop
fbld
xlat
ds
cs
pop
leave
pop
mov
dec
es
dec
mov
adc
push
xchg
pop
cmpb
in
push
test
sub
mov
adc
ret
roll
sub
clc
je
loop
pop
scas
inc
xchg
cmp
add
sbb
je
mov
add
or
dec
sbb
mov
mov
nop
or
and
inc
sbb
jne
sbb
ss
xor
fstpt
dec
and
pushf
shlb
out
and
mov
jo
jecxz
sbb
sub
adc
xchg
sbb
pop
xor
pop
pop
or
in
jmp
loopne
adc
push
sbb
arpl
dec
dec
jo
push
cld
rorl
mov
adc
add
add
ret
scas
ss
push
std
mov
and
mov
mov
dec
sub
subb
fs
mov
mov
dec
es
movsb
lock
xchg
mov
dec
xor
and
adc
xor
and
sbb
and
and
dec
shrb
aam
mov
insb
cmp
dec
fdivrl
loopne
dec
push
mov
xchg
xchg
dec
and
jo
iret
lret
and
sub
lret
lock
nop
hlt
xchg
lret
and
adc
mov
xchg
lret
and
clc
shlb
out
fbld
xor
je
daa
adc
cmp
or
ss
inc
js
dec
add
rcrb
movq
iret
inc
stc
push
jne
sbb
jbe
adc
cmovns
outsl
fs
mov
pop
outsb
dec
jb
pop
outsl
jb
inc
insl
jo
and
push
je
and
push
cmp
or
jns
pusha
and
dec
mov
aaa
pop
jae
inc
jae
pop
dec
add
je
xor
outsl
fiadds
jle
cmp
fdivl
adc
sbb
dec
stos
std
sbb
or
dec
add
push
or
adc
pop
jmp
imul
sub
rolb
and
sbb
sti
arpl
and
mov
int3
int3
sub
pop
ss
inc
jg
out
in
dec
cs
push
pop
push
add
enter
popf
push
or
sub
cmp
rclb
inc
add
pop
out
sahf
cmpsl
push
pusha
xchg
je
pop
pop
mov
rclb
ja
out
mov
aas
es
push
fiadds
sub
addr16
inc
js
jns
add
and
es
prefetch
dec
jecxz
lcall
clts
cmpsb
sysret
add
pop
orl
xchg
mov
fwait
das
or
pushf
add
sub
xlat
mov
adc
cmpsb
insb
dec
and
insb
sti
add
dec
inc
push
dec
and
popf
and
add
add
ss
insb
lret
adc
push
dec
sub
lret
sub
test
xor
mov
dec
mov
xor
jmp
add
fdivs
pop
add
inc
loop
negl
add
test
push
jnp
adcl
mov
sbb
or
inc
pop
or
dec
lcall
add
out
mov
jo
les
or
mov
in
imul
popf
or
jb
dec
jo
ret
cmpsl
mov
imull
scas
lods
pushf
outsb
popa
dec
gs
ret
mov
cmpsl
dec
inc
pop
push
stos
jns
es
popl
pop
lret
or
mov
add
xchg
dec
aas
adc
scas
scas
pop
jae
scas
jmp
jecxz
add
adc
nop
clc
inc
imul
jo
stos
sbb
inc
daa
pop
sbb
or
subl
adcl
int3
pop
divl
rolb
hlt
pop
fadds
enter
add
scas
dec
test
iret
pop
cmp
cmp
scas
inc
jo
adc
adc
mov
mov
inc
rcrl
pop
addr16
iret
pop
cmp
adc
push
pop
imul
push
mov
shll
iret
pop
cmp
push
in
cs
loopne
mov
mov
or
out
ret
pop
cmp
adc
adc
mov
lods
pop
nop
mov
andb
adc
iret
pop
cmp
bound
jb
pop
cmp
shl
mov
lods
dec
or
iret
pop
add
orl
or
adc
mov
pop
xchg
adc
aam
fs
outsb
adc
xlat
pop
inc
in
or
adc
cwtl
inc
rcrb
mov
mov
adc
sbb
js
or
mov
sbb
sub
sub
mov
push
add
iret
pop
cmp
mov
clc
mov
add
add
pop
xlat
pop
inc
in
rcll
in
shlb
jmp
jg
cmp
adc
and
inc
pop
movsl
sub
sbbb
movsl
inc
imul
sub
sbb
pop
mov
iret
pop
cmp
cmp
and
or
insb
xor
adc
xor
sbbb
dec
lods
fildl
pop
inc
push
jo
push
aaa
lock
imul
mov
add
loope
repz
push
mov
add
sub
sti
insl
mov
dec
repz
imul
testb
cmpsl
lret
xchg
mov
inc
mov
adc
call
sbb
call
pusha
add
mov
fwait
nop
insb
push
ret
sbb
inc
aaa
jmp
and
cmpsl
movsb
pushf
or
adc
test
test
cmpb
mov
std
cmpsl
dec
xchg
sbb
enter
aam
test
and
dec
addb
test
add
sub
xor
stos
std
cmp
cmp
daa
add
add
adcb
js
lock
mov
jg
ss
mov
aas
dec
je
sbb
cmp
lods
fs
ror
xchg
lahf
push
nop
es
jbe
or
jo
adc
cmpb
xor
repnz
xchg
push
clc
mov
cmpsb
bound
pop
mov
dec
jae
lahf
arpl
loopne
lock
fbstp
lock
mov
xchg
jl
in
dec
hlt
mov
cmpsb
xchg
jl
call
nop
iret
mov
dec
in
lahf
jmp
repnz
testb
inc
loopne
movsb
xor
xchg
mov
or
adc
sub
je
les
rcll
fmul
inc
sbb
mov
lock
xor
sti
add
jecxz
inc
loopne
or
pop
popa
mov
and
cwtl
in
jg
sub
inc
movsl
lock
jmp
or
aad
jmp
adc
xchg
cld
jmp
pop
out
and
mov
pop
fstl
test
call
push
fwait
dec
and
push
loopne
nop
and
jmp
inc
mov
inc
jmp
push
es
out
mov
push
lods
or
inc
push
addb
pop
lods
pop
lahf
adc
pop
jg
cmp
add
push
roll
pop
stos
test
inc
cmp
cmpsb
int3
ret
add
jge
inc
test
jecxz
cmp
fs
mov
addl
mov
add
xchg
and
jmp
add
sti
cmp
add
mov
add
pop
in
loop
lret
or
jg
test
adc
and
push
add
sbb
fs
pop
inc
sub
out
adc
and
add
or
test
xchg
pop
les
mov
cmp
jge
and
sbb
popf
or
jl
inc
mov
mov
push
in
xor
test
push
test
lea
mov
js
adcl
dec
inc
mov
imul
sub
xchg
dec
or
in
repz
dec
jnp
insb
pop
xor
pop
subb
call
mov
push
insl
mov
imul
or
xchg
andl
adc
or
xchg
mov
add
into
sub
movsb
jns
push
adc
outsb
push
adc
loopne
push
or
sbb
add
fdiv
jmp
mulw
and
clc
add
test
int3
aam
pop
clc
adc
mov
jl
push
push
and
or
or
inc
mov
mov
inc
fstpt
jnp
je
push
movsl
pop
outsl
pop
nop
jle
call
inc
jne
rclb
adc
add
xchg
mov
push
ljmp
or
mov
push
outsb
xchg
add
cmp
sub
jb
or
out
jmp
sub
mov
cmp
mov
add
cmpsb
pusha
cmc
cmp
call
pop
es
out
push
lret
repnz
dec
add
push
andb
xchg
adc
loop
mov
ds
hlt
call
xchg
mov
mov
mov
nop
test
shr
push
pop
stc
arpl
jo
outsl
jmp
sbb
dec
call
and
call
enter
sub
in
push
jno
xchg
test
cwtl
stos
sub
jbe
adc
dec
inc
and
sub
pop
rclb
call
cmp
push
sti
outsl
pop
push
mov
xchg
pop
or
data16
jmp
push
adc
les
sub
adc
rorl
cwtl
add
push
fbstp
adc
ja
fs
cmp
scas
cmp
or
push
js
call
idivl
add
add
lods
shlb
mov
into
nop
inc
movsl
push
xchg
and
lea
pop
or
cmpsb
adc
cli
rcll
and
adc
mov
mov
dec
add
repnz
dec
into
rorb
push
ljmp
jno
lahf
or
repz
shlb
clc
call
nop
fisubs
cmp
mov
or
xor
out
dec
roll
mov
scas
dec
sbb
lock
outsb
nop
push
sbb
pushf
xor
and
iret
in
sbb
pop
jnp
mov
fs
stos
cmc
nop
into
inc
add
inc
aam
ret
rclb
mov
push
adc
insb
fwait
insl
test
in
pop
mov
or
push
enter
push
sar
inc
or
and
call
xor
daa
in
mov
xor
mov
lea
sbb
enter
rcrb
ret
adc
leave
xchg
adc
sub
or
fwait
xchg
push
nop
fcomps
lahf
mov
das
call
xor
dec
jl
into
in
push
jae
add
in
jae
push
push
pop
or
xor
pop
out
imul
std
or
jg
mov
lds
push
ret
mov
std
sbb
es
mov
add
sbb
or
mov
inc
das
mov
add
cmp
jne
loope
or
jne
sahf
out
adc
adc
fmull
pop
push
loopne
xchg
scas
adc
mov
out
sbb
fs
stos
cmp
jnp
es
mov
dec
movsb
add
cltd
pop
sbb
repz
cs
pop
push
push
clc
dec
mov
jne
cmpb
ret
pop
ret
lods
push
adc
pop
pushf
pop
cmpsl
cltd
push
cld
shll
stos
js
cmp
and
int3
out
mov
and
xor
xor
shr
insl
enter
rcl
xor
cmp
in
dec
xor
stc
pusha
rcll
icebp
pop
repnz
fsubrl
scas
sub
enter
and
cmp
test
and
mov
jl
jbe
mov
push
push
sbbb
and
push
das
add
inc
adc
xor
sub
je
dec
sahf
cli
popa
cmovno
jg
jmp
adc
mov
xor
dec
cmpsb
and
mov
xchg
aaa
roll
fsubl
add
enter
fwait
sub
push
call
std
jg
sub
xor
or
inc
xor
int3
sbb
add
or
add
xor
test
push
mov
mov
aad
sub
lahf
push
pop
rclb
insl
sub
arpl
movsb
push
pop
xchg
out
in
sub
pop
push
cmpb
inc
mov
and
push
xchg
out
pop
das
mov
inc
push
cld
es
mov
aam
mov
mov
stos
add
xor
sbb
or
lret
stos
test
cmpsl
jl
dec
xor
cmp
mov
cmp
add
mov
adc
inc
cmp
repz
outsl
nop
mov
dec
mov
pushf
call
mov
push
adc
jb
into
pop
jae
scas
out
mov
or
mov
mov
mov
flds
mov
cmpb
sar
cmp
pop
dec
inc
lock
inc
inc
sub
push
fdivs
movsb
lea
push
jo
loopne
sbb
mov
mov
sbb
popf
subl
jg
imul
mov
cwtl
xchg
xchg
mov
adc
std
push
divb
dec
je
or
jmp
mov
fisubrs
pop
mov
pop
idivl
jmp
sbb
and
mov
repz
or
push
je
test
cmp
add
pop
out
sahf
es
or
jns
pop
push
sahf
jge
xchg
pop
xchg
mov
inc
sub
mov
inc
ret
mov
sbb
jno
jo
jmp
sub
test
pop
lods
repz
nop
popl
push
loope
jg
in
ret
mov
sub
sub
push
sub
fcmovnbe
fwait
subb
rep
xchg
pop
js
sbb
pop
clc
imul
mov
sub
xchg
popa
es
scas
stos
shlb
fcomps
pop
pop
or
pop
adc
or
xor
sub
insb
mov
es
xorl
and
sbb
jb
nop
rolb
pop
jb
adc
sub
addr16
rclb
andl
dec
and
cmpsb
inc
adc
sub
hlt
mov
add
sub
push
sub
sub
xor
push
add
or
xor
imul
test
in
jno
push
add
push
arpl
into
shrl
inc
jmp
adc
ja
push
jns
out
lods
rol
iret
dec
test
adc
add
adc
call
sahf
jnp
notb
or
pop
mov
xchg
adc
mov
add
mov
ret
adc
pop
scas
repnz
cwtl
adc
ret
add
mov
mov
les
fsubp
lock
ret
add
iret
adc
push
jns
mov
sbb
dec
adc
cwtl
lcall
or
sub
cmp
popa
jge
sbb
add
dec
or
cltd
mov
adc
out
pop
es
push
adc
mov
xor
cmp
xor
sahf
sbb
cmp
xor
aaa
sbb
test
pusha
xchg
adc
sub
std
in
dec
popa
insl
add
pop
pop
dec
ds
pop
jge
ljmp
loope
je
push
test
loopne
test
ror
or
testb
jmp
dec
mov
cmp
loopne
adcl
orl
adc
sbb
xor
and
vpinsrw
nop
fsubrl
lods
dec
call
push
push
mov
mov
shlb
sbb
nop
out
jecxz
push
pop
mov
xchg
cli
ja
or
arpl
adc
mov
and
stos
aam
adc
insl
out
jb
mov
jecxz
sahf
mul
out
aas
movb
jnp
out
sahf
out
mov
call
int
mov
pop
iret
repz
and
dec
pop
jb
in
mov
cld
sbb
mov
aas
and
mov
mov
popf
xor
push
arpl
sbb
mov
mov
xor
and
insl
dec
cmpsb
sub
and
push
or
lock
and
add
sbb
data16
dec
dec
sub
adc
int3
mov
mov
xchg
lahf
cmpsl
test
enter
sahf
out
outsl
xchg
push
test
mov
in
sti
cs
inc
xor
repz
dec
pop
jne
lcall
pop
xor
push
outsl
das
cmp
inc
inc
imul
inc
and
data16
movsb
sub
mov
sbb
cltd
mov
js
and
sbb
add
push
inc
dec
loopne
jno
jmp
inc
jmp
int
push
pop
adc
nop
and
daa
sbb
adc
cmp
das
pop
loope
xchg
lock
fdivrl
and
or
pop
cmp
idivl
mov
cmp
sub
lret
mov
push
push
fwait
dec
mov
mov
test
push
jne
jo
jmp
adc
das
jb
lret
cmp
or
clc
lcall
add
inc
inc
rcll
xchg
add
adcb
pushf
clc
add
mov
mov
aad
add
movsl
or
test
imul
adcb
push
bnd
xchg
cmp
adc
out
rorb
and
out
sub
inc
and
pop
pop
pusha
das
mov
movsb
or
call
es
jp
nop
push
or
mov
out
add
jnp
stos
sbb
push
xlat
negb
into
adc
cmp
repz
imul
repz
push
xchg
push
mov
iret
mov
shlb
in
out
cmp
push
sbb
incb
fcomps
push
and
push
sub
dec
xchg
mov
mov
addb
pop
sbbb
test
int3
push
xchg
mov
inc
inc
pop
rclb
push
mov
mov
rolb
adc
test
xchg
orl
imul
rolb
rcll
push
loopne
fidivs
push
inc
rolb
push
mov
pop
popa
insl
jns
or
mov
outsb
or
out
push
sbb
flds
jne
fstl
inc
and
fildll
pop
sub
pop
sbbb
pop
jno
sbb
jne
pop
pop
push
cmpb
es
xor
test
and
sar
insl
or
xor
pop
test
jl
xchg
shlb
or
sub
mov
ds
inc
addr16
pop
pop
loopne
pop
xor
insl
loopne
jb
pop
lock
lock
jmp
add
adc
rcrl
inc
and
out
rclb
fwait
shll
mov
or
mov
stos
inc
cmp
das
imul
cmp
add
add
in
rcr
ret
add
pop
add
imul
sarl
loopne
cmp
push
inc
push
cmpb
mov
fsubl
xchg
aam
jne
daa
jmp
incb
adc
sub
inc
dec
mov
imul
and
add
cmpsl
or
fildl
fs
push
mov
test
loopne
imulb
inc
mov
cmpsb
ffree
inc
adc
push
sub
mov
sti
xor
leave
jmp
movsb
push
rorb
xor
sbb
out
pushf
push
adc
incb
add
xorl
pop
in
nop
pop
sub
int
ret
test
int
mov
xchg
pop
push
aad
jo
ds
repz
cmpsb
mov
xor
push
insl
daa
loope
push
nopl
notl
and
cmp
xchg
jbe
sbb
mov
xchg
shlb
inc
out
stos
sbb
std
inc
and
cltd
inc
fisubrl
mov
or
mov
jb
push
dec
adc
push
xor
pop
dec
cmc
sub
adc
jmp
out
jmp
jmp
jmp
imul
add
xor
adc
sbb
fmul
and
mov
test
and
cmp
fldt
adc
jnp
lds
push
jmp
adc
xlat
push
in
cmp
push
je
xchg
aas
fdivrs
mov
int3
push
loop
add
repz
sbb
test
jge
add
xchg
adc
outsb
fistps
fwait
sbb
dec
out
push
rcl
in
imul
add
sub
mov
insb
lret
call
or
jmp
test
data16
pop
inc
mov
cmpsb
push
push
add
orl
mov
inc
inc
rcrb
sub
nop
or
add
movsl
adc
loopne
test
dec
and
push
sbb
jo
add
in
movsb
jge
cmp
xor
loopne
sbb
push
inc
lock
int3
adc
arpl
aaa
cwtl
nop
and
ja
cmpsb
inc
test
jg
in
aam
leave
jecxz
data16
adc
jl
int
out
or
pop
xchg
sub
push
fwait
stc
mov
xor
cmc
add
xchg
push
enter
pop
pop
das
xchg
push
and
sub
mov
pop
fidivl
and
push
pop
out
xchg
out
orb
mov
int3
push
mov
iret
jnp
mov
or
and
cmp
roll
mov
das
pop
fisttpl
add
leave
fcompl
or
dec
push
out
inc
enter
movsl
sub
sub
mov
orb
mov
leave
sbb
push
jl
sbb
or
add
inc
pop
pushl
add
add
sub
mov
adcb
jbe
sahf
dec
ficomps
push
test
inc
mov
or
jnp
out
std
adc
xor
dec
ficoms
sub
adc
mov
mov
sub
or
ret
cmpsl
or
movsb
mov
in
ret
pop
or
ss
pop
lret
and
xchg
sbb
in
lahf
push
insb
add
das
repz
js
in
push
in
and
and
gs
push
loopne
repnz
jae
in
fildll
and
push
testl
xchg
mov
dec
and
fildll
inc
jb
jge
inc
inc
add
jge
xor
adc
push
testl
cs
decb
pop
jle
ds
jae
mov
loop
xchg
out
imul
daa
clc
cmp
jns
xor
loop
dec
push
adc
aad
push
ret
mov
neg
or
xchg
jl
je
mov
and
iret
fcomps
cmovae
xor
insl
pop
into
mov
fidivrl
adc
test
pop
aas
imul
pop
cmp
js
imul
sub
imul
pop
imul
fcomps
inc
pop
shlb
or
subl
insb
repz
sti
in
sahf
push
mov
mov
ljmp
iret
xor
pop
pop
daa
inc
popa
jle
jb
repz
pop
dec
jne
fildl
inc
orl
loopne
dec
mov
sarl
and
leave
xchg
mov
push
pop
sbb
roll
movsb
pop
pop
filds
adc
popa
fistpll
ds
arpl
push
mov
dec
pop
mov
inc
sub
sbb
loopne
decl
and
lea
lods
sub
rorb
lock
fildll
addb
xchg
add
or
pop
inc
xchg
pop
out
popf
adc
in
adc
hlt
adcl
ds
int
push
dec
je
and
inc
and
cmpsl
jne
dec
jmp
shl
mov
jl
inc
es
lock
cmc
nop
cs
push
xchg
movsb
rorb
dec
sub
push
das
dec
pop
and
out
roll
stc
shrl
adc
imul
adc
push
popa
clc
es
imul
add
mov
mov
cmp
xchg
mov
sbb
jp
rcrl
cmovb
pop
leave
adc
mov
add
aad
adc
dec
imulb
movb
fs
cmp
inc
testl
xorl
pop
pop
mov
pop
cmc
add
push
arpl
call
adc
add
loopne
xchg
mov
or
cmp
stos
out
stos
repz
dec
stos
mov
jns
iret
sti
sbb
inc
data16
divl
stos
int3
ljmp
idivl
daa
hlt
adc
push
push
ja
xchg
jns
add
andb
fiadds
loopne
sub
ficomps
mov
inc
add
or
cmp
or
into
mov
adc
fstpl
leave
leave
and
or
lcall
aad
in
movsb
test
call
and
and
and
inc
xchg
mov
lods
jo
out
xor
push
jb
jno
and
fcom
or
shrb
aas
aam
stc
xor
insb
into
and
add
and
inc
int3
add
sbb
mov
lds
repz
push
pop
mov
cmp
mov
sbb
cmpsl
cli
stos
xlat
enter
jbe
xchg
in
sub
add
inc
and
adc
rclb
addr16
in
cmp
sti
popw
out
or
push
sub
outsb
aaa
in
repz
ret
fcoms
xchg
adc
sub
xor
sahf
outsb
adc
or
test
inc
adc
xor
sub
sub
imul
scas
in
test
pusha
and
inc
mov
and
mov
dec
add
leave
fnsave
mov
dec
sbb
lods
inc
test
test
mov
push
mov
popf
pop
fdiv
test
movsb
sbb
mov
dec
inc
pushf
mov
xchg
cwtl
lret
inc
cwtl
dec
xchg
xchg
xchg
adc
nop
inc
nop
mov
and
and
push
xor
cmp
mov
add
pop
xlat
test
pop
test
mov
mov
cwtl
push
sbb
pop
push
sbb
xor
ret
cmpsb
pop
adc
add
inc
pop
rcrb
mov
pop
call
mov
out
dec
or
or
jl,pn
ret
sub
fbld
xorl
jle
ss
adc
push
and
in
out
loopne
loope
mov
push
pop
and
outsb
jno
jne
outsl
xchg
lock
rcll
mov
and
sbb
daa
push
jnp
fsubrp
ja
lock
arpl
fadds
bound
dec
imul
jge
sub
testb
push
icebp
out
sahf
cmpsl
push
popa
mov
int
repnz
out
mov
push
repz
insl
mov
mov
mov
pop
adc
cmp
adc
dec
test
xor
test
inc
mov
dec
adcl
push
mov
sub
push
sbb
je
sbbb
in
in
push
adc
mov
pop
es
fdivl
fsubs
inc
xchg
aam
mov
cwtl
fimull
or
sbb
mov
pop
enter
movsb
enter
xorb
mov
faddl
lahf
inc
inc
lcall
lret
leave
xchg
hlt
mov
int
mov
cmp
push
jno
ds
repz
mov
cmc
hlt
inc
push
cs
ret
test
mov
jns
pop
push
imul
popf
sbb
mov
sub
shlb
add
pop
xchg
mov
inc
push
mov
nop
fsubr
roll
or
mov
test
cmp
pop
cmp
das
pusha
pusha
mov
adc
jo
and
movsb
aad
inc
lret
and
mov
pop
add
xor
cwtl
lds
inc
add
subb
jmp
fucomi
dec
inc
mov
inc
mov
ds
mov
sub
xchg
mov
sub
xchg
inc
pop
jae
in
push
mov
dec
testb
nop
clc
pop
test
jbe
and
pop
cmp
mov
jb
or
ja
notl
call
ret
jno
testl
idivl
movsb
or
lds
pop
sub
push
mov
mov
std
add
gs
pop
es
es
out
push
mov
ds
shrl
dec
gs
cli
js
outsb
xchg
out
mov
dec
cli
daa
movsl
rolb
out
cmp
xor
dec
and
push
in
jno
push
push
dec
push
xor
push
xor
es
and
lods
es
inc
push
cmp
cmp
lods
movsl
test
dec
imul
sub
movsl
adc
mov
movsl
dec
xor
inc
sarl
xchg
sub
pop
cwtl
jbe
mov
inc
jo
imul
insl
lds
lods
sbb
imul
jle
rolb
out
into
pop
jo
lea
sub
cld
inc
ds
inc
repnz
outsl
in
xor
dec
push
mov
adc
dec
imul
inc
repz
mov
inc
jmp
sub
cmp
xchg
and
movsb
movsl
movsl
pop
shll
cmp
lods
adc
lds
cmp
imul
fs
inc
imul
add
sbb
mov
pushf
outsl
bound
test
in
std
push
fs
popa
add
add
lds
sub
rorb
lock
inc
add
aam
inc
push
adc
inc
lea
decb
adcb
addl
std
clc
or
jp
cli
jg
jle
jle
jmp
sub
or
cld
fs
ss
arpl
shr
js
or
scas
pop
push
adc
xor
pop
cmc
sbb
adc
popa
mov
adc
pop
sub
sub
inc
xor
sub
or
lret
ret
push
adc
pop
push
or
fistps
or
inc
outsb
inc
and
or
and
enter
add
add
add
push
aam
ficompl
testw
xchg
faddp
xor
ja
cmp
inc
jo
fsubrs
loopne
movl
in
xchg
insl
push
pop
pop
dec
and
add
movsb
jae,pt
pop
mov
mov
adc
mov
mov
mov
adc
aas
add
daa
loop
inc
and
xor
add
adcb
add
inc
cs
xlat
adc
mulw
dec
bound
dec
or
aad
sub
sbbl
aam
sbb
or
push
or
xor
inc
dec
jo
mov
add
and
pop
or
flds
daa
scas
lret
add
pushf
andb
xor
pusha
lds
pop
push
pop
push
push
sbb
sbb
dec
pop
dec
cmp
mov
bound
stos
push
movb
aam
or
jmp
push
xchg
inc
lods
or
dec
aaa
dec
fidivrs
out
lcall
bound
xchg
mov
shlb
insb
xchg
adc
cli
adc
out
repz
add
add
out
mov
lods
add
mov
cmc
xchg
cmp
cld
aaa
mov
cmp
test
decb
sahf
shl
jb
je
dec
je
jecxz
push
call
rorl
lods
testl
nop
out
jg
add
je
xor
push
lods
or
adc
ja
jmp
jg
and
stos
insl
aas
test
and
adc
pop
movsl
add
dec
jne
adc
pop
cmp
cmc
jmp
stc
lea
push
mov
xchg
stos
sub
inc
js
dec
fimull
ja
sbb
cld
sub
sbb
and
inc
fs
lmsw
jge
and
add
cmp
add
and
movsb
repnz
clc
mov
mov
adc
int
adc
xchg
or
inc
sub
jo
mov
inc
sub
fsub
lods
jecxz
or
push
lds
lret
or
ds
divb
push
outsb
mov
jae
xor
js
iret
in
jp
leave
incl
mov
inc
or
cmpsb
sbb
mov
iret
cmp
aaa
mov
cli
add
and
or
add
out
sub
push
je
dec
adc
adc
adcb
js
adcb
add
pop
xchg
sbb
or
adc
lods
dec
imul
lahf
scas
or
or
jmp
idivl
insb
xchg
jmp
mov
pop
test
jne
mov
jle
dec
ja
repnz
sub
sbb
pusha
sbbl
and
pop
cwtl
or
inc
cld
cmp
outsl
or
or
xlat
adc
leave
iret
add
push
adc
push
in
mov
or
jge
sbb
adc
sahf
jbe
outsl
out
mov
mov
add
daa
pop
je
mov
addr16
pop
or
pop
adc
push
fildll
sbb
lret
outsb
add
fcompp
xchg
mov
and
psrld
fidivrl
and
inc
rclb
or
pushf
and
js
not
cld
mov
push
push
sub
cltd
lods
adc
imul
mov
mov
dec
and
xor
pop
xorb
fildl
adc
cmp
cmp
jnp
daa
xchg
xchg
mov
ret
jns
cmpsl
stc
xor
jnp
test
out
cli
cs
or
negb
cli
fcomi
mov
int
test
popa
pop
jg
inc
jnp
lds
pop
fnsave
jmp
pop
adc
int3
fbstp
xor
clc
or
mov
adc
sub
cmp
fadd
sti
mov
dec
push
xchg
xor
mov
inc
sbb
cmp
push
out
pop
xlat
dec
clc
jmp
aas
adc
xchg
adc
loope
add
icebp
fsubr
pop
cmp
or
mov
not
es
mov
hlt
jne
inc
repz
icebp
adc
jae
cs
xchg
add
paddsb
cmp
je
add
insb
or
sub
mov
xchg
arpl
inc
cli
test
inc
add
xor
mov
cmp
jl
or
add
in
or
push
sbb
dec
das
aam
ja
popw
sbb
dec
gs
icebp
inc
imul
mov
xor
pop
push
xor
nop
mov
shl
add
inc
icebp
cli
push
aam
mov
and
roll
dec
add
add
clc
push
or
stc
xor
xor
fcmovnb
test
add
sbb
clc
mov
cmp
leave
out
push
push
test
call
and
flds
out
je
insb
or
out
mov
sarb
dec
mov
decl
bound
pop
rorl
ss
imul
push
sbb
or
pop
jo
iret
aam
mov
daa
mov
mov
and
push
mov
nop
or
mov
pop
movsl
push
push
push
xor
hlt
mov
xchg
xchg
les
or
or
daa
xor
jns
sub
or
xor
repnz
xor
out
mov
adc
incl
add
ss
push
or
mov
rorl
loop
pop
or
inc
ret
sub
or
cmp
out
dec
add
sti
jnp
arpl
push
popa
xor
outsb
outsb
mov
ret
gs
mov
mov
jb
push
test
add
enter
out
xor
mov
arpl
fidivl
dec
fwait
push
ss
adc
push
mov
lahf
inc
jecxz
ja
adc
jb
inc
ficompl
dec
aas
outsb
aaa
push
es
imul
imul
ja
ret
mov
arpl
xchg
mov
xchg
inc
inc
inc
pop
push
push
inc
ret
pop
inc
inc
push
cmp
mov
fs
dec
mov
aas
add
loope
add
push
xor
and
cmp
adc
outsl
cmp
ja
inc
mov
lock
sbb
sbb
and
pop
or
das
jmp
sub
inc
sahf
inc
inc
xor
add
mov
and
out
rcl
mov
inc
aam
adc
xchg
jmp
sub
and
mov
adc
sbb
fs
mov
jo
inc
xor
cmc
dec
mov
sbb
mov
imul
xchg
jmp
daa
add
xor
pop
push
pop
push
aas
inc
pop
jnp
inc
es
inc
ja
arpl
aaa
push
fwait
scas
xlat
jmp
call
lock
je
xchg
xchg
add
imul
mov
sti
sub
inc
cmp
cli
fldl
or
or
sbb
inc
add
xchg
dec
inc
loope
xor
adc
xchg
xor
sub
out
mov
jbe
arpl
push
in
pop
adc
adc
dec
xchg
sbb
movups
jmp
lret
sub
and
sbb
hlt
mov
or
fstpl
push
cmp
and
add
das
jge
aas
inc
fsubl
and
add
xchg
add
ljmp
sub
mov
inc
add
push
adc
cmp
push
or
adc
or
add
icebp
xor
test
push
rorb
aaa
push
push
xchg
pusha
sub
sbb
push
mov
adc
and
adc
nop
into
xor
add
and
inc
sbb
sbb
and
sub
xchg
rclb
movsl
fmull
les
rdmsr
mov
ss
sub
sbb
cwtl
cmp
cs
inc
sub
pushl
jbe
and
shlb
mov
jnp
jae
sbb
push
mov
ret
shlb
into
sarb
dec
xor
add
xchg
pusha
sbbl
pop
sub
jge
jnp
je
lods
aad
cmpsb
lock
adc
ja
xchg
pop
das
pop
add
shlb
push
lcall
push
add
lods
push
adc
or
mov
xor
sub
js
sbb
cli
adc
mov
xchg
and
mov
jge
xor
mov
add
xor
pop
add
and
adc
push
mov
add
push
repz
mov
inc
add
fadd
push
cmp
xchg
inc
sbb
sub
notb
mov
sbb
sbb
aam
mov
cs
inc
pushf
add
add
loop
or
cmpsb
sbb
setl
test
aaa
adc
or
imul
cs
enter
cmpsl
aas
pop
enter
cld
push
push
lahf
sahf
mov
sbb
pop
cmp
lret
jle
enter
jl
sbb
loopne
push
gs
loop
jno
add
mov
shlb
lret
jne
loope
mov
repnz
sbb
jo
inc
lock
mov
add
sbb
dec
add
popa
pop
sbb
inc
loopne
test
aas
add
add
mov
add
loop
cmp
rcrl
and
xor
xlat
cmc
mov
mov
rclb
dec
jne
jno
sbb
cmp
dec
and
cmp
decb
jmp
inc
ss
and
xlat
jge
sbb
push
sub
jne
jne
mov
mov
cmp
adc
mov
push
adc
scas
adc
jecxz
jo
sbb
xor
or
mov
das
dec
push
adc
lods
xchg
inc
clc
mov
or
ss
and
adc
push
adc
or
insl
push
lods
fnstsw
dec
popf
pop
sbb
outsl
adc
push
jecxz
dec
mov
je
sub
out
or
mull
dec
push
adc
add
jne
iret
insb
in
loope
and
sti
cmpsl
cmp
outsb
sbb
inc
jns
dec
xchg
mov
push
or
insb
data16
jp
das
pop
add
into
and
pop
add
sbb
inc
ss
add
pop
add
lret
mov
dec
xor
or
loope
js
push
dec
das
add
push
push
add
add
and
pop
out
and
pop
subl
pop
fs
pushf
mov
out
in
or
or
xchg
sbb
nop
lret
insb
mov
scas
and
dec
sbb
add
cmp
xor
cmp
ds
sbb
movsb
nop
cmp
das
or
xorl
sbb
adc
jmp
mov
add
fcomps
sbb
lea
pop
xchg
mov
stos
or
mov
les
sbb
add
fwait
xchg
mov
sbb
leave
les
mov
lock
out
or
outsl
or
mov
pop
adc
xor
jb
mov
jge
mov
addb
es
mov
mov
loopne
imul
out
lret
adc
pop
inc
adc
xor
add
lods
or
orb
cmc
mov
int
shlb
lret
sbb
adc
or
push
pop
xor
dec
inc
nop
add
pusha
icebp
in
push
data16
hlt
cmp
xor
push
cmp
push
xor
push
push
rcrl
pusha
subl
movsl
movsb
or
ret
out
jl
push
rorb
data16
dec
mov
mov
push
adc
or
test
mov
dec
loop
clc
cmp
jne
mov
fnstcw
repnz
sbb
movups
fbstp
dec
jne
jmp
movl
jle
and
test
in
jne
addb
test
sahf
xor
cmp
jle
pop
pop
bound
mov
fcomps
add
push
pop
leave
pushf
lds
push
mov
jge
imul
cmpsb
std
add
and
mov
cmp
mov
jae
popa
bound
or
mov
rorl
sarb
jg
andb
sbb
mov
and
inc
lret
or
xor
push
or
push
test
and
lds
dec
outsb
filds
sti
outsl
push
add
fistpll
lret
je
mov
dec
push
test
pop
xorb
mov
divl
mov
loop
movsb
and
cmpsb
sbb
loop
mov
imul
ret
jge
xor
adc
jne
jmp
clc
shlb
mov
cld
sbb
pop
ss
pop
je
mov
push
jb
mov
and
xor
jb
js
and
mov
xor
add
rep
inc
aas
int
mov
push
dec
inc
push
or
mulb
lea
sbb
mov
cmpl
sbbb
bndstx
addl
dec
jg
nop
jl
lds
or
rorl
sbb
pushl
jp
decb
ja
inc
insb
mov
ret
mov
mov
mov
iret
push
cmp
aas
mov
cmpb
je
xchg
pop
pop
pop
push
lar
ja
jmp
roll
sbb
mov
cmp
out
cmpsl
mov
mov
push
add
add
sti
es
or
movsbl
cltd
mov
jle
add
sbb
loopne
aaa
out
loop
ss
ds
pop
in
push
push
adc
cli
data16
mov
mov
cmpb
ja
jb
add
lret
repz
add
call
out
mov
inc
cmp
jb
or
sbb
dec
and
mov
sbb
or
sub
or
fdivs
adc
push
sub
mov
jge
xor
in
mov
push
cmp
push
and
movl
shlb
aas
push
lock
push
adc
jmp
popa
sbb
jge
sub
push
dec
rcrb
or
xchg
mov
fs
incl
adc
int
xchg
or
rorb
push
dec
cmc
and
shrb
aaa
mov
xor
add
adc
adc
mov
rorb
rep
push
sub
into
sbb
outsl
mov
lods
cmp
cmp
dec
test
call
or
inc
insl
lret
mov
movsb
clc
cmp
lods
cmp
repnz
stos
mov
test
mov
jp
xchg
fldcw
lods
mov
inc
or
inc
inc
insb
and
pop
arpl
les
decl
push
mov
inc
or
lods
enter
push
jno
mull
pushf
push
sysret
lahf
and
xor
enter
and
pop
adc
adc
rolb
aaa
and
inc
stos
xchg
push
shlb
arpl
dec
push
sub
xchg
mov
and
lret
xlat
lret
pop
aam
jg
pop
add
addr16
mov
jns
shlb
leave
test
sub
repnz
lods
sbb
adc
cmc
sub
sub
adc
rorb
adc
push
adc
sbb
aam
fs
fstl
adc
rclb
add
push
and
fwait
dec
xchg
sbb
lret
je
adc
pop
jmp
imul
dec
cmp
pop
scas
cmp
jp
mov
icebp
push
sbb
and
lret
lahf
scas
xlat
jo,pt
sub
adc
or
inc
orb
inc
mov
test
ret
fwait
aaa
inc
outsl
mov
add
inc
add
jp
sub
jne
or
jecxz
sti
push
adc
xchg
clc
jne
ljmp
out
push
pop
mov
add
mov
sbbb
push
or
sub
push
ss
push
adc
pop
or
shrl
dec
in
sbb
loopne
inc
lock
cmp
or
ffree
sub
cmp
sbb
call
jmp
lock
sbb
sahf
sub
sbb
daa
sbb
push
adc
loope
jne
xchg
cmp
xor
cld
xor
iret
lods
pop
or
add
push
and
inc
pop
lock
idiv
cmp
enter
cmp
mov
mov
dec
cmp
jl
cmp
inc
aaa
mov
mov
gs
je
cmpsb
mov
dec
pop
cld
shlb
dec
hlt
hlt
mov
clc
outsl
inc
xor
clc
ss
pop
sbb
inc
add
pop
and
sub
sbb
int
scas
test
clc
in
push
or
in
adc
in
sub
mov
add
ja
push
sti
shlb
add
inc
push
ds
mov
enter
fisttpl
pop
ljmp
bound
push
mov
sbbl
insl
sub
test
pop
test
sbb
arpl
in
fwait
cmpsb
add
cmp
mov
in
cwtl
and
xlat
lcall
adc
jno
sub
xor
pop
aas
fdivrl
sbb
lea
xor
hlt
dec
js
and
in
in
adc
sbb
imul
sbbb
pop
aam
inc
in
jle
pop
scas
or
push
enter
ret
ret
or
inc
mov
and
in
rcll
lret
stc
jne
call
pop
add
mov
push
mov
scas
adc
movsb
mov
popa
push
flds
lret
dec
sti
adc
xor
inc
dec
out
add
data16
stc
mov
jmp
push
fdivs
mov
sbb
pusha
push
sbb
mov
add
movsb
fmull
or
add
xchg
rorb
ds
adc
xlat
jne
sub
add
inc
lea
ss
ret
fistpl
sbb
jnp
or
call
jnp
dec
xlat
daa
cmc
orl
ja
jns
lds
adc
insl
or
sbb
pop
arpl
cld
add
std
ds
adc
or
cmp
or
mov
andb
pop
add
lret
add
cmp
bound
jge
insl
xchg
xchg
adcl
push
enter
jne
mov
pusha
adc
mov
xor
push
adc
push
aam
test
fistpll
outsl
xor
sub
or
cmpsl
or
push
sub
push
das
and
push
add
jmp
xchg
and
adc
jmp
or
popa
or
outsl
cmp
dec
sbb
xchg
jb
sub
lea
jo
push
das
push
jge
les
add
jle
fildl
out
adc
or
loopne
cmpsl
add
pop
loop
inc
pop
add
jle
or
push
popw
pop
pushl
pushl
clc
outsl
or
adc
outsl
fnsave
nop
mov
ja
jb
or
add
test
loope
push
or
ret
or
sub
pop
adc
dec
loop
lock
or
dec
add
hlt
push
add
xor
inc
fidivl
je
push
mov
adc
inc
repz
mov
jae
xor
or
or
aas
sbb
lea
push
fcom
sbb
aad
mov
fadds
and
fyl2xp1
sbb
rorl
sbb
je
popa
cmpsl
fimuls
lea
or
add
add
add
nop
roll
xor
out
pop
mov
call
aaa
popf
and
and
mov
push
inc
outsb
push
gs
aaa
pushf
and
push
outsl
sbb
movsl
and
je
adc
in
mov
xchg
mov
jo
or
jle
insl
xchg
xorb
test
add
sub
xorb
push
sbb
sbb
jb
sbb
lahf
or
inc
iret
ja
subb
add
fs
outsl
lea
lock
popf
sbb
adc
dec
outsl
and
sub
sahf
mov
xchg
dec
outsb
daa
or
insb
jns
xor
inc
pop
fcomp
push
inc
add
sub
pop
ss
push
inc
fdivs
je
or
jb
or
jo
into
mov
cmpsl
or
dec
imul
sub
xor
jne
push
nop
xchg
xchg
add
movsb
push
into
movsl
add
lcall
add
push
adc
aaa
mov
add
xor
int3
aaa
or
shr
add
or
adc
fistl
jnp
testb
mov
or
cmp
je
fcom
sarb
and
out
dec
enter
or
or
or
inc
popa
add
daa
adc
das
xchg
icebp
push
jbe
jnp
dec
sub
int3
lds
les
or
in
pop
mov
ret
pop
sub
xchg
xor
imul
or
out
negl
cmp
fildl
pop
pusha
sbb
es
sbbb
jge
pop
adc
xor
mov
or
pop
add
testl
or
out
ja
leave
cmpsl
addb
aam
notl
das
and
pop
testl
popf
movsl
ficompl
fidivrs
addl
cmp
or
or
clc
xchg
mov
inc
or
add
push
or
mov
mov
mov
pop
nop
aaa
pop
or
pop
ja
jge
or
inc
ds
adc
leave
sub
cmp
sub
xchg
xor
pop
cmp
add
inc
and
mov
jge
mov
and
pushf
aaa
inc
subb
ret
mov
fldl
pop
and
ret
andb
push
dec
cmp
pop
push
cmp
xor
popf
push
inc
jecxz
inc
shll
test
loopne
push
cmpl
add
lock
or
add
sub
cmp
test
pushf
aaa
cmp
and
fldl
mov
js
jo
and
sub
cmp
pop
insb
and
xor
and
daa
loopne
add
xchg
daa
mov
and
inc
cs
daa
lods
int3
lock
adc
ret
aaa
xor
push
cmp
mov
pop
cmp
loope
mov
cmovne
outsb
or
mov
push
xor
cmp
or
decl
add
js
cmp
out
lds
push
mov
or
insl
mov
aas
nop
pop
mov
pusha
mov
jg
int3
ret
add
mov
pop
xor
lea
sbb
or
out
xor
arpl
mov
xor
fs
outsb
fcoml
and
or
test
pop
xor
sub
inc
and
pop
repnz
cmp
xor
cs
outsb
push
jb
pop
js
sti
jns
push
push
int
pop
mov
sub
add
sbb
jg
unpcklps
inc
inc
add
xor
popa
jo
jg
in
mov
add
inc
xor
je
inc
fdivrs
push
ds
push
pop
push
inc
ret
add
sbb
adc
rorb
or
mov
adc
push
or
push
and
nop
xor
pop
jmp
mov
cwtl
aas
out
jl
daa
ret
das
addb
jbe
push
out
and
inc
cmpl
inc
mov
addl
and
inc
mov
sub
aas
lds
inc
cmpb
jns
dec
por
and
sbb
mov
cmp
inc
jecxz
add
fidivrs
and
sub
pop
sbb
add
sub
or
jbe
mov
dec
push
shl
imul
pop
cmp
jb
mov
lods
push
imul
imul
scas
aam
and
repnz
sbb
inc
sbb
and
adc
pop
dec
cmp
leave
sbb
insb
inc
cmpsl
loopne
cmp
mov
mov
dec
mov
outsb
hlt
lock
inc
cmc
test
sub
mov
and
add
lods
and
or
add
popa
cli
arpl
stc
mov
pop
add
dec
icebp
nop
push
movsl
inc
loope
push
mov
sti
pop
xor
jo
outsl
mov
push
inc
push
mov
das
clc
nopl
daa
daa
daa
lahf
icebp
es
xchg
xchg
xchg
inc
jb
fxch
leave
leave
enter
mov
leave
stc
xor
inc
daa
add
and
loope
out
mov
dec
add
pop
push
jo
scas
mov
loope
addr16
and
cmp
and
xlat
xor
stos
push
rorb
rolb
jecxz
pushf
bound
adc
sbb
mov
add
rcll
aas
mov
sub
fs
adcl
dec
ret
sbb
rolb
jb
push
xor
fnsave
es
and
ret
mov
add
pop
fildl
dec
mov
in
imul
and
jbe
aaa
or
imul
std
dec
scas
add
push
sub
inc
lock
jo
lock
dec
data16
cltd
pusha
repnz
push
push
mov
or
adc
sub
xchg
mov
mov
test
dec
popa
sub
repnz
sub
add
xchg
and
mov
iret
jno
repnz
cmc
loope
add
sbb
mov
repnz
pop
aam
jns
loopne
data16
pusha
xor
lea
test
xchg
popf
ss
loope
roll
jnp
or
cmc
inc
imul
cmp
jo
xchg
pop
sbb
das
sub
in
ds
fisttpl
and
pop
mov
cmpsl
and
xor
popa
test
add
insl
test
xor
push
xchg
orb
dec
sbb
fs
pop
pop
and
inc
or
mov
sub
sbb
push
dec
xlat
dec
push
daa
rol
fisubrl
push
push
sub
jo
adc
clc
pop
push
and
cwtl
pop
mov
int
les
arpl
or
ret
outsb
sub
adc
aaa
dec
cmp
dec
faddl
cwtl
mov
dec
pop
or
fldl
fcomip
es
sub
sbb
test
add
js
test
in
push
test
fwait
inc
add
bound
cmp
into
push
mov
mov
or
rcl
dec
xor
jne
pop
mov
add
adc
ja
push
cld
jle
add
xchg
push
outsb
insb
push
mov
negb
les
mov
enter
sbb
pop
popa
adc
xchg
mov
cmp
fidivrs
das
jbe
aas
push
arpl
sub
dec
scas
mov
and
dec
jl
loope
loop
xor
mov
mov
dec
xlat
loopne
sarb
cmp
push
stos
pop
add
ja
sbb
jnp
sub
push
popa
or
addl
outsb
jo
cmp
dec
pop
jl
cwtl
push
cmpsb
or
mov
cld
push
enter
div
push
out
mov
xor
dec
sbb
push
lock
in
dec
jb
fs
pop
int3
js
addb
ret
sbb
sbb
imul
cmp
add
jns
add
cs
inc
and
xchg
sub
cmp
stos
dec
add
dec
pop
mov
out
push
add
cmpsl
cmp
dec
addb
xchg
iret
in
add
adc
inc
jno
and
iret
pusha
or
arpl
mov
int3
xchg
push
lahf
stos
add
jns
test
mov
dec
out
scas
stc
scas
ja
push
and
pop
push
jge
decl
xor
dec
sbb
ret
sarb
add
and
dec
sbb
cmp
and
inc
adc
xor
cmp
dec
orb
call
inc
inc
dec
leave
inc
add
ficoml
and
add
loopne
sbb
jecxz
mov
adc
mov
adc
test
fcoml
or
pop
xlat
mov
push
mov
mov
push
push
and
out
push
inc
dec
cmpsl
pusha
jmp
int3
stos
rcrb
rolb
dec
js
add
call
mov
jl
insb
fwait
loopne
imul
xor
cmc
ret
subb
xchg
push
mov
sbb
andps
and
fisttpl
int3
push
pop
or
jae
xor
ja
mov
in
or
inc
push
outsl
lret
or
addb
sbb
sbb
xchg
xchg
xor
push
ja
call
adc
cs
mov
sbb
mov
xchg
jno
xlat
loopne
outsl
or
sbb
or
lock
push
jns
addl
cmpsb
adc
add
xchg
push
test
push
inc
daa
dec
das
gs
and
mov
and
inc
bound
jg
shl
add
cmp
push
lea
inc
and
imul
das
jl
mov
push
or
pushf
js
push
adc
ret
xor
in
cmp
aas
in
cmpsb
testb
push
push
rcrb
cmc
cmp
sbb
cld
dec
fisttpl
xlat
loop
push
push
rcl
pushf
out
cmp
enter
and
adc
and
cli
cmpsb
pop
jecxz
ret
push
sub
cmpb
std
or
push
jo
mov
pop
mov
adc
inc
fisubs
mov
scas
lods
push
enter
xor
push
outsl
jae
jmp
push
xlat
pop
push
cmp
mov
or
sete
mov
pop
push
das
or
test
out
addr16
addl
std
cld
sti
jle
negb
repz
icebp
dec
fdivr
cmp
pusha
or
pop
pop
add
add
and
sbb
mov
je
dec
in
call
mov
lea
popa
add
lea
and
jmp
and
jecxz
ret
adc
cs
dec
push
add
stc
or
pop
ss
push
pop
aad
sbb
and
xor
lods
lds
aad
insl
jne
push
mov
in
push
sub
mov
in
cmpsb
mov
jo
add
imul
mov
mov
jp
sbb
leave
lods
imul
mov
fwait
aam
in
stos
push
pop
fwait
stos
add
sub
das
cmpsb
pop
mov
dec
or
dec
hlt
addr16
mov
jg
add
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
out
adc
movsb
cmp
pop
scas
push
pusha
xor
jae
std
out
fs
outsl
adc
in
pop
mov
and
in
xor
movb
mov
call
adc
add
push
jge
movsb
mov
mov
mov
inc
adc
fs
notb
loope
cmp
pop
inc
daa
inc
das
pop
pop
loopne
push
adc
int3
arpl
inc
jae
mov
icebp
jno
test
ror
adc
outsb
leave
add
cmp
and
pop
clc
add
and
lods
sub
xchg
ja
pop
pop
out
scas
and
stc
aas
pop
jno
adc
fsubrs
stc
mov
sar
into
mov
fnstenv
lret
push
sub
pop
lret
mov
push
or
add
insb
sub
repz
movups
push
jge
dec
push
inc
push
lock
sbb
call
mov
push
pop
addr16
adc
in
shr
js
mov
aaa
xchg
push
fnstcw
adc
adc
or
push
js
mov
pop
mov
xor
cld
cmpsb
sbb
cmpsl
mov
sbb
mov
outsl
rcll
pop
inc
mov
pop
add
sub
jb
rcll
or
push
shrl
sub
adc
bound
adc
inc
iret
inc
dec
cmpsb
ret
jae
outsb
xlat
pusha
push
das
sbb
test
inc
push
dec
out
mov
inc
loope
pop
fsubs
pop
cltd
and
das
xchg
lret
pop
lods
movlps
loope
or
inc
pop
pop
mov
aam
ljmp
xor
unpckhps
pusha
movhps
dec
pop
add
lret
pop
sbb
popa
cmpxchg
sbb
pop
sbb
stos
sbb
jmp
outsb
cmp
push
add
out
psubsb
arpl
and
inc
and
xchg
and
adc
sub
inc
inc
shlb
and
ds
cs
faddl
loop
pop
inc
std
or
scas
inc
enter
pop
jg
sub
or
inc
popa
xchg
xchg
inc
jo
sti
xchg
push
cs
sarl
loope
ljmp
sbb
stc
jno
adc
pop
and
or
cld
pop
je
mov
mov
les
dec
mov
sbb
or
or
aaa
add
push
jns
sbb
jne
mov
or
adc
add
push
addb
add
subl
xor
cmp
popf
xor
rolb
cmp
rcrl
xor
fwait
imul
arpl
lods
mov
xchg
add
roll
mov
add
pusha
lret
pop
dec
or
stc
xor
sub
shrl
fs
dec
xor
mov
shr
addl
adc
mov
or
push
push
jb
ljmp
fadds
dec
sbb
nop
dec
sbb
jmp
pushf
or
mov
mov
xchg
or
mov
dec
sbb
mov
add
or
sub
popa
repz
ja
dec
stos
pop
cmp
mov
push
inc
inc
js
add
cmp
jae
fdivrl
and
jmp
dec
jb
bound
inc
inc
lret
cmp
inc
inc
addr16
mov
push
lods
sub
mov
xchg
xor
sub
xor
les
movsb
inc
sbb
ret
popa
jg
mov
les
xchg
cmpsl
or
inc
cltd
iret
mov
and
inc
or
inc
dec
pop
lock
adc
dec
in
jne
sub
lods
inc
out
xor
cs
hlt
adc
and
cmp
or
mov
sub
daa
lea
sub
das
push
call
fwait
push
cmp
dec
pusha
gs
push
or
movsl
test
lock
insb
lds
pop
pop
in
xor
and
sbb
mov
insl
lahf
dec
dec
sub
or
dec
aaa
les
fcoml
and
fistps
dec
adc
loop
and
adc
and
push
pop
mov
sbb
sbb
faddp
mov
les
mov
add
lea
decl
dec
mov
cmpl
jl
pop
fcmovnu
clc
test
mov
and
and
test
or
jb
jecxz
inc
les
pusha
sbb
sbb
and
fcompl
sbb
and
fidivrs
cmpb
enterw
fnstcw
add
push
leave
lds
mov
lods
nop
or
mov
xor
cmpsl
test
dec
fldcw
hlt
cmp
and
add
gs
mov
xor
mov
jbe
jecxz
outsb
add
cmp
sub
and
jae
lds
stc
sbb
imul
rorl
push
adc
sub
pushf
inc
das
jg
adc
test
add
push
sbb
repnz
nopl
scas
popa
push
fs
rorl
sub
adc
sbb
push
or
pusha
lea
imul
icebp
enter
jne
ds
mov
loop
pop
aaa
xchg
mov
adc
xchg
data16
add
xchg
and
sahf
std
das
xor
mov
dec
std
pop
int
dec
dec
repnz
mov
sub
add
dec
xchg
xor
add
out
stos
add
into
adc
inc
mov
jecxz
inc
mov
mov
push
mov
sub
and
aad
jmp
mov
and
mov
cmp
jbe
pop
cmp
xor
mov
pop
lea
push
arpl
mov
test
adc
sub
mov
fs
test
dec
addb
repz
addb
mov
ja
fidivl
or
xchg
sbb
and
and
fiadds
push
orb
inc
addl
dec
lods
nop
cwtl
enter
pusha
add
jb
mov
cmp
shrb
dec
ficompl
pop
push
mov
and
pop
and
ja
push
insb
and
lret
hlt
mov
orl
outsb
cmc
loop
push
mov
dec
outsl
and
pop
xchg
cwtl
psrad
jo
xchg
daa
daa
daa
stos
ljmp
xchg
clc
dec
jb
jp
push
jecxz
push
lret
inc
neg
dec
xlat
add
repz
mov
push
inc
mov
fmuls
dec
leave
inc
lret
xchg
cs
inc
out
mov
loop
dec
sub
imul
stos
loope
inc
lcall
out
mov
sub
rcrb
xchg
add
dec
fiaddl
push
or
imull
test
test
clc
adc
xchg
rcl
js
inc
add
movsl
cs
mov
mov
jnp
push
sub
aad
aas
in
sbb
daa
mov
mov
js
xchg
jno
add
sub
ss
jnp
adc
cmpl
or
and
add
push
mov
add
push
mov
inc
mov
cmpsl
add
mov
adc
add
rcrb
cvttps2pi
jge
xor
fildll
int
push
mov
mov
cmp
pop
and
fisubrs
jne
lcall
lods
add
mov
adc
add
nop/reserved
data16
adc
or
ja
dec
testl
cmp
orb
outsl
push
jb
pop
nop
cmp
dec
jmp
or
inc
xchg
fldt
jbe
add
das
adc
outsb
mov
inc
insl
out
pop
xor
fsubl
inc
pop
add
push
adc
clc
data16
mov
push
popf
adc
adc
jecxz
jae
xor
stos
ja
add
xchg
and
sbb
xor
xor
in
add
adc
sub
push
out
out
cmp
sub
or
mov
fldl
cmp
in
push
sbb
add
cmp
cmp
call
pop
fimull
imull
adc
adc
cmp
shlb
add
xchg
lahf
testl
subb
cmp
xchg
punpckhwd
jbe
bsr
dec
cli
xlat
or
add
shlb
adc
mov
iret
xlat
add
fldt
lea
cmp
xor
push
repnz
popf
movsb
mov
ret
les
adc
test
xchg
ja
daa
stos
xchg
mov
sub
ljmp
adc
adc
scas
les
mov
dec
out
nop
sub
mov
stos
in
pop
add
out
add
popa
mov
add
syscall
push
mulb
mov
jne
and
loope
inc
and
and
mov
js
inc
test
add
inc
ja
outsb
jne
int
pusha
push
pop
das
in
in
or
jns
sub
cltd
mov
fstps
nop
pop
outsl
mulb
adc
sbb
ja
xchg
sub
inc
cmpsl
jbe
and
xchg
adc
fs
loopne
ss
jle
das
mov
push
jl
push
dec
adcb
mov
repnz
jnp
xchg
pop
pop
out
loopne
dec
adc
and
sbb
mov
ja
dec
sub
loope
mov
lods
sbbb
les
pop
loope
or
loopne
cwtl
sub
mov
inc
nop
pop
pop
scas
pop
enter
pop
out
jl
idivb
push
insb
das
js
sbb
or
mov
pop
mov
rolb
and
xorb
clc
sub
sub
xchg
in
cld
add
jl
xor
cwtl
inc
out
pop
push
sbb
enter
jo
in
sub
and
dec
enter
mov
push
ret
fldt
es
and
adc
sub
int3
shlb
sbb
sbb
push
or
sahf
pushf
fsubl
pcmpeqw
inc
push
lea
mov
inc
dec
fstl
prefetch
or
sub
push
lds
jno
adc
mov
insl
mov
mov
mov
jb
add
add
or
cmp
cltd
sub
dec
pop
shll
adc
loopne
dec
ss
push
lds
daa
cwtl
cs
push
ret
jmp
sub
stc
lods
shrb
rclb
dec
pop
adc
mov
sbb
add
pop
pop
ror
sub
jmp
das
repnz
insl
push
or
xchg
dec
ret
dec
dec
decl
mov
cmpsb
add
push
jmp
adc
jnp
cmpsb
es
das
jg
sbb
pop
dec
les
das
inc
out
add
xor
xchg
dec
cmpsl
xorb
pop
cmp
pop
dec
inc
insb
outsl
bound
xor
mov
sub
dec
aas
loope
stc
outsb
subb
stos
test
mov
pop
shrb
lds
adc
dec
popa
leave
inc
push
or
orl
xor
adc
mov
cltd
add
inc
stos
mov
mov
jno
sahf
pusha
orb
xchg
scas
mov
xlat
pop
jae
lods
es
xor
cltd
cmpsl
je
andb
sub
lret
or
ret
daa
in
sbbl
dec
fs
das
mov
or
in
sbb
in
push
in
sbb
in
push
and
pusha
cltd
pop
inc
push
add
jle
inc
icebp
adc
loopne
ret
push
cmpsl
sahf
out
sahf
mov
aaa
inc
push
popa
jo
out
outsl
jge
cltd
pop
adc
loopne
and
sbb
test
push
repnz
ret
and
mov
es
adc
jo
pop
test
daa
jl
loope
xchg
cmpsl
inc
push
xor
xor
out
pushf
and
stos
ds
rep
mov
cmp
call
jo
out
test
adc
or
lea
dec
xor
jl
jbe
or
fwait
push
xchg
syscall
add
shrb
mov
xchg
in
clc
repnz
fisttpll
add
aam
dec
sbb
xchg
adc
jns
mov
shrl
xor
dec
adc
dec
xchg
gs
sbbl
inc
or
loopne
xor
or
jo
popl
arpl
into
push
push
xchg
pop
push
pop
jo
jnp
push
dec
rclb
and
xor
jge
mov
call
insb
imul
mov
add
adc
ja
fadd
fstp
and
push
inc
hlt
xor
fldl
add
add
jge
bound
push
pop
push
outsl
jae
js
daa
mov
jae
mov
fdivs
ja
push
and
js
jne
mov
stc
push
or
call
loopne
clc
add
jl
jecxz
add
dec
and
adc
test
jnp
add
jge
mov
pop
pop
or
push
addr16
and
sbb
or
test
jecxz
pop
xchg
aad
jo
or
xchg
fstps
add
jmp
add
stos
dec
roll
test
vmovsd
jae
push
addr16
pop
jmp
js
insb
pop
in
push
adc
sarl
cmpsb
add
push
add
adc
mov
dec
push
or
or
fwait
and
incl
pop
pusha
and
sub
fmuls
push
fsub
rorb
add
enter
add
pop
and
cmp
jmp
and
push
das
mov
movsl
ja
push
or
lock
or
add
inc
inc
mov
es
sbb
aas
loopne
mov
fmull
mov
add
add
sub
pop
loope
aas
js
push
and
adc
mov
inc
dec
outsb
mov
filds
orl
insl
add
or
add
dec
add
or
aas
adc
or
jnp
xchg
sbbl
inc
mov
pop
add
rorb
mov
cmpps
mov
mov
jbe
mov
outsb
inc
add
pop
or
std
push
dec
push
cmp
or
xor
jecxz
adc
or
daa
loopne
iret
aaa
mov
mov
dec
mov
dec
mov
xchg
push
lods
or
insb
or
fmull
and
stos
or
mov
aaa
xorb
push
iret
arpl
mov
nop
adc
sub
add
pop
xlat
iret
nop
mov
pop
sbb
test
sbb
add
xor
cmp
ficoml
jge
or
inc
push
test
or
jns
dec
repnz
or
adcb
mov
xor
adc
inc
xchg
sbb
sub
fsubs
outsb
and
dec
mov
lea
pushf
xchg
pop
sub
and
xchg
js
ret
movl
and
fwait
dec
xchg
mov
cmc
test
nop
xchg
loopne
or
stos
jno
push
cmpsb
sub
mov
lcall
xchg
nop
pop
add
and
mov
and
inc
fcoms
adc
dec
fs
and
add
and
outsl
je
cmc
and
sbb
dec
and
sbb
movsb
and
rcrb
add
adc
mov
sbb
add
fcomp
ret
sbb
cmovbe
adc
icebp
push
xchg
push
gs
push
xor
cmpsl
dec
push
cwtl
nop
and
addb
pop
jmp
adc
push
xlat
sahf
sti
mov
jb
xor
lods
pop
sbb
mov
jmp
dec
xor
pusha
and
shll
adc
js
push
inc
cs
out
add
je
je
push
jge
sub
and
push
movsl
sub
or
pop
and
xor
scas
dec
or
mov
or
mov
lea
push
xchg
mov
or
aad
cwtl
test
xchg
icebp
mov
dec
fiadds
adc
loope,pn
insb
adc
push
icebp
loopne
xchg
jo
std
nop
mov
or
push
add
inc
js
pop
mov
cmp
and
imul
lods
or
mov
and
cmp
push
adc
test
lds
imul
addl
iret
nop
push
push
test
leave
add
or
or
pusha
add
mov
push
add
add
or
and
inc
movsl
xchg
pop
pop
rclb
push
xchg
test
add
sub
xchg
je
inc
add
add
clc
push
cmp
rcll
inc
jno
or
sbb
push
adc
lods
or
push
inc
mov
sbb
bound
dec
sbb
add
sub
test
inc
nop
push
xor
inc
arpl
subl
nop
fcmovnb
xor
inc
lahf
test
push
cwtl
pop
jno
inc
cltd
ja
repz
cld
xchg
sbb
lea
or
inc
scas
loop
addl
loopne
or
push
fisubl
test
inc
mov
push
insl
inc
xor
aas
popa
adcl
or
mov
inc
or
and
enter
xchg
iret
mov
or
adc
sbb
inc
add
adc
xorb
or
and
jecxz
and
dec
sbb
adc
data16
inc
mov
das
adc
push
addl
push
loop
cwtl
cmp
fdivl
or
filds
lret
adc
xchg
dec
cmp
pop
dec
mov
mov
ds
dec
cmp
test
ds
cmpb
pusha
lock
call
cmpsl
out
pop
movsl
pop
das
xor
cld
push
or
xorl
xchg
fildl
insl
xor
and
shl
shlb
idivl
xor
inc
adc
mov
cmp
adc
or
int3
push
in
xor
xchg
push
add
mov
cmp
xchg
pusha
or
xlat
and
clc
push
cmpsl
stc
inc
lods
xchg
jo
jne
jns
outsl
jl
xchg
js
and
push
stos
leave
mov
push
push
and
xchg
adc
and
adcb
sbb
inc
fwait
add
sub
fwait
cmc
xchg
fucomi
in
pushf
xchg
pushf
das
mov
xadd
popf
and
ldmxcsr
add
xchg
outsl
scas
or
xor
pop
mov
in
mov
testb
mov
pop
dec
pmulhuw
leave
leave
jne
fcoml
fs
xchg
lods
push
or
daa
jno
pop
dec
pop
das
or
ror
mov
mov
lock
int3
dec
dec
test
movsl
push
adcl
jp
push
xor
inc
fcoml
push
mov
push
subb
out
push
jmp
test
addr16
pop
or
xchg
push
or
icebp
mov
xlat
pop
sub
pop
or
pop
cmp
les
mov
insl
adc
sub
ljmp
push
es
and
stc
xor
test
push
dec
pop
dec
sub
daa
nop
dec
sub
nop
inc
or
mov
inc
push
cmp
sahf
cwtl
rclb
cmpsl
or
lods
adc
add
sbb
les
inc
ret
pop
sbb
subl
pop
pop
add
arpl
sbbl
add
push
jmp
xchg
sub
loopne
gs
adc
add
mov
call
je
adc
js
bound
xchg
in
mov
mov
dec
dec
out
pop
jno
mov
push
xor
mov
orb
gs
sbb
push
push
cwtl
cld
les
dec
lods
jnp
lods
adc
xchg
dec
mov
ret
or
fmuls
or
push
push
cltd
add
mov
ljmp
ret
or
sbb
mov
aam
push
enter
sbb
or
aas
adc
adc
cmp
adcl
xor
pop
mov
push
das
adc
sbb
add
dec
loope
in
lods
push
jne
cmp
pop
mov
pop
sbb
jno
pop
push
push
or
mov
pop
lahf
sub
sub
add
push
inc
sub
js
ret
pusha
testl
push
jae
or
push
imul
test
cmp
sahf
push
pop
xchg
pop
inc
pop
cmpsl
sahf
ret
cmp
push
mov
mov
inc
inc
inc
xlat
sub
inc
inc
jnp
aam
movsl
dec
cmpsl
mov
sub
sub
aas
sub
xchg
loopne
push
das
or
fcompl
mov
test
xchg
addr16
pop
xor
int
mov
or
push
add
test
adc
jnp
push
mov
data16
ret
mov
lret
in
sbb
sahf
xor
mov
jo
lods
and
in
sbb
js
test
and
daa
adc
int
cs
adc
or
mov
rolb
mov
imul
inc
or
xor
pop
cltd
loopne,pn
push
pop
xchg
filds
insl
mov
cltd
int
cmp
pop
repz
movsl
push
or
cmpsb
xchg
pusha
aad
fstp
or
imul
in
packsswb
sub
xor
aas
push
out
mov
wrmsr
push
mov
inc
dec
jp
test
clc
push
pop
setns
addr16
and
out
push
movsb
push
sub
loopne
out
xchg
inc
cs
adc
jge
jg
and
mov
addr16
or
arpl
cmp
and
movsl
pop
pand
mov
sti
adc
jno
push
sub
or
and
stos
call
test
shl
jle
cltd
adc
mov
mov
cmp
stos
outsl
stos
sti
dec
dec
inc
sahf
xor
outsb
test
daa
daa
and
lods
push
nop
lret
xchg
xchg
daa
daa
stc
and
xchg
xchg
xchg
lret
aas
mov
pop
mov
push
push
call
notl
and
mull
cmp
imul
shrb
sbb
sub
ss
ret
sub
sub
jbe
or
sti
adc
test
and
inc
dec
or
popl
mov
sbb
add
imul
pop
jp
jnp
pushf
rorb
jae
push
xchg
test
adc
js
adc
shll
xor
cmp
aam
or
es
andb
or
imul
and
push
lock
aas
or
outsl
push
or
mov
mov
lods
outsl
outsb
adcl
adc
cmp
mov
adc
jo
bound
adc
jno
ja
adc
xchg
jbe
adc
subl
xor
ret
testb
adc
push
nop
adc
jo
cmp
js
inc
pushf
lods
adcb
and
add
mov
jns
or
sti
fbstp
iret
push
adcl
inc
daa
cmp
movl
mov
cmp
mov
ret
and
xor
in
adc
cmp
pop
sub
nop
mov
jae
mov
and
mov
or
insb
test
orb
pop
enter
pop
add
add
dec
mov
and
inc
inc
sahf
call
rolb
jno
xor
mov
dec
adc
xchg
push
aaa
scas
outsb
sbb
xor
and
and
ljmp
and
ja
insl
loopne
pop
sub
daa
jne
add
pop
inc
cmp
ret
call
lock
mov
dec
test
mov
lea
sbbl
subl
push
sbb
and
frstor
leave
mov
dec
adc
cmp
test
jnp
pop
adc
dec
ss
test
adc
adc
mov
adc
mov
xchg
xor
sbb
sbb
push
or
pop
mov
sbb
repnz
fs
mov
aad
sbb
nop
pop
das
and
mov
add
inc
or
sti
cmp
adc
inc
fldcw
adc
sub
mov
pop
sti
push
and
or
mov
div
add
icebp
push
inc
movups
add
xchg
rcrb
xor
mov
and
add
push
and
and
mov
rol
daa
nop
jo
icebp
push
jne
jo
rep
push
adc
push
sbb
jbe
insl
idivb
mov
lock
cmpsb
push
gs
or
std
je
subb
pusha
pop
or
in
jnp
jnp
test
mov
jo
lds
fldl
xor
cmpsb
popa
cmp
xchg
es
cmp
inc
lods
fadds
lret
aaa
pop
pop
fdivp
adc
mov
mov
mov
repnz
stc
stc
call
pop
mov
iret
jae
xor
nop
xchg
xchg
xchg
daa
adc
leave
enter
mov
ror
roll
mov
add
inc
mov
jns
cltd
add
vmwrite
arpl
les
pop
ljmp
sub
add
popa
mov
pop
sbb
sbb
adc
lret
addr16
inc
test
insl
jno
pop
mov
sub
inc
or
push
fs
pop
mov
mov
inc
inc
jecxz
adc
das
lea
sub
sbb
dec
pusha
stc
ret
bound
scas
jae
push
cmp
push
aas
xor
test
xchg
outsl
and
cmp
xchg
cmp
add
jo
or
xchg
add
adcl
add
xchg
inc
adc
dec
or
add
adc
in
insb
test
scas
push
mov
or
addr16
or
filds
rcrl
jo
mov
xor
push
jo
dec
xor
leave
rolb
dec
je
dec
xchg
xorl
xlat
cs
dec
push
jnp
xchg
or
xor
xor
dec
outsl
xchg
push
adc
and
addl
push
add
in
xlat
push
stc
and
addb
rorb
jb
jno
cmp
test
inc
test
mov
es
dec
sbb
cmpsl
lret
repz
nop
xchg
inc
or
jmpw
iret
mov
sbb
adc
cmp
push
shl
sbb
adc
idivl
adcb
mov
and
lcall
adc
sti
mov
out
inc
aad
addr16
lea
shlb
out
jns
mov
pop
add
inc
xchg
add
loopne
cwtl
add
add
mov
imulb
movsl
add
push
lcall
mov
movsl
xor
pusha
mov
lahf
push
mov
ret
or
pop
xor
outsl
jo
push
scas
jnp
adc
fisttps
ja
faddp
iret
repz
cs
test
mov
or
movsl
cmpb
adc
iret
mov
out
or
ret
or
adc
bound
adc
nop
in
add
mov
add
divl
inc
mov
ja
enter
dec
mov
pop
mov
pop
and
mov
push
mov
shrb
sahf
inc
jbe
mov
lahf
xor
in
roll
jbe
imul
jns
add
jecxz
mov
dec
loop
arpl
mov
cmp
mov
lock
daa
or
nop
das
inc
cmp
mov
stos
mov
rorb
mov
jg
xchg
dec
arpl
mov
fnsetpm(287
inc
mov
adc
repz
fisubrl
add
jg
mov
mov
repz
stos
xchg
add
mov
xchg
pop
inc
int
dec
addb
mov
inc
pop
scas
enter
fnsave
aam
pop
pushf
jl
int
cmp
rolb
shll
mov
add
inc
scas
xchg
jl
jo
push
lock
pop
addr16
popf
adc
push
jbe
jl
mov
rclb
xor
mov
xlat
sbb
and
add
push
add
push
popa
rolb
loope
xor
lahf
jae
mov
xchg
xor
imul
pop
add
cmp
enter
sbb
out
jo
jae
pop
and
and
add
mov
and
add
inc
data16
hlt
adc
inc
sub
add
outsb
in
in
cld
orl
cmp
loope
sets
aad
pushf
int3
ficomps
adc
andnps
sahf
stc
ret
pop
repnz
les
jmp
lcall
aas
int
adc
push
sbb
pop
and
mov
scas
out
xchg
filds
das
sub
jmp
add
pop
imul
mov
dec
idiv
idiv
cmc
ljmp
and
mov
push
sbb
jns
out
fs
inc
dec
mov
sahf
inc
push
test
push
cmp
or
cmp
cmp
pop
js
sbb
shr
sbb
rcrb
dec
insl
dec
add
and
jp
pop
insb
out
popa
hlt
lcall
popa
test
jo
inc
add
cmp
or
or
rolb
ret
pop
or
push
or
mulps
ja
fildl
sub
mov
push
sbb
pop
and
add
cmp
adc
push
adc
or
and
xchg
mov
fadds
gs
lods
nop
push
out
xchg
loopne
xor
adc
rcl
inc
ret
push
arpl
and
push
icebp
push
test
push
xor
pop
ds
push
ficomps
pop
rol
pop
push
movsl
or
nop
push
orl
test
jb
bound
ret
insl
add
mov
and
andb
cli
icebp
cmpsb
and
cmp
or
xor
loopne
cmp
sub
xor
dec
scas
lods
sub
adc
xchg
or
bound
daa
mov
lahf
scas
test
push
addb
out
or
ret
outsl
mov
adc
add
movsb
sbb
add
push
or
ret
jnp
or
imul
sbb
cltd
ret
enter
mov
movb
mov
shrl
loope
leave
pop
int3
mov
add
mov
faddl
push
addb
lods
push
psllw
daa
mov
xor
hlt
mov
ret
les
xor
pop
jge
daa
or
scas
or
nop
mov
xor
es
leave
push
shlb
push
pop
mov
aas
out
pushf
movsb
push
push
shlb
movsl
in
fidivrs
add
push
push
call
adc
mov
add
rolb
push
adc
pop
dec
xor
orb
mov
sysret
bound
imul
inc
imul
and
or
leave
movsl
test
jle
push
popa
jo
orb
xchg
call
mov
mov
cli
xor
pop
push
aaa
jae
bound
pop
pop
pop
test
fcomip
xor
cmp
add
scas
or
inc
dec
repz
or
int3
dec
sti
push
jbe
add
cmpsb
sbb
push
nop
fsubl
fwait
icebp
cmp
pop
adc
mov
jnp
dec
movsl
mov
push
and
mov
cmp
clc
inc
xchg
cwtl
es
bts
adc
sub
outsb
sub
push
iret
sub
pop
dec
cmp
clc
lock
dec
out
lock
icebp
lret
daa
int3
dec
int3
mov
psubd
movups
int
lock
int
pop
cmp
rclb
sub
mov
push
orl
add
mov
mov
imul
add
push
lock
loope
mov
cmp
ja
ja
pop
add
cmp
in
pop
jns
dec
ficoml
lcall
dec
test
mov
adcb
jae
out
jle
adc
adc
jg
pop
sbb
inc
xor
cmp
xchg
pop
loope
xorb
lahf
stc
mov
into
cmp
add
lcall
dec
leave
xlat
shll
std
int
cmp
out
jmp
xchg
dec
or
push
jne
popa
jo
xorb
push
mov
sbb
movsl
cmp
jmp
icebp
rclb
cmp
lods
adc
ja
popa
test
add
arpl
dec
outsl
imul
ss
mov
push
add
lahf
inc
or
push
push
arpl
adc
fmuls
loope
int3
and
adc
int3
dec
add
dec
xlat
push
push
pop
and
jge
rclb
or
cli
add
push
fwait
lods
enter
sbb
sub
cvtps2pd
dec
dec
popf
sub
pushl
add
add
push
shlb
add
pop
sbb
inc
daa
shrb
shrl
addb
fisubl
dec
popf
sub
or
sub
or
mov
cmp
movsl
or
cmp
and
shl
sub
sar
das
loop
shlb
push
inc
xchg
daa
daa
mov
rcl
addps
daa
add
push
lock
into
or
add
mov
xor
cmpsb
jns
aam
jae
mov
push
mov
dec
pop
add
negl
or
mov
sub
inc
xor
add
decl
inc
add
mov
mov
add
xor
outsb
xor
aam
jp
aaa
popa
inc
sub
lock
mov
pusha
cmp
or
enter
iret
push
push
mov
sbb
jae
out
addr16
jo
sti
lahf
js
inc
or
lock
jb
add
pop
inc
add
lds
add
push
push
pop
sub
das
incl
icebp
adc
lock
sbbb
mov
aam
lock
or
fwait
ret
jg
aad
addr16
cmp
mov
outsb
adc
push
test
cmp
aad
insb
push
aad
andps
leave
nop
lret
sbb
cmp
jp
add
jb
movsb
or
jae
aaa
test
in
stos
imul
addr16
dec
out
sbb
popf
add
jbe
jge
mov
add
test
mov
xor
divl
sbb
outsl
cmp
xchg
add
and
enter
add
or
and
jg
sbb
jnp
inc
jno
and
sbb
mov
leave
sbbl
rol
stos
imul
fs
cs
loopne
add
jae
sub
roll
lret
add
adcb
mov
orb
sub
jl
mov
xor
pop
loope
stos
add
test
test
pop
adc
mov
or
push
orb
push
bound
in
pushf
dec
xchg
mov
cmp
jo
dec
into
cmp
inc
loope
and
loopne
pop
and
dec
push
mov
lahf
outsl
je
test
cs
xchg
icebp
addr16
and
mov
ror
lds
cmp
pusha
lea
add
jl
pop
test
lcall
loopne
notb
inc
jnp
inc
inc
sub
jne
push
xchg
into
fldenv
xor
fcmovnu
jmp
sbb
adc
add
xchg
jno
pop
fbstp
stc
push
xchg
jo
movsl
inc
daa
mov
gs
pop
and
pop
movups
and
mov
ret
popl
inc
add
add
loopne
jmp
lea
xchg
or
or
rcrb
out
push
adc
push
nop
jbe
sub
sbb
and
or
add
rcrl
add
sub
inc
or
xlat
sub
jo
sarl
into
lock
clc
push
into
decl
mov
pusha
rcrb
mov
pop
ret
int
mov
pop
or
dec
icebp
inc
push
inc
cwtl
sbb
push
sarb
dec
pusha
test
dec
adc
cmp
add
xor
mov
mov
fsubl
leave
int3
je
dec
adc
loopne
cmp
add
inc
jl
dec
das
or
adc
pop
sbb
add
xchg
mov
cmp
adc
mov
sub
mov
cli
or
or
dec
loop
push
iret
add
inc
setge
push
sub
or
hlt
cmp
andb
xchg
jo
test
lods
sub
addps
cmp
jo
and
push
jnp
ss
mov
add
sbb
xchg
cmpsb
xchg
adcl
inc
daa
sbb
out
fcmovne
loop
sbb
cwtl
jle
in
cmp
shll
adc
adc
pop
sub
mov
outsl
xlat
scas
or
dec
sti
mov
dec
mov
leave
inc
xor
push
or
inc
xorl
jmp
scas
jle
xlat
dec
in
mov
pop
imul
mov
cmp
cmp
sbb
push
js
or
inc
sub
aad
pop
pop
or
pop
or
add
inc
mov
stos
mov
sbb
loop
mov
push
cmpsl
cwtl
addb
adc
cmp
rcrb
cmp
stos
sbb
fcmovbe
and
inc
adc
sbb
or
pop
sub
js
movsl
dec
jbe
inc
addl
lea
and
lock
add
inc
add
and
inc
vpunpckldq
lds
call
mov
mov
and
xchg
lods
xor
xorb
jmp
jecxz
js
enter
aad
or
out
add
xchg
xchg
jecxz
and
push
out
fcomip
inc
pop
xchg
ljmp
mov
inc
xorb
pop
mov
sub
jmp
xchg
pop
call
fwait
mov
cmc
out
mov
in
fnsave
push
sbb
pop
repz
je
and
ret
sub
mov
pop
sbb
adcl
mov
mov
cltd
cmp
mov
rcl
loopne
jg
or
inc
arpl
mov
imul
mov
and
or
insb
jne
push
dec
xor
movsb
lret
les
decb
dec
jge
mov
call
iret
fwait
push
xorl
jnp
push
out
push
sub
and
out
int
pusha
dec
test
insl
cmp
and
jge
cmp
push
roll
add
imul
mov
mov
cmpl
call
ret
dec
fistpll
lret
popf
aas
sbb
inc
mov
push
gs
adc
ja
outsb
adc
lds
xchg
ss
stc
xchg
rol
out
mov
or
jne
adc
add
xor
mov
jbe
test
cld
cmp
lret
shrb
cmp
push
nop
mov
aam
and
sbb
dec
xchg
in
jno
dec
arpl
in
mov
mov
ds
test
clc
jae
adc
inc
pop
flds
pop
mov
or
cld
dec
arpl
hlt
out
jecxz
nop
jmp
fldl
push
sysret
lock
sub
push
dec
mov
adcb
into
mov
cmpb
clc
adc
or
mov
add
pop
push
orb
das
inc
in
mov
lods
pop
mov
add
dec
hlt
hlt
cmp
lea
int
mov
int3
movsl
clc
clc
pop
iret
xor
cmc
mov
mov
xor
mov
mov
xchg
popa
inc
mov
aam
cld
push
adc
sbb
loopne
repnz
mov
jo
pop
shll
in
sbb
sbb
int3
cmp
lods
xor
mov
cmp
xchg
rorl
ja
push
pop
adc
or
push
pop
cmpxchg
mov
js
add
leave
inc
scas
jbe
out
sub
fcoms
dec
push
adc
mov
mov
push
shlb
cmp
fistps
fwait
add
cld
jecxz
int3
scas
add
repnz
insb
out
lods
mov
mov
ret
out
sbb
inc
mov
dec
mov
sub
and
enter
sbb
repz
subl
iret
or
adcl
and
loopne
or
cmp
shrl
fwait
hlt
popa
xor
push
fsubrs
das
sbb
add
fwait
or
testl
or
cmc
add
sub
mov
pop
add
push
imul
pop
lods
ja
dec
add
imul
or
adc
cmp
jg
xchg
push
test
pusha
and
adc
call
xchg
std
cld
cmp
sbb
add
sub
pop
sar
das
push
jne
cmp
jmp
or
inc
daa
jl
and
lods
mov
fdivrs
ljmp
shrb
cmpsb
leave
adc
xchg
or
out
jl
mov
add
jl
inc
lea
cwtl
mov
pop
sarb
je
cmp
cld
mov
jmp
pusha
rcrb
push
loope
adc
rolb
push
inc
xor
adc
add
jmp
jge
push
mov
jp
cwtl
dec
sbb
cmp
loopne
or
mov
adc
or
mov
push
ja
xor
cmp
loop
xlat
mov
popa
daa
test
pop
mov
adc
push
rcrb
jmp
adc
mov
mov
mov
aaa
lods
xlat
sub
add
sbb
sub
ficoml
sbb
cs
ss
or
mov
repnz
notl
xor
jae
pop
mov
jo
fisubs
jmp
cmp
pop
fadds
lock
pushf
xchg
sbb
sahf
push
xor
xchg
add
aaa
fadds
dec
nop
mov
jl
aas
or
mov
shl
adc
jo
adc
mov
lret
adcb
xor
outsl
loope
in
and
mov
push
or
inc
aam
adc
test
arpl
scas
and
xchg
in
xor
cmp
test
fidivrl
jo
rorb
jle
pop
shl
mov
pusha
pop
lods
fstl
cld
jp
or
mov
add
lea
pop
movsl
clc
or
rcrb
and
push
arpl
and
pop
enter
in
sbb
and
add
mov
push
idivb
add
imul
rclb
cli
out
test
mov
test
mov
das
faddl
jae
sub
mov
and
xchg
push
cmp
shlb
adc
push
or
fld1
or
pop
sbb
adc
sub
inc
pop
and
out
xor
add
or
icebp
loope
int3
mov
mov
and
sarl
pop
das
sarl
cmp
sbb
xor
iret
stos
fnsave
dec
hlt
or
test
bound
adc
and
lahf
push
cmp
popf
popa
sbb
push
add
test
add
push
lock
shufps
pop
cs
or
pusha
aaa
enter
add
mov
push
cmp
pop
je
shlb
rol
push
adcb
cmp
incl
pop
add
stos
sbb
stos
sub
ret
jge
nop
aas
loope
jecxz
adc
add
xchg
or
jl
mov
imul
add
pusha
ret
xchg
sub
enter
mov
mov
adc
or
push
lock
add
inc
cmp
mov
mov
je
and
add
enter
pop
aaa
sub
pop
mov
sbb
loopne
pop
pop
jb
cld
popa
adc
lods
lock
fldt
xor
popf
mov
xchg
in
cmpsl
mov
push
xchg
add
ret
push
and
jmp
mov
test
xchg
adcb
or
test
ficompl
add
roll
stc
add
adc
mov
sbb
add
xchg
cmp
ror
adcb
scas
lods
outsb
jo
rol
cld
xchg
adc
je
ret
leave
jb
leave
ljmp
pop
imull
adc
jb
shr
sbb
inc
xor
ret
xlat
or
je
bound
mov
cmc
dec
xchg
pop
mov
aas
mov
or
mov
add
jo
movsb
jge
jmp
push
fcom
jle
ds
aas
mov
ret
jmp
inc
stos
gs
std
loopne
loop
cmp
je
mov
lock
loopne
xchg
call
and
and
sub
and
lods
mov
out
lret
sub
cmp
je
sub
add
adc
fs
pushf
or
xchg
sbb
and
or
push
lret
repz
ret
shlb
or
es
movzbl
shl
lock
add
lods
pop
or
scas
pop
movsl
or
cmpl
icebp
sbb
mov
cs
dec
and
enter
repnz
and
dec
idivl
jmp
sbb
insb
test
cs
pop
push
ret
inc
adc
cwtl
sub
ja
xor
pop
add
call
daa
jl
fwait
pop
imul
fsts
andl
or
rolb
pop
pusha
add
cltd
xor
pop
inc
pop
imul
sti
or
jle
popaw
mov
adc
jle
mov
outsl
adc
popf
push
xchg
add
xchg
mov
dec
insb
sub
jg
dec
pop
lock
imul
add
xchg
call
shl
xchg
std
pusha
push
fidivl
mov
test
cmovge
sub
mov
les
inc
jp
cmc
pop
push
sbb
add
pop
or
add
nop
add
add
or
cwtl
cwtl
jo
inc
cs
test
dec
mov
lea
push
je
mov
mov
decb
fdivrs
cltd
cwtl
add
inc
dec
cmp
adc
test
adc
popa
mov
pop
hlt
jl
jno
incl
aad
add
arpl
jmp
adc
cmpsl
push
add
jle
push
orb
xchg
mov
cmpsl
add
mov
outsb
clc
push
push
fadd
cmpsl
aaa
in
jmp
cwtl
mov
notl
mov
mov
stc
mov
negb
idivl
rcrl
mov
adcl
jmp
loopne
js
in
pop
sub
les
xor
push
jne
dec
mov
add
pop
sbb
add
push
mov
inc
jne
sub
fsubr
enter
or
test
test
xchg
sti
push
lock
inc
notl
or
jl
xchg
dec
mov
iret
adc
scas
subb
shrb
jp
dec
pop
cmc
pop
cs
rorl
popf
push
cmp
dec
add
pop
enter
xchg
sbb
aaa
or
rorl
dec
and
mov
add
clc
or
cs
leave
sbb
inc
outsl
idiv
or
jg
shrb
or
adcb
and
addb
push
dec
mov
pop
sub
and
out
lds
orb
mov
jnp
sub
inc
cmp
movsl
add
loopne
ficoms
jmp
and
add
loopne
out
icebp
psraw
push
dec
push
pop
inc
arpl
insb
adc
test
cmp
ja
mov
mov
das
add
popa
ja
stos
stc
jb
sub
fistl
push
testl
daa
or
adc
in
daa
mov
cli
inc
sub
mov
imul
sbb
inc
pusha
les
rorb
pop
scas
cmp
shlb
pop
or
add
inc
lahf
hlt
dec
xor
add
jge
mov
imul
add
sar
mov
add
lea
call
out
je
sub
push
sbb
les
fistl
inc
rorl
dec
fildll
xlat
push
outsb
or
or
ret
loope
adc
xor
and
mov
jmp
mov
cmovo
leave
je
dec
jmp
sti
stos
adc
btr
cmp
sbb
push
push
inc
adc
fisubl
hlt
sbb
mov
sarb
mov
xor
cmp
shlb
dec
into
cmp
ja
orl
ds
fs
inc
cmpsl
or
ret
jo
lock
adc
push
inc
cmp
jne
inc
add
les
std
aaa
xchg
inc
outsb
mov
add
call
jp
ss
mov
daa
add
add
dec
mov
pushf
cld
test
es
pop
sub
addl
adc
lret
mov
add
or
mov
inc
add
scas
in
imul
outsl
inc
inc
mov
pop
mov
and
imul
mov
jg
std
xlat
das
inc
inc
sbb
ret
mov
sbb
mov
dec
incb
dec
jbe
test
aaa
push
adc
std
sub
mov
lahf
in
xchg
add
test
inc
and
push
xchg
cs
int
mov
pop
adcl
add
adc
stos
adc
and
pop
aas
sub
inc
out
inc
and
iret
icebp
xor
aaa
adc
out
mov
add
test
sub
push
adc
test
psubq
adc
push
push
pop
nop
lret
shrb
es
sub
adc
call
out
sbb
loop
inc
mov
fldenv
mov
mov
dec
and
sub
and
js
popa
add
add
lock
add
out
sbb
outsl
daa
xchg
in
jmp
push
enter
add
pop
cmpl
out
cli
into
sbb
inc
stos
xchg
out
mov
mov
ret
stos
xlat
fiadds
and
das
loopne
cmpsb
xchg
in
in
xor
push
push
add
shrl
sub
xor
imul
mov
rcll
stos
mov
inc
add
add
cmp
in
add
pop
mov
and
mov
es
lods
insl
aad
and
push
dec
sbb
loope
or
or
addr16
hlt
xchg
jnp
mov
xlat
addb
in
rorb
loop
sub
and
cmp
fwait
pop
jb
fdivr
insl
mov
and
and
out
rclb
add
test
cli
aam
in
push
or
movb
cmp
mov
fs
jns
mov
xor
mov
inc
mov
push
jg
push
jae
daa
loope
and
push
push
push
sub
mov
cmc
or
mov
or
shll
adc
in
iret
inc
add
add
out
ljmp
sbb
and
js
jb
js
jle
addb
or
jae
adc
loopne
in
sti
sbb
cmp
sbb
out
mov
rcll
inc
cmp
rol
xchg
loop
pop
icebp
sbb
movl
pop
pop
leave
add
dec
addl
inc
clc
mov
clc
or
mov
insl
pop
push
movsb
push
clc
test
add
mov
pop
adc
dec
dec
push
xchg
jae
imul
add
push
adc
sbb
loope
mov
sub
mov
dec
popa
or
inc
adc
lods
int3
and
pusha
jge
subb
dec
adc
fsubl
mov
hlt
sub
fisubl
adc
inc
push
add
inc
pop
mov
xchg
pop
jne
sub
aad
push
ficompl
adc
pop
test
add
jne
dec
or
xchg
clc
inc
dec
jne
jnp
call
adc
stc
xor
out
add
pop
aas
mov
cmp
push
str
mov
sbbl
sbb
fbld
push
adc
sub
aam
pop
mov
iret
xor
clc
lret
adc
imul
iret
xchg
push
mov
pop
inc
nop
push
push
pushf
icebp
out
leave
dec
dec
je
jp
in
gs
lods
cmp
and
addl
add
cmp
xor
ss
jb
add
or
shr
aam
pop
cld
sub
pop
jo
adcl
pop
aad
popf
push
js
add
push
pop
xchg
lock
mov
lret
adc
lahf
sbb
cmp
pop
insl
cltd
and
xchg
jg
leave
dec
dec
push
hlt
hlt
das
pop
xchg
je
and
clc
sub
clc
and
insb
repz
inc
repnz
imul
pop
pop
sbb
enter
sbb
stos
sbb
clc
rclb
pop
hlt
bound
pop
and
fwait
es
mov
mov
rcll
adc
and
repz
jp
jnp
dec
pushf
movzwl
adc
pop
and
or
add
js
push
daa
and
xchg
pop
jo
sbb
inc
mov
test
icebp
and
bound
jns
jo
pop
push
jno
sub
xchg
dec
or
idivl
add
clc
rcl
fucomp
adc
dec
pop
and
mov
into
imulb
icebp
mov
xchg
push
push
cmpsl
cmp
mov
pop
nop
add
or
add
pop
aaa
adc
inc
adc
dec
adc
js
shlb
lock
jp
insl
insl
or
inc
cmp
iret
sbb
nop
fidivrl
xor
mov
popf
lock
mov
and
jne
mov
roll
and
jb
and
and
nop
pop
stc
jl
cmp
je
or
or
orl
iret
jge
outsb
int3
ret
pop
push
pushf
addb
ja
xor
or
fcoms
lods
repz
sub
push
mov
cld
repz
xor
dec
lds
inc
and
sub
int
adc
pop
sbb
hlt
out
sbb
and
shrl
inc
test
test
mov
jg
dec
lea
adc
adc
mov
inc
call
pop
adc
arpl
mov
pop
push
and
aas
xchg
or
mov
pushf
out
and
insb
adc
mov
adc
xor
daa
fcomps
and
adc
scas
js
jl
lcall
xor
int3
jne
xchg
mov
test
scas
add
divb
lea
jg
xchg
icebp
cmpl
aaa
or
dec
fidivl
and
ficoml
les
and
pop
std
mov
std
mov
mov
out
push
mov
movsb
mov
sarb
and
xchg
and
leave
xchg
pop
mov
sub
in
inc
lcall
jne
jl
testb
inc
jle
shlb
fs
xchg
xor
sahf
inc
push
lods
sub
mov
cmpsl
and
test
and
stos
and
test
pop
popl
inc
shlb
mov
and
mov
xor
jo
mov
xchg
mov
mov
out
push
pushl
mov
adc
js
jne
sbb
aam
adc
dec
cmpl
or
mov
mov
enter
sub
inc
pusha
add
rorl
and
sbb
or
in
addb
pop
pop
jb
mov
adcb
sbb
mov
fwait
inc
pop
pusha
push
cmp
outsl
inc
inc
xchg
fcomp
imul
sbb
adc
push
test
add
pusha
addr16
jne
cmp
pop
inc
int3
in
fcoml
je
mov
iret
stos
out
pop
and
add
incl
ret
add
mov
scas
lods
xchg
test
inc
dec
call
arpl
loopne
movsb
xchg
rclb
push
push
testl
inc
sbb
mov
or
pop
or
shlb
nop
clc
adc
xor
xchg
cs
out
lds
dec
sub
jns
inc
sbb
mov
sbb
clc
lock
shll
and
xor
or
dec
clc
fcompl
and
mov
add
and
sub
and
mov
addr16
inc
push
ret
test
xchg
push
mov
add
out
mov
cmp
sbb
and
jno
and
negl
jne
loopne
xchg
push
adc
add
popl
stos
negb
jecxz
stos
movsb
rclb
and
sub
push
adc
sbb
add
or
pop
or
imul
mov
jnp
push
or
xchg
mov
xor
xorl
cli
xor
pusha
or
push
daa
fisttpll
orl
xchg
adc
cmc
jbe
or
insb
xchg
and
mov
pushf
pop
leave
mov
mov
out
pop
adc
les
lods
pop
pop
clc
jbe
lds
xlat
cmp
rolb
adc
adc
and
sub
sbb
or
lret
xor
inc
push
pop
pop
roll
shrb
push
xchg
mov
imul
sbb
adc
enter
sub
inc
adc
nop
push
insb
adc
outsb
push
loop
pop
dec
push
mov
repnz
mov
les
inc
ret
push
and
subb
jnp
mov
cmp
adc
pop
xchg
sub
pop
fstl
fcmovne
in
dec
adc
test
cmpl
mov
xlat
adc
add
inc
mov
je
dec
pushf
mov
and
mov
ficoms
adc
int
pop
add
dec
daa
xchg
rolb
mov
pop
ljmp
sets
add
xchg
xchg
add
jb
mov
nop
adc
ret
ret
ret
cmp
push
ret
mov
fidivs
sbb
sbb
sbb
ljmp
adc
adc
mov
push
cmp
cmp
int3
daa
cld
outsl
add
hlt
push
push
fnstsw
sbb
add
sub
cli
mov
test
add
and
push
adc
mov
sbb
adc
mov
pop
aaa
hlt
and
push
jecxz
push
sub
push
inc
add
aaa
ljmp
xchg
inc
repnz
pop
adc
sbb
lret
imul
into
cmp
bound
cmc
scas
les
test
add
testl
or
test
add
xor
push
lret
sub
jmp
add
mov
enter
mov
or
xor
add
jmp
in
in
ret
adcb
xchg
aas
sub
arpl
stc
and
insl
adc
jmp
call
shll
inc
pop
and
cmc
mov
mov
scas
nop
sbb
mov
je
movsb
dec
add
popa
mov
aad
das
push
sbb
test
loop
popa
fs
push
cli
rclb
lea
insl
add
mov
imul
aam
int
sbb
bound
hlt
add
sbb
dec
iret
jns
and
adc
push
pop
mov
outsl
lahf
push
insb
repnz
call
sbbl
or
xchg
xor
imul
jmp
mov
addl
mov
cltd
repz
ret
and
and
inc
dec
add
mov
test
xor
hlt
jne
mov
sbb
inc
dec
lahf
aaa
sbb
xorb
out
dec
fnstenv
orb
or
loope
imul
sub
int
sbb
shll
adc
dec
aaa
and
testb
xorb
ficompl
sub
mov
mov
xorl
mov
clc
pop
pop
or
jne
stos
push
aam
call
jle
inc
or
cmp
jne
sub
orb
or
or
push
aaa
jnp
push
pop
add
popl
aaa
push
dec
movsl
lods
adc
or
in
or
add
mov
pop
adc
add
pop
orb
or
mov
xorb
jns
je
add
cmp
lret
in
push
add
push
mov
stos
nop
aas
inc
pusha
aaa
pop
adc
cmp
jge
movsb
aad
xorb
adc
fsubs
dec
out
cmp
idivb
cwtl
inc
xorl
jo
ret
je
push
js
dec
les
ja
jae
adc
je
iret
push
leave
mov
adc
add
sbb
scas
js
jnp
pushf
mov
mov
sub
les
dec
or
incb
jmp
lods
orb
push
mov
mov
mov
or
movsl
test
ds
dec
jbe
xor
xor
add
cmp
mov
insb
aas
in
xor
inc
or
xchg
scas
dec
dec
jae
sbb
fs
inc
and
and
mul
and
mov
or
nop
daa
mov
adc
and
ret
push
sub
lea
dec
aaa
popa
divl
push
fsub
sbb
popa
mov
add
lock
inc
xor
in
xchg
or
jo
cltd
iret
and
push
clc
adc
pop
pop
not
mov
mov
rcrb
sbb
sbb
xchg
pop
pop
sbb
scas
outsl
call
inc
or
sbb
or
orb
and
pusha
rcrb
je
lods
pop
xor
shr
sub
push
mov
inc
adc
xor
movl
jmp
cld
imul
icebp
ficoms
sbb
xchg
jle
mov
sbb
into
cwtl
xor
sbb
pop
push
push
xchg
nop
dec
lcall
lock
mov
imul
faddl
inc
push
and
sbb
imul
sar
cmpsb
pop
dec
mov
test
push
aam
fbld
xor
hlt
pop
in
cld
xor
test
loope
into
xor
mov
in
pop
push
outsb
pop
add
mov
je
pop
sub
cmpsb
test
sub
xchg
xor
or
sti
xchg
adc
js
push
repnz
sbb
sub
jnp
push
xchg
inc
cltd
js
fdivr
addb
lahf
stc
nop
cltd
mov
nop
cmpsl
xchg
mov
push
scas
test
and
mov
pop
xor
and
shll
inc
push
arpl
sub
test
insb
or
and
dec
shll
cmp
and
movsl
hlt
in
jo
lahf
or
mov
or
or
dec
pop
ret
sbb
mov
adc
jl
and
jg
pop
and
adc
sbb
jg
sbb
mov
and
sub
movsb
push
push
or
out
js
fmuls
sbb
shrb
xchg
data16
lret
cmpsl
cli
dec
mov
mov
sbb
or
xor
pop
mov
mov
push
popa
lods
xchg
dec
xchg
add
add
push
add
pop
mov
test
popa
sbbl
jle
stc
pop
bound
test
addr16
addb
call
sti
in
xchg
cmp
je
mov
rcll
notl
pusha
mov
adc
and
sub
add
rclb
inc
xchg
in
fsub
jle
add
int
mov
jno
mov
or
pusha
fwait
mov
out
pushl
subb
arpl
dec
add
sbb
or
aam
jge
jge
push
mov
jbe
lret
push
test
sbb
pop
frstor
jecxz
cmpsl
div
mov
jl
lock
in
and
mov
sbb
loope
mov
cli
loopne
data16
xchg
in
lea
cmpsl
loopne
xor
leave
pop
sbb
lods
mov
mov
inc
add
adc
bound
push
dec
repnz
test
sbb
add
pop
ljmp
adc
es
adc
mov
pushf
out
cmp
movsl
push
shr
jnp
gs
and
cltd
sbb
out
xchg
imul
jo
mov
cmp
fdivs
add
lcall
pop
mov
adc
sbbb
rorb
cld
clc
mov
inc
sbb
adc
sbb
xor
add
into
inc
push
jecxz
subl
lock
or
sbb
mov
mov
call
call
cltd
inc
jecxz
adc
or
add
or
adc
pop
cwtl
push
adc
adc
pusha
in
ret
cltd
sub
push
mov
xchg
das
mov
shlb
sti
fcmovb
lds
or
xchg
pop
imul
push
nop
inc
mov
mov
xchg
fsubrs
pop
popf
testl
xor
or
add
leave
xchg
add
enter
popa
add
pop
hlt
mov
clc
movsl
and
cmp
stos
xchg
add
out
add
xchg
push
sub
cmp
dec
push
test
out
cmpsl
call
nop
inc
add
or
stc
add
mov
sbb
jle
lcall
in
inc
and
icebp
mov
sub
subl
or
int3
add
adc
and
adc
rorb
adc
pop
pushf
sub
cld
pop
stos
sbb
test
es
ror
jae
adcb
in
cmp
sbb
add
enter
arpl
shrl
sbb
pop
jne
enter
pop
enter
test
push
inc
arpl
xchg
push
sub
xchg
xor
dec
push
mov
push
icebp
push
movsl
xchg
leave
push
inc
sbb
mov
and
outsl
adc
or
inc
adc
call
xchg
orb
idiv
pop
clc
icebp
add
sarb
ret
movl
ffreep
outsb
pop
xorw
mov
push
sub
or
adc
lahf
add
add
sbb
lea
fsubrl
push
outsl
sbb
sbb
and
push
cmp
bound
xor
scas
insl
popa
cmp
add
mov
push
xor
icebp
fdivrs
mov
or
jnp
jne
pop
pop
repnz
add
or
pop
loopne
cwtl
pop
je
add
loopne
xchg
mov
adc
lret
inc
xchg
and
lods
and
add
loopne
cmp
push
ficoml
jmpw
adc
lret
sbb
ljmp
mov
ss
mov
repz
pop
add
xchg
pop
xorl
fdivs
ljmp
cmp
push
sub
jnp
adc
jle
or
insb
add
lret
hlt
lds
orl
dec
popf
lea
or
ss
push
sbb
or
fadds
mov
mov
pop
inc
mov
jle
inc
push
or
imul
lcall
sarb
lea
sub
sub
lods
imul
add
mov
sbb
into
mov
and
add
add
clc
insl
stc
aad
in
jne
sub
xchg
xor
jbe
xchg
inc
add
mov
dec
shrb
clc
dec
xlat
mov
push
inc
fcoml
pause
push
push
jne
or
cmpsb
je
movl
add
pop
push
notl
fadds
xchg
loope
jl
fwait
pop
js
mov
dec
popa
adc
push
popa
and
pop
pusha
add
es
pop
xchg
lock
dec
cwtl
pushf
cmp
shll
mov
jl
sbb
lret
push
adc
les
jmp
xchg
enter
enter
cmp
int
test
dec
negl
xor
inc
xchg
daa
dec
iret
cld
mov
into
jns
lahf
xchg
clc
push
rcrb
cmpsl
mov
inc
ret
test
jae
mov
mov
arpl
or
cmpsb
dec
stos
call
xor
mov
fcmove
mov
push
cs
mov
dec
ja
or
add
mov
orb
sbb
in
testb
xchg
xor
add
jae
and
xor
push
addr16
dec
test
pop
xor
adc
adc
sub
cld
and
scas
jecxz
and
or
mov
cmpb
sub
sbb
pop
das
roll
cwtl
negl
fcomip
mov
push
inc
dec
dec
lcall
sub
lea
fadds
sbb
push
pop
es
mov
adc
pusha
fimull
add
dec
push
imul
dec
xor
xor
clc
adc
rolb
pop
dec
idiv
loop
mov
sbb
aad
add
gs
sub
mov
das
outsb
insb
or
out
or
mov
or
adc
and
adc
jns
mov
xor
cmpb
xor
push
xchg
adc
cmp
sbb
sub
je
out
loopne
mov
pop
mov
cmp
sbb
ret
dec
add
ffreep
and
or
adc
push
adc
in
shrb
cwtl
mov
or
mov
cmp
vaddsd
test
and
call
es
js
fnstsw
lret
lea
push
lret
inc
push
pop
or
pushf
movsl
push
mov
jae
test
xchg
lret
ss
or
adc
je
sub
fisttps
push
sub
cld
mov
sub
add
popa
aaa
adc
rcr
jno
insb
inc
or
int
shrl
push
fdivrp
and
frstor
out
mov
test
lock
and
xor
pushf
mov
cs
xchg
jae
fsubs
or
roll
sbb
hlt
es
xor
push
hlt
das
scas
out
adc
xor
mov
xchg
xchg
xor
mov
mov
or
fisubs
les
sub
lret
ds
filds
sub
rclb
inc
sahf
xor
loopne
dec
xchg
sbb
mov
push
push
push
mov
clc
or
mov
jl
inc
fbld
clc
push
or
enter
xchg
stos
mov
or
leave
clc
pop
cmpl
lock
mov
insb
jne
xor
shlb
icebp
cmpl
inc
rclb
loop
cmp
xor
xor
mov
insl
icebp
es
psraw
jecxz
in
pop
les
adcb
push
xor
outsl
sbb
das
testb
jne
mov
or
out
xlat
js
notb
jmp
push
imul
jmp
cltd
cmp
and
add
pop
sti
or
or
ja
jl
mov
pushl
mov
bound
shrl
push
pop
and
lods
dec
clc
andl
mov
ljmp
add
loopne
mov
xor
and
or
push
mov
cmp
xor
test
fisttpll
inc
adc
push
shlb
and
adc
adc
inc
insl
pop
xchg
jb
xor
fsubl
cmp
jne
movsb
and
sub
rol
dec
and
mov
inc
add
mov
mov
sub
fldcw
add
jl
mov
int3
scas
push
mov
lods
xchg
push
rcll
cmpl
pop
push
inc
pop
add
adc
pop
add
dec
in
mov
adc
sub
xchg
data16
test
daa
test
lea
mov
dec
les
fsubs
dec
adc
dec
add
sbb
std
xchg
lcall
xor
aas
push
adc
adc
and
lea
mull
nop
add
mov
mov
pop
adc
rorb
adc
sbb
in
dec
adc
dec
xor
orb
das
add
sub
cmp
mov
push
loope
hlt
aas
icebp
push
js
hlt
jo
mov
scas
dec
push
nop
inc
jne
jnp
cmp
lret
cli
out
mov
sbb
jne
add
dec
lock
and
adc
je
rclb
add
jp
jl
add
or
aaa
movsb
xor
mov
shl
sbb
cmp
int3
inc
sub
cld
gs
or
xchg
inc
notl
push
dec
mov
inc
jmp
mov
mov
cmp
adc
loope
jae
jp
in
mov
enter
push
mov
movsb
aad
cli
cmp
mov
dec
cmp
subb
mov
pop
cmpl
repnz
mov
cmp
jne
push
or
jne
test
shll
nop
mov
pop
add
idivb
and
lds
push
repz
xor
add
and
add
movsl
jo
add
ret
push
or
pop
enter
sbb
mov
xor
push
stos
cli
lods
inc
jl
js
outsb
sub
imul
outsl
and
sahf
sub
rolb
cmp
call
sub
test
ret
inc
adc
and
add
push
jl
inc
push
sub
pop
das
and
sbb
add
je
xchg
xor
cmp
xor
or
pop
inc
ja
and
ja
xorb
adc
hlt
mov
dec
loope
and
rcl
cmp
js
jne
movswl
jge
dec
xor
or
push
movsl
xor
rolb
popf
clc
xchg
sbb
pushl
dec
jne
jp
add
sub
popl
jb
xor
mov
cmp
cmp
dec
loop
roll
roll
sub
sub
iret
lahf
xchg
idivl
rcl
fimull
outsb
cmpsb
mov
mov
clc
lods
sbb
jl
jbe
adc
mov
scas
adc
jne
test
cmp
pop
fsts
lret
int3
sub
cmp
aas
inc
ret
dec
push
add
rep
mov
sub
filds
jne
pop
sub
inc
dec
adc
xor
dec
xor
adc
popf
pop
push
mov
xchg
mov
cmp
aaa
iret
cmp
add
inc
jecxz
push
inc
push
jno
or
lahf
sbb
xchg
push
leave
inc
daa
loop
test
dec
shl
ret
xchg
xchg
pop
cmp
cmp
les
inc
mov
mov
dec
inc
adc
inc
jge
cld
mov
cmp
sub
jae
cmp
imul
pop
shl
adc
imul
pop
loop
sbbl
or
outsb
push
dec
and
cmp
out
push
lods
mov
push
mov
call
or
es
push
xchg
adc
add
inc
lar
cmp
push
aaa
inc
insl
xchg
pop
dec
push
aam
pop
scas
insl
jp
shll
je
mov
pusha
or
jecxz
push
pusha
jo
pop
mov
stos
jle
in
push
pop
insl
pop
mov
cld
movsl
pusha
xor
push
cmpsl
aas
jnp
rolb
push
std
push
pop
sub
add
jge
js
xor
sbb
sbb
or
pushf
fs
xor
imull
into
fucomi
shlb
sub
int3
ret
nop
push
jo
xchg
shl
stos
add
call
add
fiaddl
cmpsb
cs
scas
cmp
jge
cs
xor
pop
sbb
push
jge
mov
xchg
cmp
xlat
sarb
jae
sub
sub
or
call
jns
ss
inc
pop
in
sbb
adcb
add
and
clc
sub
in
std
lock
inc
int
xchg
jo
imul
fs
jo
lcall
or
pop
addb
iret
fucomi
inc
adc
dec
sbb
adc
adcl
cvtdq2ps
inc
or
sbb
pusha
sbb
jge
insl
int3
xorb
jb
push
and
clc
repz
cmp
xor
outsl
push
add
lock
mov
sbb
xor
scas
sar
daa
dec
inc
adc
hlt
or
movhps
in
dec
inc
adc
xchg
pop
push
enter
sub
inc
pop
mov
adc
xor
sub
inc
push
xchg
adc
sbb
xor
in
push
adc
fdivrs
inc
outsl
popa
in
pusha
cwtl
je
inc
inc
push
inc
ret
push
inc
dec
gs
lea
adc
sarb
cmp
je
adc
xor
cmpsb
aas
xchg
test
push
testb
loopne
shlb
adc
jmp
pop
ss
cmp
jae
addr16
and
adc
adc
push
mov
add
jmp
das
jl
lahf
jne
xor
mov
gs
aaa
mov
aam
add
inc
enter
out
sbb
add
std
cmp
jae
inc
pusha
sbb
push
or
pop
adc
jecxz
adc
xchg
mov
or
sub
xor
rcrl
jo
lahf
xor
pop
aaa
sbb
mov
sbb
aas
and
jecxz
push
xchg
or
xchg
imul
fsubrl
fcoms
out
inc
or
enter
push
fiaddl
imul
cmp
inc
pop
andl
dec
test
dec
add
push
cmp
jmp
sub
dec
dec
daa
mov
out
addr16
or
ds
adc
cmpl
and
adc
mov
sub
aaa
sub
dec
mov
cld
imul
jge
popa
sub
movsb
add
cltd
adc
xor
adc
stos
sub
sub
xor
pop
out
shlb
bound
mov
xchg
jne
jmp
sub
fadds
jle
cmp
nop
cs
adc
les
nop
lahf
les
cmp
jl
jnp
testl
jae
add
add
flds
and
add
adc
loopne
icebp
add
or
or
and
dec
aas
scas
adc
sbb
dec
lds
add
lahf
or
iret
mov
add
mov
or
ficomps
add
jo
xor
imull
popa
push
outsl
push
jge
mov
imull
push
dec
imull
mov
or
sbb
xlat
cmpsb
pop
xor
mov
or
jno
movsl
les
and
cltd
fldl
in
das
lock
cmp
or
adc
sbb
mov
pop
add
lret
leave
pop
shr
sahf
pop
and
iret
mov
imul
sub
daa
and
shl
cmc
ss
xchg
popf
jle
ret
jecxz
mov
mov
dec
mov
mov
xlat
sub
call
mov
mov
push
push
enter
sub
jge
or
mov
bound
div
outsl
mov
jne
ret
and
testb
call
mov
mov
and
adc
in
dec
xlat
add
adc
lods
jo
shll
adc
adc
and
fld
push
xchg
push
and
js
mov
adc
fcmovne
sub
test
adc
dec
fsubrl
mov
and
inc
xlat
repz
and
or
bound
and
test
aaa
bound
ds
dec
push
jl
cmp
push
pop
pop
and
cmp
jmp
sti
mov
and
ror
aad
jge
xor
scas
clc
jne,pn
loopne
je
inc
mov
or
push
sbb
ja
mov
add
adc
test
in
add
hlt
pop
in
xadd
pop
add
stos
das
lods
pcmpgtd
dec
or
jae
xor
in
cmpsb
xchg
or
inc
cld
adc
cmp
cmp
loopne
mov
jge
jge
dec
ss
stc
outsb
inc
sub
cmp
jecxz
adc
sbb
sub
fs
out
sbb
push
sbb
dec
cmp
repnz
aas
mov
jp
mov
ret
push
outsl
repz
mov
push
clc
adc
and
ret
jecxz
dec
mov
int
call
add
dec
popf
mov
stos
cld
arpl
jbe
mov
jne
scas
leave
or
cmc
adc
xor
add
cmp
loopne
mov
xchg
or
lock
xchg
push
jecxz
push
test
stc
ja
mov
rcrb
punpckhdq
arpl
pop
and
jbe
ss
mov
push
std
add
pop
lods
fisttpll
or
sbb
outsl
lods
aad
jecxz
outsl
add
sub
adc
push
jno
jge
or
and
jle
dec
clc
out
mov
sbb
sub
add
mov
daa
mov
jmp
cltd
adc
inc
adc
add
push
ret
mov
fisttpl
adc
mov
xor
rcrb
shl
fidivl
inc
fimull
push
push
xchg
int3
cmp
imul
fsubrp
mov
inc
pop
ds
daa
movlps
pop
dec
push
aad
aaa
pop
in
inc
mov
xor
aad
inc
inc
inc
xor
xlat
cmpsb
imul
mov
jbe
ljmp
shlb
cmp
cli
xchg
es
mov
xlat
jne
cmp
pop
arpl
xchg
dec
sbb
xchg
push
sti
xchg
dec
fadds
push
xchg
insl
insb
aam
lea
sub
orb
push
and
hlt
xlat
sbb
popf
lods
or
xor
push
jl
add
adc
int3
imulb
and
pop
xorl
xchg
push
and
into
jmp
insb
nop
enter
push
xchg
movsb
sbb
sbb
je
mov
sbb
iret
mov
pop
inc
adc
imul
push
aas
movsb
test
inc
insb
pop
orl
aam
sbb
loopne
push
push
jae
cwtl
mov
inc
rorl
jns
and
jge
add
add
or
mov
sbb
aam
xlat
je
mov
pop
fs
lcall
add
fcoms
loopne
in
xchg
rolb
pop
in
lcall
pop
pop
in
pop
idivb
push
mov
sub
andl
mov
call
lods
mov
adc
adc
call
movsl
cmpsb
jne
testl
sub
lar
nop
out
xchg
rcrb
aam
inc
nop
aam
loopne
push
mov
add
incb
rorl
rcl
enter
scas
adc
movsb
pusha
insl
sbb
inc
test
out
scas
or
call
mov
dec
aaa
xor
cmp
mov
fbld
pop
xchg
xchg
leave
adc
add
xor
mov
xchg
and
xchg
out
and
sub
and
subl
shlb
dec
aad
push
push
add
mov
movsl
mov
pop
fistps
inc
loopne
cmp
loopne
and
jmp
push
adc
stos
sub
push
cmp
pop
xchg
jmp
jno
inc
bound
mov
mov
mov
lahf
push
lret
jae
pop
sarb
es
inc
clc
xchg
sub
clc
fisubl
ds
or
mov
js
rorb
out
cmp
jge
push
push
int3
cmp
ja
bts
jmp
adc
movsl
clc
ret
or
mov
inc
inc
dec
xchg
push
jmp
jo
sbb
pop
cmp
or
xor
mov
cmp
push
xlat
pop
push
xchg
adcb
pop
sti
aad
mov
ss
push
adc
adc
orb
sarb
cmp
es
ljmp
sbb
inc
into
adc
add
rcl
in
add
adc
leave
sbbb
add
inc
fbstp
adc
xchg
pop
inc
cli
mov
loop
mov
mov
mov
push
or
and
nop
orb
daa
das
stc
sbb
push
push
jne
and
fnstsw
mov
and
mov
mov
xchg
lcall
cwtl
sub
into
lods
or
cmp
push
stos
dec
imul
dec
loope
pop
rclb
cmp
dec
jge
lea
mov
mov
push
lret
or
add
push
xchg
pop
or
pop
cmp
dec
js
and
mov
xor
and
cmc
inc
test
add
test
push
test
push
stc
and
jno
and
scas
sarl
adc
push
mov
mov
cmp
add
dec
mov
kmovw
sbb
sub
in
and
test
pop
in
fcmove
add
xchg
dec
cwtl
push
es
repz
out
idivb
or
cs
repz
dec
pop
imul
push
mov
inc
pop
in
pusha
test
pop
dec
and
xchg
sbb
add
mov
or
mov
mov
insb
fldcw
jmp
jmp
push
adc
pop
jmp
mov
fadd
imul
cmp
inc
je
dec
sub
jecxz
in
pop
or
inc
push
clc
pop
iret
in
add
mov
aaa
adc
sub
mov
xchg
aad
jmp
sub
or
in
rclb
lock
ret
add
ret
jmp
fs
out
mov
clc
in
lahf
adc
inc
lahf
out
add
pusha
sbb
mov
dec
popa
in
dec
loope
jecxz
sbb
or
adc
jge
mov
pop
push
cmpsb
sub
call
cmp
sbb
push
and
adc
scas
cwtl
cmc
aam
rcll
pop
push
daa
out
fidivrl
push
adc
push
mov
add
pop
into
cmp
rolb
adc
sbb
sbb
imul
adc
mov
sbb
andl
inc
sbb
inc
sbb
xor
adc
sub
insb
push
imul
sbbl
data16
or
jle
push
mov
jle
enter
adc
sub
xorb
add
fwait
ss
jg
js
xchg
addr16
lods
movsl
in
add
or
mov
adc
or
xor
sbb
cld
sub
sub
xor
mov
and
xor
pop
ror
dec
pop
xor
arpl
add
es
out
pusha
imul
lock
cmp
add
into
in
fs
mov
mov
pop
inc
push
sub
push
lret
mov
arpl
ja
cmp
out
lock
push
or
inc
dec
or
das
aaa
ficompl
pop
xorl
inc
pop
sub
aas
sbb
mov
cmp
sub
data16
or
out
pop
out
rclb
loop
push
stc
idivl
andl
push
fsubrs
pop
cs
out
out
cmp
fs
js
out
ret
dec
pushf
push
adc
faddl
stos
xor
xchg
imul
rorb
mov
add
loopne
and
adcb
leave
sarb
cmp
xlat
repnz
mov
enter
clc
sub
popa
sbb
dec
sbb
jmp
and
insl
gs
cmc
and
incl
ret
fsubr
inc
rorl
cmp
push
sbb
jg
orb
adc
cli
movsl
jge
or
add
push
add
adc
push
test
loopne
pop
xor
push
fnstsw
mov
pop
sub
push
adc
mov
loopne
jnp
dec
mov
cmpl
jge
xchg
xchg
sbb
test
sar
push
int3
pop
push
push
mov
addr16
loop
movsb
into
icebp
or
aaa
and
add
push
in
ror
push
cmc
je
inc
adc
in
add
inc
push
lea
mov
cmp
jg
cltd
sbb
cs
cmp
jp
xor
popa
shl
sub
movb
mov
test
pop
inc
jnp
fwait
data16
dec
or
dec
clc
xchg
sbb
sarb
push
add
cs
adc
cmp
lods
push
ret
pop
out
mov
pop
adc
lock
and
jl
movsl
xor
fisubrs
clc
test
push
mov
xor
pop
and
pop
leave
dec
push
jg
pop
cmp
adc
push
jmp
inc
div
add
or
pop
adc
push
pop
mov
in
push
enter
pop
imul
js
imul
mov
addl
imul
pop
mov
cld
xor
outsb
shlb
mov
sbb
or
mov
filds
insb
mov
scas
rcrb
jmp
xlat
jge
mov
mov
cltd
jne
inc
xor
ret
incl
fcomip
and
lock
mov
sbb
push
and
jne
daa
ja
and
nopl
fnsave
je
aad
xor
das
cmp
pop
shl
mov
cmp
dec
add
inc
jo
mov
add
imul
cmp
jg
xor
dec
pop
ret
xchg
jno
inc
xchg
incl
in
and
and
dec
inc
xor
ja
ja
ja
or
ss
jl
pop
lock
sti
mov
rcl
add
js
mov
add
pusha
jo
add
inc
das
push
add
insl
inc
inc
dec
shlb
or
sbb
lods
xchg
fisubrl
jnp
ret
lea
cmp
jge
orb
and
push
int3
jl
adc
mov
pop
movhps
mov
clc
adc
and
orb
pop
neg
add
adc
stos
dec
add
jmp
loope
pop
xor
and
inc
sti
xor
inc
sbb
xor
xor
pop
aad
cmp
dec
aam
inc
dec
cmp
fcmovnb
dec
add
js
inc
inc
mov
test
popa
jo
sub
push
add
add
loopne,pn
lds
sbb
rcrb
popa
dec
mov
rorl
and
int3
shll
push
adc
push
jne
or
loopne
jns
dec
repz
adc
cmp
xorl
sbb
fcompl
outsl
xor
xor
sbb
test
mov
gs
add
pop
ss
xor
rclb
imul
mov
jo
insl
push
mov
js
mov
std
fcomip
mov
sbb
push
imul
popa
dec
pop
push
or
icebp
and
mov
mov
jl
inc
adc
sti
loopne
popa
xchg
cmpsl
sbb
in
cmp
fistpl
cmp
je
xchg
and
jne
pop
adc
mov
mov
cmp
push
popa
push
sub
rcrb
sti
or
inc
scas
adc
push
xor
test
loope
pop
mov
pop
pop
sbb
out
fmuls
mov
fbld
inc
enter
add
or
and
sbb
adc
hlt
inc
mov
xlat
or
or
xor
insb
addr16
fs
xchg
fmuls
or
jl
nop
mov
mov
adc
adc
addb
mov
adc
pop
mov
jl
imul
and
jg
sbb
push
or
daa
in
ds
or
or
and
sti
and
sarb
mov
push
add
pop
mov
mov
addb
lods
scas
loope
and
imul
ja
and
push
mov
mov
jns
cwtl
mov
pop
fldl
icebp
push
push
aaa
pop
push
out
shrl
icebp
mov
icebp
fwait
roll
scas
or
mov
je
add
ret
divb
and
fstl
or
sub
mov
fmuls
inc
xchg
popl
fistl
jns
mov
or
mov
sub
or
or
cmp
lea
hlt
popa
inc
sub
inc
dec
pop
stos
pop
and
mov
es
js
dec
jmp
add
add
or
lock
or
test
cwtl
push
ret
inc
push
repz
cli
and
fcomps
cmp
aaa
lock
pop
js
ss
mov
je
ret
jbe
add
outsb
mov
sbb
das
sbb
fstpt
fwait
mov
fbld
add
lock
jmp
adc
ret
push
jae
and
repnz
mov
and
fwait
test
rolb
fdivrs
scas
add
inc
aaa
mov
sub
es
leave
das
add
pop
ret
dec
insb
aad
ror
pop
adc
push
popa
test
mov
aam
lcall
jnp
rorb
rorb
pop
push
out
mov
cmp
cwtd
push
call
cltd
inc
cwtl
adc
jbe
cli
fisttpll
loopne
fsubs
dec
push
push
mov
dec
pop
cmp
pop
cmpsl
lea
mov
pop
or
jae
cmp
mov
cmp
dec
mov
add
inc
or
jg
pop
addl
pushf
sbb
and
sub
ja
pusha
pushf
stc
pop
or
lds
jbe
lds
jecxz
jnp
adcb
and
jno
and
bound
inc
ret
fwait
adc
gs
cmp
in
aas
clc
inc
rep
stos
or
mov
test
shrl
popa
enter
mov
push
mov
add
xor
in
jne
xor
fildl
aas
jge
lock
rcl
lock
and
xchg
sbb
push
or
pop
mov
mov
test
xorb
nop
add
cmpsb
outsb
clc
clc
cmp
aaa
sub
push
divb
aad
adc
sub
movsb
call
xchg
or
xor
bnd
or
mov
jg
jo
xorl
inc
sub
xchg
pop
negb
jmp
std
lock
je
xor
xor
das
mov
pop
insl
lock
ja
ret
sub
testl
mov
adc
aas
adc
dec
fisubl
cmp
lock
add
or
outsb
jbe
jo
test
cmpb
adc
in
jmp
stc
or
or
je
movsb
xchg
lahf
fwait
adc
mov
or
ret
and
pop
xor
bound
add
adc
mov
fsts
sbb
and
insl
adc
insb
ret
cmp
rcl
lcall
les
fwait
adc
inc
dec
loop
imul
and
add
add
add
in
cmp
jnp
popl
lcall
iret
rcr
push
push
pushf
xchg
xchg
lret
dec
adc
xor
shrb
addr16
pop
in
mov
adc
or
add
mov
out
cmp
sbb
mov
jnp
shll
jp
sub
xchg
mov
hlt
rclb
inc
out
mov
or
pop
call
data16
add
mov
inc
jbe
dec
lods
adc
repnz
in
es
lock
or
jne
and
and
stos
inc
and
aad
and
pop
pop
lar
jnp
fsubs
or
dec
cmp
hlt
movsl
adc
pop
mov
xchg
clc
pop
fisttpll
jnp
sbb
daa
loopne
scas
das
push
call
or
add
jns
dec
push
ret
sbb
sub
mov
lret
adc
out
inc
imul
pop
ret
push
cmpsb
jl
push
mov
leave
out
sbb
mov
pop
imul
cmp
mov
loopne
ret
popf
test
mov
popf
push
pop
jmp
adc
and
shr
sub
ret
push
inc
in
mov
hlt
ds
in
in
sub
push
jmp
jl
jo
or
nop
orb
xlat
push
push
shrb
mov
mov
jg
and
movnti
jns
or
adc
or
fs
lods
adc
cld
sub
insl
push
lahf
test
push
add
jge
dec
loope
mov
sbb
js
cmp
hlt
push
and
imul
adc
jle
loopne
sub
testb
testl
or
mov
ljmp
mov
pop
cmpl
push
sbb
insl
inc
sbb
sbb
insl
adc
sarl
jg
xor
movsb
pop
add
cmp
add
or
or
and
add
and
cmp
and
jle
push
sbb
push
inc
out
mov
pop
pop
push
push
jle
subl
outsb
adc
inc
mov
jl
lcall
hlt
xchg
std
bound
sub
inc
and
mov
xor
jp
jbe
int
dec
iret
add
add
pop
sbb
lods
andb
add
push
add
sub
push
push
lods
adc
out
mov
sbb
mov
loope
push
ror
fildll
lods
lock
mov
cmpsl
dec
rorl
ret
adc
xor
popa
ret
scas
jg
out
xor
push
mov
add
pop
dec
push
inc
and
ficomps
shlb
jb
movsl
imul
and
pop
add
hlt
mov
sbb
inc
or
push
add
jo
and
jmp
sbb
jb
rcll
xor
sub
mov
dec
cmp
icebp
hlt
cmp
push
lods
dec
cwtl
mov
add
dec
shlb
hlt
mov
pop
sub
sbb
pop
and
test
and
push
arpl
popa
lods
dec
pop
add
pop
je
orl
jno
cmp
push
sbb
dec
int
push
in
addl
lock
xchg
aaa
enter
add
cld
sbb
mov
lock
sti
add
in
lods
cmp
mov
dec
add
addr16
mov
mov
test
mov
clc
std
movsl
mov
or
xor
jmp
inc
or
data16
push
sub
out
xor
inc
dec
push
mov
cmpsl
out
push
sub
adc
sub
dec
xor
pop
sub
and
in
shrb
adc
push
cwtl
out
aaa
jno
outsl
adc
jns
jbe
les
xchg
add
jmp
xchg
rcl
and
add
lock
add
adc
push
xor
or
jg
movsb
sbb
lock
push
stc
jecxz
daa
dec
jnp
xor
push
inc
xchg
rclb
jge
or
dec
or
jl
insb
push
jbe
es
orb
lea
lock
orb
or
out
je
cmp
cmp
icebp
xor
sbb
int3
ror
aam
jb
nop
xchg
js
sarb
mov
sub
in
push
sbb
xor
add
mov
xchg
xor
cld
inc
dec
xor
or
push
jnp
lahf
mov
sbb
or
push
fdivr
jne
fsubs
test
xchg
and
sbb
int3
je
or
adc
cmp
pop
in
xchg
enter
push
movb
es
dec
ffreep
cmp
mov
cmpsb
push
fcomip
inc
pop
sbb
sbb
fiaddl
aam
sbb
pmulhuw
hlt
loopne
jbe
lahf
sbb
push
adc
and
jno
push
popa
xchg
cltd
inc
in
in
fwait
nop
out
xor
mov
mov
scas
mov
nop
lock
lret
xchg
dec
sub
pop
cmp
mov
mov
or
shrb
cmp
mov
and
dec
out
adc
mov
call
arpl
add
or
lods
stos
cltd
mov
sub
popa
fsubrs
mov
dec
mov
int
cmpsb
shlb
cmp
test
ficomps
rorl
jmp
int3
xchg
rol
pop
xor
or
sub
test
aaa
jns
inc
mov
pop
mov
sub
cld
cld
adc
sub
push
pop
add
cmpl
adc
ljmp
shlb
xor
xchg
sbb
mov
sub
jmp
in
mov
cld
and
add
in
lods
pop
or
imul
aaa
lds
inc
cmp
lcall
test
and
mov
xchg
fdivrs
ucomiss
cmc
jns
jmp
mov
movb
push
js
sbb
lods
dec
hlt
sbb
loope
mov
ret
and
adc
xchg
mov
rcrl
bound
les
pop
xor
rclb
adc
fcom
pop
and
addr16
insb
cs
xor
adc
rcrb
add
push
sbb
xor
push
xor
and
add
int3
push
rcrl
jge
fsts
int
pop
xor
ret
mov
addr16
int3
mov
lahf
idivl
test
imul
pop
jae
je
mov
jl
mov
test
add
mov
pop
sbbb
add
out
cmp
xor
popa
notb
test
cmp
nop
pop
dec
clc
add
arpl
xchg
adc
sub
hlt
cmc
insb
mov
dec
adc
int3
mov
aas
add
aam
jge
jmp
xchg
xchg
mov
push
mov
mov
fcoml
xchg
add
inc
xchg
pop
loope
insl
je
jno
cmp
fistpll
and
xchg
out
mov
pop
adc
inc
lret
mov
or
jmp
addl
fcoml
inc
adc
lcall
test
sbb
jp
rclb
inc
adc
pop
pop
xchg
cmpb
mov
insb
orl
sti
add
sbb
or
nop
icebp
mov
sarb
or
xchg
mov
add
xor
and
out
or
cmp
ja
nop
je
test
pop
or
dec
xchg
dec
popa
ret
daa
dec
cmp
push
pcmpeqw
push
or
into
add
mov
test
pop
mov
and
fdivrs
sub
f2xm1
fstp
pusha
pusha
enter
mov
xchg
clc
push
cmpb
mov
and
or
jne
push
push
dec
mov
push
jle
push
scas
dec
xor
mov
cwtl
jne
arpl
lods
lock
jmp
test
dec
push
add
jmp
imul
pusha
push
mov
call
xor
jge
adc
insl
loopne
mov
mov
and
fldcw
sbb
pop
sbb
pusha
test
pop
fnstenv
cmp
sahf
lcall
jne
mov
add
mov
imul
jae
jl
sahf
pop
pop
cmp
testb
ss
sbbl
cmp
lock
mov
cmp
adc
push
inc
scas
and
lods
add
xchg
out
imul
shll
imul
into
mov
andb
nop
push
imul
sub
add
and
push
mov
sub
bound
add
pusha
xchg
pushf
mov
loope
push
push
mov
fisttps
mov
inc
cs
jne
add
add
dec
cld
leave
mov
push
or
inc
pusha
jmp
and
aas
or
movb
push
cmp
and
jo
mov
je
mov
mov
and
andl
inc
clc
clc
dec
and
data16
mov
lahf
push
dec
pop
inc
lock
mov
sbb
rolb
fiadds
mov
js
pop
lock
pop
mov
aam
pop
test
cmpsl
jmp
shlb
jge
push
icebp
push
push
cmp
adcb
and
push
mov
adc
cmpsb
imul
or
dec
fld
sbb
ret
xchg
xchg
push
push
add
push
mov
dec
loope
dec
cmpl
out
inc
cmp
dec
ret
push
rol
cmp
inc
add
mov
jo
loopne
inc
inc
jmp
in
ret
xor
rclb
cmp
mov
and
mov
jo
jne
mov
mov
adc
clc
clc
jo
adc
pop
mov
pop
jnp
xor
lods
xor
or
or
lea
pop
inc
in
test
xor
inc
dec
or
clc
mov
test
pop
add
jb
incb
jl
mov
pop
dec
and
adc
lods
or
das
call
lods
mov
and
or
xor
pop
mov
cmp
in
xchg
std
cmp
push
je
push
je
cs
outsb
xchg
aas
sbb
jg
xchg
aam
inc
adc
and
stc
lcall
mov
lods
fwait
sub
push
cmp
jmp
adc
outsl
stos
out
mov
addr16
jne
loope
add
imul
jp
sbb
leave
fsts
adc
add
pop
test
les
fcmovnb
cli
cmp
cld
lea
lea
loop
xor
push
jecxz
pusha
add
cwtl
push
add
std
enter
aaa
test
pop
clc
pop
rorl
mov
or
movsb
popf
jne
sbb
mov
lods
or
xchg
inc
dec
inc
popa
jo
mov
outsb
bound
shrb
push
sbb
popa
idivb
outsl
mov
int3
jg
loope
add
roll
sbb
or
out
mov
sub
ds
add
fs
adc
dec
lea
add
jge
inc
add
push
out
jg
add
xlat
cmp
dec
jecxz
mov
inc
jl
ss
enter
imul
lret
adc
ja
dec
dec
sbb
push
or
push
jp
sub
adc
addr16
sbb
push
sbb
ja
add
adc
sub
inc
nop
xchg
and
inc
fisubl
insl
add
test
shlb
cltd
lret
jle
dec
xor
mov
push
les
loop
pop
and
xlat
sbb
mov
fsubl
pop
adc
sbb
mov
sbb
sub
adc
xor
sub
sub
inc
lahf
rcll
shl
inc
sbb
adc
mov
xchg
jl
or
insl
cwtl
jb
sub
dec
sbb
and
lock
dec
or
pop
adc
mov
xchg
sub
push
sub
sub
lret
fs
imul
inc
lret
clc
mov
sbb
adc
adc
sbb
adc
jl
mov
arpl
lods
in
rorl
pop
adc
mov
or
mov
daa
fiaddl
orw
gs
sbb
push
adc
pop
sbb
pop
sub
je
mov
daa
xor
leave
dec
call
mov
or
adc
push
mov
fadds
mov
mov
cmpsl
adc
shll
inc
cmpl
je
cmp
inc
ja
dec
sub
outsb
jnp
push
dec
cmp
pop
push
push
jge
or
xor
jb
xchg
mov
mov
push
or
or
mov
cli
xchg
sarl
inc
js
dec
out
cwtl
inc
je
add
and
cs
inc
aaa
rcll
mov
dec
add
and
dec
pop
dec
adc
sub
nop
or
jae
inc
aaa
inc
inc
scas
jb
fldl
scas
pop
arpl
mov
xchg
aaa
clc
xchg
mov
inc
xor
mov
jge
aad
adc
adc
negl
dec
scas
cmp
int3
mov
pop
imul
clc
cmp
jmp
adc
orl
test
add
lret
xlat
push
bnd
hlt
lods
adc
jmp
fisubs
hlt
adc
lret
mov
scas
and
iret
sub
pop
sub
xor
pop
mov
cs
enter
cmp
pop
aas
and
add
adc
pop
subb
pop
xchg
js
push
je
out
and
arpl
iret
pop
dec
or
pop
stc
enter
ret
mov
push
or
mov
inc
loopne
mov
test
mov
ljmp
cltd
jnp
jne
inc
jecxz
jo
pusha
mov
arpl
subb
dec
pushf
sbb
inc
loope
and
push
pop
push
add
sub
cmp
loop
sub
in
popa
cmp
add
add
pop
adc
cmp
call
sbb
adc
jp
dec
sbb
loope
or
cmp
and
mov
lea
pop
pop
dec
pop
xchg
ret
lret
xor
lods
punpckhbw
js
push
or
xchg
sbb
js
ret
pop
add
mov
dec
test
xchg
xor
out
int3
mov
adc
adc
cmpsb
lahf
loope
pop
pop
imul
pop
stos
ret
mov
adc
xor
mov
lock
lcall
sub
pop
jmp
sbb
lock
jmp
or
dec
inc
ret
mov
test
cmpl
mov
sub
ret
shll
adc
push
dec
push
sub
xchg
jo
and
pop
dec
ret
mov
jb
xor
cmp
cltd
aas
bound
test
xlat
xor
push
insb
fimuls
add
jno
cmp
jg
push
dec
cmp
inc
xlat
cmp
ja
mov
gs
loope
popa
pop
push
aas
lock
mov
xchg
mov
jecxz
into
jmp
or
sbb
jns
pop
icebp
or
or
dec
fdivrs
test
pushf
xor
dec
or
inc
dec
jne
fistps
xor
adc
fdivs
mov
test
push
js
xlat
and
dec
jo
imul
or
inc
dec
or
leave
mov
dec
lods
arpl
xchg
and
sbb
outsl
ret
adc
sub
xchg
inc
inc
outsb
mov
in
mov
mov
sbb
inc
and
test
xchg
mov
sbb
inc
and
inc
or
imul
xor
push
scas
xlat
jge
and
mov
punpcklwd
jmp
xchg
stos
mov
push
push
les
cmp
mov
outsl
insb
add
cwtl
enter
cmp
or
and
leave
orl
push
pop
adc
outsb
or
adc
loop
jo
adc
xchg
sbb
mov
jle
in
add
lock
cmp
and
outsb
lock
fldt
add
addr16
dec
pop
dec
ret
pusha
loop
push
add
push
ret
push
pop
or
lds
sarl
xor
xlat
add
ss
pusha
sbb
hlt
pop
sarb
jge
dec
sub
stos
out
inc
push
xor
jmp
adc
les
push
leave
mov
je
cmp
inc
out
lods
xlat
shlb
push
adc
hlt
fistps
jnp
lahf
aaa
dec
inc
sub
jnp
aaa
pop
in
jbe
jge
cmp
ds
inc
je
dec
push
push
xchg
cltd
sbb
sbb
sbb
fst
sub
stos
adc
mov
sub
and
inc
jecxz
xor
movsb
or
lds
movsb
insl
or
xlat
sub
fwait
icebp
sbb
jg
or
and
xchg
imul
xor
fimull
inc
test
sbb
mov
add
je
mov
lods
mov
lods
test
adc
push
sbb
adc
popa
inc
mov
xlat
enter
scas
scas
sbb
test
mov
push
pop
dec
adc
push
pop
mov
pop
add
outsb
adc
mov
movups
sub
lds
or
aam
lsl
cmp
pop
and
sub
pop
adc
lock
push
test
scas
loopne
adc
adc
jmp
mov
pushf
adc
sahf
add
inc
add
pushf
xchg
sar
jp
inc
les
xor
adcl
sbb
or
rclb
orb
adc
add
mov
pop
sub
fsubs
insl
ja
xlat
adc
inc
rcrb
xor
or
in
push
xchg
push
and
rorl
movb
sub
adc
jmp
aas
add
push
lcall
mov
pop
mov
xor
call
inc
or
add
stc
pop
push
cmpsb
lock
call
xchg
jo
aaa
fwait
pop
test
outsb
push
loopne
push
in
test
fcompl
adcb
mov
add
adc
adc
xor
fcompl
push
icebp
jge
push
and
fsubrs
rcrl
repz
adc
add
jp
rolb
lcall
adc
adc
xchg
add
pop
sbb
jo
andl
lret
push
lods
add
adc
sub
ds
inc
arpl
iret
jle
or
in
or
lcall
mov
mov
mov
ror
call
aaa
jns
in
rorb
xor
cs
lods
nop
inc
push
cmp
mov
stos
mov
add
sbb
or
sub
imul
xlat
mov
sbb
and
fstpl
sbb
lods
xchg
addl
dec
fadds
pusha
mov
imul
aad
push
stos
sub
xor
mov
roll
add
adc
pop
inc
sbb
mov
xchg
add
loope
ja
nop
mov
or
ds
push
orl
inc
test
or
mov
push
lea
mov
fsubrs
mov
icebp
lods
inc
out
push
inc
inc
pop
or
add
dec
or
addr16
and
or
dec
in
fidivrs
cld
pcmpeqb
xor
mov
pop
mov
push
or
sbb
adc
inc
adc
lock
pop
or
jns
jmp
sub
sbb
dec
popa
rolb
cmp
mov
iret
dec
jne
pop
inc
jmp
les
sar
mov
or
cmp
dec
inc
adc
outsb
add
stc
inc
mov
shrl
adc
test
out
gs
popa
push
dec
in
dec
mov
mov
mov
call
jne
inc
pop
xor
sub
popf
mov
jno
dec
mov
sub
jle
ds
bound
loope
mov
push
call
push
jb
push
jae
adcl
or
fadds
scas
ret
cld
call
adc
ret
jge
pop
addl
mov
neg
scas
cmp
pop
sbb
inc
pop
push
mov
outsl
call
int
loopne
or
lret
rolb
add
mov
add
adc
adc
push
jp
orl
loop
test
push
push
push
popf
sub
and
push
xor
lcall
sti
xor
cmp
lock
mov
mov
pop
cmp
xchg
xchg
inc
loop
pop
mov
mov
dec
adc
cmp
xchg
outsb
and
aad
push
lret
or
xor
jb
xor
fs
mov
mov
sahf
in
movsb
mov
sahf
or
sbb
mov
push
jp
xor
cmpl
xchg
loope
push
outsb
and
imul
push
push
arpl
mov
add
dec
mov
pop
add
ss
call
mov
sub
xchg
into
jnp
add
testl
xchg
pop
or
notl
pop
adc
pop
call
lahf
pop
dec
sub
pusha
icebp
dec
outsb
test
bound
es
push
rcl
sub
shlb
inc
push
ss
filds
nop
dec
xor
xor
ja
xchg
jnp
cmp
je
adc
cmp
aad
mov
ss
fidivrl
mov
outsl
insb
sub
movl
adc
ret
arpl
mov
imul
mov
mov
push
sub
shrb
push
adc
mov
mov
mov
mov
push
aas
movsb
mov
mov
sub
cmc
xlat
xor
xchg
outsb
sub
scas
inc
cmp
inc
dec
dec
jne
cli
lret
push
push
jbe
mov
rcrb
push
xchg
push
xor
inc
pop
push
inc
or
jle
add
mov
je
testl
imul
imul
rcl
push
xor
pop
icebp
sbb
sbb
outsl
add
es
mov
mov
ret
pop
leave
sub
or
test
jg
and
xchg
pop
jo
pop
add
adc
cs
push
and
es
or
js
ljmp
and
hlt
jg
stc
les
xor
ret
subb
adc
inc
cmp
lahf
nop
mov
dec
inc
leave
mov
das
insb
mov
adc
ss
xchg
test
cmp
inc
push
popa
push
push
push
adc
mov
cmpsb
mov
push
mov
pop
or
dec
cwtl
jne
or
and
sub
or
dec
test
insl
mov
or
nop
cmp
xchg
or
aam
pop
leave
mov
out
jne
mov
insl
push
or
sarl
dec
or
nop
sahf
push
sbb
pop
dec
push
mov
ja
mov
mov
jle
xor
insb
push
and
sahf
push
js
cmp
sbb
enter
and
inc
into
cmc
nop
jge
fbld
sub
outsb
sbb
bound
adc
imul
sbb
mov
xor
dec
jg
adc
les
dec
xchg
xor
mov
push
fsubr
lods
mov
in
mov
sub
dec
cwtl
dec
jno
imul
scas
lds
popl
dec
ficoml
pop
sbb
xor
jnp
add
mov
mov
cld
test
cmp
jne
mov
mov
pop
mov
fldt
jle
or
out
cmp
xchg
xor
dec
mov
add
jne
sbb
lcall
inc
xlat
push
popa
xlat
push
mov
outsb
enter
ljmp
inc
ds
mov
pop
jp
pop
lods
jne
add
push
test
cmova
mov
dec
test
mov
in
push
push
mov
push
cmp
cmp
cmp
int
insb
sbb
jmp
test
mov
and
sub
sbb
mov
add
pop
mov
in
sub
sbb
add
or
out
pop
and
pop
add
or
and
gs
in
jmp
iret
adc
mov
imul
mov
ret
push
das
lods
mov
or
or
add
cmp
outsl
lock
push
inc
sub
je
inc
sbb
lock
jb
stos
mov
jo
dec
cmp
dec
and
mov
ret
stos
jo
and
cmp
enter
jo
movsb
nop
sub
das
adc
sub
push
mov
push
inc
dec
jno
push
xor
sbb
pop
das
lock
inc
lea
mov
dec
imul
adc
mov
cvtps2pi
jg
or
imul
push
ss
mov
mov
movsb
jmp
ds
push
mov
mov
xchg
data16
icebp
inc
dec
je
sub
orb
jb
jmp
xchg
jle
fsubl
pusha
xchg
add
clc
adc
and
filds
or
stos
sub
shlb
xchg
push
sbb
das
loop
sahf
fimull
adc
pop
lds
mov
mov
or
dec
int
fistps
mov
inc
or
fidivrl
adc
fbld
lahf
cmp
cwtl
push
dec
inc
sub
int
dec
and
dec
fsubrl
push
mov
fwait
lahf
xorl
and
lahf
pop
test
add
icebp
js
inc
jmp
aad
xchg
pop
blcs
or
cmp
push
xchg
pop
pop
mov
mov
mov
pusha
sbb
fxtract
inc
add
jmp
stos
or
adc
cli
pushf
mov
rcrb
loop
mov
shlb
setg
or
add
jbe
jmp
push
pop
xor
sbbl
repz
push
or
push
push
fwait
sbb
mov
mov
cmp
xor
pause
dec
jmp
outsb
shrb
lret
pop
aas
mov
bound
inc
xchg
incb
adc
sbb
seta
mov
sbb
sbb
enter
hlt
lock
in
mov
repnz
out
mov
dec
sbb
or
adc
push
mov
imul
shlb
jne
or
cs
adc
push
insb
xchg
inc
cmpsb
mov
xchg
fimull
movsl
mov
or
fnstsw
push
jle
icebp
repnz
sbb
mov
popf
les
add
inc
shlb
fsubrs
cmp
inc
inc
jns
dec
neg
jo
adc
push
adc
insb
pushf
and
mov
push
jb
push
es
aaa
mov
add
push
mov
push
xchg
lret
scas
or
mov
fldl
mov
out
xchg
or
dec
fs
add
push
xchg
lods
enter
cmp
rorl
inc
cmpsl
mov
adc
shl
jl
or
jge
sub
xor
or
test
movsb
rorl
and
rol
mov
fisttpll
cmpsl
or
movl
mov
pop
je
mov
cwtl
push
test
ret
pop
sbb
pop
dec
add
loopne
pop
fisubl
mov
shr
jp
es
or
das
push
sub
test
mov
inc
in
or
push
inc
addr16
add
mov
stos
mov
jo
loopne
arpl
pop
add
cs
mov
movsb
std
insl
pop
push
insb
mov
nop
es
cmp
nop
pop
inc
dec
nop
mov
inc
jne
adc
les
sti
push
mov
push
decl
testl
pop
mov
xor
mov
jl
rcr
enter
sbb
rcl
fcomp
sbb
sbb
loopne
call
sbb
hlt
clc
cld
fs
in
add
or
fs
sbb
fs
sub
fs
cmp
fs
inc
dec
dec
fs
push
pop
pop
fs
fs
fs
js
sub
or
sub
push
fsubrl
loope
aad
addr16
jmp
pop
mov
pop
arpl
out
adc
xor
pushf
lret
nop
das
or
pop
pushf
aam
and
int3
enter
mov
int3
adc
rorb
xchg
add
sbb
testb
movsb
and
dec
push
push
not
and
sub
movsb
xor
xchg
call
adcb
hlt
cs
sbb
cld
in
xchg
push
and
and
adcb
or
push
sbb
dec
gs
sub
test
adc
dec
in
int3
and
and
test
xor
xor
sbb
cmp
int
cmp
nop
lret
inc
js
inc
sub
dec
pushf
dec
add
fdivs
lock
adc
xchg
add
jl
movsb
xor
fs
nop
lret
aam
cld
push
cs
sbb
iret
je
push
jge
cmpb
inc
pushl
or
mov
inc
js
daa
lods
shlb
insl
push
lahf
push
push
mov
cltd
jo
aaa
loopne
hlt
or
out
cmpb
jb
lock
jnp
ja
inc
arpl
addr16
or
xor
sub
push
in
mov
gs
add
je
enter
mov
jbe
stos
int
adc
jae
fucomip
or
push
push
and
inc
push
push
pop
pop
xchg
dec
push
mov
sbb
decb
mov
addr16
pop
js
push
lcall
aas
pop
aaa
cmp
pop
mov
roll
jae
inc
jnp
mov
orl
and
jns
loop
out
pop
out
outsb
jb
aaa
or
push
stos
pop
mov
mov
shrb
aaa
aas
jo
push
ret
inc
aaa
dec
push
mov
jne,pn
push
xchg
jne
dec
stos
jecxz
outsl
xor
push
stos
jecxz
ds
push
nop
mov
pop
popl
push
loopne
inc
dec
ds
aaa
pop
or
push
dec
test
jnp
inc
lahf
fists
inc
fidivrl
adc
les
test
popa
inc
add
jae
inc
mov
jnp
inc
dec
jne
push
fdivrs
imul
sub
lcall
ja
mov
jbe
and
add
cmpsl
xlat
push
in
xchg
dec
lret
cmp
addr16
jne
subb
jno
or
fs
lds
push
jae
sub
cmpsb
mov
pusha
lret
dec
imul
lea
hlt
out
arpl
addr16
fwait
or
xchg
push
xorb
mov
lea
sbb
add
push
adc
pop
push
lds
push
xor
pop
add
jl
rolb
push
push
data16
mov
jg
out
movsb
add
inc
movsb
dec
sti
xor
nop
mov
mov
adc
adc
mov
sbb
in
pop
push
push
cmovp
nop
nop
rolb
sub
shlb
mov
icebp
push
subl
out
adc
out
js
fs
aaa
gs
rcr
inc
loopne
and
dec
ror
jo
cli
xchg
xchg
xchg
cmpsl
or
dec
jb
sub
cmp
in
cmpsl
dec
loopne
rolb
and
dec
xchg
shlb
add
or
sbb
aam
jl
inc
je
jae
add
aaa
dec
push
jnp
loop
inc
xchg
sbb
inc
sub
ljmp
lods
loop
sub
or
nop
xchg
and
sub
push
outsl
jo
sbb
or
or
push
outsb
scas
mov
outsl
subb
inc
jecxz
mov
outsb
jb
jnp
cs
and
mov
popa
add
inc
cmp
mov
sbb
sti
cwtl
push
das
push
push
shrb
sub
out
sahf
xchg
jb
pop
ds
test
sbb
and
add
xchg
jno
jle
or
adc
popf
out
sbbb
and
imul
sbb
or
outsl
dec
dec
add
sbb
add
mov
mov
outsl
add
lcall
dec
pop
xchg
cld
mov
pop
rcll
mov
aaa
push
jns
cmp
inc
mov
out
outsl
or
or
mov
insl
cmp
negb
aam
adc
ljmp
gs
mov
or
rcr
ja
dec
fstpt
dec
mov
add
pop
and
push
or
les
in
xor
jg
fisttpl
or
dec
inc
cltd
icebp
sbb
xchg
cmp
add
clc
nop
and
iret
inc
pop
sub
push
pop
dec
ret
adc
lea
ss
pop
cmp
movsl
loopne
xchg
xor
repz
daa
mov
loop
dec
ror
rcl
fdiv
imul
sbb
sbb
cmp
jl
fsubrl
loopne
loope
inc
into
sahf
mov
shll
lods
fstps
mov
and
fs
addps
fsubs
es
adc
pusha
and
cmp
ljmp
or
jns
adc
push
jmp
repz
out
sti
add
shrl
out
mov
push
call
sub
and
call
xlat
out
gs
pop
lcall
xlat
popf
sar
decl
add
sub
lds
jno
inc
mov
movsl
leave
aam
test
sahf
decl
mov
pop
and
sub
xlat
mov
mov
pop
fnsave
or
inc
fisttps
aas
scas
mov
mov
push
inc
and
xchg
or
mov
push
xor
add
inc
sub
and
inc
cmp
repnz
sub
imul
sbb
shlb
dec
rcll
inc
loope
inc
mov
mov
fcomp
cs
pop
sub
fnstcw
flds
inc
sahf
xor
arpl
dec
pop
fstpt
xchg
xchg
pop
mov
push
loope
push
xchg
fistl
add
fcmovnb
fstpl
ret
fisttpl
xchg
push
mov
inc
nop
jle
add
rolb
add
xor
inc
push
aas
or
pop
sbb
jecxz
push
jnp
pop
out
add
or
add
mov
sub
sub
movsl
std
mov
add
mov
jl
mov
dec
inc
scas
xor
pop
jmp
adc
cmpl
imul
fs
lds
inc
lock
add
xorb
sbb
icebp
mov
cmpsl
dec
add
dec
xchg
gs
shll
add
enter
roll
ret
add
xor
aam
or
add
inc
dec
roll
add
push
jae
dec
test
dec
inc
inc
adc
in
dec
dec
inc
aad
add
scas
or
cmpsl
mulb
sub
or
jb
push
mov
add
inc
inc
and
xor
test
bound
or
rcr
and
bound
cmp
notb
cmp
negl
icebp
insb
les
jns
push
pop
addr16
inc
push
flds
dec
mov
repnz
mov
jnp
inc
jns
ss
or
and
das
fdiv
sub
pop
or
xlat
nop
pop
popa
bound
or
dec
or
push
fcoml
fisubrs
nop
add
lods
std
mov
add
adc
add
neg
cs
xor
push
stos
push
fisubrl
out
adc
fadds
sub
divl
dec
mov
in
add
pop
mov
jbe
sbb
cmp
fsubrp
in
loope
sbb
outsl
call
xchg
adc
add
fs
imul
or
mov
xchg
call
adc
enter
mov
lahf
je
push
mov
lea
nop
cli
pop
add
inc
roll
rcrb
pop
xchg
sti
dec
fcmovnu
mov
inc
or
int3
pushf
jbe
add
mov
or
sbb
imul
adc
jae
or
addb
std
add
inc
inc
adc
scas
inc
rcrb
enter
add
adc
pop
js
daa
loop
add
and
sbb
jno
pop
fistpl
sub
dec
jne
andl
push
stos
fs
lret
adc
xchg
cmp
sub
sbb
sbb
iret
mov
lea
sbb
inc
inc
sbb
push
stos
xor
fmuls
inc
in
jl
in
mov
mov
dec
es
cltd
pop
or
js
cld
loope
orps
pop
or
add
sti
push
sbb
xchg
aaa
fidivrl
pop
stc
adc
inc
sbb
push
add
cmp
cmp
cmp
cmp
and
in
leave
mov
shll
movsb
push
push
stos
push
cwtl
adc
and
sbb
push
leave
shl
nop
ljmp
hlt
daa
or
inc
pop
movsb
push
jecxz
add
lea
movsl
subb
push
out
movsb
mov
in
call
test
imul
mov
shr
adcl
mov
xchg
pop
jmp
jnp
scas
push
adc
cmp
clc
divl
rcrb
mov
rcrb
std
test
or
pop
lea
outsl
sub
add
inc
ss
and
add
xchg
in
push
in
add
cmp
ds
shrb
fnstenv
jmp
cmp
pop
xchg
outsl
cmp
sub
fistpl
dec
fdivl
shrl
xchg
imul
popa
xor
in
fmuls
lea
lods
test
add
ja
jbe
pop
aad
je
lahf
push
jp
xchg
shll
cmp
test
in
inc
loop
jmp
es
inc
sarl
fs
in
xchg
das
in
rclb
subl
xchg
imul
cmp
inc
cmovo
filds
ss
xor
jne
repnz
cld
inc
jg
outsl
inc
out
stos
call
mov
or
cld
sbb
push
inc
cs
jmp
dec
in
sbb
dec
sbb
in
or
shl
cmp
loopne
out
test
cmp
int3
push
sbb
aas
cmp
sub
inc
dec
adc
or
cmp
add
push
rolb
out
rorb
movsl
add
int3
int3
jecxz
and
jge
mov
pushf
add
rorl
push
xchg
xchg
jmp
cmpsb
sahf
xor
xchg
mov
dec
mov
dec
push
jo
pop
lea
fcoms
mov
clc
lock
sahf
cmp
call
fs
ss
insb
mov
or
adc
jl
push
adc
xor
sbb
out
add
sub
sbb
mov
test
outsb
lock
cld
xchg
cwtl
test
loopne
push
jg
arpl
les
test
aam
ja
aad
mov
xor
dec
sub
xchg
out
add
aaa
mov
mov
mov
int3
vpcomub
pop
mov
sub
push
jno
or
pop
push
adc
push
inc
aas
stos
jg
dec
outsb
cmp
push
idivb
ret
dec
sub
stos
sarb
ret
sbb
push
push
cmp
pop
ljmp
cmp
shrb
scas
xchg
inc
inc
xor
mov
mov
add
adc
mov
dec
push
xor
daa
sbbb
or
xchg
cmp
sbb
pop
aam
add
pop
outsl
popa
ljmp
mov
adc
or
dec
mov
jmp
fs
out
enter
jnp
insb
orl
dec
cwtl
mov
cmp
adc
push
cltd
shll
pop
popa
fisubrl
xor
mov
push
das
jmp
ret
stos
div
or
bound
pop
icebp
inc
icebp
cmp
jge
nop
movb
and
push
dec
movsb
push
jmp
sub
jg
jmp
nop
jg
sti
arpl
lods
jmp
sbb
adc
js
mov
xchg
sbb
pop
jmp
arpl
dec
shlb
aaa
test
adc
aaa
or
arpl
cmc
jmp
pop
mov
mov
imul
jecxz
cmpb
mov
sub
loopne
fdivl
cmp
repz
add
adc
imul
ret
push
inc
mov
pop
or
addr16
pop
add
inc
push
push
sbb
add
movsb
push
out
jne
mov
mov
pop
sub
icebp
sub
cld
incl
popl
dec
pop
cltd
dec
sahf
adc
shlw
sub
jb
inc
call
push
es
mov
sbb
lods
outsb
mov
aaa
jo
mov
jne
call
xchg
lock
mov
xor
dec
in
out
lock
dec
cmpsl
lret
scas
ja
dec
stos
inc
std
mov
push
roll
xlat
or
outsl
push
mov
stos
inc
mov
mov
dec
push
test
push
and
out
sub
sub
pop
xchg
cmp
enter
mov
xchg
dec
lock
fs
add
dec
lock
inc
fnstcw
insl
inc
mov
stos
rcl
sbb
or
fdiv
ljmp
jg
js
and
dec
jmp
jns
mov
jne
lahf
aam
mov
push
or
lods
fbld
jecxz
add
mov
sub
pop
int3
icebp
push
inc
dec
loop
inc
dec
fistpll
shrl
test
icebp
ljmp
mov
mov
cltd
aas
cs
dec
xchg
test
xchg
xchg
test
out
lahf
repnz
push
jo
xlat
inc
ret
or
xor
pop
ret
jbe
inc
jb
repnz
push
jmp
sbb
or
in
test
repnz
add
dec
and
mov
mov
xchg
rolb
push
sbbb
push
ficompl
divb
pop
adc
outsb
imul
mov
cmp
adc
pop
subb
mov
imul
scas
movsl
xchg
addr16
repz
xlat
ret
or
lea
out
into
mov
add
dec
push
pop
pushf
dec
mov
push
cs
in
mov
subl
stos
add
cmpb
jp
test
not
cmp
cmpb
mov
cmc
sbb
pop
aas
push
test
add
ret
out
mov
scas
sub
pusha
xor
imul
or
add
xchg
add
movb
inc
iret
mov
jl
xchg
inc
jg
inc
outsl
iret
fdivrl
push
xchg
add
inc
ds
add
mov
mov
cmp
xchg
xchg
mov
pop
push
jmp
sbbb
add
inc
jb
je
add
jae
cmp
loope
dec
test
or
mov
push
push
xor
xor
adc
les
dec
sub
lret
iret
jg
mov
sti
and
xchg
cmc
pushf
add
push
adc
outsb
inc
setl
shrb
jge
fidivrl
or
mov
add
push
pop
inc
add
add
dec
xor
jg
sbb
ret
call
and
insb
cld
mov
stc
movsl
dec
mov
cwtl
add
xlat
pop
pop
dec
jmp
clc
push
shrb
stc
jmp
adc
and
addr16
adc
pop
test
pop
mov
jae
nop
in
sub
push
and
push
adc
mov
mov
sub
pop
dec
js
test
imul
movsl
popa
push
xor
movsb
mov
or
sbb
sbb
or
or
in
push
pop
inc
push
adc
adc
add
xlat
cld
jne
jp
xor
rcrb
stc
and
outsb
cmp
std
jne
pop
pusha
cmpl
jb
pop
or
add
sbb
jo
and
or
xchg
shll
sub
lea
inc
adc
adc
sbb
ds
add
sub
roll
jo
shr
push
mov
or
dec
or
xchg
lret
rorl
test
add
daa
and
in
stc
inc
push
test
clc
stc
lods
push
dec
inc
jb
lods
lods
sbb
scas
cmpsl
and
std
push
test
fildll
mov
outsb
cmpsb
add
shrl
mov
sub
and
inc
popf
mov
or
addl
fdivr
gs
mov
jo
sbb
cmp
enter
mov
clc
out
sub
pop
sbb
lods
lock
mov
push
ds
mov
jne
xchg
jne
sbb
sub
stos
fnstsw
xor
mov
push
push
cmpsl
fcomps
daa
and
dec
imul
daa
hlt
pop
push
sub
sti
popf
test
lahf
xor
shl
ds
adc
pop
cmc
test
lods
movsb
adc
test
lret
dec
clc
lods
cmp
movsl
adc
sub
ret
push
sub
push
sbb
ds
mov
clc
cmpsb
mov
enter
daa
popf
or
gs
daa
daa
imul
daa
insl
outsb
outsl
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
push
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
pop
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
dec
xor
daa
daa
daa
xor
xor
daa
daa
daa
xor
daa
daa
daa
cmp
cmp
daa
daa
daa
cmp
daa
daa
daa
and
and
daa
daa
daa
and
xchg
test
sub
das
bound
lret
iret
dec
push
jbe
pop
add
push
das
or
ficoml
es
nop
xor
adc
call
push
adc
sbb
sbb
aam
pop
cmp
pop
fdivl
xor
dec
push
sbb
divl
xchg
in
arpl
xor
pop
mov
in
pop
mov
xchg
jo
jbe
in
std
cltd
nop
hlt
sbb
push
dec
lods
push
adc
cmpsl
cld
inc
les
jnp
adc
movl
xor
xchg
pop
dec
les
inc
loopne
into
cs
pop
ss
mov
add
or
int3
mov
dec
dec
inc
and
sbb
xchg
sub
pop
or
ljmp
dec
in
or
push
adc
sub
sub
mov
push
push
pop
stc
inc
in
push
mov
in
inc
add
add
push
mov
call
popf
sarb
or
add
push
cmp
and
xor
mov
imul
sbb
inc
fiaddl
mov
gs
and
pop
pop
inc
add
pop
mov
push
xchg
jno
cmpsb
aad
jle
int3
clts
cli
push
popf
add
add
lea
mov
inc
fisttpl
mov
sbb
daa
clc
mov
or
in
and
or
cmpsl
rclb
lret
xor
mov
cmpsb
cmc
stc
add
ficompl
ss
mov
lcall
aaa
pop
push
pop
inc
movsl
xchg
clc
adc
push
push
mov
loopne
mov
test
js
lahf
in
imul
jns
xor
xor
cmp
cmp
pop
xchg
iret
or
pushf
pushf
pushf
mov
test
sahf
dec
or
daa
daa
and
into
or
aas
js
leave
leave
enter
or
in
fs
or
movsb
frstor
int
repnz
or
xchg
xchg
xchg
push
pop
mov
enter
or
js
pusha
loop
mov
enter
and
jb
push
fdivl
push
xor
sub
mov
sub
dec
or
dec
adc
xchg
add
adc
inc
imul
ss
mov
or
sbb
xor
pop
add
fisubrl
dec
popa
jecxz
jae
add
subb
add
sbbl
popa
addb
xchg
cs
inc
xchg
or
mov
test
iret
mov
lods
or
cltd
test
xchg
and
push
fdivrl
jnp
add
pop
sarb
or
jb
mov
sbb
inc
mov
in
jno
jae
pusha
adc
inc
leave
pop
ficomps
sub
les
fisttps
inc
inc
js
add
dec
shlb
inc
inc
arpl
jno
mov
add
fnstenv
jno
jmp
or
mov
pop
dec
insb
outsl
xchg
xor
pop
add
cltd
push
stc
add
enter
add
jne
andb
imul
adc
jo
pop
or
and
arpl
push
xor
call
addr16
test
mov
add
fnstsw
addr16
dec
add
imul
sub
xchg
add
daa
jae
add
add
push
pop
into
daa
add
adcb
mov
mov
rcr
test
or
adc
sbb
leave
mov
outsb
sub
enter
push
dec
inc
jecxz
outsb
cwtl
mov
and
mov
push
and
arpl
sbb
jmp
outsb
jne
and
push
es
dec
rcrl
sbb
gs
mov
mov
add
inc
cmc
push
outsb
lea
cmp
dec
leave
fldenv
stos
add
orb
dec
imul
mov
pop
xchg
cmovne
jne
jle
inc
shl
sub
mov
push
lock
inc
add
scas
rorb
inc
jmp
test
add
xor
js
inc
add
and
add
mov
add
gs
jge
pusha
out
dec
aam
mov
adc
inc
or
push
dec
pop
ja
adc
pop
mov
sub
enter
in
enter
loop
adc
fsubs
push
lods
es
imul
adc
xor
xchg
add
or
lock
stos
pop
and
jo
xchg
ss
or
fdivrl
xchg
push
nop
dec
add
and
in
xchg
push
scas
insl
or
clc
add
lods
cmc
dec
mov
pushf
xor
cmp
neg
or
cs
mov
cmp
xchg
xor
push
pop
mov
push
push
push
adc
es
repz
sbb
mov
ret
sub
add
lret
or
xchg
cmpsl
cmp
adc
add
loopne
out
jmp
add
pop
sbb
mov
push
pop
xchg
movb
jl
shrb
mov
mov
or
add
pusha
xor
test
testb
mov
or
je
adc
inc
loopne
stos
add
pop
xchg
aam
mov
add
add
cmpsb
sbb
jmp
adc
push
ljmp
pop
into
mov
sub
cmp
test
sbb
daa
xchg
icebp
xchg
and
push
and
pop
gs
es
test
je
push
imul
mov
insl
mov
dec
add
add
movsb
push
and
pop
add
jl
rolb
mov
jmp
and
fdivl
pop
imul
adc
cli
xor
xchg
mov
or
test
sbb
icebp
mov
fwait
mov
push
inc
xor
adc
cmp
aaa
dec
push
arpl
jle
and
sbb
xchg
test
pop
or
std
fnstcw
or
insb
push
enter
jmp
or
and
inc
cmp
jmp
dec
add
pop
inc
lock
add
enter
push
test
adc
push
xor
jb
clc
xor
jo
test
scas
push
add
xlat
aaa
dec
addb
mov
fists
outsl
imul
push
out
mov
push
inc
push
sbb
fisubl
push
cmp
out
mov
inc
ret
dec
push
inc
ss
mov
xchg
jbe
data16
cmpsl
ja
pop
fwait
push
inc
adc
lock
push
scas
push
inc
cs
inc
xor
jg
jb
loopne
push
dec
adc
inc
addr16
inc
or
imull
mov
push
push
ja
notb
adc
nop
or
nop
add
or
jle
jg
out
dec
and
or
fldl
mov
je
xchg
mov
adc
lea
sahf
imul
adc
mov
cmp
jbe
lcall
scas
xchg
mov
or
jb
test
fistps
int3
push
das
fldl
imul
inc
ret
jle
xchg
mov
and
pop
roll
inc
jp
cli
dec
repz
pop
out
dec
cld
lcall
xchg
outsb
inc
mov
outsb
imul
ret
dec
inc
sub
test
push
mov
mov
fstl
pop
sbb
aas
xor
xchg
cmp
in
sti
add
inc
dec
fnstenv
pop
pop
leave
sbb
pusha
pop
dec
popf
sbbb
lahf
pop
fistps
lahf
inc
mov
sub
and
dec
es
mov
xchg
mov
sahf
gs
pushf
push
add
xchg
scas
xchg
xchg
cmc
nop
or
xor
cmp
mov
test
iret
aas
and
push
mov
or
and
dec
cs
aas
shlb
sbb
push
xlat
pop
inc
push
imul
xchg
mov
test
xchg
add
rorb
pop
cmp
outsl
sahf
imul
or
jo
addb
or
lret
gs
adc
cmpsl
mov
out
dec
lret
adc
in
es
ss
lea
je
sbbl
cmp
sub
add
int3
icebp
cmpsl
xor
data16
pusha
lret
je
mov
adc
movb
imul
sbb
or
add
insb
or
cmpsl
mov
xchg
cs
or
sub
jl
xor
psadbw
nop
je
out
push
or
scas
xchg
adc
mov
mov
comiss
push
pop
insl
add
sti
add
sub
fimuls
dec
fneni(8087
or
xadd
sub
iret
lock
pusha
int
push
mov
fucomip
cs
icebp
mov
outsl
push
jo
jae
add
or
je
sbb
or
push
nop
mov
andl
fwait
int3
les
nop
cmp
mov
jo
ficoms
inc
je
pushf
sub
push
out
push
push
or
dec
negb
lods
insl
inc
or
push
push
pop
add
ja
jo
push
dec
outsl
jo
je
mov
testl
lret
or
frstor
nop
and
cmp
sbb
adc
xor
pop
idivb
aas
mov
loopne
loopne
xlat
pop
out
pop
adc
pop
push
imul
add
rclb
je
pop
js
add
lds
pop
in
mov
into
cwtl
or
push
sub
dec
lds
iret
pop
nop
pop
bound
add
jp
in
or
dec
mov
jp
fimuls
sbb
mov
pop
in
cmpsb
inc
repnz
inc
outsl
mov
mov
jae
and
and
adc
decb
or
add
lods
scas
rclb
push
inc
sub
insl
mov
pop
int
addl
mov
push
nop
negb
add
push
scas
movsb
sbb
hlt
rcrl
and
imull
dec
arpl
xchg
stos
movsb
add
insl
mov
imul
mov
ret
and
dec
sbb
lods
mov
add
rol
adc
add
negb
and
push
in
or
iret
pop
int3
ss
pushf
insl
inc
or
ret
movl
popa
and
sub
movsb
and
mov
or
pop
push
icebp
sub
andl
add
push
ret
dec
fs
mov
xchg
insl
lods
fcmovnbe
jns
dec
out
inc
xchg
sbb
pop
mov
jnp
add
in
test
and
mov
dec
dec
test
pop
add
jl
and
or
add
add
dec
sub
xor
pop
stos
mov
rcl
and
mov
cmpsl
inc
xchg
xor
pop
insb
and
jl
andb
push
aad
icebp
push
sub
mov
test
nop
inc
mov
mov
aam
fcomps
mov
xchg
dec
scas
jnp
push
inc
pop
sbb
imul
mov
sbb
mov
iret
jns
test
and
lock
pop
sbb
mov
push
jb
adc
movsl
lds
jo
dec
dec
je
rol
mov
cs
cmp
inc
pop
lds
pop
pop
adc
or
lods
mov
js
inc
das
push
adc
xchg
dec
push
jae
insl
cmp
push
jmp
mov
nop
jbe
cltd
pusha
mov
cli
jmp
add
repnz
sbb
sub
pop
mov
or
cld
addb
arpl
xchg
mov
nop
enter
sahf
negb
dec
add
fxtract
add
pop
jl
push
hlt
and
sbb
or
mov
fdivrp
push
and
fs
mov
pop
sbb
and
jbe
push
test
adc
nop
mov
pop
add
xor
push
and
sbb
outsb
xchg
jp
push
das
add
add
enter
pop
push
daa
sub
lods
xor
daa
add
sbb
jns
push
repnz
mov
ljmp
and
dec
sbb
xchg
pop
pop
bound
add
daa
insb
jnp
je
imul
stc
sbb
add
add
sbb
or
mov
cmp
jno
popf
sarb
fcomps
loop
add
add
sbb
decb
ljmp
add
movsb
jnp
push
jl
fcoms
out
int3
push
add
fwait
pop
fsubrl
clc
push
sbb
pop
dec
dec
repnz
jge
jle
ljmp
mov
dec
sub
enter
jge
sub
icebp
dec
push
fsubrl
dec
movnti
and
jg
leave
mov
add
insl
js
jg
pop
pause
adc
xorb
add
sub
es
add
mov
mov
jg
inc
icebp
pop
loop
lock
pushf
subb
dec
mov
insb
sbbl
insl
or
or
test
inc
jne
or
adcb
mov
xchg
fidivs
push
inc
popa
jo
int3
ficoms
adc
test
or
cmp
push
scas
or
dec
pop
pop
repz
int3
or
or
fbld
arpl
or
aas
aaa
and
lods
aaa
add
notb
push
inc
sub
cmpsl
jg
sub
add
cltd
pop
mov
aad
xor
out
push
xchg
into
dec
inc
dec
loopne
inc
rorl
sbb
adc
or
fisubrs
fs
es
adc
es
adc
xchg
xchg
cmc
sbb
inc
xchg
imul
jae
sbb
or
lods
mov
sub
aas
or
cmp
sti
fs
push
and
push
ljmp
out
dec
outsl
inc
orb
addl
shlb
xchg
mov
jge
xchg
fstps
cmpsl
dec
sbb
add
popa
push
jp
or
int3
or
push
xchg
push
sub
sbbl
into
ss
test
inc
push
sub
cs
or
or
jnp
or
aas
and
pop
xor
ds
movsb
add
add
dec
scas
adc
ja
dec
push
add
jl
inc
adc
call
add
lret
das
lret
xchg
pop
out
prefetch
les
add
lldt
lock
xor
adc
xorb
jg
scas
stc
mov
adc
in
unpcklps
dec
xor
add
in
pop
pop
decb
scas
loop
push
bound
jg
lret
lahf
dec
bndstx
shlb
nopl
ds
add
mov
jg
xor
nop
nopl
aaa
sub
das
pop
push
lret
pandn
das
and
and
insb
mov
pop
sti
add
xorb
push
dec
add
daa
or
cmpsb
fwait
addl
jb
add
bound
mov
and
pop
fdivrs
jns
sbb
xor
pop
or
xor
pop
or
test
in
xor
xor
retw
pop
xor
pop
rorl
leave
add
insb
test
or
rcrb
shrl
cmpb
sbb
xchg
popa
int3
ret
sub
fldl
pop
fildl
pop
lcall
pop
lea
and
or
cs
les
mov
sub
cmp
mov
and
andb
or
jns
push
or
loopne
cmpsl
or
fs
or
add
adc
jo
andl
shrl
mov
in
or
pop
or
or
clc
adc
outsl
add
push
test
in
addb
xchg
dec
insb
push
dec
jae
sub
lcall
push
jecxz
push
inc
push
lock
mov
sbb
scas
push
test
fists
sbb
enter
mov
pop
sub
and
insb
ja
inc
xchg
insl
aaa
mov
adc
shll
inc
mov
mov
push
lret
fwait
sbb
add
adc
and
xor
loope
je
pusha
and
sbb
popf
inc
pop
add
and
or
lods
and
xchg
or
mov
in
stos
mov
rorb
leave
cmp
xor
fs
cmp
ja
mov
inc
inc
dec
add
ja
cmp
jo
cmc
mov
sbb
add
mov
aaa
mov
or
in
mov
pop
xchg
add
dec
sub
add
scas
pop
xor
sub
arpl
roll
mov
dec
lret
orb
mov
mov
data16
add
mov
inc
dec
and
jae
cmpsb
and
mov
add
movsb
mov
xchg
pop
or
add
mov
xchg
xchg
xchg
je
mov
movntps
cmc
and
sbb
pop
pop
sub
xor
push
sbb
lea
mov
shl
and
adc
or
je
lcall
sbb
jno
inc
imul
jne
into
push
mov
lcall
push
cmp
je
add
bound
jnp
das
cmp
sbb
lods
fisubs
mov
add
mov
nop
push
or
je
out
xor
aas
fdivrp
xor
int3
xchg
push
pop
xorl
mov
iret
roll
mov
xor
int
clc
xor
jns
out
mov
in
hlt
popf
in
sarl
push
lods
mov
xor
ret
les
mov
sub
add
sub
or
call
cmp
mov
inc
inc
inc
mov
sub
dec
lods
inc
xor
jl
pop
lods
sub
xchg
cmp
out
mov
aas
cmp
or
xlat
clc
push
add
cmp
push
mov
mov
movups
bound
xchg
das
pop
adc
mov
push
aas
mov
adc
pop
push
add
movhps
pop
ds
cs
mov
sbb
mov
addr16
das
sbb
fistps
divps
in
fisttpll
nopl
jb
add
and
sub
pop
and
jo
add
xchg
jmp
or
xor
inc
inc
dec
popf
fbstp
jl
mov
test
ss
arpl
inc
add
pusha
rorl
xor
adc
sub
nop
shll
stos
and
or
lret
add
mov
xchg
stc
cmp
sbb
sti
dec
shrl
inc
sbb
insl
and
shlb
xchg
xor
test
insl
adc
test
insl
add
mov
pusha
rorb
mov
push
sbb
and
sbb
mov
inc
mov
into
push
pop
sub
add
fstpl
mov
push
add
inc
andl
sbbl
ja
sbb
enter
out
push
push
in
push
sbb
cmp
call
and
pop
and
adc
stos
adc
jno
stos
or
call
or
arpl
pushf
or
add
dec
sbb
in
adc
push
adc
in
mov
enter
lea
arpl
incb
js
lock
adc
test
jmp
divl
aaa
and
add
push
lock
fmuls
in
xor
push
xchg
in
xchg
add
imul
mov
sub
jl
add
aad
sahf
mov
lock
jp
aam
js
iret
pusha
mov
or
sti
xchg
push
pop
cmp
jo
xor
je
adc
and
adc
out
or
adc
pop
mov
xchg
mov
dec
adc
dec
or
je
push
insl
outsl
std
adc
ja
mov
add
and
add
call
mov
lea
or
push
fildl
pop
cmovs
addb
je
shlb
ja
popa
push
sbbb
cmp
sti
es
jecxz
inc
push
test
mov
jb
pusha
fs
mov
xor
fcmovnu
adc
int3
add
sub
iret
lret
cltd
cmpsb
inc
dec
mov
es
sarb
pusha
mov
fsubrs
jbe
mov
jbe
add
push
aam
push
inc
push
popf
fsubl
out
loopne
mov
and
in
inc
test
cmpsb
pop
cmp
cmpsl
aaa
mov
test
pop
dec
test
mov
divl
sarb
push
pop
das
pop
or
rorb
mov
jo
mov
dec
sub
push
repz
push
addb
and
adc
das
xchg
enter
or
dec
add
lea
aam
or
add
in
pop
dec
inc
dec
sti
orl
mov
dec
shrb
lret
dec
pusha
std
jmp
test
pop
adc
inc
dec
movsl
pusha
ret
xchg
cs
dec
cmp
dec
or
mov
dec
jno
sbb
aad
add
gs
mov
mov
orl
xor
mov
and
push
jb
adcb
mov
add
xchg
mov
add
add
jbe
lret
xor
mov
addr16
xor
add
add
dec
stc
or
roll
jg
rcrl
lahf
scas
add
sub
mov
pop
out
and
xlat
es
aad
dec
orl
xor
ret
dec
xor
xor
xor
lcall
jno
inc
insl
jo
jp
or
and
cmp
xchg
pusha
and
cmp
imul
sub
sub
out
stos
mov
mov
jne
ret
push
sub
inc
or
pushf
dec
xor
sahf
test
orb
adc
and
adc
sbb
add
mov
sub
push
fs
arpl
push
dec
mov
push
push
push
jno
jge
rolb
xchg
pop
leave
xor
or
mov
dec
fisttpl
and
lods
dec
sbb
sbbl
pop
pop
push
xor
pusha
mov
ja
mov
mov
dec
iret
xor
fstpl
das
testb
or
inc
push
mov
dec
fs
int
add
push
or
and
jnp
cmpsb
sub
mov
xorb
dec
jae
rol
push
mov
loopne
cmpsl
sub
add
or
cmc
push
lods
insb
mov
fwait
or
jo
or
jge
sbb
ret
jno
push
xor
pop
jbe
icebp
add
enter
icebp
fs
nop
mov
jne
sub
push
mov
leave
ja
push
add
test
das
pop
ds
mov
mov
inc
inc
jg
cwtl
into
xor
js
mov
add
xor
jo
push
jbe
sbb
xchg
je
xor
or
cmp
inc
outsb
out
pop
sub
xor
dec
rcrb
jnp
inc
or
out
insb
and
out
or
faddl
out
xor
popa
data16
ficoml
out
adc
adc
and
jbe
xor
pop
pop
lahf
adc
xlat
mov
insb
pop
roll
pop
or
sbb
add
fwait
jne
mov
push
das
rorb
dec
cmp
xchg
mov
inc
mov
mov
mov
test
push
ret
pop
movsb
push
add
repnz
cmpl
mov
cmpsb
mov
out
push
lret
push
leave
cs
nop
fisubrl
mov
push
pusha
rcrb
int3
cli
clc
cmpb
dec
push
insl
shrl
push
mov
ss
loope
popa
icebp
loope
fdivl
xor
fwait
add
sub
mov
shll
mov
adc
cmpsb
mov
add
cmp
cmp
leave
das
addr16
adc
enter
push
mov
jg
scas
dec
push
shll
popf
fmull
fwait
lret
add
push
cmp
int
icebp
jno
das
scas
paddusb
mov
push
adc
mov
fcoml
push
aas
jnp
pop
test
adc
sub
aam
test
arpl
ss
lods
or
mov
mov
lods
mov
pop
in
lods
mov
cs
gs
mov
mov
pop
push
and
popf
roll
insb
popf
rorl
pop
and
arpl
pop
rol
jl
inc
and
addr16
data16
test
adc
or
out
push
pusha
addb
xchg
adc
popa
cs
dec
xchg
push
loope
movsl
pop
test
push
push
gs
lods
mov
push
cmp
movb
cmp
xchg
clc
mov
sbb
dec
add
or
int
sub
adc
lods
inc
mov
nop
pop
fildl
jbe
cs
inc
test
cs
add
inc
dec
pop
sbb
test
mov
enter
jne
push
pop
or
enter
adc
enter
adc
ret
outsl
cmc
and
or
int3
cmp
pushf
sarl
jl
js
inc
add
push
sbb
into
xor
inc
js
push
cltd
neg
aad
xchg
cltd
int3
loop
dec
outsl
cwtl
pop
push
sub
js
lret
les
or
roll
js
lock
jne
mov
enter
nop
cmp
mov
pop
mov
cmc
pop
ja
popa
inc
into
adc
pushf
push
and
mov
das
fs
sbb
je
mov
mov
fstpt
and
or
test
popa
adc
mov
adc
lock
lret
lahf
dec
fldt
or
jne
jb
mov
enter
or
cwtl
pop
lahf
pop
jno
aad
sbb
mov
pop
lahf
pop
test
outsl
iret
es
pop
jbe
or
ficoms
js
mov
push
les
outsl
and
inc
out
fstpl
fs
nop
push
outsl
mov
mov
aam
inc
or
push
adc
push
repnz
ficoms
sub
cmpb
push
fs
pop
xchg
jecxz
dec
sbb
in
fsubs
or
dec
xor
lret
lret
xchg
pop
pop
jg
mov
xchg
xchg
cmpxchg
jmp
pop
sbb
pop
sarl
pop
push
pop
pop
mov
pop
cs
add
rcrl
mov
bound
dec
pop
loope
mov
xor
push
outsl
outsl
pop
sub
inc
adc
push
xor
stos
cs
insb
lahf
adc
push
mov
pop
mov
lahf
and
frstor
mov
push
gs
pop
inc
nop
gs
dec
adc
and
or
pop
sub
xchg
test
inc
lahf
pop
pop
mov
xchg
arpl
scas
inc
pop
scas
jl
inc
loop
inc
orb
ficoml
clc
or
inc
test
ret
nop
cmp
xlat
pusha
addb
das
push
ja
pop
cmp
popa
jbe
sub
xchg
enter
ret
das
inc
or
add
add
xor
or
test
fcomps
adc
cmp
leave
insl
scas
pop
in
movzwl
pusha
push
jmp
adc
andl
or
mov
add
daa
or
adc
bound
adc
lods
lods
jns
add
cmp
es
rclb
shll
sarl
or
and
movsb
std
sub
arpl
jp
push
jg
mov
and
aaa
dec
pop
jb
sub
pop
fiaddl
into
or
lods
mov
insl
add
or
sub
in
jg
sub
test
xchg
dec
jo
stos
js
pop
jecxz
pop
pop
in
inc
pop
cmp
pop
pop
inc
inc
and
pop
pop
inc
inc
rclb
insl
repz
push
pop
incb
add
test
fldl
ret
data16
xor
adc
add
jne
pop
mov
or
push
daa
mov
pusha
mov
popa
movsl
int3
xchg
mov
pusha
inc
push
icebp
cmp
mov
push
and
lea
outsb
pop
pop
add
dec
orb
mov
xchg
fidivs
data16
mov
dec
icebp
mov
sti
in
dec
insl
sbb
jne
cmp
xor
adc
pop
or
sub
fsts
ljmp
popf
xchg
sub
push
ja
movsb
aas
popf
xor
aaa
add
shll
decl
xchg
out
cmp
or
and
push
hlt
dec
iret
jg
xchg
cli
and
jno
imul
xor
push
cmpsl
xchg
loopne
dec
rclb
sub
lock
aam
shll
xchg
andb
jne
inc
sub
sbb
inc
data16
aad
dec
push
rcll
lcall
and
push
sarb
xchg
inc
sbb
mov
pop
test
rolb
enter
adc
rorb
dec
inc
rcl
push
hlt
mov
adc
and
push
jmp
addr16
adc
add
adc
pop
hlt
sti
inc
and
mov
lods
adc
and
add
mov
sbb
fadds
add
ja
pop
gs
adc
lcall
cld
adc
adc
mov
pop
sarl
or
test
enter
gs
inc
or
loope
call
data16
pop
jmp
aas
inc
lret
push
lds
sub
adcl
jg
push
jg
mov
in
dec
adc
lea
adc
pop
pop
adc
dec
jb
in
or
adc
pop
subl
bound
or
or
jo
mov
inc
dec
outsl
dec
xor
jno
fwait
pop
outsb
aaa
dec
push
in
pushf
dec
cmp
push
dec
xor
adc
out
lret
pop
in
xor
push
adc
les
call
push
insb
popa
scas
xchg
insb
jno
mov
pop
jb
add
popf
xchg
cmpsl
dec
outsb
and
pop
stos
sbb
ja
jb
push
mov
ja
inc
xor
pop
subl
popa
ja
out
mov
inc
popa
out
add
add
mov
adc
addr16
xor
cmpb
lcall
imul
fidivrl
insl
ja
insl
ret
ret
dec
push
fstpt
push
xchg
bound
shl
shlb
movsl
inc
les
xchg
mov
push
mov
lea
shld
dec
insl
jnp
or
inc
xchg
out
fnstenv
push
jb
je
or
popa
les
xor
or
pop
dec
hlt
fs
andl
ja
xlat
pop
pop
fs
add
arpl
stos
js
dec
or
or
jnp
insl
je
xchg
push
pop
or
cs
xchg
add
or
push
inc
aaa
adc
or
mov
adc
pop
pop
incl
push
roll
mov
inc
stos
cmp
push
daa
jne
imul
push
sub
or
pop
dec
stos
sbb
or
stos
ljmp
bound
xor
push
loope
dec
jecxz
jns
dec
pop
aas
add
insl
push
rcrl
dec
out
fcmovnb
fnsave
push
or
mov
xor
clc
mov
mov
mov
dec
xchg
mov
inc
push
add
pop
add
xchg
lahf
pop
inc
test
jp
push
sbb
xor
mov
push
push
scas
mov
testl
pop
mov
pop
cmpsb
mov
mov
adc
scas
jle
adc
adc
mov
cs
push
push
push
mul
test
dec
stos
inc
xchg
pop
clc
fisubs
mov
mov
mov
xor
xor
cs
mov
sarl
outsb
dec
jp
jnp
cs
dec
dec
push
mov
push
xor
dec
sbb
je
dec
sti
scas
push
addr16
cmp
mov
push
inc
push
outsl
xor
or
stos
push
mov
jno
ret
es
sub
adc
jl
out
inc
ss
cs
pop
dec
in
sbb
dec
inc
dec
dec
pop
pop
rcrl
adc
dec
inc
inc
jp
addr16
add
repz
jno
and
jg
mov
mov
sar
push
in
test
movsb
push
push
xor
xor
xchg
mov
cmpl
cmpsb
mov
loopne
add
add
inc
lcall
add
mov
fisttpll
push
cmc
push
mov
xchg
movsb
or
divl
inc
stc
adc
jl
cmp
mov
test
cmp
pop
ds
or
xor
add
push
dec
testl
icebp
int
orl
fdivs
mov
add
test
add
es
sbb
test
pop
lods
cld
lea
mov
add
or
pop
cwtl
sub
aaa
pop
mov
jmp
dec
xchg
adc
inc
fistps
lahf
js
popf
xchg
add
fs
or
das
push
dec
sub
xor
mov
arpl
and
sbb
adc
jo
in
mov
fstl
sbb
mov
fnsave
imul
sti
movsb
faddl
inc
cmp
fisubs
adc
adc
mov
or
mov
jae
sub
notb
jmp
pop
sarb
push
sbb
lock
or
iret
mov
or
add
mov
paddq
sub
or
sbb
mov
mov
dec
loope
cmpsl
mov
loopne
scas
xor
inc
jmp
inc
lahf
leave
loope
mov
into
cmp
fistl
pop
dec
and
aad
scas
adc
xchg
sbb
cwtl
add
cmp
jmp
loop
outsl
cmpsl
mov
nop
xor
xor
inc
cmp
sbb
shlb
movsl
or
addl
cmp
push
jne
add
cmp
mov
test
addb
loopne
mov
xchg
and
addr16
mov
roll
and
les
movsb
inc
clc
clc
ret
das
or
pop
add
rcr
cmp
loop
shr
std
adc
mov
mov
addb
dec
jge
fwait
out
cmpsb
add
es
test
inc
add
in
push
push
or
or
stos
jp
out
jne
or
add
sub
push
push
pop
ss
test
mov
xorl
mov
sbb
pop
pop
dec
pop
add
add
std
mov
xchg
cmp
iret
cmp
pop
mov
clc
fsts
rorb
fldenv
div
in
pop
xor
sub
je
pop
mov
xor
add
orl
gs
jne
mov
nop
adc
orb
and
rdmsr
cmp
sbb
and
jo
es
inc
sbb
sbb
dec
pop
fadds
push
leave
sbb
dec
rcl
adc
mov
push
xor
neg
mov
pop
jl
data16
xor
rorb
test
add
inc
xor
cmp
je
cmp
pop
mov
sahf
adc
loope
xchg
jle
insb
and
fcomps
mov
push
in
xchg
in
int3
sub
push
inc
push
out
inc
jno
and
jg
cmp
in
add
or
adc
outsb
mov
sbb
mov
mov
inc
movsb
dec
push
inc
mov
dec
call
xchg
sbb
in
add
push
imul
lret
push
and
rcrb
rolb
mov
dec
cmp
loop
mov
jo
jl
jle
stc
add
jbe
push
mov
mov
mov
mov
mov
push
lret
lcall
or
jo
or
or
popa
mov
push
rclb
dec
aam
mov
cmpsl
daa
test
js
movb
mov
sbb
stos
mov
stos
pop
dec
daa
cmp
xchg
cmp
es
jp
adc
add
jp
cwtl
lock
add
insb
je
mov
jp
jp
cmp
test
rolb
sbb
add
jnp
mov
movl
imul
sbb
nop
loopne
adc
in
adc
lock
sahf
dec
or
xchg
adc
push
inc
jl
test
adc
jp
into
xor
call
sahf
xchg
xchg
or
pop
jg
cmpsb
filds
popf
or
mov
jmp
push
andb
push
mov
xchg
insb
test
test
ret
fadds
mov
xchg
sbb
jb
scas
mov
inc
jns
sbb
push
push
push
std
push
enter
adc
sub
and
aaa
push
daa
inc
popf
in
pop
adc
adc
ficoml
jb
test
int3
ljmp
push
in
and
cwtl
jmp
cwtl
cmp
push
or
mov
xor
testb
imul
outsl
dec
adc
push
addr16
je
inc
cmc
nop
sub
nop
jle
pop
enter
dec
in
repnz
jp
mov
cmpb
or
and
dec
or
in
dec
dec
adc
pop
cmp
das
mov
xor
stc
loope
mov
outsb
rolb
mov
cmpsl
lods
adc
cmp
sbb
jo
fimull
adc
add
scas
out
outsb
movsb
jp
popa
xchg
rclb
jno
in
es
rolb
rclb
xor
push
pop
jl
mov
add
cld
fstpt
xchg
inc
scas
push
adc
mov
loop
dec
out
popa
mov
out
cmovl
or
adc
jo
push
addr16
sbbl
movsl
mov
test
push
nop
cmp
xchg
orb
aam
sbb
outsl
inc
aas
push
hlt
loope
pop
sbb
adc
sbbb
add
sub
in
and
fsubr
lds
or
sub
arpl
xor
int
frstor
adc
sbb
loope
push
inc
xor
in
jp
xor
lea
or
call
cmp
cmp
das
incb
push
mov
repz
or
add
xor
xlat
loope
mov
jnp
clc
dec
adc
and
pop
push
nop
sbb
add
sub
xor
mov
arpl
pop
cmp
dec
dec
add
jne
lea
or
add
add
ret
mov
or
sbb
es
rolb
in
cmp
imul
pop
or
inc
insl
orb
nopl
inc
push
lock
les
mov
mov
call
cmp
notl
push
adc
lret
mov
xorl
ja
inc
dec
lea
xor
int3
jne
mov
dec
pop
cmpsl
add
mov
sub
lods
pop
mov
and
xchg
mov
rol
ret
outsl
and
sbb
iret
fdiv
and
and
mov
jg
add
pop
or
add
add
and
xchg
sbb
int3
sub
movsl
push
jb
inc
or
les
and
sahf
jns
cmp
sub
jae
pop
cmp
jne
sub
adc
or
outsl
sbb
sar
fcompl
push
imul
shll
xor
sahf
xor
jo
mov
sub
cs
fadd
adc
std
jne
aad
and
cmpb
daa
inc
push
movb
push
push
je
rcr
xchg
push
add
pop
shlb
out
negl
push
jge
push
xchg
jne
push
fsts
inc
add
faddp
inc
xor
push
ja
sarb
sbb
mov
scas
push
sbb
mov
test
mov
push
xor
loope
sbb
pop
dec
cmp
push
fmuls
cmp
out
mov
insb
add
jmp
push
add
lret
jno
mov
adc
cltd
inc
and
cwtl
mov
add
push
mov
iret
jge
mov
leave
cmpsl
or
push
push
push
mov
push
mov
enter
or
dec
rorl
or
xor
push
jb
loop
ja
sub
push
push
inc
or
adc
or
popa
pusha
dec
in
ret
sub
incl
int3
jns
adcb
nop
mov
sarl
inc
sub
xchg
sbb
fwait
mov
scas
aad
add
das
sbb
mov
cmp
add
fcoms
mov
fsts
loopne
push
or
or
mov
adc
je
popa
sbb
rorl
sub
daa
in
movl
in
sub
ljmp
xor
or
add
xchg
movsb
push
or
sub
mov
add
push
jo
pop
hlt
inc
andb
sbb
out
lock
or
pusha
pop
pushf
mov
add
mov
push
inc
dec
subl
jns
sub
sub
xchg
ja
ja
jb
xor
fs
enter
mov
and
add
adc
dec
scas
mov
jns
pop
das
inc
mov
pop
jns
pop
ret
adc
sub
mov
ret
aaa
sarb
movb
rorb
push
push
stc
sub
loopne
inc
pop
inc
cmp
mov
clc
cmp
xchg
pop
orl
mov
scas
icebp
sub
push
rcrb
mov
add
inc
test
imul
mov
push
fstpl
mov
mov
mov
in
mov
popa
push
push
mov
add
xchg
push
cmp
in
mov
out
jmp
lea
xchg
pop
add
mov
in
repz
dec
dec
leave
jno
test
xchg
or
inc
stc
je
sbb
testb
xor
xchg
adc
push
pop
roll
or
js
sub
clc
rolb
fnstcw
fists
pop
flds
pop
add
cmp
inc
xchg
ss
mov
mov
push
or
inc
add
adc
xor
sahf
hlt
imul
xchg
out
jo
fstpl
movsl
lret
test
add
rorl
pop
ret
jmp
sbb
movsb
pop
pop
mov
cmp
loopne
xor
sbb
loope
adcl
push
sbb
lret
xchg
mov
xlat
ret
xor
push
xchg
jb
xchg
sub
addr16
xchg
fiadds
dec
lahf
ljmp
test
ret
cmpsl
sarb
jl
xor
push
dec
mov
shlb
jl
ficoml
pop
les
xor
push
jmp
or
add
sub
in
jo
sub
or
mov
jl
daa
dec
jae
pop
dec
dec
add
cld
not
and
cli
cmp
shlb
add
cmp
loope
je
mov
insb
and
or
mov
or
bt
push
pop
fdivrs
insb
pusha
subb
adc
pop
cmp
push
add
push
andb
sub
orb
int3
movsl
flds
push
sbb
push
stc
out
adc
shll
sbb
incb
add
cmp
je
test
daa
movsb
addb
xchg
lods
sub
push
cld
cmpl
leave
push
jo
add
inc
push
add
pop
imul
les
sub
adc
fs
nop
iret
add
inc
imul
nop
sbb
mov
pop
test
mov
daa
sbb
jo
adc
addb
jne
mov
push
adc
xor
cs
add
add
dec
inc
cmp
push
cmp
push
adc
std
lods
aas
scas
xchg
jecxz
add
and
or
push
jnp
testl
out
push
sbb
add
cmp
push
and
orl
adc
or
subl
mov
sbbb
mov
shll
dec
mov
or
clc
ss
sub
icebp
imul
inc
sbb
dec
xor
mov
das
lea
pushf
or
add
mov
inc
mov
and
cmp
inc
addr16
dec
dec
xor
aas
int3
outsl
hlt
test
dec
or
ss
xchg
pop
dec
loopne
int3
push
push
push
push
cmpsb
shrl
push
add
add
daa
cmp
add
bound
add
fwait
mov
imul
in
pop
pop
mov
bound
jbe
clc
movsl
scas
add
ljmp
jae
jbe
inc
fstpl
sarb
adc
pop
push
shlb
mov
cld
cmp
fcoms
adc
adc
movsl
mov
cld
cmp
push
jo
push
rorb
and
pop
mov
push
or
mov
add
movsl
push
decl
je
dec
add
shll
fnstcw
inc
push
add
cwtl
xchg
or
fcoml
push
sub
pop
icebp
or
cwtl
xchg
testb
cmp
adc
adc
mov
xchg
mov
xchg
cmp
xchg
pop
and
imul
clc
and
jmp
mov
cmp
test
and
jne
cwtl
push
addr16
or
sub
pop
sub
jo
mov
sub
and
push
sub
insb
insl
mov
jns
pop
push
arpl
xor
dec
add
sbb
inc
shrb
add
push
std
les
mov
pop
loopne
movb
mov
movsl
movl
stos
dec
inc
ss
out
rorl
dec
rcl
rcrb
pop
call
add
lfence
lods
sarl
cmpsb
enter
sbb
pushf
mov
loope
xchg
lea
add
dec
pop
add
testl
add
or
aam
add
mov
adc
inc
cmp
aam
cmp
or
mov
loopne
sub
xchg
xchg
mov
add
mov
cmp
pop
pop
push
inc
dec
jne
fstpt
cmp
sub
pop
xchg
aam
pop
push
sbb
or
pop
mov
jae
adc
enter
push
test
jmp
adc
mov
hlt
dec
js
jle
mov
psubsb
add
dec
jns
jmp
add
and
mov
dec
cmc
mov
ret
mov
jmp
dec
idiv
movw
add
cli
add
cld
push
or
pusha
call
addb
fwait
push
ret
jnp
fiaddl
mov
test
or
enter
cld
rolb
jne
ds
add
xchg
inc
movzwl
icebp
std
lea
xor
push
cs
dec
pop
ss
jmp
addr16
data16
or
rorl
orl
mov
add
cmp
int3
mov
cmp
stos
jl
js
push
addr16
icebp
inc
das
dec
sbb
or
mov
fistl
in
or
jb
test
mov
pop
sub
push
add
sbb
pop
inc
cmp
add
push
pop
clc
sub
loopne
das
inc
fwait
xchg
and
or
dec
jae
and
mov
dec
mov
pop
insb
dec
mov
cmpl
shlb
sub
adc
inc
subb
test
add
sbb
jae
and
adc
pop
pusha
sub
lods
shll
dec
aaa
sbb
movsl
or
rclb
or
push
push
movsl
sub
and
popa
pop
je
inc
push
outsl
push
dec
test
inc
add
or
add
cmpsb
sbb
mov
test
xchg
sti
sahf
addl
cmp
rolb
rcrb
loopne
sbbl
pop
loope
jecxz
pop
sahf
adcb
xor
shrb
add
xchg
adc
inc
movsb
fdivrs
jge
fldcw
add
addb
add
aaa
bound
enter
xchg
ds
adc
mov
pusha
lds
push
mov
shrl
jl
xor
and
pop
push
cmpb
add
xchg
dec
add
mov
push
repnz
sahf
adc
call
mov
jle
adc
fisttpll
push
fwait
or
pop
add
or
pop
dec
jne
ss
push
inc
cmp
shrl
add
in
adc
clc
jg
test
jle
cmp
bnd
mov
or
cmp
dec
rcl
jg
mov
lret
mov
imul
push
loope
jo
pop
adc
jb
xor
fs
xor
aaa
std
mov
sub
push
aam
add
push
fmul
or
lods
js
or
xchg
mov
shll
and
add
rcrb
call
xor
int3
xchg
sbb
scas
jbe
sub
clc
or
in
push
mov
inc
push
jno
adc
in
xchg
insb
pop
dec
dec
pop
mov
aas
adc
js
mov
dec
jge
xchg
add
mov
add
inc
ret
cmp
xor
fcmovnu
jg
or
jl
push
inc
lea
pushf
adc
aam
int
add
mov
shlb
dec
cmpsl
xchg
jne
scas
mov
push
add
fiadds
push
inc
adc
test
loope
fld1
aam
frstor
add
add
add
sub
pop
aad
mov
dec
scas
pop
mov
adc
enter
cltd
clc
nop
mov
inc
cs
sbb
int3
jbe
sbb
pop
push
push
lock
mov
sbb
add
dec
in
or
xor
mov
jge
push
rolb
repz
push
mov
arpl
mov
mov
sub
lods
or
mov
fcom
sti
sub
inc
stos
push
mov
xchg
popa
addb
shl
pop
and
xorb
test
fcoms
lock
and
mov
clc
pop
or
xchg
push
push
mov
push
pop
pop
movsb
jmp
add
mov
inc
jl
xor
sub
jb
je
jmp
mov
ret
and
xchg
data16
movl
and
mov
cmovs
push
jle
lock
jmp
call
push
mov
mov
jae
jmp
adc
add
adc
xchg
subb
xor
pop
push
push
push
jae
and
and
push
push
sub
andb
push
sub
xchg
mov
lret
js
lock
or
out
adc
les
imul
add
add
sub
rcl
cwtl
flds
int3
mov
ret
add
nop
sbb
cld
scas
lock
push
outsl
push
popa
stos
fimuls
inc
xor
test
cmpsl
movsb
es
or
adc
mov
clc
pop
fcoms
push
mov
push
sub
fcoml
aas
or
fwait
aas
hlt
jmp
jge
or
xchg
pusha
iret
imul
xchg
lcall
mov
in
leave
ja
testb
in
lods
dec
sahf
lods
adc
or
sub
add
jo
popa
push
mov
xchg
pop
lcall
or
in
addl
clc
imul
stos
adc
daa
sbb
sbb
imul
shlb
cmp
dec
movsl
loopne
xchg
stos
add
and
push
add
or
sub
cmpsb
xchg
addr16
adc
dec
jb
iret
or
xor
mov
out
in
push
add
push
lods
or
push
mov
or
push
arpl
jbe
orb
jle
push
pop
xchg
inc
cmp
pop
mov
adc
add
insl
push
lods
sbb
in
and
sbb
or
int
loopne
lcall
call
mov
xor
movsl
push
cmpb
pop
jne
inc
cld
mov
add
out
mov
aaa
pop
mov
inc
dec
sub
add
test
es
enter
adc
call
xor
nop
out
sbb
push
inc
xchg
xor
adc
bnd
or
add
mov
inc
adc
test
xchg
sbb
ljmp
or
gs
minps
push
push
dec
sbb
inc
cld
xchg
arpl
mov
ret
je
inc
push
cmp
push
xor
ror
jns
dec
or
and
xchg
insl
dec
dec
hlt
pop
sbb
rorb
test
mov
cmpb
add
sbb
fsts
adc
or
jp
int3
dec
mov
pop
shlb
xchg
and
or
andl
pusha
fs
pop
xor
stos
sub
insl
ljmp
or
pop
fists
jo
shlb
scas
addr16
add
mov
dec
pusha
stos
xchg
loop
or
aaa
movsl
xchg
xchg
pop
arpl
lahf
mov
ret
inc
arpl
xlat
and
cwtl
xor
dec
pusha
adcl
stos
lock
les
dec
insb
push
subl
lods
mov
addb
mov
pop
add
pop
add
gs
in
pop
add
sub
xchg
cmpsl
jns
mov
or
lods
sub
stos
imul
stc
adc
add
stos
or
fwait
cli
insl
lods
stc
outsl
pop
and
loop
dec
pop
loope
loop
add
scas
jo
call
addr16
loope
push
and
lods
add
push
pop
cmp
sub
sbb
mov
test
fisubrl
jno
fsubrs
cmp
add
dec
pushf
arpl
sbb
stos
dec
xchg
and
sbb
mov
mov
push
fildll
push
or
repz
jp
add
das
sbb
lods
iret
xchg
es
mov
in
push
sub
add
dec
pop
adc
rcrb
add
adc
dec
lahf
dec
jno
das
shlb
mov
xlat
test
subl
insl
jbe
insl
call
loop
cltd
dec
mov
movsb
mov
add
mov
and
bound
sub
in
punpckhdq
xor
cmp
fwait
xorl
cmp
inc
jb
scas
jbe
add
out
rolb
and
repnz
imul
sti
push
sub
add
into
and
push
mov
or
adc
mov
gs
sbbb
pop
dec
mov
pop
aam
jo
pop
mov
jno
cmp
sub
push
repnz
push
fld1
loopne
scas
sbb
aad
dec
daa
sbb
outsb
bswap
inc
addr16
push
decl
dec
or
and
popl
add
push
push
mov
and
xor
fs
lea
push
sub
push
mov
testb
lahf
sbb
mov
push
pop
xor
imul
inc
stos
sti
test
dec
int3
sbb
sub
add
pop
lock
adc
sahf
sbb
jns
or
xchg
mov
testl
scas
and
cwtl
arpl
or
test
mov
nop
inc
or
lock
inc
xlat
mov
sub
je
xor
jne
xor
lcall
pop
movl
push
outsb
or
loopne
dec
and
sbb
ja
xor
jne
dec
cmp
cmp
and
stos
aas
rcrl
xchg
inc
pop
dec
dec
lcall
cmp
sbb
sub
sbb
sbb
enter
add
add
or
clc
add
mov
mov
push
sbb
add
movsb
mov
inc
movsl
outsl
xor
cs
pop
mov
in
insl
mov
dec
adcb
jae
loopne
adc
inc
adc
es
pop
pop
and
test
or
shlb
aas
fildll
inc
jge
rolb
sub
jmp
fadds
je
cwtl
adc
inc
idivb
add
or
dec
imul
sbb
sbb
adc
dec
mov
out
push
fmuls
dec
or
sbb
insl
in
push
or
jge
mov
push
or
fcomps
mov
pop
add
push
cmp
jnp
gs
shll
fsubrs
xor
cmpsl
hlt
cmp
pop
sahf
sub
push
movsb
and
mov
je
scas
sbb
inc
addb
mov
daa
sbb
push
fisubl
cmp
outsl
cmp
je
mov
js
scas
pop
daa
sub
push
adc
sub
cli
inc
mov
insb
fadds
cmp
mov
and
or
lock
inc
push
mov
ret
dec
mov
jecxz
dec
dec
cmp
jne
mov
sbb
jbe
xchg
test
mov
dec
aam
cmpsl
jo
ret
jnp
jl
add
mov
sub
mov
or
cli
fldt
mov
popa
lret
outsl
jg
pop
cmp
mov
or
inc
orl
iret
sbb
insl
cmp
sub
mov
lods
sub
sarl
mov
mov
adc
pop
mov
jge
cmp
into
sub
mov
nop
jmp
push
je
inc
dec
repz
xchg
rcl
cwtl
bound
loope
lock
xor
aaa
jo
adc
cmp
xor
loopne
or
loopne
rcrl
cmp
ljmp
mov
inc
sbb
nop
pop
out
cmp
or
into
repnz
arpl
push
jecxz
mov
out
or
push
xchg
jl
cmpsl
je
nop
push
js
gs
add
into
rcr
insl
xchg
jg
iret
and
test
cmc
add
inc
sub
or
pop
push
xor
and
rolb
mov
xchg
add
push
push
or
out
adc
sub
nop
sbb
inc
inc
out
movsb
inc
das
cltd
nop
inc
and
insb
jmp
mov
push
arpl
mov
bswap
loopne
push
test
mov
imul
ljmp
addl
inc
addr16
push
inc
sti
jne
nop
test
imul
sbb
cmp
sbb
jo
jbe
push
lmsw
add
ja
mov
add
rclb
or
mov
lcall
mul
sub
sub
pop
pop
inc
js
in
or
into
mov
out
or
cmpsl
adc
xchg
aaa
sbb
add
inc
add
imul
cmp
inc
push
and
movb
and
dec
inc
and
or
rolb
cmp
push
imul
pop
scas
mov
cs
sub
lahf
mov
sub
sub
adc
test
xchg
jle
inc
adc
inc
dec
jne
fsubrl
cmp
adc
mov
out
shr
jge
sub
andl
imul
ds
out
or
or
cmp
jmp
test
jecxz
and
push
test
xchg
jp
xlat
mov
stos
mov
fsub
gs
lods
and
fwait
rcrb
or
inc
lahf
inc
sub
xchg
push
ret
adc
lret
or
inc
mov
cmp
negl
clc
mov
cmpsl
jl
jo
and
xchg
cwtl
sub
ds
push
subb
add
scas
popa
dec
sbb
stos
add
cld
cld
inc
imul
scas
movsb
scas
mov
mov
push
add
sub
fnsave
or
std
movb
xor
sbb
jo
mov
shlb
mov
outsl
leave
fwait
sub
dec
cmp
call
pop
iret
adc
orl
inc
fcmovu
push
iret
or
sbb
leave
xchg
outsb
enter
xchg
orb
nop
sarb
ret
fwait
in
movsl
mov
adc
adc
adc
sbb
in
mov
test
cmp
sbb
push
ret
jg
push
sub
dec
in
inc
jb
shrb
mov
push
jbe
xlat
ret
mov
repz
inc
and
mov
jl
mov
enter
xchg
mov
sbb
mov
mov
xchg
std
dec
in
sub
pusha
and
mov
add
call
or
pop
and
sub
loop
push
cmp
pop
and
dec
sbb
dec
xor
es
scas
add
sbb
mov
notl
jae
push
loop
adc
jnp
insb
pushl
loope
loope
jo
roll
sti
loopne
test
push
push
addl
sub
fwait
and
cmp
adc
clc
fwait
mov
sbb
inc
and
mov
jnp
or
add
push
nop
add
ret
dec
sbbl
enter
dec
mov
push
push
dec
mov
dec
ja
ret
inc
or
ja
fwait
mov
test
jle
dec
push
lcall
cmpb
add
or
pop
lea
push
scas
push
pop
dec
sbb
subl
icebp
and
out
mov
stc
sub
add
leave
loope
push
jb
jle
sub
push
jo
inc
rorl
push
insb
jno
lock
aam
jg
sub
mov
sub
clc
stc
adc
loopne
add
and
pop
mov
xchg
pop
mulb
inc
or
ret
mov
je
lods
ret
test
adc
fldt
lods
jo
xorb
or
adc
shll
jne
sbb
or
insl
call
movsb
pop
xchg
pusha
ljmp
adc
lahf
inc
cmp
leave
or
rcrb
sub
pop
mov
cs
pop
mov
addr16
js
add
lea
adc
movsl
add
stc
adc
daa
dec
je
xor
pop
or
inc
sbb
mov
or
je
jmp
dec
xor
lea
pop
xor
cmp
mov
sbb
popf
jecxz
adc
sub
cmp
add
nop
jg
sub
or
cmp
pop
add
xchg
test
add
arpl
popa
pop
fsts
xor
cwtl
shl
or
adc
movsb
inc
sub
pop
add
cmp
lods
cmp
pushf
out
idiv
pusha
mov
push
add
mov
daa
push
ds
daa
mov
mov
sub
add
mov
mov
push
sub
inc
inc
cmp
ja
inc
sbbb
jns
jnp
add
mov
or
jl
movb
add
dec
jns
push
pusha
insb
add
pop
add
test
shl
inc
subb
jg
popa
lock
cmp
movsb
jns
mov
push
insl
cld
or
cmpb
or
mov
outsb
jecxz
sub
rcrb
mov
mov
cmpl
insl
loop
aaa
xor
xchg
lea
sahf
jne
cli
lods
lock
mov
xchg
icebp
push
iret
xor
pop
sub
add
stos
pop
shrb
pop
xor
gs
daa
cmp
pusha
cmp
aam
fists
mov
sbb
add
or
mov
inc
push
mov
push
mov
xor
add
dec
adc
dec
mov
push
ja
jae
sub
xor
bound
add
fsubs
ja
mov
jne
imul
insb
movsl
xor
and
inc
push
pop
adc
inc
xchg
xchg
or
loope
ss
dec
insb
adc
mov
pop
mov
mov
or
push
aaa
or
leave
adc
pop
sbb
xlat
ret
inc
xorb
ffreep
add
mov
lods
xchg
jae
or
movsb
xor
lea
jno
lcall
test
daa
mov
cltd
xchg
xor
dec
outsb
mov
jbe
or
push
adc
or
xlat
dec
movb
push
xor
icebp
cmpsl
pop
test
jg
outsl
movsl
lret
mov
movsb
and
push
pop
mov
inc
sbb
add
sbb
dec
cmp
mov
mov
ss
mov
push
movsl
add
jo
daa
nop
cmp
adc
or
clc
or
or
icebp
push
sub
ljmp
mov
mov
mov
call
push
lret
mov
movb
fwait
loopne
inc
sub
jl
push
mov
mov
xor
fs
push
call
stc
loope
test
lods
add
rclb
rcr
movb
inc
lret
pop
mov
mov
or
loopnew
add
testb
pop
dec
or
inc
shlb
rcrl
lret
xchg
movsl
aad
pop
and
sub
push
in
jp
movsl
inc
call
or
push
jno
adc
push
sub
cltd
into
mov
adc
inc
add
daa
insb
popf
xchg
add
xor
pop
pop
lret
imul
mov
inc
cwtl
sahf
sbb
enter
lret
outsb
aam
nop
adc
add
xor
xchg
fsub
dec
push
jbe
xor
inc
ja
dec
sub
push
xlat
push
push
sub
sar
or
fsub
jne
cmp
inc
lods
sub
fists
js
push
dec
loopne
rorb
lcall
push
lahf
jns
mov
and
xchg
orl
sub
or
mov
adc
inc
sbb
mov
iret
sarl
int
or
pushw
or
push
pusha
and
sub
xchg
dec
mov
mov
mov
clc
and
mov
cmpsl
rclb
mov
add
push
fucomp
and
and
push
data16
and
and
xor
xchg
dec
mov
adc
mov
mov
pop
pop
daa
daa
movb
test
movsl
or
neg
push
popa
je
inc
adc
dec
push
loop
test
dec
ljmp
mov
je
push
sub
dec
loopne
add
inc
push
jns
inc
adc
nop
movsl
mov
cmpsl
or
xor
jno
dec
sbb
and
cmc
mov
and
cmp
push
mov
adc
mov
cs
push
sbbb
mov
lods
fdivrl
lock
mov
mov
loopne
hlt
lods
lds
or
sub
mov
or
adc
and
mov
je
inc
jbe
jne
clc
into
mov
mov
imul
ror
pop
aam
int3
jmp
jbe
mov
xchg
xor
cwtl
cmpsl
xor
shr
int3
lock
aaa
sbb
add
test
sti
adc
xchg
mov
add
mov
int3
int3
mov
aam
cmp
cmp
sarb
adcb
loope
add
dec
shld
loopne
sahf
inc
in
popa
mov
and
iret
xor
or
fcoms
rorb
push
pop
jecxz
in
lcall
push
or
push
insb
and
pop
dec
and
lock
and
mov
mov
out
jl
sbb
and
mov
orb
rclb
out
fists
or
loope
jo
movb
mov
sbb
test
dec
mov
add
xor
or
push
add
sub
rolb
adc
inc
sub
das
dec
dec
add
adc
push
into
or
insl
adc
add
cwtl
mov
test
xlat
and
test
and
mov
insb
stc
idivl
or
cwtl
push
jle
in
add
push
jmp
or
sub
ds
loop
imul
add
xchg
enter
mov
movsb
adc
cld
pop
das
or
mov
sub
and
cmp
xor
jle
cli
mov
insb
jne
or
icebp
add
pop
ret
mov
push
and
pop
lret
clc
imul
add
test
push
or
mov
xchg
loop
push
mov
fldl
test
adc
adc
fs
xor
push
cwtl
int
fs
or
adc
outsb
sahf
jbe
js
or
and
rolb
pop
add
jle
lahf
sbb
add
inc
push
test
adc
or
pop
movsl
mov
push
jecxz
and
inc
shlb
sub
pop
xchg
lods
adc
jbe
clc
xchg
loop
sbb
lret
and
or
shlb
mov
icebp
mov
pop
das
push
cli
or
add
mov
out
inc
add
xchg
jge
sub
and
fsts
movsl
adc
xor
pop
daa
fiadds
inc
push
and
pop
cmp
subb
lock
rol
stc
and
cmovns
dec
xor
jge
pop
and
or
jmp
mov
add
inc
punpckhwd
aam
inc
inc
inc
or
iret
addl
add
sbb
xlat
je
movb
arpl
pop
mov
inc
xor
push
aas
out
cli
dec
jo
jmp
mov
inc
js
push
mov
sub
addb
mov
push
inc
pop
fistl
jg
mov
inc
mov
mov
dec
popa
push
es
dec
mov
pop
xchg
push
jl
pop
leave
test
mov
add
lret
add
xor
dec
lea
icebp
mov
push
addl
rorl
jmp
scas
lret
movsb
or
loope
in
inc
pop
inc
out
jmp
add
fxch
pop
mov
ds
shrb
or
push
push
rol
lret
push
in
js
cmp
fwait
xchg
std
lock
je
cmp
cmp
mov
add
and
jge
jp
iret
cmp
mov
mov
adc
shlb
cmp
scas
and
ret
xor
or
add
mov
push
movsb
lret
pushf
shll
into
mov
push
lds
adc
int3
pusha
mov
lret
sub
stos
fwait
dec
jne
cmp
pop
insb
subps
add
nop
jno
pop
leave
aad
inc
in
aam
sahf
jle
movsl
ss
and
mov
rolb
divb
sbb
rorb
or
sbb
or
push
or
adc
dec
xchg
jb
ja
xlat
and
cmp
ljmp
pop
fistl
add
insb
jge
outsb
pop
cmc
addl
adc
test
jbe
cmp
insl
add
fisubrl
xchg
sub
inc
insb
inc
sbb
test
inc
xor
mov
lods
mov
cmp
add
xorl
movsb
or
nop
inc
sbb
xchg
lcall
cmpsl
dec
or
pop
dec
jbe
add
cmp
sahf
mov
or
leave
adc
lahf
add
out
push
inc
sub
popa
sbb
xchg
movd
je
and
jmp
and
pop
adc
xor
dec
jbe
fcomps
push
sbb
in
inc
xor
adc
and
fiadds
jle
cmpsb
inc
push
push
jle
sbb
pusha
adc
mov
in
in
jecxz
jmp
inc
push
xor
jg
fistl
je
ss
jns
lea
mov
and
jo
and
dec
inc
sbb
pop
adc
je
push
xrstors
rcrb
movsb
push
inc
lcall
mov
or
or
dec
mov
or
inc
nop
mov
push
inc
inc
clc
push
sub
js
dec
pop
aam
sbb
inc
xor
rolb
pop
xor
push
clc
pushl
cmp
je
or
mov
and
sbb
inc
addr16
stos
push
mov
adc
cmpb
push
es
xor
mov
xchg
adc
or
or
andb
movsb
push
cmp
rcrl
clc
push
push
adc
jl
je
mov
inc
or
sti
lock
add
shll
pop
insb
pop
mov
mov
cwtl
ror
inc
lahf
xor
add
pop
out
insb
mov
adc
and
or
or
mov
mov
inc
enter
xor
jno
and
mov
xchg
mov
sub
mov
add
jmp
adc
cmp
js
pop
adc
test
stos
rol
inc
mov
inc
adc
xor
into
scas
shlb
mov
cmp
test
jl
jnp
insl
mov
or
fidivs
or
lods
pop
sbb
xchg
or
inc
js
pop
push
testl
cmp
stos
popa
push
and
inc
int3
arpl
pop
pusha
lret
lods
inc
and
clc
or
fmull
pop
inc
out
addb
xchg
call
mov
test
icebp
fwait
push
mov
xchg
or
in
adc
inc
push
rcll
lret
or
rolb
push
push
orl
dec
neg
enter
aad
out
and
adc
test
or
cmp
and
cmc
arpl
in
mov
and
xchg
push
ficoms
mov
and
pop
add
and
add
xlat
xchg
jp
add
les
or
sti
mov
imul
cltd
sbb
enter
cli
ror
xor
cmp
fcoml
enter
xchg
and
sub
pop
popa
int
or
das
pop
mov
repnz
mov
xchg
or
xchg
shrl
push
sbb
add
jne
cmpl
inc
ds
jb
enter
push
or
leave
add
sbb
adc
adc
clc
and
sbbl
mov
push
aam
sub
xchg
mov
out
nop
mov
sub
call
addb
mov
add
jp
int3
nop
pop
push
aas
gs
ja
sub
or
add
or
imull
sbb
or
dec
test
loopne
xchg
aas
mov
cli
adc
mov
insl
cmpsb
fidivrl
shrl
repnz
or
cli
sbb
cmp
test
cli
mov
shll
addr16
adc
loope
mov
fld
add
rcrb
dec
roll
repz
and
lods
pop
lret
faddl
sbb
add
ret
imul
pop
adc
or
inc
out
jmp
adc
and
jns
imul
ss
adc
leave
or
insb
xlat
jle
push
add
mov
pop
xor
xor
mov
mov
cmpsb
cmp
jbe
fmuls
adc
les
outsb
fdivrl
sub
out
shl
dec
jmp
sarb
sub
xchg
das
dec
hlt
xchg
xorl
mov
xor
dec
inc
sbb
mov
sub
and
push
mov
and
mov
mov
cmpsl
daa
push
xor
adcl
sbb
or
mov
les
mov
in
test
in
push
mov
mov
int
xchg
add
lock
les
adc
or
stos
fsub
push
and
mov
test
aaa
mov
dec
push
in
dec
add
or
lcall
xchg
and
mov
inc
pop
cmp
lahf
xchg
sbb
add
inc
lds
into
add
cmp
push
sbb
mov
sbb
dec
mov
daa
or
pop
loop
cmp
and
xchg
push
or
fs
jb
lods
adc
daa
and
inc
aas
xor
mov
bound
sbb
add
dec
mov
adc
inc
add
sub
jae
pop
pop
test
and
add
ret
imul
jb
mov
inc
jg
dec
bound
je
or
adc
test
xchg
out
dec
dec
and
push
out
push
inc
push
xor
aam
or
ret
mov
adc
jbe
out
daa
xchg
int
xor
add
in
repnz
add
lock
rorl
inc
imul
xorb
in
sub
push
dec
repnz
addr16
pop
addr16
jbe
add
push
daa
std
das
cmp
xlat
mov
and
push
dec
arpl
les
push
mov
jbe
out
out
pop
mov
fsubrl
or
leave
dec
mov
sub
aaa
adc
push
push
fwait
dec
dec
xor
int
inc
or
xor
icebp
test
push
sbb
aaa
jo
xor
sub
leave
push
call
or
mov
fldl
fcoms
jb
cmp
arpl
or
jae
aas
jl
stc
add
jb
dec
pop
hlt
call
dec
mov
sub
inc
pop
dec
mov
or
test
outsl
test
mov
popa
sub
fidivrl
inc
aaa
adc
scas
mov
test
jg
sub
test
pop
mov
mov
adc
mov
sub
fsubp
sub
shr
ss
or
jge
into
inc
fnstenv
mov
add
or
out
jne
or
cwtl
hlt
and
in
into
xorb
push
dec
inc
fldl
nop
push
or
cmp
ret
imul
out
inc
sbbl
and
cmpsb
cmp
and
jns
clc
push
sbbb
and
or
adc
mov
and
or
inc
cmc
roll
adc
jo
stos
mov
pushf
mov
inc
cmp
shll
test
add
push
aas
addr16
sub
push
xchg
pusha
adc
cmp
cmp
or
sub
adc
ds
or
or
xor
mov
xchg
decl
adc
iret
push
adc
pusha
std
sub
cmp
cmpsl
shlb
xor
add
arpl
iret
and
cld
sbb
repz
mov
cwtl
fwait
loopne
enter
inc
adc
sbb
dec
dec
in
and
fildll
ret
int3
push
inc
cmp
ja
lret
xor
into
inc
test
scas
rol
xchg
adc
in
pop
xchg
test
mov
outsb
push
pop
fwait
mov
adc
inc
inc
inc
popa
sub
arpl
sbb
dec
push
jbe
jge
cmp
movsb
mov
stos
jp
addr16
fdiv
push
dec
adc
mov
mov
mov
jns
sub
or
and
cmp
xchg
inc
or
nop
mov
inc
mov
imul
nop
orl
pop
test
scas
sbb
pusha
push
xorps
shlb
pop
sahf
testl
jae
xor
or
aaa
adc
push
jns
test
fwait
pop
jo
jae
mov
fiaddl
push
cmpsl
cmpsl
loopne
sub
add
jno
mov
mov
dec
sub
outsl
add
mov
adc
lahf
or
mov
dec
xchg
sti
mov
pushl
scas
out
pop
jno
dec
outsb
out
dec
or
cmp
fiadds
outsl
out
adc
dec
or
gs
jge
stos
fs
jg
addr16
push
pop
dec
or
pusha
mov
push
jmp
adc
push
jo
jg
arpl
xchg
sbb
mov
xchg
es
or
cmp
shll
push
pop
cmpsl
xchg
dec
lods
cltd
inc
mov
cmp
dec
outsl
xchg
push
es
push
sti
popa
rclb
pop
inc
mov
pop
testl
push
lret
out
or
pop
inc
lret
mov
mov
dec
cmpsl
inc
add
add
pop
lea
or
je
xchg
mov
mov
xchg
iret
jae
xor
mov
sbb
xchg
push
adc
xor
push
push
pusha
loope
fiadds
jb
scas
test
lock
sub
jnp
xor
add
push
stos
adc
xchg
jne
cmp
pop
xor
cmpsl
push
push
popa
adc
or
lahf
gs
dec
push
enter
fs
sbb
daa
and
popa
popa
repz
arpl
adc
not
push
addl
mov
cmpsl
les
es
mov
cmp
cwtl
jns
push
test
mov
pop
sub
lahf
mov
or
lret
push
testl
imul
fsubs
push
imul
push
xor
fcomps
lahf
pop
xor
lea
push
aas
push
push
mov
mov
sub
cmpsb
sub
adc
adc
sub
pop
aaa
push
insb
andb
inc
adc
sub
push
dec
pusha
add
mov
addr16
push
sbb
jp
or
push
or
pop
jo
fsubs
lahf
push
filds
adc
adc
inc
dec
push
add
dec
mov
daa
inc
cld
js
push
mov
mov
add
sbb
push
sub
adc
pop
adc
push
push
scas
mov
inc
xcrypt-ecb
cmpsl
dec
or
push
push
and
outsl
mov
or
in
jg
and
push
pop
ret
xor
adc
repz
xor
adc
or
pop
inc
stos
inc
mov
decl
push
imul
pop
out
mov
sbb
inc
pop
gs
pop
movl
lret
daa
cwtl
sbb
adc
push
mov
inc
ja
mov
idivl
inc
and
xor
push
lods
andb
adc
inc
outsl
pop
mov
xchg
fisubs
mov
xchg
push
cltd
leave
mov
fistps
or
xor
cmp
shlb
mov
mov
mov
xlat
aas
pop
and
mov
mov
pop
mov
inc
or
iret
push
ljmp
dec
dec
push
aas
push
out
add
inc
ffreep
in
pop
dec
push
insl
pop
les
ficoms
push
jg
insb
lods
dec
stos
or
ret
push
pop
popa
mov
inc
adc
loopne
fwait
idivl
stos
jbe
push
aas
lahf
xlat
or
insb
add
push
int3
dec
pop
into
js
add
je
jns
add
bound
incl
or
int3
adcb
adc
dec
sub
stos
imul
int
push
inc
ficoml
out
or
jns
sbb
out
in
sub
jmp
fstl
addr16
inc
mov
jecxz
mov
mov
jne
cmpsl
movzwl
inc
loopne
ret
lret
cmp
das
popf
ret
clc
xchg
sub
or
je
or
mov
xor
jb
pop
lcall
pushf
cwtl
jb
jb
xchg
nop
mov
add
ss
and
aaa
nop
popa
jae
jle
and
arpl
mov
rcll
pop
mov
int3
jnp
mov
or
fs
bound
pop
add
add
out
xchg
ret
mov
push
add
inc
dec
inc
and
xor
mov
sub
jecxz
in
add
push
enter
pop
inc
mov
push
hlt
pushf
adc
std
push
cld
movl
mov
inc
push
mov
in
pop
inc
clc
outsb
inc
push
adc
dec
inc
roll
inc
fwait
scas
insl
js,pt
cmp
es
push
je
mov
insl
push
fdiv
push
add
pop
cmp
in
jle
mov
sahf
leave
push
jl
jle
push
mov
push
or
mov
mov
fcoml
dec
push
int
insb
lahf
shlb
mov
and
jl
divl
add
push
xchg
sbbb
fisubs
mov
cmp
push
push
sub
mov
dec
sti
outsb
mov
sbb
jo
test
call
push
sbb
enter
jnp
push
mov
xlat
mov
pushf
cmp
add
shrl
or
shlb
pop
punpcklwd
inc
cmp
mov
dec
sbb
or
gs
mov
pop
jp
cmp
inc
sbb
xor
dec
lahf
out
xor
jno
xor
repnz
jle
iret
in
lcall
mov
in
inc
dec
imul
hlt
aaa
andb
dec
call
mov
cmpl
mov
mov
ret
push
push
mov
sbbl
and
adc
test
mov
pushf
add
and
in
insl
arpl
xchg
or
fmulp
pop
mov
fdiv
add
aaa
cmp
mov
testl
push
ja
dec
mov
popf
xchg
aaa
sysret
or
hlt
je
push
enter
and
das
fimull
daa
or
out
leave
pusha
mov
outsl
or
pop
or
decl
inc
mov
mov
mov
mov
mov
mov
mov
mov
lcall
dec
lahf
inc
lahf
out
xchg
sub
add
sub
add
cmp
sub
lock
ss
ret
ret
sarb
and
jecxz
push
mov
xor
sarb
sub
pop
sbb
add
rcrl
adc
dec
call
adc
scas
mov
shll
add
fwait
mov
subb
cmp
jnp
push
inc
adc
roll
cmpsl
sub
push
cmp
lock
inc
inc
adc
sbb
and
sub
mov
mov
or
add
dec
ret
dec
jne
inc
ret
pop
adc
sbb
inc
mov
insl
pop
repz
es
dec
jmp
addr16
and
add
pop
stos
xor
add
pop
inc
imulb
and
or
pusha
push
hlt
call
push
inc
pop
pcmpeqd
dec
repnz
ja
movsb
lret
xor
and
and
fwait
mov
add
popa
insl
push
outsb
adc
bnd
sarb
and
or
push
sbb
mov
sbb
xor
and
add
and
cmpsl
pushf
in
and
dec
hlt
add
in
ret
inc
clc
add
arpl
mov
sub
adc
push
scas
pop
gs
xchg
mov
dec
push
js
movsb
adc
xor
fs
shrb
fwait
or
xchg
nop
scas
or
rcll
int3
insb
arpl
xor
and
xor
jae
jae
xchg
subb
fs
xchg
inc
iret
jnp
mov
daa
push
inc
lods
add
sbb
fsubs
repnz
inc
mov
inc
sub
and
inc
das
and
inc
inc
adc
sbb
xor
movsb
xor
xor
add
pop
mov
push
into
pop
adc
nop
loope
ret
inc
stos
pop
nop
adc
outsl
movsl
test
inc
push
add
dec
pop
fdivs
sbb
testl
push
dec
lsl
adc
js
aaa
rcl
add
xor
add
into
or
push
adc
push
test
je
ss
inc
mov
fsubrl
popl
fwait
insl
pop
daa
bound
sbb
adc
xchg
das
pop
mov
in
or
adc
adc
sbb
ret
xchg
xor
in
addl
mov
mov
nop
adcb
mov
pop
cwtl
adc
xor
add
mov
cmp
pop
sbb
dec
add
out
pop
enter
ds
js
pop
xor
dec
jnp
adc
lods
incb
mov
inc
or
push
dec
sub
push
cli
shlb
or
scas
jecxz
jbe
inc
fs
or
mov
dec
dec
adc
xchg
out
xchg
mov
mov
enter
pop
adc
daa
dec
xchg
mov
push
mov
xor
popa
jp
test
lret
inc
fisubl
and
lods
loopne
cmp
lock
push
or
inc
sbb
sbb
mov
sbb
xlat
xor
sbb
sub
or
shlb
notl
or
popa
sbb
jae
jmp
sbb
dec
sbb
je
xor
loope
mov
adc
ss
aas
sbb
add
inc
inc
jecxz
ret
push
jp
pop
fstpl
pop
inc
push
ds
aam
sarl
or
pusha
es
dec
mov
xor
mov
add
cmp
jne
inc
and
sbb
test
pop
cmp
push
sub
repz
test
xchg
jl
lea
and
and
rclb
call
or
fmuls
int3
cmp
subl
mov
dec
inc
sarb
pop
and
inc
test
lds
int
inc
jb
dec
andb
out
movsb
jge
roll
sub
push
sbb
andb
sub
push
sbb
int3
cmp
sbb
sub
xrelease
fidivs
dec
sub
out
dec
fdivrl
mov
vpsubb
dec
rclb
xchg
cmc
pop
dec
es
outsl
sub
shrl
nop
mov
jo
cs
enter
and
mov
adc
ret
das
je
mov
ffree
jne
xchg
xor
or
push
jno
inc
mov
xor
mov
cmp
xor
mov
pop
mov
sti
stos
xor
cmp
into
xor
shl
stc
inc
pop
xor
or
aaa
sbbl
les
movsl
out
divl
mov
pop
movsl
or
jno
int
mov
push
adc
bnd
movsl
les
push
or
cmp
xchg
test
fdivrs
adc
in
xchg
jno
pusha
inc
sbb
outsb
push
imul
dec
cmp
mov
fiadds
je
scas
mov
sbb
jmp
clc
or
inc
hlt
fwait
push
and
scas
in
ja
push
dec
cmp
pushw
xchg
jo
dec
loopne
popf
imulb
ds
mov
xchg
aas
dec
mov
mov
inc
or
sbb
push
inc
inc
xchg
jo
cmp
inc
je
add
add
or
sub
inc
js
dec
sub
dec
or
pop
pop
lock
movsb
gs
push
xchg
sbb
push
addb
inc
or
add
mov
adc
inc
and
ffree
mov
jl
sub
imul
dec
sub
pop
dec
push
jo
sbb
inc
add
add
les
adc
sarb
cmp
push
push
dec
sbb
imul
sahf
cmp
xchg
popa
push
dec
dec
xor
pop
enter
sahf
xlat
push
cltd
shl
enter
ss
or
shl
xchg
and
pop
dec
dec
jb
dec
pop
into
xor
xchg
lock
popf
repnz
popa
pop
in
dec
es
iret
push
add
movsb
or
rclb
jb
jmp
loopne
add
es
xor
xor
jo
mov
cmp
adc
xor
mov
cmp
adc
pusha
mov
xor
xor
xor
xor
pop
test
fsin
daa
push
dec
xor
xor
outsb
xchg
mov
xor
xor
sbb
cmp
xor
xor
pop
sbb
xchg
xor
xor
xor
xor
pop
jle
jb
xor
lret
sbb
xor
mov
lods
sbbl
pusha
lods
sbbb
sbb
xchg
mov
loop
mul
addr16
xchg
or
or
cs
push
loop
cmpsl
dec
addr16
push
fsubrl
shlb
enter
addr16
inc
arpl
lea
aam
xor
add
rol
stos
cld
cmp
sbb
sbb
inc
mov
sbb
cmp
xorb
push
fwait
vmaxpd
sbb
cs
aad
mov
add
push
jno
addr16
pop
stos
pusha
inc
mov
xchg
pop
incl
ljmp
jl
add
mov
xchg
faddp
in
lea
mov
sti
dec
mov
sbb
int3
xchg
sbb
sbb
xchg
dec
repz
mov
jnp
gs
mov
pushf
adc
mov
sbb
xchg
mov
test
das
test
lahf
mov
xor
add
lds
aam
pop
jns
inc
lock
pop
add
in
sbb
push
out
push
push
or
sbb
fisubrs
or
or
sbb
jno
pushf
adc
fwait
movsb
in
adc
mov
add
push
pushf
xlat
nop
mov
rorb
dec
or
aam
outsb
shlb
jge
push
push
pop
xchg
and
in
out
xor
loopne
xorl
ja
and
mov
jp
cmp
in
movsl
and
sahf
jg
sub
das
cmp
psrlw
icebp
sub
notl
lods
out
addb
sahf
xorl
shlb
loope
sbb
lret
mov
out
fs
inc
or
pop
shrb
shlb
push
push
sbb
outsl
cmp
fstpt
mov
mov
iret
and
push
dec
nop
adc
push
push
xchg
mov
push
xchg
or
lods
push
int3
dec
gs
cmp
add
add
or
in
inc
push
movsl
mov
push
lock
mov
mov
dec
pop
pop
dec
movb
mov
data16
dec
push
xchg
hlt
out
or
pop
hlt
add
cmp
cmpb
cmpb
adc
xor
nop
rcrl
test
add
mov
sbb
sub
and
loope
mov
daa
or
mov
sarl
cmp
into
inc
rolb
push
cmp
xchg
lret
cld
cld
jb
push
aaa
es
add
cmp
aam
dec
cmp
into
call
jmp
xchg
dec
jg
add
mov
inc
add
mov
inc
pusha
sbb
ret
arpl
sub
add
add
je
or
or
shlb
push
pop
mov
xchg
insb
inc
cmpw
pop
pop
sub
scas
sbb
xchg
xchg
sbbl
lock
xchg
inc
and
aad
pop
xchg
cmc
sub
push
andl
mov
das
xor
xor
leave
clc
push
xor
or
out
mov
inc
cmc
ret
jmp
and
add
cld
mov
daa
jmp
push
pop
aam
add
mov
daa
mov
arpl
pop
movsb
test
insl
inc
ror
stc
call
stos
xor
mov
inc
fbstp
cmp
lahf
mov
ja
jne
nop
pop
adc
and
rorb
mov
mov
insl
loopne
or
ja
gs
out
mov
sbb
mov
sbbb
repnz
pop
jmp
fwait
lock
add
jno
cmp
xor
cld
adc
inc
add
xchg
jb
push
lahf
adcl
test
aas
loopne
mov
mov
int
repz
add
inc
iret
push
cmp
push
mov
mov
daa
and
push
out
not
and
adc
aad
push
test
or
and
daa
test
fmuls
inc
cmp
fs
ss
pop
pop
dec
inc
adcb
jo
xor
push
stos
scas
jae
scas
cmpb
pop
xchg
addb
sbb
or
push
push
pop
roll
mov
sbb
mov
push
push
fwait
adc
pushf
test
aas
cld
dec
xchg
and
add
sti
add
ret
mov
add
inc
jl
iret
adc
push
pop
ret
xor
mov
clc
popa
or
mov
test
cs
xchg
filds
inc
mov
push
aam
daa
shrl
jae
push
xor
xor
aam
rcrl
testb
popa
fsubr
je
imulb
jne
movb
add
dec
mov
insl
les
je
cmp
push
push
inc
pop
dec
addl
cmpsb
sub
xchg
ret
xor
mov
and
sub
mov
or
aaa
push
add
fwait
je
test
pushl
dec
mov
mov
out
cmp
pop
dec
negl
cmp
push
add
loope
and
push
iret
pop
scas
xchg
push
mov
sarl
lods
mov
jmp
lods
or
or
adc
outsl
jmp
stc
int
add
pop
jmp
stos
inc
adc
jp
add
lock
test
mov
aad
out
in
add
sbb
addb
loop
push
pop
lahf
aaa
xor
inc
ret
adc
adc
push
shlb
movsb
jl
imul
xchg
ja
sahf
movswl
adc
or
push
adc
insl
movsl
cmp
lea
xchg
add
mov
push
mov
dec
sub
inc
loope
sub
mov
repnz
or
call
lea
inc
loope
dec
testl
sbb
or
sub
and
and
test
loope
or
xchg
push
enter
add
xorb
pop
mov
cmpb
jne
push
cmpl
je
mov
sub
xor
mov
mov
lea
addr16
and
xchg
pop
pop
xchg
sub
adc
testl
xor
mov
outsb
pop
addr16
mov
jle
mov
negl
shlb
push
sbb
rcrl
inc
xchg
cmpsl
inc
lahf
popa
sbb
jns
mov
test
and
inc
add
inc
sub
es
xor
loopne
mov
movsl
dec
pop
dec
pop
pop
push
inc
push
pop
dec
dec
sbb
dec
test
mov
mov
and
cmpsl
sub
test
jl
test
pop
xor
ljmp
xor
adc
inc
jge
sbb
add
pop
cmp
or
push
sbb
lods
mov
cmpsl
test
xchg
jne
cmpsl
je
pop
xor
or
xchg
push
push
push
sub
inc
sbb
sbb
gs
int
xadd
or
movsl
cltd
lahf
daa
mov
push
mov
insb
xor
addr16
adc
loop
pop
orb
mov
loope
xor
ret
xchg
cmpsb
icebp
cmp
sub
out
in
js
dec
xchg
or
adc
test
fdivl
js
cmp
andl
subb
add
nop
rcrb
test
push
test
jb
ret
pop
pop
test
aam
mov
add
test
cwtl
inc
pop
out
in
inc
loope
loop
pop
sbb
xchg
fadds
mov
xchg
testl
inc
or
loopne
es
xchg
add
and
std
push
in
add
pusha
adc
jne
inc
loope
mov
inc
sbb
xor
dec
loopne
lock
sbb
mov
loope
pop
xor
rcll
int
outsl
and
or
sbb
mov
not
and
or
sub
jns
movsb
cltd
rorb
add
mov
xchg
xor
push
and
pop
testb
int
inc
add
cs
repz
push
adc
sbb
push
mov
add
mov
pushf
jp
or
push
add
clc
mov
jb
je
push
cmp
inc
mov
cli
or
inc
mov
adc
mov
push
and
add
lock
rorb
and
inc
rorb
clc
xor
push
inc
xor
call
icebp
stos
mov
rorb
xchg
or
dec
jbe
sarl
pop
sub
and
dec
adc
dec
cmp
add
into
daa
inc
mov
aas
in
inc
filds
jne
das
push
inc
mov
and
movsb
mov
mov
les
cmpb
cmpsb
dec
inc
mov
lret
data16
and
mov
lahf
adc
sbb
ja
xor
dec
dec
pop
xor
or
mov
pop
cmp
add
push
push
fsubrs
es
in
jo
loope
xor
jnp
inc
xchg
aam
push
lock
push
bound
push
inc
cmpb
and
js
xor
pop
jno
xor
mov
test
jo
loopne
dec
jl
push
add
xlat
popl
test
repnz
popa
cmp
fisttpll
lret
cmove
adc
dec
adc
cmpsl
xor
xor
mov
jno
or
inc
shlb
dec
or
ret
notb
or
and
aad
loopne
es
or
inc
pand
imul
or
mov
xor
aaa
push
ret
lods
mov
ds
pop
repnz
sbb
pop
mov
insb
sbb
pop
add
adc
or
xor
add
in
add
dec
add
inc
xor
push
clc
and
jge
sahf
mov
add
cmp
loop
add
scas
js
push
rclb
lret
xor
adc
add
push
xor
xor
cld
jmp
int3
daa
add
add
sbb
inc
add
add
inc
stos
xchg
pop
test
les
int
int
xchg
scas
js
xor
inc
dec
mov
cmp
les
xor
inc
scas
int3
leave
arpl
sub
xchg
jno
repnz
or
js
decb
jecxz
pop
shlb
push
pop
mov
mulb
xor
pop
and
inc
or
inc
nop
push
pusha
pop
push
popf
sub
pushf
out
into
movsb
aaa
fsubrs
inc
enter
das
int3
push
cmp
add
je
adc
sub
mov
mov
decb
dec
pusha
cmp
add
sbb
inc
adc
jae
lcall
mov
cmp
adc
and
lret
mov
pusha
xchg
sub
jne
sti
arpl
adc
mov
or
or
nop
iret
pop
stc
fisubrl
imul
xlat
sub
jle
add
aas
hlt
push
adc
andl
cmp
push
push
adc
inc
or
and
sti
outsb
bound
setne
cmpsb
cwtl
xor
dec
push
addl
dec
jmp
jb
sbb
lret
push
mov
add
jp,pt
adc
mov
push
push
popf
rcll
shll
push
gs
mov
jp
mov
inc
and
lods
mov
mov
lods
xchg
dec
push
adc
roll
rolb
mov
sbb
sbb
add
pop
and
push
pop
pop
js
pop
fistl
pop
add
test
add
call
sbbb
cmc
daa
iret
pop
cmp
dec
push
fs
mov
aad
xchg
mov
bound
sub
in
in
in
pop
aam
pop
into
cmpsl
pop
je
aaa
mov
push
ret
pop
cmp
jmp
enter
ljmp
mov
inc
jo
lock
inc
push
imul
pop
sbb
pushf
ret
pop
xor
xchg
mov
dec
mov
cmp
sbb
inc
pop
and
jo
sub
mov
insl
mov
xchg
jne
lods
enter
ret
push
test
fisubrl
repz
mov
push
outsb
mov
sub
push
add
xlat
xchg
or
inc
cmp
lret
jns
mov
pop
cmp
add
out
jnp
lahf
add
out
cld
xlat
sarl
inc
push
sub
inc
sbb
loope
insl
sbb
and
jns
mov
mov
mov
inc
sub
aaa
fidivl
dec
js
push
adc
push
or
xchg
mov
jp
aaa
lods
xchg
sub
fldl
rclb
mov
xor
jae
mov
pop
jno
or
jmp
mov
inc
loop
pop
sbb
cmp
mov
lahf
in
subl
das
jb
mov
aas
gs
and
or
imul
push
inc
movsb
add
shll
je
dec
fidivl
inc
sbb
scas
movsb
adc
jo
sub
mov
push
push
xchg
add
or
push
es
sbb
push
push
into
or
xchg
add
sbb
adcl
and
add
sbb
or
xor
push
push
fsubrp
add
jl
lret
mov
cmp
mov
sbb
jmp
aaa
mov
jle
js
xchg
fisubrl
rol
sbb
inc
ret
inc
or
call
pop
and
sub
dec
leave
sbb
or
dec
into
and
jae
push
pop
xor
sbb
shlb
inc
add
jae
pop
or
xchg
or
and
orb
js
movsb
pop
in
pop
outsb
mov
clc
popa
add
sbb
adc
insl
mov
or
and
push
lret
adc
jbe
xchg
xchg
mov
ds
cmpsl
clc
mov
add
push
inc
mov
inc
stc
stc
testb
xor
cmpsl
push
adc
and
add
inc
int3
enter
jg
adc
arpl
push
push
mov
lret
jp
lret
jge
xchg
xor
inc
daa
dec
add
sbb
add
inc
inc
rorb
xchg
xor
je
push
movsl
mov
pusha
mov
mov
cmp
sub
push
or
push
mov
adc
cwtl
dec
arpl
js
mov
das
fidivs
fsubl
lahf
arpl
daa
push
add
les
cmpsb
adc
shlb
inc
mov
clc
pusha
loop
push
insl
icebp
das
mov
lock
mov
and
insl
add
rcrb
ret
aam
xchg
inc
add
jbe
push
sub
in
add
scas
and
mov
mov
xchg
imulb
add
hlt
mov
in
add
xor
rolb
sahf
xchg
subl
and
push
inc
mov
dec
sbb
aam
sbb
leave
jae
das
adc
adc
lock
cmp
or
or
filds
cs
cld
js
clc
adc
jae
push
js
test
cmp
inc
nop
sub
cmp
lods
bound
hlt
cmovle
adc
mov
sbb
mov
adc
cwtl
inc
mov
pop
lock
inc
loopne
das
cld
push
add
push
roll
cmp
or
xlat
push
nop
push
xchg
or
pop
shrb
pop
nop
pop
adc
out
jo
movsb
and
sahf
push
sub
fs
mov
jno
and
xchg
sub
or
pop
add
pop
xchg
and
push
or
sub
outsb
push
scas
rol
push
mov
dec
mov
jae
add
mov
testl
pusha
add
push
dec
sbb
mov
lcall
mov
mov
jo
int3
cwtl
shlb
dec
sub
lock
and
insl
scas
ljmp
pushf
inc
and
lret
mov
test
push
mov
nop
add
cmp
jae
add
push
cmp
mov
mov
dec
mov
enter
push
adc
sub
jmp
inc
out
mov
push
mov
outsl
add
xor
xorb
lods
inc
es
push
add
add
popa
dec
insl
jne
mov
cmpsb
addb
lcall
add
push
mov
push
sbb
lock
dec
add
je
add
cmpsl
incl
bound
jnp
add
pop
mov
mov
inc
mov
daa
mov
push
outsb
lods
pop
and
lret
aam
movsl
faddl
inc
mov
insl
fldcw
or
call
out
sti
in
pop
or
or
popa
jb
mov
and
dec
jle
adc
hlt
insb
flds
add
dec
or
pop
inc
rclb
orb
insb
andl
pop
inc
sub
test
add
fcoms
mov
fstl
sub
les
cltd
rcl
add
inc
filds
dec
aas
jmp
add
mov
inc
jo
sub
adcl
xchg
mov
jno
dec
mov
sbb
mov
insb
xor
jo
data16
jbe
movsl
sub
or
push
add
fdivl
ja
fisubrs
mov
or
and
jmp
mov
rorb
adc
arpl
xor
pop
out
add
sbb
data16
add
adc
gs
aam
push
xor
sbb
or
das
or
or
fimuls
or
xchg
inc
std
jbe
dec
xchg
mov
rcll
adc
xchg
popa
cmpsl
dec
push
pop
aas
adc
mov
dec
xchg
pop
mov
fdivrl
and
inc
cmp
cmpsb
push
jo
jae
or
inc
mov
push
repz
test
jnp
push
inc
fs
cmp
test
int3
push
push
mov
add
cmp
push
insb
pop
test
and
push
out
mov
or
filds
sub
mov
dec
sub
dec
or
les
add
loopne
or
pop
pop
ja
push
push
mov
mov
aad
aam
iret
mov
fisttps
inc
xchg
mov
jno
adc
or
jecxz
jne
outsb
popf
cmp
push
push
roll
int3
inc
loope
add
adc
mov
orl
add
dec
cs
pushf
sbb
add
xchg
lods
aaa
mov
pop
add
xorl
push
mov
jo
aaa
mov
fwait
out
push
sahf
push
jb
push
mov
filds
loopne
clc
mov
icebp
push
cs
inc
inc
pop
jl
pop
cmpsb
fwait
addr16
data16
pop
lods
push
mov
dec
mov
and
dec
sbb
xor
insb
lcall
inc
mov
jns
cltd
xchg
cmp
cmp
push
cmp
aad
and
push
pop
or
jns
das
cmp
cmpsb
cmp
mov
cmp
and
sub
and
hlt
popf
pop
aas
or
movsl
inc
mov
pop
inc
pop
out
add
xchg
inc
sub
xlat
add
and
sbb
int3
cli
push
add
addb
fistl
inc
cltd
dec
xor
pop
inc
pop
xadd
aaa
insl
adc
push
or
out
push
sti
fs
in
jbe
adc
loopne
fs
ja
or
adcb
push
aam
xchg
aaa
inc
inc
sbb
pusha
xor
jl
push
jne
xchg
inc
mov
imul
xchg
enter
push
mov
mov
dec
cwtl
adc
mov
sub
mov
fdivrs
xchg
test
ja
jl
or
gs
mov
pop
add
dec
push
imul
add
inc
sub
push
inc
jbe
jnp
ja
stos
sarb
adc
cmc
sub
rcl
xor
push
jnp
leave
lods
mov
das
cli
es
repnz
pop
jns
stc
xor
syscall
pop
cmp
cmp
inc
mov
cmp
and
clc
dec
mov
loopne
lods
stc
incl
imul
push
mov
repz
mov
scas
cli
mov
sbb
pop
subl
jbe
out
pop
ljmp
lgs
clc
jge
pop
pop
push
or
cs
test
xchg
xchg
nop
mov
adc
sbb
in
test
scas
and
outsb
ret
ss
cltd
and
pop
ss
lret
jno
ss
inc
insl
imul
test
roll
add
ret
test
das
and
rep
and
in
mov
push
mov
mov
and
push
mov
and
sbb
sub
xchg
pop
xlat
xor
iret
push
mov
mov
shll
pop
arpl
mov
bound
push
cmp
mov
insl
inc
push
sbb
into
push
add
ret
test
pushf
adc
push
out
jo
call
fs
mov
jl
inc
add
inc
adcl
push
mov
xor
loop
jne
das
lret
push
mov
mov
dec
or
popa
xor
je
mov
xchg
int
sbb
adc
shll
out
mov
adc
cwtl
bound
xchg
or
push
inc
rorb
jo
push
bound
push
addb
pop
cmc
xor
sbb
push
jmp
inc
add
lods
je
push
dec
ja
pushf
test
loope
nop
or
push
rcrb
ljmp
ds
push
xchg
inc
sub
mov
mov
notb
adc
or
clc
test
hlt
mov
mov
bound
jmp
dec
xor
fsubrl
fmuls
test
in
fdivs
int3
ret
and
pop
ja
pusha
scas
clc
dec
test
lods
inc
cltd
enter
dec
add
pop
or
or
dec
or
cmp
sbb
mov
xchg
mov
jge
lods
fwait
adc
jnp
inc
cs
lds
add
psubusb
loopne
cmp
xchg
or
inc
xor
pushf
int
fs
imul
scas
loopne
sbb
xor
dec
cmp
das
inc
sarb
jne
out
inc
add
pop
fcomps
shrl
fmull
les
and
adc
dec
jnp
dec
cwtl
rclb
sbb
adcl
mov
sbb
aad
scas
sbb
cmc
sbb
mov
mov
cli
and
insl
mov
stc
mov
bound
cmpsl
int3
lock
mov
stos
rcl
mov
mov
dec
inc
sbbl
test
xor
jp
pop
mov
jmp
aam
js
test
ja
mov
test
mov
push
gs
pop
daa
xor
or
test
cmp
or
arpl
popa
adc
xor
adc
popa
aaa
lea
pusha
imul
push
add
insl
mov
aas
mov
mov
ja
xlat
sbb
mov
iret
loop
and
push
dec
jecxz
lds
aad
hlt
es
mov
add
cmpsl
xchg
movb
fimull
sub
rcrb
pop
movzwl
inc
add
or
mov
roll
mov
clc
fimull
add
nop
mov
mov
icebp
popa
aad
bound
ucomiss
leave
xchg
fsubl
and
dec
out
fimuls
mov
fistl
xorps
hlt
mov
outsb
inc
sub
mov
push
cld
or
inc
and
push
jecxz
push
leave
push
insl
inc
testb
push
imul
ss
mov
xchg
mov
push
xor
dec
or
inc
xchg
nop
and
sub
push
pop
jmp
mov
pop
dec
cmpl
adc
ret
xor
mov
add
adc
jecxz
roll
jmp
lret
mov
stos
stos
loope
sbb
mov
push
lock
add
xchg
add
add
mov
dec
jae
bound
mov
jbe
cmp
inc
outsb
inc
lods
xor
mov
rclb
fs
sub
imul
int
fwait
push
adc
and
jns
pop
sub
sub
enter
nop
push
pop
sub
enter
incb
add
push
bound
lcall
sbbb
fwait
cmp
pop
mov
enter
xor
pop
mov
std
test
out
leave
sub
jl
mov
push
xchg
cmp
cmp
mov
mov
bound
out
push
je
inc
in
jo
in
push
adc
scas
or
xchg
into
fisttps
shl
or
bswap
mov
add
xchg
or
push
or
ljmp
sub
popf
jge
outsb
packuswb
cmp
or
add
test
dec
xchg
movsb
aad
aam
lods
pop
and
mov
int
pop
xor
jo
cmc
mov
cmp
mov
lods
or
scas
fwait
dec
sarl
xor
in
xchg
and
cmc
push
jp
sbb
cmpsb
mov
scas
insl
imul
or
les
xchg
test
push
outsb
subb
pop
inc
and
scas
in
jns
push
popa
or
and
inc
add
insl
push
sbb
lcall
inc
or
fdivrl
pop
xchg
test
pop
xchg
sbb
add
push
sub
pop
cmp
mov
cmpsb
push
pop
pop
push
sbb
sbb
add
bound
push
stos
pop
lret
jne
das
call
sbb
push
or
xchg
lret
xchg
jmp
imul
ficoms
mov
testb
or
out
push
popa
popl
xlat
hlt
xchg
arpl
xchg
lods
xchg
je
lock
bound
cmp
push
pop
dec
popf
outsb
imul
sub
and
sbb
pop
lret
sbb
das
dec
mov
fstps
adc
sub
sbb
add
cmpsl
cmc
rorl
push
add
push
adc
jnp
loopne
out
int3
insb
inc
or
das
loop
ds
and
out
sbb
xchg
cmp
sbb
fistl
xchg
xor
test
pop
jl
arpl
fwait
outsl
enter
imul
insb
test
adcl
jo
fisubrs
or
stos
mov
jo
std
jnp
mov
push
lds
pop
das
daa
shl
insb
or
in
insb
or
inc
leave
mov
enter
sbb
lods
out
xchg
insl
xlat
imul
dec
add
push
testl
ss
adc
push
std
xchg
add
cs
add
xlat
add
push
ljmp
pop
inc
add
jl
xchg
inc
add
mov
xchg
pusha
jo
mov
inc
xor
or
repnz
aas
call
push
fs
popa
jns
orl
push
mov
push
loop
sbb
adc
cmp
fs
add
insb
push
insl
xor
xor
xor
test
jb
push
outsb
cmp
xor
and
loopne
inc
push
adcb
sbb
dec
xlat
pop
push
sahf
pop
pop
add
or
sahf
iret
push
pop
daa
sbb
mov
adc
sub
cmp
cmpsl
inc
xchg
out
inc
adc
shl
adc
xor
btr
xor
mov
jo
add
xlat
mov
test
inc
imul
incl
repz
push
ret
leave
jo
or
mov
bound
es
jno
test
xchg
or
xchg
mov
push
sar
imul
adc
pusha
push
test
dec
inc
inc
aam
cmp
sbb
mov
movsb
jno
lods
rcll
mov
xor
mov
push
sbb
xor
push
sbb
xor
ss
cld
cmp
xor
inc
sub
push
jecxz
xchg
dec
push
pusha
xchg
ret
dec
ljmp
mov
add
es
jecxz
fcmovb
mov
push
pushf
lock
mov
sub
stos
or
test
imul
pusha
and
inc
sub
setno
adc
mov
push
dec
inc
push
add
push
lods
dec
loope
cmp
inc
add
or
or
xchg
mov
fcompl
data16
popa
in
jns
add
add
out
pop
xchg
or
test
and
inc
mov
loopne
jbe
adc
and
leave
or
pop
movsl
jno
movsb
repz
or
fildll
add
sub
outsb
xchg
fs
ljmp
push
or
orb
bound
jge
shrl
nop
cmpsb
mov
or
sarb
mov
mov
push
sbb
xor
pop
jns
pop
inc
fstl
mov
leave
aam
test
js
inc
mov
or
mov
aad
push
stc
push
or
and
cld
jmp
inc
xchg
imul
jbe
push
dec
cmp
fwait
shll
inc
mov
inc
nop
cmp
or
sub
xchg
test
shrb
or
rcrb
mov
orb
nop
lock
sbb
pop
bnd
aam
rorb
dec
sub
add
pop
es
pop
sbb
mov
sub
sbb
sub
push
push
push
lea
cmpb
ret
adc
add
mov
adc
mov
pop
mov
sub
xchg
jno
ret
in
add
sbb
pop
adc
mov
mov
mov
pop
push
xor
jmp
dec
xor
fcoms
jmp
popa
hlt
xor
and
jmp
lea
adc
call
pop
cwtl
outsb
push
xlat
pop
jno
sti
inc
mov
inc
sti
push
add
dec
movsb
adc
in
ja
pop
sub
stos
out
pop
adc
cli
mov
orb
add
sbb
xchg
sub
pop
imul
inc
jmp
movsb
mov
xchg
mov
cld
push
mov
ja
adc
xor
mov
mov
add
in
mov
test
add
ret
dec
add
enter
cli
xorl
lea
out
mov
add
jae
xchg
fcomps
mov
pop
lock
mov
mov
adc
jle
xor
dec
mov
dec
loope
pusha
das
add
jne
jle
sub
xlat
mov
pusha
push
ja
push
adc
xlat
cmp
xor
jmp
push
fidivrs
xor
push
hlt
aaa
add
pop
rcrl
xchg
pushl
cmp
nop
scas
in
fists
in
pop
xor
add
adc
dec
or
mov
inc
xchg
adc
cli
xchg
sbb
inc
pusha
pop
and
dec
leave
outsl
adc
xor
popa
inc
mov
sbb
addb
mov
ds
push
xor
lock
fadds
in
jle
rcll
rcrb
cld
sbb
cmp
inc
imul
pop
push
adc
add
cmp
out
test
sbb
pop
cmp
and
cmp
nop
pop
pusha
mov
in
shlb
xchg
jl
ja
jno
cmpb
flds
sbb
inc
jno
add
push
aas
cmp
fbstp
push
sbb
add
add
inc
inc
mov
fwait
adc
push
pmulhuw
movsl
xchg
repz
lock
ds
add
and
fstl
les
js
rorb
aaa
jb
sbb
or
jle
sbb
sahf
call
dec
pop
and
aas
leave
sbbl
sarl
mov
xor
mov
and
or
fs
aas
cmp
fcoml
in
push
aas
andb
mov
jg
adc
cmpl
or
xchg
sub
sbb
inc
add
pop
pop
fwait
dec
cmp
add
push
lock
lcall
inc
pop
in
sbb
dec
stos
lahf
nop
js,pt
pop
adc
mov
pop
jmp
test
jecxz
int
iret
sbb
sbb
fs
fdivrs
push
icebp
dec
jg
fbstp
lock
mov
nop
outsl
and
lea
and
inc
mov
les
data16
movaps
pop
lods
adc
sub
es
inc
pop
adc
testl
mov
pusha
mov
xchg
gs
cmpb
jne
pop
jns
push
xor
inc
push
sbb
fimull
loopne
jmp
pop
ret
jg
or
fs
rorb
cmpl
dec
loope
push
mov
scas
and
mov
insb
cwtl
push
mov
inc
pusha
xchg
add
cmpb
sbbl
xor
jae
shlb
movsl
add
jnp
or
shlb
jmp
adc
inc
cmp
loop
cmpsb
pop
add
push
dec
adc
loope
lret
test
xchg
sbb
push
cmp
stos
sahf
dec
or
mov
icebp
adc
mov
ljmp
aas
pop
mov
sbb
je
sbb
cmpsb
push
jg
jne
dec
dec
mov
or
cmpsl
sbb
shl
mov
add
rolb
jp
scas
sbb
cli
push
cmp
dec
or
inc
es
notl
out
inc
mov
rcll
and
repnz
bound
inc
cmp
cmp
add
push
stc
mov
inc
cld
jns
sahf
push
aam
cmpsb
ss
mov
fcompl
jp
push
pop
cmc
adc
jp
add
dec
mov
jo
call
sbb
repnz
test
rclb
dec
aam
mov
dec
rol
int3
mov
or
xchg
icebp
and
mov
adc
loopne
sbb
inc
or
inc
xor
sbb
mov
cmp
mov
push
or
sub
in
pop
dec
sti
int3
int
data16
xchg
or
add
xchg
or
jecxz
jl
pop
jo
and
lea
add
pop
add
jge
pop
mov
sarb
imul
cmp
lods
test
or
pop
mov
xchg
shrl
test
dec
cmp
imul
nop
inc
xor
loope
and
and
cmp
lods
jmp
push
and
xchg
mov
sbb
mov
pushl
jb
pop
jmp
adc
push
push
adc
test
jnp
pop
ret
dec
jp
call
testb
test
inc
fldpi
add
je
jmp
or
loop
push
mov
and
lods
lock
int
or
jle
push
inc
scas
imul
xor
inc
jge
sub
jb
mov
dec
in
cmp
jo
xor
inc
gs
iret
add
cmpsl
xor
adc
or
out
dec
jo
jae
mov
mov
les
jbe
fildl
mov
cmp
or
cmp
jge
aad
sarb
sbb
pop
aas
jae
mov
pusha
push
pusha
jmp
jbe
sbb
dec
ret
pop
mov
mov
popa
push
sbb
push
or
push
jmp
dec
gs
adc
or
mov
out
mov
cmp
test
push
add
in
or
rorb
mov
mov
inc
test
pop
adc
aad
push
mov
mov
andl
in
jmp
mov
add
stos
add
push
and
insb
shrl
mov
test
je
and
sub
daa
sub
cmp
jne
inc
enter
push
lea
out
fs
mov
xchg
jne
hlt
sub
cmp
push
loopne
add
add
ss
sbb
mov
jbe
pop
and
mov
cmpb
mov
pop
push
xlat
mov
rcrb
enter
sub
data16
adc
out
fstpt
ja
add
cmpl
sti
mov
test
xchg
icebp
pop
adc
nop
sub
push
test
dec
add
shll
or
lret
fcmovne
push
jmp
leave
pop
push
adc
xchg
or
adc
inc
and
jmp
adc
xchg
iret
push
sub
xchg
and
sub
repnz
lock
dec
inc
sub
sbb
movsb
adcl
pop
adcl
inc
lret
add
test
mov
cmp
xor
adc
pop
inc
sbb
or
add
and
jne
subl
xor
sub
pop
adc
popa
mov
pop
int3
and
push
inc
hlt
xchg
and
int
inc
add
rorb
add
shll
mov
and
cmp
sub
sbb
call
adc
cmpsl
push
jns
mov
xchg
daa
add
cmp
and
jmp
aaa
repnz
inc
cld
pop
add
sbb
push
andl
or
popa
add
xchg
dec
mov
fisttpl
cmp
jg
jp
cli
sbb
push
mov
or
fadds
lock
push
dec
mov
mov
and
push
les
lea
inc
cmpsb
mov
lods
xorl
lds
cmp
ret
iret
dec
mov
add
lock
sbb
cmpsl
outsl
stc
or
xlat
push
push
hlt
insb
mov
lea
push
cmp
push
mov
or
mov
enter
pusha
lds
dec
or
pusha
and
sti
inc
rcl
push
out
js
jo
sbb
dec
call
imul
dec
clc
add
cmpb
sub
ret
sar
sub
js
lea
jg
ljmp
je
aam
stos
mov
sbb
lds
sub
incb
inc
in
xor
cmpsl
call
icebp
outsb
lock
xchg
inc
call
loopne
insb
add
in
sub
stc
in
movsl
aaa
sbb
add
push
jecxz
jo
mov
lods
sti
js
inc
aaa
stos
rorb
or
pop
fcoms
popa
cwtl
mov
ja
push
add
fmuls
aaa
mov
fucomip
mov
sub
fmull
shl
movsb
rcll
inc
or
test
inc
iret
jbe
loop
or
addr16
adc
cmp
ret
push
push
push
sub
hlt
vmaxsd
fists
test
inc
jmp
lds
xor
jl
cltd
out
popa
xor
push
push
adc
push
dec
add
rolb
into
push
xchg
add
jbe
test
ret
pop
jne
inc
dec
ss
jns
jge
push
jge
nop
dec
in
dec
mov
lret
jg
sub
aaa
shll
push
add
push
les
inc
push
rcll
xchg
in
popf
bound
iret
sub
jno
dec
cmp
xchg
jge
add
lds
xchg
jg
xor
subb
bound
fildl
fs
push
pop
stos
xor
push
subb
push
fsubl
or
std
mov
adc
adc
jo
jmp
adc
sahf
fidivs
cwtl
pop
and
dec
pop
cmc
xor
push
sub
jl
jl
xor
pop
cwtl
jo
add
aaa
add
in
adc
mov
and
pushf
pushf
aaa
cmp
movsb
dec
dec
lea
cmp
xchg
addb
int
cmp
das
dec
add
stos
mov
pop
daa
add
pop
jne
mov
cld
inc
adc
aad
fsubrl
rorb
adc
mov
pop
sti
adc
loope
cmpsl
lock
adc
in
sti
or
or
leave
sub
jne
cmp
sbb
call
inc
scas
mov
inc
sahf
push
push
push
lock
pop
cmc
add
sbb
and
aad
xchg
rcl
iret
xor
rclb
loopne
ljmp
enter
pop
or
dec
enter
icebp
add
in
test
gs
int
enter
mov
dec
or
jbe
pop
inc
fcoms
jbe
fmulp
scas
lock
in
rorl
pop
les
dec
mov
and
hlt
nop
fcmovnu
sub
rorb
add
nop
cmp
sar
adc
into
pop
push
add
pop
jmp
xor
mov
mov
fdivs
mov
rolb
dec
pop
lcall
mov
xchg
sub
repz
inc
mov
ficomps
ret
inc
test
jae
addl
ret
in
rolb
lock
test
psubusw
shll
in
stc
xchg
mov
xchg
movsb
bound
ret
pop
and
loope
push
stos
xchg
pushf
xchg
rorl
mov
pop
lds
lods
and
xchg
popf
sbb
jns
or
dec
sbb
je
aas
adc
cmpsb
cmp
and
les
sbb
je
loopne
lods
dec
pop
or
xchg
sbb
xchg
lock
xchg
xchg
hlt
in
sub
shrb
xchg
cmp
and
adc
push
jae
cltd
sbb
mov
pop
inc
mov
xchg
sahf
es
fdivrs
test
cmp
dec
lods
push
movb
push
stos
and
out
int
lcall
and
add
loope
add
lcall
in
xor
cmp
sub
xor
xchg
or
jo
or
sbb
or
les
test
push
fdivrs
mov
mov
mov
push
insb
inc
cmp
mov
into
sbb
cmp
dec
cwtl
dec
and
xchg
aad
fimuls
mov
push
sbb
inc
loopne
in
dec
push
or
pop
outsl
dec
jo
cmp
push
push
inc
adc
adc
sbb
xchg
insl
lahf
mov
leave
push
lar
lods
aas
lret
mov
dec
aas
push
or
or
rcrl
outsb
lds
pop
push
or
sub
in
data16
sub
es
or
cmp
inc
push
xor
scas
pop
call
roll
call
cmpsl
xor
pop
ficomps
and
jo
aaa
mov
pop
mov
sub
cmp
jge
cmp
lds
dec
sub
push
mov
insl
xor
iret
in
es
iret
in
and
mov
pop
into
in
dec
les
xor
push
jne
mov
jmp
and
cld
pop
test
push
xchg
add
cmp
test
mov
shll
or
addb
cs
ds
mov
pshufw
cmp
rcrb
xor
lret
test
mov
sbb
jl
push
mov
stos
test
ret
xchg
mov
pushf
xchg
adcl
or
out
and
sbb
add
adc
or
mov
out
or
pop
mov
imul
shrl
mov
shrb
pop
and
bound
dec
daa
inc
or
sbb
push
or
mov
mov
clc
add
cmp
jmp
orb
and
jo
adc
and
sub
and
jo
loope
dec
and
mov
xorps
stc
adc
push
and
and
aas
push
enter
aaa
cmpsb
mov
sbb
sbb
inc
pop
clc
dec
call
push
cmpsb
xor
dec
lods
inc
test
leave
mov
fstps
jb
mov
rorl
mov
test
adcb
call
xchg
bound
sub
and
mov
dec
ss
xchg
cmp
cmpsb
outsl
call
push
add
jns
add
call
inc
sbb
mov
add
or
ret
punpckhdq
sbb
sub
mov
lea
pop
aad
add
lods
aaa
mov
xchg
adc
jno
aas
cmpsb
push
or
and
jg
mov
test
lods
add
and
dec
popa
adc
adc
mov
cmp
test
adc
sbbl
stos
sbb
xchg
mov
xchg
pop
rorl
jge
add
jp
pop
sbb
add
mov
dec
pop
sbbl
dec
mov
jge
jae
ljmp
enter
sbb
pop
pop
rolb
push
push
lcall
and
addr16
sub
push
fsubrs
xchg
pop
pop
pop
push
dec
shlb
loope
movsl
pop
mov
push
les
test
aas
daa
jmp
xor
pop
pusha
adc
cmpsb
test
push
jmp
push
cmp
loope
inc
rclb
js
pop
repnz
or
loop
stc
xor
xor
adc
or
out
mov
mov
fs
mov
jp
repz
pop
mov
push
cmc
pop
nop
xchg
fsubl
xchg
mov
dec
loopne
add
add
sbb
xchg
loopne
sarb
sbb
in
xchg
xor
fdivrl
xor
lods
outsb
testb
call
push
mov
add
clc
and
sbb
pop
pop
mov
inc
fsubl
mov
or
mov
imul
es
fistpl
push
inc
or
and
and
lock
pop
xor
inc
jo
sub
ret
ss
xchg
fwait
cmp
hlt
xchg
or
or
loopne
icebp
adcb
das
mov
add
inc
mov
add
sbb
test
inc
sbb
or
ret
inc
or
inc
pop
xchg
bound
loopne
sbb
or
and
xor
lods
test
rdmsr
lds
adc
rcrb
push
mov
sbb
lea
jb
daa
daa
rcl
aam
push
pop
test
jo
rcl
das
sarb
lea
add
pcmpgtd
mov
mov
mulb
xchg
out
cs
out
sarl
loopne
push
cmp
cmp
pop
test
shrb
dec
adc
scas
shlb
pusha
lret
sub
pop
popa
xchg
mov
push
fsubl
adc
shrb
sbb
add
push
cmpsb
push
xor
les
leave
mov
loopne
loopne
dec
fildl
pushf
imul
repnz
sub
mov
aaa
idivb
js
rcrb
scas
and
test
push
int3
lcall
jmp
shrl
addr16
lock
iret
jg
cmpb
repnz
test
jnp
and
mov
adc
cmp
add
add
jbe
iret
sbb
mov
das
repz
sbb
jp
nop
mov
addl
pop
xchg
sbb
int3
or
adc
loope
push
inc
jl
pusha
lea
dec
fsubs
movl
int
sub
rcll
adc
js
xor
inc
ret
shlb
mov
sbb
adc
mov
mov
pop
inc
cmp
xchg
into
test
mov
sub
mov
push
stc
sub
lea
int3
jmp
data16
dec
fildl
loopne
data16
sbb
mov
mov
shrl
add
or
nop
or
mov
aam
xor
adc
pop
ret
jecxz
sti
es
jae
or
cld
rolb
or
mov
outsl
loop
and
push
mov
and
sub
aas
cmp
fwait
mov
inc
add
test
dec
add
pop
jo
mov
or
es
xchg
xchg
cmp
xchg
add
push
sub
and
push
pop
cmp
xor
pop
or
mov
cmp
lahf
xor
or
insb
ror
or
jmp
add
and
daa
dec
inc
fwait
out
push
aas
je
std
or
xor
hlt
sub
mov
fmull
dec
call
inc
int3
ror
and
mov
ss
push
cs
jne
daa
inc
or
sbb
inc
orb
dec
ficomps
or
cmp
mov
outsb
mov
xchg
mov
ds
inc
pusha
adc
push
inc
inc
add
push
jo
dec
je
outsb
vpsllw
shll
jno
ret
cs
sub
ret
xor
xor
jl
sbb
jg
bound
dec
mov
scas
int3
jae
xchg
dec
sbb
add
test
std
mov
sbb
mov
inc
pop
sti
sub
adc
sub
push
insb
add
mov
call
icebp
pop
cmp
cmp
insl
pusha
movsb
lret
loop
inc
mov
adc
aas
mov
mov
movb
movsb
leave
cmp
test
inc
add
leave
test
and
cwtl
insb
mov
enter
jne
pop
mov
pusha
jno
or
xor
or
lods
mov
sub
inc
aas
jbe
and
push
dec
sub
aas
inc
call
inc
push
ljmp
pop
out
sahf
xor
add
movl
pop
pop
or
sub
xchg
clc
add
aaa
or
mov
push
jo
popl
or
jo
filds
out
inc
aam
or
fwait
and
icebp
inc
repz
adc
push
push
mov
mov
rcl
aad
sbb
xchg
bound
jne
xor
mov
clc
jno
fimuls
sub
ret
cmp
popa
out
push
pop
jmp
and
lea
jne
call
lods
fsubl
popf
lods
or
ficomps
jo
orl
roll
rcr
pop
inc
int
inc
out
sub
adc
lahf
push
xor
das
leave
xchg
push
js
inc
push
xor
movsb
inc
test
add
xor
adcb
mov
mov
xchg
repz
xchg
ret
or
unpcklps
sbb
in
mov
mov
loopne
popf
add
je
or
inc
xlat
mov
jmp
imul
fsubrs
or
xchg
testl
cmp
push
les
arpl
fmull
call
cmp
decl
mov
dec
add
adc
sarl
jecxz
int3
decl
inc
ja
xor
inc
dec
push
or
lea
mov
sub
or
shll
int3
out
iret
push
lock
or
jo
out
pop
xor
pop
mov
sub
iret
fiaddl
enter
cmp
mov
pop
or
addr16
mov
lds
push
xor
pop
aaa
cmp
inc
xor
adc
ror
xchg
push
lahf
dec
and
mov
roll
dec
in
lock
mov
jl
xchg
mov
pop
xor
jle
loopne
js
push
sbb
or
and
ret
pop
sub
mov
lret
cmp
push
jnp
fisubrl
jmp
inc
incb
pop
pop
jb
inc
pop
mov
pop
inc
popf
adc
add
or
sub
mov
sub
add
pusha
add
test
mov
mov
add
mov
xchg
push
mov
dec
mov
sub
adc
xchg
inc
mov
mov
lock
nop
or
sub
inc
sub
pop
push
in
adc
mov
aas
mov
sub
xchg
mov
and
cmp
mov
sub
cmp
pop
je
push
cmp
sbb
cmpsl
test
and
sti
pop
push
pop
daa
push
adc
xor
lock
mov
adc
int
or
xchg
insl
xor
or
inc
sub
imul
pusha
outsl
out
xor
jae
push
movsl
or
movsl
sbb
push
cmp
add
int
pop
test
jne
adc
pop
movsl
sub
jl
cmp
js
test
sub
adc
mov
push
pop
stos
xor
cmp
add
sbb
mov
add
add
mov
xchg
jb
mov
mov
inc
out
sbb
and
addb
dec
int
pop
inc
pop
test
mov
ret
adc
or
xor
mov
inc
rcrl
es
sub
aad
sbb
xor
aad
add
je
in
call
push
adc
pop
dec
push
daa
lock
push
jg
inc
push
adc
and
lock
dec
inc
jle
mov
xchg
movsb
into
js
cmp
and
push
dec
add
dec
jne
mov
dec
xor
push
into
stos
pop
es
andl
mov
shrb
jnp
xchg
add
or
pop
xchg
mov
outsl
xchg
push
out
inc
enter
push
jnp
or
push
aaa
pushl
dec
mov
add
xor
dec
sub
adc
and
xchg
mull
scas
shrl
push
in
leave
add
addl
pop
imul
pop
sub
dec
shll
rol
arpl
adc
test
clc
xchg
sub
sbb
test
adc
mov
cli
lcall
push
test
insl
shrb
mov
sbb
in
aam
lret
adc
adc
fs
enter
sub
sbb
gs
enter
jmp
dec
sahf
int3
popa
cmpl
adc
inc
ficoms
std
dec
pop
or
nop
jp
fiaddl
jne
dec
push
popa
dec
xor
inc
loop
jle
aas
jmp
mov
push
in
shl
sahf
out
je
push
sbb
push
je
sti
shlb
ror
cmp
into
loopne
pop
iret
ffreep
or
dec
enter
jge
iret
es
mov
pop
xchg
test
fsub
jle
mov
inc
pop
xorb
sbb
cmp
adc
rclb
add
and
xlat
mov
inc
push
loopne
xchg
mov
jnp
add
sub
push
ret
stos
int3
subb
pusha
or
dec
fcmove
mov
lret
mov
cld
jmp
push
mov
ret
add
andb
stos
rclb
das
adc
popf
push
movsb
lcall
sbb
pop
push
pop
rorb
or
aaa
inc
and
pop
and
sbb
jmp
inc
testl
adc
pop
clc
jl
aam
std
popf
pop
aas
push
push
js
jne
pop
jb
xchg
sub
pop
dec
negb
fildl
push
repnz
and
inc
outsb
imul
sub
xor
add
lea
call
iret
xor
jmp
mov
stos
xor
sub
mov
xchg
repz
adc
lahf
adc
arpl
test
dec
fiaddl
xchg
push
aam
int3
mov
inc
mov
movsb
fcoms
int3
mov
enter
dec
test
push
lods
fcmovnb
sub
cmp
xchg
cmp
pop
or
enter
cmp
unpcklps
sbb
clc
dec
push
add
mov
daa
mov
xor
pop
test
mov
scas
sub
addb
mov
sub
cltd
movl
ret
mov
ret
inc
sbbl
mov
cmpb
mov
hlt
test
adc
add
add
pop
popf
adc
xchg
jne
outsb
loope
mov
dec
xor
fs
jle,pn
aaa
dec
and
dec
inc
jne
js
and
xchg
inc
cmp
les
testb
je
je
mov
adc
pop
and
pop
cmp
pop
and
out
adc
sti
add
adc
cmp
pop
push
aam
mov
gs
mov
mov
movb
iret
push
jo
mov
hlt
call
xor
les
sub
dec
outsl
rolb
or
add
gs
add
jo
adc
rcl
sbb
sbb
jno
and
mov
jbe
push
clc
sub
ja
push
ds
outsl
popa
ljmp
sbb
add
inc
push
subb
add
sub
mov
adc
pop
pusha
inc
push
inc
negl
pop
hlt
pushf
lods
xor
lock
movsb
dec
lods
push
xchg
mov
jp
cvtdq2ps
bound
xchg
mov
sahf
andb
adc
pop
test
int3
mov
ficoml
xchg
dec
sbb
cmpsb
push
pop
sahf
xorb
fstl
adc
rorl
jmp
xchg
aad
pop
jp
sbb
aam
psraw
sarb
mov
xor
mov
ljmp
daa
pop
call
add
add
cmp
mov
push
mulb
mov
jp
or
into
push
adc
and
mov
push
cmp
aas
imul
movsb
insb
push
mov
cmp
enter
xchg
sahf
pop
sub
cmpl
dec
cmp
inc
add
xor
pop
mov
roll
sub
inc
das
popa
test
push
pop
mov
or
loopnew
or
daa
mov
adc
pusha
and
test
inc
andb
daa
in
enter
cltd
mov
in
mov
add
xchg
test
rorb
fcompl
push
hlt
cmpsb
sbb
adc
xor
push
leave
ss
or
mov
clc
jp
dec
ret
push
leave
or
decl
jg
cli
shl
add
sete
cmpsl
cmpb
pop
adc
jne
movsl
jno
cmp
enter
or
fcomps
add
inc
mov
dec
xchg
and
data16
xchg
jo
popa
cmp
imul
dec
jns,pn
sbb
das
and
inc
pop
dec
pop
jns
mov
xor
or
outsl
andl
pop
mov
cmp
inc
or
adc
sbb
dec
popf
pusha
mov
lods
mov
dec
jge
push
rorb
push
mov
or
mov
stos
inc
cmp
ret
cmp
pop
ret
adc
or
mov
add
popf
jp
jg
aaa
dec
and
and
inc
and
and
lret
enter
push
inc
xchg
mov
jle
dec
jge
xor
nop
push
scas
mov
mov
pop
mov
push
add
dec
lods
nop
sbb
mov
sub
push
add
jbe
push
jmp
cmp
imul
push
cli
pop
dec
cmc
xchg
cmpxchg
xlat
adc
fisubrl
outsb
imul
add
adc
in
rcrb
mov
repz
and
popa
sub
xor
mov
lret
xor
jmp
shl
inc
xchg
add
or
or
inc
pop
mov
test
mov
mov
push
mov
lahf
lock
jmp
mov
lock
fildll
mov
hlt
dec
sbb
or
nop
lods
sahf
mov
ret
push
int3
and
and
loope
bound
inc
movsb
fnstsw
push
sub
arpl
out
cmp
scas
das
inc
data16
test
xorl
repz
hlt
cs
enter
popa
pop
add
lea
jmp
xor
popa
and
out
sbb
adc
test
movl
pop
movl
sub
enter
mov
clc
ret
shrb
insb
lods
dec
dec
pop
xchg
push
in
xor
out
mov
pusha
loope
cli
adc
ret
fsubs
inc
shrl
out
push
lcall
add
xchg
pusha
or
cmp
inc
push
pop
test
int
mov
add
aaa
iret
jne
mov
and
lea
push
call
mov
js
inc
stos
fucom
xorb
xchg
test
incb
cmp
inc
push
mov
dec
clc
fcoms
lea
popf
add
push
ds
dec
inc
push
fs
add
push
pop
punpckhwd
cmp
jge,pn
orb
int3
subb
aaa
mov
mov
cmpsb
cli
pop
test
lds
cmp
push
sbb
pusha
mov
loop
inc
pop
cmp
pop
fsts
jae
push
and
xchg
push
rcrb
dec
cmp
add
pop
cmp
leave
push
or
or
push
and
ror
mov
add
ja
push
adc
mov
pop
iret
inc
jp
or
mov
sub
inc
or
in
jnp
icebp
test
xor
shr
test
loop
js
out
mov
xchg
mov
ja
sbb
push
addr16
jle
in
mov
sbb
prefetchwt1
or
mov
sahf
int
jmp
xor
and
shrb
sub
fwait
push
mov
inc
sbb
adc
sarl
push
insb
pop
and
or
and
add
or
rclb
enter
dec
jno
sub
mov
push
cmp
push
push
dec
sbb
testl
lods
xor
mov
test
je
push
insl
scas
add
pop
sarb
add
pop
xor
rclb
cmp
cmp
out
je
add
iret
push
xor
int
inc
mov
mov
add
mov
in
lret
shll
mov
out
push
push
mov
loopne
or
int
or
mov
dec
xchg
add
jp
je
ss
or
mov
rcrb
xor
adc
hlt
pop
dec
or
lock
mov
mov
pop
xlat
inc
or
lret
mov
adc
ds
lretw
pop
call
lret
xchg
rclb
lret
or
push
mov
or
xor
js
cs
shlb
or
and
rclb
mov
jmp
jmp
sbb
push
nop
lock
adc
lcall
shlb
mov
lds
in
inc
sub
xor
nop
mov
dec
int3
enter
fadd
dec
mov
jb
xchg
lret
or
andb
add
pusha
into
or
or
sbb
adc
push
adc
dec
out
es
in
aaa
in
and
lods
inc
aas
das
cmp
cmp
pop
mov
and
mov
sub
mov
clc
movsb
popl
inc
push
jne
xor
popa
adc
daa
fstps
mov
cmpb
adc
add
daa
out
dec
or
dec
add
stos
xchg
icebp
or
jmp
jp
dec
je
add
adc
cmp
or
or
inc
inc
movsb
mov
mov
inc
jle
and
add
add
movsb
es
jg
xorl
lock
push
sbb
les
inc
mov
fdivs
push
mov
call
add
add
xor
cmpsb
inc
pusha
movsl
adc
cmp
push
gs
loope
mov
mov
mov
adc
push
push
push
mov
jg
xor
mov
addb
notb
cs
mov
mov
xor
stos
jo
imul
mov
or
test
fucomip
les
or
adc
push
pop
sti
fwait
dec
dec
push
or
pop
inc
sub
xor
scas
js
dec
inc
stos
dec
ljmp
icebp
lds
pop
push
and
repnz
adc
rclb
out
enter
in
jbe
push
fildl
cmp
ret
adc
sub
test
xchg
dec
or
mov
daa
clc
jle
and
dec
lret
push
sub
fdivrs
inc
jl
das
icebp
push
and
es
cld
pop
mov
mov
add
jo
in
lods
cmp
mov
sbb
imul
test
pop
inc
sub
add
mov
push
movsb
add
add
mov
call
out
push
mov
test
mov
inc
inc
add
push
fisubl
xlat
pop
repz
loopne
mov
and
sbb
fdivs
push
orb
push
rcll
mov
jo
mov
ret
cld
pop
mov
leave
sub
es
pop
arpl
sub
add
call
cltd
inc
std
inc
sbb
mov
pop
adc
adc
jge
xor
repnz
push
in
and
pop
or
rolb
adcb
pop
mov
cmpsl
xorb
and
cmp
in
shll
fcoms
dec
sbb
in
popf
add
aam
pop
rcl
mov
mov
dec
hlt
repz
clc
or
fstps
pop
inc
adc
pusha
cmp
dec
jp
mov
js
imul
nop
xchg
mov
jg
inc
adc
clc
cmp
dec
sbb
ljmp
pushf
pop
sbb
fistpl
out
in
sub
ficomps
mov
and
test
xchg
add
adc
mov
and
fldenv
adc
fldt
adc
dec
mov
shl
xchg
xor
sbb
in
shlb
int3
rcrl
adc
and
in
lcall
and
mov
and
sub
shll
ficompl
pop
scas
add
sub
shr
xchg
dec
sti
aaa
movsl
shll
cmpsl
push
ds
and
lods
cmp
pop
std
jnp
in
rcr
push
mov
adc
inc
dec
jecxz
inc
cltd
arpl
outsl
pop
sahf
fcmovne
popl
sub
mov
mov
rcrb
sbb
push
pop
inc
adc
pop
roll
pop
inc
sbb
mov
mov
mov
fs
push
fcom
mov
sub
aas
std
rol
add
inc
imul
rorb
cwtl
mov
sbb
arpl
cmp
mov
or
xor
mov
push
clc
add
inc
push
fbld
test
shl
push
std
cmp
cmp
inc
outsb
bound
add
push
jmp
xchg
xchg
mov
adc
cltd
sbb
mov
jns
movsb
cwtl
sub
or
out
adc
jo
movsl
js
push
pop
dec
mov
ret
mov
jg
pop
add
out
dec
mov
int
or
out
dec
lahf
inc
out
inc
cmp
adc
jge
pop
outsl
test
mov
pusha
xchg
ret
arpl
into
sub
sbb
jo
or
sbb
shl
or
cmp
ror
cld
ret
cmpsb
push
movsl
and
ret
add
adc
push
icebp
xchg
cmc
roll
dec
push
dec
add
push
jo
jo
jns
and
cmp
push
sbb
dec
loopne
nop
ja
and
dec
call
enter
stos
xor
lds
dec
xchg
push
testb
sbb
cmp
mov
add
stos
push
sbb
push
clc
mov
pop
mov
inc
push
movsb
jge
push
and
je
add
xchg
dec
insb
inc
sbb
pop
add
xchg
xchg
mov
cmpsb
pop
movsb
pop
pandn
mov
adc
sub
iret
sti
faddp
roll
push
push
jl
dec
cli
fimuls
cmp
loope
ljmp
inc
fwait
lock
shlb
push
cmp
jmp
mov
out
sbb
lds
sbb
mov
out
mov
mov
pop
lcall
or
jnp
sub
add
or
scas
or
out
pop
fimull
mov
aad
mov
cmp
paddw
push
std
stc
das
sarl
call
push
mov
fcomip
inc
loope
push
xchg
fildl
inc
add
mov
cmc
lcall
inc
push
push
mov
jno
mov
rcrb
jne
int3
cmpsb
xor
inc
inc
je
jbe
movsb
add
and
jb
add
mov
pop
mov
dec
loope
and
popa
push
mov
mov
clc
xchg
mov
add
or
cmpsb
dec
push
sbb
jne
push
rcrb
inc
and
out
sub
sub
adc
mov
dec
dec
mov
in
stc
test
mov
mov
adc
dec
sahf
xchg
test
daa
out
in
movsb
fsubl
leave
cmp
cwtl
cwtl
inc
mov
dec
nop
mov
out
sahf
mov
test
mov
jmp
adc
fdivrs
inc
add
rclb
fcoml
outsb
pop
jp
push
mov
jecxz
outsl
mov
add
popa
insb
push
ja
sbb
aas
inc
aas
push
lock
push
out
cli
cmpsb
fdivrs
add
cmp
lods
outsl
outsl
mov
and
ja
or
clc
or
push
testb
pop
or
pop
out
popa
add
sbb
mov
push
sbb
ret
iret
xchg
dec
aam
adc
out
xchg
aas
rclb
outsl
insl
add
insl
or
push
outsl
mov
push
adc
out
incb
or
dec
dec
inc
push
sbb
cmp
adcb
rclb
in
pop
inc
add
dec
mov
add
sbb
sbb
outsl
mov
sbb
push
in
std
movsl
jbe
sbbb
cmp
mov
add
or
fidivs
je
adc
or
mov
jecxz
out
push
cmp
add
push
sbb
icebp
frstor
inc
dec
and
imul
cmc
pop
push
lock
nop
mov
or
cmp
sti
xor
cmpsl
repnz
addr16
push
or
jo
jle
xchg
popa
das
add
push
imul
mov
je
or
or
or
pop
or
ja
and
mov
dec
shrl
push
gs
mov
sub
push
or
dec
push
sub
xor
pop
mov
in
fs
inc
add
sbb
cli
sub
out
push
and
pop
inc
push
mov
std
adc
or
nop
jo
xor
test
add
push
icebp
add
sahf
sti
adc
scas
sub
mov
js
in
push
dec
es
rcl
push
xchg
inc
cmp
insl
sbb
lock
adcb
push
push
pop
popf
decl
cwtl
ss
push
dec
sti
push
mov
push
adc
or
and
add
adc
mov
ja
jns
ja
or
sbb
cmp
inc
add
movsb
enter
flds
pop
pop
lret
rorl
or
push
lea
ficoms
sbb
popa
inc
gs
in
mov
lea
insl
repz
icebp
or
mov
roll
xor
add
pop
jae
cwtl
ret
inc
adc
loopne
rclb
shrb
enter
bsf
jmp
push
ds
pinsrw
lods
sbb
inc
loopne
je
add
cmove
mov
shlb
loopne
fdiv
add
and
push
fdivr
push
das
cmpsb
ret
and
mov
flds
pop
insl
ljmp
popa
add
ja
aaa
adcb
ret
fldl
outsl
pop
push
pop
movsb
bswap
lahf
mov
cmpsb
xor
dec
xchg
inc
jmp
test
mov
jecxz
pop
jno
das
popa
in
dec
arpl
add
pushf
add
incl
mov
es
insl
adc
xor
or
in
enter
jmp
jmp
enter
pop
andb
lea
pop
pop
add
dec
or
sub
dec
or
imul
pop
imul
out
mov
dec
xor
mov
imul
shrl
dec
mov
lcall
rol
or
bound
adc
in
pop
adc
push
pop
es
sbb
outsb
das
mov
dec
push
shl
inc
dec
push
enter
cmp
sbb
jae
push
add
bound
mov
cmp
sbb
lahf
pop
out
xlat
in
arpl
adc
ret
pop
cmp
fists
in
lds
pop
pop
pop
pop
pushl
cmp
outsl
mov
inc
orb
addb
pop
sbb
rcr
jne
loopne
mov
aad
fcoms
add
pop
ss
cmp
hlt
das
or
cmpsl
inc
dec
aaa
aam
enter
sub
jb
in
lcall
push
sbb
xor
adc
loopne
adcb
inc
mov
sbb
js
icebp
ret
push
test
into
mov
push
out
pop
jmp
pop
ret
movl
xor
out
ja
dec
and
nop
in
xor
popa
inc
or
out
loopne
or
imul
sbb
push
inc
test
addl
nop
popl
cltd
loop
mov
nop
adc
pop
js
xlat
pushf
movsb
icebp
push
fisubrs
cli
push
jl
or
jo
and
rcrb
fnstcw
mov
or
xor
sub
ljmp
insl
icebp
clc
cmp
push
pop
sub
out
sub
and
fildll
cs
testl
inc
xchg
cmp
mov
and
roll
xchg
icebp
jecxz
loope
or
cmpsb
aad
in
and
icebp
daa
inc
outsb
xorb
or
jo
xchg
and
and
aad
dec
mov
scas
pop
push
clc
dec
int3
push
loopne
lcall
mov
out
mov
pop
pushl
lcall
mov
pop
aas
or
dec
sbb
xchg
dec
fimull
inc
ja
mov
incl
sbb
fists
cmovg
clc
mov
push
push
jb
cmp
and
cwtl
cmp
dec
ja
mov
scas
nop
mov
out
xor
pop
enter
out
mov
out
cmp
cs
adc
push
pop
sbb
sub
loopne
dec
adc
sbb
nop
xor
movsb
scas
pop
xchg
cld
xchg
or
mov
sub
cmc
xchg
das
mov
daa
cwtl
scas
inc
cs
loop
les
add
inc
dec
pop
or
mov
stos
add
shrl
xchg
jo
jl
mov
inc
fprem1
mov
adc
jge
testb
int
xor
notb
andl
je
sahf
pusha
mov
sub
pop
push
rdmsr
nop
xchg
xor
sub
pop
mov
mov
shlb
out
push
inc
jl
aaa
push
out
or
aaa
data16
jecxz
testb
lds
cmp
enter
dec
pop
adc
mov
loopne
pop
or
lods
outsb
int
mov
sbb
movsb
mov
inc
fldcw
pop
imul
xchg
add
sysret
xor
mov
inc
mov
adc
or
adc
sarb
pop
outsl
cmp
cmpsl
test
push
adc
addb
dec
adc
cmp
stc
pop
sub
nop
cmp
stc
adc
inc
test
lods
push
enter
mov
sub
inc
out
mov
push
sub
mov
push
js
mov
jbe
push
sarb
les
mov
push
xor
sbb
repz
faddl
xor
hlt
mov
dec
push
adc
push
mov
es
adc
add
lea
push
stos
jne
ficoms
pop
xor
sbb
pop
pop
lret
mov
xor
sarb
and
dec
lea
adc
or
out
sbb
es
adc
or
mov
mov
push
add
ja
xor
mov
adc
out
inc
jae
sbbl
jo
enter
jo
and
ret
fidivl
insb
fdivrl
sbb
js
jl
shrl
arpl
shrb
mov
adc
and
xchg
mov
pushw
or
xchg
add
sahf
xchg
getsec
xor
enter
jae
add
or
fcoms
adc
fdivs
sbb
das
fsubs
or
add
mov
mov
mov
push
sub
and
mov
gs
jp
lcall
cwtl
fcomps
sub
dec
outsl
jb,pn
enter
xlat
jmp
or
or
out
xor
xchg
test
cmpsl
ja
or
or
lea
pop
xchg
push
out
jecxz
or
fcomi
add
and
xor
pop
xchg
outsb
mov
aad
call
sbb
test
and
dec
lret
cmp
sub
mov
push
insl
mov
jns
add
or
or
insl
add
bound
or
sub
mov
cwtl
xchg
push
mov
jge
cmp
adc
insb
xchg
and
adc
mov
bound
or
ss
imul
out
std
or
mov
or
or
fsubs
adc
or
xchg
outsb
ficompl
or
out
or
data16
inc
fwait
mov
stos
pop
sbbl
pop
cmp
adc
cmovle
jne
lahf
or
or
int3
das
int3
outsb
add
lock
test
add
call
inc
loop
pusha
mov
adc
push
sahf
out
cmpsl
inc
xchg
clc
std
dec
xor
mov
sub
add
push
pop
pop
or
push
jae
and
or
movl
mov
call
and
neg
stos
ljmp
inc
lock
dec
cmpsb
xchg
stos
pushf
mov
imul
or
pop
add
stc
pushf
insl
xchg
add
jns
push
jne
test
int3
test
cmp
cmp
mov
push
cmpsl
or
jecxz
and
mov
cmp
xchg
mov
mov
push
dec
movhps
push
or
mov
sub
jnp
pusha
stos
dec
loope
adc
or
mov
inc
pop
push
xlat
jb
jo
push
adc
rcll
aaa
push
movsb
andl
cmp
ret
push
outsl
pop
fwait
mov
jne
add
sub
je
add
mov
fisttpll
cmc
inc
or
cs
adc
jbe
add
lea
or
shll
mov
popf
add
or
fs
ret
or
push
repz
nop
xor
add
loop
movsb
ss
add
adc
aaa
add
pop
push
iret
fidivl
pop
jl
inc
les
cmp
push
fdivs
sbb
fbstp
clc
arpl
and
mov
pop
adc
insl
dec
xchg
dec
jmp
mov
sub
testl
dec
hlt
fwait
push
mov
testb
or
push
loopne
push
add
push
mov
pop
adc
dec
fstl
adcb
add
sbb
in
push
ljmp
mov
pop
inc
fs
incl
and
xor
mov
out
xchg
adc
adc
addr16
dec
sub
pop
inc
dec
stos
rcrl
jp
pop
sti
sub
movsl
mov
xor
clc
xor
popf
ret
mov
or
fisubs
sahf
sbbb
fsubs
adc
pop
sti
mov
loopne
dec
or
or
pop
add
cmp
xor
testl
push
add
push
sbb
int
inc
add
dec
or
or
in
mov
dec
push
sbb
dec
add
rcrl
add
xor
and
or
push
jmp
dec
cmp
dec
or
ljmp
add
shlb
pop
movsb
push
dec
push
add
adc
je
sub
mov
pop
adc
filds
and
or
and
add
add
roll
xchg
lret
fptan
or
out
adc
adc
or
aam
or
arpl
ss
adc
andb
or
daa
or
and
push
shrl
adc
xor
adc
inc
pushf
mov
cmpsl
push
out
and
xor
xchg
add
pop
daa
pop
movsb
mov
cmpsl
dec
or
xchg
add
sbb
stos
cmp
or
push
roll
sbb
dec
xchg
out
nop
add
sbb
call
pop
xchg
loopne
cmpsl
insb
outsl
add
or
add
jbe
aas
adc
ss
and
mov
xor
add
sbb
mov
adc
inc
mov
rolb
dec
outsb
jo
fmuls
dec
outsb
adc
data16
ja
push
push
dec
or
inc
jge
push
insl
jp
movsb
xor
outsb
and
jnp
lret
inc
popa
sbb
pop
xlat
mov
push
loopne
cmp
push
jae
jno
in
sbb
shlb
xchg
inc
sar
xor
addr16
add
test
jo
int3
adc
in
push
sbb
call
fcomps
cmpsb
fisubs
stos
xor
adc
push
add
mov
and
rolb
out
add
and
adc
scas
jge
jmp
or
mov
sbb
rcrl
lods
adc
call
mov
loopne
adc
repnz
insb
jno
mov
insb
jle
in
inc
dec
out
pop
enter
sbbb
jg
inc
xchg
and
test
pop
adc
pop
xchg
dec
add
sbb
ret
je
test
and
mov
or
xor
sub
or
and
xlat
or
and
sub
xchg
cmp
inc
sub
add
push
popf
xchg
mov
inc
dec
xlat
add
test
add
mov
and
cs
mov
pop
fisttps
push
jns
pop
and
faddl
les
add
gs
and
mov
dec
aaa
cs
or
daa
sub
pop
cmp
push
cmp
adc
mov
ret
out
jp
or
add
jae
scas
cld
adc
cmp
adc
jnp
mov
lds
pop
push
add
pop
add
sbb
adc
sbb
mov
jbe
sbb
int
bound
xorb
or
adc
loope
pop
aas
add
mov
scas
and
fnstcw
mov
add
test
lret
inc
loop
lea
mov
or
std
add
ss
lods
shll
dec
mov
cmp
inc
or
jo
or
push
adc
dec
adc
jmp
or
mov
mov
or
and
inc
subl
fisttps
sbb
ret
mov
mov
push
inc
repz
lret
or
pop
addb
jo
bound
pop
pop
add
inc
pusha
aas
add
gs
sbb
xchg
pop
push
adc
pop
repz
sbb
or
rol
testl
add
push
adc
cmp
inc
xor
push
dec
inc
jl
and
and
int3
push
int
test
mov
mov
jge
pushf
xor
xor
fs
adc
pop
movb
bound
fisubrl
roll
sub
cmp
lahf
cmp
mov
lahf
nop
loop
and
pop
pop
jno
repnz
lea
data16
or
add
test
mov
inc
or
pop
mov
sbb
adc
xchg
jle
push
cmp
iret
enter
movzwl
pop
or
lods
add
jbe
cli
xchg
call
in
xchg
stos
jbe
xchg
cmp
dec
ds
adc
adc
gs
loope
out
ret
xchg
mov
mov
pop
int
gs
add
or
aad
add
adc
mov
cwtl
mov
mov
pop
jmp
push
ret
and
packsswb
out
sbb
xchg
adc
jne
adc
cmp
xor
pop
or
jo
stos
jmp
xor
push
dec
js
xlat
scas
mov
jns
pop
sbb
xchg
jge
add
xchg
test
push
mov
or
ss
push
lea
std
rcl
or
add
dec
insl
adc
sbb
cltd
push
cmp
mov
sbb
push
dec
mov
call
sbb
shrl
lods
inc
fsub
das
sbb
sub
push
cmp
xchg
jne
xor
push
adc
pop
stos
push
push
incl
cwtl
pop
rcl
jmp
jae
adc
push
iret
mov
sub
pop
pop
dec
enter
jns
mov
aam
ret
rorl
movsl
push
test
pop
rcrb
sub
add
ja
adc
jmp
sbb
loop
mov
movl
adc
push
pop
adc
add
add
add
cwtl
push
push
cmp
dec
pusha
repnz
dec
stc
add
fisubrl
sbb
or
inc
inc
inc
inc
pop
xchg
rcrl
adc
or
or
or
add
pop
mov
dec
and
inc
inc
and
or
rol
insb
sbb
pop
xlat
inc
fs
adc
jl
inc
cmpsb
pop
mov
mov
aad
mov
xor
pop
adc
and
testl
nop
push
addr16
roll
sbb
mov
push
shlb
nop
pop
push
jo
pop
cmp
loope
mov
mov
inc
mov
and
inc
jb
xor
and
add
adc
push
sbb
add
inc
or
popa
or
faddl
aas
int3
rclb
push
gs
mov
push
cmp
rorl
xchg
inc
or
add
add
cs
fwait
popf
dec
lcall
flds
je
icebp
add
push
sbb
cmpsb
mov
xchg
loop
test
repz
ficomps
pop
prefetcht0
sub
push
test
cwtl
pop
inc
xchg
pop
insb
cltd
adc
jg
and
bound
dec
mov
add
arpl
inc
sub
imul
adc
dec
pop
das
inc
lea
jp
mov
or
cli
add
fchs
fmull
aas
jg
push
jbe
das
and
lea
adc
sbb
scas
sbb
dec
stos
mov
sub
and
dec
add
cmp
fmull
sbb
lret
push
rorl
push
pushf
and
dec
adc
pop
mov
xchg
and
push
xchg
jp
xor
test
or
sbb
sub
sarl
adc
or
dec
das
into
xor
mov
adc
add
or
nop
mov
sbb
dec
int
dec
lret
movsl
mov
insl
rcrl
xchg
insb
sbb
je
cmpsb
popa
rcll
ds
push
lahf
mov
js
add
add
mov
or
jno
cmpsl
mov
or
add
pushf
add
test
sbb
add
mov
inc
adcl
dec
add
in
pop
push
cmp
push
dec
mov
pop
stc
xchg
punpcklwd
lret
test
sub
and
add
loopne
add
push
add
ja
mov
movsl
or
mov
lret
cmp
insl
arpl
inc
leave
pop
fcoms
jno
outsb
pop
es
mov
gs
mov
adc
add
and
sub
movsl
insl
arpl
xchg
sti
pop
testl
outsb
jecxz
iret
inc
daa
adc
les
loope
or
or
push
push
sub
sub
inc
imul
cmp
inc
out
and
push
cwtl
icebp
xor
jo
lods
adcb
add
ja
movsl
xchg
mov
adc
adc
add
inc
pop
mov
dec
xor
and
inc
push
fst
outsl
dec
outsl
cmp
outsb
or
adc
cs
nopl
sti
mov
push
fdivr
push
and
push
adc
bound
ds
jl
inc
mov
add
inc
stos
adc
or
inc
mov
inc
and
je
inc
dec
fisttpl
push
sbb
inc
scas
lea
push
add
ret
repz
add
cmpl
call
cmp
fiadds
iret
scas
pusha
shlb
push
incl
fs
xchg
xor
cvtpi2ps
cmp
jecxz
pop
sub
add
xchg
popf
inc
sbb
sub
or
pop
mov
pop
dec
mov
fldt
stos
push
adc
sub
int
xor
test
jno
push
xchg
int3
or
je
int3
dec
enter
pop
rcll
mov
jge
lods
pusha
data16
aam
call
adc
inc
pop
add
pop
sub
dec
and
jno
icebp
add
test
cmpsb
adc
xor
sbbl
adc
fs
add
inc
push
sub
insb
arpl
jge
xchg
add
pop
inc
loop
or
push
outsb
js
pop
push
jp
sub
outsl
jl
cmp
add
insl
or
mov
xchg
outsb
pop
add
push
xchg
push
mov
nop
or
lods
inc
mov
and
outsl
nop
repz
sbb
dec
pop
add
pop
or
mov
jne
mulb
cmp
fiadds
mov
das
test
shll
push
inc
movsb
push
in
movsb
push
inc
inc
and
movsb
inc
sub
addb
stos
movsl
add
je
bound
jp
cmpsl
and
popa
inc
adc
push
es
adc
add
sti
test
ror
aad
loop
dec
pop
shl
das
push
jmp
ljmp
imul
mov
push
call
add
loope
xchg
push
out
cmp
mov
add
xchg
mov
add
aam
pop
add
add
mov
or
dec
sub
cmc
int3
inc
frstor
mov
movsl
xorb
das
and
mov
out
xor
lods
adc
ret
inc
xor
sub
dec
adc
push
unpckhps
shrb
loope
cmc
mov
mov
add
push
scas
pop
and
inc
fs
lods
or
dec
push
cmp
das
mov
add
loop
jge
xorps
shll
cmp
adc
ljmp
js
stc
js
mov
popa
add
out
push
fidivs
outsb
add
test
fwait
xor
xchg
and
insl
ffree
mov
outsb
jmp
cmp
pushf
mov
mov
enter
test
rolb
xor
sbbl
add
xchg
xor
mov
insb
mov
cmp
pop
bnd
in
aaa
lret
jmp
fbstp
test
pslld
shl
ljmp
mov
in
in
cmp
leave
ljmp
cmp
in
jl
idivl
outsl
and
cmp
in
mov
insl
cmp
adc
add
cmp
call
cmp
sti
movsb
mov
rcrb
out
das
or
cmovno
in
testb
sbbb
pmaddwd
popf
push
in
mov
pusha
pop
add
add
add
outsb
cwtl
clc
dec
add
add
add
fidivs
dec
mov
mov
dec
pushl
xor
adc
sbb
cmp
cmp
mov
cmp
cmp
in
jmp
ljmp
ss
jmp
jmp
push
jmp
jmp
jmp
jmp
fistpll
fdivrp
fdivr
fcos
fdivr
xlat
call
jp
aam
sar
sar
push
sub
xchg
dec
dec
dec
dec
jmp
lret
mov
mov
insb
dec
inc
sub
xor
mov
push
sub
out
test
push
pop
mov
adc
out
cmp
adc
nop
mov
sub
iret
repz
fs
cmp
push
sbb
mov
xor
push
cwtl
push
clc
out
mov
push
sahf
out
sahf
mov
out
jnp
out
inc
push
icebp
xchg
ja
imulb
or
rcll
push
int
je
inc
aam
enter
shll
ds
sub
test
xchg
pusha
rcr
cmpsl
stc
xor
mov
ds
mov
mov
push
les
iret
mov
in
jnp
stos
jmp
cld
jo,pt
out
ds
cmp
fcoml
cmpsb
hlt
pop
sarl
ror
push
aam
sbb
aam
js
mov
shrb
stc
ss
sbb
lea
rcll
sbb
pop
sbb
insl
dec
dec
testb
push
add
mov
add
adc
inc
arpl
dec
insl
mov
push
pop
sub
or
rolb
xor
insb
fs
int3
aam
mov
inc
jb
cmc
xchg
sbb
aam
or
aad
insb
adc
jecxz
test
sub
out
aaa
mov
lods
dec
jb
and
clc
or
int
stc
or
stos
add
inc
icebp
mov
pop
pushf
jl
or
add
test
and
scas
lea
cmpsb
imul
cmpsl
insb
jne
aaa
addr16
arpl
and
or
js
pop
out
and
nop
fldcw
test
or
add
or
dec
sub
dec
push
mov
dec
or
sahf
adc
push
xchg
sub
popf
inc
xchg
mov
mov
test
mov
leave
dec
xor
add
xchg
insb
push
fs
sarl
shll
sub
test
push
inc
and
xchg
pop
push
xchg
pop
rolb
cs
inc
mov
sub
pop
adc
adc
xlat
adc
adc
iret
pusha
inc
inc
orl
pop
mov
sub
imul
lahf
icebp
or
inc
in
adc
in
inc
sub
outsl
rorb
add
mov
pushf
fcmovbe
or
mov
push
and
out
cmp
add
jl
push
push
pop
add
inc
clc
adc
mov
stos
and
or
cltd
ss
daa
xor
cmpsl
dec
pusha
mov
inc
and
dec
test
ror
adc
adc
inc
insb
fcoms
insl
icebp
push
sbb
je
test
add
push
xchg
add
lds
mov
lock
mov
ret
mov
sub
lock
in
add
jne
je
add
xchg
insb
or
or
pushl
add
aad
ret
sub
adc
push
mov
xorl
stos
addr16
nop
adc
push
xlat
pop
cmp
adcl
push
mov
mov
incl
sahf
push
dec
fimull
nop
mov
and
insb
pop
xchg
les
jg
movsb
add
xchg
loop
test
cmc
es
inc
subl
xchg
pushf
push
dec
push
mov
jmp
or
push
jmp
cltd
jns
lcall
cmp
imul
push
test
sbb
shld
push
decl
pop
fcoml
cmp
in
mov
jl
cmp
pop
bnd
movsl
cmp
add
outsl
aas
dec
mov
xchg
and
movsb
lods
outsl
mov
jmp
ss
inc
arpl
lcall
outsb
inc
ja
test
inc
jns
or
imul
jle
or
out
jae
lcall
jo
or
add
inc
dec
jns
push
or
sbb
inc
cmp
dec
sbb
int
sbb
and
or
test
sub
jge
push
data16
inc
xchg
inc
or
xor
movsl
lret
cmp
icebp
sbb
cmp
xor
mov
xor
jb
dec
jbe
jb
xor
ret
inc
aas
xor
xor
bound
cmp
negb
inc
cmp
stc
add
aas
es
inc
arpl
xor
xor
xor
pop
inc
sub
fnstenv
lcall
sbb
cli
adcb
lcall
sub
call
mov
xor
or
mov
xchg
in
sarb
out
push
sbb
or
mov
ds
xchg
adc
sub
push
mov
push
pop
imull
or
jns
inc
in
sbb
push
xchg
or
or
mov
mov
pusha
rorb
test
rorl
add
dec
dec
mov
add
fdivrs
daa
and
cwtl
dec
xchg
mov
push
and
shrb
mov
push
or
testl
inc
pusha
add
fld1
cmp
adc
jl
push
imul
sahf
mov
mov
fldl
ds
xchg
enter
and
dec
loopne
mov
jns
das
and
adc
cwtl
xchg
inc
and
xor
jae
cmp
inc
sbb
aaa
adc
cmp
mov
push
inc
cltd
push
cltd
rcrb
inc
inc
sarb
cmpsw
sub
mov
in
jmp
inc
pusha
clc
inc
pop
jbe
jb
cli
mov
xchg
inc
xor
cli
sbb
inc
adc
xchg
sbb
pop
pop
pop
cmp
pop
outsl
push
push
fsubl
lret
into
pop
cwtl
add
sub
imul
inc
pop
adc
push
push
inc
pop
ja
loop
xor
mov
adc
filds
mov
cmove
cmpsb
sbb
or
gs
mov
clc
addr16
insb
sub
arpl
mov
push
insb
dec
adc
xchg
fiadds
jl
push
mov
int
push
pop
sbb
sarl
sub
lret
dec
stos
xor
jo,pt
xor
loope
xor
jp
imul
mov
push
jno
pusha
dec
inc
or
sarl
jle
and
cs
bound
sub
or
add
inc
adcb
push
mov
inc
jns
xor
rcll
xchg
mov
cltd
push
push
dec
pop
fisttpll
scas
sub
or
push
xor
mov
imul
jae
xorl
xor
mov
imul
inc
add
imul
jecxz
pop
xor
in
add
sbb
adc
aaa
jecxz
adc
std
sbb
mov
jo
fwait
or
push
outsb
or
cmpsl
cmp
lock
loope
add
sub
add
sub
sub
sbb
sbb
pop
and
cmpl
add
out
sbb
pop
call
or
inc
or
daa
jns
sub
rcll
repnz
fwait
inc
inc
fdivs
and
add
fwait
icebp
pusha
dec
and
inc
inc
mov
xchg
dec
mov
je
js
aad
or
pusha
xor
and
ja
jae
mov
and
jo
mov
shll
dec
jo
mov
push
cli
push
push
push
push
ficoml
pop
and
imul
and
cli
inc
int
mov
adc
in
fdivl
inc
cmpsl
sbb
pop
or
mov
adc
add
xlat
add
and
and
ret
xchg
xlat
lret
loope
cmp
pop
fwait
add
aaa
mov
sub
sub
pop
and
scas
sub
mov
add
or
mov
ffree
dec
repnz
dec
jmp
call
and
mov
mov
dec
outsl
xlat
pusha
leave
sbb
add
les
sarl
jae
sub
sbb
or
add
ds
jno
roll
lahf
out
lcall
loope
pop
sub
outsb
adcl
fdivr
out
loopne
add
loopne
jbe
jp
das
lahf
in
mov
cltd
mov
popf
call
push
or
adc
dec
ljmp
jmp
mov
xlat
xor
les
in
add
out
adc
push
inc
out
sbb
mov
jb
decb
ret
xchg
mov
dec
sub
and
mov
fisubrl
pushf
daa
aad
adc
jl
xlat
les
test
mov
mov
and
sub
into
push
xchg
sarl
cmpsl
shlb
mov
fldt
icebp
pop
sub
push
mov
adcb
push
popf
loope
sahf
jbe
cmp
adc
ds
iret
aas
sub
aas
mov
push
outsl
jb
adc
and
dec
xor
and
push
xor
orb
add
mov
jno
xchg
sub
add
pop
test
push
sbb
xor
scas
add
pop
repnz
adcl
stos
and
add
in
out
sbb
shll
mov
jl
push
lret
rorb
jle
hlt
test
xor
jge
mov
pop
pop
mov
pop
pop
mov
stos
pop
aad
sbb
pop
scas
mov
pop
btr
cmp
mov
test
mov
add
dec
xor
pop
sahf
pop
ja
outsl
pand
pop
adc
pop
outsl
mov
pushf
ds
outsb
pop
fisttpl
add
sub
sub
stos
adc
mov
decb
daa
add
push
push
jl
dec
loopne
push
repnz
or
mov
icebp
add
add
add
add
test
lock
sub
xor
pop
test
add
add
add
sub
enter
jnp
lock
add
add
add
mov
mov
mov
mov
std
outsl
test
or
adc
sbb
insb
add
stos
and
mov
es
mov
mov
mov
add
push
mov
fsubrs
adc
dec
cmp
add
test
pushl
dec
mov
mov
out
in
inc
inc
inc
fsubrl
push
inc
inc
inc
inc
jb
mov
into
mov
jo
jo
mov
ret
adc
xorb
imul
push
in
cmp
insb
mov
xchg
push
push
pusha
xor
xor
out
sahf
out
xor
je
mov
faddl
xor
ss
aaa
push
popf
idivl
dec
jl
enter
xchg
imul
xchg
pop
inc
inc
push
and
sbb
sahf
js
jbe
fs
in
rcrl
push
push
jl
mov
idivb
iret
inc
mov
cmp
in
fldcw
imul
push
clc
sahf
out
ds
adc
jl
cmp
push
shr
sahf
pop
dec
cs
ror
push
mov
les
dec
push
pop
fs
mov
pushf
notl
add
cmp
idivb
mov
sbb
jnp
data16
in
jno
shrb
sbb
outsb
imulb
iret
add
aas
push
inc
inc
push
rcrl
dec
cmp
ds
jge
imul
push
pop
or
jo
mov
mov
cmp
jb
call
ljmp
lods
pop
fidivrs
int
push
xor
or
cwtl
dec
sti
cs
inc
movsl
add
inc
mov
adc
mov
std
sub
xchg
gs
inc
mov
es
jb
lds
in
push
test
fists
or
add
cvtps2pd
or
pop
adc
enter
inc
inc
popa
fs
sbb
add
popa
pop
sub
pusha
and
cmpsl
or
pop
in
adc
adc
ret
aad
push
jnp
xor
mov
mov
cmp
mov
cltd
push
dec
xchg
ret
adc
fimull
or
or
or
pop
fwait
or
sub
or
or
daa
or
jno
iret
aam
sbb
jb
inc
daa
insb
inc
subb
or
andl
adc
dec
dec
loope
pop
adc
aad
stos
stos
sub
or
icebp
dec
lret
mov
and
and
inc
lods
scas
dec
cmpsl
sub
or
jo
mov
iret
add
loop
jge
sub
xchg
push
mov
inc
add
xchg
push
repz
cmc
jl
dec
sbb
cmc
cmp
and
mov
dec
and
popl
and
push
pop
or
or
inc
sbb
mov
orb
fs
sub
jne
and
sub
adc
add
fcmovbe
dec
sub
fdivl
push
outsl
aad
cmp
push
mov
inc
inc
fisttpll
sub
mov
add
and
adc
das
mov
test
push
out
sub
jns
adc
xor
in
pusha
lret
sbb
dec
daa
push
cs
cmp
pop
sbb
das
mov
xor
push
cmp
dec
inc
xchg
jnp
pop
adc
ret
test
lock
push
cmp
add
pop
or
add
addl
popf
push
mov
rclb
movsl
es
enter
pop
icebp
add
lods
cmp
sbb
jmp
arpl
pop
popf
xchg
pop
adc
or
adc
sbb
cltd
sbb
adc
sbb
mov
mov
cli
sbb
dec
sbb
sbb
jb
mov
push
ljmp
sbb
jno
sbb
pushl
movsb
inc
insl
pop
adc
fcompl
push
jecxz
mov
movsb
xchg
loop
add
call
test
sbb
fcomi
mov
cmp
jbe
and
push
mov
in
mov
adc
mov
mov
call
fadds
cmpsl
push
sub
movsb
inc
inc
xor
jecxz
shll
insb
add
dec
test
mov
inc
jae
lret
push
les
dec
mov
je
jmp
jmp
pop
push
adc
test
mov
push
push
arpl
repz
sub
addr16
jl
dec
push
or
mov
nop
scas
xchg
inc
add
enter
xchg
pop
pop
jg
fld
xchg
mov
cmp
test
xchg
arpl
enter
rclb
sbb
mov
mov
shll
lock
push
aaa
push
loop
insl
mov
pop
jecxz
loopne
push
incl
fistpll
aaa
lock
out
xchg
mov
mov
or
and
nop
dec
test
jb
xchg
inc
clc
jae
je
and
xor
lods
jp
fldcw
ja
jbe
jnp
pop
xor
mov
js
push
push
enter
sub
sbb
bnd
xor
ja
add
dec
push
dec
das
jg
cmp
add
aas
add
out
fcoml
pop
out
subl
inc
push
dec
adc
xchg
lock
int3
push
les
adc
adc
or
or
loopne
cmp
addr16
or
popa
outsb
pop
jg
ja
rolb
mov
sbb
ss
or
or
fmull
and
ds
loop
popa
cs
mov
jne
sarb
inc
inc
xchg
movsb
mov
jae
adc
adc
add
nop
pop
inc
mov
test
pop
adc
scas
cmpsl
les
and
adc
mov
leave
gs
or
stos
dec
sbb
nop
ja
leave
mov
inc
icebp
xor
push
xor
xor
push
adcb
popf
ret
cmp
push
add
mov
nop
or
shll
loope
push
cmc
lret
push
fdivl
loopne
sti
push
imul
nop
insb
punpckhdq
and
xchg
sbb
mov
xor
adc
push
jo
test
jmp
lock
fisubl
aaa
cmp
jl
sub
push
faddl
nop
push
inc
loopne
jl
ss
and
adc
cmp
dec
mov
sub
outsl
je
ret
mov
push
imul
mov
pop
lahf
mov
fisttps
add
jno
bswap
leave
leave
enter
jne
fisubrs
xchg
cmp
pop
decb
pop
insb
mov
dec
inc
or
dec
add
inc
mov
inc
arpl
mov
mov
into
jge
mov
add
add
sub
pop
mov
inc
pop
cmp
cmpsl
mov
jno
cmp
and
sub
adc
jecxz
popa
insl
jg
mov
jecxz
xchg
popfw
int3
dec
xor
inc
mov
mov
mov
lods
cwtl
mov
insl
push
dec
imul
push
cmp
negb
or
push
test
mov
sub
inc
sub
xor
add
andb
pop
adcb
sub
push
mov
sbb
aaa
pop
imul
ficomps
push
repz
or
in
rclb
cmp
fwait
dec
loopne
scas
dec
imul
ret
add
sahf
jmp
push
in
pop
fsubrl
loopne
inc
add
xor
nop
aaa
pop
and
xor
sbb
or
adc
or
mov
ret
dec
sub
fdivrs
dec
add
iret
inc
and
pop
pop
mov
cmp
fidivrs
jp
or
sbb
in
outsb
cmp
adc
dec
inc
adc
inc
mov
addr16
fists
rol
push
outsl
xor
mov
and
and
mov
adc
adc
mov
jle
ret
push
jbe
fs
push
mov
push
xchg
je
test
cmp
shl
xor
jae
cmp
or
pop
add
insl
lcall
and
and
jecxz
outsl
sub
sub
int3
mov
loopne
adc
fwait
in
daa
push
jno
push
push
sbb
test
push
outsb
add
add
or
fucomp
rorb
xor
movsl
fwait
rorl
jmp
or
fwait
pop
pop
cwtl
mov
das
add
pop
adc
xchg
cmc
outsb
cs
sub
rorl
insb
clc
js
jo
xor
cs
xchg
hlt
call
insl
imul
push
mov
pop
jno
nop
leave
enter
inc
roll
jb
aam
leave
leave
pop
test
mov
xchg
push
sbb
or
es
clc
je
pop
mov
add
roll
sub
dec
cmpsb
fs
inc
cmp
push
arpl
testl
sbb
test
vxorps
adc
inc
int
mov
adc
cmpb
push
scas
das
add
cmp
bound
fldcw
orl
dec
inc
and
pop
sbb
adc
or
jae
mov
push
xchg
or
mov
je
inc
mov
mov
stos
leave
pop
in
jno
push
arpl
pop
cmp
leave
xor
pop
xorb
fnsave
in
addb
push
add
das
dec
adcb
sbb
popf
and
push
shl
xor
adc
enter
add
xor
pop
nop
xchg
adc
jmp
cmpsl
pop
cmp
pop
add
pop
pusha
push
pop
ja
mov
add
jb
lret
or
js
nopl
pop
cmp
xor
add
adc
add
and
sub
xor
xchg
clc
les
jle
mov
mov
int3
int3
push
jne
lcall
fnstenv
sahf
negl
sbb
and
jns
dec
fildl
mov
or
popa
xor
jbe
push
add
mov
es
pop
pop
test
adc
pusha
mov
xchg
lods
dec
stos
mov
mov
sti
mov
sti
mov
push
loopne
scas
push
in
xchg
es
data16
mov
mov
test
pop
mov
fists
xor
stos
add
pop
repnz
outsb
adc
pusha
idivl
xchg
bound
cmp
add
pop
push
daa
add
jg
sub
ja
push
ficoms
or
js
subb
daa
rep
adc
jecxz
js
mov
inc
mov
add
aad
xor
cmpsb
fwait
cmp
xor
xlat
or
insb
lret
push
pop
ss
or
inc
sub
repnz
pusha
sub
or
fs
loop
sahf
sub
pop
pop
aam
je
imull
jge
adc
mov
sbb
xor
sbb
add
inc
mov
into
mov
lcall
ret
stos
cmp
or
push
adc
cltd
shll
mov
mov
popa
into
icebp
je
cmc
or
cmp
dec
add
test
sub
cmpsb
sub
add
push
push
pop
dec
and
sbb
fs
jnp
cwtl
jns
mov
inc
ja
sete
and
sarb
sub
ja
dec
rcrb
pusha
sub
mov
pushf
sub
daa
xchg
jmp
and
movb
jb
fsubrp
cli
sub
orl
ds
dec
in
mov
push
lret
sbb
rorl
mov
push
add
popf
rcl
popa
imul
cmp
pause
cmpsl
pop
push
push
add
cli
addl
shrb
cmovs
testl
jge
mov
mov
add
das
mov
testl
iret
je
arpl
or
fldl
push
or
mov
xchg
nop
shlb
clc
pop
mov
pop
popa
sub
add
test
fstl
ja
and
sbb
insb
sub
xor
sbb
add
shlb
sub
sub
inc
jno
imul
outsb
sub
mov
pop
call
or
jge
mov
cli
scas
or
or
push
push
add
or
add
cmpsl
fiadds
cld
bound
push
loope
pop
adc
sbb
pop
add
cld
addb
shll
mov
adc
push
incl
inc
xor
inc
or
stc
mov
pop
sbb
aas
sbb
sbb
mov
lcall
sbb
jle
and
or
sub
mov
mov
push
std
cmp
in
dec
cmp
stos
add
sbb
xor
std
movsl
pop
push
and
cmpsb
xor
adc
push
add
xor
sub
cmp
dec
jo
fisttpll
incl
or
or
test
hlt
xor
dec
add
frstor
push
pop
adc
adc
aam
cmp
xchg
sbb
sarb
or
jae
pop
push
push
jo
adc
subb
push
jle
repz
pop
cmpl
sub
push
add
call
mov
out
add
outsb
loopne
or
inc
mov
jne
push
add
pop
sti
gs
mov
mov
mov
imul
mov
rcl
mov
inc
cmpsb
push
or
leave
pop
insl
mov
loopne
sbb
loopne
jns
sbbl
inc
sahf
sbb
mov
faddl
loopne
sbb
or
pop
gs
or
dec
test
shrb
push
xor
outsl
add
pusha
test
sub
inc
je
pusha
add
xor
inc
insb
jno
push
and
loopne
add
nop
in
jmp
inc
inc
pop
das
push
aaa
loopne
xchg
lret
lahf
xchg
and
or
add
and
incl
mov
sbb
inc
cmp
push
insl
addr16
outsb
popa
test
jbe
mov
pop
lahf
dec
insb
rclb
js
orb
xchg
inc
xchg
jb
or
shlb
nop
enter
jmp
mov
mov
inc
nop
xor
add
test
cmpb
loop
lods
dec
clc
mov
inc
and
mov
add
loope
ja
jo
cld
gs
mov
xchg
xchg
dec
jmp
cmp
sbb
fwait
ret
inc
fs
dec
fdivs
jg
mov
xchg
std
dec
jmp
sub
adc
ret
pop
sub
rcr
fistl
mov
iret
inc
loopne
leave
sahf
imul
xchg
daa
jmp
leave
es
insb
dec
jno
ret
scas
dec
nop
call
pop
pop
xor
add
rcrl
and
pop
push
pop
mov
inc
lret
mov
dec
xchg
ret
pop
ret
testl
ret
inc
and
mov
wrmsr
fs
add
or
fisubrs
addr16
addr16
insl
pusha
cltd
adc
xchg
xchg
leave
rcrl
jb
dec
loope
pop
rorl
xlat
lea
or
mov
aaa
add
mov
xchg
cmpsb
jge
in
dec
cmpsb
sbb
add
pop
push
sbb
int
inc
into
hlt
clc
mov
pop
mov
jle
sahf
pushf
pushf
mov
adc
mov
or
psrad
in
imul
cpuid
jns
mov
shlb
xor
pop
or
pop
repnz
push
adc
push
mov
dec
aaa
sbb
inc
dec
nop
and
inc
or
push
jbe
insl
xor
lods
popa
cmp
push
shr
lcall
sbbb
xor
rcl
imul
cmp
mov
add
mov
lods
dec
and
inc
jge
fldcw
aas
cmp
fimull
and
lea
sbb
mov
or
mov
xchg
dec
cmp
mov
sbb
add
pop
mov
xchg
hlt
movsb
test
push
cmc
xchg
sub
cmc
or
or
inc
dec
mov
or
dec
outsl
add
arpl
gs
push
or
loope
add
jo
popa
adc
movsb
or
orl
scas
stos
sbb
push
jge
and
xchg
les
iret
rcrl
cs
mov
aaa
lea
jmp
mov
cmpl
je
pop
shll
cmp
cmp
dec
xor
xchg
movsb
mov
scas
fsubrl
adc
je
push
mov
outsb
jne
sbb
es
pusha
xchg
aam
push
outsl
inc
sahf
dec
cwtl
paddq
push
lcall
xorb
hlt
mov
mov
movl
pop
add
test
push
mov
cmc
shl
sbb
dec
inc
in
adc
xor
add
add
clc
imul
and
push
sbb
dec
jne
xor
cld
and
pop
orb
push
jne
adc
mov
es
add
mov
pop
hlt
or
aam
xorl
subb
push
add
adc
mov
xor
jo
imul
mov
xchg
cli
push
addl
or
cmpsl
out
outsb
inc
enter
inc
add
dec
ja
inc
test
aaa
dec
mov
xlat
or
or
adc
sub
popl
andl
push
inc
push
aas
jb
lock
notl
jo
or
pusha
mov
push
inc
idivl
in
dec
jg
jb
push
fsubs
dec
jle
mov
pop
mov
push
xor
je
add
aas
adcb
mov
sbb
push
rol
push
jo
pusha
adc
inc
add
pop
or
mov
jb
divl
les
rcrb
lods
adcb
insb
pop
aas
iret
push
aas
jle
or
add
mov
imul
mov
inc
popl
or
test
mov
aad
les
nop
xlat
xor
scas
and
push
decl
mov
std
xor
inc
inc
push
cmovo
stos
enter
push
lret
lahf
inc
xor
fiadds
mov
adc
push
jo
arpl
dec
cwtl
jl
pop
sub
mov
add
or
mov
mov
push
push
scas
data16
mov
push
das
enter
imul
add
nop
pop
xor
inc
push
adc
or
push
ret
pop
sbb
outsb
sub
nop
add
loope
dec
lock
mov
xchg
add
xchg
jno
lods
cmovae
mov
inc
mov
cmp
rolb
scas
cld
adc
or
inc
nop
jp
data16
adc
lret
push
xor
sbb
mov
cmp
loopne
cmp
js
dec
push
sbb
mov
xchg
push
jo
addr16
cmp
js
or
xchg
mov
inc
cmp
shlb
or
mov
sub
lahf
aam
xchg
and
mov
outsl
jo
rclb
sub
mov
imul
xchg
mov
imul
rcrl
sbb
push
mov
insb
pop
call
test
or
pop
mov
and
add
or
push
mov
add
sbb
or
adc
nop
add
and
lock
pop
aas
leave
dec
jb
add
xchg
pop
add
and
or
inc
fistpl
cmp
pop
mov
lahf
scas
subl
shlb
push
loope
cmp
push
in
outsl
jns
sbb
cmpb
mov
call
fbld
jo
int3
dec
dec
jne
shll
jmp
adc
pop
jbe
nop
push
xor
test
fsubs
jae
scas
ljmp
push
dec
shll
subl
das
call
push
mov
dec
adc
or
dec
shll
adc
sbb
shll
sub
shll
xor
cmp
cltd
inc
or
mov
push
push
addr16
ret
xchg
stos
aad
xchg
dec
sbb
and
sbb
cld
shll
sub
cmp
je
sub
mov
pop
cwtl
mov
les
mov
sub
mov
je
and
out
movswl
or
or
test
pop
mov
std
neg
dec
nop
jo
adc
dec
cmp
xchg
xor
outsb
hlt
adc
add
fisttps
out
jg
popa
xor
add
jne
mov
roll
subl
add
push
adc
or
sub
or
xchg
pop
add
pop
jo
shlb
dec
pop
cmc
xchg
add
jecxz
add
incl
enter
adc
push
xchg
xchg
xchg
xchg
pop
cmpl
xor
pop
sub
arpl
push
add
sub
mov
sarb
popf
das
xchg
insb
in
mov
cmp
inc
js
rcl
mov
add
sbb
or
xor
push
hlt
jbe
outsl
pop
pop
test
xchg
testb
dec
inc
inc
loope
inc
xor
mov
shlb
and
lock
movsb
xchg
jp
or
sarb
push
mov
xchg
xor
sbb
inc
insl
xchg
pop
inc
jl
inc
mov
inc
loope
mov
add
jae
scas
xchg
inc
jmp
adc
adc
filds
daa
dec
push
pop
lds
sub
addb
xchg
lcall
push
pusha
sbb
cmp
lds
fs
and
inc
inc
enter
sbb
add
sub
inc
mov
cs
out
dec
ret
mov
enter
push
push
dec
ret
adc
sbb
pop
add
pop
xor
or
sub
xlat
mov
jge
or
cmpsb
dec
push
sub
cwtl
mov
insl
and
dec
adc
dec
or
adc
dec
shl
ss
enter
lea
rolb
aaa
orb
dec
mov
push
incb
fstpl
sub
lahf
daa
faddl
dec
arpl
sbb
cmpsb
mov
pop
or
mov
mov
inc
jge
and
and
cmc
lea
hlt
sub
cmpsl
xor
ret
int3
sahf
push
or
fs
movsb
inc
sbb
adc
xor
and
sbb
adc
jne
jg
inc
sbb
out
ror
mov
or
xor
xchg
push
lea
or
xchg
dec
lods
mov
push
jp
in
addb
loop
mov
xor
inc
and
mov
idivl
cmpl
fmulp
outsb
inc
push
mov
inc
add
inc
add
pop
inc
cmp
add
bound
jmp
push
mov
jnp
dec
add
mov
fcomps
push
hlt
out
outsl
adc
push
je
sub
clc
or
inc
dec
push
and
hlt
dec
mov
adcb
xchg
mov
repz
cmc
and
mov
push
sub
cmp
je
mov
add
addr16
stos
insl
pushf
cwtl
imul
inc
xlat
and
in
icebp
inc
stc
psubq
sahf
arpl
xchg
lock
jo
adc
sub
scas
hlt
sbb
hlt
adc
sbbb
hlt
push
xlat
xor
adc
lds
sbb
ret
ljmp
in
cmpb
push
pop
jl
test
push
loop,pt
or
in
in
xor
test
inc
das
shlb
sarb
fimull
inc
push
lcall
fadds
jmp
sbb
jno
xchg
in
insl
add
xor
cld
nop
push
sahf
xor
mov
insl
sbb
dec
test
pop
sbb
jp
decl
fsubr
and
fbld
dec
jnp
loope
call
loope
in
lahf
mov
pop
and
stc
adc
shrb
test
mov
add
sbb
sbb
cld
pop
add
mov
or
hlt
or
lock
mov
rorl
dec
call
das
push
sbb
mov
iret
sahf
push
dec
push
push
iret
inc
cmp
and
jne
sub
cmp
sbb
push
test
aad
dec
mov
dec
push
leave
add
ds
mov
popa
int
xor
daa
xchg
add
clc
or
xor
lcall
scas
ja
dec
movb
mov
mov
and
sbb
add
js
or
sub
xchg
cmpsl
xchg
or
pop
lds
in
cmpsb
sbb
and
or
mov
cmp
test
dec
cmpl
pop
jbe
mov
xchg
insb
bound
dec
jne
push
xchg
in
mov
inc
std
ds
iretw
add
push
and
inc
jmp
pop
and
xlat
xchg
sub
push
les
xchg
xor
cmp
jne
repz
pop
pop
outsl
fcomp
shrb
pop
loope
add
add
mov
dec
pushf
stos
shrb
pop
mov
ja
push
or
ret
fiaddl
test
adc
mov
test
xlat
mov
mov
lea
add
mov
push
js
popf
push
sbb
add
je
mov
ds
sub
mov
mov
arpl
add
or
dec
mov
push
jp
pop
adc
enter
adc
mov
je
or
addb
xor
data16
mov
ret
add
or
ror
lock
jne
add
sbb
push
adc
adc
or
sbb
mov
xor
fimuls
adc
insl
cmp
pop
pop
lea
sbb
scas
push
and
jmp
pop
mov
xor
aad
loopne
daa
mov
ljmp
push
adcb
scas
inc
sub
clc
scas
js
cwtl
and
and
daa
pop
fisubrl
sub
push
mov
sub
push
jno
mov
cmp
dec
adc
hlt
sbb
enter
jg
dec
inc
mov
and
sbb
sbb
lahf
pop
mov
xor
adc
iret
clc
dec
iret
std
sub
dec
insb
adc
cli
adc
or
test
mov
add
fisttpll
aaa
jo
sbb
xchg
in
mov
aam
cmp
or
mov
mov
or
fldt
fdivrs
adc
inc
lods
mov
sarb
fistpl
sub
and
add
cmp
sub
mov
jns
sub
imul
ficomps
xor
inc
mov
xor
adc
mov
pop
insb
outsl
jp
js
cmp
popf
jmp
sub
or
mov
push
lea
lods
sub
xchg
xchg
pop
mov
out
mov
pop
add
pusha
daa
test
sub
sbb
pop
lea
adcb
imul
cmp
adcl
pop
iret
and
out
notb
jb
mov
in
leave
lret
out
jne
lea
repz
jo
mov
jo
adc
jne
leave
mov
shll
or
or
jecxz
mov
dec
test
or
push
jmp
enter
and
in
out
test
or
fcomp
or
cmp
dec
dec
cmpsb
xor
push
adc
loopne
shrl
push
in
cmc
mov
add
mov
xchg
xchg
inc
push
insb
mov
and
add
ja
cld
out
push
pop
or
xor
jne
out
loopne
add
stos
push
sbb
es
sbb
mov
aas
push
sbb
xchg
or
push
clc
mov
mov
add
inc
sahf
fstpt
mov
shl
and
mov
fisttps
cmp
das
pop
cs
hlt
movb
adc
js
stos
add
mov
and
pusha
xor
rolb
je
sub
pop
daa
insl
pop
xor
sbb
mov
clc
push
push
sbb
jmp
and
aas
jno
cltd
inc
pop
cmp
cmp
jne
adc
and
ret
mov
arpl
imul
xor
jge
adc
jmp
nop
nop
inc
cmp
inc
add
or
mov
pop
cmp
sub
and
or
jl
add
jmp
mov
loopne
aas
or
cmp
pop
inc
lahf
xor
rcl
cmpsb
pop
inc
mov
and
cmp
xchg
or
jne
xor
adc
lock
mov
ljmp
inc
inc
push
adc
add
sbb
mov
cltd
movb
sbb
je
bound
ret
mov
push
insl
lods
in
jno
lcall
push
pusha
sbb
mov
rcrl
js
mov
mov
mov
xchg
inc
imul
lock
adc
cmp
daa
mov
cmp
jp
inc
daa
aas
stc
test
aaa
push
or
fwait
rorb
out
cmpsl
or
or
lods
lret
loope
cmc
xchg
gs
gs
sbb
cmp
sub
add
lret
ja
dec
mov
daa
cmp
ss
mov
dec
dec
dec
mulb
xchg
ja
and
pop
insl
sbb
out
dec
mov
sbb
dec
lds
call
cli
insb
add
or
ds
icebp
push
xchg
add
add
lahf
sti
jne
xor
cmp
sub
xlat
mov
or
add
aaa
shll
dec
dec
sub
jge
jo
mov
fists
jnp
xor
mov
je
jmp
pop
push
adc
sbb
rcll
popa
popa
jo
dec
fnstsw
insb
mov
cmpsl
pop
pop
adc
rorl
scas
inc
insl
hlt
xchg
pusha
inc
jo
pop
popa
xor
pop
push
imul
sub
out
mov
lret
outsl
add
dec
sub
pop
jp
or
or
sub
mov
push
mov
add
and
sahf
sbb
push
pusha
dec
ret
leave
aam
nop
add
cmp
or
fstpl
ja
les
je
and
test
cmovo
dec
aas
sub
push
xchg
jno
cmp
push
and
les
push
push
pusha
sub
test
sub
push
inc
add
push
xlat
pop
aam
or
roll
sarl
orl
sbb
inc
shrb
pop
pop
filds
enter
aaa
leave
add
in
and
push
adc
or
or
sarb
or
test
rcrb
rcll
add
ljmp
shlb
add
jmp
cmp
mov
jbe
push
adc
or
cmp
je
or
adc
add
pop
pop
je
mov
pop
jbe
and
cmp
cmp
cmp
xor
or
sbb
push
or
jmp
aaa
in
cmp
xor
push
sarl
inc
sbb
int
pop
sbb
and
mov
push
cmp
add
fnsave
test
sub
cmp
lcall
or
mov
out
and
mov
jbe
enter
add
nop
xchg
outsb
dec
mov
clc
mov
lods
adc
and
pop
and
sub
sub
jecxz
push
mov
xchg
mov
fcomps
dec
pop
insl
sub
inc
add
sbb
or
and
mov
and
pop
lcall
fmull
jae
mov
adc
imul
cmp
mov
insl
test
lahf
push
and
pop
jo
imul
inc
popf
sbbb
or
leave
and
popa
and
cs
or
adc
popa
sbb
ficomps
ret
push
ret
test
dec
pushl
xlat
je
xor
and
dec
cmp
iret
and
xor
outsl
push
mov
sbb
or
and
or
lahf
push
ret
adc
je
call
xchg
jne
cmp
mov
mov
cmp
test
cmova
xchg
fistpl
nop
sbb
idivl
xor
imul
sbb
rorb
push
xor
sbb
test
mov
test
mov
ja
or
pop
cmp
aad
cmp
fidivs
popa
pop
ds
call
add
arpl
cmp
dec
jo
sahf
mov
fstpt
cmp
pop
stos
xor
stc
cmpsl
std
ret
mov
movb
push
pop
pop
push
push
ss
loope
fbld
pusha
add
jp
jmp
subl
ds
sub
fcmovnu
xorl
add
xor
gs
sbb
push
adc
adc
mov
sbb
push
mov
mov
pop
mov
sbb
push
dec
dec
in
addb
cli
or
mov
fs
push
and
or
and
lods
hlt
js
test
movsl
mov
mov
add
int3
pop
sti
test
sti
imul
push
lea
movsb
add
jo
fadds
fs
xor
add
sbb
xchg
xchg
imul
dec
decl
xor
xchg
and
xor
and
lods
xchg
adc
dec
test
imul
dec
adc
insb
movsl
cmpsl
icebp
fisttpl
scas
dec
mov
neg
add
add
and
lds
lock
daa
leave
js
xor
inc
push
push
dec
stos
mov
cmpxchg
dec
jecxz
push
adc
pusha
or
xor
lea
push
ja
cmp
arpl
sbb
mov
mov
out
push
mov
adc
push
sub
xor
inc
inc
jne
adc
inc
jne
pushf
adc
sarb
or
mov
out
push
and
pop
mov
shld
jno
or
mov
insb
arpl
inc
push
jnp
andl
orl
or
jns
fldt
push
sbb
inc
push
pop
mov
ja
push
cmpb
adc
rclb
add
cwtl
outsb
cmp
inc
fstps
mov
negb
adc
pushf
push
push
mov
aad
or
bound
test
insb
cmp
rol
daa
add
add
push
loopne
xor
mov
lods
lret
cs
pop
lcall
aad
sti
xchg
push
scas
pop
push
sub
cmpsb
adc
in
sub
es
rclb
and
mov
loopne
pusha
dec
xor
daa
mov
push
or
in
mov
and
in
xor
in
pop
xor
sub
cmpsl
xchg
pop
mov
sub
std
fisttpl
gs
insb
sub
mov
pop
jne
into
xchg
and
jbe
and
adc
adc
mov
dec
sarl
or
rcrb
xor
mov
push
out
rcl
hlt
inc
pop
cmp
fs
push
cli
add
ret
pop
nop
scas
test
push
std
test
pop
xchg
cmpl
pop
outsb
movsl
adc
cmp
adc
test
in
setb
xchg
std
ret
test
xor
sub
ja
mov
adc
movb
mov
dec
notb
test
dec
mov
movsb
clc
inc
inc
lcall
xor
push
inc
nop
ret
mov
das
inc
and
inc
mov
cli
dec
ljmp
pop
stos
dec
test
ljmp
flds
mov
jle
pop
pop
mov
add
pop
push
sub
dec
mov
stos
popf
jns
mov
dec
lds
jmp
inc
data16
xchg
int3
jno
add
and
shl
push
lock
cmc
lahf
push
or
pop
dec
call
push
or
add
mov
mov
in
outsl
mov
test
outsl
sar
aad
inc
je
inc
fadds
fldcw
adc
sub
loopne
sbb
call
inc
sub
mov
sbb
adc
sub
rorw
push
scas
fadd
adc
dec
fsubrl
inc
and
adc
test
and
addr16
mov
das
add
mov
test
addb
sub
fdivs
fmuls
sahf
pop
push
xor
lea
mov
inc
or
jecxz
mov
cmp
or
dec
inc
fists
mov
arpl
fbstp
push
inc
imul
add
push
int
stos
insl
leave
arpl
dec
pushf
nop
or
and
or
dec
mov
dec
icebp
test
out
mov
stos
sbb
test
sub
push
inc
out
xchg
adcb
dec
orb
and
xor
addr16
mov
add
add
das
or
dec
jne
lahf
mov
shll
movsb
push
inc
xchg
out
pop
adc
dec
xor
sub
das
arpl
roll
les
mov
sahf
nop
lock
nop
gs
pop
mov
pop
in
cmp
sbb
pusha
push
adc
and
gs
scas
mov
sbb
or
popa
push
pop
xorl
push
mov
sbb
pop
jmp
adc
daa
push
xchg
in
push
jecxz
das
jno
pop
testb
movb
inc
pop
pop
xor
inc
and
sbb
xlat
push
sbbl
xor
jbe
jo
orl
fs
fsubrp
mov
mov
or
rorb
add
adc
or
adc
adc
fbld
xor
into
push
and
jp
sbb
iret
rolb
gs
cmpl
sub
jbe
xchg
dec
pop
and
or
push
fistps
mov
mov
xchg
test
or
dec
stos
mov
je
add
vmxoff
dec
xor
mov
mov
push
mov
inc
or
loop
sbb
ja
and
inc
add
or
add
shlb
rorl
popa
xchg
inc
stos
add
shrl
add
xchg
mov
pop
lock
inc
add
cmpsb
push
orb
imul
add
fsubs
pop
xlat
add
out
mov
cmp
jb
add
adc
xor
pop
je
pop
stos
hlt
dec
adc
cmp
cmp
sub
dec
push
sbb
sub
mov
lods
lods
shlb
sarb
xor
or
sub
jne
adc
nop
aas
mov
xchg
repnz
inc
icebp
add
and
add
mov
mov
adc
inc
adc
push
ss
imulb
dec
cmp
push
dec
pop
scas
mov
sbb
mov
sbb
aam
out
adc
or
inc
sub
pop
mov
outsb
inc
ljmp
inc
xchg
jb
adc
cmp
xor
insl
cmp
cmc
sbb
cmp
daa
xchg
mov
sti
xchg
jne
fstl
xchg
and
rorb
std
gs
dec
adc
xlat
scas
ss
pop
mov
dec
dec
adc
adc
add
fsubrl
inc
ds
mov
jb
je
loopne
pop
jo,pn
mov
mov
je
enter
pop
fs
push
movsl
int
lods
rcrb
ror
lret
inc
ljmp
pop
or
push
cmp
push
xchg
push
pop
je
mov
ss
push
or
adc
jecxz
testb
je
jbe
xor
xor
orb
ja
out
hlt
jno
or
out
and
push
xchg
nop
mov
or
and
xchg
xchg
popa
loop
scas
movsb
sbb
clc
push
cmp
daa
shr
fdivs
aad
dec
test
add
xchg
movsl
das
sbb
dec
dec
inc
inc
xchg
scas
lods
rol
jp
xchg
daa
jns
or
cmp
repnz
sub
jmp
roll
cmp
add
ret
mov
test
pushf
or
movsl
imul
mov
sbb
lea
xchg
fldcw
or
je
mov
dec
rorb
ds
nop
pop
push
add
or
insl
push
pushf
jle
repz
push
es
stc
xchg
mov
movsb
mov
lcall
inc
or
dec
insl
nop
aad
and
loope
xchg
cmpb
inc
xchg
test
adcb
dec
xchg
lcall
nop
aaa
dec
dec
lods
add
push
stc
jle
sarb
sbb
imul
movq
movb
cmp
shrb
push
pop
sbb
rolb
shl
andl
mov
das
mov
dec
sbb
push
push
add
sbb
xchg
lods
testb
pop
mov
sti
xchg
push
adc
xor
gs
or
pop
je
mov
insl
inc
add
call
cmp
cmpb
mov
dec
and
into
xchg
je
mov
fwait
ret
in
pop
nop
pusha
inc
fndisi(8087
push
mov
cmp
je
mov
fidivl
ja
or
push
adcl
rcll
scas
mov
or
imul
xor
loopne
stc
or
js
movlps
test
aaa
es
scas
sub
js
sbb
test
adc
sbb
pop
xor
mov
orb
mov
pop
mov
imul
icebp
mov
mov
dec
xor
mov
repz
scas
or
into
push
xor
or
inc
and
shl
xorb
data16
je
sahf
pop
jg
loop
mov
cmpb
adc
cmpsb
jne
inc
mov
mov
fs
orb
je
je
das
cld
les
lock
cs
sub
inc
mov
jo
and
xchg
mov
add
daa
pushf
push
call
xchg
call
dec
pusha
push
sub
jnp
push
mov
ficoml
cmp
dec
inc
rclb
sbb
push
inc
shlb
sbb
fmull
leave
in
in
imul
mov
xor
inc
add
arpl
dec
jns
jmp
push
sbb
jnp
add
cmp
adc
jne
je
adc
xchg
inc
adc
cmp
pop
ja
into
sub
dec
repnz
sbbb
jge
pop
aas
push
xor
jnp
pop
pop
daa
fadds
mov
rorl
insl
jl
sbb
cld
pop
mov
lcall
outsb
pop
mov
dec
sub
mov
adc
daa
xor
or
push
or
push
or
cmc
sbb
pop
cmc
sub
sub
leave
or
push
xor
dec
pushf
lock
mov
xchg
xchg
inc
xchg
or
ret
sbb
iret
jg
hlt
sbb
adc
fidivs
leave
xchg
or
adc
mov
inc
inc
sbb
out
loope
js
xchg
ret
or
cmp
sti
xchg
adc
lret
je
rolb
shlb
cmc
xor
dec
test
sub
ret
push
cmp
rclb
and
aas
dec
pop
cld
add
push
popa
and
movsl
dec
outsb
sbb
insb
hlt
xchg
mov
mov
ret
push
cwtl
dec
aaa
or
fstps
jecxz
add
pop
jno
or
xchg
fs
mov
popa
jecxz
andl
push
sbb
leave
popa
xchg
loopne
xchg
testb
cmp
add
les
cwtl
sub
icebp
fdivs
into
adc
rolb
mov
ret
je
cmp
out
xchg
inc
fsubs
test
and
call
cmp
sbb
jne
mov
mov
lahf
testb
xor
dec
cmp
rol
jae
insb
das
or
xchg
shl
and
adc
ret
add
adc
pop
adc
mov
sbb
cli
into
std
xchg
out
push
sub
inc
add
addb
xlat
lcall
push
loop
imul
sahf
push
xor
inc
imul
adc
fiaddl
push
fdivrl
push
push
add
cmpsl
ja
inc
fsub
add
cmp
mov
pop
movb
out
cwtl
pop
add
add
or
mov
cmpsb
in
dec
mov
pop
sbb
fisubl
pusha
inc
or
jno
cmpb
outsl
or
mov
clc
aaa
arpl
cmp
fildl
fmull
fildl
fsubp
data16
push
shrb
sahf
adc
lea
loop
lret
sbb
mov
lcall
add
outsb
or
cmp
mov
sub
inc
adcb
push
clc
push
adc
je
cwtl
enter
rcrb
ja
push
outsb
push
mov
lock
xor
sub
inc
repnz
adc
cli
pusha
sub
lret
mov
repnz
add
adc
stos
pop
xchg
push
xchg
je
xchg
lock
inc
cmp
push
movsb
add
cmp
jmp
dec
cli
push
or
dec
loopne
ret
rolb
dec
push
push
popa
iret
cmpsb
leave
lock
xchg
jns
fsubrp
sub
cmpsb
idivb
or
repz
sub
dec
imul
dec
cli
jne
add
push
and
inc
adc
sbb
cs
xchg
and
neg
xor
rorb
adc
enter
js
mov
lahf
daa
cmp
xchg
pop
jo
pop
shl
sub
and
adc
dec
mov
movsl
dec
pop
call
push
push
push
es
dec
mov
xchg
addr16
add
push
fs
jnp
gs
jmp
sbb
fcompl
push
adc
nop
jnp
les
xlat
inc
mov
jmp
dec
add
mov
jne
sub
sub
cmp
push
loop,pn
fcomi
add
dec
or
pop
fisubrl
push
aaa
call
aam
ja
inc
loopne
in
or
inc
in
and
test
int3
push
xchg
xlat
hlt
sbb
xor
clc
iret
pop
xor
xchg
enter
push
mov
sbb
mov
inc
mov
jp
push
push
pusha
mov
scas
test
lock
mov
inc
jo
jo
andl
jb
outsl
push
sub
mov
add
je
nop
faddp
inc
push
enter
and
test
and
adc
fwait
or
adc
inc
and
dec
mov
cmp
mov
into
or
sbb
pop
pusha
daa
sbb
pusha
xor
dec
addr16
or
repnz
popf
orl
add
cmp
adc
hlt
das
fsts
adc
add
dec
insb
into
andl
mov
inc
fdivrl
inc
loopne
sbb
aam
aam
std
jp
mov
fcomp
les
push
sbbb
mov
dec
jmp
or
lds
push
mov
mov
sbb
add
nop
adcl
js
add
sti
xlat
inc
jl
cs
push
leave
div
xor
push
xchg
wbinvd
data16
pop
scas
insl
lea
movsb
xor
std
push
rol
inc
pop
out
mov
mov
or
stos
decb
xchg
push
lea
jne
es
jne
xor
mov
out
lds
dec
loopne
nop
je
cmp
mov
dec
shrb
ret
sbb
xchg
fnstsw
xchg
sub
and
inc
mov
lahf
addr16
push
jg
orb
and
push
cmp
xchg
nop
xor
pop
mov
pop
jnp
cmp
sbb
rorl
or
enter
imul
adc
push
roll
and
inc
lcall
and
aaa
aam
mov
push
jg
lock
and
insl
mov
mov
ret
dec
sbb
adc
add
mov
push
and
ret
js
adc
push
lcall
mov
sar
jmp
into
cli
fwait
mov
ljmp
push
jo
mov
sbb
and
xchg
sbb
jecxz
mov
xor
lret
les
add
int3
movsb
dec
xor
push
push
aas
mov
cltd
mov
movsl
jmp
cmc
test
int3
movsl
xor
sub
stos
mov
out
mov
mov
mov
add
mov
sub
add
mov
mov
mov
xchg
out
test
jbe
insb
cwtl
shlb
daa
adc
dec
xchg
xchg
out
scas
push
sub
sub
or
daa
xchg
or
or
mov
movsl
jl
fcompl
push
pop
xchg
jp
sbbl
insb
sbb
add
dec
jae
xorl
sub
jns
or
or
mov
push
push
jmp
sub
mov
add
push
or
jb
out
push
xorl
jl
cmp
loopne
adc
aam
xchg
mov
add
dec
addr16
inc
or
and
outsl
xor
js
ret
dec
std
xor
test
push
pop
bound
inc
and
or
int
add
dec
cwtl
mov
movb
inc
cmpb
adc
adc
in
ss
imul
inc
add
inc
or
int3
out
test
mov
adc
sbb
sub
push
mov
or
test
adc
sbb
dec
cmp
push
add
divb
rcrb
adc
sbb
sub
andb
pop
arpl
cmp
jb
cmp
or
xor
mov
fisubl
jb
pop
adc
dec
rcrl
into
out
mov
push
push
sbbb
push
adc
mov
cs
inc
sub
push
or
cmp
bound
test
add
inc
mov
push
push
test
roll
mov
or
hlt
or
inc
mov
mov
loope
and
popl
int3
mov
sub
stos
and
mov
ds
inc
sub
bound
arpl
out
sahf
mov
and
and
xor
fstpt
sub
xor
pop
pop
jl
pusha
addr16
sub
je
add
inc
mov
sbb
fwait
fs
and
cmp
sub
imul
aas
cmpb
scas
cs
sub
fbstp
orl
cmp
outsb
out
or
lods
sbb
dec
inc
mov
add
inc
sbb
push
lock
out
adc
pushf
and
add
hlt
into
push
testb
mov
shll
and
sub
js
pop
mov
inc
dec
and
out
inc
bound
mov
lcall
in
test
adc
mov
and
lcall
add
jmp
xchg
movsl
idivb
cs
dec
out
sbb
rcl
lcall
mov
push
mov
sbb
pusha
out
and
mov
cwtl
xor
xor
inc
adc
sbb
clc
ds
in
inc
pusha
xor
pusha
xchg
and
mov
pop
pop
addr16
add
push
mov
or
loop
mov
out
xchg
pop
or
cmpsl
mov
and
dec
push
add
jo
aam
adc
mov
jae
sahf
sbb
pop
idivb
xor
pop
inc
int3
pop
push
sbb
arpl
add
scas
xor
je
cmp
inc
xor
sub
inc
inc
pop
jmp
push
pop
repz
and
xchg
cwtl
js
and
pushf
push
inc
sub
fiaddl
jl
inc
dec
cs
in
mov
inc
addb
inc
dec
jne
andl
rclb
ds
dec
lods
pop
mov
push
push
jo
push
and
push
xor
sub
in
addb
xchg
fldl
push
cli
call
into
div
or
dec
idivb
mov
mov
jb
inc
inc
dec
outsl
clc
or
stc
adc
add
out
fdivs
cmp
addl
xchg
add
pop
or
add
xor
decb
arpl
pop
in
sub
inc
fimull
inc
or
push
or
dec
push
xchg
dec
sbb
pop
mov
inc
cmp
add
shll
ss
mov
add
rcrl
rcll
xchg
mov
push
push
in
in
sbb
sbb
sbb
lcall
inc
sahf
add
or
les
mov
sub
scas
loop
inc
or
pop
sbb
push
xor
dec
jg
xchg
imul
add
sub
inc
mov
cltd
cli
ret
or
jge
pop
adc
jl
and
xchg
aad
movswl
ficompl
or
arpl
add
daa
aas
jg
push
sbb
and
and
xchg
jle
cld
dec
pusha
dec
mov
add
inc
cmpsl
ror
add
clc
cmp
clc
cmp
xor
mov
sbb
pop
cli
rcl
or
repnz
or
fimuls
xor
inc
adc
ret
add
mov
pop
jecxz
ret
push
lret
in
push
cmp
inc
gs
pop
lea
pop
cmpb
xor
lea
adc
dec
lcall
or
imul
pop
jl
xor
shll
jmp
jo
add
xor
sub
mov
add
push
push
cs
mov
add
es
and
shll
mov
xchg
xchg
dec
dec
es
xlat
insl
mov
loop
adc
gs
lods
pop
sub
call
aam
mov
pop
cs
or
enter
aaa
rcl
movsb
add
sarb
jmp
sub
dec
icebp
add
push
mov
pop
pop
inc
stos
in
pop
shlb
sbb
hlt
std
mov
cmpsb
and
leave
push
push
sub
xor
or
xchg
sub
push
xor
sub
mov
pop
in
fcmove
loop
cmpsl
out
in
add
pop
inc
mov
dec
add
mov
push
xor
jne
adc
loop
outsb
stos
push
imul
pop
and
adc
xchg
mov
and
cltd
add
xchg
xchg
fs
fs
sub
push
push
mov
rcrl
or
movsl
jg
adc
jle
inc
jo
push
pop
or
cs
clc
adc
iret
shll
adc
jle
adc
or
dec
or
jmp
and
push
sbb
mov
fadds
cmp
fidivs
xor
int3
xor
push
inc
add
inc
call
pusha
push
fmuls
inc
inc
test
inc
xorb
mov
cmpsb
inc
mov
cmp
je
adc
mov
sub
mov
or
push
add
pop
dec
add
dec
inc
pop
jl
inc
fstpl
dec
inc
imul
jbe
insb
and
add
inc
popa
cmc
cmpb
adc
inc
or
rcrl
pop
and
hlt
push
jno
mov
dec
push
inc
cmp
in
movsb
rclb
or
test
inc
push
fisttpll
add
enter
push
pop
fstpt
sub
dec
mov
jo
scas
ficompl
adc
int3
xor
mov
daa
loop
mov
xor
sbb
lock
icebp
adc
jl
dec
jp
loop
xchg
jbe
dec
xor
jg
or
fmuls
loope
inc
xlat
jo
mov
mov
push
xor
inc
adc
xor
rcl
sbb
mov
adc
mov
push
xchg
cmp
push
das
push
add
mul
mov
lods
cmovns
sub
in
rcll
sub
push
sub
xchg
and
cmp
mov
mov
xor
ja
lea
mov
pop
and
xor
nop
lret
xor
mov
pusha
cmp
xchg
adc
subl
movb
pop
jae
push
push
sub
clc
inc
insl
sbb
dec
loopne
lds
push
dec
or
daa
sub
adc
mov
je
sbb
aam
or
andl
adc
push
sub
sub
mov
inc
movsb
push
cmp
sub
push
jmp
test
mov
add
and
mov
loopne
pop
loopne
test
mov
pop
hlt
add
lea
aam
mov
push
mov
mov
xchg
pop
dec
dec
dec
jl
jge
jb
sub
sub
rol
dec
push
push
sub
add
push
dec
or
add
sub
ficoml
sub
popf
sub
push
xchg
adc
or
or
xchg
cmp
pop
jge
outsb
push
loope
dec
sarb
add
xor
decb
inc
add
sub
shrl
push
rclb
pop
fwait
adcl
xchg
mov
mov
scas
daa
rorl
pop
push
clc
fstl
daa
mov
inc
push
xor
or
ret
adc
roll
xchg
repnz
push
jge
or
inc
pop
jmp
mov
enter
loope
jmp
adc
sbb
push
push
xchg
or
cli
pusha
nop
cmovl
lock
ss
cmp
cmpb
and
dec
sahf
popa
push
mov
cs
xor
outsl
push
sub
cmp
mov
or
xchg
fxtract
aas
cltd
dec
int3
mov
push
cltd
pop
mov
xchg
mov
mov
test
mov
gs
sub
push
stos
loopne
pop
dec
xor
pop
xbegin
lcall
repnz
ljmp
fcompl
sti
add
es
jo
add
xor
sub
test
mov
dec
out
jg
mov
dec
popa
dec
sahf
in
dec
jg
aas
add
push
add
insl
stos
fnstenv
loop
push
lock
fwait
cs
jne
sub
sub
jo
ds
int
sbb
sbb
and
xor
fwait
aas
mov
daa
jle
push
in
sub
mov
dec
jo
dec
je
add
and
and
push
aam
int3
test
jb
cmp
sbb
fs
and
test
add
mov
daa
xchg
lock
dec
push
push
or
push
or
push
adc
mov
pop
mov
sbbl
je
cmp
cmp
mov
in
mov
or
fs
add
and
inc
bound
push
or
adc
jl
and
mov
xor
repz
adc
sbb
xchg
in
dec
adc
movsb
mov
aam
shll
pop
and
jne
and
adc
mov
xchg
adc
sub
shrb
sub
jne
xor
mov
dec
cmpb
xchg
add
loope
mov
cmp
loopne
ret
and
test
inc
adc
xor
lock
inc
pop
and
sbb
xor
sub
outsl
cmp
data16
push
fmuls
andl
lods
add
adc
mov
push
call
add
outsb
and
cmc
stc
call
jo,pn
adc
scas
sub
or
sub
in
rorb
dec
rclb
dec
sbb
stos
test
addr16
sub
add
inc
add
xor
adc
mov
push
or
add
push
sub
stos
rorb
push
in
repz
nop
pop
call
loopne
cmp
stc
int3
jmp
cmp
push
pushl
ret
cmpsl
inc
inc
rolb
imul
into
or
pop
ret
xchg
je
mov
dec
sahf
pop
sbb
jmp
and
repnz
orl
xchg
xchg
mov
xchg
ss
inc
jne
and
inc
outsl
dec
and
mov
imul
dec
in
add
out
inc
mov
mov
xchg
daa
imul
push
and
mov
imul
and
cmpsb
push
js
or
or
daa
clc
repnz
int
add
push
or
in
inc
mov
sbbl
popf
test
or
call
mov
pop
sub
add
in
pushf
scas
movl
lods
inc
mov
aaa
insl
fnstsw
jl
lea
add
jno
rolb
mov
inc
cmp
jp
repz
sbb
mov
add
xchg
fmull
mov
xchg
push
sbb
xor
pop
mov
dec
pushf
jb
dec
out
jb
jecxz
and
sti
mov
xchg
inc
mov
jl
pop
mov
aaa
xchg
shrb
inc
push
add
adc
movsl
testl
xlat
nop
les
xchg
sarb
lret
pop
xor
nop
sbb
jl
and
or
adc
lock
add
pop
sub
clc
cs
pop
add
sub
xlat
imul
rcll
aad
shl
popa
nop
add
add
jns
lods
xchg
cmpsl
mov
add
aaa
ret
pop
sbb
or
dec
and
xchg
ffreep
hlt
std
add
rcrb
xor
add
xchg
jns
jg
or
jecxz
xchg
xor
jbe
add
pop
jge
enter
pop
pop
subl
outsl
add
jnp
bound
pop
inc
xchg
ret
sub
pop
inc
out
dec
les
xor
xchg
push
cld
sub
mov
jbe
shrl
stos
mov
mov
pop
in
adc
adc
cmp
xor
pop
or
add
popa
pop
testb
or
pop
adc
xchg
add
adc
bound
pop
sbb
fmuls
jne
stc
in
and
bound
jmp
pop
repnz
jno
add
mov
jge
lods
push
mov
dec
lret
dec
add
pop
lock
mov
add
in
into
pop
out
and
idivb
ret
mov
xchg
jl
pop
in
jmp
ret
inc
das
hlt
jmp
imul
inc
inc
and
add
in
hlt
jle
adc
pop
pop
or
add
mov
movsb
nop
sub
dec
dec
fstpt
das
outsl
jne
nop
pop
jb
mov
lock
inc
popf
imul
and
adc
pop
test
in
js
add
sbb
or
sbb
jo
mul
push
out
shrb
xchg
jo
mov
push
in
xchg
lock
mov
imul
test
pop
mov
push
lcall
nop
jmp
mov
dec
fwait
jb
push
sub
or
cmpb
das
cmp
inc
daa
push
pop
inc
xchg
push
sub
loopne
inc
mov
push
jmp
or
or
mov
and
cmp
push
or
or
add
cmp
test
adc
cmp
loopne
xchg
mov
mov
mov
outsl
sbb
push
add
sahf
negl
push
cs
cmpl
sbbb
shrb
push
mov
outsb
add
pop
outsb
test
loopne
pop
or
sub
push
insb
shrb
jns
mov
adc
cmp
dec
mov
adc
test
pop
pop
insl
movsb
rorb
movsl
jbe
pop
fsubrp
cmp
inc
push
scas
insb
pop
inc
mov
and
inc
dec
xor
adc
xor
mov
adc
or
xor
dec
push
mov
pop
pop
ret
jl
or
out
sti
cmp
cmpb
add
mov
aam
daa
aaa
push
add
adc
mov
pushf
jbe
inc
push
lock
lock
ficomps
outsl
xchg
dec
inc
fmuls
lock
popf
shr
in
push
jbe
dec
and
ds
xlat
fimuls
lret
lds
dec
or
and
clc
and
add
adc
push
push
pop
mov
mov
adc
xlat
js
dec
and
repnz
xchg
push
out
mov
mov
push
jg
fsubrs
dec
pop
or
pop
outsl
jecxz
shlb
lock
sbb
add
pop
add
pop
cmp
cld
in
cwtl
sbb
cmp
jne
inc
or
pop
jp
mov
sub
lret
lahf
out
mov
clc
cmp
or
cmp
mov
outsl
imull
push
mov
inc
stos
xchg
add
adc
mov
arpl
negb
mov
cmp
xchg
je
xor
jmp
repz
or
push
sbb
xor
mov
sbb
cmp
in
and
das
sbb
inc
or
fdivs
dec
mov
hlt
leave
lds
lods
fstl
pop
lock
into
pop
add
fldcw
pop
cmpsl
jne
push
add
bound
push
push
loope
mov
sub
push
das
add
sub
pop
cmp
sbb
xor
sub
push
arpl
push
push
sub
std
xorb
pop
fidivl
enter
cltd
or
pop
adc
xor
push
les
bound
mov
jbe
imul
nop
out
push
jecxz
daa
sbb
scas
push
or
sub
sub
adcl
push
mov
push
cmp
or
lea
cs
pop
negl
pop
inc
mov
popf
cmc
mov
addb
jno
cmp
in
jae
or
add
adc
inc
inc
mov
popa
add
sub
pop
push
push
add
dec
pushf
scas
mov
iret
dec
test
ds
or
dec
test
and
daa
mov
ljmp
xlat
cmpsl
outsb
cld
add
inc
jmp
je
das
xchg
mov
aaa
inc
roll
add
adc
jg
ljmp
clc
push
push
ja
aaa
jmp
mov
test
pop
push
and
dec
push
out
jb
ficoml
xor
fmuls
out
test
sbb
dec
lcall
inc
add
sahf
cmp
xlat
mov
or
dec
in
cmp
jne
cmp
test
or
and
pop
pop
add
out
push
imul
scas
in
xor
sbb
cltd
pusha
xor
push
outsl
pop
mov
mov
sbb
sbb
jno
pop
jo
or
jno
sbb
mulb
leave
roll
push
inc
push
xchg
in
or
inc
jmp
ret
lret
jnp
mov
sbb
adc
or
sub
sbb
pop
adc
add
push
add
push
mov
adc
xor
es
or
outsb
push
pop
pop
daa
jnp
jo
clc
in
pop
cli
popa
fnstcw
inc
out
sbb
divb
xchg
inc
adc
sbb
icebp
mov
mov
adc
or
or
ret
scas
sub
out
mov
jno
and
pop
lahf
mov
adc
xlat
sub
adc
push
inc
cmp
scas
mov
mov
or
pop
pusha
cmc
xchg
movsb
xchg
and
pop
lea
out
jmp
popa
dec
jmp
ja
incl
sti
add
shll
hlt
loop
sbb
shr
push
lds
orb
or
test
mov
inc
pop
aad
test
add
shll
mov
scas
sub
sub
dec
jmp
shll
movsb
push
stos
pop
mov
mov
sub
lock
in
lcall
adc
rol
cmpsl
mov
pop
sbbl
xchg
xchg
in
mov
cmp
lahf
and
rcl
add
insl
insl
das
inc
xor
cmp
push
popf
sub
lds
repnz
mov
xchg
xchg
adc
mov
adcl
ret
lods
adc
outsb
mov
adc
fneni(8087
test
rorb
in
add
orl
dec
cmp
mov
in
dec
mov
into
xchg
inc
js
shl
xorb
push
inc
inc
movsb
xchg
out
aas
and
fimuls
sbb
or
push
and
inc
cmp
xchg
mov
or
add
jae
bound
fwait
xchg
jne
test
and
in
or
push
cmp
jnp
add
jno
lahf
idivb
pop
and
fcomp
out
mov
mov
imul
mov
lods
adc
xchg
or
sub
sbbl
or
aad
xor
cwtl
mov
lds
cmpsb
cmpsl
addr16
cmp
mov
mov
sub
add
pop
add
mov
pop
adc
dec
cmp
imul
sbb
add
mov
or
cli
stos
dec
mov
sub
shlb
rcl
add
xor
add
lahf
stos
ret
pusha
mov
in
pop
cmp
jle
mov
jmp
and
lret
jnp
jns
and
mov
imul
sbb
ret
or
pop
stos
and
daa
jo
and
loopne
push
cmp
sbb
lock
pop
adc
sub
or
nop
xchg
ret
sbb
add
inc
sbb
mov
mov
shlb
and
push
out
adc
nop
push
pop
mov
lea
add
in
mov
mov
nop
mov
in
dec
cmp
push
cmpsb
jae
lret
xor
push
mov
mov
mov
lods
or
outsb
enter
je
xchg
fs
in
mov
or
sbb
and
inc
adc
sub
pop
add
sub
pop
iret
adc
mov
jbe
pop
int3
pop
cli
inc
arpl
mov
movl
test
or
push
cwtl
add
dec
sub
loope
fsubrs
es
jle
push
inc
fs
add
je
inc
or
pop
dec
rorl
inc
push
cmpsb
imul
sub
or
and
add
aam
add
inc
add
push
aad
push
cmp
inc
sbb
add
mov
dec
xchg
das
pop
in
push
inc
loop
push
cmp
jl
test
or
shr
and
add
cmpsb
adcb
sbbb
sub
xor
push
push
shlb
cmp
inc
rclb
sbb
mov
pop
and
push
testl
sti
or
or
adc
fsubp
sti
xor
or
mov
stos
push
jbe
rcll
or
sub
dec
adc
je
or
sbb
xor
cmp
addr16
arpl
mov
jl,pn
pop
xchg
scas
loopne
lock
cmp
xchg
mov
fmuls
mov
rcll
shll
sahf
nopl
sub
jo
mov
push
mov
xchg
test
ds
fs
mov
push
sub
xor
jne
jg
add
add
arpl
and
cwtl
or
adc
sub
push
sub
add
lea
push
and
xorl
ja
stos
sbbl
mov
leave
inc
cwtl
lods
adcl
mov
cmpsl
lds
jnp
arpl
jno
jl
mov
in
mov
test
test
inc
adc
inc
mov
push
xchg
inc
rorb
dec
push
inc
and
add
stc
add
add
xchg
add
rol
and
int3
jbe
xor
imul
push
mov
mov
clc
dec
mov
je
pop
enter
js
arpl
test
xchg
loopne
cmp
loopne
push
adc
inc
test
fnstcw
aam
push
aam
stc
lods
dec
push
jl
pusha
push
mov
xchg
xchg
add
inc
xchg
lods
jne
pop
syscall
test
pop
outsb
daa
icebp
sub
mov
lods
roll
fstpl
rclb
add
mov
adc
mov
jmp
ret
adc
mov
fwait
add
arpl
jne
or
cwtl
movsb
sahf
pop
in
dec
test
jecxz
cltd
test
inc
push
cltd
add
rcrl
xchg
in
pusha
out
pop
out
ja
mov
and
push
xor
add
std
xchg
jne
sub
jno
dec
lods
test
int
lock
inc
pop
outsb
sub
hlt
lds
ss
dec
xchg
ret
and
in
push
pop
or
mov
mov
les
adc
push
mov
push
dec
mov
sub
pop
dec
jmp
xlat
and
cmp
pop
or
dec
in
mov
add
or
or
xchg
ja
xor
shll
push
movsb
imul
jnp
and
pop
lock
mov
shlb
out
loopne
and
pop
or
xchg
inc
ror
and
ret
inc
idivl
push
mov
jne
addl
jb
adc
loopne
sub
pop
out
push
dec
int3
add
iret
adc
out
js
outsb
add
arpl
and
pop
mov
rorl
dec
clc
out
mov
in
icebp
das
mov
mov
aam
push
lea
cltd
adc
bound
xlat
inc
cmpsb
and
stos
inc
pop
adc
iret
dec
jmp
sub
and
enter
ss
orl
rclb
mov
jge
or
mov
adc
add
xor
sub
mov
xchg
gs
ss
push
and
inc
pop
shl
pusha
popf
mov
sub
and
jne
popa
adc
cltd
sub
test
push
movsl
adc
jne
fs
cmp
movsb
int3
aam
call
std
nop
sub
inc
loope
or
das
or
or
sbb
fmuls
out
dec
mov
add
sbb
or
jmp
mov
xor
test
cmpb
fimuls
rorl
pop
inc
lock
rcll
push
add
int
adc
sub
dec
cmpsb
dec
lods
sbb
sbb
test
lods
dec
dec
xlat
cmp
mov
push
xchg
outsb
jno
das
push
or
out
push
adc
cwtl
mov
mov
dec
inc
xchg
aaa
and
or
add
fstpl
push
or
add
add
adc
jmp
and
fstps
fisttpl
and
jbe
movsb
jne
pop
cmp
lods
shlb
pop
sbb
call
fbld
loope
or
test
sti
cmp
stos
pusha
cmpsl
mov
repz
inc
mov
outsl
adc
add
push
inc
cmc
addb
xor
inc
in
add
jecxz
push
cmp
xchg
loopne
jne
cmp
lods
push
adc
add
imul
pop
inc
jmp
mov
pop
dec
push
dec
or
inc
movsl
mov
hlt
fnstenv
lock
stos
ret
jns
fs
push
or
test
pusha
and
cmpsb
or
hlt
pop
call
daa
mov
jne
add
mov
add
mov
ss
outsl
or
pop
sbb
jb
add
sbb
xchg
jo
pusha
mov
or
push
inc
ss
aam
pushl
xor
or
pop
daa
rcrl
fsubl
mov
cmpsl
or
and
mov
pop
rcll
cs
mov
mov
rcrb
cmp
in
adc
or
or
sub
adc
popa
xor
dec
jp
inc
fs
add
inc
adc
or
in
xchg
movl
mov
sub
push
jno
jmp
std
roll
dec
push
push
dec
cmp
test
fdivr
inc
add
daa
mov
push
push
cmp
jns
push
or
hlt
dec
or
sub
or
sbb
int3
add
insl
sbb
cs
sbb
adc
icebp
lcall
clc
xlat
and
add
jge
add
push
xchg
dec
or
dec
dec
xor
add
xor
push
sbb
or
push
movb
lret
sbb
add
adc
popa
inc
aam
cmp
pop
jns
imul
pop
pop
inc
scas
data16
mov
jl
pop
ss
sbb
shrl
xor
rorb
lea
clc
lods
movsl
jmp
and
add
rolb
adc
push
fisttpl
dec
add
dec
add
sbb
pop
sbb
test
add
lods
jb
mov
inc
mov
or
jg
ret
aaa
cs
imul
mov
or
das
in
xor
insb
test
cmpsb
mov
scas
pop
xchg
lods
bswap
push
sbb
insb
nop
push
test
mov
jns
in
push
stos
lods
sti
icebp
mov
add
dec
pushf
jno
pushf
idivb
pop
cld
adc
jns
lock
add
dec
add
inc
mov
jne
add
inc
cmp
pop
test
stos
std
add
loopne
cmp
fdivs
push
and
and
mov
inc
js
xchg
add
rorl
mov
add
subb
in
ficoml
enter
push
adc
fcomps
dec
xchg
cli
and
les
ret
dec
ja
pop
add
and
leave
adc
pop
xchg
lods
adc
fwait
add
pop
xlat
lsl
push
jmp
and
fcomps
add
test
pop
pminsw
sub
inc
or
pop
mov
adc
fmul
mov
addb
push
shrb
cs
jo
dec
jg
xor
push
sahf
rorb
aam
cs
pusha
nop
imull
ss
cmp
and
sub
push
adc
pusha
dec
ret
pop
push
and
push
add
or
add
testb
sbb
enter
adc
mov
pop
mov
ja
push
and
pop
add
add
mov
adc
in
in
xchg
mov
test
aam
add
sbb
icebp
lcall
inc
push
movsb
cmp
lods
mov
sub
push
je
inc
stos
sbbl
insb
push
add
xor
pop
or
imul
cwtl
cmp
ret
pop
xor
rorl
movsl
add
inc
rorb
lods
pop
gs
xchg
nop
and
sti
add
adc
dec
rorl
leave
cltd
out
scas
lods
sbb
push
xchg
les
inc
mov
jnp
and
mov
xlat
rolb
add
sub
mov
add
sbb
add
pop
mov
push
add
test
add
in
bound
pop
add
dec
insb
adc
leave
mov
fistpll
xchg
js
jg
cmp
sub
adc
and
inc
fcoml
push
xchg
and
call
mov
hlt
mov
pop
add
fdivrl
fisttpl
and
fiaddl
inc
pusha
mov
ret
dec
xor
pop
push
shlb
nop
pop
daa
mov
and
bound
dec
ds
stos
lock
xor
mov
notl
dec
je
sbb
stc
jno
nop
xchg
pushaw
hlt
imulb
mov
xchg
jnp
data16
imul
xlat
dec
lea
imul
aaa
rsqrtps
xor
call
andl
adc
push
push
push
add
sub
or
adc
push
lahf
jmp
sub
lock
add
js
lock
add
lods
inc
rcrb
lods
or
popa
push
xchg
fldl
rclb
movsb
xchg
mov
push
xorl
and
or
jo
add
push
and
pop
movsl
subl
cmpl
iret
js
xor
push
add
jae
add
in
push
movsl
jbe
jo
push
push
hlt
pop
test
mov
jnp
ret
aaa
push
lea
and
loope
mov
adc
and
cmp
in
clc
out
add
bound
inc
dec
imul
test
push
je
pop
jbe
push
movsb
push
and
xchg
xor
mov
sub
dec
popa
cmp
push
ss
mov
sub
call
popf
add
mov
or
orl
mov
xchg
dec
sub
mov
push
stos
jg
pop
xchg
lret
mov
or
imul
cmp
adc
imul
movsb
xor
xchg
add
into
adc
movsb
or
popl
xlat
popa
jns
aad
push
sub
and
loop
test
stos
sbb
sbb
inc
xlat
dec
inc
or
fcmove
inc
dec
sub
cmpb
iret
lods
inc
push
mov
adc
inc
mov
mov
js
mov
push
dec
and
cmp
pop
jns
scas
adc
lea
insl
and
dec
imul
or
fwait
cltd
mov
add
cld
in
push
adc
add
push
dec
stos
jnp
cmp
and
repz
cmpl
cld
push
add
lock
fcoms
mov
scas
adc
mov
sbb
mov
cmp
add
int
inc
add
mov
mov
add
push
inc
fbld
sti
add
cli
ljmp
mov
cld
sti
or
fmull
or
xor
mov
movsb
add
mov
scas
lods
addr16
jp
sti
cmp
jmp
push
push
or
sbb
out
push
cmp
cmp
cmp
jmp
or
sub
adc
mov
and
ret
jmp
xor
and
in
int
push
push
adc
inc
lea
mov
sub
xchg
int3
and
jg
nop
xchg
xchg
xor
aad
xchg
sbb
inc
aam
sbb
push
mov
xor
cld
sbb
xchg
subb
pop
add
dec
lods
add
pusha
adc
or
shl
xor
into
ret
xchg
jne
ja
ret
in
pop
and
out
sbb
sbb
test
cltd
mov
movsb
mov
xor
loopne
inc
arpl
inc
jl
mov
push
insl
sbb
pop
pop
js
insl
mov
xchg
add
add
add
cmp
jmp
in
les
mov
loopne
mov
inc
add
adc
cwtl
out
mov
mov
push
pop
mov
or
cmp
les
push
cmp
cmp
enter
push
pop
es
adc
loop
jp
add
fidivrs
xor
add
pop
jo
cs
mov
inc
xchg
xorb
lock
cmpsb
inc
jb
jns
mov
aaa
jbe
test
aam
mov
sub
aas
inc
inc
or
and
mov
inc
push
and
hlt
and
sbbl
add
and
das
jg
andb
inc
daa
pop
daa
inc
jo
mov
inc
lods
pop
and
or
sub
add
je
ret
arpl
sub
add
mov
sbb
xor
outsl
push
movsl
or
test
aas
arpl
testb
clc
inc
xor
dec
dec
mov
push
out
jmp
xor
push
cmp
jecxz
fadds
cmpb
adc
add
adc
cld
addl
dec
daa
xor
aam
adc
mov
xor
mov
jecxz
add
inc
push
adc
and
cs
mov
jns
add
pop
and
or
and
cmp
loopne
adc
ja
fimuls
push
dec
addr16
repz
inc
hlt
push
cmpsb
sbb
sbb
cmp
pusha
push
pop
jne
inc
mov
cli
dec
outsb
inc
add
mov
dec
ljmp
js
lock
lea
flds
orl
loope
dec
xchg
xchg
out
pop
add
test
adc
and
pushl
mov
rclb
push
sbb
insl
ret
pop
xchg
inc
iret
sysenter
add
add
cwtl
inc
xchg
imul
xor
cmpsb
cs
jge
andl
cmpsl
lcall
inc
cmc
aam
roll
loope
in
clc
call
mull
add
mov
or
dec
data16
or
pop
nop
rolb
adc
sub
je
cltd
inc
and
mov
lret
sub
je
xchg
push
sbb
sub
adc
decb
cmpl
es
mov
pop
sub
and
cli
ss
lahf
jmp
cmp
inc
arpl
js
inc
sub
mov
xchg
ret
test
cli
movb
and
ljmpw
push
sbb
add
scas
enter
add
lds
and
shl
repz
push
or
leave
mov
add
int
cmp
push
outsl
dec
inc
inc
push
orl
dec
inc
ljmp
hlt
mov
sbb
jecxz
add
stos
rcrb
scas
mov
dec
jnp
push
popa
loop
ret
in
cmp
xor
sarb
lcall
adc
repnz
xchg
sbb
fisubs
mov
dec
mov
in
das
cmpsb
fisubrs
dec
mov
int3
push
loopne
div
xor
test
and
mov
gs
cmp
sahf
lock
push
inc
loopne
mov
xchg
xchg
push
cmpsb
and
dec
push
adc
cmp
cmp
jg
cmp
pop
add
cmpl
add
roll
roll
jne
or
fidivs
inc
xor
popa
loopne
orb
adc
mov
add
xor
sub
pop
add
or
add
dec
or
mov
dec
popf
sub
mov
jge
mov
stos
mov
fisubl
xchg
dec
push
popl
lcall
adc
and
cmp
clc
lods
or
adc
add
pop
roll
mov
data16
jno
xor
cld
cmp
jmp
sub
and
or
cld
ja
xor
push
push
or
out
addl
pop
jnp
adc
cmp
rolb
push
mov
pop
mov
push
dec
loope
movsl
pop
and
adc
or
lahf
xor
aam
test
push
outsl
jne
mov
sti
inc
jns
addr16
xor
mov
or
push
lds
icebp
jb
adc
push
and
and
pop
push
mov
adc
pop
nop
xorl
ffreep
sbb
add
add
test
test
nop
ret
enter
hlt
pop
xor
daa
adc
xchg
and
lahf
push
ret
cmp
inc
loop
push
inc
ja
xor
scas
pop
sahf
jnp
enter
loope
daa
inc
cmp
xor
pop
data16
je
das
sub
jb
int
inc
sub
test
test
dec
ss
sbb
cmp
push
je
mov
pop
adc
xor
dec
sub
xchg
adc
idiv
sbb
xchg
mov
mov
stos
xor
dec
dec
mov
pop
lds
sbb
rcll
and
xor
xchg
add
fists
jle
and
out
aad
dec
or
jo
mull
dec
add
sbb
xor
stos
and
movsb
test
pop
cld
jp
inc
bound
lret
aas
jp
shll
add
push
dec
clc
ss
xor
mov
dec
pop
or
jg
loopne
adc
icebp
sbb
sub
jmp
xchg
inc
movsl
mov
dec
test
ret
xchg
jae
pop
stc
push
arpl
cmp
lret
pop
mov
hlt
adc
or
and
pop
iret
jmp
adc
inc
leave
loope
lock
push
loopne
add
fchs
and
mov
xorb
ja
push
or
mov
add
test
aad
or
pop
xlat
adc
dec
pop
mov
or
int
push
cmp
je
cmpb
mov
pop
cld
nop
dec
je
jge
add
pop
adcl
xor
in
enter
sub
dec
imul
insl
cmp
insb
mov
add
popa
sub
mov
js
fwait
int
mov
jae
xor
aaa
or
lcall
mov
mov
enter
fisubrl
pop
sbb
outsl
sub
and
cmp
jo
imul
push
cs
nop
xor
cmp
addl
jge
push
push
sub
mov
add
xchg
movsl
mov
inc
mov
and
stos
and
jae
cmpb
cmpsl
xor
mov
shrl
mov
jg
mov
test
and
popf
sub
nop
faddp
fadds
je
inc
mov
and
lods
adc
ret
adc
inc
gs
es
and
add
xor
push
jne
movsb
daa
loop
xchg
sti
mov
aas
aam
insb
mov
adc
lock
add
orb
and
sub
addb
sahf
cmp
pop
inc
nop
add
add
aaa
aam
mov
add
pusha
sub
or
add
push
pop
sbb
xor
push
jbe
outsb
incb
mov
push
or
test
nop/reserved
aad
out
mov
loopne
call
pushf
push
jbe
clc
and
bound
addl
sbb
movb
int
mov
cmp
or
push
out
mov
xor
stos
popa
xor
and
and
push
test
sbb
ret
repnz
mov
or
and
in
test
aaa
int3
rcrb
subl
or
mov
ljmp
pop
je
rorb
pop
lcall
insl
and
cmp
sbb
mov
add
call
add
dec
loope
scas
jo
push
dec
arpl
or
popf
scas
jo
sub
or
inc
lcall
sbb
rorl
xchg
outsb
add
shlb
dec
dec
adc
sub
dec
push
inc
jp
mov
flds
and
aad
popf
rcpps
push
or
ret
xor
movsl
mov
je
xor
or
sub
fldl
push
push
in
sarl
dec
cmp
push
and
std
jne
push
push
pusha
mov
dec
xor
fsubrs
push
insb
and
dec
lds
pop
sbb
roll
cld
xchg
add
mov
loop
or
mov
sub
into
inc
xchg
cmp
jb
test
mov
arpl
xchg
push
xor
sbbb
jle
or
mov
inc
sub
adc
dec
and
pop
xor
ret
jle
sbb
dec
adc
in
mov
add
xor
or
lock
mov
rorb
int3
jmp
pop
fstpt
and
sbb
mov
add
mov
adcb
pop
push
inc
pusha
jecxz
addr16
add
les
sub
or
push
pop
cmp
shlb
ss
inc
sbb
mov
adc
xchg
mov
dec
loope
and
and
pop
jg
lock
pusha
adc
ljmp
add
cmp
sahf
mov
mov
mov
shrl
pop
dec
add
aad
jo
push
cmp
inc
rcl
mov
arpl
test
dec
pop
add
sbb
clc
add
push
jb
jecxz
int
pushf
loopne
adcl
aam
xchg
imul
jmp
lock
cs
outsl
das
inc
and
dec
dec
add
cs
and
add
xchg
xor
sbb
in
rolb
je
adc
xchg
pop
jmp
enter
push
rorl
ljmp
or
adc
icebp
cwtl
dec
dec
cmp
sbb
add
push
sbb
data16
test
xor
mov
xlat
add
movl
push
jle
dec
in
movsl
xor
sbb
jmp
mov
repz
iret
fldenv
insl
adcl
jns
test
imul
loope
xor
xor
add
stos
out
and
mov
push
and
dec
and
adc
and
add
inc
jne
cmp
inc
inc
xchg
dec
dec
aaa
das
or
inc
mov
jp
mov
and
xor
sbb
adc
lods
jge
nop
inc
and
mov
mov
dec
xchg
cmp
sbb
dec
loop
imul
sub
sbb
scas
in
shrb
mov
pop
push
pop
pop
clc
inc
or
je
sbb
push
and
lahf
pusha
dec
xchg
cmpsb
mov
jmp
mov
cmp
cmp
mov
cmpb
xchg
dec
mov
pop
and
and
push
into
adc
test
bound
sbb
adc
test
xchg
pop
fs
and
sbb
jge
sbb
leave
aas
add
push
xchg
push
xor
pop
hlt
dec
rclb
sub
not
add
and
mov
add
sbb
adc
test
insb
sub
xchg
and
je
sbb
pop
es
addl
jne
fs
xchg
daa
add
push
cmpsl
inc
add
push
push
push
and
mov
sbb
je
mov
xor
loopne
push
adc
push
xchg
cmp
nop
fcompl
fisttpll
lods
or
loopne
sbbl
jno
mov
pop
adcb
dec
shrb
push
ja
dec
test
mov
lock
daa
mov
jnp
mov
jmp
sbb
insl
sub
and
bound
mov
xchg
pop
ljmp
xchg
lds
and
pop
or
clc
mov
pop
inc
cmp
shll
inc
push
fcompl
notl
daa
insl
inc
or
rorl
sbb
inc
or
push
cwtl
cmp
rorl
sbb
andb
or
sub
cwtl
or
cmpsb
or
pop
mov
lret
pop
jno
fnstsw
adc
imul
xor
and
arpl
push
sub
aad
movsl
movsl
or
mov
adc
mov
sbb
dec
mov
push
pop
or
and
arpl
ret
adc
outsl
add
add
adc
lcall
push
sbb
or
adc
push
mov
nop
pop
cmp
lret
push
pop
add
sarl
jne
mov
jbe
or
pop
daa
jae
pop
aam
rcl
pushf
xor
imul
fadds
fdivl
loop
call
das
mov
fsubs
ret
jne
jns
popf
int3
out
fsubp
xor
bound
lahf
xor
nop
push
or
or
mov
dec
jl
inc
dec
inc
stc
mov
fs
pop
mov
cmp
jge
add
or
mov
cmp
jge
and
sub
fdivrs
dec
addr16
push
aas
mov
mov
fiaddl
or
and
xchg
push
adc
push
addb
insl
xchg
push
mov
push
test
cmp
lahf
push
xchg
sbb
adcl
jbe
sbb
lret
sarb
sti
je
mov
or
cmp
shufps
dec
adc
sub
jg
out
sub
imul
xor
shrl
xchg
int
imul
xchg
cmpsl
popa
inc
xor
inc
popa
pop
aam
add
push
or
stos
arpl
pop
xor
cmp
adc
jo
adc
sbb
add
aad
sbb
pop
pop
lret
mov
pop
mov
xor
ret
rorl
js
iret
call
mov
mov
int
lret
test
jne
adc
lret
push
sbb
add
out
lods
sbbl
repnz
clc
jo
pop
xchg
jmp
loopne
jge
mov
stc
icebp
test
xor
pop
je
out
ret
adc
je
fwait
xchg
imul
jg
hlt
das
les
ljmp
inc
inc
loopne
scas
xor
and
cmpsb
js
movsl
jmp
cmp
mov
mov
jg
push
xor
insb
push
das
add
cmpsl
push
cs
mov
cmp
xlat
and
stos
push
push
pop
scas
sbb
das
jno
dec
adc
mov
adc
cltd
out
jnp
es
xor
and
or
sub
inc
jecxz
push
movsb
pop
daa
pop
test
and
shll
adc
push
cmpb
xor
mov
jno
jns
dec
mov
or
shl
in
or
or
mov
cltd
repz
cmp
push
pop
jmp
sbb
xlat
dec
sub
xchg
inc
xchg
rclb
adc
xchg
and
dec
inc
fsubrl
or
les
mov
outsb
gs
push
xchg
dec
cmp
adcb
jo
mov
das
mov
cld
call
dec
out
adc
mov
inc
push
inc
xchg
and
cmp
cwtl
nop
in
hlt
aaa
adc
push
es
notb
push
ss
sub
cltd
inc
cmpl
ret
jl
es
mov
mov
xlat
and
ret
and
xchg
rclb
push
or
shlb
push
push
mov
mov
or
ja
push
pop
movups
push
lret
dec
xchg
js
lock
inc
jo
jbe
mov
fs
jo
pop
push
sbb
out
inc
inc
lcall
sbb
pusha
dec
rorl
cmp
aaa
andb
xor
mov
xor
xchg
pushf
dec
add
rolb
data16
je
xor
adc
cmpl
add
jb
add
stos
jl
cmp
add
dec
cmp
push
adc
out
rcr
adc
mov
rcrl
add
lret
das
dec
sbb
and
mov
cmc
in
or
push
and
ret
push
push
flds
dec
mov
lret
movsb
sbbl
mov
xor
mov
jae
ds
push
lock
lcall
or
pushf
or
shrl
outsb
pushf
push
adc
xchg
aam
rol
int3
jecxz
fcoms
pop
jne
add
or
sbb
test
and
dec
je
lods
dec
fs
sub
dec
lock
push
or
push
sbb
lods
jmp
pop
insl
or
nop
xor
cmp
push
cmp
adc
daa
inc
dec
inc
in
sahf
cmpsb
push
daa
add
shlb
or
daa
add
mov
inc
mov
addb
sub
add
add
enter
fimuls
stos
stos
repnz
jb
inc
stos
mov
push
push
lds
mov
inc
movsl
pusha
and
lods
sub
xchg
dec
lods
stos
stos
adc
gs
jbe
and
mov
adc
fdiv
xchg
mulb
add
inc
cs
js
out
lds
out
push
and
jle
adc
mov
add
pop
cs
sbb
les
mov
js
out
push
mov
stos
fldenv
shl
shrb
lods
or
and
add
cmp
rcrb
jmp
movsb
stos
test
fdivrs
add
cmp
jle
loopne
imul
xor
push
test
aam
or
dec
sarl
sarb
shl
jb
mov
xchg
or
dec
xor
sbb
xor
pause
or
sbb
add
mov
inc
jnp
shr
pop
dec
mov
push
push
pop
sub
int3
adc
jo
sbb
adc
pop
lods
add
mov
sub
mov
xor
ljmp
lds
xchg
jge
sarb
dec
outsb
dec
bound
iret
enter
sbb
jbe
shlb
ret
pushf
lret
mov
mov
push
sbb
xlat
adc
fldenv
fisubl
arpl
lret
jae
push
xchg
sub
stc
xorb
pop
jne
scas
sub
popa
mov
push
xchg
insl
inc
sub
dec
lret
sbb
add
rorb
outsl
dec
jbe
lret
xlat
shr
add
xchg
or
xchg
pop
sub
adcb
call
aas
xor
addr16
adc
inc
dec
daa
dec
jp
or
sub
in
inc
push
nop
loopne
cmp
pop
push
data16
in
jae
sarl
fmull
sub
int3
lock
sub
out
sarb
scas
sbb
cmp
push
rclb
sub
mov
mov
test
data16
fmuls
cmp
mov
or
jecxz
add
popf
sbb
dec
pop
pop
shrl
fstps
lahf
adc
popa
fldcw
xor
mov
pop
mov
or
push
and
cmpb
pusha
xor
scas
xchg
mov
ret
daa
movsb
and
add
push
adc
ret
lret
pop
push
sub
mov
int3
pop
or
push
pop
sbb
pop
or
mov
ss
jbe
mov
rolb
push
cld
pop
sbb
sub
xchg
pop
adc
daa
pop
dec
adc
testb
sub
xor
mov
aam
jge
push
imul
push
repz
in
cmp
movsl
aam
mov
cmpsb
stos
add
and
cwtl
dec
push
mov
shrb
loope
dec
adc
inc
push
mov
nop
or
ret
stos
xchg
out
or
out
lock
sahf
lret
rorb
adc
add
ret
testb
nop
fwait
inc
sub
add
jne
fsubrp
xor
test
pop
mov
fwait
xor
or
movsb
push
and
lods
psubsw
mov
leave
es
pop
ret
leave
and
or
test
mov
imul
xor
xor
test
daa
add
aaa
test
pop
aam
inc
fcoml
imul
lea
cmp
dec
push
les
call
lods
sub
sbb
stos
icebp
hlt
and
out
andl
or
stos
addr16
pop
mov
je
sbb
dec
cli
pop
fsubrs
or
adc
lods
mov
aam
inc
jae
cmp
ja
out
push
ljmp
adc
push
mov
inc
insl
aaa
sbb
insb
push
and
mov
push
xor
or
out
push
lock
sub
clc
mov
cmp
jmp
push
jmp
daa
ret
add
adc
and
jmp
outsb
stos
and
add
dec
jns
popf
sub
repnz
xchg
mov
mov
adc
adc
inc
cmp
mov
push
inc
xchg
adc
outsl
les
sub
test
xchg
pop
xor
call
push
into
mov
cmpsb
xchg
xchg
ss
jecxz
test
cmpxchg
mov
xchg
sbb
fldcw
xor
inc
or
pop
aaa
movsb
pop
adc
call
pop
sub
sub
and
dec
cmp
pop
mov
add
jl
sbb
xor
mov
mov
jnp
sbb
cmp
and
popf
cmpsl
or
inc
pusha
arpl
push
pusha
and
push
sub
xchg
je
inc
adc
je
or
jg
mov
mov
mov
or
cmp
hlt
sub
mov
add
movsl
dec
cwtl
lcall
cmpsb
movsb
sti
inc
or
lea
sub
pop
sbb
push
push
insb
push
fs
add
jge
mov
inc
mov
dec
pop
orb
or
aad
push
out
incb
mov
add
push
fs
das
imul
lahf
jns
insb
pop
stos
bound
test
rcll
daa
test
lds
jnp
mov
push
pop
mov
dec
ret
imul
or
loopne
pop
insb
loope
or
loop
rep
ret
jns
faddl
sbb
loopne
loop
hlt
arpl
dec
dec
icebp
sahf
es
jmp
and
sub
insl
lock
xor
push
aam
xchg
or
push
cs
jmp
push
sub
fcomp
out
ret
xor
dec
or
sub
pop
es
push
jmp
loop
xor
fwait
adc
adc
add
shlb
pop
call
mov
jo
or
dec
je
int
inc
mov
iret
jmp
push
cmpsb
rcll
cmp
add
mov
and
rclb
test
inc
decl
addb
cmpsl
inc
sahf
fimull
leave
movsb
mov
jl
pop
add
dec
mov
cmp
or
adc
sbb
ds
xchg
hlt
iret
fdiv
je
jo
xchg
sbb
call
sub
mov
mov
and
inc
jmp
jnp
xor
in
jne
gs
mov
in
shrb
jmp
movsl
dec
rcll
cmp
and
mov
xor
inc
in
mov
cmp
xchg
pop
adc
xor
out
out
out
sahf
jge
pop
arpl
inc
jne
jb
jno
add
pop
ss
push
lods
rcll
cmp
or
movsb
popa
popf
xor
add
push
imul
pop
nop
cmp
push
int3
push
dec
push
arpl
sbb
fsubs
in
add
and
clc
or
and
and
in
in
pop
shll
push
es
jbe
lds
lret
daa
rcll
jle
or
fucomi
adc
sarb
adc
mov
adc
sbb
in
sbb
jae
in
xchg
fbld
jae
push
or
fbstp
xor
xor
in
xchg
pop
adc
xor
fwait
les
es
pop
lahf
push
push
mov
jmp
cld
pop
sbb
test
adc
adc
mov
or
lods
test
push
pop
and
adc
insl
mov
mov
pushf
lock
dec
aas
movl
sbb
jnp
repz
hlt
sbb
sti
emms
mov
pop
push
inc
cld
aad
mov
dec
or
sbb
js
sbb
or
mov
das
or
push
popl
dec
cmpsl
fwait
sub
dec
out
insb
or
sbb
and
mov
jg
adc
push
add
sub
dec
xor
mov
dec
xor
mov
xchg
mov
dec
or
fiaddl
mov
pop
sbb
add
subb
iret
xchg
test
mov
adc
jne
sub
xchg
test
lock
pusha
pop
popl
mov
lahf
mov
mov
dec
push
cs
adcb
ret
fbstp
dec
cmp
xor
and
test
test
ret
cwtl
mov
jle
or
outsl
lods
fdivs
sbb
adc
adc
pop
or
xor
sbb
subb
add
jmp
add
xor
arpl
dec
adc
test
cmpsl
add
aam
inc
mov
or
dec
in
jae
ja
jp
inc
add
repz
andb
adc
or
xlat
inc
xchg
repnz
enter
lea
sbb
jo
jno
sbb
dec
andl
aaa
cmp
clc
pop
dec
mov
in
addb
dec
and
cmpb
icebp
pop
sub
add
inc
jae
push
outsl
sahf
and
outsb
lret
ret
orl
add
clc
je
jne
adc
popa
cmc
and
or
clc
pop
popa
outsb
inc
mov
in
or
inc
sbb
aaa
sbb
js
adc
push
lea
or
inc
sub
push
mov
pop
xchg
pop
imul
add
loopne
mov
lds
mov
popl
and
add
sub
pop
lods
int
mov
xchg
loopne
subl
inc
mov
mov
addr16
push
sbb
jbe
jns
int3
aas
fwait
push
ret
jge
out
or
rolb
pop
push
mov
loope
add
sbb
mov
push
nop
dec
nop
mov
push
jl
popa
nop
mov
pop
push
dec
bound
jle
inc
push
add
cmpl
jmp
adc
daa
mov
decl
or
inc
mov
test
loop
imul
pop
iret
addr16
call
lret
sub
pop
adc
rol
ret
inc
clc
inc
sub
test
aam
jecxz
pop
sub
pop
aam
xchg
bound
pop
ret
sahf
adc
dec
ds
movb
and
add
mov
mov
cld
push
and
into
pop
lcall
icebp
mov
or
or
push
add
xor
mov
aas
test
in
test
xor
clc
sbbb
loope
add
clc
jge
cmp
sub
jle
jae
xchg
mov
sbb
jno
data16
mov
xor
push
jle
adc
mov
cmp
jle
pop
ret
bound
cld
and
cld
push
inc
push
fistpl
nop
inc
dec
aaa
jbe
popf
dec
cmpsl
sub
ret
xorb
dec
add
inc
aaa
add
cmp
setl
and
das
or
cmc
cmp
adc
xchg
lock
mov
pop
sbb
sub
arpl
inc
cmp
pop
push
or
jle
pop
pop
rolb
xor
push
push
mov
or
adc
in
and
mov
jl
jno
inc
rorl
inc
test
dec
adc
gs
into
fsts
sahf
addb
jecxz
or
iret
and
dec
fwait
xchg
sbb
cmc
inc
sub
push
out
rorl
push
inc
cld
rcll
xorb
push
or
mov
andb
mov
mov
ret
jne
push
mov
push
add
xchg
pop
aad
call
adc
jae
mov
adc
add
dec
nop
pop
push
pushw
lods
inc
lods
sbb
xchg
ret
or
xchg
and
mov
push
inc
call
pop
adc
mov
dec
xor
xor
pavgw
sub
and
call
test
stos
or
inc
and
mov
mov
test
push
adcl
dec
daa
and
push
push
or
clc
inc
jp
adc
lret
push
add
js
je
xchg
push
mov
loope
xchg
in
addl
clc
int3
pop
or
and
jge
loopne
push
cmpb
out
mov
dec
pop
sbb
popa
cmp
cmpb
sbb
xchg
rol
sbb
nop
dec
les
adc
or
aad
and
data16
add
shll
push
js
scas
pusha
loopne
cmc
xor
inc
xchg
je
jle
add
cmp
ja
je
stos
aaa
std
test
fimuls
or
add
lds
inc
loopne
adc
jl
mov
stc
mov
lds
cmc
adc
push
or
popa
push
fdivrl
shlb
mov
jo
mov
jno
cmp
test
pop
or
das
mov
nop
add
cmp
dec
sub
addl
inc
cs
loope
fwait
xchg
mov
inc
jecxz
xchg
popa
test
and
add
mov
lahf
xchg
sbbl
adc
xchg
mov
test
shlb
xlat
inc
jecxz
pop
jbe
ja
jmp
sbb
push
sub
pop
pop
in
scas
sub
inc
nop
dec
jg
mov
ss
dec
cmp
lea
pop
jbe
xor
lcall
test
add
push
dec
push
push
sub
nop
add
jo
add
imul
mov
mov
test
cmpb
or
sbb
inc
fs
movsb
ret
dec
adc
in
pop
sbb
jecxz
dec
add
inc
inc
cmpsb
addb
push
ret
sbb
dec
inc
or
aad
push
pop
fadds
add
xor
mov
shr
add
add
sbb
jo
outsb
mov
out
popl
mov
mov
dec
adc
ret
jbe
insl
fadd
push
add
xchg
sbb
jmp
test
pop
jb
fnstcw
aam
mov
ret
jno
adc
or
popl
cmp
push
lahf
sbb
ljmp
cmp
jne
ds
cmp
sbb
or
add
mov
pop
add
dec
push
out
push
or
mov
sbb
pop
sbb
push
jne
inc
in
scas
jnp
inc
xorb
fisttpl
and
loopne
push
addb
cmp
jne
or
mov
push
std
outsl
in
dec
jne
mov
repz
inc
push
mov
in
aaa
fsave
rorb
push
add
push
adc
sub
mov
subb
dec
mov
subps
mov
push
dec
sub
shl
add
adc
ljmp
cmp
push
add
ret
mov
aad
xor
rolb
dec
sub
bound
test
xchg
lret
pop
pop
adc
and
adc
mov
and
mov
inc
pop
xor
insb
pop
mov
add
sbb
popf
aaa
sbb
in
pop
outsl
mov
mov
add
daa
or
jae
pop
pop
leave
imul
xchg
sub
push
mov
xor
push
mov
popa
dec
add
add
cltd
rcrb
pop
xchg
test
mov
xchg
mov
stc
mov
and
cmp
inc
aaa
in
subl
and
shlb
enter
inc
dec
fs
fistpll
or
push
mov
iret
data16
push
fdiv
jne
or
adc
loope
icebp
popa
popa
mov
jmp
and
rcrb
add
popf
ss
push
xchg
dec
frstor
loope
stos
cmp
subb
xor
adc
icebp
sbb
inc
fadds
sbb
mov
call
jl
adc
mov
or
imul
js
jo
push
jnp
mov
jne
push
cmc
and
ljmp
sub
push
adc
add
div
push
push
outsb
mov
add
pop
mov
aaa
jo
push
imul
loope
lcall
add
test
int
inc
inc
inc
fwait
clc
lds
lods
mov
mov
pusha
pop
aas
adc
adc
inc
and
imul
pusha
mov
push
orb
and
ds
out
rorb
sahf
inc
jbe
and
xchg
repz
sbb
jne
call
loop
fmull
pop
xchg
nop
jne
dec
push
and
adc
dec
fidivrl
nop
jle
adc
fbstp
sbb
push
aas
js
mov
xor
pop
cmp
or
outsl
pop
pop
sbb
dec
or
add
and
sbb
inc
add
shlb
and
add
xchg
or
push
les
push
add
xor
fstpl
daa
add
fwait
in
stc
pushf
pop
xor
shll
sbb
adc
adc
js
xlat
les
pop
and
test
repz
test
jle
and
fs
dec
fsubr
test
pop
xchg
mov
leave
cmc
xchg
gs
or
out
dec
cmp
cmp
or
pop
leave
fistpll
cmp
test
movsb
push
sub
orl
or
hlt
xor
push
xor
xlat
pop
pushf
or
mov
mov
ficompl
fs
mov
adc
lea
aam
roll
incb
or
sub
push
scas
incl
es
or
jg
imul
jge
xchg
pushf
das
sbb
or
pop
mov
xor
jbe
sbb
adc
xor
pop
test
and
aaa
or
inc
add
xchg
aas
and
add
pop
mov
adcl
add
push
out
inc
sbb
mov
mov
imul
outsl
sbb
aam
dec
in
jbe
les
pop
mov
or
fmuls
inc
fs
xor
loope
into
add
and
clc
movsb
dec
push
stos
or
add
pop
inc
xchg
scas
inc
jnp
scas
and
cmp
sbb
and
hlt
lods
andb
lret
push
ret
les
insl
loopne
les
repnz
rcr
sub
out
cmp
add
inc
mov
lea
sarl
sbb
stc
loopne
clc
mov
jns
call
dec
pop
add
pop
xor
cmc
nop
lcall
sbb
mov
jo
pop
inc
or
and
adc
jb
movsb
loop
mov
es
and
nop
fistl
frstor
mov
inc
push
pusha
mov
add
aam
ds
sbb
pop
loop
sub
pop
xlat
dec
push
daa
add
jecxz
js
mov
adc
insl
sub
sub
adc
test
dec
jne
adc
mov
cmpsb
call
sub
incb
push
sub
cs
push
and
sti
inc
push
add
sbb
popf
mov
lods
add
xchg
adc
add
sub
adc
fmuls
mov
add
sbb
or
xchg
dec
push
and
jge
jmp
push
push
cmp
pop
lret
mov
and
aaa
out
lock
fcom
popl
movsl
xor
fcomps
push
push
andl
mov
dec
xchg
sbb
inc
inc
loopne
and
inc
mov
es
addr16
or
or
or
ja
pop
and
orb
aam
inc
push
and
jmp
test
xor
sbb
add
subl
mov
push
dec
xchg
sbb
sbb
ja
and
dec
lret
rorl
sbb
fiaddl
push
sbb
push
dec
or
cmp
cmp
push
aas
js
or
pop
adc
push
mov
push
mov
bound
js
jmp
mov
test
loopne
dec
xor
ret
sub
pop
sub
das
fsts
jae
mov
cmp
xlat
dec
xor
xor
sbb
and
add
jge
or
ss
inc
jle
push
jbe
cwtl
jne
and
rorb
fs
cmp
sbb
and
push
xorl
adc
adc
cmp
jecxz
mov
dec
aas
adc
add
add
es
andb
pop
inc
ret
mov
sub
pop
and
cmp
and
mov
sub
scas
mov
sub
add
setb
dec
lock
lcall
sub
cmp
jge
mov
inc
cmp
sub
std
xchg
jl
or
sbb
push
xchg
jg
out
jnp
clc
idivb
arpl
clc
and
sub
inc
loope
ret
add
ret
inc
sbb
or
test
inc
pushw
mov
add
sbb
inc
dec
ror
pop
and
rorb
and
enter
inc
sbb
loopne
movsb
mov
lret
xchg
mov
test
adc
icebp
sbb
inc
inc
fisubrs
and
sub
adc
cmp
addr16
pop
add
in
jmp
xchg
add
rcrl
xchg
add
sub
and
daa
sbb
push
sbb
aas
push
enter
int3
push
jno
cmp
pop
mov
mov
adc
or
pop
dec
adc
adc
xor
sbb
jecxz
push
mov
inc
cli
mov
cmc
jle
mov
add
xor
sbb
push
push
cmp
sub
sarl
scas
xchg
and
or
push
and
add
daa
push
in
adc
les
mov
jno
rclb
push
int
mov
jle
or
xor
pop
jb
ljmp
inc
mov
repnz
hlt
nop
daa
mov
mov
jecxz
xchg
movsl
mov
daa
pop
lahf
je
out
addl
add
sar
pop
rclb
xchg
cmpl
xchg
mov
rcr
mov
and
nop
in
int
push
je
and
mov
xchg
pop
jmp
pop
inc
shrb
jl
sub
test
rorb
mov
push
jmp
inc
loopne
lcall
mov
inc
add
adc
test
pop
and
jp
xor
je
test
xor
dec
pop
and
adcb
lock
es
test
or
aam
ficoml
sbb
testl
push
cmp
icebp
das
movsb
loopne
insb
in
in
cmp
shll
and
imul
ss
push
adc
push
and
sbb
fstpt
add
inc
test
or
dec
std
push
xor
jbe
sbb
xor
rorb
xchg
orb
outsl
rorl
pop
and
add
inc
popa
mov
imul
insl
loopne
mov
fiaddl
inc
enter
inc
int3
xchg
jmp
pop
jle
pop
add
push
inc
push
push
xor
jge
data16
lods
and
sbb
sub
jb
test
and
inc
or
mov
cmp
repz
and
ds
cmp
xchg
fisttpl
cwtl
lock
sti
sar
enter
or
cli
in
clc
push
sub
and
xchg
popa
dec
arpl
push
enter
fdivrs
sbb
sub
add
and
addl
ss
addr16
xchg
nop
mov
mov
pop
push
orb
inc
add
lds
or
mov
outsb
dec
imul
fstpt
sbb
or
jns
and
push
and
or
stc
inc
sub
or
sbb
add
add
adc
dec
movb
or
push
adc
repnz
gs
adc
pop
inc
mov
shl
flds
test
pop
out
sub
add
mov
inc
or
sbb
sub
mov
jecxz
aas
jle
xchg
pop
mov
push
inc
cwtl
or
frstor
push
sbb
fmul
inc
pop
mov
pop
inc
or
loope
imul
inc
sbb
mov
sub
inc
mov
cwtl
inc
enter
sub
adc
add
push
aaa
add
jo
jo
and
and
dec
or
pop
jb
rolb
fistps
cld
shlb
les
cwtl
xchg
rclb
add
test
inc
jmp
das
mov
inc
pop
ja
in
hlt
add
cld
aas
inc
pop
and
cmp
cmp
seto
in
sbb
jno
imul
jecxz
add
xchg
or
stos
loop
adc
cwtl
ret
cmpsb
and
mov
push
xchg
jo
mov
xchg
xor
fnstcw
inc
and
jb
adc
insb
loopne
jl
and
mov
sbb
enter
xchg
test
nop
push
mov
jbe
jle
sub
gs
inc
push
push
ss
sahf
or
cmpsb
mov
add
shlb
mov
add
push
int3
adc
and
stos
pop
arpl
xchg
pop
or
xchg
mov
add
add
fs
or
and
pop
dec
sub
in
add
mov
mov
sahf
xor
jns
adc
push
dec
adc
bound
ds
xchg
mov
leave
sub
pusha
add
sar
lock
or
pop
jmp
cld
sti
pop
push
xchg
icebp
pusha
dec
fildll
pop
pop
arpl
pop
sahf
fistl
andb
push
ljmp
fcompl
dec
jge
pop
cmc
adc
call
adc
or
sbb
fcomps
aaa
out
pop
fs
fs
lcall
loop
das
daa
cmp
jne
aad
cmp
movb
mov
mov
and
popf
mov
cmp
das
popa
and
push
push
sbbb
xchg
push
dec
clc
lods
add
or
lock
enter
mov
ret
push
adcl
inc
mov
xor
rolb
movsb
popf
rol
lea
outsl
xor
pop
pop
mov
mov
sub
rorb
ja
mov
nop
ret
pop
jae
aaa
movl
mov
je
das
pop
jmp
cld
adc
rcr
divl
scas
and
lret
jo
negb
loop
and
jecxz
test
xor
pushf
inc
adc
and
sub
mov
cmpl
mov
sahf
or
fsts
pusha
sub
xchg
push
fiadds
jecxz
sub
inc
jp
and
add
xor
shl
ds
sbb
fs
pop
mov
movsb
sbb
push
mov
popa
or
scas
rol
lahf
shrb
inc
push
test
and
xor
add
aam
dec
and
dec
dec
addr16
movsl
in
popa
jecxz
pop
cmp
adc
fs
shlb
mov
imul
adc
or
outsl
mov
hlt
add
and
mov
call
push
adc
jmp
adc
icebp
inc
inc
es
aas
push
lods
xor
das
inc
add
sub
inc
sub
sbb
pop
sub
mov
cmp
sub
mov
imul
mov
sahf
cmp
stos
mov
pop
xor
lods
movsb
fildl
fmull
sbb
push
sub
dec
or
push
xor
sbb
push
in
dec
sbb
cmc
xchg
sahf
mov
clc
rcrb
imull
shll
xchg
jno
push
outsl
orb
adc
outsb
mov
jg
push
inc
mov
lods
popa
inc
inc
adc
sub
clc
lahf
ds
adc
shll
adc
adc
pop
sub
mov
add
int
in
pop
xchg
xor
add
and
sbb
and
pusha
jo
cmp
into
push
inc
and
rclb
push
inc
mov
lock
divl
push
push
inc
sub
or
and
fimull
add
mov
inc
scas
inc
and
dec
popa
jns
pop
test
push
jo
adc
cmp
adc
clc
xchg
inc
mov
or
pop
mov
out
fs
add
sbb
fstpl
jbe
xchg
dec
pop
pop
push
xor
xor
xchg
hlt
mov
mov
pop
push
adc
rcr
xor
pop
shrb
sbb
in
adc
and
jmp
stos
arpl
shlb
xchg
inc
clc
in
mov
mov
inc
or
daa
jecxz
aaa
jmp
clc
clc
jne
dec
sub
or
xchg
sbb
lock
add
popf
mov
cmp
mov
push
das
in
lret
lods
jo
jne
repz
add
or
or
sub
mov
je
repz
daa
cld
and
xchg
int3
pop
and
rorl
add
sti
add
paddw
xor
fsubl
pop
xor
add
and
cmpsl
and
je
xchg
xor
rol
mov
mov
dec
xor
sub
aad
push
mov
jo
negb
aam
pop
sti
add
inc
push
or
ret
xchg
call
popl
xchg
pop
or
outsb
push
dec
push
adc
add
and
lcall
filds
push
push
lret
into
sarb
adc
push
pop
mov
mov
sahf
push
mov
jnp
lods
sbb
jnp
addb
mov
es
out
ret
dec
jne
rolb
sbb
mov
mov
push
jae
mov
rcll
sub
xchg
push
fadds
mov
push
inc
rolb
pusha
cmp
test
shlb
and
sub
dec
sub
ja
fistpl
gs
arpl
arpl
test
adc
cmp
arpl
movsb
jne
out
or
pop
cld
je
jg
push
pusha
pop
jp
inc
ret
xor
addr16
jle
aaa
or
imul
cmpsb
iret
jo
inc
push
adc
jns
jecxz
insl
xchg
aam
push
pop
jp
pop
cmpsl
and
popa
and
jo
mov
and
dec
pop
ret
test
inc
push
out
add
mov
mov
push
iret
loopne
pop
or
push
pusha
mov
mov
popa
movsb
sub
lret
lods
inc
xchg
pusha
jl
mov
jmp
ss
sti
fidivrs
add
es
push
dec
adc
sub
movsl
sbb
aaa
test
adc
and
jecxz
loop
cmovae
xor
movhps
gs
mov
xchg
xchg
xor
loop
mov
push
unpckhps
movsb
lret
hlt
sbb
mov
fdivs
fbstp
loopne
add
mov
fildl
flds
pop
adc
and
pop
cs
push
mov
sbb
push
inc
sbb
add
fistl
pop
pushf
xchg
inc
cmp
sub
xor
mov
mov
test
cmp
inc
jb
inc
sub
aas
cmpsl
jb
pop
enter
xchg
insl
or
cltd
jg
sbb
xor
rcr
repnz
faddl
lcall
iret
daa
imul
fisubl
xor
sbb
mov
push
push
fimuls
adc
pop
jmp
inc
cmp
and
jle
stos
pusha
cwtl
cwtl
fisttpl
addl
mov
test
add
sbb
roll
call
xchg
push
cmp
add
sub
cmp
adc
and
or
sub
sub
or
in
add
ja
gs
sahf
jno
add
loop
out
sub
add
movsl
or
cmp
mov
int3
mov
sub
dec
movsb
adc
imul
mov
xor
dec
mov
adc
ja
jg
or
adc
add
add
add
lahf
sbb
sub
mov
dec
enter
adc
cmc
ret
scas
data16
insl
outsl
dec
iret
or
lcall
sbb
jne
pop
cs
cmpl
push
adc
inc
push
adc
clc
es
ja
daa
mov
xor
inc
sub
mov
push
xor
sub
push
aam
jmp
scas
jg
add
jnp
ljmp
mov
mov
fdivs
cmp
dec
jns
push
push
mov
pop
cmpsl
mov
pop
cwtl
js
mov
mov
pop
stc
fmuls
adc
jo
outsl
cmp
lods
sbb
jecxz
loopne
ret
and
add
inc
inc
add
sub
inc
add
inc
push
loopne
adc
sub
pop
dec
sub
and
or
sub
dec
push
ficompl
insb
mov
mov
hlt
xchg
xchg
cs
inc
sub
add
and
incb
inc
adc
lds
sbb
cmp
push
and
aam
mov
push
into
add
setl
push
sbb
sti
icebp
add
xor
cmp
mov
or
loopne
subb
xchg
stc
xchg
jmp
leave
jne
pop
xchg
js
sbb
movsb
cmpsb
les
sbb
or
pop
adc
notl
inc
lods
jne
push
stos
fs
daa
dec
pop
pushf
sahf
popa
shll
adc
pop
orl
lea
ss
lods
pop
cmp
add
imul
sub
xor
xor
add
imul
dec
xchg
and
sbbb
test
dec
push
sahf
cmp
in
jo
shl
idivb
push
in
or
push
insb
sahf
add
dec
or
jb
ret
pop
push
fmul
movsb
cli
mov
add
xchg
cmp
sbb
or
jge
ret
xor
lcall
jmp
outsl
rclb
jmp
shll
pop
adc
imul
in
sbb
xor
arpl
orb
out
xor
pop
cmp
xor
mov
sbbl
jge
call
gs
jo
loopne
push
cltd
shll
sub
push
adc
aaa
gs
inc
push
mov
ficoms
in
push
imul
outsb
xlat
push
repz
and
fists
mov
push
inc
or
fdivrs
and
fiadds
dec
add
popa
add
daa
roll
int3
andb
jge
mov
mov
sbb
mov
jl
outsb
je
xorb
push
ficoms
push
cmp
inc
dec
std
add
sub
inc
sub
adcl
push
sbb
add
fcmovb
dec
rolb
inc
dec
sarl
or
adc
mov
outsb
nop
ja
add
push
mov
lea
arpl
push
mov
loope
mov
rorl
dec
imull
cmp
add
mov
sbb
inc
adc
push
fs
push
adc
jg
lea
lea
adc
aam
sbb
push
inc
sbb
mov
inc
adc
lcall
or
dec
adc
fisttps
inc
pop
and
scas
push
jne
inc
je
sub
inc
leave
sahf
adc
cwtl
scas
mov
cmpsl
inc
imul
enter
addr16
jmp
shll
data16
push
or
cmp
lods
pop
add
ret
sub
adc
and
xchg
ret
jns
and
dec
adc
add
pop
rolb
pop
inc
lahf
jl
xor
imul
lds
push
adc
push
sti
cmp
into
pop
jl
push
addr16
cmpsl
test
sub
cli
aaa
lcall
push
jnp
sub
dec
les
or
sub
push
cltd
push
dec
pop
js
dec
in
pop
test
and
lock
stos
jae
sti
cmp
movsb
or
mov
inc
das
pop
filds
push
cmp
mov
dec
cs
dec
push
jp
aaa
inc
jae
daa
adc
or
out
or
aaa
mov
aaa
push
mov
jae
inc
jg
push
mov
fwait
outsl
and
fidivrs
roll
jne
add
int
nop
push
aas
cmpsl
xchg
test
push
mov
fwait
dec
fistps
rcll
bound
inc
pop
or
or
lods
fstp
mov
dec
bound
add
hlt
dec
mov
cmc
sbb
push
push
cmp
fsubs
and
add
dec
sarl
add
mov
add
xor
test
lahf
rcrb
push
mov
xor
mov
andps
insl
mov
push
int3
sbb
xor
adc
or
out
push
xor
or
inc
cmpsl
dec
mov
push
add
sub
or
inc
dec
dec
push
fsubs
lret
pop
rolb
fcoml
sbb
imul
pop
jmp
pop
sub
insb
testl
sbb
push
aas
cld
dec
repnz
loope
fnstenv
hlt
clc
cmpsb
push
xchg
cmp
xor
xor
or
pop
and
aas
mov
add
push
fs
push
inc
loopne
pop
xchg
outsl
xchg
ret
mov
ror
les
xor
lcall
loopne
sbb
jbe
sub
lock
mov
cld
jecxz
add
add
sub
inc
mov
call
xor
inc
hlt
enter
fmuls
jp
mov
lods
filds
rclb
outsl
mov
sub
fsubs
test
mov
add
iret
push
dec
xor
xchg
sbb
sbb
mov
loopne
movsb
mov
xor
xchg
or
push
fcoms
pop
mov
add
adcb
push
sbbb
or
add
stos
lahf
mov
cltd
pop
jg
ljmp
sbb
sbb
push
popa
push
ret
jno
out
inc
push
addb
lds
in
rorb
js
cmp
mov
fstl
xchg
int
xor
pop
add
jp
xchg
ds
xchg
bound
dec
pop
or
pop
filds
popf
test
xchg
inc
inc
jnp
xchg
dec
rorl
test
out
iret
movsb
in
addl
inc
sub
mov
insb
xlat
push
xchg
inc
or
xchg
sub
sub
xchg
xchg
push
mov
dec
and
lahf
scas
dec
dec
or
mov
adc
xor
jmp
je
add
jmp
push
cmp
ja
je
enter
pop
xor
cwtl
xchg
sbb
adc
and
nop
shll
aas
cmp
xlat
addb
add
push
lret
sub
aaa
add
or
sbb
outsl
bound
fnstcw
aas
add
cmp
or
and
jl
adcb
adc
rolb
jo
fsubl
pop
cmpsl
pop
xchg
push
fstpt
shll
dec
lock
push
aas
adc
dec
add
clc
nop
idivb
xchg
push
outsb
test
mov
popa
push
or
cli
fdivs
jnp
daa
pop
xchg
jp
mov
cmpsl
stc
and
sbb
inc
out
adc
or
dec
inc
sub
scas
ret
adc
lcall
inc
imul
push
sahf
dec
add
push
xor
inc
jb
dec
or
xchg
jno
pushf
dec
mov
push
sbb
jl
fcomp
xchg
or
jmp
movsl
testb
pushf
push
jmp
sbb
cs
sub
jo
lret
rolb
add
and
mov
inc
dec
sub
aam
das
adc
push
jae
push
adc
in
rorl
sbb
scas
das
loopne
xchg
and
xchg
push
or
movsl
or
push
push
sub
nop
dec
dec
lret
imul
mov
sub
mov
daa
or
shlb
xor
jle
dec
out
scas
int3
bound
mov
mov
add
xor
popl
dec
inc
sub
call
mov
inc
loop
push
imul
in
xor
pop
shrb
adc
xor
pop
ret
push
clc
pop
test
dec
dec
shll
jns
xor
test
jb
adc
cmp
out
inc
rclb
shrb
jno
jne
test
xchg
popf
fadd
sub
arpl
pusha
sbb
xor
in
inc
or
mov
adc
pop
rorb
addb
bound
sub
les
rorb
jb
repz
fcoms
sbb
add
sub
shll
in
jge
sub
mov
aam
pop
inc
and
add
add
xor
lea
jmp
pop
pop
or
inc
ret
or
push
and
xchg
test
mov
loope
mov
out
push
int3
adc
inc
push
cltd
xchg
ret
mov
movsb
in
ss
adc
dec
hlt
xchg
push
push
add
or
mov
sbb
pop
jp
imul
add
insl
and
mov
pop
add
pop
jbe
jne
xchg
inc
cmpsb
jbe
push
inc
push
sub
sub
and
or
mov
rol
xchg
pop
lahf
out
add
rcl
pop
push
movsb
ja
sbb
mov
cmpsl
dec
mov
call
lcall
clc
mov
add
adc
sbb
mov
dec
insl
push
xor
hlt
sahf
mov
mov
mov
cmp
mov
mov
push
dec
stos
mov
cmpsl
lcall
es
push
test
cwtl
add
sbb
push
push
mov
lea
sbb
imul
movsb
mov
mov
mov
and
les
dec
data16
add
cmp
jo
or
call
es
sub
or
add
pop
jmp
cmpsb
cmpsl
pop
jmp
sbb
jle
movups
ffree
fiaddl
sahf
insl
cwtl
mov
ficoml
sbb
cli
insb
insl
clc
xchg
add
fiadds
adc
xor
imul
jnp
mov
push
cmp
outsb
xor
push
loopne
std
xor
gs
jmp
into
pusha
push
jbe
dec
jle
imul
push
and
sbb
inc
or
and
push
test
pop
mov
mov
push
fbld
adc
adc
push
fwait
lds
imul
call
xor
sbb
in
sahf
or
shlb
add
mov
or
test
push
dec
sbb
inc
xchg
popa
or
rcrb
xlat
push
test
xchg
mov
mov
cwtl
and
pop
pop
sub
xchg
add
sarb
lea
or
and
xor
adc
xor
xlat
or
xchg
sahf
xchg
add
mov
pushf
pusha
xchg
mov
scas
inc
sbb
pop
jo
flds
loopne
push
mov
push
dec
push
jo
or
stos
and
inc
xchg
push
push
push
inc
shll
lret
cmpsb
xor
andl
and
pop
mov
push
or
ret
push
adc
sbb
or
add
outsl
sub
adc
mov
pop
lret
jo
inc
adc
inc
or
loop
subl
imul
and
inc
arpl
sbb
cwtl
sbb
push
sub
and
fistpl
and
xor
xor
cmp
outsl
and
sbbl
icebp
pushf
pusha
mov
addb
popa
mov
lret
push
xlat
int3
addr16
cld
xlat
movb
outsb
mov
popa
daa
xchg
pop
dec
push
mov
into
lock
mov
icebp
cmp
arpl
and
add
lods
mov
push
sar
and
xlat
sahf
xchg
sub
and
push
and
xchg
inc
sub
lock
sbb
mov
pusha
movsl
sub
and
lock
fmuls
jle
adc
jns
cmc
leave
lret
call
cmp
lret
shlb
mov
jle
mov
stos
mov
push
lcall
add
dec
mov
sbb
sub
cpuid
loope
fisttpl
popa
inc
nop
int3
push
push
add
xchg
popa
jg
adc
mov
in
sbb
xchg
int3
inc
pushf
int3
bound
movsb
cltd
fcomp
dec
jo
and
je
add
cmp
xor
push
jbe
dec
inc
lds
or
sbb
or
leave
add
fs
int
cltd
int
add
dec
adc
jo
pushl
inc
cs
in
xor
enter
into
rcl
mov
push
lock
adc
or
test
lret
push
jmp
lcall
imul
int3
int3
jne
outsb
and
xchg
adc
add
dec
test
mov
cmp
sbb
xor
adc
sbb
bound
cltd
sti
sbb
and
inc
fwait
xchg
movsb
or
out
jge
imul
fcoml
out
mov
fwait
and
nop
cmc
xchg
sahf
loopne
push
or
sbb
mov
shrl
adc
adc
sbb
adc
inc
rolb
dec
dec
dec
repnz
mov
out
dec
imul
push
sarl
sbb
mov
xor
cmp
data16
add
daa
sbb
add
and
loope
and
xor
cli
xlat
dec
movsb
jns
int3
inc
fwait
clc
sub
sbb
int3
fcmovnbe
sub
or
xlat
icebp
pop
out
add
sub
mov
pop
mov
xlat
aas
ss
inc
jb
mov
add
inc
mov
mov
mov
cmp
and
pop
cmpl
mov
xchg
popl
sbb
pop
out
in
or
push
sbb
fsts
sahf
adc
rcrb
cmp
mov
xlat
and
push
sub
popa
cmp
gs
add
mov
sub
and
jp
jbe
cwtl
pop
inc
add
cs
ret
lea
mov
mov
sub
mov
inc
push
ret
inc
rorl
push
jnp
dec
sbb
xor
sbb
outsl
ret
mov
sbb
inc
sbb
push
cmpsl
add
xchg
decl
or
xchg
rolb
inc
mov
lret
imul
cmp
adc
adc
jp
dec
xchg
dec
adcb
ja
xchg
add
inc
add
push
push
fwait
xchg
inc
insb
gs
and
pop
mov
add
add
mov
push
push
pop
roll
or
dec
ss
jb
add
add
mov
cmpl
push
jno
imul
or
xor
test
subb
push
xor
add
std
push
push
rcrb
je
jae
pop
sbb
cli
bound
or
adc
imul
out
sub
pop
aaa
clc
gs
mov
mov
ret
push
or
mov
repnz
push
je
sub
in
bound
fwait
or
and
adc
push
ss
cmp
nop
ss
and
push
adc
bswap
adc
adc
fcomp
or
iret
movsl
sub
and
outsb
arpl
and
sbb
ljmp
lcall
cmp
ss
or
pop
xor
fistps
das
fistpl
xorl
mov
inc
lock
xor
mov
insl
mov
sub
jbe
and
pop
mov
in
sbb
ret
dec
jb
lods
pop
adc
outsl
mov
mov
and
mov
sub
std
movsl
xchg
imul
ret
or
mov
dec
mov
xchg
mov
lahf
rorl
xor
mov
sub
or
dec
in
dec
aaa
nop
xor
add
sub
or
cmp
mov
mov
add
movsl
and
insl
pusha
xor
divl
sub
dec
push
pop
pop
sbb
or
das
pop
push
pusha
or
xchg
xlat
or
add
std
or
push
mov
inc
or
add
adc
or
insl
dec
cmp
ficoml
lods
lods
and
push
dec
inc
outsl
dec
mov
roll
lock
lods
orb
and
shll
pop
fmuls
sar
popf
and
push
jb
and
add
aaa
lods
adc
mov
insl
sbb
inc
push
in
xchg
fmul
push
popa
xor
sub
sub
and
xorb
and
jnp
insl
sbb
add
cmp
add
rorl
inc
ss
and
or
insl
sbb
mov
sbb
bndstx
popa
jo
mov
orb
inc
outsb
or
sbb
push
sbb
movsl
out
in
fiaddl
or
xor
xor
mov
xor
daa
sbb
adcl
outsb
or
sbb
test
enter
movsl
adc
push
xor
cmpsl
and
std
or
insb
mov
sub
and
push
mov
xlat
sbb
pop
or
lock
and
cs
and
daa
push
fldcw
fldenv
test
rcl
push
insl
test
push
ja
jbe
orb
js
out
fidivl
ja
cs
jo
xor
add
mov
inc
xchg
movsb
ret
or
cmp
mov
mull
mov
xchg
nop
mov
dec
roll
mov
inc
dec
das
mov
mov
int
xor
add
inc
gs
icebp
sub
and
addb
sub
lret
nop
enter
dec
pop
frstor
jo
aaa
les
cwtl
insl
daa
addr16
add
sbb
jbe
fistl
and
and
mov
outsl
and
ss
mov
aas
or
insb
jmp
dec
jbe
outsb
or
cmp
xor
jns
fimuls
mov
outsb
cwtl
xorb
jo
ja
cmp
or
xchg
dec
imul
dec
and
jno
xor
mov
pop
in
xchg
mov
or
mov
fnstenv
jp
or
outsb
movhps
pop
insl
imul
insb
add
mov
and
jp
popa
daa
test
xchg
mov
xor
cmp
xchg
pop
add
cmp
mov
jne
imul
push
int3
insl
out
loopne
ja
push
dec
add
xchg
js
push
jb
nopl
mov
jb
imul
or
fiadds
loop
or
sbb
sub
sbb
and
fsubrs
mov
adc
mov
and
and
adc
sbb
jnp
adc
xchg
adc
adc
jle
ja
bound
cmpsb
popa
imul
xor
loopne
xorl
lcall
pop
xor
or
sub
mov
out
and
sub
fcoms
sub
xor
shlb
jno
sub
cmc
sub
push
sbb
and
adc
pusha
sub
in
push
and
mov
cmpsl
adcl
inc
push
pop
cmpsl
and
pop
sub
das
xor
sub
cli
daa
shll
mov
push
mov
mov
es
add
and
adc
scas
and
das
outsl
inc
inc
push
loopne
mov
mov
insb
sbb
dec
and
daa
fdivrs
or
mov
movsl
push
lahf
test
insl
lahf
and
aas
jbe
and
sbb
pushf
std
je
cmpsl
mov
daa
jae
mull
xor
fsub
cmpsl
push
adc
ficoms
aam
push
je
cmpsl
xchg
sbb
leave
and
jae
jae
and
dec
jb
pop
jae
jae
pop
enter
enter
jae
jae
xchg
xchg
out
adc
push
adc
ds
sbb
adc
xlat
or
and
neg
mov
out
popa
insl
jae
pop
push
pop
mov
orl
stos
aad
fisubl
pushf
das
sub
pop
mov
or
imul
sub
dec
mov
jo
push
adc
jae
sub
scas
daa
leave
sbb
pop
lahf
sti
imul
mov
insb
call
add
add
sbb
mov
ret
ss
push
mov
or
fnsave
iret
or
iret
cmpsl
adc
sub
jle
and
pop
testl
jge
sbb
xchg
mov
cmp
stos
mov
adc
or
add
hlt
std
mov
pop
push
rorl
jecxz
xor
xor
adc
push
dec
sub
lea
pop
sub
add
pop
add
icebp
fldt
fadds
icebp
xor
pop
add
inc
pusha
pop
lds
push
or
jmp
pop
sbb
out
rcrl
mov
bound
push
out
das
icebp
cmp
push
mov
sbb
shll
lret
sbb
adc
repnz
adc
pusha
mov
sbb
pop
adc
popa
sub
or
mov
mov
cmp
lods
dec
and
pop
xlat
fs
call
mov
das
sti
in
fisubrl
xor
push
dec
or
add
mov
sub
sbb
dec
enter
adc
insb
in
push
push
jmp
pop
sbb
add
cmp
ss
test
std
pusha
push
adc
mov
outsb
fmuls
and
jecxz
jbe
das
xor
add
cmp
mov
mov
test
orl
movsl
inc
sub
and
pop
adcl
pop
sbb
mov
xor
sbb
pop
les
sbbb
adc
pop
lea
pop
adc
adc
mov
sub
or
cmp
dec
and
sbb
push
cmp
sbb
testb
add
sub
outsl
insl
and
mov
daa
daa
adc
or
sub
add
or
pop
add
and
mov
mov
test
mov
push
lods
push
jl
icebp
je
pop
inc
js
test
adc
adc
adc
push
pop
mov
jg
ss
lods
jae
ja
outsl
movsl
or
aaa
cmp
adc
add
adc
mov
jns
jbe
jo
adc
rol
cltd
xchg
or
mov
add
daa
xor
cltd
clc
nop
dec
or
pop
fmul
cmp
xchg
adcl
mov
push
insb
pop
and
adc
adc
leave
and
jne
add
insl
imul
mov
outsb
mov
push
sub
fimull
test
pusha
pop
fcmovbe
negl
mov
mov
insl
sbb
jne
insl
insl
mov
lea
daa
mov
adc
mov
in
inc
and
pop
cmpsl
inc
sbb
mov
pop
push
daa
adc
mov
and
or
adc
and
sarb
or
rorb
and
adcl
mov
xor
pusha
sub
and
jl
push
dec
imul
mov
or
pop
das
fldenv
push
xchg
mov
or
or
dec
pusha
xchg
fcmovbe
das
sbb
inc
ja
inc
insb
jns
push
sbb
sbb
inc
shrb
push
je
pmaxsw
sub
jnp
jo
insl
sbb
sbb
ja
mov
or
push
ja
push
sbb
adc
dec
add
fsubrs
and
fcmovb
or
arpl
sub
shrl
jnp
mov
cmp
adc
jge
cmp
fisubrl
mov
mov
insl
push
xor
leave
mov
and
subl
push
xor
lds
ret
xchg
int3
pop
fwait
pop
cmp
inc
mov
and
lock
adc
pop
and
dec
ja
push
sub
fwait
push
adc
mov
sbb
push
adc
push
pop
xchg
and
mov
jmp
clc
mov
and
add
mov
pusha
notb
push
dec
inc
dec
xchg
push
mov
cwtl
dec
arpl
sub
fistl
rorl
rorl
and
pop
pusha
test
dec
rcl
inc
shll
adc
fildl
xor
cltd
inc
mov
and
jge
xchg
adc
xchg
rcl
mov
adc
pop
sub
cmpsl
adc
in
mov
mov
stos
lds
rcll
outsl
fiaddl
sub
mov
frstor
mov
mov
lds
push
scas
pop
sub
fbstp
mov
stos
pop
sub
jno
adcl
lods
inc
inc
ret
sbb
mov
sub
test
sub
add
nop
xchg
cmp
and
sub
inc
and
ret
sub
mov
addl
or
sub
and
nop
inc
and
and
and
fmuls
and
pop
lea
add
pop
or
les
inc
or
dec
sub
add
xchg
xor
cmc
cmp
sbb
xchg
pop
aas
sbb
les
adc
ja
inc
push
loopne
bound
dec
mov
out
inc
lcall
add
xor
dec
jo,pn
adc
xchg
ret
push
xchg
scas
repnz
xor
inc
push
adc
add
cmp
lods
xor
xor
int3
es
or
fldl
ficomps
xor
xor
push
push
shrb
add
rorb
je
ret
in
call
push
es
addb
lcall
sub
sbb
shl
icebp
jnp
xor
mov
xor
sub
mov
aaa
mov
inc
xor
dec
mov
je
adc
out
mov
dec
outsb
pop
movsb
insl
psllq
xchg
daa
and
sbb
and
push
jns
repnz
sub
mov
cmp
xchg
loope
or
inc
sahf
pushf
lds
or
daa
and
cmc
inc
or
daa
and
leave
leave
enter
mov
in
push
test
sbb
xor
xor
xchg
mov
lock
orb
sbb
outsb
call
test
cmpl
mov
xchg
inc
jo
fsubrs
lcall
xchg
add
popa
pop
dec
jl
rolb
sub
push
lret
insl
pop
add
push
and
sub
cmpsb
dec
dec
pop
inc
pop
pop
scas
test
and
add
sub
data16
loope
add
add
add
pop
ja
xchg
test
dec
jno
push
scas
pusha
lret
add
out
loopne
cmp
insl
stos
imul
adc
fmuls
and
bound
sbb
sarb
adc
test
imul
insl
pushf
dec
call
stc
add
insl
insb
imul
cmp
test
xor
inc
adc
push
mov
movsb
shl
mov
push
xor
xchg
in
jbe
or
xchg
or
shll
pop
inc
out
dec
push
das
mov
pop
nop
add
enter
push
subb
inc
mov
popf
mov
push
add
sub
add
xchg
mov
dec
data16
shll
test
stc
in
nop
pop
ret
test
add
push
dec
push
or
test
add
addb
pop
dec
jo
and
nop
roll
adc
dec
push
dec
das
cmpsl
add
nop
xlat
pop
fadds
mov
cmp
fadd
frstor
cmpsl
add
add
push
test
mov
loopne
mov
inc
loope
sbbb
shlb
push
push
add
ds
std
movl
cmp
cmpsb
shlb
dec
add
inc
icebp
jl
or
cmc
and
pop
addb
adc
cld
cltd
adc
adcl
outsl
jnp
sbbb
cmc
js
and
js
xor
dec
js
adc
mov
adc
les
jge
push
inc
js
xchg
jg
sub
sbb
sbb
dec
in
sbb
push
loop
pop
add
nop
cmpl
add
xchg
or
push
cmc
das
inc
pop
loop
pop
push
push
xor
cltd
lcall
dec
or
add
xchg
cs
sub
es
jo
and
aaa
mov
repz
test
notb
rolb
xor
sub
dec
out
enter
push
arpl
and
lods
sbb
imul
out
jnp
outsl
pop
js
push
jl
jnp
je
es
jb
hlt
loopne
es
popa
mov
lea
insb
jmp
jbe
or
push
es
xchg
int
dec
jo
pop
jb
addr16
inc
add
mov
inc
lcall
adcb
je
insb
fists
test
insl
fistps
add
sbb
fisttpl
scas
and
outsl
daa
mov
cmp
pop
pop
ja
push
dec
pop
jb
arpl
mov
cmpsb
xor
mov
pop
das
add
dec
adc
xor
ja
xchg
mov
or
lods
add
xor
push
and
or
cmp
xchg
mov
xchg
and
cltd
lret
push
mov
inc
in
jmp
je
fs
sub
arpl
mov
add
and
inc
das
xchg
push
decb
mov
mov
mov
dec
lea
xchg
add
xchg
xor
fcoms
inc
test
dec
aaa
dec
mov
add
or
loope
jno
dec
and
pop
cmpb
adc
clc
cmpsb
jl
or
mov
push
mov
or
nop
decl
mov
icebp
dec
cltd
inc
xchg
mov
jl
jb
and
inc
push
mov
sbb
lahf
mov
mov
mov
jle
outsb
mov
jne
mov
inc
pop
aaa
daa
or
daa
and
lret
xchg
fcomip
je
loop
lods
jne
sbb
jle
aam
fnstenv
addl
int3
call
pop
xchg
xchg
imul
movsb
mov
daa
or
or
les
and
mov
or
push
out
loope
inc
addr16
es
pop
rolb
pop
mov
int
inc
cmp
dec
jmp
ret
inc
push
andl
sbb
pop
mov
ret
adc
add
push
sub
sbb
or
sbb
push
pop
push
or
sub
inc
mov
jbe
inc
fcoml
ja
push
andb
jbe
or
sahf
iret
lcall
iret
jnp
es
xor
push
out
add
push
cmp
fistpll
add
xor
add
xor
and
lret
push
add
bndldx
xchg
iret
cmp
fadds
jbe
jns
xchg
xchg
xchg
mov
jb
sub
pop
add
or
test
sbb
push
push
xchg
inc
scas
pusha
lea
int
pusha
mov
pop
push
ja
into
or
jb
fbld
clc
inc
add
iret
push
add
pop
or
or
repz
or
or
or
or
cmp
repz
adc
repz
sbb
sbb
pop
mov
iret
sbb
push
pop
and
and
and
test
sbb
iret
repz
sbb
iret
repz
xchg
mov
iret
repz
out
or
sbb
jns
out
cmp
pop
outsl
sahf
out
sahf
adcb
mov
add
adc
push
inc
icebp
jns
sub
dec
push
sbb
xchg
addr16
xlat
and
or
fimull
mov
pop
adc
dec
gs
push
push
or
push
mov
or
cs
and
and
sub
xchg
lret
sub
mov
adc
cs
cmp
dec
sub
xchg
lret
pop
dec
sbb
dec
in
push
sbb
push
mov
repnz
ja
push
nop
lret
popa
imul
dec
and
fs
and
adcl
and
inc
pop
test
aas
pusha
popl
cmc
je
insl
ret
mov
repz
fcomp
xor
into
scas
push
ret
movsl
mov
or
push
aaa
mov
mov
popa
or
pop
push
push
clc
push
adc
and
aam
pop
fdivr
inc
push
das
jecxz
push
sub
mov
mov
movsl
int3
mov
mov
jl
jnp
call
rcrl
xchg
fdivr
cmp
mov
sti
dec
int3
jmp
xorb
push
push
loopne
or
aad
mov
pop
push
cmpsb
ds
clts
push
mov
mov
mov
ja
inc
xchg
mov
sub
sbb
sbb
rcl
lods
es
pushf
and
rcrl
mov
filds
adcb
mov
inc
shlb
mov
inc
jecxz
nop
jo
jmp
shr
push
add
push
sbb
pusha
fidivs
push
cmp
mov
jo
cmpsl
sahf
sub
add
insl
ret
mov
idivl
add
movsb
xchg
or
inc
es
pop
pop
xor
add
es
jno
adc
pop
lods
dec
fistpll
pop
pop
sar
mov
movsb
xchg
ja
adc
dec
or
add
ljmp
pop
cmp
adc
andl
dec
fists
jmp
cmpsl
adc
pop
fs
inc
or
push
lcall
int
adc
push
xor
push
dec
shlb
or
je
push
imul
imul
scas
push
mov
icebp
imul
pushf
sub
jb
xlat
and
movsl
adc
sbb
sbb
loopne
fs
add
popa
jo
lea
sbb
call
cmp
dec
std
ss
insb
jb
fldenv
xor
adc
or
and
insb
jo
loopne
loope
inc
dec
jae
add
jnp
sahf
mov
xor
jae
fs
push
jae
jmp
flds
adc
sbb
dec
subl
les
sub
lods
xor
arpl
in
inc
adc
cmp
iret
cmp
pop
or
pop
sub
xor
rdmsr
xor
xor
ljmp
push
test
daa
and
jae
jnp
or
mov
inc
pop
outsl
test
dec
sub
dec
sbb
and
xor
cmp
call
inc
aam
push
aad
popa
mov
inc
fimuls
push
add
sbb
pusha
sub
and
xor
mov
adc
pop
fildll
push
add
daa
mov
mov
mov
sub
mov
push
pusha
repz
and
and
sub
fs
dec
leave
fldenv
jmp
xchg
push
addl
mov
sar
orb
and
jbe
fildl
push
dec
stos
pavgb
leave
leave
enter
test
leave
stc
cs
cwtl
sub
xor
in
cmp
gs
bndldx
dec
jne
in
in
test
xor
in
cmp
or
cmp
jns
das
imul
xor
mov
pop
xor
rcll
adc
push
jb
mov
cmpsl
rolb
popf
add
add
pop
xchg
lret
pop
sbb
or
add
jne
or
mov
jo
inc
push
xor
popa
mov
ss
mov
lods
ljmp
imul
dec
lods
dec
sbb
push
ret
hlt
pop
sbb
mov
pop
jle
xchg
stos
in
test
push
or
pop
out
and
sub
sub
mov
cmp
xchg
test
mov
sub
repz
sub
in
mov
aas
and
pop
shl
cmp
dec
jne
dec
xor
mov
lds
add
jbe
insb
and
or
xor
cmp
mov
in
add
insb
bound
rcrl
es
dec
rcrl
adc
loopne
add
rcll
or
push
mov
jo
mov
xchg
and
aam
adcl
enter
pop
mov
sbb
and
scas
fs
sbb
adc
hlt
push
or
js
mov
sbb
inc
stos
pop
pop
mov
and
test
das
mov
les
add
test
or
in
in
inc
gs
in
shll
xor
sti
daa
adc
daa
mov
testl
push
xchg
repz
mov
adc
sti
or
stc
xchg
dec
or
cs
or
mov
and
jne
cmc
lret
inc
jae
jmp
jg
lds
or
sbb
roll
inc
mov
jae
stos
arpl
pop
sbb
xchg
and
xchg
sti
mov
pop
add
dec
nop
or
shlb
clc
mov
and
das
and
or
add
push
jnp
adc
push
scas
pop
mov
dec
mov
push
pop
or
or
scas
add
sub
dec
test
mov
ret
fisttpl
pusha
add
das
nop
sbbb
mov
adc
cmpsl
sbb
pop
pop
pop
inc
adcl
mov
mov
sub
push
loope
lods
pop
inc
xchg
adc
cwtl
jl
or
popa
xchg
or
add
aaa
mov
cwtl
or
pop
pop
adc
adc
mov
nop
outsb
pop
shll
add
or
or
sub
or
enter
cs
enter
filds
xor
inc
sbb
add
mov
mov
leave
sub
sub
insl
jno
mov
xchg
shlb
ss
aad
xor
cmc
lods
xchg
add
cmc
mov
mov
movl
mov
sub
sbbb
inc
cmp
sub
test
push
sub
cmp
adc
mov
or
xor
repz
adcl
cltd
or
xchg
mov
lods
sub
je
add
add
imul
fmulp
xor
call
jae
aas
and
cmp
cmp
and
adc
push
and
mov
inc
mov
add
xchg
pop
mov
repz
insb
mov
push
scas
adc
lock
pop
push
mov
imull
add
shlb
cmp
push
push
push
inc
mov
adc
cmp
push
les
add
enter
cld
mov
sub
mov
inc
add
js
sbb
cs
jne
bound
or
and
sub
cmp
adc
loopne
std
pusha
or
inc
stos
std
mov
clc
pcmpeqw
xchg
hlt
mov
call
mov
or
shlb
inc
orb
cmpsl
rcrl
or
add
dec
add
inc
xchg
jno
adc
cmp
icebp
inc
or
cmc
pop
incl
and
je
lock
fwait
into
xor
push
mov
pop
add
mov
push
inc
je
mov
xchg
push
cmp
enter
lret
cmp
inc
add
loopne
inc
mov
or
jp
insl
daa
and
es
xor
js
push
mov
ret
fbstp
pop
adc
and
cmc
es
jae
push
pop
pop
add
sarb
addr16
cmp
ja
jmp
inc
fistpll
and
xor
imul
sub
mov
jne
mov
jge
arpl
and
psubusw
cmp
push
dec
iret
cs
adc
call
leave
sahf
inc
jge
cmp
movsb
xor
pusha
fdivr
scas
insl
test
aas
addb
lds
xchg
sbb
adc
and
inc
hlt
xchg
or
pop
mov
mov
lock
sarb
shll
xor
rcrl
roll
dec
add
sub
roll
pop
add
lock
nop
mov
jno
adc
das
push
cmp
inc
xor
xchg
cwtl
mov
mov
or
add
xchg
pop
or
pusha
adc
lds
pop
xor
add
les
filds
imul
push
push
sbbl
add
jo
cmpsl
xor
mov
add
sbbb
mov
stos
int3
cmp
ds
push
enter
je
adc
in
inc
hlt
jle
push
popa
dec
adc
es
movsb
push
adc
ss
rorb
cmp
sub
mov
add
pop
mov
sbb
mov
subb
pop
inc
in
xor
pop
call
aad
cmp
xchg
jp
jbe
pop
cmp
fldenv
arpl
aaa
cmp
add
mov
ret
mov
sbb
imul
adc
fdivrs
dec
jmp
vmread
or
imull
push
jns
inc
dec
jb
inc
test
popa
insl
cs
fwait
cltd
xor
sub
inc
pop
lcall
xor
cmp
xor
pop
outsl
cli
repz
xor
arpl
pop
add
rclb
loopne
lock
fcoml
jle
mov
iret
dec
push
adc
test
pusha
sarb
je
cmp
cmp
and
mov
cmp
pop
or
bound
add
lods
sub
cmp
bnd
or
rcl
xchg
xor
pop
add
nop
add
movb
sub
mov
xchg
leave
mov
sub
test
cmp
or
xor
aad
repnz
adcb
inc
adc
pusha
cwtl
adc
xchg
neg
rcll
or
pusha
add
dec
clc
add
mov
push
and
mov
and
add
or
push
dec
pop
sub
test
dec
es
or
lods
inc
pop
inc
dec
xor
or
dec
jl
xor
sub
adc
fidivl
sbb
in
mov
pop
push
pop
pop
pusha
fs
subb
mov
loope
call
xor
cmp
cmp
push
dec
push
mov
add
pushf
insb
xchg
clc
dec
hlt
jecxz
pop
lods
addr16
hlt
mov
and
fdivl
ljmp
pop
fdivl
fisttps
inc
call
jp
sub
push
das
and
nop
fs
unpckhps
setg
lcall
xchg
test
xchg
and
cmp
adc
subb
and
dec
and
mov
pusha
or
jno
pushf
lcall
iret
rcr
or
fisttpll
pop
pop
mov
fistpl
lret
sbb
push
add
and
pop
and
inc
rorb
xor
imul
or
cmp
jmp
sbb
push
and
or
imul
add
dec
imul
aaa
dec
xor
and
xchg
call
rorb
cmpb
push
test
repz
sub
xor
cmp
fs
push
or
lret
movsl
add
pop
jp
scas
xlat
ja
ret
and
jns
add
push
pusha
arpl
adc
mov
in
inc
test
cmc
sub
dec
in
push
shrl
push
inc
pushf
cmpsb
jnp
xor
call
inc
movb
dec
cwtl
mov
pop
lock
lods
sub
pop
pop
and
daa
push
pop
sbb
cmp
xorb
hlt
or
mov
sub
hlt
adc
push
xor
inc
aam
mov
int3
fisttpl
cmp
lds
xchg
inc
dec
clc
add
popf
sbb
sub
pop
sub
es
mov
pop
sahf
dec
dec
jne
cltd
in
dec
ds
dec
cmp
testb
inc
out
xchg
mov
dec
mov
jl
gs
enter
lock
adc
out
testl
fstl
sub
xlat
xor
dec
inc
popa
inc
add
pop
and
mov
fcoms
cwtl
add
pop
push
sbb
push
cmp
mov
shr
mov
mov
xchg
aas
adc
lret
imull
sub
add
jne
jo
mov
xor
adc
xor
dec
sbb
dec
sbb
add
pop
cwtl
add
mov
js
cmp
jne
shll
lea
sub
jb
push
clc
test
sub
push
adc
dec
adc
cmp
cmp
mov
aaa
jecxz
pop
cmc
jns
add
adc
aam
adc
xor
xor
sub
test
xchg
sbb
cmpsl
fldl
int3
adc
xchg
mov
add
iret
mov
pop
pop
jb
clc
or
incl
ret
sub
jle
decl
outsl
or
les
testl
dec
xor
mov
add
dec
xlat
mov
push
sbb
push
jb
xchg
xor
hlt
cmp
cmp
pop
dec
add
bound
cmpsl
testb
and
push
addr16
stos
push
test
insb
push
pop
icebp
and
pop
adc
inc
add
jge
sub
dec
push
aam
mov
pslld
test
ss
psubb
icebp
add
iret
xchg
ret
sbb
sub
xor
cld
pop
push
or
in
out
or
adc
add
inc
adc
dec
xchg
xchg
bound
push
push
xchg
sub
xchg
jg
adc
ret
dec
clc
push
loope
das
add
xor
mov
jns
nop
add
rcl
xchg
pop
push
jecxz
mov
or
cmp
shl
push
lcall
lds
add
mov
imull
mov
or
jo
mov
jbe
add
and
out
jge
loopne
push
dec
add
pushf
sbb
jbe
in
adc
dec
das
imul
dec
or
mov
and
rcrb
inc
in
push
push
push
xor
dec
dec
pop
pop
sub
and
jp
sub
pushf
fwait
mov
fs
dec
dec
adc
pop
dec
dec
lds
pusha
lock
mov
add
je
sbb
inc
cmpsl
and
jo
or
orl
push
inc
or
call
push
dec
pop
stos
inc
popa
jnp
jg
popa
leave
adcl
loopne
add
xor
test
cmp
sbb
add
ret
pop
dec
adc
ffreep
sbb
jmp
negb
enter
ds
orl
xchg
popa
sahf
mov
addl
in
pop
dec
fs
dec
int3
neg
add
fsubrs
pusha
scas
inc
and
dec
push
call
or
mov
les
sub
testl
dec
rclb
mov
bound
inc
push
mov
xor
ds
pop
cltd
ret
daa
lods
add
add
dec
mov
dec
leave
pop
pop
add
inc
push
pushf
jg
movsl
mov
paddw
dec
jno
cs
xchg
js
dec
stc
es
fcomps
cmpl
mov
push
sub
out
ss
push
scas
sbb
sub
add
cmp
sub
pop
subl
or
arpl
and
push
add
push
mov
popa
sbb
inc
out
movsb
fs
dec
push
jmp
cmp
imul
test
pop
cmp
mov
mov
or
ljmp
jns
ret
push
sbb
xor
mov
mov
mov
inc
test
mov
inc
cmp
and
imul
pusha
mov
push
loop
cmpsb
pop
dec
subps
cwtl
adc
les
and
inc
xor
dec
sbb
cwtl
mov
movb
inc
dec
cwtl
push
xchg
sbb
ret
cmpsl
add
adc
pusha
jmp
or
test
nop
icebp
pop
psubusw
jae
xor
or
lds
pop
adc
push
mov
dec
jmp
xlat
sbb
test
push
sbb
inc
xor
xchg
mov
leave
add
push
push
loope
cmpsb
xchg
ja
pop
xor
adc
inc
add
jne
popa
pop
test
jae
outsb
ret
outsb
push
into
add
faddl
lock
push
add
sahf
andnps
adc
push
movsb
enter
mov
adc
fildl
vmread
cs
cmp
cmp
cmp
pop
dec
mov
scas
loopne
pop
adc
sbb
xchg
adc
add
and
xchg
mov
pushf
push
insb
imul
fidivl
xor
je
frstor
xchg
sub
jl
xchg
sbb
push
orb
mov
adc
je
or
mov
or
scas
movsl
or
rolb
outsl
pop
test
jns
cmp
adc
andl
cwtl
sbb
jmp
jno
pushf
xchg
or
lock
mov
xor
sbb
fldenv
lea
arpl
push
mov
push
or
jno
rclb
push
or
jns
loope
xchg
in
push
or
insl
sbb
fnsave
mov
push
inc
outsl
hlt
imul
ret
push
dec
shr
bound
pop
jne
stos
inc
popf
sbb
int
pop
jno
jb
xor
jmp
xor
xor
test
xor
adc
pusha
mov
and
adcb
pushf
arpl
mov
xchg
and
cld
xchg
inc
bnd
fs
or
inc
xchg
add
cmpsb
push
cmc
inc
adc
ljmp
popf
xor
loopne
xor
mov
dec
mov
rorl
js
in
pop
aad
sub
inc
test
or
xchg
jo
inc
js
mov
mov
add
pop
movsl
xchg
stos
mov
push
test
cmp
imul
rolb
int
xchg
popa
repnz
hlt
xor
out
dec
xor
mov
cld
dec
in
rcrb
add
mov
enter
add
outsl
cmpsb
popa
push
adc
cmp
cmp
repz
js
mov
repz
iret
repz
int3
rcl
fcomp
loopne
or
or
and
hlt
leave
xor
jmp
inc
mov
ja
jns
and
dec
sarb
xchg
mov
popf
add
lahf
add
mov
aaa
in
sbb
bound
mov
fnsave
add
and
loope
aad
cwtl
dec
add
xor
pop
orl
loopne
mov
ljmp
dec
xchg
jg
test
jp
lea
mov
inc
inc
xor
pusha
mov
jecxz
dec
imul
jo
jmp
add
pop
mov
rcl
int
sub
pop
ljmp
out
lea
or
cwtl
pop
popl
pop
mov
sub
pop
neg
sub
xor
int3
or
xchg
inc
xchg
and
adc
rolb
popa
je
sbb
adcl
sbb
movsl
add
inc
push
mov
and
aas
cmp
pop
pop
sbb
add
and
and
and
xor
pop
sbbb
cmp
mov
js
das
mov
push
push
inc
cmp
loop
ret
or
lock
lahf
mov
jmp
inc
xor
push
add
sbb
inc
xor
add
and
cs
push
cmpsl
pop
loopne
pop
and
inc
mov
mov
mov
xlat
push
fstpt
pop
loope
fistps
mov
or
cmp
and
rcll
xor
jne
pop
xor
xor
sbb
cmp
fnstenv
lods
imul
rolb
dec
add
xchg
dec
je
xor
int
aas
mov
daa
cmp
leave
cmc
loop
push
inc
mov
jp
inc
sbb
fsubl
dec
bound
mov
xlat
ljmp
out
jno
fnstcw
or
xchg
lock
mov
add
adc
xchg
push
addb
fiaddl
lret
inc
aam
add
push
imul
sti
lock
add
data16
into
adc
push
sbb
cmp
and
sbb
je
push
dec
mov
test
sbb
and
pop
movsb
mov
in
dec
pushf
jle
pop
pop
inc
ficomps
push
mov
popa
scas
or
fnstsw
mov
dec
push
mov
mov
imul
push
shlb
dec
jae
push
movb
sbb
mov
inc
mov
movsb
cltd
xchg
ja
pop
in
outsb
add
cmp
inc
sub
int
jmp
add
in
or
add
xchg
mov
gs
sbb
inc
sbb
cs
push
xchg
dec
imul
nop
cmpsb
test
or
dec
xchg
lds
jno
lods
add
or
adc
jecxz
and
xchg
inc
movb
int
sub
add
pop
inc
sbb
outsl
pop
inc
pop
xchg
xchg
mov
pushf
popl
iret
add
fcoms
add
dec
test
inc
dec
adc
push
ljmp
in
popf
ret
add
stc
sbb
adc
xchg
push
push
insb
adc
je
sbb
xchg
js
push
push
xchg
add
jo
push
xor
sub
ss
mov
dec
lods
xorl
clc
xchg
test
mov
in
loopne
or
xchg
insb
popf
mov
pushl
add
shlb
pop
sub
xchg
push
mov
rcr
or
or
push
cmp
sbb
dec
dec
xchg
popf
nop
inc
sahf
xchg
dec
xor
adc
add
lods
dec
inc
rorb
inc
mov
ret
mov
iret
xchg
sbb
dec
xor
add
push
pushf
pop
cmpsb
sub
les
fmull
lock
jne
dec
lods
push
cmc
js
movsb
push
imul
cmp
push
sub
pop
imul
fldcw
pusha
inc
push
cmp
adc
cltd
leave
push
fiaddl
xchg
sbb
out
push
cmp
lock
test
mov
or
movsl
inc
pop
subl
je
lods
pop
add
push
sub
insb
mov
cmp
std
xchg
shll
lods
add
adc
xor
xchg
das
icebp
dec
imul
sbbl
push
popa
insb
push
push
pop
sbb
xor
jmp
ljmp
or
adc
or
fiadds
cwtl
je
push
mov
pop
lods
pop
add
mov
jo
inc
fs
add
push
pextrw
dec
inc
movsb
and
out
inc
xor
sub
xor
mov
movsb
ss
xor
xor
je
aam
popa
cmp
das
sbb
mov
pop
roll
jl
xorl
scas
subb
jne
add
fimull
jns
sbb
and
jne
in
mov
xor
movsb
mov
cltd
mov
inc
fnstenv
call
loopne
rcl
in
push
mov
orb
arpl
gs
inc
adc
adc
adc
ret
addr16
or
xor
dec
or
in
adc
xor
pop
scas
stos
int3
adc
xchg
cltd
inc
dec
daa
dec
imul
mov
xchg
jg
sbb
or
test
cli
imul
adc
cmpsl
les
sbb
mov
adc
sbb
ljmp
inc
fcomi
push
pop
push
adcl
push
scas
inc
movsl
fwait
js
nop
sbb
lods
pop
das
or
and
outsl
fxch
add
dec
in
loope
ss
dec
jge
xlat
jp
rcl
mov
pop
sbbl
lods
stc
mov
mov
cmp
add
insl
inc
shlb
sub
mov
and
inc
std
push
push
addl
or
bound
add
nop
dec
rclb
out
hlt
xchg
or
inc
add
jno
dec
ficoms
lsl
lock
jmp
sti
lret
xchg
insb
ss
adc
dec
mov
stos
sarb
rorl
addl
test
inc
xchg
sub
mov
rorl
cmp
loope
sahf
mov
xchg
cmpb
rolb
sahf
or
jb
adc
adc
xor
sbb
sub
or
aas
imull
or
lods
pop
sub
movsl
xchg
loope
or
mov
dec
int3
sbb
gs
cld
pop
mov
sbb
jmp
stos
lcall
ja
les
xchg
fs
cmp
xor
mov
and
pop
inc
push
push
jae
mov
cs
sub
mov
sub
test
fildl
mov
xor
pop
jmp
ret
std
cmp
dec
mov
sub
mov
inc
lret
sub
push
test
sub
loope
jns
mov
xor
dec
mov
push
fwait
inc
mov
lods
outsb
movups
ss
test
std
push
outsb
adc
add
repnz
adc
dec
popa
mov
iret
cs
addl
add
dec
dec
rorb
inc
mov
iret
pop
addr16
pop
pushf
push
sbb
or
or
sub
pop
lret
movsb
loop
push
enter
dec
xor
lock
sbb
pushf
jo
leave
inc
fisttpll
pop
in
and
call
or
push
aaa
or
repz
inc
add
dec
push
inc
in
aas
dec
push
adc
pushl
ljmp
sbb
mov
pop
mov
cltd
or
lods
add
sub
inc
xor
enter
push
mov
cmp
subb
mov
sbb
sbb
mov
pop
push
mov
rorb
inc
jg,pn
jo
or
mov
loop
outsl
sub
inc
inc
insb
lea
lock
mov
or
xor
fsts
insb
in
loope
push
cmp
cmp
in
lcall
dec
lcall
and
inc
imul
sbb
js
mov
jno
nop
repz
push
hlt
xorb
jae
jp
xor
xchg
push
mov
in
dec
cld
in
dec
aad
lock
out
nop
lock
filds
cmpsl
inc
inc
jo
lcall
sbb
in
push
in
cld
add
mov
inc
fistps
icebp
xchg
hlt
xchg
push
inc
mov
psrlw
jmp
mov
movsl
js
ud2
xor
and
fldenv
pop
aad
and
mov
imul
gs
push
test
mov
js
inc
fadd
jae
lds
jae
data16
pop
je
dec
pop
mov
cmp
in
mov
xlat
cmp
sub
jbe
lock
sahf
xor
push
jl
int3
adc
adc
push
push
and
mov
ret
test
push
add
fcomps
int
xor
inc
outsb
pop
mov
sub
repnz
stos
dec
outsb
or
andb
or
inc
xchg
add
xchg
sub
add
ja
mov
push
adc
adc
rolb
aaa
in
inc
inc
adc
add
mov
mov
in
push
movl
lods
rol
adc
jb
mov
out
adc
sbb
adc
add
mov
daa
mov
add
push
bound
or
xor
add
adc
test
loope
ficoms
in
or
lcall
inc
and
lock
or
add
iret
add
adc
seto
jbe
faddp
sub
imul
imul
sbb
out
mov
das
mov
popa
or
into
out
ficompl
push
dec
cmpsb
sub
cmp
add
fidivrl
pop
jl
or
push
in
and
add
push
test
or
out
adc
gs
push
adc
xchg
out
adc
lock
dec
pop
push
push
mov
jbe
inc
pushf
and
or
mov
sbb
adc
and
mov
push
push
inc
ja
or
ja
sbb
sti
movsb
lock
push
or
fldl
stos
push
stc
movb
jbe
sahf
push
or
jge
das
jae
xchg
aaa
lods
xlat
jle
outsl
rcrl
roll
test
jo
add
add
push
bound
sbbl
retw
fcoms
and
and
jo
movsb
xchg
pop
dec
insb
pusha
or
jge
lret
mov
fcmovbe
and
fwait
orl
outsl
ret
ja
cltd
inc
imul
mov
mov
dec
ret
dec
or
lds
out
loope
xchg
iret
sbb
ja
js
ficomps
dec
addb
xor
aas
or
data16
movsl
push
je
adc
inc
ss
adc
jle
clc
filds
xor
jae
and
xor
sbb
dec
inc
or
imul
jns
push
push
shrb
push
leave
adc
imul
jo
mov
or
out
js
push
push
mov
or
pusha
les
sbb
and
adc
or
movb
sub
adc
inc
jl
inc
add
insl
mov
aas
jns
xor
adc
imul
loope
dec
push
or
imul
aas
jae
mov
add
cmp
sbb
cmp
cmp
push
xchg
sbb
adc
addl
test
es
cmpsl
ret
daa
mov
aaa
xor
daa
sub
cs
push
ja
adc
add
pop
aaa
js
sbb
dec
mov
xchg
mov
sub
dec
pop
inc
inc
movb
add
adc
shrl
xchg
fs
loop
pop
or
test
pop
xchg
jp
xor
movsl
loope
inc
inc
mov
add
cld
xchg
lods
inc
adc
inc
mov
test
mov
or
or
or
test
cmpsl
jo
add
es
jge
adc
int
jg
xor
pusha
cmp
mov
nop
fsubrs
xchg
popl
or
in
mov
adc
sbb
adc
sub
movsl
test
lock
dec
inc
lea
sarl
jge
sarl
push
lret
lret
idivl
jle
pop
push
add
nop
sbb
xor
add
xlat
adc
je
dec
pop
and
push
or
mov
in
and
sbb
js
dec
popa
mov
adc
jb
mov
jecxz
mov
cs
in
sbb
fistl
push
sbb
mov
cltd
pop
xor
and
xlat
jmp
mov
xchg
test
and
adc
or
xchg
mov
inc
les
cs
mov
iret
cli
faddl
mov
rolb
or
pop
and
xchg
fdivs
jle
lods
int3
mulb
and
or
or
push
mulb
and
xorb
fsubrs
push
das
xchg
or
loop
es
xor
sub
mov
cli
dec
negl
xor
add
clc
xor
imul
std
out
decb
push
or
adc
add
push
xor
push
call
fistl
jb
push
dec
push
jl
push
mov
push
testl
dec
pop
and
mov
push
sub
dec
mull
dec
in
dec
adc
jo
dec
fstpt
xchg
idivl
push
int3
sti
jnp
inc
add
cld
push
xchg
stc
push
push
jno
insb
test
xor
cmp
insb
ss
icebp
icebp
fwait
pop
lcall
iret
repz
push
dec
int3
mov
jo
add
add
cltd
rorl
or
dec
pusha
add
or
cmc
rclb
add
push
pusha
lcall
add
pusha
test
aas
pushf
sub
push
mov
add
inc
push
call
pop
mov
ss
lahf
add
mov
loop
in
std
mov
sbb
or
mov
mov
mov
or
adc
movsb
xchg
aam
roll
jecxz
lods
push
inc
mov
int
add
addl
xor
pop
mov
bswap
mov
and
jecxz
mov
rcr
pop
movb
call
push
aas
sar
xchg
sub
inc
or
enter
mov
mov
jo
lret
jae
rcrb
es
sub
or
and
lea
sub
dec
mov
push
arpl
leave
adc
sbb
ret
js
jmp
cmp
popa
add
cmc
ret
mov
mov
fwait
mov
sarb
es
dec
sahf
out
jp
or
mov
mov
and
inc
into
fsubrs
enter
adc
inc
enter
add
adc
shl
sbb
add
fdivrl
and
in
add
sub
add
aam
scas
mov
js
add
jns
mov
sub
inc
adc
mov
clc
lock
add
adcb
and
lds
outsl
sub
adc
outsl
mov
push
add
jbe
int
pop
gs
jmp
xchg
bnd
pop
add
add
mov
movsl
add
cmp
pop
aas
mov
jo
loope
sub
popa
dec
xor
pop
sbb
push
stos
add
or
push
lods
repnz
push
jge
popf
mov
cmp
ss
addr16
inc
lods
rcll
mov
imul
test
jl
jne
mov
addr16
jo
cmpsb
fstpt
test
pop
loope
cmp
sbb
mov
mov
cmp
div
fiadds
paddb
lock
inc
mov
insb
pop
andb
divl
repnz
decl
mov
movsb
lcall
in
leave
lcall
mov
leave
scas
in
fistpll
add
test
adc
unpcklps
das
sub
scas
stc
lcall
cli
incl
shrb
test
xor
mov
add
add
add
shl
sbb
add
add
adc
push
popa
xorl
orl
mov
ficoml
dec
cmp
fwait
stos
dec
mov
mov
sbb
test
pop
sub
incl
inc
or
inc
mov
mov
mov
ljmp
dec
scas
ljmp
ljmp
jmp
mov
mov
inc
adc
add
and
cmp
sti
add
adc
dec
add
mov
mov
mov
push
lods
cmp
sahf
data16
sbb
je
fcompp
ds
jl
js
push
and
push
test
fwait
dec
jne
push
rolb
push
insb
dec
inc
movsb
pusha
dec
pop
cwtl
inc
adc
test
xchg
mov
out
insb
jbe
jle
dec
push
fmuls
sub
fnstsw
pop
xor
push
push
fidivrl
fistpl
les
ss
add
mov
add
outsb
or
dec
and
inc
xchg
sbb
adc
pop
add
mov
loopne
inc
insb
cmp
push
mov
pop
cwtl
pop
dec
dec
mov
mov
sbb
loopne
mov
imul
movb
mov
inc
popa
shlb
inc
jne
rclb
shrb
js
pop
sbb
sbb
sbb
inc
dec
sub
or
mov
push
xchg
cmpsb
xor
aas
jl
mov
inc
pop
mov
add
jge
shll
cwtl
test
or
or
dec
add
pinsrw
inc
mov
mov
cmp
inc
sub
inc
mov
sbbb
jbe
rorl
rorl
mov
add
mov
cwtl
jno
inc
pushf
popf
inc
inc
push
pop
inc
cmp
xchg
rcll
add
aas
xor
adc
add
cmp
xchg
mov
inc
cmc
leave
cwtl
stos
dec
hlt
push
ret
or
insl
loope
out
xor
ret
xor
fsub
xor
push
xor
adc
push
unpckhps
jae
cmp
sub
pop
adc
push
pop
stos
add
push
mov
fs
cs
fisttpl
or
loope
sub
das
lods
subl
lret
inc
or
dec
xor
insl
and
ret
inc
pop
cmp
cmp
xchg
jmp
mov
dec
sbb
bound
mov
add
mov
add
nop
inc
sub
je
std
cmpl
xor
popa
mov
out
fidivrl
out
popa
nop
dec
stos
rclb
into
shr
cmc
ret
and
push
mov
pop
push
fstps
jo
push
rcll
sbb
sub
nop
out
or
mov
pop
mov
das
mov
rorb
daa
dec
mov
jecxz
mov
rolb
pop
shr
and
cmp
xchg
out
fcomps
dec
push
push
popa
or
sahf
cs
loopne
and
scas
mov
xor
pop
inc
cmp
add
testl
cmp
inc
dec
or
push
mov
test
sahf
adc
rclb
push
imul
jb
xlat
inc
and
mov
mov
sub
or
jns
nop
add
lea
mov
pop
popf
sbb
outsb
incl
mov
outsl
incl
sub
or
test
xchg
rclb
inc
sbb
inc
shrb
mov
dec
sarl
aas
push
lret
pop
mov
imul
int
sbb
test
sbb
push
int
pop
jne
mov
lcall
test
push
pop
or
xchg
add
and
int3
mov
incl
sub
add
pop
pop
push
push
rcrb
xchg
repnz
into
pop
jl
push
xchg
mov
add
je
xchg
xor
xchg
inc
leave
lgdtl
jb
add
movsb
inc
rclb
pop
je
mov
jae
mov
xor
dec
dec
and
insb
push
movsl
inc
and
pushf
or
mov
pop
mov
in
outsb
mov
pop
push
cmp
adc
pop
adc
adc
and
or
xor
mov
mov
imul
sti
psubq
pusha
mov
pusha
inc
lea
adc
out
add
sbb
dec
pop
fs
or
mov
sbb
jno
repz
mov
leave
in
adc
mov
add
jns
mov
in
add
dec
mov
inc
push
dec
mov
aas
sbbl
test
jne
adc
loop
add
add
xor
mov
and
push
and
ljmp
jb
fldl
and
mov
cmp
and
jns
xor
xchg
push
cwtl
push
sbbb
adc
push
fldenv
pop
fldcw
push
inc
add
adc
test
add
sub
push
mov
pushf
mov
inc
lods
or
push
push
loop
jns
jb
pop
sub
mov
push
inc
inc
cs
in
addl
subl
orl
orb
and
mov
adc
and
and
push
jmp
sbb
shll
adc
inc
loopne
pop
or
cmc
popa
and
or
and
das
mov
rol
ss
int3
int
popa
incl
xorl
sbb
jo
mov
orl
mov
xor
xlat
push
insb
lcall
adcl
out
repz
mov
cmp
leave
and
fiadds
cmp
pusha
shll
add
shrb
add
mov
xor
or
bound
outsb
in
xchg
jo
shlb
add
dec
mov
int3
xchg
jo
iret
lock
je
dec
or
dec
iret
push
dec
inc
cs
xchg
and
pop
xchg
push
sbbl
add
inc
das
mov
orl
loop
shrl
xchg
test
cwtl
add
fadd
rclb
pop
dec
inc
or
test
adc
loop
dec
xor
incl
stc
dec
mov
push
mov
or
push
ss
mov
mov
and
mov
or
shlw
or
dec
sbb
enter
xchg
sbb
pop
pop
adc
dec
rol
out
jno
mov
sti
dec
add
fwait
add
rol
push
inc
push
or
jne
cmp
mov
inc
loope
add
or
mov
dec
mov
jbe
push
fildll
sub
scas
inc
dec
clc
push
movsb
mov
push
push
mov
dec
push
and
push
leave
add
cmp
insb
and
pusha
sub
call
xchg
pop
push
adc
push
add
test
dec
sbb
incl
xchg
pop
inc
or
loope
push
adcl
stos
addl
orl
addl
adcl
orl
and
push
push
dec
fidivl
loopne
inc
shl
or
mov
dec
dec
adcw
mov
sub
addr16
pop
cmp
dec
sbb
daa
loope
adc
push
sbbb
xchg
xchg
nop
dec
cmp
test
mov
fsubl
shrl
sub
add
mov
lea
fildl
scas
jo
loopne
shrl
push
inc
xchg
pop
imul
add
icebp
or
xchg
faddl
add
enter
pop
xchg
dec
enter
imul
enter
dec
push
enter
mov
add
xor
mov
lret
lcall
jle
ret
in
out
fwait
sub
enter
ja
mov
enter
dec
ja
enter
ret
out
popf
enter
xor
fwait
enter
mov
enter
dec
insl
xchg
mov
fisttpll
lahf
xor
enter
hlt
enter
sbb
in
enter
cli
pop
mov
inc
push
enter
sbb
enter
fmul
enter
and
enter
out
movsb
test
enter
jne
aam
je
push
rcrb
mov
dec
push
mov
dec
and
sub
mov
inc
add
jmp
push
push
fmuls
jb
popa
incl
out
push
adc
mov
div
sub
push
fsubrl
push
adc
testl
pusha
dec
lahf
ret
arpl
test
test
sbb
add
out
idivb
decl
arpl
sti
lock
xor
sbb
lock
add
dec
pop
jge
test
push
mov
xchg
inc
imul
xlat
pop
cltd
or
cmp
jb
pop
es
inc
cmpsl
adc
aaa
jnp
test
mov
sbb
dec
and
dec
sbb
lea
dec
icebp
add
aaa
add
sub
pop
stos
mov
jo
aaa
pushf
push
daa
mov
jg
repz
dec
rolb
pop
pop
test
cmpl
sub
sbb
mov
fsincos
loope
push
pop
sbb
or
inc
pusha
sbbl
iret
sub
add
sub
jo
add
sti
or
mov
gs
mov
test
fcoms
xchg
and
in
insb
test
pop
mov
dec
or
jmp
push
cmp
ret
dec
pop
inc
adc
js
dec
xor
adc
push
jge
push
or
sbb
push
push
cwtl
sbb
das
pop
inc
pusha
push
aaa
xor
dec
mov
lock
clc
je
rolb
add
rcll
cmp
or
cmpsb
sbbb
push
and
loope
push
pop
inc
cmp
xchg
int
testb
mov
push
orb
mov
lcall
mov
jno
shrb
push
jmp
jo
data16
xchg
or
push
movsl
in
fldt
and
jmp
pop
adc
repnz
cs
mov
adc
dec
stos
xchg
or
popa
jns
lea
sti
inc
ds
add
dec
or
pop
fcomi
mov
xor
arpl
fadds
sub
pop
jbe
inc
addr16
aad
ret
add
or
addps
cvtps2pd
mov
pop
fisubrl
cmp
push
test
fwait
insb
dec
push
cwtl
pop
mov
mov
mov
inc
push
sbb
das
jae
mov
push
aaa
roll
and
xor
insl
sub
xchg
sub
sub
jb
das
mov
push
and
in
and
xchg
sbb
add
shlb
pop
pop
xchg
jae
adc
cmp
push
pop
cmp
movl
outsl
fcomip
lcall
aas
mov
decl
daa
mov
add
mov
push
lods
xchg
xchg
xchg
daa
add
std
pop
push
adc
push
sbb
movsl
sub
cmp
adc
rorl
sbb
jo
push
popf
push
sub
push
cmpsb
lcall
and
sarl
test
mov
rcll
add
mov
orb
mov
xor
inc
out
mov
lods
outsb
stos
jmp
test
fistps
mov
add
push
sub
add
cmpsb
lods
inc
inc
gs
popa
lods
add
inc
test
icebp
sbb
sbb
movsb
pop
and
push
and
mov
push
mov
mov
mov
fiadds
cs
mov
out
mov
mov
and
inc
imul
mov
mov
mov
adc
pop
mov
mov
stos
pop
jmp
aad
mov
adc
roll
xchg
in
mov
add
lock
fimull
xchg
xchg
mov
popf
or
and
jb
das
dec
shrb
push
jno
sub
pushf
outsl
jmp
xchg
aam
add
leave
ret
and
lods
lcall
sbb
and
je
cmp
in
loope
jnp
mov
sub
imul
inc
dec
mov
push
and
adc
in
fcompl
inc
xor
jg
xor
mov
stos
les
inc
add
pusha
nop
dec
push
adc
adc
lods
lahf
test
dec
or
in
dec
or
or
js
and
shrl
mov
push
dec
jne
test
xchg
inc
mov
or
sub
leave
adc
ja
sbb
adcl
lret
xchg
insb
and
jle
mov
les
test
pusha
and
xadd
imul
jl
aam
jo
mov
shlb
shrb
xchg
pop
sbb
call
pop
pusha
or
cmp
xor
xchg
push
sub
ds
jmp
push
andb
xchg
ljmp
push
cmpsl
and
inc
cs
aaa
pop
jb
movsb
and
loopne
pop
popa
andb
lea
shufps
pop
repnz
xchg
jl
adc
add
fdivl
or
and
out
addr16
mov
imul
lods
and
sub
outsb
pop
mov
cmova
or
inc
or
xor
sub
mov
aas
push
mov
mov
addb
dec
faddl
push
jne
decl
adc
scas
outsb
adc
push
sub
imulb
pusha
mov
mov
add
pusha
imul
rcrb
cmp
pop
lea
add
dec
xor
daa
or
loopne
lret
add
push
test
xor
pop
inc
mov
pop
adc
addb
dec
mov
pop
and
dec
or
movsl
add
and
test
or
mov
sbb
push
shll
xchg
dec
iret
movsl
aas
mov
xchg
push
xor
mov
clc
and
xor
adc
cmp
xor
fcomi
dec
dec
jno
subb
mov
rolb
decb
sub
mov
xor
movsl
push
mov
xchg
jg
jge
mov
jge
mov
cmp
andps
loope
jge
mov
add
sbb
push
mov
popa
test
imulb
insb
and
pop
mov
out
or
es
pop
mov
cmp
test
movsb
dec
or
popa
bound
mov
cmp
xchg
inc
call
sti
push
xorl
xchg
push
movsb
mov
and
add
sbb
pop
xorl
dec
jnp
and
pop
adc
out
jae
inc
dec
outsb
inc
pop
lock
arpl
pop
pop
out
pop
inc
sbbb
pop
sub
mov
mov
push
fwait
xchg
sbb
add
mov
mov
popa
outsl
fcomp
in
xor
js
sub
pop
jl
xor
fdivs
imul
test
inc
push
xor
adc
adc
mov
adc
inc
fiadds
dec
push
ret
mov
push
cmpsl
nop
push
mov
sub
mov
xchg
das
lds
fimull
insl
xchg
aaa
add
pushf
or
pop
loope
movsb
xchg
addb
add
sbb
movsl
adc
inc
bound
out
lahf
pop
jae
loopne
sub
test
or
pop
inc
and
nop
test
lret
jecxz
lods
pop
push
sub
movsb
stos
xchg
xor
fs
pop
repz
pop
mov
pop
sbb
outsl
pop
shl
inc
mov
lret
inc
stc
add
stc
mov
sub
mov
xchg
adc
and
ret
mov
sti
in
arpl
dec
scas
roll
cmp
push
adc
inc
mov
adc
sbb
jecxz
or
mov
jnp
mov
xor
test
cmp
dec
fs
mov
pushf
inc
clc
fcoml
dec
mov
or
or
mov
movl
aaa
and
les
push
adc
inc
mov
adc
clc
stc
dec
lahf
enter
xchg
inc
jbe
push
rcll
fs
pop
aas
lock
fwait
mov
and
fisttpll
add
out
and
loope
sti
and
icebp
xor
xchg
int3
hlt
stos
and
dec
jnp
sub
xor
jmp
add
cmp
push
roll
sub
es
sub
sub
nop
pushf
arpl
pop
mov
icebp
mov
push
mov
xchg
jo
je
pop
fs
js
popa
movsl
sbb
sbb
push
add
push
mov
push
xchg
add
add
das
enter
movdqa
daa
daa
and
mov
xchg
xchg
xchg
daa
xor
pusha
stos
dec
outsb
fistl
setno
or
inc
jl
xchg
daa
daa
daa
sar
daa
int
xchg
xchg
xchg
push
mov
enter
andl
xor
in
mov
and
pop
or
sub
pop
ss
mov
push
add
mov
sbb
insl
inc
cld
inc
pop
jge
scas
dec
adc
movsl
inc
lds
daa
sbb
mov
fs
push
push
push
outsl
jge
fmuls
push
mov
jg
lods
xchg
dec
push
sub
add
inc
orb
mov
fs
ret
or
jmp
fisubrs
add
rcl
loopne
xorb
push
das
in
lock
leave
add
and
cmp
shlb
mov
adc
or
or
push
inc
aam
call
test
dec
popa
mov
fdivl
inc
jmp
ss
adc
and
in
cmpsb
or
inc
jo
int3
jge
push
sbb
pop
pop
pop
add
xchg
inc
push
mov
dec
repz
sarb
xchg
inc
cmpsl
adcl
add
mov
xchg
jne
jo
cld
push
mov
out
mov
or
ss
dec
out
pop
loope
inc
ret
pop
push
inc
mov
les
push
inc
dec
mov
stos
cmp
imul
cmp
push
aaa
fcom
scas
push
rorb
sub
or
push
pusha
movsb
in
fcomip
jg
jo
mov
pop
sub
inc
imul
dec
push
jp
jo
sbb
push
xor
leave
fsubs
push
sub
cmp
test
adcl
test
nop
lock
pop
ficoms
mov
cwtl
push
or
addr16
roll
out
add
adc
add
mov
popf
jae
test
jns
les
popa
push
xchg
adc
cmp
adc
mov
orl
ja
jo
loope
pop
xchg
ret
and
dec
imulb
sbb
int3
dec
mov
lods
push
add
in
dec
jb
push
and
pusha
into
test
adc
add
adc
push
add
les
sbb
insb
sub
and
dec
jne
les
adc
iret
das
lock
sub
dec
imul
inc
mov
xor
inc
inc
dec
push
mov
push
lea
pop
shlb
adc
into
pushf
lea
or
cs
les
xchg
shlb
pushf
out
inc
inc
cs
sbb
cmp
inc
inc
mov
or
inc
inc
dec
jae
mov
out
aad
push
inc
inc
inc
inc
jnp
int3
cmc
inc
inc
cs
sbb
aas
imul
inc
inc
inc
cs
subb
cmc
sbb
dec
jns
inc
inc
inc
lcall
inc
cs
inc
inc
inc
mov
xchg
shrb
inc
mov
inc
inc
inc
xchg
xchg
inc
mov
adc
jmp
cmpsb
pop
sub
ret
or
mov
imul
stos
adc
imul
and
call
pusha
mov
xchg
and
je
and
cmp
xchg
pop
inc
jo
and
mov
mov
rcl
mov
rclb
inc
insb
pop
or
mov
mov
test
movsl
daa
mov
and
push
les
in
je
lock
add
sub
pop
dec
frstor
rcll
lods
cmc
xchg
mov
push
adc
sahf
xor
add
test
cmpsb
cmpsb
xchg
and
adc
enter
sub
bound
dec
sahf
mov
mov
push
andb
adc
enter
nop
xchg
push
andl
push
popf
or
or
adc
inc
lahf
psubusw
jmp
sbb
mov
mov
and
add
add
inc
aad
add
in
je
xchg
push
pop
xlat
pop
xor
adc
adc
outsb
pop
pop
pop
xorl
dec
int3
dec
leave
loopne
sub
call
rorl
ljmp
adcb
mov
movsb
sub
xchg
jmp
clc
iret
pop
test
add
mov
loope
xor
lods
in
jmp
outsl
inc
and
mov
jns
jp
sahf
jg
or
mov
subl
xchg
lods
push
xchg
pop
sub
xchg
and
sub
iret
pop
mov
iret
pop
popa
or
dec
pop
pop
pop
pop
and
outsb
movsl
mov
adc
lea
push
sbb
jae
outsb
lods
inc
and
or
nop
add
sbb
pop
pop
leave
rcrb
xchg
adc
ret
imul
mov
call
xor
out
pop
outsb
xchg
or
or
je
jge
shlb
push
inc
scas
aam
pop
mov
inc
fcomp
imul
fcomps
test
jne
test
or
adcl
in
addr16
repnz
inc
xchg
or
mov
cwtl
in
adc
adc
jo
das
jmp
mov
mov
and
jb
and
int
jne
sbb
jmp
add
dec
imul
in
mov
xor
inc
or
pop
xchg
sbb
sbb
adc
and
sbb
aad
lock
or
push
leave
adc
cmp
in
jge
xchg
dec
lods
test
adc
aam
pop
pop
fistps
lods
adc
jae
hlt
mov
and
sarb
fnclex
jmp
fadd
add
cwtl
adc
lret
bound
inc
cld
mov
sbb
mov
mov
notb
fdivr
push
clc
pop
sbb
cmpsl
movsl
repz
idivl
es
inc
jbe
adc
ja
or
sbb
add
xor
push
dec
sub
dec
ret
mov
ss
sbb
ds
jne
mov
loope
into
pop
push
adc
push
cwtl
xchg
sbb
and
add
sub
pop
mov
gs
mov
incb
outsl
inc
push
cltd
cmp
or
or
jmp
sbb
lcall
fmull
lock
and
daa
arpl
incl
push
enter
adc
mov
cmc
push
movsb
adcl
insb
inc
dec
pop
pusha
push
mov
jmp
sbb
jb
pop
icebp
lods
adc
mov
lods
test
loope
ret
cmp
cmc
inc
lret
and
scas
lds
loope
add
je
orl
out
out
test
loopne
sahf
and
fadd
push
adc
aaa
test
lahf
inc
outsl
inc
inc
lock
mov
mov
stos
dec
or
adc
pop
lcall
adc
out
adc
xor
xor
pop
add
add
adc
lock
add
pop
add
movb
test
daa
dec
dec
lock
inc
adc
xor
int
adc
add
rorl
add
add
and
jl
mov
mov
dec
jo
mov
and
pop
and
mov
inc
xchg
jno
add
stc
and
js
add
pop
push
pop
lcall
mov
xor
std
jne
or
js
loop
je
pop
int3
lahf
mov
jo
jo
xchg
rorb
push
push
loope
or
inc
pusha
jmp
dec
lds
or
mov
aad
pop
das
add
daa
sub
sbb
push
or
dec
inc
inc
mov
push
push
fmull
inc
inc
and
or
add
or
or
mov
inc
add
sub
pop
xor
mov
loope
pop
imul
pop
shrb
rolb
adc
je
xor
or
push
dec
push
mov
iret
rcpps
sub
aam
adc
rolb
stos
ret
or
adc
loopne
lods
or
ljmp
lock
outsb
sti
inc
jmp
jp
adc
into
in
dec
call
dec
dec
sbb
in
inc
sub
or
push
inc
add
cmp
jl
mov
dec
inc
inc
cmpsl
mov
inc
add
ljmp
fists
pop
addr16
roll
push
jecxz
xor
enter
dec
roll
movsl
enter
inc
mov
xchg
cmpsl
sbb
imul
pop
inc
fistl
mov
in
push
outsl
inc
adc
aam
hlt
lods
push
push
and
sbb
dec
flds
cmp
cltd
mov
js
jmp
sub
adc
call
insl
mov
xchg
add
sub
fwait
xchg
shlb
mov
aaa
fdivrs
enter
mov
cmp
and
lock
push
mov
lock
xchg
outsl
inc
popf
repnz
bound
shlb
outsl
cs
pop
and
mov
pop
dec
xorl
pusha
scas
sub
sub
adc
pop
jb
sbb
ss
jg
out
sub
neg
jmp
arpl
and
and
xchg
mull
or
inc
rol
push
test
add
lock
push
push
lock
jae
int
pop
stos
insl
mov
jb
aas
inc
cmp
or
or
xchg
cld
iret
lock
jle
push
push
stos
pop
mov
call
or
push
pusha
pop
mov
inc
ds
push
cmp
andl
lret
pop
leave
sub
mov
test
mov
cmp
jne
xlat
xor
lea
jg
dec
enter
xor
mov
sbb
xchg
and
into
hlt
xor
pop
fs
and
lret
push
ret
movlps
jmp
inc
inc
or
pop
lock
cmpsl
cltd
cmp
sti
adc
sti
jmp
mov
enter
add
bound
push
jo
and
popf
and
fs
mov
pusha
cmp
pushw
ret
fnstsw
cvtps2pi
cmp
dec
push
rclb
sti
jmp
and
in
and
adc
insl
dec
inc
ss
inc
add
stos
dec
in
dec
or
je
ss
nop
popa
fildl
jl
jecxz
lock
into
in
push
ljmp
and
stc
or
lret
ljmp
jns
inc
fs
int
push
imul
cmp
sar
xchg
test
fdivl
add
ds
sbb
push
mov
add
or
jle
push
xor
ret
pop
nop
pop
dec
out
fs
push
and
sbb
push
dec
jno
sbb
sti
and
xchg
pop
gs
adc
add
fmull
push
push
mov
pop
or
inc
orl
insl
xchg
scas
dec
enter
loopne
pop
lret
push
mov
fildll
je
mov
movb
push
dec
inc
test
adc
sub
push
mov
or
xor
shl
sahf
push
xchg
sbb
jle
push
or
loop
sarb
and
cli
mov
or
dec
pop
das
adc
ret
inc
dec
scas
and
in
ds
enter
insb
pop
mov
cli
pop
int3
test
mov
add
push
lods
fadds
insl
pop
mov
adc
push
jbe
cwtl
enter
inc
mov
inc
cmp
jae
sbb
cvtps2pd
mov
or
cmp
mov
or
or
adc
test
mov
adc
daa
mov
adcl
ret
cmp
or
les
sbb
aad
popa
push
dec
sbb
add
xor
adc
xchg
push
andb
inc
add
sbb
out
mov
add
and
inc
pop
jb
adc
cmp
xchg
xor
sbb
sub
jb
das
sbb
pop
lcall
sbb
sti
lea
push
mov
adc
push
stos
call
lods
pop
sbb
test
aam
mov
push
lods
call
clc
sbb
or
movl
jmp
fwait
pop
lods
shll
jle
or
jbe,pn
sbb
inc
and
inc
push
aaa
imul
add
mov
lret
dec
adc
call
lea
ds
rcrb
push
sub
mov
cli
sarb
push
jo
pop
jl
mov
adc
popf
lret
enter
ja
and
sub
jo
add
mov
inc
fs
or
sarl
pop
or
pop
mov
fsubrl
sbb
push
sub
outsb
sub
test
inc
testl
or
dec
cmpsl
push
bound
adcb
sub
push
push
xchg
cwtl
xchg
and
push
inc
adc
lea
incl
inc
inc
add
out
jne
test
andb
rorl
or
add
pop
push
cmp
rolb
stc
mov
imul
adc
orl
ljmp
loope
ret
mov
imulb
xor
lcall
push
inc
mov
inc
js
int
inc
jns
or
add
xlat
popf
lock
adc
fucomi
adc
outsb
lock
test
push
pop
push
in
or
mov
inc
or
mov
lock
scas
cli
daa
loope
cmpl
add
testb
inc
mov
je
mov
cmp
in
mov
cs
mov
or
and
sub
adc
sarb
orb
dec
or
leave
rclb
bound
pop
mov
mov
cmp
sbb
or
jo
jg
adc
icebp
and
rcll
cmp
lea
pmaxub
pop
sarb
into
sbb
mov
dec
js
mov
test
inc
rolb
xchg
cmp
cmpsl
icebp
movb
jnp
aad
push
lds
add
fnsetpm(287
inc
xlat
and
pop
dec
and
mov
mov
and
inc
lods
imul
or
and
out
or
or
mov
jb
xchg
adc
push
in
xchg
dec
adc
adc
scas
adc
mov
add
lds
sub
jle
mov
inc
add
or
push
sub
andb
push
and
cltd
adc
push
call
lea
push
mov
mov
loope
add
iret
inc
pop
xor
outsl
das
push
idivb
lds
sbb
out
sbb
mov
cmp
jno
push
jle
insb
cmpsl
dec
push
shll
add
sarl
cmp
and
mov
sbb
xchg
mov
pop
mov
add
cmpsl
test
addl
or
unpcklps
xchg
std
adc
jle
out
lods
sub
mov
stos
sub
push
dec
jo
ret
adc
lds
mov
dec
add
sbb
add
push
pusha
push
inc
cltd
or
push
js
aas
mov
clc
adc
or
or
inc
frstor
sub
std
testb
call
dec
or
and
xchg
rcr
and
sahf
push
mov
jecxz
mov
mov
fiaddl
xchg
insb
mov
cli
out
or
and
popa
and
mov
in
stc
fcompl
mov
jne
cmp
or
mov
xor
mov
jbe
jmp
in
aaa
and
ret
inc
loopne
sbb
mov
out
add
pop
je
sbb
rcll
add
sub
dec
lret
xor
xchg
xor
dec
clc
cli
push
mov
push
neg
and
sahf
into
add
aas
add
add
adc
xchg
pop
jo
inc
pusha
out
push
xchg
in
jo
test
push
mov
push
add
enter
out
inc
add
aam
jb
mov
sub
add
push
adc
lahf
push
pop
jo
inc
sbb
arpl
call
sbb
cmc
sub
jnp
push
lock
cmp
andl
popa
insl
or
mov
xor
add
xor
sbb
das
add
cmpsb
les
add
mov
add
cmpb
nop
test
fldenv
add
and
fcoml
rcl
ds
dec
cwtl
add
add
call
xor
filds
fldt
imul
and
scas
sub
outsl
in
in
xor
dec
or
scas
mov
pop
push
stc
inc
mov
out
cli
stc
push
ret
testl
addl
xor
or
dec
mov
mov
test
mov
or
mov
popa
adc
add
pop
leave
sbb
jb
inc
repz
loop
cmp
pop
and
cmove
cmp
mov
daa
orl
adc
fsubrl
add
adc
push
and
add
movsb
in
test
mov
mov
sbbl
lcall
mov
fs
dec
push
jle
popf
inc
jg
stos
push
jl
or
push
pop
and
inc
and
cmp
shl
adc
jno
mov
or
cmp
idivb
add
nop
lret
js
xor
insb
cmp
xor
aaa
stos
sub
pop
cmpsl
adc
call
and
xor
out
fsts
or
adc
sub
lock
int
int3
cmpb
xor
xchg
add
popa
aas
push
fisttpl
inc
inc
xor
cs
dec
add
loope
addb
rorb
or
sbb
jb
stos
mov
dec
pop
push
sub
mov
or
pop
ret
inc
les
jns
inc
mov
sub
add
test
add
pop
or
pushf
movsl
mov
add
nop
cmp
pop
ss
dec
addr16
xchg
inc
xor
sub
and
xchg
xor
jmp
pop
xor
stc
jmp
jnp
ret
add
jbe
int
cmp
xchg
and
mov
xor
leave
inc
pop
pop
aam
xlat
adc
dec
inc
mov
mov
dec
outsl
sub
unpcklps
movsl
sub
jecxz
mov
sbb
push
cmp
orb
xor
jecxz
sarb
adc
cwtl
pop
ds
dec
scas
lcall
sub
dec
pushf
out
inc
rorb
fs
repz
mov
inc
fdivrs
out
jle
and
rolb
jle
mov
or
test
mov
shlb
sub
rcrb
out
xor
or
dec
add
mov
insb
mov
iret
subb
mov
inc
add
pop
push
push
push
aaa
and
add
loopne
adc
sarb
aad
cmp
add
adc
lahf
add
pop
in
dec
dec
outsb
out
rcl
aam
popa
inc
mov
mov
mov
adc
adc
push
pop
movsl
adc
test
fcomip
mov
jl
or
out
pop
fsubs
adc
stos
add
inc
inc
fwait
adc
notl
daa
cltd
aam
adcl
inc
sbb
int3
mov
pushf
dec
popf
xchg
cmp
mov
add
add
sahf
xchg
sub
add
loopne
popl
pop
add
and
lods
dec
cltd
rcrb
pop
or
inc
dec
push
nop
aam
je
or
adc
xor
mov
pop
arpl
adc
aam
inc
adc
pop
sbb
test
adc
mov
sub
jo
shrb
adc
test
push
clc
mov
pop
pop
test
sub
ror
push
shrb
pusha
dec
pusha
lods
mov
cmp
jmp
jo
and
xchg
and
das
xor
lcall
dec
and
jae
int
dec
ret
dec
push
adc
mov
and
addr16
mov
test
push
xor
dec
push
mov
popl
xlat
pop
pop
cmpsb
add
test
push
loopne
xchg
enter
or
or
fs
adc
adc
jbe
inc
sbb
or
das
xor
ret
nop
aas
adc
arpl
adcb
loopne
cmp
push
test
add
add
xlat
inc
pop
xchg
push
xchg
push
je
jnp
pop
and
cwtl
loop
cmp
call
mov
in
cs
and
inc
sarl
push
imul
out
mov
dec
je
rclb
das
mov
mov
sub
cmpl
daa
push
inc
subb
nop
lahf
sbb
ljmp
mov
lea
shlb
jmp
mov
fildll
lds
imul
or
xchg
lret
xchg
pop
nop
inc
sub
add
pop
repnz
push
pslld
cmpl
xchg
lock
popa
pop
popa
xchg
add
adc
sub
loop
xor
arpl
push
dec
jns
xlat
sub
mov
xchg
fsubrs
cmp
pusha
add
push
adc
or
push
push
mov
push
lock
pop
out
fildl
lods
cmp
mov
jae
adc
cmpsb
ss
das
dec
clc
xor
icebp
cld
xlat
rorb
aad
mov
dec
pop
add
pop
sarl
xchg
and
inc
mov
or
push
imul
push
dec
adc
ret
aas
lds
jmp
leave
inc
dec
add
sub
popa
and
cwtl
sbb
push
cmp
sbb
sbb
push
cmp
add
push
int3
sbb
pop
adc
in
bound
mov
cli
jne
imul
and
inc
or
mov
dec
test
adc
mov
push
mov
fldenv
mov
push
or
cld
inc
test
mov
add
mov
jmp
andb
std
outsb
mov
pop
pop
je
test
std
loope
or
and
test
pop
or
int3
push
jne
insb
sbb
push
movsb
nop
lahf
dec
lock
ss
xchg
test
mov
push
push
xorb
jb
add
loopne
sub
clc
jo
push
sub
and
add
pop
movsb
inc
les
jns
xchg
or
out
ja
arpl
mov
dec
andl
mov
push
inc
add
das
mov
rorl
das
adcl
call
adc
lods
pop
cmpsl
sti
add
sbb
fdivrl
sub
pop
add
mov
insl
rdmsr
mov
and
in
dec
or
add
dec
rcrl
sbb
inc
std
js
ret
cmpsb
mov
pop
add
loopne
ljmp
add
cmc
pushf
test
fadd
mov
inc
and
xor
testl
dec
inc
xchg
es
xlat
push
pusha
dec
pop
roll
push
ret
jmp
aad
add
rcl
mov
pop
lahf
dec
negl
cld
cli
cmpsb
cmp
incb
cmpb
and
push
fstpt
pop
int3
jo
in
sbb
fs
aas
adc
rorb
jl
or
popa
xchg
sub
or
in
add
push
add
pop
xchg
pop
jl
adc
xor
aam
daa
and
leave
mov
xor
out
or
cmp
mov
cmp
outsb
cmp
inc
shl
mov
jne
xor
jo
movsl
or
ss
lock
inc
popa
inc
mov
repz
cmp
cmpl
add
scas
inc
add
xor
inc
mov
mov
push
xchg
and
add
inc
sbb
lock
mov
push
cmpb
fimull
orl
into
or
xchg
or
sbb
mov
add
inc
push
idivl
dec
sbb
idivl
cmpl
mov
test
dec
sub
add
push
pop
mov
jle
or
call
xor
imul
xor
call
dec
ret
stos
cmpsl
and
lods
fiaddl
lea
jno
in
or
push
hlt
lods
add
cmp
ljmp
mov
mov
lock
push
or
sbb
and
sbb
inc
lea
adc
sub
adc
ss
lock
leave
dec
or
inc
push
cli
das
cmpsb
jmp
cmp
das
dec
add
xchg
and
xor
xchg
and
add
adc
sbb
dec
xor
sbb
add
adc
fmuls
fmull
inc
or
mov
rorl
inc
bound
js
imul
outsb
xchg
jno
sub
or
sbb
xor
add
push
and
cwtl
mov
mov
rcrl
mov
inc
add
sub
mov
sub
lcall
and
fadds
jnp
add
add
dec
xor
pusha
push
and
xchg
imul
cmp
jl
das
sarb
test
push
push
mov
insl
shll
mov
push
push
xor
mov
scas
test
xor
addb
mov
mov
lock
inc
add
add
jno
bound
inc
pop
inc
subl
mov
out
cmpl
fcmovnbe
scas
cmp
movsb
neg
in
scas
add
loope
mov
lret
mov
push
add
sbb
xchg
push
and
cmovle
gs
inc
loope
and
pop
sbb
bound
hlt
push
push
push
push
stos
in
fimuls
push
popa
or
rcll
subb
loopne
xor
cmp
add
test
inc
or
push
sbb
lock
enter
sbb
rorb
dec
fsubs
mov
or
cmp
xchg
and
fcomip
popa
add
fidivl
arpl
pop
fisubl
or
sbb
sub
test
push
das
push
xor
or
call
aaa
mov
jae
jp
jns
pop
add
pop
adc
cld
cmp
adc
or
rolb
movsl
cmp
mov
adc
and
jl
adc
test
imul
mov
jne
mov
sbb
add
out
and
test
adc
lea
add
push
push
add
fiaddl
rolb
push
mov
test
pop
adc
add
jo
clc
fucomip
mov
icebp
adc
xor
push
scas
mov
pushf
lcall
inc
andb
sti
stos
sub
stos
mov
daa
jo
add
push
xchg
fidivrl
pop
adc
pop
cwtl
js
in
test
adc
cld
mov
dec
add
inc
sbb
clc
mov
and
loopne
jmp
mov
fwait
mov
sbb
add
outsl
jecxz
cmp
loope
or
inc
in
imul
mov
sub
dec
mov
out
mov
lods
shr
sbb
cltd
test
cmp
pop
icebp
xorb
test
scas
or
or
xor
xchg
cmc
xor
adc
push
jmp
pusha
push
and
or
cmp
daa
lock
cmpsb
jnp
xchg
mov
push
or
insb
loopne
jmp
mov
bound
inc
test
and
cmp
jle
sbb
and
xlat
jae
or
loopne
or
sbb
dec
mov
sahf
test
and
and
adc
sub
push
sub
je
mov
xchg
mov
mov
orl
sarb
xor
ret
push
out
fcompl
je
aaa
mov
or
mov
or
sbb
cmc
aam
or
mov
or
dec
mov
lret
fimuls
or
decb
add
cmp
shrd
pop
pop
movsb
mov
ss
shl
cmp
scas
lahf
mov
cmpb
ljmp
mov
or
xchg
repnz
pop
inc
cmp
jg
sub
mov
loope
mov
sub
and
lods
pusha
sub
xor
shrb
push
mov
push
or
lods
inc
jo
iret
scas
mov
mov
inc
gs
add
cmp
pop
fcoms
das
push
mov
cltd
orb
mov
push
imul
or
sbbl
pop
shlb
mov
lahf
test
sub
pop
adc
cmp
je
push
mov
adc
pop
cwtl
mov
xor
dec
jecxz
sbb
outsb
cmpl
jmp
cmp
aaa
sub
call
mov
stos
push
movb
aad
cmpl
fidivl
sub
dec
mov
das
xor
imul
and
rcr
adc
insb
mov
cmp
inc
shl
add
ss
sbb
dec
xchg
fs
push
sbb
xor
jae
test
add
ret
cmpsl
adc
andl
dec
lock
sti
mov
jmp
or
xchg
pushl
rclb
in
push
xor
dec
pop
jae
clc
fistps
sub
or
add
xor
adc
lods
xchg
sbb
sahf
mov
inc
cmp
add
lds
rcll
sbbb
pop
fstpt
sub
pusha
xor
jne
inc
test
push
add
cmp
sbb
push
adc
insb
stos
loop
push
in
pop
pop
mov
or
sbb
jno
or
mov
lahf
nop
xor
xchg
pop
inc
daa
or
jae
test
mov
or
cld
fists
js
rorb
lods
es
int3
jo
mov
dec
inc
push
or
outsl
push
sbbb
pop
jmp
jne
fcmovnbe
jnp
jo
xor
enter
push
popa
addl
cmpsl
ja
cmp
testb
mov
cmpl
enter
pop
testl
rol
and
pop
or
xchg
ret
nop
jbe
mov
ret
push
dec
shrb
test
imul
stos
fcoms
cmp
mov
cwtl
enter
jecxz
inc
cmp
jp
pop
pop
xlat
jbe
mov
xchg
xchg
ljmp
push
dec
xchg
addl
pop
gs
add
enter
pop
addl
mov
inc
int3
lds
inc
ret
icebp
inc
daa
fdivs
and
xor
sbb
xor
lock
pop
or
cld
jne
rolb
daa
mov
xor
adc
pop
ss
xchg
or
mov
dec
cmpsl
movsb
stos
push
add
sbb
or
shll
mov
jno
or
push
cmp
lea
push
jno
int
jb
ret
sbb
cmp
push
mov
mov
fdivrl
lock
pusha
jmp
int
ss
sarl
or
repz
sbb
lsl
and
dec
xor
push
in
gs
cmp
adc
inc
and
ss
xor
and
jmp
sbb
ret
inc
inc
loope
adc
cmp
xchg
or
dec
push
adc
xor
pop
subl
addl
cmpsl
mov
les
repnz
fisubl
dec
lahf
stos
je
sahf
add
add
cmpsl
fists
adc
mov
jno
loope
ret
dec
cmp
insb
mov
popf
inc
and
push
clc
cwtl
or
ret
addl
xor
dec
inc
notl
es
xor
push
and
leave
stos
sbb
xchg
lret
mov
sarb
sbb
test
xor
adc
roll
pop
cmp
andb
push
insb
pop
popa
sub
push
inc
notl
add
rclb
add
ss
pop
ficompl
je
shll
bnd
imul
orb
mov
mov
pop
or
in
sahf
push
lods
inc
xchg
mov
sbb
xchg
and
lcall
cld
jne
cmpb
add
add
jl
dec
movsl
mov
mov
lock
call
inc
mov
cmpsl
sbbl
inc
pushf
push
jp
rolb
outsl
in
push
adc
popa
and
cs
jp
inc
jns
add
jo
fs
cs
push
mov
and
cmp
sub
ret
pop
inc
pop
aas
lock
sub
sti
mov
cs
int
sbb
test
cmp
add
push
adc
insb
loopne
subb
les
mov
and
out
xor
sub
jne
roll
adc
sub
sub
push
and
dec
dec
outsl
fucomip
xorb
and
push
dec
sbb
add
sti
pop
mov
cmp
jne
lea
pop
sbb
mov
test
sub
sbb
adc
push
popa
insb
mov
inc
lcall
lret
subl
pop
adc
mov
xor
sub
in
add
in
jl
push
add
push
fs
lcall
sub
mov
add
insb
mov
pop
add
scas
and
and
mov
cmp
mov
clc
jb
cmovg
pop
and
lock
pop
pop
push
imul
aad
aad
xchg
notb
or
push
pop
in
insl
push
inc
mov
adc
adc
and
pop
cmp
and
mov
inc
and
aam
adc
mov
xchg
or
and
pop
aaa
lock
mov
sbb
or
call
mov
mov
add
sbb
dec
test
xor
jl
pop
or
or
push
clc
xor
stos
ljmp
aam
stos
repz
pop
lcall
mov
aad
xchg
adc
int3
xchg
jle
xchg
sbb
cltd
push
inc
jo
and
cmp
mov
jge
sbb
mov
les
mov
fs
movsb
ss
lock
js
mov
and
fmull
scas
add
push
js
dec
in
test
adc
fistps
jb
cmc
mov
lods
sbb
test
jle
jg
xlat
inc
cmp
push
push
cmpsl
lock
sbb
or
cmpl
pusha
outsl
add
mov
jne
push
das
add
fidivs
add
jl
cmp
or
adc
sub
out
adc
adc
pop
aas
add
fisttpll
pop
add
pop
jo
jmp
andb
adc
dec
push
test
and
or
mov
inc
inc
cmp
sbb
or
fwait
daa
in
cmp
pop
lcall
lcall
pop
xchg
cmp
sub
adc
movsb
add
dec
or
cmc
sub
in
jns
and
ljmp
mov
jmp
pushf
pop
xchg
xor
ficoms
mov
scas
pushf
xchg
rcll
sub
mov
add
xor
add
pop
pop
sbb
dec
imul
or
or
jmp
cld
push
lea
lea
shrb
push
std
cmp
add
rolb
mov
pop
xchg
and
pop
and
cmp
jne
adc
jnp
add
scas
dec
push
dec
mov
cmp
lods
cltd
lea
je
int
popa
pop
add
sbb
les
and
sbb
pop
test
push
inc
inc
inc
cs
aas
add
and
jmp
mov
sub
push
sub
pop
or
jbe
add
sbb
add
mov
mov
mov
jne
in
push
ret
xchg
or
jne
lea
xchg
mov
push
mov
rolb
pop
shlb
daa
sub
xchg
rcrb
fnstsw
add
in
clc
subl
push
inc
dec
in
pop
subl
wbinvd
push
sahf
pop
loop
pop
sti
or
push
fisubrs
add
mov
sbb
daa
sub
shlb
jns
pop
or
mov
rclb
dec
fisubl
mov
and
adc
test
mov
jne
ja
push
or
cld
fidivl
lahf
subb
cwtl
fcompl
xor
xlat
sbb
loope
push
jno
mov
sub
rcrb
jnp
sub
push
jge
ljmp
or
insb
clc
push
xchg
push
add
inc
ret
fwait
dec
add
push
inc
lret
sbb
adc
add
or
sub
movsb
testb
add
mov
faddl
push
mov
pop
or
mov
cmpxchg8b
cwtl
jl
aam
stos
adc
mov
sub
sub
jne
lea
mov
push
loop
mov
push
enter
leave
rolb
lods
inc
or
xor
rorl
call
push
shll
and
push
in
repz
and
xchg
orb
push
mov
clc
mov
dec
mov
movsl
sbb
add
incl
hlt
add
jns
out
push
inc
mov
nop
cli
pop
jmp
mov
add
in
pop
mov
sub
lods
movsl
not
cmp
and
outsb
xchg
lock
mov
mov
clc
cmpsl
fisttpll
mov
popa
and
and
xlat
inc
popa
mov
xchg
dec
xchg
xor
loope
movsb
fcomps
xchg
lea
cld
lret
xlat
cmp
or
int3
pop
movsb
push
push
mov
rcr
adcl
sarb
pop
hlt
mov
adc
or
pop
mov
cltd
push
and
cli
push
or
and
inc
cmpl
jne
add
add
test
adc
inc
cmp
loop
pop
sbb
xchg
dec
pop
aaa
sub
cli
fcomp
sbb
sub
cmp
mov
inc
cmp
je
js
and
insb
fdivs
popf
xor
sbb
lods
out
dec
and
dec
aas
fdivrs
std
or
fiaddl
and
or
and
sbb
cs
paddusw
int3
adc
mov
insl
adc
les
push
movsb
mov
xchg
xor
mov
js
xor
test
repnz
pop
lcall
xorb
das
mov
js
cmp
popf
shlb
daa
mov
pause
fnsave
jno
add
loop
call
or
outsl
jmp
or
lock
sbb
cld
xorl
cmp
mov
mov
cli
sti
popa
adc
push
mov
sbb
iret
in
mov
sbb
shlb
fcmove
in
pusha
test
push
nopl
or
add
ja
add
clc
xchg
sub
xor
and
add
mov
je
arpl
mov
push
lods
fistpl
je
mov
shl
orb
dec
and
cmp
fidivl
dec
push
mov
shrb
or
mov
jbe
ficoms
sbb
sbb
fbstp
inc
out
mov
mov
jmp
pop
fdivrs
lahf
inc
jne
mov
dec
sbb
and
and
jne
fmuls
ret
xchg
jnp
dec
insb
dec
lea
jno
and
gs
jbe
fisttpl
bound
pop
or
push
or
movsb
sub
sub
bound
mov
das
sub
inc
mov
push
or
jl
jo
add
mulb
cmpb
add
xchg
mov
in
cltd
adc
and
adc
or
cmp
dec
iret
xor
pop
or
gs
sub
sbbb
or
mov
sbb
xchg
jne
sub
cmc
mov
inc
aaa
idiv
push
shlb
repz
test
push
movb
movb
test
adc
sbb
mov
push
sbb
out
rorl
pop
and
sbb
cmp
adc
enter
or
mov
jns
pop
mov
cmpl
adc
inc
inc
je
jg
adc
inc
test
cmpb
and
mov
mov
pop
mov
cmp
shlb
and
andl
pop
xchg
lea
xchg
stc
mov
push
inc
fidivs
dec
cmpb
dec
out
push
cmp
sub
adc
mov
push
or
mov
dec
test
push
sub
ljmp
mov
add
mov
add
sbb
lret
sbb
pop
movsb
imul
or
orl
in
xchg
xor
xchg
in
aaa
pop
push
ret
es
adc
jo
cmp
and
iret
inc
cmp
out
add
decb
jnp
adc
in
xor
cmp
cmc
js
xchg
aam
push
and
aad
or
jae
sbb
or
jmp
call
pop
ret
jne
push
cmp
adc
lds
dec
adc
pop
sub
mov
push
jbe
sub
add
sahf
insb
pop
jo
pop
rcll
xchg
and
inc
or
pop
out
es
xor
addb
pop
or
leave
mov
popa
sbb
add
xchg
sbb
xorb
iret
xorl
cmp
cmp
flds
mov
ret
jecxz
add
pop
mov
subb
es
int3
je
xor
mov
xorb
repz
gs
addr16
and
inc
adc
or
and
pop
imul
mov
pop
test
sub
rcrb
mov
and
fsubrs
pop
stos
enter
cwtl
add
add
xchg
out
loopne
adc
push
cwtl
pop
xchg
or
push
rcrl
push
dec
or
lds
xor
push
dec
dec
xor
or
adc
push
aaa
outsl
lds
cmp
cmp
addr16
nop
push
rcrl
out
imul
add
idivb
push
xlat
cs
mov
fwait
add
xchg
ret
divb
icebp
outsb
scas
shlb
pop
sbb
mov
sbb
push
sbb
jmp
cmp
or
xor
aaa
add
xchg
dec
jl
pop
pop
testl
nop
notb
adc
fildl
push
sbb
push
mov
paddsb
cld
inc
dec
xor
and
pop
pop
inc
je
imul
sbb
mov
push
push
test
dec
push
inc
pop
scas
enter
add
cli
inc
push
les
mov
cmp
fcomps
xchg
xchg
ljmp
xchg
dec
arpl
jecxz
mov
sub
adc
aad
rcr
mov
pushf
pop
dec
push
sbb
jmp
mov
xor
in
push
add
lea
and
dec
jb
or
adc
or
and
inc
js
pop
push
mov
jo
or
sbb
push
add
adc
and
fimuls
mov
mov
dec
inc
cwtl
in
imul
mov
repz
mov
inc
aas
mov
pusha
aaa
idivb
xor
xor
jo
add
jo
jge
shlb
sahf
push
lcall
mov
mov
inc
test
loope
rcl
mov
or
push
sarl
adcl
insb
insb
sub
das
inc
jmp
cli
data16
or
sub
add
dec
inc
push
mov
and
test
inc
or
popa
inc
out
lret
clc
pusha
xchg
add
add
imul
fldt
or
enter
and
xor
cmp
movl
pcmpgtd
ret
and
xchg
testl
or
mov
pusha
cmp
push
or
add
add
mov
xchg
xchg
dec
pop
popa
test
cmp
or
sbb
jecxz
xchg
xor
or
subb
add
jecxz
and
lret
inc
loopne
pop
mov
rcrl
sbb
and
push
scas
inc
sbb
dec
ja
lock
sarl
and
sub
int3
cmp
adc
push
add
jmp
mov
xor
cltd
xor
cmpsl
call
fsubl
or
sub
or
push
call
xor
adc
bound
fwait
or
and
xor
adc
or
ss
cmp
jnp
adc
test
mov
xchg
movb
test
scas
daa
loopne
je
jae
imul
or
inc
cmp
and
jno
or
mov
daa
mov
call
lock
decl
or
dec
add
stc
add
xchg
or
pop
xchg
lds
mov
aaa
add
popf
jno,pn
roll
push
mov
cmpsb
mov
add
adc
adc
add
sbb
lods
pusha
add
cmpl
rcr
shr
adc
and
fs
inc
rorb
aaa
inc
fisubrl
add
jne
outsb
adc
xchg
add
or
add
sub
mov
pop
pop
pop
or
or
push
gs
push
mov
mov
lods
out
les
or
sbb
xor
add
fistpll
push
or
inc
test
jno
mov
mov
xchg
fisttpll
or
or
pop
xchg
dec
aaa
jg
fcom
std
mov
or
and
inc
add
push
shlb
sbb
int3
jecxz
shlb
jbe
movsb
outsb
inc
or
or
push
in
mov
lea
jl
jo
xchg
js
adc
hlt
push
mov
xlat
leave
pop
rolb
mov
js
mov
add
push
ficoms
jle
in
mov
adc
mov
cmp
sub
or
sarl
and
stc
loopne
pop
adc
lea
add
cmpb
test
push
flds
icebp
mov
add
push
add
int3
xor
pop
dec
inc
cmp
pop
or
or
cmp
mov
inc
test
rcrl
js
push
and
insb
stc
pusha
repz
adc
add
and
fwait
or
xchg
imul
shr
sbb
mov
ja
dec
inc
xchg
jbe
shlb
dec
dec
and
xchg
sub
lahf
es
inc
add
push
testl
sub
in
shlb
push
xlat
or
imul
dec
imul
jp
xchg
rorb
sub
fiaddl
lea
pop
push
cli
sbb
inc
sbb
sub
clc
push
inc
sub
cmp
jg
inc
loopne
pop
pop
cltd
add
pop
scas
sub
cmp
adc
add
jo
out
add
inc
cmp
inc
pop
addl
jmp
sbb
jle
xchg
mov
in
test
jge
fsubl
xorl
dec
push
add
add
cmp
sbb
push
dec
jno
mov
or
mov
add
aas
and
jo
or
adc
xchg
xor
call
pop
out
sub
xchg
pop
adc
loop
shlb
or
shlb
inc
inc
push
mov
dec
xor
adcl
jnp
test
jae
sbb
pop
je
sbb
push
pop
es
xlat
mov
jo
loope
cmp
dec
xchg
cs
and
inc
cs
nopl
add
mov
xchg
rorb
adcl
jae
jl
mov
or
shl
mov
arpl
add
xor
addr16
inc
pop
sub
sbb
sarl
push
aas
cmc
mov
add
std
imul
adc
imul
add
xchg
in
dec
push
mov
jp
sub
leave
and
dec
call
sarl
add
cwtl
hlt
repz
xchg
mov
rolb
sarl
add
xchg
insb
mov
clc
dec
aam
inc
sbb
es
dec
and
mov
test
or
dec
in
cmp
and
mov
jo
xor
mov
cltd
shlb
ss
faddl
sub
sub
imul
jne
jmp
mov
cmpsl
jnp
jge
jge
imul
pop
pop
js
jge
sbb
fs
cmp
fmuls
push
dec
inc
pop
orb
adc
pop
add
inc
jp
sub
xchg
jecxz
cmp
outsl
loopne
ficompl
cli
sub
cli
sti
sbb
xchg
inc
pop
jne
mov
sub
add
test
sbb
xchg
xchg
pop
cld
clc
loopne
mov
dec
or
and
pop
cmp
xor
jo
mov
clc
jmp
xchg
int3
xchg
jbe
dec
xor
sub
js
add
cmp
push
pop
mov
mov
in
imul
test
clc
cmp
fdivs
dec
clc
jae
jp
adc
cmp
movb
test
fisttps
and
ss
mov
jmp
testl
xchg
and
and
dec
jnp
add
or
cmp
and
xchg
mov
aas
imul
add
nop
dec
lods
push
mov
xor
push
pop
adc
movsb
fiaddl
dec
or
or
sub
lock
gs
inc
cmp
and
lods
mov
and
mov
das
inc
jo,pn
sub
movd
bound
sub
or
pop
inc
andl
add
inc
add
fcoms
test
imul
adc
das
repz
mov
daa
daa
pop
mov
call
inc
inc
dec
inc
add
call
xor
inc
daa
push
mov
je
orl
je
fistpl
jno
mov
popa
and
add
popa
sub
pop
cs
int
sbb
jns
pop
cmp
inc
cmp
outsl
xchg
jb
adc
nop
cs
int3
inc
or
mov
adc
lahf
cmp
ffree
stc
xor
daa
ss
jmp
mov
pushf
sbb
xchg
adc
imul
addb
push
add
movsl
jns
inc
insb
lock
adc
and
scas
arpl
bound
add
xor
daa
int3
subb
mov
adc
jmp
cmp
push
inc
mov
adc
mov
fisttpl
shll
daa
cmc
por
add
lea
movb
fs
add
aaa
inc
push
dec
adcb
mov
add
negl
or
cmp
jecxz
mov
jne
and
cmp
cmp
adc
jno
inc
sub
lods
mov
push
or
dec
adc
mov
test
add
dec
movsb
hlt
push
push
cltd
pop
mov
and
adc
xchg
dec
and
push
dec
js
mov
je
roll
add
and
les
mov
push
push
or
cmc
push
inc
pop
sbb
js
add
dec
cmp
or
psllw
or
sub
sub
sub
pop
outsl
movsl
xor
ret
fisttpll
popf
shrb
dec
je
movsl
mov
pop
inc
push
inc
ss
daa
adc
fimull
add
lods
dec
xor
adc
push
hlt
cmp
nop
push
jns
xor
rclb
xchg
cld
push
test
adc
mov
test
movsb
xchg
pop
hlt
movl
out
pop
inc
adc
aam
pop
leave
aaa
rcr
shrl
fsubrs
outsl
pop
jge
or
aam
dec
xor
popf
xchg
dec
and
and
fiaddl
dec
ret
push
out
xor
inc
fmull
sbb
inc
sbb
and
rolb
sub
mov
data16
dec
imul
mov
repnz
cmp
daa
mov
add
faddp
jno
loopne
js
push
in
dec
mov
or
push
dec
lcall
cmpb
insb
lods
add
mov
cmp
mov
add
pop
pop
mov
movsl
dec
cltd
hlt
in
pop
and
pop
xor
je
xor
into
addl
test
out
mov
push
or
inc
or
scas
shlb
pop
jns
xlat
add
insl
inc
mov
or
movsb
loope
loope
je
pop
aam
push
aam
xchg
pop
mov
cmp
ret
mov
fwait
lods
dec
shlb
or
mov
sbb
adc
add
xor
xlat
xchg
mov
es
loope
inc
packuswb
ret
subl
inc
mull
or
or
das
jne
xor
dec
add
inc
and
lahf
xchg
add
sub
cmpsb
repz
pop
and
push
repz
adc
inc
clc
pop
lods
sub
pop
and
nop
dec
adc
sub
xchg
push
sahf
xchg
and
mov
daa
sub
ds
in
mov
sbb
or
add
sbb
lahf
sbb
and
or
push
or
cmp
cmpsl
inc
push
dec
or
mov
loope
or
or
pop
mov
mov
repnz
dec
das
rcll
rcll
or
mov
ds
push
dec
pusha
and
jmp
sti
ret
cli
dec
sbb
into
and
or
shlb
fildll
inc
cmp
inc
and
lea
fmuls
mov
andl
add
in
and
xor
leave
ficomps
pusha
mov
stos
adc
lea
adc
adc
scas
lods
rclb
jo
pop
ret
add
inc
loope
sbb
adc
add
push
push
push
push
cmp
push
lock
and
out
loopne
push
cwtl
adc
xchg
push
push
sbb
jno
inc
dec
xor
sahf
xlat
rclb
adc
mov
mov
lret
push
push
jg
pop
mov
and
scas
lea
mov
xor
push
ljmp
orps
inc
pusha
leave
cmp
imul
enter
add
sub
out
insb
pop
ret
js
mov
call
out
sbbl
pop
lods
push
xchg
fimuls
imul
sub
insb
mov
daa
pop
adc
leave
sbb
inc
push
stos
adc
inc
xbegin
gs
xor
ret
and
dec
mov
pop
orl
inc
xchg
sub
movsb
das
sub
mov
jmp
popa
sub
rol
stc
push
xchg
ja
sub
pop
add
leave
loopne
js
sbb
ja
xor
imul
fistpll
imul
or
push
or
mov
adc
dec
js
add
and
sub
insl
test
pop
cmp
mov
mov
lahf
pop
js
mov
sbb
ret
or
mov
mov
pop
adc
movb
or
clc
jmp
push
pop
add
inc
or
and
jg
add
cmpsb
xor
xor
jp
pop
or
flds
push
clc
sti
adc
push
adc
xchg
dec
mov
dec
and
mov
mov
daa
in
add
rcl
adc
in
aas
rcll
xchg
or
push
or
aaa
push
mov
fmull
sbb
lock
add
jg
movsl
dec
xor
adc
dec
adc
jne
mov
js
mov
adc
sub
cwtl
clc
dec
add
mov
dec
loope
cmpsb
jg
roll
or
inc
push
and
xchg
in
shrb
pop
lss
jle
mov
jo,pn
add
or
adc
int
out
push
sub
sub
andl
xchg
mov
and
enter
adc
mov
sbb
xchg
nop
mov
and
and
push
adc
mov
or
mov
ss
xor
jae
push
mov
incb
and
enter
adc
cmpsl
adc
push
pop
movsb
icebp
cmc
sub
lods
rolb
push
mov
xchg
xchg
jo
leave
repnz
xor
adc
add
xchg
mov
fcoms
mov
dec
or
mov
in
lahf
ficoms
aad
pop
mov
or
pop
or
mov
dec
in
movsb
push
jbe
nop
ret
jmp
jl
xchg
out
js
mov
or
or
insl
fisubl
xor
hlt
push
iret
cmp
sbb
jae
arpl
push
insl
pop
xlat
jle
sbb
adc
sbb
or
sub
pop
pop
pop
push
test
int3
dec
adc
pop
roll
mov
fs
adc
lds
inc
rcl
out
xor
jmp
add
push
out
xorb
cmp
jmp
pop
cltd
ret
jecxz
cli
cmpsl
inc
pop
mov
scas
cs
inc
push
cli
cmpsl
or
mov
adc
cmpsl
fwait
add
add
jge
mov
cmpsl
clc
fs
test
hlt
hlt
lcall
dec
xchg
cmp
push
fwait
push
pop
mull
cmp
pop
cmp
movsl
daa
int
arpl
pop
int
popa
cmp
or
adc
inc
bound
mov
mov
mov
or
inc
pop
or
in
and
inc
int
in
or
lahf
daa
ficompl
xchg
add
int3
sub
mov
push
sti
sub
pop
sub
or
mov
push
imulb
mov
xchg
mov
insl
loope
pop
adc
and
mov
ret
xchg
or
mov
adc
or
add
pop
loopne
aad
push
loope
cmp
fsubr
lret
xchg
test
or
adc
mov
aam
push
movl
sbb
cli
loope
pop
imul
xchg
sbb
inc
es
js
and
push
push
sbb
es
pop
pop
pop
inc
and
cwtl
fwait
lcall
fcoms
and
inc
jl
mov
in
push
and
mov
cmp
fadd
insb
in
lahf
pop
lcall
mov
add
outsb
test
rol
test
mov
mov
cs
push
xor
push
cs
js
sub
movsb
sub
lds
pop
cmp
pop
inc
jmp
push
in
pop
add
lds
push
gs
dec
jnp
ret
ss
dec
dec
dec
jb
and
mov
adc
dec
inc
or
pop
jne
push
push
jb
xchg
cs
push
pop
repnz
dec
push
ss
push
jo
adc
add
cmpsb
push
fimull
mov
mov
fiaddl
insb
lcall
iret
or
xchg
push
fbld
rcrb
movsl
push
stos
dec
les
fidivl
sti
pop
add
push
pop
js
and
and
dec
adc
or
fisubl
fidivrs
mov
aas
cwtl
sbb
dec
rcrl
mov
cmp
pop
lret
jl
or
jle
and
test
and
je
inc
arpl
aas
push
adc
pop
test
repz
push
aas
pushl
pop
loopne
add
mov
xor
mov
pop
or
jmp
adc
stos
cmp
pop
adcb
cmp
cmp
sub
mov
adc
jp
out
dec
cmp
inc
or
lea
mov
clc
call
jo
cli
mov
inc
push
fstps
insb
mov
pop
inc
add
push
pop
mov
dec
push
loope
jo
inc
and
mov
mov
divl
aas
pusha
xchg
add
outsb
adc
outsl
xchg
int
pop
add
sbb
rcr
or
cmp
test
rolb
enter
test
pop
lock
dec
add
cmp
cld
rolb
cmp
call
sti
adc
test
cmp
sbb
dec
push
mov
out
dec
and
jl
sbb
rcrb
inc
ja
dec
inc
out
add
jo
and
sbb
sub
in
lea
inc
out
es
ljmp
xor
out
cmp
repz
lods
shlb
adc
aam
outsb
shll
xor
testb
cmp
inc
sub
arpl
cmc
adc
add
sbb
add
and
and
and
js
jmp
scas
ret
jmp
sbb
push
sub
add
std
mov
jl
das
cmpl
xor
mov
fsubs
push
jae
pop
cltd
in
lock
pop
pop
pop
pop
inc
movb
pop
push
pop
add
dec
or
adc
sbb
dec
adc
push
fildl
push
das
mov
test
pop
and
jae
dec
pop
out
sub
jne
clc
pop
pop
push
push
xchg
mov
lret
pop
mov
add
inc
jno
sub
sub
call
cmp
arpl
sub
and
adc
mov
dec
jno
inc
dec
rolb
jl
enter
cs
mov
mov
test
add
in
test
sbb
xor
sub
dec
xchg
js
dec
or
and
inc
aaa
mov
imul
mov
add
or
xor
subl
mov
mov
pusha
movsb
mov
aas
and
movsl
jmp
movsb
in
xchg
push
mov
cmp
fwait
fs
fidivs
inc
decl
cltd
xorb
dec
test
xchg
add
fnstenv
xchg
pop
sbb
daa
mov
nop
mov
cmp
mov
pop
sbb
sub
int3
sbb
ret
push
fisubs
xor
lds
loope
in
test
sub
sbb
rorb
mov
shlb
adcb
sub
push
dec
shll
shlb
push
gs
sahf
and
dec
jmp
pop
or
scas
dec
cmp
imul
sub
pop
dec
inc
add
cmp
addr16
shlb
sbb
inc
dec
sub
addr16
insl
dec
jbe
push
dec
clc
pop
fldcw
xor
or
or
popa
add
xchg
dec
inc
or
sub
pop
dec
sub
xchg
lock
fdivrl
xor
jmp
xchg
pushf
add
cs
std
or
mov
clc
pop
jbe
sub
sub
cmc
xorb
jmp
inc
or
fcom
push
add
cmp
sub
ja
into
push
sbb
xor
subl
js
adc
mov
sbb
aad
pusha
mov
sbb
lret
xorl
rol
adcb
adc
in
push
cmp
je
sbb
cmp
and
je
repz
into
repz
sahf
scas
ror
ss
xchg
dec
push
sub
inc
push
push
ret
add
xor
lock
inc
sub
pop
add
fcomp
jmp
sbb
pop
mov
inc
test
add
pop
test
mov
je
mov
or
pop
cmp
mov
lock
in
push
push
sbb
pusha
mov
ja
aad
push
xor
mov
mov
dec
push
add
sbb
lret
and
ja,pt
movsb
cmp
popf
push
xchg
push
sbb
je
les
xchg
lret
dec
insl
or
mov
sub
push
xor
sti
pop
and
jnp
arpl
outsl
fimuls
ret
mov
push
adc
or
add
add
sbb
sub
lock
adc
or
inc
or
imul
xlat
cli
les
adc
arpl
xchg
cmp
jne
ja
or
adc
cmp
enter
call
adc
and
dec
jg
pusha
addl
pop
js
mov
inc
sbb
jae
test
mov
sub
dec
gs
sub
mov
cmp
mov
cmp
jae
mov
pop
xchg
add
stos
sbb
push
push
js
add
je
jge
pushf
mov
pop
movb
pop
dec
lret
movsb
mov
adc
mov
mov
push
cmpsl
fs
add
jno
xor
mov
adc
xchg
cwtl
pop
xchg
add
pop
add
aam
inc
adc
push
inc
xorl
mov
test
mov
lock
adc
jae
sarb
cmp
and
sub
sub
inc
adc
stc
decl
mov
sti
jl
xchg
adc
sub
sbb
ja
mov
mov
aas
adc
or
cmpsb
jnp
add
inc
mov
jge
push
mov
cmp
cmp
ret
popf
mov
loope
and
sbb
notb
mov
daa
pop
xor
xchg
adc
mov
push
or
lods
arpl
adc
push
push
popa
aas
lods
ds
push
jp
add
cmp
xchg
out
rorb
mov
add
je,pn
mov
dec
les
lret
je
icebp
xchg
rclb
pop
mov
mov
outsb
dec
std
cmp
icebp
sbb
inc
add
add
and
add
adc
bound
in
and
push
mov
mov
sub
xchg
pop
inc
pop
or
mov
dec
lcall
mov
and
or
mov
push
lods
rorb
xorb
pop
xchg
popa
cmp
mov
mov
sub
mov
jne
mov
test
pop
out
sbb
rorb
pop
mov
test
pop
out
and
xchg
mov
lahf
inc
push
push
adc
push
psubusb
add
jo
xor
imul
xlat
pop
xor
movl
jg
push
loop
pop
add
lds
adc
mov
adc
scas
pop
jl
adc
ja
loopne
adc
sbb
adc
xchg
and
in
dec
iret
or
and
lods
add
in
stos
xor
mov
fmulp
cs
xchg
add
lea
lret
aad
pop
cmp
mov
ret
js
push
addl
lcall
pop
sub
dec
adc
sbb
adc
mov
fistl
call
mov
sahf
sbb
fwait
push
mov
inc
es
xor
movb
jnp
mov
cmp
movsb
cmp
xchg
push
add
mov
inc
push
bound
ljmp
movl
cmpsb
or
js
and
out
dec
xorb
xchg
or
add
mov
push
ss
test
dec
aas
scas
push
rolb
cmc
push
mov
dec
cwtl
jns
js
popf
push
and
xchg
dec
dec
decl
xor
lret
jle
push
lea
sub
or
jp
lds
inc
mov
and
sbb
jbe
xchg
test
mov
xchg
push
or
pop
orl
xor
out
ja
inc
adc
adc
or
cmpsb
shll
fmull
jno
sbb
and
jge
jl
movsl
mov
mov
and
dec
in
cmpsl
aad
dec
fisttps
add
addb
push
sbb
mov
adc
std
pop
enter
in
fimuls
inc
inc
ja,pn
push
sub
cmpl
ja
sbb
and
mov
out
test
jge
fwait
xchg
cmp
adc
in
in
ja
shrl
push
push
mov
jo
xchg
movsb
and
addb
xchg
push
sub
ljmp
pop
dec
add
loopne
and
mov
lcall
adc
dec
sti
xor
adc
cwtl
dec
repnz
ret
mov
adc
cmp
xlat
add
xor
mov
or
aam
mov
addr16
mov
rorl
test
test
and
add
mov
mov
or
mov
mov
inc
pop
lcall
inc
sub
adc
jge
sbb
in
pop
push
ret
and
or
or
pusha
sbb
lret
push
adc
add
and
fwait
adc
push
imul
or
stos
pop
sbb
mov
pushf
sub
sbb
jno
xor
sbb
xor
repnz
pop
insb
xorb
leave
push
nop
ja
sub
jnp
or
aam
das
or
xchg
mov
dec
and
int3
inc
adc
add
dec
mov
pusha
test
fxch
fisttpll
mov
pusha
sbb
fs
push
pop
lock
pop
mov
dec
test
or
add
dec
sbb
jge
lock
pushf
mov
pusha
nop
sub
add
out
push
insl
sub
jno
je
mov
inc
sbb
adc
jecxz
jne
adc
scas
repnz
ret
bound
cmp
sub
pop
adc
xor
dec
cld
mov
jle
repnz
adc
aam
xchg
or
sbb
adc
push
addl
xchg
pop
push
and
xchg
adc
inc
std
faddl
nop
imul
add
and
xlat
in
mov
test
dec
pop
test
mov
or
xor
push
daa
jae
ret
mov
sbb
inc
outsb
movsl
mov
out
mov
inc
ret
inc
mov
add
lret
push
inc
fs
pop
orb
or
mov
or
imul
xor
imul
push
sub
inc
sub
aas
mov
insl
jo,pt
inc
imul
inc
mov
or
xor
shlb
dec
jl
cld
dec
sub
add
mov
pop
ret
xchg
out
in
adc
xchg
cmpsb
js
adc
mov
shr
add
jne
je
push
jnp
jge
idivl
fsubs
add
inc
fxtract
mov
iret
cmp
xchg
mov
mov
add
mov
pop
rorl
or
lea
mov
add
movsb
add
xor
test
nop
aaa
push
mov
adc
adc
icebp
clc
adc
inc
xchg
pop
dec
daa
lret
adcb
les
sbb
jmp
ja
and
fimuls
incl
aas
jmp
in
jle
nop
pusha
jae
and
sbbb
mov
xchg
mov
rcll
cmp
push
ret
cld
or
pop
add
jne
sub
je
std
mov
pop
dec
and
pop
jmp
jg
jne
daa
push
inc
or
push
mov
fstpt
pop
pop
test
inc
sbb
daa
test
push
idivl
jns
les
adcb
addb
push
loopne
test
movsb
dec
insb
push
ret
cwtl
sbb
sbb
popa
mov
punpckhbw
cs
cmc
push
pop
push
stos
adc
lahf
lock
xchg
inc
or
or
sbb
pop
lods
or
xchg
adc
mov
mov
in
xchg
clc
xchg
push
xor
xor
in
xor
mov
jmp
mov
call
or
mov
aas
push
ret
sarl
inc
js
mov
ret
in
jg
cmpsb
push
rclb
clc
adc
xchg
push
or
in
test
mov
daa
sahf
test
ljmp
in
push
cmpsb
sbb
fidivs
adc
imul
cmpsl
mov
sbb
rolb
sti
popa
fmuls
jg
and
add
jmp
clc
sub
inc
sbb
popf
testl
sub
add
stos
dec
add
push
add
shrl
xorl
push
add
in
imul
fisttpl
loop
rorl
movsl
add
mov
mov
mov
or
xchg
sahf
xchg
inc
fs
notb
subb
sbb
movsl
cmpsb
inc
ret
popa
or
add
cmpsl
jns
fcmovnu
inc
xchg
fidivl
add
mov
pop
mov
add
les
loope
mov
xor
pop
mov
adc
es
dec
popa
cltd
cwtl
or
or
out
dec
loope
jbe
sbbb
pop
js
xor
stos
xorl
dec
cmp
insl
in
or
enter
or
lret
les
leave
insl
jb
ds
lods
add
lods
adc
and
andb
ss
mull
and
pop
adc
dec
loopne
dec
push
out
sbb
and
adc
mov
sub
outsl
mov
faddl
je
arpl
rcr
add
fistl
add
in
pop
xor
push
clc
mov
inc
sarb
jge
sub
sub
movsb
mov
pop
xor
xchg
cmp
cmp
inc
mov
add
xor
mov
mov
rorb
cmpsb
mov
fstps
shr
push
cmp
test
daa
test
sub
imul
add
cltd
ss
aad
pop
cmc
sbb
gs
inc
test
mov
sbbb
mov
push
xchg
mov
bound
stos
add
mov
repnz
cmp
xor
xchg
shrb
mov
mov
pop
add
nop
call
mov
mov
xchg
xor
inc
mov
das
push
sub
mov
mov
mov
clc
mov
mov
or
fstps
popa
sub
jns
and
xor
mov
sahf
insl
jge
mov
ret
mov
movsl
xchg
ljmp
call
mov
inc
add
jmp
push
jmp
pop
and
and
fwait
push
cmovp
movsl
imul
push
outsl
sub
ret
fldenv
lahf
es
push
movb
inc
jbe
xor
inc
repz
fisubl
orb
xchg
mov
popf
cmpl
mov
mov
inc
je
xchg
xchg
adc
mov
mov
push
pop
sbb
shr
push
xor
pop
mov
lods
test
sub
popa
jp
fwait
adc
dec
out
add
dec
xchg
sub
add
or
or
and
adc
dec
addl
inc
andl
or
sub
and
adc
or
push
mov
and
das
pop
push
inc
rorl
adc
sub
inc
es
icebp
mov
mov
pop
pusha
or
mov
pcmpeqd
xor
cltd
jnp
or
ret
and
rorl
jmp
jmp
sti
je
lds
and
mov
sbb
adc
or
pop
lods
test
scas
cmc
or
mov
add
pop
popa
popa
sub
inc
mov
mov
jmp
xor
sbb
mov
sbb
jmp
sbb
xor
fdivrs
je
mov
lds
ljmp
adc
add
cmp
les
xor
sti
inc
shrl
sub
xorb
je
adc
cltd
loopne
mov
sub
mov
mov
cs
les
mov
stos
jae
push
sub
mov
and
sbb
xor
nop
popf
inc
adc
mov
and
jg
test
push
cmp
xchg
pop
fldcw
fbstp
ret
pop
inc
popf
fisttpll
pop
scas
jb
xchg
inc
xchg
pusha
sub
ret
fistpll
jg
mov
sbb
test
jne
inc
or
jg
call
lods
mov
jg
add
adc
pusha
jmp
pop
das
add
and
out
adc
push
xor
pop
adcb
cmp
push
or
pop
xchg
popf
or
and
jg
sbb
popa
insl
mov
push
dec
call
mov
test
jae
outsl
mov
mov
or
pusha
push
add
push
and
xlat
leave
adc
les
lahf
aad
and
and
test
ljmp
push
mov
andb
mov
addb
cmp
cmp
push
ret
cwtl
dec
inc
sub
cmp
jge
jno
mov
xchg
sub
lods
and
dec
sbb
mov
negb
popa
cmpb
adc
pusha
mov
jmp
mov
dec
sbb
or
jmp
lock
test
aas
xchg
adc
negb
lock
dec
sub
fwait
xor
aam
and
jae
push
repnz
or
push
sub
enter
test
mov
add
movsl
dec
or
cwtl
cwtl
sub
pop
je
cld
mov
loop
push
pushf
add
or
add
push
push
outsl
xchg
call
shrb
mov
xchg
add
jne
ficomps
int3
sbb
xchg
or
and
inc
movsl
hlt
mov
stos
test
push
rorb
test
test
inc
pop
scas
in
push
sub
push
and
sbb
and
add
sbb
and
push
and
mov
inc
pop
mov
es
pop
dec
dec
loopne
adc
or
xor
mov
rolb
cs
sbb
inc
fs
dec
cltd
rclb
std
cmp
fs
sahf
in
pop
cmp
jne
cmp
add
mov
dec
jl
inc
push
xlat
mov
daa
and
negb
or
das
pop
les
popf
inc
xchg
xchg
je
dec
ret
lahf
les
xchg
daa
andb
or
sub
test
dec
mov
ljmp
adc
jecxz
mov
les
adc
xorb
push
sti
and
ret
adcl
xor
rorl
into
les
lock
jne
jmp
and
fbld
mov
cwtl
shrb
sbbl
xor
shld
sub
mov
or
push
push
mov
imul
inc
adc
sbb
jle
mov
popf
mov
hlt
jmp
mov
sbb
push
or
roll
and
pop
sbb
pop
aaa
mov
out
inc
cmp
jnp
dec
xchg
inc
js
mov
add
add
sbb
add
or
pushf
jno
push
das
push
subl
sbb
shl
sub
push
dec
xchg
pop
push
cmp
nop
mov
xor
inc
cmp
mov
and
sub
or
shlb
sub
pop
lret
fcomp
pop
sbb
and
out
rorb
mov
pushf
aam
pusha
call
rcrb
lock
xor
jns
dec
mov
and
js
hlt
xlat
jne
or
dec
xchg
and
xor
jle
adc
fcoml
add
inc
sahf
xor
addr16
mov
mov
cmp
rorl
mov
jae
lock
dec
mov
and
call
in
push
and
adc
dec
and
ret
arpl
xor
add
dec
in
dec
adc
add
sbb
push
xchg
mov
lahf
inc
jne
mov
loopne
jne
mov
in
ja
mov
test
add
lahf
inc
pop
dec
dec
stos
pop
test
adc
inc
jo
inc
jns
and
mov
loopne
push
test
adc
ja
adc
add
fiaddl
lret
mov
addr16
in
push
popa
cmpsl
ret
out
push
js
daa
add
aas
jmp
cs
inc
sub
dec
mov
in
push
rcll
daa
jbe
mov
sbb
push
push
sbb
roll
outsb
call
xor
push
orl
popf
jo
fimull
adc
fwait
daa
test
ja
int3
test
in
rcl
cmpsl
xchg
fcomp
lcall
js
or
add
add
movsl
adc
inc
xor
mov
adc
push
mov
lcall
fwait
jb
out
adc
pop
dec
aaa
aas
dec
test
cs
test
cmp
ja
in
cltd
jl
adc
jnp
push
push
xor
mov
dec
xor
loop
push
jbe
mov
out
push
xchg
jne
mov
int
lcall
pusha
dec
sub
jne
or
lds
pop
cmpsl
sbb
add
les
push
nop
ret
cmc
rolb
testb
filds
mov
je
jnp
add
push
xor
pop
xchg
or
data16
sub
push
sub
jae
les
pop
mov
rorl
add
dec
push
ss
dec
jbe
pusha
dec
pop
push
mov
sub
mov
mov
mov
add
ret
jae
movsb
cwtl
xchg
xlat
ret
adc
xchg
push
push
mov
mov
clc
adc
adc
or
mov
adc
inc
jb
cli
nop
fldt
lock
dec
aam
ds
xor
jo
loop
ret
dec
mov
or
mov
cmp
push
loopne
notl
dec
sub
sub
sarl
xchg
ja
adc
sarb
push
fistpl
cltd
sub
sbb
cmp
or
rcll
mov
or
sbb
inc
push
xor
adc
inc
and
mov
xchg
mov
push
sbb
sbb
lods
mov
xchg
add
push
xchg
adc
jae
adc
cwtl
sbb
jno
movsb
jle
es
sbb
sbb
adc
and
hlt
ljmp
cmpsb
xchg
add
mov
sbb
dec
xchg
dec
mov
xchg
inc
vpshlb
outsl
hlt
imul
je
shrb
cwtl
pop
add
or
cli
popa
xchg
out
shl
sarb
lret
cmp
sbb
test
sub
sub
mov
cmp
xchg
or
notb
or
adc
sub
lock
add
inc
subb
dec
add
sub
inc
adc
cmpsl
repz
aam
or
idivl
cld
cmc
loope
jb
mov
xor
pop
mov
add
mov
cmp
mov
mov
push
shll
sbb
test
dec
adc
shr
stos
xlat
add
inc
inc
xchg
test
cmp
adc
dec
adc
rclb
ja
cmp
inc
and
movsl
jge
inc
jl
lea
xchg
in
pop
xor
cmp
sti
sbb
cmpb
push
hlt
xorl
fdivrs
jg
jle
add
push
and
jnp
in
mov
inc
mov
iret
insb
insb
test
and
push
loope
sub
aaa
pop
and
andl
xlat
roll
std
cli
or
or
sbb
xchg
pop
inc
popl
iret
stos
xor
js
hlt
das
dec
or
loopne
add
push
ja
cmp
mov
mov
daa
aam
push
mov
and
xchg
mov
fcompl
data16
sub
xor
je
loop
iret
jbe
subb
push
adc
sub
insb
add
addb
mov
int3
andl
mov
jle
or
cmp
push
mov
mov
sahf
lret
and
movb
push
sbb
cmp
or
adc
mov
lret
xor
mov
es
sub
dec
and
in
and
mov
jmp
int3
mov
sahf
push
xchg
inc
mov
lret
add
in
xchg
mov
cs
or
shlb
mov
and
add
paddusb
jmp
mov
stos
mov
add
iret
push
xchg
insb
ret
pusha
stos
insl
push
inc
push
inc
sub
dec
and
aaa
fwait
shlb
adc
xor
mov
insl
jo
jl
mov
fstps
mov
adcb
rorl
repz
mov
mov
xchg
mov
inc
pusha
push
add
fsubrs
or
daa
mov
adc
push
sarb
sbb
add
pop
jge
pop
andl
push
cmp
add
jne
dec
mov
inc
push
arpl
jns
xchg
outsl
shrb
fdivs
inc
lock
sub
xor
loop
sub
sar
outsb
jge
mov
sub
or
clc
leave
pushf
fistpl
jno
pop
pop
add
shlb
pop
pusha
push
sub
scas
xlat
inc
mov
mov
adc
sub
xor
push
int3
xchg
aad
pop
lock
xchg
mov
pop
arpl
call
cmp
in
pop
enter
adc
les
dec
adc
jne,pn
and
cmp
push
js
and
and
shl
or
inc
xchg
inc
and
sub
mov
test
jle
and
jp
jno
repz
xor
sbb
xchg
fdivrs
loopne
push
add
sub
pop
dec
mov
lret
andb
outsl
in
mov
fdivs
inc
or
mov
test
mov
shlb
push
inc
and
jle
loopne
sbb
pop
jo
or
xchg
add
mov
dec
push
push
pusha
jecxz
mov
and
loop
das
sbb
xor
inc
hlt
add
inc
jns
pop
or
lods
movsl
pop
inc
push
push
out
test
or
rcl
cmp
add
ret
roll
or
adc
movsb
gs
jmp
cmpsb
imul
mov
add
push
lahf
sub
lods
daa
gs
pop
mov
mov
je
mov
xor
sub
pushf
jne
mov
insl
movsb
or
mov
movsb
aas
xor
imul
das
jo,pn
std
mov
add
jo
inc
out
sbb
mov
lods
sub
movsb
test
imul
mov
in
shrb
cld
inc
div
movsl
adc
xchg
jmp
and
sti
les
add
daa
sub
fsub
push
pop
jmp
cmp
xchg
push
orl
mov
in
sub
sbb
pop
xchg
mov
and
andb
dec
icebp
cltd
pusha
push
or
lods
lds
pop
mov
inc
push
sub
sub
add
adc
popf
insb
pop
repz
and
mov
inc
sbb
jne
push
das
mov
inc
sbb
xchg
les
mov
jnp
in
push
ficoms
hlt
int3
pop
add
sub
cwtl
cmp
sub
cmpsl
aam
adc
stos
push
adc
fsubl
sbb
jo
sub
jo
push
shrb
pop
fdivs
push
or
mov
rolb
xor
jnp
dec
inc
jmp
pop
adc
out
sbb
inc
pop
dec
inc
mov
jne
test
sbb
add
fbld
adc
fs
shr
insb
loope
shl
cmp
push
popf
cmp
es
lahf
in
andb
and
inc
out
ss
adc
rcrb
leave
call
cmp
bound
imul
jle
or
mov
and
xor
lock
pop
mov
pop
mov
stos
rorl
les
and
pop
dec
test
pop
ljmp
add
adc
mov
mov
test
in
push
dec
xor
sub
je
pop
js
inc
xchg
sbb
pop
cmc
xchg
xor
aaa
imul
aam
fisttps
inc
or
movzbl
imul
xchg
add
xchg
lock
push
iret
jnp
jecxz
ret
or
xor
leave
rcr
jno
jno
jecxz
push
sahf
mov
dec
add
je
test
aaa
push
add
push
mov
jg
xor
and
imul
ss
adc
sub
mov
addr16
mov
in
lret
orb
ljmp
lahf
nop
jo
jb
mov
push
fcoml
sbb
test
nop
fisubrs
sub
loope
jmp
jae
ss
inc
cmp
jb
bound
ret
movsb
cltd
push
mov
sarl
or
movl
sbb
and
cli
test
push
in
dec
mov
lea
das
add
gs
pop
pop
and
or
pop
je
push
and
mov
out
pop
or
adc
in
mov
mov
hlt
sbb
mov
rol
call
fstp
les
pusha
push
aaa
push
push
xchg
lods
lock
rcrl
fisttps
into
test
fisubl
or
and
es
inc
cmp
xchg
fdivs
out
inc
push
dec
pop
or
mov
sti
sub
dec
das
movsl
cmp
in
hlt
sete
pop
nop
pop
inc
pusha
insl
fs
dec
jl
jmp
push
push
sbb
sub
andl
or
xor
push
adc
push
js
mov
das
push
popa
gs
pop
pop
inc
and
adc
icebp
xchg
outsb
cwtl
out
adc
adc
movb
push
inc
sbb
push
mov
push
xchg
jl
mov
rcr
and
cmpsb
or
adc
adc
xchg
lcall
mov
nop
test
ret
out
ret
jecxz
dec
mov
mov
and
insl
sbb
and
inc
add
xchg
mov
sub
cmpsl
andl
sub
add
adc
mov
cmc
pushf
rcrl
or
sbb
or
push
dec
shll
sbb
scas
dec
xchg
inc
cmp
clc
push
lods
jg
or
ficompl
into
dec
test
dec
mov
cmpsl
pop
pop
testb
dec
in
mov
andl
inc
jne
movb
xor
jae
imul
and
sbb
cs
adc
nop/reserved
adc
adc
dec
cmp
ljmp
lcall
adc
push
sbb
clc
dec
popa
add
in
push
add
and
push
add
sub
hlt
and
xchg
das
std
and
xchg
test
in
adc
lods
add
add
jl
push
mov
dec
inc
inc
mov
or
mov
mov
add
fs
add
fs
rclb
mov
outsl
insl
pop
pop
mov
mov
mov
mov
pop
or
inc
xor
pop
dec
orb
lea
push
xchg
sub
jns
adc
xorb
imul
adc
movsb
add
movsb
jg
lods
pusha
test
sub
rorl
testb
add
pop
mov
push
pushf
xchg
xor
popa
mov
dec
dec
outsb
fnstsw
out
inc
cmove
dec
dec
dec
dec
push
push
pop
pop
lock
dec
push
push
push
sbb
push
push
mov
fcoms
das
pop
insb
mov
mov
add
inc
aam
lock
xchg
negl
inc
and
add
xlat
adc
mov
inc
cmp
mov
stc
mov
pop
adcl
dec
jecxz
rorb
adc
mov
push
mov
arpl
cmp
dec
push
orb
mov
add
cltd
dec
adc
mov
xor
push
addl
call
add
cmp
and
popa
bound
sub
popf
jb
out
and
dec
or
dec
out
jb
mov
ror
out
adc
jne
mov
mov
cmpsb
add
xchg
sbb
jae
dec
pop
cltd
insb
sub
dec
push
aas
and
jno
nop
fistpl
xor
sbb
push
stos
cltd
nop
add
das
jne
add
xor
loope
add
adc
dec
xlat
mov
mov
add
pop
add
adc
adc
push
and
scas
mov
push
outsl
testl
xor
sub
dec
dec
dec
sub
loope
push
sbb
jno
inc
sgdtl
fmuls
insl
popa
sub
pushf
xor
mov
and
inc
cmp
dec
jae
xor
xor
pushf
xor
pop
sub
dec
dec
jae
and
mov
int
call
adc
mov
mov
inc
fs
gs
add
add
or
js
pop
test
rcrl
shlb
fcoms
sahf
push
hlt
lods
add
dec
add
test
xchg
mov
sub
in
nop
fs
push
jo
adc
sbb
imul
xchg
inc
or
adc
leave
lods
sub
mov
enter
das
pop
mov
in
adc
pop
sub
pop
call
test
int3
push
add
push
out
adc
pusha
or
scas
or
addb
or
xor
jbe
in
cld
outsb
add
push
push
adc
xor
loopne
clc
add
into
dec
or
dec
dec
adc
loopne
dec
adc
loopne
sub
sbb
push
fiaddl
jne
pop
sbb
daa
rorb
xor
sbb
pop
je
mov
addb
ds
push
mov
gs
aaa
lods
jo
das
add
xchg
sbb
cmp
sub
adc
hlt
inc
mov
clc
hlt
dec
cmp
hlt
sbb
mov
and
adc
xchg
je
or
jge
sub
int3
xchg
lock
pop
add
repz
push
jno
les
or
add
add
lock
call
or
dec
jl
inc
sbb
mov
pop
rcl
in
dec
dec
ret
stc
movsb
push
mov
subl
sbb
mov
adc
rorl
add
insl
call
or
push
enter
jae
cs
dec
lods
cmp
icebp
clc
ljmp
loopne
xchg
or
cwtl
adc
lock
lcall
sub
inc
jmp
or
jne
mov
in
inc
popa
in
and
sub
jl
mov
cmc
pop
or
inc
lds
js
imul
popa
inc
fcoms
add
shlb
or
or
ja
lods
and
ficompl
sub
in
mov
push
mov
add
mov
test
push
push
dec
movsl
or
gs
ds
or
xchg
fneni(8087
cmp
adc
xor
mov
lahf
ret
scas
sbb
inc
mov
mov
pop
int3
mov
imul
xchg
or
add
mov
out
inc
add
dec
jge
sub
mov
mov
xlat
jmp
or
call
or
mov
jno
nop
sbb
adc
movb
push
shll
mov
xchg
cmc
jecxz
inc
es
aad
hlt
lods
jmp
xlat
xchg
lret
pop
ss
pop
add
jb
jl
push
push
lods
sub
pop
add
scas
mov
or
mov
or
enter
mov
sub
outsl
sub
add
dec
mov
dec
addl
push
push
insl
jp
data16
pusha
push
dec
sbbb
ja
and
sbb
or
fcomp
inc
fisubrs
pushf
scas
pop
xchg
outsb
mov
pop
mov
fs
add
push
movsb
xor
enter
xor
push
lea
in
mov
lock
jg
add
sbb
mov
insl
les
push
std
jb
xor
dec
push
loopne
cmp
or
lea
or
sub
mov
les
inc
cmp
fs
cmc
sbb
xor
call
fsubrs
int3
mov
sbb
movsb
int
fsubrs
xor
mov
imul
dec
add
lock
shlb
movsl
cli
out
adc
adc
lods
in
push
jne
push
jl
sub
pop
test
xlat
and
test
and
icebp
int3
xchg
sbb
cmp
mov
rorb
dec
inc
and
inc
add
imul
ss
xchg
ret
or
jne
inc
rclb
xor
sbb
enter
testl
test
jo
ds
dec
or
test
mov
dec
lods
inc
lea
movsb
or
inc
ret
pop
or
lock
mov
inc
inc
cs
pop
and
mov
lock
ret
lock
rclb
subl
push
add
jo
mov
dec
xchg
xchg
lods
push
or
lds
pop
dec
sbb
loop
jecxz
add
shll
cmp
jne
push
push
cmpsb
jae
jns
add
sbb
scas
outsb
adc
jge
clc
push
mov
leave
dec
adc
pop
mov
and
sbbl
rcr
andl
pop
fdivrs
int
sbb
mov
cmp
cmpsb
dec
insb
dec
in
xor
pop
movd
jmp
mov
dec
mov
xlat
cmp
mov
jmp
sub
adc
mov
int
dec
push
lahf
push
mov
push
pushl
in
insl
xlat
mov
inc
mov
push
add
mov
add
lds
sub
dec
and
pop
adc
aam
aam
pop
xchg
hlt
aam
in
push
loopne
mov
pop
int
and
push
loopne
mov
nop
pop
mov
arpl
hlt
adc
jmp
xor
pop
adc
mov
adc
xchg
inc
icebp
je
sti
cmp
add
cmp
or
push
lock
aaa
and
dec
cmpsl
fnsave
sub
movsl
rclb
in
mov
xchg
xchg
cmp
xchg
xor
ja
and
cmp
inc
or
jno
inc
pop
aad
test
jecxz
imul
add
dec
adc
fadd
lds
cwtl
rorl
std
dec
push
pusha
and
cmp
sub
sbb
mov
push
mov
cltd
nop
and
xor
inc
insb
jmp
arpl
mov
xor
mov
fldenv
inc
xchg
mov
shrl
pusha
or
inc
daa
xor
mov
mov
xchg
test
pop
test
and
leave
and
or
inc
inc
dec
or
lahf
xor
dec
mov
pop
mov
test
add
cs
pusha
test
cmp
sbb
inc
push
fmuls
loop
cs
aaa
lahf
movsl
pop
shlb
filds
imul
out
xor
xor
push
sub
fdivrs
popa
js
push
sbb
ja
sub
insb
mov
fwait
addb
and
gs
adc
inc
cmp
aaa
and
btc
cmp
das
daa
push
shrb
push
mov
xor
addr16
jbe
push
out
lret
outsb
cmp
lods
inc
mov
pop
pop
leave
sar
bound
cs
pop
inc
xchg
es
push
andb
or
sbb
dec
movsl
mov
pop
add
or
daa
ds
into
jnp
cmpsb
xchg
bound
popa
xor
and
inc
jnp
and
ja
push
and
pop
insl
adc
jecxz
lock
xchg
xor
push
dec
and
push
lock
xor
fsubrl
cmp
sbb
and
testb
sub
adc
jbe
lret
loopne
and
movsl
and
imul
adc
add
add
cld
inc
jle
jns
adc
inc
dec
dec
ds
sti
out
or
push
pushl
add
cld
xchg
sub
jb
xchg
mov
dec
or
add
std
pop
shlb
sub
and
or
loope
imul
jae
and
stos
dec
sti
loop
call
daa
daa
and
not
mov
dec
js
or
push
dec
dec
pop
popl
aas
cmpsb
test
aas
mov
insb
mov
inc
imul
push
push
add
sub
js
xchg
pop
fcoms
sbb
dec
push
fildll
js
or
sbb
roll
dec
sbb
movl
sti
push
add
incl
adc
loope
adc
sarb
loop
popf
sbb
add
lret
mov
sbb
dec
add
shl
pop
fdivr
sbb
or
jmp
hlt
jge
and
dec
inc
movsb
scas
test
ffree
popl
xor
sub
je
adc
or
test
je
adc
jb
add
or
pop
push
jl
lods
xor
sbb
fs
jmp
mov
aas
xor
mov
scas
mov
cmp
setl
mov
incb
lock
ds
mov
or
mov
xor
loopne
mov
dec
pop
ficoms
mov
cmp
ds
mov
add
jg
rorb
shrl
shl
jnp
xor
jmp
lods
fsubl
fstpl
inc
mov
pop
and
or
mov
inc
dec
add
push
jge
inc
push
xor
pushf
orl
test
jle
push
mov
pushf
mov
dec
movsb
inc
and
addr16
add
push
bound
jl
call
test
arpl
dec
mov
xor
outsl
mov
lea
jbe
adc
push
es
fmul
cmp
push
mov
cmc
push
add
lods
dec
push
dec
fcoml
test
mov
sub
psubsw
add
sub
sub
sub
out
pop
insb
pop
pop
test
push
fs
or
insb
sarb
pop
and
dec
push
and
xchg
addr16
mov
pop
mov
push
mov
jl
lcall
sbb
adc
cld
ljmp
mov
insb
adc
imul
add
add
pop
dec
cmp
inc
cmpsl
popa
pusha
fisttpll
mov
pusha
mov
push
pop
dec
loopne
ret
movsl
je
lods
mov
shrl
push
push
loopne
iret
pop
in
ljmp
inc
gs
ja
decb
mov
cmp
dec
fnsave
lahf
jo
xlat
mov
push
push
push
xchg
xchg
daa
fisttpl
jl
nop
push
out
sbb
pushf
ss
aas
add
pop
inc
mov
pusha
xor
xchg
pop
push
out
mov
jo
movsb
or
roll
pop
and
lds
in
fs
pop
pop
roll
or
xor
xor
je
pop
sub
pop
lds
pop
pop
push
or
push
xchg
add
inc
or
sub
xor
movsl
and
sbb
repz
or
sbb
xor
outsl
je
aam
imul
xchg
adc
xlat
mov
es
mov
push
rorb
enter
jmp
adc
dec
stos
mov
inc
inc
data16
subl
lret
je
inc
addl
sbbl
sti
adc
sub
sbb
gs
push
pushf
pop
and
rol
loopne
xchg
sbb
dec
in
jbe
adc
xchg
or
clc
add
lcall
adcl
and
cmp
nop
and
test
xchg
scas
lea
sub
mov
int
and
pop
fs
rcrb
scas
inc
pop
adc
adc
inc
mov
and
inc
mov
inc
push
xor
mov
jle
sub
mov
outsb
add
lea
adcl
dec
fildll
sbbl
or
popa
adc
mov
jne
loopne
movsl
push
ret
pusha
mov
mov
es
ret
mov
push
inc
or
jecxz
fstpl
cmpsl
in
xor
mov
push
jnp
add
je
fdivrs
adcb
rclb
jp
pop
addb
pop
add
scas
cltd
inc
or
adc
mov
pop
mov
shll
and
cmp
sbb
xlat
pop
sbb
push
push
dec
add
mov
push
and
and
push
imul
pusha
push
dec
cmp
adc
xchg
push
es
and
dec
sub
into
pusha
push
adc
adc
insb
mov
data16
add
mov
sahf
test
cmc
push
ret
dec
iret
and
pop
aas
inc
stos
out
lods
mov
jecxz
out
stos
jbe
adc
jge
setnp
push
push
push
pop
push
rolb
pop
jne
add
scas
push
xlat
scas
or
sub
sbb
pop
jo
add
pop
mov
dec
je
adc
fwait
and
test
mov
in
clc
pop
stos
pusha
add
and
rorb
adc
sbb
sbb
cmp
sbb
lock
sub
loopne
push
jl
mov
fsubr
pusha
sbb
hlt
mov
mov
pop
movsl
mov
adcl
adc
enter
nop
shl
xor
iret
mov
stc
mov
fcomps
std
adc
in
lock
xchg
xor
out
xchg
xlat
rcl
clc
adc
movzbl
cmp
and
xor
pop
rcrb
pop
xlat
inc
or
adc
or
pushf
cmp
rorb
push
je
popa
insl
enter
inc
mov
and
dec
les
and
bound
jo
jp
xor
jg
push
pop
add
test
jne
mov
aad
mov
les
into
vandps
xchg
and
inc
add
or
and
adc
cmp
les
dec
add
scas
adc
pop
call
cli
or
and
andb
xchg
push
iret
rorb
aaa
xchg
or
int3
adcl
fisttps
or
pop
pop
sub
fs
sub
xor
rol
popa
or
sub
cmp
ljmp
or
sbb
orl
mov
data16
loope
mov
adc
push
add
adc
fistpl
addr16
cmp
rclb
icebp
lea
sbb
jg
mov
jge
add
dec
pop
bound
and
mov
insl
pop
sub
adc
or
jbe
sbb
sar
xchg
mov
in
add
fs
test
pushl
rorl
sbb
sbb
fs
popf
add
mov
sbb
imul
shlb
pop
sbb
lret
sbb
lea
adc
popa
push
and
mov
in
insb
xor
add
pusha
pop
lock
stc
adc
test
mov
pop
ret
pusha
bswap
ljmp
jl
add
add
push
sahf
loopne
bound
mov
pop
out
loopne
xchg
xor
inc
shl
js
out
sub
cwtl
xchg
add
add
xchg
in
jnp
jmp
push
add
mov
mov
divb
push
sbb
or
pop
jp
bound
and
cs
nop
push
decb
pop
dec
adc
xchg
mov
mov
add
or
jne
not
inc
pop
jmp
nop
sbb
sub
jle
loope
subb
test
ret
shll
pop
add
push
xchg
jbe
sub
leave
mov
dec
sbb
push
pop
sbb
and
xlat
out
cmp
sbb
dec
pop
clc
add
js
mov
lahf
or
lea
add
rorl
pop
adc
movsl
aas
loopne
dec
pop
test
sub
out
subl
xchg
mov
lock
lock
test
fisubrl
add
push
adc
jne
push
or
inc
or
mov
jmp
jmp
add
sbb
adc
adc
adcl
ja
movsb
mov
nop
xchg
xor
xor
dec
inc
add
mov
gs
inc
sub
je
cmp
jb
cmp
out
pusha
loopne
ja
aaa
push
push
add
jmp
push
or
sub
imul
push
aam
jg
mov
inc
dec
jne
mov
ljmp
cld
add
inc
jne
xchg
push
push
push
pop
stc
sub
stc
mov
or
add
je
or
push
jnp
hlt
push
insl
adc
js
push
push
jnp
fdivr
gs
aaa
mov
push
sbb
fwait
sbb
in
int3
push
lret
jmp
xlat
mov
sbb
loop
inc
pop
xor
push
add
incl
add
mov
add
popf
fcompl
pop
mov
pop
mov
out
arpl
inc
adcl
outsl
fldenv
loop
jnp
pop
fisttpll
push
fildll
sbb
push
push
xlat
cltd
mov
daa
xchg
daa
daa
mov
dec
jge
test
cs
inc
mov
xor
jbe
cmpl
push
fstl
sbb
andl
dec
adc
jnp
xchg
mov
scas
and
aam
or
mov
sti
xor
testb
fidivrl
popa
loopne
daa
xchg
adc
add
pop
jnp
enter
xor
or
mov
dec
jo
pop
xchg
stc
dec
movb
outsl
lock
das
es
and
mov
push
or
aaa
mov
mov
in
addr16
in
push
xor
push
add
xchg
imul
lods
data16
pop
ljmp
push
popa
fst
movsb
int
mov
aam
dec
mov
xor
subb
adc
sub
inc
or
or
adcb
fsincos
mov
pop
or
sbb
fstl
fs
pop
cwtl
mov
adc
jg
cmp
pop
sub
jne
test
jo
mov
clc
adc
cmp
mov
dec
adc
in
xor
sbb
sarb
popa
jmp
out
ret
cmpl
pcmpgtd
sub
lock
idivl
sub
cld
push
or
lock
ljmp
bound
js
lcall
sbb
push
out
enter
out
out
insb
or
mov
int3
rorb
test
xchg
push
and
fistps
aam
xchg
push
les
fwait
add
mov
jb
out
mov
or
xchg
push
mov
inc
cmp
push
jns,pn
aas
sbb
lock
test
sub
sbb
xchg
test
dec
daa
xorl
rcrl
sub
xor
popa
pushf
and
mov
out
xor
add
inc
mov
stos
cmp
inc
inc
mov
inc
push
aaa
mov
jle
cmpsl
cs
movsl
pop
add
or
push
sub
or
adcb
mov
cmc
ror
stos
sub
jmp
insb
out
mov
jne
add
pop
lods
jo
ja
or
daa
push
int
sub
and
mov
jecxz
sbb
aaa
or
xorl
das
inc
rcrl
enter
add
shrb
fildl
mov
cs
cltd
fwait
mov
or
mov
mov
mov
dec
lahf
inc
mov
rolb
pop
xor
push
and
add
movzwl
or
orl
adcb
ds
ljmp
je
dec
es
bound
xor
in
js
outsl
and
dec
mov
add
lods
xchg
jle
add
pop
jae
xor
xor
sub
and
sbb
hlt
out
and
mov
push
inc
jo
dec
sub
cmpsb
mov
insb
add
arpl
add
mov
pop
dec
pop
ss
jns
pop
mov
add
adc
mov
pop
push
mov
out
or
stos
leave
aas
divb
fldl
and
clc
fsubrl
ret
aam
jmp
xchg
sbb
inc
add
mov
add
daa
xchg
leave
and
test
and
arpl
imul
rclb
test
mov
test
stos
repz
or
xor
js
jno
push
lret
push
dec
in
jno
pop
push
push
push
push
or
icebp
sub
push
fsubl
js
leave
mov
lock
or
inc
mov
or
cmp
adc
jo
data16
sub
mov
fwait
pop
movsl
xchg
inc
inc
push
icebp
xchg
jnp
jb
push
cltd
addl
ss
outsb
adc
sarl
fwait
push
es
mov
sbb
sub
int
imul
popf
scas
push
loopne
movb
shll
or
mov
mov
loopne
push
adc
divb
adc
dec
and
jle
les
cmp
hlt
outsb
jb
dec
push
mov
mov
or
mov
imul
hlt
fstps
mov
cs
mov
adc
push
inc
insl
fcoms
jnp
pop
shl
lods
lods
jg
inc
inc
fimull
dec
movsb
sbb
test
test
faddl
pushf
fs
pop
pop
pushf
adc
or
adc
mov
inc
mov
ud1
mov
int3
add
adc
add
dec
popf
out
sarb
push
xorb
sbb
or
out
out
jb
or
or
int3
xor
inc
lcall
sbb
push
sbb
fwait
mov
cmp
inc
in
fadds
bound
lods
movsl
pop
adc
mov
scas
sbb
sbb
hlt
adc
ss
adc
fiadds
in
push
mov
incl
sarb
rolb
sub
dec
aam
and
les
mov
xchg
les
daa
and
enter
ss
les
insl
and
adc
lock
mov
mov
imul
out
inc
ret
fnstcw
das
sbb
decw
js
div
sbb
pop
sbb
sub
cmp
sub
aam
hlt
sbb
push
dec
clc
clc
or
mov
das
or
mov
sbb
push
push
inc
cmpsl
push
add
push
pop
icebp
add
adc
pop
sbb
dec
imul
cld
sub
jne
push
add
fisubl
xchg
imul
push
out
or
jmp
jno
add
xor
cli
test
ds
add
jmp
add
sahf
loopne
sub
dec
inc
jbe
in
or
movsl
ret
inc
insb
cmpsl
loopne
clc
sahf
jmp
in
into
scas
add
mov
sbb
nop
xor
sub
add
or
pushl
pushf
xchg
cmpb
xchg
or
pop
or
cwtl
lods
lea
mov
push
push
iret
push
xlat
fcom
sbb
enter
dec
push
sbb
xlat
mov
push
sub
imul
in
push
and
mov
aam
and
adc
jbe
int3
cmp
push
jnp
into
sbb
in
jecxz
mov
loopne
pop
les
fcmovb
out
les
and
pushf
gs
mov
jmp
leave
mov
adc
mov
incl
push
orl
pop
mov
mov
add
loopne
xor
insl
and
fidivl
loopne
mov
in
das
mov
mov
mov
mov
mov
dec
pop
push
aam
mov
inc
movsb
rolb
mov
adc
xor
push
sti
add
out
out
xlat
jl
pop
fisubrs
pusha
cwtl
mov
sub
mov
in
push
xor
adc
sbb
sbb
clc
pop
or
jmp
pushl
and
icebp
sbb
jo
movsb
push
shlb
decl
je
pop
pop
add
xor
push
mov
and
adc
pop
and
mov
insb
mov
pop
sbb
je
test
pushf
fsubs
inc
cwtl
jge
shlb
test
mov
aam
pop
mov
call
add
movsl
das
cmp
add
adc
cmp
adc
sbbb
iret
loope
pushf
pop
shll
in
jns
and
cwtl
movsb
mov
nop
rcrl
xchg
mov
shrl
pusha
adc
xchg
push
pop
pop
adc
psllq
push
dec
push
inc
push
and
push
imul
dec
mov
rorl
daa
das
jo
and
add
pop
pop
popa
js
xchg
mov
pusha
pop
imul
popl
adc
jp
fsubrl
mov
cmp
push
loopne
out
sub
xor
add
dec
inc
fnstsw
adc
mov
dec
insl
and
loop
push
push
pushf
cmpsl
inc
pop
adc
mov
lods
mov
inc
movsl
adc
jne
inc
jl
mov
mov
pusha
arpl
pop
mov
rclb
jge
sbb
push
fdivs
cmc
rorb
pop
push
call
mov
inc
bswap
shll
fistl
jl
lods
push
push
test
mov
les
js
inc
fbld
sarl
mov
mov
and
repz
inc
xchg
fdivrl
rcrb
dec
scas
pop
adc
xor
xor
fnstenv
sbb
inc
sahf
dec
repz
out
pop
cwtl
push
dec
dec
inc
decl
xor
in
push
insb
inc
jno
pop
fidivrs
stc
lcall
pop
cs
andl
pop
push
loopne
push
in
ficomps
cwtl
inc
push
mov
add
js
fsubl
and
mov
popf
inc
pop
pop
jl
in
sbb
mov
clc
test
mov
mov
push
insb
mov
fldenv
das
sub
scas
push
mov
das
pop
add
or
fsubs
pop
mov
orl
les
call
sbb
fwait
repnz
xchg
lods
daa
add
mov
es
fwait
mov
and
inc
cmpsl
iret
aad
push
daa
push
push
hlt
add
pop
inc
das
add
or
adc
and
cmpb
fdivl
daa
clc
and
cmp
mov
imul
hlt
adc
repnz
mov
mov
or
cmp
pushf
mov
in
adc
mov
dec
push
fs
in
bnd
push
pushf
mov
enter
daa
loopne
adc
inc
push
test
xchg
aaa
push
lods
push
fistps
mov
cmp
ds
aaa
adc
pop
les
call
push
add
inc
push
pop
lahf
pop
xor
push
fildll
ds
jnp
shlb
cld
adc
test
inc
mov
jnp
push
sub
inc
pop
and
mov
xchg
lock
and
shlb
call
or
adc
shll
pop
fcomps
call
frstor
sub
les
cmpsl
stc
into
testb
fildll
loope
fucom
rcr
nop
loop
jecxz
int3
push
shll
xchg
push
inc
out
push
js
push
jmp
call
or
ds
ljmp
mov
mov
mov
in
or
jl
mov
push
pushf
sbb
data16
aam
pop
push
sahf
fsubl
aam
aas
add
scas
push
pusha
sarb
push
stos
mov
addb
push
fidivrs
int
call
pop
sub
data16
inc
ret
pop
add
outsb
es
push
fistpll
dec
xor
mov
aaa
aam
int3
xor
data16
push
pushf
xor
dec
push
fs
jge
imul
cmp
push
push
addr16
or
and
cmp
outsl
idivb
movsb
ds
in
js
push
rorb
lods
add
rolb
pop
int3
dec
cs
dec
dec
int3
push
mov
cmp
push
push
cld
push
mov
andl
pop
int3
arpl
gs
out
or
adc
jb
jne
ss
int
jbe
jns
jnp
jl
out
jl
mov
cs
adc
repz
movsb
mov
je
enter
cwtl
nop
out
xchg
test
cmp
jns
int
incb
xor
sbb
lock
xchg
xchg
pusha
xchg
xchg
fsubs
adc
pushl
inc
pushf
out
pop
push
cmpb
inc
mov
mov
rcrb
mov
loopne
sbb
scas
hlt
leave
ror
or
insb
fbstp
push
add
das
cmp
adc
test
out
jp
adc
pop
mov
push
pop
into
cmpsl
xchg
cmpsl
ret
notb
mov
test
ret
adc
add
sub
xchg
test
mov
adc
xchg
mov
inc
sbb
popl
push
paddsw
pop
xchg
inc
and
pop
sbb
and
adc
mov
scas
sub
or
jns
pusha
pop
cmpsl
mov
js
fdivl
mov
dec
outsl
sbb
cmpl
out
inc
adc
and
sub
add
pushf
cmp
cmpsb
adc
cmpsl
sub
cs
insb
feni(8087
fdivl
fldl
insb
mov
sbb
loope
aam
clc
out
call
shl
in
push
in
push
rolb
lcall
jo
dec
pushl
nop
insb
and
ja
out
push
pop
test
push
xor
push
loope
and
sub
pop
xor
pop
pop
ss
out
jmp
popf
adc
fildl
leave
addr16
testl
addr16
cs
push
push
xchg
or
jbe
out
inc
nop
enter
push
xchg
mov
fs
lods
mov
xorb
pop
rolb
jae
pop
push
cmp
int
orps
push
sub
out
or
loopne
das
popf
jge
mov
mov
test
or
call
xchg
movd
mov
xor
daa
test
jbe
inc
imul
insb
sbb
push
jo
xchg
dec
repz
and
dec
jnp
iret
adc
cwtl
and
and
mov
test
int3
push
es
daa
and
hlt
popf
sub
jo
xchg
mov
dec
pop
fmuls
push
roll
js
or
push
pushf
mov
cmpsl
stc
cmp
adc
dec
in
pop
imull
outsl
lock
in
addr16
insb
insl
into
fldcw
jb
clc
js
jns
movsb
jnp
jle
negb
insl
pop
rolb
xchg
and
rolb
pop
mov
das
enter
xorb
fisubrl
in
lahf
out
pop
xchg
js
in
cmp
add
pushf
ja
push
test
jl
jge
push
in
cmp
dec
push
shrb
lahf
cmpsl
flds
jnp
jl
jl
push
fsts
mov
push
stos
cmpsb
cwtl
stos
xor
mov
lods
mov
mov
push
lock
jge
jns
mov
es
inc
mov
mov
rcl
inc
inc
outsl
mov
sub
test
shll
cmp
outsl
test
adcb
add
push
pop
subb
inc
inc
cmpsl
add
cmpsl
inc
or
adc
dec
or
mov
pop
iret
push
dec
dec
add
inc
and
repz
xlat
es
push
add
xor
nop
out
lcall
dec
lcall
inc
sub
push
adc
mov
and
jl
es
jnp
adc
test
xlat
dec
sub
test
in
jmp
add
cmpsb
pop
sub
aaa
scas
inc
push
pop
inc
lea
dec
ja
dec
pop
mov
dec
pop
push
xchg
or
push
rclb
inc
hlt
cwtl
pop
pop
inc
xchg
adc
inc
add
push
stos
enter
sbb
adc
inc
adc
cwtl
pop
aas
inc
inc
mov
ss
pop
sbb
dec
fxch
mov
fmull
push
daa
fcoml
or
add
mov
push
sbbb
divl
dec
mov
jle
dec
push
fmull
push
insb
fwait
out
dec
dec
push
xchg
pop
push
cmp
lahf
data16
cwtl
fs
lods
imul
sti
xor
enter
jo
test
sahf
cmpsl
jge
adc
push
fs
fdivr
inc
cmp
je
nop
lods
adc
dec
outsl
shr
mov
mov
add
pop
add
and
inc
inc
xchg
mov
adc
imul
push
mov
out
aam
aam
es
aad
push
jge
out
repz
cwtl
loope
loop
scas
iret
sub
lods
adcb
fbstp
sbb
push
push
xor
or
fdivrl
mov
add
leave
jns
push
push
out
int
sysret
xor
sbbl
es
pop
xchg
outsl
cmp
gs
arpl
jb
push
push
dec
jae
dec
and
xchg
or
cmp
mov
pop
mov
ret
cmpsb
and
test
adc
add
test
test
sbb
jo
pop
push
js
mov
or
jp
push
add
push
push
inc
adc
inc
pop
cmpsl
inc
inc
pop
iret
jne
outsl
rcr
dec
mov
addr16
push
jne
fs
les
pop
stos
jl
fcmovnb
mov
push
rorl
adc
in
aad
scas
lret
xorb
insb
and
test
inc
push
dec
movsl
push
pop
cwtl
xchg
or
pop
or
add
xor
imul
lock
rcl
or
push
add
mov
xor
push
inc
cmpl
in
xor
outsl
fwait
inc
and
lcall
add
cs
or
loope
and
fimull
adc
or
loopne
fwait
nop
add
jae
fdivs
inc
rcll
int
insb
pop
xchg
mov
adc
jb
clc
loopne
pop
sti
je
inc
add
insl
inc
jo
hlt
and
icebp
lock
outsb
cmpsb
mov
sub
rolb
and
mov
and
das
subl
shl
cmp
das
lock
and
add
xor
adc
dec
xchg
adc
fcmovu
dec
mov
test
push
pusha
dec
jns
jge
xlat
adc
xchg
add
out
lock
shlb
rcrb
aam
mov
add
test
cmp
rcll
dec
mov
clc
and
xchg
idiv
das
test
ret
ds
mov
add
push
lods
jae
mov
push
pop
cmpb
mov
cmpb
or
mov
iret
fldt
int
lds
lock
jl
pop
mov
dec
cmpsl
cmp
cld
test
ss
pop
adc
filds
sub
inc
jns
mov
add
adc
mov
out
mov
mov
in
dec
dec
cli
xor
scas
sub
subb
pop
mov
js
xor
adc
test
xor
lock
inc
xor
xor
ret
xchg
push
fisttps
dec
pop
jb
inc
xchg
jl
rcrb
adc
push
push
andb
cmp
aam
jo
add
push
dec
jl
inc
sbb
addr16
dec
cmpsb
mov
jb
outsb
cld
xor
sbb
cwtl
adc
adc
mov
or
jg
cmpsl
mov
xor
ss
jl
adc
sbb
gs
hlt
mov
loopne
or
loopne
insb
je
sbb
push
in
jge
daa
cli
aad
mov
and
add
lret
cmp
insb
or
cmp
cs
ret
inc
push
push
mov
cld
bound
cmovo
sahf
pushf
lea
push
add
add
xchg
daa
dec
or
cmp
repnz
or
or
push
or
or
or
in
push
mov
and
and
daa
dec
sahf
cmp
adc
adc
adc
xchg
push
cs
xor
xor
dec
sahf
cmp
xor
sbb
sbb
sbb
cmp
ds
push
les
cmp
ds
jl
add
test
push
movsb
loope
or
sub
in
loope
idiv
clc
nop
inc
push
sbb
clc
clc
inc
push
sbb
clc
push
sbb
clc
clc
clc
sbb
clc
clc
clc
fs
inc
push
clc
clc
clc
nop
inc
push
sbb
clc
clc
inc
push
sbb
clc
push
sbb
clc
clc
clc
sbb
clc
clc
clc
jle
inc
push
clc
clc
adc
leave
xchg
daa
dec
inc
das
inc
cmp
cmp
in
ds
aas
dec
pop
push
test
add
loop
fs
add
je
hlt
push
push
das
adc
and
daa
dec
push
aas
or
mov
xor
add
leave
inc
jle
xchg
lock
xchg
lock
inc
stc
dec
imul
add
sets
call
in
in
cld
mov
outsl
xchg
add
add
je
cwtl
push
sub
push
scas
mov
ret
and
pop
or
jno
mov
fisttpll
clc
aam
mov
in
inc
pop
push
pushf
mov
adc
sub
dec
pusha
rcrb
dec
and
andb
mov
push
inc
mov
xorl
mov
jo
in
jo
sbb
vmread
jl
popa
or
sbb
sbb
orb
and
enter
sub
lock
xorb
pusha
in
shrl
push
cmp
daa
push
mov
jmp
movsb
pop
outsb
je
ret
dec
push
push
add
adc
arpl
mov
mov
test
outsb
adc
dec
dec
out
jl
loopne
lods
daa
in
aad
pop
mov
mov
xor
add
mov
clc
repz
inc
lret
in
or
sti
cmpsl
subb
mov
sbb
dec
mov
mov
das
aaa
mov
cmp
xor
or
add
cmp
lds
dec
jg
add
sub
repnz
fcomps
dec
xchg
popa
xchg
mov
sbb
test
xor
cmpsb
rcl
cmpsb
push
outsb
dec
sub
and
popa
jo
add
in
mov
jp
enter
xor
jg
add
xchg
add
mov
mov
mov
mov
xor
mov
fs
fisubrs
and
push
test
scas
inc
mov
mov
decl
ljmp
pop
pusha
out
idiv
mov
les
and
loop
pop
jne
push
lods
mov
call
daa
fisubs
mov
inc
ffreep
mov
loop
lock
sub
pop
into
insl
pop
sub
cmpl
notb
pop
ljmp
mov
mov
dec
divb
xchg
add
in
cmp
data16
sub
dec
das
outsb
push
sti
sub
add
aas
call
xor
jle
popf
push
add
sbb
jne
add
adc
aaa
pop
mov
sahf
movsb
fisubs
into
movsb
cmpb
jne
xchg
cmc
and
and
into
push
lods
aam
jns
out
daa
and
xor
ja
xor
dec
adc
inc
cs
enter
lret
adc
pushf
sub
test
xor
cmp
adc
or
inc
cmp
nop
dec
push
mov
mov
jo
xchg
mov
and
cs
cwtl
sub
mov
mov
add
sarb
mov
lock
leave
inc
xor
and
xor
leave
inc
jb
andb
loopne
mov
inc
adc
inc
pop
and
enter
mov
loopne
and
inc
jb
push
aas
shrb
mov
and
lock
loopne
mov
inc
jo
adc
dec
pop
and
rolb
push
or
or
sub
xor
xor
lret
int3
enter
call
iret
enter
fcomp
fxch
loopne
jecxz
in
jmp
nop
push
pop
mov
mov
and
mov
sti
sub
gs
mov
repnz
and
popa
je
xor
shlb
ljmp
fdivrp
add
jno
add
sbb
repz
imul
push
xor
sub
repz
dec
sub
inc
fs
cmp
repz
pop
test
stc
sahf
cmpsl
stc
add
add
fdiv
cmp
mov
lahf
mov
iret
repz
in
lock
pop
mov
push
or
sbb
sahf
out
jl
or
add
inc
sbb
cmp
jnp
pop
adc
pusha
cmp
out
sub
test
cwtl
das
push
movsb
cmpsb
jnp
push
sbb
dec
notl
in
iret
cmp
and
lea
adc
cmpsb
rclb
and
xor
imul
fisubrs
insb
dec
shll
jg
fidivs
popa
imul
js
into
js
js
jo
mov
js
fistpll
aaa
shlb
jg
rcl
int
sub
dec
scas
jl
or
outsb
jl
mov
jl
jle
scas
sbb
adc
int
pop
sti
adc
or
or
and
aas
bound
push
adc
add
push
sbb
sbb
pop
add
imul
adc
adc
sbb
adc
std
sbb
adc
maskmovq
negl
adc
sub
add
out
pop
mov
adc
push
push
adc
add
sbb
or
ds
movsl
sub
push
test
inc
xchg
xchg
movsb
and
les
inc
push
dec
xor
aas
and
add
push
cmp
in
aam
cs
dec
xchg
push
pushf
movsb
repz
rep
mov
int3
iret
repz
aam
in
hlt
cld
sahf
out
ds
or
sbb
jns
out
sub
cmp
dec
out
sahf
out
pop
fs
je
out
sahf
jl
mov
jns
mov
add
jb
jb
add
fs
popf
in
jge
dec
faddp
fbld
fisubrs
data16
ss
push
in
sarl
in
in
in
and
push
mov
addr16
inc
inc
lods
mov
xchg
xchg
fistl
sysret
or
or
or
int3
mov
cwtl
mov
shll
adc
push
cmp
test
push
or
add
cmpsl
push
add
add
scas
inc
das
add
hlt
movsl
and
jb
xchg
cmp
repnz
adc
adc
ss
pop
dec
mov
add
cwtl
mov
fildl
xchg
mov
pop
or
xor
fidivrl
das
add
add
aam
or
in
aad
push
add
cs
in
xchg
out
mov
pop
or
or
stc
std
cmp
or
das
or
or
or
or
xor
or
pushf
jb
push
int3
cmp
repz
or
and
pusha
repz
repz
mov
call
add
and
jo
out
sahf
mov
xchg
in
add
adc
push
mov
out
nop
daa
push
push
inc
inc
mov
xchg
jno
incl
decl
mov
out
pop
jmp
mov
inc
lahf
out
push
incb
cmp
push
repz
dec
movsb
push
inc
mov
jns
pop
cmp
sub
adc
outsl
cltd
aaa
adc
cld
or
nop
or
imul
lret
sub
adc
jnp
mov
pop
and
cmpsl
mov
aas
push
clc
rolb
pop
pop
imul
push
test
pop
pop
jnp
cmp
mov
add
push
les
push
loopne
jle
cld
cmpsb
lahf
neg
lret
cs
push
inc
mov
mov
push
add
fadds
add
bswap
repz
sub
dec
adc
aaa
into
repz
or
in
sbb
push
sbb
adc
repz
mov
enter
repz
or
imul
out
sahf
jnp
mov
xor
out
rolb
push
push
adc
or
xor
pop
insb
fistps
orb
out
sbb
rclb
cmp
repz
or
sub
fsubr
mov
push
pop
add
out
sahf
ja
push
xor
cmpb
sahf
addb
pop
iret
repz
cmpsb
outsl
mov
mov
repz
mov
mov
jns
out
mov
fsubp
jns
out
out
nop
inc
mov
mov
pop
roll
xchg
arpl
push
add
roll
scas
in
inc
test
and
fwait
insl
imul
add
fidivs
adc
or
or
mov
cmovle
push
subl
push
add
adc
and
cs
adcb
ja
xor
sbb
outsb
mov
incl
cli
cli
sbb
push
ds
inc
push
lock
cmc
lahf
dec
addr16
push
std
cmc
out
das
decl
stc
or
push
cmc
cmc
pop
push
cli
jmp
add
sti
mov
lock
xchg
rorb
clc
cld
jo
iret
mul
out
sub
cmc
repnz
bswap
mov
pxor
add
fisubrs
cmpsb
out
dec
mov
xchg
lock
push
cmc
and
test
cmp
mov
push
sub
add
por
jg
pop
push
in
cmp
fidivrl
mov
outsl
mov
jl
cmp
rorl
mov
andb
pop
jns
lock
push
cli
xorb
jg,pn
push
popf
sbb
arpl
xor
pop
repnz
fcoml
push
movsl
sub
scas
jmp
imul
add
push
mov
adc
push
movsl
adc
scas
jnp
cmovne
push
mov
and
lock
jmp
push
mov
int
aas
or
mov
sub
mov
adc
call
rcrb
add
clc
push
and
lods
loopne
lock
ljmp
push
jg
jl
nop
out
nop
lods
std
add
out
pop
aam
push
mov
testb
xlat
pusha
mov
push
jl
push
push
cld
cmp
push
add
cld
out
xor
jl
mov
scas
idivl
pop
mov
data16
push
cmp
jno
push
mov
adc
mov
xchg
push
push
imul
clc
inc
add
pop
inc
jmp
jl
push
loopne
into
mov
psubd
mov
xor
scas
and
out
push
in
addr16
push
lods
fsub
dec
push
xchg
cli
cli
adc
int3
add
push
xchg
push
cmc
jge
push
dec
and
aam
sti
pop
mov
outsb
sti
mov
jle
aas
inc
gs
sti
jmp
push
inc
imul
loopne
ret
push
sbb
jo
cld
push
cltd
mov
scas
cs
sahf
mov
pop
mov
movswl
fmull
push
nop
or
jg
sub
or
pop
push
xchg
add
jle
cltd
xor
movsb
push
loope
pop
cmpsl
xchg
rorb
mov
clc
push
adc
mov
jo
push
mov
loop
push
aad
jle
mov
xchg
jo
jle
inc
lcall
adc
inc
movzbl
or
xorl
jo
push
imul
mov
fdivs
in
insb
jnp
dec
imul
loopne
jnp
outsb
movsb
push
ja
cltd
lcall
mov
popf
rolb
push
pop
pusha
push
inc
cmpb
or
pop
lods
push
jo
nop
mov
cmc
jnp
sbb
faddl
xor
imul
decb
mov
mov
mov
push
das
dec
dec
mov
xor
popa
dec
add
adc
fwait
xorps
push
rcrb
aas
xlat
xchg
in
fwait
jbe
or
sbb
sbb
ret
xchg
mov
js
inc
jl
addr16
out
scas
push
loopne
add
stos
cmp
clc
std
push
or
and
jns
imull
push
xor
inc
adc
imul
pusha
je
stc
cmp
repz
fdiv
or
js
cmpsl
sub
fdivl
add
or
add
adc
les
or
xchg
daa
insl
insl
or
inc
add
jbe
pusha
dec
add
dec
push
pop
inc
addl
inc
pop
xchg
dec
aas
add
add
add
mov
or
add
pop
cmp
iret
pop
or
nop
out
ret
in
daa
fmuls
iret
repz
adc
cld
xor
dec
stc
cmp
repz
clc
nop
divl
aam
hlt
hlt
out
sahf
out
xchg
repz
push
sahf
out
sahf
icebp
je
xchg
out
mov
out
fsubr
lock
pushl
notl
jg
je
lods
adc
pop
rclb
and
push
or
mov
mov
add
push
push
pop
lar
mov
lea
mov
adc
insl
fbstp
push
adc
outsl
subl
mov
lock
or
or
add
out
mov
jo
adc
inc
adc
out
sahf
je
cwtl
test
enter
jns
call
repz
repz
inc
pop
push
js
pushf
mov
adc
dec
cmp
mov
sbb
xorl
pop
into
adc
adc
add
xor
jae
fdivrl
push
xchg
ja
pop
add
jg
jg
stc
sahf
out
sahf
mov
jns
out
std
incb
add
jge
out
addb
push
mov
lock
jns
mov
jne
or
aaa
xchg
add
mulps
jns
inc
jo
dec
aas
push
xor
out
sahf
out
aaa
cmp
cmp
pusha
sahf
cmp
xchg
lcall
push
xor
shll
or
or
jns
mov
movups
jns
out
adc
adc
mov
bound
iret
repz
sbb
sbb
repz
and
and
cmp
repz
iret
repz
sub
sub
cs
and
repz
xor
xor
adc
pop
lods
jne
xlat
add
int3
push
in
ds
mov
jg
dec
int3
push
cld
hlt
enter
mov
xor
out
cli
jp
nop
dec
scas
enter
cs
jo
testl
push
adc
xchg
jmp
dec
or
repz
rol
mov
scas
push
test
dec
or
push
roll
shlb
sub
test
fmull
push
sbb
fdivp
xor
pop
cmpsb
fmuls
leave
pop
sbb
add
mov
mov
cld
int3
ljmp
fimuls
outsl
and
fcoms
push
push
in
enter
clc
mov
outsl
dec
pop
adc
mov
push
je
clc
fisttps
jnp
sti
fsubrl
cmp
xchg
cmp
mov
cmp
sub
pusha
push
sbb
cmpsl
mov
loopne
mov
es
jmp
add
push
clc
push
add
xchg
test
hlt
out
fdivrl
xchg
mov
push
adc
hlt
scas
push
cs
cmp
js
mov
cs
dec
jnp
pushf
ds
je
push
insb
jl
lock
dec
inc
test
cmp
pop
js
jnp
xor
sub
clc
decl
nop
sub
cmp
jle
push
jo
sarl
in
es
push
int3
cwtl
cmpsb
xlat
outsb
mov
pop
fmull
out
mov
push
push
cwtl
loopne
out
mov
mov
fmull
fidivrs
jae
in
fsubrs
enter
dec
pusha
jecxz
or
xchg
jo
ds
or
mov
ja
pop
cmpsb
outsb
and
cld
push
add
js
pop
ja
in
inc
aam
add
or
out
fsubl
neg
pop
nop
fimuls
es
push
and
lahf
aaa
cmpsl
xchg
lea
dec
xor
cmpsl
jge
inc
andb
insb
push
push
pop
out
es
push
jle
dec
lea
js
dec
pop
pop
fidivrs
and
dec
xor
fs
fcomi
push
and
sub
ds
and
pop
sbb
mov
jl
fidivrs
jecxz
cld
cmpsb
enter
push
mov
icebp
pop
fiadds
inc
int3
out
mov
pop
cmp
adc
push
in
out
sbb
aas
dec
push
add
push
aas
push
pushf
cmpsb
push
push
lods
mov
mov
loopne
idivb
scas
mov
fcmovu
fs
mov
sarl
push
inc
dec
je
mov
loopne
push
in
ficomps
push
mov
dec
mov
push
idiv
mov
and
fmuls
sbb
or
push
sahf
imull
div
notb
testl
xor
sahf
popl
ds
jbe
in
push
orl
dec
cmp
pop
push
test
jo
loop
push
out
imul
filds
push
ss
roll
sub
add
mov
sbb
xor
add
add
and
sbb
add
and
inc
inc
push
jae
and
inc
and
sahf
xchg
outsb
jnp
xor
aas
into
nop
aam
mov
and
call
dec
xchg
push
push
push
ds
sub
out
rolb
mov
stos
push
shl
iret
inc
xchg
mov
into
mov
mov
repnz
loopne
push
push
cs
cmp
and
sub
addr16
jb
xchg
add
insb
insb
mov
addb
imul
pop
dec
fwait
sub
imul
movsb
adc
lret
add
ja
push
push
pushf
popa
dec
and
jne
jne
add
int
int3
adc
testb
int
push
fsubl
rcrl
push
mov
in
push
cli
imull
addl
dec
dec
cmp
dec
jae
xchg
es
aad
dec
mov
lret
cmp
mov
cwtl
dec
adc
or
adc
pusha
cmp
mov
lcall
fiadds
cmp
or
inc
mov
add
sub
mov
add
test
mov
push
adc
sub
movb
mov
ret
push
rclb
dec
mov
push
push
sbb
jno
dec
inc
cmp
into
imul
dec
bound
dec
inc
push
sub
pop
or
pop
add
scas
and
ret
jae
and
cmp
adc
sub
iret
mov
sub
rolb
jnp
ss
sbb
push
mov
xchg
or
enter
pop
es
faddl
cld
jg
clc
daa
iret
xchg
das
aas
push
pop
jmp
rol
cmpsl
lods
cmp
add
pop
or
push
aas
xor
xchg
jg
add
dec
ds
inc
addr16
insb
addr16
or
push
mov
roll
mov
daa
sti
xor
psubb
insb
fistpl
out
push
out
ficompl
iret
shr
cmp
xchg
pushf
pop
loopne
lock
sbb
pop
jnp
xchg
insb
push
aas
pop
cs
pop
add
addr16
shl
mov
incl
pop
std
push
gs
cmp
inc
pop
fiadds
jl
rolb
data16
iret
jbe
jg
sbbb
repnz
jl
add
jo
iret
xor
pop
rolb
mov
lock
sahf
push
xor
adc
cltd
pop
ja
inc
fidivl
jg
add
in
ret
mov
aas
push
add
iret
fwait
and
es
cmp
cmp
add
out
mov
dec
pop
outsb
lods
mov
aaa
data16
pop
std
clc
lock
aas
sbb
clc
dec
add
push
mov
jnp
inc
pop
outsl
clc
popl
add
addr16
cmp
loopne
pop
sbb
sub
addb
pcmpeqd
ds
jle
dec
stos
sbb
xlat
int3
data16
pop
in
les
test
ja
pop
mov
aas
push
popf
sub
faddl
cld
push
push
xchg
int
cmp
fsubrl
mov
pop
lock
aaa
and
jecxz
cs
fdecstp
pop
jo
jge
cmp
sbb
int
mov
push
sub
inc
add
inc
or
shll
xor
sbb
add
fcoml
outsl
add
and
jne
aam
scas
push
xor
notb
clc
int
mov
fcompl
jl
sbb
push
sbb
or
cmp
shlb
loopne
shl
mov
jo
jno
xor
jno
add
rorb
sub
inc
mov
fdivrl
je
and
bound
mov
mov
and
mov
push
jne
jo
pop
mov
adc
aas
cs
or
ucomiss
add
jnp
fs
fwait
aam
test
and
popa
fistl
cmp
imul
adc
ss
jbe
mov
imul
out
jns
popa
jns
imul
pop
jae
sub
popa
inc
push
mov
sti
pop
ljmp
arpl
shrl
adc
push
addr16
icebp
xchg
and
and
cmpsl
mov
aam
pushf
jbe
lahf
adc
lock
cmp
push
push
loope
push
fsubrl
adc
adc
sbb
loop
cmp
pop
dec
arpl
inc
lock
fs
fs
cmp
jg
addr16
pop
jl
cs
inc
jo
movsb
mov
das
xchg
loopne
imul
pop
jne
daa
mov
cmp
scas
rol
fildll
adc
outsl
addr16
mov
into
orl
popa
and
and
fwait
das
mov
pop
sub
js
jecxz
aaa
jle
les
in
arpl
es
aaa
mov
cwtl
mov
lahf
jae
xchg
adc
lds
repz
mov
and
jo
ss
jle
mov
add
inc
bound
inc
and
neg
cmp
add
fldl
xchg
ret
bound
push
push
ret
pop
mov
addr16
and
pop
sbb
fmull
add
add
push
adcb
stos
out
roll
ja
dec
repz
push
into
inc
imul
push
outsl
outsb
arpl
das
or
rclb
inc
rdmsr
imul
xor
add
dec
add
push
rclb
mov
dec
adc
es
sub
push
sbb
test
or
mov
stos
cmp
mov
loop
cmp
or
inc
add
mov
pop
stos
cmpsb
subl
and
arpl
pop
dec
rorl
dec
sub
pop
xor
outsl
sbb
arpl
xorb
jne
pop
mov
cmp
out
rol
das
jbe
imul
stos
adc
add
xchg
push
aaa
addr16
sbb
sti
popa
mov
cs
sbb
js
lock
mov
insb
iret
inc
ja
sub
ret
addr16
or
jp
dec
in
jbe
inc
sahf
outsl
mov
dec
out
es
insl
jle
or
sbb
mov
mov
cmp
pop
jb
adc
push
mov
add
push
adc
mov
pop
adc
push
pop
out
mov
sub
push
sti
mov
mov
jbe
test
push
xchg
addb
cmp
out
loope
aaa
bound
pop
pop
fwait
scas
pop
add
jmp
sub
xorb
addr16
mov
das
xlat
xor
push
add
mov
mov
add
and
outsb
data16
ret
mov
lock
pop
push
xor
lret
je
mov
pop
daa
pop
add
rcl
adc
pop
fbld
dec
adc
fsubrp
daa
mov
jo
push
push
cmpsb
mov
cmp
fsubs
push
retw
scas
push
mov
lret
fistpl
dec
and
jnp
scas
sub
bound
push
and
mov
je
insb
adc
or
test
movsl
mov
push
mov
xchg
adc
jg
mov
push
or
imul
sbb
pop
and
and
inc
or
push
and
dec
mov
ss
mov
stos
adc
pop
daa
sbb
ja
mov
mov
sti
scas
shlb
jnp
mov
out
inc
bound
ret
inc
cmp
jecxz
lret
dec
rcrl
ret
adc
repz
or
sbb
fcmovbe
sti
pop
inc
and
jmp
push
imul
ret
inc
sbb
mov
mov
scas
sub
lahf
fisubl
push
pop
mov
dec
aas
cs
add
mov
outsl
jo,pt
outsl
mov
jp
aaa
jb
jno
pop
adc
add
sarl
fists
test
or
fdivs
arpl
imul
add
adc
outsl
jne
jmp
lcall
push
adc
xchg
sbb
mov
imul
in
bound
adc
add
lret
fs
stos
sub
lock
loopne
fstpt
jae
and
pop
daa
adc
jbe
repz
ret
inc
pop
mov
mov
add
and
pop
or
stos
out
sti
popa
mov
cmp
pop
jnp
jae
adc
movb
arpl
outsb
mov
or
jo
call
xchg
fwait
or
mov
and
push
mov
addr16
lret
lret
sub
dec
sub
data16
popa
aaa
jne
and
inc
js
pop
cs
mov
push
sub
es
add
addb
and
and
arpl
inc
aaa
inc
xlat
push
and
das
pop
push
imul
sbb
xchg
pop
les
fisttps
jo
push
sub
mov
mov
fadds
ret
sbb
push
insb
je
xor
iret
cmp
addr16
jg
scas
mov
inc
pop
sub
hlt
xor
xchg
push
sbbl
mov
add
sbb
lods
push
mov
pop
add
jnp
cmp
pop
pop
adc
nop
sub
arpl
sbb
adc
xor
jae
push
adc
or
scas
mov
adc
add
adc
lea
jbe
mov
jecxz
pop
mov
cmp
adc
sbb
lods
rclb
cmpsb
repz
jno
push
cmpsl
cmpsb
pop
pop
sbb
cmp
lret
daa
data16
push
test
mov
xchg
cmpsl
push
jo
inc
cmpsl
stos
or
rol
push
jg
xchg
push
pop
repz
mov
jecxz
loop
sbb
cmpsb
sub
mov
dec
mov
lcall
push
pop
insb
dec
xchg
in
inc
push
sbb
pop
dec
push
cmp
ss
sbb
fildll
add
jg
mov
adc
addl
xlat
sub
adc
mov
test
push
adc
xlat
dec
mov
sbb
and
test
inc
or
lods
popa
sbb
inc
test
stos
adc
add
push
xchg
adc
cmpsl
add
jne
inc
inc
pop
add
mov
push
inc
and
js
out
jns
jns
jp
pop
data16
in
ss
outsb
daa
or
scas
xchg
aas
lea
insl
mov
inc
and
scas
popa
push
jb
mov
and
pop
or
insb
pushf
mov
jnp
shll
add
xchg
aaa
inc
ret
sti
shl
addr16
dec
addr16
fdivs
add
inc
jg
mov
jae,pn
inc
ja
std
sbb
inc
add
ds
mov
adc
inc
dec
sub
sub
bswap
fwait
aaa
out
jb
inc
outsl
pop
or
jbe
or
jne
cmpsb
and
pop
rep
cmovge
pop
push
sub
orb
cmpl
cmp
cmc
xchg
push
pop
aas
push
out
lods
or
or
xor
stos
sbb
jmp
rorl
sub
jnp
pusha
xchg
xchg
jno
jae
mov
xor
inc
cmp
dec
lods
add
ds
push
mov
xadd
popl
and
pop
inc
xchg
xchg
iretw
adc
scas
cwtl
add
add
cmpsl
fimuls
dec
lds
idivb
pop
jno
fwait
add
or
outsl
inc
push
add
mov
push
mov
jecxz
lock
vmovaps
pusha
pusha
rorl
lsl
daa
push
fstl
popw
mov
mov
add
outsl
cmp
adc
jmp
cmpb
testl
aad
xchg
stos
pop
mov
mov
outsb
fwait
adc
out
adc
pop
or
mov
gs
push
mov
sub
in
jo
divb
mov
cmpb
fwait
das
mov
mov
xlat
cmp
jp
cmpsl
inc
pop
aaa
call
pop
das
arpl
cmpsl
lret
sub
adc
fadds
push
out
add
incl
and
mov
jo
ret
push
jmp
mov
mov
push
rclb
and
jecxz
xchg
push
cmp
outsl
addr16
or
pop
pop
pusha
push
dec
sub
jae
inc
das
xorl
in
jo
pop
adc
add
add
add
xchg
stos
xorl
daa
mov
pop
push
mov
add
pop
pop
add
and
mov
jae
cmp
mov
push
mov
inc
xorl
rcll
sub
jbe
and
pop
cmpsl
sbb
pop
push
pusha
add
repz
ljmp
adc
dec
or
das
sbb
adc
pop
outsl
pop
aad
outsl
jns
adc
mov
mov
repnz
outsl
pop
repz
pop
out
ss
es
scas
or
iret
xor
outsb
jo
mov
jo
xchg
jnp
adc
or
shll
dec
jp
outsl
sahf
push
inc
mov
sub
inc
pop
sub
outsl
adc
pop
arpl
daa
xor
mov
imul
mov
andb
adcl
sub
pop
push
pop
push
fisubl
pop
sub
scas
ret
rcpps
jmp
sbb
and
addr16
call
xor
pusha
data16
adc
pop
rclb
outsb
add
outsl
idiv
filds
xor
inc
add
pusha
add
addb
add
add
add
ljmp
push
movsb
add
add
add
add
add
push
add
insl
jecxz
add
sbbb
add
cltd
leave
clc
rolb
loopne
lock
push
add
pop
mov
xor
add
adc
adc
or
push
ret
push
add
loopne
lock
out
cs
xchg
pop
adc
or
xor
mov
sbb
push
add
pusha
add
addr16
ljmp
add
add
imul
rolb
add
lret
inc
add
add
nop
sub
add
add
adc
or
stos
add
and
inc
mov
mov
inc
add
mov
add
lock
xor
push
cmpsl
lock
sahf
adc
rolb
sahf
inc
negb
push
xor
aas
cmp
sub
int3
pop
add
dec
shlb
inc
fcmovne
ficoms
jle
into
add
adc
rcr
sub
push
add
push
add
dec
loope
scas
adc
add
mov
fucomip
adc
roll
sub
mov
mov
add
bound
xor
add
fisttpll
add
add
and
adc
test
iret
loopne
mov
push
add
fcmovu
cld
mov
push
add
pusha
add
nop
add
jle
mov
rcrb
loopne
lock
adc
and
xor
inc
push
xlat
in
aas
fistps
push
pusha
push
push
jo
addb
push
fisubs
divb
mov
add
aas
sub
push
pop
xor
inc
in
pop
inc
pop
sbb
out
mov
sbbb
nop
dec
or
incl
mov
pop
rolb
loopne
lock
xchg
adc
and
xchg
add
xor
mov
or
pusha
or
orb
add
out
mov
pop
add
rorb
xor
movsl
popa
testb
add
pop
mulb
adc
and
cmova
or
or
pop
imul
jo
cmpsl
call
mov
orb
add
or
shll
arpl
mov
push
add
xor
incl
or
or
push
or
jo
orb
icebp
sti
push
pop
or
pusha
lock
aam
adc
rorb
ds
pop
mov
sbb
add
adc
push
or
mov
ret
inc
or
pusha
or
mov
mov
add
nop
or
xlat
sbb
mov
shrb
sar
mov
mov
or
push
and
gs
incl
inc
or
or
or
or
or
or
or
or
or
or
ds
adc
and
jbe
pusha
loopne
jg
jo
orb
or
loopne
lock
sti
divl
push
inc
push
xor
push
dec
pusha
sti
repz
pop
add
sub
subb
nop
push
mov
sub
or
rcrb
fcmovu
rorb
sbb
add
push
or
fisubs
or
lcall
push
and
xor
inc
cpuid
pusha
sbb
orb
inc
mov
mov
lahf
sarl
rorb
xchg
jb
push
mov
movswl
add
into
invd
push
repnz
and
xor
adc
adc
inc
xchg
add
fists
pusha
adc
dec
popa
stos
cmp
fwait
and
jo
adcb
adc
ljmp
jle
insb
fcmovbe
adc
cmpl
push
cmp
out
mov
push
add
mov
or
aaa
cmp
insb
fwait
adc
add
jmp
stos
xlat
jg
adc
xor
out
jecxz
addr16
add
adc
ljmp
mov
neg
add
testl
mov
add
sbb
dec
int
fcmovu
mov
rclb
loopne
adc
adc
mov
shrl
or
ljmp
adc
add
adc
push
adc
jo
test
adcb
adc
mov
mov
or
rclb
adc
push
adc
adc
out
sbb
push
add
imul
lcall
arpl
push
inc
jg
fsubrs
ficoml
rcll
adcb
loope
push
xor
cmpsl
into
pusha
or
pop
mov
cmp
aaa
add
dec
add
xchg
adc
mov
cld
fisubrl
stos
aas
scas
add
or
adc
lahf
sub
adc
lock
xor
push
push
pop
pusha
xchg
cwtl
fisttpl
repz
mov
fiaddl
push
mov
adc
adc
adc
or
or
loopne
adc
adc
jg
cwtl
xor
add
or
adc
push
adc
popf
push
or
imul
std
outsl
pusha
sbb
adcb
sbb
adc
out
jns
pushf
push
adc
adc
mov
movsb
mov
adc
xorl
push
pop
cmp
push
popl
push
test
nop
orl
das
sbb
add
sbb
imul
ficomps
sti
push
jle
dec
inc
add
or
outsb
add
dec
cmp
add
into
xchg
sbb
add
pop
sub
and
jmp
pop
add
or
ficoml
scas
ret
or
push
cmpsb
in
sub
add
lds
out
pop
sbb
aaa
stos
or
xchg
sub
add
or
adc
adc
adc
add
add
mov
add
adc
and
pop
dec
and
jg
rcr
xor
pop
pusha
stos
shrl
xor
cmpsb
ret
ss
fcoml
push
xor
sbb
les
dec
insb
cmc
add
mov
lahf
add
sbb
lahf
or
mov
add
or
add
pusha
add
lods
push
sti
xchg
mov
xchg
divb
movsl
pop
fisttpll
out
insb
insl
sbb
adc
push
add
pop
or
sbb
jmp
loopne
dec
fimull
add
mov
mov
add
pop
ret
inc
mov
pop
push
test
imul
xchg
loope
jg
pop
sbb
jg
incl
sub
orb
jmp
rolb
rorl
or
mov
repz
jae
jnp
push
pushl
adc
add
add
notb
sbb
fisttps
lahf
sysret
lahf
movaps
sbb
jg
mov
sbb
add
push
and
pop
inc
outsl
add
insl
imul
mov
mov
adcb
pop
jge
subl
loopne
inc
mov
or
ret
fs
jbe
inc
push
mov
ret
leave
push
fwait
adc
adc
outsb
fstps
add
ret
pop
invlpg
lods
movsl
xor
add
adc
pusha
adc
mov
sbb
sbb
fsts
xchg
cs
cmpsb
insl
mov
shll
jns
push
pusha
pop
push
idivl
adcl
mov
inc
std
xchg
fistps
insb
pop
das
orl
sgdtl
adc
cmc
das
and
mov
or
cmp
add
arpl
push
sti
pop
pop
loop
stos
or
pop
in
shlb
or
stos
mov
xlat
loop
fstpl
mov
pop
pop
adc
add
sbb
lock
or
and
jo
inc
lods
decl
add
mov
popf
jnp
mov
imul
adc
jo
inc
or
lds
dec
or
arpl
add
inc
test
sub
fwait
add
push
loop
adc
lcall
inc
nop
pop
pop
aas
and
or
or
sub
divl
sbb
rcr
lods
mov
pop
mov
cmpsb
mov
ret
in
out
adc
push
adc
mov
cltd
sahf
popf
fistpl
sbb
loop
test
mov
syscall
daa
sbb
outsb
add
adc
or
mov
add
pop
imul
testb
and
xor
and
cmp
pop
ret
icebp
lds
add
and
sbb
movsl
add
out
add
lret
and
ret
sbb
push
inc
sbb
add
pop
and
mov
addr16
mov
cmpsb
adc
pop
daa
mov
inc
sar
daa
in
and
das
cmp
insb
mov
cltd
daa
push
orl
addl
arpl
pop
pusha
or
sbb
pop
test
out
adc
and
test
imul
repz
aas
sbb
nop
sbb
push
mov
ljmp
jbe
imul
adc
push
and
or
sahf
add
lock
pop
push
mov
adc
xor
adc
cmpsl
push
mov
adc
clc
and
pop
adc
adc
jo
sub
sub
push
stos
xchg
and
sub
mov
or
into
or
sbbl
lods
or
add
add
in
xchg
je
fwait
sbb
fcomps
xor
mov
adc
adc
pop
adc
xor
add
adc
cmp
add
xchg
add
cvttps2pi
lds
mov
pop
pusha
rorb
sbb
sbb
test
dec
pusha
icebp
rcrl
roll
sbb
jg
inc
add
push
repz
adc
xor
insb
in
and
xchg
mov
fmull
adc
or
fistpl
pop
adc
sub
mov
insl
inc
cwtl
movsl
adc
ret
jae
and
movsb
dec
sub
shrb
dec
jo
dec
mov
lea
mov
insl
mov
xor
dec
scas
fisubrl
fldt
xor
sbb
mov
mov
sbb
sbb
mov
nopl
lret
and
cmp
pusha
mov
ds
sub
mov
imul
pop
sub
outsl
push
ja
mov
push
fistl
dec
xchg
add
imul
shlb
sti
pop
xor
inc
das
push
adc
andb
adc
js
mov
mov
bound
inc
push
pop
cmp
mov
push
and
add
push
movl
add
and
cmpsb
insb
mov
movsb
pop
in
or
xor
fldcw
inc
inc
jg
jno
inc
and
xchg
dec
pop
push
bound
scas
xchg
adc
nop
pop
test
mov
add
andb
adc
adc
aaa
push
or
notb
faddp
cmp
add
sub
cld
cmp
dec
xchg
push
inc
jo
push
adc
stc
push
notb
push
mov
xor
addr16
add
add
rolb
fwait
or
adc
adc
cmp
add
adcb
add
inc
sbb
xchg
sub
inc
ret
jns
add
mov
mov
dec
cmpl
inc
invd
dec
dec
dec
dec
adc
sbb
add
dec
and
inc
sbb
aas
das
rcr
add
loopne
call
popa
adc
iret
jo
mov
outsl
pop
adc
inc
into
popl
incl
nop
adc
pushf
mov
or
pushf
pushf
pushf
pushf
push
sbb
and
das
das
pop
add
sub
cmp
cmp
dec
pushf
pushf
sbb
dec
adcb
sub
mov
jo
jb
rdtsc
inc
xor
in
mov
push
aas
mov
xchg
mov
inc
pop
imul
push
aad
pop
push
dec
or
in
lcall
fisttps
fnstcw
xor
jecxz
jmp
and
lds
mov
cli
mov
test
psubusb
adc
in
in
aas
out
pushf
pop
je
and
sub
addb
push
je
mov
or
sub
jb
push
pop
sub
inc
test
test
pushf
add
jg
or
nop
orb
out
arpl
pop
and
adc
push
sub
loopne
outsl
pop
pop
and
jg
mov
cwtl
dec
inc
pop
lahf
and
daa
and
ss
daa
daa
daa
daa
cmp
cmp
pop
enter
cmp
mov
inc
inc
repnz
dec
inc
das
nopl
jb
jb
inc
inc
inc
jb
jb
inc
inc
inc
inc
cmp
jb
dec
dec
inc
and
and
pop
out
shlb
or
enter
test
das
dec
lahf
dec
jo
scas
sbb
or
jo
pop
mov
jns
rorl
in
in
jecxz
call
add
pop
jecxz
das
stc
cmc
pop
mov
aas
das
adc
and
aaa
jg
incl
inc
pop
pop
jg
and
push
mov
ret
out
push
daa
push
pop
fistps
movq
pop
and
pop
ds
pop
push
mov
jne
outsl
unpckhps
sbb
scas
aas
mov
das
lahf
inc
mov
jno
and
filds
push
and
scas
add
push
fisttps
test
loopne
pusha
rcrb
aas
mov
sub
aas
fbld
bound
mov
push
adc
scas
push
rolb
aas
int
pop
rorb
push
lahf
mov
test
jg
inc
sub
pop
lsl
lahf
mov
cltd
insb
stos
iret
mov
adc
jg
popa
or
xchg
dec
and
sub
pop
sub
jg
mov
orb
sbb
fs
ljmp
pusha
push
lahf
insb
ljmp
es
aaa
mov
pop
fwait
cmp
lret
clc
test
subl
pop
adc
pop
bound
adc
fcoms
inc
dec
cltd
adc
popf
push
lcall
or
rcll
or
sub
sub
adc
xchg
rcll
pop
adc
rcr
xchg
push
and
sub
dec
mov
mov
rcll
xor
dec
jnp
or
decb
add
gs
or
push
mov
sub
adc
imul
fldt
push
pop
cltd
dec
loop
lea
push
outsl
fisubrl
push
and
dec
loop
push
pop
lahf
mulb
or
inc
lret
insb
adc
ss
fwait
adc
mov
xchg
js
insl
mov
fisubl
stos
cmp
inc
inc
push
in
and
inc
mov
mov
dec
int
adc
adc
adc
cmp
stos
dec
mov
outsb
mov
push
sbb
and
sub
shrl
xlat
rcll
xor
sub
outsb
adc
sbb
mov
xor
jb
aad
mov
rcll
sub
movsl
fisubl
out
add
dec
ds
xlat
inc
cwtl
dec
mov
pusha
jo
mov
shlb
and
adc
mov
mov
lock
stos
dec
cmpsb
and
rcl
insb
adc
int3
es
adc
mov
cmp
adc
add
sbb
test
into
dec
adc
mov
push
add
adc
dec
add
add
add
imul
dec
testl
push
inc
add
mov
add
mov
pop
or
inc
call
xchg
rol
or
cwtl
cs
loop
cmove
inc
push
in
ja
aam
push
inc
inc
push
push
inc
push
or
inc
dec
gs
sahf
mov
lret
add
or
sub
rolb
test
and
sub
rcll
inc
add
pusha
jo
inc
fstpt
or
add
sbb
adc
testb
add
add
push
pop
or
leave
negb
adc
add
ja
add
testb
addr16
dec
push
and
pop
cmpsl
dec
daa
push
rorb
and
push
adc
inc
js
insb
mov
push
push
mov
pop
aaa
pusha
add
fcmovu
icebp
mov
xor
leave
aam
add
daa
add
xchg
pop
leave
xchg
add
sub
leave
push
pop
lea
andb
inc
push
sub
out
or
fisubs
ljmp
jmp
push
insb
jae
adc
cmpsl
sub
inc
arpl
push
sub
ret
fstl
push
or
insl
je
imull
imul
add
pop
movsl
in
jg
add
insl
sahf
xchg
inc
inc
push
adc
push
imul
jne
sbb
addb
imul
add
das
rorl
lods
dec
add
cmp
sub
jmp
mov
add
jmp
xchg
xor
sub
fisubrl
sbb
add
ss
iret
insb
xchg
push
jecxz
jns
dec
loope
add
inc
js
dec
lods
loopne
mov
inc
and
dec
mov
aaa
je
push
add
dec
and
fildl
push
and
enter
mov
dec
nop
pusha
rorl
push
pop
sbb
xchg
mov
add
push
jne
and
mov
push
loopne
xchg
out
loopne
into
imul
push
gs
add
nop
fildl
pop
cmp
int3
mov
mov
add
ja,pn
rclb
fcoml
inc
lret
pop
addr16
adc
pusha
mov
ja
adc
sub
xchg
lods
add
sbb
lea
sbb
sbb
filds
in
mov
sub
int
inc
sbb
and
bndstx
and
sbb
icebp
jl
or
inc
sbb
sub
mov
popa
sub
sub
dec
inc
rcrl
cmp
dec
xor
or
mov
shrb
cmpb
mov
and
dec
push
xor
imul
es
jbe
xchg
inc
inc
pusha
je
out
pop
sbb
test
or
xor
mov
xchg
outsb
dec
in
push
sbb
cmp
orb
xchg
and
andb
and
stos
aam
imul
xor
xchg
inc
ret
push
mov
imul
rcll
dec
mov
sti
add
cmpsb
add
ss
mov
adc
and
pop
mov
jae
pop
adc
lahf
daa
pop
add
and
add
push
mov
stc
lcall
movsl
add
imul
mov
insl
push
das
sub
movsb
sub
lock
mov
cmpsl
out
in
in
push
je
inc
cli
and
add
lds
adc
add
dec
sbb
ds
or
add
clc
jb
scas
int
lret
inc
xchg
and
mov
jae
insl
lods
out
add
adc
dec
lea
and
pop
in
loopne
push
leave
jbe
mov
mov
add
pop
hlt
xlat
int
cmp
subb
sub
cltd
in
dec
imul
movsb
es
pop
dec
andl
add
stos
imul
pusha
nop
inc
pop
and
xor
loope
mov
dec
sub
call
outsl
pop
xor
inc
sub
xor
pop
repnz
and
add
adc
das
and
stc
dec
insl
pop
add
test
push
inc
sub
icebp
inc
fisubs
aad
and
sbb
sub
add
rcll
sbb
xchg
mov
push
or
out
cmp
sbb
mov
imul
test
pop
arpl
sub
add
mull
inc
ficompl
jge
push
dec
push
xor
sub
sub
jns
inc
dec
movsl
pop
cmpsb
ficoml
mov
and
push
ss
pop
mov
pop
imul
mov
cmpsb
out
add
mov
push
mov
frstor
and
fwait
add
das
sub
test
jecxz
add
push
or
push
adc
pusha
imul
sbb
imul
mov
roll
mov
or
andb
addr16
shlb
inc
mov
mov
setae
xor
push
sub
or
cmc
arpl
nop
or
cmc
pop
enter
ret
push
push
outsb
inc
outsl
mov
mov
lods
pop
adc
mov
xrelease
leave
push
cmp
arpl
ret
mov
fdivs
inc
xchg
sub
sbb
mov
mov
push
lea
mov
or
mov
sbb
pop
mov
sbb
xorl
add
inc
xchg
xchg
pusha
rorl
fcoms
insl
adc
sub
adc
cmp
and
sbb
mov
arpl
push
fisubl
and
ret
jae
lea
lods
or
adcl
je
dec
daa
push
jo
pop
jnp
cmp
mov
push
jns
jle
inc
jb
in
lea
test
jmp
add
aam
push
push
std
lea
outsl
and
inc
rcrl
adc
in
hlt
ficompl
and
addb
stos
dec
push
cmp
notl
dec
data16
cs
jns
in
jns
or
les
dec
stc
enter
pusha
pop
and
outsl
jo
sbb
sbb
and
not
adc
inc
pop
fwait
mov
jge
mov
les
das
sbb
fidivrs
and
out
mov
shlb
sub
cmp
mov
or
jb
jnp
inc
rorb
loope
mov
sbb
mov
sbb
jp
pop
mov
adc
mov
insb
add
fsubrs
and
and
shrl
xor
cmpsb
sbb
lret
sub
cmc
push
push
outsl
int3
adc
and
int
aad
inc
sbb
lret
pop
adc
in
adc
pop
dec
imul
test
jge
mov
sbb
notb
sti
push
sub
cmpsl
sbb
or
and
test
pop
sbb
shlb
mov
sbb
xor
int
loop
test
sbb
movsb
insl
das
mov
outsl
loope
ret
popf
push
sbb
inc
sbb
pusha
and
push
flds
mov
add
adc
cltd
adc
pusha
and
adc
pop
addb
sub
ficoml
rcr
and
cmp
inc
aaa
push
mov
imul
sbb
ficoml
imul
enter
jae
sbb
sub
inc
sbb
adc
sbb
lahf
sbb
adc
add
sbb
or
ss
mov
mov
adc
mov
popf
pop
sti
andl
imul
add
mov
adc
aad
pop
fcoms
cltd
mov
and
mov
lods
adc
imul
jno
inc
inc
sbb
adc
les
jbe
xchg
mull
xchg
sbb
mull
sbb
mov
mov
push
and
xor
inc
adc
adc
loope
es
jnp
mov
lea
xchg
mov
mov
sbb
es
sbb
or
das
daa
pop
ret
dec
in
push
mov
aad
or
and
outsb
xchg
sub
fsts
xor
or
orb
pop
enter
sbb
sbb
popa
inc
sbb
ds
mov
xchg
xchg
es
sbb
and
imul
popa
ret
add
cmc
sbb
and
sub
outsb
dec
sbb
fldcw
jp
xchg
dec
and
adc
sub
loope
mov
adc
and
inc
jae
xchg
insl
pop
mov
sbb
sbb
mov
pop
dec
lea
jg
inc
jge
push
cmpsl
sub
and
addr16
fcmovnb
and
mov
and
jmp
push
push
add
or
pop
push
addb
ficoms
jnp
pop
dec
xchg
adc
add
popa
insl
ljmp
xor
xchg
inc
fs
stos
shll
jb
sub
mov
sub
adc
sbb
jo
addb
xor
sub
repnz
jmp
dec
mov
mov
xchg
fadds
dec
popf
mov
inc
dec
fildl
pop
and
inc
dec
or
imul
dec
fwait
ret
pop
sarb
inc
and
add
cmpsl
inc
add
adc
sbb
add
pop
pop
loopne
push
xchg
xchg
std
popl
xor
push
cmpsl
xchg
jp
jne
pop
push
adc
pusha
jns
divb
ucomiss
xchg
sub
xchg
push
out
fidivl
inc
packuswb
add
sahf
cmpsl
mov
and
dec
xor
add
int
pop
lods
sbb
pop
and
sti
je,pn
rcll
cmp
scas
mov
and
mov
imul
jl
dec
in
inc
or
popa
push
sbb
aas
lods
insl
aaa
inc
es
add
bound
jns
sbb
push
ds
jbe
xor
imul
fs
pop
pop
in
rcl
movsb
out
je
cmp
push
xor
or
or
test
sbb
dec
leave
jnp
dec
add
dec
mov
sbb
push
dec
out
sbb
jae
fsubrs
test
lahf
add
or
jbe
mov
jg
sbb
xchg
incl
add
add
dec
add
inc
xchg
pop
or
loop
xor
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
shlb
dec
add
dec
add
push
