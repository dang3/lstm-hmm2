mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
ljmp
add
jb
gs
push
jns
je
insl
add
xor
or
jae
jge
inc
push
push
xor
push
or
out
shrb
add
push
outsl
jb
dec
fisubrl
outsb
je
xorb
jg
test
insl
insb
jg
fdecstp
add
aaa
mov
gs
out
fidivrl
mov
lcall
das
push
int3
fs
call
adc
push
outsl
imul
ss
add
adc
add
ss
icebp
add
cmp
sub
pop
push
push
inc
jns
pop
js,pt
jae
add
dec
popa
je
jbe
dec
mov
mov
loopnew
push
test
inc
js
mov
fs
jne
add
outsb
mov
jb
dec
arpl
inc
mov
add
jb
mov
push
in
shlb
xor
das
or
imul
pop
add
or
xchg
or
add
cld
adc
mov
outsl
fcomps
jle
nop
subl
adc
jae
loopne
push
cmp
or
lock
or
es
push
popa
push
popa
and
aas
frstor
pop
or
and
push
mov
insb
popa
jae
inc
sbb
rclb
pop
dec
push
inc
push
push
dec
mov
call
inc
push
inc
clc
adc
cld
es
add
cmp
cmp
inc
xor
sbb
enter
xor
xor
or
xor
test
push
popa
repnz
fidivrs
popaw
arpl
adc
push
push
andps
in
adc
adc
dec
push
scas
cmp
es
adc
push
push
popa
adc
dec
lret
pushf
adc
dec
data16
scas
xor
je
push
adc
or
jo
inc
jl
cltd
loopne
pop
faddl
adc
clc
aaa
les
cmp
aad
or
lret
adc
push
sub
xchg
std
insb
out
imul
pop
push
dec
cld
sbb
enter
and
in
jle
lcall
inc
cmp
cmp
add
pop
das
mov
adc
in
push
add
repz
push
sbb
push
and
lahf
jne
out
push
fcompl
push
ja
push
jbe
add
repz
hlt
xor
push
inc
es
push
fs
das
mov
pushf
pushf
pushf
mov
in
dec
inc
sahf
and
pop
mov
dec
pop
fimuls
adc
shrd
xchg
lret
add
pushl
sbb
dec
lret
decb
idiv
mov
jmp
cld
repz
cli
decl
incl
add
out
adc
dec
jbe
rclb
sub
std
bound
arpl
sbb
inc
insb
fdivrs
or
call
pop
nop
push
gs
add
sub
dec
xor
add
bound
stos
push
or
inc
in
or
out
ret
das
add
xor
sub
insb
or
mov
push
pop
xor
push
dec
popa
insl
and
ja
mov
add
add
add
mov
xchg
dec
jae
adc
cmp
jb
add
jno
add
popa
adc
pop
add
mov
hlt
push
fisubl
add
sti
push
sub
add
cmpsb
or
xorl
loopne
lods
test
pop
push
outsl
insl
pusha
cmp
jae
jle
inc
push
dec
cmpsb
out
add
pushf
cmp
inc
add
lock
fs
in
in
mov
repnz
and
mov
jo
or
loopne
sub
add
fbld
push
sub
popa
add
add
sub
jne
inc
mov
jb
pop
sbb
adc
adc
inc
xlat
add
or
add
clc
jae
and
and
cli
imul
fnstenv
jmp
dec
adc
jne
xchg
jnp
cs
jnp
and
push
dec
inc
fcoms
xor
ljmp
sbb
sbb
inc
jno
jp
pop
push
ret
stos
sbb
test
sub
or
mov
add
outsb
xorl
mov
orl
pop
pop
in
les
adc
gs
and
call
orb
outsb
jb
aaa
mov
add
or
sbb
or
addr16
sti
dec
jo
pop
adc
cwtl
insb
loop
jne
mov
push
and
or
mov
stos
gs
gs
cmp
mov
jo
je
push
data16
movl
push
pop
and
fnstsw
jnp
enter
pusha
adc
int3
jb
sub
or
ja
mov
jb
loope
mov
daa
popl
test
outsl
jns
bound
addl
cltd
jb
sub
or
leave
in
xchg
popa
or
shlb
mov
mov
test
frndint
gs
sbb
inc
and
clc
jmp
adc
jge
dec
pusha
int3
rorl
add
jo
lahf
lock
loope
in
rolb
push
adcl
sbb
fimuls
xchg
movsb
aas
loop
dec
push
sbb
lds
and
sarl
or
add
sbb
push
or
mov
adc
jecxz
dec
adc
xor
mov
push
aad
mov
mov
arpl
sub
inc
sub
aas
pop
inc
gs
jnp
mov
testb
pop
and
ljmp
cmpb
xchg
or
lods
push
adc
push
loope
scas
sub
or
sti
xchg
cmp
pop
lock
frstor
pop
push
rclb
out
or
mov
add
hlt
or
gs
imul
outsl
test
push
push
sbb
jb
jns
push
int3
dec
and
jb
inc
inc
mov
fimuls
dec
scas
push
sahf
or
pop
adc
jmp
add
cwtl
test
mov
movsb
shll
sbb
push
int3
push
insl
subb
add
aaa
add
sub
or
imul
or
jns
pop
or
je
aaa
ja
bnd
lcall
mov
xor
sub
ret
jbe
mov
cmp
sub
xor
sbbb
ja
or
daa
pop
imul
jnp
xchg
imul
and
pushf
insb
fwait
xor
movsb
adc
sub
pop
and
and
sub
fdivs
jno
or
dec
add
dec
xlat
pop
jne
cwtl
outsl
dec
movsb
xor
xor
jne
push
outsb
imul
in
cmp
fs
pop
addr16
enter
jne
dec
fimull
and
clc
push
addr16
loope
adc
or
jle
jns
es
rorl
jns
jl
fsin
add
inc
outsb
jns
mov
push
jae
fwait
xor
xchg
xchg
mov
xchg
fnstenv
add
mov
cmpl
clc
jl
fbld
and
push
js
xchg
dec
pop
or
xchg
data16
ja
rolb
or
sub
ja
lahf
call
popa
mov
loop
sub
and
add
push
aad
mov
adc
mov
or
add
pop
fnstsw
sub
cmpsb
jns
push
or
pop
andb
dec
imul
mov
daa
fwait
fwait
je
das
sbb
pop
jl
popa
enter
gs
clc
pop
loop
push
mov
mov
sub
or
das
push
rorl
adc
or
popa
js
das
lds
daa
out
cmp
sbb
push
sub
adc
and
add
add
push
or
add
pop
push
fistpll
inc
jge
xchg
imul
xchg
pop
mov
aad
and
aaa
push
cs
dec
pusha
in
sbb
in
xchg
push
mov
cltd
cmpxchg
xor
or
xchg
or
insl
bound
mov
hlt
push
lds
adc
orb
mov
adc
xchg
lods
and
add
loop
rorl
jne
ret
nop
rclb
es
jmp
lcall
dec
xor
push
popf
mov
xchg
imul
cld
push
jmp
adc
cmp
cmp
add
cld
or
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fdivs
leave
leave
leave
leave
ror
enter
leave
leave
sarb
mov
test
leave
leave
leave
movsb
mov
leave
leave
xchg
nop
mov
leave
leave
leave
mov
leave
and
js
leave
leave
leave
je
adc
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
add
mov
pop
test
and
jle
rclb
sbb
inc
and
in
ljmp
je
movzwl
mov
inc
inc
pop
ret
xchg
push
cmovl
loope
gs
inc
popa
cmp
and
hlt
add
inc
imul
lods
out
and
xor
xor
sub
pusha
push
and
fiadds
imul
outsl
data16
insb
test
push
je
popa
inc
inc
subb
add
mov
mov
test
stos
fdivrp
pop
mov
mov
insl
enter
imul
ljmp
jmp
int
test
dec
mov
bound
dec
mov
addr16
mov
jae
jle
sub
jnp
popa
dec
leave
cmpb
mov
pop
outsb
and
test
push
and
shll
pop
dec
add
adc
adcb
in
sbbb
sbb
mov
mov
lcall
or
push
dec
add
inc
or
lcall
or
or
or
fldl
imul
scas
xor
rcll
sbb
fildll
fildll
mov
mov
add
sbb
cs
jp
add
shll
aas
inc
and
sub
jp
nop
inc
dec
sub
xor
xor
into
xor
mov
cmp
shrl
aad
pop
cmp
mov
sub
add
add
neg
jns
divl
fildll
jl
push
cmp
add
js
and
xor
sub
xor
mov
add
nop
ljmp
mov
adc
jmp
mov
shr
paddw
mov
and
pop
mov
sub
scas
mull
add
sub
std
push
mov
adc
rcrb
leave
and
add
in
mov
add
lret
push
add
add
shl
or
jbe
in
pop
sbb
push
ret
cmpl
pushl
mov
cld
add
orl
adc
jle
rorb
mov
cmp
push
addr16
lock
and
sub
jge
xchg
or
mov
cld
mov
inc
sbb
dec
adc
push
push
sbb
test
fcmovu
das
mov
fdivrs
mov
and
fistpl
clc
roll
mov
mov
sub
mov
mov
lret
add
sbb
mov
shlb
cmp
cmp
sbb
frstor
out
sbb
add
mov
sbb
sbb
xor
std
loopne
lds
push
push
mov
adc
push
mov
movb
into
rolb
jle
add
mov
or
aas
jg
adc
or
sbb
mov
or
fistl
mov
sbb
add
mov
pop
pop
pop
pop
faddp
add
mov
sub
jae
jg
loop
jle
adc
mov
push
and
or
test
jne
push
jo
push
jns
add
jmp
or
cmp
in
push
push
lea
mov
test
jne
adc
fists
mov
cmp
jbe
sub
add
jmp
test
jne
lods
js
adc
add
fisubrs
dec
mov
sub
dec
nop
inc
or
jle
mov
mov
sub
pusha
cmp
and
jmp
rcr
rcrl
pop
shll
add
cmp
jbe
sub
sub
xlat
adc
clc
sar
xchg
xor
push
mov
cmp
es
push
fs
mov
mov
outsl
cmpsb
mov
jae
mov
out
sar
fnstsw
dec
and
jae
fdiv
loope
jo
pusha
lods
iret
shll
sub
data16
mov
add
dec
pusha
or
pop
pop
cld
mov
jmp
mov
push
std
sub
add
jbe
or
pop
ret
push
addr16
mov
fcomip
pop
mov
or
cwtl
aam
jmp
repz
sub
mov
addb
das
dec
and
out
mov
sbb
ret
lea
push
add
pusha
bound
dec
jmp
push
pop
pop
leave
je
in
lea
outsl
clc
ss
mov
inc
or
mov
addl
sub
idiv
je
lcall
add
movzwl
add
cmp
add
fstp
ja
dec
mov
cmp
pop
push
mov
adc
es
mov
push
hlt
and
and
xchg
dec
xchg
mov
jns
jecxz
orl
jae
lods
push
xchg
inc
and
pop
enter
out
or
movsbl
xor
mov
add
int
jnp
or
mov
leave
inc
inc
pop
mov
int
ja
push
test
sbb
cmp
xlat
jne
mov
push
jne
add
loopne
btr
mov
loope
jmp
loop
insb
mov
dec
jnp
sub
lea
jl
add
cmp
push
sbbb
cld
mov
iret
jb
mov
xchg
fcomip
aaa
add
enter
iret
sub
sub
cmp
ds
mov
ds
sbb
rclb
std
jg
or
andb
lea
mov
xor
loop
loopne
das
mov
mov
movl
inc
and
lea
push
or
imull
iret
mov
addr16
sub
dec
jecxz
xor
mov
lds
fucomip
movsb
or
faddl
pop
jle
xor
jne
lea
hlt
add
cld
or
pushl
and
inc
mov
fmuls
rol
or
jmp
mov
xchg
insl
pop
mov
add
push
adc
sub
std
enter
loopne
push
xor
sbb
sub
xor
pop
cmp
mov
dec
mov
out
sbb
or
inc
and
cwtl
fwait
inc
cmp
cmp
adc
inc
test
jb
pusha
enter
or
divl
neg
mov
test
sub
sub
mov
nop
and
mov
test
sar
jo
add
mov
jne
cmpl
push
ljmp
xor
fadds
data16
xor
cmpsb
imul
cmpsb
xor
push
mov
jo
xchg
inc
adc
cmp
jne
or
insb
push
mov
iret
sub
cltd
xchg
scas
jae
outsl
jp
push
push
cmp
pop
popf
mov
aaa
inc
addb
sbbb
loop
fmull
inc
mov
inc
xor
sub
xor
dec
clc
aas
adc
inc
cld
or
cmp
inc
loope
ret
fwait
mov
mov
xchg
mov
xlat
mov
pop
and
ret
dec
das
jl
add
cmp
pop
rcrl
sub
sub
adcl
mov
lahf
cmove
xchg
add
add
add
inc
cld
ret
test
pop
movl
loopne
add
push
xor
lcall
cmp
roll
in
or
in
scas
test
or
sbb
test
std
dec
test
lret
jb
jns
jb
jg
add
mov
ret
jg
roll
aaa
fmuls
test
lea
jg
or
push
mov
loop
roll
add
hlt
outsl
fneni(8087
add
mov
or
sbb
clc
xor
popf
shrl
movsl
ljmp
cmp
push
xchg
cvttps2pi
cmp
jb
sti
adc
adc
jae
push
add
push
and
repnz
xor
pop
xor
cmp
fdivs
pop
add
or
subl
pop
cld
or
mov
push
mov
ss
aas
mov
jne
or
adc
pop
data16
jle
aad
mov
roll
xlat
sub
clc
cmp
cmp
sahf
sub
rcl
lea
mov
jno
push
out
fdivr
mov
shl
imul
add
in
sbb
cmp
cmp
adc
add
dec
fistps
iret
pop
xor
push
xor
out
push
std
inc
xor
sarl
xor
addl
or
pop
jo
jg
mov
call
ljmp
rolb
pop
sub
test
add
lea
mov
inc
ja
andl
push
add
push
jle
mov
xorl
jp
jl
mov
or
pandn
add
and
fisttpll
insl
inc
jecxz
shl
lock
dec
iret
push
gs
shlw
xor
mov
clc
jge
loopne
je
xor
and
cmp
push
lea
jecxz
jg
cmc
popf
lea
or
jae
neg
fldz
fucom
xor
ret
or
or
rcr
outsb
mov
push
jecxz
pop
cmp
rorl
loope
jg
shlb
xor
dec
xlat
je
fcomp
ljmp
jb
dec
add
pop
jge
jae
rclb
sbb
mov
mov
jg
in
std
call
mov
inc
adc
mov
cmp
jbe
sub
aam
je
mov
add
fdivs
sbb
inc
or
add
push
scas
addb
pop
jo
mul
fs
mov
loop
ret
subb
shr
mov
add
enter
mov
std
mov
cmp
cmp
inc
sbb
wbinvd
shrl
scas
call
aaa
sbb
add
inc
sbb
pop
push
nop
lret
sbb
sbb
or
dec
and
bswap
xchg
add
xor
clc
push
mov
mov
inc
ds
js
orl
insb
lahf
frstor
inc
inc
sub
jl
sbb
fs
rcrl
xor
dec
pop
cld
nop
push
mov
push
mov
loop
loop
fdivs
mov
push
in
cmp
ja
sbb
mov
pop
or
push
lock
push
jae
ss
outsl
cld
std
leave
mov
push
adc
mov
js
pop
jecxz
lock
push
adc
adc
testb
je
add
xchg
loopne
jmp
mov
mov
rorb
notl
mov
sbb
mov
cmp
gs
into
shrb
loopne
mov
and
cmp
sbb
sbb
test
daa
dec
iret
neg
mov
inc
adc
lea
mov
and
pop
jne
leave
enter
xor
fistps
add
cld
sbb
mov
push
xor
mov
pop
dec
fistpl
pop
mov
dec
nop
or
mov
loopne
ss
lret
xchg
int
movsb
cmpl
mov
jmp
out
sub
sub
das
cmpl
sbb
dec
mov
pop
addb
mov
ret
adc
lret
mov
mov
add
mov
icebp
mov
stos
push
dec
sarb
mov
cmp
jne
shrb
add
push
mov
or
aaa
sbb
or
jne
mov
js
sarb
mov
push
aam
add
jg
lea
lea
lea
inc
in
sub
cld
sub
push
pop
out
add
push
add
test
pop
lcall
push
or
cmpb
fdivr
inc
outsb
pop
aaa
sub
sar
jge
add
incb
scas
add
jge
lret
push
jle
jne
insl
inc
add
call
fs
lods
imul
insl
sub
or
in
lock
imul
or
xor
outsb
divl
mov
sub
inc
filds
jg
dec
sahf
arpl
jl
ret
rolb
lcall
jae
add
pop
mov
decl
jne
cmp
test
mov
jmp
xchg
loopne
jbe
cmp
loopne
adcl
mov
ds
xor
shr
mov
pop
clc
je
cmpl
cmp
and
jmp
mov
and
clts
inc
filds
add
test
pushl
cmp
jbe
sbb
mov
mov
push
dec
jne
data16
idivl
push
pop
mov
mov
inc
inc
mov
and
pop
les
lcall
data16
mov
arpl
add
pop
test
push
xor
and
sbb
jb
push
je
push
fldcw
pop
jmp
mov
ja
jge
and
push
mov
pop
repnz
fadd
mov
mov
xchg
and
and
jne
xor
mov
pop
scas
sub
aaa
pop
adc
es
in
push
insl
inc
ficoms
push
je
dec
jl
cmpb
xchg
mov
xchg
negl
fistpl
add
lea
imul
aaa
add
loopne
jbe
out
jp
mov
dec
out
in
loope
xchg
xchg
jb
push
int
je
mov
lret
push
xor
sub
cmpl
xchg
jg
mov
jne
mov
and
push
sbb
pop
icebp
test
inc
push
or
ja
xor
pcmpgtb
and
inc
psrld
xor
in
mov
sub
sub
add
je
dec
je
divb
or
push
push
push
cmpl
mov
sub
jno
and
xchg
dec
mov
orl
stos
xchg
push
xchg
popa
sbbl
insb
cmp
add
xchg
jle
test
push
add
mov
hlt
or
dec
sbb
inc
xor
jae
imul
cmp
add
ja
inc
xorl
enter
dec
jne
mov
adc
mov
sbb
ror
xchg
or
lds
push
xor
mov
ja
xchg
lea
sbb
add
adc
clc
jbe
mov
cmc
bound
add
add
cmp
jne
nop
mov
fistpll
xchg
mov
add
mov
ljmp
inc
lock
aaa
cmpsb
out
rolb
add
add
mov
mov
shr
cmp
decl
pop
scas
enter
loop
push
in
loopne
add
mov
mov
mov
xor
loope
lea
scas
dec
mov
and
jae
jl
les
sbb
shll
xlat
mov
xor
div
imul
mov
inc
pushw
data16
push
pop
jg
mov
xor
add
jae
adc
mov
fists
ret
mov
ret
dec
lcall
adc
ja
xchg
cmp
daa
push
push
mov
add
lret
jmp
mov
or
std
cmp
jne
mov
fwait
mov
adc
orb
or
dec
or
imul
jne
sbb
dec
ja
jb
rorl
repz
jnp
fistpll
push
fistpll
fimuls
cmp
cmpl
xor
xor
mov
or
movsl
jge
sub
popf
push
lahf
mov
pop
sbb
xor
mov
or
adc
add
ret
mov
lods
lret
fidivl
adc
cmp
mov
cmp
mov
jle
pop
xor
repz
call
add
xor
sti
je
push
mov
inc
pusha
pop
or
out
push
mov
xor
jne
test
bound
rcr
arpl
outsb
ffreep
loope
sbbb
bndstx
addb
sub
and
mov
mov
mov
push
test
and
mov
adc
cmp
cmpsl
gs
mov
jge,pn
scas
add
and
js
or
into
jge
jl
or
std
jg
jmp
cmp
ja
movzbl
add
jo
adc
inc
xor
mov
cmpsl
nop
call
jg
push
incl
jp
loopne
cld
push
pop
call
push
mov
lret
fsubl
pop
pop
jne
repnz
aas
mov
pop
aaa
fisttpll
add
shl
sti
sub
push
add
fcomip
jmp
push
inc
and
cmp
or
pop
lea
add
hlt
mov
ja
inc
inc
sub
lea
jnp
inc
mov
sbb
div
push
pusha
aas
icebp
adc
incl
lahf
cmp
je
cmp
ja
sub
jg
loopne
loopne
or
jbe
sub
jle
lock
outsb
outsb
enter
push
rorb
and
sub
in
rorl
dec
dec
pop
popa
pusha
iret
repz
jns
push
mov
mov
push
jo
cwtl
dec
or
adc
flds
jbe
sbbl
cmp
jle
jo
in
add
lret
adc
jbe
adc
flds
roll
pop
inc
cmc
pop
pushl
mov
or
fisttpll
inc
add
mov
and
add
out
je
add
pop
cmp
push
out
cmp
dec
add
ret
mov
adc
add
add
cli
lret
in
and
or
and
js
or
cmp
mov
inc
jmp
and
and
pop
jmp
cmp
mov
imul
loope
cmp
pop
mov
fiaddl
xor
subb
sbb
xor
jmp
subl
adc
mov
or
lcall
shl
xchg
adc
std
or
push
loope
jecxz
pop
div
jne
push
fs
scas
or
jne
add
aam
popa
sbb
push
int3
mov
out
sbb
clc
adc
mov
cmp
add
jmp
pop
jp
daa
add
std
mov
imul
mov
sbb
pop
mov
and
fnclex
fldenv
jae
sub
cmp
pop
push
sub
jge
fwait
pop
adc
or
fnstcw
cmp
mov
or
fldcw
push
add
fldcw
pop
inc
jbe
dec
aad
xor
insb
adc
push
jge
mov
sti
fwait
or
cmp
or
data16
sub
xchg
jbe
je
ret
cmp
pop
jae
cmpl
or
add
or
push
movl
jle
dec
sbb
mov
addr16
or
mov
cmp
or
adc
or
lea
mov
push
adc
fstpl
mov
clc
insl
jne
jge
jbe
and
mov
push
push
push
push
or
push
iret
mov
adc
test
faddp
push
lss
push
or
fcomip
push
fisttpll
mov
xchg
js
cld
dec
and
loopne
jo
cmp
dec
add
and
pop
ja
push
mov
add
push
sub
sti
sbb
dec
je
add
outsb
cmp
pop
push
cmp
orb
rol
push
movsb
pop
lock
sbb
dec
dec
jmp
das
inc
cmp
shlb
sqrtps
fmull
sub
and
cmpsb
jle
or
or
mov
push
add
push
push
lea
stos
pop
icebp
add
cmp
cmp
mov
cmpl
cmp
test
dec
decw
dec
pushl
inc
inc
inc
inc
in
adc
sub
js
xchg
push
aaa
loopne
jle
je
mov
loop
rorl
in
ds
inc
pop
pop
dec
mov
pop
aam
jae
cmpb
out
push
xchg
sub
mov
out
dec
jne
jmp
lea
cmp
insb
adc
or
or
divb
jmp
cmp
fwait
adc
cmc
movsl
dec
imul
popf
mov
pop
mov
rcrb
add
dec
and
ret
xor
push
lahf
inc
mov
ror
mov
stos
fstpl
in
mov
sbb
add
fcoms
add
mov
daa
jle
aad
fs
lea
sub
pusha
lods
dec
jo
sub
dec
loope
hlt
daa
inc
dec
sub
pop
cmovns
adc
pushl
call
sbb
fucomi
pop
cmp
cmp
aad
add
jg
sub
pop
pop
and
inc
testb
xchg
mov
ja
and
push
lea
dec
cld
stos
xor
and
mov
adc
mov
mov
and
out
int
aas
out
fmull
jmp
loope
push
add
push
fldl
fstl
fstl
or
cld
or
or
add
mov
sub
hlt
repnz
sarb
mov
and
inc
lea
addr16
sbb
sbb
iret
repz
push
adc
adc
or
xchg
out
cmp
incl
push
or
lcall
mov
test
int3
add
push
add
jle
mov
je
mov
push
sub
je
and
je
jle
jle
je
pop
je
xor
arpl
popf
loop
movsl
push
push
data16
or
insl
and
xor
or
cmp
ja
lea
add
add
gs
ljmp
or
jmp
and
push
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
push
addr16
sahf
popa
jb
mov
mov
jbe
adc
add
outsl
fwait
cmp
add
lret
mov
cmovne
lock
mov
pop
aaa
jbe
mov
or
jnp
push
ja
adc
cmp
sahf
push
into
jne
pop
xchg
push
imul
xchg
das
xor
mov
jl
mov
add
mov
sub
cmp
jg
add
rcll
mov
rep
fsincos
push
mov
pusha
add
pop
jmp
xchg
adc
add
push
nop
inc
mov
aaa
add
inc
fs
into
jmp
aad
ret
jmp
add
enter
nop
pop
adc
xor
rolb
sbb
or
aas
dec
pop
mov
fs
sbb
aam
lock
cmpsb
push
stos
adc
stc
mov
push
push
xor
aas
std
pushl
mov
cmp
xlat
sub
xchg
test
xor
test
jno
imul
jns
pop
pop
insb
adc
adcb
jnp
out
mov
loopne
mov
lock
push
xor
sbb
xor
add
cld
aaa
clc
movb
movb
or
adc
cwtl
adc
sub
inc
xchg
add
mov
fimuls
inc
cld
mov
inc
mov
rol
cwtl
cmp
jae
or
test
loop
cmp
mov
and
loop
mov
rclb
cmp
jne
dec
jne
pushl
decl
add
mov
cmp
repz
sbb
mov
inc
or
inc
dec
cwtl
into
les
ja
adc
rcrb
jl
int3
lcall
jge
pop
push
pusha
rcll
lods
push
lret
push
in
leave
sub
enter
jns
pcmpeqb
add
je
jle
xchg
in
jo
inc
xchg
jmp
mov
lret
stc
xor
in
sti
pop
push
sbb
jmp
fstp
fldt
adc
fcoms
dec
sub
inc
jg
cmpl
aas
mov
cli
ds
in
or
or
ret
mov
adc
stc
enter
cwtl
push
and
sbb
clc
in
stc
add
mov
sbb
xorb
out
xchg
jbe
stc
fnstsw
xchg
and
mov
adc
xor
leave
sbb
xor
cs
jbe
imul
cmp
mov
fwait
stc
add
mov
bound
cmpb
xlat
fadds
out
nop
lods
outsb
xor
xchg
push
or
push
push
int3
dec
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
dec
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
sti
jmp
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
jg
mov
stos
mov
cmp
or
mov
pop
out
sub
scas
clc
ljmp
daa
cmp
inc
xor
cmp
call
mov
sti
jmp
ljmp
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
incl
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
ds
push
cmpsb
scas
mov
pop
or
addl
cli
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
ljmp
and
addr16
repz
mov
subb
and
and
sahf
icebp
call
outsb
bound
xor
fninit
fwait
dec
fidivs
inc
gs
aas
rcr
in
rorb
ret
enter
dec
repz
enter
or
push
lea
xchg
stc
push
inc
sbb
push
packssdw
fsubl
adc
push
mov
mov
sete
mov
xchg
sbb
lahf
mov
fwait
jge
lock
in
or
dec
orb
dec
out
scas
fildll
mov
ror
testl
fimuls
push
fldt
fs
push
cs
xor
lret
jle
movsb
popl
mov
mov
push
clc
or
push
cld
ret
push
or
pop
mov
add
stos
pop
and
mov
mov
mov
sub
push
in
rcrb
add
in
or
je
pop
mov
xchg
jae
push
push
mov
daa
inc
sti
jnp
mov
push
sbb
cmp
add
mov
mov
mov
mov
sub
jae
mov
sub
incb
push
xchg
cmp
out
jae
paddd
fxsave
xor
jmp
gs
add
lock
pop
jl
lock
push
ret
rcrb
xor
mov
mov
mov
mov
in
push
call
sti
inc
mov
imul
add
mov
mov
pop
jl
call
jmp
lea
mov
and
insb
clc
aad
loop
mov
jmp
mov
push
fisttpll
mov
insb
jne
cmp
inc
sbb
xchg
fisubl
push
or
cmp
or
out
cmp
cmp
mov
push
clc
lods
js
cmpl
push
push
mov
cmp
mov
xor
xor
xor
jb
dec
jae
fidivrl
jo
adc
or
jne
or
cmpsb
loop
add
inc
loop
xor
popa
jmp
lods
shrl
inc
lock
xchg
mov
and
inc
movzbl
add
adc
add
pop
mov
mov
cmp
insl
add
cli
neg
push
dec
rorl
mov
leave
jne
mov
pop
lock
int
push
xchg
jmp
loop
les
cmp
mov
push
add
repnz
je
pop
add
push
fdivp
pop
add
sub
je
cld
pop
inc
push
scas
add
fwait
out
lret
jl
pop
add
out
pop
cmp
divb
mov
pop
jne
das
mov
scas
or
and
cmp
mov
jo
pop
adc
pop
cmp
sbb
outsl
pop
push
data16
or
pop
data16
push
hlt
cmp
roll
add
xchg
jge
call
scas
mov
cld
jo
shrb
add
add
loopne
aas
in
sub
jbe
push
inc
imulb
std
and
aam
cmp
inc
add
add
push
cmp
push
pop
push
xchg
scas
loopne
ja
aam
jg
ret
lahf
bound
inc
xchg
xor
xor
mov
add
mov
mov
in
lret
jae
daa
mov
dec
push
cmp
bound
push
add
dec
jne
xchg
out
sbb
xlat
jmp
pop
jmp
push
lea
decl
in
dec
dec
adcb
mov
icebp
mov
xorb
sbb
psubusw
cwtl
out
xor
shll
add
and
ja
std
icebp
adc
inc
xchg
push
rorl
ss
lods
add
jbe
xor
mov
jl
cmpsb
das
pop
or
adc
cmp
lahf
mov
clc
add
mov
sub
lea
test
add
push
push
cli
mov
jmp
add
repnz
mov
mov
adc
sub
je
pop
ret
pop
jmp
pop
xor
call
jecxz
scas
push
dec
fcmovne
push
pop
add
daa
jns
mov
iret
dec
mov
out
cli
push
test
jl
inc
hlt
xor
lea
mov
mov
push
mov
decl
add
pop
fiadds
mov
mov
push
push
jp
loopne
cmpsl
add
inc
or
pop
xor
pop
icebp
out
push
add
cmp
pop
adc
push
clc
cmpsl
push
push
push
shlb
push
mov
inc
in
mov
movsb
mov
fst
popf
cld
or
inc
xor
jg
sbb
or
mov
pop
cmpsl
scas
add
or
cmpl
add
sbb
pop
shrb
sarl
idiv
cmp
jne
xor
sub
gs
adc
mov
ss
rcr
loopne
dec
mov
or
popa
inc
push
cmp
mov
repnz
push
test
cmp
cld
cmp
mov
in
jae
jmp
pop
cli
xor
ret
mov
sbb
or
nop
decl
push
js
add
pop
into
cmp
ficoms
pop
pop
or
cmp
sbb
push
mov
lret
jae
mov
nop
into
dec
xchg
adc
inc
adc
or
ret
pop
iret
ja
or
mov
or
inc
add
and
push
add
push
dec
js
shl
addr16
subb
imull
or
test
and
clc
adc
adc
mov
adc
insb
adc
test
add
ja
jmp
clc
dec
lock
push
adc
add
loop
or
sbb
jmp
lds
jecxz
mov
xchg
lock
lock
xchg
mov
push
and
repnz
addr16
pop
push
sbb
jle
cmp
and
jl
adcl
jle
mov
inc
dec
jns
inc
inc
xchg
jbe
push
mov
xchg
add
test
add
add
stos
insb
adc
test
push
sub
inc
ja
jl
ds
or
jne
jl
and
test
mov
mov
cmp
push
adc
pop
dec
addr16
and
pop
cltd
cmp
sbb
sbb
sbb
add
roll
add
in
cmpsb
push
cmp
xor
in
cmpb
push
mov
sti
movzbl
les
and
cmp
lods
in
push
cmpl
xor
xor
mov
popa
dec
mov
je
iret
lret
ret
rolb
xchg
pop
imul
mov
sbb
mov
pop
or
dec
ja
adc
clc
lea
test
out
or
jmp
int3
or
mov
sub
push
mov
out
sub
jle
mov
jmp
add
lea
mov
shll
mov
fmull
jp
lock
dec
divb
fsubrs
jne
or
push
popa
push
add
mov
dec
movsb
pop
push
mov
dec
ss
xor
insb
inc
pusha
xor
mov
or
mov
push
xor
cli
add
inc
push
push
jbe
xor
sbb
adc
nop
nop
pop
push
jnp
shll
add
push
cmp
jne
push
outsb
ljmp
cmp
jne
nop/reserved
pushf
clc
cmp
inc
add
imul
push
fmuls
fldl
jne
mov
add
ret
sub
inc
mov
add
das
cmp
pop
pop
call
jl
fiaddl
call
mov
jns
dec
fwait
add
popa
xchg
es
lea
call
jne
xchg
stos
or
lock
inc
xchg
call
lock
dec
aad
xorl
cmpsb
or
insb
in
or
in
xchg
push
sub
pop
cmp
sub
fs
cmp
outsb
pop
jge
push
sbb
cmpb
cld
sub
add
push
in
push
call
in
or
cmpsb
push
push
pusha
ret
push
push
push
cmp
mov
pop
cs
add
orl
push
pushl
push
sahf
xchg
cmp
push
push
and
leave
jg
push
xor
inc
push
cmp
je
or
jne
movsbl
inc
mov
fwait
addl
jle
inc
mov
dec
push
jl
jecxz
xor
dec
lods
pop
push
loop
popa
sub
mov
inc
aaa
insl
jecxz
pop
mov
adc
adc
or
mov
adc
outsb
push
add
stos
inc
push
adc
pushf
icebp
sub
cmp
rolb
jg
push
inc
sbb
cmpl
je
dec
inc
xorl
sbb
jbe
test
and
jl
clc
add
stos
pop
or
dec
cltd
cmc
xchg
jmp
adc
jne
push
jne
push
xorb
jns
adc
cmovs
dec
add
inc
lcall
push
cmp
sub
adc
subb
fdivrs
in
mov
pushl
loopne
and
outsl
or
add
fs
and
push
pop
shl
sti
jnp
mov
mov
inc
and
or
xchg
push
outsl
je
cmp
xchg
dec
or
add
aam
mov
lods
inc
mov
or
mov
add
mov
lock
mov
cmpsb
inc
mov
mov
mov
sbb
push
clc
addb
cmp
idiv
decl
pop
inc
enter
xor
mov
cmp
jne
inc
inc
mov
mov
shlb
jne
add
dec
jne
faddp
mov
adc
inc
jmp
inc
sbb
lds
mov
sub
adc
loop
sub
pop
test
add
mov
lds
pop
adc
loop
dec
mov
push
jmp
and
sbb
pushf
sbb
push
push
add
xor
sub
jo
adc
mov
or
rcrl
or
adc
and
loope
popa
in
addr16
test
pop
ficompl
daa
in
loopne
push
out
mov
adc
shlb
push
paddd
pop
push
push
push
push
mov
push
int
sbb
cmp
jo
add
cmpsb
imul
dec
icebp
xor
push
pusha
mov
add
add
nop
cmpsb
xor
and
movl
lods
sti
or
or
add
xlat
or
pop
pushf
sub
jo
adc
adc
pop
repz
jae
mov
sahf
cmpsl
scas
fnstsw
or
std
jmp
ret
xor
nop
or
adc
xor
and
or
or
add
jbe
sti
sub
pop
cmp
push
sub
mov
sbb
je
jmp
add
add
je
jmp
mov
insl
fnstsw
sub
adc
jmp
ljmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xlat
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jbe
dec
xor
lret
movzbl
push
or
scas
aaa
push
inc
pop
ret
daa
xchg
dec
addr16
pop
pmaxub
je
push
dec
orb
pop
or
jp
mov
adcl
ds
and
mov
jmp
in
push
inc
call
mov
sbb
loopne
or
and
pop
ret
and
inc
add
lock
or
out
ret
fmulp
inc
ljmp
pop
or
mull
inc
or
sbb
cmp
pop
add
or
push
les
jne
sbb
or
mov
mov
sbb
lock
stos
hlt
in
lahf
test
jle
dec
mov
je
add
pop
ret
and
inc
xor
push
leave
dec
scas
jmp
xor
xor
dec
addr16
shl
lea
push
mov
xor
inc
out
out
sti
adc
cmp
jle
mov
inc
lea
mov
ss
xlat
inc
out
cmpsw
add
sbb
into
inc
mov
mov
lret
mov
cmp
push
pop
loopne
add
icebp
inc
dec
sbb
faddl
jecxz
ds
xchg
sub
push
mov
fistps
inc
out
add
inc
xchg
ja
iret
push
decb
mov
lea
mov
mov
add
mov
insl
aas
and
dec
je
add
int3
pop
pop
inc
jmp
pop
cli
scas
fmull
add
dec
jne
pop
pop
outsl
in
out
bound
or
hlt
adc
xchg
mov
add
adc
pop
add
lods
lahf
mov
pop
and
and
dec
movsl
pop
hlt
fdivl
loopne
inc
xorb
push
rorl
clc
push
jge
sub
pop
jl
adc
ja
es
mov
mov
or
idiv
fldl
sbb
inc
leave
test
or
aaa
push
rcll
cmp
outsl
adc
cmpl
sub
mov
or
iret
imul
psubq
xor
inc
and
dec
pop
ret
push
sub
fcompp
xor
jge
xor
sub
mov
pop
sbb
cmp
adc
adc
or
push
sti
sbb
lret
and
xorb
or
or
pop
enter
out
cmpb
jnp,pn
in
negl
pop
call
sbb
icebp
xor
jne
xchg
add
sbb
popf
add
je
addr16
jne
rcrb
pushf
imul
and
jb
in
pushf
push
xchg
push
je
inc
scas
js
or
sbb
or
sub
sbb
inc
pop
cmp
shll
add
push
and
scas
sub
loopne
adc
jne
cli
jg
adc
push
je
lds
mov
pop
push
jl
pop
shll
mov
and
jmp
add
lret
shlb
dec
or
mov
mov
dec
pop
mov
out
sub
or
mov
cmpl
or
add
push
xor
push
push
insl
aaa
ror
push
or
push
cmp
clc
sub
shlb
shr
or
or
jge
out
ret
packuswb
mov
repnz
hlt
jecxz
popf
push
adc
mov
jno
mov
addr16
xchg
outsb
lock
ds
movsb
sub
loopne
fwait
or
jae
mov
adc
movsl
aam
or
adc
mov
outsb
clc
push
add
jo
sbb
jo
jmp
lods
xchg
push
js
movl
sbb
and
add
push
xor
sub
addl
jg
push
ja
push
push
push
sbb
sub
loopne
add
mov
adc
cltd
jb
pushf
sti
push
pushf
or
xchg
test
cmpsl
sbb
bound
fmul
dec
and
xchg
sbb
dec
clc
dec
jl
lock
hlt
out
mov
fiadds
push
popaw
inc
adc
xchg
mov
sbb
add
cs
ret
leave
pop
dec
jne
pop
pop
mov
outsb
pop
add
mov
mov
mov
inc
jle
mov
mov
mov
lock
dec
cld
shr
flds
rolb
pop
adc
scas
mov
ljmp
out
adcb
cwtl
inc
iret
roll
std
jecxz
adc
pusha
dec
and
pop
cmp
push
aaa
jae
push
pinsrw
es
dec
loopne
iret
mov
pop
in
stc
mov
les
adc
mov
in
push
outsl
or
cmp
lock
mov
pop
pop
js
sbb
and
push
xor
mov
movzwl
andl
mov
cld
cld
das
ret
pop
jg
push
jmp
lea
jmp
call
jge
push
xchg
mov
in
pop
mov
pop
pushf
pusha
cld
jle
lea
dec
loop
or
lea
sbb
int3
fdivrp
cmp
jne
pop
insb
and
jl
insb
pusha
call
imul
mov
nop
and
sub
sbb
inc
inc
inc
test
dec
pop
pop
lock
lahf
clc
xorl
clc
push
push
xchg
pop
push
xor
cmpsl
xor
adc
pop
mov
push
clc
shll
inc
mov
in
push
mov
fnsave
dec
imul
pop
sub
mov
scas
dec
inc
pop
sub
inc
mov
loop
mov
jecxz
jg
ljmp
dec
cld
stos
rcll
fildll
inc
clc
xchg
adc
ficoml
cmp
addr16
stos
push
cmp
je
xchg
call
imulb
mov
mov
push
ret
ss
mov
mov
aas
and
andb
aaa
call
add
sbb
push
and
leave
cmp
je
cmp
je
or
outsb
sbb
fwait
loopne
add
inc
add
enter
int3
dec
sub
or
or
or
je
push
push
or
in
add
call
shll
add
xchg
push
mull
fisttpll
repnz
pop
mov
aaa
cmp
ret
inc
mov
xor
push
fs
push
gs
out
add
pop
push
mov
shr
cmp
or
or
inc
dec
push
fcompl
loope
loopne
cmp
mov
xchg
pop
and
ss
pushf
aam
lods
xor
mov
dec
inc
inc
ret
adc
add
jne
mov
pop
cmp
cmp
jne
shr
shr
sbb
insb
out
cli
pop
scas
movzbl
cmp
jbe
push
mov
inc
inc
sbb
xchg
cmpb
jne
push
mov
push
shll
mov
ret
pushl
rclb
loop
and
cmp
dec
fistl
dec
ret
mov
pop
sub
imul
push
cs
dec
dec
dec
ret
sahf
in
xchg
add
in
mov
inc
sbb
inc
cmpsl
add
cwtl
push
push
pop
push
cld
orb
pop
inc
adc
nop
fldenv
inc
arpl
repnz
xchg
add
jecxz
dec
push
push
fdivrs
xchg
insb
push
cld
add
jo
push
je
stos
pop
lods
mov
rorb
adc
loopne
push
js
ret
add
subb
imul
fs
push
jnp
fs
inc
callw
jp
add
jo
pop
mov
dec
into
repnz
cmp
mov
mov
fs
dec
fmuls
push
mov
xchg
faddl
dec
clc
fwait
add
lret
adc
pop
add
pop
mov
rorb
aas
and
cli
jno
mov
cmp
into
mov
dec
jmp
in
push
mov
cmp
add
jo
add
out
inc
pop
iret
inc
xchg
xlat
hlt
and
ja
hlt
dec
and
jl
pop
push
add
dec
mov
pop
push
lods
push
pusha
and
dec
sub
sbb
repnz
push
add
mov
jmp
cmp
push
pushf
dec
add
inc
pop
xchg
pop
pop
lea
jmp
xchg
mov
test
test
sub
cmp
xor
pop
push
lea
lea
neg
out
movsb
or
dec
jns
add
cmp
je
and
dec
outsl
inc
mov
or
mov
cmp
dec
shlb
push
mov
mov
xor
ret
ljmp
dec
jl
cmp
jge
sub
or
jg
add
shll
aad
mov
lock
jo
sbb
shr
loopne
jmp
xor
jl
jb
es
push
enter
shl
daa
test
push
sub
cmpl
sub
mov
jno
xchg
push
ss
mov
inc
jmp
int
lods
call
jge
test
hlt
inc
into
loopne
icebp
outsb
icebp
std
mov
loop
add
shr
cs
push
cmpsl
mov
inc
fsubl
test
pop
cmp
ja
pusha
roll
das
dec
repnz
pop
insb
jp
jno
xor
rcpps
or
jb
push
les
lds
shlb
push
push
shr
lcall
inc
dec
dec
pop
cmpsb
sub
push
xor
mov
dec
adc
insl
inc
loope
add
and
js
pop
data16
std
incb
add
jmp
xchg
jmp
cmpsb
or
pop
das
or
pop
add
adc
xchg
dec
cmp
or
sbb
shr
cmp
jge
xor
pop
dec
cmp
call
mov
ss
inc
fistpll
into
and
mov
add
add
mov
xchg
push
dec
jl
out
cmp
push
lock
test
inc
popl
movsb
fsubr
ret
daa
push
shr
pop
pop
data16
fnstsw
lock
out
cmp
sub
fisubl
and
bound
pop
pop
popa
sbb
imul
push
rcrb
cmp
pop
add
pop
pop
sbb
or
das
sbb
pause
mov
push
add
cli
push
push
mov
xchg
stos
in
lock
js
pusha
adc
fdivrs
push
inc
arpl
mov
xor
sub
mov
ds
cmpsl
jns
pop
dec
jge
push
in
push
js
decl
lea
mov
xchg
fnstsw
loopne
shll
iret
in
sub
push
push
mov
mov
mov
mulb
cmp
jge
push
xchg
fst
aad
and
add
imul
test
or
sbb
inc
shl
sub
jae
ss
mov
adc
inc
xor
and
lret
jo
mov
xor
lcall
test
and
inc
jmp
mov
mov
loop
push
movsb
in
fisttpll
push
or
or
adc
in
add
or
int3
add
inc
adc
jae
in
mov
and
sbb
adc
adc
arpl
or
leave
adc
mov
mov
push
sbb
pop
xor
and
leave
movsl
push
mov
popa
adc
sbb
cmp
jne
push
js
or
xchg
xorl
lea
xor
adc
stc
repnz
test
call
ja
lock
jl
cmp
jl
sahf
jle
dec
sub
sub
pop
mov
ljmpw
in
push
lea
xlat
push
mov
mov
int3
adc
add
pop
xchg
fimull
mov
icebp
cmp
pop
int3
insb
mov
call
cmp
pop
lock
fadds
pop
dec
cmp
push
cltd
mov
repz
loopne
adc
nop
cmp
jge
insb
mov
inc
je
jb
adc
scas
insl
pop
jle
inc
xor
jno
mov
mov
mov
lea
or
mov
mov
sub
adc
inc
and
fs
ja
jae
mov
mov
push
mov
dec
js
pop
test
sarl
sbb
ja
dec
adc
cmpsw
push
sub
pop
outsb
pusha
mov
fcompl
pop
mov
sub
shr
cltd
xchg
flds
das
cltd
cmp
ds
add
dec
mov
test
out
and
mov
seta
and
addb
mov
xor
adc
ror
out
call
cmpsl
mov
cmp
jb
or
stos
aam
push
inc
aas
scas
add
test
sbb
outsb
daa
enter
cmpb
sub
in
mov
rclb
cmp
addb
mov
push
mov
mov
aas
push
mov
ret
enter
dec
dec
jb
xlat
mov
push
sub
jae
mov
hlt
mov
mov
and
cmpsl
pop
fistl
aam
pop
mov
or
pop
inc
lcall
jle
sub
mov
movsl
subb
leave
push
mov
and
je
or
adc
jp
ret
fsubs
pop
jb
add
mov
out
out
xchg
xor
pop
xchg
xor
mov
mov
pop
cmc
fistl
xchg
cmp
je
cmp
mov
or
sub
je
cmp
mov
pcmpeqb
cmp
mov
mov
mov
jno
adc
clc
jmp
xor
adc
or
rcrl
fwait
adc
jmp
push
mov
lods
or
add
in
inc
jo
cs
adc
cmp
pop
jmp
cmp
sub
push
pop
jmp
inc
scas
jae
mov
dec
outsl
adc
pop
call
adc
mov
int
stc
pusha
pop
mov
jmp
sub
mov
out
inc
jb
xchg
es
pop
ret
testb
adc
cmp
stc
out
mov
and
mov
push
pusha
and
fcoms
pop
sti
negl
ja
pop
lock
es
aaa
sbb
lods
mov
or
and
jnp
jns
jae
jmp
test
jo
data16
test
cmp
jge
icebp
jmp
or
sub
push
imul
sbb
lods
jo
inc
push
icebp
rorb
cld
mov
lea
outsl
mov
insl
xor
test
push
les
sarl
lock
or
inc
add
mov
cmp
cmp
pusha
or
or
pusha
or
mov
or
mov
setne
inc
pop
pop
rorl
adc
and
and
pop
push
arpl
jge
in
xchg
mov
in
mov
test
add
nop
dec
sarb
in
inc
or
inc
pop
jmp
aas
add
xor
xor
adc
xchg
nop
adc
and
inc
and
mov
dec
adc
mulb
pop
push
or
xor
or
mov
adc
cmp
test
xchg
arpl
sbb
mov
mov
xor
scas
fimull
out
sub
push
add
shl
adc
jl
js
xor
cmp
adc
push
ret
cmp
cmp
add
pop
mov
cmp
pop
add
inc
call
int
icebp
jecxz
adc
add
cmp
add
in
rorl
jmp
iret
dec
iret
adc
popa
mov
sub
mov
push
push
cli
push
mov
inc
lea
loopne
jmp
pushf
push
xchg
xchg
rcpps
adc
jae
push
sub
adc
ja
push
cmp
add
or
xor
bound
das
js
jmp
divb
adc
inc
sbb
mov
cwtl
cltd
lock
fcoml
das
popa
dec
mov
pop
push
mov
xchg
inc
adc
and
mov
in
and
loopne
lcall
pop
push
daa
or
inc
pop
nop
fbld
sar
xor
xor
sub
sbb
sar
loopne
outsl
adc
xor
xor
sub
sbb
jne
cmp
jb
fisubl
pusha
mov
repz
add
jmp
add
jl
mov
shr
rcr
rorl
fisttpl
mov
imul
sti
add
shll
push
mov
imul
aas
or
xor
add
sub
enter
andl
dec
fcomp
add
mov
cwtl
mov
adc
or
jne
or
pop
or
je
push
pop
fisttps
jns
neg
imul
fiaddl
or
xor
neg
neg
sbb
cmp
add
out
clc
mov
rcl
rcl
cmp
jb
movsb
cmp
jb
sub
sbb
inc
loop
jnp
mov
ret
and
push
shll
pop
das
dec
xchg
push
push
add
int3
repnz
in
pop
test
mov
add
popf
inc
add
or
mov
sub
jnp
inc
cmpw
je
movb
inc
sbb
testl
add
pop
sbb
jne
mov
inc
icebp
mov
mov
jmp
fistl
lahf
push
sbb
sbb
add
dec
aam
fbld
sete
or
icebp
cmp
pop
xor
sbb
les
cmp
setg
push
rolb
sahf
fdivl
or
mov
and
push
sahf
mov
adc
fs
jle
inc
bound
adc
push
jb
out
jg
jge
jmp
inc
stc
sub
jmp
getsec
jmp
push
adc
sbb
int3
cld
jb
je
lahf
and
mov
inc
andl
mov
pushl
jmp
jg
mov
cltd
aaa
rorb
shld
add
push
rcrl
fsubrl
lret
inc
xor
jp
pusha
xorl
mov
or
rcrb
ficoml
pop
cmp
leave
lret
jae
sbb
push
jo
and
dec
inc
cmp
test
int3
adc
pop
sub
jg
adc
daa
add
shll
sub
jmp
daa
je
pop
das
mov
fldl2t
add
setb
jge
inc
jmp
setl
cmp
je
dec
das
fmull
xchg
icebp
jl
mov
and
scas
mov
pop
pusha
addl
add
jl
jnp
dec
cmpsl
incl
pop
mull
cmp
out
mov
ja
inc
mov
mov
add
mov
test
jg
in
mov
mov
push
jl
in
jge
mov
adc
ja
ss
jmp
das
lock
add
push
mov
mov
push
push
fmul
lock
dec
std
pop
pop
sub
cmp
je
dec
rolb
add
pop
fs
mov
loopne
jge
pop
imul
jge
lret
dec
lock
push
xlat
clc
scas
add
mov
sub
adc
lods
mov
push
in
pop
jmp
incl
sarb
mov
outsl
push
xchg
jge
mov
mov
push
in
push
fwait
xor
adc
sbb
in
push
loopne
or
xor
jl
push
dec
rcll
arpl
add
orl
push
sub
lahf
add
int
sahf
or
add
cmpsl
xchg
jle
mov
add
test
test
and
std
jl
inc
movl
fisttpl
lcall
push
dec
jne
lods
or
jo
sbb
cs
orl
aas
xchg
xor
clc
jne
dec
sbb
push
adc
adc
or
pop
rcrb
push
push
mov
mov
dec
loopne
cltd
mov
jl
js
rorl
call
pop
pop
pop
test
cmp
cli
xor
in
sbb
jp
ret
and
mov
mov
cmp
setge
cmp
dec
jne
push
shl
push
xor
and
es
xchg
jge
es
inc
jo
and
inc
sbb
inc
xchg
cmp
or
fdivl
or
ret
fildll
inc
popa
sub
sbb
cmp
cld
push
or
cmp
je
dec
gs
inc
push
pop
je
popa
fs
xor
pop
outsb
bound
add
fsubl
inc
movsb
std
outsl
in
jns
insb
push
sub
sub
cmp
out
insl
or
dec
sub
push
push
xchg
imul
push
push
push
es
sub
outsb
leave
add
arpl
popa
sub
popa
addr16
dec
push
cs
jae
outsb
outsb
jae
jl
push
into
popl
pop
fistl
fs
lcall
or
push
addl
sti
and
daa
jg
je
insl
sbb
js
and
insl
sub
jb
dec
inc
nop
pop
out
cmpsl
testl
mov
or
xchg
cmp
jnp
bound
inc
inc
pop
push
inc
fucomi
fisubl
popa
aaa
jbe
mov
divl
outsl
aaa
cmpsb
aaa
ja
fidivs
jae
push
aaa
mov
fmuls
outsb
cmpsl
aaa
dec
dec
jg
mov
push
subb
outsb
push
jg
lods
and
push
cmp
setae
mov
inc
and
inc
push
or
out
inc
fwait
adc
dec
cmp
xor
add
test
enter
loopne
add
push
or
fs
dec
mov
inc
test
jne
jae
pop
pop
inc
push
jb
add
or
xor
add
movl
iret
ja
imul
and
xor
xchg
pcmpeqw
xchg
push
xorb
incl
cmpsl
data16
jne
mov
or
or
jmp
dec
sub
xor
fwait
lods
mov
mov
xor
push
add
movsl
and
pop
imul
mov
scas
dec
jge
lea
push
push
sub
fs
dec
jne
push
lret
pop
in
ret
sti
inc
pushl
pushl
add
aad
push
ret
inc
rcrb
mov
jo
push
lea
das
push
pop
mov
sbb
outsl
push
sub
dec
ja
xchg
jle
jne
in
jo
sarb
inc
mov
call
scas
add
adc
xor
xlat
lods
sub
or
mov
cwtl
lea
mov
lock
xchg
iret
cmp
pop
shlb
cmp
mov
push
sar
cmp
cmp
pop
testb
shr
cmp
fstl
sbb
dec
jmp
sbb
jbe
inc
ljmp
add
loopne
in
jmp
jbe
les
adc
mov
test
hlt
add
loopne
nop
and
mov
pop
ss
sub
movsb
pop
and
jmp
add
push
add
pop
fisubl
pushl
inc
pushf
push
mov
mov
pushf
add
cwtl
andl
mov
jnp
adc
xchg
imul
call
stos
js
add
or
and
jbe
sbb
push
sbb
rcl
aad
and
jg
cs
cmp
mov
push
push
lock
adc
lds
inc
add
or
lods
das
mov
rorl
sbb
call
je
inc
test
iret
rol
pusha
shrl
mov
ljmp
mov
mov
jo
push
adc
rol
ljmp
add
mov
pop
dec
sbb
mov
pop
or
lcallw
out
inc
adc
test
xor
mov
in
push
lcall
add
and
xor
insb
loope
xorl
mov
int3
mov
jne
adc
sub
sbb
popa
push
push
jno
outsl
inc
push
inc
xchg
xchg
xor
aam
sbb
adc
push
dec
test
sub
dec
and
jne
pop
addl
mov
dec
sbb
adc
loopne
sbb
test
dec
sub
push
xor
mov
dec
scas
shlb
sub
mov
add
push
and
sub
or
jae
sub
pop
xchg
xchg
inc
por
add
jmp
iret
mov
sub
je
pop
jne
mov
scas
sbb
add
push
movsl
xchg
lds
push
mov
mov
sub
push
test
je
call
dec
sbb
pop
imul
sub
dec
mov
cmp
js
pop
insb
cmp
into
xchg
cs
and
inc
add
adc
mov
cmp
fsubrp
pop
sar
sub
sar
jns
adc
adc
ret
mov
clc
pop
rolb
add
inc
cmp
sti
ficompl
jp
inc
push
push
addl
adc
xor
hlt
lcall
mov
inc
add
sti
leave
imulb
clc
int3
std
dec
lea
jle
jg
fstp
cmpsb
pop
xor
pop
jns
add
push
push
imul
mov
outsb
loope
popa
icebp
inc
roll
cmp
testl
pop
add
push
push
scas
outsb
jge
clc
adc
xchg
push
cmp
test
stc
inc
lcall
pop
icebp
sub
adc
mov
add
jmp
sub
js
or
daa
bound
sub
sbb
lea
call
mov
fs
daa
cmp
and
add
pop
jb
jg
pushf
cmp
nop
orl
cmp
and
inc
jae
mov
out
add
sub
jg
loopne
mov
cmp
add
das
cmp
pop
push
push
mov
dec
inc
pop
ljmp
cmpsl
rcrl
popf
das
mov
cltd
pop
cwtl
dec
shl
sarl
xlat
pop
filds
lea
jns
mov
inc
dec
push
lock
and
hlt
outsl
add
add
popa
jge
push
in
cmpsb
inc
mov
bound
arpl
fs
outsl
cs
or
insb
out
push
fcoms
jb
inc
and
insl
mov
inc
push
imul
xor
adc
jbe
sub
rcl
addr16
inc
jo
addl
add
scas
aaa
popf
pop
cmp
xchg
jle
lea
xchg
add
cmp
xchg
adc
ds
dec
pop
mov
mov
adc
icebp
and
xchg
jnp
es
icebp
mov
mov
pusha
push
push
jmp
mov
lea
popa
imul
xor
mov
dec
sahf
das
aas
loopne
insb
lea
push
push
add
push
and
nop
sahf
int
adc
jmp
stc
pop
jmp
jg
pop
lahf
jmp
dec
mov
jmp
inc
push
or
fs
push
test
sub
call
in
lret
sub
sub
inc
jb
lods
movl
imul
in
and
jle
leave
cmp
add
push
cld
xchg
jnp
sub
sbb
outsl
in
push
xor
lods
pop
dec
in
add
shr
ret
inc
subl
push
dec
mov
xchg
push
pop
hlt
enter
push
loop
mov
push
bound
cmp
in
lcall
pusha
insb
lods
xchg
out
in
jno
mov
xor
mov
add
jmp
dec
push
xor
nop
pusha
jo
xchg
adc
dec
lds
and
ucomiss
push
cmp
jmp
dec
sbb
mov
mov
add
mov
and
pop
jmp
jne
add
xchg
les
icebp
and
sbb
call
dec
call
pushf
sbb
mov
cld
mov
sbb
addr16
call
pop
xchg
mov
and
es
cltd
lock
lds
jmp
pop
sbb
jne
loopne
cmp
stos
xchg
push
aaa
mov
mov
shlb
popa
dec
sbb
fs
pop
das
adc
sub
sbb
pop
imul
sbb
cli
lea
xor
adc
mov
pushf
push
ss
cmp
jmp
cmp
add
inc
adc
add
pop
out
mov
mov
and
cmp
movsl
lahf
ret
push
sub
or
aam
xchg
inc
fistpll
mov
or
or
mov
push
mov
dec
daa
fldcw
rcrl
cmp
cmp
sbb
xchg
push
add
daa
ret
or
or
inc
cmp
cmp
jno
dec
add
push
lock
inc
ds
xchg
out
inc
jo
je
shll
and
addr16
push
fiaddl
mov
lods
sub
jmp
mov
push
cltd
sbb
scas
clc
push
out
fs
jne
push
ret
fcmove
mov
add
mov
sbb
add
jbe
jo
mov
push
inc
or
jno
jo
insb
cmp
cmpsb
mov
filds
ret
xor
push
push
mov
fdivs
pop
mov
sbb
xchg
fcomp
push
mov
pop
pop
ret
sbb
add
cmp
mov
repnz
push
sub
int3
rolb
xchg
add
adc
mov
inc
inc
add
dec
imul
mov
add
push
add
push
call
lea
xorb
xchg
xchg
push
sub
lahf
cmp
sbb
pop
pop
and
sbb
adc
mov
mov
cmpsb
sub
push
cwtl
dec
cmp
jne
jmp
movsb
cs
add
jbe
sbb
jbe
idivb
or
je
movzbl
rolb
mov
push
test
cmp
ljmp
push
sbb
sbb
aaa
adc
adcl
ja
xorb
sti
fcomip
sub
cmpl
adc
fbstp
dec
jmp
out
xchg
imul
loopne
test
call
enter
cmpsb
inc
sbb
inc
mov
test
lea
push
mov
cmpsb
sbb
out
ss
push
or
aam
pop
imul
jae
fdivrl
or
fucomi
aad
push
add
fs
mull
sub
inc
jb
out
cmpsb
push
and
imul
adc
push
mov
out
mov
sbb
dec
dec
sub
push
daa
daa
add
fldenv
cmpsl
clc
out
mov
mov
pop
rorb
mov
mov
mov
stc
xchg
or
out
xchg
daa
mov
jo
xor
pop
lcall
cmpsl
andb
pop
jp
adc
das
xchg
push
pop
dec
add
pop
sub
or
enter
xchg
phsubsw
add
push
cmp
test
test
test
push
sbb
dec
push
add
or
jge
data16
push
add
mov
xchg
push
mov
push
jo
cltd
adc
or
push
add
mov
mov
inc
push
or
sarl
push
leave
jl
into
scas
adc
aas
push
test
fcoml
cmp
xchg
icebp
lar
loope
scas
pop
cmpl
sti
jae
adc
movl
or
dec
inc
cmovo
rcrb
mov
lock
xor
sub
cs
inc
cmp
cwtl
loopne
push
icebp
or
sti
js
push
hlt
mov
sbb
sarl
imul
jne
push
add
lock
mov
or
call
mov
rolb
clc
add
fcomps
mov
add
inc
jbe
testl
cmp
mov
cltd
cmpsl
pop
shl
lock
les
push
enter
xchg
xor
pusha
jae
pop
out
cmp
jne
mov
pusha
sub
dec
addb
push
or
and
divb
rclb
adc
push
and
xor
sbb
push
and
fmull
js
and
dec
xchg
les
or
inc
adc
inc
add
pop
adcb
loopne
add
add
adc
or
mov
pop
std
in
incl
jmp
add
pushf
or
xchg
add
test
push
rclb
adcb
repnz
adc
add
and
add
sbb
nop
insl
or
add
mov
push
ficoml
jb
and
jle
out
js
insl
cs
mov
push
lods
add
mov
jmp
add
aam
dec
sub
pop
call
and
inc
rcrl
sbb
xor
lret
mov
inc
add
inc
sbb
and
sbb
pop
sti
xchg
test
scas
imul
ficomps
mov
xchg
in
xor
pop
jg
ds
and
subl
int
hlt
jg
mov
and
mov
cmc
dec
sbb
adc
lock
mov
adc
dec
rclb
add
sbb
xor
mov
sbb
mov
mov
xchg
adcb
or
clc
rol
aad
pop
sbb
xchg
mov
or
sbb
sub
fistps
add
add
call
add
mov
push
adc
loopne
sbb
jae
cmp
sub
mov
sub
daa
das
mov
xchg
outsb
lods
incl
adc
jne
mov
mov
cmp
cld
movsl
mov
or
xor
dec
js
das
jno
mov
popa
clc
mov
dec
adc
and
and
push
mov
jl
mov
adc
push
and
ljmp
dec
jnp
add
popf
xchg
dec
or
jmp
push
mov
push
push
aaa
mov
mov
loopne
and
es
jmp
cmpb
test
add
mov
negb
and
ret
in
outsl
leave
pop
rclb
pushl
xchg
popf
je
cmp
std
addr16
pop
test
mov
sar
sahf
sub
lea
cld
out
xorb
fisttpl
lahf
movsb
lock
add
cltd
ret
add
les
out
add
daa
inc
xchg
fcoms
xchg
push
dec
loope
jle
dec
gs
add
fs
push
jnp
push
imul
mov
int
je
insl
and
mov
outsb
fincstp
and
add
clc
lahf
int
pusha
scas
je
addr16
dec
pop
inc
test
add
bndldx
cwtl
outsl
jl
mov
or
add
outsb
enter
sbb
and
inc
outsl
jae
pop
pushl
sti
movsl
add
je
incb
je
push
and
sub
nop
jmp
push
sub
mov
or
sub
pop
xor
sbb
sub
lods
pop
scas
loopne
lahf
addr16
pop
jmp
mov
mov
fmull
cld
cmp
add
jmp
pop
add
aaa
mov
sub
jmp
rolb
jae
add
pop
lods
push
sbb
inc
loopne
or
mov
push
imul
fisttpl
ja
imul
sub
std
sahf
aad
pop
ror
push
mov
or
mov
add
movsl
push
mov
int3
jnp
sar
xor
xchg
dec
sti
insl
pop
stos
xor
pop
sub
lea
stc
sarl
adc
push
jne
loope
cmpsb
fmuls
or
lar
nop
cmp
cmpsb
xchg
add
add
push
add
cmp
loopne
xchg
pop
ja
imul
insb
ret
stos
and
es
pusha
ja
scas
inc
and
data16
call
mov
or
or
and
out
adc
in
jl
push
push
jb
rcrl
pop
pop
sbb
je
repnz
jp
add
fsubs
jle
lret
mov
loopne
adcb
ficoml
jo
sub
add
add
push
push
sbb
or
pop
cmp
jle
pop
scas
add
add
fcompl
mov
cmp
sub
or
xor
pop
cmp
adc
add
out
add
hlt
mov
mov
push
push
push
dec
dec
dec
inc
clc
fdivr
lcall
pushf
es
push
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
or
and
pop
add
fnstenv
dec
or
adc
ret
jnp
es
jne
fs
pushf
leave
divl
sub
mov
sahf
mov
out
adc
or
push
pop
inc
in
push
pop
fld
cmp
lret
in
xchg
mov
imul
add
mov
cli
jl
pop
adc
dec
inc
and
push
push
imul
fists
and
leave
js
sbb
paddd
jne
cwtl
adc
inc
push
dec
cld
or
inc
inc
adc
inc
inc
pop
inc
inc
inc
push
inc
and
pop
int3
imul
mov
outsl
jb
pop
rcll
push
jb
nop
fs
or
je
mov
or
lock
sbb
cmpsb
push
jae
push
jae
push
rcll
mov
pop
xor
shrb
sub
xor
sub
inc
push
jo
outsl
mov
jb
jl
mov
add
push
add
sub
adc
dec
rcll
jae
cmpsb
lock
dec
ja
pop
shll
mov
mov
popa
jo
outsl
xor
push
icebp
sub
adc
mov
pop
dec
fmull
dec
inc
inc
inc
inc
dec
xor
pop
dec
inc
repnz
pop
mov
js
inc
push
push
push
dec
out
fisubrl
add
sub
add
jmp
ror
xor
aam
jbe
dec
cmp
das
in
cs
rorl
cwtl
jg
mov
lock
in
push
data16
and
call
mov
jne
add
inc
je
or
inc
inc
mov
pop
push
xor
or
adc
push
lods
test
pop
inc
fimull
pop
in
mov
dec
push
jnp
dec
pop
addr16
mov
dec
cmpsl
aaa
adc
jo
inc
scas
arpl
lds
sub
bound
push
loope
mov
or
dec
mov
mov
fcmovnu
or
pop
pop
add
repz
gs
mov
sub
pop
inc
mov
add
sbb
push
mov
push
xor
or
mov
inc
mov
imul
out
lea
cmp
xor
mov
dec
mov
arpl
aaa
test
jmp
fsts
outsl
insb
jne
add
and
aas
and
outsb
pop
xchg
cltd
rorl
shll
or
xchg
and
sub
gs
xchg
dec
mov
cmpsb
jge
arpl
xor
loope
ret
divl
cltd
add
mov
and
pop
xor
outsb
jl
ret
test
fisubs
push
add
push
pop
enter
lds
or
aas
and
xor
fildll
sub
add
arpl
je
daa
jle
outsb
mov
inc
out
mov
dec
add
clc
xchg
pop
push
bound
icebp
xchg
mov
arpl
mov
and
gs
adc
dec
rol
leave
fwait
mov
push
adc
dec
gs
jle
adc
inc
mov
mov
gs
add
enter
mov
decb
dec
inc
inc
inc
inc
push
sub
or
mov
imul
es
rorl
or
or
adc
jo
mov
mov
testl
adc
pop
push
mov
or
push
xor
inc
inc
xor
lret
push
mov
sub
sub
jo
addb
push
stos
push
mov
inc
cmpsb
out
and
stos
imul
shrl
push
insl
fdivl
and
pop
fs
ja
je
ds
testl
in
mov
push
gs
ljmp
xor
inc
addr16
stc
mov
add
fstps
js
xchg
je
popa
mov
jae
cwtl
fldt
dec
pop
dec
mov
shr
add
dec
jmp
in
mov
popa
jo
mov
xchg
outsb
add
jo
je
out
das
push
aas
pop
push
sub
mov
cwtl
jo
pop
jo
call
or
xor
mov
xchg
xor
test
insb
push
mov
nop
insb
inc
sti
cmpsb
cs
inc
jne
fdivrl
xor
xor
cmpb
mov
or
jo
scas
sub
fs
or
je
sbb
shrb
cmpsb
dec
cwtl
add
test
subl
das
fldl
insl
lods
pop
repz
pop
mov
fnsetpm(287
es
lock
mov
adc
in
add
xor
sub
jne
int
nop
clc
movsb
mov
cltd
and
dec
imul
push
imul
add
inc
xchg
das
mov
mov
ljmp
or
in
mov
test
sbbl
repz
xor
icebp
repz
inc
in
mov
inc
fstps
push
push
mov
lods
pop
xor
inc
insl
in
sub
push
pop
adc
imul
adc
jecxz
addl
dec
jae
and
clc
or
push
jns
lahf
out
int
push
dec
push
pop
stc
or
inc
sbb
push
sub
push
xchg
icebp
insl
subl
dec
mov
and
cltd
loopne
mov
push
jl
stos
add
mov
xor
ret
sti
or
jne
and
mov
mov
adc
cmp
jns
es
shrl
es
inc
push
ret
fbld
adc
dec
xlat
out
mov
pushf
adc
test
dec
mov
and
imul
sbb
pop
xor
lds
mov
outsl
insl
bound
outsl
js
pop
lods
clc
sbb
push
or
fildll
xor
push
add
pop
push
mov
mov
add
shl
fcoml
decl
pop
mov
inc
inc
push
push
push
push
inc
rolb
inc
mov
pop
push
fsubl
inc
push
push
mov
rcll
fwait
or
xchg
xchg
pop
movsb
inc
adc
mov
xchg
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
jo
and
jl
leave
in
movsb
std
pop
pop
xchg
ret
ds
leave
leave
leave
pop
pop
push
push
leave
leave
leave
leave
dec
dec
inc
inc
leave
leave
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
adc
hlt
lock
in
in
call
in
aam
in
in
int3
enter
dec
cs
mov
dec
dec
lods
test
inc
add
pop
or
jp
push
push
cmpsl
ret
jb
or
fiadds
lock
cmp
test
inc
add
pop
cmp
inc
mov
imul
dec
outsb
daa
mov
dec
dec
dec
dec
nop
mov
pop
xor
sarb
mov
pop
sbb
outsb
daa
jl
js
jo
cmp
insb
adc
cmp
cmp
adc
adc
cmp
cmp
adc
adc
cmp
cmp
adc
adc
cmp
cmp
adc
adc
cmp
cmp
adc
adc
cmp
cmp
adc
adc
in
cmp
adc
pmuludq
leave
leave
leave
leave
lock
call
leave
loopne
fcom
leave
leave
leave
leave
ror
enter
leave
leave
sarb
mov
movsb
mov
pushf
cwtl
nop
mov
leave
mov
leave
leave
in
js
je
insb
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
pmulhuw
in
clc
hlt
lock
in
in
call
in
in
aam
int3
in
in
enter
in
in
mov
in
in
movsb
mov
in
xchg
nop
mov
in
in
test
in
je
insb
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
lock
nop
push
js
in
call
in
jbe
in
loopne
fcompl
fmul
leave
leave
leave
aam
int3
enter
leave
sarb
mov
test
leave
leave
leave
movsb
mov
leave
leave
xchg
nop
mov
test
cmp
push
fs
pop
xchg
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
cld
or
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
mov
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwtl
xchg
nop
mov
test
pop
jb
je
insb
jb
and
push
jb
pop
pop
push
dec
daa
daa
daa
daa
push
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
mov
xchg
daa
cld
or
hlt
pop
in
in
lock
in
in
in
aam
icebp
in
ror
enter
and
int3
les
daa
mov
fisttpll
mov
mov
daa
daa
daa
lods
test
mov
pushf
cwtl
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
jb
jb
insb
push
jb
pop
pop
push
leave
leave
leave
add
leave
leave
leave
inc
inc
cmp
imul
leave
xor
je
pop
adc
sub
xor
adc
sbb
and
mov
add
or
and
and
int3
mov
dec
and
cmp
mov
rorb
or
aad
mov
mov
ds
add
sbb
pop
dec
sub
push
leave
sbb
cmpsb
jmp
push
gs
or
pop
inc
fs
scas
movsl
loopne
aas
inc
pop
jmp
pop
mov
adc
xchg
add
lcall
jmp
fld
and
push
add
inc
out
jge
aam
inc
inc
outsl
add
jae
pop
pop
out
push
imul
call
test
mov
aas
cmp
push
push
mov
int
add
push
xor
out
cmp
or
pop
push
dec
hlt
jb
shrb
push
push
bswap
enter
sub
mov
add
loope
cmp
mov
js
lods
sub
jo
and
xchg
lahf
pop
pop
adc
sbb
mov
bound
xor
jl
mov
clc
and
inc
add
inc
pop
or
out
mov
js
ror
add
rorl
adc
xchg
or
dec
and
push
jg
xchg
or
dec
adc
lea
imul
das
cltd
daa
push
dec
imul
orl
in
xchg
push
daa
dec
loopne
or
push
dec
dec
gs
inc
dec
mov
sbb
and
sub
jmp
inc
push
push
outsb
fldt
sbb
fnsave
pushf
into
fsubrp
jbe
or
cmp
orb
bound
cwtl
cmp
push
stos
hlt
shlb
bound
xchg
popf
sbb
jecxz
cmp
cmc
cmp
add
add
rorl
xor
arpl
cmpl
in
shl
add
icebp
repnz
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
xlat
in
in
fcomp
fcmovu
in
in
in
in
rol
ret
in
in
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movsl
cmpsb
cmpsl
in
in
test
stos
stos
in
in
lods
lods
scas
scas
in
in
nop
xchg
xchg
xchg
in
in
xchg
xchg
xchg
xchg
out
out
in
cltd
lcall
out
and
jne
loope
test
mov
sub
jae
adc
or
add
in
xor
mov
mov
fldenv
push
xor
sub
push
pop
pop
add
or
lods
pusha
je
jb
fs
lret
add
jo
push
push
movsb
and
inc
push
sbb
movsb
sub
jnp
adc
test
sbb
mov
push
xlat
xchg
nop
out
dec
mov
push
movsb
sbb
mov
push
adc
and
inc
or
inc
xchg
movsb
mov
sub
cmc
dec
jae
aaa
ficoml
jne
popf
adc
cmp
je
inc
push
mov
pop
enter
dec
push
inc
add
mov
loop
push
cmpsl
inc
andl
add
ret
sbb
popa
imul
inc
and
push
aas
imul
jnp
push
ds
cmpb
cmp
mov
dec
insb
jp
popl
push
out
or
jnp
push
imull
push
dec
xor
fs
xchg
js
out
inc
jbe
cmpsb
push
jb
jbe
adc
sub
addr16
pop
adc
pop
inc
or
push
and
pusha
shll
daa
adc
loopne
repz
imul
mov
gs
arpl
lahf
mov
pop
and
or
xor
cmpsb
xor
adc
sbb
iret
fwait
jb
jb
pushf
setge
jb
addl
xchg
jb
mov
jb
mov
jb
jo
jb
jb
jb
je
jbe
jb
jb
js
jp
jb
jb
jl
jle
jb
jb
pusha
popa
bound
jb
jb
gs
jb
push
jb
jb
insl
outsb
outsl
jb
jb
push
push
push
push
jae
jb
push
push
push
push
mov
sti
sub
jae
push
pop
jb
sub
jne
test
ficompl
cmpb
setle
lahf
into
sbb
mov
sbb
mov
sub
fld
inc
rolb
pop
rol
mov
and
or
imul
add
add
es
or
shlb
or
cmpsl
iret
adc
push
and
aaa
pop
das
or
jmp
or
outsl
push
or
ficoms
adc
or
je
or
cmp
orl
incb
pop
mov
out
fstl
scas
mov
nop
sbb
jmp
sarl
push
call
setl
dec
adc
dec
ret
mov
push
and
sub
data16
or
lcall
lock
mov
add
or
mov
add
pop
incb
sub
mov
outsl
aaa
dec
sti
jle,pn
sub
clc
sarb
add
mov
mov
stos
push
xchg
or
pop
jo
sbbb
movsb
arpl
and
push
jb
xchg
fiadds
sub
gs
pop
cmp
inc
mov
shl
add
add
pusha
pop
sbb
out
pop
or
sbb
push
cwtl
cs
xchg
xchg
test
cmp
sub
xor
mov
addb
test
nop
add
add
xchg
icebp
mov
and
xor
inc
pusha
add
jo
addb
add
icebp
nop
add
rolb
loopne
out
call
sub
and
xor
inc
add
pusha
add
sbbb
adc
mov
rolb
loopne
lock
xor
sub
add
xchg
mov
jl
add
dec
inc
push
push
add
add
add
add
add
mov
lock
pushl
add
add
add
add
add
add
add
mov
add
add
add
push
loopne
lock
mov
adc
add
mov
add
add
outsl
clc
push
add
add
add
add
pushf
orb
inc
loopne
inc
aad
xchg
lock
adc
scas
pop
push
adc
fs
subl
jno
cmpl
xor
jmp
adc
jno
add
cmpsl
shrb
jl
xor
push
adc
sub
mov
push
xor
aas
inc
ss
fdivrs
test
add
cmpsl
adc
divl
add
add
sub
push
add
inc
addb
outsb
scas
add
cmp
fists
xor
inc
add
popa
jbe
adc
adc
ret
bound
ret
add
or
das
add
add
inc
shrl
mov
adc
inc
ljmp
scas
add
adc
push
mov
daa
jl
insl
rolb
push
add
fisubrs
inc
push
push
push
pusha
push
pop
jo
addb
push
mov
push
popf
push
push
pop
loopne
lock
mov
iret
pop
and
xor
inc
push
pop
pusha
pop
jo
push
addb
pop
int3
push
push
in
mov
idivl
outsl
in
push
add
dec
or
or
or
or
push
or
fcomip
cld
or
orb
out
orb
or
pushl
rorb
loopne
jnp
or
or
or
or
or
push
or
adc
or
orb
nop
mov
mov
or
mov
fidivl
adc
lock
add
adc
arpl
and
or
in
mov
pusha
or
push
mov
std
mov
rorb
es
or
or
adc
or
ficomps
inc
out
mov
pusha
or
mov
lock
push
sub
sahf
or
add
fdivl
pop
rcl
or
fwait
cmpsb
or
xchg
scas
or
or
inc
or
or
mov
pusha
or
jecxz
or
or
or
fcmovbe
sub
es
loopne
fdivl
pop
add
or
or
jbe
pop
adc
and
add
or
push
pusha
or
orb
rorb
or
in
and
xor
inc
push
push
push
pusha
push
jo
orb
nop
push
mov
push
shr
push
enter
push
lock
mov
mov
xor
inc
pmaxsw
pusha
or
orb
add
insl
testl
add
imul
aas
push
xchg
lock
xchg
add
pop
adc
sbb
das
in
sti
push
inc
cmovge
fcomip
fisubs
inc
push
mov
out
stc
jo
adcb
mov
je
push
mov
push
xor
lahf
loopne
lock
and
adc
adc
dec
and
outsb
sub
aas
push
repz
scas
adc
aaa
push
adc
xor
adc
adc
add
add
mov
sub
les
adc
incb
loopne
in
sub
push
adc
adc
adc
adc
adc
cmpsl
and
jp
inc
adc
add
sbb
push
or
add
jo
pop
aaa
cmp
roll
cmp
incl
pop
movsl
sbb
cmpsb
fists
movhlps
adc
push
cmpsb
call
lahf
adc
adc
adc
mov
adc
adc
cmp
mov
nop
adc
pop
jo
lods
sub
es
rclb
sti
fistpll
adc
adc
adc
adc
adc
adc
adc
push
xchg
out
aas
pusha
adc
add
out
addb
fistps
nop
mov
adc
mov
add
or
lret
in
sar
loopne
or
rolb
lock
adc
loopne
out
push
fstpl
cmp
or
and
inc
lock
adc
xchg
adc
mov
ja
push
adc
in
scas
mov
lock
mov
in
cmp
jg
into
push
daa
jmp
fiadds
xor
inc
push
cmpsb
adc
push
scas
out
ja
add
cmp
adcb
addb
mov
lret
sbb
add
out
rorb
push
iret
ss
mov
add
jp
adcb
pop
es
xor
jnp
cmpsl
aad
lahf
pop
push
push
pusha
aas
movsb
or
arpl
fimuls
dec
inc
and
movsb
xchg
imul
sarl
or
aas
outsl
sbb
and
jmp
loopne
das
rolb
js
adcb
pop
mov
mov
jg
pop
mov
loopne
loopne
cli
lock
ficoml
xor
or
sti
sub
sbb
push
sbb
sbb
pusha
sbb
or
cltd
movsl
cmp
push
push
or
std
outsl
bound
rcrb
sbb
sbb
sbb
inc
add
ss
divl
int3
sbb
sbb
pop
adc
cld
enter
xor
add
jb
mov
ljmp
lret
pusha
sbb
jle
fsubrs
sbbb
sbb
sbb
aad
loop
sub
lret
and
inc
mov
and
das
add
out
loopne
insb
rcl
add
mov
pop
adc
push
jnp,pt
sbb
negb
bound
sbb
adc
les
push
sbb
or
add
mov
push
adc
push
sbb
sbb
pop
add
sbb
sbb
sbb
pcmpgtd
adc
or
bsr
ja
xor
adc
add
or
mov
cltd
movsl
sbb
rcl
mov
pop
dec
inc
add
stos
pop
add
or
xchg
leave
add
and
push
sbb
imul
rolb
or
dec
jne
out
mov
ficoml
scas
add
cmp
add
fstps
xor
fldl
out
or
xchg
sbb
pop
adc
add
ja
clc
push
adc
add
inc
es
add
adc
into
mov
dec
aas
call
jmp
dec
mov
dec
and
jg
in
pop
in
outsb
dec
pop
add
adc
jne
or
push
rol
int3
cs
jg
cld
push
add
imul
add
add
ret
shl
ficoms
pop
fidivrl
sbb
add
mov
mov
or
test
add
sub
jo
mov
or
sub
mov
call
push
pop
and
imull
sbb
ljmp
add
add
pop
sar
movsl
dec
into
loope
adc
mov
mov
push
daa
lahf
imul
mov
adc
pop
sbb
jg
decl
mov
mov
sbb
sub
cmp
mov
rcll
push
pop
or
mov
inc
mov
pop
sbb
mov
or
mov
rcll
mov
lahf
mov
lahf
aas
lahf
gs
xchg
add
scas
mov
lahf
mov
adc
adc
imul
dec
inc
not
push
jne
mov
jb
add
test
sbb
mov
subl
mov
push
push
and
out
bound
mov
mov
xor
jae
popa
pop
mov
fstl
lea
in
pop
invlpg
add
push
push
cwtl
adc
add
rcr
add
insb
adc
vmread
add
xor
insl
fadd
or
pop
cmpb
or
pop
and
and
or
push
mov
aas
and
nop
and
pop
pop
das
add
add
dec
mov
incl
add
pop
sub
mov
sbb
cmp
lahf
add
or
popa
jno
popa
pop
dec
add
cmp
lods
clc
push
add
add
xor
cmp
mov
mov
jae
push
add
test
mov
icebp
cmp
sub
and
in
or
out
sbb
sub
push
mov
and
lahf
sbb
add
pusha
sbb
sub
cmp
or
test
and
fwait
xchg
or
push
mov
pop
roll
lock
sbb
pop
cmp
cmp
lods
pop
pop
inc
cmp
sbb
divl
sub
push
ret
add
andl
and
lret
aas
or
imul
sub
mov
sbb
pop
lcall
xchg
imul
jo
aaa
sub
adc
push
adc
cmp
sbb
adc
imul
add
sub
dec
fbld
test
cmpsl
rcrl
and
push
adc
adc
in
add
dec
dec
push
jg
or
add
push
pusha
daa
lahf
mov
add
ret
add
cmp
pop
ret
jno
dec
add
cmp
sti
dec
sbb
and
push
add
or
divl
pop
stos
or
push
gs
cmp
sub
push
insb
add
and
int3
xor
sbb
or
sbb
daa
cmp
mov
push
or
push
add
push
mov
jb
pop
mov
add
pushf
movsl
dec
mov
pop
pusha
or
rolb
xchg
sbb
scas
mov
push
out
and
and
fimull
in
fisubl
mov
adc
xorl
adc
jnp
xor
pop
or
popf
push
push
mov
adc
mov
imul
xor
fwait
mov
adc
and
fsubrl
sub
push
cmp
jno
xchg
pop
mov
lock
push
and
lcall
xchg
mov
sarb
adc
push
xor
mov
pop
mov
add
mov
mov
sbb
movsb
add
int3
inc
lcall
les
cs
ret
in
flds
fdivrl
jae
test
test
jg,pn
cs
rolb
or
mov
push
or
sbb
or
or
out
fwait
test
das
ret
pop
add
mov
add
lods
pop
enter
mov
jnp
fwait
xchg
xchg
sbb
addl
xchg
mov
adc
adc
mov
push
lahf
rolb
int3
cmp
add
add
adc
add
dec
or
mov
les
outsb
test
rol
nopl
sbb
int3
lret
cli
xchg
adc
adcl
mov
mov
lahf
movsl
push
rorl
push
aas
loopne
pop
test
fxch
loope
mov
pop
or
daa
pop
std
pop
mov
push
and
push
mov
xchg
jg
outsb
mov
jo
mov
pop
sub
xchg
rolb
mov
pop
add
daa
sgdtl
mov
mov
popf
adc
and
iret
and
lea
push
add
bound
add
adc
je
arpl
jae
mov
imul
stc
dec
scas
sub
push
jae
xor
rorb
mov
addr16
sbb
cmp
or
je
mov
and
and
dec
pop
mov
push
mov
jae
dec
test
bound
xor
pop
add
mulb
imul
test
xor
and
insl
fcomip
and
adc
jo
inc
les
inc
or
mov
and
ret
fcomip
and
jle
add
mov
mov
or
adc
lret
jno
xor
add
inc
xor
push
and
movsl
sub
pushf
add
add
add
push
pop
mov
push
or
xor
in
inc
jg
add
push
arpl
pop
push
or
daa
sbb
pusha
push
fsubrp
into
add
xchg
cs
push
sbb
mov
cmpsl
pop
cmpsb
pop
push
test
push
mov
outsl
push
loopne
outsl
loope
lods
repnz
and
popf
sub
inc
les
push
movb
adc
into
aam
xor
push
or
mov
sarb
push
jp
loopne
jbe
shrl
lock
adc
cmp
dec
shlb
addl
in
pop
add
das
rolb
imul
loopne
pop
lock
add
add
add
aas
scas
push
mov
mov
jo
mov
cmp
pop
xchg
mov
shlb
mov
and
in
jbe
invd
adc
in
in
sbb
and
fsts
inc
lcall
aas
das
shl
xor
ss
pop
inc
mov
mov
outsl
rorb
lahf
rclb
and
daa
inc
add
xor
in
or
dec
inc
shlb
adc
test
push
and
xchg
inc
jns
adcb
inc
cmp
cmp
or
push
sbb
cmp
cmp
and
das
scas
push
or
lahf
jg
jb
add
xor
cmp
jb
dec
dec
adcb
cmp
push
push
lahf
mov
daa
mov
add
inc
rdmsr
xor
push
add
fcoms
cmp
fstpt
jmp
and
aas
mov
cmp
lds
aas
lcall
mov
out
push
push
aad
pop
push
dec
lcall
leave
psubusw
xor
jecxz
jmp
fwait
cmp
jmp
pop
push
lds
mov
stos
ljmp
jb
in
aas
aas
xchg
fwait
push
sub
pop
es
mov
sub
push
pop
sbb
push
dec
sti
push
clc
das
gs
sub
add
sub
sub
push
popa
jb
pop
pop
or
jo
aas
and
dec
inc
pop
inc
popl
push
inc
and
mov
out
aaa
push
les
and
aas
or
pop
push
jmp
test
push
das
out
adc
inc
je
movups
or
xchg
pop
lahf
inc
and
mov
fildl
dec
xor
mov
getsec
cmp
cmp
add
cmp
aas
pop
inc
addb
jbe
pushf
inc
lahf
inc
das
jb
repnz
inc
inc
inc
inc
jb
jb
inc
inc
inc
inc
jo
jb
inc
inc
dec
dec
or
xchg
fcompl
and
lret
iret
pop
and
mov
pop
add
jg
jno
nop
xor
nop
xchg
pxor
jb
rolb
loopne
mov
mov
repnz
lahf
dec
jo
scas
mov
mov
jo
pop
mov
mov
pop
dec
frstor
xor
jecxz
push
cmp
in
aas
pop
icebp
and
sbb
repz
stc
cmc
pop
and
das
adc
pusha
leave
or
add
scas
pop
sti
dec
and
imul
out
dec
xor
ficoml
lock
xadd
adcb
xchg
pushf
pop
ds
pop
pop
rcrb
ljmp
push
mov
aas
jmp
sub
push
andb
jne
push
lds
bound
shlb
adc
hlt
addb
mov
mov
or
adc
movsl
push
mov
das
rclb
test
jg
sub
mov
dec
mov
aas
out
mov
inc
dec
orb
mov
rcrb
fistpll
dec
mov
aas
ss
mov
test
fistps
aas
mov
inc
mov
pop
punpckhbw
mov
bound
iret
mov
fs
or
push
mov
iret
mov
add
inc
mov
rcrb
adc
stos
push
decl
lds
sub
cmp
pop
sub
and
xor
daa
mov
sbb
std
fucomi
loopne
mov
mov
adc
sbb
add
movsb
cmp
mov
mov
fdivrl
xchg
mov
adc
adc
scas
sub
pop
jo
and
or
test
cmp
and
xlat
xor
gs
imul
outsl
or
jne
push
push
cli
gs
add
popf
dec
or
fwait
call
outsl
ja
sbb
fs
jo
jbe
ja
pop
insb
sbb
gs
push
outsb
adc
and
test
gs
push
imul
xchg
jb
insb
test
jbe
enter
inc
unpcklps
data16
arpl
push
cltd
cmp
and
daa
vprotb
popf
xor
inc
popa
js
adc
mov
add
or
loopne
jae
icebp
imul
adc
test
es
or
jae
or
sbb
xor
dec
outsl
xor
jo
aaa
movsl
lods
dec
cmp
mov
jo
outsl
adc
or
fs
mov
dec
add
nop
mov
jle
push
fldl
pop
push
inc
insb
mov
and
mov
sbb
pop
and
jns
out
jb
les
adc
mov
loopne
and
sbb
inc
pop
mov
jbe
cmp
nop
fwait
pop
std
xor
sub
and
xchg
and
mov
fcoms
in
stc
sub
jl
mov
ja
push
xchg
in
sti
mov
adcb
mov
enter
xor
add
adc
test
mov
daa
out
cwtl
inc
sub
mov
daa
out
in
subb
js
xor
mov
cmp
jo
xchg
dec
insb
push
sarb
xchg
push
enter
pusha
testl
pop
inc
lea
mov
cmpsb
mov
dec
das
dec
push
fcompl
inc
cmp
mov
mov
cmp
xchg
xor
addr16
xor
xchg
add
push
inc
mov
sub
and
fwait
and
adcl
adc
push
jmp
mov
gs
mov
push
jo,pn
and
xchg
add
push
insb
jmp
mov
dec
leave
adc
adc
mov
pop
into
icebp
inc
lahf
scas
pop
or
jne
dec
pop
andb
or
sub
sbb
sub
or
xor
adc
push
add
pop
or
iret
xor
lea
mov
mov
adc
pop
les
daa
iret
aad
into
push
adc
add
adc
outsb
invd
or
cmp
lret
jge
jg
pusha
mov
dec
inc
dec
inc
xchg
pusha
rolb
repz
cmc
mov
cmp
outsb
scas
std
add
pop
ja
dec
push
imul
add
xchg
xadd
in
pop
inc
sub
jmp
xchg
inc
and
or
icebp
mulb
lcall
rorb
out
inc
inc
enter
ja
or
add
inc
pop
push
xchg
lds
xor
daa
add
dec
jno
pop
dec
dec
xor
pop
dec
inc
add
xchg
inc
dec
data16
push
adc
aad
out
loopne
mov
xchg
add
jae
in
or
test
pop
fwait
out
pusha
add
jne
mov
xlat
mov
and
sbb
loopne
add
enter
mov
inc
jl
sbb
mov
cmp
mov
inc
les
sbb
inc
or
xchg
inc
add
add
test
jg
or
inc
xor
sbb
jl
inc
aam
test
sub
xchg
xor
gs
mov
shl
ljmp
dec
push
inc
inc
arpl
imul
outsl
stos
aaa
jns
in
in
push
jp
icebp
jb
xor
add
pop
fs
sbb
lret
cmp
sti
jnp
adc
js
dec
or
arpl
iret
inc
or
das
add
push
mov
pop
xor
pushf
cld
and
cmp
or
in
cld
in
negb
je
cmp
push
push
xor
cmpsb
adc
aad
add
add
les
stos
or
in
or
and
xor
scas
popa
and
hlt
and
or
push
sub
cmp
lods
sub
inc
push
shlb
repnz
cmp
les
ret
mov
add
adc
mov
aaa
mov
add
aaa
cmp
ss
nop
adc
mov
and
and
daa
shrd
mov
jae
sarl
pop
xor
cltd
dec
lahf
mov
add
push
inc
mov
rorb
stos
sub
inc
push
movups
pop
pop
pop
add
inc
lds
jnp
dec
push
mov
or
cmp
xor
jmp
aam
or
dec
std
incl
dec
in
add
fwait
sbb
lret
ret
movsl
add
push
outsb
inc
adc
xchg
or
mov
xchg
mov
rcll
push
or
enter
xorb
mov
sub
clc
add
inc
inc
jb
jne
das
xchg
push
call
jecxz
mov
div
bound
sarl
pop
js
inc
es
dec
dec
jo
sbb
loop
pop
aam
data16
filds
dec
inc
in
fadds
jnp
jg
inc
pop
xor
jg
push
bound
jge
dec
scas
pop
sbb
xchg
pop
repz
ljmp
les
loope
and
das
in
push
and
adc
inc
adc
mov
ja
cmp
add
jmp
insb
xchg
or
mov
cld
sarb
inc
cmp
subl
jo
rclb
xor
mov
out
jge
int3
add
rorl
jg
popl
or
and
mov
sub
sbb
mov
dec
orl
jno
pop
lds
and
push
add
leave
or
dec
and
pop
daa
cmp
add
scas
push
or
in
adc
pusha
adc
inc
jecxz
mov
incl
and
inc
xor
mov
fcomp
pop
les
adcl
and
sahf
mov
data16
cmpl
adc
or
shll
and
sub
clc
pop
adc
jns
or
jge
or
inc
sbb
lods
and
js
push
nop
test
test
aaa
outsb
cltd
push
and
mov
add
pop
pop
and
xor
loope
addb
add
xchg
test
les
sbb
xchg
mov
inc
jo
cmp
pop
fcompl
sub
jne
int3
test
faddl
enter
imul
pop
xchg
mov
pop
fs
insb
test
add
or
in
pop
and
fadds
es
or
cld
add
push
and
stos
mov
and
xor
shld
sub
xchg
xchg
rorl
lods
dec
mov
and
sub
mov
cmp
and
mov
pop
mov
and
mov
loopne
xchg
inc
pop
js
mov
setne
add
adc
push
sub
mov
js
ljmp
mov
pop
sub
loope
aaa
push
xor
das
adc
jp
inc
push
mov
mov
fnstsw
js
mov
pop
mov
cwtl
mov
inc
add
or
mov
adc
rorl
mov
mov
dec
mov
lock
cmp
ffreep
mov
pop
and
aaa
neg
int3
mov
adc
adc
aam
loopne
push
inc
movsl
and
sub
aas
mov
aas
pop
or
push
je
and
mov
and
insb
and
sbb
inc
mov
in
lds
push
in
mov
add
aaa
mov
movsb
jbe
add
in
movl
mov
xchg
inc
mov
pop
dec
mov
xchg
dec
adc
or
mov
mov
ret
pop
sub
or
push
inc
and
bound
adc
pop
sub
aas
orb
push
mov
movsl
fisubs
clc
or
push
sbb
out
pop
pop
sub
adc
cmp
iret
ret
outsl
leave
arpl
out
loopne
popa
xor
scas
fsubrs
mov
loopne
shll
shll
bound
push
xchg
nop
pop
je
or
dec
into
ja
nop
adc
jne
iret
pop
cmp
in
nop
pop
sbb
adc
and
pushf
sbb
xlat
inc
xor
pop
inc
ss
shr
pop
sub
cmovne
mov
test
xor
sbb
xchg
adc
pop
push
and
fistpll
pop
jbe
adc
push
inc
xchg
xchg
sub
mov
int3
jbe
js
xor
les
enter
push
test
out
jb
mov
sbb
add
mov
andnps
mov
leave
leave
leave
leave
adc
sbb
ja
mov
push
adcb
jns
test
push
lock
insb
adc
pop
push
out
xor
int
ja
and
xor
xor
out
or
xor
mov
inc
addb
inc
inc
loopne,pn
xor
mov
xor
popa
insl
sub
xor
sbb
lahf
movlps
sbb
cmp
push
adc
and
adcb
sbb
movsl
sbb
cmp
xor
mov
clc
pop
pop
or
fldcw
mov
sbb
std
pushf
or
dec
pop
pop
fs
xchg
mov
popa
adc
xor
xchg
divl
push
add
ja
or
xchg
xor
inc
jl
stos
cmp
pop
jns
shl
push
mov
sbb
adc
cld
mov
negl
xor
adc
dec
sub
aaa
jle
and
jno
outsb
femms
dec
xor
inc
stos
mov
movsl
stos
lcall
push
mov
jnp
sbb
arpl
pushf
fists
jno
cmp
sub
mov
push
pop
ja
jl
cwtl
inc
and
shl
jno
imulb
add
sbb
cmp
insl
inc
insl
popa
popa
inc
dec
subb
lds
daa
loopne,pn
outsb
cwtl
lahf
cltd
inc
xchg
ret
daa
sub
dec
push
dec
lahf
mov
loopne
dec
push
pop
inc
add
or
dec
clc
sbb
cwtl
in
push
clc
push
mov
andl
sti
movsb
clc
daa
add
cwtl
sub
sbb
clc
or
jo
inc
add
xchg
add
add
fisubs
add
mov
je,pt
imul
push
inc
insb
outsl
jae
adc
call
stos
add
loope
ljmp
add
jmp
sete
sbb
rolb
aam
iret
jnp
xor
jge
xchg
xchg
pop
sub
repz
insl
jne
je
sbb
mov
enter
xor
push
mov
dec
rcr
testb
sub
jbe
sbb
sbb
lods
lret
jmp
jnp
inc
sub
aad
push
add
sub
in
out
sbb
sti
js
fdivrs
fistpl
lds
xchg
adc
mov
das
add
and
out
loopne
jb
adc
pusha
fnsave
jnp
push
dec
dec
dec
fwait
in
pop
or
jne
cmpsl
pushf
fwait
js
leave
insl
lds
in
push
pushf
and
dec
inc
sbb
imul
jb
push
lods
add
in
bound
or
adc
or
mov
and
int3
sbb
adc
inc
gs
lahf
push
adc
push
cwtl
push
sub
cmp
sub
in
or
jae
inc
push
inc
in
popf
mov
cmp
mov
add
repz
add
adcb
jnp
mov
mov
dec
sbb
out
push
push
sbb
pop
adc
cmp
in
mov
push
push
push
lcall
dec
or
cmp
inc
cmp
and
xlat
lfs
daa
and
push
loopne
roll
inc
push
mov
or
dec
popa
js
popa
jo
arpl
repnz
add
xor
in
sbb
es
mov
mov
lock
dec
dec
dec
stc
mov
daa
cwtl
int
setae
jns
leave
leave
enter
movsl
pop
jo
leave
leave
leave
lcall
in
inc
add
cmpsl
jns
jb
dec
xchg
xlat
sbb
pop
insb
mov
sahf
pushf
mov
test
dec
dec
dec
inc
dec
mov
in
daa
daa
and
stos
or
mov
les
ficompl
push
jnp
std
mov
jne
imul
lods
cmp
roll
mov
test
popl
xor
inc
mov
push
repnz
mov
fisttpl
mov
cmpsb
xor
mov
repnz
inc
xchg
popf
dec
add
gs
mov
addb
xchg
int3
xchg
adc
xlat
ret
adc
push
jb
ret
je
jne
repz
push
or
outsl
clc
pusha
loope
adc
inc
jo
stos
fwait
daa
popa
test
and
dec
jle
push
popa
mov
xchg
dec
mov
rorl
and
mov
imul
adcb
push
insl
dec
cld
imul
and
inc
in
cltd
dec
sub
pop
ret
mov
jo
lea
enter
adc
pop
xor
dec
jae
or
pop
push
jb
int3
pop
imul
fsubrs
push
imul
add
and
and
push
mov
xchg
nop
cmp
xor
xlat
push
lods
test
push
leave
adc
arpl
ret
sub
mov
or
data16
fstl
push
aam
jne
add
and
sub
jno
in
cltd
cmp
out
inc
sti
pop
mov
jns
outsl
xor
mov
sub
add
pusha
xchg
dec
ret
add
adc
in
push
jno
jo
loope
or
inc
add
orb
mov
xor
lods
pop
xchg
insl
mov
mov
dec
test
adc
sub
insl
push
or
xor
leave
sub
push
add
sub
dec
imul
in
push
xchg
push
mov
lock
xchg
or
dec
imul
push
lods
imul
sbb
fs
les
push
adc
xor
in
clc
inc
jge
add
outsb
cmpsl
add
adcb
gs
sub
and
movsl
dec
add
inc
push
and
jbe
cmp
shll
mov
scas
test
cmp
ds
out
add
lods
insb
hlt
pop
xlat
dec
add
dec
inc
pusha
cmpsl
mov
xchg
pop
pop
and
pop
and
int3
leave
jo
sub
or
sub
je
adc
mov
stos
jne
and
push
push
inc
insl
pop
test
dec
adc
notb
pop
add
movsl
mov
movsl
leave
insb
lds
mov
mov
pop
test
or
cwtd
or
mov
adc
xchg
int
adc
jbe
je
adc
xchg
pop
or
cmp
push
push
pop
inc
scas
push
inc
outsb
fisubl
xchg
jo
inc
mov
scas
sub
jnp
adcb
jo
push
scas
push
inc
shr
cmp
xchg
cmp
out
inc
sbb
dec
cwtl
xchg
push
mov
push
call
add
lahf
or
subb
and
adc
imul
sbb
daa
dec
xchg
dec
jae
cmp
push
inc
pushf
punpckhbw
inc
int3
in
mov
cmp
and
cmp
cmp
repnz
pushf
mov
mov
daa
ss
push
mov
orl
push
mov
clc
cmp
wbinvd
mov
push
cmp
cmovae
loop
bound
cmpsl
insb
cmp
dec
pop
jg
insb
jnp
add
sub
add
cmpsl
jecxz
scas
add
dec
aaa
adc
pop
xor
adc
fs
in
mov
test
cmc
or
movmskps
cs
sbb
and
cmpsb
jne
movsb
test
data16
cwtl
add
dec
repz
mov
or
mov
inc
dec
fisubl
sbb
mov
pop
xor
pop
std
push
pop
add
add
sarl
icebp
and
mov
or
push
and
fs
hlt
pop
andb
add
loop
subl
mov
adc
push
mov
test
jbe
pop
xchg
outsl
sub
push
jbe
fwait
out
nop
daa
je
push
xchg
mov
jbe
pop
mov
pop
xor
xor
pop
sbb
mov
fs
addl
and
lds
adc
push
out
adcl
sub
push
push
add
push
sbb
dec
enter
jae
or
or
out
scas
push
sbb
gs
or
rep
popa
or
or
push
sti
inc
addl
decl
and
cmc
das
cmp
pusha
outsb
inc
paddd
fiaddl
mov
shlb
mov
inc
nop
push
cmp
out
ret
subl
pop
pushf
push
rcl
clc
pusha
lcall
inc
dec
mov
rcll
je
sbb
mov
nop
xchg
pop
adc
inc
dec
inc
push
outsl
push
fstps
dec
addr16
push
xor
dec
mov
scas
dec
xor
mov
out
add
mov
pusha
xchg
or
push
mov
fistl
xor
es
scas
loopne
sbb
add
in
inc
outsl
add
mov
sbb
outsl
push
push
and
push
push
sahf
push
shrl
add
mov
and
and
sub
push
cmp
aaa
pop
les
sub
jl
in
inc
je
sbb
mov
fistpl
xor
jns
xor
mov
mov
mov
inc
lret
lock
cld
jecxz
cmp
fcoms
inc
aaa
leave
test
pushf
mov
cltd
ljmp
cwtl
mov
fwait
dec
cmpsb
sub
and
cltd
cmp
adc
pop
leave
inc
xchg
push
les
mov
dec
mov
in
add
cmpsl
ja
mov
lea
adc
sbb
ja
sbb
jb
add
mov
icebp
lea
or
push
and
cli
cmp
push
xchg
push
adc
xchg
pop
push
or
xchg
and
inc
and
das
pop
jmp
xchg
divb
push
xchg
mov
sbb
iret
loopne
call
push
add
adc
cmp
es
loop
sahf
js
push
nop
movsb
lea
inc
mov
mov
sub
adc
sub
adc
mov
rorb
lods
sub
xor
adcl
mov
sub
pop
and
popf
daa
pop
icebp
pop
xor
jb
add
mov
cmpsl
pusha
mov
xchg
inc
enter
mov
xchg
push
push
nop
push
cwtl
adc
dec
hlt
adc
mov
lds
ja
push
inc
imul
ficoml
in
cmp
dec
mov
mov
mov
adc
syscall
mov
push
xchg
outsl
sub
add
sar
sub
lds
sub
jae
call
mov
add
imul
ret
sbb
cmp
int3
addb
jb
dec
bound
aas
push
lahf
stos
jmp
fildl
xor
es
ss
and
dec
push
xchg
jg
iret
sarl
out
dec
divb
imul
ss
idiv
jg
push
fldt
test
mov
andl
cmpsb
fdivrp
repz
xchg
inc
mov
sahf
test
lret
sbb
jmp
out
std
leave
sbb
arpl
xchg
xchg
ss
pop
push
or
pop
cli
lcall
cmp
jbe
idivb
jge
sahf
cmpsb
sti
sub
repnz
pop
push
pop
out
rol
into
mov
pop
xchg
pop
cs
dec
sub
into
cld
push
mov
jnp
jmp
cs
out
es
scas
inc
push
push
fidivrl
xlat
scas
push
scas
dec
adc
outsb
dec
out
pop
repz
clc
in
outsb
cs
arpl
xor
and
push
fistpl
fmuls
imul
xor
insl
pusha
stos
add
cmp
mov
in
pop
inc
cmp
shll
push
push
push
in
lcall
pop
fimull
adc
mov
jmp
dec
fs
lcall
mov
xor
adc
mov
push
and
incl
or
adc
push
fldl
scas
sbb
or
sbb
push
sbb
or
mov
repz
repz
sbbl
ret
iret
repz
cwtl
and
out
repz
inc
sbb
jle
pop
mov
lcall
mov
js
mov
or
pushf
ljmp
fsubr
clc
mov
repnz
int
es
lods
add
pusha
int
lods
mov
push
pop
and
inc
and
pop
out
fildll
in
pusha
or
and
cwtl
loope
lret
push
sar
loopne
cli
lret
mov
dec
sbb
pop
push
mov
jle
dec
add
sub
inc
sbb
in
cs
xor
mov
repz
inc
pop
les
mov
mov
push
loopne
out
bound
rcll
add
mov
fsubp
jns
fiaddl
pusha
sub
shll
cmp
inc
inc
inc
pop
in
sbbl
sahf
jp
adcb
add
mov
mov
push
jns
fists
sub
sub
mov
jge
push
mov
dec
movsb
sbb
lds
scas
mov
bound
inc
ja
mov
cmp
fcomip
stos
incb
or
rolb
jb
sub
call
or
sahf
sbb
push
mov
fnstcw
lret
shlb
mov
std
cmp
xor
dec
add
push
push
or
call
sub
stc
xor
scas
outsl
cmp
inc
push
pop
sahf
out
out
jo
add
out
out
lods
mov
add
jns
jmp
mov
sbb
xor
inc
push
add
sahf
out
jne
mov
sahf
out
sahf
mov
out
stc
out
icebp
cld
or
mov
sbb
sahf
sub
mov
repz
repz
jno
xchg
cld
lods
add
fucomp
out
lcall
add
sbb
out
out
xor
mov
add
jg
jle
xchg
add
out
out
int
add
add
cmp
xor
sbb
outsl
sub
iret
dec
push
add
add
js
cld
repz
xchg
add
mov
mov
cmp
repz
sahf
out
repz
add
add
xlat
and
jns
sub
xor
stc
jg
cmp
add
loop
pop
bound
repz
jge
add
add
add
iret
aas
pushl
movb
jmp
cld
out
add
push
adcb
enter
sub
cld
aas
xor
push
inc
push
sub
dec
push
push
xor
bound
xor
jp
fmul
xchg
push
scas
fcomi
cld
repz
in
lret
push
out
lret
into
xchg
jmp
jns
push
cwtl
loope
mov
jmp
push
loope
or
pop
add
jg
adc
push
pop
push
add
ss
jns
cmp
push
pop
bound
push
add
push
add
jns
jno
jnp
pop
pop
add
out
pushf
pop
pop
add
scas
out
xchg
mov
sahf
out
aad
pop
pop
add
jmp
add
cld
cmp
or
or
push
aas
iret
repz
sub
or
cmp
cmp
cmp
add
pop
or
insl
jno
repz
repz
test
push
lea
cmp
mov
ret
iret
aas
fimuls
push
add
daa
stc
std
pop
or
jmp
adc
adc
daa
and
pop
daa
sub
or
daa
inc
or
daa
push
or
fucomip
jmp
push
or
jle
fbld
arpl
add
sub
jbe
jae
je
sub
xor
sti
outsl
out
jnp
aaa
sub
or
arpl
xor
add
insl
or
jae
cmp
imul
in
push
cmp
lds
xchg
imul
rcrl
sub
lea
dec
sbb
xor
outsb
mov
sub
lea
fwait
or
mov
sub
lea
arpl
cltd
data16
jns
imul
inc
fwait
divb
pop
adc
mov
and
jae
cltd
jbe
mov
aaa
xor
insl
popa
inc
xor
mov
aaa
sub
adc
or
mov
or
mov
adc
xlat
mov
adc
enter
sahf
push
aas
cmp
fidivl
adc
or
inc
sti
xchg
sub
xchg
cmp
mov
xor
stc
push
mov
pop
xchg
cmp
mov
jno
jbe
scas
xor
aaa
cmp
adc
mov
mov
xor
pop
mov
cmp
pop
bound
dec
cmp
sahf
shrl
pop
jge
testb
xor
pop
sub
cmp
push
int3
aam
lock
imul
jo
pop
or
das
sub
pop
bound
stos
js
ret
xor
iret
adc
jecxz
mov
insl
adc
outsl
xor
je
fcmovbe
lods
fnsave
adc
cs
sbb
ja
push
test
addr16
or
mov
sbb
arpl
pop
xor
lahf
outsb
or
mov
loopne
sbb
or
or
bound
push
mov
sbb
xor
fbld
xor
xor
and
add
xor
and
add
xor
xor
xor
xor
and
cmp
cmpsb
fs
setb
sub
dec
loope
pusha
repnz
jecxz
dec
popa
stos
mov
xor
test
mov
es
jo
sbb
das
imul
arpl
mov
or
push
jo
fs
out
shlb
push
rclb
and
fisttpl
orb
je
push
lock
or
push
roll
inc
xor
xor
jl
and
arpl
mov
cmp
or
xor
fimuls
push
bound
cmp
or
cmp
insl
sahf
mov
jmp
dec
xor
xor
xor
negl
adc
fs
xor
aaa
aaa
sub
cld
ss
ds
ret
push
mov
lock
popf
inc
xor
or
xlat
orb
xchg
sbb
jnp
mov
enter
xor
ficomps
jb
or
gs
fs
ljmp
aaa
aaa
stos
dec
xchg
and
push
leave
js
scas
rolb
xor
or
sub
sbb
lahf
xor
aaa
sbb
xor
push
xorb
push
popa
arpl
xchg
shll
or
stc
out
or
adc
mov
insb
adc
adc
pop
jmp
fs
fisubrl
es
sub
jne
jo
push
add
inc
sub
in
xchg
shrb
pop
repz
xchg
push
roll
ret
mov
pop
push
or
dec
ret
aad
and
pop
outsl
and
rcll
ljmp
fs
faddl
add
enter
std
lods
insb
xor
lret
je
mov
mov
push
addr16
enter
sti
fcoms
and
fnop
std
popa
push
xchg
imul
xchg
cli
mov
mov
mov
ja
dec
sub
sbb
fadd
ror
notl
jle
xchg
and
push
lea
imull
add
jo
xlat
and
mov
push
pop
fs
pushf
fsubrs
iret
sub
repnz
cmp
jg
ret
sbb
pop
xlat
mov
sbb
divl
or
add
sbb
test
aam
push
cmpsb
out
push
dec
cmpsb
fmulp
mov
xchg
sti
dec
push
movb
stos
sarl
pushf
rorl
push
xchg
nop
push
add
aaa
xchg
xchg
cmp
insl
lret
sbb
popf
aas
push
push
daa
cmp
sti
inc
pop
sarb
lea
push
push
arpl
or
imul
xchg
jo
push
xchg
mov
es
notb
cld
add
divl
or
dec
add
sub
imul
push
out
add
ror
push
xchg
out
dec
loopne
adc
rcr
mov
shll
mov
movb
popa
fdecstp
xor
cmp
lea
add
jbe
adc
push
in
add
ja
iret
add
pusha
lock
inc
mov
pop
pop
add
pushf
adc
mov
fiadds
rclb
pop
mov
fcompl
fwait
pop
dec
movsb
add
call
or
std
sub
loopne
push
call
fwait
push
push
ret
rcll
call
pop
mov
out
cmp
lock
and
mov
cmpb
inc
mov
mov
ret
shlb
mov
inc
int3
or
bswap
pop
dec
pop
addr16
ss
mov
movzbl
sbb
add
call
mov
pop
test
cmp
mov
inc
jno
les
insb
test
je
add
xchg
mov
push
push
imul
sub
aam
mov
and
dec
sub
push
or
aam
cmpsb
jg
or
add
enter
inc
inc
aam
bound
jo
lcall
add
jb
dec
in
outsl
aam
push
iret
dec
aas
adc
sub
pop
pop
dec
in
jle
push
mov
mov
or
mov
or
pop
call
pop
inc
jo
mov
popa
push
adc
and
mov
addb
xchg
xchg
inc
jp
stos
ja
mov
cmp
xchg
mov
sbb
adc
xchg
or
imul
add
sbb
add
out
sbb
adc
and
add
in
loopne
fs
mov
pop
add
add
push
test
in
push
add
cli
or
pop
push
pop
mov
add
jmp
cld
pop
cld
xor
sub
add
adc
and
sub
rclb
shrb
cmp
or
hlt
lods
pop
orb
fcmovnb
jmp
fildl
fnstcw
je
addl
outsl
push
adc
sub
pop
pop
jmp
xor
jg
std
movsb
jne
push
sub
fiaddl
push
add
xor
out
pop
xchg
or
inc
sahf
cmp
adc
movsb
and
sub
jg
sub
pop
add
adc
pop
sub
lahf
cmp
rolb
aaa
sub
jecxz
mov
and
jecxz
pop
jg
addb
mov
pop
sbb
mov
mov
ds
ret
pusha
rcrl
add
push
push
mov
mov
sub
orb
dec
add
mov
outsl
jg
add
je
mov
fimull
fdivs
dec
fbld
or
and
fnsave
jl
or
mulb
push
sti
sbb
jmp
sub
jne
outsl
and
mov
roll
jle
jno
cmp
sub
call
stc
add
test
dec
ret
loope
push
lock
movsb
mov
popa
stos
pop
mov
and
cmp
fcoml
pop
test
addb
dec
shlb
sub
dec
test
hlt
pop
xchg
in
out
mov
adc
popa
xor
cmc
aad
lds
xchg
xchg
xlat
call
jp
mov
mov
pop
xchg
daa
into
jbe
mov
add
adc
nop
push
pop
cmp
push
xorb
out
sbb
lock
and
push
ja
insb
mov
in
cmpsb
clc
push
add
xor
repz
aas
repz
jge
jg
mov
cmp
dec
pop
mul
rolb
fidivs
sbb
dec
xor
pop
cmpsl
fldpi
add
ret
pop
or
or
sbb
in
pop
fmuls
push
mov
jns
mov
jbe
mov
or
adc
mov
sbb
cs
mov
fwait
ljmp
in
push
hlt
add
stc
insb
push
cli
mov
lcall
jecxz
lods
sbbb
jmp
cmp
inc
and
adc
stos
subb
jp
rcrb
pushl
cld
and
dec
mov
pop
sub
pop
and
decl
push
mov
inc
imul
adc
js
cli
cmp
movl
xchg
cmc
push
add
dec
or
lods
jge
dec
sub
fnstenv
mov
mov
sub
cmpsb
xchg
repz
int3
fldl
loope
cltd
int
lret
fmulp
inc
cltd
add
popa
shll
adc
pop
imull
arpl
add
subl
loopne
addb
cmp
test
adc
add
aam
cli
inc
in
std
scas
cltd
les
sub
jne
adc
add
sbb
xchg
rolb
or
and
mov
adcl
ja
sub
sub
cmp
mov
cmp
push
pop
pop
add
and
pop
dec
icebp
jbe
dec
int3
adcl
pop
lock
add
nop
pop
imul
call
popa
xor
mov
popf
mov
mov
push
mov
test
adc
sub
add
pop
push
pop
into
sub
sbb
pop
jne
xor
nop
xorb
mov
loop
clc
sub
jl
inc
mov
out
inc
ja
adc
or
or
jne,pn
push
int
ja
adcl
data16
xorb
ljmp
mov
leave
jne
or
jns
neg
loopne
pusha
mov
sub
inc
incb
xor
mov
push
xor
outsl
testl
sbb
dec
push
insb
jne
mov
decl
jmp
add
sub
jp
add
jmp
stc
outsl
mov
dec
jne
nop
push
ret
push
mov
sub
push
stos
sti
loop
movl
das
pop
mov
jecxz
es
jns
jge
idiv
jp
add
mov
out
or
ret
out
mov
mov
das
jne
push
inc
add
scas
or
test
mov
loopne
and
ja
xor
rorb
add
je
in
icebp
cmp
mov
negl
sbb
pop
shlb
or
push
sub
fmuls
sahf
adc
fnstenv
adcl
rcrb
fsts
jns
jl
addb
fildll
pop
fadd
fisubs
adc
rcll
mov
insb
shrl
pop
mov
add
adc
cmp
les
lock
fnstcw
rcrl
jp
add
ret
ffree
ffree
ffree
pop
and
out
in
or
js
cmc
icebp
xchg
push
addl
in
push
fwait
or
je
pop
add
cmp
pop
dec
mov
adc
pop
push
mov
fiaddl
push
pop
and
pop
js
xchg
and
rorb
mov
ret
ret
addl
jno
xor
cmp
mov
insl
dec
cmc
adc
mov
notl
mov
or
cmp
mov
jo
imul
xchg
repnz
imul
pushf
out
cmp
in
cmp
add
cmp
orb
pop
add
daa
cmc
or
or
dec
mov
cmpsb
ds
les
iret
lods
test
int3
addl
dec
sbb
jb
dec
es
or
das
add
in
shrl
mov
cmp
dec
xchg
add
sub
mov
mov
jge
loopne
mov
jb
dec
ret
insl
in
mov
in
push
cmp
lea
pusha
add
loope
mov
jae
xchg
pusha
mov
divl
inc
push
mov
add
add
and
popf
dec
repz
pop
pop
cmp
rol
sub
test
lock
outsb
cld
int3
hlt
rclb
adc
insl
lock
shlb
mov
dec
cmp
mov
outsl
shl
pop
pop
pop
pop
imul
inc
in
in
add
ret
pop
xor
stos
pop
pop
das
shlb
jne
sbb
add
jo
add
sub
leave
and
in
inc
pop
jo
into
rorl
cmp
in
mov
pop
ljmp
lods
cmp
sbb
add
insb
push
add
lret
dec
test
cltd
clc
jl
ret
cli
xor
cltd
jne
sarb
mov
popl
pop
loopne
lods
popf
jg
adc
shrb
fisubrs
lods
leave
mov
mov
add
lret
or
xchg
jb
sbb
xchg
jae
or
ljmp
add
and
ficoml
enter
addl
incb
ja
mov
and
ja
scas
lods
xchg
adc
out
and
test
cmpsb
add
int3
movsb
push
push
mov
in
je
or
xor
add
adc
iret
outsb
xchg
out
and
and
fsubrl
shrl
dec
inc
sti
xchg
sarb
sub
das
int
push
inc
push
sub
mov
push
pop
lea
test
xchg
mov
pop
int3
pop
push
mov
push
je
and
cmp
sub
sub
sub
sbb
jne
scas
cmpsb
stc
cmpsb
mov
je
cmpsl
sti
jmp
jmp
adc
and
adc
insb
mov
inc
test
push
push
dec
test
xor
inc
pushfw
popa
pop
pop
push
jg
or
cmp
cmp
jge
fcmovnbe
cs
daa
sub
je
or
je
adc
or
aad
xor
iret
fimuls
pop
call
sbb
sub
repnz
cmpsl
or
pop
shll
sarl
push
ja
jg
btl
or
jae
mov
jl
jns
mov
and
sti
push
scas
mov
sbb
mov
adc
push
xchg
imul
out
add
stos
or
xchg
adc
jle
test
je
xchg
fwait
add
xchg
mov
ret
xchg
xchg
idivb
movsb
push
filds
and
hlt
fld
pop
cmp
cmp
lock
dec
ja
imul
pop
mov
add
pop
pop
push
lods
mov
incl
jmp
jl
inc
mov
mov
in
outsl
sbb
or
jmp
sub
and
jne
push
inc
xor
add
or
push
adc
mov
xchg
rcr
inc
inc
sub
jbe
or
mov
decb
fimuls
mov
inc
add
or
adc
lock
adc
lea
mov
push
push
loop
pop
pop
cmpsl
xchg
push
hlt
mov
loop
pop
sbb
ja
ljmp
cmc
mov
push
push
ret
xlat
push
xor
cld
sbb
dec
jmp
jbe
insb
jnp
cmp
fwait
je
jae
xchg
dec
ja
pop
or
sub
sbb
xor
mov
iret
rcl
sub
pop
loop
decb
and
cmp
pop
jle
or
incb
fdivs
mov
xor
add
ljmp
or
push
add
push
test
test
pop
mov
or
lock
mov
sub
bswap
faddl
add
jo
mov
xchg
cmp
lods
and
sbb
lret
dec
jecxz
pusha
push
xor
mov
out
movb
pop
mov
or
cmc
sbb
ja
fdivs
or
ja
mov
dec
in
lock
or
enter
out
jae
push
jns
xchg
push
add
add
mov
pop
js
add
cmp
push
mov
outsl
cmpsl
jmp
or
imul
insb
jmp
cmpl
pop
out
pop
or
inc
cmp
jge
inc
lahf
aam
shll
jl
cmp
or
cmp
xlat
out
ljmp
icebp
push
stos
and
out
mov
repnz
pop
outsb
sbb
jle
jne
lds
dec
xchg
sub
adc
adc
lock
push
jno
add
dec
out
inc
mov
and
ror
sub
pop
mov
inc
sbb
xor
imul
cli
test
add
cmp
jle
outsl
rorb
push
int3
push
add
or
call
add
push
clc
cmpl
lcall
movl
inc
or
push
sbb
adc
mov
jbe
or
push
fdivrp
mov
mov
inc
push
fmull
pop
or
mov
and
adc
in
push
sbb
sbb
out
jge
inc
jb
or
add
frstor
outsb
mov
or
mov
and
sub
cmp
mov
rolb
add
faddl
xor
or
push
add
aas
adc
jne
inc
xor
call
mov
add
mov
dec
xor
jg
cmp
mov
or
pop
movhps
pop
jne
dec
mov
cmpsb
aam
jle
fmull
cmp
adc
xchg
jmp
cmp
adc
ss
push
xor
adc
cmp
mov
insl
push
jne
repnz
aam
aam
cmp
push
mov
push
pusha
loope
dec
and
add
scas
aad
xor
dec
push
adc
int3
add
push
clc
imul
inc
rolb
dec
inc
push
jle
lock
xchg
pop
sub
sub
aas
dec
into
and
out
insl
movsb
adc
or
sbb
dec
sub
xbegin
clc
test
jno
call
cld
addr16
sub
orb
or
or
jl
inc
cmpps
mov
dec
xor
adc
adc
or
icebp
lea
cmp
mov
cld
popf
push
movups
cmp
dec
jle
or
push
push
dec
jne
and
and
test
es
push
hlt
clc
jge
sbb
cld
xchg
insl
clc
mov
inc
xchg
push
in
dec
add
sbb
xchg
repnz
add
in
xor
add
repnz
jg
push
mov
mov
sub
pop
adc
cmpsb
mov
sbb
add
jg
pop
inc
or
mov
fstpl
fwait
ret
fldt
dec
cld
push
add
adc
xlat
push
mov
mov
or
faddl
push
lock
bound
fwait
cmp
or
cli
loopne
fcomi
pop
stc
aam
jge
mov
or
mov
push
in
jmp
push
inc
out
push
pop
lock
loopne
push
repz
lods
shr
or
shl
or
adc
mov
lea
shl
inc
testb
add
ljmp
ret
js
data16
pop
mov
in
testl
mov
add
rolb
shll
neg
orl
or
incl
add
loopne
aaa
inc
test
jne
lea
ret
or
cmp
sub
mov
add
fdivs
cmc
cmp
xchg
jg
adc
cmp
je
aas
push
rolb
scas
xchg
sub
mov
and
pop
aam
je
mov
mov
je
push
or
pop
add
stc
push
call
xchg
pusha
push
nop
adc
mov
out
lret
xor
dec
add
inc
sub
mov
mov
add
cwtl
cli
mov
push
rep
or
jo
add
movsb
jbe
faddl
divl
lock
mov
js
loope
add
cmp
pusha
frstor
mov
addl
push
rcr
fists
jno
and
xchg
jle
adc
in
cmp
ja
iret
call
je
fistpl
aas
jge
cs
lock
mov
cmp
jne
add
xchg
push
dec
add
adc
sbb
jns
sub
add
push
add
cltd
sbb
and
jno
jns
fnstcw
sbb
jne
mov
std
add
out
push
push
enter
mov
push
cmp
jne
add
add
add
inc
add
add
jno
fsubp
mov
mov
sbb
xor
les
in
bound
js
pop
enter
adc
inc
jmp
jp
add
jb
sbb
push
inc
fs
pop
pop
pushf
push
cltd
dec
sbb
lock
fimull
mov
and
mov
call
mov
inc
pop
lock
sbb
adc
push
xchg
shlb
lock
cli
int3
fsub
inc
pop
outsl
pop
cs
icebp
sub
inc
aaa
pushf
pop
cs
mov
insb
addb
div
rcll
inc
mov
sub
fbld
sub
jbe
push
lea
push
ss
mov
mov
push
insb
cmp
mov
jne
lea
adc
jne
sbb
outsb
jge
in
jbe
or
cmpl
add
push
outsb
xchg
inc
fcomi
cs
xor
or
and
mov
push
out
mov
inc
or
je
movsl
add
lock
dec
jne
push
and
mov
test
add
add
pop
xor
pop
jbe
repz
add
sbb
or
add
in
cmpsl
mov
lock
test
push
popf
std
pop
mov
mov
push
adc
or
mov
stos
mov
pop
jbe
mov
cli
push
les
stos
flds
pop
push
rolb
popa
add
sar
cmp
js
lods
mov
lods
scas
adc
flds
inc
loopne
int3
dec
call
sahf
or
inc
sbbl
adc
outsl
scas
push
sub
jne
cli
and
sub
pop
aas
xchg
pop
or
ret
mov
mov
add
xchg
aaa
adc
push
out
cmp
xchg
cli
rcrl
mov
dec
mov
or
mov
test
hlt
andb
mov
mov
or
add
and
pop
adc
mov
sub
in
add
mov
imul
xor
mov
leave
rcrl
hlt
fisttps
lldt
jmp
adcb
mov
jbe
dec
cmp
jg
jmp
and
push
push
inc
sbb
jmp
fidivrl
mov
jle
jl
fsubrs
pushf
jle
lea
sbb
dec
hlt
imul
cmpsl
sti
fsts
ficompl
mov
mov
adc
xor
jecxz
push
sbb
insb
cmp
or
andb
les
mov
sub
mov
or
pusha
sub
adc
inc
test
mov
loop
sub
or
loop
pop
lcall
arpl
sbb
lahf
jo
mov
dec
mov
sbb
lock
fildl
cmp
adc
dec
jne
mov
sub
add
lock
cs
jp
sahf
in
ljmp
add
ss
jmp
jmp
es
or
movsl
fstpt
testl
fs
push
fldt
jmp
cvtpi2ps
dec
in
jmp
insl
repnz
mov
fcoml
sbb
cmp
dec
sub
push
psubq
xchg
mov
lret
add
xor
rep
xchg
sbb
and
xchg
mov
and
jmp
test
je
sub
or
add
and
cmp
or
cmp
mov
push
add
pop
pop
and
psadbw
push
or
adc
push
mov
jl
fwait
aaa
mov
je
dec
fadd
and
xor
fisttps
pop
pusha
jg
cmp
jne
xor
mov
push
push
add
and
arpl
int
jnp
cli
push
stos
push
ss
cs
jl
fcomi
cmp
nop
stos
aaa
dec
call
push
xchg
sub
push
les
xor
in
mov
add
push
dec
in
cld
addr16
fidivrl
sbb
jne
sub
repz
addr16
sub
je
cs
jbe
sti
pop
sbb
push
dec
movsl
fstps
mov
out
bound
cmp
aas
jno
loop
loop
sbb
xor
cmpsl
cmp
test
lock
testb
inc
and
popf
cmp
inc
add
push
lock
pushf
inc
xchg
xor
xor
ret
inc
es
jnp
mov
mov
add
sarl
lahf
aas
push
jne
cld
call
pop
jns
stos
iret
scas
pop
xor
inc
or
mov
repnz
nop
sbb
adc
fsubs
inc
cmp
ja
mov
xlat
ret
mov
es
repz
test
add
mov
or
push
rcll
dec
xchg
sbb
or
jl
mov
add
inc
je
mov
or
je
mov
shll
mov
dec
je
orb
hlt
xchg
mov
mov
ret
adc
sti
ss
and
fcoms
adc
or
call
lock
daa
psrld
cmp
push
mov
std
mov
xor
mov
sub
and
cmp
enter
shll
ret
ret
jp
mov
jle
pop
pop
push
mov
push
xor
stos
add
test
shrb
or
jmp
jge
mov
neg
push
or
jbe
loopne
xchg
push
push
mov
sub
dec
or
fs
cmp
cld
ret
adc
push
in
or
jg
mov
dec
mov
pop
std
cmp
sbb
lea
cmp
inc
xchg
mov
clc
mov
sbb
dec
out
orb
mov
xchg
jae
inc
mov
adc
sub
out
mov
cmc
gs
pop
cli
dec
add
packuswb
pop
jle
mov
sub
scas
shrl
daa
dec
jge
add
call
add
in
lock
sub
and
jae
subb
ret
out
gs
lea
clc
mov
stc
ss
jp
js
in
fildl
add
add
or
mov
add
add
popf
ds
mov
sbb
call
adc
call
sub
shlb
cmp
push
and
fwait
lahf
ja
ljmp
ret
mov
adc
mov
rorl
sbb
cld
mov
inc
adc
cmp
jl
mov
lock
cmpsl
xor
pop
jo
roll
neg
and
fbld
je
sahf
and
cmc
adc
aaa
shl
push
stos
xor
pop
mov
jmp
fisttps
fistps
scas
push
dec
and
divl
adc
or
jecxz
clc
mov
mov
in
mov
in
add
cli
adc
mov
lret
or
cs
or
fcomip
or
repz
inc
mov
xor
int
int3
mov
ljmp
and
and
add
or
pop
sahf
mov
jno,pn
pop
cs
test
adc
dec
ja
push
sub
outsb
sbb
mov
dec
mov
pop
mov
pushf
fwait
cs
outsl
adc
and
je
push
push
cmp
pop
les
adc
scas
out
sahf
or
loop
ret
shl
je
fdivp
test
outsb
idivb
and
inc
add
and
and
adc
and
sub
mov
sub
sub
out
xlat
cltd
sbb
and
sub
ds
into
mov
push
xor
sub
loopne
dec
cmc
xor
or
fcom
or
push
jle
hlt
js
dec
lds
mov
or
xchg
iret
xor
lock
inc
rcr
push
xchg
or
fdivrl
testl
ret
or
mov
lahf
popa
movb
icebp
cwtl
fldt
ljmp
rclb
lock
jne
sahf
aam
pop
sbb
push
jg
ror
inc
inc
or
frndint
dec
fldt
fstsw
push
outsl
fcomi
fwait
mov
divb
je
fidivl
jne
sub
sti
lea
mov
inc
sub
mov
shr
and
mov
xor
hlt
popf
sbb
and
jns
enter
fucomi
cmp
adc
cmp
jae
cmpb
jb
movb
mov
or
ja
jmp
data16
pusha
xor
jo
xor
dec
sbb
je
fistl
add
notb
shr
mov
rclb
push
lock
ret
pop
out
or
add
lock
jle
pop
rorl
push
sub
cs
lods
jns
mov
hlt
add
or
jge
call
jl
mov
push
inc
sub
mov
loopne
jae
dec
add
fbld
insl
or
mov
mov
and
fidivl
shl
jo
fidivs
mov
dec
loopne
jne
mov
and
jne
stos
jmp
jbe
adc
mov
add
stos
aas
and
inc
addb
dec
adc
sub
movb
cmpb
add
jbe
pop
jmp
mov
daa
pop
or
iret
mov
sahf
push
xchg
iret
rorl
pusha
add
xor
fnstcw
fwait
and
rolb
js
cmp
es
sub
pusha
fisttpll
xor
push
xchg
in
sub
pop
mov
and
xor
push
test
add
lahf
fnstenv
mov
push
std
inc
ds
mov
ret
add
loopne
or
xor
add
aas
jmp
fstpt
repnz
es
push
mov
inc
adc
sbb
mov
jo
fisubl
push
pop
repz
ret
repz
jae
jne
jecxz
fimull
inc
jmp
inc
enter
mov
mov
adc
imul
pop
addl
add
xchg
add
subb
jno
cwtl
setl
xor
mov
sbb
movsb
push
addb
inc
xchg
add
stos
pop
and
addr16
push
ljmp
xchg
gs
repnz
inc
pusha
jnp
hlt
fists
jb
out
sub
and
sub
sub
push
push
push
fcompp
mov
out
xor
jae
push
sub
cmp
icebp
pop
fwait
mov
lret
mov
mov
cmp
add
pop
push
in
pushf
and
add
dec
scas
push
leave
jle
aad
push
pop
es
rolb
xor
add
mov
mov
dec
scas
inc
and
adc
mov
icebp
insb
mov
push
adc
dec
mov
je
add
push
add
add
push
fisubl
sub
pop
add
lret
jo
inc
push
xor
arpl
int3
and
push
push
cmc
rcrb
cmp
mov
adc
pop
stos
data16
add
rcll
int3
repnz
les
and
mov
jg
cmpsb
or
xor
clc
clc
sbb
or
cmp
push
stc
add
dec
mov
out
jae
mov
ss
rclb
cmp
rorb
mov
push
sarb
adc
dec
pinsrw
daa
lods
das
stc
mov
and
and
pop
pop
lods
addr16
idivb
pusha
mov
xchg
and
push
test
shrb
test
sbb
and
icebp
cmc
jl
dec
data16
ljmp
cmp
js
xor
push
cs
and
andb
ja
pop
enter
add
sarb
lock
fldenv
mov
jbe
div
mov
add
jne
sbbb
add
mov
scas
fsubl
ds
sahf
hlt
std
add
notl
or
loopne
call
call
in
dec
mov
sub
ja
and
sarl
dec
jb
or
jb
sti
insb
je
sbb
pop
inc
ja
adc
push
lea
pop
dec
incb
jne
sub
jl
xor
icebp
insl
push
jo
mov
cs
arpl
mov
ret
cli
add
repnz
ds
ds
add
mov
jo
or
fldt
inc
std
std
mov
push
orb
mov
cwtl
add
add
add
adc
or
mov
fs
sbb
dec
in
test
jg
repnz
dec
lcall
sbb
addb
push
stc
cmpsb
pop
lret
lea
dec
sbb
stc
mov
add
jl
addl
in
lods
loop
and
adcb
mov
dec
insw
data16
push
cmp
imul
mov
push
sub
pop
xor
add
cwtl
and
or
sub
lock
xchg
push
insb
mov
ret
jbe
dec
mov
adc
cmp
dec
cmp
jb
xor
jp
sbb
fbld
outsb
mov
inc
adc
mov
add
or
ret
push
insb
add
cmp
clc
mov
rolb
cmp
xor
push
pop
xchg
inc
add
fwait
mov
fcomps
jb
cmp
push
push
dec
or
sbb
or
push
jmp
cmp
sub
mov
rcll
sub
sbb
jnp
jbe
inc
inc
ret
dec
loopne
int
loopne
mov
dec
and
popf
add
insb
jp
sub
outsb
out
pop
and
sbb
push
push
repz
cmc
xchg
and
test
lock
xchg
and
and
jb
cltd
cld
outsb
movsl
adc
cmp
in
xchg
or
iret
and
add
add
shll
rolb
cwtl
aaa
dec
xor
pop
and
pop
fists
cli
lock
test
or
xor
aam
mov
fcoml
mov
or
mov
out
in
mov
adc
pop
push
mov
add
mov
xchg
or
cmp
je
mov
mov
mov
in
dec
add
insl
cmpb
jne
aad
jnp
subl
or
lods
subl
adc
inc
jecxz
mov
xor
outsl
loop
push
add
hlt
idiv
sbb
repz
pop
jge
nop
add
test
lfs
dec
imul
in
cmp
inc
in
adc
cmp
dec
inc
inc
outsl
add
pop
add
adc
and
adc
aam
test
xor
lea
cld
adc
mov
xchg
pop
jnp
je
or
add
mov
mov
lock
dec
inc
jno
cmp
push
and
mov
ret
xor
cmp
shl
les
add
sub
negb
lock
adc
mov
sbb
xchg
mov
ret
push
dec
fldenv
cmp
rolb
adc
cmovb
in
add
push
mov
dec
test
inc
enter
or
ret
je
and
xchg
cmp
and
jne
mov
adc
sbb
aaa
lret
push
push
add
pop
in
or
daa
mov
mov
pop
dec
mov
mov
add
adc
movsb
and
dec
push
pop
out
or
sbb
mov
scas
add
addb
stos
lods
jecxz
loop
adc
pop
sbb
mov
ljmp
mov
addr16
rol
jecxz
sar
insb
or
nop
in
in
lock
sub
sbb
sub
mov
pop
cmp
sbb
insl
ja
dec
jne
aam
dec
jne
mov
call
inc
fidivs
ja
push
lcall
test
or
imul
sbb
xchg
or
mov
adc
add
or
or
mov
je
ret
push
lock
rorl
lcall
adc
aam
inc
push
pushw
sbb
iret
movsl
push
loopne
pushf
pop
or
or
aaa
int3
mov
push
icebp
mov
out
inc
push
pop
adc
inc
mov
add
dec
push
das
in
cld
dec
enter
fcomps
aam
mov
aam
in
mov
scas
and
sbb
sub
mov
in
cld
mov
mov
idivb
andb
aas
push
loope
sarl
sub
adc
je
dec
add
or
inc
outsl
cli
cli
or
imul
nop
or
pop
je
pop
pushf
nop
out
movsl
add
xor
clc
cli
push
cld
or
iret
inc
insb
inc
fiadds
push
xor
ucomiss
cmp
or
push
adc
test
or
dec
jg
je
or
je
or
mov
jmp
or
je
sub
jmp
add
mov
dec
mov
addb
sub
shld
mov
mov
jne
bound
leave
pop
xor
mov
mov
dec
pop
add
mov
rclb
fcompl
not
arpl
mov
fidivs
or
push
or
or
add
jb
cltd
shll
cmp
push
fsubrs
or
xchg
mov
nop
mov
add
push
sbb
and
aaa
inc
out
add
mov
repnz
mov
les
jne
dec
clc
js
scas
shrl
push
andl
loop
or
xchg
and
add
out
stos
dec
xor
inc
jns
inc
pop
shll
adc
in
pop
in
das
sbb
cmpb
jns
fnstenv
sbb
stos
adc
cmc
cmp
imul
sub
inc
arpl
add
hlt
add
jno
or
dec
stos
arpl
test
leave
push
pop
add
xchg
or
xchg
cmp
or
mov
and
jmp
or
xchg
cmp
add
add
add
cmpsb
cmp
jne
in
sub
in
pop
pop
push
or
fwait
mov
fucomi
jb
xchg
sbb
and
test
bswap
sbb
push
dec
fs
std
or
das
add
insl
out
fisttpll
push
adc
and
add
sub
insl
pop
adc
xchg
clc
adc
mov
fdivrp
punpcklbw
sbb
and
hlt
push
sbb
mov
dec
mov
inc
sbb
ret
adc
into
cs
movb
rorl
sub
add
mov
xchg
mov
daa
dec
je
mov
or
ds
xor
sub
sti
sub
mov
sub
xchg
outsl
sub
add
xchg
ljmp
mov
mov
and
jb
daa
clc
add
cld
sbb
clc
mov
adc
ret
mov
mov
data16
push
testl
into
pusha
sbb
rcrb
out
xchg
loope
sti
add
add
or
sbb
into
fstl
iret
les
insl
jne
ja
lea
movsl
add
mov
push
inc
sahf
inc
pop
js
hlt
mov
es
cmpsb
sti
ss
adc
sahf
inc
jecxz
sarl
jl
rcrb
cli
pop
lock
jne
incl
out
xor
mov
add
jg
add
dec
jle
xchg
push
dec
je
sarl
push
adc
je
or
push
jmp
mov
sbb
push
push
mov
jmp
inc
mov
jle
and
hlt
bnd
mov
aam
inc
data16
call
push
out
hlt
jbe
jbe
jle
push
inc
pushf
psubd
data16
and
mov
jl
jp
inc
mov
lock
push
mov
or
mov
mov
int3
or
cmp
mov
cvtps2pd
add
out
jmp
inc
rolb
rclb
or
cmc
mov
jne
cmp
jg
sbb
test
sbb
lcall
std
xor
sub
add
mov
stc
imul
add
and
dec
add
js
outsb
push
adc
add
insb
stos
push
rorl
add
push
mov
addr16
shrb
hlt
and
enter
jg
push
lea
or
out
loop
ss
sub
cmp
xchg
or
cmp
push
clc
addr16
inc
inc
mov
fldl
or
fsubr
or
sbb
sbb
lods
lods
dec
insb
jo
pop
sar
sbb
call
lock
mov
cmpsl
sahf
ficomps
cmc
push
rclb
push
sub
addb
in
cmp
add
or
mov
nop
pop
out
fdiv
repnz
jb
daa
loopne
jmp
inc
push
lock
add
loop
in
xchg
icebp
sahf
lock
inc
inc
outsb
mov
pop
adc
sbb
fucomip
lock
push
sbb
and
pop
push
jmp
cmpb
mov
loop
ja
in
add
shr
push
mov
ljmp
pop
out
mov
mov
enter
int
fwait
and
fs
jnp
cwtl
repnz
add
add
or
sub
mov
dec
jae
xchg
je
sub
inc
sbb
aaa
syscall
hlt
xor
jmp
mov
jl
imul
jne
mov
mov
push
xchg
adc
mov
add
xor
scas
mov
aam
rolb
jge
add
divps
mov
add
pop
push
cld
repz
and
inc
sbb
xor
jne
inc
gs
push
jmp
call
clc
add
sub
dec
adc
add
clc
pop
fsubrp
pop
adc
mov
pusha
and
and
sub
je
and
aam
mov
shl
adc
sub
out
mov
testb
repnz
jo
adc
or
je
jnp
or
xor
insb
push
inc
push
fs
hlt
iret
and
xlat
fmull
repnz
jl
mov
pop
out
test
or
ja
jne
xor
jnp
add
add
addr16
push
lods
repnz
inc
cmp
pop
jge
divb
addb
sti
test
inc
mov
aam
inc
test
mov
fistps
push
out
enter
test
test
mov
and
xchg
aas
jg
add
in
add
push
sahf
fadds
xor
out
lea
and
and
xor
lcall
fdiv
out
mov
push
or
adc
pop
dec
dec
push
or
jl
add
add
sub
jle
sub
dec
jge
call
sbb
adc
mov
movsb
sbb
clc
and
inc
pop
sbb
decb
out
movsl
arpl
aaa
jmp
or
mov
or
sbb
jge
mov
mov
imul
and
sub
push
je
icebp
adc
mov
mov
and
xchg
push
or
jb
in
or
or
and
mov
push
fldl
add
pop
fcompl
loopne
inc
mov
pop
setle
arpl
or
sbb
or
mov
cwtl
frstor
lods
adc
das
and
int3
aaa
push
xor
sub
ss
xor
push
pop
aas
cmp
push
dec
jmp
bound
inc
xorl
fwait
mov
pop
rol
hlt
add
sbb
sub
mov
lods
cmpsb
add
mov
out
sbb
add
mov
sbb
aaa
mov
rcrb
lea
push
pop
mov
mov
adc
ret
or
daa
movsl
xchg
fstpl
sarb
inc
and
xorb
iret
add
fwait
mov
mov
addl
andl
lods
cmpsl
inc
mov
mull
inc
xchg
pop
push
sub
xchg
mov
xorb
sbb
loopne
sbb
loopne
inc
movsb
add
and
loop
pop
jmp
push
movsb
mov
cmp
and
iret
in
mov
inc
call
sub
test
nop
mulb
sub
lfs
mov
inc
dec
fimull
in
in
and
cmp
nop
dec
shr
enter
jo
and
jo
and
lods
ljmp
insl
xor
push
push
dec
faddl
sub
add
adc
cmp
inc
or
push
sub
adc
movsb
shrb
aam
jl
aam
scas
xor
cmp
push
in
pusha
ret
rcr
or
pop
iret
nop
daa
pushf
mov
add
xchg
ss
or
ret
pop
jb
add
mov
andb
clc
mov
movsl
cmp
push
push
loopne
mov
outsb
insb
xor
clc
and
or
mov
or
or
cmpl
xlat
cmp
icebp
and
shlb
fs
fisubrs
insl
add
inc
sub
mov
loopne
mov
frstor
daa
jo
cmp
push
push
sbb
subl
cmp
cmp
negl
cmpsl
daa
or
add
adc
test
inc
push
push
popa
mov
sbb
push
jl
sbb
sbb
mov
fdivs
ss
mov
add
pop
or
ja
mov
pop
sbb
xor
popf
mov
sub
pop
arpl
sbb
add
add
cli
pop
ss
add
add
daa
out
xor
jne
sbb
xor
rcrb
aas
enter
lret
test
ret
test
inc
add
js
push
std
into
push
cmpb
aaa
sbb
hlt
dec
xor
push
lock
inc
loopne
xchg
inc
inc
decb
sbb
sbb
xchg
cli
loope
movsl
add
incl
jo
xchg
imul
cld
mov
push
push
push
jns
aam
dec
xchg
fs
hlt
cmp
dec
xor
xor
and
fiaddl
cmp
mov
push
mov
mov
xchg
sar
adc
shr
pop
xchg
fdivl
lds
pop
arpl
lds
add
xchg
aam
adc
push
or
call
jbe
xlat
pop
add
push
sub
and
out
sub
cltd
roll
xor
aad
sub
add
add
std
sub
cmpsb
inc
clc
add
orb
clc
sbb
je
jmp
dec
dec
add
out
mov
loope
test
je
push
add
ljmp
adc
jo
aam
leave
jmp
xor
add
xor
mov
std
ja,pt
jle
pop
les
pop
mov
out
sarb
test
in
into
cltd
scas
push
xchg
adcl
lea
adc
mov
movsl
adc
je
outsb
mov
lods
nop
out
lret
adc
jbe
pop
add
push
push
sbb
nop
addr16
cmp
lcall
push
stos
inc
js
mov
inc
jmp
push
js
outsb
clc
dec
push
pop
jge
jle
test
lock
pop
or
cwtl
sbb
xor
jg
sub
add
notl
shlb
roll
xor
inc
sub
sar
ret
pop
inc
cmpl
adc
adc
mov
shlb
movsb
rcll
mov
sbb
push
xchg
sub
pushl
jo
jae
jl
push
xchg
lock
and
lods
and
dec
jmp
adc
out
out
in
mov
cmp
mov
or
dec
mov
dec
loope
add
addr16
mov
fidivrl
ret
mov
hlt
push
push
mov
push
into
pop
sub
mov
sub
add
sbb
inc
mov
dec
pushf
xor
out
lea
cmpl
sbb
in
inc
fstl
mov
fsubs
aaa
adc
and
push
loopne
loope
pop
out
or
popf
mov
mov
fcomps
push
adc
dec
out
dec
push
lret
sbb
mov
mov
pop
pop
sub
insb
sub
inc
add
fcoms
jne
adc
into
or
dec
inc
mov
cmp
dec
insb
inc
mov
sub
aas
sub
scas
mov
pop
add
push
xor
and
mov
adc
and
fcmovu
push
into
lods
cs
mov
xlat
lock
mov
mov
xchg
out
mov
xchg
dec
push
mov
lea
mov
mov
mov
in
iret
pop
xchg
add
mov
scas
add
push
divb
aaa
add
aad
xor
inc
inc
jle
mov
testl
or
ret
or
lods
test
mov
js
or
loope
pop
clc
xchg
push
cmp
in
ja
fidivrl
js
cmp
lfs
xor
push
xor
jg,pn
int3
cld
push
mov
adc
push
or
mov
mov
cmpsb
and
jmp
fs
outsb
inc
mov
cltd
cmp
fsub
or
jecxz
cmp
shrl
adc
xor
jbe
push
dec
int3
in
sbb
sub
aaa
sub
dec
jl
mov
pop
pop
and
jle
push
xchg
das
sbb
push
add
and
bound
or
adc
and
movsl
sub
add
mov
add
fdiv
lea
xlat
and
or
pop
stos
xor
xchg
fidivl
cmp
scas
int3
pop
mov
push
insb
les
inc
mov
xchg
xor
icebp
rcrl
or
addr16
and
jo
or
or
repnz
xor
clc
xor
pushf
test
aas
xor
mov
nop
daa
add
daa
mov
xor
jb
or
push
inc
pushf
movsl
movsb
cltd
nop
xor
mov
rclb
xor
or
sbb
inc
xor
and
inc
inc
lahf
mov
sbb
lods
nop
ss
pop
add
adc
mov
or
ret
mov
push
decl
inc
lret
cmpl
xor
inc
adc
fisttpl
mov
mov
and
pop
cli
sub
mov
pop
adc
push
push
add
ret
push
mov
aam
dec
inc
mov
ja
sbb
dec
js
lods
pop
lcall
jp
adc
sbb
mov
je
inc
lahf
add
sub
sub
popa
mov
shlb
mov
adc
xchg
in
cmpb
fs
jecxz
or
xorb
or
mov
dec
and
cs
cmp
pusha
inc
cmpsl
push
jae
pop
push
fsubl
lock
add
push
push
or
rolb
inc
sbb
aaa
sub
in
mov
fldt
mov
filds
cmp
jg
lods
int3
cmp
ja
movsb
jne
sbb
cmp
mov
sub
pop
jmp
mov
push
jle
pop
add
xor
cmp
sbb
mov
imul
ljmp
cmp
lcall
dec
sbb
repnz
out
xor
call
or
dec
fs
cltd
int
jnp
mov
and
mov
fsubl
mov
mov
fldenv
cmp
cmp
movb
mov
or
jge
enter
xor
mov
mov
xor
mov
lea
jmp
orb
jle
es
cmpsb
or
mov
subl
adc
rclb
mov
xor
add
inc
in
push
push
cmp
je
jmp
mov
je
jmp
xor
fildl
jmp
mov
cmpsb
mov
add
cmpsb
imul
mov
push
scas
add
in
mov
push
mov
mov
add
pop
jg
pop
cs
ret
mov
lods
push
or
ds
loopne
jne
sbb
leave
sbb
or
and
inc
jae
cmpsb
pop
enter
lcall
mov
inc
lahf
mov
jno
mov
mov
push
fs
add
mov
mov
enter
fwait
sub
adc
mov
lcall
enter
scas
mov
and
fdivl
pusha
xchg
mov
inc
mov
aas
xor
mov
xchg
out
nop
jge
mov
pushf
int
in
mov
sbb
and
mov
mov
addr16
jecxz
int3
jb
mov
adc
mov
push
add
mov
mov
xchg
sbb
and
sub
cld
adc
call
subb
push
or
add
stos
xor
hlt
movsb
cmp
aas
or
sub
jns
mov
add
sbb
lock
fs
mov
or
push
adc
fisubrl
sbb
or
mov
push
adc
das
pop
push
pop
dec
xchg
mov
cmpsl
orl
shrb
fdivrl
add
add
andb
sub
xchg
pusha
mov
xchg
sbb
mov
inc
adc
mov
pop
ds
xchg
out
stc
jle
outsl
mov
mov
pop
cmp
shr
push
cmp
mov
mov
push
jbe
sbb
mov
movb
adc
push
test
or
xchg
jbe
inc
sbb
adc
inc
jo
andb
into
adc
outsl
lock
dec
adc
aas
loopne
cmpb
adc
cmp
or
int3
add
popl
sbb
mov
push
push
mov
or
mov
arpl
es
add
movl
mov
sub
add
jne
or
mov
pop
push
inc
add
inc
aas
jo
iret
cmp
ds
mov
lcall
jo
sub
and
jne
shlb
dec
xor
insb
add
xchg
cmp
pop
mov
pop
lock
jne
hlt
test
xor
mov
xlat
inc
add
mov
andl
inc
inc
aaa
add
es
dec
sbb
sbb
and
mov
das
clc
in
sbbl
pushf
rclb
imull
xchg
sub
imul
mov
mov
jne
mov
loop
test
or
pop
aaa
sbb
xor
sub
sbb
sahf
mov
or
cli
add
loope
lock
ds
adc
jbe
shl
mov
sbb
nop
jns
dec
rclb
jne
out
add
push
fstpt
and
test
out
dec
pop
out
fnstenv
loopne
or
adc
push
add
fdivs
add
sbb
addb
cmp
mov
adc
add
adc
jbe
mov
andl
push
mov
or
jbe
or
adc
addb
fidivrs
add
xor
cmpsl
xor
add
clc
and
cld
rsqrtps
out
movsb
into
push
inc
clc
shll
add
ret
add
aam
add
in
popa
mov
dec
inc
fwait
sub
xchg
cmpsb
lock
in
call
subl
dec
xor
pop
and
cmc
inc
ss
mov
inc
adc
out
push
sub
js
pop
dec
jo
jmp
push
stos
popa
mov
cmp
movlps
ret
mov
mov
pop
dec
push
fdivr
push
jnp
adc
and
cmp
fmuls
or
mov
pop
xchg
and
rcll
sarl
dec
daa
ljmp
push
adc
out
sbb
nop
mov
call
add
jne
fwait
cmp
jl
and
xor
hlt
pop
adc
mov
cld
call
icebp
lods
and
xlat
loopne
stos
or
push
rcl
and
sbb
filds
out
and
or
ret
jge
dec
dec
mov
adc
cmp
jl
or
sbb
in
clc
pop
cmp
push
cs
int3
fidivl
fcompl
int3
or
fimull
fcmovnb
cmp
and
repnz
dec
add
stos
sahf
insl
xor
cmp
jle
dec
mov
sahf
pop
je
mov
push
mov
pop
inc
mov
fcomps
in
cmpl
repz
jge
sbb
mov
std
ret
repz
shl
cmp
jbe
adc
mov
out
push
cmp
into
sarb
sbb
dec
push
or
fdivl
sqrtps
stos
ret
inc
mov
js
inc
pop
sbb
or
mov
ret
or
mov
adc
inc
mov
adc
es
mov
out
in
or
enter
lret
enter
testl
icebp
sbb
and
xorb
add
jbe
jne
std
jle
cmp
sbb
or
je
pop
ret
mov
push
sub
cs
jo
mov
push
aas
adc
jb
out
and
sti
and
dec
addr16
rcll
andl
rcll
nop
inc
loopne
addl
mov
sti
in
adc
add
in
or
lds
sub
sbb
sub
popa
orl
xchg
inc
popa
xor
xchg
add
dec
jmp
inc
in
add
je
fistpl
mov
mov
add
cli
add
rolb
andl
pop
lods
in
mov
sub
fadds
cwtl
movsl
cmp
inc
inc
sbb
xchg
pop
mov
dec
jecxz
cmp
push
ss
in
push
addr16
and
mov
pop
sbb
aaa
pop
sub
sbb
sbb
add
mov
test
sbb
lret
jne
add
testl
or
push
pop
jne
push
lock
mov
mov
or
or
or
cwtl
cmp
adc
sbb
push
pop
incl
or
addb
mov
call
dec
mov
jmp
movb
je
pop
call
or
js
dec
mov
dec
fmuls
mov
imul
cli
adc
roll
dec
imul
adc
push
sub
or
dec
mov
pop
xor
xorb
mov
mov
pop
mov
ficompl
mov
test
xor
jae
mov
inc
out
jp
mov
call
pop
dec
in
dec
lock
push
enter
clc
pop
cld
pop
clc
pop
inc
cmp
mov
mov
test
xor
adc
sbb
add
sbb
aas
lea
mov
inc
sahf
xor
xor
cmpsl
jns
enter
pushf
push
sub
adc
cltd
pop
js
xorb
mov
or
in
loop
stc
push
cmp
adc
and
add
repnz
loop
int3
xor
push
loop
adc
hlt
popf
inc
push
sub
enter
insb
movsb
push
dec
inc
xor
add
mov
add
pop
pushl
pop
loopne
fsubrs
xchg
pop
add
and
add
sub
fdivrs
cmp
xor
or
push
add
inc
ja
call
and
xor
test
dec
jno,pt
nop
pop
mov
in
jne
push
jg
clc
mov
pop
adc
push
add
sbb
push
jo
jmp
xlat
mov
add
mov
push
aaa
xor
add
cwtl
inc
push
xchg
outsb
sbb
xor
test
jbe
and
or
inc
ror
mov
nop
adc
pushf
xor
add
ss
gs
xor
pop
fidivs
mov
add
push
dec
or
ja
dec
push
jae
xor
sbb
or
and
frstor
mov
jecxz
mov
cmp
pop
jb
sbb
xchg
push
cmp
addr16
mov
push
dec
call
stos
and
cmp
orl
or
jl
add
data16
cmp
push
adcb
add
call
jl
jmp
ss
shr
or
mov
and
push
ljmp
shlb
or
mov
or
xor
rol
mov
fcompl
jle
sbb
jl
in
fistps
add
inc
jmp
pop
pop
pop
ret
pop
push
mov
mov
xchg
mov
mov
push
movsl
adc
movsb
nop
adc
cmc
jbe
and
cwtl
aas
test
ds
incl
js
fmuls
sbb
int3
or
and
jmp
adc
fisttps
repz
mov
xor
lea
cmpl
adc
addb
cmpsb
clc
dec
and
adc
outsb
mov
dec
cmp
lea
push
dec
cli
inc
pusha
inc
ret
js
std
add
gs
dec
fnstenv
nop
inc
cmp
ret
popf
je
mov
xor
test
xchg
cmp
pop
push
push
in
adc
mov
call
scas
outsl
pop
movsl
rcll
dec
sbb
popf
xchg
add
test
push
loopne
push
pop
mov
or
pop
add
xlat
imul
lock
mov
cs
inc
lahf
jno
sahf
adc
test
and
lods
orb
sub
ret
je
pavgb
pop
sbb
ret
and
jb
in
or
and
dec
loope
sub
inc
xor
or
dec
ss
stos
adc
add
icebp
sbb
mov
enter
loope
pop
inc
jmp
loop
ret
xchg
inc
or
popf
mov
adc
mov
or
lock
dec
push
in
mov
mov
xor
dec
add
inc
inc
addr16
loopne
scas
or
sub
pop
mov
gs
sti
aas
fcoms
add
call
jne
movzbl
mov
push
lds
jle
sbb
fwait
pushf
test
mov
sub
xor
pinsrw
xchg
out
push
cmp
pushf
ljmp
mov
jmp
push
xchg
jp
ffreep
call
inc
dec
leave
jne
mov
xchg
std
or
mov
inc
or
mov
inc
mov
or
daa
jae
sub
lods
sub
fidivrs
je
shrl
cmp
or
mov
mov
sub
addl
scas
mov
xor
sbb
mov
push
fisttpll
test
imul
or
xor
ja
jno
hlt
cmpsl
pop
dec
sub
add
decl
lcall
popa
sbb
rorb
ss
sub
sbb
sarb
push
xor
aam
lahf
jb
jmp
cmp
push
push
imul
in
lods
fldt
ficoms
stos
dec
jb
mov
adc
push
aaa
or
or
es
inc
and
adc
xchg
subl
inc
sub
push
cmp
mov
les
inc
je
fmull
inc
xchg
push
ds
lea
pop
test
xor
inc
jne
mov
jge
adc
dec
cmp
sete
inc
sbb
pop
std
out
mov
cmp
je
mov
int
es
add
dec
inc
mov
sti
and
dec
sbb
jnp
into
and
data16
es
push
test
inc
ja
cmp
das
or
repnz
call
cmc
ss
adc
jg
inc
cmp
inc
insb
jmp
inc
sbb
into
pop
xor
in
add
enter
dec
ficomps
jbe
int
mov
inc
sbb
xor
fabs
xor
ror
js
push
xchg
xchg
scas
jmp
fs
hlt
sub
inc
pop
xor
push
inc
popf
mov
or
or
mov
lahf
adc
add
leave
arpl
push
cmp
dec
dec
enter
pop
dec
loopne
sbb
mov
and
jne
cmp
dec
pusha
std
mov
fwait
ret
test
ja
mov
mov
dec
sbb
or
fs
data16
ret
dec
jmp
out
adc
mov
sub
arpl
jno
fiadds
rcrb
push
test
and
pusha
push
or
lock
cmc
es
mov
and
clc
xorb
test
orb
call
add
jns
jnp
inc
mov
pushf
or
push
add
aas
jl
test
pop
rorb
or
push
jecxz
inc
sbb
inc
inc
or
fcoml
pop
inc
aam
sbb
lods
inc
adc
sarb
int
loopne
push
fmuls
mov
push
xchg
call
int
cltd
fistl
sbb
inc
into
add
push
sbb
fisubs
stos
popa
ret
or
sub
and
fisubrs
xor
fstps
push
andl
rcll
iret
adc
popl
inc
fwait
push
mov
add
loopne
adc
daa
push
ljmp
pop
or
cmp
je
loopne
and
sahf
fsubrl
sbb
push
inc
popa
test
pop
mov
jbe
loopne
movl
std
inc
dec
jne
or
iret
sbb
repz
enter
out
xchg
inc
sub
imul
cmp
push
in
dec
mov
jae
pop
notl
shl
push
mov
hlt
and
subl
fnstcw
and
test
xor
or
scas
xor
add
mov
out
out
dec
pusha
push
inc
aas
cmc
mov
mov
popf
or
orl
jg
andl
ror
jns
pop
dec
lock
or
cmp
mov
jo
iret
xor
rorb
pop
out
sbb
loope
or
push
movsl
adc
popf
fidivl
fisttpl
fsubrl
or
push
push
mov
mov
clc
out
imull
mulb
shll
sarb
cmc
push
xor
jns
dec
mov
inc
mov
jo
shlb
pushf
mov
dec
mov
das
test
sub
loopne
mov
pshufw
ret
imul
repz
inc
lods
mov
div
daa
cmpl
adc
iret
mov
ret
decl
jno
pop
sbbb
pop
inc
sbb
int
and
or
cmpb
and
shlb
and
jne
or
aad
or
ss
cmp
dec
or
inc
pushf
jb
add
inc
ljmp
inc
andb
aas
stos
inc
or
sbb
inc
stos
mov
pop
pop
xor
cltd
sub
and
cmp
imul
cs
inc
mov
push
or
or
pusha
lods
dec
cld
in
jo
adc
pusha
xchg
mov
jb
cmp
mov
sbb
mov
lods
jne
mov
push
inc
add
add
mov
inc
das
jmp
pusha
inc
daa
hlt
adc
and
lcall
dec
pushf
mov
nop
or
popa
dec
add
xchg
dec
xchg
popa
mov
mov
popf
lods
pop
roll
aaa
je
sysret
cmp
iret
and
nop
pop
push
or
xor
out
incl
scas
inc
pop
sahf
in
bound
mov
subl
stos
jmp
xor
cmp
and
mov
movb
pop
decl
rcl
js
ja
jno
and
pop
clc
insl
stos
pop
scas
or
dec
mov
pop
aad
movsl
lahf
pop
jmp
faddl
sbb
cmp
jb
imul
loop
push
mov
and
jne
inc
mov
mov
sub
mov
mov
push
rcrb
pop
pusha
lods
stc
test
jp
xor
cmp
fcomps
mov
jae
imul
and
add
xchg
fstpt
daa
out
les
add
add
sbb
imulb
lea
push
call
adc
sbb
adc
call
push
das
lds
movsl
inc
fidivs
sub
fidivs
dec
push
xor
cltd
loop
movsl
out
jg
xor
lret
push
sbb
into
enter
inc
and
add
je
or
mov
xor
clc
shlb
or
push
shr
mov
jb
data16
xchg
push
or
sbb
lea
xchg
dec
outsl
sbb
push
insb
lahf
fiadds
lods
ja
movsb
ljmp
jae
xor
sbb
pop
call
sub
pop
daa
and
sarb
andb
hlt
mov
shlb
mov
inc
lahf
lods
clc
cmp
mov
add
add
xchg
stos
shl
pop
adc
pop
sbb
fsubrs
lret
loopne
outsb
pop
fnstcw
mov
or
ficoml
jae
aas
adc
call
test
test
cmp
test
loope
xchg
sbb
push
add
fnsave
inc
add
insb
push
mov
leave
and
add
add
sub
push
clc
jecxz
fiaddl
adc
sbb
inc
cmp
jle
jno
shll
push
pop
lds
sub
or
js
xor
lret
cmp
jb
cs
mov
mov
lret
int
inc
sbb
sub
mov
push
nop
add
or
push
xchg
mov
jl
jns
cmp
mov
mov
inc
imul
add
mov
push
pop
js
push
cmp
sub
sub
inc
mov
mov
and
cwtl
loop
sbb
dec
rolb
sub
mov
lods
cwtl
jno
insb
std
imul
insb
pop
mov
insl
scas
mov
dec
sub
add
inc
mov
add
insl
repnz
sbb
scas
inc
ja
insl
in
ret
mov
leave
mov
outsb
sbb
mov
aaa
outsb
cmpsl
push
in
lea
outsb
mov
nop
outsb
in
sbb
inc
loope
lea
push
mov
outsl
xchg
pop
dec
jbe
adc
cmp
xor
in
in
jecxz
xchg
xchg
out
sub
jl
sbb
sub
mov
jge
add
pushf
jo
mov
fwait
inc
lcall
mov
fsubrs
push
fcomp
lcall
push
jae
cmp
adc
add
push
lock
pop
pushf
sbb
cmpb
gs
shrl
orb
pop
xor
mov
pop
adc
xchg
inc
popa
pop
pop
sbb
push
lods
call
and
stos
jo
xor
fs
orb
daa
jno
jns
jne
roll
xchg
loop
jns
jno
xchg
push
mov
cmp
in
shlb
cmpl
xor
cmpsl
jno
lods
xchg
or
push
rorb
push
jl
shll
sub
mov
dec
sbb
lds
mov
ds
xchg
inc
clc
loop
stc
js
sbb
in
cmp
mov
or
mov
lea
push
xlat
dec
or
jne
mulb
push
add
ret
dec
fs
push
push
es
je
faddp
je
in
faddl
in
adc
pop
cwtl
fnstsw
jecxz
nop
add
jle
lds
rol
add
cltd
sahf
rorb
inc
mov
jmp
cmpsl
imul
sahf
aad
aad
fidivs
dec
mov
dec
sub
adc
pushf
inc
je
aad
call
ja
movzwl
data16
arpl
mov
nop
ret
rcll
aaa
dec
cs
notb
sub
push
lock
pusha
sub
mov
cltd
xor
push
push
dec
rcr
lmsw
loopne
mov
mov
adc
adc
push
sub
mov
xor
jbe
pop
scas
add
add
out
mov
push
je
add
or
cmc
push
jne
stos
add
or
add
sbb
mov
pop
pop
dec
ret
sbb
xor
inc
repnz
push
adc
jae
scas
lcall
adc
outsb
adc
or
cmp
jb
fcoml
jne
es
rcl
push
push
sbb
icebp
pop
adc
pop
clc
add
or
sbb
sub
cmp
jge
push
mov
or
push
adc
pushf
mov
add
aaa
dec
push
xor
adc
rclb
imul
and
jno
andb
shlb
dec
fwait
loope
xrelease
mov
pop
cmp
xchg
sub
push
or
inc
aas
clc
xchg
and
lret
or
adc
pushl
cltd
ret
mov
pop
mov
js
loope
or
movsb
fmuls
roll
adc
popa
cmp
clc
cmp
add
pop
push
xchg
xchg
lock
jae
dec
adc
in
imul
sbb
or
inc
xchg
daa
push
loopne
mov
jecxz
jo
daa
fcomps
xor
call
sbb
pusha
jecxz
pop
fisubrs
adc
and
dec
xchg
or
sub
popa
outsb
cmp
fcompl
add
lret
clc
rolb
dec
loop
mov
clc
je
lock
jb
adc
or
dec
in
je
sub
call
and
xchg
jge
popl
push
add
sbb
sti
add
pusha
subb
add
inc
add
dec
push
or
lea
add
add
repnz
not
add
popa
mov
rorb
pop
pop
xchg
cwtl
mov
cmp
test
sub
jo
lods
ret
fldt
cld
adcl
cmp
testb
aas
js
imul
add
clc
mov
addb
lcall
clc
pop
loop
cmp
push
pop
movsl
lret
ret
xchg
mov
mov
xor
fisttpll
sbb
or
loope
adc
mov
jl
call
xor
adc
leave
cwtl
jecxz
popa
inc
popf
insl
imul
adc
adc
and
xchg
pop
sub
xor
and
push
out
fs
add
insl
or
xlat
add
mov
add
aam
lods
push
lods
fsubl
ret
inc
adc
jmp
jl
roll
cmpb
xor
test
sbb
add
xchg
mov
clc
int
push
mov
mov
push
jb
add
push
and
in
xchg
add
imul
inc
add
mov
or
mov
adc
push
movsb
std
sub
push
mov
add
rclb
xor
add
les
mov
adc
fdiv
daa
jbe
nop
out
jo
jge
hlt
jp
dec
shll
pop
ja
loop
test
enter
aaa
and
aaa
out
inc
lea
and
cli
imul
adc
dec
rorl
pop
cmp
test
push
push
out
inc
xchg
cs
mov
lods
or
push
mov
les
loopne
xor
jns
xchg
fiadds
cmp
push
xchg
insl
cmp
sub
or
jns
in
lock
sub
dec
rep
in
in
xor
inc
pop
jle
cmp
jp
dec
add
shl
jmp
in
fadds
jnp
inc
cld
shl
test
stos
stos
jle
nop
dec
lahf
lds
and
ret
test
rcr
fwait
nop
sub
outsb
int3
aas
jo
rcrb
and
jo
nop
xchg
nop
popf
mov
sbb
xchg
cmp
xchg
sub
and
pusha
inc
dec
arpl
lret
cld
sbb
adc
or
inc
pusha
lahf
dec
fisubrs
or
push
icebp
inc
and
jbe
pushf
jne
lock
adc
jge
aaa
push
jo
sub
aaa
je
xchg
sub
inc
cmp
jle
mov
dec
jne
push
cs
inc
inc
or
push
std
sbb
inc
iret
inc
mov
aam
int
ret
jge
or
mov
clc
addr16
daa
mov
ss
test
xor
js
xchg
cmp
mov
xchg
inc
xchg
int
adc
pop
inc
inc
loope
and
loope
and
lock
pop
mov
call
dec
lods
in
mov
test
imul
dec
sar
arpl
addb
sub
pop
shlb
lcall
xchg
rcr
xchg
push
jne
mov
cld
ss
xchg
inc
add
jp
cmp
jle
lret
mov
push
dec
or
push
std
cmp
jle
or
mov
cs
outsl
js
test
sub
lds
icebp
testb
test
outsl
mov
leave
adc
add
sub
or
inc
adc
and
cmp
inc
stos
sbb
push
cmp
je
push
xchg
ret
xchg
pushf
sbb
lds
and
pop
mov
dec
aaa
or
or
pop
pop
aas
test
and
lock
sbb
in
les
stos
lods
and
stos
loope
test
repnz
fwait
jae
outsl
lock
push
and
or
lods
test
adc
dec
push
or
outsl
popa
xor
nop
ret
push
sub
hlt
push
lcall
sub
or
das
aas
xlat
or
sbb
sbbb
jge
add
mov
cltd
subb
cmpsb
inc
loopne
bound
hlt
cld
add
cmp
mov
xchg
push
xchg
mov
dec
adc
hlt
jnp
pusha
push
inc
sub
jns
push
pop
sbb
xor
lock
data16
xor
jecxz
sbb
cmc
inc
mov
mov
clc
add
rolb
int
in
test
sbb
stc
pop
sub
xor
data16
mov
fs
or
jl
enter
std
or
push
mov
mov
es
and
lds
sbb
loopne
shlb
shll
cmpsb
dec
dec
lcall
mov
dec
sub
retw
push
cmpb
mov
mov
test
mov
lret
mov
dec
mov
xchg
scas
add
or
add
add
xchg
jg
mov
or
out
xlat
xchg
and
and
cld
dec
lds
call
outsb
repnz
xor
and
lods
bound
add
xchg
inc
xchg
add
pop
je
jns
js
push
adc
pop
and
push
sahf
lret
je
nop
or
loope
mov
dec
int
loop
mov
xlat
ret
cmp
push
xor
inc
pop
add
je
lea
addr16
xchg
call
xor
adc
adc
push
mov
sub
mov
ljmp
sub
jl
push
adc
enter
cs
or
add
pop
xor
pop
in
inc
and
sub
adc
pop
adc
cmpsb
pop
lret
mov
push
test
mov
xchg
rclb
jmp
xlat
repz
dec
ret
inc
push
in
pop
push
shll
mov
icebp
dec
loop
push
loopne
add
stos
fcomps
inc
sub
js
into
lret
sbbl
add
stos
test
push
loope
and
mov
inc
imul
cmp
mov
mov
add
test
mov
call
mov
test
mov
aaa
adc
rolb
lea
sub
rcr
nop
out
mov
or
mov
scas
mov
mov
iret
inc
add
adc
movsl
push
cwtl
lea
ds
mov
xchg
cld
movb
cmc
fs
out
or
mov
inc
movsb
fwait
cmp
adcl
mov
stos
adc
dec
push
insl
in
inc
add
nop
rcrl
xor
mov
jp
into
lret
in
or
inc
add
sbb
mov
faddl
pop
pop
push
out
cmpb
mov
pop
mov
jo
mov
xor
insl
add
sub
inc
arpl
dec
inc
dec
sub
inc
mov
loope
push
and
jns
sbb
out
in
sub
add
flds
adc
leave
and
adc
and
xchg
dec
mov
pop
push
xchg
and
shr
mov
sbb
and
adc
lock
dec
jne
rcrl
adc
mov
dec
out
jl
inc
pop
xor
shl
or
inc
div
mov
push
in
outsb
sbb
mov
enter
sbb
js
mov
and
adc
loope
dec
jbe
popa
push
repnz
imul
inc
xchg
xchg
test
or
clc
cmp
lahf
xchg
iret
lock
call
jl
ds
fdivr
cltd
sarb
iret
sbb
cmp
sub
enter
mov
xor
shrb
xchg
mov
enter
mov
dec
fimuls
mov
mov
repnz
sbb
dec
fisubs
xchg
cwtl
cwtl
out
loopne
je
push
and
and
adc
sahf
xchg
popl
leave
xor
sbb
js
dec
sahf
xchg
iret
je
xchg
jo
insb
jae
mov
cmpsb
test
push
inc
and
lcall
pop
push
push
pop
out
push
iret
leave
cmp
loopne
pop
inc
dec
js
and
nop
inc
nop
xchg
out
popf
cmp
fdivrs
push
mov
xor
fcompl
cmp
test
jbe
jbe
cmp
or
jne
out
shll
add
inc
movsb
insl
and
xchg
mov
cmp
test
insl
repnz
int3
adc
xchg
call
jb
hlt
clc
cld
add
or
mov
mov
cmpsl
mov
and
cmp
enter
rcll
int3
push
pop
mov
lods
mov
cmpsb
add
xchg
vmwrite
cmp
out
xchg
in
loopne
sbb
push
mov
mov
clc
icebp
add
push
adcb
push
or
inc
mov
push
out
dec
pop
push
dec
or
xchg
mov
cmp
bound
shll
add
pushf
cmpsl
push
or
push
dec
dec
sub
js
cmp
lcall
add
subl
arpl
add
mov
mov
add
into
invd
dec
push
xorb
xchg
rorb
dec
pop
pop
daa
pop
jae
call
or
push
inc
push
push
inc
dec
std
jge
add
ja
jae
ret
mull
push
movsb
push
xor
adc
lods
fidivrl
jp
xor
lahf
enter
insl
fisubrl
dec
jb
and
arpl
popa
mov
repnz
mov
inc
cmp
adc
mov
dec
imul
inc
pop
sub
mov
add
test
fnsave
das
inc
add
or
jb
add
xchg
mov
fs
xor
insb
fs
pushl
fsubrs
cmp
sbb
into
adc
ja
mov
leave
xor
insb
ja
dec
arpl
add
jo
int3
add
inc
xor
pushf
inc
xchg
xchg
sbb
pushf
pop
xor
mov
ja
nop
mov
or
loop
push
mov
jbe
ljmp
jge
inc
or
xchg
inc
mov
adc
inc
mov
inc
or
or
imul
adc
push
je
and
test
aas
pop
or
pop
inc
inc
push
or
leave
in
mov
or
sbbb
or
inc
les
fisttps
loope
push
cmpsl
test
or
or
ret
mov
sub
add
sbb
xor
push
push
movsl
aam
mov
or
add
cwtl
jbe
jbe
in
mov
jo
outsb
push
cmpsb
dec
or
adc
lock
sub
jle
dec
cld
bound
add
ja
sbb
adcl
pusha
addr16
dec
dec
js
les
ret
jb
jl
sub
sbb
insb
adc
cwtl
outsl
or
pop
enter
adc
and
addr16
and
sub
call
push
dec
jns
add
enter
add
mov
pop
cmp
in
stc
jg
add
xchg
adc
push
cld
jno
cmp
ja
fisubl
imul
sub
push
movaps
sub
in
or
outsb
or
push
sub
mov
mov
fmul
mov
xor
pop
pusha
mov
mov
adc
cwtl
lcall
das
jno
push
sub
sbb
xchg
dec
call
or
mov
inc
scas
adc
outsl
pop
insb
add
aad
pop
dec
scas
sub
icebp
sub
adc
pusha
sti
outsl
sbb
jb
jns
outsl
cmp
inc
pushl
mov
test
sbb
mov
adc
jge
push
fdivr
das
insl
ja
js
stos
shrl
inc
cmp
repz
fwait
jg
xor
imul
adc
out
xor
jne
xchg
loope
fwait
dec
stos
insb
gs
repz
cmp
outsb
jb
roll
ss
adc
lock
or
xchg
push
adc
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
adc
hlt
lock
in
in
call
in
fcom
rolb
xchg
xchg
fildl
cmp
xor
lock
outsl
sbb
lea
sbb
jle
sub
push
adc
clc
mov
push
mov
adc
mull
sti
jne
mov
cmp
sbb
xor
call
or
inc
mov
pop
adc
sub
adc
jle
add
sbb
sbb
enter
xchg
xchg
popf
jns
jno
adc
add
es
cltd
data16
call
dec
fwait
nop
fbstp
enter
ja
and
push
add
clc
out
sub
cmc
pop
add
xchg
push
push
lahf
dec
aaa
es
push
adc
inc
and
lcall
loopne
cmc
sbb
mov
mov
cmp
aam
jg
nop
push
sbb
push
xor
inc
mov
mov
or
test
fucomi
fcoms
repnz
mov
nop
popl
pop
hlt
rol
mov
fld
mov
dec
sahf
lret
add
xlat
push
in
mov
mov
xor
and
mov
dec
or
mov
inc
pop
cmp
push
pop
or
movsb
mov
out
andb
jbe
mov
and
mov
inc
xor
adc
leave
and
and
dec
xor
and
sub
and
sub
xor
and
xor
xor
and
dec
call
dec
xor
inc
movsb
jb
in
movsb
inc
sub
cltd
movsb
jb
dec
xor
dec
jns
movsb
jb
and
sahf
movsb
jb
in
push
addb
jb
pop
lock
pop
jb
in
pusha
lahf
pusha
pusha
loopne
jns
movsb
jo
push
mov
cltd
push
sbb
push
outsl
out
xor
fldl
je
ret
sub
inc
push
and
les
loop
bound
ds
jae
cmp
push
jne
add
dec
dec
jle
cmovns
inc
pop
outsb
enter
dec
jb
pop
outsl
jb
inc
insl
jo
js
les
je
xor
imulb
xchg
add
jns
mov
inc
and
aas
pusha
int
xor
je
dec
add
dec
mov
outsl
sti
loope
aad
jo
nop
lods
jb
adc
xchg
and
mov
sbb
fildll
or
dec
js
xchg
and
pop
pop
adc
or
mov
sub
mov
les
cmc
lcall
add
pusha
les
adc
stc
cmpsb
push
movsl
push
adc
ja
push
push
sbb
mov
xlat
inc
push
movsb
push
sub
add
test
push
push
inc
xchg
js
inc
add
or
repz
cmp
pop
add
and
jl
inc
lahf
lods
dec
mov
out
push
push
ss
cmp
add
jecxz
popa
ljmp
rcrb
sti
mov
bound
xor
or
in
mov
sysret
add
test
test
dec
lock
out
je
or
jnp
push
test
push
add
push
inc
jne
add
push
sub
sbbb
or
sub
mov
xor
and
mov
test
xor
lds
movhps
xlat
int
mov
pop
dec
jae
mov
jge
dec
and
arpl
pop
mov
stos
add
bound
add
jns
rcll
or
int
push
jnp
andl
inc
mov
outsl
xchg
jecxz
ds
lret
or
inc
push
pusha
push
negb
or
movsb
pop
xor
dec
stos
mov
adc
inc
rcll
mov
and
or
imul
push
popf
or
fiaddl
jo
test
sub
lods
pushf
jp
mov
hlt
mov
ss
inc
pop
push
stos
test
push
jns
add
push
loopne
pop
lret
or
xchg
dec
or
adc
cmp
pop
jae
scas
jmp
inc
cmpsb
push
jo
sbb
shrb
dec
mov
add
sbb
sbb
mov
sub
sub
test
jno
pop
lds
jbe
sahf
jbe
fcomps
xchg
push
cmpsb
into
mov
test
push
cmp
fwait
pop
mov
pop
cmp
sbb
and
ljmp
aas
mov
insb
stos
pop
mov
mov
mov
cmp
pop
adc
xor
sbb
popa
push
iret
pusha
xor
inc
cs
mov
mov
jne
push
push
push
mov
cmp
fs
lods
nop
pop
je
test
test
and
cmp
and
push
adc
pop
sbb
add
pop
insb
inc
pop
and
pop
xchg
pop
xor
cmp
pop
enter
mov
add
add
pop
adc
push
jl
gs
xlat
pop
inc
enter
enter
scas
push
ret
mov
pop
test
and
mov
xlat
pop
inc
xor
test
pop
adc
adc
addb
pop
iret
pop
andb
cmp
push
xor
das
in
add
in
lea
jge
outsl
inc
mov
inc
adc
sbb
addr16
inc
add
mov
cwtl
mov
ret
bound
jg
cmp
xchg
mov
pop
das
ss
dec
mov
or
rol
mov
das
orb
pop
in
push
adc
nop
jl
and
pop
stos
inc
add
push
sbb
and
add
ja
pop
inc
subb
aaa
aam
imul
xchg
mov
and
adc
cld
pushf
movsb
sub
pop
mov
sbb
mov
in
shl
push
nop
mulb
das
mov
nop
leave
cmp
jnp
push
int3
jmp
loopne
mov
repnz
in
lods
in
cmp
fucomip
add
leave
jae
mov
cmp
loopne
filds
add
lea
fidivrl
sbbb
dec
xchg
sbb
jae
fs
enter
mov
loopne
lret
nop
xchg
cmpl
mov
push
and
outsb
or
add
pop
sbb
sbbb
jg
mov
add
cld
mov
ss
sub
adc
sbbb
popf
sub
inc
je
dec
je
sbb
subb
cltd
sub
es
jbe
add
je
es
dec
adc
mov
lcall
dec
pop
lret
xor
in
cmp
mov
jae
fldt
dec
hlt
mov
enter
lods
lock
enter
scas
in
mov
enter
scas
call
cmpsb
xor
into
mov
in
cmpb
jae
loopne
sbb
loopne
mov
mov
cmpsb
ljmp
push
inc
pusha
insb
ficompl
mov
les
nop
cltd
shlb
addr16
xor
jge
xchg
cmpb
sub
ficoms
fimuls
mov
ret
sub
mov
add
sub
pushf
jmp
adc
push
dec
or
sub
nop
test
ss
pop
push
test
call
popf
nop
dec
adc
xor
mov
cs
daa
mov
add
cwtl
xlat
ss
cmpb
cmp
aam
stos
insb
xchg
xchg
test
xor
shrb
loopne
in
xchg
in
pop
addl
sub
dec
push
mov
ficompl
fs
in
push
add
sub
inc
add
insb
push
add
sbbb
dec
and
fs
cli
or
jno
and
pop
xor
inc
imul
cmp
push
add
inc
pop
into
xor
xchg
sub
mov
shrb
pop
nopl
out
jbe
imul
call
jne
jbe
mov
jo
or
pop
lock
into
add
aas
lock
push
cmp
adc
pop
push
xor
or
push
aas
jmp
jp
jne
andb
roll
add
jmp
add
cld
adc
jmp
test
xor
ds
fisttpll
and
pop
add
mov
lahf
shll
jmp
in
movsb
out
subl
sub
mov
push
push
xchg
pop
ret
xchg
icebp
pop
es
add
cmp
roll
rcr
xchg
orl
cmpsb
jo
repnz
and
loopne
jecxz
fmul
and
les
incl
sti
adc
push
add
xchg
jne
pushf
xchg
std
aam
lea
jmp
mov
xlat
call
push
icebp
stos
sub
inc
pop
mov
mov
cld
clc
sub
test
push
testb
pop
push
xchg
testb
test
out
dec
sub
pushw
outsl
jbe
in
jmp
sbb
pop
scas
rcrb
popf
or
imul
sbb
je
popa
push
lock
loope
loopne
cli
push
mov
xchg
sub
push
ja
push
push
aaa
addl
inc
xchg
mov
mov
scas
add
pushf
je
insb
stc
push
or
repnz
mov
sub
cmp
xchg
imul
adcl
testb
mov
repz
dec
pop
sti
cmp
and
pop
call
out
cld
pop
mov
icebp
cmpsb
pop
push
xor
cs
addr16
xchg
jmp
push
test
cmpsl
add
or
sbb
push
addb
fyl2x
incb
clc
lret
mov
push
ja
fs
inc
sbb
loop
ret
mov
fldt
fs
add
add
or
mov
add
or
inc
imull
inc
or
and
adc
mov
inc
aaa
inc
pushl
adc
stos
add
in
mov
sub
sbb
mov
add
sub
jno
xor
pop
or
mov
jne
call
xor
cmpsb
add
out
scas
lea
adc
scas
inc
or
aam
pop
ja
xor
in
mov
xor
push
mov
adc
iret
les
pusha
fs
inc
jno
js
push
xchg
jl
xor
fdivrs
mov
pop
in
push
mov
call
jb
pop
inc
mov
xchg
xchg
sbb
loop
sub
mov
hlt
and
xchg
inc
push
mov
nop
inc
dec
enter
cld
sbb
into
out
nop
in
dec
xchg
xchg
js
enter
sti
push
mov
jno
jl
loopne
aaa
xchg
adc
sub
stos
jnp
mov
push
push
mov
push
sti
push
call
pusha
adc
lds
inc
xchg
pop
push
push
and
cmp
cmp
je
mov
std
and
fmull
jmp
inc
xchg
jecxz
push
mov
js
andl
or
or
mov
xor
lock
cmp
jne
loope
push
popf
push
inc
push
pop
pop
push
or
in
mov
or
adc
imul
sub
jnp
out
dec
bound
mov
subl
fadd
sahf
cmpsl
fildl
pop
daa
in
add
sub
iret
repz
sub
push
data16
test
add
ds
dec
xor
adc
popa
add
adc
imul
jnp
mov
sub
xchg
add
mov
dec
repnz
cs
sbb
xchg
clc
fstp
out
xchg
mov
sbbl
stos
clc
adc
repnz
les
mov
mov
jb
inc
and
push
inc
cld
jnp
xchg
mov
and
jl
push
lock
lock
lds
jmp
adc
fsubr
inc
adc
and
sub
je
dec
jle
pop
and
jmp
adc
mov
or
dec
mov
add
aad
mov
cmp
adc
jle
ss
out
in
sub
jne
push
sti
std
lcall
jmp
insb
inc
insb
adc
inc
pop
int3
sbb
cs
jmp
movsb
mov
adc
addl
and
lock
orb
lahf
push
pop
push
jns
inc
pop
arpl
insb
adc
mov
in
and
rolb
jmp
and
pushf
test
es
repz
pop
add
in
jne
es
shufps
inc
mov
frstor
pop
pop
mov
or
mov
inc
sbb
scas
int3
fxch
pop
mov
pop
aad
dec
repnz
add
mov
out
pusha
in
sbbl
push
in
jns
out
adc
inc
fs
cmp
jo
push
dec
out
iret
insl
daa
lret
fiaddl
jmp
mov
out
mov
ret
mov
scas
frstor
insl
aas
xor
mov
das
int3
rcrl
movsb
cmp
push
sar
cmp
pop
leave
mov
push
aaa
add
fnstsw
fdivs
jbe
jo
mov
inc
fimull
add
or
mov
xor
push
pusha
into
xchg
mov
aad
enter
je
mov
xor
divb
dec
mov
rcr
daa
or
jmp
mov
stos
mov
lods
mov
adc
and
pop
aad
clc
mov
test
push
mov
leave
pop
aaa
enter
repnz
jge
sahf
ljmp
sahf
fiaddl
or
out
jb
cli
add
mov
jecxz
repnz
inc
fstp
sub
xchg
mov
test
mov
mov
jmp
aam
rorb
push
xchg
mov
repz
pop
movl
mov
inc
mov
mov
aaa
test
push
lahf
xlat
sub
lods
fcmovnbe
test
push
push
imul
and
push
sbb
lahf
inc
xchg
adc
addr16
adc
jmp
or
push
xor
xchg
pop
adc
mov
pop
or
or
mov
cmp
add
mov
add
lahf
in
insb
xorb
and
sbb
jae
cmp
or
inc
cmp
push
xchg
xchg
and
dec
cmp
or
sub
nop
adc
cmp
addl
adc
mov
add
mov
add
mov
mov
dec
adc
in
jge
dec
shl
inc
scas
mov
jp
mov
shll
jno
push
add
add
jmp
lock
jb
ja
shlb
mov
dec
sahf
out
psllq
cmpsb
ror
pop
jns
notl
and
lds
enter
xchg
add
or
call
xor
adc
in
or
mov
iret
repz
push
lret
xchg
mov
cmp
ret
int
mov
pop
jb
imul
mov
inc
fdiv
or
sarb
dec
xlat
adc
call
jno
sbb
add
sbb
daa
sub
push
popa
push
cmp
adc
lea
and
jmp
pop
adc
sub
inc
or
dec
out
shlb
mov
outsl
fsubl
xor
mov
cmp
mov
jo
fsubl
test
push
adc
pop
mov
jo
cltd
shld
mov
dec
loopne
xchg
fmull
in
and
fnsave
mov
and
mov
in
adc
push
sbb
repnz
sub
pop
aam
lock
test
call
enter
data16
pop
ret
cwtl
bound
adc
sbb
shr
data16
add
pop
dec
add
sub
and
or
add
nop
aaa
arpl
rcrl
pop
push
jecxz
cmp
roll
push
iret
repz
inc
pop
insb
sbbb
lret
fstpl
data16
add
push
sub
push
add
jns,pn
enter
jbe
adc
insl
push
addr16
frstor
aad
pop
and
les
sub
leave
mov
push
sub
mov
fisubrl
or
lock
daa
je
mov
xchg
ror
cmp
mov
and
cltd
dec
ret
lahf
cmpsl
test
sarl
int
lahf
aam
pop
push
je
mov
mov
push
mov
xor
pop
pop
push
sub
mov
repz
dec
xor
mov
cmpsb
mov
pop
das
into
pop
and
xor
adc
sub
addb
lods
push
xchg
sbb
push
cmpsb
sub
mov
aas
dec
adc
and
movl
xor
jmp
pop
add
xor
pop
push
cmp
pop
add
fs
loopne
int3
sbb
xchg
add
pop
subl
fadd
cmp
dec
aad
cwtl
sbb
or
cmp
mov
xor
addb
mov
iret
out
aad
bound
fiaddl
fldcw
mov
stos
push
xchg
jne
jo
jmp
adcl
cmp
and
incl
jb
nop
sbb
adc
ja
xlat
sbb
adc
loopne
adc
and
mov
dec
sti
cmp
ret
or
add
je
inc
xchg
or
inc
enter
and
inc
rclb
dec
mov
mov
dec
out
pop
repnz
dec
in
out
int3
xlat
out
and
pushf
mov
out
adcl
pusha
das
pop
push
popa
cmp
decl
and
mov
rclb
lahf
test
out
add
das
inc
fdivr
lcall
iret
repz
or
pop
xor
ret
rcrb
inc
mov
out
sahf
cmpsl
push
popa
outsb
jl
cmpsl
xor
loopne
sbb
leave
lret
mov
cmp
sub
sahf
sbb
sbb
inc
or
sbb
mov
xchg
sub
fistpll
push
xchg
jo
jne
loopne
pusha
add
andb
es
and
jbe
add
shrb
rol
sub
lret
sbbb
xor
add
adc
arpl
dec
or
repz
test
insb
xchg
fildl
lea
popf
push
lods
fdivrl
ds
sbb
pop
pop
sub
or
repz
jb
pop
mov
push
sbb
mov
jne
fstpl
sbb
xchg
push
stos
cmp
mov
xorb
jge
jno
sbb
add
sbb
pop
leave
mov
es
xor
push
movsl
jmp
lahf
in
insb
arpl
cmp
sbb
xor
and
jo
les
mov
jne
or
push
push
mov
syscall
mov
lock
or
ds
mov
imul
add
je
loopne
rcrb
fldt
sbb
daa
in
ds
add
rorb
insl
andb
stos
lds
sarl
adc
adc
fucom
aad
sbb
sbb
mov
fwait
cmp
add
inc
fstp
ret
add
add
and
jecxz
imul
or
push
sbb
sahf
out
sahf
dec
push
bound
es
jl
fildll
push
dec
fistpll
neg
daa
mov
push
es
inc
fsubl
push
and
mov
push
add
or
sbb
mov
push
mov
sti
push
loope
inc
xlat
lret
int3
inc
shr
jecxz
movswl
push
sub
mov
sbb
movsb
pusha
pop
fwait
std
push
inc
dec
xchg
jae
inc
aam
and
or
faddl
add
fwait
and
and
aaa
ret
push
int3
cwtl
in
pop
sub
lods
int
int3
test
int
mov
xchg
xchg
pop
sub
ss
repz
push
data16
loopne
insl
jns
inc
sahf
push
inc
daa
mov
out
jns
int3
push
jecxz
adc
sbb
push
jbe
sbb
sbb
xor
mov
xorl
std
inc
xor
sub
mov
or
add
jb,pn
jp
xor
push
inc
pop
dec
push
adc
sub
jmp
out
jmp
shrb
sub
jmp
jns
dec
rolb
push
pop
xor
add
xchg
pop
dec
cmp
movsl
add
fstpt
fldt
testl
cmp
rcrl
adc
loop
sub
pop
insl
add
adc
je
mov
repz
mov
out
loop
jne
outsb
test
push
sbb
and
aas
jle
xchg
popa
push
push
sbb
sti
call
hlt
fildl
xorb
pop
leave
add
jbe
sub
xor
jb
pop
pop
loope
add
fbld
or
inc
xorb
daa
aaa
jbe
adc
push
mov
mov
movsl
loopne
add
xor
cmp
adcb
inc
gs
in
and
lock
adc
push
loope
cmp
jne
call
arpl
lock
insl
hlt
jg
pop
sub
push
xchg
stos
adc
sbb
ds
mov
or
pop
scas
xchg
test
cs
push
mov
test
pop
hlt
ret
ret
inc
nop
sub
pop
pop
nop
pop
leave
stos
popa
in
sub
in
cmp
mov
xor
push
bound
jp
push
pushf
out
fistpll
push
lods
push
imul
sahf
not
push
jmp
push
sbb
xor
xchg
dec
repnz
inc
inc
pop
fldt
movsb
jge
xlat
aam
pop
pop
pop
xchg
enter
sub
add
pop
xor
lret
mov
pop
and
lds
cwtl
jmp
add
jae
add
mov
add
rcl
aas
mov
xor
imul
dec
call
push
fs
call
outsl
cwtl
push
pop
daa
scas
movb
lock
es
aas
push
icebp
ret
shrl
mov
stos
or
sub
cltd
mov
lods
mov
sub
aaa
pushl
adc
test
addr16
inc
or
cs
out
or
insb
xchg
xlat
aaa
aad
xor
inc
adc
shrb
leave
loope
imul
adc
xor
sbb
lret
add
pop
cmp
push
mov
or
in
fildll
loopne
jns
pop
pop
and
dec
push
push
push
inc
xchg
pusha
rolb
inc
jb
cltd
push
fildll
stc
mov
gs
cs
jge
jmp
andb
pop
pop
es
cmpsb
push
repz
jns
idiv
xor
push
inc
data16
sarl
lcall
fsubl
push
cmpsl
in
daa
out
cmp
jns
sbb
in
pop
outsb
and
push
inc
xchg
test
adc
je
fimull
stc
and
or
rcrb
push
inc
pop
inc
pop
mov
pusha
enter
mov
xor
and
jbe
shlb
fisubl
in
cmp
bound
push
and
test
nop
jnp
add
mov
fisttpl
das
pop
sarb
mov
fisubrs
lcall
iret
shl
inc
repnz
aad
jns
out
cvttps2pi
mov
cmp
mov
add
push
pop
push
jo
mov
nop
mov
mov
push
enter
adc
mov
popa
in
addl
pxor
fisttpl
insb
xchg
jo
add
sbb
outsb
pop
scas
pop
inc
movsl
xor
loopne
cmp
and
leave
cmpb
push
orl
push
popf
push
mov
fs
int
add
add
and
push
lods
sbb
inc
pop
ja
lods
sbb
int
addr16
test
lock
xchg
imul
xchg
and
dec
icebp
lock
and
sub
addr16
xchg
arpl
mov
cmpsl
loope
and
sub
inc
imul
mov
inc
xlat
in
loope
mov
xchg
inc
jmp
leave
and
jno
mov
icebp
bound
test
shl
cwtl
mov
and
lret
imul
in
xchg
ret
dec
lret
and
pop
in
pusha
or
adc
cmp
or
mov
xchg
adc
in
add
mov
mov
push
sbb
aas
add
in
in
pop
or
and
xchg
pop
in
cli
push
dec
adc
repz
repz
addb
ret
jecxz
lahf
out
lcall
cmc
mov
divl
push
mov
sahf
idivl
ss
push
jns
fwait
lock
mov
jmp
and
cmpsl
or
push
pusha
fdivrs
mov
lock
xchg
pop
adc
pop
and
push
int
aas
test
cmp
jo
into
jge
movsb
aad
test
loopne
loopne
xor
mov
repz
sahf
dec
in
gs
fcom
inc
movsb
imul
add
pushl
add
popf
movsb
loopne
push
loopne
push
movsb
data16
xchg
xor
addl
mov
ss
in
adc
clc
push
pushf
push
cwtl
jbe
push
sarb
xchg
sbb
jb
and
nop
pop
jns
and
adc
and
mov
mov
push
ret
and
cmp
or
sbb
xchg
jl
mov
push
sbb
mov
inc
fidivs
sub
sbb
outsl
mov
loop
sbb
gs
add
xchg
hlt
or
inc
lcall
imul
sahf
cmpsl
jge
sbb
scas
fdivs
fwait
testb
inc
sbb
xchg
adc
sub
and
mov
xchg
dec
or
leave
lods
xor
addr16
adc
or
insb
push
add
add
je
mov
jo
xchg
push
dec
jo
inc
xchg
dec
xchg
adc
and
enter
movsb
imul
jns
iret
fnsave
sub
sbb
sub
fwait
xchg
xchg
adc
xchg
xor
push
push
jbe
adc
pop
cmc
lods
jbe
push
test
sbbl
push
mov
pop
mov
pop
fwait
pop
out
dec
and
je
pushf
push
add
rclb
testb
dec
and
push
push
dec
mov
push
dec
imul
jmp
jmp
aas
jmp
sbb
dec
movsl
sti
adcb
add
xor
pop
push
xchg
inc
mov
sub
subl
lret
gs
push
ds
add
movsl
xor
pop
lahf
cwtl
inc
lods
jge
shrl
imul
xchg
add
test
cmc
or
jmp
cli
or
jae
sti
sub
or
push
mov
add
icebp
loop
adc
cli
andnps
cmp
mov
bound
outsb
sti
setb
sti
fcoml
and
daa
push
and
inc
outsl
adc
and
sbb
cmp
sub
fdivl
sbb
mov
cld
jg
jno
cmp
mov
call
mov
mov
jl
mov
jmp
repz
sarl
push
subb
call
pop
out
sahf
fildl
sbb
push
insb
mov
adc
fdiv
push
adc
loope
mov
notl
dec
mov
mov
and
lahf
pop
xchg
dec
lea
pop
mov
mov
mov
arpl
cmpl
push
jno
pushf
push
pushf
mov
sti
cwtl
xchg
jl
les
mov
mov
add
insb
inc
dec
sub
scas
add
out
pop
inc
or
andb
movsb
addb
inc
aaa
cmp
imulb
inc
sbb
xor
dec
ss
in
loop
movsl
adc
in
pop
cli
out
pop
aaa
hlt
pop
in
pop
add
push
popa
jns
xchg
mov
inc
push
in
jb
in
testl
xchg
lret
xchg
mov
or
add
or
inc
orl
bound
ss
je
je
inc
fiaddl
inc
fstps
orl
push
cltd
lds
jmp
dec
cmp
dec
insb
mov
imul
inc
cmpsl
push
ret
adc
mov
xchg
pusha
inc
pop
and
mov
jg
test
orb
ficoml
bound
push
dec
jmp
cmpsb
add
xlat
adc
jmp
das
jmp
jns
je
pop
jmp
fnstsw
mov
jmp
sbbl
inc
js
mov
xchg
fcompl
sbb
inc
shrl
dec
adc
jb
and
push
push
push
push
je
jg
ret
adc
pushf
jb
mov
fbld
lock
push
add
and
jb
test
pop
loopne
stc
stos
ret
add
push
loope
in
sti
lret
adc
out
add
ficoml
adc
xor
ljmp
push
lret
ja
sarl
movsb
mov
add
iret
push
jg
mov
stc
sahf
rcr
push
mov
iret
repz
adc
push
dec
push
push
mov
jo
mov
lock
mov
stos
mov
ret
mov
pop
mov
inc
adc
mov
sbb
mov
aam
and
sti
xor
icebp
xor
fidivrl
fnstsw
xor
xchg
shrl
inc
loop
and
sbb
movl
adc
mov
clc
cmp
push
pop
sub
sahf
out
mov
pop
rclb
push
adc
mov
or
gs
inc
stc
out
inc
test
test
mov
push
and
adc
pop
mov
mov
lea
orl
shlb
out
and
sub
adcb
inc
pop
mov
aam
inc
push
inc
lods
lods
or
and
dec
pop
adc
imul
adc
lods
sub
in
cmp
adc
pop
inc
test
jns
aam
inc
dec
mov
push
add
push
div
ret
outsb
fsubr
adc
aaa
xor
inc
xchg
xchg
inc
enter
or
xor
stc
push
js
inc
adc
or
dec
or
mov
cmp
jg
je
cmpsb
fs
push
pop
or
bound
cmp
push
sub
mov
ret
jmp
mov
aaa
or
cmp
jae
fisttps
cli
mov
xor
add
sbb
adc
fstp
es
push
or
adc
pop
iret
lret
ret
push
sub
lock
cmpsl
xor
add
xchg
or
outsb
inc
insl
or
inc
pop
inc
push
nop
and
push
mov
dec
lods
testw
stos
loopne
popa
dec
xor
jne
movsl
mov
sbb
xor
jmp
pop
adc
shll
ss
lods
arpl
lods
push
push
lahf
add
xchg
repnz
add
sub
dec
imul
scas
aas
mov
jl
inc
lock
pop
dec
enter
pop
adc
or
pop
sub
adc
mov
mov
dec
bound
dec
or
sti
mov
xchg
push
add
enter
pop
add
imul
repnz
dec
add
and
mov
lock
fwait
push
daa
pop
rclb
daa
scas
sub
dec
sub
pop
ret
mov
pop
loop
push
in
pop
push
pop
push
push
rcll
push
jae
jbe
leave
inc
push
fcmovb
add
in
mov
inc
stos
push
push
push
xchg
adc
inc
xlat
push
adc
cmp
xor
and
adc
lds
mov
fwait
and
inc
enter
adc
outsb
sbb
mov
jbe
mov
cmpl
loope
nop
mov
jae
mov
and
cmp
cld
jg
je
push
call
and
je
and
cmp
dec
stc
sub
add
add
ss
out
xorb
push
inc
xor
in
cmpl
ja
jmp
jg
and
pop
jb
movsl
add
jno
inc
cmp
xchg
pop
jne
adc
jmp
inc
loope
pop
stc
adc
jno
ret
pop
loope
sub
stos
jmp
fs
pop
dec
inc
icebp
mov
ret
enter
pop
fildll
push
and
lmsw
cmc
sub
and
aaa
mov
and
adc
pop
add
mov
mov
adc
pop
inc
dec
add
or
or
adc
cmp
inc
divl
mov
and
xor
mov
mov
fimull
dec
fcmovbe
ret
cmp
fists
shll
xor
outsb
fistpll
add
call
sbb
or
push
mov
lea
mov
push
inc
jmp
push
cs
add
mov
test
icebp
push
hlt
push
je
dec
adc
adc
adcb
icebp
fadds
or
sbb
cwtl
sbb
cmp
adc
jb
cmp
fs
xor
push
or
std
jl
xchg
or
jmp
xchg
jmp
mov
test
pop
test
jne
pmulhuw
inc
jle
adc
sub
jns
fwait
and
sbb
mov
or
jecxz
adc
mov
or
adc
leave
lcall
adc
push
or
pop
cmp
mov
in
or
xor
sbb
jbe
push
or
jle
daa
ja
mov
cltd
add
daa
jbe
testl
mov
adc
push
fildll
add
add
fsts
lsl
dec
sbb
pop
loope
jo
or
inc
sarb
sahf
fwait
mov
lds
cli
add
sub
inc
pushl
sub
rcrb
or
jnp
xchg
xchg
jbe
inc
enter
pop
insl
adc
xorb
mov
jle
adc
cmp
dec
iret
repz
sahf
push
stos
mov
jns
pop
arpl
clc
mov
scas
push
or
jp
pop
mov
sbb
pop
sub
mov
in
push
pop
fnsave
dec
mov
adc
mov
in
leave
lds
aaa
lock
lods
add
inc
sbb
and
mov
and
mov
add
push
jmp
inc
cltd
sbb
mov
jl
xlat
dec
adc
js
out
lods
jmp
aas
dec
xchg
add
dec
lock
mov
pop
cmp
fsubs
xchg
lock
movsb
inc
jae
shlb
sbb
lock
mov
or
sub
int3
movsl
pop
lret
xor
lods
add
inc
push
in
test
fsubr
aaa
test
mov
ljmp
add
xor
mov
cmp
rolb
aam
push
dec
hlt
je
fadd
pop
xor
mov
fcmovnu
ret
cmovge
cld
adc
js
or
cld
arpl
push
jb
inc
add
inc
or
loop
fcomps
push
xchg
or
leave
sub
sbb
shlb
xor
ret
dec
adc
push
sbb
pop
jl
sub
add
add
push
icebp
mov
mov
cmp
imull
adc
jnp
lret
in
or
jb
push
bnd
push
sbb
mov
add
dec
fdivrs
incl
pushl
pop
sbb
pushf
jae
imul
sahf
push
or
fadds
daa
or
sub
cs
test
mov
dec
adc
sub
movsl
push
push
push
xor
cmp
cmpl
jns
mov
ljmp
adc
and
xor
and
bound
out
ljmp
nop
pop
les
or
pop
adc
or
mov
sub
imul
push
push
xlat
call
sahf
cwtl
or
dec
add
sahf
imul
xor
inc
aas
mov
sub
imull
testb
ja
data16
xchg
mov
bound
out
xor
gs
mov
jbe
out
cmp
fwait
and
sbb
jo
xchg
and
jo
rol
es
inc
es
out
test
aaa
push
es
imul
imul
cmp
outsl
inc
lcall
or
push
je
inc
pop
push
xor
fistpl
mov
pop
das
push
imul
loop
dec
cs
add
cmpsl
add
push
xor
and
xlat
mov
outsl
sbb
xchg
call
xlat
adc
enter
adc
sahf
aad
into
outsb
insb
sbb
jmp
sub
xor
sbb
sbb
add
add
push
xor
add
cmp
adc
push
jmp
adc
pushf
movl
iret
dec
inc
xchg
rorl
xchg
into
mov
and
stc
and
xorb
fcomps
sbb
pusha
js
xor
out
lods
or
mov
aas
inc
es
inc
push
and
aaa
pop
scas
mov
push
data16
jmp
call
mov
je
mov
push
call
movsl
je
inc
movb
add
sti
test
dec
jmp
mov
xor
je
or
shll
sbb
rcrb
lahf
and
cmp
or
cmpsb
sub
in
pop
adc
pop
ss
or
xchg
sub
mov
add
aaa
inc
mov
popa
or
push
inc
sub
sbb
cmp
and
loopne
mov
testb
jl
mov
dec
addl
or
jmp
mov
testb
xor
imul
push
mov
add
jp
xchg
in
into
adc
or
add
sbb
out
test
adc
xchg
cmc
mov
xor
sbb
push
xor
sbb
inc
test
sbb
xchg
andl
std
insb
mov
sub
cli
mov
push
xor
and
sub
popa
fwait
mov
sbb
cwtl
cmp
bound
imul
shll
subl
out
pop
pushw
shll
xchg
sub
push
push
xchg
fnstenv
ret
adc
jb
out
dec
add
add
pop
mov
pop
pop
std
sub
cmp
je
push
adc
add
add
dec
sub
cld
rol
and
cli
idiv
push
add
cmp
push
movb
into
lea
add
add
lods
dec
xchg
mov
xor
xor
sub
push
or
adc
adc
call
mov
xchg
or
clc
pop
adc
incl
adc
daa
mov
xorl
cmp
movsb
mov
mov
sub
fildl
pushf
or
sbb
adc
pushf
jmp
imul
push
push
jo
mov
and
adc
xor
repz
push
ds
fs
fldenv
jg
lock
sbb
push
inc
mov
shl
sub
cmp
insl
and
mov
loope
cs
push
mov
in
out
xchg
fbstp
int
pop
sub
jl
mov
mov
sbb
aas
xchg
pushf
enter
cmpsb
movsl
jne
in
pop
adc
xchg
fmull
or
jmp
inc
enter
mov
in
arpl
sub
mov
add
sbbl
mov
mov
adc
jne
mov
jns
mull
mov
push
es
sbb
mov
add
pop
cmp
cld
mov
dec
fcmovnbe
or
add
pushf
dec
shl
adc
rorb
cld
jnp
ss
xor
ljmp
pop
inc
adc
test
movsb
xlat
test
xchg
fwait
aaa
push
rorl
fimull
add
pop
popf
pop
add
push
call
aad
aaa
adc
xchg
mov
or
movsl
pusha
cmpsl
mov
sub
sub
jb
adc
movsb
sub
pop
xor
sub
mov
fwait
add
add
lods
mov
mov
roll
ds
and
push
mov
loope
sub
push
xorb
loope
sti
and
inc
insb
test
inc
popa
add
cmp
mov
loopne
adc
inc
sbb
sbb
sbb
lea
add
push
rclb
adc
push
outsb
dec
sbb
adc
leave
and
dec
jne
iret
or
sub
inc
push
mov
adc
notl
jb
mov
or
jge
sbb
shlb
lods
cmp
jge
inc
lock
incl
inc
adc
rolb
icebp
sub
mov
mov
xor
inc
adc
push
out
scas
add
int3
inc
ret
or
add
sbb
or
popf
sub
dec
jle
pop
sub
cmp
or
mov
add
xchg
add
mov
outsb
jne
push
inc
and
fisubrl
outsl
adc
push
rol
pop
add
jge
les
sub
and
jnp
and
pushf
dec
push
adc
test
test
dec
push
out
pop
or
testl
jmp
std
or
inc
jns
dec
xchg
mov
insb
data16
inc
pop
dec
cmpl
fs
jp
cmp
mov
shrb
into
push
repz
pop
sub
push
aas
das
ret
jnp
lods
or
push
dec
es
pandn
add
add
test
aaa
push
sbb
xchg
jge
mov
sub
scas
inc
sub
xchg
daa
dec
sub
sbb
or
ret
imul
pop
inc
movsb
scas
gs
xor
add
inc
or
xor
sub
mov
mov
imul
shlb
dec
mov
xchg
addr16
sbb
cmpsb
movl
pop
dec
movsl
dec
jl
bound
inc
fwait
or
cmp
xchg
pusha
mov
xchg
cltd
clc
test
push
add
sub
mov
cmpb
pop
and
cmp
outsb
sbb
xchg
sbb
mov
ficoml
cmp
sbb
lds
push
pop
jge
mov
setne
jg
orb
mov
mov
adc
call
sub
inc
fsubrl
add
mov
push
lock
mov
int
jae
pop
push
orb
sbb
mov
loope
adc
and
je
xor
mov
mov
add
cmp
inc
and
addr16
shlb
mov
add
push
adc
bound
jg
inc
cmp
mov
jne
les
dec
pop
cmc
or
cmp
or
decb
mov
rcl
movsb
sub
push
incl
divl
adc
pop
mull
inc
dec
adc
sbb
movups
fbstp
mov
sbb
and
jo
push
pushw
mov
jne
addb
add
ljmp
out
pop
mov
call
fdivrs
mov
aas
jmp
cmp
mov
into
jle
cmp
mov
add
xchg
cs
lds
std
add
fdivl
sub
and
out
js
imul
push
add
aam
or
out
dec
add
aam
mov
mov
and
bound
inc
jbe
dec
popf
lret
cmp
inc
xchg
test
pusha
pop
sbbb
nop
cli
sbb
mov
jl
or
lds
push
or
adc
mov
test
push
test
dec
jg
rolb
fbld
je
mov
or
fildl
dec
push
sbb
jne
and
in
push
scas
movsb
and
cmpsb
sbb
loop
int
jge
mov
imul
insb
sbb
adc
lds
inc
data16
pushl
add
and
pop
je
das
mov
push
in
out
lods
xor
pop
mov
sbb
in
xor
cwtl
sbb
mov
insb
adc
cld
push
inc
orb
rep
mov
push
add
inc
lret
push
or
clc
mov
movsb
lea
sbb
mov
cmpl
movsl
fwait
xor
bndstx
ja
roll
insb
mov
jmp
mov
add
dec
or
rol
pop
cmpb
mov
jb
jecxz
add
ja
mov
ret
sub
lahf
add
mov
mov
movlps
jge
cmp
pop
je
pop
fnsetpm(287
dec
mov
add
pop
xor
or
sbb
mov
cmp
mov
push
xchg
out
add
add
adc
add
mov
or
pop
es
push
iret
xor
add
pushf
push
push
loopne
lret
ds
pop
call
push
adc
mov
mov
cmpb
sahf
das
clc
ja
jb
add
add
call
out
pop
mov
or
stos
sbb
jmp
test
fnstsw
push
adc
or
add
rolb
adc
bound
sbb
mov
and
push
adc
mov
fwait
mov
lods
bound
stos
pop
iret
daa
cli
fists
xor
shlb
aaa
adc
fwait
js
stos
fldt
fisubs
js
mov
dec
or
pop
call
ficomps
push
pop
xlat
or
insb
sub
and
xor
sti
add
repnz
pop
adc
pop
xor
push
inc
jo
mov
push
jge
in
fwait
loop
jle
inc
cmp
cmp
pop
push
xor
sti
cmp
xlat
or
sub
push
test
into
jg
dec
or
lods
cmp
mov
clc
jo
sub
sub
jno
push
fldcw
in
xlat
sbbb
and
test
jo
dec
cwtl
inc
into
scas
ss
mov
xchg
les
dec
mov
inc
addl
loopne
cmp
outsl
cmc
mov
mov
in
sbb
enter
out
dec
bound
inc
jecxz
inc
cmpsl
or
sbb
or
lods
rorl
xor
ja
adc
pop
pop
lds
mov
mov
sbb
adcb
in
daa
shrb
add
sub
enter
xchg
push
sbb
insb
push
inc
or
sub
lods
pop
ss
lret
and
test
sahf
int3
or
or
cwtl
outsb
xor
jmp
mov
xor
and
or
push
mov
aaa
aad
or
sbb
xchg
sbb
sub
adc
lret
je
adc
or
movsl
xor
jbe
rolb
fs
add
mov
nop
mov
cmp
pop
scas
jge
add
adc
or
sbb
das
inc
lea
outsb
pop
mov
int
xchg
in
lods
jo
dec
mov
test
testb
pop
or
pushl
out
add
aam
jecxz
cld
mov
daa
ds
inc
dec
cmp
jne
jb
mov
rclb
mov
jno
adc
mov
mov
adc
add
call
adc
push
adc
shll
cmc
mov
lods
cmp
cmpsb
ret
inc
add
xchg
mov
gs
daa
mov
cmp
jo
or
add
xchg
inc
jp
lock
mov
adc
mov
sbb
sti
jo
loope
mov
adc
xchg
cmp
xor
xchg
lret
iret
lods
pop
or
es
addl
pop
lock
test
and
inc
lcall
lock
icebp
in
call
lods
pop
jo
sbbl
mov
hlt
mov
sbb
enter
int
push
shl
dec
cwtl
pop
mov
dec
pop
add
mov
sarb
add
and
adc
pop
fiaddl
fcmovnb
pop
or
dec
mov
popa
sub
mov
loope
leave
data16
or
inc
lods
insl
stos
mov
jg
push
push
inc
dec
mov
xor
and
cmc
outsb
sbb
ret
in
mov
ret
pop
fnstcw
mov
fnsave
jns
fdivp
adc
cmp
aas
arpl
std
repz
sub
lea
cmp
scas
insb
push
lea
and
fbstp
jp
js
sub
imul
into
hlt
adc
rolb
cs
jo
test
cli
enter
ret
inc
add
push
in
and
in
rcll
lret
stc
jne
call
pop
fs
repz
cmp
pop
push
arpl
add
iret
mov
jmp
pop
adc
push
movsb
pop
xlat
mov
inc
add
data16
fildll
jmp
push
fdivs
ret
sbb
push
jmp
das
xorb
das
pushf
jnp
mov
jge
mov
cmp
add
fs
pop
pop
scas
cmpsl
or
lea
rcrb
xor
clc
and
or
pusha
dec
fisttpl
mov
jmp
or
clc
mov
pop
sti
pop
or
xchg
lock
xlat
daa
jmp
mov
cmp
xchg
fisubs
jns
test
sbb
fstps
sub
add
insb
add
inc
ds
fsubs
inc
adc
or
cmp
adc
jbe
andb
js
mov
add
sub
lds
cld
inc
jo
ret
xchg
aaa
or
add
inc
push
sub
fdivrl
aas
push
push
lods
int
stos
pop
sbb
push
add
mov
mov
mov
cmp
adc
ja
jns
cmpl
test
int3
push
lock
sahf
fcomip
jmp
pop
inc
shll
sub
jmp
adc
adcb
or
fadds
sub
pop
iret
bound
pop
lea
icebp
mov
pop
add
jle
fildl
cmp
fisttpll
ret
call
or
add
cmp
add
pop
add
mov
cmpb
movsb
outsb
sahf
pop
sub
jno
pushl
test
insl
imul
pusha
and
pop
mov
dec
adc
lcall
daa
add
loope
out
mov
ret
or
popa
lods
jns
cmc
pop
adc
jecxz
inc
adc
dec
add
mov
cmc
dec
hlt
faddl
or
clc
adc
je
imul
mov
jae
dec
pop
sbb
or
roll
sbb
sbb
daa
push
xor
mov
jae
outsb
stos
sti
xlat
in
mov
xor
inc
cmpsl
fistps
mov
addb
in
fimuls
sub
pop
add
movsb
xor
sbb
jb
adcb
mov
pop
mov
ret
sub
lds
cmpsb
lahf
int3
sbb
add
insl
out
adc
test
sbb
adc
shlb
xor
jae
jmp
aas
cwtl
subb
add
pop
out
xor
adc
or
sbb
insb
jle
insl
test
aas
xorb
out
rorb
xorb
mov
mov
inc
pusha
gs
add
pusha
lahf
or
inc
jns
orl
pop
bound
lea
nop
addl
sub
dec
outsl
and
sub
inc
and
into
xchg
dec
outsb
pop
and
insb
jns
shrb
cs
int3
and
ss
insl
mov
or
mov
inc
mov
jb
or
cmpsl
or
dec
imul
add
jbe
and
push
shl
or
movsl
xlat
fdivl
dec
cs
rorl
or
stc
add
sub
pop
insb
inc
pop
cwtl
insl
sarb
or
push
and
or
mov
add
jnp
int
sbb
cmp
je
outsl
and
mov
push
pop
xchg
push
inc
jbe
push
or
xor
xor
or
mov
mov
and
sti
push
xchg
icebp
or
dec
sub
push
sub
dec
dec
jecxz
add
inc
add
push
pop
outsl
dec
sub
sub
cmpsl
cltd
sbb
and
outsb
xchg
add
pop
insb
mov
pushf
xchg
les
lods
pop
insl
loope
push
mov
xor
add
pop
xor
out
frstor
test
cmp
inc
sbb
je
mov
addb
push
xchg
inc
lds
dec
sub
sbb
out
ja
testl
pop
and
iret
or
pop
leave
test
lods
jp
rorl
pop
xor
testl
adc
sti
push
add
mov
or
add
pop
enter
sarb
rcrb
push
sbb
enter
push
test
pusha
inc
js
mov
pop
or
pusha
ffree
jb
mov
and
pop
repnz
push
xchg
das
clc
adc
rol
xchg
dec
mov
pop
pushf
and
inc
xchg
or
fsubrs
divl
pop
enter
dec
daa
movsb
xchg
popa
push
xchg
xor
and
mov
and
sub
and
lods
push
and
inc
pop
out
inc
or
push
inc
jecxz
dec
mov
and
sub
mov
cs
cmp
aaa
fmul
dec
push
cs
or
movsl
in
pop
mov
shlb
pop
dec
pop
fs
shl
pop
push
movsb
imul
sub
add
adc
clc
aaa
adc
push
jb
add
rcr
test
mov
xchg
pop
rorl
imul
sub
adc
or
movsb
pop
add
push
and
daa
and
mov
sub
inc
cmp
inc
dec
pop
bound
fisubrl
pop
xor
nop
mov
adcb
sub
adcb
outsl
outsb
or
inc
add
xor
sub
cmp
into
dec
pop
sbbb
leave
add
cmp
andb
add
out
adc
push
add
or
andb
aas
add
pop
push
lds
dec
popa
push
xor
adc
sub
pop
xor
call
push
dec
in
mov
push
cs
outsb
fbstp
push
xor
fs
outsb
mull
jo,pn
or
mov
ja
pop
push
or
xchg
mov
and
cs
lea
pop
movsb
pop
jg
adc
hlt
add
aas
or
jnp
add
insl
mov
sbb
jg
dec
lar
xchg
adc
push
and
mov
pop
jle
or
inc
and
cmp
test
or
insl
aad
sbb
or
adc
rorb
and
mov
or
and
or
je
ret
sbb
pusha
mov
es
daa
aaa
das
push
push
mov
lea
addr16
pop
push
inc
mov
inc
fdivs
sbb
mov
inc
arpl
cwtl
push
inc
ret
jno
por
movsb
xor
push
xchg
sub
sbb
jp
xchg
roll
inc
adc
nop
push
add
pop
mov
jno
sub
push
and
dec
cmpsb
xor
fcmovb
dec
dec
pop
sbb
jo
ret
pusha
jae
xchg
add
push
pop
push
inc
loop
inc
adc
mov
push
add
leave
nop
test
bnd
mov
inc
cmp
and
xchg
or
add
rcl
cmc
dec
loopne
add
mov
xor
in
push
adc
popa
adc
push
addl
pop
dec
sub
cwtl
dec
mov
add
or
rol
pusha
mov
sub
add
push
div
cmpsb
clc
inc
sbb
dec
push
dec
push
outsl
pop
pusha
loopne
out
dec
in
inc
cmp
insb
setb
pushf
pushf
mov
push
cmp
dec
inc
sahf
pushf
out
push
dec
xchg
mov
adc
fdivrs
inc
frstor
and
xor
add
fs
cmp
cmp
cwtl
inc
leave
inc
add
mov
popa
and
xchg
popa
stos
push
inc
xor
nop
dec
arpl
xlat
jecxz
add
mov
jb
xorb
or
movsb
inc
bnd
add
into
inc
dec
add
pusha
int3
rol
clc
adc
insl
push
xor
mov
mov
jo
xor
rorl
dec
sbb
pop
dec
arpl
push
add
stc
dec
add
int3
bound
mov
aaa
or
imul
jae
sbb
fsts
sub
and
jmp
into
inc
adc
pop
cli
jns
or
lahf
movsb
shrb
nop
dec
xor
add
insb
mov
add
rcll
add
dec
popa
shlb
sub
inc
mov
leave
cwtl
add
ss
iret
and
dec
call
inc
pusha
pop
dec
add
inc
in
sub
pop
xor
and
xchg
add
adc
add
andb
pop
ss
fdivs
xor
ret
imul
mov
test
and
sbb
add
push
pusha
jecxz
icebp
xchg
and
das
sub
sbb
add
cltd
cmp
lret
mov
arpl
rorb
iret
pop
cwtl
xor
add
add
xchg
mov
mov
add
xor
cmp
fcoms
sub
orl
adc
inc
inc
xor
add
add
hlt
add
aas
loope
pop
inc
daa
xor
sbb
test
adc
pop
test
pop
adc
std
int
icebp
add
jecxz
add
inc
mov
pop
loop
pop
sti
stos
pop
sbb
pop
jb
xor
pop
movaps
cmp
jb
pop
mov
mov
es
cmovae
add
sbb
dec
inc
sbb
dec
xor
insb
adc
ss
add
and
sbb
inc
lods
gs
insb
dec
or
jne
dec
je
andb
adc
into
add
pop
je
adc
fdivrl
add
xchg
push
outsb
insb
ja
or
push
mov
or
mov
mov
incl
out
movsl
arpl
popa
or
and
add
daa
das
ljmp
hlt
lods
aas
jl
adc
mov
pop
mov
in
dec
lock
xor
pop
sti
aaa
icebp
ljmp
pop
cmp
out
xlat
sbb
jb
adc
pop
jp
sbb
jnp
pop
or
scas
jmp
adc
pop
out
sbb
sbb
mov
cs
sbb
or
nop
mov
mov
mov
xor
ret
cmp
push
sbb
insl
dec
ljmp
inc
lea
xor
mov
mov
add
add
enter
rolb
xor
mov
fcoml
inc
lds
adc
and
xchg
inc
mov
adc
add
out
adc
push
sbb
pop
sub
idivb
push
xor
inc
push
pushf
pop
push
sbbl
or
mov
sub
outsl
xor
aaa
and
mov
pop
inc
add
inc
loop
sub
dec
loope
cmp
std
cmp
pop
add
addr16
adc
addr16
dec
leave
inc
jecxz
cmp
and
add
adc
or
loopne
or
xor
inc
roll
pop
daa
adc
jo
arpl
out
popa
sbb
repz
jb
mov
das
sub
cmp
fwait
sbb
xchg
push
pop
sbb
mov
lock
das
int3
addr16
jno
mov
pop
push
shll
xor
shrl
out
inc
jne
pusha
adc
test
pop
dec
sti
into
andps
xchg
pushf
mov
dec
xorb
jae
stos
mov
xor
push
outsl
push
mov
or
pop
stos
movsb
push
mov
dec
cmpsb
lea
out
push
push
shlb
xor
bound
loop
mov
xor
jl
sbb
adc
scas
outsl
or
and
divb
sbb
or
mov
jae
bound
pusha
and
cmc
idivb
inc
daa
shrl
bound
or
and
bound
cs
or
aad
unpckhps
orb
in
lea
nop
lea
sub
out
sbb
add
or
call
outsl
pop
xor
pushf
lahf
pop
xorl
bound
sbb
icebp
mov
xor
inc
pop
push
shlb
int
cmpsb
or
fimuls
repnz
sbb
testb
aam
push
fcomp
nop
or
shl
test
sub
inc
or
cltd
mov
sbb
aaa
or
aaa
push
sub
push
mov
jo
sbb
pop
mov
adc
inc
mov
lods
pop
and
popa
je
lea
or
mov
xlat
shlb
cmc
nop/reserved
fcmovnu
das
or
cld
jns
das
sahf
packuswb
out
shrl
or
pop
xor
pop
addr16
xchg
pop
pushf
std
cld
sti
jns
roll
cmp
inc
push
mov
or
inc
sbb
fsubrl
lods
inc
mov
stos
add
add
sbb
cltd
enter
in
add
and
mov
xor
inc
jg
mov
mov
push
test
add
or
popa
push
cwtl
lods
mov
lea
jmp
int3
mov
push
dec
pop
sbb
or
add
jo
xor
aad
xchg
add
negb
ret
mov
repz
sbb
add
pusha
mov
addb
sub
mov
mov
sub
push
sub
pop
orb
push
movsl
push
mov
inc
push
xchg
mov
mov
imul
push
push
sbb
and
fsubl
adc
jbe
aaa
sbb
pop
das
sbbl
xchg
inc
pop
pop
lcall
adc
shlb
mov
pop
dec
fiaddl
mov
movsl
or
lods
shr
mov
icebp
xor
mov
push
pop
add
sahf
fbstp
call
sub
je
xor
pushf
jae
push
shrb
loope
sahf
cmpsb
jo
cmp
cmpl
add
xor
fisttpll
and
fs
imul
sti
push
push
jne
adc
rclb
add
cmpl
pop
mov
mov
jge
mov
pop
xchg
inc
inc
into
inc
scas
mov
fs
cmp
ss
rolb
imul
das
push
imul
mov
or
repz
popa
and
push
inc
test
adc
push
pushf
sub
cmp
dec
pop
popa
mov
jnp
int
inc
jnp
mov
ficoml
cs
icebp
ja
in
ret
push
pop
adc
add
pop
out
ljmp
sub
push
out
fsubrs
popf
js
and
add
dec
cld
push
or
and
mov
das
xor
xor
outsl
or
sbb
clc
pop
fsubs
push
and
es
repz
mov
les
hlt
in
lock
xor
daa
push
jbe
pushf
push
int3
and
shrl
jo
pop
subb
sub
mov
push
cwtl
hlt
add
fistpll
ja
cmpsb
test
push
mov
mov
mov
mov
dec
and
loope
or
or
or
mov
popa
xchg
mov
dec
mov
push
or
adc
add
scas
pop
dec
repz
xor
sub
push
sbb
sub
dec
imul
testl
push
movsb
fs
andl
or
xchg
pop
mov
inc
dec
dec
test
add
outsl
adc
outsl
mov
test
popf
jmp
add
outsl
jge
jo
aam
mov
pop
movsl
psllw
xchg
dec
js
jno
push
push
lret
mov
adc
das
aad
or
pop
or
cwtl
jb
sbbl
unpckhps
ficoml
inc
jae
pop
add
add
ret
lret
pop
sbb
sysexit
sub
sbb
je
sbb
jbe
mov
inc
push
icebp
nopl
nopl
sub
sbb
and
jbe
sarl
add
cmpsb
scas
xchg
or
es
cmp
sbb
cli
inc
pop
dec
xchg
jne
rolb
fnclex
push
jecxz
out
rcl
and
test
es
add
call
les
cvtps2pi
mov
jnp
shrl
add
cmp
or
loopne
fadds
pushf
insl
inc
xchg
test
dec
xor
add
dec
mov
adc
mov
das
shl
in
xchg
ss
mov
sbb
and
push
in
mov
jns
dec
lds
xchg
or
push
mov
dec
mov
and
ljmp
adc
xor
jo
add
iret
and
rcll
popa
xor
bound
xor
test
mov
push
jecxz
rcl
jle
xor
add
pusha
and
cmp
jg
test
cmp
das
imul
pusha
ds
or
push
push
movsl
add
or
mov
push
test
mov
sub
push
test
stc
test
and
push
sub
dec
outsl
cmc
es
ret
clc
mulb
and
push
filds
or
push
sahf
jnp
or
push
adc
dec
mov
sbb
sahf
push
in
aad
stos
sbb
xchg
sbb
or
sbb
js
dec
inc
insl
xor
lock
inc
or
mov
mov
stos
popa
xor
dec
cmp
sbb
or
mov
dec
aas
ja
push
sbb
mov
cwtl
repz
outsb
add
cmp
aam
std
add
inc
je
mov
ja
jne
sub
and
out
outsl
mov
pushf
xchg
sbb
mov
inc
test
add
mov
mov
or
xchg
lret
xchg
xchg
xlat
mull
js
xchg
xchg
xchg
xchg
insl
nop
mov
xchg
xchg
xchg
lret
add
dec
xchg
mov
xor
push
orb
loopne
call
dec
inc
adc
movsl
mov
sub
ficoml
arpl
pop
ljmp
cmp
movq
pushf
ret
mov
dec
jo
or
fs
mov
and
inc
in
ss
fs
aas
xchg
xlat
lea
pop
xchg
mov
cwtl
xchg
dec
and
cwtl
xor
mov
push
cmp
and
mov
mov
mov
jno
xchg
sub
test
incl
pop
or
sar
pop
adc
or
push
cmp
or
inc
cmpsl
cmovge
xor
mov
inc
dec
dec
cmp
push
or
lahf
movsl
testl
or
mov
aaa
imulb
in
ret
out
inc
dec
adc
jmp
add
orb
mov
inc
popa
pop
pop
inc
push
sbb
jnp
fwait
jne
jl
fisttps
pop
inc
push
subl
jmp
ds
sub
pop
pusha
inc
sbb
clc
inc
sub
jbe
hlt
mov
push
call
cmp
cmpxchg
aas
fs
movups
cmp
mov
inc
maskmovq
jnp
js
xchg
push
pop
data16
sahf
mov
mov
adc
leave
nop
pop
xchg
push
xor
cmp
add
cmp
cmp
jae
notl
and
ret
add
mov
mov
outsb
in
fisttpll
adc
dec
mov
mov
mov
ja
xchg
ja
verw
jl
jge
dec
jge
fidivrl
cmovle
pcmpgtd
in
fstpl
movups
inc
adc
jbe
add
daa
add
adc
add
add
std
lcall
add
xchg
lahf
test
add
xor
sarl
sub
add
adc
add
movsb
add
cmp
inc
pop
dec
adc
cs
iret
mov
iret
in
sbb
ss
xchg
or
jmp
mov
and
dec
insb
in
inc
aas
lcall
sbb
insb
add
ds
add
sbb
xchg
add
add
aad
xor
jecxz
add
sbb
push
mov
jecxz
cs
add
and
shll
icebp
sbb
movsl
or
push
mov
dec
jp
adc
xchg
scas
adc
xor
cmp
xchg
pushf
or
xchg
in
and
sbb
bound
jge
les
push
lahf
imul
js
inc
out
lea
add
sbb
add
test
sbb
dec
fiadds
mov
dec
adc
mov
dec
push
xlat
xchg
das
dec
xorb
mov
cmpsb
fmul
sub
inc
daa
ret
invd
inc
sahf
push
and
jge
fcoms
mov
xchg
add
xchg
xorl
arpl
xchg
xchg
xchg
daa
cmp
leave
enter
test
in
arpl
test
push
xchg
mov
push
or
movsl
or
pop
and
add
mov
test
test
and
mov
xchg
in
imul
mov
xor
addl
adc
or
sub
xchg
in
push
pop
fiadds
xchg
cld
sahf
adc
cmp
sbb
stos
sbb
xchg
xchg
in
inc
mov
inc
out
stos
inc
add
or
mov
jmp
mov
dec
aas
cwtl
and
or
pop
xchg
jo
fists
mov
sbb
dec
jl
sbb
xorb
add
jg
and
adc
adc
adcl
pop
inc
or
test
stos
add
jns
push
cmpsb
rdmsr
add
sub
sbb
push
movsl
inc
pushf
jae
fisubrl
dec
movsb
adc
js
rorl
dec
sub
cmc
pop
inc
lret
inc
cwtl
jb
pop
dec
inc
xor
push
cmp
pop
and
mov
imul
dec
incb
lods
daa
lods
mov
aad
add
xor
mov
adc
add
out
xor
sub
out
cmc
push
dec
or
or
je
add
fwait
ljmp
nop
cmp
or
adc
cld
inc
xchg
rorb
push
fs
push
bswap
mov
adc
mov
sbb
dec
pusha
mov
gs
test
add
insl
aad
and
push
mov
daa
mov
dec
push
or
push
cmpl
inc
testl
dec
daa
clc
outsb
add
insb
mov
and
pop
mov
mov
aas
mov
rorl
cs
mov
lcall
dec
pop
mov
and
int
jno
loopne
inc
sub
shlb
ja
and
pop
call
stos
add
out
test
mov
out
addr16
sub
mov
lods
push
add
mov
nop
sbb
mov
mov
and
inc
mov
ss
push
add
icebp
outsb
das
outsl
push
adc
cwtl
xchg
push
inc
mov
adc
or
and
add
stc
sarl
nopl
or
movsb
dec
arpl
loopne
popl
jecxz
inc
imul
out
add
add
imul
enter
adc
lea
push
loope
repz
cltd
sub
add
push
sbb
icebp
mov
inc
push
ret
lcall
popa
add
lds
in
mov
lea
dec
mov
insl
cmp
idivl
repnz
push
add
testl
or
xorb
xor
pop
out
orl
lahf
xor
out
push
adc
pop
adc
inc
enter
lea
roll
cmpl
rolb
fdivs
push
ja
mov
mov
push
xchg
inc
subb
push
mov
in
lcall
cld
push
nop
pop
out
mulb
jno
movsl
push
sbb
mov
push
subl
rorb
xchg
push
inc
mov
cmp
sub
push
add
fwait
jecxz
mov
decl
cmp
jl
dec
xorb
push
or
or
dec
push
push
clc
jp
push
enter
dec
adc
push
pop
icebp
lds
push
jbe
mov
ret
inc
cmp
popf
lods
jno
ret
mov
outsl
loope
pop
sub
mov
or
pop
scas
call
pop
icebp
push
adc
xchg
push
es
das
jmp
sbb
fsubl
inc
pop
inc
es
test
or
sbb
clc
loope
incl
dec
inc
insb
outsl
jg
pop
push
sti
sti
nop
xlat
push
xchg
cmp
sbb
lret
xchg
mov
push
push
jl
popf
sti
fistps
pop
push
jno
mov
aad
test
mov
or
and
mov
add
mov
inc
mov
mov
push
je
or
pop
mov
jno
lahf
dec
bound
xchg
shl
xlat
pop
jae
push
mov
adc
xchg
pop
and
dec
stc
sub
scas
hlt
neg
sbb
in
mov
gs
pop
push
lods
pop
xor
add
in
or
or
pop
jb
adc
and
jb
sbb
add
pop
and
or
lret
les
inc
pop
xor
adc
xchg
lahf
out
push
out
inc
adc
xchg
xchg
cmp
repz
mov
int
in
iret
repz
xor
bound
aam
outsb
arpl
mov
mov
and
loope
jl
pop
xchg
leave
push
sbb
les
into
loopne
repz
loope
in
jecxz
jns
dec
clc
add
adc
in
ret
daa
adc
mov
aad
sub
std
fcoms
and
xchg
movswl
mov
dec
xchg
ja
lea
jecxz
xchg
xchg
jecxz
stc
sti
mov
movsb
xchg
cwtl
pusha
fildll
sub
push
out
dec
jl
rorl
fistpll
mov
mov
lcall
cmp
dec
fistl
dec
dec
xchg
lea
hlt
pop
sbb
inc
or
inc
mov
jbe
shll
xchg
adc
je
cmpb
sbb
push
dec
rclb
and
lea
jge
add
loopne
inc
cmp
pop
fildl
insb
and
jmp
mov
adc
ja
and
push
inc
sbb
icebp
add
inc
mov
pop
and
or
in
dec
push
pop
cmp
hlt
jae
add
popa
stos
add
lea
push
inc
jo
ss
mov
stc
mov
mov
adcb
sub
xor
dec
adc
ret
inc
es
adc
jnp
add
dec
lahf
pop
add
or
or
addr16
and
mov
xchg
push
popa
and
add
sbb
sub
xchg
loope
or
pop
les
mov
add
lret
pushl
xor
pop
jae
lahf
xchg
mov
insl
js
add
pop
mov
and
lcall
popl
movsl
shlb
add
or
nop
lods
data16
add
and
mov
cltd
and
or
push
int
sbb
add
xor
xor
mov
xchg
add
lcall
xor
push
int3
mulb
mov
clc
adc
xor
clc
cltd
iret
sbb
fwait
popf
addl
rcrb
sbb
mov
mov
shlb
pop
pop
or
dec
shld
inc
dec
outsb
xorl
xstore-rng
cmpsl
add
xor
test
dec
xchg
sub
fcom
sbb
in
or
into
daa
sbb
or
addr16
in
or
adc
ds
gs
cltd
jmp
imul
les
and
mov
add
sbb
rolb
xor
jnp
cli
push
jbe
sbb
mov
or
cmp
or
cltd
addr16
xor
movsl
sarb
aaa
mov
or
call
pop
ds
add
pop
jno
out
push
dec
imul
xchg
xor
mov
stc
mov
push
jo
add
mov
or
jb
or
and
cmp
jne
sbb
cld
or
xchg
push
inc
push
dec
fs
sub
ja
outsl
dec
mov
or
addb
or
adc
sbb
sub
or
cs
fwait
dec
sub
aaa
dec
sbb
sub
fistpl
xchg
sub
add
sbb
ret
lcall
shrb
inc
jg
incl
pop
sbb
inc
int
dec
addb
or
mov
push
mov
int3
es
sahf
das
les
sub
movb
into
enter
xor
pop
push
add
jns
xor
and
inc
fcoms
adc
or
ficoms
shlb
cmp
outsl
je
jmp
fsubl
sbb
dec
and
pop
cli
adc
sub
mov
and
clc
mov
inc
sub
jb
or
add
sahf
adc
cmp
lret
setg
adcl
inc
add
push
enter
push
mov
das
pop
jmp
mov
popl
in
cli
xor
les
mov
push
dec
out
sbb
pop
sub
jnp
mov
adc
cmp
inc
pushf
icebp
arpl
lds
shlb
sub
cld
loop
add
adc
out
inc
mov
in
push
pushf
pop
sub
xor
push
adc
xor
add
mov
or
sub
popf
stos
shrl
jmp
or
aad
mov
and
xchg
div
inc
and
adc
pop
push
inc
pop
cmp
adc
cmp
xlat
andps
int
ss
or
push
int3
js
loopne
addr16
add
add
aaa
inc
xor
dec
fildl
inc
or
dec
or
mov
sub
pop
lods
inc
pop
fwait
xchg
jb
add
ret
jmp
in
das
jae
out
ret
sbb
mov
rcll
outsb
or
cmp
or
or
pop
shrl
add
dec
nop
sub
push
push
pop
inc
add
adcl
xchg
pop
mov
inc
sbb
sub
in
cs
testl
aad
mov
mov
imul
sbb
scas
dec
lods
adc
mov
or
push
dec
insb
push
rcrl
inc
push
or
insb
pop
xchg
in
mov
xlat
jae
xor
or
cmp
test
inc
movsb
cmpsb
or
lea
inc
or
orl
mov
sbb
or
jbe
cltd
ja
adc
bnd
int3
movsb
sbb
stos
js
mov
adcb
add
cmp
mov
sub
push
pusha
inc
mov
cmp
aas
inc
push
cmp
mov
mov
jbe
test
pop
arpl
add
xor
iret
mov
add
xorb
imul
inc
add
movl
adc
and
cmpsl
add
hlt
cmpsb
dec
sbb
mov
test
xor
mov
pop
je
adc
inc
and
or
xchg
popa
cmp
cmpsl
inc
pop
or
je
sub
test
xchg
push
jo
sti
mov
adc
fmuls
xor
int
adc
or
sub
les
test
jae
add
mov
es
and
repnz
rolb
sub
lret
lods
jae
xor
rorl
mov
jbe
cmp
xchg
push
lea
xor
xchg
and
dec
sub
adc
add
sarb
pop
adc
cmp
movsb
pusha
or
pop
rcrl
es
sahf
idivb
jo
jne
in
mov
sbb
test
push
orb
js
insb
shlb
inc
sbb
lock
or
mov
aad
lock
stos
sbb
sbb
das
adc
and
orps
lret
std
add
btc
lods
in
lods
jb
jb
pop
movd
jb
aas
scas
jg
pushf
pushf
mov
inc
sahf
pushf
pushf
lods
loope
mov
pop
add
bound
pushf
int3
ficomps
sbb
dec
inc
sahf
pushf
in
mov
jge
adcl
mov
dec
dec
mov
shll
dec
mov
bound
add
mov
rorl
jno
ljmp
rorl
outsb
mov
or
cld
popa
sub
sub
push
ret
mov
sub
jne
lods
sbb
dec
aam
je
stos
not
pop
sub
adcb
lea
into
sbb
mov
ja
inc
pushw
fcoms
jmp
ljmp
sub
les
xlat
adc
stc
xor
push
cmp
dec
xchg
out
dec
dec
sub
dec
addr16
ficompl
test
push
push
out
mov
cmpsl
rcrl
leave
jge
fcoms
shlb
rorb
mov
addb
add
mov
mov
sbb
sub
sbb
mov
jp
call
mov
mov
inc
mov
adcb
mov
jo
inc
dec
jnp
mov
icebp
lods
and
imul
mov
push
dec
pop
and
mov
adc
inc
out
loop
ja
mov
mov
xorb
movsl
pop
fst
dec
push
movsl
push
push
cwtl
cld
les
adc
in
sub
push
js
xor
pop
icebp
orb
jmp
or
push
push
cltd
add
or
pop
or
mov
push
xor
inc
pushf
shl
xchg
add
xchg
xchg
sarb
aaa
test
es
pop
inc
cmp
lds
add
pop
adc
sub
add
pop
pop
je
sub
ret
movsl
test
pop
and
data16
mov
insb
pop
dec
push
sub
insb
mov
test
mov
lahf
ss
push
nop
adcb
xchg
jo
and
mov
add
add
das
adc
bnd
test
imul
sub
pop
pop
xchg
mov
repnz
xchg
pop
movsl
sbb
inc
or
xchg
test
xchg
lret
and
and
shll
sbb
aas
sub
mov
das
aaa
mov
inc
push
je
test
jbe
cmp
xor
arpl
cmp
push
insb
cmp
rcll
js
push
mov
jmp
pop
pandn
push
pop
jnp
push
pop
test
dec
jo
lods
test
push
inc
add
xchg
pop
daa
inc
mov
mov
push
sub
add
inc
pop
dec
scas
xlat
ret
iret
inc
or
sub
pusha
xor
mov
xchg
lahf
push
push
xchg
add
jmp
repz
pop
movsb
dec
mov
mov
adc
shrl
add
cmp
pusha
sub
enter
adc
aas
cmp
lock
sbb
adc
in
add
mov
punpcklbw
inc
xchg
xchg
rclb
test
out
out
ret
dec
xchg
inc
or
lods
adc
ret
lods
test
pop
push
xchg
or
mov
mov
stc
movsb
ss
mov
por
es
mov
jno
movsb
int
repz
or
mov
mov
push
push
sbb
mov
aaa
jno
jmp
in
leave
in
push
seto
btc
in
fs
adc
mov
inc
cmpb
mov
mov
std
ds
sahf
pushf
jecxz
mov
push
dec
outsl
ljmp
mov
push
mov
pop
xchg
or
pop
pop
pop
and
push
dec
add
out
addl
std
mov
mov
adc
and
adc
and
cmp
orb
jb
scas
popl
jno
adc
cld
xchg
mov
daa
jp
movzbl
jnp
xor
pop
js
imul
and
loopne
je
dec
sub
lock
or
mov
inc
lcall
shlb
repnz
pop
pop
fisubs
out
bndldx
sbb
cmpb
mov
add
fldl
or
jae
inc
mov
adc
fcomps
or
movsb
pop
cld
jbe
adc
subl
bnd
negb
add
mov
lret
loope
enter
inc
scas
add
test
cmp
inc
pushf
mov
js
enter
jmp
pushf
push
jns
add
out
fcom
filds
ret
shrl
popf
repz
xor
and
test
push
mov
inc
inc
call
roll
cmpsb
out
movsb
push
add
int
dec
jno
pop
aaa
ficomps
je
mov
cmc
lods
adc
fs
sbbb
and
sub
loope
or
and
mov
dec
push
mov
jnp
add
mov
sub
adc
popw
adc
mov
shlb
push
add
aas
adc
sbb
inc
mov
pop
dec
xchg
jae
sbb
sub
out
inc
xchg
lods
das
je
inc
mov
iret
leave
pop
test
xor
mov
adc
cwtl
test
sub
out
add
xchg
pop
dec
shll
lock
faddl
lods
pop
sbb
xlat
pop
in
bound
sar
clc
pop
fadd
add
xchg
adc
int3
rcrl
pusha
les
xor
pop
inc
cmpsb
push
or
xor
cmpsl
ret
repz
outsl
adc
sbb
stc
ss
cmp
add
nop
out
add
jg
mov
cmpb
cmp
popa
sub
dec
or
int
xchg
inc
pusha
pop
adc
dec
sub
push
inc
mov
lods
sub
inc
push
xchg
gs
jp
fs
fimuls
sbb
push
movsb
lock
mov
js
sbb
subb
lods
add
sbb
sbb
enter
and
mov
repz
sbb
lods
or
adc
lea
adc
pusha
mov
pop
notl
mov
idivb
clc
lret
les
lds
testb
add
jo
aas
loopne
inc
jl
or
inc
cs
in
loopne
hlt
aas
inc
and
stos
xchg
test
add
cld
xchg
mov
dec
push
jne
jo
xor
data16
or
lcall
repz
pop
ret
xchg
sub
shlb
cmpsb
mov
add
push
ljmp
std
xchg
inc
nop
pop
orb
outsb
jmp
sbb
cs
dec
pusha
or
push
fs
movmskps
out
cmp
push
test
xor
add
push
xchg
mov
inc
lahf
testl
cmp
push
sbb
cmovno
fwait
cmp
outsl
or
cmp
cmp
inc
xchg
add
mov
lret
dec
inc
sahf
xor
test
dec
pop
jmp
aam
and
into
shrl
adc
and
mov
jnp
mov
xor
adc
xchg
shrb
dec
push
repnz
or
xor
xor
sbb
mov
push
out
js
sahf
dec
adc
out
and
int3
sbb
andb
pop
jecxz
sub
scas
fmuls
lahf
les
inc
xor
dec
and
outsl
loopne
and
por
or
cmp
mov
push
and
ret
in
loopne
daa
enter
sbb
add
adc
pop
inc
pop
pop
dec
sub
out
ret
add
jge
les
adc
mov
xor
les
aam
dec
stos
mov
and
jl
lret
jne
inc
nop
xchg
leave
lock
cli
adc
subps
les
and
inc
sbbl
test
and
adc
add
lret
scas
mov
mov
push
xor
fsts
mov
push
jecxz
roll
cmp
add
add
pop
aaa
jbe
push
mov
inc
lahf
or
and
loopne
or
push
jo
in
dec
xchg
lods
notb
add
lret
gs
or
push
rorl
insl
clc
dec
pop
test
lock
pop
add
popf
mov
or
lret
pop
orl
int3
cmp
inc
inc
inc
pop
orb
sbbb
jo
and
cmp
mov
push
es
cmp
xor
sub
push
push
jmp
xor
push
add
lret
adc
xchg
outsb
into
xchg
adc
sbb
scas
and
hlt
pop
push
xor
dec
int
test
or
cmp
repnz
popa
int
push
inc
lds
inc
add
push
je
icebp
cmp
jns
cs
popf
lock
add
add
addb
or
dec
sbb
fcoml
outsl
pop
push
lock
adc
sbb
nop
imul
dec
jmp
mov
jo
adc
punpckldq
fstl
add
xor
arpl
out
cmc
and
adc
pop
int3
sbb
mov
or
jns
sub
push
or
in
nop
mov
iret
pop
sub
das
adc
sbb
adc
bound
insb
pushf
andl
int
adc
jo
xor
ja
loopne
xlat
decl
fnstcw
and
loope
xchg
pop
aam
jbe
xor
and
sub
out
push
xlat
mov
test
out
jns
add
out
iret
daa
dec
les
jl
mov
pop
aam
xor
or
daa
or
into
push
popa
js
js
scas
and
out
sub
xor
nop
iret
outsb
aaa
movsb
addl
jecxz
adc
pop
rol
testl
test
inc
mov
rcl
repz
fcmovu
adc
popa
push
outsl
push
jns
repz
pop
adcl
or
or
sub
loop
xor
sahf
popf
cmp
rorl
les
add
cmp
testb
rolb
inc
rcrl
ja
fiaddl
inc
outsb
jnp
cmp
int
rorl
push
mov
pop
negl
xlat
push
add
sub
push
or
aad
push
mov
daa
or
fists
or
add
fadds
lock
insl
xchg
add
push
popa
addr16
xor
lea
imul
mov
sbb
out
cmp
jecxz
rcrb
out
outsl
outsb
and
dec
cmp
jns
mov
add
inc
jbe
sub
push
adc
add
lahf
inc
or
fst
push
jae
cld
mov
pushl
push
cltd
mov
pop
or
cmovge
cmp
icebp
aad
bnd
dec
sbbl
icebp
incl
rcrb
jns
xlat
dec
loopne
loope
push
stos
out
and
add
ss
cltd
or
mov
dec
idiv
idiv
cmc
ljmp
and
mov
scas
mov
mov
repz
shr
lock
hlt
add
push
popf
divl
in
rolb
lods
aam
push
jg
cmp
sbb
inc
mov
add
inc
imul
rcl
pop
popa
jb
popf
inc
cwtl
shrl
fsubs
adc
or
push
cmp
or
xorb
test
or
ret
fiadds
jno
fistps
dec
pop
xchg
pusha
cltd
dec
push
add
mov
rolb
outsb
je
adc
sub
xor
add
sub
arpl
int3
push
sbb
mov
mov
fsubs
sahf
push
adc
xorb
insl
test
negb
loope
pop
xor
adc
mov
arpl
and
add
inc
out
sub
and
mov
sbb
rclb
pop
sub
test
out
test
mov
test
inc
dec
and
jle
or
pop
and
sub
fs
call
lcall
add
movl
scas
pop
test
loope
mov
faddl
push
push
pop
rorl
mov
and
jns
xor
xchg
in
cmp
sub
adc
pop
mov
leave
rorb
push
fisttps
jno
movsl
and
addr16
pop
xchg
add
and
and
or
or
sbb
or
xchg
xchg
lret
xchg
jecxz
fisubrl
add
mov
and
adcl
sub
or
pop
test
fadds
mov
push
cwtl
lock
push
xorb
adc
lods
push
gs
pop
icebp
sbb
dec
xor
dec
rorl
mov
in
call
pop
adc
jmp
bound
aaa
fistpl
enter
jp
clc
das
sbb
sbb
sahf
out
lcall
nop
fs
cmp
jns
mov
dec
pushf
add
xor
add
rolb
push
xchg
jge
adc
fcmovnb
add
sahf
fldt
sti
aad
sysret
bound
imul
sbb
in
stos
scas
bound
lods
subl
mov
fmull
rolb
pop
jne
insl
dec
cmc
mov
ds
pop
push
aaa
jae
sbb
test
bound
sub
inc
or
dec
add
xchg
or
cmp
addr16
or
les
add
cmpsl
fldl
mov
add
mov
fcompl
shll
in
cmp
fstpl
jnp
lret
test
sbb
dec
rclb
pop
jecxz,pt
movsb
roll
jl
adc
arpl
pop
xor
push
dec
fstpt
jno
clc
add
pop
jecxz
out
dec
out
add
push
ror
fiadds
sub
xchg
mov
jbe
xor
jmp
fbld
mov
adc
add
mov
adc
or
mov
add
fisubrl
jne
imul
jae
ret
add
in
sub
push
dec
imul
push
popa
add
jno
add
sbb
jns
dec
je
add
lock
push
das
mov
add
adc
jae
out
out
stos
pop
or
adc
jg
aad
add
push
lds
push
adc
pushf
fistpl
push
pop
loopne
or
inc
jl
mov
std
int
cmp
xor
popa
cmp
or
jl
adc
xchg
ds
pop
add
outsl
push
cwtl
inc
inc
inc
int
ss
adc
add
ret
push
jbe
imul
outsb
popf
dec
popa
jo
or
and
fwait
lea
mov
jns
loope
adc
add
sub
ja
xor
or
outsl
out
insl
fnstsw
je
imul
insl
fcmovb
outsl
add
test
push
test
or
push
push
add
adc
inc
sbb
mov
xor
mov
dec
inc
cmp
arpl
mov
add
mov
jge
bound
cwtl
push
mov
or
cmpl
jne
pushl
bound
and
test
std
add
push
ret
mov
fsubrp
ja
out
out
daa
and
das
mov
sbb
adc
aaa
loopne
cmpsl
sub
inc
sarb
add
jecxz
sub
nop
popa
sub
shlb
or
xchg
cs
in
stc
adc
add
jecxz
enter
testl
fimuls
sahf
pushf
fsubl
bsf
sub
dec
dec
dec
inc
push
jle
lcall
add
push
jl
add
add
adc
add
jnp
sti
dec
dec
adc
or
push
js
mov
inc
or
push
insl
jbe
sti
adc
inc
xor
add
jmp
sbb
jmp
sbb
js
mov
outsl
add
sbb
in
jns
dec
outsl
sbb
loopne
pop
add
ss
push
mov
push
int3
add
loop
cmp
lock
or
dec
sti
push
add
out
js
sbb
push
add
adc
xor
addr16
repnz
sub
xor
jb
push
outsb
jb
add
mov
jl
inc
mov
or
add
and
push
push
jg
dec
rcll
pop
icebp
adc
adcl
push
pop
adc
popf
push
push
xchg
sub
sarl
and
push
sbbb
and
cmp
arpl
out
jg
sbb
xlat
xchg
add
out
call
mov
divl
hlt
das
xchg
xchg
xchg
xchg
jmp
leave
leave
enter
mov
in
jmp
lds
mov
and
push
jmp
aad
dec
in
cltd
dec
imul
push
sbb
popf
adc
out
icebp
sub
pop
pop
push
add
push
adc
fistpll
repnz
xlat
mov
outsl
imull
testl
and
xchg
mov
and
jle
je
and
or
jno
add
adcl
push
pop
xchg
outsl
pop
hlt
mov
pop
and
fs
jmp
sbb
xor
ljmp
outsl
leave
in
mov
pushf
hlt
imul
loopne
pop
addr16
cltd
or
data16
xor
inc
push
stos
cmp
push
pop
add
insb
cmc
ljmp
pop
loope
or
mov
test
in
mov
cmp
sarb
inc
xor
xor
or
xchg
cmp
fldenv
loopne
xor
int
cmp
dec
inc
cmp
in
xorl
adc
mov
test
dec
aad
mov
add
lds
and
scas
mov
xorb
ret
lcall
inc
jns
dec
je
push
aaa
sub
mov
cli
jne
shr
or
sti
xor
sbb
outsb
jmp
push
sub
cmp
filds
add
lea
sub
pop
add
add
inc
cmpsb
mov
or
pop
insb
add
scas
inc
xor
and
pop
mov
rol
and
out
dec
lcall
sub
adc
dec
inc
sub
out
push
sbb
imul
sbb
and
or
and
pop
add
addl
pop
rorb
cmp
daa
adc
test
pop
dec
and
ret
enter
sub
mov
test
call
in
mov
mov
and
out
jae
aam
mov
cmp
adc
fwait
outsl
push
cmp
xor
push
or
add
push
es
mov
jmp
add
cmp
mov
pop
jnp
into
mov
inc
sub
in
mov
fbstp
inc
outsb
in
push
rorl
and
mov
out
jne
movsb
fstpl
dec
add
mov
rolb
xor
cmp
add
out
enter
sub
jp
out
pusha
data16
push
pop
and
add
cmp
xlat
xor
inc
inc
sub
and
test
movsb
imul
cvttps2pi
xlat
lods
or
inc
pop
or
mov
popf
shrb
rolb
sbb
and
sarl
cmpsl
arpl
sub
cmp
dec
lcall
scas
jmp
jecxz
loop
inc
cli
cmpsb
or
push
push
mov
std
mov
xchg
lea
add
inc
push
push
cmpsb
xchg
fistl
sti
mov
push
cmp
jecxz
cmpsb
je
ss
xor
or
add
push
scas
cmp
mov
cmpsb
cwtl
add
cmc
adc
sbb
fsubl
or
dec
je
ficompl
or
clc
pusha
fnstcw
xor
scas
or
cmp
scas
add
pop
and
sbb
pop
xchg
rcrl
in
jmp
scas
jle
xor
pop
stos
lahf
add
mov
xchg
xor
nop
adc
je
inc
and
scas
je
into
andb
adc
add
and
push
cmp
repnz
lret
pop
sub
xor
inc
adc
jne
push
shr
inc
ja
pop
xlat
add
js
movsb
addr16
icebp
mov
add
inc
bound
mov
out
addr16
sbb
adc
insb
push
out
addb
sub
inc
adc
and
add
mov
call
push
je
sub
add
pusha
and
jne
in
and
stos
inc
pusha
repnz
jne
jnp
or
call
cmp
jbe
inc
mov
adc
xchg
inc
pop
ficoms
jne
call
js
aaa
mov
mov
dec
dec
lahf
add
inc
xchg
pop
xor
push
hlt
jo
inc
jg
inc
xchg
push
push
pop
xchg
test
adc
xchg
xor
mov
mov
add
inc
fbstp
jo
cmp
xchg
lcall
jge
xchg
push
dec
aas
ss
cmp
push
or
pop
pop
cmc
outsl
mov
rolb
push
sbb
int
jp
std
cli
movsb
and
and
mov
add
clc
mov
cmp
cmp
pop
aaa
push
cmp
or
mov
and
mov
ss
mov
adc
dec
je
lock
mov
pusha
jge
dec
call
ror
int
call
add
mov
icebp
xor
or
sbb
and
gs
adc
sub
fistps
inc
sbb
out
test
mov
gs
nop
jge
and
int
sahf
into
shrl
in
add
sbb
je
jmp
pop
rclb
pop
mov
aad
test
testb
xor
xor
shrl
hlt
mov
imul
inc
dec
sbb
cmp
xlat
xchg
mov
fcom
lea
insl
sbb
iret
js
inc
nop
mul
hlt
or
jmp
push
and
adc
in
fsubs
popl
add
jno
xchg
lock
jo
andb
add
bound
xor
or
sub
dec
xchg
in
repnz
sub
push
jmp
mov
jmp
pop
add
pop
lods
inc
popa
adc
hlt
pop
ficompl
mull
sub
add
addb
loope
daa
sub
ja
iret
mov
dec
sub
rcrl
clc
mov
repnz
ds
xchg
movsb
loopne
inc
push
xor
push
sbb
mov
inc
or
or
and
mov
or
and
hlt
push
cmp
xchg
mov
or
jbe
mov
add
add
int3
dec
ret
xorb
xlat
int3
inc
daa
dec
add
push
scas
aaa
or
loop
sub
push
sbb
sbb
mov
js
call
and
pop
andb
inc
call
rclb
push
clc
adc
jmp
sbb
pusha
cmp
aaa
mov
stos
repnz
shll
xlat
stc
xorl
fsubrs
daa
in
leave
add
fists
iret
in
movsb
fcomps
mov
dec
shll
test
adc
adc
incl
jl
push
imul
adc
cmp
jbe
inc
add
push
add
mov
pop
cmp
jbe
push
sub
test
aam
aas
mov
mov
inc
fwait
bound
fisubrs
jo
push
and
adc
inc
arpl
add
mov
aam
xchg
das
insl
sub
lods
cld
cmp
stos
jb
inc
testl
out
add
or
repz
sbb
popw
pop
jmp
dec
mov
xchg
xorl
dec
cmp
or
or
nop
adc
sub
jg
rclb
mov
lods
js
pop
xchg
rclb
cmp
sbb
add
sar
orb
mov
jo
ljmp
in
test
add
fdivrs
in
pushf
push
negl
in
jb
or
add
sub
jl
inc
lea
mov
aam
mov
fucomi
sub
jle
cld
mov
push
arpl
mov
fnsave
mov
ljmp
mov
push
push
or
cmpsb
les
out
movsb
or
xchg
pop
inc
pop
mov
movsb
mov
mov
pop
mov
loope
stos
or
lea
in
mov
xchg
xor
mov
cmp
xchg
pop
sbbl
in
andl
clc
call
mov
xor
sub
addr16
jae
sub
sbb
enter
xchg
orl
mov
push
mov
stos
inc
xor
xor
in
insb
or
dec
push
xor
inc
xor
jbe
and
inc
push
mov
in
push
xor
cmp
mov
cmp
sub
inc
mov
or
or
loopne
roll
sbb
js
xchg
outsl
fdivrs
mov
or
jl
aas
adc
mov
shr
adc
xchg
out
inc
pop
outsl
add
xor
push
jg
and
mov
push
or
xor
hlt
mov
orl
aas
cld
inc
add
lock
add
test
test
clc
sub
cmp
subl
mov
cld
jle
nop
mov
in
xor
arpl
movsl
insb
or
inc
mov
fcomps
cmpsl
in
and
nop
popl
sbb
inc
adc
pop
sbb
and
and
add
xchg
mov
jge
push
in
imul
add
rclb
inc
lock
mov
stc
mov
dec
cmp
js
inc
inc
jo
sbb
sub
cmpsb
xchg
add
add
adc
gs
add
xorb
sbb
inc
pop
sbb
test
mov
inc
test
mov
adc
lock
push
mov
mov
test
xlat
add
cmpb
pop
test
mov
fmull
rorb
in
aad
repnz
hlt
jl
imul
dec
or
push
adc
ret
bound
adc
and
popf
popa
mov
sbb
push
into
and
movsb
add
inc
test
arpl
sarl
mov
clc
and
and
sbbl
clc
cmpsb
cs
push
push
and
push
push
push
stos
cmp
add
dec
call
lods
lret
daa
rcrb
jae
push
imul
das
shl
mov
dec
enter
cmp
mov
outsl
pop
add
stc
adc
clc
aam
shl
outsl
out
adc
mov
jl
push
into
sti
add
into
into
mov
mov
es
pusha
enter
flds
or
mov
mov
andl
addb
add
push
in
dec
cmp
add
shrb
clc
push
ljmp
ja
testb
fwait
sub
sub
mov
mov
fsubrs
add
ror
setle
inc
push
and
call
loope
imul
divb
push
or
and
or
mov
mov
aaa
mov
push
scas
jg
and
xchg
cmpsl
cmp
jb
nop
jb
mov
inc
mov
xchg
loopne
and
dec
or
inc
aam
add
sub
ficoms
call
sar
jmp
and
test
js
test
xor
add
mov
cwtl
sti
adc
mov
or
inc
mov
adc
je
inc
ret
ds
push
leave
ljmp
or
xchg
lock
jle
pop
int
fcmovbe
jmp
cmpsb
bound
shr
scas
or
je
adc
jne
movsb
subb
jge
test
push
mov
or
jo
or
xchg
cld
or
jmp
and
jmp
call
adc
std
sub
adc
xchg
call
ret
and
push
xchg
mov
aaa
rcrl
mov
cmp
je
je
add
adc
fs
lods
or
push
jge
push
mov
and
imul
repz
or
add
dec
inc
push
push
cli
pusha
xor
inc
push
sbb
add
dec
inc
and
outsb
ja
cmp
sub
sbb
mov
cs
cmp
push
dec
andb
jb
lds
adc
cwtl
sarb
pop
add
movsb
mov
dec
out
mov
inc
xchg
dec
fldcw
lret
add
mov
add
add
xor
les
push
scas
pop
inc
pop
enter
jge
xchg
or
sbb
popaw
jle
or
adc
adcb
loopne
clc
cwtl
mov
add
aas
adc
cmp
sarb
dec
cmpsb
mov
movsb
mov
repz
adc
or
inc
mov
fmull
imul
jmp
loope
in
cmc
or
mov
add
mov
add
cwtl
adc
or
add
adc
jo
in
test
enter
mov
cmpsb
lock
jg
js
mov
je
cmp
lea
imulb
xor
adc
mov
cmp
lods
cmp
jle
mov
popf
mov
cmp
jl
pusha
sbb
dec
inc
or
int
or
mov
cmpsl
or
and
aaa
ss
and
add
push
cltd
test
xchg
mov
adc
mov
mov
into
jmp
cmc
and
mov
inc
mov
push
add
push
mov
sbb
popa
dec
mov
test
inc
push
in
movsb
pop
cmp
pop
cmp
movsb
or
aas
dec
insl
imul
xchg
mov
jb
jae
cltd
test
dec
and
mov
ljmp
jle
sub
jle
push
ss
lock
mov
dec
push
lock
pop
ja
fnstcw
psubw
sub
leave
je
cmpl
sbb
adc
dec
push
test
cmc
add
xor
pop
mov
dec
testb
adc
adc
in
in
sub
cmp
lcall
mov
std
xorl
mov
xchg
pusha
loope
clc
push
sarb
clc
pop
jmp
rolb
out
jl
popf
cmp
test
xor
leave
or
loopne
cltd
pop
mov
cs
ret
dec
inc
dec
jbe
fcomp
cmpl
popf
push
mov
hlt
push
mov
decl
ja
gs
dec
fisubrs
sbb
gs
inc
jne
fxch
add
jmp
or
pop
out
jne
repz
mov
jnp
push
push
or
jl
iret
adc
rcl
and
push
mov
jne
sbb
cmp
aaa
in
sbb
add
dec
add
pshufw
xchg
shll
inc
sbb
dec
xor
out
adc
idiv
fstpl
adc
jg
cmpl
pusha
pusha
pop
popa
sub
roll
inc
add
inc
rclb
dec
jno
addr16
pop
and
fcoms
adcb
and
inc
pop
cmp
loopne
fstl
orl
push
and
das
cmpsl
lods
lret
test
ret
cmp
adc
ja
add
stc
lss
cmp
jmp
dec
add
adc
lret
and
or
incl
adc
xorb
psllq
adc
xchg
imul
or
cmc
dec
fs
xor
xlat
mov
xchg
add
jmp
and
in
mov
add
pandn
dec
scas
or
inc
sub
loope
pusha
inc
icebp
cmpsb
or
popf
add
adc
sub
add
sub
adc
sub
mov
and
xchg
rorb
clc
add
stos
mov
sub
mov
out
je
jmp
push
or
loop
push
adc
shlb
ret
fisubl
rol
adc
inc
or
jb
cltd
adc
lods
sub
adc
push
ds
push
and
enter
popa
jae
adc
leave
je
stos
adc
btr
cmp
add
scas
sbb
push
push
inc
rorb
jp
cmpsb
jmp
scas
push
and
fistps
xchg
inc
dec
and
out
and
adc
je
sbb
adc
or
cmp
ja
call
bt
jb
pop
add
mov
fisttpl
adc
jmp
inc
cmp
jne
inc
mov
or
les
outsl
or
bound
inc
pop
adcb
out
dec
cli
test
loopne
add
or
call
cmp
jne
or
imul
loope
sarb
hlt
dec
push
mov
sbb
in
popf
gs
in
and
and
andl
cwtl
faddl
loopne
sbb
insb
push
xchg
das
inc
pop
loope
aaa
das
adc
cmc
xlat
das
ret
mov
fs
inc
movsb
or
sti
xor
test
mov
pushl
jnp
orb
sbb
out
jns
push
push
iret
push
dec
sbb
xchg
or
push
test
xchg
je
pop
or
pop
sbb
inc
or
or
dec
xor
lods
ret
dec
aas
or
cmp
sbb
clc
adc
and
cmp
and
sub
incl
add
inc
testb
je
andb
mov
dec
pop
and
jmp
pop
jle
and
add
adc
push
aad
mov
loope
mov
sbb
je
jp
or
adc
push
enter
push
pop
stos
pop
mov
pusha
les
stos
insb
popa
xor
jg
ljmp
cmpl
xchg
add
aam
test
jne
ja
and
pop
test
xchg
jae
or
inc
ret
mov
and
addr16
in
and
in
sub
sbb
enter
je
push
push
out
sbb
cmpb
jle
pop
js
loopne
leave
shlb
xorb
or
scas
dec
and
xor
sbb
sbb
sbb
push
xor
add
inc
test
push
cmp
push
pop
in
add
sub
jge
and
or
jp
pop
mov
dec
enter
push
int
add
into
cmp
testl
add
rolb
mov
out
rolb
dec
mov
push
flds
add
adc
mov
ljmp
cli
dec
and
ds
push
mov
iret
das
pop
ja
xchg
push
sbb
inc
push
lea
lret
es
shl
or
lret
addl
movsl
mov
js
push
pop
xlat
lcall
fsubl
fldenv
sbb
lea
adc
test
inc
mov
fldl
jnp
jg
ja
and
push
mov
sbb
pop
pop
or
fisttps
mov
sub
jl
or
xor
push
popf
sbb
mov
call
mov
or
cmp
jo
add
mov
jle
add
xchg
andl
lcall
add
lods
mov
test
aas
or
cltd
pop
gs
or
push
add
jbe
pop
add
pop
rcrb
rclb
cmp
mov
outsb
fldl
icebp
pushf
add
add
dec
or
je
push
adc
rolb
mov
xor
daa
call
clc
or
in
pop
rolb
clc
xor
cmp
lea
test
inc
push
inc
lock
andb
cmp
lds
adc
add
jb
sub
push
cmp
cli
or
pop
int3
and
and
int3
and
add
mov
adc
cmp
popf
mov
hlt
movsb
dec
cli
mov
pop
mov
and
inc
push
or
fstpt
adc
jne
sub
call
and
sbb
fadds
adc
or
fwait
inc
dec
jne
or
or
popa
inc
and
fistpl
inc
daa
lret
pusha
mov
ljmp
inc
inc
roll
xchg
lods
mov
lret
pop
orb
xor
addb
adc
xor
inc
adc
or
cmp
insl
mov
inc
sbb
add
pop
inc
fwait
push
mov
pop
and
push
push
jl
hlt
out
lret
jp
cmp
cltd
mov
sub
sub
inc
in
lahf
cmpsl
fistl
mov
mov
add
jno
push
imul
hlt
ffreep
fcomps
jbe
jmp
inc
sub
or
aam
pop
mov
pop
add
jb
mov
jb
aaa
or
adc
mov
pop
mov
push
dec
mov
lods
xor
stos
or
ret
add
mov
lret
repnz
fwait
push
pop
int3
sub
pop
and
cmp
ds
rcrb
add
adc
sub
or
dec
faddl
inc
and
xchg
mov
aas
lods
or
inc
pusha
mov
outsl
adc
cmp
arpl
cmp
push
shlb
outsb
inc
push
aas
pop
scas
es
push
adc
movsb
jnp
sbb
sub
sub
sub
jl
xchg
adc
movsl
jle
sbb
enter
cmp
adc
out
nop
pop
pushf
mov
jne
mov
and
ret
inc
dec
xor
leave
fcmovnb
adcl
adc
push
in
push
test
loop
movsb
pop
lock
pop
hlt
clc
add
or
dec
inc
popa
shlb
sbbl
jl
rclb
sbb
cwtl
jo
sbb
dec
call
inc
andl
and
adc
and
push
mov
push
jno
and
out
add
inc
sub
inc
dec
ficoml
push
cld
mov
sub
and
inc
sbb
test
adc
and
enter
adc
add
xchg
add
mov
adc
or
out
inc
movsl
lods
adc
jns
and
hlt
mov
sub
mov
mov
pop
movsl
mov
mov
push
sarl
mov
sbb
push
testl
clc
roll
gs
sbb
add
pop
add
lahf
ret
and
or
es
and
in
sar
adc
push
xchg
jl
ss
dec
rol
and
cmp
xchg
and
pop
aas
xchg
clc
inc
dec
jae
dec
and
push
test
xor
fcomip
dec
pop
mov
leave
inc
cwtl
mov
fsub
in
ljmp
test
cld
lock
push
in
cld
and
das
push
in
pop
lahf
or
mov
cmpsl
loopne
inc
jb
and
in
adc
push
add
in
and
and
imul
popa
in
mov
sub
or
mov
jmp
mov
dec
xchg
add
xchg
mov
sbb
inc
lcall
cmp
addb
test
xor
or
pusha
lret
ret
dec
add
test
sub
imul
and
xchg
inc
addl
push
outsl
shlb
cmp
hlt
mov
mov
fistl
data16
adc
jg
mov
sub
sub
cmp
jae
daa
shrl
pop
je
mov
lcall
adc
sti
mov
sub
orb
fmul
pop
rorl
adc
addb
and
sti
sub
sub
jg
adc
lea
test
jge
sub
cltd
sub
enter
cmp
push
or
sbb
push
mov
movsb
xlat
lock
sti
ficompl
test
and
outsb
inc
sbbb
movsb
sbb
mov
jne
jl
sub
fisubs
shlb
fs
movsb
int3
mov
int
sahf
inc
inc
add
stc
push
sub
push
pop
mov
loopne
test
fs
je
xchg
sar
or
outsl
add
mov
subb
xchg
mov
mov
scas
dec
packsswb
mov
adc
movsl
mov
test
sahf
jnp
sbb
adc
add
mov
xchg
les
mov
xchg
push
inc
faddl
xor
pop
mov
adc
int
dec
inc
pop
aaa
insb
push
inc
jl
mov
scas
outsl
clc
cwtl
scas
roll
dec
dec
sub
clc
scas
shll
and
or
gs
push
pop
popf
push
push
dec
or
daa
sub
sub
ljmp
imul
pop
and
inc
dec
scas
test
shrb
cmpl
mov
cmpsl
shl
vmovntpd
sahf
push
xor
arpl
fmuls
and
divb
dec
xchg
push
dec
dec
xchg
mov
push
xor
mov
adc
xchg
and
add
add
add
and
pop
mov
inc
dec
call
inc
pop
outsb
loopne
insb
push
fiaddl
sti
inc
add
xor
xor
lret
mov
dec
clc
shll
mov
add
push
faddl
addr16
adc
int3
push
sub
adc
cs
pop
mov
cmp
and
sub
sbb
fwait
ss
adc
xchg
sbb
cmc
and
aad
xchg
xchg
inc
mov
sbb
in
mov
inc
mov
clc
inc
mov
xor
cmp
xor
je
xor
or
lea
loope
xchg
sub
pop
adc
inc
and
pop
or
andl
sub
adc
aas
pop
xchg
aaa
pop
ret
test
lret
jecxz
mov
je
cmp
add
xorl
call
sub
cmpb
movsb
les
shl
and
jecxz
mov
and
out
and
inc
push
jae
adc
or
cmc
dec
movsl
xor
out
aas
lock
ljmp
push
or
mov
push
lret
mov
icebp
pusha
and
xor
mov
mov
test
leave
loope
xchg
cmp
test
push
and
mov
movsb
xchg
sbb
xchg
test
pop
pop
pop
sbb
adc
leave
xchg
pop
imulb
lret
das
sbb
push
add
lock
movsb
and
inc
loopne
fcoms
pop
adc
sbb
lret
jae
dec
or
shlb
add
imul
mov
push
ror
pop
jnp
cmpsb
inc
sbb
sub
inc
push
and
das
test
lock
aad
loop
pop
and
test
xchg
inc
scas
xor
pusha
clc
cmp
je
or
push
cmp
mov
lret
dec
inc
jo
pushf
fwait
data16
fs
lahf
stos
adc
shrl
je
jmp
add
int
xlat
pop
loop
mov
call
loope
push
in
xor
ja
adc
daa
and
push
clc
jo
dec
jle
inc
sbbb
jo
mov
xor
mov
mov
addb
sbbl
cmpsb
in
xor
cwtl
dec
adc
fistps
movsl
leave
mov
dec
ret
rcll
mov
roll
push
pop
cmpb
pop
push
adc
or
xchg
sbbl
add
ds
push
cmp
test
scas
fidivl
hlt
popf
adcb
xchg
outsb
adc
loopne
rorb
das
sbbb
jb
inc
and
jns
call
movsl
mov
xor
cmpsl
mov
lods
adc
xchg
fisubrs
mov
push
add
jl
pop
testl
or
les
lods
add
jg
mov
mov
mov
adc
or
cmp
lea
adc
les
lds
and
pop
pop
repz
lods
mov
ret
add
mov
add
enter
test
test
cmp
aad
or
add
test
ljmp
les
nop
ret
pop
repnz
dec
jge
xchg
in
jne
mov
pop
cmp
jmp
pop
sub
lcall
sbb
pusha
addb
push
inc
push
add
or
adc
mov
xchg
push
dec
ret
aaa
mov
idivl
popa
or
lock
xchg
movb
push
jge
test
cmp
push
bound
inc
mov
mov
push
or
movsl
and
or
xchg
sbb
dec
ljmp
clts
movsb
in
ss
imul
test
jecxz
fsubp
imul
jo
aad
mov
pop
adc
leave
sub
jle
mov
jno
xchg
adc
add
mov
popa
or
mov
rorb
mov
ss
dec
decl
and
sub
lock
jne
incl
mov
push
mov
cmpl
ja
add
and
dec
dec
sub
inc
shll
lds
mov
rcrl
lahf
aaa
fcomps
mov
fnstenv
popl
or
loope
mov
or
cmp
cmp
ljmp
pop
ljmp
lea
cmp
or
in
sarl
or
mov
push
scas
add
sub
mov
aaa
adc
call
sub
inc
sbb
lahf
push
and
loopne
gs
add
or
jp
push
sbb
or
adc
cmp
push
mov
dec
xchg
jb
mov
add
and
xor
mov
add
pop
in
sti
lock
push
push
fimull
lea
movzbl
add
adc
pop
add
scas
pop
sti
mov
inc
ss
orb
sbb
js
inc
xchg
nop
test
out
add
mov
sbb
sbb
add
mov
pop
add
pop
add
icebp
mov
movsb
cmp
inc
dec
mov
cmc
daa
jmp
orl
dec
enter
adc
shrb
and
imul
xor
or
iret
add
lds
shlb
jno
mov
mov
addb
pusha
xlat
hlt
pop
push
and
cmp
adc
pop
test
cmpl
push
xor
xor
imul
push
xor
scas
or
adc
cmp
fiaddl
divl
je
push
out
push
in
adc
mov
lcall
pop
clc
lahf
inc
cwtl
lcall
fwait
scas
cmp
cmovs
push
push
add
imul
xor
add
scas
dec
call
inc
icebp
mov
inc
lock
inc
dec
jne
movsb
fldt
mov
adc
xchg
shll
adc
sbb
shll
jge
shll
imul
and
fsts
and
add
ljmp
mov
or
adc
xor
dec
xor
adc
ljmp
inc
aad
dec
cmp
xorb
ja
and
sub
loopne
mov
xchg
aam
fs
rcll
push
hlt
lcall
shll
add
adcl
outsb
movl
call
lock
pop
mov
mov
adc
pushfw
jp
and
or
aaa
add
cmp
clc
cmp
shl
add
adc
inc
ret
mov
inc
aaa
or
and
dec
dec
dec
ds
inc
idiv
mov
sbb
test
mulb
aas
xchg
xchg
adc
dec
add
push
movsl
dec
xor
and
cwtl
and
lods
invd
push
and
xor
mov
inc
aad
loopne
xor
jae
loopne
push
or
push
mov
xchg
sbb
enter
dec
adc
or
pop
inc
adc
inc
or
stc
orb
sbb
cltd
iret
and
dec
mov
and
mov
sbb
les
mov
mov
xchg
dec
add
or
je
dec
pop
add
cmpb
mov
pop
pop
and
xor
cmpl
push
jg
mov
jmp
adc
jne
imul
aam
pushf
xor
adc
add
or
jne
andb
xchg
add
add
pop
add
repz
jle
loop
add
mov
xor
lds
rclb
sbb
sahf
pop
sbb
repnz
mov
xor
scas
adc
inc
push
imul
cmp
in
int
ret
add
mov
mov
mov
mov
mov
jl
pop
dec
pop
ret
sbb
or
imul
aaa
dec
push
fs
scas
flds
int3
xchg
shrb
out
jle
adc
mov
xor
jne
lods
shll
or
push
inc
xor
jg
subb
js
push
repnz
mov
mov
mov
dec
push
in
jbe
push
sti
or
stc
enter
nop
cltd
pushf
jb
sub
push
xlat
mov
imul
addr16
dec
push
add
fimuls
cmp
mov
and
xor
mov
pop
and
fcoms
add
cmp
sub
cltd
mov
sbb
add
fs
jne
dec
leave
int
xor
mov
adc
sub
pop
daa
inc
xor
cmp
aad
fnstsw
sysret
cmp
mov
aam
shlb
adc
pop
nop
rcll
sbb
filds
into
xor
outsb
or
or
xor
mov
xor
call
rolb
sub
add
imul
push
bound
fsubl
or
cmpb
pushf
sbb
xchg
pop
add
outsl
lock
bsf
dec
or
ja
insl
or
fldcw
add
or
aas
ret
pop
iret
fdivrs
push
cmp
das
js
dec
pop
adc
cmp
add
testl
adc
add
mov
jle
add
das
fsubrs
popf
xor
das
mov
inc
sahf
fwait
cld
or
lret
into
pop
subb
add
mov
stos
jo
xor
push
pop
dec
rolb
cmpl
and
jle
lret
add
jbe
and
sbb
dec
mov
or
test
pop
rclb
add
jl
sub
es
and
inc
inc
inc
insl
mov
in
and
ret
add
xor
inc
mov
jmp
push
data16
push
mov
pop
loopne
cld
aad
push
adc
addl
push
negb
jne
fs
mov
call
mov
add
nop
pop
xor
jae
addr16
sub
enter
pop
cmpsl
lock
xchg
out
shll
test
mov
pusha
shl
cltd
and
mov
ret
mov
push
leave
ret
rcll
mov
in
scas
adc
aaa
push
sub
das
add
arpl
sub
jg
sar
and
mov
int3
add
insb
jg
dec
in
sbb
adc
sbb
das
xor
in
adc
or
xor
mov
adc
fsubrs
les
add
inc
shll
sbb
jbe
inc
cmp
push
aaa
icebp
imul
dec
cmp
xchg
icebp
or
add
add
sbb
call
std
or
mov
ret
cltd
sub
shrd
push
mov
and
mov
rorb
dec
sub
inc
pushf
mov
and
sub
cwtl
insl
into
mov
push
inc
in
insb
orb
sub
pop
dec
adc
sub
pop
cmp
adc
fistps
and
shrl
mov
nop
ret
add
mov
xlat
cmp
adc
lds
lahf
outsb
sub
xchg
in
adc
lock
sbb
inc
xorb
out
dec
aaa
xchg
cmp
add
sbb
dec
inc
mov
or
rol
xchg
scas
xchg
stos
ret
and
fnstcw
pop
and
adcl
clc
aas
sub
pusha
sub
xchg
sub
ret
add
jo
imul
and
shrb
xor
or
add
jge
push
sbbb
push
cld
test
cmp
sub
inc
or
add
pop
negb
lea
cmp
add
cli
or
cld
mov
adc
orl
adc
cmp
sub
pop
sar
cmc
jnp
sti
test
inc
add
add
add
xchg
sbb
pop
idiv
das
sub
out
sbb
or
add
adc
mov
jo
xchg
mov
daa
enter
lods
xchg
lods
or
mov
rclb
fistpll
jge
or
sbb
shrb
pop
fisubs
jbe
aad
mov
push
daa
inc
push
jbe
pop
insb
cmpsl
cmp
pop
gs
in
rorl
add
dec
jmp
out
fidivl
lea
fmuls
arpl
ljmp
andl
pop
sub
mov
out
dec
dec
push
xchg
int
into
shlb
fsubs
notb
jns
call
cmp
jle
sub
xor
je
push
or
fsubs
push
adc
ret
mov
cmp
adc
mov
cs
sbb
push
mov
xchg
mov
adc
outsb
jne
push
cmp
or
loope
mov
cld
push
or
pop
adc
mov
mov
push
mov
aam
xchg
orb
pop
xchg
dec
or
cmp
int3
fcmovnbe
push
inc
push
sub
in
sarl
xor
jg
inc
aas
adcb
mov
inc
je
xchg
pop
inc
arpl
xor
dec
push
daa
dec
aas
in
test
rcrl
icebp
or
or
xor
mov
inc
push
ret
jl
add
mov
mov
adc
subb
adc
inc
enter
sbb
outsl
mov
call
jge
mov
add
inc
outsb
push
mov
push
jmp
imul
shrl
fs
push
loopne
fsubrl
and
das
test
jo
and
movsb
dec
add
lods
mov
daa
subb
mov
mov
test
test
andl
sbb
push
adc
or
or
dec
test
and
add
pop
or
dec
add
aaa
add
or
insl
shrl
ss
insb
loopne
insb
mov
clc
leave
or
adc
push
or
and
sbb
call
in
fisubrl
mov
mov
mov
xchg
rolb
sub
pop
push
into
aaa
inc
pop
inc
cmpsl
inc
mov
addr16
adc
or
movnti
and
dec
jp
aas
push
add
popa
movsl
xor
addr16
les
mov
cmp
das
push
push
mov
js
mov
aam
movsb
sbb
and
mov
sub
das
mov
add
sub
dec
pop
idivl
mov
jb
and
or
inc
outsb
jl
adc
push
call
adc
push
lret
adc
lods
jae
push
jmp
lret
add
mov
pop
pop
add
mov
ss
sbb
dec
push
pop
pop
pop
or
js
pop
ds
test
push
pop
xor
xbegin
test
adc
jbe
adc
adc
and
repnz
and
add
lds
adc
adc
xchg
or
add
push
xor
add
inc
mov
cmpsl
cmpsb
mov
mov
outsl
scas
mov
inc
popa
adc
xchg
add
and
push
xchg
insb
dec
loope
mov
mov
mov
cmp
fildll
cmp
add
popf
push
xchg
adc
pop
push
pop
insl
pusha
and
verw
push
and
adc
pop
dec
in
subb
cwtl
push
pop
mov
sbb
jo
mov
mov
mov
mov
push
je
mov
xor
fisubl
dec
mov
mov
dec
inc
sbb
pop
jo
popa
dec
cmp
push
or
test
ret
and
in
mov
test
sub
aam
push
inc
push
mov
mov
push
negl
pop
push
cwtl
mov
jl
sbb
push
xchg
inc
sbb
adc
sub
sub
es
sub
outsl
xchg
add
sub
fdivrs
sub
add
add
xchg
push
pop
lds
lea
or
stos
and
xorb
je
inc
loope
sbb
rclb
adc
and
mov
cmp
pop
fadds
xchg
add
cmp
and
je
dec
or
mov
dec
push
xor
cmpsb
into
dec
adc
or
mov
gs
aad
lods
insl
or
pop
xchg
je
or
pop
das
outsb
insb
sub
pop
or
daa
ss
aad
push
add
in
push
punpcklbw
int3
push
inc
loop
jno
test
outsl
pop
pop
and
and
insb
sbb
ret
pop
push
mov
push
pop
mov
xor
push
cmp
mov
es
sbb
or
inc
xor
adc
test
adc
or
cmp
test
pop
clc
cmp
movb
ljmp
xchg
xor
and
lahf
or
jge,pn
jle
adc
lret
lea
add
push
inc
lret
inc
sbb
pop
sbb
push
pushf
mov
inc
add
nop
mov
dec
or
outsb
push
das
hlt
and
popa
jno
xor
inc
sub
je,pn
adc
and
adc
insb
adc
in
mov
and
jbe
xor
mov
pop
sub
andb
sbb
adc
mov
sbb
mov
pop
sbb
or
test
shrl
fcom
dec
hlt
jae
hlt
das
ljmp
sbb
adc
nop
adc
lds
mov
sbb
lret
mov
cs
fwait
mov
jge
add
dec
pop
add
iret
dec
rclb
or
shll
push
and
jl
inc
push
call
scas
lods
dec
js
or
xchg
dec
and
enter
clc
pusha
push
mov
fistpll
or
arpl
loopne
cs
inc
cmpl
stos
movsl
mov
pop
stos
mov
cmpsl
lret
and
mov
inc
jno
pop
lods
testb
lods
imul
pusha
and
cmpsl
in
sbb
or
and
lret
mov
testb
add
sbb
jne
and
dec
push
jmp
sub
scas
ret
out
dec
push
or
pop
pop
inc
jmp
sbb
sbb
pop
sarl
mov
mov
push
cmp
sbb
popf
insl
jb
xlat
pop
arpl
addb
xlat
push
outsl
adc
mov
addr16
call
fpatan
sub
push
into
mov
dec
loope
mov
jmp
mov
jb
pop
negl
cmpl
jp
xchg
fsubl
adc
inc
lock
xchg
sub
fwait
jmp
adc
push
adc
imul
add
fstpt
mov
mov
and
shll
je
inc
lcall
add
cmp
xlat
mov
dec
push
push
dec
inc
push
ret
nopl
inc
lcall
inc
pop
les
mov
push
sbb
add
and
mov
xchg
xchg
sub
jmp
repnz
inc
pushf
inc
sbb
or
cmpsl
mov
xchg
pusha
push
or
pop
xchg
xor
sbb
movsb
addr16
sbb
push
xchg
je
cmp
dec
dec
adc
sbb
xchg
out
dec
popf
mov
cmp
sbb
adc
inc
imul
push
and
rorb
aas
daa
mov
sbb
nop
add
mov
dec
pop
popa
mov
shlb
mov
add
iret
mov
and
pop
das
push
das
cmp
popa
mov
push
loop
fnstenv
cmp
testb
mov
sbb
aaa
scas
scas
addl
jo
cmp
popa
add
and
add
sbbl
sbb
decl
daa
push
sub
sub
in
add
cmp
js
push
mov
sub
cmp
adc
xchg
scas
xor
xor
inc
pop
iret
mov
loop
inc
mov
cs
cs
xor
push
ret
dec
inc
nop
in
fisubrl
test
sub
scas
inc
notl
push
push
outsl
loope
xchg
inc
pop
adc
dec
insl
mov
adc
sbbb
jp
hlt
and
and
inc
push
push
mov
cli
inc
push
cli
cmp
scas
and
into
ret
cmp
orb
cmp
jnp
es
and
clc
fsts
stos
leave
jmp
add
sub
cmp
inc
jne
push
or
jne
push
add
xchg
shrl
mov
dec
add
das
jns
adc
fs
xor
sbb
test
adcl
push
pop
negb
loop
loop
cmp
mov
mov
nop
or
lahf
sbb
leave
jge
jmp
and
or
jmp
push
or
xor
xor
sub
rcrb
or
sarb
or
inc
repnz
outsl
mov
xorb
push
int
lock
xchg
mov
stos
movsb
or
mov
sbb
sbb
pop
idiv
leave
test
int3
push
push
inc
add
movsb
fld
adc
adc
dec
add
jg
rorb
inc
cwtl
mov
jmp
or
pop
add
call
fisubrs
push
ret
or
xchg
mov
pandn
push
dec
sub
jne
ret
cmp
jp
adc
fcoms
mov
mov
jge
addb
test
out
enter
sbb
mov
or
out
movsb
sub
sub
sub
jl
cs
sub
movsl
sub
inc
js
adc
loopne
push
sbbb
dec
adc
mov
ja
cli
sbb
sbb
fldenv
adcb
cmp
sbb
mov
mov
dec
hlt
add
test
rcrl
pop
adc
push
aam
or
adc
sar
adc
xlat
mov
cs
adc
clc
outsl
lock
ljmp
xor
orl
add
or
cmp
cmpsl
sbb
das
out
cmp
aas
insb
fmuls
dec
shld
mov
rorb
ret
mov
fcomps
popf
push
jmp
movsl
or
clc
addb
in
lods
imul
jmp
cmp
adc
sub
jae
bound
pop
mov
or
in
mov
shll
jo
mov
adc
popa
cmpsl
dec
push
cmp
mov
pop
dec
stos
mov
sub
mov
imul
adc
lea
lock
adc
or
fsubrl
mov
mov
inc
in
je
mov
addl
rcll
lods
jp
mov
pop
pop
pop
insb
cmp
xchg
aam
clc
cmpsl
inc
testb
jmp
nop
add
jge
ljmp
cwtl
into
add
or
fs
xor
jns
mov
and
aaa
int3
ret
add
outsb
dec
xchg
and
call
fwait
xor
add
add
pop
pushf
pop
sbb
push
cmp
xchg
push
popf
idivl
mov
pop
js
shrb
stos
or
imul
pop
in
xchg
rcll
cmpb
sbb
cmp
sub
xchg
fnsave
sbb
clc
xchg
jo
imul
je
jo
xchg
lea
and
clc
outsb
pop
stos
dec
iret
push
pop
add
mov
ret
fcoml
push
enter
dec
sub
adc
xchg
xor
pop
ss
sub
das
mov
push
and
clc
adc
push
addr16
movsb
stc
pop
test
adc
push
sub
mov
cltd
add
mov
ja
fiadds
fisttps
adc
mov
lock
cltd
or
jne
inc
sub
cmp
inc
dec
dec
insb
enter
adcb
sub
fadds
add
xchg
mov
sub
inc
sub
je
inc
ds
fsub
and
push
and
stc
mov
outsb
adc
sbbb
out
in
sub
jg
test
cmp
je
movsb
sarb
fsubrs
rclb
mul
dec
shlb
pop
int3
pop
jmp
xor
daa
das
pop
sbb
mov
cmp
jae
push
je
jg
jmp
push
mov
push
stc
jne
faddl
pop
lahf
jne
pop
sub
or
mov
sub
aam
add
fildl
and
inc
mov
nop
xchg
add
ja
inc
pusha
sbb
push
js
jecxz
mov
mov
adc
movsb
loop
push
stc
sbb
fneni(8087
inc
fnsave
sub
xor
mov
pop
add
lahf
sbbb
xchg
arpl
mov
xor
and
inc
ja
xchg
or
pop
adcl
pop
aad
cmp
lcall
pop
cltd
sbb
mov
add
sbb
pop
inc
add
sub
adc
push
xor
dec
mov
pop
movq
add
jl
xor
and
sub
pop
popa
sti
add
or
xchg
jne
cmp
cmp
xchg
mov
and
adc
push
sti
mov
dec
sub
cmp
push
or
or
jge
int3
popa
fistps
popa
sub
adc
pop
jo
jb
add
not
sub
hlt
cli
sub
mov
imul
push
loop
mov
pusha
sub
nop
outsb
lock
jb
gs
movsl
inc
in
and
pop
adc
mov
fmuls
and
jl
add
add
flds
daa
nop
and
adc
fmuls
add
adc
sub
sbb
push
and
shrl
aas
inc
push
mov
xchg
mov
mov
loopne
or
xchg
loop
add
mov
add
jo
sub
pushf
neg
divl
push
adc
and
hlt
dec
jo
mull
push
dec
negl
shlb
push
cmp
inc
gs
dec
out
and
mov
jbe
or
pop
push
mov
out
addr16
test
pushf
cmp
nop
out
mov
dec
mov
adc
test
add
add
jmp
daa
fs
sub
mov
jle
sti
and
ss
pop
push
nop
imul
cltd
stos
xor
cld
xor
mov
pop
jmp
out
shlb
xlat
sahf
cmp
sub
cwtl
sbb
inc
cmc
bswap
cltd
inc
or
ja
ss
mov
pcmpgtw
jnp
add
mov
mov
mov
jne
ret
and
cs
push
xorb
inc
loopne
xlat
cld
popa
mov
inc
sub
mov
adc
movsl
push
and
or
cmp
and
cld
dec
adc
sbb
in
xchg
pusha
pop
clc
ret
dec
inc
and
xchg
int
repz
sub
mov
lcall
test
sbb
adc
shlb
ret
js
adc
mov
lcall
jbe
pop
push
push
loope
xor
popl
sub
mov
jo
cmp
pop
test
mov
or
xchg
push
outsb
or
mov
add
xchg
add
pop
ret
and
jge
movl
sbb
rcl
in
add
lods
push
imul
in
inc
pop
test
bswap
data16
or
add
xor
rolb
jno
hlt
cmpsb
js
cmp
sub
in
add
mov
add
adc
ja
xor
push
test
inc
jnp
sbb
ljmp
inc
sub
sbb
dec
cmp
mov
jp
mov
xor
outsl
insl
cmp
shlb
roll
das
popa
lods
and
sub
in
mov
sbb
call
mov
pop
inc
sbb
and
cmp
insb
addl
mov
cmp
bound
mov
and
movl
sub
das
cmp
pop
js
cmp
mov
dec
das
add
cmp
mov
or
scas
in
pop
popf
or
ret
or
aad
sbb
mov
ret
jge
inc
push
enter
xor
pop
fadds
pop
xchg
ret
push
xchg
mov
push
dec
test
mov
cmp
inc
adc
sub
sub
mov
xor
xchg
ja
or
mov
call
insl
pop
adc
xor
ror
jnp
orb
cmp
repz
cli
xor
idivb
jns
jns
cmpsb
int
adc
push
scas
xchg
ss
mov
orb
pop
pop
sub
mov
inc
imul
or
cmc
xor
xor
jns
jle
in
mov
push
inc
mov
or
aam
inc
loop
popf
ret
test
lods
cltd
stos
pop
lock
movsl
adc
mov
sbb
lods
loopne
dec
mov
fcoml
mov
cmp
test
sarb
pop
push
xchg
arpl
fwait
or
push
lea
jo
loopne
xchg
enter
sbb
lds
pop
int
push
xor
bound
push
cmp
cmpsl
mov
cltd
int3
addr16
pop
sbbl
fwait
mov
ficoml
pop
cld
nop
enter
jne
mov
sbb
rclb
divl
adc
mov
push
iret
test
insb
arpl
xchg
scas
push
push
aas
xor
jmp
pop
test
lods
imul
shrb
rcl
fcomps
loopne
popa
mov
lock
mov
add
and
jge
push
lock
xchg
jne
cmc
adc
js
mov
pop
insb
popf
push
test
mov
bound
pop
cmpsb
lea
rol
dec
sub
cmp
and
jno
xchg
roll
sub
cld
rclb
lock
sub
add
mov
pop
jmp
xor
push
sub
mov
lret
cmp
jge
idivb
fdivl
xchg
mov
mov
or
sub
lar
rcrb
aam
scas
push
nop
out
sbb
pop
sbb
add
add
cltd
loopne
pop
or
mov
push
sub
push
dec
addl
dec
cmp
xor
adc
lds
dec
adc
push
mov
jmp
leave
xchg
push
arpl
adc
rcr
test
and
and
or
xchg
sbb
inc
add
mov
incl
push
inc
shll
int3
push
sub
xor
xor
fistps
and
ja
xadd
sub
xchg
sahf
cmp
sub
mov
or
jae
adc
sbb
mov
add
mov
popa
lods
inc
cmp
xchg
lahf
jg
mov
mov
in
xchg
stc
sub
jo
fstl
movsb
pop
orb
add
ds
jp
jmp
push
jecxz
cwtl
iret
stc
pop
js
push
in
or
shrl
inc
sbb
enter
mov
push
shlb
addl
sub
sub
jne
sbb
inc
mov
push
or
mov
inc
test
cmpsl
jo
and
sbb
dec
push
hlt
cmp
ja
bts
jmp
pop
cmp
mov
pop
out
cmp
pop
push
mov
out
nop
xchg
cmp
push
and
add
stos
les
sbb
push
or
and
add
idiv
mov
mov
inc
loope
mov
xchg
sub
inc
and
sbb
xchg
inc
xor
sbb
adc
sub
jne
lret
mov
jae
fists
sbb
push
je
push
adc
jp
add
cs
cmp
pushf
pop
dec
in
mov
test
bound
scas
in
cwtl
clc
xor
mov
adc
sub
push
shll
test
jb
iret
push
push
jne
adc
jmp
mov
and
pop
es
mov
ss
jo
shlb
xorb
lock
push
stos
dec
xchg
dec
lcall
rorb
inc
adc
xchg
add
and
mov
mov
push
lret
xchg
rorb
rorl
mov
and
jne
and
add
jge
ret
cld
mov
or
sub
xchg
mov
mov
adc
and
scas
shl
jbe
adc
mov
test
adc
std
jp
xor
mov
mov
push
and
out
lods
and
xchg
or
jns
divb
adc
fidivs
out
fs
je
test
cmp
popf
push
cmpsb
push
mov
sarl
out
loope
push
js
les
je
pop
pop
xchg
int3
push
push
cmp
and
mov
or
push
mov
test
je
in
push
xorl
and
sti
jmp
mov
xchg
sub
sbb
in
imul
mov
shrb
push
adc
add
jmp
and
lret
mov
icebp
push
pusha
mov
loopne
loopne
clc
into
lods
mov
pop
mov
test
aaa
fidivs
mov
incl
not
icebp
stos
adc
imul
adc
and
aam
movsl
and
scas
add
pop
xchg
jo
leave
sarb
outsb
add
xchg
and
outsl
sub
sbbb
adc
fcomps
in
sarb
jne
outsb
push
or
inc
scas
hlt
stos
inc
push
xchg
test
loope
rcrl
les
aaa
sbb
dec
push
jmp
ret
lret
jecxz
scas
cmp
mov
mov
mov
out
aas
pop
or
mov
xor
arpl
mov
jl
push
in
aaa
cli
xchg
pusha
mov
ja
pop
divb
ljmp
test
add
mov
or
or
xor
in
lock
mov
addl
daa
sub
jbe
aad
into
jg
insb
sbb
mov
fucomi
pop
xor
shl
jmp
jecxz
mov
clc
jmp
cltd
mov
jmp
sub
aaa
mov
adc
and
add
movsb
add
sub
cmpb
mov
mov
sub
mov
in
pusha
shlb
in
sub
hlt
adc
push
add
je
ret
ret
sub
test
jnp
cmp
and
cmp
adc
mov
xor
and
arpl
pop
inc
pop
fmuls
fsubl
cwtl
or
inc
pop
call
movsb
jo
icebp
cmp
mov
js
aad
lds
jo
fistpll
fidivrl
or
rclb
push
push
fildll
fmulp
daa
cmp
push
add
xchg
les
loop
jno
repz
jnp
inc
shlb
rcrb
xchg
cmovne
dec
cmp
push
push
sub
mov
jae
insb
push
test
cmp
int3
aam
or
movsb
ja
xor
pop
pop
arpl
rolb
out
js
jle
or
pop
lcall
jmp
dec
mov
xchg
lret
and
pop
add
mov
ja
loopne
or
and
cmp
cmpsl
bound
popa
cld
mov
movsl
les
js
pop
adc
cwtl
ret
sub
imul
sub
jo
mov
mov
in
xchg
xlat
mov
mov
in
fildl
ret
lock
cmp
call
sbb
insl
sbb
mov
mov
filds
daa
add
add
test
push
add
imul
lock
push
ss
insl
hlt
dec
call
sub
adc
mov
sub
adc
add
aas
sbb
xor
aaa
lods
sbb
roll
sbbb
push
adc
nop
push
sub
outsb
fwait
popf
jge
nop
das
nop
pop
in
pop
jl,pn
jnp
addr16
push
addb
push
mov
lea
or
add
jmp
mov
imul
sbb
inc
stos
movsbl
mov
xor
push
xchg
add
enter
xor
cs
pop
ljmp
in
pusha
insb
sub
dec
pop
scas
mov
adc
add
xchg
xor
xchg
les
jb
sub
sahf
ret
adc
ffree
jmp
push
loopne
shrb
je
sbb
cmpb
test
push
sahf
ret
or
pop
xchg
in
shlb
clc
popa
loopne
icebp
sub
add
je
add
sub
loope
movsb
int3
rcr
test
out
push
dec
push
lcall
out
stos
sbb
pusha
stos
xlat
add
decl
push
insb
add
xchg
cmp
or
add
push
dec
sarl
add
sbb
adc
fcoms
imul
adc
push
adc
sarb
repnz
ret
rorb
in
dec
shrb
sub
xchg
int
adc
inc
les
pop
adc
sahf
aaa
dec
or
dec
clc
xchg
sbb
adc
lret
push
inc
add
add
xchg
mov
sbb
mov
pop
rclb
arpl
lds
mov
sti
xchg
mov
call
pop
pop
pop
leave
loope
push
fs
mov
aad
adc
pop
adc
or
ret
mov
cmovnp
mov
push
or
jno
xlat
jb
sub
ljmp
in
cmpsl
push
cmp
jnp
add
and
xchg
mov
iret
inc
shlb
inc
cmpsl
xchg
jle
add
or
and
aam
add
fadds
jecxz
xchg
hlt
lods
or
and
out
cmc
loope
push
add
incl
dec
imul
jmp
xlat
dec
add
or
fiaddl
inc
in
ss
cwtl
adcb
or
xchg
insl
pop
adc
insb
cltd
add
cmp
jl
js
mov
je
push
or
sbb
fcompl
add
stc
cmp
dec
mulps
or
or
mov
xor
in
jg
push
and
test
sub
jecxz
filds
loope
pop
and
add
xchg
mov
ja
out
xor
jmp
mov
and
lock
rol
int3
icebp
sbb
or
xor
lcall
add
fisubl
inc
inc
dec
rorb
push
js
pop
mov
mov
dec
or
sub
test
in
jl
lahf
orl
mov
inc
icebp
loope
andl
bound
inc
pop
push
orb
mov
add
jmp
or
mov
xor
push
nop
ret
es
sbb
add
test
cmp
icebp
push
xchg
cmp
mov
adcb
fsubrl
rorb
int
push
inc
int
adc
cmp
dec
ret
loopne
push
sub
nop
outsb
add
sbb
pop
cmpsb
mov
mov
shlb
xor
sbb
or
adc
and
push
adc
sbb
decl
cmp
dec
xor
and
jns
adc
dec
jae
mov
loopne
dec
mov
fdivrl
jp
mov
xchg
je
imul
mov
xchg
fwait
add
sub
or
inc
rolb
lahf
movsl
rorl
mov
mov
push
mov
mov
xor
int3
arpl
mov
xchg
pop
pop
or
inc
bound
pop
mov
push
icebp
and
push
pop
dec
pop
xor
in
jl
in
loopne
test
popa
xchg
fmul
in
out
cli
push
jbe
xchg
inc
cmp
mov
pushf
loopne
or
ljmp
lcall
dec
pop
inc
xchg
xchg
hlt
add
push
xlat
setge
jle
fidivl
jbe
dec
test
sub
scas
or
clc
add
clc
xchg
or
jl
inc
inc
and
or
sbb
or
adc
jge
inc
mov
mov
inc
mov
fcmovnbe
xchg
or
mov
lahf
jl
mov
jmp
mov
jnp
xchg
xor
or
adc
mov
push
mov
test
sbb
fldl
cmpb
jg
mov
pop
adc
daa
mov
ds
and
and
jle
sub
mov
push
add
pop
mov
mov
add
mov
jno
pop
movsb
cmp
jg
rcrb
inc
ret
sti
push
add
adc
aaa
mov
push
inc
icebp
mov
dec
push
mov
and
daa
loope
outsb
or
mov
sbb
add
ret
divb
mov
sub
inc
push
addr16
sbb
inc
sub
mov
xchg
decl
pop
xchg
mov
out
ficompl
in
adc
xchg
sub
pop
adc
mov
loope
lcall
or
lahf
pop
mov
adc
mov
dec
les
mov
inc
jmp
popf
add
sbb
pop
movsb
adc
adc
rcll
pop
push
cld
sbb
std
idivl
lea
lock
sahf
shlb
mov
xchg
ret
fwait
mov
mov
sub
lock
mov
dec
add
inc
cmp
sbb
les
jmp
stos
mov
add
and
mov
fs
mov
push
add
add
or
cmc
add
sbb
fs
fists
xchg
lahf
imul
sub
and
loop
jae
iret
cmp
test
shll
add
rorb
rorb
pusha
push
xchg
test
and
push
in
cld
push
imul
jne
xchg
sbb
adc
lock
mov
jne
add
les
loop
pop
in
add
cmp
pop
fdivp
outsl
sbb
xchg
push
xchg
or
mov
mov
int3
sti
lret
or
icebp
jo
sbb
insl
and
push
jg
pop
or
les
add
out
stos
loopne
add
aaa
and
inc
movsb
mov
adc
ja
sahf
add
int3
or
sub
mov
loopne
cli
jecxz
jnp
adc
push
dec
or
xchg
push
outsb
mov
js
daa
orl
add
clc
inc
pushf
ja
add
outsl
push
mov
mov
rcrb
sbb
inc
mov
and
mov
jb
push
push
mov
mov
sbb
gs
xchg
andb
xchg
hlt
pusha
sub
pushf
fists
popa
ljmp
outsb
rcr
out
mov
loopne
mov
jp
push
inc
lock
rorb
fiaddl
adc
pop
in
add
cltd
mov
loopne
adcb
jae
xor
ret
and
fwait
dec
mov
sub
mov
jmp
pop
jmp
mov
clc
je
push
inc
pop
outsl
mov
xor
pop
adc
add
pusha
pop
sub
aas
push
mov
inc
or
scas
jecxz
lock
lcall
ljmp
add
add
xorb
nop
sbb
add
insl
jb
and
or
xchg
es
xlat
mov
xchg
lock
sarb
adc
insl
and
add
adc
clc
add
sbb
rorl
mov
add
scas
or
mov
jne
xor
ret
cmp
scas
test
or
jae
movsb
rorl
adc
fwait
and
add
add
bound
pop
xchg
je
add
or
out
repz
inc
push
push
add
push
sub
jmp
adc
xor
nop
cmp
xchg
mov
dec
gs
pop
adc
or
rol
inc
pop
add
test
movsl
popa
xor
cmp
jnp
mov
and
inc
sbb
out
xchg
mov
cmpsb
hlt
andb
inc
mov
or
mov
scas
add
mov
mov
mov
push
flds
and
and
movsb
clc
fistpll
and
inc
shlb
dec
push
sbb
lea
jecxz
mov
loop
cld
pop
fstp
stos
xor
ret
pop
dec
sub
inc
cmpsl
sti
rclb
push
sbb
jns
loope
sub
dec
ljmp
sbb
pop
dec
jbe
dec
or
adc
cmp
add
sbb
push
ds
pop
adc
xlat
xlat
imul
leave
or
mov
push
ficoms
or
pop
xchg
adc
cmpsl
pop
in
pop
in
pop
cmp
inc
pop
jmp
adc
adc
pushf
jmp
filds
adc
outsb
loop
mov
lods
inc
lds
xor
xchg
push
and
test
adc
push
xlat
rcl
loop
add
xlat
sahf
push
arpl
mov
pop
sub
pop
jg
mov
xchg
jns
mov
aaa
xor
gs
sub
dec
pushf
add
xchg
pop
in
cmp
aaa
pop
fdivs
adc
rcr
xchg
mov
hlt
add
jne
push
call
roll
xchg
adc
add
push
sub
adc
sub
or
mov
mov
pop
js
pushf
je
into
mov
push
sbb
cltd
xor
mov
popa
aas
mov
nop
xchg
xor
lea
or
loopne
mov
scas
or
push
mov
add
mov
insl
in
and
test
dec
stos
addr16
loopne
push
mov
pop
ljmp
lcall
je
mov
inc
sbb
push
add
clc
or
jp
jo
cmc
jne
or
sub
aaa
inc
dec
faddl
std
aaa
xchg
clc
push
loopnew
or
sub
fcmovnbe
and
rolb
and
pop
push
adc
and
sub
push
das
movsb
bound
dec
out
inc
das
xchg
pop
inc
sbb
sub
add
xor
add
or
push
push
xor
out
push
or
sbb
shlb
mov
fcompl
dec
push
inc
repnz
movsb
imul
add
xor
adc
adc
xor
mov
sbb
subl
and
jmp
leave
shrb
nop
lods
dec
mov
inc
cmp
lret
or
mov
mov
hlt
imul
lods
rorb
and
filds
and
daa
mov
iret
insl
xor
xchg
add
add
adc
arpl
and
popa
fisubs
subb
sbb
pop
mov
jns
sbb
lcall
adc
push
hlt
stos
jno
lahf
hlt
ljmp
ret
mov
flds
fs
inc
jnp
push
xor
fists
sbb
and
nop
cmp
and
add
cmp
pop
movsl
add
cmp
lea
nop
xchg
out
add
cld
sbb
jnp
jecxz
aam
dec
sti
add
dec
lret
int
dec
out
gs
les
fisttps
orl
test
dec
pop
clc
or
ljmp
mov
sbb
sub
sub
iret
repz
jg
xchg
out
aas
jecxz
lcall
jmp
adc
cs
dec
xor
sub
movsl
and
adc
mov
mov
test
outsl
adc
stc
xor
les
mov
arpl
sub
jno
incl
adc
mov
or
mov
nop
es
xchg
roll
jg
scas
imul
push
jne
xchg
out
pslld
mov
push
xchg
or
jle
loopne
push
mov
push
adc
loopne
fiaddl
sub
add
cwtl
dec
add
push
mov
shlb
orb
adc
cmp
mov
movsb
xor
adc
add
xchg
nop
xchg
pop
aam
push
rcl
adc
ret
or
sub
and
sub
xchg
nop
fbstp
add
mov
push
dec
xor
jl
dec
xor
lret
rcrb
or
jnp
lahf
mov
sbb
adc
pushl
fmuls
pushf
push
subl
sbb
inc
xchg
xor
xchg
int3
sti
loop
mov
shlb
lcall
dec
enter
rolb
je
pop
filds
cmp
das
lock
movsl
addl
mov
ret
adc
pop
in
add
adc
mov
in
int3
and
in
in
cmp
rorb
popf
mov
call
lock
bound
and
repnz
adc
imul
push
les
arpl
js
adc
stc
adc
int3
roll
add
shrb
fcmovne
aam
in
subb
inc
pusha
mov
scas
or
mov
cmp
and
arpl
mov
fnsave
xor
mov
mov
adc
xor
testl
lods
inc
jle
and
imul
es
and
or
subl
aad
mov
scas
pop
xchg
push
sbb
outsb
insb
cmpb
in
add
in
pop
add
xor
adc
mov
fisubrl
shll
pop
jmp
dec
stos
pop
add
add
pop
roll
in
fildl
mov
lea
inc
push
sub
add
mov
sub
popa
mov
cmpsb
push
mov
sub
test
decb
ret
dec
mov
add
pop
fildl
loope
sbb
mov
or
push
sbb
and
or
inc
mov
ds
inc
andb
clc
push
add
cmp
mov
push
dec
mov
addl
cmp
sbb
and
pop
out
pop
pop
push
sbb
cld
or
mov
sbb
dec
ret
add
pop
jbe
add
pop
hlt
das
outsb
inc
inc
out
push
adc
inc
pop
cmp
mov
or
xchg
rcl
or
xchg
adcb
push
push
shrb
daa
pop
jns
hlt
lret
rolb
xchg
fsubr
mov
fimull
repz
jmp
mov
or
cmpsl
add
ds
xlat
add
fcmovnb
imul
sbb
repnz
mov
mov
lcall
leave
sub
mov
inc
mov
rolb
pop
fwait
xor
ljmp
movb
mov
sub
jns
mov
scas
mov
jl
xchg
add
movb
lea
aam
call
jmp
loope
jecxz
pop
cmp
mov
mov
jecxz
int3
adc
inc
imull
cmpl
add
inc
add
lret
mov
xlat
loopne
orl
inc
shlb
push
mov
mov
jnp
cmp
aad
xor
add
add
cmc
aas
sbb
add
mov
ficoms
loopne
fcmovb
mov
xor
stos
loopne
push
cmpsb
sbb
das
adc
js
cmpsb
inc
fcomp
or
inc
in
dec
loopne
sbb
test
rorb
pop
fsubl
dec
orl
mov
mov
stos
in
jmp
inc
insl
fadds
mov
xor
imul
inc
mov
push
outsb
cmp
int3
push
lmsw
or
js
pop
sarb
test
fisubrs
in
mov
hlt
mov
xchg
fstpt
inc
jbe
xlat
xor
mov
or
adc
arpl
pushf
adc
ficoms
adc
add
push
inc
std
addl
scas
dec
xor
mov
sub
icebp
ret
add
sbb
add
ret
cmp
mov
xchg
push
das
jg
imull
xor
adc
sbb
and
add
daa
or
outsb
loope
mov
dec
pop
jmp
cmp
mov
cmp
inc
add
cmp
lock
dec
in
add
adc
pop
syscall
ret
dec
cmp
lock
stos
or
and
or
arpl
scas
test
add
push
adc
notl
cmc
mov
repnz
mov
pop
and
cmpb
les
push
and
push
push
push
pop
adc
mov
pushf
inc
cmp
sbb
popa
mov
lods
lock
sbb
lock
lcall
adc
adc
mov
rcll
lds
mov
adc
xor
mov
cmp
hlt
adc
daa
sbbb
and
or
lret
fs
idivb
lock
dec
jo
stc
inc
cmpsl
bound
sub
add
shlb
sbb
sbb
cmovg
popf
cmpsb
add
mov
add
sub
push
mov
aaa
jo
pop
scas
push
gs
push
dec
movl
fs
mov
or
dec
add
cmp
xchg
xchg
sar
xchg
adc
sar
inc
iret
lds
fsts
in
xchg
mov
shr
test
push
sti
sbb
sub
dec
sbb
or
and
sub
or
rol
mov
inc
adc
add
push
push
or
mov
adc
or
push
pop
andb
jbe
inc
lcall
rorb
and
adc
pop
movsl
scas
mov
mov
dec
ds
rorl
or
or
call
or
cmp
inc
push
add
jo
add
push
divl
nop
je
adc
xchg
cmp
enter
shlb
clc
clc
inc
inc
bound
nop
ret
js
add
std
mov
xor
and
shll
push
movb
les
xor
inc
push
push
adc
cli
pop
jne
ja
cmp
nop
inc
hlt
mov
test
mov
rolb
adc
iret
xchg
xor
mov
int
cmp
mov
push
push
inc
adc
rolb
mov
loope
rcr
mov
shl
cltd
arpl
pop
iret
jle
aad
cmp
pop
repnz
ds
pop
clc
in
ret
mov
adc
lahf
ret
push
fisubs
or
mov
out
loopne
das
lods
std
popa
clc
inc
push
xchg
adc
nop
sarb
ret
mov
pusha
dec
inc
test
mov
icebp
scas
mov
dec
mov
pop
rcrl
add
aad
in
lock
mov
sbb
inc
or
adc
or
inc
xchg
add
jb
aas
or
rcl
incb
jl
adc
or
dec
inc
outsl
or
push
cmp
sbbl
xor
adc
jne
jno
sub
xchg
test
rol
xchg
pushf
cmc
test
push
jb
lds
xor
adc
dec
push
rclb
pop
push
mov
sub
shlb
sbb
aaa
mov
ret
pop
push
add
jp
movsb
mov
push
bound
mov
pop
add
push
and
cmp
inc
and
xchg
xor
jmp
sti
arpl
fcomp
leave
je
in
enter
push
inc
or
popf
pop
or
xor
fs
in
adc
loop
mov
add
les
inc
xchg
mov
les
loop
xor
pop
pop
xchg
mov
mov
out
mov
add
mov
loopne
ss
adc
add
push
jno
adcl
cwtl
sub
cli
scas
adc
out
adc
pop
aam
sbb
xchg
adc
jp
mov
push
inc
mov
mov
pop
mov
push
ss
int3
addr16
pop
inc
pusha
pop
push
rol
lret
xor
push
push
pusha
loope
cltd
adc
pop
nop
adc
mov
jb
pop
push
enter
xchg
cmovno
and
mov
jmp
std
cld
ss
rcrb
in
scas
scas
leave
or
inc
or
test
and
rol
cmp
sbb
cld
add
push
mov
mov
mov
sbb
adc
clc
pushf
mov
scas
and
idivl
leave
and
pusha
test
loopne
roll
sbb
fs
jmp
psraw
or
sti
out
add
hlt
loopne
pushf
je
sbb
leave
hlt
aaa
loop
in
jne
iret
mov
jb
push
pop
pushf
lret
xor
push
jb
add
mov
lret
mov
pop
inc
cmpl
adc
pop
add
add
mov
cwtl
or
daa
sbb
pop
inc
das
push
push
or
test
xor
inc
dec
xor
sub
cmp
sub
fdivl
sahf
ret
xor
inc
roll
add
mov
lea
mov
les
loope
testb
xor
jb
pusha
int
lcall
add
sbb
add
stc
sbb
push
hlt
xchg
or
mov
xchg
xorl
cmp
push
adc
addb
and
mov
ljmp
adc
mov
mov
mov
xor
ds
mov
rol
enter
inc
add
mov
imul
test
sbb
or
enter
mov
adc
les
xorb
mov
int3
movsl
out
in
xchg
cmp
insl
inc
jnp
adc
ljmp
cmp
int
nop
adc
insl
mov
rcll
enter
jecxz
inc
jl
mov
mov
mov
test
scas
lea
in
loop
ret
mov
shll
pop
push
adc
xlat
add
adcb
fstl
call
jmp
call
xor
inc
loopne
outsb
je
push
jg
mov
outsb
ljmp
and
aaa
iret
inc
or
sahf
je
movzwl
add
mov
or
push
iret
push
push
dec
xor
pop
dec
pushf
test
sbb
and
iret
mov
xor
cmpl
adc
lock
mov
orl
jl
ds
sbb
inc
repz
movsl
fldcw
xor
mov
mov
outsl
push
cmp
mov
mov
movsb
push
jnp
stos
loopne
out
dec
dec
daa
dec
fimull
pop
insl
add
rol
inc
hlt
daa
icebp
dec
loop
sbb
cmpb
push
dec
push
sbb
ficoml
adc
adc
add
test
or
and
xor
adc
jle
dec
scas
adc
shlb
jae
lcall
cmp
cmp
inc
push
adc
cmp
mov
adc
cmp
jecxz
pop
sbb
cmpb
sbb
mov
cltd
imul
pop
shll
push
push
rcrb
stos
xchg
imul
xchg
xor
punpcklwd
idivb
rol
push
out
cmp
cmp
inc
fmuls
mov
lea
pop
adc
notl
pusha
stos
add
lcall
jmp
sub
lock
push
add
movsl
cltd
jbe
loop
and
adc
cmp
lods
cmp
imul
fadd
or
js
adc
int
inc
pop
sti
jb
jo
pop
shrb
orl
mov
push
adc
pop
addb
mov
and
xchg
push
call
je
mov
daa
call
adc
adc
pop
sbb
in
or
fistps
ret
addl
cmp
cmp
rolb
sbb
into
ret
ret
fwait
add
inc
mov
push
pushf
mov
jl
push
push
jge
and
xchg
inc
out
imul
push
adc
arpl
push
push
lahf
and
push
jg
xchg
sarl
inc
sbb
es
inc
je
movsb
pusha
insb
cmpsb
mov
adc
dec
imul
push
or
loop
jo
and
pop
push
xor
mov
test
mov
push
jecxz
pop
push
mov
imul
and
xchg
fdivrl
sbb
mov
mov
mov
sub
add
aaa
push
les
adc
and
mov
loope
enter
addl
xor
insb
loope
inc
mov
sbb
jmp
dec
testb
jo
in
inc
daa
xorps
imul
bnd
hlt
movsl
rorl
jecxz
sbb
ret
mov
aam
and
pop
xchg
mov
inc
xor
cmp
mov
test
fcomps
jle
hlt
pop
sti
and
and
cmp
cmp
sbb
test
or
ss
fildll
add
pop
add
adc
sub
xchg
outsl
daa
lea
fildll
push
mov
pop
adc
xchg
fs
ss
sbbl
aaa
cmpsl
xchg
adc
lea
xor
aas
lock
jne
jne
or
inc
jmp
dec
pop
imul
es
pop
sub
sub
lahf
sbb
int
cmp
xor
cld
sbb
mov
leave
mov
sub
pop
and
and
sbb
push
lock
shl
xchg
or
add
add
aaa
sbb
sbb
adc
adc
sbbl
push
cmpl
lcall
js
adc
out
jmp
jge
pop
clc
adc
sbb
iret
adc
jno
pop
int3
call
fmul
cmpsb
lahf
imul
pop
and
or
push
mov
das
push
inc
mov
mov
adc
and
jecxz
push
push
loope
push
outsl
jmp
sbb
fs
jl
enter
pop
pop
cwtl
sub
test
cmpl
mov
sub
ret
shll
sbb
adc
shrb
inc
adc
popa
lods
add
xchg
jae
xor
xor
push
lret
inc
adc
dec
cmp
xor
adc
push
xchg
fimuls
loope
mov
push
dec
cmp
fldl
pop
insb
test
loope
or
push
pop
pop
rcrb
mov
test
out
dec
mov
add
xchg
inc
inc
inc
adc
repz
mov
cld
call
inc
mov
and
dec
jne
imul
pop
xor
jo
lds
push
sub
pop
lret
clc
mov
xchg
dec
mov
xor
xchg
movsb
inc
or
inc
inc
dec
andl
or
push
andb
aad
outsb
popa
xchg
hlt
pop
rorl
in
fisubl
adc
aas
shufps
jmp
sub
or
push
and
out
pop
movb
test
lea
xchg
cmp
ret
mov
mov
outsl
and
iret
cmp
arpl
clc
or
push
into
push
xchg
or
jge
adc
mov
sbb
andb
loopne
adc
or
cmp
repz
insb
ja
movsl
roll
or
aas
push
xchg
mov
scas
les
in
cmp
je
test
inc
js
popa
or
adcb
lock
push
xchg
jle
test
and
sub
fcoml
jbe
xor
adc
ss
dec
and
lea
xor
insl
sbb
push
or
enter
fmull
sbb
sbb
pop
scas
adc
jge
push
shlb
daa
or
jmp
xor
or
pop
movl
mov
push
inc
pop
cmp
mov
add
mul
dec
add
test
or
xchg
xor
push
jno
or
stos
cmp
and
sub
daa
adcl
cmp
loope
dec
aad
dec
sub
fs
lods
mov
inc
cmp
sub
mov
orb
cmp
in
mov
pusha
push
adc
divb
pop
movsb
jae
aaa
dec
sbb
lea
aaa
outsl
push
cmp
cmpsb
xchg
addb
jl
xor
test
rclb
xchg
sbbb
lods
addb
adc
je
sub
xor
jmp
cmp
or
xchg
dec
sub
sbb
inc
push
fwait
lahf
call
mov
shll
adc
dec
push
mov
xor
xchg
loope
xor
lods
jno
add
adc
int
lahf
or
push
mov
dec
inc
addl
ss
push
push
jl
and
sub
pop
adc
adcb
or
pop
ret
sarb
inc
adc
lock
btc
add
xchg
imul
adc
cmpl
outsb
adc
add
imul
add
fsubrs
sbb
push
mov
jecxz
pop
leave
add
add
cmp
inc
push
push
das
pop
adc
leave
push
jo
aad
loope
add
and
add
js
dec
inc
lret
ss
nop
pusha
mov
push
or
test
mov
add
xchg
test
add
repnz
pop
scas
inc
in
mov
nop
push
repz
adc
gs
or
add
lret
xor
and
add
add
arpl
xlat
jecxz
adc
clc
or
rcl
or
popf
xor
or
in
mov
sub
ret
or
sbb
cmpsl
icebp
or
xchg
jne
sbb
fadds
cwtl
roll
inc
adc
xor
pop
mov
xor
xor
add
adc
or
dec
add
lock
sbb
pop
inc
mov
cmp
popa
add
mov
lcall
mov
xchg
xchg
fcomp
or
cmp
test
insb
fcomps
pop
loopne
pop
push
and
mov
adc
sub
loopne
arpl
adc
rcrb
push
sub
or
jo
adc
adc
cmpsb
or
sbb
test
loopne
xchg
je
call
mov
ds
ret
test
test
jecxz
bound
flds
jno
pop
sbbb
into
call
pop
leave
dec
rol
mov
xor
das
sbb
notb
jg
cmp
filds
andl
dec
rorl
sbb
cmp
pop
xchg
test
ljmp
xchg
lea
js
test
aaa
mov
push
add
dec
js
pmulhw
aam
and
xchg
mov
loopne
rclb
sub
push
adc
shrb
push
mov
add
adc
pop
sub
dec
sbb
ret
aas
mov
test
insb
xor
xchg
add
pusha
test
xchg
aas
loop
lea
mov
ss
daa
loopne
mov
into
aad
mov
sti
pop
or
add
dec
loopne
inc
add
xchg
roll
mov
fcmovnb
lret
pcmpeqb
xor
mov
mov
sarb
pop
orb
or
xor
xchg
or
or
mov
mov
sbb
mov
push
dec
fbld
lds
nop
int
inc
popa
sub
mov
cmp
jle
lret
jne
pop
pop
dec
cmp
xchg
dec
add
das
jle
mov
or
cmp
cmp
and
inc
repnz
cmp
inc
lret
sub
es
shll
in
dec
mov
out
mov
xor
call
jne
add
mov
sub
clc
and
mov
mov
sub
outsb
mov
aam
loop
dec
clc
or
lahf
dec
push
sub
mov
inc
sbb
xlat
add
movsl
or
div
cmp
and
xorb
mov
ror
push
sbb
inc
xor
fistpl
mov
adc
dec
insb
dec
aad
pop
and
cwtl
out
jo
or
adc
adc
adc
jg
sub
sub
aad
push
cld
push
test
push
and
cmp
jne
pop
mov
clc
loopne
roll
ret
sbb
adcb
fucomip
cmp
dec
call
adc
insl
or
mov
les
mov
push
or
fsubl
jno
cld
sub
inc
fdivrl
jmp
add
adc
xor
clc
and
push
mov
aam
pop
js
xor
ret
test
out
outsl
jnp
adc
and
rorb
mov
dec
in
xchg
adc
or
mov
fs
repz
or
jne
jo
clc
dec
dec
sbb
add
dec
inc
or
loopne
and
maxps
and
repnz
dec
mov
inc
sti
xchg
or
imul
mov
mov
or
dec
das
inc
dec
and
push
sub
popa
cmpsl
pop
cmp
sbb
stos
stos
hlt
iret
push
cmpsb
addl
jmp
mov
pusha
aas
mov
arpl
jg
jecxz
neg
mov
sub
mov
fldt
testb
push
mov
adc
add
cmp
inc
sbb
loop
nop
xchg
mov
or
push
ds
jbe
add
rcrl
ret
gs
pop
pop
mov
icebp
aas
push
pop
cmp
imul
mov
lret
imul
cli
adc
cli
adc
insb
jl
roll
shrb
add
cmpsb
pop
pop
js
mov
jns
dec
or
push
add
pop
push
pop
aam
outsb
add
push
les
loope
leave
js
incl
xchg
out
sbb
lret
aas
push
insl
in
xchg
cwtl
add
mov
adc
outsl
dec
mov
jne
xor
outsb
imull
sbb
cli
push
inc
mov
cs
shlb
negb
push
lea
push
cmp
push
inc
ret
and
dec
mov
in
fcmovu
push
or
xor
cmp
adc
push
enter
sub
inc
xchg
xor
inc
push
sbb
pop
and
adc
push
add
jb
outsl
and
xor
sub
addr16
xor
shl
jns
xor
nop
or
mov
jbe
iret
fwait
sub
add
mov
dec
leave
ret
aam
jb
fwait
push
xchg
or
adc
shlb
inc
ljmp
ja
push
push
dec
dec
test
sbb
out
push
mov
rcrb
test
fwait
adcb
add
ss
out
pop
push
das
js
add
mov
xor
mov
outsb
xchg
push
cwtl
addr16
adc
scas
seto
rsqrtps
mov
add
ficoms
rcl
fnsave
addl
pop
stos
mov
pop
xor
mov
and
inc
push
cmp
and
dec
add
mov
pushf
cmp
and
and
popl
test
xlat
testl
push
pop
jl
adc
or
inc
aaa
pop
in
jmp
nop
push
shl
jae
push
jl
sbb
out
jg
sub
les
das
orb
push
jl
mov
lock
cwtl
clc
inc
jg
fwait
or
enter
sbbb
sbb
mov
xchg
push
sarl
mov
cld
mov
lock
dec
dec
repz
mov
jns
sbb
outsl
push
ror
rcrl
lock
inc
fwait
push
ret
or
xchg
aam
jne
testb
shll
mov
fsubr
sbb
xor
dec
je
xchg
stc
outsb
cmp
rclb
mov
sbb
fistl
mov
js
jle
mov
cmpsl
adc
rcll
xchg
int
stos
sbb
add
jle
or
push
ret
push
add
pop
add
dec
in
inc
shr
pusha
pop
mov
or
icebp
xchg
push
add
sub
cmp
lcall
repnz
movsb
das
enter
dec
dec
pop
mov
mov
icebp
in
inc
pop
repnz
push
mov
cmc
push
push
outsl
mov
sti
mov
mov
fsts
mov
lds
imul
or
pop
in
dec
adc
and
and
in
or
mov
sti
inc
roll
cltd
mov
mov
sub
loopne
cmc
incb
pop
xchg
in
xchg
pop
in
loopne
or
lret
and
dec
loopew
loop
subb
repz
scas
ja
int
hlt
je
nop
das
int3
push
and
cmp
push
pop
mov
aas
daa
add
mov
flds
nopl
xlat
addr16
sub
xchg
fsubl
outsb
js
out
pextrw
mov
sahf
adc
adc
imul
inc
add
stos
jne
xchg
fwait
int
inc
mov
dec
or
sub
shrb
and
out
mov
cltd
dec
inc
or
pushf
dec
loop
xchg
pop
mov
xor
dec
loop
lea
adc
mov
and
mov
mov
mov
add
mov
mov
pop
mov
inc
xor
fildl
mov
ss
popf
adc
iret
push
rorw
sbb
and
scas
aaa
jl
ret
movl
out
loopne
les
fistl
xchg
repz
xor
xchg
loopne
jne
pop
or
in
sbb
rolb
xchg
or
fwait
nopl
mov
push
xchg
lahf
inc
dec
inc
fnstenv
add
sbb
jmp
test
filds
or
add
ds
add
pop
mov
and
cmp
mov
adc
sub
pop
add
fidivs
sub
adcb
adc
dec
adc
iret
adc
push
pushf
lret
sbb
push
lock
enter
adc
ds
outsl
pop
mov
sub
push
cli
lock
inc
push
mov
jmp
jo
dec
cmp
pop
jae
push
lcall
movsb
out
sbb
xor
and
xor
popa
bound
aaa
test
jno
adcl
inc
clc
rolb
mov
add
idivb
lock
popf
sub
aad
xor
xor
outsl
dec
mov
push
xchg
and
addb
dec
dec
add
dec
clc
or
fwait
clc
addr16
lds
mov
orl
insl
fistl
cli
add
lea
xor
leave
repz
sub
outsl
sbb
cvtps2pi
jg
or
inc
clc
add
add
push
out
and
add
push
inc
and
inc
adc
push
mov
inc
jecxz
xor
data16
adc
dec
xor
fsubrp
je
sub
sbb
jg
push
adc
pusha
adc
cmp
mov
xchg
scas
adc
sub
add
sub
fs
cld
and
jle
lret
or
loop
mov
adc
adc
pop
push
rcpps
sti
shll
xor
or
mov
dec
xor
and
mov
or
jge
xlat
test
sarb
sahf
loope
add
jg
push
and
adc
or
jmp
or
addb
jne
daa
or
pop
roll
push
adc
pop
add
jmp
ret
and
dec
ljmp
push
or
cmp
sub
shr
insl
xor
inc
jb
jmp
add
adc
je
or
push
push
mov
inc
jmp
fisubl
push
push
cld
or
or
jo
inc
add
dec
adc
sti
outsl
and
adc
sbb
js
dec
push
dec
jo
and
aas
call
pop
or
dec
mov
add
shll
add
mov
scas
dec
pushf
jbe
push
adc
mov
jl
inc
pop
iret
hlt
dec
insb
xor
lea
cmp
rorb
add
xchg
xchg
add
je
push
mov
out
add
dec
dec
loope
sbb
faddp
nop
fistpl
insb
jns
loopne
or
sub
pop
out
subb
popf
push
cmp
pusha
cmpl
cmp
fcom
fnsave
sub
in
adc
nop
shlb
or
daa
add
shlb
adc
stos
push
test
sbb
mov
cmp
setg
hlt
and
paddq
pop
xor
adc
push
pop
mov
enter
insb
je
call
mov
arpl
xor
enter
mov
jb
jnp
fwait
test
dec
adc
addl
push
lods
push
add
es
cmp
cmp
dec
pop
hlt
add
adc
jmp
filds
in
pushf
xor
jo
or
clc
inc
push
enter
and
mov
mov
sarb
xor
movsb
push
jg
pop
andl
test
xor
in
mov
push
decl
add
xchg
fstpl
sub
push
adc
pop
notl
icebp
in
or
cs
push
rorb
or
push
lcall
insl
lods
inc
jg
aad
jo
addl
in
inc
rorb
inc
sbb
test
xor
and
inc
mov
call
dec
dec
neg
imul
push
js
loopne,pt
imul
xor
add
xor
push
fnsave
xor
adc
mov
in
push
xor
mov
mov
fisttpll
lds
aaa
imul
inc
pop
jecxz
add
loop
das
in
in
shll
dec
fldl
or
sbb
mov
and
push
add
js
int
or
xor
push
push
pushf
and
fimuls
inc
mov
adc
daa
push
jl
inc
sub
sahf
push
out
test
add
out
pop
sahf
sbb
push
popf
aam
push
lods
dec
xor
sbb
add
out
xor
sub
mov
das
push
add
imul
jbe
push
imul
pusha
add
mov
jnp
add
inc
pop
add
push
pop
xchg
add
push
cs
add
sbb
add
push
das
lret
leave
sti
xchg
or
dec
pop
cmp
nop
cmp
add
inc
outsb
add
jg
push
int3
ja
and
adc
aam
pop
mov
or
stos
mov
pop
jb
cmp
data16
sub
jo
in
pop
xor
nop
sub
pop
mov
lock
std
pusha
testb
sbb
sub
pop
insb
pusha
pop
dec
dec
push
mov
out
daa
pop
pusha
dec
movsl
sahf
out
shlb
testl
ret
pop
aaa
call
push
rorb
popa
xchg
andl
sbb
cmpsb
add
xor
dec
or
jmp
testb
or
or
sub
repnz
ja
aaa
imul
loopne
mov
adc
sbb
mov
xorb
lock
xor
or
cmp
add
clc
xor
jb
in
jb
shlb
movsl
lret
push
jmp
inc
or
addb
inc
xchg
xor
cmp
mov
xor
mov
pop
pop
inc
add
pop
push
icebp
and
xchg
xor
lods
add
push
inc
push
jle
sti
mov
repz
or
dec
dec
mov
cwtl
pop
inc
adc
outsl
sbb
enter
inc
sub
add
or
add
jp
mov
lea
add
xchg
lods
mov
pop
pop
outsl
lea
adc
add
or
lods
inc
scas
test
loopnew
pop
out
mov
pinsrw
push
leave
leave
in
mov
adc
cmovns
fs
mov
jb
repnz
sbb
push
xchg
sbb
jb
cmc
cmp
pushf
mov
fistl
or
sahf
pushf
in
push
push
mov
and
les
jge
xchg
daa
daa
lret
je
enter
lock
jae
fs
rcll
adc
jb
repnz
aaa
adc
push
mov
jp
push
stos
es
jo
push
and
mov
xchg
rcrl
out
add
xchg
inc
fldl
insb
sbbl
sub
rorb
jg
or
add
or
add
adc
imul
sub
push
imul
xor
cmp
lock
xchg
push
jecxz
lret
inc
fwait
and
mov
leave
inc
testb
jns
roll
iret
inc
and
xchg
add
cs
push
or
insb
sbb
add
or
cltd
iret
and
cltd
jnp
add
adcl
jnp
cmp
les
jp
mov
ret
adc
mov
xorb
inc
sahf
mov
and
fabs
lock
fisubrs
or
and
push
pop
subl
jbe
inc
je
gs
aam
add
dec
filds
js
jae
je
jne
inc
add
pusha
mov
or
mov
add
pop
test
mov
cmpsb
xchg
cmc
add
dec
inc
mov
xchg
mov
jns
pop
add
jg
clc
inc
add
inc
cmp
fwait
popaw
outsb
les
sbb
sbb
mov
inc
stos
stos
push
and
scas
mov
es
mov
sbb
or
test
dec
add
add
adc
jl
or
add
addb
add
mov
xchg
add
push
js
ss
clc
jae
add
dec
out
xchg
subb
insb
add
cmp
push
xchg
fwait
aam
pop
mov
popa
push
sbbb
add
test
mov
push
insl
jle
dec
bswap
test
sub
repnz
inc
pop
push
dec
inc
jecxz
add
push
mov
outsb
and
loope
inc
xor
lods
add
xchg
jmp
add
pop
push
jo
sub
xor
fs
shl
scas
gs
pop
sub
mov
cld
pop
adc
lret
call
enter
js
fs
gs
stc
mov
dec
add
xor
iret
push
jo
fsubrs
pop
jo
xchg
jne
mov
jae
pop
aad
mov
shl
sub
pop
stc
sub
mov
adc
rorl
mov
add
data16
insl
push
nop
xchg
inc
test
cmpsl
cmc
xchg
add
mov
test
adc
inc
or
pushf
dec
je
dec
test
add
not
insb
inc
lret
dec
add
xchg
adc
sbbl
xlat
shrb
ja
sub
icebp
je
and
or
or
mov
jecxz
adc
inc
xchg
jbe
push
imul
aad
adc
xor
and
or
xchg
dec
fisttpl
xchg
or
cmp
cwtl
sbb
xchg
inc
dec
and
xchg
mov
or
mov
or
push
add
xchg
xor
andb
push
inc
dec
or
jne
aas
iret
sub
out
push
adc
adc
sbb
jge
push
xor
push
or
mov
loope
push
mov
ljmp
add
ret
mov
sub
sbbl
mov
add
or
dec
in
add
xchg
inc
dec
aaa
popl
lcall
xor
fidivrl
add
jp
xchg
fwait
lock
adc
push
mov
pop
sub
sub
iret
dec
aam
push
sti
mov
adc
inc
ja
ja
pop
mov
xchg
inc
sbb
lods
movb
xchg
stos
sbb
ds
add
pusha
mov
sbb
sbb
test
pop
cld
aas
and
and
test
inc
or
add
sbb
mov
sub
out
xchg
and
mov
movsb
lret
leave
mov
and
sub
mov
cmpsl
popa
fmul
adc
out
mov
or
pop
or
sbbb
movb
call
clc
adc
sub
mov
push
roll
cmpsb
or
nop
inc
sarb
xor
or
dec
lahf
shrb
xchg
cmpsb
faddp
add
arpl
xor
and
adc
pop
mov
add
or
lock
les
xchg
vmaxsd
pop
lods
daa
xor
xchg
dec
ret
push
and
mov
push
push
pop
pop
adc
sbb
xchg
xor
adc
outsl
push
xorl
je
or
in
lds
mov
jmp
mov
addr16
push
jecxz
xor
xor
ret
dec
xchg
mov
xchg
dec
cld
adc
sub
sbb
inc
cwtl
sub
jmp
adc
rcrb
loopne
inc
loope
and
sbb
es
jo
gs
fnstcw
in
pusha
fldl
add
fdivl
add
or
pop
test
or
and
jmp
in
int
pop
aam
ss
push
lods
and
lret
inc
sbb
push
add
sti
add
lret
movsl
mov
les
pop
pop
or
sbb
cs
out
add
sbb
add
outsl
add
sub
sti
into
fs
sbb
in
and
xorb
rorb
mov
xor
add
push
jp
mov
mov
inc
mov
pop
enter
int
dec
int3
inc
sub
cmp
xchg
addl
xchg
and
sbb
sbb
clc
in
les
inc
inc
test
pop
test
or
sub
mov
and
fptan
fnstsw
lods
jle
dec
dec
jmp
dec
sbb
sahf
ljmp
dec
push
idivl
mov
mov
test
stos
call
loopne
or
add
ret
sbb
mov
rolb
je
cmpb
jp
es
popw
dec
movsb
push
add
add
or
lcall
movl
sti
sbb
ja
add
nop
cmpsl
fdivr
xchg
in
shrb
fdivrl
mov
mov
dec
push
test
cld
aam
or
and
shrb
outsb
xor
inc
jecxz
push
scas
jnp
inc
pinsrw
inc
add
lcall
pusha
pop
dec
stos
mov
addl
add
inc
add
mov
add
imul
adc
push
sbb
push
push
jae
pop
jb
push
pop
adc
ret
neg
dec
push
dec
push
inc
ss
jbe
add
cmpsl
push
inc
js
cmp
mov
out
inc
push
inc
cs
push
push
push
jg
fisubl
cltd
adc
dec
adc
add
or
outsb
push
xorl
shll
push
push
ja
adc
mov
inc
push
push
jb
ret
fildll
enter
inc
dec
orl
and
movb
sbb
or
stos
cmp
int
rol
nop
dec
jge
popa
loop
les
or
pop
pop
andb
out
or
and
negl
sbb
test
mov
stos
out
mov
lds
sbb
inc
js
pop
popa
jecxz
icebp
aad
pop
xor
adc
mov
push
imul
xor
les
push
pop
lds
cmc
pop
xchg
movsb
mov
adc
cmp
or
xchg
cld
dec
mov
hlt
inc
mov
sub
mov
push
and
lret
les
imul
popa
xchg
movl
fwait
invd
mov
sbb
xor
stc
inc
loope
mov
push
sub
xchg
adc
dec
xchg
sub
jb
je
dec
pusha
rclb
cltd
xor
mov
enter
sbb
lods
add
pop
cmpsb
loopne
in
jg
dec
mov
adc
mov
push
mov
pusha
lods
dec
jno
enter
ss
pop
in
jno
cwtl
and
cmp
insl
push
shl
push
xor
sbb
mov
fidivrl
push
xor
adc
sahf
inc
adcl
adc
aad
pop
pushf
adc
mull
sub
inc
or
cmp
les
push
or
xor
or
loop
das
fisubrl
sbb
cmp
mov
xchg
jno
mov
jecxz
mov
loope
cmp
pusha
inc
ljmp
push
outsl
or
xchg
into
hlt
or
addl
or
fldcw
or
and
jb
sub
mov
and
jl
xor
fsubrs
fcompl
dec
shll
aad
mov
mov
cmpsl
lahf
outsl
je
adc
mov
pop
add
pop
ret
add
es
jnp
sbb
es
push
lea
sbb
shrb
ret
mov
mov
mov
out
inc
and
push
stc
and
adc
inc
dec
shl
sbb
sbb
jne
mov
arpl
adc
pop
addr16
fcom
cmpl
imul
cwtl
mov
dec
adc
ss
stc
sub
dec
sarb
cmp
cmp
mov
mov
mov
imul
adc
mov
add
and
mov
and
push
sbb
xchg
pop
mov
xchg
mov
dec
xchg
cmp
push
lods
xlat
fcmovb
xchg
icebp
movb
mov
out
sub
mov
in
icebp
jae
xor
fldt
dec
arpl
xor
lea
add
outsl
xor
sbb
xor
or
or
aaa
scas
mov
movsb
test
push
push
jle
dec
mov
mov
and
dec
movsb
xchg
dec
add
dec
push
sbb
aad
inc
ficoms
sub
adc
pop
inc
stos
sub
inc
adc
and
loopne
andb
push
aaa
shrb
add
test
sub
adc
push
aas
adc
and
sbb
sub
push
xchg
ljmp
mov
jo
loope
setne
push
icebp
mov
inc
sti
add
test
cltd
dec
lods
add
cmpsl
out
inc
rcrl
add
adc
xchg
pop
shlb
add
mov
dec
gs
or
xlat
or
cmp
ss
pop
cs
or
xorl
pop
dec
xchg
into
inc
test
mov
adc
pop
mov
mov
dec
clc
xchg
adc
sti
sub
dec
iret
lahf
jle
or
xchg
push
andb
ja
jno
insl
fsubs
pop
hlt
or
fstpt
add
push
jge
pusha
loop
imul
inc
inc
sbb
xor
add
jg
inc
xchg
push
dec
adc
rol
bound
sti
xor
and
lock
scas
inc
inc
cmp
addl
ds
mov
pop
adc
addl
dec
sub
lahf
addl
jae
sub
and
mov
rclb
adc
jb
adc
lock
das
out
rcrb
imul
push
jno
sbb
xor
movhps
leave
sbb
xor
jbe
rolb
lret
jecxz
add
adc
imul
popf
sub
lods
sbb
scas
push
cmpsl
les
pop
mov
fmuls
sbb
inc
loopne
cltd
mov
pop
and
inc
in
dec
pop
enter
lds
or
mov
xchg
in
push
fdiv
hlt
xor
in
notl
pusha
ds
add
pop
pop
cmp
cmpl
fsubl
xchg
cmp
pop
push
xor
fs
loopne
xlat
insl
loopne
jmp
cltd
imul
imul
imul
xchg
sbb
pop
sbb
enter
pusha
adc
inc
add
lahf
jle
insl
xor
pop
pusha
sbb
mov
push
push
imul
mov
mov
mov
or
or
mov
addr16
test
cmpsl
movsb
and
push
shll
xor
push
lahf
inc
dec
sub
mov
inc
dec
and
mov
mov
lock
dec
dec
dec
dec
cmp
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
dec
dec
xor
xor
dec
dec
dec
xor
dec
dec
dec
cmp
cmp
dec
dec
dec
cmp
dec
dec
dec
and
and
dec
dec
dec
and
dec
dec
dec
sub
sub
dec
dec
dec
sub
dec
dec
dec
adc
adc
dec
dec
dec
adc
dec
dec
dec
sbb
sbb
dec
dec
dec
sbb
dec
dec
dec
add
add
dec
dec
dec
add
dec
dec
dec
or
or
dec
dec
dec
or
daa
daa
daa
and
repnz
daa
daa
daa
daa
cmc
div
clc
sbb
adc
sbb
mov
jle
fsubrs
test
mov
cmp
pop
popa
insl
jp
adc
jo
imul
dec
fisttpl
and
mov
loopne
aaa
pop
dec
pop
sub
ret
sub
sbb
mov
pop
inc
filds
test
push
or
sbbb
add
mov
xor
mov
loop
push
data16
je
imul
add
mov
data16
pusha
stos
and
pop
outsl
loop
fimull
fs
mov
fists
mov
adc
dec
adc
or
pop
add
cmp
mov
push
lret
add
sti
mov
sub
jno
adc
fimull
pop
cmove
adc
dec
data16
and
push
and
scas
fldenv
sbb
scas
pop
sbb
dec
adc
inc
jno
add
mov
mov
push
data16
test
dec
and
or
je
arpl
dec
dec
xor
inc
fdivl
mov
add
insb
or
dec
jae
cs
or
sbb
movnti
pop
inc
andb
cmpsl
stc
or
and
sub
lods
dec
mov
daa
xchg
notl
or
add
imul
and
mov
faddp
push
and
sbb
test
lock
sub
sub
adc
cmp
push
fcompl
fldt
pop
jo
outsl
mov
inc
lcall
or
je
sbb
or
push
outsl
or
push
je
mov
sbb
and
push
or
pop
or
xchg
adc
add
fldcw
es
insl
inc
pushf
imul
pop
sar
lods
jo
push
xchg
jo
je
idivl
adc
insl
dec
pop
sarl
and
cmp
sbb
adc
xor
lret
mov
push
aas
mov
jnp
test
or
adc
pop
mov
jg
inc
aaa
adc
in
lds
inc
adc
in
dec
aam
cmp
ds
in
or
dec
sbb
out
test
cs
jb
fiaddl
iret
push
dec
pop
movsb
cmp
insl
in
lds
add
dec
mov
jp
lea
inc
stos
rorb
sbb
fisttpll
and
inc
fisubs
pop
inc
js
push
mov
es
mov
push
or
jl
jl
add
inc
xor
lea
movl
inc
int
movsl
or
push
nop
dec
sbb
out
ja
or
mov
fcom
mov
and
repz
inc
cmp
mov
add
push
and
mov
cmpsl
ljmp
imul
cmp
push
daa
fwait
push
jmp
inc
cmp
and
and
jg
out
cmp
das
je
push
fsubl
and
adc
addr16
pop
xor
mov
aaa
sub
ret
pop
nop
mov
popa
shlb
adc
mov
push
mov
add
pop
loope
test
or
sbb
es
xor
xor
mov
maxps
pusha
leave
jo
xlat
pop
mov
inc
test
adc
pop
lods
pop
or
xchg
dec
or
push
adc
and
mov
pop
add
add
jo
aas
jp
dec
sub
add
push
or
dec
repz
cmpsl
inc
xchg
xor
xchg
xchg
jbe
movsb
fstpl
gs
dec
inc
mov
std
das
sbb
mov
xchg
inc
rclb
cmpsl
jne
jns
filds
loop
mov
inc
and
andl
push
inc
pusha
sub
aas
call
pop
push
push
jnp
jns
inc
iret
add
aas
inc
cmp
inc
insb
push
inc
add
or
dec
addb
lcall
add
mov
or
pop
adc
or
scas
pop
mov
push
or
in
or
fiaddl
or
nop
lods
push
cwtl
sbb
loope
das
push
pop
dec
jo
dec
in
cld
test
push
adc
xchg
stos
ss
stos
aas
cli
or
scas
cmpsb
cmp
out
rolb
lods
andl
addb
rolb
push
loope
nop
fsubr
xchg
rclb
sbb
jne
js
mov
add
push
add
push
add
rorb
pop
pop
add
jns
js
les
mov
or
out
xchg
inc
inc
in
gs
or
out
inc
ds
inc
or
inc
inc
inc
mov
add
cmp
lods
add
inc
add
test
push
or
pop
rcll
out
neg
sarl
sbb
xor
fwait
in
dec
out
insb
scas
mov
cmpb
cmpsb
and
dec
movl
push
inc
jl
mov
scas
das
push
es
faddl
xor
dec
pop
and
sbb
dec
xor
das
pop
pop
pop
xchg
jl
bound
add
fwait
es
add
popa
xchg
lahf
push
ljmp
loope
and
cmp
sbb
dec
mov
ds
add
sti
arpl
add
sti
inc
or
xchg
fnstcw
or
mov
insl
sub
sbb
pop
jecxz
frstor
fcomps
sub
dec
sbb
xchg
mov
push
mov
enter
dec
inc
jne
pushf
inc
dec
push
cmp
push
cmp
loop
repnz
mov
bound
repnz
dec
add
adc
and
mov
push
xchg
or
cmpsb
pushf
mov
dec
mov
repz
mov
fmuls
fs
add
push
inc
fxam
out
shlb
adc
mov
loopne
mov
mov
loop
les
lock
add
mov
mov
aaa
insb
in
cwtl
xor
push
add
sub
les
movsb
sarb
inc
popa
sbb
fstps
push
pop
adc
aam
or
lcall
pusha
mov
pop
adc
testl
ds
and
lods
aaa
push
add
and
inc
sub
stc
sub
mov
bndstx
ja
xchg
into
mov
lock
lea
pushf
xor
je
mov
or
fisubrs
inc
or
adc
mov
sub
ss
or
sbb
inc
xchg
imul
jae
sbb
es
fmull
cmc
scas
sub
push
shlb
sbb
add
push
and
add
insb
inc
jb
ja
rorb
inc
orb
gs
testb
je
push
jge
jle
rcrb
dec
sbb
pusha
subl
sbb
xchg
cltd
pop
or
loopne
sub
dec
push
xchg
or
incl
popf
jge
adc
das
xor
inc
fidivrl
cltd
add
xchg
pop
mov
and
push
ss
fadd
push
or
pop
pop
or
pushf
cmp
xchg
mov
dec
mov
xor
and
add
xor
prefetch
dec
dec
push
add
out
pop
add
jle
bswap
xchg
jg
testl
adc
mov
mov
adc
in
jg
pop
adc
aas
movhps
mov
or
push
and
dec
dec
push
sbb
iret
cmp
mov
bndstx
lret
lahf
loop
sbb
nop
nopl
dec
sub
negb
add
and
decl
and
push
das
mov
push
clc
movsbw
test
and
iret
movsl
xchg
pop
sub
push
decl
sbb
mov
jl
cmp
addl
push
inc
jb
add
or
or
or
pop
add
pushf
mov
sbb
xchg
xor
pop
or
mov
or
add
add
mov
jbe
or
inc
fld
push
xor
sbb
js
pop
pop
or
xor
roll
push
data16
mov
test
adc
daa
or
js
fwait
repnz
ljmp
popf
rclb
xor
sahf
adc
scas
pop
or
or
cmp
daa
mov
mov
xor
xor
mov
dec
rorl
or
jl
add
ret
or
fwait
pop
mov
pop
add
pusha
xchg
or
cmp
xchg
mov
pop
sbb
add
xchg
or
inc
jnp
inc
shll
ja
push
add
leave
adc
ds
ret
pushl
lods
pop
add
popf
add
or
inc
outsl
fs
mov
or
or
or
sarl
mov
nop
jbe
lock
or
or
es
and
cmp
enter
je
or
push
xor
fcomps
data16
hlt
clc
mov
add
icebp
push
lock
sub
add
lods
mov
or
lock
adc
cmpsl
scas
inc
gs
add
data16
movsb
es
sub
repnz
sub
cld
pop
xchg
add
mov
pusha
or
gs
add
test
jmpw
lret
insl
jno
mov
cmpl
in
in
stos
dec
adc
xor
loope
add
mov
inc
mov
inc
pop
sbbl
popf
inc
pop
ret
sbb
mov
orl
adc
add
nop
push
and
addr16
push
push
xchg
or
test
scas
inc
xchg
jb
push
dec
mov
test
cmp
imul
mov
add
pop
cmp
or
xchg
or
inc
es
xchg
xchg
or
adc
mov
add
pushf
dec
or
mov
mov
adc
lret
adc
arpl
inc
push
loopne
addr16
add
addr16
sub
adc
dec
push
or
sub
aaa
xchg
scas
ficoml
mov
gs
inc
out
push
push
or
inc
cs
sbb
test
movsl
or
inc
leave
inc
and
dec
xor
shrb
sub
outsl
call
mov
adc
and
mov
jl
inc
fcoml
sub
push
and
movsb
jns
test
adc
add
sub
push
sub
sbb
fisttpl
in
sub
shlb
pop
push
mov
pop
mov
dec
push
inc
cli
or
ret
pop
movsl
sbb
push
pop
lds
into
int3
pop
movl
ds
pusha
mov
movsb
mov
push
mov
mov
or
cs
mov
repz
sar
out
push
js
mov
xchg
push
push
mov
xor
mov
xor
jbe
shlb
add
add
add
add
mov
and
mov
sbb
movsb
dec
cmp
add
out
xor
add
push
mov
into
pop
mov
add
pop
and
pop
ret
xlat
je
xchg
prefetch
femms
push
mov
push
punpcklbw
mov
iret
push
sbb
pop
xchg
inc
movlps
mov
or
pop
mov
ds
add
jg
mov
xchg
inc
nopl
jge
cmc
lods
xor
nop
in
repnz
adc
push
pop
cld
repnz
jle
mov
shll
xor
add
jae
and
and
add
jmp
in
xchg
nop
push
mov
mov
jmp
out
andl
jp
cltd
inc
xchg
mov
push
cltd
xchg
cltd
cmp
xchg
mov
cltd
sbb
jbe
imul
xor
rorl
inc
rcll
mov
addb
ss
adc
add
dec
call
lds
dec
dec
cmp
inc
xchg
or
add
add
pop
inc
adc
add
dec
inc
cmp
scas
and
fistpl
popa
lahf
adc
cmp
adc
pop
pop
inc
jo
fldt
das
or
adc
add
shlb
pop
ja
lock
jb
push
cmp
pop
loope
stos
or
and
push
icebp
popa
inc
jp
and
pop
pop
inc
jp
icebp
pop
or
dec
inc
sbb
push
addl
mov
and
sbb
es
sbb
pop
arpl
outsb
jne
mov
add
add
call
dec
nop
cmp
jne
mov
mov
scas
jne
sbb
icebp
pop
or
popf
pop
xchg
mov
lds
decl
ret
fcompl
aas
and
int3
push
or
ja
es
pop
dec
cmp
cwtl
xchg
cmp
mov
test
lea
bound
or
add
sub
push
add
push
dec
sub
addr16
sbb
jo
lcall
adc
sbb
test
out
adc
leave
mov
or
and
inc
imul
leave
xchg
subb
lock
xor
pusha
inc
in
push
sub
mull
outsl
ja
cmc
adc
push
loopne
push
paddw
mov
xchg
mov
push
adc
lea
inc
cmpsb
xor
pop
movntq
out
jb
aad
and
imul
push
int
lret
sti
dec
mov
push
cmp
and
pop
pop
sbb
mov
pusha
repnz
insb
xor
fcoml
mov
sahf
push
test
push
pop
in
repnz
test
movsb
dec
test
mov
xchg
mov
rcrl
ds
mov
in
cmc
sub
pop
pop
xchg
fiadds
inc
dec
xchg
pop
in
faddl
adc
jl
pop
inc
mov
clc
fnsave
les
cmp
mov
push
mov
idivl
inc
jle
push
pusha
das
pop
rolb
outsb
loopne
notl
cmp
div
arpl
push
add
push
mov
sub
addl
add
lods
xorb
or
cwtl
insb
mov
js
pusha
or
push
dec
cli
and
icebp
jge
addr16
call
adc
jbe
mov
punpckhbw
inc
dec
icebp
nopl
movlps
imul
ljmp
fistps
sbb
divb
and
or
lds
cmp
add
sbb
mov
xor
subb
pop
in
mov
inc
sub
repnz
imul
inc
or
sbb
xchg
sbb
inc
sahf
nop
repnz
mov
push
jb
jo
inc
icebp
lahf
sub
pop
inc
add
xchg
int3
dec
mov
cld
inc
call
mov
xor
loopne
and
xchg
or
add
cmp
stc
or
add
sbb
andl
out
pop
out
les
lods
or
inc
cs
dec
pop
icebp
or
inc
inc
inc
inc
andl
out
dec
das
and
insl
jo
and
mov
add
cmp
jmp
stos
sub
xchg
stos
ss
jg
incl
xlat
sub
ret
push
sub
mov
or
dec
xor
and
inc
cltd
pop
rorb
jo
dec
nop
add
add
jnp
sbb
add
xchg
pushf
add
add
jns
sbb
insb
imul
or
xchg
pop
inc
std
mov
dec
fadds
jo
into
loop
cmove
fdivrs
xchg
sahf
mov
loope
test
loopne
loope
sub
dec
insb
es
stc
mov
jo
push
lds
sub
cmp
shll
xor
cmp
out
test
adc
xchg
inc
icebp
jo
mov
add
out
sbb
sbb
movsb
pmovmskb
mov
rcr
jae
xchg
xchg
psubusb
sahf
inc
insl
in
mov
decb
insw
lea
lret
setg
fs
outsb
jo
inc
pop
outsl
fisubs
adc
jo
add
inc
insl
add
mov
rorl
push
lcall
movsl
push
push
je
adc
int
and
enter
es
push
dec
out
imul
adc
sbb
lods
in
sbb
ja
xchg
lods
rorb
xor
push
push
subl
lods
shlb
int3
movsb
pop
ja
sbb
pop
add
dec
or
inc
notl
push
dec
mov
xchg
inc
cmpl
add
mov
inc
rorl
icebp
inc
mov
scas
dec
lret
daa
or
into
push
pop
jp
push
lods
add
dec
imul
in
xchg
repz
in
xor
repz
jl
mov
mov
push
rclb
inc
sbbb
stos
popf
cwtl
sub
mov
bound
leave
adc
or
adc
pop
push
add
inc
adc
pop
daa
insb
mov
outsl
or
xchg
mov
xchg
lret
sbb
icebp
sbbb
out
icebp
push
xor
sub
add
cmc
jmp
pusha
push
jns
stos
sbb
pop
not
repnz
or
and
insl
ret
inc
add
arpl
jnp
add
out
fucom
inc
adc
data16
push
jmp
lds
push
and
add
je
int
bound
push
popf
jae
mov
enter
push
fdivr
mov
sub
xor
pop
pop
sti
iret
pop
ds
jae
je
mov
clc
mov
add
push
xor
enter
and
les
push
mov
icebp
unpckhps
inc
sbb
add
movsb
mov
pop
inc
xor
shlb
jmp
adc
cmpsl
test
push
jp
inc
jns
or
jae
jae
jae
insb
cmc
add
daa
dec
lahf
repnz
jns
push
push
jne
push
push
xor
jno
jge
inc
add
cmp
lods
in
add
fdivs
mov
or
movsb
loopne
cmpsb
cmpb
jle
mov
add
dec
push
pop
ja
dec
sbb
cmp
and
es
add
hlt
outsb
das
fimull
sub
cld
cwtl
cwtl
rcl
testb
and
pop
rolb
adc
mov
xor
dec
xor
mov
in
or
xchg
and
push
mov
aas
insb
out
adc
sub
popa
sbb
push
sbb
insb
mov
mov
pop
jne
or
test
add
xor
das
fwait
and
pop
gs
push
ljmp
push
cmp
dec
cmp
sti
inc
mov
push
loopne
std
pop
ljmp
lock
inc
dec
add
sub
imul
push
test
sub
cltd
ret
scas
mov
dec
jl
inc
out
jle
dec
add
push
aam
xchg
cmp
idivl
cmp
push
ret
in
ljmp
js
lret
js
gs
loope
js
jns
std
and
inc
jns
test
in
daa
loope
jns
cld
jns
jp
into
push
fmulp
psubb
das
jnp
data16
loop
or
jl
adc
movsb
lcall
dec
dec
or
aaa
out
jbe
and
das
dec
or
sbb
cmpsb
sbb
inc
jmp
pop
or
jno
adc
aam
push
xchg
cmp
bound
popa
out
imul
popa
or
adc
test
or
jmp
push
cli
scas
sbb
mov
or
popa
jecxz
clc
push
dec
adc
dec
pop
mov
mov
xchg
mov
mov
xlat
shll
xchg
and
or
sbb
add
and
andl
test
mov
inc
xor
and
mov
cmp
inc
cmovo
or
nop
cwtl
push
xchg
movsl
insb
std
inc
adc
dec
xchg
dec
orl
out
sbbb
scas
int3
inc
inc
ret
xchg
pushf
add
add
jle
es
das
popa
and
mov
fsub
push
dec
push
push
inc
cmovbe
cs
and
movsl
inc
sub
mov
push
scas
ret
cltd
jbe
lods
mov
xlat
add
push
sub
xchg
inc
or
or
inc
pop
dec
inc
repz
push
xor
es
jge
inc
sbb
sti
mov
pop
jle
pop
jne
mov
mov
xor
push
add
test
mov
ds
enter
inc
inc
jg
jl
fcoml
imul
aaa
js
or
push
push
adc
shlb
cmp
sub
xchg
and
xor
xor
sub
out
inc
jp
movsb
mov
and
out
in
or
mull
insb
dec
dec
mov
adc
insl
fildll
dec
shll
jg
push
addb
gs
xor
jne
pop
or
mov
pop
aam
pop
adc
jp
cmp
das
movsb
in
mov
fcompl
inc
cld
lcall
sbb
push
dec
pop
inc
loope
insl
das
ja
and
xor
push
je
data16
xor
push
loopne
push
or
xor
pusha
aaa
push
jo
or
push
cmpsb
aas
mov
push
pop
sub
mov
push
xchg
xor
inc
lcall
js
adc
cmp
xor
popa
ds
xchg
xor
mov
adc
xor
adc
sub
xor
mov
pop
test
rclb
cmp
rclb
and
imul
mov
stc
adcl
fistl
jg
xorb
and
push
subl
xadd
loop,pt
icebp
pop
test
test
mov
ret
xlat
adc
bndstx
aas
pop
sysret
push
adc
call
sbb
dec
dec
ss
pop
dec
pop
xchg
insl
mov
test
sub
mov
xor
das
ss
les
mov
inc
cmp
imul
popa
insb
arpl
shll
mov
adc
aas
addr16
data16
dec
push
and
push
cmp
inc
mov
sahf
das
lcall
push
add
ss
loope
call
gs
add
jae
rcl
adc
xor
cmp
pop
xor
xchg
dec
shrl
xor
push
inc
add
and
or
mov
add
xchg
testb
dec
sub
dec
inc
test
pop
add
dec
pop
popf
js
pop
sub
or
enter
xchg
enter
dec
je
mov
subl
cs
mov
cmp
jo
decb
xor
mov
repnz
movsb
pop
hlt
xor
es
cltd
idivb
pop
loop
dec
bound
ret
cwtl
inc
xchg
sti
cmpb
mov
xor
and
dec
call
push
movsl
cmp
jne
fdivs
leave
pushl
mov
push
jmp
dec
adc
decl
test
fadds
add
iret
pop
clc
es
pop
dec
sbb
mov
mov
test
jmp
arpl
mov
mov
add
push
mov
daa
push
rorb
cmpsb
xlat
enter
adc
jl
mov
lods
dec
lahf
pop
jno
iret
xor
nop
inc
add
imul
movsb
das
adc
and
aas
push
push
push
iret
clc
loope
outsl
aam
iret
cmp
inc
push
jge
out
xchg
test
xchg
inc
inc
data16
inc
iret
js
jl
xchg
sahf
negb
icebp
sbb
push
inc
inc
ss
mov
push
rcrb
iret
sbb
aaa
lods
adc
jecxz
inc
mov
les
mov
mov
cmp
mov
pop
pop
arpl
mov
mov
mov
movsl
mov
in
in
rorb
mov
jecxz
lea
and
jg
lea
mov
jno
rorl
adc
jne
mov
mov
imul
adc
push
outsl
outsl
aas
or
das
sahf
push
mov
imul
subb
loope
pop
lahf
mov
dec
and
test
push
pusha
and
insb
push
gs
sub
cmpsl
mov
gs
adc
inc
sub
pop
sub
rcll
gs
gs
sub
jmp
jno
sub
or
cmp
scas
push
mov
mov
dec
pop
outsb
data16
push
call
cmp
ja
inc
insl
jo
push
jne
dec
inc
and
jo
addr16
popf
add
push
add
or
push
dec
push
push
adc
je
rcrb
mov
addb
push
mov
mov
lock
out
push
push
out
add
roll
scas
out
inc
add
and
sbb
dec
push
fs
in
loop
out
push
jle
dec
inc
xchg
sbb
dec
out
inc
enter
jge
or
dec
push
dec
dec
out
fildll
pop
xchg
jg
andl
clc
or
dec
sub
sub
ja
inc
dec
in
xor
in
xor
mov
or
daa
dec
pop
cmp
push
jge
mov
lods
pop
cltd
and
xchg
mov
loopne
inc
int
shlb
sub
shlb
cld
sbb
nop
inc
nop
das
lock
mov
or
adcl
cmp
push
enter
inc
inc
pop
ret
push
pusha
jno
dec
ss
ret
lds
ds
add
lds
xor
int
or
bound
cmp
sub
add
add
inc
adc
inc
mov
dec
mov
inc
stos
aaa
pop
mov
aam
add
nop
pop
pop
inc
jns
dec
loop
dec
je
pop
sub
or
stc
mov
stos
dec
je
adc
pop
sub
lcall
add
cmc
inc
cmp
add
xchg
mov
xor
and
push
pusha
xchg
ljmp
mov
add
and
inc
mov
sbb
xchg
ret
adc
xchg
xchg
jb
fwait
cltd
adcl
jns
xchg
cmp
pop
mov
add
lcall
adc
and
dec
mov
sbb
mov
dec
jns
dec
or
sub
rorb
rcr
pop
xor
xor
sti
mov
addr16
xchg
inc
pop
jns
fmull
add
popa
dec
mov
and
adcb
jg
add
add
data16
and
or
inc
sub
pop
push
sub
cltd
lods
icebp
adc
push
mov
pop
repnz
mov
pop
rorb
jno
mov
push
or
insb
and
xchg
pop
inc
mov
addr16
xchg
mov
jp
inc
enter
fldenv
clc
sub
push
xor
dec
sbb
sbb
mov
mov
xor
data16
add
jne
add
mov
dec
mov
je
push
add
pop
mov
and
cmp
pusha
pop
add
push
dec
addr16
je
stc
add
rcll
dec
les
push
inc
pop
sar
sub
or
enter
sub
cmp
jne
push
xchg
fiaddl
ret
dec
ret
test
mov
leave
pop
jne
cmp
add
sarb
ss
insl
and
xor
adc
xchg
mov
mov
dec
dec
push
fisttpll
popa
jns
clc
dec
jo
push
icebp
push
inc
cmp
outsb
pusha
sbb
jle
mov
or
vmwrite
push
pop
mov
les
inc
and
clc
add
js
inc
or
cmp
test
add
push
add
mov
lods
fcmovbe
sub
jns
scas
add
testl
pusha
imul
xorb
les
pop
outsl
push
xor
test
movsl
cmp
push
cltd
adc
add
fdivl
into
push
inc
call
xchg
mov
mov
mov
add
sub
jmp
rcl
loope
adc
stos
hlt
repz
xchg
and
adc
in
adc
in
sbb
xlat
das
mov
fldcw
mov
mov
cmpb
inc
sbb
mov
xor
mov
dec
push
lcall
mov
repz
sub
jecxz
notl
or
add
sub
cmp
jns
lcall
test
cmp
push
adcl
add
jmp
sbb
pop
lret
add
in
push
jnp
mov
adc
das
iret
cmp
jg
mov
fsubl
sbb
ret
xchg
inc
cmpsl
xor
cli
dec
cmpsl
mov
test
test
lahf
pop
arpl
jno
in
mov
imul
dec
mov
outsl
xchg
inc
fidivrl
leave
aam
insl
outsb
aaa
dec
push
jbe
cmpsb
pop
xchg
scas
push
dec
xor
test
ret
stos
std
push
sti
add
jp,pn
dec
mov
insb
aaa
pop
popa
scas
mul
add
push
jb
jb
scas
testb
push
xor
cmpsb
cmpsb
jbe
outsb
insl
pop
cmpsl
pop
jbe
jecxz
lahf
emms
leave
lds
lods
mov
ja
pop
in
mov
push
inc
add
sbb
push
outsb
mov
push
sbb
je
stos
lods
loop
cmp
call
jo
push
imul
inc
js
pop
jnp
insl
ja
push
insl
enter
ja
or
ret
inc
sti
mov
mov
sahf
jo
push
or
cmpsb
aad
dec
mov
cmovb
xorl
dec
test
je
inc
xchg
out
dec
or
or
pcmpeqb
or
popa
fimull
mov
je
fistl
ret
in
pop
dec
adc
xor
pop
faddl
mov
sbb
pop
mov
ja
or
or
mov
or
jnp
shll
mov
and
dec
push
sub
outsl
cs
aas
adc
aaa
adc
rorb
bound
ja
stos
pusha
sbbl
push
sbb
push
daa
mov
nop
mov
fldt
daa
jb
aas
daa
inc
shll
push
pop
or
pop
out
push
jne
adc
and
xor
mov
jo
pusha
scas
dec
jecxz
or
xor
repnz
pusha
sub
dec
loop
sbb
inc
clc
dec
pusha
lea
mov
adc
out
insb
xchg
pop
sub
leave
mov
out
and
add
imul
and
jns
adc
or
aas
ds
inc
dec
xor
lods
repz
xlat
stos
cmp
inc
ds
bound
shrb
fldl
scas
cmpsb
scas
fdivs
out
pop
dec
pop
sub
dec
push
push
mov
dec
stos
inc
xchg
notl
sub
pop
mov
mov
inc
roll
inc
xor
dec
cmp
int
call
or
mov
dec
jp
shrd
cs
cs
dec
dec
add
push
push
xor
dec
addr16
pop
dec
sti
scas
push
addr16
jnp
fstl
inc
push
inc
push
adcl
inc
push
or
add
jnp
push
loop
es
shrl
loope
jnp
adc
push
cs
pop
dec
fldcw
dec
lcall
adc
rcr
pop
out
rolb
pop
mov
test
add
pop
adc
insb
pushf
and
xchg
icebp
insl
sbb
cmpsb
cmpsb
jp
ja
movsb
push
push
je
je
es
mov
sahf
xchg
mov
cmpl
or
add
dec
or
ja
add
add
and
push
inc
inc
jae
jnp
pushf
add
and
jo
pop
clc
jge
repz
jl
gs
je
and
adc
imul
or
jmp
or
or
mov
mov
fiaddl
add
mov
fsubs
inc
dec
test
pushf
aaa
push
andb
adc
shr
mov
pushl
adc
mov
test
xchg
pusha
jecxz
mov
xchg
and
xor
addb
movsb
pop
xor
adc
push
fnstsw
fwait
in
adc
jnp
inc
ret
das
rcll
pop
dec
push
xor
into
mov
sbbl
adc
out
fcmovbe
pushf
jl
adc
jbe
xchg
loop
mov
nop
outsl
sub
lea
cld
sub
add
inc
lds
sar
add
mov
movsl
imul
xor
clc
jmp
sarb
push
sbb
mov
cltd
iret
cwtl
idiv
lds
cmp
mov
mov
pop
mov
loop
mov
ret
out
mov
test
push
orb
stos
sbb
hlt
sbb
test
movsl
xorl
cmp
cmp
cmp
push
dec
sub
nop
es
out
jb
sbb
add
cmpsl
or
and
insb
loop
outsl
jmp
adc
xor
mov
sbb
or
add
aaa
cld
adc
or
icebp
rclb
cmp
mov
ret
scas
mov
rorb
and
adcl
pop
jno
nop
inc
inc
loop
jmp
les
xchg
push
xchg
inc
clc
clc
jl
enter
sbb
push
inc
mov
lods
xor
fs
xchg
xor
or
rcrl
pushf
inc
es
aad
push
mov
add
test
es
push
push
or
or
stos
add
stos
cmc
aam
sahf
add
dec
xchg
push
or
pusha
xchg
sbb
pop
pop
inc
stos
mov
push
sub
mov
inc
sub
je
jbe
xor
inc
add
shll
add
dec
or
pop
js
aam
mov
nop
or
push
ljmp
pop
pop
lods
lods
mov
push
adc
push
orl
es
pop
sub
sbb
cmp
jge
and
sbb
dec
fistl
pop
push
pop
or
or
push
push
or
movsl
fcmovnb
das
or
cmc
fidivs
push
xor
neg
test
mov
test
push
and
lret
xchg
insb
jge
inc
xor
inc
lcall
cmp
je
test
ds
jns
stos
out
and
sbb
in
inc
and
andb
add
sarb
fadds
xor
push
stos
add
inc
push
and
and
push
jne
dec
cmpsb
jbe
mov
testl
mov
int3
cmp
jge
sub
test
pop
jno
mov
or
jecxz
in
popa
or
push
fisttpl
inc
mov
or
push
add
gs
fdivl
ficomps
inc
lods
fidivl
push
add
div
push
ret
push
mov
jl
pop
andl
into
xchg
loop
cmp
mov
mov
push
or
pop
lcall
mov
push
mov
or
rolb
push
pop
scas
inc
insb
xor
cltd
push
shlb
xorb
fwait
clc
ret
and
xor
xor
mov
movb
inc
sub
dec
repnz
mov
test
add
inc
mov
mov
sub
jb
lock
inc
test
xchg
cmpl
xor
sbb
mov
leave
test
mov
cmp
in
sahf
nop
loopne
adc
sub
dec
xchg
mov
cltd
push
push
jne
addr16
imul
loope
sbb
inc
dec
inc
inc
inc
or
or
push
add
pop
mov
mov
andb
cwtl
cmp
inc
cmpsl
ja
mov
ret
cmp
xchg
insl
add
xchg
and
scas
sbb
jno
dec
sub
fsubs
clc
jns
je
push
push
push
std
add
push
hlt
call
push
or
pop
mov
aaa
jge
push
push
call
jl
and
xor
cmpb
hlt
lock
push
in
and
movsl
add
popf
sub
push
inc
add
or
ret
and
mov
or
push
jb
inc
je
pop
in
nop
or
add
push
push
inc
into
mov
mov
and
nop
jle
cmp
add
pop
mov
cmp
or
arpl
cld
cmp
cmp
xor
adc
or
inc
cmpsl
adc
subl
pop
mov
cmc
sub
out
mov
sub
or
add
divl
iret
pop
call
shlb
fidivs
aas
nop
jecxz
movl
in
xchg
inc
js
adc
cs
dec
mov
and
mov
and
je
jmp
sub
call
push
adc
sub
in
cmp
in
call
xchg
sbb
nop
mov
cmpsb
aam
inc
cmp
call
push
cmpb
fadd
sbb
movb
pop
jae
and
mov
xor
rorb
lods
mov
shll
daa
adc
popf
testb
push
push
or
adc
dec
push
pop
repz
sbb
fidivs
jo
push
sub
sbb
mov
insl
imul
inc
adc
dec
xchg
dec
icebp
add
test
sub
xlat
cmp
xorl
enter
pop
lea
shlb
adc
lahf
sub
pop
jecxz
loop
sub
add
xor
and
xor
and
mov
lea
insb
fiaddl
add
lea
inc
or
inc
fisttps
xor
hlt
inc
lahf
sbb
inc
inc
sub
dec
gs
inc
mov
sbb
push
mov
movsb
mov
push
inc
pushf
sbb
cwtl
and
mov
xchg
popl
add
sub
and
add
das
daa
int
out
inc
dec
lea
aam
daa
rol
pop
inc
test
jg
addb
sub
pop
push
xchg
mov
push
xor
cmp
fildl
sub
jae
sbb
adc
or
sbb
int3
push
xchg
int3
add
xchg
or
in
adc
ds
cwtl
insl
das
les
pop
xchg
add
and
test
inc
xchg
mov
leave
mov
sbb
adc
mov
sub
mov
inc
jmp
xor
imulb
mov
je
jnp
adc
jne
sbb
and
je
push
or
pop
push
fcoms
fadds
xchg
pop
pop
jle
fsubr
dec
inc
imul
push
push
xchg
in
lock
cs
rol
mov
push
daa
sub
and
fadd
clc
imul
cmp
sub
mov
fwait
scas
xchg
push
add
or
push
push
hlt
pop
jge
push
mov
jge
cmp
push
push
lods
and
sbb
inc
add
mov
inc
xor
push
ja
or
push
repz
les
mov
daa
xorl
inc
pop
loop
loopne
xorb
push
in
call
mov
sbb
fcoml
xor
cwtl
sub
fmuls
insl
adc
in
jne
mov
mov
mov
xchg
push
mov
imul
orl
cmpsl
or
add
mov
sub
and
push
test
mov
cmpsl
or
mov
push
mov
enter
or
dec
shrl
cli
cmp
push
push
loop
ja
sub
push
push
inc
or
test
xor
pop
mov
in
fstl
xor
test
mov
dec
mov
inc
pop
test
je
into
mov
adc
les
mov
xchg
test
pusha
add
jns
mov
push
add
add
movsb
jb
push
or
jle
add
dec
add
adc
popa
sbb
ljmp
or
xor
mov
or
sbb
inc
bnd
sti
aam
stos
int
stc
or
roll
clc
push
or
or
or
xchg
or
sbb
sbb
pop
daa
in
jns
sarb
cmp
and
fadd
movlps
leave
fldt
mov
gs
lret
push
fisttps
rcrl
add
or
mov
sbb
enter
andb
pop
and
clc
adc
daa
mov
inc
ret
inc
dec
mov
clc
nop
addr16
cwtl
ret
mov
scas
dec
adc
mov
xor
adc
aam
sbb
test
es
dec
cld
lea
testb
je
push
dec
mov
repz
mov
fmuls
sub
or
push
hlt
shlb
ret
mov
and
cmpsl
cmp
add
imul
adc
inc
sub
arpl
or
xor
sub
xchg
andl
mov
sub
pop
call
mov
inc
dec
les
sbb
pop
sbb
push
outsb
pop
push
je
add
testb
adcl
addb
dec
adc
adcb
xor
mov
xor
mov
jl
mov
cmp
dec
cli
out
xor
mov
push
inc
add
jno
ja
adc
mov
ds
and
imul
jno
aaa
mov
wrmsr
les
mov
sbb
jnp
mov
pop
and
test
scas
pusha
sub
pusha
sub
shlb
fiaddl
out
fnstsw
push
loopne
roll
mov
and
test
and
or
lds
sbb
dec
flds
jl
adc
xor
mull
subb
dec
push
lret
push
shrb
enter
sbb
sub
adc
in
push
dec
cmpsb
icebp
lods
jmp
bnd
sub
dec
push
mov
pop
push
inc
insb
pop
pop
stos
cmovs
lcall
add
not
and
ljmp
pop
fcompl
mov
enter
fs
xchg
cmpsb
xlat
or
enter
nop
test
gs
push
xor
aam
adc
lock
lods
dec
dec
push
loopne
andb
inc
adc
adc
sub
sbb
mov
adc
pop
cmp
shll
sbb
nop
mov
ret
je
mov
dec
mov
dec
sbb
call
lods
dec
push
add
imul
push
add
or
sub
in
or
mov
scas
bound
xor
bound
sbb
inc
sbbb
xlat
lock
push
inc
mov
pusha
cltd
es
je
jge
jo
das
dec
sub
jb
push
adc
andl
bound
cs
and
push
sbb
das
cmp
adc
std
lods
lret
jno
mov
add
and
stos
cmp
dec
aas
lods
loope
pop
leave
ss
repz
das
fs
xor
sub
pop
push
mov
dec
punpckhdq
adc
xor
or
cmp
leave
inc
xor
push
fldcw
test
push
pop
das
add
sbb
xchg
sub
inc
jbe
or
add
pop
dec
cmc
push
push
push
mov
nop
push
subl
add
test
out
das
lea
les
loope
jmp
test
pop
inc
add
orl
mov
popa
push
sub
int3
hlt
xchg
sbb
fnstenv
adc
or
lret
cmc
jmp
jl
push
push
outsl
je
inc
nop
sub
jge
pop
insl
inc
cmp
test
mov
sbb
imul
in
xor
popf
or
pop
mov
inc
movsl
cmpsb
mov
sarl
testb
inc
call
sbb
lock
ss
rolb
push
out
pop
push
sbb
xor
fcoml
ret
adc
adc
xchg
mov
ret
aam
mov
mov
es
dec
les
add
or
pushf
rolb
jno
loopne
or
aaa
dec
sbb
shll
flds
inc
and
sub
mov
dec
ret
or
or
sub
add
pop
and
fisttpl
test
sub
xor
int3
dec
popf
jne
repnz
xor
mov
xchg
inc
cmp
fs
adc
int3
xchg
push
andl
sub
pop
xchg
jmp
and
in
inc
push
mov
insb
lea
andb
inc
xor
lock
sti
fisubrl
mov
cmpsl
mov
ljmp
mov
fnsave
jns
pop
mov
clc
sbb
add
sbb
inc
hlt
push
sub
dec
or
loopne
movb
shrb
movl
stos
dec
sub
repz
imul
call
add
xorps
loopne
cmp
push
add
sub
test
push
mov
mov
push
add
dec
pop
add
add
add
dec
fadds
inc
adc
in
add
and
adc
dec
sub
sub
pop
sub
mov
pushf
out
pop
push
inc
dec
jne
pop
cmp
pushf
cmpl
mov
adc
adc
mov
add
and
dec
fsts
or
pop
pop
shlb
popa
and
inc
dec
js
dec
jmp
inc
cmp
jle
mov
enter
cmp
mov
dec
jns
jmp
mov
and
mov
inc
jecxz
or
testl
jle
dec
clc
movw
fildll
mov
cld
push
mov
dec
repz
or
pop
shrb
cmp
pop
rorb
jl
data16
jnp
or
mov
rolb
jne
ds
ds
jnp
pop
ret
xchg
inc
movzwl
lea
jecxz
jbe
push
cmp
arpl
imul
add
fsub
data16
orl
push
pusha
sar
icebp
push
sbb
addr16
cmp
inc
and
cmp
je
ja
sub
shlb
clc
andl
ljmp
das
jl
dec
mov
test
in
or
add
mov
clc
inc
js
inc
fwait
add
lds
pop
mov
adc
ficoml
add
adc
pop
push
push
pop
clc
xchg
adc
adc
aas
push
inc
lock
ss
es
mov
fisubl
inc
push
lcall
add
sub
adc
push
sbb
add
dec
enter
push
xor
dec
sub
adc
clc
or
add
sub
add
mov
inc
jb
add
push
outsl
push
dec
jl
mov
outsb
mov
mov
in
shrl
es
in
inc
xor
sub
lret
xor
add
push
das
adcb
popa
adc
xor
imul
nop
push
or
enter
cmp
pusha
ret
push
gs
or
adc
mov
xor
add
rcl
into
mov
sub
and
jae
inc
sub
fldcw
add
jnp
mov
jo
rclb
add
push
jbe
pop
push
shrl
jle
adc
lea
or
enter
insb
pop
cld
push
push
cmpb
pop
adc
call
mov
mov
sub
dec
xchg
or
fildl
pushl
pop
cmpl
pop
sub
jmp
xor
sub
les
pop
cld
adc
or
data16
inc
rcll
test
loop
popf
lods
xchg
dec
mov
test
jne
push
dec
pop
adc
sar
add
test
movsl
dec
jo
nop
repnz
hlt
gs
addr16
add
and
lret
dec
cld
jg
and
adc
cmp
cs
jg
and
xorb
jle
push
adc
aaa
add
dec
jp
nop
popa
push
push
rclb
sar
mov
sub
sub
into
xlat
add
xor
add
out
push
insb
mov
add
or
and
pop
inc
add
adc
and
sar
or
cmp
int
lahf
fcomp
xchg
aad
imul
int3
push
cmp
scas
ss
aad
push
lret
jbe
in
mov
test
push
sti
xchg
insb
mov
ds
push
fdivl
test
mov
jl
jge
and
mov
lret
ret
stos
rorb
cmp
jg
or
jl
push
inc
shl
loope
adc
pushf
adc
add
mov
add
ret
shrb
dec
push
mov
mov
lret
cmp
add
clc
insl
dec
pop
or
push
stos
mov
inc
shlb
add
stc
dec
out
or
cmp
into
mov
negb
aam
sarb
scas
xlat
ss
insb
in
add
sub
lahf
inc
jns
scas
imul
dec
clc
pop
adc
pop
dec
lea
dec
enter
or
lcall
mov
push
pushf
ljmp
mov
insl
mov
push
mov
lea
or
les
ret
adc
add
sarb
dec
pop
mov
add
clc
mov
mov
sbb
inc
aas
adc
inc
mov
ljmp
pushf
orl
pop
xchg
testb
faddl
and
iret
mov
arpl
sarb
pop
or
test
mov
test
xor
shr
push
roll
push
push
or
or
adc
ss
xor
mov
mov
pop
lods
repnz
mov
push
lret
into
pop
and
inc
lock
mov
xor
add
adc
lea
mov
cmp
and
les
adc
jp
cmp
hlt
cmovs
movsb
mov
sub
jmp
mov
push
sub
and
mov
jae
jmp
jl
popa
jmp
adc
insb
and
aas
pop
adc
push
xor
inc
and
jae
and
and
push
sub
mov
mov
hlt
sbb
mov
dec
mov
enter
lock
add
ss
addl
jmp
lcall
data16
call
sbb
push
aas
or
fisubrs
mov
clc
fcomip
js
or
mov
out
aad
xchg
ja
fcmovu
inc
psraw
cmpsb
sbb
or
sbb
pop
sub
popa
imul
test
fildl
mov
lret
jae
sti
xor
and
lahf
hlt
jmp
flds
sub
xchg
push
hlt
pop
popf
lret
lods
imul
pop
das
testb
lods
outsb
imul
mov
add
stc
xorb
faddl
sti
loope
inc
push
mov
push
mov
xor
in
hlt
int3
or
in
fsubrl
sbb
orl
repnz
lock
adc
pop
push
fdivrl
loop
js
es
loope
and
push
imul
aaa
push
aas
push
add
push
lock
lock
rorb
in
inc
fcoms
fidivl
mov
mov
mov
inc
daa
inc
repz
lods
ret
mov
mov
scas
mov
mov
mov
inc
outsb
subb
xchg
jl
add
dec
hlt
out
cmpsb
insl
lods
sbb
in
in
add
jle
dec
scas
fdivrl
hlt
loopne
jne
fcoml
in
pushf
arpl
int3
cmpl
movsl
addb
shrb
movsb
or
inc
and
out
out
outsl
pop
pop
sahf
fnsave
pop
inc
loop
mov
pop
gs
pusha
add
enter
es
adc
mov
out
pop
nop
adc
or
popa
loopne
pop
or
push
adc
movsl
xchg
lahf
sbb
add
inc
or
test
xlat
cmp
adc
add
rorl
iret
pop
movups
adc
cmpsl
pushf
xchg
popa
adc
sbb
das
adcb
je
dec
and
les
fsts
rolb
fiadds
xchg
lret
dec
dec
hlt
les
dec
iret
inc
push
aaa
adc
movsl
bound
and
lods
out
xchg
sub
inc
fldenv
cmp
enter
das
loopne
mov
sub
sbb
loopne
xor
cmp
cmpsb
idiv
and
push
sub
andl
aad
nop
into
adcl
adc
in
mov
imulb
addr16
cltd
or
pusha
xchg
mov
push
mov
rorl
popa
adcl
adc
arpl
and
mov
shl
or
addr16
pusha
or
inc
rcrb
and
add
add
loopne
add
sbb
pop
movsb
jne
add
add
or
xchg
inc
xchg
jae
dec
xor
or
push
in
loopne
ss
test
jecxz
cld
das
cmp
adc
jle
stos
mov
pop
les
push
repnz
inc
pop
add
xchg
and
loope
push
pop
leave
leave
enter
loop
sahf
adc
pop
push
mov
push
inc
jecxz
ja
mov
push
stc
bound
add
adc
pop
inc
mov
test
cmp
sbb
mov
inc
add
and
or
jnp
dec
cmp
add
ret
mov
inc
add
push
and
or
xchg
jae
pop
adcb
dec
jno
mov
jle
or
das
jo
sti
adc
dec
out
adc
hlt
test
rol
push
fwait
andl
mov
mov
out
lea
pop
mov
and
add
ja
and
nop
dec
sbb
inc
cmpsb
rcll
imul
sub
out
and
mov
mov
aad
and
repnz
clc
mov
lods
enter
test
hlt
mov
stc
nop
pop
push
sbb
lock
aam
pop
fs
in
mov
jl
jl
call
add
nop
out
or
insl
outsb
outsb
pop
dec
enter
fistl
sbb
ja
rclb
xchg
mov
ret
dec
movb
aas
in
jge
andl
push
push
shlb
dec
cmpsl
bound
xchg
adc
cmp
pop
push
jp
or
inc
mov
adc
icebp
pop
gs
dec
jne
cltd
xor
or
movl
dec
arpl
mov
adc
inc
mov
lods
popa
enter
rorb
sbb
xchg
test
jae
add
push
das
xchg
xor
mov
xchg
push
and
adc
mov
or
pop
outsl
out
pusha
orl
clc
dec
xor
or
jmp
outsb
pop
ja
pushl
imul
or
fs
adc
and
xchg
ljmp
xor
movsl
pop
je
fsubs
movsb
and
push
mov
cmc
jg
add
mov
mov
push
pop
in
and
mov
sub
or
in
test
mov
mov
mov
int3
cmpsl
inc
or
call
in
jbe
bound
leave
sahf
inc
jmp
jmp
mov
mov
rorb
add
add
orb
inc
clc
push
add
mov
jns
mov
mov
call
in
and
cmp
pop
pushf
es
in
out
add
mov
sub
shrb
out
adc
mov
push
dec
scas
loopne
xor
inc
cmp
push
enter
icebp
int3
mov
dec
call
iret
mov
test
cs
add
adcl
dec
je
and
cmovne
sbb
mov
in
add
cld
adc
cmp
adc
or
hlt
test
and
adc
daa
add
movb
jmp
imul
arpl
xlat
aam
push
scas
or
sub
sbb
add
das
leave
rol
dec
or
xchg
scas
inc
ljmp
inc
daa
je
mov
nop
outsl
fs
cmpsl
movsb
dec
xchg
adc
lahf
push
daa
xchg
test
or
jle
mov
out
fsubr
ljmp
pcmpeqd
push
xchg
and
pop
dec
jmp
bound
xor
bound
pushf
in
add
add
mov
mov
test
in
inc
loop
pop
and
xor
lea
inc
mov
xchg
xchg
in
sbb
test
and
faddl
rolb
shl
sbb
cmp
mov
jnp
leave
mov
and
sbb
mov
mov
out
es
addb
cmpsl
daa
xchg
adc
loopne
adc
sub
ja
rcrb
in
xchg
inc
test
sbb
ret
or
or
movsl
imul
and
frstor
ja
das
push
mov
mov
jbe
test
cld
mov
incl
cmpl
es
xchg
roll
mov
or
je,pt
jmp
mov
ret
xlat
push
fldl
movsb
iret
push
pop
std
xchg
pushf
adc
push
mov
mov
imul
lock
test
or
cmp
add
scas
and
aam
push
out
jne
mov
or
dec
clc
inc
push
call
int
sbb
bound
imul
lahf
push
and
cmp
push
cld
sbb
loope
lock
cmp
fcomps
out
mov
add
add
fisubrl
mov
aam
aas
dec
vmread
daa
add
jnp
mov
mov
pop
inc
cs
cmpl
out
adc
lods
sbb
enter
pop
or
mov
sub
in
or
or
inc
fcmove
xchg
incl
adc
arpl
inc
xor
cmp
inc
jle
push
fwait
loope
dec
xor
aad
nop
in
jno
mov
push
add
call
inc
and
aas
jne
pop
popa
sahf
xchg
xor
psllw
mov
xor
jle
push
push
sub
sahf
adc
sub
mov
xlat
fldl
or
nop
mov
xchg
inc
and
addb
or
cmp
add
popf
xchg
sbb
inc
mov
xor
inc
push
jb
aaa
mov
int3
ret
mov
xor
shlb
das
and
ss
xchg
ja
subb
or
subb
pop
add
or
mov
and
mov
adc
push
jns
dec
ret
xchg
mov
and
sbb
fcoms
adc
popa
jmp
movsb
sahf
cmp
cmp
sub
fisubl
clc
sub
xorb
pop
cmp
cmpsb
lcall
mov
mov
sbb
inc
and
and
aas
lock
mov
xlat
hlt
repz
inc
inc
sbb
ret
je
repz
repz
shlb
xor
and
pop
nop
jo
jl
hlt
xchg
inc
movsl
hlt
out
dec
mov
xor
movb
inc
xor
leave
xor
sub
push
subb
xchg
aad
pop
call
int3
popf
rorb
je
xchg
mov
popf
jnp
pop
add
insl
sbb
and
bswap
or
add
clc
hlt
sbb
push
mov
clc
lock
mov
dec
xchg
cmc
shrb
or
ljmp
daa
fmulp
mov
rolb
and
push
aam
dec
or
mov
push
sbb
leave
jmp
mov
mov
cmpsl
or
adc
in
in
pop
testb
sub
inc
adc
lods
aad
push
and
in
jbe
lods
rclb
cwtl
or
outsb
das
and
add
sub
aas
les
mov
push
adc
cmpb
pop
inc
dec
fistpll
outsb
sbb
test
mov
loopne
imul
xor
iret
jae
insb
cmc
mov
rorl
add
mull
loopne
and
and
sti
test
or
stc
add
cli
js
iret
mov
fcmovnbe
fdivl
dec
add
or
inc
clc
cmpsb
add
push
xchg
sbb
mov
in
ja
dec
imul
push
hlt
or
aaa
push
xor
push
dec
shlb
movsl
cmpsb
mov
sbb
in
and
fists
push
enter
repz
push
scas
mov
fists
push
jo
rcr
adc
mov
mov
addr16
mov
call
icebp
pop
jmp
push
aam
insb
faddp
je
mov
pop
add
push
outsl
lods
leave
sbb
fdivl
dec
or
push
pop
inc
or
out
bound
dec
xchg
loope
rclb
and
or
or
aam
ret
fistpll
sub
adc
xor
pop
mov
cmc
pop
aaa
test
movsl
decl
int3
inc
movb
pop
jecxz
add
and
and
pop
mov
jge
iret
int
sub
adc
dec
imull
call
loopne
adc
dec
push
sub
add
adc
adc
jb
mov
jne
pop
es
ds
repz
test
and
add
and
mov
nop
or
cltd
pop
xlat
add
cwtl
push
in
mov
rol
in
sbb
push
push
xrelease
sbb
sub
xchg
jbe
decl
adc
pusha
addr16
add
addl
sub
dec
mov
int3
nop
or
dec
test
mov
xchg
test
xor
xorb
xor
insl
or
push
aad
sub
filds
push
adcb
inc
sub
addr16
xchg
inc
outsb
xchg
iret
add
xchg
pop
notl
push
addb
ret
push
add
js
rolb
push
dec
adcb
movd
jne
jae
pop
sub
or
pushf
ds
outsb
popa
mov
and
push
mov
add
add
movsb
iret
jmp
lret
shrb
sub
jbe
dec
repnz
push
sbb
test
inc
jl
loope
adc
cmp
xor
fsubs
sbb
roll
push
test
je
call
icebp
jle
and
sbb
mov
jle
pop
dec
inc
popf
ss
popa
fimull
cmp
jbe
push
mov
nop
or
push
xchg
pop
sbb
enter
dec
or
inc
and
clc
in
add
or
out
pop
jmp
xor
shlb
push
test
fldt
enter
mov
addr16
push
cmp
stos
pop
mov
out
fisttpll
and
fsubs
sbb
js
imul
sarb
add
fsubrl
out
and
and
adc
pop
inc
cmpl
dec
lock
out
enter
aaa
adc
inc
cld
inc
and
inc
ja
dec
enter
adc
ret
jbe
rorb
loop
and
insb
mov
inc
add
mov
mov
shll
jbe
mov
mov
add
and
addr16
aad
mov
sbb
cmp
or
int
lcall
data16
fdivl
push
subl
sub
xchg
pop
shl
fwait
add
and
pop
push
nop
dec
and
mov
in
add
pusha
mov
push
pop
mov
jge
pop
call
fsubs
sub
int
cmp
imul
into
or
rorb
fimull
or
aad
dec
lea
push
in
ficoml
xchg
or
js
pop
cmpsl
add
add
andb
bound
lock
jne
xorb
adc
lea
das
and
lds
fdiv
add
dec
sarb
test
sbb
mov
int3
ret
cmp
ret
sbb
cltd
sub
inc
add
aaa
pop
cmp
cmpsl
lds
pop
loope
mov
add
dec
mov
or
cmpb
movsb
imulb
mov
divb
push
repz
push
hlt
cmp
push
sub
and
and
cmp
adc
insl
sbb
mov
cmp
sbb
mov
jns
dec
in
andb
mov
mov
jp
sbb
mov
subb
cmpsl
pop
adc
js
sbbl
and
aas
pop
insb
addb
push
sub
pop
xor
add
ljmp
inc
aaa
lods
add
in
loope
push
sbb
push
nop
pusha
pop
and
outsl
imul
add
adc
sbb
sbbl
or
dec
sub
jb
sbb
push
les
rolb
dec
shl
sbb
push
cmp
rol
xchg
insl
lock
andb
xor
adc
push
mov
test
stc
inc
enter
or
or
cmp
out
or
or
jmp
add
loopne
jle
aad
or
pop
inc
cmpsb
shll
cwtl
sti
adc
or
inc
adc
in
sbb
sbb
and
js
pop
mov
dec
jge
pop
test
roll
loopne
pop
test
ss
or
adcb
sahf
scas
or
push
sbb
sbb
adc
sub
lahf
movsl
adc
xchg
or
lahf
loop
jb
clc
inc
dec
jo
xor
pop
and
aas
test
shlb
cmpb
dec
pop
pop
daa
sub
clc
push
rorl
test
pop
sahf
mov
dec
mov
inc
pop
pop
fwait
xor
push
jle
mov
movsl
vmwrite
pop
test
in
jbe
push
pavgw
adc
sub
repnz
and
pop
mov
int
sbb
sbbl
test
pop
shll
xor
jae
fadds
ret
xor
rcll
setl
pop
outsb
cld
aas
dec
inc
sarb
cli
icebp
icebp
rcll
pushf
ret
push
lods
or
stos
push
in
mov
call
test
xchg
daa
adc
shlb
push
mov
sarb
pop
mov
dec
cmp
scas
mov
fmul
inc
mov
add
jne
mov
out
pop
aas
fadds
xor
pop
push
es
loopne
cmpsb
rol
stc
add
sbb
pop
dec
or
idivb
jmp
adc
es
mov
adc
imul
or
or
fnstenv
rorb
aam
insb
or
mov
nop
dec
or
movsb
or
xchg
pop
pop
pop
mov
sub
sub
jae
pusha
or
pop
cmp
loop
aas
dec
ret
xor
push
ret
movaps
aaa
add
test
arpl
xor
push
inc
orl
bound
pop
pop
loope
jae
stos
add
das
mov
jl
add
shlb
xor
push
jge
outsb
lods
dec
add
inc
mov
jp
loop
stos
pop
xchg
or
cld
cld
jecxz
xor
shlb
jno
sbb
or
xor
inc
fcmovbe
xchg
imul
add
push
outsb
jbe
and
jl
sbb
dec
pop
iret
js
orb
and
cli
ficoml
insb
movsl
inc
mov
ja
add
stos
add
pop
iret
decl
in
mov
cmp
xor
mov
scas
sarl
xchg
lods
xor
sti
stc
sub
xor
pop
cmp
cli
das
mov
rclb
test
fbld
pop
rolb
nop
fs
pop
orl
mov
sub
push
push
mov
or
sbb
dec
jo
push
push
movsb
cmc
xor
adc
out
pop
dec
adc
aam
shlb
sub
pusha
push
lods
pusha
or
mov
leave
and
mov
out
ret
sbb
adc
decl
movsl
inc
imul
incl
das
dec
out
xchg
mov
or
push
fisttpll
enter
cmp
ret
mov
pop
jno
ficoms
and
xchg
fcomp
and
or
adc
rolb
dec
stos
insl
push
mov
mov
iret
decl
jns
or
xchg
jbe
mov
or
sbb
imul
in
stc
mov
test
jle
mov
dec
lock
add
pop
xlat
mov
divb
je
cmp
cmp
pop
adc
mov
jne
movl
add
or
loopne
dec
cmpsl
lods
cld
jle
jmp
cmp
jne
add
or
or
les
jge
jo
jle
sbb
sbb
sub
iret
add
sbb
sbb
and
inc
jne
sub
add
jae
movsl
nop
mov
sbb
push
push
push
push
mov
jge
and
test
mov
ret
adc
cmpb
in
in
ljmp
jae
dec
xor
push
mov
adc
es
fistps
pop
decl
or
cmp
add
xor
mov
aas
fists
mov
mov
mov
in
adc
and
idivb
adc
xor
and
lahf
popa
push
xorl
aaa
and
stos
cli
push
adc
push
push
and
lods
jge
mov
sbb
sub
mov
fsubrs
and
inc
call
push
cmc
adc
pushf
jl
dec
sbb
fistl
cmpsl
hlt
cmp
icebp
push
fiadds
nop
add
je
lock
lret
dec
mov
nop
inc
adc
jmp
mov
insl
pop
sbb
mov
mov
andb
je
mov
pop
daa
sub
roll
push
adc
inc
inc
sub
or
push
mov
sub
in
jne
fmuls
or
inc
push
mov
ret
lock
daa
jne
dec
cmp
jne
mov
rorb
test
push
push
aaa
add
idivl
repz
rol
lock
sti
in
mov
or
sub
mov
jp
fcmovu
imul
jg
mov
sub
arpl
or
sub
movl
jp
pop
test
sub
mov
les
and
fimull
shlb
mov
mov
mov
pusha
int3
jge
inc
dec
sbb
mov
push
or
bound
daa
push
into
inc
xlat
aad
dec
repz
loopne
cmp
loopne
nop
dec
imul
sub
or
int
aaa
xor
cmp
xor
loopne
xchg
sub
je
dec
cmp
jo
jnp
and
or
sti
push
inc
xor
pop
xchg
sub
lods
out
cmp
aam
xor
mov
fistl
mov
ret
pusha
xor
sbb
arpl
dec
popf
add
xchg
dec
dec
xchg
mov
call
xor
xchg
lock
iret
and
xor
mov
sub
pop
inc
mov
in
sbb
and
in
jmp
add
push
cmp
pusha
and
addr16
push
or
push
nop
inc
mov
add
rolb
repnz
js
adc
ret
sbb
fiaddl
mov
ds
lods
loopne
cltd
mov
fcomps
scas
inc
in
es
jne
push
scas
mov
nop
dec
mov
fimull
adc
hlt
mov
sbb
xor
add
mov
test
dec
nop
cwtl
inc
sbb
cmp
call
jle
push
fstpt
test
shrl
in
movsb
lock
imul
iret
testl
mov
je
test
hlt
shlb
or
in
dec
std
cmp
popa
pop
int
mov
xchg
aaa
shrl
sbb
dec
popa
shll
inc
adc
inc
cmp
mov
incl
into
push
ror
cwtl
inc
leave
addb
push
test
xchg
fdivr
push
push
test
inc
mov
cwtl
inc
mov
loop
add
leave
outsl
cltd
dec
add
cmc
fdivl
push
es
sbb
repz
std
sub
test
dec
inc
and
iret
movsl
jne
and
xor
cmp
iret
test
adc
and
push
dec
pop
cmp
and
rclb
jecxz
sbb
mov
pop
sbb
add
inc
jmp
sub
lea
mov
or
add
add
les
or
mov
jne
pop
movnti
lret
or
arpl
cmp
ja
clc
mov
push
hlt
adc
stos
aad
movsb
lock
jbe
sar
push
subb
jno
imul
sub
pop
mov
cmp
push
addr16
push
ja
add
dec
adc
sar
addl
movb
in
push
lea
js
pop
xor
and
je
mov
pushf
js
arpl
sub
ret
sbb
pop
push
ss
adc
subb
iret
push
jns
sbb
loopne
adc
je
jae
pop
movsb
xchg
add
sub
lock
mov
test
and
sbb
sub
adc
and
sbb
out
imul
or
pop
fisttpl
push
sub
dec
in
scas
rol
inc
inc
dec
jl
cmp
daa
add
add
mov
lahf
inc
das
test
dec
push
jbe
mov
shrb
dec
imul
rcrl
pop
leave
cmp
test
fcoms
insb
add
dec
push
and
in
jae
push
inc
orl
es
mov
push
sub
and
sub
add
sbb
mov
sbbb
dec
shlb
mov
pop
cltd
iret
mov
add
xor
sbb
dec
dec
jno
mov
push
loope
jmp
add
mov
lock
out
sub
inc
pop
adc
movd
ds
int3
add
adc
jo
fwait
ds
adc
clc
fwait
test
adc
or
add
dec
repz
inc
and
and
and
inc
and
int
xchg
adc
and
dec
sbb
push
push
dec
inc
adcl
cli
and
jmp
sub
ja
sub
decb
aaa
nop
add
pop
mov
mov
pop
cmp
pop
lea
push
add
mov
cmp
lods
arpl
loopne
leave
sub
mov
cmovl
push
or
cld
imul
or
insb
mov
dec
cmpsl
sub
mov
sbb
xchg
push
sbb
js
xchg
sbb
pop
xchg
pop
imul
adc
sbb
lock
mov
nop
sbb
cmp
pop
dec
lret
adc
and
daa
imul
adc
pop
inc
push
or
setg
mov
jmp
sub
pop
shl
and
or
xor
sbb
pop
xlat
inc
jo
movb
pop
pushf
loope
jbe
xor
mov
sub
lahf
mov
add
add
push
and
push
sbb
dec
or
stc
adc
dec
add
add
jmp
jbe
and
adc
or
je
or
xchg
cli
or
cmp
xor
pop
xchg
mov
xor
sub
dec
pop
or
sub
les
jmp
into
sbb
outsl
or
mov
jmp
mov
or
sbb
mov
push
sbb
ja
sarb
movsb
push
js
push
cmp
adcb
inc
out
mov
mov
sbb
xor
mov
mov
jo
insl
in
and
into
cmp
lods
cmp
mov
dec
int3
pushf
out
push
push
add
mov
daa
push
add
add
and
mov
sub
lret
mov
push
sub
inc
inc
cmp
ja
add
inc
movsl
xor
test
sub
push
test
inc
loopne
movb
add
dec
jns
rol
outsb
push
sub
rcr
sbb
test
push
push
outsb
jbe
add
mov
push
adc
sahf
inc
outsb
sbb
mov
cmpb
or
sub
pop
mov
enter
shl
and
das
inc
xor
in
inc
cld
jne
add
fs
stos
xor
xor
pop
dec
enter
add
addr16
pop
stos
push
scas
pop
pop
cmp
jp
fsts
lahf
adc
cmp
cli
adc
popf
je
mov
add
pop
js
imul
or
shll
adc
dec
negb
add
add
ja
jmp
not
jae
mov
mov
cmp
ret
lret
pop
cmp
push
or
imul
push
xchg
mov
or
xor
daa
xlat
xor
xchg
dec
insb
adc
ja
push
aaa
inc
pop
inc
add
andl
jo
iret
add
mov
inc
push
pusha
mov
inc
pop
sub
call
ret
and
pop
pop
add
add
pop
sub
cmp
push
add
nop
add
ja
lds
daa
push
lods
cltd
scas
or
hlt
dec
outsb
mov
inc
sbb
xlat
jmp
mov
insb
adc
push
adc
or
xlat
dec
movb
push
xor
test
and
jg
movsb
xchg
push
mov
xchg
adc
mov
ds
adc
add
fisubl
push
jp
or
adc
and
inc
sarl
daa
aaa
pusha
add
test
cmpsl
or
push
sub
ljmp
mov
jo
rorl
push
repz
jne
or
xor
fwait
daa
or
ret
add
sub
stos
lods
lods
cmc
pop
mov
sub
add
mov
movb
mov
shrb
loope
push
and
adc
lods
push
fmulp
add
test
loope
fisttpll
enter
jne
insb
add
push
add
inc
filds
in
add
mov
or
ret
dec
inc
mov
addr16
sbb
xor
sahf
and
inc
or
jo
xchg
icebp
push
gs
ss
cmc
inc
loop
lea
add
mov
adc
mov
pop
cmpb
dec
call
pusha
daa
insb
adc
sub
sbb
lea
pop
sub
xchg
sbb
cs
sarb
dec
sbb
xchg
les
popa
sub
push
in
cmp
dec
imul
add
and
or
je
cmp
lahf
loopne
sar
in
add
add
sahf
andl
and
orl
xchg
stos
subl
lds
lods
les
jns
add
or
or
cld
jns
shlb
ret
out
or
xchg
pop
outsb
sbb
adc
sbb
sub
xchg
mov
add
inc
xchg
pusha
sub
nop
ja
push
rclb
push
or
and
pop
xchg
xchg
mov
push
mov
dec
dec
add
pop
pop
pop
mov
mov
sub
cmp
fstpl
fidivrl
inc
adc
jne
rorl
dec
push
loop
pop
add
sub
lea
add
push
sub
mov
addr16
and
pop
arpl
inc
adc
sub
rorb
add
fstpt
mov
inc
xorl
or
fs
mov
and
sub
sbbb
mov
ds
into
push
xor
mov
rcrl
add
jbe
lock
add
mov
cwtl
or
sbb
inc
sub
xchg
and
add
cmpb
or
or
mov
andb
in
jno
das
or
lods
jo
add
int
pop
adc
aam
int3
jmp
jbe
sbb
sub
test
loopne
daa
add
rolb
and
adc
subl
or
add
add
mov
mov
rclb
pop
or
inc
fcmove
jae
das
int3
int3
fildll
pop
add
pushf
push
jns
xor
in
jmp
mov
dec
rsqrtps
sahf
inc
in
xor
adcb
dec
xor
sub
push
adcb
scas
loope
in
pop
push
or
and
mov
adc
sbb
sub
pop
dec
and
test
rolb
enter
insb
xchg
out
mov
cwtl
and
xor
and
sub
xchg
es
push
xor
push
test
jl
out
inc
mov
rorb
cmpsl
leave
fsubr
add
push
mov
adc
cmpb
inc
pop
pusha
or
sbb
push
pusha
mov
push
ret
and
rolb
cmp
push
inc
ja
rcr
je
outsb
or
imul
push
into
test
lret
jne
adc
arpl
push
cmp
fstpt
and
stc
pop
sub
add
pop
mov
or
pop
push
jle
fdiv
sbbl
dec
mov
in
or
mov
add
imul
or
inc
int3
sbb
or
pop
lods
sub
add
mov
hlt
jle
sbb
xchg
add
or
or
mov
mov
pop
and
push
pop
mov
mov
inc
sarb
or
inc
add
jns
in
mov
xor
loop
sbb
push
jo
loopne
sub
outsl
adc
push
push
sbb
push
jno
jne
daa
call
mov
cmpsl
sbb
jmp
rorb
mov
mov
add
xchg
lea
ror
test
pop
xchg
jmp
push
xchg
in
inc
adc
popf
addl
add
addr16
mov
xchg
or
jmp
push
pop
push
pusha
xchg
idiv
sarb
lret
and
or
sbb
or
movsb
add
ret
std
mov
jl
inc
sub
xchg
inc
mov
sbb
out
add
or
mov
mov
and
adc
xor
sub
inc
or
xor
xlat
adc
and
adc
pop
add
pop
adc
pushf
cmovns
jl
loopne
sbb
jge
sbb
lock
jb
repz
imul
mov
or
pop
mov
jmp
movb
lea
sbb
call
mov
inc
and
arpl
mov
and
or
sub
pop
inc
inc
push
or
jmp
mov
inc
add
xchg
es
mov
push
mov
xchg
cmovle
mov
jo
push
mov
inc
mov
dec
push
cmpsl
sbb
stos
ret
or
es
jmp
pop
leave
jle
ljmp
lret
add
xor
dec
pop
push
jge
lea
loopne
nop
inc
pop
cld
add
dec
mov
shr
scas
lret
insb
or
cmp
jnp
pop
inc
out
jmp
rorb
enter
xor
add
ret
lock
add
xor
fdivr
and
inc
xchg
inc
lock
je
cmp
mov
add
add
or
xchg
pop
add
adc
je
hlt
pop
out
or
mov
jmp
lcall
pop
scas
and
out
popa
stos
shlb
lgdtl
xchg
sbb
or
and
mov
into
shrb
inc
popa
mov
jo
and
fwait
cmpl
insb
cmove
pop
rolb
add
pop
sub
or
and
in
push
or
inc
movsl
xchg
mov
in
sub
shlb
and
aam
or
inc
push
push
or
cmp
ja
or
inc
and
pop
pop
push
rclb
shrb
jle
outsb
pop
cmc
xchg
test
pop
xor
mov
inc
sub
rcll
scas
push
inc
mov
mov
imul
jmp
push
sarl
fisttps
cmp
add
xorl
push
fimull
popa
jne
push
lcall
sub
jae
jo
adc
jbe
adc
adcl
or
or
leave
adc
adc
adc
out
cmp
into
push
sub
dec
bound
pop
cld
out
daa
and
mov
pop
jnp
mov
lods
or
cmp
sub
and
lock
push
push
cmp
push
inc
and
or
mov
inc
push
push
jle
scas
icebp
or
flds
sti
ror
pop
jmp
inc
push
xor
sti
daa
fistl
je
ss
jns
or
jno
mov
or
sub
push
out
dec
inc
sbb
andl
aam
in
ss
stc
rclb
shrb
out
je
das
or
roll
cmp
pop
je
das
dec
cmpb
test
dec
fcoms
and
test
mov
sahf
aas
sbbl
add
sub
push
repz
testl
mov
xchg
sti
jle
iret
in
jno
jl
adc
in
inc
cmp
xlat
sbb
push
add
test
repz
adc
mov
add
cmp
jo
rol
add
and
popa
lock
sbb
push
mov
pop
adc
xor
aas
cmpb
dec
adc
rcrb
loopne
sbb
in
add
and
shl
inc
sub
adc
push
pushl
sub
or
popa
xchg
jno
rcll
push
cmp
adcb
and
push
wrmsr
or
pop
aam
pop
call
enter
xlat
loop
adc
jecxz
cld
dec
pop
js
dec
arpl
xchg
sub
add
fmuls
mov
ret
or
pop
ret
les
xchg
mov
es
or
mov
fwait
rolb
adc
out
mov
imull
test
insb
idivb
aas
ss
cmp
mov
in
push
testl
dec
cmp
cmpsl
inc
and
movsb
arpl
pop
adc
data16
push
adc
inc
and
clc
in
add
add
and
stc
inc
loopne
xchg
clc
call
cmp
jns
movsl
cmpsl
mov
sub
hlt
fs
adcl
es
pop
mov
push
lret
sarb
inc
mov
inc
roll
call
mov
test
xchg
and
ds
jne
dec
xor
sbb
clc
pop
pop
add
push
adc
cmp
mov
filds
push
xchg
sti
loope
fs
dec
pushf
xchg
sbb
and
test
xchg
rclb
mov
xor
sbb
loope
lods
lea
or
sbb
jne
mov
inc
inc
jnp
or
push
add
mov
das
pop
jo
xchg
adc
lret
mov
jnp
movsb
xorl
out
test
push
out
inc
inc
add
jne
xor
xor
add
pop
push
or
arpl
add
loope
adc
sbb
stos
dec
mov
sub
orb
xchg
gs
add
sub
lret
push
mov
xchg
mov
sub
loope
sub
xchg
int3
imul
or
and
idivl
xor
adc
xchg
or
cmp
flds
jle
push
mov
add
push
and
lea
add
push
imulb
mov
or
mov
pop
pop
lret
push
test
sub
or
ud2
das
inc
addr16
jne
test
test
ja
jo
pop
sub
xchg
in
ret
rolb
or
rcrb
loop
or
lods
loopne
in
movsb
xchg
or
pop
push
add
cmp
push
push
add
test
sub
sbb
mov
pusha
adc
adc
rol
pop
and
sub
mov
gs
or
jle
inc
ss
mov
test
sbb
popa
or
adc
out
repz
push
adc
leave
add
enter
xor
inc
cmp
add
inc
js
mov
ret
add
or
inc
push
outsb
sbb
shl
cmp
clc
jmp
xchg
jns
add
xor
mov
mov
das
push
cmp
xor
int3
mov
pop
cmp
jb
test
sub
push
and
add
cmpl
add
imul
fwait
je
daa
push
lret
shlb
icebp
nop
sbb
daa
idivb
nop
xchg
cmp
jne
add
push
push
add
in
dec
adc
test
popa
dec
inc
xor
jmp
jo
jecxz
cmc
and
dec
add
mov
inc
push
xor
xor
xchg
fstpl
icebp
shll
or
cmp
lea
call
cld
cmp
cmp
movsl
test
ret
xor
loopne
or
es
lds
neg
xchg
test
dec
cmp
xchg
dec
dec
jmp
mov
rorl
int
dec
pushf
call
aaa
int3
inc
imul
jmp
and
jmp
sbb
les
stos
clc
pop
aas
jo
xor
test
or
aaa
jmp
xchg
ret
mov
or
pop
push
pushf
xchg
inc
loope
and
mov
rcr
adc
xchg
adc
lea
nop
or
shl
mov
or
jp
dec
add
xor
nop
cli
or
mov
push
inc
dec
test
notl
aam
mov
mov
add
push
scas
ret
add
mov
scas
cmp
ss
sub
dec
mov
arpl
pop
movb
rorb
push
cs
and
xchg
adc
add
imul
inc
int3
push
and
jp
inc
repz
fisubrl
xor
and
adc
pop
ss
sub
neg
iret
lcall
or
lret
mov
cmp
mov
push
adc
fcomps
pop
jo
subl
jo
mov
daa
sbb
xor
sbb
addb
sub
test
sbb
in
dec
es
ljmp
push
jae
test
call
addl
iret
js
and
roll
xor
cmpb
xor
dec
test
imul
and
out
ljmp
dec
pop
mov
cmc
loop
adc
dec
sbb
inc
xor
scas
ret
jge
sub
sbb
mov
es
pop
and
inc
insb
rclb
dec
xor
lods
jl
call
sub
add
sbb
in
cs
movsb
je
dec
push
sarb
repnz
mov
inc
mov
or
leave
lods
add
adc
inc
and
cmp
loopne
stc
sub
add
jns
and
dec
inc
leave
adc
fistpll
popa
imul
cmpb
sbb
aad
sbb
call
sbb
sbb
sbb
cmpl
scas
pop
and
lock
or
in
and
sub
inc
fcompl
adc
xor
sbb
and
push
sub
cmp
aas
sbb
jge
test
sbb
testb
das
sbb
lcall
xor
xchg
cmp
mov
sub
mov
incl
pop
inc
add
lods
or
xor
adc
aas
push
dec
or
inc
dec
arpl
mov
loopne
iret
xor
ret
sub
pop
xlat
adcb
sbb
dec
ret
or
sub
mov
lcall
inc
or
lea
int3
or
pop
inc
je
cmp
inc
jmp
cmp
jmp
dec
nop
sub
stc
inc
fildl
add
push
add
inc
mov
stc
and
xor
rcrl
int3
fcoml
jo
mov
iret
cmp
notb
dec
inc
mov
push
cmp
orl
dec
out
sahf
xlat
xor
push
jbe
cwtl
test
mov
movsl
cwtl
imul
jmp
and
sbb
movsb
mov
paddusb
add
or
push
fcomps
or
pop
imul
add
push
stos
mov
xchg
add
in
ret
inc
xor
xlat
hlt
jecxz
and
mov
mov
scas
sub
sbb
stos
rolb
mov
push
out
fildl
sub
jmp
jb
or
clc
inc
dec
xorps
cld
push
sub
orl
lea
push
push
enter
lods
or
orl
aam
and
jns
mov
xor
mov
and
cmpb
dec
sub
push
fwait
insb
mov
scas
das
sbb
ffreep
jno
js
xor
pop
sub
sub
sub
jge
or
lcall
popa
cmp
int3
push
pop
dec
adc
mov
ja
xchg
adc
test
pop
into
mov
xor
movsl
dec
lea
push
mov
dec
cmp
imul
push
fdivrl
mov
or
add
mov
or
jne
pop
out
push
adc
pop
and
and
xchg
pop
mov
dec
out
adc
push
xchg
push
or
or
add
lods
clts
and
ret
xor
movsb
pop
nop
dec
clc
mov
popw
xchg
cmp
sbb
js
lods
mov
rorl
movsb
out
sub
sub
push
inc
sbb
mov
xchg
push
sbb
xchg
addl
in
push
pop
adc
bound
pop
popa
mov
inc
add
xchg
mov
dec
and
cwtl
push
movsl
mov
aaa
jae
cwtl
or
lahf
pop
scas
and
bound
add
pop
dec
push
adcb
out
cmp
das
push
dec
bound
xchg
je
je
jae
ficomps
mov
dec
and
push
xchg
push
inc
push
xor
dec
push
aas
xchg
adc
push
cmpsb
inc
pop
mov
jbe
or
add
or
dec
mov
sbbl
mov
xor
or
mov
xor
or
inc
addr16
jge
dec
loopne
mov
testl
lds
stc
push
mov
jno
iret
test
add
rol
arpl
xchg
xor
push
pop
pop
pop
shl
or
divl
sbb
movsb
das
rolb
dec
outsb
pmuludq
aaa
mov
dec
lret
insb
enter
mov
add
sbb
loopne
and
xor
adc
ficoml
aaa
and
sub
sub
jne
orl
movl
js,pn
icebp
mov
cmc
xor
sub
push
jo
adc
xor
mov
mov
mov
cmpsb
or
dec
pusha
mov
xchg
mov
inc
push
out
arpl
and
push
and
test
dec
mov
inc
lods
mov
add
mov
ds
or
sub
cmp
andl
outsl
stc
inc
js
pop
and
aaa
bound
pop
imul
add
pop
add
in
dec
fadds
nop
xor
mov
test
push
xchg
inc
andb
xor
sbb
dec
xor
jo
arpl
in
rorb
lcall
out
inc
pop
iret
adc
and
jns
dec
or
inc
mov
das
xor
clc
dec
or
inc
sbb
das
js
rolb
hlt
adc
jle
or
jne
inc
cmp
roll
dec
and
jns
or
mov
push
outsl
lret
jmp
mov
sub
aad
jmp
cmp
pop
add
gs
hlt
or
mov
insl
and
xchg
lcall
push
mov
and
popf
ret
pop
dec
jp
fst
mov
add
aam
inc
loope
adc
stc
push
adc
push
adc
ret
cmp
loop
repnz
sti
push
out
test
pushf
adc
movsb
sub
jo
pop
sub
push
cwtl
adc
xor
in
loopne
or
jns
cmp
sub
mov
inc
push
sbb
jbe
add
out
xor
mov
cltd
das
aad
inc
mov
inc
cmp
orb
push
test
pop
pusha
and
or
in
insb
jmp
decl
mov
in
mov
cmp
mov
dec
adc
jge
push
adcl
and
jg
aaa
add
pop
inc
je
in
jne
mov
dec
aas
ja
xchg
insl
xor
loopne
push
jne
sbb
sub
sbb
jne
sar
and
fdivrs
add
jo
sbb
shrb
hlt
inc
mov
outsl
lea
mov
sti
roll
or
jmp
insb
outsb
jb
icebp
movsb
pop
cwtl
pop
addb
das
sbb
out
sbb
mov
insl
lahf
mov
sbb
rol
jb
pop
adc
inc
loop
pusha
or
mov
fsubl
roll
and
xor
jg
add
dec
cmc
xor
rcll
ret
subl
adc
xor
test
dec
add
decl
cs
adc
dec
inc
dec
inc
dec
dec
inc
pop
inc
push
push
bound
jo
add
add
jne
dec
test
adc
adc
cmp
jmp
cmp
rclb
sub
js
insb
outsl
addr16
lods
aam
fidivrs
ja
sub
lret
mov
adc
and
ret
add
js
sub
je
xchg
imul
jmp
mov
fwait
inc
xchg
and
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwtl
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
push
push
push
aas
xor
or
popf
rolb
add
adc
bound
and
or
out
imul
xchg
popa
cs
mov
rolb
subb
adc
out
vcvtpd2psy
fs
fiaddl
cmp
and
push
inc
in
in
mov
rcr
sbb
shrb
loopne
fdivl
xchg
fcomp
cmp
test
iret
in
out
and
test
cmp
int
pop
decl
xchg
xchg
push
pushf
jbe
sub
out
stc
sbb
cmpsl
add
dec
cmp
or
lock
int3
mov
fmull
call
mov
hlt
clc
cld
xor
fwait
lea
sti
add
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
xor
xor
dec
dec
xor
xor
push
push
pop
pop
xor
xor
pusha
fs
xor
icebp
cmc
xchg
mov
push
cwtl
jno
cmp
mov
mov
cmp
jnp
cmpb
pop
sbb
dec
xor
adc
sub
add
and
jne
add
lret
push
enter
sbb
rclb
aam
fcomps
fcomps
fcom
and
xlat
and
add
loopne
in
push
call
add
lock
fdivr
hlt
xchg
xchg
add
adc
ljmp
add
sub
push
sbb
push
gs
adc
test
pop
mov
sbb
push
sub
and
adcb
sub
push
sbb
in
lret
add
or
cmp
push
sbb
dec
gs
sub
nop
xchg
add
les
movsb
xor
push
in
and
pop
push
push
push
movsb
xor
fs
nop
lret
shrb
cs
or
jo
in
jge
je
xchg
inc
pushl
retw
add
dec
jmp
insl
into
cli
test
push
jecxz
add
sbb
aaa
xor
add
inc
lcall
movsb
mov
adc
imul
push
insl
add
xchg
lcall
jbe
or
jae
andb
in
addb
inc
sbb
push
pop
xchg
dec
dec
jg
inc
push
fisubrl
pop
add
stos
addr16
push
ret
mov
dec
or
jae
or
mov
es
gs
dec
xor
pop
sbb
cmp
stos
test
icebp
dec
dec
ja
scas
mov
pop
out
outsb
jb
aaa
pop
push
or
mov
fidivl
xchg
aaa
inc
and
inc
push
fcomps
aaa
dec
mov
sub
pop
pop
cmpsl
and
push
ljmp
fstpt
insl
aaa
mov
jo
js
pop
sbb
push
ja
outsl
dec
ds
aaa
mov
mov
pop
mov
inc
lahf
fists
movsb
lods
or
ja
inc
in
inc
dec
push
insb
jnp
inc
loop
xchg
lret
xchg
fidivrs
addb
jne
push
bound
imul
jg
add
fldt
insb
lods
cmpsb
pop
repz
fidivs
mov
mov
lea
loopne
mov
sbbl
add
pop
mov
imul
jae
scas
arpl
add
lret
dec
div
cmpsb
mov
incl
shll
adc
imul
adc
xchg
mov
pusha
test
shll
call
sub
xor
add
lds
sub
mov
mov
push
les
jg
push
lret
in
push
adc
dec
shrb
dec
push
dec
push
cmp
inc
pop
fisubl
dec
mov
dec
outsb
pop
out
in
cmp
stos
push
fiadds
adc
shlb
sahf
sub
push
insb
fdivl
pushw
or
stos
andps
nop
mov
pop
test
add
paddsw
test
addr16
movsb
jbe
pop
sub
adc
jle
ja
push
add
pop
push
sub
mov
push
xchg
clc
ljmp
or
in
inc
xor
and
xor
push
inc
cs
cmp
jg
adc
into
leave
daa
add
dec
jno
pop
push
jo
xchg
pop
dec
pop
push
iret
dec
xor
xor
loopne
arpl
xor
push
inc
jle
adc
es
xor
lds
mov
mov
sub
psrlw
pop
push
jecxz
ss
bound
and
loopne
mov
rolb
or
mov
mov
sti
mov
mov
jnp
inc
and
cld
add
inc
mov
sub
push
popf
cmp
dec
jb
daa
test
inc
ret
outsb
das
mov
shll
dec
or
cmp
jno
repnz
inc
sub
in
enter
push
push
sub
lock
lods
pop
jb
jb
add
inc
and
push
mov
inc
fisubs
jl
mov
cmp
je
sub
lods
dec
outsl
pop
pop
jo
adc
mov
mov
icebp
dec
sbb
dec
mov
mov
xchg
dec
add
in
lock
int
cs
adc
jg
call
sbb
rclb
dec
fdivrs
movsb
fidivl
or
mov
xchg
loope
adc
xchg
adc
add
bound
jmp
les
test
lahf
cmpsl
mov
mov
and
add
fidivl
test
inc
fs
rolb
dec
sti
inc
int3
test
lock
inc
pop
sbb
jae
inc
in
jbe
loop
mov
orl
cmc
cmp
jae
add
subb
add
bound
mov
mov
pop
and
mov
pusha
dec
push
daa
lods
adc
jp
sbb
add
addr16
imull
sbb
paddw
jne
sub
push
jne
pcmpgtd
idivl
pop
xchg
stc
decl
jo
mov
push
cmpsb
and
les
sbb
sbb
sub
xchg
cmp
insl
dec
cmp
and
pop
rcll
dec
sub
or
push
lods
lea
and
mov
outsb
and
xor
mov
and
mov
popa
out
pusha
or
inc
mov
xor
pop
adc
add
adc
inc
ret
inc
and
xor
ja
cmpsb
push
add
dec
pop
scas
or
test
mov
mov
or
ja
inc
fs
push
ds
cs
loope
mov
cs
sbb
dec
or
sbb
pop
es
sbb
mov
add
ja
jno
addr16
sbb
cmpb
add
jp
and
stc
fcoml
pop
mov
movb
pop
test
sarl
sbb
push
es
push
mov
enter
ds
ss
cmpsl
dec
xchg
jae
inc
sbb
or
addl
inc
or
add
js
xlat
sbb
push
shll
push
xor
sbb
add
adc
push
push
out
sub
cmp
adc
icebp
sub
test
ja
sub
jae
fwait
mov
jp
pop
push
cld
cmp
jmp
jge
push
dec
pop
movsb
add
and
hlt
insl
inc
movmskps
jbe
push
cmp
inc
and
aaa
and
pop
out
jle
shll
lea
pop
lea
leave
in
vmread
add
shll
inc
pushf
cmpsb
xchg
mov
pop
adc
jno
xor
cltd
and
add
jnp
sub
sub
lret
push
icebp
sub
push
xor
sbb
jecxz
push
sub
push
jo
pop
iret
pop
add
fildl
das
jo
add
pop
lahf
test
in
xor
sti
jp
jno
movsb
test
lret
pop
xchg
pop
out
xor
imul
sbb
cli
pop
movsl
test
mov
outsl
nop
je
idivb
jns
jae
xchg
mov
adc
out
and
fdivrl
xchg
adc
xchg
inc
cwtl
inc
cli
push
insb
sbb
pushf
sbb
cmpsl
xor
add
repz
sahf
jl
jl
cld
jl
inc
mov
or
jb
push
or
popa
ss
and
jge
mov
popa
insl
insl
loope
push
inc
dec
in
or
xor
xor
mov
sub
mov
xchg
or
scas
sbb
data16
jmp
jle
jo
fs
mov
fs
dec
imul
xchg
xor
or
faddl
mov
xchg
nop
divl
movsb
mov
xchg
mov
mov
or
inc
xchg
add
cmc
inc
adc
push
mov
pop
psubw
push
inc
repnz
mov
sbb
nop
xor
jmp
dec
or
pop
call
mov
lods
loopne
scas
or
xchg
or
imul
movsb
lea
scas
test
mov
add
xchg
jl
test
mov
outsl
push
nop
push
js
stos
cmpsb
popf
lods
int
xchg
mov
xchg
cmp
and
pop
xor
pop
inc
jbe
loope
push
add
mov
pop
nop
pop
js
lods
sbb
push
ficoml
adc
pop
out
pop
jnp
xchg
in
repz
clc
or
and
pop
cmp
repz
fs
iret
repz
jl
test
or
sbb
fldt
cmp
mov
iret
sbb
jne
sti
jp
pop
repnz
xlat
pop
push
repnz
and
xor
or
mov
aaa
add
dec
sub
jb
xor
pop
cld
xor
push
ljmp
cwtl
add
mov
jb
ljmp
es
into
jno
xchg
shl
sub
fadds
leave
pop
sbb
xor
inc
xor
mov
adc
push
add
adc
xchg
and
mov
pop
shll
or
push
sub
and
or
leave
sbb
cmp
or
mov
shl
xchg
movsb
and
inc
push
lea
push
jne
mov
scas
cmpsb
add
or
insb
and
inc
into
test
adc
das
mov
in
adc
add
cltd
loope
movsb
xor
inc
sahf
xchg
and
mov
and
aam
pop
or
push
je
push
rol
movhps
and
or
sar
nop
sub
push
loope
cmp
cmp
xchg
add
out
adc
inc
or
adc
dec
xchg
or
or
add
pop
or
nop
shlb
clc
and
popa
and
mov
inc
cld
inc
loop
shrb
or
loopne
adc
pop
out
mov
jl
adc
sbb
lods
je
sub
icebp
ja
mov
xor
mov
cmovl
cmpsl
ret
pop
jb
lahf
cmp
xchg
daa
add
add
mov
adc
adc
dec
mov
cmp
and
subl
and
cmp
add
or
jle
push
jge
aad
cmpsl
addr16
xchg
or
addr16
mov
dec
in
pop
lods
idivl
ficomps
clc
inc
push
inc
ret
sub
xchg
or
pop
adc
mov
mov
out
inc
sbbl
adc
idivl
xorl
jae
in
mov
rolb
mov
rcrb
arpl
xchg
ret
pop
outsb
push
movsl
or
sub
push
dec
cmp
pop
mov
or
sbb
data16
dec
adc
xor
sub
sbbl
or
sbb
outsl
push
sti
mov
push
jle
cmp
nop
push
mov
orb
addl
and
inc
add
sub
mov
or
daa
inc
pop
mov
inc
or
das
adc
sbb
insb
jo
xchg
push
push
dec
xchg
dec
rclb
add
inc
rcl
pop
cmp
fidivrs
add
es
je
fcoml
in
cmp
inc
in
mov
sub
xchg
add
shrb
push
sbb
push
xchg
push
ss
in
jl
sub
dec
jmp
inc
sbb
xchg
jnp
movsl
adc
push
xchg
dec
inc
adc
pop
add
or
roll
clc
daa
adc
sbb
aas
inc
dec
add
int
movb
sbb
add
xchg
add
add
xchg
filds
add
adc
sbb
add
mov
adc
jb
ds
jo
sbb
mov
outsl
add
xchg
xchg
xchg
sarl
insb
aad
push
push
adc
jnp
mov
icebp
dec
push
push
push
insb
adc
in
dec
adc
push
sub
lcall
jge
sbb
jle
adc
sbb
je
xchg
test
mov
xchg
adc
cmp
jae
add
dec
cmp
xadd
or
dec
dec
or
push
subl
cmp
stos
sbb
outsl
pop
call
dec
xor
pop
fimull
rolb
pop
les
inc
mov
jmp
fdivrl
rcr
and
xor
dec
add
mov
mov
xchg
pop
mov
inc
mov
scas
inc
add
add
shlb
push
dec
das
xchg
loopne
les
sbbl
mov
push
dec
add
push
and
pop
imul
test
add
repnz
adc
jns
push
fiaddl
cmovl
out
push
jnp
shr
test
clc
movsl
inc
pop
add
iret
pop
sub
jl
cld
je
lods
lods
insb
insl
mov
xor
mov
rol
roll
nop
test
ljmp
icebp
or
xor
aas
icebp
inc
push
arpl
push
push
pop
add
frstor
adc
xor
add
adc
inc
cmpsb
or
outsb
or
push
fisttpl
or
cmp
leave
rcrl
add
pop
jo
inc
xor
subb
mov
and
xor
popf
dec
out
inc
adc
aad
pusha
ss
or
xchg
sbb
push
bound
and
xor
cmpsl
jl
inc
push
dec
push
xor
subb
testb
mov
xor
mov
cs
add
inc
lcall
mov
xchg
inc
jge
add
adc
out
mov
jne
dec
or
mov
adcl
or
pop
push
push
clc
test
leave
aad
ss
or
daa
nop
mov
adc
inc
sbb
inc
stc
push
xchg
inc
imulb
dec
ret
jp
mov
dec
adcb
aas
sbb
cmpb
or
xchg
or
cmpl
or
in
cli
outsb
xor
mov
jbe
inc
out
sti
push
jb
lahf
loop
aam
mov
xorb
test
inc
aaa
cmpl
inc
push
sbb
xor
fwait
dec
mov
inc
loopne
test
push
jg
nop
push
push
jmp
jp
les
and
movsb
mov
xchg
and
and
fwait
insb
and
and
fimuls
and
xlat
and
sub
rcr
aam
add
adcb
xchg
adcl
call
clc
fsubl
xchg
push
jl
push
sub
pop
jecxz
mov
pop
rcrl
push
nop
mov
test
insb
dec
mov
inc
pop
pop
add
aas
pop
data16
imull
hlt
add
or
jle
scas
popa
xor
in
jg
stos
adc
dec
pop
data16
jmp
rorl
push
pop
lods
dec
pop
pop
pop
popa
add
in
aaa
daa
cmpsl
jae
inc
xchg
sahf
push
sbb
out
das
jae
xchg
dec
insb
add
sti
sub
pop
out
xchg
push
outsl
insl
add
inc
push
dec
or
outsb
enter
push
adc
loopne
aam
insb
popa
jo
cmp
push
adc
rolb
cmp
push
mov
addb
add
lock
push
add
jge
pop
test
cmp
xchg
bound
sbb
pop
jmp
sbb
add
xchg
jnp
out
push
push
sbb
mov
sbb
fwait
loopne
mov
cmp
and
dec
js
inc
dec
jp
jnp
fdivs
push
jl
mov
pop
hlt
push
or
adc
push
inc
ss
shlb
cmp
sub
jo
out
or
je
pop
in
dec
adc
add
inc
or
inc
pop
ret
jb
pop
add
sub
mov
imul
or
mov
scas
cmp
sub
adc
pushaw
mov
in
ss
xor
fs
push
mov
test
imul
xchg
push
mov
inc
push
mov
push
cmpsb
dec
mov
pop
pop
add
fcmovb
cmp
rclb
add
or
fwait
adc
outsb
mov
mov
sahf
jge
loopne
cwtl
cs
das
push
xchg
inc
jno
shlb
scas
jl
or
push
iret
negl
cs
dec
push
hlt
les
cmp
cwtl
popf
negl
push
sbb
or
test
ret
test
adc
ret
nop
ja
add
jnp
add
jge
insb
insb
ja
ljmp
jmp
jge
js
inc
or
adc
push
fcomi
xchg
mov
in
mov
pop
add
adc
push
adc
jae
mov
dec
push
inc
pop
das
xor
in
adc
arpl
faddp
ret
xchg
popf
sub
mov
icebp
or
xchg
bsf
mov
cwtl
psubw
inc
cli
xchg
and
add
mov
ss
shrb
sbb
mov
pop
mov
adc
add
insl
mov
sub
ja
mov
fisttpll
inc
leave
and
movsl
testl
dec
test
loope
jl
xor
mov
mov
fbstp
jno
andl
pop
mov
inc
push
insl
out
mov
push
pop
cltd
or
cmp
subl
repnz
inc
cmc
lds
pop
add
xchg
or
sub
leave
or
shll
pop
imul
inc
fimuls
pop
test
dec
fwait
push
popf
insl
shll
inc
dec
mov
dec
xor
and
les
lcall
das
cmp
cmp
and
adc
sbb
pop
and
sbb
add
dec
hlt
push
jle
popa
nop
mov
leave
fildl
sbb
shl
pop
pop
les
outsl
fwait
arpl
mov
adc
cmp
popf
test
lds
roll
cmp
outsb
mov
pop
sbb
addr16
in
mov
aad
inc
daa
lds
adc
enter
pop
mov
mov
dec
enter
dec
insb
dec
js
rolb
mov
push
mov
mov
adc
and
fsubrl
fiaddl
fsubl
icebp
ret
icebp
pop
ret
push
movsb
out
pop
jmp
test
pop
sbb
xor
enter
addr16
popf
ja
pushf
rorb
xchg
inc
cmp
adc
test
cmp
xor
inc
insb
addb
cltd
xor
rcrb
push
call
add
stos
mov
fsubrp
jbe
das
xchg
push
jl
and
dec
inc
lods
dec
pop
dec
iret
jnp
aaa
enter
test
cwtl
mov
mov
adc
les
mov
cmc
daa
xchg
inc
mov
pop
sub
and
add
sub
fildll
testl
imul
popa
pusha
jno
jle
into
mov
mov
fwait
add
jecxz
loope
aad
jns
or
movsl
data16
daa
add
add
xchg
or
jo
and
imul
push
clc
cltd
mov
sahf
pop
push
or
sbb
mov
nop
adc
and
mov
pop
pop
jnp
in
dec
lods
or
dec
add
mov
and
sub
vunpckhps
incl
dec
jmp
add
mov
jle
cmovg
leave
rol
aam
adc
xorb
dec
pop
pushf
cwtl
cmp
jb
jne
sub
dec
mov
cmovle
addr16
mov
dec
and
dec
dec
mov
inc
push
jle,pn
adc
sub
or
mov
scas
pop
xchg
cmp
and
mov
das
fsubs
enter
inc
movsb
and
cmpsb
cmc
adc
inc
aas
pop
mov
xchg
inc
pop
iret
add
rorb
pop
mov
inc
push
scas
rcrb
inc
sbb
leave
or
mov
movsb
xrelease
fisttpll
jne
bound
push
mov
nop
push
xlat
shr
out
aam
sbb
cmp
dec
pusha
or
sub
das
and
test
xchg
inc
xor
mov
pop
sub
sub
in
inc
or
mov
push
add
adc
dec
cmpsb
xchg
push
pop
inc
push
push
iret
xor
fdivrl
sti
inc
mov
fisttpll
add
les
fs
jl
bound
arpl
inc
addb
les
lahf
fcoml
pop
loop
negl
sahf
loop
xlat
or
push
xor
je
iret
jnp
push
lahf
cwtl
push
xor
push
lods
int3
xor
jnp
push
dec
es
xchg
gs
adc
mov
pop
dec
mov
ret
sbb
pop
pop
xor
adcb
addr16
and
or
data16
into
jnp
adc
jl
rolb
cmp
fcoml
out
adc
add
sbb
loope
stos
adc
jbe
or
gs
add
and
popf
and
cmpsl
fdivl
adc
and
mov
push
inc
and
repz
fidivrl
mov
jne
in
mov
sbb
das
inc
pop
in
addr16
or
cmp
xorb
pushw
or
xchg
add
pop
cmpsl
aaa
xor
and
aam
jae
xchg
sbb
sub
pop
add
ret
je
or
das
mov
sbb
dec
cs
loope
push
cvtpi2ps
mov
add
jge
test
jp
nop
jno
or
xorb
dec
outsl
fldenv
rcrb
jns
or
lods
stos
fs
pop
aaa
aam
ret
ud2
pop
push
arpl
jbe
push
jbe
add
out
in
jne
add
scas
roll
in
push
jb
or
repz
loopne
dec
pop
push
cmp
mov
push
sbb
psrad
add
mov
dec
outsb
arpl
sbb
aaa
jns
add
add
cmp
mov
add
pop
out
fnsave
loop
sub
push
mov
stc
jl
push
sbb
pusha
mov
lods
xor
ret
or
and
insl
cwtl
adc
adc
mov
or
and
and
pusha
fstpt
out
or
adc
cs
scas
pusha
loopne
fs
in
or
lcall
jnp
adcb
sbb
xor
xor
pop
and
add
or
inc
lock
aam
js
test
pop
or
cmp
in
imul
outsl
mov
add
adc
dec
add
or
inc
fsubrl
jg
xor
mov
rcrb
or
pop
or
or
mov
and
or
rorl
xor
inc
pusha
sub
shrl
dec
add
xchg
stos
dec
dec
sbb
in
in
imul
or
or
or
add
scas
in
stos
or
mov
andps
lods
or
in
lods
sahf
add
xchg
jg
cs
das
push
and
add
test
orl
pusha
mov
cwtl
nop
lret
push
add
push
or
js
sub
loopne
and
adc
add
fistl
mov
lret
adc
push
lods
jo
mov
sbb
lods
dec
shrl
push
adc
jae
push
mov
aam
imul
pop
mov
outsl
pop
fwait
mov
jp
inc
add
lret
cs
adc
insl
dec
aaa
orb
inc
or
xchg
mov
mov
and
lea
add
lock
inc
inc
sbb
or
mov
pop
add
sbb
ds
xchg
add
mov
cmpsl
mov
sbb
iret
aas
scas
fs
jecxz
sti
push
lods
push
test
rorb
push
pushf
add
mov
andl
leave
dec
mov
pop
adc
rcll
test
decl
fimull
pushf
dec
xchg
mov
clc
hlt
jg
xlat
decl
push
mov
add
or
push
nop
dec
dec
mov
insb
mov
inc
adc
sub
mov
daa
mov
fistpl
aam
pop
xchg
subb
rolb
cltd
nop
and
adc
inc
dec
insb
mov
jg
shll
jmp
or
add
mov
mov
sbb
xchg
adc
mov
inc
adcl
pop
inc
add
pop
sti
sub
push
aas
xor
loopne
add
aam
push
jg
ret
sahf
dec
xchg
dec
mov
movsb
fildl
aas
adc
pop
lahf
adc
dec
or
inc
inc
cs
jns
inc
inc
inc
lahf
lock
lods
or
adc
cltd
add
fldcw
mov
bound
or
xchg
inc
xchg
dec
add
jb
rolb
aam
add
or
arpl
push
add
rorl
js
imul
dec
or
add
fiaddl
jmp
in
pop
dec
push
cmp
add
insb
mov
jp
inc
lahf
pop
mov
enter
dec
inc
in
adc
xor
call
pop
and
sbb
mov
dec
push
xchg
mov
add
mov
sbb
mov
xchg
and
mov
pop
adc
add
out
mov
xor
pop
and
push
adc
add
pop
pop
cmp
jo
popl
int3
lahf
xor
adc
roll
aam
lods
add
out
xorb
and
scas
push
or
mov
fwait
leave
sbb
xchg
xor
daa
or
inc
lcall
sbb
pop
outsb
or
lock
adc
mov
xchg
inc
fidivrl
xor
in
xlat
push
data16
enter
adc
nop
or
pop
jbe
push
loopne
test
add
es
icebp
add
ficoms
or
call
jo
test
sbb
scas
inc
or
bound
and
pop
pop
mov
mov
insb
daa
dec
sub
dec
adc
sti
bound
or
ja
mov
or
or
inc
lods
scas
es
ds
push
insl
push
arpl
in
in
sbb
sbb
or
adc
mov
lock
ss
push
jae
jno
popa
sub
pop
out
mov
les
addr16
jmp
mov
fadds
push
mov
pushl
aas
cmp
sbb
adc
xor
or
add
add
les
jo
adc
jae
addb
nop
jle
sarb
out
ss
adc
sbb
dec
out
mov
dec
dec
ds
push
in
jno
insb
mov
sbb
jle
inc
out
add
pop
lods
or
stc
add
inc
xchg
add
add
sbb
pop
dec
cmp
pusha
ljmp
aas
mov
and
and
pop
and
loopne
lcall
pop
pop
mov
inc
sub
sub
leave
xchg
add
loope
push
test
push
dec
add
or
xor
scas
stc
jo
xchg
xor
or
mov
adc
daa
add
xor
jae
dec
xlat
adc
pop
add
dec
shll
add
mov
mov
ja
mov
sahf
test
xlat
arpl
popa
lahf
hlt
pop
adc
lcall
fimull
adc
pop
mov
lret
daa
shld
adc
loopne
in
add
idivb
in
add
add
and
roll
test
add
add
pop
repnz
arpl
mov
mov
das
mov
test
sbb
aas
dec
mov
pop
push
push
push
push
add
std
add
add
add
sub
cmp
push
cmp
dec
mov
inc
fcomi
jns
rol
jae
orb
adc
lea
int
cwtl
or
ss
mov
or
roll
dec
shl
dec
fisttps
and
push
movsl
jecxz
pop
push
pop
insb
mov
or
test
jae
add
lret
dec
push
dec
cmpb
adc
clc
mov
dec
add
push
push
mov
adc
inc
mov
mov
adc
ja
pushf
pop
sahf
add
pusha
gs
xor
or
stos
pop
subb
rolb
jae
jns
loopne
mov
jl
flds
in
jbe
das
les
mov
push
movsb
test
jnp
and
fldenv
call
dec
push
dec
jo
fcoml
sub
push
ljmp
loope
pop
insl
cmp
cmp
mov
add
shll
sub
pop
dec
popa
es
roll
jno
adc
xchg
ja
mov
fidivl
sub
or
add
xor
mov
push
pop
outsl
je
shll
lock
test
mov
ret
adc
lea
mov
test
sbb
or
or
and
cli
movsb
lods
pop
push
scas
cmp
aaa
repnz
push
out
push
adc
icebp
ds
xchg
js
dec
sahf
adc
pop
add
lods
push
push
push
xlat
lea
cmp
call
add
push
cmpl
setl
mov
ret
fisttps
jle
xor
js
mov
pushf
pushf
mov
lds
mov
scas
jbe
ret
sub
hlt
xchg
inc
mov
or
cld
lds
jne
out
loopne
jno
insb
les
outsl
xor
cs
pop
mov
aam
or
ret
das
cmp
add
bnd
subb
ss
int3
xchg
sbb
test
mov
or
push
xchg
sub
orl
std
and
or
mov
adc
sbb
mov
or
adc
insl
cwtl
xor
addl
xor
jno
lea
adc
sbb
call
sbb
je
cmp
incl
nop
lods
push
adc
out
pop
pop
push
push
incl
jl
mov
jae
mov
call
loopne
mov
inc
dec
adc
scas
adc
incl
adc
mov
mov
movsl
sbb
addr16
rorb
push
inc
adcl
mov
loopne
loop
movl
and
fadds
dec
adc
ret
ret
pusha
nop
inc
or
dec
stc
add
dec
cmp
les
pop
lock
mov
adc
and
xlat
pop
ret
flds
jo
stos
dec
cmp
enter
inc
cwtl
inc
ret
mov
ret
ficoml
pop
aaa
aam
hlt
xor
and
jl
aaa
nop
jmp
mov
push
lds
cmp
mov
adcb
mov
xchg
pop
add
inc
push
addr16
or
aaa
adc
cltd
popa
xor
add
sbbl
fs
and
and
sub
inc
loopne
mov
out
mov
lret
call
jl
or
xchg
fmull
add
ss
shrl
rcrb
push
inc
add
adc
inc
xchg
imul
add
adc
inc
pusha
pop
jb
stc
jecxz
aas
fildl
dec
sti
fisubs
mov
xchg
pop
jb
push
or
adc
jge
xchg
pop
mov
add
push
pop
adc
pop
add
lds
lock
lea
sbb
movl
test
or
or
or
test
add
into
rclb
hlt
add
mov
or
sbb
add
jecxz
aaa
inc
icebp
popa
mov
int
aas
add
mov
out
or
iret
int3
jmp
inc
mov
js
sbb
and
jno
push
iret
dec
jo
pusha
cmp
stos
js
push
test
mov
shlb
imul
lcall
cwtl
push
adc
pop
sub
lcall
xchg
or
or
fcom
pop
push
outsb
shll
mov
pop
inc
lds
fmull
xor
ja
or
pop
mov
rolb
jb
sbb
pop
fcmovu
or
xlat
sbb
xorb
pop
and
xchg
insb
xchg
loop
sub
shll
ds
xchg
push
ret
rcrb
outsl
rclb
mov
dec
or
or
bound
inc
test
or
add
or
test
push
sahf
cmpsb
sub
xchg
pop
jnp
and
or
mov
negl
sub
and
and
mov
add
mov
mov
mov
push
ja
and
enter
fcoml
cmp
inc
leave
mov
dec
fistpl
lds
cmp
lods
rcll
jmp
pop
jno
xchg
xor
shrl
lods
sub
dec
adc
push
nop
test
push
push
xchg
sti
pop
imull
outsl
dec
and
inc
out
and
adc
push
gs
loope
adc
inc
out
or
adcl
mov
je
push
pop
mov
push
leave
xchg
sub
mov
out
js
arpl
push
push
jo
sub
inc
xor
add
jp
sbb
adc
adc
lock
mov
and
test
inc
inc
pop
mov
gs
pop
pop
dec
push
pusha
ret
jecxz
test
inc
cmp
outsl
dec
outsl
cmp
mov
mov
dec
pusha
das
jo
fists
fmuls
nop
mov
insb
push
aam
mov
lods
add
enter
test
inc
shlb
movsl
xchg
out
fists
test
aam
inc
ja
dec
sub
or
inc
mov
fwait
in
push
scas
push
or
push
sbb
sbb
out
push
jge
push
fdivr
sahf
cmpsl
mov
pushf
sub
lcall
ss
jns
dec
cld
mov
mov
int3
jle
in
jg
insb
push
mov
adc
andb
add
add
sub
push
loope
clc
or
and
jl
adc
insl
fistpl
dec
aaa
and
add
orl
sub
add
sbb
adc
and
jl
push
in
cmpsb
mov
test
imul
popa
aam
rcrl
adc
pop
inc
pop
es
mov
daa
pop
ret
sub
jge
lods
sub
mov
lar
lret
fs
movsl
insl
outsb
stos
mov
int3
pop
sub
push
pusha
dec
jecxz
adcb
jp
inc
call
sahf
adc
bound
call
nop
arpl
nop
ret
cmp
mov
fs
mov
lods
mov
mul
adc
mov
dec
jo
mov
or
and
lret
in
fcoms
pop
pop
aad
jp
popl
cmp
pop
pop
shrl
and
add
cmp
test
or
popa
dec
push
mov
insb
aaa
or
mov
imul
mov
enter
add
mov
mov
ffree
sbb
rep
sbb
mov
cmp
xchg
testl
add
sbb
cmp
xchg
mov
pop
or
dec
push
inc
add
jb
movsb
push
inc
inc
jmp
pop
test
push
xor
adc
mov
mov
jmp
push
push
lock
xor
adc
cs
mov
adc
sbb
jl
fs
sarb
jl
insb
cs
enter
sahf
dec
pop
shl
das
push
jo
popf
cmpsl
stc
sub
xchg
xor
sub
int3
loopne
or
push
test
xchg
jbe
shl
lock
mov
into
clc
cmp
mov
or
pop
mov
add
loope
sub
cmp
call
xlat
addb
dec
sub
jo
and
and
mov
imul
in
fwait
xor
or
fwait
xor
mov
and
sti
jecxz
je
dec
adc
subb
cmp
adc
inc
jmp
iret
hlt
pop
push
mov
cwtl
cmpl
pusha
adc
aad
shlb
stc
xor
add
push
push
mov
cmp
push
and
adc
or
sbb
lock
mov
ret
jl
sub
faddl
das
test
arpl
mov
inc
and
je
popl
fisttpl
mov
outsl
xor
mov
pushf
ja
sbb
push
mov
nop
psraw
test
ror
add
loop
loop
mov
filds
xchg
fists
in
int3
dec
mov
test
push
cmp
inc
add
scas
in
outsb
div
repnz
in
out
out
bound
out
out
addl
nop
add
in
cld
sub
setb
mov
call
cmp
jb
testb
jmp
jnp
jmp
mov
add
mov
clc
jle
aas
int3
ljmp
das
out
jmp
setne
aas
cld
xchg
xchg
call
pop
pop
in
cmovns
icebp
push
in
aaa
adc
pop
add
add
add
add
add
lock
add
jo
mov
mov
mov
mov
mov
mov
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
pushl
out
out
in
in
jmp
ljmp
jmp
jmp
jmp
decl
jmp
jmp
xor
fdivrp
fdivr
fcos
fdivr
xlat
cld
xchg
call
call
dec
call
call
call
pop
dec
dec
dec
cmp
push
adc
incl
cmpsl
push
sub
sbb
cwtl
insb
dec
ficompl
inc
push
pusha
cmp
out
mov
pushf
cwtl
mov
fdivs
popf
insb
sbb
inc
ja
lahf
notl
pop
insb
stos
cmp
push
jns
repz
pushf
cmpsl
nop
cwtl
push
cld
out
sub
mulb
ds
fmull
jo
int3
jge
in
jnp
push
and
push
jne
xchg
pop
push
dec
xchg
cmp
ja
xor
loopne
mov
xchg
imulb
jge
addb
clc
js
push
cmp
movsb
loop
push
addr16
cltd
push
jle
add
lcall
xor
inc
ds
lods
jl
cwtl
cmpsl
jge
mov
lea
int3
call
mov
dec
pusha
sbb
sbb
adc
sbb
stc
ss
and
shrb
rcll
lods
adc
lods
adc
jne
push
iret
insl
add
inc
pop
mov
call
pop
xchg
subl
insl
movsl
imul
or
push
push
dec
insb
lea
sahf
add
pushf
inc
sub
les
xor
add
xor
pop
dec
gs
sbb
movsl
sbb
sub
cs
and
sub
stc
or
or
vpunpckhqdq
dec
mov
cmp
add
sub
mov
or
stc
addb
cmpsb
aad
mov
addr16
mov
dec
daa
test
pop
out
pusha
add
lods
mov
sub
shll
xchg
lcall
loopne
mov
add
icebp
push
mov
and
and
inc
xor
bound
sbb
shll
mov
add
into
loopne
out
xor
inc
sbb
adc
pop
cmc
add
imul
rolb
scas
arpl
mov
and
scas
push
and
test
add
call
cs
push
gs
adc
rclb
pop
sti
pop
sub
or
sub
mov
mov
mov
push
loope
cmpb
pop
sub
adc
cwtl
or
and
aad
add
mov
in
adc
call
push
jno
insl
sbb
jns
inc
mov
or
and
out
cmp
push
adc
jl
mov
jecxz
sahf
stc
inc
push
jp
dec
fucomi
add
movsb
cltd
pop
or
rol
rclb
ror
insb
insl
cmpsl
dec
in
jo
hlt
and
pusha
dec
test
cmp
test
push
or
dec
xchg
gs
rcrl
fdivl
dec
movl
or
adc
inc
adc
lock
push
pop
stos
xor
xor
mov
or
jl
adc
push
mov
popf
push
and
les
sub
adc
test
add
movsl
in
or
mov
lret
test
adc
dec
nop
adc
xor
jnp
aaa
adcl
push
dec
push
insl
rorb
sahf
adc
adc
mov
xor
xor
out
insl
fwait
rcrb
insb
es
and
jp
lret
lahf
dec
add
fidivl
xor
push
xchg
or
or
mov
loope
push
mov
adc
enter
xchg
je
mov
xor
mov
inc
cmpsl
pop
repnz
xor
push
push
dec
xor
scas
cmp
xchg
icebp
ds
cmc
jo
sub
prefetch
adc
push
shlb
and
call
xor
or
dec
test
sub
add
cmp
xchg
xchg
add
add
and
int3
push
add
lods
add
jnp
aam
xchg
dec
pop
inc
arpl
inc
cwtl
sbb
incl
mov
add
push
loopne
je
sub
or
aaa
faddp
lods
fs
jo
xor
pop
lods
orl
aas
sub
in
dec
lea
inc
out
pop
mov
xchg
orl
scas
cmpb
in
int3
pop
sarb
movsl
mov
or
or
add
push
xor
push
pop
test
sub
push
lock
cltd
mov
jae
xchg
mov
sbb
icebp
inc
insb
sbb
sbb
xchg
mov
add
sbb
sbb
mov
repz
repz
sbb
sbb
insl
xchg
mov
sbb
hlt
dec
insb
mov
mov
dec
in
jp
sbb
sbb
sbb
pop
xorl
out
add
je
insb
sahf
sti
addb
jp
cmp
shlb
in
loop
lahf
dec
insb
inc
test
fstpt
movsb
mov
sub
add
dec
add
std
sub
incb
mov
dec
xor
out
jb
sahf
xor
or
sub
push
sbb
xlat
cltd
add
aad
frstor
push
dec
in
push
cmp
in
pop
add
mov
inc
incl
jnp
shlb
push
addr16
and
xchg
sub
arpl
iret
adc
dec
push
dec
adcb
loop
cwtl
andb
dec
mov
imul
xchg
lods
lahf
stos
or
dec
lods
jbe
dec
add
aad
add
inc
xchg
add
pop
or
daa
mov
inc
test
adc
flds
sub
inc
mov
imul
push
add
inc
inc
daa
mov
jns
dec
mov
xchg
or
arpl
test
add
xchg
out
and
pop
and
pusha
cmp
daa
adc
jnp
push
int3
icebp
pop
daa
subb
pop
xorl
dec
call
mov
jne
push
mov
xchg
jnp
adcl
paddb
les
enter
fists
sub
sub
in
and
inc
mov
xchg
push
pop
sbb
stos
lods
add
adc
sti
nop
pop
pop
cmp
cmpsl
sub
cmpsb
gs
inc
add
dec
insl
gs
sub
imul
pop
adc
push
push
loop
and
repnz
mov
fs
je
adc
mov
jnp
inc
cwtl
jb
push
dec
cmpsb
xor
out
or
jnp
fidivs
clc
addr16
insb
sub
sub
rorl
push
rclb
sar
push
push
or
adc
jge
imul
mov
aas
mov
fcom
jae
aas
test
fcoml
sbb
adc
jp
sahf
sbb
addb
dec
inc
xchg
add
mov
pusha
ds
sbb
pusha
dec
add
movsb
fisttps
ljmp
push
bound
or
or
ret
or
xor
adc
dec
fidivl
shll
lods
or
addr16
lret
lret
test
mov
outsl
mov
mov
dec
mov
xchg
jbe
dec
jae
and
add
imul
jle
push
imul
ret
and
insb
out
push
push
add
sbb
ss
dec
aaa
jb
push
jns
sbb
adc
dec
mov
outsb
sbb
mov
or
cmpsl
clc
add
sub
mov
rclb
add
lods
scas
or
inc
xor
xor
mov
sbb
ja
mov
xchg
pop
loop
insb
mov
xor
mov
stc
adc
and
adc
add
mov
daa
sub
adc
add
mov
roll
fwait
adc
pop
add
adc
icebp
or
adc
adc
fsts
and
insb
aad
or
and
add
pop
or
shll
jae
movsl
mov
xchg
add
sti
add
inc
movsl
addr16
cli
cmpb
dec
fdivr
push
jl
repnz
add
push
push
cmp
cwtl
add
mull
fcmovnb
scas
push
pop
sub
add
sbb
mov
sub
fcmove
lock
push
rclb
idivl
pushf
push
jl
dec
enter
divl
clc
sub
jae
cmp
aad
cmpsb
or
add
sahf
in
cmp
and
cmpb
popf
int
enter
les
pop
int
pop
mov
mov
daa
pop
dec
or
loopne
pop
ficoms
sub
shl
add
cmp
xchg
roll
adc
jg
and
pop
std
ret
xor
xchg
xlat
lret
cmp
mov
lock
scas
sub
subl
in
and
mov
and
inc
call
pop
lods
mov
sub
adc
loope
mov
cmc
adc
in
add
push
push
dec
dec
or
rolb
les
mov
mov
fdivs
sub
xor
inc
js
xchg
int3
stos
lret
add
lock
jl
aam
or
jg
fcomps
pusha
and
daa
fdivr
in
push
fisubrs
adc
loopne
jbe
jmp
bound
pop
iret
adc
data16
popf
call
jo
mov
je
xor
or
dec
sub
lret
dec
cmp
sub
sub
xor
xchg
adc
in
add
out
cs
push
cmp
out
sub
inc
idiv
or
lret
movl
lock
dec
movsl
mov
jns
in
clc
cmc
pop
add
test
in
or
js
into
imul
push
push
sub
xchg
sbb
lret
fdivrl
test
add
add
insb
sub
pop
sub
ret
call
aam
and
mov
xor
inc
xor
jbe
cmp
dec
jns
das
adc
ds
inc
adc
xchg
dec
dec
xchg
xor
push
outsl
jb
mov
imul
lcall
xor
pop
inc
lods
push
pop
je
mov
xor
cmp
add
pop
add
or
test
pusha
xor
das
xor
repnz
xchg
mov
add
addb
pusha
imul
stos
jle
add
push
inc
rolb
popf
cld
repz
outsb
push
add
push
push
inc
push
into
mov
fistl
mov
or
mov
pop
das
mov
mov
jb
xchg
loop
ljmp
or
movsl
or
sets
aas
out
in
jbe
ljmp
outsl
sub
or
bt
divb
lret
or
dec
jg
ret
mov
mov
sbb
or
daa
testb
ljmp
setl
dec
inc
adc
subl
sub
and
orl
aam
movb
add
add
add
add
lods
sub
sbbl
test
adc
push
or
add
mov
pop
mov
push
add
add
add
add
mov
mov
mov
mov
push
cmp
or
mov
mov
mov
mov
mov
mov
mov
mov
inc
fisubs
mov
mov
mov
add
push
mov
mov
adc
pop
mov
mov
mov
mov
mov
in
inc
inc
inc
inc
mov
sar
mov
push
mov
mov
adc
push
or
or
test
push
add
ljmp
add
sbb
lods
push
pop
movb
out
sahf
out
insb
mov
negl
call
les
ljmp
loopne
cs
testb
jns
int
loopne
negl
mov
adc
in
sbb
addr16
push
sbbb
aam
cmp
dec
cmp
repz
pop
mov
pusha
stos
test
inc
fcomps
push
push
test
iret
adc
out
push
es
loop
fs
sahf
out
cmp
aam
cld
inc
shl
jns
fadds
inc
cmpb
fildll
adc
lods
cs
out
in
jo
push
mov
push
loopne
and
jnp
orb
test
movzwl
iret
lods
or
in
push
xor
push
push
les
cmp
fistpll
dec
mov
repnz
push
aaa
fcomps
mov
add
call
jnp
fiadds
push
mov
lods
push
and
idivb
push
push
hlt
mov
repz
cmp
stc
es
sbb
jo
int3
jbe
cmp
push
loopne
push
or
inc
rclb
or
jbe
icebp
shll
dec
int
rcr
adc
adc
push
add
hlt
jnp
or
push
loope
out
and
add
outsb
and
add
xchg
add
dec
das
loope
pusha
add
xchg
and
dec
cs
popa
fs
stos
adc
popa
xor
mov
xchg
scas
or
stos
jge
inc
aas
add
add
and
mov
and
mov
iret
mov
jge
push
cmp
les
testl
dec
js,pn
xor
add
add
sbb
push
lahf
mov
or
pop
and
xor
add
jns
repz
xor
jnp
or
mov
ret
dec
sub
cmp
sahf
mov
das
out
ljmp
and
or
icebp
dec
pop
jo
mov
cmp
pop
add
dec
sub
cmpsl
sub
or
jo
mov
iret
add
movsb
mov
cltd
sub
inc
ja
ret
push
push
mov
std
adc
push
xlat
ljmp
pop
fisubs
lods
inc
jl
lods
add
scas
pusha
jns
test
mov
gs
push
inc
movsb
mov
or
ljmp
dec
xchg
js
push
test
adc
lea
sub
sub
mov
dec
sub
xor
jp
stos
sahf
push
push
and
add
jmp
and
cli
loope
fwait
je
adcl
adc
cltd
adc
add
add
shrl
jl
mov
aad
xor
cmpl
and
pop
xchg
mov
xchg
jns
sbb
popa
popa
leave
daa
mov
sub
mov
ret
dec
cmp
inc
add
adc
inc
push
addb
popf
dec
add
xor
jnp
and
lahf
addr16
test
stos
adc
or
and
sub
xchg
mov
fisubrl
dec
push
or
sub
xor
jl
movsl
bound
add
fs
adc
or
ret
pop
add
rcrb
pop
sbb
in
enter
fldl
enter
sahf
enter
shr
mov
enter
sbb
es
push
xchg
adc
xchg
pop
sub
into
decl
xchg
mov
incl
stos
mov
addl
movb
or
out
cmp
and
push
dec
scas
aaa
or
or
dec
dec
dec
add
std
xlat
lods
sub
mov
and
pop
inc
shll
scas
add
mov
daa
lea
push
push
mov
pop
cmpsl
leave
jmp
stos
inc
pop
add
test
jmp
fsubl
jmp
push
or
inc
shlb
sbb
mov
insl
dec
cmpsl
lods
mov
clc
push
adc
or
or
add
call
adc
ljmp
loopne
shrb
inc
test
cli
es
push
ds
daa
add
pop
and
shrb
dec
je
inc
and
les
add
cmp
stc
subb
loopne
jle
and
roll
adc
cmp
inc
test
mov
test
jno
fwait
push
pusha
mov
add
pop
jecxz
cmpsl
mov
add
sarb
repz
loop
adc
adc
fucomi
mull
nop
inc
sarb
add
aam
dec
js
add
and
and
dec
arpl
aaa
fs
in
mov
push
adc
add
xor
xor
push
xor
jne
loop
insl
add
pop
jecxz
imul
add
jg
sahf
stos
shlb
adc
sub
adc
xor
inc
enter
repnz
xor
dec
mov
mov
xor
sbb
adc
mov
mov
lods
cwtl
xor
rolb
fs
das
js
cmp
daa
and
sub
mov
dec
divb
fisttpll
imul
mov
or
add
add
xlat
addr16
pushf
pop
push
inc
push
mov
adc
mov
test
mov
dec
cmp
or
pop
hlt
loopne
dec
or
push
xchg
popa
outsb
popf
ja
or
push
cmp
cmp
ss
or
and
pop
mov
mov
mov
fsubrl
jne
leave
dec
enter
jae
cwtl
add
pop
push
pop
arpl
mov
add
and
sbb
repz
imul
mov
or
scas
lods
jno
xorb
push
scas
push
arpl
pop
sub
or
push
xchg
dec
aam
pop
test
push
or
imulb
rorb
jb
sbb
add
enter
push
and
dec
movsb
inc
in
inc
mov
dec
adc
pop
jnp
das
sbb
or
adcb
fwait
mov
or
ds
or
pop
and
sbb
sbb
sbbl
iret
push
xchg
cmp
xchg
push
fsub
dec
push
clc
push
roll
dec
outsb
adc
insb
push
cmp
push
xor
mov
push
lock
push
sbb
ds
jmp
lahf
fwait
movsl
xchg
sbb
js
int3
adc
inc
addr16
inc
fiadds
jb
subb
je
jns
fdivs
push
imul
mov
fisttps
add
sbb
sbb
subl
leave
insl
mov
sub
sbb
jb
shll
push
mov
lock
add
imul
pop
pop
pop
inc
jo
std
mov
add
xor
cmp
jnp
rcrb
ffreep
mov
sub
add
xor
pop
inc
mov
decb
mov
mov
pop
and
stos
mov
xor
mov
xchg
push
or
dec
sub
push
loope
pop
ret
or
jbe
push
and
ret
pop
sub
push
jp
or
push
sub
dec
sub
and
push
xor
jo
pusha
pop
and
hlt
and
pop
ret
dec
aaa
pop
imul
lock
add
inc
sbb
inc
cwtl
and
or
bound
pop
stos
stos
les
push
lcall
inc
stos
imul
jp
mov
or
sbb
mov
xchg
or
pop
and
push
push
ja
or
or
test
fimuls
inc
ret
push
push
repnz
dec
fs
and
push
dec
add
mov
cmc
or
cmp
cmp
add
popf
inc
popa
inc
movsb
jae
sarb
jo
mov
add
addl
xchg
jl
shl
dec
inc
clc
push
ret
dec
lea
lock
push
add
out
xor
and
add
mov
inc
sub
js
push
sbb
out
push
test
add
dec
adc
gs
pop
xchg
out
or
push
mov
cmp
adc
sbb
and
xor
fnstenv
cmp
pop
pop
add
enter
enter
enter
ss
jnp
enter
mov
pop
nop
int
dec
push
and
andb
push
adc
dec
iret
push
or
or
add
or
int
inc
fimuls
xor
pop
add
or
or
dec
inc
sub
adc
add
das
in
pop
adc
aaa
xchg
es
sub
dec
fwait
xchg
lea
inc
sbb
or
mov
dec
cmpsl
or
add
xsavec
popf
rcrb
inc
leave
in
mov
mov
inc
pcmpeqd
leave
leave
leave
mov
pushf
cmp
or
shll
int
movsb
xchg
and
add
adc
pop
jp
in
pop
les
jns
out
inc
in
sbb
cltd
aas
mov
add
fs
popa
testl
mov
test
subb
adc
mov
push
jae
fistl
cmp
and
xlat
loopne
das
cmp
les
mov
dec
leave
sub
dec
iret
sub
mov
sbb
push
cltd
or
dec
pusha
ljmp
xor
lcall
push
and
push
push
in
jmp
cmp
cwtl
push
mov
sbb
aaa
fnsave
sub
add
xchg
sbb
pop
cmp
and
pop
dec
or
out
or
or
iret
sti
adcb
add
int3
insl
xor
enter
xchg
add
jg
inc
adc
mov
cmpsl
or
jmp
rolb
pop
adc
mov
mov
cld
or
mov
mov
inc
jmp
das
js
or
or
pop
sbb
adc
orb
and
mov
xor
dec
rcr
in
push
inc
mov
out
cld
nop
dec
pusha
int3
int3
enter
fcompl
push
pop
gs
jns
out
mov
add
rcr
call
js,pn
add
pop
push
add
es
push
mov
inc
rorb
test
sbb
out
push
cld
bound
aas
add
push
sbb
cmp
fs
sub
inc
gs
inc
pop
dec
rcr
cmpsl
fnstcw
push
lods
dec
push
es
shrb
cmpsl
lock
inc
ds
sbb
sub
xor
lahf
adc
pusha
add
nop
lods
aas
jge
out
subb
cs
ret
push
jae
outsb
cli
rorb
cmp
and
cmc
lods
push
aad
pop
xor
jne
add
lahf
xlat
cmp
pusha
imul
and
out
sbb
pop
xor
fwait
push
jmp
xchg
or
popa
shl
pop
inc
push
daa
insb
mov
mov
ljmp
add
aas
pusha
sub
rcrl
loop
and
daa
sti
fldenv
pop
pop
pop
xchg
add
lahf
jo
push
lret
or
xchg
movsl
je
sbb
mov
imul
fisubl
mov
sbb
adc
adc
cmp
jp
sbb
add
mov
testb
dec
adc
or
fisubrl
add
fnstsw
stos
jno
hlt
js
push
lods
or
je
mov
add
pop
dec
sarl
ret
inc
or
adc
push
aad
cmpsl
fildl
sbb
bound
and
sub
andb
sub
inc
push
dec
inc
mov
pop
iret
push
push
or
and
ss
dec
imul
lock
pusha
and
andb
or
shlb
fsubrp
add
inc
sub
pop
ds
xchg
mov
int
mov
push
push
rorl
xchg
adc
sub
add
fwait
stos
loopne
cmpsb
sub
ja
aas
push
jae
repz
pop
orl
push
sbbb
pop
test
mov
sub
pop
xor
daa
mov
dec
add
add
nop
fcmovb
pop
or
in
or
ret
adc
je
xor
or
fcomip
mov
stos
mov
test
pop
adc
insl
das
std
mov
cmp
test
aam
ja
imul
or
xchg
insl
inc
cmp
dec
mov
or
jno
sub
push
sbb
imul
dec
pop
pop
inc
mov
clc
inc
pop
loope
sub
add
ret
ret
clts
aam
rcrb
add
test
out
sub
test
adc
add
pop
pop
add
cmp
and
sti
outsl
xor
adc
scas
cwtl
arpl
incl
sbb
push
dec
or
popfw
mov
jno
mov
inc
inc
cs
pop
das
cs
ja
inc
inc
inc
lahf
int3
negb
sub
mov
push
movsl
xchg
adc
jns
dec
xchg
inc
test
popf
or
push
ret
std
in
ljmp
lea
sbb
cmp
sbb
addr16
or
xchg
inc
add
nop
outsb
dec
int3
or
or
push
andl
mov
add
xor
dec
arpl
mov
sub
jb
dec
adc
dec
test
push
popa
inc
lock
fsubrs
adc
push
dec
insl
dec
or
jae
fisubrl
xchg
adc
pop
fstpt
lods
aas
sahf
addr16
fdivl
jns
xlat
ss
push
imul
xchg
mov
sub
loope
divl
je
xchg
pop
xchg
mov
rorb
das
nop
adc
mov
shrb
xchg
in
and
jb
cmp
xlat
add
add
add
inc
bound
jae
stc
mov
je
popf
or
pop
rcrl
jmp
das
and
ret
xor
xorb
and
cvtps2pd
popa
dec
jbe
jno
addr16
push
sub
sub
and
pusha
and
xor
js
cli
sbb
aas
cmpsb
and
ret
outsl
add
cmp
or
mov
jmp
jnp
add
add
jne
in
push
outsb
adc
or
cmpsl
xchg
pop
das
call
jo
pop
xor
or
sbb
das
jmp
rcll
stos
sbbb
ret
push
sbb
pushl
lahf
dec
dec
push
add
add
iret
addb
lock
mov
das
jmp
push
hlt
inc
dec
jle
ja
push
mov
push
and
inc
dec
add
add
std
push
mov
filds
lods
xor
int3
imul
inc
imul
adc
enter
jecxz
mov
cmp
popa
imul
mov
mov
jb
add
outsb
cvtps2pd
pop
sbb
movsb
mov
mov
imul
aas
xchg
insb
mov
ss
pop
cmc
sbb
adc
ret
inc
sbb
mov
pop
pusha
lods
movsl
xchg
gs
test
or
idivl
bound
jmp
les
aas
dec
bound
dec
test
clc
xor
pop
mov
and
jl
pop
xorl
jl
scas
mov
pushf
into
mov
das
cs
xchg
mov
cld
js
sub
js
pop
les
sub
push
fdivl
inc
pop
adc
xor
lods
add
add
xor
cmp
loopne
addr16
sbb
test
in
pop
add
or
cmp
dec
loope
outsb
mov
cmp
pop
mov
shrl
mov
pop
add
adc
mov
adc
je
arpl
lea
push
rol
mov
sbb
add
out
cmp
int
cmp
xchg
cmp
psadbw
jo
dec
inc
gs
int3
jnp
pop
xorb
into
push
xadd
cmp
cpuid
jns
cmp
fisubrl
or
dec
insl
or
shll
andb
dec
aaa
les
and
rorl
jbe
jl
xor
movsl
pop
sarl
adc
or
push
sbb
fisubrl
cmpl
dec
roll
xor
sbb
int
cmp
jg
add
sarl
mov
inc
jge
dec
and
fldcw
or
lea
and
adc
cmp
add
or
xor
insb
addr16
push
test
push
push
mov
add
aad
call
mov
pop
lea
aad
adc
das
jl
jnp
mov
lret
xchg
out
mov
sbb
leave
pop
shlb
or
cmp
push
pop
jo
add
ret
sub
adcb
fdiv
addr16
mov
mov
decl
jle
or
add
cmp
sbbb
inc
xchg
add
rorb
push
andb
xor
cmp
xchg
lea
inc
dec
popa
sub
push
pop
inc
mov
sahf
mov
fisubrl
xor
mov
sub
mov
hlt
and
int
outsb
jne
sbb
dec
inc
es
insb
and
subl
and
insb
lea
nop
inc
xchg
mov
mov
sbb
pop
inc
movl
mov
mov
jl
adcl
sbb
add
dec
jne
insl
lods
cli
dec
adc
inc
pop
retw
mov
ljmp
mov
inc
xor
test
mov
orl
jne
xchg
mov
pop
cmp
cwtl
test
xor
daa
pushf
or
jne
mov
pop
pusha
cmp
xchg
les
or
mov
sbb
mov
fsubl
mov
inc
call
cs
pop
jb
aas
ficoml
aaa
push
adc
bound
adc
dec
pop
pop
push
add
or
jae
lock
push
jbe
dec
aad
inc
push
xchg
dec
sahf
adcl
push
shl
js
jmp
dec
jne,pn
cltd
or
push
add
mov
aaa
pushl
jge
dec
jle
mov
pop
in
add
xor
push
sub
adc
or
rolb
cwtl
mov
or
inc
add
add
rcll
add
dec
or
dec
add
aaa
ja
sub
push
lock
dec
sbb
pop
leave
ret
iret
push
andl
mov
call
mov
push
cmp
adc
add
or
or
sti
adc
mov
mov
mov
or
in
cmc
xor
xchg
out
imul
jg
fiadds
add
push
cmovo
mov
push
lret
filds
cmpsb
mov
mov
dec
inc
sbb
push
or
inc
inc
jnp
adc
out
push
sub
dec
clc
push
push
mov
xchg
push
loope
pop
jae
sbb
iret
inc
xchg
imul
lock
pushf
push
ret
sbb
push
ljmp
movsb
andl
aaa
mov
pop
loopne
sbb
nop
and
int3
je
inc
pop
sbbb
nop
inc
das
inc
add
adcb
add
jo
inc
jnp
scas
mov
pop
mov
pop
add
dec
les
sub
je
mov
in
xorb
xor
in
scas
mov
in
shll
das
sub
mov
push
aaa
je
or
inc
lea
or
inc
loopne
jns
sbb
cmovb
dec
lea
loopne
mov
xchg
push
and
sbb
xchg
push
add
add
cmp
jno,pn
xor
aaa
dec
lea
inc
pop
mov
ja
xchg
inc
outsl
jo
rclb
xchg
add
jmp
dec
cmpsl
pop
test
in
das
add
add
mov
test
and
inc
sbb
push
sbbb
addl
push
jl
ret
pop
mov
ljmp
push
or
jmp
xchg
mov
rol
insl
div
repz
gs
add
lock
cmpsb
mov
mov
cmp
mov
xchg
fimull
pop
mov
lahf
mov
dec
dec
ljmp
push
call
fnstenv
paddb
sbb
pop
arpl
hlt
je
jecxz
inc
pop
popf
or
jne
or
sbb
jmp
iret
adc
rolb
es
pop
nop
pop
sub
push
or
fs
ljmp
add
inc
push
fistpll
dec
adc
dec
adc
or
xor
rorl
adc
sbb
xor
sbb
sub
sub
pop
dec
shll
xor
scas
push
insb
sbbb
dec
stc
add
cmp
push
and
test
mov
decl
clc
insb
test
insb
xlat
cwtl
addb
inc
lss
cld
ret
dec
mov
cmp
idiv
jg
je
sub
pop
shlb
test
cmp
mov
cltd
dec
je
and
pushf
cwtl
movswl
or
mov
in
add
xor
ja
inc
push
mov
mov
outsb
hlt
adc
jmp
mov
pop
inc
leave
addb
popa
xor
add
jne
mov
fsubl
add
push
add
or
jl
cmp
movl
insl
xchg
scas
sub
pop
aam
fcmovbe
push
sbb
movsl
push
pop
cli
push
or
fisttps
mov
in
hlt
jle
call
cmpsl
lods
inc
addl
sbb
mov
dec
test
or
xchg
push
sbb
es
xor
pop
sbb
inc
push
inc
out
fsubrs
push
mov
cmp
pop
pop
dec
lcall
sbb
inc
call
orb
movsl
and
ljmp
mov
push
pop
fists
movsl
lods
fwait
xchg
pop
aaa
or
pop
push
es
mov
and
mov
xchg
shrb
xchg
inc
inc
inc
movsb
mov
sbb
xchg
iret
xchg
sub
movsb
mov
pop
sbb
mov
mov
push
xor
inc
mov
cmp
sbb
cmp
cmp
and
jae
es
push
dec
sbb
movsb
insb
dec
sbb
and
cwtl
dec
jg
mov
sbb
sub
lret
add
pop
push
sahf
cmp
push
rcr
das
pop
mov
push
pusha
mov
sbb
cltd
push
jp
lea
insb
imul
xchg
xor
addl
loopne
mov
outsl
loop
inc
out
add
mov
mov
ret
adc
jne
adc
es
ret
or
lock
and
gs
or
loop
xchg
ds
or
push
dec
add
shrl
mov
push
xor
adc
fistps
or
pop
or
add
enter
push
jl
mov
mov
lahf
and
incb
frstor
daa
fsubl
mov
xlat
dec
mov
dec
push
addl
adc
or
or
add
sub
xor
dec
sbb
std
cmp
push
or
adc
mov
int3
insb
or
sbb
fs
mov
mov
inc
adc
cmp
sub
popf
mov
enter
icebp
adc
rcrl
xor
xor
push
dec
lock
mov
xrelease
jno
adc
inc
adc
xorb
xor
faddl
dec
inc
and
div
pop
bound
enter
es
fiadds
jge
cmp
jecxz
inc
add
mov
mov
inc
pop
fsubs
in
sub
outsl
push
arpl
sub
rcrb
in
fwait
adc
push
hlt
imul
enter
mov
mov
insb
popa
cmc
xchg
subb
test
aam
js
ret
andl
pop
push
enter
jbe
lea
mov
rolb
sti
sbb
mov
fstpt
shlb
mov
shl
fisubs
xor
dec
imul
loope
inc
xlat
and
mov
mov
mov
add
fdiv
adc
push
add
xchg
pop
sbb
jmp
adc
test
and
mov
xor
rcl
popf
mull
outsl
test
xor
xor
les
adc
xlat
sub
lods
andb
lock
and
cmpsl
in
cmpb
mov
jo
cmp
bound
imul
jne
call
sarb
sub
sbb
inc
mov
jae
cwtl
pop
cwtl
sbb
fmuls
or
jg
insl
scas
ss
dec
jne
cmp
jmp
cmp
cwtl
fsubrs
mov
add
arpl
xchg
and
imul
xor
js
xchg
xchg
fisttps
jnp
test
cmc
xor
mov
loope
adc
jne
and
stc
adc
add
std
push
shlb
lods
xor
cmp
push
dec
movsb
sub
add
pop
add
cmpsb
mov
or
or
hlt
or
lock
dec
call
adc
push
inc
bound
push
push
loopne
sbb
mov
iret
loop
push
jns
cmp
inc
cmp
pop
push
jne
sub
ss
les
sahf
push
aam
adc
mov
ja
adc
ljmp
inc
add
xor
js
or
jmp
or
mov
mov
push
adc
push
mov
fnstcw
aad
lods
repnz
sbb
lods
xor
push
scas
or
push
ret
cmpsl
xchg
or
sbb
lret
dec
and
in
cmpsb
push
icebp
or
movsb
mov
shrl
fists
cmpb
std
jbe
mov
loopne
adc
adc
xchg
push
xchg
push
mov
add
inc
dec
idivb
xor
ds
dec
mov
hlt
cli
push
subl
cli
add
xchg
sub
jmp
push
sbb
call
repz
sbb
mov
adc
mov
lds
push
imul
daa
inc
add
mov
push
add
addb
inc
into
mov
lcall
pop
dec
adc
aam
sbb
adc
xlat
mov
mull
movsb
fisttpl
ss
jmp
xchg
out
in
sbb
sbb
add
je
sub
mov
repz
pcmpgtd
sub
push
adc
xchg
fs
add
pop
das
mov
sarl
pop
jl
inc
and
imul
push
fists
test
in
out
dec
or
sbb
loopne
add
mov
or
xor
add
inc
push
and
push
lds
nop
or
adc
sbb
cmp
jp
sbb
pop
or
sbb
adc
mulb
and
movswl
sbb
sbb
fdivr
flds
push
test
aad
adc
mov
ljmp
sbb
bnd
jp
cmp
scas
js
cwtl
and
imul
ficompl
mov
and
imul
imul
dec
add
add
sbb
insl
ret
test
push
pusha
lret
imul
arpl
or
xor
xor
loop
add
in
dec
add
pop
inc
xchg
mov
cmpl
xor
out
stos
adc
adc
push
add
mov
popa
imul
pusha
sub
ret
pop
das
jle
or
dec
and
sub
inc
jecxz
sbb
and
cmp
fstpt
xchg
mov
pop
dec
es
fldt
jmp
cwtl
fdivrp
fstpl
fwait
jmp
scas
dec
rclb
dec
sub
sub
nop
mov
ss
jle
or
outsb
out
inc
jns
sub
imul
jno
scas
dec
insl
pop
xor
cmp
xor
push
adc
sub
xchg
add
sbb
scas
js
cmp
popf
jmp
sub
push
jns
or
push
adc
lcall
sub
xchg
icebp
rcl
mov
push
add
fdivs
enter
mov
dec
adcl
in
mov
js
fisubrs
cli
dec
les
sub
xchg
mov
popf
mulb
popf
add
xchg
in
mov
enter
adc
fwait
sbb
inc
mov
xor
scas
ja
push
gs
mov
jecxz
arpl
pop
mov
jne
imul
ret
mov
mov
dec
jo
rcll
mov
in
in
fldt
push
dec
fmuls
sbb
dec
dec
stos
loopne
imul
in
loopne
dec
push
je
in
cmc
mov
pop
inc
pop
xchg
xchg
arpl
push
subl
ja
or
shr
out
pop
sbb
push
jne
out
loopne
add
stos
push
sbb
mov
sbb
mov
aas
push
sbb
push
or
push
clc
mov
mov
loopne
ljmp
adcb
xchg
sbb
lock
fisttps
repnz
pop
inc
cmp
das
out
jp
nop
pop
movb
adc
decl
xor
push
lods
mov
xor
test
add
je
test
or
xlat
gs
dec
adc
fcoml
jecxz
dec
push
sbb
jmp
and
mov
pop
andb
test
or
xchg
adc
in
mov
mull
scas
dec
mov
je
call
fadds
rorb
inc
nop
nop
inc
cmp
or
add
mov
clc
add
cmp
cmpb
fisttps
insl
imul
sbb
xor
or
imul
cmp
aaa
fsubs
cmp
and
add
xor
into
shll
or
sub
clc
pop
mov
push
adc
sub
adc
xchg
divl
add
clc
add
mov
cmp
mov
insl
xchg
cmc
cmp
mov
or
testl
mov
adc
pushl
xchg
mov
pop
cwtl
imul
clc
cmp
fstl
loopne
jnp
daa
dec
cmp
jecxz
inc
daa
sbb
insb
test
push
sbb
mov
test
out
rcrl
dec
inc
mov
dec
jl
ret
movsb
sub
lea
fists
lret
sbb
in
enter
add
xor
out
cmp
orb
mov
pop
les
fs
inc
sub
jle
pop
pusha
adc
out
dec
mov
sbb
or
lds
call
pop
adc
dec
push
stos
add
and
push
push
nop
mul
jnp
push
jne
push
or
bound
cmpl
xchg
insl
daa
insb
dec
pop
mov
mov
cmp
jle
aas
pushf
xor
add
pusha
imul
inc
popf
mov
rcrb
sarl
cmpsl
jg
adc
cli
or
neg
sbb
jb
jno
pmulhw
push
insb
lret
notl
pop
bound
or
insl
pop
mov
test
sbb
outsb
or
pop
sub
or
xor
push
or
push
xchg
icebp
xchg
add
add
iret
dec
movsb
lea
cmpsl
inc
ja
imul
or
iret
clc
lods
mov
lea
pop
dec
cwtl
and
testb
push
add
pop
fcomps
adcb
fdivrl
dec
xor
add
mov
add
or
adc
pusha
outsb
iret
cmp
sbb
jge
ss
xor
iret
cmpb
push
and
sbb
jg
lods
push
xchg
xchg
push
xchg
sbb
pop
pop
cs
and
push
adc
or
or
adc
cmp
or
out
out
fldl
push
xchg
lahf
addl
scas
mov
je
dec
inc
add
jmp
cmp
xor
rorb
and
push
adc
or
int
data16
cmp
push
or
mov
pop
je
xchg
out
movl
cmp
pop
pop
je
cmp
or
and
xor
xor
jnp
sbb
xchg
and
or
cltd
or
test
add
dec
jbe
adc
dec
sbb
ss
adc
push
cmp
sub
and
pop
pop
dec
dec
sub
jp
push
outsb
inc
movzwl
fldl
or
push
sub
push
sbb
inc
ss
cmpsb
out
insl
sbb
dec
mov
fcoms
pop
call
ror
gs
and
pop
movsb
es
fadds
and
fcmovnb
xlat
xor
loope
jp
cmp
push
sbb
negl
push
out
mov
sub
shll
and
imul
lock
lret
or
aas
les
inc
push
push
in
shlb
or
xorb
fnsetpm(287
cmpl
jns
clc
test
inc
jl
xchg
mov
and
adc
sub
pop
add
mov
adc
push
arpl
inc
cmp
mov
inc
xor
movsl
cmp
je
imul
xor
aad
pop
sbb
lock
imul
add
fstps
push
adc
or
cmpsb
sbb
or
cs
push
popa
and
hlt
mov
loope
je
sub
add
pop
andb
or
pop
nop
jo
sysenter
dec
mov
andb
test
aas
or
xchg
lret
jg
sub
aad
out
ja
or
ja
xchg
push
and
cmp
push
add
inc
popa
pop
ds
adc
fadds
arpl
imul
lret
mov
xor
int
je
stos
movl
cmp
inc
pop
add
pop
pop
pop
subl
bound
pusha
add
jp
add
or
pop
or
xor
negl
out
adc
insb
add
and
mov
lods
dec
jmp
push
adc
adc
rorb
jmp
cli
adc
test
inc
xor
push
add
notb
push
push
and
andb
inc
in
and
xchg
inc
mov
push
and
and
cmp
sub
cmpb
mov
out
jo
negb
sub
imul
push
lea
dec
or
rcrl
jo
mov
pop
fs
xor
sbb
add
jo
mov
mov
xchg
mov
mov
dec
and
aaa
clc
shlb
js
xor
cs
xor
lahf
xor
adc
lea
pop
jmp
fcomi
jp
repnz
fnstcw
adc
push
lock
nop
out
and
clc
bts
shrl
loope
fldt
cmp
and
push
sbb
push
push
mov
add
addr16
cmp
or
in
ret
sbb
and
add
xorb
imul
adc
xchg
dec
rep
std
cmp
jne
adc
inc
jne
pushf
lahf
sbb
mov
cmp
mov
xchg
jg
inc
mov
rclb
mov
sub
sbb
pop
test
add
repnz
push
mov
shrb
adc
outsl
loop
or
push
orl
dec
sbb
mov
mov
test
mov
call
xchg
jo
push
js
adc
and
testb
shrl
ja
push
aaa
xchg
fildll
pop
movsb
fcomps
lret
cmpsb
lcall
dec
repz
outsb
cmp
inc
fstps
aad
negb
adc
popf
push
push
mov
adc
bound
cmp
cmp
shlb
push
add
adc
xchg
or
scas
enter
or
xor
scas
pop
lcall
lds
scas
pop
push
in
aaa
push
scas
pop
aas
inc
pop
adc
aam
xor
in
lea
shll
mov
cmc
jge
test
pop
xlat
inc
mov
push
xor
push
lods
fsubrl
or
mov
and
and
and
and
inc
mov
out
pop
mov
repnz
cmp
icebp
jmp
gs
jg
call
push
in
arpl
and
shrl
and
adc
adc
xor
imul
cmp
sbbl
add
push
testl
pop
repnz
cmpsl
mov
push
ret
pop
nop
fdivrp
icebp
add
cmpsl
inc
adc
adc
cmpl
xchg
pop
push
cmpsl
pop
outsb
movsl
adc
in
adc
pusha
dec
sub
test
out
jbe
std
ret
cmp
jne
xor
repz
push
lock
xor
scas
movb
push
dec
dec
notb
mov
into
mov
movsb
dec
xchg
mov
push
xchg
lret
enter
pop
push
mov
and
xchg
push
lock
cmp
inc
dec
pop
jl
sbb
jns
pop
add
push
ljmp
push
stos
or
sub
rcrl
mov
push
pop
push
sub
dec
mov
inc
mov
dec
lds
inc
sar
or
in
je
dec
int3
jno
adc
pusha
push
adcb
or
and
pushf
daa
push
add
push
xchg
ret
xlat
pop
xor
cs
sbb
bound
lock
ljmp
popa
inc
adc
sub
orb
call
pusha
test
fidivrl
je
test
sbb
mov
popa
cmp
subb
rorl
call
cmp
int3
sub
test
or
jl
cmpsl
or
inc
and
mov
jae
push
mov
je
add
cmp
mov
sub
sahf
sbb
fcmovnu
jo
fmuls
in
push
xor
lea
mov
or
nop
jecxz
stc
sub
enter
dec
inc
fbld
mov
push
ret
push
lahf
fists
lret
inc
imul
jne
inc
cwtl
addr16
leave
arpl
iret
dec
pushf
lcall
dec
mov
or
add
sarl
cwtl
xchg
cli
sbb
test
sub
add
pop
jge
stos
in
or
push
nop
sbb
xchg
pop
add
fcomps
gs
rolb
aas
inc
lock
ret
xchg
orl
daa
and
ss
out
mov
push
adc
cmp
pop
push
dec
xor
aam
push
rolb
sarb
lock
xor
xchg
pop
lret
nop
gs
clc
pop
mov
sbb
cmp
xchg
mov
sbb
xor
inc
and
xor
subl
xlat
sbb
jmp
adc
and
add
sahf
push
or
testb
sbb
add
xor
pop
addl
jp
push
adcl
add
dec
jge
dec
cmp
jmp
fnstenv
sub
jbe
ror
and
or
dec
add
add
and
shrb
dec
fcmovb
shrb
pop
and
sub
enter
bound
push
xor
mov
clc
test
rcl
ja
cmpl
inc
add
arpl
lea
xor
fistps
testl
mov
loopne
jg
adc
add
je
and
inc
loopne
jbe
inc
jae
mov
xor
orb
out
cwtl
lods
dec
pop
sub
inc
outsl
jge
cmpb
or
fists
dec
fmull
add
stos
punpckhbw
mov
pop
mov
popa
lea
push
push
pop
jo
adc
decl
jbe
push
push
push
push
enter
add
push
or
or
nop
add
dec
sahf
add
adc
fwait
or
xor
inc
lock
cmp
movsl
or
cmp
cmp
sub
and
sub
and
call
dec
sbb
mov
lock
mov
pop
sbb
daa
loope
shlb
sub
ljmpw
jne
and
adc
pop
and
adc
jge
adc
inc
jne
sub
mov
mov
cwtl
je
pop
pushl
aaa
jge
dec
or
lock
adc
imul
mov
sbb
cmp
out
adc
mov
clc
or
pop
call
cli
outsb
inc
ljmp
push
xchg
jb
adc
jmp
and
xor
push
add
sub
out
insl
pop
add
xchg
jle
jo
mov
xor
push
enter
inc
xchg
or
out
mov
dec
adc
or
imul
jnp
cwtl
lea
or
sub
cmp
add
push
cli
or
ss
fs
mov
nop
pop
cmpb
orb
je
pop
fs
xchg
lods
rcrb
cwtl
xchg
add
mov
pop
popa
cmpsl
add
push
pop
je
mov
ret
pop
ret
jo
and
loope
testb
je
jbe
xor
add
or
mov
jno
and
and
in
pop
rdmsr
popa
jbe
sbb
inc
outsb
jmp
xchg
inc
addb
add
aad
dec
test
add
sbb
dec
dec
inc
mov
stos
sahf
cs
sbb
xchg
daa
cmp
rolb
inc
cwtl
jl
and
push
pop
mov
stos
pop
inc
sarb
out
push
enter
in
xchg
sub
pushf
or
mov
push
or
adc
dec
or
cmp
leave
in
je
mov
dec
rorb
pop
mov
pop
repnz
add
or
mov
nop
pushf
jle
push
movsb
jns
push
es
dec
int
dec
inc
movsb
mov
mov
iret
mov
hlt
enter
mov
cmp
stos
mov
addr16
push
lods
les
inc
add
jo
add
rcl
sarb
mov
adcb
sub
mov
or
push
mov
sbb
shlb
in
aas
inc
punpcklwd
or
inc
bound
mov
dec
repnz
cmp
insb
add
pop
and
inc
fs
inc
fbstp
push
pop
mov
adc
mov
rol
push
inc
fs
cmp
push
or
adc
add
mov
xor
adc
nop
add
lret
pop
cs
je
mov
push
fidivrl
inc
xor
push
aas
or
nop
mov
sbb
ficomps
inc
sub
psrlw
rcrl
xorl
cmp
je
mov
add
or
and
ss
mov
sbb
mov
or
scas
pop
pop
pop
test
inc
bound
jl
and
loopne
nop
scas
add
js
mov
xchg
jg
mov
sub
test
imul
sbb
stos
ja
adc
push
jle
iret
add
inc
adc
test
pop
xchg
test
xchg
test
arpl
dec
xor
mov
bound
xor
xor
lds
les
stc
or
push
add
es
adc
push
shr
or
or
je
add
mov
inc
jb
insb
sbb
cmp
xchg
mov
push
fs
cmpsb
sbb
addl
out
cltd
rorl
das
mov
adc
daa
xchg
sbbb
jle
inc
mov
lea
xchg
je
insb
pusha
test
xchg
ret
push
cmc
movsl
ljmp
inc
arpl
jnp
test
int3
mov
les
cmp
fcom
push
lret
dec
dec
mov
cmpb
fidivs
ficoml
je
lcall
cld
dec
add
movsb
or
lods
call
movsl
sub
ja
dec
dec
jmp
mov
xchg
repnz
pop
ds
mull
pop
jb
push
or
cmc
push
jne
mov
andb
faddl
aas
mov
jge
pop
aas
loopne
pusha
subl
lods
pop
push
rorb
pop
inc
insb
pop
mov
mov
loopne
pop
jns
daa
insl
or
lcall
dec
popa
dec
fs
loopne
mov
outsb
sub
daa
lods
adc
adc
push
adc
fistpll
fimull
sub
sub
cltd
mov
xchg
ja
subb
hlt
sbb
inc
dec
push
inc
sub
ret
pusha
jmp
gs
and
icebp
jg
jne
dec
mov
cmp
je
sub
mov
push
cli
fadds
inc
add
dec
jmp
cld
call
ret
sbb
ljmp
loopne
inc
sahf
shlb
pop
mov
data16
mov
or
xchg
jmp
mov
inc
add
jp
dec
xor
icebp
inc
sbb
pop
leave
insl
adc
mov
and
xorl
lea
andb
adc
pop
cld
add
push
popa
sahf
nop
gs
ds
enter
xchg
out
cwtl
mov
loop
dec
fnstenv
and
cmp
adc
pop
inc
out
gs
cld
popa
leave
or
adc
add
add
popa
out
and
pop
mov
sub
add
push
inc
mov
ret
xchg
cmp
pop
add
dec
sbb
cmpsl
and
adc
and
dec
les
dec
sbb
call
sub
in
testb
xor
jge
mov
aam
cli
or
lret
mov
shl
or
add
add
sti
stos
add
inc
or
out
mov
or
mov
adc
jecxz
add
jb
lret
js
xorb
int
or
and
pop
fiaddl
cmp
aad
or
sbb
xchg
lret
lcall
mov
jmp
lret
push
addr16
or
mov
pop
lods
push
fdiv
mov
push
pop
push
add
xchg
push
out
adc
in
add
mov
or
push
cwtl
outsb
add
adc
adcb
push
aaa
and
or
or
xor
mov
pop
in
cmp
clc
aad
push
xchg
inc
adc
mov
jnp
insl
mov
and
loopne
call
inc
cld
stos
sub
dec
sub
inc
or
loope
adc
insb
daa
xor
pop
insb
fwait
dec
sbb
lea
movsl
insb
icebp
xchg
xor
fstl
ffreep
mov
add
outsb
or
xchg
icebp
adc
push
clc
jo
push
dec
jmp
push
loope
cwtl
enter
push
outsb
push
mov
and
pop
shrb
or
fisttps
or
jb
push
and
pop
cli
cld
add
inc
jecxz
pop
repnz
addr16
push
jp
lock
xchg
xchg
lock
add
xchg
mov
lods
aas
loopne
sti
mov
mov
or
les
cmp
mov
ret
shlb
mull
jns
mov
repz
out
push
push
loopne
pop
addr16
xor
lock
xchg
jge
jne
add
mov
bound
and
sahf
xchg
sbb
out
enter
and
mov
test
lock
jecxz
jmp
sub
insb
mov
js
mov
xchg
arpl
lahf
daa
dec
pop
add
adc
pusha
push
dec
nop
mov
push
or
push
xchg
and
dec
push
insb
aad
pop
addr16
push
or
xor
dec
add
loopne
adc
and
cmp
push
xchg
or
fs
rorl
repnz
jmp
sbb
jb
cmp
and
rcrb
adc
xor
or
imul
and
cmpsb
ret
mov
out
sub
sub
sub
cmp
push
testb
dec
mov
fildl
cmp
sti
out
inc
sti
aaa
call
inc
loopne
in
or
addl
or
push
sarb
pop
outsb
xchg
clc
test
and
imul
scas
sub
cmp
outsl
sub
mov
js
add
out
mov
mov
pushf
std
push
cmp
aad
and
add
add
je
lods
mov
and
push
and
mov
adc
dec
mov
adc
in
adc
and
inc
loopne
pop
lret
and
xor
sbb
xchg
or
sbb
mov
xchg
jbe
xor
in
mov
lods
inc
aam
ss
mov
subb
mov
enter
sub
test
push
ret
pop
lahf
xorb
jecxz
add
sub
mov
lock
add
nop
or
pushf
rcrl
sarb
adc
fstps
pop
aam
inc
fdivrs
les
icebp
dec
dec
add
cs
mov
xchg
jne
jle
adc
fwait
xchg
jp
jb
jmp
xchg
hlt
lahf
lock
sbb
mov
and
out
gs
pop
inc
adcl
es
xchg
or
scas
add
mov
std
push
cltd
clc
or
out
js
xor
shrb
or
aad
mov
loope
hlt
push
lea
shl
inc
jne
pop
stos
pop
into
jo
and
lds
fstpt
in
cmp
fildl
cmp
ficoml
sbb
in
lock
aaa
dec
jecxz
fs
adc
dec
pusha
jo
stos
inc
inc
dec
push
mov
sti
mov
repnz
rolb
add
mov
ret
cli
lahf
jl
add
push
jno
pop
xchg
flds
lods
je
lret
bound
cmp
test
jns
pop
outsl
jmp
and
add
dec
add
test
out
push
sub
dec
fidivs
mov
jo
jmp
test
inc
insl
xor
inc
stc
adc
lret
pop
je
cltd
andl
fisttps
sub
xchg
inc
jg
push
xchg
sarb
rorb
inc
add
ss
mov
jecxz
or
dec
push
push
fldl
add
clc
int3
add
mov
dec
push
aaa
movsb
xor
fdivp
je
and
push
imul
pop
mov
add
cs
jae
clc
mov
pusha
pop
add
or
cmp
add
mov
ret
mov
and
dec
xchg
push
pop
cmpsb
clc
das
xchg
or
add
jmp
push
mov
sub
jae
xchg
pop
inc
push
mov
dec
inc
cmp
or
dec
adc
rorl
or
adc
push
stos
mov
sub
lret
mov
xchg
sbb
mov
stos
data16
push
add
fldt
push
pop
add
xor
push
imul
call
push
mov
fcompl
jo
test
jbe
mov
push
pop
add
push
testl
fisttps
sub
or
sub
dec
or
mov
add
xchg
pusha
insl
pop
cwtl
add
and
icebp
sub
add
adc
sub
mov
add
pop
fsubl
jmp
sub
push
cli
lock
push
add
push
or
mov
pop
lcall
fwait
dec
dec
imul
jl
or
inc
or
xor
rolb
add
aaa
cmpsb
movsl
push
mov
mov
loope
xlat
pop
xor
pop
shr
cmp
push
cmp
push
adc
dec
cwtl
sbb
icebp
inc
cmpb
add
ficompl
or
dec
and
movsb
inc
jmp
add
inc
add
fptan
mov
mov
clc
xor
inc
es
or
ss
sub
dec
or
and
loope
xor
push
lret
push
das
in
and
mov
icebp
cmp
add
and
aad
pop
push
test
push
pop
add
sbb
and
push
add
push
ficoml
xor
ja
cmp
jb
test
fstl
scas
andb
out
mov
push
push
sbbb
push
adc
cmpsb
or
push
mov
mov
or
add
mov
les
add
add
cltd
mov
imul
nop
pop
xchg
push
mov
push
rclb
imul
or
and
imul
sti
lret
sub
inc
mov
xchg
inc
and
cmpsl
adc
push
notb
fsubl
popa
hlt
mov
add
imul
mov
mov
sbb
adc
nop
adc
mov
push
push
notb
inc
xor
xor
mov
in
sbb
pop
out
sub
push
push
imul
sbb
push
ror
sbb
leave
xor
shlb
lret
mov
jle
add
xchg
out
sub
dec
push
add
jns
sbb
mov
lods
sbb
ja
aaa
lods
xor
cmp
jne
lea
xor
xchg
xor
outsl
dec
dec
test
fimuls
idivb
ret
popa
dec
enter
and
push
into
or
lds
outsb
insb
mov
cmp
jbe
bound
dec
pop
jo
shlb
loopne
loopne
or
lret
shlb
imul
add
xor
dec
push
mov
scas
cs
xchg
and
dec
add
addr16
xlat
xor
adc
call
addr16
lods
and
dec
cmp
rcrb
js
xor
mov
push
push
rcrl
mov
push
fbld
sbb
xchg
and
add
sbb
inc
adc
mov
cmp
aam
movsl
outsb
adc
das
pop
addr16
push
je
jl
and
pop
bound
jo
test
inc
mov
sbb
jle
les
pop
jne
enter
xor
pop
stos
int3
pop
push
sbb
arpl
add
std
jne
jl
cmp
jne
xor
jae
inc
inc
pop
jmp
sahf
pop
repz
cwtl
leave
add
add
cwtl
jb
push
jb
pushf
pushf
fs
scas
sub
jle
or
xchg
or
in
mov
add
or
add
add
cld
mov
add
repz
sub
pop
xorl
inc
jl
xchg
dec
loop
dec
loopne
in
dec
movsb
lods
cmp
jge
enter
push
aam
push
dec
jmp
mov
mov
nop
inc
adc
outsl
add
dec
add
mov
xchg
and
add
loope
push
das
pusha
sbb
mov
add
cltd
sbb
cmpsl
arpl
je
lret
les
or
dec
cmpsb
cmp
or
pop
jnp
push
lods
or
xlat
adc
adc
and
div
add
adc
js
adcl
xchg
dec
jge
xor
mov
adcl
cmp
xor
add
popa
cmp
jne
inc
arpl
xor
sbb
jmp
mov
xorl
push
arpl
and
inc
inc
sahf
sarb
add
or
sub
mov
rcl
into
jo
add
ljmp
push
xor
bound
or
dec
jle
sbb
sbb
ror
cmp
hlt
iret
and
or
or
sti
or
xor
or
enter
enter
xor
mov
lods
or
arpl
lea
jno
jg
mov
orl
sbb
das
imul
or
add
and
push
cld
xchg
sbb
mov
sbb
je
pop
sbb
xlat
or
jmp
nop
xlat
adc
inc
cwtl
ret
dec
add
sahf
mov
jl
sbb
sub
jl
xchg
inc
imul
jnp
lea
pop
cmpb
xor
les
cwtl
or
add
and
jne
imul
adc
and
mov
push
das
rol
mov
lcall
add
and
scas
mov
pop
gs
pop
loopne
scas
mov
sub
sbb
pushf
sbb
mov
enter
cwtl
xchg
sbb
not
mov
imul
mov
mov
sbb
aam
mov
mov
push
mov
aaa
shlb
rorb
insl
mov
sub
pusha
pop
icebp
add
enter
je
and
mov
pop
stos
push
sbb
jl
test
sbb
outsb
shrl
mov
pop
xchg
or
es
imul
push
xor
sbb
insl
out
pop
inc
popa
and
inc
aas
add
jne
adc
loop
outsb
lcall
inc
mov
push
push
pop
movsb
xchg
out
push
push
adc
nop
andl
and
movb
push
inc
inc
int3
push
push
ret
lock
insb
test
adc
mov
fnsave
sbb
loop
hlt
jo
push
orb
or
xor
adc
sub
in
bnd
adc
or
xor
or
dec
es
std
or
pop
pusha
adc
push
add
sbb
data16
pop
push
cmp
and
shrb
mov
faddl
fwait
push
in
push
sub
pusha
pop
pop
push
inc
xchg
and
sub
leave
jae
pop
ret
out
pop
leave
adc
xor
inc
je
adc
jno
sub
sub
push
sub
or
testl
add
push
cmp
inc
mov
mov
inc
imull
sahf
add
push
sbb
out
out
mov
jnp
xor
adc
es
sbb
hlt
push
inc
xchg
lret
lea
add
sub
rcrl
inc
in
or
or
test
clc
add
pop
mov
mov
xchg
dec
mov
pop
push
push
push
enter
adc
xchg
adc
xor
jns
push
adc
and
mov
mov
ret
imul
push
jl
loop
clc
gs
pop
imul
push
jne
xor
lret
push
xchg
loope
push
xor
inc
adc
insl
fdivl
mov
push
fwait
sub
popa
xchg
mov
sarl
jmp
push
fs
push
pop
pop
pop
insb
movsb
cmpsb
inc
testb
dec
pop
cmpsl
cmp
cmpsb
push
leave
push
jno
push
orb
sub
loope
inc
mov
inc
fdivrl
cmp
pop
mov
imul
mov
dec
sbb
sub
or
sti
adc
sub
imul
adc
gs
and
xor
adc
rclb
aaa
add
xor
subl
dec
je
ret
jne
xchg
and
js
arpl
xor
sahf
test
loopne
daa
fildl
loopne
test
ret
out
sub
dec
sbb
dec
mov
xchg
jne
popf
pop
pusha
fisubrs
pusha
cltd
xchg
sub
sub
bound
or
adc
sub
and
pop
lret
push
push
scas
pop
test
dec
rorb
inc
add
mul
or
add
pop
pusha
inc
sub
les
lea
sub
jmp
inc
xchg
pop
dec
dec
jl
test
pop
jb
jns
int
push
sub
mov
xchg
or
dec
dec
push
dec
or
xorl
push
cld
mov
sub
insl
arpl
mov
jno
mov
adc
sub
or
xchg
xor
testl
cmpsb
or
rcll
cltd
rcrb
xchg
xchg
jne
push
loopne
add
or
and
inc
or
std
mov
or
xor
rcl
xchg
pop
insl
pop
push
jno
je
clc
fstl
insb
jmp
fs
and
mov
loop
mov
clc
jmp
push
sbb
xchg
jl
or
roll
test
test
test
add
out
push
pop
mov
inc
sbb
aaa
faddl
push
arpl
mov
add
loop
adc
push
sub
mov
or
push
add
leave
rcll
aas
sub
jb
pop
and
inc
adc
inc
or
in
aam
or
push
rclb
sbb
sbb
out
xchg
icebp
test
mov
loope
or
mov
subl
push
and
xchg
jl
jge
leave
sbb
xchg
adc
push
pushl
cmpl
stos
sbb
jno
aas
pop
pop
scas
das
xchg
xchg
inc
and
dec
lea
fldl
cmovne
aas
xor
sbb
int
fiaddl
add
fiadds
dec
and
aad
addb
enter
dec
mov
dec
fnstsw
mov
and
xchg
int
jg
aas
add
push
add
insl
stos
adc
add
loope
push
cs
mov
fisttpl
jns
bound
sub
mov
xor
xor
mov
jae
and
xor
fwait
jbe
stos
pop
dec
imul
loopne
shll
inc
or
je
add
xor
jmp
in
aam
int3
jg
cs
cwtl
inc
in
sbb
mov
icebp
fs
and
mov
subb
adc
push
dec
push
push
adc
add
inc
or
sub
adc
mov
cs
sbb
loopne
add
add
or
jno
loope
lret
add
xchg
insb
or
daa
adc
pop
mov
add
pop
jg
sbb
arpl
xchg
add
andb
pop
les
je
mov
pop
fbld
fs
or
push
inc
cmp
add
cmp
dec
mov
cmpsl
adc
fstps
inc
imull
adc
mov
ret
fst
adc
les
shlb
adc
fldenv
popf
lods
aaa
das
aam
shll
or
sahf
xchg
push
jecxz
outsb
mov
call
mov
das
imul
jmp
clc
daa
push
inc
sbb
loope
mov
push
adc
sub
sbb
pushf
pop
js
xorb
in
mov
inc
inc
pop
ss
pusha
lea
mov
lods
rcr
and
adc
or
jmp
movsl
test
or
add
inc
and
in
adc
dec
stos
sbb
imul
adc
or
imul
in
xor
add
sub
mov
sbb
cmove
inc
and
sbb
add
addb
xor
add
push
sub
das
cwtl
push
repz
xor
inc
lret
push
stos
int3
nop
mov
sti
das
jns
lock
pop
pop
stos
dec
dec
push
or
sub
adc
sub
arpl
sahf
or
je
cmpl
cmp
pusha
dec
pop
ret
mov
sbb
inc
push
push
call
push
mov
push
sbb
orl
sub
add
pusha
mov
sub
add
je
and
mov
pop
lcall
sbb
je
aaa
cs
or
jo
movb
test
mov
pop
nop
sbbl
push
add
rorb
movb
push
je
pop
mov
test
repnz
inc
adc
mov
sub
and
pop
cld
scas
jp
daa
dec
fwait
mov
dec
insb
stos
mov
push
add
in
xor
lods
out
or
movl
int3
add
sub
or
lea
shlb
aaa
sbb
add
pusha
dec
insb
add
clc
cmpsl
cltd
mov
dec
dec
mov
mov
mov
or
lods
arpl
sti
adc
imul
call
xchg
bound
cmpsl
adc
or
bndldx
xchg
ss
sbbb
aam
and
xchg
cltd
sub
arpl
movsb
mov
add
and
jge
push
xor
or
mov
in
xchg
xorb
lea
adc
loopne
dec
mov
and
jo
xor
pop
cmp
outsl
fnsave
lds
fimuls
cld
pop
call
imul
mov
mov
or
test
rol
inc
dec
leave
and
inc
mov
jne
push
cld
or
and
sub
push
add
sub
imul
insb
sbb
hlt
jns
xchg
push
dec
pushf
mov
add
insb
lret
mov
inc
scas
dec
cltd
pop
fidivl
fwait
imul
addr16
pop
jge
enter
or
outsl
sbb
movsl
dec
add
hlt
loopne
mov
cwtl
shll
pop
jno
mov
cs
js
ja
scas
sub
sahf
in
in
fs
imulb
rcrb
mov
lahf
aam
adc
adc
cld
movq
adc
pop
mov
xor
sti
mov
adc
pop
adc
es
cli
stos
fiaddl
ficompl
sbb
fmull
sub
or
sub
mov
adc
mov
adc
mov
and
lods
pop
imul
jae
pop
hlt
js
sub
mov
dec
pop
in
idivb
ret
jge
pop
mov
sub
jmp
or
clc
jmp
imul
in
pop
inc
adc
cmpl
add
fsubrp
movsl
pop
pop
or
add
push
movsb
nop
cmpb
dec
xor
jmp
outsl
jne
jns,pn
imul
in
hlt
xchg
mov
jnp
pop
lds
adc
adc
test
pop
test
in
js
add
adcl
add
mov
push
sbb
ret
shrb
pushf
xlat
jmp
push
scas
and
test
or
jb
sub
imul
push
pushf
scas
rorb
xor
mov
cmp
pop
push
jne
mov
mov
add
push
jmp
repz
add
mov
push
push
pop
je
jnp
sub
push
sub
loopne
inc
inc
push
mov
jmp
or
or
jecxz
xor
push
mov
shlb
xor
icebp
push
or
mov
loope
int3
and
push
inc
ret
and
and
push
adc
xor
cmp
adc
mov
mov
push
xor
scas
push
lds
fdiv
es
into
or
push
lods
loopne
push
mov
or
push
add
lock
loopne
pop
or
orb
cmp
xchg
clc
loopne
cmp
je
xchg
je
nop
or
add
add
ret
mov
dec
popf
push
call
inc
push
xchg
dec
fldl
and
cld
mov
nop
cmp
outsl
or
push
sbb
popa
adcb
sbb
xor
pop
xchg
fs
fbstp
les
scas
lret
sti
cmp
icebp
xchg
dec
xor
repz
stos
xor
push
es
dec
push
cwtl
insb
jo
fstpt
popf
sarb
cmp
call
or
in
inc
pop
add
outsl
xchg
dec
lsl
filds
cmp
out
mov
pop
xorb
and
and
dec
lret
add
xchg
imul
add
clc
and
or
leave
sbb
xchg
mov
xchg
les
jmp
pop
sbb
dec
pop
cmpl
mov
loopne
ss
mov
fistpl
hlt
out
pop
or
pop
lcall
mov
pop
sbb
jmp
mov
js
pop
cmp
jne
adc
xor
mov
mov
pop
fdivp
fwait
sub
or
and
bound
inc
dec
loope
push
push
adc
xor
add
jg
push
mov
mov
movsl
and
jo
nop
or
add
jmp
gs
pop
sbb
fwait
sbb
cmp
xchg
je
xor
jmp
add
andl
test
enter
movsl
loopne
add
xchg
iret
xor
cmp
pusha
xchg
inc
push
sub
outsl
push
addr16
mov
int
into
pop
inc
addr16
loopne
adc
jne
pop
lods
shlb
push
shrl
test
pop
lcall
lock
sub
xchg
add
sub
cmp
mov
arpl
aaa
mov
or
arpl
xor
ja
movl
mov
xor
aaa
dec
push
pop
dec
add
pusha
xchg
mov
jmp
dec
sub
es
and
mov
adc
fidivs
insb
mov
push
fstps
popa
pop
pop
js
aas
lock
je
divb
push
cmp
or
lea
xor
pop
mov
scas
lea
adc
xchg
dec
and
hlt
jno
mov
xchg
outsl
xlat
or
add
adc
inc
fisttpl
mov
fmuls
dec
sarl
inc
xchg
pushf
test
push
cmc
imul
mov
mov
and
mov
jbe
insl
shlb
js
mov
test
loopne
adc
and
or
adc
or
lret
jg
aam
inc
dec
add
mov
cmp
movsb
add
fidivl
scas
push
testl
lahf
les
sub
add
mov
cmp
sbb
mov
je
dec
dec
or
int3
adc
mov
push
sarb
ret
cli
cmove
mov
cmp
jne
dec
mov
outsl
and
testl
pushf
mov
loope
mov
sbb
xor
orl
xchg
mov
sarl
jae
pop
jmp
pop
push
push
sub
imul
mov
or
lods
mov
sbb
xchg
popf
push
xor
subb
adc
jmp
lret
jnp
dec
push
outsl
out
jmp
in
mov
or
cmpsl
aam
mov
nop
mulb
and
add
sbb
add
push
mov
setno
mov
push
xchg
daa
out
rol
jmp
popa
fnstcw
dec
out
jo
test
cmp
jo
jp
jae
lods
xor
adc
aas
or
insl
ffree
daa
and
out
mov
dec
popa
pusha
xchg
mov
xchg
out
pop
shlb
jne
adc
mov
dec
push
adc
push
mov
test
add
mov
or
lahf
jmp
lea
out
jmp
ja
sub
ffree
push
mov
jne
push
cmp
add
hlt
fidivrs
xlat
ljmp
xor
pop
in
fbld
jb
xchg
sahf
adc
xchg
pop
outsb
imul
sub
rclb
mov
sub
pop
or
pop
cmp
bound
mov
test
jmp
and
in
in
mov
pop
xlat
and
mov
push
mov
add
and
insl
adcl
sbb
or
lds
and
cs
jmp
jmp
mov
arpl
imul
jecxz
cmp
push
fistl
mov
push
shr
adc
inc
add
or
and
mov
fcmovb
sub
cmovs
test
xor
add
push
xorb
ret
out
mov
adc
push
sti
lret
scas
or
inc
sbb
psraw
movsl
mov
imul
or
addl
lods
mov
jne
and
dec
orb
sbb
loopne
mov
push
mov
adc
add
add
add
mov
movsb
and
sub
inc
cmpsb
dec
fucom
repz
rorb
add
daa
mov
inc
add
push
or
inc
adc
add
add
ret
sbbl
jmp
adc
cmpb
sub
test
cwtl
xchg
ss
inc
imul
xchg
pop
es
arpl
mov
loopne
aas
cs
add
mov
pop
hlt
cltd
cmp
cmpsl
outsb
jmp
rolb
sub
or
orb
or
arpl
xor
add
adcl
pop
or
mov
fidivs
cmp
jle
cli
je
or
xchg
jmp
jnp
lods
add
lret
and
mov
push
cli
imul
push
or
loopne
xor
dec
ret
jo
inc
add
loope
popf
daa
jo
xorl
call
test
adc
loop
push
test
ret
cmpb
xchg
jle
movsb
jne
insb
jo
push
add
mov
into
cs
popf
jge
mov
and
pop
mov
dec
shlb
or
rcr
inc
bound
mov
nop
or
insl
and
mov
push
or
xor
cmpsb
pop
push
cmpsb
outsb
ss
inc
mov
or
orb
add
jbe
icebp
push
outsl
push
orl
in
xor
cmp
nop
out
sub
pop
sub
add
sub
in
iret
xchg
jg
dec
cmp
int3
vphaddwq
lcall
jge
and
mov
push
orl
movnti
es
jnp
adc
fs
jp
mov
dec
inc
or
xor
rorl
inc
adc
dec
mov
add
push
inc
xchg
shlb
sbb
xchg
and
or
testb
jg
cmpsb
fsubrl
cmp
or
xlat
inc
inc
sbb
pop
push
sub
cwtl
add
loop
mov
lcall
insb
js
inc
dec
pop
int
or
pop
xor
jge
cmp
jp
mov
add
jnp
testb
scas
or
daa
je
pop
fisttpll
test
pop
add
add
test
test
lea
out
push
or
xor
mov
stos
ss
mov
imul
push
iret
or
lret
ljmp
dec
loopne
bnd
lcall
jge
cmpsl
jl,pn
pop
xchg
mov
loope
adc
cmp
notb
mov
jmp
mov
push
inc
sbb
pop
mov
xchg
andb
push
sub
nopl
sub
sti
mov
add
loopne
xchg
call
ss
push
jo
xor
mov
jne
jg
sub
push
add
cmp
testb
jno
insb
inc
fwait
or
mov
sahf
or
lods
dec
push
xor
repz
sbbl
sbb
test
inc
sbb
and
loop
xor
gs
push
movsb
xchg
lea
and
cltd
fs
sbb
or
push
adcb
insb
mov
lds
gs
out
cmp
ret
negb
test
test
inc
xchg
insb
dec
pop
push
and
inc
frstor
inc
mov
scas
add
or
pop
mov
xchg
loope
iret
enter
cmp
sarb
xchg
xor
push
scas
inc
in
insb
lret
arpl
pop
leave
mov
test
xchg
loopne
mov
sbb
or
add
add
or
das
clc
mov
daa
cmp
test
testl
mov
adc
popa
and
or
xchg
mov
or
sub
cwtl
ss
data16
pop
nop
test
jmp
xor
pop
mov
mov
sti
xorb
inc
dec
cmpsb
loope
add
pop
pop
inc
dec
movsl
enter
mov
or
rcl
popa
mov
mov
out
adc
sbb
mov
or
std
adc
insb
sbb
pop
pop
sub
int
inc
int
mov
fdivp
sbb
pop
jmp
push
dec
in
icebp
in
or
push
pop
mov
in
mov
repz
and
push
or
andl
and
mov
dec
outsl
popa
loope
push
add
mov
daa
mov
int3
mov
and
inc
lods
subb
add
dec
and
xlat
fiaddl
xchg
inc
pushf
or
das
adcb
lock
mov
daa
push
push
or
and
adc
popa
in
add
xchg
inc
jno
and
ficoms
mov
lahf
xchg
cmp
mov
movsb
mov
push
mov
push
push
addb
mov
int3
in
loope
insl
pop
popa
sbb
mov
or
shll
and
adc
mov
jmp
and
rorl
out
or
and
psllw
push
push
mov
lea
int3
adc
jno
pop
inc
cmpsb
and
adc
ljmp
add
or
sub
and
sbb
sub
mov
das
dec
cltd
inc
mov
add
inc
xor
pop
bsr
add
gs
and
es
fisubl
xchg
sbb
push
and
inc
pop
push
lcall
mov
rolb
test
xor
jnp
xor
cltd
xchg
mov
sbb
push
xor
xchg
inc
fs
cmp
and
fadd
ret
nop
test
stos
iret
movb
add
lcall
add
mov
out
lock
and
add
mov
mov
leave
mov
fiadds
jo
adc
loope
add
rcll
shll
leave
pop
push
mov
or
jae
scas
add
rclb
lcall
mov
adc
aam
cmp
push
sti
dec
repz
lahf
push
out
cmp
push
add
mov
das
push
add
rolb
mov
pop
pop
icebp
shl
mov
mov
inc
or
push
add
adc
mov
add
pop
leave
mov
jmp
cmpsl
popf
rcr
add
stos
imul
add
sub
call
jg
testb
or
outsl
fldt
imul
or
and
adcb
and
sub
or
mov
pop
gs
mov
jecxz
push
mov
add
dec
add
add
sahf
dec
pusha
cmc
adc
shr
pop
je
push
add
xor
jne
and
pop
clc
adc
lock
sbb
cmp
add
push
xchg
sub
call
pusha
or
daa
in
or
pop
push
and
add
sbb
lock
push
mov
pop
outsl
pushf
adc
adc
nop
add
aad
adc
push
cli
and
mov
push
jnp
jne
push
inc
aaa
sbb
fsubr
inc
mov
mov
jne
xor
and
mov
sub
insl
faddl
add
das
sub
jecxz
or
and
das
or
inc
add
cs
sti
adc
pop
xor
sbb
and
sub
inc
repnz
test
adc
arpl
mov
sbb
daa
ret
in
adc
cld
es
fstpl
adc
pop
insb
sbb
sub
sub
xchg
fisubs
add
mov
decb
addl
cmp
inc
mov
or
fsub
mov
or
sub
ret
out
adc
xor
sbb
rcll
adc
inc
sbb
cmp
sub
and
adc
inc
sub
loopne
adc
add
dec
or
es
or
inc
mov
and
xor
or
mov
lcall
add
adc
or
lea
icebp
adc
pop
je
sbb
mov
jl
pop
push
jmp
jo
dec
push
mov
rorl
arpl
push
push
popa
jge
cmp
jg
add
inc
pop
adc
movsb
xor
dec
add
push
fcmovb
mov
sub
repnz
jp
or
sbbb
jg
ret
dec
sti
lcall
xor
adc
movsl
sbb
je
dec
test
and
loope
dec
cmpsb
loopne
movsb
loopne
aas
in
dec
sbb
push
dec
je
insb
fwait
and
shr
les
mov
cmp
lods
add
xor
mov
push
dec
aas
adc
clc
xor
dec
add
inc
mov
cmp
add
inc
jnp
xlat
aam
stos
std
add
sub
jp
adc
fildl
push
and
and
xorl
or
and
xchg
add
fs
js
mov
push
or
out
out
nop
ret
scas
fsubp
imul
adc
popa
sbb
jnp
or
pushf
jnp
int3
sbb
outsl
leave
dec
icebp
jge
pop
bound
ret
dec
jae
scas
or
mov
cmp
adc
pop
push
jl
jae
sub
push
inc
mov
test
nop
imulb
pop
or
push
xchg
cmpl
push
xchg
and
xchg
lock
sbb
arpl
add
mov
xor
out
push
cmp
adc
mov
pop
aam
or
ficoms
outsl
adc
adc
shr
sarl
add
int
adcb
imul
das
and
pusha
or
loopne
mov
subb
sbbb
sub
fs
push
jne
or
jle
imul
fisttpl
push
aam
fdivs
add
dec
or
dec
jl
shl
jno
ret
mov
jno
int
jb
test
test
xchg
cs
mov
add
cmp
mov
jge
add
sbb
mov
sub
cmp
inc
stos
dec
add
pop
lret
and
fadds
ss
lret
or
mov
addb
xchg
cmovbe
test
dec
jnp
mov
les
rcll
mov
sti
dec
stos
dec
enter
add
leave
punpcklbw
fdivr
push
pop
div
cmpl
in
cmp
jne
push
pop
or
inc
add
sub
cli
into
push
pop
cld
imul
mov
add
inc
inc
testb
rolb
ds
dec
push
push
add
inc
lret
cmpsb
fistl
mov
inc
fs
add
xchg
addl
lds
inc
mov
inc
adc
sbb
jg
cmp
mov
pop
cmp
out
and
mov
dec
or
and
dec
xor
sbb
hlt
sub
outsl
outsl
add
xor
mov
mov
push
push
sbb
add
or
shlb
dec
sbb
and
adc
xor
lcall
fcoml
xchg
inc
add
adc
adcl
int
cmp
hlt
mov
or
jnp
xor
xor
xor
imul
aaa
xchg
aam
lea
pop
sub
cli
dec
loopne
and
mov
dec
push
push
push
push
add
cwtl
into
add
out
in
dec
je
push
xor
in
movsl
rcr
inc
add
push
mov
sbb
mov
inc
xchg
or
roll
pop
lret
xchg
stc
pushf
push
add
test
lea
js
xchg
sbb
or
mov
icebp
cwtl
sub
fsts
xchg
pop
movsl
subl
lods
int3
cld
clc
fwait
xor
and
lods
arpl
in
movsl
fsubrs
mov
adc
push
push
pop
sarb
or
dec
mov
dec
out
rclb
sub
bound
and
lods
movsb
jge
jo
pop
pop
imul
test
xor
pop
inc
mov
push
and
movsb
jl
jmp
jge
xor
sub
outsb
popf
add
int
mov
outsl
xchg
call
or
je
inc
dec
adc
in
sub
mov
adc
cmc
fbld
and
clc
push
stos
std
loopne
inc
jg
cltd
jnp
ret
lea
inc
or
mov
lahf
lahf
cmp
insl
loopne
xor
xchg
xchg
xchg
test
rorb
inc
test
je
adc
pop
push
cmp
pop
aad
push
sub
lock
cli
mov
int3
xor
fdivs
xchg
xorb
dec
inc
dec
into
jo
adc
inc
dec
sub
iret
mov
xor
mov
bound
mov
mov
push
dec
and
xor
daa
cwtl
mov
insb
in
loope
or
adc
pop
or
jo
mov
mov
push
or
flds
arpl
dec
das
call
movsl
daa
les
nop
scas
sbb
mov
jae
sar
adc
adc
xchg
imul
fwait
les
insl
es
adc
jns
aaa
cmpsl
or
loope
jbe
push
add
xchg
mov
mov
inc
fwait
gs
adc
es
dec
inc
mov
cmp
push
in
dec
mov
and
les
je
mov
fnstenv
mov
jmp
push
inc
cmp
stos
mov
sti
or
cmp
nop
fisttpl
mov
push
cmpsb
pop
repnz
xor
lea
mov
mov
xorl
sarl
push
cmp
cld
push
or
xlat
mov
adc
push
test
xchg
jmp
or
sub
loopne
pusha
adc
loope
push
hlt
push
and
sbb
mov
adc
adc
sub
cmp
dec
ds
and
aas
xor
add
sbb
pop
je
adc
push
test
mov
xchg
in
cld
xchg
xchg
dec
or
faddl
jg
sbb
push
xlat
push
test
add
sub
lods
loop
pop
js
into
push
int3
xchg
sbb
repnz
adcl
xor
in
loopne
inc
and
inc
cld
je
push
push
popf
sbb
pop
xchg
outsl
push
mov
xchg
add
sbb
movsl
mov
int3
insl
inc
lock
mov
test
in
daa
nop
lret
in
shl
inc
jno
pusha
stos
ret
movsl
lock
mov
popa
lea
push
mov
push
inc
mov
xchg
cmp
adc
xchg
mov
fdiv
es
push
test
jp
jnp
push
test
dec
xor
or
into
adc
push
push
xor
cltd
leave
or
adc
fsts
ficoms
pop
mov
cmp
mov
aam
insl
xor
aas
mov
inc
or
push
ljmp
rcrb
and
cld
lret
adc
add
and
xlat
daa
es
pop
daa
or
lods
in
jns
movl
mov
push
ds
imul
clc
adc
or
add
mov
outsl
outsl
cmp
sub
aas
ljmp
add
inc
xor
aam
or
mov
push
fidivrs
rolb
cmpl
sub
mov
pusha
or
scas
push
ret
dec
sbb
add
inc
adc
and
mov
add
loopne
cld
ficoml
sbb
inc
push
adc
clc
lods
xor
out
or
push
add
and
cmpsl
push
jae
test
adc
mull
loopne
mov
decb
icebp
pop
clc
xor
push
cmpsb
in
push
gs
mov
adc
mov
popa
outsb
lret
aas
sahf
add
adc
adc
and
lock
in
rorb
test
push
orl
xchg
adc
xchg
subb
lods
and
or
ss
jp
ret
out
sbb
pop
xchg
xor
or
popf
prefetchnta
jb
mov
sub
pop
mov
sbb
pop
pop
cmp
ljmp
shll
roll
sbb
fmull
sbb
jnp
add
mov
xchg
cmp
dec
and
pop
jmp
or
adc
adc
dec
adc
pushf
sbbb
repnz
mov
inc
inc
add
gs
pusha
xor
dec
dec
cmpw
cmp
pusha
dec
add
addl
mov
mov
adcb
and
clc
loop
push
daa
add
add
pop
push
xchg
mov
jg
in
cli
lcall
lock
xchg
out
addr16
loope
add
and
stos
push
inc
orb
mov
lock
subl
adc
leave
or
gs
dec
pop
movsl
popa
mov
stos
outsl
sbb
icebp
add
pop
out
hlt
icebp
mov
cmpl
pop
sbb
push
add
xchg
sbb
ljmp
sbb
bound
xor
mov
gs
push
sub
fsubr
sub
testb
and
push
xchg
or
mov
ss
cmp
in
ljmp
mov
dec
int3
repz
xchg
test
popa
je
sti
ss
cmp
xor
add
outsb
mov
mov
cmpsb
pop
js
push
enter
in
ffreep
and
rcr
out
je
shll
sbb
js
xor
adc
js
roll
inc
push
sub
jo
cmp
xchg
adc
jo
xor
addr16
pop
and
xchg
loopne
scas
add
fcoml
aas
or
lret
orb
rorb
dec
inc
inc
or
daa
mov
mov
dec
xchg
inc
test
jl
mov
jmp
push
inc
or
hlt
lock
add
loopne
pop
and
out
les
outsl
clc
pop
rolb
pop
or
aas
jg
movb
push
jle
sbb
and
cmp
adc
jo
jmp
iret
pop
cld
sub
mov
push
adcl
pop
out
das
adc
cmp
inc
and
xor
arpl
push
sbbb
into
ret
popf
pop
repz
sub
nop
scas
mov
outsl
jge
dec
ret
test
mov
ss
inc
mov
loopne
fld
test
outsb
arpl
push
add
mov
adc
push
jno
and
sub
adc
aaa
xor
xchg
inc
lock
sub
fbld
sbb
pop
adc
jne
dec
jne
js
cmp
push
stos
sbb
dec
mov
push
lret
adc
push
rcl
push
push
and
lret
dec
pop
mov
or
sbb
xchg
jne
movsb
xchg
add
push
add
xchg
mov
mov
dec
dec
lods
in
test
push
adc
ret
xor
mov
lahf
push
je
mov
push
mov
test
push
test
enter
pop
cli
jge
sbb
sub
and
or
dec
or
shrl
nop
cmpl
cwtl
add
movsl
and
and
lods
shufps
sbb
dec
call
add
int
push
pop
orb
cmp
mov
cld
mov
or
add
pop
sub
or
push
mov
push
stc
xor
lock
pusha
push
push
dec
pop
or
rolb
aad
and
push
sbb
xorl
dec
inc
dec
lea
clc
pop
imul
outsl
ss
or
pop
stc
or
fstps
push
inc
lret
add
shrl
pop
inc
mov
or
dec
mov
mov
jmp
cmp
dec
dec
cmpsb
loope
mov
add
shl
test
les
push
push
lret
stos
add
ljmp
sbb
inc
jecxz
or
and
mov
or
mov
in
adc
mov
cmc
je
cmpb
jno
stc
in
mov
xor
lds
aas
adc
cmp
xor
jae
sbb
push
repz
in
popf
insl
cmp
or
push
data16
lahf
bound
or
xor
fistl
pop
inc
mov
sub
jg
jo
or
mov
outsl
sub
xchg
pop
scas
sub
in
add
or
mov
inc
add
sub
xchg
and
sub
js
fsubs
dec
sahf
jmp
sbb
out
adc
xchg
mov
ret
add
dec
nop
or
adc
pop
adc
adc
lret
adcl
adc
pop
fsubrs
add
rolb
push
addb
and
dec
cld
sbb
add
jne
push
mov
or
cmc
dec
push
sbb
dec
insb
imul
jg
test
and
icebp
xor
adc
mov
inc
or
je
adc
adc
add
js
sbb
pop
inc
je
push
inc
or
lods
clc
and
pop
adcl
sbb
fisttps
push
ret
scas
or
scas
loope
ret
jae
outsb
push
or
imul
cmpsl
inc
popa
sbb
push
in
push
stc
add
cmp
call
xor
jb
inc
push
adc
rolb
popa
dec
and
int
xchg
arpl
jne
orb
pop
ret
push
frstor
lods
xor
aas
push
pop
sbb
pop
call
pushf
rcrl
and
push
sub
insb
cli
pop
test
and
xchg
jae
pop
aaa
or
inc
mov
dec
fucom
push
inc
push
push
pop
incb
inc
push
add
lods
xor
mov
xchg
test
dec
mov
pusha
jecxz
cmc
ud2
mov
pop
out
loopne
adc
orl
mov
or
lods
dec
pop
lahf
push
xchg
andb
jge
fsubs
sub
and
jo
push
and
mov
mov
inc
pop
or
inc
addl
scas
dec
xchg
mov
daa
cmp
pop
iret
or
push
mov
aad
test
daa
lds
enter
push
sub
stos
mov
cmp
mov
js
ljmp
adc
pushf
ss
or
gs
push
mov
cmp
mov
mov
add
pop
mov
inc
sub
or
dec
mov
lods
and
and
dec
dec
stc
js
aam
pusha
mov
sub
loope
and
cmp
dec
pop
lods
lcallw
clc
pop
lea
pop
pop
maskmovq
imull
push
je
mov
movb
gs
shl
or
dec
push
push
pop
stos
ret
and
pop
jbe
popa
and
or
add
in
mov
cmp
clc
aam
and
mov
jmp
or
fdivl
and
fwait
push
sbb
adc
or
pop
mov
pop
mov
inc
rcr
or
inc
add
add
adc
xor
xchg
test
je
shrb
icebp
cmpsl
clc
pop
ja
jmp
mov
dec
cmp
in
fnstsw
test
dec
cmpsb
inc
dec
inc
into
pop
cmpsl
rclb
seto
inc
xchg
and
ljmp
or
cli
add
and
or
test
mov
jb
movsl
add
adc
sbb
inc
stc
shll
inc
popf
dec
andb
sbb
push
add
push
outsb
or
imul
pop
push
imul
xchg
mov
fwait
inc
and
aad
dec
pop
xchg
fimuls
mov
and
out
pushl
sbb
jg
fistl
sub
push
je
cmpsb
pop
mov
ds
jmp
enter
push
mov
xor
adc
sub
jmp
pop
loop
add
push
cmp
lahf
cmp
push
faddl
add
sbb
pop
test
sarb
mov
popa
cmc
add
push
jle
test
dec
push
sbb
xchg
mov
sbb
and
iret
adc
mov
movsl
aas
jns
xor
push
insb
or
idivl
xor
jne
add
das
pushf
or
and
sub
xor
je
inc
jne
cmp
es
dec
mov
cmpsb
imul
mov
leave
ret
and
inc
xchg
roll
in
int3
mov
jmp
mov
dec
or
cmp
xchg
mov
inc
sub
cmpsl
xor
dec
jo
push
jne
bound
mov
jl
shl
loope
push
pop
dec
pop
loop
push
call
ret
pop
adc
lret
mov
or
ret
push
mov
xor
xchg
push
mov
lea
in
sbb
cli
adc
mov
dec
pop
jno
test
or
andb
xor
push
cmc
cmpsl
aas
add
or
xor
dec
jae
mov
pop
leave
mov
arpl
xchg
push
rcrl
outsl
jmp
jle
adc
nop
inc
pop
jmp
sahf
lods
mov
sbb
roll
adc
cmp
pop
mov
add
and
loope
std
cmpsl
add
mov
sub
sti
sbb
mov
movsl
jno
test
cwtl
int3
addr16
pop
add
lock
inc
cmp
ret
sbb
arpl
popa
mov
push
adc
push
into
pop
or
and
jge
orb
iret
xor
and
or
inc
jl
inc
test
lret
jne
lock
xor
mov
push
inc
jge
adc
fisubl
lahf
and
pusha
push
pop
cmp
push
nop
or
push
fidivrl
push
mov
cmp
mov
push
inc
sub
lock
jg
aam
xchg
subb
inc
dec
mov
popf
pop
mov
pop
cmp
popa
adc
cmp
xchg
push
cli
test
mov
lea
mull
mov
pop
jmp
sub
and
push
mov
ja
pop
dec
sbb
sub
test
repz
divb
insb
sub
mov
push
mov
arpl
push
ret
xchg
aaa
fistl
push
mov
notb
sbb
cmp
clc
xchg
or
inc
call
dec
imul
ret
loopne
push
cmp
or
xlat
or
cltd
push
daa
and
pop
xchg
ret
cwtl
dec
push
xor
xchg
mov
scas
cmp
mov
ret
data16
test
dec
adc
test
mov
les
jge
adc
movsl
and
push
rclb
jne
sbb
xor
shll
xchg
and
daa
stc
lods
pop
js
adc
sbb
xor
add
pop
or
and
mov
hlt
arpl
and
addr16
cmc
add
lea
pop
push
dec
jge
cmpb
gs
push
shll
jp
shlb
mov
nop
push
loopne
jne
ret
add
jg
aam
inc
cmpsl
jae
pop
fs
aam
mov
xor
fwait
in
xor
jmp
pop
nop
ja
or
test
outsl
lods
adc
ret
leave
add
or
pop
sub
aam
aaa
push
push
ja
arpl
jo
or
cmp
sbb
nop
inc
push
pop
and
nop
lret
and
sti
adc
mov
or
inc
pusha
mov
mov
in
lods
shll
js
adc
sub
pop
fldt
pop
call
push
aas
mov
jae
into
mov
ds
out
or
and
adc
or
fidivl
add
or
es
push
adc
and
inc
or
scas
jne
in
sbb
pop
insl
das
in
push
push
mov
add
xchg
andb
ret
je
mov
pop
cmp
xchg
xchg
shufps
loope
push
sub
inc
xchg
out
in
in
inc
push
push
inc
cmp
cmp
sarl
mov
inc
ja
sti
mov
jp
xchg
test
in
stos
arpl
add
pop
ja
into
ror
ret
in
adc
cmp
push
xor
sbb
repz
pop
pop
or
jl
lret
subl
test
cmp
rol
iret
ret
cwtl
mov
xchg
cwtl
xchg
sub
xchg
cmc
add
or
adcb
mov
mov
aad
test
sbb
lods
xbegin
rcl
cmp
jmp
mov
stc
inc
mov
je
ds
dec
call
xchg
pop
and
sbb
xchg
or
mov
cmp
daa
push
sbb
mov
dec
cmpsl
clc
or
adc
and
or
add
clc
xor
adc
push
dec
or
xor
insl
pop
daa
insl
or
and
ja
pop
mov
movsb
icebp
dec
adc
inc
xor
adc
sbb
xor
jmp
sub
dec
insl
sub
mov
shll
filds
adc
sbb
and
xor
sub
out
aaa
push
push
dec
test
or
and
xor
push
das
outsb
xchg
jg
pop
mov
jne
sbb
sti
mov
or
lcall
mov
add
mov
imul
stos
xor
mov
mov
jmp
push
gs
ss
add
xor
mulps
add
jp
ret
push
adcb
xchg
mov
and
maskmovq
testl
mov
fwait
inc
mov
jge
xor
js
xchg
xchg
pusha
pop
add
in
adc
xor
hlt
pop
and
ficomps
jo
fdiv
xor
push
call
mov
sub
adc
movb
popa
in
xor
mov
loop
rolb
loop
jg
mov
ret
cltd
push
pop
and
mov
fisttps
jl
xchg
lea
shll
pop
jo
pop
ror
inc
sub
sbb
scas
or
adc
sbb
sbb
fisubrs
push
ja
popl
mov
xor
xchg
insb
mov
xor
data16
pop
or
je
xor
and
faddl
add
jb
add
scas
repnz
or
add
add
cmp
sbb
inc
popf
les
push
pop
mov
mov
test
dec
sbb
mov
call
out
xchg
cmc
gs
add
bound
xchg
and
fiadds
sub
add
movsb
lock
adc
adc
pop
mov
xchg
out
test
cmp
or
and
dec
cmpsb
call
outsb
cwtl
pusha
std
rorb
fmul
inc
test
aam
adc
pop
pusha
xor
movb
dec
test
out
add
adc
mov
jbe
ret
dec
mov
insb
add
xchg
mov
inc
push
push
lods
jmp
fistps
add
cmp
xor
add
test
cs
dec
inc
mov
jle
sub
imul
add
mov
scas
add
inc
inc
mov
sub
shlb
or
or
cmp
xor
dec
or
push
sbb
test
inc
mov
push
mov
daa
or
mov
adc
pop
jmp
inc
jecxz
sbb
mov
sbb
scas
adc
loopne
push
sub
testl
or
iret
mov
out
push
and
jle
adc
push
xchg
mov
and
orl
pop
popf
lret
adc
add
sub
or
xor
lock
add
mov
pop
jmp
mov
sbb
push
test
push
test
fldl
add
sbb
xor
push
loopne
test
fmul
or
mov
fadds
jmp
xchg
or
dec
les
sbb
xchg
mov
lods
hlt
or
add
push
adc
sbb
addr16
ficoml
pop
sub
inc
pop
jge
adc
js
aaa
xchg
sbb
add
xor
pop
std
mov
scas
mov
scas
lock
xor
adc
mov
inc
test
jge
add
add
dec
outsl
int3
mov
or
jne
sbb
test
in
pop
cmp
sbb
mov
mov
dec
cmp
inc
shll
push
test
or
jmp
push
inc
out
dec
sahf
pop
dec
leave
jae
mov
nop
outsl
or
mov
jne
inc
imul
cmp
cwtl
pop
push
mov
jge
jo
int3
pop
mov
or
rcrb
mov
dec
out
lret
nop
imul
lods
push
mov
icebp
sub
adc
add
and
sub
call
outsb
popa
or
jp
pop
adc
in
add
or
sub
sub
aam
int3
mov
add
sub
pop
mov
add
loopne
fsubs
movsb
push
imul
adc
or
pop
add
sbb
cmp
mov
mov
xor
test
mov
push
adc
dec
add
shlb
add
ds
pop
scas
pop
mov
pop
pop
lcall
push
ja
nop
mov
mov
ret
decl
and
jge
notl
xchg
adc
incb
fsubrl
push
mov
and
iret
xchg
mov
js
fiaddl
ret
mov
imulb
fldcw
inc
nop
add
adc
lods
int3
inc
ficoms
mov
int3
ficoml
or
icebp
movsl
sbb
or
pusha
pop
ss
jbe
jb
sbb
inc
cmpsl
ss
sbb
movsb
dec
sbb
push
inc
sbb
add
sub
mov
mulb
add
xor
testb
jno
fnstenv
push
scas
leave
cld
lea
lea
les
fnstsw
cmp
arpl
in
push
lock
in
mov
ret
sub
add
or
adc
add
int
mov
test
adc
adc
loopne
sbb
add
cmp
sub
mov
pop
xor
push
rorb
adc
and
add
jae
fadds
jne
or
cmpsb
decb
mov
mov
fwait
adc
inc
pop
and
xchg
hlt
sbb
or
jle
shll
lock
cmp
sbb
push
test
loope
xor
sub
push
xor
das
push
inc
aam
inc
in
xchg
push
fists
in
or
in
mov
sbb
dec
sub
jae
mov
xor
inc
dec
call
movb
sbb
jle
sahf
push
daa
mov
and
inc
xchg
add
aaa
into
hlt
sub
xlat
xor
xor
cmpb
xor
or
mov
subb
stc
adc
lcall
mov
and
fdivr
jnp
adc
jb
mov
mov
sub
and
int
sub
push
mull
dec
js
or
and
adc
push
or
push
add
in
shlb
sbb
push
adc
sbb
or
and
lds
xor
fisubl
jge
or
cmp
jmp
orb
add
adc
test
mov
mov
mov
mov
lock
pop
and
cmp
push
and
xor
pop
lods
lods
mov
or
or
sbb
movsb
inc
adc
sbb
dec
std
imul
push
jno
gs
jmp
sbb
lahf
push
inc
adc
or
ret
into
jns
adc
orb
mov
push
jno
xchg
sbb
add
adc
sbb
pop
sub
xlat
mov
pop
es
dec
out
inc
and
jns
add
and
fsubl
nop
add
mov
jg
cmp
mov
adc
pop
cmp
insl
jecxz
mov
pusha
and
incb
push
dec
xchg
add
inc
adc
je
mov
incb
mov
mov
push
add
ja
mov
dec
pop
stos
add
dec
cwtl
lcall
adc
mov
push
jb
ret
fisubrl
jo
dec
test
push
insb
push
fs
in
push
les
outsb
adcb
orb
add
frstor
cmpsl
mov
push
add
mov
push
aam
jmp
std
jbe
in
in
fisubrs
jno
stos
stos
push
test
add
pop
mov
test
add
adc
or
or
shr
pop
mulb
adc
adc
das
mov
add
rcrl
loop
xchg
mov
adc
inc
add
ret
inc
test
or
hlt
adcl
mov
mov
or
lea
insl
adc
out
loopne
shlb
push
aam
cs
lock
sti
jmp
push
sub
fdivs
std
mov
or
pop
fmulp
push
push
lock
fwait
jne
nop
fs
test
add
movsb
adc
outsl
rcrl
sbb
or
mov
in
lods
adc
enter
mov
dec
add
cmpw
jne
push
roll
cld
pop
jge
jg
push
inc
test
leave
jnp
sbb
js
mov
addl
or
rclb
mov
enter
shl
jno
jae
hlt
inc
fistps
leave
cmpsl
pop
popf
loopne
in
lret
dec
mov
xchg
push
jecxz
imul
imul
addl
dec
je
orl
dec
jo
jecxz
pop
cmovp
push
insb
mov
shl
or
inc
addr16
int3
mov
movsl
mov
sahf
rcr
mov
mov
push
lock
pusha
in
out
xor
or
sbb
and
out
push
prefetcht2
add
ret
push
mov
or
mov
inc
sarl
out
stc
mov
inc
out
jmp
mov
mov
andb
loope
mov
aas
in
imul
xor
test
inc
data16
in
in
add
nop
out
pop
push
or
adc
sbb
or
and
fbstp
cmp
shrb
mov
lds
lret
bound
mov
adc
sub
fldl
sub
push
sbb
jae
add
and
push
insl
or
sbb
add
sub
jae
sub
xor
adc
mov
cld
mov
sub
cmpsb
xor
xchg
iret
xor
js
jbe
push
xchg
sbb
adc
inc
vmovupd
movsb
and
test
add
insl
mov
pop
and
sub
mov
aam
dec
cmp
cmp
xchg
movd
or
sbbl
mov
push
pop
mov
cld
sti
emms
or
jecxz
bt
ret
shll
dec
or
das
and
inc
fs
jne
or
test
sti
out
jge
stc
filds
or
mov
mov
sbb
and
push
add
inc
or
lea
jg
xor
mov
xchg
or
add
jne
mov
cmp
pop
fs
pop
dec
mov
or
xchg
push
or
mov
aaa
sahf
flds
pop
loopne
dec
push
adc
outsl
or
mov
jg
mov
jmp
dec
push
loope
rolb
mov
fbld
adc
pop
adc
inc
cs
sti
xor
xor
call
mov
push
daa
add
outsb
lods
adcb
outsb
loop
repnz
jge
mov
add
xor
les
sbb
and
and
jmp
lea
dec
in
add
test
popa
sub
sub
and
popa
mov
out
inc
xchg
call
pusha
orl
lcall
push
inc
pop
test
sarl
push
inc
or
lods
push
or
cmp
fnstenv
imul
loopne
scas
xchg
test
add
jae
jne
mov
stos
push
mov
xchg
rcrb
sbb
mov
cmp
mov
xchg
dec
push
arpl
mov
or
ret
mov
dec
adc
je
add
adcb
sti
insl
js
jae
jl
jo
cltd
mov
adc
fdiv
test
add
inc
outsl
mov
add
hlt
addb
jnp
add
xor
pop
inc
or
cwtl
cltd
add
inc
std
xchg
sbb
or
stos
xor
ljmp
sar
fsub
sub
add
sbb
stc
sub
xor
pop
or
not
or
xor
leave
mov
fnsave
and
jo
push
lea
jnp
test
add
jb
cmp
jno
and
js
aam
add
enter
in
dec
insl
in
pop
mov
mov
mov
hlt
ss
mov
hlt
add
push
sbb
mov
andl
add
jle
or
cld
insb
jge
xchg
insb
or
push
or
decl
push
inc
dec
outsl
mov
rorl
rclb
inc
imul
lret
pop
jbe
mov
mov
addb
push
sahf
out
sub
cmpl
sub
decl
imul
or
push
and
ret
divl
inc
jno
cs
fbld
jo
push
cmp
xchg
xchg
inc
add
xor
inc
clc
clc
sbb
add
or
sbb
sub
mov
fisttpl
pushf
cmp
andb
loopne
ret
mov
and
mov
or
nop
mov
ret
or
pop
daa
add
push
mov
mov
sbb
jge
sbb
adc
nop
inc
cs
adc
iret
aam
push
mov
xor
clc
sbbl
cmp
jge
cmp
in
xchg
inc
jle
sar
inc
dec
loopne
repz
pop
cmp
fcomps
loopne
mov
fcmovnbe
sub
push
mov
ret
push
xor
shrb
add
jge
lret
loopne
rolb
mov
hlt
sub
push
cmp
add
add
fs
jns
mov
movsl
cmp
movsb
and
xchg
mov
or
nop
testb
sub
cmp
fcomps
xor
and
or
and
jle
inc
xor
test
pop
out
and
in
xor
cmp
insl
lods
and
in
popf
adc
add
adc
pop
push
lahf
repnz
cmp
test
add
push
iret
std
cs
jmp
popa
add
cmp
xchg
pop
sbb
cmp
inc
or
push
or
inc
inc
mov
push
xor
dec
dec
mov
clc
jne
push
or
adc
and
cmp
push
sti
stos
ret
inc
sub
adc
lods
mov
sbb
gs
push
rclb
adc
repnz
repnz
test
lock
sbb
adc
clc
mov
inc
push
in
pop
add
sub
or
mov
mov
stos
or
pop
ja
pop
and
jmp
mov
and
scas
lods
mov
adc
dec
jmp
cmp
addb
rolb
jnp
push
dec
or
xor
sbb
jnp
jp
adc
or
and
push
xor
push
cmpb
mov
mov
mov
adc
pop
cmpb
push
sub
or
sbb
sub
or
inc
and
pop
and
and
clc
inc
xchg
push
js
adc
sbb
xchg
hlt
add
pusha
fs
cmp
ja
je
pop
rcrb
fimuls
icebp
rcll
test
cmp
adc
inc
lds
and
add
cmp
bound
push
in
push
ret
and
rclb
loopne
mov
in
fs
fnstcw
xchg
test
pop
or
das
xor
nop
add
cmp
cltd
mov
jbe
inc
cs
jp
cmp
lea
jg
mov
icebp
pop
pushf
in
pop
mov
scas
add
jmp
sahf
rorb
outsb
jecxz
add
pusha
sub
xor
cwtl
daa
or
stc
ret
aaa
rolb
or
xchg
int3
add
iret
cmp
jbe
dec
adc
dec
hlt
sbb
pop
adc
pop
jmp
pop
jne
sbb
mov
pop
cmp
jl
mov
cmpb
sbb
inc
fs
dec
sbb
adc
sbb
jne
inc
jo
adc
push
movsb
add
push
ret
repnz
or
dec
mov
push
repz
or
pushf
scas
xor
mov
jmp
or
movsb
fnstenv
inc
xchg
add
or
out
cmp
sub
test
add
jp
adc
lea
hlt
or
push
and
leave
cmpsl
gs
push
jmp
xor
adc
nop
mov
rolb
push
add
lret
ret
cmp
jne
adc
stos
inc
sbb
movsb
dec
mov
mov
insl
xor
jp
fldcw
push
mov
push
subb
sbb
jg
push
or
push
jne
scas
jnp
aaa
mov
cmp
lock
pushl
sbb
mov
cmp
jne
lcall
pusha
dec
jne
movsb
inc
sbb
repz
jbe
or
inc
or
jmp
adc
push
fsubrl
sub
mov
dec
mov
cmpsb
inc
pop
stos
mov
lods
mov
push
add
jne
or
stos
push
cmp
add
fcoms
inc
and
fisubrl
or
mov
mov
xchg
adc
jmp
jmp
je
mov
shll
pop
pop
inc
pop
and
movsb
pop
mov
add
aaa
push
scas
push
int3
in
xchg
xchg
leave
jo
xor
sbb
call
sub
leave
adcb
iret
push
xchg
rclb
sub
inc
push
mov
sbb
xchg
xchg
xchg
adc
or
stos
mov
and
push
pop
mov
movsl
add
mov
dec
mov
aas
inc
inc
imulb
popf
cmp
dec
or
repnz
xchg
jae
mov
lock
push
je
mov
xor
rcrb
adc
inc
add
lret
adc
fsts
xlat
push
push
xorb
ss
sahf
fsubrp
sub
pusha
or
dec
push
inc
or
imul
push
or
push
test
jno
paddb
adc
or
dec
aas
fdivrs
or
or
clc
and
adc
and
pop
cwtl
pop
sbb
pop
or
adc
add
push
jne
push
cmc
pop
idivb
and
inc
adc
add
jl
lea
imul
outsl
or
xorl
sub
aaa
or
add
push
or
add
push
mov
push
out
sbb
pop
adc
rclb
xor
dec
shlb
adc
loope
mov
insb
sbb
je
je
lds
and
inc
pop
mov
loopne
add
out
push
popf
pop
rorb
mov
mulb
dec
jno
repnz
hlt
fcomi
rcrb
sub
jno
mov
daa
pop
insl
dec
push
sub
jbe
out
jl
daa
fcomip
in
es
adc
sbb
push
in
adcl
push
cmovl
daa
pop
sbb
inc
mov
movsb
dec
or
js
mov
add
and
dec
lock
or
inc
add
pop
shl
cmp
inc
dec
pop
scas
or
pop
push
push
bound
sbb
sub
mov
jle
or
jl
dec
ret
mov
dec
test
sarl
dec
mov
lock
cmc
aad
popl
scas
cmp
mov
mov
popa
out
dec
mov
or
bound
add
cmp
cmp
push
adc
imul
imul
xor
call
out
mov
mov
push
cli
xchg
xchg
add
add
mov
fucom
inc
add
scas
incl
push
and
fwait
inc
insb
sub
movsb
scas
mov
insb
cmpsb
dec
lock
push
add
pop
repnz
xlat
out
jno
rolb
mov
movsl
enter
push
sbb
adcb
ret
or
jo
fs
out
inc
push
fisubrl
adc
dec
sarl
mov
fstpt
aam
dec
in
ss
mov
adc
pop
fs
cmp
adc
xor
add
clc
mov
mov
add
cltd
inc
xchg
scas
inc
rcrl
and
cmp
sbb
and
lret
push
hlt
lods
andb
xchg
push
ret
xor
test
rcr
sub
out
cmp
add
inc
mov
std
es
mov
jae
lret
pop
fdivrs
call
sbb
or
dec
mov
push
sbb
and
lahf
sub
pusha
clc
cltd
or
inc
jo
pop
push
mov
jge
dec
sbb
push
dec
push
je
xor
lahf
insb
mov
into
inc
xchg
sbb
or
or
subl
jge
cli
push
xchg
das
call
shlb
test
movsb
sub
inc
inc
jne
mov
add
and
pop
dec
jne
adc
sahf
xorb
inc
mov
add
push
push
sub
divb
dec
push
and
and
dec
add
ret
push
addl
adc
xchg
sub
adc
adc
mov
adc
add
sbb
xchg
arpl
add
mov
mov
xorb
addr16
nop
inc
sub
mov
mov
xor
fadds
into
fcomps
push
push
andl
mov
dec
xchg
andl
inc
inc
jo
addr16
or
inc
mov
pop
inc
addb
and
jnp
rorl
push
inc
in
jbe
or
jmp
xor
rorl
dec
sbb
fiadds
or
dec
rclb
inc
in
pop
fmull
test
icebp
or
test
ja
mov
and
adc
inc
push
rorl
sbb
jl
or
orb
or
sub
cmp
js
imul
adc
aaa
pop
adc
push
mov
xor
cmpsl
jo
bound
js
jmp
mov
daa
sbb
adc
sbbb
or
ror
fxch
jae
pop
sub
push
mov
mul
lahf
and
sbb
and
xchg
ss
inc
jle
sbbl
sub
mov
push
push
mov
sub
sbb
xor
or
adc
adc
repnz
push
mov
or
sbb
pop
sarb
adc
mov
add
fnstcw
fmuls
test
mov
repz
and
add
sbb
movsl
cmpsb
and
sub
dec
push
shlb
cmp
adc
adc
cmpl
push
xchg
ja
adc
jl
or
sbb
push
xchg
jg
idivb
jmp
jg
pop
add
and
sub
sbb
xor
ret
or
and
inc
mov
mov
ret
pop
jmp
fwait
outsb
push
mov
sub
cmp
or
iret
pushf
push
nop
adc
dec
adc
js
mov
adc
pusha
popa
and
push
and
xor
orb
and
sub
sub
jbe
xor
ds
fcoml
fistpl
jmp
xchg
add
in
cmpb
add
sub
and
fs
jp
jae
and
sbb
sub
sbb
jle
or
inc
jp
or
enter
movsb
pop
xchg
daa
and
shld
or
test
xchg
push
sub
or
add
add
ja
shl
inc
loopne
jbe
ret
jle
mov
xchg
call
sbb
push
daa
push
lock
inc
add
add
mov
outsl
sub
clc
clc
jle
sahf
add
int
cmpsb
popa
push
cltd
pop
xchg
hlt
hlt
jbe
add
push
out
adc
add
dec
pop
test
add
in
dec
cmp
push
mov
mov
enter
call
and
stc
and
sub
movsb
test
decl
scas
in
jge
cmp
outsb
enter
lock
mov
jne
adc
push
je
pusha
insl
dec
icebp
addr16
pop
jmp
pop
jmp
or
call
pop
stc
push
and
xchg
adc
add
or
sbb
add
inc
pop
lods
lock
pop
pop
cmp
push
lea
aaa
push
xor
mov
test
out
scas
dec
push
and
xor
bound
mov
dec
aam
mov
push
jmp
negl
sbb
and
cmp
push
inc
push
jbe
call
add
inc
pop
outsb
push
mov
ret
pop
adc
xchg
int3
sbb
and
sbb
std
shll
int3
dec
mull
or
clc
lods
or
inc
imul
lret
ret
sbb
cmpb
sbb
jle
lea
push
mov
jbe
arpl
or
push
mov
inc
mov
dec
pop
fstpt
lods
fnstcw
and
jae
aas
jle
pop
loopne
push
dec
jno
add
sbb
push
xor
cli
loopne
movsl
fdivrs
push
or
cmp
cmp
push
dec
insb
mov
and
jecxz
sbb
mov
adc
jp
orl
add
dec
enter
and
clc
fildl
adc
cmpsb
and
movl
call
lret
sub
xor
loope
jns
rol
xor
push
xor
imul
sbb
push
data16
dec
daa
popa
pop
nop
push
test
mov
add
xchg
adc
mov
or
add
mov
fbstp
outsb
and
mov
pusha
dec
or
cmp
jns
adc
inc
lret
dec
and
pusha
ss
ret
cmp
aam
sub
adc
adc
sub
and
add
inc
inc
adc
dec
and
pop
daa
call
jae
mov
add
cmp
jmp
dec
in
sub
add
push
inc
outsb
aaa
inc
jnp
sub
or
push
dec
sbb
inc
mov
shrb
cld
dec
cmp
pop
stos
sbb
cwtl
and
mov
movsb
sti
inc
xchg
hlt
mov
pop
inc
fsubl
int
or
xchg
inc
push
add
sbb
sub
or
int3
jnp
or
add
adc
add
outsb
dec
adcb
jo
and
and
add
add
and
dec
or
sub
inc
or
imul
cmpl
push
add
les
push
orb
pop
das
inc
bound
adc
push
or
xor
add
shlb
cmp
cmp
and
ds
add
notb
xchg
mov
nop
inc
inc
jb
sbb
or
pushf
mov
push
mov
xor
mov
push
arpl
in
pushf
hlt
dec
add
xchg
mov
ljmp
ret
inc
subb
scas
lret
add
sbb
inc
nop
sarb
xchg
add
repnz
sub
push
sti
icebp
cmp
push
cmpsb
inc
mov
mov
outsb
cwtl
sub
in
addr16
mov
xor
lds
and
in
mov
fwait
and
lcall
adc
mov
or
jae
sub
adc
jmp
dec
sub
decb
cld
roll
or
jge
jbe
add
lea
xor
add
mov
sti
pop
push
lea
push
mov
ret
pop
pop
jb
aam
inc
inc
aam
ret
popa
imul
xchg
cmp
dec
imul
push
fisttpll
lcall
sbb
push
or
sbb
fildl
push
scas
cmp
gs
xchg
nop
sbb
xlat
ljmp
inc
cmp
pop
jmp
pop
sub
xor
popa
inc
jecxz
movsl
mov
stos
rcll
adc
and
jae
jns
call
sbb
push
mov
sub
insl
cmp
lock
cmp
lock
loope
rcrl
adc
rclb
scas
lods
rcrl
aad
adc
dec
ret
gs
sub
dec
loopne
add
or
clc
movsb
mov
add
js
pop
ret
shlb
outsb
mov
pop
mov
add
popa
lods
or
or
addl
shrl
inc
scas
je
aam
les
dec
pusha
out
divl
push
test
xchg
loopne
adc
add
fs
test
fldl
mov
push
jnp
outsl
push
iret
cli
or
jne
push
es
rcrb
push
adc
rolb
cmp
out
xchg
cmp
adc
sbbb
push
lods
sub
pop
or
shr
ret
andl
xor
insb
sbb
push
sub
enter
or
mov
out
or
outsb
sbb
add
sbb
and
aam
rorl
or
jmp
aaa
lock
add
cmp
adc
fs
in
adc
xchg
or
sub
pop
adc
lea
les
scas
mov
and
push
mov
mov
push
adc
imul
pop
sbbb
adc
mov
sub
aas
push
bound
sub
andb
ret
jbe
sub
outsl
scas
cmovnp
adc
add
loopne
cmp
mov
insl
call
fildl
dec
inc
lcall
sbbb
add
adc
cwtl
jp
jmp
or
stos
adc
adc
dec
cmpl
xor
jp
or
adc
pop
xchg
add
lods
push
push
adc
inc
pop
daa
push
and
adc
movsl
xchg
shrb
lods
mov
sbb
rcrb
ret
xor
sbb
or
popl
and
addl
and
cmp
into
bound
cmp
fists
fdivs
cmp
sub
lock
xchg
push
iret
adc
sub
daa
xor
lds
sbb
daa
in
rclb
pop
lea
lea
insb
in
hlt
pushf
je
cltd
xor
data16
add
inc
addr16
sti
fwait
cmp
orl
nop
pop
shrl
popl
sbb
or
or
dec
adc
adc
or
and
pop
rcrl
pop
cli
pusha
dec
xchg
in
jmp
movsb
jnp
cmp
scas
es
sub
into
mov
stos
arpl
lock
in
xchg
loop
mov
cmpsl
sbb
daa
jecxz
imull
in
or
clc
ljmp
mov
push
xchg
push
add
jo
dec
lcall
adc
loop
pop
add
sub
lcall
cmp
les
cmp
mov
sub
test
ret
jb
daa
testb
std
and
and
or
adc
add
pop
xchg
out
jge
and
or
pop
inc
js
rorb
jb
cmp
bound
mov
sbb
xchg
jno
jo
dec
cmp
movsb
jno
inc
bound
pusha
pop
pop
daa
push
pop
push
adc
jl
inc
pop
testl
or
ret
dec
cmp
sbb
arpl
push
add
add
test
adc
pop
xor
adc
lods
ret
push
push
cltd
adc
push
pop
in
or
mov
and
fwait
xchg
add
add
fldl
minps
push
ret
add
out
jne
shl
add
test
jo
jmp
xchg
mov
xchg
pop
rcll
cmc
inc
or
cbtw
push
fadds
sub
test
sbb
flds
adc
add
adc
iret
lods
mov
push
adc
dec
jp
mov
pop
inc
adc
pop
int
inc
pop
sbbb
fs
xorb
mov
push
arpl
push
or
pop
cld
je
mov
mov
and
xor
jle
decl
add
loope
lahf
cli
and
jle
or
xchg
nop
pop
xor
adc
test
aaa
ret
sbb
pop
mov
pop
pop
fwait
add
dec
inc
daa
movb
jp
sub
jbe
jbe
leave
dec
aad
movsl
movsl
ja
clc
mov
pusha
ret
enter
imul
rcll
adc
jg
push
sbb
jge
test
pusha
sub
out
fisubrs
out
ss
ss
adcl
push
scas
inc
xor
add
imul
push
inc
xlat
icebp
je
mov
adc
and
mov
add
inc
ret
sbb
rclb
dec
mov
mov
loop
unpckhps
sub
cltd
cmp
call
mov
out
mov
pop
gs
outsb
cmp
inc
dec
or
adc
mov
ret
jg
fs
sub
dec
push
mov
int
jo
sbb
inc
pop
push
fadds
cmp
loop
icebp
inc
push
test
push
push
and
mov
xor
jb
inc
sub
pop
test
and
add
cltd
push
jmp
sbb
mov
and
adc
loopne
jne
divl
faddl
outsb
jg
inc
xchg
stos
loope
ljmp
xchg
sub
das
sbb
ret
adc
inc
shll
push
push
adc
cmp
jmp
inc
outsl
mov
icebp
dec
jmp
inc
cmp
and
movsb
xchg
push
test
push
ret
mov
aam
and
mov
aaa
mov
sahf
xor
dec
ret
pop
call
jmp
cmp
notl
cmp
cmp
cmp
call
mov
pop
push
inc
xor
jno
add
aaa
pusha
jb
sub
ss
adc
test
fildl
push
hlt
sbb
dec
movsb
ficoms
pop
dec
inc
lea
sarb
adc
adc
inc
pop
ss
dec
and
roll
fs
mov
adc
or
movsb
mov
add
lahf
add
mov
inc
adc
push
xor
pop
mov
movsl
addr16
nop
dec
mov
mov
push
lcall
arpl
rcl
sbb
test
jne
adcb
movsb
gs
inc
jo
mov
ja
test
popf
add
push
xor
out
cmp
aaa
inc
push
xor
sub
push
cmpb
dec
jg
or
inc
add
inc
test
mov
dec
repz
movsl
pop
aas
inc
fdivs
sbb
sbbb
popa
push
rcrl
dec
daa
pop
cwtl
neg
out
cmpl
xor
mov
fmuls
enter
outsl
jno
mov
dec
adc
lods
mov
ret
and
in
mov
incl
sub
add
sub
inc
add
inc
push
dec
sbbl
and
or
sub
dec
mov
and
rorb
and
pop
add
clc
test
inc
push
inc
adc
adc
ret
sbb
mov
dec
push
adc
add
lret
lahf
and
dec
fs
inc
in
icebp
add
xor
call
in
call
xchg
scas
rcrb
loopne
pop
push
negl
outsl
leave
jne
hlt
xchg
js
sbb
jae
test
jne
jne
adc
dec
and
ljmp
jne
test
sbb
or
inc
push
popa
jno
add
jbe
ds
fucomip
xchg
xor
sbb
jo
xchg
mov
adc
std
xchg
pop
cmp
jl
enter
or
dec
push
pop
xor
inc
fimuls
nop
xor
xor
add
xor
mov
inc
push
add
test
pop
repnz
pop
inc
xchg
lahf
ret
push
mov
cmp
enter
dec
rcrl
cmp
jne
divb
xchg
outsb
push
and
or
adc
adc
sub
sub
pop
mov
or
mov
jae
xchg
cmp
pop
adc
adc
cmp
pop
imul
sbb
or
lsl
adc
pushf
xor
adc
inc
adc
mov
jo
lahf
inc
loop
popa
imul
ret
xor
jmp
in
inc
push
out
dec
dec
jecxz
add
and
shlb
and
or
xchg
mov
stos
lods
and
and
jne
sub
adc
sub
inc
scas
fiadds
js
cmpb
cmp
popa
jae
ficoml
mov
pop
stc
ret
sbb
dec
pop
cwtl
or
sbb
adc
or
xchg
and
mov
je
subb
dec
sbb
push
nop
adc
push
xchg
jg
sub
lret
xchg
jle
inc
sub
or
inc
leave
inc
add
push
dec
pop
test
out
roll
or
mov
and
jmp
push
std
push
push
jo
mov
scas
lea
icebp
fldt
movsb
mov
xor
inc
mov
and
pusha
inc
adc
rolb
daa
insl
sub
mov
dec
adc
push
and
mov
stos
sbb
sbb
test
shrb
and
add
mov
fisttpll
jmp
push
paddsb
or
mov
imul
push
decl
nop
sub
pop
adc
inc
jo
orl
mov
or
and
push
shrl
into
push
or
mov
adc
pop
sub
push
js
adcl
mov
dec
les
mov
cltd
adc
sub
sbb
addb
and
mov
cld
push
xchg
popf
test
mov
inc
ja
add
dec
inc
idivl
sahf
cmp
add
push
mov
mov
popf
imul
jnp
or
lock
hlt
sbb
push
cltd
nop
imul
cld
enter
js
repnz
xchg
or
cld
adc
insb
adc
inc
sub
add
les
jbe
ret
xchg
dec
sti
xor
adc
jo
rolb
dec
fisttps
fwait
js
sub
add
aaa
jno
inc
insl
lret
dec
daa
and
nop
test
xor
mov
aaa
push
ficoml
inc
or
mov
jbe
cs
lods
xchg
jne
test
leave
mov
pop
push
mov
jae
aas
cmpsl
mov
and
and
pop
fcoms
push
addr16
pop
pop
mov
aaa
insl
ret
pop
or
daa
dec
bound
inc
adc
jns
call
nop
xor
sbb
push
aam
jo
pop
and
je
push
in
mov
mov
adc
inc
jne
pop
jb
dec
test
xchg
sbb
sbb
sub
mov
push
jnp
idivb
sbb
push
sub
stos
out
pop
add
or
sub
xor
adc
xchg
loopne
arpl
add
cmp
or
mov
dec
mov
aad
or
or
pop
orb
add
sbb
sbb
sub
movsl
iret
pop
sub
mov
in
out
dec
repnz
fldl
pop
nop
mov
xorb
sub
push
scas
adc
outsl
cltd
cmp
lahf
and
fldl
mov
ds
mov
inc
dec
sub
mov
push
xchg
sbb
sbb
ja
dec
jnp
adc
mov
cwtl
mov
inc
testl
or
jae
aas
or
test
call
push
pushf
jne
pop
dec
mov
adc
jo
mov
push
mov
aaa
ljmp
sub
or
mov
ljmp
mov
mov
mov
fcmovne
mov
push
cmpl
jo
inc
stc
push
mov
xchg
outsl
inc
inc
rcr
rol
test
and
into
cmp
pop
scas
push
inc
inc
pop
dec
adc
add
push
addr16
jne
repz
xchg
push
xlat
cmpsl
roll
xchg
mov
pop
jno
aaa
scas
sub
in
scas
sub
inc
gs
aad
sub
movl
out
or
or
jge
mov
lahf
sbb
daa
sub
pop
mov
sahf
cmp
je
repz
imul
pop
mov
ljmp
pusha
pop
sub
daa
cmpsl
pusha
or
adc
ret
add
in
es
jne
jb
jo
das
or
adc
or
xchg
aas
jmp
dec
and
or
xor
inc
adc
or
sbb
dec
fdivl
pop
xchg
pop
xchg
add
out
pop
ret
and
es
xor
push
and
filds
aas
adc
imul
mov
or
mov
pop
rorl
jge
push
push
aaa
fistps
fdivrs
add
mov
lret
inc
sbb
ja
mov
sub
jne
lods
jne
push
sbb
add
add
mov
sbb
jle
push
ds
sbb
mov
inc
inc
cmpsl
mov
lahf
ja
das
mov
adc
loope
iret
repz
or
addl
inc
sub
bound
dec
inc
dec
lcall
cmp
sahf
dec
add
push
dec
pushf
xor
inc
dec
or
dec
xor
sbb
cld
inc
push
sbb
jl
push
pop
in
in
dec
cwtl
or
pop
adc
dec
jnp
cmp
xor
push
sub
sub
mov
icebp
dec
mov
add
cli
xor
and
std
ss
pop
dec
movsl
sbb
cld
loope
push
inc
pop
dec
or
outsl
jb
dec
mov
xor
xchg
test
cmovl
stos
cmpsl
mov
jge
push
add
and
and
psadbw
sub
add
push
sub
add
adc
mov
inc
mov
dec
xchg
or
xor
clc
enter
cmp
push
inc
dec
lahf
xor
sbb
adc
sub
dec
out
pusha
and
insl
xor
shrb
pusha
mov
dec
sub
in
inc
inc
leave
test
repnz
insl
cs
lret
xlat
cmp
and
mov
mov
inc
sub
or
push
dec
inc
push
and
movsl
iret
andb
push
push
pop
sbb
push
cmc
je
into
data16
test
cli
or
aas
pushf
dec
push
inc
jbe
push
sub
sbb
addl
jge
ret
adc
inc
stc
ss
lock
das
dec
daa
pop
and
dec
rcr
data16
shll
and
cmp
les
xor
lock
in
or
add
sub
dec
cmp
mov
jo
sbb
pop
xchg
add
add
fs
ret
cmp
add
adc
add
add
dec
sub
adc
pop
cmp
and
or
hlt
movsl
add
mov
jne
jno
sahf
ljmp
or
movl
fldl
popa
mov
push
dec
hlt
xchg
push
push
add
cwtl
inc
cmpsl
cmp
inc
data16
pop
pop
jp
cmp
sarb
je
push
mov
punpckhwd
dec
push
js
fsubl
inc
jp
jbe
jne
xchg
scas
inc
push
and
add
fwait
cli
ss
pop
clc
nop
pop
cmp
movsb
cmp
jo
roll
pop
dec
mov
jecxz
mov
adc
inc
ret
lock
inc
and
mov
lods
test
sarb
jnp
pop
sbb
testl
sub
or
or
adc
mov
adc
adc
out
rcl
mov
mov
stos
mov
addb
or
xchg
dec
mov
mov
lea
push
mov
pushf
movsb
sub
daa
in
and
enter
jo
and
inc
jb
mov
pop
les
lcall
adc
push
cs
xlat
fs
pusha
in
mov
add
push
add
sub
int
xchg
push
adc
je
xor
add
outsb
push
xchg
sbb
dec
pop
xchg
clc
mov
push
xchg
subb
xor
jbe
loope
cld
cmp
hlt
pop
lcall
adc
or
mov
push
cmp
dec
or
push
and
mov
cmp
out
jb
dec
insb
aaa
xchg
mov
sub
movb
mov
daa
jmp
mov
xlat
dec
adc
jmp
orl
imul
adc
add
movq
xor
jl
mov
inc
call
push
sub
pop
fs
sahf
or
stc
or
sbb
sbb
das
imul
hlt
add
sub
sub
jne
push
fs
xor
jo
push
mov
je
inc
popa
xchg
push
push
outsl
push
nop
inc
xor
jl
pop
xor
adc
dec
xor
fdivrl
pop
dec
mov
and
testl
icebp
out
jmp
imul
sub
add
pop
fmuls
shll
push
dec
add
insl
jns
out
mov
dec
arpl
push
test
mov
aam
int3
or
call
scas
inc
jns
xor
jle
inc
gs
or
mov
fwait
mov
sbb
repnz
sbb
stos
fs
mov
rcr
outsb
mov
dec
jno
outsb
add
inc
iret
and
ja
clc
xchg
mov
adc
clc
xor
sbb
ss
sbb
inc
mov
jno
mov
movsb
or
sub
ficompl
and
insl
leave
or
insb
cmp
mov
ja
pop
push
pop
loopne
jmp
loop
loopne
out
add
outsl
or
sbb
mov
dec
mov
shr
in
xor
das
test
cmpsl
sbb
sub
and
dec
mov
mov
and
jae
pop
mov
and
jne
in
mov
ret
or
cwtl
aaa
hlt
sub
out
xchg
ret
lcall
fldt
fdivs
addb
pop
arpl
and
xor
js
add
xchg
scas
add
jg
iret
imul
cwtl
adc
js
ud0
add
xor
jne
xchg
jo
or
jg
or
push
lock
ja
nop
mulb
jb
mov
lret
addb
mov
xchg
orb
js
call
jno
push
xor
pushf
jbe
dec
push
sub
std
clc
dec
push
inc
sbbb
or
push
enter
addl
xchg
push
mov
pushl
xchg
mov
dec
jmp
add
dec
and
add
nop
je
lahf
or
loope
imul
mov
and
loopne
daa
cmp
gs
loop
in
test
sahf
pop
fisubrs
dec
mov
movsb
lock
jno
movl
call
loop
pop
dec
nop
mov
pop
inc
insb
popa
mov
and
inc
movb
cmp
cwtl
pop
mov
subl
cmp
pusha
sbb
fs
stos
sarb
xchg
in
scas
mov
outsl
mov
je
ja
add
push
cmp
inc
aaa
add
xchg
hlt
mov
mov
inc
jb
nop
ror
sub
movsl
and
int3
adc
enter
leave
sub
pusha
outsl
fiaddl
inc
sbb
mov
xor
test
sbb
push
data16
fimull
mov
sahf
xchg
dec
nop
aas
mov
and
lret
add
add
loop
adc
pusha
aas
push
ja
or
mov
push
scas
test
inc
sbb
mov
xor
daa
cmp
jbe
addl
jle
pop
popl
daa
movsl
les
div
mov
mov
pop
out
daa
in
push
mov
add
mov
inc
ds
jecxz
mov
fs
fs
jb
scas
loopne
rcr
pop
push
and
loopne
mov
ljmp
aam
adc
mov
lock
ja
decl
sub
mov
jae
ret
adc
fsts
xorb
mov
pop
push
ja
daa
push
inc
dec
pop
pusha
and
aaa
ss
cmpsb
in
and
adc
add
fsubs
das
dec
xchg
mov
xchg
mov
mov
int3
push
mov
and
push
mov
or
pusha
dec
dec
push
dec
sbb
or
cmp
daa
nop
xor
cmp
test
sbb
call
add
enter
lret
or
inc
es
add
mov
add
pop
sub
fmuls
pop
add
pop
shll
loopne
and
and
push
add
fmull
sbb
push
push
fimuls
adc
push
notl
add
fs
jno
fsubs
mov
add
movsb
and
roll
sbbb
ret
adc
or
jg
jb
jb
xchg
lods
push
mov
inc
or
scas
test
gs
mov
fmul
out
pop
add
mov
xor
test
or
push
test
or
and
xor
aam
mov
sbb
add
shlb
push
shrl
adc
adc
push
fsubrl
push
js
or
or
mov
daa
pop
aaa
clc
gs
mov
sbb
rol
or
mov
cwtl
cmp
or
cltd
sbb
bound
and
or
xchg
sub
mov
adc
mov
or
and
and
dec
inc
adc
inc
add
imul
daa
pop
add
mov
fnstenv
in
test
pop
ret
sub
cmpb
ljmp
lcall
cmp
aad
jbe
sbb
fisubrl
das
fistpl
push
outsl
xor
notb
or
sub
rcrl
xor
andb
das
adc
sbb
ret
pop
in
dec
orb
pop
in
sub
push
and
jbe
sub
cmovnp
movsl
and
sub
and
adc
cli
mov
sbb
or
mov
mov
push
arpl
mov
push
mov
arpl
in
cmpsb
dec
fidivs
lods
add
mov
adc
inc
shlb
inc
test
cwtl
mov
dec
fimull
pop
sbb
sbb
ret
push
clc
push
sbb
or
or
and
repz
push
mov
sbb
rcll
or
or
rolb
adc
jae
shll
lods
roll
and
dec
push
push
rorb
jns
popf
and
and
sub
mov
insl
sarl
test
push
jnp
sub
testb
push
lea
sub
mov
adc
lods
insl
rclb
and
mov
insl
sbb
cmp
push
cmp
pop
or
ss
and
or
insl
sbb
jo
pop
sbb
sbb
jo
mov
orb
inc
outsb
or
sbb
push
pop
sbb
fiaddl
and
cmp
add
imul
sbb
add
xor
mov
cmp
outsb
or
test
movsl
adc
xlat
or
xchg
sbb
stos
cmp
sbb
xlat
mov
popa
sbb
xlat
sbb
push
xor
and
dec
pop
and
daa
rclb
inc
cmp
sub
fdivs
or
out
das
nop
fldt
jbe
mov
negl
adc
jbe
ja
sbb
pusha
aaa
cs
jo
xor
testl
mov
cmp
inc
insb
das
mul
cmp
sbb
xchg
mov
stos
dec
and
fimull
int
xor
stc
or
inc
fdivl
fdivs
imul
daa
imul
lret
sub
fstpl
or
cwtl
insl
daa
das
rcrl
addr16
ss
adc
insb
xlat
cmpsb
and
lahf
xchg
lea
in
or
sbb
mov
dec
jbe
outsb
or
add
push
sub
inc
jo
ja
adc
lret
repz
in
daa
ja
sbb
frstor
dec
and
jno
mov
jno
pop
xlat
adc
gs
sbb
adc
sbb
push
test
sbb
outsb
movhps
pop
insl
dec
jnp
call
and
adc
mov
pop
shrl
xchg
mov
andb
popa
das
xchg
pop
add
loope
stos
push
or
sub
outsb
daa
out
xchg
mov
jl
mov
sub
pop
fiaddl
aad
jb
imul
loop
jmp
or
and
inc
or
sbb
or
insb
pusha
sbb
or
stos
ffree
or
inc
adc
mov
or
xchg
inc
push
jnp
int
adc
mov
dec
adc
sub
xchg
les
dec
push
jle
jne
out
cmp
xor
jae
pop
or
add
inc
aas
mov
pop
mov
daa
dec
imul
sub
adc
out
and
in
inc
and
jecxz
dec
adc
cmpsl
popa
cs
and
add
jno
sub
and
mov
push
sbb
insl
bound
push
jne
xor
push
xor
and
les
adc
mov
mov
cmpsl
and
mov
out
test
add
sub
cli
daa
shrl
imul
lods
jbe
es
push
add
das
outsl
sbb
or
sub
mov
test
outsl
shrb
mov
and
daa
mov
add
sub
dec
sub
shll
add
push
pushf
ds
mov
test
idivl
cmpsl
push
mov
cmp
push
je
repnz
cmpsl
sbb
mov
jae
orb
jae
jae
sbbl
and
xor
jae
xor
pop
jae
jae
push
pop
and
inc
adc
sti
xor
push
adc
pop
insb
sbb
cs
xor
aam
sbb
and
pop
movhps
andl
orl
xor
xor
or
stos
imul
adc
adc
xchg
mov
sub
jae
push
sbb
jmp
add
dec
jo
push
adc
cmpsb
xchg
and
sub
adc
daa
leave
ds
inc
cmp
or
add
sub
cmovo
je
sahf
push
mov
int3
mov
inc
and
push
rorb
aas
sbb
pusha
repnz
sbb
cmp
jge
adc
sub
xor
je
jmp
mov
or
mov
mov
pop
mov
push
xor
data16
and
xor
outsl
pop
and
adc
fimull
insl
das
ret
rcl
xchg
xor
mov
pop
cmc
adc
xor
xor
stos
test
xor
mov
icebp
inc
mov
adc
adc
xor
adc
imul
int
sbbl
aad
out
leave
insl
insl
sub
sbb
pop
xor
stos
das
icebp
cmp
mov
stos
dec
sbb
shll
adc
mov
sbb
adc
sbb
mov
sub
jmp
bound
push
ret
sub
rorb
xor
inc
xchg
or
mov
das
sti
dec
cmp
rolb
mov
xor
mov
jne
push
adc
xchg
rcrb
dec
outsl
dec
mov
dec
dec
sbb
adc
rolb
push
xlat
imul
fisubrs
pusha
cmpsl
and
mov
sbb
dec
lret
and
jecxz
jbe
das
xor
add
cmp
mov
mov
test
orl
movsl
inc
sub
and
pop
adcl
pop
sbb
mov
xor
sbb
pop
add
and
dec
adc
jnp
adc
mov
bound
sbb
add
adc
mov
outsl
shlb
cmp
mov
dec
push
cmp
push
sub
inc
jns
add
cmp
mov
xchg
shll
sub
daa
daa
mov
push
lds
daa
fstpl
in
push
cmpsb
sub
insb
sub
mov
add
outsb
mov
movb
pop
mov
pop
push
test
je
pop
test
adc
js
adc
pop
xorb
mov
ja
outsl
dec
aaa
ss
movsl
or
mov
insl
adc
mov
jbe
add
jo
adc
or
sub
xchg
or
insb
pop
add
dec
pop
add
into
sti
jno
cmp
mov
sbb
jne
pop
rorb
and
insb
add
mov
mov
mov
and
or
leave
mov
addr16
imul
sub
bound
push
sub
ret
shrl
imul
fcmovnu
sub
and
imul
ss
insl
gs
inc
or
ss
jbe
cmp
mov
daa
mov
sub
fiaddl
mov
fcmovnb
sub
adc
imul
dec
xchg
aas
mov
mov
add
ds
outsb
xor
fsubrs
mov
fiaddl
fmull
push
ficoml
sbb
adc
mov
fldenv
push
xchg
jecxz
ret
mov
movsl
mov
das
sbb
adc
inc
insb
jns
push
sbb
pop
fnstcw
dec
xchg
stos
sbb
loopne
scas
jnp
ss
cmp
and
lock
push
mov
pop
dec
outsb
adc
jnp
mov
pop
dec
pop
jno
sub
mov
mov
jbe
push
push
dec
adcl
push
fcmovbe
sbbl
mov
ss
inc
rcll
js
lea
adc
sbb
adc
int3
mov
mov
push
inc
mov
and
loopne
sbb
daa
pop
and
dec
ja
push
sub
or
adc
popa
mov
out
add
and
test
insb
push
test
dec
mov
add
mov
pusha
in
sub
pushf
and
inc
dec
xchg
sub
sub
fwait
lahf
push
sub
mov
sub
inc
movsl
adcb
rclb
xor
xorb
adc
mov
xorb
cltd
inc
jp
mov
xor
lea
jnp
add
cmc
xchg
adc
xchg
dec
movsb
lods
int
cltd
adc
mov
sti
cmpsl
adc
fidivl
in
push
adc
mov
sub
aad
dec
mov
mov
sub
inc
scas
pop
sub
fbstp
inc
push
push
sub
loop
add
mov
fsubrs
lods
inc
test
and
fcmove
fwait
adc
mov
or
sub
add
and
adc
and
pop
or
cmc
sub
push
and
add
and
fisubl
sbb
and
nop
inc
and
and
and
mov
mov
nop
inc
and
add
or
lock
lea
sbb
mov
or
rolb
pusha
push
rcrb
cmp
jne
jae
aas
bound
ja
mov
and
push
rolb
mov
mov
inc
pusha
push
dec
xchg
add
add
testl
xchg
scas
mov
movsl
scas
jae
xor
and
cmp
push
adc
add
pop
rorl
arpl
imul
push
mov
add
mov
or
das
xchg
mov
mov
data16
push
enter
mov
push
das
sbb
xor
inc
cmpsb
sbb
popa
insl
mov
daa
ret
adc
fstps
aaa
aaa
push
xor
or
sbb
mov
mull
sub
cmc
push
pop
xor
dec
jge
shlb
int3
sbb
push
xor
sahf
pushf
shrb
and
mov
enter
std
lea
in
lods
stc
inc
mov
jb
sub
jne
pushf
pushf
mov
dec
dec
inc
sahf
cmp
ret
xchg
daa
daa
and
add
xchg
push
popf
jmp
leave
leave
or
add
add
daa
stos
jae
in
or
push
or
inc
lods
orl
cli
adc
jo
jns
aam
xor
sahf
inc
loopne
aas
lea
inc
rorl
popf
dec
loopne
mov
add
sub
sub
mov
adc
outsb
aad
inc
pop
pop
and
add
out
mov
inc
inc
sub
shrl
xor
mov
dec
adc
lret
cmp
rol
adc
push
sti
xchg
loopne
xchg
sbb
or
dec
add
sbb
lret
mov
int3
fmuls
and
bound
or
adc
pop
mov
pop
movsl
or
cmp
inc
sbb
mov
and
sbb
cmpsb
xor
dec
xchg
add
insl
insb
mov
pop
jp
into
add
inc
insb
flds
inc
add
bound
adc
cmp
adc
push
adc
sub
js
dec
add
shr
andb
stos
addb
xchg
adc
rol
push
xor
nop
cmp
das
fdiv
jl
pop
into
das
nop
add
arpl
sbbb
push
inc
adc
jge
fwait
pop
mov
xchg
inc
mov
stos
dec
xchg
inc
addb
mov
pop
rolb
pop
in
aas
sete
js
cmp
pop
inc
cmpsl
sbb
iret
add
dec
jo
push
lock
cmp
push
hlt
mov
iret
dec
lea
adc
push
hlt
and
mov
rolb
and
inc
xchg
add
adcl
xchg
adcl
xchg
and
cmp
inc
jl
cmp
loopne
cmp
inc
aad
nop
sbb
pop
popf
push
xor
mov
xor
mov
adc
or
enter
int3
xor
movsb
enter
subl
leave
and
add
sbbl
add
inc
mov
and
rcll
push
mov
arpl
xabort
pop
inc
loope
or
jb
js
xchg
stc
ja
add
inc
popf
pop
shld
or
sub
in
dec
push
inc
js
cli
sbbl
loopne
in
cmp
movsl
adc
add
sahf
ja
xchg
in
jnp
add
push
bound
xchg
mov
or
mov
inc
pop
pop
cmpsb
out
xchg
push
mov
push
or
shld
adc
add
pop
es
add
xchg
add
call
add
int
jb
test
aas
cmp
add
cmpl
or
arpl
jne
ficomps
insb
push
arpl
push
sbb
mov
outsl
pop
js
gs
push
dec
pop
es
jb
dec
jecxz
cmpsl
inc
popa
jnp
dec
sbb
insb
jmp
xchg
movsl
pop
jbe
es
fisubrs
addr16
pop
jb
addr16
and
mov
lea
jae
fildll
imul
adc
imull
imulb
bound
lds
dec
fidivrl
mov
loop
jne
ss
pop
jb
sbb
jns
ret
or
add
les
ja
lret
cwtl
add
push
inc
cmp
loopne
test
cmpl
cmpb
and
xchg
stos
dec
cmp
or
mov
insb
dec
loop
xchg
mov
cmp
arpl
bound
cmp
inc
inc
test
mov
mov
push
fmuls
push
push
in
mov
fisubl
setae
dec
movsl
nop
pop
jl
rcl
add
cwtl
scas
scas
jle
mov
faddl
ret
inc
and
ja
lock
es
xchg
frstor
mov
out
mov
mov
nop
jne
inc
mov
fisubrl
cmovl
push
inc
nop
xchg
mov
add
shl
adc
push
xor
pop
lods
inc
addr16
mov
out
pop
inc
push
les
outsb
mov
jne
jmp
test
pop
and
in
aas
add
adc
jns
sbb
je
push
lock
jecxz
push
inc
pop
inc
cs
out
mov
les
pop
in
adc
adc
out
shrl
xor
aam
ja
pop
xchg
mov
dec
push
lahf
mov
and
sub
nop
add
rcll
mov
mov
das
orl
push
insb
xchg
lahf
mov
roll
mov
fcmovne
pop
enter
cmp
xchg
xor
inc
sub
aam
fcom
mov
and
jg
mov
mov
mov
add
shlb
enter
cs
mul
adc
imul
xor
lock
jbe
icebp
xor
add
call
xorb
aas
push
inc
mov
fwait
shrb
sbb
pop
pop
shlb
paddusw
sub
jb
or
jb
jmp
sbb
or
and
xchg
cs
add
sbb
inc
add
push
test
sbb
pop
xor
mov
sbb
add
fidivs
push
or
cli
rolb
push
or
xchg
popa
sbb
sbb
add
jne
mov
add
push
cmpsl
add
cmp
outsb
cmpb
jmp
ja
pushl
les
or
add
and
xchg
mov
subb
outsb
lret
add
xor
dec
add
or
movsl
or
mov
cmp
push
femms
and
xor
dec
cmp
repz
imul
repz
xchg
shlb
and
ja
test
imul
xchg
lret
dec
mov
sbb
and
int3
mov
nop
sbb
outsl
addr16
popa
or
jb
and
sbb
push
rol
movsb
or
xor
dec
add
add
cwtl
inc
sub
push
das
or
leave
lods
dec
pop
sbb
fsubrl
repz
jo
mov
jge
or
mov
mov
or
lahf
xorl
dec
rolb
cli
sarl
iret
repz
push
push
push
and
inc
inc
push
in
inc
dec
aas
xor
push
jns
in
add
push
movsl
nop
jns
out
or
add
inc
push
or
or
gs
push
xor
and
cmp
add
or
adc
es
rorl
pop
add
lods
sub
jne
xchg
sbb
adc
lahf
rorl
add
in
xchg
testl
fnsave
mov
adc
add
out
fiadds
push
add
or
cmp
jnp
xchg
int3
outsb
cmp
repz
repz
xchg
mov
jmp
aam
iret
adc
add
add
sbb
push
sti
push
inc
sub
es
lret
or
or
sbb
dec
or
or
movsb
jns
push
or
int
imul
pop
sahf
push
scas
push
shl
iret
and
sbb
xlat
fiadds
dec
adc
and
rorl
jae
jns
in
mov
test
loope
dec
or
movsb
xor
or
or
or
sbb
ud2
adc
pop
cmp
push
jmp
mull
adc
xchg
add
lret
cmc
mov
adc
in
nop
add
mov
scas
pop
dec
dec
mov
movsb
repnz
repz
inc
push
pop
insb
popl
xchg
xlat
in
cmpsl
enter
jmp
sbbl
enter
jo
sbb
sub
adc
adc
ja
xchg
cwtl
adc
jge
push
jb
or
sub
dec
sub
jmp
es
or
nop
add
pop
dec
jmp
rorl
sbb
sbb
jns
push
push
adc
push
movsl
fimuls
daa
daa
daa
mov
pop
sbb
ss
pop
repnz
push
pusha
outsb
repnz
or
aas
pop
add
shll
add
movsb
add
push
pop
outsl
rorb
scas
push
pop
and
and
lret
in
lahf
lods
fsts
mov
std
sahf
out
out
push
push
push
sbb
sub
inc
push
inc
shl
jns
jo
fcmove
lret
mov
cmp
add
and
jb
push
adc
jb
pop
sbb
and
adc
jl
outsb
orl
add
inc
daa
adc
pop
das
cmpsb
nop
add
pop
aaa
push
imul
fndisi(8087
sub
add
jns
xlat
cmp
add
movntq
out
adc
adc
out
sahf
adc
sbb
jmp
jns
sbb
push
pop
and
and
and
movsb
iret
repz
cmp
faddl
pop
insb
jge
cmp
repz
mov
shl
jns
out
hlt
add
out
sahf
out
pop
imul
jns
sahf
scas
rcl
repz
cmpsb
imul
dec
lcall
mov
in
and
jbe
imul
stos
and
and
pop
adc
in
lret
or
push
scas
jge
mov
dec
sub
in
lret
and
mov
adc
cs
xor
dec
sub
xchg
lret
adc
jb
in
dec
sbb
push
mov
sub
sbb
xor
dec
sbb
push
sbb
push
push
test
and
dec
gs
lret
and
inc
mov
push
sbbb
ret
mov
and
jmp
je
and
sahf
sbb
in
mov
fsubs
push
fwait
pop
pop
mov
fldenv
adc
sub
mov
test
or
cmp
xchg
rcrb
xor
data16
cmp
push
adc
sub
call
aaa
movsb
dec
push
imul
hlt
sub
sub
lods
jo
cld
mov
jmp
dec
inc
lock
lock
sarl
inc
push
mov
aad
or
in
in
psllw
or
dec
pushf
add
inc
dec
int3
or
ja
xlat
and
and
adc
gs
push
loopne
add
mov
inc
lahf
orb
testl
push
adc
sbb
mov
sbb
divb
dec
ret
cmp
xchg
and
add
fisttps
test
dec
ljmp
in
jl
and
int
rcrb
mov
call
jo
shr
lods
push
add
push
add
iret
jmp
faddl
lock
insb
cmovne
xchg
sbb
or
mov
adc
pop
and
cmp
push
push
add
enter
mov
daa
add
jns
xchg
call
push
mov
inc
in
gs
filds
shll
and
xchg
dec
cmp
movsl
insl
xchg
xor
fimuls
scas
add
inc
stos
fcomi
mov
push
adc
aam
lods
addb
negl
push
ret
add
shrb
fs
or
int
dec
or
or
outsl
push
jecxz
or
xor
shll
imul
push
imul
inc
outsl
les
data16
sub
cltd
sarb
ret
push
adc
jg
adc
addr16
push
xchg
rcrb
ss
into
mov
mov
fnstcw
add
pushf
lock
jge
push
insb
jb
pop
adc
push
lret
or
mov
ja
in
mov
inc
dec
jae
push
adc
xor
outsl
mov
fstps
xor
in
push
push
add
repz
jmp
insb
or
test
sub
sub
loopne
clc
or
fs
adc
inc
sarb
fwait
out
fiaddl
and
or
pop
xor
sbb
xor
ja
movl
js
out
cwtl
rcl
push
xor
cmp
adc
stos
xchg
seta
add
adc
xor
pop
sub
sub
sub
push
cltd
or
mov
std
inc
mov
or
adc
push
add
outsb
dec
xor
and
jo
push
add
jb
cmpsl
inc
adc
adc
jae
arpl
jle
pop
push
inc
lods
mov
push
push
sub
mov
enter
jnp
insb
or
sub
and
imul
push
scas
jo
iret
scas
sub
ret
add
in
orb
fiadds
sbb
add
xor
push
sbb
push
mov
out
ljmp
mov
leave
enter
in
es
dec
mov
iret
leave
test
out
decl
sahf
fmull
fimull
out
xor
dec
inc
lock
icebp
enter
push
sahf
sti
inc
repnz
leave
int
repz
hlt
xchg
filds
sub
pop
adc
insb
xor
testl
cmpsl
cwtl
and
cld
push
movsl
fadds
cmp
jae
add
ret
daa
add
add
pop
dec
ss
or
and
insl
inc
or
fcomps
adc
std
dec
lsl
rcrl
movsb
lods
pop
cltd
xchg
or
sbb
sub
jle
into
xchg
rcl
pop
push
adc
loopne
in
fisttpll
push
cmc
sbb
inc
add
xor
pop
and
lcall
adcb
aaa
call
lock
inc
repz
or
sub
push
add
lds
out
push
mov
dec
xor
or
out
add
add
push
mov
rolb
dec
cmpsl
sub
subl
shll
pop
mov
or
mov
mov
rcl
add
adc
adc
addb
lock
stos
shrl
inc
into
push
shrl
sub
jo
fldcw
mov
adc
mov
fldenv
jl
mov
adc
mov
mov
jno
and
dec
es
sbb
adc
or
xor
nop
inc
iret
adc
push
dec
adc
adc
insl
loopne
cmp
inc
cmp
fmuls
sbb
or
xor
arpl
jg
fistl
mov
call
mov
add
mov
orl
xor
sti
mov
mov
test
testb
mov
push
sub
sbb
jo
mov
mov
and
adc
or
fisubrs
add
mov
fimuls
sub
imul
sub
loop
cmp
pop
jg
adc
lds
sbbb
cwtl
sub
lds
shl
inc
mov
jae
add
mov
adc
ret
or
sub
mov
and
pop
add
repnz
xchg
add
mov
cmp
or
mov
js
mov
inc
pop
popf
inc
imul
or
test
stos
fs
jns
or
xlat
or
mov
imul
push
adc
and
cmp
inc
add
xor
push
addl
dec
add
add
add
aad
enter
dec
add
cltd
or
outsl
sbb
pop
xchg
jle
cmpsl
sub
mov
ljmp
add
add
jmp
mov
mov
add
inc
inc
sbb
pop
dec
cltd
imul
xchg
add
xchg
inc
xchg
add
add
adcl
aaa
and
cs
incb
and
cmp
cli
mov
outsl
pop
shll
call
mov
or
movsb
mov
into
mov
fs
psadbw
push
js
fs
shl
notl
out
gs
dec
add
mov
fsubrl
cmp
pop
adc
adc
pop
fsubr
add
and
pop
add
movsl
dec
adc
or
inc
roll
add
dec
pusha
mov
inc
roll
inc
pop
adc
push
pop
adcb
roll
arpl
pop
test
or
mov
cmpl
ljmp
call
in
out
dec
mov
adc
sub
push
aas
and
mov
into
fists
or
test
xor
adcl
xor
mov
adc
push
popf
outsb
orl
decl
mov
imul
xchg
jmp
lcall
adc
pop
add
xchg
fsubl
adc
dec
test
cmc
add
rolb
insl
test
cmp
dec
fsubl
fs
gs
cld
mov
lods
movl
add
sti
addl
hlt
sbb
cmp
dec
pop
adc
and
dec
push
loopne
popa
jl
jmp
cwtl
shrb
cmc
jo
or
ss
dec
cmp
or
adc
in
mov
and
inc
push
push
mov
dec
mov
fmull
sub
repz
or
sub
sbb
popa
call
add
hlt
sub
aaa
and
lock
mov
inc
or
or
xchg
mov
adc
xchg
dec
jecxz
stos
daa
push
shlb
insb
loope
fs
push
ss
xor
sahf
xchg
cmp
push
inc
je
mov
cmp
jno
int
ror
mov
inc
inc
rorb
je
push
sub
push
push
push
xchg
in
in
xchg
hlt
rorb
sub
cmpsb
ja
xor
push
fisttpl
js
push
ja
jecxz
mov
and
lret
dec
adc
addb
or
push
push
xchg
ret
ja
or
lahf
call
push
jg
sar
sbb
iret
adc
jo
adc
fs
insb
push
sub
and
cmp
pop
dec
cwtl
imul
pop
inc
jo
nop
pop
and
push
xchg
pop
int
int3
mov
push
mov
mov
and
dec
psubusb
aas
or
cmpb
or
imul
pop
xchg
movsl
inc
mov
movsb
and
ds
repz
push
fneni(8087
add
xchg
adc
inc
jae
es
push
sub
fidivrs
cmpsl
out
inc
insb
sub
daa
lods
xchg
fs
cmp
or
hlt
pop
mov
lock
clc
or
xchg
loopne
lock
rorl
sbb
js
xor
je
les
and
mov
imul
cmc
mov
hlt
jmp
std
leave
push
xlat
xchg
cmp
insl
scas
std
sub
arpl
jne
push
mov
sbb
loopne
and
xchg
mov
test
dec
cmpsl
push
lock
xor
mov
js
xchg
test
adc
cmpb
push
incl
mov
adc
adc
xchg
rcl
adc
inc
pusha
inc
stc
jmp
enter
mov
cmc
xor
movsb
in
sar
push
ret
inc
push
leave
push
or
jmp
mov
stos
pop
inc
jle
add
lret
mov
dec
shll
imul
jecxz
and
xor
icebp
test
mov
jg
sbb
and
lahf
sbb
pcmpgtd
fsubrs
cmp
xor
jb
fstl
cmp
push
inc
cli
or
rcrb
push
jmp
xor
xchg
mov
cmc
jmp
fs
xor
shlb
or
inc
push
or
dec
or
push
sub
orl
cmc
insl
xchg
jge
xchg
lods
sahf
insl
lods
fimull
mov
push
roll
adc
aaa
shl
dec
clc
cmp
hlt
sbb
pop
cmp
dec
out
push
std
pop
loopne
cmpsb
imul
loop
jmp
add
test
xchg
or
cmp
fsubs
cmpsb
outsl
mov
cmp
sarl
dec
pushf
arpl
insl
add
mov
shrl
inc
dec
test
flds
ss
sahf
pop
jge
or
in
pop
add
addl
in
or
xchg
add
or
hlt
mov
push
popf
inc
stos
cmp
sub
dec
sub
lahf
cltd
cmp
in
adc
shlb
and
int
mov
sbb
call
sbb
stc
pop
ss
cmp
clc
hlt
cmp
arpl
shl
call
addb
fcmovbe
or
outsb
or
xor
cmp
iret
sub
xchg
push
push
jne
inc
or
and
jo
push
sub
mov
cld
and
fadds
insb
sub
repnz
jbe
mov
iret
test
int
lock
adcl
push
xchg
add
mov
and
call
into
fsub
and
je
pop
or
insb
lods
imul
movb
cmp
lea
mov
adc
into
or
xlat
cmp
cmp
movsb
aaa
pusha
adc
and
ret
sbb
add
sub
fldenv
es
push
push
inc
xchg
std
adc
pusha
sbb
hlt
xchg
pop
cltd
pusha
sbb
jmp
push
inc
and
lds
xchg
push
pop
add
push
mov
cmc
aad
mov
pop
inc
dec
sub
cmp
fcompl
mov
cmpsl
dec
cmp
mov
mov
decl
add
add
add
or
lcall
sbb
xor
xor
test
cwtl
push
add
icebp
popf
imul
jne
mov
inc
dec
inc
movsl
dec
outsb
or
popf
adc
or
test
dec
lret
nopl
std
or
or
idivl
rorb
das
or
cmp
push
or
push
sub
or
inc
mov
iret
xor
push
inc
mov
adc
xor
ss
rolb
call
inc
mov
jge
inc
shl
xor
jmp
sbb
mov
stc
lret
sbb
pop
xor
sub
adc
xchg
lea
jle
ret
inc
mov
sbb
outsl
mov
adc
addr16
and
insb
rclb
in
or
or
mov
call
xor
jl
pop
scas
xor
cmp
in
leave
sbbb
in
in
xor
lahf
xchg
std
jnp
inc
inc
jb
inc
aaa
in
mov
or
hlt
jne
mov
push
fcompl
mov
or
push
push
mov
nop
adc
call
sbb
or
loope
mov
xchg
xchg
popa
sbb
sub
movsb
stos
dec
push
lds
pop
stc
or
pop
sub
fdivrs
sbbb
clc
out
sbb
fcmovne
leave
jmp
inc
fadds
addl
cld
mov
sub
jg
dec
dec
mov
das
adc
orl
dec
adc
inc
jne
leave
sbb
add
sbb
jg
rcr
and
punpckldq
adc
inc
dec
sbb
sub
xchg
dec
add
fs
or
cli
mov
sub
jle
push
mov
psraw
subl
pop
pop
dec
insl
add
mov
psllw
mov
adc
mov
mov
sub
js
mov
add
sbb
push
cmp
mov
fisttpll
pop
stos
sbb
and
leave
test
ret
cmp
es
mov
pop
inc
sbb
cmp
cmp
jge
or
or
jl
inc
add
dec
shrl
in
adc
mov
jmp
pop
jle
lea
and
push
dec
dec
inc
clc
inc
add
addr16
insl
stos
test
gs
mov
jne
outsl
and
jbe
adc
or
data16
inc
add
sub
jae
shll
pop
test
xchg
out
dec
dec
inc
lret
pop
call
inc
cmp
stc
xchg
mov
cs
fdivs
push
lea
pop
add
push
ret
cmc
or
and
add
arpl
les
pop
in
leave
sub
add
mov
jl
pop
xor
loope
stos
add
jne
adc
repz
scas
cmp
add
or
rcr
add
cmp
movsb
add
fbld
or
incl
ja
mov
sbb
or
outsb
add
or
imul
push
out
fisubs
mov
or
test
imul
adc
test
add
mov
push
xor
lods
test
or
nop
shr
pop
es
ds
jns
sub
xchg
sub
pusha
add
pop
rcrl
lea
xchg
mov
dec
jl
sbb
sbb
shlb
adc
inc
imul
das
adc
jmp
sub
add
and
sbb
js,pn
xchg
xchg
add
adc
mov
mov
pop
xor
sub
jns
mov
xchg
movsl
and
sbbl
test
jne
add
push
pop
adc
jb
lds
xor
pop
fsubs
xor
add
lcall
and
inc
mov
adc
jge
dec
jne
inc
push
movaps
or
xchg
sub
cmp
outsb
mov
xlat
es
sub
jnp
shl
inc
dec
fnstenv
dec
jl
test
pushf
jecxz
xor
enter
mov
mov
pop
sti
adc
and
add
lods
xchg
adc
and
pushf
hlt
push
mov
rcr
sbb
or
pusha
jmp
adc
add
clc
and
clc
push
cmp
and
pop
or
sahf
pop
hlt
mov
nop
pushf
cmpsb
mov
adc
push
adc
mov
mov
sub
adc
fiadds
insb
sub
lcall
inc
pop
sbb
scas
inc
pop
scas
add
inc
add
pop
sub
mov
cmp
push
push
cmpsb
add
pop
sbb
sbb
out
sbb
jo
jne
inc
sarb
lea
sarl
pop
sub
aad
and
rol
sbb
insl
jmp
rcrl
pop
or
ljmp
clc
xor
lods
inc
lods
in
lock
xor
pop
aas
ficomps
aad
ja
inc
or
and
enter
add
lea
or
loopne
pushl
aaa
repz
push
xor
out
sarl
add
or
es
imul
sbb
jge
rclb
inc
scas
adc
fisubrl
mov
outsb
push
lods
sbb
fs
mov
pop
outsb
add
decl
inc
dec
call
je
push
loopne
push
call
push
es
inc
mov
cs
pop
lock
adcl
lods
sub
mov
xor
imul
in
or
push
rorl
movsb
in
leave
repz
cmpl
jb
adc
outsb
pop
and
lds
aam
sar
inc
aam
out
mov
sub
dec
push
xor
lock
dec
jne
faddl
jne
dec
cmp
je
xchg
out
daa
and
les
xchg
adc
jno
dec
aad
or
sbb
add
sub
mov
mov
cmp
addr16
push
mov
xor
cwtl
inc
and
pop
and
push
js
mov
jae,pt
jge
out
add
pop
ss
push
ss
sbb
outsb
jp
mov
or
shlb
xchg
imull
mov
cmp
jne
test
fdivrp
and
or
mov
or
loopne
adc
sub
xor
mov
xor
movsb
and
sbb
dec
pop
shr
ds
mov
jb
dec
adc
and
xor
sti
shrb
push
adc
mov
loop
cmp
cmp
sbb
dec
add
fwait
jne
jns
add
call
lock
into
sub
add
outsl
push
pop
mov
mov
sbb
or
imul
sbb
insl
cs
enter
inc
sub
pop
push
jb
cld
xor
pusha
ret
pusha
orb
xchg
sbb
mov
add
out
cmp
jl
cwtl
loopne
adc
sbb
add
pop
sbb
inc
xorb
out
or
xchg
add
scas
add
jmp
sbb
dec
jo
sarl
enter
daa
add
popa
in
xor
neg
dec
cmp
pop
or
or
popa
jb
sub
dec
mov
pop
mov
lods
and
les
or
or
or
pop
pushf
bound
add
xor
ja
or
mov
xchg
pop
sbb
sub
xor
or
cwtl
imul
imulb
add
push
ja
and
cmp
and
xchg
inc
sahf
fdivl
mov
ja
je
sub
pop
cld
sbb
or
call
ja
daa
add
add
cmpl
in
nop
sbb
xchg
and
and
adcl
inc
stos
movsb
test
fbld
ja
addb
int3
lret
fcoml
add
sbb
call
push
out
mov
and
cmpsb
jecxz
or
pop
mov
sbb
or
mov
insb
test
mov
fwait
sbb
push
xor
xlat
and
ficompl
lret
push
push
push
mov
dec
mov
nop
sub
dec
dec
sub
push
push
jl
mov
cmp
movsb
iret
repz
dec
push
and
dec
push
js
call
or
push
mov
dec
push
jmp
out
jns
mov
test
hlt
out
mov
adc
and
es
das
mov
sbb
pusha
or
xchg
and
cmp
pusha
and
dec
adc
daa
das
stos
push
xchg
or
rcll
or
loope
gs
mov
ds
push
inc
dec
mov
and
adc
push
sbb
pop
mov
dec
dec
in
fs
das
inc
stos
rolb
int3
inc
dec
fdivl
mov
add
loop
or
js
push
sub
lcall
xor
dec
xchg
ja
xor
sbbb
xor
push
add
cld
roll
dec
and
mov
push
sub
decb
jecxz
add
add
sbb
mov
mov
daa
and
addb
and
in
xchg
push
or
data16
clc
jnp
andl
xor
pop
pop
and
cmp
cmp
outsl
stos
movsb
and
daa
rclb
lret
aad
adc
fisubrs
sub
das
cmp
out
push
popa
and
xchg
jecxz
mov
stc
in
dec
dec
enter
mov
sbb
dec
aas
test
scas
inc
mov
push
test
adc
xchg
push
fs
pop
dec
int3
shrb
inc
push
gs
and
mov
or
pop
popa
xchg
cmp
add
push
rorb
dec
or
test
cwtl
cmp
fs
jl
pop
sub
xor
add
push
pop
je
adc
sbb
stc
arpl
outsb
push
or
in
jne
xchg
out
mov
inc
and
cmpl
push
nop
es
sub
pop
test
cmp
adc
pop
mov
push
icebp
cmp
fs
xchg
dec
and
fcmovbe
lods
rorb
and
jl
fldl
push
je
push
in
add
and
inc
add
cmovb
into
leave
aaa
pop
loope
fucomi
sub
adc
dec
outsb
mov
dec
addr16
sub
xchg
mov
push
fdivrp
das
bnd
pop
adc
icebp
cmp
xchg
daa
daa
mov
setno
adc
xchg
xchg
xchg
xchg
inc
dec
xorl
sub
adc
stc
std
jecxz
xchg
add
push
in
mov
loop
pushf
mov
sbb
aam
jmp
pusha
repz
pop
pop
adc
ret
movsb
pop
add
push
sbb
mov
inc
pop
stos
dec
and
pop
sbb
sbb
fists
insb
addb
or
roll
ficomps
dec
xor
fmuls
xchg
dec
stos
frstor
or
stc
push
dec
or
inc
insl
add
loopne
imul
test
in
es
xchg
pop
jae
loopne
pop
es
and
adc
shrl
push
mov
xchg
xor
push
test
mov
sahf
push
inc
pop
or
mov
push
push
xor
push
sub
in
cs
push
push
sub
notl
cwtl
mov
insl
cmc
mov
out
mov
stos
sbb
mov
fs
mov
mov
adc
inc
sbb
inc
sahf
adcb
sbb
repnz
xchg
insb
cmp
sub
fldenv
call
enter
dec
ss
pop
ss
aad
push
xchg
pushw
je
dec
xor
add
dec
fistl
pop
or
push
xchg
test
dec
inc
jno
or
call
xor
jmp
xlat
pop
dec
je
movsb
cmc
adc
sbb
push
ret
or
mov
test
mov
pop
adc
jmp
dec
pop
xchg
shlb
inc
mov
push
xchg
inc
jne
sbb
js
add
test
mov
cmp
xchg
mov
add
ror
nop
xchg
push
and
add
cmp
pop
adc
xor
and
jle
fcomps
pop
mov
xor
repnz
cld
xchg
push
loope
daa
lods
inc
cltd
adc
mov
pop
or
add
push
ret
xchg
fst
cmp
jg
push
or
in
adc
mov
inc
enter
xchg
mov
add
cs
movsl
hlt
lea
dec
loop
lods
mov
adc
mov
aam
cwtl
les
cmc
ltr
add
pop
int
jl
adc
cmp
int3
adc
sbb
rcrl
adc
adc
dec
into
nop
xor
and
or
adc
ds
sbb
inc
insb
push
mov
sbb
inc
sbb
mov
cmp
fwait
adc
or
and
adc
imul
adc
ret
pop
fidivrl
sbb
popa
jne
and
andl
xchg
stc
sbb
pop
xor
xor
test
jb
adc
xor
cmp
xor
lahf
shl
cs
push
jecxz
xor
loop
stos
aaa
push
dec
fs
inc
mov
test
and
lea
mov
cmpsl
mov
movsb
push
aas
or
add
leave
andb
daa
mov
dec
push
mov
cs
or
imul
imul
adc
mov
mov
xlat
test
sub
lock
push
stc
adc
dec
add
push
test
test
dec
pushf
in
xchg
xlat
cld
xchg
gs
filds
or
cmp
or
push
repnz
xor
cmp
cmp
cmp
add
pop
ja
in
push
xor
inc
imul
repnz
mov
mov
sbb
or
rcrl
xor
dec
push
jo
icebp
add
push
fistpll
test
and
test
outsl
mov
push
das
sub
out
decl
xor
pavgw
sarl
xor
mov
cwtl
xchg
push
loopne
inc
adc
fs
pusha
or
adc
in
fwait
mov
imul
fisubrl
jnp
fnstsw
and
dec
sub
or
cwtl
sub
and
lea
sti
and
stos
nop
subb
enter
shrl
jge
sysret
aam
mov
aam
or
jb
dec
mov
add
or
jecxz
js
xchg
sbb
adc
mov
or
xchg
pop
lcall
adc
movsl
or
inc
push
mov
inc
jns
sub
rcll
ja
cmp
push
push
add
in
push
xor
adc
dec
rcr
inc
shrl
and
inc
cwtl
adc
pop
and
mov
mov
imul
in
ja
pop
xchg
cmp
push
pop
sub
add
cmp
jp
test
repz
xor
lds
dec
cmp
xor
test
xor
and
push
cmpsl
rolb
mov
sbb
pusha
cmpsb
push
jo
movsl
adc
sbb
popa
add
or
call
loope
sbb
push
adc
push
and
repz
push
mov
jl
xor
inc
inc
cld
movsl
add
nop
cmp
push
push
jnp
loopne
sbb
dec
or
cmp
aaa
mov
cmpsl
ja
es
das
push
insb
out
adc
mov
cmpsl
jbe
loopne
jbe
daa
mov
xor
pop
xor
ret
pop
cmc
mov
aaa
jb
xor
push
outsb
push
sbb
push
mov
mov
add
stos
out
pop
sbb
stc
cmp
fs
push
outsb
insl
imul
subb
arpl
push
mov
or
and
push
dec
or
push
aam
push
orb
push
test
mov
rorl
pop
fcmovnu
mov
push
mov
or
test
inc
add
pop
les
add
inc
pop
test
cwtl
inc
push
mov
or
and
mov
cmpsb
leave
pop
add
bound
lcall
ret
xlat
and
ror
enter
or
adc
enter
fadd
ret
ret
cmp
roll
or
sbb
popa
lcall
sbb
jno
xlat
addb
rcl
lds
and
or
je
xor
into
sbb
lahf
xchg
loopne
mull
ja
and
rorb
fstps
push
cmpsb
aam
aad
js
cmpb
and
push
sbb
aad
xor
push
push
sbb
cmp
aam
mov
das
mov
scas
test
add
orl
shll
or
pop
scas
pushf
xchg
jo
lea
mov
push
mov
sub
ficoms
add
stos
cmpsl
inc
movsb
sbb
outsl
jne
into
pop
lds
pusha
jo
std
jnp
mov
push
lds
ja
in
cld
mov
cmp
dec
cmp
or
sbb
lock
test
lods
movsl
insl
sbb
jae
adc
fsts
in
loopne
cmp
add
adc
adc
xchg
popf
dec
jno
test
push
pop
icebp
nop
add
add
cmp
adc
ret
sbb
leave
pop
cmp
cmp
rcrb
or
pusha
cmp
push
repnz
jno
cmpsl
xchg
or
or
or
roll
or
call
inc
or
mov
push
sub
in
js
repnz
in
pop
fcoml
add
aas
mov
cmpsb
cmp
lret
ds
enter
arpl
in
negb
aas
inc
push
push
test
insb
in
sbb
pop
mov
jg
orl
or
mov
jecxz
sbb
adc
sbb
sub
add
int
movsb
adc
dec
xlat
xlat
inc
in
inc
push
fs
loopne
shlb
scas
stos
and
and
dec
pusha
aad
lea
bound
add
add
imul
pop
repz
pop
inc
pop
loopne
loopne
test
popa
and
xchg
mov
popa
cmpb
xchg
je
xchg
ret
stc
daa
mov
jnp
mov
cmc
or
mov
push
lods
or
bound
lds
and
or
and
mov
inc
aaa
pop
add
scas
inc
xor
dec
and
cmp
dec
xlat
dec
adc
and
push
adc
add
jp
add
mov
mov
in
push
mov
pop
or
pop
or
cmpsl
push
sbb
or
or
mov
add
sbb
lret
sbb
mov
cmc
jge
movsb
das
dec
enter
jne
mov
mulb
orb
and
enter
adc
inc
add
scas
ret
dec
or
push
add
mov
mov
shl
or
xchg
pop
xchg
gs
push
mov
test
outsl
call
inc
mov
imul
sub
adc
mov
push
or
je
push
push
sbb
push
or
orb
imul
sub
or
sarl
cmp
or
sub
hlt
jne
das
add
sub
or
pop
and
xchg
inc
jmp
sub
and
xor
nop
out
imul
sub
dec
pusha
sub
cmp
push
mov
shrb
or
xchg
push
push
ljmp
fwait
sub
enter
mov
inc
mov
nop
sbb
and
xor
mov
xchg
mov
pop
je
push
adc
cmp
jg
lods
mov
imul
xchg
enter
sahf
pop
xchg
cmp
sbb
adc
test
aaa
dec
rolb
sbb
push
xchg
jg
outsl
inc
rcll
movsl
rorb
pop
xor
sahf
sti
pusha
xlat
popa
jmp
stc
inc
push
das
inc
jmp
popa
in
mov
test
mov
push
rorb
sub
dec
sbb
mov
sbb
push
out
or
jmp
inc
sti
push
add
add
in
pop
cs
cltd
adc
sub
push
aaa
pop
mov
cmp
mov
adc
mov
dec
jmp
call
or
lret
push
cmpsl
testl
mov
adc
mov
cmp
ja
adc
xor
push
or
insl
jbe
mov
or
inc
mov
arpl
push
sar
mov
jno
cmpsl
es
mov
xchg
mov
aam
or
rcrl
pop
or
adc
push
inc
push
ljmp
imul
fwait
shlb
lock
das
add
jne
scas
jge
aam
adc
jnp
xor
or
adc
hlt
mov
pop
and
cmp
fs
xor
jmp
cmpsl
lods
mov
xor
push
hlt
aaa
add
ja
dec
addr16
rcrl
xchg
pushl
cmp
fists
in
in
push
mov
jbe
adc
push
adc
pop
nop
nop
and
sub
adc
in
test
mov
cmp
inc
pop
cltd
adc
adc
push
lret
movsb
movsb
pop
lock
inc
cmp
imul
dec
mov
nop
push
in
adcb
fistl
add
and
jl
pop
mov
faddp
lahf
int3
push
sbb
and
aas
mov
bnd
mov
sbb
xor
out
inc
dec
orb
in
stc
sub
mov
pusha
push
or
addb
pop
pop
and
inc
aaa
ds
rorb
jb
test
and
pop
adc
and
outsb
sbb
filds
in
mov
dec
adcl
out
out
fimull
mov
aaa
cmp
add
aas
cmp
add
inc
aas
sbbb
lcall
andl
sub
mov
data16
bound
jl
xchg
inc
add
cmp
add
scas
xchg
stos
ja
data16
roll
mov
adc
mov
lds
mov
imul
jno
insl
or
cmp
les
jmp
stos
jge
rclb
adc
cmpl
dec
inc
inc
mov
dec
jge
xchg
paddsb
pop
jno
inc
adc
enter
pop
divb
push
data16
movups
xor
inc
dec
aaa
movsl
adc
mov
and
mov
daa
push
sub
sub
push
sbb
and
loope
mov
cltd
jmp
push
adc
je
or
pusha
and
push
orb
andb
add
test
ss
jne
movsl
and
je
dec
test
lcall
push
jns
mov
cmp
jb
jbe
ja
sbb
dec
push
mov
out
cmc
adc
lock
jecxz
adc
jne
adc
sub
add
jecxz
push
add
jb
sbb
sub
cmp
and
stos
rcll
inc
aam
je
add
les
or
or
xor
cmpsl
test
jne
or
negb
mov
mov
push
sete
aas
push
cmp
dec
or
lea
in
sbb
das
rcll
hlt
bound
inc
cmp
xor
adc
xchg
int3
int3
sahf
push
loope
popa
nop
xor
mov
or
or
add
sub
inc
jle
sbb
mov
int3
sahf
adcl
movsb
std
cmp
pushf
mov
or
imul
inc
xor
lret
adc
outsb
sbb
lods
inc
cwtl
rorl
xor
inc
stos
cs
mov
pop
sub
adc
dec
add
xchg
push
adc
fs
jno
cmpsb
adc
pop
and
sub
or
ds
adc
pusha
or
inc
pusha
or
rolb
dec
enter
gs
adc
and
gs
push
xorl
cmpsb
pop
testb
and
mov
and
xchg
xor
pop
mov
pop
insb
loopne
mov
sub
jnp
or
or
adc
iret
adc
jnp
sarb
in
cmpsl
dec
cli
scas
mov
je
in
mov
out
pop
and
and
sbb
sar
adc
decb
inc
test
in
std
mov
sub
xor
xor
and
adc
in
cmp
jo
daa
iret
movb
sti
imul
dec
inc
and
adc
xchg
mov
mov
jg
popa
test
jmp
and
in
push
clc
dec
cmp
pop
aas
jae
mov
sbb
xor
xor
push
jbe
sbb
nop
pop
add
rclb
loopne
push
mov
cmp
inc
mov
addl
dec
idivl
or
lods
gs
roll
fisttpll
lods
inc
add
cmp
push
xor
rcl
push
adc
jg
in
pusha
add
mov
mov
movb
scas
add
dec
ljmp
adc
test
and
test
jne
ss
jo
jmp
sub
and
mov
pop
hlt
sbb
test
je
mov
adc
lret
mov
sub
sbb
test
jne
jb
aaa
or
add
inc
sbb
mov
and
mov
adc
repz
mov
jle
ljmp
in
inc
in
inc
mov
sub
push
enter
nop
add
pushf
les
rcll
sarb
fsubl
jmp
xor
dec
stos
inc
and
cwtl
clc
icebp
xchg
das
or
sbb
adc
sbb
push
jnp
rclb
shlb
mov
add
lods
sub
mov
sarl
cmc
adc
shll
adc
pmulhuw
and
popf
inc
shlb
andl
sub
add
xor
mov
push
sub
pop
xor
lock
push
arpl
shl
test
or
add
pop
pop
pop
and
cmpsb
inc
or
dec
inc
add
inc
cmp
fnsave
sub
pop
mov
rol
dec
jo
scas
jecxz
ret
mov
and
ret
sub
pushl
adc
cmc
shrb
push
push
mov
call
mov
add
inc
enter
je
add
cs
cmp
fisubs
xor
fadd
inc
jle
dec
mov
cmp
outsl
sub
or
adc
xchg
loopne
or
push
cmp
roll
mov
jmp
push
mov
cmp
fadd
push
loope
scas
test
bound
push
mov
fstpl
cmp
lea
lret
subb
or
sub
xchg
iret
or
push
push
push
dec
mov
push
imul
jmp
stc
mov
cmpsb
adc
push
sti
add
pop
pop
push
or
mov
cmp
cmp
xor
push
or
loope
or
xor
cmp
push
aam
or
out
js
iret
add
add
xor
sarl
xchg
fbld
pop
jmp
insl
dec
clc
lock
mov
push
lret
cmp
fs
pop
xlat
js
lea
pop
cmc
xor
jbe
pop
aam
dec
sbb
and
ret
bound
incb
inc
in
xor
shr
and
sub
cli
or
sub
sub
roll
in
sub
inc
or
fisubs
call
jae
add
xchg
inc
mov
mov
sub
add
pop
fcoms
dec
pop
inc
mov
jne
push
push
clc
add
cld
sti
ds
fmuls
jmp
and
sub
fmull
mov
cmc
jne
mov
xor
or
mov
aas
fwait
movb
jmp
sarb
les
inc
fsts
sub
push
or
data16
jle
sti
inc
mov
and
xor
fmul
mov
add
add
mov
into
add
mov
aaa
cmp
add
jle
and
aas
jl
cmp
jne
xor
adc
xchg
mov
int
xchg
dec
test
ret
out
mov
ficomps
test
dec
sbb
js
jmp
xchg
add
icebp
in
cmp
push
aam
dec
xor
aad
ficomps
add
fidivrs
jbe
lds
dec
call
jl
aaa
fldenv
cmp
add
lds
add
mov
push
pop
xchg
lret
jno
into
cmc
xor
pop
push
jno
test
pusha
add
or
popa
cwtl
push
sti
loope
popa
inc
jnp
sub
cmc
and
add
ljmp
push
rcrb
jnp
je
movsb
sub
jl
mov
cwtl
jo
add
aaa
jae
dec
cmpsb
push
push
mov
jae
in
and
pushf
sti
imul
movsb
dec
dec
lea
call
bound
mov
cltd
aas
jp
lcall
lcall
adc
adc
mov
inc
sub
loope
test
sti
adc
loope
lret
fisttps
cmpsl
lock
adc
pushf
xchg
aaa
aam
inc
add
or
fidivl
call
dec
sub
xchg
lock
inc
sahf
push
push
push
pop
add
or
aas
xchg
xchg
inc
mulb
enter
rclb
enter
inc
or
pop
pop
jecxz
dec
enter
push
rol
sbb
push
mov
outsl
into
out
pop
cmp
loop
or
ja
push
lods
add
inc
sub
out
pop
test
mov
cld
xor
loope
les
dec
mov
push
pop
hlt
push
pop
fst
push
in
dec
cmpsb
sbb
jecxz
ljmp
lea
jle
adc
into
pop
push
add
add
inc
jne
clc
pop
adc
and
insb
fmuls
dec
ljmp
jae
add
inc
add
fistl
pop
sarl
daa
je
pop
push
push
unpckhps
or
in
push
mov
mov
jmp
mov
mov
inc
xor
add
in
imul
sub
pop
enter
out
sbb
repz
insb
dec
in
or
mov
adc
fsubl
xor
mov
fcoms
dec
aas
adc
dec
sbb
and
push
popf
sbb
sbb
enter
dec
pop
push
push
or
push
mov
lock
loopne
hlt
in
xchg
mov
fdivl
cmp
mov
pushl
add
mov
rorb
aas
pop
push
sub
fiadds
inc
cltd
pop
inc
es
fldz
jle
pop
mov
enter
sub
or
push
jo
test
dec
test
adc
add
mov
scas
sbbb
add
mov
and
add
movsl
jmp
adc
or
fucomip
sub
xor
sub
mov
adc
xlat
xchg
in
jno
mov
jecxz
int3
sahf
jns
decl
push
fadds
jnp
mov
jne
imul
or
test
and
adc
and
xchg
aad
fimuls
mov
push
sbb
inc
loopne
in
dec
push
or
pop
outsl
dec
jo
cmp
push
push
inc
adc
or
xchg
insl
and
dec
xchg
insb
cmc
pusha
fldcw
pop
pop
lods
dec
punpckhbw
push
outsb
sbb
test
or
mov
dec
lds
pop
push
or
scas
add
das
push
clc
jno
sub
mov
push
cmpl
cltd
shr
inc
aad
ret
mov
inc
out
stc
sub
push
sbb
insb
mov
aaa
jl
xchg
jp
cmc
sub
call
mov
sub
sbb
push
pop
add
xor
iret
in
mov
pop
cmp
in
test
into
in
xor
xchg
adc
add
inc
nop
dec
das
stc
mov
cmp
imul
or
pop
test
xchg
jns
addb
icebp
cmp
fdiv
sub
in
jb
loopne
adc
or
rclb
push
pop
or
rorl
cmp
test
test
adc
clc
xor
call
or
lods
push
add
decl
lret
add
ja
gs
push
dec
push
push
adc
inc
lock
sbb
add
sub
xchg
jne
inc
dec
jb
roll
or
bndstx
lock
clc
loop
popa
push
mov
pop
push
ror
add
and
inc
dec
popf
cmp
bound
adc
mov
loope
ret
rorb
mov
jbe,pt
mov
pop
dec
lods
and
jge
aam
add
fbstp
mov
adc
and
push
inc
inc
mov
jecxz
lock
dec
mov
loope
lret
idiv
sbb
inc
mov
pop
in
bound
mov
sbb
les
clc
dec
and
fdivl
ret
sub
loopne
mov
call
in
les
sub
pop
mov
and
enter
pop
dec
loopne
dec
dec
inc
dec
call
popa
out
fidivl
sbb
mov
push
cmp
outsl
call
sbb
rolb
inc
add
test
sbb
mov
test
push
movnti
loopne
or
mov
and
pushf
xchg
aas
and
leave
leave
inc
push
sub
inc
pop
pop
aad
inc
lods
and
mov
aas
xchg
nop
or
lret
add
test
pushf
add
and
lods
add
dec
daa
and
adc
mov
mov
dec
test
outsl
iret
mov
test
cltd
and
add
and
and
lret
jl,pn
rcrl
push
bound
les
loopne
or
inc
hlt
push
sbb
pop
push
xor
pop
lcall
loope
fiaddl
add
sub
cs
pop
cmp
fists
js
mov
pop
mov
inc
xor
data16
inc
cmp
and
popa
popa
or
das
test
and
or
push
loop
loopne
cmp
shlb
sbb
and
adc
dec
loop
rorb
inc
pop
mov
fcomp
xor
rcr
cmp
cmpsb
push
movb
cmp
lret
sarl
shll
repz
sub
cld
mov
jmp
jne
lock
pop
fcmovbe
mov
or
add
mov
push
mov
add
loope
orl
outsl
xchg
loopne
jo
stc
sbb
sbb
in
pop
jge
sub
pop
vcmpps
jnp
in
mov
push
jns
sbb
imul
jo
sbb
push
add
and
ds
push
rorb
loopnew
loopne
mov
mov
hlt
jle
sbb
mov
lock
insl
inc
jnp
fisttps
mov
sub
or
out
mov
inc
loopne
clc
orl
ficompl
mov
aam
push
data16
hlt
xchg
loopne
push
adc
xorb
xor
iret
das
or
add
loopne
in
orb
addl
orl
mov
sbb
add
xor
dec
push
enter
jnp
mov
add
in
fwait
jbe
cld
mov
sbb
sahf
mov
cmp
lods
out
jecxz
xlat
push
sub
fcomp
xlat
and
inc
fwait
push
pop
test
jo
xchg
ds
pop
shl
loopne
mov
arpl
adc
divl
es
ds
sbb
shlb
dec
push
add
loopne
sbb
add
mov
mov
sub
push
cli
fwait
out
xchg
xchg
sub
les
fsubl
adc
pop
push
les
sub
inc
shrb
mov
lcall
add
xor
sbb
or
dec
push
push
enter
push
xor
adc
push
jecxz
int
xchg
out
outsb
push
pop
test
imul
push
push
subb
push
mov
xor
addb
in
xchg
shlb
insl
insb
jne
int3
das
pop
iret
jg
js
addl
add
or
xor
cmp
mov
je
or
jecxz
mov
dec
sbb
pusha
or
stc
fdivs
or
mov
addb
pop
loope
mov
jb
mov
adc
shl
popa
ds
mov
fsubs
mulb
int
cmp
cmp
aam
and
loop
push
jnp
pop
les
les
out
push
adc
mov
outsb
out
jge
xor
mov
mov
cmpsl
xlat
repnz
or
mov
mov
dec
popa
mov
in
jb
outsb
jnp
pop
into
dec
enter
inc
hlt
cmp
jns
jle
les
mov
cltd
call
cmpsl
sub
adc
dec
add
adc
pop
push
ret
mov
imul
mov
pop
arpl
ret
dec
push
pop
push
mov
dec
jge
cmpsl
pop
sub
aam
dec
fs
pop
pushl
cmp
pop
sbb
push
rcrb
mov
pop
sub
xchg
jo
or
es
xor
rcr
xor
pushf
add
adc
rol
sbb
xchg
rorb
sbb
cmpsl
cmp
rolb
cmp
addr16
xchg
rcll
fcom
dec
push
loopne
or
push
lock
insl
and
mov
daa
add
je
popl
jle
pop
or
nop
push
fdivs
mov
push
add
ja
or
inc
test
cmp
fsubl
adc
sbb
xor
mov
pop
cmp
inc
inc
pop
mov
push
pop
pusha
mov
outsb
imul
out
ds
inc
push
fists
push
dec
add
pop
movsl
fs
mov
xor
xchg
add
sbb
jecxz
add
jnp
addl
shlb
xchg
jno
stc
push
sbb
std
add
mov
ljmp
xchg
pop
pop
mov
je
mov
inc
je
dec
cmp
sti
adc
xchg
sub
xchg
sub
sbb
pop
mov
cmpb
inc
dec
fimuls
push
sbb
or
sbb
das
cmpl
inc
fwait
inc
mov
pop
pop
sbb
rorb
cmp
pop
shrl
aad
pushf
adc
and
jg
outsl
les
xlat
scas
xchg
fstl
and
enter
aam
sahf
cwtl
arpl
test
pop
stos
pop
cs
or
push
clc
gs
fwait
adc
xchg
dec
fimull
jo
or
mov
or
ss
mov
inc
repz
dec
loope
les
test
cmpb
sub
add
pop
xor
popa
ljmp
orw
xchg
arpl
movb
push
or
xor
fsts
inc
popf
insl
loopne
mov
arpl
movsb
pop
or
jo
sub
sbb
add
ss
int
xchg
xor
sarl
jmp
data16
mov
or
push
and
ja
enter
push
adc
out
sbbl
adcb
lock
mov
inc
pop
mov
mov
test
lds
adc
jnp
xor
push
stos
sbb
and
pop
jno
je
jmp
out
js
test
adc
dec
out
sbb
xchg
movl
or
fmull
xsha256
cmpsb
push
mov
jmp
mov
jnp
inc
inc
shrl
stc
xor
dec
ja
mov
inc
dec
test
jle
push
lea
mov
imul
iret
push
lock
or
jo
out
cmp
lret
push
mov
sub
enter
cmp
test
sbb
cmp
out
push
dec
xchg
ss
mov
ret
mull
iret
and
mov
inc
adc
sub
repz
sub
pop
pop
adc
sub
shlb
or
stos
mov
cmp
orb
rcl
push
testb
push
fucomip
daa
lea
sub
test
inc
cmp
ds
out
mov
je
clc
int
fcoml
jb
inc
pop
cltd
xor
adc
xor
insb
jg
or
or
adc
inc
pop
push
jle
mov
push
test
push
test
xchg
lea
ret
test
xor
xchg
aad
xlat
add
pop
sub
sub
or
add
xchg
push
dec
inc
xchg
pop
dec
and
and
leave
inc
jb
cmp
jb
pop
and
inc
and
leave
inc
inc
or
push
arpl
test
push
cmp
xor
push
push
push
pop
daa
jge
dec
xor
xor
sbb
and
sub
cmpsb
add
mov
push
mov
jge
xchg
movsl
or
ret
je
jmp
inc
jo
aaa
out
pop
jns
jmp
push
lret
out
das
dec
mov
and
in
js
rolb
cmp
rorb
push
rolb
xchg
xchg
mov
mov
push
push
cli
ds
adc
xor
mov
xor
pop
mov
insb
ret
adc
adc
and
clc
inc
test
icebp
add
ret
sub
pop
push
adc
jns
mov
pop
addr16
xchg
jo
add
adcb
or
and
mov
outsl
jmp
arpl
xor
in
loope
cmpsb
adc
xor
rorl
sbb
add
rorb
call
dec
mov
aas
push
fimull
and
inc
mov
loopne
dec
pop
cmp
or
add
jecxz
mov
insb
mov
iret
sub
cmpsl
sub
vmwrite
loope
add
push
inc
fisttps
je
std
mov
add
and
add
outsl
mov
pop
xchg
mov
push
ja
mov
cmp
adc
call
in
add
clc
push
xor
nop
ljmp
or
push
dec
add
dec
xor
sbb
dec
ret
jmp
dec
and
sub
sub
pop
pop
adc
mov
sub
mov
sub
and
xchg
addr16
and
movb
fcomi
sbb
pusha
add
and
push
ja
lahf
jnp
cwtl
sub
sbb
inc
dec
jp
cmp
hlt
push
test
rorb
es
jmp
dec
bound
add
arpl
aam
inc
in
mov
xor
ds
adc
and
rolb
les
test
dec
bound
cmp
sbb
push
cmp
enter
mov
mov
dec
push
pop
sub
ret
rorb
dec
cs
mov
movsl
jmp
sbb
aas
adc
lds
mov
adc
pop
jp
mov
data16
test
push
out
mov
out
pop
out
pusha
push
push
dec
mov
cmp
dec
jg
aam
es
scas
mov
xlat
mov
dec
fsubl
imull
inc
push
pop
sbb
and
fadds
ret
mov
sub
daa
cmc
jb
add
jg
shlb
mov
adc
jl
jo
pop
dec
test
js
ds
cmp
shll
push
or
mov
je
add
in
notl
call
orb
push
xchg
sub
rorb
dec
cmp
cmp
and
daa
sub
push
sub
pop
loopne
sbb
cmp
testl
sbb
sub
stos
dec
pop
loope
jns
dec
xor
rol
lock
xchg
cmpsl
bound
adc
push
dec
sarw
mov
je
roll
lahf
push
adc
rcrb
lds
cmpsb
jno
jle
pop
popa
mov
sar
push
or
pop
outsb
lret
jne
inc
imul
xchg
imul
loope
push
mov
sbb
xor
shll
add
clc
sbb
out
scas
pop
sbb
jns
test
inc
cmp
push
ret
mov
and
adc
loope
mov
adc
int3
ficoml
xchg
sub
mov
adc
test
sahf
test
mov
mov
or
and
or
lahf
lock
pop
pop
test
xchg
iret
pop
test
stos
cmpsb
adcb
mov
shr
or
push
push
push
mov
jbe
stos
jb
insl
sub
lds
and
push
jne
je
shrb
mov
lds
hlt
adc
addl
std
mov
mov
sub
jl
pusha
jmp
mov
xor
sub
inc
fmuls
repnz
out
inc
sarl
in
es
dec
test
mov
jmp
dec
inc
cmc
rolb
mov
fidivrs
push
aas
cmpb
test
inc
jge
push
fbstp
jne
jg
mov
push
xor
sub
jle
out
mov
popa
ja
jo
inc
push
cmpsb
subb
cmpsl
test
enter
ljmp
es
xor
sti
jl
or
mov
std
mov
loope
cmp
adc
xorb
inc
sarb
mov
dec
test
pop
ret
cli
push
pop
test
cmpb
sub
mov
inc
or
or
pop
jne
pushf
inc
test
movsb
rorl
pop
cld
jle
and
jb
aaa
dec
and
dec
inc
jne
lcall
cmp
cmpsl
imul
test
imul
cmp
mov
add
pusha
mov
fs
push
fcoms
addb
inc
cmp
cmp
mov
aam
outsl
cld
dec
mov
or
aam
cmc
sbb
pop
jo
mov
lock
adc
sub
mov
xor
js
adc
xchg
aas
xchg
or
or
adc
adc
sbb
mov
lahf
jo
or
or
cmp
jmp
out
inc
stc
ret
cmpsl
mov
push
test
push
mov
outsl
nop
test
jmp
lock
movsl
inc
adc
sub
mov
insl
je
sub
mov
dec
inc
ret
adc
pushf
hlt
xor
jmp
or
pop
and
xchg
xchg
mov
xchg
xchg
cmp
xchg
mov
sub
mov
mov
dec
sub
insl
add
mov
mov
andb
out
inc
or
sub
add
rclb
movsl
cmp
cmpsl
mov
fsubrp
and
sbb
xchg
jmp
fs
xchg
pop
pusha
js
inc
js
push
inc
sbbb
sbb
push
sub
sar
pop
mov
popa
jecxz
mov
mov
mov
jmp
adc
push
cli
add
dec
cmp
adc
pusha
cmpsb
dec
inc
adc
dec
cmp
mov
loope
add
sahf
cmp
outsl
jl
add
cmp
lret
jbe
ret
cmpl
push
xor
jl
flds
sub
pop
add
sub
pusha
ret
pop
or
pop
mov
adc
fs
daa
out
inc
xor
movsl
lcall
repnz
cwtl
cmp
hlt
inc
jnp
and
addr16
sahf
dec
loop
or
les
pop
fcoms
and
dec
mov
jno
fwait
ss
out
and
adc
mov
dec
aam
out
and
push
clc
nop
call
js
sbbb
ret
cmp
movsb
cmpsb
sete
lcall
inc
dec
insb
mov
sbbb
inc
push
js
lcall
and
dec
adc
insl
jl
dec
out
cltd
sbb
movsb
and
mov
xor
dec
jns,pn
jmp
ja
es
popf
test
jmp
outsl
cmp
int3
inc
add
push
lcall
jno
adc
imul
jo
cmp
push
push
out
mov
cltd
int3
jge
push
icebp
popa
mov
inc
mov
fs
cwtl
mov
sbb
scas
adcl
and
loopne
xor
cs
popf
lret
mov
dec
and
and
inc
and
and
lret
dec
lret
jp
push
or
pop
lods
jle
int
add
hlt
aas
insl
pop
cmc
dec
add
bound
dec
in
faddl
xchg
mov
or
and
xor
or
add
add
mov
and
push
cld
jns
pop
pop
cmp
sbb
mov
push
cli
pushl
popa
sti
add
imul
lea
mov
aaa
or
ret
insb
add
xorl
xchg
popf
sbb
jp
ss
sbb
jne
shl
inc
xchg
add
xchg
sbb
cs
inc
pop
or
mov
mov
xchg
insl
or
mov
inc
fstl
pop
adc
fimull
fldt
aad
pop
fadds
mov
mov
push
mov
sbb
sahf
sbb
imul
inc
movsb
pop
inc
dec
push
or
clc
xor
ljmp
adc
adc
push
fpatan
cmp
inc
shl
repz
ds
lds
push
or
xlat
mov
int3
imul
scas
xor
and
push
in
adc
and
mov
gs
inc
mov
leave
add
sub
inc
sarl
mov
xor
dec
out
das
orb
shlb
sub
data16
xchg
test
mov
push
inc
dec
inc
inc
aaa
inc
shl
cmpsb
push
pop
mov
out
pop
xor
mov
cmp
push
pusha
or
add
aaa
pop
push
sub
cmovg
adc
add
ss
divb
nop
pop
push
cmp
add
or
loope
dec
cvtps2pd
mov
or
or
inc
push
mov
mov
or
push
movl
sbb
add
ret
add
sbb
push
ds
inc
inc
pop
xchg
xchg
add
sbb
add
inc
cmp
jge
cmp
subb
lds
mov
test
pop
test
inc
shll
ror
je
mov
loop
and
sahf
insb
sbb
jecxz
sbb
jmp
rcrb
cmovle
cmp
ror
jbe
or
add
add
jmp
movsl
xor
jbe
insl
dec
insl
inc
mov
inc
mov
jbe
cmc
loope
andb
rcll
mov
lea
xor
aad
inc
push
iret
cld
jno
sub
cmp
nop
xor
adc
adc
sbb
js
cli
std
jle
sbb
int
enter
cltd
jp
or
movups
mov
loope
call
test
call
sbb
clc
ret
mov
adc
xor
popa
nop
das
dec
and
inc
cmc
or
rorl
xor
lods
xor
ds
es
mov
inc
pop
cmpsb
addr16
ret
cmp
push
insl
push
or
add
push
lock
mov
pop
cwtl
xor
cmp
cmp
dec
loopne
jbe
push
xor
int3
inc
adc
push
mov
lods
pop
mov
mov
cli
in
scas
mov
dec
out
push
xor
fs
insb
and
call
or
xor
jp
aad
ss
adc
push
mov
add
and
pop
push
loope
and
xchg
add
xchg
and
add
loopne
jmp
add
sar
ja
or
add
jnp
add
imul
or
lods
jo
inc
mov
mov
data16
xor
jae
inc
mov
xlat
jb
xchg
pop
xor
mov
xchg
js
mov
push
or
cs
or
inc
lock
cwtl
addr16
pop
pop
subb
adc
or
jl
adc
dec
addr16
je
jne
decw
mull
mov
movsb
xor
jb
ds
popf
jmp
and
js
or
dec
jmp
lods
inc
clc
xor
mov
push
popa
popf
out
xchg
or
in
aaa
in
fiaddl
push
cs
push
and
sub
ss
imul
cmp
adc
loope
jne
xor
xorl
stc
mov
mov
or
xchg
push
lret
popf
dec
or
icebp
cltd
xor
psraw
pop
stos
add
jp
jno
xchg
mov
fbstp
jl
in
je
mov
movb
mov
punpckhbw
inc
jle
and
outsl
cmpsl
inc
sbb
shrd
in
cmpsb
push
outsb
mov
pop
push
sbb
bound
dec
xchg
sbb
inc
cmp
cmp
inc
sub
andl
add
xor
cmpsb
pop
pusha
or
sub
ss
mov
mov
push
or
inc
pop
test
push
push
xchg
xchg
shrb
jmp
addl
or
sbb
or
adc
jbe
cmp
imul
adcb
jge
jae
dec
loop
xor
loopne
mov
test
pop
pop
js
adc
dec
push
testb
or
push
or
cmp
or
xor
dec
sub
movsl
pusha
xor
jp
cld
pop
lds
dec
inc
pusha
data16
out
scas
clc
dec
mov
testb
adcb
lcall
imul
lds
and
mov
xchg
fstl
mov
adc
dec
popl
xor
adc
mov
leave
xchg
xchg
sbb
jmp
mov
test
and
jle
aas
cmp
push
test
push
addl
dec
insb
rcrb
imul
cld
cmp
xchg
orl
jp
gs
mov
xorl
mov
mov
clc
or
inc
push
shlb
adc
adc
idiv
mov
clc
cmp
xchg
sub
sbb
test
popa
imul
mov
xchg
popf
pop
cmp
add
clc
pusha
gs
dec
jg
add
and
test
jo
push
je
adc
mov
cmp
rclb
jae
jbe
lock
inc
jmp
dec
or
cmpl
pusha
mov
inc
ficomps
repnz
xchg
ss
jle
nop
jo
mov
push
sarb
add
mov
aas
mov
daa
cli
pop
orl
pop
adc
mov
inc
jl
das
fadd
add
sub
mov
mov
xchg
xlat
sub
push
or
call
cmp
loope
jnp
imul
ficompl
inc
push
adc
add
sub
add
sub
out
push
mov
dec
adc
xchg
cmp
and
or
xlat
xor
jmp
and
sbb
push
push
ss
leave
inc
enter
cwtl
push
and
sub
mov
cld
pop
mov
add
mov
or
rcrb
hlt
jmp
push
lock
push
mov
xor
xchg
rclb
imul
mov
or
or
call
adc
pop
add
pop
or
addr16
sub
pop
testb
pop
lods
insb
mov
lock
xor
filds
insb
sbb
or
repnz
aam
add
mov
mov
sbb
jo
mov
sub
lods
les
movsb
mov
cmp
andb
pop
or
or
mov
inc
sbb
or
push
lea
and
xorb
sbb
sbb
mov
mov
inc
leave
popa
push
mov
loope
scas
leave
xorl
and
add
sbb
cwtl
insb
imul
dec
movsl
icebp
push
xchg
pusha
dec
push
push
in
pop
or
loopne
pop
inc
ret
fsub
loopne
sbb
xor
hlt
pop
add
fsubl
js
ja
scas
jge
push
add
mov
mov
pop
scas
push
outsb
cmp
xchg
dec
inc
andl
cmpsl
loop
push
loopne
add
inc
and
sub
or
mov
dec
sbb
fstps
cmp
shlb
and
fwait
mov
inc
ds
push
gs
movsl
test
add
pop
enter
adc
inc
mov
xchg
or
clc
movl
dec
mov
rcrl
adc
sub
pop
nop
push
sbb
jp
inc
sub
or
pop
add
arpl
leave
ret
sub
pop
push
pusha
jl
mov
or
ds
inc
push
out
xor
cwtl
xor
push
out
cmp
lea
xor
dec
pushf
cmp
xchg
and
movsb
adc
xor
aaa
xchg
ss
nop
lahf
movsb
cwtl
sub
inc
cwtl
sti
sbb
shll
or
mov
repnz
or
xchg
ret
pop
sub
stc
stos
cmpb
and
jecxz
mov
sarb
cmp
add
cmovb
or
push
or
sub
inc
push
sbb
add
or
mov
sbb
shl
or
and
xchg
fucom
dec
and
into
push
movsl
sarl
xchg
adc
inc
cli
xchg
inc
add
inc
bswap
arpl
imul
ret
loopne
fadds
push
leave
aad
mov
add
or
inc
xchg
jb
leave
imulb
dec
push
push
inc
lahf
cmp
inc
sub
stos
inc
clc
push
outsl
or
sbb
pop
add
jbe
mov
jp
imul
inc
push
movsb
jge
mov
je
add
xchg
dec
insb
inc
sbb
pop
xchg
mov
mov
popa
xchg
sbb
hlt
mov
stc
mov
xlat
movsb
sbb
pop
dec
and
push
inc
dec
sbb
es
cld
arpl
push
test
jle
sub
out
dec
insl
ss
pop
adc
adc
sbb
lds
pop
js
jp
push
test
fiadds
btr
je
sub
cs
xchg
sub
or
or
cs
or
and
and
or
test
jo
ret
cs
inc
xchg
xor
repz
ja
jle
insb
pop
out
mov
gs
xchg
add
call
leave
ret
jl
inc
pop
or
sbb
fadd
sub
dec
orl
pop
cli
pop
inc
cltd
xchg
pusha
push
popa
inc
jle
shrb
int
xor
pop
pop
repnz
mov
outsl
pop
cld
inc
fwait
sbb
lcall
jne
jne
dec
addr16
pop
mov
push
mov
xchg
and
add
xor
add
filds
mov
mov
stc
mov
popl
xor
sub
jl
js
xchg
stc
mov
je
xchg
jo
lcall
push
leave
cmp
shlb
xor
jbe
fwait
repnz
cmp
pop
mov
fdivl
or
pop
addr16
daa
add
push
pop
mov
dec
cmp
cmp
gs
lcall
outsl
mov
dec
cli
pop
adc
js
prefetchwt1
das
inc
sbb
and
and
pop
xchg
cld
mov
pop
rcll
mov
or
inc
add
inc
ret
push
inc
cmpsl
mov
or
pop
add
mov
push
jmp
movsb
outsl
or
jmp
xor
dec
loop
push
inc
mov
movsl
leave
aam
in
enter
mov
xor
ljmp
pop
lcall
xlat
popf
arpl
fcmovbe
add
pop
adc
sub
sub
cld
lret
adc
loopne
jb
or
mov
incl
ret
dec
inc
cltd
icebp
sbb
xchg
cmp
add
loopne
jo
aas
inc
pop
inc
add
iret
mov
movsl
loope
inc
or
sbb
pop
cmp
nop
addb
sti
pop
test
mov
unpcklps
jg
lock
xlat
mov
stc
dec
and
inc
inc
mov
adc
pop
das
mov
mov
inc
push
cmp
mov
in
and
dec
pusha
dec
fadd
enter
jl
rcr
cmp
les
repnz
xor
fstpl
mov
jo
insl
sar
fcoms
dec
pusha
xchg
fmull
out
mov
jns
divl
int
xlat
push
loope
mov
lds
push
pop
sbb
repz
and
xor
inc
adc
cmp
repz
sti
add
or
jno
into
repz
test
jno
mov
shl
or
sub
stos
rolb
in
adc
ss
pushf
out
call
mov
lcall
pop
sbb
inc
or
lahf
les
mov
lock
adc
rorb
mov
out
and
xor
adc
and
test
and
jmp
insl
xchg
sub
cmp
or
adc
sti
outsl
outsl
imul
sbb
mov
or
jl
aam
lock
aam
cmp
pop
mov
repnz
mov
inc
sub
cltd
push
and
leave
enter
mov
mov
leave
lods
push
rolb
cmc
in
movsb
fimull
arpl
dec
aad
cmc
add
nop
sub
shl
imul
fiadds
ds
push
lea
aas
pop
add
push
sub
or
dec
mov
dec
push
pop
push
add
sbb
dec
xor
xor
and
mov
cmc
sub
pop
push
movsb
cmovne
ret
dec
mov
cmpl
xor
mov
int3
adc
data16
dec
sbb
shrl
loopne
mov
jo
arpl
movsb
or
push
add
aam
ret
mov
or
icebp
push
test
decl
cs
shll
xchg
xchg
enter
xor
sub
mov
mov
adc
fs
sbb
pop
and
push
sahf
ret
andb
stos
js
jno
lds
daa
or
adc
or
mov
cmpsl
dec
add
cwtl
xchg
mov
inc
roll
shr
add
ss
pop
inc
cmp
les
push
cmp
or
xor
aam
add
jns
leave
sub
mov
arpl
cwtl
mov
aad
push
xchg
fstl
loop
gs
dec
pop
test
or
test
add
or
or
sub
add
add
push
test
or
addl
adc
add
fidivrs
push
or
add
mov
and
dec
aam
or
imul
sbb
lcall
test
push
decb
cs
popa
inc
repnz
in
fadds
movb
popa
dec
mov
pop
mov
jne
sbb
jnp
cli
cmp
push
jae
dec
sbb
dec
jo
sub
add
inc
jnp
lods
or
leave
add
xchg
mov
or
and
adcl
lds
mov
pop
adc
pusha
mov
fdivrl
or
inc
xchg
xchg
mov
out
sbb
push
js
inc
mov
aaa
push
mov
addl
lea
add
stos
movsb
arpl
rclb
inc
ja
addb
inc
and
insb
push
xor
outsl
popf
adcb
adc
sahf
fsts
inc
ds
and
inc
and
addl
andb
add
mov
adc
xchg
or
out
fs
mov
cmpl
mov
xor
iret
or
shrl
inc
rolb
lret
aaa
xor
movsl
bound
outsb
or
stos
and
inc
jl
sbb
lret
sub
pop
adc
filds
rcr
inc
fnstenv
clc
mov
push
insb
add
movsb
lds
scas
jmp
fiadds
jne
data16
push
add
nop
adc
sti
adc
sub
loopne
jb
gs
or
mov
ja
xorb
adc
inc
sub
sbb
push
xchg
or
sub
or
repz
or
pushf
jne
adc
dec
popa
js
xor
mov
rcll
dec
or
lods
rcl
mov
inc
pusha
and
xchg
test
jo
out
call
or
scas
push
adc
cmp
clc
divl
test
daa
jg
frstor
push
scas
jns
leave
sbb
aad
or
cs
sbb
push
ret
cmp
add
mov
adc
loopne
cmp
dec
fs
pop
inc
cmp
addb
imul
dec
add
adc
scas
push
fldt
dec
fdivl
push
mov
arpl
or
call
cwtl
mov
and
ret
push
and
xchg
mov
fcmovnbe
and
and
pop
inc
stc
jmp
and
aam
jo
jns
and
xorl
or
pusha
sub
sbb
lret
in
push
rolb
and
jns
and
mov
in
rorb
maskmovq
testl
dec
inc
jg
faddp
and
stos
call
sbb
add
adc
aad
cmp
movsl
and
cld
jmp
nop
fisubrl
dec
add
xor
es
out
inc
cmp
lods
add
xchg
in
sub
pop
imul
movsl
xchg
mov
cmovne
hlt
leave
aas
inc
rolb
push
bound
mov
cmpsl
push
addr16
les
mov
mov
xorb
popa
or
aad
xchg
int3
mov
add
arpl
call
pushf
sahf
xor
adc
jp
cs
dec
divb
dec
cmpsb
loopne
pop
fsubs
mov
outsl
hlt
mov
mov
loope
sahf
mov
es
insb
mov
not
daa
mov
aas
or
lock
pop
rcrl
sbb
pop
cli
push
insb
pop
lods
dec
out
or
lret
sub
xor
lods
add
adc
add
fmul
rolb
inc
sub
lahf
fisubrl
adc
xor
hlt
or
int
aad
cwtl
nop
int3
sbb
fcompl
out
sbb
loopne
sbb
pop
clc
mov
push
jo
sub
xor
or
and
add
les
leave
test
jg
or
pop
fisttps
ja
fsubs
jno
in
push
test
imul
add
fsub
aam
or
ror
mov
mov
push
push
sub
stos
sarb
ret
sbb
add
lcall
add
addr16
push
loopne
popa
inc
inc
xchg
or
or
dec
ret
pusha
insl
pop
inc
or
orb
lock
ljmp
xchg
mov
adc
jne
scas
shrl
mov
pop
dec
sbb
fs
sub
ror
inc
or
mov
cmc
mov
mov
xor
jl
inc
xchg
jl
nop
repz
js
inc
lret
ds
push
sbbb
into
stc
mov
lret
pushf
or
ret
mov
mov
test
add
or
adc
mov
push
sahf
or
ret
mov
push
adc
sub
fwait
adc
cs
inc
ret
mov
push
sbb
adc
mov
jmp
mov
inc
mov
push
xchg
sbb
les
push
xorb
pop
shl
or
arpl
add
hlt
adc
cs
hlt
mov
mov
adc
mov
shlb
repz
pop
xchg
jo
and
lds
xor
pop
pop
and
sbb
add
xor
ret
add
xor
and
out
cmp
or
test
mov
decl
enter
ja
popl
dec
pop
rolb
sar
dec
sahf
adc
pmulhuw
sub
test
enter
lock
out
pop
pop
rcll
outsb
mov
sbb
dec
shlb
lods
mov
lcall
lock
dec
in
popa
shl
sbb
pop
in
pop
push
pop
dec
stos
pop
inc
std
add
add
or
call
shl
outsl
jns
inc
fstpl
in
lods
cmpsl
xor
test
rclb
roll
xchg
ror
mov
sub
sub
inc
mov
js
test
mov
sub
or
inc
inc
into
into
or
inc
mov
in
test
aam
push
add
in
add
and
dec
jmp
out
fadds
push
bound
lahf
xor
pop
test
mov
xlat
pop
inc
jp
js
aas
aad
mov
cmc
xor
or
push
jb
and
push
xor
ret
mov
and
shrl
decl
sbb
lret
dec
xchg
test
xchg
xchg
test
testl
mov
inc
push
inc
or
or
imul
fsubrl
aad
adc
push
lds
xchg
jne
rcl
imul
loope
fldt
call
sbb
repnz
adc
fistps
sub
fisubrl
outsl
pop
adc
pop
cwtl
sub
jb
rcll
rcl
pusha
test
sbb
or
mov
fmuls
popa
test
pop
ret
and
fwait
mov
out
jp
and
dec
sub
test
lret
push
clc
cs
test
jb
fnstsw
push
jo
inc
add
pop
push
jns
test
dec
pop
dec
and
dec
mov
or
push
rclb
xchg
lret
push
fcoms
push
jb
pop
pop
into
pop
gs
add
ficompl
cmp
pusha
enter
sbb
iret
add
add
inc
adc
or
inc
jp
adc
pop
dec
pop
push
xor
lcall
scas
mov
push
push
pop
pop
xchg
mov
or
push
xor
xchg
scas
or
mov
loope
mov
add
push
xor
cmpsl
add
les
fs
punpcklbw
in
add
push
pop
insb
cld
pop
in
fiaddl
or
mov
push
call
add
push
aas
and
and
out
sub
enter
and
in
jbe
or
adc
dec
inc
adc
inc
inc
mov
ja
pop
push
cmp
inc
orl
pop
xorb
shlb
popl
adc
bound
mov
repz
xor
testb
adc
or
pop
jnp
movsl
add
cmpsb
push
adc
ror
mov
inc
test
les
loopne
xchg
push
mov
dec
adc
lcall
pop
int3
lret
mov
cld
push
test
push
addr16
push
addl
jmp
dec
or
push
rol
jb
push
lods
loopne
mov
nop
xlat
push
adc
or
jg
push
mov
orb
sbbb
adc
sarl
push
xchg
push
push
cmpsl
outsl
add
imul
mov
pop
and
and
push
dec
mov
add
insb
or
bound
or
push
inc
sub
in
ret
cmp
add
ficoms
fisubs
test
lods
leave
enter
cli
and
xchg
leave
dec
popa
lds
stc
movsb
shr
add
loopne
xorb
mulb
pop
sub
pop
dec
add
dec
or
or
outsl
arpl
in
push
push
add
xchg
mov
sbb
adc
in
dec
inc
sbb
dec
push
clc
dec
stos
mov
sbb
push
cmp
jae
pop
loope
push
sbb
inc
aas
and
xchg
mov
jmp
or
testl
dec
in
lds
inc
mov
add
adc
add
stos
push
mov
pop
std
mov
mov
push
push
lea
enter
scas
or
enter
cmp
movsb
enter
enter
aaa
xor
cmpsb
enter
push
push
fistl
nop
sbb
out
dec
pop
test
aad
test
adc
mov
push
lock
xchg
push
cmp
sbb
jns
roll
in
mov
sbb
dec
mov
dec
xchg
or
ret
popf
cwtl
or
or
icebp
fs
lea
jns
add
cmp
sbb
dec
or
pop
call
sub
lds
cmp
push
pop
insl
add
xchg
or
mov
mov
cmp
pop
and
jo
sbb
sub
mov
pop
sub
mov
add
and
xor
into
hlt
ficomps
nop
ret
sub
out
xor
cmc
cmp
mov
sub
add
test
aaa
addr16
pop
dec
mov
xor
inc
sbb
xchg
jo
push
jecxz
fldt
pop
test
push
jb
scas
das
ret
lds
fists
insb
adc
xor
xlat
mov
inc
push
inc
and
dec
add
mov
pop
clc
fildll
in
push
imul
mov
pop
adc
in
xor
jns
push
outsl
sbb
adc
adc
loopne
jb
test
or
mov
scas
scas
add
adc
out
pop
test
shlb
xchg
add
lret
jne
fstps
test
clc
adc
adc
sub
mov
nop
aas
icebp
sbb
addl
mov
jp
cmc
sbb
ret
mov
movsb
test
pop
or
mov
xlat
testl
inc
ja
jbe
add
out
mov
push
mov
mov
mov
sbb
adc
repnz
sbb
mov
pop
in
or
int3
pop
and
add
push
aas
and
or
verw
out
mov
or
adc
mov
xchg
scas
cmp
test
push
push
sahf
mov
or
lods
bound
xchg
hlt
sub
cmp
call
fcomi
inc
adc
jg
lea
add
jne
sub
bound
cmpsl
push
mov
jle
addr16
mov
scas
mov
add
mov
adc
flds
fadds
xchg
add
mov
add
sti
sub
sbb
cmp
and
jae
cmp
or
cmp
sbb
add
pop
stc
cmp
xchg
and
sbb
xchg
rolb
testl
loopne
mov
out
cmp
shr
xchg
sub
pusha
iret
push
andb
mov
sbb
subb
xchg
shrb
shll
pop
stc
push
pop
dec
or
adc
fstpl
xchg
test
aaa
cmp
push
inc
mov
jnp
daa
pop
push
in
cld
and
dec
sti
lret
and
das
cmp
jle
mov
sub
pop
mov
push
add
push
pavgw
cmp
pop
mov
xor
and
stc
adc
pop
or
xlat
mov
adcl
cli
in
cltd
push
or
jne
mov
push
andb
mov
push
scas
push
cltd
add
daa
loope
adc
loope
mov
cmp
xchg
jo
pop
xor
pop
xchg
or
lcall
sbbl
roll
insb
jg
jge
inc
or
or
or
mov
movb
jnp
sbb
pop
sub
jle
gs
hlt
imul
pushf
fwait
push
ficomps
jp
mov
or
adc
and
pop
hlt
and
mov
testb
jecxz
aam
and
mov
adc
sbb
adc
adc
fists
daa
ja
mov
cmpb
or
dec
jns
sbb
jbe
mov
pop
addr16
inc
nop
or
xchg
inc
fdivl
xchg
out
jne
mov
test
xchg
fwait
jp
mov
add
and
sub
inc
pusha
aad
add
add
lock
mov
pop
mov
cmc
je
xchg
mov
es
gs
daa
iret
add
inc
xchg
fcomps
pusha
xchg
test
imul
out
mov
das
test
sbbb
sub
xchg
pusha
add
push
sub
cli
cmpsb
push
sahf
jle
mov
popa
fdivl
or
mov
fwait
push
push
addr16
push
mov
lds
inc
push
mov
les
int
sarb
aad
sbb
sub
inc
add
jmp
or
cmpb
out
loopne
loopne
adc
mov
dec
ret
clc
mov
fwait
lods
pop
dec
call
xor
mov
adc
movaps
mov
arpl
mov
aaa
xlat
pop
add
jmp
adc
sub
negl
andl
mov
inc
imul
xchg
push
push
push
pop
push
dec
cli
xchg
bound
add
js
inc
push
sub
jb
ja
out
loope
orl
push
mov
sbb
adc
adc
xor
and
mov
out
sub
sbb
sbb
imul
in
out
or
test
mov
mov
out
dec
pop
sbb
sbb
xchg
lock
pop
stc
mov
bound
pop
add
loope
and
pop
mov
div
je
in
mov
or
ljmp
xchg
pop
xchg
add
addr16
clc
pop
fwait
cmpl
lock
addl
test
arpl
popf
fbld
push
pop
push
jno
popa
adc
inc
push
cmpsl
add
inc
mov
icebp
add
add
jno
pop
mov
nop
sbb
cmpsl
jle
mov
jnp
mov
orb
adc
inc
dec
hlt
pop
mov
das
test
ret
push
mov
push
pop
dec
pcmpeqb
or
clc
stc
inc
jb
fcoml
xchg
inc
push
sub
fidivrs
nop
jbe
pop
or
xchg
imul
outsl
test
fildl
or
inc
idivl
and
cmpsl
popa
mov
mov
mov
dec
and
xorb
call
int3
cld
std
mov
jns
lods
fmull
xchg
adc
inc
outsb
notb
jno
pusha
mov
cmp
imul
scas
add
in
pinsrw
add
in
cmpsb
xor
sbb
push
out
xchg
pop
inc
push
fucom
pop
cmc
adc
outsb
add
mov
fcomps
int
mov
lret
dec
push
cmp
std
cmp
push
or
lcall
cmp
jnp
iret
dec
cmpl
pop
jns
mov
push
adc
cmp
dec
test
xchg
inc
add
ss
xor
les
lock
popa
lds
scas
outsb
shrl
movups
dec
daa
js
dec
or
push
test
aam
push
loop
add
sarb
or
or
test
add
push
fcomp
fstpt
mov
and
ret
and
and
fs
fnsave
nop
outsb
scas
push
adc
xor
fstpl
repz
cmc
aam
cmpsb
mov
imul
notl
mov
cmpsl
leave
imul
add
test
lock
mov
push
add
xchg
cmp
je
adc
jb
pop
fstpl
xchg
pop
push
push
sbb
xor
idivl
add
push
cmp
jbe
push
xchg
icebp
ds
jmp
cmp
pop
sbb
lret
aas
mov
lods
movb
sub
sbb
add
outsb
test
insb
dec
loope
mov
mov
pop
jne
pushf
mov
sbb
pop
insl
fiadds
jne
ja
fsubs
test
pop
ljmp
mov
ret
sarl
mov
or
jle
stos
ds
dec
jne
push
movsl
ret
cwtl
pop
cmp
lock
aam
ja
enter
outsb
lea
inc
adcl
outsl
adc
add
mov
add
push
push
sbb
add
lea
mov
xlat
and
push
xchg
les
cmp
cmp
cmp
mov
rolb
or
arpl
jp
pop
mov
gs
xchg
mov
lret
addl
jns
jne
xorb
pushf
add
or
sbb
and
pop
fisttpl
lods
xchg
ficompl
xchg
push
ss
inc
lahf
jae
lea
or
push
gs
xchg
pop
enter
mov
or
or
ss
stc
dec
or
add
jnp
pop
push
mov
add
mov
adc
sbb
pop
test
pop
add
call
push
clc
and
clc
pop
movsl
add
sub
mov
mov
jge
pop
mov
and
fst
push
fsubrl
cld
push
int3
es
out
and
out
repnz
test
inc
notb
dec
movups
sub
dec
push
enter
cmp
in
insb
cmp
out
add
and
mov
lretw
mov
xlat
jecxz
sub
xchg
pop
mov
movsl
push
add
js
adc
loopne
xchg
jl
sub
test
add
pop
les
dec
sbb
mov
lds
xor
repz
lret
cmp
mov
xchg
mov
push
gs
jg
xchg
push
sub
testb
sti
push
push
add
xor
repnz
xlat
lock
aas
and
or
mov
aaa
push
cltd
xchg
mov
ss
ja
add
inc
cmp
mov
adc
xchg
cwtl
sub
add
mov
push
test
sub
dec
push
movsb
nop
pop
push
test
adc
les
and
pushf
ret
xor
cmp
xchg
pop
dec
pop
loopne
daa
int3
mov
inc
xchg
fsubl
push
push
cmp
push
fildl
ret
andl
cmp
add
cmpsb
cmpsl
mov
push
sub
jmp
mov
and
ret
cwtl
sbb
or
inc
lcall
test
adc
inc
pop
adc
adc
push
mov
pop
adc
pop
adc
jmp
nop
xchg
pop
push
add
incl
dec
dec
pop
sbb
push
mov
mov
ror
mov
sub
ret
iret
orb
repnz
pusha
loop
xchg
inc
fs
inc
sbb
ret
mov
pop
inc
test
ret
inc
cwtl
insl
pop
sbb
lds
jns
pushl
or
sbb
mov
add
push
inc
ljmp
xchg
test
jl
push
mov
xor
pop
jmp
jl
mov
ficoms
dec
pop
mov
xor
test
fimuls
icebp
cs
dec
mov
and
dec
and
sub
loope
xor
and
aad
or
rol
and
adc
sub
and
mov
fldenv
in
fsubrp
xchg
add
in
adcl
pop
shl
xchg
call
or
lret
clc
mov
pop
or
or
sub
add
mov
incl
in
loope
jno
subl
sbb
pop
sbbl
sbb
sub
push
pusha
aaa
add
dec
movsb
adc
fiaddl
imul
adc
das
dec
sub
adc
ret
incl
test
xor
cmp
or
push
inc
xor
mov
aaa
xchg
mov
add
and
xchg
xor
jns
inc
jno
fwait
xor
push
push
xor
xchg
inc
lcall
dec
dec
enter
out
or
rolb
xor
push
jmp
mov
inc
sahf
outsb
sbb
jb
in
rep
loopne
xor
cs
movsb
jno
cmp
mov
push
dec
or
and
cmp
loop
les
xor
xor
dec
outsl
xchg
mov
cmp
xor
negl
xor
mov
xor
loopne
or
xor
mov
xor
xor
daa
add
xor
xor
nop
mov
divb
xor
sbb
inc
mov
xor
xor
xor
xor
insb
xchg
mov
jb
xor
add
sub
mov
dec
into
leave
push
adc
xchg
fidivrs
or
or
daa
add
lret
adc
inc
cltd
jecxz
inc
push
dec
scas
pop
mov
lea
pop
pop
dec
jle
icebp
xor
xlat
dec
push
stc
or
insl
or
xchg
inc
xor
jg
inc
dec
cmp
inc
mov
sbb
jle
lret
adc
cmpb
xchg
das
cwtl
dec
dec
or
sub
fidivrs
fwait
dec
inc
call
or
rorb
jle
inc
dec
daa
pushf
jl
mov
sbbl
jne
add
arpl
sbb
cmc
xchg
out
xchg
js
adc
sub
mov
add
lock
push
ret
add
sarb
adc
pop
mov
xchg
pop
sahf
fldt
jle
fs
in
push
sub
out
sub
adc
dec
jne
mov
cmpl
ret
xchg
pushf
push
in
addl
and
je
xchg
push
sub
adc
es
mov
das
ret
add
add
arpl
xchg
or
out
divb
mov
jae
cmp
push
mov
fucomip
inc
cmpsl
mov
add
sbb
dec
in
push
sarb
aas
ljmp
mov
xchg
push
mov
or
inc
or
sub
rclb
mov
inc
push
dec
insb
mov
adc
scas
lcall
sahf
xlat
hlt
push
pusha
mov
xor
sub
cmp
mov
dec
dec
mov
push
rorb
push
inc
jnp
fmull
cmp
out
insl
adc
dec
cs
mov
cmp
popf
add
lss
mov
adc
pop
aas
add
movb
lahf
push
out
shlb
xor
gs
pop
add
inc
xor
adc
jo
inc
adc
jecxz
stos
loopne
movsl
and
dec
add
mov
add
xchg
mov
out
dec
mov
and
fstpt
rclb
ret
add
jecxz
andb
orl
xor
cmp
and
lcall
and
cmp
or
inc
xor
or
inc
popf
fs
or
or
or
fs
jmp
or
sub
sbb
add
mov
outsb
xor
fstps
movsb
inc
dec
pop
mov
aam
inc
mov
inc
insb
fadds
xchg
outsl
add
add
lods
inc
mov
mov
jecxz
push
hlt
mov
mov
insb
rclb
shl
push
cld
inc
mov
or
inc
sub
mov
or
inc
fwait
stos
mov
cmp
nopl
movsb
mov
loop
enter
add
cmp
jb
xlat
push
lods
inc
add
rorl
inc
lcall
mov
aaa
mov
adcb
icebp
or
sub
notl
aad
gs
xor
fwait
jle
mov
pop
dec
scas
cmp
testb
mov
xchg
lods
mov
cwtl
push
scas
pop
jmp
xchg
mov
sbb
pop
dec
nop
mov
dec
mov
int3
dec
sbb
add
sbb
shlb
imul
popa
pop
push
icebp
rcrl
sbb
inc
or
sbb
jg
mov
mov
add
jns
lcall
mov
pop
mov
fidivl
in
inc
pop
adc
and
in
mov
and
nop
mov
add
cmp
xchg
and
int3
js
and
adc
out
pop
mov
aad
daa
add
cmp
outsl
inc
lcall
in
imul
xchg
add
stc
push
ljmp
mov
andl
dec
pop
sub
dec
xchg
pop
push
imul
rcll
outsb
pop
sub
es
or
dec
dec
jb
xorl
inc
lods
add
push
xor
js
xor
cs
xor
stos
inc
inc
or
and
fmull
add
and
or
push
or
add
sub
loopne
aaa
psubsb
push
xchg
cmp
inc
movsl
enter
scas
or
ljmp
or
aas
test
inc
nop
cmpsl
inc
xchg
inc
dec
add
aaa
int3
jb
inc
add
or
shll
adc
xchg
inc
fwait
adc
test
push
add
jae
inc
inc
aaa
and
cmpsl
mov
sbb
out
inc
inc
push
mov
pop
sub
sbb
dec
fists
enter
dec
addb
enter
in
in
dec
add
add
addb
xor
add
add
dec
push
lahf
leave
sbb
add
pcmpeqw
and
mov
fdivr
popa
and
mov
mov
mov
clc
sbb
inc
data16
in
mov
pop
jge
mov
adc
mov
mov
loope
adc
mov
pop
mov
mov
icebp
mov
pop
jl
mov
sbb
subb
repz
cmc
out
subl
sbb
nop
jae
push
pop
sbb
push
inc
jbe
fdiv
inc
push
or
xorl
inc
ja
imul
xchg
jo
fs
push
dec
mov
adc
rolb
push
pop
pop
xor
xor
dec
mov
scas
sub
int3
lods
sbb
dec
in
or
and
inc
adc
pop
xor
and
stc
adcb
dec
dec
testl
dec
mov
mov
inc
aad
jno
inc
dec
jo
adc
push
mov
sub
loop
int3
sbb
sbbl
cmp
sub
dec
mov
push
push
test
and
cmp
arpl
pop
dec
sub
mov
add
pop
add
sbb
add
in
mov
push
sti
and
inc
and
adc
sub
mov
pushl
out
push
cmp
lahf
das
stos
add
push
fs
pop
imul
jle
push
xchg
dec
sbbl
arpl
and
das
cmp
cmpsl
imul
dec
filds
lods
xorl
mov
nop
and
sbb
sti
pop
pop
xchg
pop
push
add
sbb
cmp
pop
enter
adc
cmp
lcall
add
or
mov
aas
sbb
add
nop
sbb
cltd
or
pop
adc
cltd
cmp
pop
lock
jle
adc
int3
and
adc
xchg
loopne
in
movsb
push
enter
xchg
rolb
aam
fs
or
or
adc
rorl
call
push
sub
xor
add
cs
insb
xchg
mov
test
test
in
or
sbb
sbb
sbb
rorl
cmp
mov
and
daa
push
insb
pop
out
out
and
int3
push
pusha
add
or
inc
loopne
cmp
pop
dec
les
and
aaa
lock
add
in
aam
insb
outsb
ss
shlb
push
push
pop
mov
mov
push
das
adc
mov
adc
lods
ret
xor
and
rclb
insl
adc
mov
inc
xchg
insl
shrb
and
adc
push
and
xor
fs
add
iret
in
movsb
adc
adc
pop
adc
pop
cmpsb
jne
mov
jae
or
mov
sub
mov
ret
pop
aad
aaa
prefetcht0
sub
lods
add
cmp
test
add
sbb
push
mov
shlb
mov
push
lods
decl
mov
mov
adc
cmp
movl
mov
popa
mov
shll
nop
rolb
repnz
js
push
adc
add
cld
sti
mov
ret
add
jmp
mov
test
loop
nop
adc
mov
in
pop
cmp
push
pop
les
cmp
aam
imul
push
push
cld
push
int3
adc
pop
inc
testl
ss
popa
sub
push
pop
aam
ret
insl
daa
dec
out
inc
popf
jmp
mov
aaa
sub
push
xor
dec
add
daa
pop
fwait
insl
insl
and
adc
xchg
mov
push
push
aaa
and
and
mov
and
fwait
xchg
and
and
hlt
adc
inc
outsb
test
and
pop
dec
jne
add
out
cmpb
fwait
arpl
int
sbbb
or
ja
mov
add
add
push
test
roll
mov
adc
stos
shll
sbb
call
bnd
call
inc
iret
sti
dec
jns
test
or
fmull
pop
pop
dec
push
lods
or
mov
in
dec
mov
xor
adc
aam
xchg
pop
test
mov
lds
mov
pop
lds
pop
addb
add
aad
aas
fs
enter
daa
jl
jmp
adc
pop
jns
pop
sbb
je
dec
mov
cmp
cmp
pop
aam
mov
movsl
cmp
or
adc
adc
fwait
mov
add
inc
jb
add
adc
xor
sub
add
add
add
and
sbb
push
inc
jb
in
add
add
mov
jns
andl
addb
xchg
and
jb
cmp
and
and
rolb
das
sub
add
test
and
rorb
aad
sbb
sub
sub
and
add
add
das
mov
in
scas
das
add
dec
push
and
add
xor
xor
add
in
push
pop
xor
sbb
xor
push
ss
stos
in
aaa
cmp
cmp
dec
cs
and
cltd
cmp
xor
xchg
cmp
xor
and
inc
and
and
inc
inc
and
inc
orb
inc
dec
int3
pop
jmp
and
adc
xor
mov
mov
mov
mov
push
mov
mov
lret
das
aas
mov
fimuls
sub
jl
mov
xor
andl
mov
int
pop
mov
mov
divl
xor
addr16
and
out
sbb
sbb
and
or
lods
arpl
mov
xchg
add
out
sbb
les
mov
or
les
or
in
mov
and
or
in
add
sub
push
daa
pop
dec
nop
add
add
xchg
addl
cs
sbb
xorb
and
adc
add
popf
dec
jns
jo
cmp
cmpsl
sub
xor
insl
or
cltd
add
mov
loopne
sbb
mov
popa
movsl
aaa
cmpsl
cmp
or
cld
push
shlb
or
or
fimuls
jmp
or
popa
and
cmp
pop
repnz
cmp
fisubrs
test
and
ds
pop
xor
cmpb
aad
mov
mov
or
dec
add
mov
lock
xchg
or
in
push
ret
nop
aam
push
jne
into
fs
lock
sub
push
movsl
dec
ret
cmc
dec
adc
sbb
xchg
js
outsl
int3
sub
ret
and
pop
push
and
and
nop
pushf
push
out
nop
ret
xor
add
or
out
xchg
pop
mov
dec
jmp
in
pusha
or
gs
xor
pop
and
dec
clc
xchg
jmp
mov
scas
idivb
cli
jne
cwtl
fcoml
adc
js
out
rcll
popa
push
mov
fcoms
jmp
push
arpl
push
pop
fs
or
add
dec
jo
add
sub
mov
push
push
cmp
sub
adc
or
clc
and
pop
test
sarl
mov
jno
push
frndint
in
dec
sub
pop
adc
jmp
mov
lret
mov
sbb
pop
pop
test
push
cmp
xchg
shrb
pop
sub
ret
add
test
cmp
clc
das
pop
cmp
push
insb
mov
pop
adcb
and
ret
dec
adc
movsl
bound
and
mov
movsb
iret
push
push
leave
mov
outsb
mov
adc
leave
ret
lcall
in
cwtl
mov
ja
jne
pop
jmp
insl
dec
mov
sub
enter
cli
pop
movzwl
jnp
iret
inc
and
or
xor
pushf
les
addl
fwait
popf
pop
addb
incb
cmpsb
lock
pop
lods
fbstp
icebp
add
cmp
jg
add
xor
sbb
inc
pusha
or
inc
xchg
fcmove
xchg
mov
pop
lea
rorb
pop
mov
hlt
push
mov
add
cmpsb
int
inc
pcmpgtd
sbb
cmp
jns
jo
sbb
ret
pop
mov
or
stos
loop
add
sub
fwait
push
jne
mov
sbb
pusha
xchg
sbb
mov
xlat
dec
sbb
or
cmpsl
and
and
inc
xor
and
dec
outsb
mov
adc
cmovs
cs
cmp
xchg
mov
ret
outsl
movsl
cs
movb
lods
sub
seto
push
push
jmp
movlps
lret
mov
insb
in
lods
mov
pushl
sar
and
pop
das
cltd
cmp
shld
loope
out
sub
or
or
or
jb
jbe
mov
scas
dec
loope
xchg
lds
push
inc
add
in
dec
mov
mov
testl
adc
mov
pop
xchg
sti
test
adc
mov
movsl
push
test
daa
es
loop
mov
es
or
loope
sub
int3
insl
push
leave
dec
sub
mov
dec
dec
int3
sbb
in
dec
fstpl
test
jo
push
call
pusha
add
call
addl
sti
sbb
mov
pop
push
adc
fsubl
call
and
add
jo
sbb
fs
cltd
in
or
sbb
mov
or
add
pusha
push
js
push
gs
jg
pushf
cli
or
cmp
xchg
pusha
movsl
dec
lcall
inc
imul
test
test
jp
or
push
push
pop
sub
movsb
add
int3
pop
sbb
inc
add
ficompl
and
pop
adc
mov
jl
and
stos
xor
mov
fwait
mov
mov
ret
es
jae
cli
add
frstor
cwtl
aaa
jnp
pop
mov
mov
add
psraw
and
xor
mov
xchg
and
mov
jg
outsl
ja
idivl
mov
xor
stos
add
testl
addb
sahf
and
sbb
into
and
mov
or
mov
pop
sub
addr16
or
pop
das
xor
pop
mov
cmp
xchg
bswap
shrb
push
push
adc
sub
testb
dec
and
dec
dec
out
cmp
ja
sbb
adc
pop
shl
jbe
xorb
mov
popa
and
iret
push
xchg
inc
loope
push
xchg
push
mov
pop
push
cld
mov
and
xchg
das
les
mov
das
gs
adc
add
cmp
fnsave
and
and
pop
rolb
jge
sbb
cmp
add
or
add
add
cmpl
lahf
mov
and
clc
lock
insb
inc
mov
cmp
xor
xchg
mov
sti
sub
hlt
adc
pusha
or
call
cmp
jg
dec
mov
mov
loope
loope
out
or
das
xorb
pusha
add
pop
add
fcomps
ret
je
add
jns
jns
mov
xchg
hlt
orb
xor
divb
and
cld
jl
movsb
leave
cld
icebp
lea
js
or
jae
cmpsb
jns
mov
mov
add
or
inc
jae
icebp
out
incb
mov
mov
and
push
pop
jmp
mov
movsb
xorb
push
add
lret
dec
nop
sub
in
jns
mov
aad
xor
xlat
sbb
enter
hlt
inc
inc
inc
inc
jl
sbb
jg
sub
pushf
xor
paddw
or
loope
pop
push
les
adc
add
mov
pop
jo
dec
incb
adc
and
roll
sbb
or
jmp
cmp
je
outsb
cld
mov
sub
cld
lock
das
mov
sub
fsubp
add
adc
sbb
daa
jmp
inc
ror
out
add
push
daa
cmpsl
addb
push
in
push
jns
mov
pop
jo
cmpsb
je
xchg
nop
sub
lea
or
inc
subl
or
orl
je
addr16
xor
mov
sbb
sbb
xchg
mov
inc
loop
sbb
lret
cltd
dec
jl
add
movl
add
jno
or
mov
add
jbe
push
xor
addl
movd
clc
fbstp
push
in
lahf
loopne
int
repz
data16
mov
push
mov
js
cmp
jle
daa
sub
pop
notl
pop
andb
sub
xchg
je
xor
pop
fmul
sub
imul
adc
push
adcl
inc
jae
in
cmp
fst
add
pop
fs
test
xchg
add
scas
pusha
cmp
mov
sub
loopne
call
cld
inc
sbb
add
sti
add
ret
mov
add
clc
pop
gs
or
mov
adc
dec
mov
xor
ficoml
sub
sub
jae
bound
dec
xor
loopne
sbb
mov
ret
sub
inc
dec
div
jne
movb
wbinvd
dec
mov
jmp
dec
je
outsb
ret
movsl
push
and
xor
jae
nop
dec
pop
fdivrs
xchg
movsb
or
jno
call
test
shrl
jno
mov
imul
mov
test
push
push
pop
push
dec
imul
xlat
pop
or
movsb
stos
daa
dec
in
aad
insb
test
movl
sarb
mov
pop
xor
cmpsb
movzwl
rcrl
cmp
dec
addr16
mov
or
jecxz
dec
lods
repz
test
add
cmpb
mov
or
sbb
and
dec
push
sbb
xor
jl
ljmp
sbb
adc
je
shlb
push
push
rclb
or
mov
cld
popa
pop
mov
and
daa
iret
or
or
add
andb
jne
pop
sub
cld
sub
sub
stos
xor
decl
inc
fadds
add
int3
inc
or
cmc
inc
pop
and
sbb
and
andl
das
flds
push
sbb
and
or
xor
rclb
pushf
mov
and
xor
lcall
add
jmp
adc
sbb
ficomps
sub
in
and
rorl
icebp
cmp
inc
pop
and
jmp
cwtl
or
push
out
adc
int
out
push
movb
push
lahf
or
cs
ss
jbe
shlb
and
test
fcoml
ds
mov
mov
xor
and
or
sub
jmp
repnz
fidivs
inc
push
jp
xor
mov
push
je
lea
jne
pop
and
test
mov
out
inc
adc
dec
mov
jns
push
and
shlb
ja
or
dec
push
or
cmp
xchg
aas
cmp
fsubrs
js
add
mov
cs
ds
daa
jno
adc
xchg
scas
jno
aam
cmpsb
ja
push
dec
and
push
lock
xchg
or
or
adc
int
imul
add
sub
das
inc
sbb
psllw
add
je
add
jmp
cmp
dec
mov
pop
mov
jg
sbb
sbb
push
imul
or
rolb
or
rcll
andb
push
add
stos
andb
inc
cmp
aam
lea
ds
mov
push
mov
icebp
xchg
pop
aas
dec
aam
xchg
pusha
divl
jbe
push
gs
mov
cmp
pushf
int
sbb
dec
push
ljmp
imul
dec
inc
push
xchg
pushf
adc
mov
mov
push
jmp
add
jl
or
ret
nop
dec
sbb
jne
xchg
loope
add
push
sahf
inc
sub
mov
les
push
scas
jecxz
inc
test
cltd
popa
adc
or
xchg
mov
icebp
add
add
addr16
pop
mov
inc
lods
mov
enter
jl
out
psubq
inc
mov
sbb
fmul
mov
push
inc
hlt
and
nop
push
in
test
cmp
cmc
sbb
push
cmpsb
test
pop
ficoms
sub
leave
out
hlt
rolb
inc
fs
mov
int3
cmp
fs
dec
movsb
inc
cld
fimull
xchg
ss
cmc
je
jp
sub
fs
dec
call
fists
push
test
add
jne,pt
orl
std
adc
xchg
enter
mov
jmp
insl
mov
dec
nop
dec
test
aaa
lods
mov
xor
lahf
bound
add
pop
xchg
cwtl
je
xor
sub
sbb
jmp
push
test
ds
inc
sub
cld
dec
or
dec
and
test
mov
hlt
mov
dec
mov
jmp
loopne
xchg
pop
sub
mov
js
or
adc
sbb
xchg
out
mov
mov
insb
mov
jb,pn
sub
cmp
push
mov
mov
cmpsb
adc
cmp
fistpl
mov
ljmp
scas
and
mov
loope
fisttps
mov
cmpb
mov
cmpsl
clc
jbe
push
xor
jmp
or
or
or
or
push
imull
nop
nop
jle
addl
fstl
fimull
mull
push
jl
mov
ret
xchg
test
or
inc
or
jne
gs
xchg
pop
sbb
adc
push
lea
fadds
jg
lea
loope
repz
mov
push
add
push
call
mov
test
dec
adc
cmp
sbb
lea
test
loop
mov
adcb
je
sbb
loope
les
push
les
sti
add
les
inc
adcb
ja
rorb
aaa
ljmp
xchg
rcl
out
jge
ret
mov
fdivrs
xor
adc
pop
xchg
mov
pop
mov
leave
leave
mov
iret
daa
aaa
push
arpl
xchg
mov
mov
or
jge
dec
add
fcompl
mov
or
bound
ds
dec
push
into
sub
sub
sbb
mov
cltd
inc
add
mov
xchg
call
insl
fwait
adc
dec
jg
mov
lock
or
out
jl
push
add
leave
or
fstpt
dec
subl
sub
jle
cmp
cmpsl
cmp
js
scas
jge
mov
fdivl
xchg
aas
in
xchg
pop
aaa
hlt
xor
repz
or
cmp
jb
ljmp
xor
pop
or
mov
sub
insb
fisttps
cmp
jmp
mov
mov
or
enter
xor
cli
mov
push
addr16
mov
add
pop
mov
sbbb
push
pusha
les
cwtl
scas
and
cwtl
and
fisttps
iret
cmp
adc
test
sub
aaa
hlt
adc
jne
or
and
xor
cwtl
xchg
or
dec
xchg
xchg
push
aas
mov
and
shlb
xchg
nop
or
add
xchg
movsl
mov
cs
dec
ret
sub
mov
movsl
mov
adc
cmp
add
popf
addr16
andl
ds
jmp
ss
or
sarb
sbb
addr16
dec
enter
mov
mov
sbb
sub
je
dec
jne
mov
adc
mov
jns
aas
add
inc
or
pusha
pop
xor
pop
bsr
pop
pusha
and
es
mov
jecxz
sub
pop
jge
int3
pop
fucomip
or
jmp
mov
mov
xor
xchg
inc
push
jb
rorl
fisttps
and
add
inc
dec
jp
cli
hlt
fucomp
jo
imul
cli
sbb
js
push
jns
dec
testl
fwait
add
or
or
add
or
out
inc
jne
or
xchg
ret
std
cs
sbb
cmp
clc
sub
adc
dec
or
sub
jne
rclb
or
outsl
iret
inc
das
adc
test
sbbl
pop
cmpsb
or
mov
adc
inc
cmpb
andb
lret
adc
loopne
in
mov
dec
mov
enter
jns
or
cmc
inc
outsb
xor
in
xchg
mov
fistpll
sbbl
push
lcall
je
cmpsl
inc
gs
xorl
imul
setg
inc
loope
inc
fidivs
addl
and
jae
lret
out
sub
into
jnp
rcll
jo
jns
sbb
or
mov
push
mov
push
cmpsl
cmpsl
loope
out
cltd
dec
arpl
outsb
push
outsb
pusha
dec
jecxz
mov
xchg
pop
jno
out
jns
add
mov
stos
push
jp
out
lahf
dec
fcmovnb
and
inc
ss
adc
inc
out
xor
pushl
scas
dec
dec
push
mov
inc
gs
ret
or
cmp
outsl
out
xor
mov
imul
jg
test
or
xchg
push
mov
push
jmp
and
jne
mov
push
add
fistpll
loop
mov
ljmp
sbb
shll
xchg
dec
das
sbb
push
sbb
jno
adc
sbb
lahf
push
sti
push
sbb
pop
inc
mov
push
mov
insb
push
ds
xlat
outsl
aam
inc
or
inc
lret
jae
push
cmp
xlat
pop
dec
xor
pop
pop
js
adc
outsl
fwait
pop
push
addl
push
arpl
push
pop
imul
jo
sbb
mov
insb
mov
inc
push
push
add
jb
scas
cmp
clc
adc
push
popa
shlb
mov
sub
popa
daa
push
mov
aam
xchg
jne
pop
sub
push
cmpsl
push
mov
call
push
lahf
gs
mov
dec
imul
sub
inc
shr
pop
daa
and
ret
insb
ljmp
lea
scas
push
add
cmpsl
out
push
shll
fidivs
gs
fdivs
mov
jg
ja
dec
lea
insl
mov
pop
pop
andl
jnp
push
test
dec
scas
imul
or
inc
add
lahf
test
pop
push
push
mov
sub
pusha
mov
push
adc
dec
imul
mov
outsl
daa
inc
lds
ret
aaa
dec
push
or
push
addr16
adc
sbb
adcb
or
sbb
inc
or
jp
or
mov
lret
pop
jo
ret
add
push
fisttps
xor
adc
add
rolb
pop
dec
mov
or
mov
outsb
push
dec
mov
add
or
pusha
call
inc
inc
add
push
pop
dec
fiaddl
stos
cmp
push
push
outsl
mov
xor
sub
push
pop
ret
shlb
inc
mov
rorl
jne
test
test
sub
imul
pop
out
mov
and
addl
mov
sbb
popa
sbb
lahf
cmpsb
inc
lret
jo
mov
addr16
ja
sbb
idivl
xor
mov
jns
push
or
ljmp
add
xchg
sub
sbb
fisubs
mov
sbb
xchg
insl
pop
cmpsl
jno
adc
mov
pmullw
xorb
xchg
aas
pop
pop
adc
or
loop
inc
or
add
imul
rclb
out
push
shrl
inc
ffreep
jno
mov
insl
pop
xorb
push
jg
insb
pusha
pop
pop
inc
daa
pushl
fsub
outsl
filds
push
xchg
xor
xchg
je
push
loopne
add
push
aas
lahf
xlat
or
lods
cwtl
xchg
inc
into
lock
nop
je
jns
add
pop
filds
or
mov
push
push
push
stos
adc
or
imul
mov
pop
and
push
cmp
push
jns
js
or
sub
fstl
inc
addr16
inc
mov
add
outsl
mov
cmpsl
and
pop
jg
decb
mov
js
jl
cmpb
push
and
adcb
mov
mov
shlb
inc
cwtl
shr
inc
iret
pushf
push
add
mov
jmp
jp
jns
adc
mov
and
and
int3
out
orl
dec
aaa
stc
inc
adc
mov
add
and
test
popa
wbinvd
push
lcall
fnstenv
aaa
cmpb
mov
rcr
add
popf
and
cmc
adc
dec
jb
movb
insb
sub
ret
add
ja
mov
and
or
fldcw
arpl
mov
xor
jp
sub
push
pop
jp
add
xchg
sahf
push
mov
push
ss
addl
jp
std
cmp
subl
pop
sti
nop
loopne
rcll
add
or
aaa
bound
mov
and
daa
mov
adc
add
xor
push
pop
xor
add
aam
loope
jo
adc
in
and
adc
xor
adc
push
pop
add
ja
test
push
aaa
aaa
xchg
cmp
adc
add
or
in
sbbb
mull
pop
dec
add
sbb
mov
aad
dec
add
repnz
jb
jae
cld
add
shll
es
pop
ret
aam
cs
adc
aaa
in
lcall
adc
sub
and
scas
xchg
stos
and
mov
cmpsb
xchg
sub
xor
sub
push
inc
push
sub
push
das
std
incl
sbb
xor
inc
cs
test
inc
push
xor
add
or
mov
outsl
movsl
jp
enter
jnp
push
jbe
enter
mov
enter
push
jp
enter
out
jge
enter
dec
jo
mov
jecxz
jle
or
and
sahf
jmp
and
and
cmpsl
loope
fs
dec
adc
jnp
loop
and
addr16
repz
test
loop
idiv
push
rorb
cmpsl
sub
dec
mov
inc
xchg
clc
add
sub
mov
push
insb
outsl
lfs
cmp
loopne
adc
push
ret
add
dec
adc
mov
and
ret
movsb
mov
repnz
adc
andb
and
insl
into
popa
mov
aad
xchg
push
loope
test
jb
push
lock
xchg
add
jnp
xor
call
push
inc
mov
or
mov
add
xchg
pop
test
sub
and
inc
pushf
lcall
add
xor
in
xor
mov
sbb
aam
or
and
sbb
xchg
add
test
or
cwtl
pop
xchg
adc
mov
int3
jns
lahf
and
push
mov
stos
sbb
out
call
lea
mov
sbb
mov
dec
in
dec
dec
mov
push
sbb
cltd
cmp
jg
hlt
xchg
mov
and
outsl
aaa
je
idivb
pop
jb
inc
cmp
mov
dec
iret
rorb
adc
stc
jne
sub
or
aam
or
faddl
or
fstp
clc
lea
mov
push
add
dec
xor
push
jnp
loop
bnd
xchg
cmpb
ss
out
aam
or
push
jge
cli
sub
and
push
mov
jno
sub
lret
sbb
fadds
pop
popf
aam
mov
xor
sbbb
push
pop
sarb
mov
adcb
cmpsl
cmp
test
and
popa
movsb
divl
je
mov
cwtl
inc
inc
jmp
inc
push
mov
loopne
decl
and
in
adc
sub
add
pop
jg
lods
inc
mov
faddp
pop
sub
pop
jbe
push
addb
daa
sbb
popa
movsb
mov
jle
popa
jne
pop
jmp
xor
daa
adc
and
cld
loope
sub
sub
aas
call
pop
test
testb
jne
mov
jle
push
imul
inc
insl
mov
insb
das
adc
jmp
aaa
icebp
and
or
mov
adc
mov
cmpb
adc
je
or
add
cwtl
xor
sub
out
mov
mov
fsubs
mov
or
sahf
mov
and
inc
insl
fs
jbe
mov
mov
dec
dec
mov
out
cmc
fldenv
adc
push
push
lret
cmc
insb
xchg
insl
sbb
dec
or
aam
leave
and
out
adc
mov
push
cmp
mov
pop
add
dec
lcall
fwait
test
pop
rcrb
jle
sub
pop
or
mov
adc
fsubr
lcall
and
push
outsb
cmc
mov
nop
aad
or
ds
sarb
ja
or
xchg
xchg
rol
ret
add
mov
lcall
adc
sarb
inc
stos
in
fidivl
lods
mov
cmp
sbb
mov
sub
dec
test
rcrb
and
mov
jne
pop
xchg
pop
outsl
call
add
inc
cmpsl
scas
fldt
sub
sbbb
shll
sbb
jg
sbb
push
imul
insb
mov
cs
xorl
and
out
mov
sbb
outsb
mov
jo
movsl
mov
popa
jmp
cmpsl
rcl
and
push
outsb
fsubrs
sbb
test
out
pop
and
imul
push
mov
xor
xchg
push
arpl
popa
das
inc
mov
push
xor
xor
and
jl
push
pushf
xchg
hlt
inc
cmp
jle
jbe
sbb
je
fs
enter
sub
xchg
and
iret
xor
jmp
adc
aas
in
mov
adc
testl
frstor
add
inc
test
or
imul
aam
pop
mov
loop
int3
or
cli
inc
dec
or
cmc
loop
cltd
push
inc
mov
xchg
xor
adc
movsw
aad
loop
jecxz
psadbw
imul
xor
or
mov
or
or
test
mov
add
cmpsl
mov
push
lcall
sub
aaa
sarb
jo
ret
cmp
mov
push
popa
sbb
xchg
inc
dec
pushf
insl
dec
enter
lea
pusha
inc
out
jo
mov
xlat
push
push
cmpsl
rorb
arpl
repz
cwtl
mov
push
and
lar
cltd
pushf
and
push
push
and
lea
fnstenv
xor
xchg
add
and
sbb
sbb
adc
adc
sbbl
cmpsl
pop
shll
and
jmp
bound
mov
mov
pusha
cmp
test
push
adc
pusha
adc
sbb
sbb
pop
setne
adc
popa
add
pop
in
orb
daa
je
imul
je
sbb
push
jle
js
dec
je
dec
or
ret
mov
dec
inc
add
xor
pop
push
inc
or
xchg
sbb
adc
jle
cwtl
repnz
sub
lret
cwtl
dec
push
movsl
daa
mov
insb
cld
xchg
xor
outsl
pop
dec
push
test
fmuls
sub
jg
or
dec
pop
test
xchg
dec
cmpl
fs
mov
aad
jg
mov
mov
bound
in
into
arpl
adcl
dec
clc
jmp
mov
inc
dec
movzwl
dec
adc
push
in
ds
and
or
sbb
xchg
test
cmp
or
jns
xlat
pushf
mov
xchg
push
lea
xlat
rolb
mov
sbb
shlb
test
mov
push
push
shlb
popa
add
sub
cmp
cmp
and
add
test
inc
fbld
dec
popl
daa
mov
inc
mov
mov
rorb
dec
add
fisttpll
daa
push
mov
in
push
je
mov
add
sub
out
repnz
or
xchg
icebp
xchg
pop
add
loop
sbb
rorb
nop
jns
cld
add
clc
lret
adc
subb
jl
inc
pusha
push
js
nop
push
loope
or
inc
mov
add
imul
mov
and
insl
dec
dec
pop
sub
xorb
cmp
and
or
add
or
sub
bound
lahf
pop
pop
in
jle
nop
dec
pop
and
inc
adc
or
ret
int
cmp
loopne
mov
or
mov
lahf
mov
pop
or
mov
push
lahf
mov
xchg
jmp
fists
inc
or
add
mov
adc
insb
cmp
sbb
call
inc
push
jle
and
mov
push
lods
dec
sub
lahf
xor
fiadds
movb
mull
or
insb
cmp
loopne
mov
mov
das
insb
stos
subl
or
mov
adc
lods
cmpsl
sbb
sbb
and
aaa
xor
push
not
dec
and
jae
and
dec
xchg
lcall
inc
dec
rorb
jnp
adc
inc
dec
aam
or
and
sub
aam
or
and
mov
xor
inc
inc
pop
imul
fs
mov
insl
cmp
mov
add
push
int3
lar
shrb
in
mov
push
add
cwtl
mov
mov
scas
icebp
loopne
fiadds
adc
lds
xchg
sarl
xchg
push
pop
out
inc
xchg
imul
aas
add
imul
pop
mov
or
sub
or
fisttpl
adc
leave
jne
jns
sbb
fs
add
movb
jae
mov
iret
mov
aaa
das
and
mov
cltd
xchg
fwait
push
and
out
pop
sbb
mov
mov
add
jns
movsl
push
push
or
and
lods
add
pop
adc
mov
mov
pop
xchg
scas
sub
lret
xchg
insb
or
popl
adc
or
mov
add
subb
or
add
dec
inc
add
jecxz
add
pop
sti
femms
ret
push
cmp
aaa
pushl
xor
sbb
sbbl
and
je
adc
cmp
cmp
bnd
nop
cmp
push
ret
lods
cmpsl
or
inc
add
xchg
mov
std
add
or
mov
enter
pushf
push
sbb
sti
push
push
fwait
das
inc
push
and
andl
dec
aaa
and
pushf
xor
ret
int3
push
call
cmp
sbb
mov
or
cmp
or
adc
push
pop
adc
adc
pop
pop
xor
pop
push
xchg
fs
push
jnp
mov
mov
fwait
mov
lea
sbb
test
adc
stos
push
fadds
and
mov
adc
jne
or
dec
das
xchg
and
or
mov
xor
mov
rcrl
sub
popa
add
pop
jno
add
pop
clc
mov
xchg
pop
pop
sbb
mov
and
hlt
inc
lods
insb
adcl
mov
pushf
dec
cli
enter
or
aaa
shll
ret
mov
in
push
sbb
xchg
mov
add
and
push
js
test
xchg
sahf
push
mov
das
adc
sub
lcall
mov
cld
push
pusha
mov
push
add
adc
hlt
pop
ret
jnp
sahf
mov
nop
mov
adc
sahf
mov
loopne
jp
test
add
insb
add
lea
insb
xor
arpl
and
mov
addr16
push
inc
mov
fmuls
pop
jbe
pushf
or
push
add
jecxz
popw
fsubrl
call
push
ucomiss
mov
jl
sbb
and
movsl
jg
js
and
mov
mov
mov
xor
add
jl
adc
and
pop
pop
and
arpl
popa
jno
push
outsb
fists
ret
mov
daa
cmp
insb
rorb
and
pop
lods
movsb
dec
jbe
imul
out
mov
inc
fistpl
js
cmpsb
je
jge
mov
in
mov
ss
inc
or
jl
out
nop
add
add
dec
popa
push
lock
pop
mov
dec
mov
inc
jo
xchg
sub
iret
push
fcoms
mov
cmpsl
jge
mov
push
orl
mov
shl
pop
aaa
sti
shrb
add
adcb
mov
das
pop
stos
fsubrl
push
sub
mov
jae
das
cld
inc
inc
dec
pushf
mov
in
mov
dec
mov
or
jp
add
push
sbb
hlt
jmp
add
insb
loopne
mov
pop
test
pop
test
mov
scas
add
inc
pop
dec
or
xchg
sbb
loop
or
rorb
addl
mov
mov
cmp
adc
in
xor
jno
movsl
pop
add
sub
jl
inc
cmp
jb
movsb
repnz
lcall
cmp
add
insb
stos
jo
rorl
adc
aam
and
or
adc
imul
or
mov
sbb
jo
inc
or
mov
repz
or
add
inc
sbb
xor
add
int
dec
aad
mov
push
shrb
loop
lcall
adc
inc
sarb
pusha
mov
lret
fistpll
push
pop
dec
dec
dec
dec
test
dec
push
andl
inc
mov
and
rcr
and
imul
push
pop
mov
push
jp
inc
dec
repz
cmp
lock
pusha
dec
testl
es
pusha
mov
sbb
xchg
add
or
test
cmp
mov
stos
imul
imul
sub
inc
cmpsl
imul
xor
push
dec
cs
je
test
das
sub
inc
or
push
pop
jl
add
lds
pop
inc
cmp
std
in
and
push
pop
fsubrl
push
push
dec
pop
nop
addr16
jge
xor
dec
sub
outsl
cmpsl
into
fwait
or
arpl
sub
pop
fdivs
aaa
mov
pop
xchg
pop
cmp
divb
sti
cmp
sahf
rclb
pop
mov
dec
popa
jbe
jo
mov
xlat
shrb
adc
shll
enter
ret
jns
imul
mov
sti
stos
add
inc
xchg
jg
stos
pop
push
push
add
jg
mov
jb
jns
lds
movb
mov
iret
repz
adc
xor
mov
lcall
shrb
adc
test
ss
mov
dec
mov
push
test
xor
insl
pop
pop
sarb
aam
pop
cmp
dec
or
sub
mov
sub
pop
scas
sbb
insl
lcall
lods
fs
divb
sbb
data16
fs
mov
fs
pop
jp
in
fs
in
scas
cs
jp
fs
fs
mov
dec
insb
fs
sar
push
xchg
xchg
pop
in
mov
jne
push
mov
xchg
imul
stos
xchg
popa
movsb
add
orl
or
jl
movsb
and
add
loope
in
shlb
xor
push
push
sbb
je
push
mov
or
xchg
jne
notb
scas
add
or
or
or
addl
lahf
sbb
fimull
in
adc
aam
int3
add
xor
cltd
push
sub
lahf
nop
dec
sbb
adc
hlt
out
and
mov
je
dec
leave
xor
js
mov
imul
sbb
or
lret
ret
xchg
and
in
fwait
dec
push
ja
shl
dec
mov
jo
jo
mov
mov
cmp
jp
adc
cwtl
cvtps2pi
xchg
adc
daa
sub
dec
dec
dec
dec
dec
inc
lods
or
jns
test
adc
mov
cmpl
mov
fwait
mov
dec
rol
roll
jb
mov
enter
cmpsl
dec
dec
rcl
adc
dec
pop
dec
icebp
jmp
fcoms
pop
push
loope
sahf
inc
loopne
sub
add
cmp
push
jae
mov
fwait
add
subl
add
rcr
adc
dec
dec
or
loopne
insl
fadds
adc
push
imul
arpl
push
cmp
bound
or
outsl
adc
loopne
int3
testl
aaa
cmpb
and
push
ret
popa
or
and
sbb
inc
add
and
adc
lret
or
add
addb
sub
mov
add
lea
pushf
inc
stos
and
notb
les
movsl
les
pop
es
xchg
test
mov
sbb
dec
pop
das
dec
adc
cmp
adc
ret
adc
jmp
adc
inc
cmp
je
adc
rol
or
or
cmp
or
scas
sub
pop
fbld
sub
outsb
bound
sbb
pop
adcl
nop
xor
or
lcall
or
mov
dec
inc
mov
popa
ret
push
dec
ljmp
lock
mov
outsl
add
imul
jge
call
aas
shrb
push
mov
adcb
aad
mov
lret
sahf
clc
mov
pop
adc
sub
sbb
out
sbb
xor
movb
mov
fidivs
sub
aam
cmp
cmp
je
or
fwait
daa
push
adc
lcall
clc
addr16
sub
sub
aaa
sub
mov
sti
add
pop
xor
cmp
and
adc
fsubs
add
inc
inc
fwait
pop
enter
adc
rcrb
adc
adc
movb
dec
pop
adc
pop
loop
cmpsb
push
addr16
out
arpl
or
or
aaa
and
adc
push
xchg
mov
xchg
enter
jnp
mov
inc
push
jo
and
inc
pusha
pop
fs
jne
add
inc
push
push
popf
popa
repnz
inc
imul
adc
push
xor
movb
adc
push
leave
add
adc
or
shlb
xchg
shl
or
jle
fmull
push
stos
xchg
daa
loop
add
addr16
mov
or
ret
mov
mov
pushf
sub
testb
arpl
sub
push
mov
jmp
mov
mov
mov
popa
push
push
ficoms
aas
std
loope
mov
push
inc
loopne
ret
or
and
push
ss
ljmp
mov
pusha
jno
mov
neg
sbb
pop
xchg
test
mov
in
cmp
mov
jmp
pop
ss
sbb
loope
push
aas
subl
pop
jmp
push
push
pop
mov
movsb
sbb
add
jge
push
mov
mov
push
in
push
jo
fsub
add
cltd
or
rorl
les
aam
xor
inc
push
outsb
fs
sbb
sub
lds
loopne
lret
xor
dec
push
add
ret
pop
pushl
adc
dec
shlb
adc
jl
sub
outsl
nop
sbb
arpl
scas
and
aad
out
push
adc
clc
dec
cmp
jo
clc
rclb
xchg
cmp
nop
cmpsl
mov
rcll
xchg
ret
or
add
or
lea
scas
jo
adc
dec
test
mov
and
ds
sbb
insl
popf
xchg
shl
adc
inc
add
scas
or
add
adc
xor
add
gs
mov
xlat
jbe
or
or
inc
nop
pop
mov
rcrb
pop
or
in
aam
mov
jg
inc
mov
outsl
subl
add
movsb
stos
mov
mov
mov
or
inc
out
jae
ficoms
mov
call
fwait
adc
adc
je
pushl
push
jmp
inc
pop
mov
icebp
dec
or
mov
xchg
insb
loopne
xor
and
ds
fcom
add
push
stos
pop
and
in
mov
dec
lahf
repnz
add
mov
popa
add
or
mov
cs
rclb
or
scas
hlt
fimuls
xchg
add
inc
xlat
aad
and
add
insb
ret
xor
xchg
cmpsl
repz
and
inc
mov
outsb
adc
js
add
jl
cs
jp
std
adc
add
and
push
lods
sahf
dec
in
daa
inc
repnz
subb
inc
je
adc
jg
cmp
in
mov
loope
cmp
lods
movsb
int3
sbb
daa
sbb
xor
inc
add
inc
fnsave
inc
nop
ljmp
adc
push
fsubrs
xchg
shlb
jp
xor
xor
cmp
add
fs
jo
adc
aam
and
xchg
xchg
jecxz
mov
arpl
pop
mov
mov
mov
mov
sub
insl
mov
outsb
cli
mov
fwait
shrb
sbb
and
sbb
push
data16
pop
xchg
out
sahf
xchg
pusha
or
inc
arpl
test
or
lahf
fistps
dec
cmp
xchg
lret
aaa
mov
dec
js
push
pop
cltd
lcall
dec
ret
push
and
xchg
cmpsl
cmp
lret
push
mov
push
xchg
out
sahf
test
icebp
adc
sahf
mov
cltd
sub
adc
popa
jmp
idivl
push
jmp
incl
pop
in
dec
adc
mov
cmp
sbb
mov
lret
mov
sbb
pushf
out
notl
sub
jmp
jnp
ljmp
or
xor
jmp
test
pop
ss
add
out
add
je
stos
jmp
clc
xchg
orb
movsb
mov
and
mov
xchg
rorb
inc
cmp
sbb
push
sbb
adc
mov
ss
pop
cs
out
adc
in
mov
je
xlat
adc
js
jne
notl
or
sbb
xor
mov
jnp
jp
push
adcb
adc
fcompl
mov
xchg
dec
add
xchg
dec
xchg
je
sbb
dec
and
adc
push
pusha
mov
lods
faddl
adc
lea
mov
cli
cmp
push
pop
jae
add
sbb
push
rol
cmp
and
push
adc
lret
lods
mov
pop
rcll
jmp
jne
cmpl
sti
or
xchg
sbb
into
sbb
dec
cltd
in
dec
mov
sarl
gs
inc
xchg
fisttpl
push
cmp
push
sub
jbe
jmp
dec
mov
sbb
fists
add
pushf
sbb
sub
cmpsb
or
sub
mov
xchg
fs
add
dec
pusha
push
jo
and
mov
and
mov
pusha
sbb
pop
fidivrl
pop
pop
pop
inc
pop
leave
in
dec
inc
push
pop
push
daa
test
leave
pop
dec
mov
mov
dec
outsl
mov
and
push
sbb
xor
inc
cmp
stos
push
mov
mov
sbb
les
rolb
inc
orb
pop
sub
cmpb
mov
cmp
adc
inc
cmp
pop
or
dec
or
add
push
dec
mov
adc
scas
or
out
addr16
stc
push
std
push
xchg
outsb
and
orw
mov
arpl
xchg
xchg
out
aad
hlt
cld
mov
rclb
xor
push
jle
or
pop
jbe
imul
rolb
mov
push
imul
push
mov
add
stos
sub
mov
jp
or
mov
mov
mov
adc
pop
scas
sub
mov
dec
inc
test
icebp
lock
push
add
cmpl
push
shlb
sbbl
jnp
pop
inc
into
ss
fsub
mov
sbb
or
ret
add
mov
insl
les
xor
xor
ja
lret
lods
shlb
nop
shrb
sub
aam
pop
fisubrl
rolb
movsb
mov
inc
scas
dec
sbb
xchg
cmpsl
movsl
in
add
xchg
loopne
stos
aam
aam
mov
jecxz
sub
pop
mov
cli
or
and
mov
dec
daa
stc
pop
pop
mov
je
pusha
sbb
cmp
cmp
xlat
or
sbb
daa
dec
leave
rolb
and
adc
jno
xor
or
adc
adc
addr16
push
aam
sub
cli
mov
pop
inc
testb
cmp
and
jb
mov
dec
or
sbb
fwait
dec
jecxz
add
push
or
add
add
dec
in
push
push
push
jb
xchg
cwtl
pop
or
and
pusha
push
nop
cmp
test
mov
sub
je
dec
push
imul
mov
add
jo
lsl
add
mov
push
int
xor
daa
js
add
cmp
js
jbe
rcrb
insl
nop
jg
sub
push
inc
mov
dec
test
adcl
ret
mov
mov
test
cwtl
and
js
pop
test
add
cmp
or
mov
jmp
jmp
lods
rolb
mov
mov
outsl
test
jbe,pn
add
addr16
in
rcrl
adc
popa
cmp
mov
mov
int
and
movsl
lds
cmpsl
and
mov
mov
sbb
push
enter
inc
xchg
clc
sbb
sub
and
push
push
scas
xchg
mov
imul
in
stc
xchg
lods
xor
add
sahf
cwtl
mov
adc
or
mov
into
push
pushf
int
mov
das
ret
push
xchg
sbb
pop
pop
push
aam
popa
das
or
dec
xchg
ret
adc
dec
lods
jl
loop
push
lock
mov
in
inc
ja
pusha
js
push
and
inc
jecxz
jnp
aam
xchg
xlat
push
cmp
cmpsl
cmp
lods
push
mov
jl
daa
pusha
jle
insb
jg
or
push
dec
aam
push
jl
orb
out
sbb
outsl
xchg
mov
mov
pop
lahf
and
inc
mov
push
pushf
test
shrb
inc
das
insb
mov
into
sub
insb
callw
imul
into
cwtl
mov
loope
fld
jne
mov
push
sahf
insb
shrb
lret
push
enter
add
pusha
movsl
mov
dec
dec
mov
add
xchg
mov
xchg
or
sub
push
fcmovbe
aad
adcl
into
dec
dec
adc
scas
xor
inc
jne
insl
adc
xor
mov
sub
push
or
xchg
popf
or
mov
stos
jo
in
arpl
push
cmp
sub
shll
mov
push
scas
fcompl
data16
test
adc
ds
jne
mov
xchg
scas
or
enter
adc
in
or
imul
xlat
lret
pop
shl
lret
stc
add
sbb
shlb
cs
push
jne
aas
and
icebp
and
leave
xor
add
xor
sub
mov
jb
and
cmp
or
mov
popf
and
imulb
adc
jg
xchg
test
aas
dec
adc
dec
cmp
push
loopne
sub
sub
in
inc
sbb
iret
mov
and
mov
loop
mov
pop
nop
inc
or
shlb
mov
dec
mov
sub
sarl
ret
ret
mov
xchg
es
clc
inc
push
lock
sub
lods
mov
adcl
sub
in
shrb
shlb
and
and
call
xor
pop
jecxz
push
add
push
pop
add
cmp
in
clc
xchg
orl
mov
mov
movb
nop
fcmovne
es
outsl
shr
dec
pushf
mov
push
movsb
test
push
fsubrl
mov
xor
mov
mov
pop
xchg
lock
sbb
lret
fwait
aam
notl
data16
xchg
mov
cmp
or
and
mov
mov
ror
or
mov
shll
add
pop
mov
add
add
cmp
or
or
lahf
shlb
mov
in
xor
daa
dec
add
sbb
push
inc
or
adc
inc
jne
test
push
mov
jns
dec
and
jnp
addb
shr
orb
aaa
or
rorl
cmp
pop
pusha
push
push
add
jmp
jg
mov
or
cwtl
data16
leave
push
enter
fnstenv
sub
int3
inc
sbb
add
adc
pop
jp
add
jg
jae
ret
lods
push
fs
cwtl
pop
arpl
cmp
xchg
cmp
pop
mov
mov
push
push
mov
cld
inc
movl
sbb
mov
pop
sub
push
sbb
xchg
sub
cld
adc
pop
dec
dec
lcall
fdivl
cmp
mov
mov
sub
mov
xor
out
push
loopne
stc
jae
je
pop
add
pop
pushfw
inc
bound
pop
mov
dec
xchg
push
cmp
or
add
xchg
adc
outsl
lods
and
and
movsb
loop
xorl
push
faddl
or
jbe
mov
inc
lret
fdivr
or
test
leave
sbb
and
dec
lea
shlb
lea
cmpsb
dec
xchg
inc
mov
xor
fadds
orl
xchg
push
inc
push
xor
sub
mov
in
xor
mov
dec
lea
mov
xchg
mov
and
mov
sub
or
inc
rorl
add
cmpsb
adc
loop
push
fsubrs
imull
push
and
ret
add
sbb
les
cli
call
pop
pop
jo
sbb
add
adc
roll
add
das
jl
dec
adc
xor
mov
mov
dec
sub
rclb
inc
and
flds
dec
mov
imul
aaa
clc
hlt
xchg
cmc
push
pop
or
sbb
or
mov
into
inc
pop
sbbb
adc
rolb
and
and
sub
call
insb
push
add
test
mov
or
and
addb
mov
adc
adc
pop
add
dec
bound
push
xor
arpl
mov
pop
dec
mov
imul
xchg
mov
push
iret
les
inc
dec
push
push
mov
jl
test
dec
stos
jmp
negb
repnz
and
adc
add
or
mov
cld
fnsetpm(287
shr
jns
pushf
mov
scas
xor
std
inc
or
and
inc
in
lret
mov
sub
cmp
jae
push
cmp
lods
call
data16
pop
or
pushf
cmp
jbe
testl
lcall
and
dec
add
in
dec
add
jecxz
in
stos
fimuls
mull
or
pshufw
mov
addr16
push
js
add
or
jo
push
mov
loopne
dec
int3
pop
outsb
fld
add
adc
push
loopne
jg
addl
ja
dec
rcrl
mov
aaa
testl
add
add
jns
shr
xlat
xchg
and
insl
jecxz
push
cmp
add
rcrb
leave
jne
test
inc
lods
pusha
fisubl
push
add
clc
out
inc
cmp
imull
test
sbb
mov
sub
jge,pt
mov
pushf
and
inc
mov
dec
add
icebp
addr16
sbb
or
pushf
mov
or
jle
insl
push
jge
lret
adc
cmpb
or
or
push
notb
sbb
je
pop
sub
inc
js
rorl
xor
test
push
xlat
nop
xlat
adc
xor
fisttpl
push
mov
movsb
cmp
push
push
loop
push
mov
cmpsb
dec
add
adc
and
and
jg
and
cwtl
movsl
push
mov
js
paddusb
orb
in
mov
cmpb
mov
cmp
nop
dec
pop
test
dec
fcoml
pop
test
movsl
and
cltd
mov
or
in
sbb
int
call
dec
leave
lock
push
add
pop
ss
enter
adc
push
mov
and
test
xchg
pop
ss
inc
sub
pushf
cli
shll
lock
push
call
cmpsb
inc
sub
and
loopne
push
xchg
sub
sar
out
add
dec
add
jbe
xor
push
sub
shll
or
add
push
test
js
les
mov
cmpl
push
jb
sbb
insb
add
sbb
pop
int
ficompl
cmpb
push
push
push
das
adc
movsl
out
loope
lds
fwait
test
mov
pop
ds
dec
push
fidivrs
push
test
inc
rol
sti
and
aas
fdivp
leave
push
jo
adc
push
out
andb
rcl
pop
pushf
mov
jo
sub
dec
dec
mov
popa
pop
loopne
pop
lea
xlat
lock
dec
mov
cmp
icebp
les
dec
jmp
add
test
popa
push
pop
roll
testl
fmull
inc
add
loope
xchg
stos
push
add
sbb
xchg
je
mull
fcomps
faddp
cmp
adc
adc
sbb
mov
push
cmp
adc
inc
sarb
push
add
ficoms
adc
push
push
cmc
adc
cld
push
mov
test
ja
loope
fldcw
loopne
in
jbe
lcall
adc
or
or
mov
loop
test
faddl
adc
xor
loopne
fdivs
jo
xor
sbb
js
sbb
adc
inc
adc
and
jge
out
adc
push
orb
adc
inc
add
inc
jnp
into
mov
and
loope
cmp
bound
in
testl
lods
ret
push
lahf
ljmp
inc
call
inc
add
dec
push
inc
mov
dec
sbb
or
and
fnstenv
inc
mov
iret
add
insl
test
jge
pop
sub
jo
mov
push
sub
or
push
xchg
adc
inc
aas
push
and
test
pop
pop
xchg
push
sub
nop
mov
les
jns
sbb
int3
cltd
test
or
outsl
push
subb
loope
outsl
cmpsb
cmpb
xchg
cwtl
js
xchg
je
lods
xor
popf
jo
insb
xchg
insb
lcall
sub
xchg
ja
inc
sub
xor
out
jae
stos
loop
stos
and
jp
cmp
adc
adc
and
imul
mov
xchg
in
cmp
lahf
lahf
call
outsb
mov
aas
int3
pop
js
test
test
rorb
sbb
aas
push
mov
jecxz
or
fwait
xchg
dec
mov
enter
xchg
jecxz
pop
xchg
sbb
xchg
inc
and
stos
or
cmpb
rcr
xchg
push
dec
dec
jae
out
das
or
ja
mov
push
inc
pusha
addps
add
xor
fwait
leave
leave
ret
add
jae
push
pop
xchg
movsl
add
sbb
into
and
in
xor
ret
pop
add
mov
movaps
or
sbb
add
mulb
insb
ss
adc
mov
popa
rol
adc
imul
outsl
cld
jp
jnp
out
es
add
test
bound
pop
push
add
out
dec
out
jle
xchg
shrb
lret
sub
add
rcl
imull
aaa
or
adc
ret
ss
les
stc
mov
add
mov
sub
sbb
xchg
and
movsb
pop
cmp
sub
jge
out
mov
shlb
and
fs
cltd
mov
test
sti
and
dec
push
lcall
push
sub
sub
xor
fldl
and
out
or
cmp
mov
test
imul
daa
inc
push
mov
icebp
inc
loopne
aam
and
mov
pop
and
push
mov
dec
sbb
movups
push
sbb
and
mov
xor
mov
fldl
clc
push
cmp
addl
jge
or
pop
dec
jae
mov
xor
shrb
pop
iret
pop
addr16
and
pop
push
xor
pop
mov
jge
pop
bnd
fmull
leave
leave
call
pop
mov
or
add
notl
sbb
xchg
clc
jae
repz
dec
fwait
lods
and
add
rclb
inc
push
dec
and
inc
dec
push
mov
pop
cmp
and
lods
xor
inc
xchg
test
les
sbb
decl
wbinvd
jbe
out
sub
ds
inc
enter
pop
pop
sbb
pop
or
add
pusha
leave
js
or
add
dec
ljmp
movb
and
cmp
inc
or
add
lret
dec
add
add
push
scas
cld
mov
imul
jb
push
jns
je
lret
addb
xchg
mov
scas
dec
push
leave
xchg
pop
in
cmp
push
mov
add
sbb
xor
ja
mov
adc
adc
adc
test
pop
popa
js
add
aas
and
sahf
mov
sub
push
lret
in
mov
add
mov
inc
addr16
mov
imul
or
addr16
or
out
push
and
inc
pop
mov
cli
orb
pop
jo
movsb
je
movsb
maxps
ud2
xor
stos
sbb
js
push
cmpsl
jb
aad
sub
int
pop
xor
fs
arpl
inc
add
imul
mov
fwait
mov
lret
lahf
rclb
aaa
in
int
in
cmp
cmp
psllq
push
and
mov
cmpsl
cmp
jmp
ret
push
xor
push
or
cli
mov
or
adc
mov
inc
xor
adc
pusha
mov
jb
js
mov
adc
mov
sbb
pop
das
mov
cmovne
ds
dec
popf
mov
outsb
adc
inc
or
and
or
movsl
xchg
pop
sub
jmp
adc
es
lcall
push
dec
sbb
leave
jnp
mov
divb
inc
dec
dec
xchg
icebp
shll
popf
adc
or
lret
dec
mov
pusha
jo
adc
add
sbb
mov
insl
add
adc
adcb
das
pop
cli
or
jae
dec
insl
sbb
or
adc
sub
repz
adc
es
xchg
mov
pop
iret
add
ret
push
rcrb
loope
inc
pop
cmp
sti
pushl
movsl
sbb
out
mov
das
mov
popa
test
add
or
sub
shl
int
mov
pop
add
testb
ret
fiadds
addb
push
pop
jns
imul
or
or
incl
test
iret
xchg
jmp
or
xchg
lock
rolb
data16
negl
fs
inc
lcall
add
mov
testl
inc
or
push
pushf
in
imul
or
lods
add
push
adc
leave
jbe
add
cmp
sahf
push
or
add
aaa
push
add
popf
ja
pop
pop
cs
rorb
push
sub
mov
adc
jns
jge
adc
cmp
push
jo
inc
push
dec
add
add
testl
int3
pusha
sub
cmpb
and
xor
mov
insb
push
cmp
icebp
outsl
ret
fbstp
movsb
adc
lock
fs
dec
call
dec
insb
fdivs
mov
adc
or
cmp
sbb
cmp
sbb
add
roll
xor
or
sbb
test
je
xchg
cwtl
arpl
movsl
mov
jmp
jae
out
adc
or
imul
mov
fs
push
ja
dec
jae
adc
or
stos
inc
and
pop
jne
fdivrs
push
push
mov
fimuls
or
or
sbb
arpl
insb
mov
or
push
pusha
flds
rcr
sub
push
cli
roll
inc
mov
inc
fcom
adc
xor
and
inc
or
movsl
fsubs
loope
sub
inc
push
aaa
or
xchg
sbb
sbb
xchg
jns
xchg
and
stos
es
push
cltd
mov
arpl
dec
and
adc
stos
test
sub
test
cmp
xor
or
push
or
add
dec
sub
sbb
or
sub
push
shl
or
adc
insl
in
push
push
mov
notb
in
dec
dec
and
cmc
imul
outsl
mov
xor
in
imul
pop
mov
mov
ret
dec
inc
in
mov
lods
push
jo
das
arpl
push
mov
insl
xchg
in
or
mov
mov
add
ljmp
add
cmpsl
sub
fwait
das
daa
push
xor
hlt
popl
scas
dec
es
dec
aas
cmp
mov
cmpsl
xchg
cmpsb
in
cmp
or
nop
mov
adc
xor
add
sbb
and
sub
dec
je
inc
add
xor
xor
jbe
dec
pop
mov
mov
movsl
sub
aad
pop
dec
push
bound
sbb
adc
faddl
sbb
ljmp
or
lea
sbb
xchg
or
popa
mov
cmpl
loopne
adc
nop
push
sbb
xchg
pusha
outsl
add
cmp
sysret
and
push
cltd
mov
les
dec
push
or
hlt
imul
cmp
jns
adc
and
add
add
aas
jns
nop
mov
push
cmp
mov
mov
stc
xchg
xchg
out
mov
clc
or
xchg
xchg
xchg
mov
add
jl
aam
daa
inc
push
lods
add
cli
adc
faddl
repnz
fisttpl
outsb
xor
pop
add
push
mov
es
xlat
push
out
fistpll
xchg
cmpsb
mov
ret
push
mov
int3
fs
push
pop
add
movsl
adc
je
mov
clc
add
pop
xor
dec
jl
std
inc
movsl
movsb
test
xchg
movsl
add
fwait
push
int
xorb
pushf
jb
mov
add
ja
popf
inc
lahf
mov
insl
pop
sahf
daa
sub
sub
pop
mov
add
stos
loop
in
add
icebp
ds
mov
pop
or
pop
bound
daa
cmpb
in
lds
movsb
movsb
icebp
add
jnp
pop
imul
mov
adc
xor
jo
sbb
xor
mov
ds
leave
dec
or
or
call
aaa
or
xchg
rdmsr
orb
xor
push
mov
enter
adc
test
rorb
and
add
pop
jmp
mov
sub
in
faddl
sub
loopne
adc
mov
negb
jmp
cmp
popa
sub
cmc
xchg
mov
xchg
jae
fmuls
push
shl
test
es
fdivrs
xor
insl
xchg
xor
popa
mov
mov
mov
xor
leave
push
adc
insb
and
xlat
and
daa
bound
xchg
pusha
and
sub
sub
dec
and
jae
ret
cmp
sarb
inc
test
mov
mov
jns
sub
inc
adc
jp
pop
insl
inc
add
ret
pop
mov
push
xchg
cs
test
xor
mov
dec
sub
lds
pop
push
add
pop
imul
gs
jmp
xchg
cli
jae
pop
adc
sub
orb
xchg
pop
ds
xchg
cvtps2pi
loope
xor
in
inc
cmp
xchg
add
ss
pop
push
pusha
cmp
leave
push
push
jge
fmull
lods
movsl
sbb
ss
imul
adc
cmp
dec
lea
int3
push
add
inc
stc
mov
add
sub
pop
andb
xchg
xchg
test
int3
test
xor
outsl
leave
sbb
imul
cmp
inc
add
xor
add
std
pop
inc
mov
paddb
pushf
ds
mov
add
pop
jb
std
mov
xchg
xchg
fldcw
mov
xchg
pop
in
rdpmc
pop
clc
inc
fstl
cmp
into
xchg
xor
or
dec
paddb
rcl
das
fyl2xp1
decl
or
xchg
and
imul
or
mov
add
add
add
mov
adc
add
add
add
adc
push
and
sbb
mov
dec
pop
xchg
push
fadds
push
or
cmp
mov
sbb
xchg
or
sub
or
aaa
adc
incl
mov
mov
ljmp
and
stos
ljmp
jmp
jmp
adc
mov
inc
pusha
xor
and
fimull
fucom
imul
lods
inc
push
mov
jl
int
push
test
mov
mov
lcall
js
out
into
divb
and
ss
int
mov
dec
rcrl
pop
cmp
add
mov
push
cwtl
mov
leave
int
sahf
cmpsl
push
sbb
rcrb
push
pusha
mov
mov
repz
dec
mov
lods
scas
cmpsl
jns
jnp
cs
add
pop
lahf
inc
sbb
sti
mov
cwtl
fadds
mov
nop
les
push
clc
addb
push
aam
adc
lea
jl
adc
pop
push
or
mov
mov
push
push
popf
daa
fadds
imul
ret
das
mov
iret
xor
aaa
movb
rorb
aas
fmull
or
push
lret
push
loopne
jge
sbb
xor
and
or
roll
pop
inc
imul
imul
sub
add
inc
inc
ret
insl
adc
push
xor
mov
sub
mov
adc
outsl
push
cmp
movsl
push
icebp
mov
call
ror
dec
inc
cmp
mov
cmpl
mov
push
jns
and
adc
leave
dec
and
add
push
cmp
push
mov
cmp
movl
pop
cmovg
insl
and
cs
leave
push
or
dec
sub
mov
dec
ds
jp
add
dec
or
mov
adc
jp
bound
push
inc
inc
lret
inc
mov
pop
or
dec
xor
jnp
movsl
sarl
fdivs
adc
iret
or
mov
push
adc
mov
dec
sbb
loopne
xorb
dec
in
push
mov
add
mov
xchg
cltd
pop
movb
addl
leave
sbb
jp
mov
inc
jp
jg
inc
push
in
sbb
pop
popa
movsl
push
mov
push
add
lock
sbbl
fimull
add
cmp
sbb
mov
xor
push
sub
mov
lahf
pop
mov
xor
xchg
mov
and
inc
mov
rorl
or
mov
or
push
xor
add
orl
int3
xchg
dec
inc
or
sub
xor
and
adc
scas
mov
pop
inc
out
shlb
sub
les
cmp
jmp
sub
or
mov
sbb
enter
mov
jne
incl
imul
and
or
push
inc
or
dec
xor
imul
adc
test
popf
incl
fwait
push
or
xor
pop
and
pop
subl
mov
xchg
call
cmpsb
rorb
mov
push
jl
lds
mov
sbb
aas
pop
mov
dec
mov
or
push
mov
push
dec
push
xchg
pop
lret
xor
adc
int
pop
inc
push
lea
or
jmp
incl
pop
or
clc
aam
shld
sti
xor
orb
scas
fstl
rolb
pop
push
test
sub
stc
pop
addr16
sub
addps
push
stc
pop
rorb
test
jb
mov
mov
mov
add
ffree
sbb
es
pushf
xchg
push
test
xorb
push
mov
cmpsl
xorb
push
dec
and
clc
inc
int3
sbb
popw
js
fsubrp
push
scas
cwtl
movsb
xchg
jo
and
arpl
inc
mov
mov
in
inc
outsb
ret
popa
xor
loop
pop
adc
das
sub
adc
sub
sub
dec
dec
ss
lds
fsubs
mov
and
and
test
lsl
pop
pop
mov
dec
outsl
mov
je
loopne
push
jge
or
jno
sbb
mov
add
mov
jl
inc
in
pop
test
jne
xchg
je
sbbl
nop
sbb
lock
loope
or
inc
mov
push
xchg
inc
add
mov
mov
jge
and
cmpsl
dec
inc
dec
rolb
fadds
pop
aam
pop
and
ds
and
inc
xchg
add
push
mov
sbb
adc
add
adc
ja
and
push
push
sub
add
fsts
mov
add
sti
add
mov
sbb
inc
add
mov
lahf
and
sub
dec
mov
insb
iret
cs
pop
sub
lahf
das
inc
rcll
adc
xchg
test
and
xor
jp
adc
movsb
repnz
test
push
outsl
jecxz
orb
fists
xorl
sbb
jns
rol
jo
inc
aam
xor
adc
xor
xor
inc
cltd
xor
sbb
pop
push
push
loopne
imul
add
xchg
adcl
stos
nop
or
inc
out
cmp
mov
mov
pop
cwtl
lcall
sbb
sbbl
sub
repz
mov
out
and
jbe
inc
fimuls
add
leave
cmp
add
and
cwtl
xlat
and
xor
mov
shr
iret
enter
dec
cmp
mov
mov
xor
push
jne
enter
jmp
jnp
xchg
or
pop
inc
adc
pop
orl
movsl
pop
mov
inc
push
mov
in
mov
aas
orl
daa
sub
adc
and
rol
adc
or
push
incl
dec
cld
or
dec
mov
cmp
inc
xchg
push
push
fs
or
jns
xor
jns
xor
sbb
mov
ret
dec
cmovp
jnp
inc
clc
sub
sbb
cwtl
mov
push
xchg
adc
mov
adc
xchg
or
addr16
push
mov
sti
dec
adc
sbbl
add
push
lods
jne
dec
mov
cmp
push
dec
pop
inc
inc
jmp
and
rcll
sbb
movsb
jbe
push
fisttps
jns
aam
in
dec
clc
clc
rorb
mov
push
xor
push
and
sub
xlat
push
dec
or
loopne
or
test
or
adc
adc
and
out
pusha
aaa
sbbl
lods
nop
nop
or
and
adcb
adc
pop
outsl
sub
inc
pop
cmp
pusha
cmp
xor
popa
bound
xor
push
push
mov
sub
pop
shl
inc
ficoml
dec
dec
leave
xchg
loop
data16
jecxz
push
dec
push
repz
sbb
out
mov
inc
leave
cmp
and
push
imul
fsubl
je
add
dec
or
imul
insb
mov
scas
rorl
sbb
sbb
stc
aas
or
jl
mov
inc
adc
sbb
sbb
stos
iret
stc
sbb
sbb
sbb
xchg
sbb
sbb
ret
or
xchg
fs
or
sub
jb
fs
jmp
fs
push
jb
jb
fs
fs
imul
aad
daa
push
dec
fs
mov
jb
pop
es
outsb
fs
mov
std
fs
sbb
in
fs
fs
jbe
int
in
fs
fs
in
sbb
cmp
test
fs
lret
sbb
fs
popa
mov
aad
and
fs
mov
jmp
push
shrb
ret
addr16
pop
adc
xchg
lods
fldl
dec
sub
cmp
dec
sbb
jmp
fisttps
ret
aad
and
dec
outsb
incl
imul
pop
and
lods
out
pop
push
fsubl
dec
push
pop
push
nop
and
and
aad
clc
filds
sub
dec
fisubs
xchg
lods
imul
loope
sub
push
stos
adc
sub
or
movsl
les
pushl
jns
in
adc
loope
mov
sahf
mul
mov
fcomp
ss
or
in
cmpsb
insl
leave
mov
fsubs
and
and
pop
lret
sub
pop
pusha
inc
sub
xchg
dec
push
and
xchg
and
mov
loope
and
push
add
aas
add
aas
fisubs
fwait
push
push
daa
inc
push
mov
mov
jbe
inc
addl
mulb
pop
pop
sbb
sbb
mov
pop
rorb
cmc
adc
xor
xchg
jae
mov
push
aad
jnp
loopne
inc
or
cld
loop
inc
or
sub
stc
push
adc
xor
ret
aaa
push
pop
sbb
out
mov
add
ja
xor
add
inc
pop
add
mov
xchg
jne
js
or
popa
cmp
xchg
sub
dec
pop
das
outsb
and
stc
in
or
add
or
xchg
andl
pop
loope
jecxz
xor
aas
push
or
cmpsb
addb
adc
pop
popa
aaa
xchg
movb
add
sub
sub
dec
push
mov
dec
jo
and
aas
je
sbb
adc
jg
cmp
imul
sbb
les
dec
mov
mov
mov
push
cs
sarl
mov
adc
ret
cwtl
jne
in
xchg
imul
and
lods
and
xor
pusha
sti
push
push
xor
insb
sub
cmp
pop
sbb
add
fmull
pop
movnti
push
addps
pusha
add
fisubrl
fistpl
jnp
cwtl
and
pop
mov
jo
adc
inc
or
es
sbb
js
nop
mov
imulb
aaa
scas
xor
roll
and
insl
sub
scas
sub
sub
pop
shlb
das
inc
bnd
xchg
nop
nop
add
xor
pushf
cwtl
pop
push
inc
push
mov
and
mov
nop
jecxz
jno
loope
in
rcrb
jno
loope
pop
std
push
sub
sub
jle
cmp
fimuls
mov
daa
and
sub
push
test
sbb
pusha
sbb
push
ret
out
mov
inc
dec
insl
insl
and
out
dec
push
movsb
je
pop
sub
push
push
xor
add
push
push
stc
xchg
ljmp
loop
mov
pop
or
push
mov
or
out
xchg
out
nop
add
lods
cmovs
mov
outsb
stos
jl
imul
pusha
fistps
adc
lods
pop
xchg
mov
sub
mov
test
add
fdiv
dec
icebp
push
and
sbb
sub
test
and
xor
cs
or
jb
and
inc
push
xor
xor
xor
push
jge
leave
xor
xor
sbb
inc
data16
xor
mov
jb
sbb
cmp
xor
cmpsb
lret
cmc
push
xor
xor
jb
xchg
cmp
fwait
pop
lret
add
movzwl
mov
push
adc
roll
pop
imul
setae
jb
add
jmp
dec
sub
dec
push
loope
in
lock
and
dec
adcl
mov
in
test
in
loope
and
mov
or
sub
mov
out
bound
out
rcll
or
cmp
popf
push
jno
stos
sbb
popa
inc
nop
add
pop
in
clc
dec
push
inc
mov
lahf
test
in
or
in
pop
xchg
or
mov
mov
in
push
loope
pop
inc
and
movsb
jne
test
push
pop
test
pop
jl
iret
push
repnz
dec
mov
add
add
adc
sbb
sbb
or
xchg
and
xor
and
je
push
push
dec
lahf
fsubrs
adc
out
sbb
add
cli
fwait
movsb
fistl
pop
aaa
sub
ja
sbb
dec
outsl
adc
add
rcl
adc
call
xchg
push
dec
incl
sarb
insl
adc
push
aaa
xchg
lcall
ss
movsb
mov
mov
xor
clc
mov
pop
sub
fadd
xor
push
popa
lret
xchg
mov
scas
adc
sbb
scas
shlb
negl
inc
add
ds
or
addr16
dec
mov
xor
movsb
adc
mov
add
mov
jb
xor
cs
shrl
or
inc
or
dec
test
mov
aas
push
add
loope
adc
das
jp
pop
mov
das
lahf
ret
into
cmp
jne
xchg
dec
jge
sbb
push
mov
sub
xchg
imul
mov
ja
push
jb
cmpsl
add
or
push
cmp
xchg
mov
lock
aam
add
inc
mov
sbb
pop
lahf
mov
test
or
add
sbb
lret
mov
stc
leave
nop
inc
jmp
imul
pop
adc
inc
add
scas
add
push
dec
inc
pop
mov
pop
nop
mov
mov
sbbl
pop
repz
iret
movsl
aas
mov
pop
mov
add
pushl
outsb
adc
push
mov
xchg
cmpsb
inc
loop
rorl
cli
fstl
jecxz
cmp
sti
fisubrl
mov
fidivrs
das
cmp
adc
cmp
jns
xchg
or
das
cmp
or
mov
test
push
lock
dec
jo
int3
add
inc
lahf
ret
test
insl
sub
xor
xor
out
sub
leave
enter
imul
movsb
inc
sub
popa
cwtl
pop
cmp
cmp
mov
inc
ret
or
add
imul
ss
or
push
add
adc
mov
add
nop
and
int
adc
jae
pop
cmp
arpl
pop
cmp
sub
mov
cmp
in
mov
lods
in
sub
comiss
xlat
xor
fstpl
cmp
fbstp
js
xacquire
jl
mov
cltd
mov
sub
inc
in
ret
test
inc
adc
xor
or
fimuls
push
inc
fimuls
pop
repnz
mov
nop
push
mov
stos
and
xchg
xchg
das
push
pusha
cmpsb
and
lahf
daa
imul
rorb
movsb
aas
movsb
bound
pusha
test
cmc
movsl
add
loop
adc
loopne
sub
xchg
test
or
bound
xlat
xorb
sti
xor
cmpb
andb
mov
repz
jmp
mov
das
lret
fnsave
jmp
outsl
cli
es
cmc
mov
add
mov
xchg
mov
adc
mov
mov
mov
jmp
mov
cmp
shll
fiaddl
ret
sbb
xor
pop
nop
mov
adc
jnp
sub
xor
and
xor
insl
dec
fs
pop
pop
adc
push
add
pop
popa
sbb
mov
xor
pop
xchg
stos
mov
mov
call
or
inc
mov
mov
clc
stc
adc
xchg
xchg
add
jbe
inc
pop
adc
ret
mov
movsb
clc
add
es
cmpsl
fnsave
sti
mov
gs
ret
cld
ret
ss
mov
loope
les
mov
xor
mov
inc
push
xchg
mov
push
fcoml
sub
sub
jae
add
mov
popa
adc
pop
push
jl
push
pushf
dec
xchg
inc
jo
imull
js
popa
add
lods
mov
dec
jl
push
mov
sub
ret
fsub
pop
inc
mov
add
jge
and
push
leave
enter
mov
dec
fs
leave
nop
mov
in
in
test
adc
jns
jb
pop
lcall
sbb
mov
cmp
inc
pop
xchg
fisttpl
inc
cmp
and
dec
pushf
filds
dec
xor
pop
nop
mov
daa
cs
push
stos
enter
dec
or
pushf
sub
loope
dec
add
and
mov
sub
dec
ret
lds
cmp
xor
lock
fs
jg
xor
outsl
jge
or
repnz
dec
mov
xor
pop
pop
aam
adc
adc
and
je
or
orb
aad
sbb
push
in
inc
or
mov
or
push
add
jne
push
jnp
dec
mov
dec
pushl
out
and
mov
xlat
or
enter
xor
lods
sub
mov
or
ud2
hlt
inc
mov
jl
lret
pop
aaa
popf
mov
roll
mov
lock
push
inc
mov
je
adc
add
and
cwtl
fcoms
insb
adc
ret
popa
inc
or
xor
jne
jo
sub
outsb
or
cwtl
jl
pusha
mov
jne
dec
sub
jg
adc
jbe
lods
xchg
push
ror
dec
fisubrl
scas
cwtl
adc
push
add
inc
dec
adc
movsb
push
imul
pop
adc
mov
rclb
jo
rcl
movsb
out
pop
sub
add
dec
xor
adc
out
push
stos
inc
add
mov
test
push
jmp
push
repnz
dec
pop
mov
add
adc
bound
test
das
or
push
cmp
mov
sub
or
out
pop
andb
inc
mov
pop
mov
into
jns
pop
push
popf
jae
pop
adc
das
add
mov
and
or
lods
ja
pop
push
pusha
out
daa
mov
and
xchg
push
add
dec
and
out
rcrb
add
pushf
push
stos
jp
sbb
in
push
inc
dec
and
lock
mov
call
cmpsl
lods
or
rcrb
jp
andl
dec
test
and
push
imul
inc
fsts
insb
out
xor
push
imul
sub
loopne
mov
mov
dec
lock
adc
sbb
inc
mov
pop
sbb
outsl
or
mov
outsb
pushf
add
jne,pt
testb
cmp
test
and
aaa
or
and
mov
and
xchg
dec
inc
push
and
in
dec
daa
dec
and
and
jae
xchg
and
dec
das
pop
andb
and
test
and
xchg
push
inc
mov
and
fisttpl
push
xor
and
and
subb
and
xchg
and
and
and
and
xchg
mov
fisubs
pop
pushf
pop
mov
add
add
push
arpl
adc
adc
cmpb
cmp
cmpsb
pop
imul
aam
mov
seta
mov
inc
repz
add
sub
mov
push
xchg
and
call
adc
add
xlat
and
clc
sahf
and
mov
pusha
lea
sub
sbb
push
add
push
pop
jl
and
sub
leave
in
xchg
dec
mov
dec
mov
lods
in
in
push
ret
add
dec
adc
sub
add
cmc
mov
inc
rcll
push
cmc
xchg
fcompl
adc
inc
sub
dec
push
inc
adc
shrl
push
bnd
inc
ret
xchg
xor
adc
and
sub
sbb
pop
sub
push
mov
scas
xchg
enter
cmpsb
cwtl
sub
je
add
int3
pop
psubusw
xor
pop
out
mov
and
add
inc
aad
rcl
je
push
les
pop
xor
adc
adc
outsb
pop
pop
pop
xorl
dec
int3
dec
leave
loopne
push
add
test
mov
aam
rorl
ljmp
addb
imul
pop
push
or
add
clc
leave
mov
stos
mov
movsl
push
adc
cmp
xor
add
jns
outsl
inc
and
in
lret
xchg
mov
dec
sahf
mov
sahf
jg
or
jo
or
repnz
dec
mov
stos
popa
xchg
fwait
lods
add
jge
pop
add
and
adc
sahf
mov
nop
pusha
inc
sahf
mov
pop
orl
mov
mov
jno
push
or
dec
inc
adc
cld
popa
inc
and
add
sbb
cltd
ret
in
sbb
pop
add
cmc
sbb
ret
jle
rclb
push
dec
dec
nop
es
sub
mov
sbb
push
mov
scas
jmp
push
je
and
dec
push
inc
mov
stos
aaa
and
test
mov
pushf
or
lods
lods
gs
push
jne
cmp
jne
cmp
pushf
add
adc
mov
mov
in
mov
or
push
das
jmp
xchg
or
cmp
js
add
jb
fnstenv
or
enter
lcall
imul
pop
mov
and
adc
adc
xchg
js
insl
add
mov
ss
je
adc
es
lods
and
in
push
aaa
jns
dec
adc
xor
mov
pop
jbe
lcall
jae
hlt
mov
add
mov
bound
fnstsw
mov
add
dec
mov
sbb
icebp
inc
cld
xor
jge
and
mov
mov
pop
or
mov
xor
mov
mov
mov
fisttpl
mov
sbb
loopne
xor
fistl
aam
xchg
dec
sub
cmp
call
pop
and
push
testl
cmp
mov
jae
and
adc
pusha
xchg
or
or
fists
ret
mov
mov
pop
loop
fs
hlt
pop
sbb
dec
cwtl
push
sarl
or
xorb
or
lcall
xchg
mov
jl
adc
xchg
pop
iret
decl
push
popa
cmp
outsb
dec
cmp
jne
and
incl
test
add
les
fsubs
pop
dec
sub
mov
jmp
add
jmp
enter
xchg
lock
add
or
lcall
dec
push
mov
outsb
lds
add
cmp
jae
orl
pusha
addr16
loopne
fildl
inc
pusha
mov
aad
pusha
out
xchg
dec
adc
aaa
in
xchg
sbb
pop
nop
add
fdivs
ss
pop
xchg
into
add
or
add
add
nop
andl
xchg
pop
add
lahf
int
add
adc
call
push
pop
add
movb
test
daa
xchg
xchg
loopne
int3
inc
adc
imul
or
adc
and
xor
jmp
test
sub
icebp
dec
insl
pop
lock
xor
test
push
mov
pop
mov
push
aaa
js
and
sub
daa
in
xchg
cwtl
push
jbe
jl
pusha
and
bound
add
mov
inc
sbb
sub
pop
add
adc
adcb
or
mov
nop
pusha
int
adc
test
in
adc
or
xlat
sbb
push
lret
retw
test
xor
sbb
nop
aaa
sbb
inc
and
gs
add
or
mov
insb
fstpt
inc
add
into
inc
pop
xor
add
xchg
sub
fiaddl
sbb
push
je
lcall
push
or
ret
movsb
or
test
xor
aas
and
xchg
and
push
add
cmpsb
jg
push
adc
mov
and
or
or
hlt
xchg
adc
and
xlat
pop
je
scas
cwtl
pop
dec
push
clc
inc
pushf
adc
shlb
and
push
inc
and
dec
cmp
jl
ret
outsb
jo
inc
inc
add
pop
push
add
arpl
push
repnz
rcl
add
or
dec
push
inc
inc
scas
dec
outsl
sbb
mov
out
inc
or
pop
pop
in
inc
adc
nop
repz
test
sbb
xchg
popf
hlt
arpl
cmp
xchg
add
cmpb
push
cmp
and
push
fdivrs
mov
sub
push
mov
mov
rclb
fwait
cmp
fs
xor
pop
aaa
sti
bound
mov
jne
adc
sub
mov
and
aad
jo
lock
cmpsl
mov
outsl
push
outsb
mov
or
inc
outsl
fsubs
pop
xchg
movsb
mov
inc
sti
mov
fisubs
inc
mov
pop
jb
and
or
in
jg
pop
xor
pop
hlt
neg
jmp
pop
jne
dec
push
inc
inc
add
mov
arpl
gs
inc
adcl
cs
inc
jecxz
adc
push
xchg
inc
or
dec
and
insl
bound
mov
aas
enter
xchg
inc
inc
mov
loopne
lcall
addr16
fdivrs
rcrb
movups
loope
push
ds
bound
and
dec
xchg
enter
mov
jbe
jl
jecxz
cmp
push
nop
adc
arpl
js
enter
pop
inc
or
call
lret
into
hlt
xor
dec
sub
out
popa
insl
loope
inc
sahf
push
ret
out
dec
adc
xor
or
sbb
insb
jecxz
dec
sti
adc
sti
jmp
sub
rcrl
clc
mov
daa
mov
jbe
jne
cmpb
and
push
popf
and
mov
sub
mov
xor
out
out
adc
sub
push
int3
out
pop
shrb
sti
and
xchg
and
adc
inc
adcb
dec
inc
ret
pop
add
pop
xchg
pusha
and
mov
fdivs
inc
jmp
lock
mov
mov
rcll
mov
add
popa
dec
xchg
push
mov
lcall
inc
jns
push
fs
icebp
cmp
shlb
and
add
out
sub
and
sub
or
inc
xor
fcoms
jg
jle
push
push
rorb
cmp
dec
out
cmpsb
inc
pop
roll
and
sbb
mov
jno
sbb
pop
gs
adc
xor
push
std
pop
cmp
push
jecxz
hlt
repnz
mov
mov
and
dec
sete
fdivrp
popa
inc
cs
xorl
pop
xchg
sub
or
insb
sub
lods
push
dec
inc
dec
mov
sub
lret
sbb
xchg
xor
inc
inc
sahf
es
mov
lret
push
ret
cltd
jle
jmp
adc
loop
sarb
ja
je
add
cmp
clc
mov
pop
das
adc
ret
add
or
sub
push
mov
in
sbb
loop
daa
pop
xor
test
mov
and
mov
mov
jnp
or
xor
pop
xor
add
xor
or
mov
push
adc
mov
das
pop
nop
hlt
dec
dec
adc
add
xor
jae
push
add
and
lcall
sbb
rcll
ret
pop
std
push
push
push
or
pushf
sbb
lea
insb
pusha
inc
in
je
movsb
push
mov
dec
and
xor
jb
adc
cmp
xchg
pop
jl
xor
push
sub
rcpps
test
test
out
add
lea
push
lock
fistl
fwait
cmp
cmp
loopne
push
cmp
test
cmp
xor
push
mov
push
mov
clc
sbb
sbbb
movl
aaa
loop
inc
out
push
jle
or
dec
jle
or
int
shll
or
add
mov
mov
push
sbbb
or
xchg
out
xchg
scas
stos
scas
sbb
inc
or
into
mov
and
adc
jge
loopne
sub
xor
inc
push
pushf
in
aam
subb
adc
push
jbe
and
cmp
push
movsb
mov
movb
movsl
cmp
push
fildll
test
les
and
xor
or
add
mov
dec
imul
sbb
lea
add
mov
scas
add
add
pop
fdivrl
lods
jl
push
push
push
shll
test
andb
pop
xchg
addr16
iret
push
push
sub
mov
ret
cwtl
movzwl
adc
adc
cmp
jno
sbb
sub
push
fiaddl
fstps
aaa
inc
cmp
dec
inc
and
lock
or
mov
inc
sarl
xchg
test
sbb
push
in
push
pop
addb
das
mov
push
insb
or
push
cmp
ds
popa
adc
nop
notb
adc
xchg
imul
popf
fmull
xchg
mov
dec
out
sub
out
add
mov
sub
fsts
xor
push
mov
push
fnstcw
push
cmp
je
cmpb
sbb
mov
inc
jge
das
sbb
jle
and
das
jg
adc
dec
or
icebp
adc
je
mov
mov
mov
fimuls
pop
push
outsl
mov
sarb
adc
dec
inc
dec
mov
xor
mov
cmpsb
fildl
lret
push
mov
dec
imul
pop
add
sbb
in
xor
sbb
or
push
mov
repz
and
pop
dec
outsl
mov
nop
and
xchg
dec
xor
push
pusha
mov
test
push
pop
inc
das
adc
jne
pop
or
or
ret
fidivrs
orb
nop
push
jno
sub
mov
sbb
cmpsb
fstp
cmpb
or
je
and
lret
pop
arpl
test
mov
daa
insb
mov
inc
dec
dec
sbb
imul
and
ja
push
enter
cmp
fdivs
xlat
movsb
adc
dec
xlat
repz
jle
jle
sub
add
sbb
loope
add
sbb
mov
outsl
push
sbb
adc
dec
aam
and
jno
lock
vsqrtss
push
arpl
push
loopne
rclb
imul
inc
inc
daa
inc
dec
push
cmp
jge
sbb
out
outsb
scas
jnp
sbb
pop
mov
cltd
sahf
sarl
jle
scas
ja
mov
sbb
or
jo
mov
sbb
or
mov
aaa
mov
pop
mov
imul
out
and
push
adc
pop
sarl
push
std
adc
es
icebp
jne
xchg
sub
mov
mov
leave
cltd
stc
jge
xchg
mov
lds
and
add
mov
shl
and
pop
push
adc
adc
nop
xchg
sub
inc
jle
cli
mov
fwait
gs
ficoml
add
jne
add
or
ss
sbb
fs
pop
mov
adc
xchg
mov
call
pop
cmpsl
idiv
pop
dec
add
arpl
sbb
das
inc
cmp
mov
mov
loope
addb
mov
mov
je
scas
enter
popa
jns
or
xchg
or
ret
cwtl
aaa
xlat
push
xor
jo
mov
movsl
fcomps
stos
sub
sub
int
xor
repnz
int
jle
cli
push
outsb
cmp
push
neg
and
and
int
sahf
into
and
xchg
push
test
sarb
lds
hlt
and
hlt
test
jo
mov
push
or
and
push
push
push
add
iret
xchg
loope
jb
sub
sub
inc
sbb
adc
xchg
aaa
shll
and
cmp
sbb
cmp
mov
jl
ja
and
in
lds
mov
pop
sbb
push
je
lea
inc
and
negl
daa
mov
and
jle
cmp
fistl
fdivl
sbb
js
lods
adc
addl
and
icebp
pusha
push
ds
call
in
xor
lcall
stc
call
push
mov
fwait
ror
jo
sbb
or
out
out
imul
sbb
arpl
jb
gs
or
fs
mov
or
pop
test
sbb
sub
daa
testb
gs
push
andb
lods
icebp
mov
lret
sbb
test
mov
lock
xchg
scas
icebp
fs
xor
sbb
pop
dec
and
faddl
push
lea
cltd
in
mov
cmp
int3
lahf
jae
enter
movsb
addb
jge
inc
jo
movsl
cltd
push
or
out
xor
lcall
movb
ljmp
dec
or
pushf
call
add
pop
and
inc
and
js
test
adc
mov
inc
mov
fwait
jp
adc
adc
cs
jp
mov
add
jne
outsl
push
add
dec
fcomps
cmpl
push
sahf
outsb
fildll
mov
in
adc
cmpb
push
pop
rcrb
and
and
mov
mov
shll
mov
int3
mov
xchg
orb
mov
lret
xchg
stos
or
xor
pop
push
xor
roll
mov
sub
repnz
or
fsubrl
pop
fisubrl
fmuls
jo
lahf
lahf
fsubs
jge
nop
imul
mov
cs
or
lods
xor
push
je
or
inc
daa
or
cmpl
xor
add
cwtl
or
add
sti
dec
outsl
jbe
adc
xchg
inc
bound
or
lret
pop
pushf
pop
push
cmpsb
call
jmp
inc
mov
jnp
xchg
popa
xchg
mov
mul
dec
sub
lods
mov
cmp
leave
xchg
push
subl
jg
mov
aam
addr16
mov
rcr
mov
mov
popf
sbb
setnp
add
scas
adc
dec
sbb
sub
ret
gs
shll
jb
test
cli
daa
movsb
insl
sub
add
lods
mov
adc
mov
inc
sub
dec
cmp
ds
hlt
cltd
xchg
xor
jge
mov
mov
cmp
mov
fs
jmp
jns
xchg
jne
xor
cmp
and
jae
lcall
inc
mov
pusha
mov
lods
pushf
and
hlt
or
sub
stos
mov
insl
and
pop
add
pop
fs
push
loopne
adc
in
cmp
jne
cmp
and
ja
push
add
jp
outsb
pushw
cltd
rclb
mov
mov
shll
jae
mov
pop
es
in
or
mov
hlt
mov
or
inc
les
or
mov
or
or
fwait
or
leave
stos
adc
rcrl
arpl
push
loope
and
shlb
or
xchg
arpl
jp
fiadds
fidivrl
cmp
dec
or
pop
outsl
mov
arpl
sarl
cmp
jne
jl
loopne
and
je
mov
push
push
fnop
cltd
xchg
arpl
pop
or
dec
push
nop
or
and
adc
lods
and
or
xor
out
rcrb
xchg
outsl
dec
sub
aam
fwait
popa
adc
test
shll
arpl
and
sub
mov
imul
pop
push
ret
mov
pusha
push
push
and
dec
xchg
clc
sbb
imul
cmp
sbb
mov
ja
adc
dec
js
sbbl
sbb
push
movsb
pop
mov
outsl
xlat
adc
inc
sbb
xchg
add
and
jg
mov
and
addb
test
iret
xchg
inc
mov
aaa
mov
or
out
inc
sbb
dec
dec
and
dec
adc
inc
ret
nop
aas
adc
addb
or
and
dec
sub
cmp
and
test
dec
sbb
outsb
rcll
xor
jno
and
loop
mov
enter
aad
pop
jmp
dec
cs
and
int3
outsl
jo
push
lds
aam
lods
mov
lds
jg
movsl
rcll
shll
std
mov
movsl
mov
gs
xorb
inc
inc
add
push
xchg
test
fistps
cmpsl
outsb
and
insl
mov
je
pop
rol
movsl
sbb
pmulhw
mov
or
add
xchg
adcb
sub
cmp
out
popa
hlt
inc
cmpsb
mov
jb
pop
test
add
add
dec
sub
adc
es
add
sub
dec
pop
sarl
frstor
push
mov
inc
aaa
jne
add
push
cmpl
test
add
adc
inc
or
jnp
les
adc
add
push
mov
cmp
sub
mov
inc
fcoml
sbbl
clc
xor
shl
sbb
nop
test
push
mov
push
dec
decb
outsl
or
push
hlt
and
or
jns
sbbb
adc
or
imul
sbbl
movl
mov
adc
or
xchg
add
les
xor
cmp
add
mov
and
and
mov
nop
out
inc
sbbl
pop
or
je
xlat
dec
in
jmp
or
xlat
mov
dec
inc
bound
inc
test
jne
push
mov
push
lcall
fstps
pop
add
andb
mov
icebp
outsl
lret
push
mov
xor
test
test
or
pop
adc
outsl
mov
xor
ficomps
aas
jmp
andb
clc
adcl
loope
je
rolb
ss
push
push
or
push
jne
jecxz
cli
add
nop
adc
sbb
and
push
adc
xor
inc
xor
dec
xchg
mov
dec
les
orb
sbb
jp
insl
sarb
les
jns
xchg
jp
push
jbe
sbb
or
xchg
adc
pop
mov
pop
jge
add
sub
mov
adc
imul
mov
rcrl
mov
sub
pop
mov
ret
jb
mulb
inc
and
in
dec
or
add
sbb
aaa
jecxz
sbb
jo
ret
add
push
scas
jb
ljmp
pop
xlat
add
pop
iret
mov
sub
sbb
inc
and
xor
testl
outsb
xlat
movsb
sub
lds
out
push
icebp
push
loopne
out
or
pop
outsl
lock
and
bound
fisttpll
xchg
addl
add
arpl
adc
add
ds
mov
adc
int
pop
sbb
shl
test
xor
mov
xchg
pop
adc
les
bound
or
je
lods
fdivs
jp
push
inc
add
lds
nop
cmp
mov
mov
fstpt
js
inc
sarb
repz
jo
movsl
or
pop
adc
clc
ss
popa
push
pushf
or
inc
test
aam
cmpl
mov
in
lret
lods
inc
inc
scas
cltd
and
adc
or
mov
filds
pop
dec
cmpsl
mov
ljmp
mov
sbb
jne
lcall
or
in
rorb
das
cltd
out
daa
xor
add
ret
loopne
sbb
negl
mov
add
or
cmpsl
xor
pop
jae
cwtl
pop
loope
pop
fstpt
or
push
mov
or
mov
sbb
adc
xor
sub
cmp
push
push
add
hlt
in
inc
mov
inc
gs
fstl
inc
addl
or
iret
std
xchg
clc
shll
or
pop
add
test
ret
mov
leave
push
xchg
popa
xchg
ret
and
daa
sbb
ret
push
lock
push
mov
push
ret
andl
adc
or
loope
inc
and
xor
movsl
call
cmpsl
adc
cmpsb
jmp
cmp
clc
jle
mov
and
or
cmp
push
push
xor
adc
fwait
adc
mov
and
ss
stos
adc
mov
cmp
fsubr
push
or
dec
stc
or
js
and
inc
imul
mov
mov
add
sub
and
aad
loop
or
adcb
inc
imul
mov
xor
xor
test
mov
inc
add
cwtl
cmpb
sub
pop
ss
push
mov
stos
and
fs
rdtsc
or
jmp
and
xchg
xchg
xchg
push
xorl
imul
mov
adc
mov
inc
roll
add
push
mov
nopl
adc
push
sub
push
ds
fsubrs
adc
js
cmp
xchg
sbb
mov
or
add
imul
inc
lret
fdivs
dec
mov
and
fld
and
test
dec
test
movsb
neg
in
je
inc
mov
rorl
ja
sbb
or
or
cmp
sti
in
jg
fadds
icebp
into
jno
fsubl
push
inc
xchg
jle
das
add
mov
push
loop
push
push
xor
pop
adc
lods
js
andl
adc
cmp
inc
cwtl
daa
mov
pop
adc
nop
lea
add
add
enter
lock
add
xor
sbb
inc
flds
dec
push
ljmp
cli
jge
sub
jmp
sub
adc
out
xchg
dec
movsl
cmp
or
mov
mov
sbb
and
add
test
jbe
loope
das
mov
ss
shlb
mov
out
hlt
imul
add
xchg
jl
push
mov
xchg
cmp
sub
xchg
push
out
leave
cld
jmp
and
sub
fwait
jl
pop
mov
mov
adcl
push
inc
add
in
or
test
mov
cmp
cmpsb
nop
fsubs
insl
and
out
lret
stos
lea
add
dec
jb
lock
insl
test
mov
sbb
adc
clc
filds
stc
or
add
push
adc
lcall
add
andl
mov
push
xchg
mov
pop
adc
push
and
pop
sub
mov
add
imul
jle
sbb
and
pop
repnz
lret
jp
and
or
loopne
call
jae
add
mov
movsb
test
add
add
and
shlb
mov
sbb
and
push
mov
xor
push
push
cltd
cmp
pop
insl
inc
movl
dec
adc
hlt
mov
xchg
imul
ret
xor
xchg
ds
jl
mov
mov
in
and
xchg
add
test
sti
push
and
dec
and
lods
adc
test
or
mov
stc
decl
bound
jg
cmp
lds
xor
and
xlat
jae
stos
popa
sbb
fsubrl
add
add
stc
push
or
mulb
inc
xor
dec
push
push
pop
cmp
or
mov
in
jo
dec
sarl
or
jmp
dec
dec
push
rorl
sarb
pop
add
push
popa
je
aaa
mov
addl
jmp
mov
add
xchg
mov
mov
xchg
test
out
mov
adc
or
sbb
fstpl
dec
adc
xor
and
lods
and
pop
dec
bound
inc
nop
sarl
notl
std
pop
cmpb
xchg
add
dec
loope
pop
cs
inc
cmp
dec
add
dec
dec
jns
cmp
jg
add
pop
aaa
into
scas
or
sub
and
push
pop
sub
xor
shrb
push
mov
testl
and
lea
and
cld
dec
push
je
aad
cmp
int3
mov
mov
mov
inc
ret
cmp
mov
jle
push
mov
dec
cmp
and
data16
inc
xchg
dec
sarb
mov
mov
cld
imul
fbld
and
in
fadds
mov
adc
mov
pop
add
jb
and
pop
jnp
daa
jmp
cmp
jo
and
in
lds
xchg
jp
sub
xor
aad
or
icebp
and
add
jmp
mov
ljmp
gs
xor
shrb
pop
fdivs
sbb
sbb
add
jl
fmuls
inc
xchg
cmp
nop
and
xor
add
mov
dec
ja
and
int3
mov
mov
fstl
lret
inc
fadd
sahf
cmpsl
mov
mov
add
push
jmp
loop
pop
push
clc
xlat
adcb
arpl
sub
insb
roll
pop
les
and
and
or
push
push
push
sub
ljmp
xchg
adc
js
cs
cwtl
push
cmp
mov
movsb
dec
mov
cwtl
sahf
lds
cld
inc
push
add
or
lods
and
jne
out
aaa
or
scas
or
jnp
mov
cwtl
dec
xchg
or
adc
fcomps
je
adc
mov
test
push
fstpl
in
mov
fbld
mov
cmp
stos
cmp
fs
sbbl
add
lcall
icebp
push
adc
fisttpl
add
or
jns
xchg
pusha
adc
push
and
int3
xchg
imul
cmpb
and
mov
ja
popa
rorb
mov
jmp
inc
pusha
in
cmc
bound
lret
push
push
push
imul
cmp
rcrl
enter
mov
mov
scas
imul
dec
inc
mov
sbb
push
popl
test
fimuls
dec
cwtl
nop
stos
add
push
sbb
jecxz
lods
popa
inc
int3
inc
xorl
inc
daa
sbb
adc
je
and
lods
xchg
or
cld
jne
test
add
mov
or
jl
dec
hlt
or
mov
shll
stos
pop
jbe
dec
loopne
jg
cwtl
mov
addb
cmpsb
adc
pop
mov
cs
push
jno
ret
or
pop
adc
cmp
setle
pusha
jmp
and
cmpsl
sub
sub
jmp
aaa
packssdw
rclb
push
mov
push
scas
push
inc
jge
test
xchg
fnsave
dec
test
cmovs
sub
push
loopne
xor
adc
inc
and
cmp
je
inc
fimull
inc
add
inc
and
adcl
testl
push
push
movsl
dec
pop
sub
push
push
ret
inc
jg
shll
out
jmp
xchg
add
les
repnz
repnz
stos
daa
je
sahf
cld
add
add
xchg
dec
add
andnps
orb
loope
ret
pusha
sbb
subps
clc
xchg
inc
inc
addl
push
mov
dec
fnsave
xor
nop
and
adc
xor
leave
sub
in
sbb
and
xchg
push
mov
sbb
cmp
notb
xor
jae
mov
push
orb
dec
push
insb
lcall
dec
fdiv
push
loope
iret
add
ret
jg
sbb
clc
or
pop
add
cmp
cmpl
pop
jne
fidivl
daa
inc
push
lock
inc
fs
adc
mov
xchg
mov
jecxz
add
sahf
lcall
adc
and
pxor
pusha
dec
push
movsl
cld
mov
icebp
lods
les
xor
pop
push
mov
add
jle
cmp
jp
mov
orb
mov
jb
sub
mov
imul
jns
add
jo
add
jbe
repnz
lock
jo
mov
sub
into
js
mov
daa
adc
fwait
out
mov
mov
or
cs
insb
pop
dec
std
push
nop
test
cmp
in
or
gs
pop
sbb
lret
mov
xor
cs
mov
pop
mov
cmp
jne
rcll
shl
push
lock
mov
push
push
dec
mov
xor
decb
inc
loope
dec
ja
and
xchg
push
dec
lods
and
or
xor
xchg
imul
sub
jae
js
and
sub
rcrl
adcb
xchg
push
cmp
lods
pop
call
fisubl
mov
sbbl
mov
das
inc
cmp
fstpt
sub
popa
push
jecxz
loopne
or
mov
jge
inc
pop
stos
loopne
shrb
imul
jo
addb
pop
jecxz
or
arpl
sub
push
xchg
sbbb
mov
das
outsb
icebp
rolb
je
fidivl
in
jmp
shl
add
loope
inc
push
jnp
push
xor
jno
xlat
inc
popa
daa
in
adc
mov
std
and
or
and
or
mov
stc
push
push
and
adc
mov
or
fisubrs
inc
inc
and
mov
adc
add
add
inc
pop
pop
fcomip
pop
xchg
es
mov
cs
lock
push
mov
sbb
aaa
not
jle
mov
dec
or
add
mov
lahf
mov
shll
les
test
mov
xor
stos
cmp
inc
cwtl
jno
sub
addl
jo
xor
loopne
out
cmp
daa
mov
jns
pop
mov
les
rcl
test
sub
popf
cli
mov
and
add
mov
dec
in
test
popa
adc
hlt
xor
daa
data16
inc
pusha
popa
push
ret
and
lcall
push
push
cmpsl
sbb
xchg
jmp
pop
dec
adc
movsl
icebp
sbb
jg
sub
out
jne
push
outsl
pusha
fistps
ss
jg
into
pop
jbe
pop
fistps
or
adc
dec
adc
ja
xchg
push
adc
push
pop
clc
cmp
cmp
jo
dec
dec
adc
dec
ret
test
adc
sub
popa
push
sbb
sbb
and
jecxz
lahf
es
push
dec
xchg
fwait
daa
test
lcall
lcall
pop
xchg
cmp
sub
adc
movsb
pop
rolb
dec
jp
sub
mov
mov
and
popa
mov
por
push
sbb
sahf
adc
fimuls
jge
adc
jo
sub
dec
add
xor
xchg
adc
push
sbb
push
push
insb
or
sub
adc
or
adc
pop
cwtl
sarb
mov
sbb
mov
and
sbb
pop
xchg
enter
cmp
jne
adc
je
lret
dec
push
dec
or
cmp
mov
data16
push
addl
sbb
icebp
add
dec
test
sbb
pop
stos
xor
cs
rorl
aas
jmp
mov
mov
dec
shrl
loope
andl
jb
push
push
lock
adc
mov
mov
inc
out
jne
insb
adc
xor
sbb
jmp
jmp
subl
add
loope
sub
xor
cmc
add
push
arpl
pushf
enter
adc
push
subl
mov
xlat
push
sahf
pop
loop
pop
sti
or
push
fsubrp
add
imul
daa
adc
shrb
jns
pop
adc
cmp
rclb
add
mov
movlhps
adc
and
or
dec
xor
stos
mov
sysexit
ja
testb
inc
clc
or
dec
mov
fidivl
lahf
subb
and
fcompl
xor
fistps
adc
loope
push
cmp
inc
mov
imul
adc
lea
daa
dec
loopne
nop
xchg
add
add
jl
clc
add
sbb
loope
inc
lds
lock
xorb
mov
or
lcall
adc
add
inc
cmp
add
inc
pushf
dec
enter
cmp
xchg
or
stc
push
outsb
adc
in
stos
pop
popa
mov
cmp
add
xchg
andl
cltd
fwait
mov
or
lea
or
mov
xor
adc
call
xor
adc
sbb
add
popa
in
sub
in
inc
push
cmp
sti
out
and
cwtl
sbb
aas
mov
adc
fsubrl
inc
or
lea
jge
xchg
movsl
sbb
add
incl
add
add
js
out
push
enter
xchg
loopne
cli
pop
or
xchg
sub
xor
pop
les
jp
lods
adc
lods
pop
addl
push
adc
aaa
xchg
mov
and
rclb
mov
push
add
adc
clc
and
xor
in
filds
xchg
test
in
and
add
cmp
cmp
addb
sub
sbb
adcl
mov
and
jae
mov
inc
mov
xchg
js
jb
test
or
mov
daa
test
mov
mov
add
cmpsl
filds
ds
jmp
cmpl
lcall
rol
inc
dec
addr16
fwait
mov
push
cmp
stos
cmp
and
clc
inc
cmp
je
xor
stos
push
and
popf
xor
or
xchg
or
cltd
shll
mov
inc
inc
inc
clc
or
xchg
dec
or
das
and
cmpsb
mov
adc
nop
loopne
loopne
faddl
pop
sub
sbb
cmpl
lea
daa
xor
xchg
lcall
cmp
mov
xor
das
cmp
scas
cmpsb
rcrl
adc
movsb
mov
sti
adc
mov
or
adc
mov
sub
iret
lock
popa
sti
ss
add
cmpsl
mov
cld
xchg
jbe
pop
nop
jo
les
imull
dec
pop
mov
adc
mov
lds
mull
and
inc
pop
sub
sub
sub
push
adc
push
jmp
and
xor
out
sub
shrl
insl
repnz
test
sbb
inc
cli
jecxz
fwait
je
mov
je
inc
adc
sbb
cmp
mov
adcb
mov
add
ret
lods
aas
mov
lret
lcall
mov
shlb
sbb
hlt
sbb
scas
lock
pop
fcomip
imul
ss
jmp
sti
xor
pop
xor
lahf
inc
jne
mov
and
fmuls
sbb
shlb
sub
add
subl
and
adc
popa
in
dec
add
rclb
enter
dec
dec
jae
pop
jmp
inc
lock
mov
rorb
sub
loop
pop
sbb
das
call
inc
jecxz
add
pop
ret
jns
incb
add
xor
in
and
loop
xchg
lret
or
stos
mov
mov
lods
movsl
mov
ret
cmovb
mov
pop
roll
gs
sub
xlat
xchg
xchg
sbb
adc
add
jae
cmpsl
mov
pusha
stos
sahf
adc
or
and
roll
outsl
jge
or
mov
inc
sbb
shll
test
fsubr
mov
jl
sahf
dec
das
test
adc
and
out
roll
loope
fcmovnu
inc
push
adc
shlb
sahf
dec
add
add
jns
cld
in
sti
pop
mov
cmpl
inc
inc
je
mov
je
dec
cmpb
xchg
pop
and
cmpsl
and
mov
ds
outsl
shlb
pcmpeqd
cmp
xchg
and
iret
out
adc
das
push
or
push
fs
inc
fisubs
adc
mov
ds
cmp
add
jl
sub
push
mov
fmuls
xchg
push
mov
subb
push
and
in
mov
push
pop
add
add
add
add
sbb
es
dec
sbb
rcr
xchg
and
movsl
cmpsb
call
lcall
dec
outsl
or
add
in
aaa
ss
pop
jge
xor
fnsave
mov
je
mov
pop
iret
inc
push
lret
rol
mov
flds
add
shrb
sub
and
inc
add
scas
push
lock
bound
push
adc
or
icebp
sub
jmp
loope
mov
jne
lea
and
push
dec
sti
push
inc
sub
inc
movsb
jmp
sub
popa
arpl
pop
test
sub
addl
add
sub
jno
and
or
aad
outsb
mov
adc
sub
pop
ds
movsb
or
or
push
call
mov
pop
dec
outsb
rol
sub
rcll
mov
inc
pop
cmp
xlat
pop
cmpsl
and
insb
pop
or
or
popf
cmp
sbb
dec
dec
pop
add
inc
arpl
fs
ds
cltd
test
or
mov
jmp
jmp
dec
jne
gs
addr16
jmp
sbb
test
add
inc
inc
in
jl
inc
test
int3
faddl
daa
out
jmp
push
addr16
push
in
adc
inc
mov
rcl
inc
xchg
jo
xorl
adc
dec
sub
pop
dec
add
fcomps
inc
adc
push
mov
add
jo
cmp
push
stc
or
jl
add
movl
xorl
and
rcll
test
insl
and
fiadds
xchg
imul
push
mov
imul
icebp
outsb
pop
pop
inc
xchg
aam
push
adc
add
enter
add
sbb
jmp
dec
rorb
outsl
mov
mov
incl
imul
mov
aaa
xor
fildl
adc
sbb
movsl
push
mov
sub
dec
addr16
mov
je
or
lds
push
push
or
popa
mov
push
out
and
rorb
mov
leave
pop
jno
adc
and
pop
bnd
ret
and
push
testl
sub
xor
fiaddl
loopne
sbb
sub
int3
flds
adc
rcrl
rcr
xlat
jno
lea
daa
inc
jle
and
or
or
push
pop
add
xor
inc
mov
mov
jecxz
adc
push
gs
mov
cli
rolb
popa
jnp
dec
mov
dec
cwtl
mov
lret
push
jno
or
andb
push
push
adc
repz
cmp
out
cltd
push
xchg
and
outsb
or
cmp
int3
jge
outsb
and
test
test
push
orl
mov
aam
lods
punpcklwd
leave
inc
cmp
inc
mov
mov
xor
mov
aad
stc
pop
mov
imul
fs
xor
ss
cli
data16
test
push
sub
dec
mov
push
clc
mov
cmp
ret
inc
pop
lret
clc
fstpl
push
adc
imul
cmpsb
sahf
pop
push
pop
jmp
sbb
out
mov
mov
push
cmp
ret
pcmpgtd
or
test
in
mov
jbe
addr16
mov
lcall
ret
push
adcb
add
dec
rolb
xchg
ss
rorb
jnp
push
test
or
sbbb
sbbb
pop
xchg
jecxz
dec
loopne
pop
addb
fwait
inc
and
leave
fidivrs
rolb
lock
test
or
leave
test
cwtl
pop
scas
pop
divl
dec
adc
and
inc
adc
idivb
es
add
pop
nop
or
inc
adc
pop
adc
dec
dec
or
or
lods
push
inc
or
xorl
and
xor
mov
out
orl
loopne
or
mov
fldcw
pop
inc
test
ss
xlat
daa
jnp
into
push
shlb
cmp
arpl
mov
and
xor
sbb
adc
mov
push
ss
shl
cli
or
decl
dec
add
stc
add
leave
ficoml
sar
lods
pop
push
rcl
loop
into
jg
mov
add
andl
dec
repz
or
and
or
and
pop
mov
pusha
add
cmp
roll
loopne
xchg
stc
adc
sub
fs
outsl
out
fisubrl
add
pop
jmp
scas
jne
outsb
adc
xchg
sbbb
xchg
add
xor
xor
or
repz
movsb
mov
xchg
pop
insl
inc
inc
loop
push
sub
adc
imul
sub
push
ss
pop
cmp
shlb
inc
xrelease
xor
in
mov
shrl
loopne
jmp
scas
xorb
fucomi
ss
or
dec
dec
movsl
sbb
fdivr
mov
iret
dec
jle
xchg
and
imul
incb
ret
or
lret
and
rcll
jns
cmp
and
sub
adc
jmp
sbb
add
sub
mov
pop
enter
dec
clc
out
add
ret
mov
in
stos
jo
push
add
or
push
out
mov
dec
add
mov
sub
inc
lcall
xor
negl
sub
stc
loopne
pop
add
mov
sub
add
adc
cmp
xor
sub
mov
int3
movsb
subl
lcall
sbbb
rorb
and
ret
fs
add
jg
lods
mov
and
test
pop
add
dec
push
insb
scas
test
sub
adc
dec
adc
and
fwait
sbbl
int3
lea
call
shr
mov
scas
xor
sbb
shlb
dec
mov
nop
jbe
and
dec
dec
and
hlt
inc
sbb
mov
mov
push
notl
jle
push
in
test
dec
mov
inc
xchg
dec
adc
sub
fists
inc
add
into
sub
mov
fiaddl
sub
es
push
dec
inc
sbb
sub
xor
push
fstpt
les
insb
and
jbe
xchg
sbb
idiv
stos
inc
cmp
adc
add
pop
call
and
addr16
cmp
push
or
cmp
in
jge
subl
and
data16
push
add
jnp
fistps
or
jno
test
roll
xor
sub
pop
pop
inc
xorl
pop
xchg
hlt
xchg
push
jecxz
test
adc
fsubs
lret
inc
xchg
and
lods
sub
mov
inc
lods
sub
xchg
aad
cmpsb
adc
or
adc
inc
sbb
pushf
add
push
add
xor
addr16
inc
pop
hlt
test
lods
mov
dec
sub
or
sbb
movsb
push
shlb
idiv
daa
je
or
das
std
test
scas
adc
xchg
imul
ss
xchg
dec
repnz
cmpsl
inc
cmpsb
out
les
cmp
je
xchg
inc
ds
idivb
push
pop
mov
and
leave
enter
xor
jnp
add
pop
popa
leave
push
push
xchg
push
movsb
stos
stos
jne
sbb
and
push
or
int
or
in
jne
jmp
movlps
dec
or
add
cmp
std
dec
aaa
sub
clc
cmp
xor
jmp
cmp
pop
in
jnp
jne
jecxz
pop
pop
jne
and
and
xor
push
rorb
out
fidivs
lock
cmp
jp
mov
popa
in
jp
mov
adc
sbb
out
lods
ret
lods
andl
out
arpl
inc
pop
jne
mov
fildl
cmpsb
out
mov
adc
loop
in
repnz
cmp
jecxz
dec
mov
mov
dec
mov
dec
mov
leave
xchg
xchg
dec
or
or
cmp
and
xor
mov
adc
leave
push
add
jae
shll
lcall
xchg
cmp
dec
hlt
sbb
mov
jae
cmp
movsb
leave
lds
mov
adc
adc
popf
inc
push
or
mov
jmp
testl
out
mov
adcl
sbb
imul
call
mulb
call
mov
in
mov
and
stos
lret
lcall
mov
lods
xchg
adc
adc
sub
sbb
je
cmp
xor
aaa
test
sub
in
rcrb
jne
sbb
gs
lret
mov
push
in
mov
sub
mov
inc
das
inc
jo,pn
sub
movd
sbb
adc
add
xchg
inc
ja
enter
sar
insl
in
cmp
mov
adc
add
adc
sbb
mov
data16
mov
add
push
popa
shlb
xor
mov
push
lcall
adc
sahf
sub
lea
je
dec
insb
add
dec
or
ret
pop
add
es
mov
pushf
add
adc
push
mov
xchg
jb
xor
cwtl
push
stos
gs
and
mov
mov
aam
lods
xchg
ret
xchg
sar
es
icebp
or
jmp
ss
je
jo
mov
int3
jmp
sbb
cmp
xchg
cwtl
xor
and
pop
push
imul
shlb
fbld
xchg
arpl
dec
mov
int3
or
cli
mov
or
clc
sbb
xchg
inc
ljmp
bound
int
lret
push
test
jno
adc
in
fstpt
add
por
inc
sbb
add
add
inc
dec
lcall
add
in
push
jle
pop
rcr
inc
sub
cmp
out
cmp
popf
xchg
nop
je
cltd
or
in
xchg
sbb
and
push
mov
inc
inc
jp
fildl
or
and
movsb
out
je
push
or
adc
addl
fcoml
mov
adc
fldt
mov
test
das
imul
jp
jnp
cmp
cmpb
xorb
cltd
leave
pusha
fsubrl
int
xor
cmp
xor
adc
loopne
jl
pop
cmp
pop
adc
adc
or
dec
fdivrl
pop
pop
push
push
mov
in
dec
enter
sti
jmp
pop
in
sbbl
push
xchg
loope
insl
sbb
loop
add
push
and
inc
push
adc
jo
xor
sbb
pop
mov
push
push
sahf
arpl
xchg
add
movsb
mov
in
mov
leave
pop
push
and
rorb
add
jge
lods
push
fcomps
aas
cmpsl
jne
cmp
push
jg
push
adc
loopne
imul
jo
fcompl
or
or
and
sub
add
sar
jne
mov
sahf
push
rorl
add
arpl
xchg
or
add
sbb
jbe
dec
add
xchg
cltd
add
push
pop
mov
cmp
lock
add
mov
fiadds
es
imul
shrb
das
and
je
and
pop
xor
xorl
xor
xchg
mov
loopne
lock
push
aam
pop
sbb
rorl
test
scas
add
aad
lahf
js
mov
jmp
cmp
push
js
sbb
sub
pop
pushl
dec
adc
or
push
fmuls
rorb
dec
je
mov
inc
inc
arpl
inc
add
das
xchg
cltd
frstor
into
xchg
outsb
gs
fbstp
shrl
mov
nop
lods
dec
inc
mov
and
add
adc
rcll
xchg
movsb
test
adcb
add
inc
pop
sbb
sub
mov
flds
imul
cltd
mov
sbb
or
pop
jge
shll
jae
ret
mov
mov
out
rcrb
sbb
mov
xchg
cmp
pop
xchg
xchg
mov
sar
or
sub
mov
mov
lds
je
pop
loopne
mov
inc
popl
push
xchg
outsl
cmp
lret
and
add
adc
add
fdivl
je
push
dec
sub
stc
cmp
stos
sub
loopne,pt
or
xchg
cmpb
insb
xlat
jne
mov
add
pop
ljmp
push
addb
push
xchg
xchg
sub
pop
test
pop
and
mov
js
dec
push
dec
jne
add
push
lods
frstor
aas
dec
test
jae
cmp
and
dec
push
ficomps
cmp
and
xor
call
loope
out
push
aam
mov
pop
adc
push
fnsave
or
xor
lods
mov
fisubrl
mov
sbb
xchg
rcrb
dec
aaa
jo
inc
cmpxchg8b
in
ret
mov
cmp
jmp
xor
adc
or
dec
xor
sbb
shlb
mov
mov
dec
push
or
pop
push
mov
les
cmpsb
dec
xor
adc
mov
ret
shlb
aam
sahf
mov
in
jae
xor
in
mov
sbb
or
sbb
add
cmpsl
push
insb
pop
dec
ds
pop
jecxz
add
or
in
adc
je
pusha
nop
inc
ret
dec
adc
nop
js
enter
or
mov
or
in
pop
or
pop
dec
lea
inc
aas
dec
and
push
sbb
rep
jae
orb
rolb
or
sbb
ds
pushf
pop
dec
bound
dec
adc
ljmp
and
add
push
fsts
lret
decb
andl
rclb
scas
dec
decl
loop
and
inc
cmp
push
icebp
xor
aaa
or
inc
push
sahf
test
mov
push
push
movsl
push
adc
lock
add
xor
enter
xchg
dec
loop
nop
aad
inc
pop
call
pop
outsl
and
mov
push
shlb
jp
lods
sbbb
lret
add
mov
pushf
push
scas
movsl
and
mov
movsl
gs
adcl
inc
mov
enter
inc
aam
push
xchg
jo
pushf
fsubl
sbb
pop
cmp
ljmp
sub
adc
out
xchg
xor
lods
push
pusha
xchg
mull
push
imul
xchg
nop
insb
mov
daa
adc
mov
leave
inc
adc
sahf
push
fs
out
xlat
sub
jne
inc
add
lock
xchg
pusha
push
ret
inc
xchg
pop
orl
sbb
jge
adc
xor
aaa
movsb
loopne
or
add
push
jnp
dec
pop
in
addr16
fcoml
clc
sub
inc
fildl
push
or
jnp
xchg
adc
std
insl
cmp
inc
insl
out
xchg
sub
push
int
cmp
stos
movsl
xor
sti
cs
sub
sub
imul
lret
xchg
shlb
xchg
cmp
or
ja
sub
loop
jge
mov
pusha
pop
dec
jmp
pop
xorl
ja
add
sub
dec
mov
inc
push
rcll
jo
idiv
adc
push
dec
fcmovu
lods
jmp
xchg
fcomps
or
sub
fstpt
sbb
add
sbb
stos
pop
mov
les
mov
mov
cmpsl
fbstp
push
pop
jb
sbb
adc
jmp
fwait
jg
inc
in
test
pop
adc
lock
xchg
jl
sub
inc
mov
xor
and
adc
fs
xchg
mov
xor
xchg
dec
call
push
adc
mov
add
or
sub
push
jg
pop
in
nop
pop
sbb
jl
add
jg
xchg
or
sbb
insl
mov
popf
and
pop
dec
movsl
jmp
mov
sub
sub
mov
dec
jno
or
dec
int
sbb
pop
mov
xchg
mov
fisttpll
lcall
gs
cs
add
mov
mov
sbb
sbb
outsl
push
adc
mov
push
dec
sub
pop
and
aaa
add
mov
insl
xchg
in
popa
mov
mov
loopne
or
adc
sub
mov
adc
clc
mov
ja
lcall
xchg
ret
sti
and
xor
cld
add
scas
xchg
push
pop
cld
dec
mov
or
pop
aam
cmp
or
mov
inc
push
xor
cmp
daa
and
adc
movsl
add
mov
movsb
hlt
mov
aam
pop
leave
clc
sbb
fidivrs
loopne
push
fistpl
adc
xchg
lret
xchg
mov
cmp
pop
mov
jae
aaa
push
xor
add
jg
add
mov
lret
insl
frstor
mov
push
outsl
or
aad
into
rorl
movsb
pop
lret
pushf
mov
xchg
fisttpll
stos
or
out
jmp
insb
sete
ud2
cmpsb
xorb
adc
inc
mov
sbb
in
pop
cmp
push
adc
jl
jae
arpl
push
insl
pop
xlat
jle
adc
cmc
pop
cmp
and
push
out
push
nop
push
push
movsb
inc
pop
jno
xchg
out
inc
loope
push
dec
mov
push
lret
jo
xchg
mov
cmp
mov
das
adc
xor
inc
pop
xor
mov
inc
mov
loop
sbb
rcrb
pop
sub
inc
lahf
xor
add
inc
jge
stos
call
es
mov
dec
mov
push
mov
push
das
add
mov
push
mov
fists
lret
pop
outsl
inc
punpckldq
sub
pop
mov
or
xchg
daa
jecxz
ja
cmp
xchg
xchg
jmp
sbb
daa
adc
cmp
test
mov
pop
pop
push
mov
ljmp
dec
pusha
mov
push
sub
mov
aaa
das
or
lahf
lcall
sub
ljmp
push
sub
jbe
cltd
adc
dec
dec
ja
inc
int3
and
cmp
sub
and
sub
adc
mov
add
in
je
adc
pop
mov
or
scas
or
and
test
mov
push
inc
inc
scas
sub
orb
cmp
sub
fadd
test
lcall
bound
and
pop
js
add
add
sti
add
pop
cli
push
pop
push
mov
lods
dec
mov
adc
add
dec
and
jl
mov
mov
mov
nop
in
lock
pop
sbb
mov
cmpsl
add
and
xchg
aaa
test
pusha
bound
test
ficoml
and
jb
push
xor
add
jb
js
adc
adc
pop
jge
rclb
xor
sub
jl
sub
sbb
jge
lods
add
push
in
cmp
mov
dec
lds
xchg
pop
sub
dec
cmovge
dec
dec
imul
inc
call
jo
push
adc
and
dec
pop
push
dec
pushf
ficoml
push
insl
loop
and
aaa
cmp
imul
inc
jo
or
mov
pop
inc
pusha
insb
insb
lcall
iret
je
add
hlt
xor
arpl
xchg
cs
and
in
out
leave
jns
inc
pop
push
xchg
fnstenv
inc
mov
sbb
pop
add
popa
or
mov
pop
fnstcw
mov
popa
out
cwtl
sbb
pop
adc
das
inc
in
mov
inc
cli
mov
jl
or
jg
mov
movsb
movsl
ja
cmc
xor
pop
pop
cli
jno
clc
adc
in
adc
movb
nop
dec
fdivl
scas
mov
lods
xor
nop
add
jmp
insb
add
inc
fwait
cmpl
mov
lahf
add
int
mov
cmp
push
pop
jg
inc
dec
add
add
sub
cmp
das
add
adc
push
roll
xchg
ret
imul
shlb
adc
jg
mov
jo
mov
pop
mov
out
jmp
ds
adc
xchg
jae
fcmovnu
jmp
movsl
sbb
xor
pop
fdivrs
enter
aad
dec
jbe
or
xor
movsb
add
pop
push
test
jmp
add
sub
movsl
mov
movb
or
mov
les
imull
xchg
mov
int3
and
xchg
mov
add
inc
jno
jp
push
movsb
mov
jmp
lea
push
unpckhps
or
fwait
js
cmp
jmp
loopne
mov
xor
test
adc
addl
adc
iret
push
in
mov
inc
cmp
mov
pop
cmp
sarl
or
outsb
sub
cmp
insl
adc
inc
pop
push
sub
add
rcll
dec
cmpsl
or
mov
fisubrl
dec
sbb
push
aaa
or
aaa
add
pushl
lock
adc
jne
cmpl
ss
xor
mov
arpl
pop
pop
dec
pop
push
inc
aaa
gs
movb
rorl
sub
jmp
cmc
or
or
adc
mov
add
adc
out
xor
sub
jmp
mov
divb
push
in
mov
inc
add
or
jp
jge
mov
jne
mov
add
cmpsb
push
aad
jmp
inc
inc
dec
js
mov
fiaddl
and
adc
mov
xor
pop
add
jl
outsl
jnp
jne
out
pop
xchg
or
and
inc
push
ljmp
or
pop
psubusw
mov
xor
xchg
pop
mov
mov
loopne
sbbb
pop
adc
icebp
pop
inc
shr
push
inc
inc
cmpxchg
or
xchg
sub
fdivs
cmp
adc
in
pop
rcrb
cltd
dec
xor
outsl
xor
mov
jno
dec
shll
roll
scas
lea
add
fstp
xchg
xchg
pop
popf
dec
cmp
lods
jg
pop
pop
ja
sbb
inc
mov
rcl
int3
shll
push
popa
and
adcb
adc
fcmovb
push
mov
notb
adcb
mov
imul
adc
iret
and
dec
jmp
mov
lcall
mov
sbb
pop
dec
inc
push
cltd
int
xchg
xor
inc
mov
fildl
sbb
inc
dec
pop
les
sahf
lea
jbe
xor
cmc
adc
sub
xor
add
mov
stos
or
or
orl
dec
inc
stos
icebp
or
pop
lret
dec
lock
sbb
out
sub
cmpsb
jg
adc
xor
in
push
mov
test
scas
add
jbe
xchg
or
xchg
jecxz
xor
inc
in
inc
mov
inc
lods
add
cmp
iret
mov
or
jbe
pop
sbb
xor
rolb
jo
dec
xor
lret
inc
cwtl
lods
push
aas
adc
lods
pop
wbinvd
sub
hlt
sub
add
xor
cmpsb
pop
shlb
cmp
je
adc
fsubs
outsb
inc
inc
repnz
out
scas
push
repnz
add
and
scas
dec
dec
sub
inc
out
mov
andl
lock
sub
pop
add
arpl
popa
jmp
add
and
jp
lahf
xchg
hlt
pop
inc
sbb
cmpsb
add
cmp
or
lret
das
pop
pop
clc
mov
mov
mov
xor
mov
addb
lock
adc
jne
mov
cmp
fdiv
arpl
inc
pop
mov
les
cld
sbb
cmp
cmp
arpl
imul
push
cmp
ficoml
test
mov
jne
sub
lock
sub
mov
enter
xchg
xchg
pop
outsl
or
fadd
ficoms
mov
or
ror
in
jl
xor
scas
mov
xor
pop
cmp
or
jae
rcrb
es
pop
pop
push
and
jecxz
mov
je
xchg
clc
dec
sti
and
or
dec
pop
adc
and
add
movd
mov
adc
rolb
jo
mov
jmp
imul
pop
mov
dec
notl
xor
imul
xchg
adc
out
xchg
in
inc
imul
xchg
add
sbb
data16
test
fstl
enter
sub
loopne
and
jo
hlt
xchg
into
ds
dec
push
push
and
xor
add
cmc
xor
pop
cmp
xlat
add
sbb
push
push
aas
fisttpl
pop
rorb
add
inc
dec
or
push
inc
sub
sahf
add
fwait
mov
test
or
jbe
or
jne
add
into
bound
xor
pop
inc
mov
mov
adc
sub
aas
cltd
adc
and
add
ljmp
add
adc
dec
jl
aad
cmp
mov
test
jmp
push
dec
arpl
ja
daa
sbb
mov
ret
insl
mov
clc
outsb
sub
ret
or
sarb
push
push
add
sarl
adc
push
testb
fwait
push
push
xor
add
adc
mov
add
je
idivl
or
cmp
pop
ret
push
lret
je
pop
mov
les
imul
mov
jmp
js
rorb
or
shlb
fstpl
sti
js
imull
inc
push
les
dec
mov
outsb
jmp
push
inc
leave
inc
daa
add
lahf
pop
ss
cmp
pop
rcr
sahf
jl
and
pop
adc
jne
mov
or
call
in
pop
mov
push
push
pop
push
dec
in
imul
and
mov
lea
fs
cmovl
inc
daa
push
sti
pusha
test
sbbb
outsb
ss
push
pop
cmp
adc
jle
clc
mov
fisttpl
mov
jbe
pushl
jl
sahf
insb
and
movsl
or
push
pop
xorb
ror
call
pop
lock
add
sbb
mov
andl
dec
pop
inc
outsl
mov
adc
pop
aam
jecxz
sbb
aam
push
cs
xchg
cmp
push
mov
adcb
and
aam
mov
push
adc
and
push
les
or
xlat
add
and
arpl
and
jo
sbb
test
and
jl
fcomps
and
es
add
add
and
xchg
push
nop
cli
mov
movb
fwait
sub
pop
cs
and
insb
test
movsb
and
mov
fsubrs
sbb
mov
or
movl
hlt
jge
add
and
les
xor
repz
and
or
add
sub
popa
mov
sbb
dec
adc
mov
xchg
in
and
dec
cwtl
jns
enter
stos
incb
jge
adcl
sub
out
fisttps
cmp
jecxz,pn
data16
or
cltd
mov
or
add
cs
pop
cmp
adc
je
dec
jo
int3
ret
pusha
pop
orl
jge
mov
out
mov
imul
in
loopne
aaa
fmull
shl
aam
test
or
adc
and
pop
xor
lea
dec
dec
dec
push
inc
push
sbb
fwait
movb
or
dec
or
jae
xchg
popa
jno
xor
or
test
lret
xor
xchg
sbb
movl
xchg
pop
insl
or
movsl
out
lret
sbb
lret
mov
enter
fs
je
jo
shrl
and
insb
mov
add
ss
test
xor
xorb
mov
pop
cmp
pop
icebp
and
jnp
cmp
adc
test
les
inc
dec
les
xor
xor
adc
cwtl
inc
xchg
lock
ret
movsl
jne
add
cmp
xlat
add
test
xchg
add
sub
imul
enter
loopne
push
inc
dec
inc
mov
les
or
jb
movsl
or
mov
inc
add
and
pop
push
popa
jmp
xchg
jge
cmp
cmp
sbb
xor
rcl
xchg
int3
nop
and
lock
dec
mov
xchg
dec
movsl
add
fistpl
dec
insb
sub
les
or
fstl
xor
fdivs
sbb
mov
add
sbb
or
jne
aad
adc
bound
sub
dec
lods
mov
mov
leave
or
sub
prefetch
outsl
or
mov
or
cmp
mov
or
dec
je
pusha
je
enter
hlt
jae
sbb
mov
mov
inc
je
je
mov
aaa
or
or
adc
push
iret
jg
xchg
add
sbb
dec
lock
add
idivl
push
jmp
inc
orb
adc
cmc
cmpsl
sbb
je
fbld
xor
lds
push
mov
sub
std
in
cmc
imul
xchg
xchg
inc
adc
movsb
mov
leave
cltd
and
push
mov
jmp
nop
push
pop
pop
and
push
popa
and
adc
push
pop
fisubl
flds
pop
push
addl
mov
adc
inc
xchg
nop
or
aad
cmpl
incl
xlat
in
mov
push
dec
cmp
dec
rcl
xchg
push
mov
aam
xchg
mov
negl
lsl
mov
aad
xor
sub
xor
pop
pop
and
fmull
add
jg
push
add
pop
jo
mov
pop
push
mov
push
inc
sbb
cwtl
andb
les
or
inc
xchg
push
enter
aas
fadd
adc
fsubrs
xchg
push
movsl
sub
jne
adc
and
sbb
and
jbe
xor
addr16
sti
adc
repnz
sub
inc
push
imul
jne
mov
pop
push
mov
jge
pop
bound
ret
add
and
push
or
mov
xchg
mov
adc
mov
xchg
mov
rcll
mov
and
and
aad
cmpl
push
xchg
je
test
fdiv
clc
xchg
inc
mov
add
inc
arpl
mov
jmp
cltd
das
and
xlat
das
push
pushf
add
loopne
xchg
out
loope
mov
mov
and
and
add
test
aam
add
int3
jb
push
das
xor
das
das
lret
or
xor
je
cld
pusha
cmpb
inc
pop
dec
xor
or
push
jnp
adc
addr16
daa
in
addb
pusha
mov
or
mov
add
mov
fcomps
mov
mov
push
mov
adc
xchg
xorb
pushf
push
not
sbb
mov
insb
add
and
stos
inc
ficomps
sbb
push
and
rclb
jno
sbb
fcoms
sub
inc
ret
mov
add
testb
xor
adc
je
jo
addl
insl
add
push
lock
jl
call
push
insl
or
into
mov
or
or
pop
cld
mov
cmpsb
aad
ss
push
pop
fistpll
cmpsl
sub
in
adc
shll
gs
mov
arpl
push
sbb
sbb
push
push
xchg
pushf
mov
daa
add
mov
fnsave
mov
dec
scas
xchg
push
cmpsb
sbb
es
dec
add
imul
imul
jne
bound
sbb
rolb
ret
pop
xchg
jg
and
cmp
lock
sub
dec
dec
and
shlb
in
mov
popf
sub
dec
stos
dec
add
push
add
sbb
es
add
lahf
insb
dec
mov
pop
mov
add
insl
dec
mov
xchg
test
mov
or
push
xor
icebp
ljmp
call
dec
lret
add
scas
mul
pop
xor
adc
add
add
jae
inc
cmp
daa
jmp
das
popf
mov
dec
mull
pop
mov
add
add
add
xor
and
xor
outsb
and
pop
mov
in
adc
cmpsl
insl
pop
loop
push
outsb
movsb
cwtl
fsubs
popa
and
jge
out
sub
loopne
fsubp
scas
rorb
cs
xchg
sub
stos
stc
fisttpl
ja
mov
add
dec
cmp
and
jnp
mov
cmpb
jge
leave
insl
mov
adc
push
inc
xchg
daa
ret
push
mov
test
xchg
test
roll
dec
and
pop
pop
push
jbe
sub
jmp
mov
dec
push
push
adc
shrl
shrb
and
rcl
dec
sbb
mov
or
mov
pusha
cmpb
lret
add
mov
sbb
jge
xchg
sarl
aam
fldcw
xor
test
mov
cmp
and
jecxz
sub
mov
pop
add
sbb
fdecstp
scas
add
adc
sbb
adc
inc
daa
inc
addb
ss
sub
pop
dec
xchg
jp
pop
aam
mov
lea
inc
movsl
sub
and
lret
pop
jo
stc
mov
jl
dec
xchg
xor
xor
das
adc
fnstsw
inc
cmpsl
mov
push
push
or
xor
mov
sub
pop
push
add
push
pop
popf
push
mov
mov
out
inc
pop
push
das
in
xchg
jno
js
xor
fbld
xchg
aad
cmp
mov
ljmp
push
mulb
mov
jmp
mov
mov
bound
xor
xchg
test
and
gs
gs
loopne
das
push
mov
adc
jmp
cmc
add
adc
shl
outsl
or
pop
jne
cmp
and
lcall
mov
repnz
push
mov
fldenv
and
inc
hlt
adc
ljmp
mov
jo
cmp
push
jge
dec
adc
add
pop
insl
imul
subb
push
cltd
inc
jge
pop
pop
adc
mov
in
pushf
sub
cmp
lea
push
pop
cltd
dec
jae
cwtl
test
inc
mov
xorl
cli
dec
xor
mov
or
sbb
xor
call
lods
sub
lds
in
adc
dec
adc
lds
sbb
popf
inc
inc
or
add
sub
je
cmpsb
or
push
std
adc
aas
addps
cmp
popa
and
mov
out
jne
xor
xchg
and
xchg
lds
xlat
jmp
jle
mov
lods
lock
push
test
add
nop
push
test
add
outsl
std
adc
push
xadd
rorb
in
push
adc
dec
mov
movsb
mov
add
jmp
push
cs
or
push
sti
pop
ret
cmp
je
mov
sbb
cld
sub
cmp
loop
mov
imul
inc
inc
xor
scas
mov
xor
jmp
and
add
ret
fstpt
cltd
jne
fildll
lods
or
rorb
mov
cmp
sub
test
mov
sub
lret
stos
ret
adc
sub
xchg
xor
mov
sbb
adc
pop
cmp
adc
and
xor
daa
aam
ret
cltd
lahf
inc
test
inc
out
inc
cmpsl
dec
addr16
jb
xchg
ja
inc
pop
jne
jg
cs
mov
rorl
test
jne
cmp
xchg
hlt
add
jmp
push
iret
testl
clc
je
jmp
lcall
testl
adc
mov
jns
aam
ds
xchg
push
pop
or
sbb
xchg
inc
and
or
mov
add
pop
dec
call
imul
sti
clc
push
aaa
mov
mov
scas
test
scas
dec
push
adc
and
aad
or
or
inc
add
pop
push
adc
push
push
push
cmpsb
ret
dec
dec
or
call
mov
cmp
fsubs
outsl
insl
pop
push
jp
xchg
mov
push
jl
addb
or
xor
adc
inc
dec
sbb
fdivl
jl
or
jbe
imul
mov
dec
bnd
sub
lcall
sbb
jge
sbbb
push
push
cmp
loopne
test
pop
nop
fsubrs
sarb
cmp
call
sbb
les
cmc
cmp
mov
scas
jge
add
xor
inc
sbb
jb
inc
xchg
stos
pop
xchg
bound
enter
lahf
dec
mov
push
dec
pop
sub
cmp
ficomps
outsl
sbb
push
orl
or
ds
xor
out
es
jne
or
mov
dec
sub
jne
and
orl
sahf
xor
aaa
add
sbb
inc
push
pop
xorb
sbb
ret
push
push
aad
ret
gs
mov
adc
mov
lcall
rolb
lret
aad
add
adc
nop
add
mov
cmpsb
jne
movsl
push
fwait
addr16
cmp
jne
cmp
xor
inc
imul
sub
mov
or
out
sbb
adc
push
pop
sub
imul
cmp
movsb
rol
xchg
fsub
mov
push
jbe
adc
in
sbb
xchg
nop
les
dec
add
test
sub
dec
pop
xor
or
mov
in
or
fwait
push
movsb
pop
cmp
out
or
pop
adc
lock
js
push
adc
inc
testl
and
dec
sbb
pop
shl
dec
xchg
push
or
or
xorb
stos
add
mov
jle
lods
inc
out
push
fs
dec
loope
mov
les
mov
add
mov
or
bswap
xor
pop
pop
mov
or
xchg
mov
or
aam
cmp
outsl
dec
les
pop
mov
rolb
jmp
push
sarb
pusha
arpl
lock
jp
cltd
mov
pop
jo
notl
imul
mov
sahf
stos
test
mov
xor
mov
or
arpl
incb
xchg
mov
push
inc
movsb
mov
and
jbe
rcrl
adc
mov
cmp
fldl
jle
sub
cmp
pop
inc
mov
int
xor
cmpsb
inc
clc
jne
ret
jns
nop
cmp
adcb
xor
sbb
and
add
add
pop
js
mov
lahf
sub
add
rcrb
test
xor
pop
jne
orl
or
pusha
pop
lock
sub
ss
or
fprem
call
push
sbb
aaa
xchg
inc
and
push
fisubl
fstps
dec
inc
lea
xchg
cmp
out
xchg
push
push
sbb
adc
xor
xor
lcall
loopne
mov
ret
mov
into
mov
sbb
jb
mov
sub
inc
imul
dec
lcall
add
jae
push
xor
pushf
fimull
xchg
lods
pop
mov
in
xchg
lds
inc
push
pop
ja
les
pop
scas
mov
push
add
sub
test
sbb
xor
jmp
test
sub
loop
lahf
mov
scas
ret
movb
aad
seto
cmpl
fnstcw
inc
jp
xlat
sbb
dec
sbb
and
push
sti
je
incl
jae
cmpl
dec
mov
mov
dec
lahf
fimull
test
add
pop
cli
in
sbb
fwait
repnz
push
pop
mov
and
jmp
jle
jbe
jl
inc
ds
jne
outsl
mov
lods
mov
push
push
loope
xchg
pop
jne
clc
sub
lds
pop
dec
test
add
cmpsl
mov
pop
pusha
mov
push
scas
mov
fildl
xor
repnz
xor
loop
push
andl
mov
mov
int3
je
add
inc
loope
jge
data16
sub
push
sub
lret
and
mov
mov
int
lret
sub
aaa
pop
and
sub
stos
scas
xchg
cmp
les
fisubs
pushl
push
mov
shrl
in
mov
and
shrb
pop
and
cmp
ss
or
xor
mov
mov
stos
push
clc
pop
add
add
addr16
adc
adc
or
jb
or
and
sbb
test
pop
adc
add
hlt
and
xchg
sahf
adc
adc
xchg
loope
jb
adc
add
int3
sarl
cmp
xchg
mov
movsl
mov
dec
mov
sti
lock
push
or
sub
test
shll
out
inc
addb
fmull
or
setno
sbb
push
mov
add
nop
daa
nop
rcr
pop
rcll
pop
fisttpl
mov
pop
jb
bound
mov
pop
pop
mov
sub
and
icebp
push
xlat
add
mov
aaa
fs
and
sub
les
inc
and
sbb
add
or
inc
es
push
pop
and
and
and
int3
or
jns
adc
js
xor
nop
xchg
push
insl
and
sbbb
inc
mov
jae
add
or
call
push
hlt
adc
cmp
adc
orps
add
or
dec
loopne
ret
inc
inc
roll
sbb
pop
or
out
aam
adc
faddl
or
add
mov
outsb
sub
ret
push
push
jae
cltd
or
inc
mov
sbb
insl
movzwl
or
push
adc
inc
add
mov
dec
xchg
sub
push
and
mov
call
jno
imul
and
push
scas
scas
fwait
aad
sub
lods
loope
mov
sub
xor
pop
sbbl
aad
xor
sbb
sarb
nop
fcomip
pop
sub
lea
test
int3
sub
cmc
aad
and
jmp
ror
loop
xchg
push
push
and
inc
arpl
loope
push
fsubl
mov
adc
rol
pop
cmp
mov
mov
cmp
mov
sbb
add
mov
xor
pop
fsubrs
mov
jle
push
add
inc
test
mov
jg
popf
ss
insb
add
mov
push
andl
add
daa
push
daa
arpl
or
and
call
sub
mov
cmp
prefetch
movsb
push
pop
dec
jns
adc
xor
pop
arpl
xor
jns
js
cmp
mov
mov
lcall
sbb
add
push
mov
shr
xor
rcr
adc
data16
sub
add
les
sub
sub
orl
sbb
inc
imul
and
lds
loopne
xchg
ss
iret
inc
dec
pop
mov
aam
lock
aaa
mov
sub
sbb
and
dec
aaa
enter
mov
mov
push
adc
out
pop
pop
sahf
loopne
mov
push
sub
test
push
fisubrs
lods
dec
or
adc
dec
and
arpl
sbb
mov
xor
xor
sub
inc
in
pop
mov
loope
and
cmp
push
sbb
or
cli
jne
daa
pop
add
sub
xchg
push
fdivl
dec
pusha
stos
insl
push
xchg
xor
sub
mov
sahf
push
sbb
pop
or
and
mov
je
xor
iret
out
push
xchg
pusha
scas
mov
pop
icebp
xor
jg
js
out
into
push
mov
mov
mov
pop
repz
mov
and
enter
push
xchg
andb
ret
ja
sub
shl
xor
lock
aam
aaa
clc
decb
clc
add
lock
rclb
stos
add
adc
adc
pusha
into
xor
pop
dec
pushf
arpl
sbb
lock
outsl
ja
cmp
roll
loopne
aas
mov
popa
pop
sar
loopne
cmp
jge
mov
sub
clc
loopne
and
sbb
inc
xor
pop
or
rclb
fadd
mov
cmpsb
xlat
inc
xor
push
loopne
lock
or
sub
enter
rorb
out
lock
mov
and
and
add
adc
xorb
inc
sbb
sbb
pop
pop
add
ret
cmp
xchg
add
arpl
cmp
push
mov
push
xchg
fsubs
xorl
mov
es
adc
sub
jno
repz
mov
fdivrs
sub
xor
hlt
fsubp
addb
and
push
lcall
mov
add
jo
cwtl
loopne
and
xchg
bound
mov
icebp
push
imul
cmpsl
add
dec
mov
and
add
je
and
ds
jnp
xchg
sarb
inc
jbe
lea
jecxz
add
inc
sbb
xor
adc
sbb
inc
mov
popf
push
or
rorb
in
js
gs
lock
adc
inc
pusha
sub
and
push
imul
push
les
push
pop
sbb
add
sub
push
insl
cmp
mov
aaa
sub
test
jne
or
insl
movsb
or
std
add
movsb
pushf
aas
adc
imul
das
jo,pn
or
jg
push
jb
dec
pop
xchg
jno
mov
in
dec
mov
movsb
push
ss
lods
int
add
push
lea
dec
jp
jg
pop
mov
jl
cmp
jbe
mov
or
pop
or
add
ret
fidivs
mov
notrack
jae
add
js
push
push
cmpl
faddp
les
mov
or
lock
pusha
bound
pop
mov
adc
call
add
add
ds
or
push
adc
clc
adc
mov
leave
orl
loopne
int3
push
dec
cli
sbb
inc
popf
inc
mov
test
jmp
lods
punpckhwd
nop
push
das
ds
popf
jne
sbb
lods
xor
add
inc
mov
jns
fistl
hlt
pusha
pop
add
sub
je
or
cwtl
cmpsl
aam
mov
aas
stos
push
adc
fsubl
sbb
jo
sub
jo
push
shlb
xor
jle
pop
add
subl
cmpl
lods
jbe
ret
push
test
sbb
mov
ljmp
adc
adc
xlat
and
sub
fcmovu
rcrb
sbb
fucomi
sub
into
or
insb
mov
jecxz
es
fs
lahf
in
and
scas
and
inc
sbb
inc
mov
sbb
sar
cmp
inc
addb
sbb
pop
cmp
clts
push
aaa
popa
dec
jge
scas
stos
or
mov
pop
mov
loope
inc
cwtl
mov
dec
subb
xor
adc
jmp
pop
sub
mov
ja
sbb
and
dec
xchg
adc
lods
lds
adc
and
push
mov
les
inc
adc
pop
and
cmp
test
push
popf
ret
cmp
inc
lods
out
rorl
aaa
stc
sbb
inc
fs
fisubl
push
mov
pop
gs
lret
fisubl
jg
rolb
fld
jecxz
lret
and
add
jno
add
or
cmp
je
test
aaa
lds
not
adc
mov
xor
pop
sbb
or
test
repz
inc
outsb
push
adc
pusha
mov
push
xchg
aam
int
loop
nop
popa
dec
cmp
dec
ljmp
outsb
inc
outsb
sub
in
dec
cld
push
add
xor
or
les
xchg
add
sub
adc
pop
gs
pop
mov
inc
cmp
jb
xchg
adc
bound
xor
push
and
mov
faddp
add
movsb
ret
mov
or
out
jl
ds
das
cltd
or
pop
lret
loop
test
sbb
imul
out
cmp
nop
xor
dec
movsl
mov
push
and
ret
add
push
mov
sbb
push
adc
inc
movsb
sbb
outsl
loope
movsb
jae
jnp
ret
jae
bound
adcl
adc
popf
int3
jmp
mov
dec
test
lds
and
xchg
sbb
imul
dec
xchg
and
xchg
xchg
xor
jg
mov
sub
sub
dec
das
adc
in
xchg
icebp
insb
mov
nop
pop
jp
xor
push
push
cmpb
sbb
inc
jp
pop
sub
popa
test
leave
inc
dec
mov
add
sbb
xor
addr16
lock
gs
push
sarb
pop
pop
daa
push
or
outsl
jmp
push
add
sbb
inc
sub
inc
mov
or
sbb
stos
imul
xchg
pop
add
push
cmp
inc
or
xchg
lgdtl
adc
and
inc
sub
xor
add
push
movsb
fnsave
jnp
adc
and
add
jle
push
adc
add
addr16
movsb
or
or
adc
outsl
adc
adc
sbb
or
or
add
pushf
sbb
add
jo
arpl
sbb
add
dec
popf
xor
int
enter
and
cmpb
mov
xor
into
pop
sbb
xchg
lea
and
pop
lock
push
cltd
dec
inc
jmp
sbb
mov
pop
lods
aam
or
push
mov
or
test
pop
mulb
xchg
cs
sub
mov
aam
aam
adc
dec
nop
pop
jnp
or
shll
sahf
push
xor
lds
je
push
shrb
xchg
andb
fcmovne
sub
sbb
dec
test
das
sbb
aaa
mov
jmp
outsb
cs
sti
add
and
and
sbb
movsl
imul
sbb
sub
cmp
sub
add
sbb
ljmp
popa
lcall
nop
daa
inc
mov
xchg
cmp
rclb
add
pop
add
out
inc
dec
in
shlb
pop
clc
movsl
sub
add
lock
xor
mov
mov
mov
loope
mov
or
pop
inc
in
jge
add
gs
sbb
les
and
sbb
int
pop
add
ljmp
and
in
in
push
mov
xor
add
scas
adc
mov
outsl
and
pop
push
jle
mov
loopne
and
f2xm1
outsl
hlt
cmp
adc
scas
sbbl
cwtl
cmp
pop
adc
lds
aaa
add
pop
or
sub
sub
push
in
and
aam
jg
fildll
pop
sarl
lods
daa
imul
push
adc
pusha
add
orps
int3
mov
adc
inc
out
adc
sbb
sbb
and
xor
xchg
andb
dec
ret
outsb
rorb
out
pop
pop
add
sub
push
adc
nop
pop
lock
shrl
push
pop
cs
mov
jo
cmc
lock
add
bound
mov
pop
mov
push
inc
jge
pop
addl
jg
and
cmp
push
cs
movsl
xor
cld
clc
add
dec
clc
lock
xchg
lret
lock
pop
loopne
adc
shrb
inc
cmc
test
clc
mov
push
filds
andl
cs
mov
cmp
je
or
xchg
mov
cmp
inc
les
adc
and
sub
and
cmp
je
mov
mov
cltd
and
lods
lea
fimuls
in
jg
add
aad
in
dec
arpl
lea
jb
popa
xor
push
add
aas
sub
rcrb
mov
in
test
mov
push
jb
add
fcoms
mov
arpl
fwait
jle
pop
call
push
call
add
test
sub
lret
mov
lock
fs
inc
daa
xchg
out
jle
loopne
loopne
fisubl
jge
pop
in
call
in
insb
push
push
push
test
mov
clc
xor
xchg
imul
or
popa
jno
inc
rorl
orl
leave
push
push
inc
aam
cmp
mulb
ficompl
push
fildl
insl
enter
loope
enter
xchg
ret
cmp
or
inc
and
cmp
xchg
popa
add
aaa
imul
pushf
jmp
pop
les
push
xor
mov
adc
shl
mov
push
fsubl
mov
in
push
sub
shrb
adc
mov
sahf
xchg
xor
loopne
mov
nop
push
insb
cmp
mov
cwtl
mov
sarb
je
jne
shlb
movsl
ret
xchg
push
sub
movzwl
aas
popa
or
popf
push
mov
sub
xor
push
add
push
out
inc
data16
cmpb
push
cli
icebp
adc
data16
mov
add
pop
xchg
pop
test
jno
ja
clc
xchg
loope
shlb
pop
lock
faddl
fsubrs
enter
and
jge
out
out
push
fcoms
lods
add
cs
andl
test
fldenv
sarb
mov
pop
movl
fsubrs
fbld
xor
push
je
push
adc
mov
xchg
out
mov
in
in
in
in
push
push
ret
dec
in
aaa
xor
push
es
mov
inc
or
imul
inc
aas
add
pop
jne
cmp
xor
lock
adc
mov
dec
xor
es
xchg
adc
sbb
xchg
jns
inc
mov
push
test
push
or
sub
xor
leave
xor
lock
add
nop
mov
ss
lock
fsubs
xchg
push
iret
lock
push
jno
loopne
aad
push
mov
cmp
popa
sub
mov
inc
ret
lock
shlb
fimuls
mov
add
pusha
rclb
je
and
and
push
push
pop
inc
add
ds
insb
push
xchg
lahf
pop
add
add
shlb
dec
test
jle
clc
adc
hlt
lock
hlt
inc
icebp
jne
ret
jle
add
xchg
add
daa
or
pop
lods
push
int
and
dec
dec
xor
xchg
aas
lcall
aam
xchg
mov
inc
inc
setle
and
ror
decb
add
fsub
and
inc
jle
adc
add
call
xchg
xorb
adcl
rcrb
ret
pop
dec
add
popa
movsb
movsl
pusha
popf
pop
repz
lods
flds
and
mov
and
and
mov
jno
and
sub
and
mov
dec
push
sbb
loopne
jbe
sub
mov
add
ja
test
out
ret
cmc
test
mov
dec
daa
cmpb
xchg
push
mov
les
inc
adc
xor
test
sbb
dec
lds
loopne
pop
fsubrl
push
inc
sbb
imull
lret
cltd
cs
aad
and
loope
divb
inc
loop
xor
sbb
iret
xor
cmp
xor
cmp
shr
mov
dec
xlat
dec
and
dec
xor
mov
and
lret
adc
nop
pop
and
pop
in
pop
dec
movsb
add
adc
addr16
hlt
push
xor
jo
sub
sub
stos
das
ss
sbb
movsb
aaa
in
pop
aaa
fcomps
aad
cmp
inc
mov
addl
mov
cmp
ja
xchg
sbb
pop
push
cld
loopne
sub
stc
inc
lock
xorb
dec
pop
loope
sub
sub
sub
aas
movsl
sbbl
fst
add
in
sbb
iret
adc
pop
xchg
test
call
mov
je
adc
mov
cmpl
adc
lock
jo
add
incl
inc
mov
xlat
xchg
daa
inc
inc
fsubrs
add
pusha
push
sub
cmp
out
das
jp
das
adc
or
es
repz
into
push
mov
call
pop
add
out
jo
dec
jle
dec
out
cmp
outsl
jb
inc
sarl
in
cs
shr
dec
call
inc
out
in
pop
xchg
jg
dec
in
jb
xchg
cmpsb
adc
cmc
jno
in
imul
mov
imul
ja
dec
lock
cli
stos
inc
inc
out
cmp
clc
dec
out
loop
and
cmp
pop
push
loop
dec
push
mov
pop
jne
pop
icebp
inc
push
mov
jmp
xor
psubb
jmp
mov
xor
mov
pop
dec
pop
jae
dec
cmp
in
add
test
nop
fs
sbb
sahf
push
sub
and
lods
xlat
pop
out
rorl
movb
mov
push
fwait
dec
sbb
mov
cmc
test
sbb
imul
addb
ss
lcall
dec
sub
ds
sti
pop
dec
cmpl
sbb
push
jecxz
mov
sub
imul
mov
popa
sbb
jg
cmpsl
les
push
ja
sbb
popa
loop
mov
fisttps
mov
add
pusha
loope
lods
xor
shlb
lods
push
addb
scas
imul
inc
fs
subl
test
ds
add
or
and
enter
out
aaa
rclb
inc
add
mov
outsb
xchg
push
cwtl
sub
lods
jne
sahf
xchg
jmp
or
lcall
push
inc
xor
lcall
mov
xlat
rorb
mov
imul
jb
and
mov
shlb
cs
and
adc
add
push
stos
mov
dec
cmp
push
pop
je
ret
dec
mov
cmp
lods
test
add
ret
adc
pusha
cmp
jmp
dec
cwtl
fs
ja
scas
mov
out
scas
loope
hlt
pop
insb
adc
inc
adc
push
aam
fidivs
lods
stc
dec
mov
je
aaa
jl
xor
jo
imul
xchg
dec
jae
push
int3
inc
pushf
add
not
mov
test
xor
xlat
cmpsb
mov
sub
imul
nop
add
movsb
xorl
cltd
shrl
test
sbb
rorb
mov
push
inc
dec
fdivs
dec
xchg
mov
pop
jne
test
push
dec
dec
movsl
jnp
and
and
icebp
push
stc
and
adc
or
test
lds
or
mov
push
ds
or
outsb
or
xlat
shlb
push
int
ljmp
jecxz
and
and
orl
mov
sub
mov
push
xchg
push
rolb
and
mov
xrelease
add
xor
mov
add
rclb
outsb
das
movsb
mov
shlb
fiaddl
push
push
dec
dec
mov
test
xor
push
dec
adc
pop
mov
mov
jne
gs
jns
jno
adc
loopne
xor
add
lods
gs
inc
mov
lock
clc
cmp
pop
or
andl
out
pop
xor
push
adcl
movsb
sub
data16
cltd
cmp
sbb
add
xchg
shlb
mov
jl
xchg
pop
movsb
cs
mov
xor
repnz
aaa
mov
push
mov
sub
sbb
test
mov
out
dec
jae
fimuls
fcoms
xor
test
push
cs
movsb
or
test
lea
sbb
adc
vdivsd
dec
in
add
mov
mov
rclb
mov
add
stos
jg
bound
cli
xor
das
je
jns
sub
les
add
rcl
mov
cmp
mov
xchg
sbb
out
mov
add
cmp
adc
mov
mov
adc
leave
inc
and
jmp
fcomip
mov
in
decb
adc
pop
clc
mov
sbb
div
jne
call
cs
dec
sub
arpl
dec
lods
fidivs
push
inc
adc
fildl
mov
xlat
xorl
inc
add
or
jb
or
or
sbb
in
aas
mov
xchg
enter
and
sti
subl
xchg
andb
test
push
dec
fucom
shrb
or
sbb
add
add
rcr
mov
add
fimull
add
sub
jg
sbb
arpl
adc
dec
mov
push
dec
xlat
fadds
popf
in
pusha
xor
clc
cmc
mov
cmp
mov
xchg
lods
inc
sbb
shlb
sub
cli
sbb
mov
pop
ret
ds
sbb
dec
and
mov
and
sbb
inc
jge
adc
sbb
inc
mov
xchg
cli
idivl
push
add
fcmovu
inc
imul
cmpl
ja
sbb
outsl
or
rcrb
xor
push
iret
xor
int3
or
cwtl
or
xlat
or
or
push
outsl
outsl
inc
xorl
movsl
in
les
call
outsl
addb
ljmp
rolb
in
movsb
in
lock
mov
mov
daa
mov
loopne
xor
shl
pop
outsl
and
mov
cli
std
or
inc
mov
push
add
jle
cmpsl
lahf
cmp
daa
cwtl
mov
ss
inc
pop
inc
or
orb
lock
pop
test
lret
inc
lods
jbe
cmpsl
push
pusha
and
out
mov
push
jge
loope
mov
sub
mov
lcall
pushf
dec
pop
rclb
fcomps
dec
popa
imul
mov
add
mov
or
scas
push
rcrb
mov
iret
adc
hlt
or
push
test
in
sbb
adc
pusha
out
jle
jne
push
inc
insl
popa
and
or
leave
dec
fadds
notb
sub
add
add
leave
mov
je
jbe
push
ljmp
mov
xchg
push
xchg
and
cmp
loopne
add
jno
cmpsl
mov
jbe
add
ror
pop
nop
pop
mov
sbb
arpl
mov
jno
stos
adc
jbe
mov
sti
cmp
test
sub
sbb
rolb
les
dec
test
push
lock
outsl
ret
ret
insl
sbb
sbbl
lods
or
loope
or
push
movsb
jnp
mov
sub
sbb
sub
sub
push
in
inc
aaa
les
btr
pop
mov
daa
dec
loop
pop
or
out
ret
sbb
dec
pop
sub
out
mov
ret
in
bound
pop
cwtl
add
jg
add
sahf
or
push
jb
in
jo
add
mov
int3
mov
push
or
int3
adc
scas
add
or
jbe
and
orb
push
rcr
sarb
dec
or
dec
shlb
sub
insb
add
pop
add
les
jo
push
ret
rclb
lcall
arpl
and
aam
aam
out
adc
aam
mov
xor
and
xor
rcr
mov
mov
test
dec
push
xchg
jecxz
dec
fisttpl
cltd
xor
push
mov
cltd
adc
dec
sarl
scas
adc
pushf
xor
mov
std
adc
xchg
les
lock
add
jecxz
add
imul
ret
aas
adc
shll
jno
in
loop
mov
adc
mov
sub
aaa
xor
pop
movsb
push
inc
ja
sub
add
fs
push
xchg
mov
jmp
adc
popl
push
inc
or
mov
pusha
subb
test
mov
repz
sbb
rep
mov
or
stc
hlt
insb
inc
or
es
out
pop
dec
xor
in
repz
pop
fcoml
pop
test
les
push
dec
scas
pop
mov
lea
rclb
mov
or
or
nop
add
jge
decl
xchg
es
arpl
jl
jne
cli
repz
ret
xchg
xchg
mov
inc
sbb
add
xor
dec
pop
clc
or
dec
add
aaa
sub
mov
nop
dec
jae
dec
ret
xchg
pop
jge
sub
pop
xchg
jg
fsubrl
mov
adc
ds
js
popa
cmp
mov
ficoml
or
lock
in
dec
cmp
add
fs
or
jecxz
pushf
dec
cmpb
and
pop
pop
add
addr16
xor
mov
dec
xchg
and
inc
outsl
xor
cltd
and
xor
ds
xchg
add
aam
and
add
scas
add
out
cmp
test
mov
push
fcomps
jg
add
sub
xor
mov
mov
mov
inc
mov
mov
imul
jp
inc
popf
inc
lods
mov
lahf
enter
ljmp
sbb
add
stc
and
ja
aam
adc
bound
ljmp
in
add
mov
clc
test
pop
xchg
xchg
add
mov
adc
mov
pushf
xor
add
sub
in
and
stc
sub
jb
sub
add
ss
rcl
adc
mull
jne
jmp
pop
or
lock
add
insl
inc
lret
test
mov
lahf
test
in
jne
add
cmp
add
out
or
out
push
mov
rolb
lods
xor
xor
push
xchg
ljmp
inc
or
or
pusha
push
push
adc
sub
sbb
and
push
xchg
dec
test
or
push
enter
dec
call
cmp
dec
test
test
cmp
cmp
test
stos
sub
lea
scas
inc
push
lcall
ret
leave
or
aaa
push
sbb
std
dec
sbb
lods
and
pop
inc
fldt
icebp
cltd
dec
in
mov
fcmovnb
sub
movb
or
add
shl
pop
or
mov
push
lret
inc
mov
inc
or
frstpm(287
pop
xchg
pop
aam
in
icebp
xor
aam
dec
inc
imul
lahf
jae
loopne
je
loopne
push
nop
loopne
sti
lods
fldenvs
add
fiaddl
in
scas
insb
cmp
mov
clc
std
mov
xor
adc
jbe
sub
lret
fdiv
aas
adc
push
hlt
sbb
and
repnz
js
sbb
dec
lret
inc
cld
jno
inc
bound
dec
or
cmpsl
call
aas
cs
push
mov
fiaddl
push
les
popa
xchg
mov
hlt
push
add
rolb
jbe
xor
adc
adc
mov
gs
xchg
popf
aaa
scas
in
sbb
xchg
xchg
aad
xchg
je
iret
movsl
adc
or
xchg
sbb
sbb
push
jbe
ja
cmpl
jle
lret
jmp
inc
xchg
dec
gs
lock
je
cmp
shr
push
nop
int3
je
xor
shrl
add
adc
jecxz
adc
mov
pop
lcall
imul
or
in
cmp
jne
out
xchg
add
jl
mov
xchg
adc
adc
gs
cltd
mov
lods
call
inc
mov
dec
add
sub
push
popa
in
fwait
pusha
and
dec
and
add
mov
xchg
and
inc
mov
cmp
aad
enter
jno
add
cmpsb
mov
push
jp
mov
je
mov
jbe
shl
pop
test
ja
mov
jl
fwait
rcll
ret
mov
pop
jae
adc
pop
dec
jmp
cs
mov
imul
shrb
and
jne
push
xchg
addr16
lods
cs
cmovae
jg
addl
jmp
mov
fs
les
inc
ret
add
les
xchg
jmp
push
out
jbe
rorb
testl
mov
xchg
mov
cmp
imul
sbb
inc
mov
mov
cwtl
dec
lods
push
xchg
mov
nop
call
xor
and
rorb
dec
ss
sub
loopne
xor
es
lods
iret
jmp
notl
push
mov
dec
cmpl
xor
js
xlat
push
xlat
nop
add
ss
mov
loop
sbb
lods
data16
and
mov
mov
pusha
jae
add
mov
sbb
inc
dec
bound
dec
or
roll
jle
or
pop
jb
arpl
and
xchg
push
es
repnz
mov
cmp
pop
xor
push
repnz
les
pop
js
jmp
and
jae
pop
lahf
push
je
xchg
rcl
rol
mov
faddl
mov
lods
in
ja
subl
shrl
sarl
cmovnp
mov
movb
jecxz
jbe
xor
push
xor
ret
push
out
ficomps
sub
push
and
adc
dec
or
out
push
or
push
xchg
add
pop
adc
cmp
mov
pop
lods
call
or
loop
in
int3
adc
popa
aam
jo
stos
push
cmp
lahf
sub
test
mov
movsb
cmp
daa
mov
push
movsb
push
cmpsl
aaa
loopne
xorl
pop
lock
idivl
push
jle
ds
or
pop
jmp
pop
cwtl
push
push
mov
andb
dec
mov
sbb
sub
movsb
mov
fstpt
sub
insl
insl
sbb
sub
push
inc
lahf
hlt
xchg
ret
mov
inc
mov
xchg
in
cmp
add
dec
and
and
mov
int
and
mov
addl
jecxz
adcb
jae
jmp
lock
negl
imul
out
push
inc
pop
mov
mov
popa
dec
mov
insl
push
mov
mov
push
sbb
nop
push
pop
mov
jno
sbb
pop
mov
xchg
icebp
or
jmp
cmpsl
xchg
cmp
and
jo
fldl
mov
pop
or
mov
push
jg
xadd
add
add
outsl
lods
mov
mov
lret
add
inc
popa
ret
adc
add
pop
fadd
xor
inc
and
mov
pop
test
imul
add
xor
aaa
lock
int3
xor
faddl
xchg
shr
stos
mov
inc
cmp
sub
mov
mov
sub
imul
add
pop
loop
add
test
fs
stos
add
in
roll
push
lahf
dec
shrb
push
clc
repnz
cmpb
jge
mov
xor
adcl
adc
xorb
imul
loope
fs
sbb
dec
fadds
leave
repz
das
insb
jo
sub
mov
mov
cmp
mov
lock
or
insb
fists
out
pusha
push
cmp
loope
xchg
or
out
mov
cmp
insl
add
add
or
adc
es
insl
pop
mov
and
mov
xor
aam
or
mov
sbb
sahf
pop
enter
push
cwtl
add
add
jle
sub
and
xor
jmp
add
sbb
or
scas
call
mov
mov
pop
or
jns
mov
jb
jne
cmp
add
rclb
fnstenv
sbb
daa
stc
jbe
push
ret
adc
insl
and
push
testl
adc
xor
call
mov
paddsw
or
in
call
push
dec
sub
sbb
dec
jecxz
mov
mov
mov
mull
jecxz
pop
xchg
jb
negl
nop
cltd
mov
mul
adc
scas
outsl
push
sbb
jae
xor
and
out
or
push
add
mov
xchg
xor
xchg
sbb
nop
jo
and
cmp
jnp
pop
and
add
jne
fs
pop
sub
pop
das
mov
and
and
scas
pusha
sbb
dec
push
es
js
insw
stos
pusha
loop
lahf
lahf
insb
jge
rorb
ds
or
xchg
xchg
aaa
pop
scas
ucomiss
adc
xchg
rorl
dec
insl
and
jbe
int
mov
add
sbb
ret
aam
dec
xor
inc
mov
fsin
dec
add
pop
fdivl
mov
inc
rcrl
aad
add
js
enter
or
xchg
xchg
fwait
das
add
sbb
popa
sbb
enter
and
xor
inc
fidivrs
xor
xchg
push
mov
pop
xor
add
lret
iret
mov
xor
inc
mov
pushf
jne
in
aam
add
sub
hlt
pushf
add
bound
or
pop
cld
jne
enter
cmp
out
dec
adc
or
or
mov
and
or
fdiv
jns
xchg
mov
dec
xchg
movl
stos
fs
and
je
jae
and
xor
iret
insl
iret
or
stos
jge
orl
mov
nop
outsb
jg
negl
je
pop
cmp
adc
mov
adc
xchg
dec
jbe
mov
sub
mov
pop
mov
push
flds
das
mov
mov
add
andl
pop
aam
insb
pop
js
mov
es
adc
test
and
fidivl
lret
fucomp
inc
out
mov
das
mov
adc
outsl
mov
iret
mov
and
fs
or
cwtl
add
sub
dec
adc
in
xlat
bound
push
shll
idiv
cld
roll
add
sbb
enter
adc
sub
lret
in
add
adc
mov
jns
mov
xchg
or
cmp
nop
in
in
push
mov
arpl
mov
adc
mov
pop
jp
arpl
add
or
insb
or
push
or
sub
sbb
push
cwtl
jmp
and
pop
addr16
imul
adc
fldt
cmp
inc
push
inc
push
add
sub
jne
ja
outsb
pusha
or
push
imul
add
fs
jmp
lods
sarb
loopne
lret
dec
ljmp
repz
fs
xchg
and
cmp
or
mov
add
add
dec
ds
pop
xor
rclb
ljmp
xor
mov
in
pop
mov
sbb
push
xor
dec
jae
add
pop
sbb
adc
sbb
mov
ss
and
daa
in
push
mov
cmp
push
pop
sbb
ret
and
int3
sbb
dec
test
sub
and
sbb
das
nop
divb
ret
or
xor
stc
xor
xor
add
cmp
aad
sub
popa
cmp
push
in
pop
ss
sti
popa
or
or
bound
pop
or
jno
fcomip
loop
mov
dec
push
jo
xchg
inc
push
add
and
push
add
sbb
lock
and
sbb
sub
inc
jb
or
sub
jge
adc
push
add
fsubrs
cs
fs
inc
lret
jbe,pt
and
pop
dec
ds
push
or
bound
xor
outsl
pop
push
in
cmp
or
pop
dec
movsl
and
mov
push
pop
jae
leave
dec
mov
push
or
add
mov
xor
gs
cmp
inc
pop
pushfw
dec
outsb
jo
je
adc
shll
jle
sub
mov
leave
xor
and
adc
in
or
outsl
or
or
push
jno
mov
cmp
popa
dec
xor
push
sub
or
rcll
sub
outsl
ret
fs
jae
xor
or
add
addr16
dec
mov
cmp
addb
mov
pop
dec
or
ja
mov
jno
pop
or
gs
mov
cmpsb
mov
clc
mov
inc
pop
ja
add
sbb
imul
stc
into
cmpb
jo
xlat
loop
adc
out
cwtl
cs
test
pop
sti
js
jl
add
les
sub
pop
sbb
adc
inc
call
or
addb
fadd
ret
scas
insl
cmp
std
inc
adc
xor
movsl
lea
adcb
ds
dec
push
mov
mov
sbb
add
notl
jne
push
adc
sbbb
cmpb
ja
and
aaa
xchg
sbbl
adcb
das
rclb
and
sub
mov
adc
mov
repnz
inc
jbe
and
out
mov
push
inc
gs
and
arpl
in
cwtl
fldcw
rorb
dec
sbb
ljmp
addr16
into
jle
xor
inc
add
dec
push
add
leave
rorl
and
lock
sbb
daa
jno
ja
ljmp
push
cs
adc
cmp
arpl
dec
pop
and
add
popa
mov
dec
sbb
pop
aaa
pop
cli
bound
inc
or
scas
je
sub
imul
outsl
sbb
and
enter
icebp
mov
jae
leave
push
or
lahf
cmp
push
mov
or
pop
inc
xchg
push
inc
movsb
adc
fs
mov
addr16
pop
popf
adc
push
pop
pusha
dec
push
test
pop
xchg
sub
mov
mov
xor
cld
cld
cld
cld
xlat
inc
sub
and
rolb
and
push
inc
fwait
push
inc
jp
inc
sbb
ljmp
cmp
fldl2t
cmp
adc
mov
pop
or
pushf
push
xchg
adc
insl
and
add
xchg
add
ficompl
push
or
out
mov
add
pop
add
xlat
add
and
movlps
inc
addr16
pop
jle
cmp
dec
sbb
mov
inc
add
pop
or
fldenv
test
mov
mov
push
push
mov
xor
lea
push
pop
pop
push
sbbb
les
adc
adc
insl
cld
adc
out
dec
inc
jmp
sub
fistpll
ljmp
shrb
cmp
jne
fsubrs
xlat
enter
mov
aaa
push
inc
xor
pop
sti
outsb
add
or
xchg
adc
cld
aas
dec
shrl
rclb
in
adc
idiv
jmp
test
sub
add
lods
repz
cs
rolb
push
push
cmp
lcall
pushf
sbb
es
push
call
sbb
inc
flds
and
je
jo
adc
xchg
test
sarb
bound
js
icebp
push
dec
js
push
faddl
jle
popf
int
arpl
pop
das
jne
bound
push
add
insl
icebp
pop
add
xor
rolb
bsf
imul
sub
or
faddl
add
aas
adc
inc
ljmp
in
push
mov
mov
push
pop
add
xchg
es
fdivl
mov
mov
dec
sbb
lea
sbb
inc
outsl
sub
inc
sbb
jl
push
pop
ret
daa
addl
mov
mov
adc
mov
rcll
orps
sti
jae
sub
mov
cmpb
icebp
mov
mov
enter
push
popa
jns
xor
sysret
stos
sub
rcrb
cld
pop
mov
scas
test
mov
loopne
mov
mov
insl
clc
pop
add
jg
or
daa
cmp
lcall
add
jp
pop
jo
push
test
pop
add
fildll
stos
mov
mov
adc
data16
add
xor
ss
insb
add
mov
push
in
cld
push
mov
sbb
dec
loop
ss
clc
shl
daa
test
js
imul
dec
mov
mov
shlb
outsb
sub
xor
cmp
xchg
pop
les
outsl
bound
fsts
or
push
sbb
add
inc
les
repnz
adc
xchg
outsl
xchg
fdivrl
nop
add
dec
mov
adc
inc
add
aaa
movsl
lds
repz
test
and
add
xor
add
pusha
aaa
cmp
xor
fwait
andb
daa
push
fsub
in
cmp
inc
decl
jne
jg
mov
adc
pop
scas
pop
adc
xchg
and
or
add
and
into
and
inc
daa
jp
adc
mov
pop
add
addr16
inc
movsb
adc
daa
je
add
inc
push
or
movl
or
in
inc
sbb
or
out
lds
adc
sbb
ss
mov
mov
mov
sub
pop
mov
or
shlb
mov
addr16
clc
sub
outsb
mov
jne
movsb
mov
fucomp
rcr
xor
call
pop
gs
jne
in
add
inc
or
fucomip
mov
fldenv
arpl
je
movsl
testb
xorl
movsb
ds
stos
add
xchg
movsb
divb
inc
outsb
and
inc
mov
mov
and
cmpsb
lods
pop
pushf
pop
test
fmuls
arpl
or
cmpsl
mov
fwait
scas
dec
pop
popf
scas
add
xchg
das
cltd
pop
jnp
call
add
sbb
imul
mov
popa
sbb
nop
fld
cmp
sbb
lock
pusha
inc
out
ret
push
test
push
ret
pop
lock
fsubrl
mov
sub
cmpb
lahf
inc
or
pop
push
hlt
add
mov
inc
or
test
pop
sbb
pop
sbb
adc
shll
dec
bound
pop
jmp
mov
sbb
push
rcll
sbb
adc
or
and
dec
rorb
inc
inc
test
jmp
push
sub
pop
adc
sbb
mov
aaa
cld
inc
cmp
mov
std
test
xor
lds
loop
leave
inc
arpl
jg
stc
jmp
pop
add
aam
rcl
in
push
cmp
sub
ja
jle
test
sub
dec
mov
adc
fst
add
jae
push
pusha
add
sbb
fistpll
ds
jmp
pop
mov
jmp
mov
push
mov
cmpsl
jo
push
and
add
arpl
add
sbbb
pop
xor
sub
movl
fcomi
nop
test
dec
mov
sbb
inc
xor
or
gs
fnsave
inc
push
jmp
cmp
jg
je
bound
aas
dec
inc
and
pop
mov
adc
add
sbb
dec
and
adc
je
dec
cmp
push
cmpsl
das
mov
stos
jbe
push
loope
test
mov
ja
pop
fldt
push
or
movl
xorb
bswap
lea
inc
and
lret
rcr
je
adc
jnp
call
sub
mov
mov
xor
loopne
jbe
sbb
sbb
roll
or
jnp
addb
push
sbbl
inc
xor
ja
lds
jge
adcl
jae
das
add
popa
pop
rcll
sbb
jb
scas
jne
sub
push
inc
jmp
icebp
lea
in
xchg
jbe
jns
inc
cmp
mov
mov
adc
faddl
jo
sbb
add
sbb
int
gs
leave
adc
or
mov
imul
arpl
rorb
dec
pop
jnp
mov
push
mov
xchg
pop
imul
jmp
add
pop
loopne
mov
jmp
aaa
adc
mov
jg
and
push
pop
mov
shll
xor
pop
inc
stos
testb
inc
lods
or
sub
into
and
push
clc
inc
push
add
and
ja
xor
dec
mov
in
repz
loopne
pushf
inc
or
push
add
xchg
push
mov
lea
cmc
test
xor
outsl
test
ret
mov
dec
fdivrl
loopne
sbb
push
cmpb
jmp
sbb
or
xor
jmp
je
add
push
mov
ss
jo
add
jne
mov
and
je
jmp
nop
or
pop
test
es
mov
imul
add
int
push
inc
dec
xchg
push
cmp
pop
ret
cs
fsubrs
dec
sub
pop
mov
cmp
adc
mov
dec
and
test
xlat
pop
or
loope
xchg
inc
push
pop
jo
mov
das
fdivrs
jae
fcompl
push
adc
add
cmp
js
and
aam
call
xchg
out
push
pusha
inc
lock
add
mov
jp
lcall
add
repnz
loopne
loopne
mov
push
pop
sub
and
popf
cmp
sub
jle
and
out
xor
cmp
sbb
sub
outsb
mov
dec
xor
dec
test
add
or
xchg
clc
sbb
or
pop
shlb
xor
mov
into
push
pop
popf
ret
inc
dec
inc
rcrl
adc
xchg
test
jbe
pushf
nop
add
cmp
int3
jbe
inc
daa
mov
cmp
adc
icebp
adc
outsb
jae
scas
xorl
sti
ds
xchg
add
popl
inc
adcb
fmul
popl
cmp
popa
pop
mov
dec
jbe
je
inc
out
dec
lock
push
outsb
jae
pop
xorb
fbstp
loopne
inc
popf
push
repnz
fwait
test
in
cli
lcall
dec
add
or
sbb
adc
js
mov
fdivr
adc
cmp
dec
clc
and
fadd
or
inc
xor
adc
cmc
or
outsb
fldenv
add
test
or
or
sub
stos
dec
pusha
insb
mov
xchg
imull
sub
in
mov
add
xor
mov
push
add
and
inc
cmp
adc
dec
adc
lcall
in
test
clc
push
push
outsl
je
mov
faddp
test
sub
mov
lds
push
dec
outsb
mov
movswl
daa
daa
and
pushf
inc
xchg
or
xchg
daa
pop
popf
cwtl
pop
fcoms
mov
or
hlt
cli
imul
pop
mov
inc
and
add
lea
iret
pop
cmp
add
cltd
outsl
or
jno
jbe
outsl
and
pop
xchg
xchg
arpl
sbbb
mov
and
dec
mov
bound
pop
mov
into
xor
mov
inc
push
aad
cmp
fcmovb
movsb
mov
or
xchg
push
js
popl
or
sbb
cmc
or
mov
ret
pop
stos
inc
mov
push
mov
pop
std
jmp
push
or
dec
push
enter
sbb
push
push
enter
sahf
inc
imul
adc
push
leave
mov
sub
das
test
cmp
pop
pop
mov
inc
add
nop
xchg
fisubl
inc
and
movsb
ljmp
push
sub
fisttps
push
scas
adc
xor
sbb
inc
cmp
jl
or
mov
dec
and
scas
and
or
rorl
testl
push
js
jge
mov
add
cmp
fwait
das
pop
push
adc
and
rolb
repz
push
sub
cmp
repz
pop
js
mov
call
sbb
xor
enter
pop
push
and
loope
ret
xchg
push
cmp
ja
or
ret
repnz
mov
adc
sub
popa
test
jmp
testb
inc
and
xchg
xor
mov
mov
and
or
cli
push
imul
adc
adc
cld
push
mov
outsl
mov
sbb
popa
sub
xor
push
test
xchg
push
insl
mov
pop
dec
xlat
clc
pop
jae
xor
push
push
fstpl
add
mov
in
fwait
push
repnz
or
sbb
fidivrl
adc
jle
adc
add
cld
fstps
or
add
out
sbb
dec
sub
cmc
loop
cmp
mov
add
mov
push
aad
test
hlt
push
fcoml
mov
sarb
les
fisubs
cmp
or
sbb
lods
and
roll
fimull
xchg
sbb
pushf
shl
popa
stos
popf
int
cmpsl
dec
sbb
cmp
pop
jo
bound
faddl
outsb
or
pop
mov
sbb
or
insb
mov
xchg
sub
inc
mov
iret
and
add
addr16
sti
es
mov
cmpsl
das
mov
push
xchg
adc
xchg
rclb
sarb
mov
sub
aaa
pushf
ret
dec
xchg
inc
inc
es
push
jmp
sbb
cwtl
je
mov
roll
adc
add
dec
js
data16
ret
out
xor
adc
pop
movsb
dec
mov
jmp
in
pop
inc
push
mov
jno
jb
dec
sub
pop
negl
mov
roll
nop
add
pop
inc
pushf
sub
and
in
mov
inc
sbb
jns
mov
cmp
and
pop
jg
mov
test
adc
mov
mov
inc
xchg
jno
in
mov
xor
test
int
xor
add
lock
clc
xor
int
sbb
fwait
dec
pop
adc
cmp
rcrb
fs
dec
rolb
addb
push
pop
jl
push
or
sub
imul
mov
cmp
xchg
bound
enter
push
mov
jno
xor
test
mov
cmp
xchg
fadds
cli
or
addl
cmp
pop
stc
inc
ficoml
sub
jne
jns
icebp
shl
and
add
ss
call
add
insl
push
sub
push
dec
insl
fmul
ljmp
icebp
push
inc
sub
shll
jnp
cli
sub
xor
aaa
add
out
imul
insb
je
mov
loop
xor
js
xchg
add
xor
je
inc
loop
lock
das
sub
jl
and
stos
inc
jl
test
test
fstpl
int
test
mov
psadbw
pop
sbb
pop
pcmpeqb
movzwl
pop
js
stos
dec
cmp
xchg
daa
daa
in
and
cmpsl
out
pushl
fs
lret
xsave
jb
repnz
or
or
jb
sbb
jo
adc
in
andl
push
add
push
daa
xor
std
aaa
cwtl
dec
or
sbb
shrb
sbb
popa
sub
in
mov
cltd
popa
in
push
in
sbb
popa
sub
xchg
mov
push
xor
iret
inc
cmp
jae
loope
shll
mov
nop
xchg
and
insl
mov
adc
into
pop
ret
sub
mov
jb
xchg
loope
je
add
rorb
add
xor
daa
or
xor
popf
or
ret
ret
bound
xor
or
jns
jo
push
sbb
pop
stos
jae
push
add
mov
cwtl
and
orb
push
in
mov
xlat
mov
and
add
jmp
push
adcb
mov
sbb
inc
jmp
inc
or
aaa
add
push
adc
or
inc
or
jmp
in
or
inc
mov
dec
add
inc
adc
add
push
lods
push
jb
fimull
add
or
xchg
sbb
inc
ret
add
js
and
add
arpl
aas
xchg
cmp
inc
in
js
pusha
dec
xchg
add
stc
fcoml
mov
jbe
add
sbb
mov
xchg
out
fdivs
adc
mov
outsl
mov
add
mov
sarl
add
and
es
stos
mov
test
push
mov
sub
xchg
arpl
mov
mov
fwait
jno
insb
fdiv
push
filds
cmp
cmp
inc
add
inc
in
pop
push
jl
int
inc
xchg
es
dec
fwait
adc
or
and
popf
and
xor
xchg
gs
imul
cmp
in
sbb
iret
es
sub
shlb
outsb
repnz
rcr
or
push
add
aaa
add
pushf
rorl
ret
mov
mov
lret
mov
es
lock
adcb
mov
add
loop
test
mov
xchg
mov
xchg
push
add
insb
imul
outsb
xchg
push
mov
dec
adcl
push
push
lret
sbbl
lods
mov
dec
and
mov
in
enter
mov
enter
pop
andb
jmp
mov
pop
enter
jg
int
enter
and
inc
insl
cltd
enter
mov
enter
push
js
les
jmp
call
mov
mov
pusha
mov
ror
add
or
loop
and
bound
or
sbb
jl
je
in
fsubrl
rorl
mov
aas
cmp
adc
pop
aad
xchg
jbe
aam
or
leave
jbe
imul
push
mov
xor
mov
mov
lahf
and
inc
out
addl
aad
pop
loope
and
inc
sbb
mov
rolb
or
cmpsl
push
popl
repnz
sub
mov
movsl
lea
xbegin
mov
jecxz
lcall
pop
dec
sbb
stc
mov
shlb
push
int
jmp
push
push
out
fdivl
test
das
dec
mov
xchg
push
xchg
xchg
dec
inc
outsl
and
jl
jno
push
sub
sbb
pop
or
decl
mov
xchg
push
shl
pop
in
adc
or
hlt
loope
icebp
gs
stos
push
daa
or
dec
leave
rcll
push
pop
sbb
push
jl
ret
movsl
fucom
movsb
stos
and
or
push
adc
dec
jl
paddd
aad
sub
sbb
ret
nop
fisubrs
push
bound
or
scas
jns
test
aas
je
nop
and
add
rorl
adc
jnp
adc
jae
or
scas
test
es
jmp
jmp
push
xchg
and
test
mov
sbb
inc
inc
add
adc
cltd
andb
inc
mov
test
sub
sub
add
sub
mov
fidivl
or
add
mov
scas
add
aas
or
enter
and
sbb
sbb
jb
push
dec
dec
enter
inc
inc
xor
jb
xor
sub
sbb
cs
icebp
inc
jno
mov
and
xorb
push
push
sub
sub
in
inc
or
pop
sbb
jmp
mov
adc
mov
pop
lret
inc
jb
sub
pusha
ds
xor
mov
xor
aaa
cmp
sbb
inc
inc
dec
sub
dec
leave
dec
daa
adc
cmpsl
push
mov
addr16
and
sub
jno
aad
nop
das
lods
mov
or
mov
cmpsb
jb
jmp
jl
adc
or
jb
popf
clc
and
add
ljmp
into
adc
adc
pop
aas
mov
push
xchg
mov
sbbl
dec
std
add
scas
push
rol
bound
xor
inc
pop
fninit
dec
and
inc
std
mov
lds
outsl
dec
xchg
and
ficompl
adc
addr16
mov
out
jg
pop
cmp
adc
adc
push
lea
add
gs
sub
jmp
out
mov
inc
pop
add
shll
xchg
and
rorl
dec
xor
pop
arpl
xchg
mov
sbb
sbbl
adc
popa
insb
cmp
sbb
pop
add
mov
stc
sbb
add
outsl
js
js
mov
dec
pop
pop
xor
imull
shl
sub
sbbl
rcr
or
sbb
ret
lahf
aas
jbe
orb
in
and
mulb
fdivrl
dec
aas
in
loop
cwtl
and
aad
xchg
insb
loopne
sbb
add
in
std
push
pop
lret
rcrb
mov
mov
fsubs
fidivs
addl
mov
mov
adc
dec
mov
and
jg
sub
xor
lods
or
pop
and
mov
imulb
pop
jl
pusha
dec
mov
pop
or
or
push
and
xor
fnstcw
and
push
inc
adc
push
mov
or
mov
xchg
daa
add
xchg
imul
add
mov
or
test
jmp
inc
adc
outsb
hlt
push
cmpsl
imul
es
rorb
rclb
sbb
add
test
inc
aad
dec
inc
push
fimuls
aam
adc
sbb
mov
inc
pop
mov
mov
imul
and
enter
inc
cmp
leave
hlt
mov
test
dec
imul
lods
cmpxchg
sbb
add
inc
repnz
and
imul
scas
sub
xlat
test
das
fs
sbb
insb
pop
mov
rcrl
std
jl
jb
push
daa
pusha
sub
or
adc
insb
lret
add
xchg
mov
nop
je
rclb
push
lea
push
mov
subl
les
and
dec
addl
insb
imul
mov
sbb
stos
movb
aam
stos
clc
or
lods
jae
cwtl
lcall
incb
sub
inc
cmpsl
clc
mov
sbb
xor
mov
or
pop
fiadds
insb
jg
add
mov
and
mov
dec
and
mov
pop
mov
dec
fisubs
cmp
add
jnp
xchg
inc
negl
pop
dec
das
pop
sbb
inc
dec
add
sahf
fstps
cmp
hlt
repz
push
adc
xchg
jno
sbb
scas
sarb
mov
jbe
inc
cltd
lret
les
and
jno
mov
sbb
fnsave
daa
je
xor
ret
aam
dec
inc
mov
je
shlb
inc
adc
insb
adc
or
add
arpl
sbbb
inc
pop
mov
cmp
sub
add
adc
repnz
add
cli
jno
or
lcall
and
out
jmp
roll
add
pop
sbb
iret
fcomps
dec
jp
aas
lock
ja
inc
fimull
movsl
push
adc
lret
push
mov
es
hlt
mov
or
mov
xor
jmp
add
in
shll
pop
dec
clc
sbb
jmp
lea
and
or
lock
in
je
cmc
mov
fdiv
push
sbb
inc
jne
and
adcl
push
xchg
fcomp
xchg
push
pop
sbb
xchg
fstp
xchg
addr16
sub
jecxz
rol
push
push
addl
lret
cmpsl
pop
push
mov
nop
lds
adc
je
pop
aas
or
sub
dec
ja
mov
inc
or
ficoml
sbb
jl
sbb
pand
ret
cs
push
sbb
pop
push
dec
aaa
cmp
mov
mov
lret
jg
lock
lds
iret
push
icebp
cmp
jl
dec
or
pop
adcl
ror
xchg
sub
inc
out
out
fsts
rclb
inc
add
mov
decl
jb
bound
add
loopne
inc
pusha
ret
lods
imul
xchg
ret
push
jno
cld
lcall
xchg
mov
xchg
leave
jne
adc
adcb
and
stc
insb
adc
sti
setns
out
mov
add
cmc
sbb
jne
adc
clc
fdivs
pop
inc
stos
jne
pop
in
xor
adcl
and
or
sub
out
stos
mov
movsb
and
add
jns
imul
sub
push
mov
dec
push
in
in
mov
mov
outsl
shl
inc
jp
xchg
lock
and
push
lds
sti
mov
imul
shll
nop
nop
cmpsb
outsl
mov
loope
pusha
adc
leave
xchg
xor
lcall
dec
mov
xor
je
cmp
push
xor
mul
xchg
and
testb
leave
push
sahf
out
sahf
daa
cmp
mov
or
sahf
mov
insb
in
inc
imul
outsl
inc
addb
jge
mov
push
test
es
jmp
sbb
adc
pop
orl
add
fildl
jne
xor
pop
pop
and
arpl
adc
push
sbb
notb
mov
nop
data16
jg
imul
and
jecxz
inc
test
shlb
and
lret
int3
xorb
xchg
push
js
movb
dec
jae
mov
test
fisubrl
mov
movsl
jge
add
aam
push
rcr
fimull
mov
in
ja
cmp
jae
decl
jae
or
dec
dec
in
loopne
and
sbb
inc
adc
and
imul
loop
mov
push
mov
xor
mov
add
add
fnstenv
push
mov
or
mov
push
push
lea
int3
jbe
dec
adcb
cmpb
jo
fadd
repz
mov
mov
add
and
ljmp
subl
sub
popf
xchg
sbb
pop
ret
lret
lds
ds
mov
ja
lock
or
aam
inc
push
cmp
pop
popf
dec
mov
out
pop
fcomps
xchg
lock
sub
add
or
popa
lods
arpl
adc
into
adc
cmp
adc
xor
adc
adc
cmc
mov
xor
sub
xor
add
pop
loopne
fsubr
mov
push
pop
sbb
cmp
mov
and
fldl
fistpl
xchg
sub
add
js
xchg
sbb
clc
rol
loope
cmp
mov
push
jbe
sbb
in
xchg
jle
hlt
test
cmp
and
sbb
mov
dec
sbbb
hlt
hlt
cmc
movsb
enter
jb
push
pop
xor
jne
mov
repnz
out
cmp
push
roll
enter
sti
pop
jne
imul
fnstsw
inc
cltd
movb
stos
or
xchg
pop
xor
iret
add
or
popa
push
mov
sbb
and
pusha
xor
inc
sub
ret
test
test
ljmp
sahf
sub
sbb
jl
sub
gs
scas
or
pop
ror
jmp
jbe
and
sub
aaa
add
and
xor
mov
imul
sahf
pop
pop
mov
sahf
adcb
test
push
bound
adc
ret
pop
mov
mov
fdiv
idivb
adc
sbb
jo
adc
fistps
out
add
mov
inc
shll
cmpsb
mov
dec
xor
sub
nop
and
insl
mov
xchg
pop
and
pop
cmpb
push
add
pop
das
nop
sub
fcmovnu
or
xchg
enter
and
sbb
adc
sub
xchg
mov
xchg
push
xor
push
arpl
leave
and
sub
fs
dec
je
lcall
sbb
jne
int
push
jno
mov
mov
and
aaa
add
adc
lcall
mov
into
je
in
jmp
gs
mov
xchg
xchg
mov
cmovo
orl
push
jmp
jne
repnz
mov
jbe
popa
adc
les
jmp
stos
aaa
jns
jo
adcb
hlt
push
fs
pop
pusha
adc
and
sbb
push
ds
sub
cmpsl
add
mov
adc
loopne
popa
pushf
inc
aam
or
xchg
test
pop
dec
aam
sub
add
xor
xchg
xor
ljmp
js
add
add
xor
sub
push
ja
loopne
pop
mov
mov
mov
cmp
push
sbb
stos
rol
les
jmp
int3
shl
add
shlb
fisttpl
dec
add
xchg
pop
rcrb
lea
push
add
data16
les
das
idiv
jge
xor
sbb
or
jg
adc
js
aaa
push
mov
add
enter
gs
xchg
jl
pop
mov
mov
push
push
je
sub
adc
dec
idivl
mov
std
or
mov
jp
push
cmp
adc
daa
aas
xchg
push
or
and
or
dec
push
push
sarb
push
inc
and
ret
rcl
pop
inc
loope
fildl
insl
add
mov
fs
jmp
mov
sbb
iret
mov
call
insl
adc
mov
es
push
push
push
inc
fbstp
pop
adc
sbb
pusha
jno
in
adcl
test
adc
cli
mov
mov
push
in
loopne
sub
dec
pop
cmp
dec
mov
insl
in
test
sbb
push
aaa
mov
mov
xor
and
sub
adc
push
mov
lock
loope
dec
push
pop
add
sub
mov
ret
or
sub
aam
sub
sbb
cmp
sub
aaa
aaa
outsl
and
cmc
inc
push
dec
sub
mov
pop
ja
ss
or
adc
inc
arpl
push
iret
adc
dec
and
subl
add
lea
inc
adc
flds
adc
and
loopne
aas
pop
mov
stc
add
fmuls
sub
add
dec
lret
lock
dec
cmp
dec
adc
jp
push
shlb
adc
xchg
je
add
adc
push
outsb
cmp
push
and
ss
sbb
cs
dec
shl
dec
mov
and
sbb
imul
pop
adcl
movsl
mov
insb
jge
out
lods
pop
inc
mov
mov
and
inc
inc
inc
clc
clc
adc
jbe
inc
sub
push
loope
cmp
and
nop
dec
sarl
fdivl
xchg
push
jne
xchg
jl
or
jle
cmp
dec
or
int
lret
out
fwait
test
and
push
push
shll
enter
push
mov
jg
ds
loope
loopne
inc
stc
adc
sub
pop
sbb
lret
rol
test
hlt
ja
and
and
pop
nop
dec
pop
xchg
jmp
inc
movsl
push
add
mov
fisttps
cmp
in
fnsave
and
pop
mov
or
dec
lock
sbb
sbb
hlt
mov
push
leave
adc
push
mov
mov
and
sbb
daa
adc
and
jl
mov
mov
in
dec
pop
push
outsl
adc
leave
or
push
cmpsl
lea
movsl
aas
pop
inc
pusha
push
push
push
jns
insl
fidivrs
das
in
push
in
push
add
outsl
negb
test
ds
pop
loopne
lcall
clc
in
xchg
add
adc
cmp
sbb
inc
or
outsl
add
or
mov
xchg
xor
push
or
push
inc
ja
and
out
shrb
jo
icebp
jns
dec
dec
adc
xor
lcall
sarb
mov
mov
dec
sub
cmp
sub
gs
call
jnp
sahf
pop
outsb
inc
adc
jae
inc
inc
mov
push
dec
xor
inc
xchg
out
sbb
sbb
daa
shll
or
cmp
sub
inc
cs
push
pop
dec
nopl
pop
cmp
cmpsl
xchg
inc
jl
loopne
and
pop
loope
push
jb
pop
xchg
iret
loopne
add
inc
cmp
push
in
and
adc
dec
jp
shll
shrb
cwtl
aaa
jo
mov
std
dec
push
lea
loop
jb
movsl
test
aas
bound
mov
add
or
and
pop
mov
mov
scas
add
decl
adc
sub
sub
push
adcl
ds
jmp
dec
mov
push
int
idiv
adc
stc
aam
jbe
push
xchg
xchg
fnstcw
or
xchg
lret
push
jecxz
insb
xchg
lret
xchg
xchg
mov
or
cmp
push
xchg
xchg
pop
test
inc
mov
sub
push
xor
cmp
call
cmp
cmc
add
aad
add
push
xlat
dec
or
fmull
push
repz
or
sub
adc
pop
push
or
incl
xchg
mov
sbb
pop
jo
adc
pop
rclb
jne
and
xchg
ljmp
lods
push
mov
mov
fs
pop
jecxz
movsb
sbb
test
cmpsl
lcall
das
push
mov
dec
jo
mov
xchg
jo
rcr
sub
ja
add
testl
data16
cmp
test
adc
in
stc
lods
jne
and
and
or
jp
jmp
cs
rcrl
cmp
inc
inc
xchg
stos
and
mov
mov
bound
addr16
movw
mov
popa
xor
fsts
xchg
sbb
cmp
xchg
je
cmp
inc
pop
das
pushf
cmp
xor
add
movsl
adc
fnstcw
pop
sub
ror
mov
mov
daa
gs
loope
adc
and
inc
jb
pop
jbe
pop
push
mov
or
push
add
mov
sub
jmp
inc
pop
ret
bt
jb
add
arpl
jp
clc
xor
push
sbb
push
inc
loopew
mull
dec
jmp
test
push
mov
and
bound
mov
cmp
jne
mov
sahf
add
sub
xor
fcompl
stos
sub
sub
dec
mov
mov
ss
sbb
sbb
adc
inc
cmpl
xor
pusha
popf
mov
adc
inc
sub
aaa
dec
test
xchg
add
cld
fwait
sbb
scas
fwait
xchg
mov
or
pop
push
imul
jmp
out
sarb
jmp
in
outsb
in
rorl
sbb
fld1
mov
xchg
fucomp
je
aaa
push
test
and
push
shll
int
and
jno
iret
ss
fs
add
cmp
jo
adc
inc
out
jg
sub
jge
jmp
mov
rolb
add
mov
cmovb
lods
cli
es
ret
push
sbb
push
cmc
push
mov
test
movsl
push
or
out
cwtl
cmc
push
adc
or
push
add
je
test
neg
les
cmc
cwtl
push
adc
add
adcl
addr16
mov
outsl
and
sub
mov
ljmp
fucomp
dec
mov
mov
lods
lods
add
mov
cmp
sub
or
lods
outsl
mov
idivl
or
pop
and
negb
sub
nop
leave
jnp
jo
cmp
add
shll
add
loop
fcomp
and
fisubl
or
test
sub
addr16
push
fdivl
and
xor
jp
push
push
xor
dec
xchg
adc
addr16
movsl
push
adc
cs
pop
or
js
rorb
in
jmp
push
arpl
cmpsl
movsb
outsb
mov
or
push
and
push
gs
cld
insb
pop
inc
dec
or
jae
xor
es
or
cltd
mov
xchg
pusha
adc
xchg
ret
fimull
or
add
cld
cmpl
sub
arpl
sarb
mulb
dec
and
outsl
or
out
ja
outsl
adc
movsb
cld
pop
push
xchg
fldenv
lock
lods
icebp
jle
push
and
add
add
add
or
add
push
sub
dec
jg
sub
push
mov
jb
pop
sbb
mov
and
inc
adc
or
test
mov
jae
movsl
xchg
push
gs
and
mov
mov
push
sahf
xchg
mov
lods
xor
jne
push
pop
jnp
jae
and
dec
adc
arpl
outsl
sub
inc
inc
mov
outsb
and
popl
jge
sbb
dec
adc
sbb
or
mov
pop
xor
mov
mov
popa
test
dec
push
sub
xchg
ucomiss
sbb
push
fs
je
loope
cmc
insl
test
cmp
cmc
daa
sub
sub
sbb
sbb
dec
loopne
push
jnp
jne
xchg
stc
test
xor
xchg
sub
mov
push
sbb
test
jne
add
test
jbe
add
xor
sub
mov
adcb
mov
out
cmp
movq
ret
les
dec
or
out
adc
lds
mov
cltd
es
jmp
inc
iret
xor
mov
test
fistpll
xchg
repnz
lfs
jmp
cli
xchg
pop
sub
lcall
mov
xchg
xchg
enter
jbe
leave
leave
leave
int3
fdivp
and
xor
in
imul
jb
jb
movsb
loopne
idivl
cmp
gs
fisubrl
clc
inc
sahf
pushf
mov
pop
stc
dec
dec
dec
dec
dec
xchg
popf
stos
out
daa
daa
and
cli
cmpsb
ficoml
sti
cmp
enter
clc
add
ror
or
xchg
inc
and
sbb
shll
lds
aas
lahf
add
jge
jle
push
inc
push
gs
inc
out
outsb
jle
push
xchg
push
test
push
aad
lods
pop
inc
jg
fadds
jle
test
pushf
adc
push
adc
or
sub
jno
push
jp
lods
dec
imul
push
xor
ss
jo
sbb
inc
imulb
pusha
or
dec
or
addr16
and
or
inc
push
add
mov
mov
ja
movsb
clc
dec
fs
or
test
in
adc
push
add
inc
cwtl
dec
jge
mov
push
lods
out
add
scas
lods
mov
adc
std
gs
dec
add
mov
or
ret
or
popa
sub
inc
adc
aam
or
xor
andb
jne
iret
jp
dec
out
popa
or
insb
pop
inc
push
pop
dec
and
push
fildl
in
add
loope
aad
sbb
dec
push
vmovhpd
cmpsb
popa
add
adc
or
or
push
or
imul
xlat
dec
in
adc
dec
mov
jnp
inc
or
incb
pop
pop
jo
jb
sub
sbb
adc
adc
loope
scas
sub
or
push
pop
cmpsl
and
and
add
inc
push
cmp
add
or
ret
add
add
mov
and
dec
sbb
mov
inc
das
push
dec
pop
cld
push
sahf
and
fsubrp
pop
repz
test
fmull
ud2
orb
lcall
and
stos
add
stos
add
mov
insl
cmp
sbb
jl
xchg
sbb
xor
mov
mov
push
test
mov
add
add
or
xchg
xor
rcrl
adc
or
or
cmc
push
push
insb
push
pop
call
or
subb
lcall
dec
in
push
push
mov
addr16
cmp
add
push
inc
add
push
ja
add
lock
sbb
sbb
add
cli
mov
loopne
add
pushf
xchg
xchg
push
xor
mov
xorb
mov
add
cmp
pop
pop
jns
cmpsb
ds
or
push
push
outsl
mov
gs
leave
push
mov
xchg
sub
aas
add
rolb
inc
adc
adc
add
add
add
cmp
cmpsb
push
add
pop
ret
test
jge
in
mov
inc
daa
inc
xor
pop
push
lods
lea
inc
cmp
or
cmp
in
push
rcll
xlat
popa
pop
enter
mov
sbb
inc
orb
sbb
mov
adc
js
sub
add
dec
icebp
mov
dec
pop
sbb
int
je
xorl
sub
pop
movsl
add
rorb
add
shlb
inc
stos
adc
ret
clc
add
fs
fs
fs
shl
fs
add
daa
dec
imul
out
and
and
or
xchg
and
and
icebp
pop
add
and
and
pop
andb
out
xchg
movsl
inc
dec
lea
test
cltd
aam
dec
or
inc
mov
jno
movsb
aam
fsubl
lret
inc
pushf
xchg
sub
addl
dec
clc
push
or
test
shll
and
mov
mov
mov
loopne
xchg
sbb
jne
push
push
dec
sbb
mov
xchg
arpl
lods
data16
mov
or
or
dec
out
inc
dec
aaa
cwtl
pop
pop
cmpsl
sbb
push
mov
and
pop
pop
xchg
inc
xchg
in
sahf
je
lods
adc
push
aad
imul
xchg
add
lds
jl
pop
dec
dec
movb
les
loop
or
and
aam
out
insl
enter
xchg
sbb
test
dec
lds
dec
lcall
repz
fidivl
addb
xor
mov
les
int3
push
lods
xchg
cmp
jno
push
xchg
and
scas
test
lods
adc
or
push
jb
je
popa
or
ret
paddq
inc
fdivl
mov
or
imul
mov
or
push
sub
dec
dec
fdivrs
mov
mov
data16
cmp
pop
insl
xor
mov
ja
sub
adc
andb
xor
mov
and
aaa
in
push
push
xorl
loope
sbbb
xor
or
xchg
popa
push
and
mov
sub
outsl
dec
xor
push
lcall
add
push
andl
hlt
jb
stos
xchg
sub
inc
and
cmp
sbb
ja
push
sub
adc
sub
fistps
bound
push
rorl
or
nop
fiadds
cli
inc
out
mov
fisttps
xchg
sbb
shl
push
in
or
test
jge
movsb
adc
movsb
cs
je
adc
inc
pop
xchg
jg
add
inc
xchg
in
in
fcoms
pop
popa
xor
mov
cmp
and
les
push
enter
jnp
addr16
jb
icebp
pop
sub
adc
shl
push
das
int
sub
mov
sbbb
sub
repz
mov
xchg
or
or
mov
and
xlat
nop
into
dec
testb
loopne
movsl
ja
js
in
insl
js
aad
mov
inc
adc
add
daa
sbb
js
dec
movsl
add
cld
aam
ret
or
stos
cmp
movsb
repnz
push
add
insb
cli
inc
push
cmp
push
mov
sbb
push
fsub
mov
imul
inc
push
mov
lret
inc
aam
test
mov
filds
clc
clc
mov
out
push
ss
mov
pop
sub
sbb
inc
scas
js
jecxz
pop
fdivrs
jle
aam
adc
loop
nop
lret
data16
adc
or
or
jo
jge
sbb
inc
sbb
lret
jle
mov
lods
jo
push
cmp
inc
cmp
sbb
adc
enter
sub
sbbb
pop
shlb
jno
out
jns
out
pop
push
or
cmp
push
repnz
jno
xor
fcoml
pop
xchg
pusha
and
pop
pop
pop
add
add
xchg
add
pop
xor
test
mov
mov
push
pop
jb
inc
cmp
pop
sbb
leave
in
or
aam
mov
pop
pop
push
or
xor
add
xorl
dec
xchg
inc
es
arpl
call
daa
xchg
add
inc
das
or
data16
add
je
fldl
nop
nop
int
punpckhwd
nop
shll
add
cltd
jne
add
xor
or
push
sbb
mov
add
outsb
popa
or
add
xor
mov
imul
dec
inc
inc
roll
dec
mov
cmp
inc
adcb
outsl
and
test
push
push
movsb
rolb
push
pusha
pusha
mov
fs
gs
mov
pop
push
jo
lret
imull
js
pop
inc
sub
scas
xchg
nop
daa
pop
push
pushf
lret
or
sub
inc
add
mov
push
addb
adc
or
out
mov
mov
test
and
std
in
or
mov
pop
mov
fistl
popa
inc
pop
lea
out
mov
add
and
insl
mov
adc
lock
jo
xchg
mov
arpl
pop
mov
lods
gs
js
xchg
xchg
test
rorl
hlt
inc
movsb
adc
xor
rcrl
orb
push
icebp
loop
pusha
or
out
sub
sbb
sub
out
mov
test
ret
enter
cmp
push
add
jae
or
mov
dec
in
in
xchg
xor
sbbl
call
mov
push
test
pop
fmull
sbb
cwtl
sbb
mov
or
and
movl
test
stos
dec
adc
push
push
orl
add
roll
sbb
sbb
cli
arpl
nop
mov
fs
mov
pop
dec
push
xchg
ds
loope
push
add
add
pop
call
sub
cmp
or
outsl
and
adc
movsb
push
cmp
xor
jle
pop
pop
es
nop
bnd
dec
test
popa
lods
pop
cli
add
loop
test
lcall
inc
in
xor
push
aaa
ja
push
imul
xor
test
insb
mov
inc
mov
icebp
pop
and
pusha
mov
xchg
cmp
dec
inc
es
jo
fwait
cs
out
fildll
add
fdivrp
ds
or
dec
mov
rclb
jge
adc
fnstsw
pop
lret
inc
add
and
loop
inc
mov
sbb
jnp
jno
ljmp
push
jmp
roll
adc
sub
daa
sub
and
xor
inc
adc
adc
xor
insb
sti
in
xchg
xchg
push
je
call
loope
sbb
push
mov
mov
jnp
ss
dec
sub
ret
inc
movsb
shrl
scas
shrb
daa
adc
push
lock
or
cmc
inc
pop
mov
mov
jne
sub
add
daa
mov
xor
and
push
mov
lcall
inc
push
xchg
mov
xchg
adc
jo
push
cmc
mov
inc
xchg
repnz
fs
push
in
or
out
das
mov
sub
test
cltd
sub
sbb
hlt
addr16
cwtl
sahf
and
cmp
imul
scas
mov
daa
pop
or
fxch
xchg
std
in
cmpsb
add
rol
mov
in
add
and
dec
int
fwait
and
in
fisubl
mov
or
inc
lock
add
push
xor
test
adc
popf
or
shlb
aas
xorb
gs
jge
inc
push
fwait
cmp
pop
push
add
push
inc
xchg
mov
outsb
push
hlt
xor
add
mov
and
les
push
or
in
das
push
add
add
pop
add
inc
lock
xor
push
arpl
add
dec
lcall
and
adc
insb
xor
pushf
adc
and
push
loop
mov
les
cwtl
inc
inc
call
ja
fsubs
notl
data16
lea
pop
iret
test
mov
loop
mov
call
data16
sbb
mov
add
stos
sub
xor
scas
cmp
xor
push
sbb
pusha
pop
mov
lds
mov
lahf
jmp
mov
push
outsl
mov
or
daa
add
or
xchg
bound
lods
adc
call
lret
or
mov
jg
inc
jno
adc
cmp
jae
in
shll
pop
add
sbb
test
rorb
sub
movsl
sub
xchg
adc
or
cli
push
adc
mov
adc
push
mov
outsb
scas
aaa
imul
nop
notl
test
mov
das
pop
add
add
mov
imul
ficoms
shr
pop
test
int3
fdivl
sub
jmp
int3
jns
sub
pop
mov
subb
out
test
sar
hlt
inc
or
xchg
push
push
push
jno
stos
xchg
pop
fst
sbb
subl
movsl
mov
fnstenv
cld
fisttpll
sub
sbb
xor
dec
or
mov
adc
test
mov
push
mov
outsl
fsubs
sbb
or
push
push
mov
mov
sbb
and
loope
pop
adc
pop
add
sub
inc
cmp
pop
add
rcpps
adc
sbb
call
leave
xchg
out
hlt
xor
mov
js
test
enter
add
mov
repz
cmp
cwtl
lea
jmp
adc
aad
mov
xorb
sarb
cmp
pop
daa
rorb
inc
push
int3
test
cmp
cmp
loope
pop
test
fcmovnbe
sub
push
xchg
out
divb
loopew
xor
movsl
inc
xor
fxsave
xchg
jl
adc
mov
iret
sub
js
addl
hlt
btc
lock
pushl
lods
adc
jo
jno
pop
pop
shrd
fcmovb
sub
mov
outsb
cmp
imul
arpl
inc
orb
orl
lahf
push
push
je
jp
icebp
pop
sub
or
sbb
or
push
movl
xchg
fsubs
push
mov
ljmp
jp
imul
ja
mov
sbb
mov
jp
jecxz
inc
sub
iret
pushf
pusha
inc
sbb
xchg
sbb
mov
inc
jae
cmpsl
popa
lock
ret
sbb
dec
jmp
movsb
test
es
cwtl
and
dec
cli
adc
xchg
push
sbb
inc
imul
mov
push
aam
xchg
or
nop
iret
jge
jmp
rcl
pop
in
daa
push
xchg
pop
pop
pop
dec
flds
insb
dec
xor
roll
mov
pop
add
inc
fbld
and
push
pop
es
xchg
vorps
or
aaa
mov
sub
and
and
add
inc
cmp
push
in
call
ror
call
xor
xor
add
cwtl
in
out
shrb
add
rcr
inc
cmpsb
in
in
dec
shll
dec
in
int3
clc
add
mov
add
adc
jecxz
sub
je
iret
enter
inc
push
jo
pop
cmpb
scas
movsb
sub
push
jno
shr
ljmp
jno
adc
aas
lahf
cmc
scas
push
enter
test
dec
push
jns
pushf
push
stos
lahf
aas
push
and
les
stos
xorl
in
and
mov
aad
mov
and
sarl
inc
rcrb
dec
push
xor
nopl
cs
push
xchg
jecxz
rolb
push
mov
adc
in
mov
pop
jge
mov
pusha
shr
jp
add
sub
repnz
and
xor
or
cmp
cltd
call
mov
pop
or
sbb
fwait
xor
dec
sub
push
cmp
sub
inc
lret
adc
pop
cs
aas
ja
jmp
cli
insl
outsl
stos
dec
jne
scas
inc
sbb
push
adc
pusha
loop
adc
dec
inc
dec
outsl
lods
sahf
bound
int3
bound
adc
mov
and
sbb
or
rclb
xchg
pop
rorl
xchg
jne
sbb
mov
jp
fsubl
call
fildl
jmp
sbb
inc
fcmovnu
xchg
sbb
add
xchg
inc
inc
push
inc
movsb
outsl
dec
pushf
xlat
mov
push
push
rolb
or
add
xor
and
adc
adc
ffree
mov
notl
enter
shlb
add
jno
hlt
imul
data16
sub
xchg
pushf
adc
popf
dec
int3
incb
cwtl
das
adc
jmp
adc
xor
rcrl
lods
xchg
test
add
shll
sarl
mov
adc
andl
adc
add
je
dec
push
jecxz
fcoms
fadd
mov
push
addr16
xlat
mov
and
add
cwtl
inc
mov
lret
insl
add
movsb
jmp
js
sub
mov
mov
and
dec
int3
adc
sti
pop
mov
and
xorl
jb
ja
sub
aas
pop
push
or
pop
lds
fstl
pop
mov
jg
mov
xlat
subl
nop
dec
or
mov
pusha
andl
rcr
cld
pop
jne
repz
inc
mov
add
sbb
mov
add
sbb
adc
mov
gs
jg
xor
ret
cmp
lods
or
adc
and
nop
adc
aaa
xor
mov
icebp
rcrl
popf
sbb
sub
lods
mov
push
and
test
or
push
add
inc
xchg
mov
insl
lcall
push
repnz
push
and
sub
adc
jne
mov
test
xchg
or
mov
or
push
mul
pop
push
std
insb
fsts
ret
pusha
add
je
sbb
dec
xor
aaa
cmp
inc
out
int
fldt
sbbl
jecxz,pt
test
mov
pop
aad
mov
sub
loopne
dec
daa
popa
test
mov
sbb
lods
cs
sbb
or
sar
sub
repnz
xor
pop
inc
rolb
jge
daa
and
pop
aas
aam
cmpsb
inc
scas
pop
sub
pop
ficoml
rcrb
arpl
adc
addl
lock
add
dec
mov
pushf
scas
and
adc
sahf
push
push
cmp
test
or
pop
mov
or
fisubrl
pop
and
scas
mov
cmp
or
add
add
daa
jo
push
outsb
mov
push
cmpsl
cmp
mov
pop
xor
test
inc
sbb
add
sub
mov
loop,pt
jmp
data16
add
inc
sbb
xchg
gs
mov
jb
mov
adc
mov
push
jns
adc
int3
inc
push
lea
loop
add
cmpl
and
mov
sub
or
mov
stc
lsl
add
les
mov
add
jg
and
outsb
jns
icebp
or
jno
dec
imul
push
cld
rol
les
test
dec
adc
xor
mov
fidivs
jno
daa
inc
cmovae
test
xchg
repnz
int
outsl
icebp
into
inc
lea
sahf
imul
notl
lret
jbe
insb
sbb
mov
mov
adc
or
ret
sub
shlb
push
add
mov
and
pop
cli
xorl
lods
mov
or
jbe
cmp
sbb
xchg
jmp
jge
in
sbb
jmp
imul
inc
sub
dec
cli
mov
xchg
das
jae
rorb
rolb
mov
and
xchg
mov
inc
shlb
inc
push
dec
jno
cmpsl
test
inc
or
jmp
dec
or
dec
or
add
lods
dec
inc
int3
add
dec
pop
sub
fsubrs
xchg
xor
adc
das
lds
fdivl
cmpsl
mov
push
arpl
mov
add
test
lcall
xchg
mov
mov
push
dec
mov
push
pusha
stos
je
add
dec
jne
dec
sub
test
popa
rcr
xchg
or
or
jl
cmp
add
and
in
or
xchg
mov
arpl
dec
inc
mov
clc
mov
ss
jo
mov
notb
add
cmp
inc
frstor
sub
xorl
pusha
mov
dec
or
addr16
pop
ficompl
lods
sbb
pop
sbb
pushf
adc
aaa
bound
pop
push
mov
fadds
inc
es
adc
loopne
dec
lea
jae
sbb
adc
push
pop
mov
aaa
adc
inc
mov
call
shlb
pop
rcr
cmp
inc
xor
bndstx
mov
adc
test
mov
dec
adc
sub
jg
adc
sahf
rorl
push
or
mov
and
cs
movsl
test
add
cmp
dec
aaa
test
arpl
xorl
xor
mov
jge
jg
daa
mov
xchg
aaa
jnp
dec
sbb
ss
std
inc
insb
cmp
jg
add
rcl
orl
dec
sbb
iret
and
and
add
jecxz
lret
xor
sub
cltd
mov
ljmp
aam
mov
xchg
insb
outsl
aam
sbb
add
je
mulb
addr16
jae
cmp
push
leave
sbb
dec
add
iret
mov
dec
daa
push
mov
fcomps
cmp
stos
xchg
std
flds
or
std
xchg
js
push
xor
sub
dec
arpl
insl
loopne
pusha
int
iret
inc
jle
adc
xlat
ss
add
inc
rorl
sub
mov
pop
test
rolb
fistps
and
mov
xlat
pop
adc
lods
pop
jg
int
cmp
jecxz
mov
adc
and
sbb
loope
cwtl
aaa
xchg
fldenv
push
enter
addb
xchg
lock
and
or
dec
push
daa
imul
insl
jo
lret
inc
repz
sbb
jge
adc
xor
jne
fwait
icebp
sahf
adc
cs
cwtl
add
push
dec
push
ss
pusha
mov
xchg
addr16
jecxz,pn
jl
es
out
jns
dec
push
pop
pop
jmp
adc
dec
mov
dec
or
cmp
inc
or
mov
arpl
adc
call
inc
adc
jmp
pop
add
push
mov
adc
jo
add
in
push
repz
xchg
mov
and
cld
push
shr
fbstp
jne
xchg
cmp
mov
aad
mov
nop
mov
jp
pop
inc
push
mov
pusha
mov
push
cmp
push
adc
jmp
cmp
dec
or
sbb
pop
inc
xchg
sub
jle
es
cltd
mov
mov
jmp
imul
xchg
add
ds
mov
or
dec
and
inc
sbb
lock
mov
add
pop
out
xchg
xor
call
adc
dec
lcall
mov
adc
adc
mov
or
xor
cmpsl
adc
push
jno
aas
dec
add
bswap
repnz
popa
xor
xor
les
sbb
dec
call
das
in
mov
sarb
pop
sub
pusha
or
adc
cltd
loopne
vunpckhps
sbb
adc
xlat
arpl
sub
js
xchg
inc
sbb
inc
xchg
jmp
test
xor
dec
in
test
xchg
xchg
sub
stos
or
mov
mov
arpl
jle
add
dec
call
lods
jnp
jle
sub
mov
add
aam
mov
shl
push
xchg
pop
jge
sub
adc
pusha
jo
fucomip
jg
pop
lea
or
orl
hlt
sbb
stos
and
mov
and
mov
add
adc
loopne
add
sub
andl
sub
mov
sbb
mov
adc
test
jnp
les
jmp
loope
add
cmpsl
lahf
test
popa
nop
sub
rcll
jno
mov
push
insl
or
xchg
or
jge
addr16
xor
push
aas
aaa
xor
sub
jecxz
mov
sub
popf
xchg
lods
jae
mov
add
sbb
pop
jo
pop
daa
jno
jo
mov
ljmp
sbb
push
movsb
xlat
sbb
test
jo
xchg
bound
movsl
int3
cwtl
push
call
test
dec
in
mov
shrb
mov
sbb
nop
push
loopne
and
leave
nop
mov
inc
add
inc
push
dec
inc
cmp
add
pop
add
add
pop
movsb
pop
pushf
jmp
sbb
hlt
add
orl
mov
pop
dec
mov
imul
pop
insl
push
cmp
adc
lock
popf
cmp
inc
add
xor
adcb
fcoms
popa
pop
add
arpl
xor
xor
adc
xchg
mov
sarb
sub
jb
stos
mov
loopne
and
or
test
xchg
xor
sbb
dec
fcoml
inc
pop
and
rorb
in
in
fdivl
loopne
aaa
push
push
rclb
cmp
popf
fdivl
adc
pop
fsts
das
or
scas
outsl
push
stos
mov
mov
mov
ret
xor
xor
xor
clc
mov
push
mov
rolb
or
repz
loopnew
sbb
sub
or
xchg
inc
andl
addb
cmp
mov
dec
cmpsl
shrb
sub
cltd
add
pop
loop
pop
lret
mov
leave
addl
push
dec
je
push
fnsave
push
push
or
add
push
jne
mov
test
fadds
xchg
adc
or
movsb
and
repz
adc
jp
or
out
jo
jae
push
sbb
mov
add
sub
inc
in
shl
mov
add
or
dec
loopne
pop
dec
add
add
les
fsubs
ljmp
test
pop
xchg
push
mov
push
sub
rorl
inc
mov
dec
ja
push
std
mov
xlat
mov
push
rcr
mov
push
call
subb
scas
add
imul
and
push
and
mov
pop
inc
ss
pop
inc
add
jmp
xor
call
jmp
or
adc
dec
enter
jmp
inc
jo
cmp
pop
call
sbb
sbb
jb
xchg
push
adcb
lahf
dec
xchg
je
mov
or
adc
xchg
les
in
out
repnz
std
or
push
or
xchg
xchg
cmp
lock
scas
push
xchg
fdivrl
hlt
push
fdivrs
inc
mov
out
push
je
rcrl
rorl
jmp
cmp
popf
icebp
dec
xor
sbb
push
packssdw
nop
jb
cmp
dec
aam
sub
sbb
and
add
movsb
mov
test
push
cltd
loope
xor
jp
add
adc
in
xchg
mov
push
outsl
addr16
pop
dec
push
pop
push
mov
push
add
dec
cmp
pop
xchg
mov
jp
mov
mov
test
aam
mov
or
and
addr16
roll
cs
push
fs
flds
loopne
sbb
cmpsl
mov
stos
push
mov
imul
sub
dec
mov
add
pop
sbbb
int3
push
pop
jle
pop
pop
push
mov
jae
jae
xchg
add
rcrb
daa
mov
pop
xor
xor
inc
les
dec
jg
insl
cmp
popaw
lods
cmpsb
jno
jb
dec
add
mov
in
int
adc
push
push
inc
xor
and
mov
jb
sub
cli
cmpsl
pusha
bound
inc
push
or
outsb
add
icebp
mov
cs
lahf
sub
sbb
sbb
xchg
sub
ficoml
xchg
loopne
mov
test
lea
xor
ss
mov
xor
pop
inc
not
xor
cmp
popa
and
add
sub
ret
inc
fiadds
mov
cltd
cmc
pusha
dec
add
data16
sbb
push
pop
dec
popf
mov
les
pop
push
dec
insb
mov
adc
and
ret
or
rol
inc
addr16
inc
xchg
and
sbb
add
das
fisttps
xor
sub
in
rcl
dec
sbb
xor
sub
cmp
outsl
inc
mov
push
add
push
inc
push
dec
inc
xchg
xchg
push
cli
aas
dec
push
hlt
call
outsb
jecxz
sbb
dec
bndldx
daa
orb
add
out
leave
enter
sub
push
jg
dec
leave
in
in
out
sbb
add
das
add
dec
aad
leave
leave
js
out
aam
imul
push
mov
js
imul
sbb
or
fimull
add
adc
add
or
push
jne
pop
popf
inc
sbb
pop
lds
inc
int
testb
das
dec
or
add
and
or
xor
xchg
add
push
jnp
outsb
lret
jae
jae
adc
insl
addr16
inc
xchg
mov
jge
mov
dec
and
xchg
jge
out
dec
rorb
out
fs
adc
cmp
jno
popa
call
outsl
jae
sti
fwait
inc
punpckldq
ja
sbb
aaa
cmp
shll
scas
inc
outsb
inc
mov
xor
sysret
inc
int
fs
ds
pop
mov
pop
push
pop
arpl
stos
push
jbe
or
daa
jno
mov
sbbb
lahf
sub
mov
je
daa
push
cs
call
loopne
xlat
xchg
dec
sub
or
xchg
fisttpl
push
xor
xchg
mov
in
pop
stos
sub
arpl
or
and
xor
xor
std
and
or
xchg
xchg
mov
dec
std
mov
adc
jecxz
add
js
xchg
push
add
mov
add
cld
rclb
inc
jg
or
mov
sub
push
jp
or
js
add
xchg
and
sub
popa
fwait
add
add
adc
ret
dec
mov
lods
mov
inc
xchg
fwait
ja
mov
enter
loope
or
es
insl
xchg
in
fs
fs
jl
lret
fs
fs
fs
lret
fs
adc
pop
jge
push
fs
daa
sarb
adc
dec
sub
add
or
cwtl
inc
or
add
stc
clc
and
adc
push
fsubs
adc
inc
and
pop
inc
and
outsb
mov
adc
inc
add
mov
jl
xchg
or
mov
test
jno
or
imul
les
imul
jnp
mov
iret
push
sahf
push
dec
leave
and
pop
mov
xchg
sub
lods
dec
mov
push
dec
popf
xor
xchg
dec
lods
out
es
jecxz
pop
dec
cmpsb
pop
dec
push
lret
mov
and
and
pusha
and
xchg
cmp
or
cmp
or
aam
xor
dec
mov
inc
inc
or
or
xchg
shrl
or
cmp
imul
sbb
iret
inc
and
sbb
ss
addb
rorl
push
dec
dec
idivl
in
xlat
loopne
hlt
mov
insb
hlt
or
dec
or
push
mov
pop
dec
pushf
mov
adc
push
call
int3
dec
push
or
cmpsl
push
lods
nop
es
mov
sbb
jbe
es
shrb
movzwl
clc
shl
add
inc
fsubrl
adc
add
adc
mov
hlt
rclb
mov
test
jmp
in
lahf
push
add
pop
pop
xchg
pop
arpl
movl
push
sbb
sub
popf
push
inc
inc
add
mov
subl
cmp
lea
pusha
or
push
fs
sbb
xchg
inc
mov
cmp
sbb
push
push
cmpsl
push
rol
push
push
or
inc
or
test
xor
dec
cmp
cmp
jg
inc
or
mov
sbb
and
enter
lds
shlb
mov
in
xor
mov
jo
jp
or
ror
lahf
sub
add
ret
xor
jno
mov
dec
cmc
adc
sub
popa
pushf
pop
fsubp
push
and
inc
pop
fwait
jge
clc
xor
mov
adc
loopne
in
xor
cltd
jge
mov
dec
xchg
pop
sub
inc
pop
call
mov
adc
test
adc
fs
rclb
pop
enter
inc
dec
aad
sbb
dec
push
outsb
or
jne
int3
jne
mov
and
jg
push
adc
orl
xchg
test
lock
shlb
imul
mov
inc
mov
cmp
mov
add
aam
xor
fadds
jge
std
pop
arpl
adc
mov
add
ror
jmp
lcall
in
xor
sbb
test
dec
jns
cmp
pop
sub
rolb
mov
ret
dec
mov
int
push
adc
dec
mov
fmul
arpl
loopne
dec
pusha
fsubr
dec
fs
ljmp
pop
xor
and
insl
mov
or
fs
nop
inc
xor
cmp
mov
mov
jbe
xchg
out
out
out
fs
cmp
mov
nop
aaa
jl
cmp
push
subb
hlt
hlt
push
movsl
xor
pop
jno
adcb
xorb
push
fwait
ret
xchg
mov
xchg
daa
dec
pop
jmp
out
mov
mov
pop
inc
shll
push
sarb
dec
daa
inc
addb
xor
xor
call
call
dec
loopne
mov
pop
jo
push
push
mov
and
dec
adc
mul
add
sub
stos
dec
bnd
mov
test
idiv
add
and
pusha
arpl
hlt
inc
mov
in
and
add
adc
mov
mov
in
pop
add
lods
cmpb
jg
pop
dec
or
ret
hlt
and
add
popa
cmpxchg
orb
add
sbb
ja
cld
adc
cmpsl
aam
ret
fcomps
int3
mov
andl
repz
aam
sub
sub
push
lods
inc
int3
vmlaunch
pop
sub
pop
mov
push
popa
adc
leave
xchg
or
pushf
test
aam
add
and
out
dec
jae
inc
inc
and
in
dec
push
nop
hlt
sbb
push
add
pop
jmp
sbb
or
inc
push
push
sub
sub
and
jmp
sub
jne
mov
jle
dec
mov
jbe
dec
mov
sub
jmp
sub
jb
es
addr16
jmp
mov
andb
add
jnp
js
gs
in
in
je
imul
push
ret
adc
add
inc
xchg
push
dec
xchg
daa
xchg
movsl
cmp
test
and
mov
aas
cmp
xchg
xchg
xchg
inc
fnsave
push
mov
cmp
lods
lods
lods
adc
outsl
mov
test
pushw
data16
and
dec
mov
mov
stc
movsb
add
mov
push
test
movsb
xchg
mov
mov
bound
pushf
int
bound
addb
mov
cli
mov
shll
add
arpl
int3
cwtl
cwtl
cwtl
cwtl
xor
push
rcll
nop
in
xchg
dec
rcll
daa
xchg
xor
int3
mov
mov
mov
nop
mov
cwtl
std
les
inc
adc
sbb
daa
inc
xchg
jnp
sbb
cmpl
inc
leave
xor
scas
lock
mov
fnsave
lea
fistl
push
test
das
daa
sti
in
je
enter
adc
and
dec
xor
movsl
jo
jo
rcll
fisttpll
in
fisttpll
or
inc
or
orl
leave
or
pusha
sub
idiv
dec
sbb
push
daa
shll
jae
stc
or
or
xor
iret
lea
push
fbld
cwtl
or
push
popa
cmp
mov
loopne
xchg
int
popa
adc
mov
and
nop
mov
mov
sub
adc
data16
push
ds
cmp
push
add
test
nop
xchg
mov
insl
shrb
jne
jle
in
dec
cld
movsb
inc
aam
adc
sub
lock
inc
sub
adc
pushf
in
or
mov
dec
pusha
repz
ret
shll
cmpsb
or
bound
pop
jl
nop
lret
mov
pop
or
cs
or
push
cmp
or
jp
in
hlt
jne
push
add
adc
out
cwtl
sbb
ret
xchg
roll
lods
test
sahf
and
cli
push
fld
xchg
sbb
lahf
adc
push
push
inc
cmpsl
scas
push
daa
or
mov
fcmovbe
jne
repz
cmp
jo
test
mov
mov
fisubl
imul
imul
mov
cmc
or
jg
in
or
mov
shrb
stos
mov
fmull
sbb
jge
sahf
or
jle
fdivrl
dec
adc
sub
jmp
push
push
or
fsubrl
mov
call
jg
lds
xchg
ljmp
xor
cmp
or
jecxz
cmc
leave
sti
add
push
mov
or
sub
sub
or
xchg
adc
mov
imul
lock
push
movsb
arpl
out
mov
push
add
nop
ret
test
and
mov
cmp
push
insb
push
or
add
jo
iret
push
bound
pop
mov
sbb
or
sub
xlat
sbb
add
inc
pop
shrb
lahf
imul
xchg
and
cmp
dec
jo
mov
dec
adc
test
outsb
jnp
aam
push
push
mov
out
imul
jb
and
jmp
xchg
subb
insb
sbbb
repnz
push
push
sbb
add
push
mov
dec
jl
mov
ret
aam
ss
stc
nop
pop
rorl
inc
lock
iret
push
dec
dec
sub
dec
andl
pop
hlt
adc
jb
and
pop
aas
cmp
add
prefetch
mov
push
outsl
cmp
clc
push
pop
leave
arpl
add
es
xor
xor
mov
mov
push
ss
and
sbb
add
cltd
icebp
or
jne
adc
push
sti
mov
movb
inc
sti
loope
adc
push
insb
movsl
xor
leave
adc
and
arpl
out
xor
outsl
or
or
push
test
cmpsl
movsb
adc
inc
xchg
iret
mov
outsl
pop
or
fwait
movsl
jmp
mov
xchg
je
leave
adc
mov
stc
mov
and
js
ljmp
popf
lcall
loope
jo
dec
orb
and
jns
push
jae
inc
jne
cmc
cmp
and
pushf
aaa
outsl
iret
sub
adc
inc
repnz
cmc
fldenv
loopne
and
leave
ljmp
in
add
jmp
sbb
inc
pushf
repnz
sub
jmp
js
aad
divb
adc
out
and
mov
push
mov
ss
jae
dec
dec
mov
sbb
and
adc
xor
fimull
xor
pop
mov
daa
ljmp
pop
mov
dec
mov
es
or
les
jne
jmp
or
sub
xor
and
push
rcll
cmpsb
push
test
addr16
add
icebp
jl
out
sbb
push
jge
cltd
cmpsl
jp
sub
es
ljmp
xor
and
and
and
sbbb
stos
movsb
aam
adc
or
adc
jne
sub
xchg
xchg
pop
dec
jge
jbe
add
or
mov
dec
jmp
jo
and
ljmp
push
and
je,pn
or
mov
sbb
jb
jmp
pop
sbb
add
je
mov
mov
jle
mov
pusha
stos
pop
jmp
bound
imul
leave
xor
negl
repz
loope
faddl
xchg
adc
xchg
scas
es
shlb
mov
arpl
mov
hlt
jne
xchg
sub
xor
leave
push
inc
sbb
or
por
xor
push
push
push
sub
mov
aaa
add
insl
and
pop
mov
negb
in
add
add
iret
repz
and
lods
test
test
push
imul
push
or
push
lcall
add
adc
lds
jae
inc
fisubrl
rcrl
and
xchg
sbb
mov
testl
filds
cmp
adc
rol
stos
and
sbb
arpl
sbb
jb
or
mov
mov
idiv
aam
ja
push
mov
mov
mov
sub
mov
sahf
xchg
mov
lods
push
xchg
inc
mov
add
adc
into
push
inc
movsl
cltd
sub
repnz
add
adc
fmull
or
out
xlat
fcoml
push
mov
or
loope
sbb
push
jae
lea
xorl
in
add
sbb
arpl
lock
and
dec
movsb
push
data16
dec
ret
inc
and
ret
xchg
aam
outsl
fimull
inc
adc
cmpsl
test
shlb
jle
std
mov
jbe
jnp
gs
es
jecxz
out
incl
rolb
ss
inc
push
add
push
ret
dec
repnz
inc
inc
xchg
cmp
fcomps
ret
mov
shr
inc
sbb
dec
pop
cmpb
pop
aad
mov
das
jne
mov
icebp
mov
pusha
add
fdivs
jb
jl
mov
ja
cmpsb
hlt
pop
sarb
sub
inc
popa
inc
arpl
pusha
add
or
mov
lea
mov
rcl
xchg
mov
fistps
jmp
fs
xor
push
loopne
cmp
sbb
fadds
xlat
movsl
ds
jo
xchg
pop
mov
pusha
push
in
callw
cmp
and
test
cmpsl
mov
movsl
arpl
loop
xor
and
rorl
test
cmovnp
xor
and
add
idiv
ja
mov
add
or
pop
jne
mov
push
loopne
jmp
xchg
adc
or
es
push
mov
and
push
scas
popf
jmp
sub
repnz
inc
push
fistl
arpl
sbb
push
add
dec
inc
das
aas
and
pop
mov
movsb
add
dec
mov
adc
mov
adc
aad
mov
jnp
pop
enter
daa
packuswb
push
aad
call
mov
push
popf
pop
add
call
pop
jmp
push
add
and
lods
add
lods
filds
push
ljmp
addl
lds
add
icebp
sbb
mov
orl
add
push
sub
sub
xor
into
add
leave
or
loopne
sbb
sahf
add
push
gs
cmp
mov
xor
mov
inc
mov
xchg
rcr
xlat
xchg
pop
pop
stos
test
or
cmovbe
xchg
jmp
or
inc
add
jne
xchg
dec
test
mov
test
shlb
xchg
lcall
jb
jbe
mov
inc
cwtl
add
pop
clc
add
cwtl
cmc
loope
movsb
add
bound
sub
add
inc
xchg
inc
or
cs
mov
sub
jno
xor
and
add
mov
arpl
inc
xor
lret
sarb
jp
jae
xor
push
xor
loop
loope
pop
push
scas
ss
orl
sub
mov
push
mov
inc
xchg
push
sbb
repz
fs
out
sbb
and
inc
orb
inc
outsl
and
adcl
adc
shll
push
cli
jno
pusha
int
lock
jg
sub
dec
inc
cmp
add
decl
lods
xchg
rcrb
mov
pop
rorb
in
sar
fmulp
movsl
imul
adc
mov
jb
dec
mov
dec
and
cmp
mov
add
rolb
pusha
mov
push
pop
roll
lods
sbb
test
fidivrs
ret
insl
sub
punpcklwd
jbe
fildll
loop
mov
pop
and
ds
push
mov
xchg
imul
inc
ficoms
inc
fiadds
pop
movsb
andl
push
and
test
ficomps
sub
xor
je
add
in
or
fistpl
outsl
push
testb
push
push
rorb
dec
ja
je
movl
inc
mov
rclb
aam
movsb
fwait
shlb
insb
call
in
movsl
mov
push
lock
cmc
fwait
pop
lcall
mov
ret
idivb
insl
ss
jne
pop
add
out
add
pop
fsubrs
push
and
mov
mov
inc
scas
aaa
call
cmpsl
and
loopne
lret
and
ljmp
push
push
in
fsubr
mov
xor
sub
lods
jg
test
or
or
push
or
dec
adc
or
mov
push
cmp
lcall
mov
mov
adc
movsl
rolb
push
aas
xchg
fcompl
fidivl
mov
add
adcb
je
push
cwtl
or
loope
test
jae
or
lods
das
xor
push
add
insl
fbstp
aaa
sbb
pop
xchg
sbb
sbb
fsubp
cltd
mov
insl
ja
sub
jnp
aam
sub
jmp
les
push
mov
push
imul
or
add
xor
nop
or
adc
in
inc
fs
jge
and
lret
shll
xchg
cmp
or
adcb
inc
pop
dec
shll
mull
aaa
dec
or
mov
and
pop
push
inc
xchg
push
and
gs
orb
mov
mov
add
outsb
addl
adc
mov
mov
mov
dec
arpl
das
dec
dec
pop
jb
xor
jne
out
imul
sub
loope
jmp
mov
dec
in
cmp
pop
mov
push
push
mov
test
xlat
sbb
xor
hlt
popf
adc
insb
aas
out
ss
add
psrld
cmpl
xchg
pusha
popf
mov
mov
hlt
or
insb
ljmp
roll
mov
inc
shrb
cld
add
sub
mov
push
sub
stos
inc
dec
cmp
jl
or
int
sbb
xchg
xor
push
shl
mov
jb
sub
add
xchg
fs
xchg
insl
bound
mov
inc
dec
add
icebp
xor
mov
inc
aam
mov
cmp
cs
imul
add
xlat
ljmp
cltd
hlt
adc
add
xor
stos
xchg
cmp
inc
cmp
int
rcrb
lods
sbb
xor
xor
sub
add
fldl
push
or
inc
or
adc
pop
orb
sbb
test
inc
or
nop
xchg
pusha
add
outsl
fs
and
sbb
and
mov
fcmove
mov
int
inc
push
mov
or
es
nop
jmp
ret
sub
fidivs
out
sbb
call
jle
dec
lds
xchg
lret
in
adc
adc
push
adc
jb
push
push
sub
sub
outsl
jmp
fists
nop
dec
or
neg
jmp
cwtl
mov
pop
and
xchg
andb
push
inc
adc
in
add
add
jbe
and
test
fcmovb
das
mov
cs
cmp
inc
add
add
je
mov
daa
pop
pusha
mull
jmp
insb
and
rcrb
add
invd
add
pusha
ffreep
lcall
test
adc
sbb
pop
dec
mov
push
adc
aas
hlt
jmp
xchg
cmp
cs
xor
and
dec
mov
push
push
dec
fbld
and
fwait
add
in
cmpsl
pop
jp
ds
fs
mov
pop
fwait
movsb
test
scas
mov
xchg
pushf
loopne
sti
shlb
adc
xor
xor
fcoms
es
imul
xor
les
clc
add
rcrb
add
push
cltd
nop
xor
or
adc
pop
push
aam
out
movsl
add
inc
mov
out
sub
ret
mov
adc
sub
out
nop
mov
or
test
mov
fsubrs
add
push
xor
pcmpgtb
dec
loopne
sub
inc
inc
sbb
add
xlat
add
pavgb
adc
cmp
rorb
fists
cmp
inc
xor
std
in
lahf
stos
stc
mov
rcrb
sub
out
pop
xlat
mov
cmp
push
scas
push
or
cmc
sub
adc
pop
outsb
pop
std
lahf
or
clc
push
movlps
sub
stos
cmc
xor
repnz
imul
sbb
in
dec
js
xchg
mov
dec
hlt
int3
add
ss
sbb
add
adc
push
lcall
adc
mov
and
int3
jno
mov
mov
lock
addl
or
in
int
popf
mov
rcrb
lret
stc
test
jne
cmp
inc
mov
or
and
add
test
enter
aaa
rcr
cwtl
lea
mov
pop
or
outsl
mov
addl
hlt
hlt
jg
and
sub
push
xchg
jecxz
ljmp
dec
popf
and
iret
dec
leave
cmpsb
adc
and
and
jmp
test
mov
xchg
rcl
xchg
fsubrl
push
mov
mov
mov
popf
clc
xchg
jno
xor
loopne
xchg
add
fisubrl
gs
call
xlat
ud0
and
lods
scas
xchg
add
lock
insl
ljmp
punpcklbw
dec
call
and
fs
inc
cmp
cwtl
sbb
xchg
jno
sub
mov
xchg
mov
sbb
adcl
cmp
inc
testl
in
aaa
push
and
adc
cmc
lea
or
push
fists
add
push
mov
aaa
or
mov
sarb
jp
pop
dec
lods
cmp
int
or
mov
jg
push
or
in
das
add
and
mov
mov
pop
jns
or
xchg
loopne
sbb
cmp
addr16
faddl
mov
and
or
adc
jge
dec
and
inc
add
pop
add
xorl
leave
dec
add
xchg
xchg
inc
add
jbe
in
cli
jmp
adc
in
mov
mov
mov
dec
testb
stos
je
push
ja
jmp
insl
jge
push
mov
out
enter
jne
scas
cmp
leave
push
jne
xchg
dec
test
inc
xchg
dec
jb
mov
mov
and
mov
mov
mov
dec
stos
fnstcw
or
jp
imull
sbb
out
insl
sbb
push
jno
es
call
mov
das
clc
pop
mov
fidivl
adc
stc
jo
lods
pop
dec
pushf
xchg
push
adc
gs
ds
push
fsubr
sub
cmp
cmp
pop
cmp
pop
pop
xchg
push
cmp
cmpsl
inc
sbb
jecxz
incl
mov
or
cwtl
ss
cltd
dec
scas
xor
rcll
cwtl
and
lods
adc
jg
insl
call
rolb
stos
in
xchg
fcmovu
push
jns
sub
ret
mov
out
or
and
mov
rol
inc
pushf
bnd
int3
pop
ss
push
xor
movsb
fimuls
cli
inc
in
mov
sarb
ds
xor
lret
in
iret
lret
pop
aam
xchg
and
lds
out
sbb
dec
adc
inc
adc
mov
movsb
jns
dec
pop
inc
push
jge
jno
push
shufps
lret
and
mov
and
adc
popa
aad
lcall
or
mov
fwait
dec
ret
popa
ret
push
gs
into
push
ret
mov
fsubrl
or
ffree
xchg
xchg
xchg
push
or
push
ret
ret
les
popf
dec
imul
sub
xchg
push
mov
cwtl
mov
pushf
adc
les
xlat
in
add
lea
fsub
dec
insb
xchg
lods
xchg
pop
mov
jbe
repz
hlt
and
daa
call
outsb
sbb
mov
pop
out
mov
and
inc
hlt
mov
mov
sub
jl
xchg
cmp
mov
ds
nop
sahf
pop
xor
shll
scas
push
shr
int3
xorb
out
xchg
and
adc
movsb
arpl
dec
add
inc
shrb
dec
faddl
dec
ret
or
or
fisttps
sub
and
and
inc
scas
inc
sub
mov
xchg
fildl
adc
add
push
ret
cmp
testl
repnz
cs
mov
loope
sub
loope
sub
sbb
inc
cmp
mov
jne
jmp
rcll
sbb
ficompl
fistpl
jae
pop
or
fldcw
jecxz
nop
pop
or
mov
pop
aaa
aam
add
cwtl
jge
mov
lret
sbb
loopne
stos
mov
pop
adc
lea
xchg
mov
jmp
cmp
in
shlb
push
or
push
lock
rdmsr
xchg
mov
cmp
or
add
insl
imul
inc
hlt
and
sbb
adc
pop
add
jmp
inc
adc
jl
xor
mov
inc
mov
dec
inc
inc
cmc
dec
dec
jne
cmp
cmp
xorl
cmp
arpl
inc
or
mov
inc
cli
push
lret
lahf
pop
adc
xor
mov
ret
xchg
pushf
imul
pop
test
push
adc
pop
pop
arpl
mov
cmpsb
or
xor
adc
fcoml
or
cltd
jecxz
jae
or
in
stos
add
rcrl
adc
out
mov
add
adc
sbb
loope
jo
leave
xchg
or
iret
mov
inc
adc
or
xchg
nopl
rolb
add
sbb
add
sbb
mov
ja
push
xchg
lods
fwait
inc
xchg
xchg
inc
popa
xchg
sbb
or
push
popa
mov
pusha
add
jno
jge
pop
xchg
ret
and
pop
pop
xor
js
mov
and
stos
mov
shlb
sub
loopne
je
icebp
xor
jge
outsl
inc
sahf
divb
push
and
lahf
das
lea
jle
into
push
sbb
mov
dec
ja
cmp
int3
movsl
cs
ds
dec
sbb
inc
adc
mov
int
mov
mov
enter
xorb
fimull
testb
pusha
fdivs
or
cmp
jmp
dec
sti
ret
sub
pop
outsb
into
lahf
cmc
xchg
push
mov
clc
fs
insl
movsl
pusha
imul
fsubrp
cmp
ss
or
or
xor
push
push
imul
add
lret
xchg
daa
call
push
add
mov
in
andps
mov
add
dec
outsb
psllq
loopne
xor
lret
sbb
shlb
fidivs
dec
bound
loope
in
mov
je
cmpl
aad
ret
push
inc
loope
sub
cmp
xor
mov
push
packuswb
or
gs
outsl
pop
inc
cmp
cld
lea
outsb
or
jno
ljmp
add
dec
imulb
or
add
sarl
movsl
ja
outsl
mov
pop
lcall
xor
xor
sbb
xor
mov
jb
mov
xor
shll
xchg
xchg
subl
dec
test
rorl
jns
lods
mov
xor
dec
in
ret
inc
fisttps
dec
xor
insl
or
stos
xchg
mov
and
aaa
mov
aas
cmp
aaa
adc
pop
rorb
cld
cld
fcmovb
stos
inc
out
push
xor
cmp
stos
inc
jne
or
lds
mov
or
sbb
insl
xchg
sar
stos
inc
in
dec
or
mov
fsubl
insb
and
out
popa
or
daa
or
ja
adc
inc
pusha
push
add
mov
sbb
adc
test
lea
jb
mov
call
fisttpll
sub
sbb
push
popa
mov
and
inc
push
push
mov
inc
test
gs
iret
mov
mov
and
fadd
fbld
sti
lret
in
jmp
test
loope
sbb
mov
push
xlat
wbinvd
insb
out
xchg
xchg
rcll
in
adc
cmp
repnz
addr16
lcall
xchg
and
jb
jle
pop
push
ss
in
ret
daa
xchg
std
jae
cmpsb
test
push
sbb
inc
sahf
aas
mov
sub
mov
push
test
adc
add
dec
or
hlt
jno
dec
jne
pushl
push
hlt
mov
push
push
adc
inc
js
in
add
repnz
call
xchg
lods
pushf
xor
test
adc
cmc
ret
sbbb
fnsave
and
and
adc
aas
insl
lods
mov
in
rcrb
push
aam
cmp
in
lret
in
loopne
xchg
lret
loopne
in
mov
lret
mov
inc
iret
call
cs
lock
hlt
aaa
clc
mov
ss
and
cld
data16
push
fsubs
xchg
rcl
mov
adc
nop
mov
lcall
sbb
xchg
fbld
add
or
jmp
aad
or
jae
mov
addl
mov
and
ds
rol
negb
inc
or
cmp
test
imul
cmp
ror
ss
sbb
or
call
cmp
and
rorb
lds
dec
pop
pop
adc
icebp
add
pop
outsl
arpl
xchg
dec
jbe
dec
adc
inc
std
aam
sbb
les
dec
es
ret
scas
add
add
gs
bound
arpl
out
mov
enter
fcom
xchg
mov
sbb
cmpl
or
dec
or
nop
or
test
pop
ja
pushf
mov
fmuls
adc
xchg
imul
repz
mov
stos
inc
pushf
adc
jp
jo
mov
or
cmpl
test
mov
xor
mov
xchg
mov
lods
in
popf
push
leave
int3
cmpl
out
pushf
xlat
cli
jmp
out
adc
fsubl
out
pop
xor
ror
out
push
mov
cld
sub
ficomps
xchg
movsl
sbb
mov
xchg
int3
hlt
pop
adc
aaa
or
in
jno
shrl
sub
inc
and
dec
cmp
xchg
pushf
lea
adc
mov
lcall
popa
xor
or
hlt
add
pop
call
add
test
pop
inc
pop
mov
mov
adc
cmp
or
jno
mov
adc
adcl
pop
xchg
cmp
jecxz
daa
mov
mov
add
sub
and
jbe
fwait
adcl
sti
xor
fsubrs
mov
shll
cld
pop
pop
nop
xchg
lock
sub
dec
jne
inc
pop
mov
inc
loope
arpl
or
adcb
mov
pop
lods
and
inc
addr16
mov
or
mov
or
and
dec
insb
jmp
or
and
jmp
test
xor
in
aad
jne
pop
adc
inc
add
daa
lock
lods
sub
orb
mov
icebp
xor
and
and
leave
aas
xor
xchg
arpl
xor
insl
inc
movsl
rolb
cld
pop
pop
and
pop
jb
mov
mov
dec
xor
test
jne
mov
loopne
xchg
loopne
pop
xor
imul
je
pushf
jp
sub
daa
add
mov
lds
jns
adc
cmc
lock
sub
jo
add
xor
and
aam
lock
addl
nop/reserved
fadds
or
jmp
xlat
lock
add
mov
push
sahf
mov
push
paddsb
inc
jbe
add
in
iret
add
push
sbb
sub
or
arpl
adc
or
or
or
sub
rclb
mov
add
andl
ljmp
add
dec
fcom
ss
addl
inc
pop
aam
jmp
add
loopne
dec
or
ror
adc
lods
subl
jecxz
and
xor
and
and
fidivs
mov
filds
seta
fwait
enter
add
sbb
insb
jb
imul
test
or
add
popa
xchg
movlhps
lahf
rcl
sub
or
fsubl
sbbb
in
xor
pop
or
nop
nop
cmp
adcb
push
pusha
clc
pop
pusha
shl
daa
sbb
jp
lret
push
or
stc
int3
dec
jge
cmpsb
inc
test
popa
xchg
dec
sub
or
mov
or
jecxz
dec
cmc
jae
add
shrb
push
hlt
push
test
xchg
mov
add
and
mov
add
mov
mov
movl
sub
imul
mov
push
sub
inc
mov
js
bound
sub
add
and
inc
incl
shrb
mov
mov
mov
cmp
xor
nop
mov
and
inc
or
pushl
subl
add
je
sub
js
cmpsb
xor
in
pop
mov
adc
loope
ljmp
cmc
mov
test
popa
push
or
xchg
sbb
dec
xor
push
jnp
insb
jge
data16
mov
cs
outsb
add
or
jne
icebp
xor
faddl
data16
mov
loopne
dec
cltd
fwait
sub
adc
xchg
enter
dec
mov
les
dec
sbb
adc
in
sub
stos
add
cmp
lret
adc
dec
mov
movsb
test
xchg
les
lods
inc
dec
mov
insl
rorb
sub
mov
cmp
jnp
insb
shl
push
push
xchg
rorb
pop
and
sub
pushf
inc
xor
or
cmp
movsl
inc
arpl
sbb
push
push
pop
pop
mov
jg
lods
lods
dec
jae
divb
jmp
dec
add
movl
mov
adc
jo
add
cwtl
cwtl
ds
mov
clc
testl
push
xor
aaa
xchg
nop
or
jmp
adc
test
sbb
ret
loop
mov
dec
in
ss
sbb
xor
adc
sub
cmpsl
test
inc
or
or
rcr
insb
std
xchg
mov
pop
dec
rclb
mov
and
cld
cwtl
mov
mov
loopne
leave
pusha
adc
pop
lcall
stos
inc
les
xlat
mov
lcall
in
lock
sbb
aam
jnp
clc
fmuls
aad
movsl
and
sub
sub
sbb
scas
jo
sbb
in
cs
ficoml
lock
je
sbb
shlb
loopne
mov
adc
dec
imul
pop
cld
test
mov
pop
or
es
loopne
adc
test
rcrl
pushf
mov
push
sub
inc
inc
mov
mov
inc
es
cld
push
xchg
adc
cmp
sbb
push
lea
or
je
mov
sub
daa
pop
inc
call
mov
jo
insb
in
mov
push
mov
sbb
data16
daa
mov
dec
add
adc
sub
enter
jb
clc
inc
cs
push
int3
sbb
dec
cmp
cmp
cmp
lock
and
and
mov
outsb
and
shlb
xchg
mov
jmp
add
pop
pop
mov
or
sbb
jle
les
and
ss
mov
or
dec
jl
mov
push
jbe
jae
cltd
pop
insb
out
mov
adc
adcl
xlat
add
or
mov
or
mov
or
push
push
push
sbb
out
cmp
push
ficoml
and
mov
and
fistpll
vpmacsswd
dec
call
test
addl
mov
ret
mov
cmp
cmpsb
dec
and
or
or
adc
addr16
nop
test
ret
movsl
imul
hlt
or
fcoms
mov
push
sbb
adc
push
stos
mov
or
aaa
xor
or
inc
pop
mov
and
stos
stos
add
mov
dec
mov
sbb
insb
inc
adc
ficompl
jl
dec
jg
mov
scas
inc
inc
mov
inc
dec
add
xor
jp
dec
cmpb
loop
lret
cmp
cltd
push
adc
jb
and
or
cmc
xor
jb
clc
or
or
insl
sub
xchg
cmp
inc
mov
or
adcl
dec
pcmpeqd
imul
adc
popa
jae
xchg
adc
xchg
push
pop
cmp
test
push
sub
mov
jo
adc
jl
pusha
sbb
cmp
cmp
subb
into
and
adc
test
mov
adc
xchg
dec
clc
sbb
sub
stc
test
add
or
and
scas
and
es
sub
cmp
in
stos
adc
test
mov
and
test
push
inc
pop
lds
add
jno
rol
inc
or
outsb
aas
test
dec
fldenv
daa
dec
lock
push
test
pop
fsubrp
lcall
pop
push
inc
pop
dec
data16
push
ja
fcomps
movsl
insb
insb
pop
movsb
into
gs
pop
add
sub
dec
pop
outsl
adcb
add
push
mov
pusha
inc
pop
and
add
adc
sub
sarl
rorl
jns
repz
ret
pushf
pushf
mov
ret
gs
sahf
cmp
daa
daa
and
lds
iret
dec
xchg
xchg
daa
and
jle
test
arpl
mov
push
fwait
test
and
xor
push
sbb
test
or
movsb
pop
adc
popa
shrb
pop
mov
insl
sbb
sbb
cmpsb
rcr
mov
nop
aas
shl
rorb
push
dec
mov
rorl
sbb
xchg
stos
add
ror
sub
or
imul
xchg
test
add
mov
jg
adc
and
mov
xchg
mov
fs
push
add
add
test
pop
xchg
adc
mov
shll
adc
mov
pop
imul
mov
jl
andl
je
pop
inc
add
imul
inc
jl
adc
repz
insl
jns
push
rorb
and
inc
js
jnp
shrb
push
adc
xchg
sub
les
and
lds
gs
imul
loope
test
mov
or
jo
dec
stc
sbb
xor
ret
ja
jl
jo
lods
in
in
pop
xor
nop
ljmp
inc
xlat
sub
mov
popa
sbb
cmp
loopne
pushf
jmp
mov
push
roll
ret
mov
push
or
dec
stos
loope
addb
outsb
add
sub
push
xchg
out
outsl
jmp
mov
shl
dec
adc
push
inc
ds
cwtl
inc
add
add
hlt
xchg
xor
mov
lock
mov
test
rcrb
xchg
imulb
not
mov
jnp
sbb
sbbl
pop
or
stos
pop
jae
xor
clc
out
inc
ljmp
sbb
fisubs
enter
pop
add
and
xchg
in
enter
clc
push
enter
enter
scas
enter
shl
adc
xor
mov
enter
inc
lods
outsb
adcl
inc
das
stos
inc
inc
lods
imul
loope
add
popa
add
mov
test
and
and
add
cmp
push
xchg
adc
iret
adc
stos
jge
xchg
and
add
orb
jge
xchg
adc
adc
pop
sbb
mov
pop
dec
dec
or
sub
bound
les
xchg
dec
mov
pop
outsl
imul
add
dec
movsb
movsb
pop
test
pop
cmpsl
dec
mov
mov
das
cmp
clc
mov
je
aad
adc
das
mov
jl
bound
mov
or
push
mov
lahf
mov
sahf
xchg
lea
lods
xlat
repnz
rolb
mov
cmp
add
add
add
pop
adc
cmp
js
add
aad
scas
and
stos
and
sub
dec
push
lds
pop
lods
popl
xchg
into
lcall
stos
xchg
inc
sbb
push
pop
sub
decl
fabs
xor
and
cld
mov
pop
xor
dec
int3
pop
enter
push
test
jmp
int3
decl
stos
jno
add
xor
push
cmp
int
xchg
xor
push
adc
adc
pop
rcl
add
inc
xlat
jp
pop
and
mov
add
dec
bound
mov
inc
xchg
xor
push
xor
jg
test
loop
inc
pop
sub
mov
xor
cli
add
stc
lea
sub
xchg
dec
pusha
mov
loope
popa
mov
mov
push
int3
xor
dec
sbb
pop
sbb
pop
adc
cmp
cmp
xlat
lcall
pop
mov
jb
leave
pop
mov
ss
or
js
inc
hlt
and
outsl
inc
push
out
cmp
sub
mov
jg
or
xor
add
insl
sub
mov
push
jnp
dec
loopne
dec
jp
mov
push
shlb
pop
jne
imul
mov
sbb
shrb
mov
cmpsl
and
fyl2xp1
mov
rcll
mov
push
mov
add
inc
push
shlb
je
lds
subl
fwait
lret
andb
cmp
mov
rcrb
or
pinsrw
aaa
ss
pop
stc
ret
mov
xor
dec
lods
test
outsb
addr16
pusha
insb
je
rdpmc
pusha
mov
outsb
add
dec
into
or
mov
cmpsb
jge
mov
nop
mov
cmpsb
test
adc
cltd
mov
adc
mov
push
mov
ljmp
mov
ret
or
xchg
add
enter
cltd
dec
int3
cmpsl
ja
sbb
movsl
cmpsl
lock
rclb
shlb
push
fsub
js
rclb
push
or
pop
or
adc
inc
sbb
repnz
jbe
adc
add
lods
jne
inc
outsl
loopne
test
xor
sbb
push
pop
push
repnz
fisubs
push
xchg
js
arpl
jbe
add
clc
rol
and
inc
dec
sahf
dec
sbb
xchg
add
rolb
add
push
xchg
sarb
call
inc
xlat
or
and
jmp
or
push
and
das
add
ret
inc
xor
jno
insb
loope
sti
push
fwait
push
das
or
imul
sub
rolb
enter
sarb
pusha
xorl
pop
stc
movsl
popa
xchg
mov
adc
pop
jne
clc
xor
gs
mov
or
adc
mov
dec
xchg
push
push
adc
add
nop
inc
lds
sbb
inc
loop
adc
inc
pusha
push
testb
jae
inc
inc
nop
or
xor
orb
fs
insl
bound
movsl
inc
and
and
xor
xor
ret
int3
and
cmp
sbb
mov
inc
je
push
mov
and
es
hlt
push
push
cmp
cmp
add
les
or
jbe
add
repz
xor
adc
mov
cltd
daa
jne
jnp
lcall
sub
aam
xor
pop
sahf
mov
xchg
daa
mov
adc
jmp
mov
shll
add
repz
dec
mov
mov
sub
jge
xor
lcall
cmp
xor
mov
mov
or
push
xchg
mov
add
push
push
sbb
or
mov
movsl
ret
mov
inc
dec
cmpsl
ja
and
test
sbb
xor
test
or
add
or
loope
xor
and
inc
or
mov
enterw
or
adc
sub
jbe
inc
stos
aas
jae
out
dec
xchg
mov
imul
or
je
aas
xor
push
xchg
or
lods
xchg
or
push
sbb
mov
lcall
test
add
mov
fsubr
adc
in
in
loope
shlb
mov
sbb
mov
in
pusha
mov
and
pop
mov
and
or
call
and
and
push
nop
dec
es
inc
sub
inc
in
and
mov
in
mov
or
pop
lock
inc
xor
mov
and
test
int3
les
xor
shll
sub
shll
and
add
lret
int3
and
mov
fwait
sbb
sarb
pop
sub
pop
pushf
fldl
and
pop
popf
pop
rolb
ss
mov
fcom
lock
mov
imul
pop
aam
call
fidivrl
lock
mov
fsubl
adcb
les
pop
clc
inc
push
fs
mov
pop
aam
das
fs
fidivs
add
popa
push
sbb
sbb
test
aaa
adcb
addr16
push
mov
aam
iret
or
popf
imul
xor
mov
cmp
push
cltd
inc
neg
dec
dec
pop
xlat
jns
sub
ja
arpl
addr16
inc
add
xor
das
push
fmuls
jne
jns
adc
jmp
shrb
mov
mov
jnp
jmp
jle
mov
sub
dec
jns
jl
addr16
add
or
call
cmp
jne
cmpsl
movsl
test
repz
xor
push
or
call
test
inc
imul
int
inc
or
or
rcrl
or
xchg
xchg
ret
stos
push
nop
les
movl
dec
clc
jg
out
or
aam
int
call
pop
mov
loope
loope
mov
dec
je
adc
arpl
sbb
sti
and
call
mov
mov
add
test
orl
inc
or
xchg
lea
dec
dec
mov
or
xchg
push
push
adc
sbb
push
dec
pop
fwait
adc
lods
mov
cmp
in
or
push
add
das
mov
js
push
iret
adc
call
out
imul
sub
and
andl
cmp
xor
or
push
icebp
cmp
sbb
test
insb
or
and
add
cltd
pop
dec
fwait
dec
xorb
popa
push
cmp
test
ljmp
push
js
and
adc
or
fsubs
dec
mov
add
scas
sub
sbb
pop
and
ficomps
add
push
push
lock
adc
xor
jecxz
pop
adc
and
jmp
js
pop
sbb
and
outsl
aad
push
or
movsb
mov
movsl
fcmovnu
movb
pop
mov
add
in
lds
pushf
push
fsubrp
inc
nop
mov
sub
mov
fmuls
aam
lods
and
mov
das
add
dec
test
mov
mov
xorl
sbb
mov
je
pop
rol
xchg
xor
aam
scas
inc
call
cmp
and
lret
sub
cmpsb
xchg
mov
and
jmp
insl
movsl
rcrl
jne
jns
es
stc
jns
jecxz
fiaddl
and
shll
or
addb
call
pop
fnstenv
push
aam
add
outsb
sbbl
insl
jp
sub
sarb
jp
cmp
mov
mull
pushl
xor
fnstenv
mov
add
daa
and
push
and
xchg
lds
or
je
xchg
dec
add
and
movsl
push
sbb
sbb
popf
add
mov
shl
cmp
push
mov
jmp
push
mov
add
adc
popa
add
mov
sbb
cs
mov
movsl
rol
mov
sub
out
jle
or
dec
in
cmp
arpl
rol
mov
push
in
and
test
sbb
dec
inc
daa
jmp
cmpsb
loope
mov
and
mov
xchg
sub
outsl
add
rclb
inc
cmpsb
sbb
push
sbb
inc
stos
loope
popa
jnp
das
mov
push
push
enter
inc
es
xorb
int
or
sbb
enter
mov
clc
xchg
test
sbb
adc
xor
or
adc
jne
jmp
shrb
arpl
cmp
hlt
data16
in
rcl
je
aad
xchg
push
dec
add
push
popa
enter
jne
out
jns
movsl
mov
movsl
in
pushf
inc
or
sbb
jge
pop
add
add
xor
fs
loop
jg
pop
and
into
sti
pop
pop
adc
and
or
sub
inc
push
cltd
lea
ljmp
lods
jg
pop
add
cmp
imul
lods
dec
setno
jno
clc
inc
mov
arpl
push
push
aas
mov
jo
orb
fucomip
adc
shll
fidivs
nop
sbb
fistps
ss
or
popf
fsubrp
mov
clc
loopne
add
mov
or
ss
call
aad
inc
dec
orl
pop
and
add
jnp
push
in
jno
shll
push
sub
adc
pusha
ljmp
push
pop
sub
jo
je
inc
roll
into
push
pop
mov
cltd
aam
inc
add
and
fcmovnbe
xchg
sub
sub
push
pop
movb
mov
jne
test
bound
mov
pop
mov
add
push
adc
inc
neg
add
lea
mov
xor
dec
loopne
in
ret
xchg
jmp
cmp
inc
lcall
ret
mov
das
dec
push
cmp
xchg
je
jno
test
sbb
addl
cmpb
dec
shl
call
test
sub
in
ficoml
push
adcb
xchg
mov
jns
dec
sub
lahf
popa
adc
inc
sub
mov
loop
pop
xor
pop
inc
lahf
mov
add
or
test
das
ret
std
int3
dec
inc
jp
pusha
xchg
inc
pop
lods
add
xlat
dec
jp
xchg
sbb
and
cld
fdivs
adc
mov
stos
leave
mov
dec
push
int3
out
add
jg
inc
bound
leave
inc
mov
adc
inc
mov
or
loope
movsb
xchg
mov
pop
xor
stos
adc
add
or
push
aaa
dec
imul
add
out
cmc
and
add
dec
lock
ss
in
push
ss
mov
xchg
push
rcrb
cwtl
lock
push
jne
and
xchg
xchg
out
das
or
call
arpl
fwait
mov
mov
mov
jecxz
enter
iret
adc
dec
repz
inc
adc
pop
fcoms
imul
xor
mov
ficoms
mov
outsb
and
push
dec
mov
add
pop
add
inc
mov
xor
xchg
lret
and
inc
inc
insb
nop
inc
cs
dec
dec
and
orl
dec
push
movsb
scas
or
push
loop
adcl
add
jo
fnstenv
cmpsl
pop
dec
insb
push
inc
xlat
xchg
jge
test
stc
and
fdivrl
and
dec
push
lock
xor
fildl
and
jmp
sub
mov
stc
clc
mov
jge
sbb
mov
add
xchg
inc
sti
add
aam
and
sbb
les
addb
insl
sbb
push
xbegin
jg
or
jecxz
es
inc
add
jae
sub
add
test
push
fwait
or
cltd
xchg
in
in
fmuls
stc
sub
in
in
hlt
dec
mov
loopne
sbb
jmp
movb
mov
sub
mov
shll
in
sarl
or
jl
fbstp
out
stos
inc
cmp
cmc
test
sbb
stc
fnsave
sub
xchg
fcmovnb
add
aad
lock
loopne
adc
sbb
push
fwait
test
sub
mov
movsb
loope
mov
lods
xchg
xor
dec
rolb
int
and
mov
push
pop
lods
mov
into
inc
scas
or
jle
mov
frstpm(287
xor
fildl
loopne
nop
dec
xor
dec
jmp
jb
aas
daa
inc
add
fcmovu
subb
inc
and
insl
jecxz
add
imul
fucomp
or
sub
pmulhuw
fsubrs
push
rcrb
into
adc
cmpsl
movsl
lret
sbb
shrb
pop
stos
mov
push
mov
inc
ja
dec
repnz
cmp
adc
push
or
xchg
pop
jl
mov
mov
js
sub
mov
xor
cmp
lods
fsub
adc
jge
adc
sub
popf
add
push
fdiv
push
int3
or
orl
inc
pop
dec
jb
sbb
mov
xchg
in
add
test
mov
dec
and
jne
pop
adc
sbb
push
pop
test
or
mov
inc
aaa
mov
cmp
mov
sbb
cwtl
popl
or
pop
xor
jo
mov
push
lahf
pop
es
dec
xchg
lret
push
or
and
sbbl
sti
cmp
or
inc
mov
xor
es
or
add
xor
add
sbb
dec
iret
aam
add
shrb
and
xor
outsl
dec
mov
clc
mov
sbb
nop
lret
loope
pop
and
mov
je
mov
dec
push
xor
push
add
inc
sub
jnp
inc
ret
lock
lock
add
dec
ds
push
add
add
and
fsubl
sti
mov
int3
inc
imul
pusha
sbb
sbb
out
sub
adc
lret
lods
dec
pop
clc
mov
xchg
sub
adc
testb
std
mov
adc
jl
sub
and
add
aam
dec
xor
rcl
fcomp
mov
cmpsl
sub
loopne
int3
aam
adc
cmpsl
mov
les
out
add
adc
jle,pt
mov
stos
sbb
loope
and
out
cmpsb
push
filds
sub
mov
pop
ja
and
jae
addb
les
mov
mov
mov
inc
or
pop
xchg
cmp
bound
add
push
adc
push
pop
adc
push
jnp
out
sbb
adc
fs
in
xchg
jo
ret
in
push
xchg
jne
mov
or
mov
subl
add
rclb
pop
mov
mov
adc
dec
and
jns
pop
icebp
sub
add
rcrb
push
push
sub
arpl
push
lods
aam
push
mov
imul
jno
daa
mov
xchg
int3
add
mov
enter
pop
daa
push
cld
rol
add
pop
jle
mov
cltd
repz
outsb
dec
adc
jecxz
add
rol
sbb
inc
xor
mov
jl
mov
mov
cltd
jmp
fwait
mov
shlb
call
popf
enter
jns
dec
pushl
imul
ret
sub
add
or
push
fwait
inc
or
push
or
push
adc
or
inc
sub
cmp
inc
push
or
call
fidivrl
hlt
or
leave
in
insb
pop
inc
lock
test
add
mov
fbstp
fiadds
rclb
add
dec
pop
in
das
iret
mov
rolb
xor
adc
xor
repnz
lods
in
dec
test
imul
inc
and
add
lock
loope
mov
add
cs
shlb
insl
es
rcl
add
mulb
in
cltd
aam
sub
push
jmp
mov
xchg
shrb
adc
pop
mov
push
fs
mov
inc
push
pusha
cmp
ja
xor
push
out
roll
imul
aaa
and
dec
xchg
pop
adc
mov
inc
insl
call
cli
sub
push
jl
aas
mov
dec
cmp
nop
imul
inc
test
mov
or
rcrl
push
aad
sbb
jg
popa
push
adc
xchg
jo
xor
dec
add
movsb
sbb
gs
xchg
test
add
test
ret
fmuls
sbb
ret
pop
pop
sbb
adc
add
and
test
mov
mov
push
push
fdivl
jo
add
adc
adc
fs
pop
testl
pop
cwtl
bound
sbb
mov
add
jnp
fdivs
add
sbb
shl
cs
inc
int
push
test
sub
pop
lcall
sbb
pop
xor
out
nop
clc
sub
pusha
imul
cld
xor
jo
xor
out
aam
sbb
and
or
jne
mov
pop
and
and
lods
rcrl
mov
sub
cs
mov
ret
dec
cltd
jns
push
pop
fnstenv
outsb
nop
pop
lret
mov
lods
mov
adc
ss
or
xchg
pop
int
push
pushf
cmp
xor
dec
sbb
fldl
fsubs
fisubrl
lds
push
pop
dec
push
xchg
data16
push
or
pushf
cmp
push
cmc
add
lods
xchg
jle
or
lods
pop
dec
dec
movsb
insl
xchg
push
lcall
bound
push
sbb
adc
movsb
jl
sbb
and
sbb
sbb
pop
add
sub
mov
ja
fwait
mov
pop
outsl
dec
push
jno
push
mov
xchg
std
add
fstl
and
push
mov
inc
mov
adcl
push
inc
adc
xorl
push
dec
sbb
and
sbb
aam
arpl
sbb
mov
mov
insl
xchg
sub
inc
in
dec
fsubrl
sbb
call
adc
cs
popf
and
adc
push
in
or
or
inc
cs
jno
gs
inc
inc
mov
sbb
sbb
mov
rcrb
flds
inc
imul
adc
pushf
xchg
xor
xchg
jns
adc
push
cmp
ljmp
push
movsl
dec
aaa
stos
push
fptan
cmpsb
mov
test
sbb
add
adc
push
int
inc
imul
push
jmp
xor
dec
pop
inc
rorl
adc
add
shlb
dec
sbb
sub
mov
popa
push
dec
push
dec
test
push
dec
and
push
adc
or
cmp
add
or
pop
int3
nop
mov
addr16
sbb
jl
test
ret
xorb
mov
lahf
xor
and
sub
cmp
adc
lock
insl
add
jmp
and
push
and
out
mov
sbbb
or
or
hlt
out
or
lds
xor
push
mov
mov
jmp
inc
std
inc
adc
push
iret
adc
aam
and
sbb
std
push
jecxz
adc
outsl
and
js
or
orl
sarb
pop
lods
insb
insl
jae
xor
cli
insb
dec
jae
cwtl
je
xchg
or
dec
push
leave
xchg
int3
sar
xchg
pusha
push
push
add
sbb
test
add
mov
shrl
jge
and
int3
lahf
lock
sbb
ss
je
add
add
adc
fisttps
dec
jge
push
test
adc
pop
or
negl
mov
rcl
fdivs
push
pop
jne
dec
inc
insb
clc
and
dec
sub
out
or
dec
inc
stos
add
les
in
jne
ret
pop
clc
and
sbb
cmp
lcall
dec
jae
sbb
bound
xor
out
adc
xchg
adc
xchg
push
in
std
jne
add
pop
lock
push
movsb
sbb
nop
in
sti
int3
pop
sub
mov
mov
ror
fwait
or
shlb
pop
adcb
clc
aam
ret
jg
aaa
sub
sub
jl
inc
pop
xchg
inc
insl
in
inc
test
addb
sarb
pusha
cmp
shll
xchg
pop
fisubrl
fcoms
ret
dec
pop
push
dec
pop
lret
ja
lods
adc
pop
addr16
fldenv
nop
inc
xor
add
mov
push
int
mov
or
xchg
lret
push
hlt
hlt
xor
push
nop
xchg
lock
xchg
sbb
mov
popa
cs
xlat
jecxz
push
or
inc
cmp
int3
lods
adc
adc
sbb
aaa
pop
sbb
or
push
daa
mov
ficompl
sbb
mov
cmpsb
mov
mov
add
mov
push
lods
jmp
ss
push
out
add
or
sub
adc
stos
push
loop
pop
jge
les
js,pn
das
or
xchg
sub
int
pushf
loop
lsl
xlat
std
add
jmp
mov
or
insb
push
or
inc
movsb
imul
data16
outsl
hlt
xor
push
mov
push
outsl
pop
stos
mov
test
fiadds
gs
adc
mov
inc
or
and
sbb
xchg
clc
and
push
lcall
add
pop
pop
push
cmp
sbb
mov
stc
loope
adc
outsl
xor
inc
mov
sbb
iret
les
cmp
mov
lcall
or
movsl
push
xlat
nop
sbb
cmp
addr16
and
mov
aaa
iret
xor
pop
xor
mov
add
cmp
popf
gs
push
inc
cmpsb
inc
cs
adc
rcll
lods
rorl
in
adcb
lds
push
inc
lods
pop
aam
ja
push
loopne
sbb
mov
ds
sbb
sbb
inc
xor
inc
stos
sbb
mov
ss
fldcw
aam
inc
mov
cwtl
push
xor
mov
iret
push
jmp
out
xchg
jns
xchg
xchg
cwtl
mov
lods
and
mov
sarl
rcrb
dec
sbbl
js
cwtl
and
adc
jb
mov
outsl
xchg
xorb
dec
sarl
mov
and
sbb
popa
mov
icebp
jg
sub
add
cwtl
push
and
dec
mov
imul
sbb
push
add
adc
les
cmpsb
gs
rcrl
aaa
sub
test
fwait
aam
push
or
ret
lods
cmc
mov
daa
jmp
xchg
mov
jne
nop
inc
or
jmp
lods
sbb
jo
imul
lcall
jb
sub
cmpsb
add
dec
imul
faddp
mov
xchg
lods
sti
lods
sbbb
cmpl
lods
pop
decb
sbb
psubd
mov
cmp
cltd
std
jae
sbb
add
mov
push
xchg
lret
mov
insl
or
das
pop
fimuls
pmaxub
and
sahf
pushf
pushf
sahf
enter
sub
dec
mov
and
add
mov
fstpl
push
and
jno
add
aaa
lret
add
adc
jne
lds
mov
adc
jbe
add
popa
les
subb
push
insl
arpl
and
push
daa
mov
push
outsl
mov
add
insl
push
negl
mov
cli
and
add
shl
push
testb
daa
xchg
cwtl
adc
sbb
xor
pop
pop
in
lret
test
shlb
dec
push
fwait
pop
or
push
pop
add
loopne
mov
mov
dec
xchg
mov
and
aad
repz
fisubl
and
fisttpll
dec
jge
orl
pop
sbb
inc
imul
and
inc
add
push
pop
push
mov
push
fcmovnbe
movsl
fisttpll
call
add
call
mov
shr
mov
inc
ljmp
aad
int
xchg
sbb
lods
jp
dec
jge
adc
clc
sub
add
push
sbb
cltd
pop
push
shr
test
jo
inc
or
mov
sbbl
shufps
mov
pop
xor
fwait
pop
adc
and
sub
inc
shl
jo
inc
sub
dec
cmp
dec
and
push
and
add
shll
add
push
or
sub
inc
lds
jb
mov
adc
pop
cmp
fsubrs
mov
popa
sbb
pop
dec
xchg
jg
stc
pushf
push
dec
pop
add
out
pop
xor
add
adc
pop
add
push
rcl
pop
adc
lods
jo
test
inc
add
fdivrl
add
inc
push
pop
int
mov
roll
push
jnp
adc
xchg
cmpsb
sub
movsb
fs
jp
orb
or
sub
inc
add
insl
jo
inc
dec
pusha
add
addr16
insl
sub
adc
jmp
mov
inc
jmp
xchg
push
fs
lret
es
dec
nop
jbe
pop
jnp
and
xchg
pop
ljmp
xor
outsb
xchg
mov
add
movsl
cmp
pop
ja
pop
xchg
test
scas
or
aad
pop
cmpsb
js
mov
shlb
cltd
mov
inc
add
or
or
ud1
stos
addl
adc
add
stos
shlb
push
add
fmul
add
push
rcr
testb
andb
pop
decb
push
and
dec
nop
or
and
jmp
and
xchg
mov
and
je
js
pop
incl
arpl
xor
leave
stos
pop
inc
inc
inc
mov
cwtl
xor
jns
inc
xchg
data16
mov
xchg
sbb
adc
lea
dec
sbb
cwtl
xor
int
cwtl
xor
mov
adc
or
push
add
cmp
mov
jcxz
cmpsb
dec
sahf
xor
decl
aam
or
jmp
and
jo
pop
jmp
mov
inc
pop
aaa
loop
pop
and
pop
pop
and
push
in
mov
test
test
inc
out
sbb
addr16
lock
es
mov
push
jl
or
jo
dec
sbb
inc
add
inc
xlat
pop
in
adc
insb
adc
push
jge
sbb
sub
js
es
jo
or
push
xchg
pushf
test
add
mov
dec
ds
sti
xchg
pop
xor
data16
cmc
jge
movsb
jge
popa
push
pop
jmp
sbb
dec
or
inc
in
push
sbb
ffreep
sbb
addr16
enter
or
push
pop
push
pop
pop
cmp
ror
inc
bswap
dec
inc
mov
and
adc
dec
mov
pop
lret
aam
outsl
leave
push
rolb
ret
add
mov
mov
push
and
in
sub
lret
pop
mov
push
pushf
add
push
push
or
add
xor
and
push
sbb
pop
inc
add
fwait
aaa
jg
jnp
mov
sti
and
and
sbb
or
jmp
jo
adc
sbb
cld
pop
sbb
das
pop
pop
sbb
add
mov
sbb
leave
jg
push
loop
aaa
pop
sub
arpl
pusha
inc
scas
cld
inc
jne
jl
cltd
fisubl
test
inc
inc
loopne
sbb
xchg
ret
mov
mov
mov
dec
mov
cmpl
pop
or
cmp
push
fwait
xor
or
dec
add
sahf
je
enter
inc
ja
mov
popa
inc
sub
push
in
push
sub
dec
sub
loope
push
or
inc
adc
roll
push
rolb
sbb
add
popf
sbbb
mov
xchg
lea
sbbb
loop
or
out
enter
daa
push
sbb
add
fldl
or
es
or
lahf
push
or
add
pop
push
clc
xchg
jno
adc
in
sub
mov
and
inc
add
jns
xchg
mov
sbb
sub
adc
adc
inc
dec
jg
jg
lock
leave
jns
adc
or
test
mov
jecxz
test
inc
or
das
inc
mov
cmp
xor
mov
sahf
js
and
mov
pop
inc
icebp
xchg
cmp
jne
cmp
pop
jnp
shlb
pop
das
or
dec
inc
pop
add
imull
add
aas
leave
inc
or
pop
sar
aaa
xchg
adc
shlb
popl
mov
xchg
mov
mov
mov
ret
pop
fstl
or
inc
mov
sub
mov
or
jo
jmp
inc
ret
adc
mov
add
movsb
test
in
xor
sbb
or
movsb
test
fcomip
cmp
adc
aam
mov
mov
movb
push
mov
sbb
mov
cmpsl
sahf
fdivr
and
sarl
mov
fimuls
enter
sbb
sub
movsb
clc
or
fldt
lahf
inc
sti
shrb
xchg
and
push
mov
xor
mov
mov
pop
adc
call
sbb
daa
movl
mov
pop
adc
sahf
and
add
lock
pop
add
pop
push
int3
sub
push
cmpb
push
add
popa
adc
loopne
adc
test
or
daa
clc
xchg
and
dec
mov
xchg
out
jg
sahf
xor
mov
cmpsb
xchg
mov
js
stos
iret
add
cmp
push
add
bound
dec
sub
dec
adc
or
loope
nop
push
jae
cmpl
insl
adc
push
ret
jne
addr16
push
pop
or
test
xchg
dec
xchg
test
add
and
xchg
cmp
in
pop
mov
mov
push
mov
push
add
lods
adc
jb
xchg
out
add
nop
and
mov
mov
or
jl
or
outsl
adc
les
into
inc
xor
xor
mov
dec
pop
xchg
cwtl
sbb
cmpl
push
movsb
add
mov
xor
inc
sub
pop
xchg
test
push
xor
add
into
dec
and
mov
jp
push
xor
movsl
loopne
dec
popf
sub
adc
nop
test
nop
addr16
dec
push
dec
pop
adc
xlat
and
dec
mov
movsb
iret
clc
inc
push
push
imul
lret
call
in
pop
adc
xchg
bound
inc
pushf
jge
mov
nop
or
call
insl
and
jge
inc
repnz
xchg
add
fnstenv
jp
xor
test
adc
and
pop
mov
aaa
mov
inc
dec
cmp
sub
les
in
cltd
in
xor
jo
cmp
test
add
filds
shlb
mov
inc
dec
push
add
jbe
jae
add
movsl
mov
je
add
xchg
js
jo
loop
sbb
rcr
cmp
leave
jno
add
pusha
popf
mov
sbbb
insl
std
movsb
sbb
sbb
and
adc
push
dec
leave
clc
mov
mov
push
in
or
dec
daa
push
xchg
jno
lods
enter
lods
clc
mov
mov
notl
sub
push
jo
mov
jp
cltd
xor
dec
lods
rclb
enter
test
xor
dec
adc
test
mov
jo
test
push
rcrl
ret
push
imul
test
or
sub
mov
sub
sahf
mov
sub
inc
inc
inc
jae
stos
dec
aad
repnz
stos
popa
sub
sbb
and
dec
sbb
xor
pusha
inc
stos
fdivl
ja
pop
jo
in
dec
mov
or
cmp
mov
call
les
shlb
and
das
pop
andl
inc
arpl
loop
cmp
addb
std
test
xchg
cli
pushf
xchg
cmpsb
pushl
sbb
adc
inc
daa
mov
imull
mov
push
sub
scas
cmp
loope
dec
push
jp
pop
mov
or
push
icebp
sbb
adc
add
add
mov
fstl
hlt
adc
or
adc
pop
jbe
pop
imul
add
cltd
popf
xchg
add
sub
or
push
inc
cmc
adc
loop
or
mov
pop
xchg
push
mov
sarb
or
scas
mov
xchg
enter
movsb
mov
lods
mov
in
loopne
mov
add
movsb
sub
out
dec
movsb
movsb
lea
pop
outsb
test
and
mov
rol
dec
movsb
sub
aas
rcrb
jle
sbb
imul
inc
mov
imul
inc
xchg
push
test
ljmp
push
jge
mov
mov
inc
cwtl
dec
movsl
dec
inc
jecxz
and
les
enter
add
test
mov
cs
dec
and
or
xchg
aas
adc
and
xor
and
or
adc
mov
cmpsl
les
mov
push
rolb
iret
test
jmp
adc
ret
push
or
addr16
pop
rcr
mov
adc
xchg
call
cmp
add
rorl
sarl
in
in
pushf
cmp
adc
test
adc
in
inc
nop
xchg
test
clc
popa
dec
dec
in
jmp
cltd
inc
cs
insl
in
lock
add
dec
insb
fcoms
xor
sarb
ret
je
addr16
xor
nop
push
pop
adc
and
adc
cmp
aas
outsl
sbb
test
addb
sbbl
cmp
push
stos
or
ret
xor
int
lret
ficoms
push
sarl
sbb
mov
in
xchg
movsl
jae
dec
and
jg
xorb
std
sar
cmp
adc
hlt
sub
dec
sbb
or
mov
add
xchg
sbb
push
push
movsl
push
cmpsl
int3
inc
push
sbb
xor
jmp
push
je
jb
add
jmp
sub
outsl
mov
sbb
and
push
imul
aad
or
cmp
pushl
and
cmp
push
shrb
jg
aaa
dec
mov
pop
rorl
enter
call
xorb
xor
jo
lea
xor
sub
inc
mov
and
mov
adc
sti
loopne
ficomps
fdivl
cltd
rcl
jge
add
dec
sbb
je
adc
adc
inc
ljmp
fsubrl
jns
insl
push
fdivrp
mov
xlat
adc
jnp
int
jmp
lcall
into
push
mov
or
jb
mov
xchg
aam
add
add
rep
in
mull
jle
cld
je
dec
xor
bound
test
xchg
stos
push
pop
cmp
inc
inc
cmpsb
scas
imul
in
push
fs
xchg
adcl
mov
inc
cmp
cmpsb
fs
push
mov
sub
or
test
xlat
add
inc
test
shlb
xor
movl
sub
jg
cmp
dec
inc
add
jl
arpl
push
mov
push
add
or
fwait
push
sbb
add
inc
ror
rol
mov
and
add
clc
sahf
loopne
sbb
std
sbb
xor
or
sbbl
mov
jg
and
and
mov
andl
add
push
jl
cmp
jl
insl
and
or
test
leave
push
nop
hlt
nop
push
push
sub
xchg
ret
shr
fdivrl
lea
sbb
mov
cmp
inc
mov
push
add
pop
les
movsb
xchg
nop
fcmovbe
fcoml
push
imul
sahf
sbb
xor
sbb
dec
cmp
sub
jne
es
mov
rolb
js
push
lea
fidivrs
push
lea
scas
or
mov
jb
mov
inc
and
adc
jmp
push
sbb
lea
fcomip
mov
jbe
jg
scas
inc
or
ds
hlt
jnp
push
dec
repnz
add
cmp
push
loopne
xorl
xlat
stc
shrb
push
loop
add
add
popa
hlt
push
bound
out
adc
daa
cwtl
xor
xchg
sub
add
repz
push
or
nop
pop
xor
xchg
push
repnz
inc
dec
add
insb
or
inc
movsb
aam
cmc
ja
or
cwtl
or
mov
popf
push
loopne
lahf
xor
push
mov
add
rcl
push
xchg
xor
loopne
icebp
fs
sub
stc
sbb
lods
add
jns
fsubrl
jecxz
and
push
jle
clc
and
in
lock
sbb
mov
add
jo
sbb
cmp
jnp
jp
fildl
shlb
inc
leave
fcom
jle
add
jmp
xchg
arpl
adc
dec
adc
push
or
pop
cmc
sub
or
mov
popa
test
pusha
fists
mov
or
sub
inc
ja
and
ss
pop
mov
test
adc
sub
rorl
push
insb
in
sbb
inc
lret
push
xlat
scas
mov
insb
jae
or
sti
or
sub
push
inc
xchg
jmp
pop
lock
aam
int
mov
mov
and
xchg
test
pop
popf
jle
xor
filds
je
addr16
rclb
mov
mov
dec
fadds
jle
inc
cld
loopne
sbb
scas
enter
fstpt
dec
inc
insb
js
dec
add
not
js
and
jcxz
add
or
jl
or
sub
cmp
popl
inc
mov
sbb
mov
fstpl
add
cmp
and
imul
xchg
test
jno
jae
cmp
int
cmp
xchg
mov
orb
mov
or
andb
insb
inc
outsb
push
xchg
clc
je
and
inc
dec
jns
add
sbb
je
xchg
sub
mov
and
les
pop
mov
jnp
popa
inc
mov
dec
mov
push
add
mov
jg
add
adcb
dec
xor
adc
pop
ds
xchg
sbb
and
jne
adc
fdivr
fdivs
movsl
test
push
or
adcb
jnp
dec
add
cmpl
push
or
xorb
fdivs
and
mov
jnp
add
in
pop
dec
or
rolb
sarb
aam
ret
inc
daa
rcl
jae
inc
dec
shrl
fadds
xorl
dec
sub
mov
js
in
aas
sub
call
int3
dec
jae
rol
les
movsl
add
sub
or
insl
add
sbb
cmp
lret
repnz
push
mov
sbb
dec
shr
push
xlat
or
icebp
mov
bound
sub
lcall
ss
xchg
maskmovq
imull
enter
push
xchg
leave
push
popa
and
xor
xor
add
push
dec
push
sti
xchg
push
adc
xchg
sahf
bound
in
mov
pop
in
sub
aaa
notb
bound
outsb
add
aam
jno
lahf
in
xchg
push
hlt
and
mov
jmp
inc
scas
nop
cmc
xor
and
insb
lds
or
cmp
and
rorb
sbbl
aam
adc
lods
adc
mov
jae
and
dec
push
bound
push
pop
push
jmp
aaa
mov
dec
pusha
lock
or
xchg
sbb
mov
add
inc
mov
mov
sub
mov
cmpsl
fcomps
jno
sub
adc
or
xchg
ret
inc
xchg
test
sub
and
adc
mov
pushf
mov
adc
stos
fs
popa
std
int3
neg
sarb
or
sub
rolb
pop
dec
mov
lds
arpl
cmp
psubb
lods
add
mov
test
fisubrl
into
je
push
pop
or
push
cltd
nop
lret
add
gs
sub
or
or
jo
xor
xchg
inc
je
js
inc
sub
sti
add
test
test
jmp
push
add
les
das
adc
push
pop
addb
js
xchg
stos
jg
inc
fiadds
pop
clc
add
add
addr16
add
or
sbb
sahf
adc
and
inc
or
cmp
xchg
daa
js
icebp
pop
or
add
jns
sahf
add
or
inc
push
xchg
push
add
call
adc
or
jmp
and
jmp
mov
xlat
in
rcr
sub
or
adc
fs
rcrl
int3
mov
or
pushf
out
xchg
or
lcall
rclb
out
rorl
aam
cmp
pop
fsubs
test
les
jne
mov
add
adc
xchg
jp
fcompl
dec
pop
jbe
lcall
dec
stos
adc
hlt
jg
pop
sub
lret
rorl
mov
add
cmp
movsb
cmp
in
rolb
ja
mov
ret
mov
movq
in
ficoml
jns
and
push
jnp
inc
cmp
bound
mov
sub
adc
test
rclb
xchg
jae
in
adc
xorb
das
call
dec
dec
cwtl
in
push
mov
add
jnp
pop
sbb
dec
nop
test
sbb
jnp
inc
pusha
rclb
sbb
ret
dec
rol
sti
jmp
dec
ja
ret
stos
cltd
imul
fsubrl
sub
cwtl
add
add
lods
and
fmull
add
mov
xor
cmp
add
jbe
cmpl
fdivl
lret
jb
push
push
pusha
dec
enter
mov
or
add
pop
rcrb
pop
outsb
jmp
scas
or
inc
add
dec
pop
cmpsw
push
inc
out
sub
call
push
in
loopne
or
add
xor
add
pop
xorps
adc
push
outsb
rorb
push
test
and
mov
std
or
mov
jns
je
aad
sub
mov
sub
sub
push
inc
cmc
mov
sub
loope
fsubrs
inc
dec
inc
aas
add
xor
push
adc
adc
pop
add
or
test
sbbl
les
arpl
xchg
push
adc
cmpsl
mov
out
mov
shll
bound
and
mov
add
sub
pop
test
push
jne
mov
mov
lea
or
mov
xor
push
jne
lret
mov
loopne
xor
sbb
push
sbb
enter
ljmp
add
push
mov
imul
test
inc
aad
loop
pop
test
cmpsb
push
fnstcw
xlat
xchg
loope
and
fs
int3
sub
or
or
enter
lret
jge
incb
and
or
mov
orb
cld
or
push
or
ss
or
dec
mov
sbb
clc
dec
add
adc
sahf
xor
dec
inc
lret
popa
fcoml
js
sub
xchg
ja
inc
notb
mov
iret
inc
inc
aaa
enter
add
xlat
add
outsb
loope
mov
ret
shlb
xchg
rcl
fdivs
pusha
repnz
xlat
int3
dec
imul
movsl
mov
ret
lea
dec
aaa
fldt
les
sbb
les
add
mov
add
fwait
pop
jecxz
adc
test
imul
push
fmuls
aam
sbb
mov
sub
test
mov
pusha
xchg
popa
shlb
mov
jle
js
push
add
movsb
loope,pt
or
inc
imul
push
dec
dec
jne
dec
cmp
dec
fstpt
cmp
je
roll
inc
fbld
movsl
sbb
cmp
inc
lock
pusha
test
cmpsl
adc
mov
aam
movsl
sub
pop
cmp
and
enter
aad
arpl
push
jge
push
adc
in
shl
jo
cmp
rol
or
aam
jmp
push
inc
jo
pop
xchg
ret
push
push
loopne
cs
push
add
pop
push
insb
and
insl
gs
adc
fstpt
adc
and
ss
push
rcll
or
imul
call
mov
jb
xchg
push
fwait
mov
imul
mov
test
outsl
push
aam
xlat
xchg
dec
xor
and
lods
loope
les
jno
jl
fildl
push
std
in
mov
lods
incl
and
push
pop
aam
jmp
or
adc
jg
lcall
dec
push
add
push
inc
shlb
xchg
subl
data16
pop
je
push
add
outsl
pop
adc
xchg
and
lds
mov
cmp
jo
sbb
cmp
or
and
adc
in
cs
and
movsl
sbb
cwtl
xor
repz
cmp
in
popf
cs
dec
ja
addl
sbb
pop
adcb
pop
pop
enter
aam
mov
rcrl
mov
push
push
clc
inc
add
mov
orb
cmp
sarb
addl
shll
mov
cmp
lea
lock
or
fs
jl
push
or
into
into
leave
push
xor
clc
clc
inc
lods
xchg
dec
into
add
sbb
inc
push
arpl
push
clc
dec
bound
test
lock
dec
adc
sbb
pop
jne
test
stc
pop
pop
scas
outsb
push
pop
cmp
test
in
push
push
mov
ljmp
add
ret
jb
xchg
mov
in
ret
mov
dec
popa
xor
xchg
adc
shll
sahf
mov
and
add
xor
sub
add
sbb
cmp
sub
cmp
aad
jne
pop
push
xor
hlt
or
loope
xlat
test
fs
arpl
adc
pop
mov
cmp
out
addb
xor
xor
lcall
insl
out
arpl
pop
jb
xlat
in
in
ret
push
clc
and
push
pop
add
add
cmp
xchg
dec
mov
mov
out
rol
inc
loop
pop
clc
fnstenv
cltd
dec
and
adc
mov
jae
inc
ret
test
sbb
mov
loope
pop
jg
inc
mov
pusha
lds
xor
leave
mov
sub
add
dec
adc
or
cmp
pop
push
cmpl
sub
adc
push
add
out
aam
and
jl
dec
or
mov
rcrb
in
jns
lock
add
mov
xlat
jg
js
add
aas
xchg
add
sub
xor
mov
fs
push
xchg
xchg
sbb
jne
adc
stc
fcomps
and
je
sub
fdivl
push
loopne
popa
ror
cmp
adc
stos
in
sbb
pop
adc
add
pop
sub
xor
testb
add
sub
jo
out
mov
negl
push
push
in
push
xor
pop
in
dec
jle
divb
movsb
in
push
leave
adc
cmpsb
inc
out
sub
mov
mov
fdivl
mov
lods
insl
idivl
push
icebp
sbb
cmp
jmp
popf
cmp
sbb
outsl
imul
imul
mov
test
xchg
jmp
pop
sbb
adc
pop
aas
loopne
dec
push
mov
imul
cmp
rolb
arpl
jo
adc
pop
xlat
sahf
loope
mov
inc
in
add
add
xor
cltd
cmovbe
inc
adc
cmp
in
add
jae
jmp
ret
or
mov
pushf
stc
loopne
xchg
ficomps
xchg
fisttps
jp
fwait
push
push
sbb
or
repz
incb
jmp
and
in
mov
roll
or
and
lea
mov
adc
add
mov
xor
jb
int
cmp
fucom
cmpb
mov
stos
aam
mov
inc
pop
mov
add
loopne
or
and
sub
xchg
mov
jb
mov
faddl
scas
rorl
movsb
dec
inc
mov
xchg
mov
xor
or
rol
jnp
rolb
lea
bound
mov
stc
test
lea
lods
movsl
inc
and
xor
je
mov
jno
sub
out
add
fisttpl
adc
xor
movsb
mov
shl
gs
outsl
or
cmc
and
cmp
cmp
inc
pop
sbb
pop
jns
jle
inc
adc
sbb
jne
pop
xchg
jno
stc
xor
push
fistl
je
jmp
pop
cmpsb
jmp
sbb
xchg
sub
add
pop
mov
sub
mov
dec
add
clc
pop
arpl
loop
ret
push
mov
add
out
imul
imul
xorb
dec
ret
cwtl
repnz
in
or
dec
pop
shr
push
inc
rorl
out
xchg
cmp
sub
cs
add
adcb
mov
pop
add
cmp
fldenv
adc
jnp
xor
fadds
inc
adc
pop
fmuls
and
xchg
sub
scas
pusha
or
mov
divb
and
loopne
dec
dec
xlat
mov
adc
mov
aaa
mov
and
int3
adc
ljmp
jb
cmp
or
push
cmpsl
lcall
or
fs
inc
test
mov
xchg
fdivrs
pop
sbb
push
pusha
sub
mov
pop
jbe
scas
jmp
or
and
outsl
scas
ret
out
fcomip
fs
subb
mov
adc
sub
push
sub
test
fstl
gs
lods
or
outsb
pusha
rolb
or
test
dec
xlat
pushf
lea
xchg
ret
sbb
insb
shll
pop
pop
ffreep
add
maxps
xorb
and
adc
in
push
or
mov
jmp
fmull
cmpsb
repnz
or
out
or
cwtl
rorb
jns
jmp
jo
sbb
cmp
fsubs
sbbl
aas
jg
push
and
ljmp
xor
and
pop
and
xor
sarb
in
push
or
inc
sub
testb
test
adc
cld
cmpb
add
jl
cltd
and
sbb
mov
int
or
stos
lods
hlt
cmp
loopne
lods
mov
xchg
xchg
cmpsb
rcr
sub
mov
push
jo
aam
jae
sbb
data16
or
sbb
push
xchg
xor
popf
pop
push
xchg
pusha
pop
xor
mov
das
sbb
dec
je
arpl
test
jmp
jmp
sbb
push
cmc
mov
test
sbb
adc
or
loope
lret
sub
push
ja
ja
sub
jns
in
je
je
je
push
leave
and
sbb
inc
repnz
pop
ja
lret
and
add
push
repnz
cwtl
or
je
inc
sbb
mov
pop
ret
lret
fmull
sbb
int3
out
push
ret
push
orb
dec
mov
sbb
bnd
xchg
mov
dec
xchg
lods
dec
arpl
dec
lock
or
inc
sub
add
addb
cmp
imul
fistpl
cmp
fldt
mov
imul
inc
cwtl
add
and
add
xchg
call
push
clc
adc
mov
fnsave
out
inc
dec
push
cltd
loopne
loopne
out
push
fs
nop
addb
push
push
pop
adc
cs
data16
sbb
lock
nop
imulb
mov
and
mov
mov
or
cmpsb
lods
adc
xchg
nop
movl
sbb
or
loope
ja
adc
sbb
sarl
mov
iret
add
sbb
pop
or
xlat
faddl
cmp
pop
cmp
repz
mov
inc
mov
or
xchg
jo
inc
fbstp
add
jbe
daa
xor
and
sub
js
imul
es
adc
popa
dec
movsl
xchg
lock
jge
push
fildll
jo
xlat
clc
jo
lock
mov
rcrl
jmp
pop
lock
js
adc
mov
pop
adc
dec
and
mov
push
loopne
inc
loope
inc
push
jp
lds
test
in
sti
cwtl
insb
sbb
rorl
loopne
jne
and
std
les
movsb
push
das
mov
adc
popf
and
mov
test
sbb
hlt
hlt
pop
add
dec
out
popf
add
cltd
jmp
mov
dec
das
inc
add
push
clc
movsl
pop
cmpsb
inc
std
jns
adc
mov
fwait
movsb
mov
xor
mov
adc
adcb
adc
or
or
in
push
negl
insb
adc
test
popa
cmpsl
xchg
daa
mov
or
pop
sub
adc
mov
jmp
pop
movsl
ss
call
jnp
jne
inc
add
loop
nop
inc
xchg
mov
sti
or
cmpsb
adc
or
cmp
sbb
pop
jo
ja
inc
or
loopne
ret
push
ror
push
lock
test
mov
or
push
cltd
aas
cs
xchg
sar
insb
jmp
sbb
adc
jns
cwtl
adc
test
shl
fdivrs
pusha
jg
sub
jge
enter
inc
enter
test
add
and
aam
aam
pop
xor
aam
aam
fs
sub
aam
sbb
test
mov
aam
aam
mov
fiadds
mov
pop
movsb
pushf
rcrb
or
add
adc
sbb
in
loopne
sbb
or
add
rcr
cmp
fsubr
or
int3
inc
pusha
ss
mov
push
push
sbb
xchg
push
inc
dec
push
xor
stos
les
xor
fs
lock
mov
rol
roll
push
xchg
enter
mov
call
int3
aam
fcoml
push
mov
push
rsqrtps
shrb
inc
jns
scas
pop
addr16
pusha
rcrb
shrb
xchg
ja
push
popa
rcll
bound
cmp
dec
sti
test
out
and
mov
imul
or
and
jge
push
add
outsl
dec
push
dec
jmp
addr16
out
and
std
jb
fpatan
jl
sub
push
cmp
test
sbb
das
push
loope
push
jae
sbb
lods
mov
sbb
sub
adc
mov
movsb
addl
jo
femms
mov
insb
je
test
cltd
aam
pusha
add
enter
orl
and
push
dec
sbb
mov
add
test
js
pop
shrb
inc
xorb
dec
insb
xchg
add
mov
cmpsb
inc
mov
xchg
mov
rolb
dec
andb
xchg
push
in
imul
xor
cli
jmp
das
scas
pop
add
aam
in
testb
outsb
mov
test
add
pop
pop
mov
pop
or
mov
mov
mov
dec
stos
and
xlat
adcl
add
and
sbb
mov
rdpmc
dec
sbb
sahf
mov
cmp
movsb
mov
adc
loopne
or
lcall
push
inc
jae
fs
or
pop
movsl
or
shlb
add
ficoml
outsl
sub
xor
cmp
andl
movsb
popa
mov
sbbl
dec
in
or
data16
add
loopne
rol
jmp
mov
add
mov
or
push
push
or
cmpsl
inc
adc
push
test
inc
in
outsl
dec
inc
push
cs
xor
or
mov
sbb
sbb
inc
sbb
push
push
mov
les
popa
push
mov
gs
xchg
add
add
xor
inc
call
add
adcb
mov
inc
pop
add
test
dec
or
pop
ja
push
inc
jbe
aam
dec
cmp
and
ret
sbb
sbb
inc
subb
xlat
cmp
jb
cmpb
jle
fstpt
jg
pop
pop
adcb
fsts
test
push
pop
pop
pop
pop
inc
ficoml
and
icebp
pushf
xor
sbb
dec
pop
ret
test
and
les
lods
out
mov
and
mov
ss
cmc
pminsw
jbe
mov
add
xor
mov
les
or
push
shrb
aad
sub
sbb
push
add
mov
outsb
sbb
or
or
push
lods
sbb
cmovne
bound
push
aaa
mov
mov
adc
xor
popa
inc
mov
movsb
outsb
xor
jno
sub
inc
aam
xchg
inc
ret
sub
mov
sbb
mov
outsb
xor
add
inc
push
loopne
outsb
and
sub
pop
enter
js
loopne
call
loopne
xchg
int3
cmp
pop
and
jo
add
fbld
jbe
pop
dec
data16
imul
xchg
or
jge
or
movsb
pop
inc
sbb
push
aam
roll
test
cmp
and
rorb
xchg
mov
enter
pop
aaa
aaa
into
mov
mov
sub
leave
add
ret
sbb
arpl
mov
pop
pop
xchg
pop
in
add
out
mov
push
lods
test
inc
or
pusha
mov
les
inc
movsb
outsl
in
adc
or
sbb
jns
xchg
int3
sbb
pop
subb
mov
loopne
jle
and
cmpb
mov
out
mov
out
outsb
std
and
stos
outsl
jae
cmpb
ss
in
jns
add
push
test
pop
dec
clc
mov
test
and
push
dec
rcl
cmc
mov
sbb
testb
push
lock
jne
push
push
add
mov
addr16
mov
xor
outsl
mov
mov
or
sbb
push
loopne
or
pushf
lock
ss
push
fsts
test
cmp
outsb
sub
and
in
push
mov
or
mov
xchg
xchg
insb
ret
push
dec
andb
test
sbb
nop
rorb
sbb
adc
test
test
sbbb
xchg
lock
pop
xchg
xor
aaa
ror
dec
popa
dec
add
pop
lock
add
int
cmp
filds
outsl
xor
pop
jne
adc
aam
inc
jl
mov
or
loope
and
pop
push
xorb
inc
loopne
jmp
cmp
daa
push
push
fwait
push
shll
cmp
cmpsl
add
js
je
insb
adc
mov
dec
stc
or
sub
fs
lods
xchg
loope
add
sub
mov
or
mov
add
orl
mov
ja
cltd
movsb
iret
rclb
fld
cmp
popa
call
mov
sub
xchg
or
mov
mov
leave
in
adc
rolb
pop
or
daa
outsb
ja
mov
sbb
ficoml
add
clc
jle
pushf
add
push
je
ret
dec
enter
push
inc
fs
cmova
mov
sbb
stc
pop
pop
mov
testl
rorb
sub
pop
inc
ja
xor
cld
movsl
push
jmp
add
push
daa
enter
jp
xchg
lret
cmp
and
xchg
mov
sbb
push
xor
or
enter
aam
sbb
or
jno
invd
loope
nop
stos
fsubrs
iret
lret
adc
dec
sub
push
jne
mov
adc
setnp
cmpb
pop
cltd
in
jne
push
and
in
mov
sbb
adc
lea
lcall
or
sbb
negl
clc
sbb
xor
or
orl
add
push
rcr
dec
fildl
xchg
push
and
inc
pop
dec
dec
and
xorb
movsb
sbb
add
or
nop
push
les
das
xchg
mov
or
ret
daa
and
cwtl
xchg
popa
divl
test
sbb
sbb
gs
xchg
mov
and
inc
add
inc
cmp
or
fnstenv
jno
pop
cmp
and
pop
add
nop
sub
dec
aam
stos
xchg
lds
sbb
imul
xchg
ja
xchg
cmp
xor
push
sub
hlt
fdivrp
cld
call
faddl
aam
fcoms
adc
cltd
pop
js
es
aam
ja
or
les
repz
in
test
insl
fadds
lock
data16
push
stos
pop
out
push
rcrb
stos
sub
or
pusha
sbb
cwtl
andl
xchg
aam
xchg
pop
xchg
xchg
mov
leave
dec
or
pop
call
push
imul
push
das
shll
push
stc
pop
sbbb
cmp
mov
adc
and
mov
aam
sti
sub
add
inc
mov
pop
xchg
lahf
pop
mov
lahf
mov
add
inc
sti
or
sarb
cwtl
cwtl
add
mov
pusha
xchg
cwtl
js
es
cmp
js
fwait
pop
mov
xor
mov
nop
mov
lods
sub
add
dec
jecxz
les
xchg
cmp
enter
xor
dec
mov
xchg
push
lret
popf
cmp
mov
fs
mov
jle
and
push
sub
and
mov
add
pop
sbb
dec
and
and
inc
jno
test
das
inc
push
sbb
clc
fimull
lock
push
arpl
dec
dec
pop
ret
jmp
lea
adc
aaa
mov
and
adc
adc
or
das
sbb
jnp
add
cmp
mov
sbb
xor
and
inc
cmp
jo
lods
xchg
and
aaa
scas
mov
fstps
sub
fwait
pusha
dec
and
adc
lcall
mov
sbb
cmp
imul
sbb
adc
pusha
sub
push
imul
inc
cltd
je
add
cmp
lret
pusha
enter
xor
mov
xchg
shlb
sbb
inc
ljmp
loopne
add
loopne
push
movsl
add
xchg
pop
xchg
fcomps
cmpsl
or
jne
adc
in
movsbl
das
add
pop
movsb
loope
xchg
adc
sub
mov
fwait
inc
or
xor
dec
dec
int3
mov
test
or
xchg
pop
lea
sub
lcall
rcr
xchg
lret
pop
pop
sete
cmpb
testl
sbb
sub
fmull
adc
inc
das
push
mov
scas
pop
inc
inc
xchg
sub
mov
mov
in
and
lea
mov
pop
in
stos
test
add
lret
push
lods
js
mov
lea
or
pop
sbb
and
dec
inc
lods
jno
sbb
divb
sbb
cmp
inc
adc
loop
int
sbb
and
push
stos
imul
lock
lret
fwait
xchg
add
xchg
adc
jae
lods
xor
sub
add
test
xor
or
clc
pop
or
or
pop
imul
mov
mov
insl
imul
or
sbb
aas
enter
test
in
aas
lahf
call
add
sarb
adc
leave
sbbb
xor
in
pop
or
fimull
es
in
ror
inc
xor
je
int3
fwait
clc
call
loopne
scas
xchg
test
jg
ret
rolb
mov
lock
jge
sub
or
pop
inc
mov
or
fimull
dec
jge
dec
ja
sub
push
mov
imul
sbb
ret
es
data16
xchg
cmc
ret
vpmacssdd
mov
and
ret
mov
cmp
mov
inc
cmpb
mov
xor
cmp
xor
rcr
sahf
or
push
or
loope
mov
mov
jb
clc
sbb
push
stos
add
aam
adc
xor
enter
mov
push
mov
dec
pop
xchg
mov
dec
jae
sbb
inc
sub
shlb
inc
or
repnz
repnz
mov
cmp
rolb
addl
sbb
movsb
add
or
cmc
add
dec
test
mov
ja
sbb
jae
push
pop
int3
cmp
lock
add
cmp
les
mov
cmp
jne
add
enter
jne
scas
mov
push
inc
adc
gs
inc
xchg
xchg
insl
lret
adc
or
sbb
in
rcr
hlt
xchg
add
fmul
or
or
icebp
clc
push
fs
lods
mov
inc
fiaddl
sbb
adc
push
mov
mov
jge
dec
pop
cmp
in
scas
add
pop
inc
mov
cs
sbb
jb
pop
xor
dec
lahf
inc
dec
call
sbb
test
testl
daa
push
jno
imul
xchg
jmp
in
inc
xor
iret
xor
dec
call
pop
add
pop
mov
leave
jne
test
movsb
lods
add
sbb
jmp
xchg
xor
daa
pop
sub
dec
rolb
sub
lea
mov
mov
cwtl
push
repnz
loop
jnp
add
and
mull
inc
pusha
test
pop
movb
dec
pushl
lahf
inc
fwait
xchg
dec
or
lock
push
repz
aam
jle
inc
mov
cmp
sub
imul
push
pop
dec
imul
sahf
sub
fdivrl
movsl
mov
cmp
subl
xchg
sbb
scas
and
dec
push
iret
cmpsb
dec
test
enter
or
jne
inc
in
mov
sbb
jg
add
adc
cmp
loope
adc
sbb
testl
mov
xor
adc
mov
scas
jle
add
pushf
add
sbb
xlat
xchg
rorb
cmpsl
xchg
mov
dec
sub
mov
jl
inc
ret
sub
xor
xchg
shlb
lock
dec
js
insl
add
adc
mov
pop
aaa
dec
jb
scas
push
push
psrad
adc
adc
aas
call
jmp
push
sbb
test
xchg
adc
sbbl
mov
cltd
into
mov
mov
sbb
xor
call
xchg
pop
movsl
and
test
lods
in
call
inc
and
cmpl
sbb
push
add
inc
pop
or
jo
inc
jg
adc
in
aad
xor
iret
cmp
inc
mov
fwait
xor
fistl
xchg
aad
addr16
sbb
inc
add
push
shl
inc
dec
jnp
mov
add
in
ffreep
sbb
fadd
xor
stos
test
pop
jge
sbb
popa
mov
dec
jle
scas
andl
xchg
xor
mov
cmpsl
pop
push
sbb
ljmp
scas
push
cmc
popa
ljmp
inc
nop
lods
xchg
cmp
aad
mov
dec
ret
pop
dec
cs
insb
in
jmp
testb
cli
inc
xchg
stos
or
jge
or
sbb
mov
jae
bound
inc
inc
adc
mov
psubusw
inc
int3
int3
lea
sbb
cwtl
jo
les
repnz
xor
lods
ret
pop
or
cmp
inc
stos
push
pop
push
cli
add
adc
and
mov
pop
sub
dec
push
sub
add
sub
and
push
daa
adc
dec
push
subl
cld
mov
daa
iret
push
rcr
ja
mov
sub
mov
adc
cs
cwtl
pop
rol
sbb
jne
cmp
add
mov
scas
push
and
pop
pop
xchg
cmp
and
dec
sub
mov
pop
inc
xchg
xor
xchg
xchg
call
or
mov
pop
es
and
repnz
cmp
test
call
xchg
lahf
sbb
dec
ret
shlb
jecxz
dec
data16
pop
cltd
imul
jno
imull
or
and
mov
push
adc
mov
fs
push
and
jmp
mov
lock
pop
adc
inc
pop
mov
mov
ret
je
jp
clc
push
push
sbb
mov
das
dec
adc
pop
lock
push
mov
es
jmp
mov
xchg
xchg
mov
add
testl
je
and
mov
insl
push
lock
push
mov
xorb
out
cli
jle
adcl
loopne
push
lock
or
lret
in
insl
loopne
sub
add
rolb
mov
mov
rolb
ds
movsb
sub
lret
ficomps
mov
cmpsl
jmp
cmp
push
add
sbb
and
aas
xor
adc
add
jb
add
scas
call
push
and
leave
mov
cmp
jmp
aad
sbb
pusha
cmp
mov
call
outsb
jecxz
pusha
mov
inc
add
or
cmovb
sbb
and
cmp
add
push
push
scas
or
rorl
add
in
push
jb
push
and
daa
rorl
lods
sti
mov
cmp
sbb
jbe
push
arpl
or
adc
push
adc
inc
ret
shlb
add
push
shll
jne
xchg
stc
add
or
xchg
into
pop
inc
cmp
cli
sti
jo
lahf
xchg
cld
std
and
jbe
pop
sub
mov
pop
sbb
add
fbstp
imul
rol
sysret
scas
jns
dec
add
pop
mov
outsb
das
out
and
sub
add
or
inc
or
xor
ret
and
mov
or
cmp
pusha
stos
xor
cmp
sbb
leave
mov
or
sub
rcll
mov
pop
iret
pop
in
xor
fnsave
test
int3
sub
fucomp
dec
andl
xchg
or
hlt
push
and
ret
mov
push
sub
inc
cmpb
xchg
push
sbb
gs
lods
inc
enter
or
and
out
insb
mov
dec
xor
inc
sbb
js
bound
push
sub
adc
adc
mov
and
inc
mov
mov
outsl
pop
sub
xchg
mov
pop
sub
stos
lods
add
pusha
inc
insl
pop
stc
jb
xchg
push
scas
or
scas
addw
mov
adc
scas
bound
outsb
push
or
dec
into
jne
and
mov
nop
mov
add
cmp
or
dec
mov
adc
inc
fs
lahf
and
push
sar
bound
push
or
aas
mov
aas
cld
sub
and
subb
or
or
mov
inc
sbb
clc
sahf
fcmovnb
add
adc
and
cwtl
js
arpl
dec
sbb
sbb
pusha
sbb
dec
in
jbe
out
icebp
outsb
add
add
pop
aad
and
out
cwtl
or
xor
cltd
mov
sti
mov
arpl
nop
pop
loopne
loop
lcall
mov
movsl
aam
push
cmpsb
mov
les
pusha
adc
and
inc
mov
dec
adc
cmc
xor
pusha
cmp
test
cmpsl
mov
pop
or
fnsave
add
cmp
pop
push
adc
xchg
xor
pop
xchg
imul
push
xor
add
and
lds
xor
fimull
adc
jns
mov
push
arpl
push
and
shll
addr16
adcl
mov
cmpsl
inc
rcr
add
sbb
cmovae
rcrb
add
std
addl
push
stos
xchg
add
sbb
clc
dec
stc
adc
push
mov
and
rcl
cmpsl
push
dec
mov
cmpsb
sub
pop
adc
fldt
push
or
push
add
xchg
inc
loope
mov
mov
sbb
and
and
inc
into
rcl
pop
cmpsb
fisubrs
push
adc
lea
jns
dec
inc
les
movsl
mov
xchg
out
ret
add
sbb
add
rcrb
jne
addb
mov
fildl
inc
inc
test
movsb
jecxz
cmc
imul
cmp
adc
ja
xchg
jno
sbb
push
mov
adc
push
call
xor
push
lock
sub
lods
inc
adc
imul
push
daa
lahf
sub
hlt
scas
jmp
mov
dec
fsubl
cltd
jp
nop
adc
adc
ret
sub
loope
ss
adc
adc
jno
test
andl
roll
add
les
dec
daa
mov
adc
pop
pop
cmp
testb
sbb
xchg
add
jns
mov
sub
movsb
mov
push
push
nop
and
pusha
push
push
cmpsb
insl
fildll
pop
sbb
mov
and
scas
xor
sub
push
orl
mov
jae
or
xchg
mov
sub
aas
inc
stos
or
dec
mov
adcl
lea
imul
dec
or
xlat
xchg
scas
push
js
push
dec
push
push
dec
jae
sub
orl
loop
in
test
iret
xor
pop
cmp
dec
out
inc
aad
push
insl
nop
inc
fisubl
hlt
adc
adc
negb
cmp
inc
fs
test
pop
dec
into
pop
dec
call
imul
clc
mov
and
fcmovu
xchg
sbb
loopne
sbb
fsub
fisubrs
jp
and
and
mov
fcoml
pop
sarl
and
insb
or
enter
inc
aaa
mov
sbb
fdivs
fcompl
dec
add
pop
sub
test
and
rcr
test
mov
add
or
cmp
cld
pop
shlb
shll
adc
adc
mov
in
or
insl
enter
push
sub
call
clc
and
je
add
dec
dec
xchg
cmpsb
or
mov
xchg
call
pop
cmp
je
and
add
xchg
aad
in
mov
scas
mov
or
mov
and
inc
add
pop
stc
xchg
or
enter
or
sub
fxch
insl
inc
insb
push
add
pop
push
out
jne
call
cli
or
cmp
push
push
xchg
and
int
rorb
sbb
or
js
adc
sbb
ret
shrb
add
and
rol
and
pop
inc
sub
mov
dec
push
push
add
or
aaa
xor
jbe
or
dec
add
xchg
dec
shll
adc
or
decb
xor
sti
sub
ja
mov
mov
mov
mov
jmp
lea
insl
inc
sub
and
stc
or
mov
add
push
pushf
mov
or
rcrl
or
or
int
les
push
xor
adc
ljmp
aaa
pusha
cmp
scas
mov
dec
lea
xchg
mov
jne
cmp
mov
push
jns
dec
add
jle
pop
adc
test
inc
xor
out
mov
sbb
je
psraw
loop
sub
and
and
mov
dec
test
out
pop
lahf
push
add
mov
call
inc
adc
hlt
mov
loop
ljmp
insb
pop
sbb
inc
movsl
inc
stc
shll
rolb
addl
fisubrs
mov
cmp
xlat
jne
cmc
test
inc
xchg
fmuls
or
call
jno
fiadds
jne
add
js
mov
pop
sbb
add
in
push
or
rcll
sub
xorb
add
enter
inc
sbb
ret
outsl
cld
mov
cmpsb
cs
jnp
aad
cmpsb
pusha
add
jae
fsts
adc
dec
xor
cmp
xchg
push
pop
sbb
and
inc
adc
cmp
out
and
mov
cs
or
loop
inc
or
lea
mov
insb
pop
call
stos
loopne
push
lea
push
mov
aas
scas
cld
xor
and
pop
arpl
dec
int
mov
or
push
sahf
mov
fsubs
out
addl
shl
mov
push
sbb
or
lock
cmp
arpl
je
jmp
push
test
or
adcl
inc
push
jmp
mov
loopne
dec
aam
jb
or
cmp
test
dec
add
adc
xor
inc
ja
shlb
mov
js
mov
add
or
incl
sub
je
cmp
jb
cmp
ja
xor
push
push
add
jmp
push
or
pshufw
jg
push
push
je
gs
dec
jne
mov
lock
fcmovbe
sarl
inc
cld
push
stos
adc
xchg
adc
stc
sub
stc
jp
xor
xor
xor
add
je
or
push
jnp
hlt
push
and
or
jnp
fmull
sbb
xor
lahf
lock
adc
push
add
add
mov
jmp
jp
rcrl
xor
push
add
pop
adc
call
add
push
int3
cmp
add
mov
sub
pop
scas
push
push
jns,pn
iret
push
pop
arpl
mov
mov
negb
outsl
fstps
jae
push
pop
fisttpll
push
fildll
and
repz
xlat
lods
shll
cltd
cmp
xchg
daa
dec
and
daa
mov
dec
mov
lods
lds
fadd
pop
sub
mov
dec
push
and
mov
inc
jae
add
sbb
les
loopne
mov
xchg
fdecstp
and
das
xchg
mov
xchg
jno
movsb
movsl
push
testb
lret
mov
mov
add
inc
or
push
cmp
jne
das
stos
dec
add
jg
movb
fistl
cwtl
add
enter
cmp
mov
gs
mov
mov
or
mov
loope
ds
add
pop
adc
test
xor
cld
mov
movsl
pcmpeqd
or
cmp
push
push
ja
push
test
inc
loop
in
adc
add
add
add
repnz
insb
insb
xor
push
outsb
hlt
mov
jle
add
jo
push
es
mov
das
and
and
lret
clc
add
mov
inc
push
add
dec
adc
stos
fs
test
bound
sbb
loope
orb
cmp
cwtl
push
dec
sub
sub
sbb
cmpsb
sbb
jae
test
pushw
xchg
jg
adc
repz
data16
sub
cmp
dec
pushw
mov
loope
sub
ficoml
mov
pop
inc
daa
rcrl
fsubs
dec
or
xchg
sub
and
add
push
adc
xor
inc
jne
push
pop
dec
dec
adc
sbbl
pop
outsl
es
inc
adc
dec
test
out
sar
inc
in
dec
push
cmp
or
aaa
es
push
rclb
pop
xchg
push
push
inc
adc
mov
pop
lret
pop
rcrb
push
int3
pcmpgtb
into
std
xor
or
mov
shrb
xor
int
mov
lea
mov
sbb
rolb
fwait
popa
pop
pop
es
into
inc
pop
lret
dec
sti
dec
movsb
mov
sub
pop
cmp
push
add
mov
ss
dec
icebp
mov
add
xorb
imul
lcall
add
push
dec
fcoml
adc
loop
es
das
and
rolb
xchg
fs
jns
adc
mov
pushf
and
xor
insb
add
sbb
imul
pop
ret
stos
aam
lock
sub
push
or
push
test
xor
into
mov
inc
jo
pop
outsl
int3
push
cmp
inc
or
fs
fisttps
xchg
jl
add
jmp
adc
rcrb
mov
mov
xchg
dec
pop
inc
mov
adc
sbb
sbb
or
pop
mov
ja
addl
cmc
loop
mov
loopne
and
bound
rorb
add
push
jnp
ja
push
or
mov
push
or
ret
push
or
push
fadds
imul
xchg
mov
mov
push
pop
cmp
push
roll
lea
out
int3
adc
es
fmull
pop
inc
dec
stc
shrb
cmp
fmull
roll
mov
decl
sbb
sarl
loope
testb
mov
push
loope
pop
aas
in
xor
rclb
sub
sarb
sbb
fmuls
pop
push
add
cmp
rolb
jns
sub
faddp
inc
push
sbb
add
sub
pop
fmuls
pop
sbb
push
add
or
dec
in
movl
adc
add
in
cmp
sub
mov
sbb
add
rorb
or
call
adc
dec
sarb
rol
dec
push
xor
mov
incl
adc
xor
pop
popa
push
fcmovb
imul
pop
mov
adc
in
test
sarb
push
sahf
push
add
sbb
imul
inc
lds
in
sbb
or
mov
inc
pop
mov
mov
subl
test
pop
sbb
adc
xchg
inc
adc
adc
leave
jae
pop
add
cmp
sub
inc
push
push
and
pop
pop
ret
xor
sbb
test
jmp
sub
dec
mov
adc
addl
test
inc
push
jns
pop
push
inc
notb
pop
or
das
leave
dec
rorl
les
push
pop
push
dec
scas
mov
push
add
orl
dec
push
jmp
mov
aam
shll
pop
lock
or
daa
daa
mov
aaa
movups
es
daa
daa
add
inc
sbb
inc
adc
xor
inc
pop
addr16
push
push
pop
adc
jl
sarb
sub
adc
jbe
jmp
xchg
fs
add
push
add
test
xchg
lods
and
inc
add
adc
lret
xor
sub
pop
sbb
inc
imul
out
sbb
std
adcl
jge
mov
icebp
xor
punpckhbw
xchg
and
push
icebp
xor
mov
shlb
call
add
cmp
and
cmc
stc
loopne
add
int3
pop
aaa
clc
adc
sbb
shlb
bound
lcall
mov
in
add
les
das
push
js
fmull
sub
iret
sub
mov
arpl
xor
int3
xchg
mov
xchg
insb
xorb
jns
pop
out
test
adc
ret
add
js
stos
movsl
cmpsb
daa
xor
or
sub
psraw
push
push
lods
and
sbb
push
in
lret
out
pop
aam
ja
push
mov
fistpll
test
sub
dec
cmp
lea
or
xor
lret
outsl
call
je
cmp
and
rcrb
inc
aaa
mov
push
enter
sbb
and
jae
xorb
xchg
aam
jge
fstl
les
icebp
fcom
int3
inc
fisttpll
icebp
xchg
cmc
loopne
sbb
and
into
movsb
sahf
push
in
nop
dec
jae
dec
jbe
push
fwait
lret
push
mov
sarb
in
and
stos
pop
lret
rolb
movsb
sbb
jne
inc
push
xchg
lret
enter
fxch
adc
jns
fdiv
push
adc
push
xchg
or
rclb
insb
xor
and
xor
frstor
ja
cmovb
js
out
pop
xchg
add
testl
or
and
sub
jnp
in
push
fists
ret
mov
popa
dec
in
xchg
test
xchg
xor
ror
movb
add
inc
movsl
pop
orl
cmp
dec
adc
xchg
dec
xor
mov
push
add
lret
mov
pop
mov
popa
mov
insb
fcomps
fcoml
mov
and
pop
leave
jnp
rclb
push
mov
jns
test
mov
sub
loopne
mov
rorb
call
in
loope
int
loope
fnstcw
mov
or
or
or
add
dec
js
pop
push
jge
cltd
push
fiaddl
repz
adc
fsubp
insb
sub
mov
jl
pushf
xchg
mov
addr16
sbb
xor
mov
jno
and
shll
nop
push
inc
push
xor
movsb
insb
and
jg
adc
sub
and
imul
lods
shll
addr16
or
jp
mov
push
imul
insb
or
xor
scas
and
add
mov
jbe
inc
add
in
iret
mov
inc
adc
fimuls
imul
lret
push
push
sbb
lret
add
dec
cmp
mov
push
cmp
fwait
lret
add
or
and
or
mov
sbb
mov
jno
mov
movsl
sbb
ja
ret
xchg
xchg
xchg
mov
or
cwtl
cmp
outsl
int3
adc
and
jmp
add
pop
cmp
push
cmp
adc
pop
jns
jecxz
iret
mov
bound
inc
ret
jl
push
xor
fs
jo
test
ja
mov
fnstcw
lret
test
inc
cmp
dec
popf
call
sahf
fcomps
mov
jmp
sub
js
inc
xor
icebp
popa
adc
das
imul
mov
or
inc
ret
fwait
and
pop
lock
jmp
addl
gs
xchg
xchg
adc
pop
add
and
or
aas
fcmovbe
pusha
dec
pop
daa
or
push
dec
xor
inc
cwtl
cwtl
idivb
ljmp
scas
popa
xchg
pop
xchg
xchg
xchg
mov
dec
cwtl
inc
adc
dec
enter
shll
pop
mov
mov
add
sub
and
loope
in
int
sbb
cmp
mov
inc
psubq
adc
loop
imul
inc
pusha
mov
mov
push
jae
pop
enter
in
test
dec
icebp
lock
push
clc
imul
sub
inc
mov
and
dec
dec
dec
clc
sub
mov
xor
aam
clc
sbb
and
push
js
popa
daa
mov
mov
jecxz
rorb
imul
cmp
cmp
pop
pop
fisttps
jge
mov
xor
leave
mov
push
xor
insb
and
cmp
rorl
dec
rolb
and
or
pusha
incl
ja
pop
xor
mov
inc
inc
ja
in
jmp
inc
push
push
das
rorb
mov
lcall
popl
adc
nop
cltd
outsl
clc
loopnew
cmc
add
jae
push
inc
inc
cltd
xchg
mov
insb
in
push
inc
or
das
and
adc
add
in
and
in
in
push
inc
push
cmp
loop
mov
mov
dec
xchg
mov
repz
mov
movsl
je
loopne
lods
movsl
jae
and
jbe
sbb
add
roll
mov
push
scas
mov
jb
pushf
mov
push
or
sbb
sbb
pushf
mov
fyl2xp1
fmuls
test
cli
xor
test
and
repnz
dec
cmp
into
xchg
cmp
xor
and
adc
enter
stc
dec
aaa
jne
sbbb
dec
lock
arpl
xor
dec
mov
xchg
insb
push
adc
cmp
jnp
jo
aas
movsb
xor
lock
cmp
pusha
push
mov
popf
mov
mov
daa
or
ficomps
into
push
mov
xlat
test
and
insb
es
ljmp
addb
orl
xchg
cs
or
ret
insb
push
pop
pop
sbb
push
cwtl
mov
dec
fistpl
inc
aas
push
jmp
bswap
xchg
xchg
xchg
call
inc
xchg
test
leave
ret
out
outsl
insl
lret
fwait
lret
cmp
mov
jne
mov
xorl
add
sub
push
mov
fdivs
adc
cmpsl
pushw
cld
fadd
add
icebp
ja
shlb
inc
in
add
jns
in
or
dec
rcrl
push
sub
rol
add
pushf
and
mov
ljmp
aas
jb
sbb
pop
sbb
lods
dec
aam
ss
das
and
adc
push
push
jl
les
or
shlb
add
sbb
fcoms
jmp
inc
xchg
int3
mov
add
mov
push
mov
lock
sbb
mov
insl
popf
mov
hlt
stos
add
divb
cs
sub
lock
ljmp
xchg
lock
push
jmp
xchg
jmp
and
psubd
clc
pop
sbb
ficompl
add
in
cmp
js
sahf
pushf
mov
out
addr16
out
mov
add
sysret
dec
pop
pop
add
rcll
jo
lret
mov
adc
or
mov
or
mov
dec
mov
mov
pop
inc
in
testl
ret
xor
or
inc
mov
inc
and
mov
xor
movsb
enter
sub
add
stos
jle
or
test
pop
ret
or
push
and
xor
adc
sub
pop
dec
pop
call
out
or
sarb
orl
xlat
push
mov
fdivrs
loopne
out
xor
das
jns
icebp
adc
and
xor
mov
push
call
or
leave
xchg
arpl
jle
and
and
adcb
fs
mov
xchg
push
fadds
addb
mov
jns
add
addr16
pop
or
das
push
jo
gs
es
rolb
jg
daa
xchg
cli
call
sti
adc
or
push
jmp
aam
inc
inc
mov
subb
push
sbb
xchg
test
add
lcall
jo
bound
or
xchg
sbb
outsl
mov
insb
pop
sub
addb
jecxz
mov
pop
mov
test
daa
add
jnp
sub
sbb
pop
test
xor
mov
push
add
fs
adc
xor
jb
fs
shl
repnz
pop
andb
out
adc
dec
mov
dec
xor
or
pop
dec
mov
out
cmp
jno
sub
jnp
incl
adc
adcb
inc
stos
fsub
adcl
jo
bound
es
jne
sti
add
insb
iret
pop
add
inc
movsl
fistpl
inc
les
jo
in
pop
ror
mov
jnp
push
adc
sahf
xchg
inc
sbb
hlt
or
lea
es
insl
cmp
lret
fwait
stos
push
movsl
movsb
inc
or
aad
les
fsts
aam
sub
test
fiaddl
movsb
les
adc
adc
mov
test
loope
mov
sbb
pop
pop
or
add
push
push
mov
lock
pop
fadds
rcr
jge
int3
outsl
test
sbb
inc
dec
sub
xchg
push
add
cli
aaa
jb
add
je
dec
daa
or
call
cmp
ss
xchg
fstpt
xchg
push
call
dec
outsb
imul
push
push
addl
and
add
icebp
mov
xchg
enter
jg
rorl
sub
es
repz
xchg
add
dec
ret
lock
lock
dec
inc
and
in
push
and
addb
pop
adc
push
dec
mov
pop
mov
mov
ss
adc
mov
adc
xor
das
les
push
cmc
cmp
aas
xchg
lods
jo
cmp
cmpl
in
pop
imul
push
mov
sub
push
push
clc
sysret
mov
push
aas
jo
sub
jp
add
mov
add
fstp
sti
aas
push
insb
and
push
adc
fidivrs
cmp
jb
dec
inc
nop
push
sub
leave
jnp
xor
ret
push
push
mov
daa
jo
psraw
jnp
addr16
arpl
xor
cmpsl
gs
jbe
out
loopne
mov
sbb
arpl
sbbb
xchg
sub
adcl
loope
inc
repz
fdivs
pop
pop
js
ret
mov
lea
adc
dec
aam
sbb
or
shl
dec
fdivl
dec
xor
lock
jo
jge
jne
inc
and
xchg
in
pop
insb
xor
jnp
ss
dec
pushf
mov
sub
sbb
pop
cmp
mov
push
stc
in
or
push
insb
popf
add
or
jne
loopne
cmp
jle
xlat
ret
popa
cmc
inc
int3
xchg
hlt
adc
inc
and
int
xorb
repz
cmp
je
lods
mov
inc
mov
inc
or
mov
lods
stc
setae
push
pusha
cmp
and
dec
sub
fwait
sbb
cmpsb
add
repnz
les
adc
xchg
xchg
add
hlt
inc
mov
pop
sub
sub
pop
stc
sub
test
pop
dec
xor
or
xor
sbb
scas
addl
jo
ljmp
mov
scas
shr
or
lret
add
pop
pop
enter
adc
cmpsb
mov
mov
clc
push
icebp
pusha
das
popa
repnz
dec
cmp
mov
xchg
push
pop
rorb
nop
cwtl
add
nop
add
data16
lds
adc
fdivl
and
pop
sbb
jmp
lea
cmp
mov
push
outsb
add
adc
sbb
dec
mov
js
cmp
or
pop
cmp
out
loope
jno
dec
or
dec
cs
mov
and
fcomps
mov
pop
in
idiv
pop
and
push
dec
ja
dec
and
pop
out
adc
addl
push
dec
mov
mov
cld
push
push
add
or
adc
js
imul
arpl
in
sbbb
push
pop
or
fwait
push
or
sbb
jo
and
push
add
adc
or
outsb
lods
or
dec
sbb
sub
add
and
add
xor
cs
in
dec
das
bound
pop
cs
or
pop
pop
push
xchg
rol
add
push
dec
sbb
test
ds
shrl
sub
sbb
inc
dec
shlb
adc
dec
inc
ret
js
mov
icebp
bound
shlb
test
movsb
xor
push
and
cmp
pusha
stos
jmp
pop
mov
mov
jecxz
lock
add
push
pop
pop
and
je
int
push
inc
mov
popf
inc
adc
or
inc
cmc
or
adc
shll
bound
rorl
rcrl
mov
jecxz
out
adc
adc
sbb
adc
xlat
daa
sarl
mov
push
adc
lcall
loopne
call
xchg
fsub
imul
push
icebp
outsb
ss
adc
and
xor
nopl
jp
lea
mov
imul
dec
push
sub
inc
fdivs
jecxz
xor
adc
mov
push
les
xchg
add
sub
sub
loop
stos
cmp
jecxz
mov
mov
xlat
pushf
push
push
or
xchg
adc
dec
sub
loope
scas
rcr
je
jl
out
sub
pop
loope
and
sub
in
add
xorb
aaa
and
inc
jge
and
aas
inc
xchg
popf
adc
xchg
popa
mov
adc
xchg
sti
cmp
add
stc
dec
or
repz
sbb
xor
pop
xchg
sarb
add
cld
and
xchg
xchg
outsl
pop
jne
add
inc
add
mov
add
push
sti
mov
sti
mov
add
jmp
sbb
mov
jl
ret
psubw
jmp
dec
jmp
sub
out
jne
pop
inc
push
mov
pop
mov
or
or
jbe
faddp
sub
icebp
adc
mov
popa
inc
lea
or
jp
bnd
repz
jmp
shll
push
xor
sub
call
jo
adc
adc
xchg
sub
sbb
mov
sub
sbb
loop
pusha
insb
lea
pop
adc
jo
jno
aaa
inc
add
fistps
push
data16
add
dec
loope
xlat
loop
test
pop
inc
dec
popa
call
dec
mov
push
and
inc
sub
mov
sbb
dec
arpl
fwait
and
jp
and
shl
out
popl
xchg
icebp
shlb
mov
adc
je
jge
stc
fs
insl
mov
xor
add
or
push
movsl
xchg
mov
nop
mov
mov
cmp
mov
test
inc
mov
adcl
mov
mov
repz
pop
inc
and
ror
inc
jl
clc
test
jne
fiaddl
pusha
and
xchg
mov
test
aas
enter
aaa
mov
push
dec
xor
mov
add
sbb
xchg
loope
ret
and
cmc
inc
push
cltd
xchg
jl
fadd
in
and
push
call
iret
in
add
cmovo
sbb
sbb
ds
sub
ja
arpl
xchg
nop
aas
arpl
das
inc
xor
dec
sub
shl
popa
nop
out
and
shrb
push
not
in
jo
dec
dec
xor
pusha
jecxz
mov
pop
clc
movb
int3
adc
xchg
aam
jno
or
add
cltd
in
ret
xchg
add
sbb
lds
aam
sarb
lock
aam
test
cld
jle
cs
test
jns
jmp
pop
hlt
fs
repz
aaa
arpl
lahf
inc
loopne
cmp
and
add
lock
adc
add
fnsave
inc
pusha
xchg
inc
or
scas
cmp
or
test
and
pop
sub
or
adc
mov
pop
pop
cltd
mov
xor
fnstcw
sub
dec
sub
icebp
and
divb
sbbl
loope
xlat
xchg
xlat
xchg
sbb
inc
jge
or
adc
or
xor
adc
xchg
sub
mov
and
mov
sti
xchg
test
insl
stos
cmp
vaddss
pop
sub
mov
rcrb
mov
sahf
shll
push
sbb
adc
xor
aaa
cmpsl
stc
mov
push
jns
or
sbb
xor
rol
scas
cmp
sub
sbb
xor
repz
sbb
inc
repnz
stos
xchg
jno
adc
lock
and
push
mov
fnstenv
imul
and
inc
mov
test
aad
add
out
divb
inc
icebp
imul
or
popa
fdivl
shrb
aaa
rclb
or
test
add
jle
sub
push
js
xor
mov
xor
aam
outsb
and
xlat
daa
and
and
push
dec
popa
jle
das
mov
xchg
das
xchg
cmp
mov
jl
xor
add
mov
jmp
push
pop
int
loope
dec
adc
jo
and
test
dec
xchg
pushf
pop
xlat
mov
xchg
jp
in
and
in
sub
cmp
ljmp
or
or
das
leave
and
scas
std
insl
push
jb
and
sub
xchg
inc
inc
dec
push
sbb
bound
xchg
sbb
out
std
dec
adc
add
pusha
mov
xchg
dec
add
scas
loopne
and
mov
popa
add
add
mov
mov
ds
out
inc
push
aam
or
into
add
popf
inc
add
mov
js
xchg
jbe
loope
pop
inc
rclb
rol
jmp
cmp
xor
push
rol
pusha
sub
rcll
loop
sbb
subl
xor
sti
int3
add
adc
or
cmpsl
jmp
roll
mov
getsec
filds
je
add
jbe
mov
dec
push
out
jecxz
pop
dec
xor
pop
pop
jne
ljmp
fdivrl
ds
in
lahf
or
std
stos
test
and
mov
orb
test
inc
ss
inc
lret
pop
hlt
xor
addr16
popa
and
fs
nop
push
pop
popf
sub
addb
mov
sub
and
xor
into
hlt
test
hlt
test
inc
push
in
push
imul
mov
push
sub
sarb
pop
push
add
nop
ret
popa
mov
sbb
pop
lahf
faddl
lock
call
mov
out
sub
aas
loopne
mov
clc
or
fcmovbe
imul
sub
pop
test
in
aam
or
adc
test
nop
sub
or
jge
hlt
popl
mov
xor
sub
je
das
scas
push
sbbl
sbb
in
aaa
adc
int3
mov
addr16
dec
dec
je
enter
xchg
scas
and
fcoms
and
mov
add
leave
adc
xchg
rcrb
or
inc
cmp
or
inc
sub
pop
adc
pop
or
and
aad
adc
jnp
mov
inc
mov
mov
les
loopne
cmp
sub
addb
fs
call
rol
cwtl
xchg
fsubr
pop
movsb
xchg
inc
je
adc
jmp
and
adc
lods
enter
in
aaa
add
add
xor
inc
mov
adc
fcompl
or
je
daa
sbb
cs
les
and
movsb
or
add
test
ss
mov
filds
pop
mov
fistps
jl
pop
inc
fldl
fisubs
pop
jmp
and
and
push
dec
add
fdivrs
aam
nop
mov
pushf
push
push
rcrl
adc
lock
lods
xchg
ja
inc
push
adc
adc
hlt
add
sub
and
sbb
pop
ja
and
les
lahf
jl
push
jne
sub
jo
rolb
dec
sbb
je
loope
fstl
aaa
jmp
aas
les
test
lcall
mov
popf
inc
or
add
xchg
and
fs
daa
jne
insb
or
inc
push
add
sbb
dec
inc
cmp
jno
xor
dec
pop
cmpsl
addr16
jne
arpl
lock
jb
xchg
xchg
push
adc
adc
pusha
les
xchg
dec
lock
inc
jo
imul
or
inc
add
aam
cmpsb
sbb
ret
lock
xor
les
cmp
mov
push
shl
or
cs
mov
scas
lods
push
pop
or
pop
outsl
inc
call
adc
pop
movsl
call
cmp
js
push
test
ja
roll
sub
push
pop
dec
js
adc
sub
fwait
ret
push
xor
or
das
call
sub
adc
lock
aam
xchg
sub
shlb
in
push
repnz
inc
pop
or
push
cmp
mov
ret
inc
mov
adc
cmp
add
dec
xchg
add
push
push
add
pushl
repnz
shr
sub
adc
nop
cmp
push
adc
adc
xchg
or
insb
test
cmp
je
xor
es
ret
nop
xor
into
int3
xor
enter
inc
and
cmp
les
inc
sub
loopne
xor
mov
fld
fidivrs
fistl
outsb
sub
int
add
or
or
mov
or
mov
gs
mov
mov
aad
sbb
xchg
aaa
sbb
xchg
imul
dec
pop
jl
mov
adc
jmp
rclb
jno
cmp
ret
xor
nop
xchg
dec
or
fcoms
aam
bound
lea
xor
and
bound
in
sub
imul
in
xor
sbb
push
subl
push
mov
inc
ficompl
test
addl
mov
bound
and
arpl
scas
adc
push
adc
gs
mov
or
sbbl
push
lods
push
push
loopne
mov
pop
inc
jmp
loopne
mov
popl
lods
add
sub
aad
adc
popa
dec
pop
sbb
mov
in
xchg
jo
pop
xchg
or
adc
sbb
prefetch
xor
ret
daa
and
or
cmp
mov
inc
xlat
push
inc
add
in
and
fbstp
push
out
dec
pop
repnz
xchg
sbb
adc
add
inc
and
insl
test
sub
call
inc
sub
testl
xchg
pop
push
fs
sub
and
xor
inc
pop
call
fcoms
mov
pop
lock
sbb
xor
aam
or
aas
inc
sbb
or
in
jle
or
lea
popf
js
or
in
imul
dec
xor
pop
jne
xchg
inc
xor
std
js
cmp
inc
dec
cmp
lea
cmpsl
nop
mov
xchg
or
jns
add
add
shrb
cmp
sub
push
add
sbb
add
in
push
add
or
pusha
pop
arpl
test
lods
push
dec
movsl
inc
data16
sub
leave
xor
outsb
or
or
adc
rclb
movups
mov
cwtl
test
xchg
insl
and
and
fsubl
shrb
xor
iret
mov
loopne
adc
aad
jmp
mov
fcom
test
les
dec
and
add
popa
jmp
popa
in
and
and
out
or
and
movlps
icebp
andb
jno
jge
xor
cmp
cmp
and
xchg
inc
mov
push
aam
adc
popa
cmp
pop
jg
jmp
sub
out
adc
add
adc
mov
push
adc
push
fdivl
add
or
adc
inc
cltd
xchg
inc
inc
push
enter
inc
lea
fs
aam
add
out
mov
insb
and
sub
adc
add
inc
mov
sti
in
add
das
or
jmp
jp
test
sub
lods
jno
or
jb
push
xchg
sbb
out
movsb
ss
mov
daa
ds
dec
add
roll
push
es
lods
add
xor
pop
daa
push
in
push
adc
into
push
lock
aaa
and
es
stos
mov
pop
aas
jno
dec
pop
push
les
dec
add
cmpl
stos
xor
lods
movsl
sbbb
push
adc
add
fmuls
mov
js
fcoml
shl
push
xchg
xor
or
or
addb
addr16
sbb
mov
enter
test
or
scas
jo
xchg
fidivrl
push
inc
or
repnz
mov
cmp
cmp
pop
adc
mov
hlt
mov
mov
cmpsl
jmp
push
push
pop
pop
enter
lock
arpl
test
mov
sub
arpl
mov
or
test
or
pop
jg
outsl
add
add
or
xor
aaa
add
sbb
mov
test
add
ja
aam
or
sub
bound
add
out
pop
push
add
and
sbb
xchg
nop
adc
cmp
hlt
adc
xchg
push
adc
ja
cld
popf
jmp
iret
addb
inc
ror
movsb
adc
cmpsl
mov
lods
sub
inc
aaa
ret
dec
or
or
test
xor
sub
push
lds
mov
roll
and
mov
fldt
or
adc
push
adc
stc
xchg
or
and
mov
adc
ds
rcr
in
sbb
hlt
inc
push
vmread
mov
js
addr16
jne
inc
test
sub
pop
pop
jae
lea
scas
xor
sub
and
sub
fcomps
cwtl
aaa
add
lea
aam
arpl
mov
out
sbbb
lret
sbb
pushf
cmp
test
pop
push
mov
pop
leave
jmp
adc
add
idivb
pop
les
cmp
pop
rol
push
pop
notb
imul
push
subl
fstl
mov
push
or
insb
cmpsl
in
sub
push
scas
mov
data16
fcompl
addl
cmp
test
jge
adc
inc
nop
cmp
icebp
or
testl
addr16
and
xlat
push
push
push
add
dec
daa
adc
jb
test
fiaddl
push
mov
ret
cmc
push
and
insl
pop
push
mov
or
xchg
push
call
inc
push
test
xlat
sbb
jecxz
and
sbb
or
inc
mov
inc
mov
adc
add
dec
inc
dec
push
and
add
sbb
dec
sub
les
inc
add
add
sarb
hlt
inc
in
arpl
jne
mov
add
jo
jl
out
pop
stos
bnd
sub
adc
daa
xor
mov
sahf
imul
dec
inc
pop
testl
and
lahf
inc
pushf
into
nop
jns
and
adc
xor
in
fisubrs
push
xor
ret
mov
mov
jbe
jmp
add
fs
pusha
mov
inc
sub
in
or
stos
add
xchg
insb
mov
adc
xor
or
jge
mov
dec
mov
mov
mov
dec
xor
addl
mov
cs
sbb
pop
inc
int3
xor
ret
out
mov
mov
jmp
xor
push
imul
dec
mov
and
sarl
nop
fs
inc
push
mov
xor
inc
in
dec
test
sbb
shrb
stc
aaa
xor
das
dec
xchg
add
fmuls
loop
push
mov
sub
pop
xor
jne
push
jecxz
in
pop
popa
adc
jnp
or
add
push
xor
jno
push
and
dec
cmp
inc
cmpsl
push
jo
add
inc
adc
bound
stc
or
mov
xlat
xor
pop
popf
outsl
fwait
or
pop
add
dec
shl
add
adcb
and
push
daa
shll
push
push
mov
lods
adc
stos
adc
aaa
or
push
fwait
mov
or
push
inc
ljmp
and
inc
mov
push
xchg
ret
xor
in
adcl
lock
nop
nop
test
and
dec
or
shlb
jmp
adc
xchg
adc
scas
fcomps
and
inc
sbb
mov
je
adc
mov
notl
push
add
pop
fmuls
arpl
pop
nop
mov
aas
int
push
sbb
push
push
dec
jmp
mov
icebp
mov
sub
clc
cmc
ja
pop
and
cwtl
push
cmp
mov
jl
icebp
mov
inc
adc
or
fwait
xor
leave
and
arpl
xor
cmc
lret
and
push
push
jbe
outsb
mov
mov
add
outsl
in
push
adc
cwtl
jg
and
and
add
cmpsl
sub
test
lock
inc
push
daa
pop
popa
adc
lods
sbb
xlat
pop
fildll
ds
push
push
sub
loop
cltd
pusha
aaa
xor
add
je
aaa
push
adc
arpl
inc
imul
aam
add
aas
or
sbb
outsl
xchg
js
rcll
lret
in
inc
out
dec
adc
mov
xor
pop
and
sbb
outsl
inc
or
sub
arpl
lods
inc
inc
test
cmp
xor
xchg
add
insl
iret
shll
das
xchg
push
xor
call
jle
xchg
xor
pop
add
in
jp
or
adc
test
sbb
cmp
or
fistps
xchg
push
seto
xor
aaa
sbb
ds
push
cmp
or
xchg
add
sbb
sti
jae
push
fisttpll
ljmp
and
xor
inc
mov
sti
or
outsb
or
gs
pop
push
dec
imul
inc
mov
mov
mov
les
pop
jo
fimull
addl
mov
icebp
mov
add
mov
push
inc
push
mov
cmpb
push
or
lahf
roll
into
ja
and
add
cmp
pop
mov
cmp
sbb
es
cli
pop
jp
outsl
jb,pn
push
jge
xor
or
lret
cltd
js
lcall
movsl
push
push
daa
sbb
sahf
ja
mov
push
dec
inc
add
pop
in
out
je
dec
dec
sbb
inc
in
aaa
jb
pop
dec
dec
or
scas
cld
lods
repnz
dec
inc
push
cmp
inc
inc
inc
inc
add
mov
dec
inc
inc
pop
inc
or
push
sub
pop
or
pop
jo
dec
xchg
pop
in
push
xor
push
lds
addb
push
dec
jecxz
cmp
push
setnp
cs
jae
ret
test
mov
test
push
mov
testl
and
sbb
dec
ja
aad
or
call
push
push
jb
sti
ss
dec
or
inc
outsb
jns
imul
and
daa
cld
out
push
or
push
adc
out
mov
push
test
or
mov
or
cltd
sbb
sbb
or
lds
adc
negb
arpl
sub
dec
in
cmpsb
incl
out
lods
adc
xor
ja
andl
push
xor
scas
ret
stos
add
out
fadd
fiadds
or
add
fistps
add
icebp
sbb
insl
outsl
sub
sbb
sbb
jge
test
adc
pusha
adc
mov
and
js
and
xor
fbstp
mov
mov
or
popf
adc
adc
pop
fcmovnu
pop
or
jmp
or
push
mov
adc
jbe
pop
cltd
sub
loopne
insl
sbb
add
or
test
or
mov
xchg
jnp
jbe
dec
cmp
les
jns
dec
dec
lea
dec
or
and
push
mov
sbbl
popa
mov
outsl
test
or
iret
adc
and
adc
shll
mov
out
sahf
mov
int3
dec
adc
cmpsb
enter
lods
push
addr16
sbb
out
or
mov
push
jbe
mov
sub
push
push
xor
adc
or
add
sub
or
inc
rcr
xchg
cmp
loope
fs
push
xchg
mov
mov
dec
sbb
lret
ja
ds
or
mov
mov
mov
add
cmpsb
push
inc
add
rorb
adc
movhps
ja
push
cs
pop
insl
popa
adc
cmpsb
cwtl
loopne
dec
push
enter
dec
mov
xor
testb
add
or
jle
and
aaa
sbbl
inc
icebp
sti
ss
std
cs
popa
lret
add
lock
ret
or
push
mov
adc
adc
ja
pop
scas
stc
jl
iret
insl
or
jp
inc
js
pop
outsb
push
push
mov
and
aam
adc
imul
xor
cmp
lods
fisttps
and
cs
pop
xlat
sbb
add
sbb
adc
sbb
inc
adcb
shlb
lods
dec
push
mov
sahf
sub
sub
adc
out
push
and
jp
out
or
insb
jns
movsl
int3
mov
mov
push
insb
mov
stos
dec
push
dec
xchg
mov
add
inc
adc
test
jo
adc
enter
sbb
loopne
aad
push
sub
dec
andb
cmp
mov
inc
add
mov
and
sub
xor
icebp
jmp
xchg
xor
adc
and
mov
iret
or
popf
pop
adc
xor
inc
add
inc
pop
clc
adcb
outsl
or
adc
and
pop
add
push
stos
xor
xlat
and
jb
movsb
mov
shl
inc
fs
dec
jne
jb
fs
push
inc
adc
dec
iret
add
mov
adc
mov
lret
repnz
in
fistpl
aas
and
dec
imul
adc
loope
or
adc
test
das
aad
pop
dec
stos
pusha
rolb
scas
ret
fsubs
xchg
loopne
inc
dec
adc
sbb
rclb
and
inc
sbb
cwtl
pop
shrl
mov
sub
inc
push
and
in
inc
and
test
adc
xor
dec
push
cmpsl
or
dec
insl
sbb
pusha
pop
pop
and
cmp
push
inc
sub
xchg
xchg
xchg
xchg
pop
js
mov
loope
inc
sub
xchg
jge
int3
out
xchg
xchg
xchg
lret
sbb
pop
test
xchg
xchg
xchg
test
negl
test
xchg
inc
outsl
dec
rcl
xor
or
les
cmp
out
cmp
xlat
jne
pop
adc
sub
sub
mov
push
fcomps
mov
push
js
inc
das
inc
cmp
stos
sbb
stos
push
and
in
jmp
jbe
mov
xor
stos
or
push
inc
enter
fsts
fisubs
cmp
or
loopne
mov
or
pop
add
mov
or
movsb
jnp
jnp
fs
dec
rolb
and
outsl
mov
or
inc
mov
push
dec
ret
insb
cmp
adc
cmp
nop
shl
cmp
xor
in
fs
push
or
mov
inc
sub
inc
insb
push
scas
fimuls
test
stos
pop
push
in
lret
xchg
jg
sbb
and
add
cwtl
pop
stc
repnz
sbb
decl
ja
mov
add
cmp
push
adc
xor
mov
jg
faddl
faddl
and
js
lock
andl
pusha
push
or
jg
jno
test
in
nop
test
lods
inc
adc
imul
sarl
andl
jg
pusha
enter
xchg
jmp
inc
adc
push
pop
hlt
adc
ret
mov
dec
imul
js
and
out
mov
adc
push
push
dec
xor
fwait
push
nop
add
push
orl
scas
add
inc
fcomps
xchg
loopne
ja
lods
jne
loope
sbb
adc
movsb
divb
ljmp
and
dec
test
push
js
push
add
addr16
cmovnp
cmpsb
xchg
ss
addl
and
mov
jns
push
mov
daa
andb
addb
push
roll
xchg
dec
jp
popa
int3
xchg
and
insl
inc
jno
cmp
dec
ficomps
mov
pop
sbbl
cmp
mov
fs
and
mov
icebp
cmp
xchg
xchg
ja
movsl
nop
loopne,pn
inc
int
mov
insl
adc
rol
jp
jg
fildl
insl
add
xor
sbb
lds
adc
andb
in
push
lcall
in
sub
cmp
rol
jl
adc
adc
nop
xchg
and
push
pop
incl
fcmovnb
push
jae
pop
testl
icebp
scas
enter
add
ret
jbe
pavgw
and
or
rol
mov
pop
xor
xchg
fildl
rcrl
xchg
gs
dec
mov
in
mov
mov
seta
mov
leave
adc
add
or
imul
sbb
push
xchg
and
std
ja
jnp
or
mov
jge
and
sahf
outsl
jo,pt
adc
bound
inc
sbb
sbb
lcall
sbb
out
or
add
insl
inc
pusha
lret
and
lock
clc
or
xchg
filds
or
ret
push
pusha
scas
dec
push
addl
cmp
cwtl
add
add
lret
jne
push
notl
cmp
les
outsb
test
outsb
aaa
mov
add
pop
cmp
mov
inc
mov
xor
mov
mov
notb
stc
and
sub
mov
popa
out
dec
push
aas
and
pop
or
rorb
push
pop
jmp
mov
cmp
and
rolb
xor
insl
mov
iret
cmp
and
js
inc
icebp
pop
sub
and
push
add
and
add
ret
adc
pop
mov
sub
icebp
xchg
repz
and
cmpsb
pop
pop
xor
inc
insl
sub
mov
and
enter
add
fdivl
push
into
outsb
inc
jo
jmp
or
xor
xchg
dec
orl
push
test
push
xchg
xchg
pop
push
gs
cmp
mov
jmp
push
pop
xor
xor
inc
mov
mov
cld
push
pushf
or
push
inc
xchg
outsb
cmp
aam
outsl
jge
pop
fs
andl
mov
inc
out
xchg
push
jecxz
push
ret
sbb
loope
add
lahf
mov
adc
jne
pusha
rclb
mov
cltd
and
ja
ja
sub
and
ja
subb
movsb
leave
cmp
pop
popf
dec
stos
add
or
sti
fnstenv
push
fwait
mov
push
add
aad
mov
mov
sub
mov
push
mov
mov
stos
aad
pop
dec
xor
out
xchg
fists
cmp
outsb
js
xchg
adc
dec
sbb
dec
or
sub
in
repnz
add
adc
icebp
cmpb
sub
jecxz
pop
mov
mov
dec
and
push
inc
pop
jle
notl
ret
add
adc
jnp
sbb
jo
xchg
inc
cltd
shrl
notl
adc
rcrb
jns
shrb
imul
pop
packssdw
cmp
mov
pop
inc
adc
pop
adcb
add
mov
fdivl
add
push
xor
mov
or
neg
sbb
cmp
adc
neg
out
iret
fcompl
outsb
rol
outsb
mov
ja
aaa
loopne
xchg
sahf
or
jns
js
cmpl
mov
mov
inc
inc
popf
mov
arpl
pop
lahf
mov
lock
out
sbb
add
fisttpll
sbb
rorb
xchg
dec
pop
and
mov
inc
outsb
or
test
and
fisttpl
or
je
nop
sub
and
inc
pop
dec
ret
cwtl
sub
shrl
or
mov
lea
or
pushf
inc
cmovae
adc
push
add
push
jg
pop
das
and
ss
pop
mov
pushf
pop
pop
div
jp
scas
test
lret
wrmsr
and
and
xor
les
pop
and
pop
push
and
pop
and
cwtl
pop
jge
loopne
shrl
mov
add
push
xor
rcr
push
or
cmpsb
int3
fbld
daa
or
pop
and
das
orb
jbe
or
add
iret
sti
xorb
jo
inc
lcall
sub
scas
aaa
add
or
les
dec
movsl
sub
jb
xchg
dec
nop
je
jbe
add
ljmp
sub
pop
dec
fisttpll
sbb
pop
jmp
ret
ret
and
testb
jl
aas
mov
lods
jbe
push
mov
xchg
imul
fisttpl
inc
rcrb
enter
aaa
push
mov
add
rorb
das
and
fs
dec
mov
pop
insb
jb
jb
jo
js
cmp
iret
jae
adcb
dec
or
sub
nop
adc
cmp
cs
dec
outsb
and
sub
dec
roll
mov
adcl
xor
in
test
inc
es
add
sbb
dec
dec
push
push
add
pop
sub
pop
inc
es
sub
imul
addb
movl
mov
ret
js
nop
out
es
inc
dec
adc
mov
leave
inc
mov
push
add
sbb
aas
xchg
mov
push
xchg
dec
pop
es
in
sbb
dec
bound
pushf
test
cltd
bound
mov
adc
pop
pusha
dec
inc
test
xor
xchg
inc
pusha
mov
cmp
dec
mov
cmp
dec
dec
adc
mov
loopne
test
adc
bound
pop
adc
jns
adc
fmull
data16
dec
dec
repz
push
fmuls
adc
cmp
pop
push
lds
das
call
cmp
push
lcall
mov
aam
rclb
xor
sub
imul
or
jns
je
sub
adc
lcall
cmp
sbb
rclb
data16
movsb
and
mov
pop
pop
mov
fldcw
add
inc
lcall
mov
cmp
sub
mov
jns
pop
inc
pop
jb
push
mov
je
add
or
popa
fnstsw
xchg
inc
clc
push
push
dec
clc
inc
fs
mov
movswl
push
loopne
dec
jecxz
cmovbe
sub
fwait
fs
sub
sbb
mov
sub
lods
insl
test
icebp
jo
inc
lcall
mov
and
xchg
js
adc
jl
xchg
outsl
add
jle
inc
cmpb
push
es
sub
and
sbb
or
icebp
fimuls
add
pushf
insl
lea
mov
stc
je
ret
or
adc
das
inc
imul
pop
dec
pusha
out
xchg
and
imul
cmp
xor
cmp
lods
add
enter
mov
ret
movsb
add
jb
mov
ss
sbb
mov
lret
in
dec
rolb
in
testb
insb
cwtl
fnstcw
xor
add
outsl
cmp
cmp
insl
mov
push
jo
pushf
pushf
mov
stc
xor
inc
outsb
mov
daa
daa
and
jae
xchg
xchg
xchg
push
je
or
leave
leave
pop
mov
pcmpeqw
repnz
pop
lcall
arpl
or
jbe
sub
mov
and
shlb
and
inc
pop
mov
xchg
dec
jns
ja
xchg
test
int3
enter
or
je
js
dec
add
aad
test
push
pushf
cwtl
dec
les
sbb
jg
xchg
sarb
daa
push
dec
call
mov
jnp
mov
inc
push
pop
adc
inc
inc
or
add
test
xchg
arpl
cwtl
mov
sub
cmp
jmp
lods
pushf
dec
rolb
lahf
shlb
repnz
xchg
push
push
mov
mov
dec
push
inc
test
dec
or
test
push
mov
repz
mov
and
aam
push
dec
popa
ret
sbb
or
xchg
sub
push
xchg
mov
mov
loope
xor
idivl
mov
popa
gs
jge
xchg
push
lahf
and
les
stc
xor
pop
mov
sub
cmpsb
loopne
test
add
pop
sub
int
dec
pop
dec
lds
cmpsb
and
fsubl
dec
cmp
in
test
jl
inc
leave
pop
and
add
movsl
lds
adc
mov
jmp
add
js
inc
aaa
mov
call
push
arpl
cld
nop
sbb
push
stos
adc
in
stos
leave
sub
cmp
inc
mov
push
sbbb
sub
sub
add
xlat
aad
aam
sbb
sbb
out
inc
scas
xchg
arpl
add
push
dec
clc
inc
jb
movsb
mov
mov
or
xchg
mov
dec
or
mov
add
iret
push
mov
out
les
and
enter
cmovae
movsl
dec
stos
fisubl
adc
push
add
xchg
jp
xchg
push
sahf
iret
sub
lret
jge
mov
push
add
add
insb
adcb
push
xchg
and
pop
mov
xor
mov
or
inc
add
popa
nop
pop
inc
adc
adc
dec
xchg
fs
leave
or
iret
sbb
cmp
adc
adc
mov
std
nop
mov
pop
leave
sub
push
loop
push
push
push
gs
add
pop
je
in
mov
les
push
cmp
dec
inc
adc
inc
push
in
jae
mov
mov
or
push
xor
xlat
xchg
fistpl
push
jns
or
sbb
out
jp
sbb
sbb
push
jno
mov
fldl
sub
sbb
sbb
mov
xchg
xchg
dec
adc
xchg
xchg
xchg
xchg
jne
shl
xchg
xchg
lret
or
lret
xchg
xchg
xchg
popf
lret
jle
xchg
xchg
xchg
aas
imul
sub
xchg
xchg
je
mov
lret
or
cs
ja
xchg
xchg
xchg
pushf
jmp
xchg
xchg
cmp
lods
xchg
lret
xchg
xchg
int3
icebp
sbb
xchg
xchg
popa
mov
xchg
hlt
sbb
xchg
xchg
mov
xchg
xchg
xchg
xor
subb
repnz
test
xchg
xchg
xchg
mov
lret
add
sub
xchg
aaa
mov
enter
shlb
cmpsl
jae
dec
add
or
add
mov
iret
imul
pushf
out
ret
inc
or
mov
inc
or
outsw
imul
mov
push
mov
xor
inc
adc
aad
stos
lock
xchg
sub
les
push
mov
mov
add
in
mov
add
push
push
cmp
stos
jo
sbb
movsb
mov
int3
mov
mov
nop
inc
pusha
lods
inc
pusha
inc
push
xlat
unpckhps
sub
mov
and
push
inc
adc
add
out
aam
pop
inc
cwtl
fldenv
insl
ret
xor
sub
mov
xchg
es
sarl
xor
stos
out
dec
or
and
xchg
fs
inc
lea
imul
test
mov
lods
scas
sub
adc
add
sub
stc
mov
ret
rol
dec
cmpsl
inc
addb
int3
scas
jmp
call
xchg
sahf
insb
insb
cmpsb
adc
jo
add
mov
hlt
les
push
pop
pop
dec
movsl
xchg
dec
mov
test
xchg
insb
and
push
pushf
pushf
adc
stos
xchg
divl
sub
jnp
movsb
mov
and
movsb
or
pusha
call
mov
push
jbe
inc
sub
sub
pop
add
dec
mov
mov
pop
inc
enter
movsb
mov
xor
lret
mov
loopne
xorb
dec
lock
cmp
sub
pushf
ja
or
mov
xor
sub
les
jo
pushf
push
or
pop
jp
jmp
nop
xor
mov
jle
stos
sbb
into
insb
jne
or
dec
pop
sbb
loop
push
jbe
or
pop
insl
push
adc
add
jno
pop
xor
out
push
fs
fdivl
pusha
xchg
or
add
imul
push
loopne
lea
mov
jae
jno
add
jmp
mov
jle
lcall
lret
adc
or
dec
inc
sbb
add
xchg
jo
rorb
loope
repz
pop
push
dec
xchg
adcb
les
add
stos
inc
shr
les
movsb
sbb
hlt
shll
mov
push
mov
lock
push
ret
aad
mov
cmp
loope
icebp
mov
ret
pusha
mov
dec
pop
sub
enter
xchg
dec
and
xchg
sbb
or
xor
hlt
loopne
sub
ret
call
jae
in
xchg
sub
dec
stos
adc
and
mov
pushf
cmpsb
hlt
mov
leave
xor
roll
ret
dec
repz
cwtl
test
leave
xchg
xchg
nop
or
or
dec
dec
sub
js
and
inc
xchg
jo
pop
cmp
arpl
jae
push
pop
sahf
and
adc
loopne
rcl
cmpsb
hlt
and
mov
adc
push
and
iret
dec
sbb
in
xchg
nop
es
stc
xchg
adc
andb
and
scas
test
push
aaa
and
inc
dec
or
outsb
adc
jle
mov
xchg
and
dec
sub
mov
gs
add
push
dec
mov
inc
push
nop
adc
and
add
add
add
cmpsl
push
add
pop
add
shrb
or
mov
mov
sbb
add
add
jns
or
repnz
or
or
push
sldt
adc
cmp
inc
pop
adc
adc
add
add
sbb
mov
add
add
add
add
das
test
sbb
sbb
enter
sbb
adc
stos
in
add
in
add
add
add
and
and
inc
leave
mov
add
leave
or
add
add
jb
in
add
add
nop
pop
dec
out
add
xchg
inc
leave
sub
sub
sub
and
inc
jb
das
add
xor
xor
push
xchg
xchg
push
xor
xor
xor
inc
movsb
and
xor
sub
add
add
mov
add
add
shl
add
jns
mov
and
jb
add
add
and
adc
inc
add
add
loope
in
inc
add
xchg
mov
xchg
xchg
lret
js
xchg
xchg
xchg
stos
into
cld
and
dec
insb
xchg
mov
out
mov
xchg
xchg
xchg
xchg
xchg
xchg
lret
mov
mov
sar
push
mov
xchg
xchg
xchg
push
mov
xchg
xchg
xchg
lret
add
xchg
xchg
xchg
pushf
ret
out
mov
push
jnp
xchg
lret
xchg
xchg
ret
xor
pop
jg
int3
xchg
xchg
lret
xchg
cmc
sbb
xchg
xchg
subb
lret
sbb
push
aas
mov
ret
or
iret
inc
inc
test
cmpl
push
push
aas
adc
and
jo
mov
orl
pop
enter
xor
adc
and
or
xor
lcall
inc
pop
and
popa
and
jb
add
fwait
sbb
add
sbb
ret
and
dec
mov
mov
mov
add
inc
xlat
adc
sbb
mov
cmc
sub
sub
stos
cmp
and
adcb
or
mov
mov
call
cltd
inc
ljmp
dec
and
in
cmc
and
cs
inc
ljmp
notb
addl
outsl
add
or
dec
arpl
iret
add
xchg
or
add
mov
fs
pop
call
or
pop
add
xlat
adc
fwait
and
sbbb
or
test
inc
test
popl
popl
xor
lahf
icebp
dec
add
push
jne
mov
inc
push
arpl
or
cmp
mov
cmp
and
mov
xor
das
cmp
fadd
xchg
ret
and
xor
andb
andb
xchg
add
lds
dec
mov
mov
stos
testl
jb
nop
xchg
or
jns
dec
rcrb
in
mov
inc
pop
lock
cmp
iret
jge
lods
dec
inc
pop
jne
cwtl
mov
popf
pusha
sub
add
or
mov
cwtl
lock
punpcklwd
lret
lahf
popa
add
and
sahf
xchg
inc
js
movsb
xchg
or
jno
and
or
outsl
xchg
push
jo
mov
clc
cmp
or
cmp
in
pop
xor
xchg
pop
sbb
clc
inc
mov
pop
das
cltd
clc
clc
cmp
push
daa
test
jne
ja
mov
call
mov
lea
scas
pop
add
daa
andl
jae
xor
popf
or
dec
lds
in
sahf
add
addb
lcall
mov
pop
imul
push
lret
inc
pop
push
shrl
js
jl
movaps
orb
mov
mov
arpl
inc
jbe
jl
pushf
insl
fisttps
adc
lret
dec
jo
inc
insl
push
mov
rol
mov
sub
int
xchg
mov
inc
dec
inc
ret
mov
add
mov
ret
mov
xchg
in
jmp
lahf
inc
jecxz
cwtl
fcompl
lods
rcrl
jnp
sub
jge
dec
cs
and
cmp
inc
add
lret
and
dec
cmp
loopne
and
gs
nop
inc
leave
xchg
mov
adcb
dec
xor
add
mov
mov
adc
cmp
cmp
aaa
addl
popf
lock
adc
pop
and
push
xchg
xchg
or
pop
mov
xor
addr16
sub
clc
arpl
add
inc
pop
inc
dec
call
sbb
sahf
xchg
mov
andl
shl
fs
mov
stos
push
jl
and
in
lds
in
dec
hlt
and
lock
test
push
lahf
sub
dec
push
rorb
pop
adc
sbb
popa
xor
mov
jmp
or
adcl
sub
mov
mov
adc
mov
lret
mov
jle
sti
loopne
loope
jb
xchg
jp
and
cmp
mov
fdivrs
or
daa
cmp
adc
or
popa
out
and
add
and
xlat
mov
stos
mov
outsl
es
adc
pop
jo
adc
pop
or
pop
push
jno
mov
and
mov
adc
in
xor
mov
mov
mov
mov
mov
pop
xor
fs
jmp
inc
inc
rol
sbb
jge
sub
xorl
movsl
nop
pop
xchg
xlat
test
pop
notl
mov
pop
inc
cs
pop
xchg
push
popf
jl
or
and
sarb
bndldx
push
push
ret
lgdtl
jge
or
in
mov
dec
xor
lret
mov
out
xchg
test
int
add
sbb
adc
adc
pop
inc
popa
enter
and
add
hlt
xchg
shlb
xorl
lahf
mov
push
push
and
push
push
mov
lret
in
aam
adc
das
ret
xor
imul
movsb
add
push
pushf
cmc
add
ss
jns
popa
clc
and
and
dec
pushf
pop
xlat
jge
sub
jb
and
xor
test
insb
pusha
fs
ret
add
add
pop
clc
cmp
mov
mov
adc
ss
pop
cmp
inc
sub
adc
pop
xchg
ljmp
fists
andb
mov
push
jmp
mov
out
out
scas
nop
push
mov
xchg
adc
mov
pop
add
cmpsl
sub
sbbb
add
cmpsl
mov
push
dec
movlps
and
mov
ret
js
xor
lcall
imul
das
sub
adc
push
or
fwait
lock
cltd
repz
inc
dec
cmp
ret
insl
shlb
lahf
mov
lret
arpl
push
and
mov
dec
push
test
aas
out
or
rorl
mov
add
and
dec
jl
mov
setge
lea
jns
shr
test
andl
jno
sub
and
and
ljmp
sub
cmp
adc
ja
in
jne
jne
ja
stos
mov
fsubrs
loope
inc
out
mov
mov
les
or
ja
add
imul
iret
stos
inc
pop
cmp
add
add
ret
adc
lea
sub
or
push
test
xlat
adc
pop
adc
sbb
adc
in
mov
aas
lods
push
add
push
sub
and
cs
sbb
adc
sbb
sbb
inc
mov
fbstp
jmp
test
pop
jmp
lods
imul
sbb
in
push
and
jne
xchg
cmc
movsb
push
outsl
push
jl
add
push
xchg
push
and
pop
add
fwait
jo
outsb
mov
lods
pop
bound
scas
outsl
inc
push
adc
mov
adc
pop
lea
push
hlt
icebp
hlt
or
adc
mov
jge
mov
xor
lds
pop
scas
mov
or
testl
mov
leave
and
push
push
js
loope
rcrb
mov
ret
aam
sbb
imul
pop
orb
push
mov
mov
xorl
and
dec
xchg
xor
or
and
inc
dec
and
jnp
cmp
pop
jo
fs
mov
pusha
adc
xchg
and
sbb
sub
jne
adc
dec
dec
xchg
adc
dec
or
mov
dec
fistps
movb
pop
sbb
or
lods
or
push
pop
call
mov
inc
movsl
setle
or
xchg
mov
adc
outsl
dec
sub
daa
inc
push
mov
call
pushf
pusha
push
inc
adc
add
xchg
mov
sub
pop
pop
dec
dec
dec
fdivl
dec
cmp
ds
fs
cmp
lock
repnz
or
in
jne
jecxz
add
call
imul
pusha
xor
push
movhps
int
or
scas
pushf
dec
ds
bound
jns
add
mov
nop
xlat
sbb
push
out
sub
js
add
pop
xchg
in
pop
xchg
clc
xlat
scas
push
mov
add
je
add
pop
ret
ud2
inc
adc
repz
push
lds
cli
mov
dec
faddl
aam
xchg
mov
add
add
daa
fdivrl
mov
pandn
lds
push
pop
pop
decb
dec
inc
and
jecxz
mov
xor
dec
xchg
mov
icebp
fldl
ficoml
dec
mov
das
sub
push
mov
and
jb
testl
mov
stos
lea
sbbl
mov
dec
or
inc
shlb
jmp
pop
lahf
mov
insb
xor
insl
mov
nop
in
int
cmp
es
jmp
xchg
xchg
sbb
daa
and
adc
xchg
out
mov
adc
call
imul
adc
arpl
adc
mov
test
adc
inc
pop
adc
nop
pop
push
mov
cmp
xchg
adc
sbb
dec
dec
or
adc
sbb
push
xchg
push
nop
lret
mov
or
mov
xchg
add
cmp
test
loopne
inc
and
movsl
or
mov
jb
cmp
arpl
pop
mov
sbb
xchg
or
mov
or
jae
push
pop
add
dec
push
in
test
cmpsl
dec
mov
xchg
mov
mov
ss
pop
test
lcall
dec
mov
and
roll
loope
mov
aas
mov
outsb
xchg
jno
dec
jne
inc
xlat
mov
pushf
xor
jp
push
add
scas
and
adc
push
add
pop
xchg
xchg
and
xor
movsb
test
mov
adc
jno
shlb
jg
and
insb
sbb
mov
and
jo
and
xchg
je
aaa
inc
push
xchg
mov
imul
jne
das
dec
cs
or
dec
or
push
xchg
and
dec
xchg
js
inc
sbb
pop
mov
rorl
jl
pop
sbb
push
mov
inc
sbb
xchg
xchg
adc
stos
pusha
mov
gs
pusha
insl
popa
and
pusha
push
lret
shl
add
das
mov
jne
and
inc
cmp
inc
mov
data16
jmp
adc
rcl
and
lock
mov
pop
adc
and
mov
mov
ret
xchg
inc
lret
jnp
mov
sbb
and
or
je
xlat
and
xchg
aaa
or
test
pop
sbb
jne
rcl
or
pop
pop
pop
xchg
sar
mov
and
pop
add
adc
mov
adc
pusha
mov
add
adcb
cmp
jnp
mov
inc
or
mov
jae
ret
push
popa
adc
popl
outsl
and
test
add
mov
mov
pusha
faddl
mov
inc
cmpsl
test
pusha
test
ja
cmp
je
das
mov
or
divl
test
sahf
rcll
push
clc
add
aad
push
lahf
dec
movsl
arpl
push
mov
mov
repnz
loope
negl
or
rcll
xchg
pop
dec
jb
xchg
cmpsb
test
data16
xchg
cmc
sti
data16
sub
push
jne
pop
test
add
mov
sbb
sbb
push
mov
add
inc
test
bnd
sahf
add
adc
fs
mov
pop
addr16
inc
push
sbb
int
xchg
push
daa
mov
jle
lahf
fs
pop
dec
sbb
mov
loopne
rclb
lahf
pop
sub
and
dec
sub
push
mov
mov
cli
les
sub
push
or
push
mov
test
sahf
lds
call
inc
roll
and
mov
popa
cmp
cmp
pop
push
adc
dec
leave
and
mov
or
mov
add
pop
int3
das
loopne
cmp
sub
or
pop
jp
mov
push
and
pop
repz
fs
sbb
sub
jo
addr16
push
sbb
xchg
repz
dec
nop
clc
pop
and
data16
outsl
xchg
das
inc
add
arpl
xor
in
inc
mov
icebp
sti
add
addb
xor
adc
sbb
es
not
cld
adc
and
pop
or
push
xchg
sub
pop
in
sbb
pop
xor
js
pop
pop
addr16
pop
enter
enter
je
dec
sahf
movsb
pop
jle
sub
dec
cltd
cli
adc
out
subb
xlat
pop
cmp
nop
pop
or
leave
mov
gs
xchg
insb
leave
adc
and
mov
xlat
pop
and
rcr
adcl
sub
xlat
or
cltd
dec
dec
push
sub
pop
push
inc
imul
sarb
test
addr16
in
aam
gs
gs
notb
add
sti
inc
jbe
pop
xor
pop
lds
adcb
aaa
pushf
pop
cmp
mov
pusha
and
nop
push
or
fildl
dec
add
sbb
sub
inc
push
xor
mov
xor
sbb
jmp
push
cmp
jno
adcl
filds
inc
cmp
inc
pop
add
in
or
or
stos
lock
jo
pop
das
sub
add
push
pop
pop
xor
pop
mov
xchg
enter
sub
push
xor
imul
iret
inc
addb
das
out
inc
xor
pop
push
pop
popf
adc
add
add
or
and
or
push
aad
cmp
jne
ds
decl
jb
jb
loopne
loop
jb
jb
in
out
jb
jb
call
jb
jb
in
out
out
jb
jb
rcl
rcl
jb
jb
aam
xlat
jb
jb
fcomp
fcmovu
jb
jb
jb
jb
rol
ret
jb
jb
jb
jb
enter
jb
jb
int3
int
iret
jb
jb
mov
mov
jb
jb
mov
mov
jb
jb
mov
jae
jb
mov
fimuls
das
aam
inc
push
cmpsl
popl
mov
testl
dec
sbb
pop
adc
je
bound
dec
lcall
jbe
or
clc
rcl
cmpsb
xchg
mov
push
roll
andl
dec
sbb
and
mov
adc
sub
das
jecxz
xchg
jno
inc
pop
sbb
sub
testb
pop
jmp
sub
lret
push
cmpsl
test
mov
push
mov
inc
movsl
sti
cmpl
loope
and
sbb
dec
xor
mov
adc
jb
mov
je
nop
adcb
cmpsl
add
cmp
mov
add
ljmp
sbbl
add
add
lret
call
test
jnp
and
pop
xor
add
push
arpl
jmp
xor
push
cmp
mov
pop
ficoms
iret
push
mov
push
xor
xor
mov
lret
xchg
adc
test
pop
pop
mov
es
rcl
shll
inc
dec
dec
scas
popf
pavgw
shll
dec
adcl
adc
stc
testl
sbb
or
sbb
je
mov
pop
nop
setl
dec
pop
mov
mov
mov
inc
das
lret
ljmp
mov
push
test
xor
aam
loopne
and
pop
test
filds
popa
das
mov
push
loope
xlat
adc
or
into
lds
mov
adc
inc
and
scas
push
xchg
in
dec
iret
pop
xor
jns
mov
ds
sub
rorb
cmp
mov
mov
ss
pop
sub
mov
leave
test
clc
fdiv
mov
dec
push
jbe
insb
xchg
add
sub
add
shlb
xlat
sbb
inc
mov
mov
cmpsl
movsb
add
or
mov
mov
add
test
push
or
pop
dec
mov
jmp
daa
mov
cmpsl
xchg
mov
fcoms
jmp
dec
add
lcall
or
sbb
cmp
insl
popa
addl
xor
pop
cltd
jbe
xlat
xchg
addr16
shrl
pop
xor
xor
ss
stos
stos
lret
dec
cmp
jnp
ja
jnp
xchg
or
sbb
popa
lss
int
scas
xchg
xlat
jbe
mov
orb
sub
insb
sbb
inc
adc
push
fcoml
pusha
adc
das
out
adc
dec
push
roll
push
insl
sbb
jmp
arpl
sub
and
addb
inc
adc
bound
push
inc
sbb
addb
inc
jo
xlat
pop
rcrl
cmp
or
adc
adc
repz
adc
sbb
mov
jb
je
jns
adc
pop
ja
pop
ret
sbb
lea
das
pusha
push
add
and
into
repz
mov
js
neg
jne
xchg
xlat
sbb
jo
fidivl
pmulhuw
shufps
push
push
cld
push
sarb
sbb
cmp
rorb
inc
adc
push
push
push
inc
icebp
push
mov
dec
xchg
test
push
mov
enter
and
addr16
pop
mov
mov
dec
ret
cmp
mov
pusha
xor
cwtl
mov
out
ds
mov
fimuls
ret
mov
cmp
add
movb
jmp
fimull
push
fimuls
call
or
jg
add
rol
jg
data16
cmp
repz
cwtl
cmp
adc
test
sub
push
and
pop
aam
add
jmp
cmpl
mov
es
cld
aaa
bswap
xor
cmp
adc
inc
sbb
dec
inc
mov
or
adc
scas
adcb
mov
inc
dec
jne
and
push
sarb
scas
aas
mov
sub
icebp
and
sub
mov
js
pop
movsl
xchg
adc
xchg
popa
pop
negl
jmp
mov
jl
adc
inc
xor
scas
xor
sbb
aas
add
dec
sub
dec
insl
dec
or
nop
cmp
xchg
movsb
pop
mov
enter
xor
loopne
cmp
das
sbb
add
xor
push
add
dec
push
push
and
jecxz
ja
push
ja
stos
add
iret
sti
and
mov
js
inc
xor
test
mov
add
mov
jns
cmp
jb
add
pop
bound
pop
inc
repnz
setb
pusha
pop
inc
dec
jne
mov
imul
cmovb
sti
sbb
outsb
fbstp
push
push
push
inc
xor
sub
inc
and
add
xlat
ss
sub
ja
sbb
adc
into
icebp
push
ret
xchg
mov
xor
mov
mov
jne
shrb
xchg
xorl
fbstp
jp
mov
fbstp
add
fs
xchg
xor
pop
inc
in
or
or
aam
inc
cmp
mov
aaa
xor
cmp
andps
ja
adc
shll
fisttps
adc
adc
and
aas
stc
mov
pop
sti
mov
adc
insl
or
sub
pcmpeqw
clc
jmp
sbb
adc
or
sub
push
and
out
and
in
dec
inc
push
hlt
dec
mov
lods
inc
sub
xor
ds
sti
pop
or
cmp
enter
xor
clc
psrlw
sbb
xchg
push
sub
inc
js
or
loop
call
fs
lock
or
mov
pop
pushf
xchg
add
or
cld
sbb
pop
mov
pop
push
cmp
xor
adc
xchg
sbb
mov
dec
cltd
lds
push
rol
xlat
leave
inc
ror
push
jo
bound
sub
inc
xchg
push
and
pop
les
pop
test
push
xor
test
jno
and
lret
push
xchg
mov
test
add
lret
sub
pop
add
adc
mov
pop
xchg
xchg
jns
jne
sub
mov
push
and
jmp
ret
mov
inc
sbb
and
psrad
adc
out
push
cs
inc
xor
pop
sub
loop
add
data16
push
jb
or
jbe
mov
push
push
movsb
ja
addl
rolb
pusha
xchg
out
push
push
aas
or
or
popa
fwait
inc
or
outsb
mov
jnp
mov
xor
adcb
hlt
inc
in
xchg
clc
mov
fadd
push
jns
push
leave
inc
sub
jg
cmp
push
andl
sub
out
movb
shll
jmp
or
xchg
popf
aam
rcll
mov
push
lcall
or
xchg
mov
sbbb
shr
mov
add
push
mov
pusha
sbb
ljmp
fwait
lret
fdiv
inc
add
jns
dec
push
mov
inc
jne
sub
repz
jb
and
inc
jbe
test
popa
sbbb
jb
movsb
movsb
data16
inc
push
cmp
add
arpl
scas
and
adc
and
dec
sub
sbb
mov
add
ror
mov
pop
jmp
adc
or
mov
rcr
rorb
jle
stc
ret
popa
and
shr
loop
fadds
je
adc
xchg
lock
or
test
mov
test
inc
push
lea
mov
sub
mov
ja
pusha
sti
or
jne
test
or
fwait
rorb
xchg
rcrb
inc
rol
inc
sbb
nop
mov
cmp
hlt
popa
dec
or
mov
inc
inc
xchg
fwait
push
add
sbb
mov
inc
push
mov
aam
popa
sbb
sub
pop
cmp
adc
testl
or
sti
mov
std
scas
pushl
push
ret
popa
mov
bound
nop
dec
mov
push
bound
or
lcall
jo
ret
and
inc
leave
cld
sub
sub
sbb
out
jle
add
in
nop
pop
and
sahf
and
cmp
push
inc
cmp
scas
adc
mov
leave
ss
inc
sub
mov
dec
jnp
jbe
add
ljmp
sbb
fidivl
push
out
sub
add
lea
mov
leave
push
incb
jmp
and
sub
sbb
xchg
mov
sub
cmpsb
and
mov
dec
cmp
or
sub
pop
mov
fstl
xor
jae
adc
bound
cmp
jmp
inc
nop
push
scas
int
pop
add
mov
je
cmp
cmp
mov
xchg
cltd
add
adc
jge
adc
dec
and
mov
add
sub
mov
xchg
mov
jb
loope
pop
xor
inc
rorl
mov
cmp
jne
faddp
mov
add
mov
and
out
cmpsb
ja
jp
mov
jle
jle
mov
icebp
jmp
fadds
add
not
inc
fs
lcall
fadds
jl
test
pushl
addb
and
mov
cmp
mov
and
lods
and
jae
fsts
pop
push
dec
orb
movsb
pushf
cmc
dec
leave
test
dec
into
clc
cwtl
pop
and
lret
or
and
xorl
sbb
xchg
lcall
nop
aam
lods
inc
sub
nop
xchg
mov
mov
add
out
or
test
push
adc
sub
js
rclb
rcrb
imul
and
push
adc
inc
sub
rorb
call
jb
test
sub
test
inc
sbb
pop
and
and
fwait
cmp
in
lret
jecxz
clc
and
paddusw
jae
mov
adc
fcoml
pop
mov
scas
ds
adc
cmp
dec
push
popl
cmpb
hlt
subl
xor
sub
push
movsl
jns
leave
xor
jmp
sub
lods
and
das
jae
mov
insb
es
aas
jmp
out
aas
in
cmp
lock
out
scas
sbb
xor
outsl
and
sbb
lret
and
iret
cmp
or
sbb
ficoml
cltd
sub
adc
and
adcb
inc
sbb
stc
lcall
xor
out
push
shrb
jb
inc
xchg
cmp
add
push
je
js
and
ja
jmp
lea
sub
jb
inc
xchg
cmp
jbe
jmp
jb
ja
jo
jne
push
movsb
imull
sub
or
out
and
inc
mov
jmp
lods
and
lds
xchg
js
inc
test
adc
loop
ret
sub
cli
ja
in
jnp
push
push
repnz
or
int3
push
pop
in
xchg
arpl
ficoms
aaa
sub
add
cmp
outsl
clc
test
lods
fidivrs
add
push
ret
shr
leave
push
es
in
lar
in
adc
sbb
cmpsl
insb
xchg
js
xlat
adc
dec
mov
sbb
fcompl
mov
sub
xor
or
cwtl
adc
mov
adc
test
movsl
inc
and
hlt
icebp
xchg
sbb
shlb
popf
ljmp
jg
cld
and
push
or
scas
call
loope
sarl
repz
rolb
pop
sub
sar
adcl
punpcklbw
shll
add
divl
mov
xchg
ret
jg
sbb
cli
xor
cs
add
mov
xor
jbe
stos
loopne
int3
xor
shll
nop/reserved
mov
adcb
clc
sub
scas
sti
add
cmp
xor
repnz
imul
and
shrb
roll
sarb
int3
pushw
pop
xchg
orb
dec
out
xlat
jl
call
push
repz
lret
xor
xchg
enter
das
dec
push
sub
and
jge
mov
adc
adc
sbb
mov
add
add
dec
jae
jge
hlt
cmp
cmp
mov
pop
fsubs
sbb
adc
push
pop
lods
add
mov
outsl
mov
pusha
and
inc
add
sbb
in
push
fs
adc
bound
push
imul
push
cmpsb
out
dec
add
xorb
bound
popa
add
xchg
mov
jb
jb
mov
push
daa
mov
es
add
jo
inc
sahf
mov
bound
jbe
enter
aas
nop
mov
je
adc
jp
sahf
incb
push
andl
mov
ja
movl
mov
or
pop
arpl
xlat
sbb
sub
push
add
cmp
arpl
jle,pn
rolb
test
push
mov
cmp
mov
cli
push
cmpb
xor
sub
pop
xchg
lret
cwtl
insb
xchg
xchg
insl
in
pusha
pushf
cltd
adc
mov
xchg
xchg
lret
movsb
or
dec
adc
cmp
lret
leave
in
and
and
lret
xchg
sub
sub
int3
gs
outsb
xchg
mov
pop
rcl
sbb
xor
fmuls
sti
fcoml
loopne
in
xchg
dec
sub
dec
gs
lret
lock
hlt
mov
jle
cld
addr16
xor
jb
in
cld
and
add
jb
mov
or
and
jb
in
adc
adc
pop
daa
mov
cld
dec
in
fstpl
sbb
and
cltd
movsb
xor
sub
es
lods
xor
popl
lea
push
or
inc
cmpsb
pop
xlat
mov
sub
cmpsb
shll
inc
lret
in
sbb
and
mov
add
inc
xchg
dec
xchg
pop
fistl
adc
add
mov
and
imul
and
cs
ja
insl
inc
jmp
jmp
in
mov
fadds
iret
pop
lock
ret
out
cmp
addb
jb
add
adc
add
syscall
pop
dec
sub
insb
pop
add
nop
sub
daa
mov
das
jne
pusha
adc
lcall
lret
or
pop
pop
add
push
outsl
aaa
fcomps
jo
addr16
xor
cs
aas
push
pop
add
popa
xor
dec
lahf
aaa
pop
scas
inc
outsb
ret
cmp
mov
aas
or
jb
aad
mov
out
out
aaa
and
insl
ret
jnp
mov
les
fsts
mov
in
mulb
cld
xchg
ss
std
daa
inc
sarb
insl
pusha
arpl
fisttpll
adc
cmp
dec
jns
add
sub
leave
in
mov
aam
mov
cmpxchg
fsub
fdivs
mov
out
xchg
and
and
cld
fucompp
popf
insb
ja
add
cs
outsb
outsb
push
cmpsl
in
add
mov
pop
xlat
xchg
push
daa
push
imul
aas
adc
xor
push
test
decb
or
cmp
pop
inc
jb
out
sub
sub
inc
add
lods
fsubl
xchg
inc
jno
in
mov
fadds
adc
fnsave
inc
inc
call
or
nop
dec
dec
movsl
pop
je
inc
mov
leave
jne
jo
xor
andb
xor
xor
enter
in
sahf
gs
sub
fwait
ds
movsbl
movsb
insb
push
popf
mov
cmp
sub
mov
movsb
mov
enter
movsb
aad
jb
cli
dec
fldt
push
daa
and
mov
add
jg
xchg
ret
add
flds
clc
cwtl
fsubl
mov
subb
iret
dec
push
push
dec
scas
call
push
xlat
out
or
sub
dec
negb
sub
in
add
in
dec
cmp
mov
xor
sub
push
xchg
and
mov
fdivs
adc
sbb
mov
popf
and
cmp
or
in
popa
or
dec
mov
daa
push
or
test
add
mov
or
and
pusha
inc
nop
test
outsb
xchg
or
fidivrl
add
fdivs
lahf
ss
ja
lahf
in
jecxz
dec
pop
aad
xor
mov
inc
jbe
push
dec
ffreep
add
ret
aad
sub
cmp
add
xlat
mov
imul
or
sub
ljmp
add
call
imul
or
add
mov
into
add
inc
sub
stos
sbb
cmp
or
enter
add
inc
ret
pop
inc
adc
mov
sbb
clc
jo
xchg
adc
sbb
cmp
sbb
push
syscall
jne
mov
push
ja
push
dec
adc
push
ret
add
add
adc
je
pop
mov
pop
rcrl
add
xchg
ds
outsb
ret
jo
scas
xchg
dec
jmp
jg
push
nop
jno
fistpl
fwait
and
sbb
rcll
pop
xor
or
xchg
fstpt
and
pop
out
fwait
mov
idiv
dec
mov
xchg
or
jecxz
sub
add
nop
xchg
adc
lret
push
push
cs
stos
pop
or
mov
and
pop
xchg
push
add
adc
dec
or
adc
inc
pop
push
cs
xchg
movsl
or
xchg
xchg
lods
push
push
sub
orb
xchg
lret
inc
leave
add
or
mov
loop
movzwl
lods
pop
add
or
or
adc
xchg
lret
adc
xchg
orb
mov
pop
inc
mov
mov
addr16
pop
jg
push
or
sbb
rorb
inc
gs
or
dec
sbb
xchg
cld
cld
daa
mov
cmp
pusha
mov
or
xchg
enter
push
xchg
ljmp
rcrb
ffreep
add
jp
js
mov
inc
mov
mov
or
jle
in
xchg
adc
adcl
stc
pop
ds
adc
pop
and
push
sub
xchg
sub
mov
mov
fwait
or
pop
js
in
jno
cmp
ret
xor
lea
push
pop
mov
xor
push
out
std
sar
out
push
xchg
xchg
push
ret
push
push
inc
pop
loop
mov
hlt
mov
or
mov
adc
and
and
hlt
sbb
stos
jmp
daa
and
insb
addr16
sbb
mov
add
arpl
adc
adc
dec
outsl
xchg
sbb
sub
sub
xlat
clc
sub
adc
sub
leave
add
xchg
rcrl
mov
rolb
stos
jnp
adc
decl
sti
bound
or
adc
mov
add
adcb
inc
cmp
add
lods
dec
sub
sub
nop
xlat
into
and
mov
fnstcw
pop
mov
push
mov
test
sahf
inc
push
fstps
adc
jle
or
sahf
int
xorb
imul
das
hlt
adc
pop
push
cmp
aam
loop
cmp
ret
nop
inc
test
add
adc
shl
add
pop
fimull
push
add
mov
mov
pop
iret
and
ja
and
repz
leave
rcll
sbb
enter
add
lds
mov
or
movsl
data16
jmp
xor
js
adc
xchg
adc
hlt
bound
int
push
add
dec
adc
xor
push
inc
add
pop
movl
test
or
push
cmpl
xor
add
sahf
mov
adc
mov
jne
jle
ss
and
adc
pop
xor
inc
lea
mov
movzbl
mov
ret
mov
mov
jne
add
xchg
pushf
dec
dec
sbb
das
push
xchg
xor
mov
push
adc
mov
leave
sti
out
adcb
leave
andb
xor
dec
xchg
sbb
es
xchg
and
mov
adc
dec
sub
movsl
cmp
push
push
into
lret
shlb
and
add
sbb
mov
pop
jbe
mov
jl
mov
or
arpl
jle
mull
and
cmp
enter
add
dec
jne
mov
out
pop
mov
es
adc
in
and
adc
les
imul
or
push
cmp
and
ret
inc
das
mov
push
out
pop
jl
cltd
mov
jb
push
add
sub
movb
cmpl
inc
cmp
scas
clc
sub
xor
repz
notl
sbb
pop
dec
inc
data16
xlat
and
or
fdivs
push
sbb
imul
dec
push
inc
or
ret
test
xor
push
xchg
add
inc
cmp
add
insb
lock
mov
rcrl
xchg
add
adc
sbb
cmp
or
test
dec
icebp
imul
sarb
push
das
inc
inc
adc
pop
xchg
mov
pop
lock
aad
test
fistpl
loopne
imul
mov
icebp
ret
and
lock
jmp
jo
sub
xor
fldl
data16
push
add
xor
xor
cmc
cs
xor
push
inc
lret
aam
adc
sbb
cltd
jbe
jne
xorl
es
sbb
xor
or
jno
inc
pushf
push
xchg
add
cs
jg
mov
cwtl
pushf
push
inc
dec
mov
add
mov
and
push
pushf
push
test
mov
and
arpl
and
bound
push
or
sbb
or
mov
lea
inc
js
or
pop
addr16
or
rolb
or
mov
sbb
adc
jle
divl
les
outsb
push
mov
rcr
push
adc
mov
add
clc
inc
and
xor
jbe
or
add
mov
fistpl
xor
cwtl
in
jle
fimull
sub
push
mov
sub
dec
jae
insl
stos
sarb
jns
shll
add
adc
xor
hlt
push
test
inc
hlt
inc
add
sub
pop
push
or
enter
add
and
sbb
or
test
js
cltd
andb
and
aam
out
push
mov
add
adc
sub
adc
inc
xchg
cmpsb
sbb
sub
fs
sub
adc
or
mov
mov
pslld
cmp
ror
fwait
add
dec
mov
push
bound
mov
lock
es
mov
add
cmp
and
dec
cwtl
mov
fildl
out
mov
xchg
xchg
mov
xchg
xchg
xchg
cmpsb
cmpsl
test
xchg
xchg
xchg
xchg
stos
stos
lods
lods
xchg
xchg
xchg
xchg
scas
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
xchg
xchg
xchg
xchg
lcall
xchg
sahf
lahf
addb
addl
xchg
xchg
mov
xchg
xchg
mov
xchg
xchg
jb
je
xchg
xchg
xchg
xchg
jbe
js
xchg
xchg
xchg
xchg
jp
jl
xchg
xchg
xchg
xchg
jle
pusha
popa
xchg
xchg
xchg
xchg
bound
gs
xchg
xchg
xchg
addr16
xchg
xchg
xchg
push
insb
insl
xchg
xchg
xchg
xchg
outsb
outsl
push
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
push
pop
pop
add
xchg
pop
pop
mov
xor
cmp
iret
mov
xchg
lcall
stos
cltd
bndldx
push
inc
insb
es
shrb
fdivrs
adc
movsl
gs
pop
filds
inc
aas
inc
mov
inc
adc
insl
sub
adc
add
mov
adc
inc
add
xlat
fistpll
add
mov
cmp
lock
mov
sbb
add
mov
mov
mov
add
inc
mov
mov
jno
mov
sbb
mov
je
clc
sbbb
pop
das
push
inc
push
subl
and
add
pop
add
pop
push
mov
or
pop
daa
jb
and
out
ds
mov
adc
sub
mov
xchg
push
xchg
imul
ss
cmp
das
ljmp
nop
out
cmpsb
into
cmp
mov
pop
out
insb
enter
vpshlq
aas
jne
aaa
xor
testl
rcl
xor
iret
arpl
xor
shll
pop
jae
push
shlb
movq
adc
rcr
add
push
pop
pop
xchg
andl
xor
popa
push
mov
pop
shlb
add
out
mov
mov
es
ficoml
aas
push
lahf
into
fs
pop
or
push
sub
mov
or
xor
push
scas
adc
dec
add
sub
lods
pop
xchg
leave
rol
inc
pop
adc
push
xor
filds
add
xchg
fbld
jb
or
add
sbb
inc
add
dec
sti
xchg
nop
adcb
notl
sbb
dec
ficompl
push
inc
dec
ja
mov
jecxz
cmp
inc
out
nop
imul
inc
int
or
xor
mov
push
mov
lahf
dec
mov
insb
mov
aaa
andb
mov
adc
mov
mov
mov
aaa
sbb
out
ss
and
fidivs
push
xor
inc
mov
icebp
dec
add
ds
cmp
pop
es
shll
push
adcb
sarb
scas
loopne
cmp
dec
or
push
and
jb
xor
xor
inc
rol
jae
dec
pavgb
out
mov
xor
cmp
cmp
js
pushl
dec
cmp
push
or
sbb
inc
pop
inc
imul
mov
jae
test
imul
pop
das
or
xor
sub
rclb
dec
inc
negl
xchg
movsl
es
jnp
aas
outsb
xchg
mov
push
mov
dec
insb
aam
inc
or
sbb
xchg
or
loopne
push
dec
mov
cmpb
inc
dec
inc
lret
sub
xchg
cwtl
mov
adc
push
xor
outsb
and
sbb
dec
mov
cmpsb
mov
imul
aas
push
popa
aas
js
pop
mov
lea
shll
or
daa
outsb
iret
adc
push
add
ret
adc
push
addr16
adcb
sub
push
xor
mov
aas
xor
push
pop
aas
push
call
aaa
dec
scas
addb
mov
push
inc
push
stos
stos
push
loopne
ja
gs
push
shl
push
pop
aaa
out
mov
push
addb
push
jo
mov
out
push
shlb
push
sub
sub
insl
and
mov
fists
ss
xor
mov
mov
aam
repz
push
aas
cmp
ss
addr16
mov
mov
push
ss
xor
addb
pop
xor
dec
xor
stos
pop
ret
clc
pop
ljmp
cwtl
or
addb
lcall
sub
mov
daa
push
adc
mov
or
pop
xor
pop
in
push
or
jle
aaa
fists
push
addr16
dec
jb
iret
or
push
inc
pop
fadds
inc
add
jp
sub
idivl
xor
ss
add
mov
subl
mov
out
out
out
adc
mov
dec
loop
push
add
stos
mov
mov
push
sub
into
addr16
vucomisd
arpl
outsl
cmpsb
xor
fcomp
mov
stos
pop
scas
shrb
mov
mov
jb
divl
nop
xorl
orl
xchg
mov
stos
pop
iret
mov
mov
fcmovnu
aas
add
xchg
out
cs
adcb
and
rorl
aas
or
push
pop
add
adc
rorb
mov
aam
popa
dec
inc
xlat
out
push
jl
aam
xchg
jecxz
pop
inc
ret
or
shll
fiadds
out
xor
push
mov
mov
adc
push
addr16
adc
adc
insl
pop
xor
and
jg
push
dec
roll
sub
add
dec
xor
mov
xchg
hlt
nop
mov
ss
adc
addr16
mov
fidivrl
pop
mov
shll
pop
pop
lods
or
stos
adc
out
aaa
push
mov
int3
mov
pop
add
mov
mov
lods
pop
jle
xchg
inc
add
test
inc
and
xorl
dec
fisubrl
xlat
jecxz
inc
ja
arpl
add
pop
cs
push
cmp
push
dec
adc
adc
pop
mov
xchg
lahf
dec
inc
loop
lods
pop
or
addr16
jmp
pop
aaa
or
leave
adc
add
mov
pop
aas
mov
aaa
jae
notl
stos
les
xor
and
and
or
cmp
or
cs
cmp
ss
push
push
bound
aaa
inc
dec
mov
pop
xor
aaa
adc
xchg
sbbl
cwtl
mov
mov
adc
adc
add
push
jmp
or
fiadds
jle
fmull
cmp
dec
bound
aad
inc
xor
pop
or
push
pop
leave
inc
roll
xor
pop
jb
cmp
pop
mov
mull
fs
pop
test
mov
test
lods
fbstp
outsl
adc
clc
jne
jo
ja
fbld
mov
and
fildl
rcrl
pop
mov
push
inc
pop
ja
test
xchg
mov
sbbb
xor
xchg
arpl
push
dec
xor
ss
pop
dec
insl
test
or
rdmsr
xor
loop
inc
roll
xchg
movsb
sub
pusha
gs
xchg
sub
mov
aaa
ret
xlat
or
inc
or
in
inc
lahf
fadds
mov
jbe
xlat
jb
mov
push
outsb
mov
push
push
jg
shrd
push
testl
scas
decl
scas
rolb
inc
pop
pop
aaa
insb
nop
sub
jle
xor
iret
mov
aaa
add
lock
orb
jmp
add
movsb
sbb
aas
add
xor
push
jb
xor
lods
or
xlat
add
jbe
mov
push
mov
fmull
mov
lahf
fistpll
aas
add
lcall
adc
xor
iret
scas
xchg
mov
dec
mov
in
mov
or
inc
xor
xor
add
or
mov
call
xor
scas
lret
or
adc
shlb
jno
mov
inc
insl
pop
mov
pushl
cmp
movsb
data16
iret
adc
sahf
es
dec
xor
push
jo
add
out
test
sub
pop
add
scas
pusha
inc
push
push
popa
test
sbb
scas
ss
cmpsb
ret
scas
filds
fs
adc
mov
and
or
pop
add
pop
and
adc
jb
test
daa
mov
into
lea
loop
sti
xor
mov
add
add
imul
push
movsb
push
dec
outsl
dec
xchg
test
test
mov
inc
lahf
inc
pop
mov
aas
inc
pop
or
pop
mov
lods
lahf
dec
pop
insl
jo
nop
aas
push
add
cmpb
cmp
mov
in
cmp
aaa
mov
aaa
dec
icebp
add
cmpsb
inc
dec
insb
rcll
add
mov
cmp
push
sbb
xor
lahf
xor
xor
and
stos
outsb
imul
push
mov
adc
mov
push
add
push
push
stos
out
nop
stos
cmpsb
mov
out
xchg
or
or
xchg
out
xor
add
out
out
dec
pop
and
inc
sbb
cmpsl
jg
add
pop
aas
scas
push
outsb
bound
jp
out
outsw
mov
ja
aaa
xor
sub
outsl
dec
push
mov
add
roll
cmp
ffree
fisttps
jb
or
lcall
addl
adc
xchg
sub
jecxz
push
aaa
inc
aaa
cmpsb
sbb
outsl
mov
or
stos
push
fbstp
cli
fbstp
out
sti
sbb
iret
add
lds
clc
and
bound
test
iret
pop
push
pop
bound
jae
cs
sbb
push
adc
xchg
test
cwtl
lea
gs
push
je
push
das
aaa
stos
xor
dec
scas
pop
and
cmp
inc
mov
cmp
xor
xor
xchg
dec
or
arpl
movl
lahf
iret
aas
sbb
pop
inc
push
sbb
add
push
jg
mov
sub
jecxz
cmp
aaa
adc
outsl
add
jne
mov
inc
es
xor
push
push
addr16
pop
lds
xlat
or
inc
mov
xor
xor
jmp
inc
inc
jecxz
mov
push
mov
sbb
cmpsb
out
cmp
flds
push
pop
mov
mov
dec
xor
inc
push
sub
add
xchg
mov
aaa
add
popa
xchg
shll
dec
jecxz
das
mov
imul
pop
das
add
fwait
inc
xchg
mov
or
or
push
sbb
push
bound
mov
jno
shrb
adc
fisttps
out
mov
mov
pop
jo
add
outsb
inc
subb
loope
dec
popl
aaa
iret
testb
iret
orl
fcmovu
jae
out
jmp
xchg
adc
notl
fdivs
aaa
xor
test
pop
dec
outsl
test
ljmp
mov
pop
dec
pop
xchg
jp
push
inc
sub
push
sbb
dec
addr16
mov
pop
sub
mov
xor
das
mov
rol
inc
sub
cmpsb
cmpsl
dec
repz
adc
rcrl
xor
outsb
pop
and
cmp
ficoms
mov
dec
sub
add
rol
sub
arpl
push
es
pop
or
jne
test
jb
mov
ss
pop
push
scas
outsl
or
mov
dec
sub
aas
pop
dec
outsl
add
dec
xor
xor
push
adc
lods
fimull
mov
repnz
add
dec
ja
je
mov
popl
sub
out
fwait
sub
inc
ss
bound
xor
push
das
cmp
in
out
cmp
xor
jnp
outsl
cmpsl
mov
xor
notl
in
out
xor
cmp
xor
or
jae
xor
aaa
or
rorb
stos
sub
loopne
out
aaa
cmpsb
and
mov
add
stos
dec
adcb
es
sbb
xlat
mov
mov
jbe
stos
punpckhwd
push
mov
jbe
divl
push
or
inc
inc
add
in
lods
jnp
xor
xchg
sbb
push
xor
or
das
push
adc
xor
push
push
notl
push
dec
aaa
outsl
and
sbb
xor
push
adcl
nop
sub
pushl
into
inc
add
xchg
mov
shl
pop
loope
or
divl
add
enter
bound
lds
fistpll
mov
das
push
xor
mov
mov
and
divl
loopne
or
shrb
aas
daa
hlt
mov
iret
fs
inc
das
addr16
pop
pop
mov
ja
add
stos
xor
push
xor
dec
push
jo
daa
aaa
xchg
ss
mov
pop
pcmpeqd
fdivl
inc
jae
arpl
add
insl
push
daa
adc
stos
dec
or
or
inc
inc
imul
insb
divl
xor
cmpsb
xchg
cmpsl
xchg
xchg
and
mov
xor
insl
push
sub
and
mov
xor
mov
xchg
iret
xchg
sbb
push
aaa
aaa
shl
enter
pop
leave
adc
ss
mov
mov
xchg
iret
xor
arpl
lods
xorb
leave
adc
xor
mov
loopne
aas
adc
pop
dec
stos
andl
push
xor
bound
lea
or
push
nop
xorl
es
xor
ss
push
xchg
ss
in
or
and
add
push
jb
pop
cmp
cmp
and
pusha
jmp
das
inc
test
aaa
out
xor
dec
cmpsb
adc
cmovb
cmp
daa
adc
test
xor
dec
xor
loopne
adc
out
mov
jo
divl
cmp
push
pop
inc
xor
cmp
mov
push
push
or
xor
loopne
mov
xchg
mov
mov
fwait
push
or
mov
pop
sbb
xor
xor
je
pusha
pop
mov
rorb
adc
dec
scas
mov
pop
testl
divb
lahf
and
mov
mov
sbb
mov
iret
packsswb
jbe
dec
pop
push
cmpsl
rclb
push
aaa
mov
inc
pop
inc
pop
push
lahf
push
rclb
testb
push
lahf
push
dec
add
push
in
push
lahf
out
pop
adc
cmpsl
out
add
inc
inc
mov
lahf
das
push
subb
inc
or
or
aam
pop
lods
pop
xchg
sub
push
into
xchg
xchg
sub
push
mov
add
inc
outsb
inc
ljmp
inc
push
add
ret
push
das
push
shlb
inc
xchg
push
inc
mov
dec
lret
push
or
jmp
movb
or
xor
movsb
outsb
push
dec
mov
lods
inc
loopne
dec
das
mull
and
add
add
iret
fst
push
ja
push
ficompl
aad
xchg
adc
push
fbld
ss
rorb
outsl
add
dec
adc
xor
push
in
cmpl
push
inc
inc
sbb
add
pop
out
rolb
inc
mov
sbb
mov
outsl
aas
outsl
push
lock
dec
aas
inc
mov
add
cmp
sub
adc
pusha
add
daa
push
add
daa
shll
daa
test
add
mov
sub
xor
xor
xchg
pop
push
jl
xor
xor
and
or
mov
or
cmpsl
addr16
and
xor
pop
add
nop
or
pop
jb
xor
and
xor
aad
or
daa
cmp
sbb
daa
xor
xor
add
daa
xor
mov
pop
add
and
aaa
and
dec
scas
aaa
aaa
jno
bnd
leave
inc
jb
lahf
cmp
add
jb
outsb
ret
add
andb
addl
pop
adc
dec
popl
cmp
icebp
rolb
hlt
orb
addr16
dec
add
push
ss
aas
mov
or
dec
push
aaa
into
aam
test
push
ss
les
outsl
aas
scas
lds
or
cmpsl
or
push
jo
andb
pop
sub
dec
ret
mov
inc
xor
outsl
aaa
or
jno
xchg
ss
xor
push
adc
insb
xchg
iret
and
push
les
pop
xor
test
and
add
les
mov
sub
inc
dec
out
jg
bound
push
rorl
mov
shll
adc
test
sbb
pushf
mov
xor
mov
inc
pusha
popf
ja
insb
cmpsl
scas
test
pop
push
and
add
mov
mov
xchg
jp
cmp
iret
push
out
les
scas
push
add
push
shr
das
addr16
push
add
ja
inc
fbstp
mov
mov
fwait
push
imul
xchg
mov
add
fdivs
sub
das
scas
push
pop
cmp
inc
mov
push
imul
ficompl
negl
data16
push
jmp
sub
adc
test
push
xchg
imul
fdivs
aaa
test
addb
pop
mov
and
popl
das
pop
dec
call
pop
mov
incl
jbe
call
jnp
test
push
pusha
jne
inc
add
test
cwtl
fisttps
bound
adc
mov
lock
push
push
adc
or
push
test
ja
pop
or
add
stos
lods
bound
cmpsl
dec
mov
dec
mov
inc
das
out
andb
dec
ret
out
les
mov
enter
dec
imul
pop
es
imul
push
or
push
scas
jne
xorl
fildll
dec
vmovss
pop
filds
and
xchg
imul
push
or
mov
ja
cwtl
jne
jmp
dec
in
add
out
add
popl
add
xor
xor
mov
cmp
das
or
test
daa
adc
stos
mov
push
ja
stos
pop
adcb
addr16
dec
fidivrl
cmp
mov
sbbl
orl
mov
cmp
aas
xor
mov
add
aaa
inc
xor
push
inc
scas
push
jae
cmp
jbe
stos
or
rorl
out
arpl
imul
xorb
push
push
rol
and
pop
imul
stos
pop
insl
inc
mov
jo
adc
cmpsb
lods
push
sbb
push
sbb
and
sbbb
inc
jae
and
pop
and
inc
and
xchg
xor
insb
lahf
push
sbb
mov
ds
push
push
das
push
jns
fisubrl
aam
add
sbb
outsb
mov
mov
data16
repnz
and
sbb
jb
jbe
pop
rcr
push
and
mov
ret
adc
scas
sbb
push
nop
adc
popa
shll
iret
pop
dec
test
jb
popa
push
mov
outsl
xlat
add
adc
inc
divl
stos
test
pop
mov
xchg
and
add
jns
into
mov
nop
adc
cs
stos
incl
inc
stos
ljmp
dec
mov
xor
lea
sbb
popf
addl
push
das
sbb
adc
xor
and
pop
arpl
inc
cmpsb
and
jmp
les
lcall
stos
jecxz
push
xor
andb
push
pop
or
push
or
dec
aas
imul
lcall
adc
out
xlat
pop
jecxz
mov
syscall
std
pop
or
out
and
aaa
pop
pop
pop
push
inc
insl
mov
enter
iret
addr16
js
add
push
push
inc
add
push
sbb
lahf
xor
xor
jb
or
lds
push
mov
xor
shlb
daa
pop
ja
push
test
cmp
pop
push
inc
cmp
je
push
inc
sub
lahf
xor
mov
aas
mov
push
and
mov
rcll
or
xchg
rorb
xor
into
sbb
ljmp
push
inc
divl
or
add
push
cmp
xor
bound
jno
xor
pop
add
test
sbb
mov
filds
or
cs
rcll
dec
sub
sbb
adc
dec
pusha
mov
jp
or
arpl
cmp
xor
mov
push
xor
pop
lahf
inc
mov
iret
inc
bound
jb
filds
ret
push
sbb
aas
push
add
push
cmpsb
inc
sub
and
aam
xchg
jg
fnstenv
push
mwait
adc
xor
add
enter
xor
xor
cmp
or
cmc
dec
faddl
inc
mov
das
push
scas
inc
jae
cmp
sub
iret
ja
sub
mov
jnp
fcomip
les
push
adc
pop
cmp
adc
push
dec
or
push
jae
cmpsl
xor
lcall
push
cmpsl
iret
ja
imul
or
movsb
lods
pop
mov
orl
push
xor
rorl
in
dec
jmp
dec
dec
xor
xor
pop
addr16
jle
aaa
inc
fsubp
lahf
bound
inc
jmp
imul
dec
das
cmp
pop
je
sub
or
inc
invd
xchg
orl
lods
lea
adc
arpl
sbb
or
push
mov
lret
sbb
iret
imul
roll
dec
dec
dec
mov
jo
or
sbb
fisttps
ss
xchg
enter
and
ret
add
repz
mov
adc
shll
test
outsl
inc
adc
dec
dec
pop
xor
pop
push
or
aas
add
lods
mov
mov
aaa
aad
aaa
push
xchg
sub
mov
stos
push
push
ror
xchg
push
ja
lods
dec
jecxz
pop
insl
mov
add
xor
iret
andl
lods
pop
jae
test
icebp
mov
xlat
mov
insb
test
pop
inc
cmp
push
sbb
or
or
dec
dec
mov
or
xchg
jecxz
mov
repnz
sub
or
sbb
das
push
add
xchg
jno
sub
mov
scas
dec
xor
pop
and
xor
and
and
xor
and
and
ss
loopne
and
daa
push
loope
dec
mov
or
mov
insb
ret
ja
insl
xor
shll
jbe
in
mov
idivb
jecxz
fstp
je
mov
imul
cmp
xorb
ljmp
sbbl
xlat
fisubs
push
add
mov
xchg
sub
jbe
adc
dec
cmpsl
inc
test
popw
shrb
push
mov
sub
or
in
push
jecxz
and
out
adcl
sbb
rclb
in
popa
or
bound
add
adc
test
dec
test
mov
dec
adc
xchg
sbb
and
popa
push
xchg
sysret
icebp
pushw
imul
arpl
mov
mov
prefetcht0
test
xor
add
out
lock
pop
nop
xchg
test
mov
cltd
repz
push
mov
cs
lea
xor
inc
ljmp
nop
cmpsl
mov
push
inc
sahf
add
adc
pop
jnp
les
add
andb
add
or
enter
test
aas
out
cs
aas
adc
addr16
idivb
cmp
add
xor
mov
pusha
data16
add
jmp
sbb
adc
pusha
xchg
movsb
jmp
push
xchg
xchg
add
enter
push
insl
bnd
jne
add
dec
pop
add
pop
dec
sbb
inc
shrl
or
xor
je
add
stos
es
je
clc
pop
pop
insl
inc
or
dec
adc
mov
adc
mov
inc
mov
in
mov
inc
push
push
push
push
inc
inc
movsb
add
jg
inc
xchg
push
or
pop
arpl
lcall
add
inc
push
pop
push
test
add
test
lcall
pop
lcall
and
add
adc
push
add
adc
shll
mov
fs
insb
adc
cmp
jmp
push
test
mov
mov
aaa
xlat
jne
xor
push
push
clc
jb
out
jge
cmp
call
outsl
xor
dec
mov
add
insl
loopne
jmp
push
cli
adc
push
ret
fisubs
or
lea
jle
xorb
orl
push
sub
mov
data16
inc
sbb
cmpsb
testl
push
jo
add
sbb
andb
and
jnp
push
add
inc
test
js
mov
dec
push
jns
mov
repnz
mov
mov
inc
inc
adc
je
mov
adcb
stos
rcr
xchg
ret
jmp
mov
dec
js
outsl
push
clc
sbb
rcrb
ja
push
xor
test
mov
es
movsb
cmc
push
imul
jae
push
inc
es
mov
inc
mov
mov
adc
or
jge
mov
int3
into
xchg
movsb
xor
mov
or
adc
fcmove
or
jge
add
jns
repnz
dec
imulb
push
push
sbb
mov
dec
push
orl
xchg
les
jmp
scas
sbb
pushf
or
jne
cld
adc
dec
xor
push
insw
add
pop
or
dec
dec
daa
js
cmp
lock
orb
addb
shll
add
jg
add
inc
xlat
in
jb
ret
or
dec
sbb
xchg
imul
nop
add
scas
cmc
mov
mov
shlb
das
lcall
sbb
dec
dec
dec
xor
mov
mov
call
add
popa
pop
or
cmp
dec
pop
es
add
or
mov
cmp
add
orl
fs
and
inc
mov
sub
orl
daa
or
xchg
or
imul
add
bound
jb
popa
pop
sub
mov
pop
es
mov
lcall
cmovo
mov
push
lods
mov
in
add
lahf
add
add
daa
inc
mov
sub
jb
mov
daa
dec
shlb
inc
inc
inc
dec
enter
mov
ret
daa
outsl
nop
inc
or
sti
arpl
pop
mov
add
add
dec
add
daa
cmp
inc
xor
pusha
mov
loopne
or
ret
test
pop
jne
aaa
xchg
add
add
or
lcall
dec
jl
mov
ja
or
cmpsb
mov
or
sbb
jns
aaa
xchg
mov
dec
orb
adc
pop
lcall
push
cwtl
mov
aaa
mov
pop
add
add
mov
xor
lcall
das
cmp
adc
inc
push
mov
sub
push
push
cmp
pop
leave
add
xchg
add
sub
inc
lcall
pop
movsl
push
and
sarb
ret
insb
cmp
jb
psrld
xchg
add
jno
pusha
mov
subps
daa
xchg
mov
jb
in
fnstcw
add
xchg
lcall
and
mov
pop
outsb
dec
pop
cmp
rol
fucomip
mov
add
add
cmp
jns
add
fs
adc
lock
sbb
out
mov
pop
cmp
lock
sti
popa
pop
stc
mov
sbb
push
pop
lcall
mov
inc
add
xlat
pop
inc
pop
or
rol
and
and
dec
addb
sbbb
ja
inc
push
cmp
rorb
jb
outsb
push
push
shrl
nop
push
leave
sub
sub
and
in
jo
adc
inc
add
add
and
inc
ret
add
ret
jmp
xlat
je
push
xor
inc
adc
addr16
jbe
sbb
loope
cmp
add
dec
orb
adc
pop
lcall
adcb
js
xor
inc
leave
inc
ret
sbb
lock
addw
add
pop
les
add
dec
dec
inc
lcall
sbb
scas
ret
adc
mov
add
daa
cwtl
cmpsl
jne
xchg
add
or
fs
xchg
lds
cmpb
cmp
cmpsl
xchg
cmpsl
jb
in
mov
mov
cltd
add
add
in
test
adc
aaa
adc
nop
inc
or
lods
pusha
mov
enter
aas
push
mov
mov
add
inc
mov
jae
enter
addb
dec
dec
pop
add
inc
lcall
mov
jno
repnz
enter
cmpb
pop
je
outsb
push
sbbb
cld
leave
add
push
mov
nop
and
fs
nop
in
or
add
daa
enter
icebp
lret
jb
in
adc
adc
and
add
clc
lret
jge
inc
and
add
ret
orl
or
aas
or
add
sub
dec
aas
add
mov
lcall
cwtl
adc
mov
or
das
negl
loope
and
add
dec
orb
adc
lcall
pushf
sub
push
xor
xchg
aaa
das
cmp
inc
pop
into
pop
add
add
test
mov
dec
inc
and
or
pop
stos
jbe
jo
add
or
jb
in
iret
js
add
movsb
add
iret
add
cmp
shlb
xor
in
rorb
cltd
or
lcall
test
rolb
mull
mov
jne
stos
and
xchg
xchg
shll
in
mov
mov
cltd
add
add
inc
push
lods
cwtl
roll
jae
in
enter
enter
pop
add
or
aaa
mov
and
shlb
ja
mov
adc
cmp
repnz
rcr
roll
or
add
cmp
mov
nop
pop
push
mov
sarl
adc
or
dec
sbbb
aam
aam
and
cmp
xchg
add
push
cltd
add
je
insb
dec
add
daa
sbb
in
add
pusha
or
add
or
dec
enter
adc
lret
fcmovnbe
rolb
imul
das
fs
cmp
xlat
add
xlat
or
in
rol
scas
adcl
dec
xor
sub
daa
inc
push
addb
or
and
and
lods
adcl
cs
ss
sbb
cmp
aas
popa
flds
orb
add
lcall
enter
inc
imul
movsb
daa
jnp,pt
das
push
inc
add
nop
dec
popf
fidivl
pop
add
mov
add
lcall
int3
movsb
fidivrl
aad
or
fldt
ja
xor
mov
push
out
fmuls
add
add
ja
fstpl
sub
jb
fisttpll
dec
shlb
ja
nop
adc
aam
fldl
nop
mov
push
shlb
push
fidivrs
fiadds
andl
sbb
jg
adc
mov
pop
fiadds
adc
fisttps
pusha
cmp
fists
and
mov
mov
lret
add
add
and
and
fdivrl
enter
fistps
add
push
shl
loopne
fsub
sub
andl
add
and
add
and
out
xor
jno
je
and
inc
dec
in
loope
loop
add
dec
dec
lcall
and
orl
stos
ljmp
pop
or
repnz
sub
sub
and
jb
call
jns
jecxz
jp
xor
pop
add
ret
jae
sbb
inc
aaa
xor
add
inc
add
shlb
movl
in
cmp
xchg
adcl
popf
pop
ja
in
inc
pop
and
push
inc
pop
and
cmp
inc
cld
dec
in
mov
sbb
je
inc
mov
sub
inc
jne
xchg
out
sub
xchg
out
out
and
add
sbb
shrl
pop
imul
add
pop
add
mov
xor
add
rcrb
out
inc
adcl
cwtl
mov
and
or
pusha
or
lcall
fcomip
sub
xor
jo
adc
test
add
popa
inc
push
shr
sbbb
dec
es
push
lock
in
fsubr
add
ljmp
dec
push
xor
addl
and
add
in
push
movaps
pop
dec
in
cmp
jb
dec
in
dec
in
nop
and
dec
test
dec
and
dec
out
js
mov
xchg
imul
in
or
add
add
js
js
jb
mov
pusha
in
mov
divl
dec
fs
and
inc
dec
sub
nop
adc
sbb
add
sbb
cltd
or
mov
push
add
add
out
enter
sbbb
dec
and
mov
adc
adc
lock
adc
add
lock
and
lock
and
xor
lock
test
std
icebp
push
repnz
sbb
sbb
add
repnz
push
pusha
and
xor
repnz
inc
mov
sub
sub
insb
pop
loope
pop
dec
xchg
jb
ja
repz
repz
add
dec
es
lcall
cmp
repz
bound
out
sbb
adc
inc
mov
enter
dec
add
inc
cmp
inc
xor
hlt
test
cltd
or
dec
nop
pop
or
and
outsb
cmc
mov
enter
dec
add
das
nop
arpl
pop
movzwl
pop
imul
pushf
jne
das
in
jb
jae
idivb
add
mov
sbbb
negb
lcall
adc
pop
pop
movsb
dec
push
xchg
mulb
pop
adc
imul
in
imul
testl
stos
loope
insb
push
insb
sbbb
push
jno
or
sbbb
dec
fwait
popw
sbbb
in
add
and
inc
dec
add
add
adc
adc
xchg
clc
dec
push
stc
sbb
enter
sbb
sbb
test
nop
nop
pusha
ret
and
cli
das
sub
dec
adc
and
cmpb
cmpb
cmp
and
sbb
adc
or
leave
stos
dec
xor
push
leave
add
cld
add
add
ret
inc
enter
pop
inc
stos
mov
dec
xchg
pop
and
scas
xchg
std
and
xchg
std
and
pop
pushf
pushf
push
std
or
xchg
inc
jnp
add
add
mov
test
rolb
pop
dec
addr16
jge
jge
add
push
inc
and
add
loopne
jmp
fdivr
in
enter
fdivr
nop
mov
or
push
and
das
add
test
pop
stos
sarb
in
add
lods
lods
inc
lret
adc
decl
stos
pop
adc
or
inc
sub
jb
sub
dec
shlb
inc
lcall
daa
mov
inc
leave
mov
add
add
or
add
prefetcht2
add
shlb
add
pusha
add
or
ret
adc
mov
and
xchg
fistps
or
and
pop
inc
add
pop
add
add
dec
add
xor
lcall
jge
mov
add
add
adc
nop
pop
or
imul
xor
addl
enter
add
push
xchg
push
pusha
or
add
or
dec
lcall
int3
cwtl
push
add
pusha
mov
enter
dec
xor
addl
adc
inc
dec
mov
nop
imul
andl
add
jg
or
jg
jg
add
add
jg
in
mov
inc
bound
and
outsl
loop
xlat
imul
nop
adc
or
add
adc
add
inc
dec
enter
add
daa
nop
push
pop
or
or
add
or
nop
and
or
inc
addb
or
mov
add
daa
inc
mov
mov
nop
or
cmpsl
loope
addr16
or
aad
stos
adc
push
inc
add
or
in
dec
xor
addl
enter
or
push
stc
push
pusha
or
add
or
addr16
fadds
lgdtl
pusha
mov
enter
xor
addl
inc
adc
push
sub
lods
fstpt
dec
or
and
inc
xchg
pusha
adc
xchg
pop
outsb
add
adc
sub
jb
adc
dec
shlb
addr16
dec
enter
adc
xchg
pusha
or
add
or
addr16
js
adc
pop
push
push
lds
pop
add
add
adc
ret
jp
xor
cmpb
push
sbbb
dec
mov
adc
dec
mov
and
inc
dec
stc
adc
adc
sbb
enter
inc
cmpsb
or
add
pushf
sub
add
push
nop
or
mov
jb
xor
push
pop
adc
pop
inc
je
pop
push
add
addr16
jl
jne
repnz
pop
adc
loope
adc
sbb
sbb
inc
mov
dec
xor
push
inc
lcall
jle
sbb
pushf
sbb
adcb
cli
in
adc
sub
jb
enter
popa
add
pop
lcall
pusha
mov
inc
or
or
mov
sbb
push
or
inc
add
daa
sbb
sbb
shlb
sbb
add
or
or
fcompl
add
add
push
add
sub
jb
sbb
push
dec
shlb
push
push
push
and
sub
add
or
sbb
mov
enter
outsl
test
inc
or
push
xor
and
sbbb
orb
orb
pcmpgtb
cmp
push
and
pop
flds
and
and
incl
cltd
pop
xchg
add
add
add
lcall
inc
add
push
enter
add
in
and
and
sbb
outsl
lcall
inc
lock
or
add
add
sbb
adcb
and
sbb
add
pushl
jo
mov
and
sbb
and
pusha
or
add
or
inc
push
sub
add
test
jno
push
dec
sbbb
dec
outsl
adc
pop
add
jb
sub
and
add
mov
add
add
leave
add
mov
aas
dec
and
orl
xor
and
sbb
ret
add
pushf
mov
adc
enter
adc
mov
adc
dec
dec
or
jb
cld
es
sbb
cmp
push
dec
orb
adc
pop
lcall
push
inc
sub
cmpb
andl
or
mov
or
jns
push
inc
inc
nop
add
xchg
add
or
sub
sub
add
mov
push
sbbb
int
in
sub
push
dec
dec
inc
lcall
shl
xchg
adc
sub
sub
add
add
sub
or
lcall
loopne
sub
xchg
adc
pop
testl
add
jge
or
mov
nop
sbb
inc
popa
jb
sahf
mov
push
lret
push
push
cmp
dec
xchg
mov
sbb
dec
lahf
and
mov
xchg
xchg
imul
sbb
mov
push
inc
push
adc
call
or
sbb
bnd
sub
lret
js
push
stos
das
jo
or
lahf
mov
std
xchg
mov
xor
sub
sbb
in
xchg
push
cmp
sti
push
in
mov
add
mov
test
lock
adc
mov
jg
icebp
add
or
and
ja
bound
jb
sahf
cmpsl
scas
or
pop
mov
xor
jne
cltd
dec
hlt
lret
and
mov
xchg
test
and
clc
outsb
and
adc
mov
xor
cld
and
mov
cmpl
mov
xchg
and
add
movmskps
es
jns,pn
cmp
xlat
and
mov
cltd
inc
add
fstl
addr16
add
xor
jbe
sahf
xor
or
inc
pop
inc
pop
outsl
mov
movl
in
stc
cmp
inc
dec
mov
pusha
stc
push
ds
mov
je
dec
nop
mov
dec
in
push
lods
mov
enter
stc
push
ds
mov
jl
dec
in
mov
out
sbb
insb
sub
jl
lahf
je
sarl
jl
lret
jo
orb
jl
mov
mov
je
lret
clc
enter
cwtl
dec
in
stc
sub
pushf
inc
int3
mov
xchg
int
js
test
iret
mov
mov
call
push
sbb
lods
adc
push
cmp
mov
xchg
and
jbe
dec
jecxz
lahf
lret
adc
pushf
cmpsl
repnz
call
lahf
lret
enter
lods
fxch
test
test
or
inc
mov
pop
arpl
xchg
scas
bnd
les
xlat
xor
sbb
cld
test
in
in
push
ds
dec
add
out
shl
sub
push
stc
in
call
xchg
scas
jnp
and
mov
adc
sub
and
nop
push
sbb
jmp
sbb
ds
in
sbb
in
and
out
scas
shlb
mov
daa
jp
sub
dec
repnz
cmp
mov
sbb
inc
scas
repnz
enter
xchg
xchg
dec
andl
push
daa
ja
sbb
daa
adc
push
mov
adc
sbb
sbb
mov
sbb
lret
cld
shll
shl
cmp
push
je
je
js
adc
js
sbb
test
lret
adc
inc
adc
mov
nop
stc
pop
ds
pop
hlt
call
or
adc
xor
push
mov
push
sti
out
pusha
cs
ja
mov
les
lret
movsb
lods
std
test
cs
in
fldt
pop
xor
push
add
xor
push
mov
cmp
rcl
mov
pop
push
mov
sub
rclb
pop
add
enter
arpl
xor
add
movsb
or
dec
lret
push
stc
adc
or
mov
push
ds
xor
aad
rolb
lret
out
lea
mov
push
inc
mov
dec
add
or
cmc
not
and
incl
addb
or
add
std
inc
adc
sub
shrb
and
add
push
adc
pop
sbb
or
out
pop
adc
xor
pop
jmp
sbb
hlt
pop
pop
mov
cmp
sahf
addr16
xorl
or
mov
jns
out
mov
aam
sahf
out
call
mov
mov
pusha
jmp
in
testl
mov
aas
ja,pn
pop
ret
pop
daa
mov
stc
aaa
add
adc
mov
loope
fsubl
push
addl
test
and
imul
mov
sub
mov
cmpsb
add
jp
xor
into
or
push
or
and
xor
xor
cmp
inc
or
dec
ret
jg
push
rorb
pop
mov
adc
inc
adc
popf
into
cmp
or
fwait
clc
mov
cmp
adc
mov
das
cmp
xor
cmpsl
mov
data16
ljmp
sbb
inc
sbb
adc
loopne
dec
nop
cmp
and
push
cs
jnp
sub
add
test
and
inc
nop
adc
fstpl
pusha
pop
and
loop
push
mov
and
les
cmp
xor
xchg
jb
inc
xor
test
cmpsl
lea
cmpsl
or
add
lahf
test
lock
fwait
push
add
add
jae
and
xchg
fadds
jae
jne
mov
dec
mov
push
testb
dec
jo
inc
mov
aas
mov
insl
push
aas
pop
lock
ja
jne
daa
jne
pop
dec
adc
adc
pop
push
mov
or
adc
gs
push
jo
mulb
loop
fisttpl
fbstp
adc
rcr
jnp
xor
pop
scas
pop
insl
mov
lock
cmpsl
incl
lcall
jg
sar
add
out
in
and
aam
js
fiaddl
push
xchg
add
dec
js
popf
push
push
fsubs
subb
fwait
cmpsb
movsb
movsl
mov
rorb
negb
ss
push
push
xchg
dec
das
push
jnp
fs
enter
and
inc
lods
jmp
add
add
mov
push
lret
aas
push
loope
imul
test
add
push
add
aas
dec
sub
cmp
sub
imul
xor
das
push
inc
comiss
mov
add
xor
int3
xor
mov
inc
push
pushf
sysexit
add
inc
mov
cmp
inc
mov
mov
add
fwait
and
loop
nop
add
inc
push
inc
xor
add
adc
pop
mov
outsl
sbb
push
and
xchg
rcl
cmpsl
and
push
sbb
or
cmpsb
mov
mov
inc
pop
push
mov
or
outsb
adc
or
add
icebp
loop
or
std
xor
push
xor
pop
mov
inc
adc
ret
and
pop
pop
adc
ret
test
gs
pop
sbb
popa
clc
add
xchg
and
push
rclb
stc
insb
arpl
xchg
loope
xchg
or
lds
and
enter
sbb
adc
pop
dec
add
xor
push
pop
mov
iret
mov
int3
fucomip
iret
fsubrl
inc
pop
lods
jmp
nop
or
inc
add
push
jbe
push
push
inc
scas
sub
inc
or
mov
pushf
rorl
bound
inc
mov
loopne
push
sub
movsb
fdivl
mov
xorb
dec
or
jbe
add
sub
cmpsb
mov
scas
int
lods
mov
jno
sbb
sub
add
inc
test
pusha
imul
rcrl
add
js
or
sti
xor
dec
add
or
inc
add
mov
pop
mov
loopne
add
addb
pushf
inc
insb
imul
inc
or
mov
cmp
fmuls
add
cmp
mov
adc
gs
jae
jb
fstpl
or
nop
pop
push
lods
sbb
add
pop
enter
xchg
jb
add
inc
negb
or
lret
xchg
icebp
or
xor
sbb
dec
jno
add
cwtl
or
mov
out
add
movsl
xchg
adc
adc
sbb
jo
movsb
adc
cmpsl
pop
dec
fdivs
jg
sbb
in
add
xchg
stos
pop
or
lea
xor
adc
and
jo
jge
pop
jo
dec
push
push
dec
inc
mov
push
or
mov
pop
pop
xlat
xchg
ret
or
dec
outsl
outsl
in
insw
das
mov
add
js
lods
mov
xor
data16
and
xlat
add
loope
dec
jnp
or
and
and
jp
push
push
std
pop
push
clc
mov
pop
xor
mov
jnp
xor
mov
mov
clc
inc
testl
add
and
adc
xchg
pop
cmp
lret
es
outsb
mov
loopne
and
in
faddl
loope
mov
out
mov
popf
xor
pop
dec
mov
sbb
sbbl
js
mov
nop
test
addl
jmp
xchg
or
pop
cmp
add
and
xor
test
jne
push
sti
dec
adc
dec
push
jmp
mov
push
loope
sbb
or
sbb
ljmp
leave
dec
lock
test
add
ds
pop
mov
add
inc
add
jae
inc
clc
pushl
movzwl
mov
dec
fistl
in
add
xchg
xor
orl
push
enter
mov
push
or
andl
loop
sub
mov
lea
cmc
xchg
test
add
xchg
iret
adc
repz
pop
add
movsl
adc
dec
test
inc
xchg
sbbb
cmp
cmp
shll
add
adc
scas
adc
lcall
push
icebp
sbb
xchg
out
enter
aas
loopne
daa
push
push
cmp
add
sub
pushf
pop
xor
xlat
fcmove
sbb
xor
lea
gs
bound
cmpsb
orl
stos
fsubl
xchg
test
pusha
pop
inc
push
sti
fs
testl
cli
xchg
enter
mov
xchg
test
clc
nop
and
les
incl
mov
mov
imul
lcall
out
jmp
adc
xor
and
int
or
loopne
sti
push
jnp
pop
rclb
insb
test
fmull
movsl
test
adc
imul
jae
rcrb
shll
push
push
add
adc
push
add
push
cmp
fcomp
fwait
and
popa
popf
dec
xlat
pop
lods
mov
mov
mov
lret
mov
iret
mov
or
rorb
daa
push
dec
adc
sub
dec
data16
or
adc
jno
and
xor
or
adc
insl
arpl
adc
or
divl
push
push
loop
mov
stos
add
mov
aad
mov
and
mov
mov
mov
push
ds
push
push
aam
lcall
cmpsb
pusha
clc
sub
dec
sti
rcl
cmp
adcl
or
cmp
mov
add
jmp
mov
cmp
scas
add
add
in
mov
mov
xchg
jo
and
test
cmp
dec
or
push
aad
adc
sbb
call
fxch
pop
xor
dec
pop
sbb
xchg
rcll
add
aas
test
push
push
ds
das
add
jle
lcall
ss
insl
jnp
pushf
push
sub
mov
jne
mov
es
push
test
xor
inc
or
iret
adc
jae
enter
push
sbb
loopne
add
dec
adc
jecxz
repnz
sub
test
push
add
mov
add
push
jo
jns
mov
sysenter
push
dec
lods
test
test
adc
cli
inc
adc
lock
sub
call
cmp
xchg
mov
sbb
add
mov
insl
and
enter
xor
mov
popa
out
nop
sbb
pop
dec
ret
push
fdivs
sbb
push
dec
aas
stos
imul
and
pop
repz
inc
movsb
cmpsl
cmp
mov
loop
loopne
int
addl
and
cmp
je
sub
ja
mov
rorb
jecxz
or
sub
jb
add
push
out
and
inc
aaa
daa
or
arpl
adc
ret
mov
push
dec
cmp
or
stc
push
ret
sub
xor
mov
ja
adc
jg
or
and
cmc
test
push
pop
pop
dec
imul
mov
nop
stos
add
push
jns
jns
cmpsl
sub
push
int3
push
ljmp
xchg
xor
in
and
arpl
shrl
int
cs
jns
sub
outsb
ss
and
cmp
test
pushf
mov
add
jbe
xchg
jb
clc
mov
test
add
push
and
dec
cmpsl
push
add
testb
neg
cld
notb
out
or
addr16
dec
outsb
cmp
repz
addb
pushf
fsubr
lock
jl
push
outsl
push
jne
jbe
and
sub
stos
push
push
roll
or
or
add
push
addr16
jge
adc
pop
subps
pop
sysexit
pop
shr
jb
ucomiss
daa
pop
das
add
lahf
jecxz
scas
ret
pop
jb
xor
inc
in
sub
pmuludq
movups
out
add
jecxz
psrad
in
add
pop
pop
pop
push
testl
pop
xor
repnz
nopl
pop
inc
sbb
je
sbb
xchg
rol
sti
andb
jl
push
scas
cvttps2pi
ret
es
daa
ds
jecxz
xchg
or
push
and
incl
sub
and
adc
scas
inc
sbb
add
or
add
xchg
xchg
and
insb
fcmovne
nop
sub
push
mov
pushf
clc
lods
fs
push
clc
mov
fiaddl
pop
cmp
dec
filds
imul
xor
dec
mov
outsl
addr16
imul
or
call
sbb
ljmp
and
and
andb
test
push
pop
or
add
add
mov
sbb
pop
pop
sbb
inc
jns
add
mov
imul
adc
insl
inc
fmuls
mov
cltd
cmp
xchg
loop
cltd
mov
push
pop
jne
mov
cltd
js
or
push
adc
xlat
les
lret
dec
jb
cwtl
push
pop
mov
mov
add
loopne
mov
or
push
lods
sbb
add
cmp
inc
lret
aaa
arpl
testl
inc
dec
je
inc
inc
cmpsl
fisttpl
loope
gs
lret
shrl
cmp
bound
xor
iret
adc
pusha
xchg
mov
add
jecxz
xor
pop
push
rclb
sbb
or
add
jmp
inc
inc
pop
push
shll
iret
add
sub
mov
int
je
les
push
mov
dec
pop
insb
dec
cmp
xor
outsl
movsl
rclb
dec
xlat
insb
lcall
test
and
mov
in
call
or
cwtl
or
jae
mov
adc
fldt
test
lret
or
and
cltd
or
imul
test
jno
arpl
jns
xchg
adc
outsl
jns
jo
or
sub
dec
dec
sbb
or
add
gs
testb
adc
mov
jb
sub
rcll
movsb
mov
icebp
fsubrs
pop
sub
subb
push
sub
mov
lret
adc
test
js
jne
dec
fsts
dec
push
enter
pop
stos
jmp
lds
add
test
pop
shrl
popl
sbbb
pop
xchg
push
add
movsb
cmpb
cmp
and
sub
sub
push
cmp
add
add
pop
inc
pop
dec
adc
sbb
out
lods
add
int3
sbb
mov
lea
mov
mov
adcl
inc
cwtl
and
xorb
mov
lods
add
pop
and
leave
ss
and
addr16
ljmp
jno
jge
mov
imul
add
sti
cmp
fidivrs
fnstenv
add
enter
or
rcrb
xor
jmp
insb
aam
in
add
pushf
in
inc
fsubp
fnstcw
push
lcall
sub
mov
fmull
mov
push
int
lods
addl
imul
add
loopne
sub
in
dec
add
dec
lcall
pop
mov
push
cmp
add
cmp
add
pop
pushf
pop
popa
call
inc
inc
loop
sbb
notb
ret
push
mov
push
mov
ja
stc
mulb
pop
int3
jge
scas
adc
jnp
gs
and
cmp
adc
and
loop
pop
jmp
push
mov
adc
outsl
test
mov
or
inc
push
push
out
cwtl
jno
sbb
adc
push
push
loop
ja
enter
mov
xor
int3
enter
mov
pop
addr16
jmp
ret
dec
lds
fiaddl
and
shlb
loop
cmpsb
and
adc
test
xor
data16
and
es
daa
or
pop
nop
pop
add
jne
daa
insb
or
lock
xor
add
popf
sbb
sbb
push
mov
xchg
cmp
adc
imul
mov
mov
insb
fcom
and
loopne
push
add
adc
push
lea
pop
in
jo
mov
bound
sbb
sub
adc
mov
and
jmp
push
in
dec
inc
dec
mov
mov
xor
xchg
jmp
add
xchg
xchg
imul
xor
sbb
loopne
mov
orb
xchg
fwait
addr16
push
push
andb
push
cmc
nop
popa
lods
xor
mov
ja
mov
fisubl
jmp
imul
lea
ret
add
addb
cwtl
out
push
test
mov
jbe
push
pop
push
fdivl
jle
mov
sbb
nop
ret
xor
xorl
aad
out
cmp
dec
fsubs
addb
mov
subb
xchg
test
and
mov
cmpsl
cwtl
cltd
pop
aam
lret
inc
inc
pop
daa
imul
sub
xor
adc
fisubl
mov
adc
pushf
xchg
vmread
lcall
out
pop
mov
pusha
mov
push
or
xchg
push
xor
push
push
add
inc
xchg
adc
dec
je
xchg
dec
je
sub
and
xchg
push
mov
orb
adc
sbb
fnstsw
push
dec
imul
xchg
int
mov
inc
jecxz
loopne
push
in
and
sub
scas
jae
sub
pop
mov
mov
cmp
mov
lods
orb
cmpsb
ss
xlat
pop
insb
jle
pusha
mov
sbb
dec
cmp
push
push
push
and
in
xlat
aaa
inc
rorl
jb
inc
mov
test
and
sbb
or
or
xor
inc
adc
push
push
and
sub
sub
lcall
lock
sbb
sub
sarb
pop
inc
lock
or
mov
inc
cmp
enter
shlb
xor
stos
inc
add
jns
nop
shlb
pop
add
lahf
in
jo
lcall
jo
xchg
cltd
pop
lret
fnclex
shll
arpl
cmp
sub
pop
popa
enter
jmp
loop
movl
xor
add
jb
pop
iret
mov
repz
hlt
ret
dec
mov
or
lock
dec
xor
sbb
insl
sub
les
dec
mov
push
add
mov
dec
leave
and
fstpt
insl
dec
jno
and
dec
cwtl
movb
test
bound
js
add
inc
pop
loope
js
outsl
cld
sarb
movsl
push
mov
inc
bound
inc
imul
outsl
mov
push
add
aaa
fisubl
stos
loopne
add
mov
fsubrs
pusha
xchg
nop
inc
addl
outsl
fmuls
roll
adc
test
es
jno
leave
jb
sub
negl
or
pop
push
inc
jb
les
ret
mov
faddp
and
pop
orb
jecxz
inc
pusha
movsl
pop
sahf
mov
mov
test
xchg
jp
or
add
mov
arpl
or
ficompl
or
or
call
inc
shll
and
aaa
test
or
leave
and
and
inc
pop
lea
xchg
jmp
add
enter
add
cmp
add
cwtl
or
jmp
hlt
and
xor
cmp
xor
push
dec
mov
sub
dec
scas
push
bound
add
mov
cmp
and
sbb
in
cmp
cmp
jne
and
mov
or
lea
xchg
or
mov
add
movsl
enter
or
jb
addr16
les
add
add
fs
call
inc
push
inc
xchg
mov
xchg
mov
pusha
aaa
lret
xor
pop
add
repz
inc
aaa
or
fimuls
lret
gs
scas
dec
loop
out
dec
loope
xchg
and
pop
or
xchg
add
or
divb
inc
mov
pusha
add
mov
xor
or
cmpb
xchg
rol
cmp
imul
ret
call
aam
jo
fwait
dec
mov
lock
or
or
lret
add
dec
stc
dec
push
dec
adc
aam
adc
sahf
mov
ret
push
xor
push
adc
lock
sbb
insb
jmp
jbe
test
push
xor
adc
mov
push
aas
jecxz
dec
push
mov
roll
call
push
lock
in
in
in
push
jbe
adc
pop
xchg
outsl
pop
rcrb
rcl
into
pop
stos
pop
or
rclb
pop
push
in
pop
andps
cmc
repz
mov
xor
jno
jne
xchg
adcb
outsl
jne
xor
loopne
cmpsb
lea
inc
mov
jle
add
push
mov
hlt
cltd
dec
pop
mov
push
mov
push
dec
push
jecxz
mulb
jbe
jp
test
push
enter
jbe
es
or
clc
call
xchg
push
test
dec
cmp
dec
xor
dec
mov
cwtl
jns
aam
movsb
push
es
xchg
gs
aam
jne
js
mov
movsb
jb
test
cld
adc
es
mov
sub
push
or
add
popl
test
test
bound
rorb
shlb
sub
pop
inc
enter
aam
mov
test
dec
hlt
cmp
dec
movl
les
pop
xor
aad
dec
movsb
icebp
dec
adc
rdmsr
mov
aas
and
or
cmp
sbb
sub
js
shlb
add
xor
xchg
push
cmp
sbb
pop
js
sbb
sbb
cs
pushf
clc
push
mov
repnz
das
fidivrl
das
or
xor
loope
add
jge
add
jecxz
xchg
lods
loopne
mov
pop
in
push
sub
add
lret
pop
mov
es
test
insb
mov
xchg
loope
cmpsb
movsb
stos
into
inc
inc
mov
das
jle
rcrl
xor
pushf
xchg
inc
jne
mov
imul
pop
mov
push
ret
and
and
rol
rclb
and
pop
mov
inc
cmpl
jne
push
adc
or
jecxz
fdivs
outsb
sbb
pop
arpl
or
ss
ror
xorl
mov
adc
faddl
cwtl
and
loope
int3
fs
mov
and
imul
insl
add
lea
sbb
daa
push
jo
xor
sub
cmpsb
sub
pushf
enter
add
dec
sti
sbb
mov
and
push
sbb
mov
pop
push
push
sbb
roll
test
adc
pop
jmp
orb
fbstp
into
lds
add
mov
adc
stc
push
jl
mov
aam
pusha
andl
imul
jb
or
adc
mov
test
mov
divb
das
add
xchg
mov
lsl
movsl
dec
push
xor
lret
cmpsl
nop
dec
pop
xchg
cmpsb
or
insl
mov
add
fdivrs
cmp
movb
cmp
enter
mov
sahf
or
add
sbbb
push
sbb
addr16
sarl
xchg
adc
push
adc
and
cwtl
add
mov
and
dec
xor
push
ljmp
and
or
cmp
adc
add
int
mov
mov
or
aad
and
test
mov
mov
jno
jge
or
mov
add
jb
jno
sbb
shrb
mov
lcall
pop
lds
dec
outsl
movsl
push
mov
es
test
pop
push
test
inc
loopne
inc
data16
jb
addr16
ss
push
xlat
add
add
loopne
mov
sbb
mov
test
inc
or
mov
je
inc
ja
fstpl
xchg
mov
pushf
sub
adc
addr16
xor
cmpsl
add
inc
add
sbb
add
mov
pop
cwtl
fildl
add
add
and
loopne
mov
push
ljmp
lock
les
insb
lods
mov
sbb
andb
jmp
lds
and
xchg
push
int3
mov
data16
push
movsb
ret
subb
loopne
jmp
pusha
test
or
lock
xchg
sbb
shlb
shrb
or
or
xor
loope
sub
cmc
cs
popa
add
add
add
je
and
cmp
movsl
in
shrb
push
test
mov
insb
frstor
pop
dec
sub
push
cmp
clc
cld
lea
shrl
fmuls
fisttpl
std
test
ljmp
sbb
aam
adc
daa
jne
sbb
sbb
pop
hlt
mov
mov
add
repz
and
and
lea
push
mov
mov
sbb
jmp
xor
les
sub
cmp
jge
out
cmp
leave
dec
filds
pop
add
or
bound
inc
xchg
pop
sbb
ret
cmpsb
sbb
adc
xor
mov
mov
adc
mov
pop
sub
sub
and
xchg
push
das
jbe
dec
add
cld
pop
loopne
mov
xor
sub
js
dec
push
outsb
jae
and
cmp
arpl
push
inc
mov
xor
sub
test
mov
and
add
addb
mov
imul
in
cwtl
xor
push
outsl
inc
jge
sbb
fwait
arpl
inc
aas
xchg
pushf
aaa
cmpsl
inc
roll
aad
add
ja
and
add
add
xchg
sbb
push
lret
jo
cltd
punpckhdq
cmp
and
dec
aas
inc
dec
mov
xchg
jl
das
and
push
xor
sbb
and
fmuls
in
dec
mov
push
xor
mov
mov
and
and
push
or
imul
mov
mov
xor
ljmp
in
out
sbb
adc
add
add
aas
dec
addl
imul
cmp
lds
inc
roll
icebp
xor
push
add
icebp
add
cmp
jle
fsubl
or
insb
adc
pop
out
cmp
shrb
in
mov
jecxz
pop
nop
aaa
cs
and
fisttps
cltd
cmp
pop
mov
mov
movsl
inc
aas
xchg
and
popf
xchg
shrb
inc
lods
add
outsb
adcl
add
mov
pop
mov
cmp
lret
mov
lea
xchg
lea
add
lret
sbb
psubusw
lahf
adc
jg
daa
rcl
sti
inc
nop
mov
and
sbb
dec
pop
ret
aaa
pop
or
lfs
cli
movups
xchg
mov
xchg
push
aas
adc
test
out
dec
nop
aam
adc
unpckhps
gs
lahf
pop
push
mov
xchg
dec
sbb
daa
xchg
out
lods
loopne
sbb
lcall
xchg
pop
mov
jg
sbb
sbb
in
xchg
das
push
add
add
ds
ja
xor
and
mov
sahf
jmp
and
mov
repnz
add
mov
daa
or
es
mov
mov
pop
adc
cltd
pop
or
inc
sbb
test
movsl
pop
das
lcall
pop
stos
sub
in
jo
ds
sub
sub
int
pop
dec
push
js
aas
dec
inc
add
lret
mov
aas
mov
lcall
adc
test
dec
outsb
arpl
sub
xorb
adc
sahf
stc
insb
aas
stos
sub
add
loopne
mov
test
add
repnz
mov
pop
mov
mov
mov
adc
lcall
andl
lcall
mov
add
inc
dec
mov
js
and
mov
fcoms
pop
in
xlat
dec
idivb
sub
push
push
inc
jecxz
cmpsl
mov
lahf
mov
lcall
and
lods
lds
sbb
mov
add
lcall
pop
or
or
enter
push
or
mov
and
mov
movsb
push
dec
sbbb
or
mov
add
add
inc
sbb
sbb
xchg
xor
mov
xor
sbb
lahf
adc
mov
sbb
inc
add
inc
mov
popf
cmpsb
inc
push
mov
dec
and
or
jns
pop
inc
xor
subb
and
add
add
lcall
xor
repnz
push
and
lcall
and
es
cmpl
in
add
dec
add
push
jb
mov
and
adc
pop
mov
sbb
dec
or
pop
sub
sub
sti
dec
push
stos
ret
cmc
ds
lea
les
or
cmpsb
add
adc
mov
ss
fwait
and
mov
pusha
xchg
enter
dec
dec
shrb
lds
repnz
push
jb
and
fwait
push
aam
mov
adc
test
xor
and
insl
inc
fwait
push
leave
mov
sub
or
or
repnz
xchg
mov
enter
add
lcall
jge
mov
cmp
clc
and
push
movsl
test
pop
xchg
push
fsubrs
adc
mov
shr
and
lahf
or
data16
fisubrs
inc
adc
nop
test
in
and
or
cmc
adc
and
sub
dec
test
ret
jmp
dec
sub
stos
and
push
lahf
cmpsl
repnz
pop
stos
in
or
lret
pop
gs
or
shll
dec
psllq
lock
hlt
insl
adc
sub
push
sbb
inc
add
subb
push
or
inc
popa
add
fimull
adc
addr16
jecxz
add
int
adc
clc
mov
jl
jecxz
nop
orl
ret
xchg
push
adc
popa
push
add
nop
jo
imul
lock
repz
pusha
out
pop
pop
and
dec
flds
xchg
jp
adc
cmp
inc
jnp
xor
ret
test
test
imul
ss
addr16
mov
mov
dec
inc
xchg
push
or
inc
push
mov
jno
pop
pop
and
sbb
loopne
leave
rorb
jne
push
add
in
or
imul
and
std
dec
pop
pusha
add
ficomps
movsb
cmp
adc
jne
cmp
cmpsb
call
dec
leave
inc
in
inc
xor
adc
fwait
sub
ljmp
mov
mov
jecxz
pop
outsl
inc
pusha
push
add
and
xor
pop
idivl
mov
mov
xor
imul
push
leave
sarb
loopne
inc
pop
fnstsw
mov
cmp
jo
and
insb
rcrb
mov
outsl
sbb
jmp
add
or
in
nop
call
dec
inc
sub
push
mov
mov
aas
inc
js
cmp
jg
push
jae
addr16
adc
cmp
inc
push
lock
xchg
jo
js
testl
mov
xorps
xchg
int3
mov
mov
out
pop
enter
out
sbb
out
mov
decl
leave
les
js
sub
mov
sub
add
and
sub
or
or
mov
out
movsb
pop
sbb
movsb
ret
fiaddl
repnz
push
ss
adc
sbb
jo
sbb
push
addb
xchg
or
inc
loopne
sbb
test
incl
jecxz
movsb
cmp
jne
and
imul
inc
inc
clc
xor
pop
ficomps
lock
sub
jmp
and
sub
hlt
call
aaa
xchg
jg
push
shlb
inc
inc
out
scas
popa
inc
fsubrs
mov
inc
pop
icebp
call
aaa
cmpsb
inc
sub
mov
sub
push
les
ss
or
jecxz
or
in
les
movsb
jns
dec
lock
and
ds
les
mov
ret
nop
cmp
dec
pop
fdivl
xchg
mov
das
cld
pop
add
xor
ja
in
stos
mov
xchg
daa
cmpsb
fdivrs
stos
push
mov
add
fnstsw
loopne
pop
repnz
add
jns
out
push
push
sub
dec
pop
out
sahf
out
adcb
lret
add
repz
dec
pop
insb
jle
cmp
pause
lahf
scas
mov
iret
fucomi
stc
or
stos
mov
adc
lcall
add
and
testb
and
xor
xchg
or
and
cwtl
int3
jb
push
in
lock
mov
xchg
adc
and
xchg
inc
test
xor
jnp
inc
jnp
lcall
sbb
inc
test
push
leave
sub
xchg
imul
adcb
jmp
sbb
mov
enter
dec
xchg
dec
xchg
movsb
xchg
cmp
inc
sub
sbb
sbb
add
mov
in
shlb
pop
cwtl
lret
hlt
shlb
sbb
pop
push
push
push
xlat
dec
addr16
stos
in
mov
xor
dec
call
cld
jmp
add
insl
dec
and
jne
fildl
out
jg
test
push
inc
or
outsl
fwait
stos
outsl
test
adc
fwait
aas
movsb
adc
scas
mov
cltd
and
mov
and
fs
mov
out
jle
and
inc
and
adcb
daa
sbb
leave
mov
adcl
lock
or
js
jmp
mov
aam
xchg
pushf
sub
add
call
popa
mov
js
jle
xor
stc
mov
out
insl
in
add
jge
adc
cmp
loope
xchg
inc
or
je
inc
cmpb
mov
rcrb
jg
stos
ret
sti
xchg
sahf
ret
cmp
push
negl
jl
notb
sub
adc
subl
fldt
lcall
fisttps
jnp
outsb
movsb
mov
add
mov
rcrb
fs
cld
mov
or
push
ds
daa
insb
and
repz
ds
popf
or
add
fmul
xchg
es
daa
push
scas
lds
and
add
outsl
adc
in
xor
push
mov
outsl
push
add
rorb
push
pop
pop
add
shrb
mov
fwait
mov
push
jnp
push
push
cmp
lock
push
sti
adc
in
or
andb
jge
push
ret
adc
pop
inc
ljmp
and
or
mov
or
cmp
cltd
dec
add
nop
clc
ja
sbb
cmpb
cmp
add
mov
jbe
sbb
push
test
sbb
jns
int3
add
loope
or
out
or
push
sbb
mov
adc
push
rclb
ds
nop
dec
and
test
adc
into
or
inc
or
jne
je
push
inc
hlt
lret
add
or
shlb
inc
fwait
xchg
rorl
adc
movsb
pop
add
lret
jmp
push
clc
cs
mov
pushf
dec
inc
or
push
inc
or
lret
adc
sbb
xor
lret
movsb
lods
outsl
inc
or
jecxz
push
sbb
fiaddl
cmp
dec
pop
inc
inc
imul
pop
and
add
adc
mov
gs
cmp
nop
sbb
push
loopne
adc
xor
orl
jecxz
add
xlat
sbb
inc
cmp
fimuls
clc
dec
xor
dec
dec
mov
adc
adc
mov
lds
dec
mov
inc
sbb
xor
sbb
test
out
cmpsl
mov
loopne
dec
pushl
dec
adc
rcll
cmp
hlt
hlt
cmp
lock
insb
add
bound
sub
nop
pop
jo
xor
inc
mov
jg
je
aam
add
aam
mov
mov
mov
pop
dec
mov
cmp
add
je
jb
jne
dec
dec
js
adcb
lcall
or
lods
mov
add
and
push
and
lds
adc
mov
xor
in
add
sub
add
arpl
jns
sbb
lods
mov
gs
das
movb
lret
in
add
add
and
rcrb
pop
jb
jb
inc
inc
inc
inc
jb
jb
inc
inc
inc
inc
jb
jb
dec
dec
dec
dec
jb
jb
dec
dec
dec
dec
jb
jb
xor
xor
jb
jb
xor
ss
jb
jb
cmp
cmp
jb
jb
cmp
ds
jb
jb
and
and
bound
bound
lock
in
mov
push
cld
bound
xchg
adc
pop
push
push
add
popf
pop
sahf
cli
dec
popf
test
add
adc
jl
cli
jae
dec
push
jbe
push
xchg
adc
mov
stc
int
icebp
arpl
and
dec
dec
dec
inc
mov
mov
fisubrl
xor
add
pop
lea
pop
dec
into
fnstsw
in
ds
mov
xchg
loop
and
addb
inc
iret
sub
cwtl
xchg
pop
stos
mov
popa
inc
dec
push
popf
loopne
xor
inc
dec
orb
push
push
or
adc
or
pop
xchg
push
add
sub
sub
adc
adc
sti
sbb
mov
and
adc
sub
adc
nop
cwtl
pop
test
and
dec
sbb
xor
imul
push
pop
xchg
mov
pop
xchg
sub
sub
add
dec
pop
inc
hlt
push
scas
or
out
stos
inc
je
jb
or
and
shlb
movsl
adcl
sarl
xor
or
jno
imul
dec
adc
ret
pop
adc
xorb
jmp
push
or
dec
orl
cmp
add
xchg
or
loopne
pusha
xchg
mov
sbbb
jno
lret
jbe
fdivrl
inc
or
gs
insb
js
xlat
insl
stos
or
xor
or
xchg
or
mov
adc
push
push
xchg
add
adc
cmp
out
insl
xor
fisttpl
cmpl
das
addl
cmp
sub
mov
sub
mov
jecxz
orb
xor
out
or
inc
clc
sbb
pop
cmp
sbb
inc
int3
xorl
clc
cmp
nop
and
fwait
mov
sub
aaa
jns
sbb
lea
je
jmp
rolb
jmp
sub
jmp
dec
jo
jbe
pop
or
std
or
lret
scas
jne
push
cmp
ss
nop
aam
mov
mov
mov
push
push
jne
mov
mov
or
adc
lds
jge
shll
push
mov
or
mov
jmp
sarb
add
rorb
dec
in
inc
in
roll
int3
push
dec
loope
in
enter
jmp
inc
gs
scas
icebp
mov
xchg
cmp
mov
notl
jp
adc
das
adc
push
sub
cwtl
sub
sub
das
mov
insb
mov
aaa
push
cmp
in
fs
les
ret
mov
cbtw
lahf
aas
mov
and
sbb
cld
mov
sbbl
lret
jne
stc
inc
mov
iret
add
push
inc
adc
cld
push
mov
adc
inc
cld
pop
mov
xchg
inc
testb
inc
mov
leave
sbb
pop
inc
ret
movsl
into
mov
push
fisttps
dec
rcrb
pusha
adc
inc
mov
hlt
mov
pop
adcb
xchg
inc
xchg
out
dec
dec
adc
insl
fstpt
push
outsl
push
add
cmp
shlb
xchg
xlat
mov
inc
mov
push
pop
inc
and
add
movsl
xor
or
shll
adc
in
cmpsb
sahf
and
psubusb
dec
lcall
sbb
add
test
test
sub
ja
jne
addr16
cmpsl
adc
add
call
dec
jle
sub
outsl
stc
sub
loope
and
imul
sbb
das
inc
mov
addb
pop
or
insb
fucomi
push
adc
add
call
cmp
orw
cmc
lock
xchg
loop
adc
sbb
jge
mov
enter
rcrb
sbb
jne
cmp
ja
out
std
mov
jmp
sbb
jb
and
ja
insb
popa
jmp
add
sub
insb
testb
cltd
sbb
cmp
pop
mov
and
es
movsb
and
dec
shlb
xchg
mov
and
and
xchg
in
cmp
dec
ja
dec
ret
es
addr16
imul
and
push
pop
xchg
in
sub
ret
mov
and
cmp
stc
mov
mov
inc
mov
mov
mov
stos
lods
push
dec
inc
js
mov
bound
or
imul
dec
sbbl
jl
jp
or
sbb
mov
adc
sub
faddl
pop
mov
loopne
push
mov
add
cmp
sbb
mov
popf
mov
ficompl
test
or
mov
cwtl
loopne
aaa
into
inc
push
test
scas
or
inc
mov
push
popa
adc
aaa
enter
imul
rol
js
mov
ret
popa
mov
dec
sub
inc
ljmp
inc
aam
xorl
ss
fidivl
or
add
dec
adc
cmp
adc
sub
xchg
inc
fbstp
jecxz
movb
xchg
mov
add
sub
das
adc
nop
hlt
jmp
cmp
test
or
rorb
sbb
stc
inc
or
cmp
inc
pop
sub
popf
cmp
loopne
ret
xchg
or
les
or
sub
jp
mov
cmp
mov
adc
repnz
nop
sbb
or
push
adcl
lret
push
bound
stos
daa
pop
repnz
in
arpl
inc
push
cltd
add
and
mov
lods
scas
daa
sahf
dec
out
fadds
add
daa
fcomps
ficompl
inc
dec
inc
sub
mov
aad
jbe
dec
pop
push
daa
dec
lahf
es
mov
out
pop
push
push
testb
sub
shll
sub
pop
push
repnz
insb
mov
or
pop
das
call
addb
dec
loopne
xor
push
test
push
das
ja
aam
scas
add
inc
cmc
scas
arpl
pop
push
mov
xlat
inc
roll
inc
testb
mov
lods
scas
inc
das
dec
lods
in
mov
leave
xor
push
jle
call
push
cmp
add
push
push
jmp
js
inc
push
push
xchg
dec
aad
jbe
cmpsl
das
dec
xchg
cmp
shrl
push
das
fistl
inc
cmpsl
outsl
xor
nop
mov
push
icebp
inc
pop
pop
xor
cwtl
shlb
xchg
add
addb
popa
or
out
xchg
inc
orb
ljmp
mov
or
push
out
es
add
in
out
push
test
inc
mov
xor
push
push
adc
adc
xor
cmp
push
inc
add
mov
shll
add
punpckhbw
pop
daa
xor
pop
xor
inc
ret
fidivrl
mov
in
mov
mov
xor
xchg
add
and
dec
roll
xlat
mov
xor
add
add
xor
mov
out
movsb
inc
sub
ja
inc
or
inc
adc
inc
pop
mov
jb
sbb
xor
and
popa
insl
xor
mov
ss
pop
push
mov
inc
dec
xor
mov
testl
incl
xchg
or
inc
inc
push
in
xorb
mov
push
scas
inc
jg
and
dec
push
sbb
dec
push
ljmp
jno
test
mov
jb
mov
push
aad
and
popf
dec
lods
mov
adcb
dec
sub
inc
add
mov
mov
add
push
pop
outsl
sub
dec
add
jb
dec
pop
dec
dec
dec
scas
scas
test
call
dec
out
push
mov
insl
inc
sub
xchg
stos
mov
addr16
inc
daa
dec
push
ret
push
mov
dec
ja
xchg
daa
inc
pop
leave
mov
xor
lcall
scas
in
cwtl
push
pop
push
push
or
pop
push
xlat
xchg
pop
add
daa
inc
outsl
pop
add
jbe
pop
push
notl
add
xchg
mov
push
inc
lds
pop
adc
pop
fisubrs
clc
test
cmp
inc
adc
lds
adc
outsb
inc
in
mov
movsl
or
out
ljmp
lcall
xchg
pop
out
aas
jno
rorb
dec
repnz
cmp
jne
ret
and
lret
mov
add
ret
les
jmp
je
push
inc
ficoml
adc
and
call
add
imul
shl
dec
inc
mov
pop
aad
dec
fcmovbe
outsl
push
cmp
add
add
or
lock
stc
sub
shrb
xor
popf
and
sub
adc
add
pusha
sub
mov
addr16
lds
adc
je
aas
insl
xorb
fcomps
sti
jne
push
sbb
loope
into
imul
fwait
mov
jae
xor
and
outsl
xchg
xlat
cmpsb
and
jno
jns
push
testl
inc
pusha
repnz
xchg
mov
jecxz
aam
add
in
inc
dec
xchg
pop
jb
mov
aam
cltd
in
or
xor
mov
hlt
jb
and
and
push
test
and
adc
xchg
dec
cs
dec
cmpb
xor
jo
pop
jb
mov
mov
pushf
icebp
aas
pop
jb
leave
repnz
pusha
pushf
cltd
in
xchg
call
xchg
dec
cs
enter
xchg
mov
xchg
xchg
pop
jb
fsubl
push
cwtl
loopne
pop
xor
adc
inc
mov
cs
in
adc
inc
jl
in
dec
mov
leave
and
in
dec
pop
add
cmp
leave
dec
cs
and
mov
or
xor
mov
fcoml
pop
jb
and
jl
cltd
in
xchg
in
std
inc
in
dec
cs
cwtl
leave
and
mov
and
mov
and
pop
inc
insb
xchg
pop
jb
cwtl
cld
mov
push
pop
jo
xor
dec
cs
add
and
loopne
pop
pop
jnp
add
pushf
loopne
cltd
in
and
insb
lods
mov
xchg
dec
cld
dec
add
pop
leave
and
mov
xchg
dec
pop
jb
adc
push
and
mov
pop
xchg
pop
jb
push
leave
mov
or
in
dec
es
cwtl
call
cmp
mov
xchg
dec
es
or
xchg
mov
je
pop
jb
mov
sub
xchg
mov
add
inc
pop
jb
and
mov
mov
das
xor
je
in
dec
pop
add
inc
nop
leave
and
mov
xchg
xchg
pop
jb
lock
adc
mov
xchg
pop
xor
xor
js
clc
cs
in
cmp
nop
rcrb
dec
and
push
xchg
or
pop
mov
leave
and
add
push
pushf
mov
cmp
sbb
sbb
leave
dec
cs
and
xchg
rorb
cltd
in
sbb
xchg
pop
xor
add
mov
cs
in
adc
push
cwtl
dec
repnz
dec
fsubrl
push
fs
in
xchg
pushf
or
je
leave
dec
loopne,pn
and
sub
movsb
sbb
ja
das
mov
and
jnp
test
and
pop
xor
insb
lods
add
jbe
and
inc
leave
and
mov
xchg
dec
es
sub
and
and
push
mov
cmp
xchg
mov
and
pop
and
clc
pop
jb
in
dec
sub
pop
call
xchg
dec
cwtl
clc
inc
jns,pn
and
das
in
dec
es
test
inc
xor
cs
inc
xchg
mov
int3
add
inc
pop
jb
and
mov
xchg
shlb
and
or
push
pop
fsubl
mov
xchg
dec
pop
jb
inc
aaa
lods
and
cmp
test
jns
fsubrs
jl
dec
repnz
aam
cmp
cs
in
sbb
push
nop
dec
repnz
dec
int3
adc
cltd
in
xchg
mov
xchg
dec
cs
ds
xchg
dec
mov
sbb
leave
dec
cs
push
lods
add
xchg
pop
xor
enter
in
inc
push
inc
cmpsl
inc
pop
int3
jb
and
adc
pop
pushf
fs
xchg
pop
fcompl
push
mov
cmp
xchg
xchg
pop
xor
cs
xchg
pop
xor
inc
inc
pushf
fcompl
pop
sbb
dec
push
xchg
mov
pop
in
xor
mov
and
sbb
xchg
dec
cs
dec
js
and
adc
inc
xchg
pop
jb
jo
fmuls
mov
insb
xchg
mov
hlt
and
into
and
mov
das
cld
pop
imul
test
or
lock
ljmp
sbb
cmp
popa
shl
sub
sti
or
mov
in
sbb
push
jl
int3
inc
adc
xorb
pop
and
or
fwait
pop
dec
fnstcw
cwtl
xlat
je
cmp
dec
and
fimuls
rorb
cmp
fwait
clc
adc
xor
fnstsw
pusha
or
mov
and
mov
jne
rolb
ja
push
add
mov
movsb
and
or
cmpsb
lahf
mov
lahf
lahf
xorb
jb
cld
rorb
aam
test
mov
push
mov
dec
test
loopne
xor
adc
out
or
scas
inc
mov
lock
pop
cltd
out
std
rclb
add
xchg
ret
pop
jle
add
mov
das
push
add
mulb
jb
jbe
mov
popa
add
jne
xchg
mov
jae
ret
xor
mov
fwait
sbb
ds
scas
int
add
add
mov
arpl
fmul
add
pop
insl
inc
xor
lahf
push
fisubrs
xor
cs
mov
shll
sarl
pop
ja
xor
mov
addr16
daa
add
mov
pop
pop
outsl
sub
pop
negl
mov
inc
sub
dec
pop
jg
inc
jo
push
pop
adc
sbb
mov
pop
xor
and
sub
pop
adc
pusha
inc
jno
maskmovq
divl
push
outsl
arpl
add
and
out
jno
addr16
inc
fisubrs
aaa
outsb
jo
pop
movsl
add
jb
dec
sbb
insl
in
insb
das
outsl
sbb
fisubrs
ja
outsb
jg
xchg
jae
insb
stos
loop
xlat
das
cmpsl
fcmovnb
push
xor
push
jo
sub
jle
mov
ja
jbe
pusha
outsl
adc
jbe
loopne
js
jae
js
xchg
bound
lods
scas
cmp
jo
inc
comiss
fdivs
aas
inc
das
imul
inc
jecxz
mov
jp
jne
and
enter
sbb
mov
lret
jmp
imul
mov
es
push
inc
pop
in
pop
arpl
jb
outsl
pop
imul
aas
xor
push
mov
add
je
cmpsb
and
aam
leave
in
sbb
jo
push
or
je
and
push
jne
mov
aaa
jne
mov
imul
pop
insb
test
imul
jbe
mov
sub
es
push
dec
cs
pop
testb
push
addr16
fsubrp
shrb
cmp
mov
pusha
sub
pop
mov
sbb
in
sbb
mov
xchg
js
cmp
sbb
adc
sub
outsb
add
and
mov
or
sbb
movsb
and
insb
adc
add
push
enter
das
bound
jb
out
outsb
jne
js
push
push
popl
repz
pop
orb
jo
pusha
adc
testl
and
pop
je
arpl
jl
mov
insl
out
mov
jae
mov
in
sbb
sub
add
lahf
jb
loopne
stos
xchg
dec
insb
mov
adc
jb
ljmp
add
cmp
out
stos
fbstp
das
lea
sbb
sub
addl
dec
shll
repz
sbb
mov
das
data16
mov
test
xchg
push
and
and
js
fnstenv
adc
pop
xchg
and
outsl
jo
jo
je
sbb
outsl
js
outsl
sbb
mov
cmp
pop
xor
cmp
dec
jp
daa
xlat
mov
xor
or
mov
scas
cmpsl
jne
dec
out
call
scas
je
in
or
fwait
outsb
scas
push
testb
push
and
add
jmp
mov
stos
fbld
ret
push
mov
push
mov
faddp
xorl
pusha
mov
mov
aas
outsl
outsl
push
mov
in
or
jbe
outsw
inc
ret
cmpsl
sbb
xchg
insb
pushf
add
pop
roll
jnp
sbb
cmp
leave
adc
js
ret
lea
xor
aaa
imul
jbe
lds
mov
push
arpl
roll
leave
push
lock
dec
and
nop
mov
dec
aaa
bound
into
fbld
popa
stc
test
jg
rolb
fsubs
lods
lods
lcall
push
dec
scas
inc
push
xor
pusha
lret
xor
imul
xor
ja
mov
push
addr16
in
adc
lods
mov
addr16
shrb
push
adc
roll
inc
adc
stos
cmp
adc
xor
add
pop
push
add
test
roll
enter
push
mov
hlt
push
das
cmpsl
jb
add
pop
pop
pop
jo
jo
sbbb
jbe
pop
leave
inc
jb
js
in
outsb
nop
cmp
and
jmp
push
imul
and
jo
xlat
sub
dec
jne
das
inc
rcrl
subl
adc
ret
nop
add
imul
inc
inc
fs
popa
xchg
lcall
cmp
and
mov
sbb
in
push
xlat
outsb
lahf
insl
pop
sub
jae
pop
sbb
jae
xor
mov
outsb
ja
mov
pop
and
mov
inc
lds
imul
jecxz
pusha
daa
insb
stos
pusha
pop
jne
inc
scas
lahf
adc
add
add
lret
stos
mov
push
sbb
xchg
push
ja
movb
pop
push
and
sbb
cmc
push
nopl
insl
pop
mov
shlb
jp
dec
sub
dec
outsl
addr16
mov
xor
bound
jbe
orb
sub
imull
rclb
outsl
pop
sbb
and
or
xor
cs
ja
inc
mov
push
xor
adc
arpl
iret
mov
popa
pop
pop
outsb
aam
testw
mov
push
mov
xchg
sub
pusha
clc
shrb
insl
scas
rol
or
inc
das
lahf
jb
and
push
cs
arpl
sub
lods
mov
xchg
lock
scas
pop
push
das
inc
arpl
sbb
sarb
jo
lock
push
insl
daa
outsl
adc
mov
jo
daa
jo
arpl
or
push
jo
jmp
or
jg
add
xor
sub
or
movsl
push
sbb
xchg
inc
mov
scas
xchg
outsb
sub
outsl
xchg
adc
iret
sbb
rolb
fistpll
mov
fistps
ja
push
jge
dec
lret
push
sub
add
fiaddl
xor
ja
shr
jp
sub
mov
lea
inc
and
aaa
mulb
pusha
ret
outsl
mov
ret
ja
subb
inc
dec
add
sbb
or
sbb
mov
mov
mov
imul
bound
sbb
jp
rolb
xchg
insb
add
lahf
bound
pop
xor
jmp
xchg
imul
fadds
pop
pop
pop
xor
ret
jae
cltd
pop
mov
ret
xor
jbe
dec
push
mov
xchg
push
add
push
pop
xorb
or
rclb
pop
xor
daa
pop
mov
inc
xor
test
jbe
jns
adcl
push
shl
out
fs
testb
jg
jg
adc
dec
dec
imul
add
sbbb
and
sbb
and
lea
insl
jmp
bound
adc
adc
pop
scas
orb
xchg
andb
pop
add
mov
pop
scas
je
dec
or
dec
es
sub
scas
xchg
inc
imull
lret
addl
sbb
in
mov
jo
rcll
js
bound
popf
adc
iret
xor
xor
adc
push
scas
shrb
pop
aas
mov
jae
pop
test
test
divl
fildll
jl
or
ljmp
push
jg
imul
sbb
push
orl
sub
mov
and
push
bound
inc
and
sub
pop
xchg
push
xchg
shll
rcl
test
imul
into
fwait
loope
sbb
fcmovb
sub
das
add
and
je
call
rcrl
imul
insl
sbb
imul
inc
adc
mov
push
xor
xor
lods
mov
pusha
aas
xchg
add
fwait
js
roll
mov
out
xor
loopne
shrb
insb
or
inc
xchg
add
das
add
xchg
fisttpll
add
pop
mov
aas
xor
push
add
imull
insl
push
or
shlb
add
cs
jg
sub
add
inc
jo
out
push
lods
inc
ljmp
push
aad
push
out
insl
pusha
fwait
test
and
xchg
xor
sub
xor
xchg
call
comiss
xor
jne
or
jmp
sbb
xlat
je
mov
xlat
sbb
fs
xchg
fildll
adcb
adc
insl
and
jae
sub
pop
test
pop
inc
pop
lcall
pop
pushf
mov
pop
push
jo
vmwrite
and
into
push
mov
inc
ljmp
inc
pop
mov
mov
pop
adc
fs
ss
xor
orb
outsl
outsl
or
fwait
ret
addr16
lcall
pop
push
push
push
leave
mov
aas
sub
and
jnp
mov
adc
add
cmpsl
or
cs
push
sbb
sbb
iret
xor
adc
mov
dec
arpl
add
and
xor
inc
add
addb
das
sbb
addb
push
out
ljmp
stos
push
outsw
adc
and
push
sub
adc
sub
das
test
iret
cmp
push
sub
xor
ljmp
enter
sub
push
cmp
pusha
out
cmp
je
adc
inc
dec
scas
iret
xor
add
pop
subb
xor
stos
adc
push
sbb
dec
cs
push
jg
and
and
jg
enter
mov
pop
test
xor
jae
scas
insl
sub
add
xorb
push
pusha
adc
shrl
insb
aam
in
mov
test
dec
push
aad
sbbl
mov
shrl
lods
loop
pop
cmppd
inc
lea
jae
pop
adc
ja
mov
aas
pop
jmp
push
sbb
xchg
imul
inc
stos
outsl
add
mov
mov
push
jg
shlb
or
aam
cwtl
jg
and
addl
iret
push
mov
pop
addb
out
stos
clc
test
adc
xlat
jo
xchg
adc
xchg
iret
and
dec
mov
repz
sub
fistpll
adc
adc
pop
jb
sub
seta
nop
aas
sbb
adc
adc
push
xor
jae
xchg
xor
lahf
xlat
insl
pop
jnp
mov
jg
or
and
and
pop
out
push
adc
cmpsl
pop
aas
es
js
xchg
dec
sahf
mov
outsb
add
bound
jb
dec
xchg
lock
push
mov
push
sbb
jb
push
or
adcl
sbb
pop
inc
ret
shlb
inc
mov
cmp
ds
mov
inc
push
pusha
aam
and
dec
dec
push
divb
push
xchg
gs
and
or
popf
push
arpl
mov
dec
sbb
les
xchg
pop
push
jae
push
rcll
jg
and
inc
dec
xchg
iret
pop
add
mov
mov
fcomps
movsb
cmpsb
popl
mov
mov
nop
cwtl
bound
test
iret
mov
mov
sub
outsl
rorl
add
fimull
sub
outsl
ja
mov
or
dec
adc
cmp
scas
fistpl
mov
dec
sub
stos
add
xchg
sub
xchg
test
dec
xor
pop
adc
shll
sub
imul
mov
stos
add
lods
outsb
pop
xchg
mov
scas
fldcw
mov
inc
add
outsb
ja
test
lds
cmpsl
sbb
ja
or
xor
push
insl
outsb
lea
lahf
adc
js
aas
xlat
sbb
subb
notl
or
bnd
dec
fisttpl
push
push
push
and
jns
xchg
pop
jae
xor
imul
sub
push
jecxz
xchg
push
pop
jbe
mov
ja
imul
outsb
mov
jae
out
xorl
repz
cmp
sbb
add
sub
shll
sarb
jns
imul
lea
and
jb
sbb
sbb
aad
adc
adc
xor
iret
inc
or
and
xor
push
jg
push
mov
lret
pop
shlb
and
stos
jbe
adcb
and
xor
and
frstor
pop
sahf
xlat
rorb
add
cmpsb
add
or
js
add
or
add
cmp
loop
testl
les
adc
ja
mov
push
stos
cmpsl
test
or
pop
mov
fbstp
or
xlat
sbb
push
xchg
nop
jae
sbb
xchg
dec
aas
cmp
inc
pop
out
add
add
sub
xchg
daa
test
push
sub
jg
sub
mov
sbbb
or
mov
test
lret
aas
add
inc
loopne
dec
addr16
push
ffreep
push
xchg
push
pop
mov
popf
mov
dec
jns
stos
push
mov
sbb
xchg
fadds
xor
mov
xor
or
xchg
pop
aad
sbb
lcall
xlat
push
push
sbb
add
mov
test
movsb
push
inc
sub
add
cltd
dec
or
fisttps
aad
mov
dec
add
jmp
sub
push
ret
add
push
aaa
push
jae
adc
daa
arpl
pop
test
pop
pop
ret
add
scas
jbe
bound
mov
adc
and
mov
popa
add
adc
sub
fildl
aam
div
sub
push
fsub
jg
mov
inc
shlb
push
xor
xchg
jae
mov
add
push
dec
aaa
xchg
fs
movsl
mov
mov
jo
mov
dec
mov
pop
xor
js
xchg
mov
cmpb
cmp
out
orb
stos
insb
xchg
xchg
dec
dec
sbb
aaa
sarb
aaa
mov
js
pop
iret
push
stos
mov
cmpsl
and
test
daa
jae
lahf
add
jne
arpl
mov
popa
outsl
jecxz
adc
or
adc
jno
push
outsl
xchg
push
lret
dec
push
inc
add
imul
ja
adc
and
xor
lods
dec
daa
sub
push
rol
add
adc
and
in
cmpb
sub
arpl
sbb
mov
mov
cmc
xchg
lahf
sbb
fisubrs
cmp
scas
notb
inc
cmpsl
or
pop
xchg
out
pop
out
bound
add
mov
scas
insl
or
js
out
arpl
cltd
or
out
push
out
jb
push
addr16
addr16
mov
sub
iret
adc
arpl
push
das
mov
xchg
sbb
iret
xchg
and
cmpsb
mov
dec
lahf
jnp
push
rcll
je
or
dec
and
cmp
push
pop
insb
mov
xchg
xor
ja
adcl
pop
shll
pusha
xchg
cmpsb
dec
mov
mov
pop
push
jg
mov
insl
or
dec
dec
sarb
pop
push
jmp
add
inc
les
sbb
gs
mov
sbb
mov
adc
vmread
insl
dec
arpl
push
push
dec
mov
and
cmp
inc
and
test
jne
decl
test
lcall
jmp
lods
cmovne
clc
daa
cmp
in
bnd
in
mov
pop
adc
inc
or
cs
inc
loopne
icebp
pop
push
cmpsl
inc
jmp
imul
sbb
cmp
clc
in
aaa
out
jmp
mov
xchg
call
fldt
push
adc
stos
adcl
jg
pop
add
pop
or
sub
test
inc
adc
sub
sub
xor
loopne
fstp
int3
movzbl
inc
hlt
adc
pushf
mov
jo
dec
sbb
pop
in
adc
movsl
and
and
daa
xor
and
js
and
movlps
insb
pop
or
inc
cmp
jnp
xchg
xchg
or
add
jecxz
cmpsb
inc
mov
add
inc
outsb
addl
mov
and
ret
adc
or
adc
arpl
push
test
sarl
sbb
xchg
sub
pop
adc
or
mov
adc
imul
adc
adc
jle
mov
call
insb
pop
aad
hlt
lods
adc
and
mov
sbb
je
add
add
add
data16
inc
add
inc
ds
cli
sub
push
lock
mov
dec
sub
bound
cltd
mov
lock
inc
rorl
call
sub
add
mov
mov
rcrb
cmp
or
insb
adc
imul
mov
dec
fsubr
adc
or
sbb
inc
add
jmp
bound
bound
das
adc
or
out
jo
in
and
add
fstl
sbb
xchg
lret
stos
mov
sub
and
popl
fwait
shlb
push
mov
mov
or
sub
jg
cmp
adc
or
pop
add
inc
mov
xorl
cld
add
orl
insb
dec
xchg
lret
add
popa
mov
add
push
pop
xor
orb
pop
incl
popf
ljmp
jg
sbb
push
mov
mov
or
jne
jmp
or
fiadds
loopne
imul
imul
fisubl
outsl
xor
push
rcrb
and
add
orb
fldcw
add
dec
in
sbb
popa
inc
xor
imul
sbb
inc
fcompl
dec
jg
or
insl
mov
mov
adc
sbb
sbb
mov
and
adc
jb
and
inc
sbb
fsubl
mov
fildl
fcmovu
xchg
test
jle
adc
pop
ret
cmp
pop
jnp
dec
cld
add
cs
jge
daa
dec
pop
jmp
xor
lock
mov
inc
dec
or
rolb
push
and
pop
pushf
jmp
fmuls
arpl
mov
cmpb
inc
jmp
cmpsb
aam
aaa
xchg
mov
shlb
inc
and
xor
lock
outsl
js
add
fs
mov
push
and
sub
scas
inc
push
push
pop
sbb
adc
mov
add
inc
push
add
add
sbb
push
sbb
sub
testl
ja
mov
cmpsb
dec
sub
sub
jo
imul
aaa
push
notb
clc
dec
orl
dec
xchg
hlt
add
mov
in
lahf
pop
arpl
and
ret
mov
fists
pop
es
push
aas
sub
xchg
incl
cmp
jmp
and
mov
inc
loope
jmp
mov
add
xor
sbb
adc
arpl
shll
jmp
roll
xor
nop
and
mov
push
jle
mov
jnp
jle
or
sbb
inc
mov
fs
andl
pop
fucomi
mov
adc
xchg
ljmp
je
icebp
gs
test
sbb
mov
cltd
or
adc
sub
call
fisubs
add
jne,pt
inc
stos
xchg
insl
pop
dec
mov
fisubl
dec
cmp
dec
shrl
mov
cwtl
cwtl
or
dec
inc
lret
hlt
aad
jle
je
sub
popl
cli
dec
push
xor
movntps
js
loop
and
inc
xor
mov
mov
mov
or
lds
push
les
add
and
mov
xchg
sahf
xchg
dec
je
outsl
addb
add
inc
add
testb
sbb
dec
or
add
mov
subl
nop
nop
addr16
dec
inc
scas
imul
pop
add
sbb
mov
xlat
cmp
xchg
push
daa
xchg
fadds
loopne
shlb
scas
mov
cmc
adcl
add
mov
add
sub
in
cmp
mov
xchg
adc
rcrl
cwtl
scas
push
daa
in
ret
test
xchg
cwtl
or
mov
xchg
out
aam
leave
stos
inc
jns
xchg
lds
pop
sbb
mov
pop
dec
ret
push
js
test
aam
ja
pop
jns
adc
pop
cmpsb
mov
std
sbb
dec
lock
out
jecxz
js
nop
dec
mov
in
xor
jno
push
adc
mov
cmp
sub
and
adc
xchg
dec
js
mov
imul
push
int3
pop
in
add
push
sub
push
dec
push
test
xchg
inc
push
lcall
ret
shlb
inc
in
sub
sbb
sbb
mov
test
jo
pop
mov
sbb
aaa
iret
push
stc
scas
or
pop
jb
inc
js
mov
fidivl
add
xor
mov
shld
mov
emms
cmp
mov
push
loope
and
inc
rclb
adc
sbb
or
mov
mov
inc
rcr
jmp
or
push
mov
aas
dec
lret
or
jmp
aam
pop
or
rolb
outsl
jbe
js
sub
adc
add
das
inc
gs
mov
rcr
sub
xchg
push
and
mov
das
push
imul
add
push
iret
push
xor
cmp
lods
nop
or
push
pop
lds
stos
inc
outsl
cmp
push
xchg
ljmp
push
xchg
and
xchg
dec
jno
push
push
add
mov
mov
adc
loopne
cmp
pop
jne
xorb
in
cmpsb
cmp
add
cmpsb
cmp
adc
add
pop
inc
cmpsb
sbb
dec
punpcklwd
jbe
sub
adc
jge
lret
jnp
and
or
nop
inc
mov
mov
in
imul
mov
pop
adc
mov
dec
add
xor
xchg
mov
clc
sti
arpl
mov
cmp
jle
mov
ja
xor
sahf
dec
pushf
and
inc
mov
addb
inc
sbbl
jecxz
dec
jecxz
push
jge
sub
retw
sub
mov
mov
sub
pop
rcrb
movntq
sbb
push
pop
xlat
in
or
test
and
push
jb
loopne
mov
out
xor
pushl
dec
ret
sbb
stos
pop
mov
dec
xor
inc
idivl
mov
add
ss
jno
fadd
sbb
fcomps
sub
xlat
std
aaa
add
cmp
push
adc
mov
lock
mov
insl
call
lds
test
in
pop
mov
inc
sub
fnstsw
inc
mov
push
mov
lods
jno
fiadds
dec
cmp
call
mov
orl
sbb
aam
sub
xchg
inc
add
and
xchg
pop
cmpsl
dec
cltd
push
jge
test
sti
jo
xor
loop
rolb
pop
mov
jns
or
addl
cmp
or
bound
adc
cmp
sbb
mov
dec
fcoml
pop
clc
xchg
pop
fistpll
aad
adc
push
mov
idivl
xor
cli
jecxz
popa
loope
cmp
jecxz
rorl
push
mov
sbb
popf
and
cld
test
dec
test
fstpt
mov
pop
lret
loop
sub
pop
adc
add
fildl
jmp
inc
cld
push
daa
gs
add
adc
in
xchg
ja
mull
repz
icebp
adc
or
or
ret
pop
pop
mov
movl
ljmp
adc
add
div
mov
inc
or
insb
ja
rorb
xor
in
inc
stos
loop
sbbb
push
adc
roll
lock
xor
dec
mov
les
dec
xor
lods
popf
sbb
cwtl
cld
mov
hlt
insb
cmp
adc
mov
jae
xchg
outsb
dec
sbbl
out
outsb
lods
cld
add
loopne
xlat
outsl
cmpsl
add
fnop
pop
mov
arpl
and
mov
pusha
stos
ss
inc
dec
pushl
mov
push
rclb
fsubr
test
push
sub
sub
fcoms
fcoms
and
test
sbb
fsubrl
mov
dec
or
filds
aas
and
dec
dec
jb
daa
push
mov
test
dec
dec
pop
and
adc
cmp
nop
mov
cmp
adcb
xor
cmp
jp
inc
sub
sbb
push
dec
fldcw
and
mov
add
in
jmp
loopne
and
cld
nop
mov
rol
xchg
cmc
push
dec
fmull
push
inc
mov
les
push
sub
xchg
add
shlb
mov
sbb
mov
sbb
adc
je
insb
je
or
or
je
rcr
mov
or
jmp
dec
in
fwait
mov
outsl
add
sbb
cmp
add
or
add
jo
test
cmp
ja
sub
leave
and
scas
xor
or
mov
and
sub
cmpsb
mov
jl
xor
cmp
add
push
mov
icebp
shr
push
or
push
and
rcrl
dec
and
icebp
pop
call
jae
adc
mov
xchg
je
and
push
pop
xchg
lods
sbb
adc
sbb
and
jmp
jne
and
repnz
add
pop
and
fldl
adc
pop
fcoml
imul
int3
fs
push
rorb
push
add
call
bswap
push
nop
push
mov
xlat
cld
mov
adc
mov
and
xor
and
andb
and
inc
pushf
imul
lss
das
mov
jno
add
ret
fdivrs
test
sub
add
inc
xor
sbb
in
push
pop
adc
inc
hlt
je
xor
imul
cs
test
pop
hlt
adc
les
inc
sub
push
jb
push
dec
xchg
outsb
sbb
mov
dec
clc
and
push
hlt
push
and
mov
or
adc
cli
add
add
imul
pop
cmpsl
test
mov
aam
pop
inc
sar
ss
mov
enter
jnp
mov
dec
in
cmp
dec
sbb
and
in
and
shl
divb
xor
pop
je
arpl
popa
fidivrl
or
fnop
mov
xchg
aam
fninit
es
jl
or
test
dec
sbb
popa
mov
push
or
arpl
les
cmovno
loop
inc
shlb
fs
mov
pop
rcrb
repz
jle
fwait
dec
adc
xor
or
addl
and
and
jns
addb
les
movups
and
and
or
icebp
mov
jp
xchg
insl
pusha
jnp
sbb
add
add
fisubrs
and
outsl
jae
es
mov
mov
jp
negb
sti
filds
xchg
sbb
jno
rorl
jne
in
mov
outsb
pop
vmread
push
jl
inc
or
std
mov
jnp
push
jl
in
into
mov
inc
scas
syscall
subl
outsb
inc
adc
fsubrl
pop
xchg
das
mov
jae
outsb
data16
mov
xor
insb
pop
fyl2xp1
loop
es
daa
pusha
jbe
pop
dec
test
je
jge
mov
push
adc
sbb
xchg
movl
add
loopne
or
pop
mov
or
sub
or
cmp
add
pop
push
ja
dec
cmp
sub
enter
sbb
pop
imul
xchg
ja
test
mov
aam
sti
loopne
test
sub
xchg
lock
test
test
add
es
sbb
scas
mov
in
ret
xchg
cs
mov
and
sbb
jb
js
js
enter
pop
dec
jns
jb
ret
push
push
push
inc
or
jns
mov
arpl
mov
and
adc
and
push
adc
insb
scas
dec
leave
add
repnz
lahf
and
pop
and
jle
xor
orl
stos
and
xchg
mov
add
add
icebp
popf
repz
imul
ljmp
cmp
push
sub
loope
xchg
or
xchg
loop
mov
mov
bound
adc
enter
jmp
lahf
jb
test
jno
xchg
adc
xlat
movsb
icebp
les
push
mov
cld
adc
xor
sub
inc
and
arpl
cmp
and
jl
shlb
sbb
xlat
cltd
pop
mov
add
jl
mov
push
mov
cmp
and
xor
or
adc
pusha
jb
mov
mov
into
mov
sub
xchg
clc
ret
cmpl
push
pop
xchg
rclb
in
mov
push
es
jo
adc
mov
ljmp
loopne
imul
inc
or
fsts
jge
mov
xchg
and
movsb
push
fsubrs
in
gs
js
mov
and
cld
sub
mov
push
push
rclb
daa
mov
je
cmpsl
sti
sbb
add
adc
jmp
mov
fmuls
sub
clc
jmp
dec
hlt
cs
cmpsb
inc
xor
cmp
and
or
movb
add
cmp
adc
xor
sbb
andl
clc
lods
jge
outsb
mov
and
push
out
daa
add
test
push
or
or
ljmp
jbe
inc
stos
mov
and
adc
daa
adc
test
inc
add
jae
mov
pop
xor
aad
dec
adc
mov
mov
es
imulb
or
cmp
push
sbb
pusha
jle
xchg
jnp
icebp
subw
lock
xor
push
or
mov
cmp
inc
andb
leave
cmp
ret
addb
add
imulb
sysret
in
and
xchg
or
mov
xor
inc
subl
xchg
scas
sbb
cmpsb
push
subl
sub
jg
cltd
inc
ret
shll
ficomps
mov
adc
out
fisttps
loope
jb
daa
dec
add
inc
adc
push
and
fiaddl
iret
push
inc
mov
push
push
jbe
mov
or
jo
js
push
push
adc
mov
or
cmpsb
adc
in
adc
and
adc
xorb
shl
add
das
add
pusha
sbb
add
fs
mov
or
mov
out
xchg
jne
mov
mov
and
push
mov
mov
fucomi
lock
bound
and
push
add
das
add
jg
inc
add
pop
xor
and
xor
push
add
xor
mov
mov
insl
ret
and
or
adc
fwait
and
adc
dec
jne
out
ljmp
or
and
or
testl
add
and
shll
xlat
inc
mov
fcmovb
or
ret
pop
and
sbb
cmp
or
and
dec
or
in
in
or
and
fcmovbe
and
dec
cmp
cwtl
fs
push
popa
dec
xchg
push
xchg
outsl
fiaddl
push
and
jmp
outsb
enter
inc
cmp
dec
ret
or
xor
xchg
divl
inc
sbb
xlat
mov
in
iret
sbb
enter
sub
sbb
inc
adc
inc
enter
inc
sbb
test
cmp
imul
stos
int3
in
add
add
push
pusha
adc
mov
mov
dec
jg
mov
pusha
subl
mov
sahf
or
orb
pop
jp
aad
inc
mov
add
sbb
ficompl
shl
sbb
lea
fildl
inc
jae
int
aam
aad
sbb
mov
test
jno
lods
or
jge
insl
insb
xor
movsb
aas
jg
mov
sbb
nop
into
mov
in
inc
jne
mov
cmp
pop
xor
sbb
scas
or
or
dec
xchg
push
mov
or
lret
imull
daa
shrd
jno
gs
cli
push
aad
push
sbbb
jae
adc
add
add
mov
xchg
xchg
sub
inc
das
in
pop
mov
js
inc
or
push
mov
xchg
adc
push
xlat
or
fs
in
int3
xchg
cmpsb
sub
outsl
cmp
divl
xlat
sub
add
push
lcall
or
mov
mov
in
cmp
js
push
mov
idivl
jl
pop
out
imul
test
imul
out
xor
cwtl
cmp
mov
nop
movsb
inc
test
aaa
xchg
out
lods
jnp
notl
imull
jnp
testl
mov
jae
push
imul
cmp
mov
es
xor
imul
sbb
xor
scas
nop
out
inc
aam
nop
out
imul
imul
sub
or
in
cmp
mov
repz
sub
fnsave
nop
dec
hlt
or
cmp
dec
movsl
ljmp
mov
cld
pop
adc
inc
enter
add
int
mov
sub
test
or
nop
test
imul
out
and
xor
cmp
out
imul
vaddsubps
inc
pop
imul
push
cmp
outsb
xchg
dec
jae
xor
cmp
mov
cmp
andps
test
cmp
push
dec
xor
jae
xor
xor
jae
xor
adc
xor
dec
push
dec
push
xor
dec
jae
pop
inc
pop
push
dec
jae
sbb
cmp
test
adc
mov
pusha
sbb
les
inc
mov
les
xchg
mov
arpl
inc
jns
fs
or
leave
gs
xchg
incl
and
mov
adc
shlb
adc
sbb
inc
push
notl
lahf
xchg
icebp
test
push
jns
jmp
sub
iret
pop
xor
push
movl
mov
xchg
addr16
mov
and
mov
push
adc
push
xchg
sbb
inc
je
pusha
xchg
mov
push
inc
fisttpll
movl
push
push
lods
cld
dec
stos
in
mov
les
icebp
fs
dec
outsb
jmp
adc
fidivl
cld
pop
xor
das
les
push
and
xor
dec
inc
je
sbb
dec
in
je
xchg
out
pop
push
xchg
add
pop
adcl
das
mov
or
cwtl
xor
inc
push
lds
roll
mov
dec
xchg
pushf
and
loop
adc
sbb
or
push
in
lods
dec
es
xchg
clc
pop
orb
mov
flds
adc
cmp
or
dec
in
jae
dec
jbe
pop
mov
xchg
nop
cltd
and
orb
sub
xchg
sbb
filds
inc
cmp
cmp
xchg
lock
xchg
cmp
push
jg
dec
and
xchg
idivl
mov
pop
inc
shll
cmp
jae
dec
enter
cwtl
inc
pop
shrl
shrl
xchg
push
or
nop
mov
inc
push
adc
mov
dec
rolb
nop
fsubr
push
add
jle
movl
mov
push
js
mov
pop
test
outsl
and
xchg
xlat
test
movl
mov
push
xor
xor
cmp
arpl
jne
pop
in
jns
fists
inc
cmp
in
or
lock
and
fadds
push
popa
xchg
aas
mov
mov
jne
pop
sub
inc
xchg
adc
xchg
nop
pushf
pop
push
pushf
add
into
push
sbb
in
mov
inc
sbb
mov
lret
sbb
pop
inc
add
push
and
or
mov
adcb
pop
sbb
push
sbb
adc
movl
jbe
pop
mov
fcompl
rcrb
mov
adc
and
add
xlat
pop
cmp
adc
pop
add
insb
sahf
out
js
fs
sbbb
push
push
xor
mov
inc
inc
andl
and
lahf
pop
pop
test
cmp
xchg
fcomi
and
adc
fists
push
in
pop
inc
test
jns
sbb
jg
mov
cld
adc
mov
aad
pop
mov
sub
loope
subb
test
sub
fdivs
fdivrs
inc
filds
inc
shlb
dec
leave
ds
js
or
mov
inc
inc
cmpsb
sub
js
mov
or
cmp
xlat
pop
cmp
insb
inc
push
adc
pop
nop
test
ja
dec
lods
fistl
popa
iret
pop
xor
push
xor
sub
pop
loopne
addr16
scas
adc
adc
das
fiadds
inc
aam
pop
in
and
mov
sbb
sbb
dec
xor
jae
and
out
dec
dec
punpckldq
out
test
push
cs
movsl
and
mov
out
pop
mov
pop
lahf
das
xchg
test
sub
xlat
pop
cmp
lahf
and
or
mov
sub
lods
pop
mov
and
test
nop
test
add
push
jl
sbb
mov
pop
add
or
push
aam
scas
stos
fs
dec
add
loopne
xchg
push
shll
sbb
jo
mov
nop
push
mov
pusha
pushf
outsl
enter
inc
and
out
jge
or
inc
shll
adcl
test
pop
push
test
sub
sbb
pop
inc
pop
add
sbb
mov
test
loop
push
fstpl
lods
add
xor
add
mov
outsb
or
cmp
stos
and
rcll
lods
push
or
pop
xchg
push
sbb
insb
hlt
push
pushf
cmpsb
pop
mov
push
sbb
jle
inc
cmpsb
mov
bound
add
arpl
dec
add
jle
fs
mov
pop
mov
repz
xor
pushf
pusha
adc
sub
aaa
subl
fs
add
add
cld
jmp
clc
enter
shlb
and
inc
push
sahf
jecxz
or
scas
xor
sbb
je
cwtl
adc
bound
pop
and
xchg
cmp
scas
je
push
add
dec
shrb
jb
mull
pop
jb
insl
imul
es
push
testl
loope
xchg
or
mov
mov
je
xchg
inc
inc
inc
roll
cld
inc
jl
subb
or
subl
or
mov
pushf
mov
push
adc
aad
sbb
xor
pop
dec
sbb
xchg
pop
scas
pop
pusha
mov
fs
pop
pusha
fs
or
lret
adc
mov
add
pusha
daa
adc
xlat
inc
pop
nop
cmpb
and
push
pusha
sbb
shll
add
cmpsl
mov
push
mov
xor
aam
dec
adc
adc
push
push
and
lahf
pop
mov
xchg
and
movsl
and
mov
inc
popl
sbb
cmp
pop
sub
add
adc
popa
mov
push
popa
pusha
jo
sbb
call
arpl
push
pushl
push
andl
or
xchg
adc
add
mov
sub
or
pop
mov
adc
dec
dec
dec
and
and
or
adc
xor
pop
sbb
jl
iret
adc
bound
mov
adc
mov
popf
decl
paddd
cmp
movsb
aam
mov
or
jbe
lock
push
clc
test
mov
cmp
cmp
fs
mov
cmp
in
sub
inc
xor
inc
inc
push
add
les
pop
enter
movl
jl
pop
fs
mov
or
jns
lret
shlb
js
jge
out
dec
dec
mov
pop
pop
push
push
idiv
mov
xchg
and
or
das
or
hlt
sub
jo
shll
push
push
lret
push
aas
push
jl
jp
aas
mov
lods
xchg
ret
sbb
cmp
xchg
sub
jb
test
push
enter
cmp
sub
dec
pop
pop
in
in
aaa
mov
mov
xor
cwtl
dec
daa
mov
fidivs
add
pmuludq
pop
addb
jb
xorb
push
xor
ja
hlt
or
inc
stos
pop
subl
or
mov
daa
lds
adc
inc
inc
pusha
fnstsw
jge
mov
lods
inc
jmp
lods
pop
shl
enter
sub
push
push
jne
lods
xor
adc
test
rcrl
imul
sub
adcb
sub
sbb
es
jecxz
les
push
cmp
xchg
inc
push
mov
inc
add
cs
adc
or
insb
loop
push
mov
and
jge
pushf
add
mov
jbe
push
ss
lahf
pop
adc
scas
push
cmpl
mov
roll
lods
jmp
call
adc
mov
es
call
cs
adc
dec
out
push
or
add
push
pushl
cmpb
pop
addb
je
jmp
sarl
cmpsb
fimull
mov
hlt
ja
or
repnz
popa
dec
xchg
movsb
cmp
js
test
mov
je
fdivr
roll
add
rcr
daa
test
dec
dec
ficoms
mov
or
sarl
cmp
xor
shlb
pushf
pushw
addb
xor
add
sub
imul
adc
xchg
or
daa
push
mov
add
inc
fstl
mov
push
pushf
xor
cmpsb
or
ds
cmp
cmpb
and
sbb
fildl
xchg
fsubrs
sub
hlt
daa
and
jbe
lea
mov
mov
insb
inc
roll
sbb
lods
dec
test
or
jne
cmp
xor
mov
adc
cmpsl
rolb
mov
imul
jge
sub
jne
loopne
out
cmp
mov
or
aas
aad
xchg
add
es
jne
mov
push
outsl
clc
insl
inc
mov
lea
dec
incb
ret
or
test
andb
aad
push
in
aad
add
inc
movsl
sbbb
and
pusha
sub
lock
ficompl
mov
xchg
lds
push
mov
out
cs
mov
add
mov
cwtl
clc
enter
pushf
push
mov
sbb
jge
cld
cltd
dec
lahf
nop
adcl
sub
push
push
pop
nop
push
xchg
pop
or
push
clc
mov
add
test
repnz
lds
aad
mov
dec
sub
fadds
insb
adc
lcall
inc
add
mov
inc
ret
jae
or
das
and
aad
mov
xchg
or
mov
push
ret
xor
sub
jb
or
shll
xchg
mov
pop
push
data16
mov
mov
sub
inc
idivb
lret
jne
inc
xorb
push
and
fs
pop
mov
insb
rorb
and
je
iret
push
sbb
adc
pop
es
stos
push
jnp
push
cmpb
incb
add
add
jb
push
add
xor
testb
add
rolb
adc
push
jo
out
push
pushf
sar
movntps
mov
or
bound
and
int
or
popf
pop
sub
jnp
add
inc
or
adc
mov
dec
add
fists
xchg
xor
add
nop
pop
sbb
mov
mov
ret
ja
js
loope
lret
mov
mov
dec
dec
movsb
mov
jnp
dec
add
mov
mov
mov
sbb
cmp
ljmp
mov
sub
adc
fs
mov
nop
dec
sti
es
adc
cmp
ret
or
xchg
xchg
inc
ret
jne
lock
daa
dec
cmp
pop
fmuls
push
mov
shlb
in
cmp
sub
pushf
xchg
add
lea
sub
pop
xor
pop
and
ret
xchg
ret
adc
sub
push
ret
pop
ret
sbb
loop
faddl
in
repnz
je
ret
mov
xor
test
or
nop
les
add
clc
xchg
and
jl
push
enter
les
pop
pusha
dec
adc
mov
clc
or
xor
loop
clc
fwait
les
popa
addr16
and
out
pop
and
in
add
outsl
lds
mov
jbe
push
inc
sub
outsl
addr16
mov
add
inc
inc
lds
scas
sar
mov
pop
dec
mov
js
daa
inc
imul
xor
add
add
or
add
mov
nop
or
mov
mov
lret
mov
sbb
ffree
mov
push
cs
mov
and
sub
xor
in
in
lea
push
stos
fwait
subl
mov
sarl
stos
xchg
enter
ret
or
aaa
sub
push
inc
push
xchg
sti
es
lods
iret
pusha
dec
or
rcl
jg
jmp
inc
fmull
mov
nop
iret
leave
ret
iret
addr16
sub
imul
pop
sub
cmp
push
xorb
xchg
iret
push
xchg
xor
pop
cmp
and
inc
pop
mov
mov
push
jo
mov
pop
popa
lods
test
iret
push
sbb
je
xor
mov
add
nop
push
fmul
jne
add
dec
push
mov
xlat
pop
lret
cmp
sub
lret
subb
inc
add
mov
mov
add
lret
jae
pop
lret
cs
js
iret
data16
adc
lret
jae
shlb
mov
js
int3
iret
cmp
mov
pop
test
in
adc
test
jg
lret
xchg
rcrl
xor
mov
mov
or
adc
test
flds
jecxz
dec
out
dec
out
repz
dec
into
and
stos
pop
sub
or
pop
jnp
push
add
mov
lahf
cmp
in
sahf
mov
or
dec
mov
das
mov
movb
out
orb
and
pop
add
mov
sbb
pop
mov
inc
dec
dec
pop
leave
les
and
je
or
lcall
fsub
loopne
negb
inc
es
xlat
adc
add
movsb
adc
cltd
or
jno
jnp
stc
lods
adc
push
jg
sub
add
push
repnz
js
push
inc
outsb
mov
xor
add
cld
inc
faddl
movsl
movsl
push
cmpsl
and
imul
mov
call
call
aas
rorl
jne
jge
hlt
loope
aaa
xor
add
imul
movl
repnz
cld
and
cmp
add
pop
cwtl
push
sbb
movb
or
jg
and
mov
pop
inc
add
daa
mov
or
add
add
setp
add
add
sbb
inc
add
ss
jge
hlt
add
cmp
push
and
or
push
lret
pushf
adc
sti
jle
lods
add
sub
adc
cwtl
loope
iret
cs
lcall
pop
push
xchg
ja
ror
dec
lcall
sub
or
and
adcl
daa
shrl
push
or
xchg
repz
and
push
mov
xchg
jne
xchg
lret
fnstenv
rolb
adc
or
pop
adc
dec
loopne
repz
fsubrs
and
push
pop
stos
and
push
sbb
and
cli
inc
or
mov
and
mov
cli
jecxz
xchg
cmc
jle
outsl
add
fimull
xor
adc
and
dec
add
jbe
cld
into
jns
inc
pop
add
dec
popa
movsl
std
mov
inc
adc
mov
fidivl
lcall
loopne
jg
mov
push
lods
das
fisubrl
mov
call
push
xor
dec
cmp
xor
insl
cmpsl
cmpsl
and
shlb
addl
push
inc
sbb
push
xor
loop
add
jmp
rolb
clc
pop
mov
test
ret
mov
jge
jge
sub
jmp
jne
mov
nop
or
clc
add
pop
lock
xchg
push
or
fld
lret
mov
jl
push
and
push
mov
enter
xor
test
or
sub
idivl
push
mov
gs
xor
rcrb
xlat
push
icebp
inc
xlat
jne
add
fucomp
roll
aas
sub
pop
and
movsb
sub
rolb
bound
out
lds
cmpsb
outsl
push
or
mov
or
adc
movsl
cs
xlat
push
dec
mov
iret
xor
add
inc
adc
and
adc
je
xor
push
das
pop
cmp
push
or
inc
mov
mov
push
dec
aam
mov
pop
test
mov
test
pop
or
mov
or
pop
sub
outsb
or
movsb
fildll
in
inc
rcrb
xor
xchg
pop
or
dec
sbb
cmpsb
fs
jno
test
bound
push
sub
popa
aaa
pop
sub
js
sarl
mov
add
fbld
push
cmp
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
out
mov
push
push
push
pop
pop
pop
popa
bound
addr16
imul
jo
mov
jbe
js
jp
xor
xor
xor
cmp
sub
xchg
fdivr
push
add
cwtl
lea
mov
add
movsw
movsb
lea
iret
cmpsb
mov
test
sub
cmp
mov
inc
xor
cmp
out
add
fcoms
hlt
test
cmp
mov
push
mov
and
dec
in
lods
insl
mov
inc
aas
ret
sub
outsb
or
push
rorl
push
inc
outsl
sbb
push
adc
cmp
mov
into
or
int
insb
xor
lock
fldcw
sbbl
pop
and
lret
data16
fidivs
fistpl
es
fistpll
or
das
je
mov
or
sub
and
push
je
jo
mov
push
icebp
jp
cmpsb
and
push
mov
data16
test
or
sahf
pop
add
push
fwait
push
dec
jnp
imul
push
mov
push
ficompl
xor
pushf
mov
pusha
push
inc
jmp
and
add
xor
orl
aad
xlat
cmpsb
test
xor
add
or
insl
pop
sti
or
adc
ret
and
js
stos
cmp
inc
js
xchg
testl
add
test
mov
filds
push
je
sub
inc
outsl
xchg
mov
sbb
jb
and
push
xchg
fldt
inc
dec
nop
xchg
push
and
mov
mov
ljmp
je
and
cmp
in
jbe
push
push
ficoms
aaa
leave
cmpsl
add
pop
fmull
lcall
das
rorb
xchg
xchg
xlat
push
loope
aaa
xor
xlat
pop
push
push
or
andb
and
dec
ror
jp
insb
insl
test
jl
xor
mov
push
inc
ja
mov
rcrl
nop
pop
test
dec
xor
jle
add
jno
and
add
jmp
dec
cmp
xchg
addr16
or
into
or
cmpsb
xchg
xchg
test
adc
add
and
cltd
les
xor
or
dec
iret
adc
xchg
pop
fisttps
adc
and
push
movntq
add
adc
and
adc
jns
rolb
iret
lea
aaa
or
cmpsb
mov
outsl
or
es
aas
mov
sub
or
arpl
inc
movl
stc
das
shll
test
mov
ss
inc
and
inc
jp
xor
es
and
es
enter
mov
mov
adc
out
pop
sbb
dec
adc
sbb
aas
pop
outsb
or
mov
in
inc
orl
mov
dec
insb
aam
mov
cmp
inc
mov
and
sub
push
test
popf
adc
rcl
loopne
sahf
sbb
mov
adc
mov
fdivl
and
mov
in
xor
dec
xor
jl
popf
add
dec
sub
testl
xchg
push
inc
or
scas
pop
arpl
sub
mov
popa
add
pusha
xchg
sbb
push
das
into
les
mov
or
daa
fisttpll
data16
mov
dec
pop
mov
leave
nop
ret
push
icebp
lret
adc
jg
into
clc
mov
mov
push
call
jecxz
in
jl
push
xor
pop
sub
add
xlat
inc
sub
sbb
inc
cwtl
and
and
fcoms
aas
mov
movsl
mov
fsubrs
xor
imul
test
mov
mov
shrb
add
jmp
jae
stos
add
jecxz
mov
xchg
pop
push
adc
push
out
push
sub
push
adc
out
test
jle
enter
cs
push
pop
or
push
hlt
add
std
movsl
xor
mov
inc
dec
mov
inc
je
dec
pusha
jo
sub
int3
cmpsl
js
or
in
jnp
adc
add
and
test
mov
fbstp
stos
loopne
jnp
push
imul
dec
frstor
sbb
fisubrl
jmp
sbb
in
pop
inc
xchg
aaa
sbb
xchg
add
jge
outsb
addb
test
sub
cmp
add
aaa
xor
fwait
xchg
addl
fiaddl
dec
push
shrl
xor
cmp
mov
iret
inc
or
das
add
enter
orb
fdivs
leave
dec
xchg
sbb
add
sub
dec
xor
ret
ja
and
and
jecxz
dec
inc
push
cmp
sub
insl
pop
fwait
sbb
mov
jo
sbb
mov
push
insl
popa
push
and
cmpsb
sub
mov
nop
mov
dec
dec
movsl
add
add
mov
jge
fwait
movsbl
out
push
add
lret
out
out
or
mov
mov
jp
mov
xor
and
sub
adc
inc
cmp
jmp
call
andl
push
push
daa
inc
stos
pop
insb
dec
add
pop
jge
or
adc
mov
test
rorl
and
shrl
mov
sbb
pop
jo
jne
js
xchg
xor
ret
nop
lcall
roll
xchg
push
push
lgdtl
add
mov
pushl
push
mov
or
movsb
push
and
push
mov
and
shll
push
push
dec
adc
and
push
or
add
fldl
shl
sub
mov
cs
lds
dec
xchg
fistpl
aad
nop
fs
stos
testl
out
inc
or
mov
inc
je
or
orl
adc
mov
mov
adc
fstl
mov
jmp
lret
xchg
xchg
pop
xor
inc
out
xchg
xchg
xchg
insl
mov
mov
adc
hlt
add
sub
cld
fildl
add
add
pop
add
lret
jmp
add
add
xor
stos
cmp
leave
inc
add
dec
add
xor
cmc
mov
clc
scas
je
sbb
adcb
push
dec
cmpsb
ss
test
push
xorb
mov
rcrl
adc
mov
in
fstpl
mov
push
lock
push
ds
lret
and
loop
and
or
pusha
and
or
dec
inc
pop
andl
inc
imul
lahf
add
add
mov
add
test
lahf
add
pusha
adc
mov
sub
push
adc
jno
fsubrs
addb
jle
adc
in
repnz
hlt
adc
ds
sub
insl
lock
aas
mov
rclb
jl
jmp
daa
inc
sbb
rolb
fsub
mov
sarb
and
mov
dec
cmp
mov
lcall
nop
popa
push
add
scas
dec
jne
pop
adc
add
lahf
mov
add
push
dec
lods
enter
or
loope
or
icebp
rorl
add
es
push
push
or
dec
shlb
push
inc
in
dec
enter
and
lods
jo
jecxz
sub
out
sbb
stc
mov
push
jnp
push
mov
add
loope
pushf
out
out
xor
fcomip
xchg
es
push
pop
adc
loopne
adc
and
adc
aas
inc
mov
dec
sub
les
sahf
mov
daa
add
dec
add
out
shll
lock
inc
imull
push
inc
inc
lea
out
popa
mov
sysret
lahf
push
inc
popa
cmp
outsl
and
rolb
push
push
push
and
add
int
add
add
pushf
and
mov
cmpxchg
inc
or
in
sbb
clc
clc
cmpsb
loop
mov
push
push
or
push
in
clc
push
and
inc
fs
lahf
sbb
pusha
inc
mov
inc
mov
push
inc
repnz
out
inc
adc
repnz
repnz
mov
cvtps2pi
cmp
iret
xchg
mov
push
rorb
jnp
adc
push
and
in
orl
stc
aaa
pop
loope
jecxz
or
mov
les
das
inc
add
adc
jbe
pop
xchg
repnz
xchg
daa
das
mov
inc
repz
push
in
dec
outsl
divb
inc
cmc
das
pop
push
les
add
adc
in
imul
push
cld
sbb
call
adc
test
inc
lods
push
aaa
sub
add
pushf
push
jb
leave
leave
movsb
test
pop
mov
adc
push
das
and
inc
movsl
xchg
mov
setne
sub
mov
dec
lds
inc
and
adc
adc
rcrb
not
mov
lods
inc
rclb
sub
leave
test
shr
fs
mov
sbb
jmp
mov
inc
push
bound
add
daa
fisubrs
jp
jb
sbb
sahf
hlt
repnz
setns
shl
and
fisttpl
rol
adc
es
test
sbbb
jmp
mov
adc
cmpsl
mov
inc
pop
push
fidivl
shll
stos
jp
shll
push
and
push
and
gs
arpl
dec
stos
or
stos
movb
dec
jno
scas
inc
imul
jmp
outsl
pop
int
push
hlt
push
add
adc
and
repnz
enter
jae
xchg
sbb
sub
xchg
mov
rorl
pushf
sub
sbb
int
add
mov
jmp
pop
or
mov
dec
dec
pop
ss
fcomps
push
loopne
push
fdivp
in
and
cmp
in
inc
es
and
nop
cmpsl
mov
cmpb
loope
divb
xor
repnz
xor
xor
pop
mull
dec
xor
xor
imul
xor
sbb
rclb
mov
mov
push
in
push
orb
cli
das
push
push
movsb
add
or
les
push
or
cmpsl
cmp
push
xor
push
pusha
and
and
add
xchg
inc
pop
addr16
or
orb
and
aaa
adc
mov
sbb
xor
adc
cmp
pop
int
xchg
jae
add
cwtl
repnz
inc
inc
xchg
pushf
add
inc
jbe
insl
cli
rcll
pop
add
cmpsb
movsb
lods
lahf
call
cmp
loopne
xor
and
cmpsl
jg
sbb
add
cmp
dec
xlat
pop
sbb
icebp
sbb
setns
or
aaa
or
sub
icebp
or
std
and
cmpsb
or
js
test
push
pop
inc
jmp
cwtl
or
xchg
cmc
adc
mov
jb
nop
cmpsl
lret
pop
cltd
xchg
xor
in
cs
cs
push
mov
sti
aas
mov
mov
mov
out
cld
inc
mov
test
mov
test
inc
sub
vzeroall
add
pop
test
dec
adc
xor
std
pop
adc
mov
push
push
mov
pop
les
cmp
xor
dec
lock
xor
nop
rorb
mov
es
inc
jno
ret
nop
push
or
sbb
cli
cwtl
sbb
sub
sub
sbb
rclb
ret
dec
rcll
in
or
adc
rcrb
sbb
int
jae
inc
dec
dec
mov
mov
cmc
and
and
imul
imul
dec
imul
inc
push
sub
cmp
cmpsb
push
push
pusha
pusha
pop
dec
shll
push
imul
inc
lock
daa
daa
daa
insl
inc
push
or
dec
adc
daa
daa
daa
sbb
and
or
and
and
and
xor
sub
add
jle
rorl
sbb
xchg
imul
jl
sbb
dec
xchg
or
incb
lock
add
scas
popa
add
adc
adc
aam
jecxz
lock
jb
add
cmp
mov
dec
cs
mov
jl
dec
aam
lock
add
xchg
adc
mov
jb
nop
dec
int3
mov
into
cmpl
cwtl
and
mov
jl
les
icebp
mov
or
lahf
or
inc
dec
mulb
add
sub
jne
cltd
loop
inc
mov
xor
inc
cmp
xor
nop
xchg
sub
inc
sub
dec
insb
xor
popa
mov
inc
rolb
xor
jbe
test
inc
dec
pop
in
clc
adc
sahf
cmpsl
xor
leave
mov
push
pusha
inc
and
dec
rcr
sbb
sub
sub
dec
xor
sub
cmp
loop
insb
jne
add
pop
int3
popf
add
fstpl
fwait
dec
outsb
fistpl
fs
daa
imul
cmp
ret
je
pop
repnz
sbb
dec
fildll
fdivs
sti
pop
push
je
addl
pop
add
jmp
jmp
mov
push
xchg
sub
addl
pop
jb
mov
push
in
inc
cmp
loop
and
js
roll
or
mov
fldl
push
jno
push
xor
data16
push
or
or
mov
maxps
mov
leave
mov
mov
mov
pop
or
sbb
jne
adc
aaa
das
push
sbb
push
imul
pop
xor
xchg
stos
and
fiadds
clc
push
jae
dec
xor
bound
mov
dec
std
mov
mov
mov
inc
cs
xchg
mov
sbb
hlt
cmc
and
push
das
insl
inc
push
inc
lods
mov
cmp
adc
or
nop
or
mov
mov
ret
jnp
push
dec
jae
inc
mov
cmp
pop
xor
pop
dec
mov
test
mov
fmull
and
sbb
mov
sbb
cmp
in
imul
push
sub
dec
in
dec
mov
and
sbb
and
jbe
inc
adc
dec
repnz
mov
fcomps
mov
fildl
pop
xchg
pxor
fadds
in
sbb
mov
inc
pop
pop
hlt
jge
xlat
jbe
or
xchg
jo
mov
cmpl
dec
gs
test
cmp
sbb
add
icebp
cmp
lret
inc
rorl
push
sbb
test
mov
in
xchg
or
outsl
out
inc
cmp
psrlq
andb
add
inc
mov
das
add
xlat
fisttps
dec
lcall
or
movsb
and
pop
jns
inc
je
loop
add
mov
inc
or
mov
adc
pop
lsl
fidivl
aam
nop
aas
pop
sbb
mov
or
mov
icebp
cltd
sub
pop
nop
sbb
adc
nop
es
je
outsl
cmpsb
add
adc
jno
and
inc
mov
and
cltd
pop
add
push
out
prefetchwt1
test
xor
xor
notl
lcall
daa
roll
dec
cmp
dec
adc
inc
cs
pop
xchg
xor
iret
xchg
push
jge
cld
mov
or
mov
dec
fiadds
pusha
jne
or
mov
or
call
sub
and
adc
or
rcrb
test
pop
scas
or
add
sub
and
dec
sbb
imul
add
mov
jmp
push
jmp
pop
mov
fdivr
or
into
adc
jp
adc
cld
les
ficoms
pop
or
cmp
adc
mov
pop
push
aam
adc
cmp
outsl
push
push
inc
xchg
outsl
inc
das
mov
mov
xor
filds
gs
sbb
dec
pop
mov
add
sub
sbb
jne
push
lcall
loopne
adc
in
push
lret
or
xchg
xchg
xchg
adc
sbb
push
adc
cmp
xor
fimull
cmp
lea
cmpl
jnp
mov
dec
mov
sbb
jb
push
jl
test
dec
cmp
ficompl
hlt
xchg
and
sub
jne
add
inc
lods
push
imul
in
and
ss
and
inc
cwtl
out
and
and
add
xchg
lock
loope
sub
lods
sbb
push
pop
adc
pop
xchg
daa
test
jns
adc
test
cltd
in
push
and
adc
push
popf
dec
sub
dec
sbb
ret
jae
outsl
adc
inc
xchg
outsb
sbb
inc
inc
movsl
lock
gs
lock
mov
inc
bound
jecxz
lret
sub
jg
mov
test
push
orl
mov
call
inc
mov
bound
push
adc
outsl
xchg
mov
pop
and
push
orl
popf
iret
cmp
mov
adc
loop
in
sbb
testb
lret
jne
cmpsl
mov
cmp
dec
nop
sbb
inc
nop
test
mov
sbb
pushf
mov
xchg
test
icebp
adc
fbld
dec
lea
pop
jae
xchg
movsl
push
sbb
push
or
mov
or
in
add
sub
sub
mov
xchg
lods
loopne
cmpsb
add
shll
add
addr16
lock
mov
hlt
dec
jo
adc
fnstsw
push
xchg
outsb
adc
pop
add
aam
dec
inc
xor
add
mov
adc
test
mov
bound
pop
je
and
andb
jb
xor
test
rcll
add
push
dec
mov
mov
inc
push
filds
push
ret
xchg
mov
icebp
push
sbbl
mov
dec
int
fadds
jo
adc
fidivl
mov
mov
xchg
xor
push
bound
adcl
and
push
in
mov
out
add
add
cmp
mov
adc
push
sub
in
or
xchg
xor
call
and
xchg
in
pop
in
push
and
inc
cmp
jns
data16
fdivrl
sbb
sbbb
pop
cmp
jae
cmpsb
pushf
cmp
push
or
inc
test
sub
mov
mov
mov
js
mov
mov
xor
sbb
and
addr16
sub
xor
inc
add
mov
push
xchg
test
lea
bound
scas
pop
lds
pop
pop
addr16
fld
add
test
pop
cmpsb
mov
sub
dec
mov
sbb
dec
mov
xchg
repnz
pusha
cmpsl
push
sbb
dec
dec
and
leave
mov
jb
movsb
movsb
cwtl
dec
cs
pop
cwtl
pushf
pushf
rol
xchg
mov
add
rcrb
dec
jne
mov
adc
roll
arpl
scas
pop
mov
dec
dec
mov
or
ljmp
call
shll
mov
pop
mov
pop
ret
inc
or
fnsave
xchg
inc
out
inc
sub
sub
dec
adc
sahf
adc
movsl
mov
and
mov
xchg
push
imul
aas
jns
nop
xor
dec
das
cmp
add
sub
popa
add
and
pusha
shl
xor
imul
psubusw
shlb
nop
mov
adc
imul
push
xor
xchg
test
addb
sbb
add
and
mov
push
movsb
adcb
pushf
pushf
xchg
sub
nop
les
test
std
aas
imul
sbb
push
pop
stos
sbb
push
jae
add
lea
jne
and
mov
add
xchg
out
dec
jge
push
jmp
cmpb
je
clc
mov
xchg
mov
data16
in
fisttpl
cmp
and
xchg
and
or
loope
scas
push
inc
mov
movsb
inc
test
pop
nop
mov
mov
pop
shrb
call
push
icebp
dec
adc
pop
push
test
and
cmp
out
test
mov
stos
negb
inc
xchg
mov
nop
pop
sahf
loopne
dec
xchg
pop
cmp
mov
pusha
lods
in
push
xor
and
sets
xor
and
mov
push
xchg
xchg
in
mov
and
repnz
add
fsubs
jo
pop
and
dec
sti
popa
das
arpl
adcl
test
popa
push
xchg
test
movsb
add
xor
pop
xchg
or
sbb
and
jmp
push
add
rolb
jae
mov
adc
addr16
daa
or
ja
insb
shrl
rolb
lock
mov
mov
mov
sti
push
addps
adc
push
les
or
lods
test
sarb
mov
push
xor
dec
mov
adcl
cld
popa
adc
pusha
mov
jbe
out
mov
hlt
pop
movsb
icebp
cmp
cmp
cmpsb
sub
mov
fsubrp
pop
dec
xchg
cld
sbb
clc
push
imul
add
sbb
rcr
enter
adc
lea
fidivs
xchg
lods
fmull
icebp
pushf
jp
push
fistpl
mov
rolb
sbb
xor
sub
add
push
movl
pushf
jno
ja
xor
mov
or
hlt
and
test
imul
lcall
pusha
push
bound
add
xchg
sub
dec
fsub
xchg
fists
dec
loopne
les
cwtl
nop
cwtl
outsb
pop
mov
shrl
push
sub
push
pop
es
scas
cmp
pop
hlt
push
and
mov
ret
push
in
sbb
push
cmpb
xor
mov
outsb
and
cmp
imul
mov
and
push
jo
or
mov
sub
sub
cmovno
xor
addr16
xchg
xor
and
icebp
sub
and
jl
mov
test
add
or
mov
add
push
mov
fwait
mov
dec
pushf
push
dec
fidivs
push
lret
sub
xor
adc
jbe
cli
push
pusha
addb
inc
cmpsl
inc
jecxz
in
imul
push
inc
cmpsl
aad
movsb
outsl
dec
push
shll
mov
adc
movsb
pusha
not
andl
movsb
pop
xchg
push
or
jge
cmp
mov
sbb
cs
test
dec
popa
xor
inc
push
addb
fisubrl
jb
pop
in
inc
popa
add
imul
xchg
std
cwtl
sub
push
es
dec
inc
fiadds
adc
fwait
bound
add
ret
movsl
add
and
aas
add
mov
mov
insb
adc
mov
pop
add
lods
mov
xor
xorb
insb
xor
pop
pop
jge
add
pop
or
scas
cmp
out
mov
je
add
push
in
or
sbb
sub
jge
loope
and
add
shll
inc
pusha
icebp
mov
xchg
into
imul
nop
mov
xor
test
pop
jnp
inc
xor
testb
sbb
adc
movsb
push
fidivrs
adc
xor
filds
add
test
sub
add
mov
or
lods
imul
push
xor
mov
cmpsl
mov
adc
jbe
inc
add
fs
inc
andb
and
pop
xchg
inc
fcmovnb
xor
sarb
sub
nop
data16
or
into
xor
shld
jmp
inc
movsl
pop
dec
maxps
cmp
adc
ret
and
add
push
adc
xchg
negb
sbb
xlat
stc
cwtl
xchg
add
pop
movsb
dec
push
inc
push
inc
in
and
dec
add
cmp
or
cmp
ss
or
mov
dec
call
jo
add
dec
mov
decb
orb
insb
nop
mov
push
cmpsl
loopne
out
inc
sbb
sbb
arpl
gs
xchg
push
movsl
sub
sub
sbb
push
add
sbb
push
mov
inc
mov
ret
adc
aaa
mov
sbb
daa
mulb
testl
shlb
sbb
mov
lret
cmp
cmpb
add
xor
pop
jp
cld
adc
test
lcall
jle
push
push
push
testl
daa
aam
movsl
jae
jg
sub
das
mov
mov
inc
sbb
and
pop
or
cmp
add
or
push
sbb
out
and
clc
ds
or
ret
jo
cmpb
lret
pusha
test
xchg
xor
les
sbb
sbbl
jne
mov
scas
push
cwtl
xchg
int
lret
out
hlt
push
sarb
push
dec
inc
sub
orl
pop
lock
js
mov
lea
movsl
test
push
addr16
aas
sub
cmpsb
adc
stos
movsl
daa
aad
xor
mov
ss
and
ret
push
jmp
ret
add
xchg
arpl
aas
push
lds
popa
das
dec
adc
lea
rcrb
dec
sbb
or
mov
sub
pop
je
js
adc
jecxz
addw
addb
xbegin
cwtl
inc
je
push
mov
push
xchg
jmp
sub
inc
or
adcb
insl
cld
and
dec
dec
xchg
lahf
notl
dec
or
or
imul
push
sbb
push
xor
pop
add
sbb
xor
stc
test
pusha
push
pop
xor
pushf
inc
or
mov
push
mov
fs
push
and
add
inc
xor
les
fidivrs
dec
cmp
add
fstl
cmp
faddl
push
lea
test
inc
push
cmp
push
lahf
pop
dec
loope
inc
fisubrl
aas
or
inc
pop
xor
jnp
sub
add
push
sub
push
and
sub
imul
mov
push
xchg
orb
mov
inc
inc
inc
adc
out
push
add
jno
xor
pop
pop
adc
xchg
les
inc
push
mov
xlat
pop
fisttpll
mov
pop
cmp
lcall
mov
loope
xor
rol
cmp
jnp
push
mov
add
add
sub
imul
sub
call
mov
xor
rolb
int
sbb
inc
jmp
push
xor
mov
xchg
add
jmp
fwait
adc
add
aaa
push
rcr
mov
adc
push
int3
inc
inc
xor
sbb
mov
lea
int3
sbbb
pusha
in
inc
xchg
popa
wrmsr
sub
jecxz
lea
xchg
pop
push
jle
cli
xor
cmp
or
pop
push
fcmovnbe
push
aas
stos
add
push
and
ret
es
arpl
aaa
mov
dec
inc
daa
push
inc
xchg
ret
out
loopne
sbb
sub
xor
cmp
inc
fdivl
mov
ljmp
call
and
enter
enter
std
in
pop
mov
outsb
xchg
dec
ret
and
adc
sbb
dec
or
add
arpl
pop
inc
jns
test
vphaddwd
and
jle
add
inc
jno
ds
jne
gs
les
sub
out
ret
dec
adc
ficomps
mov
sbb
mov
cmp
cmp
shlb
aas
cmp
or
int
imul
testl
lods
imul
dec
adc
dec
xor
lahf
ftst
and
push
stos
or
or
push
sbb
movsb
das
out
inc
xchg
push
add
nop
jne
mull
mov
cld
aas
jnp
pop
sub
jge
cltd
movsb
push
mov
xchg
test
xor
cmp
aas
xor
xchg
andb
push
lock
mov
cmp
dec
insb
sar
mov
test
pop
xor
ss
add
jne
jnp
aaa
orl
test
xchg
xchg
sub
push
inc
test
inc
mov
push
or
push
sbb
add
push
dec
and
dec
or
test
adc
mov
fidivs
cltd
push
movl
xor
sub
jns
push
cld
jg
ljmp
adc
lea
jmp
adc
inc
and
iret
sbb
sub
adc
or
loop
data16
pop
mov
cwtl
mov
test
inc
xchg
jp
sub
adc
xor
frstor
dec
xchg
cmpl
add
cld
mov
jnp
cld
mov
or
sbb
ficoms
cmp
popa
add
insl
loop
iret
inc
lahf
shlb
sbb
sub
lea
lea
lock
adc
fistps
js
push
sub
cmpsb
cmp
or
imull
and
jg
popf
inc
aaa
add
jnp
pop
daa
addl
jo
push
ds
movsb
mov
push
cld
dec
inc
popa
xchg
out
dec
xor
adc
pusha
les
inc
cmpsl
mov
jno
pop
cld
outsl
xchg
pushf
nop
pop
and
or
loopne
inc
dec
push
and
outsl
dec
jne
loopne
jne
imul
cmp
jmp
ret
test
or
cmc
or
cmp
in
sub
sbb
adc
sarb
mov
push
fdivs
jno
das
neg
fnsetpm(287
inc
pop
xchg
dec
push
ss
les
jno
xor
enter
mov
cmp
cmp
push
or
add
dec
dec
push
nop
ds
dec
mov
aam
or
ja
xor
je
popa
push
jo
xchg
fisubs
adc
dec
sub
sub
jnp
es
xchg
shlb
lahf
testl
xchg
testl
daa
daa
and
inc
dec
in
fwait
jge
inc
imul
cmp
sbb
inc
cwtl
lods
ljmp
push
inc
sahf
ds
dec
scas
out
daa
and
inc
pop
mov
daa
and
enter
sti
inc
dec
or
cmp
rorb
nop
dec
xchg
sbb
test
or
inc
jle
dec
aas
add
mov
dec
add
divb
xchg
mov
dec
xchg
movsb
jge
jmp
test
adc
adc
into
xor
sub
pop
mov
or
sbb
and
iret
fstpl
push
dec
mov
inc
inc
mov
add
mov
add
cmpxchg
mov
scas
inc
mov
dec
leave
movsl
sbbb
mov
stos
pop
push
inc
popa
add
outsl
stos
das
data16
dec
adc
sub
sbb
inc
mov
sbb
lret
adc
nop
lret
adc
movsb
in
mov
add
cmp
xchg
adc
push
add
js
and
mov
xor
roll
loopne
jmp
icebp
cmp
or
adc
push
lahf
mov
add
ja
add
adc
enter
cwtl
sub
inc
mov
outsl
adc
les
arpl
push
push
xchg
push
jl
arpl
movsl
lea
xor
xchg
bound
lods
jbe
push
pop
and
dec
or
insb
pushf
scas
sub
ficoml
inc
xor
cwtl
testl
adc
push
mov
fs
mov
call
repnz
pop
nop
into
or
or
stos
push
or
testb
loopne
shrl
enter
pop
pusha
stos
mov
mov
movl
adc
cmc
insb
and
push
add
pop
adc
leave
xchg
push
jb
xchg
add
xchg
call
mov
sub
add
mov
pop
loop
pop
popw
cltd
adc
xor
lds
or
push
fs
and
or
adc
fs
pushf
push
shlb
imul
inc
sub
push
dec
mov
daa
imul
dec
inc
arpl
push
orl
rclb
test
mov
dec
arpl
fnstcw
or
push
add
in
or
movl
fbld
lock
mov
or
cmp
sarl
in
rclb
mov
dec
imull
test
rolb
mov
and
or
stc
xchg
ss
xchg
notl
cmp
xchg
dec
out
and
sub
jp
sbb
mov
push
ror
sub
imul
pushw
pop
das
sbb
adc
or
or
and
pop
add
inc
add
or
or
popa
arpl
femms
fidivrl
xor
movsb
sbb
xlat
and
scas
ret
cltd
jmp
push
jmp
add
xchg
insb
jle
jbe
add
adc
mov
iret
orb
mov
call
cmp
cmp
xchg
pop
leave
push
adc
cwtl
pop
jmp
xchg
test
ret
mov
dec
call
mov
jle
loope
mov
or
cmp
js
xor
xchg
mov
aam
es
dec
insl
sbb
flds
xchg
and
sub
push
adc
es
inc
out
stc
fiadds
mov
pop
or
ljmp
mov
cmpsl
or
test
fstpt
push
and
jmp
xor
ja
pop
imul
mov
pop
pop
mov
adc
xchg
push
xchg
cwtl
ret
sbb
testl
cmp
and
or
push
or
dec
test
movb
mov
cwtl
ret
push
inc
mov
test
mov
rorl
or
adc
lds
sbb
xchg
push
mov
push
mov
jl
iret
cmpsl
sub
and
orl
adc
dec
pop
add
add
mov
jo
and
sub
fs
cmpsb
subl
and
dec
sub
std
jmp
add
sub
fdivrs
inc
or
or
push
sbb
leave
ret
inc
xchg
dec
mov
jl
aam
dec
adc
and
and
adc
shlb
inc
push
xor
inc
lahf
icebp
xor
inc
pusha
sub
add
inc
arpl
sbb
push
and
inc
xchg
inc
xlat
push
mov
test
enter
inc
shl
inc
push
dec
cmpb
movsb
insb
adc
aas
push
xchg
repz
and
push
xor
add
push
inc
mov
pushf
sbb
mov
push
das
or
push
push
shlb
adc
push
add
cmp
dec
arpl
push
and
sbb
sbb
and
add
ss
icebp
bnd
lock
xor
dec
pop
push
sub
mov
std
adc
out
inc
push
loopne
lea
jnp
inc
add
sub
mov
sbb
cwtl
xchg
xchg
enter
dec
insb
cmp
dec
fsubl
dec
jb
mov
push
xor
subb
push
enter
inc
aas
mov
sub
jmp
in
pop
mov
push
pop
dec
daa
jge
or
dec
jge
dec
jo
sub
add
push
hlt
sbb
push
adc
mov
je,pn
push
add
add
push
adc
inc
or
popa
add
add
adc
inc
sbb
xor
or
add
dec
push
cs
cld
fnstenv
hlt
shlb
dec
xchg
add
cmpl
clc
xchg
orb
sti
fwait
inc
dec
sub
jl
inc
mov
inc
je
pop
andl
shrb
push
dec
cld
sarb
addb
ljmp
sti
mov
and
mov
das
sub
cmp
push
push
jnp
sbb
mov
sub
mov
es
aas
mov
pop
mov
loopne
mov
inc
xchg
daa
and
xor
arpl
dec
push
pop
xor
xchg
insl
ret
sub
lret
and
xchg
popa
push
stos
nop
or
or
rclb
loopne
pushf
jne
movsb
push
push
cmp
xchg
push
dec
fadds
jae
push
mov
sbb
push
mov
mov
xchg
test
sbb
mov
jnp
les
test
hlt
mov
imul
jae
and
pusha
aaa
ja
jmp
rcrb
daa
cmp
pop
pop
push
pusha
shll
add
imul
xor
pushf
sub
xchg
adc
jle
lahf
sub
push
pusha
mov
sbb
pop
fs
inc
and
jno
xor
ja
mov
lea
clc
mov
cmp
mov
rcrb
or
insl
and
or
pop
mov
lds
pminub
call
stc
mov
jb
push
add
jp
lret
repz
out
dec
js
or
sub
jbe
xor
or
dec
gs
loopne
pop
orb
and
stc
xlat
mov
inc
into
jmp
mov
and
xlat
dec
repz
scas
ja
add
mov
inc
mov
cmp
add
mov
test
cmpsl
aas
adc
cmp
popa
or
rcll
out
add
xchg
xor
fs
lock
shl
mov
repz
pop
add
addr16
and
jne
xchg
jns
xor
mov
inc
pop
inc
repnz
xchg
xchg
push
add
mov
ja
pop
pop
push
flds
lea
lret
nop
stos
or
jp
push
addr16
adc
mov
mov
ret
adc
mov
rol
xor
mov
inc
call
xorb
mov
outsb
dec
je
xchg
xor
cltd
shl
je
fildl
push
ret
dec
xchg
mov
add
mov
imul
push
sub
jae
push
inc
dec
fcompl
ret
pop
mov
aad
enter
sbb
add
inc
add
pop
in
cmpsb
stos
add
jmp
push
sub
jnp
notl
shlb
add
inc
mov
jne
adc
in
dec
sbb
jp
sahf
add
loopne
or
sarb
push
lret
and
or
push
jns
mov
pop
cmp
mov
add
rorb
je
add
or
push
jns
adc
or
jnp
es
test
dec
inc
push
or
mov
cmp
and
imul
jmp
or
inc
xchg
lods
adc
ffree
popa
outsl
add
xchg
add
jae
cmpsl
and
lcall
or
push
imul
mov
ja
mov
or
inc
pusha
sub
stos
jbe
pusha
and
or
aaa
popa
or
inc
mov
mov
roll
or
xor
outsl
nop
or
out
rcr
mov
xchg
lret
movsl
inc
cld
or
mov
and
dec
adc
mov
xchg
add
jo
or
leave
inc
or
or
nop
stos
pop
pop
lahf
mov
pop
pop
jle
aaa
sti
lcall
dec
push
xchg
add
mov
fsubs
mov
loop
bound
pushf
push
dec
cmpsl
loope
sarl
inc
sbb
pop
jl
out
inc
pop
movsl
and
pop
mov
or
cs
daa
test
repz
or
adc
faddp
daa
pop
fiadds
cmpsb
lods
push
js
sub
xor
adc
ffreep
pop
ret
jge
pop
xor
pop
pusha
or
sbb
or
adc
push
add
cmp
and
pop
ret
sub
push
add
rcrb
outsl
xchg
lea
in
push
inc
outsl
fnsave
xor
dec
xchg
push
add
push
andl
pop
adc
add
sbb
lods
nop
pop
je
mov
cmp
popf
mov
or
jle
imul
or
test
mov
push
nop
xchg
fcom
inc
adc
adc
mov
jge
add
mov
sub
sbbb
clc
xor
sub
pop
fwait
ret
xor
or
ss
xadd
filds
sub
imul
jmp
xlat
dec
xchg
fmull
mov
lock
orb
and
scas
pop
nop
push
daa
stos
adc
inc
testb
dec
lret
jno
mov
in
dec
fmul
lea
incl
cmpl
aaa
sti
mov
insl
push
enter
fs
xor
adc
push
pop
jno
pusha
push
adc
xor
mov
push
inc
test
pop
fxch
insl
push
mov
fists
shl
sub
loopne
jmp
rorb
scas
add
icebp
pop
adc
testb
mov
adc
add
js
pop
call
ljmp
xchg
push
inc
sub
cmp
loop
test
adc
fnstsw
imul
test
mov
pop
ret
cmpl
pop
sub
int3
sbb
jle
mov
pop
jg
shr
add
bound
insl
dec
out
cwtl
pop
xchg
nop
jl
ds
mov
mov
test
add
rclb
nop
pop
sub
rcrb
pop
adc
or
addl
or
neg
pop
inc
cmp
in
orb
adc
imul
pop
push
ja
push
mov
sbb
and
and
or
loope
adc
les
push
xor
add
pop
push
xchg
or
out
add
inc
cmp
es
das
mov
stos
push
xlat
and
push
imul
inc
lock
dec
repz
inc
add
fwait
xor
push
xor
adc
mov
sub
pop
sbb
ljmp
xchg
dec
jge
sub
mov
les
sub
rcrb
mov
pop
andl
mov
or
movups
xor
cmp
pop
xor
xchg
imul
or
xchg
test
sbb
iret
add
rcll
shll
loop
sub
xor
movl
dec
xlat
pusha
push
xchg
loopne
stc
inc
pop
add
pushf
or
movhps
pop
repnz
pop
add
loopne
mov
add
lods
adc
movsb
dec
stos
pusha
push
enter
add
xchg
mov
filds
push
add
popf
imul
orl
or
xchg
and
inc
inc
push
add
lcall
sarb
daa
cmp
dec
popa
add
adc
lret
scas
xchg
xor
aam
test
dec
mov
mov
xor
fsubs
test
jns
and
xor
in
push
mov
jno
add
and
jg
sbb
pop
push
adc
xor
sbb
mov
sbb
fwait
inc
arpl
xchg
mov
and
movsb
or
insl
sub
repnz
mov
push
je
dec
in
dec
xlat
add
and
cld
sahf
push
test
in
pop
mov
cmp
and
sub
mov
or
ss
aam
shrb
cmp
shll
pop
sub
stc
sbb
sub
pop
imul
mov
mov
fs
and
pop
sbb
dec
push
jmp
xor
pop
dec
lods
addb
rorb
lea
jns
xchg
and
dec
push
lock
push
lock
jne
outsl
sbb
ja
out
dec
dec
and
ss
mov
push
das
lahf
lods
xchg
insl
fcoml
mov
testb
outsl
dec
fcomps
cs
pop
push
call
mov
mov
orl
mov
cwtl
scas
jo
sti
xor
mov
mov
pop
aad
xchg
movsl
aaa
lock
push
add
out
cmpsb
ss
movsb
and
mov
hlt
dec
int3
mov
lods
dec
mov
mov
mov
pop
cmpsb
insb
pop
xchg
jnp
mov
push
jno
movsb
dec
or
outsl
nop
pop
or
inc
pop
sub
adc
imul
push
xor
and
lahf
push
imul
pop
pushf
js
les
imul
push
inc
xor
inc
movsb
jecxz
mov
sarb
sbb
mov
push
test
outsb
orl
daa
test
dec
sbb
dec
cs
lock
je
mov
or
inc
or
xchg
xor
les
pop
sub
arpl
mov
enter
ret
inc
int3
ja
pushf
mov
aaa
shrb
pop
xchg
adc
movsb
scas
pop
aam
adc
mov
pop
inc
add
les
ret
mov
xchg
scas
push
out
jle
aam
jae
pop
mov
or
mov
jae,pt
into
leave
enter
dec
je
lods
jnp
adcl
push
jne
addr16
in
xor
mov
and
cpuid
lret
and
jbe
adc
fldcw
jg
daa
add
sub
inc
ja
jp
xchg
xchg
xchg
daa
or
cmpsb
rcll
jns
stc
mov
sub
dec
jp
sub
xchg
sub
jnp
jns
fwait
aas
jbe
icebp
cmpb
mov
jge
loope
fisubrs
jle
mov
mov
adc
outsl
pmuludq
ss
ljmp
rdmsr
cmpl
hlt
xor
insb
cmpsb
in
lahf
xor
push
sub
faddl
psadbw
test
xor
lret
lahf
rdmsr
add
aas
loope
jo
ret
xor
test
pop
xor
pop
lret
paddw
lock
or
sub
mov
xor
push
jnp
scas
pop
cwtl
sub
or
aad
nop
xchg
push
daa
enter
push
mov
dec
jo
arpl
and
push
jg
bound
sbb
insb
fldenv
sub
js
pop
cmp
adc
xchg
arpl
nop
and
movsl
pop
and
loop
add
and
subb
das
add
bound
pop
bound
pop
popf
lea
xchg
jg
push
xor
push
or
lret
or
xchg
pusha
or
jns
sbb
add
insb
adc
sbb
rorl
lods
out
and
adc
popa
insl
adc
mov
xchg
in
inc
or
orb
les
push
nop
add
ret
cmp
mov
xor
cmp
mov
bound
loope
pushf
shll
push
xor
adc
ret
and
jns
dec
sti
outsl
add
push
or
push
js
mov
sbb
pop
mov
sub
or
cmp
add
insl
test
test
imull
xor
add
jne
packssdw
movsb
xchg
pop
mov
dec
jnp
mov
data16
dec
push
mov
xor
or
sbb
data16
arpl
andb
jmp
adc
sarb
mov
in
mov
jno
loop
push
xchg
push
or
fisubrl
add
inc
xchg
ja
add
xchg
xchg
or
mov
inc
mov
jb
sub
push
int3
enter
inc
subb
adc
aaa
add
clc
pop
insb
add
xchg
sbb
add
mov
leave
jp
test
orb
xor
arpl
andb
orl
adc
pushf
inc
fsubl
jns
inc
rcll
inc
addb
decb
or
add
cmp
ds
lock
dec
push
push
add
cmp
jge
add
lea
pop
aaa
add
or
dec
ss
aaa
jo
sub
sbb
arpl
adc
cltd
dec
or
ds
push
inc
sbb
dec
or
or
arpl
and
popa
add
pop
push
int
idivb
js
adc
movsb
adc
pop
addb
inc
pop
lret
xor
push
push
mov
cmc
adc
cmc
ret
aam
inc
and
push
push
addr16
xor
add
lods
xor
inc
shlb
cltd
add
and
pop
mov
shlb
cwtl
add
das
pop
add
add
shl
inc
adc
ljmp
stos
lea
mov
test
rcrl
adc
ja
int
or
ficoml
jae
adc
xor
lds
push
insl
mov
mov
mov
stos
pop
je
scas
dec
inc
addb
pusha
mov
dec
mov
or
xchg
add
aad
sub
ds
add
imul
push
add
js
repz
jae
mov
lret
adc
add
push
jo
fistl
add
aad
xor
in
or
push
and
sbb
adc
xchg
cmp
mov
cmp
adc
sarl
js
shrl
out
xorl
jae
leave
adcb
jmp
xchg
add
or
insl
inc
adc
jg
mov
sub
in
add
cltd
lods
xor
mov
imul
xchg
add
mov
stc
scas
por
push
add
cld
xor
push
adc
cmpsl
ljmp
sub
lods
je
mov
dec
or
insb
sub
add
sbb
das
popa
xor
adc
in
cmp
pop
mov
inc
dec
pop
jo
push
xor
movsl
dec
sub
push
in
lea
pop
ret
cmpb
pop
repnz
xchg
inc
into
cmp
cli
pop
xchg
or
aam
sbbl
mov
adc
inc
int3
mov
dec
inc
and
cli
adc
dec
addr16
xchg
cmpsl
cmp
bound
adc
adc
add
pop
gs
lods
scas
enter
or
add
add
filds
adc
and
fwait
xor
inc
or
pop
push
and
lea
das
mov
and
and
adc
daa
adc
xchg
jo
push
test
sub
and
loopne
ret
pop
push
push
xchg
pop
inc
pusha
and
les
inc
mov
outsl
add
inc
or
push
mov
aad
push
sub
adc
adc
lods
test
adc
aaa
bound
inc
rolb
mov
inc
je
xchg
sbb
aas
addr16
scas
movsb
and
inc
xlat
add
xchg
nop
loopne
mov
pushf
shrb
pusha
sbbb
push
lret
or
outsb
inc
push
mov
and
inc
sbb
sub
add
sub
loopne
inc
jge
push
lret
aad
push
negl
sbb
rcll
add
sarl
lds
subl
pushl
adc
push
or
fisttpll
push
bswap
les
test
push
and
xor
imul
xlat
ljmp
cmp
sub
jo
push
lods
jns
xchg
fsubs
ret
dec
jno
nop
jbe
daa
cmp
cmp
aas
sti
in
sbb
stc
push
aam
inc
push
add
jns
xchg
add
jge
inc
mov
adc
adc
mov
fsts
cmp
and
nop
outsb
xchg
nop
insb
push
frstor
aaa
sub
outsl
addr16
pop
out
jl
call
cmp
nop
sbb
imul
sub
jp
mov
or
scas
inc
xor
xchg
adc
mov
or
leave
or
hlt
xor
jnp
fwait
mov
inc
nop
movl
pop
pop
pop
sub
aam
jge
daa
and
pusha
loope
sbbb
enter
jl
cmp
sbb
xchg
movsb
and
lock
and
mov
sti
sub
pop
rorl
xlat
xorl
dec
ljmpw
xchg
cmp
xchg
dec
pop
loopne
pop
push
imul
mov
pop
in
pop
scas
jmp
rclb
mov
inc
adc
and
sbb
lods
dec
cld
xchg
sbb
sbb
aam
nop
mov
lods
and
sbb
insl
sbb
daa
sbb
roll
aam
pop
pop
sti
inc
or
aaa
popf
movsb
and
jp
pop
rclb
mov
mov
fdivrl
or
pop
jns
push
or
add
mov
stc
xchg
xchg
outsl
loopne
cli
mov
rorb
pusha
rcr
nop
xchg
arpl
cmpsl
test
adc
cli
mov
adc
nop
jecxz
leave
je
cmpl
xchg
fdiv
cmc
push
add
mov
nop
out
add
mov
jae
xchg
leave
clc
sbb
ljmp
pop
inc
xor
dec
adc
xchg
ret
lea
mov
xor
lret
test
cltd
mov
js
rcll
cmpsl
lock
faddp
dec
and
cmp
ja
add
xchg
dec
mov
cwtl
add
loopne
mov
xchg
lahf
dec
jne
iret
or
lret
pop
add
pusha
aas
push
add
fwait
dec
xchg
addr16
out
add
inc
push
mov
nop
mov
xchg
cs
and
mov
out
xor
dec
popl
xor
sar
mov
into
fucomip
or
or
fists
clc
call
inc
inc
mov
ljmp
mov
or
push
mov
xlat
dec
xchg
jecxz
adc
pop
sub
jecxz
popf
sbb
stc
or
and
push
xchg
sbb
test
xchg
sarb
scas
lods
xchg
dec
add
daa
push
rol
adc
in
sub
sbb
xorl
pop
mov
adc
int3
xchg
sub
dec
cmpsl
out
xchg
stos
in
jb
pop
inc
xchg
dec
cmp
pop
je
mov
sub
pop
jge
xor
hlt
lock
add
inc
rcrb
shl
add
xchg
sub
pop
or
dec
push
aas
out
mov
xor
or
xchg
xchg
mov
push
mov
rcr
lahf
jmp
imul
cli
push
dec
cmpsb
push
jl
sarb
mov
call
mov
cs
or
sub
cltd
pop
xor
or
sbb
dec
inc
sbb
jecxz
push
push
cmp
inc
or
or
jnp
sbb
inc
xchg
ret
cmp
ss
out
mov
add
jns
xchg
mov
xchg
adc
or
aaa
cwtl
or
dec
jp
clc
mov
sub
push
lret
or
inc
enter
adcl
xlat
lcall
cld
adc
mov
xor
push
mov
imul
sub
ret
pop
cltd
lcall
movsb
sub
mov
push
mov
lahf
mov
and
in
lock
pop
pushf
js
fwait
add
fadds
es
jge
mov
adc
pusha
xchg
jno
fwait
hlt
aaa
dec
or
jae
jl
cmpl
mov
dec
cmpsl
fwait
mov
loope
jecxz
js
dec
jne
call
fwait
test
pop
adc
jmp
pusha
mov
popl
mov
sub
mov
mov
adc
pop
add
inc
adc
in
xchg
sbb
push
lea
lret
pop
mov
inc
leave
add
movsb
or
add
dec
js
xchg
rol
push
ljmp
and
mov
loope
sbb
shr
adc
pop
out
fiadds
insl
jmp
aam
mov
mov
test
imul
pop
dec
into
outsb
sub
jb
sub
xor
adc
sbb
call
lds
aas
hlt
fldl
inc
fnstenv
fmuls
inc
push
inc
fs
fildll
aad
popf
aas
jnp
les
aam
xor
jo
push
mov
daa
mov
push
pop
sbb
and
xor
fdivr
add
add
and
mov
xchg
adc
dec
cltd
pop
outsl
inc
or
or
mov
stc
lock
cmp
push
dec
and
cmp
pop
add
arpl
out
sbbb
jns
sbb
inc
gs
xor
dec
inc
out
testl
push
push
out
sbb
mov
push
sbb
dec
call
xchg
insb
icebp
popf
jno
orb
lea
jge
lea
test
xchg
xchg
mov
lahf
adc
cmp
push
cmpb
mov
shll
fdivr
xchg
push
inc
jl
stc
add
cmp
insb
xchg
rol
loopne
idiv
jbe
inc
sub
addr16
add
movsb
xor
lcall
in
add
movsl
or
push
enter
jns
pop
lcall
add
call
dec
fs
sub
inc
xor
inc
inc
cmpsl
xchg
xor
jle
mov
push
jg
enter
mov
andb
cld
inc
add
pop
lahf
push
inc
or
lret
pop
add
xchg
in
ja
outsb
mov
adc
adc
pop
fimuls
aas
int3
aam
mov
mov
push
movsb
lahf
popf
cmp
xchg
daa
pop
fcompl
sbb
jmp
inc
mov
in
cltd
jno
inc
mov
lock
add
loopne
iret
clc
test
movsl
insb
and
in
insb
fucomp
adc
mov
jno
movsl
mov
inc
and
pop
shl
adc
movups
pop
aas
cmp
test
jmp
mov
fcompl
fdivl
icebp
cmpsb
lahf
adc
push
push
sbb
mov
mov
lods
add
daa
cmp
add
mov
jle
mov
sub
insb
outsl
cwtl
adc
pop
rsqrtps
aam
repnz
mov
das
xor
adc
inc
cmp
sbb
and
pop
and
jmp
pop
nop
cmpsl
sub
lret
dec
shll
add
jle
add
aaa
loope
leave
in
mov
and
subb
sub
push
inc
fdiv
mov
dec
or
and
push
or
cs
lret
push
enter
enter
inc
push
test
xor
or
mov
push
inc
xlat
int
mov
ret
aam
sbb
dec
adc
dec
inc
inc
loopne
fs
or
cmpsl
loopne
jnp
pop
sbb
aam
xchg
mov
pop
mov
out
mov
jno
mov
or
mov
ret
mov
fwait
cld
das
jl
jae
jle
icebp
cmp
jle
inc
cmp
inc
or
jg
or
mov
into
dec
addb
jmp
shlb
or
ss
movsl
xchg
jno
pop
imul
mov
pop
frstor
iret
jg
sub
adc
adcl
jb
dec
pop
arpl
push
xor
mov
inc
ja
push
pop
xchg
cs
cltd
movsl
mov
jge
ss
test
xchg
xorb
add
outsl
xor
xlat
and
mov
push
pusha
adc
daa
in
negl
ficomps
imul
or
and
shlb
cli
insb
and
test
inc
or
xchg
jmp
add
cs
mov
sub
mov
ljmp
dec
sbb
or
mov
cld
rclb
mov
pop
jns
repnz
int3
test
repnz
call
out
or
fwait
mov
xor
or
in
xchg
jmp
and
and
imul
mov
pushl
pop
mov
stc
mov
inc
or
sbb
jle
sub
in
jae
push
rolb
mov
dec
inc
sub
imul
push
setbe
add
fwait
rcl
ja
jg
jge
movsb
lods
push
loopne
sbb
adc
addb
les
mov
pop
sub
mov
jmp
add
das
divb
add
push
sbb
jae
sbb
cmpsl
adc
mov
jmp
rorb
shll
cmp
inc
pusha
dec
ds
add
iret
add
inc
mov
push
ffree
adc
mov
imul
jnp
push
add
xchg
fcoml
dec
cwtl
dec
imul
je
rorl
jmp
pushf
or
outsl
fdivrs
ret
jno
xchg
adc
dec
and
add
xor
add
mov
stos
mov
shlb
test
jne
lock
popa
xchg
and
xor
dec
movsb
add
arpl
rorl
pop
es
push
xadd
rorl
add
lahf
int
repnz
in
xor
das
pop
test
sbb
or
and
xor
jb
fstps
dec
xor
pop
mov
and
daa
xor
push
loope
pop
pop
mov
filds
rcll
jg
inc
sbb
jae
jmp
jl
push
fdivr
push
fldenv
inc
dec
pop
loope
inc
xchg
rcll
rcrb
add
cmp
dec
adc
or
and
dec
mov
and
adc
or
mov
fmuls
bound
pop
mov
xor
pop
push
dec
inc
enter
xchg
xor
inc
enter
jmp
cs
insb
dec
add
and
das
leave
jle
xor
or
push
mov
in
test
add
jbe
xchg
xor
cs
nop
push
enter
mov
push
cmpsl
hlt
mov
sub
mov
addr16
push
mov
cmpb
insb
or
dec
xor
lahf
je
sub
adc
push
xor
xchg
scas
xchg
gs
leave
inc
pop
js
push
jae
lock
in
mov
clc
nop
movsl
push
xorl
push
dec
dec
fstl
loope
pop
xor
cmpb
sbb
inc
movsb
dec
bound
sbb
inc
test
inc
stc
sbb
aam
mov
fisubrs
add
mov
les
and
insb
xchg
test
out
mov
xchg
xchg
and
mov
mov
sbb
ficomps
adc
popa
and
mov
andl
enter
mov
xchg
ret
mov
xor
pop
sbb
or
es
cmp
push
mov
mov
xor
stos
fistpl
movsb
and
lock
sub
inc
in
mov
jo
or
jg
dec
xor
sar
outsb
pop
inc
das
out
into
and
mov
xor
or
jbe
xchg
das
jl
add
out
cs
push
test
add
icebp
and
hlt
and
and
add
loope
inc
or
inc
movsl
cli
add
lds
add
shrl
repnz
adc
rolb
inc
sub
nop
inc
mov
popf
xchg
filds
lock
cltd
jmp
shll
jmp
jo
je
pusha
cmp
pop
in
lcall
shll
adc
popa
add
add
lock
push
mov
jmp
dec
sub
mov
mov
js
pop
je
jge
mov
movsb
dec
xchg
sbb
xchg
push
add
stos
push
sub
sbb
or
sar
addr16
rclb
cmc
repnz
mov
or
cs
xchg
xbegin
mov
jl
cmpsl
add
mov
sub
mov
xor
je
stc
fwait
dec
push
rcll
xchg
iret
xchg
mov
ljmp
cmp
inc
cmp
inc
add
add
mov
push
dec
push
insl
push
and
inc
xchg
adc
xchg
push
ret
adc
mov
sti
mov
adc
and
mov
je
push
imul
nop
jmp
movsb
adc
pop
jbe
popa
mov
aam
insl
bound
mov
popa
xchg
movsb
adc
push
es
pop
push
cmp
xor
dec
aaa
mov
sub
add
leave
push
push
leave
or
xchg
popf
add
aas
sbb
cmpsb
mov
rcr
sub
test
or
inc
jl
mov
inc
inc
inc
jno
dec
push
push
mov
dec
push
repz
aam
fmull
jl
test
fisubs
adc
mov
fstl
dec
jge
pop
add
adc
loope
adc
pop
mov
cmp
sbb
jle
and
lds
inc
lods
add
dec
pop
xchg
loope
push
jmp
sbb
sub
mov
scas
xor
iret
jno
call
jno
int
in
cwtl
push
lret
push
imul
int
mov
cmpsb
push
das
add
xchg
inc
das
loopne
rolb
dec
or
lods
lods
out
mov
lock
mov
test
dec
push
loope
jmp
add
fistps
ret
lock
dec
push
fadd
xchg
adc
mov
or
inc
sub
cld
and
push
push
adc
cmp
inc
nop
push
orb
mov
mov
adc
xor
sbb
jmp
pop
pusha
rcrb
pop
sahf
jp
adc
pop
shrl
andl
pop
fcoml
push
sub
or
dec
cmpsb
push
mov
hlt
add
pop
addr16
fs
push
pmaxub
sbb
in
or
or
dec
aas
shll
fs
mov
mov
mov
mov
jne
jno
lods
dec
repnz
sub
mov
sbb
scas
or
add
mov
mov
add
xchg
cmp
out
sbb
les
orb
jne
push
jecxz
das
out
mov
add
add
push
xchg
loope
das
and
push
mov
or
adc
pop
inc
adc
mov
test
dec
imul
in
adc
xchg
push
or
in
cmpsb
inc
adc
push
movb
lcall
add
xchg
ret
sbb
and
aad
or
and
fcomi
inc
or
dec
popa
aaa
cmc
fsubs
lds
sub
fwait
add
out
shrl
sub
push
dec
imul
mov
xor
add
subb
cmp
push
cmp
arpl
addr16
xchg
xchg
pop
test
sahf
mov
ret
sqrtps
popa
mov
cmp
add
in
imul
mov
repnz
in
movsb
fisubrs
shlb
xor
scas
mov
jns
sarl
ret
pushf
mov
pop
ret
dec
dec
dec
inc
pusha
ficoml
or
mov
dec
xorl
mov
xchg
sub
pop
xor
push
add
dec
xor
xor
jl
cmpsl
bound
cmp
inc
fwait
inc
sbb
test
pop
mov
push
mull
or
add
add
lret
push
xchg
inc
and
xor
mov
dec
int3
mov
jmp
or
and
mov
mov
or
mov
dec
daa
push
dec
mov
add
inc
js
lods
dec
pusha
mov
adc
or
xor
movb
inc
dec
lock
xchg
mov
into
js
or
int3
push
enter
pop
ltr
leave
push
push
or
cmp
cs
js
and
sub
push
or
push
lods
inc
lds
test
vpacksswb
mov
or
int3
xchg
jl
sbb
jno
sub
addl
mov
in
xchg
notb
mov
sbb
push
js
push
test
pop
and
sub
cmpsl
pop
lods
or
repz
or
add
bound
add
in
add
hlt
sub
rcll
cmp
lods
jb
push
mov
call
add
push
popf
sahf
jmp
ljmp
test
lds
popa
mov
dec
dec
addl
ja
xchg
or
jno
nop
rorb
push
xchg
hlt
nop
mov
xchg
pop
sbb
fstl
lods
rclb
or
inc
jge
paddusw
add
dec
mov
or
imul
rcrb
andb
mov
pop
push
or
stc
mov
pop
dec
lret
add
fdivl
into
fdivrl
ret
int3
lret
push
or
lcall
jo
or
rorb
add
push
nop
add
cs
shll
fdivrl
aas
shll
pop
fst
add
movsb
sbb
mov
repnz
and
ffree
jecxz
or
xor
xchg
add
jb
sar
sbb
test
jb
pop
cmpsl
mov
adc
dec
dec
lock
sub
xor
mov
jecxz
sbb
ror
pop
cwtd
inc
or
jg
or
mov
lcall
xlat
mov
ret
push
or
sub
test
add
cmp
faddl
mov
adc
scas
sbb
jmp
sbb
push
push
pop
adc
or
sbb
sub
xchg
movsl
mov
push
shl
mov
insl
aaa
dec
add
je
pop
add
cmpsb
mov
pushf
sub
outsb
inc
popa
in
xor
fsts
dec
andb
adc
neg
sbb
je
xchg
add
enter
cmp
mov
and
inc
jl
popf
fwait
dec
orb
lock
dec
imul
test
lods
ja
fs
enter
fldt
int
inc
and
out
mov
enter
sbb
sub
and
iret
or
add
inc
pop
add
addr16
addb
in
adc
jl
adc
int
in
pop
inc
mov
test
lods
or
cs
jge
add
xchg
mov
cmp
adc
and
or
and
pop
imul
lds
mov
lret
jae,pt
loop
and
test
addr16
insl
or
push
xchg
xchg
add
outsl
inc
inc
or
cmp
jbe
adc
mov
jmp
lock
pop
mov
or
js
lods
test
xchg
add
sbb
call
ror
js
testl
xchg
subb
in
lret
adc
xor
mov
mov
push
popf
jecxz
test
nop
lret
xchg
inc
inc
mov
je
das
xor
frstor
stos
xor
hlt
pop
add
push
cmp
and
mov
sub
jns
xchg
pop
push
inc
add
jp
push
mov
lea
push
insb
add
int3
or
push
rdmsr
addr16
sarl
cmpxchg
adc
push
xor
push
decb
mov
dec
insb
aad
mov
dec
sbb
and
and
mov
sbb
out
sub
data16
dec
push
popa
pop
or
cmp
sbb
out
jl
addr16
add
add
push
pop
cli
pop
add
frstor
adc
fwait
sub
pop
add
pop
je
leave
mov
cmpsl
int
pop
js
fst
adc
aam
movb
test
mov
in
test
roll
data16
or
dec
xor
or
dec
and
and
jo
xchg
and
out
jne
adc
xor
adc
outsb
adc
push
clc
test
outsb
popf
xor
mov
push
mov
cld
ss
add
push
loopne
int3
scas
sub
shll
dec
cs
jne
push
mov
mov
sub
rorb
jmp
sub
push
sub
imul
fcoms
xor
aam
dec
push
dec
pop
or
jl
in
xchg
xor
mov
adc
popf
inc
lcall
and
jno
xchg
inc
sub
pop
lea
push
or
dec
sbb
nop
pushf
int3
sub
aas
and
test
and
cmpsl
mov
or
mov
xchg
mov
les
add
cmp
xor
lahf
pop
lock
in
cmp
inc
push
pop
scas
or
cmc
or
xor
or
dec
leave
xchg
imul
cld
push
outsl
or
sub
ja
dec
adc
sbb
dec
inc
jne
leave
inc
adc
push
push
mov
push
jmp
or
dec
cli
push
lret
xchg
xchg
mov
inc
adc
inc
pop
adc
daa
xchg
hlt
pop
xchg
nop
push
adc
mov
adc
or
xchg
adc
mov
icebp
cmp
cmpl
dec
push
xchg
das
dec
dec
adc
sub
movl
je
add
pop
js
and
xchg
cmp
push
in
xchg
int
push
cmp
fistpl
mov
xlat
pop
sbb
push
fwait
and
mov
aad
lret
aas
and
leave
add
imul
js
push
xchg
dec
ret
pop
sbb
outsb
lock
fidivs
cs
fcmove
mov
sub
dec
mov
or
incb
sub
mov
in
shrb
in
cmp
sar
rolb
add
stos
out
dec
mov
add
push
mov
lcall
inc
adcb
rcl
hlt
push
xor
int3
shll
push
imulb
pop
out
pop
push
and
add
pop
mov
shlb
scas
push
add
fadds
es
test
add
cmc
lods
das
and
pusha
in
push
enter
inc
sbb
lods
xchg
inc
pand
cld
out
imul
ficoml
orl
xchg
push
stc
or
ret
pusha
leave
daa
mov
cwtl
mov
lcall
js
mov
xor
lock
jg
out
and
mov
adc
xchg
das
push
add
pop
add
xlat
fldt
xlat
pop
sbb
loop
fcomps
add
inc
inc
pop
aaa
fmuls
addl
inc
or
inc
pop
push
or
lods
pop
sahf
loopne
push
mov
and
repz
inc
inc
mov
pop
pop
cmp
mov
inc
aad
mov
in
or
add
or
insl
fsubrl
pop
pop
inc
mov
mov
push
test
sub
xchg
fisttpl
ds
imul
pop
adc
pusha
rcll
loopne
cmpsl
addr16
or
orl
enter
pop
ucomiss
add
ficoml
icebp
mov
mov
je
mov
jno
outsb
lea
outsb
adc
dec
orl
or
cmc
in
popf
sbb
lcall
mov
mov
call
shlb
enter
aam
lea
decb
outsl
sbb
or
cli
dec
daa
lea
cwtl
jnp
int
addb
pushf
pushf
cmp
inc
lds
popa
mov
sbb
mov
mov
dec
cmp
dec
int3
nop
push
sbb
sub
dec
or
mov
adc
pop
jmp
cmp
inc
push
dec
das
in
jno
pop
pop
sub
ss
and
lock
or
sbb
xchg
stos
nop
imul
push
arpl
pop
push
scas
mov
xor
rorb
inc
cs
add
in
mov
stc
push
cwtl
adc
mov
pop
jo
negl
in
xchg
rcrb
leave
push
lock
repnz
mov
mov
jns
or
push
stc
fadd
push
adc
xchg
test
dec
fldl
scas
inc
cmpsb
fucom
sub
fdivs
add
add
add
fdivs
add
push
fisttps
insb
adc
jmp
lret
push
mov
bswap
inc
les
dec
push
scas
rol
or
inc
add
enter
inc
push
xor
sahf
notl
mov
fmuls
pop
clc
cs
out
call
ja
mov
cmp
and
add
pop
inc
push
out
jns
ja
jecxz
cs
push
pusha
adc
adc
cmp
les
jle
enter
cmpsb
out
nopl
pop
loopne
inc
insb
loopne
mov
sbb
inc
dec
adc
push
loopne
test
jo
adc
int
push
lods
nop
stos
push
loopne
dec
add
mov
int
cmp
mov
adc
adc
mov
test
ja
ficomps
sub
mov
xor
mov
jmp
jae
das
pop
dec
lock
mov
or
xchg
and
mov
das
xchg
and
sbb
adc
add
sbb
push
inc
lods
fmuls
int
push
or
mov
pop
call
rcl
loope
xchg
cmp
pop
add
dec
jecxz
fiaddl
fwait
bound
push
lds
mov
push
mov
add
xchg
push
push
mov
adc
les
adc
xchg
dec
je
sub
rcr
popf
push
xor
cltd
or
sbb
jge
mov
in
lods
sbbl
or
jb
push
loope
sub
xor
dec
call
adcb
and
dec
popa
je
jmp
dec
jo
test
dec
aaa
sub
xor
int3
adc
add
adc
adc
lret
add
aam
or
fisttpl
and
in
and
std
jns
shl
sub
lods
mov
aam
xor
in
dec
mov
mov
loope
xor
sarb
daa
out
pusha
mov
nop
xor
or
cwtl
std
mov
ret
es
mov
xor
mov
cmp
fwait
jmp
dec
xchg
pushf
aas
cwtl
mov
mov
inc
cwtl
push
add
dec
push
add
or
mov
ljmp
adc
in
sbb
adc
jnp
dec
ja
inc
iret
mov
xchg
or
popa
dec
outsb
pop
adc
xchg
fdivs
push
xchg
into
es
ret
mov
add
sbb
data16
pcmpgtw
out
jge
femms
push
mov
rclb
jmp
mov
pop
push
das
loope
and
arpl
sub
mov
xor
adcb
cmp
test
lahf
subl
jno
sbb
inc
addb
pushf
xchg
dec
adc
gs
add
or
jp
dec
jns
enter
shrb
mov
call
pop
xor
mov
adc
fcom
jae
out
lods
pusha
enter
add
xchg
or
sbbb
movsl
mov
aas
pop
adc
push
loope
adc
mov
sub
add
cmp
lods
inc
xor
inc
pop
dec
and
fsubrl
imul
xlat
dec
rcl
pop
mov
std
and
into
or
and
sbb
call
pop
inc
aas
pop
or
fsubl
inc
cld
loopne
xor
fs
sub
mov
fstl
sbb
inc
fs
cmp
adc
or
cmpsb
jmp
or
mov
cmp
movl
mov
aaa
sbbb
inc
aam
loopne
add
push
daa
lock
les
xor
lahf
aad
mov
mov
repz
add
call
lcall
repnz
call
mov
jl
std
mov
sub
pop
pop
mov
sbb
inc
jl,pn
les
movsb
sti
or
jl
push
fdivrp
push
pusha
cmc
aas
push
aam
inc
push
push
inc
es
inc
mov
stos
repz
int
iret
or
cwtl
sub
xchg
rorb
push
inc
pop
adc
shlb
push
add
pop
fs
add
aaa
lret
pop
xor
xchg
mov
cmp
adcb
sub
gs
push
aaa
fsub
jmp
sti
add
fisttps
lahf
mov
sbb
add
sbb
sub
pop
push
xor
sbb
mov
div
out
in
xor
jno
or
scas
jge
pop
mov
mov
inc
dec
cs
mov
add
popa
lock
xchg
mov
sub
jbe
xchg
or
pop
push
inc
mov
add
call
push
mov
arpl
arpl
adc
or
rcll
sbb
adc
xor
ret
mov
sub
out
movsb
xor
dec
mov
ja
cli
xor
push
sarl
xchg
jns
pop
leave
pop
adc
cmp
push
or
or
or
pop
cs
rclb
adc
bound
cmp
dec
mov
movsb
popa
xchg
xorb
imul
repnz
subb
add
xlat
les
add
insb
scas
arpl
and
rorl
jo
and
ds
push
sbb
rclb
loopne
mov
ss
cmp
adc
je
pop
rolb
sub
push
hlt
jo
mov
add
lods
adc
jb
mov
std
fmuls
shrl
rclb
rcrl
rorl
pop
cmp
sbb
push
negl
jne
xchg
mov
sub
xor
movsl
dec
sti
sub
sub
fidivrl
push
pop
pop
int3
rclb
loopne
mov
lds
push
inc
adc
in
add
test
add
les
mov
roll
add
add
leave
mov
stos
pop
add
or
stos
or
lods
mov
cmp
int
or
cs
add
icebp
ss
addl
add
xor
mov
cmpsl
dec
xchg
loopne
dec
add
rolb
adc
push
popa
push
xchg
mov
nop
mov
out
mov
and
ret
mov
or
jge
out
gs
shlb
flds
gs
jo
lods
insb
outsb
xchg
push
jb
andl
popa
or
pop
sub
loopne
imul
mov
jns
dec
inc
dec
xor
inc
inc
lret
int
stos
inc
cbtw
push
and
xor
xor
pop
fldenv
subl
jp
pop
sbb
mov
push
mov
hlt
xor
imul
pusha
inc
pop
or
xorb
mov
dec
or
lea
std
push
aaa
test
in
inc
cmp
push
out
inc
bound
leave
js
je
or
into
rolb
loope
leave
mov
inc
cmc
movsl
push
enter
add
mov
or
enter
cmc
mov
loope
ljmp
lahf
aas
aam
mov
in
aam
sbbl
pop
dec
xor
jb
ror
js
sbb
cmp
jl
xchg
ror
cmp
adcb
cwtl
adc
sub
pop
dec
ja
ret
outsl
xlat
idivb
mov
cmp
or
cs
stos
push
cmp
imul
fwait
mov
adc
mov
cmp
adc
imul
sub
call
ss
insl
test
xchg
xor
xchg
xchg
sub
and
dec
push
loopne
imul
repnz
and
push
rcrl
aad
aad
int3
in
sbb
add
jecxz
sbb
xor
add
pop
out
test
rclb
adc
push
mov
jmp
and
testl
sub
mov
cli
clc
adc
adc
fwait
adcl
cmp
adc
arpl
sub
daa
xor
pop
pop
dec
cld
mov
adc
mov
loopne
imul
jnp
sub
rcll
pusha
hlt
dec
adc
fdivrs
popa
add
dec
aam
ret
or
repnz
dec
jbe
es
stos
xchg
mov
jle
jge
push
adc
mov
insl
and
dec
clc
jne
xor
and
stc
mov
pop
cmpsl
ds
cmp
stos
mov
movl
and
js
pop
cld
and
and
dec
adc
mov
lret
jle
push
mov
inc
sbb
shlb
cmp
jne
inc
pop
popf
das
icebp
push
and
pop
lock
outsl
repnz
cmp
and
cmpsl
xor
sub
pop
sti
adc
jmp
lret
into
addr16
inc
mov
frstor
and
mov
pop
roll
cmp
lods
adc
inc
and
sti
aas
dec
dec
mov
out
imul
dec
jo
xor
mov
mov
mov
jge
push
ret
out
test
add
push
and
sub
aaa
rolb
adc
adc
mov
pop
rclb
pop
jae
or
fisttpll
shll
mov
imul
repz
daa
and
and
sbb
adc
notl
scas
adc
mov
pop
mov
mov
sbb
sub
sbb
lahf
cmpsb
sbb
mov
sbb
pop
push
and
add
es
sbb
cld
cld
test
std
jmp
lock
insb
fmuls
push
jne
jle
push
add
and
xlat
fwait
or
mov
das
dec
inc
push
xchg
push
add
or
into
shrl
or
or
test
sbb
or
fcmovnb
ja
bswap
int3
inc
cmp
adc
rolb
xchg
xor
fwait
push
pop
mov
mov
test
imul
jb
int3
cs
dec
adc
fadd
test
in
out
sub
in
stc
mov
pop
call
sub
sub
sbb
dec
enter
icebp
push
sub
das
clc
sub
and
xor
loope
popaw
jg
inc
gs
or
mov
cmp
je
lods
mov
ret
inc
dec
mov
cld
das
sub
cli
js
cmp
pop
daa
das
inc
cmpsl
mov
dec
in
rorb
nop
or
sbbb
test
inc
dec
and
add
cmp
mov
inc
out
inc
sub
or
mov
mov
in
pop
sub
add
aaa
adc
cli
mov
push
push
nop
or
mov
mov
fs
ret
or
fs
stos
in
gs
pop
add
pop
mov
jp
cmc
cmpsb
dec
incl
mov
popf
inc
mov
and
cmp
leave
rorl
cmp
test
je
call
fcomp
mov
jmp
inc
cmp
jge
movsb
or
or
movsb
jne
addr16
dec
mov
imul
dec
subl
pop
rcll
mov
xor
leave
cmpsl
or
or
sarl
mov
imul
add
adcl
std
or
roll
or
call
lret
pop
sub
push
stos
adc
sarl
inc
inc
mov
and
nop
out
jo
xchg
or
pop
cmp
push
and
xchg
ja
inc
cwtl
adc
xchg
je
ja
add
in
add
add
repnz
adc
adc
xchg
sbb
jns
add
test
movb
jb
add
fs
mov
mov
out
mov
sub
in
pop
mov
adc
adc
test
mov
bound
pusha
sbb
mov
imul
jmp
daa
jns
cwtl
xchg
pushf
nop
dec
imul
das
mov
in
sub
mov
sub
or
sbb
shrb
aad
add
lcall
enter
push
lcall
jmp
in
push
pop
int3
sub
and
push
icebp
mov
or
das
call
cmpsb
xor
cwtl
sbb
sbb
jp
dec
fmull
pop
nop
in
jbe
sbb
xchg
mov
sbb
shlb
and
loop
xchg
push
push
mov
push
add
lock
aad
cmp
dec
mov
mov
in
rorb
push
cld
in
xor
int3
sbb
push
add
xor
cs
or
mov
sbb
xchg
jo
sti
push
fsubs
push
stos
gs
add
fadds
xlat
pop
mov
mov
or
jnp
mov
xor
adc
icebp
add
add
jmp
mov
stc
lahf
lea
or
sti
ja
sub
lret
mov
jecxz
jg
cmp
pusha
pushf
mov
outsl
push
cmpsl
insb
mov
loopne
loop
nop
movsb
mov
mov
inc
nop
cs
shlb
outsl
icebp
mov
or
xchg
fiadds
adc
mov
testb
jo
fsubrl
dec
mov
xchg
dec
sahf
adcl
xchg
and
movsl
add
pop
int3
aas
cmp
shl
push
jmp
je
test
xor
or
ret
mov
xchg
push
ret
push
shlb
outsl
xor
adc
popf
insb
jmp
cmpsb
pop
data16
insl
xor
fldcw
outsl
fs
out
lock
sub
hlt
or
xchg
inc
cmpsb
clc
cld
pop
pop
jge
sbb
mov
add
jmp
cmp
xchg
adc
loope
scas
xchg
iret
sahf
leave
mov
out
imul
mov
outsb
pop
xchg
sbb
dec
xlat
movsb
xchg
sbb
sbb
pop
fcmovbe
pop
push
cld
in
mov
cs
cwtl
push
lock
aam
jb
adcl
imul
and
push
xor
stc
cmp
cmp
jnp
nop
call
andb
sahf
lea
arpl
xor
mov
fistpll
aaa
icebp
mov
pop
mov
cltd
mov
or
and
ljmp
push
add
xchg
adc
pop
pop
fisttpl
subl
sbb
xchg
mov
mov
loopne
int3
jmp
jbe
cmp
sbb
in
adc
xor
adc
xor
or
sahf
adc
sbb
cwtl
std
and
inc
adc
lods
aas
mov
iret
pop
sbb
imul
adc
adc
mov
das
sti
push
push
rorl
cld
cmp
andb
test
and
fcompl
mov
push
movsb
xor
dec
jge
cmp
mov
push
xorl
imul
stos
ret
sbbb
fildll
stc
adc
inc
xchg
pmaxub
sbb
xor
inc
pop
addr16
mov
shl
popw
sbb
sbb
data16
pop
out
unpcklps
xchg
loop
jl
pop
or
adc
push
mov
aaa
adc
or
push
or
add
daa
outsl
aas
outsb
push
inc
xchg
fildl
mov
jmp
mov
mov
push
inc
dec
push
xor
cltd
stos
or
outsl
push
inc
popl
mov
sbb
rol
cmp
sub
addr16
fucomi
adc
stos
jl
adc
scas
mov
sbb
or
aas
add
dec
pop
xchg
add
mov
pop
add
pop
cmpsl
push
sub
dec
jbe
out
lods
mov
das
cmp
sbb
adc
inc
inc
inc
jne
mov
inc
std
add
aaa
or
push
mov
jnp
nop
sbb
xorb
in
test
push
mov
xorb
xor
pop
ret
mov
cmp
test
mov
and
stc
add
movsl
rol
cwtl
mov
aam
in
cmpsb
cmp
and
push
or
push
dec
dec
sar
sbb
pop
mov
cmpb
add
add
sbb
notl
xchg
int3
lret
js
mov
cwtl
es
in
pop
bound
lds
xorb
enter
outsl
fsubs
daa
daa
push
fcomp
fmul
leave
xchg
or
rcl
xor
enter
jo
mov
dec
int3
aam
addr16
mov
ret
stc
rcrb
adc
xor
shl
mov
mov
mov
add
clc
clc
andb
mov
inc
sub
shrl
cmp
fcomp
sub
mov
xchg
aaa
xor
scas
xor
and
sbb
sbb
test
xchg
jo
add
jg
inc
loope
mov
pop
push
ret
inc
jmp
sub
dec
jmp
and
xchg
fisttpl
ret
mov
pop
popf
jmp
inc
hlt
mov
xchg
xchg
hlt
adc
inc
jbe
xlat
adc
xchg
fadds
stc
mov
and
cwtl
lahf
test
mov
and
adc
in
dec
sub
push
ja
push
dec
idivb
ja
testb
inc
or
movb
jp
daa
xchg
addl
cmp
inc
nop
inc
adc
jb
pop
add
add
and
test
cmp
jmp
sbb
push
mov
aam
jp
rclb
mov
nop
inc
and
out
repnz
orb
rolb
mov
sbb
add
xor
movsb
cmp
call
call
add
xchg
adc
add
inc
jmp
shrb
inc
push
pop
daa
dec
xlat
cmp
in
in
orl
popa
mov
or
mov
cmp
inc
push
xchg
adc
adc
lar
dec
sarl
inc
or
jle
insb
loopne
sbb
iret
sbb
subl
xchg
inc
iret
push
pop
sbb
loope
ret
mov
and
aas
adc
and
push
mov
add
lock
imul
sbb
inc
aaa
das
in
adc
sbb
add
test
dec
sub
xchg
cs
add
push
mov
pop
stc
push
nop
sarl
lret
mov
sbb
iret
push
ja
mov
xlat
or
jl
enter
dec
stos
js
test
push
cmp
dec
sahf
stc
aad
dec
push
mov
jns
loopne
stos
cmp
movsb
movsl
dec
enter
fsubs
jl
enter
aam
pusha
xchg
aam
cmpsl
enter
shlb
test
and
pop
int3
int3
push
push
enter
and
push
adc
nop
pop
lret
enter
push
cmp
jmp
adc
and
and
lea
mov
fwait
and
arpl
add
xchg
nop
or
mov
mov
enter
adc
or
add
mov
cmc
mov
decl
lods
or
adc
cs
dec
ret
shll
mov
jmp
dec
inc
cwtl
and
dec
int3
xchg
test
push
pop
or
dec
push
cwtl
outsb
cmc
add
cmc
sbb
cltd
hlt
hlt
lock
lock
in
fs
inc
call
jnp
popa
or
push
xor
ljmp
nop
add
fs
movsb
sub
add
fsubs
fs
aam
rcrb
pop
in
cmp
es
and
mov
fbld
enter
inc
sarl
pop
inc
pop
push
adc
out
push
test
loope
and
dec
adc
or
cmpsb
cmp
add
lahf
popa
nop
add
dec
adcb
test
or
ret
add
cmpsb
lahf
loope
pop
pop
in
jmp
pop
mov
or
push
stos
xor
adc
fadds
inc
test
xchg
sbb
add
movsl
sub
push
lcall
mov
in
and
inc
pop
adc
out
roll
push
xchg
mov
xor
jno
mov
add
ja
in
shl
sub
add
adc
nop
push
paddb
int
sub
popf
orb
push
adc
hlt
cmp
jne
cmp
and
nop
popa
addb
mov
mov
std
pop
adc
arpl
add
scas
and
mov
test
adc
dec
xor
xorl
mov
sub
sub
xchg
mov
jns
push
call
inc
add
mov
inc
jb
and
call
daa
jae
fistpll
and
inc
sub
in
push
and
imul
pop
pop
loopne
outsb
add
int3
mov
jno
fwait
call
iret
xchg
mov
mov
cmpsl
clc
inc
push
sub
inc
loopne
inc
scas
adc
or
mov
fs
scas
add
lock
add
push
mov
lcall
in
and
and
sbb
add
mov
cs
xchg
cs
fsubr
and
mov
xor
add
nop
dec
push
aam
out
xlat
mov
push
lahf
push
lds
jmp
adc
repz
mov
xchg
test
rclb
int3
lret
int3
xchg
stos
inc
mov
enter
stos
inc
mov
lret
les
in
xor
sub
lods
dec
mov
xchg
add
xchg
mov
mov
add
in
adc
sbb
inc
mov
fxtract
hlt
pusha
and
clc
hlt
adc
nop
sub
outsb
jmp
adc
mov
orb
je
test
inc
test
cmp
gs
scas
sub
jmp
movsb
cmp
sbb
mov
dec
sbb
sub
sub
lods
jne
in
addl
add
xor
add
clc
lret
inc
cmpsl
sub
mov
sub
xchg
das
add
mov
enter
inc
ficomps
sti
push
mov
loop
sbb
fcmovbe
fdivrs
adc
adc
mov
sub
lock
jecxz
repnz
adc
leave
and
lahf
or
mov
das
sbb
shr
hlt
test
xchg
bt
hlt
sbb
pusha
sbb
jecxz
loope
hlt
dec
push
push
sbb
cmpsl
or
inc
dec
xchg
mov
pusha
inc
or
roll
nop
sub
jle
add
fisubrs
jo
sub
push
push
jge
mov
leave
out
int3
push
cmp
push
movsb
stc
add
fwait
loopne
addl
outsl
and
mov
fmull
outsl
or
lods
fmuls
outsl
add
enter
aam
shlb
int3
nop
add
int3
enter
sbb
les
rolb
adc
push
dec
int
jmp
inc
xchg
mov
nop
dec
clc
mov
out
cmp
shld
jb
jb
mov
mov
mov
cltd
or
cmp
mov
in
dec
add
test
clc
add
movsb
test
imul
mov
mov
inc
xor
in
add
pop
pusha
mov
add
push
ret
addl
sub
fcoml
pop
mov
add
jne
rorl
shrl
push
stc
in
fs
loopne
fcoml
cmp
sub
pop
fdivrs
daa
test
cmp
repz
mov
mov
cmp
lods
sub
stos
adcb
pop
stos
addl
ffree
sbb
nop
mov
jnp
mov
fcompl
cs
lcall
lcall
xchg
xchg
xor
xor
syscall
lods
filds
cmp
cwtl
add
and
add
mov
icebp
push
mov
xchg
dec
mov
add
and
adc
dec
lock
lea
cmpsb
mov
mov
adc
imul
in
sub
fcomps
xchg
push
jp
mov
mov
push
pop
xor
and
inc
stc
call
dec
in
in
push
test
loopne
loopne
push
test
fdivr
fmull
leave
adc
fmul
adc
stc
aam
enter
ror
and
enter
leave
enter
aam
pop
xchg
adc
and
sbb
or
lcall
sub
adc
jg
push
sbb
sub
inc
jmp
les
mov
xor
fucomi
test
add
or
enter
xor
adc
add
mov
xchg
cmp
xor
arpl
arpl
test
cltd
mov
call
lock
cld
in
add
sub
push
add
mov
sarb
dec
mov
xchg
rorb
ss
fmuls
dec
sub
add
inc
jne
xchg
jg
dec
sbb
dec
mov
and
mov
dec
mov
push
inc
nop
or
daa
mov
ja
xor
mov
and
jle
faddl
push
fdivrs
add
aam
mov
inc
mov
xor
stos
jne
mov
or
sbbb
push
add
add
inc
dec
test
add
mov
popa
inc
jae
sbb
fnstsw
sbb
jmp
mov
bound
bound
sbb
mov
sbb
pop
in
adc
je
dec
sub
inc
out
jle
sbb
dec
das
int3
icebp
lret
lods
and
xor
ds
push
movsb
mov
adc
loop
inc
lock
call
adc
cmp
lahf
aas
daa
enter
pop
insb
push
das
dec
inc
mov
or
enter
pop
cs
cmp
dec
enter
rcll
stos
adc
imul
add
xchg
fcoms
lock
or
dec
xchg
out
and
test
test
jmp
into
mov
dec
or
add
jl
add
push
jb
sbb
add
adc
xchg
loopne
xor
jmp
xchg
shll
jb
dec
xchg
dec
sbbb
xchg
dec
ret
fdiv
mov
or
mov
or
pop
or
xchg
fsubrs
addb
add
mov
mov
xor
clc
leave
xchg
jo
sub
cmp
fcoms
or
inc
mov
dec
inc
arpl
inc
cmp
add
mov
hlt
adc
inc
dec
filds
mov
inc
sbb
sbb
pop
mov
add
shr
pop
gs
sub
lea
push
sub
xor
iret
scas
dec
or
stos
lock
or
subl
xor
or
and
aam
adc
push
or
add
jo
xor
and
mov
jo
popa
adc
cmp
mov
mov
test
icebp
clc
cmp
xor
scas
dec
adc
and
aad
test
or
or
int
das
sbb
push
int3
lods
insb
dec
add
daa
push
fsubs
push
mul
jge
or
inc
push
das
add
aad
push
mov
cmp
scas
push
sbbl
fmull
fmuls
add
loopne
or
dec
cs
out
fwait
cmp
push
xchg
and
nop
daa
xchg
call
inc
push
clc
add
loope
inc
fwait
or
xchg
mov
add
les
dec
out
add
fiadds
and
jecxz
adc
jmp
push
jo
repnz
sub
push
and
push
fs
mov
test
adc
inc
jl
bound
mulb
jecxz
rorl
sub
sbb
cmp
push
pusha
mov
sub
stos
or
mov
push
ret
pop
outsl
das
mov
mov
adc
inc
or
fs
ljmp
rorl
popa
sbb
jae
in
out
pop
cmp
push
xchg
jb
lods
inc
add
scas
sbb
arpl
add
xchg
add
in
dec
adc
sub
test
and
scas
mov
push
fists
in
push
cmp
int
imul
inc
cmp
enter
inc
mov
enter
add
imul
cmp
push
dec
jge
loop
fwait
or
add
dec
push
mov
sbb
leave
sub
push
mov
sub
and
popa
sbb
xchg
sbb
and
or
jnp
jp
pop
inc
test
mov
leave
daa
js
xor
pop
pop
mov
add
roll
mov
dec
add
jl
cmpl
xchg
mov
outsl
in
loopne
and
or
inc
lret
push
cmpb
xchg
and
jmp
mov
dec
jl
push
sbb
pop
or
shlb
pop
ret
mov
loope
aas
cmpsl
test
add
or
adc
push
mov
movhps
inc
icebp
es
in
inc
adc
lea
nop
mov
lock
and
inc
das
nop
pop
ljmp
jb
hlt
lock
pop
xchg
add
vandnpd
iret
testb
aam
mov
or
cmp
je
add
pop
mov
mov
push
add
lds
dec
cmp
popl
mov
fdivr
mov
ret
icebp
outsb
popa
dec
jnp
lds
adc
xchg
mov
cs
and
js
mov
or
ljmp
pushf
mov
adc
xor
ret
and
mov
add
push
stos
insb
adc
ret
in
push
and
ret
inc
mov
leave
fiaddl
mov
dec
sub
xchg
cmp
jb
mov
fsubs
add
mov
jmp
or
or
hlt
frstor
adc
andl
mov
jl
popa
xor
lods
cli
es
lahf
xor
mov
xchg
test
xorl
or
loope
mov
xchg
adc
xor
in
and
push
gs
dec
and
outsb
push
mov
jae
mov
sub
jp
push
outsl
or
pop
dec
xor
sub
mov
mov
clc
push
add
out
adc
push
jbe
or
cmp
fstps
jno
and
stos
xchg
jmp
cmp
jo
xor
sub
xor
inc
addb
push
mov
lea
sub
imul
add
xchg
hlt
pop
add
push
addl
outsb
test
inc
xor
cmp
pusha
popf
mov
adc
shrb
xchg
mov
dec
or
sbb
fs
fs
or
pop
and
fwait
cs
outsb
mov
adc
mov
out
jo
outsb
lahf
pop
sbb
and
dec
add
jmp
fwait
jge
mov
push
es
das
push
push
push
dec
add
out
into
adc
pop
dec
add
adc
lea
push
sbb
out
pop
popa
dec
mov
daa
gs
add
rol
or
ja
dec
push
or
jcxz,pt
clc
popf
pop
es
orb
fs
mov
or
popa
xor
add
out
or
mov
dec
jne
fstps
xchg
lcall
add
sub
xchg
or
push
jne
push
sub
pushf
or
push
and
mov
dec
push
aas
add
cmpsl
inc
mov
push
mov
add
xor
les
mov
fisubrs
add
lock
inc
push
mov
inc
mov
or
stos
lods
sbb
lea
or
xchg
pop
or
inc
add
and
or
scas
insl
push
je
mov
sbb
cwtl
mov
adc
or
mov
cmp
cmp
pop
push
mov
jo
data16
push
xchg
ja
inc
and
shl
in
dec
nop
dec
aaa
mov
pusha
inc
push
fisttpl
sub
mov
es
mov
je
and
add
push
rol
imul
pop
dec
dec
or
mov
fiaddl
dec
add
ja
pop
mov
xor
scas
cmp
imull
into
or
mov
push
divl
add
jbe
psrad
dec
mov
push
cmovne
loopne
outsb
adc
test
cs
sub
mov
daa
add
inc
mov
sub
insb
sub
in
in
push
push
add
ret
data16
or
ret
sbb
jl
movl
mov
cmpsb
push
add
inc
jecxz
cwtl
push
push
inc
pusha
cli
jmp
mov
cmpsl
stos
loop
mov
jle
mov
mov
lahf
push
ja
add
sti
and
sub
dec
pop
cmpsl
inc
shll
xchg
pusha
or
negl
lock
push
push
mov
enter
aas
adcb
outsb
dec
insl
movsb
das
clc
push
sbb
nop
sbb
lea
imul
movsb
scas
aam
pop
add
out
pop
jecxz
jp
mull
xor
movntps
jo
jb
cltd
adc
mov
pop
xchg
pop
jb
add
push
cld
pop
add
pop
sbb
jne
xchg
cmp
pop
lods
movsl
push
pop
fistps
imul
or
or
test
cmovns
sbb
or
mov
outsb
inc
pop
and
mov
fsts
enter
and
jl
dec
and
aam
jbe
and
test
add
pop
add
sub
jecxz
mov
cmp
xchg
push
outsb
dec
push
lds
pop
pop
test
insl
data16
add
or
push
sub
or
add
in
and
or
es
jo
add
test
icebp
adc
ret
jmp
sub
test
adc
add
lcall
mov
adc
pop
inc
arpl
and
mov
cs
outsb
dec
mov
cmp
sub
xor
dec
pop
scas
push
cmpsb
sub
or
lods
dec
and
add
clc
inc
nop
add
decl
pop
leave
dec
push
add
push
xlat
push
fs
pushf
mov
and
dec
aad
dec
je
ret
sbb
lcall
xor
dec
addl
jnp
ss
mov
jae
sbbb
aaa
or
dec
ret
or
mov
mov
adc
iret
jb
shlb
or
jbe
pop
xor
and
shl
pop
jg
lods
imul
clc
subb
aas
xchg
xchg
hlt
and
and
xor
repnz
aam
mov
unpcklps
push
enter
pop
xchg
push
movsb
cmpsl
sbb
movsl
xor
rorb
mov
test
dec
mov
add
les
pop
or
sbb
lcall
ss
repz
xor
xchg
lea
sbb
cmp
adc
xchg
push
and
stos
dec
or
inc
xor
std
sub
test
push
rcll
dec
dec
int
adc
push
cli
pop
xchg
sbb
jp
inc
inc
pop
mov
pop
das
or
pop
das
add
sub
sbb
push
lcall
shl
pop
or
test
inc
aas
arpl
pusha
mov
iret
pop
xor
imul
mov
mov
pop
push
fadds
or
xchg
in
adc
mov
and
fnsave
out
dec
jno
mov
adcl
or
call
inc
nop
sbb
insl
cmpsl
or
inc
aam
dec
out
sbb
imul
lds
fmuls
aad
pop
or
xchg
push
gs
lock
cwtl
push
push
cwtl
or
test
xchg
xorl
jge
sbb
int
lds
and
pop
loope,pn
bound
or
or
mov
or
xchg
or
fiaddl
jo
xor
in
fwait
sbb
jl
push
adc
jl
adc
adc
pop
xor
sbb
sbb
push
inc
pusha
das
orl
sub
call
out
push
test
pushf
push
mov
imul
jno
mov
push
imul
dec
push
or
or
inc
daa
dec
lods
mov
insb
and
xchg
push
cmp
es
jge
cmp
rcll
push
add
adcl
inc
and
push
adc
pop
sbb
add
add
cmc
pop
add
pusha
or
cs
mov
pop
pop
pop
pusha
dec
mov
dec
cld
jmp
pusha
and
popa
add
lock
add
cmpsb
call
sldt
pop
loope
push
cwtl
add
inc
test
pmovmskb
add
dec
sub
insl
add
or
inc
jge
xor
xchg
or
push
xchg
mov
mov
out
cld
cmp
and
add
movsl
xchg
mov
lods
mov
push
test
and
xchg
cmpsl
mov
ficompl
mov
addb
and
sbb
subb
cmpsl
int3
sub
or
inc
inc
inc
or
out
adc
inc
inc
cs
mov
add
out
sub
xchg
cmp
out
leave
and
xor
and
mov
pop
or
scas
or
push
pop
shrl
mov
test
inc
stos
add
sub
or
adc
jo
mov
scas
lods
push
repnz
nop
je
push
bound
xorb
stos
std
ret
adcb
add
sahf
bound
aaa
andb
ret
xchg
add
push
pop
fisttps
lcall
or
shrb
arpl
push
add
adc
in
aad
push
adcb
sub
dec
in
xchg
mov
enter
scas
movsl
or
pop
icebp
arpl
cmc
adc
cltd
negl
mov
test
daa
sub
movsl
test
jge
roll
dec
ja
mov
add
outsb
sbb
adc
pop
std
sub
sbbb
or
pop
scas
sub
xor
add
dec
adc
outsb
cmp
lea
jb
mov
push
mov
rcr
or
sbb
cmpsb
add
aad
nop
dec
xchg
jnp
sbb
push
inc
mov
shrl
inc
test
in
inc
loop
adc
addl
xor
das
inc
pop
pop
and
xor
mov
test
dec
aam
sub
inc
movsl
cmp
loopne
and
dec
std
ret
orb
addr16
mov
and
jb
inc
mov
test
popf
adc
mov
andl
inc
pop
inc
outsl
mov
cmovge
mov
test
push
jbe
inc
push
xor
mov
or
jp
pop
jae
scas
cmp
pop
adc
mov
dec
mov
dec
mov
xchg
pop
sbb
psignw
scas
pop
and
jg
scas
and
and
sti
adc
and
or
clc
adc
incb
fnstcw
mov
dec
imul
mov
sub
pop
push
pop
jae
cmp
sbb
mov
in
xchg
mov
adc
sub
sbb
jne
mov
add
push
sbb
lods
adc
pop
or
xor
push
xchg
lcall
shlb
inc
out
es
rcrb
mov
and
ss
jecxz
shlb
inc
loope
pop
dec
fnsave
es
pop
out
stos
dec
add
out
mov
mov
arpl
lea
xor
lret
sub
xchg
shlb
clc
jb
push
jbe
incl
dec
pop
adc
mov
ret
fsubs
subb
push
fsts
es
movsb
xchg
outsb
adc
sti
pop
fmull
cld
pop
pop
or
pop
add
lahf
fs
bound
cs
jae
jle
outsl
jne
insb
gs
lret
cs
movups
jns
jge
andb
movhlps
das
adc
adc
add
cmpsl
push
xor
xchg
movsb
aaa
mov
or
or
cmp
add
popf
inc
loopne
adc
loope
dec
outsb
das
add
popf
push
add
and
or
add
xchg
ds
push
out
or
outsl
add
andl
pop
or
das
push
xor
ja
and
shrb
iret
pop
icebp
adc
imul
dec
or
dec
pop
out
cmp
gs
outsl
mul
lods
mov
sub
sbbl
iret
xor
sub
dec
dec
inc
sub
add
add
push
mov
and
sbbl
les
sbb
mov
pop
mov
mov
jl
jo
mov
push
xchg
outsl
fldenv
andb
sbb
push
xor
add
adc
pop
out
mov
lods
mov
xor
fisttpl
inc
jmp
hlt
addb
bound
stc
repz
pop
jbe
test
add
frstor
fisubrs
das
dec
push
pushf
pop
jns
test
fdivl
sbb
sub
ffree
out
int3
data16
enter
jae
sbb
mov
rcrl
xchg
or
mov
jno
jb
dec
adc
push
ficoms
pmaddwd
pop
in
mov
es
adc
lods
xor
mov
dec
shlb
flds
or
mov
xor
ret
adc
outsb
je
or
push
lds
icebp
pop
mov
push
push
bound
loopne
mov
adcl
xlat
cmp
add
fimull
push
cmpsl
sbb
aaa
movsb
lea
adc
pop
sbb
adc
nop
nop
nop
mov
pop
pushf
jae
push
cmp
movsb
je
jne
mov
cmp
adc
adc
or
push
jp
and
jl
sbb
js
ja
aad
adc
jge
push
pop
mov
adc
push
dec
mov
push
cs
stos
mov
das
or
pop
add
inc
dec
mov
or
mov
jnp
jne
and
inc
cmp
sbb
test
sbb
cmp
adc
jae
pop
adc
adc
push
popa
cmp
push
mov
dec
loope
bound
dec
pop
fldcw
fcoml
loopne
mov
data16
or
clc
xor
or
or
incl
out
and
les
dec
inc
mov
mov
jo
or
andl
das
pop
loopne
sbb
ja
and
push
jo
or
adc
mov
jge
xchg
xchg
push
pop
xor
add
mov
push
in
lcall
sbb
mov
mov
add
push
shlb
inc
loopne
scas
gs
sbb
testb
dec
js
leave
xchg
out
sub
push
push
inc
adc
push
push
jbe
pop
adc
pop
enter
pop
mov
mov
jmp
add
and
or
add
mov
add
jge
outsb
mov
mov
fistpll
sub
push
test
into
cld
add
pop
jp
dec
add
dec
jns
out
adcl
lahf
adc
inc
or
xchg
or
mov
and
inc
inc
pusha
add
push
push
pusha
add
inc
or
sbb
inc
addr16
cs
sbb
insl
adc
faddp
add
dec
mov
jns
test
das
xchg
adcb
fildl
pop
xchg
and
xchg
pop
sub
dec
jbe
jne
roll
pop
jp
or
mov
xor
add
loopne
or
lock
and
inc
add
adc
andl
xor
jge
inc
adc
inc
add
xchg
xchg
mov
dec
faddp
scas
dec
and
addl
pop
push
jnp
dec
jo
lret
dec
jl
das
in
push
push
pop
adc
movsl
stos
add
cmc
push
sub
and
add
dec
jge
fwait
test
push
inc
jl
cmp
pop
movsb
orb
push
mov
mov
xchg
mov
lcall
jmp
fdiv
shrl
fwait
xchg
inc
popf
and
adc
es
add
sbb
test
rorb
sbb
or
lret
js
adc
lret
mov
xor
mov
sbb
icebp
out
mov
or
inc
jmp
push
xchg
mov
mov
mov
aas
mov
push
repnz
aaa
lods
pop
ljmp
cmp
movsb
push
lret
cmp
adc
push
jbe
sbb
push
mov
push
ja
jge
rcl
mov
adc
loope
aaa
mov
stc
or
jb
clc
stos
sbb
xlat
test
mov
push
movaps
push
outsl
lock
jo
cs
jne
add
ljmp
sub
stos
jg
xorb
fiadds
push
lret
orb
cmp
popf
jne
subb
orl
add
cld
pop
inc
jo
loope
imul
mov
outsb
ds
popa
inc
pusha
ss
dec
pop
mov
or
ret
add
or
fmul
push
daa
add
push
enter
push
push
jae
insb
mov
inc
push
fsubl
push
cltd
test
mov
adc
push
adc
inc
in
inc
ss
out
jmp
push
xchg
nop
dec
or
rcl
or
aam
in
and
add
std
push
test
sub
movsb
xlat
lcall
jb
adc
sbb
xchg
bound
mov
mov
pinsrw
outsb
sub
adc
cwtl
mov
inc
dec
inc
aad
jae
test
lret
inc
mov
xor
mov
push
mov
sub
imul
mov
fbstp
sahf
daa
push
cwtl
adc
dec
push
rcll
lods
pop
xchg
insl
jb
adc
rclb
imul
lods
inc
je
add
pop
adc
pusha
test
insb
jno
xchg
mov
adc
inc
cmpsl
test
add
sbb
push
or
or
pop
punpckhwd
xchg
and
sahf
rolb
xchg
aam
lret
mov
and
aaa
mov
mov
mov
in
and
lock
popa
adc
nop
nop
aaa
dec
push
add
sti
mov
add
xor
popa
clc
or
cs
lahf
psubusb
es
or
in
or
mov
sbb
adc
add
cmp
add
dec
in
daa
aas
add
inc
sbb
sbb
adc
scas
in
cmp
xchg
out
aaa
icebp
and
cmpsb
in
push
xchg
adc
clc
insb
xchg
xchg
push
je
lods
rorl
hlt
mov
cmp
movb
or
pushf
mov
test
adc
add
ror
rcll
pop
xor
loop
test
adc
es
xor
inc
popa
dec
pop
mov
outsl
gs
arpl
das
es
mov
pop
ja
xor
dec
iret
mov
pusha
sbb
pop
out
and
fwait
rcl
movsb
mov
insl
cld
mov
xchg
fcoms
ret
xor
je
lret
inc
inc
outsw
aaa
xchg
daa
cmp
rclb
icebp
imul
test
aad
jae
add
add
lds
cmpb
mov
push
rorl
dec
loopne
add
inc
or
mov
ss
jae
xor
cmp
rorl
pusha
nop
cmp
loope
mov
inc
or
and
imul
add
loopne
push
fisttps
mov
jge
nop
psubd
enter
movsb
adc
mov
ja
aam
xchg
fs
inc
dec
jne
fdivr
cmp
jo
enter
popa
ret
cli
cwtl
jae
insb
clc
or
fs
or
pop
inc
cmp
ds
add
mov
ffreep
push
call
mov
pop
gs
or
call
fbstp
dec
dec
pop
sub
adc
push
xchg
xor
in
arpl
test
inc
test
and
nop
xchg
push
dec
or
adc
xor
aaa
xor
ja
sub
add
mov
and
imul
or
pop
in
aam
dec
adc
mov
pop
xchg
or
mov
push
cs
sbb
xchg
int3
add
out
jo
add
popa
lds
sti
hlt
inc
or
dec
sub
scas
mov
loop
inc
xor
repnz
cmpsl
add
cmp
test
adc
sub
rclb
cltd
into
dec
add
je
sub
data16
bound
addb
adc
sbb
xor
sub
adc
cwtl
mov
push
stos
loopne
orl
pop
cmp
movsb
add
js
mov
ret
adcl
add
adc
les
dec
and
cltd
dec
cmp
fildl
outsb
xchg
mov
pushf
inc
mov
nop
outsb
add
and
mov
pop
and
movsb
cmp
pop
pop
fistl
or
inc
add
xor
jnp
add
jb
pop
nop
es
data16
xor
mov
adc
and
insb
cltd
cmp
inc
mov
fadds
movb
inc
and
rorb
pop
inc
add
inc
mov
sbb
andl
cmp
adc
iret
bound
add
mov
mov
adc
std
divl
inc
sbb
ss
add
add
push
das
push
xchg
xchg
minps
mov
pop
seto
sub
mov
mov
sbb
xorl
or
stos
adc
sub
mov
mov
jo
add
sub
mov
pop
inc
andb
je
and
xor
jmp
imul
ss
iret
out
aas
je
or
je
pop
jne
and
push
movw
fstpt
dec
rolb
cmp
or
xor
push
add
roll
dec
push
add
cmp
add
addl
jb
cmp
or
adc
jb
jb
adc
and
ret
sub
inc
xchg
sub
clc
mov
dec
fucom
xchg
cltd
add
es
dec
add
movsb
jo
add
jg
out
and
xor
es
cmp
loope
test
es
lahf
ja
ss
or
inc
xchg
aam
xchg
push
pop
add
je
jno
and
mov
movsb
pop
and
cmp
in
pusha
push
hlt
pop
scas
push
rolb
sbb
daa
in
or
adc
lret
push
xlat
scas
push
add
cs
incl
out
lock
ja
mov
call
pop
sub
jmp
xor
in
in
push
cwtl
je
adc
mov
push
aaa
je
dec
add
push
inc
sbb
push
int
outsb
bound
push
adc
inc
mov
js
sub
enter
push
inc
pop
xchg
outsb
or
and
mull
and
nop
pop
add
aas
pop
xor
push
mov
or
xlat
das
mov
popf
aas
pop
inc
push
daa
and
filds
test
jmp
push
xlat
out
movsb
cld
push
inc
lcall
cld
or
into
adc
xor
xchg
out
roll
mov
lcall
or
loop
mov
imul
add
cltd
mov
inc
mov
push
nop
or
mov
jns
insb
dec
adc
call
mov
xorb
fs
push
loopne
pop
das
imul
push
add
xchg
mov
xchg
cmp
cltd
xchg
ret
adc
mov
int
rolb
xor
sub
sbb
xchg
das
or
cwtl
push
push
sub
jmp
movsl
and
add
and
cmp
push
fcomp
rorl
mov
fdivl
cmp
jge
push
adc
sbbb
mov
sti
adc
inc
mov
mov
or
jg
shrb
loope
sbb
ficomps
and
add
roll
sub
mov
dec
jge
shlb
lock
sub
mov
cmpsb
sbb
adc
mov
adc
sbb
nop
fwait
insb
fmul
push
out
movsb
popa
pop
or
rcrl
ret
fwait
shlb
lcall
or
push
adc
xchg
adc
andl
cmp
jle
ss
mov
mov
inc
xchg
push
adc
fnstsw
cmpb
inc
pop
inc
jle
lods
inc
pusha
mov
or
add
mov
xor
or
mov
push
lock
rclb
xchg
mov
sbb
and
inc
cmp
and
int
jmp
inc
sub
sub
xor
mov
lock
push
test
orb
xchg
roll
inc
fistpl
push
repnz
sbb
mov
jo
mov
adc
or
sub
add
sbb
sub
pushf
adc
movntps
push
test
aaa
dec
pslld
mov
mov
mov
adc
cmp
fdivs
pusha
dec
mov
push
inc
hlt
add
xchg
lret
test
add
xchg
dec
jae
sub
pop
mov
and
sbb
pop
outsl
adc
push
push
dec
xchg
popf
rorl
jecxz
add
icebp
hlt
movsl
sbbb
add
sbb
lea
and
cld
rorb
mov
mov
mov
mov
icebp
jmp
or
cmp
andb
and
mov
mov
dec
fsubl
adcb
imul
leave
test
jo
int
mov
pop
add
call
mov
mov
pop
loopne
aas
pop
ljmp
inc
dec
adc
cltd
or
test
adc
push
pop
je
sbb
cmp
inc
insb
xor
and
sbb
aaa
pushf
jge
inc
adc
orb
es
or
movsb
repnz
or
test
mov
jmp
pop
cmp
fwait
push
cwtl
add
add
add
xchg
pop
add
push
pop
daa
xchg
or
iret
dec
push
mov
mov
jno
pop
fisttps
loope
inc
dec
add
adc
pop
xor
ds
mov
sub
daa
push
outsb
or
stc
pop
sbb
in
adc
sbb
push
inc
sbb
pop
pop
mov
add
pop
add
adc
mov
mov
push
mov
adc
movsl
aas
pop
push
adc
push
cmp
sub
pop
mov
mov
mov
mov
aam
xor
push
loopne
adc
mov
aad
outsl
adc
and
adc
xorb
rcll
and
ds
ret
ljmp
leave
push
cmp
dec
lock
add
repz
and
xor
or
sbb
and
pop
add
or
insl
mov
adc
xor
mov
jo
jmp
imul
fs
and
rcll
pop
cmpsl
xor
lods
flds
dec
mov
pop
js
movsb
pop
mov
pop
das
push
movsl
ds
js
and
add
dec
lock
aam
sbb
inc
cmp
test
fistps
adcb
sub
pop
mov
add
cmp
push
inc
test
dec
icebp
dec
and
dec
das
mov
fiaddl
pop
cmp
or
lods
xchg
lock
cmp
or
xchg
add
adc
add
arpl
jno
add
daa
lods
pop
mov
mov
test
in
test
aas
pop
push
ss
rorl
inc
popa
mov
cltd
cmc
add
push
or
sbb
shl
cmpsl
and
adc
sbb
outsl
addb
jp
push
bound
add
fucom
stos
dec
addr16
sbb
and
xor
push
cltd
mov
mov
sub
icebp
push
inc
and
in
xor
icebp
add
cmp
fs
pop
loop
loopne
push
lea
outsb
sub
inc
lret
in
push
push
sub
push
or
repz
daa
test
mov
mov
xor
in
lret
es
push
insb
int
cmp
je
js
lods
rcrb
adc
or
out
sbb
rcl
push
pop
arpl
or
and
test
pop
test
movsb
or
lds
test
fiadds
add
sub
add
xlat
in
popf
prefetcht0
outsl
xorb
xor
cmp
dec
mov
fmulp
cmp
fistpll
sub
pop
outsl
jne
jae
scas
mov
sbb
dec
jno
xchg
pop
push
mov
dec
clc
xor
es
add
cmp
aaa
push
jle
jmp
mov
stos
inc
and
add
sub
jmp
cmp
dec
push
aam
sbb
jle
inc
sub
mov
adc
lret
aam
or
ss
cmpl
lahf
cmp
outsl
pusha
push
mov
js
push
jmp
pop
lods
xchg
cmpsl
imul
loopne
ds
cmc
movsb
aad
ss
outsl
aad
jge
adc
push
inc
aam
push
fstps
and
xchg
lock
mov
imul
mov
pop
xor
push
xchg
dec
es
popa
xchg
mov
and
jle
js
pusha
mov
enter
inc
dec
lods
fldt
in
dec
fbld
jmp
lods
push
sub
and
repnz
lods
push
mov
je
lods
sub
lods
lret
pop
test
push
sub
stos
mov
mov
push
push
mov
xor
popl
push
mov
jg
jge
pop
add
scas
or
xor
scas
fwait
je
sbb
and
mov
jl
dec
add
push
or
lea
pop
mov
outsl
inc
or
fwait
or
scas
add
jecxz
push
movsb
xchg
jae
in
xchg
adc
or
xlat
xor
dec
adc
mov
lods
ficomps
mov
sub
fstl
popa
cmpsb
pop
dec
ficoms
pop
add
pop
sbb
xchg
test
jp
add
mov
push
lret
cmp
add
mov
push
das
mov
jns
jnp
rorl
cmc
das
mov
mov
cmp
dec
inc
sahf
pushf
mov
in
pop
dec
dec
divl
mov
imul
mov
mov
inc
jae
sub
inc
loop
cmpl
add
add
loopne
jnp
scas
out
inc
and
lock
inc
push
cmp
mov
or
mov
loopne
imul
jo
jb
xchg
fcmovb
mov
sbb
push
and
sbb
adc
orl
int3
andl
adcl
push
addl
pop
and
inc
mov
test
loop
icebp
imul
xchg
dec
adc
adc
pusha
dec
test
in
mov
xor
inc
leave
push
movsb
dec
add
je
sub
call
adc
or
and
aaa
out
test
test
mov
cltd
lock
daa
cmp
dec
xchg
loopne
pop
ds
icebp
loope
test
sub
lds
jmp
dec
mov
mov
rorb
inc
out
or
mov
push
adc
ret
js
sarb
dec
push
in
mov
mov
adc
pop
or
out
jl
shll
cmp
sti
xorl
mov
add
mov
inc
sub
nop
test
mov
pop
jo
jle
sete
insl
or
ret
fs
push
int
cmp
movsb
push
xor
out
cmp
inc
add
je
aad
and
rorb
and
call
outsb
shrl
cmpsl
in
les
sub
bound
in
daa
mov
je
add
sbb
mov
dec
fsubrs
xor
inc
sub
inc
jmp
inc
or
mov
push
push
pop
jge
cmp
test
nop
out
mov
xchg
mov
push
mov
aad
and
insl
adc
mov
fstl
or
inc
adc
out
add
add
jne
adc
addr16
jbe
push
call
inc
scas
push
sub
cmp
insb
mov
outsl
adc
cmp
mov
or
xlat
pop
xor
imulb
iret
inc
clc
cmp
fwait
sbb
arpl
dec
mov
push
mov
adc
and
movsl
mov
mov
rcrl
hlt
push
test
jne
mov
jmp
in
dec
jmp
inc
push
pop
xor
mov
xchg
cs
arpl
in
sbb
mov
pop
mov
pop
loope
inc
mov
in
inc
loope
loopne
imul
fsub
test
pop
or
push
daa
jns
pop
pop
fcomps
out
leave
mov
in
pop
andl
and
mov
and
shlb
ret
ret
add
push
push
dec
and
addr16
mov
or
add
add
and
pop
clc
ja
add
les
adc
arpl
test
and
push
enter
mov
cmp
sub
sbb
stos
mov
inc
cmp
std
mov
scas
inc
mov
addb
ljmp
aad
push
inc
lods
mov
fsubrp
loop
rdtsc
dec
xchg
inc
cmp
sbbl
sub
shr
push
movsb
mov
les
sub
cwtl
sub
sti
outsb
add
adc
cmc
rol
xchg
clc
cmpb
push
ret
dec
lods
daa
icebp
add
ret
dec
call
mov
js
cmp
fsubrs
mov
and
or
push
clc
and
pop
and
mov
add
push
cwtl
ds
inc
mov
sbbb
fldcw
aad
adc
xlat
dec
in
xchg
dec
lds
push
jg
icebp
and
mov
push
mov
xor
adc
add
dec
fnsave
out
xchg
or
mov
inc
mov
or
xchg
mov
in
mov
adc
mov
add
daa
mov
or
into
mul
mov
inc
cmpsb
xor
push
xchg
dec
mov
mov
push
adc
xchg
jbe
lret
add
xchg
and
and
pop
mov
jbe
cs
test
mov
out
xor
push
or
lock
outsl
mov
xor
aam
jno
pop
lahf
mov
mov
xchg
lock
cmc
xor
sbb
lock
mov
adc
cmp
test
into
dec
test
or
add
insl
inc
and
jbe
insb
or
mov
mov
aaa
dec
sub
shll
fsts
or
sub
mov
add
sbbl
pop
xchg
sahf
lahf
addr16
cmp
adc
call
adc
movsl
adc
adc
push
inc
jle
gs
sbb
push
vcmpss
int
inc
mov
inc
hlt
shrb
jmp
mov
add
push
mov
push
or
pop
fwait
pop
pop
jmp
stos
pop
cwtl
sbb
and
nop
mov
mov
jge
xor
inc
adc
cmp
test
inc
ljmp
push
sbb
and
lcall
sub
add
popl
movb
lret
gs
push
mov
fs
push
xchg
sbb
sbb
push
pop
push
ret
and
jne
add
dec
mov
pop
aaa
dec
push
repz
dec
adc
inc
outsl
les
jecxz
push
test
xchg
fsts
test
dec
or
jl
dec
insb
mov
and
sub
in
cmp
push
mov
push
or
and
xor
shll
and
inc
inc
fs
adc
dec
push
dec
and
and
sbb
out
adc
les
daa
and
add
jno
sub
jo
loop
push
inc
sbb
inc
pop
std
mov
adc
jg
push
push
test
pop
les
or
push
faddl
mov
test
pop
lret
aam
add
pop
and
xor
je
push
aaa
or
mov
dec
loope
cmp
jno
fiadds
and
add
imul
mov
or
mov
and
lret
cmp
sub
mov
sub
xchg
push
pop
mov
ss
jnp
adcl
movsl
dec
scas
or
sbb
std
pop
popf
lock
cmp
fwait
clc
movsl
lock
insb
push
dec
fwait
mov
add
js
in
int3
sub
mov
inc
lret
sbb
stos
mov
insb
sbb
sbb
loopne
mov
inc
movsb
aad
mov
adc
mov
or
call
enter
push
cmp
in
out
fs
or
sub
sub
rolb
or
inc
and
in
mov
cmpsl
in
and
dec
push
pop
sub
iret
sub
xorl
add
std
movb
or
mov
sbb
das
pop
out
mov
inc
aas
imul
fbld
adc
pop
xor
leave
hlt
and
dec
mov
enter
nop
iret
lret
leave
mov
int
hlt
in
clc
enter
addb
and
nop
xchg
addl
lahf
push
push
in
in
ror
fldenv
leave
shr
or
mov
aam
aam
daa
xchg
sub
push
fsubrl
push
hlt
addl
mov
mov
add
es
cwtl
addl
pop
pop
or
dec
xor
addr16
aam
pop
add
mov
das
lret
in
mov
add
loopne
aaa
or
cmp
insl
mov
dec
mov
pop
xor
sub
or
ss
adc
xchg
push
sub
fildll
push
xor
out
mov
xchg
sbb
sar
fcomp
rcr
adc
rol
inc
sub
add
das
pop
nop
add
leave
and
jnp
xor
xor
enter
fdivrs
fsubs
xchg
push
xor
sbb
loopne
add
sub
lret
dec
inc
sub
lret
pop
push
ficoml
mov
dec
sbb
dec
notl
push
jl
and
xchg
es
jg
mov
xchg
mov
inc
xor
or
inc
movl
mov
xor
and
cmpsl
cmpsb
push
sub
pop
clc
inc
xor
or
scas
push
or
push
cmp
sub
cld
sbb
insl
sbb
outsl
sbb
imul
jnp
cmp
push
xor
clc
fnstenv
int3
jl
adc
mov
pop
add
stos
or
mov
jns
insb
mov
fdivrp
mov
adc
rcrb
addl
fnstsw
loop
in
sbb
leave
fsubrl
loope
fldenv
or
and
xchg
inc
adc
in
test
add
stc
lcall
adc
lods
jbe
add
push
into
dec
xorl
imul
and
les
into
xchg
and
push
adc
out
or
movaps
push
jbe
movsb
nop
push
add
add
or
mov
mov
sbb
push
scas
and
push
mov
xchg
xchg
add
add
das
pop
and
inc
aaa
sub
xchg
das
xchg
int
xchg
inc
nop
iret
jb
xchg
dec
call
and
and
in
inc
pop
int3
imul
cli
and
movsb
ret
clc
call
mov
nop
shll
and
mov
loope
mov
mov
lock
inc
dec
loope
arpl
pop
and
iret
add
sbb
inc
cmpsb
nop
addl
xorl
cmpsb
js
push
insb
test
out
les
mov
out
push
or
mov
mov
sarl
or
jl
fdivr
push
cmp
add
gs
bound
pop
arpl
push
push
pop
sbb
shrb
and
pop
aam
xor
add
pop
xor
aaa
dec
push
movsl
push
or
xor
pop
or
sub
in
jns
clc
aam
cmp
ret
jne
outsl
cmc
push
xchg
push
dec
add
xchg
inc
xlat
jp
jp
inc
xlat
jne
mov
shlb
mov
je
rcrb
adcb
adc
outsb
push
inc
add
clc
mov
rolw
leave
das
loop
rcr
addb
aaa
mov
and
pushf
aas
outsb
pop
and
xor
hlt
mov
dec
loopne
inc
js
add
enter
pop
mov
xor
cmp
jg
push
fdivs
ret
dec
popa
cmp
mov
adc
sahf
shl
xchg
pop
iret
movsb
iret
das
sub
add
inc
repnz
pop
aas
inc
add
xorl
lea
fmul
into
add
sbb
sbb
jno
unpcklps
xor
xchg
and
shrl
enter
pop
or
les
call
mov
push
mov
and
xchg
jbe
inc
dec
ds
ds
stos
arpl
xor
jb
fs
insb
aad
clc
push
or
push
dec
or
cmc
ret
dec
jle
mov
xchg
cmc
sbb
cmp
xor
outsl
push
ja
cmpsb
mov
pop
push
inc
mov
xchg
pusha
sub
shrl
fdivs
sbb
stos
movsb
inc
jne
dec
cs
pop
sub
add
mov
push
pushf
mov
test
inc
or
pop
xchg
ret
and
jp
clc
inc
stos
loope
xchg
clc
pop
ret
inc
arpl
int
pusha
sbb
in
xlat
push
sbb
pop
sbbl
test
out
pusha
in
and
daa
neg
pop
shrb
fildl
fcomp
add
lods
add
lret
leave
mov
popf
aaa
or
xchg
fcoms
dec
xor
adc
in
jno
adc
push
je
std
sbbb
push
mov
or
xchg
xchg
outsb
sbb
pop
mov
sub
ret
push
pop
stos
adc
enter
xor
adc
jle
pop
mov
std
xor
inc
adc
fsubl
xchg
ret
dec
mov
insl
push
or
test
or
flds
loope
test
and
adc
cmp
and
ds
jmp
clc
xor
ficoml
push
adc
inc
xchg
inc
xchg
jns
es
or
fiaddl
pusha
add
and
mov
cmp
add
jns
inc
inc
mov
ret
adc
adcl
stc
dec
add
int
push
and
dec
popa
rclb
out
popf
pop
mov
xor
mov
imul
in
push
jns
push
les
adcb
cmpsl
add
in
jns
int
mov
icebp
lret
faddl
dec
mov
push
sub
mov
cmpb
leave
mov
add
or
das
inc
cmp
das
sub
dec
sub
cld
inc
add
or
sub
dec
jg
dec
popa
cld
pushw
mov
mov
pop
push
push
push
fcomps
add
cwtl
dec
popf
or
inc
orl
les
and
cmp
pop
add
or
add
cmp
inc
int3
mov
dec
mov
out
inc
pop
clc
cmp
dec
sbb
mull
mov
adc
dec
fcompl
inc
lret
pop
inc
push
cld
add
push
pop
subl
xchg
ret
in
ss
xchg
mov
dec
jne
adc
push
cmp
sub
cmp
int
roll
push
ret
xchg
and
aaa
push
and
and
pop
or
sub
cmp
and
popa
arpl
xor
mov
aas
mov
fs
cwtl
and
mov
scas
and
dec
push
dec
test
sub
add
aad
loope
fildl
cmp
mov
out
adc
and
lock
data16
ret
nop
pop
das
push
push
jle
adc
fsubr
mov
inc
ret
into
faddl
daa
sbb
or
test
outsl
cld
or
pop
pop
roll
adc
leave
in
cmpsl
pop
shrb
push
xchg
xor
inc
pop
hlt
xor
mov
loopne
adcl
mov
xchg
and
jle
loopne
sbb
mov
fucomi
push
mov
mov
loopne
lods
sbb
inc
jmp
pop
and
sub
pusha
jns
aas
mov
and
popa
daa
xchg
test
jge
inc
pop
enter
push
testb
insl
mov
cmpsl
aam
xor
push
or
outsb
push
mov
mov
daa
or
movsl
add
dec
jbe
gs
pop
hlt
hlt
inc
out
add
unpcklps
enter
outsb
jge
das
adc
stos
sbb
loop
enter
pop
cmp
inc
lds
outsl
push
enter
loop
insb
test
in
loop
jecxz
repnz
push
roll
xor
das
jnp
movsl
inc
jb
jecxz
enter
pop
ja
xlat
imul
add
push
adc
call
test
into
push
sarl
mov
push
in
add
pop
test
popf
jbe
lds
mov
nop
add
in
lea
aam
sbb
xchg
add
xchg
pop
mov
inc
push
cld
add
dec
mov
popa
jb
sarl
mov
push
insl
add
sbb
sarl
scas
or
pusha
arpl
lock
enter
inc
clc
adc
xlat
in
and
aaa
fwait
sbb
inc
adc
xor
xchg
lret
jo
lods
in
out
xor
mov
inc
mov
pop
mov
outsl
adc
sub
jl
inc
pop
pop
push
imul
inc
cmpsb
mov
jp
inc
sbb
call
hlt
insl
into
and
cltd
add
jmp
clc
push
adcb
and
mov
inc
sbb
aad
addl
pop
cmp
dec
mov
or
and
push
inc
out
cltd
inc
add
xchg
cli
and
adc
pop
jnp
xor
or
inc
mov
xchg
xlat
into
jle
adc
cmp
mov
cwtl
or
push
jbe
dec
cmp
unpckhps
daa
xchg
mov
jno
rorb
inc
sub
dec
dec
pop
scas
jo
pop
outsb
jae
sbb
mov
aas
cltd
xchg
or
mov
add
sbb
xor
adc
and
sub
sbb
mov
repnz
aam
jl
in
loop
jle
adc
ds
call
cmp
push
clc
mov
out
and
cltd
subb
imul
test
test
stos
cmp
cwtl
ljmp
test
or
add
mov
pop
mov
fldcw
jmp
dec
inc
sahf
pushf
lret
push
xchg
lock
mov
dec
call
insb
and
lock
mov
dec
and
pop
add
popf
mov
push
adcb
sub
inc
arpl
inc
add
inc
repnz
xchg
adc
imul
inc
call
sbb
addr16
fnstenv
repz
mov
dec
sub
adc
hlt
testb
dec
or
out
es
enter
push
push
outsl
jo
ret
dec
cltd
dec
adc
or
pop
add
stc
inc
wbinvd
mov
push
mov
lds
cld
mov
inc
add
fcmovnbe
push
push
inc
add
add
mov
dec
lea
mov
inc
xchg
or
and
dec
shlb
push
add
in
xor
xor
xchg
push
mov
nop
outsl
stos
je
addb
test
ret
cwtl
sbbb
xor
in
add
or
setb
xor
call
add
xor
scas
adcb
in
imul
sub
add
jmp
dec
jne
mov
adc
sbb
cmpl
std
pop
call
repz
xchg
jne
mov
loopne
cmc
scas
hlt
std
out
add
sahf
fmull
and
movsb
ds
mov
adc
fsubs
dec
mov
fsubrs
or
lods
outsl
sub
test
or
cmp
inc
push
fdivl
push
jmp
aaa
push
add
leave
xor
or
push
dec
loope
xor
xchg
leave
pop
pop
add
ret
sbb
mov
mov
cmp
xor
xchg
xchg
call
ljmp
lock
imul
pop
popf
das
aad
push
ret
pop
lds
mov
inc
sbb
cmp
inc
jmp
ljmp
dec
inc
adc
pop
xor
lea
dec
add
mov
cmp
je
xor
push
sbb
bnd
and
inc
jb
icebp
loopne
sub
adc
mov
xchg
add
dec
xor
jb
jns
xlat
sahf
repnz
repnz
adc
repnz
leave
add
loop
pop
repz
push
ss
xchg
jl
sub
scas
or
fstl
out
nop
add
push
mov
imul
push
ja
das
dec
sarb
scas
shrb
pop
xchg
iret
test
dec
mov
and
or
and
lea
or
lods
xchg
imul
jmp
add
lock
ret
hlt
add
fwait
xor
into
xchg
andb
loop
add
pop
fcomps
gs
sbb
jnp
jbe
ss
outsl
mov
mov
mov
outsb
les
outsb
pop
mov
sbb
xor
inc
loope
add
sbb
xchg
xchg
sub
arpl
xor
cli
sbb
xchg
or
mov
mov
jo
push
es
das
mov
push
sbb
mov
cmp
sti
xor
xor
daa
outsb
add
and
jmp
pop
xor
cmc
addr16
in
inc
loope
cmc
xor
cmp
stos
jb
mov
js
les
imulb
in
sbb
ja
mov
jne
push
add
and
adc
xchg
cmp
stc
xor
clc
xchg
pusha
cld
xchg
divl
jne
dec
fwait
cmp
inc
add
push
idiv
add
popf
or
pop
jl
nop
push
or
movsl
lods
shlb
xchg
xchg
push
inc
inc
mov
mov
cmp
dec
inc
sti
js
pop
sbb
aaa
or
cmp
lds
sti
dec
sti
xchg
pusha
testl
mov
stos
lods
out
neg
add
stc
nop
cvttps2pi
stc
aaa
sbb
roll
leave
mov
push
or
cmpsl
adc
push
xor
inc
push
sbb
xchg
inc
aas
sbb
add
aad
mov
mov
je
lds
popa
add
add
push
mov
cmp
adc
and
lods
or
mov
outsb
push
sbb
jo
lods
dec
nop
add
cmp
fbld
push
dec
gs
scas
xor
das
int3
into
cli
in
into
adc
mov
ljmp
pop
xchg
and
and
push
or
xchg
cwtl
cli
or
push
cmpsl
mov
ja
aam
add
sbb
mov
xchg
adcb
and
test
outsb
rol
sbb
mov
lahf
dec
rol
mov
js
cld
and
nop
scas
and
inc
or
popa
inc
inc
cmpsb
adc
xor
xlat
jecxz
cld
roll
add
aad
inc
mov
pop
adc
repz
xchg
inc
push
mov
stos
cld
push
leave
lea
push
push
roll
and
mov
sub
sub
or
push
dec
das
push
aas
pop
add
xor
scas
jle
push
push
test
pop
add
bound
enter
call
add
jnp
mov
mov
sbb
dec
push
add
mov
fsubrs
hlt
pop
les
inc
push
push
nop
xorb
dec
fmull
add
or
dec
adc
cmpsl
or
jo
inc
or
push
sub
xchg
or
add
sti
sbbb
std
fdivs
add
pusha
out
jecxz
andb
inc
mov
push
xchg
movsl
pop
xor
push
ja
xchg
xchg
lds
adc
xchg
and
push
adc
std
or
xchg
xlat
pop
cmp
inc
push
push
sub
scas
shrb
das
mov
push
outsl
test
inc
andl
adc
leave
xchg
mov
inc
jns
push
nop
decl
test
sub
mov
pop
stos
test
cmp
das
add
mov
nop
sub
sbb
addl
and
cmp
rolb
and
xor
loopne
popa
das
fs
rcl
insb
pop
jo
push
icebp
nop
stos
add
pop
in
sbb
mov
push
aam
inc
aam
sbb
popf
adc
adc
insl
lret
inc
cmc
nop
cmp
dec
sbb
callw
push
fs
add
shlb
or
mov
mov
push
aas
sbb
add
jo
and
roll
add
xorb
and
aad
jmp
shr
add
mov
push
mov
push
in
push
push
pop
mov
movsb
adc
hlt
push
cmp
adc
and
xorl
into
push
mov
push
test
cli
xor
xor
xchg
add
add
sar
rcl
mov
not
pop
dec
pcmpgtb
loopne
je,pt
mov
test
es
outsb
sub
jnp
pop
sbb
add
lar
psubd
xchg
or
add
mov
add
mov
loope
push
call
adc
push
cmpsb
xchg
sub
fwait
fs
xchg
sarb
cmp
push
jmp
inc
inc
sbb
repnz
add
sub
or
adc
mov
mov
mov
mov
dec
xchg
mov
xchg
mov
pop
and
mov
cmp
push
sub
pop
sbb
jo
xchg
testb
orb
scas
nop
arpl
aaa
or
inc
dec
test
push
test
xchg
dec
bound
push
aam
jmp
add
adc
add
push
cmpsl
scas
lock
imul
sahf
adc
lods
mov
pop
movsb
pop
sbb
xor
push
jge
adc
loopne
pusha
or
and
pop
push
pop
arpl
or
dec
enter
daa
cli
inc
dec
push
xchg
mov
pop
rorl
push
lods
shll
push
mov
les
add
inc
dec
cmp
sbb
jg
cmc
jg
xchg
xor
sti
jle
sbb
inc
add
clc
and
add
mov
adc
push
add
ss
dec
sbb
and
add
xchg
cmp
inc
stc
adc
and
adc
pusha
pop
dec
dec
imull
fcmovbe
call
pop
jae
adcb
jmp
or
or
pusha
insb
in
fisubrs
stc
pop
jmp
or
inc
stc
jle
xchg
imul
insl
pushf
cmp
sbb
stc
lock
adc
jmp
inc
loope
xchg
dec
in
adc
in
lret
insl
mov
xchg
mov
xchg
dec
es
or
jae
adc
inc
daa
or
in
sti
mov
dec
adc
test
inc
sub
push
roll
lock
mov
outsb
cmp
cwtl
mul
cmp
fs
and
inc
sbb
inc
mov
push
test
flds
pop
je
pop
fsts
orb
cli
fisttps
xchg
pop
dec
ja
aad
and
pop
mov
xchg
sbbl
add
insb
jle
push
in
mov
pop
and
fimuls
pop
inc
cmpsb
mulb
cmp
ficomps
mov
xor
jb
and
mov
xor
jb
subps
inc
aam
mov
and
and
xlat
inc
ss
fsubrp
addr16
pusha
daa
push
xchg
loopne
adc
push
or
xchg
movl
mov
lea
and
xchg
lods
inc
int
loopne
stos
ss
enter
mov
rolb
cltd
ret
outsl
in
aas
loopne
add
push
or
fstpt
sbb
pusha
das
jl
mov
punpckhbw
push
push
add
xchg
xchg
xchg
pop
mov
or
or
or
push
inc
or
faddl
mov
inc
push
sub
pop
fscale
or
xor
pop
iret
mov
shrl
cmp
and
call
mov
test
sbb
add
gs
xor
enter
mov
mov
pop
push
rol
sbb
lds
or
rorb
xor
rcl
pop
and
mov
sub
mov
lahf
jecxz
push
nop
or
inc
shl
push
clc
push
je
cmp
and
mov
xchg
mov
cmp
mov
or
test
lret
sub
out
inc
and
movb
xchg
sub
adc
lea
aas
pop
fistps
movsb
sub
fwait
sbb
add
pop
loopne
sti
es
mov
mov
rcll
movups
sub
add
inc
xchg
dec
aad
lcall
add
pushf
add
pop
subl
inc
mov
repnz
xchg
dec
mov
cmpsb
and
sub
adc
push
inc
test
mov
dec
push
mov
mov
xor
adc
jne
mov
mov
dec
inc
jne
dec
push
xchg
jnp
bound
movsl
test
push
shrb
adc
clc
push
push
int3
mov
loope
xor
mov
jmp
jae
inc
and
cmpsl
ficoml
shlb
push
or
in
cmp
add
push
dec
adc
adcl
stos
jo
loope
adc
out
sbb
imul
lea
jns
lods
dec
jmp
mov
mov
xchg
xor
pop
insl
dec
adc
cld
leave
and
mov
adc
nop
cmp
mov
push
daa
push
sub
mov
pop
or
mov
inc
addb
and
push
pop
roll
adc
nop
int
mov
jo
enter
mov
loop
pusha
and
jg
outsb
dec
add
movsb
test
dec
sahf
xor
pop
lods
xchg
ljmp
or
cmp
inc
mov
cmp
dec
inc
and
inc
les
test
jl
les
call
add
xchg
rcll
rcrb
mov
pop
rclb
into
movsl
or
test
xchg
fbld
push
nop
dec
adcl
cmpsl
aas
aas
inc
call
cmp
test
dec
cltd
and
test
and
add
pop
aad
ret
dec
jg,pn
pop
and
mov
inc
in
rolb
lds
add
and
push
dec
sub
mov
ds
test
pop
orl
mov
and
jmp
and
mov
inc
add
push
sahf
inc
or
or
outsl
stos
mov
aas
ljmp
dec
aam
or
cs
xchg
lea
sbb
fcmovnu
mov
jmp
aam
inc
jnp
das
or
inc
pusha
mov
xlat
mov
fsub
or
mov
mov
dec
inc
mov
hlt
xor
jo
push
sub
xorl
add
jle
sbb
movsb
jb
add
push
adc
lods
addr16
cmpsl
push
dec
mov
sbb
dec
mov
dec
pop
clc
inc
testb
push
rol
or
jmp
sub
adc
cmp
add
ret
je
es
add
loopne
call
jmp
daa
fsubrl
push
adc
test
add
inc
jle
pusha
pop
repz
jmp
xor
sub
or
test
sbb
pushf
push
xchg
mov
cmp
sbb
add
rcl
cmp
orb
ss
inc
pop
ja
pop
jb
and
mov
cmpsb
imul
mov
fnstenv
or
sahf
mov
lea
pop
sbb
pop
dec
xchg
mov
bound
xchg
repnz
cs
push
cltd
out
nop
mov
test
jno
orb
pop
push
add
push
inc
adc
sbb
and
jge
pop
ja
push
div
sub
and
or
adc
arpl
lock
shlb
cltd
push
sub
pop
rolb
add
mov
cmp
xor
push
stos
and
fucom
add
inc
sahf
mov
jmp
mov
in
test
dec
sbb
rclb
loopne
jp
pusha
or
jg
je
sub
cli
add
dec
dec
mov
sub
add
shrb
leave
scas
fsts
adc
mov
jne
les
jle
stos
push
incl
inc
dec
incb
mov
mov
out
hlt
jle
adc
lock
or
mov
ret
mov
xchg
pop
popf
mov
jo
out
scas
xor
mov
and
lcall
sub
psubsb
in
pandn
jp
sbb
daa
dec
and
push
cmpsb
inc
mov
dec
inc
imul
or
movsl
mov
or
pop
sub
ret
cmp
adc
mov
adc
pop
orl
jle
xor
dec
xor
push
mov
jo
sbb
push
or
clc
mov
rorb
or
adc
jne
adc
adc
add
adc
test
add
hlt
jne
icebp
roll
ds
xor
imul
mov
mov
dec
je
add
add
loopne
nop
pop
mov
fsub
rclb
fldenv
inc
sub
int3
ss
aaa
es
cmp
fstpl
mov
enter
repz
sbb
cmc
aam
les
shrb
or
ds
aam
add
push
shlb
jae
mov
dec
repnz
sub
or
mov
mov
mov
int
mov
rolb
xor
lods
sarb
dec
test
push
jnp
mov
std
mov
pop
fsub
or
ja
and
mov
or
daa
pop
xchg
dec
popa
inc
cmp
adc
mov
sbb
xlat
xor
sar
shrl
ret
mov
int
adc
aas
enter
ds
and
mov
leave
movsb
or
int3
push
int3
xchg
jo
and
cwtl
lea
andl
or
jne
jnp
out
pushf
bnd
enter
and
xor
fildll
pushf
in
cmp
and
out
sub
and
das
movsb
jo
dec
cli
xor
mov
gs
xor
mov
std
loopne
inc
test
push
push
mov
xorl
clc
push
jo
and
add
or
loopne
fsubl
mov
add
xor
dec
mov
scas
lods
push
out
in
sahf
test
xchg
sub
sti
fisubs
jmp
inc
sbb
pop
lcall
mull
or
jmp
mov
or
cmp
and
add
sahf
or
jo
cmp
loopne
xorb
shll
jns
adc
dec
push
imull
pop
je
push
push
or
push
jbe
imul
xor
cmp
and
and
enter
rclb
sub
mov
and
lcall
sub
stc
pop
outsb
xor
push
adc
cmp
and
push
xchg
and
pop
and
das
fmull
cmp
and
add
out
ss
xchg
sub
adc
mov
mov
and
data16
inc
push
divl
inc
or
je
add
pop
add
jo
jne
push
jnp
adc
xor
sub
jg
mov
xchg
sbbl
dec
int
inc
add
fucomp
push
push
and
dec
xchg
mov
outsb
lds
adc
cmc
add
sbb
and
inc
mov
adc
adc
xor
sub
mov
test
lret
mov
inc
inc
mov
sub
xchg
rol
and
push
subl
pop
fmull
pushf
inc
fnclex
adc
mov
ss
pusha
sub
cmp
xor
jmp
incl
sbb
mov
xor
adc
mov
jp
jmp
add
add
mov
xor
mov
dec
sbb
or
das
xchg
in
test
aas
enter
add
scas
jne
xor
mov
jns
xchg
ret
daa
inc
mov
mov
lret
scas
mov
in
dec
mov
cmpsl
dec
jl
sub
sub
add
mov
lods
and
add
mov
xor
inc
inc
adc
mov
das
sub
xor
mov
jge
jle
or
or
or
adc
jnp
sub
stos
cmpsl
sub
daa
dec
push
aam
insl
mov
push
or
das
and
sub
pop
aas
data16
adc
addb
jmp
adc
sub
sub
inc
rolb
push
xchg
inc
jle
ret
adc
nop
nop
xchg
sti
and
add
ret
push
mov
dec
add
fwait
scas
and
pushf
fistpll
fstpt
shrb
or
push
aas
outsl
inc
arpl
dec
dec
imul
in
rcrb
call
movb
jae
pop
data16
dec
or
dec
pop
out
ret
orl
add
popa
into
ret
sub
adc
cmp
add
inc
xchg
or
xchg
xchg
lret
add
dec
jo
orl
sub
imul
lahf
outsb
lds
hlt
inc
add
and
lret
inc
fistpl
jnp
lods
dec
xlat
fwait
push
add
inc
adc
imul
test
dec
pop
decl
cltd
leave
ja
arpl
dec
sub
mov
inc
hlt
fidivrs
or
add
aas
and
mov
es
iret
dec
sbb
movsb
add
push
out
pop
dec
movsb
jl
mov
push
enter
lret
scas
or
fistpl
or
inc
xor
xchg
sub
ds
sub
xor
push
mov
cli
and
int
and
push
add
pop
adc
push
test
roll
cli
jb
mov
jecxz
dec
lds
inc
aaa
test
das
mov
fwait
jge
push
in
rorb
das
das
cli
push
cmp
adc
inc
jle
enter
xchg
cmp
push
and
cmp
cmp
dec
inc
dec
ds
add
call
push
cs
or
mov
or
aaa
es
and
xor
push
daa
adc
mov
test
or
cmp
jbe
inc
mov
push
jbe
daa
jmp
add
pop
sub
pop
and
ret
mov
fwait
jge
sub
push
push
fldl
pop
mov
jmp
xor
repnz
bound
leave
pextrw
in
xor
adc
inc
inc
xchg
hlt
jae
push
adc
js
cmpsl
call
add
lcall
arpl
push
pop
sbb
or
sub
je
sub
pop
insb
ret
sbb
insb
orb
xchg
shlb
movl
adc
or
push
or
and
addl
or
loop
imul
fwait
rorl
or
and
add
mov
cmpsl
pop
fimull
sti
lea
push
or
push
out
insl
add
test
inc
adc
push
rcll
orl
inc
push
les
xchg
sbb
fwait
les
inc
aas
cmc
xlat
pop
cmp
sbb
adc
aas
sbb
repnz
jbe
xor
outsb
cmp
movb
loop
or
adc
xor
inc
dec
or
cld
xor
mov
test
sbb
sbb
shll
xchg
mov
sbb
outsl
push
dec
and
push
arpl
outsb
lret
mov
adc
test
dec
jns
xorb
inc
mov
les
pop
inc
jge
and
inc
xor
push
jne
and
inc
cmp
push
lea
or
loop
jbe
xor
inc
add
sub
pop
xchg
add
fadds
lock
pop
cli
dec
push
mov
push
adc
inc
xchg
pop
adc
sbb
adc
imul
cmp
imul
xchg
mov
roll
add
dec
movsb
mov
jg
inc
push
lods
clc
loopne
sbb
fcmovb
inc
rolb
push
xchg
mov
scas
sub
add
lods
mov
jbe
adc
rclb
hlt
ret
mov
xorb
cwtl
lds
mov
fsts
or
scas
sbb
mov
add
dec
and
sbb
ret
mov
xchg
and
add
sbb
push
xchg
std
in
int3
xor
or
add
adc
cltd
sub
pushf
in
or
lods
inc
xchg
cmc
and
sbb
sbb
jmp
xchg
shll
mov
mov
add
mov
in
inc
dec
sub
push
xorb
sbb
aad
adcl
insl
add
add
jp
mov
nop
or
pop
xlat
movl
aam
cltd
and
in
or
jl
adc
mov
mov
add
add
fsubl
xor
fisttpl
mov
dec
adc
inc
mov
mov
add
mov
add
dec
xor
pop
inc
or
inc
ss
nop
push
cmpsb
push
fsubrs
fwait
xor
add
mov
test
sub
mov
cmpsb
adcb
imul
pop
adc
push
jnp
xchg
dec
mov
int
ficomps
push
adc
add
mov
push
inc
adc
jecxz
or
ja
and
sar
cmp
push
lahf
sub
or
les
bound
or
sub
les
outsl
into
pop
adc
xor
push
dec
aaa
mov
xlat
add
mov
push
fsubrl
adc
dec
add
cmp
test
in
and
add
lds
inc
jmp
inc
mov
push
inc
mov
enter
push
push
mov
inc
dec
sub
sub
nop
sub
out
xor
arpl
in
sbb
addr16
or
out
cmp
xchg
jae
clc
sub
popf
and
and
xchg
xchg
sub
or
pusha
es
outsl
dec
add
xor
mov
add
imul
and
adc
ret
mov
pop
add
sub
add
jle
inc
hlt
sbb
stos
fucomi
push
xorl
rcll
dec
in
bound
xchg
pop
mov
jne
lea
xchg
xchg
lea
xor
jne
stos
push
fstpl
push
push
cmpsl
jnp
fimull
aaa
jae
push
ss
stos
in
test
inc
sbb
add
subb
pop
mov
adc
push
cmc
in
xor
flds
push
add
pop
add
stos
adc
sbb
ret
loopne
insl
fwait
inc
inc
dec
je
jmp
pop
sub
enter
addl
or
sbb
les
sub
inc
or
mov
add
repnz
push
nop
ds
xchg
adc
fstl
data16
mov
ret
lgs
cltd
arpl
push
mov
stos
subb
xchg
or
rclb
mov
and
test
test
sahf
or
sbb
add
xor
xor
sbb
orb
addr16
and
mov
push
jle
pop
nop
mov
lea
jns
mov
rolb
push
add
dec
add
popl
lea
sbb
sub
xor
sbb
pop
xorb
pop
sti
dec
mov
ret
add
sbb
fisubrs
inc
pop
xchg
shr
les
sbb
call
rclb
jbe
dec
daa
adc
xlat
push
lret
out
lock
sbb
out
adc
cmp
push
cmp
or
pop
push
adc
lret
adc
test
sub
push
rol
or
push
mov
dec
or
test
int3
insb
adc
xchg
sbb
ror
adc
enter
es
pop
mov
aam
cmp
mov
rol
sub
in
cmpsl
inc
inc
out
xor
inc
jo
add
jne
pop
test
add
jg
or
xchg
sub
adc
call
loope
adcl
xorl
mov
add
inc
push
mov
fwait
and
push
fbld
or
addr16
les
out
mov
test
add
sbb
aas
or
insl
lahf
pop
nop
test
and
sub
nop
push
sub
adc
add
in
mov
pusha
inc
in
aas
and
icebp
xor
call
jne
loopne
and
push
je
xchg
inc
jecxz
adc
push
mov
fiadds
gs
scas
in
repnz
inc
hlt
mov
imul
dec
fsubr
or
adc
adc
adc
add
sub
aaa
lahf
mov
fists
and
and
popa
mov
and
pop
test
fwait
mov
dec
adc
and
or
movsb
cs
icebp
cld
cld
pop
sbb
add
cwtl
jge
inc
fbld
dec
fbstp
sub
in
adc
test
in
inc
aad
nop
ret
and
or
into
in
mov
push
inc
push
or
push
adc
or
and
sub
or
out
mov
movsl
insb
mov
add
pusha
lods
and
ret
mov
mov
sub
jnp
dec
clc
enter
pop
sbb
dec
loopne
nop
adc
lahf
pop
je
add
xor
pop
inc
fsts
sub
mov
pop
lahf
inc
fprem
ret
lret
loope
ret
aam
add
sbb
popf
dec
shll
xchg
xchg
jnp
jnp
movsl
push
daa
sub
jl
out
cmp
rolb
or
inc
push
nop
xchg
adc
cmp
pusha
pop
mov
loope,pt
out
mov
ja
adc
mov
mov
sub
js
aas
insb
dec
andl
lcall
popf
jae
jl
push
add
xor
aam
adc
add
add
insl
sub
add
add
lods
sub
add
xchg
shlb
sub
mov
test
out
ja
push
ficoms
push
loope
push
inc
out
mov
add
dec
mov
and
pop
or
dec
push
push
and
mov
push
push
inc
dec
inc
dec
push
dec
pop
or
inc
movhps
add
push
add
push
jb
popa
js
test
sub
gs
adc
mov
xchg
incl
push
shll
movsb
xchg
shl
or
push
pop
dec
pop
jmp
add
push
add
pop
gs
aaa
jnp
repnz
push
sbb
dec
sbb
es
iret
dec
clc
insb
inc
outsb
xor
inc
push
sbb
or
icebp
jmp
mul
mov
push
inc
push
pop
push
push
dec
pop
inc
pop
mov
mov
fwait
mov
imul
dec
and
add
mov
mov
mov
sub
xchg
shlb
je
add
dec
mov
pop
or
int3
jle
adc
dec
dec
inc
mov
add
or
sub
cmp
lea
add
test
popf
bound
inc
in
lods
inc
inc
jae
adc
gs
test
sbb
test
ror
test
adc
and
arpl
xor
pop
jnp
nop
dec
add
leave
push
dec
push
insl
test
xchg
shll
mov
add
mov
jae
mov
adcb
mov
cmpsl
or
outsb
cmpsb
inc
mov
push
sbb
outsl
stos
sub
dec
sbb
fldcw
jp
inc
and
mov
je
bound
daa
fisubrs
sub
jbe
mov
or
pushf
and
sub
sti
daa
xor
mov
push
stos
inc
inc
cmp
and
popf
lret
sbb
dec
xor
inc
push
dec
xor
inc
dec
inc
push
sbb
jno
xchg
inc
jae
adc
subl
imul
adc
mov
dec
dec
cmc
xor
dec
dec
pusha
cs
adc
xlat
in
inc
pop
aas
mov
mov
pop
inc
rclb
xchg
cmpsl
pushf
adc
pop
aaa
pop
xor
sarb
or
or
dec
inc
lahf
or
or
dec
rorl
or
dec
mov
and
dec
inc
mov
nop
sub
add
mov
pushf
rcr
lods
mov
inc
inc
inc
cmp
push
cmp
cmpsl
xchg
adc
lcall
push
movsl
or
inc
dec
inc
inc
inc
fcom
push
testb
xor
hlt
aaa
dec
push
and
enter
lahf
push
rcrb
adc
sub
out
pusha
orb
into
dec
pushf
dec
dec
pop
mov
in
or
xor
adc
fadds
mov
add
push
inc
outsb
lods
push
clc
mov
jns
dec
push
enter
push
dec
mov
call
jns
add
add
xchg
xchg
popa
cli
add
pop
push
inc
add
adc
arpl
lret
fwait
pop
bound
dec
xchg
jne
adc
push
or
mov
pop
outsl
push
shlb
mov
and
and
insl
and
or
pop
and
mov
mov
je
nop
sub
lcall
mov
jo
out
enter
or
jb
nop
imul
xchg
js
addr16
xor
ret
ds
insl
jo
test
test
pcmpeqw
jne
dec
imul
fwait
inc
imul
addr16
or
shlb
mov
xor
mov
shll
xlat
add
add
lahf
cmpsb
mov
pop
daa
pushf
jecxz
mov
push
scas
out
test
lss
cld
push
jle
and
cmp
push
pop
mov
or
pop
repnz
divw
bound
sub
andb
pop
pop
cmp
adc
insl
outsl
fs
es
pop
js
mov
nop
and
lds
shlb
and
andl
or
fwait
adc
push
push
sub
movsl
daa
gs
loopne
nop
loope
jae
pop
mov
xchg
push
pop
xor
gs
or
push
aaa
mov
jle
clc
push
fstps
mov
pop
daa
push
enter
jo
pop
and
pop
jbe
cmp
cmp
test
pop
ror
dec
mov
and
push
bound
adc
xchg
out
mov
sbb
fs
xor
and
jno
sub
xor
jo
pop
sub
xchg
jl
int
jno
in
cmp
cmp
hlt
sub
jb
mov
xchg
outsb
xor
xor
dec
jno
add
and
sub
inc
xchg
mov
push
push
insl
dec
icebp
fwait
push
sub
inc
dec
clc
push
test
in
jnp
cld
or
add
add
adc
movsb
mov
call
rolb
seto
add
mov
sub
and
inc
nop
push
nop
lret
inc
rcrb
push
inc
out
sbb
xor
mov
outsl
test
mov
rolb
jne
dec
or
test
adc
jb
sbb
and
add
out
jo
inc
cs
fs
psubw
pop
testl
jmp
sub
notl
into
sbb
adc
pop
xor
add
jae
or
fs
out
std
jno
pop
mov
dec
or
sbb
jl
aad
and
add
int3
jne
xor
jb
cmp
scas
nop
cmpsl
or
leave
add
nop
push
push
inc
mov
dec
or
push
lcall
test
push
pop
push
dec
inc
pop
in
pop
xor
pushf
sbb
xchg
popa
test
sbb
mov
lahf
lahf
sbb
or
and
jbe
add
adc
aam
out
test
xlat
pop
fnsave
mov
pop
xor
js
lea
pop
pop
loopne
insl
xor
xchg
push
orl
dec
mov
lcall
pusha
or
sub
out
sbb
adc
add
sbb
imul
or
das
cvtdq2ps
sbbb
dec
inc
xor
std
shlb
test
and
cli
das
lods
pop
pop
sub
lock
and
loope
roll
mov
or
insl
fs
ljmp
js
push
test
out
or
enter
push
push
dec
mov
mov
mov
sub
icebp
das
clc
jbe
pop
or
jno
cli
fdivs
push
imul
popa
call
pop
xchg
sti
arpl
cmp
dec
xchg
sti
add
sub
stc
loope
jb
subb
fwait
mov
icebp
dec
jbe
dec
sbb
daa
clc
xchg
mov
xchg
pusha
pop
xchg
cmovae
dec
inc
push
pop
rcrb
lahf
mov
nop
pop
sbb
das
iret
xchg
pop
sub
mov
or
ret
sbbb
outsl
sbb
adc
scas
adc
inc
xchg
ja
ret
mov
jo
ds
enter
mull
sbb
adc
pop
adc
sbb
mov
sub
sub
xor
mov
leave
jmp
mov
pop
jnp
sbb
daa
push
gs
ret
xor
loope
cmp
pop
add
xchg
jl
add
xor
pop
add
repnz
dec
push
push
ja
test
sbb
pop
pusha
jns
movsb
mov
scas
jne
loope
pop
jb
ficoml
fs
jae
insb
insb
stos
je
es
pop
add
pop
cmp
push
daa
or
pop
xor
inc
dec
inc
fsubl
and
push
sbb
aas
xor
mov
sbb
mov
mov
adc
add
adc
mov
dec
inc
push
dec
cs
inc
inc
xor
popa
jmp
xor
popa
adc
ljmp
insl
sbb
fmull
lods
cmpsb
dec
add
out
movl
daa
fs
adc
add
inc
pop
inc
dec
das
push
ljmp
mov
faddl
push
adc
das
mov
testb
fldl
ja
rcrb
sbb
pusha
dec
sbb
aam
fprem
pusha
bound
dec
add
rorl
pushf
push
addr16
mov
jo
lahf
outsb
add
pop
and
ret
or
sub
jmp
jmp
popa
push
pop
push
xchg
and
and
jmp
insl
mov
sub
int
adc
gs
push
inc
xchg
lret
push
imul
sub
adc
outsb
xor
and
fistpl
sbb
xor
lcall
dec
sbb
and
inc
xor
dec
push
dec
pop
dec
cmovg
ffree
and
mov
insl
pop
and
das
push
cs
adc
jae
pop
jne
roll
arpl
or
leave
gs
loope
jl
fs
imul
xor
addr16
adc
bound
add
and
pop
add
or
push
inc
ljmp
fs
jl
or
jno
cmp
or
sbb
xor
imul
aaa
test
and
xchg
xor
movsl
or
js
pextrw
dec
cmpsl
aaa
add
js
sub
gs
or
addr16
js
ljmp
push
adc
sbb
fwait
pusha
mov
push
jns
shrl
aaa
js
cmovno
xchg
jo
inc
sbb
leave
cmp
push
fldl
cmpb
lret
adc
bound
aam
adc
push
add
out
adc
inc
adc
sub
aad
andb
in
mov
outsb
push
repz
inc
cld
xor
imul
daa
add
popa
imul
or
sti
dec
mov
pushf
outsw
cltd
dec
lretw
mov
fnstsw
mov
mov
push
push
lock
pusha
lahf
ror
mov
addr16
sub
sub
inc
jnp
adc
sub
loopne
push
movaps
jns
addr16
popa
pop
scas
xchg
or
aas
jo
inc
mov
dec
or
xor
punpcklbw
add
mov
xor
or
test
enter
or
ja
in
fisttps
and
rol
xor
pop
inc
hlt
addl
insl
andl
bound
add
les
push
ja
pop
push
repnz
dec
dec
dec
adc
ja
push
ret
lret
xchg
dec
nop
adc
test
aam
inc
dec
dec
inc
call
xor
push
add
pop
aaa
sarb
or
adc
das
push
xor
ljmp
cmp
or
repnz
call
mov
dec
adc
inc
sub
add
sbb
jmp
push
jo
and
pop
inc
xorl
fbld
add
and
or
push
aam
into
or
or
cwtl
fldl
inc
or
and
rorb
mov
mov
mov
jbe
lods
sbb
cmp
or
or
xorl
dec
push
or
push
push
icebp
shrb
push
popa
stos
sbb
add
cmpsl
adc
push
arpl
lock
shrl
pop
adc
out
xchg
dec
ret
in
and
adc
sbb
add
dec
shlb
and
mov
mov
or
das
fbstp
cs
daa
sub
data16
or
sub
push
jbe
shrd
xor
dec
xor
sub
cmp
movsl
insl
lock
shlb
cmp
or
test
leave
or
outsl
push
jns
xchg
mov
arpl
inc
xor
shr
mov
xor
cmpsb
dec
push
mov
jne
aas
call
mov
adc
out
and
out
cmpsb
push
pop
jns
imul
inc
add
testb
or
pop
mov
inc
push
loop
insl
ljmp
sub
push
mov
inc
mov
stos
sub
add
jnp
add
and
jp
stc
pop
adc
xchg
pop
cmpb
insb
jg
fstl
and
xchg
pop
and
andb
fildl
or
test
dec
das
fs
or
cmp
lods
pop
cmp
push
movaps
pop
sub
adcb
cltd
push
dec
fmuls
shrb
sti
lock
cs
adc
and
and
mov
cmpsb
inc
imul
push
fstpl
outsb
inc
or
jae
adc
into
ret
adc
js
push
xor
out
das
js
add
outsb
xor
pop
inc
push
dec
inc
push
push
pop
mov
cmpsl
mov
push
shrb
and
aam
nop
xor
adc
push
mov
jo
jp
or
sbb
add
ja
or
popf
sub
pusha
lock
jb
jmp
aaa
add
dec
outsl
fistl
cmp
ja
or
loope
fs
daa
movb
out
pushf
pop
jl
sub
push
cmp
in
or
aad
cmpsb
adc
scas
aam
adc
insl
xchg
push
push
cmp
inc
jo
imul
in
xchg
or
add
inc
xor
add
add
sbb
add
sub
push
sbb
fisttpl
insb
pop
shrl
push
je
inc
shrb
adc
jo
cwtl
loop
xchg
or
add
aad
movsb
xor
mov
jg
add
cmp
mov
addr16
and
adc
adc
inc
or
mov
je
push
pop
sub
mov
lds
pop
xlat
mov
call
in
xor
jb
into
test
aaa
in
add
sub
adc
mov
or
mov
pop
insl
test
xor
mov
jne
adc
mov
cmpsl
xchg
cmp
cmp
adc
in
dec
xorl
or
xchg
and
movsb
cmp
and
mov
add
push
add
repnz
mov
pop
cmpl
je
jae
ret
and
ds
adc
xchg
cwtl
or
adc
sub
sub
xchg
imul
pusha
mov
mov
pushf
push
fdivl
inc
jb
lahf
and
in
or
push
inc
lods
sbb
inc
and
fsubl
sub
mov
ja
scas
loop
fisubrl
ja
or
int3
jb
or
callw
add
popa
sbb
mov
test
sbbl
pop
sbb
jo
sbb
imul
dec
movsb
shll
fcoms
insl
pop
aam
cwtl
adcb
gs
dec
mov
ja
cwtl
or
jo
ret
jg
xchg
out
inc
inc
push
pop
xchg
imul
cmp
pop
inc
outsl
or
lock
sbb
aad
inc
and
or
stos
dec
add
js
das
dec
xchg
sub
push
or
fwait
lret
dec
cmp
sbb
movsl
or
jmp
adc
push
mov
imul
cmp
xchg
cmp
push
mov
xor
clc
mov
mov
cwtl
test
jae
lea
push
xor
sub
mov
and
dec
adc
fcoms
inc
es
sbb
add
cld
fadds
add
push
sbb
cmp
cmp
scas
push
cmp
cwtl
mov
and
cmc
pop
adc
push
add
les
mov
cwtl
push
ret
insl
inc
or
cwtl
sbbl
ja
imul
and
cs
fdivl
or
xor
popa
sbb
jp
add
push
sbb
push
mov
js
push
lahf
jge
sbb
mov
xor
mov
or
nop
adc
mov
xor
and
insl
js
jb
movsl
fwait
jb
dec
loopne
sub
js
out
push
js
cld
fs
std
movsl
cld
xlat
adc
dec
sahf
pop
aad
sbb
sbb
jae
push
mov
sub
add
sbb
nop
lret
das
add
adcl
js
dec
mov
outsl
aas
or
xchg
push
mov
pop
mov
fst
lods
adc
adc
sbb
movsb
push
dec
sbb
jp
pop
comiss
outsl
lcall
nop
sbbb
push
pop
add
shrb
cmpsb
xor
add
int
loop
and
sbb
ja
push
jne
rcr
jnp
mov
push
daa
fbld
fs
sub
popa
testl
fdiv
rcl
pop
sbb
push
pop
leave
sbb
lods
divb
push
cmp
pop
leave
arpl
and
mov
adc
jb
add
fwait
cmp
xlat
mov
add
pop
add
popa
fwait
je
add
adc
jno
push
fwait
xor
cmp
icebp
add
pop
dec
ja
fs
inc
and
xlat
lea
add
and
lds
dec
cmpl
int3
mov
aad
aas
jl
pop
pop
push
adc
mov
and
mov
mull
mov
sbb
call
dec
xchg
jo
popa
xor
je
cwtl
adcl
into
xchg
outsb
mov
orb
call
or
pop
movsb
sub
aas
cmpsb
je
test
insl
lods
aad
mov
sbb
push
pop
es
lds
subl
mov
cmp
mov
pusha
ret
rol
cmpsl
adc
sbb
fs
enter
inc
cmovae
cld
jbe
push
stos
xchg
lret
adc
push
lock
stos
test
dec
dec
loope
clc
cmp
shl
push
cld
sbb
mov
movsb
dec
adc
xor
pop
addr16
fs
aas
adc
insl
mov
xor
and
popa
mov
jge
xor
xchg
cmpsl
lods
es
ds
cmp
fldl
or
sbb
and
outsl
je
sub
pushf
mov
rolb
incl
push
fsts
sbb
addb
xor
push
test
xor
push
xor
push
dec
adc
pop
or
retw
std
or
lds
push
fmuls
pop
movsb
sti
or
out
and
rcrb
add
inc
imul
test
or
xchg
jb
stc
xchg
adc
ja
pop
fwait
mov
bound
ja
test
mov
fimull
mov
or
test
dec
fdivs
adc
lock
push
add
fildl
sub
xor
xor
mov
add
rcrb
pop
shll
fisttpl
mov
test
js
popf
daa
enter
add
sub
and
dec
and
mov
and
loop
int
mov
pop
xor
or
pop
xor
clc
inc
cmp
das
xor
and
enter
pop
sbb
daa
add
jp
leave
scas
jge
stos
je
add
inc
js
dec
cmp
scas
jl
bound
mov
add
cmp
fstpt
fiaddl
jg
inc
lods
imul
sub
jb
lret
cwtl
and
stc
sbbb
shlb
rorb
les
xchg
rorl
dec
pop
inc
call
dec
mov
shlb
aam
test
or
mov
inc
fsubrs
sti
jp
aad
imul
sbb
cmc
cs
nop
dec
pop
repnz
enter
lock
cltd
nop
mov
fiadds
mov
xchg
pop
stc
filds
xor
and
inc
ja
or
psrlw
mov
movsl
lea
add
xor
loopne
adc
sbb
nop
out
or
mov
es
mov
mov
nop
subb
pop
or
xchg
cmp
dec
jecxz
adc
or
fidivl
pop
jo
inc
lods
nop
je
adc
xor
in
notb
daa
push
icebp
or
jno
mov
sar
inc
cmp
xchg
and
dec
out
dec
sub
inc
fsubs
or
add
mov
gs
mov
xor
pop
ds
mov
pop
jge
add
and
ja
shlb
sahf
mov
sub
push
pop
or
adc
and
sub
pop
cli
imul
sub
daa
xor
add
in
push
pop
xor
cmp
or
clc
xchg
ficompl
cltd
mov
in
adc
ljmp
mov
adc
and
add
insb
dec
xlat
or
or
push
in
push
cwtl
nop
ja
sub
or
daa
pop
pop
add
loopne
scas
pusha
jae
push
xchg
lods
cmp
aaa
xor
aaa
sub
mov
mov
sbb
add
bound
repz
arpl
cmp
cmp
ret
jnp
stc
pusha
mov
gs
xor
mov
bound
xchg
mov
push
stc
scas
icebp
xor
packuswb
mov
int3
and
call
imul
ret
fs
das
fwait
and
stos
jae
fists
adc
incl
xor
outsb
daa
sbb
bound
or
jg
mov
push
inc
call
imul
movsb
imul
inc
dec
sub
ja
lock
lock
and
pop
xchg
repz
mov
clc
or
jo
test
sub
lret
xchg
lret
inc
or
test
mov
insb
lock
pusha
inc
inc
push
test
jg
mov
fwait
sbb
pop
movsl
adc
jge
or
loopne
sarl
or
mov
test
cmp
sub
rcll
dec
push
dec
pop
popa
jle
adc
or
sub
rdtsc
fs
mov
mov
gs
adc
roll
and
or
dec
fisubl
pop
xor
shlb
gs
jo
or
jp
mov
dec
mov
xor
adc
add
jo
loope
pop
in
adc
jg
mov
jmp
sbb
icebp
fwait
int3
or
inc
fs
adc
js
popf
ja
and
sarl
xor
inc
push
enter
add
sbb
pop
pop
sub
aas
sbb
mov
mov
sub
mov
and
adc
push
je
das
in
xchg
das
sub
mov
sbb
mov
cmc
sub
out
data16
insb
sub
or
pop
xor
lea
lea
testl
outsl
mov
cmp
arpl
push
fsubs
cmp
adc
push
ret
mov
dec
jae
adc
mov
sti
fldl
add
adc
jmp
cmpsl
push
sahf
jne
cmp
add
inc
adc
scas
adc
fbstp
pop
mov
xor
push
or
xor
push
int
adc
lock
dec
scas
es
lret
mov
out
fcmovnu
repnz
fstpl
mov
adcl
dec
inc
das
testl
testl
or
add
mov
mov
push
add
icebp
dec
gs
and
xor
or
add
scas
pop
push
aas
or
lea
insl
xchg
out
inc
dec
dec
loopne
xor
adc
sbb
pusha
aam
mov
add
push
cltd
adc
fldl
mov
sbb
sub
pop
push
stc
sarb
sub
mov
mov
xchg
insb
mov
mov
inc
movsb
dec
pop
pop
and
jo
mov
push
or
mov
xor
pushf
push
pop
mov
push
push
add
loop
or
ficoms
pop
rorl
je
xor
lahf
lock
mov
ret
add
test
adc
jmp
add
fs
jp,pn
cld
insl
imul
leave
into
add
mov
xchg
add
or
mov
and
rolb
les
pop
xlat
stos
or
inc
pop
or
sub
xor
jmp
test
data16
push
insl
inc
cmp
pop
sub
rorl
and
int3
gs
inc
or
rorb
pop
int
leave
daa
loop
nop
movsb
push
das
adc
loopne
popfw
sbbb
or
push
sbb
fs
mov
sbb
rclb
xchg
aas
outsb
or
jae
cmp
or
xor
les
push
sbb
pop
icebp
out
dec
incl
ficoms
mov
shlb
or
jg
lods
imul
push
or
test
mov
mov
fiaddl
insb
push
and
cltd
mov
outsl
add
and
mov
pop
dec
sub
pop
ja
loopne
je
outsb
rcll
insl
push
test
popa
sub
jno
adc
orl
imul
cmp
mov
adcl
jno
dec
loope
mov
popa
loop
cmp
inc
xor
dec
jo
bswap
lods
aas
arpl
shlb
xor
orps
bound
cltd
and
loopne
int
pop
lahf
out
je
and
lods
xor
cmc
xor
rorb
adc
xor
js
or
push
jb
ret
or
and
insb
cld
or
cmp
das
int3
push
add
mov
jb
and
cmp
mov
mov
sbb
adcb
test
gs
and
xlat
sbb
jb
or
dec
fisubrs
pop
or
hlt
cwtl
call
outsb
in
sbb
movb
cs
std
sub
add
jns
add
movsb
es
xchg
pop
loopne
das
ljmp
mov
nop
emms
add
sbb
lahf
je
cmp
xchg
push
adc
adc
roll
int
jl
dec
pusha
subb
xor
jno
js
sub
repnz
test
scas
add
adc
mov
loopne
dec
mov
adc
mov
add
mov
mov
xor
sub
ret
cmp
dec
fwait
pop
int
jecxz
adc
lods
fwait
daa
cwtl
pushf
mov
es
das
ljmp
xor
das
push
incl
pushf
push
nop/reserved
sbb
outsl
mov
test
adc
clc
dec
sbb
add
test
xchg
or
sarb
pop
xor
xor
sub
fldl
mov
pop
js
mov
pop
popf
pop
mov
push
cmpsl
pop
push
fwait
sbb
push
adc
mov
add
movsl
out
dec
add
or
and
sahf
ja
pop
jno
sub
sahf
xchg
push
jge
fbld
cmpsb
or
sub
pop
aam
or
je
adc
rcrb
mov
pop
xor
popa
sbbl
sahf
mov
bound
test
xchg
lahf
addr16
push
xchg
adc
sub
testb
sub
in
adc
mov
cmp
jnp
jne
or
in
xchg
xchg
mov
lock
or
inc
pop
sbb
ret
sub
dec
dec
dec
ss
xor
nop
xor
mov
jp
jo
out
push
call
sbb
jecxz
fwait
mov
subl
shrb
mov
add
mov
mov
xor
add
push
mov
nop
inc
pop
push
dec
mov
rcrl
addr16
and
test
push
js
nop
add
dec
push
sbb
jb
enter
adc
push
and
adc
sbbl
mov
or
cltd
add
or
or
inc
cmpsb
or
sbbl
add
adc
movsb
pusha
push
cmc
push
bnd
stos
andb
test
push
cmpsl
arpl
push
ja
pop
inc
push
mov
push
test
lods
dec
sar
in
lock
push
in
add
push
jno
adcl
hlt
add
pop
dec
sbb
scas
mov
inc
clc
je
adc
daa
fwait
lret
or
add
pop
push
imul
je
xor
adc
xor
inc
sbbb
outsb
rclb
mov
inc
insb
pop
and
cld
movsb
ss
push
cmpsb
sbb
fcoms
cld
cmp
jmp
sbb
lret
inc
call
enter
adc
enter
adc
push
leave
inc
or
enter
or
mov
mov
adc
arpl
push
mov
inc
and
adc
mov
jmp
in
sub
cmp
mov
add
sub
push
ss
test
xor
aam
push
sub
pop
push
xor
xchg
push
jmp
lcall
lock
into
pop
or
adc
mov
pop
cmp
cmp
das
sbb
pop
fbld
jo
shll
inc
jp
xchg
add
fmuls
dec
lea
orl
and
daa
xor
in
jle
add
sub
and
sbb
sbb
sub
jnp
hlt
daa
pop
jl
add
xor
fadds
and
push
fistps
or
icebp
scas
pop
cld
sub
fadds
push
ret
mov
int
je
jne
pusha
xchg
nop
push
jg
mov
in
cmp
xor
jmp
in
inc
inc
dec
mov
leave
and
jnp
and
xlat
mov
add
push
jo
dec
xor
jno
or
sub
and
lea
insb
mov
pop
cs
mov
mov
mov
add
pop
jl
jo
push
pop
jns
in
fbld
ret
scas
dec
ret
inc
or
dec
jnp
add
cmp
jno
dec
xchg
pop
stc
add
dec
jno
loop
es
jo
pop
or
gs
loope
add
cmp
daa
push
enter
fwait
mov
out
dec
and
add
jle
shll
lea
mov
mov
push
add
mov
cld
mov
cmp
inc
or
sbb
aad
add
push
mov
adc
imul
pop
in
insb
push
lahf
jno
gs
push
rorb
pop
ret
out
xor
test
les
lods
insl
add
outsl
jo
faddp
push
cltd
xchg
cwtl
add
dec
insl
rcll
add
push
mov
jb
add
in
dec
mov
cmp
mov
xchg
cmc
or
and
test
jo
and
sub
mov
fistpll
pushf
inc
mov
inc
inc
push
stc
and
add
xor
enter
ret
and
adc
sbb
enter
ret
sbb
inc
push
sbb
sub
pushf
sbb
sub
subl
mov
enter
cmp
push
cmp
nop
xchg
inc
mov
lock
jbe
dec
xchg
and
xchg
push
push
inc
push
push
je
enter
xchg
pop
xchg
mov
cmc
fsubs
xchg
arpl
clc
and
mov
xor
jo
and
xchg
je
fdivs
sarb
and
or
sub
andb
enter
mov
lock
sbb
in
nop
xchg
inc
xchg
push
cwtl
test
and
xor
movsb
test
ror
and
cmp
inc
lods
js
sbb
push
mov
and
mov
sbb
fs
sarb
xchg
inc
inc
ror
leave
adc
std
shlb
in
and
in
jl
sbb
push
xor
sub
or
leave
int
sbb
fs
insb
xchg
inc
inc
push
loopne
in
jb
nop
fsubr
adc
in
and
mov
jb
enter
aam
inc
mov
or
xor
fs
dec
cmp
int3
inc
sbb
jb
enter
hlt
mov
fcoml
cmp
rcll
mov
push
sbb
lret
pushf
inc
shlb
and
inc
mov
sbb
enter
fcoml
inc
push
loopne
in
fs
enter
mov
and
inc
lock
and
mov
shlb
and
out
xchg
arpl
push
les
mov
and
mov
sub
aam
sub
cmp
jo
push
movsl
mov
jb
insb
add
and
insb
inc
inc
push
cmp
aad
inc
fs
xchg
orb
cmp
jb
enter
xchg
inc
mov
rcrb
ret
xchg
pushf
inc
xlat
lds
fwait
sbb
dec
fsubs
xchg
cmp
push
mov
xchg
inc
inc
mov
mov
and
in
xchg
arpl
enter
fs
int3
cmp
ret
push
jecxz
in
mov
aam
cmp
mov
fdivs
pushf
loope
aam
mov
mov
and
mov
inc
xor
fsubrl
mov
cmp
push
and
enter
cmp
cmp
and
dec
push
cmp
jl
sbb
dec
xchg
inc
inc
mov
push
pop
dec
cmp
test
inc
inc
push
sbb
pop
call
fs
adc
pusha
and
cmp
pusha
insb
adcb
je
jb
nop
rorb
nop
and
addb
cmp
xchg
inc
fs
push
sbb
fs
hlt
xor
es
loopne
and
arpl
and
insb
cmp
and
les
sbb
in
dec
and
dec
push
fldcw
sub
in
nop
xchg
pop
xorb
mov
jb
shrb
addr16
and
sbb
lret
jl
fs
and
push
dec
and
fs
nop
gs
and
mov
nop
xchg
inc
test
cwtl
sbbl
fcompl
and
dec
mov
mov
jb
test
loopne
nop
and
push
sbb
fs
les
jnp
inc
inc
pushf
int3
call
and
mov
out
cmp
cmp
push
sbb
xchg
popa
daa
out
cwtl
je
cmp
test
loopne
and
movsb
sbb
test
xor
jo
movsb
mov
jbe
mov
and
fisttpl
sbb
xchg
les
enter
cmp
push
rclb
aam
fmuls
push
sbb
jbe
jmp
fsubrl
mov
inc
movsb
clc
xchg
and
nop
lret
add
clc
or
adc
adc
sbb
xchg
mov
adc
sbb
sbb
and
xor
lock
sbb
fs
in
call
push
sbb
mov
test
add
add
enter
and
mov
add
xor
push
or
iret
push
push
pop
push
je
call
cmp
in
out
repnz
lea
dec
repnz
fsubl
add
mov
dec
xlat
jge
jmp
fs
out
add
fs
shlw
or
and
and
shlb
lock
inc
inc
pushf
clc
rolb
or
cmp
lock
inc
adc
inc
push
sbb
repnz
xchg
sbb
lock
and
clc
pop
jns
enter
add
mov
mov
repnz
in
and
mov
js
mov
cwtl
xor
fs
dec
faddl
test
mov
jb
nop
xchg
adc
adc
hlt
and
sbb
jb
in
call
push
sbb
xchg
and
nop
lret
lock
jae
xchg
ret
imul
fs
sbb
les
xchg
adc
rcll
enter
xchg
and
mov
sub
scas
and
pop
push
dec
hlt
mov
cli
push
inc
es
or
scas
dec
add
inc
or
xor
data16
dec
decl
inc
push
push
sbb
jno
sbb
jae
push
mov
add
push
xchg
fiaddl
and
sub
sbb
outsl
sbb
es
and
jo
cmpsb
and
int
cmp
stos
outsb
dec
fadds
out
mov
je
sbb
pop
pcmpeqd
mov
jmp
andb
sbb
xor
addr16
add
adc
add
pusha
fnsave
sbb
ret
sbb
jg
mov
mov
fcomps
jmp
pop
xchg
imul
pcmpgtb
bound
or
push
jb
insb
xlat
inc
sbb
stos
inc
or
ss
push
ja
pop
cmp
inc
xchg
mov
pop
outsl
push
stos
add
push
dec
push
in
data16
mov
out
arpl
pop
testl
adc
dec
ss
jbe
aas
popa
push
insb
sbb
xchg
arpl
pop
outsl
push
mov
scas
das
ljmp
adc
adc
gs
arpl
xor
mov
imul
add
or
adc
imul
ret
dec
push
adcb
jmp
pop
xor
xor
or
inc
or
sbb
adc
inc
add
leave
ret
fwait
sbb
push
dec
xor
sbb
push
dec
dec
rcll
and
push
adcb
insb
and
push
subb
iret
stos
imul
loopne
xchg
lods
lods
mov
jg
cmpsb
sub
outsl
adc
or
xchg
mov
lods
in
es
cmovs
sar
jae
popf
es
inc
cmpsb
jg
popf
and
sub
push
cmp
fs
imul
les
push
push
push
dec
pop
adc
subb
or
pop
pop
pop
bnd
mov
imul
pop
sub
add
addr16
arpl
sub
rorb
push
daa
adc
add
dec
imul
and
or
adc
rcl
push
jecxz
cltd
nop
mov
sbb
or
or
out
xchg
push
orb
imul
push
pop
adc
rol
push
ret
push
fs
rclb
mov
adc
ret
enter
xchg
mov
aaa
sbb
mov
xchg
dec
enter
push
cs
mov
call
pop
andb
xchg
arpl
pop
adc
insb
outsl
outsl
ss
test
pop
xlat
inc
add
adc
inc
pop
insb
adc
pop
pop
jb
sti
out
push
mov
leave
mov
push
adc
bound
push
jg
outsb
inc
jb
cmp
push
mov
jae
push
push
dec
add
ja
fwait
data16
addr16
pop
jb
pop
jp
adc
push
mov
dec
cmp
sub
push
and
out
cmpsb
insl
aam
addr16
add
or
fisubl
push
out
mov
daa
inc
orb
mov
cmp
mov
mov
scas
fiaddl
shlb
cmova
loopne
shrb
outsb
push
pop
loop
aaa
jmp
xchg
fidivrs
adc
fs
das
adc
mov
push
loopne
mov
jae
adc
bound
push
and
stos
aam
xlat
ret
sub
adc
iret
inc
or
scas
xorl
mov
and
and
push
dec
or
lods
aas
xchg
sub
stos
lahf
je
cmp
inc
dec
subb
and
lods
xchg
pop
ja
xchg
sbb
sbb
testl
xchg
ja
adcb
jp
adc
pushf
loopne
aas
inc
es
adcb
and
adc
inc
fwait
sub
push
ja
pop
les
sub
roll
jmp
inc
jne
add
or
push
or
setge
adc
and
packsswb
add
adc
negl
mov
pop
es
cwtl
adcl
xchg
adc
or
add
mov
jae
ja
add
and
pop
outsl
sub
inc
repz
and
sub
xlat
subb
jb
pop
stos
dec
mov
mov
ja
imul
mov
out
jo
xchg
xchg
movsb
push
and
pop
mov
lods
jmp
mov
jae
andb
add
lock
call
es
out
inc
adc
push
add
or
add
push
pop
aad
lods
inc
jg
scas
pop
jb
popa
push
addr16
ds
stos
add
adc
fistps
inc
cmp
mov
mov
pop
xor
sarl
fdivrs
adc
push
aas
mov
cmp
inc
loop
or
data16
aaa
clc
sbb
adcb
cmp
mov
push
ljmp
push
jae
aas
or
pop
mov
dec
or
data16
jo
push
rol
dec
mov
test
jae
adc
push
pop
pop
aaa
stos
push
push
adc
mov
inc
xchg
adc
lods
dec
sar
pop
mov
add
enter
pop
or
lods
mov
out
adc
fdivrs
or
outsl
test
dec
push
or
addr16
inc
rol
lcall
aad
dec
lahf
add
fisubrl
pop
and
push
pop
sub
mov
mov
pop
push
lcall
sbb
or
push
loopne
jae
dec
adc
lahf
dec
dec
mov
fiaddl
dec
sbb
pop
jecxz
bnd
int3
aaa
cs
sub
sub
sub
dec
and
outsl
or
add
dec
push
testb
jbe
or
out
sub
iret
popl
lahf
or
stos
adc
adc
push
inc
aaa
rclb
pop
sbb
adc
mov
je
je
pop
and
dec
fisttps
push
adc
pop
aas
out
inc
adc
xor
sub
loop
je
outsl
mov
adcb
adc
movsb
adc
cmp
xchg
inc
pop
lock
fcoms
adc
bound
insl
push
pop
pop
mov
das
vmread
aaa
dec
jne
and
pop
stos
mov
enter
sti
imul
filds
or
sbb
rolb
and
mov
push
inc
pop
xchg
fadds
iret
adc
or
lea
mov
xor
ja
inc
or
adc
mov
mov
rolb
ja
cmp
mov
sbb
mov
sbb
iret
sbb
fstpt
bound
sub
out
inc
xor
loopne
out
and
pop
xor
and
xor
push
push
pop
cmp
inc
shrl
ret
or
test
fwait
cmp
outsl
dec
shl
dec
adc
bound
sub
and
dec
and
inc
sti
cmpsb
add
xor
jbe
fiadds
xchg
ss
xor
or
mov
idivl
cmp
aaa
xor
movsb
or
shr
cmpsb
inc
sub
add
push
leave
adc
scas
adc
lds
jg
addr16
shlb
and
dec
sub
inc
lahf
pusha
inc
xor
setg
filds
push
adc
pop
nop
add
sbb
or
or
jo
sub
adcl
or
adc
push
xor
inc
push
nop
rolb
or
dec
test
je
sub
in
mov
sbb
aaa
xor
pop
leave
mov
or
pop
insl
dec
inc
jae
adc
mov
loop
dec
push
push
inc
sahf
push
inc
jb
fwait
pop
addr16
scas
test
mov
mov
sbbl
or
add
cmpsb
fs
sbb
add
addb
or
sbb
pop
jmp
mov
jo
and
bound
out
pop
inc
add
iret
inc
lock
pop
ss
loope
popf
sbb
inc
xor
sub
cmpsl
pop
inc
pop
pop
pop
iret
lcall
and
dec
cmp
dec
fucomip
div
mov
mov
jp
pop
or
mov
and
xor
or
add
ja
lds
nop
sub
pop
repz
out
dec
push
xor
fisubs
rol
or
jg
adc
pusha
dec
pop
adc
stos
sub
push
addps
xorb
aaa
lret
sbbb
fucomip
push
rclb
jg
fwait
dec
or
cmc
cmp
pop
sbb
mov
adc
push
addr16
mov
push
aam
shlb
je
push
movsl
jb
and
jle
or
adc
lret
sbb
in
add
sbb
or
mov
or
sbb
sbb
adc
sbb
xchg
add
and
sub
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
inc
inc
dec
dec
xchg
xchg
xchg
xchg
push
push
pop
pop
and
pusha
push
and
and
js
and
and
addb
nop
xchg
cwtl
pushf
and
and
mov
and
and
and
and
enter
and
shl
mov
insb
xor
repnz
aam
loopne
enter
call
enter
sub
xor
in
enter
inc
hlt
mov
enter
rcl
fmul
enter
loopne
call
in
lock
and
pusha
and
and
push
and
and
and
xchg
cwtl
pushf
dec
and
and
dec
movsb
test
and
and
mov
mov
and
and
int3
rcl
fsubs
and
and
loopne
and
and
xchg
mov
and
sub
and
and
cmp
inc
inc
inc
outsw
push
push
pop
dec
inc
inc
inc
inc
pop
pusha
fs
insb
jo
js
inc
dec
inc
jl
or
sbb
mov
sbb
sbb
cltd
sub
cwtl
fs
test
xor
fs
je
fs
insb
in
inc
mov
xchg
or
mov
xchg
xchg
xchg
mov
mov
xchg
rol
int3
mov
data16
roll
sbb
cltd
or
sbb
sbb
movsb
test
mov
sbb
sbb
sbb
enter
sbb
sbb
fcomp
loopne
mov
mov
or
sbb
sbb
adc
sbb
fs
outsl
in
call
fs
and
roll
mov
mov
mov
or
sbb
cltd
inc
or
nop
sbb
shl
clc
add
add
fs
sbb
xchg
xchg
xchg
pop
or
aad
cmpsb
add
add
je
fldcw
push
fmuls
or
xchg
xchg
xchg
adc
sbb
insl
inc
xchg
in
sub
xchg
push
ss
imul
sub
or
mov
sbb
push
mov
lar
add
or
cmp
rcl
insb
insl
push
mov
add
stos
roll
fwait
push
xor
mov
push
xchg
lds
cltd
in
popf
adc
pop
call
sbb
call
and
aam
and
inc
mov
pop
cmp
xchg
dec
fcomps
ror
leave
and
xchg
int3
or
xchg
dec
sahf
lret
adc
cli
out
xchg
or
adc
cmp
pop
in
fs
movsb
or
sarb
and
leave
test
mov
mov
fdivrs
dec
lock
push
xchg
mov
lock
iret
push
sbb
add
push
or
add
add
packssdw
or
hlt
shrl
xchg
out
xor
xchg
adc
pop
test
dec
lcall
sub
inc
inc
ror
fucom
jp
js
lods
js
add
shrb
mov
cmp
add
loopne
xchg
icebp
test
push
enter
es
jne
dec
adc
cmp
push
aaa
adc
or
or
sbb
sub
push
mov
cmp
call
ja
sbb
xlat
in
arpl
ss
or
lds
mov
sub
dec
jbe
lods
push
shlb
icebp
sarl
push
push
scas
jae
mov
add
add
ficomps
sub
xor
mov
movsb
or
dec
fstl
jb
inc
mov
pop
in
and
cld
jmp
mov
mov
mov
loopne
arpl
cmp
and
adc
xchg
pop
mov
and
sub
lods
int
and
add
and
push
adc
scas
inc
je
xchg
adc
insb
or
lds
mov
and
aam
mov
movsb
jo
sub
imul
inc
add
add
negb
imul
push
xor
push
push
outsb
pushf
cmp
sahf
arpl
dec
clc
sbb
addb
add
or
sub
lock
jge
add
inc
mov
addl
mov
and
and
dec
push
sbb
lret
rorl
mov
jns
cwtl
mov
fldl
xor
mov
adc
xchg
dec
and
push
or
or
pop
push
or
inc
andl
xchg
or
aaa
xchg
sbb
inc
pop
ss
orb
pop
mulb
mov
add
cmp
fisttpll
add
jo
ffree
add
cltd
pushl
or
faddl
addr16
or
or
xchg
add
xorb
sbb
lahf
sub
inc
inc
sahf
add
mov
add
push
movl
or
adc
and
iret
ds
and
rcrl
enter
fwait
xor
or
push
ss
cmp
mov
and
inc
dec
imul
mov
fwait
das
ret
mov
jne
xor
les
xor
add
mov
pop
scas
sbb
add
xchg
inc
sbb
icebp
sbb
inc
sti
scas
add
dec
xor
or
fildll
xor
push
addb
push
push
pusha
sbb
in
cmp
das
dec
push
sub
insb
sbb
les
daa
push
push
syscall
aaa
inc
or
out
orb
adc
pop
popa
cmp
orb
data16
in
or
cmpsl
sbb
xchg
xchg
icebp
sub
rol
add
stos
sub
jne
daa
sub
cmp
mov
data16
imull
mov
sbb
push
pop
add
cmp
sbb
or
xchg
sub
clc
sub
and
add
fcoms
add
mov
ljmp
les
call
jl
bound
pop
jno
lret
popf
cmp
mov
rolb
or
pop
jno
mov
sbb
inc
adc
add
xchg
in
mov
adcb
lods
insl
dec
add
lret
loop
lds
push
inc
or
lret
cmp
fldt
add
and
mov
or
stos
pop
rcrb
imul
lea
or
add
mov
or
repnz
xor
pop
jp
lds
mov
ljmp
jae
pop
ss
push
dec
or
jle
or
pop
aad
sub
dec
push
sub
lcall
adc
add
adc
or
push
fsts
or
sbb
mov
sub
js
sub
jmp
es
sbb
jg
mov
outsb
xor
aam
sub
jbe
test
pop
ret
daa
in
dec
inc
push
xor
int
dec
xor
push
es
adcb
aaa
xlat
xchg
or
mov
arpl
push
xlat
push
xchg
xchg
aaa
cvtpi2ps
stc
add
pop
push
pop
inc
pusha
push
je
in
push
lds
mov
or
and
push
cmp
pusha
mov
aam
popa
push
xchg
inc
icebp
and
movsl
imul
push
push
sub
or
sub
xor
and
pop
pop
xchg
mov
mov
and
add
dec
inc
stc
mov
repnz
jb
or
sbb
bound
sbb
in
push
push
xor
gs
add
dec
sub
ficoms
mov
pop
jae
add
or
jns
add
cmp
fcmovnbe
sbb
dec
adcl
sub
pusha
rep
pop
inc
movsb
cwtl
sub
rorb
daa
inc
or
add
dec
daa
sbbl
out
sbb
push
daa
and
das
insl
push
sbb
or
bound
or
fwait
rcl
and
or
shrl
cmpsb
or
add
pop
repz
adc
or
je
stc
sub
leave
inc
fisubrs
inc
pop
lods
or
jp
mov
xchg
fsts
adc
inc
xchg
xchg
xchg
xchg
push
pop
xchg
rol
das
xchg
inc
lahf
lds
add
cmp
cltd
jne
mov
mov
push
sti
insl
cmp
dec
arpl
int
mov
mov
les
mov
pop
rcrl
faddl
sub
fsubrl
scas
nop
adc
rcl
movsl
orb
imul
add
add
sub
or
push
daa
inc
add
cwtl
loopne
hlt
jge
inc
push
inc
movsl
scas
jl
dec
lods
sub
add
and
notl
dec
add
pop
push
pop
push
mov
imul
dec
cmpb
std
mov
adc
mov
pushf
add
mov
push
pop
adc
dec
push
pop
stc
or
inc
jae
push
push
mov
xchg
add
cmpsl
sub
loopne
inc
lcall
mov
jo
push
lods
push
inc
inc
insl
or
mov
movl
mov
out
mull
pop
push
or
je
add
sbb
dec
pop
add
inc
lea
js
cs
sub
fisubrl
add
scas
in
mov
sub
inc
adc
xor
add
pop
movsb
adc
jno
xor
sahf
out
add
adc
xorl
rcll
fadd
in
xlat
shll
dec
popa
jns
cs
inc
mov
push
pop
es
icebp
outsl
add
push
dec
jl
scas
pop
fdivs
or
sbb
in
push
add
hlt
pop
sub
and
xchg
movsb
push
subb
push
outsl
rol
popa
popf
imul
xor
dec
dec
and
rorl
pop
pop
sub
shrl
push
out
xor
add
dec
and
fbstp
jo
in
xor
pop
adc
mov
xchg
fidivs
imul
scas
out
and
dec
and
and
and
mov
ret
jno
lods
loope
sbb
or
xor
xchg
leave
pop
enter
dec
cmp
rcl
jb
sbb
inc
lods
call
xor
in
push
gs
xor
jb
pop
add
ss
add
sub
add
pop
xchg
ja
stos
or
movl
psubsw
push
adc
cmpsl
jmp
or
add
add
cld
es
das
mov
add
repnz
int3
inc
jbe
nop
jl
xor
push
adc
inc
es
add
add
insb
cs
push
cmpsl
xor
add
push
test
push
int3
into
jnp
mov
push
inc
add
and
add
pop
or
pushf
stos
mov
pop
test
mov
xchg
pushf
inc
push
mov
leave
imul
xor
dec
cmpb
pop
movups
mov
adc
xor
cmovle
add
sbb
inc
add
push
or
push
mov
les
jo
std
mov
and
dec
loopne
pop
and
inc
inc
add
dec
sti
stos
add
mov
or
add
mov
cs
pushf
and
arpl
pop
mov
pop
insb
les
jo
push
add
dec
hlt
or
xor
push
stos
add
mov
add
push
sbb
add
aas
or
push
aas
scas
dec
sbb
and
push
pop
push
and
aas
and
pop
mov
mov
and
aaa
dec
or
test
loope
test
xchg
push
ret
push
in
daa
imul
adc
adc
add
loop
repnz
nop
pop
sbbl
insl
or
mov
pushf
popa
adc
add
xchg
outsb
sbb
mov
add
mov
insb
push
sbb
loopne
xchg
pop
dec
loope
sub
mov
or
fldcw
insb
js
test
movsb
test
cmp
add
push
daa
fldcw
inc
pop
aam
in
out
pop
add
sub
icebp
sbb
movsl
xor
push
cmp
movhps
add
pop
pop
js
xchg
or
mov
mov
enter
and
mov
mov
cltd
xorb
jecxz
jmp
test
mov
and
dec
pop
insb
or
and
fdivr
and
inc
and
and
insb
lea
and
sbb
cmc
clc
add
xor
add
cs
xchg
xchg
add
push
dec
inc
xor
rorb
xor
in
jne
int3
inc
push
xchg
pop
jns
sbb
jno
or
adc
or
add
in
jb
xor
inc
inc
push
and
shlb
cmp
inc
push
pop
in
xor
addb
dec
inc
xchg
pop
lahf
dec
push
fs
push
push
imul
scas
pop
sub
cmp
inc
sbb
js
fsubrs
sbb
jge
add
adc
jbe
pop
add
inc
nop
or
inc
pcmpgtb
cmp
js
jl
inc
daa
lods
and
sbb
pop
sub
mov
jmp
je
inc
or
and
sbb
and
sub
push
xchg
rolb
int
or
xor
add
add
jns
daa
add
dec
jmp
jmp
shl
dec
push
push
and
cmpl
xchg
mov
test
shl
lock
sbb
push
push
rcll
xchg
add
xor
ss
ljmp
negl
push
pop
and
or
sbb
sbb
sbb
xor
sbb
cltd
xchg
jp
mov
incl
mov
sub
inc
or
pusha
stos
inc
frstor
xor
dec
dec
sub
jg
test
cmp
add
daa
inc
in
enter
inc
fs
xadd
nop
fnstsw
adc
inc
cmp
mov
add
add
or
pop
inc
ss
sahf
adc
push
mov
cs
inc
es
push
sbb
fmuls
andb
and
mov
sub
jle
test
aaa
pop
clc
xor
lea
add
jg
sbbb
lods
es
xor
hlt
or
push
sbb
insl
add
pop
fnsave
adc
add
sbb
daa
xchg
fwait
add
sbb
fstpl
pop
in
mov
sbbb
inc
inc
sarl
lea
ja
dec
enter
daa
or
pop
inc
fstl
in
sbb
and
lods
xor
fwait
sub
std
sbb
jb
out
dec
or
jmp
fistpl
nop
shrb
cwtl
and
or
fwait
test
sbb
inc
dec
adc
sub
xchg
test
push
adc
in
andl
cmp
das
mov
sub
xor
sbb
mov
xor
cmc
or
out
and
filds
inc
cld
or
or
pop
mov
dec
jo
aaa
test
pusha
ds
cmp
rorl
fsubs
jp
jg
sub
mov
push
push
or
cmp
jmp
pop
inc
inc
dec
enter
cmp
xor
mov
dec
sub
pop
fisttpll
adc
mov
hlt
sub
and
sbb
add
push
push
add
xlat
pop
cmp
insl
in
inc
or
dec
lods
rcrb
sub
lock
mov
sub
xchg
in
jne
lods
add
mov
push
test
pop
js
mov
pop
cs
sbbb
mov
sub
and
xor
mov
xor
pop
cmp
adcl
push
adc
sbb
outsl
adc
mov
iret
push
xor
pop
xor
pop
or
in
xchg
stos
xchg
int3
adc
jmp
adc
and
inc
rol
cli
and
jne
xchg
pop
inc
sub
push
lds
jle
ficoms
fisubs
xchg
sarb
cwtl
nop
hlt
lea
mov
add
adc
mov
aam
and
roll
fbld
pop
daa
in
es
in
and
and
pop
and
stc
fiadds
push
stos
or
mov
subl
loop
shll
and
movb
and
and
adcb
sub
fsubl
jne
mov
mov
movsb
adc
mov
or
and
or
or
or
call
xchg
dec
push
xor
or
bnd
popa
lea
xchg
pop
inc
test
cmc
in
aaa
test
xor
in
push
das
dec
loope
xchg
aam
test
add
inc
int
push
enter
sub
inc
or
sbb
push
sbb
cmp
negb
mov
cmp
in
lds
add
dec
dec
push
les
setg
xor
push
and
sub
clc
jmp
pop
add
mov
or
add
dec
xchg
loopne
xor
xchg
movsl
mov
push
dec
in
mov
and
mov
jnp
enter
mov
fdivrl
add
fsubs
and
xchg
sbb
icebp
arpl
pop
fnsave
push
pusha
and
jne
imull
cmp
scas
inc
jbe
out
in
enter
jns
aam
mov
add
inc
inc
hlt
nop
and
sub
xor
and
inc
jmp
cli
inc
add
dec
movsl
fwait
daa
cmp
inc
movsb
mov
add
add
aam
popa
adcl
shlb
mov
push
sbbb
insb
mov
add
sbb
lcall
cmp
ja
dec
inc
in
rol
movsl
call
mov
mov
je
lahf
or
cmpsl
xor
cmp
add
lods
cmp
xchg
adc
adc
mov
rcrb
sub
dec
inc
xchg
sub
mov
and
lea
addr16
pushf
mov
or
adcb
adc
xchg
push
and
sbb
jp
pop
in
out
daa
push
inc
test
dec
jne
or
adc
pusha
sbb
xor
adc
cli
roll
mov
or
ss
dec
adc
adc
add
pop
aaa
mov
addl
sub
or
mov
and
cmp
xor
pushf
lods
dec
push
ret
and
sbb
add
and
sub
inc
add
jo
das
and
cmp
dec
or
lcall
xchg
es
or
jno
xchg
fisttpl
ret
dec
pop
lods
mov
xchg
andb
push
sub
mov
and
jmp
cli
lcall
cmp
sbb
sbb
push
push
in
fwait
mov
sbb
icebp
imul
arpl
mov
and
adc
shll
jns
xor
xor
pop
dec
xchg
hlt
lods
les
out
add
mulb
dec
jb
adc
imul
lcall
setbe
xor
add
inc
dec
enter
mov
adc
push
adc
imul
push
inc
ljmp
pop
dec
xchg
pusha
mov
lods
ja
mov
mov
test
add
push
nop
push
adc
dec
mov
cmp
jne
mov
ret
test
enter
icebp
or
add
movsb
das
push
xchg
test
cmp
movsb
das
push
push
pushf
lods
jg
sub
jmp
mov
fwait
cmp
sbb
fld
insb
adc
aaa
push
movsb
jmp
sub
and
sbb
outsl
out
sti
rclb
fstp
pop
or
add
jae
add
add
cmp
add
idivb
dec
cld
inc
fisubrl
test
cmpsb
inc
xor
mov
or
push
xchg
popf
mov
inc
in
xor
cmp
outsl
jmp
in
and
and
add
xchg
jl
sbbl
lds
cmpl
shlb
pop
pop
push
push
imul
pop
repnz
xchg
icebp
dec
sbb
pop
addr16
or
les
cmp
cmp
xchg
movsl
jecxz
mov
clc
and
push
lret
aam
sbb
xorl
int
sub
or
push
push
test
sub
xchg
aad
dec
push
je
in
mov
lods
inc
es
sbb
inc
clc
or
test
mov
adc
fisttpll
add
xor
das
mov
nop
xchg
xchg
clc
clc
lock
fildl
movsb
jmp
insb
inc
dec
inc
fwait
pop
and
xor
inc
mov
loopne
adc
xor
popl
dec
fnsave
jbe
jecxz
cltd
xor
jne
add
sub
xlat
push
and
xor
out
lahf
js
adc
push
test
cli
andps
daa
or
lock
xchg
xchg
gs
push
push
mov
pop
push
sub
inc
pop
repnz
push
repnz
fstpl
inc
mov
xor
xchg
pushl
popa
mov
adc
and
jnp
test
pop
outsb
jae
push
jae
sbb
push
add
hlt
push
mov
loopne
or
gs
test
mov
sbb
or
aas
insl
outsl
rdmsr
inc
xor
mov
nop
add
xor
mov
sbb
jge
nop
or
je
add
jmp
mov
sub
jo
push
insb
into
ljmp
push
jmp
mov
ret
xchg
or
sub
negl
push
mov
xchg
push
push
jmp
loop
les
mov
movsl
call
enter
lahf
inc
mov
inc
lret
nop
cmp
cwtl
nop
push
inc
vmwrite
inc
sbb
push
and
or
jp
push
dec
jne
jge
js
fldpi
dec
stc
insb
leave
push
sbb
xchg
ret
adc
fs
push
repz
lods
in
dec
enter
xchg
leave
mov
inc
mov
inc
ja
mov
insb
inc
jle
gs
sub
addl
mov
ljmp
add
push
or
adc
pop
cmpsb
or
test
xor
adc
xor
or
sub
add
cmpsb
aaa
jae
rcl
inc
in
aaa
sub
jg
cmpl
pop
notb
jo
les
xchg
mov
add
mov
pop
sub
jae
jge
sub
or
out
pop
scas
div
outsb
add
inc
dec
fimuls
pop
loopne
ret
jb
push
sub
dec
cltd
add
cmc
mov
test
sub
or
ja
xor
daa
loopne
push
sub
dec
inc
out
pop
movsl
and
and
pop
ja
hlt
xor
sub
mov
add
dec
dec
inc
loopne
mov
mov
into
sub
mov
or
into
dec
and
dec
mov
inc
xor
cmp
aam
mov
mov
enter
icebp
jne
test
xchg
into
sbb
fwait
ret
cwtl
mov
sub
add
jge
sub
dec
push
je
jge
in
outsb
mov
add
inc
insl
sbb
push
cmp
mov
dec
das
mov
dec
add
aad
cmp
dec
cmp
into
push
ss
mov
mov
lahf
int3
add
in
popf
mov
or
adc
xor
add
lcall
push
jb
imul
xor
xorb
xor
in
orb
mul
adc
add
dec
jecxz
jb
mov
mov
imul
cmp
imul
in
out
lret
push
adc
adc
add
xorb
call
add
fnstcw
or
fisttpl
je
fisubl
in
cmp
push
adc
mov
sub
push
mov
xchg
testl
add
and
in
xlat
xchg
je
andb
subb
test
stos
or
sbb
lods
shll
dec
mov
add
inc
rcr
cwtl
xor
adc
or
adc
out
xchg
out
push
adc
cmp
adc
lods
adc
or
inc
adc
movsl
imul
or
adc
push
dec
out
fwait
fs
out
sbb
push
imul
addr16
mov
orb
xchg
jl
dec
pop
or
dec
js
loope
imul
cs
push
js
iret
push
loope
in
and
adc
pop
enter
lret
mov
inc
adc
adc
xor
sbb
scas
mov
lcall
adc
dec
add
push
test
sub
stos
inc
fidivl
adc
add
lcall
mov
pushf
addr16
test
add
xchg
insl
addr16
sub
push
xchg
push
mov
cmp
pop
popa
popa
adc
jmp
or
pop
jo
adc
mov
adc
fidivl
xchg
mov
in
sub
jne
nop
dec
lret
jg
push
adc
sbb
dec
pop
mov
or
inc
fwait
inc
inc
mov
mov
les
push
push
add
sarb
stos
pop
xor
mov
or
leave
lret
pop
sahf
mov
mov
data16
pop
stos
andl
sbb
mov
dec
ret
cmpl
mov
mov
push
mov
push
cmp
jmp
enter
inc
push
loopne
adc
mov
cmp
addl
push
ret
adc
in
push
int
or
pop
jmp
mov
add
adc
add
jnp
arpl
aaa
mov
das
daa
andb
add
add
mov
jg
cmp
pusha
xchg
and
dec
stc
stos
dec
rorl
adc
out
pop
cmpb
jne
adc
out
lds
xchg
jns
cs
add
push
inc
out
nop
int
jl
shl
xor
push
adc
sti
popa
fsubrl
loope
adc
sbb
lcall
xor
fiadds
arpl
push
fbstp
xchg
or
xchg
fsubrl
or
sbb
fisubrl
testl
mov
adc
push
aas
xor
sbb
adc
and
xchg
cmp
xchg
icebp
into
jne
mov
jnp
mov
add
xor
pop
mov
mov
enter
push
cmp
cli
inc
sbb
bound
ja
outsl
mov
sbb
rorl
or
jg
or
orb
pop
mov
daa
cmp
dec
fcoms
push
jno
xor
roll
push
adcl
adc
xchg
insl
xchg
js
inc
inc
or
xor
daa
shll
or
daa
test
js
daa
pop
daa
les
and
leave
sub
inc
add
add
add
and
jecxz
fistl
or
inc
addl
outsl
test
adc
or
push
lahf
or
add
cmpb
and
push
rolb
xchg
inc
popa
pop
lahf
adc
ss
sub
ret
mov
jo
inc
outsl
cmp
dec
loope
cmp
lcall
mov
push
adc
cmp
and
add
push
sti
subl
iret
je
cli
andb
pushf
orl
das
scas
push
mov
and
subl
mov
sub
sub
push
push
pop
inc
cmp
shlb
and
popa
mov
andl
in
jb
daa
adc
inc
sbb
sub
inc
add
mov
add
sbb
sub
arpl
pusha
in
pop
cmpsb
pop
inc
movsb
and
lods
arpl
sahf
push
adc
mov
pop
mov
or
mov
cli
dec
daa
rorb
inc
stos
cmp
aam
outsb
daa
ljmp
adc
ja
nop
cmpsl
mov
adc
cmp
xchg
and
mov
rcr
dec
flds
and
cmpl
sub
push
dec
xchg
mov
sub
adc
mov
push
add
pop
pop
mov
mov
cmpb
cli
add
out
add
add
add
push
rcrb
push
sub
jnp
or
rcr
ljmp
clc
mov
add
xchg
insb
fs
inc
add
pusha
jo
popl
push
inc
jo,pt
nop
aaa
cmp
add
cmp
sub
mov
jl
nop
sub
jl
xchg
jecxz
mov
adc
adc
or
shlb
xlat
push
in
sbb
sbb
push
mov
push
or
add
sub
in
xchg
inc
cmpsb
push
adc
mov
pushf
sub
aam
and
clc
sub
sub
and
pop
cmp
mov
xchg
or
sbb
andl
out
aad
ljmp
shrb
cmp
insb
and
nop
xchg
call
cmp
cmp
push
dec
sub
jecxz
clc
and
aam
inc
sub
in
pop
xchg
insl
or
sbb
add
in
mov
das
mov
adc
or
mov
sub
pop
pop
call
push
cmp
dec
xchg
movsl
sti
cmp
popa
dec
push
or
xor
inc
pop
sub
dec
inc
push
gs
inc
push
adc
les
pop
mov
push
call
repnz
add
add
lea
push
push
push
aam
icebp
test
or
mov
mov
scas
push
aad
fnstsw
xlat
popa
cmpb
mov
cmp
sub
andl
lret
mov
sbb
jmp
jne
mov
js
xchg
aaa
mov
insb
and
dec
cwtl
ja
sbbb
pushf
xchg
dec
nop
cmc
xor
sbb
dec
jo
or
jmp
mov
push
gs
jmp
jle
add
mov
sbb
movsb
cwtl
cmp
cmp
inc
test
xchg
daa
jbe
sub
lods
push
lret
ret
mov
fists
push
or
ss
adc
in
adc
sahf
adc
mov
fsubs
insl
cmp
or
sub
cmp
shrl
add
add
movb
or
lahf
adc
or
pop
add
call
jg
pop
xchg
xchg
mov
test
mov
insb
pop
mov
sbb
jae
push
push
push
xor
dec
daa
loope
mov
sarb
push
ja
jns
out
dec
lahf
push
mov
xchg
popf
out
scas
divb
mov
inc
or
push
add
add
es
or
mov
dec
ret
add
ljmp
push
cmp
xor
or
push
add
in
movsb
sub
call
inc
jo
lea
jg
mov
inc
test
aas
fbld
out
mov
mov
push
insl
push
pop
insl
lock
leave
xor
lock
sub
sub
dec
aad
mov
sbbl
inc
fsubs
mov
pusha
mov
push
lcall
or
jno
cmp
mov
or
fmull
sbb
inc
push
ss
dec
add
and
mov
pusha
add
lds
movsb
cmp
inc
faddl
or
or
or
adc
mov
data16
or
inc
or
xchg
xor
insl
xchg
test
jo
cmp
in
push
and
jl
inc
imul
cwtl
inc
push
leave
and
xchg
push
enter
push
push
aaa
pop
push
inc
push
add
je
ss
pop
pop
push
arpl
pusha
repnz
push
add
int
imul
iret
adc
dec
insb
test
adc
xchg
daa
adc
shlb
movsl
shlb
lods
push
out
insb
xor
je
or
je
push
faddl
mov
out
add
hlt
pop
xchg
popa
push
mov
adc
test
lcall
add
push
testb
xlat
ret
rcl
stos
push
mov
inc
cwtl
mov
imul
lock
lahf
imul
push
push
cld
or
dec
jne
xchg
add
adc
and
pop
inc
add
cltd
sbb
mov
std
mov
pop
adc
xor
inc
cs
and
sbb
push
movsb
pop
or
sub
xor
pop
test
cmc
dec
inc
jg
dec
loopne
mov
push
xchg
insb
push
in
ret
test
mov
cmp
lcall
xchg
icebp
dec
fstpl
jp
xor
dec
jne
and
cmpsb
shr
pushf
or
stos
aaa
push
rorl
xor
cmp
movsb
fistpl
nop
push
and
mov
clc
notl
enter
add
div
xor
xor
stos
lea
and
je
fimull
or
cmp
iret
outsb
cmp
cmpsb
jo
dec
sbb
ss
sub
jecxz
jns
adc
jmp
push
mov
or
bound
push
out
jo
sbb
adc
pop
ret
insl
xchg
adc
cmp
jnp
xor
jne
or
rclb
adc
push
lock
push
andb
pop
adc
pop
sub
outsl
add
inc
icebp
inc
outsl
arpl
mov
fs
jge
add
inc
inc
sbb
das
push
cmpsl
mov
add
dec
push
hlt
add
xor
xchg
movd
inc
loopne
fcomps
mov
inc
xchg
push
mov
sahf
test
scas
sbb
pop
lcall
and
js
jo
or
adc
or
pop
add
lock
sbb
cmp
jge
push
lea
fwait
sub
mov
jb
and
ret
jo
enter
imul
and
xchg
test
mov
sub
dec
xchg
jno
pop
xchg
daa
add
sbb
jb
sbb
ror
in
in
hlt
jb
and
into
jb
add
add
add
fadds
and
nop
adc
je
je
sub
xchg
daa
add
sbb
aas
jne
sbb
cmp
sub
inc
pop
jne
jne
or
add
add
xor
push
or
pop
cmc
push
jbe
or
mov
cmp
inc
jb
and
sarl
jbe
and
imul
dec
jbe
pusha
adc
xchg
hlt
inc
inc
and
and
and
out
and
jbe
ja
xor
xorb
mov
cmpsl
mov
push
andb
enter
push
aaa
daa
leave
fimull
dec
mov
dec
adc
pop
push
jno
pop
pop
pop
sub
add
add
or
push
stc
and
sub
sbb
sbb
add
sti
push
movsb
rolb
cltd
nop
xchg
sbb
dec
lahf
push
push
add
jns
push
mov
adc
outsb
sbb
aam
arpl
scas
nop
daa
je
push
movsb
movsl
sti
hlt
les
mov
outsb
mov
aam
int
negl
add
and
adc
sub
add
sub
cwtl
xchg
xchg
fimuls
aam
cmpsl
push
sbb
dec
out
xlat
sarl
jae
ja
cmpsl
in
pop
sbb
xchg
and
pop
call
popl
dec
xchg
jp
insl
jmp
mov
push
mov
pop
pop
and
jp
jp
or
adc
sbb
das
and
xchg
je
push
int
rclb
inc
cmovns
punpcklwd
dec
arpl
pusha
stos
hlt
sbb
add
nop
outsb
orl
ja
dec
jae
sbb
nop
sbb
push
mov
jns
mov
sbb
adc
and
jl
jl
add
or
jnp
jo
rorl
jne
in
test
insl
sub
and
inc
jge
jge
mov
sbb
cwtl
dec
inc
mov
sub
and
sub
dec
cwtl
test
sbb
imul
inc
sub
jl
iret
cmpsl
inc
or
adc
xor
test
mov
push
sbb
inc
cmp
fistl
fdivs
sub
test
fwait
addl
and
fsubrl
fwait
adc
push
adc
cmp
ror
add
stos
dec
mov
cmp
in
test
xor
inc
lahf
xchg
lret
or
adcl
cmp
add
test
leave
les
jg
push
test
xchg
push
adc
add
xor
lea
lock
mov
push
xor
mov
je
bound
popa
test
std
lods
xchg
enter
fucomi
xchg
xchg
sti
and
cmp
and
and
mov
mov
cld
push
cld
push
fbstp
pop
add
and
adc
sbb
jg
adcb
mov
push
jo
out
das
mov
cmpsb
xchg
add
xchg
nop
notb
pop
jb
mov
mov
dec
call
scas
adc
or
dec
push
dec
dec
push
push
sarl
sbb
subb
scas
shl
and
push
lahf
jecxz
fistl
push
lret
or
es
loop
sub
inc
add
out
dec
add
push
and
push
add
add
add
add
pop
ss
dec
or
pop
and
sbb
lcall
add
xor
negl
sub
jge
xor
fcoml
or
cld
cmp
dec
dec
lahf
or
add
lock
mov
je
into
fnstenv
dec
push
xchg
test
jne
scas
or
add
sbb
xchg
fldt
jecxz
insl
push
xor
add
fiaddl
popw
add
pusha
pop
add
push
push
cmovo
cs
xchg
add
sub
jo
faddl
dec
and
outsb
xchg
push
add
fsubs
add
ljmp
cmp
jge
mov
mov
push
jg
pop
adc
inc
or
pcmpeqw
call
stos
test
roll
push
loope
add
cmc
push
rcrl
arpl
rolb
stc
test
xchg
sbb
mov
cmp
adc
mov
pop
and
inc
stc
inc
sub
inc
jns
test
sbb
out
enter
shr
roll
ss
inc
mov
jg
inc
push
inc
push
add
inc
jp
sub
pop
xchg
jmp
jge
dec
pop
mov
push
stc
push
lock
or
jmp
ret
clc
fucomi
sub
add
repz
inc
orb
mov
cwtl
jmp
enter
jecxz
cld
and
sbb
add
lea
dec
xchg
sub
add
ss
jns
add
mov
mov
jb
xor
test
enter
add
push
and
or
fs
add
jle
fsubl
sub
pusha
push
les
dec
add
push
adc
xor
push
imul
adc
and
sbb
sbb
mov
pushf
jnp
push
sub
addl
mov
adc
adc
addr16
cmpsl
jne
cmp
adc
sbb
sbb
sbb
mov
maskmovq
mull
push
add
sbb
imul
popf
mov
mov
insl
mov
xorb
push
and
and
lahf
cvtps2pd
js
pop
fdivr
adc
push
sub
xchg
jns
daa
in
sbb
push
jae
push
hlt
je
xchg
test
pop
fsubl
and
jbe
jne
inc
cmp
mov
dec
push
push
and
rclb
imul
in
test
cltd
add
and
sub
shlb
stc
ret
xchg
lret
and
adc
cmpsb
test
addr16
cld
cltd
dec
sarl
sub
sbb
call
and
and
ss
dec
in
sub
sub
data16
sbb
andl
add
adc
xor
push
mov
dec
or
cmp
adc
cmp
imul
xchg
out
in
sbb
and
cmp
sub
sub
xor
jns
xor
ss
call
cmp
movsl
push
cld
outsl
es
mov
mov
or
mov
sub
mov
cmpl
dec
inc
add
or
mov
xor
mov
xchg
adc
add
mov
pusha
mov
rep
scas
jge
mov
in
and
sub
and
mov
xchg
jns
mov
adcb
xor
or
or
push
adc
push
add
cmp
inc
xor
push
adc
and
pop
inc
sbb
jae
add
push
jg
pop
fld
loopne
and
js
jb
and
push
mov
fwait
jle
ja
dec
fildl
daa
mov
xchg
pop
inc
xchg
cmpsl
add
mov
imul
and
pop
dec
lods
mov
dec
es
pop
mov
addl
xchg
push
xor
ret
popl
and
orb
dec
or
fs
mov
mov
aaa
dec
or
subb
cmp
cld
sbbb
xchg
pop
fisubl
fidivs
pop
adc
adc
add
add
rolb
hlt
ret
push
sti
xor
test
lods
add
sbbb
cmc
inc
and
in
push
add
dec
push
test
pop
pop
or
jg
mov
dec
mov
sahf
push
mov
sub
mov
sbb
adc
and
mov
mov
aas
add
jne
out
xor
mov
les
das
imul
sub
inc
sti
xchg
sbbl
lock
push
jl
push
pop
fs
push
jl
lock
andb
jmp
pop
cld
dec
fcoms
jecxz
cmp
mov
push
pop
mov
push
and
xor
fmuls
es
imul
push
push
adc
test
pop
ret
out
repz
dec
sbb
ja
filds
jo
xor
inc
testl
jmp
ret
xchg
xlat
dec
pop
pop
test
mov
aad
inc
pop
add
iret
mov
fldl
or
mov
mov
or
sub
jle
cmpsb
xor
mov
xor
and
rorb
rolb
pop
es
out
sub
adc
push
es
mov
xchg
dec
gs
cmp
inc
mov
in
mov
mov
pop
cltd
lahf
push
cltd
push
pop
imul
inc
jmp
sub
xchg
dec
inc
mov
add
shlb
shll
push
aaa
or
push
mov
rcll
int
ret
scas
outsl
xor
jl
out
push
push
dec
dec
push
sahf
xchg
test
adc
inc
add
neg
sbb
push
push
pushf
cmp
adc
les
add
testb
sub
out
pop
dec
xchg
out
jl
and
mov
xchg
fcmovb
dec
and
mov
pusha
syscall
cwtl
mov
and
or
popa
pusha
push
imul
fbld
xchg
cmp
xor
or
movsb
imul
sbb
sbb
and
add
add
xchg
loope
and
inc
dec
inc
or
mov
push
outsl
imul
adc
xor
test
ret
in
xchg
jg
sub
add
sub
pop
or
cmp
orl
test
or
jbe
pusha
xchg
mov
mov
roll
fsubr
jl
xor
cmp
jne
and
or
jbe
mov
cmc
daa
rcr
xor
clc
mov
push
jo
jp
or
fisubrl
test
cmpsl
inc
jb
push
jo
xchg
or
inc
mov
nop
and
push
fdiv
xor
movb
adc
cmp
mov
inc
xchg
pop
inc
inc
push
push
dec
push
lods
push
in
inc
pop
inc
push
inc
scas
dec
inc
adc
mov
push
mov
pop
push
sub
pushf
push
jo
sub
fidivl
fldenv
or
std
push
data16
fmuls
fmull
dec
xchg
inc
xchg
and
test
sub
out
js
fsubs
xor
xchg
popa
inc
outsb
adc
push
jbe
mov
mov
or
ret
js
xchg
jp
ret
insl
jns
xchg
pop
add
pop
mov
imul
cmpsl
xchg
rcrl
inc
inc
test
and
ret
pop
in
jns
pop
and
stos
aaa
loopne
test
dec
dec
dec
js
adc
sub
inc
adc
xchg
xchg
cmp
add
setg
or
nop
jo
daa
or
repz
or
mov
ss
and
dec
and
mov
pop
push
jo
bound
lahf
addr16
ficomps
gs
jo
loopne
adc
fiaddl
idivl
sub
add
push
pop
nop
add
adc
xor
andb
xor
cmpsb
push
push
pop
jg
sub
outsb
dec
push
shll
fldcw
inc
sbb
dec
mov
ss
mov
inc
push
pop
cmpsb
ss
daa
add
ljmp
addb
push
or
xchg
and
test
dec
out
cmpsl
addl
in
push
nop
push
push
adc
dec
dec
mov
mov
sbb
scas
popf
lds
pusha
scas
test
ss
mov
insb
lret
sbbl
jne
pop
add
out
adc
and
subl
sub
pusha
aad
adc
mov
popf
mov
lock
jbe
lods
lds
adc
dec
sub
int3
or
sbb
pop
add
push
dec
push
jne
xorb
int
adc
sbb
cmp
adc
in
xchg
rcrl
mov
in
jo
nop
iret
lret
mov
or
push
inc
inc
mov
inc
clc
iret
mov
add
inc
mov
push
fdivrs
add
outsb
sti
inc
inc
ljmp
je
mov
outsl
push
xorb
je
arpl
jae
sbb
push
mov
or
mov
add
fcmovbe
scas
or
mov
fidivrs
sbb
out
push
dec
pop
or
cmp
push
out
adc
ret
sbb
outsl
push
int3
subb
sbb
fistps
xor
or
adc
ss
xlat
bound
inc
test
or
in
jnp
cmpsl
cmpsl
push
and
dec
sub
push
inc
add
sbb
push
inc
lea
push
imul
fadds
adc
rcrb
mov
pop
dec
cmp
test
jo
xlat
sbb
add
xor
add
mov
sub
pop
inc
and
dec
sbb
shrl
rep
arpl
push
cwtl
add
adc
or
and
add
and
sbb
fidivrl
inc
sub
or
adc
xchg
push
iret
sub
pop
add
pusha
fsubrs
push
cli
xor
clc
add
xchg
dec
xchg
test
loop
xchg
dec
lock
jo
xor
cmp
loope
cmp
inc
lock
push
mov
push
je
sbb
push
or
push
sub
or
sbb
push
sub
mov
je
inc
push
movhps
add
stc
dec
pusha
pop
nop
or
xor
subps
sub
cmp
pop
fisubl
pop
push
enter
bound
push
xchg
pop
add
inc
stos
or
xchg
int
dec
add
pop
cld
int
add
inc
pop
scas
inc
lahf
pop
xchg
into
xor
lahf
push
inc
jo
sub
sbb
loopne
push
negl
or
es
popf
mov
pop
xchg
or
sbb
insl
popf
add
pop
mov
add
xchg
fiadds
add
aaa
push
push
mov
pop
jns
pop
sbb
dec
and
mov
test
mov
add
sub
xor
jae
in
xchg
sarl
adc
or
int3
sbbl
dec
test
pop
movsl
push
daa
test
lds
adc
push
scas
inc
push
fmuls
xor
cmpsl
ja
dec
pop
dec
push
in
xor
jge
das
add
or
sahf
or
add
pop
lea
or
cmp
leave
mov
cmp
or
push
inc
aaa
inc
pop
xor
popf
inc
sub
mov
mov
mov
mov
mov
daa
add
or
mov
mov
lock
test
lock
mov
inc
mov
dec
pop
pop
mov
jle
jo
dec
push
repz
outsb
jg
and
push
dec
jo
adc
or
xor
mov
daa
fs
jo
inc
test
add
xor
scas
shll
or
cmp
insb
mov
notl
addb
fsubp
movsb
popa
add
or
sbb
mov
testl
and
sub
popa
shlb
push
jbe
xlat
inc
ror
lods
jecxz
xchg
add
mov
push
daa
mov
leave
push
adc
and
in
movsl
lock
and
enter
popa
push
fsubl
lea
push
inc
mov
cmp
sbb
or
and
es
pop
sub
iret
pop
out
test
or
mov
pop
jle
add
test
das
loopne
outsl
inc
cmpsl
pop
mov
test
test
mov
or
shrl
adc
rcrl
mov
push
jns
mov
mov
jbe
adc
sub
cmpsb
pop
mov
arpl
mov
adc
and
ds
pop
ljmp
stos
mov
stos
data16
test
pop
mov
int3
and
and
mov
sbb
pop
std
push
es
mov
stos
xor
sbb
fs
stos
rclb
mov
or
stos
lret
stos
test
stos
adc
ret
push
js
inc
and
fldcw
stos
pop
aam
pop
mov
stos
add
andl
clc
sbb
pop
inc
aad
iret
call
cmp
fbld
cltd
add
jb
mov
inc
fs
cs
xor
adc
bound
mov
jmp
pop
insl
lds
rorl
fucomi
icebp
add
xor
inc
pop
mov
mov
insl
mov
lods
fnstcw
ret
adc
xchg
pop
or
mov
mov
xchg
fiaddl
sbb
add
or
add
xor
push
or
sbb
je
jb
and
pop
pop
mov
das
pop
in
dec
adc
data16
js
xor
lods
iret
call
pop
aam
xor
push
jo
push
sbb
xchg
imull
pop
push
xchg
mov
or
and
scas
pop
and
subb
push
push
and
mov
pop
enter
add
or
push
push
cli
jns
loopne
cmp
cmpsl
stos
adc
outsl
aaa
scas
pop
jne
mov
or
push
xor
dec
ja
mov
lods
nop
enter
lods
xchg
jae
inc
xorb
xor
cmp
and
nop
push
out
mulb
xchg
das
movsl
push
dec
xchg
leave
push
sub
sub
mov
mov
sub
dec
and
and
mov
cli
mov
xor
sub
repnz
mov
xchg
cs
rcrl
fnstenv
and
test
sbb
inc
add
add
sbb
add
outsl
or
jmp
xchg
or
pop
imul
fiaddl
pop
pop
pop
mov
in
imul
mov
push
xor
pop
mov
and
ss
push
mov
xlat
loop
nop
push
add
add
fisttps
mov
and
add
mov
jae
repz
inc
sub
push
mov
sahf
cmpsb
cmp
data16
test
or
pop
add
sbb
inc
push
mov
dec
lret
jae
and
dec
jo
or
pop
incl
and
xor
xchg
daa
mov
in
js
sub
dec
int3
push
add
enter
pop
pop
cmpsl
mov
loopne
pop
or
popa
adc
xor
ret
inc
mov
mov
pop
mov
cwtl
lret
pop
js
mov
mov
mov
cmp
xchg
test
xchg
movsb
xor
push
cmpsb
ljmp
sub
test
arpl
cmp
inc
fiadds
mov
xor
test
lods
mov
cs
je
and
push
imul
fcomps
sbb
xor
cmp
xor
movsl
lret
daa
push
pop
sbb
dec
push
add
inc
jbe
test
jle
jae
scas
in
and
decb
and
fsubrp
xor
aas
sbb
nop
daa
test
push
insb
int
shlb
jnp
aas
int3
push
in
aas
and
fucomp
sub
mov
les
sbbb
dec
loop
movsl
mov
jo
sar
dec
pushf
jecxz
mov
mov
loop
fs
arpl
sbb
or
jb
mov
das
cwtl
sbb
cmp
pop
cmp
les
cmp
push
add
inc
dec
pop
popf
push
push
sub
ds
ja
push
push
imul
dec
mov
fildll
mov
cli
sbb
or
mov
clc
add
cmp
ja
negb
push
sti
or
repz
iret
repz
imul
mov
cmp
int
sbb
pushf
and
mov
mov
adc
add
in
jnp
aaa
testb
push
cmpl
out
jns
mov
pop
mov
or
iret
adc
popf
int
inc
loop
sbb
ljmp
jp
into
je
es
movsl
add
movb
dec
sti
xorl
sub
testb
pop
add
add
inc
jle
cmp
fistps
and
call
add
push
sbbb
cltd
mov
cld
push
mulb
cwtl
mov
or
sbb
inc
and
nop
nop
pop
sbb
test
fistps
jo
push
enter
in
xor
and
in
fwait
pop
xchg
or
add
pop
cltd
in
lcall
cwtl
ret
shlb
ret
mov
xchg
orl
cwtl
mov
push
enter
jb
add
xchg
cmpsl
mov
mov
adcb
cmp
adcl
call
pop
xlat
xor
rol
xchg
or
adc
or
dec
and
jge
rcr
mov
jne
inc
or
and
and
mov
aam
mov
shlb
and
ficoml
movsb
mov
popa
adc
adc
cmp
and
lock
push
pusha
mov
xor
sbb
add
push
imul
add
lock
dec
and
sbb
sub
out
nop
mov
push
test
leave
mov
inc
ss
push
jmp
inc
fwait
add
jae
ss
add
push
sub
icebp
sub
js
test
push
xchg
sub
js
push
sti
lcall
cwtl
and
imul
stos
imul
lret
sub
je
imul
imul
add
cmp
jnp
inc
add
mov
fisubrs
sub
pop
or
xchg
shll
push
xor
aas
or
pop
xor
roll
or
jbe
lahf
push
inc
test
push
or
cmpsb
or
inc
imul
test
sahf
gs
clc
ficoml
aas
add
in
jno
sbb
mov
and
push
test
inc
adc
add
lahf
push
add
lahf
xchg
cmpsb
lods
aaa
loope
pop
xchg
dec
rolb
test
add
mov
fcomip
cld
mov
sub
mov
push
cmc
mov
sub
jns
mov
sbb
add
aas
push
scas
movsb
and
or
push
push
outsl
and
cltd
mov
lods
mov
orb
or
cmp
pop
push
sbb
xor
idivb
dec
mov
push
jnp
add
cmpb
add
les
xorb
insb
es
sbb
pop
sub
push
sbb
les
add
inc
add
add
fisubl
scas
rcll
inc
arpl
pop
mov
shlb
push
mov
xchg
mov
adc
scas
pop
push
pop
daa
mov
in
inc
adc
push
inc
in
addb
ret
out
cmp
aad
fwait
andl
push
in
cmpb
je
push
inc
pop
inc
xchg
xor
xchg
adc
ret
subl
mov
call
sub
sbb
adc
loopne
fnstsw
out
leave
adc
cltd
loope
dec
push
data16
sbb
xchg
lds
push
mov
cmpsb
cltd
inc
pushf
adc
mov
sbb
adc
in
or
mov
sub
xor
adc
inc
out
dec
adc
jp
inc
or
adc
lods
roll
or
add
aaa
cmp
inc
dec
les
shr
and
adc
out
out
ret
les
lock
insl
adc
add
inc
mov
sbb
inc
fldz
cmp
das
insb
mov
add
xor
mov
cmc
icebp
xor
call
les
pop
cmp
pop
sbb
lock
inc
or
xchg
push
cs
cmpsb
or
mov
in
das
call
mov
xor
add
inc
rcrl
shll
push
mov
inc
psrld
push
mov
adc
imul
clc
dec
add
pop
mov
mov
fisubrl
lcall
lds
mov
out
sbb
popf
push
sbb
mov
das
xchg
jb
or
jl
filds
lea
cmpsb
fst
insl
stc
jmp
divb
ljmp
pop
dec
push
cli
push
push
xchg
stos
and
sarl
movsb
jmp
mov
repz
or
loope
mov
xor
movsb
mov
ret
inc
sub
lods
dec
das
ret
push
xchg
xchg
cmpsb
leave
add
mov
xchg
fwait
inc
sub
mov
and
and
adc
sub
movsl
inc
push
mov
jp
aam
jo
aad
mov
sgdtl
out
mov
mov
sub
imul
xchg
divl
shrb
sub
aas
pop
mov
or
addb
jp
or
sbb
js
or
dec
pop
dec
fwait
lret
movsb
addl
insb
mov
xchg
push
add
filds
or
jne
aam
inc
push
movsl
jmp
add
sub
mov
xchg
mov
es
dec
and
push
xor
outsl
test
mov
cld
idiv
sub
movsb
mov
nop
addb
daa
movsb
shlb
push
add
pop
daa
and
xchg
add
ja
sub
jmp
ret
std
push
or
adc
xor
adc
mov
mov
adc
arpl
pop
mov
mov
cmpsl
cmp
fwait
adc
or
mov
jmp
pop
movsb
ja
or
push
imul
xor
lock
cmp
test
xor
imul
outsb
add
and
scas
push
mov
es
arpl
shrb
out
lret
push
push
aaa
push
xor
shlb
shll
dec
aaa
jno
leave
inc
repz
dec
stos
push
mov
mov
or
xchg
jmp
cmp
out
mov
enter
outsl
into
and
lods
xor
ror
out
lods
and
test
or
shlb
xchg
pop
adc
or
sub
xchg
xchg
fisttpll
push
add
push
sub
push
pushw
pop
movsb
lahf
or
movsb
adc
sbb
mov
rorb
sub
das
cld
loope
mov
shrb
mov
and
dec
and
dec
sub
pushf
mov
or
mov
sub
push
mov
adc
jecxz
mov
push
add
xor
add
icebp
sbb
and
cmp
mov
clc
mov
sbbl
add
inc
test
pusha
inc
adc
adcb
xor
mov
add
mov
xchg
push
jmp
aas
or
xor
cmp
je
and
or
rclb
pop
addr16
les
sub
dec
in
xchg
scas
test
dec
mov
sub
fwait
and
and
out
push
popa
add
les
xchg
dec
xchg
arpl
inc
enter
movsb
push
bound
rcll
cmp
dec
cli
leave
sbbb
mov
dec
aam
aam
sbb
xor
movl
icebp
adc
ror
push
pop
and
xor
aaa
inc
add
pop
push
sbb
test
add
pop
xchg
xor
and
dec
movl
dec
test
push
cmpsl
mov
push
inc
push
inc
adc
cmpsb
jns
movsl
pop
jno
int
mov
cld
sbb
sub
int
pop
mov
fcoml
movsl
rorb
jbe
mov
or
mov
jo
aam
push
pop
pushf
sub
out
mov
das
cmpb
test
cmp
sub
xchg
in
data16
movsl
mov
or
mov
push
adc
shlb
xchg
int3
lds
mov
gs
add
test
loopne
push
inc
or
sub
xor
mov
mov
js
push
push
mov
or
push
inc
aas
xchg
nop
hlt
cmp
xchg
push
sti
inc
cmp
aas
je
push
test
mov
bound
sbb
and
and
push
xor
xlat
mov
sbb
dec
or
dec
adc
and
xchg
mov
push
mov
dec
outsl
sbbb
mov
daa
js
xor
inc
out
sub
ret
rcl
pop
add
sbb
fimull
xor
pop
inc
fnstenv
jns
cmp
xor
jecxz
outsl
jo
sub
jnp
dec
lcall
inc
or
aad
aad
nop
loop
inc
mov
shll
sbb
loop
inc
pop
and
je
outsb
ret
test
adc
push
sbb
pop
or
bound
pop
dec
roll
test
mov
inc
lret
test
pop
xor
sub
aam
leave
mov
xor
mov
and
xor
movsl
push
sbb
inc
adc
mov
and
aas
call
or
fwait
ja
sub
ss
dec
pusha
lds
fs
mov
sbb
mull
pop
ss
ja
rcl
push
cld
cmp
dec
pusha
dec
dec
test
outsl
mov
dec
mov
push
mov
pop
mov
insb
cmp
inc
and
xchg
insl
mov
arpl
icebp
adc
call
inc
lret
and
pop
and
dec
add
loopne
add
les
push
push
leave
push
fsubrs
adc
rcll
imul
adc
or
xor
mov
sarb
mov
mov
sub
xchg
notb
cld
or
rcll
int3
lock
rcl
mov
dec
push
pop
xor
dec
lea
cmp
inc
jp
pop
xor
cmpsb
jge
push
cmp
or
mov
enter
in
movsl
xor
jmp
test
enter
dec
mov
push
cmp
clc
inc
adc
inc
push
sub
mov
jbe
and
mov
out
add
jle
cmp
push
pop
mov
fldt
adc
aaa
pop
mov
pop
push
icebp
stc
sub
push
sbb
movsb
repnz
and
or
xchg
lret
pop
xor
out
orb
xchg
jbe
fcoml
cmpb
sbb
inc
lods
cs
push
fmull
pop
xchg
dec
js
outsb
adc
xor
xor
sbbl
inc
jae
rclb
enter
pusha
loopne
call
mov
dec
inc
fidivrs
jno
jg
push
rorb
dec
fstl
loopne
aas
or
sub
rcrb
popa
fwait
mov
aas
add
insb
and
out
addb
adc
sbb
sub
imul
nop
xor
pop
pop
bound
movsb
aaa
pop
sub
sbb
inc
sbb
test
xchg
rcrb
inc
lds
addb
das
adc
ja
xor
jo
repz
or
pusha
nop
fimull
push
cmp
ds
sub
arpl
pop
adc
mov
andl
or
dec
popa
cli
fdivl
inc
mov
imul
push
cmp
jge
pop
mov
adc
inc
cmp
enter
sbb
sbb
test
ret
scas
push
jmp
loopne
sti
add
sbb
push
add
lcall
fbld
or
inc
cmp
cwtl
sbb
pop
xchg
dec
mov
push
xchg
dec
scas
inc
addr16
cmp
mov
mov
pushf
je
ss
loopne
sub
inc
push
inc
and
ljmp
inc
leave
mov
sub
in
lret
loopne
ds
popa
int
jae
sub
sbb
hlt
aad
push
pop
add
sub
popa
dec
outsb
mov
clc
mov
prefetch
icebp
rol
je
mov
add
loop
pop
xchg
push
scas
jne
subb
sbb
inc
inc
xchg
pop
aam
mov
outsb
adc
pushf
or
jmp
push
fistl
sub
inc
adc
enter
cmp
mov
mov
pop
hlt
xlat
icebp
mov
sbb
insl
jmp
movsb
mov
pop
je
mov
jne
mov
aas
dec
adc
add
xchg
mov
and
imul
add
xchg
stos
or
sbb
mov
fldenv
push
movsl
add
mov
sbb
adc
push
fs
aas
das
cltd
cmp
and
sub
push
adc
jmp
or
call
or
add
lret
lods
or
pop
or
push
cltd
push
iret
add
pop
movsb
push
adc
or
pushl
shlb
loop
orb
jmp
roll
add
add
add
sbb
pop
arpl
sbb
aam
ds
or
popa
jmp
punpckhbw
inc
mov
adc
or
mov
movsl
insb
adc
push
outsl
mov
push
fidivl
jecxz
mov
jae
mov
push
add
fwait
pop
xor
sti
dec
imul
jbe
pop
xor
xor
sbb
or
mov
lds
inc
mov
ret
adc
popa
mov
fwait
sti
push
or
and
imul
popa
iret
adc
out
lret
movsl
movsl
test
sbb
add
pop
jecxz
jo
sbb
adc
push
xchg
mov
or
sbb
inc
addl
movsb
add
and
push
outsl
fiaddl
addr16
test
in
sbb
cmp
add
push
mov
sub
add
dec
dec
lea
out
addl
movsl
jg
and
loopne
push
xchg
adc
fbstp
lock
adc
or
xchg
movsb
addr16
enter
loopne
sub
inc
mov
jbe
loopne
out
call
or
mov
das
mov
mov
enter
xor
cwtl
sbb
xor
push
xchg
movsb
test
mov
arpl
adc
pop
add
imul
dec
lea
aad
dec
push
dec
cmpsl
mov
or
push
xchg
std
xchg
sbb
jp
mov
adc
arpl
lea
out
ja
dec
aaa
xchg
sbb
xor
cld
out
xchg
movl
js
xor
push
dec
call
sti
sbb
jg
outsl
or
add
lahf
add
mov
push
lods
xor
mov
mov
aaa
xor
loopne
movsb
fsubp
nop
bound
pop
pushl
movq
push
adc
repnz
mov
pop
add
punpcklbw
mov
jmp
push
mov
push
fcoml
and
and
repnz
call
les
js
sbb
xchg
adcl
jo
pusha
or
popa
sbb
xchg
shll
inc
cmp
ror
xor
rcll
and
inc
lock
pusha
pusha
mov
cmpsl
mov
je
lds
pop
movsb
push
xchg
dec
lcall
and
xor
pop
ljmp
in
inc
pop
adc
or
les
int
and
enter
js
push
dec
rolb
adc
jne
add
hlt
rcl
dec
mov
add
bound
pusha
in
push
daa
pop
in
das
dec
mov
xor
push
dec
aaa
push
arpl
mov
and
inc
fldl
es
add
pop
pop
push
inc
jg
pop
or
popf
xchg
in
fidivrs
push
fldlg2
int
unpcklps
push
adc
inc
psllq
test
and
in
and
scas
mov
stos
addb
dec
or
jns
add
cmp
popf
imul
jnp
add
inc
jo
adc
or
movsb
xor
add
ljmp
addb
sbb
cmpsb
push
pop
enter
mov
shlb
popf
fnstcw
or
nop
inc
or
cltd
mov
mov
or
out
mov
inc
mov
push
scas
icebp
das
push
daa
popa
mov
popa
cmp
fadds
push
jg
inc
leave
inc
les
push
addb
push
and
mov
push
push
inc
je
xor
sub
add
les
scas
sbb
adc
cmpsl
jnp
mov
jbe
adc
sarb
adc
add
sbb
movsl
push
mov
test
inc
sbb
sbb
mov
xchg
xchg
popa
lods
inc
or
insl
imul
xlat
fisubrs
cmp
xor
pop
adc
ss
fsubrl
xor
test
xor
inc
or
loopne
inc
pop
fcoml
or
cmp
push
mov
jmp
sahf
cmp
es
mov
mov
jae
xor
mov
scas
sub
mov
lea
dec
and
add
xchg
pop
sbb
sub
test
rol
sbb
sub
sti
xchg
insb
in
into
shrl
adc
sbb
adcl
xchg
adc
push
shrb
mov
js
fidivrl
fdivs
adcb
sbb
pop
mov
psllw
pushf
pushf
pushf
mov
mov
dec
dec
inc
sahf
pop
hlt
dec
fwait
jmp
aaa
cmc
test
inc
rclb
std
dec
div
sub
fnstcw
and
add
jo
add
cmp
mov
rcr
dec
pop
iret
jne
nop
sysexit
and
sbb
imul
push
add
lret
add
adc
jb
add
xchg
or
mov
test
in
and
nop
pop
jge
xchg
outsl
test
mov
inc
or
push
adc
inc
adc
rolb
xor
mov
add
loopne
pop
shrb
test
xchg
imul
fdivr
and
lret
cmp
pop
or
sub
pop
mov
fwait
orb
fwait
pushf
xor
mov
xor
adc
ja
ja
xchg
cmp
push
or
mov
inc
dec
mov
xchg
mov
xor
mov
xor
shlb
jl
xor
les
hlt
push
jne
xlat
adc
nop
or
xor
adc
mov
pushf
js
or
and
mov
ja
or
and
xchg
stc
inc
mov
fiadds
and
and
and
outsl
xchg
xchg
and
and
stc
and
push
enter
jp
daa
and
sub
sbb
xchg
pop
sbb
push
jecxz
inc
enter
nop
dec
sub
outsl
or
adc
push
push
daa
xchg
adc
add
ja
lds
pop
sbb
mov
push
push
jl
or
cmp
pushl
mov
pop
dec
adc
or
in
adc
mov
mov
add
shl
jne
enter
cmpsl
mov
rorl
insl
int
and
pop
shlb
mov
pusha
shr
loop
jl
insb
mov
xor
mov
adc
pop
xor
jno
adc
mov
sahf
daa
inc
adc
rorl
or
dec
adc
xchg
cmpsl
jo
sbb
adcl
js
xor
cwtl
and
adcl
or
ret
or
cmp
adc
imul
pop
mov
add
or
push
jmp
dec
push
pop
mov
pop
sbb
mov
dec
in
in
xlat
mov
or
jns
repnz
add
scas
xchg
sbb
or
leave
add
add
pop
mov
push
mov
adc
add
in
enter
add
cmp
push
add
add
test
add
sbb
sbb
in
add
xor
or
xor
mov
xor
xor
xor
xor
jb
xlat
mov
je
in
push
or
sub
ret
lds
pop
adc
add
lahf
loop
adc
ror
pop
xor
xor
pop
inc
das
imul
hlt
or
out
iret
imul
push
sbb
daa
inc
push
popa
inc
mov
aaa
gs
sub
xchg
rcrl
xchg
pusha
lock
push
add
sbb
add
add
pop
je
cmp
outsb
mov
bound
lds
xlat
loopne
lods
test
movsb
ss
add
insl
das
or
xor
clc
xor
pop
sbb
cld
pop
rcl
push
xor
or
mov
cmp
inc
daa
xor
xchg
or
or
sub
fnstsw
inc
dec
push
mov
push
movsb
inc
dec
xchg
outsl
ficoml
bound
inc
and
push
dec
pop
sbb
inc
adc
inc
inc
lret
jecxz
stos
and
test
push
push
dec
or
push
movsb
add
or
lea
pusha
add
add
stos
xor
or
into
sbb
add
seto
enter
add
sbb
xor
test
arpl
scas
xchg
std
cmc
mov
subb
xor
leave
sahf
pop
or
lods
push
stos
test
add
push
inc
aam
xor
rorb
xlat
inc
xchg
outsb
push
xchg
insb
add
lds
mov
mov
push
xchg
dec
rcll
and
and
shl
xor
aaa
and
mov
clc
or
push
testb
or
jae
ja
add
jo
cmp
sbb
adc
jo
jno
rol
sub
pop
pop
lret
stos
dec
popa
push
aaa
sbb
pop
mov
dec
or
out
arpl
xor
cmp
or
ds
rcl
cwtl
sub
test
addb
sbb
mov
test
mov
out
jno
mov
sbb
adc
pusha
xor
mov
inc
dec
sub
and
mov
rclb
mov
call
sbb
out
and
cmc
rcll
test
addl
push
gs
or
adc
or
sub
sbb
orb
mov
push
dec
leave
jmp
push
mov
pop
and
push
push
idiv
jle
push
aaa
adc
push
test
and
jb
inc
int3
and
add
jmp
xchg
pop
fstpt
or
test
pop
inc
mov
inc
lods
jle
jo
test
movsl
sub
fnsave
cmp
cmp
or
xlat
push
std
jl
inc
jmp
lods
or
stos
repnz
push
aaa
inc
or
xchg
cmp
add
add
cmp
push
cmpsl
movsb
aas
push
push
adc
xor
js
insb
cmp
sbb
movsb
add
lret
pop
xchg
and
aam
dec
sbb
inc
test
and
rorl
les
push
stc
je
sbb
and
shll
testl
or
out
push
pop
pop
addl
push
call
mov
popf
and
rorb
fbstp
sub
cmpsb
jae
popa
or
lea
enter
or
inc
sbb
pusha
cmp
cltd
into
lods
sti
dec
aas
lret
push
or
incb
pusha
pushf
dec
mov
push
repnz
or
sbb
push
outsl
in
jb
xchg
cmp
push
push
pop
adc
xchg
sbb
push
inc
push
sbb
mov
cs
addr16
cmp
mov
aad
jp
jg
and
add
pop
paddd
in
repnz
jbe
loopne
xchg
clc
repnz
add
cmpb
jmp
enter
add
cmc
pop
sbb
test
xchg
bound
pop
popf
cmc
mov
repnz
adc
push
mov
cld
les
inc
push
mov
push
call
dec
test
lret
xor
mov
xchg
imul
and
rorl
rorl
dec
adc
inc
or
ret
enter
scas
or
xchg
rcrl
lock
popa
cmp
sub
xchg
inc
adc
int3
inc
add
ljmp
ret
jmp
pop
xchg
cmp
and
pop
adc
jge
std
push
mov
jae
frstor
loop
cli
outsl
rcr
xchg
dec
or
dec
dec
inc
adc
and
mov
imul
add
xchg
arpl
pop
add
sbb
add
xchg
and
mov
insl
and
inc
sub
jb
and
je
inc
sbb
xchg
mov
sbb
add
cmpb
adc
fmuls
mov
and
repnz
lock
add
daa
sub
and
jo
pop
cwtl
sbb
lds
adc
daa
mov
jl
movsl
dec
es
je
cmp
cwtl
adc
mov
cmc
cmp
imul
jmp
test
inc
cmp
mov
mov
xchg
xchg
rolb
jae
sar
pop
cld
mov
inc
and
sti
sbb
mov
or
xor
sbbl
dec
cmp
dec
adc
jmp
bound
rclb
insb
dec
cmp
or
dec
and
jl
repnz
cmpb
je
pop
mov
or
sar
inc
dec
xchg
mov
rcrb
push
xor
test
jp
pushf
fadd
cwtl
subb
fs
jmp
fsubrs
shll
ret
jmp
mov
jb
inc
jne
xor
pushf
test
loope
lods
mov
sbb
call
cmp
push
or
fcoml
leave
mov
call
adc
cmovae
or
and
add
pop
mov
je
pop
fcoml
pusha
pusha
popa
cs
fsubs
jg
cmp
js
push
loopne
in
mov
jne
cs
jmp
mov
xor
popf
or
xor
mov
dec
push
mov
cld
mov
hlt
push
test
in
movsl
std
pop
sarl
fcmovnb
or
daa
adc
add
inc
push
jle
and
pushl
add
pop
push
mov
add
pop
and
mov
jg
xchg
mov
and
adc
mov
movsl
inc
push
mov
imul
sbb
and
pop
iret
outsl
aam
bound
incl
lret
or
add
pushf
sbb
movsl
and
test
dec
lock
inc
jnp
push
jmp
adc
pop
notl
jmp
aaa
cli
dec
jno
aas
cmp
or
dec
in
sbb
fadds
sbb
cmp
pop
out
arpl
leave
sbb
movsl
mov
xlat
sbb
sti
push
adc
push
or
aam
xchg
subl
xchg
xor
imul
gs
ja
enter
pop
inc
iret
es
daa
cmp
dec
jmp
push
push
or
xchg
dec
andl
mov
loop,pt
orb
mov
sub
lret
jns,pn
andb
push
and
and
cmpb
aaa
xchg
mov
shlb
cwtl
and
out
sbb
mov
dec
inc
nop
out
cwtl
cmpsb
inc
mov
imul
mov
test
addr16
cmp
adc
add
add
sub
shll
cs
push
adc
sbb
pop
push
sbb
insb
or
aas
sub
push
jns
cmp
adc
insb
xor
adc
sub
insb
cmc
dec
push
or
push
ja
shlb
aaa
int
cmp
jmp
sbb
or
mov
flds
jl
or
pop
cltd
push
sub
shl
aaa
adc
icebp
push
inc
jae
and
inc
les
rolb
or
repnz
mov
mov
pop
adc
xor
shrl
xchg
in
inc
sub
and
adc
ret
fbstp
loopne
in
and
add
mov
and
mov
outsl
mov
add
cmp
add
xchg
nop
or
mov
popf
xchg
orl
or
jmp
inc
cmpsb
mov
rcl
pop
icebp
and
cmp
test
ss
int3
insl
xor
xchg
jne
test
jns
push
scas
pop
out
and
and
in
cwtl
push
adc
mov
push
lock
int3
int3
cmpsb
cmc
add
mov
adc
push
dec
scas
das
add
pop
add
mov
sub
stos
add
out
push
int3
rolb
xchg
push
inc
pop
shrb
sbb
add
and
dec
shrb
ret
inc
je
mov
aaa
aad
test
add
pop
lock
jns
test
andb
add
icebp
call
or
int3
cltd
call
addb
mov
sub
subl
clc
cmp
popa
jb
jg
push
push
cli
or
mov
cmp
aad
dec
popa
or
cmp
nop
add
add
mov
pop
call
mov
cmp
xor
outsl
push
insb
loope
nop
xorb
or
test
mov
add
inc
push
push
jb
adc
sub
dec
sbb
add
mov
arpl
xchg
mov
rcll
rol
mov
add
out
xor
mov
mov
sbb
in
fcoms
daa
cmp
fwait
js
push
xor
xchg
dec
lods
int3
and
fldl
sub
inc
insb
pusha
loope
add
enter
mov
and
ds
mov
sbb
inc
jno
inc
pop
jo
lock
dec
adc
push
or
cmp
sub
sbb
and
sub
inc
push
ret
test
shlb
jo
inc
out
in
and
ss
adc
xor
dec
test
push
add
fstl
add
sbb
lea
inc
pop
jb
cmp
jae
and
jmp
nop
loop
jbe
shr
mov
dec
adc
inc
inc
sbbl
fdivrl
jno
mov
imul
popa
sub
imul
in
adc
ja
push
xchg
mov
sub
adc
es
ljmp
and
jo
pop
outsl
jp
and
jo
push
adc
adc
push
pop
insb
cmpsl
rcll
push
xchg
sarl
jmp
outsl
int3
jg
xchg
rclb
xor
mov
js
stos
add
add
jo
sbb
ja
outsb
cmp
adc
daa
xchg
lea
push
outsl
mov
out
aam
mov
fwait
push
orb
xchg
cmova
arpl
push
cmpsb
ss
push
dec
sbbb
int
movswl
or
out
and
xchg
enter
aas
inc
or
push
fidivl
push
shrb
aam
clc
mov
sub
inc
adc
mov
xchg
xchg
cmp
outsb
push
xchg
test
nop
mov
leave
insl
pop
and
push
dec
addb
mov
dec
pusha
popa
xor
mov
and
cmp
add
jmp
pop
mov
mov
mov
cmpb
into
hlt
lods
call
mov
jge
fcmovb
ret
sbb
into
andb
mov
mulb
ss
les
and
inc
push
or
insl
das
pop
jge
pop
and
sbb
mov
xor
jne
pop
push
in
pop
mov
test
inc
sbb
jne
stos
cmp
lahf
loopne
fimull
mov
add
jae
int
jge
fsubr
fidivrs
fsub
add
jns
mov
adcl
cmp
jae
subl
mov
pop
mov
dec
decl
inc
xor
or
adc
movsb
cmp
shlb
jmp
and
xor
movsl
test
sbbb
pop
insb
cmp
mov
cmpb
rcll
mov
aaa
movb
loop
aas
sbb
mov
ret
or
xor
scas
or
or
add
stc
lcall
call
inc
cld
inc
push
outsl
insl
mov
sbb
aam
shll
imul
or
and
dec
mov
xor
mov
or
insl
ret
and
int3
push
mov
sub
jp
jp
sbb
test
hlt
and
shl
loope
xor
insl
or
mov
push
sbb
sbb
iret
outsb
add
cmp
in
cwtl
loopne
xchg
push
fists
mov
jp
pop
rclb
addb
push
xchg
fidivs
scas
stos
loope
je
jmp
icebp
and
jns
popf
stc
mov
push
imul
xchg
push
popf
xchg
in
push
dec
cmp
cltd
xchg
aam
aam
sub
pop
aaa
lea
xor
add
mov
mov
add
inc
mov
push
and
sub
daa
pop
dec
shrb
lea
sbb
adc
sub
add
push
and
dec
in
mov
ret
repnz
call
leave
imul
push
xor
nop
rcll
adc
in
pop
repnz
or
rcrl
loope
lcall
push
rcrb
jo
lcall
push
or
nop
mov
xchg
lret
mov
sahf
fldenv
in
je
lahf
adc
shll
push
outsl
pop
mov
dec
add
test
xchg
adcb
jbe
sti
pop
mov
lret
imul
rolb
mov
push
stos
lds
xor
push
daa
cmpb
vsqrtpd
stos
out
jo
sub
insb
or
arpl
xor
mov
push
pop
or
jmp
in
insb
pop
loopne
sub
xor
cwtl
je
mov
movsb
push
fadds
mov
popa
lahf
xorl
mov
enter
ljmp
pop
and
pop
and
xchg
dec
mov
in
shlb
jo
enter
fcoms
sub
imul
orb
lds
or
pop
icebp
pusha
leave
js
xchg
push
adc
inc
pop
rolb
inc
repz
xchg
aas
pop
cmp
sub
inc
and
repnz
xor
pusha
inc
xor
lds
adc
in
mov
mov
shlb
dec
or
inc
sub
xchg
xor
add
imul
test
js
xor
filds
clc
add
xchg
adc
or
sbb
fiadds
ud0
and
push
adc
js
lret
push
das
cmp
xchg
xor
test
mov
adc
addr16
xor
fcmovnbe
cmp
inc
lock
inc
sbb
adcb
mov
push
sbb
inc
jno
test
mov
jo
repz
int3
adc
outsl
inc
add
outsl
and
testl
and
inc
testl
pop
es
icebp
mov
mov
lahf
push
dec
test
ss
movl
adc
sbb
aaa
mov
arpl
pusha
and
lret
cmp
or
add
arpl
xchg
pop
adcl
testl
lcall
and
pop
adc
andb
daa
xor
xor
xor
rcll
in
dec
lods
add
cwtl
push
lahf
or
js
cmp
xor
nop
and
jl
mov
in
repz
dec
or
rcrl
push
scas
lcall
cmp
xor
or
jo
pushl
cmpsb
push
test
js
inc
adc
push
and
imul
lods
dec
xchg
pop
mov
pop
ja
or
or
xchg
fs
xor
or
movsb
xchg
mov
jle
push
in
lea
adc
aam
xchg
inc
stos
movsl
aaa
and
push
cmp
pop
add
cmp
dec
sub
dec
cmpsb
push
push
test
jecxz
pop
repnz
push
xchg
pop
fcmovne
aam
mov
xchg
in
xchg
bound
push
add
mov
mov
and
xchg
mov
cmp
push
popa
sahf
add
inc
rol
lock
ss
rcrb
xor
inc
jp
addl
movsb
add
pusha
mov
push
fldt
and
iret
cmp
or
and
lods
xchg
adc
xchg
js
shl
mov
dec
push
jns
mov
inc
pop
leave
jns
pop
push
cmp
in
fwait
mov
cmp
or
loope
in
push
mov
movsb
jnp
jb
push
fidivl
push
lret
and
shlb
pop
fwait
pop
sub
add
bound
insb
or
or
fnstenv
cmp
pop
sub
cltd
mov
jne
push
lock
mov
mov
adc
push
stc
push
jne
add
call
mov
mov
adcb
lahf
xchg
push
mov
out
cmp
fcoml
cmp
add
jne
add
dec
fists
xchg
jmp
push
and
loop
fisttpll
xor
mov
jb
adcl
or
rclb
dec
or
movsb
or
leave
nop
dec
ljmp
aad
adc
add
xchg
adc
mov
dec
or
ficompl
xchg
jmp
hlt
push
pop
adc
and
mov
or
push
push
push
inc
test
and
gs
aam
ss
adc
xchg
in
mov
cmp
jne
cmc
xchg
mov
pop
push
push
xchg
add
rcl
leave
pop
std
and
cmpb
roll
imull
inc
adc
daa
or
and
enter
addr16
sbb
pop
es
sbb
pop
add
sbb
icebp
js
repnz
je
pushf
pop
loope
imul
inc
lahf
dec
mov
mov
or
nop
jge
or
add
dec
cmp
push
lds
inc
dec
inc
jmp
mov
stc
adc
jg
inc
iret
push
mov
push
clc
mov
pop
pop
push
add
sub
iret
adc
js
das
insb
xor
inc
xchg
enter
inc
or
lods
subps
shrl
roll
lahf
dec
or
popa
jge
sbb
xorl
mov
mov
mov
std
adc
pusha
cmp
sbb
je
adc
daa
movsb
pop
fs
sub
and
push
push
or
xchg
mov
jmp
inc
or
out
je
pop
xchg
popa
imul
inc
in
or
jne
mov
inc
orb
cmpsb
mov
sbb
push
shrb
cmpb
push
mov
sub
aam
adc
sub
repnz
pop
add
pop
ss
and
adc
cmp
mov
outsl
mov
xchg
sub
push
and
sbb
dec
add
xchg
clc
ljmp
pop
arpl
stc
pop
cld
mov
inc
pop
dec
mov
mov
sub
add
sub
dec
xchg
ret
xchg
inc
pop
fs
add
cld
or
mov
push
mov
xor
cld
out
push
adcl
add
pop
or
sbb
ret
xchg
and
cmp
fdivl
int3
or
sarb
cmpsb
inc
outsl
mov
or
shlb
push
nop
enter
add
xchg
fisttpl
push
mov
dec
xor
sub
cmpsb
addl
clc
pop
mov
das
push
aam
inc
xchg
inc
mov
mov
lock
jne
or
loop
adc
inc
mov
in
jns
adc
sbb
pop
movsb
cli
cmpsb
or
movsb
andb
fldcw
ja
daa
inc
fiaddl
inc
adc
add
xchg
adc
fistl
or
mov
and
lea
imul
movsl
pop
inc
fdivs
adc
dec
aaa
pop
jo
nop
dec
pop
xchg
pop
aad
adc
add
lahf
cmp
pop
orb
adc
fs
mov
jnp
xchg
pusha
mov
xchg
aas
adc
and
and
sahf
out
lock
push
cld
dec
xor
mov
sbb
push
enter
inc
ficoms
xchg
sub
inc
and
dec
fwait
jno
push
les
mov
lcall
mov
sbb
je
adc
jae
or
test
push
inc
jae
hlt
test
jge
icebp
xchg
push
movsb
shll
mov
out
and
lea
cmpsl
pop
rcll
mov
mul
in
sti
outsl
incb
daa
sub
out
sub
loopne
adc
inc
ja
movsb
pop
cmpsb
jle
stos
wbinvd
dec
insb
adc
cwtl
jo
incb
adc
pop
xchg
sbb
jae
xor
jle
push
arpl
dec
add
mov
or
movsb
in
adc
and
rcrb
or
adc
inc
je
arpl
mov
imul
int3
mov
xor
lahf
pop
xor
sbbl
inc
push
pusha
cmp
mov
cmp
int3
mov
mov
push
lds
popa
pop
push
shll
xchg
aaa
in
sub
jo
fs
in
cld
push
jbe
add
push
daa
mov
add
mov
dec
fsubrl
fmull
add
popa
addr16
loopne
fldcw
inc
push
mov
add
ss
push
addl
jmp
hlt
push
loope
shrb
add
sbb
fiaddl
adc
data16
mov
and
or
das
cmp
lods
rolb
add
push
dec
add
add
and
iret
sbb
in
rorl
or
sub
jbe
dec
pop
adc
adc
enter
pusha
or
popl
jns
cli
mov
xchg
inc
shlb
dec
out
ljmp
dec
and
push
mov
lods
push
xor
add
aaa
repnz
clc
push
mov
dec
jecxz
mov
iret
lods
sbb
push
push
sub
mov
xchg
lods
xchg
push
mov
push
push
push
in
jne
mov
lahf
adc
pop
push
dec
mov
inc
cmp
sbb
ret
cmc
xchg
fneni(8087
aas
pop
inc
xor
jae
rorb
adcb
insl
lcall
adc
dec
pop
fs
xchg
dec
mov
imul
out
dec
xor
mov
push
lret
mov
push
dec
mov
cs
test
add
push
test
pop
cmpsl
aam
je
mov
dec
xchg
push
push
push
sub
outsl
pop
jnp
cmp
repz
push
mov
xchg
sbb
in
mov
inc
jae
jg
push
les
cmpsl
push
in
aam
mov
mov
push
enter
cmp
xlat
add
outsl
or
push
dec
adc
add
xchg
push
leave
mov
adc
pusha
sbb
mov
ss
cmp
jmp
hlt
dec
mov
push
pop
cld
sub
aaa
inc
dec
mov
test
shlb
out
push
addb
mov
jg
movb
jno
pop
cmpsl
aas
cmp
sbb
shlb
pop
adc
push
outsl
push
dec
out
sbb
stc
mov
xchg
lock
dec
or
cwtl
lretw
xor
dec
faddl
aaa
mov
jl
mov
jle
inc
hlt
inc
or
push
and
sti
jl
inc
iret
out
lods
mov
adc
add
and
inc
test
jb
sub
and
es
popa
fsub
push
inc
mov
add
in
cmp
inc
cltd
je
sub
add
pop
xchg
es
xchg
or
xchg
fistl
jo
lcall
nop
arpl
lret
jmp
xorl
sbb
pop
push
inc
sarl
push
popa
push
mov
rcl
inc
inc
out
dec
aas
imul
repnz
fwait
mov
test
inc
adc
push
cmovbe
js
jle
stc
sbb
push
and
cmp
xor
cmp
loopne
or
pusha
mov
push
cmpsl
jbe
fdivrl
adc
push
pusha
mov
fstl
push
xchg
popl
addb
pop
push
mov
cmc
ds
test
cmp
sub
dec
mov
mov
lret
shlb
xor
jge
push
repnz
inc
dec
shr
and
xchg
cmpsl
aam
in
aad
push
ja
push
test
int
jmp
xor
mov
test
pop
insl
push
cwtl
sbb
adc
fbld
xchg
test
imul
sub
cmpsl
cmp
iret
or
dec
adc
cltd
add
int3
push
int3
and
jmp
or
fildl
dec
shll
sti
xchg
icebp
adc
mov
fxch
sbb
test
test
add
sbb
xchg
add
or
ss
mov
ret
cs
int
or
cmp
cmp
inc
ss
mov
and
ret
mov
push
data16
add
imul
fisubrs
push
push
push
loop
pop
into
push
sub
das
inc
push
xchg
sbbl
adc
les
pusha
xor
jg
jbe
ss
or
adc
add
popa
xchg
or
stos
or
adc
arpl
add
jnp
mov
xor
jne
push
lret
fldcw
sub
loopne
movsb
or
pop
pop
sbb
mov
adc
shll
inc
js
dec
adc
int3
pop
mov
arpl
je
jnp
xchg
neg
mov
dec
lret
call
jno
and
mov
outsl
pop
or
mov
push
add
repnz
mov
push
subl
decl
rolb
adc
adc
mov
pop
aaa
sub
outsb
leave
test
or
mov
add
cltd
xchg
out
lods
push
ret
push
xor
or
adc
ljmp
add
push
rclb
mov
cmp
pop
fistpl
imul
jno
loop
push
push
sub
push
cwtl
daa
loopne
cmp
adc
and
mov
fwait
out
pop
in
int3
add
jnp
test
out
sahf
imul
inc
mov
push
sub
push
ja
shlb
and
push
fwait
imul
sbb
push
push
loopne
add
jl
mov
popf
pop
test
adc
add
pop
add
shlb
inc
inc
mov
jmp
cmp
xor
pop
nop
push
inc
popa
loope
push
fwait
shrl
xor
outsl
pop
pop
adc
xlat
sbb
pop
and
jp
pop
mov
stos
fnsave
dec
pop
jns
inc
pusha
xchg
mov
fists
pop
add
rcll
push
jne
sahf
out
push
pop
mov
icebp
jg
filds
pop
and
cmp
rcrb
insb
imull
lea
pop
add
push
je
nop
and
lds
adc
das
jle
addr16
jo
lods
dec
mov
lods
mov
fldt
pop
aaa
push
addr16
pop
shll
add
sbb
jge
push
mov
pop
neg
push
cmp
adc
scas
push
out
push
or
inc
push
mov
mov
mov
das
push
push
shll
mov
iret
shll
push
or
andb
push
and
in
popa
mov
fldl
out
iret
jnp
mov
pusha
nop
push
loopne
outsb
mov
out
mov
push
loopne
push
sbb
and
rcrb
repz
dec
idivb
push
dec
sbb
lret
xchg
jg
pop
add
pop
sbb
sbb
iret
ss
hlt
sbb
or
dec
sbb
cmpsl
cs
popa
inc
or
pop
sbb
int3
fisubrs
ja
push
adc
leave
ds
test
xor
add
mov
mov
das
ljmp
push
xchg
mov
clc
rcl
sub
sub
pop
add
pop
in
lret
out
imul
xlat
mov
dec
add
mov
and
cmc
je
inc
inc
jmp
push
jae
mov
push
or
push
aam
dec
fldcw
test
or
movsb
mov
sahf
lea
cmpsb
mov
inc
popa
popf
and
inc
add
mov
push
sbb
ret
out
inc
add
inc
xchg
nop
sub
inc
out
ds
repnz
mov
sbb
push
add
repnz
cs
les
mov
pop
dec
jne
sub
dec
inc
mov
lahf
sbb
inc
out
imul
push
ret
adc
mov
loope
pop
dec
add
mov
scas
in
pop
scas
pop
sub
or
into
int3
xor
push
lock
xor
loopne
fs
push
orb
adc
inc
int3
jne
add
xor
test
ljmp
enter
xlat
mov
frstor
hlt
mov
add
aas
imul
mov
aaa
scas
pusha
add
aas
iret
fcompl
mov
stos
or
jecxz
mov
pop
push
pop
xor
lahf
inc
inc
mov
daa
popa
cmp
aaa
mov
sub
cmc
xor
ror
adc
push
fadds
stos
and
or
pop
pop
pop
dec
mov
push
pop
and
ja
sub
mov
mov
cmpsl
gs
data16
mov
pop
sbb
arpl
push
mov
mov
and
fldenv
ljmp
xlat
xchg
call
pop
mov
sbb
shr
inc
les
enter
add
xchg
or
or
inc
lcall
mov
hlt
xchg
mov
adc
cmp
push
sbb
or
mov
pushf
and
mov
cmp
rorb
and
cwtl
mov
lods
sbb
mov
adc
inc
jle
inc
pop
aam
fldl2t
push
popa
pop
sbbl
dec
ljmp
sahf
idivb
dec
adc
inc
lods
push
mov
pop
xchg
adc
dec
and
jbe
cmp
adc
lock
andl
loopne
int3
xlat
sbb
in
inc
mov
jl
fildl
or
imul
in
and
mov
dec
add
add
es
xor
lcall
mov
dec
or
xor
push
jb
add
pop
gs
pop
pushf
hlt
inc
iret
loopne
mov
push
dec
inc
and
int3
or
add
out
adc
aaa
xchg
or
add
int3
int
popa
addl
or
push
aam
jmp
lock
jge
in
add
int3
inc
and
outsl
loopne
add
push
seto
dec
mov
and
xor
in
shlb
mov
fwait
cs
jl
inc
or
mov
pop
pusha
dec
je
adc
inc
push
sbb
jbe
mov
mov
dec
fbld
add
mov
add
mov
sub
out
loopne
dec
push
stos
clc
mov
cld
inc
push
adc
xchg
push
adcl
pop
or
jns
lret
pop
pop
adc
mov
insb
pop
dec
sub
insb
jl
lcall
mov
add
lock
inc
adc
pop
movb
xor
push
test
lock
aam
fnsave
add
pusha
pop
insb
add
cltd
and
lcall
add
push
mov
dec
loop
sub
ss
inc
cmp
fwait
imul
clc
test
sbb
pop
or
movsb
xor
icebp
jbe
pop
xchg
xor
adc
in
ret
mov
pop
and
add
and
lock
add
lret
cmp
filds
cmp
fisubrs
mov
jb
out
dec
sub
shr
pop
and
cld
test
inc
pusha
loope
adc
mov
inc
scas
movsb
push
fdiv
out
xor
ret
scas
fcomip
in
mov
lcall
leave
mov
xlat
and
das
insb
lcall
fildl
ss
sbbl
dec
jg
push
aaa
or
add
cmp
mov
add
mov
push
sub
outsl
or
adc
jg
cmc
sbb
mov
into
jmp
xchg
mov
adc
addr16
adc
xchg
dec
push
sti
push
fcoms
and
xchg
lods
cmp
pop
add
push
lahf
bound
cmp
push
les
shlb
add
inc
push
sub
movsb
adc
pop
rcll
pop
rcll
lret
xchg
and
adcb
sbb
enter
lea
ret
push
push
pushl
push
dec
cli
push
xor
and
xor
xchg
test
and
inc
sbb
add
dec
mov
mov
imul
pop
insl
mov
mov
adc
jmp
sbb
xlat
cmp
cmp
xor
inc
sbb
cmpb
arpl
aaa
xor
addb
adc
xchg
push
add
cs
pop
das
inc
and
das
or
adc
jne
lret
insl
dec
xchg
addr16
and
loop
loop
shlb
dec
cmp
movsb
push
and
arpl
lret
push
shll
and
mov
push
push
mov
sub
lcall
lret
push
jne
nop
adc
pop
xchg
pop
insb
sbb
jge
push
sbb
decb
mov
outsb
aaa
mov
aaa
lods
or
dec
mov
outsb
or
fdivl
xchg
pop
xchg
adc
cmp
outsb
stos
outsb
fiaddl
push
and
add
call
mov
incb
or
outsl
push
imul
mov
fsubl
cwtl
loop
inc
sub
xor
sub
inc
xor
ret
andl
outsl
popa
push
lret
push
adc
and
call
mov
arpl
mov
fsubs
dec
pusha
fcmovnb
push
xchg
gs
mov
aam
aaa
imul
mov
rorb
lret
loope
add
jge
sbb
dec
pop
mov
sub
mov
pop
insb
mov
dec
stos
push
and
loopne
es
lods
repz
inc
sbb
push
push
push
lcall
sahf
mov
nop
xchg
jo
arpl
xor
add
xor
or
sbb
sbb
std
rclb
mov
inc
xor
mov
inc
ret
outsl
leave
push
sub
addr16
lods
add
dec
push
inc
push
nop
arpl
xor
orl
repz
jle
clc
push
or
int3
pushf
sbb
push
mov
clc
cmp
jno
test
adc
cs
mov
xlat
je
int3
jnp
scas
fsubrs
add
push
js
xchg
bound
stc
pop
mov
adcb
xchg
sbb
daa
test
fs
xchg
jbe
dec
mov
pop
in
lcall
sub
lods
dec
ret
ja
cltd
cmp
or
sbb
pop
sbb
test
jae
pushf
push
lods
dec
mov
xchg
push
push
xchg
pop
ja
mov
push
or
cs
addl
sbb
testl
push
daa
push
int3
fildl
jno
out
les
cmpsl
add
push
add
iret
out
mov
adc
xor
out
loopne
loop
out
fs
push
dec
dec
cmpl
pop
adc
push
inc
lods
adcl
xlat
sti
xchg
xor
mov
insl
sbb
sbb
push
nop
sarl
sub
add
or
or
cwtl
inc
push
js
sub
xor
lret
mov
add
mov
add
or
sarl
inc
addb
jbe
orl
andl
fildl
and
test
add
mov
outsl
outsb
push
fucomip
xchg
sbb
pop
xchg
sbb
subb
call
adc
mov
mov
or
das
push
xor
and
push
or
lea
xchg
lret
in
and
ja
and
mov
sub
sbb
xor
mov
std
dec
or
outsl
int
xchg
jmp
jnp
in
cmp
ret
dec
cmp
fidivs
inc
repz
or
stc
pusha
dec
pop
dec
xchg
adc
dec
xor
cmp
fs
mov
jle
scas
loopne
cmp
adc
fs
call
and
adc
imul
add
add
int3
int
int3
lods
cmp
test
fnsave
pop
lea
fiaddl
push
subl
cmp
cs
sbb
mov
cmpsl
cmp
mov
in
movsb
sub
sbb
push
fs
xchg
sub
roll
push
mov
add
dec
movsl
sub
and
jb
and
mov
cmp
pop
mov
and
and
mov
add
nop
movsb
fdivl
and
repnz
adc
or
rolb
sbb
xchg
or
cmpb
add
or
jbe
nop
and
inc
sbb
push
fs
mov
enter
nop
or
rcr
rcll
add
and
sbb
add
and
scas
sbb
and
xor
dec
call
hlt
scas
mov
fildl
adc
nop
add
nop
sbb
sbb
je
xchg
or
icebp
adc
cmp
stos
test
jecxz
lock
cmpsl
stc
pop
js
xor
out
fisubrs
jnp
inc
push
leave
jns
out
xchg
mov
out
nop
jns
scas
jbe
repz
addl
imul
dec
add
push
sbb
xor
push
jp
jne
dec
jns
out
mov
loop
cld
sahf
out
out
or
push
push
and
fucomp
jns
out
sti
orb
out
ret
rclb
addr16
repz
je
adc
add
cmp
mov
mov
mov
cwtl
add
sbb
push
out
ss
in
data16
fcoml
nop
xchg
aaa
adc
ss
pusha
imul
adc
in
jno
mov
push
sub
sbb
js
add
add
orb
mov
rclb
neg
js
push
lock
pop
es
fimuls
sbb
sahf
add
jg
mov
bound
xchg
addl
lea
mov
push
mov
dec
pop
push
adc
scas
push
add
push
movsb
lea
cmp
mov
inc
jmp
les
mov
adc
cmpb
or
push
jle
push
push
xchg
mov
test
lock
rorb
dec
out
mov
mov
push
loop
add
rcrb
test
mov
mov
out
mov
push
mov
xchg
cmp
cmp
sub
adc
jl
or
lea
shrb
mov
mov
inc
imul
sbb
aam
jecxz
add
ret
and
or
fwait
sub
inc
jo
dec
repz
mov
sub
mov
or
adc
mov
inc
fdivrs
inc
pop
sbb
mov
setb
mov
mov
movsb
xchg
pop
bound
insb
and
push
sub
out
movsl
imull
mov
pop
pop
pusha
sub
cmp
push
jae
ficoms
lret
xor
enter
mov
dec
mov
dec
inc
cmp
inc
subl
pop
rcrb
scas
xchg
andb
pop
ljmp
sub
add
mov
and
je
call
push
cli
cltd
data16
nop
cli
sub
sub
mov
mov
mov
call
loopne
and
addb
sbb
sub
jl
lods
push
sahf
push
push
movsl
xlat
and
xor
orl
pop
stos
rolb
add
hlt
jle
std
les
addb
lock
lea
and
inc
adc
cmp
pushf
or
outsl
imul
int3
dec
mov
icebp
xchg
loop
lahf
cwtl
rorb
aam
cmp
cmp
mov
pop
shlb
add
xchg
hlt
inc
roll
out
cwtl
sub
jns
sub
je
and
jnp
sub
sbb
rorl
cmpsb
mov
pop
or
sbb
movsb
jbe
add
dec
adc
mov
cmpsl
roll
shlb
movsl
pushf
adc
mov
inc
add
mov
jae
add
ja
jns
std
rcrl
jle
jae
xor
push
in
sbb
or
xor
pushf
adc
xchg
jbe
mov
push
push
ret
dec
jne
inc
mov
cmp
test
sub
cmpsb
add
mov
mov
test
and
ss
pop
mov
and
xchg
and
xchg
pop
and
or
test
push
or
das
popa
adc
popa
inc
adc
push
mov
sbbb
add
stos
stc
and
sub
pop
mov
fs
mov
popa
jmp
lcall
in
inc
pop
dec
test
dec
test
sbb
mov
xchg
dec
insl
add
imul
fprem
inc
push
fs
inc
test
pop
test
push
xchg
sbb
sub
rolb
jecxz
int
bound
sbb
pop
rol
stc
dec
adc
adc
inc
fistl
nop
pop
rclb
ja
pop
mov
push
in
sbb
push
call
sbb
cmp
dec
mov
fildll
hlt
add
jl
cmp
and
ret
iret
mov
sbb
and
pop
and
fs
xor
sub
inc
cltd
into
mov
test
ret
push
xchg
add
sbb
xor
pop
jp
lds
adc
mov
outsl
aad
lods
movsl
data16
add
sahf
dec
push
xor
ljmp
aas
inc
jbe
mov
sbb
inc
push
imul
adc
lods
jo
adc
or
cmp
fisubrl
hlt
xchg
rcll
add
lahf
cmp
into
xor
fsts
aad
cltd
adc
mov
jne
jecxz
repnz
xchg
pop
decl
push
pop
pop
sbb
loopne
adc
mov
cmp
ss
fldl
and
lret
cmpsl
mov
inc
loope
mov
dec
inc
loope
dec
mov
push
clc
or
inc
inc
or
stc
bound
jae
adc
loopne
sub
sbb
clc
dec
mov
inc
sbb
stos
mov
je
fildl
cmpsl
dec
loope
call
outsl
jne
or
jns
mov
add
adc
dec
mov
test
cld
sbb
add
mov
jo
add
sub
out
test
insl
sti
push
inc
sbb
ja
mov
mov
and
pop
jp
jmp
inc
xchg
enter
inc
dec
fcmovbe
or
or
xchg
adc
jmp
aad
jne
leave
sahf
xor
pushl
lock
mov
jno
mov
sbb
ret
push
or
adc
dec
push
sbb
cmp
loop
inc
add
and
inc
or
push
adc
clc
daa
cmpsl
sbb
xchg
jmp
inc
dec
jne
pop
leave
les
mov
in
jg
push
inc
lahf
pop
pushf
in
orb
dec
mov
add
pop
incl
adc
jle
xchg
test
ds
lods
xor
fmull
mov
scas
sub
or
ficompl
enter
adc
mov
cmp
lods
cmp
gs
inc
lods
cmp
int
xchg
mov
mov
divb
arpl
rclb
pushf
push
in
lret
mov
js
jp
loope
lret
sub
pusha
fcoml
dec
add
push
mov
sub
push
ret
xchg
pop
jo
outsl
pop
aaa
loop
mov
add
testb
add
fwait
insl
out
sub
xchg
insb
mov
xor
das
cmp
adc
adc
movsb
daa
shlb
int3
out
push
mov
mov
aam
pop
cli
inc
xor
mov
pop
add
xchg
pop
adc
jmp
and
nop
test
cmp
dec
sub
pusha
stos
sub
xchg
lcall
ljmp
push
rclb
pusha
adc
loope
pop
xchg
scas
jl
sbb
lea
lcall
add
in
pop
pop
nop
subb
sub
adc
inc
orl
adc
rol
lods
pop
shrl
and
push
rorb
adc
or
cmp
adc
cmp
movsb
mov
cmp
adc
repz
jno
jl
sbb
bound
pop
stos
dec
sbb
daa
cwtl
xchg
add
cmp
xchg
ss
push
insl
push
arpl
lods
mov
lcall
mov
add
shll
pop
adc
xor
add
pop
imul
nop
shrb
pushf
sbb
mov
push
push
xchg
loopne
dec
add
sbb
mov
mov
add
push
das
mov
lea
xor
pushf
and
decb
jae
mov
pop
and
std
add
add
inc
sahf
sub
ljmp
mov
adc
shrb
inc
jle
xchg
insb
test
push
test
cmpsl
sub
enter
cmpsl
lds
fildl
fwait
xor
push
dec
add
add
sbb
dec
dec
sbb
mov
cmp
mov
movsb
cs
dec
fsubs
lods
test
push
dec
dec
daa
sub
or
shrb
jno
pop
sbb
cmpsb
dec
nop
icebp
push
movsl
and
push
out
xchg
lock
sbb
xor
fisubrs
pop
pop
inc
sbb
cwtl
mov
jnp
adc
sti
imulb
add
in
mov
xor
sbb
xchg
dec
push
mov
pop
or
mov
jns
and
pushf
or
jle
adc
les
lock
pop
xchg
je
mov
addr16
lcall
je
imul
xbegin
xor
imul
pop
test
pop
push
jno
test
jno
jo
test
hlt
jae
fnstsw
outsb
popa
pop
xchg
xchg
mov
and
pop
test
pop
cs
push
and
cwtl
sbb
stc
sub
sub
pop
and
add
sbbl
mov
xchg
call
pop
imul
and
call
and
dec
sub
jmp
pop
pop
call
in
jmp
xor
mov
push
fwait
std
mov
inc
ret
or
inc
insl
loope
xor
ret
jne
mov
push
imul
push
mov
or
cmp
add
or
xchg
or
repnz
pop
pop
test
push
xchg
in
cwtl
or
in
mov
inc
dec
mov
sub
mov
inc
fiaddl
inc
add
mov
cld
test
dec
repnz
bound
testl
add
cwtl
cmp
cli
add
jne
ret
cld
and
jno
lret
roll
lahf
xor
push
and
in
dec
fidivs
sub
ja
lcall
in
or
mov
xor
test
xchg
adc
pop
add
lea
or
push
jb
add
add
sbb
repz
dec
mov
jl
mov
inc
cltd
in
jne
add
adcl
lcall
adc
add
inc
mov
fwait
cmovp
mov
sbb
add
inc
movsl
rorl
pop
mov
add
sub
movsb
adc
inc
cmp
call
and
cmp
rorl
shrl
push
dec
cmp
pop
fwait
mov
popf
sbb
mov
test
dec
cmp
cmp
sti
push
sub
mov
sbb
pop
add
xchg
dec
xor
push
nop
cmc
sub
sbb
addl
jo
and
and
cmp
cmpl
jb
cmp
dec
mov
jne
and
xor
in
imul
sbbb
dec
dec
inc
inc
lret
or
orl
push
pop
pusha
mov
pop
mov
jmp
stc
cltd
subb
mov
in
loopne
dec
mov
gs
or
orb
lock
shlb
cld
cmp
xchg
pop
cmpsl
pop
bound
dec
pop
orl
imul
adc
pop
xor
adcl
mov
push
jg
and
inc
dec
cltd
mov
cmpsb
fs
or
icebp
xor
aas
sub
das
les
xlat
and
inc
inc
neg
ss
push
and
insb
movsb
and
xchg
cs
lods
fcompl
arpl
xor
roll
inc
pop
ljmp
daa
adc
iret
sbb
rcll
fadd
xorl
xor
outsb
adc
in
mov
sbb
in
sbb
sub
adc
and
imul
dec
mul
xchg
pusha
std
xchg
pusha
sub
fs
add
jg
mov
popl
mov
sub
xchg
push
sbb
jne
sbb
shr
sub
inc
ret
loopne
aam
push
fcoml
add
out
or
jg
sub
and
add
pop
mov
or
sbb
ret
pop
dec
std
popf
and
xchg
mov
call
daa
adc
mov
push
sar
stos
mov
mov
icebp
test
in
jge
mov
adc
aad
and
je
cs
mov
mov
xor
aam
ret
test
or
clc
sbb
rol
incl
cmp
pop
outsl
or
xor
mov
movsb
mov
mov
sub
mov
imul
xlat
iret
lock
jl
stos
and
or
shrl
push
nop
add
call
xor
mov
add
in
push
pop
sbb
xchg
lds
cwtl
xor
mov
fwait
aaa
cli
or
pop
dec
jo
arpl
gs
adc
jno
andb
jb
pop
jne
sub
dec
mov
ret
xchg
movsb
fwait
lea
mov
dec
jne
pop
dec
mov
adc
nop
adc
icebp
mov
push
popf
add
aaa
adc
or
jne
push
mov
jo
adc
subl
xchg
mov
movsl
lea
cmp
xor
flds
add
cmc
jle
rcrl
mov
rorb
xchg
or
xchg
adcl
mov
pop
sbb
lock
js
cmpsb
mov
inc
push
aas
inc
mov
xor
xchg
pop
jnp
mov
addb
jl
inc
jmp
mov
and
rclb
rcrb
sbb
cltd
mov
jge
rorl
in
xor
cmpsb
inc
in
sub
pop
insb
jo
popa
xchg
mov
pop
movsb
sbb
sub
call
cmp
mov
push
das
lahf
inc
outsb
mov
aad
mov
pop
outsl
and
mov
lods
dec
xchg
daa
mov
add
pop
add
or
adc
sub
lds
jnp
push
mov
dec
cmpsb
push
push
push
lods
mov
jmp
call
arpl
push
pop
rolb
dec
sar
hlt
and
and
dec
idivl
pop
jne
xlat
arpl
dec
fstpl
xor
adc
insl
push
or
xor
in
jno
aaa
xorb
add
mov
dec
dec
jmp
test
jecxz
mov
inc
cmpsb
add
and
xor
shlb
into
pop
movw
sarl
lea
ret
push
loope
sub
sub
das
out
loope
rcll
andb
jmp
and
cmpsl
jecxz
sbb
xlat
and
fs
ret
pop
pop
xchg
and
mov
shrb
jnp
add
mov
int3
xchg
xchg
out
push
repnz
sbbb
mov
nop
je
popa
sbb
inc
xchg
mov
push
sbb
lret
jo
cmp
mov
mov
clc
lock
add
lea
mov
cmp
ja
je
test
aam
jno
scas
dec
add
push
hlt
pop
or
xchg
add
dec
jne
test
movzbl
pop
nop
xor
xlat
test
lea
std
sub
cmpl
and
fwait
mov
pop
add
jge
in
ret
push
add
jne
fmul
add
inc
ja
mov
push
mov
sub
in
xchg
xchg
xchg
add
orb
cli
or
movb
mov
mov
pop
mov
push
or
pop
out
mov
sti
ja
adc
or
jmp
sub
pop
mov
push
ds
xor
pusha
jmp
std
je
dec
cmp
add
add
dec
sti
scas
scas
add
jmp
adc
scas
jge
adc
or
sbb
mov
adc
mov
fstp
and
push
inc
push
lock
jne
xchg
bndstx
fsubrl
xor
popa
cmp
push
cmc
dec
push
and
insb
add
mov
mov
mov
adc
loopne
pop
pop
psubsb
push
xchg
adc
add
sbb
jge
cwtl
sbb
lcall
das
js
lock
arpl
cwtl
pushf
sarl
sub
pop
push
movsb
cld
in
inc
mov
mov
adc
dec
mov
xor
add
or
cmp
sbb
jecxz
add
mov
inc
test
sbb
jle
push
pop
popa
mov
jmp
dec
pop
fdivl
lock
jne
adc
adc
test
xabort
pushf
pop
sub
rcl
stos
jns
cs
mov
inc
or
add
mov
lock
pushf
loope
lods
lcall
xor
je
aas
dec
movsb
jle
or
add
ret
add
jg
push
mov
sub
xchg
mov
pusha
nop
mov
pop
inc
cmp
ja
inc
pop
in
ds
fisubrl
mov
add
pushf
jmp
add
loope
mov
jnp
out
mov
movsl
jmp
enter
test
push
mov
cs
daa
cli
stos
mov
sbb
xchg
dec
add
or
ret
scas
and
adc
insl
pop
pop
das
jne
xchg
xor
test
push
add
push
push
sbb
and
adc
fs
xchg
or
sub
jo
adc
or
mov
mov
adcb
std
inc
sbb
cwtl
sbb
lods
cmp
sbb
xchg
adc
pop
mov
adc
xor
fcomps
pushl
mov
mov
lret
mov
mov
out
pusha
enter
fs
lods
jo
or
insl
xchg
rcrb
test
movsb
xor
push
inc
push
sbbl
sbb
jns
jmp
notl
dec
dec
mov
sbb
bound
ss
sbb
xorl
pop
push
push
or
out
mov
xchg
int3
mov
xchg
add
push
xor
adc
push
sub
jl
shr
or
or
out
mov
sub
in
into
icebp
ret
or
sub
sbb
and
loopne
loope
icebp
cmp
inc
adc
cmpsl
pop
mov
sbb
mov
nop
fadd
jo
add
lods
int
decl
subb
clc
push
jo
mov
push
push
inc
push
sbbl
inc
sub
xor
jne
popf
mov
mov
lahf
mov
fsubrs
mov
mov
es
add
insb
enter
or
divl
rolb
adc
mov
mov
mov
popa
lret
or
popf
mov
sub
cmp
adc
cld
clc
adc
push
cltd
cld
clc
jge
push
pusha
xchg
ret
or
adc
dec
adc
sbbb
mov
mov
sub
testl
icebp
mov
xchg
mov
imul
jnp
data16
and
push
and
rcll
sbb
xlat
mov
pop
inc
aad
sub
outsl
mov
nop
xor
mov
in
es
and
daa
jecxz
mov
pusha
movsb
jo
mov
pop
and
xor
stc
xchg
xor
nop
outsb
loopne
jne
or
add
jne
ds
xchg
loopne
xor
test
adc
pop
loopne
pop
jecxz
inc
xchg
in
icebp
push
faddl
inc
cmc
call
push
adcb
test
and
jp
dec
or
lahf
test
mov
mov
cmp
mov
xor
xchg
sti
call
xlat
rcrb
add
jne
mov
jmp
adc
or
lret
adc
cs
xlat
xchg
push
or
push
push
and
movsb
adc
data16
xchg
insl
loop
jnp
inc
scas
cmc
mov
cwtl
and
repnz
mov
xlat
fadds
repnz
mov
shll
movsb
shlb
daa
inc
inc
leave
jo
adc
add
mov
dec
or
jmp
mov
jo
vphaddbw
in
sub
int3
insl
and
xor
lahf
mov
adc
sbb
loopne
jno
mov
sbb
popf
xorl
mov
mov
leave
fwait
divb
push
xchg
ss
or
dec
pop
cmpsb
jae
jmp
jns
add
mov
fldl
mov
push
add
push
movsb
testb
add
and
xchg
scas
arpl
mov
jge
jo
repnz
mov
jmp
aaa
mov
ss
pop
lcall
adc
push
out
fidivl
add
repz
mov
add
or
push
jo
lock
stos
dec
sbb
xchg
sbb
or
pusha
adc
das
inc
jecxz
enter
mov
sbb
add
movsb
cmp
cli
jbe
add
push
je
xchg
int3
add
inc
cli
leave
addl
adcl
mov
aam
movsb
aam
sbb
xchg
lea
add
in
aaa
mov
or
pop
addl
xchg
push
sbb
dec
push
call
adc
dec
cmp
lods
ss
push
fidivs
xchg
adc
loope
adc
sbb
cwtl
add
cmp
or
sbb
xor
jbe
mov
inc
push
imul
sbb
push
inc
repz
sub
out
clc
jl
add
jns,pn
push
pop
mov
shlb
movsb
mov
or
pop
sub
cmpsb
es
jb
sbb
das
mov
push
push
aad
gs
insl
mov
testb
sbb
push
pop
mov
cltd
push
roll
push
push
add
xor
nop
js
inc
push
pop
sub
push
push
gs
dec
and
add
mov
lods
inc
push
pop
setg
shlb
mov
dec
mov
subl
push
or
js
mov
fdiv
cmp
push
adc
pop
in
sbb
and
lea
cmp
push
xchg
outsl
or
dec
movb
mov
mov
stc
sub
xor
mov
inc
mov
jb
pop
jb
cmp
je
mov
push
movsb
and
mov
mov
adc
mov
test
mov
inc
inc
push
cmp
pop
fisubs
test
inc
add
jmp
add
push
stos
push
mov
dec
sbb
mov
scas
in
dec
cmp
mov
shll
mov
frstor
outsl
enter
mov
std
mov
popl
data16
mov
cmc
mov
data16
call
xchg
add
sub
test
pop
sahf
add
mov
jle
subb
scas
add
adcl
popa
je
sbb
add
adc
adc
pusha
jmp
das
adc
loope
add
cmp
sub
insl
lods
in
pop
fwait
xchg
sbb
sub
outsl
cmp
sbb
nop
rcrb
inc
xchg
add
aas
jg
aam
jecxz
je
or
rol
dec
mov
test
cwtl
lcall
push
dec
fisubs
mov
xor
adc
pop
or
cwtl
mov
loopne
dec
cmp
add
xchg
outsb
cmc
sub
adc
fs
pop
xor
add
sub
sti
inc
mov
push
call
adcb
or
mov
xchg
rcr
sub
add
jl
xchg
subb
adc
fistpll
testb
xor
inc
inc
add
ret
xchg
fstps
fwait
aas
fsubs
pop
add
jmp
flds
fmuls
dec
cwtl
popa
dec
fildl
in
add
inc
add
loopne
fiadds
cmpsb
loopne
sbbl
stos
pop
inc
iret
inc
imul
adc
mov
lods
sub
ret
mov
enter
push
lods
jne
add
dec
pushf
mov
test
cmpsb
pop
add
pop
xchg
bound
movl
insl
dec
fisubrl
dec
sbb
adc
aam
dec
add
ljmp
cmp
inc
cmp
sbb
add
in
js
add
ss
inc
adc
int
insb
call
add
movsl
pusha
repz
mov
mov
or
out
xchg
dec
js
aaa
rcpps
cmp
inc
test
adc
sbb
sbb
sbb
outsb
inc
pop
xchg
outsl
bound
adc
jb
nop
repz
mov
and
sbb
or
out
or
mov
xchg
subl
xchg
les
es
inc
aaa
movsb
adc
adc
add
cs
jbe
mov
loope
leave
bound
cltd
cmp
sbb
lds
inc
dec
mov
adc
jmp
sarl
daa
or
or
daa
in
mov
lock
push
and
out
xor
mov
pop
push
sbb
mov
pop
out
orl
addr16
add
test
or
ret
dec
sbb
pushf
out
pop
shll
push
sarb
add
xchg
lods
ret
jns
bound
popf
xchg
cmpb
repnz
pop
fs
inc
cmp
stc
outsb
call
call
pop
mov
xor
in
ror
inc
lahf
js
or
jecxz
xor
leave
js
or
pop
roll
in
adc
loop
pop
fwait
addb
push
mov
sub
jmp
lret
and
push
ss
add
pop
adc
outsb
movups
popa
inc
pop
cmp
adc
sub
or
add
lock
cmpsb
push
and
in
test
pop
jno
icebp
aaa
push
imul
cmp
mov
lds
sub
cwtl
je
dec
jno
jecxz
fimuls
pushf
call
sub
push
cmp
xchg
push
mov
inc
mov
sbb
xchg
mov
adc
jae
jno
imul
in
mov
and
add
jge
cmpsb
mov
and
sti
sbb
je
mov
adc
xchg
dec
pop
lds
jecxz
jmp
mov
cmpsb
adc
int3
leave
mov
nop
mov
stc
imul
add
shlb
repz
xor
inc
lods
out
testl
adc
pop
pusha
adc
sbb
daa
addr16
push
cmp
xor
push
inc
fsubr
xchg
outsb
add
pusha
pop
jo
inc
pop
and
push
imul
add
pop
fcoml
ja
mov
iret
mov
or
cmc
mov
loopne
xor
adcb
seto
add
das
jl
out
es
xor
or
or
pop
cmp
shrl
test
pop
ds
test
lds
inc
pop
and
pop
imul
daa
arpl
mov
pop
cmp
shlb
adc
insl
push
inc
shlb
dec
rorl
sbb
add
xchg
sbb
adc
mov
sbb
cmp
add
mov
pop
leave
sbb
push
xchg
add
lea
add
jno
and
mov
cmp
dec
in
jne
inc
and
ret
pop
or
or
mov
mov
insl
or
bound
dec
and
andl
xchg
xor
mov
inc
test
inc
inc
pop
jnp
cs
aam
mov
lcall
rolb
shl
aaa
inc
loop
hlt
orl
insl
jb
mov
les
and
jle
pop
mov
pushf
inc
rorb
sub
sbb
outsl
fbstp
test
push
dec
leave
movsl
inc
mov
xor
outsl
in
mov
sbb
mov
pop
pop
rorb
adc
js
sub
fwait
sbb
push
cs
mov
in
dec
das
mov
outsb
gs
xor
cs
insb
mov
push
sbb
xor
push
imul
or
push
fildl
jo
dec
mov
mov
das
mov
movb
jg
add
push
push
loopew
sub
pop
test
addl
mov
pop
fs
sub
dec
int3
pop
cmp
cmp
push
push
loope
sub
sbb
movsl
mov
pusha
xchg
push
push
andb
inc
push
sbb
aam
adc
xchg
and
lods
dec
mov
iret
push
push
adc
push
cltd
int3
mov
insb
mov
xor
adc
packssdw
aas
pop
popa
fs
jo
nop
iret
lret
and
inc
into
fimuls
sbb
mov
xlat
iret
pop
push
test
je
inc
jb
mov
mov
test
js
into
iret
cli
es
add
outsb
inc
add
cltd
jecxz
fs
scas
sbb
adc
outsl
jl
pop
iret
dec
and
repnz
rolb
dec
inc
popa
cmpsb
fmull
insl
mov
je
test
sbb
call
orb
push
or
in
mov
rol
dec
rolb
cltd
inc
push
test
stos
bound
pop
bound
add
es
add
leave
leave
jo
mov
and
std
or
inc
pop
push
xchg
mov
or
mov
adc
push
loope
subl
and
inc
push
rol
stos
adc
push
add
ss
and
xor
or
push
nop
push
xchg
jmp
dec
inc
sti
sbb
les
inc
mov
and
aas
pop
or
dec
mov
pop
inc
sub
xchg
popl
ja
add
inc
push
lahf
lods
mov
adc
addl
add
cmp
xor
inc
mov
iret
sub
dec
dec
dec
xchg
iret
add
jb
mov
arpl
mov
dec
stos
or
ds
psrlw
adc
lahf
inc
testl
jae
xchg
bound
sbb
mov
call
and
inc
arpl
inc
push
test
mull
pop
sbb
adc
jne
out
pop
dec
cmpsl
outsb
sub
adc
sub
call
mov
and
jae
cmp
out
and
dec
push
dec
out
outsb
mov
insl
pop
push
jg
gs
addr16
sub
dec
cwtl
les
inc
add
fbstp
xchg
leave
push
outsl
sub
aaa
sub
pop
xchg
sbb
pop
adc
dec
mov
push
testl
inc
or
cwtl
testl
mov
rolb
repz
insl
fwait
bound
insl
ja
inc
orb
xor
les
jo
iret
xor
pop
pop
decl
idiv
pop
push
sub
mov
cmp
outsl
pusha
add
int3
divl
jne
mov
and
dec
inc
stos
adc
and
fbld
mov
or
mov
inc
cmp
or
dec
and
lods
jecxz
outsb
inc
roll
adc
inc
test
push
and
jp
push
adc
or
adc
and
sbb
inc
dec
aad
scas
movl
push
inc
test
bound
or
cmpsl
pusha
xchg
loopne
mov
bound
mov
push
pop
dec
mov
and
stos
and
lahf
push
adc
push
xchg
xor
push
pop
xchg
movnti
sub
cmp
aam
jo
inc
inc
sbb
and
inc
sub
add
andl
push
sub
push
mov
sbb
pop
xchg
ljmp
mov
daa
cmpsb
inc
mov
addr16
fisubs
nop
mov
lds
xchg
adc
ss
xlat
jbe
xchg
add
push
push
add
gs
adc
mov
mov
cmpsb
fmuls
add
add
divl
das
xchg
add
xor
loopne
adc
test
cmp
push
sub
xchg
mov
inc
jle
out
mov
dec
std
ds
repnz
loop
push
cmpsl
sub
dec
imul
push
push
mov
adc
xchg
aaa
xor
ljmp
mov
pop
iret
test
add
jno
jle
hlt
mov
test
add
ret
mov
and
push
dec
pop
push
adc
subb
xchg
imul
enter
or
cmpl
inc
xor
aam
xchg
jg
lret
inc
ds
wbinvd
in
mov
xor
jmp
cld
adc
lods
stos
jg
and
adc
faddl
subl
mov
and
les
or
sbb
mov
sbb
push
stos
mov
les
lods
hlt
pop
aam
jbe
add
fnstenv
mov
add
and
adc
push
aam
movsl
sbb
adc
pop
std
and
add
jge
jnp
addl
shll
sub
sub
xorb
ja
or
cmpsl
lea
adc
add
invlpg
push
rcrb
xlat
sahf
inc
or
sar
int3
sbb
hlt
sbbl
ret
lret
imul
nop
leave
shl
pushf
cltd
mov
outsb
out
leave
mov
mov
sarb
dec
jl
filds
call
lea
mov
incl
pop
add
js
pop
push
fmull
cmp
gs
aas
and
fstps
add
dec
dec
add
in
sub
clc
std
sbb
and
adc
xchg
sahf
frstor
sti
and
rclb
pop
ja
dec
add
cmp
sbb
add
sbb
push
out
push
clc
sbb
gs
call
add
loopne
rol
aaa
pop
sahf
push
sbb
push
push
push
call
loopne
add
lods
cld
push
add
xor
and
in
jae
sbb
and
cmp
mov
push
fsubr
loop
mov
cmc
dec
fadds
pop
sbb
dec
mov
nop
psraw
adc
ret
sahf
dec
inc
and
and
fisttps
dec
int3
mov
shlb
nop
ret
imul
pop
insl
mov
mov
pop
cwtl
fs
xor
xchg
lret
jnp
mov
or
movsb
dec
ss
xor
or
lods
popa
and
adc
and
and
add
mov
ljmp
mov
sbb
fcoml
loop
in
gs
and
dec
push
pop
mov
and
mov
pusha
pop
sbbl
mov
and
xchg
div
inc
imul
and
or
add
das
add
pop
je
sbb
or
dec
mov
mov
or
int3
shlb
pop
and
sub
push
faddl
pop
push
rcl
sbb
shlb
xchg
hlt
adc
iret
lock
sub
call
xchg
cmp
sti
push
xchg
xchg
fs
adc
ret
sbb
dec
addr16
xchg
mov
push
inc
push
push
ret
mov
enter
roll
mov
clc
mov
icebp
idivb
pop
aam
and
dec
inc
add
jbe
jo
adc
sbb
add
push
sti
inc
mov
inc
jo
test
sbb
or
enter
mov
lret
ja
imul
outsb
das
mov
add
imul
lcall
scas
pop
dec
mov
loop
addr16
push
dec
inc
jmp
adc
daa
imul
inc
cmpsl
sub
dec
arpl
or
inc
mov
jnp
push
imul
and
je
mov
pop
flds
or
movsb
xchg
sub
push
fildll
rclb
sub
and
xor
imull
pop
sbb
or
xchg
faddl
mov
push
xchg
cwtl
sbb
mov
idivl
add
cmpsl
enter
push
mov
xor
push
repz
fstps
setbe
inc
lret
enter
das
and
mov
jne
cld
and
xor
and
mov
test
sub
aaa
xor
aam
fcomp
push
cmp
or
xor
sbb
fcompl
in
rcrb
cmpsl
adc
cmpb
xor
jae
ret
jbe
lods
data16
mov
ja
dec
mov
mov
das
inc
mov
movsb
inc
push
sub
jo
into
orb
push
jg
add
inc
das
pop
das
dec
pushf
cmp
add
ret
loopne
dec
sbb
mov
push
es
jl
add
jg
shll
sbb
inc
xchg
inc
add
add
es
dec
pop
dec
clc
and
daa
pushf
imul
inc
clc
jl
pop
xor
roll
push
or
pushf
inc
or
add
sub
loop
ja
lds
sbb
and
push
inc
or
and
xchg
aaa
test
orb
inc
sbb
xchg
push
push
hlt
xchg
add
popl
cwtl
stos
adc
xchg
imul
sbb
xchg
clc
hlt
loope
sbb
and
repz
jbe
dec
test
sub
pop
test
ja
aas
lea
popa
or
test
aad
xchg
mov
push
jecxz
add
cmp
inc
imul
notb
or
mov
nop
sub
mov
scas
nop
cld
sbb
xor
adc
test
xchg
mov
loopne
clc
mov
dec
je
sub
or
scas
fdivr
adc
jnp
stc
or
cmp
or
or
dec
mov
add
mov
sub
add
mov
imul
andb
jp
out
jbe
jns
je
outsb
imul
push
xor
lds
fbstp
add
inc
aaa
lahf
dec
inc
jmp
sbb
aaa
ja
imul
push
lods
jbe
pop
es
aaa
add
insl
cmovle
mov
imul
bound
dec
aam
or
and
add
test
lret
mov
sub
dec
or
loope
mov
sti
jp
mov
insb
mov
insl
add
inc
inc
jne
les
jl
rorb
push
push
je
fs
cwtl
popl
cs
xor
fiadds
rcrl
and
test
jb
mov
push
jb
js
jae
cltd
shlb
icebp
loopne
loopne
inc
jb
push
cmpsl
aaa
inc
cli
das
ljmp
pop
adc
add
push
inc
xlat
inc
mov
aas
incl
sbb
mov
dec
mov
dec
repnz
insl
lock
movsb
pop
and
mov
rorb
stc
movsb
dec
mov
xchg
mov
js
addr16
hlt
es
pop
cltd
sbb
fsubrs
add
xchg
cli
clc
dec
dec
and
or
repz
sbb
cli
test
in
or
xorb
sbb
js
popa
iret
push
xor
pop
mov
adcl
data16
sbb
xchg
pop
jae
mov
mov
ret
sub
shrl
inc
call
aaa
add
arpl
imul
outsb
jge
jnp
mov
les
dec
jecxz
xchg
xor
jo
add
sbb
and
mov
mov
in
jg
rorb
das
repz
and
cld
orl
sti
dec
or
sub
movsl
enter
dec
and
xlat
jbe
inc
les
add
inc
jg
add
xor
add
push
add
mov
movsb
xor
test
call
call
push
sbb
fcomp
fwait
or
sbb
mov
mov
fbld
outsl
xor
nop
out
xchg
xchg
dec
rorl
inc
xchg
ja
and
subb
fisubl
inc
sub
add
mov
out
stos
nop
or
inc
ficoms
mov
mov
leave
mov
int
add
arpl
cltd
or
or
lcall
add
sub
fsubrs
mov
clc
xlat
adc
fiaddl
mov
cmpsb
cmp
mov
rcrl
imul
mov
xchg
mov
and
xchg
lret
dec
outsl
outsl
push
xchg
xchg
sbb
pop
mov
jg
js
lcall
les
xor
inc
aaa
mov
fists
or
sahf
mov
scas
or
lods
pusha
cmpsl
inc
ret
stos
push
aad
cmp
mov
push
ret
das
xor
xorl
bound
negl
fs
stos
lahf
popf
mov
sbb
pop
xor
adc
pushf
movsb
dec
mov
pushf
fcomi
xchg
out
push
test
arpl
or
leave
add
ficompl
adc
roll
add
mov
jb
in
pushf
pop
inc
add
repz
hlt
jl
add
jp
ja
mov
inc
mov
mov
or
cmp
push
js
clc
andl
cmp
insb
push
mov
jle
push
je
repz
xor
adc
imulb
jmp
add
mov
or
cmp
rep
enter
sarb
cmpsl
les
inc
pop
inc
jg
push
mov
enter
insl
in
xchg
jp
jae
adc
xchg
mov
push
add
shrl
inc
mov
adc
xor
sub
push
mov
cld
cmpsb
xchg
testl
lds
lods
pop
jg
inc
addr16
or
dec
inc
push
jl
dec
leave
imulb
and
adc
stc
pop
loop
push
mov
out
or
dec
or
test
cs
sahf
inc
mov
loopne
cmp
aas
jle
call
lock
dec
fstpt
mov
push
sbb
fs
jo
and
dec
fists
in
js
enter
and
jecxz
mov
inc
pop
lcall
inc
mov
inc
sti
cmp
push
xchg
cmp
scas
lods
adc
jl
js
xor
out
int3
lods
push
jnp
repnz
and
jle
cmpb
pop
push
hlt
loop
mov
repnz
in
bound
mov
shrl
div
inc
stc
sbb
aaa
mov
das
lock
xchg
int
or
enter
pop
repz
sbb
jl
scas
push
sbb
push
mov
mov
out
pusha
push
push
outsl
mov
jo
scas
nop
lahf
call
in
push
push
lahf
cmp
mov
adcl
push
daa
mov
leave
mov
dec
mov
rcll
loop
mov
aaa
dec
push
fs
ja
aas
jle
addr16
push
pop
jo
jno
push
je
push
and
mov
pop
mov
mov
popa
pusha
outsb
add
popa
test
movsb
inc
repz
fs
or
xchg
in
mov
in
cbtw
jle
jg
mov
push
sbbb
addb
js
or
movsb
imul
es
jo
or
repz
shlb
dec
mov
lods
aaa
leave
neg
dec
mov
push
orb
popf
or
pop
mov
mov
mov
pop
dec
nop
loopne
mov
mov
push
add
mov
inc
stos
jg
hlt
xchg
addr16
jbe
mov
push
inc
push
sub
lods
ds
pusha
push
scas
inc
loopne
mov
mov
ds
mov
mov
rcll
sbb
inc
ljmp
out
sahf
push
dec
sbbb
in
adc
xor
out
mov
jo
andb
dec
fmulp
jmp
movsb
push
mov
jne
cmpsl
jge
adc
pop
insb
sub
in
adc
scas
cs
cmp
cmpsl
cmp
push
dec
adc
movups
repz
inc
adc
cmp
push
sbb
es
add
test
ja
scas
xchg
outsb
push
rcr
add
in
faddl
mov
add
adc
and
fidivs
es
adc
daa
jge
cmp
test
push
in
and
mulb
xchg
lahf
ds
mov
push
das
mov
and
pop
mov
js
mov
add
or
adc
inc
xor
push
pop
fistpll
roll
inc
addr16
cmp
mov
cwtl
push
adc
jg
sti
sbb
inc
push
push
je
imul
daa
mov
in
mov
je
mov
jnp
mov
push
add
cmpsl
pop
in
mov
push
das
enter
test
aas
sbb
jg
and
pop
mov
roll
inc
rcll
lock
mov
nop
and
lods
mov
inc
aaa
cmp
inc
xchg
mov
mov
daa
jo
and
test
mov
cmp
popa
pushf
in
push
mov
in
in
aam
xchg
pop
scas
sete
jg
xor
ja
add
mov
add
mov
addb
pop
inc
mov
sub
dec
push
push
xor
xchg
adc
inc
mov
add
xchg
stc
push
mov
mov
adc
dec
mov
aam
in
sub
pop
sub
ret
nop
add
inc
sub
pop
or
test
cmpsl
fnstenv
push
xor
data16
scas
in
aas
mov
add
mov
mov
ds
mov
xor
ja
inc
pop
lret
outsb
or
pop
xcrypt-cfb
cmpsl
out
insb
sbb
push
movsb
rolb
movsb
inc
lahf
idivb
int
inc
fdivl
dec
push
mov
jns
jg
dec
cs
dec
push
cmp
pop
rcl
push
dec
aaa
jl
ds
repz
push
push
cwtl
mov
sbb
cltd
test
push
mov
pop
cmpsl
fs
pop
inc
pop
in
jge
out
push
cwtl
pop
aas
inc
popa
xchg
adc
jl
pop
xchg
dec
jmp
lods
push
push
push
cmpl
jns
jp
and
mov
clc
and
push
xchg
push
pop
mov
cmpsl
cmp
jmp
xchg
mov
ds
fiadds
lcall
cmp
outsb
push
mov
mov
cmpsl
jge
push
push
or
push
pushf
add
jbe
fwait
dec
repz
cmp
enter
cmpsb
lock
test
mov
push
hlt
mov
call
ss
sub
mov
data16
cld
push
hlt
lret
ds
into
iret
sti
data16
cmpsl
push
movsb
rorb
inc
and
jo
mov
adc
in
fcmovne
fucomip
loopne
push
rorl
das
test
scas
ficoml
cmpl
scas
dec
sub
cwtl
add
divl
sub
push
push
push
mov
mov
cwtl
ds
js
adc
xchg
add
dec
test
cwtl
pop
sub
pop
cmpsb
or
enter
cltd
dec
js
lock
es
xchg
lcall
es
daa
punpckhdq
mov
dec
out
outsl
add
ss
mov
je
inc
pop
push
rorb
mov
xchg
or
inc
and
mov
pop
mov
in
repz
cwtl
lock
fcomps
call
add
inc
mov
pmulhuw
jbe
dec
psadbw
in
aam
cmp
pop
dec
in
imul
hlt
push
pop
lods
xlat
in
push
adc
pop
enter
pop
movhps
negl
pop
addr16
stos
out
test
sbb
dec
mov
xor
test
cmp
call
fwait
lret
push
int3
add
les
stc
fadds
call
mov
rolb
and
ds
xlat
mov
mov
ret
push
add
and
push
pop
cmp
outsl
lahf
mov
nop
push
mov
push
outsl
push
xor
subl
adc
cmp
sbb
push
fcompl
addl
cmpsl
push
xchg
cmpsb
test
add
and
sub
aaa
cwtl
push
rclb
insb
ds
and
push
pop
insb
dec
or
add
lfs
clc
push
mov
mov
add
adc
loopne
inc
aam
xchg
cmp
mov
sub
mov
rcrl
sbb
out
loopne
sbb
pop
pop
jl
pop
push
clts
in
in
movsl
sub
push
pusha
addr16
loopne
dec
rclb
lock
or
push
pop
fnstcw
jo
movaps
pop
xchg
fwait
ret
dec
mov
xchg
int3
mov
fidivl
imul
dec
lcall
lcall
push
xchg
sahf
ss
data16
lahf
adc
rorb
imull
shlb
xor
add
pop
xor
mov
inc
test
pop
dec
test
dec
insb
mov
daa
adc
push
in
in
lock
outsb
adcl
insb
fs
fstpt
movsb
fcmovu
fstl
fistpl
or
daa
dec
sub
pop
les
fmul
sub
scas
outsb
stos
mov
push
cmp
push
or
add
unpcklps
sub
addb
inc
add
nop
push
add
mov
pop
dec
add
mov
inc
xor
ror
adc
rorb
push
and
outsl
pop
push
dec
push
adcb
adc
inc
iret
repz
pushf
es
aaa
push
xorb
lcall
xor
cmpsl
stc
cmp
add
test
movsb
fsubp
imul
jo
ds
in
pusha
sar
inc
inc
push
aam
sarl
inc
pop
aam
xor
push
push
iret
add
sbb
push
hlt
ss
int
imul
enter
cmp
fldcw
js
jle
cmp
out
fstps
in
pop
jg
test
mov
cld
push
enter
pop
andl
sbb
jmp
mov
mov
add
jg
subb
pop
inc
subl
stc
cmp
sbb
cmpb
cltd
cld
mov
test
mov
scas
inc
shlb
push
mov
jnp
iret
in
push
pop
out
cmp
sub
iret
dec
sbb
mov
mov
repz
sbb
mov
push
push
call
push
dec
and
imul
and
mov
cmp
jl
ss
shrb
test
or
mov
sub
aaa
addr16
dec
std
hlt
fwait
int
mov
push
dec
lea
mov
xchg
dec
repz
xchg
jl
insl
dec
push
rclb
outsb
int3
fistpll
mov
test
dec
mov
insb
loopne
pushf
stos
adc
aam
arpl
jns
mov
hlt
nop
dec
pop
repz
inc
sbb
jns
out
xchg
push
insb
and
addr16
fldenv
mov
pop
or
out
pop
jo
js
imull
sbb
in
and
data16
cmpsb
pop
mov
and
pop
sbb
iret
repz
sub
imul
xlat
jns
pop
dec
push
nop
test
lods
pop
adc
sbb
insb
ss
mov
movq
mov
push
call
mov
into
ds
imul
shlb
mov
movsbl
xor
shll
lds
mov
int
leave
and
push
in
push
int3
cmpsb
push
imul
cmp
mov
iret
in
ds
repz
mov
add
lock
jl
mov
outsb
xchg
aam
aad
push
sub
pop
jae
adc
mov
sarl
pop
test
or
mov
cmp
mov
stc
adc
and
inc
cmp
jge
adc
inc
cmp
lea
inc
jnp
sbb
es
fcoml
add
les
inc
cmc
xchg
cmp
mov
out
push
inc
push
dec
cwtl
push
mov
clc
out
ljmp
or
pop
mov
lock
xor
push
repz
jns
dec
repnz
in
repz
dec
push
and
fcompp
add
mov
adc
insb
aas
dec
inc
lock
and
sahf
in
sar
push
daa
push
pusha
sub
and
push
xor
insb
mov
ss
clc
test
inc
lock
jecxz
andnps
adc
push
xchg
mov
rorb
sbb
outsl
cmp
push
jg
addl
add
rclb
fists
mov
pop
push
dec
jno
jo
ja
inc
sub
xchg
movl
call
push
loopne
cmpsl
fcmovb
fildl
insb
lahf
xchg
mov
xlat
sbbb
loopne
movaps
add
inc
cmp
push
jo
out
mov
push
adc
push
jbe
and
daa
pop
inc
push
adc
jge
mov
and
pop
inc
outsb
inc
and
cs
rolb
and
pop
into
sarl
mov
dec
cmp
test
xchg
add
filds
and
jge
sub
mov
insl
add
sub
xorps
cltd
push
divb
sbb
sar
and
mov
and
and
mov
sbb
and
sub
les
or
scas
sbb
jmp
or
or
jbe
mov
imul
xchg
fcoml
dec
repz
xchg
mov
pushf
nop
sahf
fwait
int
flds
js
mov
mov
clc
xor
mov
jl
dec
mov
je
aas
lods
push
in
pop
dec
repz
sbb
push
xlat
nop
adc
daa
jl
inc
mov
orl
adc
xor
decl
mov
jns
in
aaa
adc
sbb
or
rcr
imul
xor
dec
jo
int
mov
in
rclb
xchg
inc
xchg
bound
std
ds
dec
pusha
flds
inc
aad
push
test
jle
shlb
jne
pop
sbb
dec
and
addr16
flds
inc
sbb
and
subb
push
jp
andb
mov
js
hlt
push
test
loope
lods
imul
les
mov
mov
sub
cmpsb
mov
test
rclb
xchg
aas
sbb
mov
push
push
daa
pop
call
adc
js
xor
fldlg2
pop
mov
pop
sbb
pusha
xchg
push
mov
sbb
or
push
push
xchg
aam
cltd
fs
cltd
popf
jge
cltd
inc
adc
and
idivb
fwait
mov
pop
pushf
aaa
mov
aam
ljmp
das
add
int3
add
add
test
pop
ret
mov
jg
mov
mov
adc
fstpl
mov
adc
filds
dec
mov
inc
jnp
fisttpl
les
inc
dec
pop
push
cwtl
pop
fcoms
pop
and
cmp
xchg
in
fwait
pop
pop
je
nop
mov
repnz
aam
or
sub
jb
dec
fs
dec
dec
dec
outsb
dec
test
in
lds
rclb
in
or
push
push
push
es
mov
push
push
push
pushf
sub
pop
push
pop
into
repz
inc
shr
daa
in
fnsave
test
jg
pop
aaa
pop
js
xchg
push
nop
mov
movl
es
or
push
shlb
mov
push
push
loopne
insl
push
adc
mov
mov
pop
int3
mov
adc
push
xor
pop
js
sub
adc
push
gs
dec
xorl
aas
in
mov
lahf
divb
pushw
dec
cwtl
push
push
lahf
xchg
int
in
or
push
insb
les
mov
aaa
fsubl
inc
ret
mull
test
test
ds
sarb
call
push
push
adc
inc
mov
mov
push
inc
movhps
addr16
adc
pop
loope
add
add
push
add
cmpsl
repz
ret
pusha
xchg
sub
inc
loopne
xor
iret
clc
in
and
fdivs
rorl
cmpsl
lock
je
sahf
cmpsl
mov
ja
xchg
enter
sarl
mov
xor
mov
jns
data16
hlt
jg
andb
imul
mov
nop
mov
or
xchg
negb
jns
iret
rorb
xchg
int3
cmp
pop
adcb
jl
pop
add
aas
add
lcall
mov
movsb
lahf
push
imull
mov
test
mov
negb
mov
add
imul
add
pop
movsb
repz
sub
pusha
add
jl
or
adc
push
adc
into
mov
sbb
push
push
repz
int
es
push
insb
sub
mov
movsb
sub
int3
push
jl
push
push
cmpsl
flds
xor
loopne
lods
dec
push
loop
and
fldcw
push
sub
mov
sub
enter
outsb
jo
cmpsl
stc
sahf
inc
push
aam
adc
inc
push
popf
fcoms
push
add
aas
push
out
das
hlt
adc
push
test
sub
inc
mov
insl
push
lods
sbb
sub
xchg
push
aas
pop
and
pop
pop
adc
aas
dec
push
outsb
nop
push
sub
das
in
push
pop
sub
in
rolb
filds
push
lret
fsubs
es
push
fs
pop
out
and
xlat
mov
fs
in
pop
mov
ret
fsubrl
scas
sahf
mov
mov
addr16
mov
xchg
lcall
push
add
sbb
dec
repz
cmp
lahf
out
nop
test
sbb
push
jns
iret
inc
xlat
push
add
outsb
and
push
movsl
js
lahf
out
push
aam
inc
fmull
xor
into
shrl
cwtl
aam
mov
outsl
jbe
dec
pop
pusha
push
test
sbb
fmuls
cmp
push
insb
push
push
push
call
rclb
cmp
push
notb
ror
mov
pop
dec
pop
push
je
pop
lock
idivb
fcomps
pop
data16
mov
mov
add
xor
add
cli
hlt
pop
or
mov
dec
jne
daa
jne
or
push
mov
clc
addr16
bound
pop
ds
test
je
pop
push
add
push
cmp
inc
popf
pandn
push
jl
inc
test
inc
and
call
stc
cmp
add
push
and
adc
dec
cmp
jge
mov
xchg
sarb
repz
addb
movb
movsb
push
clc
movups
ds
in
mov
adc
push
nop
dec
push
mov
imul
and
fwait
adcb
pushf
jge
out
xchg
in
cmp
push
pop
xchg
das
fsubl
pop
pop
and
fsubs
lock
in
test
or
dec
inc
dec
dec
cmpsb
or
enter
add
adc
pop
push
pop
adc
test
sub
outsb
jbe
fiadds
or
dec
adc
shl
push
push
push
jae
jo
addl
dec
mov
insb
jo
pop
push
jbe
or
subb
bound
xor
or
xor
dec
dec
cmc
add
or
xor
into
xor
sub
ja
es
add
lods
jge
loope
sbb
or
adc
lods
insb
das
shlb
and
adc
movsb
fs
and
and
insb
outsb
add
es
or
test
or
push
verr
or
adc
pop
mov
push
popa
pop
jbe
cmpsb
test
or
loope
and
sub
xor
mov
addb
jp
push
sbb
sub
sbb
lds
or
adc
jge
out
lds
add
in
adc
inc
sbb
sbb
imul
cmpsl
jae
shlb
lahf
jae
push
and
test
xorb
cmp
xchg
rorl
pop
sbb
and
and
adc
jg
inc
add
mov
and
test
and
orl
add
and
xchg
dec
subl
mov
pop
xlat
add
or
pusha
arpl
mov
shrl
insl
jae
insl
insb
push
in
lds
or
push
push
arpl
push
lahf
pop
push
push
pop
push
add
and
stc
adc
and
dec
incl
push
js
push
movl
mov
in
inc
ja
mov
cmp
mov
cmp
xlat
jns
mov
push
jo
inc
popa
push
adc
sbb
cmp
subl
jo
or
mov
dec
xor
push
popa
sbb
and
jl
das
xchg
rol
fdivl
mov
rorl
shlb
test
lret
sub
mov
add
jo
or
mov
push
jno
pop
and
adc
fadds
mov
loopne
mov
or
fistl
cli
mov
les
mov
aaa
pushf
bound
lock
add
fcomp
inc
add
insl
inc
jo
je
sbb
or
sub
andl
mov
push
mov
adc
lds
mov
adc
js
and
dec
push
ss
jns
inc
or
inc
adc
dec
xchg
jne
cmpsb
inc
add
sti
fidivs
jno
popf
fcomps
adc
and
jnp
sbb
outsw
pop
or
scas
and
dec
mov
inc
rcll
xchg
sub
std
fwait
mov
data16
sub
jae
dec
sbb
add
pop
test
push
push
mov
push
rorb
insb
pop
xchg
cmp
fsubl
jns
or
ret
push
imul
mov
adc
dec
es
sbb
mov
pop
mov
inc
addr16
mov
or
push
adcl
or
xor
push
ja
pop
and
pop
push
inc
pop
adcl
mov
or
fistpl
lcall
jae
xchg
jnp
sahf
aaa
inc
in
jo
sub
outsl
cmc
jae
sub
mov
adc
lahf
les
cmp
sub
fwait
pop
aaa
sub
xchg
jne
ret
pop
or
or
jle
inc
subl
dec
inc
pushf
in
movsb
xor
xor
sbbl
ss
imul
add
in
out
cmpsl
frstor
and
inc
jne
clc
pushw
pusha
cmpsl
cmp
ds
adc
mov
movsb
jns
push
fsubl
inc
int3
mov
out
xlat
aam
mov
add
movsb
mov
xchg
insl
push
push
inc
int3
jae
mov
and
dec
je
mov
les
dec
jb
pop
pop
cld
mov
inc
outsl
fs
jl
enter
into
int3
pop
mov
push
aaa
mov
pop
jnp
pop
fldenv
je
inc
int3
adc
cmpb
inc
and
add
dec
cli
xlat
or
call
sbb
idivl
cltd
shrb
fcoml
mov
pop
js
cmp
nop
test
xchg
movsl
fwait
pop
mov
push
das
data16
fwait
in
pop
xchg
test
cwtl
inc
out
add
jns
add
lahf
negl
xchg
mov
mov
cmp
adc
fwait
mov
adc
clc
mov
inc
and
outsl
div
sbb
nop
dec
mov
clc
repnz
pop
cld
in
xor
xor
ret
xchg
adc
mov
lret
jp
adc
or
dec
jns
cmpsl
loopne
mov
mov
gs
rcrb
movsl
mov
pop
insb
add
and
nop
dec
enter
int3
out
add
andb
pushf
mov
out
rolb
aaa
or
out
call
add
cld
inc
fcmovb
mov
inc
adc
adc
mov
iret
or
inc
sub
and
movsb
dec
mov
dec
hlt
jmp
lret
cmp
sahf
imull
add
sub
sub
daa
dec
mov
add
lods
sub
lahf
mov
add
sub
push
pop
in
mov
pop
and
cmp
add
enter
aad
lea
xor
lcall
enter
adc
add
add
add
daa
dec
push
pop
adc
adc
cmp
repnz
or
or
or
or
sbb
push
mov
jns
in
and
and
adc
adc
dec
sahf
cmp
adc
xor
in
xchg
sbb
sbb
sbb
cmp
cmp
sbb
sahf
mov
inc
cmp
ds
enter
jl
clc
mov
mov
push
pusha
js
xchg
div
nop
inc
push
cmp
hlt
hlt
inc
push
sbb
hlt
push
sbb
hlt
hlt
hlt
sbb
hlt
hlt
hlt
fs
inc
push
hlt
hlt
hlt
nop
inc
push
sbb
hlt
hlt
inc
push
sbb
hlt
push
sbb
hlt
hlt
hlt
sbb
hlt
hlt
hlt
fs
inc
push
hlt
hlt
hlt
in
xchg
fists
inc
sub
cmp
cmp
ds
aas
dec
pop
or
sub
mov
fldl
cmp
stos
pushf
lock
adc
push
aas
test
cld
sahf
or
mov
daa
add
mov
insl
ja
lahf
pop
daa
mov
inc
lock
cmovs
ret
in
outsl
push
inc
cmp
pushf
mov
test
push
and
movsb
xor
pushf
pop
pusha
or
sbb
mov
xorb
test
dec
mov
jbe
adc
inc
movsb
and
xchg
inc
dec
mov
adc
test
out
insb
mov
cmpb
in
rcll
movsl
es
movsl
or
ret
nop
mulb
icebp
mov
rcr
sub
mov
insb
jecxz
or
cmpsl
inc
add
test
hlt
insl
out
nop
adc
mov
sbb
push
imul
jb
jae
stc
jbe
inc
adc
adc
fsub
dec
push
adc
pop
add
adc
xor
jl
xchg
aas
adc
mov
movsb
and
mov
adcl
push
out
test
mov
mov
sub
inc
push
dec
pop
jl
imul
outsb
cmovg
out
das
jl
xor
pop
jl
xor
mov
sbb
sbb
add
and
and
sub
add
and
xor
adc
dec
ret
orl
movaps
hlt
xchg
outsl
pop
clc
orb
sbb
mov
adc
mov
push
xchg
loope
pop
mov
das
inc
call
push
cwtl
or
mov
mov
ja
mov
xchg
loope
xorl
or
push
jg
daa
push
or
mov
pop
loop
dec
pop
call
mov
bound
mov
arpl
hlt
outsl
ret
lock
stc
das
mov
and
inc
sub
cmp
mov
aad
jl
or
lahf
adc
loop
outsl
repnz
int
and
jns
fucomp
jns
mov
mov
lods
dec
xchg
xor
test
out
sbb
ja
jb
push
cmp
inc
dec
aad
dec
mov
lods
inc
mov
in
mov
add
movl
lock
das
mov
pop
adc
mov
test
sub
mov
adc
pushf
enter
push
popa
loop
pop
pusha
jmp
jecxz
aad
xor
mov
nop
ror
sti
iret
in
mov
add
or
mov
mov
data16
repz
ja
fsubrp
pop
push
adc
es
cmp
int3
js
je
xchg
enter
test
enter
cwtl
jb
and
and
out
sbb
lods
mov
mov
fdivrl
xchg
iret
les
and
int3
and
fadds
loopne
call
in
lock
pop
hlt
jecxz
or
cld
lahf
push
mov
ret
push
mov
aas
or
sub
pop
jne
mov
xor
in
and
adc
add
fldt
adc
mov
jl
push
fbld
sub
adc
pusha
xchg
or
and
sahf
and
add
ljmp
cli
cmp
sbb
pop
jmp
je
and
xchg
mov
nop
lock
push
xor
dec
push
nop
and
sarb
xchg
mov
pop
out
mov
or
je
fwait
xchg
adc
mov
imul
mov
or
pop
jb
and
adc
lret
push
iret
in
push
leave
mov
inc
mov
push
cmp
mov
out
mov
dec
pop
mov
push
mov
xchg
xchg
daa
add
sub
out
dec
xchg
les
test
shlb
imul
ds
pop
sub
mov
sub
leave
xchg
sub
int
ret
xlat
ret
pop
data16
or
arpl
popf
push
mov
aam
xchg
notl
adc
fsubrs
pop
fldcw
or
dec
inc
sub
or
or
adc
repz
adc
jnp
inc
mov
xor
jbe
xlat
call
repnz
test
aaa
in
sbb
hlt
daa
mov
daa
xchg
cmp
clc
cld
or
jl
sub
cmc
inc
cmc
push
pop
sarb
xor
xchg
inc
pop
or
xorb
and
stc
in
push
sub
xchg
sub
lahf
adc
xor
cwtl
adc
push
mov
inc
inc
cmp
test
push
mov
cs
adc
xchg
inc
call
int3
lcall
lock
adc
clc
mov
adc
shl
movsb
mov
fs
mov
lock
mov
push
inc
in
movsl
mov
xchg
lock
xchg
js
dec
add
mov
rcr
insl
xor
push
pop
inc
adc
mov
movsb
or
inc
mov
cmp
adc
mov
add
push
push
jae
jns
loope
dec
cld
sub
gs
sub
or
cmp
push
dec
push
out
ret
xchg
es
shlb
pop
or
push
es
je
daa
inc
or
inc
and
cmpsb
out
out
fdivs
xor
pcmpeqw
sbb
and
out
adc
add
add
movlps
mov
mov
cmpsl
cmp
add
adc
jns
pop
xchg
cmp
cs
addr16
or
or
subl
dec
sbb
dec
pop
inc
xchg
test
and
and
dec
dec
pop
ficoms
shrl
test
nop
inc
xor
testl
test
lock
mov
dec
ss
sub
lea
arpl
dec
mov
cmpsb
xor
xchg
pop
jae
gs
mov
sbb
push
mov
stos
or
rep
addr16
add
push
add
sbbb
repz
les
sbb
lods
scas
xor
scas
les
scas
in
mov
add
or
je
movsb
push
js
or
pop
movb
mov
xchg
mov
lret
shll
decl
adc
lock
mov
aas
shr
jmp
sub
sbb
cmp
orb
das
lret
ds
jmp
ljmp
call
ds
pop
mov
mov
pop
pop
lahf
push
pop
bound
push
xchg
push
shl
repz
les
cmp
xchg
lret
in
mov
cwtl
test
mov
mov
pushf
jle
incb
mov
mov
in
xor
sbb
pop
add
xchg
push
ficomps
leave
xorb
push
clc
out
dec
and
jae
jne
sub
jmp
roll
pusha
rolb
rorl
into
inc
jbe
loope
mov
or
int3
push
sub
adc
clc
mov
cltd
xchg
nop
in
inc
adc
arpl
movaps
dec
repz
add
jbe
cmp
push
mov
dec
inc
call
sti
call
mov
mov
stos
mov
loop
or
cmp
and
jl
dec
inc
out
or
lahf
and
call
push
lcall
add
loope
push
xor
stos
or
add
lahf
xchg
out
xor
add
stos
inc
add
fisubs
into
movsb
cmpb
jne
xchg
sub
mov
mov
loopne
sub
inc
nop
pop
push
lahf
push
push
sub
adc
or
xchg
mov
inc
enter
lret
adc
aam
hlt
inc
sub
inc
lret
adc
inc
dec
je
roll
mov
push
and
push
add
and
push
inc
dec
inc
lahf
cs
mov
mov
rcl
and
adc
mov
add
inc
jb
pop
and
pop
and
leave
inc
pusha
sub
or
mov
jg
inc
mov
adc
dec
cs
mov
dec
shlb
mov
ja
add
jns
pop
mov
shlb
xchg
mov
lock
dec
and
pusha
add
jns
push
adc
daa
xchg
pop
leave
rolb
dec
and
or
das
push
xor
xchg
xor
aaa
ljmp
jl
mov
leave
xlat
iret
enter
fcomp
fsts
loopne
jecxz
in
jmp
in
movups
ret
ja
sub
add
and
pusha
pop
add
xchg
inc
stos
lcall
sbb
add
int
pop
ret
out
push
add
adc
repz
repz
sub
inc
iret
repz
cmp
pop
pop
push
add
cmp
jge
or
jae
repz
scas
push
repz
scas
push
loopne
push
in
pop
dec
jnp
sahf
decl
add
or
adc
jnp
cmp
xor
dec
aas
cmp
xchg
cmpsb
adc
push
insb
das
push
js
cmp
push
xchg
pop
sbb
cmpsb
jnp
movsb
push
mov
and
out
sub
push
int3
pop
and
push
call
mov
push
clc
sub
xchg
xor
rclb
fisubrs
insb
xchg
and
jo
jo
je
dec
ret
sarb
sub
fidivrs
into
js
js
loope
popa
js,pn
fistpll
outsb
movsb
popa
push
jl
movq
ret
fildll
push
and
sub
mov
jl
clc
jg
lea
or
dec
dec
rolb
or
inc
scas
les
sub
inc
xchg
movsb
xor
add
push
nop
out
insb
mov
push
sub
xchg
mov
mov
mov
xor
insb
mov
imulb
int3
add
ss
xor
add
nop
xchg
sbb
inc
out
add
add
pushf
pushf
pushf
pushf
add
push
pop
pushf
pushf
pushf
pushf
or
or
ja
test
daa
daa
daa
movups
adc
pop
and
adc
add
push
or
das
stos
xlat
cmp
push
lock
inc
pop
inc
loop
push
test
andb
iret
bound
shrb
push
add
pop
inc
and
push
scas
aas
adc
es
and
sahf
out
aad
movsb
push
lods
mov
out
sahf
out
aam
in
iret
sarl
cld
add
or
sbb
iret
repz
sub
cmp
repz
repz
push
pop
fs
iret
repz
je
test
cmp
lods
mov
leave
in
test
fs
jns
leave
push
inc
inc
mov
in
mov
sbb
pop
add
inc
imul
mov
add
and
loope
sbb
jbe
adc
xchg
or
pop
jo
pop
add
insb
popa
add
mov
mov
imul
add
add
add
shlb
or
add
cs
mov
das
pop
popl
or
div
fdivl
add
or
or
or
sbb
or
add
jl
out
add
sbb
sub
jl
cmpsl
stc
cmp
mov
in
or
and
out
sahf
cmp
mov
jp
roll
pop
xor
sub
push
outsb
push
nop
test
jge
filds
add
lcall
pusha
addl
leave
lcall
je
int3
out
add
lret
xchg
adc
push
cmp
dec
decl
jle
icebp
or
cld
mov
jmp
nop
fs
jecxz
cli
jl
aas
jno
inc
mov
pop
scas
ljmp
bound
dec
mov
mov
push
xor
cmp
jmp
sbb
mov
jmp
dec
jge
dec
pushf
sbbb
aam
mov
push
jp
inc
inc
xchg
imul
lds
cmp
decl
ret
dec
decb
test
push
pop
vmread
mov
pushf
mov
add
xchg
js
test
sub
sarl
xor
xor
xlat
adc
or
hlt
or
xor
out
add
cmp
adc
mov
pop
and
jnp
imul
aas
push
in
rolb
jae
mov
pushf
push
shrl
push
adc
push
in
mov
fcompl
jl
add
xor
jnp
push
aam
jle
lock
lret
imul
cmp
testl
push
add
or
add
mov
out
lcall
sbb
mov
fmuls
cmp
push
sbb
sbb
lahf
mov
jns
or
repz
out
or
add
iret
repz
mov
les
pop
push
push
add
sbb
and
push
out
cmp
or
and
jns
mov
faddl
sarl
or
push
out
lcall
dec
sahf
out
sahf
orb
mov
pop
movsb
mov
mov
insb
mov
ds
repz
mov
jns
out
fidivs
cwtl
mov
jo
dec
scas
pop
maxps
mov
xchg
push
sbbl
out
and
imul
sub
and
sbb
push
pop
and
sub
or
into
or
fs
or
cmovle
push
sti
aas
add
add
adc
sbb
adc
in
adcb
sbb
push
arpl
jae
call
pop
rcll
or
or
aas
es
push
std
out
sahf
out
cld
mov
jns
stc
cld
clc
sbb
testl
pusha
cmc
xor
cmp
rep
repz
out
lcall
out
sahf
out
sahf
inc
out
fs
jl
outsl
out
mov
decl
ljmp
ret
mov
sbb
xchg
xchg
add
push
sub
aaa
popa
mov
popa
pop
addb
push
lcall
pop
lds
xchg
out
mov
outsb
sbb
xor
sub
or
xchg
mov
xor
cli
ret
or
mov
add
cmp
jnp
mov
mov
repz
cld
or
and
jns
out
cmp
sahf
out
sahf
js
mov
int
jns
in
add
sbb
sbb
add
adc
aaa
mov
cmp
mull
fidivrl
cwtl
inc
dec
adc
adc
push
inc
xchg
pop
cmpsl
or
add
xor
or
outsb
pop
rcl
outsl
inc
add
add
dec
mov
add
xchg
pop
add
add
aad
insl
ret
lahf
pop
das
push
in
cwtl
subb
sub
add
xchg
cmpsl
xchg
cmp
add
adc
lret
outsl
mov
roll
xlat
loope
xor
fsub
or
or
pop
cmp
add
cli
cli
movsb
popf
call
lock
cmc
sar
out
xchg
push
std
cmc
out
dec
repnz
jl
xor
faddl
xchg
cmc
cmc
mov
stc
cli
jmp
add
fidivs
clc
pop
sti
cmp
cmp
clc
pusha
out
scas
mov
push
fisttpl
mov
mov
out
aad
aas
out
dec
pop
arpl
fisubrs
add
mov
dec
push
push
push
mov
cmp
decb
fdivp
out
dec
rcrl
xchg
jmp
imul
ftst
les
fidivrl
mov
fildll
dec
daa
xchg
jbe
mov
cmp
popa
mov
push
lock
int
pop
add
cli
xorb
popf
or
pmovmskb
packsswb
dec
cmc
mov
outsb
push
fcoml
push
push
movsl
sub
add
fbld
push
dec
push
hlt
movsb
xor
addr16
mov
fiadds
inc
push
lock
in
ja
xchg
cmovne
push
mov
and
push
mov
add
jle
fwait
push
push
int
aas
mov
push
jmp
mov
out
call
pushf
cs
cmp
pop
imul
push
and
ljmp
add
push
lock
nop
out
nop
out
push
aam
mov
cmpsb
push
fisubl
pusha
mov
jl
mov
in
jo
and
dec
lcall
push
jl
mov
scas
push
clc
or
data16
mov
cmp
jno
push
mov
xor
scas
push
mov
push
imul
mull
orb
mov
xor
rcrb
or
movq
xlat
adc
mov
push
and
das
pop
scas
out
cs
push
loopne
xor
lods
fsub
pushf
std
in
addr16
xchg
cli
decb
fs
in
out
or
int3
dec
decb
dec
or
xor
int3
add
push
inc
loopne
outsb
push
test
pop
mov
pushf
push
mov
jle
outsl
jmp
scas
call
imul
cmp
dec
inc
jl
sbb
push
pop
into
rorl
shll
mov
clc
stc
lcall
inc
push
push
nop
jo
sbb
mov
mov
aaa
repnz
lock
cltd
xor
or
out
push
test
cli
mov
adc
addr16
jae
jo
push
mov
loop
push
mov
jge
int3
or
push
test
call
test
mov
add
out
subb
cmp
jle
fidivl
push
je
frstor
clc
push
fdivrs
imul
push
mov
fiadds
aam
push
and
push
fs
sarl
cmp
les
inc
andb
scas
jle
push
push
adc
jo
xchg
cmpl
push
push
xchg
push
cmpsl
push
jnp
imul
fs
dec
cmp
xchg
cmp
push
faddl
mov
insl
or
inc
lea
xchg
iret
rcrl
cld
or
and
cltd
xor
insb
bound
jl
xbegin
mov
int3
add
add
aaa
jns
negl
push
mov
int3
out
sahf
out
fsub
in
mov
hlt
shr
rolb
in
iret
repz
adc
sub
pusha
je
addl
push
ja
dec
or
push
mov
pusha
pop
mov
std
jle
adc
aas
adc
cmpsb
sbb
subb
mov
addr16
jb
movsb
push
pop
pop
add
jns
mov
jg
xchg
mov
jns
out
mov
sti
cld
repz
sahf
mov
pop
incb
test
cmp
addb
or
lcall
hlt
filds
movsb
cli
retw
add
ljmp
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
lcall
jmp
rclb
mov
sub
mov
sbb
decl
mov
test
ficompl
jmp
mov
hlt
movl
imul
jp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
call
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
incl
popa
sarb
and
mov
cltd
xchg
mov
mov
or
pushl
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
or
or
mov
cmp
cmc
call
pop
arpl
hlt
push
imul
fdivs
test
jg
xor
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
cld
call
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
fwait
ss
cmp
loop
mov
dec
xlat
xchg
fadd
sar
jmp
jmp
outsb
xor
mov
sarb
add
in
add
pop
dec
or
ljmp
cmp
add
daa
adc
or
and
test
or
data16
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
pushl
and
mov
add
inc
aad
scas
ja
popf
adc
incl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
ljmp
jge
xchg
shlb
add
inc
push
imul
jmp
jno
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
push
inc
mov
test
jle
call
mov
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
cmp
jmp
mov
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
ljmp
insl
js
xchg
adc
mov
jnp
sbb
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
ljmp
cli
call
lcall
clc
sar
imul
push
js
or
push
cmp
incl
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
pushl
and
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
ljmp
xchg
sub
aaa
mov
or
sbb
add
sub
inc
out
push
or
push
mov
nop
mov
sub
adc
lock
mov
repz
std
stos
xor
repnz
push
div
js
inc
pop
popf
and
in
push
lods
or
sub
adc
popf
push
and
lock
insl
jl
sar
or
mov
pop
dec
xlat
add
push
add
dec
jae
imul
addr16
dec
dec
gs
mov
dec
xor
jne
cmp
pusha
add
jo
aas
js
movsb
push
or
and
ja
daa
mov
pop
mov
mov
lret
je
add
bound
outsl
imul
jo
imul
pop
mov
outsb
xchg
pusha
push
jp
cs
data16
push
jae
into
lods
or
add
xor
and
jno
gs
in
adc
fs
insl
sbb
mov
sbb
enter
ljmp
das
mov
rcr
or
lds
adc
add
fs
stos
add
sbb
test
pop
add
mov
add
pop
adc
mov
jb
jbe
lea
mov
push
xor
dec
pusha
andb
enter
adc
add
icebp
or
incl
push
inc
mov
push
add
adc
dec
sahf
stos
add
jno
jae
sti
mov
jne
pusha
add
xor
movsl
cs
and
jo
adcl
cwtl
add
dec
jmp
jns
or
idiv
das
xchg
jae
adc
pop
and
cmpsl
sbb
adc
sub
or
fisubl
add
add
adc
outsl
decl
push
ja
add
sub
add
add
adc
cli
and
mov
jo
adc
test
sub
sub
pop
mov
mov
fcoms
inc
stos
decl
mov
lcall
cmp
sub
insb
call
sbb
mov
adc
pop
adc
and
adc
and
add
or
inc
push
adc
and
cmp
xor
insb
pop
and
das
fcom
js
inc
adc
sbb
test
jb
add
mov
adc
add
sub
inc
sbb
xchg
popa
cmp
sub
ficompl
pushf
add
cwtl
dec
fiaddl
or
je
out
adc
or
enter
adcb
push
sbb
and
outsb
test
sbb
sub
das
clc
das
mov
jb
test
dec
jge
dec
pop
inc
add
adc
jb
call
or
xchg
cmp
adc
out
add
inc
mov
pop
les
cmpsb
and
lcall
push
cld
inc
dec
inc
ret
adc
fsubs
call
and
daa
xchg
push
jbe,pn
pop
cld
addr16
sub
out
adc
add
and
or
sbb
add
add
push
in
add
insb
stos
movb
jmp
add
inc
popa
nop
push
sbb
pop
dec
fcomip
mov
repnz
mov
cmp
pop
decl
lret
cmp
adc
xor
cmp
adc
lcall
and
in
mov
adc
add
add
inc
and
fadds
add
jb
xor
push
or
dec
push
popa
jne,pt
movsb
jg
sub
lea
add
movlps
push
sbb
pop
hlt
in
pop
subl
push
inc
loopne
add
jbe
fistps
mov
push
subb
push
and
add
lcall
xchg
sbb
jno
xchg
inc
shll
pop
jecxz
push
add
in
decl
push
push
test
xchg
popf
or
lea
popf
inc
cwtl
sbb
dec
push
sbb
clc
push
fcmovb
push
faddl
pop
push
xor
sbb
push
cld
adc
and
inc
mov
pop
adc
lock
clc
call
xor
and
and
arpl
dec
cmp
or
das
fisubrl
adc
adcl
movsl
push
sahf
inc
or
adc
js
inc
inc
in
pushl
bound
add
stc
adc
xchg
add
sbb
in
add
add
adc
push
cld
push
pushl
rclb
cmp
jo
fbld
bound
enter
jg
fdivs
mov
jmp
inc
jp
mov
loopne
nop
dec
push
ret
jmp
lahf
add
insl
test
insb
jno
mov
pusha
pop
add
xchg
mov
mov
adc
inc
dec
or
jmp
mov
xor
cli
aaa
cld
pushl
int
fwait
addl
addr16
outsl
add
jae
pop
rclb
call
rclb
pushf
and
xchg
jg
mov
xlat
and
add
add
mov
adc
iret
int
lock
cld
xchg
rclb
pop
mov
int
es
popf
arpl
int3
addb
push
adc
mov
adc
pop
fisttpll
mov
sarl
jp
add
add
out
inc
xor
lcall
fwait
ljmp
dec
pop
mov
adc
xor
ljmp
xchg
xchg
in
pushf
loop
adc
aam
pop
pop
and
pushl
loopne
mov
xor
dec
mov
rclb
shll
incl
mov
add
jecxz
aaa
xor
outsb
shl
push
fwait
mov
outsb
scas
pop
jb
pop
jecxz
ljmp
lret
movsb
xchg
push
cs
add
push
insl
ljmp
push
add
jae
rcl
es
adc
cli
and
test
enter
sub
add
js
outsl
cli
mov
ds
dec
xchg
inc
inc
mov
add
sbb
dec
ljmp
jecxz
inc
push
leave
and
std
mov
and
call
cld
and
movsl
and
and
sub
mov
bound
cld
ja
and
xor
push
leave
jae
shlb
fs
sbb
pop
lods
and
fwait
cmp
adc
sahf
lds
or
data16
sbb
fidivs
jg
test
sbb
mov
or
in
sbb
push
imul
mov
shl
pop
cs
sbbb
cmpsl
or
xchg
lock
incl
push
and
sub
xor
mov
sbb
stos
fistps
push
shll
xchg
mov
jne
hlt
mov
fidivl
cmp
shr
mov
stos
jl
pop
inc
mov
adc
in
loopne
adc
push
dec
aam
sahf
repz
lock
add
pop
loopne
add
cmp
and
addr16
and
xchg
jmp
inc
jecxz
vsqrtps
add
lock
and
shl
sbbb
xchg
inc
hlt
push
call
sti
sub
cmpsb
jns
decl
jno
pop
stos
and
push
addr16
sbb
dec
push
mov
mov
fwait
sbb
insl
mov
dec
add
outsl
sti
test
cli
aaa
in
add
arpl
pop
inc
push
push
mov
add
das
fcmovbe
cld
and
pop
mov
pop
repnz
or
mov
pushl
mov
roll
in
ja
fdiv
add
or
sbb
xlat
or
adc
adc
mov
aad
adc
ljmp
xchg
xchg
out
fs
mov
jae
adcl
inc
jecxz
movsl
popa
or
les
jge
in
ljmp
std
pop
pop
cmp
xor
and
clc
mov
adc
xorb
cmp
retw
mov
incl
icebp
push
xlat
xchg
outsb
cltd
adc
push
addl
aaa
inc
jg
pop
and
or
mov
loope
pop
mov
icebp
insb
and
xorb
mov
mov
orl
out
fstl
and
inc
push
fcmovbe
mov
inc
imul
sti
das
adcb
and
adcb
rcl
roll
enter
call
icebp
dec
out
sbbl
pop
jge
add
jge
pop
pop
push
popf
cs
inc
nop
lock
insl
jb
pop
jo
and
mov
decl
ds
add
loopne
imul
xchg
cmpl
lock
xchg
mov
add
cwtl
mov
call
and
call
mov
inc
adc
rcrb
xchg
test
imul
mov
cmp
add
shlb
insb
ret
incl
loope
cmpsl
push
jno
ret
ljmp
mov
jnp
cpuid
addb
inc
inc
xchg
or
push
dec
sarl
and
adc
mov
inc
inc
lcall
les
add
jbe
dec
lods
mov
cs
push
les
inc
or
and
dec
or
mov
pop
aad
pop
dec
jbe
inc
push
loope
mov
rcrl
inc
and
push
mov
das
sar
mov
test
xchg
mov
test
push
push
xor
push
fwait
lods
stos
lods
mov
and
fwait
ss
add
push
cli
xchg
lcall
jecxz
sub
ret
adcw
js
xchg
push
hlt
outsl
clc
mov
push
addl
adc
pop
sub
lret
rclb
lods
cltd
jbe
dec
sub
call
push
push
addb
inc
sbb
adc
frstor
add
xor
ret
cmp
loope
mov
jns
or
or
test
mov
call
out
shll
jp
enter
ja
lock
decl
and
dec
xchg
and
inc
repnz
gs
movsl
popw
adc
xchg
jo
call
clc
or
push
add
jns
test
inc
jb
inc
xor
inc
mov
movups
faddl
repz
insl
fnstsw
cmp
dec
pop
and
lcall
cld
mov
lcall
jae
fs
xchg
xorl
stc
test
lcall
ja
pop
inc
sarb
adc
jo
enter
insl
cmc
cmp
fmul
cld
decl
adc
push
lds
push
inc
xchg
bound
dec
mov
inc
sub
push
lock
je
cmpl
adc
lock
mov
jge,pt
adc
push
sbb
stos
xchg
cli
add
pop
subb
decl
fdivl
lock
xor
in
sub
cmp
dec
pop
mov
jne
fbstp
jp
sar
rcrl
push
inc
stos
nop
and
add
dec
jmp
aaa
pop
les
cwtl
ja
adc
lock
outsl
fcomip
incl
jo
xor
add
enter
push
and
rolb
les
push
push
xor
cmpsl
xchg
fldt
xchg
testl
sub
aaa
lds
sub
shlb
and
leave
lcall
out
sub
sub
jb
inc
push
out
rcll
adc
sub
movsb
outsl
sbb
cld
pop
add
xor
jecxz
or
add
or
sub
lock
loope
rorl
cmp
in
popf
add
and
xchg
lret
dec
lock
add
aaa
add
jle
inc
adc
mov
cmp
jg
jg
jbe
mov
in
in
leave
xor
xor
push
and
jbe
inc
dec
scas
dec
push
sbb
arpl
test
sub
push
sbb
std
in
sbb
cmp
pop
fs
adc
arpl
movsb
xor
inc
test
std
pushl
push
pop
orl
xchg
inc
add
fisttpl
fdivl
mov
and
shll
pop
xchg
aaa
in
mov
ret
jmp
rcr
test
fisubl
cli
add
dec
pop
mov
loopne
call
or
sub
ret
xlat
mov
pop
and
gs
cmpl
push
mov
or
inc
jmp
dec
out
ja
push
loop
mov
int3
xchg
xchg
imul
cmpl
and
push
ja
push
mov
push
cmpl
mov
fsts
insl
xor
loopne
pop
nop
push
icebp
in
sub
sub
call
cld
nop
cld
fsts
adc
jmp
jno
add
testl
cli
ljmp
xchg
add
outsb
xor
mov
insl
cmp
mov
nop
lcall
jae
mov
loop
je
and
and
fcmovnu
lock
jge
jne
xor
lret
mov
or
jmp
cmpsb
add
adc
add
inc
and
cmpsl
ds
incl
addl
pop
lds
fwait
inc
xchg
pop
nop
es
in
push
mov
adc
push
add
fcomp
shrl
test
xor
incl
adc
xchg
fisubl
adcl
xor
mov
jmp
push
dec
or
xor
icebp
ret
inc
mov
fs
add
cli
inc
sub
cmc
push
jle
ss
add
rorl
outsl
clc
cmpl
add
test
mov
cmp
and
and
je
mov
in
xor
inc
xchg
adc
stc
cld
and
pop
in
add
in
inc
cltd
fbstp
add
ljmp
mov
in
mov
mov
je
add
dec
and
pop
cmpb
mov
and
or
or
or
inc
fisubs
xor
in
push
decb
fistl
xor
mov
push
add
imul
mov
xchg
sbb
add
lods
mov
push
xchg
push
xor
push
andl
cwtl
inc
roll
jo
rolb
stos
and
xacquire
popa
sub
int3
jno
adc
mov
or
xchg
xor
insl
scas
sbb
cmp
mov
daa
mov
sub
fistl
pop
insb
push
add
lahf
addb
add
push
cmp
pusha
imul
cmpsl
push
push
addl
test
fadds
add
pop
add
or
or
ficomps
adc
sbb
sbb
neg
mov
adc
sub
dec
cmp
inc
push
dec
rcr
in
es
ds
push
pusha
push
pshufw
or
mov
sub
inc
mov
clc
push
je
dec
xchg
idivb
or
cwtl
push
mov
mov
iret
repz
adc
sbb
sub
cmp
repz
inc
dec
push
pop
repz
repz
push
repz
mov
iret
repz
int3
aam
loopne
and
lods
rolb
push
stos
nop
movsl
mov
mov
jl
xlat
push
mov
outsb
enter
add
repz
rcrl
sub
push
push
jl
movsb
mov
stc
cmp
or
sbb
cmp
xlat
inc
or
push
test
add
out
cmp
sbbb
jns
cmp
mov
iret
repz
dec
push
iret
repz
dec
idivl
out
xchg
mov
jns
out
push
dec
jo
mov
repz
sbb
pop
insb
mov
shl
sub
push
stc
cmp
repz
sahf
cmpsl
xor
jl
mov
sarl
cld
and
dec
jo
repz
sti
cmp
clc
sub
out
repz
test
repz
repz
dec
insb
mov
iret
in
or
cmp
jo
lds
nop
mov
repz
repz
je
in
jns
iret
clc
sbb
inc
je
iret
sarl
loopne
xor
pop
jl
iret
repz
int3
clc
sbb
jns
out
jo
rcr
repz
repz
cmp
test
imul
ss
js
repz
mov
xor
repz
mov
mov
push
pop
js
enter
cmp
sbb
cmp
jo
mov
cmp
cmp
repz
inc
insb
mov
fsub
jns
iret
clc
sbb
push
test
jge
test
clc
cmp
cmp
dec
idivl
out
test
loopne
cmp
jns
push
je
mov
out
sbb
inc
andb
lock
pop
fucom
jns
js
cld
xor
sahf
sarl
push
jl
in
or
xor
repz
insb
test
hlt
xor
int
jns
push
inc
and
iret
repz
je
mov
in
sub
push
push
je
out
repz
mov
in
and
repz
repz
jo
mov
sahf
out
inc
sub
jl
iret
sarl
fadds
sub
iret
repz
mov
jns
out
inc
mov
fmull
dec
push
inc
jl
cmp
out
shl
or
and
cmp
repz
sahf
cmpsl
dec
insb
test
clc
jns
out
sbb
push
pusha
sbbb
dec
ss
push
push
repz
add
sub
cmp
repz
jns
cmpsl
xor
sarb
ja
hlt
adc
push
push
popf
neg
push
cmpsb
push
push
dec
jo
cmp
out
enter
and
cmp
fs
mov
cld
aaa
jns
out
push
outsb
push
jo
shl
cmp
repz
cmp
test
iret
cmp
aam
push
push
dec
andb
sbb
push
dec
insb
lcall
or
jns
out
dec
insb
mov
inc
cmpsb
push
push
js
jns
iret
repz
sbb
inc
push
nop
mov
add
out
repz
cmp
test
pop
ds
repz
cmp
push
push
push
iret
loopne
sbb
xor
je
test
in
cmp
jnp
aas
pop
push
dec
insb
mov
repz
test
fdivr
sbb
out
sahf
sub
jo
test
out
idivl
add
ds
push
jl
out
sahf
pushf
mov
out
sahf
out
dec
push
fidivrs
fdivr
sbb
push
push
insb
repz
out
mov
iret
repz
cmp
pushf
mov
sahf
cmpsl
stc
cmp
sbb
push
je
sahf
out
nop
test
lock
repz
shll
insb
mov
int3
in
or
dec
lahf
out
sahf
push
add
jns
ja
push
inc
pusha
jl
jns
jns
mov
movb
out
sahf
out
mov
cmp
adc
sub
jo
pushf
repz
repz
in
add
movb
iret
repz
push
insb
andb
cmp
or
push
cmp
iret
repz
jo
movsb
mov
imul
pop
je
sahf
out
mov
repz
rcrl
pop
jo
out
cmp
lods
fdivr
adc
sahf
out
sahf
sub
pusha
jl
lods
out
out
int3
call
sub
out
sahf
dec
push
cmp
sarl
sub
mov
iret
rep
shl
or
and
jns
out
pusha
js
mov
sarl
loopne
jno
xor
cmp
repz
cwtl
mov
clc
jns
cmpsl
stc
adc
xor
movsb
repz
out
clc
and
jo
stc
cmp
cwtl
in
adc
cmp
out
sahf
push
sbb
iret
repz
pop
jl
iret
repz
repz
push
je
sahf
out
cmp
loopne
ja
dec
jns
out
sbbb
lock
inc
push
inc
fs
fucom
jns
in
jns
push
inc
popf
idivl
js
mov
out
sahf
out
dec
push
sahf
ja
cld
xor
push
test
icebp
clc
jnp
jl
jo
out
ds
shl
jge
push
fucom
jns
je
mov
or
out
sahf
out
dec
jl
rcr
repz
and
inc
push
cmpsl
stc
cmp
sbb
cmp
lahf
out
nop
mov
add
jns
inc
push
cmpb
xor
inc
pop
jl
jns
iret
repz
pop
out
sahf
out
mov
lahf
lock
inc
push
pop
jl
repz
out
faddl
fsub
jns
out
xchg
push
sahf
lods
lock
repz
mov
push
out
repz
jo
mov
or
repz
pop
jl
enter
repz
or
pushf
mov
fcompl
mov
pop
je
jns
out
mov
hlt
sbb
pusha
test
out
ds
jbe
movsb
hlt
mov
mov
mov
cmpsl
stc
cmp
mov
clc
and
push
jns
jge
test
add
outsb
push
movsb
sti
cmp
out
cmp
jl
adc
mov
or
pushw
jns
cmp
pusha
xchg
enter
xchg
lahf
out
fiadds
je
loopne
xchg
out
sahf
ja
push
inc
jo
mov
fdivr
and
out
repz
lock
testb
out
ds
pushf
int3
add
xor
jns
jge
pushf
aam
lcall
lahf
out
hlt
and
fiadds
mov
jl
pushf
pop
mov
add
inc
push
dec
cmpb
sahf
push
js
in
jns
jge
lahf
pop
push
inc
push
sahf
lods
int3
add
sub
iret
repz
sar
mov
jns
cwtl
mov
jns
adc
mov
mov
push
inc
repz
repz
lcall
mov
jge
mov
add
mov
push
jo
subb
add
adc
in
add
xor
mov
lret
sub
imull
test
add
add
enter
outsl
mov
push
jbe
das
mov
add
xorl
cmp
das
mov
mov
into
rolb
and
xchg
add
lods
sbb
add
mov
add
push
adc
adc
fcoms
leave
xor
sbb
cmp
xor
pushf
int3
push
fwait
inc
cmp
add
pushf
dec
enter
sahf
mov
hlt
pop
add
mov
fcoms
pop
arpl
leave
gs
add
pusha
popa
bound
xor
mov
add
xchg
push
dec
inc
nop
add
testb
add
push
xchg
and
adcb
push
pop
add
je
jne
ja
pushf
pushf
sbb
jns
jnp
lcall
rolb
out
aaa
loope,pn
pop
out
inc
hlt
jmp
outsl
add
fldcw
movsb
add
les
fisttps
pop
add
imul
add
add
add
adc
adc
adc
daa
push
daa
pop
daa
sbb
sbb
and
sub
daa
bound
and
dec
and
dec
in
jmp
and
dec
mov
adc
dec
popa
push
enter
and
jno
loopne
xlat
icebp
ljmp
fisubrs
fidivs
fidivs
xor
or
cs
xor
ljmp
jge
dec
adc
sti
repz
js
call
test
stc
movb
es
mov
push
cmp
std
mov
or
enter
jmp
in
in
out
out
call
mov
rolb
loope
icebp
jge
mov
lret
iret
adc
jg
mov
and
mov
jbe
mov
adc
fidivrl
xchg
mov
bound
sti
cmpsb
out
rcll
lock
mov
pop
call
adc
push
sbb
fs
xchg
cs
jb
xor
enter
pop
outsl
push
cld
ljmp
mov
dec
jecxz
ret
and
out
movsb
adc
inc
test
pusha
insl
or
adc
xlat
add
or
mov
sub
cmp
push
fs
mov
mov
fdiv
add
out
sahf
cmpsl
sbb
push
push
jl
add
loopne
cmp
out
or
sbb
inc
mov
cmp
pop
insb
adcb
ss
lock
ss
sbb
sub
inc
ja
out
push
push
insb
adcb
mov
fdiv
or
sahf
test
dec
jnp
into
repz
pusha
js
mov
movsb
push
jb
or
mov
mov
es
mov
add
inc
cmp
lock
repz
roll
sbb
dec
pusha
js
repz
mov
out
lcall
data16
out
nop
test
fsubrs
int
into
mov
push
into
leave
push
fdivp
iret
punpckhbw
orb
cmp
mov
mov
les
pusha
fadds
out
lcall
inc
ds
iret
dec
push
pop
or
fwait
mov
mov
mov
out
mov
push
call
fistps
push
cmp
lahf
dec
push
mov
shlb
jb
and
mov
mov
sahf
mov
loopne,pt
clc
rcl
cmp
cmp
pop
push
shll
lea
mov
mov
mov
xchg
loopne
iret
hlt
sarl
iret
pop
pop
push
in
sub
dec
push
pusha
shrb
pop
jnp
loope
push
movsb
outsl
mov
loopne
fildll
shll
push
add
pop
sbb
xor
inc
jl
out
push
pop
enter
shll
mov
push
shrl
shrl
daa
cmp
rcrl
insl
xchg
addr16
adc
and
scas
xor
xorb
loopne
aam
pop
aam
push
ss
aam
shrd
jge
repz
fcom
in
cld
or
iret
popa
jmp
inc
aad
inc
pop
testb
cmp
repz
movsb
mov
mov
les
lock
inc
mov
fdivrl
call
js
push
push
mov
call
out
into
mov
cmc
sub
xchg
inc
xor
call
subb
inc
mov
xlat
pop
mov
adc
std
mov
cmpsb
and
decl
mov
bound
inc
rclb
es
mov
pop
adc
push
adc
add
call
sti
shl
out
loope
pop
aaa
ret
xchg
pop
inc
add
mov
flds
outsl
mov
lea
cli
incl
popa
popf
insl
or
in
inc
ljmp
jmp
mov
mov
cli
daa
mov
aam
sbb
aam
in
clc
jl
pop
gs
lods
les
hlt
xchg
ljmp
inc
cmpsl
and
ret
pop
pop
gs
int3
or
jge
out
call
pop
test
loopne
sub
adc
add
cmpb
xor
dec
sar
rcl
sub
xlat
fbstp
cltd
push
into
cld
push
insb
std
sbb
mov
inc
xchg
and
push
mov
and
and
and
and
sub
addr16
fbstp
and
sub
sub
and
aaa
and
cmp
aas
and
inc
and
dec
and
mov
scas
clc
jmp
pop
and
popa
and
and
and
insb
and
jae
and
outsl
mov
pop
sub
cs
xor
ss
and
inc
and
dec
and
push
and
pop
and
cld
call
fisubs
sub
sub
aaa
cmp
cmp
inc
dec
dec
dec
dec
push
push
push
push
and
pop
add
add
add
insl
outsl
jno
jne
rclb
idivb
jge
add
andb
dec
out
add
push
inc
inc
mov
push
xor
jg
add
pusha
add
and
add
add
add
add
add
sub
ljmp
add
add
add
add
add
xor
add
add
add
add
dec
ljmp
nop
cmp
add
add
add
inc
add
lock
add
inc
add
inc
add
dec
add
dec
add
add
dec
outsl
xor
adc
cmpsb
push
add
call
push
add
pop
add
pop
add
pop
add
pop
add
pusha
add
bound
arpl
fs
cmp
add
push
add
add
outsl
add
jecxz
pushl
jno
jb
jae
je
jne
jbe
ja
js
jns
inc
cmp
jl
jge
jle
hlt
adc
imul
popa
adc
rorb
sbb
das
hlt
cmp
and
dec
or
daa
pop
cmp
xchg
mov
push
loope
ss
inc
push
and
and
inc
lcall
and
fmuls
push
dec
push
or
pop
jp
fwait
adc
sub
mov
jmp
add
mov
push
pop
cmp
into
adc
insb
lahf
out
sahf
adc
rcrb
lods
and
sahf
out
mov
aam
cmp
rorl
pusha
push
enter
sahf
out
aad
mov
repz
add
out
lcall
cmp
out
int3
adc
fsubrs
cmp
jae
repz
jl
decl
pop
fs
jns
fnstenv
aam
or
xor
repz
sbb
lcall
sbb
sarl
pop
cmp
or
sarb
frstor
or
fmulp
jae
roll
das
out
push
pop
xchg
lcall
xor
push
jnp
fnstsw
add
push
sbb
jns,pt
jnp
inc
push
sbb
push
adc
sbb
add
loope
cld
loop
mov
push
sahf
cs
fsubs
mov
lods
and
adc
sahf
faddl
and
cmp
push
mov
mov
ds
add
inc
call
data16
mov
mov
xor
pop
pop
fcoms
sbb
adc
mov
inc
iret
push
je
inc
cld
call
xlat
fmull
pushf
push
inc
sarb
push
adc
jbe
sahf
inc
out
movsl
je
idivb
subb
adc
push
ret
not
enter
dec
push
push
or
cmp
add
loopne
cmp
lock
or
push
mov
adc
in
sbb
in
notb
insb
ja
mov
aam
les
jle
mov
pop
pop
ss
pusha
dec
movb
iret
into
hlt
cmp
in
cmp
les
add
push
rol
in
callw
divl
hlt
pop
jo
fidivrs
inc
xchg
push
mov
mov
mov
pop
jle
ss
jnp
sti
fmuls
jl
xor
adc
jmp
pop
push
scas
jge
loopne
lock
out
push
fs
scas
into
pusha
jle
shlb
cld
mov
push
pop
push
mov
mov
or
mov
mov
fs
mov
pxor
and
cmpb
push
dec
lods
pxor
xchg
enter
call
fidivrs
mov
pushw
sahf
fistl
mov
xchg
sahf
rcrl
or
cmp
jl
sbb
mov
js
rcrb
xchg
push
nop
cmpsb
test
in
jl
neg
call
fdivs
ds
out
loopne
lahf
mov
push
shl
mov
jl
inc
movsb
pop
test
push
sub
dec
fcoml
test
inc
loopne
negl
pop
test
loopne
ja
mul
hlt
fldl
pop
mov
pop
and
push
sbb
sub
jnp
mov
les
insl
in
mov
clc
imull
jnp
pushf
testb
xchg
xor
jnp
sbb
mov
movsb
push
or
mov
out
int3
push
xor
lcall
sub
push
loopne
mov
add
mov
xchg
pop
dec
clc
mov
lock
cmp
push
pop
and
mov
cmpb
in
or
clc
push
mov
push
dec
out
outsb
cmp
or
or
ja
cmp
sbb
xchg
in
cmp
adc
js
jp
cmp
sbb
faddp
jnp
cmp
sahf
rolb
testb
pushf
pop
push
sahf
xchg
rcr
mov
cmpsb
sub
jo
imul
es
int3
lock
fstp
jo
mov
cmpsl
jl
sbb
mov
in
jmp
mov
testl
cmpsb
push
push
insb
mov
pop
adc
rorb
sub
movshdup
lods
outsb
mov
jnp
jns
mov
mov
dec
movsb
fisubs
iret
hlt
pop
push
add
repz
testl
aam
out
out
in
mov
push
sbb
mov
lods
cmpsl
out
loope
cmp
cmpsb
mov
mov
add
andl
dec
je
jl
out
mov
sbb
mov
pop
push
sbb
negl
inc
outsl
push
icebp
sbb
js
sub
and
daa
add
cmpsb
data16
pop
push
push
xchg
cwtl
icebp
cs
push
mov
push
add
sbb
sahf
fsubp
mov
aam
adc
es
sub
clc
mov
data16
cwtl
and
sbb
mov
out
dec
inc
mov
jnp
jnp
push
in
hlt
jle
push
int3
les
ja
faddp
aam
les
mov
in
push
dec
fdivp
daa
or
mov
in
add
ja
gs
dec
dec
xor
mov
mov
outsb
loopne
jo
pop
loopne
cmpsb
push
dec
or
cmc
mov
in
xor
out
push
fisubrs
fmul
and
jge
mov
push
ss
stos
repz
add
adc
outsl
repz
dec
cmp
fs
es
cld
cs
add
xchg
xchg
lds
out
out
sbb
in
adc
cmpb
subb
cmp
sub
lds
xchg
jl
fisubs
cld
push
push
pop
xor
fs
inc
sub
js
repz
sbb
ss
or
das
ljmp
data16
clc
inc
mov
xorl
addr16
sub
pop
pop
out
or
jo
pushf
push
jo
jnp
imulb
movsb
ss
mov
rcr
repz
es
inc
data16
notl
xchg
movsb
out
jbe
mov
out
mov
shlb
dec
sti
shlb
jle
mov
out
imul
repnz
cmp
stos
out
loope
cmpsb
jl
add
ds
jbe
jle
inc
hlt
es
push
sbb
cmp
cmp
push
nop
ss
jmp
pop
enter
xorl
cmp
push
adc
out
xchg
pop
cmp
dec
push
test
xor
mov
mov
pop
fisubrs
sahf
mov
data16
lods
cmpsb
mov
jnp
cmp
into
outsb
je
enter
ds
add
outsb
push
push
lret
mov
mov
push
fidivrs
data16
inc
mov
jbe
scas
or
jne
jo
cs
add
repz
jle
sub
rol
mov
mov
loope
xchg
push
or
test
loopne
cmp
jle
pop
push
outsb
push
pop
mov
mov
call
out
loopne
jle
inc
push
dec
mulb
insb
sub
pop
mov
clc
push
out
pop
sbb
test
inc
lock
neg
jnp
ss
inc
dec
notb
jle
pop
iret
add
sub
in
out
add
cmp
aam
pushf
mulb
sarb
sbb
and
xchg
lahf
out
sbb
sahf
jo
js
in
jbe
neg
jnp
subb
xor
adc
fdivs
idivl
cmp
dec
inc
es
mov
sarl
dec
mov
push
ss
xchg
mov
dec
mov
sub
xor
loopne
pop
mov
out
es
and
out
push
push
testb
xchg
sub
lcall
je
mov
push
or
es
inc
jle
xchg
jns
idivl
fs
cmpsl
push
add
pop
iret
jecxz
addr16
out
ljmp
push
push
jp
jl
and
cld
dec
cmp
push
inc
jno
dec
mov
ds
add
out
or
jp
pusha
mov
dec
xchg
lods
lret
ret
ds
outsb
and
loopne
push
ficoms
mov
inc
out
and
push
push
lock
scas
stos
pop
push
push
hlt
pop
inc
adc
pop
loope
cmp
rolb
adc
rcll
roll
push
pop
mov
xchg
pop
pop
push
fimuls
mov
sbb
dec
out
or
test
rorb
faddp
mov
or
fs
les
cmp
cmpsb
sbb
pop
and
fidivrs
push
ds
mov
sub
ss
in
push
cmpb
xchg
jl
dec
jle
dec
jo
sahf
notb
test
lods
insb
fisubrs
icebp
mov
dec
lahf
int
xchg
sahf
mov
mov
ss
scas
insb
aad
sbb
mov
and
addb
dec
sub
sub
mov
stc
clc
inc
pop
rolb
jo
mov
cmp
enter
inc
shrb
repz
pop
repnz
and
fdivrs
pop
repnz
int3
or
call
push
cwtl
fcompl
cmp
pusha
add
sub
push
mov
mov
xor
jmp
stc
cmp
mov
subb
fs
inc
faddp
adc
xor
insb
setb
rolb
in
daa
inc
inc
push
mov
ja
push
add
pop
out
or
mov
xor
adcl
adc
jne
and
testb
sub
adc
lcall
add
pop
and
jns
out
inc
xor
cmp
adc
ds
mov
sbb
dec
push
inc
dec
dec
enter
xchg
insl
adc
pop
popa
jae
push
dec
inc
sbb
add
lahf
mov
lods
fldt
jne
je
dec
int3
jo
xchg
xchg
popa
mov
or
adc
flds
xor
add
mov
mov
adc
mov
add
push
dec
and
xchg
pop
ss
ja
dec
jae
mov
xor
mov
adc
cwtl
rcl
xor
and
in
xchg
jo
add
es
cmp
hlt
jbe
subb
outsl
popf
inc
aam
add
or
adc
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
inc
call
push
rolb
aaa
jae
mov
push
add
sub
ss
lods
or
push
push
push
add
push
push
repz
push
or
rorb
sbb
mov
or
mov
sub
jp
sub
push
lahf
fwait
sbb
push
imul
push
push
dec
pop
sub
or
or
add
push
roll
in
rclb
incl
sub
repz
pop
rolb
sbb
mov
mov
addb
inc
leave
call
faddl
jl
repnz
jg
clc
aas
push
pop
jmp
fcmove
jae
rol
add
pop
or
cmp
jnp
push
aas
jg
ret
addb
add
inc
addr16
mov
jnp
pop
push
jae
inc
int
mov
fldt
shrb
push
cvtdq2ps
jg
add
insb
ss
push
out
ficompl
popf
xchg
cmp
add
xchg
lock
sbb
pop
push
aas
pop
jnp
xchg
pop
cs
pop
xchg
pop
lock
xor
push
pop
std
fiadds
gs
push
fnstsw
add
roll
insb
jl
ljmp
jns
jg
sbbb
add
repnz
cmpsb
jo
iret
rolb
jae
pop
pop
mov
lock
mov
push
xor
push
ficompl
xor
jg
ja
inc
push
add
cmp
adc
repz
decl
iret
fwait
int
dec
add
add
and
ficompl
add
add
bsr
fisubrs
aas
dec
pop
outsb
daa
ret
push
push
sbb
fs
cmp
lock
aas
rcrb
push
dec
add
push
inc
jmp
outsl
clc
popl
adc
push
andl
mov
sahf
push
add
xlat
pop
sbb
fisubrs
mov
pop
addr16
pop
jle
xor
pop
inc
data16
in
les
test
xchg
fidivrl
nopl
aas
addr16
push
add
dec
out
inc
or
pop
cld
push
push
stos
enter
fsubrl
aaa
inc
pop
sub
pop
lock
push
gs
cmp
les
iret
inc
fldcw
jge
cmp
sbb
push
fwait
int
mov
add
inc
add
inc
ror
mov
popa
push
pusha
xor
sbb
push
xchg
orb
push
sbb
push
shlb
jne
ret
jbe
push
roll
lock
jl
data16
push
sbb
push
sbb
or
test
shlb
loopne
shl
xchg
fistl
data16
insb
add
sub
addb
addb
movsb
mov
add
out
add
mov
sbb
or
btc
dec
push
hlt
push
inc
ljmp
outsb
sub
dec
pmuludq
sti
mov
mov
int3
add
pop
inc
dec
iret
cld
sbbl
iret
pop
cld
xor
das
xor
xor
lods
pusha
jnp
cld
das
xlat
out
pop
or
push
dec
pop
jg
andb
loop
paddb
cld
jb
push
fiadds
push
push
adc
adc
cld
sbb
sarb
cs
push
adc
mov
add
icebp
pop
push
inc
sub
push
mov
adc
addr16
pop
push
and
ret
push
psllw
inc
fidivl
cld
inc
jne
cld
pop
syscall
pop
mov
pop
pmovmskb
pop
pusha
add
adcb
scas
pcmpgtb
bswap
pop
pop
jno
pushl
testl
or
push
inc
por
iret
pop
nopl
sub
das
push
add
or
and
sub
and
xchg
add
mov
imul
fdivp
push
xor
popa
and
mov
xor
pop
xchg
stos
and
dec
dec
sbb
scas
push
and
or
inc
adc
sub
and
pop
punpckldq
sub
push
cmp
sbb
sbb
or
das
jae
and
daa
iret
add
cmp
mov
pop
mov
and
sbb
call
mov
and
mov
push
test
fstpl
jnp
bound
dec
pop
xchg
popa
les
pop
sbb
and
push
jmp
mov
lret
xchg
mov
cmp
cmp
xchg
mov
pop
subl
adc
repnz
cmp
jne,pn
push
push
sub
adc
movsb
push
xlat
insl
dec
add
mov
popf
and
sahf
jbe
insl
xlat
jbe
inc
mov
addb
rol
jb
lods
sbb
xor
ror
fwait
fwait
addr16
xor
add
fst
mov
das
or
or
add
cmpsb
arpl
inc
outsl
daa
jae
lods
mov
xor
dec
lcall
fst
aaa
adc
popa
inc
pop
and
insl
jae
je
xor
and
out
jnp
stos
inc
adc
pusha
rorl
dec
or
jae
sbb
ret
push
xchg
dec
and
xor
pusha
xor
cmp
cmpsl
dec
xchg
adc
les
je
xor
sbb
add
pop
lret
mov
sub
mov
mov
xor
cmp
mov
mov
push
pop
aas
inc
xchg
and
adc
ja
or
sub
adc
leave
lds
sub
mov
shrl
push
jg
scas
xchg
jne
fdivrl
cmp
loopne
addr16
and
and
pop
sub
imul
pop
pop
rclb
roll
inc
add
jecxz
jnp
pop
addl
add
imul
push
push
lcall
jns
mov
cwtl
cwtl
jo
out
je
or
ret
lds
pop
xor
or
push
add
dec
push
dec
sbb
mov
hlt
push
sbb
pop
adc
fsts
mov
bound
lret
push
xchg
or
xor
inc
imul
or
dec
imul
pop
mov
sbb
dec
pusha
mov
push
fisubl
insl
or
add
call
xor
push
adc
inc
xchg
xchg
xchg
or
jge
adc
push
adc
mov
sti
inc
adc
call
sbb
fimuls
mov
xor
xor
mov
xor
aas
mov
xor
sub
sbb
pusha
xor
and
addr16
mull
sbb
sub
cmp
jg
inc
and
ljmp
orl
cmpl
sub
push
pop
outsl
arpl
or
sub
ret
push
roll
or
inc
movsl
cmpsl
mov
pusha
test
dec
pop
dec
or
call
inc
pusha
pop
push
ja
fisttpl
jmp
xor
jae
imul
sub
push
aas
inc
or
xor
jae
inc
and
push
outsl
inc
scas
pop
push
add
mov
jnp
aas
ret
cmp
sub
push
ja
mov
daa
push
ret
ret
fs
or
pop
fwait
or
sub
mov
pop
pop
dec
lock
and
ljmp
lret
mov
mov
or
rcll
mov
push
or
mull
sub
iret
mov
insb
inc
js
xchg
lea
jmp
rorl
or
push
and
or
and
loop
adc
lret
jecxz
dec
pop
outsb
xor
adc
push
sbb
rclb
pop
iret
jecxz
push
or
xchg
add
dec
pop
push
and
ret
jne
jae
add
scas
movsb
fwait
ret
jne
xor
cs
and
out
sbb
daa
movsb
and
sbb
sbb
outsl
and
test
adc
sbb
pop
adc
push
or
and
out
addr16
test
pop
ret
fisubl
pop
addr16
arpl
fstps
mov
bound
rolb
das
push
jo
adc
out
mov
sarb
pop
repz
insb
push
xlat
adc
xchg
daa
fisubrs
mov
sub
jl
gs
mov
and
in
mov
pop
mov
cmp
js
or
test
push
dec
adc
cmp
jbe
das
sub
mov
add
push
mov
xor
dec
sbb
out
scas
pop
mov
sub
inc
jns
imul
inc
pushf
in
fiadds
ljmp
pop
adc
and
mov
push
rolb
ret
sub
daa
adc
jo
sub
shrl
adc
xor
dec
outsl
adc
xchg
xor
jb
lret
mov
sbb
mov
je
fadds
pop
and
lret
xchg
mov
stos
das
hlt
nop
lods
mov
in
adc
push
and
ss
es
and
add
sbb
mov
jae
lods
sbb
scas
inc
loopne
cmp
sbb
push
mov
jnp
shr
mov
movsw
inc
xchg
fisttpll
imul
sti
inc
or
pusha
sub
pop
pop
jo
push
pop
test
push
mov
call
jecxz
jb
pop
jae
data16
adc
sub
and
out
or
xchg
stos
and
add
sbb
and
popa
mov
xchg
dec
push
mov
sbb
or
mov
adc
sub
sbb
mov
push
mov
dec
sbb
outsl
lods
xchg
mov
scas
mov
adc
xor
pop
push
repz
mov
mov
mov
mov
es
jb
sub
lret
out
roll
pop
add
cwtl
push
addr16
pop
mov
xchg
sub
rcr
mov
mov
pop
insb
jg
inc
inc
movsb
xchg
push
push
mov
sbb
adcb
sbb
fucomip
xchg
xchg
xchg
xor
nop
and
daa
popa
jno
xlat
je
test
add
sbb
sub
arpl
arpl
mov
loopne
stos
pop
sub
pop
lods
pop
xor
inc
mov
inc
imul
push
rcrb
push
add
jo
inc
daa
shll
fwait
push
push
je
inc
fildll
insl
add
cmp
lods
dec
jae
roll
inc
sti
mov
movsb
pusha
xchg
idivl
bound
add
pop
cmp
push
lods
jne
xchg
int3
lcall
add
test
leave
sti
aam
lahf
loop
inc
push
popa
xor
push
jmp
popa
pop
dec
iret
mov
mov
imul
stos
fwait
dec
add
aaa
lahf
add
jmp
movsl
cs
les
add
mov
inc
inc
jecxz
dec
loopne
xchg
xor
push
mov
addb
scas
addb
mov
xchg
lods
dec
dec
ficoml
mov
pop
sub
sbb
pop
xchg
lret
fcoms
sub
adc
or
xchg
iret
pop
or
xor
aaa
jp
or
dec
sub
shlb
out
je
rolb
stos
fwait
and
inc
nop
ret
mov
imul
adc
ret
das
addb
jae
add
loopne
loop
push
lret
movsl
mov
and
adc
cmc
sbb
cmp
shrl
jmp
jae
adc
adc
aam
xchg
or
pop
shlb
scas
push
add
adc
mov
add
aad
add
scas
dec
lds
adc
icebp
loop
mov
dec
push
push
mov
jbe
sti
scas
mov
inc
arpl
pop
stos
imul
ja
bound
pop
xor
cmp
stos
adc
stos
dec
or
jae
mov
add
push
or
pop
pop
pop
not
addl
sub
inc
mov
mov
sbb
shrb
push
and
mov
xchg
sbb
add
pushf
pop
xchg
inc
push
add
notl
loopne
pusha
je
dec
push
lahf
scas
out
sub
mov
sbb
sub
add
leave
mov
sbb
fmull
lods
mov
mov
fiadds
cmp
sbb
adc
push
or
or
fcmovnu
jbe
imul
filds
push
pusha
daa
cmpsl
mov
mov
adc
xchg
dec
pop
sbb
pop
int
adc
dec
or
push
push
dec
les
cmp
fbstp
mov
or
pop
or
stos
inc
lods
adc
outsb
divl
movsb
mov
orl
pop
and
mov
inc
sbb
test
sub
subl
inc
popa
movl
testb
loope
pop
aaa
pop
sub
subl
shrl
lds
andl
ss
ljmp
loopne
ja
inc
push
lea
shrl
insl
test
xchg
push
cmp
insb
mov
sbb
inc
popa
push
arpl
arpl
sub
push
stos
outsb
int
add
push
fldt
lds
add
pop
ret
mov
arpl
pusha
rcll
aaa
push
ret
loopne
mov
aaa
dec
and
or
es
push
inc
cs
push
push
ja
mov
and
aaa
add
iret
sub
and
mov
inc
mov
and
cmp
sub
adc
fs
ret
push
jno
adc
mov
mov
adc
sbb
fistl
movb
sbb
inc
imul
test
ss
lahf
or
push
mov
scas
mov
and
add
cmp
stos
popa
xorb
fwait
subb
dec
dec
ss
movsb
or
and
sub
clc
fildll
add
les
gs
xor
movb
les
outsl
popf
lds
dec
and
cmp
shrl
lods
sub
xchg
xchg
push
and
sbb
xor
imul
or
xchg
adc
mov
out
popa
mov
inc
pop
jp
push
rorb
sbb
dec
pop
lods
movsb
data16
push
jnp
mov
popa
xchg
jecxz
xchg
cmpsb
sbb
push
push
adc
ss
mov
test
and
jae
les
xlat
arpl
mov
lret
jns
adc
rorl
cvtpi2ps
push
ret
mull
rcll
aaa
and
daa
or
scas
xor
inc
dec
mov
loop
pop
jae
rclb
inc
ret
adc
sbb
xor
fs
stc
mov
xchg
push
and
and
cmpsb
sbb
pop
ja
iret
xor
sbb
aad
mov
fistl
jmp
ja
adc
sbb
out
xchg
push
xor
mov
out
aad
movsb
push
push
je
mov
cwtl
add
sbb
or
sbb
and
pop
jo
outsl
stos
das
ja
daa
sbb
mov
loopne
inc
adc
jne
or
xlat
pop
add
sbb
pusha
xor
aas
and
xorl
stos
push
push
test
xor
or
dec
inc
ja
push
push
pop
rclb
jae
popa
popf
les
rcll
mov
sti
mov
xchg
xchg
pop
or
arpl
inc
pop
loope
mov
pop
xchg
mov
stos
jecxz
stos
adc
rorl
push
fiaddl
push
adc
scas
je
xor
dec
push
add
fists
jbe
pop
or
ret
adc
adc
inc
fs
mov
or
push
imul
cmp
jae
scas
adc
mov
and
shll
fisttps
push
sbb
jb
mov
movsb
sub
cmp
ja
lods
rol
jg
idivl
arpl
outsl
and
inc
cmp
loop
pop
sysret
movsb
and
imul
jae
push
inc
pop
add
arpl
adc
mov
xor
ja
xchg
cwtl
mov
in
enter
aas
in
mov
aam
and
adc
call
repz
mov
push
sbb
lods
pusha
sub
dec
arpl
ss
push
mov
scas
aaa
cs
aam
lcall
push
jmp
and
aaa
cs
jae
stos
push
loopne
js
mov
add
xorl
hlt
cmp
or
inc
outsb
loopne
aaa
fcompl
dec
outsl
aaa
pop
push
and
les
push
or
adc
mov
dec
xor
push
push
fwait
outsl
xor
jmp
inc
das
and
and
mov
outsb
mov
rclb
mov
mov
enter
sub
popf
cmp
mov
dec
out
orl
inc
rcr
scas
cmp
mov
fcmove
mov
sysenter
xlat
mov
pop
shll
cmp
and
jbe
mov
test
int
rolb
sbb
and
mov
andb
fstpl
add
ret
xchg
movsb
jmp
jae
daa
push
mov
sub
mov
insb
push
add
sub
pop
rolb
inc
sub
pop
psubb
arpl
xchg
insb
pusha
lea
sbb
xlat
inc
pop
subb
xor
sbb
arpl
imull
xchg
xor
inc
cmp
xor
daa
stos
cs
and
sub
rcl
add
outsl
and
inc
fstpt
adc
push
xchg
mov
inc
pop
aad
mov
push
cs
lods
add
aaa
jp
shlb
inc
test
pop
pop
pop
je
lret
mov
jae
outsb
es
pop
sbb
pusha
subb
sub
or
sub
sub
add
pop
stos
and
fldt
cmp
insb
pop
or
add
sbb
push
sbb
aam
insl
xor
cli
adc
pop
pop
jnp
and
insl
mov
cmp
inc
xchg
pop
or
je
push
adc
mull
dec
add
jnp
inc
xor
add
or
movsl
lret
push
xor
je
dec
push
xchg
pop
dec
cmpsl
pop
or
repnz
movl
dec
ret
imul
ja
movsb
fildl
or
sub
les
inc
scas
imul
fwait
pop
ss
mov
and
insl
mov
jbe
xor
mov
sbb
mov
fsts
push
cvtdq2ps
xor
push
adc
subl
arpl
fisubs
pop
arpl
mov
push
and
sbbl
inc
loopne
fbld
pop
mov
lret
lahf
ficompl
pop
out
adc
fistl
xor
and
imul
pusha
mov
sbb
xchg
push
inc
add
dec
dec
stos
adc
or
lods
loop
gs
mov
dec
sbb
sub
imul
shld
ljmp
bound
stos
adcl
nop
cmp
and
cmp
cs
add
pop
xor
aas
pop
incl
xlat
sub
inc
fwait
iret
sub
jnp
lret
daa
adc
fmuls
sub
femms
loope
adc
gs
ret
cmpsb
sub
sbb
adc
push
aad
and
push
dec
jmp
pop
inc
pop
pop
sub
lds
dec
ljmp
scas
das
mov
mov
shlb
mov
adc
test
push
mov
movsl
pop
rep
pusha
mov
xchg
outsl
pop
cmpsl
cmpsb
je
push
and
addb
andl
push
adc
jo
jg
cmpsl
fimull
call
sarl
ret
mov
fs
arpl
sbb
or
je
pop
push
lret
mov
nop
or
jmp
jecxz
adc
mov
or
and
xor
mov
xchg
mov
xchg
push
aaa
mov
pop
xchg
mov
out
out
push
pop
aad
pop
scas
pmaddwd
out
test
mov
dec
xlat
inc
dec
xorl
scas
adc
ds
sbb
or
adc
das
adc
jmp
fidivl
popl
std
push
adc
jne
xor
addl
adc
and
cmpsb
pop
jno
jg
push
aas
pop
mov
lahf
sahf
addb
andb
ja
dec
adc
push
xor
adc
mov
and
mov
rclb
pop
mov
arpl
adc
orl
ret
adc
cwtl
rolb
jmp
pusha
mov
lds
mov
sub
pop
scas
ds
pop
mov
xchg
dec
inc
shll
shlb
mov
rolb
clc
inc
inc
out
and
sbb
mov
add
dec
sub
inc
stos
push
pop
iret
fisttpl
pop
outsl
lods
adc
push
stos
pop
sub
test
lds
test
sti
push
movb
dec
adc
xlat
roll
jg
les
movl
arpl
mov
inc
cmp
push
inc
movsl
xor
jmp
add
rcl
imul
adc
or
shll
pop
adc
sub
jo
or
stos
movsb
mov
pop
cmp
or
jmp
add
dec
jge
add
jbe
ja
push
cmpsl
push
fwait
jae
lods
pop
mov
dec
push
add
fucomi
cwtl
cwtl
cmc
adc
daa
and
imull
dec
das
aaa
cmpsl
add
add
outsl
jb
xor
jecxz
test
add
fwait
mov
mov
or
adc
fs
push
dec
pop
or
lods
addb
jae
xor
test
jg
adc
pusha
addr16
mov
pop
les
aas
and
push
cmp
movsl
pop
push
aas
add
scas
shlb
sub
sbb
call
pop
ja
push
pop
xor
adc
dec
mov
and
adc
lea
add
fbstp
sub
popf
les
aaa
mov
inc
push
pop
test
sub
sub
lods
jmp
pop
xor
fwait
pop
sbb
ret
mov
inc
pop
mov
gs
adc
ss
dec
sub
mov
xor
out
mov
das
lcall
push
push
fwait
add
sbb
dec
inc
leave
jae
adc
mov
mov
adc
jae
and
and
and
xor
ret
lea
aas
xlat
push
adc
xchg
and
cmpsb
popa
xlat
aas
bound
xor
sbb
stos
ja
iret
pop
xchg
push
adc
aas
sub
jmp
in
pop
dec
aaa
fbstp
sub
add
xchg
movsb
mov
pop
pop
xlat
push
add
xchg
mov
adc
inc
jecxz
mov
loop
mov
and
xor
and
lods
and
sti
daa
sub
push
sub
inc
push
sub
sbb
cs
movsb
sub
inc
push
xlat
adc
pop
adc
mov
or
inc
push
adc
addr16
mov
push
rcrl
xchg
push
adc
popa
mov
inc
test
push
dec
or
cmp
mov
push
mov
mov
mov
insl
or
mov
sub
imul
adc
lahf
jo
jg
rcll
pusha
sbb
push
out
popa
xor
add
adc
or
pop
out
adc
outsb
dec
pop
addr16
cmpsb
lds
or
xchg
pusha
jne
pop
jae
inc
adc
xor
es
shlb
pop
loopne
xchg
mov
jne
frstor
sub
daa
cmpsl
add
mov
mov
jmp
movsb
out
aas
mov
outsb
test
jg
popa
xor
dec
mov
adc
and
sub
stos
jo
fimuls
jbe
dec
aaa
fwait
insl
dec
xchg
shll
cs
subl
dec
int3
mov
pop
dec
or
cmpsb
insl
aaa
or
xor
add
dec
push
dec
stos
push
push
gs
jne
adcl
jnp
addr16
push
insl
push
pop
push
outsl
mov
mov
pop
aaa
pop
int
lea
pop
mov
mov
and
shl
int
dec
mov
add
add
mov
mov
mov
pop
adc
add
filds
pop
repz
adc
ds
mov
jbe
les
jae
and
movsl
add
adc
dec
jge
mov
or
arpl
addb
adc
inc
adc
lods
out
iret
daa
push
dec
imul
adc
cmp
dec
pop
pop
push
pop
pop
pop
xor
adc
add
stos
scas
stos
and
pusha
int
repz
add
outsb
bound
lods
xor
mov
or
arpl
mov
cwtl
sub
and
aaa
sti
jmp
sub
or
stos
lahf
andb
pop
rorl
dec
mov
dec
outsb
or
mov
idivl
add
mov
outsb
inc
add
add
ret
mov
orb
lret
pop
cmpsl
or
jno
jae
pop
test
sub
cmp
arpl
mov
push
aaa
sbb
roll
frstor
or
sub
and
mov
add
rcrl
add
stos
rorl
mov
pop
or
sub
jae
daa
mov
add
or
xorl
push
ret
jae
add
jecxz
cmp
mov
ja
sub
adc
cmp
cwtl
lods
push
cmp
mov
ljmp
pop
sbb
adc
add
adc
adc
pop
push
aad
pop
mov
faddl
mov
push
dec
ret
lock
stos
xor
iret
xor
ret
push
dec
bound
mov
add
inc
jle
and
or
inc
push
inc
pop
inc
dec
mov
xor
xorl
cs
bound
or
ja
ret
jo
push
pop
or
add
adc
xor
or
xor
pop
mov
popa
lods
cs
xor
and
pop
shll
push
push
cmpsl
das
jnp
cmpsb
add
test
inc
cmovb
pop
aad
add
test
sbb
sub
pop
xor
arpl
push
or
jo
adc
xchg
subl
sub
inc
orl
push
sub
ds
xor
cmpsl
shrl
call
les
sti
popa
pop
xor
ret
iret
jns
aaa
hlt
push
pop
out
pop
cmpsl
dec
popf
mov
xchg
jbe
out
push
loop
mov
dec
pop
mov
repz
xchg
pusha
mov
jne
pop
jecxz
add
inc
xchg
nop
mov
mov
xor
aaa
fisubl
adc
pop
jle
shrl
or
fs
pop
jg
mov
pusha
arpl
pop
jg
imul
arpl
inc
cli
inc
xorb
repz
add
fwait
cmp
or
xlat
jae
mov
imulb
push
sti
adc
add
jg
test
int
mov
nop
push
jge
xchg
clc
push
add
insl
mov
xchg
and
outsb
and
jecxz
mov
sub
aaa
adc
sbb
add
data16
dec
daa
loopne
dec
jnp
movsb
and
add
mov
add
push
rorb
add
mov
add
addr16
add
das
or
push
aam
mov
int3
scas
push
add
jle
sbb
inc
cmpsb
cs
push
push
pop
xor
es
or
adc
or
fiaddl
add
or
cmp
aam
dec
inc
jb,pn
jb
mov
inc
or
fadds
dec
inc
adc
and
sar
jg
add
xor
add
or
sbb
push
push
idivl
mov
shrl
int3
xor
mov
mov
hlt
fsubs
mov
mov
out
cli
fistl
shlb
lret
mov
loopne
pop
in
lcall
add
sbb
cmp
adc
sub
xor
mov
add
pop
sub
pop
fstps
or
xor
inc
adc
push
outsl
int
inc
adc
inc
test
adc
ss
lcall
sti
call
pop
and
push
mov
lret
sbb
adc
jg
std
add
sub
add
fisubs
cmp
ljmp
dec
dec
dec
sti
neg
in
dec
nop
jmp
or
shl
mov
xchg
or
mov
call
sbb
jmp
pop
adcb
jle
and
out
idiv
lcall
ljmp
je
pop
rclb
sub
out
clc
pop
xor
jmp
pop
lock
incl
ja
fwait
std
adc
push
mov
add
test
add
jg
jmp
outsl
jns
or
push
pop
push
jbe
iret
mov
addl
push
cmp
stos
hlt
addb
fildl
adc
adc
push
jle
push
std
xor
fdivr
adc
jno
addr16
jmp
incl
jne
divl
sbb
jo
or
jmp
lcall
jg
cld
mov
fwait
ret
pusha
mov
push
mov
and
fmuls
leave
je
nop
jle
jg
and
jbe
sti
jl
repnz
push
push
xor
push
or
shlb
imul
call
xor
out
adc
mov
and
jbe
cmp
lea
loopne
jmp
mov
jne
les
jl
mov
dec
ret
jge
mov
pushl
fmuls
jg
mov
jmp
das
push
sub
nop
nop
cmp
mov
pushl
jge
fistpll
sub
push
mov
adc
dec
mov
sbb
mov
decl
jne
cmp
bnd
stos
pushf
push
idivl
xchg
les
sbb
pop
inc
add
cmp
repnz
adc
neg
nop
mov
cld
or
push
lcall
enter
iret
cmp
iret
je
enter
je
fsubr
incb
fbld
mov
add
test
pop
sbb
call
ret
dec
jne
sub
or
cli
xlat
mov
jp
outsl
sub
pushl
sub
mov
fninit
and
or
inc
insl
loopne
incl
inc
mov
clc
mov
adc
sar
divl
jnp
cmp
mov
dec
add
xchg
dec
decb
jne
mov
mov
roll
mov
mov
sub
jg
dec
test
and
add
bound
loopne
out
gs
sub
dec
dec
or
call
sbb
cmp
call
movsb
xor
sub
movsb
jo
idiv
cltd
push
mov
adcb
lea
cmpsb
or
jg
test
sub
and
sub
sti
insl
jnp
pushl
cld
or
sbb
mov
or
pop
fldz
jno
sbb
cmp
mov
mov
and
imulb
xchg
mov
std
loopne
add
mov
js
or
sbb
into
and
push
stc
inc
int
imul
jmp
or
cmp
incl
push
mov
xlat
sbb
cs
push
dec
dec
gs
jne
cld
scas
mov
adc
lock
dec
sbb
push
sub
add
rorl
in
repz
jne
sub
mov
adc
pop
das
out
and
call
jle
jo
add
fimull
adc
nop
aas
sbb
mov
call
shll
ljmp
jmp
xlat
scas
clc
inc
adc
add
mov
mov
sub
cmpsb
pop
stc
jle
cmp
rcrb
ss
out
adc
xor
cmpb
mov
loop
repnz
jae
addr16
lods
lock
insl
add
jmp
adc
icebp
jmp
sub
mov
repnz
mov
std
fisubs
jl
lds
je
mov
subl
push
insl
mov
idiv
mov
or
shr
cmp
jb
decl
mov
sub
fwait
jl
lock
or
xor
xchg
and
xchg
mov
cld
call
mov
and
rorl
enter
cld
call
fs
add
sbb
int3
call
incl
add
cmp
dec
or
dec
add
cmp
jae
lea
cmp
daa
mov
push
lea
decl
inc
inc
pop
test
jl
es
xadd
pusha
pop
push
sbb
rolb
incb
aaa
ljmp
push
or
jl
lds
push
mov
ja
shlb
sar
call
je
jbe
xor
mov
fimuls
inc
sub
aaa
jl
call
xlat
aam
and
mov
pop
mov
js
pop
xor
sar
inc
jbe
std
pop
aad
pop
aaa
ljmp
lock
add
es
ljmp
decb
sub
incl
loop
dec
cmp
ja
out
adc
jo
mov
adc
and
fidivl
cmp
dec
jne
incl
mov
lods
dec
pusha
nop
pop
jle
loop
jmp
jo
pop
sbbb
cld
test
dec
or
lcall
jne
xor
cs
stos
push
cmp
pusha
ret
aad
mov
push
mov
dec
ret
cs
add
lea
add
xchg
push
jle
call
push
push
cli
loope
movl
sub
lcall
mov
cmp
inc
jbe
cs
rcrl
mov
call
xor
fbstp
jge
aad
push
sbb
mov
test
cli
fwait
clc
add
ljmp
loope
adc
jg
movb
jle
adc
mov
jg
and
nop
inc
inc
mov
push
sbb
jb
xchg
sbb
push
fcomps
adc
mov
hlt
call
in
push
jl
mov
mov
mov
push
pushf
ss
in
outsb
jae
push
adc
dec
repz
inc
lds
xchg
stc
xchg
inc
sarl
mov
imul
shl
lret
aaa
sti
cmc
out
lea
and
adc
adc
xor
decl
add
adc
jg
pushl
je
push
decl
incb
flds
inc
clc
push
xor
or
mov
add
mov
sbb
xor
mov
cmp
ret
lcall
clc
add
adc
adc
lea
or
shr
push
dec
movsl
clc
mov
sub
xor
int3
sub
js
loop
rclb
incl
test
jne
xor
out
or
cmp
add
ficoml
out
mov
bnd
fwait
incl
mov
cmp
mov
add
jecxz
ret
cmp
jb
js
jg
incb
mov
cld
popa
outsl
or
lcall
push
aam
pushl
mov
add
or
pop
sub
aas
in
insl
sub
shlb
test
xor
jmp
cmpb
ja
daa
fisttps
pop
pop
out
and
jmp
xor
cmp
pop
insl
cwtl
imul
loopw
jne
push
sbb
sub
pushl
sub
jae
mov
ret
out
sub
aam
outsb
sbb
in
xchg
xchg
inc
or
stc
jae
sbb
jno
std
fs
cmp
leave
or
add
decl
pop
insl
xchg
pop
adc
decl
orb
iret
sbb
mov
sbb
inc
mov
jns
loope
mov
incb
inc
add
or
pushl
jl
or
ja
cmp
xor
mov
out
hlt
mov
push
cli
pushl
jo
cld
sarl
mov
mov
pop
and
lret
jmp
out
fadds
in
hlt
push
orl
sbb
pop
addb
jno
dec
idivb
nop
jmp
icebp
decl
add
mov
mov
mov
sarl
mov
xor
loopne
dec
in
push
ficomps
jl
out
push
adc
sbb
pop
jmp
out
mov
repnz
mov
push
in
aaa
test
mov
pop
xchg
iret
sbb
mov
fildll
push
in
add
cld
rclb
in
lods
add
xchg
and
or
mov
call
dec
add
insl
push
lds
jmp
mov
idivl
out
mov
rcl
pop
jb
loop
data16
xor
std
and
lods
push
incb
cmpl
aaa
jl
ds
movl
add
cmpsb
cmp
in
incl
mov
sub
fdivrs
jne
cmp
add
rcll
add
mov
mov
cmp
and
loope
add
lock
movl
int
push
clc
or
jl
mov
inc
or
lcall
adc
loopne
or
mov
or
aas
cmp
call
mov
test
push
movd
subl
push
pop
cs
sbb
decl
jne
outsl
rcrl
inc
cmpsl
daa
outsl
cwtl
imul
xchg
sub
cli
pushl
push
stos
cwtl
and
aad
cs
pushl
add
push
xor
or
pop
pop
insb
std
pop
jle
mov
pushl
xchg
out
lea
adc
or
push
push
ljmp
mov
clc
push
adc
call
insb
loope
add
adc
pushl
jae
mov
adc
stos
cmp
fstp
fdivrp
jmp
cmpsb
push
push
pop
cmpl
mov
push
or
ja
mov
pop
and
jne
ja
stc
add
sar
sbb
add
pop
mov
shrb
bound
adc
sbb
lcall
cmovp
jg
push
sub
xchg
ds
sti
loopne
pop
aad
sti
mov
cmp
jmp
lcall
cli
adc
sbb
ret
inc
or
daa
push
push
dec
or
adc
sbb
aaa
adc
adc
jmp
imul
shr
sbb
clc
push
mov
scas
clc
pop
dec
pop
aaa
lea
push
decl
and
cltd
lods
mov
pop
push
add
repnz
not
mov
sub
mov
mov
xchg
roll
mov
and
add
lock
push
movsb
mov
mov
scas
movsb
add
add
movsl
mov
test
sub
push
push
aas
cmp
jmp
rcl
xchg
mov
sti
add
adc
clc
xor
repnz
jmp
or
pop
or
jg
add
or
fcomip
incl
mov
mov
adc
inc
or
lea
cmp
ja
pop
lahf
mov
jg
cld
outsb
ret
push
movsbl
lods
rolb
cld
sbb
decl
or
add
jmp
mov
ffree
cmpsb
mov
call
imul
das
daa
cmp
jne
mov
push
arpl
adc
fstl
sbb
push
loop
inc
rorb
pop
xchg
cli
in
add
stc
das
test
dec
out
out
stc
sub
and
clc
mov
iret
cmp
xchg
out
call
mov
xor
mov
mov
dec
or
adc
dec
shll
adc
sbb
mov
ss
idiv
jmp
cwtl
push
sub
and
jecxz
jnp
lea
ljmp
sub
push
push
push
aaa
in
outsl
mov
add
add
jnp
cmp
push
scas
add
cmp
popa
jne
pop
adc
jnp
xchg
pop
xor
cli
decl
lea
mov
jp
hlt
or
nop
ss
call
cmp
test
fiadds
in
sbb
add
and
dec
cmp
jg
pushf
push
dec
es
or
lock
jne
std
push
movsl
inc
dec
cwtl
xor
sbb
and
sbb
pusha
xchg
cli
sbb
lcall
popa
push
xor
sub
jne
push
jno
cs
enter
pop
mov
or
fdiv
rolb
add
mov
iret
mov
lahf
sbbb
hlt
dec
pusha
hlt
lods
imul
sahf
lock
pop
mov
inc
xlat
pop
push
test
in
pop
jnp
aaa
sub
mov
and
push
dec
inc
jo
scas
xchg
inc
lock
jg
mov
clc
inc
hlt
mov
or
addl
shll
rorb
lock
int3
ret
push
std
call
xor
push
add
mul
popf
rcrb
xlat
xchg
add
cmp
arpl
aas
cmpsl
and
xor
aas
sar
sub
jb
cmp
loopne
adc
aaa
sub
popa
and
mov
test
incl
dec
or
fisttpl
repnz
fcomps
dec
aam
fiadds
loop
cmp
push
xchg
or
aaa
out
add
out
add
jb
cmp
ds
add
push
cmpsl
dec
ljmp
jb
negb
clc
insl
push
or
stos
movsb
ret
hlt
push
sbb
fildll
mov
push
and
bound
jo
and
hlt
inc
push
leave
push
jo
inc
and
jnp
add
decb
stos
mov
mov
clc
sbb
push
stos
cmp
push
mov
popa
cld
mov
fisubl
inc
pusha
sbb
in
orb
add
mov
push
mov
call
lods
dec
enter
or
and
sub
push
mov
xor
push
and
call
je
inc
push
dec
ret
push
pop
lds
inc
mov
aas
jo
adc
rorl
iret
add
ljmp
into
push
inc
ja
rclb
and
cmp
push
dec
je
adc
decl
jo
inc
push
push
js
pop
inc
mov
outsl
clc
jmp
shlb
or
icebp
cwtl
add
sti
xor
or
push
dec
jne
push
sbb
ljmp
movsb
mov
scas
inc
jne
push
jno
sti
ljmp
adc
fnstenv
es
push
imul
stos
mov
int3
aad
std
inc
push
test
lods
lock
scas
pop
push
ja
pop
pop
ret
push
std
decl
push
or
push
sti
mov
cli
cmp
jae
sti
mov
jp
inc
push
inc
cmpsl
decl
ret
testb
mov
addr16
dec
enter
into
decl
roll
movlps
add
jle
adc
call
out
incl
pusha
shl
hlt
dec
push
loopne
dec
out
mov
pop
xchg
mov
mov
xchg
cli
mov
ret
mov
push
adc
rolb
pop
pop
fwait
imul
lcall
push
shll
xchg
imul
fldl
int3
mov
push
mov
clc
in
inc
into
add
cs
jnp
dec
inc
test
push
inc
add
mov
mov
mov
outsb
pop
push
xchg
fiadds
add
ds
rclb
mov
add
rcrl
jg
in
add
int
jb
jge
dec
addl
mov
aad
ljmp
sbb
pop
mov
cwtl
jo
add
push
push
stos
addr16
and
cld
push
push
pusha
dec
fdivr
jg
fisttpl
test
or
addb
sbb
pusha
dec
bound
inc
cmp
adc
mov
adc
mov
push
nop
cmp
mov
addl
in
call
pop
mov
or
in
ret
lock
cmp
sub
mov
inc
mov
pusha
xor
std
incl
pushl
imul
js
mov
mov
call
push
dec
pusha
and
fmul
insl
cmp
push
inc
out
incl
xchg
inc
in
adc
mov
pop
sbbb
dec
mov
cmp
in
fdivrs
sub
pushl
lods
pushf
inc
cs
adc
test
shll
push
dec
adc
xor
and
jg
or
push
sti
or
sbb
or
outsl
xchg
inc
and
ljmp
stc
sbb
movsb
xchg
xor
cld
xchg
subl
std
fsubrl
cltd
xchg
xchg
cld
and
jne
mov
xchg
and
or
clc
mov
adc
data16
lds
add
mov
jmp
push
mov
shlb
call
jo
leave
dec
cli
mov
popa
push
inc
cld
in
push
mov
repz
inc
push
inc
ret
incl
in
and
jo
jmp
jae
pop
jge
mov
or
cmp
call
xchg
xchg
jo
mov
and
push
mov
pop
dec
mov
push
adc
push
test
inc
xchg
js
sahf
sub
sbb
push
fcomip
adc
cltd
data16
repnz
icebp
push
push
cltd
outsb
pop
movsb
push
pop
cld
in
or
jmp
stos
insl
sqrtps
pop
cmp
jle
push
movsl
xor
and
push
stos
dec
pop
arpl
loop
adc
repnz
je
add
ret
push
mov
jmp
mov
aaa
test
addl
mov
xchg
dec
nop
add
or
rorl
sbb
lock
push
add
popa
dec
lock
lahf
out
cmp
ss
mov
test
mov
mov
incl
cld
scas
jo
frstor
bound
adc
jmp
sbb
adc
nop
mov
cmpl
xor
incl
shrb
xchg
lcall
ljmp
aas
nop
add
faddl
jg
or
call
pop
icebp
jg
mov
or
jg
nop
and
movb
jbe
xor
lods
lahf
das
mov
fisubrl
loope
fwait
out
loopne
add
lcall
insb
mov
icebp
mov
shr
ljmp
mov
xchg
or
jo
or
fisttpll
decl
clc
mov
push
or
in
js,pt
mov
scas
add
mov
fcomip
decl
pop
jno
outsb
mov
add
or
sbb
cmc
call
or
mov
add
rorb
cmp
adcl
sbb
or
xchg
jp
inc
movb
cld
add
fildll
add
aam
add
std
stos
cmpsl
adc
add
pushl
dec
and
push
out
jno
faddl
mov
pop
mov
inc
hlt
aaa
push
push
incb
add
mov
test
das
mov
adc
mov
pop
iret
or
decl
inc
mov
pop
xor
stos
leave
xchg
shlb
mov
incl
popf
subb
xor
movsb
push
add
test
mov
je
push
rcl
xchg
push
dec
push
xorb
push
jg
adc
pop
clc
pop
scas
mov
fiadds
mov
adc
rcl
ljmp
int3
or
or
push
adc
add
adc
mov
inc
push
sub
rclb
stos
sbb
jno
lods
cmpsb
dec
jg
jo
lock
dec
inc
and
adc
test
adc
call
rcrb
call
sub
and
cmp
xchg
fstpt
pop
jg
data16
enter
outsl
jmp
push
and
lret
or
pop
xor
sar
add
add
jg
ja
and
add
jecxz
adc
insb
js
ret
push
push
jbe
cmp
inc
mov
idiv
icebp
jbe
push
mov
cmp
btc
jg
loopne
mov
in
ljmp
fimuls
push
ja,pt
mov
dec
jbe
xchg
lahf
lret
jp
cs
xchg
out
jmp
sbb
stc
push
and
push
dec
loopne
sbbl
adc
mov
pusha
ret
andl
aas
mov
insb
mov
dec
lods
addb
insb
inc
in
xor
add
incl
je
add
mov
jle
fimull
add
ljmp
adc
aam
fwait
cmp
add
xchg
sahf
adcl
and
add
sub
adc
push
shlb
sub
insb
nop
adc
dec
xchg
lock
push
test
shrl
add
clc
push
and
xchg
push
sar
mov
xchg
bound
icebp
pop
pop
outsb
lahf
rolb
or
scas
jne
adc
aaa
mov
pop
stos
nop
xchg
jo
into
test
jmp
mov
jecxz
test
add
mov
shr
mov
add
dec
jne
jmp
jmp
xor
add
adc
inc
mov
push
loope
mov
jmp
add
jb
jecxz
in
lock
cmp
or
lock
add
aas
push
loop
inc
test
and
ret
fnstcw
pop
divl
fadds
mov
mov
mov
aas
add
imul
push
hlt
incl
cs
out
test
and
lret
std
mov
cmp
movl
cli
pop
cmp
mov
sub
addr16
and
sbb
or
mov
ljmp
inc
inc
mov
out
inc
outsb
out
mov
leave
flds
or
iret
stc
mov
inc
sub
sbb
call
fadds
mov
and
call
aaa
cld
scas
add
cmp
ret
ss
pusha
pop
dec
or
or
lods
or
incl
add
sbb
rorb
adc
pop
divl
and
add
add
ljmp
adc
dec
rcr
mov
scas
jmp
and
sub
jbe
jmp
adc
xor
mov
lods
adc
lcall
jecxz
imul
jg
subb
xor
or
dec
js
pop
pop
hlt
mov
shrb
mov
dec
adc
inc
dec
sub
out
in
push
or
dec
or
addb
mov
cmp
ljmp
pop
push
mov
push
imul
test
sbb
push
mov
mov
data16
push
mov
sbb
sbb
inc
push
pop
xchg
imul
or
pop
inc
stos
pop
add
add
add
sub
mov
push
inc
leave
xor
addb
inc
inc
popf
clc
mulb
mov
lcall
or
sbb
cmp
je
icebp
cmpsb
imul
xor
leave
ljmp
sarb
jne
lret
pop
add
dec
addl
push
mov
push
add
or
cmp
decl
int
into
jbe
pop
lret
jbe
mov
cmp
xchg
ljmp
sub
into
fisubl
mov
mov
rclb
div
ljmp
cmp
jne
jb
sub
dec
outsb
mov
shrl
cmpsl
call
cld
aaa
lea
in
mov
dec
mov
ljmp
data16
pushl
ja
mov
mov
aaa
popa
cmpsl
ja,pn
outsl
arpl
adc
jae
decl
pop
jecxz
jne
or
je
das
inc
fs
push
dec
loop
mov
in
stos
jo
or
jmp
pushl
add
hlt
iret
nop
jns
lock
pop
xchg
pop
jecxz
addl
dec
ret
ret
push
xchg
mov
jmp
rorl
ja
out
jge
sarb
jbe
add
mov
xchg
in
lcall
adc
mov
adc
mov
adc
ljmp
sbb
mov
sub
sarb
or
jg,pn
je
dec
jb
mov
adc
int3
dec
insb
adc
or
jbe
movsl
or
sbb
je
or
lods
cli
pushl
cmpsl
add
cmp
movsb
cmpsb
cmp
xchg
call
adc
push
fcmovnb
add
add
ja
cmp
dec
rcrb
pop
cwtl
jmp
jae
fiadds
pushf
fdivr
pushl
ftst
fwait
add
or
je
adc
dec
fwait
mov
lcall
or
inc
sub
mov
pop
inc
sar
add
adc
and
mov
notl
ljmp
aaa
pop
pop
dec
loope
mov
test
outsl
jle
inc
orl
jb
mov
ja
addb
sar
loop
add
adc
fildll
fcmovb
icebp
sahf
and
inc
mov
xor
add
inc
xor
sub
imul
jle
jb
lods
cmp
add
add
add
jbe
dec
test
mov
pop
out
fs
and
pop
lods
jno
incl
in
aam
jmp
adc
or
aam
push
mov
lret
or
rcrb
cmp
cmp
je
or
je
decl
fisubrl
add
fiaddl
pop
adc
jmp
lret
sbb
push
shlb
sarl
jno
jno
xor
mov
out
js
fimull
add
nop
leave
mov
loope
sub
shll
fbld
cmp
je
jo
push
loopne
pushf
aam
push
int3
test
add
inc
in
push
cld
sbb
loop
lcall
clc
sub
or
lods
and
ret
xor
insl
sahf
dec
cmp
enter
dec
xor
add
push
das
jb
orb
sarb
pop
pop
out
ljmp
lcall
cld
imul
lea
jle
in
enter
mov
nop
dec
icebp
mov
jg
call
jbe
mov
rol
cmp
fs
jmp
push
rol
add
lcall
je
test
mov
pop
shrb
pop
pop
dec
push
sbb
loop
dec
add
pusha
mov
incl
jns
adc
or
das
andb
aam
test
push
sub
fdivr
or
mov
push
stos
mov
sahf
nop
stos
mov
pop
and
lcall
push
rclb
or
adcb
ret
fidivrs
sbb
outsl
cli
je
jmp
wbinvd
mov
mov
adc
xchg
add
cmpsb
add
test
lahf
mov
cmp
je
in
xor
imul
add
pushl
lcall
jecxz
sti
jmp
lea
push
dec
cmp
pusha
xchg
xchg
push
cld
test
sub
push
incb
cld
inc
xor
fcomip
xchg
cmpsl
cwtl
mov
ljmp
add
lcall
movsl
test
outsl
lcall
adc
xor
testl
je
sbb
cli
push
int
std
scas
xchg
dec
and
lea
pop
push
dec
adcl
push
sti
pop
popf
jl
ljmp
pop
jg
sbb
fucomip
iret
sub
rolb
add
test
dec
push
cs
jg
add
mov
xor
mov
and
add
lcall
adc
cmpsl
mov
cld
push
pop
add
mov
outsl
mov
ret
push
es
fcomip
jle
mov
aaa
cmp
push
jo
jg
vmovupd
push
and
push
fdivs
lcall
dec
lret
test
test
xchg
fdivrs
mov
fnsave
stos
shlb
clc
add
push
pop
push
mov
faddl
pop
xchg
fisttps
stc
jp
ficomps
sarb
dec
or
lock
jmp
sub
inc
mov
and
pop
sub
push
jb
int3
incl
sbbl
orb
int
jmp
sbb
push
subl
incl
sbb
mov
ss
push
stos
dec
pop
cmp
in
ret
jg
incl
lea
push
xchg
pop
mov
sub
hlt
lcall
lcall
lea
mov
and
popa
adc
dec
xchg
inc
imul
rclb
loop
ljmp
in
mov
repnz
mov
rclb
sbb
ljmp
sbb
inc
pop
sti
popf
shr
dec
jle
pop
movl
mov
loop
clc
sub
mov
mov
fbstp
fcmovne
dec
inc
lcall
dec
jl
mov
stos
lods
push
mov
or
enter
xchg
jg
mov
out
out
call
and
gs
idivb
sbb
add
aas
or
lahf
out
and
incl
movl
dec
orb
adc
aam
pop
out
clc
lcall
jmp
inc
cmp
pop
and
push
dec
lods
loopne
fisttpl
out
pusha
push
jb
call
jb
shrl
add
int3
mov
movsl
cmp
jae
movl
pop
or
clc
ljmp
jne
and
mov
push
fdivr
lahf
jae
add
add
sar
ss
xchg
hlt
add
loop
jo
cwtl
aad
jmp
mov
fwait
pop
or
pop
daa
jl
push
movsl
fs
adc
pop
add
add
push
int3
push
and
adc
in
into
or
xor
inc
jnp
test
sbb
les
dec
insb
mov
jae
dec
into
inc
jmp
dec
cmp
imul
mov
shlb
stos
mov
outsb
pop
shlb
inc
xlat
inc
popf
decl
inc
mov
jae
in
or
movsl
jmp
cmp
xor
ljmp
lcall
mov
loopne
idiv
push
adc
packuswb
stc
push
popf
jge
mov
pushl
jnp
or
cmpsb
or
mov
mov
jb
incb
int3
call
ja
adc
or
and
push
in
insb
test
mov
rcr
inc
call
jg
test
out
nop
xchg
js
pop
and
lea
mov
rcll
fstpl
pop
pop
jo
jle
pop
mov
push
movsl
mov
incl
mov
mov
test
push
das
add
subl
decl
push
fisubl
jae
sbbl
sbb
push
dec
adc
mov
xchg
popa
pop
adc
add
push
fcmove
dec
into
dec
inc
shlb
lock
incl
ja
ja
mov
and
xor
jp
push
jmp
mov
mov
sub
adc
push
shll
push
loop
dec
cld
jg
decl
jecxz
and
pop
adc
mov
sub
xchg
test
repz
incl
scas
add
icebp
push
out
inc
sbb
sub
test
enter
dec
clc
jmp
and
sbb
outsb
inc
push
jns
and
mov
push
mov
mov
mov
mov
mov
inc
add
lcall
adc
cmpsb
xor
pop
data16
cmp
or
xor
jg
inc
fiadds
test
je
stc
jbe
dec
dec
add
jmp
push
and
addb
mov
inc
push
mov
pop
into
push
or
fsts
adc
in
pusha
inc
orl
call
dec
js
test
add
inc
pop
idivl
mov
lea
adc
lock
mov
decl
lock
lahf
cld
inc
test
stos
jo
shll
add
loope
out
mov
lcall
fs
xor
cmp
sbb
mov
rorb
rorb
sbb
mov
loope
jmp
add
sti
sbb
lds
dec
push
hlt
cmp
push
push
and
mov
pop
data16
clc
sbb
pop
push
dec
add
dec
push
push
fmull
outsl
dec
pop
add
aam
push
add
fs
lcall
push
inc
adc
jg
mov
lods
sub
inc
adc
pop
pop
mov
ljmp
or
sahf
sbb
ret
or
les
std
pop
lods
out
sbb
mov
rcrb
mov
pop
je
inc
ret
mov
xchg
imul
pop
jge
adc
nop
call
jmp
call
xchg
out
xchg
arpl
and
clc
dec
inc
xor
call
shlb
loope
or
pop
mov
sbb
aam
movsb
or
cmovs
xchg
inc
inc
daa
jle
test
cld
decb
push
das
jb
pop
and
hlt
mov
add
dec
sbb
mov
ret
fwait
mov
imulb
outsl
push
mov
inc
mov
inc
cmpsb
inc
push
xor
sbb
pop
push
cmpsl
mov
scas
das
push
dec
push
pop
fcmovnbe
in
add
mov
cmp
mov
insb
add
mov
mov
adc
ja
mov
cwtl
es
push
orl
pusha
mov
jecxz
shll
mov
lcall
in
rcl
cmp
xchg
arpl
sbb
and
jg
pop
lcall
incb
sub
inc
xchg
orl
je
mov
incl
into
or
push
add
jmp
stc
dec
enter
or
cmpsb
push
lea
mov
call
push
and
lods
mov
es
lock
xchg
jne
mull
decl
loopne
ret
add
jmp
daa
or
pop
lods
add
cld
pop
jne
pop
rcl
decl
mov
fisttpll
rcrb
adc
xchg
adc
ljmp
shlb
aad
jno
je
jl
jg
or
lcall
dec
fmuls
fdivr
mov
pop
popa
dec
mov
ds
jg
sarl
fsubrs
clc
add
lcall
jbe
add
sub
cs
fdivrl
push
insb
pusha
mov
lcall
or
xorl
add
and
scas
adc
int
or
inc
aam
lock
movsl
xchg
inc
bound
repnz
aas
inc
pop
decl
add
and
aas
xor
xchg
push
lods
loopne
call
push
add
push
fdiv
sbb
push
lock
loopne
in
sub
ljmp
repnz
pop
fmuls
cmp
jo
xor
pushl
sub
dec
fwait
adc
mov
push
mov
fcompl
fucomip
cmp
mov
mov
mov
mov
inc
push
push
jae
or
clc
xlat
cmp
jg
inc
cmpb
aaa
sub
jecxz
test
je
fidivl
or
sub
lcall
push
xchg
push
adcl
mov
incl
gs
mov
xchg
cld
add
sbb
xorl
clc
sbb
dec
je
sahf
sbb
sbb
mov
incl
ds
dec
incb
add
pop
jg
lock
je
push
lds
je
push
add
adc
aam
sahf
movsl
cld
xor
sbb
bound
cmp
repnz
cmp
mov
das
decl
adcb
inc
or
jb
push
push
test
add
xor
mov
ljmp
insl
and
out
adc
add
sti
or
sbb
pop
push
inc
loop
subl
lcall
movsl
add
mov
in
repnz
rorl
hlt
call
dec
cmp
ljmp
decl
fimuls
push
xchg
mov
movsb
pop
test
mov
adc
xlat
clc
shrl
lret
sbb
push
push
push
mov
addl
jg
insl
mov
das
cmpsl
clc
and
or
enter
xor
fsubrl
mov
lret
jmp
daa
pusha
xlat
call
movsl
inc
cmpsb
mov
and
xchg
mov
or
mov
dec
push
es
jg
push
push
cs
fidivs
push
or
mov
dec
fsubs
cmpl
lcall
push
sahf
aam
pushf
xor
push
mov
sbb
ljmp
and
in
clc
add
sub
clc
or
movsl
lcall
scas
pop
xchg
dec
push
clc
fcomip
inc
xchg
cmp
push
pusha
or
push
xor
xchg
sub
popa
call
cltd
mov
sbb
sbb
adcl
nop
js
call
mov
setns
inc
pop
pushaw
lods
cld
xchg
aas
xlat
sar
incl
or
loopne
sbb
xchg
call
dec
jne
mov
pop
push
idiv
push
mov
lods
rorl
and
pop
test
ja
pop
mov
rorb
inc
loopnew
mov
dec
mov
cmpsl
sar
cmp
dec
out
stc
add
das
cmp
fisttpl
scas
inc
lea
mov
mov
pop
cmp
adcl
jmp
adc
xchg
push
outsl
cli
nop
dec
push
dec
loop
mov
sub
jmp
incl
ljmp
push
insb
movsb
mov
aad
jg
sub
jae
int3
adc
aaa
or
cmp
pusha
dec
sub
jg
and
lock
out
adc
jg
test
jge
mov
xor
jle
imul
xchg
xor
movl
mov
out
test
inc
dec
pop
pop
fcomip
jmp
mov
or
jno
sti
push
call
or
pop
es
lcall
cs
xorl
cmpb
cmp
jg
pusha
adc
add
xor
mov
xchg
imul
xor
dec
ficoml
mov
or
or
ret
inc
ja
mov
pushl
cld
call
pop
lret
push
sbb
adc
decl
cmp
dec
cs
decl
push
loop,pt
mov
outsb
xchg
mov
imul
mov
or
adc
incl
adc
cmpl
cmp
mov
sub
or
jae
mov
lcall
mov
jle
pop
push
push
dec
data16
outsb
pushl
push
and
pushf
dec
mulb
dec
shll
jmp
imul
jmp
jb
insb
rcrb
inc
cmp
xor
aas
ror
xor
pop
mov
mov
push
mov
adc
push
add
repnz
jg
lock
dec
add
push
addb
mul
xchg
fdivr
add
aam
cmp
setg
or
and
mov
xchg
clc
lds
and
mov
shrb
mov
jl
std
pushl
rorb
inc
out
adc
loopne
popf
popa
incb
in
cmpsb
inc
mov
jne
inc
jg
pushl
jle
daa
clc
pop
addr16
lcall
stos
xor
xor
call
and
cmp
and
ljmp
push
pop
incl
xchg
jo
lea
cld
stos
push
push
ja
jb
sub
incl
rol
movsl
dec
inc
add
cs
jb
dec
gs
dec
inc
pop
add
cmc
outsl
pushf
jg
push
and
dec
xchg
subl
xchg
dec
mov
sbb
mov
jns
push
test
fisttpl
add
add
xor
outsl
les
dec
ljmp
push
cmp
inc
jae
pop
push
test
xchg
jo
cs
or
idivb
xchg
shlb
mov
fidivrs
jmp
fcomi
mov
ror
mov
mov
cmpsb
add
ds
int3
inc
mov
jg
ljmp
add
jae
into
sub
sar
fmull
pop
add
cmp
jg
xchg
add
call
add
and
lea
pop
inc
jbe
outsl
fcompl
mov
xor
xchg
or
adc
adc
decl
hlt
lods
adcl
mov
sbb
out
xchg
fwait
pusha
leave
xchg
or
insb
jmp
test
xchg
jo
test
add
mov
mov
sub
inc
xor
push
incl
adc
popa
data16
xchg
add
out
inc
sub
clc
inc
insl
sbb
call
pushl
jb
loopne
push
pop
insb
cld
xor
and
sub
insb
xchg
loop
mov
ret
imul
jbe
incl
lcall
push
and
push
cmp
or
call
dec
lahf
add
gs
xchg
call
dec
call
ljmp
out
inc
mov
sahf
subl
incl
inc
idivl
repz
and
mov
add
fcomi
pusha
mov
and
jne,pn
incl
js
clc
sub
cmp
sub
out
jg
add
pop
fdivrs
inc
jge
pop
mov
ljmp
mov
mov
dec
stos
or
roll
sbb
stos
jbe
jns
jae
cmp
stos
push
cmovne
hlt
lock
lock
ljmp
sbb
mov
cld
call
add
add
push
push
sbb
and
xchg
insb
clc
pop
ljmp
inc
test
dec
rorl
adc
cmpsl
add
jbe
xor
imul
or
dec
xlat
test
mov
inc
loopne
push
aas
jg
add
jmp
arpl
add
add
xchg
mov
push
ficoml
addl
incl
add
add
xchg
outsl
inc
and
insl
xor
fsubs
ja
pop
sub
pushl
mov
ss
dec
out
pushf
dec
insb
jg
insl
loopne
dec
js
aaa
cmp
dec
incl
addl
add
jmp
test
mov
sti
lock
rdpmc
mov
jle
lcall
loopne
inc
adc
scas
lea
xor
idiv
and
sbb
loopne
das
fucomip
inc
add
push
add
data16
adc
push
cltd
adc
adc
add
mov
push
fstpt
scas
lcall
pop
pop
pop
inc
xor
adc
ficoml
push
loop
pushw
ljmp
push
cmp
jge
and
test
add
loopne
lea
ret
pop
jae
loopne
mov
pushl
adc
lea
pushf
add
push
lea
cmpl
ss
sub
or
push
sbb
pop
lahf
push
mov
pop
or
imul
arpl
setb
mov
idivb
mov
into
out
cli
fistps
push
lret
pop
adc
jecxz
test
mov
pushl
lcall
adc
fisttpl
decl
mov
push
add
cmp
decl
dec
jg
data16
into
jae
push
cmp
push
push
scas
push
or
mov
je
jg
pushl
into
scas
cli
or
add
lock
ret
rclb
mov
jno
pop
imulb
inc
je
pop
stc
in
jne
outsl
leave
rcll
dec
inc
cli
ficoms
mov
cmpsl
mov
pushf
pushl
sub
push
dec
xchg
or
mov
jmp
mov
jge
xor
pushl
call
popf
xor
sbb
lds
push
jmp
or
cld
inc
jp
test
mov
or
mov
lock
incl
outsb
cli
ucomiss
inc
lods
push
iret
push
cld
lods
adc
cld
outsl
jp
add
js
lcall
adc
pop
movsb
test
sub
mov
test
nop
pop
add
mov
inc
add
cmovbe
lcall
push
pop
mov
jl
pop
pop
cld
dec
inc
das
or
lock
fiaddl
push
or
lcall
shrl
adc
add
inc
stc
inc
push
sbb
aam
adc
mov
decl
mov
inc
test
out
or
inc
cmp
je
mov
inc
mov
std
out
sar
jb
fcos
push
decl
ja
mov
pop
shll
decb
push
je
add
in
and
call
jecxz
or
jbe
add
or
mov
sub
ds
jp
add
arpl
out
inc
call
addb
xor
mov
out
cli
or
ja
sub
xor
dec
and
cwtl
or
repz
jns
cld
pushl
xor
fistpl
sbb
rorb
fwait
inc
xchg
int
call
inc
dec
rcl
mov
mov
xlat
test
mov
mov
jbe
daa
lds
jmp
ljmp
push
js
mov
jbe
xor
inc
sarb
mov
loope
push
pushl
lea
psadbw
ja
inc
packsswb
pop
mov
mov
jbe
shll
mov
mov
pop
ja
jge
or
and
jg
mov
js
test
call
and
pushf
out
loope
add
mov
push
addr16
adcl
es
jb
inc
sbb
mov
or
mov
mov
xor
sahf
call
jmp
outsb
and
out
sub
add
sub
inc
sub
sbb
mov
cmp
fistpl
mov
or
je
xor
aaa
aaa
or
je
and
mov
xchg
jge
js
pop
cli
pop
jmp
push
lea
je
add
jg
fstpt
mov
jg
add
add
jmp
push
mov
add
mov
jg
pop
pop
lcall
enter
addl
dec
and
ljmp
fadd
xor
filds
jbe
xor
jg
in
test
imul
jo
dec
out
mov
xor
aas
iret
or
xchg
das
es
out
test
xorb
cmp
fadds
loopne
xlat
shr
inc
or
mov
dec
inc
or
lock
ljmp
sub
icebp
call
daa
orl
stos
faddl
jb
sbb
adc
adc
jo
sbb
out
xorb
mov
test
pusha
push
mov
scas
clc
popa
mov
mov
fwait
cli
add
cmp
fsubr
push
loope
ret
push
cltd
in
leave
out
insb
cmpb
push
std
leave
mov
pop
add
mov
scas
test
aas
or
cmp
ret
fisubl
out
clc
decl
push
test
cmpsb
pop
daa
test
push
leave
mov
sahf
or
out
jg
pushl
inc
cmp
int3
out
rol
icebp
cmc
jp
adc
mov
xchg
dec
dec
testl
mov
popf
dec
fimuls
jo
push
jmp
xor
add
int3
push
maxps
sbb
xor
jns
test
mov
out
dec
lcall
add
test
lock
jne
in
popf
shrb
mov
sbb
jmp
add
pop
dec
lea
ret
pop
pushf
outsl
lods
or
cmp
jbe
add
pop
cmp
fneni(8087
fdivrl
imul
mov
push
xchg
push
mov
mov
xlat
push
pushf
push
pop
imul
jg
lea
xor
push
iret
dec
mov
cmpsl
hlt
mov
dec
call
cld
loopne
xchg
mov
lock
cmp
rorl
push
aas
sti
out
mov
and
outsl
pop
testl
test
inc
test
and
xchg
dec
roll
inc
sbb
or
cld
mov
lds
mov
xor
popa
insl
rclb
jmp
xchg
xor
decl
jl
xorb
sub
add
js
push
jno
jmp
mov
dec
mov
adcb
adc
push
aam
call
test
loope
xchg
sbb
pusha
insb
jbe
xor
jecxz
push
fildl
ja
pusha
arpl
jmp
jge
inc
enter
mov
ds
jne
xor
outsb
sahf
insb
push
mov
xlat
pop
push
shrb
dec
testb
xor
inc
out
adc
mov
ds
mov
fdivl
xor
jle
xchg
js
jmp
fst
das
imul
sti
decl
push
stc
mov
mov
mov
add
repnz
aam
mov
push
mov
lcall
out
ds
enter
xlat
or
fs
wbinvd
mov
sub
das
sar
lock
rcll
xor
fidivrl
and
add
pop
pop
cwtl
ljmp
and
gs
sar
mov
sbb
adc
clc
xchg
test
xor
test
xchg
or
call
sarb
sbb
shrb
mov
les
fucompp
loopne
and
xchg
sub
sarl
mov
daa
and
inc
and
hlt
pushl
data16
outsl
loopne
aam
xlat
cmp
aas
lods
rcll
lcall
jb
das
mov
jb
dec
out
xchg
cmpsb
outsb
dec
add
jo
imul
sarb
sti
mov
arpl
jnp
movsb
daa
sub
push
into
jno
sub
inc
fwait
ljmp
ljmp
pop
ret
xchg
test
lods
scas
lret
and
sbb
or
pushl
xor
add
xor
inc
or
test
jle
mov
addb
jmp
adc
and
stos
je
cld
or
leave
lea
mov
incl
pop
enter
inc
push
out
test
xor
aas
shl
xchg
mov
push
mov
scas
decl
jno
push
fiadds
test
cmp
imul
mov
push
add
cmp
dec
push
lock
lcall
test
lea
test
jg
jle
lcall
pop
shlb
int3
pop
fiadds
in
push
jne
jle
sub
jp
call
jne
test
push
les
push
cmp
stos
aam
lea
jne,pn
call
sub
add
adc
getsec
jmp
push
or
insb
repnz
mov
lcall
shll
sub
loopne
test
inc
movsl
pop
push
jecxz
lcall
stc
push
repnz
dec
add
and
loope
int3
ljmp
aaa
pop
mov
into
sar
cmp
jae
mov
rolb
push
xchg
ljmp
lock
jne
or
out
inc
push
push
aam
push
ret
or
bound
and
push
fsub
xor
mov
loop
adc
jbe
shll
aas
push
jge
inc
lea
incb
lcall
jae
and
fcoms
add
fsubs
jp
mov
inc
or
sub
iret
ret
ljmp
fsubrp
out
enter
push
dec
inc
call
pop
dec
mov
or
or
jne
add
lahf
imul
mov
cmp
xchg
pop
ret
ja
popa
les
aas
jb
js
ja
dec
enter
into
rcr
push
es
mov
nop
dec
mov
cmp
clc
jmp
sub
or
enter
mov
sub
cmp
inc
add
pop
call
fwait
pop
xchg
lock
inc
pop
pop
pop
out
pop
mov
mov
cmpsb
and
adc
cltd
mov
shl
lock
pop
lock
push
dec
xchg
lea
mov
pop
cmp
lret
mov
pushl
add
xorb
inc
sbb
cmp
mov
aaa
movsb
xor
dec
pop
mov
jg
and
movb
ffree
add
push
arpl
ljmp
cli
jne
sub
or
add
jne
push
int3
mov
cld
xchg
and
push
loopne
loopne
hlt
out
push
test
rcl
ret
mov
mov
inc
pusha
mov
loopne
add
scas
enter
loopne
or
cmp
lods
sbb
xor
pusha
xchg
sub
pop
call
movsl
pop
sahf
jns
and
jle
adc
pop
jne
cmp
decl
cwtl
mov
outsb
cltd
es
adc
cld
cwtl
test
add
dec
sbb
sub
mov
cmp
cltd
out
call
filds
cmp
and
xchg
mov
or
lds
or
incl
push
inc
movsl
repnz
push
add
xchg
pop
push
cmp
fdivp
cmp
shll
sar
cmp
aad
loope
jbe
mov
dec
mov
mov
loopne
fwait
jp
mov
lcall
clc
and
js
cltd
add
enter
jb
mov
cmp
push
pop
leave
mov
aas
mov
sbb
or
sub
jo
repz
ret
push
popf
shlb
lock
mov
fidivrl
test
sub
dec
mov
pop
ss
call
push
push
cmp
pusha
xor
and
movsb
or
cmpsl
pop
and
shll
push
jmp
call
inc
jge
cmp
lret
in
iret
lahf
lock
and
cltd
dec
jmp
dec
pop
nop
incl
and
cwtl
lcall
fbstp
pminub
or
pushf
dec
inc
jmp
sbb
xchg
adc
sub
or
in
je
add
dec
push
sbb
add
dec
mov
test
jmp
add
jmp
shrb
hlt
cmc
decl
pushf
out
push
push
mov
and
adc
fs
add
std
lcall
ret
mov
clc
or
call
nop
repnz
rolb
stos
fdivrs
mov
jno
pop
push
add
ljmp
loope
stos
pop
stos
and
adc
pop
or
jmp
jns
inc
or
inc
scas
and
adc
mov
mov
push
lret
int3
outsl
nop
mov
ljmp
inc
imul
rclb
inc
loopne
int3
imul
or
lods
loopne
push
push
sbb
sar
cld
push
sub
mov
xchg
lock
or
das
nop
and
sar
mov
lcall
dec
mov
push
add
sub
xor
enter
jmp
lcall
lea
push
jmp
adc
push
sub
lods
pusha
daa
adc
movsl
decl
in
cwtl
cltd
xchg
xchg
add
cs
mov
in
pop
rcl
sbb
ljmp
dec
jmp
pop
xor
sbb
jo
or
lods
xorl
fmuls
mov
inc
es
lcall
lcall
push
inc
sub
cmp
scas
or
sbb
movl
mov
adc
mov
xor
push
and
mov
jle
call
cmp
jge
adc
mov
inc
shlb
mov
mov
mov
sub
inc
jbe
std
ljmp
int3
fadd
sub
mov
cmpsb
mov
inc
pop
jg
pushf
mov
or
hlt
cwtl
mov
mov
xchg
jmp
clc
arpl
jo
les
jb
push
popa
mov
fidivs
push
sbb
out
clc
enter
clc
push
lret
clc
aad
imul
es
push
sbb
sub
jmp
out
lods
and
mov
scas
pop
pop
cmp
cmc
add
sbb
in
pusha
test
sbb
ds
push
mov
pusha
cmp
out
push
aam
jg
jmp
pop
test
mov
xor
jo
scas
and
lods
inc
sbb
mov
mov
outsl
push
loop
mov
popw
xchg
push
dec
fnstsw
sub
adc
sbb
addb
outsl
cli
mov
jne
popf
test
je
bound
je,pn
ja
sbb
clc
mov
xor
movsb
dec
jp
and
adc
jl
inc
xchg
rorb
imul
cmp
mov
adc
pop
int3
push
or
sar
scas
ljmp
icebp
ss
lock
stc
adc
add
xor
dec
fimuls
mov
movb
xor
adc
out
ljmp
xchg
dec
testb
pushf
mov
sub
or
scas
clc
pop
mov
xchg
sub
and
push
and
mov
sbb
and
dec
movsb
loope
jl
loopne
or
pop
lock
push
std
or
bnd
mov
lock
jl
sbb
nop
mov
ljmp
shlb
mov
push
out
mov
ret
mov
lcall
mov
nop
nop
jnp
push
cmp
inc
cmc
sbb
add
out
pop
mov
int3
jecxz
mov
mov
pop
shl
clc
inc
repnz
mov
inc
and
push
cmp
sub
add
inc
pusha
mov
cmp
out
je
lea
jmp
rol
and
lock
int3
push
das
enter
jg
sub
ret
mov
push
jg
mov
sbb
pusha
xchg
jbe
add
sub
pop
push
pop
inc
pushf
push
adc
fsubs
xor
pop
pop
popa
test
adc
jb
cmp
mov
xor
xchg
call
shlb
jle
pop
sarb
adc
cmp
mov
push
mov
aam
push
push
jnp
sbb
arpl
push
mov
adc
in
add
lods
sbb
sarl
push
dec
popf
clc
add
sbb
lret
dec
and
icebp
jg
xadd
mov
jo
mov
mul
lcall
dec
mov
loopne
incl
jmp
sbb
lods
adc
mov
push
add
xor
out
sub
xchg
fadds
add
pop
in
das
push
push
pushf
jns
cmp
nop
pop
mov
sub
sub
or
repz
mov
push
or
fstpl
mov
nop
lahf
add
mov
test
push
adc
mov
dec
pop
xchg
inc
mov
adc
ss
int
inc
pusha
fisubrl
sbb
cmp
xchg
fcmovb
fcomip
cs
push
jne
cs
std
popf
not
roll
outsb
sub
push
rclb
incl
scas
and
fsubs
rolb
ret
xchg
ret
aad
sbb
or
mov
imull
mov
rcrb
cmc
adc
aaa
sub
pop
push
add
sub
or
xchg
imul
rolb
mov
push
pusha
cmp
jns
mov
add
add
ljmp
out
xor
insb
insb
ds
in
jae
cmp
jb
or
lcall
cwtl
fmul
out
cmp
mov
fadd
jmp
mov
shr
xchg
push
sahf
ljmp
sahf
je
repnz
movsl
test
or
sbb
scas
adc
call
jmp
pop
xor
pop
je
push
icebp
es
and
emms
cmp
std
call
sbb
dec
jae
rolb
in
fnstsw
adc
in
rorl
sbb
xchg
pushl
scas
in
cmp
xor
loop
ljmp
or
hlt
aaa
pushl
sub
sbb
mov
lock
fidivrl
lret
jge
inc
mov
sbb
or
or
int
shr
or
scas
lds
adc
loope
jb
cmp
jmp
ja
iret
mov
loopne
adcb
xchg
test
push
fmull
daa
push
filds
movsl
pop
decl
sub
sub
add
loopne
in
mov
cmp
mov
jmp
repnz
bnd
add
sar
ljmp
and
push
and
inc
xchg
stos
adcl
sub
test
lret
pushl
aad
xchg
mov
mov
idivl
lret
or
and
shr
decl
jge
mov
enter
mov
xor
cwtl
outsl
insb
mov
or
jl
clc
mov
add
inc
adc
icebp
dec
push
lahf
inc
leave
pop
lcall
jmp
lea
mov
pop
inc
shlb
xor
ret
sbb
dec
es
fsubs
lock
jbe
adc
insb
mov
push
mov
dec
mov
cld
add
dec
cmp
push
shrl
clc
xor
push
cs
jg
adc
pop
ds
inc
inc
shrb
insb
loope
loop
ljmp
clc
dec
jg
popl
jno
js
pop
inc
sub
lcall
or
mov
cld
ljmp
push
fadds
rcrl
mov
add
jmp
add
mov
decl
es
pop
sbb
cmpsl
call
mov
jo
flds
mov
push
xor
decl
divl
sub
jecxz
lock
shr
add
inc
imul
add
xor
lcall
jo
rcr
fcoml
add
repz
out
dec
stos
jle
or
lods
call
cld
lcall
xchg
add
sbb
cmp
push
loope
and
lock
test
insb
push
decl
dec
jne
mov
add
xor
add
insb
test
cs
xor
ljmp
movd
pop
cs
xchg
jl
jl
cs
mov
xchg
dec
mov
lcall
mov
stos
jne
clc
mov
mov
push
mov
call
call
xchg
fsubs
jmp
sarb
movsb
mov
incl
xchg
idivb
or
fs
aam
ljmp
cmc
sbb
or
clc
sbb
adc
jmp
sahf
xor
mov
cmp
sub
ljmp
inc
outsb
push
inc
cmp
push
mov
push
cmp
sti
cmp
sbb
mov
cmp
cmp
cltd
imul
fdivl
neg
loopne
mov
xor
les
fldl
stos
adc
aaa
mov
mov
out
outsl
and
mov
lock
les
push
cmp
or
bound
into
mov
pushl
add
aad
adc
je
pop
clc
inc
push
cmp
push
push
or
jnp
pop
insl
mov
and
or
mov
pop
movsl
enter
leave
add
pop
or
shll
scas
test
mov
orb
or
adc
repz
test
aas
jg
lock
push
ret
and
mov
mov
pusha
adc
incl
stc
in
incl
or
add
xor
add
je
nop
aas
aam
decb
or
ljmp
movsb
cmp
pop
add
enter
loopne
mov
and
test
in
xchg
movsb
lcall
pushf
push
xor
cmpsb
sbb
call
add
pop
add
fs
jle
push
aam
or
add
cmp
lcall
xor
or
stos
sub
int3
xchg
xlat
rolb
inc
sub
xor
call
mov
test
push
or
sbb
add
sub
cwtl
xlat
test
mov
decl
inc
push
out
push
jno
add
or
adc
dec
sub
push
andl
pop
sub
incl
sti
lods
neg
jbe
and
rorb
jmp
xorl
sub
push
jp
cmp
mov
or
outsb
in
adc
jnp
add
mov
add
inc
shrl
mov
add
or
pop
cmp
mov
test
call
adc
jge
es
add
dec
inc
scas
mov
mov
push
js
xor
rcrb
call
mull
cmpb
and
pop
loope
push
imul
mov
movsl
push
mov
sar
add
popa
fs
out
arpl
cmpsb
cmp
decl
out
mov
mov
lods
cmpsl
jne
mov
push
add
scas
rcr
adc
pop
add
incb
push
push
fnstsw
sub
push
cli
push
adc
jne
add
mov
pop
pop
xlat
addb
std
lcall
hlt
loope
lea
xchg
dec
shl
in
or
mov
repnz
jg
jg
aam
mov
rcr
pop
gs
pusha
mov
mov
shlb
jmp
pop
mov
ret
pop
addl
mov
testb
pop
das
clc
inc
movb
xor
pop
call
push
mov
cmc
insb
or
cld
test
mov
jmp
insl
shll
movb
xor
daa
mov
or
push
mov
or
inc
xchg
dec
test
mov
push
pop
push
mov
adc
ja
cmp
mov
stos
je
and
lcall
aad
sub
cwtl
xor
jle
lcall
test
pop
or
ljmp
xchg
ret
in
push
adc
pop
lock
fstpt
cmp
jmp
jl
add
cmp
add
jmp
enter
or
arpl
incl
lret
pop
mov
sub
and
sub
pop
pop
lcall
loopne
sub
mov
push
cmp
loope
xor
pushl
pop
cmp
add
sbb
ja
cwtl
addr16
pop
nop
lret
ljmp
ljmp
gs
movsb
orl
mov
or
and
and
push
mov
ljmp
call
sbb
pop
xchg
imul
jge
adc
movb
lea
adc
das
clc
incl
out
sbb
pop
and
inc
iret
mov
push
push
xor
mov
sub
jmp
incl
dec
adc
push
xor
cmp
add
cmp
add
or
sbb
jg
shll
dec
add
subb
adc
adc
pop
sbb
dec
jl
jne
cmp
adc
roll
or
or
cmpsl
adc
aas
daa
mov
mov
clc
leave
cld
dec
in
add
aam
push
out
mov
mov
lret
jb
pop
sbbb
sbb
xchg
push
jno
lret
pushw
pop
push
mov
jnp
insb
jo
ljmp
es
mov
sub
dec
outsl
popa
dec
scas
cmpsl
and
call
test
push
jg
mov
push
out
inc
adc
cmpsl
aam
mov
push
insb
push
mov
mov
inc
mov
ss
jo
enter
jg
lock
clc
cmp
aaa
push
and
cmp
xchg
pop
xor
ja
mov
mov
inc
je
ret
movl
inc
addb
aaa
std
push
pop
xchg
iret
mov
dec
push
dec
mov
out
mov
cmp
pushl
add
push
pop
push
sahf
movsb
inc
sbb
rol
and
loope
dec
decl
add
std
xchg
sbb
sbb
push
or
decl
sti
xchg
sbb
xor
push
test
xchg
mov
fbld
mov
jo
inc
or
adc
mov
xchg
adc
mov
lods
addr16
mul
inc
dec
movsl
negb
fcoms
rclb
fcomip
jg
fbstp
mov
outsl
push
js
add
sbb
pop
ss
or
lret
outsl
mov
adc
xchg
push
mov
push
cltd
stos
call
mov
inc
dec
cmpb
pop
mov
dec
mov
xchg
outsl
push
cmp
xchg
push
or
outsb
sbb
sbb
cmp
repnz
push
sbb
dec
mov
mov
shl
push
sbb
decl
and
push
sahf
xchg
adc
inc
out
push
stos
bound
push
pop
ficoms
jge
decl
xor
push
cmc
out
inc
push
and
inc
cmp
pop
enter
insb
sub
test
inc
sbb
dec
and
and
adc
add
lcall
jg
das
cmpsb
inc
stos
stos
pop
popa
icebp
mov
movsl
push
pusha
scas
fidivl
push
aam
xor
mov
add
pop
cli
decl
movsb
inc
and
pop
mov
das
lcall
mov
add
out
int3
imul
xchg
pop
mov
add
aaa
cld
lcall
pop
mov
mov
inc
bound
repnz
add
and
mov
movsl
jle
sub
inc
push
sbb
cmp
adc
aas
cmc
inc
pop
dec
pushf
adc
dec
dec
adc
inc
call
daa
or
mov
pop
pushl
filds
mov
and
sbb
xlat
jbe
enter
sbb
stos
mov
sbb
sbb
adc
push
mov
jl
pop
dec
push
sub
scas
add
lcall
cmp
mov
mov
adc
subb
je
add
sbb
add
add
fmull
cli
dec
adc
cmp
sub
xor
movq
or
lcall
lcall
add
inc
push
add
dec
cld
xor
decl
adcl
jmp
jne
xchg
sbb
xor
ret
sub
notb
mov
cmpsb
into
dec
clc
push
xor
mov
loop
and
add
or
call
jb
cmp
jl
cld
mov
adcb
jge
or
fdivrs
mov
and
call
ficompl
inc
mov
or
mov
dec
inc
xchg
xchg
nop
call
xor
loopne
gs
inc
loopne
xchg
or
ja
aas
lock
lods
fadds
push
cmpsb
mov
call
mov
je
sbb
inc
call
cmp
jp
push
incl
mov
mov
insl
jl
punpckhdq
inc
pop
les
cltd
add
test
and
mov
cmc
call
loopne
push
mov
fidivrl
in
inc
and
shl
pop
adc
inc
or
lret
stos
pop
pop
mov
incl
xorb
insl
in
fdivr
aas
sti
push
aam
mov
cmp
das
jp
sbb
pop
ds
ret
xchg
push
enter
testl
push
sbb
fimull
xchg
sub
push
loop
shrb
add
js
push
cmpsb
hlt
fldt
lods
jmp
mov
jae
mov
and
cmp
jl
cmp
jge
inc
and
fsubr
mov
loopne
js
ret
iret
jns
jmp
or
dec
mov
lret
adc
sahf
add
cs
adc
mov
std
jg
jbe
adc
icebp
popa
and
cmpsl
inc
and
jno
shrl
call
push
rcll
sar
lock
mov
mov
xchg
mov
xlat
in
dec
hlt
cmp
pop
incl
and
push
sub
arpl
mov
adc
add
decl
adc
push
add
cmp
mov
cs
dec
cmp
jge
sub
pushl
jl
sub
lea
xlat
add
xor
push
pop
pop
xor
add
mov
sti
mov
xchg
push
xor
xor
jecxz
and
jmp
xchg
fidivs
jne
push
inc
scas
mov
cmp
adcb
dec
inc
mov
aaa
cld
cmp
push
in
ficompl
outsb
mov
pop
lcall
out
hlt
hlt
arpl
xlat
sub
dec
or
cmpb
cld
sbb
jmp
sub
aas
add
leave
inc
hlt
mov
sbb
clc
test
push
pop
cmp
mov
stos
sub
aas
xlat
not
and
call
je
mov
jnp,pn
call
cmp
popa
mov
rorl
jl
jle
dec
shlb
incb
push
and
lea
aam
jne
push
pop
decl
ss
or
orl
idiv
xchg
orl
lock
adc
add
sti
fyl2xp1
aas
add
lea
decl
xor
adc
test
adcb
daa
xlat
mov
inc
sbb
mov
xchg
or
loopne
subl
xchg
adc
lea
inc
ljmp
xchg
add
mov
jnp
out
push
outsb
push
je
loopne
sub
dec
mov
and
fistl
cmp
jmp
icebp
xchg
lret
in
fadds
sub
mov
fisubrs
push
das
cli
decl
sbb
adc
lret
fisubl
fstpl
cmp
xchg
jge
jmp
insl
pop
test
mov
sbb
ret
hlt
adc
jns
push
mov
jg
jmp
cmp
leave
roll
sahf
aam
loop
iret
add
add
add
xchg
add
add
pop
mov
mov
lods
inc
mov
insl
test
out
je
dec
xchg
ror
add
cmc
push
pop
jb
stc
out
ljmp
sar
icebp
hlt
test
xorb
stc
hlt
cmpsl
or
push
add
mov
clc
rolb
enter
add
lea
add
decb
and
enter
ljmp
fdiv
jb
mov
cmpsb
add
gs
sub
movsl
aas
mov
jb
fdivr
mov
es
ljmp
jecxz
dec
hlt
adc
push
fistps
adc
mov
push
mov
adc
cmp
adc
cmp
aam
jne
cmp
fcmovb
sub
faddl
add
sub
dec
sub
dec
call
jmp
lock
out
dec
rolb
sbb
inc
mov
mov
cwtl
clc
lock
rcl
int3
mov
add
ljmp
jl
mov
lds
out
adc
clc
xchg
and
jnp
incl
and
xor
xchg
stos
add
inc
add
incl
call
jmp
adc
mov
add
pop
lea
pop
fsubs
cld
jb
push
cmpsl
cltd
sub
adc
xor
cmp
cld
shlb
mov
push
enter
adc
repnz
push
push
cmpsb
add
ret
stos
ljmp
mov
inc
pop
dec
jae
inc
jg
pop
pop
mov
xchg
call
incl
add
jmp
sarb
dec
push
std
jg
test
andl
inc
cli
and
rclb
xchg
cmpb
decl
mov
push
jmp
add
add
xchg
push
mov
lods
mov
in
mul
pop
int3
insl
loopne
out
clc
inc
push
push
dec
popf
adc
fcmovnb
cld
cli
add
push
add
mov
push
or
dec
bound
cltd
and
jbe
inc
add
loopne
ds
xor
subl
divl
rorl
clc
in
cli
lcall
fdivrl
mov
mov
xchg
mov
rcll
pop
icebp
ljmp
mov
cld
ret
xchg
out
inc
or
push
shr
dec
stos
lret
incl
pop
cld
dec
mov
movsb
pop
push
mov
daa
and
or
push
cmp
lcall
loopne
dec
adc
mov
sbb
xor
push
add
not
jge
mov
call
sar
dec
repnz
mov
aaa
mov
imul
inc
jp
add
shrb
mov
push
clc
pop
icebp
jbe,pt
xchg
fdivrl
mov
pop
mov
subl
jmp
test
pop
in
push
cmp
push
xchg
int3
mov
aam
iret
sar
dec
fmuls
outsb
lahf
xchg
inc
decl
testl
cs
push
roll
dec
xor
ret
adc
pop
sahf
andb
fidivrl
addb
cmpl
mov
testb
jle
adc
adc
sub
push
clc
inc
insb
std
jg
push
out
mov
push
sub
cltd
xchg
jp
into
arpl
fmull
pop
cs
das
sarb
fsub
sbb
xor
dec
fidivrl
jg
shl
xchg
arpl
xor
sbb
mov
pop
in
jecxz
scas
dec
push
ljmp
and
orl
push
push
stos
loop
cmp
or
jmp
mov
sub
fcoms
dec
cmp
jo
push
shl
mov
cli
incl
es
xchg
sbb
mov
xorl
or
test
xor
lcall
jnp
ss
jl
je
push
pop
add
loopne
ja
aad
loopne
jg
fistpll
fsubrl
mov
shlb
adc
sub
inc
and
or
push
outsl
mov
mov
enter
or
sub
jbe
jo
mov
add
into
aam
and
jge
data16
imulb
clc
inc
add
push
movsl
pop
test
fsubl
in
jl
add
cs
enter
decl
pop
push
push
sub
lret
stc
shl
out
or
outsb
lea
jae
lds
decl
or
cld
cmp
dec
mov
inc
xor
into
cld
push
mov
and
pop
fisttpl
or
imul
pushl
fmull
jbe
adc
add
loope
dec
or
sbbb
mov
in
aad
cli
push
shll
sbb
mov
xchg
pop
enter
lea
call
repz
cwtl
hlt
jb
sub
xlat
cs
mov
push
xchg
pop
pushf
les
mov
jg
lcall
mov
push
add
cwtl
pop
sarb
push
push
mov
xchg
cltd
sbb
inc
jl
pop
sbbl
loopne
mov
cli
adc
orb
in
mov
push
incl
add
push
nop
push
repz
insl
rcrl
dec
dec
std
ljmp
faddl
sub
or
jge
rorl
and
or
sub
push
xor
call
inc
fsubrs
lret
inc
shl
cmp
enter
js
loop
lea
sbb
decl
add
add
out
rorl
adc
rcrl
jmp
jo
add
jno
sbb
out
rorb
mov
aad
and
add
decl
add
outsb
inc
and
and
roll
pop
and
mov
subl
ljmp
xor
stos
and
insb
dec
cmp
cmp
idiv
ljmp
aad
pop
aam
fildll
out
pop
sbb
shl
mov
adc
dec
and
movsb
pop
fcomip
sti
fsubrs
iret
shr
adc
mov
jb
sbb
dec
fiaddl
rorb
ljmp
push
call
xor
sahf
enter
shrb
ret
aad
or
shlb
insb
xchg
add
ja
and
mov
pop
sub
shll
aaa
mov
jae
mov
movsb
mov
mov
push
lock
dec
adc
fcomps
xor
jge
mov
pop
incb
jns
dec
sbb
adc
mov
arpl
lods
push
or
lcall
and
xchg
and
push
out
loop
mov
aam
add
adc
pusha
or
jp
mov
pop
mov
mov
push
pop
insb
cmp
push
or
adc
lcall
add
adc
f2xm1
loope
fs
cld
sarb
pop
or
int3
mov
mov
mov
data16
xchg
push
outsl
std
psubsb
and
aaa
inc
fs
clc
jle
js
add
ss
into
je
nop
add
int
dec
push
ffreep
pusha
and
fisttps
add
adc
add
mov
mov
iret
rolb
cmp
nop
fstps
loope
call
int3
mov
add
cmp
leave
or
orl
pop
xlat
test
or
push
mov
cmp
cld
jmp
xchg
addl
cmp
jl
lcall
lcall
add
cmp
adc
mov
imul
adc
jmp
enter
addr16
or
rclb
cmp
adc
inc
mov
pop
sub
mov
das
xor
leave
xchg
xor
mov
call
dec
fisubrl
push
and
fisubs
ljmp
mov
insb
mov
cmp
mov
rcll
ss
jmp
mov
subb
or
das
es
clc
xor
dec
mov
push
jno
js
mov
sub
push
add
clc
decl
rclb
cmpsl
cld
xor
ljmp
addl
cmp
lds
into
cmp
xchg
les
cmp
jle
add
lcall
jno
xor
pusha
out
testl
mov
sub
setp
decl
inc
xchg
hlt
push
jo
sahf
sub
lea
mov
fs
sahf
hlt
mov
ret
fcomip
ljmp
xor
lea
inc
js
jg
mov
dec
les
cwtl
call
pushl
adc
inc
mov
cmp
pop
clc
xchg
sbb
inc
mov
mov
sbbb
sbb
mov
out
int3
mov
cli
lcall
fiadds
enter
sub
push
mov
mov
sti
jmp
push
pop
loop
in
scas
pop
sti
xchg
andl
subl
xchg
shrl
ljmp
fidivs
cmp
push
push
cmp
and
lcall
pop
je
push
or
mov
sub
mov
stc
rorb
clc
sarb
mov
outsb
out
clc
jmp
dec
loop
mov
aaa
sub
and
out
cmpsl
ljmp
jmp
dec
aas
cld
push
and
sub
cmp
ds
data16
repnz
pop
xchg
jo
adc
or
rcr
inc
jmp
adc
mov
cmp
loop
pop
inc
fst
mov
jp
je
mov
ja
cs
inc
popa
pop
mov
sbb
or
rcrb
adc
pop
roll
incl
xor
and
in
cmp
cltd
nop
daa
adc
sub
and
adc
cmc
add
cmp
lahf
aam
mov
adcb
mov
mov
mov
xchg
xchg
stos
xchg
insb
xor
push
je
add
cmp
add
pop
mov
and
jo
sbb
loope
inc
je
push
ret
sahf
dec
push
push
push
shll
inc
push
divb
out
mov
adc
push
push
das
sar
sub
inc
sbb
jl
dec
or
cwtl
and
les
andb
dec
push
push
and
mov
dec
xor
push
sub
xchg
cmp
mov
push
or
inc
add
xchg
cmp
push
jg
sahf
out
ljmp
call
outsb
xchg
or
jge
inc
aas
rclb
sbb
mov
shll
decl
jae
add
dec
shrb
orl
adc
mov
add
pushl
cwtl
nop
out
cmp
add
push
in
add
add
add
mov
ss
cmp
cmp
pop
dec
and
in
mov
call
test
xchg
push
jmp
popf
inc
fwait
sub
and
push
mov
cltd
lods
mov
gs
mov
xchg
icebp
pushl
push
pop
add
mov
scas
and
jb
loop
push
xchg
or
xor
fists
in
adc
and
or
pop
push
mov
imul
je
sub
call
int3
dec
jo
xor
or
mulb
push
dec
pop
mov
lea
gs
or
ss
add
je
push
enter
push
dec
cmc
lcall
jmp
adc
imul
dec
xor
lock
or
xor
mov
pushl
in
push
in
lock
nop
xchg
push
or
xor
lock
enter
add
ljmp
mov
push
call
js
mov
inc
xor
cmp
xchg
fs
push
push
jno
ja
decl
mov
aaa
test
adcl
loopne
pop
ljmp
test
incl
in
shl
xor
sbb
dec
adc
mov
adc
adc
enter
out
jo
fdivl
pushf
jmp
push
dec
push
jns
jge
xor
xor
jmp
imul
fsubrs
test
or
sub
nop
loopne
mov
xchg
outsl
jno
movsl
inc
add
in
lock
push
mov
rcl
in
xchg
add
or
jo
je
dec
daa
aam
cmp
sarb
call
jbe
pop
test
icebp
jmp
pop
pop
fmuls
pop
add
dec
lods
les
pop
dec
jo
pop
fldenv
hlt
aas
lahf
jecxz
loop
clc
dec
dec
cld
jns
sar
ljmp
int
lods
add
mov
inc
popf
push
clc
ud0
psubusb
adc
pop
sub
insb
iret
std
add
inc
mov
xor
shlb
dec
pop
mov
orb
push
xchg
push
and
push
add
push
gs
faddl
je
aas
adc
jo
mov
pusha
push
jae
mul
lcall
or
movl
dec
adc
dec
inc
ret
in
xor
push
xor
jle
pusha
addb
sub
adc
jmp
push
and
xor
mov
jmp
iret
mov
lock
in
mov
ja
ret
lock
decl
sub
and
cmp
jge
filds
push
xor
fstl
lcall
mov
push
push
or
out
imul
icebp
xchg
push
icebp
decl
dec
mov
jae
div
push
loopne
lock
sub
inc
push
lock
pusha
je
sar
or
sub
mov
pushf
test
pushl
cld
incl
xor
clc
xor
add
scas
js
ja
jg
movl
mov
mov
jnp
ficompl
mov
xchg
sbb
push
popa
and
incl
jle
insb
and
sbb
dec
jge
ds
outsb
add
xor
add
or
fistpll
or
add
mov
rcr
mov
mov
mov
movsb
mov
push
push
inc
or
sub
xor
lock
flds
pop
pop
clc
jne
repnz
jo
adc
cmp
xchg
shlb
lcall
fcompl
mov
stos
cmc
outsb
pop
lods
sub
inc
inc
xchg
mov
call
mov
cmpsb
or
adc
mov
sub
scas
mov
push
cld
incl
inc
sbb
add
pop
xor
inc
inc
push
or
jg
js
push
sti
mov
push
pop
fadd
mov
cs
xchg
pop
adc
pop
cmc
decl
sarb
inc
sub
jne
fildl
out
imul
lcall
ljmp
fdiv
je
imul
pop
xorl
mov
add
ret
movb
fcoml
fdivp
fucomi
jle
jne
mov
mov
cmp
add
mov
jmp
loopne
pop
xchg
dec
or
and
jg
add
push
or
push
fdivl
or
in
and
xchg
or
add
sbb
incl
cmp
shll
enter
stc
and
sub
push
push
fnstenv
pop
lret
mov
stos
sbb
lea
xchg
sub
ffreep
leave
je
push
push
call
jmp
fcom
cmp
mov
lret
add
mov
jp
jg
jbe
into
movsl
ss
ss
mov
mov
add
imul
and
mov
xchg
sbb
mov
sbb
pop
pushf
add
out
decl
lock
lock
pop
fimuls
jbe
mov
or
adc
ljmp
and
loopne
add
sub
loope
stos
mov
ret
mov
lcall
testb
jne
lcall
test
mov
add
or
jb
or
call
xor
mov
into
js
push
sarb
adc
dec
jle
lea
or
dec
std
push
dec
jmp
and
jecxz
test
add
add
lea
shl
or
cld
inc
lret
xchg
pop
clc
out
mov
or
sub
inc
fistpl
add
add
inc
enter
xchg
shll
xlat
jg
pushl
ret
pop
inc
adc
dec
or
jle
dec
fmuls
jg
adc
test
xchg
mov
fsubrs
jae
add
loopne
adc
cmp
in
inc
mov
or
subl
dec
xor
cli
xchg
imul
cli
decl
dec
sbb
dec
cwtl
push
dec
fdivr
call
fcompl
jne
and
out
cli
dec
inc
sbb
clc
shrb
shlb
mov
and
js
lock
mov
push
lock
hlt
cmp
and
dec
add
cmp
out
ljmp
cli
xchg
decl
ret
and
arpl
sbb
mov
cltd
inc
imul
xchg
dec
inc
add
pop
jnp
subl
pop
xor
xchg
mov
mov
xchg
mov
jp
push
xchg
sbb
sub
inc
clc
dec
aas
pushl
out
mov
sahf
dec
push
push
push
iret
pusha
xor
jb
and
cmp
pop
mov
sub
jmp
int3
stc
adcl
adc
xor
pop
loop
dec
mov
je
push
pop
cli
int
cmp
add
pushl
dec
push
add
sarb
pop
loopne
es
xorb
push
aam
mov
arpl
mov
lcall
adc
cmp
shrb
fcoms
mov
into
nop
add
mov
add
mov
sub
je
jo
xchg
mov
mov
mov
shr
mov
mov
sub
xor
scas
clc
out
enter
mov
sbb
mov
adc
jo
sbb
je
push
xor
push
cs
ret
mov
or
xor
lods
pop
inc
or
dec
mov
je
xor
pop
fs
rcrl
cmpl
sub
mov
lcall
jbe
adcb
xor
add
push
inc
out
and
mov
gs
inc
push
push
clc
call
repnz
xchg
cld
push
ljmp
sub
mov
add
call
insl
clc
pop
sbbl
jae
faddl
sbb
mov
outsl
cli
fnclex
fwait
sub
adc
mov
jecxz
js
data16
rorb
jg
incl
iret
je
into
jne
or
fs
sbbb
xor
cmp
mov
fstpt
int3
mov
xor
inc
pop
push
sbb
out
sub
faddl
and
mov
sub
roll
mov
mov
mov
mov
and
pop
and
stc
add
sub
es
clc
inc
in
aaa
pusha
sbbb
or
fsubl
push
rcrb
push
ret
fucomi
xchg
xor
cld
incl
and
mov
push
jl
in
dec
adc
mov
mov
xchg
bound
and
mov
cli
sub
aam
dec
xor
fcomp
loopne
or
call
hlt
clc
decl
cli
cld
jb
inc
dec
cmp
stc
popf
out
dec
or
adc
cli
jmp
movl
pop
pop
sbb
outsb
jp
std
incl
sbb
call
or
and
or
or
xchg
pushf
fstpl
cmp
add
sbb
mov
add
fnstcw
int3
mov
xor
in
ja
out
sub
pusha
push
add
dec
jle
mov
subb
in
xorl
enter
fisubrl
lods
mov
and
adc
jecxz
or
mov
jns
ds
add
sbb
enter
mov
push
dec
adc
js
push
jl
dec
shlb
mov
jmp
out
inc
fs
imul
push
cmp
fs
fs
fildll
insb
jo
push
es
js
adc
mov
jmp
sub
dec
push
mov
mov
mov
movsb
loopne
cmp
cmp
xor
dec
pusha
xor
in
into
xor
pop
idiv
cmp
pop
mov
and
shlb
pop
movb
jl
fdivs
lock
jbe
mov
ds
sbb
cmp
jp
fdivrl
aam
inc
insb
mov
call
je
mov
xlat
in
pop
adc
enter
xchg
adc
add
sub
mov
icebp
lods
pop
mov
cli
sub
sti
ret
lock
movsb
sub
punpcklwd
adc
cmp
into
sbb
jle
add
sub
loope
pop
mov
pop
hlt
hlt
dec
loopne
ficoml
mov
dec
decl
add
add
inc
push
pop
cld
xchg
sbb
adc
in
lcall
fstpl
cmp
rolb
or
dec
fadds
sbb
call
dec
push
xchg
sub
popa
enter
faddp
or
and
mov
lcall
and
add
ret
inc
nop
inc
pop
adc
push
cltd
stos
pop
cmp
cmpb
mov
ret
sub
push
icebp
push
xlat
sbb
loopne
mov
mov
xor
push
into
or
cmp
mov
pop
push
add
aas
mov
push
push
push
jl
and
pushl
cmp
or
inc
into
xorb
add
adc
dec
loope
outsl
ljmp
adc
leave
out
dec
insb
hlt
fmull
add
adc
push
leave
daa
daa
fildll
add
or
add
add
jo
add
inc
loopne
adc
or
sbb
outsl
or
jle
iret
outsl
les
lcall
decl
lds
ret
xchg
add
incb
lret
xor
add
pushl
add
pushf
add
imul
das
push
les
add
xchg
out
test
decl
dec
lea
sbb
addl
mov
clc
incl
stc
or
or
add
mov
ret
decl
cmp
call
xchg
stos
push
sub
js
cmp
jg
jg
adc
sub
push
adcb
sbb
adc
add
or
lcall
subb
jle
pop
mov
pop
dec
xchg
sub
push
loop
hlt
ret
add
setbe
call
adc
es
pop
fcoms
les
xchg
mov
mov
pushl
aaa
test
lcall
lds
pop
loope
jmp
pop
cmc
sbb
mov
add
addl
mov
sbb
ss
mov
xchg
ja
lahf
inc
pop
or
jne
movswl
pop
inc
fistpll
dec
mov
push
pop
mov
xchg
mov
mull
xchg
lahf
fldt
jmp
popa
pop
testb
or
sti
pop
shrb
or
mov
and
das
pop
mov
push
mov
mov
sub
dec
add
and
aad
mov
sub
mov
fsts
andb
inc
clc
push
mov
scas
cmp
inc
movsl
xchg
mov
mov
cmpsl
and
decl
cs
and
push
sarb
and
jne
pop
pushf
push
ret
pusha
ret
cmpl
out
push
jns
xor
lods
push
mov
sub
mov
lock
repnz
mov
decl
adc
inc
bound
pop
xor
mov
cs
add
hlt
incl
cmpsb
rcll
js
daa
pusha
jno
jecxz
mov
mov
mov
jb
mov
icebp
jmp
adc
push
pop
add
mov
mov
out
ret
cltd
mov
sbb
dec
ret
mov
cmc
imul
and
mov
jge
icebp
mov
push
into
inc
sub
adc
jno
adc
xchg
mov
or
sahf
cltd
mov
in
push
sahf
push
aas
xor
push
lock
lahf
decl
mov
jb,pn
into
out
adc
movsb
add
incl
cld
decl
mov
push
jbe
mov
push
test
nop
cmp
jmp
sbb
inc
xchg
aam
jo
sbb
cltd
mov
add
and
add
call
cld
incl
jo
aas
sub
xchg
bswap
push
fcompl
inc
mov
pop
cmc
pmovmskb
or
clc
jne
pop
push
cwtl
push
out
xor
jne
jmp
movsb
bound
movsb
sbbb
out
add
mov
shr
mov
pop
cmp
push
fcom
orb
sbb
mov
pop
movsl
push
scas
cmc
adc
jl
xchg
jbe
lock
clc
mov
lock
outsb
movsl
mov
cmpsl
je
into
push
outsl
mov
popa
mov
call
dec
xchg
pop
lcall
xor
jb
jmp
mov
xor
sbb
dec
lret
movsl
decl
jge
andb
xchg
lret
lcall
in
enter
and
lret
int3
fmuls
dec
fcomip
sbb
mov
clc
lods
js
xor
cmp
in
mov
adc
inc
jns
pushl
inc
pushl
mov
or
addr16
or
ljmp
sbb
mov
scas
insl
mov
pushf
xchg
aaa
or
sub
push
pusha
add
jg
and
cmp
inc
or
loope
mov
jne
push
inc
es
je
lock
and
push
pop
divb
mull
dec
ss
pusha
inc
jbe
call
ret
lods
stos
xchg
cmp
dec
clc
xchg
and
lret
inc
push
cmp
std
jge
sbb
daa
sar
enter
push
push
adc
enter
es
das
lock
push
in
push
adc
jg
dec
add
movsl
sbb
add
mov
test
cltd
cmp
ljmp
cli
decl
sti
add
pop
pop
jb
clc
mov
jge
add
jmp
add
imul
enter
je
add
stc
and
popa
xchg
jno
lret
shll
sbb
and
cmp
ret
sub
test
dec
mulb
decb
pop
std
pop
icebp
cmp
jbe
push
or
mov
sbb
add
push
xor
incl
cmp
lock
xchg
adc
mov
stos
mov
loopne
push
mov
jmp
add
or
movsb
ret
xchg
daa
jmp
loope
xor
aad
jmp
aad
jg
pop
mov
arpl
orl
mov
adc
in
outsl
lahf
es
jg
push
pop
add
lock
dec
jbe
test
jp
jne
cmpl
xchg
loopne
sbb
ljmp
fsubrl
add
aam
outsb
cmp
movsb
push
incl
pushl
arpl
inc
fnstsw
push
add
fnstsw
xor
lods
dec
je
fildll
push
fcoms
loope
into
mov
xchg
insb
mov
push
mov
call
inc
pop
jl
inc
inc
mov
out
adc
and
mov
add
mov
shrb
jne
mov
and
and
clc
add
icebp
push
fcoms
nop
or
decl
and
or
mov
fsubs
out
xor
adc
push
cmp
in
cwtl
push
sbb
in
lret
inc
cmp
loopne
lcall
sbb
decl
mov
decl
hlt
hlt
sub
adc
mov
jmp
daa
call
inc
xor
mov
inc
and
dec
pop
mov
push
or
jno
incl
decl
popl
mov
pshufw
sub
int3
mov
add
call
pop
pop
shr
pop
push
add
adc
and
jb
dec
pop
incl
xchg
pop
mov
xchg
and
les
xor
int3
test
aam
lcall
or
push
add
leave
mov
repz
fsubs
sbb
push
push
inc
lret
shlb
jecxz
fs
loopne
lcall
aam
add
xor
mov
fmuls
mov
jmp
popa
popa
inc
fsub
mov
fidivs
loope
sbb
cmp
dec
cmp
push
mov
and
ljmp
imul
out
fcmove
pushf
int3
add
cmp
sbb
ljmp
add
pop
out
sbb
addr16
pop
inc
es
ds
mov
add
les
ljmp
cwtl
shl
addr16
mov
inc
mov
mov
add
sub
pop
jmp
test
lcall
sub
pushf
mov
sub
xor
mov
xor
or
sub
pop
pusha
xlat
and
pushl
adc
arpl
adc
dec
sub
add
adc
mov
add
nop
or
lret
sub
pop
or
test
cmp
or
push
outsl
or
mov
push
or
mov
mov
dec
sub
pop
popa
sub
int
push
pop
fwait
mov
lea
or
dec
jg
enter
ljmp
rolb
xchg
incw
mov
imul
incl
std
decl
inc
mov
jns
pusha
aam
rolb
sub
push
sar
call
lret
pop
and
mov
sub
aam
fneni(8087
xchg
sub
pop
addr16
xchg
int
arpl
jbe
jg
lcall
jo
inc
sti
sti
mov
mov
stos
incl
cmp
out
jns
andl
or
movsb
inc
fisubs
stos
cmp
jne
das
sar
mov
and
rolb
in
lods
xchg
out
scas
lock
das
cli
es
mov
push
mov
mov
cltd
aas
hlt
mov
test
stos
repnz
lcall
sbb
movsl
xchg
ss
popa
test
stos
jp
xchg
ret
lahf
imul
call
das
add
mov
or
mov
and
inc
sahf
call
sbb
xchg
out
sbb
fdiv
and
movsl
push
pop
es
sub
imul
int3
sahf
cli
xor
add
es
cs
or
jae
pop
cs
push
out
testb
and
xchg
sbb
jbe
adc
mov
shl
call
cmpsl
lock
inc
lret
mov
mov
adc
xchg
and
enter
jp
fmuls
pop
push
adc
push
clc
add
fcoms
lock
out
sub
decl
subb
aam
add
inc
jmp
in
add
int
and
sub
mov
ja
push
push
aaa
or
lahf
clc
hlt
mov
test
sub
dec
lret
mov
pushl
and
sub
and
cs
adc
mov
mov
mov
enter
jecxz
out
or
sarb
int3
pushf
popf
call
mov
test
ja
inc
and
lock
mov
add
sub
jle
xor
mov
outsl
jo
inc
dec
pop
shrl
jmp
les
pop
lea
or
xor
je
icebp
inc
xor
push
push
repnz
ljmp
xor
movl
inc
xor
inc
cmp
lods
cwtl
call
lcall
cmp
adc
roll
mov
mov
lods
pop
lods
mov
push
mov
decl
pushf
mov
and
imul
lods
xlat
push
into
dec
mov
arpl
bound
push
inc
or
inc
xor
sbbb
sbb
xor
mov
xchg
movl
pushf
sbb
arpl
add
inc
imul
adcl
or
xchg
or
decl
push
add
add
inc
jmp
and
push
add
ljmp
sbbb
xchg
pop
jns
std
incl
mov
and
dec
mov
hlt
decl
pushl
and
pop
mov
and
lds
mov
decl
ret
icebp
xchg
xor
sbb
sbb
mov
pushl
aam
pop
or
add
xchg
xchg
add
ljmp
adc
pop
rclb
cmp
fiaddl
adc
incl
out
jo
ds
xchg
push
sbb
mov
jmp
push
rclb
cwtl
add
fsubl
loop
out
movsb
dec
cmp
lods
scas
mov
dec
test
adc
incl
push
popf
test
lods
ja
sub
pusha
lods
lods
sbb
jo
cs
test
test
aaa
cmp
clc
cli
mov
popa
adc
lahf
in
lahf
fs
decl
sar
add
ds
add
sub
or
mov
mov
jecxz
pushl
fbld
mov
jo
and
das
mov
incl
rorb
pusha
ss
mov
shll
test
mov
inc
xlat
js
and
push
inc
add
inc
inc
insb
push
pop
incl
cmp
or
mov
and
and
in
add
mov
jne
xor
pop
movsl
inc
sbb
cwtl
movsl
addr16
push
mov
into
mov
ret
or
pop
decl
sbbb
lds
lret
nop
movsl
test
pop
or
mov
fwait
fwait
or
add
mov
xor
inc
rclb
or
mov
iret
out
inc
nopl
add
adc
fwait
lods
push
xorl
outsb
lods
mov
fsubl
call
inc
mov
adc
je
dec
jle
mov
clc
push
add
mov
lcall
lods
lret
loopne
pop
cmp
jle
sub
mov
daa
stos
xchg
mov
incl
leave
xchg
xchg
shlb
xor
xor
jp
or
int
jecxz
lcall
cmp
xchg
xor
rcll
pop
dec
rolb
inc
add
add
mov
sbb
mov
dec
int
mov
fiaddl
pusha
incl
add
lods
rclb
movb
aaa
in
add
add
push
sub
cld
push
push
in
test
nop
popa
andl
jno
addb
push
sbb
sbb
inc
sbb
fucomi
sub
xor
inc
mov
mov
pop
ljmp
and
mov
rorb
nop
xor
cmp
inc
sbb
dec
dec
mov
dec
lret
pop
fs
mov
test
mov
cltd
xchg
jb
pushf
or
decl
inc
mov
inc
insb
add
pop
out
movb
dec
int3
and
or
ror
call
out
inc
push
fmull
cld
dec
daa
sbb
insl
cmp
jae
in
mov
inc
inc
test
add
ljmp
daa
in
xor
sbb
push
push
mov
idivb
fildll
add
in
or
jmp
sub
jl
pusha
subl
add
xchg
decl
int3
pop
pop
add
repnz
clc
push
and
xor
mov
pop
adc
pop
mov
jmp
dec
andb
push
or
shll
jb
jge
xchg
mov
fstl
adc
jg
fwait
inc
mov
push
add
add
mov
mov
sub
les
cmpps
inc
jmp
or
inc
adc
inc
stos
pop
ss
adc
inc
sbb
push
popf
fdivl
push
sub
pushl
cld
cwtl
cmp
mov
les
sbb
mov
push
mov
adc
sbb
sbb
xor
add
in
xchg
pop
xchg
dec
mov
decl
mov
mov
adc
xchg
mov
push
inc
add
rclb
adc
fcomps
inc
sbb
dec
and
xor
and
mov
inc
cmp
inc
mov
aaa
ja
test
ljmp
lds
faddp
out
or
adc
call
icebp
or
adc
adc
xchg
pop
cmp
add
mov
loope
adc
lcall
push
fidivl
xor
fsubs
rorb
insb
pop
mov
add
and
call
mov
add
lods
sub
stc
in
sbb
push
pushf
sqrtps
xor
cltd
sahf
cld
setae
and
sub
enter
adc
and
cmp
adc
incl
fisubrl
lock
and
push
mov
adc
aam
rol
adc
out
data16
xchg
fmul
rcr
incl
and
inc
mov
cli
aad
lcall
test
es
adc
and
popa
mov
push
nop
jecxz
fs
aas
push
lret
pop
loope
cmp
cmp
call
mov
push
push
rolb
lea
cs
or
push
sbb
mov
push
fldl
cld
sub
pop
jmp
pop
xchg
mov
and
andl
pop
lock
repnz
adc
pop
int3
inc
iret
add
imul
cmp
push
push
push
hlt
in
es
lock
orl
enter
addl
pop
scas
ffreep
adc
in
mov
sub
mov
jg
jo
mov
or
mov
int
test
loop
adc
adc
call
loope
inc
popf
mov
lods
test
push
shlb
aam
or
dec
pop
nop
adc
stc
addr16
rolb
dec
leave
loopne
pop
lret
popa
shr
inc
sub
cmp
imul
in
xchg
test
inc
fcoms
cmp
xchg
cmpsb
mov
mov
out
fdivl
ret
fsubr
fdivl
out
mulb
xorl
xor
sbb
stos
or
jg
xchg
jl
add
cmp
inc
dec
adc
mov
push
orb
ret
lods
push
out
sti
jmp
sub
lcall
mov
enter
insb
or
dec
sub
push
pop
dec
aaa
or
inc
nop
add
stos
pop
add
insb
xchg
add
mov
xor
pop
jae
jo
out
outsb
xor
sti
pushf
push
in
enter
fwait
fs
inc
or
or
leave
shll
or
xlat
int3
sbb
mov
ja
outsl
je
push
stos
mov
adc
les
sub
insb
pusha
ljmp
clc
jmp
cs
jno
int3
movsl
cs
rorb
xchg
movsl
mov
mov
jae
or
push
flds
stos
mov
mov
and
jg
inc
pop
mov
inc
mov
cmc
or
inc
push
or
dec
or
adc
jo
and
movb
stos
inc
inc
rcl
or
call
leave
dec
roll
cmp
mov
aas
push
jp
mov
pusha
mov
fstp
sahf
pop
jmp
lcall
push
jecxz
test
in
sub
cmpl
sbb
mov
cmp
jg
sub
dec
jne
push
int3
pushl
sbb
leave
fdivrs
sbb
adc
inc
js
sbb
lea
pop
push
ljmp
syscall
jl
pushl
or
mov
jl
pop
cmp
adc
push
imul
je
jecxz
pushl
faddl
fcomps
dec
lds
sub
add
dec
and
inc
inc
lcall
add
add
xlat
xor
xchg
pop
mov
fucomp
sbb
or
pushl
testl
fadd
pop
cmc
and
jns
dec
cmpsl
push
or
movsb
inc
xchg
adc
adc
sbb
push
and
jne
xchg
or
out
sahf
push
mov
ljmp
mov
loopne
mov
mov
mov
adc
jecxz
push
lret
adc
les
int3
testl
xchg
add
mov
pop
and
test
std
mov
stos
ljmp
rolb
hlt
iret
push
mov
sub
push
hlt
pop
cmpl
clc
js
xorl
sub
test
and
in
sub
cmp
std
fcomps
imul
and
push
push
leave
push
lret
xchg
cmpl
cs
pop
in
push
mov
cmp
push
add
into
mov
mov
int3
imul
adc
add
or
push
bound
dec
decl
inc
push
pop
xor
hlt
sub
jp
rolb
or
pop
add
cmpl
lock
dec
lock
incl
xor
mov
orb
dec
nop
aaa
xchg
pop
lock
dec
jl
jmp
lcall
andb
testb
pop
inc
cld
jne
ds
cmp
je
in
mov
clc
or
push
jns
cmpsl
dec
add
adc
lret
mov
sbbb
dec
jb
dec
fimull
and
test
lock
adc
ljmp
rcrb
les
jae
add
shl
xlat
aam
ja
jmp
loop
cli
jb
test
dec
leave
in
test
aaa
into
add
add
add
mov
jle
cmp
jb
loopne
shll
adc
add
int3
enter
in
ljmp
and
mov
call
mov
cli
popf
fsubr
mov
and
dec
add
or
push
shrb
dec
and
sub
aas
add
inc
xchg
mov
jb
or
decl
push
outsb
popa
mov
mov
lret
push
pusha
add
or
stc
xor
jb
cmp
lock
push
pop
adcb
ds
mov
mov
jb
add
insb
repnz
andl
and
jns
jmp
sbb
mov
add
jle
pop
and
or
pop
xchg
add
jg
adc
inc
in
xor
stc
icebp
and
mov
add
cmp
lock
decl
test
shrl
mov
fisttpll
inc
clc
dec
loop
ret
push
jp
and
call
in
adc
adc
push
iret
inc
adc
push
fcoml
or
test
jb
sub
and
or
inc
in
jae
xchg
rclb
dec
rclb
sub
add
ret
dec
out
sub
sbb
loopne
mov
andl
cmp
pop
xchg
movsb
rolb
jno
inc
imul
jg
dec
mov
add
pop
sub
xor
push
mov
sub
push
adc
mov
outsb
lret
int3
sub
mov
or
das
xchg
add
mov
xor
and
jb
insl
clc
imul
jge
add
add
jae
inc
add
jle
js
sbb
call
push
mov
jmp
inc
jne
cmp
iret
test
mov
mov
nop
in
and
ss
cli
loopne
sar
ljmp
jp
and
push
sub
mov
adc
jmp
ret
sub
out
jle
je
pop
outsb
xchg
out
jns
mov
sub
shrl
lcall
pop
pop
lea
mov
or
add
mov
ja
adc
sub
nop
lret
push
and
xchg
mov
aas
push
sub
add
cmp
sub
cld
push
xor
jb
fdivs
and
adc
adc
push
jns
pop
xchg
mov
incl
cmpsb
out
data16
mov
xor
mov
call
adc
cmp
xchg
call
sbb
lea
inc
cs
pusha
mov
jg
xchg
cld
jo
and
xor
stos
iret
adc
add
cli
pop
hlt
in
lret
fsub
mov
fcoms
mov
movl
bound
xorb
mov
xor
clc
orb
xor
cmp
pop
jne
ljmp
adc
push
add
inc
or
push
push
mov
gs
ljmp
mov
cmp
jecxz
xchg
add
test
sbb
pushl
loope
scas
xchg
scas
add
movsb
sti
sub
dec
ror
pop
cmp
cmp
test
inc
clc
push
push
pushl
test
pop
mov
addb
push
adc
fcmovu
in
cld
subl
in
neg
sub
ljmp
fdivl
sbb
fidivl
call
aad
in
sbb
add
je
out
hlt
pushf
dec
and
pop
mov
clc
push
sti
jno
mov
push
push
idiv
push
or
push
inc
mov
mov
xchg
cwtl
push
push
cmc
xor
sub
call
jl
lock
sub
sub
push
dec
mov
pushl
add
push
push
aas
imul
xor
repnz
pushl
sub
xor
xchg
lret
xor
repnz
stos
ret
lods
ja
fsub
loopne
icebp
lock
xchg
fcompl
pusha
inc
xchg
orb
ret
test
or
jno
add
jmp
push
outsb
aam
lea
or
test
mov
pushf
pop
pushl
lahf
mov
and
push
imul
testb
cwtl
add
xchg
decl
repnz
sarb
repnz
test
inc
les
into
mov
hlt
cmpw
mov
in
cltd
ss
sbbl
mov
jge
es
inc
das
imul
mov
add
test
mov
add
cwtl
nop
push
jne
jg
in
xchg
xor
hlt
jne
incl
adc
xchg
jne
dec
nop
adcb
xor
decl
sbb
mov
aas
mov
dec
pop
movsb
inc
nop
mov
add
cmpsb
lds
jmp
pop
add
pop
mov
pusha
push
lcall
jp
int
call
loopne
xor
in
aaa
sub
insb
add
int3
mov
sarl
imul
pushf
sub
ret
push
dec
mov
mov
xor
pop
dec
outsb
sbb
loop
js
leave
insb
push
inc
cltd
mov
inc
sub
push
lcall
mov
jne
loope
mov
mov
incb
hlt
decl
push
lret
in
mov
movsb
jg
jg
or
jnp
ret
ss
daa
aad
inc
push
cmpsl
mov
ja
hlt
xchg
or
incl
out
loopne
shll
add
loopne
lock
pushf
ret
xor
dec
and
cmpl
inc
lea
and
adc
or
or
cmp
xor
cmc
fcoms
in
cs
imul
lock
jmp
push
sub
nop
push
mov
dec
inc
fcomip
shll
insl
jmp
fiaddl
icebp
sbb
inc
cmpsb
mov
leave
xor
xchg
jg
xor
in
or
xor
ja
test
xchg
out
mov
inc
add
cmp
sub
cs
in
into
mov
pop
pushf
add
aaa
cwtl
call
jmp
mull
mull
push
sbb
dec
sbb
aam
jns
pop
icebp
pop
aam
aam
push
xchg
push
movsl
and
cwtl
rol
lds
leave
fcom
rcl
adc
jle
lea
testl
ror
and
pop
xchg
clc
mov
xchg
int3
push
call
movl
dec
or
and
fwait
stos
adc
lret
mov
mov
xorl
lock
lcall
cmp
fs
and
cmpl
push
popa
lahf
and
add
sbb
jmp
add
mov
loopne
daa
test
enter
cmp
movsl
add
cmp
enter
pop
stos
dec
popa
push
xchg
fisttpll
lcall
and
lret
add
jo
rorl
loopne
mov
jno
ss
vpunpckhdq
popa
or
sar
decl
lock
xor
jno
xchg
addl
je
sub
push
add
xor
jne
xor
sbb
decl
push
jmp
lea
nop
adc
in
push
xor
push
xchg
mov
pushf
inc
pop
pop
or
or
into
xor
pop
push
jne
jle
into
add
mov
inc
in
add
mov
pop
mov
and
rcrl
add
pop
insb
adc
js
jmp
mov
mov
inc
or
adc
leave
rcrb
jmp
xchg
add
lcall
roll
nop
dec
sahf
mov
imul
loop
and
call
hlt
mov
std
mov
fidivs
stos
add
xor
push
lock
imull
push
call
sub
xchg
cmp
mov
jecxz,pt
jae
movsl
cmp
sub
xchg
sar
test
and
mov
cmp
lcall
arpl
inc
js
adc
dec
ret
mov
sub
jne
push
and
jbe
push
sbb
incl
or
movsb
cs
daa
pop
cld
adc
xchg
and
and
fs
push
addl
sub
test
call
fisttpll
and
xor
ret
lea
les
lods
fcmovnb
cli
and
sar
test
shlb
push
ds
cmpsl
pop
cld
lods
test
xorb
ljmp
je
jbe
cmp
jle
mov
fwait
cmp
out
jbe
mov
add
add
xor
iret
mov
and
pop
hlt
lcall
insl
mov
push
cmp
sub
fildll
or
or
repnz
inc
aaa
adc
test
and
mov
ret
inc
ss
decl
mov
cmp
ret
and
out
push
lock
xchg
aam
sbb
pushl
push
push
ja
outsl
fildll
push
inc
add
jne
mov
or
popa
shrb
loope
hlt
or
add
add
in
push
addb
call
or
mov
lods
orb
repnz
jbe
std
sub
stos
mov
xor
lcall
sbb
nop
pop
mov
pop
jbe
adc
add
mov
inc
jmp
jmp
clc
lea
mov
mov
and
mov
and
add
pushl
je
dec
rcl
xor
roll
clc
cmp
push
packuswb
fistpll
cmc
xchg
inc
add
fbstp
test
mov
add
in
xchg
lods
lcall
xor
push
cmpsb
ss
test
popf
fisubl
mov
fisttpl
cmc
call
pop
dec
xchg
orl
adc
push
fbld
lea
jle
fdivrl
push
xor
push
icebp
push
call
lcall
push
mov
sbb
je
fwait
mov
rolb
jbe
sub
sbb
sar
mov
dec
or
inc
adc
push
and
movsb
xor
adc
mov
imul
inc
popf
mov
mov
push
push
fiadds
fwait
mov
rclb
pushf
ja
xlat
addb
pushf
out
pushl
mov
and
sub
adc
xchg
mov
lcall
fistl
inc
sbb
outsb
imul
call
neg
pusha
ret
lock
ja
data16
mov
bound
inc
and
jns
prefetcht2
dec
call
add
jge
out
mov
cwtl
sbb
adc
inc
mov
jl
dec
cmp
pop
std
jmp
and
or
xor
sarb
and
mov
mov
xchg
pop
aam
push
sbbb
adc
adc
mov
jns
icebp
pop
push
adc
testl
inc
pop
ds
mov
adc
mov
dec
lahf
jmp
mov
imul
inc
hlt
push
dec
xor
test
in
fnsave
xchg
decl
cli
je
jo
cmp
mov
cs
jo
pusha
and
pop
mov
jl
sbb
mov
repz
jl
cmp
je
pop
sbb
inc
jnp
fisubrl
incl
inc
mov
test
aam
dec
ret
lret
mov
push
sbb
pop
call
and
push
pop
ret
lea
lahf
pop
movsl
or
add
andb
add
adc
imul
cmp
add
pop
pop
sbb
inc
fdivr
jmp
add
fsubrl
jns
adc
dec
rorb
pushw
push
fisubs
push
jg
mov
mov
cmp
je
pop
cmp
aas
insb
and
fs
and
mov
imul
xchg
mov
or
arpl
mov
or
decl
fisttpl
fidivs
xchg
scas
in
mov
fs
push
or
adc
incl
xchg
scas
or
mov
fisttps
dec
je
dec
cmp
fnstcw
mov
mov
jmp
sub
call
mulb
dec
decl
mov
js
pusha
into
mov
mov
pushf
push
inc
cmpsb
imul
clc
clc
and
sub
cmp
xlat
imul
push
dec
loopne
rcl
repz
loop
dec
mov
cmc
add
add
std
fxch
lahf
lods
inc
lahf
lds
push
orl
and
inc
dec
call
loopne
inc
inc
add
loope
out
inc
out
mov
ret
fwait
mov
ljmp
or
adc
addb
jg
dec
cmp
insb
incl
mov
adcb
and
mov
or
pop
sub
push
xchg
xchg
push
mov
mov
aad
inc
inc
mov
pop
jo
or
je
cmp
inc
std
movsb
gs
mov
mov
cs
pushf
mov
push
pop
sbb
gs
xchg
or
xchg
push
insb
cmp
call
mov
jno
cwtl
mov
loopne
stos
sbb
mov
js
sub
pushl
enter
aaa
push
pop
pop
and
sub
mov
and
adc
repnz
decl
es
add
pusha
lret
cmp
inc
sub
or
mov
pop
inc
test
lcall
aaa
mov
and
push
arpl
popa
and
test
addr16
push
add
sbb
sbb
das
sar
outsb
test
add
dec
add
pop
adcl
sar
incl
cltd
mov
mov
mov
shll
rol
aaa
jp
jp
scas
push
clc
call
push
test
loopne
repz
ss
or
sbb
call
pop
ljmp
outsl
and
pop
movl
and
xchg
movsb
pop
shrl
mov
dec
sarb
push
jns
sbb
jle
sub
sub
decl
xchg
jne
cmp
jmp
jle
insb
inc
cmp
incl
jb,pt
add
fmuls
add
mov
mov
loopne
adc
fwait
pop
sub
jo
je
test
push
ja
push
or
mov
fcomip
or
sub
dec
loope
repz
cwtl
mov
and
sub
mov
cld
dec
push
mov
arpl
push
cmpl
ljmp
adc
aas
or
and
dec
push
loope
xchg
es
into
test
ret
shlb
incl
or
push
insl
mov
inc
push
jmp
push
psubusb
movsb
lret
adc
mov
xor
call
scas
or
mov
ret
sub
cmovle
stos
adc
or
aas
inc
sub
ljmp
sti
loop
push
inc
dec
incl
jmp
sbb
and
orl
lds
jmp
pop
popa
adc
inc
mov
cs
cs
push
or
imul
xor
das
inc
ljmp
jne
fistl
xor
mov
push
pushf
inc
je
jnp
stc
cmpsb
je
mov
or
clc
or
cmp
loop
bound
pop
or
lret
adc
bound
mov
jg
or
xchg
sub
jo
add
xchg
sub
in
and
xor
push
adc
xor
and
cli
stc
inc
dec
and
and
adc
xchg
add
incl
pop
data16
inc
cltd
divb
xchg
mov
inc
mov
aam
xor
int
ljmp
rorb
pop
xchg
mov
push
and
or
and
sbb
sub
movsl
fcmovnb
inc
pop
adc
add
mov
das
in
xor
clc
pop
shll
stc
sub
cmp
xchg
lock
les
xchg
shlb
push
in
outsl
cli
incl
mov
in
push
add
lea
pop
add
lahf
and
loope
sub
rorl
and
cmp
jge
aad
mov
push
xor
inc
sbb
pushf
sub
inc
in
inc
call
push
cs
mov
cltd
je
mov
rclb
add
pop
xor
add
call
jnp
aas
mov
gs
sbb
movsl
popf
xorl
push
lods
hlt
add
xor
adc
data16
mov
lret
inc
and
adc
imul
adc
lcall
loopne
loopne
sub
ljmp
imul
inc
xchg
push
dec
mov
inc
add
ljmp
mov
call
aaa
push
repnz
stos
mov
sub
lock
jl
xor
adc
xchg
aaa
add
out
ljmp
xor
jno
and
mov
mov
jl
jo
pushf
mov
lds
shlb
jmp
rclb
pushl
push
enter
lret
mov
dec
hlt
sub
jl
dec
jne
adc
push
jmp
pop
xor
arpl
arpl
jbe
jl
mov
aam
fadds
loope
xchg
lcall
cwtl
dec
xchg
adc
imul
and
mov
gs
pop
pop
jg
dec
push
mov
mov
pop
xchg
lea
stos
push
sub
fwait
orl
mov
push
cmp
cmpsb
cmp
in
cld
lcall
cmp
dec
xor
xchg
lahf
mov
js
ljmp
int3
push
mov
jge
sbb
push
mov
dec
les
mov
sub
mov
jg
add
and
push
int3
jp
xor
jne
pushl
clc
mov
pop
mov
or
clc
jmp
movsb
sarb
jo
cmpsb
sub
mov
into
push
jmp
inc
xor
lcall
test
mov
pop
mov
in
and
popa
mov
pop
in
push
dec
mov
idivl
sbb
mov
lea
cmpsl
dec
or
mov
add
imul
test
jg
pushl
and
loope
cmp
mov
pop
sti
xor
loope
dec
inc
pop
push
add
mov
xor
mov
stos
insb
mov
push
and
or
push
lcall
ljmp
push
cmp
mov
cmp
xchg
ljmp
mov
push
mov
stos
sbb
jb
xor
mov
adc
adc
fstl
push
add
test
jg
jmp
dec
xor
pusha
sub
mov
loopne
std
xor
cld
add
add
nop
mov
adc
pop
ja
ljmp
sub
push
dec
jne
sti
inc
xchg
int
std
in
adc
mov
sahf
xor
lcall
jmp
xchg
sbb
jns
xor
pop
sub
enter
jge
scas
call
lock
stos
movsl
sbb
out
add
mov
dec
repz
inc
or
movsl
jge
xor
add
scas
add
fstps
xchg
rolb
push
in
jecxz
sbb
jg
decl
push
cmp
imul
shlb
notb
pop
cmpsb
cmc
in
mov
out
cli
inc
and
pop
add
mov
push
xorb
ret
push
inc
xchg
sbb
mov
push
out
or
rolb
cmp
aad
pop
aaa
pop
xchg
call
shrb
xor
data16
inc
jo
cmp
ds
je
push
arpl
jp
cwtl
xchg
jp
je
out
pop
inc
dec
sarb
xor
inc
in
adc
out
adc
push
cld
cmpsb
xor
inc
lret
push
out
test
ja
inc
add
incl
add
cmp
pusha
rorb
cmp
mov
scas
xor
adc
cld
mov
mov
xor
or
lret
cmpsb
call
inc
shlb
mov
mov
push
push
add
dec
pop
cwtl
sub
inc
inc
push
sbb
test
daa
pushf
call
push
sbb
clc
or
xor
dec
jle
lcall
jecxz
inc
ljmp
sbb
cmp
call
push
loope
inc
in
pop
push
pusha
inc
sbb
and
adc
shlb
mov
add
pop
incl
pop
jns
ja
push
sbb
mov
sub
xchg
inc
sub
addr16
mov
ret
scas
cli
icebp
movsb
andb
js
push
add
mov
add
jmp
testb
and
push
clc
lcall
jg
cli
push
hlt
in
mov
dec
iret
or
or
insl
sub
mov
inc
jle
mov
xchg
cmp
jl
push
cmp
mov
inc
dec
pop
jmp
dec
and
or
mov
pop
push
sub
movsl
adc
stos
iret
xchg
add
movb
idiv
push
mov
push
xchg
mov
fs
roll
incl
mov
shrl
fisttps
fucomi
sub
pop
dec
imul
or
or
ja
roll
add
xchg
das
xchg
mov
push
enter
inc
das
addl
adc
outsl
subl
enter
inc
jmp
sbb
and
push
adc
sbb
push
jle
popa
fldcw
incl
or
xchg
sub
mov
pop
js
nop
das
and
dec
mov
call
loopne
lret
popa
sbb
notb
mov
enter
aaa
iret
pushl
sbb
adc
adc
pop
adc
sbb
mov
cmp
cmpsl
sbb
push
jmp
es
ficomps
sub
push
xchg
nop
xchg
sbb
jmp
jp
shl
sub
adc
or
call
popf
mov
xor
xorl
divb
mov
mov
mov
fcmovnu
xchg
gs
sub
les
incl
fmuls
ret
fisubrl
add
pop
pop
std
push
mov
sub
outsb
cmp
addl
call
js
inc
and
adc
mov
mov
rclb
sbb
enter
mov
int3
icebp
mov
mov
or
or
clc
testl
lcall
xchg
sahf
dec
sub
aad
adc
imul
jl,pn
test
leave
push
mov
rol
scas
jmp
xchg
push
outsl
loope
adcl
cmp
sub
test
mov
call
push
std
loopne
cmpb
add
cmp
mov
cmpsb
xor
insb
push
movsb
imul
push
cmp
add
adc
inc
loope
lea
dec
sbb
jne
mov
push
mov
decl
or
push
mov
push
subb
dec
and
mov
jl
adc
or
sub
lock
call
jp
mov
cs
inc
clc
clc
sbb
sarl
test
lcall
js
and
adc
cmp
shrl
sub
and
pop
mov
ss
sub
pop
sub
sub
mov
jno
outsl
and
jg
out
push
ja
adc
cwtl
adcb
fcomps
insb
dec
mov
jg
jmp
cmp
add
into
or
mov
add
mov
call
inc
popf
imul
ljmp
mov
rcrb
cwtl
and
cmp
fdivp
xor
fstps
mov
ljmp
mov
jmp
xorb
loope
cmp
sub
jne
cmp
setbe
inc
jmp
setle
ja
or
mov
orl
mov
test
repz
mov
sbb
ja
fwait
popa
dec
sub
adc
push
inc
je
test
pushl
pusha
inc
bound
mov
xchg
pop
adc
bound
pop
insl
dec
mov
popf
mov
pushl
mov
fidivs
dec
cmp
es
adc
jge
sar
call
bound
jne
pop
jbe
pop
mov
jo
inc
add
fisttpll
cmp
pushl
fnsave
fnstcw
xor
int
clc
xor
mov
xchg
push
inc
cld
std
xchg
push
scas
loopne
jg
mov
pusha
adcb
xchg
sub
pop
inc
or
lahf
das
rorl
mov
push
lcall
fsubl
outsb
sbb
jne
fnstenv
xchg
pusha
adc
cmp
xchg
in
cs
sub
scas
or
and
sbb
sub
pop
jge
xchg
or
in
les
fmuls
loopne
fildl
pop
sbb
pop
push
adc
jmp
xor
data16
in
mov
lcall
mov
mov
push
ret
and
cld
or
mov
pop
add
cmpsb
dec
lret
jg
cmc
out
jo
mov
std
inc
mov
shl
or
lcall
out
popa
cmp
mov
mov
fcmovnbe
sbb
lods
das
fnsave
in
into
faddl
lods
test
sar
mov
sub
mov
stc
sub
jmp
pop
out
inc
das
adc
loopne
xchg
mov
loopne
stos
xlat
sahf
ljmp
pop
pop
call
push
fnstenv
jne
add
jl
movhps
mov
fcomip
outsl
jmp
das
int
dec
dec
pop
cmpsb
and
lock
pop
sub
adc
sar
adcl
adc
sub
mov
dec
addb
xor
mov
adc
addl
xchg
and
jle
pop
fildl
add
xchg
xor
inc
jmp
add
sbb
cmpsb
inc
stc
cli
test
add
loop
pop
inc
dec
je
lcall
push
test
stos
shlb
xchg
inc
inc
xorb
jbe
dec
shrb
lock
outsb
sbb
sbb
cmp
test
imul
push
mov
jmp
push
adc
cmp
or
mov
xor
xor
adc
jno
into
xor
es
mov
adc
scas
in
cmp
loope
stc
xorl
push
jp
cmc
out
popa
and
push
pop
push
adc
jg
or
loopne
add
stos
dec
mov
cwtl
add
dec
out
push
cmp
inc
fsub
or
addb
xor
cmp
push
push
mov
pop
js
fisttps
mov
jmp
xor
push
jl
aaa
push
pop
sbb
test
mov
dec
inc
and
jmp
inc
fstps
movsb
outsl
xchg
mov
xor
jbe
adc
or
jl
stos
push
lret
shl
pushl
lods
mov
add
aam
sbbb
movsb
xor
add
hlt
in
mov
fdivl
mov
ret
fdivl
sub
lea
dec
or
into
and
cmp
and
call
mull
pop
mov
testb
sbb
mov
hlt
inc
shlb
jmp
cltd
test
clc
sbb
xor
push
xor
mov
mov
incl
xchg
call
push
insl
ss
xor
rcrb
lcall
xchg
mov
mov
inc
out
mov
sub
shrl
imul
dec
mov
inc
rorb
lock
test
mov
das
mov
push
std
out
xor
jb
jmp
iret
sbb
mov
xchg
pop
loopne
fwait
xchg
mov
enter
mov
enter
incl
repz
add
or
and
xchg
jno
jbe
shlb
loopne
shlb
ljmp
adc
repz
ds
movsb
push
push
push
xchg
rol
std
cmp
or
imul
xor
mov
cld
dec
loopne
stos
inc
ss
mov
or
or
push
add
push
jne
or
add
ja
call
pop
mov
adc
jl
or
jle
xchg
and
add
push
sbb
outsb
adc
fadd
cmp
out
aas
inc
adc
adc
daa
pop
jecxz
fildl
pushf
push
adc
or
ss
adcl
pushl
jnp
cmp
xchg
clc
cmc
adc
pop
imul
mov
sbb
add
call
pop
das
je
mov
sbb
add
mov
or
add
pushl
sbb
fbstp
add
push
pop
jo
popa
in
lahf
je
xor
jg
xor
sbb
decb
ja
adc
jg
jmp
ret
cmp
fcmovnu
or
pop
pop
je
fwait
into
pop
xor
cld
fldcw
push
xchg
pop
fs
mov
adc
shl
xor
inc
and
lods
xchg
jg
inc
lock
daa
lods
sub
out
mov
lcall
lcall
mov
cmpsb
popa
mov
in
pushl
cmp
call
cmp
test
jge
mov
pop
or
xor
flds
pushl
mov
pop
subl
xchg
push
or
xor
ljmp
push
ljmp
adc
ficoml
inc
push
leave
in
jmp
cmp
sub
test
loopne
jl
aas
mov
cmp
orb
rorl
add
xchg
or
mov
push
sub
out
add
out
stos
mov
xor
decb
js
outsl
js
fsubr
mov
popa
xorb
je
loop
push
cld
cld
adc
mov
cmc
adc
mov
scas
adc
pop
mov
xor
ret
sub
push
dec
popa
iret
sub
jle
pop
mov
mov
imul
add
add
aad
adc
or
jmp
test
mov
sbb
and
or
or
and
movzbl
lcall
add
cmp
push
out
dec
out
mov
lret
cmp
dec
jne
dec
jmp
add
sub
jmp
int
mov
or
and
xchg
cmpsb
lcall
mov
movsl
pop
xchg
in
mov
scas
or
fidivs
nop
add
or
subps
sbb
loop
enter
decl
jl
jae
mov
icebp
nop
clc
clc
mov
aas
out
out
pop
xchg
jg
es
ret
jbe
pop
sub
add
addb
mov
or
sbb
mov
mov
sar
inc
jae
jne
popf
inc
cs
imul
insl
mov
dec
and
jbe
mov
inc
cmp
pop
mov
decl
mov
xor
lahf
sub
lret
and
sub
sbbl
cmpsl
stos
dec
rcll
pushl
push
push
sbb
cs
fdivrs
add
jne
xchg
sbb
sbb
cs
lcall
pop
aas
test
add
clc
out
jg
stos
mov
mov
lcall
cmc
mov
or
adc
pusha
adc
shl
jb
lahf
imul
sbb
and
aam
fiadds
cmp
ret
mov
add
decl
cmove
add
dec
adc
test
pop
cmp
call
out
jge
jg
icebp
jmp
loop
call
adc
dec
jae
add
pop
imull
lcall
jle
push
movsb
sbb
xchg
mov
lcall
fistps
ret
inc
ficompl
add
mov
flds
sbb
js
decl
out
sub
xchg
sub
insb
sub
mov
rorb
mov
xchg
call
mov
xor
aaa
pslld
js
movsb
and
repnz
add
add
mov
imul
xchg
testl
xchg
inc
sub
decl
sbb
and
leave
outsl
sub
push
and
xor
adc
cmp
fcomip
lock
push
shlb
jb
orb
xor
mov
dec
pop
ja
jl
or
pop
mov
fsubl
dec
lds
pop
cmp
lock
call
or
loopne
cwtl
add
pusha
cwtl
jns
out
dec
fs
push
mov
adc
pop
stos
insb
cmp
negl
jo
je
and
dec
xchg
jl
lcall
sahf
nop
dec
sbbl
outsl
jns
rorb
std
mov
inc
jno
stc
jmp
add
and
push
scas
clc
in
jg
or
and
roll
mov
lcall
insl
sti
call
add
mov
ljmp
mov
xchg
notb
rcrl
sbbl
sar
outsl
pushl
testl
or
push
cmp
aas
mov
incl
fldcw
jmp
cmpb
mov
incl
ret
mov
jns
add
loop
cmp
mov
ss
jmp
in
xchg
arpl
pop
inc
cmpsl
mov
xlat
xchg
xchg
mov
add
movups
and
push
outsl
aaa
cmp
pushl
mov
add
ret
dec
push
pop
or
mov
push
add
and
adc
lcall
mov
push
loopne
mov
popa
das
jnp
xor
subb
cmp
test
incl
ret
mov
outsl
adc
cld
sbb
scas
sbb
sbb
cmp
out
cli
fwait
mov
xchg
int3
jge
jno
incl
jno
rolb
incl
ficomps
mov
or
jnp
stos
and
add
pop
sub
jg
xor
loop
mov
xorl
popf
jmp
xchg
mov
fstl
jne
push
or
insb
pop
jns
push
xor
sbb
add
and
jae
in
sub
push
decl
and
mov
inc
pop
jl
shlb
add
sub
mov
sub
or
call
daa
or
mov
cs
and
mov
add
movsl
or
jp
loopne
clc
notl
adc
shr
decl
mul
sbb
jg
xchg
aam
orl
inc
mov
and
cmp
mov
pushl
mov
add
cmp
mov
loop
incl
adc
or
push
adc
add
sub
test
stc
add
addr16
lcall
add
enter
mov
pop
es
dec
mov
divl
stos
mov
pop
hlt
jnp
cmp
dec
push
pusha
xchg
data16
push
pusha
aaa
in
insl
push
cwtl
mov
ja
lcall
add
pop
or
or
adc
test
daa
cmp
pushl
xchg
ss
pusha
jecxz
into
xchg
or
mov
cltd
and
clc
incl
lahf
adc
cmp
mov
cmp
jp
add
push
mov
pop
cmp
dec
shlb
fdivs
dec
inc
dec
stos
pusha
dec
sub
sub
lods
into
push
movl
cmp
push
imul
fsub
and
inc
ljmp
sub
test
clc
lcall
daa
les
out
mov
mov
or
cld
call
mov
jle
add
stos
cmp
cmpsl
pop
rolb
add
sub
jecxz
cli
or
mov
test
jno
int3
fisubrl
mov
in
xchg
mov
push
shl
mov
pushl
in
xor
roll
adc
ja
add
xchg
daa
ret
xchg
pop
jbe
decl
gs
mov
cmpsb
mov
add
insb
sbb
pop
or
cmp
lods
loope
popf
cmp
sub
push
imull
sub
xchg
mov
outsl
dec
adc
mov
or
jmp
imul
add
pop
xchg
jne
push
add
fsubs
jg
pop
push
pushl
mov
dec
int
hlt
mov
out
mov
sahf
les
iret
or
sbb
pop
jp
jno
subb
add
incl
aaa
xor
faddl
xchg
push
int
cmp
mov
pop
enter
inc
and
pop
xchg
js
xor
cli
mov
adc
xchg
pushf
int
pusha
mov
rol
add
cli
decl
sti
xchg
pop
push
cmc
jb
and
jnp
int
adc
adc
je
fcmovb
mov
das
dec
push
xor
xchg
mov
rcll
sub
cmp
ljmp
mov
incl
stos
xor
and
xor
push
pop
lahf
fcoml
mov
mov
mov
adc
sbb
mov
out
clc
call
cmpsb
aad
ja
dec
add
adc
cmpsb
insl
jb
push
add
jmp
or
stos
imul
pop
xchg
xchg
or
mov
jb
dec
push
or
jnp
dec
adc
xor
ret
rcrb
adc
xor
add
adcl
decl
shlb
sahf
add
rclb
and
dec
roll
push
push
mov
jns
ret
adc
xchg
mov
nop
mov
fistps
adc
mov
or
jo
push
sbb
pop
scas
fildl
inc
rclb
push
rcll
push
dec
je
stc
sub
movsb
movsb
xchg
push
adc
loop
lcall
sbb
and
pusha
and
and
or
xchg
and
push
adc
mov
add
or
lcall
data16
mov
inc
lods
add
ss
je
or
push
push
fistl
add
pop
pushl
lods
push
sbb
sbb
jp
dec
inc
adc
pop
data16
scas
cmp
sub
adc
mov
daa
sbb
add
incl
xchg
jl
call
lret
inc
inc
mov
int
hlt
push
fs
adc
sub
std
xchg
adc
cmp
js
in
ja
push
clc
push
pop
ljmp
mov
mov
stc
mov
repnz
mov
xorb
call
mov
ret
xchg
clc
add
add
add
inc
pushf
sub
pop
sbbb
in
push
jno
hlt
dec
int3
add
movsb
lret
cmove
test
push
dec
sbb
ljmp
rorl
mov
mov
add
jecxz
repz
push
outsl
push
test
pop
inc
xchg
cmpsl
adc
popa
sbb
or
fstpl
lcall
orb
notb
not
inc
je
outsl
dec
cmpsb
inc
push
ss
stos
inc
or
rorb
xor
nop
dec
xchg
mov
adc
jg
xor
mov
dec
popf
in
dec
lds
in
dec
stos
ja
ljmp
cmp
mov
push
in
dec
imul
rcr
xor
test
call
pusha
adc
push
mov
fs
dec
iret
lods
xorl
push
inc
cltd
dec
push
call
mov
xchg
push
cmp
mov
je
xchg
cmp
jl
aas
fcoms
xor
inc
ljmp
scas
fldcw
movsb
or
xchg
inc
lea
je
xor
cmp
ljmp
out
shlb
jp
inc
call
sbb
dec
push
jg
push
and
mov
mov
add
in
test
ret
adc
mov
or
movsl
outsl
mov
std
sbb
cwtl
adc
xor
lea
xchg
cld
mov
pop
inc
mov
fcomps
fcoml
in
cs
push
cwtl
stos
loopne
jb
aas
stos
mov
xchg
sbb
xchg
xchg
push
inc
cwtl
push
pop
pushl
lret
xchg
push
loopne
add
dec
lret
sti
loopne
xor
pusha
ljmp
mov
loope
push
divl
stc
testb
dec
xorb
mov
xor
xchg
call
ret
cmpl
pushf
sbb
pop
arpl
pop
mov
in
int
jge
push
and
dec
enter
push
dec
dec
xor
jno
lods
adc
push
sub
adc
jp
or
jp
xchg
sbb
movsl
aas
enter
xchg
inc
and
lcall
les
or
enter
mov
inc
je
push
and
mov
mov
pmuludq
pushl
dec
pop
dec
orl
push
inc
mov
push
das
andl
pop
bnd
and
jl
hlt
pushl
nop
add
inc
ja
jle
cmp
add
mov
movsb
push
or
sub
ret
or
sbb
jg
or
dec
mov
inc
dec
or
xchg
in
push
mov
les
enter
out
add
int3
or
rorb
or
cmpsb
rcl
stos
fsubrs
mov
cmpsl
pop
sbb
into
nop
pop
mov
lock
cmp
mov
xor
pushf
pushf
lcall
xchg
sub
aam
or
movsl
cmp
push
loop
or
xlat
sbb
push
out
jmp
into
adc
out
or
pop
cmp
orb
add
nop
dec
fistpl
xchg
push
fsub
or
in
inc
pushl
sbb
add
push
push
adc
lea
add
aas
or
shll
or
xchg
mov
mov
notb
push
push
sahf
out
xchg
cmpsl
arpl
pusha
out
sub
repz
cmp
lea
lods
aad
jg
sahf
sub
xchg
lea
sub
mov
ss
sub
outsl
push
dec
call
and
pmuludq
jle
decl
mov
out
mov
inc
pop
xchg
push
cmpsb
shlb
lcall
pusha
adc
mov
sbb
sbb
pop
bound
sbb
sbb
push
dec
xchg
sar
decl
pop
xchg
test
movb
cwtl
mov
push
gs
ljmp
icebp
jge
sbb
mov
nop
fs
cmpsb
clc
clc
xor
movsb
mov
in
jg
adc
call
cmp
jb
loop
xor
ret
sbb
add
adc
mov
sub
fistl
push
push
jmp
xor
icebp
mov
into
popa
jg
inc
sahf
inc
rcrb
and
mov
jmp
insl
hlt
xchg
push
mov
loopne
adc
pop
nop
lahf
mov
adc
test
add
test
icebp
add
clc
cmp
rcrb
jmp
and
or
jo
sar
pushl
int3
mov
lock
fs
jb
and
and
dec
lock
fdivr
jmp
dec
dec
arpl
and
sbb
mov
sbb
mov
jecxz
shll
and
add
test
out
mov
call
sub
call
test
and
out
imulb
sbb
out
lcall
push
sub
sbb
mov
iret
pop
movb
add
adc
decl
int3
cmp
int3
arpl
scas
cwtl
and
mov
fsubs
outsb
call
jb
pop
sbb
inc
push
int3
pop
xchg
aas
cwtl
pop
shrb
mov
cmp
jmp
decl
and
dec
enter
sub
sbb
jbe
outsb
cmpsb
add
cmc
loop
je
test
inc
sarb
add
mov
lahf
push
pop
pop
cmp
lcall
imul
xchg
jo
and
addr16
cli
lods
dec
rolb
cld
dec
xchg
inc
lods
cmp
call
mov
jns
clc
ljmp
inc
bound
adc
dec
dec
lods
cmp
jge
daa
movsl
xchg
add
insb
push
push
jne
push
test
loopne
push
add
call
rclb
fildll
jae
push
mov
in
ficomps
notl
adc
ljmp
mov
aad
mov
inc
mov
mov
and
add
pop
dec
inc
sarb
stos
xchg
js
sub
movsl
out
imul
fcoml
add
in
add
pop
addl
loop
aaa
popf
into
cltd
and
outsl
pop
aam
jl
add
mov
call
shrl
js
inc
mov
sbbb
jbe
lret
cmp
mov
nop
incb
incl
xorl
and
push
push
inc
cmp
adc
xchg
sub
pushl
cmp
fcoms
push
add
add
pop
test
inc
lds
add
push
pushf
cmp
fmuls
scas
in
inc
in
test
leave
out
add
fmull
xchg
push
sar
fdivl
lahf
jb
call
loopne
and
jge
push
jnp
nop
in
pop
aam
call
inc
orb
subb
shrb
js
lcall
jmp
push
je
pop
call
push
cmp
mov
jmp
jbe
data16
mov
xchg
add
out
test
push
jmp
push
or
jo
les
or
mov
outsb
sarb
cmp
sbb
incl
sbb
push
and
xlat
je
jle
sbb
jmp
inc
add
pushl
lret
or
cld
lods
add
pushf
sub
ss
mov
das
and
dec
test
fcomip
jmp
dec
frstor
cmp
lcall
sbbl
dec
lock
push
add
decl
subl
dec
xor
aaa
rcl
enter
insb
cmpb
inc
add
out
mov
push
add
js
jbe
imul
and
inc
sbb
cli
lahf
xchg
pop
hlt
call
inc
mov
leave
stos
push
fisubl
cld
pushl
add
sub
adc
add
cmpsb
test
mov
lcall
jecxz
pop
movsb
dec
or
lock
and
es
cld
in
call
addb
inc
inc
pushl
jge
sbb
or
cmpsl
lcall
ds
dec
jmp
cmp
sbb
std
push
push
test
in
push
sbb
sbb
xlat
pushl
sub
scas
xor
ret
and
or
adc
sbb
mov
ret
jg
aam
ss
push
pop
push
xor
push
mov
js
out
outsl
clc
mov
jb
push
clc
and
xchg
lds
inc
push
rclb
adc
das
clc
pushl
dec
jecxz
loop
jae
test
sahf
push
add
cmp
stc
incl
xlat
dec
xlat
sbb
inc
out
std
pop
jl
or
les
les
cltd
mov
dec
shr
mov
sub
rcr
out
rclb
push
inc
aas
or
jne
pushl
cmp
stos
pop
nop
mov
sub
sahf
sub
inc
cs
and
pop
lock
mov
lret
std
xor
mov
lods
adc
sub
jmp
dec
test
call
fwait
call
mov
rol
mov
in
jbe
ljmp
jge
fstl
pop
outsb
pop
ja
lret
sub
sub
in
dec
pop
dec
and
sub
jmp
icebp
pusha
and
mov
loopne
je
aad
pushl
push
gs
xor
ljmp
jno
jns
adc
mov
xchg
lcall
imul
cmp
test
lock
lock
jmp
sbb
cmp
sbb
clc
xor
push
test
mov
incl
jmp
jns
or
sub
hlt
mov
lea
and
mov
mov
sub
aad
enter
fadds
push
iret
sub
pushf
or
dec
xchg
rolb
hlt
shlb
mov
insb
fdivs
sub
lcall
lahf
or
xchg
mov
or
ret
cli
and
ret
cmpsb
mov
or
decl
fistps
adc
imul
in
sub
sub
mov
sub
fnsave
mov
mov
mov
lret
jmp
pop
add
clc
lea
xchg
push
mov
xchg
adc
leave
sub
jbe
loop
xchg
add
push
xor
je
sub
cld
push
cld
cld
outsl
jbe
pop
imul
mov
clc
and
lea
sub
adc
push
test
lcall
push
sbb
mov
sbb
adc
jae
mov
jb
pop
cmp
out
clc
das
cli
push
or
or
mov
cwtl
ja
sbb
dec
adc
lahf
mov
or
mov
inc
add
xchg
cmp
mov
inc
ljmp
sar
pop
pop
fdivl
add
add
inc
idivb
dec
pop
fwait
add
adc
mov
aad
pop
shl
or
push
inc
mov
mov
cli
or
idiv
pop
lock
es
fcomps
sbb
cltd
rcl
fadds
jmp
enter
adc
xchg
leave
cmc
aam
in
mov
adc
or
repnz
ljmp
rorb
fadd
rorb
mov
daa
or
imul
xor
idiv
mov
es
cld
shr
sbbb
orb
adc
inc
or
repz
ret
or
and
mov
mov
or
dec
mov
mov
lock
loopne
dec
lock
jle
sub
xchg
mov
incb
call
mov
ficoms
cmpb
jmp
ret
decl
jg
pop
mov
out
xchg
xor
inc
and
out
aam
and
cmpsl
mov
add
cmpsb
mov
and
outsl
cmp
out
push
inc
es
jmp
mov
je
dec
dec
xor
jno
dec
incl
sub
mov
sbb
push
scas
in
loopne
shr
and
incl
pop
xchg
sti
inc
xor
cmp
dec
push
pop
sub
dec
sbb
loop
add
jmp
add
pushf
push
inc
jne
xchg
add
scas
add
mov
push
mov
pop
nop
push
pop
push
std
hlt
das
or
push
fdivrs
fsubrs
pop
decl
fsts
dec
and
loop
cmp
push
mov
cmp
call
push
in
hlt
clc
shll
cmp
out
ljmp
in
inc
ljmp
xchg
inc
lock
add
imul
lcall
fadds
pop
in
call
lcall
adc
push
sub
xorl
and
fsub
rclb
or
decl
xchg
aam
adc
sbb
or
es
push
outsl
cli
lcall
in
or
lods
and
scas
jge
movaps
xchg
sbb
sar
idiv
fcom
add
mov
cltd
xchg
jge
or
and
enter
cltd
cwtl
push
les
add
xchg
or
outsl
pop
xor
ret
in
aas
sub
mov
mov
aas
cmpsl
add
pusha
xchg
clc
test
ficoms
pop
aam
mov
push
loopne
aad
xchg
mov
mov
loopne
or
sbb
adc
nop
sbb
jmp
add
pusha
dec
mov
jne
js
enter
xchg
in
and
loop
sub
bound
enter
sbb
add
and
fwait
or
push
inc
xchg
ljmp
xor
mov
inc
mov
dec
sub
push
or
sbb
loopne
or
aad
pop
sub
jecxz
sub
sub
addb
dec
ds
outsl
scas
call
inc
mov
loop
inc
rorl
adc
pop
sbb
cwtl
dec
pop
nopl
les
dec
mov
adc
pop
testl
ds
bound
decl
dec
orl
xchg
mov
scas
out
test
inc
gs
jnp
or
jmp
roll
aam
imul
or
dec
pop
xchg
out
or
incl
cmp
stos
sbb
inc
test
xchg
cltd
and
xor
jle
in
or
lcall
sahf
mov
xchg
dec
push
inc
pop
outsb
leave
mov
or
xor
and
ljmp
data16
lcall
mov
les
mov
leave
pop
hlt
pusha
dec
mov
incl
inc
ja
adc
xchg
cld
lods
add
jbe
cld
sete
mov
jns
clc
adc
jmp
es
sbb
xchg
or
hlt
jae
in
fs
cmp
xor
sub
push
pop
xchg
pusha
push
xchg
fstl
pop
sbb
sub
decl
push
push
or
xor
bound
xlat
pop
lock
mov
jp
neg
jp
inc
pop
lds
inc
xor
sahf
add
push
add
jmp
xor
mov
lcall
in
cmp
xor
push
adc
fs
lcall
ljmp
adc
pop
cltd
pusha
ljmp
cmpsl
push
leave
fwait
xchg
rclb
jmp
inc
loope
dec
dec
inc
xchg
lcall
dec
jmp
aas
sub
je
jne
ljmp
mov
mov
xor
in
push
jge
pop
test
dec
movsl
pop
call
add
cwtl
push
add
add
repnz
sbb
lock
rcrl
jmp
add
sub
pop
ficoml
adc
pusha
lcall
ja
adc
push
in
cmp
insb
ret
inc
pop
fists
add
cld
xor
push
test
cld
inc
or
or
pop
xchg
adc
add
push
mov
add
std
fisubs
stc
mov
fs
arpl
mov
mov
add
mov
add
das
out
mov
ja
decl
lret
add
decl
and
test
mov
dec
cwtl
pop
rolb
xchg
or
push
pop
sub
cmp
clc
lcall
xor
fdivrs
sbb
xchg
add
ljmp
insl
push
pusha
gs
inc
push
cmp
add
test
sti
lret
and
jbe
or
cltd
lea
mov
fisubrl
mov
negl
loop
xlat
sti
pop
lock
or
push
ret
dec
add
jbe
inc
add
andl
lcall
and
cmp
add
xchg
pop
fwait
nop
inc
add
push
scas
lods
push
pop
or
daa
cmp
pop
pop
add
xchg
mov
hlt
movsb
sbb
popf
mov
shll
test
and
adc
adc
pop
test
clc
push
or
dec
jne
movb
lock
test
lret
sarl
lea
stos
rcrb
mov
call
mov
sbb
add
pcmpeqb
mov
jnp
sub
push
sbb
sbb
and
push
decl
mov
or
add
jle
test
jo
adc
out
adc
das
jbe
mov
mov
call
shlb
faddl
and
and
and
pushl
aas
lods
mov
xchg
sub
sub
stc
lock
jb
jl
out
lcall
mov
adc
push
inc
cmp
add
mov
mov
mov
push
lcall
or
xor
dec
aam
xchg
push
shll
divl
int
push
lcall
pop
popf
jno
pop
sub
pusha
sbb
cs
dec
stos
repnz
inc
int
aad
jecxz
mov
mov
lods
push
clc
sub
inc
pop
push
pop
cltd
xor
push
loopne
out
push
jg
sub
pop
scas
inc
daa
nop
movq
test
nop
sbb
imul
xor
inc
or
sbb
sbb
mov
lds
or
inc
shrl
pushl
lea
je
shlb
arpl
in
stc
adc
out
ds
call
inc
sbb
dec
fwait
dec
in
dec
xor
aaa
push
push
jmp
pop
add
hlt
and
call
dec
cmp
arpl
xor
pushf
fsubrl
je
lods
mov
pop
adc
adc
lcall
and
std
xchg
popa
sar
add
inc
or
loope
dec
mov
outsb
mov
sub
mov
and
sbb
cmpl
lret
orl
rcrb
push
cmp
cli
jmp
jne
cmp
dec
cmp
cmp
mov
inc
lea
inc
inc
inc
pop
in
mov
xchg
lea
dec
mov
sbb
inc
adc
loope
xchg
inc
xchg
repz
mov
ljmp
dec
cmp
sub
dec
imul
pop
or
imul
jg
and
dec
shll
push
lcall
xchg
test
jnp
lcall
in
movl
loopne
mov
adc
imul
add
out
cli
test
sub
bnd
lahf
mov
push
aam
inc
push
xchg
mov
mov
js
inc
xchg
dec
std
dec
jbe
js
test
push
in
incl
jg
xor
lcall
imul
das
push
jmp
sbb
pop
in
insl
xor
dec
dec
mov
dec
femms
fs
pop
sub
je
out
clc
inc
lahf
lea
inc
dec
dec
vpmacsdd
pop
and
inc
in
pop
imul
les
clc
cmp
decl
cmp
adc
mov
test
jne
fsubs
loope
aad
nop
rorl
aad
decl
enter
push
mov
les
dec
sbb
enter
dec
test
jmp
mov
and
inc
jecxz
cltd
inc
movsl
lcall
push
and
ljmp
jns
les
jb
int
lock
clc
lock
add
and
xchg
and
lock
mov
outsl
push
xchg
xor
and
sub
shrb
cmp
mov
pop
js
ret
mov
cvttps2pi
mov
mov
hlt
pop
push
pop
xor
pop
or
pop
loopne
add
fld
cli
fcomip
mov
adc
js
or
lret
in
icebp
jmp
ss
pushaw
enter
in
fmul
shrb
aam
invd
lret
enter
cmp
mov
daa
mov
les
push
stc
aam
mov
mov
daa
sti
push
mov
lock
shlb
and
jecxz
mov
hlt
stos
push
xchg
cmp
aam
dec
es
lcall
jp
pop
or
stos
sub
or
lock
pushl
add
add
push
shl
cmc
sub
dec
adc
das
sub
xchg
adc
decl
push
insl
ja
mov
sub
lcall
mov
fists
mov
xor
imul
cmp
inc
add
pushl
std
outsl
data16
add
pop
aaa
adc
icebp
aam
push
jl
push
inc
insb
xor
out
mov
lret
sbb
xor
mov
clc
decl
add
cmpl
ds
rorb
les
and
add
xchg
sbb
dec
ljmp
ss
out
mov
mov
shll
movl
repz
add
add
insl
nop
jae
incl
dec
or
dec
xchg
imul
and
adc
pop
jmp
out
clc
mov
mov
incl
scas
stc
add
and
call
or
lea
insb
into
lods
xchg
xchg
dec
testl
adc
fdiv
mov
jmp
inc
mov
sahf
inc
or
jmp
inc
sbb
jge
pushl
dec
aam
addr16
das
leave
dec
test
or
icebp
and
adc
sbb
in
fsubs
or
dec
mov
nop
sti
inc
pop
mov
lcall
add
add
enter
lahf
push
out
fwait
aam
outsb
mov
or
and
cwtl
push
test
cld
jmp
arpl
and
xchg
test
leave
repz
leave
inc
inc
ss
movsl
add
andb
jl
push
call
xchg
mov
loope
and
mov
mov
add
nop
mov
and
clc
mov
call
cld
push
pusha
loopne
mov
or
les
cmpsb
je
decl
adc
adc
or
sbb
sbb
or
out
or
ds
and
outsl
mov
sub
push
cld
dec
dec
je
popa
bound
mov
push
lock
incl
adc
push
out
pusha
add
lahf
inc
mov
cmpb
dec
dec
ds
cmp
or
out
lea
pop
dec
jae
enter
push
push
dec
xchg
ret
jnp
inc
cmp
push
xchg
pop
enter
adcb
adc
cmp
sbb
inc
movsb
mov
incl
inc
xchg
mov
add
sub
pushf
fsubs
mov
mov
inc
or
into
or
das
addb
into
xor
incl
cld
sbb
dec
pop
test
jp
xchg
sbb
xor
jmp
add
adc
cmp
in
fwait
movsl
sbb
xor
dec
and
push
pushl
pop
lcall
jno
and
xchg
sub
imul
adc
pop
jmp
sub
dec
push
mov
dec
and
xchg
jmp
call
push
inc
lcall
xchg
dec
loope
add
adc
bound
dec
lock
pop
xchg
ljmp
dec
aaa
ret
adc
xor
xor
mov
incl
mov
aam
mov
push
or
or
or
adc
inc
add
idiv
decl
xchg
movsl
push
jb
adc
or
jo
xor
or
lcall
call
pop
xchg
xor
sbb
and
sbb
push
scas
mov
xor
sbb
jnp
sub
in
and
sbbb
bswap
mov
test
sub
decl
ds
pop
pop
xchg
repnz
cmp
mov
push
fwait
pop
jbe
inc
mov
ljmp
clc
cld
cmp
inc
ds
pushf
aam
mov
test
mov
jo
call
push
xor
lods
aaa
mov
add
dec
mov
adc
call
mov
sub
ret
shlb
pushf
test
incl
mov
push
cld
or
lea
frstor
add
and
shlb
jle
das
mov
lcall
pop
shlb
mov
in
add
mov
int
rorl
add
call
add
mov
mov
xchg
loope
leave
cmpsb
pop
xor
outsl
mov
push
sub
cmp
inc
cmp
jmp
lods
loopne
test
aaa
sbbb
xchg
add
decl
xor
pop
inc
sbb
or
test
push
cmpsb
lcall
cwtl
aam
mov
stos
xor
test
cltd
and
fsubrl
test
xor
filds
and
push
fdivl
rol
xchg
adc
pusha
incl
outsl
jbe
inc
dec
ss
or
mov
xor
xchg
push
push
or
rclb
call
jo
jo
mov
loop
adc
rcrb
test
out
leave
fdivs
sbb
jns
pusha
popf
cmp
mov
add
or
arpl
jne
lods
mov
xor
cmp
sub
or
sbb
iret
roll
fiadds
push
shll
mov
xchg
add
fisubl
punpcklbw
incl
das
add
mov
sub
cmpsl
test
fadd
insb
jae
adc
repnz
in
stos
pop
incl
jne
mov
rcrb
xchg
dec
out
push
int3
push
int3
int3
lea
inc
xlat
imul
sub
mov
jmp
inc
pop
dec
pop
xchg
lahf
jne
jne
loopne
lahf
shlb
xchg
dec
mov
pusha
adc
loop
dec
push
or
sbb
movl
rcrb
push
push
add
add
mov
fidivrl
and
lcall
add
dec
pushl
adc
loopne
and
and
fidivrl
xchg
xorl
jo
push
adcl
adc
dec
aam
sbb
loope
pushl
mov
pop
lea
shl
dec
mov
and
add
shll
and
mov
add
pop
sub
cmp
inc
jbe
push
aas
dec
dec
pop
in
mov
mov
std
pop
popa
lea
jle
data16
imul
and
push
test
call
insl
les
repz
add
mov
jp
cmp
pop
lds
ss
nop
sbbl
push
add
mov
push
decl
fimull
or
lea
insb
push
mov
call
test
insl
or
jne
jbe
and
ficoml
xchg
subb
push
decl
and
call
xchg
or
cltd
decl
push
xchg
daa
sbb
shlb
stos
and
idivl
js
or
popf
pop
andb
fstpl
je
lock
incl
jmp
push
mov
mov
pop
lcall
test
aaa
cld
aaa
cld
loopne
or
int3
jno
add
gs
test
inc
decl
xchg
mov
or
add
cs
sbb
and
test
or
movl
adc
enter
lret
mov
sub
xchg
scas
and
adc
ljmp
paddsb
add
adc
movsb
pop
call
lods
adcb
jg
pop
add
xor
mov
adc
lcall
pop
or
test
in
mov
xor
cmp
jp
rcl
jne
pop
cmp
das
es
fdivrs
add
xor
pusha
push
ret
dec
sub
cmp
push
add
and
adc
test
add
cld
jmp
rcrl
pop
jo
fisubrs
xor
mov
inc
adc
jbe
adc
or
pushl
pop
push
iret
add
dec
dec
push
push
adc
lea
lods
xchg
loopne
in
xchg
cmp
xor
test
cmc
xchg
out
adc
jmp
movsl
arpl
outsb
sahf
inc
stos
loop
push
sbb
incb
iret
adc
push
cmp
jae
adc
in
mov
push
icebp
sub
jmp
xchg
insb
jbe
adc
les
data16
xor
mov
js
push
adc
rorl
pop
les
push
push
sub
sbb
mov
fidivl
rcl
call
sahf
mov
add
add
call
or
xchg
sub
popa
dec
jb
lcall
xor
push
pop
fsub
or
or
addr16
dec
out
in
lea
inc
sub
fmul
lods
shrb
cwtl
fisttps
decl
inc
call
cwtl
mov
ljmp
xor
lock
and
lock
push
xor
or
push
mov
xor
mov
and
popa
or
call
adc
or
andl
dec
sub
jle
in
mov
into
push
pop
and
cmp
xchg
or
pop
adc
pop
push
and
xchg
andb
test
add
lods
xlat
jmp
sbb
enter
cmovae
push
mov
aam
or
inc
sub
ficoms
xchg
jmp
aas
push
mov
dec
add
dec
xchg
sbb
pop
icebp
cmp
dec
inc
xchg
stos
shl
pushf
jnp
sti
or
mov
dec
push
mov
dec
sub
dec
imul
ljmp
push
mov
shll
call
inc
jl
and
aaa
fdivr
decl
in
bound
xor
xor
aaa
in
aaa
cld
xlat
dec
or
aam
add
imul
jmp
push
push
xor
cld
fscale
test
dec
iret
ljmp
jmp
lods
mov
mov
popa
jne
je
adcl
shlb
jne
jb
pop
pushl
adc
lock
ss
es
ret
aam
cwtl
dec
mov
shrb
dec
push
mov
fnsave
insb
push
xor
test
mov
cmp
dec
mov
cs
call
addb
test
cmp
imul
sbbl
dec
dec
in
sub
sbb
xchg
push
xchg
data16
es
lock
clc
or
mov
mov
ja
jmp
fiadds
lock
jmp
test
sub
pop
xchg
pop
mov
sbb
pop
cmc
pushl
fistpll
jne
lock
sbb
adc
incl
fisubs
cld
push
movq
dec
arpl
push
xor
dec
adc
decl
fldl
jbe
pop
shrb
jg
fcoml
mov
fsubs
jo
jg
mov
xchg
cmp
dec
leave
mov
lcall
inc
pop
sbbl
dec
xchg
pushl
pusha
stc
lret
add
push
xchg
incb
movsb
pop
xor
pop
lret
push
movsl
in
repnz
or
push
adc
mov
nop
xchg
mov
mov
sbb
in
add
arpl
dec
loope
lret
ljmp
xchg
and
cltd
xor
and
sub
mov
roll
cli
in
lock
jmp
pop
ja
sub
xchg
movsb
call
jge
popf
jb
popa
dec
inc
sub
and
push
jg
call
rolb
pusha
mov
enter
test
adc
arpl
dec
dec
in
pushf
loopne
sbb
xchg
pushw
mov
jg
inc
adc
leave
dec
xor
jg
cmp
sbb
loopne
test
ss
jb
setne
jbe
in
xor
and
inc
jmp
fimull
ljmp
fisttpl
cs
rcrl
cmpl
and
inc
mov
mov
jge
xchg
test
jne
loope
pop
inc
cmp
test
and
sub
mov
xchg
lcall
push
adc
mov
or
add
rorl
enter
outsb
adc
and
sar
pop
call
faddl
ret
cld
add
mov
jg
shrl
mulb
sbb
stc
popa
cmpsb
in
fdivs
cwtl
ljmp
clc
call
xchg
cld
or
adc
add
dec
popf
test
les
xchg
aam
pop
or
jnp
dec
mov
add
inc
cmp
push
add
cmp
loope
push
ss
mov
adc
dec
int
add
call
sbbl
cmp
and
pop
std
mov
enter
enter
bound
mov
enter
aad
mov
lcall
aam
lea
mov
pop
dec
pusha
mov
adc
incl
movsb
cmp
fwait
mov
movsb
dec
and
mov
add
outsl
mov
add
fs
mov
decl
imul
dec
jbe
and
outsb
das
outsl
cmpb
sarl
or
add
sub
hlt
incl
imul
push
rorb
push
sti
mov
or
mov
pop
push
mov
adc
sub
fidivs
adc
decl
insl
test
add
fcoml
push
mov
push
or
xchg
inc
push
sbb
inc
ljmp
add
sbb
and
or
mov
xchg
test
push
mov
cmp
push
xchg
cmpsb
cmp
ljmp
xor
nop
sar
cmpl
cmc
sbb
xorl
or
out
push
lcall
and
addr16
lcall
and
and
xchg
testb
mov
jmp
sbb
or
dec
mov
mov
sbb
xchg
jb
adc
cmpsl
mov
pushl
adc
pavgb
adcb
dec
sbb
aaa
rorb
mov
mov
cs
incl
and
test
ljmp
je
adc
add
je
jp
mov
les
adc
ficoml
and
pop
add
lea
sysret
imul
fldenv
sbb
and
mov
dec
ss
sbb
pop
jp
cmpsb
call
inc
decb
repnz
and
sarl
xor
push
or
in
fmul
mov
sub
adcl
xchg
jb
add
jecxz
mov
incl
adc
push
movsl
pop
popf
jmp
add
cmp
pop
sbb
cmp
or
cmp
ljmp
mov
insl
mov
jns
lods
fisubrs
cmp
jmp
pusha
jmp
shlb
push
mov
je
gs
test
testb
dec
mov
or
movsb
cld
icebp
inc
and
and
sub
cmp
jne
pop
hlt
imul
inc
sarl
insb
mov
pushl
pop
xchg
and
icebp
clc
mov
jne
idiv
sub
sbb
jmp
test
cltd
xchg
mov
dec
sub
lea
mov
cmp
jnp
add
adc
mov
mov
int3
pop
cmp
rcll
and
fstl
add
add
mov
sbb
lock
js
in
lea
in
push
dec
mov
or
push
incl
aas
repz
sahf
or
jbe
sub
mov
iret
fisttps
push
test
and
adc
jb
dec
insb
mov
cmpsl
cmp
push
sbb
leave
jle
incl
in
jg
roll
jmp
test
push
pusha
adc
pop
shrb
ljmp
dec
pusha
movsl
add
xchg
dec
pushf
add
xchg
xchg
pop
pop
xchg
mov
call
stos
cmc
lahf
sbb
mov
sub
xchg
add
js
out
ds
push
cld
dec
mov
int3
inc
in
dec
loope
push
insb
adc
mov
adc
adc
push
cmp
cli
call
lcall
fidivrs
dec
in
jmp
out
and
xchg
cmp
and
and
dec
or
add
mulb
frndint
jno
mov
jg
arpl
cmpsb
pushf
jl
addb
mov
mov
add
mov
jmp
cmp
cmp
jno
fnstcw
ja
sbb
in
popa
sub
mov
and
insl
std
xchg
add
pop
lods
mov
sbb
mov
ljmp
push
clc
jbe
jno
and
adc
cld
leave
clc
mov
or
cwtl
sub
inc
cmp
mov
mov
mov
mov
in
and
dec
adc
push
sub
jmp
pop
push
mov
nop
or
es
cltd
mov
aas
mov
dec
adc
pushl
jmp
sub
cs
push
mov
sub
ficompl
mov
mov
ljmp
sbb
movsl
cmc
mov
stos
pop
jmp
rolb
rcrl
sbb
fs
decl
decb
into
add
sbb
mov
lods
dec
add
or
aad
pushl
xchg
and
movsl
jbe
ds
xchg
dec
test
pmaddwd
mov
and
push
insl
xchg
mov
push
in
adc
movsl
fcom
in
ljmp
fxch
in
idivl
ret
lea
push
or
push
and
push
push
outsb
xchg
inc
loope
xchg
shr
nop
call
mov
lcall
sarb
jnp
stos
push
sarb
jp
fldl
sub
aam
mov
daa
pusha
pop
fwait
or
inc
int3
mov
and
push
movsl
loop
call
fcoms
sub
cmp
mov
imul
lock
pop
pop
shrb
sub
or
popf
cs
ljmp
fs
sub
les
xchg
sub
add
jbe
xchg
sbb
fsubl
mov
jnp
daa
add
sub
xchg
lock
jecxz
adc
mov
mov
aad
lock
out
jle
cmp
push
pop
cltd
add
push
lock
inc
inc
inc
pushf
rcl
inc
inc
mov
mov
fcomp
inc
jno
out
add
jmp
mov
sub
sbb
adc
and
pop
add
mov
mov
or
mov
mov
cmp
sbb
stos
add
xchg
sbb
clc
incl
jno
adc
and
sub
mov
jg
add
bound
add
or
lcall
sbb
loop
ret
fadds
loope
fidivs
cs
decl
xor
rorb
das
jl
arpl
pop
and
jmp
adc
cli
mov
push
jmp
xchg
or
push
repnz
jp
fadds
int
jmp
jne
jns
ljmp
in
and
enter
sbb
sub
push
adc
push
repnz
ret
decl
or
repnz
es
jno
les
push
mov
aam
fcomip
jmp
andl
hlt
test
push
cwtl
xor
inc
cmp
jmp
dec
mov
addb
or
test
neg
or
dec
sbb
and
ljmp
andl
out
adc
incl
lea
jae
dec
cli
xor
add
les
cld
dec
pop
outsl
jg
mov
pop
and
pusha
push
mov
xor
lea
incl
pop
decl
in
mov
jbe
decb
inc
and
sub
xchg
test
movsb
push
jb
cld
test
sbb
xchg
cmp
rolb
xchg
pusha
inc
dec
je
fisttpll
xchg
ret
movsb
adc
aaa
push
jecxz
shrb
push
push
es
mov
mov
xlat
mov
aad
sbb
jl
mov
xchg
cmp
add
cmc
and
clc
lods
pop
cwtl
push
js
and
or
pop
add
and
ljmp
shlb
inc
cmp
hlt
outsb
aaa
add
mov
ljmp
push
les
mov
pusha
in
pop
add
gs
pushl
pop
mov
dec
rclb
std
or
sub
cs
or
pop
add
inc
das
inc
inc
sub
mov
jmp
fwait
testb
fwait
pop
shrl
daa
xchg
or
mov
incl
leave
and
mov
cmp
mov
aam
arpl
es
add
nop
inc
mov
dec
dec
and
iret
xchg
pop
push
clc
clc
mov
pop
cwtl
or
pushf
mov
xor
push
enter
mov
jne
call
mov
push
loope
pop
sarl
test
add
sahf
in
mov
or
cmp
dec
mov
jmp
movsb
nop
pop
imul
dec
push
xchg
cmp
or
and
call
in
pop
movsb
test
push
je
jge
mov
sbb
insl
push
shl
xchg
xchg
cmp
sub
push
adc
or
add
jg
push
leave
hlt
sbb
xor
divb
popf
stc
cld
sub
dec
add
inc
loopne
sub
inc
rorb
pop
dec
or
dec
push
dec
push
fnstcw
sbb
adc
push
repnz
mov
adcb
jge
pop
add
decl
xchg
test
jl
xor
int
inc
adcb
add
xchg
jl
pop
xchg
lret
andl
push
jg
jp
xor
push
xor
adc
cmp
les
push
jbe
add
pop
daa
outsl
call
dec
out
in
enter
mov
in
std
cmpsl
in
scas
in
fs
xchg
in
inc
ljmp
les
sub
jecxz
stc
sbb
std
stos
mov
rcll
std
jmp
push
pop
add
push
sbb
pop
mov
xor
mov
push
loopne
push
sub
movsl
cltd
pusha
jbe
loopne
lea
popa
add
mov
mov
fisubrl
sti
pop
xchg
and
rorl
lahf
cld
pushl
push
stos
xchg
jmp
ljmp
rcl
scas
sbb
sbb
or
nop
inc
and
in
inc
sbb
xor
inc
jo
xor
jmp
or
scas
sbb
sar
xor
mov
push
sub
shlb
inc
out
clc
ljmp
cs
push
mov
js
rcll
cmp
sar
out
imul
mov
mov
ffreep
mov
sbb
pmaddwd
scas
or
or
mov
lcall
cmp
cwtl
test
or
jmp
adc
mov
add
xor
shlb
push
push
push
mov
push
adc
lcall
sbb
jmp
and
lea
js
sbb
sbb
movsb
fs
and
incl
cs
xchg
scas
test
push
add
loopne
sub
rcrl
ljmp
fiaddl
in
jmp
in
adc
push
dec
out
loopne
out
and
inc
testl
pop
mov
lods
call
test
data16
nop
push
add
mov
cmc
jae
dec
in
das
push
insb
inc
fs
shll
jns
sbb
stc
es
lcallw
xor
dec
movsl
sub
clc
ljmp
enter
inc
scas
shl
jne
faddl
popa
lea
pop
cli
xchg
add
fcomip
mov
jmp
push
shll
push
add
push
xor
cmp
outsb
or
mov
mov
incl
and
outsl
cld
mov
or
out
bound
sub
sbb
jl
ss
push
shll
cmp
pop
pop
hlt
outsb
mov
cmp
mov
rclb
pop
pushl
cli
sbb
mov
push
sub
push
fiaddl
inc
ret
stc
cmp
or
cmp
gs
fstp
inc
pop
jmp
test
lcall
fbstp
les
cmp
xlat
std
scas
add
jmp
addl
dec
out
or
mov
xor
adc
mov
mov
in
mov
lock
push
lahf
and
adc
cld
das
stc
xor
cmp
testb
in
adc
icebp
pop
call
adc
jecxz
jmp
js
lea
or
or
loope
enter
movsl
cmp
incl
add
add
pop
je
dec
or
sbb
adc
sbb
addl
leave
loopne
rorb
lcall
sbb
rcrb
pusha
and
pop
loopne
mov
ss
outsb
jecxz
loopne
or
nop
xor
mov
xchg
add
or
xchg
lahf
add
add
inc
inc
pushf
movsb
fdivrl
lock
and
xor
fs
inc
sub
cmp
call
xor
xchg
test
fcoms
insb
xchg
cmp
add
shlb
adc
pushl
aas
or
je
and
xor
add
lock
clc
pop
test
call
dec
xchg
dec
or
les
cmp
js
add
int3
lahf
pop
and
nop
decl
lock
movsb
xor
in
mov
cwtl
mov
sbb
mov
lcall
nop
arpl
cmp
mov
orb
inc
mov
rol
in
pushl
fstl
adc
clc
mov
mov
mov
mov
add
sbb
dec
sarb
push
icebp
test
mov
loopne
outsl
jge
cld
fstps
pushf
push
push
xchg
ret
push
and
mov
jle
cmc
call
push
push
into
icebp
push
jmp
push
xchg
cmpsb
cmp
mov
decl
lods
imul
cmp
mov
pop
decl
int3
cmp
jb
out
dec
pushl
pop
bound
loopne
dec
cmp
cmp
and
call
mov
roll
or
inc
adc
mov
fisttpl
jl
mov
xchg
cld
loopne
jecxz
sub
jmp
ror
hlt
inc
ds
enter
int3
add
xor
lds
nop
jbe
pop
jmp
sbb
push
sbb
sbb
mov
mov
inc
or
pop
cmc
daa
lahf
icebp
push
mov
xchg
aaa
orb
mov
insb
fcoms
bound
fs
mov
cmp
pop
inc
pop
and
sub
ljmp
sbb
mov
add
pop
lret
ljmp
push
call
xor
loopne
jno
mov
sarl
pop
dec
js
in
sub
jg
decl
xchg
int
or
dec
jno
push
mov
aad
stos
dec
jle
mov
stos
xadd
mov
mov
enter
sbb
mov
xchg
dec
xor
mov
out
push
icebp
xor
adc
sbb
sbb
je
jne
and
jg
jmp
clc
push
pushf
out
and
dec
test
mov
call
pop
pop
mov
incl
rorb
pop
lret
and
lcall
push
je
test
sub
add
mov
or
mov
jg
inc
ja
mov
xchg
mov
nop
pop
loope
aad
mov
test
mov
mov
dec
loope
inc
out
pop
fs
inc
sub
or
mov
add
or
mov
stos
es
or
or
pop
pop
push
jo
xor
mov
dec
xchg
mov
cmp
adc
lcall
das
dec
adc
repnz
inc
inc
inc
decl
jmp
push
imul
cmpsl
sub
mov
ljmp
add
adc
movsb
sti
ret
dec
fidivrl
xor
push
or
jmp
fsubs
push
fisttps
lret
xchg
sbb
add
hlt
pop
pop
stos
outsl
push
outsl
inc
addb
incl
test
inc
dec
sub
inc
add
cmp
xor
add
ljmp
mov
add
call
add
push
mov
inc
mov
hlt
push
push
xchg
mov
pop
inc
hlt
push
cmp
push
jge
in
xor
inc
sbb
push
sub
add
or
adc
push
or
loope
and
dec
and
xlat
add
jmp
fsubrs
repnz
pop
xor
fdivp
mov
mov
mov
cmp
sbb
out
or
aas
fldcw
popa
sbb
jg
add
inc
jne
sub
push
loop
fstps
push
mov
test
incl
addb
mov
lahf
add
loop
and
sbb
incl
insb
sub
jbe
fadds
add
in
aaa
inc
sbb
sub
test
in
dec
xchg
stos
cmpl
or
jae
jge
or
pop
or
popa
add
push
or
sbb
mov
mov
and
jmp
test
push
push
loopne
or
subb
nop
pop
cmp
sbb
test
sbb
lock
xor
rcr
shll
adc
or
push
lods
push
mov
push
sahf
lcall
mov
add
xchg
cmpsl
mov
lret
or
pop
pop
call
out
pop
iret
or
add
decl
sbb
push
or
popa
cld
mov
push
add
add
incl
mov
dec
mov
cmp
pushl
add
aas
shrl
cltd
add
adc
pop
dec
dec
jbe
stc
jne
lcall
ficoms
xor
int
push
mov
add
adc
call
sahf
and
jp
dec
and
sahf
dec
xchg
loope
xor
mov
andb
nop
push
or
jmp
ds
add
and
mov
add
push
lods
subl
dec
in
ret
or
outsl
jmp
test
fcoms
lcall
mov
push
jl
cli
xchg
mov
lcall
mov
mov
adc
mov
hlt
xchg
cmp
mov
scas
or
sbb
mov
call
orb
out
sub
out
push
mov
mov
testl
cli
call
add
fiaddl
push
pop
xchg
dec
mov
out
ret
sub
bound
icebp
movsb
sub
pop
bnd
lahf
sub
adc
incl
roll
mov
jno
mov
mov
mov
das
in
sbb
out
clc
cwtl
xor
push
test
mov
or
lods
dec
call
add
incl
mov
sbb
pusha
ss
insl
pusha
xor
push
xor
dec
and
je
push
xor
mov
pushl
inc
push
push
push
int
bound
fwait
inc
push
or
push
or
sar
xchg
mov
rsqrtps
loopne
decl
sub
mov
ret
push
xlat
lea
cmp
sub
lds
push
xchg
xchg
jbe
xor
ljmp
nop
cmp
xchg
cmp
sqrtps
xchg
cwtl
shlb
ss
decl
mov
sbb
mov
mov
pusha
mov
call
fbld
sub
dec
or
pop
inc
sbb
add
leave
push
xor
mov
pushl
push
mov
xor
inc
stc
sahf
inc
ds
out
clc
incl
les
fs
lods
inc
imul
or
cmc
mov
xchg
xchg
sbb
lcall
sub
mov
insb
jo
add
jg
insl
cmp
or
adc
into
push
and
lret
addr16
or
mov
jge
push
mov
mov
dec
inc
mov
orb
imul
lock
out
adc
ljmp
add
inc
test
mov
adc
test
int
scas
aaa
xchg
add
lcall
sub
sbb
and
fstpt
xor
jae
ja
roll
call
inc
cltd
ficoms
mov
arpl
mov
mov
lea
mov
stos
fwait
int
enter
sbb
add
insl
push
lret
or
in
pop
push
rorb
push
cld
daa
push
xchg
push
lea
incl
sub
bound
adc
cmc
rcrl
dec
in
mov
mov
pop
pop
xor
mov
or
dec
je
mov
or
cld
incl
testb
mov
jle
push
inc
push
jns
clc
push
or
decl
push
cmp
or
imul
sub
sub
adc
adc
mov
inc
sbb
call
shlb
dec
mov
mov
or
sahf
sub
jbe
and
inc
mov
dec
and
repz
jg
dec
mov
inc
sub
lea
sub
xor
inc
cmp
pop
push
loopne
sub
test
lcall
add
and
lcall
xchg
sub
mov
jmp
test
add
jno
andb
adc
loope
jp
into
daa
pop
bnd
mov
sub
sbb
or
add
push
pop
sbb
add
arpl
sub
lcall
outsl
cmpw
int3
push
ljmp
cmp
mov
xchg
mov
movb
loopne
pop
rcr
push
push
out
ljmp
add
je
xor
push
add
cltd
sbbb
in
pushl
andb
out
imul
mov
add
gs
ret
or
add
push
loop
call
sbb
xchg
insb
test
adc
sbb
push
adc
jmp
cmp
lods
jo
cmp
xor
inc
pop
or
or
ljmp
pop
inc
call
clc
and
or
pusha
push
mov
fucomp
inc
push
xchg
add
test
mov
mov
sub
idivb
adc
or
setg
inc
dec
cmp
push
in
jg
fbld
call
ja
data16
jns
cmpsb
inc
dec
cmp
icebp
lcall
movsb
add
push
push
push
xorb
cld
aas
call
add
lcall
mov
or
fdiv
pushl
and
cmp
sti
rorl
adc
cmp
aaa
leave
clc
out
fadd
mov
shrl
dec
and
pushl
xchg
mov
push
sbb
lock
movl
sbb
loopne
sbb
dec
or
idiv
jg
push
mov
adc
test
sbbb
aam
pop
cmp
pop
push
xchg
in
addr16
pop
sbb
call
mov
cmpsl
in
iret
push
pop
outsl
loope
call
jp
sbb
inc
add
out
or
popa
das
flds
fcmovnbe
jg
call
in
inc
xchg
or
lock
cmp
imul
adc
adc
mov
xchg
aam
enter
mov
add
inc
inc
or
pop
arpl
jecxz
test
pop
ret
add
nop
or
ljmp
push
ret
add
or
add
fcoml
and
pop
call
pop
add
jno
enter
pop
adc
dec
lock
sbb
decl
je
dec
std
sbb
add
lods
add
or
mov
and
xchg
out
daa
aas
adc
lock
push
mov
ljmp
sbb
dec
incl
in
mov
shll
push
insl
push
repz
das
push
push
std
or
push
cld
ljmp
adc
stc
mov
mov
jl
lock
push
push
jnp
mov
mov
and
lods
dec
sbb
jle
dec
ret
outsb
mov
sub
mov
sahf
pop
pushf
jl
sub
pop
adc
sbb
scas
jg
add
js
or
mov
dec
mov
ja
mov
ljmp
incl
mov
push
push
addr16
add
xor
lock
outsb
mov
out
sub
lcall
rorl
daa
push
or
mov
lods
test
in
xchg
add
jmp
movb
ss
testl
inc
inc
mov
jecxz
xor
sbb
jg
or
and
ss
stos
inc
fs
aaa
loopne
mov
shrl
add
xchg
fildl
pushl
mov
inc
loopne
scas
sub
loopne
dec
push
scas
push
inc
mov
or
call
push
cld
arpl
sbb
xor
sbb
push
test
das
sub
mov
or
xor
les
and
xchg
adc
je
mov
or
jns
fsubl
rorb
lock
rclb
and
push
adc
dec
push
es
mov
mov
aas
mov
call
xor
fiadds
int
sar
mov
xchg
rolb
les
or
cvtps2pi
jb
or
repnz
nop
pop
out
mov
stc
add
xchg
ret
or
xor
cmp
outsl
push
add
sar
out
movsb
cmp
mov
jbe
sti
add
xor
mov
test
pop
add
enter
xchg
lcall
sub
inc
imul
push
push
js
xlat
outsl
shlb
mov
mov
cmp
jno
into
add
das
jl
mov
adcb
lods
loope
call
and
adc
jbe
loopne
push
pusha
dec
and
xlat
add
sub
jo
ja
mov
rcr
popa
imul
stos
cmp
lods
or
mov
push
pop
push
xchg
iret
push
rorl
push
sub
jmp
scas
mov
pop
add
sbb
mov
ljmp
xchg
or
enter
jo
scas
lcall
imul
push
clc
xchg
jo
adc
hlt
mov
and
dec
adc
jmp
jno
in
xor
mov
call
movups
sub
xor
movsl
xchg
cmp
sbb
clc
jg
lret
fdivrl
popf
dec
mov
adc
push
or
inc
test
inc
ret
lcall
mov
cmp
or
mov
insl
mov
lcall
ljmp
ljmp
imul
jmp
mov
adc
lahf
add
push
pop
stos
shlb
cmp
loopne
cmc
sbb
sub
sub
daa
cwtl
aad
lcall
loopne
clc
jne
popa
es
addr16
loop
push
adc
adc
sub
sbb
inc
or
mov
inc
xor
xchg
jae
add
mov
inc
das
sbb
mov
lods
pusha
mov
test
and
jmp
addr16
ss
dec
enter
rcl
xchg
pop
and
aam
jl
add
add
xchg
loop
incl
xor
mov
dec
push
and
mov
mov
nop
lea
sbb
insl
sub
cmp
call
sub
test
push
mov
push
xchg
push
add
sub
xor
mov
xchg
or
or
test
cmp
dec
sbb
ret
adc
xor
es
roll
dec
cltd
sbb
ljmp
or
lock
jo
or
fists
xchg
or
dec
addr16
shll
dec
xor
cmp
push
daa
ljmp
decl
ja
or
inc
sahf
push
lcall
add
jo
movsb
cmp
hlt
insl
xchg
jnp
dec
push
mov
loopne
decl
lea
inc
xchg
or
mov
subl
push
call
xchg
das
and
loopne
push
andb
incb
lock
jb
das
cli
adc
mov
in
cmc
cmp
loopne
dec
bound
shl
call
testl
ss
test
xchg
outsl
xchg
sahf
rcl
and
scas
jg
xchg
testb
dec
xchg
movsl
or
add
into
loopne
mov
jg
scas
je
jne,pt
inc
pop
sub
xor
jmp
and
sbb
xchg
inc
fwait
rolb
lahf
mov
pop
or
es
in
lea
dec
in
std
les
mov
add
inc
mov
sbb
mov
push
fisubs
adc
sti
cmp
lcall
xchg
stc
push
dec
lea
or
fadds
pushf
rclb
jg
fisttps
cmp
jbe
dec
sbb
enter
mov
add
inc
push
cmp
jg
jnp
and
xchg
pop
adc
repz
andb
fdivr
push
ljmp
xor
sub
xchg
xchg
inc
add
ret
mov
decl
das
cs
bnd
je
or
jb
adc
orl
in
fisubs
enter
mov
jge
or
mov
sbb
popa
jb
cmp
jmp
fists
test
push
jae
data16
sub
je
add
jle
add
aas
push
pusha
jmp
ljmp
fwait
pop
js
push
mov
add
pusha
xor
or
ljmp
es
mov
dec
dec
shl
ret
mov
jmp
loop
add
in
or
add
lea
insb
jno
std
fldt
nop
lahf
jo
adc
inc
rclb
inc
in
call
or
xchg
lcall
mov
cmpb
mov
adc
rolb
enter
je
jmp
mov
mov
addr16
add
jmp
add
das
cli
add
shlb
sbb
js
jecxz
xchg
adc
daa
shr
push
inc
push
movsb
fcomip
incl
ljmp
xchg
adc
push
test
mov
sbb
dec
xor
out
cli
pushl
adcb
jne
jmp
mov
add
int
or
ljmp
jne
and
push
or
push
loope
push
xor
ljmp
xor
je
cld
je
pushf
push
add
fsubrs
pop
stos
inc
lret
xchg
push
frndint
pop
loopne
lds
lock
lretw
xchg
adc
pushl
std
aaa
loopne
push
mov
in
cmp
push
ret
sbb
sbb
inc
jmp
daa
cmp
movsb
fiaddl
pop
cmpsb
int3
decl
jp
popa
fwait
push
fcompl
add
and
and
dec
dec
mov
xchg
aas
push
jno
xor
je
test
xor
icebp
sbb
pop
pop
pop
pushl
sub
hlt
pop
popa
fadd
cs
lahf
xor
gs
inc
pop
pushl
je
xor
or
out
mov
incl
sbb
mov
mov
and
add
mov
sub
call
dec
andl
adc
mov
ret
and
insl
push
cmpsb
pop
test
xchg
and
add
mov
or
call
lret
cmp
mov
xchg
and
mov
jmp
mov
sbb
ficomps
in
aas
leave
test
pop
decl
pop
je
jmp
or
pop
xor
cmp
mulb
jns
decl
orl
dec
pop
test
jp
popa
setae
imul
incl
mov
std
sub
add
test
cmp
adc
loope
clc
decl
lock
out
cld
adc
jg
in
ret
loop
lods
hlt
hlt
cmpsb
or
popa
insl
sbb
int3
cltd
mov
sub
xorl
movsl
popf
cmp
cld
int3
jp
xchg
sub
leave
fidivrs
add
lods
fs
decl
outsl
adc
cmp
leave
cs
ret
nop
lods
xor
test
decl
xchg
lods
sbb
push
movsb
movb
inc
xlat
mov
inc
popa
xchg
push
sbb
sti
pushl
aaa
xchg
clc
adc
fs
js
les
in
push
push
imul
or
cli
mov
and
pop
sbb
xchg
cwtl
lcall
call
and
test
or
mov
orb
lds
ss
sub
rorb
lock
and
pusha
scas
test
inc
add
ljmp
mov
loop
dec
mov
mov
icebp
pop
test
incl
rcll
jo
cmpsb
stos
add
mov
daa
pop
loopne
sbb
and
incl
push
push
and
lds
xor
icebp
mov
ja
mov
es
fdivrs
lcall
loop
jne
sub
ret
lret
adc
lock
cmp
push
das
lea
pop
jae
pop
cld
lcall
push
shlb
sti
or
rclb
adc
call
int3
call
adc
loopne
or
jge
es
pushf
push
in
daa
sbb
and
hlt
dec
cmp
fs
dec
cmpsb
fisttps
sbb
aad
ret
mul
add
add
das
in
jbe
lcall
cmp
movsb
cwtl
fisubl
addr16
mov
fwait
pop
ja
push
add
sbb
jg
test
push
dec
aad
xchg
nop
fcoml
cmp
xchg
fsub
lcall
dec
in
cmp
decl
push
fistpl
mov
pop
adc
inc
shl
and
outsl
ret
fadds
pushl
mov
jo
lods
cmp
push
pop
mov
dec
dec
xchg
testb
cmp
sbb
sbb
cld
test
out
jge
cmp
or
insb
jo
imul
mov
hlt
mov
pop
add
cld
xchg
inc
fistpll
enter
movsb
outsl
js
mov
adc
fildll
or
dec
fs
jmp
xchg
or
lods
adcl
xchg
or
jmp
jnp
inc
in
mov
xor
xchg
cmp
lret
cmp
int3
clc
stos
add
jmp
xchg
sbb
stc
int3
sbb
xchg
lahf
cmp
shll
and
sbb
mov
aam
lcall
mov
lahf
dec
mov
inc
int
je
sbb
and
test
adc
mov
incl
mov
sub
push
lock
int
loope
push
imul
cs
sub
mov
popa
aad
jmp
push
add
jo
add
cld
jmp
jns
push
icebp
aas
jmp
addl
aaa
add
or
out
pushl
xchg
dec
sti
xchg
add
xor
adc
add
dec
and
ljmp
mov
gs
or
pushl
and
adc
test
inc
adc
cmp
mov
enter
xor
add
call
roll
lods
and
inc
mov
hlt
xor
std
sbb
call
loopne
inc
fs
sti
mov
stos
dec
add
xor
jo
jno
popf
repz
leave
sti
out
mov
dec
rolb
sti
jns
enter
ret
sti
pop
sub
dec
push
inc
into
loop
jg
mov
icebp
jmp
push
jo
mov
inc
xorb
inc
imul
mov
lcall
jmp
sbb
mov
jne
adc
and
ret
ret
decl
test
pop
pusha
adc
jl
imulb
pop
sbb
cmp
cmp
ficomps
pop
add
dec
test
dec
add
mov
push
pusha
sbb
lods
and
or
add
call
pop
sub
mov
insb
lea
mov
pop
xchg
add
or
mov
leave
hlt
loope
call
aas
mull
addl
lods
mov
lea
inc
sbb
jns
sub
lahf
loopne
in
xchg
and
mov
jmp
or
cs
adc
loope
sub
dec
aam
or
and
ud0
outsl
cmp
push
ret
jne
mov
pop
scas
sub
in
or
aas
push
jg
decl
push
pop
jno
in
mov
or
lock
sbb
aam
jg
sahf
and
and
test
or
add
jg
mov
stos
jo
cltd
shrl
pop
sbb
jbe
mov
push
xorl
lock
lret
ja
and
and
decl
and
jo
mov
add
dec
or
xchg
scas
sar
lcall
cmovp
dec
ret
inc
inc
jae
pop
ret
and
and
test
fincstp
or
fmull
xor
pushf
mov
dec
cmp
jmp
das
inc
movd
adc
inc
sub
jns
add
xor
add
aas
jns
adc
push
in
incl
pop
sar
lcall
sbb
cli
aad
les
mov
cmp
mov
adc
je
adc
sub
sbb
cli
inc
cmp
cwtl
push
xor
insb
jle
xor
pop
dec
jge
mov
mov
ljmp
sbb
sub
lret
sbb
mov
int3
push
nop
push
lcall
push
in
stc
add
mov
inc
cmc
sub
mov
or
adc
cmc
inc
and
insl
in
int3
pushf
mov
jb
in
mov
in
aam
mov
add
cmp
or
add
lea
push
xchg
lock
jmp
add
and
ret
icebp
push
das
or
iret
lods
push
inc
mov
call
add
mov
sbb
xchg
pop
push
and
fmull
jg
xchg
sub
push
std
call
lods
pop
xor
xor
mov
jno
fdivs
lahf
stos
jmp
repnz
dec
aam
cmpsl
fwait
add
lods
scas
xchg
pushf
setae
cld
cs
dec
aam
js
pop
or
stos
test
lret
add
outsl
push
ljmp
mov
dec
sarb
mov
adc
call
push
cmp
mov
inc
or
mov
test
ljmp
jae
or
sub
lret
inc
sub
dec
aaa
aad
es
outsb
or
add
aaa
std
call
rorb
mov
cs
sub
shl
movaps
int3
jo,pt
sbb
decl
and
mov
push
insl
jb
mov
es
stos
or
dec
enter
incl
adc
push
and
sbb
outsb
pop
les
fisttpl
ljmp
xor
xlat
and
sbb
inc
pop
push
scas
and
jmp
lret
xlat
test
pop
pop
fs
xor
lcall
decl
dec
imul
add
add
repnz
cmp
ljmp
stos
ds
cmp
ljmp
jp
add
dec
mov
or
jne
jmp
inc
mov
add
fstpt
mov
inc
ljmp
test
sbb
pop
push
pop
sahf
add
movsl
leave
sar
or
sbb
xor
or
outsb
movsb
inc
sub
mov
sub
outsl
and
mov
and
mov
imul
sbb
popf
sti
nop
mov
jp
ror
jnp
push
clc
ljmp
js
xchg
out
gs
xchg
loope
sbb
stc
push
in
pusha
stc
fiadds
cmpsl
pushl
pop
loopne
mov
insb
jge
scas
imul
inc
sbb
jmp
clc
and
pop
and
jbe
sub
jnp
loopne
hlt
and
mov
in
jae
inc
push
pop
push
outsb
jo
mov
dec
inc
push
and
call
push
xchg
or
mov
mov
aaa
std
outsl
xor
xchg
rcl
add
scas
pushl
xor
pop
add
aad
cmp
adc
adc
jns
adc
lock
mov
or
and
test
and
sub
clc
jmp
mov
stc
xor
adc
insb
ljmp
adc
mov
dec
in
iret
jno
adc
icebp
or
push
mov
sarl
sbb
jmp
fisubs
sub
inc
mov
push
sar
cmp
test
adc
xchg
or
push
lahf
push
xor
sbb
pop
sub
pushl
xchg
jl
mov
nop
sbb
sahf
sbb
push
dec
daa
mov
mov
or
pop
mov
mov
xor
and
incl
fwait
pusha
insl
and
daa
mov
inc
add
jno
push
ljmp
inc
cld
ljmp
out
or
push
xor
sbb
inc
test
out
in
orw
lcall
subb
or
or
addb
outsl
sbb
loope
test
pop
fs
push
pop
cmp
and
rorl
push
adc
lret
pusha
pusha
push
push
je
aas
daa
push
es
ja
sbb
and
pop
clc
push
adc
xchg
decl
movsb
mov
mov
jne
ret
adcb
subb
imul
push
inc
jle
mov
adc
cmp
sbb
xchg
sub
push
or
orl
sub
mov
mov
add
mov
insb
jo
ljmp
call
cltd
leave
imul
test
mov
mov
inc
mov
jb
cmpsl
mov
mov
shll
dec
push
sar
push
push
mov
pmaddwd
push
jae
movl
mov
add
push
repnz
jns
sbb
leave
push
inc
or
xor
lahf
jns
cld
jg
jmp
lods
cld
push
mov
push
xchg
dec
les
push
das
or
jne
mov
pop
cmp
sub
daa
mov
adc
dec
movsl
sarl
dec
pop
popf
sbb
lods
inc
jne
movsb
mov
push
inc
sub
lcall
jb
cmp
lds
in
mov
mov
ljmp
or
repnz
movsl
stos
leave
mov
sbb
loopne
dec
pop
dec
pop
pop
push
inc
sbb
fstpl
pop
mov
cli
je
adcb
rep
loopne
mov
ljmp
stos
jmp
xchg
mov
in
xor
xchg
cltd
cmpsl
and
aam
in
push
cmpsl
xor
cli
xor
hlt
cmp
push
lahf
in
and
and
decb
das
jns
negb
pop
jns
xchg
and
add
add
sbb
incl
mov
add
popa
repnz
test
jmp
push
mov
xor
sub
es
or
out
nop
cmovs
cmpsb
and
lcall
pusha
addb
lret
mov
movsl
jge
data16
jg
mov
lret
adc
das
jp
lds
in
lcall
dec
pop
rorb
jno
or
or
sub
inc
xor
scas
cmp
test
mov
sbbl
xor
rorb
mov
sbb
push
jmp
inc
je
lcall
decl
push
ss
sub
push
and
enter
and
ljmp
incl
push
mov
lods
data16
xor
dec
pop
sbb
jecxz
adc
push
ljmp
jns
sahf
inc
cmp
and
and
push
sub
mov
xchg
pop
gs
ljmp
sub
or
sub
subb
sbb
sub
je
lcall
push
stc
cmp
aaa
sub
mov
incl
pop
ret
lea
and
bound
jne
cmp
pop
rclb
sub
enter
mov
sbb
inc
inc
or
sub
mov
pushl
incl
mov
xchg
sahf
inc
inc
or
push
fsubrs
adc
call
daa
cmp
inc
insb
popa
faddl
and
leave
test
push
sti
push
outsb
daa
add
adc
lcall
cwtl
fs
mov
adc
lcall
jg
and
ds
cmpb
orl
mov
jmp
addr16
push
lcall
nop
and
add
dec
lahf
adcl
nop
das
xor
inc
add
loope
and
mov
test
mov
push
call
jns
lahf
adc
and
push
and
adcl
pop
jns
ret
out
mov
je
dec
jmp
call
ret
pop
jge
sahf
lock
xor
adc
adc
test
pushl
push
orb
aad
push
mov
or
mov
call
cltd
cwtl
fcompl
out
or
dec
rorl
push
push
push
mov
add
das
pusha
dec
int3
mov
ljmp
lods
repnz
int3
sub
test
push
fmuls
add
mov
sbb
adc
pop
sbb
out
mov
pushl
ss
lret
mov
jns
sbb
neg
push
nop
mov
incl
xor
rorl
lock
mov
ret
popl
push
fcomps
mov
ljmp
cmpsb
loope
xor
jmp
push
adc
leave
push
pop
mov
mov
movsl
scas
cltd
mov
push
enter
sub
dec
inc
test
incl
sbb
push
pop
add
adc
inc
jge
sub
gs
push
push
sbb
jne
test
jne
out
clc
jle
shl
and
inc
or
lods
ja
mov
adc
std
pop
jns
incl
test
pop
loop
out
mov
xor
inc
cmp
jg
faddl
jge
je
mov
add
add
sarb
lds
fstp
rol
fmuls
mov
sub
and
push
nop
mov
fidivl
mov
sbb
jg
mov
sub
jo
lea
dec
pop
dec
adc
mov
sbbl
push
sub
dec
cmp
and
adc
mov
incl
or
jnp
xor
xchg
pop
add
cmp
jge
ret
aas
jae
xchg
xchg
daa
mov
jno
fs
nop
data16
xor
sarb
dec
sbb
lea
dec
mov
xor
ljmp
jp
add
je
insl
pop
pop
rcll
das
mov
loopne
mov
inc
cs
mov
mov
ds
pop
incl
pop
xor
add
mov
xchg
adc
orb
in
jne
inc
or
xchg
test
test
sbb
test
in
fisttps
cld
pushf
jl
xor
cs
mov
clc
jl
xor
add
inc
dec
adc
lcall
scas
mov
adc
das
xor
cmp
addr16
pop
xchg
jecxz
xor
out
cld
std
inc
or
ljmp
or
out
and
dec
inc
jmp
adc
and
mov
jl
pop
nop
or
decl
inc
test
popa
cld
lock
jo
push
cmpl
dec
jnp
adc
pop
lock
push
call
add
dec
sbb
adc
lds
lea
js
jmp
js
jg
inc
inc
dec
adc
push
pop
mov
mov
aaa
or
jge
xchg
fdivr
decl
and
adc
fs
adc
cmp
cmp
ljmp
mov
dec
push
adc
push
pushf
add
mov
push
add
incl
cld
jno
dec
into
xor
xchg
repnz
inc
add
cmp
cmp
jmp
jmp
mov
test
popa
test
in
pop
fidivl
std
add
sbb
repnz
push
pusha
leave
dec
incl
ret
je,pn
pop
popa
push
or
add
test
mov
sub
out
mov
adc
inc
dec
xor
prefetch
or
lcall
dec
mov
add
adc
daa
jne
popa
dec
adc
test
movsb
or
mov
sti
add
inc
std
add
add
pop
and
push
test
xor
call
push
sbb
xchg
dec
insb
data16
mov
addb
int3
pop
insb
icebp
xchg
ret
ljmp
insb
inc
scas
push
mov
insb
inc
ja
rcrl
push
pop
push
jmp
call
add
mov
xchg
jmp
ret
fists
roll
fdivs
dec
or
out
imul
clc
and
cmpsb
incl
add
mov
mov
dec
dec
and
cwtl
add
lahf
jae
add
xchg
xor
nop
mov
inc
sub
daa
jmp
insl
inc
dec
cwtl
push
xchg
pusha
das
dec
cld
inc
inc
cmp
test
mov
jmp
xchg
sbb
jae
fildl
push
pusha
sbb
cli
pop
dec
mov
adc
add
cs
add
sub
in
mulb
add
loopne
dec
imul
dec
movsb
loopne
mov
call
push
add
js
inc
lret
push
xor
dec
ret
outsb
push
leave
inc
and
pusha
sbb
push
sarb
pop
push
cmpsb
dec
sub
incl
fnsave
clc
dec
ljmp
test
or
jo
pop
push
nop
jo
clc
mov
test
jo
aam
insb
dec
add
and
jo
ror
xchg
aam
mov
ljmp
in
inc
ss
xchg
sbb
testl
add
ljmp
lcall
loope
push
mov
pusha
sbb
add
ljmp
ds
push
cmp
mov
std
sub
mov
inc
jo
notb
mull
dec
orb
imul
mov
dec
pop
add
mov
add
outsb
cmc
cmpsb
dec
mov
in
insb
loopne
add
cli
and
test
sar
pop
ss
or
push
in
lea
cmp
mov
hlt
and
pop
in
mov
hlt
pop
xor
inc
lods
fld
adc
sub
loope
in
xchg
decl
mov
ret
adc
bound
fst
add
or
mov
call
aaa
subb
push
sti
cmp
pop
pop
pop
jg
mov
add
test
pop
fdivp
test
adc
jg
push
push
std
add
jecxz
sub
rcrl
cmp
cmp
mov
or
mov
mov
jmp
test
add
push
inc
and
jmp
pop
sbb
fsubrp
push
or
jnp
rorb
pusha
rolb
pop
xor
test
fwait
jno
es
jle
sar
jmp
mov
pop
ret
in
and
xlat
and
jmp
inc
lcall
inc
test
outsl
lcall
push
psubusw
push
xchg
and
lock
ljmp
inc
mov
and
mov
mov
add
fs
push
out
clc
fucomip
in
cld
les
nopl
dec
jp
mov
cmp
push
pushl
in
pushf
loope
push
gs
and
jg
ret
dec
sub
mov
pusha
ret
jmp
jg
pushl
addb
xor
fisttpl
inc
orb
xchg
sbb
mov
incl
popa
pop
jo
popf
add
dec
mov
test
mov
scas
add
mov
test
ljmp
cmp
pushaw
je
add
pushl
push
push
push
je
add
add
cmp
lea
inc
cmp
or
ljmp
dec
ss
mov
je
inc
sbb
add
inc
mov
jmp
or
subl
aad
pop
cld
fidivs
mov
dec
cmp
or
jecxz
scas
imul
std
test
pop
push
jl
data16
jmp
sbbb
mov
push
js
aam
push
xchg
mov
or
popf
mov
out
adc
push
sub
add
dec
sub
incl
into
imul
adc
push
mov
jne
xchg
cltd
insb
decb
cmpsl
rclb
lea
orl
incl
decb
jl
fs
adc
sub
xchg
cltd
loopne
decl
mov
sub
mov
push
imul
ljmp
cwtl
test
movsl
xchg
mull
fldt
leave
or
test
sbb
mov
decl
pop
popa
lea
jl
adc
rcll
hlt
lock
cmp
rcrb
jg
jmp
adc
or
dec
add
mov
add
lcall
leave
test
dec
loopne
mov
xor
sti
jmp
inc
rorb
sbb
lcall
xchg
mov
mov
or
push
popf
cmpsb
sub
lcall
push
insl
orl
scas
jle
mov
push
ds
mov
shll
incl
sub
fdivp
fisttpll
sbb
mov
decl
jmp
xor
mov
mov
push
sahf
insl
or
or
cmpsb
dec
cmpsl
hlt
mov
rcrl
add
jb
ret
pop
popa
inc
jns
pushl
insl
adc
loopne
or
adc
xor
rcrb
fwait
lock
jmp
push
aaa
pop
inc
xchg
int
jae
sbb
push
fcomps
in
adc
and
decl
push
and
jg
push
pop
cmp
lods
and
in
jo
call
push
insb
jge
dec
call
add
testl
in
das
and
decl
add
call
push
loopnew
mov
mov
incl
jmp
add
or
xchg
mov
test
pop
sub
cmp
cld
clc
xchg
pop
les
scas
loopne
mov
ljmp
or
insl
lds
or
mov
in
dec
int3
pop
cld
mov
adc
stos
inc
repnz
and
gs
ljmp
clc
arpl
shl
xor
inc
inc
test
lock
test
stc
ja
adc
das
sahf
jae
push
mov
mov
sbb
pushl
adc
pop
jo
pusha
icebp
cmp
xchg
ja
pop
sbb
subb
shll
popa
and
sub
call
xor
inc
lret
add
hlt
mov
dec
xchg
dec
jo
test
add
std
ljmp
fldenv
dec
cmp
mov
popf
cwtd
addl
decl
jmp
fxch
ret
pop
xor
rclb
pop
addl
sbb
or
ljmp
sahf
jne
push
ja
and
push
xor
mov
dec
fsubrl
pop
inc
add
inc
push
and
xor
bnd
cld
mov
incl
les
insl
and
mov
fwait
shll
outsl
inc
mov
dec
and
cmp
pushf
lock
decl
jne
out
outsl
inc
jb
add
inc
sahf
aam
movsb
push
adc
mov
inc
inc
xchg
xchg
hlt
pushl
inc
jge
int
push
push
and
xor
into
cli
add
in
rcrb
je
leave
adc
clc
decl
adcl
pop
mov
ljmp
or
shlb
jmp
cmp
push
add
push
enter
ret
sub
call
in
clc
lock
mov
xor
add
sbb
cmp
nop
xchg
xor
inc
scas
or
fmuls
dec
xchg
int
add
lock
in
imul
subb
ljmp
test
mov
shlb
scas
jne
xor
cmp
call
inc
js
loopne
or
mov
outsl
inc
sti
dec
jg
inc
push
jl
jp
and
push
rcl
jg
dec
push
rorb
fiadds
dec
fcoms
ret
xchg
adc
dec
ljmp
cmp
inc
sub
adcl
adc
mov
ljmp
loopne
fistpl
shlb
bound
fsubrs
into
aad
out
mov
lcall
aad
cmp
rclb
add
dec
inc
add
aam
ds
pop
incl
or
sub
and
jae
push
fnsave
jp
incl
aam
sub
cmpxchg
and
dec
daa
and
jle
das
jne
and
adc
push
adc
lcall
push
mov
xchg
gs
je
xchg
adc
and
mov
inc
cmpb
xor
nop
adc
je
test
add
call
data16
cmp
sahf
cld
fstpt
sti
jle
xchg
mov
mov
adc
inc
push
jg
dec
cmp
es
add
inc
mov
pop
adc
fildll
fdiv
fcmovnbe
and
dec
aam
dec
sar
pushl
ss
test
push
sahf
jl
mov
lea
shll
jne
jg
ljmp
sarl
add
sub
cs
push
or
mov
icebp
ljmp
add
jle
clc
je
xchg
xor
push
pusha
adc
add
lea
lcall
cmp
leave
xchg
je
fiaddl
add
mov
dec
pusha
shll
pop
pushf
ds
fs
dec
pop
mov
lcall
xor
in
sbb
fs
stos
adcl
les
xchg
push
sbb
sbb
icebp
inc
ficompl
cld
rolb
mov
mov
adc
pop
push
pop
xchg
clc
cmpsl
dec
push
inc
lods
xchg
and
or
mov
aas
out
pop
push
mov
cli
add
dec
jmp
or
mov
aam
mov
ret
jnp
test
lret
xchg
xor
pop
test
call
xchg
add
imul
cmp
pop
rcrl
jmp
pushl
nop
or
add
lret
outsl
in
je
xlat
mov
pop
add
sub
mov
imul
incl
les
mov
jb
mov
std
pop
daa
aaa
jmp
cmp
movntps
jmp
pop
xchg
xor
adc
jl
jp
enter
push
dec
cli
push
jge
jb
add
pop
icebp
push
aas
pop
jo
add
pusha
push
test
clc
sahf
xorb
mov
orb
int
lret
lcall
pop
call
test
mov
and
pop
pop
mov
mov
aas
jmp
cmp
sti
cs
adc
mov
push
lock
and
ja
icebp
cmp
xchg
add
dec
dec
mov
decl
xor
mov
adc
add
pop
add
cmp
lcall
lea
jmp
push
push
sbb
sbbl
xor
jne
mov
lcall
aad
mov
jne
pop
lret
adc
fmuls
call
mov
sbb
orb
and
mov
mov
xor
or
gs
inc
mov
jmp
jge
popf
jo
sbbb
add
inc
cmp
adc
stc
inc
lea
ljmp
push
negl
sub
addl
sub
pushl
dec
inc
push
and
ds
test
adcb
dec
mov
lcall
jmp
add
xorl
shll
xor
call
insl
or
aaa
mov
fmul
dec
in
mov
dec
adc
rolb
jecxz
mov
lcall
cmp
dec
sarl
add
int3
jmp
decl
loop
xor
cmp
and
xchg
sbb
lods
xchg
sar
dec
mov
or
jge
jg
lea
and
sub
inc
sub
jmp
and
lock
xchg
adc
insb
or
xor
jmp
adc
jb
push
jmp
outsl
sbb
fdivrs
jae
out
cld
aas
or
xchg
cmp
jae
mov
sub
decl
and
and
mov
push
int3
sub
sar
sub
stos
aam
add
mov
pop
or
sbb
xor
pop
adc
cmpsl
push
and
lcall
pop
and
cmp
dec
inc
arpl
das
lods
or
xchg
xchg
adc
das
fsubrs
daa
pusha
std
ljmp
out
mov
jle
setns
sub
in
lcall
clc
insl
movsb
or
arpl
cmp
cld
cld
mov
bnd
inc
pop
insl
or
ud0
call
fistl
lret
add
sti
add
push
pop
into
jge
pop
jle
arpl
inc
inc
add
incb
addr16
adc
lock
test
outsl
cli
jmp
xchg
movsb
mov
push
or
add
andl
and
cmp
gs
ret
cmp
pop
or
or
scas
adcb
vmovaps
push
xchg
pop
mov
hlt
and
aad
xchg
fmull
fadds
sarb
incl
push
por
jne
not
into
add
test
sub
nop
xor
decl
sub
nop
mov
jnp
xor
sbb
rorb
sahf
push
cmp
adc
xchg
xlat
sbb
pminub
icebp
decl
inc
add
test
xchg
xchg
pop
bound
xchg
sbb
adc
pop
mov
adc
out
fnstsw
sbb
sub
push
cmp
jne
ja
mov
daa
dec
jg
add
ret
sub
mov
orl
jne
faddp
jg
jmp
adc
jbe
pop
mov
sahf
jle
mov
ljmp
and
push
mov
int
inc
mov
cmp
mov
xor
jl
pop
cld
incl
ror
lret
sbb
jmp
mov
or
add
sub
or
movsl
fistpl
mov
sub
pop
mov
add
inc
add
cmp
mov
sub
sub
adc
inc
imul
jl
std
cltd
dec
lahf
lock
decl
pop
sub
lea
loopne
data16
jmp
mov
cld
inc
mov
mov
and
decl
scas
shl
fstps
inc
orl
jg
jl
imul
xrelease
nop
rorb
sbb
shll
shlb
adc
mov
jnp
js
adc
mov
test
push
inc
inc
mov
push
jp
clc
lcall
adc
fucomi
and
test
pop
sub
push
gs
mov
incl
ljmp
mov
mov
sbb
loopne
out
cmpsb
mov
add
fcmovnbe
push
jl
xor
jae
mov
add
mov
xor
fists
sahf
hlt
mov
cmp
adc
outsl
notl
push
jg
pop
or
incl
in
lret
call
add
jb
lret
and
rcrb
pop
jo
test
out
xchg
fisttpll
push
aaa
add
out
rorl
jg
add
cli
test
sbb
mov
sti
loop
push
loope
xor
in
mov
ja
movsb
adc
inc
mov
push
add
cmp
das
cwtl
sbb
fnstenv
xchg
repnz
sbb
mov
adc
movsl
and
mov
cmp
dec
dec
inc
gs
add
repz
sbb
add
pusha
jns
jg
decl
adc
xor
call
push
or
call
aam
daa
push
push
iret
and
test
add
stos
sbb
call
scas
mov
call
xchg
fisubs
xchg
xor
mov
or
inc
adc
adc
xchg
lea
mov
inc
push
and
inc
dec
push
mov
scas
mov
sarb
data16
xor
mov
and
test
inc
jae
ret
or
lods
inc
sti
ss
sub
insb
cmpb
push
sahf
lcall
orb
sbb
aad
scas
cli
out
or
pop
push
add
fmull
loop
add
decl
dec
rorl
fsts
push
mov
call
mov
test
sbb
add
pop
mov
push
mov
je
outsb
es
incl
sub
dec
and
test
xchg
sarb
int
das
mov
adc
call
pop
loopne
je
cld
nop
mov
scas
jbe
xor
jo
mov
out
sbb
sbb
shr
pop
cmp
ljmp
jg
cmp
addr16
lcall
ljmp
aam
dec
jae
mov
push
loopne
or
ret
dec
divb
mov
sbb
std
mov
fwait
test
mov
add
pushf
filds
cmp
mov
out
jg
and
jg
fcoms
cld
lock
out
inc
je
incl
or
fwait
scas
mov
incb
imul
test
js
ljmp
xor
imul
fcoml
cmp
ret
mov
dec
mov
add
lds
or
mov
andl
mov
test
pop
ret
jecxz
in
js
cmp
xchg
xchg
xchg
push
mov
mov
pop
push
dec
mov
stos
xchg
push
push
incl
inc
cmp
xor
cmp
jl
jmp
arpl
outsl
ss
add
loope
incl
jg
dec
ret
test
inc
dec
mov
fwait
mov
push
add
cmp
addl
sbb
jnp
jl
call
mov
mov
sar
inc
pop
sbbl
lret
mov
lods
dec
and
addr16
jg
call
xor
pop
pop
jle
jmp
sub
addr16
enter
sbb
sbb
clc
dec
dec
movsl
loopne
and
or
loope
addb
mov
push
outsb
cli
fcomip
lcall
pop
mov
movsb
mov
aas
popa
sti
fnstenv
and
dec
xor
fisttps
idivl
and
push
push
sub
sbb
sub
adc
pop
sub
or
xchg
adc
fs
ljmp
push
js
add
mov
movzbl
pop
mov
pop
in
cli
sbb
ja
jp
mov
mov
incl
cmp
shr
jb,pt
lcall
std
popa
loopne
add
mov
push
jo
xchg
incl
cld
adc
sbb
mov
rcr
adc
shlb
jle
add
loopne
ljmp
jle
pop
jmp
cmp
jle
inc
add
jmp
mov
ljmp
lret
scas
jp
xor
test
into
mov
jmp
shll
cmp
lods
pop
inc
xchg
ficomps
push
or
ljmp
fwait
orb
pop
and
push
popa
mov
data16
ret
andl
xor
addb
add
daa
aam
push
in
jp
mov
pushl
out
sbb
dec
je
cld
aaa
in
into
and
daa
cmc
inc
and
cmp
jle
cmp
jne
loopne
pushl
or
mov
cmc
insb
test
jne
ds
mov
out
hlt
inc
dec
icebp
add
adc
push
push
fsubrs
fldenv
int
add
mov
int3
jg
push
rcl
xchg
ja
cld
and
cmovns
nop
aam
mov
test
call
add
mov
xchg
mov
push
add
pop
push
mov
inc
add
jmp
or
pushl
movsb
notb
imul
pop
incl
xor
sbb
mov
adc
push
lret
mov
and
mov
mov
cli
es
dec
pop
jge
lea
pusha
push
out
mov
popf
lret
mov
pop
xor
mov
add
insl
bound
adc
cld
mov
ljmp
lcall
pop
test
shlb
push
cmp
xchg
icebp
dec
fst
lods
loop
dec
inc
stc
jl
mov
ds
ljmp
add
and
lock
adc
inc
hlt
mov
ljmp
mov
xchg
add
ret
lds
add
aam
out
and
xchg
std
mov
and
sub
pop
or
lahf
call
call
or
xchg
insb
pop
fs
xchg
and
popl
xchg
shr
addb
add
ror
add
or
inc
shr
xor
xor
add
in
ljmp
jb
imul
cmpl
test
adc
cld
fcomps
add
cmpsl
and
lahf
out
sub
movb
shll
xor
or
inc
jno
xchg
adc
and
loopne
adc
xchg
cli
rcrl
sbb
call
lcall
test
test
cmpsl
insl
sub
repnz
mov
add
pop
pop
mov
ds
lods
push
std
ljmp
add
adc
fisubs
sbb
jmp
lods
lods
cmpsb
jmp
mov
sub
and
add
ds
in
adc
pop
jl
dec
aam
add
fcomip
incl
inc
inc
jne
push
popf
or
add
inc
orl
xlat
jg
mov
cmp
jae
push
sub
push
add
push
std
ljmp
or
add
add
xor
incl
or
add
mov
decl
test
mov
jle
mov
cs
and
mov
std
lcall
das
inc
out
sbb
pop
stc
ja
or
push
or
stos
push
add
out
daa
aaa
mov
or
cmp
cld
jp
dec
mov
xor
nop
shlb
mov
cmpsl
mull
mov
lcall
mov
popa
outsb
cmp
arpl
cli
add
divl
pusha
ljmp
call
or
mov
mov
add
push
lea
and
fcmovnb
cmp
incl
testl
ret
cmp
pusha
shr
outsl
xor
sbb
sub
mov
int3
outsb
lret
xor
int3
adcl
incl
pop
aas
call
mov
jbe
mov
inc
push
and
decb
xor
imulb
pop
movsb
lcall
fs
arpl
xor
or
rcr
inc
add
hlt
dec
jmp
pushl
jbe
adc
sbb
xchg
and
lods
mov
xchg
cmp
mov
ror
cmp
decl
ljmp
sbb
notl
and
xchg
mov
je
and
je
popa
roll
jle
cld
xchg
or
decl
hlt
adc
sub
mov
adcb
push
or
mov
xchg
xchg
int
cmc
dec
movsb
and
cld
loopne
movsl
das
shrb
lcall
push
mov
js,pt
cmp
cld
jnp
add
xchg
ljmp
outsb
mov
pop
push
xor
incl
jl
dec
pop
nop
jo
lahf
addr16
inc
pop
ljmp
jge
cmp
neg
inc
jbe
lcall
sub
loop
jmp
mov
add
and
and
dec
notl
mov
out
sbb
and
xchg
lret
in
sub
pop
orl
adc
call
pop
pusha
in
push
pusha
loop
cli
jo
lret
je
outsl
ljmp
nop
ret
mov
incl
pushf
pop
ljmp
mov
sub
mov
push
mov
push
adc
fildl
das
adc
sub
cmpl
inc
jmp
insb
out
sub
xchg
xor
incl
inc
js
sbb
aam
mov
imul
sbb
jo
ret
cmovs
dec
leave
bswap
inc
add
shrb
pushl
adc
mov
call
push
dec
test
push
movsl
and
daa
add
add
or
or
call
dec
fadds
fildll
sbb
pop
das
insb
leave
jl
add
jmp
sbb
adc
test
fcomps
fistps
pop
dec
sbb
dec
dec
lock
lods
inc
ja,pt
push
insb
cmp
movl
xchg
mov
inc
aaa
mov
add
xchg
lock
jmp
pushf
mov
mov
xlat
push
cmp
add
adc
cltd
aam
dec
sahf
mov
test
pushl
xor
imul
shlb
lret
push
pop
adc
mov
fildl
dec
lcall
add
lock
jo
adc
in
adc
adc
hlt
les
mov
jns
mov
cmp
jo
js
movsb
loope
mov
pop
aas
dec
mov
leave
stos
dec
push
or
add
mov
imul
decl
cltd
push
je
mov
sbb
cmp
loope
push
ds
js
dec
aas
test
pop
addl
adc
xchg
std
mov
rsqrtps
pushf
sub
aaa
xchg
push
mov
pop
cltd
loope
add
dec
outsl
clc
pushl
ficompl
add
jge
add
pop
and
adc
sbb
je
ljmp
daa
push
push
jmp
push
jmp
mov
dec
pop
adc
or
dec
int3
in
iret
push
mov
pop
pop
sub
fmull
jbe
lods
in
or
cld
mov
cld
cli
jg
call
dec
cmpl
jmp
adc
mov
dec
xor
push
mov
jp
cmp
and
push
pop
in
sub
in
das
stc
inc
pushf
xchg
xchg
mov
mov
mov
xlat
imul
push
sbb
push
sbb
decl
daa
sbb
mov
jb
scas
or
jbe
aam
inc
push
push
push
lcall
or
mov
loopne
adc
outsl
cmp
mov
aas
xchg
out
mov
loopne
sbb
adc
adc
incl
push
xlat
je
or
xor
ret
mov
adc
push
sub
lock
cmpsb
fcomp
jg
lcall
mov
popf
sti
int3
enter
aas
hlt
inc
pop
sub
loop
fsubp
sbb
lcall
and
push
adc
adc
clc
add
test
jo
out
pop
imul
jl
jg
ljmp
mov
xchg
adc
sbb
adc
pushl
sub
pop
addb
or
sub
aam
or
andb
dec
mov
mov
loop
mov
ret
movsl
add
jg
mov
push
loopne
adc
test
adc
and
dec
int3
dec
push
xchg
pop
dec
jno
popa
xor
xchg
push
lcall
or
sbb
out
push
int3
push
adc
sub
mov
popf
add
sbb
inc
or
fidivrs
jmp
pop
std
pop
cwtl
mov
sbb
push
xor
ret
push
mov
jg
mov
int3
push
test
sbb
xor
rolb
or
call
cmpl
inc
sbb
add
adc
adc
negb
mov
stos
pushl
add
jo
or
adc
sbb
addr16
sbb
or
inc
add
fcomps
pop
mov
daa
inc
cs
and
sarb
add
pop
movl
mov
stos
rclb
mov
cwtl
cld
adc
jae
jmp
call
nop
sbb
add
pop
pop
das
mov
inc
jb
lcall
sub
adc
sbb
add
xchg
mov
inc
ret
mov
xor
aas
jle
les
cld
pushl
inc
push
dec
add
in
ret
and
or
or
add
adc
cmpsb
or
xor
gs
push
sti
fwait
or
fildl
adc
and
add
jp
sbb
cmp
mov
lcall
cltd
dec
sub
xor
push
ficoml
cmp
icebp
fistpll
pop
xor
imul
jmp
aas
xchg
add
inc
pop
fsubrs
or
inc
pop
decl
div
int3
neg
js
inc
sub
cld
test
addb
jg
das
inc
jg
mov
ss
iret
and
clc
adc
cmp
icebp
lret
jle
add
jmp
sub
xorb
inc
jnp
xor
mov
pushl
pop
add
and
ljmp
fisttps
pop
mov
leave
and
stos
adc
fsubrs
and
cli
xor
jg
dec
mov
add
pop
testb
add
sbb
loopne
inc
neg
sbb
aaa
xchg
add
dec
fdivrl
pop
push
test
push
int3
adc
outsl
pop
adc
and
decl
pop
sbb
negl
mov
cld
sub
jb
or
pushl
mov
or
xor
mov
mov
push
push
pop
ret
test
sub
xchg
std
xchg
add
dec
orb
mov
inc
call
adc
xchg
cli
add
pop
cmp
push
push
pop
scas
mov
mov
int3
xor
dec
dec
mov
xchg
add
dec
xchg
decl
or
push
pop
adc
add
mov
clc
cld
and
sbb
mov
nop
fisttps
test
sub
push
test
decl
sub
cmpl
inc
sub
jge
adcl
push
sub
inc
and
push
inc
pop
adc
jg
add
and
jg
jo
bound
leave
or
pop
and
lcall
sub
add
pop
arpl
dec
push
test
pop
btr
int
fs
clc
pop
cmpsl
mov
ljmp
insb
mov
xchg
sub
lea
xchg
push
sbb
aaa
jmp
adcb
incl
mov
or
sbb
mov
jb
mov
sub
sub
cmp
and
or
incl
incb
les
mov
mov
fs
aas
xchg
sub
cmpsb
test
push
dec
adc
pop
pop
leave
xor
inc
or
mov
xor
sub
or
sub
jnp
js
mov
jo
mov
pushl
xor
pop
imul
cmp
xchg
js
sahf
and
mov
mov
mov
sbb
popa
xchg
push
hlt
mov
sar
cltd
insb
inc
movsb
leave
sbb
and
loopne
push
push
fnstenv
rol
or
jmp
mov
mov
sub
rorb
mov
push
filds
xor
sbb
push
sbb
ret
jae
sbb
mov
cld
xchg
or
lock
decl
and
dec
xchg
aaa
int
sbb
xchg
inc
inc
cmp
clc
enter
or
stos
or
incl
test
jb
xchg
or
inc
popa
cmp
dec
add
ja
xchg
pop
mov
incl
add
test
enter
clc
lahf
das
test
add
jmp
nop
dec
inc
push
shll
sti
ljmp
lcall
jg
add
push
lcall
add
inc
ljmp
incl
xchg
stos
lret
sub
pop
insb
push
mov
iret
dec
lds
scas
add
scas
ljmp
pop
leave
outsl
xor
loop
jmp
or
aam
inc
dec
adc
adc
out
loop
cmp
aaa
loop
push
sbb
sbb
ret
leave
inc
push
test
and
testb
addb
scas
nop
icebp
pop
inc
fdivl
lea
inc
pop
push
clc
mov
add
jmp
clc
mov
and
lock
hlt
cmp
incl
pop
dec
clc
sub
sub
cmpsl
xor
test
gs
call
mov
insb
rorb
lcall
stos
movsl
testl
xor
cmp
xchg
movl
js
xchg
mov
out
sub
loopne
test
and
int3
xor
mov
add
pop
fimuls
mov
or
ljmp
js
cwtl
pushf
push
fists
jb
jns
outsb
lcall
mov
rclb
outsb
mov
jg
add
fsubp
pop
aam
incl
rorb
imul
jb
and
pop
jbe
js
in
xchg
iret
ljmp
xchg
lock
sahf
shrl
shrl
shl
fdivr
jecxz
cmp
push
push
add
adc
jmp
mov
jae
push
test
pop
loopne
shrb
incl
push
in
xor
mov
lock
cmp
in
mov
sbb
push
jge
inc
or
mov
lss
pop
cld
or
mov
int3
cmpsl
mov
out
lcall
or
adc
pop
das
scas
cli
xchg
cli
sub
out
pop
clc
addl
sahf
sub
adc
lea
mov
call
cmp
mov
push
lcall
adcl
xchg
dec
roll
cld
decl
push
sarl
mov
jle
je
or
pop
fisubs
bound
rclb
addb
xor
mov
test
popa
inc
clc
call
or
sub
je
push
cld
mov
push
mov
ss
lea
jl
call
incl
and
or
mov
rcll
mov
pop
rcr
dec
clc
lock
stc
push
insl
pop
ljmp
std
push
clc
popf
xchg
or
mov
pop
and
shll
stos
lcall
push
cmpsl
xlat
loope
and
cld
mov
lock
leave
sbb
jo
xchg
stos
popa
inc
fistps
testl
loope
xor
adc
mov
lcall
fiaddl
rolb
push
idivl
sbb
xor
and
dec
in
decl
les
push
pop
scas
push
pop
lret
ret
or
adc
or
arpl
sbb
movsl
loopne
fistl
mov
or
pop
or
mov
sub
dec
js
cs
out
cli
jbe
push
or
into
mov
mov
add
test
pop
data16
and
sub
or
call
ror
mov
outsb
push
adc
ficoml
push
jbe
add
orb
mov
lods
mov
fwait
outsb
mov
clc
adc
and
mov
or
lcall
jl
pushf
pop
sahf
decl
push
ss
adc
shrl
sarl
ret
jbe
push
add
pushl
syscall
add
sbb
iret
push
insb
pop
inc
cmc
pop
ffreep
repz
nop
cltd
inc
or
mov
add
mov
mov
jmp
add
imul
pop
cmp
push
add
aaa
lcall
jnp
mov
mov
jl
jmp
add
xchg
repz
add
jb
add
mov
js
push
adc
insl
rcrl
addl
adc
and
neg
sub
insb
jl
stos
or
push
js
call
xchg
ljmp
inc
scas
push
and
xchg
jo
outsl
les
cli
push
sbb
push
rcr
bound
xchg
jbe
incl
xchg
push
mov
push
or
ret
mov
clc
outsb
js
lods
fsubr
call
add
push
push
outsb
adc
scas
xor
push
or
nop
outsl
clc
decl
add
lcall
je
or
mov
ret
jg
mov
add
sahf
flds
sub
call
dec
adc
add
imul
jbe
dec
jmp
nop
mov
jg
sbb
push
mov
inc
and
pop
cmp
repz
add
push
jg
cmc
call
sbb
or
add
jmp
es
jo
test
lock
mov
ljmp
jmp
jg
inc
or
in
sub
divb
negl
push
jmp
push
lcall
mov
or
or
adc
outsl
pop
dec
cmp
mov
loope
fisttpl
jmp
push
dec
js
pop
les
sbbb
inc
adc
je
pop
push
cltd
or
push
andb
pusha
imul
outsl
pushl
xor
rep
dec
mov
das
add
cmpsb
xor
and
add
mov
ret
ret
cmc
inc
nop
jge
sub
push
jle
out
gs
xchg
jle
ret
sub
mov
movsl
jp
jne
mov
sarl
adc
je
xchg
ljmp
push
lods
test
sub
lret
data16
decl
ja
xor
repz
or
jl
enter
push
jmp
aad
inc
int3
mov
mov
xor
mov
push
addr16
dec
push
std
lcall
and
sbbb
fdivrs
pop
adc
xor
sarb
es
mov
std
adc
popa
shll
call
pop
adc
xchg
jo
ficoml
sbb
inc
mov
loop
cli
push
inc
jo
lcall
mov
jmp
inc
inc
mov
das
pop
je
jo
test
push
jne
js
decl
jg
push
pop
leave
mov
shll
mull
les
dec
mov
ficoms
dec
xor
dec
les
cmpsl
and
ss
pop
and
rclb
pop
insl
and
mov
incl
or
shrb
sub
jne
data16
sub
push
movsb
and
xchg
out
sbb
call
push
push
mov
dec
mov
xor
mov
mov
adc
rol
mov
rclb
xchg
xlat
lret
dec
sub
push
ror
pop
inc
and
rolb
decl
lock
jmp
ljmpw
insb
jo
pop
push
cmp
xlat
push
inc
jp
jl
out
push
loop
addb
fadds
cltd
lods
loopne
je
jl
xor
sub
lahf
xchg
fwait
dec
jmp
cwtl
xor
adc
in
push
lret
ljmp
cli
jle
jmp
or
je
adc
add
or
dec
push
ds
mov
mov
adc
dec
lds
or
sar
mov
mov
mov
mov
call
mov
dec
xor
inc
mov
stos
pushl
or
movsl
insl
mov
into
adcb
or
sub
sar
call
rcrl
add
mov
and
inc
jmp
cli
or
test
ljmp
clc
mov
push
inc
cli
push
cli
push
sbb
dec
push
jae
mov
pushl
sar
ja
decl
sub
pop
mov
add
test
and
lods
inc
loopne
jmp
fwait
decl
adc
addr16
add
push
push
sub
cmpsl
out
sub
inc
js
xor
call
pushl
adc
inc
add
add
pop
mulb
pop
pop
pop
or
shrb
push
inc
add
std
inc
mov
push
cs
rcl
xlat
or
pusha
sub
dec
in
cmp
cmp
lret
inc
or
cmp
and
push
add
shrl
jne
cmp
decl
and
push
push
scas
push
and
cld
sub
fisttps
push
mov
dec
adc
je
loope
xchg
add
adc
in
shll
data16
jne
sbb
xchg
sub
pop
adc
loope
or
ljmp
inc
test
and
pushf
jno
adc
gs
or
cld
call
add
fcomps
push
rcrb
das
call
call
jbe
dec
loop
jb
scas
add
mov
push
mov
jge
das
mov
mov
cltd
loope
inc
or
std
cmc
push
cmp
push
cld
decl
push
out
or
imul
pop
pop
add
repnz
lcall
mov
testb
popf
inc
sbb
sub
insl
or
jb
decl
imul
aas
sbb
or
inc
pusha
pusha
jecxz
ret
or
and
jge
mov
pop
dec
or
sbb
cli
pushl
clc
fisubl
jmp
add
subl
lock
test
pop
push
sbb
dec
sub
ret
xor
shll
in
and
dec
or
sbb
mov
push
xchg
inc
sbb
cld
xchg
std
push
xor
mov
cmp
xor
mov
in
sbb
mov
push
dec
or
aad
out
fdivrs
push
stos
into
or
adc
stos
push
sub
cmpsb
or
je
sbb
movsb
gs
push
push
mov
pushf
sbb
mov
repz
xor
adc
mov
mov
decl
cs
push
hlt
sbb
and
je
sbb
add
lahf
inc
aam
and
lcall
lea
test
sbb
pop
sbb
xor
jmp
cld
mov
loopne
or
incl
je
es
ret
and
out
or
pop
push
pop
orb
aaa
loop
mov
or
mov
lret
lea
jmp
aam
and
mov
dec
ret
jb
ljmp
jbe
ret
mov
out
mov
sbb
push
lods
clc
xor
pop
mov
and
call
sub
mov
mov
sbb
push
addr16
js
and
daa
iret
adc
jg
xor
out
loopne
sub
cmp
jne
nop
popa
adc
push
std
aad
cmp
pusha
loop
cmc
jb
mov
test
incl
sti
xchg
push
daa
out
aas
lods
sbb
mov
fidivrs
pop
out
or
decl
inc
inc
cmp
scas
test
mov
mov
mov
lcall
push
mov
lds
iret
test
je
and
sbb
or
mov
cmpsb
ds
cmp
loop
and
or
not
and
sbb
pushl
xor
sbb
addl
pop
pop
xchg
or
sbbb
sahf
and
sbb
aad
push
out
mov
jecxz
fbstp
or
and
xchg
dec
push
add
jo
out
incl
ljmp
mov
push
mov
and
mov
aas
and
cld
sub
bswap
mov
dec
pop
ljmp
rcrl
mov
arpl
das
xor
push
sbb
xchg
inc
add
ljmp
orw
mov
sbbl
sbb
in
fstpl
pop
or
add
in
and
sub
xchg
pop
nop
and
std
push
incl
gs
pop
test
ret
cmpsb
out
jno
leave
ja
sar
hlt
aaa
ret
mov
pushf
mov
xor
pusha
or
incl
dec
mov
adc
and
mov
cwtl
sbb
decl
lds
mov
scas
cmp
call
lahf
in
xchg
jns
scas
push
inc
pop
jmp
mov
add
adc
or
xchg
outsb
movsb
pop
cmp
add
cmp
push
int
add
mov
decl
movsb
pop
into
sub
sbb
dec
cld
pop
ds
add
add
jb
clc
cld
lock
lods
daa
pushl
rclb
inc
push
aam
push
aas
mov
mov
pop
cmpsl
dec
jo
push
mov
cmp
lcall
push
cli
out
les
cmp
je
push
lret
sarb
movsl
pushl
pop
std
enter
sub
cmc
pop
fsubl
jb
test
call
mov
mov
sti
and
repnz
or
clc
push
int
dec
mov
loopne
xchg
adc
push
mov
pusha
jb
cmp
push
push
clc
and
adc
fs
adc
fcomip
pushl
jae
lcall
cmp
jo
and
call
test
aad
fadd
adc
call
jo
push
sub
fcmove
imul
lods
in
jnp
add
and
mov
mov
bound
mov
cmp
push
rcr
cli
add
pusha
stc
cmp
and
or
add
or
repz
push
push
shr
jmp
idiv
mov
mov
jmp
ja
insb
loopne
push
rol
dec
sub
std
pop
rcrb
lea
adc
mov
xor
push
cmp
pop
movsb
jb
xchg
js
pop
mov
mov
in
enter
ljmp
mov
xor
xor
scas
xchg
or
push
inc
leave
push
pop
jmp
aad
add
push
dec
or
call
push
popa
sbb
xlat
jg
icebp
or
lds
push
js
test
xchg
decl
insb
push
mov
mov
adc
and
sub
mov
stc
push
sbb
incl
ret
fst
pop
jb
cmp
push
enter
testb
fisttps
pop
add
fiaddl
cmp
std
mov
ficoml
cmp
inc
ret
push
mov
mov
dec
std
or
jnp
popf
sbb
pop
mov
incl
or
mov
adc
xchg
cmp
sbb
jmp
cmpsb
add
insb
neg
fcmovne
cmp
mov
lea
or
aas
or
lods
je
test
fs
lcall
adc
lret
fs
jle
push
add
sub
jae
mov
jb
or
call
jne
pop
adc
add
cld
shr
mov
add
call
push
loopne
ffree
mov
out
ret
xchg
xchg
arpl
or
or
mov
mov
push
stc
adc
adc
in
pushl
xchg
mov
fmuls
test
test
cmp
aam
sub
push
rdpmc
push
incl
ja
sub
inc
dec
bound
pushf
mov
cld
add
andl
clc
cld
adc
pop
dec
mov
or
jb
test
jbe
dec
jae
fldt
sub
jo
or
dec
and
rclb
mov
or
add
dec
popf
les
or
incl
dec
xchg
xorb
pop
pop
push
insb
xor
mov
stos
or
sub
ljmp
dec
jg
push
adc
adc
es
and
fdivrs
or
incl
sbb
sti
outsb
dec
pop
add
inc
sub
push
daa
push
xor
mov
cmp
sbb
incl
sbb
loopne
xchg
or
int3
push
ret
ja
jecxz
push
out
xor
mov
mov
mov
push
mov
sub
add
inc
add
adc
cmpsl
and
mov
jl
push
mov
pusha
je
insl
mov
push
loopne
sti
lock
shl
sbb
repnz
stos
orb
lcall
xor
or
ja
mov
ljmp
imul
push
aaa
sbb
mov
dec
lock
fsubrp
or
jmp
insb
pop
push
sbb
das
pop
mov
movsl
popf
adc
dec
cltd
ret
rcr
popf
or
scas
inc
mov
jo
or
cltd
xor
mov
add
call
mov
pushl
insl
mov
adc
push
out
sbb
lret
sub
loope
mov
jmp
dec
popa
inc
dec
mov
push
sti
jmp
mov
xor
jg
cmp
mov
adc
push
es
enter
push
imul
sbb
ljmp
js
jge
js
sbb
insl
xor
sub
ja
adc
pop
sub
jmp
scas
inc
mov
xor
lds
jae
stos
aaa
adc
mov
or
imul
dec
pop
sub
dec
mov
clc
adc
bound
inc
add
stos
sub
push
fldt
mov
icebp
jle
mov
push
adc
or
js
cmp
xorb
and
push
inc
ret
or
stos
pop
jg
inc
lock
nop
enter
cmp
pop
pop
push
fsubs
pushl
add
mov
mov
lods
push
mov
sub
movl
lea
imul
das
xchg
dec
and
push
rorb
or
scas
or
sbb
push
pusha
rcrl
and
rcll
lcall
je
mov
and
push
sub
jge
mov
inc
sub
ret
jae
jmp
inc
and
ss
inc
add
subb
or
mov
inc
sub
pushl
mov
pop
aaa
or
inc
mov
int
and
lock
mov
push
push
add
mov
sub
subl
notb
xor
xor
push
aad
movsl
loopne
inc
cli
out
cli
mov
lahf
lea
and
decl
popa
sbb
or
and
cmp
add
fmull
test
aas
pop
adc
cltd
es
pop
cmp
loope
sbb
jo
out
mov
push
andl
fsubp
or
fistl
aaa
int3
add
cmp
loop
iret
push
xchg
popa
mov
pop
and
sti
leave
sbb
cmp
imul
ret
push
mov
movb
arpl
mov
call
adc
pushl
cld
push
sbb
sbb
add
cmpsl
flds
loopne
dec
js
adc
loopne
arpl
call
push
jle
pmaxub
test
add
pop
xor
mov
inc
mov
add
mov
sbb
int
jp
jmp
cmp
adc
add
inc
cwtl
or
xor
add
test
insb
pusha
decl
push
or
cmp
std
hlt
jb
pop
lcall
int3
test
ret
movsb
loop
mov
cld
jmp
add
call
dec
inc
in
insl
fs
subl
pop
cwtl
lock
jmp
outsl
in
inc
jo
fnstcw
ret
mov
push
inc
outsb
call
scas
pop
pop
test
sbb
sub
mov
pop
in
ss
cmp
mov
insb
mov
mov
mov
fnstcw
test
jmp
cli
mov
stc
sbb
push
pushf
xlat
fnsave
jno
mov
sar
or
incl
cld
out
jg
add
lcall
push
mov
incl
ret
std
ret
push
int3
xor
add
dec
cld
fs
sub
ja
and
pusha
xor
pop
xchg
mov
je
cmp
push
push
pop
inc
mov
decl
push
dec
out
xor
test
pop
fucomp
test
lods
int3
fcompl
adc
push
pop
jbe
test
scas
sub
and
mov
dec
lcall
incl
rclb
outsl
lcall
pusha
loopne
out
adc
into
incl
orl
rcll
push
fcoml
lods
pop
sbb
jo
and
push
out
or
sub
ret
out
pushf
scas
adc
mov
add
push
fwait
push
jge
dec
mov
stos
dec
cld
inc
push
inc
mov
or
sti
and
ljmp
jp
mov
testb
mov
pop
xchg
out
pusha
int
and
ja
lea
jmp
pop
ret
pop
and
adc
sbb
movb
and
dec
gs
mov
jg
pushl
and
mov
or
fidivrl
movsl
push
mov
fistps
test
cmp
inc
loopne
mov
test
stc
sbb
xchg
ret
dec
into
xchg
iret
adc
repz
fs
ljmp
incb
add
ds
inc
push
push
inc
push
shll
sti
push
add
mov
fisttpl
call
jae
or
insb
iret
stos
es
xchg
xlat
bswap
sub
cmp
mov
pop
dec
xchg
sub
into
dec
pop
add
pop
sbb
add
and
sub
pop
add
fnstsw
mov
xor
cmp
xchg
sbb
and
jg
pop
add
inc
sar
cmp
push
inc
sbb
dec
or
inc
clc
push
adc
incl
xchg
pop
and
rolb
push
jge
lods
fbstp
sub
jg
cld
lock
sbb
add
add
imul
in
cld
cmp
lcall
mov
add
mov
sub
sub
insb
mov
lock
mov
cmp
sti
mov
mov
and
cld
mov
psubb
int
mov
and
or
or
inc
ret
or
call
and
mov
jmp
lock
sub
pop
or
out
loop
fwait
mov
cmpb
jne
add
fcompl
loopne
pushl
loope
mov
iret
dec
xor
xor
dec
les
jg
enter
decl
inc
ds
xor
push
mov
repz
xlat
xchg
loopne
mov
cmp
idiv
decl
xor
out
sbbb
cmp
adc
cs
call
ljmp
jmp
rol
loop
mov
cmp
subl
push
rcll
dec
xlat
ds
test
add
aam
int
imull
add
pusha
sbb
fisubrs
add
data16
jnp
popf
add
mov
ljmp
movzwl
push
cltd
fdivs
imul
rcl
push
push
fmuls
inc
jbe
je
subl
call
xchg
adc
daa
stos
add
call
and
push
ds
mov
jnp
jne
add
add
and
xchg
cmp
imul
cmp
mov
adc
lock
incl
ds
aad
adc
dec
jmp
xchg
call
add
jmp
out
lahf
les
mov
ljmp
inc
sub
insb
loope
lahf
lock
jg
sbb
inc
scas
adc
gs
cmc
mov
jno
test
pop
add
adc
insb
out
addb
or
jg
aad
mov
sahf
xchg
lea
add
ljmp
decl
xor
imul
insb
insl
fadds
out
loope
arpl
popa
and
push
out
clc
cmc
xor
mov
pop
rorb
sub
adc
sub
pop
int3
jmp
or
xor
nop
iret
in
jmp
rclb
insb
sbb
lret
xchg
dec
xor
jl
fldt
add
mov
jne
push
call
in
push
mov
pop
ret
jmp
addr16
mov
incl
and
mov
lds
xchg
and
mov
adc
sub
es
or
dec
stos
pop
push
cmp
push
fiadds
mov
lcall
xchg
nop
test
aam
xor
rcrb
sub
mov
das
lret
lods
jecxz
sub
lea
subb
test
jle
dec
mov
outsb
sub
ss
mov
mov
jp
cmp
mov
dec
rol
inc
push
sub
je
jnp
pop
loopne
jg
push
call
xor
dec
jg
sub
xor
jmp
es
or
adc
lcall
loope
shrb
mov
movsl
subl
push
add
add
pushf
or
push
jmp
adc
cld
jg
mov
or
inc
and
xor
fildl
mov
sub
inc
mov
pop
pop
pusha
mov
adc
fistpl
jne
xchg
cmp
int3
or
jmp
jmp
adc
adc
pushf
cld
xor
push
pushl
pop
pop
jo
push
mov
fimull
inc
mov
dec
or
inc
gs
lods
xor
jo
lea
filds
pop
mov
jge
mov
inc
decl
sbb
icebp
mov
test
jg
jb
ret
insb
callw
rolb
mov
sbb
pop
cmpsb
pop
jle,pt
mov
imul
mov
cmpsb
jmp
push
cmpsb
dec
dec
jmp
fincstp
in
add
xor
incl
cld
loopne
fwait
adc
cmp
pop
xor
push
cmp
std
adc
cltd
outsl
clc
call
xchg
add
in
lea
push
xlat
mov
cmp
decl
icebp
adc
cwtl
outsb
gs
or
xlat
ret
dec
add
cmpsl
cltd
add
pop
cltd
pop
jmp
xchg
sub
push
sbb
add
jecxz
sbb
decl
mov
cmpsl
hlt
push
lock
lods
push
cmp
decl
fcoms
push
cwtl
int3
dec
or
or
dec
test
and
mov
fdivr
or
ljmp
gs
push
mov
movsb
cmp
push
hlt
cmc
xor
push
ds
mov
clc
pop
cli
sbb
rorb
mov
inc
mov
sub
jbe
sub
add
mov
jmp
push
push
xchg
sub
call
push
call
call
add
push
jge
shll
jo
or
hlt
and
cmp
pop
addr16
js
push
cmc
or
decl
insb
mov
and
add
or
repz
and
push
xor
enter
dec
and
pushl
push
mov
jle
lods
add
pop
sar
inc
push
push
jl
mov
jle
pusha
jne
lcall
sbb
pop
and
std
push
pop
xor
or
jle
imul
mov
loop
and
fdivp
mov
jl
lods
std
sahf
sbbb
std
cld
dec
inc
sbb
mov
pop
dec
shlb
nop
sahf
xchg
mov
dec
push
and
push
faddl
pop
cmp
and
push
mov
fs
jmp
mov
and
nop
shrb
into
push
sub
add
fmuls
adc
ljmp
out
pop
daa
and
movsb
lret
xchg
cld
jne
add
imul
cmp
lcall
and
dec
dec
adc
dec
add
mov
dec
dec
jg
inc
push
jb
sbb
dec
mov
jo
daa
test
add
pushl
add
pop
push
sbb
jl
mov
push
mov
ss
nop
lods
shlb
sahf
and
or
adc
arpl
call
sbb
and
and
cld
inc
lock
call
add
cmp
or
lahf
sahf
mov
add
cli
sub
jl
call
ljmp
notb
adc
add
xchg
cmp
jb
decl
pushfw
jae
xlat
cmp
inc
rolb
and
mov
sti
mov
je
or
jg
insb
lahf
popa
xchg
jmp
pusha
cmp
push
ljmp
sti
xchg
push
ljmp
je
dec
ss
cmp
pop
push
flds
test
rorl
jnp
cmp
cld
mov
scas
dec
inc
cmp
push
xorl
add
xchg
pop
leave
lret
insl
push
or
push
enter
or
enter
mov
pop
inc
xor
inc
cmp
mov
testl
push
das
inc
popa
and
icebp
je
inc
daa
xchg
sar
scas
jp
sub
add
scas
in
aas
xor
shrl
cmp
sub
cmp
jno
cmp
pop
fnstcw
sub
dec
mov
into
call
mov
in
fiaddl
and
rolb
sub
add
mov
add
add
mov
popa
pushf
jl
sahf
inc
test
xor
or
dec
sar
clc
adc
jb
push
mov
sbb
dec
adc
sub
jmp
xor
and
push
outsb
mov
mov
ljmp
add
xor
sub
and
rcr
pop
loopne
mov
mov
fninit
mov
out
test
mov
jge
push
or
ud0
call
jmp
inc
sub
and
cmpsb
xchg
cmpsl
sbb
aam
loope
push
mov
pop
add
adc
xchg
push
jb
xor
sbb
mov
das
xor
mov
and
fadd
dec
das
jb
mov
dec
and
push
jb
add
or
cld
scas
pop
adc
in
or
jns
push
cmp
add
iret
cmpl
xor
mov
or
decl
enter
mov
mov
push
mov
decl
je
add
and
push
test
shrl
cmp
icebp
decl
lcall
pop
inc
sub
enter
out
mov
pusha
fs
lret
mov
mov
test
inc
ljmp
sbb
xor
mov
int3
add
and
sub
incl
in
scas
out
inc
mov
cwtl
js
xor
sbb
cmp
xor
call
jmp
mov
add
bound
shl
jecxz
mov
inc
cmp
je
ljmp
mov
scas
add
mov
or
dec
sub
call
jg
bound
mov
pop
mov
push
push
mov
push
mov
and
jmp
lret
pushl
shrb
pop
sub
test
pop
or
pop
dec
add
inc
sbb
or
mov
add
fcomps
xchg
adc
sbb
or
popf
adc
pushl
and
fsts
dec
jne
push
movsl
sub
icebp
adc
pusha
daa
mov
mov
push
add
push
inc
and
fiadds
mov
aas
clc
jnp
xor
pop
push
push
push
icebp
mov
or
in
or
addr16
pushf
out
sbbb
je
or
jle
pop
inc
call
insb
cwtl
dec
repnz
inc
loope
bound
mulb
movsb
xchg
xor
and
incl
dec
das
mov
fists
add
das
and
add
inc
fwait
andb
addl
sub
pop
scas
dec
pop
lods
cmp
lock
fbstp
pusha
mov
fdivs
stos
mov
popa
vdivsd
dec
jl
shrb
jmp
add
movsl
pop
mov
sbbl
sbb
call
dec
in
push
push
mov
pusha
iret
xchg
and
push
stos
mov
out
repnz
mov
test
aad
adc
lock
enter
push
in
sbb
call
or
add
out
je
mov
mov
mov
push
clc
decl
call
push
sub
inc
sbb
rcr
jne
or
pop
jne
clc
out
loopne
xrstors
out
mov
jmp
adc
push
arpl
hlt
or
in
movsl
mov
pop
maxps
xchg
cmpsb
mov
sub
call
add
lcall
pop
inc
clc
add
jne
in
sub
inc
mov
xorl
push
imul
pop
cld
incl
lds
jle
mov
lock
jmp
mov
shl
push
push
xchg
decl
mov
or
and
pop
mov
lea
push
cmpsb
adc
and
fsubr
and
push
push
push
lods
cmp
push
pop
pop
out
adc
mov
add
por
xor
adc
rcll
in
mov
mov
minps
push
pop
cld
jmp
sbb
jo
mov
dec
fwait
push
push
push
sub
add
ror
xchg
adcb
xor
sub
inc
pop
push
add
mov
rcrl
lcall
jmp
add
out
push
push
push
cmp
or
das
pushf
cmc
shrb
pushl
jne
push
cmpl
pushf
or
push
fpatan
adc
pushf
add
std
nop
ljmp
jo
sbb
callw
std
mov
fcmove
loopne
rorb
notb
add
das
push
icebp
cmpsb
test
es
in
add
fsubp
out
loopne
inc
cmpb
insb
push
cwtl
adc
add
sbb
arpl
sbb
das
cmpsb
aaa
xor
call
sbb
sti
cmp
stos
mov
sbb
push
push
dec
sbb
sbb
call
call
jecxz
jmp
pop
loopne
inc
hlt
loop
sbb
xorb
or
jmp
pop
add
sbb
call
lret
cmpsb
test
movsb
mov
imul
leave
add
sahf
mov
loopne
dec
clc
loopne
push
mov
hlt
shll
fildll
loop
or
push
pusha
mov
test
adc
call
cld
mov
inc
xchg
test
loopne
ret
pusha
lret
mov
mov
adc
xchg
push
fucomip
lds
sub
jmp
lcall
xchg
dec
lret
lret
lock
cmp
pop
clc
lret
jne
int3
mov
xor
incl
add
add
daa
inc
pusha
pop
test
mov
icebp
inc
pop
pop
movswl
ret
movb
loope
nop
pop
cmc
mov
add
inc
push
dec
dec
adc
add
mov
push
and
es
cmc
loop
incl
adc
test
and
xchg
mov
and
sbb
divl
and
inc
lcall
call
sbb
cld
adc
and
or
inc
push
fiaddl
popa
fwait
sbb
jmp
xchg
sbb
cwtl
nop
inc
cwtl
adc
fsubs
out
add
lahf
int
cmpsb
lcall
movsl
cmc
inc
or
or
and
mov
ja
jnp
orb
dec
fs
sub
call
mov
dec
adc
dec
xor
js
sbb
and
push
and
sahf
test
sub
test
jg
pushl
arpl
jl
pop
xor
add
adc
xchg
adc
lcall
and
and
xor
fs
ret
dec
adc
adc
sbb
fs
xor
push
push
cmp
inc
daa
inc
dec
dec
push
push
pop
push
lret
bound
outsb
jb
mov
in
pop
sbb
cmp
stc
call
xchg
pop
nop
sbbl
mov
sahf
mov
scas
nop
push
daa
mov
mov
scas
cmp
data16
cld
sub
sbb
je
mov
cld
add
mov
and
and
sbb
out
and
add
movsb
mov
adc
enter
lahf
insl
sub
cmc
fbstp
push
in
ljmp
rorb
lret
cli
cmp
dec
rolb
pop
jle
fists
decl
xchg
dec
into
add
and
leave
xor
cmp
adc
push
add
lcall
jmp
cmpb
inc
adc
mov
ja
lea
sub
imull
in
or
pop
xchg
nop
mov
xchg
or
call
jns
outsl
or
popf
xor
jmp
inc
jae
mov
cmc
sub
int
aam
call
sbb
mov
mov
fs
sub
push
sub
dec
dec
gs
sbb
rorb
incl
adc
push
push
pop
ja
les
sub
push
jle
add
push
add
pop
dec
pop
nop
incl
fdiv
std
les
out
rclb
bound
jnp
decl
sti
das
in
inc
pop
cltd
pop
push
jno
imul
mov
or
inc
inc
pop
loopne
ljmp
ret
sub
roll
push
xor
and
cmpsl
mov
test
popa
fldlg2
push
cmpsl
push
adc
push
lcall
inc
lock
insb
push
push
addr16
add
insl
push
mov
and
mov
jne
dec
inc
and
incl
adcl
leave
pop
in
pop
sbb
inc
or
popa
imul
adc
add
mov
rclb
les
shl
fldl
test
mov
sbb
push
push
lds
incl
ljmp
mov
push
sub
rclb
mov
push
pushf
movsl
mov
mov
push
xchg
int
dec
iret
out
outsl
cli
incl
push
nop
adc
ja
inc
push
loope
jne
into
cli
mov
movsb
hlt
jge
sub
and
sbb
jg
div
sub
push
dec
int
imul
adc
gs
mov
mov
push
pop
xlat
cmp
rorb
or
call
in
add
inc
repnz
sar
incl
lcall
enter
fucomi
sub
ret
jle
dec
or
cmpb
add
call
loopne
jne,pn
jle
in
rcl
adcl
push
cmp
or
dec
nop
loop
incl
cwtl
jl
rcl
push
jb
outsl
shr
cltd
cmp
push
add
jg
xchg
dec
icebp
and
int
cld
dec
sbb
push
and
xchg
push
lcall
andl
xchg
out
or
mov
pop
call
mov
sbb
add
adc
pusha
sti
or
fidivrs
sub
push
lcall
es
pushl
push
inc
fiaddl
adc
adc
xchg
out
push
scas
inc
push
mov
jmp
and
xchg
adc
pusha
xor
inc
ret
out
insl
add
fisubl
sbb
shrl
pop
cld
call
and
adc
sbb
sub
sub
xorl
out
fildll
and
ss
ds
inc
xor
inc
xor
out
mov
push
sbb
push
xor
aaa
pop
mov
cmp
sbb
push
outsb
xchg
jb
jbe
jp
sbb
das
clc
fwait
add
and
rcr
inc
daa
xchg
xchg
inc
push
cmp
incl
mov
xchg
add
push
in
xchg
inc
lcall
inc
std
push
pop
mov
dec
cmpsb
dec
xor
stos
dec
scas
dec
jb
clc
cld
dec
mov
mov
dec
mov
lret
mov
movl
data16
add
or
inc
dec
pop
shrb
pushl
cmpsl
or
shl
js
ret
int3
cmp
mov
cmpsb
insl
xor
push
push
jp
inc
ljmp
jl
aad
sbb
fbstp
inc
adc
add
enter
jo
das
cld
decl
mov
push
push
sbb
or
adc
dec
stos
push
and
pop
out
xchg
push
stos
adc
adc
adc
push
popa
or
push
gs
out
add
adc
and
imul
mov
call
push
push
rorb
mov
jo
jp
add
mov
and
jmp
or
xchg
dec
jecxz
add
or
adc
adc
push
imul
call
loopne
test
push
add
dec
inc
dec
jnp
push
mov
mov
adc
sub
add
push
sub
sub
sub
pop
test
pop
inc
clc
incl
jmp
ret
or
xchg
iret
sarl
sub
incl
sub
sub
iret
repz
sub
insl
cmp
es
or
mov
ds
jnp
add
pushl
lcall
loopne
test
addr16
ljmp
mov
xchg
pushl
enter
jle
inc
insb
sbb
test
popf
add
shlb
push
inc
cmp
add
lcall
xor
test
mov
arpl
pop
jecxz
mov
incl
incl
and
push
jle
xchg
and
mov
sbb
mov
incl
jo
sub
add
fs
bound
imul
and
mov
push
push
push
outsb
pusha
sbb
xlat
push
call
inc
or
test
scas
sarb
or
hlt
fldcw
push
jl
inc
repnz
incl
scas
sub
dec
fdivrs
or
roll
mov
or
push
push
aas
shrb
fcomi
notb
add
movups
adc
xor
xor
lods
adc
inc
std
pushl
or
or
std
jg
adc
andb
lock
add
push
mov
fs
push
add
push
adc
jle
incl
cld
pop
lret
cmp
xor
das
outsb
testb
jnp
imul
xlat
or
sarb
or
lods
rol
data16
idiv
ljmp
pusha
jo
subb
repz
ss
pushf
push
jae
sub
mov
imulb
and
push
adc
enter
sub
ljmp
jo
push
mov
jecxz
ret
mov
fs
push
rorb
and
or
push
or
mov
jmp
popw
push
test
push
into
jle
add
jg
inc
xor
leave
add
or
add
mov
mov
sbb
in
sbb
lea
fcmovnu
fistps
push
or
sub
push
dec
repz
cli
fwait
popf
gs
ljmp
call
movsl
stos
adc
dec
lret
or
sarl
xor
add
inc
sbb
call
mov
pop
pop
jp
jbe
adc
and
lret
mov
inc
inc
pop
cmp
in
mov
mov
push
cwtl
call
pop
xchg
stos
xchg
add
add
in
dec
js
xchg
fscale
scas
clc
decl
cmp
xchg
sbbl
adc
add
insl
sub
jecxz
lcall
inc
cmpsb
arpl
add
mov
inc
push
faddp
dec
cltd
add
call
xchg
or
jo
aam
cli
sub
xor
xchg
cmp
and
push
sbb
xchg
jno
insb
loopne
mov
inc
adc
mov
adc
fcomip
sub
roll
dec
mov
xchg
cmp
stos
je
add
aas
rolb
jo
repnz
dec
roll
movsl
ds
jae
lret
mov
popa
xchg
inc
dec
or
shr
incb
xchg
std
in
xor
into
enter
push
mov
sbb
xchg
push
cmp
daa
add
out
sbb
adc
jne
je
frstor
loop
arpl
jae
scas
nop
ret
push
cli
lcall
sub
sub
lds
rorl
sub
mov
sarl
out
rclb
jmp
clc
push
and
fidivs
cmp
jge
xchg
or
rol
loopne
addr16
call
and
shll
mov
and
lcall
ljmp
shll
mov
daa
xchg
jo
cli
ljmp
push
inc
mull
nop
icebp
inc
and
xchg
ljmp
pop
pop
or
test
fstps
pusha
dec
dec
sbb
insb
push
pop
or
and
scas
neg
sbb
xor
insb
add
push
mov
loopne
jo
aam
pop
addb
jmp
add
sbb
rcl
cmp
jb
jb
sub
sbb
cld
inc
loop
pop
test
sub
div
xchg
repz
negl
in
sub
addb
pop
push
xchg
and
cmp
jns
pop
jnp
mov
mov
repnz
test
fsubrs
mov
jge
mov
cwtl
mov
jle
and
hlt
clc
rcl
loop
pushl
decl
movsl
ret
ret
aaa
push
sar
mov
lcall
cltd
sar
fbstp
mov
lods
inc
cli
ret
outsl
ret
call
inc
and
pushl
lock
jg
cli
mov
mov
dec
sub
or
push
adc
pushf
pushl
fldt
fnstenv
push
loopne
jb
int3
test
sbbl
xchg
mov
add
clc
lcall
add
inc
jo
pop
mov
push
clc
adc
push
pushl
cld
fldt
pushf
fldt
fmulp
fildl
dec
outsb
mov
cmpl
sti
jge
adc
sub
rcrb
pop
enter
popa
enter
clc
fcmovbe
sar
sub
xchg
and
sbb
cmp
sti
je
in
ljmp
mov
aas
or
push
mov
in
adc
sahf
movsbl
push
cmp
out
cmp
ljmp
dec
fnstcw
jne
cmp
sbb
rcrb
lret
pop
dec
test
pop
lods
roll
jmp
addr16
ret
mov
pop
xor
loop
pop
sbb
iret
jg
mov
gs
fnstsw
std
sti
sub
fnclex
mov
fstcw
call
ja
adc
loope
lock
and
into
jge
sub
cld
mov
fcomip
or
ret
push
or
jg
test
and
pop
inc
clc
xchg
dec
test
pop
sbb
push
cld
jg
push
jo
es
add
or
add
inc
sar
fildll
jmp
dec
push
push
or
sbb
inc
ret
ds
lret
lock
sbb
aaa
fmuls
or
shrb
fistpll
fwait
ret
mov
mov
sub
inc
fstps
fstsw
fstp
fwait
mov
les
or
mov
add
clc
call
add
cmpl
mov
jmp
sbb
push
sub
or
and
lea
adc
rcrb
xor
pushf
pop
cmpsb
mov
and
adc
cmp
pop
push
adc
jmp
outsb
rcrb
jmp
dec
mov
cmp
subl
mov
rcrb
fistpll
push
push
insl
pop
loop
add
adc
idivb
or
jle
mov
ljmp
jo
incb
cmp
xchg
stos
sub
or
mov
lods
cli
out
cli
das
rolb
jb
fstpl
fwait
fs
dec
les
in
or
cmp
push
jp
adc
jne
js
ret
pop
cmp
or
sbb
or
fstps
js
mov
jg
inc
in
stos
lock
jmp
mov
out
fdivrs
push
fcom
jns
out
or
or
add
jg
mov
in
out
dec
mov
fisubl
pushl
insb
lock
lock
and
iret
idiv
sbb
mov
loopne
call
dec
or
add
sbb
pop
mov
dec
pushf
jg
ret
shrb
add
xchg
jl
push
jg
ret
inc
insb
fs
dec
test
adc
xchg
cmp
cli
push
jmp
sbb
add
jb
outsb
ds
cmp
add
adc
decl
punpckhdq
or
sub
mull
sub
dec
pop
sbb
push
adc
xchg
pop
cli
fisubrl
ret
xchg
test
fwait
and
mov
inc
xchg
push
jg
out
in
inc
mov
or
inc
mov
lret
mov
push
or
incl
call
out
lea
loope
lcall
negl
sbb
pop
popa
pop
sti
decl
dec
adc
bound
jae
push
and
lret
lock
push
addr16
jg
imul
dec
xor
sbb
xor
aam
in
sub
daa
pop
dec
pshufw
ljmp
hlt
imul
bound
jo
mov
mul
xchg
push
std
ljmp
add
sub
and
pop
pop
xorl
mov
mov
mov
dec
cld
aam
add
sub
inc
je
std
lcall
jmp
dec
mov
add
shlb
jg
or
xor
adc
add
cmp
insl
imul
jnp
add
jmp
xlat
inc
mulb
sub
or
pop
xor
mov
mov
incl
mov
fisttps
pushl
pop
and
push
push
cli
sbb
xor
jae
or
repnz
jmp
insl
shlb
loop
lcall
call
add
push
ret
dec
ret
push
cmp
push
and
or
decl
or
and
repz
sub
shl
inc
cmp
icebp
jmp
cmpsl
jns
mov
stc
pop
dec
pop
add
pop
inc
add
test
je
or
aaa
std
das
js
dec
test
pop
int
add
ljmp
rcr
mov
xor
inc
addl
fwait
sbb
push
dec
idiv
dec
jmp
mov
inc
dec
test
lods
loope
addl
jge
inc
or
lcall
mull
mov
sbb
add
or
sbb
mov
xor
out
packuswb
jg
js
add
pop
sub
rclb
test
or
fmull
jl
mov
jne
fwait
and
lock
xchg
mov
pop
xlat
pop
jg
adc
and
mov
cmp
jmp
sub
js
xor
add
test
inc
call
mov
js
push
jl
jg
sbb
lock
sbb
dec
pop
shl
sbb
dec
and
stos
jl
mov
incl
call
mov
ret
jno
rol
sub
adc
adc
ljmp
xor
adc
or
adc
or
shll
std
sbb
into
incb
jecxz
inc
out
push
cmp
jne
xor
xor
es
pop
pushf
dec
mov
or
or
pop
roll
decl
push
add
dec
cmpsb
mov
es
adc
decl
movsb
notb
pushf
dec
cs
and
and
call
push
aad
int
cmp
adc
push
jg
mov
inc
ds
push
inc
dec
sub
and
adc
mov
call
cmpsb
cmp
fs
mov
fs
mov
and
dec
pushf
mov
fldcw
je
fcomip
pushf
jmp
cmpsb
adc
push
inc
and
out
push
hlt
jmp
or
stc
and
enter
lcall
adc
std
adc
push
inc
inc
jo
and
push
jecxz
mov
out
cld
lret
shlb
cmp
incl
cmp
dec
data16
jne
shll
xor
daa
fcmovbe
lret
sbbl
fiadds
dec
shrl
add
push
xchg
sar
pop
rolb
mov
add
add
and
loopne
jmp
jle
and
imul
insb
mov
jg
mov
test
cmp
rcr
mov
and
push
testb
loopne
decl
dec
sub
sahf
cmc
hlt
push
repz
sbb
icebp
pop
add
cmpsb
add
jmp
addr16
or
decl
xor
inc
sub
jg
popa
fadds
push
add
jne
push
repz
rorb
lods
and
incl
incb
add
or
loope
mov
cmc
add
inc
add
ja
out
add
adc
or
fiaddl
cmp
or
push
inc
int3
jmp
mov
out
add
adc
loopne
add
js
icebp
test
mov
std
jns
addb
sbb
or
imul
mov
xchg
mov
add
mov
jg
fstpt
jmp
sbb
test
scas
addr16
or
pop
add
lcall
jmp
mov
popa
shlb
cmp
dec
xor
out
decl
mov
das
and
push
pminsw
mov
pop
mov
sub
decl
push
push
std
pop
adc
cs
cld
shrb
sti
jl
sub
pop
aaa
push
js
lds
imul
add
push
push
pop
mov
sarl
je
call
cli
jl
cmp
call
mov
mov
pop
sarl
jmp
nop
lcall
stos
cltd
push
mov
push
push
adc
in
sbb
popf
mov
repz
xor
fs
mov
mov
movsb
xchg
mov
pop
push
pushf
or
add
push
fldt
fistl
fimuls
push
add
stos
jg
rcl
fcomip
in
cwtl
in
mov
pop
cmpb
addr16
incl
push
add
mov
hlt
loopne
inc
lcall
fs
push
xor
push
ljmp
fstpt
iret
or
jge
fldt
add
fdivrp
push
mov
fwait
lcall
leave
mov
movsl
lahf
sub
and
loopne
jle
in
add
mov
mov
sbb
pusha
jl
nop
jg
jmp
clc
sub
jb
mov
pop
jnp
push
call
das
std
sub
jmp
test
lahf
js
bound
add
ret
stos
xor
stos
sbb
cld
jmp
add
stos
add
sbb
mov
mov
cmpsb
lods
sahf
cmpsb
stc
ja
mov
xchg
mov
push
jns
lods
pop
push
xor
outsb
out
mov
vmwrite
ss
sub
dec
mov
add
jg
or
push
mov
add
inc
shr
or
xchg
pushl
pushl
insl
or
pushl
lcall
fstpl
outsb
push
scas
xor
or
or
lods
mov
dec
or
sub
jmp
inc
cld
in
ret
fldt
shr
subl
or
add
pop
pshufw
push
sbb
or
jmp
ret
test
je
or
add
xchg
jno
sbb
mov
nop
lcall
mov
pop
ficompl
imul
and
fisttps
fstl
xchg
cmp
inc
ret
adc
add
inc
and
std
fistl
xchg
xchg
pushf
nop
add
add
mov
sub
in
mov
loope
and
stos
repnz
sti
test
or
push
cmpsb
dec
movsl
add
or
mov
xor
in
jmp
rcrb
lcall
out
add
xor
push
fiaddl
fadd
or
fistpl
call
ss
xlat
jl
fcoms
push
mov
call
or
sbb
mov
jge
fmuls
add
pusha
mov
sub
flds
pushf
icebp
std
push
add
loopne
lcall
and
clc
rcrl
lock
ds
dec
test
or
cmp
mov
ljmp
adc
adc
pop
cmp
les
loop
cld
jg
neg
clc
inc
enter
mov
aad
cmp
pushl
sbb
mov
repz
jmp
jbe
mov
enter
aaa
inc
mov
inc
mov
pop
es
adc
or
push
ja
mov
mov
dec
stos
lcall
call
add
xchg
movswl
je
add
sub
enter
test
or
add
mov
fimull
or
sub
jl
mov
call
pop
mov
in
rorb
cmc
fcomip
and
jge
xchg
arpl
push
push
daa
lcall
pop
lock
repz
cmp
push
icebp
add
sub
sti
or
push
popa
sbb
mov
dec
xor
fucompp
fnstsw
test
and
scas
icebp
lock
sahf
jle
jg
ss
mov
scas
fildl
mov
dec
call
lcall
stc
scas
sahf
inc
jne
xor
jns
aam
insb
jo
aam
inc
mov
in
insl
lea
orl
call
jl
xchg
sbb
test
dec
mov
mov
xor
xchg
scas
testb
pushl
je
mov
jecxz
sbb
stos
xor
mov
in
lods
bnd
dec
mov
jne
push
test
jg
xchg
add
mov
mov
es
les
inc
mov
cmp
push
sub
mov
insl
sub
xor
inc
ja
cli
jmp
imul
in
iret
scas
call
in
mov
out
ljmp
in
jl
and
inc
and
rcll
ror
inc
decl
push
mov
sub
shrb
push
and
pop
loopne
int
cltd
or
jg
test
mov
xor
call
lret
xchg
shr
movsb
jmp
sbb
decl
adcl
jne
jns
lcall
lock
std
push
or
jecxz
mov
push
outsb
nop
scas
mov
jp
inc
pop
mov
cmp
lcall
add
dec
pop
int
stos
mov
inc
cmp
ds
mov
push
jbe
pop
adc
cltd
push
js
lea
mov
add
pop
cmpb
stc
roll
add
cmp
push
clc
push
and
test
jle
idivb
mov
cmp
sbb
mov
data16
jle
inc
add
mov
inc
jle
aas
repnz
in
dec
add
mov
sub
js
ja
dec
mov
ljmp
or
repnz
xor
sbb
adc
je
std
filds
xor
pop
pop
sbb
xchg
mov
inc
in
inc
ds
je
add
sar
lea
mov
mov
fistps
or
cli
sbb
pop
add
xor
dec
or
fdivp
loop
push
addl
sbb
add
notl
pop
cmpsl
dec
cld
lods
call
and
incl
leave
cld
faddl
jmp
shl
or
pop
or
std
imul
mov
mov
mov
insb
decl
and
repz
pusha
loope
mul
rol
movsb
dec
adcb
xorb
jmp
movsl
push
sub
xchg
push
push
dec
mov
fcompl
sbb
pop
ljmp
rol
shr
sub
cmp
jo
or
jae
sar
js
sub
jmp
sub
mov
int3
mov
jno
sbb
push
adc
lea
sbb
call
bound
jge
sub
movsb
test
add
out
dec
imul
gs
mov
pushl
add
add
cld
adc
adc
push
xor
lods
or
xchg
decl
pop
dec
stos
adc
pusha
adc
stos
add
lock
mov
cmpsb
push
push
push
cs
fcompl
xchg
sub
and
and
lcall
decl
pop
xchg
lods
insb
pushf
adcb
js
insl
mov
lcall
mov
addl
rolb
push
ja
add
jge
push
and
enter
push
gs
sub
les
adcb
lock
push
lcall
push
mov
push
loop
pop
or
xor
rorl
add
xor
xchg
mov
rclb
dec
lods
push
xchg
push
es
or
add
aam
enter
fnstcw
xchg
push
and
es
and
movsl
test
or
mov
add
je
cmp
mov
and
mov
add
lret
fcomip
arpl
xor
aas
xor
in
movntq
daa
hlt
das
pop
push
sub
sbb
add
lea
clc
flds
ljmp
jmp
inc
cltd
pop
or
or
mov
pop
inc
push
movl
dec
mov
out
in
je
adc
call
call
sahf
push
jae
xor
inc
or
push
sub
sub
pop
aad
pop
inc
mov
mov
pause
punpcklwd
xchg
fwait
call
dec
loopne
and
push
push
or
or
fistpll
dec
fst
int
pushf
jb
cli
xchg
lcall
xor
fmull
add
or
bound
popa
dec
fmull
testl
mov
jb
bound
js
dec
xor
or
clc
adcb
imul
jb
and
mov
lcall
sub
add
andb
sarb
sub
enter
add
aam
lcall
xor
push
aas
add
movsb
nop
inc
je
sub
adc
call
dec
nop
add
and
add
mov
xor
int3
divb
clc
sub
ljmp
sub
sub
add
dec
bnd
mov
pushl
std
scas
bound
or
mov
les
fdecstp
adc
jmp
sbb
iret
call
adc
js
mov
adc
outsb
cmp
mov
sub
pop
mov
shl
mov
adc
icebp
inc
outsl
adc
inc
push
into
sub
and
in
pop
daa
xchg
dec
jo
lock
or
adc
inc
daa
xor
and
clc
jmp
add
setnp
das
cmp
mov
mov
js
xchg
ljmp
mov
outsl
mov
insb
ss
jae
popf
int3
xchg
mov
mov
int3
arpl
mov
enter
mov
jg
jmp
pusha
sarl
sub
pop
jl
addb
or
daa
ret
lcall
mov
lock
ror
add
ret
cmp
nop
sar
aam
pop
cmp
aas
loop
pushl
sbb
pop
pop
cs
dec
mov
pop
clc
cmp
in
inc
jl
sbb
adc
sbb
or
hlt
sbb
push
stc
push
clc
hlt
lret
xlat
incl
mov
outsb
imul
das
add
faddl
push
ret
pop
add
add
mov
fldl
ljmp
cmp
int
xor
out
insl
sarb
cmpb
je
test
jecxz
mov
fbstp
adc
adc
lcall
mov
add
xor
sub
or
ss
mov
push
fbld
jo
jp
xchg
add
outsb
push
fimuls
ret
or
testb
es
jmp
lcall
and
xor
inc
ja
cmp
out
fst
adc
pop
push
add
movsl
test
pop
sarb
push
or
call
fstl
cli
out
dec
add
push
rcrb
add
push
sub
cmp
and
xchg
mov
pusha
xor
ljmp
sub
shl
sub
inc
dec
lods
mov
ret
jbe
incl
arpl
mov
and
ret
jmp
cs
hlt
push
xor
lcall
je
and
adc
aad
cmp
adc
je
xor
lods
dec
sub
pusha
xchg
jne
xor
inc
inc
xchg
add
or
cs
cli
cmp
add
shlb
movb
sbb
nop
push
sbb
js
insb
in
sbb
ljmp
adc
mov
jmp
xor
dec
or
lds
and
aam
lcall
decl
dec
insb
or
xchg
sub
xchg
loopne
sbb
mull
adc
mov
cwtl
loopne
mov
xor
mov
loop
mov
mov
cmpsb
fs
push
mov
inc
jmp
fcmovne
pop
in
aas
push
sbb
or
sbb
popl
mov
sub
add
dec
call
push
stc
nop
mov
xor
pop
out
cli
pushl
mov
stos
pushf
and
fstpt
insb
lods
jns
and
ljmp
lea
push
add
push
dec
jl
xor
nop
push
inc
sub
leave
xchg
mov
ret
fs
insb
cwtl
inc
ds
inc
or
je
add
decl
repz
daa
xor
and
sbb
or
add
ljmp
shlb
repz
sbb
sub
jns
push
mov
pop
or
clc
or
in
or
inc
pop
lods
les
pop
dec
xchg
dec
ljmp
or
adc
push
decl
mov
addr16
jge
repz
jne
adc
sbb
aam
xchg
push
daa
leave
sbb
xchg
pop
addb
cmp
sub
xor
frstor
call
push
jmp
jge
push
sbb
imul
movsl
xor
movsb
xorb
ret
outsb
popf
jecxz
sub
lcall
adc
or
insb
std
or
push
add
outsl
pop
pop
test
ljmp
sub
shrl
and
pop
testb
inc
dec
outsl
cli
mov
xor
dec
mov
jbe
sub
je
mov
push
cmp
cld
add
or
xchg
ret
xchg
mov
fwait
add
add
mov
out
aam
pop
decl
je
shlb
jne
aam
movsl
push
dec
mov
pop
dec
sub
je
incl
dec
push
repz
xor
test
jg
sahf
inc
loopne
sbb
rorl
mov
mov
in
or
hlt
push
jecxz
out
scas
lcall
test
adc
inc
xchg
idivb
add
xor
ljmp
pop
pop
out
dec
or
outsl
outsb
cs
dec
mov
sarb
scas
xor
scas
insl
aas
addl
idivb
insb
negb
or
jmp
push
in
sub
out
jb
mov
push
sbb
mov
test
gs
sub
cli
mov
and
dec
jns
popf
push
pop
sbb
sbb
sub
adc
push
mov
add
and
adc
iret
jns
xor
lods
pop
ljmp
dec
insl
lock
sarl
add
push
add
or
cmp
push
icebp
ljmp
outsb
loop
mov
lock
lret
call
mov
lcall
fists
and
jno
jo
xor
out
dec
jl
jg
cmpl
lea
dec
clc
icebp
popf
adc
decl
mov
inc
add
sarl
mov
fsubs
inc
mov
inc
sarb
test
mov
loop
sbb
arpl
pop
call
jmp
ret
clc
or
ljmp
xchg
xor
leave
mov
out
or
sub
sbb
int3
inc
mov
mov
mov
mov
sub
flds
mov
jmp
jecxz
sbb
xor
pop
outsl
daa
test
and
inc
aad
shl
pop
shrb
shl
scas
mov
or
jg
lcall
or
loopne
shrb
lret
jo
fidivrl
les
jge
or
ret
mov
call
push
fwait
xchg
clc
push
movsb
hlt
and
das
clc
ficompl
in
lock
xchg
sub
pushf
dec
fwait
jne
sbb
leave
sarb
pushl
dec
add
mov
xchg
push
adc
in
fmuls
xchg
or
pushl
movsl
add
mov
mov
sar
jae
cmp
add
xchg
clc
or
out
mov
scas
push
inc
int
sbb
cmp
lock
and
sti
jbe
pusha
or
cld
mov
nop
add
xchg
rorl
adc
adc
cmp
add
add
cmp
lods
in
mov
aaa
sub
push
sub
cli
decl
push
adc
pop
sbb
mov
enter
sub
pop
cld
mov
aaa
jl
sbb
clc
jo
sub
xor
clc
dec
nop
rorb
lds
outsb
push
sti
scas
adc
add
fiaddl
incl
lock
cmpl
int3
mov
mov
mov
push
popa
pushf
test
adc
mov
mov
sbb
mov
incl
mov
or
movl
pop
mov
lcall
inc
in
push
push
push
sbb
push
je
push
jle
lods
push
push
and
or
inc
sbb
mov
dec
mov
xor
sub
test
ja
call
xor
xchg
ljmp
daa
loopne
out
cmpsb
testl
sbb
ds
rep
xchg
mov
inc
dec
cmpb
add
scas
cmp
or
ljmp
movsb
cmp
popa
ret
xchg
aam
insl
mov
sbb
jmp
pop
mov
scas
clc
cmp
mov
in
mov
xchg
icebp
nop
ret
add
xchg
pop
mov
jmp
or
pop
dec
cmp
nop
call
lcall
inc
mov
jmp
push
xor
test
xor
push
lods
inc
ret
mov
ficoml
xlat
pop
test
mov
xchg
in
mov
push
ljmp
mov
cltd
pop
fucomp
lcall
mov
mov
pushl
cmp
mov
or
sbb
inc
arpl
hlt
pop
xor
sub
out
es
sbb
mov
rol
and
sub
adc
xchg
mov
decl
sahf
xor
aam
push
jmp
sub
jmp
push
xchg
scas
sbb
call
scas
pop
idivl
mov
pop
xchg
adc
push
cmp
add
mov
je
sbb
sub
das
push
push
xchg
cwtl
clc
inc
aas
mov
dec
mov
push
mov
adc
dec
mov
push
dec
ljmp
adc
arpl
std
fucomi
adc
cmp
jg
scas
loope
push
test
push
outsl
pop
jmp
lcall
arpl
movsl
mov
jmp
dec
xchg
push
mov
mov
out
fdivr
inc
xlat
dec
and
cmp
dec
sbbl
push
inc
xor
push
sub
sub
std
decl
xor
xchg
stc
xorb
mov
mov
or
loop
xor
jl
jmp
xchg
rdtsc
insb
sub
inc
cmp
add
dec
inc
addb
notl
test
add
xor
rcr
add
ss
cmpsb
jns
pop
addr16
pop
inc
mov
mov
jbe
imul
add
test
or
pop
jo
jecxz
mov
mov
lcall
jb
imul
lods
push
xor
sbb
jp
or
addb
xchg
add
dec
jbe
movsl
pop
mov
ja,pn
pop
pop
jnp
scas
push
push
xor
xor
pop
loopne
xor
push
dec
dec
loopne
mov
mov
or
ret
daa
mov
ljmp
inc
lock
push
shl
push
add
daa
sarb
bound
rcll
fcomip
add
add
xchg
ret
lock
jmp
incl
and
insb
js
push
dec
imull
dec
pop
into
popa
mov
xor
dec
pop
js
lcall
add
inc
arpl
dec
mov
sbb
sbb
sub
fildll
dec
hlt
dec
jne
cmp
enter
mov
dec
je
jne
dec
icebp
inc
fiaddl
jne
pushl
std
jmp
mov
pop
sbb
das
loopne
inc
jl
hlt
in
sub
in
push
ud0
mov
adc
fs
cli
popa
push
leave
inc
loopne
push
into
sarb
sbb
les
inc
pop
mov
push
or
and
inc
jo
or
add
js
mov
xor
icebp
push
sub
dec
xchg
and
test
and
mov
cld
jg
cmc
mov
lods
inc
mov
dec
inc
sar
xchg
call
repz
adc
push
pushf
sti
pop
mov
sub
movl
pop
cmp
loope
mov
add
jb
lea
push
add
iret
ja
add
call
jmp
mov
cmc
jmp
add
jp
cld
add
jbe
push
or
xor
xchg
add
or
xchg
cmp
movsb
jb
jae
mov
neg
hlt
inc
int
inc
mov
and
sbb
ds
ret
aaa
inc
cli
outsl
jle
fsubr
sub
pop
jmp
mov
or
add
sahf
pusha
in
pop
jo
testb
lahf
mov
decl
mov
push
sub
or
sbb
call
pop
insl
mov
idiv
ljmp
aaa
cmp
jae
stos
roll
adc
push
xorb
jb
add
setae
fldl
add
jmp
push
insl
push
shlb
stos
dec
or
mov
xchg
or
decl
xchg
or
jno
pop
mov
movsb
aas
sub
cli
mov
or
push
or
jg
adc
daa
js
lret
mov
inc
cmp
jg
mov
incl
mov
inc
cwtl
add
call
or
add
adc
pop
dec
imul
test
push
inc
js
imul
adc
xor
clc
adc
inc
xorl
ljmp
inc
pop
daa
jne
sti
call
dec
sbb
and
fwait
int3
inc
inc
loop
sub
adc
or
or
mov
xor
jno
in
push
inc
and
insl
jl
call
and
pop
pushf
mov
push
call
nop
xor
jl
jle
push
and
dec
lea
push
adcb
insl
add
mov
js
dec
add
subl
call
adc
insb
ljmp
dec
dec
sbb
add
shrb
add
add
add
and
push
adc
mov
xchg
arpl
nop
dec
lods
and
dec
sbb
dec
jne
subl
inc
clc
in
add
push
jmp
sbb
test
jmp
in
xlat
xchg
dec
test
mov
les
sub
sub
call
pop
dec
xchg
outsl
leave
lea
arpl
push
cmp
cs
push
sbb
push
sbb
call
cli
mov
call
cmp
je
insb
ror
jmp
test
test
clc
shlb
add
sbb
add
pop
ret
lcall
decl
lock
in
lret
test
in
mov
and
arpl
clc
push
dec
add
decl
addb
mov
jbe
and
movsb
pop
pushf
test
push
hlt
fmull
fcomip
ljmp
xor
jle
inc
aad
push
push
aas
loopne
pop
lock
movb
jmp
mov
pop
stos
mov
mov
pop
jmp
add
xor
pop
fs
xor
cli
ljmp
rclb
lea
push
xchg
in
insl
repz
inc
add
push
ja
or
cmp
add
pushf
or
sbb
push
aaa
std
jg
push
jbe
mov
dec
sub
hlt
jo
jle
movd
sti
cmp
aaa
mov
movsb
xchg
ret
xor
sahf
xor
repnz
call
add
movsb
jg
adc
jbe
xchg
xor
movsl
mov
sub
lock
out
dec
pop
ljmp
sub
mov
push
in
fsubrs
or
add
jmp
mov
popa
sbb
jecxz
les
add
jnp
or
dec
adc
sub
pop
sar
subb
rorl
inc
mov
adc
mov
in
and
ljmp
add
and
or
cmpsb
add
pop
int3
or
sub
popa
cld
adc
jg
call
das
sbb
testb
andl
push
or
in
adc
add
jns
loop
mov
push
arpl
outsl
xchg
cmpsl
movsb
xor
push
dec
xor
testb
pop
addr16
jmp
sbbb
or
mov
or
lea
ret
sub
scas
cmp
pusha
add
cmp
xchg
dec
jmp
cli
ss
pop
add
ret
and
jbe
add
mov
or
push
sub
scas
imul
incl
mov
je
pop
or
outsb
and
sbb
imul
lods
xor
add
std
add
decl
adc
or
or
addr16
adc
pusha
jno
pop
mov
jg
dec
pop
push
mov
enter
mov
jp
or
lods
cmpsb
std
std
incl
pop
dec
je
add
and
shlb
mov
sub
dec
mov
adc
inc
sti
imulb
jmp
dec
jmp
mov
adc
add
cli
ljmp
add
xor
sbb
faddl
add
aaa
lcall
mov
scas
daa
xor
and
outsl
lret
cmp
dec
inc
pop
or
dec
or
mov
dec
jmp
rolb
clc
dec
adc
sbb
test
fidivrs
fcmovnbe
mov
lret
fisttpll
loop
add
and
popa
mov
ja
mov
pushf
imul
sbb
push
xchg
push
lcall
out
dec
ror
sub
jmp
push
orb
adc
sti
into
ss
pop
jmp
notb
sub
into
mov
jg
or
and
jg
movsb
jb
loop
mov
sub
adc
sbb
jmp
push
cld
inc
or
mov
adc
or
sub
out
mov
xor
dec
inc
ljmp
xadd
dec
ss
andl
push
pop
adc
add
sbb
inc
lahf
xor
add
and
cmp
mov
ret
xor
idiv
decl
fcompl
adc
sbb
jo
mov
icebp
scas
popf
imul
and
inc
aam
or
push
dec
test
aam
call
lea
dec
insb
adcb
ja
or
outsl
and
call
int3
iret
testl
js
adc
ss
adc
inc
sbb
adc
inc
fdivrp
pop
dec
incl
and
mov
leave
into
scas
stc
lcall
call
lcall
dec
in
and
jnp
mov
sbb
icebp
rcrl
movb
or
sbb
and
push
xchg
xor
ret
scas
jmp
jl
div
cmp
push
fstl
pop
sahf
mov
xor
jb
xor
jno
xchg
or
sub
adc
lahf
imul
xor
lods
iret
aam
loop
clc
mov
lret
push
push
pop
inc
inc
int3
call
cmp
call
mov
adc
xor
aam
gs
adc
ds
or
xchg
les
je
int3
jg
ljmp
imul
xor
sbb
flds
pop
in
in
movsb
adcb
dec
push
jg
sub
jl
cmp
add
imul
adc
shlb
push
dec
jns
mov
pop
push
dec
gs
push
jp
mov
sbb
adcl
fisubl
fscale
loope
les
cmpb
testb
stos
mov
xor
pop
and
incl
cli
idivb
adc
stos
push
xchg
fisttps
imul
jnp
sbb
mov
inc
add
mov
jg
sbb
aam
inc
sub
pushl
cmp
shrb
mov
fwait
mov
aad
pushl
std
adc
rcrb
in
lock
pop
push
sub
fdivrs
in
decl
sub
insb
push
sub
pushf
or
jae
cmpsb
lock
inc
inc
pop
mov
xor
cli
pop
hlt
sbb
rcrb
cmp
add
clc
lea
decl
clc
dec
cmp
fstpt
bound
sub
mov
ds
test
lcall
les
lock
popa
add
xchg
and
cmp
sbb
add
and
dec
std
mov
adc
outsb
mov
jbe
and
sbb
fs
lock
mov
adcl
jne
je
ljmp
cmp
shl
sar
int3
clc
shrb
in
aam
test
incl
sub
ds
xor
mov
pop
icebp
push
jns
aad
mov
sbb
mov
dec
loopne
mov
push
dec
movsb
clc
sub
cmp
aam
sbb
int
incl
or
inc
sub
rclb
inc
popf
xor
push
jg
lods
push
outsb
xor
jg
mov
mov
ss
das
sti
jnp
clc
jo
ret
js
sbb
ljmp
loope
or
sub
jnp
outsl
fstps
push
dec
cmp
loope
cmp
mov
add
push
dec
repnz
sbb
lock
lock
fs
lcall
andb
xor
sub
mov
adc
adc
add
call
loopne
jbe
enter
xor
add
or
jne
dec
js
push
dec
jno
or
inc
fiadds
insl
rorl
rolb
push
push
hlt
mov
incl
cld
test
or
mov
rcl
fcompl
ja
xor
insl
andl
decl
pop
cs
pop
xor
orl
mov
add
stos
add
fsub
push
lcall
stos
adc
je
xor
jb
or
pop
mov
pop
push
cld
pop
inc
push
cmp
adc
ret
push
adc
or
data16
adc
mov
lcall
cld
loop
cmp
imul
mov
imul
in
std
lcall
xor
push
push
and
mov
sub
xchg
test
sbb
or
adc
repnz
call
mov
ljmp
mov
fcmovbe
mov
or
add
std
mov
add
aam
jge
xchg
xchg
mull
add
cmp
jbe
dec
adc
mov
pushl
sbb
mov
and
sbb
inc
inc
and
sbb
jns
cltd
nop
loope
fnstsw
xor
and
decl
dec
push
and
sbb
push
sbb
mov
dec
jae
push
push
add
or
cmp
sub
mov
push
add
mov
jl
cmpsl
decl
dec
stos
or
testb
rorl
add
test
decl
lea
pop
popa
fdiv
fbstp
mov
lret
pop
stos
call
decl
lock
add
mov
xchg
subl
pop
pop
incl
pop
fcompl
mov
in
fidivs
rol
and
xor
xchg
in
frstor
movsb
call
std
decl
inc
inc
pop
fisubrs
pop
add
sub
popa
sbb
mov
aad
pop
lcall
jns
aad
mov
scas
adc
mov
sbb
add
lock
call
push
adc
and
fdiv
stos
ljmp
adc
mov
add
loopne
jb
in
push
cmp
inc
push
movsb
adcb
incl
sbb
sbb
add
pop
jo
jo
popa
cmp
js
pop
das
mov
aas
mov
add
in
mov
inc
in
idiv
pop
test
cltd
pop
jl
or
pop
sub
add
sub
and
or
push
test
testl
mov
or
pop
loop
push
jne
cli
pop
xchg
ja
inc
cmpsb
or
inc
rorl
call
mov
aaa
push
mov
jno
add
incl
push
ret
pop
sbb
cld
fildl
jae
cmp
loope
jo
jne
je
sbb
clc
jecxz
cld
inc
or
xor
push
stc
in
inc
int3
push
int3
pop
cld
in
mov
inc
pop
add
inc
ja
or
pop
aad
adc
sarb
mov
gs
dec
pop
cld
push
inc
in
adc
mov
outsb
imull
and
sub
pop
sbb
push
pop
or
jbe
cltd
js
lock
dec
iret
sub
jg
je
outsl
add
adc
clc
imull
add
clc
les
cmp
xor
jbe
pushl
in
subl
jmp
sub
xor
jns
in
jle
es
cmp
sbb
dec
mov
lcall
dec
imul
push
inc
sbb
pop
mov
imul
hlt
mov
call
ds
insl
bound
mov
outsb
paddsb
sub
sub
sub
inc
lahf
out
ret
shl
pop
mov
test
inc
adc
mov
adc
lcall
mov
test
add
testb
popa
xchg
adc
in
xchg
or
je
adc
adc
or
das
sbbb
push
adc
inc
or
cmp
jmp
inc
sti
jno
sbb
mov
sahf
cmp
push
dec
inc
bound
jle
sbb
ljmp
ss
cmp
popa
stc
shrb
adc
out
cwtl
inc
and
test
insb
push
jg
ljmp
xchg
add
add
aam
jnp
rcrb
pop
sbb
std
and
or
jns
in
decl
hlt
rcl
adc
loopne
mov
scas
sbbl
mov
or
push
cmpsb
xchg
mov
pop
adc
hlt
inc
cld
sub
out
aas
sbb
ljmp
push
negb
jne
pop
test
and
ss
loopne
add
adc
cmp
test
cli
pop
cld
sbb
adc
loope
push
dec
pop
push
inc
out
jo
out
push
mov
lods
sahf
mov
or
incl
iret
sarb
or
fsubl
jl
or
jle
jle
sarb
xor
add
dec
out
cmp
mov
jo
int
test
inc
inc
inc
call
xor
xor
adc
ljmp
ret
stos
fdivrl
imul
adc
mov
in
xchg
adc
pushl
clc
fnstenv
les
push
rclb
jns
call
jmp
inc
dec
add
std
cmpsb
mov
inc
cli
push
fiadds
sub
loop
ror
leave
jl
push
aam
pusha
xchg
std
jmp
ds
mov
add
int3
les
popa
dec
jbe
fistps
mov
ljmp
or
push
es
add
adc
lret
inc
adc
pop
xchg
lock
dec
fwait
or
xor
or
push
mov
dec
in
pusha
lcall
and
sub
push
fdivrs
mov
ficoms
pop
push
pop
sbb
sub
jg
test
pusha
pop
add
sbbb
mov
xrelease
dec
shll
dec
jmp
fld
pop
sbb
call
ljmp
incl
inc
in
decb
insl
in
cmp
mov
cmpl
and
cmpsl
std
cs
fildl
js
jb
cli
in
stos
rolb
sbb
ss
ss
js
push
call
icebp
dec
outsb
jo
adcl
es
and
hlt
cmp
xchg
lcall
xor
and
and
cld
push
mov
push
pushl
rcll
pushl
fimuls
cld
add
sbb
xlat
jl
dec
dec
or
mov
dec
sub
mov
or
mov
mov
add
push
sbb
add
mov
and
add
call
inc
aaa
dec
push
push
push
pop
or
xor
push
lods
incl
or
xor
cld
test
pusha
inc
sub
or
inc
dec
in
xor
mov
dec
sub
lods
dec
xor
mov
cmp
cmpsb
mov
ss
add
cmp
ret
lret
push
pop
incl
cmpsl
loope
add
out
clc
lret
xor
and
iret
nop
push
or
ljmp
outsl
push
xchg
dec
sub
js
add
and
dec
xchg
xchg
test
jbe
fcomip
js
cmpsl
test
es
mov
mov
and
add
test
mov
rorl
jg
lret
pop
sbb
clc
mov
loopne
add
jg
or
ljmp
adc
sbb
movsb
jg
sbb
fldenv
push
pop
movsb
jge
cmp
jae
je
test
es
mov
adc
call
dec
decl
pop
sub
fcompl
imul
fs
lahf
sbb
mov
push
xorl
mov
call
mov
inc
push
es
add
dec
lods
pop
pop
jo
out
push
mov
add
ss
lods
xor
and
mov
cmp
pushl
push
mov
je
das
or
push
fmulp
dec
cmp
push
and
mov
fadds
push
cmc
jp
nop
sahf
test
push
je
ret
and
stos
and
add
jg
adc
test
inc
sbb
cmp
push
fs
pushl
cld
xor
add
mov
xchg
add
sbb
ffree
add
enter
pop
hlt
incl
int
icebp
cmpb
sbb
ljmp
inc
call
testb
cli
popa
push
adc
mov
cltd
mov
loope
mov
scas
clc
mov
push
and
add
pop
push
lods
cmpb
sub
mov
lea
push
popa
and
mov
jecxz
addb
push
push
xchg
xor
jbe
lcall
shll
xor
cmp
adcb
fstps
cmp
sbb
mov
fidivrs
add
ficomps
pushl
push
addr16
pop
push
cmpsb
push
push
cmp
mov
sub
sbb
das
sar
and
mov
push
push
insl
mov
jne
jmp
jg
popf
dec
sub
push
fistpll
in
jbe
and
and
shll
pop
pop
and
add
mov
mov
jne
sub
inc
sub
mov
pop
sub
xor
push
lahf
fadds
ds
inc
mov
loop
jo
dec
mov
and
jecxz
jnp
cs
xor
std
call
jg
inc
inc
add
inc
or
shr
xlat
sbb
mov
fnstsw
xchg
push
xor
gs
aas
inc
movsb
push
xor
mov
inc
lods
lcall
push
lods
mov
pop
je
add
mov
loope
sbb
test
xor
and
int3
ljmp
push
lods
adc
adcb
incl
inc
add
cmp
inc
push
dec
cmp
jmp
push
ds
popa
or
sar
lcall
loopne
inc
rcr
divl
lods
add
andb
jl
mov
repz
pushl
loope
xorb
add
insb
pop
movsb
adc
test
lcall
das
push
mov
mov
outsl
mov
das
xchg
jg
dec
loop
xor
jno
insb
sbb
decl
sub
mov
mov
jg
pop
and
sub
repnz
add
insb
add
sarb
inc
pop
mov
push
js
or
cmpl
int3
test
aaa
lea
loopne
es
mov
sub
xor
adc
and
adc
inc
ja
loopne
jns
and
and
mov
jbe
mov
lock
push
js,pn
add
and
xchg
out
xchg
js
cwtl
pushf
mov
mov
fstpt
ja
ja
xchg
xchg
and
add
icebp
fwait
lock
mov
mov
inc
mov
add
jb
dec
xor
outsl
and
mov
imul
icebp
ljmp
and
outsb
cmp
dec
push
arpl
mov
sbb
imul
arpl
popf
mov
movb
xor
xchg
add
pop
cmp
cmp
ss
mov
add
js
shlb
mov
push
notb
into
and
pusha
jg
xchg
dec
mov
icebp
or
repnz
jmp
add
aaa
shll
and
imul
popa
outsb
adc
xor
lcall
mov
mov
je
arpl
ja
dec
adc
jo
fs
adc
addl
ja
jge
pushl
sti
cmp
cmp
add
pop
add
push
add
push
addl
fcoms
add
push
push
enter
dec
cwtl
push
cwtl
lods
les
dec
jnp
outsl
mov
xchg
sbb
nop
xor
mov
dec
sub
xor
add
pushl
push
dec
shrl
xchg
mov
aas
pop
leave
inc
jb
push
and
andb
cld
jle
mov
pop
mov
sarb
loopne
dec
es
mov
xchg
adc
xor
adcb
mov
add
inc
jo
repnz
enter
mov
rorb
orb
lock
add
push
jo
adc
xchg
leave
inc
rolb
push
or
or
lcall
adc
inc
or
add
push
dec
inc
pop
aas
add
jne
aam
add
xchg
jns
xchg
mov
loope
dec
dec
sbb
sahf
out
bound
dec
pop
outsl
jns
xchg
mov
fwait
out
hlt
jp
sbb
iret
aas
dec
pop
in
std
repz
xchg
cmp
mov
fnstcw
push
sbb
xor
and
mov
xchg
ret
push
sbb
inc
mov
nop
call
mov
and
jg
andb
ljmp
nop
jge
shlb
jb
pop
dec
gs
pop
incb
or
outsb
jbe
mov
sbb
ljmp
xor
inc
jno
scas
inc
jb
in
sub
gs
jle
addr16
test
lods
sbb
out
cli
inc
je
bound
inc
ret
int
daa
jne
push
cmp
ljmp
fiaddl
es
daa
dec
popa
dec
lods
mov
add
insb
and
lret
out
and
sbb
inc
decl
sbb
test
push
les
popa
jl
decl
or
dec
pop
sub
jae
push
addr16
lret
jle
dec
inc
dec
mov
push
imul
dec
outsl
push
mov
fstps
mov
mov
iret
dec
and
xlat
mov
push
fdivl
add
sbb
inc
mov
mov
addr16
mov
dec
push
xor
popa
int
fldl
sbb
dec
push
arpl
insb
fucomi
mov
call
test
push
gs
pop
insb
lar
scas
push
call
scas
test
mov
call
mov
int
add
pop
cmc
ss
in
mov
sbb
xchg
lahf
inc
pop
jnp
pop
lahf
sar
cmp
in
aam
jl
pop
cs
mov
xchg
dec
mov
negl
scas
popf
or
mov
sub
adc
pop
push
dec
xchg
push
sub
jle
pop
sbb
jle
mov
mov
jle
out
xlat
dec
add
out
jg
cmp
jg
pop
jl
xchg
pop
rolb
enter
fdivr
sbbb
jg
decl
jns
addb
mov
add
xlat
icebp
or
dec
andl
push
adcb
xchg
xchg
lock
fbld
leave
orb
outsl
orb
mov
jb
mov
outsl
adc
inc
roll
jo
adc
pop
filds
cmpsl
push
jo
push
xorl
xorl
cmpsb
mov
loope
pop
fwait
sub
mov
inc
stos
mov
loopne
inc
push
add
mov
pop
adc
inc
add
and
inc
add
inc
lret
inc
shrb
inc
adc
mov
inc
adc
jmp
mov
loopne
repz
out
sti
or
cmp
cmc
je
sti
add
pusha
daa
mov
sti
xchg
mov
add
loop
dec
mov
incb
dec
adc
cpuid
add
or
add
sbb
outsb
roll
shrb
inc
adc
mov
dec
adc
inc
mov
dec
xor
add
inc
push
dec
adc
pop
pushl
std
lcall
mov
roll
andl
pusha
jno
xor
inc
sti
add
jo
pop
mov
outsl
mov
mov
jne
inc
jl
mov
jge
scas
adc
fsubrl
add
add
add
jp
clc
aad
lock
add
je
jns
fildl
jp
jmp
mov
das
fdivr
dec
js
pop
cmp
dec
aam
push
fadds
pop
mov
jae
clc
add
enter
call
loopne
push
or
out
inc
sub
addb
and
out
jmp
push
cld
lcall
mov
jg
add
jb
imul
mov
fidivrl
jae
jbe
jae,pn
xor
jne
xor
es
jnp
stc
push
icebp
call
mov
adc
inc
sbb
xlat
out
imull
lcall
bound
jae
ficomps
lret
adc
mov
mov
shll
decl
clc
pop
fisubrs
cmp
push
xor
mov
dec
pop
sub
outsb
push
ja
loop
out
jge
fs
cmp
je
insl
ret
jo
push
fsubr
pop
dec
pop
inc
fcomip
add
inc
jns
out
movsb
xorb
sarl
iret
outsb
ds
idiv
mov
js
arpl
inc
mov
inc
insb
rdmsr
pop
je
idiv
decl
aaa
stos
pop
sbbb
fdivp
sahf
pop
push
sub
dec
xorb
popa
in
inc
jnp
sub
insl
das
pop
jae
pop
loop
pop
cmp
xchg
dec
adc
sbb
out
jae
addr16
inc
daa
call
in
mov
push
insb
mov
mov
aas
daa
cmp
xor
xor
arpl
cli
lock
cmp
je
aam
nop
adc
decl
push
inc
bound
imul
insl
imul
shll
add
push
call
fwait
push
inc
rcrb
outsl
inc
dec
pop
outsl
push
insb
addr16
cld
iret
or
xchg
fistpl
jae
pop
fs
movsl
jne
push
aad
push
jg
hlt
cmp
dec
xchg
pop
xor
mov
cltd
data16
mov
xor
call
iret
sbb
jp
pop
mov
mov
fsubrs
push
lcall
sbb
xor
and
lea
add
add
and
cmovo
mov
jbe
add
int3
xchg
orb
inc
shrl
add
pop
sbb
addr16
sbb
mov
cmp
adc
add
xor
xlat
pop
xchg
fisttpl
mov
sub
xor
shrl
jbe
pop
js
cwtl
aas
sub
lcall
mov
jg
nop
or
push
xchg
movsl
push
jg
xor
dec
into
xchg
das
inc
and
jp
jg
incl
ljmp
sub
nop
mov
aam
sbb
jbe
lahf
jmp
cld
decl
test
daa
ja
ret
mov
xchg
scas
daa
pop
lock
ret
incl
push
or
lods
inc
dec
enter
pushaw
pop
movsb
mov
es
imul
xchg
sbb
nop
pop
stos
xchg
add
decl
push
rorb
sub
cwtl
test
xlat
and
pop
mov
ja
pusha
cmp
jg
jg
xchg
dec
out
sub
es
cld
xchg
cwtl
xchg
je
dec
mov
stos
outsl
clc
jmp
xor
inc
pusha
add
pushf
or
das
data16
jmp
xor
xor
inc
inc
aad
mov
and
push
xor
inc
stos
pop
and
pop
mov
mov
rcrb
insl
test
pushl
pop
xchg
mov
jb
xchg
pop
sub
cmp
pop
xor
push
mov
dec
mov
das
add
lret
dec
aaa
cmp
ret
decl
jg
or
xchg
fistps
int3
loopne
in
ljmp
dec
pop
add
inc
xchg
xchg
pop
xor
xchg
nop
dec
insb
pop
jae
out
lcall
outsb
push
jb
mov
dec
push
push
jbe
add
xchg
lock
cwtl
sbb
das
inc
mov
adc
mov
xor
cld
push
out
pop
pusha
and
testl
inc
nop
mov
int3
jge
push
jae
add
jae
ljmp
or
repz
jg
xchg
divl
jnp
fildll
fisttpll
mov
cmp
not
aaa
xor
dec
adc
or
cmp
clc
jg
push
push
push
push
arpl
add
cmpsl
fstps
cmpsl
pop
ret
int
clc
std
xor
leave
push
sub
inc
pusha
sbb
out
cmpb
mov
cmp
lret
xor
mov
pop
sti
idiv
lcall
dec
and
into
jl
imul
sbb
es
mov
adc
xor
sbb
pop
aas
pop
icebp
sub
inc
add
sub
cmp
dec
cmp
add
pop
dec
pop
into
push
add
mov
les
mov
lock
clc
fstpl
rolb
insl
frstor
sbb
and
ljmp
or
or
insl
push
push
es
adc
ret
mov
imul
ret
adc
pop
sbb
cmpsb
pop
test
iret
pop
push
sbb
call
dec
rorb
pxor
sbb
pop
dec
sbb
std
pushl
xlat
into
and
add
jg
add
iret
or
sub
test
fcoms
sub
sub
add
pop
test
stos
mov
ljmp
add
push
das
push
xor
xor
add
insb
mov
adc
sub
xchg
bound
jo
call
add
pop
add
add
xor
nop
xchg
or
mov
pop
pop
in
sub
sub
jbe
insl
aaa
sarl
add
outsl
aad
fwait
add
pop
and
mov
jnp
pop
add
sub
pop
pop
cmp
cltd
dec
sar
cmp
cmp
lahf
inc
pop
and
pop
cmp
aas
lcall
stos
xor
inc
adc
inc
ret
addb
dec
inc
xor
cmp
repz
push
inc
inc
dec
dec
dec
dec
dec
dec
es
dec
mov
enter
xchg
xor
sub
cld
add
dec
dec
dec
jmp
movb
add
mov
stos
mov
push
push
lcall
les
sbb
rclb
add
mov
pop
pop
adc
lods
mov
pushf
push
mov
mov
add
icebp
cmpsl
sbb
movups
lea
sbbl
or
orb
inc
fdivr
pop
mov
adc
insl
adc
push
enter
xor
mov
xchg
pop
mov
les
fcmovnb
and
incl
cmp
jp
or
add
mov
cld
call
cld
filds
add
cli
cmpb
sbb
mov
add
xlat
adc
pop
jecxz
clc
mov
push
and
jns
cs
es
mov
insb
loopne
clc
cld
pop
xchg
push
lods
push
xchg
ljmp
mov
push
inc
push
push
test
sbb
iret
aas
loopne
jne
test
pop
loopne
test
mov
adc
test
pop
ljmp
jl
and
call
or
stos
sub
inc
rorl
mov
xor
dec
sti
stos
cwtl
mov
stos
or
leave
stos
les
add
imulb
mov
fisubrl
and
lcall
push
cld
pop
mov
xor
adcb
adc
cmp
sar
pushl
enter
and
sbb
xchg
adc
and
cwtl
es
add
stos
stos
les
mov
subb
std
mov
lods
add
dec
pusha
mov
mov
jg
loop,pn
scas
add
pusha
xchg
stos
pop
scas
inc
pop
sub
sub
pushf
scas
push
dec
inc
add
and
lock
cwtl
pushl
jle
hlt
sbb
push
jp
add
test
cmp
cmp
xor
xor
outsb
adc
bound
xor
xorb
fisubrl
decl
fisttpll
int
xor
inc
js
mov
mov
je
push
ret
or
call
xor
fildll
out
sub
pop
push
xor
add
loope
xor
mov
mov
cwtl
mov
in
hlt
ljmp
cli
add
pop
push
movsl
clc
xor
jmp
mov
dec
jbe
push
pop
enter
push
es
frstpm(287
inc
jnp
mov
movsl
pusha
cmp
add
inc
scas
mov
push
or
push
add
pop
add
mov
ljmp
clc
inc
test
push
mov
lock
data16
sbb
loope
dec
sub
decl
add
cmp
sbb
imul
xlat
nop
adc
jae
push
mov
fs
pushl
and
lcall
fidivs
mov
in
fldcw
mov
lods
pushf
nop
or
and
test
and
inc
ss
xor
hlt
es
dec
std
notb
mov
addr16
xchg
scas
or
mov
cmp
jo
test
lock
ret
jns
push
stos
inc
ds
imull
jle
je
lods
pop
loopne
mov
jnp
hlt
adc
mov
jmp
lcall
pop
adc
cmpsb
imul
push
or
add
cs
call
add
clc
jnp
hlt
mov
dec
btrl
adc
fbld
sbb
and
xor
hlt
je
lcall
ror
outsb
stos
ret
fcomip
add
mov
es
addl
or
ljmp
adc
rcr
push
data16
movsb
add
test
and
or
adc
sbb
pusha
add
dec
inc
icebp
xor
push
or
arpl
adc
xor
and
bound
cmp
lcall
push
push
push
inc
push
cltd
dec
xchg
repz
lcall
lahf
jo
jo
es
push
je
sbb
add
addl
push
fs
jae
mov
sbb
lcall
pop
popa
decl
adc
les
pop
add
rol
ds
jb
jne
and
push
daa
ja
ljmp
out
mov
loop
jmp
push
ja
cmp
push
cmpsl
jo
mov
lock
adc
mov
adc
decl
and
cmpsl
insl
fistpll
jae
cs
data16
jo
popa
jecxz
push
jne
push
cld
pushl
shrl
das
dec
jb
xlat
les
jbe
ret
jg
jg
arpl
push
testl
xor
stos
pop
decb
dec
mov
or
dec
lock
vmwrite
xchg
movsb
ret
add
mov
inc
ret
ja
rorb
ret
sbb
sbb
mov
fildl
mov
and
call
sbb
mov
inc
outsl
or
mov
jg
cmp
out
xchg
outsl
push
mov
sbb
imul
imul
sbb
xor
aas
push
jg
xchg
push
adc
dec
sbb
jmp
rol
outsl
aaa
daa
sub
sbb
popa
je
call
dec
jle
jecxz
imull
es
dec
add
cmpsl
jne
shll
mov
js
cmp
mov
pop
cmpsl
in
jo
outsl
pop
pop
mov
mov
stos
inc
daa
jecxz
ret
stos
lret
shrb
call
push
push
cmp
dec
pusha
ret
seta
mov
xchg
or
outsb
inc
add
loopne
pop
jp
add
jno
add
mov
dec
pushf
repnz
mov
add
adc
hlt
xor
pop
dec
adc
jnp
mov
mov
mov
xchg
stos
adc
push
scas
aas
aas
inc
adc
mov
push
jns,pt
mov
sbb
dec
cmpsl
sub
push
mov
not
movl
jmp
test
pop
das
xlat
sub
je
mov
mov
ja
imul
xchg
jg
lods
xchg
cmp
popa
stos
lahf
mov
mov
lock
pop
dec
and
cmp
out
mov
cwtl
push
decl
push
lods
inc
pop
adc
lea
outsl
ja
push
mov
adc
incl
cmp
add
je
inc
lret
shrl
or
hlt
jmp
jb
aas
pop
inc
mov
mov
stos
frstor
ja
xchg
outsl
loope
push
adc
scas
add
jbe
sbb
mov
popf
sahf
shll
dec
cli
pop
inc
mov
cmp
jno
fnstcw
inc
jg
inc
push
lock
subw
aas
lock
pop
in
in
pop
call
into
lds
loopne
cli
mov
jns
fcompl
push
fdiv
aam
adc
inc
rolb
movsb
or
mov
pushf
jbe
xor
xor
insl
and
pop
push
das
insb
pop
imul
pop
cs
loopne
pop
leave
test
jnp
dec
sti
xchg
dec
or
int3
enter
loop
fsub
mov
das
ficomps
std
jg
xchg
sbb
leave
enter
sbb
or
inc
add
cmp
test
inc
adc
push
mov
fidivrs
mov
fistps
sbb
dec
xchg
shlb
jg
cld
incl
push
sbb
fcoml
ret
fcmovu
daa
insb
xor
add
lock
pop
daa
jmp
scas
dec
dec
ljmp
cmp
ljmp
test
jo
dec
outsl
adcl
pop
in
jle
cld
iret
ret
cmp
xlat
jo
in
lcall
xor
jmp
insb
aam
add
ja
lods
ss
push
arpl
adcb
clc
xchg
ret
add
mov
pop
or
add
cmp
xor
pop
adc
mov
adc
pop
cld
mov
mov
sub
sub
daa
icebp
or
out
js
xor
mov
xor
xchg
mov
ja
and
ficoms
mov
jnp
fwait
testb
xlat
stos
outsb
repz
xchg
mov
cmpsb
sub
ljmp
inc
jns
out
in
ficompl
pop
ja
inc
jae
dec
cmp
pop
xchg
aas
lret
lea
add
mov
adc
bound
add
movsl
dec
or
xchg
cmp
mov
inc
addr16
dec
test
inc
push
mov
mulb
jmp
mov
jns
lret
insb
push
mov
sti
cmp
xor
call
xchg
lret
popa
bound
sub
mov
push
xchg
cmpsl
jae
xor
mov
mov
pop
lcall
dec
js
push
inc
ja
out
sbb
out
mov
insl
add
push
cmpl
adc
mov
inc
jbe
orl
lcall
mov
mov
ljmp
mov
sbb
imul
jecxz
leave
inc
cmpsl
sub
loopne
add
gs
imul
or
mov
aaa
cmp
mov
and
push
add
mov
mov
push
call
data16
cmp
stos
dec
dec
scas
pop
out
lock
sbb
out
orl
dec
aas
addr16
insl
pop
incl
jecxz
push
mov
pop
mov
push
cmp
arpl
dec
dec
pop
arpl
pop
shrl
push
in
lods
pop
iret
jg
addr16
xchg
ja
movb
pop
addb
out
sbb
outsb
scas
insl
pusha
xchg
sbb
call
mov
mov
dec
add
or
pop
ja
mov
dec
lret
sub
call
xlat
aaa
xchg
mov
inc
mov
shll
adc
roll
mov
add
cmp
xor
lcall
mov
push
jbe
dec
cltd
subb
pop
mov
lcall
addr16
dec
sbb
dec
repz
insl
addr16
xchg
xchg
pop
cs
add
ljmp
add
jo
xchg
call
fmuls
nop
ror
xchg
jp
or
pop
xor
stos
cmp
adc
aad
cmp
pusha
dec
inc
jo
add
inc
cmpb
leave
add
mov
jg
add
mov
and
jb
rorb
xor
dec
or
dec
ss
inc
pop
adc
bound
mov
cli
and
jle
pop
setae
jl
test
imul
push
out
ja
cmpsb
add
iret
push
daa
sub
shrl
sbb
adc
cmp
loope
cmpsb
ret
ds
dec
pop
push
push
pushf
push
adc
xchg
pusha
adc
mov
lods
jnp
push
push
and
push
jnp
lods
decl
mov
sti
pop
scas
jmp
xor
add
jnp
out
outsl
insl
jg
out
cmpsl
lods
pop
jecxz
ljmp
jne
push
xor
and
lods
or
out
movsl
bound
pushl
mov
push
stc
lret
dec
sarb
pop
mov
decl
aaa
mov
cs
lods
aas
test
xor
push
std
cmp
in
sarl
adc
rorl
jbe
pop
sbb
insb
ss
mov
pusha
das
jl
mov
dec
shll
mov
sbb
and
scas
and
mov
pop
push
test
push
jl
stos
lcall
loopne
movq
insl
xor
pop
pop
jp
test
jg
call
pushf
outsl
insb
pop
lcall
xchg
xchg
or
mov
test
pop
sub
loop
dec
inc
push
push
add
addl
divb
xchg
xchg
rcl
movsb
sub
out
mov
outsl
aad
in
scas
cmp
xor
xchg
stos
out
mov
pop
xchg
push
rol
aaa
pop
pop
sub
icebp
xchg
ds
pop
nop
test
jae
pop
ljmp
mov
add
lcall
jnp
loope
jo
mov
fcomi
mov
pop
loopne
cmpsl
decl
sbb
pushl
push
ljmp
ljmp
lcall
fiadds
ja
imul
push
push
ret
push
movsl
aam
xor
pop
cmc
incl
xor
jo
inc
dec
pushf
call
sub
test
adc
dec
incl
fmuls
pop
push
cmpsb
and
mov
xlat
push
jb
inc
lods
xor
inc
pop
outsl
lret
push
cltd
and
scas
inc
pop
inc
faddl
add
dec
enter
xchg
hlt
lcall
enter
or
aas
mov
aaa
pop
cwtl
jbe
enter
das
jg
lcall
es
mov
dec
pusha
dec
pop
pop
add
insb
push
lock
subb
std
call
nop
nop
pop
mov
pop
ljmp
shl
and
hlt
pop
inc
xchg
rolb
adc
sarl
sub
ljmp
sbb
in
fsubr
pop
and
sar
out
xchg
xchg
lret
sub
push
enter
movb
in
and
pop
adc
add
pop
insb
test
adc
jg
add
push
dec
or
push
sbb
push
adc
call
test
ficomps
sbb
fdivrs
pop
fisubl
pop
movsb
inc
xor
shlb
incl
sub
push
sub
aaa
mov
xor
scas
ljmp
mov
sahf
cmp
aas
ret
bound
loop
inc
into
out
xchg
incl
inc
loop
mov
mov
nop
inc
add
lcall
addl
addl
inc
add
add
incl
inc
push
addl
inc
pop
addl
cld
mov
rorl
cli
inc
or
orl
or
adc
or
inc
or
or
outsl
decl
or
rorl
fildll
rcrl
orl
rorl
xor
ljmp
add
sbb
mov
add
hlt
incl
mov
xor
aam
inc
xor
and
add
adcl
pop
xor
adc
adcl
add
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbbl
ret
mov
jbe
arpl
pop
jp
scas
shll
or
adc
mov
or
iret
rcrl
jo
shrb
mov
jmp
bound
data16
fmuls
imul
icebp
outsl
xchg
mov
cmpsl
ret
lcall
cmc
fisttps
test
jns
and
ljmp
fstpt
dec
push
ret
fistl
aaa
sbb
rolb
rep
push
pop
bound
jnp
dec
add
jmp
xor
mov
dec
es
mov
insb
daa
lea
imul
pop
insb
dec
add
adc
outsl
inc
sub
jbe
mov
out
mov
mov
inc
movb
sbb
jecxz
inc
outsb
popa
orb
inc
push
xchg
das
movsb
cmc
inc
adc
dec
and
pop
adc
decl
imul
dec
mov
or
mov
and
pop
popf
inc
loope
das
inc
jae
jo
iret
fsubrs
ja
push
push
icebp
mov
jl
mov
frstor
push
sub
subl
adcb
ljmp
test
inc
scas
scas
test
dec
repz
push
or
fwait
loop
nop
lock
cmp
pop
mov
jo
cs
mov
shll
sub
imul
or
pop
inc
mov
mov
sub
xchg
lcall
and
xor
jmp
testl
pop
in
fwait
or
cmp
mov
and
sbb
and
mov
pop
xorb
pop
pop
inc
shrb
fidivs
pop
push
pop
push
inc
sbb
sbb
call
lods
mov
xor
faddl
and
adc
arpl
cmp
sub
jg
mov
loopne
je
insl
arpl
add
lods
mov
push
rclb
adc
jmp
andb
mov
xor
push
idivl
add
es
jno
pop
xor
mov
dec
int
ljmp
js
je
arpl
addr16
fwait
xlat
pop
pop
xor
arpl
arpl
out
lock
and
scas
test
jb
rolb
pop
repnz
jae
nop
orb
ret
enter
push
dec
lcall
dec
out
and
inc
out
insb
dec
push
mov
or
push
xchg
cmp
pop
mov
fistpl
dec
sbb
xlat
inc
inc
aaa
xchg
jbe
and
adc
inc
add
push
xchg
or
popa
adc
lods
popa
push
add
pop
pop
pop
jecxz
lcall
sti
add
dec
js
imul
or
orb
imul
pop
inc
pop
call
or
dec
inc
xor
or
sti
out
sbb
sub
ja
mov
sub
jg
push
sbb
ljmp
sub
xor
enter
ret
lods
or
pusha
add
call
jnp
sbb
lahf
mov
lahf
fwait
lret
push
push
pop
nop
cmpsl
test
das
cmpsl
mov
decl
pop
mov
push
and
fcmovbe
push
outsl
roll
enter
push
push
out
jle
jne
dec
out
mov
inc
mov
cmpsb
dec
jg
fildl
mov
repz
pop
rorl
jmp
jmp
jmp
adc
pop
bound
pop
ret
mov
mov
inc
call
pop
adc
xor
fwait
pop
lock
push
pop
mov
jno
sbb
incl
and
cmp
cs
push
push
mov
imul
push
imul
lods
dec
fdivs
cmpsl
pushl
push
jae
imul
pop
jecxz
inc
xchg
push
mov
sub
jmp
repz
jbe
push
push
jae
xchg
pop
mov
xchg
inc
push
mov
push
jnp
lock
incl
dec
inc
pop
sbb
fists
cmp
inc
fadds
xchg
nop
push
out
pop
lock
push
rolb
xor
scas
inc
out
mov
xchg
mov
jl
rolb
mov
pop
inc
scas
loopne
aam
shlb
call
pop
pop
xchg
test
int3
add
add
pushl
fcomip
sbb
pop
pushf
cwtl
inc
mov
pop
je
test
or
push
add
or
movsb
xor
jbe
inc
dec
add
call
xlat
xchg
pushf
mov
das
mov
lock
and
out
add
pushl
sub
pop
cmp
test
rcrl
jl
in
fidivrl
xchg
pop
mov
insb
sub
lcall
dec
and
pop
lods
mov
in
mov
sbb
cld
incl
xor
dec
dec
fldcw
mov
pop
rcll
jmp
aas
test
mov
and
les
pop
dec
mov
pop
aam
hlt
ficoms
xor
dec
cs
push
lcall
js
xchg
pop
cmp
mov
pop
pushf
dec
mov
repnz
lods
push
call
sbb
scas
data16
pushl
cld
jne
dec
test
je
add
scas
and
cmp
xor
mov
lock
hlt
or
xchg
out
and
inc
add
inc
imull
call
inc
or
or
adc
jp
adc
cmp
psadbw
or
or
add
sbb
decl
cs
push
roll
add
add
mov
cmpsl
mov
faddl
add
cmpsb
ljmp
aaa
adc
jno
shlb
stos
push
fisubs
popa
jbe
xchg
push
cmp
sub
inc
pop
dec
sub
addb
cmpsl
jle
xchg
fwait
mov
xor
and
cmp
outsb
xchg
mov
aas
xor
imul
rep
push
dec
push
xor
popw
pop
rcll
sub
fs
fdivl
jae
shlb
or
jge
inc
inc
or
dec
clc
fwait
mov
push
arpl
or
jmp
sub
pop
daa
add
out
outsl
xor
insl
inc
jg
enter
clc
js
call
in
and
xor
add
sbb
cwtl
aaa
js
pop
push
popa
decl
and
xor
in
xor
dec
mov
adc
imul
fildll
sub
jo
cmpb
dec
pushf
das
mov
dec
es
xorb
sbb
stos
mov
stc
andb
ror
cld
test
add
incl
sti
add
dec
sub
rorb
inc
inc
and
pop
pusha
rorl
frstor
pop
dec
add
lret
and
add
cwtl
pop
test
inc
add
mov
in
or
xor
movsl
adc
add
add
ljmp
insl
stos
test
push
movsl
jnp
xor
fiadds
or
scas
push
and
andl
jg
jmp
loop
mov
pop
cmp
aas
dec
sub
loop
push
sub
jmp
sub
mov
xor
imul
push
js
aas
push
aaa
pop
add
and
add
mov
push
pop
les
popa
xchg
and
pusha
call
arpl
ja
or
cwtl
fisubl
decl
in
nop
mov
xor
mov
xor
test
sub
jg
ljmp
movsb
xor
xchg
add
cld
or
shrb
push
and
incl
and
ja
push
in
add
pop
xchg
fwait
xchg
cmpsb
decl
pop
mov
push
mov
lods
add
add
mov
dec
in
cld
add
cld
push
add
leave
and
add
mov
cmp
aaa
jmp
jnp
xor
rolb
shlb
mov
sbb
add
jmp
xchg
add
push
lds
pop
cmp
xor
push
in
stos
or
nop
mov
test
or
cmpsl
cs
dec
adc
das
mov
inc
mov
pusha
add
push
xor
enter
rclb
clc
mov
add
leave
int3
lock
add
aam
lret
dec
dec
incl
cmpsb
jge
inc
add
and
xor
ss
jbe
inc
dec
lods
jg
pushl
test
jg
mov
mov
mov
in
push
sbb
mov
add
cmpsb
pop
and
xchg
and
sub
mov
data16
pop
gs
aam
xchg
cmp
movsl
xchg
add
or
jno
mov
add
or
in
dec
jo
out
mov
inc
scas
xchg
in
call
out
jp
lock
adc
aam
adc
mov
call
dec
pop
nop
push
sub
scas
dec
cwtl
xor
dec
jnp
pop
test
pop
xchg
mov
and
push
mov
lea
fists
inc
or
ja
ljmp
int3
leave
sub
test
addr16
fdivrl
dec
dec
adcl
bsr
lcall
je
and
flds
mov
in
outsb
inc
mov
cmp
pop
add
fsubrl
popf
fs
inc
pushf
cmpsl
cwtl
inc
stos
sub
cmp
cwtl
fadds
ret
push
xchg
mov
lods
stos
xor
scas
jne
fcomip
decl
jnp
mov
imul
lods
adcl
add
inc
inc
push
mov
add
aad
or
add
xchg
pminub
inc
dec
fs
mov
cmpsb
and
ljmp
dec
outsb
mov
test
insl
sub
push
adc
pop
dec
je
push
add
push
movb
pushl
xchg
invd
lods
push
and
and
rorb
or
pop
inc
xchg
add
sbb
ficoms
test
push
ja
add
push
xchg
icebp
decl
enter
mov
push
adc
scas
inc
jg
loopne
fdivs
xor
test
decl
pop
rcrb
les
push
xor
pop
push
push
jp
adc
mov
or
sar
and
lods
cmp
lret
jg
push
pop
add
add
loope
dec
dec
orb
aam
push
xchg
mov
mov
inc
jmp
push
aas
lods
push
mov
push
cmp
fistpll
xlat
out
sub
decl
push
test
fisubl
or
xchg
xchg
dec
repnz
ljmp
xor
imul
or
mov
lcall
mov
faddp
xor
dec
adc
push
loop
insb
sahf
hlt
cld
adc
jle
lcall
mov
jecxz
inc
adc
mov
dec
arpl
lcall
sbb
add
adc
jae
fldt
dec
xchg
insl
das
sbbl
ficompl
arpl
lcall
in
sbb
adc
push
add
call
inc
jo
nopl
xor
emms
je
push
push
pusha
pop
lea
stos
sarl
jmp
insl
addr16
adc
jnp
movsb
or
push
pop
push
push
js
sub
pop
into
insl
fwait
popa
mov
xlat
imul
popa
fistl
pop
jnp
and
fdivrs
mov
jne
push
xchg
jg
push
push
mov
sub
push
push
cld
adc
mov
sbb
push
mov
add
mov
rcrl
sub
inc
mov
decl
pop
adc
jae
mov
test
jp
outsb
ljmp
cs
jmp
addb
aam
pop
sub
cmp
fcomi
adc
dec
adcb
call
ds
adc
mov
inc
lahf
dec
fs
imul
pop
stos
aaa
into
addr16
cmpsb
xor
fwait
aad
mov
out
fldt
sub
mov
pushl
fildl
popa
jmp
ret
sub
mov
ljmp
mov
cmpsl
or
bound
popa
push
pop
js
mov
xor
adc
xchg
lcall
push
sbb
xor
outsl
jl
rorl
add
frstor
push
aaa
mov
sub
popf
sar
jg
xchg
sub
add
pop
sbb
js
and
add
decl
xor
or
adcb
jae
es
dec
lret
outsb
push
daa
daa
mov
or
mov
or
fistpll
mov
andb
or
jne
mov
ret
jno
mov
outsl
movsb
or
movsb
cli
push
cld
pop
add
lea
aas
test
stos
fstps
jae
mov
fucomip
dec
sub
outsl
ffree
sti
or
ljmp
dec
sbb
lcall
lock
orb
push
adc
push
ja
sub
jecxz
jbe
pop
stos
jnp
mov
aam
cmp
ss
addb
inc
and
xchg
mov
pop
lock
mov
jae
push
mov
test
test
call
and
dec
lods
mov
fisubrs
and
jbe
push
aaa
jnp
jae
lcall
cmp
imul
bound
xchg
pop
pop
jbe
stos
fcomps
rorl
andl
sar
mov
jp
daa
sub
push
fwait
outsl
xor
call
test
push
pop
push
xlat
mov
repz
adc
jg
ljmp
mov
add
add
dec
pop
jg
stc
sub
add
mov
test
push
pop
pushaw
daa
in
insb
test
loopne
nop
mov
cmc
sbb
add
je
test
sub
ljmp
bound
inc
inc
inc
daa
sbb
pop
pop
push
xchg
mov
pop
clc
outsl
in
pop
adc
pop
aam
add
int3
mov
cld
mov
movsb
cmp
mov
xchg
nop
pop
mov
pop
and
rclb
cld
andb
movsb
repnz
decl
imul
rcrb
in
mov
pop
push
push
ret
pop
out
cli
jmp
adc
jne
push
jae
mov
insb
movsb
mov
xchg
mov
mov
out
lds
or
xlat
nop
stos
test
push
add
das
clc
fcomip
mov
int
xchg
mov
int3
aas
add
incl
jg
or
pusha
pop
jl
sbbb
pop
add
add
add
mov
pushf
inc
pop
mov
pop
in
jbe,pn
loopne
mov
sarb
nop
and
call
incb
mov
aas
mov
push
es
pop
nop
idiv
das
clc
ljmp
and
and
sbbl
lock
testb
nop
pusha
and
insb
mov
jmp
adc
rorl
sub
aaa
xor
mov
jmp
mov
pop
lock
add
fmuls
adc
inc
mov
add
cwtl
inc
cs
std
fldt
inc
mov
test
movsb
dec
flds
das
hlt
mov
jmp
add
stc
add
in
loopne
adc
push
pop
and
ss
jmp
inc
inc
sub
mov
mov
xchg
lret
je
test
fcoml
add
add
call
in
cmpsl
or
hlt
call
and
daa
add
pop
int3
and
fs
add
in
mov
xchg
inc
push
fwait
inc
mov
pusha
pusha
jo
or
mov
aaa
dec
nop
xchg
outsb
fs
in
je
mov
fsub
fsubs
and
lret
lea
lock
mov
rcrb
movsb
imul
push
inc
mov
sub
faddl
lret
sub
jp
bound
or
das
and
js
inc
out
inc
sahf
mov
jmp
push
ljmp
inc
orl
insl
jne
xchg
inc
mov
push
jo
mov
xchg
mov
mov
cmpsl
sub
inc
add
and
inc
fidivl
jmp
lcall
incb
rolb
and
mov
push
sub
lcall
jnp
jp
mov
sub
xchg
mov
xor
sbb
ret
inc
adc
mov
or
inc
pop
dec
or
in
test
lahf
xor
dec
cmp
aaa
pushl
lds
fisttpl
fmuls
mov
inc
scas
ja
adc
sub
call
rol
lea
push
scas
scas
insb
rcrb
js
pop
dec
fcmovbe
inc
pop
lods
xchg
stos
dec
lock
add
or
xchg
pop
ja
pop
sbbb
cwtl
mov
ds
notl
movl
cmp
scas
dec
jb
lahf
jle
push
lret
xchg
push
or
mov
mov
into
push
cs
xlat
cs
call
push
jnp
das
decl
lock
pop
cld
out
das
xor
sub
or
dec
insl
movsl
push
bound
xchg
inc
inc
das
inc
sub
test
ret
push
push
or
fisubl
jae
adc
notl
lcall
mov
test
loop
xchg
scas
push
ja
lea
sub
addl
shll
push
inc
stos
push
mov
outsl
cmp
rorb
mov
push
adc
add
adc
ljmp
jae
or
sub
or
sub
lahf
ret
add
pusha
add
pushl
outsl
fisubs
jmp
push
popa
daa
xor
adcl
or
xchg
or
ljmp
pop
push
add
adc
aas
mov
bound
pop
and
nop
roll
xor
xor
dec
es
in
lcall
add
pop
nop
xor
rol
js
aam
sar
incl
jmp
xchg
mov
and
fiaddl
scas
push
fcomip
push
scas
fucomip
or
enter
ret
ljmp
push
test
push
adc
mov
push
xor
push
xor
ficoml
add
add
add
pop
mov
jecxz
cmp
mov
aam
or
add
adc
or
xor
fcmovbe
pop
pop
push
insb
notl
add
lea
hlt
incl
rcrl
leave
in
jp
inc
cmpsb
push
adc
xchg
orl
push
ljmp
mov
notl
fmuls
aas
push
pop
or
mov
dec
inc
addl
negl
lcall
mov
xor
or
push
xchg
mov
insb
push
notl
clc
ficoml
mov
cmp
ljmp
loop
lock
pop
jo
adc
fimuls
mov
les
daa
jns
mov
jne
jno
inc
decb
ja
mov
add
jno
call
cltd
mov
addr16
push
mov
bt
bound
jmp
pop
xlat
xchg
movsl
jne
push
shll
sbbb
pushaw
pop
ret
sar
sbb
test
and
push
mov
push
xlat
fcomip
insb
pop
dec
inc
shlb
pop
push
dec
fwait
imul
jmp
roll
and
ret
movsl
rep
jae
xchg
jl
jne
imul
cmp
ljmp
outsl
daa
outsl
add
sbb
adc
push
inc
mov
mov
addl
sbb
das
push
in
push
daa
ret
add
push
pop
xlat
mov
sbb
sar
aas
push
xchg
scas
cmp
in
popf
add
adc
adc
pop
mov
shlb
jl
push
insb
mov
add
pushf
cmpsl
subb
int3
mov
jg
cs
cld
pop
mov
pusha
cld
iret
mov
hlt
aaa
dec
and
or
pop
sbb
or
call
scas
out
push
lock
test
ljmp
loop
pop
push
dec
add
xchg
cmp
frstor
fstpl
push
adcl
dec
add
jecxz
sub
pop
push
cmp
push
cmp
call
addr16
jne
int
jnp
and
test
sub
sub
adc
out
clc
incl
aaa
xchg
bound
push
les
sub
mov
dec
call
ljmp
inc
adc
mov
or
inc
outsl
dec
cmp
xchg
shll
xor
scas
sar
or
xorb
add
or
dec
add
jae
pop
call
cld
inc
pop
fwait
ret
popa
dec
ret
lock
mov
inc
sbb
xchg
adc
call
dec
lods
dec
loopne
and
inc
sbb
js
jne
or
call
cmpsl
mov
mov
popa
lret
roll
repz
js
decl
test
mov
inc
aam
popf
and
cltd
hlt
in
test
loopne
add
js
pusha
xor
push
mov
std
std
pop
lds
jbe
mov
jg
pop
ljmp
std
mov
sbb
je
jb
xchg
lahf
jo
insb
and
xchg
sarl
repnz
out
std
inc
cmp
outsl
push
test
dec
xor
inc
mov
sbb
in
cmp
lret
pop
push
adc
cld
leave
xchg
add
mov
pop
sar
decl
lahf
pop
mov
sub
adc
sbb
aad
pop
js
in
pop
jb
inc
lods
pop
mov
call
cltd
int3
add
in
mov
dec
or
inc
leave
fisttpl
jg
movsl
fdivrs
test
test
add
push
decl
scas
jg
add
shlb
jb
add
push
mov
scas
push
or
leave
xchg
cmp
pop
incl
cmp
arpl
xor
mov
sbb
mov
add
xor
jle
add
ds
cmp
sahf
addb
cmp
mov
xchg
arpl
dec
dec
xchg
push
fidivl
arpl
push
push
mov
scas
dec
in
push
dec
push
inc
sub
dec
push
or
call
push
push
fdivrl
orl
push
out
jo
or
dec
mov
dec
mov
dec
rolb
push
iret
and
cwtl
out
jg
flds
dec
pushl
fisubs
test
xchg
xlat
das
test
addr16
and
dec
and
fnstsw
pop
sub
jg
ljmp
cmp
mov
lods
lods
cmpsb
enter
fcom
adcb
hlt
aas
in
lods
mov
les
inc
sbb
mov
pop
lcall
pushl
idivl
dec
ret
xchg
lahf
pop
sbb
sub
jg
ljmp
sub
dec
cmp
sbb
push
sbb
mov
mov
or
aas
adc
dec
popw
les
dec
mov
push
inc
pop
icebp
dec
xor
add
xchg
xor
add
jg
fwait
test
shll
adc
adc
cld
add
or
or
nop
fildl
xor
sahf
adc
pop
xor
fwait
imull
sbb
rcrb
mov
fcompl
rcrb
fisubrl
jbe
ljmp
sub
in
sarl
int
hlt
cmp
dec
inc
xor
jl
cmp
cmpsl
fstps
cwtl
cmp
or
incl
cmp
sti
xor
inc
and
cmp
inc
cwtl
add
mov
add
cwtl
pop
mov
ds
add
sbb
and
push
les
cwtl
and
mov
jle,pt
scas
xchg
and
cmp
incl
pushf
pop
call
inc
add
mov
and
add
or
orb
lcall
stos
mov
jae
jb
movsl
jns
xor
movsb
dec
push
jg
jne
test
push
inc
into
pop
jge
call
in
or
sub
mov
push
add
outsb
outsl
push
push
cmp
daa
notb
lcall
dec
dec
pop
movsl
mov
outsb
dec
popa
pop
pop
outsl
pop
ja
subb
fs
je
mov
ljmp
pop
in
pop
outsb
loopne
add
nop
or
sbb
sub
fimull
enter
call
dec
or
xchg
sahf
gs
insl
outsl
fs
pop
jbe
pop
cld
jmp
jmp
ja
popf
enter
pop
xor
int3
and
aaa
lods
adc
rcr
pushl
test
cmp
inc
outsl
fldt
loopne
sbb
ljmp
insl
insl
add
imul
in
jmp
mov
dec
sub
and
cmp
and
scas
push
and
outsb
cmpsl
mov
stos
jmp
inc
adc
sbb
insl
and
jno
in
or
pop
xor
cs
in
jo
pushl
paddsw
lds
cmp
addr16
shl
add
js
test
dec
cmp
mov
cmpsb
dec
sahf
imul
and
or
sahf
ljmp
rorl
sbb
cmp
jns
add
mov
sub
jno
js
lcall
jo
sbb
fsubrs
decl
sub
push
lods
adc
push
push
inc
sub
es
dec
push
imul
lcall
ljmp
xor
xor
push
arpl
addr16
and
pop
cld
add
fcmovnu
dec
inc
jl
push
inc
push
popa
sub
jne
jae
addr16
push
insb
jb
mov
xor
adc
sub
dec
or
jb
or
jne
pop
sub
dec
xor
jmp
mov
shlb
adc
jg
dec
xchg
xor
add
xor
aas
xor
add
je
mov
repnz
xchg
cmp
mov
jno
jbe
add
shlb
push
faddl
inc
pop
sub
loope
push
cmp
rorl
mov
cmp
cmp
lret
pop
push
mov
and
or
cmp
sub
jae
pop
xlat
mov
inc
gs
sub
adc
fidivrl
sub
pushl
outsl
loop
sub
and
ret
and
add
nop
xchg
cmp
push
or
pushf
pop
add
push
cmpsl
add
js
or
arpl
jecxz
sbb
shlb
outsl
add
and
scas
adc
dec
push
das
or
mov
add
out
mov
pop
arpl
mov
inc
push
pusha
jo
shr
jg
in
clc
jmp
push
lds
and
add
fidivl
or
mov
dec
mov
xor
pop
add
lcall
in
fwait
or
add
sub
ljmp
sti
pop
imulb
pop
pop
mov
cvtpi2ps
adc
sbb
jbe
lcall
inc
incl
adc
cmp
push
bound
and
add
mov
pop
push
add
add
push
das
add
outsl
in
mov
adc
dec
add
sub
add
sbb
fcmovb
push
cld
mov
incl
xchg
add
push
and
push
pop
pop
nop
add
aam
jl
repz
arpl
sbb
loopne
push
push
adc
std
das
call
sub
dec
pop
outsb
repz
cld
out
pushl
int
or
sub
sahf
adc
push
data16
movsb
insb
mov
loope
data16
inc
push
pop
pusha
jno
mov
std
stos
push
out
bound
xchg
push
and
and
and
jg
inc
cli
cmpsl
mov
cmpsb
hlt
push
dec
incl
jae
pushf
imul
mov
test
cmpsb
roll
push
outsl
cmp
fnstenv
mov
outsb
pop
jae
cmp
jg
jl
push
mov
inc
inc
adc
data16
mov
shlb
sub
inc
cwtl
jb
dec
dec
imul
loopne
test
stos
addr16
shl
and
sti
insb
xchg
test
mov
dec
xchg
sbb
out
daa
pop
arpl
daa
fs
add
inc
popa
das
lahf
in
jmp
inc
push
inc
int
pop
add
mov
xor
dec
inc
out
adcb
jle
push
mov
in
adc
pushl
jne
nop
leave
push
aas
inc
adc
out
cmpsb
add
push
decl
adc
daa
movsb
or
sub
popf
push
outsb
imul
aas
add
jmp
push
adc
jo
jo
jbe
add
xchg
jb
das
dec
fsubp
fbld
call
jne
push
jp
jns
or
push
xsave
push
mov
call
pushf
cmp
std
enter
and
stos
adc
pop
ljmp
insl
fwait
push
stos
ss
jns
jae
jae
mov
adcl
es
cld
imul
push
push
or
data16
add
jo
mov
rclb
jl
insb
je
popa
mov
lods
jp
js
call
adc
pop
sub
or
mov
push
pop
js
dec
fs
mov
stos
decb
sbbb
mov
out
dec
pop
fsubrp
decl
push
pusha
push
ja
lds
pop
rclb
imul
inc
fimull
jno
or
ss
mov
call
popa
sbb
xrelease
ret
pop
ret
cld
lcall
roll
inc
cmp
or
mov
sahf
sbb
cmp
lcall
add
jae
push
cs
out
pop
jg
jne
dec
sub
loopne
push
insl
pop
data16
call
push
aas
xchg
sub
sub
add
jle
aam
sbb
push
push
add
mov
fisttps
add
orl
push
or
push
nop
cmp
add
push
mov
or
bswap
mov
decl
push
push
adc
push
adc
or
adcl
hlt
or
mov
repnz
jnp
pop
outsl
or
aam
push
gs
push
cli
add
push
leave
push
and
adc
jb
pop
test
cld
jg
inc
pop
xchg
add
jg
add
add
push
adc
adc
outsb
imul
ljmp
cmc
div
clc
stc
cli
jg
xchg
add
xor
dec
push
imul
dec
dec
dec
push
add
push
dec
add
sbb
test
insl
ds
call
push
lcall
inc
add
inc
outsb
sbb
cld
xchg
mov
negb
and
and
and
gs
sub
pop
jg
notb
cmp
pop
incl
mov
and
inc
or
inc
jns
push
rol
mov
jmp
jl
jle
addb
xchg
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
inc
inc
cltd
lcall
sub
jmp
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
and
fadds
fcmovu
lahf
xchg
jmp
jecxz
in
out
jmp
out
out
lock
es
xchg
adc
js
int3
xor
es
cld
call
rolb
mov
loope
clc
sbb
lcall
dec
into
pop
pop
pop
aas
aam
fdivr
scas
push
mov
add
xor
ja
out
adc
adc
push
pop
pop
cmp
dec
inc
adc
push
dec
cmovae
dec
inc
push
adc
jmp
and
push
idivb
push
jb
adc
inc
add
pop
inc
push
ja
fadds
and
xor
inc
inc
icebp
incl
inc
mov
mov
stos
lods
adc
ja
mov
pop
push
cmp
jg
faddl
leave
jg
mov
movsl
xchg
pop
mov
push
adc
pushl
out
mov
mov
mov
mov
cmp
pop
jmp
jmp
outsl
add
sbb
dec
ljmp
sub
dec
push
push
pop
aaa
aas
mov
js
mov
xchg
xchg
fwait
lahf
hlt
mov
add
scas
mov
shr
add
ds
push
cwtl
pop
scas
dec
mov
imul
sub
sub
adc
xchg
das
jb
cmp
or
ds
das
das
or
inc
lds
or
insl
push
sub
call
fs
xor
std
jge
out
jne
jae
push
gs
adc
jb
inc
jb
mov
lcall
je
adc
sti
push
popf
jae
arpl
inc
cmp
jne
xchg
or
pusha
mov
dec
pop
xor
cld
lcall
or
xor
push
loop
jnp
push
dec
dec
or
jne
pushl
gs
mov
push
push
xor
fsubl
push
add
inc
arpl
stos
mov
cltd
xchg
xchg
dec
mov
rorl
xchg
jo
add
cld
push
fstl
sbb
and
sub
cmp
mov
sub
incl
and
push
jbe
sub
and
sub
and
and
clc
cmp
ja
adc
xor
push
add
push
call
push
mov
inc
enter
xor
daa
inc
pushf
or
ret
mov
adc
repnz
push
je
mov
and
ret
test
jge
inc
cltd
adc
rcll
jno
and
dec
test
aaa
or
dec
dec
popf
mov
add
xchg
fisttpl
add
mov
mov
or
lock
jg
call
shlb
movsl
jae
cmpsb
clc
icebp
adc
jae
adcb
in
pop
add
enter
push
shll
adc
cmpsb
pusha
jg
lcall
add
jg
pop
xor
rolb
insl
fcmovne
pop
lock
aas
push
xchg
movsb
dec
lock
sub
dec
dec
inc
add
or
dec
inc
dec
or
cmovbe
sub
sub
incl
popa
stos
sbb
fdivs
mov
decl
mov
mov
call
sbb
pushf
xchg
stos
jno
push
ret
into
xchg
lock
mov
das
add
scas
push
fwait
mov
xchg
or
scas
fidivrl
add
lcall
sub
icebp
sti
fsubrl
dec
data16
push
add
pushl
add
xor
fidivl
xor
and
cmp
cs
mov
or
incl
mov
mov
mov
cmpsl
add
fsubp
outsl
inc
xchg
out
ljmp
cmc
inc
bound
outsb
jo
mov
orl
outsb
inc
es
arpl
pop
add
stos
rolb
sbb
add
sub
insl
fs
sarb
mov
push
lcall
decl
mov
hlt
push
adcb
inc
outsl
lods
fs
test
test
mov
jmp
and
inc
imul
xlat
push
or
test
fwait
lea
popf
cld
xor
adc
inc
fsubs
sti
add
mov
mov
mov
pop
sub
ret
jg
arpl
cwtl
pop
sahf
mov
cmp
sub
inc
mov
hlt
int3
icebp
push
into
or
jg
pop
add
jbe
or
or
adc
adc
stos
incb
or
testl
lods
mov
cli
mov
mov
loopne
lock
mov
sbb
std
js
mov
adc
jg
rcrl
ret
and
ret
dec
dec
push
pop
fnstsw
std
out
cli
outsl
adc
jg
pop
sbb
push
add
loopne
pop
or
push
pop
js
pushl
push
xchg
mov
outsb
add
ret
dec
insl
in
adc
or
mov
jecxz
decl
mov
out
push
out
mov
sbb
inc
xlat
ret
push
cmpsl
loop
push
fadd
push
cmovo
incl
push
xor
aad
xchg
nop
cld
inc
enter
loop
pusha
das
ds
aaa
adc
dec
jns
push
xchg
hlt
cld
pop
cmp
sbb
cmp
decl
push
mov
xor
add
xor
jg
xor
imulb
add
cmp
mov
push
add
sub
push
mov
insl
data16
imul
pushl
inc
dec
mov
inc
addb
or
xor
adc
jo
push
insl
push
inc
push
push
incl
add
cmp
int
mov
dec
jb
incl
push
enter
push
cmpsb
fs
int3
sbb
xchg
pop
insb
bound
call
insl
cmp
dec
inc
jns
xor
fsubrl
xor
pop
jno
dec
inc
fstps
xlat
lcall
jno
and
fistpl
dec
adc
sub
jmp
lds
bound
add
push
mov
cmp
inc
aad
rolb
imul
into
ret
xchg
mov
lea
cmc
mov
inc
aaa
cltd
xor
fidivs
dec
int
sub
ret
inc
sahf
pop
mov
inc
push
dec
push
pop
inc
inc
aam
cmp
mov
fcmovnu
inc
lea
pushf
clc
mov
rclb
and
push
mov
repnz
mov
dec
ds
jnp
and
addb
xchg
fprem1
insb
iret
push
mov
cmp
cmpsl
xor
roll
mov
and
cs
push
icebp
push
mov
pusha
sbb
das
xchg
adc
push
mov
ljmp
inc
xor
xchg
and
pop
jb
das
cmp
sbb
pop
mov
xchg
or
decl
inc
dec
fcoml
dec
inc
stos
mov
data16
stos
lds
pushl
adc
sub
sahf
addr16
cmp
dec
jl
push
inc
push
sub
jge
xchg
call
js
fcompl
jp
stos
movsl
fmuls
add
sti
sub
mov
mov
fcomip
mov
movsl
jbe
add
dec
push
mov
stc
subb
xorl
stc
pop
add
pop
loop
inc
add
and
rcr
adc
adcb
xchg
or
add
dec
les
lahf
and
push
dec
mov
mov
xchg
incl
and
add
mov
adcb
mov
cmp
jns
jno
or
sub
nop
xor
mov
incl
insb
push
xorb
add
push
push
lcall
and
lods
pop
je
add
jmp
inc
arpl
inc
pusha
mov
or
pop
or
outsb
inc
pop
mov
inc
shrb
setae
ljmp
movsl
adc
push
adc
xor
rcrb
inc
xchg
incl
repnz
pop
mov
inc
imul
xchg
fists
sarb
loopne
jbe
lods
mov
add
and
stos
inc
ds
add
movsb
lods
or
out
dec
lcall
mov
xor
in
adc
xchg
jbe
out
sbb
or
add
xchg
inc
dec
pop
sbb
jae
iret
mov
jecxz
add
mov
dec
add
imull
jmp
jg
xor
inc
or
arpl
add
movsb
add
incl
and
cmp
push
sarl
sbb
rolb
pushl
pop
push
push
push
mov
jnp
subl
or
sbb
dec
dec
insb
inc
pop
incl
sub
push
or
ret
jmp
movsb
ja
sub
mov
pop
cmp
mov
call
loopne
addr16
gs
cli
mov
push
aas
scas
outsl
pop
push
mov
ret
arpl
ss
das
pop
pop
movsb
push
mov
mov
mov
or
and
dec
andl
inc
cmpsl
sarl
xor
lcall
jmp
sub
pop
sub
dec
jbe
jae
outsb
dec
dec
bswap
push
dec
lahf
push
pop
hlt
decl
shrl
mov
out
dec
stos
push
enter
or
mov
sbb
ja
add
ljmp
out
sbb
jg
cmp
and
mov
js
dec
dec
mov
cld
adc
jg
adcl
pop
adc
movsb
jne
and
out
push
push
pop
std
rcl
imul
int3
cmc
jg
lcall
add
push
gs
push
js
movsl
and
popl
adc
sbb
cli
mov
enter
and
xchg
inc
ds
mov
and
clc
inc
rclb
imul
lcall
adc
inc
imulb
dec
xchg
jae
js
fnsave
xor
aaa
mov
inc
js
sub
xor
fdivrp
inc
jo
xorb
mov
adc
jl
test
cmpsl
daa
inc
outsb
leave
or
mov
in
incl
push
xchg
lcall
out
add
inc
inc
push
and
or
inc
in
mov
rorb
push
shll
jp
xor
ljmp
sub
sbb
test
pop
test
movsl
and
sbb
inc
paddusw
mov
enter
mov
sbb
mov
sbb
je
je
addr16
sbb
xchg
jg
sbb
and
dec
inc
testl
push
dec
loop
sub
jo
mov
loop
out
inc
and
out
fs
rcll
or
in
popaw
decl
xchg
xor
in
pusha
insl
dec
inc
das
xchg
sbb
xor
cmp
pusha
call
gs
outsl
test
jge
pusha
loopne
insb
add
ret
push
jo
rorb
pop
mov
sub
push
cltd
andl
ljmp
adc
cltd
mov
pop
cwtl
test
pop
out
sub
outsb
dec
decl
aas
or
inc
jns
or
adc
pop
mov
into
push
jnp
xor
adc
jbe
dec
cs
incl
cmp
jo
lea
mov
dec
xor
data16
clc
push
push
in
mov
clc
ljmp
or
push
dec
sbb
xchg
or
push
xchg
jg
addb
mov
inc
push
inc
xchg
insb
dec
mov
adc
dec
sbbw
jp
mov
and
daa
and
or
sbb
and
aaa
sbb
push
cmp
mov
adc
adc
mov
sbb
fnstenv
pop
sbb
popa
sbb
ror
sbb
iret
mov
arpl
pushf
mov
fs
arpl
aad
scas
pmuludq
pushl
test
push
mov
pusha
xor
data16
and
xchg
mov
jecxz
xchg
pusha
push
test
adc
cmp
mov
push
adc
dec
mov
loop
sahf
aam
pop
hlt
idivl
insl
mov
adcl
repnz
adc
push
lods
out
xor
std
call
jle
push
or
or
push
sbb
lcall
or
decl
cmp
sbb
or
push
adc
adc
add
or
pushl
push
add
or
mov
mov
or
adc
jle
adc
sub
or
push
and
clc
lcall
or
or
inc
or
mov
lock
add
movq
pop
std
adc
push
xor
adc
lret
adc
push
sbb
push
ljmp
sbb
sbb
dec
clc
or
or
adc
lock
add
sub
ljmp
dec
loopne
clc
add
lock
lahf
xor
push
loopne
add
outsb
ficomps
add
add
add
jno
add
mov
pop
jmp
in
jg
call
xchg
sub
or
push
jno
inc
adc
pop
xor
xor
jmp
and
cli
add
dec
xor
jl
xor
add
adc
and
insl
xor
mov
loope
add
cmp
and
inc
es
jbe
or
cld
decl
jne
dec
cmp
push
pop
int3
pusha
mov
and
lock
in
test
or
dec
mov
cwtl
lock
adc
add
add
and
dec
call
or
or
lock
lock
add
mov
sbb
mov
jns
jnp
push
lock
sub
mov
sub
sti
das
clc
pop
add
daa
add
sub
cmp
rcr
mov
dec
xlat
cmp
push
cli
decl
add
sti
add
inc
lock
inc
add
loopne
pop
or
dec
pop
popa
js
push
jb
sbb
or
lcall
mov
add
xor
ficomps
or
decl
dec
xchg
dec
inc
sbb
push
add
call
pop
and
inc
cli
mov
dec
sbb
test
sub
push
pop
sub
pop
lock
xchg
out
push
dec
adc
sbb
push
lock
cmpsb
aad
icebp
push
das
or
pop
lds
jg
mov
and
ds
lock
pop
and
add
call
fcomip
incl
cmp
int3
add
add
adc
and
and
pop
ret
and
mov
add
lret
lock
das
dec
adc
loope
loop
andb
sbb
ljmp
push
repnz
mov
shrl
and
pusha
clc
mov
and
call
pop
addb
std
jg
add
and
lock
add
inc
in
push
inc
and
xor
mov
sub
cli
pop
sbb
adc
call
cmp
xchg
out
shl
call
inc
pop
mov
ret
sub
ja
fildll
mov
add
cmp
fimull
add
mov
sub
add
cli
pop
jecxz
sbb
jl
lahf
xor
call
ljmp
loopne
loopne
lock
add
xchg
movsl
in
and
lret
xor
jb
dec
nop
fwait
or
dec
fwait
sub
mov
lods
cwtl
mov
sbb
push
and
jge
or
lcall
ljmp
faddl
mov
gs
or
push
lcall
sbb
mov
add
sbb
aaa
add
rolb
or
or
ja
sbb
inc
addr16
ljmp
cmpsb
and
cwtl
test
push
add
pop
inc
jge
ds
jl
mov
cli
sub
call
xchg
xor
push
pop
daa
pop
ja
movsb
fs
fildl
int3
pop
push
or
out
sub
and
xor
mov
mov
dec
xchg
push
sub
adc
scas
clc
decl
jge
sub
inc
add
int3
into
pop
lock
add
xlat
push
push
adc
call
push
and
mov
ss
out
add
lock
movsb
lock
pop
or
add
jle
and
add
sbbb
inc
add
aas
jae
xor
mov
faddl
cld
cmp
ljmp
and
pop
arpl
pop
inc
jg
daa
pop
jmp
imul
push
mov
call
aas
add
insb
mov
rcll
sbb
push
push
pop
xor
jg
push
push
jo
inc
lock
push
cld
mov
add
dec
and
or
mov
je
pop
adc
jg
incl
push
sub
dec
lock
push
mov
push
push
rol
xor
repz
adc
call
sbb
and
mov
lds
clc
divb
and
es
insl
jbe
and
xchg
lock
pop
addb
mov
cmp
neg
loop
dec
mov
jg
cmpsb
aas
pop
clc
push
ljmp
cmp
and
add
clc
cmp
cld
ljmp
insb
add
push
pop
sub
cwtl
xchg
lock
jmp
dec
dec
out
sub
push
es
or
xlat
aad
cmc
push
jle
pusha
dec
add
filds
sahf
ds
or
push
fcompp
xchg
aad
add
dec
lcall
addl
jmp
pusha
push
lock
push
pop
dec
sbb
sbb
aaa
enter
mov
add
mov
mov
lcall
sbb
jno
sub
sbb
push
sbb
aad
icebp
xchg
cmp
jmp
mov
mov
bsf
dec
add
in
and
jmp
gs
jno
dec
lcall
add
xchg
lock
sbb
rolb
lea
jp
mov
jecxz
xchg
nop
movsl
push
xor
add
inc
pusha
jecxz
mov
loopne
and
lock
call
mov
push
out
aas
insb
lods
ljmp
hlt
lds
loopne
push
mov
jg
adc
and
cmp
mov
add
ja
orps
pop
mov
cmp
sar
push
es
jb
xor
mov
add
push
mov
sub
or
mov
es
cmp
mov
in
mov
shl
pop
add
test
or
incl
test
sbb
cld
pop
sub
jae
pop
or
xor
wbinvd
adc
sub
jg
clc
add
and
aas
aas
rorb
xor
or
sbb
out
push
pop
sbb
and
sub
push
push
cmp
sbb
pushl
cld
aas
xchg
mov
pop
cltd
sub
or
xor
or
out
mov
decl
sbb
add
xlat
decl
sbb
sbb
or
cld
push
adc
sbb
cmpxchg
xor
xchg
mov
sub
or
adc
ss
decl
cmp
dec
sbb
insb
adc
push
cmp
decl
divb
into
add
dec
or
xchg
adc
push
jnp
scas
call
jg
popf
lock
mov
xor
add
mov
out
add
add
add
mov
add
pushf
cmc
mov
dec
add
pop
arpl
sbb
mov
or
inc
add
adc
or
inc
xor
jb
jp
or
idiv
out
cli
das
adc
add
push
and
sub
cs
jg
xor
cmp
adc
xor
and
fildl
jle
mov
sbb
jle
sbb
or
or
aas
cld
cmpb
adc
je
ss
fldt
cs
mov
adc
or
adc
push
or
sub
decl
sbb
or
push
adc
push
aas
jl
mov
jns
xor
add
lock
adc
lock
decl
mov
mov
xor
push
ss
adc
fistpl
adc
pop
or
loop
xorl
cmp
sub
jb
fisttps
les
xor
pop
jg
sbb
adc
adc
add
dec
movsb
test
fstpt
inc
sbb
or
push
or
inc
adc
adc
inc
add
xor
ja
je
testb
loope
ljmp
sub
mov
and
idivl
push
push
push
mov
cli
mov
sub
sbb
clc
xor
mov
xchg
gs
mov
incl
sbb
push
add
adc
mov
sub
xor
outsb
cmp
add
pop
cmp
cmp
cs
or
mov
push
sahf
add
ss
sbb
or
sbb
xchg
pushl
inc
insb
xchg
ds
adc
incb
adc
push
or
add
decl
jg
or
or
push
xchg
or
mov
leave
sub
mov
adc
adc
jle
or
and
repnz
fbstp
out
mov
sbb
sti
inc
dec
sub
outsb
lock
add
sub
pushl
outsb
bound
sub
cld
dec
add
or
mov
or
sbb
inc
ljmp
hlt
dec
push
adc
adc
or
mov
das
xor
and
icebp
incl
movsb
push
addr16
push
aaa
cs
and
xchg
or
push
xchg
push
pop
lcall
adc
comiss
pop
fcoml
push
or
lock
in
notb
add
inc
call
dec
cmp
inc
or
adc
dec
or
add
lcall
push
sbb
outsl
mov
add
les
add
and
cli
in
testl
jo
mov
add
pushl
add
testl
ds
add
decl
or
std
add
pop
push
or
pusha
jg
xchg
dec
or
cwtl
mov
push
jbe
mov
stos
mulb
pop
sbb
es
push
add
mov
decl
dec
sarb
and
or
add
sub
push
lock
cwtl
call
and
mov
or
sub
mov
mov
insl
insl
inc
mov
sbb
shufps
inc
and
add
out
neg
ficomps
and
sbb
pop
jnp
aas
fnstcw
pushw
cmp
push
and
pushl
imul
add
dec
adc
mov
add
std
outsl
cmp
fldl
imul
aad
xchg
and
push
pop
jnp
aaa
shrd
std
mov
leave
arpl
outsl
data16
dec
mov
or
push
mov
add
jnp
xorb
lock
and
push
mov
push
imull
cmp
call
dec
and
inc
inc
mov
push
std
outsl
cli
mov
lahf
pop
mov
jbe
push
nop
xor
inc
sub
cmp
lcall
mov
pusha
lret
jle
mov
addr16
jae
and
or
xlat
mov
xor
cs
adc
insl
testb
pop
or
pop
push
mov
shrb
jno
add
push
jl
test
pushf
add
out
mov
iret
sbb
jno
or
decl
and
int
mov
fcompl
or
and
add
xor
outsl
mov
and
mov
and
jo
out
mov
rolb
ret
push
addl
gs
xor
adc
adc
add
fldenv
inc
and
popa
mov
jle
ss
jge
xor
clc
cmpb
das
clc
jg
dec
mov
sbb
cmpl
xchg
mov
shlb
into
mov
mov
out
cltd
push
mov
sbb
push
das
rol
call
jg
addl
gs
lock
xor
jecxz
stos
dec
or
push
inc
mov
incb
push
negb
aam
xor
jg
sbb
lret
cmp
xchg
lock
lods
mov
insb
push
arpl
cmp
ljmp
insl
xor
out
jnp
fldt
daa
inc
pop
add
cmp
add
jecxz
cld
add
mov
call
not
jg
push
adc
decl
out
cmp
sub
add
push
std
les
sbb
mov
mov
xchg
hlt
push
jle
or
mov
xor
scas
or
push
sub
andl
adc
testb
pop
inc
add
add
or
ss
js
sub
and
cli
cmp
ja
dec
or
inc
add
xchg
test
fcmovnb
ja
popa
sbb
out
sbb
pushl
pop
addb
dec
dec
movsl
int3
orb
add
or
fisubrs
jo
push
dec
add
call
daa
daa
adc
dec
and
iret
fistpl
rcr
hlt
pop
cld
or
push
push
and
adc
and
mov
decl
aam
and
push
add
pop
cmpl
movsb
xor
sti
loopne
incl
push
je
lahf
inc
sarb
sub
insb
jae
xchg
add
aam
imul
pop
outsb
inc
cs
xchg
dec
jb
out
rolb
xchg
decl
in
out
inc
xchg
inc
and
cmpsb
incl
nop
xchg
xor
std
dec
ret
data16
add
or
add
push
mov
in
jg
pusha
mov
lea
push
cld
call
int
jmp
nop
add
mov
pop
inc
add
incl
into
push
sub
adc
jb
mov
sarb
ficomps
jae
jne
inc
pop
dec
cmp
aam
inc
and
add
jmp
xor
push
mov
loopne
mov
pushl
clc
mov
jmp
leave
int3
inc
sbb
sbb
jne
jae
add
sbbl
roll
lea
std
sar
das
cmp
jbe
mov
inc
push
jne
jmp
cmpsb
orl
lods
add
icebp
add
jmp
or
pop
mov
mov
push
sub
cmp
ja
cmpb
jne
mov
incl
add
dec
rol
xchg
sub
sub
ret
ja
call
fsub
fnstcw
pusha
jbe
xchg
add
or
fisubrs
dec
lea
repz
ds
xchg
mov
dec
sti
mov
cmp
mov
push
dec
repnz
push
sub
xor
add
loope
xor
cmp
shrb
lea
adc
ss
fcos
and
ja
add
mov
loopne
loopne
jmp
and
in
jns
ss
add
mov
pop
inc
or
cmc
push
inc
incl
jle
call
lea
jg
pusha
sub
clc
mov
pop
popa
lea
push
cmp
jne
sub
jmp
inc
popa
or
dec
push
ds
mov
sub
jns
push
sub
call
pop
ja
or
clc
xor
add
sarl
cwtl
or
add
rcll
rclb
cld
mov
ficoml
fwait
ds
add
push
add
pop
dec
int3
aaa
fnstsw
roll
mov
push
fs
imul
add
or
add
xor
mov
aas
mov
mov
cmovne
add
sahf
rcrb
or
pop
inc
ss
cmpsw
adc
scas
insl
fstpt
adc
inc
sub
popa
xor
jnp
and
flds
sub
add
inc
xchg
inc
xchg
ja
push
ja
aas
xor
aaa
and
pop
test
inc
jnp
cli
and
add
mov
xchg
adc
sub
scas
pop
and
ja
sub
pop
or
mov
push
push
out
rorb
add
and
lret
fs
in
adc
orl
imul
arpl
adc
pop
insb
out
scas
dec
sar
outsb
dec
sbb
push
push
xor
push
lcall
daa
or
jo
pop
mov
inc
adc
push
movsb
and
sbb
cmp
or
test
and
or
xchg
pop
hlt
ljmp
pop
xor
mov
repnz
enter
add
xor
fwait
in
cs
push
or
mov
aas
cmovbe
push
dec
inc
dec
xor
xor
leave
mov
push
dec
adc
add
fucomi
push
push
xor
sbb
jle
cmp
jne
mov
cltd
int
arpl
insb
sahf
xchg
sbb
in
and
les
push
sbb
add
add
fidivrs
or
jl
mov
cmp
addl
mov
cmp
mov
mov
and
in
stc
cmp
dec
in
push
idiv
pop
cmpsb
ret
jns
push
sub
call
lods
xchg
add
sbb
subb
arpl
mov
xor
fcoml
adc
lss
and
xchg
rorl
jne
movsl
outsl
sbb
fildl
and
pop
add
icebp
xor
inc
add
roll
lahf
mov
movsb
lods
push
add
or
lock
and
pop
jmp
orl
test
add
icebp
out
xor
push
enter
or
cmp
lock
push
jmp
clc
jp
out
inc
sbb
scas
cmp
cmp
cmp
adc
fmull
or
out
pop
aad
aaa
in
add
pop
jno
pop
xchg
fisubrl
mov
jb
pop
data16
push
andb
add
push
mov
cmc
lret
cmp
jne
add
jno
sarb
add
dec
imul
outsb
lods
sbb
push
arpl
sahf
add
jbe
sarb
add
pop
inc
mov
mov
or
push
adc
add
xchg
iret
lock
enter
or
push
mov
negb
add
arpl
add
add
js,pn
outsl
jl
dec
sbb
jo
push
push
xchg
add
jae,pt
inc
decl
rcr
fidivs
add
shlb
adc
jp
or
push
outsb
inc
mov
push
push
popa
mov
adc
outsl
cmp
nop
add
out
add
sub
add
loopne
push
xor
mov
add
push
inc
xchg
inc
or
ljmp
mov
adc
add
adc
rorb
add
pop
adc
adc
das
add
add
mov
fwait
sbb
stos
jb
sub
out
dec
ljmp
loopne
jg
cs
jae
ja
fiadds
add
push
adc
adc
imul
add
cmp
cmp
lret
cmpb
add
cmpsb
mov
and
mov
adc
xor
cmp
mov
pusha
daa
hlt
call
enter
cwtl
out
adc
jge
sub
or
outsb
adc
adc
add
insb
mov
add
movsb
adc
adc
xchg
jae
loopne
sti
das
stos
cld
add
adc
add
adc
dec
aaa
xor
subb
push
pushl
loopne
inc
aas
mov
push
xor
sbb
cmp
jg
inc
fdivl
inc
sub
in
dec
cmp
push
add
xor
ljmp
lcall
enter
sbb
pop
pusha
clc
outsl
sbb
sbb
sbb
dec
pop
push
and
sub
cmp
pop
pop
aad
loope
jge
sub
lock
inc
jg
xorb
and
and
adc
jns
add
adc
add
mov
push
pop
jmp
dec
cmp
js
scas
sub
insb
add
pop
cli
push
sahf
inc
jl
jp
rolb
push
insb
sub
lcall
outsb
dec
pop
inc
dec
mov
sbb
repnz
pop
cmp
lock
sub
inc
jo
popa
pushf
add
and
jl
push
clc
fbld
adc
ss
arpl
stos
and
jle
das
jl
adc
push
shlb
insl
inc
fs
fistps
mov
outsb
sub
xor
jb
je
and
inc
pushl
cld
ljmp
fs
mov
jno
sbb
add
jge
jnp
pushl
sarb
jge
lea
lock
pop
fsubrs
mov
mov
ljmp
dec
mov
pop
xchg
pop
test
lods
lea
shll
mov
popf
adc
je,pt
or
lea
dec
ljmp
rcrl
dec
mov
xchg
and
adc
mov
push
stos
je
sbb
mov
adc
jp
clc
incl
sbbb
dec
mov
or
jne
push
add
push
jnp
jle
pop
cmp
cmpsb
push
mov
inc
aam
xor
mov
data16
mov
jbe
scas
rolb
xor
loop
rcrb
mov
add
roll
lock
movsb
push
test
repnz
xchg
testb
jb
and
cs
cmp
mov
jge
incl
and
sub
add
je
pop
mov
mov
push
popa
and
adc
pop
icebp
cmp
pop
pop
pop
arpl
adc
outsb
adcl
adc
lods
ljmp
inc
adc
xchg
bound
cmpsl
dec
mov
imulb
xor
not
cltd
pusha
lods
lock
xchg
lods
add
popf
popa
lods
xorl
pop
les
jg
adc
add
lret
movsl
cmp
cmpsb
ret
out
xchg
int
and
ljmp
insl
fsubrs
insl
or
add
int
dec
push
or
or
sbb
or
jl
cmp
lods
popf
mov
xchg
loop
insb
push
sahf
jno
add
add
mov
sarl
mov
xor
mov
xorb
movsb
push
lcall
xor
icebp
adcl
roll
push
mov
hlt
mov
mov
jecxz
in
out
jno
shrl
lock
fsubrs
sub
in
mov
jecxz
mov
movsb
ret
in
or
ja
push
out
xchg
push
add
add
int
out
xchg
push
xchg
cmp
dec
int3
jg
aaa
cld
arpl
lods
leave
xor
sarl
xor
pop
rcrl
add
mov
ljmp
in
push
xchg
stos
aam
inc
fidivrl
mov
push
mov
sbb
and
pushf
jae
in
push
lcall
popf
and
mov
stos
xchg
xor
sub
or
rcrl
mov
or
add
call
jb
pusha
sbb
mov
push
call
decl
jecxz
shr
cmpsl
sub
sbb
add
mov
sbb
loopne
sub
out
push
xor
xor
mov
xor
mov
pop
ret
jecxz
aam
dec
or
jbe
add
pop
mov
rcrl
cmp
ss
das
mov
data16
mov
into
add
in
jb
shrl
and
add
cmp
sub
aad
push
icebp
insl
jg
in
mov
pushl
fdiv
enter
xchg
mov
and
pop
dec
dec
incl
inc
mov
and
shlb
mov
shll
dec
divb
jne
outsb
mov
movsb
fwait
mov
addr16
aas
jp
sbb
sub
and
pop
lods
loop
sub
cmp
xor
call
pusha
sub
loope
std
dec
or
negl
dec
jns
in
decl
inc
cli
rcll
movsb
inc
movsl
sub
jp
sbb
movsb
into
ds
cld
lcall
out
inc
rclb
and
leave
pop
fstps
pop
mov
mov
decl
and
ja
fstps
insl
hlt
pop
pop
cmp
mov
insl
es
push
insl
popa
insl
jbe
push
add
mov
ficoml
clc
jno
mov
int
dec
and
and
sub
insl
dec
jge
pop
jns
pushl
pop
jg
and
in
nop
mov
jge
out
xlat
cmp
mov
int3
aas
pop
adc
xchg
jb
adc
sahf
aaa
addb
mov
incl
repz
jecxz
sbb
add
mov
xchg
sbb
jge
call
std
jnp
jge
mov
jo
repz
jge
imul
push
pop
push
xchg
mov
dec
call
loope
adc
add
add
push
adc
mov
shrl
shrb
xchg
mov
decl
sbb
sub
mov
in
rcl
pop
cld
jp
jo
push
pop
imul
test
fwait
jecxz
mov
pop
or
xor
mov
xchg
jle
es
mov
jb
cwtl
mov
hlt
in
sub
inc
lock
xlat
xor
call
cld
push
inc
and
mov
sub
and
mov
jg
mov
pop
insb
test
clc
xor
insl
divl
dec
jge
sbb
or
incl
sbb
dec
push
ret
add
cmc
imul
and
ljmp
cmp
incl
test
push
ljmp
cmp
mov
mov
std
pop
mov
enter
cltd
int
int
movb
flds
repz
ljmp
adc
or
inc
aaa
loop
dec
add
into
sbb
xor
pusha
add
incl
mov
cli
inc
and
add
mov
push
loop
mov
inc
sub
imul
jo
nop
or
loop
lock
int
frstor
call
je
frstor
pop
mov
in
fdivr
lcall
in
mov
cmp
sub
push
out
shlb
clc
push
stc
lcall
out
sub
sbb
sar
cmp
enter
mov
jge
pop
outsb
negb
sti
test
dec
mov
popf
out
lcall
cmp
cmp
adc
inc
lret
cmp
inc
ret
mov
xor
and
stc
repnz
enter
or
movsl
subb
or
inc
repz
gs
push
std
pusha
idiv
and
xchg
jl
gs
jg
pop
into
aas
xor
stos
xchg
xorl
outsl
dec
adc
ja
decl
loope
sbb
lds
les
out
cs
incl
cmp
cmp
repz
push
pop
jge
jge
dec
cli
add
adc
lods
mov
sub
sbb
inc
sar
decl
sub
xchg
loope
sbb
inc
dec
add
xor
or
pop
adcb
push
pop
add
sub
std
cmpsl
fstl
into
das
jp
add
in
mov
push
shr
push
sub
sub
das
rcrb
sbb
iret
mov
pushl
xor
popf
or
or
mov
imul
icebp
mov
and
add
or
jmp
cmp
mov
dec
cwtl
adc
jecxz
icebp
idivb
add
nop
testl
in
pop
pusha
insb
cmp
pop
hlt
fucomip
pop
xor
cmp
in
dec
add
pop
sbb
cmp
ljmp
jg
push
add
decl
sub
inc
out
dec
into
cmp
dec
decb
add
jge
sbb
jecxz
mov
mov
lcall
pop
cli
jmp
dec
and
mov
mov
pop
pop
test
push
pop
pop
jp
hlt
ljmp
out
jne
mov
mov
js
or
dec
loopne
mov
incl
push
add
sub
cmpsl
pop
ss
cmp
js
pop
or
cs
cli
add
sbb
sub
cwtl
stc
pop
pushl
xor
mulb
notl
jae
push
add
push
sti
ja
mov
or
das
gs
arpl
xchg
xor
pop
dec
hlt
add
push
je
ss
jl
dec
push
jbe
mov
pop
sbb
rolb
sbb
jge
pop
bound
xchg
clc
cmp
push
adc
sbb
jle
outsl
cmp
add
std
push
loopne
adc
js
movsb
mov
and
adc
inc
mov
sbb
pop
and
cld
sti
mov
jae
sti
add
mov
mov
adc
xchg
add
outsb
sub
pop
cmpsb
sub
shll
gs
aas
adc
mov
push
test
imulb
shll
shl
mov
adc
push
push
lcall
push
lock
pop
js
and
inc
cmp
outsl
loop
dec
sub
push
sub
add
mov
xchg
push
mov
or
enter
inc
push
leave
sbb
mov
ret
jbe
add
pushf
xchg
sub
mov
pop
lock
ljmp
popa
stos
and
add
sub
add
cwtl
fstps
lds
cwtl
or
push
adc
push
fsubr
sub
int
mov
js
sbb
gs
push
fs
jb
add
xor
mov
hlt
data16
jno
movsl
fs
xor
mov
push
xchg
out
imul
mov
mov
add
and
dec
movsb
ljmp
les
sahf
push
dec
outsl
and
sbb
nop
jmp
jg
and
xchg
clc
add
xchg
pop
jp
in
and
adc
xchg
mov
push
sbb
add
insb
or
xor
or
sub
sub
scas
rol
icebp
das
and
movups
popa
sti
push
fdivr
jg
xchg
and
push
std
incl
inc
bound
mov
loopne
std
es
push
ss
xchg
cmp
xchg
push
jp
gs
cs
cld
jg
or
jl
push
inc
push
xor
pop
jae
hlt
mov
ds
inc
xor
out
arpl
add
push
lock
push
jp
cmp
dec
jb
addr16
pop
fs
in
mov
in
jb
js
push
movsb
jle
or
and
nop
insl
incl
mov
gs
js
mov
icebp
repnz
aaa
or
adc
push
ljmp
pop
es
dec
pop
pop
daa
jmp
push
out
stos
ljmp
stos
jg
xchg
cmpsb
pop
test
outsb
sbb
jmp
dec
lock
pop
mov
dec
adc
orl
and
scas
xor
mov
mov
dec
cmp
push
jp
shrb
fldt
ret
push
sub
bound
dec
mov
jae
cld
add
dec
inc
outsb
jns
jge
jae
add
gs
insb
mov
dec
sbb
mov
mov
jge
je
cwtl
mov
jle
pop
add
fcomip
jg
adc
pop
clc
add
adcl
loopne
add
das
jmp
mov
push
test
jbe
js
jbe
cld
rolb
ja
mov
dec
dec
cld
or
mov
mov
pop
push
data16
push
outsl
pusha
inc
push
pusha
jge
fsubl
outsl
dec
push
dec
jg
fisttpl
aaa
bound
inc
outsb
sbbl
sbb
jmp
and
sub
cli
push
andb
add
mov
inc
xor
std
rorb
movsl
outsb
add
jg
pop
xor
decl
lcall
and
dec
add
xor
or
dec
clc
sbb
mov
sti
mov
ljmp
dec
dec
jno
pop
nop
arpl
sti
sub
rcll
lods
clc
ljmp
arpl
mov
popf
mov
notl
mov
add
mov
dec
lods
pop
cmpsl
sbb
xchg
js
test
add
ljmp
and
inc
inc
sbb
cmpsb
mov
lods
movsl
std
sbb
push
pop
push
pop
or
push
out
mov
orb
mov
loopne
sub
ljmp
jle
packsswb
cmp
call
ss
jo
aam
and
pop
push
lret
fwait
push
sbb
ret
clc
push
xor
es
and
mov
call
in
je
out
or
or
mov
popf
les
pop
aad
and
scas
and
xor
mov
std
sub
gs
cmp
bound
and
lcall
test
and
fs
dec
addb
or
cmc
xor
push
test
sbb
cmp
call
std
jae
popf
jp
sub
insb
xchg
xor
and
mov
int
test
jg
mov
push
or
adc
les
and
mov
or
mov
push
mov
es
lcall
in
addr16
jne
adc
push
jecxz
jp
repnz
fcmove
add
sub
arpl
pusha
addr16
xor
dec
and
pop
lock
mov
jnp
inc
xchg
inc
push
and
sub
jno
mov
loope
roll
jb
or
sarb
mov
pop
cmp
out
dec
gs
xor
das
popw
pop
std
dec
inc
orl
fbstp
in
mov
in
jmp
das
loop
out
in
mov
adc
jo
add
sahf
orl
es
aaa
sbb
out
dec
xchg
arpl
sbb
pop
mov
int
pushf
mov
mov
push
shl
inc
cltd
jb
loope
and
jo
adc
insb
mulb
or
loope
sbb
pusha
and
loopne
mov
repz
adcl
subb
push
adc
dec
add
shl
inc
add
outsb
jo
push
inc
mov
push
lcall
dec
xor
ret
push
dec
jb,pt
clc
pushl
sbb
out
sub
loop
jecxz
stos
sbb
and
add
mov
fwait
adc
add
adc
push
aam
and
push
add
xlat
sub
push
sub
push
outsb
roll
daa
pop
sbb
add
test
push
or
lock
push
insl
inc
and
push
pop
sub
add
sbb
mov
xchg
clc
inc
cmp
adc
push
and
inc
add
iret
mov
mov
ds
arpl
sbb
repz
add
add
sub
fnstenv
sub
and
jp
aam
fstl
pusha
outsl
cmpsl
inc
stos
mov
mov
pushw
arpl
add
insl
jmp
lods
xor
cld
push
bnd
mov
push
clc
insb
or
push
cmp
addr16
add
outsl
out
inc
mov
bound
push
ds
lret
or
inc
adc
popa
mov
fstpt
mull
ss
adc
add
imul
mov
aaa
add
xor
pushl
ljmp
repnz
inc
stos
or
inc
adc
add
addl
ljmp
daa
and
jbe
je
adc
icebp
or
add
stos
nop
jnp,pn
shll
pop
dec
cltd
adc
into
cld
ljmp
shlb
adc
adc
adc
xchg
outsb
mov
adc
adc
and
mov
loopne
outsl
cli
adc
add
adc
xor
jmp
push
push
pop
or
adc
sub
and
adc
sbb
rorb
adc
stos
ljmp
incl
and
dec
and
or
adc
jae
adc
shrl
xor
xchg
and
inc
insl
push
mov
scas
adc
jp
sbb
and
push
xchg
adc
clc
add
mov
cli
add
and
hlt
lcall
cmp
test
icebp
aaa
mov
xor
fs
add
xor
add
dec
insl
adc
jo
pop
jmp
lods
inc
mov
inc
push
aam
subb
mov
pop
fs
stos
cmp
pop
cmp
xor
and
das
push
inc
inc
and
loope
push
add
and
xor
xor
sbb
xor
adc
adc
mov
inc
xor
cwtl
add
adc
inc
push
xor
nop
xor
pop
sbb
incl
pop
dec
pop
xchg
add
aam
adc
jbe
test
cmpsb
pop
sbb
add
mov
stos
pop
sbb
push
cs
and
cld
pop
or
cli
daa
push
jl
jmp
dec
mov
sub
daa
fisttpl
inc
and
jmp
sbb
in
add
jno
mov
adc
sub
push
xor
xor
add
decl
sbb
rclb
and
or
daa
xchg
and
or
roll
xor
dec
aam
aas
cmp
cwtl
pop
mov
inc
sub
test
sub
add
and
jle
scas
inc
call
xor
outsl
xor
xchg
add
jne
xor
pop
ja
push
pop
jo
mov
mov
lret
or
xchg
adc
xor
lock
insl
cmp
and
test
in
jno
mov
push
mov
add
jge
add
dec
lea
mull
out
sbb
test
dec
inc
stos
mov
and
push
sub
push
aad
into
push
clc
jl
in
fadds
sub
out
notb
jb
xorb
inc
xchg
test
test
sar
mov
sub
test
jnp
inc
jl
sbb
fstl
xor
mov
ja
mov
push
popf
sbb
and
mov
inc
fsubs
inc
insb
add
popa
movb
xchg
dec
ret
sbb
pop
int3
popf
push
push
dec
incl
and
inc
pop
cmpsb
adcb
mov
mov
js
mov
test
outsl
pop
out
mov
decl
xchg
and
insl
imul
mov
mov
arpl
mov
mov
adc
rcrl
adc
mov
mov
addr16
xchg
and
clc
dec
pop
cmp
subl
add
pop
into
fbstp
int3
or
sub
push
out
dec
adc
decl
add
inc
mov
add
mov
sbb
jmp
pop
push
adc
nop
add
mov
ret
sub
mov
adc
jb
mov
insl
cmpsb
fdivrs
xor
outsl
xchg
out
push
mov
sbb
add
sub
inc
dec
repnz
cltd
ljmp
sar
or
push
fadds
lods
mov
mov
add
adc
lcall
incb
jb
int3
dec
add
outsl
xor
ja
xchg
mov
mulb
inc
sar
cld
xchg
push
mov
movsl
fs
jb
pusha
and
add
adc
xlat
adc
sbb
xor
mov
jp
xchg
jb
push
in
cwtl
jmp
idivl
xor
push
jp
clc
inc
xchg
in
xchg
push
mov
mov
adc
inc
xchg
std
cmp
ljmp
mov
jbe
in
push
testl
hlt
cmpsl
pushf
or
scas
inc
xchg
cli
adc
or
adc
lcall
add
loopne
rclb
leave
and
fldl
std
cmp
cmc
in
aaa
cs
fldt
stos
add
lcall
adc
mov
outsl
add
xchg
and
push
les
rolb
stos
and
lock
cmp
xchg
and
sbb
sub
hlt
cmc
inc
mov
movsb
xor
or
push
xchg
push
rol
pushl
fs
cwtl
jae
aad
push
xor
loope
fnstcw
arpl
lods
inc
add
pop
and
and
jno
popa
sbb
out
jno
sti
fistps
into
xor
jb
and
push
into
jmp
xor
cmc
jp
fildll
pushl
dec
add
orb
add
push
loope
cltd
mov
mov
shrl
rcll
adc
mov
pop
cmp
sbb
stos
pop
sbb
mov
clc
mov
jg
and
inc
pop
ret
decb
lea
xchg
mov
mov
mov
dec
sub
cmpsb
int
xorb
pop
dec
inc
daa
pop
pop
push
fwait
mov
mov
lods
ja
sbb
mul
nop
sbb
cmp
cmp
arpl
daa
rep
clc
pushl
push
aam
inc
dec
inc
in
pop
roll
mov
movb
lcall
decb
out
lds
outsb
mov
dec
cs
add
shrl
xchg
test
dec
enter
andb
outsl
sbb
sbb
xchg
pop
mov
and
mov
cs
dec
sbb
pop
enter
arpl
xlat
pop
xor
push
insb
loope
sbb
clc
inc
pop
loopne
mov
roll
push
les
nop
inc
adc
push
pop
insl
ds
jae
sub
xchg
insb
shll
add
xchg
and
enter
shll
mov
lcall
std
sbb
rclb
lcall
jae
adc
and
loop
rclb
add
xchg
push
push
dec
loope
in
jg
pop
fiadds
js
adcb
adc
xor
scas
cli
stos
push
ret
adc
push
push
jnp
and
jg
ljmp
pop
dec
add
mov
push
lea
jecxz
not
fdivr
pop
and
pop
in
pop
cld
nop
adc
xor
sbb
in
ljmp
cld
push
mov
int
jbe
adc
fisubl
and
lea
lock
repnz
add
arpl
roll
xor
jle
inc
and
nop
aaa
sbb
testb
jmp
and
les
jg
push
inc
add
push
lcall
popf
mov
and
push
mov
push
es
adc
outsb
push
sar
popf
mov
dec
jb
jo
call
mov
stos
jle
cmp
popf
xor
loope
xchg
das
xchg
mov
xchg
dec
test
sub
cwtl
xchg
add
dec
imul
lods
mov
jl
mov
adc
shlb
mov
jge
add
jge
sbbb
pop
cmp
shl
jg
mov
add
loope
rcll
mov
ja
sbb
decl
fs
roll
and
inc
loope
mov
add
mov
rol
cmp
inc
incl
jns
in
das
fwait
cmpb
mov
mov
or
sbb
push
sarl
in
inc
jg
lcall
stc
cli
push
test
imul
shlb
pop
pop
mov
test
orl
mov
push
pop
popf
aam
xchg
cmpsl
jle
mov
xchg
fs
aam
mov
int
popf
and
jnp
int
xchg
mov
popf
stos
fwait
xor
inc
nop
icebp
fs
push
jmp
cmp
jge
xchg
xchg
addr16
jecxz
sub
incl
add
jns
cmp
xor
add
jl
cmp
in
mov
call
pop
jecxz
sti
fstl
in
sbb
andb
xlat
and
adcl
adc
pushl
jl
pop
rclb
and
jo
fs
mov
fmuls
test
enter
adc
cmc
add
nop
popa
push
ss
insl
xor
mov
shl
aas
lret
add
lds
mov
mov
push
inc
mov
loope
dec
add
and
add
mov
adc
mov
in
mov
xchg
or
adc
xlat
repnz
cmp
fwait
arpl
pop
mov
and
or
std
cmp
push
call
outsl
and
push
cmp
jbe
aas
pop
sub
sbb
movsb
cmpsl
push
test
jge
pop
stos
and
je
outsb
inc
stos
and
add
mov
adc
jle
stos
mov
repnz
or
ret
dec
adc
push
mov
pop
mov
add
out
jae
mov
stos
jae
mov
inc
outsb
clc
ljmp
mov
shrl
inc
idivb
sbb
lods
call
in
in
incl
adc
and
and
sub
sbb
xor
ljmp
sub
sbb
fisttpll
xchg
lock
mov
mov
std
add
cmovo
add
out
sbb
rcll
sub
rcrb
push
push
jo
mov
jl
and
jp
pop
sar
fists
add
add
add
rorl
sbb
pop
adc
cs
pop
or
incl
jns
inc
xorb
jne
sbb
cmp
mov
les
inc
inc
mov
jb
adc
lods
repz
ljmp
pop
xor
in
lret
movsl
mov
popa
cmpsb
popa
mov
sub
ljmp
popa
jo
jecxz
jae
inc
int3
pop
pop
or
xor
jne
leave
hlt
in
sub
mov
ljmp
enter
adc
jne
fadds
adc
decl
orl
repz
xchg
push
sub
loopne
arpl
mov
decl
ja
xchg
or
add
mov
fnsave
sbb
incl
mov
ret
fistps
insl
xchg
inc
add
test
stc
test
inc
or
mov
scas
jo
add
xor
mov
xchg
arpl
mov
shrl
loopne
mov
pop
mov
mov
or
int3
mov
xor
add
filds
sbb
push
popa
into
and
lret
mov
mov
loopne
nop
adc
mov
add
cs
lcall
cmc
push
rcrl
push
mov
das
jge
push
dec
jns
loope
stos
decb
shl
xor
scas
jge
xor
push
sub
shll
shr
mov
out
xchg
adc
jbe
push
cld
sbb
dec
mov
push
repnz
or
jg
test
inc
add
clc
xchg
xor
jge
add
sbb
push
fwait
scas
and
adc
sub
cld
add
cmpl
inc
call
cmp
push
push
inc
pop
hlt
push
xor
cmp
sti
in
fsub
into
or
add
add
popf
mov
pop
sub
das
clc
jg
jl
push
popf
mov
imul
int3
cmc
nop
xor
lcall
sbb
bound
ror
out
or
icebp
out
push
daa
aad
cld
mov
add
jbe
lock
lcall
xor
mov
cmp
cli
inc
jae
inc
scas
xor
mov
leave
movsb
mov
add
test
or
and
pushl
mov
ss
xchg
or
les
xor
test
adc
ljmp
dec
add
push
push
lods
xor
add
ret
mov
jns
mov
mov
aam
inc
addb
icebp
clc
mov
and
sbb
jle
rcll
jle
imul
xchg
pop
out
imul
xor
pop
dec
fldenv
dec
and
in
adc
or
gs
cmp
data16
out
mov
push
stos
gs
mov
inc
jp
inc
xchg
lcall
icebp
mov
xchg
push
je
and
add
xor
mov
mov
mov
lock
insl
jg
or
insb
lea
dec
mov
and
ljmp
push
movsb
adc
and
icebp
jb
adc
and
cmp
adc
add
or
lret
add
and
xchg
push
push
outsb
or
shl
xor
in
or
push
inc
sbb
fldl
fldcw
xor
mov
je
das
clc
sub
fldl
icebp
and
cmp
cld
mov
add
andb
xchg
orl
jge
mov
mov
xchg
lods
mov
repz
jmp
dec
fsubs
and
push
add
pop
sub
cli
sbb
cld
mov
enter
mov
sub
jns
fimull
fnsave
mov
subb
dec
inc
pop
addl
and
jg
lods
dec
in
xor
imul
adc
arpl
push
mov
jmp
adc
mov
cmpsl
pushf
stos
mov
jecxz
add
out
cli
jmp
mov
roll
sub
sub
xchg
gs
push
xor
push
sub
sbb
stos
dec
dec
inc
pop
test
lcall
pop
les
xchg
mov
push
xor
and
loopne
aam
jmp
mov
in
ss
testb
mov
adc
std
or
jmp
sub
pushl
arpl
sub
xor
xchg
pusha
andb
in
incl
mov
jo
sub
push
jb
out
rcll
ret
cmp
das
int3
inc
push
shlb
inc
pushf
mov
in
jne
and
dec
add
in
fcmovnbe
std
roll
jle
test
push
subl
in
xchg
add
mov
push
xchg
test
add
jne
or
xor
jnp
cmp
or
ljmp
sbb
fstp
add
dec
add
or
inc
adc
les
pop
outsb
push
xor
add
loope
rcrl
add
ja
mov
inc
jbe
jne
adc
mov
xor
inc
pop
pop
add
add
ss
pop
xchg
mov
bnd
scas
lcall
ljmp
imul
outsl
xchg
add
xor
pusha
jnp
mov
scas
repnz
push
stos
add
stos
pusha
data16
bound
mov
add
xor
stos
add
fidivrl
out
std
jbe
cli
adc
xchg
dec
cmp
dec
jae
push
mov
cmpsl
add
add
pusha
imul
mov
pop
push
jmp
jl
stos
mov
or
dec
or
and
addr16
add
add
testb
dec
adc
add
das
in
adc
sbb
jecxz
and
add
loopne
adc
cs
push
dec
je
adc
jg
or
test
xor
add
cwtl
add
sbb
add
aaa
mov
mov
add
outsl
aaa
mov
mov
push
push
push
inc
adc
jp
add
or
mov
xchg
jne
orb
das
clc
outsl
jp,pt
adc
js
adc
xchg
sbb
sbb
push
or
add
addr16
sbb
bound
aam
repnz
add
jmp
fldcw
sub
add
pop
and
adc
adc
jle
sub
and
mov
adc
or
adc
cwtl
add
pop
sbb
pop
lock
push
jp
loope
add
or
cmp
insl
pusha
dec
and
imul
mov
arpl
mov
ret
dec
pop
push
or
sub
mov
lcall
jne
lea
mov
dec
mov
and
lock
andl
dec
adc
inc
lcall
clc
xchg
mov
adc
lret
mov
jns
fistl
in
js
sti
add
hlt
pop
or
and
popa
xor
std
xor
xor
inc
pop
pop
or
cli
pop
std
sub
xor
ds
pop
jl
inc
pop
inc
pop
xor
lcall
mov
add
jo
add
sbb
xor
jo
pop
and
push
dec
pusha
sub
xor
push
dec
sub
pop
dec
clc
ljmp
lcall
cmp
xor
xor
adc
cld
fists
cmp
push
insb
or
clc
mov
test
mov
adc
hlt
mov
jne
adc
sub
and
pop
xor
inc
js
cmp
loope
lcall
iret
insl
adc
and
jae
push
scas
cmp
inc
add
hlt
sub
jae
sbb
lods
cli
add
lods
mov
nop
push
jno
add
push
loop
push
xor
pop
jge
adc
push
data16
add
jno
adc
push
adc
push
fbld
or
pop
xor
dec
adc
cmp
scas
adc
cmp
lret
cmp
push
test
ja
inc
lahf
cmp
xor
loopne
divb
and
mov
notl
inc
scas
or
cmp
mov
movsl
xor
jo
or
jo
stos
addb
insl
inc
lcall
ror
dec
sbb
out
or
adc
add
pushl
std
incl
gs
mov
mov
aam
add
push
outsl
or
adc
jb
mov
fisubrs
incl
imul
jo
sbb
push
or
mov
fwait
push
mov
add
sbb
sub
sbb
ljmp
and
and
cmp
mov
push
add
add
sbb
aaa
jp
call
popa
or
jne
adc
add
and
mov
loopne
sub
lds
clc
cli
cmpl
testb
add
lods
adc
pop
std
push
lods
cmp
and
in
xor
fs
fwait
cltd
jmp
pusha
fcoms
push
adc
les
pusha
andb
aas
cli
loop
push
mov
rolb
popa
jo
push
call
cld
int
adc
sub
bound
adc
mov
scas
inc
push
xchg
cmp
popa
push
je
hlt
arpl
gs
sub
sti
add
adc
movsl
faddl
cld
adc
adc
fisttpll
aam
pop
xor
call
pop
mov
shll
call
push
lret
cwtl
shll
adc
jmp
fnstsw
in
jb
andb
dec
imul
loop
test
int3
mov
jno
add
out
idiv
cmpsb
xor
sbb
repnz
std
push
std
mov
inc
fiadds
subl
iret
std
das
or
std
sti
std
mull
xor
mov
adc
and
loopne
rcr
imul
adc
incl
into
test
daa
cmpsl
or
add
push
jns
call
cld
jg
cld
or
push
xlat
cs
or
mov
int
adcb
dec
adc
push
push
in
xor
stc
mov
sub
pop
push
mov
add
sbb
jge
jge
ret
add
ja
mov
insb
inc
jno
push
sub
fs
cmp
sub
stos
ret
outsb
ljmp
inc
mov
xlat
push
pop
dec
cmpb
je
es
push
mov
inc
lods
mov
mov
call
push
jno
sbb
dec
sbb
std
shr
cmp
pushf
or
incl
jecxz
std
pushf
cmp
mov
sub
inc
or
jno
mov
inc
mov
and
pop
in
rcll
incl
arpl
mov
mov
adc
mov
out
insl
push
pusha
addl
mov
repz
mov
inc
out
adc
dec
inc
and
mov
sbb
push
pop
adc
or
aam
and
cmpl
jne
xchg
dec
cmp
bound
adc
mov
lods
fistpll
pushf
mov
and
cs
sbb
pushl
add
mov
dec
test
sahf
inc
add
cmpsb
jno
or
pop
lds
mov
lock
inc
and
insl
and
cmp
mov
mov
loope
add
nop
shl
pop
sbb
jp
or
dec
and
adc
mov
push
stos
gs
jo
cli
rcrl
cmp
js
pop
mov
mov
sbb
pushl
add
ds
sbb
dec
add
xchg
jb
insl
bound
fs
orb
ficomps
add
add
mov
imulb
jge
jge
mov
and
add
incl
popf
push
sti
mov
adc
ret
adc
and
and
and
pop
inc
xchg
arpl
mov
aad
decl
mov
popa
push
add
aaa
dec
inc
inc
push
and
xchg
mov
adc
std
and
jo
mov
sub
inc
mov
mov
add
mov
lock
popa
push
and
inc
mov
in
xchg
pop
cld
push
std
lea
pop
rclb
stos
inc
jns
aad
mov
push
ljmp
mov
adc
cwtl
insl
test
and
mov
pop
and
pop
dec
push
popa
lods
cltd
pop
and
inc
cs
and
lcall
push
test
inc
ret
das
scas
add
ret
jbe
inc
add
insb
mov
sub
push
imul
push
pop
adc
or
call
icebp
imul
inc
outsl
mov
push
cmp
cmp
cld
arpl
jb
inc
pusha
pop
mov
imul
xlat
incl
popl
jb
add
add
add
and
mov
add
add
add
pop
jb
loop
in
out
movsb
call
jge
inc
push
scas
add
imul
les
add
xchg
jae
xor
sbb
push
adc
ja
adc
mov
test
test
jae
add
stos
adc
imul
decl
adc
ja
adc
add
jl
adc
and
push
add
rclb
add
mov
push
push
adc
fistps
and
mov
sub
fdivrl
rcrl
jo
scas
xchg
adc
pop
push
mov
popa
adc
mov
and
cld
bound
xchg
test
mov
inc
and
jne
push
mov
or
insb
dec
mov
sbb
mulb
and
inc
xchg
sub
pop
bound
aas
and
lods
wrmsr
jg
mov
add
cmp
jp
and
lcall
sbb
jnp
sub
sbb
sbb
adc
push
xor
jno
cmp
add
or
xor
cmp
inc
cmp
jo
adc
add
or
add
lret
cmp
and
or
add
hlt
and
add
add
ret
mov
and
inc
xchg
add
mov
adc
adc
in
in
jge
das
cmp
test
add
jbe
insb
mov
add
sbb
add
incl
mov
inc
imul
mov
jg
test
das
and
inc
push
insb
add
jg
aaa
lods
push
and
sti
add
sub
sub
std
das
fdivr
loopne
adc
or
cs
push
jbe
and
pop
inc
pop
mov
inc
pop
lock
jo
shlb
cld
add
and
mov
add
or
cmp
mov
dec
arpl
pop
ret
sbb
mov
rolw
les
fadds
mov
insl
loope
pop
movsb
and
adc
andb
daa
fs
dec
adc
sub
incl
and
jge
outsb
or
ss
or
xchg
and
fldt
jl
inc
xchg
pop
cli
and
push
jmp
inc
outsb
sbb
mov
lds
push
jge
sub
inc
jne
into
popa
sbb
fisttps
and
add
mov
shrb
popa
sahf
lcall
mov
lock
call
shrl
lea
add
inc
dec
rcll
or
pop
push
insl
or
fisubrs
popl
or
hlt
stos
mov
add
jp
lods
push
mov
add
pop
push
fwait
lea
popf
es
and
cmp
and
cmpsb
push
sbb
push
jne
adc
add
push
aam
jne
and
mov
push
xchg
jne
mov
dec
in
scas
adc
lret
sub
pop
adc
jmp
add
gs
xchg
push
push
in
into
popf
fsubrs
and
pop
inc
gs
sub
mov
inc
push
and
call
jne
aad
pushl
adc
sbbl
and
and
jb
add
mov
test
push
jnp
inc
push
mov
ljmp
pushf
or
pop
cld
adc
jno
outsb
and
inc
jne
jecxz
loop
clc
fisttps
mov
and
adc
call
mov
insb
inc
jp
add
mov
sub
dec
aas
inc
jb
pop
movsl
pusha
mov
into
fildl
inc
sbb
insb
jno
stos
mov
lds
sti
das
les
cmp
popf
hlt
testb
mov
dec
cld
mov
rol
xor
inc
int
leave
dec
or
jg
cs
ljmp
or
jge
ret
adc
ds
xlat
sub
ljmp
and
int
fmull
rclb
mov
pop
repnz
adc
in
adc
mov
adc
dec
loop
fistl
insl
or
clc
inc
push
gs
mov
xlat
loopne
jg
pushl
arpl
je
sub
test
rcrl
pop
jecxz
xchg
or
or
push
sarl
dec
cld
out
in
andb
inc
push
int
mov
jmp
xorb
ret
js
imul
stos
fcoml
sbb
testb
add
pop
hlt
ja
push
stc
shlb
and
sbb
mov
sub
jmp
pusha
in
jo
sub
std
jo
jne
fistl
outsl
push
jbe
or
imul
mov
fs
mov
inc
sbb
es
lea
add
sbb
idiv
mov
and
std
addr16
add
add
or
in
std
cli
scas
clc
cld
std
or
loop
sub
or
out
xor
sub
bound
inc
adc
dec
add
pop
mov
or
sbb
rol
pusha
lock
into
pop
mov
adcl
mov
mov
xchg
mov
dec
dec
push
movsb
xchg
mov
incl
fsub
pop
cltd
sub
cld
push
bound
xor
mov
or
push
push
incl
insb
jge
xchg
xchg
mov
jb
dec
insb
mov
mov
adcb
cmc
jle
pop
sub
arpl
cmp
ljmp
inc
jo
xchg
clc
or
xchg
inc
in
loopne
xor
and
das
pop
and
xchg
jbe
sub
test
nop
fisttpl
jg
mov
aad
xor
pusha
pop
mov
pop
jno
mov
and
ret
mov
sbb
ficompl
mov
adc
dec
dec
es
mov
push
xor
add
jo
pop
jb
cmpsb
sbb
outsl
dec
cmp
adc
push
outsl
addb
imul
daa
sbb
aam
ret
shlb
mov
dec
jge
inc
xor
pop
xchg
fisubs
xchg
ljmp
or
scas
mov
dec
xor
pop
ret
add
jae
pop
pop
sbb
adc
and
ficompl
ljmp
rcl
jmp
incl
shl
jae
sbb
xchg
insl
icebp
insl
add
push
jge
jge
insl
nop
icebp
lcall
inc
test
loop
fdivs
mov
jge
jge
jge
jge
mov
ds
jmp
loop
in
out
xlat
add
movsb
xchg
or
sahf
mov
decl
and
lock
out
jnp
and
scas
lea
in
fimull
pop
sbbb
stos
mov
lea
popf
std
decl
pusha
sbb
mov
push
dec
test
mov
or
ljmp
test
and
or
xor
xor
jg
jg
notb
imul
lods
xchg
jl
shll
roll
cld
sbb
nop
adc
rcrl
mov
mov
inc
or
push
push
jmp
dec
rclb
ror
sub
sub
add
cs
clc
shrl
inc
sbb
lcall
lcall
jmp
rorl
sbb
jb
adc
pop
push
cmp
dec
push
cmp
mov
insl
lods
clc
add
xchg
xchg
dec
lea
popf
fnstsw
clc
lcall
xchg
mov
jge
jp
fstpt
sti
mov
rcrl
adc
cmp
arpl
outsl
filds
mov
ret
add
movsb
out
arpl
mov
xchg
add
mov
je
test
mov
cmp
test
adc
ret
loope
incl
jle
and
adc
mov
push
add
test
xchg
jg
inc
mov
and
push
rcl
in
out
cmp
adc
loopne
sbb
ret
ret
xchg
adc
xchg
push
inc
xor
lcall
sub
xor
inc
addr16
loope
xor
or
out
jbe
cs
je
fcomi
ffree
bound
or
xlat
fstl
in
adc
in
push
std
rcr
call
in
aas
std
arpl
fcoms
call
mov
cs
in
push
sub
cs
ds
dec
std
pop
fcomip
std
outsb
jo
xor
xor
and
ja
sub
ret
je
push
or
mov
and
jb
lcall
cld
loopne
xlat
jg
test
cmp
add
mov
fwait
popf
leave
nop
inc
jns
dec
loopne
add
jg
lods
nop
dec
add
and
add
std
xchg
testb
cld
mov
sahf
cmp
push
fsubl
push
xor
adc
or
std
fwait
sub
pushl
or
lret
mov
leave
xorb
aas
shll
add
in
rolb
cld
ljmp
sub
ret
jo
popa
loopne
inc
xor
dec
xor
ret
and
sub
icebp
ljmp
dec
movsl
jo
cmp
dec
sbb
add
js
mov
lret
and
dec
pop
in
push
xchg
lock
or
or
incl
pop
sbbb
pop
cmp
call
je
popf
adcb
in
stc
notb
in
std
ja
fdivp
call
and
xchg
jo
out
std
sahf
cmp
push
xchg
inc
jle
stc
mov
inc
or
sahf
adc
add
int
shrb
mov
out
xchg
fadd
jecxz
jp
or
cmc
repnz
test
daa
repnz
movsl
xchg
push
add
or
jb
pop
scas
dec
pop
push
push
push
and
mov
decl
add
clc
cmpl
sbb
add
aaa
add
sub
movsb
push
jg
cli
pop
addl
push
addr16
mov
cld
js
jo
add
add
arpl
xchg
xor
test
cs
sbb
pop
sti
popf
test
add
jbe
add
rolb
xlat
dec
add
sarb
into
add
add
jg
dec
dec
mov
add
xor
lods
or
add
xor
pop
data16
subb
jge
mov
xor
inc
das
or
sbb
xchg
aam
jb
sbb
sub
adc
adc
add
mov
lock
push
sub
adc
adc
add
adc
add
or
pusha
in
out
sbb
mov
fcomp
adc
dec
ds
sbb
shl
ret
imul
push
inc
add
outsb
push
mov
push
push
insl
adc
ss
ficoml
das
sub
add
das
adc
adc
pop
and
add
sahf
inc
pop
adc
inc
sti
mov
sub
inc
and
add
add
mov
sbb
test
push
sbb
cld
filds
xchg
mov
add
imul
lds
push
jae
cmp
cmp
add
mov
pushf
add
push
cmp
cmp
inc
sti
jmp
xchg
add
dec
daa
lret
rcrb
sub
jle
andl
adc
cmp
add
add
jbe
lock
imul
fildl
sbb
and
xor
pop
xor
adc
sub
fiaddl
add
jmp
sub
popa
sbb
sbb
add
dec
mov
mov
mov
push
inc
pop
and
rorb
inc
inc
and
js
movl
mov
mov
jg
and
dec
and
outsb
or
or
adc
sub
add
push
jae
jp
fsubrp
mov
cmp
sti
cmp
loop
adc
out
clc
mov
sbb
out
push
xor
and
inc
push
jecxz
clc
ffree
call
add
in
mov
fadds
insb
sub
inc
mov
and
out
call
add
add
dec
jmp
mov
int
mov
mov
inc
imul
pop
jne
push
push
inc
jg
mov
inc
mov
mov
test
sbb
add
pop
or
xchg
bound
jns
lock
sub
aaa
jge
outsl
jp
lcall
sub
or
xor
lds
ja
sbb
lcall
mov
jge
mov
das
cmp
sub
or
int3
mov
xchg
sub
xchg
add
aam
cmp
push
inc
cli
add
add
add
and
mov
mov
je
dec
in
push
lcall
push
out
jge
inc
pop
pop
ffree
and
xor
inc
push
inc
mull
popa
pop
mov
mov
or
cs
xor
lods
jg
stos
cwtl
and
imul
je
cmp
inc
outsl
mov
xchg
popf
xor
sub
push
pop
inc
arpl
out
ljmp
scas
fs
pop
and
jbe
mov
leave
push
jae
lock
mov
add
arpl
outsl
pop
mov
popf
mov
sub
in
inc
and
mov
hlt
popa
jp
out
lods
cld
test
mov
mov
outsb
or
inc
sahf
pop
cmp
dec
lock
outsb
faddl
je
xor
bound
jle
jbe
sarb
mov
or
add
lcall
mov
int
ret
inc
xor
out
fisubl
mov
add
and
jae
mov
outsl
cli
das
add
lahf
lods
and
lods
jg
jle
inc
xor
add
inc
shr
pop
and
jb
dec
arpl
mov
push
jo
jg
outsl
pop
inc
mov
adc
mov
test
mov
adc
mov
lret
and
jp
fcoms
jge
mov
add
fwait
int
fsubs
lahf
lods
fs
pop
sub
icebp
mov
movsl
arpl
and
mov
add
pop
out
push
insb
and
ss
or
add
mov
cld
or
stos
mov
fldl
std
inc
adc
add
inc
inc
pop
push
mov
add
sbb
push
pop
jg
lds
inc
and
add
data16
jl
add
xor
xchg
shlb
repz
aad
sbb
sub
adc
lcall
shl
popa
ss
sbb
mov
ret
fisttps
enter
icebp
mov
sub
add
andb
pop
pop
and
in
lods
cmp
xchg
sub
jle
jl
and
data16
jle
pushl
nop
mov
mov
in
adc
or
insb
inc
inc
jnp
clc
das
clc
pushf
mov
rcrb
sbb
push
in
mov
mov
nop
in
push
insl
je
rcl
dec
notl
inc
dec
push
fildll
pusha
lods
andl
inc
mov
insb
aaa
add
mov
sub
fcos
mov
xchg
sbb
sbb
mov
in
adc
dec
inc
mov
xor
aaa
cld
call
mov
sub
cmpb
add
lcall
loope
sbb
and
iret
sub
xchg
adc
sti
cmp
cmp
daa
or
mov
xchg
sahf
test
cmp
ljmp
pusha
xchg
xor
or
das
gs
les
arpl
call
push
test
popf
and
sbbb
cmp
mov
cmpl
js
jo
sti
decl
dec
add
es
cmpsb
dec
mov
dec
dec
pop
adc
les
cld
pop
pushf
into
pop
mov
or
inc
mov
ljmp
push
stos
mov
bound
iret
push
in
dec
inc
ret
pop
adcb
jg
jmp
sub
push
inc
test
mov
or
pushl
call
jbe
lock
add
or
add
sbb
decl
jb
inc
into
cmc
sub
frstor
rcl
push
shrl
ljmp
adc
fwait
and
stos
repnz
sbb
add
jae
add
jg
sub
mov
fs
sbb
sbb
add
ljmp
jge
lea
insb
jge
jge
jne
js
xchg
xor
pop
xchg
mov
or
stos
sub
gs
rclb
fs
sbb
data16
incl
sbb
nop
xchg
cld
xchg
mov
in
test
inc
orl
sub
insl
lea
cli
dec
xchg
mov
dec
xchg
or
mov
dec
mov
std
push
sbb
test
and
pop
push
lret
adc
push
and
jle
pusha
arpl
bound
mov
cwtl
lea
lea
ljmp
inc
popf
push
cwtl
and
cli
ljmp
add
popf
jns
mov
mov
rcrb
scas
loopne
fwait
ds
daa
in
lds
pop
xchg
imulb
testb
pushf
repz
lock
fs
fldcw
sbb
or
adc
clc
aas
push
std
jg
push
jo
pop
add
pop
inc
lods
rol
push
dec
dec
loop
lods
push
cltd
jg
or
push
and
add
jmp
stc
lods
dec
or
push
xor
add
jg
movsb
push
sbb
inc
and
mov
addr16
pop
loopne
push
xor
add
imul
adcb
add
push
mov
pop
or
push
and
call
inc
mov
insl
aad
and
into
jns
inc
adc
lahf
jo
int
clc
mov
or
insl
dec
stc
push
pop
dec
gs
or
xorb
push
lods
lods
push
aad
jb
mov
add
mov
jno
push
adc
push
std
add
add
in
pop
pusha
lock
push
add
xchg
dec
nop
pop
push
or
ret
inc
dec
jmp
adc
fsubs
mov
hlt
push
pop
movb
pop
xor
xor
fs
aam
xor
jmp
sbb
and
add
and
cmc
pop
aas
ret
adc
aas
stc
jp
adc
mov
mov
add
bound
mov
and
add
or
mov
xor
pusha
xchg
sbb
xor
fcoms
fsubrl
and
adc
add
push
jecxz
sub
shrb
add
xor
imul
aam
add
bound
or
clc
inc
adc
adc
icebp
gs
pop
pusha
loopne
mov
and
lock
add
adc
insl
sbb
shlb
loope
or
add
adc
dec
and
gs
xor
add
or
inc
and
xchg
push
and
icebp
or
add
adc
mov
pop
add
adc
mov
outsl
les
adc
outsb
pop
or
adc
inc
adc
sbb
push
jmp
out
je
adc
insb
cmp
loopne
adc
mov
rorb
adc
cmp
or
sub
lcall
fbstp
cmp
and
lock
sti
pop
test
add
and
addb
pushl
adc
movsl
adc
or
or
xor
xor
fists
movsl
or
adc
adc
outsl
mov
sub
sub
pop
es
add
adcb
or
ret
jp
adc
cmp
mov
cmp
xchg
repnz
dec
cmpsl
cmp
shufps
xchg
xchg
add
cwtl
daa
pop
jmp
or
lds
fcmove
adc
xor
mov
adc
cmp
lret
ljmp
and
data16
add
adc
adc
adc
and
rorb
and
inc
xchg
mov
inc
aaa
push
sbb
incl
ret
inc
inc
fcmovbe
insb
sbb
xor
pop
sar
pop
lock
push
addr16
pop
outsb
pop
jle
mov
pop
subb
icebp
mov
mov
jp
sbb
jp
pop
or
lock
cli
ret
xor
jb
aaa
jbe
sbb
inc
mov
dec
fsubl
addl
data16
adc
test
jae
adc
pusha
sbb
and
and
pop
xchg
repnz
add
xor
xor
adc
jg
pop
pushf
and
jb
and
xchg
push
mov
sarl
or
add
xor
pop
jp
mov
jne
fwait
shrl
adc
sub
xchg
in
push
dec
call
popa
add
xor
mov
and
jecxz
arpl
fsubl
loope
adc
std
pop
inc
testl
jle
add
outsb
sub
dec
push
das
js
jo
add
ljmp
adc
xor
add
add
cmp
and
push
or
sub
push
and
push
or
aam
hlt
xchg
fldt
sub
add
jg
out
lock
adcb
addl
pop
dec
inc
add
xchg
mov
mov
stos
add
inc
inc
mov
inc
mov
stos
push
std
decl
dec
fstpl
jmp
stos
push
popa
bound
mov
incl
mov
enter
test
lods
imulb
icebp
mov
inc
enter
adc
das
clc
or
cs
outsb
jne
daa
or
push
shrl
xchg
ss
push
push
jl
mov
mov
pop
lock
int
jp
add
pop
or
mov
jno
lods
fs
sub
xchg
push
and
sahf
or
dec
popw
mov
jb
cmp
xor
adc
push
lock
push
mov
pop
cmp
xchg
sbb
test
mov
mov
adc
adc
adc
add
lock
mov
lock
jae
mov
mov
mov
adc
in
nopl
ljmp
xchg
cltd
push
xor
inc
int
xchg
inc
and
mov
mov
lea
je
pop
xchg
bound
inc
call
xlat
test
jge
pop
push
and
add
cmp
lcall
data16
adc
mov
jg
mov
or
rcpps
test
decl
or
loop
jl
mov
fldl
push
jns
pop
test
dec
inc
and
subb
jbe
movsl
jb
mov
cmp
add
js
fdivl
jg
and
pushf
dec
pusha
sub
test
in
fldl
mov
loope
clc
iret
std
fdivr
sbb
sub
push
fs
add
arpl
adc
mov
into
mov
adc
inc
sbb
pop
jns
test
and
add
adc
pop
mov
cld
mov
faddl
fstpl
mov
std
movsb
lcall
lcall
adc
rol
ror
push
mov
adc
mov
xor
xchg
mov
cmp
mov
insl
sbb
xor
mov
movsb
aaa
sbb
mov
mov
je
pusha
aaa
xor
lods
xor
addl
out
and
outsb
xchg
xor
lds
inc
cwtl
arpl
lds
popa
cmp
fisttps
xchg
shll
fldl
pusha
jae
inc
cmp
mov
js
fisttpl
mov
aam
dec
sbb
std
xor
or
xchg
rcrl
pop
loope
push
push
rcrl
adc
and
fcmovb
push
lret
rorl
mov
mov
orl
fcomip
jg
leave
test
dec
xchg
jbe
and
mov
dec
addb
and
nop
data16
adc
push
cmpsb
and
xor
push
lea
pop
lock
pushl
push
dec
pop
mov
inc
jo
bound
add
and
push
cltd
in
xchg
testl
mov
jne
mov
je
ss
push
lcall
inc
and
pop
aas
pop
dec
sub
mov
cmp
pop
xlat
aam
out
mov
lcall
jo
les
ret
xor
imul
movsb
xchg
pop
mov
pop
adc
dec
xchg
mov
imul
sbb
insl
mov
sar
in
insl
inc
js
cmp
mov
sub
jno
incl
and
adc
and
mov
add
mov
cli
xor
jge
aaa
je
jo
xorl
jne
add
jge
ffree
and
arpl
dec
rorl
sbb
or
loope
je
lods
jne
mov
test
inc
cmp
and
loope
rcrl
js
dec
mov
inc
jg
js
add
adc
xor
enter
xchg
in
es
les
jne
adcb
mov
cltd
mov
insl
popa
inc
and
add
jge,pn
insl
pop
cld
out
gs
les
vxorps
popf
int
ret
add
lea
xor
inc
stos
xchg
pop
mov
sub
ret
nop
icebp
lods
ret
cmpsb
xchg
inc
dec
adc
int
jg
add
in
and
mov
popf
loopne
fidivl
cld
jg
jnp
cmp
subb
xchg
stos
loope
cmpsl
add
pop
and
and
fadds
xchg
lods
mov
filds
out
push
loope
add
jle
cmp
call
movsb
push
mov
orl
outsb
cwtl
das
jmp
pop
mov
les
nop
xchg
and
jecxz
xlat
ljmp
xchg
sub
popf
sbbb
call
filds
mov
je
mov
pop
cld
mov
popf
mov
rclw
inc
data16
xor
decl
movsl
call
xchg
mov
icebp
xlat
mov
or
push
xchg
xchg
addb
adc
mov
pushf
adc
aaa
sub
ret
addl
ret
fcomip
adc
in
or
ds
test
pushf
ret
mul
cmp
call
and
loope
push
xchg
mov
jno
xor
xchg
jecxz
lcall
jge
es
mov
add
and
mov
nop
mov
dec
out
fst
lods
sbb
add
in
or
hlt
jmp
popf
negl
popa
mov
xchg
inc
mov
jb
in
mov
lea
push
mov
fbstp
push
leave
inc
mov
inc
cli
jno
movsl
ret
es
lcall
fisttps
mov
pop
sbb
push
xor
inc
std
push
cli
in
and
cmovo
test
mov
adc
sub
js
in
inc
xor
stos
popf
in
cmp
bound
ret
into
xchg
movsb
mov
andl
dec
mov
loope
mov
adc
xor
aas
xorb
sbb
shrl
aas
int
fsubrl
lret
pusha
dec
pop
dec
push
testb
jbe
sahf
std
push
jae
bound
or
movsb
mov
jno
call
push
dec
xor
repz
std
mov
cltd
std
out
or
mov
rcll
mov
ret
call
vpmulhw
add
mov
push
hlt
and
inc
sbb
rol
inc
push
call
cmpsb
xor
or
popa
cli
clc
cmpl
cmpl
mov
outsl
mov
adc
push
in
xchg
sub
in
and
mov
xor
push
sbb
sub
inc
jns
xor
stc
popa
rcl
inc
jne
icebp
lahf
add
and
add
add
js
cmc
negb
mov
mov
pop
ljmp
and
dec
mov
sbb
scas
or
sub
mov
test
arpl
and
mov
sub
iret
rcrb
add
je
lcall
pop
cmpsb
repz
cmp
sub
ss
push
dec
arpl
and
pushl
lcall
addr16
add
aas
fs
adcb
or
imulb
movsl
and
insb
and
jle
dec
push
sub
or
mov
cmpsb
loope
insl
and
cli
adcl
mov
mov
add
pop
cmp
shrl
mov
adc
ret
sub
aam
mov
and
incb
test
jno
add
insl
xchg
nop
add
repz
jge
in
clc
cmpsb
stc
push
mov
lret
inc
sbb
push
bound
push
sub
lock
mov
loope
mulb
int
nop
ljmp
stos
ja
rolb
mov
cmpl
push
sbb
pop
cmpb
orl
icebp
ret
test
xor
add
jge
jge
pop
xor
adc
pop
aam
mov
push
push
mov
add
sub
dec
dec
rol
ret
jno
roll
in
push
add
pop
in
and
call
and
repnz
sub
xor
mov
inc
or
pop
lea
adc
rcr
cli
jg
xor
cmp
aam
out
xor
mov
mov
js
lea
dec
or
cmp
pop
sbb
jg
jecxz
lcall
popa
je
mov
add
pop
popf
cmpsb
popf
inc
push
or
shll
cld
and
loope
pop
inc
je
mov
sbbb
sbb
repnz
fisubrs
pop
inc
insl
sub
inc
add
aas
fwait
add
mov
cmp
mov
mov
adc
cmpsb
sbb
adc
lret
cmp
dec
dec
mov
mov
adc
mov
mov
push
cld
mov
sbb
push
fcomi
mov
call
push
cmp
call
and
mov
dec
cmp
rdpmc
mov
mov
or
mov
adc
in
mov
mov
loope
inc
ljmp
adc
pop
add
jmp
mov
sub
cmp
dec
jecxz
lds
cmp
rolb
mov
into
xor
shll
inc
lds
push
fs
rcll
int
int
lret
inc
ljmp
sar
mov
adc
js
movsb
sbb
inc
push
xor
mov
mov
loop
or
mov
jno
add
mov
pusha
inc
sub
scas
pop
add
inc
sahf
xor
xor
push
xchg
fldenv
ret
lcall
bound
inc
jmp
ret
add
fbstp
add
or
lahf
jbe
jecxz
in
fstl
inc
xchg
shrb
clc
jmp
sub
jno
cmp
mov
decl
loop
sbb
inc
push
aaa
adc
sub
fildll
shlb
arpl
adc
sbb
icebp
cs
test
mov
adc
jbe
out
jb
sub
ljmp
adc
imul
xor
and
lcall
loop
fs
jmp
std
das
test
insb
std
inc
pop
ljmp
sbb
ljmp
adc
inc
mov
int3
and
add
fistpl
pop
or
mov
push
call
notb
or
js
dec
pop
sub
lret
xchg
jbe
mov
ljmp
ljmp
xchg
mov
in
add
lds
push
or
loopne
test
inc
mov
pop
sub
lock
mov
and
shlb
shl
in
mov
adc
hlt
push
and
and
add
cmp
or
pop
call
jae
sbb
sbbb
pop
jecxz
arpl
and
push
fcmovbe
repnz
loop
repnz
shl
incl
adc
pop
loopne
add
loopne
sbb
adc
dec
pushf
in
daa
cltd
sbb
cmpsb
aas
sub
mov
leave
outsb
add
lcall
in
or
add
shll
lcall
ljmp
push
inc
pop
mov
sbb
lret
rorl
push
call
push
or
loopne
push
mov
add
inc
mov
popa
sub
in
push
and
or
xchg
dec
jne
push
cs
and
dec
fmul
push
cmp
push
xchg
ret
pushl
xor
xchg
popaw
xchg
cmpsb
aam
xchg
fists
push
pusha
inc
xor
fnsave
shll
push
mov
jecxz
mov
cmp
ja
push
fsubs
mov
pop
add
mov
add
fs
scas
add
inc
dec
movsb
lods
mov
cmp
loop
pusha
xor
cmp
incb
push
inc
add
jle
jmp
jne
pop
xorb
add
lods
xchg
push
jbe
outsb
inc
push
sub
cs
addr16
insb
inc
add
and
movsb
andl
lods
jae
add
add
insl
push
in
jo
lods
add
sbb
outsb
add
or
loopne
out
pop
push
cmp
add
out
js
in
add
dec
je
mov
mov
xchg
adc
sub
inc
jle
pop
jbe
push
sbb
or
loopne
or
outsb
mov
idiv
add
rolb
adc
stos
push
arpl
push
lods
pop
ret
fs
mov
shlb
xor
push
inc
add
add
cli
sbb
lcall
imul
add
pop
cmp
pop
scas
popf
xchg
decb
bound
add
and
mov
dec
es
and
stos
xchg
in
les
adc
shrb
mov
add
inc
dec
and
orl
adc
and
jg
sarb
add
jne
testb
jmp
or
sbb
jnp
pusha
xlat
xchg
add
add
popa
xchg
aaa
je
jbe
sbb
pop
shll
xchg
pop
sarb
add
cmp
cmp
cmpl
mov
jbe
sbb
jle
lock
jg
repnz
clc
ljmp
aaa
std
sub
cld
in
jp
in
push
add
enter
xor
sbb
xchg
sub
mov
push
xchg
jb
adc
insb
adc
idivb
jg
lret
adc
daa
dec
inc
adc
xor
movsb
push
add
xchg
lock
mov
outsb
xchg
inc
pop
cld
fldt
inc
call
pop
inc
in
add
imul
ljmp
rorb
dec
cs
adc
push
mov
push
push
adc
sub
inc
add
and
clc
lcall
data16
sub
jg
and
jg
cld
mov
and
adc
dec
dec
and
insl
or
mov
lods
add
clc
push
addb
pusha
and
bound
in
pop
and
imul
sbb
sub
push
call
adc
nop
cmp
aaa
cmpb
icebp
sub
ljmp
outsb
and
mov
mov
mov
inc
and
add
fstpl
icebp
lock
and
jg
insl
stos
jge
jp
inc
dec
std
in
fbstp
mov
dec
xor
sbbb
or
out
xor
jnp
dec
cli
aaa
fs
leave
add
mov
repz
lea
outsl
aad
fidivrs
popa
mov
lds
push
xchg
dec
mov
adc
dec
lock
mov
add
adc
adc
sbbl
xchg
fildl
imul
jge
pushf
jb
aaa
inc
roll
jo
addb
and
push
clc
ja
or
adc
pop
and
stos
aam
jle
sub
adc
pop
int
mov
jb
adcb
insb
or
xchg
or
scas
clc
and
lods
adc
add
incl
data16
inc
insb
aas
inc
je
jae
je
cmp
out
and
xor
out
and
notb
adc
cltd
sub
mov
xor
add
push
mov
call
scas
lods
jl
add
mov
pop
lods
enter
mov
sub
mov
hlt
or
mov
ss
shrl
pusha
pop
jne
xchg
aad
shrb
pushl
sub
push
lcall
in
ljmp
push
int
inc
pusha
jo
push
mov
push
dec
pop
adc
pop
sbb
add
cmp
adc
call
outsl
dec
and
lods
mov
and
es
jno
sbb
mov
mov
outsb
outsb
jp
xchg
cmp
addb
dec
inc
mov
mov
cltd
ja
outsb
dec
adc
cmp
mov
cmpsb
lcall
fnsave
pop
stos
fcomp
pushl
mov
loope
or
jp
mov
in
aam
sbb
leave
stos
test
ffree
ljmp
push
loopne
aas
and
int
add
aad
in
adc
call
int3
outsb
in
testb
push
ljmp
divb
mov
adcb
xchg
push
cwtl
rorl
jg
ja
cmp
pop
or
xor
sbb
aam
pop
std
or
adc
and
das
pop
and
arpl
fcompl
movl
hlt
lcall
adc
push
lcall
and
adc
sbb
mov
in
loop
push
sbb
cwtl
je
and
jno
ja
xorl
andb
sbb
and
mov
mov
and
xchg
shrl
mov
nop
loopne
mov
std
inc
push
xor
cwtl
mov
cmc
mov
lcall
fistpl
sbb
xchg
dec
xchg
in
mov
pop
xchg
mov
push
insl
push
inc
xchg
or
sbb
sbb
push
test
mov
dec
and
and
and
sub
sti
or
lock
enter
sub
stos
mov
loope
jne
shlb
incl
dec
sarb
in
and
adc
sub
push
cmp
sub
inc
jmp
sbb
mov
mov
data16
cmp
loop
sub
lcall
add
jae
movsl
and
repz
add
das
jne
das
cli
decl
dec
dec
mov
or
int3
pushf
popa
popa
repz
sub
cmpsb
test
jne
cmp
xor
dec
mov
insl
stos
xchg
lcall
push
mov
ds
js
ja
push
push
fbld
push
imul
mov
jmp
jecxz
push
jne
push
rcll
in
sub
jo
push
icebp
out
insl
push
icebp
jmp
rcrl
out
cmp
jns
mov
adc
xchg
loop
shlb
cld
mov
mov
mov
mov
stos
sbb
lock
fldt
ja
pop
ret
xor
jb
and
arpl
xorb
in
or
push
add
lcall
aaa
or
clc
les
dec
xor
mov
fdivrs
out
push
cld
jge
sub
scas
lea
sub
sub
clc
das
cli
cmpb
cmp
jmp
sub
ret
add
test
js
jno
mov
sbb
or
mov
aam
shl
test
sub
push
or
popa
jno
cmc
xchg
ss
mov
mov
arpl
mov
cwtl
xchg
cltd
into
cltd
das
mov
shl
test
adc
cmp
xor
mov
cmc
cwtl
mov
lret
lods
push
xor
push
shr
push
pop
jno
popf
pushl
pop
push
jno
xchg
inc
stos
sbbb
lods
aaa
lods
inc
test
inc
lcall
ja
or
test
popf
int
arpl
lret
mov
or
jb
imulb
test
in
loop
decl
pusha
insb
mov
or
pusha
dec
add
rorb
rolb
jae
xchg
loope
lods
mov
adc
scas
fwait
xchg
sbb
pop
sarl
mov
push
rorl
jmp
adc
push
addb
mov
xchg
pushf
aaa
push
in
add
andb
pop
dec
cld
dec
and
push
push
jl
rcrb
push
rolb
in
pushl
adc
rolb
loop
dec
mov
push
mov
sarl
loopne
inc
leave
loopne
xor
imul
jle
dec
movlps
dec
sbb
incl
orb
leave
sbb
addb
jl
mov
mov
jecxz
std
fnclex
pop
pushf
dec
add
mov
inc
popa
rcrb
lods
sbb
stos
fisttpll
mov
adc
add
pop
andl
js
mov
and
jb
mov
dec
das
dec
or
call
mov
sbb
dec
add
xor
inc
cmp
inc
cmp
rcrb
add
insb
test
dec
cmc
add
and
jl
adc
adc
mov
mov
mov
stos
cld
into
jg
jge
outsl
movsb
aas
add
in
out
add
push
add
mov
stos
dec
or
mov
mov
into
add
mov
inc
add
cmc
sbb
shr
popa
inc
jmp
add
cmp
adc
dec
adc
xchg
lock
xchg
mov
mov
adc
insl
add
or
mov
mov
shll
jno
add
jae
cwtl
inc
lods
or
in
data16
lock
mov
adc
pop
sbb
fstl
outsl
cmp
jo
push
mov
and
add
and
and
hlt
sbb
aas
sbb
data16
int3
add
xchg
mov
adc
aaa
movl
mov
add
gs
and
sub
add
or
push
les
or
sbb
arpl
pop
dec
pushf
cmp
mov
push
and
add
adc
adc
cmp
push
fldt
dec
xchg
or
adc
rcrb
fisttps
cmp
repnz
add
or
pop
sub
test
cwtl
in
jae
and
insl
sbb
add
fistpll
sub
push
js
and
mov
testb
adc
cmp
and
leave
cli
lock
pop
aaa
inc
push
js
and
and
push
pusha
ss
push
cmc
jmp
mov
xchg
sub
out
push
loopne
shl
add
xor
cmpsb
dec
pushl
push
jg
mov
hlt
xor
xchg
dec
in
xor
les
mov
add
iret
dec
push
xor
add
sahf
pop
rolb
sbbl
sahf
and
adc
add
popa
divb
mov
jns
add
push
test
add
lock
push
adc
ljmp
xor
mov
popa
cmc
push
insb
imul
pop
dec
daa
mov
aaa
mov
or
insl
inc
add
in
je
push
add
push
int3
hlt
xor
adc
mov
scas
cmp
out
cmp
pop
mov
popf
push
rolb
push
inc
push
movsb
mov
mov
inc
inc
add
and
pop
out
cmp
das
fdivs
shlb
and
fdivrl
es
xchg
cmp
jb
dec
push
mov
jmp
push
mov
or
sub
inc
and
testb
push
into
faddl
cld
aaa
cmpsb
jb
add
jge
jge
call
enter
movsb
cmp
jge
xlat
jge
push
jns
bound
add
push
add
adc
inc
movsb
add
xchg
pop
or
lret
testb
insl
rorb
push
imul
push
mov
je
jb
xor
ret
lea
adc
aaa
cmpb
cli
and
mov
pop
and
dec
clc
xchg
clc
popf
mov
je
popf
xchg
popf
sahf
cwtl
adc
sub
ret
add
or
aad
jecxz
inc
and
inc
xlat
sub
out
sub
jge
push
pop
xchg
add
incl
push
and
xchg
xor
or
adc
or
daa
dec
dec
pushf
icebp
ja
jg
shll
out
inc
je
lea
mov
sti
push
ljmp
scas
mov
push
arpl
movsl
pop
and
movsl
push
jg
mov
fsubs
add
xor
arpl
or
add
test
adc
xor
jge
jb
cli
or
popf
or
and
cli
gs
decl
in
mov
add
ja
jne
pop
push
pop
addr16
adc
and
mov
pop
movsl
or
mov
es
ss
inc
insl
inc
push
insl
data16
notb
insb
xchg
insl
test
xchg
inc
sub
scas
add
cld
sbb
mov
shrb
ret
es
push
lods
push
lods
jl
rcr
incb
cmp
aaa
xor
push
out
push
shr
mov
add
clc
add
clc
and
lcall
push
std
loop
popa
inc
sub
les
mov
test
push
icebp
int
fcoml
cmp
jno
mov
mov
push
dec
mov
jne
shlb
shl
insb
mov
fisttpll
sub
imul
shl
dec
stos
jmp
fwait
mov
push
mov
xlat
add
bound
rcrb
sub
shrb
insb
mov
call
xor
xor
cmp
aam
ret
cli
adc
divb
idiv
lcall
in
out
mov
pop
mov
lock
add
mov
loopne
sbb
adc
out
cld
loope
insb
mov
mov
push
incb
xor
repz
in
and
fstps
stos
jae
dec
sbb
test
lods
loope
or
push
roll
add
pop
jo
jae
shl
shll
adc
repnz
or
sbbb
fucomip
xchg
lds
aam
adc
dec
jo
lods
sahf
pop
aam
into
ret
test
cmp
or
add
push
or
cmp
stos
nop
sub
es
mov
sbb
mov
pop
cmp
shll
rcrb
push
push
or
mov
test
rorb
je
bound
test
mov
subl
call
xor
mov
xor
sarl
mov
sarb
jmp
mov
mov
lock
mov
std
add
ljmp
mov
sub
pop
subl
sar
idiv
inc
shrb
lock
sub
jae
inc
test
js
jo
and
xorb
ja
ret
xlat
push
inc
xchg
loopne
test
mov
daa
leave
push
or
jbe
pop
push
into
add
sub
inc
in
cli
ljmp
insl
cwtl
jnp
cmp
daa
inc
pop
subb
sahf
add
push
sbb
loop
je
xor
xchg
movl
cmp
push
inc
pop
mov
ja
mov
outsb
jno
loope
mov
push
add
scas
popf
pop
insl
or
jne
push
xor
rclb
cmp
sub
mov
ret
insl
dec
insb
movsb
mov
sub
out
imul
lock
sub
imul
xchg
cmp
mov
cmp
jl
dec
sub
repnz
and
xor
dec
insl
push
repz
jnp
cmpsl
pop
negb
add
gs
jo
jecxz
fiaddl
cld
lea
inc
sbb
fdiv
sbb
cs
das
or
insb
jp
shrb
rclb
inc
ret
mov
cmpsb
rcrl
sbbb
add
mov
lock
call
add
ret
xchg
jo
mov
or
test
lods
sub
adc
fbstp
or
xor
push
add
mov
rclb
dec
fisttpl
inc
jecxz
or
push
mov
popa
stos
dec
rclb
inc
outsb
leave
inc
sub
call
pcmpgtb
mov
lods
inc
cld
lods
mov
out
neg
sbb
shll
stos
inc
inc
cmp
cmpsb
shrl
pop
int
pop
jne
ret
movsb
push
int3
adc
cmp
push
aad
push
fisubl
adc
adc
ljmp
jb
ss
xchg
movsb
sub
pop
cmp
bound
loop
and
add
cmp
push
jmp
aaa
popf
leave
jge
pop
fnstsw
fnstsw
call
std
fwait
dec
sub
sbb
jb
subb
lods
fnsave
outsl
fldl
jne
in
sarl
mov
xchg
add
xor
push
insl
mov
jp
jmp
inc
in
inc
sbb
jp
icebp
or
push
push
int3
nop
push
and
and
aaa
std
ljmp
les
dec
mov
xor
mov
fs
pop
cmc
adc
or
inc
out
decl
add
mov
mov
dec
mov
les
mov
cmp
inc
inc
loop
add
js
ret
push
mov
inc
mov
xor
addr16
fbstp
jecxz
std
adc
push
push
leave
inc
pop
or
shr
inc
addb
or
aas
pop
movsb
xor
mov
andl
pushf
xchg
xor
fistpl
jl
push
add
add
xchg
lock
cmpsl
shlb
addb
incl
loope
dec
pop
add
lock
xor
xchg
push
push
add
sub
imul
adc
add
inc
dec
pop
and
ret
in
add
gs
pop
in
pop
sub
adc
add
push
repz
jae
inc
inc
mov
pushf
jl
hlt
std
mov
incl
xor
adc
mov
sti
enter
outsl
mulb
dec
xor
in
jecxz
ret
loopne
pop
xchg
es
lock
adc
mov
aaa
xchg
test
mov
cmpsb
jo
repz
fcoml
pop
jmp
pushf
int
xchg
add
dec
aas
inc
cmp
pop
gs
ffree
les
mov
push
mov
mov
inc
mov
mov
out
call
ljmp
cmp
jo
repz
xchg
or
add
or
or
std
xor
or
sbb
loopne
mov
shll
cmp
sar
sub
loopne
stos
and
add
pushf
inc
push
push
add
mov
lcall
je
push
fcomps
movsl
cmp
call
clc
aas
je
mov
lahf
add
cmp
lods
add
sub
lea
icebp
pop
add
call
add
sub
mov
aaa
cwtl
add
clc
mov
push
mov
mov
push
pushf
popa
sbb
inc
fwait
popa
outsl
clc
das
or
and
xchg
add
add
movsb
push
or
lret
add
mov
xchg
pop
out
sub
cwtl
mov
add
outsl
jle
xchg
add
jmp
cmpsb
lds
cmpsl
int
test
mov
adc
pop
lock
rolb
push
mov
sahf
dec
add
or
in
and
mov
or
or
fisttpll
stos
cmp
outsb
add
sub
or
jge
xchg
je
insb
cmpsb
movlps
mov
dec
add
mov
fiadds
and
or
dec
sbb
es
sbb
mov
aaa
dec
lahf
aam
or
xlat
add
push
adc
add
in
jmp
ja
cmpsb
add
add
movsl
fwait
mov
lds
negl
sbb
and
cld
add
mov
int3
add
das
fsubrs
pusha
add
add
xchg
and
inc
or
and
mulb
call
push
mov
pop
int3
lods
rcl
mov
push
inc
shll
ljmp
aad
lea
jo
hlt
sub
cmp
cmpsb
dec
sbb
push
mov
stos
push
out
xchg
cmp
cmp
test
jne
insb
or
sbb
xor
mov
and
and
sub
addr16
insl
mov
in
pop
push
jp
xor
stos
and
lock
inc
mov
adc
jle
mov
add
add
inc
scas
cs
jo
adc
cmp
inc
cwtl
cmp
sub
aas
adc
inc
cmp
jae
add
outsb
sbb
xor
pop
cmp
push
push
adcl
fdivs
pusha
dec
jae
popa
inc
push
outsb
sub
and
mov
sbb
add
dec
nop
dec
jg
rorl
bound
scas
dec
lcall
inc
lcall
inc
imul
mov
push
add
enter
pop
mov
inc
fucomp
rorb
inc
push
mov
lods
mov
mov
and
jmp
dec
dec
adc
and
inc
mov
pusha
mov
imul
sbb
lods
dec
push
lcall
jb
aam
test
xchg
push
mov
push
test
mov
sbb
mov
mov
jb
sbb
lret
es
cmpsb
jg
mov
ret
pop
jae
clc
push
dec
ret
lock
idivb
push
pusha
pop
sub
add
push
les
push
push
fcomip
scas
push
push
push
add
xor
xor
jmp
mov
fs
pusha
cmp
jne
cli
test
call
jne
sbb
xorl
loop
mov
pop
lock
sbb
sub
adcb
mov
adc
dec
popf
std
das
clc
cmp
lods
arpl
or
cwtl
and
pop
push
xor
add
fisttps
dec
add
sub
test
cmp
js
lods
repz
in
arpl
and
push
cltd
enter
shlb
adc
fwait
push
hlt
push
sub
mov
sub
ljmp
add
imul
and
xchg
test
push
jae
adc
push
sahf
sub
push
lcall
popa
scas
addl
mov
jl
and
sbb
outsl
jg
xorb
sub
lods
lea
adc
pushf
mov
inc
ret
ret
fcomp
pop
sub
or
pop
cmp
and
pop
xor
adc
sbbl
mov
jmp
sarl
popa
inc
push
jnp
imul
xor
aam
mov
movsb
call
std
add
mov
sahf
gs
mov
sub
or
mov
cmpl
dec
mov
out
cs
add
cld
call
cli
add
sahf
dec
xor
addr16
fstps
xor
fldl
mov
mov
orb
dec
sahf
xor
enter
fwait
and
xor
add
pusha
jo,pn
incl
xor
and
xor
or
sahf
push
cmpsl
mov
mov
add
add
mov
pushf
cwtl
in
and
rolb
out
int
pop
ret
dec
sbb
shl
and
std
fsub
mov
pop
jno
push
add
ror
ss
add
adc
data16
jbe
xchg
xchg
sti
fldl
in
add
mov
xor
inc
rclb
rorb
incl
or
mov
pusha
pop
jo
add
xor
std
sbb
or
or
sbb
das
jg
jmp
frstor
call
push
test
adc
jno
and
xor
test
arpl
sub
jp
arpl
xchg
sbb
std
in
jmp
and
push
add
xorb
call
sub
insb
push
inc
dec
mov
fnsave
nop
insl
push
cld
push
decl
xorl
popa
xchg
push
push
mov
inc
push
push
push
cmp
mov
imul
movsb
incl
call
dec
cmpsl
loope
js
scas
mov
inc
int
xorb
push
sbbb
inc
loope
loope
cmp
int
cmpb
cli
decl
popa
test
rcrl
into
adc
scas
xchg
hlt
pushl
xchg
mov
ljmp
loope
sar
mov
daa
xlat
fisttpll
cmp
stos
cwtl
dec
call
std
les
jecxz
sbb
jmp
inc
in
push
in
addr16
ja
xchg
xor
mov
incl
std
incl
mov
inc
stos
std
sub
pop
mov
enter
sar
call
rorb
shl
xor
mov
and
js
jno
ljmp
adcb
adc
mov
subb
call
xor
or
fsubs
test
pop
outsl
insb
inc
sahf
ljmp
rcrb
ds
xor
mov
inc
xor
ffreep
data16
aaa
sbb
jb
arpl
inc
mov
in
clc
mov
mov
xchg
into
mov
shrb
test
std
jg
out
bound
lods
mov
add
mov
jg
xchg
or
insl
mov
jo
subb
push
imul
and
mov
xchg
jge
cmpsl
jge
jge
jge
jge
sti
jmp
jge
jge
lea
and
sub
xchg
add
xor
mov
jb
lahf
call
xchg
and
ret
and
xchg
mov
sub
decb
xor
add
and
and
cmp
out
cli
jmp
into
xchg
or
push
inc
inc
imulb
adc
xor
mov
ret
ret
sbb
pop
adc
pop
xchg
or
mov
into
and
push
jp
dec
or
popa
xor
push
xor
fcomip
push
rclb
scas
insl
inc
sub
inc
inc
fcompl
push
add
test
shrl
or
xor
fsubrl
adc
and
push
mov
inc
mov
pusha
ret
adc
mov
pop
ret
je
lods
leave
dec
inc
mov
inc
mov
dec
mov
decl
repnz
scas
inc
stc
rcrb
inc
mov
mov
imul
notl
outsl
xor
jae
add
adc
mov
les
add
jb
mov
push
add
or
outsl
ds
push
nop
push
and
std
jns
inc
push
dec
out
add
add
sbb
and
jmp
inc
js
pop
lock
push
bound
inc
add
insb
mov
or
and
imul
imul
pop
inc
scas
lods
sbb
dec
mov
mov
adc
add
les
push
lea
jne
push
dec
ljmp
insl
and
out
repnz
sbb
cmc
xor
xchg
push
orb
arpl
gs
or
outsl
mov
insl
pop
inc
push
jbe
imul
add
addb
jg
popa
cwtl
cli
mov
adc
dec
lret
and
jmp
and
into
repz
add
or
clc
popf
les
add
pop
adc
roll
add
pop
es
mov
jns
add
add
mov
xchg
outsl
xor
int3
xchg
outsl
dec
xor
or
and
or
adc
pop
inc
add
adc
dec
add
adc
sbb
mov
aad
ret
add
add
mov
xchg
test
adc
adc
cmpb
orl
fcoml
lret
jo
clc
sub
dec
cld
aaa
mov
outsl
mov
mov
xor
scas
pop
adc
pop
lcall
sbb
pop
and
pop
cmp
cmp
push
lds
insb
push
lcall
fs
mov
cmp
leave
cmp
push
add
xchg
adc
gs
es
movsb
jmp
or
mov
push
mov
outsl
sbb
test
incl
adc
mov
cwtl
adc
dec
sbb
and
cmpsb
and
icebp
push
add
nop
and
mov
mov
lods
add
dec
push
stos
xor
out
cld
mov
imul
cmpsb
inc
outsl
fistps
mov
dec
sub
dec
adc
push
push
lret
pop
cld
add
daa
sub
pop
add
adc
and
adc
sbb
repz
jo
dec
subb
call
lds
inc
inc
dec
lds
jg
mov
insl
adc
mov
arpl
and
inc
sbb
movsl
pop
cmc
loopne
push
loope
pop
and
dec
ds
adc
je
inc
mov
testb
out
int3
repnz
add
aas
mov
inc
in
fstpt
popf
pusha
inc
adc
loopne
lock
lret
fs
mov
cli
pop
inc
insb
push
es
in
or
out
push
and
mov
or
inc
mov
jo
idivb
xor
sbb
and
jp
filds
sti
add
inc
or
cmp
icebp
dec
dec
adc
jbe
adcb
mov
jmp
je
and
add
sbb
pop
addb
xor
mov
insb
lods
fs
mov
xchg
add
outsb
imul
inc
and
adc
sbb
imul
inc
xor
mov
jle
sbb
lea
lea
loopne
and
push
scas
add
test
inc
jb
loopne
xchg
sub
inc
test
adc
adc
xor
cmp
mov
jno
test
adc
add
out
cld
add
jp
dec
pusha
sub
dec
scas
popf
dec
add
mov
adc
pop
mov
fcompl
mov
idivb
mov
aas
icebp
pushl
adc
adc
add
lods
inc
stos
push
test
push
or
cmc
decl
or
ret
or
jge
jmp
jmp
add
lea
sub
push
mov
mov
sarl
inc
inc
cmp
es
lds
or
push
mov
push
cmp
dec
loopne
popa
xor
insb
and
add
or
pusha
daa
in
in
mov
and
mov
dec
inc
jecxz
push
inc
xor
pop
es
xchg
call
add
imul
push
and
hlt
incl
ret
movsb
xor
arpl
xor
sbbl
call
push
clc
je
sbb
push
ret
push
int
leave
cld
addr16
mov
sbb
adc
fisubl
mov
inc
loope
lcall
mov
cld
pusha
popf
xor
cmp
or
aas
fisttpll
pop
fisttpll
insb
dec
fs
insb
fisttpl
add
icebp
outsb
lret
hlt
pop
jb
je
jp
js
or
test
push
scas
ret
loope
mov
jmp
adc
pusha
inc
dec
pop
mov
fucom
in
or
dec
or
loop
pop
mov
pop
shlb
fcomps
pop
mov
pop
pop
sbb
mov
hlt
aam
and
fidivs
andb
cmp
mov
and
in
mov
inc
pusha
add
stos
popa
arpl
insl
mov
ljmp
inc
or
ljmp
inc
mov
jle
sbb
cli
shll
jb
cli
add
cmp
jmp
cs
mov
outsb
outsb
icebp
repnz
imul
mov
mov
jno
and
ret
das
nop
hlt
push
std
scas
clc
pop
mov
in
add
insl
push
insb
adc
mov
outsl
add
lcall
es
or
xchg
xor
movsl
orb
xor
inc
in
push
sbb
shrb
lock
jno
rcrl
add
popa
pop
inc
int3
jle
mov
and
out
adc
adc
sub
sbb
and
sbb
cld
or
or
sbb
cld
sbb
shrl
ljmp
push
mov
xchg
sub
xor
xchg
or
jmp
sub
lcall
mov
and
addl
js
adc
adc
adc
cmp
mov
jle
cmp
sarb
mov
mov
jp
sar
call
loopne
pop
sbb
das
jecxz
add
mov
shrl
nop
pop
je
ficomps
ret
fwait
mov
icebp
scas
adc
dec
cmp
test
dec
outsb
arpl
movsb
or
pop
test
xor
lcall
lahf
insl
scas
or
and
movsl
mov
insb
mov
push
mov
inc
adc
in
push
mov
or
push
adc
mov
sub
pop
ljmp
jae
bound
shll
test
shlb
icebp
mulb
movb
xorb
icebp
loopne
xor
sub
sub
inc
mov
xchg
pushf
andl
add
cli
popa
decb
or
push
push
popa
jo
adc
lods
ss
add
mov
sbb
add
xchg
cmp
xchg
call
mov
cmpl
or
or
add
adc
xor
jg
mov
push
pop
and
inc
dec
ja
adc
lcall
jne
push
or
and
outsb
ljmp
and
ret
add
cld
push
mov
jb
inc
nop
mov
pusha
jp
jbe
add
fmull
lods
jo
cld
incl
insb
add
cmp
icebp
sahf
std
mov
daa
inc
loopne
inc
pop
js
mov
push
jecxz
mov
dec
push
lcall
ja
imul
mov
mov
fistl
cwtl
mov
pop
mov
js
or
push
out
jbe
jb
incl
fmuls
xchg
shrl
lret
ficompl
or
ret
xor
outsb
mov
sahf
loope
std
cli
inc
insb
mov
sarl
adc
inc
push
and
bound
test
xor
adc
jg
add
mov
add
pusha
clc
outsl
cmp
dec
add
or
lods
cltd
mov
outsb
jp
pop
test
mov
or
add
subb
mov
adc
sub
test
scas
aaa
jl
icebp
lock
jp
fcmovnbe
inc
nop
mov
dec
xchg
lcall
decb
sbb
jmp
inc
loopne
inc
gs
xor
inc
push
inc
jge,pt
ljmp
jmp
insl
nop
arpl
xor
dec
xor
inc
dec
mov
movsl
ss
xchg
xchg
ljmp
xchg
imul
or
dec
cmpsb
mov
or
mov
sar
jmp
and
and
add
int
dec
dec
cmpsl
popf
mov
add
and
mov
lods
xchg
lods
cmpsb
fwait
pop
dec
jmp
cltd
mov
ljmp
add
aaa
sub
inc
cli
and
mov
test
jbe
in
in
dec
fsubrl
sub
dec
push
insb
jno
pusha
inc
xchg
insb
jnp
out
cmp
fisubs
add
xor
cmpsb
mov
xor
sahf
push
data16
pop
ret
loop
sbb
mov
sub
mov
add
add
aad
mov
or
scas
pusha
push
and
add
stos
xorb
imul
add
mov
add
je
push
jle
xchg
nop
pop
out
sti
pop
std
mov
mov
jne
add
xchg
add
jp
and
adc
cli
dec
add
out
lcall
call
add
inc
clc
add
add
imul
in
mov
ja
insb
movl
add
fadds
lahf
popa
dec
push
jae
pop
sub
adc
push
jne
loopne
inc
call
adc
loopne
inc
cld
mov
sub
pop
sbb
lods
sarb
aas
pusha
sub
jb
inc
adc
adc
jg
cmc
cmp
fs
hlt
or
xor
jg
adc
sub
sbb
repz
cmp
std
ja
loop
jns
jle
lret
adc
cmp
adc
mov
adc
stos
movb
mov
imul
push
ret
inc
in
clc
jg
xor
jne
ss
mov
insl
dec
adc
jo
jg
mov
or
sub
dec
and
pop
xor
mov
fldl
insb
adc
daa
dec
push
mov
mov
pushf
scas
pop
movsl
daa
dec
jae
add
add
ljmp
inc
jne
repz
mov
sub
xor
fisttps
and
sbb
and
add
push
inc
push
xor
xor
loop
xchg
dec
mov
stos
and
add
ret
add
add
outsb
add
and
faddl
xor
adc
pushl
pop
push
and
adc
xor
test
push
cld
and
insl
pop
xor
xor
inc
scas
subb
adc
push
pushf
jge
es
push
push
inc
jne
fmul
in
inc
mov
sub
mov
xor
xor
or
aam
jl
xor
dec
add
or
mov
xor
sub
mov
xor
sbb
popa
mov
push
add
mov
mov
push
xchg
lock
cld
ljmp
push
lcall
xchg
mov
add
jo
jle
aaa
and
std
mov
insl
testb
cmp
pop
cmp
cmp
cs
jl
fimull
mov
bound
inc
int
test
cld
dec
mov
ret
mov
xchg
cld
pop
mov
rolb
insw
mov
add
jecxz
push
test
out
sub
add
push
adc
call
addr16
adc
push
outsl
clc
lcall
xor
mov
fisubrs
mov
dec
daa
adc
ja
sub
nop
jbe
test
mov
add
adc
xchg
les
or
lcall
in
fdivl
xchg
mov
mov
inc
iret
insl
addl
adc
cwtl
test
add
fidivl
icebp
xor
bound
xor
shrb
mov
dec
mov
mov
clc
pop
inc
clc
sbbb
lods
or
fisubrl
dec
mov
adc
sbb
push
add
faddl
int3
pop
sar
mov
dec
cmp
cmpsb
popa
adcb
inc
mov
mov
mov
mov
out
and
cs
sbbb
std
mov
add
mov
and
int
les
inc
imulb
sub
jb
jno
push
ret
xchg
test
or
xorb
adc
test
mov
or
push
int
jl
mov
push
cmp
adc
and
ds
jo
shlb
mov
or
adc
adc
xorb
and
inc
mov
mov
aad
mov
inc
test
push
jl
jne
shlb
repnz
bound
insl
jae
out
push
sub
adc
xchg
je
lcall
xor
sbb
sbb
jne
jb
jb
cld
fsave
test
push
mov
test
adc
jmp
mov
inc
in
push
add
dec
daa
jg
jmp
push
push
andl
mov
pusha
cld
ljmp
jns
repnz
std
cmp
cmp
dec
flds
daa
mov
jge
std
test
enter
dec
pop
sbb
lods
dec
mov
decl
adc
inc
mov
sahf
std
xchg
cmpsl
sub
adc
lods
inc
sub
stos
test
out
mov
sub
fs
add
xor
mov
or
daa
loope
inc
or
out
add
andl
mov
lret
push
or
rolb
cmp
sub
loopne
or
or
jae
orb
rcrl
clc
inc
fcoms
sbb
sbb
shrb
dec
out
jbe
adc
sbb
decl
mov
sub
ret
add
loopne
orl
mov
dec
js
mov
sub
sub
jecxz
out
cld
push
std
mov
pop
clc
icebp
in
cmp
xor
push
cmp
cmp
push
imul
jbe
add
sub
repnz
cmp
xor
dec
pop
mov
std
add
orb
cwtl
sub
mov
loope
fcomip
sti
xchg
mov
fs
and
stos
adc
push
xlat
jg
inc
or
shrb
dec
aam
cwtl
insl
test
je
dec
add
call
sub
jae
bound
xor
cmp
add
or
adc
shlb
sti
subb
or
jne
out
and
jl
std
orl
cld
jae
jno
mov
jp
pop
lock
sub
mov
dec
cmp
insl
pop
insl
push
sub
add
mov
cmp
mov
inc
or
fsubrl
cwtl
gs
dec
cs
icebp
push
jg
mov
add
cmpsl
mov
jecxz
xorl
mov
enter
divb
xchg
loope
and
push
call
es
lock
test
lret
shrb
jns
mov
in
jge
mov
cmpb
xorb
repz
or
in
add
sbb
jge
dec
je
fidivs
movsb
lea
enter
jl
push
inc
loope
mov
or
mov
call
or
jo
mov
and
adc
incl
jno
jp
pop
out
incl
clc
adc
ret
out
cli
inc
popf
push
popf
popa
scas
jno
sbbl
shlb
rcr
je
fdivrl
mov
mov
add
xor
or
add
mov
adc
popa
loop
or
sarb
push
repnz
xor
mov
dec
shrb
mov
and
call
in
outsb
leave
xchg
xchg
and
lcall
sbb
arpl
repnz
pop
jecxz
jecxz
lods
test
nop
mov
and
aam
lods
mov
idivl
decl
test
popa
xchg
inc
push
mov
imul
and
xchg
in
mov
in
mov
pop
imul
inc
jo
adc
mov
shl
lcall
add
add
std
aas
std
dec
hlt
outsb
jno
mov
lock
add
fildl
pop
cld
fistpll
int
int
dec
xor
jo
xchg
ret
mov
push
icebp
lods
add
shll
mov
mov
decl
add
adc
loop
push
lods
bound
fldenv
in
icebp
adc
test
aad
nop
mov
data16
xchg
mov
jmp
add
jb
bound
loope
inc
add
add
loopne
mov
rorb
jo
dec
add
ss
test
and
negl
mov
add
dec
mov
cmpsb
sar
aas
inc
clc
test
xor
jbe
test
jmp
cld
fildll
inc
decl
xor
dec
lods
aas
mov
push
js
pop
add
in
aad
mov
xor
arpl
lcall
and
xor
or
fidivl
xchg
adc
bound
push
sub
sub
xchg
push
pop
std
subb
or
mov
ljmp
fildll
xor
pop
xor
xchg
or
xor
add
dec
push
nop
jle
lods
mov
or
or
xchg
stc
mov
add
mov
aam
ds
sbb
negb
add
hlt
icebp
add
movsb
les
pop
sbb
inc
mov
ljmp
fdivs
mov
xor
std
lcall
outsb
jge
js
add
push
cmp
fs
push
and
imul
sub
xor
adc
push
ljmp
cs
mov
pop
lds
push
add
je
adc
dec
push
dec
call
xor
pop
hlt
data16
fistps
ljmp
sub
pop
pop
fistps
mov
inc
or
mov
mov
push
sub
sbb
mov
mov
or
jb
jmp
fwait
push
xchg
sub
mov
and
lret
jg
loop
loopne
ss
push
mov
sub
cmp
test
cwtl
dec
clc
sti
dec
mov
outsb
sbb
lret
mov
lods
push
adc
push
movsl
push
outsb
mov
dec
xor
lods
ljmp
push
mov
movsb
xor
xchg
jge
lea
pop
imul
jns
jg
add
xchg
cmp
and
jg
xchg
add
dec
enter
mov
push
push
xor
sbb
scas
add
adc
mov
jg
out
jns
add
add
inc
jae
rcrl
ret
pop
lock
sub
and
clc
stos
pop
cwtl
jg
sbb
sub
jle
jg
adc
mov
scas
xchg
in
mov
mov
ficompl
out
sub
ja
inc
dec
pop
sub
jae
cli
sub
inc
jne
cmc
arpl
imul
icebp
push
xchg
lcall
push
dec
cwtl
xor
dec
lcall
sti
out
fsubrs
es
roll
inc
xor
in
jg
dec
bound
bound
mov
dec
inc
repz
stos
aas
add
add
cmp
add
pop
sti
es
xlat
pop
loopne
out
xchg
pop
clc
push
insl
sbb
sub
push
jle,pn
out
xor
cmp
lcall
adc
or
jg
xor
xlat
stos
inc
ss
dec
mov
adc
mov
mov
push
addr16
cmp
sub
jb
inc
push
push
inc
add
inc
add
or
fs
or
sub
lock
gs
xor
add
cmp
pop
xchg
push
and
ljmp
pop
jne
mov
or
fbld
push
movsb
jae
aad
adcl
aad
das
clc
cmpsb
add
dec
pop
jo
jge
shll
mov
adc
add
mov
xor
add
jae
stos
unpcklps
popf
mov
js
aas
data16
pop
jo
enter
xchg
xor
jg
dec
dec
adc
jp
dec
out
add
jge
xchg
or
sbb
jg
cmpsb
js
jo
inc
mov
insl
mov
pop
dec
int3
push
add
out
ss
inc
dec
call
sar
mov
adcw
xor
xchg
test
sub
pop
insl
push
dec
cmp
mov
nop
outsb
aaa
mov
mov
int3
add
push
fiaddl
jl
aam
iret
lea
dec
iret
ret
ja
mov
sahf
aaa
or
in
or
xor
in
scas
inc
pusha
jno
xor
push
insl
ljmp
xor
cmpsb
mov
daa
mov
js
push
inc
faddl
rclb
cwtl
movsb
stos
sbb
jl
xlat
xor
insl
and
icebp
nop
cmpsb
mov
incl
push
pushf
fbstp
sub
fisubs
xor
sbb
test
jno
incl
loop
cmpsb
xor
pop
or
add
aad
scas
fdiv
mov
xor
movsb
xchg
pop
loopne
adc
or
mov
inc
lods
pop
mov
pushl
pushf
add
adc
or
lods
jecxz
js
imulb
das
mov
loop
push
lcall
dec
insb
das
xchg
sbb
mov
dec
mov
test
subb
loop
add
repnz
scas
addr16
jmp
cmc
lods
sbb
or
fbstp
jg
xchg
scas
mov
in
jb
xor
add
fabs
xor
loope
lcall
nop
mov
cmp
popa
fcmovbe
add
test
in
lea
ss
mov
mov
jl
or
lock
mov
sbb
or
dec
pop
int
jle
das
insb
inc
ret
lods
dec
mov
mov
push
jno,pt
xor
call
fdivrl
dec
push
xor
sbb
cld
mov
movsb
rclb
xor
in
sbb
aaa
dec
mov
dec
adc
mov
aam
cmpsb
mov
fcomip
fcomp
cld
and
fstp
fcompl
jmp
sub
pop
and
xor
inc
addr16
xchg
jne
aas
or
dec
arpl
jl
pop
int3
scas
push
in
in
cwtl
sbb
push
adc
outsl
pushl
in
enter
sbb
jecxz
jmp
sub
or
cli
outsl
ret
sbb
in
das
inc
xchg
push
sub
jae
clc
add
or
lods
arpl
loope
inc
push
ret
dec
ljmp
pushl
call
int
mov
out
cld
call
loopne
imul
adc
dec
rolb
inc
pop
mov
fnstsw
ljmp
dec
push
sti
inc
adc
mov
sub
adc
repnz
xchg
mov
inc
scas
repz
dec
sub
aaa
lds
or
xor
popf
fdiv
rclb
xor
xor
addb
sub
dec
mov
xor
lret
cs
mov
sarb
jne
sub
test
adc
in
jg
nop
add
and
imul
push
dec
ljmp
in
test
ror
mov
call
aad
sub
lock
imul
sahf
in
add
xchg
mov
repnz
jg
xchg
loope
pop
cmp
andb
pop
out
xchg
pushf
and
jg
mov
dec
xor
jo
and
sbb
jecxz
insb
filds
icebp
sub
cld
pop
inc
loop
ret
and
xor
popa
call
sahf
lds
lahf
shrb
loop
aad
xor
pushl
dec
xor
jo
imul
pusha
sti
js
lods
mov
lret
shlb
inc
and
xor
jmp
imul
push
jne
jbe
cmp
cmp
aas
and
or
jmp
add
lea
adc
or
and
subb
cmc
lcall
repnz
mov
or
punpcklwd
sub
xor
jo
cmp
jg
inc
mov
dec
jb
xor
call
inc
or
add
insb
dec
fisttps
and
push
sub
andb
gs
dec
push
dec
lea
pop
dec
jne
pop
cmpsb
inc
ja
std
dec
fwait
push
lret
pop
push
shll
bound
pushf
jg
ss
stc
adcb
push
push
xchg
and
mov
push
call
icebp
test
in
test
pop
loopne
adc
adcb
add
mov
dec
push
inc
pop
js
mov
sbb
icebp
fisubrs
or
jmp
add
sub
sbb
add
pop
dec
dec
sbb
push
adc
inc
rolb
add
outsl
cmpsl
push
stos
out
out
cld
or
xor
mov
mov
sar
lds
ds
ret
lods
pop
aad
ljmp
jl
in
mov
jg
and
ffree
ss
ror
js
out
and
sbb
lds
int
sarl
sti
sub
mov
mov
cmp
or
push
mov
outsb
jg
adc
lds
mov
enter
cs
add
int3
sbb
push
mov
mov
dec
and
pop
aad
inc
add
xor
cmp
pop
sub
inc
xor
xor
fadd
sbb
pop
dec
lock
rcrb
or
outsb
sbb
add
sub
mov
test
or
mov
adc
mov
pop
xor
push
in
outsb
dec
adc
insl
inc
push
cltd
loope
loop
push
xchg
je
adc
sbb
xchg
test
outsb
scas
xlat
adc
ret
inc
add
iret
adc
adc
adc
hlt
push
add
adc
adc
jo
outsl
jg
jmp
mov
sarb
test
push
lret
jnp
sbb
or
inc
sub
inc
stos
mov
pop
cld
enter
sti
inc
rorb
or
inc
sub
cmpsb
mov
xchg
sub
incl
sbb
fwait
mov
and
daa
push
js
clc
push
pop
mov
lret
enter
inc
loopne
sub
xabort
cld
push
mov
rol
aaa
insb
mov
push
xor
rcrl
mov
imul
rol
add
lods
xor
inc
roll
scas
mov
jg
les
aas
pop
adc
and
pop
push
xor
sar
push
clc
jg
push
adc
cmp
xchg
xchg
dec
std
and
adc
mov
movsb
ret
bound
aaa
xchg
int3
push
pop
sbb
pushl
add
fwait
cmp
mov
push
aaa
jo
adc
movsb
sbb
clc
call
pop
cmp
hlt
dec
inc
or
inc
and
jo
adc
and
adc
into
sbb
sub
push
sub
cmp
mov
mov
inc
add
adc
ror
dec
pop
sub
push
inc
and
mov
incb
aad
push
dec
lds
inc
je,pn
loop
test
adc
bswap
add
loopne
cwtl
add
sti
stos
pop
mov
dec
push
ds
lods
inc
jo
and
rclb
push
pop
dec
sbb
pop
je
enter
xchg
adc
es
mov
add
insb
subl
pusha
dec
and
pop
insb
sarl
inc
aaa
jl
shlb
push
pop
xor
cmc
xor
and
int
shll
popa
inc
sub
and
test
pop
lcall
pusha
jmp
loopne
push
roll
sub
sbb
insl
cli
insl
mov
pop
lock
js
xchg
or
jne
scas
add
push
ret
adc
outsb
add
mov
shlb
or
je
or
push
inc
pop
jae
mov
push
ror
mov
dec
or
push
in
inc
outsb
jno
cmp
cmp
xor
hlt
ds
jo
pusha
filds
add
jb
adc
nop
ljmp
push
out
push
jae
inc
fs
loope
inc
push
jmp
sbb
js
loop
pop
decb
scas
add
xor
mov
mov
ja
stc
and
ffreep
mov
push
pushf
int
lret
adc
sarl
fwait
jle
es
mov
push
sub
adc
fsubrs
inc
into
pop
aam
sub
sbb
mov
stos
test
mov
or
fcompl
in
fmuls
and
popf
cmp
aad
ljmp
lods
rol
xchg
pop
enter
je
xor
rcr
adcb
pop
sub
mov
inc
dec
add
lret
je
mov
jg
mov
adc
fmull
dec
sub
dec
add
mov
cmp
dec
or
and
push
push
addb
mov
add
loopne
add
rcrl
sbb
mov
xchg
ljmp
loopne
cwtl
ds
or
add
jmp
mov
mov
or
mov
nop
and
add
mov
enter
mov
mov
enter
jne
jle
aad
aam
fmull
scas
sbb
or
bound
and
sub
les
movsb
rep
dec
pushf
loopne
hlt
lds
mov
fnstenvs
shlb
cld
lods
pop
adc
rcrb
int3
cltd
sbb
mov
dec
pop
sub
inc
movb
adc
sbb
push
sub
pop
sub
mov
xor
pop
xchg
add
mov
mov
add
or
ret
mov
pusha
insb
and
fwait
cmpsb
mov
lock
sub
test
js
xor
dec
lahf
int
lcall
je
pop
mov
or
dec
lret
add
fbld
lods
fdivl
mov
xorb
idiv
sub
out
dec
mov
faddl
push
sar
aas
push
mov
lcall
dec
fldenv
mov
jg
mov
inc
add
and
push
cmp
loop
cli
adc
jecxz
pop
xchg
clc
pop
test
icebp
ljmp
fisttpll
sti
adcb
adc
ja
lock
iret
push
sub
and
push
je
or
clc
mov
dec
sbb
les
xchg
inc
int3
xchg
mov
xchg
adc
cmp
jns
repnz
xchg
adc
addb
jge
dec
loop
xorl
add
adc
inc
pop
std
sub
or
jge
std
imul
pusha
lcall
orl
jae
mov
scas
cmp
and
std
add
fsqrt
mov
test
data16
sbb
or
adc
dec
sbb
stos
inc
dec
mov
negb
jg
fcomip
or
cld
push
xor
in
test
mov
mov
lock
andb
mov
jecxz
pushl
adc
sbb
adc
sub
movsl
decl
incb
push
inc
sub
push
mov
push
in
decl
push
sub
and
lock
add
jno
xchg
xchg
push
lret
dec
test
xchg
pop
adc
xlat
mov
jae
or
and
pushl
sbb
mov
lds
push
lock
or
ds
add
xor
std
cli
sub
push
adc
sahf
std
dec
cmp
aaa
and
dec
hlt
or
mov
cmp
ljmp
cmp
cmp
or
test
fcmovb
adc
movsb
ret
rcrb
cmp
inc
mov
loop
fisttpl
shll
dec
inc
fiadds
inc
cmp
xchg
repnz
dec
dec
pusha
test
jmp
js
inc
add
mov
fsubl
adc
out
fs
dec
push
push
ret
xchg
call
daa
jno
push
jno
test
xchg
push
dec
mov
inc
add
or
call
xchg
cli
cli
test
fstps
ret
inc
sub
lcall
aaa
mov
inc
sub
xor
pop
inc
pop
push
push
inc
mov
mov
and
mov
or
xor
lcall
into
mov
scas
xchg
aas
xor
pop
hlt
aaa
pop
jp
cld
cmp
mov
rcrl
mov
les
pop
mov
mov
push
ss
js
push
insb
xlat
nop
and
ret
xor
adc
push
mov
xchg
bound
decl
mov
in
sbb
xor
xor
and
or
mov
lcall
xor
jl
mov
je
or
push
jecxz
xor
push
push
subb
inc
repnz
sbb
pop
xchg
jg
incl
xlat
push
mov
aaa
push
dec
pop
adc
dec
jmp
inc
adc
cmp
mov
and
je
add
push
dec
ret
cmpsb
lea
add
sbb
xchg
dec
mov
mov
add
mov
sbb
dec
insb
cmp
mov
mov
add
ljmp
or
add
cmp
in
das
or
scas
push
jecxz
popf
jo
or
call
bound
cmp
outsb
out
mov
add
outsb
add
add
test
dec
push
je
add
push
jb
cmp
dec
add
add
xchg
shrb
dec
add
add
lods
add
add
outsb
jg
incl
add
add
insl
aam
cld
add
add
add
add
std
outsl
sbb
inc
dec
cld
or
mov
adc
scas
mov
push
or
xor
sub
mov
outsb
sbb
popa
fwait
or
mov
add
or
xor
adc
mov
and
mov
push
scas
sbbb
and
and
nop
adc
dec
roll
ficompl
jno
adc
pop
cs
adc
xor
or
adc
jge
cld
inc
add
fwait
add
pop
or
adc
cmpsl
jb
adc
sbb
std
add
adc
and
adc
les
add
pop
or
push
gs
pop
sti
jg
sub
pop
sbb
pushw
insb
pop
shrb
or
adc
cmp
cmp
xor
vmovaps
lahf
sbb
pushl
dec
mov
adc
and
xor
dec
sbb
les
cmp
mov
jb
adc
inc
mov
pusha
fdivrp
adc
popl
dec
adc
sbb
sub
and
mov
incb
push
and
mov
push
adc
daa
mov
adc
add
add
add
loopne
aam
mov
std
xchg
ljmp
or
adc
insb
jb
sub
lret
ja
push
fs
or
sbb
push
or
push
sub
jecxz
cld
fwait
ss
rorl
add
xor
sti
and
inc
clc
bound
and
dec
mov
cmp
push
or
push
mov
ja
cmp
lock
or
and
mov
ljmp
pop
loop
pop
xor
and
adc
and
and
das
scas
or
and
into
popa
loop
xor
or
and
shlb
xor
jg
sub
arpl
add
xor
adc
jno
push
out
test
call
outsb
xor
xchg
rcrb
inc
mov
push
mov
lea
fcomip
pushl
inc
and
add
sub
loope
push
in
aas
xchg
push
je
and
adcl
cmp
mov
insl
inc
add
gs
inc
loopne
in
cmp
mov
mov
sub
mov
push
xchg
lods
dec
xchg
push
mov
mov
or
popf
test
and
inc
pushf
add
and
call
sub
sub
and
test
and
aaa
xor
scas
nop
negb
add
jb
cmp
push
mov
jae
jb,pn
push
lods
add
stos
mov
xchg
mov
hlt
aaa
cmp
insb
pop
jbe
faddl
pop
bound
lcall
push
dec
pop
jmp
xchg
in
incb
push
or
jbe
add
imul
jl
fidivrs
mov
dec
mov
sub
lds
sbb
std
fs
jl
notb
dec
and
outsl
and
adc
ljmp
dec
bsr
pusha
ret
push
jp
imul
movl
adc
lret
dec
push
sub
lods
xor
xor
ret
outsl
push
xchg
mov
xor
mov
cli
and
inc
jns
jbe
mov
add
xchg
adcl
dec
xchg
cli
xchg
insb
sub
xchg
push
stos
xchg
in
cmp
std
mov
out
in
xor
test
in
arpl
out
jno
outsb
pusha
dec
mov
xor
cli
or
out
sub
or
sub
jno
inc
cmc
ja
aam
push
test
es
add
add
int
insl
mov
loope
and
sbb
mov
ja
push
cmpsb
rclb
fsubs
sbbb
in
je
mov
cmpsb
and
sub
gs
mov
sub
dec
das
clc
inc
pop
je
std
rol
sub
pop
std
inc
mov
sahf
shrb
mov
adc
pop
adc
mov
insb
and
pop
ret
sahf
sbb
ljmp
sub
jg
mov
push
rcrl
inc
js
cmp
je
mov
jo
xor
decl
mov
sub
and
xchg
xchg
dec
push
jo
movsb
adc
std
arpl
sbb
inc
shlb
mov
and
pop
jne
mov
and
pop
lock
lcall
popa
inc
and
aaa
lcall
in
in
and
sbb
sub
pop
stc
pop
or
imul
push
xchg
rorb
insl
shl
inc
adc
or
je
pusha
adc
sub
mov
shll
hlt
xor
rolb
imul
and
push
push
mov
pop
pop
xchg
into
cmp
cmpsb
xchg
cmp
movsb
ret
and
mov
loop
or
imul
fiadds
loopne
xlat
add
sarb
sub
loopne
cmpsb
outsl
incl
xor
cmp
daa
inc
jmp
add
pushl
sub
shll
rcll
aaa
inc
sub
dec
test
mov
mov
and
mov
data16
add
dec
add
mov
in
jg
loop
loope
mov
gs
sbb
dec
jo
addr16
adc
fstpt
inc
aad
rcll
xlat
jb
sbbb
insl
sub
filds
jmp
rolb
sbb
and
xor
loope
jge
jge
arpl
ret
jb
sub
jo
xor
mov
insl
sbb
gs
cltd
inc
and
jns
hlt
mov
adc
xchg
fcmovbe
jae
je
lock
out
roll
shrb
and
add
lds
cld
mov
mov
rcl
sbb
dec
ret
xorl
mov
cmp
leave
ss
jp
ss
clc
push
pop
jmp
std
notl
pop
clc
dec
adc
cmpsb
sub
and
out
stos
sub
jg,pt
call
sub
sub
add
cmp
dec
out
xchg
xor
dec
int
xchg
shr
clc
call
or
mov
jno
in
out
mov
imul
shrl
add
push
push
jge
adc
rcl
subl
popf
and
pop
or
mov
push
adc
ss
pop
and
fildll
out
add
add
imul
mov
shr
or
call
out
sbb
pop
xchg
add
cli
inc
cmp
dec
xchg
add
push
icebp
movsb
es
inc
adc
cmp
js
popa
out
popf
and
popf
rcrb
js
dec
mov
pop
cwtl
rclb
shl
lods
mov
mov
mov
fwait
repnz
ret
xchg
js
or
in
sahf
mov
rorl
mov
movsl
or
cmp
cmp
cwtl
xchg
pop
or
ljmp
jno
sar
inc
xchg
nop
pop
add
leave
mov
insl
adc
push
ljmp
das
add
stos
incl
dec
andb
repnz
jl
lock
and
or
add
out
sub
fstpt
and
push
lret
mov
inc
push
dec
cmp
mov
fcomip
jp
aas
adc
imul
mov
shrl
adc
frstor
sbb
sarb
mov
adc
jge
stc
push
ret
or
cmp
lea
mov
dec
pushl
cwtl
jge
xor
repnz
xchg
mov
out
cmp
loope
jo
mov
xchg
xor
xor
add
sub
fucomp
mov
sti
push
add
int
les
inc
in
xchg
outsl
clc
ljmp
adc
push
mov
mov
xor
int
arpl
test
pop
sub
std
adc
mov
scas
pop
repnz
add
adc
add
sbb
fiadds
push
push
jno
fiaddl
inc
dec
inc
std
scas
add
stos
add
add
add
imul
push
lahf
jl
jle
out
and
ret
aaa
add
aas
mov
inc
push
jbe
popa
mov
outsl
jnp
call
pop
imul
test
mov
mov
push
pop
jp
jo
add
add
outsl
rorl
jbe
out
incl
add
add
mov
jne
push
ljmp
imul
adc
add
cltd
add
mov
sub
inc
pop
std
data16
mov
or
jo
pop
add
outsl
pop
add
dec
pushl
in
add
inc
push
insb
jae
adc
arpl
insl
adc
divb
movsb
add
adc
ss
filds
lcall
popa
test
lock
js
gs
incb
add
jmp
pop
push
dec
add
xchg
shrb
adc
adc
add
and
lret
add
fcmovnbe
fdivrs
js
insb
jno
enter
add
outsb
dec
incl
xor
ljmp
xor
repnz
data16
unpcklps
cmp
cmc
adc
and
int3
adc
adc
mull
shlb
daa
lods
inc
in
xchg
sbb
sar
mov
jo
xchg
adc
inc
adc
les
add
mov
xchg
adc
adc
pushl
jl
sbb
mov
and
sbb
and
cmpsl
or
mov
dec
and
or
inc
mov
outsl
adc
sbb
cmp
mov
adc
pop
xor
sbb
sub
pop
test
sbb
and
jecxz
jne
add
addb
mov
adc
mov
imul
xor
add
xchg
inc
adc
mov
jl
stos
sub
and
ljmp
outsb
adc
jp
cmp
push
sub
test
cmp
mov
adc
inc
mov
mov
nop
push
inc
pop
adc
jb
jbe
inc
push
pop
and
pop
mov
mov
jns
enter
imul
and
add
inc
movb
insb
xchg
jp
adc
pop
iret
add
adc
pop
icebp
adc
dec
add
sbb
pop
clc
aad
incl
inc
insl
sbb
test
pop
popa
xor
push
lods
das
push
mov
sbb
and
cmp
mov
lock
lds
inc
inc
push
stos
ret
outsl
jg
adc
arpl
and
inc
inc
and
scas
js
jge
jge
or
cwtl
sbb
out
cld
mov
jge
adc
and
lock
adc
sub
cmp
cmp
xor
cwtl
xchg
movsb
cmp
xor
push
jp
push
add
incl
call
add
pop
and
xchg
and
insb
lea
adc
xor
addl
sbb
xchg
add
hlt
daa
push
jb
es
out
pop
loop
jle
push
sub
fwait
sub
jp
lret
aam
insb
in
rclb
es
popf
mov
sub
movsl
bound
sub
push
xchg
mov
pop
sub
pop
push
push
adc
in
jae
and
pop
mov
adc
push
cltd
mov
pop
add
insl
clc
fwait
lcall
add
mov
clc
faddp
mov
insl
push
insl
mov
cwtl
xchg
mov
or
pop
mov
das
push
sub
rorb
cmp
cmpsl
je
loopne
mov
cmp
pop
mov
xor
or
cmp
mov
and
pop
jl
stc
jo
sti
jb
inc
adc
fs
mov
ja
mov
sar
mov
xor
push
int
int3
inc
add
hlt
and
mov
lds
into
or
popf
add
movsb
and
adc
pop
xor
or
inc
adc
push
lcall
lcall
je
adc
xor
adc
in
sar
or
mov
add
outsl
lcall
or
lds
mov
inc
or
inc
pop
and
dec
movsl
pushf
sbb
add
call
add
ljmp
shlb
adc
roll
aam
add
inc
mov
fists
or
ret
aam
add
cmp
or
adc
fstl
outsl
and
jge
pop
mov
add
push
popf
je
add
cmpsb
inc
or
sub
fbld
and
add
cmp
mov
in
mov
add
je
dec
inc
aam
scas
outsl
pop
mov
jae
in
mov
dec
std
pop
std
push
sarl
mov
lret
icebp
xchg
adc
arpl
test
push
add
cmc
and
clc
mov
mov
add
popa
sti
inc
ret
icebp
adc
mov
fidivs
xchg
clc
and
popf
jbe
outsb
mov
inc
lock
es
and
bound
cmp
hlt
lds
xchg
jbe
ljmp
popa
or
jo
shll
nop
popa
sbb
sahf
icebp
add
inc
add
pushf
add
decl
xor
jle
mulb
repz
test
xor
decl
subl
xchg
jg
inc
xchg
cwtl
inc
jae
lahf
add
rorl
push
mov
and
in
and
xor
push
mov
pop
jo
fucomip
jg
add
std
jmp
fcomp
mov
jg
pop
cmp
cmc
ds
rolw
roll
jge
or
subl
push
mov
push
or
cwtl
in
adc
push
xchg
inc
sub
mov
int
jno
and
mov
mov
sub
sbb
pop
push
jo
pushl
data16
xchg
ret
ljmp
outsb
test
bound
data16
rolb
fistpl
xchg
xchg
or
arpl
xor
ret
jp
jg
cmp
call
pop
adc
add
mov
push
movsl
jbe
mov
decl
loopne
insb
daa
pop
outsb
jno
add
adc
rep
mov
add
data16
pushl
sub
push
jno
push
rclb
outsb
pop
cmp
lahf
push
lods
daa
pop
adc
pushl
orl
movsl
mov
jne
loopne
fwait
cmp
sub
xor
fisttps
push
adc
push
sub
call
je
cs
mov
or
and
inc
lret
xor
pop
data16
adc
and
xorl
push
shrl
fcmovnb
sbb
cmpsb
idiv
jo
mov
inc
daa
aam
sbb
push
push
mov
xchg
aas
xlat
mov
and
pop
roll
xor
shlb
xor
sti
jg
jle
je
sbbl
jge
jno
cwtl
inc
shll
cmp
mov
jge
jge
jnp
xor
loope
popa
arpl
push
jge
lea
jmp
lea
jle
stos
repz
enter
adc
fwait
pop
xlat
inc
fadds
ret
xor
add
outsl
pop
pusha
int3
mov
mov
lds
or
adc
test
aas
out
add
arpl
loop
and
outsl
outsl
mov
xchg
sbb
inc
sbb
xchg
and
dec
and
pop
loope
dec
and
mov
sbbl
lods
call
sub
sbb
dec
or
inc
fs
icebp
cs
add
imul
jg
enter
clc
jae
xlat
mov
sarb
adc
add
xor
aaa
mov
mov
cmpsl
cld
popa
sbb
jecxz
jp
or
les
sbb
fwait
adc
sbb
push
push
push
push
mov
hlt
jo
jmp
stos
fdivrp
in
loope
jl
xor
pusha
jb
outsl
mov
inc
cli
lcall
movsl
dec
scas
mov
int
int
movsl
ljmp
or
mov
in
sti
mov
sub
mov
and
std
xchg
imul
lret
cmc
mov
cmp
nop
fdivs
pop
mov
call
mov
imul
fisttpll
pushl
cmp
push
mov
out
sbb
sub
xchg
adc
jg
ja
dec
xchg
mov
pop
loopne
outsb
test
and
jne
add
cmpsb
push
push
ret
clc
outsl
pop
inc
adc
lock
cmp
mov
fdivl
push
mov
pusha
fsubl
sbb
repz
add
int
sbb
adc
incl
enter
dec
mov
lea
add
fldl
pop
in
pusha
inc
ljmp
sbb
stos
loopne
in
repnz
add
sub
lods
test
add
inc
dec
repz
add
rclb
in
arpl
jae
cmp
or
jno
fwait
sub
push
mov
stos
std
cs
std
pushl
cld
lods
xchg
cli
and
add
or
inc
hlt
std
xchg
xor
loopne
adc
loop
xor
push
jg
incl
push
add
sbb
std
sti
cli
cmp
jae
jp
mov
pusha
xor
or
xor
aam
mov
pop
xor
imul
mov
and
xor
jmp
enter
or
fcomip
jg
xchg
das
icebp
xor
repz
push
sub
sahf
and
call
and
cmp
cmpsl
sub
dec
clc
mov
insl
fldenv
ret
xchg
fisubrs
ljmp
cmp
sub
cmp
call
jg
nop
cmp
xor
sarb
push
repnz
mov
in
add
lods
jo
add
add
inc
mov
dec
das
movsb
pop
push
icebp
shl
jmp
mov
mov
push
stc
bound
push
in
roll
mov
rcr
movsb
adc
sub
push
add
and
push
jno
jae
cld
ret
jbe
mov
in
inc
push
incb
pushl
into
add
push
call
enter
pop
cmp
mov
mov
shrl
sbb
jo
jmp
in
add
pop
or
jb
xorb
inc
loope
loope
aad
mov
or
pop
or
push
int3
inc
xchg
mov
mov
gs
jl
mov
pop
mov
outsb
loope
and
add
insl
pop
sub
std
in
adc
insl
call
lcall
dec
jge
dec
and
insb
push
loope
or
imul
test
rorb
inc
ret
push
mov
out
leave
add
jbe
hlt
adc
jno
jecxz
cmp
sbb
frstor
filds
pop
cmpsb
add
in
jne
test
jecxz
xchg
jmp
test
push
mov
inc
and
ret
aam
sub
jbe
cmp
hlt
call
jae,pn
enter
dec
jle
in
loop
sub
push
movsb
loope
cld
ljmp
or
lds
xchg
adcb
mov
scas
js
xchg
nop
imul
xor
je
flds
xchg
push
pushl
cwtl
lea
adcl
xchg
dec
imul
fdivl
popf
lods
lock
jg
popf
cmp
cmp
mov
mov
rorl
or
inc
or
mov
jno
adc
movsb
lods
pusha
ret
insl
imul
mov
mov
dec
add
add
pusha
push
dec
or
dec
or
lcall
loopne
push
jl
sarl
mov
pop
push
or
loop
inc
inc
and
inc
js
mov
sub
push
push
fbld
lods
imulb
pushl
jecxz
cltd
sub
and
incb
inc
pop
push
pop
pop
inc
jbe
jg
add
insl
scas
shlb
jge
stos
jge
int
jge
lods
dec
decl
xlat
sbb
jge
add
mov
in
jno
movsl
add
dec
mov
cmpb
loope
mov
pop
sbb
int
dec
push
dec
cmp
lcall
push
jne
cmp
bound
lods
movsl
imul
mov
pop
stos
call
movsl
call
lods
lea
adc
lcall
dec
cwtl
add
mov
int
int
lock
sbb
incl
and
roll
loope
jno
orl
xor
pop
popa
es
inc
loope
arpl
addl
sbb
add
fs
enter
push
xchg
dec
cld
lcall
push
inc
mov
mov
or
add
loopne
out
fcmove
cld
in
mov
xor
aam
mov
pop
inc
sar
mov
clc
rol
mov
push
pushf
ljmp
es
xchg
mov
and
sbb
arpl
push
sahf
rcll
iret
or
mov
push
sbb
and
dec
inc
jle
nop
pushf
bound
push
repz
rcll
mov
and
cmp
nop
xlat
push
mov
xchg
cli
jno
loope
pop
mov
int
cmp
incl
bound
rolb
sub
pop
fnstsw
scas
sub
mov
jecxz
or
add
insl
dec
cld
push
rcr
mov
and
sub
inc
mov
frstor
add
loop
scas
sar
bound
mov
mov
imul
icebp
add
adcl
scas
cli
and
mov
jbe
hlt
push
sbb
fcomip
outsl
add
cmp
jbe
es
add
sbb
in
pop
mov
xchg
and
cwtl
mov
ss
cmp
add
dec
shll
jl
inc
stos
or
push
insl
pop
xchg
loopne
sbb
xor
jle
cwtl
mov
sbb
repnz
ret
ds
push
cli
sbb
decl
mov
cmpsb
add
sti
or
adc
sbb
or
ljmp
and
dec
imul
mov
jno
adcl
pop
inc
push
nop
lcall
mov
add
pop
and
push
call
shl
aad
adc
in
jae
mov
mov
push
subl
fldt
pop
leave
repz
add
insl
movsb
pusha
pop
dec
push
ret
mov
jo
mov
add
push
adc
es
inc
mov
mov
js
movsb
adc
mov
ficomps
sub
ret
or
dec
adc
pop
dec
or
sbb
jmp
cmp
loop
add
jb
dec
imul
push
scas
in
jmp
add
push
call
xchg
shl
adc
fistps
filds
or
push
adc
nop
inc
jno
sbb
xorl
shlb
pop
sbb
xor
jnp
lea
push
mov
inc
add
mov
lea
ljmp
dec
inc
and
mov
orl
push
daa
xchg
inc
jb
and
pop
ds
mov
adcb
cmp
fimull
inc
adc
inc
outsb
popf
dec
popf
pop
mov
sbb
fwait
add
loop
mov
or
mov
xor
fs
mov
int
lea
sar
orb
adc
xchg
ficoml
adc
mov
inc
cmp
loopne
decl
mov
test
lods
sbb
lods
mov
jae
xchg
push
cwtl
dec
xorb
test
push
mov
jnp
popf
ljmp
call
daa
or
outsb
xchg
test
sub
shrb
jo
pushl
call
mov
mov
imul
loop
jecxz
dec
and
repz
sbb
bnd
adc
adc
jle
clc
mov
xor
jle
orb
sbb
dec
adc
adc
xor
push
dec
cmp
inc
or
std
mov
addl
stos
add
add
fsubrl
dec
add
adc
lea
std
rcrb
and
sbbb
andl
ljmp
jl
dec
mov
cmpsl
imul
add
pusha
jl
sub
sub
jne
mov
add
push
pop
push
jae
and
js
add
jae
pop
jg
mov
jmp
add
add
add
mov
mov
push
push
add
mov
mov
int
adc
sub
jae
loop
and
js
inc
out
and
adc
leave
jl
les
ss
xor
adc
push
mov
ljmp
or
and
and
pop
inc
or
and
dec
fs
mov
hlt
popa
notl
add
adc
inc
inc
and
xchg
and
add
push
lock
adc
sbb
shlb
adc
dec
mov
add
mov
outsl
pop
andb
adc
rclb
adc
in
es
cmc
jmp
sbb
stos
or
mov
jbe
or
inc
adc
inc
lock
ret
in
cmp
cmp
sub
sbb
sbb
imul
and
lcall
xor
data16
lret
adc
adc
and
jge
sub
adc
adc
add
sub
xor
push
inc
sbb
or
insl
add
adc
adc
inc
sub
and
and
rolb
clc
stos
dec
lods
sbb
xor
cs
add
bound
inc
aas
lret
inc
mov
testb
pusha
sub
incl
dec
bound
dec
push
inc
push
pop
or
dec
inc
or
mov
mov
and
outsl
add
dec
clc
pop
inc
imul
ret
ljmp
push
push
ljmp
lcall
dec
xor
bound
sbbb
jo
add
pop
xchg
and
hlt
loopne
pusha
mov
dec
loope
dec
sub
scas
xor
push
add
test
jbe
movsb
pop
nop
mov
adc
sbb
push
jb
pop
cli
and
addb
sbb
xor
pop
and
pop
repnz
and
add
outsl
adc
insb
xor
fimuls
imul
gs
add
pop
xchg
jge
ret
pushl
sub
jo
pop
inc
jne
addb
cli
xor
call
adc
loop
sbb
jge
lea
sbb
pop
sbb
daa
notb
jg
mov
fadds
jb
inc
dec
inc
add
lcall
push
pushf
push
lret
inc
ret
call
adc
sbb
inc
orb
and
push
subl
pop
ficomps
in
in
fcomip
rorb
mov
mov
mov
xchg
and
adc
pop
movsl
stos
or
pop
mov
outsl
mov
jecxz
jle,pn
addl
and
decl
popa
dec
daa
inc
mov
sub
ds
sbb
xor
test
fcomps
push
stos
inc
inc
arpl
push
or
mov
loope
popa
mov
ss
cmpsb
into
add
sub
xchg
sar
xchg
imul
push
mov
inc
bound
lea
adc
mov
push
mov
jno
mov
push
mov
jg
outsl
scas
rep
mov
jge
lfs
and
andb
xchg
aam
mov
or
xchg
bound
nop
dec
pusha
mov
roll
jg
mov
mov
ret
inc
inc
mov
add
leave
les
out
mov
ret
inc
push
test
pop
pop
mov
cmpsl
mov
cmpb
and
xchg
inc
inc
pop
adc
add
shlb
stos
mov
cmp
jle
and
gs
stos
das
sarb
pusha
addr16
rcrb
das
jle
shlb
outsl
ret
bound
lcall
int
lret
ss
stos
mov
or
testb
jnp
in
pop
out
std
incl
fldl
mov
pop
add
or
cmp
mov
xlat
ljmp
jg
cs
inc
je
mov
loope
mov
imul
lcall
pop
gs
arpl
adc
jge
outsl
push
sub
add
xchg
in
pop
ljmp
jo
inc
jb
mov
rorl
push
shlb
or
in
pop
jno
or
cli
mov
fidivs
jmp
mov
mov
sbb
inc
ss
in
ret
mov
call
inc
add
add
jae
aam
clc
cmp
ljmp
stos
les
mov
mov
sub
pop
inc
cbtw
and
mov
mov
mov
lcall
jmp
cmp
push
ret
mov
pop
pop
insl
cmp
xchg
fwait
pop
adc
rorl
loope
or
mov
xor
ljmp
mov
lcall
pushf
shll
rcl
mov
andl
es
out
pop
sub
loopne
cmp
sbbb
lcall
adc
in
inc
mov
sub
in
cmp
sub
xchg
rorl
pop
inc
xchg
add
pop
bound
cmp
loopne
lock
mov
cmp
add
pop
dec
popa
daa
dec
cmpsb
dec
inc
cmp
or
aam
mov
lea
shrb
mov
lcall
cmp
int3
pop
xchg
fisubrl
jg
rolb
dec
in
outsl
insl
stos
pop
and
dec
adc
imul
push
cld
shlb
fadd
cmpsb
sub
pop
lock
push
add
je
clc
jbe
mov
sbb
insl
decl
jle
push
popf
and
aad
shlb
sub
push
add
adc
sarl
popa
xchg
add
jg
hlt
incl
inc
cmp
ret
ret
jae
cltd
bound
pushl
sar
jnp
or
cmp
insb
sarl
inc
scas
lea
addr16
lcall
add
xchg
xor
sub
ret
sub
fidivl
mov
dec
xchg
mov
adc
and
add
cmpb
jno
outsb
mov
lock
out
orl
push
cli
dec
shrb
inc
cmc
idivb
adc
or
fsubrs
lea
sub
xor
fistps
jg
mov
ret
ficoml
cmp
mov
jne
or
call
xchg
mov
jo
icebp
out
ret
lcall
mov
adc
mov
movsl
shlb
cli
addr16
lcall
and
popf
mov
cmp
shll
adc
mov
ljmp
or
mov
out
jge
or
fdiv
and
pop
dec
stos
sub
jge
mov
cs
popf
hlt
repz
lock
jb
jbe
lock
icebp
cwtl
push
mov
test
popf
and
xchg
jg
outsl
jbe
movsl
or
sub
sub
lods
shll
fisubrl
or
test
aaa
scas
cli
add
and
push
add
dec
rcrl
jmp
fs
mov
and
shll
jae
pop
scas
aas
add
xchg
leave
mov
insl
fbld
adc
push
popf
rclb
pop
inc
add
incl
mov
mov
outsb
aas
push
jbe
jb
and
ret
jg
pushl
shr
or
jo
add
pop
jle
dec
int
adc
xchg
push
xchg
cmp
fcoml
jb
andl
arpl
add
jb
mov
adc
push
lock
gs
lock
insb
add
fidivl
js
jmp
popa
jo
loopne
fs
mov
push
shll
jo
add
jge
sub
dec
addr16
ljmp
xor
push
mov
popa
lock
sbb
add
clc
inc
into
fstp
fucomp
fnsave
jge
jecxz
imul
fbstp
lcall
scas
mov
mov
add
cli
ljmp
sbb
lcall
rolb
mov
add
jno
das
xchg
add
mov
ret
push
sub
jb
adc
xchg
push
mov
mov
add
add
clc
add
imul
pusha
into
jp
push
inc
inc
mov
cld
xchg
aas
add
movsb
ss
ja
jo
add
lret
jne
sub
adc
add
xchg
add
loope
fdivl
cmp
out
jle
add
mov
mov
cmp
je
popf
hlt
into
test
push
pop
jne
loopne
sub
insb
out
fisttpll
sub
add
pop
inc
dec
add
jo
mov
push
and
adc
insl
lods
add
xlat
add
popa
das
adc
lock
fs
sbb
pop
or
push
mov
mov
jo
adc
je
or
and
add
hlt
int3
sub
test
das
clc
push
add
dec
xchg
adc
add
flds
jmp
cwtl
lods
add
out
loop
les
lret
and
cli
adc
or
pop
outsl
sbb
push
pushf
add
ret
lret
mov
jbe
adc
add
push
and
sub
mov
inc
mov
mov
loopne
popa
shl
cmp
sbb
mov
adc
or
xchg
and
outsb
movsb
push
pop
lea
jne
ljmp
sbb
push
add
add
push
outsb
add
clc
outsl
or
arpl
and
add
adc
cmovge
adc
std
and
movl
dec
push
nop
push
sub
adc
xor
gs
sbb
cmp
adc
aaa
sbb
add
or
sbb
shlb
jg
mov
dec
cmpb
sub
add
adc
pop
jo
outsb
faddl
das
adc
arpl
sub
jbe
adc
adc
dec
pop
arpl
jo
ret
pop
sub
ljmp
inc
dec
and
xchg
sbb
lds
dec
daa
jne
movb
mov
scas
sub
cmp
incl
xor
cmp
cli
inc
ljmp
and
ja
mov
insb
sub
add
xchg
test
out
add
sbb
push
dec
test
cmp
or
xchg
adc
pusha
add
sub
lods
mov
insb
lcall
add
scas
cmp
dec
scas
dec
pop
arpl
cwtl
adc
add
push
icebp
xchg
sub
inc
jg
or
lret
dec
bound
bound
jae
add
arpl
loopne
adc
jg
push
inc
out
xor
pop
jge
add
pop
insl
scas
jge
jb
adc
xor
push
mov
insb
sub
int3
adc
or
adcb
inc
sbb
jb
mov
add
outsl
dec
pusha
xchg
mov
popa
push
push
push
or
push
and
movsb
lahf
jge
int3
and
adcb
push
decl
sub
and
add
das
mov
push
test
addr16
popa
mov
ljmp
incl
jg
add
jge
xor
addr16
cld
or
ljmp
sbb
jnp
test
scas
cwtl
loope
outsl
sbb
ret
adc
inc
jg
jg
cmp
popf
inc
popf
push
popf
pop
adc
pop
test
repnz
xor
push
out
mov
mov
xor
adcb
jae
adc
and
clc
inc
mov
gs
xor
outsl
scas
popf
push
aam
popf
add
call
push
lret
or
or
cs
adc
xrelease
adc
xorl
or
nop
lods
adc
xor
jns
movsb
bnd
sbb
call
cld
pop
pusha
cmpsb
mov
lods
add
or
jns
stos
mov
inc
mov
clc
mov
std
fbstp
push
mov
jne
mov
rclb
call
repnz
nop
sbb
push
adc
or
xchg
dec
xor
push
jno
dec
mov
mov
adc
ret
xchg
std
inc
mov
mov
test
adc
mov
xchg
loop
loop
add
fbstp
es
sub
popa
loopne
push
mov
or
mov
xor
mov
jg
cmc
mov
push
cld
adcl
push
shll
push
cs
fs
imulb
cmpsb
sbb
fidivs
inc
aam
out
pop
movsl
pop
xor
cmpsb
movsb
popa
aas
jb
xlat
sub
sar
mov
sub
or
orl
xchg
addb
les
cmp
mov
sub
mov
add
loope
xor
jae
in
jo
call
test
pop
jle
add
and
leave
in
fldln2
test
std
adc
inc
loope
mov
lock
mov
cli
push
stos
xor
inc
mov
not
dec
std
nop
adc
rcrl
daa
lret
std
add
fcomps
rol
adc
inc
and
in
subl
xor
or
inc
or
gs
faddl
rorb
push
sbb
loopne
arpl
sbb
and
mov
popa
add
jbe
pop
push
push
loopne
cwtl
sarb
sub
mov
sbb
lcall
xchg
push
mov
mov
out
int
subb
cmp
pusha
push
lds
ret
xor
xlat
stos
and
push
inc
pusha
jb
cmp
add
dec
test
insb
add
cmp
dec
icebp
js
mov
mov
and
rclb
cmp
arpl
fidivs
loope,pn
rcrl
pusha
and
hlt
aas
fimuls
cmp
popa
mov
insl
movsl
es
les
insb
push
test
mov
fcomps
orb
pop
pop
mov
add
adc
push
dec
jle
mov
pop
movsb
and
add
test
clc
repz
cld
push
popa
add
dec
pop
rcr
loopne
cli
push
fdivl
jp
dec
int3
pushl
cli
icebp
imul
jno
imul
or
and
outsl
adc
pop
mov
push
xchg
ret
dec
inc
ss
mov
xchg
pop
mov
outsl
pusha
jno
xchg
aam
xor
xorb
xchg
or
pop
ljmp
sub
lods
mov
add
cmp
enter
pop
or
jae
mov
pop
js
adcb
push
incb
add
lock
aaa
push
dec
rorb
outsl
jnp
into
pop
test
mov
add
shrl
icebp
jo
inc
shlb
incb
test
rclb
insl
or
sbb
mov
or
ret
hlt
lods
loop
or
xchg
arpl
mov
add
filds
jnp
mov
xchg
cltd
jmp
and
ja
cli
mov
addb
jge
inc
jl
scas
jnp
ja
incl
adc
and
lds
lea
lea
mov
jne
cld
ljmp
pop
das
add
add
pushf
push
mov
pop
insl
jg
std
pop
sbb
pop
cmpsb
dec
and
cwtl
jno
lcall
and
mov
fisubl
loopne
sbbb
jne
adc
cmp
popa
mov
dec
add
fstl
fldl
sub
outsl
sub
push
mov
sbb
jl
mov
or
movsb
insl
mov
jo
cmpb
jns
nop
rcrl
clc
call
stos
sarb
gs
add
push
dec
cltd
mov
mov
sbb
push
jo
add
cmc
jl
push
push
cmpsl
ss
adc
fsubrs
adc
inc
in
insb
add
fsubl
xor
pop
ret
pop
add
adc
pop
adc
test
and
test
adc
scas
pop
xchg
hlt
jne
or
imul
fcomps
mov
movsl
jne
add
pop
add
mov
mov
call
les
dec
loop
int
and
and
gs
test
push
insb
jge
pop
and
dec
mov
xchg
add
mov
je
inc
mov
jo
add
pushl
push
outsl
mov
xor
pop
add
add
adc
mov
dec
adc
sbb
jbe
push
fidivs
mov
pop
inc
das
orb
or
ret
cmp
add
call
sub
push
jo
stos
add
jne
test
cmp
int3
pop
imul
aaa
xor
add
ljmp
add
les
out
pop
and
inc
push
adc
outsl
int3
xor
and
jp
inc
add
filds
outsb
adc
test
pusha
and
out
outsl
inc
pusha
push
adc
adc
lahf
adc
or
add
pop
inc
adc
outsb
js
dec
jo
sub
dec
incl
negl
pop
sbb
mov
popa
fs
add
sbb
cmp
je
add
int
sbb
popf
ret
sbb
call
push
lahf
sbb
add
mov
sbb
mov
fists
cmp
fiadds
cmp
jb
cmp
mov
inc
sub
mov
mov
sbb
cmp
adc
mov
xor
xchg
jb
push
movlps
jo
adc
or
adc
xor
ds
idivb
daa
insl
push
adc
fildll
sub
sbb
inc
decb
and
sbb
pop
pop
sub
add
adc
rolb
push
lcall
or
inc
mov
data16
pop
and
and
scas
pop
lock
js
add
and
dec
jl
pop
add
mov
or
cli
or
jmp
push
lret
test
adc
jo
outsb
shlb
mov
scas
xor
xor
popa
or
xlat
xor
mov
xor
ss
pop
dec
stos
in
push
mov
in
lcall
xchg
retw
and
sub
je
and
sub
cld
add
add
add
jno
incb
pop
or
xor
inc
out
sbb
add
mov
add
dec
lret
adc
add
xchg
insl
hlt
xor
dec
add
push
inc
xchg
dec
adc
jno
out
lods
dec
sar
push
std
and
dec
xchg
cmp
idivb
or
and
in
push
adc
adc
dec
sbb
mov
jno
adc
outsl
cmp
sub
clc
mov
push
and
or
xchg
enter
icebp
push
cld
ja
or
popf
and
sub
loopne
inc
mov
mov
jnp
mov
rolb
jl
add
adc
jnp
and
es
push
inc
cmp
in
popf
adc
cmp
add
pop
and
mov
mov
out
push
call
inc
je
cmp
jbe
xchg
shll
and
jne
lods
ds
jno,pt
dec
test
xchg
jle
jle
orl
fmuls
inc
clc
mov
adc
jno
fisubs
mov
xchg
mov
or
and
js
test
mov
cmpsl
imull
jbe
mov
pop
gs
into
cmp
dec
sub
int
lds
mov
push
jg
ret
test
or
or
call
ljmp
sarb
and
test
into
popf
sbb
incl
pop
fidivs
and
adc
fucom
cli
cmp
pop
lock
pop
cmp
adc
call
aad
je
or
jecxz
pusha
sarl
je
mov
and
mov
stos
mov
xor
cmpb
ret
fcmovb
adc
xor
scas
push
int3
adc
inc
jb
lock
adc
addb
and
shl
add
pushl
loopne
inc
and
sbb
in
inc
cli
negb
call
je
ljmp
clc
scas
xor
ds
inc
adcb
sbb
scas
mov
std
xor
es
sbb
push
mov
out
fsubr
add
clc
fdivs
scas
clc
in
call
std
sbb
mov
xchg
cmp
ret
subb
inc
test
fs
pop
jne
call
jmp
cmpsb
or
test
std
in
std
rol
pop
jae
sarl
adc
dec
insl
pop
insl
repnz
clc
sti
les
jno
push
andb
or
adc
dec
jne
cli
std
push
loope
inc
lods
inc
push
and
pop
int3
push
loopne
adc
lods
and
mov
popa
js
outsb
nop
inc
fadds
cld
jno
and
lock
mov
loopne
jle
loope
aam
add
mov
repz
pop
cmc
push
shlb
mov
fwait
scas
clc
ljmp
cmp
lea
call
std
outsb
stos
cld
aaa
cmpsb
mov
pop
dec
pop
les
movsb
sub
sub
fbld
push
int
lods
repnz
inc
popa
adc
sub
and
mov
shll
cld
popa
cwtl
cmpsl
push
andb
adc
mov
aam
fisubl
lock
push
pop
add
and
sbb
call
dec
jno
xor
idiv
jg
or
mov
repnz
inc
mov
jb
inc
mov
popa
xlat
outsl
jg
xor
dec
mov
inc
xor
dec
push
and
dec
idivb
sti
test
and
ss
sbb
lret
pop
movsb
pop
mov
call
add
push
sbb
add
imul
add
insl
test
pop
cmc
scas
add
and
nop
inc
cmp
push
cld
adc
mov
mov
mov
outsb
std
mov
shrb
add
cmp
jge
outsl
push
out
push
or
test
jae
sahf
jge
rorb
cmp
imul
mov
fwait
loop
sbb
jge
push
xor
and
cmpl
push
mov
xchg
jne
sbb
test
inc
mov
ljmp
cli
subl
inc
sbb
mov
add
and
ljmp
sub
rcrb
loope
dec
mov
xor
sar
dec
mov
jle
cwtl
mov
fdivrs
mov
and
xchg
inc
cwtl
add
loopne
and
or
sar
push
shr
inc
jo
jno
sbb
pop
call
and
jge
cmp
insl
push
popf
jle
sub
add
lods
xor
stos
mov
push
test
fwait
mov
lods
lock
mov
subl
lcall
mov
enter
dec
add
fwait
ret
add
jle
cld
fdivs
add
push
mov
sahf
adc
cmp
fildl
outsl
pop
and
add
xchg
adc
mov
mov
fsubs
sbb
lcall
in
mov
inc
adc
subb
adc
jg
and
call
pop
roll
xchg
es
outsl
decl
pop
sbb
into
adcl
inc
jmp
mov
push
jecxz
cld
mov
mov
push
jp
xchg
icebp
and
add
adc
idiv
fildll
jo
push
adc
int
clc
add
leave
and
pop
pusha
insl
loop
fisttpll
mov
cmp
out
pop
push
adc
call
loopne
pop
and
sahf
shll
pop
mov
adc
lret
inc
add
pop
inc
aaa
xchg
aas
pushf
and
add
mov
lea
pop
jg
adc
mov
dec
or
fst
leave
add
xorl
and
or
add
jno
jg
pop
mov
add
push
shl
ret
and
pop
lods
sub
shl
test
sub
ljmp
test
and
or
cli
pop
add
add
push
ljmp
fadds
dec
jg
sub
incb
and
stc
sbb
call
xor
std
aad
ljmp
lea
cwtl
gs
inc
pusha
jae
ret
in
repz
and
pop
mov
adc
fst
sar
scas
add
inc
cmp
inc
scas
adc
sub
cmp
sbb
mov
test
mov
adc
cmpb
add
repnz
sbb
push
jne
add
pop
pusha
cld
push
movsl
ljmp
add
incl
add
add
add
scas
add
dec
add
mov
stos
lods
repnz
cmp
inc
roll
imul
das
mov
fdivrl
inc
add
add
jmp
add
dec
push
add
add
push
add
xor
or
mov
xor
cmp
aad
dec
inc
andl
imul
cmp
scas
lds
mov
shll
sbb
jmp
xor
fisubrs
mov
add
stos
push
xchg
push
jb
lods
push
lock
inc
push
movsb
xor
ret
xor
fsubl
cs
xchg
add
add
dec
add
push
xchg
jb
add
pushl
fadds
jp
add
xchg
lea
sbb
add
dec
sahf
xlat
add
add
and
add
or
mov
testb
aas
dec
dec
cmc
push
adc
add
add
xchg
mov
cmp
push
test
inc
inc
inc
xor
jne
mov
mov
test
and
mov
adc
cli
push
xor
clc
pop
pop
fcoms
add
rcrl
xchg
adc
cmp
adc
add
inc
cli
add
add
add
and
add
and
es
or
inc
sahf
add
xor
int3
pop
add
adc
mov
inc
mov
call
and
cmc
shll
and
sbb
jg
cmp
add
pop
push
mov
mov
pop
ficoms
dec
cld
lods
cwtl
les
pop
lea
and
cmp
lods
mov
xor
adc
lret
and
adc
stos
dec
dec
les
jmp
std
cmp
xor
sahf
push
push
xor
mov
mov
ja
mov
mov
xor
add
mov
dec
pop
sbb
sub
xchg
lret
lret
test
mov
sub
jle
mov
dec
sub
push
add
sarl
sub
pop
jge
aam
sar
or
dec
and
daa
mov
push
push
sahf
xorb
fiaddl
rol
fsubl
inc
pushf
xor
inc
sbb
stc
push
imul
adc
mov
mov
insl
int
inc
imul
dec
xor
mov
arpl
jae
xor
lcall
inc
push
sbb
and
push
jle
mov
adc
pop
push
push
add
dec
aam
sub
lock
add
adc
mov
ficoms
xor
cli
push
clc
adcb
or
or
sub
dec
cltd
adc
movsb
andb
xor
push
insl
and
and
xchg
adc
sbb
or
sbb
stos
and
mov
cmp
adc
pop
mov
adc
lods
and
and
and
adc
pop
icebp
pop
mov
lds
push
inc
hlt
mov
fwait
lret
pop
xor
or
jle
es
xor
adc
adc
pusha
pushf
inc
jmp
mov
pop
jnp
push
sar
in
mov
fdiv
add
orl
inc
das
sbbb
inc
lcall
arpl
push
jae
sub
je
sbb
xor
popa
xchg
test
xchg
jge
daa
ret
sahf
or
adc
test
dec
dec
xorb
sbb
jnp
lcall
lea
or
ljmp
mov
jbe
dec
xchg
test
aam
fbstp
and
imul
addr16
jno
jmp
inc
mov
incl
xchg
xorb
cmp
mov
add
and
lcall
das
clc
data16
fiadds
pushf
mov
pop
adc
daa
push
sbb
popa
xchg
add
mov
imul
push
sbb
sub
xor
add
out
adc
cmp
sub
pop
bnd
sbbb
push
xchg
shl
adc
fwait
js
cmp
adc
insb
ja
insl
es
ljmp
mov
jb
pop
jae
adc
jo
add
or
xchg
data16
cmp
mov
jbe
jmp
and
inc
jo,pt
je
xchg
jg
jne
imul
enter
mov
addr16
mov
ljmp
xor
enter
mov
insl
add
adc
cmp
js
scas
call
cmp
or
push
mov
scas
pop
decb
pop
pushf
add
movsl
sub
sbb
cmp
lcall
mov
addb
int
daa
inc
cmp
dec
sbb
dec
int
cmc
je
imul
xchg
inc
add
int
push
movups
or
gs
mov
popf
push
xorb
push
jecxz
out
sbb
adc
inc
xchg
jg
mov
pop
ljmp
adc
flds
icebp
mov
jo
push
add
sbb
add
sbb
fdivl
fiaddl
inc
push
cs
mov
ret
mov
es
xor
jbe
dec
and
rcr
push
mov
orl
inc
sub
orl
fcomip
xchg
add
jnp
sub
push
loope
xchg
fldenv
jae
sub
inc
dec
fnstsw
fcomip
pop
in
add
test
call
mov
pop
icebp
adc
lea
mov
jno
test
cmp
pop
fs
addr16
or
sub
arpl
sarl
ds
xor
stos
mov
in
sbb
or
decl
cs
inc
cmp
or
aam
test
xchg
xchg
ljmp
adc
je
cmpb
cmp
mov
ret
mov
testb
cld
adc
cmp
shl
add
cs
push
stos
adc
pop
icebp
adc
and
jb
adc
dec
pop
gs
mov
mov
test
xchg
and
xchg
add
xchg
clc
and
arpl
jae
jmp
adc
pop
cmp
add
pop
and
sahf
adc
jne
fldt
cmp
cwtl
adc
icebp
xchg
cmp
dec
and
mov
push
sbb
imull
xor
test
cmp
push
sub
jg
lods
stos
cld
dec
icebp
mov
lock
mov
enter
clc
ja
add
cli
add
into
stc
sbb
or
pop
cmc
mov
sub
jecxz
rclb
mov
addl
std
dec
mov
sub
jg
fistpl
adc
sbb
into
mov
and
and
and
cltd
je
stos
push
call
mov
ret
jno
addl
pop
pusha
popa
jp
adc
in
and
mov
push
or
repnz
decl
xor
inc
stc
cmp
push
sub
ret
loopne
add
jo
pop
sbb
dec
xchg
sbb
sub
sub
mov
adc
in
push
int3
xor
call
xor
rcl
mov
in
ja
jbe
mov
loopne
cmp
jno
add
mov
pop
mov
jno
test
orl
es
outsb
and
loopne
fcomip
incl
dec
push
mov
cli
pop
movsb
scas
dec
push
push
and
sbb
test
sbb
ret
xor
xor
test
mov
ret
cmpsb
add
and
cmc
orb
adcb
ljmp
mov
mov
jo
or
xor
jecxz
adc
pop
lock
sub
pushf
xchg
or
ljmp
inc
dec
mov
adc
into
int
out
sbb
cmpsb
jbe
jle
jb
and
addb
incb
fs
and
push
mov
jb
inc
int3
mov
or
or
roll
push
mov
inc
insl
add
and
das
fcoms
mov
ret
fdivrs
pop
inc
lret
aaa
dec
cmpb
jno
and
js
push
dec
mov
pop
addl
sar
incl
hlt
ja
ja
add
sbb
cli
push
sub
dec
xchg
adc
dec
lea
aam
incl
adc
mov
inc
xchg
or
bnd
dec
cmp
lcall
pop
cwtl
push
sbb
insl
and
lea
pusha
enter
cmpsl
insl
mov
insl
xchg
popf
inc
in
cmpsb
in
shrb
shrl
push
push
xor
and
adcl
xor
in
repnz
test
adc
jle
xchg
pushf
cmc
push
ljmp
ljmp
inc
fcmovnbe
les
push
lea
test
mov
outsb
pop
lock
sub
push
cmp
mov
inc
mov
cs
inc
sarl
inc
mov
pop
xor
jno
and
mov
add
pop
and
decl
and
add
stc
lods
or
mov
sub
push
adc
lea
pop
jnp
pop
adc
push
mov
cld
pushl
cmpsl
and
push
roll
mov
sbb
dec
add
repz
sub
ljmp
adc
jg
out
mov
push
popf
shlb
inc
jae
lcall
push
dec
jnp
push
xchg
mov
jb
decl
mov
int
inc
fstl
or
inc
pop
xchg
inc
sbb
add
ljmp
xchg
xor
loop
mov
xor
push
sar
push
xchg
adcb
inc
xor
jae
push
cli
push
mov
add
lods
iret
les
mov
decl
scas
outsb
inc
xchg
adcb
lret
mov
repz
or
add
sbb
inc
jge
xchg
lock
std
ficomps
inc
add
arpl
sbb
mov
stos
mov
mov
jge
dec
pop
cmp
mov
push
xor
pop
outsl
pushf
stos
sub
outsb
pushf
push
jle
xor
jmp
sahf
mov
pop
jle
pop
sub
add
or
shlb
fiadds
test
or
xchg
mov
fldcw
cmp
mov
add
add
jno
repnz
add
add
or
and
jbe
sbb
and
inc
adc
mov
fsubrs
inc
inc
pushl
std
jmp
sub
mov
or
jo
mov
adc
lcall
es
clc
cmpsl
aam
into
aad
mov
out
add
fmull
mov
mov
mov
leave
sub
xlat
or
xor
sbb
or
clc
push
jo
lock
jo
dec
add
xor
popa
sub
lea
inc
adc
jg
outsl
add
sub
cld
loopne
roll
dec
xor
repz
cmp
mov
pop
loopne
outsl
and
cmp
and
ret
xor
ret
fbld
xchg
aad
addr16
idivl
ljmp
push
scas
sbb
add
aaa
lods
lods
jg
ds
mov
xchg
insb
fdivs
push
clc
jmp
jo
inc
outsb
cmp
sub
jg
add
dec
xor
add
test
cmp
xchg
loope
jge
loopne
xchg
insb
jg
insl
shll
cmp
xchg
in
and
in
cmp
mov
add
ja
add
cli
mov
scas
js
int
xchg
sbb
xchg
es
add
shlb
cld
sbb
adc
icebp
dec
jecxz
mov
repz
jecxz
movsl
in
adc
and
fdivrp
jbe
sbbb
insl
push
insl
adc
sub
or
push
lods
clc
iret
shll
test
and
sahf
xor
jecxz
lcall
in
andl
pop
sbb
loopne
mov
stc
inc
loop
mov
inc
jle
jg
icebp
in
out
sarb
fs
push
shlb
or
pop
push
push
mov
loop
negb
or
cmp
aad
ror
jge
ljmp
jne
mov
test
cmp
fucomi
aad
outsb
ss
inc
out
shlb
sbb
dec
stos
decl
push
sub
mov
jns
aaa
and
ljmp
sub
jge
mov
js
mov
add
dec
cltd
xchg
pop
sar
lods
lea
lea
popf
mov
fbld
jecxz
adc
push
jecxz
dec
loop
fldl
insl
ret
or
mov
icebp
rolb
pop
jecxz
ljmp
test
cmp
and
sbb
movsb
mov
dec
add
sbb
rolb
adc
adc
xchg
jecxz
mov
nop
loopne
out
sub
mov
popf
mov
adc
pusha
mov
mov
rol
or
lds
les
pushf
dec
loopne
push
push
add
mov
bound
shrl
shrl
jmp
jle
cli
call
lods
mov
adc
roll
xchg
sarl
mov
clc
jp
js
cmp
sbb
sbb
loopne
int
inc
cmp
ljmp
adc
xchg
mov
mov
add
and
jae
fnstenv
loopne
mov
mov
dec
xor
adc
xlat
clc
or
dec
popf
pop
popf
add
dec
push
ljmp
cmpsb
ljmp
and
lea
adc
mov
imul
loopne
mov
loopne
adc
lret
mov
ljmp
xchg
adc
bound
push
xlat
dec
cmpb
push
xor
loope
loope
mov
outsl
clc
mov
inc
fs
imul
cmc
dec
nop
and
divl
inc
lods
xchg
in
mov
sub
mov
std
ljmp
xor
xor
sub
jle
ljmp
xor
push
rcr
lock
inc
insb
push
inc
inc
mov
filds
clc
test
je
mov
xor
call
inc
call
or
adc
adc
aas
push
lea
mov
in
js
pop
insb
sti
dec
mov
test
push
sbb
rcrb
icebp
add
rclb
sbb
add
mov
int
push
mov
push
mov
popa
aad
sub
push
push
xor
cmpsb
inc
add
pop
hlt
mov
insb
xor
push
push
insb
and
movsb
jae
test
pushl
pop
int3
and
hlt
push
push
andb
bound
xor
sub
mov
add
loope
or
cmpsb
test
add
push
insl
mov
jg,pt
ljmp
inc
inc
daa
add
mov
and
nop
mov
mov
arpl
mov
jo
rol
cmp
insl
ds
das
xor
outsb
jecxz
adc
and
xor
mov
fstps
dec
and
add
sbb
pop
lock
ficoml
sbbl
xor
cmpsb
aad
pop
push
adc
outsl
loop
inc
in
push
add
cmp
nop
fbld
push
sub
arpl
ss
sub
inc
nop
incl
sub
dec
sbbb
les
shrl
cmpsb
push
dec
leave
push
and
dec
adc
fistps
cmp
loop
ss
mov
jg
dec
cmp
add
cmp
cmp
or
fisttpll
jb
jecxz
incl
inc
inc
pushl
inc
add
stos
leave
add
dec
push
push
lock
clc
inc
int3
add
push
push
inc
xor
insb
cmp
adc
or
scas
fisttpll
sbb
push
shl
jae
ja
addb
sti
jbe
push
int3
pop
add
push
adc
or
jns
movsb
cmpl
call
rorl
pop
mov
xor
mov
lret
pop
or
inc
sub
jp
adc
movsl
xor
lods
loop
std
aaa
std
mov
insl
and
and
mov
xchg
pop
sub
add
nop
push
or
incb
daa
inc
insl
sub
cmp
ss
jne
clc
mov
push
loopne
aad
loope
adc
mov
cld
xchg
cmp
sbb
addr16
xchg
inc
adc
dec
adc
in
xchg
jl
sbb
orb
jnp
adc
data16
xor
mov
pop
mov
in
add
dec
add
xor
js
cmp
cmpb
in
jg
mov
push
mov
es
dec
rolb
test
stc
addb
insl
pushf
mov
and
pushf
push
loop
in
rcrl
ret
inc
pop
push
lcall
or
cmp
pop
jmp
push
mov
rorb
mov
cmpsb
aad
rcll
adc
pop
cld
ja
in
xlat
mov
popf
js
sbb
jo
rcrb
fwait
push
add
sbb
add
leave
repnz
adc
call
mov
lock
ds
and
xchg
dec
loope
fstl
mov
out
or
pop
int3
jp
call
xor
inc
mov
dec
dec
push
out
icebp
jl
ret
jo
aas
ret
add
cltd
rorb
mov
test
andb
scas
xchg
inc
mov
jmp
leave
call
dec
inc
or
mov
loopne
fs
add
pop
mov
add
xor
jbe
inc
insl
decl
jp
jns
and
stos
lcall
lret
add
push
insl
jo
sbb
mov
mov
jmp
adc
add
add
inc
add
es
jnp
inc
mov
push
popa
out
scas
dec
adc
jbe
add
adc
push
pushl
add
mov
adc
lods
adc
or
js
loop
loopne
bound
fildl
xor
mov
dec
repnz
test
xchg
xchg
cmc
add
or
dec
jmp
inc
out
pop
cld
fwait
ss
add
adc
jb
push
adc
adc
add
adc
or
sub
testb
dec
push
or
out
jno
js
adc
mov
inc
pop
mov
pop
adc
adc
and
pop
sub
mov
scas
jmp
js
mov
dec
xor
pop
adc
loop
jl
jmp
jmp
or
add
adc
dec
iret
adc
pop
pop
push
cmc
or
and
mov
ret
push
stos
xor
sbb
push
call
or
add
adc
lea
adc
sub
add
push
flds
daa
hlt
insb
xor
test
mov
mov
inc
movsl
or
adc
xchg
lcall
and
cmp
xchg
push
outsl
push
add
hlt
adc
lods
add
pop
sbb
push
cld
or
add
or
imul
or
inc
dec
sub
xor
jle
ja
ljmp
dec
outsb
or
mov
push
out
sbb
jae
rolb
jb
push
and
adc
dec
mov
jg
fidivrs
inc
repnz
dec
pusha
adc
inc
mov
push
in
outsl
dec
mov
and
cltd
and
push
js
push
xor
add
adc
ret
push
loop
in
push
daa
pusha
stos
push
adc
adc
mov
clc
andb
lret
push
repnz
push
push
fisttps
int3
sub
or
fldl
mov
incl
xor
or
insb
add
bound
mov
cmp
or
add
in
cmp
push
sbb
aaa
mov
adc
sbb
insl
mov
mov
lds
push
rcrl
xor
addr16
mov
add
adc
das
xlat
and
jno
dec
and
scas
shl
adc
add
xor
xor
icebp
dec
push
or
mov
push
pop
bound
ja
decl
xchg
or
jge
jge
ja
adc
dec
adc
xchg
sbb
and
adc
jne
add
addr16
sti
mov
adc
jb
je
lea
aaa
outsb
push
jge
fs
push
cmp
insl
clc
xchg
sbb
add
add
addr16
push
push
add
addb
clc
or
adc
add
push
jne
mov
bound
push
add
xchg
add
incl
or
inc
sub
daa
dec
ret
test
aas
icebp
and
gs
pop
mov
insb
movlps
push
andl
xchg
sub
xchg
ljmp
and
and
rolb
xchg
mov
sub
pop
or
ljmp
pushf
insb
sbb
jae
movsl
push
addl
popf
int
fs
lcall
or
addl
jp
inc
mov
stos
and
sbb
xchg
insl
cmpsb
arpl
xchg
lcall
adc
test
andl
cli
mov
clc
add
cmp
popf
lret
mov
ljmp
cli
test
fisttpl
out
and
test
add
mov
and
inc
ljmp
pop
push
adc
dec
loop
aam
sub
mov
mov
int
enter
adc
inc
xchg
out
add
add
in
mov
ljmp
xor
sbb
inc
jnp
jmp
dec
inc
mov
jl
xchg
mov
incb
aam
jnp
jbe
adc
loope
adc
scas
push
mov
push
add
fwait
inc
cld
mov
dec
add
and
fldl
or
cltd
fidivl
or
push
push
jo
mov
or
shll
mov
add
lods
fstl
pop
orb
call
push
in
pop
shl
mov
repnz
fldl
fstpt
inc
sarl
jns,pt
lods
popa
and
test
jae
dec
mov
lock
lock
jge
rcll
sahf
push
inc
and
xchg
adc
push
lea
movsl
adc
into
jns
icebp
shlb
and
push
and
mov
adc
aam
pop
inc
adc
sub
mov
adc
sar
mov
imul
cltd
dec
mov
scas
add
cs
orl
sbb
mov
cmp
imul
fsubl
adc
xchg
adc
adc
int3
ds
insl
dec
testb
cmpsl
sbb
stos
ss
daa
andb
inc
adc
fdivr
jmp
xchg
push
or
push
push
jl
xchg
jbe
aad
push
std
popf
adc
adc
push
movl
loop
cmp
and
and
add
lods
xchg
dec
icebp
sbb
dec
jne
push
cs
mov
pop
test
cmp
add
jns
pop
lret
repz
push
push
out
jb
jbe
cmp
mov
mov
stos
cmpsl
mov
clc
decl
jp
xchg
adc
sub
pop
inc
pop
jb
ret
ffreep
das
sbb
xor
cs
jmp
xor
jmp
incl
pop
cli
mov
lock
xchg
xor
incb
mov
or
adc
in
jge
xchg
movsb
xchg
or
nop
lock
or
aad
mov
sub
sbb
fistpl
xor
add
dec
lcall
js
call
cld
xor
xchg
adc
pop
out
aam
mov
das
inc
mov
rcrl
mov
jne
sbb
push
add
jne
xchg
and
shll
cmpsb
lock
jmp
sub
int3
add
jp
sahf
pop
clc
push
ret
mov
dec
sub
jg
mov
sbb
pop
pop
push
fidivrl
rcll
add
sub
push
push
lds
sbb
pop
xchg
and
sub
in
int3
add
mov
adc
into
add
loop
std
out
xor
jl
cmpsb
aaa
dec
repz
sbb
popa
mov
inc
push
mov
mov
xchg
adc
lock
icebp
mov
fildll
mov
add
sbb
mov
rcll
add
decl
adc
mov
shrl
inc
jge
jge
data16
imul
fistl
mov
jge
loopne,pn
insb
es
je
sarl
push
push
xchg
mov
mov
lea
xchg
add
add
mov
shrb
insl
adc
insl
insl
push
cs
mov
pop
push
xor
lods
fs
call
add
push
dec
notl
rol
popa
fs
fmuls
inc
rorl
roll
mov
pop
fdivrl
mov
mov
in
xchg
push
inc
mov
clc
add
shrl
push
cld
cld
roll
jle
push
sub
pop
hlt
ljmp
lods
inc
fnsave
cmc
out
jecxz
inc
and
push
push
inc
mov
sbb
outsl
fcomip
icebp
pop
push
das
xchg
cmpb
xchg
ret
lods
in
jmp
adc
cmpsb
scas
nop
push
movsb
add
test
dec
sub
leave
and
mov
arpl
and
adc
jbe
movsl
aas
xor
test
push
dec
ss
mov
adc
ja
cmc
push
outsb
in
cmp
pop
xchg
mov
sub
fwait
jno
mov
insb
xchg
out
clc
xor
mov
mov
sti
add
sub
xchg
loopne
rcrl
or
xor
in
ljmp
stos
imul
or
sub
ljmp
xor
in
test
popf
add
adc
sarb
addb
and
adc
jl
xchg
scas
sbb
fcoms
add
push
jmp
mov
call
sbb
sbb
sarb
jne
lods
xchg
mov
mov
xlat
mov
outsl
fdivs
adc
add
in
sbb
sti
add
mov
hlt
subl
add
inc
pop
mov
in
add
adc
dec
mov
outsl
test
jmp
jl
xchg
popa
outsb
fadds
sarl
jg
push
push
sub
scas
add
cmp
scas
call
lods
jle
push
ds
fldl
push
aad
add
lock
push
jo
adc
std
mov
in
fbld
adc
into
sub
inc
popf
sbbb
out
push
in
mov
mov
subl
inc
jne
repz
cmp
fcomip
or
and
insb
adc
mov
mov
sub
cmpsb
mov
lods
rorb
xor
push
call
popa
sbb
sbb
sbb
or
incl
shlb
hlt
lret
sti
aam
in
hlt
sbb
sbb
or
cld
outsl
cmp
dec
enter
outsl
sub
lahf
sub
ss
inc
or
add
and
loope
hlt
scas
ja
hlt
divl
mov
push
push
inc
or
aaa
or
jo
repnz
incl
jo
sub
inc
or
jl
and
xchg
push
sub
mov
or
push
lds
or
push
ficomps
or
loope
aas
lods
shll
xchg
ja
mov
dec
insl
adc
jmp
mov
cmpsb
loope
lds
pop
sub
pusha
out
jmp
scas
mov
fisttpll
aad
pop
add
xchg
sahf
inc
jnp
movsb
mov
sub
add
popa
push
lods
xchg
jl
add
ds
in
loopne
mov
rcll
popa
or
push
orl
push
push
orl
xor
xchg
xor
loope
add
movsl
push
adc
cli
rcll
and
and
fldcw
push
sub
add
rolb
push
hlt
pop
insb
add
orl
loopne
mov
insl
fldt
or
cmp
pop
pusha
daa
sbb
sub
out
push
add
push
aad
xchg
sahf
mov
add
mov
and
scas
icebp
and
mov
mov
jmp
test
xchg
nop
xlat
cli
mov
xor
loope
pop
sub
inc
mov
jns
cmp
add
rolb
adc
cmp
inc
int
ljmp
dec
dec
sbb
lret
fiadds
movsb
xor
inc
xchg
mov
push
xchg
lcall
lea
push
test
jg
and
not
jmp
add
popf
test
push
mov
sahf
xor
call
cld
incl
push
or
cli
sarl
xor
arpl
mov
mov
aas
stos
das
mov
xor
ds
leave
mov
xlat
inc
add
adc
or
int
push
add
mov
xor
lock
mov
stos
xchg
mov
xchg
push
sahf
inc
aas
lahf
mov
inc
push
cld
inc
dec
xchg
xor
fwait
push
mov
outsl
jecxz
dec
in
mov
xchg
mov
push
ljmp
adc
jle
push
insb
push
mov
xor
inc
sbb
repz
push
insl
inc
scas
inc
fldl
orb
sbb
inc
adc
int
cs
fcmovne
inc
clc
inc
xor
dec
or
or
fiaddl
lock
add
adc
jg
inc
push
sbb
arpl
dec
xor
fstpl
popf
mov
adc
adc
addr16
jb
jno
sahf
push
jae
push
mov
mov
pop
push
gs
xchg
mov
ljmp
aaa
int
dec
push
loopne
outsl
adc
loop
pusha
repz
and
hlt
rolb
pop
and
mov
std
mov
sub
jecxz
or
pop
jecxz
cmp
cmp
fs
adc
stc
call
adc
push
outsb
ja
jb
lock
add
std
je
cmp
je
shl
jle
icebp
adc
or
push
inc
in
inc
xchg
xor
loope
popa
and
jecxz
ret
or
ss
mov
adcb
xchg
mov
std
or
push
clc
pop
adc
xchg
shrb
add
pusha
js
test
push
sub
adc
sahf
jne
mov
loope
push
inc
adc
xchg
xchg
fbstp
mov
dec
add
int3
push
push
add
inc
arpl
inc
jno
ds
and
adcb
lcall
pop
inc
or
mov
jb
push
or
or
rol
sbb
call
imul
push
sub
sbb
sbb
jmp
or
sub
dec
ret
rclb
loope
decl
push
inc
push
xor
dec
jno
cmp
inc
and
bound
sub
pushl
sub
mov
push
push
ss
shlb
sub
add
mov
xor
add
push
xor
test
dec
adc
test
xchg
sub
and
nop
loopne
mov
push
or
pop
mov
cmp
add
popa
outsb
add
dec
sti
lcall
add
lds
shll
in
mov
test
fdivrs
mov
aad
mov
stos
pop
mov
les
or
loop
loopne
out
push
std
adc
pop
add
fsubl
sbb
mov
cld
mov
mov
stos
push
mov
inc
dec
mov
dec
in
ljmp
pop
add
push
lret
jo
mov
xchg
xorb
je
movb
push
adc
lret
sub
and
int
ret
fisttpl
mov
sbb
push
mov
nop
or
add
push
xor
jo
mov
cld
divb
add
lods
mov
push
int3
mov
bound
cld
outsl
decl
cmp
pop
ljmp
adc
scas
dec
mov
sbb
clc
adc
mov
fucomip
test
in
je
iret
add
out
loopne
inc
push
aaa
and
xchg
jo
enter
mov
jb
rcrb
enter
mov
scas
clc
lods
xor
lret
add
inc
jns
rorb
in
cmc
into
in
hlt
popa
enter
repz
mov
scas
xor
inc
add
pusha
jbe
bound
jae
inc
inc
nop
or
dec
mov
and
dec
mov
lock
xchg
and
sbb
add
inc
loop
repnz
sbb
push
inc
mov
pop
sbb
mov
push
and
add
test
xor
je
insb
jle
xchg
data16
scas
xchg
popa
add
imul
sbbl
js
jo
imul
add
mov
shrb
add
push
ljmp
xchg
leave
add
lcall
jle
adc
movsl
ficoml
sahf
insl
mov
dec
shl
sbb
jb
sbb
mov
dec
sarb
dec
or
mov
pushw
mov
insb
ljmp
insb
add
sub
xchg
lea
add
adc
jb
add
jp
cmpsl
inc
xchg
jbe
add
dec
dec
sbb
sub
loopne
outsb
or
add
adc
dec
jo
loop
jb
ret
ret
cli
adc
sbb
aaa
dec
ficompl
push
jbe
push
adc
sbb
aaa
xchg
mov
es
sub
loop
sub
out
ljmp
je
sbb
pop
adc
adc
pop
data16
adc
and
mov
mov
les
and
gs
add
jo
outsb
aaa
and
adc
add
pop
inc
fildl
jnp
fsubrs
sub
sbb
push
mov
pop
add
mov
and
or
pop
and
mov
sub
add
divb
jne
and
or
icebp
or
jae
or
add
cmp
push
adc
pop
loop
cmp
or
sbb
fwait
adc
outsl
call
outsl
aam
stc
add
in
inc
test
les
pop
test
xor
sub
jae
and
movsb
adc
jb
adcb
add
add
clc
jg
gs
inc
aas
ja
pushf
sbb
sub
add
in
add
xor
dec
cld
clc
bound
sub
xor
pop
aaa
or
jbe
add
push
inc
cli
ljmp
inc
xchg
daa
inc
negb
jb
push
add
add
dec
pop
xor
pushl
pop
adc
adc
testb
in
inc
push
mov
into
pop
push
cmovge
sahf
and
pop
and
push
xor
ss
push
ljmp
sbb
dec
test
adc
call
es
and
push
pop
add
or
push
mov
nop
std
cmpsl
adc
addr16
push
ret
jnp
push
or
mov
cwtl
jge
push
cs
and
not
xor
add
call
xor
jg
stos
xchg
sub
sbb
pop
push
jge
and
add
dec
pop
or
mov
bound
push
andb
jge
js
inc
dec
lcall
mov
push
adc
popa
mov
insl
or
das
pusha
xchg
and
mov
nop
daa
outsl
cmp
mov
adc
adc
cmp
fs
mov
inc
cmp
and
bound
add
jne
adcl
push
dec
jp
adc
in
jnp
loopne
add
or
sub
sbb
pop
jge
cmp
xor
cmp
add
sub
push
test
inc
add
roll
aam
and
jbe
sub
xor
out
push
je
xchg
jge
push
pop
outsl
jg
vsqrtps
dec
push
mov
cmp
xchg
inc
popf
decl
std
add
mov
sarb
jmp
inc
mov
cmp
mov
sub
cli
ja
inc
inc
push
push
repnz
mov
imulb
mov
popf
cli
adc
or
jg
adc
and
inc
or
add
dec
pop
dec
mov
mov
add
das
clc
sub
dec
pop
lcall
ja
and
xor
data16
and
lock
inc
mov
cwtl
idivb
push
push
push
jle
jmp
shlb
outsl
push
sbb
movsl
repz
mov
jbe
icebp
or
dec
xor
lcall
inc
mov
int
lock
fcoml
popf
mov
pushw
add
inc
adc
ds
int
int
hlt
daa
or
pop
cmp
hlt
adc
in
pusha
rcrl
adc
mov
stos
add
imul
outsb
mov
mov
ret
sbb
data16
mov
sbb
rcrb
addr16
mov
andl
jle
sbb
pop
mov
inc
adc
push
inc
push
mov
adc
push
dec
fisubrs
jmp
clc
incl
adc
les
cli
or
stos
jne
push
pop
inc
cli
push
xchg
inc
add
in
popa
push
mov
mov
jno
testb
jmp
xchg
xor
mov
outsb
orb
fldl
pop
adc
add
pop
mov
adc
sub
jg
dec
lock
adc
cltd
inc
fdivr
inc
aaa
cld
pop
push
pop
xorb
sbb
inc
and
pop
rorl
repnz
add
call
inc
arpl
orb
sbb
insb
repz
fs
fidivrs
xchg
or
add
jg
movsb
or
dec
fdiv
jno
pushf
arpl
cli
xchg
and
in
adc
and
sbb
mov
incl
and
or
sbb
sbb
adc
cmpsb
pusha
add
xchg
sub
insl
movsb
decb
and
sub
scas
sub
mov
lret
sub
int3
movsb
push
adc
mov
test
out
xchg
lcall
es
ljmp
cs
cmp
inc
dec
cmpb
lcall
mov
pop
das
insl
std
xchg
outsb
inc
jno
jg
les
push
insl
in
sarl
push
insl
test
sub
push
push
dec
push
push
cld
mov
inc
inc
rclb
rcll
mov
push
mov
sbb
inc
adc
adc
or
push
add
push
push
push
push
shl
dec
loopne
ja
incl
xor
sbb
ljmp
movsl
dec
ja
jmp
push
fcmovnb
subl
ret
mov
sbb
movb
jbe
add
xchg
adc
pop
mov
fs
add
cmp
icebp
mov
cmp
test
push
cs
jbe
lock
roll
push
subl
les
inc
notl
jo
or
mov
in
mov
lock
in
stos
insb
aaa
or
or
mov
inc
push
mov
cmc
mov
out
xchg
mov
xchg
or
out
clc
pushl
jmp
add
and
jl
jb
adc
and
fbstp
mov
es
and
jge
test
lcall
in
insb
jge
push
pop
lds
icebp
insl
insl
testb
push
clc
push
in
jbe
shrl
add
inc
inc
lea
and
loopne
lea
pusha
std
pop
jl
enter
std
out
fildl
outsb
add
mov
fdivp
mov
jb
or
in
out
les
xor
mov
xchg
insb
orl
es
jmp
add
xor
add
addb
or
mov
push
jnp
xchg
mov
cli
andl
push
test
xchg
xor
in
clc
mov
rclb
aam
hlt
sar
loope
decl
or
sub
rcll
push
and
aam
sahf
inc
ds
sub
aaa
cld
jmp
shl
roll
mov
test
mov
xor
in
ljmp
sbb
inc
mov
dec
inc
pop
dec
push
jle
mov
push
mov
cmp
pusha
mov
mov
enter
outsl
clc
jg
xchg
lds
push
xchg
adc
and
outsb
push
adc
cmp
lods
call
mov
lret
push
aam
enter
mov
test
push
push
adc
ret
enter
push
mov
and
xlat
stc
and
fdivrl
adc
xchg
movsb
mov
pop
jne
gs
and
inc
cmp
pusha
loopne
cmp
mov
or
dec
push
aad
scas
jl
sub
xchg
decl
loop
dec
push
mov
aam
dec
call
outsb
jg
gs
movsl
decl
or
mov
repnz
gs
pop
cmpsl
mov
mov
or
jecxz
add
add
gs
pushaw
add
adc
mov
call
jle
mov
or
jl
mov
sbbb
inc
shrb
mov
std
addb
call
pop
sar
cmp
push
je
scas
or
adc
loop
jp
inc
xchg
cmp
or
in
aaa
mov
dec
rcrl
jle
test
loop
psraw
sbb
cmp
push
les
pop
push
lea
or
pop
test
add
add
jg
pop
sar
sbb
dec
nop
outsb
out
pop
sub
pop
add
push
out
mov
dec
or
adc
push
adc
mov
test
add
dec
adc
inc
fisubs
dec
adc
stos
sub
mov
and
insb
inc
sub
mov
cmp
mov
mov
adc
and
jg
xchg
mov
out
pop
sbb
and
or
jmp
stos
mov
and
cmp
xchg
sbb
orb
les
inc
or
rorb
and
inc
mov
mov
lods
test
dec
pushf
pop
xor
mov
inc
call
test
sub
xchg
jge
imul
cwtl
outsl
js
lods
and
jge
pop
orb
andl
push
ds
pop
adc
cmp
dec
dec
pop
dec
cld
andl
fnstenv
push
pop
fbstp
jb
inc
push
in
inc
cmpb
mov
gs
cmc
push
fs
inc
push
pop
dec
les
stos
xchg
dec
mov
dec
decb
or
xchg
insb
or
add
scas
add
sbb
mov
mov
inc
je
or
enter
lds
lahf
cwtl
push
das
sub
dec
sub
and
dec
push
fs
push
pop
push
mov
pop
push
push
ljmp
lock
pop
shlb
shrl
mov
mov
incl
jecxz
add
aad
cli
pop
lret
jp
adc
decl
or
adc
jae,pn
adc
js
js
incl
xor
lcall
add
adc
cli
push
in
dec
lods
jg
test
jne
pop
push
inc
push
decb
addr16
mov
addr16
orl
shlb
rclb
insl
mov
test
jne
and
popa
pop
outsb
cmpsb
xor
mov
dec
int
into
add
pop
mov
and
cltd
pop
icebp
lcall
or
and
ret
mov
and
mov
nop
sbb
dec
bound
sub
pushf
rcrb
fadds
lock
jge
mov
mov
or
pop
loopne
add
mov
cli
cmp
pusha
andl
addr16
xchg
and
ja
in
inc
cwtl
loopne
in
lock
or
mov
cmp
popa
or
xchg
or
dec
enter
test
mov
mov
jp
jo
jge
mov
test
push
add
pop
xor
mov
decl
mov
out
and
mov
rclb
push
dec
pop
popa
mov
or
sbb
sub
or
mov
inc
test
xor
lock
dec
inc
xor
orl
sub
sarl
pop
push
sahf
sti
or
pop
or
mov
jg
xchg
or
dec
xchg
sbb
fs
sbb
lea
pop
sti
pop
enter
rcll
outsl
cwtl
cmp
jo
ficompl
or
push
add
cld
mov
sbb
scas
cmpsb
adc
js
jns
sub
sub
pop
or
popa
movsb
push
ja
stos
fistpll
jmp
gs
push
rolb
cmp
inc
push
jg
and
jb
mov
loope
dec
fsubl
arpl
jmp
jns
push
dec
inc
lods
insb
lods
arpl
push
or
jmp
push
inc
jb
pusha
subb
test
xchg
lods
movsb
mov
jmp
pop
xchg
add
pop
lods
in
mov
lods
xchg
stos
push
and
add
inc
or
push
xor
cmp
fs
call
hlt
mov
xchg
mov
mov
mov
rcl
mov
inc
push
sub
adc
sti
mov
xchg
add
bound
test
ret
mov
pop
mov
jle
lock
sbb
in
test
mov
sub
jp
rcr
lcall
push
iret
pushl
clc
loopne
imul
movsb
push
out
inc
add
xor
or
push
xor
cmpsb
sbb
pop
loop
jo
rol
mov
jmp
adc
mov
pop
or
cmp
push
mov
clc
clc
xor
movsl
xchg
xchg
jmp
fildll
add
and
test
mov
add
mov
push
lods
scas
ss
jmp
jo
in
shrl
fisubrl
jne
mov
pop
jge
inc
jp
xchg
call
push
jb
lret
testl
push
xchg
lds
mov
pop
jno
ljmp
mov
sub
add
shl
push
cwtl
loope
mov
idivb
dec
outsb
fwait
adc
dec
xchg
and
dec
sbbl
mov
add
inc
jnp
out
nop
es
outsl
fbstp
out
in
loopne
xchg
jmp
sbb
xor
int3
je
test
pop
es
mov
mov
loope
das
aas
sub
or
movl
ljmp
lahf
dec
dec
outsb
imul
stc
and
call
insl
repnz
inc
jbe
dec
pop
and
pusha
ret
into
push
aas
sub
xor
xchg
loopne
mov
scas
orb
xor
addb
xchg
std
push
jmp
xchg
jge
addl
ss
add
pop
fildl
adcl
inc
repz
dec
repz
or
fldt
fstl
repz
and
nop
mov
pop
push
cmp
bound
mov
data16
mov
stos
out
and
nop
daa
dec
pop
push
scas
dec
pop
add
mov
mov
cmp
in
push
mov
cmp
sub
arpl
imul
pop
mov
arpl
jle
xor
pop
sub
xchg
outsl
xchg
mov
cmp
popf
add
push
mov
dec
jbe
out
add
cmc
mov
mov
dec
dec
mov
cld
dec
sbbb
fcoms
mov
add
mov
je
add
popa
mov
jp
int3
adc
add
pop
insb
scas
add
or
push
sbb
or
sbb
jbe
adc
inc
or
and
xchg
pop
add
insl
push
or
call
push
and
sbb
cmpsb
add
cmc
mov
adc
movsb
adc
push
push
or
add
push
or
xchg
loopne
sbbl
mov
inc
and
inc
and
je
es
xchg
adc
adc
filds
and
adc
stos
js
mov
fadd
lods
in
sbb
fwait
adc
sbb
arpl
inc
rorb
jl
scas
adc
icebp
iret
outsl
clc
jg
sub
sbb
and
and
sbb
add
inc
mov
decl
and
cmp
cmpsb
add
int3
adc
test
cmp
xor
sbb
and
aaa
or
leave
cmp
pop
enter
adc
sti
push
push
pop
cmp
add
push
adc
add
add
and
adc
push
es
push
inc
pushl
or
adc
sub
add
imul
fsubrs
es
out
add
add
stos
sub
sahf
insl
dec
mov
pop
insb
aaa
xchg
aam
dec
in
sub
dec
jmp
pop
add
push
gs
dec
pop
pop
jl
push
adc
push
adc
inc
sbb
repnz
sbb
pop
js
outsl
loopne
sbb
pop
mov
dec
mov
mov
add
lcall
ficoms
hlt
fwait
pop
pop
or
ss
arpl
jmp
or
adc
or
xor
jg
xor
xor
adc
xor
gs
pop
mov
bound
adc
push
fs
cmp
inc
push
push
lods
insb
adc
adc
push
inc
es
xor
push
and
mov
lcall
mov
adc
jg
lock
add
and
jo
jle
inc
and
sub
push
rcl
and
jcxz
push
jbe
xchg
jge
jge
sub
daa
fsubrl
sbb
dec
push
xchg
call
sub
arpl
movsb
fiadds
bound
icebp
jg
lea
mov
push
xchg
ret
jge
mov
push
or
fdivp
das
jo
aam
stos
adc
pop
es
bound
js
add
js
push
lcall
inc
arpl
sti
das
js
ja
sub
xchg
aam
imul
mov
sub
jg
push
lea
pop
xor
mov
jp
imul
and
cmpsb
hlt
jne
xchg
or
and
dec
adc
sub
decl
add
fs
or
and
pusha
ljmp
and
nop
jno
test
push
scas
add
addr16
and
movsb
ret
adc
adc
fistpll
mov
xchg
xchg
push
add
sbb
lods
pushl
pushf
ficompl
andb
and
sbb
jb
push
push
mov
enter
push
or
stos
and
popf
ds
fistpll
fdiv
lods
add
or
lods
push
mov
xchg
loope
push
jge
mov
cmpsb
and
push
pop
mov
and
sub
or
push
jg
mov
mov
outsl
dec
mov
sbb
push
pop
addb
sbbl
pushl
adc
and
add
add
sbb
clc
mov
or
jg
sar
lods
mov
lds
enter
xchg
int
fs
int3
xchg
cld
jo
xchg
sub
inc
adc
sub
sbb
mov
inc
mov
xchg
mov
dec
sbb
mov
mov
sbb
mov
inc
int
loop
push
dec
cmp
add
lea
and
in
push
xchg
add
decl
pop
cmp
jb
xchg
push
js
push
mov
fildll
and
inc
xor
jge
movsb
orb
adc
mov
sub
int3
clc
mov
std
andb
incb
jb
in
mov
stc
in
mov
arpl
movl
bnd
std
add
pop
xor
xor
movsl
sahf
rcrl
add
stos
std
mov
incl
lret
cld
or
mov
mov
cmpsl
adc
or
call
incl
and
jecxz
cmc
xchg
hlt
popa
sarl
or
ljmp
or
mov
lds
gs
icebp
arpl
hlt
call
sbb
dec
xchg
push
orl
sbb
dec
or
and
push
std
xor
sub
ja
orl
incl
fstpl
in
ds
dec
pop
lcall
mov
push
sbb
outsb
or
push
stos
push
ljmp
loope
loop
cmpsb
add
sub
lret
or
ss
in
and
pusha
mov
adc
mov
das
scas
xor
jl
mov
test
mov
jmp
pop
xchg
rolw
in
push
shll
mov
jbe
dec
icebp
sbb
adc
adc
sbb
sub
mov
in
or
in
sti
in
or
sub
dec
sub
and
xor
pop
lock
mov
mov
adc
insb
fldl
nop
popa
bound
rolb
mov
xchg
mov
dec
shll
mulb
cld
call
add
rcl
shlb
ret
mov
fbstp
add
xor
iret
mov
dec
ja
mov
mov
xor
in
push
addb
ja
aam
inc
or
mov
dec
roll
rorl
pop
jb
xchg
les
push
incl
orb
pop
int3
push
das
subl
xorl
aas
mov
pop
aaa
and
push
icebp
test
scas
mov
ljmp
jle
and
and
jp
cmp
push
jne
xorl
andl
aas
add
ljmp
xchg
or
dec
add
insl
add
hlt
popa
jle
dec
jg
rcrb
shlb
xchg
lock
and
addb
jnp
rcll
inc
shll
and
pushl
jge
jnp
jge
ja
sub
ss
push
sub
add
roll
popa
add
sti
dec
mov
and
ja
outsb
loope
in
and
dec
fadds
lcall
repnz
aam
dec
inc
or
aam
insb
test
decl
test
icebp
sbb
dec
pop
sub
loope
xchg
data16
jmp
lcall
and
rcrl
pop
popf
leave
cli
jge
pop
pop
adc
mov
adc
clc
mov
add
mov
or
les
mov
mov
inc
sbb
pop
aam
or
ficoml
push
dec
popf
adc
stos
add
adc
daa
lcall
adc
pusha
add
inc
cmp
imul
je
xchg
add
pop
push
pop
inc
shlb
enter
mov
mov
push
sub
subb
add
add
pushf
pusha
add
inc
ss
call
sub
adc
xor
push
fiaddl
lds
nop
adc
leave
jbe
add
inc
inc
mov
jae
xorl
sub
xchg
sbb
pop
jge
xchg
mov
fdivrs
arpl
test
inc
cmp
mov
sbb
inc
fistpl
push
fadds
loope
add
push
sbb
outsb
add
clc
aad
cmp
fwait
and
imul
insb
loopne
xor
adc
shll
notl
pushf
mov
testb
or
and
push
push
rcl
movsl
sbb
sub
mov
gs
lods
mov
fadd
maxps
fbld
adc
fdivp
xor
in
sbb
rclb
sub
adc
xor
xor
cmp
mov
ret
push
cmp
xchg
pop
fadds
mov
dec
fcomps
push
shlb
movsl
fcomps
adc
popa
mov
fisubl
addr16
rclb
xor
mov
mov
adc
dec
dec
xchg
cmp
mov
pop
insb
loopne
and
xchg
das
es
sbb
dec
xor
ss
and
sbb
ss
mov
add
mov
jno
inc
xchg
jbe
mov
mov
push
int
xchg
push
xchg
xchg
or
ret
or
inc
shll
ss
rcll
xchg
mov
xchg
xor
xchg
fidivs
insb
mov
push
sbb
ret
push
shll
ss
push
aad
dec
lcall
fnstsw
scas
popa
add
insl
or
or
lock
mov
aam
inc
stos
movsl
dec
sbb
add
jbe
xchg
aam
or
sub
xchg
sub
rclb
fst
imul
inc
xchg
adc
adc
fwait
popa
add
xor
xchg
insb
mov
sub
sbb
lods
dec
lock
dec
adc
pop
xchg
dec
ss
outsl
dec
sub
push
jns
les
adc
ja
dec
or
push
bound
orb
xchg
xchg
mov
push
aas
iret
xchg
dec
inc
fs
jns
dec
fs
mov
imul
mov
fadds
and
pop
mov
ret
push
sbb
repz
shrl
es
mov
xchg
insb
iret
cmp
movsb
or
adc
adc
push
fidivrl
adc
or
adc
xchg
xchg
pusha
xchg
scas
test
xchg
push
lcall
add
push
leave
push
jo
cmp
outsl
adc
cwtl
mov
or
fadd
cmp
mov
cltd
or
push
es
sbb
push
subl
add
mov
sbbl
mov
addb
push
and
push
mov
mov
cmp
adc
push
ss
inc
sub
push
add
sbb
sub
scas
or
or
adc
fistps
sbb
or
push
and
pop
push
inc
in
ret
adc
inc
mov
xchg
or
idivb
or
sbb
xchg
insb
rolb
inc
es
push
fimull
nop
mov
cmp
add
xor
mov
add
cmp
aam
sbb
push
mov
add
rolb
jo
in
cmp
mov
cli
outsb
push
dec
xchg
or
adc
inc
jo
pop
in
inc
js
nop
xchg
jmp
mov
pop
sbb
sub
shlb
mull
pop
rolb
cmp
cmpsl
mov
stos
push
xor
jmp
add
rorb
mov
movsb
int3
mov
mov
dec
xchg
or
dec
pop
sbb
add
dec
fiaddl
adc
push
push
lds
imul
dec
adc
push
dec
inc
xor
cltd
add
inc
or
push
jae
sub
daa
add
add
and
pop
push
add
xchg
vmread
mov
add
stc
sbb
add
test
inc
adc
dec
inc
rcl
pop
cmp
cmp
jno
sti
sbb
shrb
imul
gs
xchg
add
pop
test
add
jns
outsl
fwait
cmc
add
fdivrp
mov
add
mov
sbb
dec
insb
pop
adcb
sbb
popa
jmp
cmpsb
sbb
inc
sbb
or
sub
sbb
mov
dec
mov
addl
xchg
inc
cwtl
push
imul
push
push
das
sarb
adc
loopne
dec
cwtl
fwait
sub
inc
data16
scas
jno
cld
push
and
inc
push
movsb
mov
test
xor
mov
push
and
inc
mov
daa
sbb
call
mov
dec
negl
repz
jmp
add
sbb
out
add
jmp
push
pop
ds
push
push
or
imul
inc
lds
sub
fisttps
movb
adcb
inc
movsl
subl
cs
add
loop
dec
inc
or
out
push
in
mov
outsb
push
je
je
adc
inc
add
fsubrs
popa
movsl
xchg
loope
fldenv
mov
sbb
adc
dec
sbb
lds
xor
test
inc
sbb
out
xchg
jno
repz
push
mov
push
aad
cmp
xor
inc
shll
subl
and
push
sub
dec
arpl
fldt
js
pop
sbb
inc
push
aad
mov
dec
mov
adc
add
inc
pushf
adc
push
push
push
adc
nop
xchg
mov
xchg
inc
sbb
dec
jmp
add
shlb
insb
rol
jmp
push
and
stos
mov
or
js
xor
or
fidivrs
pop
jbe
adc
flds
mov
fcomps
jnp
imul
push
adc
movl
mov
lret
test
inc
lahf
push
mov
jbe
aam
or
pop
repnz
push
and
pop
pop
shll
test
adc
sub
sbb
adc
das
dec
popa
test
push
mov
sbb
fs
dec
jmp
adc
lds
int
push
mov
lods
dec
mov
mov
inc
dec
or
sub
imulb
sub
push
push
je
outsl
push
xchg
push
add
and
and
insb
jne
push
xchg
pop
xor
roll
cmp
or
adc
mov
mov
jmp
out
dec
daa
xchg
cltd
cmp
ficompl
pusha
or
push
xor
popa
or
mov
jp
dec
and
sbb
push
orl
fcmovnb
dec
or
jb
or
ret
jb
inc
push
xlat
mov
ret
sbb
aad
sbb
imul
sub
and
jle
push
sbb
push
and
cmp
and
daa
push
pop
sbb
mov
or
sub
xor
addb
ffree
lret
daa
inc
push
aam
mov
adc
loope
xchg
pop
mov
arpl
inc
mov
lahf
sub
dec
jo
xor
test
stos
sub
push
dec
xor
test
pusha
nop
mov
fsubl
leave
fnstcw
insl
andb
outsb
mov
inc
push
dec
arpl
or
cmp
pop
mov
cmp
add
stos
loopne
sub
lds
sub
or
sbb
imul
push
sbb
mov
aas
and
imul
or
sub
outsb
xor
push
aas
sub
inc
fs
sarl
or
mov
aam
pop
add
pop
pusha
inc
dec
inc
fildl
push
push
fisubrl
inc
or
sub
push
add
push
pop
add
lahf
add
test
fstp
jnp
push
das
fisubl
xchg
test
sub
bound
loopne
loopne
fldt
addr16
sub
cmc
or
xor
das
test
testb
ja
add
adc
and
test
push
sahf
pop
jmp
sbb
shrl
dec
add
sub
rcrb
add
add
xor
call
stc
popa
sub
mov
ja
cmp
sbb
xor
sub
test
and
mov
sbb
and
iret
insb
or
sbb
inc
insb
xor
fsubrs
fistpl
insb
xchg
add
dec
jb
sbbb
jo
inc
bound
mov
mov
shlb
mov
push
sub
pop
out
dec
push
xor
or
adc
fwait
push
inc
insl
adc
loopne
fsubl
mov
bound
xlat
call
xchg
sub
push
adc
outsb
dec
sbb
xor
lret
sbb
mov
mov
and
sub
adc
pop
sbb
adc
cwtl
insl
sti
adc
pop
fcomps
and
fimuls
push
shr
and
or
jmp
bound
mov
jae
rorl
push
or
push
dec
xor
addr16
jge
adc
jb
inc
pop
nop
adc
adc
xchg
sub
add
sub
xor
pop
andb
jo
inc
and
mov
outsb
inc
outsl
or
fisubrs
out
outsl
gs
fisubrl
and
pop
inc
push
mov
out
mov
lret
dec
and
cmp
and
adc
mov
test
cmpsl
popa
test
xorl
dec
jne
sbb
test
jno
sbb
adc
mov
pop
lds
iret
push
or
outsl
push
es
je
mov
bound
jb
sti
add
ret
add
pusha
icebp
bound
xor
cmp
xchg
inc
xor
ficoms
lea
dec
inc
or
or
inc
cwtl
shll
inc
orl
mov
mov
ljmp
dec
sub
rorl
daa
xchg
rcrb
ret
popl
test
out
sbb
add
aad
or
adc
mov
or
adc
mov
xlat
xlat
and
test
test
test
push
sbb
mov
jnp
fdivr
push
sub
lods
xor
add
int3
or
clc
rorl
mov
rorb
sbb
outsb
dec
stc
sub
cmp
test
sub
dec
js
dec
aas
pop
mov
fxch
ja
push
jg
mov
and
outsl
dec
dec
imul
insl
loopne
shl
out
add
imul
addr16
inc
push
pop
dec
push
fcmovbe
sahf
jno
ja
pop
rcr
add
roll
add
pop
shll
inc
and
mov
ret
inc
push
pushf
mov
test
sub
xor
dec
data16
lds
out
out
and
dec
aaa
movb
dec
jnp
and
cs
adc
mov
dec
push
inc
xchg
sbb
or
cmpsl
cwtl
gs
cmp
push
mov
sbb
jnp
and
mov
lahf
xchg
and
dec
jo
mov
xchg
cmp
enter
and
cld
sbb
lds
xchg
popa
mov
outsb
enter
jo
sbb
or
sub
pop
xchg
mov
mov
xor
lea
sarb
jecxz
push
jo
sub
ret
jecxz
sbb
add
or
push
ret
pop
mov
sbb
sbb
jg
iret
lods
adc
add
jbe
mov
lods
sbb
daa
insl
das
and
jp
xor
gs
add
adc
xchg
mov
insl
ror
lock
and
outsl
shlb
cmp
xor
sub
int
or
imul
and
mov
mov
scas
mov
inc
sbb
push
popa
inc
mov
lods
push
or
mov
repz
xchg
sbb
xchg
xchg
scas
in
cmp
push
scas
adc
es
xchg
cmpsl
rcll
dec
xor
xor
orb
add
daa
mov
je
jne
and
and
lods
sbb
pop
push
or
adcl
data16
xchg
mov
sarb
jo
sbb
int3
xor
stos
adc
lret
dec
mov
push
push
xor
in
adc
sub
adc
sti
sbb
sbb
rclb
pushw
adc
enter
and
sub
jmp
gs
dec
adc
dec
ret
xor
and
add
adc
out
xchg
add
cmc
js
sbbl
lds
sub
push
aad
inc
pop
push
cmp
push
mov
dec
xor
jno
test
mov
scas
sbb
mov
push
movsl
shll
xlat
les
push
inc
sub
lods
loopne
xor
mov
fidivl
and
jbe
cmpsl
stos
sub
mov
pop
int3
sbb
fadd
push
or
inc
sbb
jmp
dec
dec
daa
pop
mov
ret
subl
notb
das
into
sub
and
pop
pusha
xchg
das
fnstenv
xchg
fwait
pop
inc
adc
aaa
cltd
push
in
dec
lahf
adc
push
inc
and
add
out
sbb
stos
repz
or
jge
jns
or
movsl
movsl
or
sbb
mov
sbb
sub
inc
and
or
adc
lds
mov
and
rcrb
push
aam
rclb
imul
mov
sbb
enter
dec
pop
adc
add
inc
mov
test
push
adc
aad
inc
lock
mov
fcomps
or
inc
dec
data16
out
jg
cmpsl
data16
sub
adc
adc
mov
or
das
pop
mov
push
or
inc
sub
loopne
inc
pusha
rcll
xor
push
pop
imul
icebp
push
inc
mov
daa
ret
pop
insb
push
pop
pop
dec
mov
sbb
bound
mov
pop
popa
adc
mov
cs
and
and
lods
mov
inc
fs
xor
aas
lret
enter
inc
mov
dec
pop
adc
addr16
imul
fdivrl
rep
dec
sub
cltd
sbb
shll
sbb
and
add
mov
jle
lds
xchg
sbb
pop
mov
xor
xor
xchg
inc
push
add
arpl
jb
popa
mov
and
adc
dec
sub
fisubs
std
ret
pop
repnz
or
jmp
orl
jnp
pop
sbb
jl
daa
les
push
adc
xor
insl
sbb
movq
mov
add
call
add
idivb
or
sbb
add
aas
ret
xor
repz
mov
pusha
sbb
or
jecxz
int
sub
push
push
mov
jle
xor
adc
sbb
cld
push
add
addr16
mov
adc
xor
sbb
sbb
popa
or
jl
xchg
imul
sbb
cmp
shrb
cmp
test
mov
mov
imul
lahf
push
or
mov
push
xchg
in
vpmullw
je
cmp
sbb
rorl
sbb
xchg
fimull
add
mov
inc
mov
inc
add
dec
mov
mov
inc
cmp
add
outsl
push
add
and
sub
and
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
xor
pusha
add
cmp
