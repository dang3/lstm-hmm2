mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
ljmp
add
jb
gs
push
jns
je
insl
add
mov
xor
add
inc
outsb
jae
inc
push
popa
jb
incl
xor
cs
or
lcall
push
outsl
jb
dec
outsb
je
mov
fildl
xorb
jg
test
insl
insb
ss
push
data16
cmp
mov
gs
cwtl
mov
xor
das
add
jns
addr16
in
fwait
shrb
push
int3
fs
call
adc
push
outsl
imul
push
sub
cld
out
xor
out
sbb
adc
ss
icebp
add
cmp
push
inc
jns
inc
pop
xlat
sbb
mov
test
push
jbe
inc
js
outsb
fs
jne
mov
mov
jb
dec
arpl
inc
mov
add
jb
mov
fnstenv
sbb
push
int3
das
clc
or
fsts
ret
in
or
xor
loopne
je
jnp
rcll
fcomps
jle
nop
adcl
inc
adc
jae
jl
push
cmp
or
daa
push
pop
xchg
mov
jl
or
push
popa
push
in
je
mov
push
push
inc
insb
popa
jae
add
outsl
mov
and
push
inc
push
push
dec
push
cs
add
ret
inc
adc
cmp
xlat
jle
add
int3
sbb
jle
fists
or
xor
xlat
or
mov
movmskps
jb
popa
arpl
adc
and
and
push
andps
imul
in
mov
in
push
push
push
popa
shlb
adc
sbb
push
pushf
dec
data16
cltd
loopne
scas
or
jo
inc
mov
jl
xchg
shrl
inc
or
push
scas
jo
cmp
pop
or
ror
lret
sub
imul
mov
xchg
sahf
pop
push
dec
cld
int3
fs
or
xor
pop
jbe
jg
add
popa
je
jge
jbe
add
cmp
push
jnp
das
nop
adc
push
iret
repz
faddl
fcoms
lock
clc
pop
cmpsl
stc
cmp
mov
int3
adc
outsl
jnp
ja
add
push
inc
loop
fcmovne
out
inc
and
dec
vmread
das
xchg
xchg
daa
mov
pmulhw
pop
cmp
xchg
xchg
xchg
mov
xchg
fucomi
pop
sbb
sbb
out
ss
jbe
in
lret
xchg
mov
maskmovq
dec
clc
jmp
stc
call
cli
incl
sbb
incl
jp
stc
daa
mov
dec
add
ljmp
and
pop
icebp
mov
bound
arpl
cs
cli
sbb
inc
sbb
add
mov
inc
add
add
gs
add
mov
data16
dec
add
inc
ds
inc
dec
gs
or
imul
scas
fsubl
inc
push
sub
das
lds
cs
jnp
push
mov
pop
jp,pt
inc
cmp
jo
fscale
stos
mov
pushf
or
mov
xor
xor
push
inc
ja
movsbl
popa
insl
and
adc
inc
pop
jmp
add
add
ds
or
mov
push
adc
add
or
sub
movsb
push
popa
ret
pop
insb
add
jno
enter
adcb
fisubl
add
push
mulb
pop
sub
loopne
or
push
imul
nop
pushf
cmp
push
push
push
push
insl
jae
shll
jle
inc
add
sub
out
lods
push
or
jp
sub
in
pushf
adc
mov
fnstenv
push
arpl
clc
je
aas
mov
andb
pop
xor
jae
pop
popa
add
add
or
imul
and
add
ss
pop
jae
add
insb
sbb
inc
xlat
add
mov
add
jae
and
add
imul
repnz
xchg
rcr
imul
cld
mov
xor
dec
stos
iret
mov
sbb
ja
xor
sub
jl
loope
stos
sbb
test
sub
or
mov
or
push
mov
outsl
arpl
add
cmp
pop
mov
mov
gs
lcall
outsl
outsb
cmp
enter
aaa
or
imul
and
lahf
or
sub
lahf
lock
data16
loopne
insb
loop
jne
mov
sub
inc
addb
cmp
inc
gs
cmp
and
imul
mov
loope
mov
nop
popa
fnstsw
clc
mov
sbb
enter
outsb
lea
add
sub
or
gs
loope
addl
daa
popl
rep
jns
add
adc
and
movsl
les
ret
mov
sub
inc
dec
xchg
or
fldcw
in
lcall
and
clc
jmp
adc
int3
pop
cmpsb
arpl
insl
xchg
popf
fstpl
add
push
test
mov
mov
inc
daa
sbb
xor
fnstsw
iret
insb
sahf
pop
repnz
iret
mov
xchg
add
push
pop
adc
xchg
inc
sbb
lret
js
test
mov
jae
rolb
or
sub
subl
push
inc
xchg
push
cmp
add
jmp
add
mov
and
sub
push
insl
adcl
push
dec
into
mov
push
push
icebp
repz
add
push
push
hlt
jecxz
xor
imul
push
push
mov
out
push
call
jns
cmpsb
in
dec
scas
push
jne
mov
scas
lods
inc
lock
aaa
sbb
ja
das
and
push
arpl
adc
out
orb
insb
inc
add
cmp
pop
inc
lcall
es
or
and
sbb
clc
or
insl
adc
call
add
aaa
or
dec
lock
or
daa
jns
mov
imul
mov
sbb
lcall
or
and
and
mov
jae
jbe
lods
inc
arpl
cmc
sub
movsl
inc
or
push
shrb
pop
pop
ja
push
stc
imul
pop
push
mov
js
mov
and
or
dec
xchg
sub
xchg
push
sahf
jo
dec
push
mov
jno
add
lea
outsl
dec
xchg
push
or
xor
imul
outsb
imul
fs
or
push
mov
daa
and
int3
inc
pushf
sbb
sub
push
pusha
movsl
adc
jecxz
xor
add
and
sti
imul
outsb
jns
call
xor
jae
pop
and
fwait
xchg
pop
jle
sub
or
cmp
mov
jb
pop
push
popa
ja
data16
and
push
rolb
js
cld
mov
stos
pop
out
push
inc
sbb
adc
push
ja
or
data16
das
adc
dec
test
cmp
inc
dec
and
dec
ss
adc
aad
cmp
mov
mov
fnstsw
dec
inc
add
jns
push
pusha
cwtl
ss
dec
pop
enter
lahf
pop
dec
imul
and
daa
shlb
adc
and
insb
les
dec
gs
clc
mov
fadds
dec
in
pop
das
or
das
dec
cmp
sub
sbb
mov
sti
stc
dec
mov
xchg
and
mov
mov
push
sub
adc
and
add
test
push
jge
or
dec
pop
loopne
movl
cmp
bound
xchg
lock
inc
ret
mov
decl
jmp
push
cmpb
leave
js
jo
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
adc
leave
dec
mov
inc
sbb
dec
dec
outsb
pop
cmp
lods
xor
pushf
fmull
cvttps2pi
and
pushf
pushf
pushf
and
adc
cmp
or
cmp
cmp
test
psubb
jb
hlt
mov
jb
lock
nop
mov
jb
mov
in
pop
pushl
push
add
mov
out
add
inc
or
call
testb
je
movzwl
mov
inc
inc
mov
ret
jle
aam
bswap
in
sbb
mov
dec
and
insb
xchg
and
fdivr
jg
imul
and
mov
jb
and
imul
outsl
data16
int3
sub
popa
insb
and
je
popa
inc
inc
sub
pop
mov
outsl
jo
mov
mov
fdivs
gs
insl
enter
mov
and
and
arpl
and
adc
cmp
sahf
or
pop
mov
add
data16
leave
xorb
outsb
mov
add
and
test
sbb
push
mov
pop
pop
jge
imul
add
sbb
mov
xor
xorb
iret
mov
mov
mov
mov
dec
add
inc
or
xor
jnp
and
sub
ds
or
mov
or
imul
fildll
outsw
lods
imul
and
jp
add
cmpsb
imul
pop
bound
imul
dec
nop
inc
dec
sub
xor
popf
imul
cmpsb
pop
stos
mov
cmp
jg
imul
jmp
lret
jns
fucomip
outsl
fildl
fildll
jl
push
cmp
add
js
and
data16
adc
inc
sub
mov
out
xor
mov
add
nop
fistpll
jl
cmp
mov
mov
jmp
mov
shr
movzbl
jge
call
rol
and
pop
mov
and
dec
out
add
sub
ljmp
decl
add
xchg
mov
scas
sub
push
add
lret
push
add
aas
and
ret
or
addr16
ret
cmpl
adc
adc
inc
cld
add
orl
adc
push
aaa
clc
in
dec
add
clc
cmp
dec
jnp
idiv
pop
mov
cld
sub
aam
fildl
or
pusha
push
mov
ret
inc
sbb
push
add
outsl
rclb
call
xor
daa
js
jnp
mov
mov
loop
fisttps
fsubs
lret
ret
push
sub
push
out
mov
mov
mov
sub
sbb
xor
mov
cmpb
lods
shl
jmp
fnstsw
mov
fwait
mov
dec
or
dec
test
push
xor
nopl
jle
push
push
mov
lea
or
dec
add
and
mov
movb
outsl
or
add
sbb
aam
pop
rorb
mov
pop
mov
sbb
add
fistpll
pop
pop
pop
faddp
add
mov
sub
jae
mov
jle
adc
mov
push
and
or
test
jne
lahf
push
in
mov
jns
add
shlb
aas
or
cmp
in
push
push
lea
xchg
pop
addr16
inc
je
push
jne
push
push
cmp
decl
out
jbe
sub
add
jmp
test
jne
lods
fiaddl
and
fisubrs
lock
sub
dec
nop
inc
loopne
lods
loopne
out
repnz
sub
pusha
cmp
and
jmp
fsubrp
pop
mov
pop
shll
add
cmp
jbe
ljmp
out
mov
adc
xchg
orb
rdpmc
or
or
cmpl
test
jo
fs
mov
stos
inc
ja
xor
pop
mov
add
dec
and
sti
fidivrl
ret
jae
fdiv
pop
rorb
lea
push
inc
pop
push
mov
shl
aaa
xchg
jecxz
pop
or
pusha
or
push
push
std
sub
add
jbe
ret
push
sbb
cmpb
iret
xchg
mov
iret
and
js
shr
cmp
jb
addb
icebp
ja
jmp
dec
and
mov
cmpl
push
add
pusha
bound
mov
ja
je
in
clc
jmp
push
lea
mov
inc
or
dec
mov
fisubl
sub
dec
idiv
je
and
fstp
lcall
mov
add
sarl
or
jbe
mov
cmp
aas
adc
es
mov
lods
pusha
and
and
jmp
xorl
dec
xchg
aas
je
jecxz
jae
lods
cmp
cmp
mov
xchg
cmp
je
xchg
add
or
mov
mov
mov
add
add
mov
leave
cld
mov
cmp
add
pop
inc
inc
ja
push
test
add
cmp
jne
mov
movsl
ret
push
jne
btr
mov
push
jle
pusha
or
jb
mov
add
mov
cli
lea
mov
mov
sbb
mov
mov
sbb
add
iret
sub
sub
cmp
and
inc
sbb
outsl
mov
cmpsl
mov
mov
andb
cld
mov
push
mov
xor
das
mov
mov
movl
jl
adc
adc
push
or
imull
iret
mov
adc
rcll
addr16
fisttps
and
jge
mov
movsb
or
faddl
cmp
mov
lea
pop
hlt
loopne
or
pushl
and
or
dec
loope
rol
or
jmp
mov
mov
sub
rolb
push
adc
mov
shl
push
xor
fnstenv
adc
fdivs
ret
pop
orl
cld
jmp
mov
dec
sbb
add
mov
or
fwait
out
xchg
inc
inc
cmp
movl
cmpsb
mov
xor
setno
loope
pusha
enter
fisttps
shrl
sub
nop
and
mov
sub
ss
roll
test
dec
inc
add
mov
jne
subl
je
push
jl
sub
rorb
pop
cmpsb
imul
xchg
dec
pop
dec
cmpsb
xor
mov
lea
pop
ficoms
push
cmpsb
adc
sub
sub
and
iret
add
jns
cmpsl
bound
push
push
cmp
pop
pop
leave
outsl
xor
push
jb
fsubr
aam
inc
sub
or
and
add
cs
and
fmull
scas
testl
sub
xor
testb
jne
cmpl
mov
mov
add
push
ss
mov
xlat
mov
ret
mov
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
sub
or
lahf
mov
test
cmp
sbb
add
jo
movsl
movl
cmp
fcoms
inc
push
adc
pop
add
fs
push
pop
xor
mov
sbb
scas
mov
cs
sub
push
sbb
jb
jns
jb
jo
cld
pop
mov
ret
jg
or
call
sub
dec
or
push
mov
loop
roll
sar
and
add
hlt
sub
jbe
clc
iret
mov
call
xchg
test
cs
cmp
lret
mov
add
jecxz
cmp
push
pop
loope
stos
xchg
cvttps2pi
cmp
jb
sbb
ljmp
jl
pop
mov
and
stos
jmp
add
xor
cmp
les
push
add
arpl
mov
push
cmp
mov
and
or
mov
push
mov
add
or
push
jmp
data16
mov
roll
xlat
idiv
lds
add
addl
sahf
sub
sbb
push
inc
mov
out
inc
sbb
fdivr
out
or
adc
cld
test
mov
sbb
les
add
ljmp
adc
pop
xor
shlb
out
push
rcrl
negb
sarl
ja
cmp
xchg
pop
mov
icebp
dec
shr
add
xor
sub
adc
fiaddl
add
lea
ja
andl
or
add
push
jle
push
lea
xchg
jl
mov
push
pop
add
adc
or
mov
jecxz
mov
mov
rcl
dec
iret
and
gs
shlw
mov
clc
jge
jecxz
dec
shll
pop
shll
push
push
lea
jecxz
lea
lcall
add
insb
sti
cltd
jae
neg
fldz
fstl
add
js
ss
clc
or
rcr
outsb
mov
mov
hlt
mov
pushl
rorl
shlb
xor
aad
ret
inc
dec
xlat
je
mov
mov
mov
and
add
sbb
jg
fisttpll
aad
into
ret
and
adc
push
mov
or
pop
or
sbb
jmp
sbb
add
push
pusha
lock
mov
add
fmuls
mov
cld
fcmovne
sbb
inc
pop
jo
mul
lock
ss
push
mov
loop
shr
imul
add
enter
mov
loopne
stc
adc
inc
sbb
wbinvd
shrl
xchg
pop
enter
aaa
sbb
sbb
inc
add
add
lret
add
add
test
dec
sub
dec
aas
adc
popa
xor
inc
add
icebp
mov
inc
lcall
bound
xor
mov
add
push
push
cmp
pop
sub
mov
out
stos
mov
inc
inc
ds
js
mov
cs
pop
push
nop
push
mov
push
push
cmp
cs
call
jno
icebp
jne
mov
push
in
cmp
ja
pop
or
mov
lock
push
push
jae
ss
mov
push
sti
divb
adc
mov
js
add
push
adc
jg
icebp
cmpl
testb
je
adc
call
add
fidivl
notl
mov
dec
cmp
gs
shrb
xchg
push
and
xor
cmp
jne
test
daa
dec
movb
idivl
lea
mov
and
inc
jne
push
clc
sbb
pop
pop
incb
jle
cld
sbb
mov
push
xor
mov
mov
outsb
sbb
in
pop
in
or
cmp
mov
inc
scas
inc
or
cmpsl
loope
mov
imull
call
cmpl
inc
out
inc
sbb
adcb
and
add
jp
shr
sub
sub
mov
mov
stos
ljmp
pop
sbb
adc
mov
pop
mov
cmp
jne
add
push
jbe
add
mov
or
mov
adcl
jne
mov
mov
cld
mov
test
mov
pushf
inc
add
lea
mov
lea
lea
inc
in
and
mov
mov
jne
jns
sbb
sub
pop
xor
fdivr
inc
je
aaa
sub
test
mov
incb
scas
add
jge
lret
inc
hlt
adc
arpl
les
or
fs
dec
fstpt
inc
imull
rorb
hlt
jb
push
fsub
sub
xor
mov
jmp
movb
jg
dec
sahf
arpl
jl
shl
cwtl
jle
adc
cmpb
mov
cmpb
mov
and
add
dec
aam
loope
loop
in
cmp
test
xchg
xchg
popa
das
push
jmp
xchg
in
scas
sbb
adcw
repnz
mov
das
mov
iret
incb
je
orl
inc
cmp
fidivrs
movq
incl
sbb
fiadds
add
xor
icebp
fmuls
xchg
jecxz
mov
ret
cs
dec
jne
pop
mov
sbb
imull
loop
sub
mov
and
gs
enter
and
clc
push
dec
push
das
push
movb
jmp
xchg
pop
and
shrb
sbb
or
xchg
sbb
mov
mov
hlt
pop
jmp
mov
inc
jbe
aam
out
add
mov
and
divl
cmpsb
int3
mov
mov
pusha
mov
mov
icebp
mov
test
popa
mov
jmp
dec
adc
es
in
xchg
dec
mov
jns
mov
xchg
sti
cli
mov
or
jl
cmpb
push
fidivl
xchg
negl
insb
jg
leave
lea
shlb
movl
insl
mov
dec
out
in
loope
pop
sbb
adc
in
adc
imul
mov
xor
pop
shrl
stos
cmpl
xchg
adc
mov
imul
push
cmp
movb
inc
push
or
ja
cmpsl
fstps
push
es
dec
and
add
ret
mov
add
stos
pusha
or
jmp
jb
je
dec
je
jmp
pop
jnp
jo
jo
inc
mov
pop
repnz
xchg
inc
ds
or
inc
cld
addr16
nop
js
scas
cmp
or
sub
sub
xchg
push
sbbl
dec
icebp
mov
ja
fnstsw
push
or
sbb
mov
or
dec
arpl
shll
sbb
inc
xor
jae
add
movsb
mov
add
filds
inc
xorl
dec
jne
mov
and
jl
adc
negl
ror
xchg
mov
sarl
es
pop
mov
mov
cli
in
fcomip
add
jne
mov
mov
add
add
clc
jbe
mov
bound
ja
bound
ret
aaa
jne
outsl
mov
mov
cmp
sti
mov
bound
movl
inc
in
inc
clc
or
stos
aas
repnz
lock
ror
xor
add
call
out
jae
mov
shr
cmp
jbe
pop
aad
pushl
scas
enter
loop
push
in
loopne
add
mov
sub
out
xor
loope
lea
add
mov
xor
jae
mov
fstl
insb
sbb
shl
int
push
sub
mov
xor
div
imul
mov
sub
adc
xor
jns
loope
pop
das
cwtl
movl
mov
sub
ret
mov
ret
repz
loop
imul
fsubr
fistpll
mov
add
adc
sub
add
std
cmp
jne
mov
add
dec
adc
add
inc
or
mov
dec
jne
enter
sbb
ror
fucomp
rorl
repz
jnp
outsl
outsl
jl
fistpll
fimuls
cmp
hlt
cmp
jne
adc
or
sub
push
fdivrl
or
mov
lea
adc
lahf
mov
add
scas
shlb
or
adc
add
ret
mov
fidivl
pop
ret
imul
fs
adc
decl
xor
add
xor
shlb
mov
inc
insb
pop
or
ret
xchg
adc
jae
jne
test
bound
rcr
arpl
ss
loopne
orl
cmpl
test
lret
cmp
ret
aas
xorl
dec
in
sbb
push
jo
and
jge
mov
rol
out
jmp
les
ret
mov
dec
jnp
pusha
out
fadds
mov
or
jne
outsl
cwtl
sub
adc
jmp
cmp
ja
movzbl
add
jl
jmp
pop
pushf
add
filds
xor
jg
cmc
adc
push
push
push
add
mov
pop
pop
jne
lahf
sbb
pop
call
test
mov
loopne
test
nop
sbb
incl
xor
sub
jg
jmp
mov
sub
jle
or
sbbl
sbb
jecxz
movsb
std
inc
sahf
out
scas
dec
jle
test
mov
out
mov
push
mov
int3
shr
or
adc
flds
in
testb
sbb
ret
jle
or
shrl
lret
aas
cmp
lea
jbe
adc
add
clc
sub
pop
pop
mov
pop
mov
cmp
or
cmpsb
mov
adc
out
push
mov
add
insl
cmpsb
cmp
push
add
ret
lods
jmp
jg
add
add
data16
push
pop
cli
and
or
and
push
fsubs
add
add
xchg
fsubrs
and
pop
jmp
inc
imul
push
lcall
hlt
xlat
cmp
xor
scas
imul
adc
xchg
cmpl
or
in
dec
cmp
pop
neg
pop
hlt
movsl
xchg
or
mov
aad
sbb
pushl
fs
addr16
and
idiv
fmull
xor
cmp
cld
pop
cmpl
add
jmp
pop
pop
jecxz
js
pop
pop
adc
jo
dec
bound
cmp
cli
mov
pushf
pop
pop
xchg
xchg
sarb
hlt
std
andb
es
rorb
test
jne
push
loopne
idiv
cld
add
clc
push
inc
aam
arpl
clc
jmp
push
inc
mov
hlt
pop
rorb
or
push
clc
push
sahf
jp
in
movsb
lock
cmp
mov
add
ja
iret
mov
fldcw
insl
outsl
out
cmp
pop
push
sub
adc
scas
mov
or
fnstcw
fwait
orw
mov
fldcw
push
add
fldcw
pop
inc
sub
jo
test
mov
in
aam
pushf
adc
and
mov
rorb
push
adc
clc
dec
pop
call
mov
clc
insl
jne
orl
or
sbb
daa
lods
push
subb
lods
es
push
addl
pop
or
sub
dec
sete
cmp
movl
aaa
outsl
stos
or
sub
nop
add
mov
adc
mov
add
sub
mov
mov
je
add
sahf
cmp
mov
xchg
push
mov
rolb
inc
mov
das
inc
mov
jge
pop
sqrtps
adc
or
pop
sub
mov
and
jle
shlb
push
je
push
lea
push
sbb
cmp
fistpll
cmpl
ret
dec
decw
dec
pushl
pop
mov
inc
out
sub
shll
push
push
aaa
je
mov
push
out
mov
scas
rorl
pop
pop
dec
fnsave
imul
cmp
outsb
leave
negb
push
xchg
sub
jp
cmp
out
dec
jne
jmp
lea
fsubl
insb
adc
mov
je
and
pop
inc
imul
push
cmp
hlt
jmp
lock
je
popf
mov
fcmovbe
lods
dec
pop
mov
add
mov
loopne
dec
and
xor
adc
test
pop
push
rcr
enter
lock
sbb
add
add
push
mov
push
pop
inc
sbb
ret
pusha
rclb
push
dec
mov
push
dec
jbe
push
jae
mov
and
hlt
add
lods
js
pusha
jmp
jmp
data16
push
rcll
fucomi
pop
cmp
dec
mov
pop
cmp
sub
shrb
inc
mov
push
sbb
cmp
mov
push
xchg
mov
cli
das
adc
add
sarb
ret
push
loope
mov
push
push
int3
call
enter
test
add
dec
test
mov
adc
addb
cmp
xor
jmp
cmp
mov
aam
je
arpl
fadds
das
int
and
sub
adc
or
xor
mov
dec
push
push
imul
pop
ds
xor
and
flds
jb
or
ja
data16
xor
and
loop
jl
addl
ljmp
adc
sub
or
cmp
cs
lret
jbe
mov
mov
inc
inc
sbb
xchg
adc
aas
push
mov
shr
je
enter
jne
dec
je
cmp
pop
add
cmp
sti
jmp
shr
xchg
adc
pop
and
je
mov
cmp
jne
push
lcall
add
dec
mov
add
sbb
pop
cmp
xor
call
cmp
jne
shr
shr
sbb
pop
sbb
ret
mov
jl
pop
cmp
xor
add
ljmp
fstl
mov
std
push
xor
and
push
fiaddl
pavgb
hlt
or
test
jle
mov
and
inc
lea
jns
mov
cs
sbb
sbb
push
sahf
out
sahf
adc
adc
or
rolb
or
add
jo
orl
test
pop
cwtl
mov
jg
mov
mov
xor
mov
pop
xor
ljmp
xchg
mov
push
add
sbb
or
and
dec
cmp
jnp
js
pop
mov
adc
add
cwtl
test
rorb
lock
and
loopne
jne
inc
cltd
cld
or
inc
adc
lret
cli
mov
mov
jmp
call
addr16
jmp
mov
shl
lods
adc
push
inc
or
and
add
fs
inc
xchg
bound
and
nop
push
add
lea
jo
andb
sub
push
adc
mov
rorb
ja
push
cmp
xorl
fstpt
push
add
cmp
je
mov
cld
cld
cld
jle
sub
je
and
je
je
dec
mov
cld
pop
je
xor
arpl
push
sarb
xlat
push
data16
inc
or
lcall
sub
clc
ja
lea
add
add
sbb
sbb
loopne
int
or
add
std
jg
and
js
pop
sub
jmp
inc
dec
jmp
mov
addr16
sahf
popa
jb
mov
lahf
ja
and
add
inc
pushaw
jg
mov
lret
int3
ret
pop
xor
shr
mov
testl
out
mov
mov
in
sub
inc
mov
rol
imul
add
in
pop
inc
loope
mov
and
dec
lcall
mov
inc
xor
push
cmp
cmp
jne
dec
jne
pop
jno
mov
mov
cmp
repz
sbb
mov
inc
or
rcr
sti
inc
dec
jne
push
fidivrl
in
xlat
rolb
into
jl
fcompl
and
lcall
icebp
push
test
lods
push
mov
cmp
jbe
adc
pcmpeqb
fsts
je
dec
mov
cmp
jmp
pushf
xchg
push
push
sbb
jge
mov
xor
jge
dec
sub
jmp
fstp
fldt
sbb
dec
mov
fldz
in
jg
nop
daa
lahf
sbb
mov
daa
lahf
jl
cli
or
or
ret
and
stc
enter
xchg
cwtl
push
and
int3
imul
mov
mov
inc
mov
jb
dec
es
test
push
xor
out
sub
pop
jecxz
add
leave
sbb
cld
lret
lds
mov
jbe
imul
cmp
dec
cld
mov
mov
bound
cmpb
xlat
fadds
rep
nop
lods
outsb
xor
xchg
push
or
push
push
dec
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
decl
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
mov
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
cld
incl
push
daa
cmp
inc
xor
cmp
call
mov
sti
jmp
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
call
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
call
mov
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fdivr
jmp
addr16
repz
mov
subb
and
and
outsb
bound
hlt
call
lret
fninit
fwait
add
xchg
mov
mov
mov
inc
mov
movsl
xchg
and
aaa
cs
xor
clc
mov
jns
fbstp
inc
cltd
cmp
xchg
push
mov
push
clc
iret
inc
in
fsts
jnp
mov
pop
loopne
sub
es
sbb
push
mov
outsb
or
sete
jne
mov
insb
mov
andps
mov
addb
js
mov
movl
mov
rcrb
inc
and
sbb
loope,pt
js
xor
ror
test
jnp
test
jb
decb
push
movups
fs
icebp
cs
xor
incl
js
pop
mov
mov
call
lock
sub
jg
or
xor
dec
rep
pop
and
loopne
aad
push
mov
mov
sub
shl
mov
jmp
cmp
je
pop
mov
mov
adc
es
mov
mov
push
sbb
inc
jl
push
cmp
out
mov
mov
mov
mov
sub
outsl
test
add
les
adc
cli
testl
cmp
jb
sgdtl
cs
jmp
and
sarl
add
incb
inc
scas
hlt
xorb
mov
mov
mov
sub
add
sub
inc
lods
mov
mov
dec
pop
test
adc
push
cmp
pop
lea
push
add
push
lea
push
sbb
mov
insb
hlt
aad
jmp
mov
push
pop
dec
mov
cmp
scas
aam
push
int3
sbb
push
or
cmp
and
lar
push
je
cmpsl
push
add
jns
call
enter
inc
lods
cmp
cmp
mov
cmp
jne
jb
cmp
adc
lcall
or
jle
dec
lds
lds
addr16
xor
scas
xchg
loopne
mov
pushf
xor
mov
add
adc
xor
or
sub
pop
insb
arpl
in
pop
inc
mov
xor
nop
rorl
mov
leave
loopne
iret
hlt
jne
mov
cmc
nop
push
xchg
jmp
fidivrl
pop
cld
decl
mov
add
repnz
je
pop
std
mul
mov
pop
add
sub
je
cld
pop
ficoms
mov
lret
push
out
mov
mov
popf
cmp
or
mov
sbb
mov
addl
orb
aas
pop
mov
xor
push
data16
or
pop
cmp
fidivs
aad
add
pop
das
std
adc
add
jo
shrb
push
test
dec
adc
push
ja
bound
std
arpl
xor
cmp
mov
imul
inc
fcoms
push
ja
mov
rcl
pop
sbbl
out
xchg
cs
iret
xor
xor
mov
add
bound
rclb
lcall
mov
cmp
sub
push
add
dec
jne
psraw
xor
xlat
jmp
pop
jmp
push
lea
ljmp
push
fadds
andb
jmp
mov
mov
test
cld
scas
jmp
jne
push
adc
flds
pusha
out
sbb
jecxz
mov
adc
scas
xchg
sub
inc
and
in
sbb
cli
aas
clc
sub
cmp
je
add
fidivs
repz
lea
ds
js
jne
cmp
fucompp
cmpsb
xchg
xchg
lea
mov
aas
rcll
je
pop
ret
clc
sub
in
pop
jmp
pop
xor
call
sub
fcmovne
push
pop
repnz
add
scas
iret
inc
mov
fcomip
dec
push
push
push
test
jl
or
xor
lea
mov
mov
mov
or
inc
add
pop
push
inc
or
or
es
sub
xchg
dec
cmp
mov
cld
leave
mov
mov
push
xchg
aas
mov
sbbb
dec
cmp
adc
add
sbb
push
clc
ret
mov
gs
xor
test
in
pusha
sub
push
or
sub
mov
xchg
jae
sbb
pop
mov
xlat
and
add
or
add
push
clc
mov
mov
jnp
dec
inc
add
and
push
pushaw
enter
jo
jl
call
int3
mov
add
loopne
sub
jbe
add
jl
inc
in
push
call
pop
push
or
inc
adc
in
cmpsl
sbb
pop
imull
add
inc
ret
mov
add
or
jle
cmpsl
mov
pop
push
push
and
leave
jg
cld
add
add
jmp
or
mov
or
add
push
addr16
sbb
jecxz
in
xor
jo
mov
push
aas
xor
jo
loop
test
adc
jecxz
dec
jecxz
pop
push
testl
dec
cmpl
mov
adc
outsb
cmp
adc
testb
icebp
xchg
adc
inc
aam
lret
jg
aam
addb
je
dec
push
jb
jge
dec
sub
sub
push
push
lea
jl
pop
jbe
pop
cmc
js
fwait
or
jne
xor
cmp
adc
adc
push
jns
je
orl
push
rorb
inc
pop
xchg
push
sub
adc
mov
orl
jl
pop
rcr
or
pushl
or
jo
add
inc
add
push
add
pop
mov
jmp
and
aaa
mov
imul
xor
adc
enter
push
outsl
je
dec
lret
xchg
popa
dec
or
add
push
xor
into
hlt
testb
xchg
rclb
sarl
mov
lea
mov
jl
inc
mov
in
lock
inc
pop
sbb
addb
cmp
xchg
cmpsl
push
inc
enter
add
rcr
jmp
inc
inc
dec
or
mov
push
add
and
jne
test
jp
inc
jmp
ret
mov
mov
sbb
test
lahf
adc
stos
push
dec
inc
adc
mov
das
push
setl
ja
mov
orb
jmp
bswap
scas
sbb
test
pop
push
xor
xor
sub
or
dec
add
push
push
rcl
rorl
lods
adc
scas
jecxz
and
sub
adc
jcxz
das
sbb
test
in
loopne
xchg
adc
out
mov
or
mov
pop
push
push
push
push
mov
loopne
pop
mov
cmpsb
std
movsl
sbb
cmp
jo
add
adc
xor
xor
pusha
fstpt
outsb
out
clc
mov
into
add
pop
mov
cmpsb
xor
and
mov
mov
cli
xor
inc
or
pusha
add
adc
xlat
or
clc
or
cmp
adc
adc
sub
mov
xlat
out
jle
sahf
or
cld
jmp
ret
xor
nop
aaa
mov
rorl
ret
xor
and
or
ljmp
cmp
ja
jg
je
cmp
push
sub
push
adc
push
mov
dec
je
jmp
add
add
jne
jb
je
jmp
cmp
sub
adc
mov
jmp
sub
cmp
mov
jmp
mov
jmp
mov
dec
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
jne
push
inc
pop
lret
movzbl
rcrb
or
aaa
mov
daa
mov
ret
ud1
in
out
je
push
leave
dec
add
pop
or
pop
or
mov
adcl
loopne
je
in
adc
fsubr
out
push
inc
decl
sbb
mov
or
or
dec
xchg
mov
cmp
xor
test
push
mov
inc
lock
or
rcr
jl
mov
pop
loopne
sbb
add
and
sbb
cmp
sbb
push
out
or
loope
adc
jne
and
hlt
dec
js
rcll
clc
les
cmp
daa
mov
test
jle
dec
mov
je
add
cwtl
test
pop
xor
mov
mov
cmp
adc
test
xchg
push
repnz
pusha
comiss
ficoml
push
mov
xor
inc
scas
jg
cmpl
cmp
jle
mov
fadds
mov
gs
ss
xlat
int
mov
lret
add
adc
cltd
add
cmp
mov
sbb
movsl
mov
cmp
and
addr16
inc
inc
stos
sub
or
dec
enter
pop
fstl
mov
and
test
iret
popa
add
mov
popf
movb
nop
in
mov
mov
push
sub
mov
lea
mov
push
add
mov
insl
call
sub
dec
je
add
int3
pop
push
jl
or
incl
fmuls
and
iret
pop
pop
fistpll
jae
xchg
mov
inc
or
out
add
sahf
mov
mov
add
adc
cltd
idiv
or
dec
ret
fmuls
and
sti
shrb
dec
mov
mov
push
add
loopne
inc
add
fildll
loopne
push
rorl
loopne
adcb
mov
xchg
fidivrs
ja
add
mov
mov
jmp
lods
xor
repnz
rolb
nop
push
add
sbb
cmpw
adc
cmp
push
dec
loopne
mov
add
cmp
jno
sbb
sbb
sarl
add
arpl
jmp
push
xor
filds
fidivrs
mov
push
add
arpl
pop
outsl
mov
daa
jle
cmp
xchg
out
inc
fwait
pushf
push
sub
xor
je
std
inc
sbb
mov
xchg
cmp
push
fidivrs
xor
lock
jnp
pminub
xor
jne
xor
jne
xchg
add
pop
cmp
lds
xor
bound
je
mov
pusha
sbb
decb
mov
jne
cmp
je
adc
sti
xchg
push
xchg
mov
jno
add
xorb
jmp
les
add
stmxcsr
leave
adc
data16
mov
mov
dec
into
dec
or
inc
orl
mov
enter
fiadds
jns
xor
push
sub
and
aaa
inc
outsl
dec
push
fistpl
pop
call
pop
inc
hlt
and
adc
out
andl
pop
fldenv
clc
mov
sbbb
sbb
push
cmp
testb
sub
mov
mov
cmp
enter
push
or
push
mov
pop
mov
dec
adc
ja
xchg
ret
mov
call
lods
lcall
cmpsb
pusha
dec
clc
dec
jl
test
decl
hlt
pop
jbe
mov
adc
movl
push
or
dec
jne
push
ret
xchg
cmpw
dec
or
sarb
jg
in
mov
fs
addr16
orb
sbb
adc
inc
clc
xchg
adc
aam
nop
addr16
mov
jle
test
aaa
sub
jle
push
add
jo
pop
and
lock
bound
shll
add
test
outsb
test
lret
sahf
push
mov
hlt
dec
inc
in
pop
push
lahf
sub
inc
in
xlat
mov
mov
mov
or
clc
call
cli
or
stos
mov
push
adc
jo
fldt
movsb
inc
arpl
stos
xchg
push
jno
call
insb
pop
outsb
or
out
add
push
arpl
xor
imul
data16
outsl
cmpsb
push
jnp
add
ja
cmpsb
adc
ret
outsl
adc
xor
imul
cmp
push
push
andb
sbb
fadd
xlat
pop
cwtl
icebp
push
cmp
dec
sub
cmp
or
rorl
mov
mov
std
sar
cmpl
jg
adc
push
and
test
pop
push
adc
xchg
dec
es
and
inc
rol
je
leave
mov
pop
cmp
push
dec
pop
dec
das
mov
sbb
movsb
sbb
pop
scas
mov
pop
lahf
xchg
push
add
sbb
or
push
loope
xor
inc
pop
or
je
js
in
push
cwtl
jmp
inc
add
mov
pop
xor
sub
and
pusha
pop
imul
or
jmp
or
add
jnp
jle
in
or
sub
ss
repnz
adc
pop
add
pop
pop
pop
cmp
lods
sbb
xor
lcall
mov
iret
outsb
std
inc
pop
push
adc
pop
cld
cmp
adc
adc
fnstcw
mov
inc
scas
fildl
mov
and
cmp
test
dec
dec
dec
shrb
pop
sub
dec
jb
fwait
mov
push
lods
adc
movsl
or
xor
cmp
je
int3
jns
push
mov
lds
add
xorps
jb
inc
adc
movsb
push
mov
sub
fsub
inc
push
cli
adc
adc
add
jo
imul
data16
dec
hlt
lahf
pop
mov
adc
js
push
add
int
mov
xlat
rcll
in
aas
nop
mov
shl
jo
mov
mov
add
mov
ret
shrl
mov
orb
enter
loope
add
jg
cmp
jne
cmp
mov
pusha
subb
push
jle
rcll
xor
push
jo
sbbl
adc
aad
mov
add
xor
loopne
loope
inc
cli
outsb
dec
mov
and
loopne
jmp
push
sbb
mov
pop
push
mov
inc
xor
decl
arpl
shll
lret
or
loopne
mov
sbbl
add
xor
adc
add
inc
and
push
push
and
or
fimull
or
jne
cmp
jne
sub
mov
dec
jmp
push
jmp
push
add
dec
daa
pushf
or
movsl
xchg
mov
jo
ds
jne
iret
mov
inc
movsl
subl
decl
ja
xchg
dec
jge
pushl
add
dec
jmp
lahf
lahf
test
popf
add
mov
add
pop
or
dec
mov
movq
jne
mov
neg
add
imull
sahf
fimull
je
cmp
and
pop
test
jp
ss
pop
pop
push
jmp
jns
test
test
cmp
jp
ljmp
cld
jne
push
lea
lea
neg
sar
add
add
mov
add
cmp
je
rol
sbb
cli
and
or
filds
push
cld
ret
cmp
xchg
dec
push
add
pop
dec
pop
mov
out
ret
imul
sbb
inc
inc
push
js
inc
sbb
mov
mov
dec
or
jecxz
mov
adc
mov
push
jno,pn
mov
clc
add
push
ja
dec
pop
xor
pop
push
xor
cmp
pop
negb
rcpps
dec
mov
inc
dec
jl
cmp
jge
sub
fdivrl
fsubrs
cld
xor
add
mov
or
int3
jmp
add
inc
js
es
insl
cmp
jmp
data16
fldpi
lret
sbb
out
sub
add
pop
js
xor
dec
jl
dec
sbb
sub
es
xor
lcall
lea
xor
cmp
nop
xchg
cli
aas
or
negb
andl
rcll
jbe
push
loopne
jmp
push
incb
jo
xchg
test
xor
add
jo
push
dec
iret
scas
xchg
xor
mov
xor
cmp
int
push
je
das
cmp
mov
cli
sarb
shlb
cltd
loope
sbb
sahf
hlt
and
lods
adc
lahf
push
push
das
mov
inc
cmp
xlat
push
push
sub
pop
mov
fiadds
push
cmp
dec
fistpll
adc
inc
push
sbb
jno
iret
pop
push
test
insl
push
in
dec
insl
push
add
test
sbb
push
popa
test
add
jmp
lea
cmp
aaa
pushf
jge
push
je
out
cltd
inc
loopne
test
cld
mov
or
lea
xor
jg
adc
xor
popa
call
jne
pusha
int3
jbe
jno
popa
add
repnz
push
mov
popf
addr16
pop
push
lock
decb
push
ja
push
pop
pushl
mov
imul
pusha
out
arpl
ja
ret
sbb
jae
test
xchg
addr16
aam
pop
cmp
pusha
pop
jb
jo
sub
push
out
dec
dec
fwait
nop
jge
dec
rol
add
jl
push
psubusw
jno
mov
push
and
dec
inc
fdivl
not
ja
fcoms
ljmp
mov
inc
dec
dec
add
and
add
xor
add
dec
mov
adc
add
and
jle
ss
sbb
inc
and
shr
xchg
jmp
sti
and
pop
das
or
adc
jecxz
mov
aaa
popa
adc
jmp
cmp
jbe
cmc
add
xor
add
shl
xchg
repz
cmp
and
in
or
shlb
or
mov
xor
or
pop
test
pop
fdivs
push
punpckhdq
scas
or
jle
es
lcall
into
pop
loopne
dec
sarl
lock
in
xchg
push
pusha
jno
bound
pop
cli
add
lret
ret
sbb
loope
push
adc
mov
incb
cld
xchg
or
ds
punpckldq
xchg
push
aad
pusha
cs
lret
add
out
jmp
orl
hlt
push
mov
loop
cmp
stos
sbb
pop
aaa
arpl
aam
cltd
push
xor
lea
fists
jnp
push
stos
mov
adc
popa
cwtl
mov
ret
xlat
or
or
mov
inc
mov
fdivs
or
sbb
mov
imul
or
jmp
xchg
rorb
mov
movsb
xchg
into
sub
xor
int3
pop
mov
pusha
mov
jg
adc
pop
call
std
and
shrl
jmp
jge
push
fmuls
lea
lea
push
xchg
shrl
xchg
adc
scas
cmpsl
in
popa
fcoml
imul
rcr
js
sub
and
sub
push
pop
andb
xor
or
pop
sbb
dec
dec
nop
scas
mov
adc
and
sti
stos
insb
nop
add
add
xchg
inc
and
cs
ds
enter
test
stos
or
adc
cltd
pop
xchg
inc
mov
nop
fwait
shlb
mov
nop
sub
sbb
pop
enter
lahf
pushw
and
push
adc
mov
inc
mov
dec
jnp
ss
nop
test
sub
mov
inc
xorb
fimuls
xchg
mov
fldl
or
adc
add
movl
adcl
jl
push
and
dec
aas
sbb
sbb
lea
push
gs
mov
orb
cmp
inc
jge
pushl
shl
jb
jp
push
or
adc
add
or
dec
jecxz
dec
dec
es
in
dec
call
push
and
dec
sbbl
cmpl
mov
push
sbb
cmp
jne
enter
dec
js
cmp
addl
mov
enter
push
scas
add
ret
mov
das
pop
jp
push
andb
xor
or
fucomi
pop
dec
cmp
mov
pop
clc
sub
cmp
aam
push
push
sub
lcall
jb
add
mov
int3
test
dec
adc
neg
js
iret
das
pinsrw
and
pusha
jp
push
xchg
cmp
or
pop
jae
pop
arpl
or
incb
jl
cmp
push
call
cs
push
sub
sub
mov
mov
pop
lea
sub
loop
sbb
xchg
and
xchg
vmovntdq
and
shll
rorl
jle,pn
mov
stos
mov
in
aad
jge
or
cmp
jge
add
or
xchg
inc
repz
and
in
sahf
jge
add
add
mov
pusha
lcall
dec
add
int
fidivrs
dec
sub
sub
adc
jge
fs
outsb
inc
push
fwait
cmp
fsubr
adc
fstl
sahf
inc
cltd
fs
movsb
dec
add
movsb
cmpsl
in
mov
jb
ret
xor
clc
pop
jecxz
add
jle
push
add
jo
add
shr
sub
stos
add
shrb
mov
push
adc
out
adc
add
mov
lock
ss
mov
push
ret
sub
dec
js
mov
add
sarl
push
or
adc
cmpsw
scas
idiv
ja
dec
add
pop
push
or
rcl
and
lock
push
fld
call
daa
sarb
and
sub
push
fdiv
push
inc
movsl
imul
pop
cmp
pop
jp
add
add
sub
add
sbb
inc
outsl
ds
mov
movsb
addr16
inc
mov
mov
add
leave
stos
pusha
push
cmpsb
cmp
adc
pop
into
shlb
fcoms
insl
repz
out
aas
push
lcall
mov
xchg
mov
pop
sub
xchg
xlat
ljmp
xchg
cmpsl
fsubrl
jbe
adc
ficomps
repz
jae
testb
pop
sbb
or
xchg
add
xor
inc
enter
jle
leave
push
mov
incb
adc
jl
push
or
clc
sub
adc
or
je
jg
push
pop
ret
push
push
push
pop
xor
mov
mov
xchg
cmp
je
cmp
je
cmp
je
cmp
je
inc
jl
cmp
je
cmp
je
cmp
test
je
mov
mov
jmp
imul
ljmp
or
adc
jmp
push
mov
mov
mov
add
stos
in
inc
lock
adc
cmp
pop
test
mov
sub
and
in
xchg
clc
or
adc
push
out
out
leave
pop
call
call
shll
adc
push
sarl
push
push
into
sub
jb
mov
mov
push
arpl
movsl
dec
mov
insb
inc
ljmp
adc
lret
cmp
add
pop
cmp
mov
bound
es
pop
and
je
loopne
repz
clc
or
sub
adc
and
icebp
jmp
mov
push
adc
add
movsb
rcll
sbb
mov
mov
out
mov
lea
dec
add
lods
outsl
mov
pop
js
sbb
adcb
sarl
loop
pop
add
add
and
xchg
mov
cmp
cmp
test
or
imul
popa
or
insl
or
sbb
out
mov
leave
add
cmp
xchg
lret
inc
jno,pt
push
aas
cmp
jmp
and
insb
lea
mov
sub
and
sahf
sbb
dec
sub
inc
jb
mov
imull
cmp
add
sarl
xor
xor
mov
ds
jns
add
decb
inc
cmpsl
or
negl
or
sbb
or
aad
insb
and
mov
and
push
pop
insl
jl
sbb
sbb
outsb
aam
mov
loop
jne
pop
int
stc
sub
jns
sub
push
sub
mov
adc
dec
mov
cmp
cmp
add
push
mov
add
inc
call
xor
in
sbb
cli
cmp
add
in
sub
int
iret
dec
iret
adc
popa
add
or
push
sub
mov
xchg
or
xlat
shrb
movaps
xchg
jbe
dec
or
rorb
test
ret
shr
xchg
mov
lods
out
xchg
mov
pop
cmp
clc
les
or
push
mov
pop
enter
mov
add
aas
lcall
das
stos
xchg
dec
arpl
into
adc
loop
add
mull
mov
mov
fs
add
outsb
adc
push
push
ret
adc
dec
popf
pushf
sub
sub
xchg
mov
lock
out
dec
hlt
push
jne
cmp
mov
mov
js
and
sbb
inc
out
inc
push
sub
test
add
es
sub
mov
inc
jmp
test
outsb
lcall
add
push
ljmp
or
mov
pop
push
mov
xchg
jcxz
mov
inc
fistl
push
or
xlat
xchg
adc
sbb
and
jl
test
sub
pop
adc
inc
loopne
cmpsl
sub
shlb
jb
adc
neg
xchg
out
jb
out
jmp
inc
icebp
sub
jmp
mov
loope
aaa
jmp
push
xor
or
out
add
idivb
push
movsb
and
pushl
jmp
jg
mov
insl
lock
movsb
xor
mov
adc
loop
xor
inc
xor
hlt
jbe
cmpb
daa
add
jp
pop
idivl
xchg
std
fadds
dec
cmp
inc
sarb
push
jae
and
mov
aas
setle
cmp
mov
lock
sbb
jg
inc
push
movsl
sub
mov
inc
xor
jmp
movsl
xorb
jl
icebp
iret
add
sbb
or
xchg
push
jno
aaa
testb
pushf
sarb
je
dec
sarl
cmc
xor
and
xchg
in
sti
jmp
hlt
adc
leave
popa
pop
fldl
push
push
add
pusha
mov
dec
decl
scas
pusha
inc
xor
div
dec
mov
jg
hlt
mov
popf
pop
test
sbbl
add
pop
mov
add
sbb
pop
or
js
xchg
fucomi
out
sub
or
push
push
movzbl
add
cmp
cs
push
jg
ss
jp
testb
mov
mov
cltd
idiv
cmp
je
andl
js
das
dec
loopne
shrl
mov
pop
fdivrl
jge
jge
push
clc
fisttpl
xor
mov
sub
arpl
sbb
sbb
push
fdivr
fwait
add
scas
fisttpl
je
add
xor
cmp
and
fwait
add
rol
out
cmp
sub
clc
jb
xchg
sarb
or
adc
rol
fs
fmull
in
cmp
push
sub
lahf
cld
mov
es
or
add
cmpsl
or
jle
rorb
ljmp
jae
cmp
mov
lea
push
test
lcall
dec
jne
out
js
xchg
pop
push
addl
cmp
movsl
mov
add
dec
clc
jne
push
add
adc
push
push
push
lcall
or
sub
jge
sbb
cmpsb
cmp
jl
push
aad
mov
clc
pop
pop
pop
mov
lahf
js
mov
xchg
outsl
jecxz
push
or
adc
fdivl
sarl
sub
jmp
sub
jne
cmp
add
mov
inc
cmpsb
fistpll
adc
pop
mov
pop
xchg
xor
or
sbbb
outsl
icebp
adcl
push
push
and
jae
jae
pop
pushf
or
sbb
push
inc
aam
cmpl
push
or
mov
test
sbb
sub
xor
mov
jae
inc
push
pop
je
popa
outsb
insb
pop
outsb
bound
push
mov
or
shlb
inc
jns
push
clc
popa
jp
dec
popa
je
sub
out
sahf
push
insl
or
dec
sub
push
push
xchg
jne
ret
inc
push
push
sub
es
sub
outsb
daa
paddusb
popa
addr16
dec
jae
mov
outsb
jae
lock
fistl
fs
imul
sub
sub
push
ss
pushf
add
aaa
inc
mov
in
sub
jg
je
insl
sbb
loope
sub
jb
dec
inc
inc
push
mov
dec
push
inc
pushf
mov
clc
jae
push
or
xchg
in
in
test
in
inc
pop
push
inc
insl
mov
xchg
mov
aaa
fisubrl
mov
aaa
outsl
aaa
cmpsb
aaa
fisttpll
jns
sbb
cmpsb
jae
push
aaa
outsb
ficomps
and
aaa
dec
dec
inc
decl
shrb
pop
push
data16
push
notl
fiadds
pushf
and
idiv
clc
push
setae
or
in
inc
mov
adc
cmpb
enter
aad
add
xor
adc
push
or
test
daa
mov
cwtl
jne
push
mov
mov
add
add
mov
adc
imul
mov
mov
fbstp
arpl
popa
dec
scas
inc
xor
xor
pop
pushl
xor
ss
cmp
inc
inc
inc
rolb
test
mov
push
jl
aas
and
add
xchg
sbb
jl
shll
fcmovnb
mov
ret
mov
sbb
xlat
add
cmp
test
push
xchg
and
jle
mov
mov
enter
je
inc
mov
add
dec
jne
sbb
inc
fnstcw
pop
jmp
pushl
pushl
add
jnp
sub
mov
fs
std
xchg
jge
and
enter
xchg
mov
cmpsb
dec
fstl
jl
ljmp
or
or
pop
ja
sub
add
aas
test
insb
or
xchg
incb
test
pushf
adc
cwtl
sub
mov
pop
xchg
dec
clc
repz
cld
add
add
jg
xchg
je
dec
mov
jge
jb
fildll
cmp
pop
hlt
add
shr
cmp
fstl
add
and
jbe
inc
xchg
jmp
xor
add
in
jmp
jbe
int3
push
scas
movsl
test
push
fidivrs
and
and
imul
push
push
ss
in
daa
ss
mov
pop
and
lea
push
mov
mov
push
or
inc
cwtl
faddl
subl
and
inc
mov
xor
pop
call
test
sub
das
cmpsb
mov
rcll
and
adc
xchg
shrb
lods
push
in
cwtl
jg
sar
test
jmp
add
push
call
call
dec
dec
dec
add
mov
mov
xor
mov
loop
je
dec
subl
shll
mov
vcvttsd2si
inc
mov
push
aas
and
or
shlb
rol
ljmp
add
jne
data16
lods
push
jo
add
xchg
data16
cmpl
push
mov
fwait
mov
int3
cmp
loope
mov
adc
add
sub
cmpsb
out
rorl
add
push
mov
mov
mov
or
sbb
hlt
insb
bound
dec
adc
push
fwait
inc
push
xlat
add
pop
fstl
cmp
sbb
in
mov
fdivrl
sub
sbb
sub
xchg
ret
and
push
shlb
or
fidivrs
mov
cmp
xor
mov
sub
or
clc
sbb
test
lds
add
daa
sub
mov
add
stos
mov
jg
imul
inc
mov
xchg
push
sub
dec
dec
fsubr
or
mov
mov
bound
jp
pop
jne
ret
sub
and
mov
pop
mov
in
xchg
test
xchg
or
popa
sbb
mov
jno
roll
xorl
sub
push
test
sbb
cmp
adc
cltd
mov
sbbb
stos
push
sbb
dec
subl
test
push
mov
add
adc
push
mov
aaa
xchg
fistpll
cld
sar
jns
adc
adc
ffreep
cmpsb
insl
in
mov
sar
cmp
rolb
add
inc
cmp
jne
mov
xor
push
andl
jo
mov
xorl
std
fs
clc
int3
std
inc
lea
jle
imul
outsb
sarl
inc
test
pop
add
push
push
mov
adc
mov
mov
div
test
scas
popa
test
lods
adc
push
pop
sbb
imull
mov
popa
je
mov
daa
sbb
sbb
test
cwtl
and
scas
iret
out
xchg
jmp
sub
fnstcw
mov
sbb
pop
leave
pop
xor
sbb
cwtl
dec
sub
loop
pop
bound
cmp
inc
ja
add
xchg
inc
and
js
inc
xchg
popa
jo
mov
nop
xchg
push
mov
sub
add
std
pusha
push
sub
xor
pop
sub
push
test
push
push
pshufw
add
or
mov
pop
and
rclb
push
inc
out
jmp
mov
ja
sbb
and
pop
push
or
pop
inc
or
mov
mov
ja
popa
push
mov
sub
adc
cmpb
push
insb
and
mov
adc
jbe
add
dec
jo
sbb
aas
call
jg
in
adc
add
inc
je
mov
lock
sbb
jbe
fildl
sbb
or
addr16
jmp
mov
dec
mov
andl
sbb
enter
and
adc
mov
aad
mov
mov
movsl
jmp
loopne
xlat
inc
cmp
or
notb
cmp
xchg
ret
test
je
adc
mov
sbb
sub
orb
inc
sti
add
dec
mov
add
add
sbbl
call
jne,pn
loop
or
les
sbb
lock
por
adc
cmp
push
imulb
lcall
inc
or
push
mov
sarl
push
hlt
out
aad
in
shlb
sbb
add
sarb
movl
jae
out
popf
adc
mov
in
sub
cmp
mov
flds
pop
pusha
fisttpl
sbb
mov
inc
adcb
jb
add
pop
or
in
and
cmp
jne
adc
addl
xchg
das
jae
add
pop
sub
sar
not
xor
mov
jg
sbb
in
in
push
sub
lods
cmp
pop
fcomps
cmpsl
pusha
fsubrl
and
inc
fcompl
sub
push
adc
dec
fcomp
or
insb
imul
cld
sbb
lds
divl
or
lea
dec
or
inc
xchg
aam
push
mov
xor
dec
xchg
mov
mov
mov
sbb
adc
cmp
jne
mov
mov
ja
add
sub
xor
inc
pop
adc
push
sbbl
adcl
mov
cmp
cmp
dec
popf
dec
sbb
rolb
jmp
adc
or
daa
js
mov
or
ja
movsb
inc
mov
adc
loopne
ret
push
and
mov
and
add
in
mov
add
adc
push
cld
call
outsl
pusha
fs
jne
jmp
adc
iret
mov
push
sub
sub
mov
push
je
pop
dec
rcrb
outsb
test
push
inc
rcrl
out
sbb
sub
fs
adc
fstl
adc
je
ljmp
mov
ret
in
pop
ret
sbb
mov
into
popa
inc
pushf
or
push
inc
lods
or
and
test
mov
fdivr
insb
add
xchg
incb
test
pop
push
mov
hlt
outsl
outsl
sub
adc
js
inc
filds
push
sbb
lahf
add
pop
mov
ds
sbb
push
and
jmp
fcoml
rcll
std
pop
dec
insb
nop
jbe
cmp
jb
cmpb
mov
and
clc
loop
jg
pop
testb
fmull
je
ficoml
rolb
mov
inc
inc
sub
sbb
lea
out
xor
inc
dec
push
ret
push
pop
jo
dec
jbe,pn
push
pop
push
xchg
push
ljmp
inc
insb
inc
fisttpll
adc
push
andw
push
adc
fbstp
dec
or
sub
adc
mov
add
add
and
sbb
adc
popf
adc
adcl
or
jae
pop
test
mov
inc
or
sbb
cmp
adc
stc
push
pop
sbb
push
add
mov
es
push
insb
rorl
jmp
sbb
mov
lahf
test
or
loopne
xchg
push
adc
push
lret
daa
mov
test
push
adc
xchg
add
mov
mov
push
sub
outsl
jne
mov
add
mov
xchg
mov
inc
test
sbb
inc
sub
pop
stc
xchg
xor
jbe
inc
and
mov
sbb
sub
fisubs
xchg
xor
test
cmp
fucomi
test
mov
pushf
popf
call
movsl
ja
lock
sbb
xchg
adc
rcrb
addb
pusha
lock
ss
in
cld
and
popl
add
push
xchg
nop
outsl
push
ret
adcb
or
cwtl
sbbl
cmpl
or
test
movsb
pop
xor
pop
cmp
in
or
test
dec
cmp
add
test
and
adc
gs
sbb
rorb
adc
push
jo
popa
cmp
cmp
pop
jmp
xlat
jne
and
adc
movl
or
scas
lret
leave
dec
pop
push
sarb
inc
or
fsub
test
inc
hlt
dec
or
data16
and
sub
jl
dec
and
push
push
adc
cld
orps
das
jo
mov
adc
mov
mov
les
sbb
jl
mov
daa
add
cmp
jne
push
add
push
inc
sbb
add
bnd
dec
subb
push
xor
add
clc
add
shrb
sub
inc
xor
ret
jbe
testl
mov
insl
pop
pop
shl
push
dec
popf
cmpsl
out
sbb
pop
insb
inc
sub
pop
dec
pop
mov
cmp
jne
cmp
rolb
out
mov
shlb
rclb
xor
pop
loope
rcll
and
jne
jb
push
fsubr
scas
jb
cmp
mov
pushl
loopne
aad
call
or
inc
adc
inc
add
pop
loopne
xchg
sbb
ja
fiadds
mov
or
pushf
dec
in
pop
into
fwait
cli
incl
filds
sbb
lock
out
xchg
jne
lea
push
dec
inc
mov
repnz
adc
add
ror
mov
pop
in
adc
outsb
mov
pusha
adc
and
push
lea
mov
jle
mov
inc
push
ja
js
jle
cmp
dec
pop
mov
jmp
ss
hlt
dec
sub
pop
call
cmp
sub
test
inc
or
xor
adc
cmpl
popa
mov
jl
or
inc
sbb
and
pop
in
test
fsubl
push
arpl
xchg
cmp
push
xchg
in
or
or
lods
ds
movsb
jns
inc
sbb
hlt
hlt
jg
sbb
cmp
mov
cmc
loopne
orl
lock
push
push
sbb
mov
xor
xor
cmpl
sub
in
inc
pop
sbb
test
testb
pop
cwtl
mov
insl
movsl
shrl
lret
mov
sbb
clc
fists
xchg
pop
jnp
fucomp
fwait
xchg
dec
cld
adc
loopne
sbb
mov
push
cmp
push
jmp
xchg
sub
cli
in
sbb
test
add
mov
mov
add
cld
mov
jne
aaa
or
xor
or
jmp
or
rolb
mov
adc
adc
clc
out
xchg
xchg
fcmovne
fists
test
movsb
push
mov
inc
pop
je
enter
sbb
push
cwtl
xor
sub
test
jge
ret
cwtl
mov
or
mov
loope
jle
pop
ret
mov
notl
pop
pusha
es
jns
push
arpl
push
pop
ret
and
pop
dec
lock
mov
jbe
sti
pop
ja
mov
mov
in
lahf
fnstcw
or
mov
add
cltd
push
mov
pop
rorl
push
push
push
pop
push
js
dec
ja
pop
int
loope
out
add
in
fistpll
add
daa
add
adc
xchg
clc
mov
nop
push
add
gs
add
mov
add
aas
or
in
adc
je
outsl
insl
and
idivb
imul
ja
andl
push
mov
pop
je
addr16
dec
pop
lods
loopne
addb
arpl
arpl
mov
shrb
jno
or
pop
and
xchg
icebp
xchg
out
je
add
jl
sbb
jge
movsl
add
or
shlb
sub
jb
je
lods
stos
jg
lret
sbb
and
pop
ljmp
sahf
sub
rclb
loope
dec
dec
hlt
or
and
push
add
in
dec
cmp
add
iret
shll
mov
or
pushf
fmuls
fmull
dec
sti
movsl
ds
inc
faddl
cmp
pop
adc
cmp
loopne
cmpsb
and
inc
push
cmp
push
add
dec
ret
div
lea
pop
lock
or
xor
data16
mov
movsl
adc
or
dec
sar
or
clc
outsb
sub
push
adc
std
sbb
add
fwait
lds
int
int
call
aad
test
xlat
cmp
mov
pop
sub
lea
stc
ror
mov
mov
or
push
outsl
sub
or
or
push
or
jne
or
inc
addb
inc
add
test
nop
mov
adc
aam
push
insb
fildl
push
or
insb
ret
or
mov
push
mov
loop
add
in
adc
shr
or
add
fisttps
cmp
or
or
jge
mov
dec
call
push
push
jb
rcll
nop
lock
xchg
test
sbb
pop
xor
add
or
dec
or
rcrl
adc
out
popf
xor
loope
sbb
mov
sbb
daa
pop
imul
jle
pop
out
lcall
add
add
add
or
push
push
add
xor
testl
ds
pop
loopne
xchg
fsubrl
daa
jae
jno
push
ljmp
addr16
dec
dec
push
push
pop
inc
dec
sub
subl
add
mov
add
add
out
mov
cmp
mov
les
imul
sbb
pop
scas
leave
nop
pop
aas
sbb
jmp
sub
jne
js
dec
jl
push
sbb
aaa
mov
pop
inc
push
dec
push
dec
inc
inc
adc
inc
dec
dec
pop
inc
inc
inc
push
inc
and
xchg
mov
cld
dec
sbbb
icebp
adc
or
inc
outsl
jb
aaa
push
mov
hlt
push
jb
shlb
adcb
or
cmp
xorl
adc
pusha
jae
inc
jae
push
push
jo
xchg
sub
xorb
mov
or
inc
push
jo
popa
sbbb
pop
scas
mov
gs
push
scas
jno
js
sub
cmp
mov
ret
push
jo
xchg
push
pusha
jne
jae
sub
sbb
jo
or
or
cli
insl
popa
jo
outsl
xor
and
mov
mov
and
dec
jle
push
dec
inc
pop
mov
das
pop
dec
inc
mov
push
xor
mulb
dec
sub
jo
in
dec
inc
inc
sub
dec
inc
cld
push
sub
add
and
xor
das
pushf
dec
inc
push
fidivs
pusha
das
mov
dec
push
pushf
inc
push
push
inc
int3
es
or
jg
data16
hlt
xchg
adc
dec
dec
cld
mov
icebp
jno
and
cmp
je
or
mov
cmp
sbb
jge
loop
adc
push
jl
pop
inc
fimull
xor
sub
mov
js
clc
outsb
dec
sub
push
dec
adc
jo
inc
scas
arpl
bound
mov
adc
or
and
ja
sub
out
or
dec
mov
dec
dec
sbb
or
shrl
ficoml
ja
xor
adc
xor
jmp
or
xlat
loope
push
bound
stc
pop
and
mov
push
fcom
and
gs
mov
in
int3
push
adc
out
jo
xchg
adc
inc
add
js
insb
adc
mov
push
adc
sub
cmpsl
mov
adc
bound
inc
inc
and
adc
or
fildll
inc
cmpsb
in
imul
and
mov
imul
test
cmp
mov
mov
testl
pop
adc
ss
push
mov
pushw
jl
xor
pop
inc
lret
and
insb
jb
jae
push
stc
push
adc
and
shlb
xor
outsb
and
ds
les
out
inc
sbb
dec
imul
ja
dec
push
sub
mov
pop
imul
inc
and
fsubl
cmpsb
fwait
pop
cmp
dec
sub
in
push
sub
out
popl
push
push
inc
ds
lock
push
inc
sbb
push
or
dec
mov
subb
xor
sub
inc
imul
ja
dec
lods
adc
popa
insl
subl
pop
ret
std
add
xchg
jl
mul
xchg
add
mov
xor
mov
movsl
jne
and
outsl
fs
xor
adc
nop
jns
pop
jo
cmp
mov
scas
adc
inc
push
outsl
xchg
adc
stos
xor
adc
andnps
icebp
dec
outsl
je
dec
adc
popa
add
mov
fidivrl
inc
arpl
or
adc
pusha
or
loope
sub
mov
bound
outsl
js
xor
or
add
mov
andps
inc
push
sub
pop
cmp
je
jno
repnz
mov
dec
inc
pop
movsb
sub
mov
push
inc
push
add
add
ja
inc
fldl
push
push
sub
xchg
out
and
pop
inc
mov
xlat
jle
daa
mov
push
movsb
push
pushf
xchg
jb
and
nop
mov
test
jb
je
insb
push
fs
pop
pop
mov
push
push
xchg
xchg
or
cmpsb
pushf
mov
push
daa
daa
daa
mov
cmovl
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
fisubrs
pop
or
wbinvd
xchg
test
mov
mov
jne
cmp
add
popa
add
pop
pushf
xlat
inc
cmpsb
in
sbb
pop
je
lds
cmpsl
or
inc
sahf
fmull
add
sbb
dec
dec
lock
call
dec
loopne
fmuls
pushf
ror
enter
pushf
pushf
sarb
mov
test
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
nop
mov
pushf
cmpb
pushf
pushf
pushf
jo
fs
dec
inc
sahf
pushf
pop
xor
push
push
dec
dec
dec
dec
dec
dec
inc
inc
outsb
inc
dec
dec
cmp
wrmsr
dec
dec
dec
dec
sub
and
dec
dec
dec
dec
sbb
adc
dec
dec
dec
dec
or
add
daa
daa
and
sbb
hlt
lock
daa
daa
daa
in
call
daa
daa
aam
daa
daa
daa
daa
int3
enter
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwtl
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
sub
add
jl
pop
pop
xchg
ret
leave
leave
in
movsb
and
sbb
leave
leave
leave
adc
add
fs
add
sbb
hlt
pop
leave
leave
leave
leave
lock
call
leave
loopne
fcom
cmp
mov
enter
cmp
sarb
mov
test
xchg
xchg
xchg
movsb
mov
xchg
xchg
xchg
nop
mov
test
xchg
xchg
je
insb
push
fs
pop
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
sbb
in
leave
leave
leave
hlt
lock
call
mov
paddusb
jb
jb
aam
int3
daa
daa
daa
daa
enter
in
jbe
mov
in
in
test
mov
pushf
cwtl
xchg
nop
in
in
mov
in
jl
je
in
in
insb
push
or
pop
jg
push
xchg
xchg
xchg
xchg
push
dec
dec
inc
nop
xchg
xchg
xchg
inc
cmp
xor
mov
push
pusha
sub
mov
jbe
cld
stos
js
xor
sub
leave
in
bound
and
and
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
sbb
in
fs
hlt
lock
dec
cs
call
dec
dec
dec
fcom
ror
mov
sarb
cmp
mov
cmp
cmp
xor
sub
and
push
ss
lods
mov
adc
out
sahf
sbb
and
fwait
mov
mov
and
out
jle
jae
mov
in
and
cmp
sbb
clc
jnp
scas
cwtl
clc
test
ret
or
lods
mov
push
mov
pusha
in
ret
sbb
pop
xchg
ret
cmp
fs
or
sbb
mov
or
aas
inc
pop
or
arpl
jns
mov
pop
arpl
dec
and
mov
rcrl
mov
add
dec
add
and
mov
jne
jae
pop
pop
inc
pop
add
insl
sti
fiadds
dec
push
dec
das
inc
aas
cmp
fstpt
outsb
add
push
xor
sbb
inc
pop
push
dec
add
jb
xor
push
push
decb
pop
test
test
inc
add
lret
push
dec
adc
cmpsl
insb
sbb
or
pop
mov
xchg
mov
enter
mov
fnsave
jg
push
jl
mov
das
call
xchg
rolb
jne
mov
sti
mov
imul
xchg
aas
pusha
ret
xchg
sub
pop
adc
xchg
lret
add
and
push
mov
dec
jl
adc
fcomps
imul
xchg
int3
mov
push
dec
imul
dec
or
dec
imul
mov
or
daa
lea
cmp
xorps
and
gs
add
inc
sub
hlt
adc
push
outsb
push
sbb
fcoml
jmp
out
mov
or
lcall
dec
rcl
inc
add
jb
mov
dec
mov
mov
sbb
ja
daa
out
xchg
lods
aaa
xchg
icebp
jae
outsb
jp
es
sbb
fsubs
iret
and
inc
popa
push
and
nop
xor
in
add
imul
mov
inc
push
insb
and
or
adc
daa
adc
lea
imul
mov
push
nop
mov
imull
mov
sbb
lret
gs
arpl
popa
cmp
addr16
mov
fisttpll
cmp
jne
inc
ficoml
arpl
adc
cmp
inc
or
lea
inc
add
in
and
adc
gs
sub
je
shlb
jg
push
xor
jae
sbb
into
adc
ja
pop
add
out
int
aas
aas
aam
pop
dec
arpl
loop
mov
or
or
add
dec
fistps
dec
cmp
push
sbb
adc
hlt
push
inc
dec
inc
popf
inc
imul
mov
sbb
dec
push
je
addr16
push
rcrb
pop
inc
inc
jne
in
dec
test
add
or
in
les
or
mov
cmpsl
ja
pusha
sbb
lock
adc
outsl
jne
bound
in
add
in
imul
dec
gs
jo
add
jne
mov
adc
js
sbb
or
out
sbb
cmp
in
loopne
bound
xchg
sbb
lock
pop
lret
add
enter
pushf
fmull
sarb
cmp
xor
sub
dec
dec
dec
sub
sbb
dec
dec
dec
sbb
or
dec
dec
dec
or
cld
cmp
mov
hlt
lock
cmp
cmp
call
cmp
cmp
aam
shrb
jbe
icebp
jb
jb
repnz
cmc
jb
jb
div
clc
stc
jb
jb
cli
sti
cld
std
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
ljmp
jb
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
jb
jb
stos
stos
lods
lods
jb
jb
scas
scas
nop
xchg
jb
jb
xchg
xchg
xchg
xchg
jb
jb
xchg
xchg
cwtl
cltd
jb
jb
lcall
jb
lahf
addb
addl
xchg
jb
mov
mov
jb
jb
je
jb
jb
jbe
js
jb
jb
jp
jl
jb
jb
jle
pusha
popa
sti
adc
jae
add
sub
jae
lea
mov
add
add
cld
cmp
mov
sahf
shrb
dec
loopne
lea
dec
cmpl
addr16
and
je
ja
cmp
or
jbe
sub
jmp
loop
jnp
es
and
shlb
test
testl
cmpsl
mov
xor
pop
mov
lods
push
mov
sbb
jbe
jbe
sub
pop
je
cld
add
add
nop
sbb
addl
jg
mov
out
es
xchg
fldl
icebp
pop
jg
push
xor
or
rolb
loopne
hlt
jns
repz
nop
dec
add
push
sub
mov
push
sub
mov
dec
sti
cs
test
add
mov
adc
adc
out
mov
or
adc
add
lahf
add
mov
mov
adc
dec
or
sub
push
push
inc
push
je
psrld
hlt
std
imul
mov
add
dec
add
mov
ret
pop
cmpsb
inc
loop
xchg
sub
pop
shlb
mov
mov
sub
test
mov
fidivrs
inc
pop
dec
inc
add
shl
add
shl
add
mov
fdivrs
clc
cld
sub
neg
mov
inc
mov
inc
dec
pop
fisubrl
jb
adc
jecxz
push
inc
shr
bound
data16
pop
pop
imulb
je
mov
jne
push
outsb
add
mov
call
xor
pop
xor
jne
cmp
jge
mov
sbb
push
lcall
lcall
dec
adc
imul
test
sbb
call
jecxz
pop
roll
adc
push
sub
xor
cs
aaa
fwait
cld
push
je
insb
jae
ficomps
sub
mov
push
adc
lret
mov
cmpsb
jl
scas
movsb
shll
push
pop
inc
out
adc
lock
fwait
sbb
rol
es
fldt
inc
lods
test
adc
and
adc
insl
bound
jae
fisttpll
adc
adc
divl
xchg
jb
popa
adc
mov
daa
mov
push
out
shl
sbb
push
mov
push
shrl
xchg
shll
aam
add
dec
pop
inc
fiaddl
pop
ds
sbb
push
mov
inc
cmp
cmp
and
pusha
xlat
dec
addr16
or
insl
add
xlat
arpl
inc
inc
mov
std
sbb
or
jg
jge
arpl
add
jno
arpl
jne
mov
push
sub
cmp
movd
in
or
pop
inc
sahf
pushf
pushf
insb
mov
nopl
loope
push
dec
in
jo
push
or
xor
adc
wbinvd
das
xor
pop
inc
loopne
and
add
cld
lahf
mov
or
add
pop
jns
mul
or
je
xor
pop
push
cmp
inc
jnp
aad
add
imul
imul
nop
and
ss
jne
adc
or
and
sbb
mov
xor
or
pusha
adc
cmp
sub
inc
sbb
movsl
pop
in
or
outsb
lods
push
daa
out
orb
mov
aaa
mov
rcrl
cmp
icebp
je
lods
fnstsw
sbb
ret
insl
mov
out
xchg
aam
popa
jae
inc
jno
xor
fwait
sbb
nop
or
montmul
cmpsb
add
xor
push
popa
imul
shll
stos
sub
shlb
dec
bound
pop
dec
push
add
pop
pop
daa
popa
adc
pop
inc
sbb
test
or
orb
rolb
sbb
inc
stc
sbb
and
imul
std
incl
dec
mov
jns
lcall
push
lret
ret
add
and
add
fldl
pusha
xchg
or
mov
sbb
fld
fistps
sbb
scas
or
mov
bound
rcrb
fmuls
xchg
rolb
inc
inc
hlt
nop
adc
pop
sbb
shll
fiadds
dec
dec
fcos
add
neg
mov
das
jge
and
stc
adc
mov
clc
inc
or
mov
out
mov
add
mov
inc
mov
xchg
push
push
inc
jb
jo
sub
push
enter
ret
mov
inc
addr16
jg
jns
xor
daa
js
pop
pop
dec
hlt
fdivr
je
adc
fnstsw
pop
sub
mov
nop
fcompl
pop
add
adc
in
add
mov
mov
pop
iret
popa
add
adc
add
dec
or
add
or
testl
sbb
test
mov
daa
mov
outsl
pop
outsl
pusha
adcb
xchg
and
sbb
lret
and
pusha
ja
cmp
fwait
nop
mov
pop
inc
jb
pop
push
cmp
out
or
adc
fisubl
pop
xor
int3
repnz
cld
sub
pop
and
dec
jmp
xchg
mov
and
sub
mov
mov
add
inc
push
fmull
inc
inc
imul
xchg
outsl
nop
mov
and
or
and
sbb
fidivrs
pop
cmpsb
inc
add
and
push
mov
cmp
loopne
clc
xor
inc
cmpb
loop
or
dec
jbe
sbb
push
mov
or
mov
sqrtps
mov
cmovbe
inc
mov
mov
imul
dec
enter
das
add
hlt
xor
fidivrs
sbb
push
push
imul
testl
fildll
test
dec
xchg
mov
popa
arpl
lret
fmull
cs
jp
pop
and
xor
test
mov
sbb
xor
mov
loope
sub
lods
mov
xchg
mov
and
mov
mov
enter
or
aaa
shrl
nop
mov
and
insb
inc
push
push
xchg
fs
jno
pop
pop
push
loop
test
ret
mov
shrb
or
push
add
jae
push
dec
push
enter
loop
inc
and
adc
pusha
fstpl
mov
insl
adc
nop
test
mov
jns
jecxz
inc
mov
daa
mov
shll
cmp
in
js
mov
inc
pop
sub
xchg
std
daa
jecxz
adc
jae
push
imul
mov
loopne
add
adc
nop
mov
int3
sar
fidivl
add
mov
and
bound
jb
fistps
pop
orl
fs
push
inc
adc
addr16
mov
and
push
aas
cld
es
dec
enter
out
popf
arpl
inc
out
pop
pusha
inc
jno
and
cltd
push
mov
pop
lods
pop
cwtl
out
dec
mov
sbb
mov
fadds
dec
pop
lea
adc
in
add
popa
mov
fs
movl
pop
pop
xchg
rolb
mov
test
mov
inc
in
ret
sbb
mov
add
add
lods
fcomps
and
push
js
cmp
adc
push
inc
data16
andl
push
aas
adc
push
cli
shlb
sbb
push
addr16
inc
clc
or
push
or
mov
pop
sub
or
ffreep
pop
fldcw
loopne
mov
cmp
cmp
inc
lock
out
aaa
xor
adc
pusha
push
scas
push
mov
sbbb
ljmp
cmp
je
mov
and
enter
ja
daa
and
adc
dec
add
adc
adc
nop
dec
pusha
xorb
iret
pop
cmp
adcb
jl
test
push
sar
mov
inc
dec
outsl
push
and
and
ffreep
pusha
lds
imul
or
add
xor
mov
xor
push
xchg
int3
push
add
xor
xor
xlat
add
push
movsb
fbstp
xor
faddl
js
rcr
das
gs
rorb
inc
jmp
mov
or
add
in
pop
push
das
mov
jge
js
dec
xchg
stos
and
cmpb
insb
jecxz
jne
inc
enter
dec
mov
jns
add
stc
comiss
mov
or
pop
es
arpl
daa
add
cmpsl
fs
cltd
hlt
cwtl
nop
popa
decl
jo
outsb
inc
add
pop
testb
xchg
scas
lds
push
imul
mov
xor
orb
fsubrs
imul
pop
add
sbb
cmp
aas
int3
add
jmp
sub
das
ss
mov
push
idivl
fs
ret
push
int
pop
pushf
out
mov
mov
jnp
sbb
push
loopne
sbb
pandn
into
test
jl
inc
daa
cmp
xchg
lock
xor
movsb
sbb
mov
xor
inc
push
and
popf
test
or
shlb
shrb
mov
or
dec
push
imul
ljmp
icebp
enter
popa
sarb
lcall
adc
rclb
sub
int
pop
and
jb
jge
pop
adc
jnp
push
push
push
add
dec
mov
lock
mov
subl
leave
enter
and
dec
mov
test
xchg
jbe
adc
push
jp
mov
add
sbb
jmp
icebp
sbb
or
dec
sub
mov
fcomps
gs
lahf
cmp
scas
sub
inc
outsb
fs
sub
sbb
or
sahf
fstl
insb
repnz
dec
mov
andb
mov
cwtl
ret
pop
xchg
rorb
insl
push
jnp
lock
push
add
add
dec
das
sbb
add
add
je
mov
jne
lds
jl
pop
push
dec
sbb
mov
daa
out
adc
mov
les
push
adc
outsl
out
es
push
imul
push
inc
cs
sub
mov
dec
add
dec
sbb
adc
ret
jae
sbb
loope,pn
dec
dec
popa
js
hlt
pop
jp
out
dec
aaa
hlt
mov
es
push
ds
leave
repz
mov
inc
or
and
inc
insb
mov
daa
daa
daa
sar
clc
leave
leave
enter
stc
pop
sar
fsubrp
aas
cli
fildll
lret
syscall
add
js
lods
pop
aam
sti
dec
imul
push
test
andl
mov
adc
pop
pusha
sub
jmp
pop
shrl
xor
das
jne
insl
or
or
lcall
test
or
scas
pop
daa
adc
add
push
adc
or
add
push
lcall
mov
sub
mov
addb
gs
adc
add
sub
jno
jl
fidivl
subb
data16
add
and
cmp
mov
mov
lea
in
jmp
in
icebp
jge
inc
jae
popa
outsl
shrb
fs
fld
loopne
push
sbb
andb
xor
addl
cmpsl
push
insl
pop
add
insl
daa
adc
jmp
pusha
mov
add
aaa
inc
mov
addl
gs
cwtl
push
in
add
das
fsub
ret
iret
cmpb
rolb
xor
test
addl
test
inc
mov
or
add
test
stc
adc
push
jne
add
xchg
bound
pop
ret
sbb
mov
add
rolb
mov
or
or
iret
sti
iret
aad
pop
inc
adc
lret
je
movsb
or
std
das
push
sub
mov
sbb
push
cmp
inc
fs
xor
sub
ss
cmp
repnz
xorl
mov
xorl
sbb
inc
ds
mov
inc
ret
fnsave
or
and
sbb
sbb
pusha
add
mov
mov
sbb
push
pop
push
adc
je
dec
lret
or
cld
add
mov
cld
jnp
and
cmpsl
push
lods
ljmp
pusha
les
mov
clc
mov
je
cwtl
lods
cmp
repz
aam
cs
mov
mov
jmp
insb
push
cmp
jg
jg
or
ja
inc
dec
inc
push
outsl
push
mov
jl
adc
cmp
jmp
roll
pshufw
mov
dec
insb
fcomi
divl
dec
syscall
add
inc
push
push
mov
inc
jae
or
cmp
nop
add
test
sarb
loopne
adc
xor
push
adc
sub
test
or
call
push
test
inc
adc
push
cmc
push
push
xor
xor
lea
sysret
sub
cwtl
insl
jae
add
dec
out
add
outsl
das
mov
xchg
out
pop
jae
mov
push
push
pop
jo
add
sarl
xchg
mov
orl
inc
sub
leave
lahf
popl
add
outsb
mov
inc
pop
mov
rclb
mov
jno
lds
jno
call
xchg
xchg
dec
add
enter
add
stc
loope
lock
adc
inc
push
sbb
iret
fwait
mov
mov
loope
fadd
fisubs
decl
cltd
loop
fcos
mov
int3
clts
push
lds
push
fsubs
mov
ss
dec
les
sbb
pop
incl
mov
pop
jmp
cmp
jg
add
mov
test
int3
push
adc
repz
outsb
sub
dec
push
cmpsl
clc
cmp
je
mov
mov
add
enter
add
xchg
push
sub
push
push
pop
jne
enter
rolb
push
popa
sub
lds
push
jne
bound
sub
faddl
mov
dec
adc
adc
enter
outsb
pop
push
xor
jg
call
and
push
or
sbb
addr16
xchg
xchg
out
and
pop
or
or
xchg
test
in
sbb
loope
out
dec
ret
adc
fistl
div
add
add
pop
cmp
bound
lret
mov
mov
les
lcall
sbbb
adc
mov
or
or
aaa
inc
mov
call
xchg
mov
and
adc
mov
call
and
add
pop
mov
or
xorb
bt
jb
and
dec
cmp
pusha
xchg
jae
inc
push
adc
inc
ss
ret
pusha
arpl
sbb
add
subb
adc
and
cltd
and
outsb
and
add
jne
pop
mov
cmp
push
test
cmp
or
sbb
add
push
rorb
jmp
inc
fwait
pop
lcall
jle
mov
mov
imul
add
in
out
js,pn
add
lock
add
loopne
pop
xchg
dec
inc
loopne
mov
and
fs
mov
popf
testl
sub
push
mov
inc
adc
lcall
mov
ljmp
jbe
lock
leave
sub
push
adc
and
sub
cs
cmpsb
ret
ret
test
and
nop
pusha
lcall
loope
adc
push
add
fisubrs
sub
pop
pop
pop
ret
bsf
sarl
and
jns
cmpsb
adc
adc
rcrb
jmp
sub
xor
add
inc
je
std
xchg
mov
push
adc
sub
adc
jbe
add
rorl
jg
xorl
pushl
jecxz
sub
jg
sub
pop
add
adc
pop
sub
out
jle
cmp
jg
aaa
sub
scas
mov
and
sbb
stc
pop
jg
mov
pop
cmp
shll
and
pusha
add
ds
ret
add
push
push
push
mov
jecxz
push
and
jmp
and
xor
fmuls
orb
add
cmp
cmp
je
inc
out
xchg
hlt
or
and
ljmp
or
jp
shlb
cmp
adc
sti
xchg
sti
jmp
sub
jne
outsl
and
mov
or
loop
test
pop
mov
mov
mov
je
jge
pusha
pop
pop
testl
jae
clc
cli
clc
xchg
out
sbb
push
les
pop
pop
or
inc
xchg
lret
fisttps
push
or
mov
je
xlat
add
push
lods
push
clc
mov
push
inc
dec
mov
inc
inc
mov
dec
jp
clc
dec
pusha
dec
add
adcb
mov
out
ss
aad
inc
dec
and
xor
clc
mov
sbb
pusha
or
sbbl
and
dec
push
inc
xchg
push
or
and
nop
add
add
nop
or
movsb
fbld
add
repz
mov
adc
stc
pop
and
es
jae
mov
dec
inc
jo
mov
xor
lret
inc
mov
shll
cwtl
dec
imul
daa
or
push
pop
hlt
add
mov
data16
pop
push
xchg
cli
mov
xor
jb
test
mov
ret
adc
sub
xor
jne
ss
hlt
push
andl
add
and
shufps
int3
out
std
std
add
testl
push
pop
mov
mov
lods
inc
cli
jl
movl
dec
stos
sub
mov
inc
jmp
inc
arpl
std
xlat
data16
imulb
jle
push
repz
adc
and
sub
jo
imul
mov
shl
or
pop
inc
popa
jecxz
adc
push
push
xchg
sti
or
pop
add
cmp
test
adc
xorl
sub
pop
sti
pop
mov
dec
jne
adc
je
fiaddl
xchg
or
fwait
xchg
rorb
and
fwait
adc
mov
popf
shrb
aad
test
push
add
or
dec
in
hlt
inc
popa
xchg
add
call
pop
or
or
aad
call
popa
xor
dec
call
pop
pop
inc
sub
push
jge
mov
aas
adc
xorb
add
add
cmp
dec
rorl
cmp
or
add
es
inc
fistpll
jmp
adc
sub
add
jne
sub
dec
fistpl
sbb
ja
xchg
test
push
xor
sbb
add
mov
rcrb
iret
sbb
cs
out
pop
add
pop
adc
and
pop
outsb
sbb
add
ljmp
push
or
or
inc
push
data16
sbb
jnp
dec
push
pop
cmp
mov
fcmovu
or
subb
sub
and
or
push
mov
xchg
and
push
push
in
mov
xchg
mov
pop
jne
pop
subb
insl
add
add
mov
aam
mov
inc
pop
mull
push
sbb
push
jne,pn
mov
jne
jmp
repz
jmp
pop
inc
xchg
or
mov
dec
adc
hlt
decl
jne
or
jns
neg
fwait
dec
cld
jmp
inc
dec
mov
ret
mov
notb
lcall
jb
push
in
pop
mov
push
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
mov
sbb
sub
int3
inc
sbb
inc
mov
push
mov
jmp
dec
scas
in
jmp
int3
push
scas
jp
add
mov
and
in
adc
leave
push
mov
in
xor
sbb
repnz
inc
fcoms
pop
ret
dec
pop
clc
aaa
sbb
or
adc
adc
mov
add
cld
daa
inc
stos
lds
ja
and
jo
jbe
inc
testl
je
pop
mov
negl
jmp
mov
pop
or
add
mov
and
mov
add
test
orl
pushf
sub
push
fsts
inc
jno
cmp
mov
daa
andl
fistps
mov
pop
fadd
faddp
sbbb
and
insb
shrl
loopne
push
fsub
mov
add
mov
cmovl
fcom
fstsw
sahf
jae
f2xm1
push
lcall
ret
ffree
ffree
ffree
pop
jne
sarb
xor
ret
jns
jge
pop
jb
nop
xor
sbb
clc
dec
add
movb
dec
inc
mov
pop
test
fdivrl
add
xor
add
scas
popa
push
push
xor
mov
rcl
aad
push
and
cld
and
and
int3
in
lret
movb
push
push
mov
cmp
aas
ja
adc
movsb
xor
jo
sub
inc
mov
call
adc
sbbl
pop
js
adc
les
or
pop
sub
imul
lods
lret
push
cmp
mov
jo
push
add
mov
mov
fcompl
test
push
mov
or
sbb
sbb
pop
dec
mov
jb
pop
cmp
imul
mov
cmp
gs
movsl
adc
test
inc
inc
jae
mov
lods
fistps
test
jl
inc
jnp
cmp
ret
adc
and
add
and
cmp
add
push
lret
shl
addl
pop
mov
imul
pop
mov
fldt
fcomps
mov
xchg
add
dec
cmp
jg
mov
rclb
add
pop
pop
imul
dec
mov
xchg
xlat
stos
pop
pop
sbb
xor
xlat
dec
shrb
popf
rcl
mov
sbb
dec
aas
and
mov
pusha
sbb
push
movb
mov
inc
sub
mov
fwait
js
or
mov
aam
incb
ja
mov
and
ja
sbb
popf
loope
add
dec
and
fstpt
mov
mov
imul
imull
and
shll
add
mov
push
dec
jecxz
sub
mov
add
push
dec
shrb
pop
push
mov
sub
clc
aas
push
jae
push
jb
mov
adc
clc
jae
sar
lea
scas
cmpsl
ja
ds
scas
mov
inc
cld
add
mov
imul
mov
std
mov
idivb
cmp
xchg
popa
cmpsl
adc
test
pop
sti
adc
cwtl
or
je
jnp
or
or
pushf
lods
mov
dec
sahf
cwtl
and
rolb
cld
aaa
mov
pop
inc
decb
and
cmp
loope
and
sbb
push
ficoml
or
incb
fdivs
ud0
ja
and
xor
inc
inc
and
push
stc
aam
inc
inc
mov
sbb
nop
dec
sub
test
cs
fcoms
jae
jb
add
jge
inc
sbb
ja
movl
push
cmp
adc
enter
test
insl
mov
push
xor
daa
into
or
mov
add
cmc
push
pop
mov
cs
shl
add
clc
pop
loop
lret
dec
add
rclb
inc
push
sbb
addr16
pop
sub
or
outsl
out
adc
sub
add
mov
int
push
cmp
and
subb
sarl
or
fs
add
insb
adc
cltd
inc
jnp
push
dec
or
cwtl
sub
rcrb
and
add
rcll
pop
aaa
push
mov
sbb
test
cmp
push
push
push
mov
inc
insb
inc
movsb
lock
sbb
push
neg
ret
push
imul
test
loop
or
test
ret
jle
outsl
push
ret
add
ss
add
aam
push
push
push
hlt
clc
cld
push
cmovo
add
imull
inc
call
pop
in
sbb
jmp
or
cmpsb
sbb
dec
insb
test
add
jb
jl
mov
cmpb
es
neg
sbbb
mov
lcall
testb
out
xor
inc
or
push
xor
push
xlat
and
cmpsb
push
push
cmc
cmp
shr
pop
aas
adc
cmp
pop
ret
mov
enter
push
inc
hlt
add
ret
je
mov
lcall
push
sbb
mov
add
stc
push
mov
call
nop
pushf
dec
sub
fisttps
adc
hlt
cmp
fldl
outsl
sbb
sub
mov
push
jle
lods
inc
and
fs
cltd
daa
add
imul
roll
add
iret
outsb
pop
outsb
test
cmp
scas
cmp
or
add
rcl
data16
add
push
jle
ret
inc
sub
cmp
cmp
dec
je
fcmovnu
push
inc
cli
xor
cmp
jae
js
test
xor
fldl
or
lret
or
jb
fs
enter
rcrb
pushf
push
cltd
dec
xchg
inc
loopne
xor
fimull
aad
ds
dec
nop
rcrb
hlt
xor
push
lock
push
ficoms
or
clc
int3
fsub
inc
pop
outsl
pop
cs
icebp
sbb
pop
pushf
cmp
mov
insb
xor
push
pushw
dec
and
jmp
not
dec
je
mov
mov
imulb
sub
jbe
push
lea
mov
lods
and
mov
push
loopne
pop
les
jne
lea
jmp
pop
test
pop
push
gs
add
push
or
cmpl
adc
int3
aaa
mov
push
addb
call
pop
and
xchg
mov
xchg
add
sar
sub
je
add
xchg
inc
add
push
dec
pusha
sub
or
push
cmpsl
int3
xor
add
mov
divl
adc
cmpsb
adc
loopne
dec
push
aas
sti
jmp
lock
test
mov
jb
cmp
and
xlat
clc
and
mov
stos
cmp
jbe
mov
mov
jp
sbb
push
movb
adc
xlat
inc
lea
ret
pop
adc
or
les
sahf
leave
add
inc
push
test
mov
adc
dec
and
gs
push
inc
out
push
xchg
or
in
inc
sub
daa
test
adc
push
dec
pop
cmpsl
push
xchg
mov
sbb
push
xor
aam
jmp
mov
fsubrl
lock
mov
ljmp
inc
sbb
and
cmp
ret
add
loopne
inc
fildll
cmovbe
sub
sub
fidivs
jl
fmuls
cmp
jmp
loope
add
lcall
add
fmull
movb
js
cltd
dec
add
dec
scas
daa
ficoms
das
aad
xchg
sti
in
mov
jmp
jg
dec
in
in
lret
or
lea
add
cmp
xor
xchg
cmp
cmc
or
fwait
mov
xor
les
popf
and
loop
xchg
jo
push
adc
repz
add
iret
push
or
dec
fcomps
mov
inc
xchg
pop
les
sub
mov
mov
push
sahf
mov
push
ljmp
or
repnz
push
or
push
sbb
add
adc
mov
rolb
ficoms
stos
dec
jne
mov
sub
jns
adc
add
mov
cmp
jecxz
imul
push
scas
data16
ljmp
in
ss
adc
jne
fadd
es
mov
mov
adc
push
pushl
cs
stos
mov
fbld
xor
mov
push
push
sbb
lret
testb
sbbb
psubq
sub
jae
add
xor
rep
xchg
sbb
and
and
cmp
mov
faddl
int3
fwait
or
inc
push
cmp
push
pop
imul
sub
and
and
pop
xchg
bound
lds
testb
adc
push
jb
jl
loopne
aaa
outsl
push
adc
add
ret
and
mov
push
lcall
pusha
incb
fimuls
jmp
imul
add
push
xchg
shl
mov
das
pop
mov
jnp
in
push
xorb
push
lds
sbb
movsb
movb
jp
addr16
sti
mov
xchg
lea
sub
inc
mov
jbe
sbb
sub
je
cmp
sbb
imul
xlat
jmp
lea
sbb
adc
jmp
add
and
jmp
sbb
inc
js
push
hlt
mov
mov
and
cmp
add
aad
sbb
rdpmc
xor
in
jp
adc
movsb
daa
inc
addr16
xor
inc
sub
out
idivb
adc
mov
hlt
push
addr16
pop
rol
repz
pop
std
in
inc
in
mov
adc
fsts
ret
sbb
ja
jp
xor
fnstsw
mov
xchg
es
jmp
dec
mov
test
mov
push
xchg
and
andl
pop
inc
rclb
clc
in
push
jl
out
outsl
jg
inc
je
mov
or
je
mov
inc
je
mov
loope
xor
dec
je
orb
add
adc
or
mov
aaa
ss
fsubs
and
xchg
adc
push
cmp
sbb
psrld
sub
jno
mov
cmp
or
add
cmp
rclb
leave
ret
jb
inc
pop
cmp
jmp
in
inc
dec
std
data16
stos
mov
stos
or
call
sar
push
mov
neg
jmp
or
outsb
mov
inc
xchg
push
push
mov
sub
mov
sbb
mov
loopne
orb
outsb
mov
inc
dec
fiaddl
or
jg
cmp
add
sub
sbb
aas
imul
add
push
fidivrl
sbb
mov
idivb
push
imul
orl
or
xor
dec
or
mov
sub
jle
test
add
mov
push
mov
mov
pushf
adc
push
or
adc
hlt
je
sbb
or
ljmp
sbb
mov
inc
leave
mov
jmp
inc
fldl
mov
in
filds
je
add
or
mov
add
push
mov
mov
call
lods
sub
sub
pop
ja
loopne
shl
inc
push
mov
lahf
inc
lods
or
jbe
addb
mov
shrl
xchg
or
or
stc
std
jl
js
xor
dec
mov
neg
and
pop
jmp
outsl
inc
movsb
je
sahf
and
cmc
xchg
scas
mov
loopne
push
stos
xor
mov
addr16
xchg
gs
add
xchg
sub
mov
and
divl
push
int3
leave
mov
mov
bound
cmc
js
push
fimull
cmp
add
jb
mov
or
xchg
or
cs
je
pop
fnstsw
into
div
mov
inc
mov
lock
jne
pusha
mov
js
hlt
js
ljmp
sub
sub
and
add
or
dec
test
inc
jne
jno
aam
ret
inc
subl
inc
add
cmp
add
rorl
fwait
sub
pop
loop
inc
je
push
push
cmp
or
or
or
and
mov
pop
inc
loop
ret
push
mov
test
push
in
repz
inc
cs
inc
add
and
and
adc
and
jbe
fldt
sub
inc
sub
sub
addr16
es
sbb
and
sub
cmp
sahf
adc
xor
repz
sti
sub
xor
leave
jmp
push
lods
daa
and
add
js
dec
lods
pop
cmp
lcall
adc
leave
cmp
and
or
push
incb
push
add
cmpl
add
movb
outsl
mov
push
int3
fldt
sarb
imul
dec
xchg
les
lahf
jmp
add
loope
add
in
frndint
xor
sbb
fcomp
fstsw
fwait
mov
imull
pop
pusha
je
fidivl
jne
lea
mov
clc
lcall
mov
shr
and
push
xor
jmp
mov
add
jns
push
loope
cwtl
pop
fimuls
std
pushl
or
cmpb
jb
movb
js
push
or
out
push
and
pop
add
or
leave
jmp
mov
xor
cmovo
push
hlt
shr
mov
mov
add
sbb
ret
push
daa
call
adc
or
into
mov
cmpsb
addb
add
or
or
xor
adc
jl
mov
outsl
inc
sub
mov
loopne
jae
dec
add
or
mov
insl
jmp
mov
cmp
mov
fldt
mov
fdivs
mov
sbb
sub
mov
and
jne
cs
dec
jmp
mov
add
stos
aas
and
out
push
inc
or
ljmp
enter
xor
pop
into
cmpb
divl
pop
jmp
rclb
mov
sbb
mov
shl
stos
push
or
sbb
push
mov
and
lock
f2xm1
fwait
clc
sub
std
jg
push
fldz
push
jg
ds
je
or
icebp
fnstsw
dec
je
mov
pusha
jne
inc
fnstsw
cmp
je
and
fistpll
sub
pop
add
jg
jne
mov
cld
xchg
push
test
inc
push
mov
add
loopne
mov
fstpt
int3
push
loop
sub
test
or
test
insl
push
faddl
or
jmp
add
and
or
add
jae
fimull
lods
mov
add
jmp
aaa
mov
negb
incl
stc
es
push
inc
imul
push
inc
negl
jb
aaa
add
fwait
ret
xchg
fldcw
stc
mov
xlat
lea
dec
adc
jp
ret
push
sahf
sbb
sbb
and
test
andb
icebp
push
repz
mov
adc
sbb
orl
outsl
pop
add
add
imull
or
push
fdiv
das
cmp
es
sbb
adc
sub
fldcw
ja
and
repz
and
add
rorb
fstpl
fwait
mov
jg
jno
addr16
mov
mov
sti
mov
repnz
pop
inc
add
mov
add
nop
xchg
fld
pop
sti
jg
push
leave
jle
pop
or
push
addl
xor
lcall
ret
pop
xchg
scas
adc
insb
mov
xor
push
adc
inc
leave
sub
add
les
test
clc
mov
fcmovnb
ficomps
jae
or
cmp
inc
stc
inc
xor
jbe
cmp
imul
shrb
pusha
ljmp
adc
cmp
ficomps
insb
fildl
xor
sbb
arpl
fstpl
fwait
nop
sbbb
jg
adc
and
add
sbb
add
or
add
mov
jge
dec
mov
hlt
xor
xlat
dec
lret
daa
push
push
cmp
add
and
xchg
imul
jp
push
enter
loopne
call
push
pop
in
mov
test
mov
and
in
outsl
cmovno
jb
frstor
pop
outsb
std
add
sub
enter
mov
jl
or
in
dec
lods
addb
fwait
orl
shlb
or
jb
sti
mov
push
sti
insb
je
cmp
ja
adc
sbb
cmpsb
jle
pcmpgtd
pop
dec
incb
jne
loopne
mov
mov
aas
cltd
idiv
imul
psadbw
cs
ret
or
cmp
sub
ds
ds
add
mov
jle
or
test
popa
vpaddw
xchg
fmul
dec
call
push
push
test
fdivrl
lock
dec
test
jg
pop
sti
insl
pop
and
cmp
jbe
sbb
addb
ds
inc
pop
mov
popa
mov
dec
data16
or
mov
cmp
pop
out
mov
add
and
mov
lods
mov
jl
in
push
decl
cmpl
sub
imul
fcoms
sbb
jnp
out
mov
pop
sbb
sbbb
cmp
cmp
mov
pop
pop
inc
sub
fmull
ret
loope
sbb
jbe
dec
fsubrl
imul
dec
cmp
jb
adc
sbb
sub
inc
jmp
mov
sbb
lock
popf
shrb
and
adc
mov
and
add
push
mov
mov
pop
mov
das
sbb
outsl
cmp
adcb
stc
xchg
inc
mull
jmp
and
inc
test
sahf
jg
mov
ljmp
mov
popa
push
fidivrl
sub
xchg
and
add
lret
lret
repnz
aaa
dec
inc
pop
xor
popa
sub
push
rolb
fidivrs
inc
das
xor
aaa
aas
shrb
and
mov
aam
pop
fmuls
push
cmp
adc
loopne
ret
inc
jbe
dec
enter
pop
adc
sbbl
push
orb
cld
push
add
jge
ljmp
mov
add
nop
inc
in
cmpb
jne
mov
jg
mov
cli
or
cmpsl
fstps
movb
mov
xor
outsl
loop
push
repnz
lret
out
stc
jge
idiv
and
and
mov
rcll
and
mov
pop
popa
iret
cwtl
inc
add
call
cld
out
leave
repnz
fnstsw
pop
test
test
sbb
pop
lahf
in
mov
mov
inc
cld
sbb
mov
pusha
outsb
enter
leave
daa
cli
add
pop
shrb
dec
xor
xchg
xchg
mov
mov
sub
pop
xor
mov
ja
inc
jmp
cmpl
sub
cmp
xor
mov
pop
sbb
clc
sub
enter
xchg
add
push
addb
sub
jne
push
mov
jmp
subl
jne
mov
addr16
testl
test
fldenv
unpckhps
cmp
or
mov
and
jo
or
add
jne
or
cmp
dec
xor
xor
or
push
cmc
daa
jns
mov
sub
pop
or
sbbb
add
data16
dec
notb
pushw
clc
std
mov
lret
and
incl
sbb
and
push
loop
mov
xor
jge
or
loop
pcmpgtw
mov
in
out
int3
imul
push
pop
ljmp
call
sub
cs
fsub
dec
or
mov
dec
mov
pop
hlt
inc
fiadds
ja
add
lret
pop
jp
and
decb
or
rorb
lods
out
ss
or
add
mov
gs
dec
jnp
or
mov
dec
add
cmp
lea
out
cmp
add
cmp
xchg
enter
out
and
ret
mov
sbb
and
mov
cmp
and
dec
iret
test
jo
cmc
icebp
mov
or
and
mov
cs
dec
push
lea
in
and
repz
sub
pop
and
aam
or
daa
mov
in
push
fdivl
jmp
sbb
test
ljmp
push
xchg
xor
outsb
jg
push
mov
je
add
jmp
loopne
jb
out
aad
push
repnz
pop
pop
popf
cmp
mov
adc
and
cs
daa
sub
nop
and
mov
pop
sahf
fimuls
call
lcall
sub
push
dec
pop
sbb
adc
call
and
add
push
jmp
cmc
in
dec
mov
sub
jmp
cmpb
dec
mov
jge
leave
orl
sub
lods
sub
adc
loop
add
rolb
push
mov
xor
mov
les
jmp
insb
xchg
sub
or
int3
fnstsw
or
jmp
sbb
test
or
and
xchg
stc
fmull
popa
not
js
fs
mov
add
jb
sub
es
repnz
push
xchg
testl
xor
aam
mov
and
sub
andl
xchg
enter
inc
jns
add
xchg
xor
fbld
lock
iret
cwtl
gs
and
push
rclb
adc
int3
add
or
imul
js
sbb
adc
jmp
or
add
jmp
mov
sbb
popf
pop
imul
fnstsw
push
imul
dec
xchg
mov
js
jmp
add
scas
mov
mov
pop
adc
push
dec
jmp
faddl
and
xor
sbb
dec
mov
loopne
ljmp
or
cmc
pop
sbb
jmp
dec
mov
data16
add
sbb
jns
mov
cwtl
inc
mov
in
imul
sbb
cmovge
push
add
or
aas
aad
cmpsb
jno
pop
mov
pushf
sub
xorl
xchg
ret
fldt
mov
lea
push
loopne
xchg
fld1
lea
insl
add
push
mov
les
inc
or
mov
rcrb
cmp
fimuls
lea
xchg
mov
adc
shlb
daa
push
inc
test
add
xchg
xor
mov
xchg
xchg
add
push
nop
cwtl
xorb
pop
clc
push
rorb
jecxz
xor
lock
or
pop
pop
pop
je
jle
divl
cmp
jle
js
sub
jge
or
mov
mov
insb
mov
in
add
lea
testl
sbb
mov
inc
push
ret
push
jnp
jecxz
aam
inc
xchg
fisttpll
push
mov
outsb
loop
loop
jmp
xchg
jo
sub
push
mov
inc
enter
cmp
and
pop
push
jo
pop
stc
sub
and
adc
imul
inc
jl
jne
ljmp
inc
sbb
cmp
push
pop
push
test
add
jnp
mov
cmc
and
and
out
jmp
inc
je
dec
je
adc
je
or
push
jmp
mov
mov
sbb
sbb
daa
mov
lock
xor
and
xchg
inc
fadd
cs
aas
inc
add
push
add
shrl
rolb
incl
jbe
sti
push
and
add
inc
cmpsl
or
incl
gs
mov
add
or
loopne
inc
mov
cmp
xchg
inc
jmp
and
shr
shlb
push
pushf
mov
push
dec
sub
sbb
pop
je
jbe
push
pop
xor
clc
jmp
ret
call
imul
push
mov
jne
cmp
jg
pop
dec
test
cld
cltd
lcall
std
xor
sub
add
pop
lahf
stc
imul
add
test
push
adc
sti
or
push
add
decl
gs
pop
cmp
ret
ja
das
icebp
stos
or
addb
lock
gs
clc
xchg
roll
rorb
in
ret
call
add
dec
or
gs
adc
stos
mov
jne
rcl
xor
test
xor
inc
cmp
dec
cmp
sbb
push
mov
add
adc
pusha
mov
dec
mov
lea
fwait
mov
int3
or
sub
andl
shlb
or
addr16
nop
xor
inc
dec
bound
fs
sahf
loop
xor
roll
loope
add
out
sub
jb
and
pusha
cmp
mov
call
out
or
jp
push
ljmp
cmp
ljmp
in
jecxz
arpl
mov
and
push
inc
outsb
mov
cmp
stc
call
sub
mov
or
add
push
jl
enter
fstpt
and
fs
jno
mov
push
popa
and
or
xchg
adc
ja
adc
cmpb
out
test
movsb
popa
jb
sbb
lret
or
cmp
aaa
push
test
mov
movsl
jge
hlt
and
jmp
sub
mov
out
cmp
push
adc
aas
fsubs
and
add
xor
aam
movl
inc
lea
test
lock
push
out
add
inc
xchg
inc
mov
lds
les
hlt
jmp
push
loop
out
out
fwait
sub
xor
pop
jg
shlb
jmp
repnz
scas
lret
jo
je
or
pop
mov
xor
mov
sbb
xlat
dec
pop
sub
mov
add
loope
mov
pop
lds
push
shlb
xchg
pop
repz
fisttpll
sysenter
push
or
or
dec
cmp
imul
or
rcrb
inc
push
in
xlat
add
push
test
dec
shrb
and
je,pn
ret
xchg
mov
jne,pt
adc
mov
xor
adc
pushf
icebp
and
sub
and
xchg
sub
arpl
mov
das
lcall
arpl
cltd
mov
adc
lret
mov
mov
ret
inc
pop
xor
mov
sbb
sbb
cmp
and
dec
add
dec
pop
cmp
fcom
ret
dec
adcb
and
js
mov
push
mov
mov
push
dec
loopne
jno
imul
dec
lock
jge
xchg
jg
mov
loopne
or
into
ds
in
jle
cmpsb
in
cmp
lcall
jp
lcall
inc
enter
sub
push
pushf
sbb
test
pushf
adc
mov
or
rorb
xor
and
jp
mov
mulb
mov
sbb
push
movsb
rclb
sub
push
push
lock
mov
in
pop
fdivs
push
dec
fldl
fcomps
ficoms
jb
sbb
int3
cmpsb
push
jmp
sub
gs
push
jb
mov
sub
or
loope
sbb
jns
dec
sbb
dec
shll
inc
fbld
std
fisubrl
inc
and
or
je
jl
xchg
xor
std
jle
sahf
inc
and
or
push
pop
push
lret
xchg
popa
mov
or
push
ja
sub
test
lea
push
mov
rclb
out
mov
aaa
stc
or
push
xor
sarb
test
xchg
inc
inc
jp
pop
push
test
or
fwait
jle
into
adc
scas
or
lock
aas
pop
faddp
push
push
or
scas
add
pop
addr16
push
add
in
je
pop
sub
add
sbb
hlt
sti
xchg
fcmovu
or
or
mov
add
out
inc
dec
ffreep
test
aam
or
xchg
inc
lock
and
adc
test
jbe
fstps
scas
rorl
and
pop
rcll
addl
in
mov
leave
mov
loope
dec
call
cs
call
ds
lds
push
push
inc
fidivl
jp
test
daa
xor
mov
testb
pop
xchg
cmp
rclb
push
adcl
popa
mov
in
fstl
add
cld
jg
dec
xchg
ljmp
sbb
jnp
mov
in
test
dec
getsec
dec
mov
jnp
in
xchg
add
xor
fcoms
sub
inc
aam
fimull
jbe
inc
jae
popf
out
imul
add
and
fsubl
fs
inc
mov
cmpsl
and
mov
hlt
push
push
js
xchg
inc
test
mov
dec
push
sub
mov
pop
or
push
jnp
repnz
or
or
adcb
jae
sub
aas
and
cmp
bound
cmpsb
jnp
decb
scas
adc
or
je
pushf
lods
rcrb
inc
test
mov
bound
dec
and
hlt
sbb
stos
jp
mov
push
jmp
stos
push
aaa
imul
and
add
int
mov
add
iret
fwait
mov
inc
dec
test
adc
popf
adc
xchg
ja
addr16
lcall
in
adc
ret
add
gs
inc
sahf
or
dec
jmp
jns
aas
in
lods
push
je
jne
inc
pusha
popa
mov
pop
jmp
int3
cmp
xchg
call
inc
cmc
push
inc
ficoms
dec
sbb
cmpsl
in
lcall
aad
mov
mov
add
aas
add
adc
pushf
sub
pop
pop
pushf
stc
dec
ret
inc
adc
insl
cmpsb
xor
push
lret
jbe
pop
sarb
fnop
cmpl
xor
fcmovnbe
test
cs
cmp
and
shr
adc
fstl
rolb
aad
pusha
add
sub
iret
sbb
dec
mov
pop
movsb
or
mov
jl
or
in
mov
cmp
mov
cli
push
inc
sahf
inc
sub
xorb
mov
fs
or
scas
sbb
fxch
roll
sbb
cld
movsb
dec
bound
rorb
ds
mov
addl
sti
and
movsb
adc
and
movsl
sub
pop
lods
or
iret
mov
mov
sarb
lea
xchg
add
or
pop
roll
lea
pop
add
push
addb
push
cmp
roll
pushw
cmp
add
and
notl
popa
inc
or
test
loope
ficoms
xor
xchg
ds
push
or
cmpb
xchg
jl,pt
popl
mov
pusha
cld
jp
push
bound
gs
push
add
pusha
dec
imul
shlb
pop
imul
adc
aaa
rcl
in
icebp
push
inc
enter
xor
mov
lds
push
mov
cltd
jl
arpl
jecxz
fdivl
je
sbb
mov
sub
shr
pop
adc
add
sbb
lods
jge
js
add
ret
inc
push
mov
push
push
mov
orb
test
push
lock
aas
and
lcall
mov
sti
xchg
ja
and
add
ja
push
add
jnp
pop
inc
mov
adc
test
nop
xchg
xchg
cvtps2pd
fwait
popf
or
sbbl
push
bound
xchg
xchg
ss
mov
aaa
shr
lea
adc
adc
insl
nop
and
mov
inc
adc
adc
roll
push
jle
adc
lds
faddp
pop
or
adc
fdivrl
imul
push
add
dec
sti
add
push
imul
push
dec
inc
pop
adc
mov
cmpb
sbb
pop
add
pop
test
or
les
dec
cmp
push
adc
xorl
and
ss
mov
xchg
pop
add
push
xlat
subl
or
js
mov
inc
enter
mov
outsb
inc
test
pusha
setno
jns
imul
cmp
mov
dec
enter
sar
mov
add
sti
push
jg
repz
rcr
bound
sbb
jp
adc
mov
stos
inc
repnz
inc
std
sbb
cmp
sbb
ret
daa
fs
dec
add
sbb
add
lock
or
jno
mov
mov
sub
or
pop
or
dec
and
mov
sub
pop
cwtl
add
dec
test
insb
adc
inc
push
or
test
test
and
unpcklps
lods
add
mov
add
mov
adc
mov
add
inc
and
push
es
sbb
ss
mov
jae
push
dec
stc
mov
cmc
push
inc
xchg
cmp
adc
add
push
adc
adc
ljmp
adc
mov
jmp
push
mov
movzbl
ja
test
inc
lea
sbb
test
jle
pop
adc
lcall
int3
repnz
rclb
cld
jno
dec
inc
ss
hlt
pop
inc
or
lock
xchg
jmp
cmp
sar
in
inc
call
or
jge
nop
aaa
push
test
cmp
push
loopne
push
movsb
sbbl
cmp
out
int3
push
and
stos
jge
pop
loopne
int3
addl
call
push
lea
add
sbb
outsl
xor
jb
movsb
js
pop
call
out
xchg
lret
pop
push
push
daa
aas
enter
je
jmp
xor
inc
xor
sub
jmp
and
lcall
add
lcall
push
cmp
push
inc
test
adc
dec
and
adc
mov
jb
into
push
adc
mov
lods
inc
adc
inc
andb
cld
pop
cld
addl
cmp
push
mov
xor
push
pop
icebp
xor
lock
jne
ds
mov
or
in
mov
fs
mov
fs
pop
inc
pop
roll
sub
pop
push
gs
or
rcrb
iret
rclb
push
enter
ja
mov
lods
shlb
xchg
mov
push
cmp
xchg
jecxz
pop
sub
jge
mov
pushf
mov
movsb
nop
add
mov
jbe
stos
int3
jb
cmp
adc
adc
xor
sbb
adc
bound
or
add
and
jbe
add
call
pop
add
daa
loope
loop
nop
aaa
int
jecxz
add
mov
repnz
stos
hlt
fistpl
xchg
cmp
aaa
push
popa
inc
sbb
jmp
jne
or
test
mov
icebp
pop
dec
mov
mov
movb
faddl
aaa
cmp
and
fnstcw
sub
mov
add
scas
dec
cld
add
adc
mov
imull
out
bound
pop
sahf
pop
sbb
dec
dec
fnstsw
mov
mov
adc
in
push
cld
hlt
fidivrs
movb
adc
xor
push
jp
xchg
mov
adc
inc
dec
mov
dec
adc
aaa
or
sbb
adc
out
mov
insb
adc
outsl
daa
push
dec
jg
pop
cmp
ret
cmp
cmp
jne
or
adc
pop
sub
jnp
jne
shlb
adc
mov
popl
mov
loop
cmp
mov
sub
push
iret
mov
and
dec
jne
mov
in
scas
inc
scas
push
inc
pop
inc
mov
dec
add
lea
inc
pop
cmpsb
mov
nop
aam
sbb
mov
mov
adc
xor
add
sub
repnz
rcr
push
mov
push
mov
dec
jne
jne
mov
nop
mov
js
cmp
js
sbb
cmp
push
push
and
loopne
fchs
dec
push
sbb
jg
xchg
mov
or
mov
sbb
cmp
and
fcomi
nop
adc
push
jne
jne
inc
cmp
dec
daa
dec
and
repnz
call
jecxz
mov
pop
mov
mov
mov
adc
frstor
mov
xchg
add
mov
or
into
call
das
add
and
jge
or
jo
jmp
pop
adc
mov
mov
fwait
cmpl
add
cltd
jl
pcmpeqw
cmpsl
or
daa
pusha
push
xchg
call
xchg
in
addr16
popa
sbbb
and
aam
mov
test
cmp
cmp
clc
imul
lock
xor
jge
push
sbb
xor
and
inc
inc
imul
pop
addr16
cmpl
add
imul
sbbb
popf
lods
inc
xor
sarb
or
imul
pushf
pop
int
pop
pop
jl
cmp
fisttpl
xchg
adc
mov
mov
rolb
push
push
or
ss
adc
add
aad
mov
push
pusha
test
cmovb
mov
pop
js
hlt
push
cmc
popa
xchg
sub
adc
ret
mov
stos
inc
push
xchg
cmp
jg
sub
adc
ret
movsb
test
adc
push
add
add
pusha
nop
jle
leave
cld
push
mov
inc
aaa
into
pop
and
stos
test
in
stc
clc
aaa
push
adc
das
sbb
in
cltd
orb
lods
aas
inc
out
jmp
lods
pop
in
jle
dec
dec
mov
adc
clc
jl
or
inc
sbb
ret
mov
dec
cli
mov
push
js
cmp
sbb
xchg
mov
decl
dec
fildl
or
sub
ret
add
test
sahf
pop
test
adc
mov
jle
gs
sbb
cwtl
movsb
iret
sti
push
dec
jle
push
add
cmp
insb
or
pop
sub
cmpsb
icebp
test
insl
jle
mov
inc
push
push
adc
dec
shlb
rclb
inc
pop
mov
scas
add
test
adc
imul
push
or
mov
cli
push
xadd
lret
pop
ljmp
jb
jg
sbb
test
arpl
in
aaa
lea
test
test
mov
adc
adcb
sbb
xchg
xor
pop
pop
and
stos
setns
daa
scas
lea
movlps
and
pushf
xor
add
xchg
nop
inc
mov
adc
mov
add
mov
sub
test
ret
and
mov
mov
adc
adc
repz
add
xchg
outsl
insl
addl
mov
cmp
push
dec
jge
icebp
fisubrs
movzbl
jmp
aaa
pop
sub
sbb
inc
incl
outsl
clc
dec
sub
sbb
lret
jne
fstpt
or
or
push
pop
jne
test
dec
ret
cmpsl
push
mov
cs
add
mov
or
adc
cmp
gs
scas
incl
push
repnz
shr
mov
lods
jo
jmp
movsl
or
cmp
jecxz
mov
cmpsl
add
movb
push
loop
scas
into
xchg
rorb
push
inc
or
push
pop
mov
push
sbbl
outsl
outsb
sar
dec
jne
push
stc
stos
jae
and
and
adc
shll
xchg
pop
stos
gs
sub
mov
das
dec
push
lock
loop
and
les
daa
in
inc
dec
pop
mov
nop
or
and
stc
jle
sti
xor
mov
mov
stc
push
movsb
push
test
nop
add
xchg
sbb
mov
aam
cmp
imul
mov
mov
loopne
mov
pop
lock
lahf
xor
aam
fdivrs
mov
cmp
xchg
shl
and
sub
mov
fwait
int3
inc
sub
int3
mov
dec
imul
inc
enter
sbb
dec
outsl
inc
je
fidivs
and
jl
and
fs
les
ret
add
hlt
mov
mov
jl
cwtl
fsubr
out
add
push
mov
sahf
mov
cmp
enter
scas
cmp
rorl
aaa
mov
sarb
lcall
push
dec
insl
mov
test
push
inc
fildl
mov
inc
sub
xlat
inc
mov
inc
daa
jo
mov
and
push
xchg
add
and
sub
and
cwtl
test
cmp
aas
je
pop
daa
or
add
or
adc
or
aam
cmp
loopne
sahf
fmuls
into
push
push
sbb
inc
loope
lods
pop
add
gs
in
jbe
les
loope
mov
pushl
sbb
sub
push
dec
jmp
add
adc
inc
jne
jae
gs
inc
mov
and
fmuls
xlat
jo
adc
pop
pop
add
iret
sahf
sbb
data16
dec
pusha
movsb
jo
or
add
push
ds
push
add
xor
rdmsr
jno
cld
pop
or
popa
push
cmpl
jecxz
push
mov
loopne
lods
mov
sbb
jo,pt
push
xor
frndint
call
jbe
mov
data16
daa
out
iret
adc
lret
or
jge
mov
sbb
ljmp
fs
shl
shr
or
mov
insb
and
push
xor
mov
mov
fcmovb
ja
sub
ret
push
or
nop
mov
pop
push
jo
rclb
add
inc
sbb
or
or
icebp
lcall
add
inc
jmp
pop
les
sbb
out
and
les
lods
movsb
mov
into
sbb
push
push
orb
adc
pop
fcomp
addr16
sbbl
clc
enter
sbb
test
jb
jl
or
mov
mov
add
call
mov
xchg
pop
inc
xor
lea
cmpl
or
dec
adc
and
sbb
adc
jmp
cmp
popa
shrl
lea
push
inc
ret
jmp
cli
data16
jbe
out
mov
add
inc
cmp
jbe
test
adc
frstor
ljmp
adc
inc
in
push
outsl
rcll
add
adc
push
mov
lret
test
test
shlb
sahf
iret
ret
aas
lea
in
xchg
inc
movsl
in
in
sbb
mov
aaa
push
loop
sahf
test
test
or
add
dec
fistpl
pop
add
push
insl
add
mov
and
adc
int3
movsb
sbb
outsl
push
pop
mov
mov
cmp
mov
les
jmp
jno
xchg
movsl
mov
xor
adc
pop
push
dec
imul
jne
pop
rcr
jnp
ds
lods
push
jne
lods
pop
lahf
shr
and
push
inc
sbb
loop
xor
addr16
mov
mov
sbb
and
pop
dec
inc
adc
imul
jb
cmp
inc
push
ss
add
inc
add
addb
into
js
sarb
sbb
ja
mov
nop
mov
add
repz
xor
inc
cmp
lret
das
loop
lds
mov
js
push
aam
add
hlt
xchg
dec
add
int
push
xor
and
inc
fdivl
and
cmp
imul
push
mov
insb
inc
and
lock
add
in
cmpsl
fcomip
es
adc
push
push
sbb
fimull
sub
call
fwait
iret
ss
add
fs
inc
mov
inc
mov
jne
insb
lock
mov
daa
mov
and
push
inc
lods
xor
lret
xor
or
add
and
and
insl
mov
add
inc
mov
and
and
sbbl
std
rorb
into
inc
shl
jb
incl
xor
dec
inc
rolb
adc
sbb
adcl
sub
fnstenv
and
out
out
aam
push
sbb
inc
mov
inc
sub
adc
sbb
andl
adc
pop
sti
in
mov
test
pop
js
movl
stos
dec
andb
nop
call
pop
xchg
and
cmp
and
jns
fadds
in
mov
call
lock
or
pop
aad
mov
or
push
call
or
popa
sbb
sbb
outsl
fstpt
and
cmp
test
call
mov
sub
in
inc
add
pop
add
xchg
addb
mov
inc
mov
idivb
xchg
nop
inc
xor
push
jo
stc
ret
mov
or
pop
pop
dec
ja
push
aad
mov
cld
xchg
roll
add
cmp
je
insl
jge
fs
test
sbb
inc
jecxz
xchg
pop
fcomi
cmc
cwtl
xor
push
dec
mov
pop
jg
dec
nop
and
dec
in
lret
mov
inc
movsb
lcall
daa
cmc
orb
jmp
cld
adc
pop
sub
pop
xor
mov
dec
push
pop
push
loope
dec
add
out
add
xor
iret
imul
stos
orl
fstpt
cmc
xor
insl
mov
fadds
dec
sub
cmpsb
pop
inc
jl
mov
nop
and
fsubrs
movsb
rol
aaa
rcr
jge
sub
or
and
test
cmp
jbe
fs
jmp
sub
push
mov
test
dec
mov
add
out
movsb
lea
jno
sbb
loope
add
test
fisubs
and
cmp
lods
mulb
rdtsc
cmp
in
mov
mov
movsb
movsb
pushf
adc
xchg
xchg
add
aaa
xchg
scas
cmp
mov
ret
jp
add
push
add
pop
push
imul
aaa
loopne
adc
lea
sahf
fcom
in
filds
jl
adc
fwait
ljmp
xchg
pop
cmp
decl
mov
add
or
jmp
pop
mov
and
cmpb
add
orl
cmp
or
adc
out
incb
shl
or
xor
xor
inc
hlt
je
sub
sub
shl
lock
inc
jbe
repz
push
dec
movsb
adc
pop
and
cld
cwtl
mov
pop
adc
inc
cld
addb
aas
sub
rcrb
mov
push
and
push
cwtl
add
subl
mov
lret
or
add
xchg
icebp
movsl
xchg
mov
xchg
lock
mov
push
and
movsl
ds
sbb
scas
and
dec
pop
mov
pusha
pop
sub
inc
andl
jecxz
cmp
inc
add
mov
jle
and
scas
push
push
inc
loopne
add
test
xchg
cmpl
loope
xchg
inc
add
adc
clc
jns
jns
outsl
mov
or
push
and
add
add
pop
adc
test
sbb
jl
pop
cli
aam
lds
lcall
jge
pushf
in
mov
popf
add
pusha
xchg
mov
orl
and
jne
cmp
xor
push
cld
mov
lahf
jno
and
cmp
jle
sub
add
dec
or
jno
mov
lea
test
inc
lahf
inc
cmpsb
xchg
roll
or
lods
or
and
sub
arpl
aam
or
lock
roll
or
xchg
or
inc
leave
lock
xchg
dec
mov
test
add
jne
push
lea
in
jmp
adc
aas
bound
cmp
cltd
adc
sub
shlb
leave
ds
in
imul
cwtl
cmp
lea
push
or
aad
data16
xor
pop
aad
adc
cwtl
xchg
popa
lahf
iret
imul
mov
dec
sub
mov
out
loopne
lahf
je
sarl
lea
push
pushf
xor
pushf
and
in
pushf
ja
xchg
js
movsb
movsl
cmp
mov
push
imul
pushf
adc
or
inc
pop
sub
inc
jg
adc
cmp
cmp
push
and
sub
ret
jg
and
xorl
mov
mov
push
mov
cwtl
fisubl
inc
incl
ret
mov
sbb
mov
mov
nop
or
add
call
mov
add
pop
or
roll
adc
rorl
adc
hlt
xchg
push
push
lock
jne
mov
cwtl
aas
pop
js
adc
addr16
addr16
imul
ret
add
sbb
xlat
mov
sbb
mov
cmp
scas
stos
and
in
mov
jo
aas
xchg
test
cmp
lea
rclb
sub
push
ret
mov
and
lea
inc
sbb
loop
add
jbe,pt
out
or
mov
repz
xchg
or
ljmp
and
add
fsts
push
lea
nop
ret
or
inc
inc
mov
nop
sub
int
ss
push
jne
push
outsb
es
jbe
push
or
and
or
push
xchg
incl
fcmovbe
xlat
push
hlt
icebp
outsl
xchg
rolb
shr
pop
sub
or
jecxz
adc
clc
or
jne
jno
sbb
dec
movsl
outsl
sbb
sbb
dec
lods
sbb
idivl
add
shl
or
mov
push
xchg
dec
jne
jle
es
outsl
das
jmp
leave
or
push
mov
mov
rcrl
iret
jnp
nop
and
add
adc
jnp
pushf
mov
nop
clc
lea
jl
addr16
call
sbb
mov
test
fdivs
jns
iret
shrb
repnz
fmulp
and
dec
popf
mov
xchg
mov
leave
xor
mov
ja
outsb
pop
addb
mov
ja
dec
sahf
jo
push
cmp
lahf
xchg
test
mov
rcrb
hlt
push
shlb
mov
repz
xlat
sub
aam
in
stc
mov
mov
jmp
les
iret
int
mov
mov
mov
mov
mov
stc
pushf
mov
xor
adc
clc
mov
leave
cmp
cmp
mov
xchg
pop
shlb
lock
fstp
leave
jae
int3
test
das
cmpb
in
dec
jl
in
push
or
fmulp
cmp
jo
subb
stc
push
mov
push
leave
cmp
pusha
out
mov
mov
pop
pop
dec
push
cmp
push
fmul
jae
adc
test
xchg
ja
fdivrl
in
lcall
adc
cmp
push
adc
xchg
inc
lods
fstpl
leave
cmp
stos
and
ss
into
outsb
and
or
mov
mov
pop
insl
testb
pop
pop
pusha
cmp
addr16
jl
in
inc
xchg
mov
cmp
sarb
mov
out
sti
dec
fistpll
add
cwtl
and
lahf
loopne
push
nop
pop
repnz
fmuls
in
jns
mov
lea
mov
in
ret
mov
inc
mov
mov
mov
sub
fs
outsb
adc
pop
pusha
subps
loope
pop
jbe
adcb
push
and
pop
add
adc
add
or
pop
loopne
jg
sbbl
sbb
xor
sub
push
xchg
enter
cmp
mov
enter
js
sbb
cmp
and
test
pop
xchg
enter
rclb
mov
and
sub
cmpb
push
cmp
popf
dec
push
inc
jo
xchg
scas
and
xchg
cmpsb
inc
dec
addr16
shl
sub
inc
clc
dec
pop
lea
jmp
push
test
add
sbb
xchg
lret
mov
je
mov
std
mov
ret
xor
xchg
push
push
or
adc
hlt
pop
add
in
sbb
jp
xchg
add
mov
jecxz
addps
or
fbld
pop
lcall
popf
wrmsr
aam
call
in
push
adc
xchg
push
add
or
pop
jl
jo
ret
or
nop
inc
lea
pop
push
iret
adc
adc
and
xchg
mov
nop
xchg
xchg
xchg
push
push
dec
dec
imul
push
sbb
stos
jge
stos
lods
jns
adc
push
jne
cmp
jl
lods
ret
xor
mov
stos
mov
jmp
mov
pusha
cltd
fs
dec
mov
mov
cltd
movsb
jb
jo
js
fs
dec
mov
dec
es
nop
xchg
dec
es
enter
es
mov
fs
aam
fsubr
movsb
jb
movsb
mov
in
cltd
loopne
xchg
shl
jns
movsb
jb
loopne
cmp
mov
cltd
in
in
test
cltd
dec
repnz
adc
mov
and
add
push
mov
js
xchg
lcall
push
movsl
test
popa
divb
mov
out
invd
mov
or
in
dec
add
outsl
je
pop
and
aas
rcpps
cmp
aas
xor
dec
adc
imul
enter
pop
outsb
dec
jb
pop
outsl
jb
adc
repnz
insl
jo
mov
mov
cmp
mov
and
les
mov
xorl
pop
dec
add
add
add
pop
outsl
out
xchg
pop
jb
adc
icebp
and
xor
std
pop
sub
pop
or
dec
add
push
and
pop
pop
adc
pop
imul
mov
sub
aam
xchg
mov
inc
lahf
xlat
mull
mov
add
int3
test
mov
jbe
leave
mov
lcall
scas
sbb
es
adc
fwait
inc
enter
mov
mov
test
cmp
enter
cs
neg
mov
mov
add
adc
imul
xchg
sbb
es
icebp
cwtl
les
fwait
inc
loop
add
out
pop
shll
pushf
sysret
add
lds
lret
adc
or
dec
popf
das
or
mov
ret
inc
sahf
psubusb
adc
cmpsb
insb
sti
inc
mov
push
xchg
pushf
sahf
inc
dec
fiaddl
push
add
adc
lret
cmp
pop
lds
test
xchg
mov
cmpb
pop
dec
jae
jb
or
inc
mov
pop
and
roll
incl
aaa
xor
adc
adc
jns
jae
push
and
jnp
adcl
sidtl
cwtl
std
mov
pop
or
and
pop
mov
rcrb
sbb
xor
cmpb
or
imul
push
popf
or
jb
dec
jo
insb
push
cmp
lods
pushf
sbb
push
pop
jp
mov
test
stos
jns
or
fmuls
out
sub
dec
aas
mov
pop
jae
loopne
jbe
scas
jmp
add
or
xor
sbb
jg
jae
imul
push
pop
sbb
mov
mov
and
aam
mov
or
divl
jbe
pcmpeqb
pop
sbb
cld
cmpsb
cmp
push
adc
popa
push
jno
fldl
cmp
insb
mov
test
scas
inc
loopne
pusha
xlat
or
adc
or
mov
inc
sarl
pop
addr16
iret
pop
cmp
and
rorb
inc
cs
nop
or
push
sarb
and
pop
mov
jl
pusha
mov
lds
aad
jb
pusha
adc
iret
pop
cmp
shrl
stos
pop
push
mov
adc
adc
pop
inc
popa
xor
lods
pop
cmp
nop
or
and
fsubrl
sub
or
sub
iret
pop
jo
pusha
cmpb
pop
mov
aaa
mov
insb
mov
adc
xor
gs
add
jne
pop
inc
xor
mov
or
pop
adc
addr16
fdivs
pop
inc
jb
xor
addr16
push
jb
pop
lock
fmull
jb
loop
outsl
rcl
pop
iret
pop
cmp
adc
push
js
add
pop
insb
mov
push
movsb
cltd
push
pop
push
and
sti
xlat
pop
inc
xor
and
or
cmpsb
push
pop
pusha
add
cmpsb
inc
mov
dec
iret
pop
scas
roll
sub
das
andb
pop
add
in
mov
pop
add
or
pop
pop
cmp
pop
mov
mov
nop
cmpsl
mov
cmp
jns
sahf
inc
sbb
dec
xorb
adc
aaa
jo
test
fistps
xchg
lahf
xor
lcall
cmp
or
sbb
test
add
sbb
in
add
mov
lret
lret
sti
adc
mov
adc
add
call
or
in
mov
in
adc
in
adc
jmp
fbld
pop
in
test
stos
rorb
test
cmpsl
jbe
xchg
inc
and
nop
cmpsl
jge
nop
sub
mov
push
stos
data16
in
sbb
fbstp
mov
insl
stos
lcall
lods
add
inc
std
cmp
cmp
add
aas
in
add
es
sub
lea
pop
mov
jns
sti
negl
aas
dec
je
sbb
cltd
rcr
shrb
pop
lcall
add
mov
divl
in
mov
mov
pop
cwtl
aam
mov
xor
lret
clc
pop
sub
es
hlt
dec
pusha
mov
lock
lock
and
mov
movsb
and
mov
movsl
jb
lods
imul
add
pop
lods
pop
jmp
ret
push
mov
insb
xchg
jmp
mov
or
or
adc
je
je
les
xor
enter
js
pop
popf
jmp
add
lods
sti
add
or
cwtl
loopnew
or
dec
add
mov
mov
sub
jno
add
sti
jbe
dec
or
jne
jmp
adc
imul
ror
adc
or
pushf
int3
call
jns
loopne
jmp
inc
lret
repnz
add
or
xlat
pop
jb
dec
shrb
and
nop
cmpsb
fldcw
daa
mov
sbbb
add
aad
mov
add
inc
cmp
add
lahf
ret
and
jl
jecxz
addr16
sti
cltd
cmp
incl
insb
jnp
ffreep
inc
jne
pushf
xchg
or
repz
sbb
in
std
pushf
xor
mov
shl
sahf
sbb
in
loop
push
push
inc
fiadds
testb
es
add
sbb
mov
pop
shrb
aaa
mov
nop
int
cli
or
out
push
rolb
inc
int
int3
push
mov
hlt
dec
lret
ds
and
xchg
stos
mov
in
popf
or
jl
inc
enter
xchg
pop
fcmovb
push
in
xor
inc
push
add
fcmovu
orl
test
and
imull
xchg
inc
pop
adc
pop
dec
inc
lods
jbe
addr16
sahf
jmp
inc
mov
or
mov
mov
sbb
in
repz
dec
jnp
xchg
not
adc
subb
call
fsubl
call
sarb
shrl
push
clc
orl
inc
iret
pop
adc
or
cmpsl
aas
jmp
and
and
and
pop
or
cmp
add
leave
cmp
add
jle
add
mov
mulw
and
inc
aas
mov
js
and
jno
dec
inc
mov
call
push
and
or
or
xchg
mov
jbe
adc
in
adc
outsl
mov
fmull
xchg
adc
fs
add
jp
icebp
pop
or
call
or
adc
gs
fsubr
and
test
fcompl
jb
ret
jo
aam
push
jno
test
inc
mov
popa
sbb
mov
pop
or
adc
call
mov
sbb
in
cmp
push
outsl
inc
xchg
push
rep
cmp
call
mov
jmp
push
or
out
mov
jb
flds
add
push
iret
paddd
clc
jns
dec
mov
jmp
inc
sbb
shll
and
push
inc
sahf
out
push
call
movsb
ficompl
cmp
insb
add
mov
push
pop
outsb
cmp
inc
or
je
loope
sahf
adc
call
and
adc
cmpsl
add
mov
movl
shl
pusha
cmp
dec
sub
outsb
add
paddd
shlb
jne
sub
push
and
call
ficoml
movsl
shll
mov
pop
arpl
inc
jp
adc
jnp
push
mov
test
ret
fdivrl
or
fimuls
pop
mov
cli
dec
sbb
mov
loope
cmp
mov
mov
adc
call
rol
mov
dec
enter
xchg
cs
mov
out
nop
inc
mov
xchg
enter
jp
and
push
cmp
and
mov
das
in
xchg
out
mov
push
jb
js
call
adc
sbb
nopl
push
loope
adc
sub
sbb
xchg
xchg
push
test
xlat
push
push
mov
icebp
adc
and
into
fnsave
orb
push
jae
pop
push
push
pop
or
push
push
lcall
cmp
in
lahf
jnp
negl
xor
inc
inc
adc
sbb
add
cmp
sbb
es
push
aaa
call
sbb
or
mov
shrl
rolb
cmp
jne
loope
mov
or
sahf
or
inc
clc
aad
xlat
or
in
test
addb
movsb
adc
jns
xlat
mov
push
mov
test
repz
repz
out
mov
adc
mov
mov
pop
fnstcw
mov
sbb
sub
xor
les
lcall
popf
fcomp
or
shll
sub
jns
stos
hlt
lock
dec
cmp
inc
cmp
sbb
fwait
pop
mov
ret
cmp
xchg
sbb
clc
fst
rcll
cmp
in
outsl
addr16
push
repnz
leave
pop
and
adc
xchg
daa
cmpsl
cmp
movsb
icebp
inc
and
jns
mov
lock
jb
fcomp
clc
jmp
mov
enter
test
and
mov
cmp
sar
or
roll
dec
je
lcall
jg
pop
loopne
hlt
ret
dec
cmp
adc
mov
in
dec
cmpsb
pushf
aam
ret
addb
mov
pusha
test
mov
sub
testb
jg
sub
xor
aam
hlt
mov
mov
daa
int3
sbb
xor
sbb
jmp
lock
inc
add
test
popa
xor
popa
add
mov
push
lahf
jne
inc
mov
add
inc
push
lea
pushf
pop
dec
mov
fbld
in
add
shll
jmp
push
inc
outsl
cltd
and
and
jae
loopne
pop
stos
mov
sub
cld
es
stos
aam
add
and
aad
sub
cmp
push
sbb
aad
clc
adc
scas
jb
fsts
and
popf
scas
inc
mov
clc
add
out
inc
pop
mov
sub
out
sahf
lods
mov
xor
mov
jns
jmp
pop
jae
addb
mov
mov
ja
dec
lods
inc
cmc
jo
imul
movsb
lea
sub
fdivs
pop
add
lods
ret
adcb
pop
cmp
pop
add
inc
faddl
push
cmp
add
push
xchg
inc
lock
jo
pop
insl
es
ficomps
mov
mov
aam
and
mov
je
dec
mov
jmp
jg
xorb
dec
je
or
lods
mov
shr
mov
stos
mov
mov
test
mov
ss
data16
pop
ds
test
fcomip
cmp
notl
lock
add
xchg
aaa
in
xchg
mov
daa
mov
sahf
out
les
aad
cld
sbb
adc
xchg
add
bound
inc
fldl
jo
dec
fildll
ja
mov
test
mov
shll
addl
sarb
push
aaa
test
daa
jg
sbb
pop
lods
jge
rolb
cs
push
xlat
lret
push
adc
jae
xor
fsubs
inc
sbb
pop
clc
imul
dec
or
es
dec
das
jns
add
pop
push
movsl
enter
mov
mov
pop
or
pop
adc
add
rclb
push
push
orl
and
sbb
in
and
add
xchg
push
xchg
addr16
jecxz
adc
pop
push
adc
push
inc
gs
or
xor
pop
add
add
inc
add
mov
data16
fwait
shll
mov
enter
jno
push
add
ficoms
in
xchg
testl
adc
out
sub
push
xchg
xchg
ret
repz
add
pop
jb
and
iret
jnp
pop
adc
mov
mov
jb
sbb
ret
and
adc
scas
adc
or
sbb
addb
cmp
inc
pop
loopne
lahf
out
insb
jne
mov
mov
iret
adc
pusha
xorl
and
adc
xchg
inc
test
dec
test
add
adc
and
and
xchg
ja
mov
inc
sbb
cltd
test
add
aam
es
push
xchg
cmp
fnstsw
pop
aaa
push
daa
mov
sub
loope
shr
rclb
ret
aaa
sbb
adc
sub
adc
adc
fnsave
pop
pop
dec
xchg
or
jne
pop
leave
cmp
fsub
hlt
xor
je
cwtl
test
lcall
lods
add
jo
cltd
cmp
testb
inc
mov
adc
ss
orl
adc
sbb
and
insl
or
push
lods
dec
push
push
jmp
lds
call
in
mov
in
xor
call
loopne
aas
pop
xor
sbb
adc
cmp
clc
cs
jns
push
test
jns
in
jecxz
cmp
push
into
repz
out
or
sbb
dec
out
imul
enter
push
iret
jnp
xchg
enter
push
fisttpl
idivl
add
add
mov
cmp
arpl
arpl
xor
enter
dec
outsb
and
push
arpl
dec
sbb
sub
xchg
imul
fwait
mov
js
add
push
je
jnp
mov
dec
and
enter
clc
mov
mov
and
push
xor
lahf
mov
dec
lret
xor
pop
bswap
and
push
push
xchg
cmp
jns
mov
fildl
icebp
add
push
aam
data16
sub
pop
xor
mov
mov
outsl
das
sbb
in
inc
inc
mov
add
insl
inc
inc
sub
sub
push
in
or
mov
mul
adc
and
dec
jbe
jmp
inc
jmp
mov
sbbl
cmp
addb
cmp
rcrl
das
lock
and
ret
jmp
push
mov
xor
push
xor
repz
pop
outsb
adcb
stos
mov
outsb
push
lods
fwait
and
push
movsl
fs
mov
cld
ret
jmp
outsl
jmp
jb
lret
adc
loope
cmp
or
lcall
rol
dec
sbbb
int3
clc
mov
adc
in
push
sbb
imul
dec
cmpb
loopne
imul
lods
xor
push
cmpsl
or
nop
jecxz
pop
dec
sbb
repnz
out
jl
out
out
test
das
pushf
out
addl
cmp
pop
andl
mov
decl
inc
sbb
or
adc
mov
inc
or
mov
sahf
negb
cld
dec
into
push
push
jb
out
sahf
out
mov
repnz
hlt
push
arpl
pop
iret
repz
add
push
sub
dec
xchg
dec
dec
cmp
fiaddl
bound
cmp
orb
xchg
sbb
sbb
inc
or
sbb
fisttpll
push
and
imul
in
xchg
xchg
mov
arpl
mov
addb
sbb
test
push
xchg
mov
outsl
mov
rclb
push
xor
in
jg
pusha
mov
adcb
arpl
mov
xchg
orl
inc
out
lcall
pop
je
cmpsb
jge
mov
idivl
push
cmc
add
lret
mov
js
sbb
pop
push
sbb
fisubrs
sub
sub
sbb
pop
sub
popa
out
scas
pop
jno
sbb
mov
pop
xor
cmp
inc
jne
pop
jmp
lahf
jmp
jo
cmp
lcall
andb
xchg
jl
mulb
mov
xor
sub
adcl
ds
loopnew
jg
pop
bound
mov
pop
lock
jmp
jb
pop
mov
jo
mov
sbb
sbb
loopne
rclb
mov
fs
sub
mov
pop
leave
stos
inc
das
in
cmp
xor
mov
fwait
sub
rolb
and
pop
roll
add
shr
mov
out
sahf
xlat
mov
ret
out
cmp
or
sbb
inc
add
scas
pop
repnz
adc
icebp
pop
gs
jp
sahf
out
push
movsb
mov
mov
imul
push
xchg
fs
sbb
or
fistl
outsb
mov
fldenv
mov
imul
and
loopne
jnp
mov
inc
movswl
mov
sub
mov
jmp
arpl
xchg
sbb
sbbl
mov
or
add
add
and
push
ret
stos
andb
pop
ret
pop
rolb
and
mull
mov
pop
rclb
fiadds
in
cli
mov
and
ss
inc
inc
push
jmp
pop
pop
je
lahf
roll
jns
ret
xchg
or
pusha
pop
fistpl
fldcw
xor
ret
daa
addb
inc
out
std
lods
mov
es
or
mov
inc
imul
adcl
bound
loop
jno
xor
jmp
jmp
lock
lock
xor
lock
adc
into
xchg
jno
inc
imul
sti
dec
clc
or
fldt
pop
xor
push
pop
push
jmp
adc
push
rolb
decl
fdivrs
sbb
xor
dec
pop
je
sbb
cmp
xchg
fadds
jb
sbb
xor
cmpsb
dec
outsb
fistps
fwait
sbb
pop
out
push
nop
mov
pop
outsl
lock
sub
mov
out
pop
mov
lret
call
xor
jnp
jmp
test
mov
sbb
push
push
add
add
inc
faddl
rcrb
sub
nop
or
add
movsl
adc
loopne
test
dec
and
push
sbb
jo
add
in
movsb
jge
cmp
cmp
lahf
cmpsl
call
lock
int3
adc
arpl
aaa
cwtl
nop
and
repz
cmpsb
inc
test
aam
leave
jecxz
data16
adc
jl
int
out
or
pop
xchg
sub
push
fwait
stc
sub
dec
movsl
xor
xchg
das
ljmp
mov
pop
and
std
fiaddl
inc
xor
add
pop
out
out
xor
push
fisubs
es
cmp
jae
jl
push
dec
push
add
out
fidivs
xchg
repnz
iret
sub
and
das
pop
fldt
movsb
jge
mov
adc
leave
or
enter
sub
add
pop
xor
mov
popa
in
rorl
or
sbb
filds
pop
push
add
pop
jmp
add
inc
jp
enter
mov
orb
repnz
jge
stc
push
add
adc
inc
xor
scas
pop
repnz
stc
pop
dec
push
bound
jns
or
fisubs
add
shll
mov
fs
fldt
nop
mov
ret
stos
loope
out
cmpsl
or
movsb
mov
cmp
ret
pop
in
ret
lret
or
pop
insb
and
xchg
sbb
push
call
add
in
and
jb
push
in
and
push
push
out
fists
add
in
fildll
xchg
or
push
push
push
and
mov
testl
push
fildll
cld
inc
jb
loopne
ret
jge
push
inc
xor
adc
push
repz
jl
idiv
enter
or
push
imul
push
dec
jecxz
jnp
xchg
out
pusha
push
cmp
daa
jnp
push
adc
cmp
mov
in
push
jecxz
mov
dec
push
aad
push
inc
dec
ret
neg
or
in
mov
stc
rclb
mov
and
inc
pop
fidivrl
xor
iret
cmp
mov
xor
adc
mov
cmp
mov
imul
jae
pop
sbb
imul
sub
pop
sbb
dec
imul
psubusb
shlb
imul
ret
cmp
mov
pop
sbb
cs
push
sub
jbe
inc
xchg
imul
cli
sbb
or
in
ret
fildl
pushf
shld
addl
push
jo
mov
sarl
mov
push
enter
adc
mov
popa
in
addl
pandn
shll
pop
insb
xchg
add
add
pop
jmp
lods
push
and
arpl
and
pop
movb
lock
imull
mov
nop
scas
lahf
pop
sbb
fsub
icebp
popf
push
mov
inc
pusha
xchg
xchg
outsb
adc
rolb
push
mov
add
jmp
mov
insl
inc
test
push
pop
iret
stos
mov
nop
cmpsb
rcrb
hlt
add
inc
add
add
push
call
movsb
adc
stos
sbb
es
xchg
mov
xchg
out
insb
and
jg
sub
mov
pop
push
js
mov
push
popa
dec
inc
test
sbb
jecxz
loope
mov
sarl
nop
mov
shll
leave
adc
enter
mov
fdivrs
mov
fimull
out
and
fs
add
sub
adc
aaa
push
or
testl
rolb
xchg
jns
arpl
ret
loopne
inc
lea
sahf
inc
or
pop
stc
sub
and
enter
pmulhw
out
pop
in
and
push
jmp
push
sub
xchg
mov
loop
ljmp
xchg
out
push
push
aaa
jmp
jo
push
pop
idivl
mov
repz
inc
leave
cmpsb
fidivrs
fisubl
pop
dec
cs
call
cmpsb
repnz
add
mov
scas
aas
cmp
clc
dec
sub
or
push
mov
daa
xchg
sbb
hlt
lock
jge
pushl
add
inc
in
aad
jb
daa
imul
xor
subl
pop
mov
outsl
add
xchg
mov
xchg
mov
loopne,pt
out
xor
xchg
fdivl
and
dec
mov
leave
fcom
mov
xor
dec
out
nop
out
and
add
ror
dec
ja
faddl
enter
jp
push
and
movsb
mov
pop
les
cs
or
in
adcb
inc
sbb
fcmovnb
stos
xlat
adc
pop
mov
rcrb
aad
or
inc
pop
lcall
cmp
vpcomud
in
test
into
negb
in
xor
inc
inc
cwtl
fisttpl
push
xchg
adc
sub
mov
dec
inc
mov
mov
dec
imul
fldt
mov
icebp
add
scas
mov
mov
loope
mov
xor
inc
jae
xchg
or
xchg
mov
dec
fnsave
mov
pushf
xor
mov
lods
lods
movsb
jbe
mov
test
test
cmp
add
mov
popf
pop
pushf
movsb
pop
leave
dec
pop
repz
and
adc
sbb
xchg
mov
mov
xchg
xchg
adc
adc
mov
jl
push
push
dec
jmp
imul
jo
inc
mov
pop
jno
fadds
sbb
push
or
test
lea
shrb
icebp
push
stos
sbb
jbe
xor
ret
push
fisubs
insl
cmp
lcall
enter
out
popf
repz
and
or
pushf
movsb
rorb
add
ret
fistps
enter
xorl
cli
cmp
loop
xor
mov
sbbl
push
pop
lcall
pop
sub
das
icebp
jmp
or
and
or
fsubr
pop
adc
sbb
fimuls
jno
mov
ja
icebp
daa
xchg
jo
cmp
fmuls
imul
gs
idiv
mov
scas
roll
fldl
cmpsl
and
pop
jl
leave
divl
mov
repz
sahf
idivl
daa
jmp
pop
fs
jl
repz
add
mov
adc
xchg
mov
out
adc
xor
push
xor
inc
pop
addb
nop
or
adc
sub
pop
xor
xor
pop
in
add
xor
test
mov
ss
out
xor
enter
rcl
pop
and
aam
or
push
int3
fwait
int3
scas
rolb
add
jae
ret
sub
fbstp
enter
aad
aaa
stos
pusha
mov
loopne
lahf
les
pop
add
pop
dec
dec
xor
push
testb
int
mov
in
adc
xor
pop
dec
sti
jno
inc
xor
cmpsl
in
mov
imul
lcall
adc
mov
mov
aaa
sbb
mov
inc
bound
inc
mov
jno
sub
push
cs
in
lods
in
adc
das
pusha
pusha
fs
xor
loope
pop
test
mov
ret
movsb
aad
fadd
test
lods
pop
or
insb
cmp
cwtl
cwtl
lds
or
nop
adcl
push
fldt
cmp
sbb
ds
mov
jmp
jg
imul
adc
mov
dec
testl
fsubs
les
popa
sub
es
jno
nop
ja
nop
push
leave
xchg
imul
fs
imull
jno
and
pop
clc
fs
nop
es
add
ljmp
push
loop
pop
clc
push
mov
xchg
test
movsb
cli
push
out
sahf
out
stc
xor
xchg
jns
cmpsl
hlt
push
iret
jae
ds
pop
and
and
repz
nop
lods
dec
and
push
in
in
fldt
push
dec
push
xor
push
xor
es
and
lods
es
inc
push
cmp
cmp
lods
movsl
test
dec
imul
sub
movsl
adc
mov
movsl
dec
xor
inc
sarl
xchg
sub
pop
cwtl
jbe
mov
inc
jo
imul
insl
lds
jo
mov
adc
cmp
rolb
sti
jns
aaa
sub
or
push
and
out
mov
pop
and
bound
scas
inc
mov
push
and
push
stos
pop
aaa
std
or
lods
test
adc
jmp
imul
jbe
and
lret
inc
push
pop
pop
rcl
sbb
mov
dec
dec
sbb
cmp
lds
cmp
mov
fidivrl
inc
mov
outsl
mov
cltd
and
sbb
outsl
in
in
bound
test
or
popa
rcrb
cmpsb
es
cmpsb
pop
mov
imul
enter
xchg
ja
lds
sub
rorb
lock
inc
add
aam
inc
push
adc
or
dec
clc
adcb
addl
std
clc
or
jp
cli
aaa
enter
aas
jmp
sub
or
or
push
ss
arpl
or
js
or
xor
jno
out
mov
insb
jmp
insb
pop
push
xchg
movsb
add
sub
xor
or
lret
ret
stos
and
sub
xchg
pop
pop
in
pop
ret
and
inc
outsb
inc
fs
sbb
dec
inc
add
mov
orl
jp
sbb
pop
push
adc
push
call
inc
ret
mov
inc
insb
clc
pop
movl
in
mov
or
mov
imul
pop
mov
mov
jns
push
adc
mov
mov
dec
or
cmpb
idivl
imul
pop
adc
loopne
fisttpll
mov
adcb
add
inc
cs
xlat
adc
mulw
dec
bound
dec
or
aad
sub
sbbl
push
jbe
sbb
js
sti
sub
repnz
dec
das
jo
sub
mov
dec
jnp
push
daa
pop
add
sbbb
daa
scas
lret
lret
loope
cs
andb
imul
sahf
pusha
lds
push
push
dec
sbb
dec
aas
xchg
cmp
mov
aam
fwait
sub
cmovb
or
and
test
adc
jle
or
and
lcall
and
fcompl
mov
add
push
stos
dec
dec
mov
stos
jnp
mov
push
outsb
outsl
pusha
xor
imul
enter
js
iret
sarb
clc
subl
aaa
rcll
mov
aad
xor
sbb
sub
cli
add
add
cmpsb
mov
outsb
mov
inc
outsl
call
dec
je
dec
adc
adcb
cmc
mov
sub
or
into
idivb
sub
inc
sbb
clc
pop
cmp
dec
fwait
sub
add
idivb
xchg
or
iret
sti
std
adc
insb
xchg
jmp
mov
in
add
inc
mov
jmp
and
sbb
and
push
xchg
or
nop
or
les
or
jecxz
jb
adc
leave
aas
pushf
xor
mov
cld
mov
stos
xor
jnp
or
das
jbe
outsl
sub
push
shll
outsl
push
daa
jbe
fstp
dec
sti
push
rcrb
sbbb
push
das
mov
adc
fcompp
xchg
mov
inc
mov
cmovle
xchg
push
xor
sbb
pop
inc
shlb
rcll
clc
mov
mov
cmc
and
addb
pop
in
cs
mov
movsb
pop
mov
jbe
pop
xorb
inc
add
add
xchg
pop
adc
mov
cli
or
xchg
jle
scas
push
mov
enter
jae
into
repz
out
push
repnz
mov
or
rcrl
sbb
cmp
test
int
mov
xorl
lcall
adc
pop
xchg
outsb
aaa
les
cs
adc
testb
xchg
je
mov
sbb
lret
mov
sbb
jmp
inc
clc
scas
lret
imul
imull
idivb
or
pop
xorl
xchg
ret
xor
cmp
pop
aam
fmuls
add
insl
movb
xor
add
or
cmpl
xor
xchg
clc
adc
push
mov
or
orl
repnz
dec
push
je
add
fwait
cmc
sahf
sub
cmp
jmp
nop
sbb
add
addb
push
inc
in
add
push
popa
cs
cmp
jl
arpl
or
jne
adc
dec
das
aam
ja
out
sbb
dec
gs
inc
ss
pop
xchg
call
loopne
loope
push
pop
adc
inc
add
and
popa
rolb
or
addb
xchg
test
dec
jae
or
dec
add
ret
xchg
sub
push
insb
sbb
sub
sub
mov
sbb
add
pop
jno
xchg
out
push
jo
push
test
scas
pop
fldcw
jns
push
push
out
je
fs
and
add
push
and
aam
call
or
test
jne
pop
lock
dec
ss
imul
test
dec
push
or
add
mov
aam
mov
or
xor
sub
mov
xor
cmpsb
repz
or
movsl
push
push
push
xor
mov
decl
jns
loopne
xchg
sub
mov
in
ret
xor
mov
bound
out
mov
ss
addl
clc
aam
cltd
rcrb
or
mov
xorb
mov
mov
inc
pop
and
inc
shlb
sbb
insb
add
pop
jbe
iret
jae
push
popa
xor
outsb
outsb
aas
ja
add
dec
sub
mov
ja
sarw
add
rcrl
bound
out
xor
xchg
sbb
gs
push
jbe
jge
mov
fwait
push
ss
clc
sbbb
jo
arpl
inc
jecxz
add
xorb
es
mov
aaa
push
es
imul
bound
push
imul
ja
cmpl
inc
lcall
adc
and
inc
fdiv
loopne
pop
push
ret
popa
push
das
jno
ret
ja
imul
jl
pop
insb
cs
add
rorb
xor
inc
loope
aad
sbb
cli
mov
outsl
cmp
ja
add
add
loopne
xchg
pop
scas
scas
aad
fld
add
adc
insb
pop
sahf
inc
inc
fidivrs
sub
add
addl
das
in
xchg
and
call
cmp
aam
lret
add
add
and
dec
adc
out
xor
push
loopne
inc
xchg
and
and
int
and
dec
test
nop
sbb
sub
xlat
jno
pop
or
mov
pop
push
aas
imulb
inc
es
inc
ja
cmpsl
push
aaa
push
ss
scas
mov
aaa
jmp
call
loopne
test
add
cmp
add
sti
sub
pop
xor
adc
add
mov
mov
or
cmpsb
loop
xor
mov
pop
push
dec
add
nop
cmpsl
and
rclb
shrl
mov
loopne
jmp
in
pop
gs
push
adc
cmp
xchg
or
adc
jmp
test
add
mov
push
sbb
jo
sti
mov
fisubs
lds
pop
mov
inc
pusha
xchg
mov
and
jecxz
push
push
insl
or
and
out
arpl
add
mov
sbb
xor
inc
sub
jmp
mov
testb
add
or
jl
xlat
and
mov
or
or
ss
inc
mov
outsl
cld
jbe
mov
adc
icebp
add
or
test
sbb
push
xor
mov
sub
inc
inc
dec
repnz
mov
aad
outsb
sarb
sub
push
mov
incl
jns
lahf
cmpsb
pop
xor
aam
sbb
sbb
jb
adc
jo
cmp
fucomi
inc
adc
pushl
mov
mov
test
jnp
fs
js
ds
jbe
add
leave
push
adc
fidivrl
scas
inc
ror
pop
add
adc
jo
vmread
and
aaa
mov
je
aad
data16
adc
ja
pop
dec
lods
hlt
xchg
pop
movsl
test
mov
das
idiv
push
dec
push
clc
lahf
xorb
ret
in
add
xchg
inc
jo
inc
push
mov
bound
clc
cmp
adc
adc
ret
xchg
loopne
ja
bound
std
mov
adc
mov
insl
add
pop
cmp
adc
or
add
push
dec
repz
jns
adc
pop
sbb
mov
mov
js
js
mov
sarl
sbb
jmp
xchg
nop
and
or
cmpsb
sbb
setge
lret
aaa
adc
nop
outsb
popl
add
pop
loopnew
jecxz
aas
popa
jp
or
cld
pusha
mov
jl
pop
pop
incl
imul
mov
ja
jl
push
mov
pop
add
ja
xchg
cli
lahf
jno
inc
mov
lods
mov
icebp
enter
fnstenv
loope
push
test
es
mov
xchg
cld
add
adc
pop
inc
rclb
lock
xor
mov
rol
or
mov
mov
fs
inc
add
stc
movsb
push
lock
jmp
repz
xchg
inc
dec
jne
mov
pop
cmp
fs
rorl
icebp
and
add
addb
jge
sbb
add
and
adc
dec
adc
cmp
mov
mov
out
mov
push
movsb
adc
xlat
adc
sbb
les
sbb
add
inc
dec
jne
and
jl
adc
push
adc
or
mov
and
adc
push
adc
or
insl
push
gs
adc
outsl
adc
push
sbb
cmp
gs
das
dec
cmp
sub
in
iret
mov
dec
push
adc
jo
xor
repz
or
or
add
jns
dec
xchg
mov
insb
data16
jp
fs
rcrb
fdivs
jp
xor
sbb
cmpsl
lods
inc
push
push
cmp
jo
dec
and
sub
add
jb
or
fdivrp
adc
dec
das
add
ret
aaa
jns
add
add
and
fsubl
mov
scas
adcb
scas
sbb
sbb
pushf
cmp
or
or
or
and
sbb
scas
and
push
push
or
dec
pop
dec
pusha
xor
sbb
cmpsl
push
add
push
das
or
sbb
add
sub
sbb
inc
adcl
mov
sub
add
sbb
or
lea
jno
test
add
subb
jns
icebp
fldl
adc
add
jp
dec
sub
sbb
or
mov
aaa
les
popf
or
mov
pop
adc
rorl
je
mov
adc
js
jge
mov
hlt
push
inc
inc
xchg
fs
ja
add
mov
mov
pop
imul
cmp
adc
xor
inc
adc
or
add
ds
rcl
cmc
mov
int
sbb
nop
clc
bound
add
lods
gs
stc
xor
js
add
push
inc
jg
dec
hlt
cmp
xor
push
cmp
push
mov
push
jne
das
push
cmpsb
and
pop
shlb
push
add
mov
iret
jle
push
dec
add
adc
fs
add
clc
sub
testl
pop
adc
fistpll
xor
movups
fbstp
dec
jne
pop
inc
neg
jmp
movl
jle
fcoml
jne
addb
add
clc
jle
pop
push
push
shrb
sub
sbb
xchg
jnp
and
pop
leave
mov
xchg
mov
mov
sbb
sub
or
jmp
test
push
cmp
pop
push
lahf
sub
mov
push
mov
xor
or
or
mov
and
mov
sbb
mov
daa
movsb
mov
jl
or
xor
ret
cmpsb
xchg
or
push
test
ljmp
or
in
mov
cmp
je
mov
dec
push
sbb
jne
scas
adc
sub
push
jnp
frstor
jmp
cmp
adc
insb
sbb
pushf
cld
out
adc
jne
jmp
mov
jl
cmp
cld
sbb
pop
and
xchg
cs
pop
je
mov
shlb
and
or
xorb
and
clc
mov
mov
xor
int
sahf
push
and
or
stos
mov
call
dec
inc
push
or
jmp
jp
jl
or
dec
sbb
mov
mov
or
bndstx
jmp
pcmpeqd
adc
jmp
push
dec
add
fucomip
or
rorl
pop
cmpb
mov
jb
ja
je
cli
dec
pop
adc
ret
cmp
or
mov
iret
inc
loopne
xchg
push
cmp
aas
pop
je
dec
imul
mov
pop
rol
mul
or
jmp
jl
sbb
adc
aaa
jecxz
add
push
add
add
in
sti
or
adc
add
mov
push
outsl
pop
es
or
call
mov
mov
in
ds
pop
in
push
mov
cmp
pushl
inc
mov
cmpb
ja
jb
add
add
call
lret
xchg
das
iret
out
mov
mov
test
fs
das
adc
aam
inc
and
mov
in
mov
cld
or
adc
or
inc
shrb
xor
and
je
bound
sbb
cmp
data16
jo
addb
addb
mov
xor
add
adc
pop
popa
rolb
cmc
sub
push
mov
les
dec
push
pop
lar
shrb
jns
or
and
aaa
mov
imul
lock
dec
sahf
adc
rorb
rep
inc
ret
pop
ret
push
mov
mov
in
icebp
xor
jle
adc
cmc
add
call
jl
xlat
or
insl
cmp
test
pop
loop
adc
pop
scas
mov
lods
cmp
repnz
stos
mov
test
repnz
push
xor
push
inc
outsb
aam
faddl
sub
arpl
insb
call
jmp
xor
push
inc
or
insb
and
lock
lock
bound
lahf
and
ret
imul
adc
push
xor
and
pop
clc
jge
sbbb
daa
sbb
jno
rorl
dec
stos
xchg
adc
mov
repnz
and
sub
push
out
and
dec
insl
push
and
xchg
jne
mov
adc
sbb
mov
fwait
or
aam
jb
shrb
and
cmp
xchg
inc
fs
xor
sub
shll
addr16
sub
push
add
cmp
adc
push
loope
mov
adc
jmp
lret
arpl
in
mov
enter
cmp
jl
and
xchg
sbb
cmpsl
fcoml
sbb
lret
je
adc
pop
jmp
cld
jns
or
movsb
and
pop
cmpsl
xchg
mov
icebp
and
mov
test
jp
orl
or
jo
and
inc
cltd
rclb
lock
mov
jbe
ljmp
sbb
jmp
cmpsl
mov
add
xor
push
lock
inc
jecxz
inc
xor
in
adc
dec
cmp
jne
ljmp
and
scas
jmp
fwait
test
mov
aad
xor
ss
xor
enter
pop
pop
daa
and
stos
pop
xchg
mov
loope
mov
fnstsw
mov
cmp
movsb
dec
and
repz
mov
xor
jp
lock
shlb
leave
lock
adc
ficomps
into
xor
cmp
mov
adc
pop
push
jne
xchg
cmp
add
iret
lods
pop
test
es
xor
pop
lock
not
daa
ror
test
mov
cmpb
dec
xor
jl
mov
aaa
mov
repnz
and
pop
cld
hlt
cltd
add
mov
clc
mov
mov
ss
pop
sbb
jns
and
and
daa
pop
mov
dec
and
lock
or
clc
jns
cwtl
cmp
outsb
and
adc
push
mov
jecxz
adc
mov
push
mov
jmp
add
or
or
mov
push
outsb
add
lret
mov
adc
push
mov
mov
pop
cmp
jmp
dec
sbb
push
stos
jg
in
sbb
and
add
add
insb
insl
arpl
shl
adc
loope
jns
xor
pop
sbb
lea
sti
xor
fs
lea
cmpsl
addr16
loopne
push
scas
jecxz
xlat
pop
orb
in
int3
jle
dec
xor
add
sbb
jo
mov
inc
mov
fwait
push
push
in
and
inc
lret
stc
std
inc
sub
test
xchg
jnp
shlb
ja
into
pushf
mov
cmp
mov
push
push
fimull
cmpps
fstl
sub
add
outsl
inc
cmp
fildll
and
jmp
push
fdivs
jo
pop
jne
or
pusha
das
xor
mov
mov
add
mov
jb
jmp
inc
addb
or
aas
fidivrl
sub
add
lea
jno
mov
jecxz,pn
adc
test
sbb
pusha
rcll
xchg
pop
or
jo
xchg
loop
xchg
xchg
jnp
cli
shll
ja
mov
mov
out
xchg
fsubrl
fstps
sub
mov
jbe
sti
loope
inc
ds
adc
or
cmp
adc
fmuls
arpl
mov
add
dec
push
inc
mov
bound
insl
and
sub
sahf
out
pop
push
insl
push
adcb
or
mov
mov
sub
mov
push
cmp
push
fistpll
outsl
out
add
xor
in
add
dec
adc
and
dec
sub
dec
jmp
pop
jmp
sbb
sub
sub
jmp
or
jno
out
xchg
enter
xchg
lea
in
push
pop
addl
fildl
or
mov
sbb
rorl
cmpsl
add
cmpsb
pop
xor
pop
add
jle
or
inc
popw
pop
pushl
pushl
pusha
scas
mov
imul
pusha
leave
adc
xchg
dec
cmp
or
push
and
enter
std
into
lahf
mov
ret
or
ret
dec
and
les
dec
add
sbb
mov
add
inc
fidivl
jo
xor
adc
mov
jae
out
mov
ret
aas
and
enter
fadds
icebp
jbe
mov
dec
inc
inc
sti
fstps
sbb
idivl
or
sbb
add
or
into
mov
mov
sbb
add
fsubl
jmp
enter
pop
mov
mov
ja
aaa
sbb
lea
gs
and
es
add
and
or
sub
adc
push
inc
xor
add
daa
pop
dec
in
xor
or
jbe
inc
insb
jle
insl
test
adc
sbb
fsubrs
sub
push
sbb
xlat
fmull
gs
push
fldl
mov
sbb
rolb
add
mov
fs
outsl
lea
js
into
sbb
adc
dec
outsl
and
pop
das
pop
subl
xchg
dec
aaa
add
in
outsb
insb
jns
sub
inc
xlat
outsb
out
sub
pop
ss
push
bound
or
jb
or
and
cmpsl
or
dec
imul
inc
xor
loopne
shlb
push
nop
mov
into
movsl
das
add
scas
mov
add
fwait
inc
loope
ret
add
adc
or
aaa
or
mov
or
or
pushf
ja
imul
in
fnstcw
or
inc
cmp
je
sub
sbb
sub
or
or
adc
sbbb
mov
mov
pop
or
imul
and
mov
pusha
cs
rcrb
mov
out
or
or
pop
sub
sarl
or
xchg
jnp
frstor
xorb
xor
enter
mov
mov
xorb
push
or
xor
cmp
dec
adc
je
mov
lock
add
testl
iret
or
out
ja
leave
ret
and
testl
pop
push
xor
clc
xchg
add
jae
mov
sbb
nop
push
lock
aaa
add
sub
pusha
pusha
ffree
dec
or
xor
subb
movlps
fcomps
or
mov
or
shrl
ss
hlt
bound
xor
and
vprotd
dec
or
mov
mov
and
xchg
xor
sub
push
and
push
sbb
mov
pop
push
add
lods
sub
aaa
or
pop
dec
aaa
push
mov
inc
jecxz
inc
push
jmp
inc
pushf
nop
mov
adc
cmp
das
jbe
pop
call
loopne
nop
or
mov
push
sub
fadds
cmp
test
aaa
movsb
fldl
mov
js
jo
and
sub
cmp
pop
insb
and
sub
sbb
daa
pusha
insb
add
xchg
daa
mov
and
inc
cs
daa
movsb
les
lock
adc
ret
aaa
xor
dec
cmp
pop
push
cmp
aaa
mov
cmovne
outsb
or
mov
sub
or
clc
push
insb
lret
aas
add
lock
add
mov
sub
inc
jmp
mov
mov
pop
mov
mov
test
pusha
mov
jg
int3
ret
adc
mov
pop
xor
lea
sbb
or
mov
cs
mov
xor
fs
outsb
fmull
pushf
add
xor
or
test
pop
xor
and
and
pop
repnz
xor
xor
cs
dec
push
mov
pop
js
sti
jns
pusha
adc
les
sbb
mov
add
sbb
jg
unpcklps
inc
inc
add
adc
popa
push
enter
repz
add
inc
xor
je
inc
fdivrs
push
fdivl
push
pop
sub
or
add
sbb
adc
rorb
or
mov
adc
push
and
mov
pop
jmp
mov
nop
cmp
mov
jbe
push
mull
and
inc
cmpl
push
test
addl
and
inc
mov
inc
out
lds
inc
cmpb
jns
inc
por
push
push
mov
movsb
xor
cmp
pop
roll
and
cmp
shrl
movsb
nop
mov
jno
decl
inc
mov
gs
rorb
or
cltd
sbb
pop
xor
xchg
add
and
adc
xor
ror
push
test
sub
mov
or
xchg
pop
pop
sbb
nop
sub
nop
fs
cmpsl
push
je
outsb
pop
cmpsl
mov
das
jo
push
lahf
int
pusha
and
out
push
inc
rep
xor
xchg
sub
movl
popa
sub
jp
mov
xor
popa
orl
sub
arpl
adc
pop
add
popf
inc
loope
dec
adc
into
push
mov
pop
sub
mov
push
inc
das
lock
pushf
mov
mov
jmp
daa
and
rcrl
inc
dec
cwtl
xchg
daa
daa
daa
mov
inc
rorl
in
pop
adc
stos
roll
mov
fs
add
fsubrs
sbb
js
mov
popa
and
mov
stos
push
push
mov
mov
mov
pushf
sub
cmp
mov
add
lods
dec
push
jmp
add
inc
mov
pusha
inc
cltd
mov
loop
dec
ret
add
adc
mov
jb
push
xor
pop
xor
mov
xchg
pop
jo
stos
jp
cmp
shlb
stc
push
inc
sbb
in
imul
and
ficoml
or
imul
std
dec
mov
or
js
pop
in
and
or
jle
in
dec
data16
dec
xor
movsb
dec
push
stos
pop
nop
or
adc
cmp
mov
dec
popa
sub
lock
adc
insl
adcl
fmul
repz
sbb
add
les
pop
push
mov
or
xor
and
lea
push
dec
sahf
xchg
adc
or
lea
xchg
push
cmp
mov
repz
in
sbb
imul
cmp
mov
jo
xchg
push
sbb
mov
insl
pop
jp
icebp
sbb
add
mov
shll
jno
or
cmpsl
and
or
xor
inc
fimull
fcmovnbe
add
sub
gs
mov
inc
pop
inc
or
and
iret
push
jno
add
insl
ret
sbb
js
xlat
js
into
es
push
daa
mov
xor
inc
dec
daa
testb
orl
push
pop
add
loop
mov
xlat
cmp
rcrb
in
mov
inc
mov
sub
or
in
jl
das
inc
sbb
xchg
leave
enter
aam
dec
push
aam
add
out
repz
sub
add
add
dec
inc
sbb
dec
cmp
testb
xchg
add
push
xor
or
jne
dec
xor
push
or
push
jne
je
loopne
mov
divl
shr
push
ja
add
clc
xchg
push
outsb
insb
push
rorl
dec
cmp
inc
pop
pop
fcompl
gs
pop
jl
cwtl
mov
cmp
inc
add
push
inc
push
jecxz
dec
aas
and
add
sarb
and
dec
hlt
sti
push
add
dec
xor
sbb
aaa
mov
mov
mov
add
dec
ret
inc
inc
inc
mov
mov
jnp
movsb
jo
out
sub
xor
ja
fisttpll
outsb
push
je
nop
jo
aad
push
sahf
or
shrb
mov
out
stos
dec
sarb
xor
rorl
pop
into
push
fistpl
or
pop
adc
cmp
xor
lea
sub
sbb
mov
inc
dec
lds
dec
add
jae
add
adc
ret
lods
mov
orb
pop
fldl
mov
fildl
js
cmpsl
cmp
dec
xor
ja
push
adc
xchg
fcompl
mov
dec
pusha
or
jmp
adc
int3
mov
push
mov
mov
dec
cmp
mov
dec
mov
call
dec
adc
push
ror
fs
rorb
push
add
and
inc
or
mov
lahf
add
psubw
or
pop
inc
shlb
jne
jns
add
add
push
std
adc
sbb
stos
dec
shl
or
push
push
mov
fmull
xchg
xchg
daa
mov
mov
movsb
dec
out
testl
repnz
push
push
sbb
dec
imul
out
out
fwait
sbb
pop
std
out
push
mov
es
push
add
push
mov
std
dec
push
xor
adc
fwait
je
jbe
stos
xor
cmpsb
xor
xchg
dec
repz
cmpsb
push
or
fsubr
jge
in
andps
sub
je
les
nop
add
jle
xchg
push
imul
test
stos
jp
or
or
add
pop
pop
mov
dec
xchg
add
xor
or
jg
dec
mov
mov
or
add
scas
shll
sbb
inc
loop
aas
or
pop
lock
mov
pushf
dec
cmpsb
adc
push
pop
or
cmp
push
add
inc
daa
inc
das
pop
cmp
mov
and
scas
lods
loopne
jns
inc
fcoms
bound
cmp
push
mov
mov
aam
and
sbb
sbb
add
sbbb
cmp
cmp
dec
pushf
loopne
pop
dec
xchg
cmp
lock
mov
aas
mov
loopne
fcoml
out
push
pop
push
push
lret
xlat
repz
pop
clc
jns
outsl
daa
incl
enter
int3
rol
adc
out
rolb
mov
adc
sbb
add
mov
je
ret
push
sub
sbb
cmpsl
std
or
push
jo
mov
xchg
sub
and
imulb
jns
mov
lock
sub
insl
mov
push
push
cmp
cwtl
push
lea
paddb
das
push
push
js
fisttpll
push
das
or
jl
mov
fists
in
add
adc
cld
sti
out
pop
pop
jle
negb
loopne
mov
mov
movsb
jecxz
sub
insb
cmp
pusha
or
pop
pop
add
add
and
add
dec
mov
and
cmp
mov
ss
cs
lea
testl
popa
push
mov
fcoml
mov
push
aas
cmpsb
cwtl
jne
push
sub
or
add
and
add
aad
adc
mov
ret
mov
push
lret
lods
lds
mov
push
mov
movsl
push
sub
and
pop
fsts
pop
lcall
or
int
xchg
roll
dec
pop
aaa
inc
fwait
rolb
test
fwait
stos
xor
xchg
lea
pusha
cmovns
or
enter
das
pushf
jae
push
rclb
sahf
cmpsb
add
fidivrs
scas
cmp
add
inc
aas
jle
pop
xor
jae
imul
mov
push
jne
adc
adcl
and
fcmovu
test
movb
inc
xor
adc
add
stos
adcb
mov
imul
push
add
testb
test
cmp
push
push
test
popa
or
xchg
out
ds
imul
mov
adcb
jmp
neg
xchg
or
or
jnp
loope
rcll
hlt
and
mov
fisubs
mov
and
call
pop
sahf
into
fstl
stc
aaa
pop
jno
dec
push
adc
cs
ret
pop
into
mov
pop
rcr
ja
push
mov
das
cvtdq2ps
mov
add
push
xor
push
push
cmp
sarl
cld
or
or
fs
and
push
out
insb
lahf
out
adc
cwtl
push
push
in
jbe
sti
sahf
out
jge
test
ja
adc
or
data16
pop
seto
rolb
adc
fnstcw
adc
add
push
je
sbb
jns
pushf
mov
push
pop
xor
hlt
ret
and
xchg
mov
cwtl
jo
xchg
push
mov
push
pop
cwtl
fidivs
add
test
push
fistpl
mov
jbe
adc
sbb
dec
adc
mov
or
adc
push
pop
mov
sbb
aaa
sarl
insl
mov
loope
pop
outsl
notb
cltd
push
pop
das
jg
lret
inc
add
fldcw
in
ja
add
cmp
adc
sbbl
xorb
unpckhps
pop
movlhps
shl
sub
pop
add
inc
mov
mov
sbb
push
sbb
mov
fsubrl
nopl
jns
add
call
add
and
lea
adc
adc
push
sbbl
xor
xor
test
les
testb
inc
std
or
addr16
or
add
cmp
xchg
fidivl
jo
mov
cs
or
mov
dec
add
add
sahf
scas
stc
ss
or
adc
insb
or
add
je
pop
adc
or
cmp
or
push
xchg
test
push
push
cmp
dec
pusha
test
mov
and
je
daa
or
push
int3
push
lods
scas
testb
or
je
rolb
addl
stc
xchg
push
imul
mov
arpl
inc
lods
jne
add
roll
mov
add
xchg
mov
push
dec
or
stc
cmovb
or
pop
andl
popa
fs
adc
add
xor
dec
fsubrs
add
ror
inc
or
add
lahf
cmp
lds
mov
pop
dec
sbb
sbb
dec
and
dec
mov
mov
or
adc
jbe
push
popa
mov
dec
mov
lods
add
xchg
aad
jns
dec
or
es
das
sbb
pushf
mov
sub
jmp
push
cmp
pop
jae
outsb
sbb
ljmp
jb
pop
or
and
ret
arpl
and
and
pop
mov
decl
adc
and
sub
push
insl
popa
jg
in
and
add
rcl
xchg
xor
aaa
enter
pop
inc
or
repnz
xchg
jl
inc
push
or
sub
test
and
je
out
inc
lock
jns
push
mov
or
mov
mov
lea
xchg
xchg
sub
inc
inc
ret
sub
ljmp
push
fnstenv
fsubs
push
or
sub
sub
push
pop
pop
cmpsl
shlb
repz
sub
scas
xorl
or
dec
ror
movsl
aaa
mov
xchg
outsl
cs
in
dec
xor
and
adc
pop
pop
inc
mov
loopne
adc
jb
andl
fwait
das
testl
sahf
testb
sbb
push
js
in
outsl
jl
sbb
dec
pop
loop
jmp
orb
and
icebp
imul
sbb
les
out
nop
mov
jle
push
jnp
sbb
inc
push
js
les
rcr
push
rorl
in
and
mov
push
dec
xchg
sub
dec
fnstcw
xchg
xchg
sub
jae
dec
mov
mov
adc
sub
insb
cld
mov
outsb
repz
int
in
mov
mov
pop
adc
stos
in
addr16
mov
fisttps
scas
cld
xor
sysenter
movups
and
add
das
pop
adc
mov
outsl
adc
repnz
nopl
cmpsl
test
or
xadd
test
push
scas
repz
repz
mov
cmpsl
pop
mov
and
rcr
orl
test
ret
mov
adcl
inc
jo
push
xchg
and
dec
std
das
je,pn
call
mov
adc
std
dec
repnz
int3
mov
cmpb
jecxz,pt
inc
xchg
je
orl
loope
icebp
out
adc
inc
cmp
jecxz
test
xchg
mov
rcll
and
and
shrl
inc
je
inc
sub
add
push
push
cs
loop
fs
add
roll
jbe
sub
out
lea
push
pop
inc
inc
out
dec
bound
int
or
imul
loopne
pop
and
cwtl
fdivs
daa
repz
push
clc
lcall
adc
pminub
roll
orb
sub
and
push
in
inc
dec
inc
lods
popw
cmp
jo
lods
mov
fisubrs
xor
rcll
and
sbb
jle
lods
and
push
push
jmp
mov
jnp
add
mov
andb
push
inc
inc
insl
in
in
mov
and
in
fs
mov
jns
xor
dec
les
pop
push
lret
inc
negl
jmp
pusha
xor
ret
jbe
mov
pop
leave
push
testb
or
add
iret
and
pop
imul
jnp
rorb
outsl
sysret
ud1
movsb
mov
and
or
testb
dec
rolb
cmp
test
adc
push
gs
xchg
xor
inc
add
or
lock
jp
xorb
das
dec
or
add
insl
sub
and
les
add
jge
cwtl
fstps
into
adcl
dec
inc
push
and
nop
lret
add
add
adc
popa
nop
add
in
sar
popf
pop
inc
mov
pop
es
ud1
mov
call
outsb
pop
sub
inc
cs
jb
adc
adc
jge
sub
or
loopne
pop
add
dec
cmp
dec
pop
or
ficoms
js
jno
inc
add
add
daa
lods
add
mov
xlat
or
cltd
fmuls
js
data16
and
adc
popa
dec
out
inc
push
cmp
mov
test
cmp
rolb
outsl
nop
pop
xchg
xchg
jae
inc
adc
mov
cmp
jno
neg
inc
push
jb
test
ret
das
out
or
add
sbb
cmp
stc
mov
mull
push
cmp
and
add
sbb
clc
data16
or
cmc
jno
pinsrw
sub
stos
outsl
push
shld
popa
xchg
cli
movsb
xchg
add
adc
sub
fcomi
int
sub
xor
add
out
out
shlb
pop
bound
or
shlb
sub
inc
subl
test
mov
test
pop
push
loopne
push
rorb
out
or
mov
cs
lahf
shlb
sbb
inc
imull
insl
inc
xchg
add
je
imul
je
lgs
push
push
mov
add
shlb
adc
mov
lods
movsl
add
adc
lea
cli
movsb
shll
mov
scas
incl
stos
adc
jnp
add
mov
jp
cmpb
mov
es
les
notb
dec
or
out
push
mov
stos
cltd
mov
negl
or
sub
out
inc
sbb
add
push
adc
mov
and
push
jne
loope
ja
stos
test
inc
test
rolb
cmp
or
jne
test
outsb
jb
in
pusha
push
sub
push
push
ja
or
sub
sahf
shlb
idivb
or
sbb
xor
frstor
dec
push
sub
cs
cmpsl
jbe
and
push
mov
jbe
das
out
loopne
ss
psubusw
push
dec
orb
push
jl
add
xor
add
mov
xchg
pop
out
fsubrl
dec
mov
hlt
sub
pusha
sbb
mov
cmp
dec
sub
mov
lods
jno
inc
adc
xchg
insb
dec
mov
xchg
or
push
nop
enter
pop
pop
scas
pop
inc
push
ffree
pop
out
jp
mov
mov
dec
fs
jo
sbb
push
cmp
js
mov
mov
repnz
and
jmp
psllw
sarb
or
sub
or
in
push
sub
lods
add
push
pop
xchg
xchg
or
and
fmull
and
repnz
xor
lock
das
add
inc
jb
in
jns
sub
inc
popa
pushf
ja
sbb
xor
popa
sbb
xor
xor
mov
leave
enter
jge
test
pop
sub
prefetchw
add
sarl
xor
daa
sub
and
fisubrl
mov
insl
mov
leave
fs
lcall
fisttpl
clc
push
inc
sahf
cmp
and
inc
rorl
dec
mov
sarl
pop
ss
mov
daa
cmp
imul
loopne
inc
popa
leave
push
sbbb
push
das
or
in
dec
cltd
mov
mov
mov
xchg
push
loop
daa
pop
pop
insl
pop
in
lds
mov
loopne
dec
dec
ret
mov
sbb
mov
sbb
push
dec
or
mov
and
das
ja
inc
dec
js
sbb
int3
sub
push
cld
lcall
or
int3
dec
and
daa
adc
xor
mov
bound
fildl
loope
outsl
cmp
subb
test
mov
dec
pop
shrb
outsl
leave
stos
lds
lods
adc
fwait
add
lds
sub
sbbl
adc
mov
and
sub
pop
js
jno
adc
inc
jae
sub
dec
sub
cmp
inc
pop
jae
xor
xchg
push
incb
daa
dec
and
loope
sahf
mov
faddl
sbbl
dec
fs
jb
xchg
pop
das
in
or
or
jb
pop
adc
and
jb
sbb
sub
pop
jb
sub
push
mov
add
adc
mov
cmp
repz
into
lahf
lods
and
repz
repz
sbb
iret
adcl
arpl
cs
mov
dec
movsb
addb
scas
xchg
es
sbbl
or
nop
movsl
repz
cmpsb
cwtl
sbb
out
lcall
lods
pop
bound
mov
or
pop
or
pop
out
test
jecxz
inc
dec
cmc
mov
test
and
push
dec
mov
lahf
outsb
test
cmovs
test
cld
dec
push
imul
add
add
jg
lea
add
or
ficoml
push
fistps
mov
xchg
or
andl
xorl
xchg
dec
dec
xchg
mov
rolb
inc
fadds
outsb
call
jo
jns
xchg
popl
arpl
inc
push
jne
cmp
jo
jnp
push
and
insl
fwait
or
mov
add
mov
jns
sbb
sbb
xchg
movsl
in
mov
bnd
adc
mov
and
cltd
jno
scas
push
inc
hlt
int
adc
dec
cmpsl
insl
cmp
inc
dec
add
or
pop
push
and
in
mov
data16
pop
push
outsl
jae
hlt
jae
or
call
add
lea
add
jne
sbb
or
mov
ret
aaa
adc
push
push
push
inc
dec
dec
inc
test
shll
adc
add
jnp
add
rcrb
shlb
push
loopew
cltd
loope
int
or
mov
and
insb
add
out
nop
pop
pop
add
pop
or
cmp
cmpsb
mov
dec
roll
or
cli
jae
push
or
pushf
inc
push
addr16
and
pop
insb
pop
loopne
xlat
test
dec
mov
shrl
xchg
stos
push
js
cmpsb
popl
ja
pusha
add
aam
movsl
add
out
xchg
or
or
pop
push
or
fwait
mov
incl
pop
orl
or
jo
arpl
push
fsub
inc
aaa
xor
pop
outsl
add
enter
inc
insb
outsl
and
into
bound
daa
mov
mov
das
jae
or
sets
inc
test
xchg
add
add
repnz
testl
jp
shll
cld
inc
add
or
pop
filds
jo
dec
inc
adcl
adc
aam
adc
dec
outsb
sahf
add
out
add
push
or
test
adc
mov
int
add
sbb
adc
ja
adc
inc
push
inc
mov
andl
pop
add
push
mov
add
fists
mov
adc
movsl
mov
pop
and
pop
or
cmp
or
inc
test
xor
in
or
iret
aaa
mov
lods
and
push
mov
and
ja
push
lods
or
jae
or
or
xchg
xor
mov
rorb
loopne
push
sub
add
adc
pusha
inc
xlat
iret
mov
filds
or
push
xchg
push
inc
push
jne
in
sub
cmp
ja
mov
or
adcb
or
adc
or
sub
dec
dec
inc
inc
cs
lock
mov
mov
pushf
xchg
pop
sub
cs
dec
xchg
pop
fsubrs
mov
xchg
dec
lcall
pop
mov
neg
dec
fsubrs
add
cmpsb
sub
mov
pop
cs
adc
or
or
add
and
mov
and
inc
fcoms
adc
dec
fs
adc
sbb
pop
ret
sbb
mov
outsl
je
sbb
dec
and
mov
and
sarl
adc
xchg
daa
inc
jmp
sbb
add
fstpt
lret
cmovbe
cmpb
or
sub
push
mov
push
nop
mov
pop
lock
xchg
pop
jmp
ret
cmp
sub
lods
jb
xchg
xor
pop
sbb
push
mov
pop
jmp
mov
jl
pcmpgtw
pusha
sub
cmp
push
inc
cs
and
js
xlat
fs
dec
out
insb
mov
imul
jae
sbb
sbb
movsl
sub
pop
and
out
xchg
mov
xor
mov
mov
adc
aaa
cltd
pop
popa
inc
popf
sbb
xchg
mov
pop
or
aad
test
inc
xchg
call
inc
and
loope,pn
mov
fs
push
icebp
notl
nop
xorb
inc
mov
or
dec
pop
mov
add
adc
adc
aad
jecxz
mov
lods
add
xchg
jle
cmp
lahf
imul
popl
popa
into
test
ret
dec
and
ja
cmpl
shll
loopne
imul
loopne
sbb
std
add
adc
push
push
pop
inc
int
dec
enter
jns
fsubl
and
pop
enter
pop
adc
add
pop
dec
push
inc
out
rclb
add
xor
adc
adc
imul
xor
adc
push
or
push
mov
call
lahf
stc
and
xchg
adc
xchg
add
xor
pop
jae
xor
inc
call
test
push
dec
sbb
hlt
dec
sbb
shrl
mov
mov
ja
sbb
xchg
sbb
lds
xchg
lea
or
addl
rcl
push
pusha
mov
xorl
lahf
mov
xor
adc
andb
jno
mov
mov
js
jbe
test
or
orb
adc
nop
mov
and
jne
mov
or
aaa
adc
jp
imul
jecxz
add
xchg
dec
sbb
push
adc
pop
mov
pop
mov
gs
push
orl
xchg
pushl
fistpll
aam
inc
push
loopne
das
or
add
sbb
adc
mov
xchg
js
aaa
incl
subb
lahf
data16
jl
movsb
pop
mov
pop
cs
loope
pop
in
out
pop
faddl
adc
cld
push
popf
sub
and
xchg
in
add
xor
jae
stc
js
and
fs
sbb
outsb
lea
pop
push
jns
xchg
inc
adc
stc
inc
xor
dec
or
out
pop
sub
push
adc
sub
pop
adc
sub
xchg
pusha
or
es
scas
fwait
inc
movsb
xchg
jo
xor
mov
xchg
js
push
repnz
clc
rolb
mov
adc
insl
jns
aad
dec
andb
push
daa
jge
aaa
push
and
inc
cltd
cmp
mov
mov
js
fwait
sbb
pavgw
fwait
in
sti
add
xor
in
sar
and
jns
cmpsl
add
sub
cmp
sahf
pushf
pushf
mov
int
add
add
mov
cmp
mov
movsl
xchg
stos
push
lea
dec
cli
and
sbb
or
mov
lock
xchg
addb
push
add
jp
stos
outsl
mov
outsb
fmuls
je
xchg
or
out
dec
rorb
jge
xor
data16
xchg
lds
icebp
dec
add
imul
sub
pop
or
pop
cmp
mov
ja
mov
mov
add
cltd
ljmp
push
pop
inc
push
es
or
and
add
push
rolb
dec
dec
or
mov
or
xorl
ficoms
rclb
cmpsl
or
add
inc
mov
mov
lods
adc
push
xor
push
pop
add
pop
jb
popf
push
stos
adc
pusha
inc
sarl
gs
add
add
call
jo
sub
adc
dec
pop
clc
inc
xchg
mov
leave
or
dec
dec
int
mov
mov
push
xor
push
push
add
cmp
mov
dec
lods
imulb
pop
and
nop
dec
mov
ret
or
mov
add
adc
cwtl
sbb
cltd
add
sbb
aad
pop
mov
dec
mov
pop
inc
or
xor
mov
mov
xchg
sbb
or
aas
push
and
imul
vxorps
lods
dec
pusha
xor
push
mov
mov
cmp
popf
xchg
ret
imul
add
leave
add
push
pop
push
dec
adc
mov
les
ss
inc
outsb
push
pop
nop
xchg
mov
js
js
pop
lods
and
dec
cmp
add
fadds
je
add
add
xchg
aas
push
imul
push
loope
lahf
jg
pop
xchg
jne
test
push
or
or
mov
in
and
cmp
fs
sti
movntss
and
aas
sub
push
push
rcrb
das
addr16
pop
mov
and
rolb
sub
adc
mov
stos
sbb
cmpsl
cwtl
jno
in
mov
movsb
sbb
mov
mov
fldcw
xchg
mov
pop
adc
sbb
jnp
mov
adc
and
nop
push
imul
xchg
mov
adc
xchg
push
sbb
cs
inc
dec
or
inc
or
xor
pop
push
pop
xchg
xchg
jmp
jmp
push
mov
mov
int3
repz
pop
repz
and
adc
mov
adc
pusha
adc
imul
add
and
dec
adc
aas
push
adc
mov
cmp
or
das
lock
pop
push
lds
inc
loop
ds
cmp
sub
mov
inc
and
fs
adc
dec
xchg
or
mov
jg
xchg
ret
stc
pop
push
add
mov
or
and
cmpb
por
push
adc
jle
push
sub
push
loop
jnp
cmp
add
cmpsb
call
cmpsl
aaa
xchg
test
push
pop
jg
xor
jnp
mov
in
mov
das
test
in
repz
sbb
jb
fcoml
dec
cmp
cmp
mov
icebp
sbb
mov
ret
dec
inc
sahf
aaa
lods
jne
test
fcmovb
push
add
dec
sbb
xor
testl
sub
push
addl
add
outsb
gs
and
push
cmp
inc
orb
fcoml
lahf
popl
popa
mov
xlat
movsb
sbb
sub
insl
adc
jnp
xlat
push
push
push
or
stos
inc
adc
cmp
mov
jge
cmp
shrb
popf
rolb
es
fldenv
or
imul
scas
xor
loop
add
insl
push
or
pop
or
add
inc
ljmp
xchg
je
mov
pushl
lea
push
jae
add
jno
insl
inc
xchg
push
aas
ja
ret
lds
jbe
mov
push
inc
push
or
lret
inc
out
subb
inc
scas
cmp
adc
cwtl
outsb
mov
fildl
pushf
je
outsl
in
inc
stos
pusha
pop
fnstenv
push
insl
imul
or
ffreep
xor
insb
ror
push
push
dec
xorl
cwtl
gs
push
adcl
mov
mov
xor
xchg
mov
adc
fcoms
inc
sbb
mov
and
mov
or
push
or
adc
into
pop
imul
jmp
clc
inc
sbb
stc
mov
inc
imul
int3
shrb
dec
adc
xchg
push
aaa
test
adc
sbb
test
adc
pop
dec
aam
scas
ja
and
push
mov
scas
daa
pop
inc
pop
sbb
sbb
ret
or
js
aas
dec
test
jnp
add
mov
adc
mov
andps
bound
sbb
mov
in
and
je
dec
in
or
flds
adc
dec
and
test
and
adc
and
adc
xchg
test
inc
insb
pop
scas
sub
and
outsl
int
push
and
sbb
js
ret
fs
out
mov
mov
and
mov
add
inc
or
out
xor
flds
pop
ja
mov
mov
sub
mov
sti
push
push
mov
out
push
inc
nopl
nop
daa
or
inc
jo
and
inc
adc
nop
bswap
cwtl
mov
scas
mov
and
movsl
sub
aaa
add
aad
and
dec
rorl
icebp
or
push
jne
jo
aaa
popf
test
mov
insl
idivb
push
sbb
xchg
cwtl
imul
aas
pop
inc
lea
stos
add
mov
add
outsb
jnp
faddl
mov
cs
pop
cmc
rsqrtps
add
push
sbb
loopne
out
cmp
add
sbb
add
mov
inc
lret
xor
stc
decl
pushf
fmull
fdivr
sub
inc
mov
or
xor
adc
inc
jnp
pop
mov
add
cltd
cld
mov
push
jno
vmwrite
js
les
inc
loopne
pop
dec
xor
or
vpunpcklwd
push
dec
push
out
xchg
push
adc
add
les
sbb
and
ja
and
xchg
insl
dec
js
sub
jl
sarb
adc
jecxz
push
inc
and
cmp
push
xchg
pop
sbb
dec
mov
xor
shl
inc
jge
les
or
or
ds
imul
shll
filds
adc
cmp
inc
loopne
jo
ds
dec
xorl
inc
adc
adc
call
dec
or
add
adc
in
insb
test
scas
push
mov
or
addr16
or
jno
fiadds
rcrl
jo
mov
xor
push
jo
dec
xor
enter
dec
je
inc
xchg
xorl
xlat
cs
dec
pusha
inc
xor
xor
mov
xor
and
adc
and
addl
pop
jno
add
in
xlat
push
stc
and
addb
rorb
jb
jno
cmp
test
inc
test
les
mov
xchg
dec
or
int
mov
jbe
iret
mov
mov
mov
imul
pop
ja
mov
push
daa
cmp
test
testl
sub
pop
cmpsb
adc
sti
mov
out
inc
int
addr16
lea
shlb
out
jns
mov
pop
add
inc
xchg
add
loopne
xchg
add
add
mov
imulb
movsl
add
push
lcall
mov
movsl
xor
pop
mov
lahf
push
mov
ret
or
push
xor
outsl
jo
push
scas
jnp
adc
fistpll
ja
pop
clc
popf
icebp
imul
jae
xor
push
mov
adc
cmp
add
or
out
adc
bound
bound
push
in
and
xchg
jno
lods
adc
divl
cmp
ja
jns
or
dec
mov
imul
push
and
jo
push
mov
clc
sub
jbe
mov
sbb
test
cli
push
xlat
mov
dec
mov
jns
add
out
int3
mov
dec
jl
arpl
xchg
pop
xor
and
in
adc
adc
fisttps
add
cs
addr16
orl
mov
jno
cmpsb
jecxz
adc
mov
mov
popl
xchg
dec
in
or
xor
insl
jb
outsl
daa
rolb
adc
jns
in
sub
add
ja
andl
cltd
mov
scas
sbb
inc
int
dec
addb
mov
ja
inc
mov
sahf
out
ficoml
int3
push
pop
xchg
je
data16
push
sub
inc
mov
add
adc
cmp
loope
push
shlb
sub
pop
es
lcall
fwait
call
sahf
lock
je
insb
push
int3
push
sub
int3
mov
xlat
adc
mov
jne
outsl
add
add
enter
inc
push
popa
loopew
sbb
dec
lret
adc
xchg
ss
pop
add
imul
rcrb
std
int
and
and
mov
add
test
add
aaa
push
or
leave
cmpsl
fimuls
mov
addl
pushl
xchg
jg
nop
push
jb
jnp
lcall
xchg
fdivrl
rcrl
and
paddd
pop
inc
fisubs
icebp
incl
or
dec
js
nop
jo
stos
movd
js
scas
out
and
jmp
sti
insl
addl
idiv
idiv
cmc
ljmp
mov
mov
push
iret
repz
adc
pusha
xor
cmp
pop
idivl
cld
inc
pushf
push
movsb
mov
negl
push
add
cmp
push
mov
xor
out
add
dec
add
pop
and
pop
dec
jp
cmp
mov
scas
and
xchg
mov
fsubrs
pusha
push
test
push
enter
cmp
xchg
packssdw
push
lock
lret
iret
sar
mov
jp
mov
ja
jns
add
mov
push
mov
push
sbb
add
cmp
fwait
add
push
lods
dec
inc
or
xchg
shll
xchg
mov
stos
dec
ret
scas
mov
out
xor
adc
in
push
push
inc
inc
sbb
and
push
or
push
fadd
mov
or
dec
test
mov
ficomps
sarl
es
test
inc
jp
leave
jb
bound
sub
dec
les
aas
push
insl
add
xor
xor
or
rolb
and
cmp
dec
inc
hlt
aaa
or
xor
and
cmp
dec
lcallw
or
sbb
dec
adc
test
adc
clc
andb
jo
lahf
scas
pop
and
xchg
or
ret
xor
add
add
push
or
sub
aaa
fucom
or
sbb
lock
push
sbb
or
xchg
les
ret
mov
add
push
pop
enter
aaa
adc
in
push
sbb
add
jbe
push
dec
pop
sbb
push
sbb
push
pusha
rcrb
jb
push
cwtl
or
mov
push
mov
in
jge
sub
daa
or
dec
aam
mov
xor
outsb
scas
push
enter
sbb
sbb
sahf
pop
cmp
cwtl
mov
iret
sarl
add
push
es
add
pop
xchg
cwtl
nop
or
push
popl
dec
sub
or
add
and
vmmcall
mov
inc
and
cmpsl
sub
outsb
inc
imul
or
rcll
pushf
sbb
jle
sbbb
dec
push
or
notl
ds
loopne
icebp
es
push
das
push
jnp
aaa
jae
pop
pop
sub
mov
adc
hlt
sub
or
jae
enter
or
les
mov
mov
fcompl
enter
mov
and
mov
roll
pop
lock
and
hlt
inc
leave
in
roll
push
xor
repz
iret
sub
push
dec
cmp
clc
add
dec
mov
or
jmp
lret
popl
mov
cld
adc
cld
lret
jmp
lret
popa
xadd
add
ss
mov
add
or
ss
ja
je
mov
orl
insl
clc
adc
jo
or
or
shl
adc
push
test
push
dec
mov
ret
add
data16
ja
jno
xor
cmp
inc
rorl
mov
call
dec
jb
and
out
mov
jp
stos
mov
jg
sub
addb
pop
loope
cs
push
fistpl
stc
pop
int3
xor
adc
inc
movsl
push
std
mov
cmp
out
pop
leave
xlat
shr
push
dec
test
loopne
or
or
out
sub
popa
jo
or
lcall
mov
xchg
adc
pop
ja
sbb
aas
mov
mov
int
imul
mov
push
add
adc
or
push
push
arpl
adc
dec
loope
push
adc
sbb
adc
dec
jmp
push
cmp
sbb
int
jne
or
cli
scas
push
iret
popa
lods
fwait
add
sbb
cmp
aas
dec
popf
mov
cmpl
jne
add
mov
outsl
filds
add
daa
mov
push
push
add
pop
and
fsubs
jb
sub
out
fldcw
cmpsl
roll
sub
dec
or
push
stos
jg
push
es
fiadds
cld
add
pop
iret
pop
orl
xor
stc
and
jns
jb
mov
cmp
or
or
cmp
add
jns
adc
adc
dec
movsl
push
sbb
js
jns
insb
fisubrs
test
or
das
sub
or
push
insl
dec
outsb
lahf
add
xor
add
mov
or
or
add
outsl
add
mov
lods
push
loope
dec
aam
xor
add
fsubs
cmp
cmovo
add
insb
or
or
mov
sbb
add
ds
mov
cmpsb
imul
gs
cmp
outsb
jb
xorb
push
xorb
insb
xor
mov
push
das
ljmp
loopne
mov
test
sarb
mov
push
nop
mov
mov
das
js
test
mov
adc
repnz
add
outsb
mov
jge
sbb
sub
call
cmovl
ret
adc
xor
leave
ret
std
aaa
pop
pop
loope
pushf
or
jae
mov
or
in
lds
and
cltd
dec
xlat
push
into
stos
out
fcmovne
popf
add
xor
call
outsl
and
add
jb
cmp
outsl
hlt
loope
cmp
jae
gs
sub
insb
enter
jnp
add
in
or
pop
and
or
add
adcb
mov
jecxz
mov
leave
cwtl
leave
xlat
ljmp
shr
es
loop
outsb
jmp
fimuls
shlb
or
fists
adc
lods
adc
sub
inc
add
enter
fisttps
nop
out
loope
or
mov
test
fidivl
orb
aaa
nop
cmp
frstor
les
inc
pop
clc
xchg
mov
jg
pushf
cmp
jo
dec
into
je
mov
fcomp
adc
lret
nop
cli
pushf
xchg
in
es
mov
dec
popa
and
mov
rolb
lds
pop
sub
aas
aaa
sub
pop
cmp
lcall
and
mulb
rcrl
fcomp
cli
jne
xchg
loope
into
fldenv
pop
divb
divl
jmp
sbb
adc
pop
stos
gs
add
pop
fildll
mov
stc
lcall
mov
pop
shrb
loope
je
mov
mov
add
ret
jg
addl
push
add
imul
inc
movsb
pcmpgtb
xchg
add
xor
sub
mov
pop
sbb
and
or
rcl
mov
fdivl
je
xchg
test
fnstenv
adc
lret
cmp
pop
pop
dec
xor
adc
fists
cmp
push
into
decl
or
incl
xchg
or
xchg
sub
outsl
mov
ss
push
add
mov
dec
push
or
pop
or
push
inc
cwtl
adc
push
dec
lds
mov
mov
add
xor
hlt
cld
sub
aad
cmp
jl
jne
movsb
enter
rcl
mov
daa
jmp
adcb
pop
outsl
adc
xor
rcll
push
mov
add
sub
es
ja
and
add
pop
mov
mov
sbb
and
mov
sbb
add
mov
add
xchg
add
mov
adc
sub
lock
hlt
sarl
cmp
fcoml
xchg
jo
adcl
sub
clc
sbb
push
cmp
jecxz
loope
jo
pop
and
ss
xor
sbb
aad
add
sub
xlat
push
xchg
cmpsb
cltd
adc
loopne
testl
int3
pusha
loop
cmp
lods
pusha
rorl
inc
mov
adc
stos
xor
sub
cmp
and
mov
push
js
inc
xor
or
and
jle
filds
in
inc
pop
movsl
loopne
adc
nop
scas
inc
and
add
xor
or
push
js
inc
xor
aad
mov
or
inc
adc
jecxz
mov
inc
lahf
jg
xchg
pop
sbb
add
inc
adc
sub
and
pushf
or
cmp
add
adc
lock
outsl
rcr
sub
inc
adc
sub
push
fldl
xor
jbe
cmpsb
dec
dec
ror
push
and
mov
in
and
aas
and
cmp
lret
call
jbe
frstor
out
sbb
lods
xchg
movsb
mov
cmpsb
cmpsb
inc
ljmp
sbb
jmp
ret
push
jne
sarb
push
or
lock
pop
jp
xor
jmp
addr16
cmp
or
enter
lcall
dec
xor
push
loopne
shlb
mov
lock
in
add
call
movsl
jne
push
sbb
jo
cltd
sbbl
sbb
push
inc
push
scas
mov
dec
insb
mov
pop
pop
call
ja
cmp
mov
rcl
lock
mov
inc
arpl
mov
add
and
or
inc
ja
xor
movsb
leave
mov
call
decl
jne
dec
jnp
iret
nop
jns
pusha
pop
adc
or
iret
imul
inc
daa
lret
or
push
lret
out
inc
inc
cmpsb
mov
mov
fbld
idivb
and
int
mov
jmp
lahf
inc
mov
fwait
shl
stos
loopne
push
push
and
cli
cmpl
adc
ret
dec
ffree
xchg
fisubrs
aas
mov
sub
lods
sahf
imul
dec
sub
loop
mov
lock
loop
sarb
call
loopne
adc
es
dec
stos
outsb
mov
adc
mov
rcr
scas
mov
or
js
jno
pusha
rolb
mov
xchg
sub
sub
pop
loop
xchg
in
outsb
sub
or
jb
mov
cs
inc
add
jae
push
or
psllw
or
mov
hlt
test
loope
sub
push
xlat
cmp
dec
shr
mov
iret
lret
adc
add
ret
adc
or
add
test
jg
xlat
xchg
mov
loop
pop
mov
mov
mov
add
pop
enter
xorb
xlat
int3
mov
imul
cmc
dec
cmc
jp
mov
mov
stos
out
scas
inc
bound
sahf
add
rcll
rorb
pop
or
outsl
inc
jo
cmp
clc
cld
jb
clc
adc
in
jecxz
sbb
sbb
mov
sbbb
xchg
rcll
push
or
adc
lock
pop
pop
ud1
add
aam
iret
je
shrb
in
xchg
push
repnz
and
in
and
dec
push
cmp
fxch
hlt
xchg
jne
push
mov
lahf
cmpsb
add
add
cmp
cmpb
jecxz
enter
popf
sbb
add
push
daa
mov
push
adc
mov
rol
xlat
mov
and
inc
loopne
mov
lret
adc
inc
and
mov
or
add
adc
cmp
mov
add
xchg
inc
pop
addl
inc
testl
or
cmc
add
sub
xchg
pop
inc
rolb
jmp
orl
adc
or
dec
add
or
or
int
or
ja
pop
out
adc
xchg
push
and
lahf
cmp
lods
out
pop
xlat
popa
pop
mov
std
cld
cmp
push
stc
add
es
sarl
ret
loopne
js
cmp
xor
or
rorl
pop
aad
cltd
fildll
jecxz
js
call
stos
mov
dec
and
adcb
push
and
out
cmpsb
mov
fildll
and
pop
mov
pop
daa
sub
arpl
dec
cld
mov
adc
mov
jmp
outsl
loope
and
push
sbb
cmp
scas
xchg
inc
lea
adc
xor
or
mov
or
js
jmp
jge
sub
cmpsl
out
xchg
jmp
adc
mov
add
adc
popa
mov
push
and
shrb
je
shl
rcl
fmuls
mov
lds
sbb
pop
nop
les
call
mov
or
xor
ja
xchg
addr16
adc
push
jns
lret
sbb
cmp
imul
jle
mov
test
scas
dec
push
xor
push
lret
mov
sbb
lock
sbbl
adc
sub
jae
lds
mov
xor
cmpsl
xchg
cmp
add
fptan
or
nop
add
in
sbbb
xchg
pop
bound
pop
add
or
adc
mov
mov
lret
adcb
pop
lods
outsl
loope
add
mov
aam
jg
push
or
mov
jne
and
add
mov
xchg
pop
sub
cmp
call
jo
sarb
pop
lcall
xchg
ss
or
cmpsb
fdivrl
or
dec
insb
icebp
add
pop
movsl
hlt
or
loop
cmpl
jne
adc
push
push
repnz
and
outsb
mov
and
lods
or
xchg
testb
add
fnstcw
jp
jbe
test
rclb
dec
arpl
cli
push
mov
dec
roll
mov
ret
inc
sub
in
mov
mov
loopne
outsl
dec
push
addr16
movsb
adc
enter
push
adc
jle
andb
sbb
je
nop
lea
in
push
sbb
xchg
xchg
inc
inc
adc
push
or
imul
pop
rolb
adc
mov
mov
test
cmp
int3
cmp
cwtl
cmp
fstpl
sarl
js
arpl
in
iret
lret
inc
mov
lods
push
hlt
lods
xchg
jno
add
or
ja
pushf
push
bound
adc
and
sbb
cmp
jp
fidivrl
push
add
test
aaa
jne
jp
rorl
xchg
arpl
js
in
cmp
clc
xor
or
add
enter
movsb
adc
mov
pop
jae
sbb
or
ret
push
push
pop
rcrb
cmp
incl
pop
lods
sbb
mov
add
ret
inc
ret
mov
cwtl
adc
shl
das
mov
mov
lss
out
das
pop
ret
lods
xchg
xor
sub
cmpsb
add
lea
or
roll
les
xchg
roll
ret
add
ja
xchg
fidivl
shrb
cmp
jns
xor
jbe
and
pop
jmp
push
imul
movhps
sbb
sbb
and
scas
out
dec
repz
and
push
xor
scas
xchg
roll
adc
add
pop
xor
addb
insb
add
lret
add
fwait
test
sar
jmp
and
pusha
adc
mov
dec
hlt
ror
scas
lods
xchg
rorb
outsb
jo
shll
inc
inc
cmp
je
mov
pop
js
or
sub
dec
data16
pop
shr
sbb
bound
imul
je
adc
jne
ss
inc
insb
push
aas
mov
jae
mov
jge
jo
and
movl
push
fcom
jle
mov
ret
jmp
fsubr
jb
xlat
adcb
cmp
je
std
shlb
cmp
call
clc
lock
and
cld
rcl
jo
sub
push
test
mov
out
sub
xchg
jno
cmp
je
sub
enter
sbb
jl
ret
pusha
sbb
adc
cmp
push
loopne
adc
inc
cmp
popa
xchg
dec
mov
es
out
aas
cmpsb
test
dec
je
xor
xor
pop
movsl
jg
movsb
pop
or
loopne
cmp
xor
in
scas
sub
sbb
mov
cs
cmp
dec
testl
insb
scas
mov
ret
inc
adc
ret
pop
add
add
stos
mov
call
push
lea
xchg
pop
fnstcw
mov
es
add
add
mov
popa
xor
jo
pusha
xchg
pop
call
inc
pop
mov
jle
adc
push
dec
adc
cld
mov
dec
xchg
in
mov
mov
xor
in
xor
sub
jg
dec
jae
les
lock
add
add
pop
adc
add
or
xchg
jge
cmp
jne
mov
mov
bound
dec
mov
or
shlb
adc
addr16
bound
mov
dec
inc
ss
add
addb
nop
add
adc
imul
or
ljmp
mov
ljmp
push
je
cmp
mov
arpl
cld
cltd
cwtl
add
inc
dec
cmp
sbb
sarb
adc
imul
pop
hlt
jl
inc
xchg
pusha
inc
hlt
or
or
nop
hlt
push
sub
push
mov
cwtl
nop
xchg
mov
push
lods
xorb
outsb
clc
push
and
jmp
xchg
fdivp
xchg
mov
ret
adc
ja
dec
popf
cmp
push
fistl
hlt
push
out
imul
mov
loopne
or
subl
pop
jle
filds
hlt
push
mov
decl
jne
add
addb
pop
sbb
mov
jle
inc
jne
sub
mov
out
jne
inc
mov
repz
adc
mov
jl
iret
mov
imul
inc
jb
pop
test
aam
jecxz
cmc
pop
cs
push
cmp
divps
jo
sub
xorl
rorl
inc
xor
sbb
dec
std
pop
or
sub
clc
jg
addb
dec
or
dec
add
and
add
inc
and
push
sub
dec
aaa
fld
movsb
stos
and
divb
or
xor
bound
jnp
jmp
sub
push
or
test
cmp
jmp
pop
testl
icebp
bndldx
push
dec
add
sub
cld
cmp
add
inc
arpl
or
xchg
xchg
or
pop
jg
cmpsb
divl
xchg
lods
xor
testl
daa
ret
or
cmp
or
mov
push
lret
adc
push
and
adc
aaa
sbb
and
mov
adc
or
sbb
inc
loopne
and
pop
insb
push
lret
daa
mov
add
test
idivb
scas
insl
mov
mov
cmc
sar
mov
add
sbb
or
outsl
pop
call
out
je
fwait
xlat
add
add
cmp
or
es
call
vpunpckhbw
sbb
adc
mov
push
ret
adc
sbb
adc
cmpsb
test
and
testb
inc
or
je
stos
adc
btr
clc
mov
aad
cli
into
sbb
push
inc
ret
js
lods
jmp
xor
fmuls
faddl
test
mov
inc
cmp
je
sbb
xchg
cmp
ja
mov
sbb
bt
jb
ds
insb
pop
test
ss
ret
loope
loope
adc
push
inc
cmp
jne
inc
add
les
add
bound
add
in
xchg
xchg
push
mov
aas
add
cld
push
dec
xchg
jo
xchg
call
push
or
push
shlb
ds
mov
adc
sbb
out
inc
call
addr16
lods
in
arpl
xchg
pusha
inc
pop
lahf
cwtl
push
call
or
add
test
xchg
mov
xchg
xlat
das
ret
push
ret
mov
cwtl
xchg
ss
stos
cmp
sbb
add
or
out
outsb
pop
test
aaa
repz
ss
sub
sbbl
mov
push
stc
or
jge
daa
mov
loope
shll
mov
test
stos
xor
pop
mov
push
jno
xor
dec
pop
mov
icebp
cmpl
test
sub
lods
movsl
mov
inc
testb
inc
test
je
addr16
push
pop
sbbb
jmp
pop
push
adc
jg
cmp
in
sbb
adcb
adc
xchg
dec
xor
rorb
or
sbb
jo
insl
adc
sbb
add
xlat
daa
mov
or
out
push
pop
bound
popa
cmp
lds
push
addr16
in
ficoml
cmpl
out
sbb
pop
mov
jne
push
out
mov
lea
or
push
and
xlat
ffreep
xor
pop
aaa
in
in
xor
addb
daa
cmp
cwtl
pop
dec
pop
scas
test
xchg
rorb
test
in
lods
add
mov
stos
mov
sub
mov
fs
sahf
in
pop
mov
and
sbb
xchg
add
xchg
cmp
push
inc
sbb
inc
test
repnz
scas
add
mov
pop
dec
rcrb
outsb
pop
mov
push
fidivrl
mov
fwait
pop
jb
addr16
lock
cs
das
pop
ds
jle
sbb
outsb
adc
lcall
or
sbb
in
adc
movb
cmp
cmp
loopne
push
jns
xorl
repz
pop
sbb
inc
mov
ljmp
push
adc
dec
sub
and
inc
imull
jl
push
out
inc
pop
cmc
or
adc
push
vucomisd
and
or
call
push
pop
outsb
sbb
jecxz
push
roll
js
jle
addr16
jl
addr16
add
sbb
notb
andl
sub
xchg
mov
or
mov
push
push
mov
addr16
negb
mov
je
jl
xchg
and
mov
ljmp
dec
or
lods
imul
pop
pop
leave
add
dec
jg
inc
inc
clc
mov
clc
or
pushf
in
rorb
pop
push
movsb
push
clc
test
add
mov
pop
adc
dec
dec
push
xchg
jae
imul
add
adc
sbb
loope
mov
and
cwtl
insb
adc
dec
imul
cmp
mov
xchg
sbb
and
subb
dec
adc
fsubl
mov
hlt
sub
fisubl
push
js
jae
dec
inc
push
add
inc
pop
rcr
dec
loopne
mov
jne
sub
pop
mov
fcmovb
pop
cld
cmp
sbb
ret
sub
mov
loope
pop
mov
inc
dec
jne
jnp
sbbl
std
loopne
dec
add
push
ljmp
cmp
push
scas
push
push
adc
add
adc
mov
arpl
mov
adc
ljmp
mov
shll
adc
mov
iret
add
push
mov
jmp
pushf
dec
push
jp
cmp
insl
das
xor
pop
adc
sarl
inc
cmp
pop
ss
jb
aad
push
and
call
pop
cld
sub
pop
ret
inc
lahf
std
into
in
push
jecxz
push
js
add
mov
and
rolb
or
sub
jb
lahf
lock
or
movsl
xchg
ja
and
cmp
hlt
hlt
sub
push
cmc
hlt
sub
clc
add
sub
popa
clc
pop
idivl
outsl
fs
enter
addr16
inc
cmp
adc
hlt
cmp
xor
pusha
subl
ret
lods
pop
mov
mov
add
mov
push
cld
xchg
test
movzbl
jp
out
test
mov
adc
sbb
sub
adc
or
ret
imul
shl
jo
sbb
adc
xchg
andb
fmuls
adc
push
mov
icebp
and
imulb
pop
mov
dec
testl
rcl
mov
adc
sbb
test
ret
and
ret
adc
jle
lahf
clc
push
push
xlat
cld
adc
divb
push
jge
mov
pop
aas
and
aas
push
cmpl
or
push
mov
insl
xchg
cs
punpckhwd
inc
dec
iret
adc
jno
mov
cmp
popf
xor
lock
mov
mov
dec
imul
roll
xchg
or
rcrb
nop
cmp
pop
mov
shrb
add
and
mov
clc
imul
mov
lea
push
mov
mov
jg
xor
or
mov
imul
cld
roll
xor
or
sbb
adc
lock
movsb
cltd
sbb
and
aad
and
jo
shl
lock
and
pop
test
test
rcrl
addb
push
pop
in
and
jecxz
sub
inc
fidivl
mov
and
mov
cwtl
insl
mov
push
mov
mov
les
dec
dec
pop
lock
inc
fcomps
js
jl
push
shll
int3
cmp
or
or
push
sbb
add
dec
xchg
icebp
cmpl
imul
or
wrmsr
lock
enter
sub
les
sahf
add
mov
mov
movsb
mov
pop
jns
mov
inc
ds
add
and
icebp
sub
imul
fcoms
jne
rolb
sbb
mov
pop
mov
dec
pop
mov
push
icebp
add
mov
das
orb
enter
push
data16
xlat
xchg
push
shlb
mov
xchg
push
je
xchg
or
push
xchg
cmpb
js
xchg
xor
adc
jle
sbb
mov
inc
mov
mov
incl
adc
mov
xor
js
xor
dec
js
fwait
je
cmp
mov
jecxz
sbb
mov
je
sub
sbb
xor
mov
in
or
inc
jb
jo
add
xchg
pop
dec
sbb
dec
push
push
and
cwtl
inc
loopne
and
gs
or
jae
fwait
nop
or
xchg
out
inc
cmp
jae
in
fcomps
push
call
mov
es
inc
int3
in
fsubl
hlt
iret
stos
inc
sub
aad
pop
imul
arpl
add
add
and
xor
mov
scas
inc
dec
call
pop
pop
mov
fucompp
movsb
repz
mov
lods
or
andl
push
call
pop
fcmovnb
cld
loopne
enter
cmp
call
xchg
test
and
dec
fsubr
mov
inc
cmpsb
xorl
mov
and
es
clc
lock
cmpsb
loope
cmp
xor
or
and
adcl
adc
in
pusha
and
sub
and
popa
push
cltd
dec
bound
add
and
inc
lret
inc
xchg
dec
in
in
imulb
pop
mov
rcr
enter
cmp
mov
test
les
push
pinsrw
sbb
ss
pop
inc
or
push
adc
incl
pop
xchg
add
out
data16
stos
mov
das
jo
into
mov
mov
cmp
push
sbb
test
lret
jae
inc
cmp
cli
xor
pop
fisttpll
adc
mov
adc
in
popf
xor
lods
popa
jb
and
mov
cmpsl
or
push
out
rcrb
xchg
test
mov
int
adc
push
pop
xlat
ss
loopne
mov
adc
add
popa
add
cmp
pop
cmpb
xor
jo
jo
adc
sub
addr16
dec
push
inc
or
mov
sub
dec
and
adc
push
dec
inc
add
push
mov
pop
jmp
mov
inc
and
shl
ret
loop
pop
dec
push
jne
jnp
cmp
and
xchg
pop
fsubr
mov
fstl
push
lahf
cli
mov
adc
or
cmp
mov
hlt
push
dec
cwtl
mov
imul
inc
ficomps
push
and
jo
or
pop
or
daa
xchg
mov
pop
ljmp
push
xor
xchg
or
outsb
adc
outsl
pop
and
pop
test
test
inc
adc
mov
mov
adc
ret
xor
push
nop
test
mov
ljmp
adc
mov
cwtl
fcompl
icebp
add
daa
cld
shl
sbb
xor
hlt
xor
xor
add
mov
or
push
mov
call
movsb
inc
cwtl
sub
sbb
shrl
cmp
adc
lds
lea
stc
das
jno
sbb
and
aaa
fbld
js
add
outsb
mov
dec
enter
xchg
pop
or
xchg
jnp
rorb
sub
jne
enter
les
daa
add
xor
nop
push
subb
cmp
or
and
inc
je
repz
xor
imul
and
test
add
mov
enter
or
add
jmp
aam
sub
in
inc
popa
sub
call
testb
stc
stos
cli
ret
shrb
mov
mov
jne
sbb
pop
and
and
mov
shr
pop
jnp
stc
inc
add
sub
add
xor
out
scas
push
pushf
das
adc
xchg
pop
pusha
pop
add
loope
movsl
punpckhwd
dec
fstl
js
xor
int
sub
or
lea
inc
ret
push
pusha
push
movsl
sub
rolb
gs
jns
test
movb
lds
push
addr16
ficoml
idivb
and
or
or
insl
pop
dec
clc
jne
sbb
nop
pop
sti
pop
imul
jmp
mov
cmpl
jne
ja
dec
add
outsl
and
mov
in
inc
js
test
jne
mov
sbb
xor
sbb
shr
adc
dec
fnstenv
adc
xorb
inc
or
loope
das
inc
jo
inc
or
adc
sbb
leave
cmp
add
inc
add
add
rolb
adc
inc
and
idivb
js
push
xchg
inc
adc
das
add
mov
cld
sub
call
aad
sub
mov
cmp
jne
sub
orb
mov
test
add
add
cmp
push
dec
or
repnz
stos
push
xchg
or
push
inc
add
add
cmp
adc
add
pop
orb
adc
or
es
or
lret
pushf
push
add
cmp
or
push
push
push
dec
iret
in
add
aas
fwait
scas
pop
sub
xor
cmp
rolb
mov
inc
lcall
dec
adc
xor
or
and
sub
push
nop
mov
and
mov
lods
nop
pop
mov
xor
mov
das
roll
pushf
jl
sbb
sub
or
add
add
mov
fidivrs
mov
adc
cwtl
jnp
aad
mov
ret
adc
sub
or
dec
ror
xor
rcrb
mov
aaa
cmp
test
and
aas
in
xor
inc
jo
jno
xchg
scas
dec
dec
jae
jo
add
inc
and
and
cmovno
stos
mov
mov
nop
daa
xchg
and
xor
lods
sbb
lea
outsb
ret
jno
repnz
ret
xchg
sbb
dec
adc
or
and
subl
xor
inc
xor
jnp
and
dec
add
pop
or
mov
andl
mov
push
rcrb
sbb
dec
add
pop
xor
sbb
mov
or
hlt
sbb
add
dec
fwait
cmpb
push
pop
or
jmp
mov
je
pusha
mov
or
jge
sti
cmp
sbb
imul
cmpb
and
xchg
jle
mov
popf
jecxz
xor
rorb
ss
add
pop
xor
or
ljmp
mov
scas
loope
bound
faddl
ret
lock
and
bnd
repnz
add
mov
xor
inc
pop
fbld
in
std
clc
xor
dec
mov
daa
scas
roll
push
sbb
fs
fs
mov
mov
out
sub
test
and
loopne
cmp
cmpsl
or
dec
hlt
xchg
adc
js
push
bnd
push
js
mov
mov
lret
adc
or
mov
sbbb
cmp
xchg
xchg
xchg
mov
sub
lds
rorl
ss
roll
sbb
adc
add
dec
lcall
and
daa
aaa
push
xchg
fldt
or
mov
or
or
sbb
sbb
mov
adc
inc
sbb
jl
and
jb
pop
and
adc
sbbb
inc
test
sub
mov
xchg
out
mov
ret
and
aam
es
mov
xchg
xor
push
mov
cli
imul
xor
mov
dec
mov
imul
sub
add
push
stos
dec
and
loopne
inc
rolb
nop
cmpb
push
stc
enter
mov
addr16
pop
or
test
adc
push
sub
outsl
aas
in
je
mov
rcll
notl
pop
mov
adc
and
sub
jecxz
push
sub
xchg
inc
loop
pop
mov
sub
out
jle
mov
lock
scas
sbb
sub
pushl
cmp
pop
subb
sbb
xor
mov
lret
cwtl
or
aam
jge
sub
imul
pop
xorb
adc
inc
inc
lret
add
jbe
and
mov
adc
pushf
movsb
enter
movsb
push
jo
jecxz
push
lret
cmpsl
div
push
sub
and
add
ret
mov
frstor
mov
loopne
cmp
lcall
loopne
test
aad
cld
loopne
imul
sbb
add
pop
inc
dec
repnz
mov
sbb
hlt
push
and
add
insb
pop
lods
add
insb
inc
cmp
add
aam
push
pushf
out
shr
sub
addl
rorb
cmp
shll
cmpsb
test
out
leave
add
rclb
sub
pop
inc
mov
mov
and
xchg
lret
xchg
or
or
push
ss
sbb
mov
xchg
cmp
jnp
test
pop
sbb
adc
inc
push
or
jecxz
daa
leave
mov
js
aam
or
sbb
mov
adc
call
mov
cmp
inc
jbe
add
push
nop
mov
jg
loopne
stc
adc
adc
sub
push
mov
mov
adc
scas
push
xlat
in
es
lods
sti
xchg
cmpsl
jb
call
mov
pop
inc
sbb
push
mov
add
inc
xor
iret
mov
fcoml
cmpsb
or
xchg
aam
mov
popf
rcrb
or
sbb
mov
out
rcrb
fs
movsl
and
add
fwait
fwait
clc
cmp
mov
inc
lret
mov
cmp
aaa
jg
nop
lock
dec
test
xchg
push
or
push
and
push
mov
push
cmpsb
sbb
faddl
push
sbb
mov
dec
dec
inc
pushf
cmpsl
daa
sub
and
and
inc
mov
push
loop
and
bound
fldl
xchg
cmp
adc
xchg
sub
lods
or
sbb
inc
dec
or
iret
xor
leave
add
into
add
or
in
add
sub
sub
orl
cltd
nop
inc
fidivl
enter
enter
fdivl
pusha
sbb
arpl
shrb
lret
xor
sub
mov
mov
inc
push
orl
cmc
ret
and
cmpsb
sub
adc
push
and
and
js
outsl
adc
or
loopne
stos
sbbb
or
testl
pop
adc
xchg
cmp
add
push
xchg
jae
jbe
sbbw
and
sub
out
dec
pusha
mov
jmp
pushf
or
or
mov
mov
fbstp
mov
sbb
inc
xlat
sbb
popf
add
bound
xor
mov
hlt
ficoms
jns
or
dec
aam
mov
dec
or
pop
movnti
out
test
lret
lock
or
inc
mov
je
xchg
mov
dec
orb
cmp
and
and
mov
cwtl
test
cmp
loopne
adc
outsl
popf
jmpw
adc
lret
or
outsl
push
out
jmp
test
test
inc
ret
adc
push
jo
add
lods
shrb
or
ljmp
cmp
inc
sbb
jnp
or
ret
mov
xchg
and
or
test
imul
lcall
lea
mov
mov
push
jl
das
add
push
adc
inc
test
inc
adc
out
jle,pt
inc
hlt
mov
or
imul
lcall
sbb
aad
sub
lea
add
inc
push
rolb
sahf
loopne
es
mov
sbb
rolb
out
mov
stc
jne
sub
cmp
push
pop
pop
imul
inc
mov
dec
clc
or
loopne
xlat
repz
sbb
mov
mov
ljmp
mov
jle
daa
sbb
dec
lods
testl
push
addl
je
xor
cmovl
cltd
sub
dec
mov
sbb
add
xchg
lock
lock
add
mov
addl
add
cltd
cwtl
xchg
enter
add
and
mov
mov
imull
cmp
jp
popa
cld
inc
xchg
jl
incl
sbb
pop
add
xor
xor
mov
mov
ja
inc
mov
int3
dec
stos
mov
icebp
ret
push
xor
ljmp
push
pop
in
dec
ja
pop
stos
shlb
sbb
xorb
or
adc
pop
mov
ret
loopne
add
in
imul
push
nop
xor
decb
outsl
das
das
mov
push
mov
adc
ds
push
xor
adc
cwtl
sbb
add
add
dec
xchg
mov
or
mov
sbb
adc
sub
sub
cmp
xchg
add
in
and
xor
inc
dec
add
lret
lcall
js
add
lcall
or
mov
jl
and
or
add
cmp
adc
and
lahf
loopne
insl
stos
xor
adc
ret
xchg
lods
es
jmp
sbb
mov
cmp
pop
adc
pop
aaa
ss
or
out
cmc
mov
pop
or
mov
or
add
insb
mov
push
mov
sbb
pusha
cltd
loop
mov
adc
lods
insl
lcall
xchg
jo
out
mov
add
mov
sbbb
loopne
iret
ja
inc
add
dec
mov
and
or
or
adc
adc
stos
jo
cwtl
icebp
adc
or
call
cli
fdivrs
sub
in
lds
cs
stc
pusha
sbb
call
push
clc
mov
lret
lea
push
lret
inc
push
filds
fs
push
push
test
outsl
lret
ss
or
pshufw
mov
test
push
sub
cld
mov
xor
add
insb
aaa
xor
faddl
arpl
insl
les
imul
pop
pop
pop
mov
call
dec
dec
lea
pop
mov
inc
adcb
and
dec
ja
jae
fcoms
cmp
sbb
and
aaa
or
cmpsl
adcl
scas
lea
subb
mov
cmpsb
cmp
xor
mov
fisubs
xchg
sub
add
cld
filds
inc
cmpl
push
pop
dec
lahf
ret
add
lcall
clc
push
sbb
frstor
outsl
jge
aaa
push
or
xchg
inc
imulb
mov
test
sbb
lock
pusha
jne
xor
adcl
mov
lcall
xor
mov
xor
arpl
aam
lcall
adc
sbb
lcall
test
sub
sbb
inc
cld
testb
jne
mov
and
lock
push
imul
jmp
sbb
fcompl
xlat
jle
push
cmp
jmp
push
cmp
or
mov
pushl
shrl
mov
adcl
adc
lds
pop
andw
nop
mov
mov
loope
mov
mov
add
sub
sbb
mov
cmpl
dec
mov
sub
inc
mov
cld
mov
hlt
adc
pop
shll
pop
xchg
mov
sbb
popa
inc
call
nop
sbb
dec
je
pop
imul
movsl
pusha
leave
sub
sbb
mov
fdivrs
je
push
insb
movsl
sub
popa
push
or
daa
js
into
xorb
fsts
pop
mov
dec
and
adc
mov
pop
add
add
ret
dec
in
pop
adc
sub
je
data16
aaa
nop
in
test
clc
dec
sbb
dec
sarb
xchg
inc
out
mov
dec
adc
dec
cld
ret
mov
std
xchg
data16
adc
notb
push
adc
xor
inc
sbb
mov
in
cmpsb
mov
sub
inc
mov
dec
adc
jmp
test
mov
je
cmpsl
add
dec
cmp
jmp
add
sub
ret
push
js
hlt
aaa
ljmp
adc
push
cmp
cli
out
dec
js
cmp
dec
push
loope
loopne
push
lret
pop
and
lret
add
jp
jl
add
cmp
jne
jns
push
inc
jo
rolb
int3
inc
sbb
cld
gs
inc
xchg
inc
notl
push
lea
inc
inc
jmp
cmp
gs
cmp
sbb
fstpl
inc
out
inc
inc
nop
jne
mov
mov
movsb
cmp
sqrtps
js
jp
filds
jbe
pop
pop
pop
inc
in
jno
xlat
lock
adc
jo
mov
jne
push
or
jne
rorl
out
dec
cmp
nop
mov
aam
push
push
imulb
jns
sbb
pop
push
cmp
xor
repz
dec
and
add
cmpsl
rcrb
pop
loope
xchg
movsl
clc
push
adc
popa
inc
xchg
test
jg
add
add
jno
xlat
sbb
and
adc
arpl
mov
ljmp
imul
icebp
shlb
out
xor
test
movsb
mov
shrb
inc
adc
sbb
inc
pop
or
sub
and
test
sub
ret
je
inc
or
xchg
push
or
xor
pop
mov
and
mov
out
push
ja
mov
hlt
mov
mov
push
sahf
ret
popa
rcl
jne
js
lock
mov
xchg
cs
push
push
xchg
loopne
arpl
pushf
xchg
loopne
lahf
add
jne
jp
add
nop
cmp
jecxz
add
addb
addr16
or
mov
sbb
out
andb
push
adc
ret
mov
mov
pushf
inc
lret
inc
pushf
push
xchg
fistps
and
lret
mov
xchg
dec
jbe
adc
mov
push
pop
xchg
jg
sbb
fldenv
add
lret
cli
add
int3
cmp
add
rep
mov
sar
dec
sbb
jne
pop
or
lret
inc
andl
iret
and
adc
popf
movsl
mov
pushf
shl
cmp
aaa
xor
nop
push
iret
jl
jecxz
xor
andb
adc
les
inc
and
and
dec
daa
fidivs
mov
mov
or
sub
in
xchg
nop
xchg
scas
push
and
and
mov
mov
xchg
out
jne
inc
adc
inc
in
jge
cld
xor
sub
jae
cmp
shrb
aad
and
loopne
neg
pop
aad
or
je
cmp
and
imul
and
aaa
sbbl
cmp
out
fcmovb
push
lods
into
push
es
call
or
mov
ffree
xchg
adc
add
cmp
xchg
aaa
orb
les
sbbb
testb
scas
insl
xor
inc
mov
xchg
loope
jecxz
pop
arpl
fadds
mov
push
pop
xor
stos
jle
pop
mov
cld
push
cmpsl
rolb
pusha
pop
mov
es
sbb
dec
pop
add
pop
sub
and
test
scas
js
cwtl
rolb
or
fs
in
sub
not
and
aaa
int3
push
jo
into
ret
xchg
stos
add
inc
add
add
or
dec
out
jge
add
loopne
mov
incb
addr16
cmc
jnp
jge
xchg
cmp
jae
sub
xlat
rcl
out
int
inc
sub
testl
orb
and
xor
gs
sub
and
int
gs
xchg
xchg
jo
imul
jo
add
les
xchg
test
and
dec
rcrb
pop
ret
fsubrl
adc
adc
adcl
cld
mov
lcall
or
das
sub
fnstsw
push
and
clc
lcall
adc
jbe
sbb
pop
in
adc
popa
add
mov
xchg
sub
test
dec
inc
adc
hlt
inc
mov
mov
or
jne
in
inc
sub
xchg
cmp
inc
enter
es
sub
shll
sbb
xor
and
xchg
mov
fsub
ret
or
cwtl
je
fimuls
inc
lcall
add
adc
rorb
hlt
fcmovbe
jbe
cmp
je
adc
fdivs
adc
hlt
and
mov
add
or
adc
aas
xor
movsb
jnp
jecxz
inc
cmp
jae
jecxz
push
je
xor
out
push
ret
cli
pop
push
mov
add
pop
jle
js
lahf
jne
xor
dec
push
add
sbb
mov
sub
sbb
sbb
sbb
add
out
test
and
inc
push
sbb
push
js
jecxz
adc
out
cmp
fadds
inc
xor
lods
jge
test
xor
dec
and
popa
sbb
aas
aaa
mov
jb
push
xchg
or
push
movsb
imul
fsubrl
fdivs
cltd
mov
out
inc
adc
pop
add
sbb
lods
dec
rolb
das
and
jne
enter
xor
sbb
ss
dec
dec
daa
fimuls
mov
int
addr16
or
or
test
cmp
pop
popa
cmp
clc
adc
sbb
mov
mov
jns
push
sub
cld
imul
sub
sbb
add
adc
xor
stos
sub
xor
lcall
out
arpl
pusha
lcall
sub
mov
push
xchg
add
pushf
sub
aaa
insb
dec
jb
in
nop
outsb
lock
pop
sbb
mov
adc
testb
testl
xchg
or
dec
push
or
flds
adc
or
and
or
shlb
add
scas
and
xchg
mov
dec
lds
cmpsl
or
scas
add
loopne
sbb
inc
inc
add
jns
mov
pop
push
imul
xchg
sbb
add
imull
push
pop
dec
jl
dec
imull
push
int3
mov
and
sbb
inc
movsl
pusha
pushf
arpl
out
pop
jno
and
xchg
mov
xor
mov
sbb
jae
in
and
adc
scas
dec
and
and
push
push
call
sahf
inc
fdivl
inc
cs
sub
shll
xlat
das
and
ss
orb
sbbl
xor
mov
inc
jmp
das
shlb
xlat
out
adc
push
cmp
inc
mov
aam
push
sub
xchg
aas
bound
outsl
pop
scas
push
mov
jne
ret
and
cs
push
enter
mov
mov
or
call
je
adc
add
shrl
lret
adc
and
and
or
fcoml
shlb
xor
lret
dec
xchg
and
test
nop
inc
test
adc
pusha
and
xlat
out
dec
jg
and
bound
sub
and
dec
bound
ds
js
cmp
dec
jmp
mov
add
xchg
cmp
mov
mov
lock
aad
jge
adc
clc
jne,pn
inc
sub
or
cli
push
ja
sub
mov
hlt
mov
xor
push
and
popa
jge
mov
inc
in
pop
in
sti
add
cpuid
mov
mov
sub
gs
sub
imul
es
arpl
or
iret
jns
sub
pop
in
cmp
pop
mov
jl
cmp
jge
mov
stc
outsb
inc
sub
cmp
pusha
jge
add
sbb
subl
cmpl
xchg
cmp
xor
push
ret
inc
push
outsl
repz
mov
dec
clc
dec
dec
xorl
daa
xlat
xor
out
rcll
sbb
call
mov
mov
cld
mov
jnp
icebp
ret
scas
leave
add
dec
es
add
jp
and
pop
bound
dec
push
leave
les
push
or
lock
js
adc
stc
lods
cmp
rcrb
xorl
sub
adc
pop
mov
push
fdivrs
in
lods
fisttpll
push
or
and
mov
jecxz
popl
jno
pop
mov
mov
xor
sbb
sub
xor
and
test
lret
mov
or
sahf
push
mov
mov
xor
mov
insl
inc
dec
call
sub
mov
adc
dec
xor
insl
loopne
mul
adc
loopne
mov
pop
jb
ja
and
pop
inc
fimull
push
push
dec
lcall
xor
push
neg
in
jns
addr16
in
push
sbb
pop
adc
push
and
dec
lret
mov
mov
ljmp
test
cmp
test
xor
int3
and
sub
nop
mov
mov
in
cmp
push
dec
sbb
push
add
mov
negl
shlb
mov
dec
dec
mov
xor
aas
jmp
mov
dec
fadds
adc
arpl
aam
lock
lea
sub
mov
sub
xlat
sbb
cltd
adc
dec
popf
lods
push
jnp
loopne
xor
daa
cltd
movsb
loop
adc
int3
int3
pop
jmp
dec
imul
es
add
push
cmp
pop
lcall
adc
out
int
shlb
mov
daa
sbb
add
aas
or
cmc
hlt
and
rsqrtps
pushf
cmc
aas
push
movl
shrb
aam
fadds
or
pop
loopne
xor
push
loop
aam
mov
adcl
and
jge
mov
jne
in
lock
dec
dec
roll
adc
mov
fcom
das
push
mov
fs
iret
adc
aam
rcr
cmp
mov
mov
cs
hlt
cld
shl
inc
cltd
notb
mov
xchg
sub
add
in
in
test
call
lods
xchg
mov
hlt
xor
pop
call
jne
inc
sub
jmp
sub
lar
rcrb
test
inc
mov
mov
sbb
sahf
push
dec
clc
rcrb
iret
les
movsb
rorl
scas
pop
insl
test
sbb
mov
call
xor
adc
mov
lds
pop
in
adc
frstor
pop
xor
adc
jp
out
xor
and
out
mov
xchg
movsl
and
and
dec
sub
and
xor
jl
sub
inc
push
orl
mov
add
fdivrl
jbe
pop
arpl
sbb
mov
ljmp
adc
stos
add
cmp
ret
cld
xchg
jmp
and
adc
ds
sbb
xor
test
std
push
lahf
dec
jle
xchg
push
pop
push
sarb
pop
movsb
inc
clc
dec
movsl
imul
daa
pop
shrb
test
or
mov
xor
out
jno
or
add
popf
push
push
enter
push
add
pop
ja
bts
jmp
adc
xor
fstl
push
push
outsb
nop
xorl
jge
cmp
add
mov
mov
or
pop
sti
aad
iret
adc
mov
xor
xor
lcall
sbb
adc
add
dec
aam
pop
ljmp
sbb
andl
fisttpl
cmp
dec
adc
jae
addb
push
push
adc
xchg
mov
inc
add
inc
sbb
adc
mov
sbbb
and
add
xor
and
mov
push
add
repnz
jne
into
pop
push
nop
fnstsw
push
jp
or
daa
xorb
shlb
ss
imul
push
stos
rcrb
sbb
mov
dec
in
loope
xchg
dec
adc
dec
in
jge
xor
add
das
mov
test
sub
lret
push
mov
pushl
dec
ret
and
add
inc
jae
scas
add
lods
pop
inc
add
outsb
and
fnsave
inc
movsl
push
push
push
stc
inc
fldt
sarl
adc
push
mov
sub
add
nop
mov
dec
lods
xor
add
mov
pop
stos
and
mov
cmp
pop
in
pop
mov
pop
inc
vpmacsdd
xchg
push
mov
call
ds
clc
push
or
pop
and
out
push
sub
dec
push
xor
dec
sbb
cmc
ss
xchg
sbb
in
and
add
aad
leave
or
orb
mov
xor
jmp
xor
cwtl
gs
push
testb
sbb
insl
cmp
shll
pop
or
sbb
lods
pop
sub
mov
or
and
pop
iret
pushf
int
pusha
inc
hlt
mov
es
jno
mov
shlb
mov
or
lock
ret
add
loop
jmp
dec
repnz
or
out
or
out
lods
and
add
addr16
repnz
push
and
sub
jecxz
sbb
or
adc
jge
aaa
aam
adc
push
cmpsb
test
lahf
lods
mov
pop
cmp
ret
mov
sahf
add
or
push
out
fimull
andb
or
rcl
push
push
or
outsb
mov
pop
into
cmp
clc
add
push
les
push
add
imul
ds
pop
adc
cltd
mov
inc
sbb
loopne
jno
push
push
sub
insb
push
loope
mov
jmp
push
mov
and
mov
add
das
adcb
push
sub
jle
mov
adc
sub
adc
and
ss
jg
js
xchg
push
movsl
mov
addr16
add
mov
mov
in
mov
mov
adc
popa
pop
push
je
mov
stos
call
test
xor
addl
sahf
test
sbb
jmp
xchg
mov
in
pushf
pusha
add
mov
sbb
lods
adc
lock
ret
cmp
adc
sbb
hlt
mov
ljmp
pop
inc
stos
lds
cmc
add
push
adc
test
stc
push
nop
out
popa
in
jecxz
lock
scas
call
out
adc
inc
pop
mov
pop
pop
or
jmp
mov
sub
aas
sbb
xor
loopne
sub
fs
je
sub
mov
lcall
fcomip
cmp
cmp
icebp
or
push
mov
mov
data16
mov
int3
pop
cs
sahf
out
cmp
pusha
push
je
loop
mov
or
subl
push
or
or
in
xlat
movsbl
mov
xor
lock
mov
cs
xchg
cmpl
andb
xchg
xchg
sub
ret
cmp
cmp
pop
dec
scas
clc
xor
and
insl
ljmp
call
add
inc
push
inc
cmp
adc
mov
add
push
ljmp
mov
ret
inc
mov
cwtl
stc
add
fs
dec
inc
pop
test
loopne
es
aam
pop
push
push
jbe
xchg
loopne
es
je
add
test
add
mov
jge
add
cmpsl
mov
or
and
repz
adc
sti
nop
repz
pop
aam
adc
addr16
jg
or
icebp
add
push
dec
xor
cmc
hlt
push
in
shl
sbb
nop
xlat
test
inc
in
add
inc
inc
lea
mov
cmp
jg
pop
cmpsb
xchg
add
cmp
jp
rolb
xchg
dec
loope
sub
inc
xchg
xor
imul
sub
inc
jnp
fwait
out
dec
or
dec
clc
xchg
sbb
sarb
push
add
cs
adc
cmp
pop
sarb
dec
pop
jb
add
adc
movd
mov
sbb
inc
add
mov
gs
outsl
jl
push
xor
daa
xor
ret
leave
dec
data16
cwtl
nop
dec
push
adc
add
rorb
out
mov
in
mov
getsec
inc
das
sub
nop
inc
imul
andl
je
cmpsb
adc
insl
or
ror
test
leave
clc
or
loopne
push
mov
cs
pop
mov
push
outsb
xchg
and
outsb
shlb
fmull
push
sbb
sbb
cmpsl
out
filds
scas
mov
sub
daa
xlat
mov
or
or
test
test
testl
fcomip
dec
repnz
push
les
pop
jno
movb
jne
inc
mov
es
ja
inc
mov
cmp
inc
adc
cmpsl
icebp
je
aad
popa
lods
pop
cmp
pop
shl
insb
adc
inc
cmp
dec
add
test
sbb
imul
cmp
jg
push
push
or
sub
jecxz
incl
loopne
aas
and
orl
ja
ja
ja
or
ss
jl
pop
lock
sti
mov
rcl
add
js
mov
insb
jo
ja
add
fisubrl
cmp
mov
inc
dec
shlb
and
xchg
rol
arpl
sub
out
xchg
add
push
add
cmp
jge
orb
mov
or
inc
daa
sti
mov
sbb
sbb
int3
pop
push
orb
mov
add
adc
mov
add
repz
xor
and
inc
or
inc
sbb
xor
xchg
cmp
lcall
fcmovnb
lahf
add
mov
push
inc
inc
ret
push
dec
add
int
inc
shlb
mov
sbb
adc
dec
inc
inc
dec
sub
mov
mov
mov
jns
jmp
push
rcrb
sbb
and
adc
cmp
stos
and
push
iret
sbb
rclb
and
push
xchg
loopne
jns
mov
xor
cmp
imul
fdivrl
or
cmp
insb
xor
sbb
test
mov
movsb
push
add
push
or
inc
rolb
cmpsl
and
test
push
les
cltd
mov
std
filds
dec
aad
sbb
arpl
repz
pop
or
adcl
xchg
arpl
lahf
pop
xor
pop
cwtl
inc
adc
sti
loopne
cwtl
in
sbb
in
iret
shl
sbb
divb
and
jne
adc
push
sub
sub
cmp
push
popa
push
lods
mov
mov
sti
add
adc
aam
pusha
and
xor
inc
mov
pop
push
movb
jb
mov
filds
add
leave
and
add
or
leave
and
or
roll
std
adc
xlat
or
or
aaa
and
xchg
ud2
mov
jmp
mov
cld
xor
or
adc
pusha
inc
mov
mov
add
push
pop
xlat
outsb
aam
lock
cmpb
jg
mov
pop
frstor
ret
in
ds
ret
cmp
and
ds
mov
ljmp
jmp
mov
or
and
mov
adc
scas
loope
rcr
dec
and
and
push
mov
jns
xchg
mov
pop
ja
cmp
push
aaa
pop
push
jns
lock
scas
icebp
mov
cld
data16
add
scas
or
mov
pop
flds
je
ret
divb
and
aam
add
sbb
add
lock
xor
arpl
outsl
pop
ss
sub
ret
cli
add
pop
ret
inc
inc
pop
adc
ror
stos
lret
cmp
inc
dec
ljmp
xchg
adc
arpl
add
add
or
lock
or
xor
push
cmp
inc
push
hlt
inc
cwtl
or
cld
inc
fmuls
mov
mul
aaa
lock
insb
mov
and
and
add
test
fcmovb
jge
mov
sbb
jge
fwait
add
inc
xchg
add
ja
add
jmp
jecxz
add
fisttpl
and
ljmp
scas
adc
rorl
mov
pop
add
es
and
dec
iret
adc
pop
repnz
and
jb
adc
cmpsb
mov
leave
and
iret
xor
test
cmp
xchg
aam
ja
popa
push
lcall
rorl
pop
sbb
or
pop
clc
mov
in
cmp
inc
out
pop
out
sbb
js
push
cwtl
cli
fstl
rol
mov
mov
rclb
cmp
mov
and
lock
pusha
mov
fidivs
cmp
cmp
or
icebp
mov
out
xchg
call
push
jg
xor
inc
add
insb
and
and
sub
and
mov
sbb
dec
pop
mov
jmp
jae
pop
cli
push
jo
add
out
push
cmp
je
or
jbe
fwait
popl
adc
or
test
je
sub
orb
sub
clc
inc
sub
add
or
mov
test
ja
fstps
pop
out
mov
and
mov
or
jne
xor
insb
add
aas
jge
lock
cwtl
and
push
jbe
fbld
or
jb
add
test
or
out
mov
dec
mov
je
movsb
xchg
inc
clc
clc
cmp
fcompl
sub
not
mov
sti
lea
movsl
mov
jmp
push
xor
push
rclb
ja
xor
test
dec
ret
inc
add
adc
mov
sbb
in
sub
cmp
pop
lock
pop
mov
xor
xor
push
mov
fs
pop
insl
add
jne
mov
or
js
sub
lcall
and
jge
inc
dec
incl
loopne
pop
jb
push
or
add
sbb
sub
adc
cwtl
cmp
sub
or
pop
rolb
call
add
aad
call
sub
arpl
movb
add
fdivs
sub
ljmp
adc
and
insb
ret
cmp
sub
scas
test
fwait
xorb
adc
or
jle
popa
add
add
add
loope
mov
jns
out
xchg
mov
mov
push
push
cwtl
jmp
adc
lock
popa
movsb
xor
xchg
int3
sub
pop
in
jno
push
adc
or
les
aad
xor
js
sbb
lds
add
gs
rcll
js,pt
xchg
mov
adc
movsb
lret
sbb
mov
or
scas
jg
into
add
mov
js
mov
repnz
iret
push
jbe
sub
and
and
in
andl
pop
cmp
adc
push
sbb
fwait
rcl
imul
dec
movsl
adc
inc
jl
sbb
mov
pop
frstor
ret
sub
jns
adcb
fdivrl
imul
ja
push
jb
dec
push
mov
stc
shrb
mov
orl
pushf
or
shl
jecxz
add
adc
es
xlat
imul
leave
or
fidivs
jbe
push
pop
jb
pop
cmp
mov
adcl
aam
jmp
adc
push
jl
cmp
mov
imul
inc
hlt
leave
mov
xor
in
push
shll
fnstcw
or
nop
ja
or
mov
push
icebp
and
shlb
mov
adc
sti
xor
or
das
popa
mov
jnp
fsubrs
jno
sub
test
mov
jnp
xchg
adc
enter
add
sarb
and
sar
add
cmp
out
dec
mov
jl
pop
inc
add
inc
pop
mov
ret
jbe
inc
cmp
ret
mov
pop
push
mov
hlt
idivb
je
cmpl
push
sbb
jno
inc
mov
clc
pop
notl
and
inc
sbb
cmp
pop
add
lahf
or
and
jnp
mov
cmp
mov
in
and
inc
fdivs
insb
push
out
push
push
imul
les
stc
cltd
daa
jg
add
mov
add
xchg
icebp
push
aas
mov
in
ja
sub
inc
and
fwait
fwait
clc
push
fwait
xor
adc
xor
int
loopne
mov
pop
test
test
and
push
adc
nop
mov
inc
or
out
mov
add
mov
mov
push
pushf
jne
scas
xor
jbe
aad
cmpsl
dec
js
and
rcr
xor
dec
jg
out
xor
cmp
push
add
pop
dec
push
push
shll
inc
fcoml
scas
sub
dec
adc
in
clc
hlt
mov
mov
dec
aad
sbbb
sbb
pop
and
dec
rcll
addb
dec
test
add
xor
inc
add
push
dec
push
cwtl
mov
add
pop
shlb
mov
sub
mov
pop
andl
andl
add
and
and
cmp
or
xor
jl
xchg
inc
imul
mov
mov
add
xchg
xor
cld
pop
fsubl
daa
cld
sbb
sbb
imul
lock
sti
add
leave
loop
cmp
mov
adc
in
mov
and
dec
lret
js
mov
roll
std
movsl
lret
out
lds
cmpsb
push
or
and
enter
in
clc
andl
inc
push
and
out
inc
dec
push
pop
push
lods
xor
ja
in
jmp
adc
xor
pop
int
mov
sub
and
sbb
jmp
adc
bound
stos
outsl
jbe
sbb
add
ret
jp
aam
sub
scas
add
hlt
lock
jo
push
imul
popa
shll
jg
movsb
sbb
add
mov
mov
test
addl
cmp
jae
sbbb
adc
jge
jo
or
jl
iret
addb
push
sbb
lock
push
lock
add
orb
inc
out
inc
adc
xchg
add
cmp
jg
in
xor
sbb
aam
xlat
in
xchg
fcmovnbe
xor
adc
shlb
aaa
lcall
xchg
nop
sbb
fldenv
fst
or
xor
xor
clc
fisttpll
jl
mov
lahf
mov
sbb
push
inc
push
fdivr
jne
test
imul
andb
sub
and
or
dec
pop
xchg
mov
sbb
push
imul
js
pandn
cmp
rorl
lock
call
test
aam
and
mov
rclb
call
lahf
sub
outsb
outsb
sbb
push
aam
and
cltd
dec
cwtl
fwait
jno
inc
in
push
aaa
adc
insb
test
lock
cmp
clc
aam
gs
in
lds
dec
and
or
fdivrs
xchg
int3
cmp
fcomps
mov
sbb
mov
stos
imul
out
mov
cmpb
arpl
lods
add
xchg
xchg
arpl
nop
mov
and
adc
push
subl
sub
xchg
xor
mov
rol
push
push
adc
mov
shlb
lock
xor
inc
mov
mov
popa
loope
dec
cmpl
jnp
fwait
jno
cmpb
add
testb
add
adc
sbb
daa
mov
push
pop
aam
movb
outsl
mov
andl
add
or
imul
dec
mov
adc
jno
mov
mov
mov
push
sbb
mov
jge
fbld
or
ja
jmp
mov
xor
xor
movb
hlt
loopne
or
mov
adc
lods
jmp
add
or
pop
imul
and
ret
nopl
nop
sub
je
fcom
ret
add
in
mov
cs
stos
xorl
pop
ficoms
mov
aad
xor
push
lahf
andl
jo
mov
push
cmp
mov
or
or
aaa
add
xor
jl
shlb
decl
sbb
sub
arpl
inc
js
push
mov
push
test
outsb
add
pop
sbbb
sbb
cmp
test
movsl
adcb
sbb
mov
pop
dec
js
adc
inc
lahf
testl
sub
hlt
in
xchg
mov
cmpsl
les
aam
jnp
jmp
xor
arpl
data16
in
lea
aam
aaa
mov
rclb
xor
add
add
pop
js
pusha
sbb
js
hlt
insl
cmp
fnstsw
mov
stos
sub
ljmp
das
or
aaa
add
adc
pop
ds
adc
or
test
sbbb
add
adc
rclb
pop
xor
lcall
mov
dec
orl
out
jmp
out
cmovnp
add
add
or
adc
or
adc
push
or
pusha
sbb
icebp
mov
out
ret
adc
mov
or
pushf
ja
mov
inc
inc
cmp
in
sub
cmp
inc
cmpsl
dec
cmp
mov
insl
cld
pop
pcmpeqw
arpl
inc
popl
mov
pop
and
fwait
or
js
in
and
mov
fisttps
f2xm1
fisttpll
cwtl
cli
insl
xor
mov
cmpb
loope
dec
xchg
inc
push
and
and
add
mov
push
adc
jne
xorb
adc
je
sti
lods
movsb
xor
adc
fs
in
fs
mov
call
add
xchg
mov
orl
adc
outsb
rorb
and
and
fldcw
sbb
pop
sbb
or
pop
and
fnstenv
cmp
sahf
lcall
jne
divl
rorb
les
pop
cmp
jae
jp
sahf
pop
pop
cmp
testb
ss
adcl
sbb
mov
je
push
movlps
push
inc
scas
sub
das
loopne
add
xlat
xchg
nop
in
pop
cwtl
scas
mov
rcl
imul
inc
test
add
sbb
loope
xor
sub
or
push
mov
in
add
xchg
mov
xchg
cwtl
mov
test
sbb
mov
jl
inc
sub
ret
cmp
jne
or
mov
fbstp
daa
xchg
or
inc
cmp
cmp
push
cmp
inc
push
add
jo
xchg
xorb
test
call
pop
and
mov
sbb
loope
jns
inc
clc
push
inc
xor
clc
inc
add
pop
insl
mov
in
outsl
mov
nopl
dec
pop
cwtl
or
aas
sbb
inc
ja
scas
add
push
mov
or
pop
or
test
inc
cmp
jmp
push
sub
adc
cmp
es
push
adc
adc
pop
les
jmp
sti
push
test
adc
je
push
mov
jle
pop
inc
or
pop
enter
adc
lea
out
das
pop
bound
dec
cmpl
out
inc
rcrl
rclb
ret
testb
fnstsw
neg
movsl
adc
call
add
inc
inc
jmp
in
subl
shr
cmp
xchg
cmp
das
test
xchg
jno
test
xchg
sub
xchg
rol
adc
inc
loope
adc
pop
mov
add
push
andb
ljmp
push
ss
in
in
sbb
sub
clc
mov
adcb
or
jb
incb
jl
mov
pop
dec
adc
add
fsts
push
inc
das
call
insb
adc
and
or
sbb
pop
mov
xchg
cmp
je
lods
lock
test
add
aas
rol
or
aas
push
jg
sahf
movsb
inc
sbb
mov
and
cs
nopl
fisttpll
cmp
mov
lahf
fcomps
out
mov
jne
loope
sbb
cmp
dec
sub
push
mov
pop
sbb
dec
into
mov
test
adc
andl
mov
dec
in
cmp
adc
lods
sbb
scas
cmp
push
cld
and
adc
sub
std
enter
stos
jmp
fldl
jmp
mov
mov
or
adc
sub
add
clc
ffree
xorb
sbb
adc
subl
mov
outsl
mov
xchg
inc
rclb
jg
roll
push
fiadds
sbb
je
sub
mov
xchg
sarl
inc
fs
adc
sbbb
add
rcr
xchg
inc
shll
out
jg
push
adc
xor
xor
xchg
mov
push
jl
ss
enter
xchg
adc
adc
sub
ja
aad
add
je
sbb
aaa
xchg
outsl
xor
and
sbb
sbb
popa
add
fists
push
sbb
je
push
push
adc
repz
cmp
add
nop
fiaddl
test
mov
roll
xchg
lret
jle
dec
xor
bound
lea
jae,pt
or
sbb
adc
fsubl
adcb
sbb
ret
mov
adc
xor
adc
inc
lahf
rcll
daa
adc
shl
daa
aam
mov
and
jae
arpl
jp
cmp
and
fiaddl
and
ret
or
pop
adc
mov
xchg
sub
aaa
adc
mov
loop
neg
inc
es
jmp
lret
clc
lock
pusha
pop
pusha
pop
adc
and
adc
push
xor
or
repnz
lods
enter
pop
adc
mov
xchg
jo
mov
je
inc
sub
dec
or
push
movsb
inc
sub
adc
cmp
cmp
xor
sub
fwait
push
je
mov
daa
sub
aad
jno
xchg
sub
or
and
push
mov
adc
mov
aad
pushf
ret
mov
xor
inc
cmp
dec
sub
dec
and
outsb
jnp
cmp
pop
push
push
jge
jb
mov
idiv
sbb
sbbb
adc
cmp
push
push
and
data16
cs
or
xchg
sarl
inc
je
xchg
into
fs
inc
je
cld
and
push
shlb
cmp
push
sub
xchg
jo
lods
sarl
dec
pop
dec
and
cmp
arpl
aaa
inc
inc
scas
inc
push
cs
sbb
decb
push
mov
xchg
xor
add
xchg
and
mov
jge
inc
mov
xchg
dec
negl
dec
and
adc
xor
test
pop
out
cmp
inc
and
mov
loopne
and
into
add
orl
test
add
lret
xlat
push
bnd
hlt
lods
adc
jmp
fisubs
hlt
adc
add
enter
sbb
into
repz
xor
pop
cmp
or
les
stos
pop
jnp
cmpsb
rcrb
push
aas
adc
dec
les
ja
mov
popf
cs
inc
or
mov
call
aam
aad
or
mov
loop
mov
push
or
cmp
mov
sahf
insl
pop
loopne
or
lods
dec
inc
loope
jp
ljmp
js
xchg
jnp
jne
jne
cmp
rclb
fsubrs
sbb
loope
arpl
inc
fistpll
mov
mov
sub
cmp
loop
push
faddp
loope
jecxz
popa
or
sub
leave
cltd
pop
adc
mov
scas
in
ret
lahf
xchg
jb
jp
dec
sbb
mov
jl
lea
mov
jno
mov
dec
pushf
add
push
mov
pop
adc
pop
pop
sbb
icebp
push
lods
jo
push
pusha
inc
xchg
sbb
js
ret
pop
or
jmp
adc
dec
inc
test
mov
loopne
imul
lahf
fbstp
pop
pop
add
jno
cli
push
adc
dec
add
xchg
xchg
and
push
fsubl
cld
rorb
pop
jmp
sbb
test
clc
insl
popl
mov
pop
mov
sbb
js
push
mov
sub
or
shll
pop
lahf
adc
movsl
mov
push
notl
and
and
cmp
pop
dec
adc
adc
or
cltd
aas
lods
mov
xor
cmp
push
movsb
jge
in
dec
clc
cmp
jg
push
dec
cmp
inc
xlat
pusha
fstpl
mov
gs
movb
add
push
loop
mov
scas
dec
into
jmp
or
sbb
jns
daa
enter
xchg
call
mov
sbb
and
mov
jne
ffreep
loop
add
sbb
mov
xchg
les
jmp
movsb
lock
xlat
xlat
and
loopne
or
lods
inc
or
outsb
adc
sbb
aaa
mov
sahf
adc
arpl
loopne
dec
cmpl
ret
xor
ret
add
xor
jno
movsb
mov
es
pushf
shlb
adc
xchg
mov
sbb
cmp
mov
xchg
adc
xlat
and
jge
or
mov
sbb
mov
jg
test
xchg
adc
or
sbb
add
adc
aas
push
in
and
test
loopne
ja
cmp
xchg
pop
adc
nop
sbb
ja
lock
mov
mov
push
jnp
in
pusha
mov
adc
popa
in
add
lock
cmp
sub
int
xchg
fldt
addr16
lock
dec
pop
dec
ret
loop
push
adc
xchg
push
ret
push
push
cmpsb
lcall
sarl
mov
sub
mov
inc
pop
add
jmp
call
rorb
ja
jl
enter
lea
inc
sbb
mov
xor
or
clc
add
ja
xchg
pusha
push
pushf
mov
fistps
nop
int3
lahf
aaa
dec
push
ficoml
or
add
cmp
ds
int3
push
je
dec
push
pop
sbb
jmp
xchg
xchg
xlat
sub
cwtl
out
inc
dec
push
outsb
movsl
sub
jbe
jecxz
adc
push
fistpl
push
aaa
jecxz
inc
mov
sarl
jmp
adc
add
xchg
xor
aad
dec
or
in
cmp
pop
inc
cwtl
and
pop
add
push
divl
fcoms
adc
xchg
or
insb
rcll
outsb
or
inc
cmp
or
btc
add
jns
notb
adc
pop
xchg
pop
add
dec
add
mov
in
adc
lds
fs
xor
add
cmp
mov
aas
pop
adc
push
psubw
lock
movsb
mov
dec
pusha
xchg
xor
lret
xor
push
or
add
cmp
sub
movsb
inc
add
xchg
adc
sti
filds
xor
pop
mov
mov
sbb
orb
push
pop
bound
or
lds
fsubrs
xchg
xchg
push
into
sub
jae
or
fildl
movl
dec
dec
add
in
dec
cmp
aaa
int3
adc
hlt
sbb
les
movsb
mov
stos
xor
cwtl
fistpll
mov
pop
mov
cwtl
pushf
call
cwtl
mov
icebp
mov
sub
xchg
jne
mov
arpl
sub
jge
ret
aaa
cltd
pop
sub
adc
test
scas
add
sbb
inc
push
loope
xchg
pop
or
mov
sub
jl
mov
push
and
fcoms
shll
sub
mov
lock
push
jp
inc
shr
rolb
stos
andl
int3
jno
rorb
sbb
sbb
dec
xor
xchg
add
mov
jb
int
ds
jae
xor
jp
or
jo
sbb
sbb
xchg
or
xor
sarl
leave
dec
cmp
sub
not
dec
pop
add
sbb
inc
lea
out
inc
cmp
adc
stos
add
je
sbb
rcr
add
add
add
lea
xlat
popa
xchg
inc
mov
xchg
mov
sbb
cmovb
arpl
nop
sub
imul
pop
push
push
sbb
xor
mov
push
mov
add
adc
mov
sub
out
or
test
nop
mov
clc
mov
insl
popa
inc
loopne
inc
test
or
or
push
lea
mov
data16
mov
cmp
lcall
fdivrs
jae
add
dec
lock
or
pop
cld
or
idivb
fisttpl
pop
mov
dec
mov
adcl
or
clc
xchg
or
add
mov
mov
in
lock
jns
dec
jo
clc
jmp
jo
or
and
cld
mov
xchg
adc
fcmove
dec
jne
pop
dec
pop
loope
pop
rolb
das
push
les
or
cmp
dec
mov
jo
inc
add
stc
inc
mov
dec
cltd
and
rdpmc
cwtl
sbb
mov
push
pop
into
sub
mov
pop
or
cmp
ret
jecxz
adc
rcrb
mov
xchg
mov
and
rorb
or
sbb
scas
push
push
xchg
stos
pop
lock
jb
inc
mov
xor
loopne
incl
pop
jno
std
pop
xor
nop
dec
xor
inc
add
roll
in
mov
adc
pop
sbb
inc
jle
cld
insl
pop
push
mov
push
push
or
add
jbe
mov
mov
addr16
test
mov
fcom
ljmp
cld
push
test
add
or
push
hlt
pop
or
cltd
scas
shrd
sti
xor
ret
mov
fs
jl
inc
mov
dec
movsl
loop
pop
lea
dec
push
inc
add
or
xor
inc
std
jo
fcompl
fs
fs
pop
add
mov
nop
nop
mulb
pushf
or
aad
mov
jo
clc
fsubl
xchg
aas
inc
sub
movsb
add
push
jb
sub
push
push
pop
pop
xchg
xchg
pop
popa
fcom
pop
ds
sbbl
pop
shrb
in
sti
test
and
outsb
je
repz
sub
add
repz
mov
push
dec
cmp
xchg
dec
loop
divl
pop
loope
pop
dec
mov
inc
stc
dec
push
push
imul
pop
leave
iret
jne
fldenv
cs
add
cmp
adc
mov
enter
or
push
insl
out
pusha
arpl
mov
jne
or
inc
bound
sbb
mov
fildl
push
mov
push
dec
dec
lea
inc
iret
dec
and
repz
fcoml
adc
and
xchg
lea
inc
imul
jno
inc
push
mov
or
neg
fs
es
ret
adc
es
scas
jo
mov
aas
mov
mov
add
mov
inc
add
out
shr
iret
sub
sub
dec
jne
stc
inc
shl
negb
jle
mov
mov
push
pop
push
inc
jle
cmp
cs
push
inc
or
mov
sbb
imul
imul
and
mov
je
cmp
pop
sbb
push
mov
jo
pop
icebp
push
pop
scas
mov
inc
clc
outsl
push
es
cwtl
cmovno
faddp
loope
out
cmp
fsubrs
mov
dec
cs
add
adc
inc
sbb
sub
sbb
jo
and
xchg
shlb
push
inc
or
jp
xor
out
jg
lret
sbb
lds
xor
mov
pusha
cltd
push
xchg
lods
jno
daa
mov
mov
cmp
inc
das
push
mov
adc
mov
psubq
xor
js
dec
dec
push
push
mov
push
dec
mov
dec
mov
mov
js
and
icebp
mov
gs
inc
inc
dec
adc
push
mov
push
dec
cmpsb
mov
lods
fs
or
push
sub
cmpsb
add
ja
loopne
ss
call
mov
pop
dec
loopw
andb
ja
mov
jnp
mov
das
push
andb
xor
mov
cmp
jo
xor
in
pop
scas
sbb
nop
jns
fistps
insb
out
pop
xlat
in
movd
fistpll
sbb
punpcklwd
push
popa
xor
inc
or
sub
scas
inc
inc
push
or
push
mov
push
adcl
dec
fwait
and
outsl
add
dec
mov
bound
dec
cwtl
push
dec
mov
jbe
sub
popl
dec
fiaddl
ret
push
adc
xchg
flds
aas
movsl
push
sbb
das
scas
mov
jno
and
cmp
jne
mov
mov
pop
mov
lea
jne
fldt
pusha
mov
out
shrb
orl
int
iret
push
rclw
clc
mov
and
jne
scas
aaa
arpl
or
mov
enter
loope
inc
xor
push
testl
gs
pop
mov
iret
or
mov
loope
orl
dec
mov
adc
sub
push
push
arpl
push
push
lods
sahf
ret
push
cmp
in
lods
sbb
int
mov
adc
jmp
lods
neg
sbb
pushf
or
add
add
add
pop
mov
lret
testb
jmp
sbb
add
add
testl
fidivs
sub
mov
cs
jmp
iret
adc
pop
clc
mov
push
test
push
daa
fucomp
sub
lods
jae
enter
adc
outsl
jg
pop
xchg
jecxz
sub
je
inc
lea
jne
push
jb
stos
sarl
fdiv
mov
lret
nop
imul
icebp
inc
popa
aad
test
insl
xchg
adc
xor
scas
adc
inc
push
daa
mov
es
jno
mov
or
movsl
cmp
push
sbb
loop
dec
sub
lock
outsb
dec
and
pop
sub
mov
adc
mov
cvtps2pi
jg
or
xor
orl
add
push
inc
fadds
push
mov
data16
xor
dec
dec
je
sub
mov
or
push
xchg
mov
ficoms
jle
add
pop
adc
add
fistps
or
push
sub
jns
sbb
push
adc
add
adcb
and
rcrb
push
sbb
sbb
push
fisttps
add
sbb
pop
fbld
or
inc
and
dec
and
dec
out
add
mov
dec
pop
pop
fwait
xor
xchg
lods
scas
nop
lahf
pop
movsb
add
and
jmp
aad
js
lods
nop
pop
cli
add
cmp
or
or
lods
mov
aaa
sbb
das
movsb
mov
and
add
dec
xchg
jp
inc
add
cmp
lods
in
add
cli
add
mov
mov
incb
dec
xlat
mov
setg
push
mov
testl
outsl
es
xor
decb
enter
push
rorl
pop
cmp
arpl
xor
dec
jmp
xor
nop
dec
jmp
and
adc
aas
or
cli
jl
adc
inc
pop
insb
sbb
nopl
scas
or
dec
push
shll
mov
shrb
pop
pop
loopne
repnz
out
movsb
es
lods
mov
imul
je
cmp
pop
xor
jb
and
and
in
or
cs
insb
add
inc
push
sbb
lea
add
inc
fnstsw
dec
jle
icebp
xchg
test
sbb
les
push
or
and
cmp
lods
pushf
jno
dec
imul
mov
and
push
pop
xor
adc
jg
shlb
dec
loop
push
or
stos
into
or
jmp
push
mov
frstor
mov
and
add
or
mov
fldl
loop
iret
out
xchg
cmpb
xchg
xlat
xlat
loop
cwtl
fdivrs
push
xchg
stos
les
or
dec
shrl
shl
pop
push
subb
mov
fstpt
jne
or
and
test
mov
ret
sub
dec
sub
add
sahf
data16
mov
push
popf
out
lods
cwtl
push
out
push
push
push
inc
inc
mov
push
dec
andl
popa
or
mov
idivl
or
es
push
dec
adc
add
imul
xor
es
push
iret
add
loopne
rcll
add
jno
push
daa
pushf
sti
fstpt
mov
nop
es
leave
dec
cwtl
cwtl
xchg
xchg
aas
xchg
mov
or
cmpsb
mov
mov
push
decl
cmpsl
sbb
call
idivl
pop
mov
out
mov
or
sbb
sbb
enter
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
sbb
cld
add
add
fs
adc
fs
and
fs
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
or
loope
pusha
sub
aad
push
cmp
sub
jmp
jns
nop
jnp
sub
outsb
pop
pop
arpl
push
out
mov
add
xchg
pop
pushf
mov
aam
and
test
enter
xchg
enter
xchg
add
jl
movsb
xor
fsubs
not
and
xlat
and
and
call
xor
jo
mov
nop
lret
mov
xchg
push
cs
add
cld
sbb
add
cmp
and
pop
or
gs
or
and
mov
push
movsb
xor
sbb
jb
lret
adc
and
and
push
sbb
mov
xor
xor
lods
or
call
dec
gs
sub
push
xchg
add
cwtl
push
movsb
xor
dec
mov
push
aam
in
push
cs
sbb
int3
pop
inc
sbb
fs
sub
push
movsb
push
gs
clc
jo
int
inc
sub
repnz
xlat
xchg
inc
pushl
call
aaa
mov
insb
xchg
push
cmp
lahf
dec
bound
cli
add
popa
fisubs
push
inc
outsl
sahf
scas
mov
push
jb
ja
inc
test
js
into
xor
fcmovb
pop
in
sub
gs
add
or
mov
in
or
arpl
mov
aad
jae
fists
and
jbe
push
xchg
inc
pop
loope
or
mov
sub
dec
jae
add
stos
addr16
sbb
jae
mov
nop
mov
gs
sbb
sbb
xor
adc
cmp
ret
jnp
dec
ja
ja
adc
add
out
outsb
jb
mov
jo
aaa
or
mov
shll
xchg
adc
aaa
mov
mov
dec
mov
dec
pop
inc
cs
pmaxub
push
xchg
jne
outsl
aad
mov
mov
test
out
mov
ret
sub
pop
sbb
outsl
dec
ds
sub
aaa
aaa
sub
push
push
dec
inc
lahf
insl
sbb
adc
inc
andb
jb
cmp
jnp
inc
push
into
jae
mov
inc
dec
jne
push
lahf
jnp
pop
xor
imul
jg
mov
adc
dec
pand
inc
jg
fnstsw
and
inc
fs
and
lock
xlat
xlat
jnp
add
lret
mov
cmp
xlat
addr16
jne
syscall
add
rclb
mov
pop
pop
imul
push
scas
jno
adc
jnp
push
fldt
inc
out
arpl
adc
popa
fwait
add
push
or
ret
sub
mov
add
aad
sbb
adc
adc
sbb
rcrb
xchg
xor
sub
push
adc
push
jmp
sbb
out
ja
andb
pop
data16
movsb
pop
movsb
mov
cmp
mov
fbld
push
jl
push
mov
add
inc
or
dec
pop
push
nop
mov
pop
jbe
ljmpw
mov
in
push
jne
push
pop
scas
xor
add
jge
out
je
pusha
push
add
repnz
add
into
and
inc
push
xchg
xchg
fwait
add
cmp
xchg
stc
or
dec
jb
inc
dec
loopne
add
in
rolb
shlb
cmpsl
and
xor
orl
aad
xchg
out
dec
or
aaa
mov
mov
dec
loop
lds
pop
inc
xchg
inc
ljmp
push
stos
lods
sub
ljmp
cwtl
shl
cs
and
add
jo
sbb
stos
push
outsb
test
adc
scas
mov
pop
or
pop
outsl
sti
mov
subb
pop
fwait
testb
pop
mov
fldenv
cmp
xor
sbb
jmp
sti
xchg
push
das
push
push
mov
mov
inc
nop
mov
sbb
pusha
loopne
jb
cmpb
pop
fisttpll
add
add
add
mov
adc
jle
or
or
punpckhwd
rorl
aam
adc
cmp
orl
prefetchw
inc
arpl
jg
add
xchg
cld
mov
pop
rcll
mov
add
jns
cmp
inc
fisttpll
pop
mov
fbstp
push
fbstp
adc
outsb
adc
ja
add
cmp
gs
enter
jnp
or
ja
dec
jecxz
dec
mov
jnp
xor
data16
push
sub
nop
or
idiv
mov
in
add
ret
dec
inc
cltd
icebp
sbb
xchg
cmp
ss
cltd
add
pop
pop
and
and
sub
loope
adc
sarb
pop
cmp
sub
jns
mov
daa
mov
daa
call
bsf
mov
xchg
fcoml
mov
sbb
paddusb
fsubrs
fsubp
addr16
inc
mov
aam
shrl
test
leave
xchg
and
push
fsubs
femms
mov
fcoms
mov
xor
add
xor
sahf
ja
mov
xchg
push
popf
jno
idivl
adc
xlat
push
cmp
repz
idiv
iret
repz
repz
scas
mov
lods
into
repz
and
cmp
dec
cs
out
gs
pop
call
dec
orb
add
outsb
xor
dec
loop
push
inc
mov
mov
adc
xor
jg
aaa
mov
stc
dec
and
pop
and
cmp
ficoml
mov
pop
rcr
mov
scas
mov
inc
fisttpl
and
push
push
rcr
mov
or
shll
xor
inc
cmp
xor
lret
mov
adc
inc
lods
cmp
cmpl
sub
fsubrl
cmp
sbb
push
mov
inc
adc
inc
push
loope
test
cwtl
adc
push
xlat
xor
fs
dec
dec
dec
inc
pop
mov
pop
fsts
add
xchg
xchg
mov
and
dec
cld
mov
fistl
and
cmpsl
sub
mov
ret
dec
dec
add
filds
jecxz
test
pop
add
imul
or
pop
outsb
inc
dec
pop
or
xlat
and
push
and
loope
push
xorl
mov
outsb
and
inc
add
dec
cmpsl
sub
sub
mov
lods
in
movups
dec
jmp
fwait
bound
fisttps
push
dec
inc
scas
xor
out
adc
dec
imul
fimull
sub
or
mov
add
lods
dec
inc
add
mov
je
icebp
andl
ret
decl
cs
inc
lahf
imul
dec
enter
xor
jg
push
mov
sbb
jecxz
push
mov
pop
sub
mov
and
or
fcoml
sahf
ret
inc
sub
jae
stos
cs
js
lds
jmp
pop
push
sbb
dec
xor
dec
add
mov
movsl
lcall
popf
bound
adc
or
push
sub
jb
or
or
scas
xor
out
inc
xchg
pop
fs
sub
push
imul
adc
push
aaa
test
es
gs
ss
popa
fs
popf
lock
and
mov
jae
push
or
adc
and
aam
sub
jne
jne
dec
or
fists
ret
add
sbb
sub
pop
faddl
jo
stos
incl
xchg
or
push
add
add
mov
fildl
pop
sub
push
cmpsb
push
ss
loop
decl
xor
fsubrs
dec
movl
dec
mov
jbe
cmp
fcompl
in
inc
aaa
dec
outsl
push
add
in
sub
push
or
mov
push
leave
add
rclb
mov
xchg
mov
xchg
ret
shlb
lea
or
jmp
pop
inc
aad
adcl
xchg
fcoml
fdivrl
xor
clc
fidivs
test
mov
sbb
mov
js
mov
sub
mov
pop
adc
rclb
adc
adc
sub
scas
inc
push
push
cmp
movsb
add
pop
daa
add
and
bound
mov
adc
cmpsb
and
push
in
mov
fnclex
sub
lock
and
dec
jne
or
add
fisubs
lret
adc
xchg
and
xchg
mov
nop
in
and
movsl
fcomp
iret
dec
cmp
lret
push
mov
xor
imul
and
pop
and
sub
or
popa
movl
dec
push
insl
cltd
mov
sbb
popa
or
and
bound
rol
xor
popa
mov
jne
in
movsl
loop
mov
cmp
sub
cmpl
lods
fs
sbb
mov
movsl
dec
sbb
ja
push
inc
sbb
push
add
adcb
mov
fcomip
hlt
repnz
loope
push
sbbb
add
lea
xor
popa
sub
ja
inc
push
out
pusha
mov
mov
adc
andb
inc
ret
mov
testb
jmp
mov
push
push
loope
xor
js
and
jnp
scas
push
adc
leave
cmp
mov
divl
rcl
hlt
sub
pop
pushf
fscale
add
in
xchg
rorb
lea
mov
add
xor
loopne
add
in
jecxz
mov
xor
ds
xor
xor
sub
push
dec
pop
xchg
fnsave
fistpl
dec
fdivl
push
jno
loopne
mov
mov
stos
aam
fmuls
lea
pop
sbb
fsubs
add
out
fsubrp
fcomps
leave
je
lahf
fcmovnbe
inc
jmp
fwait
pop
in
add
jecxz
cltd
adcb
out
aaa
pop
sarl
xor
adc
in
xchg
into
and
or
add
pushf
cmp
cmp
pop
mov
sbb
cmp
sahf
inc
add
in
cmp
xor
adc
lods
cld
inc
mov
inc
stos
call
add
repz
xchg
push
cld
cli
cld
sbb
push
inc
cs
jmp
pop
adc
dec
sbb
leave
loope
int
cmp
push
je
mov
rorb
cmp
push
cwtl
movsl
xor
aas
aaa
lods
jne
sbb
xchg
and
xor
add
pushf
in
inc
loope
aas
push
push
push
xchg
in
push
pusha
inc
pop
gs
daa
lahf
push
ja
int3
jge
jno
adc
shlb
es
pop
imul
fs
jmp
ss
sahf
xor
lcall
pop
adc
inc
int
adc
pop
fdiv
cmp
ss
cmp
push
adc
cmp
push
ds
cmp
lea
insb
mov
xor
adc
and
jnp
iret
aam
loop
je
pop
fistpl
popa
or
ljmp
lock
pop
mov
push
test
loopne,pt
jg
arpl
les
test
aam
inc
push
sbb
iret
andl
loopne
loopne
movsl
test
dec
hlt
push
or
mov
mov
push
xchg
or
int3
int3
pop
repnz
ret
jmp
pop
mov
rcll
cs
push
ror
pop
test
push
or
lds
stos
cmp
lds
hlt
push
sub
stos
and
aas
ret
sbb
pusha
pop
cmp
push
call
pop
hlt
cmp
or
inc
jnp
inc
or
pushf
sbb
loopne
dec
inc
mov
sbb
and
push
mov
add
in
add
call
sbb
pop
leave
mov
add
out
outsl
pop
call
dec
scas
mov
adc
and
mov
aad
repnz
lret
mov
push
addb
jmp
shll
or
or
sbb
lds
stc
notl
scas
movsb
push
testl
das
mov
mov
jge
nop
movb
adc
mov
and
dec
notl
das
or
nop
cld
cmp
pop
jmp
sbb
adc
je
sbb
inc
adc
jnp
dec
pop
xchg
mov
clc
xor
lahf
arpl
cmc
jmp
ljmp
add
out
jecxz
jb
int3
and
insl
arpl
loopne
fidivl
cmp
xor
or
sub
popf
or
adc
cmpsb
out
mov
mov
pop
or
ds
cmp
add
inc
xorl
insl
add
mov
push
out
jne
mov
jne
push
mov
loope
aas
push
cmpsl
or
cltd
dec
sahf
adc
lcallw
and
and
mov
push
mov
xlat
pusha
jmp
popa
jne
mov
insb
sarb
jne
call
rcrb
movsl
imul
jge
insl
cmp
pop
push
scas
inc
fmull
mov
add
call
loope
aas
jns
inc
fstpl
in
lods
cmpsl
xor
and
adc
mov
pop
xchg
cmp
in
pop
in
lods
or
mov
mov
sub
nop
in
xchg
test
add
add
xchg
mov
add
dec
out
inc
inc
mov
ret
adc
mov
inc
mov
jns
mov
fsubr
aam
addl
add
push
and
dec
jmp
repnz
shl
dec
jne
lahf
shr
sbb
xlat
adcb
pop
fisttps
mov
out
xchg
inc
addl
push
mov
pop
enter
cwtl
les
enter
fildll
shll
mov
mov
cltd
aas
cs
dec
xchg
test
xchg
xchg
test
jecxz
lock
or
inc
ret
adc
in
push
test
lods
lock
push
jmp
cmp
inc
in
test
lock
sub
cmp
add
movsl
shrb
mov
insb
and
sbb
push
mov
ljmp
pop
adc
fst
mov
adc
pop
add
ret
inc
pop
dec
sub
jne
imul
pushf
lea
inc
cli
cmp
test
add
dec
push
mov
xbegin
cmc
jne
orl
cmpb
hlt
push
test
out
lods
ja
xor
mov
movsb
popa
out
arpl
sbb
pop
aas
sub
sbb
or
xchg
mull
jge
icebp
sti
imul
jmp
and
add
mov
mov
xchg
test
jl
or
addb
inc
sti
adc
add
add
fisubs
inc
mull
jle
mov
repz
jmp
dec
loopne
mov
jmp
jg
inc
inc
data16
ljmp
adc
dec
adc
or
jmp
rorb
or
sbb
dec
push
push
scas
and
push
es
mov
sahf
insl
jbe
mov
ret
add
and
push
test
inc
cltd
js
jo
pushf
xor
add
jbe
sbb
in
xchg
fidivrl
or
mov
sub
adc
pop
inc
add
add
cmp
adc
les
inc
sub
mov
aam
dec
mov
and
pop
imul
clc
inc
xor
mov
test
jnp
insl
jo
sbb
ja,pt
and
pop
inc
push
adc
cmpsb
pusha
mov
dec
adc
lret
and
xor
mov
and
inc
addl
movsb
push
pop
sbb
mov
add
sbb
jl
mov
cmpsl
movsl
inc
or
inc
xor
pusha
push
adc
test
mov
xlat
cld
jne
shlb
daa
adc
stc
dec
outsb
xor
movsb
outsb
cmp
and
out
pop
pusha
cmpl
jb
pop
or
xor
mov
dec
pop
and
cmp
or
xchg
ss
sub
adc
jle
push
adc
or
cld
inc
lahf
ds
add
jnp
add
pusha
sbb
push
jo
jo
decb
push
out
or
jns
inc
ffreep
add
test
in
movsb
add
xchg
pushf
and
inc
sub
hlt
imull
lods
lods
cmc
je
enter
std
xchg
lret
push
ret
fildll
mov
dec
mov
and
push
std
push
fsubrp
adc
pusha
pop
jmp
adc
mov
inc
scas
and
nop
in
fdivr
gs
loop
inc
sbb
enter
ja
mov
test
in
add
outsl
out
pop
sbb
scas
js
sbb
mov
jne
leave
sub
mov
fnstsw
sbb
sub
pop
sbb
fcomps
lods
xor
je
adc
imul
pop
push
push
jns
sub
stc
push
lahf
xor
popf
mov
push
ds
mov
repz
lahf
lret
pop
mov
cmc
repnz
imulb
add
lock
push
sub
push
test
ds
mov
mov
ret
nop
enter
daa
adc
pcmpgtb
leave
leave
leave
addr16
leave
leave
leave
push
insb
insl
leave
leave
leave
leave
outsb
outsl
push
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
pop
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
pop
inc
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
inc
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
xor
leave
leave
leave
leave
xor
xor
leave
leave
leave
leave
ss
cmp
leave
leave
leave
leave
cmp
cmp
leave
leave
leave
leave
ds
and
leave
leave
leave
leave
and
and
and
leave
leave
es
sub
add
add
sbb
add
push
das
ss
rcll
aas
in
pop
mov
in
paddw
and
cmp
push
and
sub
add
pop
jae
fadds
loopne
xchg
inc
lea
push
std
test
pop
xor
mov
mov
insb
loopne
push
pop
mov
cmp
sub
std
xchg
and
nop
lock
cmpsl
adc
inc
cmp
jns
std
adc
cmpsl
gs
jb
jg
xchg
xor
pop
xor
mov
aaa
pushf
and
cmpsl
data16
bndstx
loop
mov
lea
or
outsb
shlb
jno
xorb
fwait
lret
pop
sub
or
jnp
jb
fistpl
or
push
ja
out
sbb
sub
sbb
loop
mov
loopne
fistpl
inc
add
repnz
add
test
jnp
xchg
add
fs
insl
flds
adc
pusha
adc
add
inc
jmp
lock
adc
push
mov
pop
dec
icebp
pop
pop
inc
xor
ja
add
pop
out
mov
mov
pop
enter
testb
mov
or
adc
js
push
adc
mov
push
sarb
rorl
or
cs
add
push
jbe
pop
pop
arpl
xor
add
mov
or
ds
pop
cmpsl
lods
mov
push
lea
imul
push
push
cmp
out
imul
pop
loopne
cmp
sbb
popf
push
cmp
cmp
add
pushf
mov
push
add
and
dec
xchg
lret
pop
add
daa
outsl
movsl
jmp
enter
push
mov
add
in
leave
leave
pop
xchg
lret
in
in
cmp
jns
xor
sub
or
cmp
push
fldenv
or
pushf
mov
and
dec
sahf
out
or
daa
or
jle
or
jecxz
stos
push
pop
sub
sbb
lods
test
into
lret
sub
mov
sub
mov
inc
in
icebp
jg
dec
ss
popa
test
movsl
or
cmp
imul
cmp
sbb
and
xor
push
fsub
inc
jae
in
or
or
addl
lods
sbb
xchg
icebp
shl
jmp
stc
jo
and
push
mov
adc
push
fiaddl
cltd
ficoml
inc
sub
jnp
jnp
add
in
jbe
jnp
or
andb
mov
mov
or
in
mov
ljmp
dec
test
gs
popf
jnp
gs
add
lods
shll
inc
inc
js
pop
xor
shll
inc
jno
rcrl
inc
add
nop
pop
dec
inc
jbe
imul
stos
popf
cmc
pop
rolb
in
dec
insb
outsl
xchg
cmp
cltd
push
pop
or
and
mov
push
push
mov
adc
call
jg
adc
xor
lock
add
lea
sub
mov
stos
or
sbb
popf
mov
addr16
gs
test
roll
je
rclb
push
cwtl
fisttpll
outsl
push
or
add
push
add
rcll
pushl
add
or
js
push
lret
stc
and
arpl
les
mov
loopne
rcr
lea
or
adc
sbb
leave
mov
outsb
sub
enter
push
dec
inc
jecxz
outsb
cwtl
mov
and
mov
push
and
arpl
dec
inc
xchg
arpl
scas
jecxz
andb
cld
push
push
es
dec
rcrl
sbb
gs
mov
mov
add
inc
cmc
push
outsb
lea
cmp
dec
leave
fldenv
stos
add
orb
dec
jno
scas
inc
iret
insl
jmp
mov
cmovne
xlat
add
inc
mov
or
pop
pop
roll
jg
mov
or
sub
icebp
addr16
inc
fistl
add
pop
enter
js
mov
cs
mov
add
adc
pusha
xor
adc
mov
xlat
xor
jl
nop
dec
pop
ja
mov
lea
mov
or
sbb
xchg
dec
fmuls
dec
adc
rcl
jb
adc
push
and
ja
and
dec
or
lock
adc
inc
mov
adc
pusha
mov
dec
int3
nop
dec
pop
and
nop
adc
inc
sub
addl
rorb
or
jp
add
orl
orb
cmpsb
mov
dec
sub
fs
jno
add
out
pop
mov
xor
mov
push
push
sub
cmpsb
adcb
repz
add
jmp
add
fwait
or
add
je
push
pop
add
push
imul
xor
and
inc
outsb
mov
sbb
add
loopne
or
mov
or
popf
push
inc
or
movsl
cld
and
imul
push
mov
stos
or
add
dec
or
inc
push
aam
jo
cli
repnz
pop
pushf
insl
adcl
mov
mov
push
xlat
inc
sbb
inc
ret
addr16
push
inc
outsl
jecxz
pop
ret
and
pop
or
sbb
pushl
adc
jnp
arpl
or
outsb
add
insb
inc
or
mov
and
andl
int3
push
lock
cmpl
or
inc
push
or
ljmp
add
mov
fbld
and
test
mov
or
leave
jmp
cmp
cmp
or
insb
in
mov
clc
int
or
cmp
push
add
pminsw
inc
mov
or
jg
cmp
sbb
les
sahf
or
test
mov
lods
adc
popa
sbb
pop
push
add
sub
add
mov
inc
push
sbb
push
orl
mov
inc
ret
dec
push
inc
ss
jbe
xchg
pop
shlb
or
pusha
inc
adc
fidivrs
ds
cs
push
push
ss
cmpsb
loopne
jg
push
inc
scas
sbb
es
addr16
inc
or
testb
mov
test
aaa
inc
lahf
push
ja
cs
cmp
and
or
nop
and
push
xor
or
sbb
or
adc
mov
jge
or
lret
dec
xchg
dec
sbb
movsb
rcll
adc
sbb
dec
adc
mov
dec
cmp
xor
and
sub
add
nop
inc
and
jle
adc
pop
pop
arpl
rorb
fldl
in
or
mov
pop
lods
mov
lret
pop
cmp
rolb
add
lds
add
addb
pop
and
fwait
test
add
jmp
or
mov
sahf
inc
sub
inc
movsl
inc
sbb
fisttpll
clc
or
add
sub
xchg
and
ja
or
fbstp
push
jge
xchg
hlt
mov
adc
pop
sbb
and
call
add
imul
pop
sub
add
mov
inc
and
mov
loopne
pop
or
adc
sahf
xlat
pop
inc
or
imul
out
mov
xlat
add
ss
dec
xor
dec
pop
pop
sarb
push
pusha
xor
imul
data16
add
fwait
rcll
and
cli
data16
mov
xchg
nop
mov
or
mov
push
movsb
sbb
mull
mov
ret
data16
xor
data16
pusha
lret
je
add
adc
rclb
imul
rcll
adc
insb
or
jae
xchg
cs
or
sub
jl
inc
pop
movzwl
pusha
and
xchg
mov
push
aam
lds
ds
gs
push
addl
setge
add
and
mov
pop
add
sahf
mov
jecxz
inc
sub
dec
rorl
add
jmp
pusha
mov
push
pop
jo
std
icebp
mov
jo
jae
add
sbb
or
push
xchg
nop
mov
xchg
or
cwtl
hlt
data16
or
cmp
nop
sbb
mov
inc
xchg
add
pushf
andb
pop
or
adcl
imul
mov
insl
inc
xor
push
push
pop
jo
push
or
out
dec
outsl
jo
je
fnsave
sbb
imulb
mov
lret
or
and
cmp
sbb
mov
xor
pop
notb
loopne
out
scas
loopne
or
adc
sbb
push
imul
lock
add
xchg
or
mov
push
inc
jb
cmpsb
inc
dec
cli
dec
pop
mov
repnz
add
dec
mov
pop
shll
jp
fimuls
sbb
xor
or
inc
repnz
cs
inc
outsl
jb
jae
iret
and
decb
or
add
dec
loopne
inc
push
inc
test
hlt
shlb
cmp
sbb
es
sub
js
or
dec
cwtl
and
idivb
pop
ja
or
mov
daa
mov
fcom
mov
and
pop
adc
mov
and
inc
shll
mov
xchg
movsb
adc
xor
xor
cmp
mov
fs
add
sbb
sbb
mov
xorl
es
pop
sbb
pop
movsl
or
sbb
add
add
and
sub
data16
cmp
dec
les
jecxz
adc
sbbl
das
xchg
loope
popa
shlb
adc
push
xchg
fs
pop
outsb
lods
rorl
sbb
jb
and
fisttpll
sbb
pop
xchg
pop
or
stos
and
inc
cmp
dec
pop
rolb
out
repz
subb
in
mov
add
and
aas
movsb
and
cmpsl
inc
or
or
loop
jl
mov
nop
and
shl
pop
sahf
push
in
add
sub
xlat
adc
xchg
mov
loope
or
dec
bound
xlat
test
shr
mov
sbb
inc
push
push
je
imul
dec
inc
cmpsb
dec
outsb
sbb
out
add
pop
inc
iret
jns
test
and
lret
dec
xchg
mov
test
or
es
test
mov
dec
call
mov
pop
dec
imul
mov
pop
pop
in
cmpsb
mov
or
dec
je
push
das
push
adc
xchg
dec
incl
inc
insl
cmp
push
jmp
cwtl
jb
mov
mov
cli
jmp
add
repnz
sub
sub
pop
cmc
mov
xchg
iret
or
dec
adc
lock
jmp
test
mov
dec
sti
or
sbb
int3
pop
insb
jp
pop
pop
jl
push
add
jb
xor
lods
and
xor
xor
mov
push
mov
xor
je
add
push
push
add
xchg
or
bound
jbe
ljmp
inc
sbb
or
xor
or
fsubl
das
bound
cmc
das
adc
and
sub
push
fsubl
push
das
add
add
pop
fwait
enter
enter
cmp
insb
pop
popa
in
and
sbb
jne
sub
ljmp
and
dec
sbb
push
das
pop
pop
bound
add
daa
jl
int3
test
pusha
roll
ds
repnz
and
fcompl
and
popf
sarb
fdivs
jne
add
xor
std
mov
sbb
fs
test
pop
jbe
or
fcoml
and
pop
in
das
or
sbb
pop
xchg
xchg
mov
in
punpckldq
enter
and
dec
push
sbb
lock
jns
and
mov
sub
ss
dec
mov
shll
dec
repnz
repz
push
jnp
jnp
pop
lds
repz
sarb
jl
fmuls
add
adc
insb
mov
and
sbb
jnp
cmp
lock
jecxz
or
nop
pop
mov
insb
sbb
mov
xor
divb
aam
add
cmp
mov
nop
cwtl
ja
or
popa
jo
adc
testb
dec
lret
push
ds
xchg
scas
or
dec
pop
or
adc
adc
sbb
dec
fmulp
or
daa
notb
addl
cmpsl
jg
daa
add
leave
sbb
aad
xchg
shlb
inc
inc
adc
add
lea
xchg
testb
xor
je
adc
add
insb
arpl
loope
adc
xor
sbb
inc
xchg
imul
xchg
cmp
sub
adc
sbb
das
add
ds
push
and
push
cs
rorb
inc
addb
stos
pop
adc
adc
fbld
jge
test
pop
xlat
dec
sbb
mov
adc
mov
or
add
sarl
xchg
pusha
sub
add
in
and
fistpll
mov
sub
rcrl
cmp
inc
adc
das
lods
pop
push
sarb
incb
or
pop
pop
dec
cmp
rorb
insl
in
adc
ja
pop
scas
sub
lods
je
shl
dec
xor
pop
mov
add
lret
sub
inc
xchg
jo
or
sbb
verr
std
in
decb
adc
xchg
sub
std
sub
push
decb
adc
pop
cs
cs
loopne
int
cmc
pop
pop
add
das
push
bound
sbb
ret
bndstx
loop
cmp
push
jbe
nopl
dec
xor
xor
les
pop
xor
das
insb
push
lret
shrl
mov
sahf
stc
das
xor
mov
sub
add
scas
add
xor
fiaddl
outsb
jl
xchg
ja
subl
add
shlb
mov
int
push
add
pop
xor
add
dec
fisubs
sbb
xor
pop
ret
into
leave
sbb
xor
pop
or
loope
jns
xor
xor
xor
add
inc
jo
sub
sub
or
cwtl
insl
xchg
or
cmp
sbb
pusha
aad
test
push
add
popa
add
push
shll
fldl
pop
fildl
pop
lcall
inc
pop
lea
or
or
dec
add
lret
and
cmp
mov
add
inc
adcb
sahf
sub
or
cmp
cmpsl
or
cltd
mov
nop
sbbl
adc
jo
test
fs
or
or
or
mov
xlat
mov
cwtl
jecxz
aaa
mov
loopne
push
das
adc
loopne
xchg
push
loop
outsl
addb
mov
rclb
sbb
mov
in
mov
mov
out
mov
jns
sub
mov
sbb
adc
adc
enter
dec
repnz
pop
sub
and
insb
ja
shll
mov
add
dec
xor
mov
dec
loopne
insl
jno
shl
mov
cs
sbb
in
adc
and
xor
pop
pop
pop
dec
dec
xchg
xor
pop
add
pop
popf
inc
pop
shl
add
dec
lret
lret
and
je
push
and
add
lds
cmp
je
test
mov
dec
inc
or
adcl
test
jns
xchg
mov
test
dec
pop
add
or
mov
or
je
jb
mov
pushf
test
lcall
mov
outsb
scas
pop
xor
cmp
imul
mov
mov
or
push
pop
insb
cmp
subb
fldl
sub
sbb
jle
dec
and
pop
mov
xorb
movsb
mov
pop
push
xor
xor
pop
mov
in
rolb
cmp
arpl
sbb
in
inc
xor
rcrb
adc
adc
iret
sbb
mov
in
sbb
mov
xchg
add
popa
adc
inc
imul
or
adc
add
add
push
insb
xor
repz
pop
ja
pop
call
je
or
imul
cmp
push
sbb
je
out
inc
nop
aas
neg
fmull
push
test
test
xor
cmpsl
clc
inc
test
iret
repz
or
add
jns
mov
add
push
push
mov
mov
mov
mov
inc
xchg
xchg
push
lods
cmp
es
add
inc
or
and
js
mov
pop
push
addr16
loopne
dec
push
int
pop
sarb
sbb
adc
aam
sub
movsl
aaa
int3
cld
jb
jecxz
dec
nop
dec
cmp
or
cmp
addl
imul
push
inc
das
ja
cmpxchg
cmp
adc
jb
add
mov
leave
adc
jg
mov
xchg
cmp
pop
push
out
cmp
pop
add
cmp
sbb
iret
sbb
faddp
imul
stc
in
fistps
push
add
add
push
and
and
aas
lods
lret
push
or
inc
jle
and
mov
fisttps
and
add
arpl
inc
add
roll
adc
rcl
add
adc
or
lret
addl
ss
stc
cmp
or
dec
shrl
mov
adc
call
and
mov
inc
or
add
rolb
sub
xor
rcll
loopne
pop
or
and
inc
push
mov
mov
push
adcl
rolb
add
popa
add
pop
push
mov
cmp
add
inc
popa
inc
ja
sbb
in
test
ret
or
inc
sbb
clc
sbb
sbb
sbb
sbb
adc
or
lock
or
stos
add
shll
dec
adc
arpl
pushf
or
add
cmp
in
mov
lea
jne
push
popf
test
popf
adc
dec
in
ret
xchg
sbb
aad
sbb
int
test
lahf
push
jmp
les
sbb
push
out
aas
and
int3
push
or
addr16
mov
in
adc
ret
ret
andb
mov
lods
lods
push
into
dec
inc
mov
les
xor
add
add
inc
aam
dec
cwtl
mov
pop
jp
add
and
or
addr16
insb
mov
mov
cmp
jo
jb
in
push
adc
out
and
or
adc
mov
or
xchg
and
sub
out
inc
or
inc
pushf
push
gs
std
fs
dec
outsl
ja
adc
push
and
or
xchg
sub
xorl
inc
pop
mov
shll
pop
imul
add
add
adc
ss
lahf
jmp
jo
je
sti
sti
add
ret
andb
push
sbb
lcall
jb
add
fldenv
ror
add
inc
sub
iret
xor
inc
dec
mov
adc
mov
sbb
pusha
mov
call
cs
je
jbe
test
jbe
add
push
in
popa
inc
mov
lods
mov
out
fcoms
pop
and
lock
movsb
inc
xchg
addl
sbb
scas
mov
jbe
cmpsb
aam
pop
pop
movsl
xadd
pop
add
mov
rorb
push
push
loopne
fsubs
pop
adc
loop
mov
scas
or
sub
push
fnstsw
and
pusha
sub
inc
xlat
in
and
or
enter
pusha
push
mov
push
dec
pop
jle
in
or
call
inc
push
inc
repnz
aaa
sti
xchg
inc
iret
inc
mov
out
repnz
psubd
inc
dec
push
js
pusha
std
pushl
movsl
pop
adc
idivb
sbb
pusha
cmp
adc
ret
popa
mov
cwtl
imul
imul
mov
sub
adc
jmp
xchg
adc
adc
fstl
ja
nop
out
and
pop
push
jl
cmp
bound
jb
mov
rcll
movsb
add
dec
ffreep
cltd
pusha
loopne
inc
inc
mov
or
xor
cltd
addb
int
sub
and
xchg
add
loopne
jg
aad
pusha
lods
lahf
in
stos
push
add
imul
cmpsl
negb
inc
pop
out
sbb
cltd
mov
xchg
dec
pop
mov
rcrb
mov
inc
inc
addr16
sbb
xchg
jno
inc
insl
jo
dec
jge
pop
and
cmp
cmp
xchg
mov
xchg
jns
cmp
jg
inc
xor
inc
movnti
repnz
or
dec
sahf
ja
dec
xor
pop
iret
cltd
xor
jnp
add
add
nop
jnp
sbb
cmp
mov
sbb
cmp
jnp
mov
out
dec
enter
push
inc
mov
subl
imul
iret
add
lcall
or
fisttpll
and
movsl
daa
add
mov
or
pusha
adc
pop
ja
sub
fwait
sbb
dec
dec
fistl
inc
iret
inc
dec
xor
cli
das
and
js
dec
mov
sarb
or
insb
dec
mov
or
andl
cmp
imul
aaa
cmp
imul
add
js
and
fsubrl
repz
add
adc
or
movl
pop
fistl
xor
dec
jb
xchg
mov
loopne
cmp
ud2
xchg
cmp
jne
ds
repnz
or
adc
pop
push
ds
inc
inc
jg
test
pop
test
into
mov
outsl
or
jo
push
sahf
pop
gs
jbe
je
xor
or
xchg
fstpt
cmp
sub
out
xor
xor
std
push
fadd
inc
sbb
out
insb
loopne
popa
lods
and
out
sbb
popa
data16
popa
iret
fs
sub
xchg
movsl
movlps
add
xor
mov
insb
lahf
adc
or
mov
xor
jne
pop
adc
dec
mov
in
jl
inc
dec
mov
rorb
adc
inc
pop
mov
xchg
mov
inc
and
mov
push
loop
mov
mov
push
inc
je
data16
repnz
clc
mov
icebp
outsb
rclb
add
push
adc
rcr
xchg
cmp
mov
pusha
outsb
aad
sahf
imulb
push
mov
jo
pop
lock
mov
jmp
enter
ss
push
mov
outsb
fwait
xor
loope
popa
xor
cmp
pop
mov
jae
sub
xor
sub
xor
adc
bound
and
add
cmp
dec
or
das
pop
jg
pop
loop
dec
scas
and
cs
push
sub
pop
lock
in
fidivrl
sbb
inc
dec
icebp
in
insl
testb
sbb
jo
push
adc
pusha
adc
push
and
je
lds
adc
leave
push
inc
dec
loopne
aam
and
inc
pop
dec
ss
dec
pop
sub
xchg
insl
mov
je
bound
sbb
cs
mov
in
sti
push
daa
sub
jno
pop
imul
movsl
insb
popf
ds
arpl
dec
loopne
test
pop
xor
dec
adc
adc
mov
stos
loope
add
into
dec
mov
pusha
mov
jb
cs
loope
xor
lods
adc
push
imul
or
icebp
jne
mov
rolb
and
xor
and
lea
push
icebp
adc
adc
fwait
lods
inc
test
je
nop
pop
pop
xchg
add
in
dec
inc
test
pop
add
je
mov
dec
push
insl
or
mov
sbb
or
lcall
xchg
les
and
cmpsl
ds
lods
int
test
test
or
jecxz
adc
xor
cwtl
or
cltd
push
mov
cltd
fsub
rorb
mov
mov
or
testb
or
dec
and
or
dec
insb
ret
rol
test
jb
xlat
inc
jne
sub
inc
push
and
mov
test
pop
test
cmc
pop
mov
and
push
and
xor
in
push
push
scas
cmpsl
add
or
ja
inc
adc
or
and
pop
rorb
pop
xchg
or
incb
push
or
mov
adc
lods
xor
lahf
pop
jno
lods
dec
sbb
rcll
dec
pop
sub
lahf
pop
test
jnp
shrb
cmp
cmpsb
or
daa
bound
fidivl
inc
push
aam
outsl
xor
inc
ja
out
or
outsl
int3
push
dec
pop
stc
pop
outsb
in
inc
sbb
push
and
jns
outsl
push
fisubl
cmp
cld
add
popa
xor
add
sub
adc
or
popl
adc
cmc
dec
inc
push
pop
fcomp
in
push
sti
push
ret
xchg
sub
push
rcll
pop
pop
xlat
push
arpl
pop
out
or
pop
pop
ds
add
enter
pop
jo
push
jno
rorl
dec
scas
inc
jecxz
gs
mov
xor
outsl
stos
or
inc
adc
shll
mov
insb
lahf
fisttpl
mov
lahf
and
push
adc
frstor
push
mov
adc
add
sub
gs
gs
add
test
add
pop
mov
xchg
arpl
scas
pop
ja
pop
scas
mov
push
fdivrp
xor
add
adc
jnp
push
ljmp
es
das
inc
insl
or
push
cmpsl
jecxz
add
in
pop
jbe
push
adc
mov
jb
ret
dec
rorb
pop
sbbb
in
loope
pop
pop
dec
pop
sbb
fwait
in
xrstors
pop
ja
inc
cmp
fwait
adc
shl
and
cmp
mov
test
pop
mov
add
sbb
ja
adc
xchg
adc
xchg
sbb
cmp
rorb
push
addb
leave
pushf
sbb
jnp
pop
dec
or
outsb
inc
mov
dec
movsl
mov
jge
ret
fdivrs
xchg
nop
mov
inc
and
aaa
fmull
in
sub
pop
add
push
push
mov
mov
pop
inc
fcomp
add
jg
or
push
lret
inc
insl
jne
rol
push
icebp
dec
and
jecxz
sbbb
pop
dec
pop
lods
out
pop
insb
pop
push
sub
xor
flds
hlt
pop
inc
loopne
loopne
jp
adc
xchg
cmpl
sub
sbb
mov
xor
ret
mov
xor
inc
dec
jne
insb
cld
add
mov
sub
inc
mov
insl
cmc
ss
dec
push
fcomps
sbb
ljmp
and
insb
das
orl
push
xor
or
popa
test
or
push
xchg
pop
fisttps
and
mov
inc
sbb
mov
je
dec
jne
cmp
xor
jge
mov
add
push
in
adc
or
ficompl
push
dec
lock
adc
jp
dec
out
les
add
decl
and
push
mov
fs
sbb
rclb
mov
mov
mov
jno
dec
ljmp
inc
adc
loopne
imul
adc
dec
xchg
xchg
int
xor
sub
cmp
dec
loop
add
mov
or
add
idivl
aas
insl
std
adc
pop
testl
add
addr16
xchg
ss
adc
mov
pop
stos
bound
push
fs
sbb
xchg
cmpsb
pop
dec
or
cmp
testb
xchg
xor
and
popa
dec
mov
pusha
mov
push
or
adc
mov
adc
push
shll
inc
ljmp
add
fprem1
push
adc
stos
add
cld
add
sub
pop
stos
adcb
add
das
pop
and
repz
dec
sub
add
jbe
pusha
or
lock
adc
adc
pop
sub
test
xchg
mov
push
jmp
jmp
aad
or
adc
mov
adc
std
mull
test
mov
hlt
mov
test
sub
mov
mov
push
cmpsl
inc
movsl
subl
or
and
arpl
or
sub
sbb
out
adc
das
adc
and
mov
inc
data16
aaa
dec
push
cmp
rorl
xor
aam
jns
push
push
jnp
ret
add
fwait
pusha
mov
jp,pn
aaa
pop
popa
scas
rcll
in
popf
sbb
jb
add
in
add
pop
dec
outsb
jecxz
shlb
pop
in
enter
jne
mov
inc
xor
push
out
popa
ja
xor
push
push
sbb
ret
outsb
mov
or
push
js
pop
xor
call
push
fadd
push
imul
push
scas
fiadds
insl
ja
push
adc
push
fbstp
inc
fwait
xchg
mov
inc
sahf
jo
sub
jo
es
add
imul
lods
xchg
jnp
cmovle
xchg
sbb
sub
out
dec
enter
out
push
pcmpeqb
sbb
dec
adc
fistl
ret
fs
mov
stos
popa
sbbl
or
fsubl
iret
loop
mov
sbb
or
mov
stos
dec
or
jnp
sbb
or
mov
aaa
inc
pop
push
sub
mov
push
outsl
cs
aas
adc
dec
aaa
adc
mov
mov
adc
sbb
add
inc
or
aas
lahf
push
insl
adcb
push
ret
cmpsl
daa
jb
aas
or
cmp
andb
dec
pop
out
addl
outsb
push
or
outsb
pop
test
xor
add
jecxz
sbb
xchg
out
aas
or
cmp
insl
cmpsl
dec
ja
sbb
jl
and
adc
xor
add
add
hlt
outsb
pop
mov
xor
ret
out
rorl
jb
pop
or
cltd
cmp
lods
jns
pop
roll
rorb
mov
hlt
sbb
aaa
xor
pop
inc
push
scas
inc
sub
stos
cmp
cmp
es
cmpsb
adc
adc
jae
pop
scas
fcomps
sbb
push
push
push
dec
sub
mov
pop
mov
shl
data16
pop
int
fiadds
xor
xor
call
mov
outsb
repz
dec
jp
cmova
inc
ficomps
fmuls
push
push
push
xor
pop
add
dec
sti
scas
lock
xor
fcoml
push
inc
push
inc
push
or
jnp
push
pop
stos
push
loop
sub
mov
jnp
inc
shll
pop
adc
push
arpl
loopne
inc
pop
dec
push
test
dec
inc
dec
dec
push
mov
ficompl
inc
cmp
cmpsl
mov
add
or
mov
mov
add
mov
test
lea
jns
ror
xchg
mov
fs
mov
push
add
cmpsb
mov
or
add
xchg
mov
add
lds
mov
sbb
mov
push
mov
xchg
movsb
or
divl
or
lea
mov
push
cmp
je
and
js
test
insl
sub
pop
add
or
adc
and
xchg
or
or
pusha
mov
sbb
mov
test
inc
push
test
sbb
dec
xchg
dec
add
cmp
mov
add
sbb
aaa
fiaddl
and
mov
fbld
daa
push
negl
test
aam
pop
xchg
movsb
jne
push
adc
jle
and
inc
pop
lahf
and
insl
mov
js
jb
xchg
wrmsr
subl
das
data16
mov
pop
andl
push
sbb
adc
faddl
arpl
xchg
push
mov
xor
outsl
test
xchg
cmp
bound
fwait
sti
lock
push
pusha
inc
adc
and
mov
pop
mov
cmpsl
jne
lret
dec
push
jnp
jae
aam
add
pop
ret
outsl
pop
sarb
push
sbb
pop
cmp
iret
cwtl
or
add
dec
fucomi
adc
or
insb
test
cltd
push
jb
push
cmp
and
xchg
xlat
inc
jb
pop
rclb
lea
lods
dec
cmp
or
jae
sbb
xchg
adc
dec
dec
lods
pop
test
adc
nop
push
aad
out
push
xchg
sbb
cwtl
add
cmpsl
or
sbb
movl
nop
xor
in
push
lods
pusha
push
sbb
or
add
aaa
cld
adc
or
icebp
or
cmpsl
jmp
or
fs
pop
xor
pusha
inc
inc
add
lock
xchg
add
fdivp
and
popf
jecxz
nop
pop
lods
mov
testl
xchg
inc
clc
les
xchg
and
inc
leave
lock
call
sbb
adc
mov
add
addb
dec
jge
mov
fidivrl
test
jmp
test
test
scas
stos
std
scas
in
push
push
or
or
stos
in
or
ljmp
nop
push
jo
jno
or
sbb
mov
lods
mov
xchg
pop
pop
dec
mov
shrb
sub
sub
xor
enter
or
mov
mov
repnz
imul
add
jo
je
pop
cwtl
pop
inc
or
ja
and
jecxz
jae
cwtl
pop
pop
xchg
or
pop
add
or
push
and
inc
invd
jge
xchg
or
xchg
and
rorl
xchg
mov
dec
dec
pop
mov
xchg
add
xor
outsl
mov
push
push
shrb
ss
scas
xor
fildll
neg
test
js
nop
pop
xor
pop
push
sbb
mov
xlat
sub
hlt
mov
xor
cmp
je
outsl
dec
pop
push
jne
lret
outsb
dec
adc
pop
or
cmpsb
out
sti
in
loope
mov
mov
sbb
jg
sub
and
test
mov
lods
mov
mov
push
jno
mov
dec
xor
cs
jno
call
mov
xchg
xor
sub
dec
sub
push
imul
repz
add
cli
jbe
inc
dec
inc
fstp
divb
lcall
gs
jo
jl
or
out
in
and
add
sahf
jne
push
mov
jp
xor
in
jae
push
push
mov
push
push
mov
fnstenv
sbbb
fadds
lret
aam
jmp
mov
in
xchg
mov
aam
jecxz
lret
faddl
iret
mov
inc
loopne
movb
cmpsl
pop
and
nop
dec
push
push
daa
je
test
or
jbe
pusha
cwtl
dec
dec
add
push
enter
test
out
push
sbb
mov
xchg
dec
lock
mov
out
jno
dec
lock
insl
dec
js
test
movl
adc
dec
adc
and
imul
push
add
cmpsl
or
xchg
adcb
js
cmp
popa
xlat
idivb
add
call
adc
js
add
mov
or
xlat
cmp
popf
push
lods
pusha
xor
adc
cmpsb
or
cmp
mov
mov
xchg
sub
cmp
subb
or
xor
xchg
xchg
or
hlt
jmp
push
jns
je
push
push
push
pop
iret
addb
add
push
addr16
jmp
shr
in
xchg
roll
cmpsl
and
movsl
cld
ljmp
push
fiadds
lock
and
test
or
lods
or
mov
lcall
dec
stos
pop
inc
cmpsl
mov
cltd
subb
pop
stos
xchg
mov
and
inc
adc
jp
enter
cmp
push
cmp
daa
dec
sbb
fs
dec
and
call
lock
mov
into
jg
mov
push
mov
loope
cld
sbb
insb
int3
fimull
ret
sbb
insl
adc
jns
and
push
xor
adc
or
add
jno
rolb
call
sub
jl
push
mov
xor
xor
mov
add
out
js
adc
mov
pop
push
xchg
pop
popa
mov
in
out
and
or
adc
jp
lcall
movsl
mov
in
call
dec
mov
xor
outsl
or
ret
dec
inc
cmp
call
xor
or
js
push
push
add
aad
inc
pop
cwtl
mov
cmp
sub
xor
mov
adc
test
jbe
push
inc
xor
cmc
xchg
push
sub
out
jo
jo
dec
das
test
aas
insb
mov
mov
iret
xlat
inc
jle
sbb
inc
ret
and
pop
jae
adc
xor
push
mov
add
cltd
dec
pop
add
inc
sbb
sbb
push
or
add
pop
add
push
mov
mov
sahf
sub
cmp
inc
add
fadds
lret
pop
inc
imul
push
lock
or
sbb
stos
out
inc
inc
sub
pop
test
add
repnz
bound
sbb
gs
test
inc
ja
inc
dec
and
icebp
lea
dec
jne
sub
push
das
or
sub
cmpsl
sub
mov
jg
sti
je
push
outsl
insl
xor
xor
sbb
and
pop
inc
repnz
xchg
add
imul
add
scas
sbb
inc
mov
sub
movsl
inc
or
mov
pushf
les
and
sub
jae
push
scas
xlat
jne
sub
adc
push
adc
pop
imul
stos
call
imul
sbb
ja
jb
xor
jbe
sbb
adcb
inc
xlat
add
loopne
fadd
and
add
clc
imul
push
cmc
cmpb
inc
mov
in
push
push
xchg
push
add
push
shlb
push
hlt
pop
sbb
ja
ret
cmp
mov
repz
fsts
inc
add
mov
inc
xor
push
ja
xorl
fwait
jno
gs
shlb
stos
pop
call
in
inc
pop
loop
loopne
xchg
add
mov
jae
out
lsl
inc
fcompl
mov
or
in
scas
mov
cmp
int3
sbbl
outsb
sub
lods
jno
push
add
lret
jno
mov
adc
cltd
inc
and
cwtl
mov
add
push
cmp
cmpsl
mov
mov
leave
cmpsl
or
push
push
push
mov
push
mov
enter
or
dec
rorl
or
xor
push
jb
loop
ja
sub
push
push
inc
or
cmp
movl
inc
and
inc
imul
arpl
mov
xor
sub
or
inc
pop
pop
pop
insb
fwait
rcrl
jle
dec
out
and
repnz
insb
and
sbb
xor
xchg
aam
push
dec
add
add
leave
and
push
mov
or
mov
je
popa
pusha
xchg
mov
xchg
adc
ljmp
xchg
inc
lods
inc
repnz
fmull
out
test
xchg
pushl
lds
inc
imul
mov
test
dec
enter
mov
enter
orb
add
enter
test
jge
insl
enter
jo
or
pusha
push
sub
adcb
xchg
in
stos
nop
test
cld
inc
jns
or
cmpsl
fdivs
xchg
je
leave
add
mov
test
push
inc
add
stos
enter
loop
pop
das
push
mov
and
inc
scas
fcoms
dec
push
cmpsl
cmp
mov
push
scas
add
ret
xchg
push
mov
fists
testb
je
push
mov
cld
fldenv
sbb
jnp
stc
sub
pop
aaa
clc
mov
xchg
mov
jecxz
cmp
fstpl
das
pop
aam
shrb
pushf
inc
add
mov
inc
mov
sbb
rclb
mov
inc
pop
clc
loop
inc
xchg
test
lcall
in
jmp
push
repnz
mov
xchg
push
stos
shlb
jns
hlt
sarb
repz
fldl
sub
jo
and
push
stc
je
sbb
testb
shl
sbb
in
and
ret
push
adc
pop
add
cmpsl
or
sbb
std
cwtl
xchg
or
mov
sub
ret
inc
rolb
mov
fstl
cmp
or
inc
add
adc
mov
hlt
imul
xchg
pushf
push
cs
les
sbb
ret
lret
jecxz
test
test
jmp
dec
and
scas
bound
mov
shlb
sub
sub
loope
xor
pop
fwait
mov
add
stos
push
aad
adc
je
xor
out
or
push
push
xchg
xchg
js
push
sub
rclb
pop
dec
sbb
mov
inc
sub
lcall
dec
movsb
iret
movsb
adc
mov
dec
xchg
sbb
mov
dec
pop
aam
add
or
inc
push
stos
and
xchg
sub
iret
xchg
sbb
int
lea
xchg
add
dec
jae
pop
dec
dec
add
aas
not
and
cli
cmp
shlb
add
add
push
push
cmp
mov
repnz
sbb
jnp
sub
fmuls
add
jo
pop
fdivrs
es
mov
aad
add
dec
pop
orb
sub
arpl
sub
orb
pop
push
xchg
mov
push
dec
push
sbb
out
outsl
sahf
rclb
pop
cmp
shll
sbb
push
push
shl
fwait
mov
ret
je
test
daa
or
js
jmp
jle
leave
lret
sub
cltd
insb
push
jo
add
push
push
jbe
xchg
add
or
mov
push
pop
or
inc
push
cmp
stc
jl
inc
bound
addr16
push
test
cld
lods
mov
cmp
sub
push
daa
pop
sbb
movl
jl
adc
bound
popf
xlat
adc
daa
jae
cs
add
andb
sbb
adc
std
lods
aas
push
lret
jno
add
and
or
test
aas
dec
incb
xor
push
clc
test
push
mov
jg
inc
fisubl
pop
movsb
xchg
cld
js
sbb
sar
nop
cmp
data16
imul
clc
xor
and
ljmp
and
xchg
imull
repnz
das
lea
fcompl
fstl
cmp
aaa
jmp
mov
sbb
enter
dec
jo
inc
dec
popa
xchg
out
jmp
andb
outsl
pop
push
test
or
sbb
ds
movsb
sub
popf
jp
scas
cmp
insb
sbb
adc
ret
hlt
test
add
test
bound
cmp
fwait
cltd
xchg
sub
jo
push
mov
pop
mov
bound
bound
lahf
movsl
scas
adc
jp
arpl
call
in
mov
adc
fnsave
mull
add
pop
in
mov
and
push
xchg
imul
les
dec
call
inc
mov
cmp
sbb
jg
pop
and
daa
jbe
ljmp
jmp
insb
mov
pop
fsts
in
daa
dec
mov
jg
add
shll
fldcw
jbe
or
in
dec
daa
fsubl
sub
js
and
test
int3
dec
sti
mov
pop
sub
popf
jne
pop
call
and
xchg
enter
push
lea
dec
arpl
int3
test
in
xchg
nop
push
inc
mov
push
and
repz
xchg
mov
or
adc
xchg
xor
and
push
addr16
adc
mov
movsl
rclb
mov
ss
lock
jmp
jns
pop
ret
sub
mov
dec
xor
inc
pop
ret
jge
sub
inc
inc
das
inc
inc
sub
lods
imul
loopne
movb
mov
ffree
inc
sbb
dec
mov
popl
rorl
push
es
xchg
xchg
call
out
ret
cmp
add
ficoml
sub
mov
or
lea
add
dec
pop
add
fidivl
mov
or
add
mov
shlb
adc
add
fcmovnb
inc
popa
int
popa
adc
test
or
popa
cmp
aas
adc
jle
mov
in
sub
dec
add
mov
je
pop
pop
sahf
dec
loopne,pt
lods
jne
cmpl
js
notl
adc
adc
mov
add
push
pop
push
push
and
cmp
and
mov
xchg
mov
dec
imul
cltd
dec
hlt
dec
js
add
hlt
jle
mov
aaa
add
bnd
or
xor
insb
and
mov
push
outsl
xlat
add
or
mov
jmp
movsb
out
movw
add
cli
sub
or
mov
sbb
enter
cld
aad
xchg
push
cld
push
rorb
jl
cmp
insb
cmp
dec
cmpl
mov
add
icebp
mov
mov
lea
xchg
test
sbb
in
xor
addr16
xchg
dec
pop
data16
sbb
cld
icebp
addl
pushf
jle
adc
leave
loopnew
add
int3
mov
mov
dec
xchg
clc
ror
loopne
push
arpl
out
inc
das
ljmp
in
or
inc
lock
and
xchg
inc
dec
xchg
in
fmuls
inc
icebp
bound
pop
andb
inc
cmp
or
or
inc
or
push
add
push
inc
cli
sub
dec
mov
inc
add
add
cmpl
je
and
jl
xchg
test
push
add
dec
enter
pusha
sub
xchg
dec
inc
pusha
test
pop
xor
push
mov
xchg
sub
fcoml
inc
push
outsl
int3
or
sub
adc
lds
or
xchg
dec
insl
push
sti
sahf
cltd
js
add
add
pop
sub
push
lret
xchg
loopne
shl
push
das
push
das
lock
push
lret
test
add
enter
lcall
shrb
ret
xor
add
fcom
add
loopne
add
call
fldcw
cltd
jno
andb
add
xchg
inc
xchg
out
addl
mov
push
lock
pop
push
shrl
mov
adc
cmp
and
inc
pop
push
mov
jns
add
lcall
mov
push
repnz
lcall
mov
xchg
jp
pop
jle
mov
fdivs
xor
push
jo
push
or
pop
dec
jne
sbb
sub
inc
cmp
add
adc
sar
out
imul
jg
test
jle
or
cmp
bnd
aaa
enter
cs
jg
and
inc
rcr
jle
adc
lret
fwait
push
sbb
or
scas
and
movsl
or
rcll
stos
inc
sbb
sub
inc
add
mov
aaa
mov
sbb
clc
scas
add
pop
pusha
test
std
adc
adc
push
xor
jno
fdiv
fcomp
or
fwait
xchg
flds
mov
xchg
xchg
sbb
cwtl
mov
and
or
push
dec
or
fcompl
cld
xchg
insb
rcll
sub
pop
ds
adc
out
lret
rolb
mov
adc
jge
jl
mov
lret
inc
ret
div
dec
cmp
jg
or
jl
push
inc
lea
pushf
adc
add
mov
and
pop
gs
fs
out
mov
or
loop
push
add
rclb
mov
or
mov
or
popf
ss
fwait
rclb
add
sub
jnp
ret
addb
dec
xchg
cli
pop
pop
inc
ret
dec
dec
enter
pop
test
lea
adc
enter
inc
mov
pushf
mov
add
imull
sbb
sbb
ljmp
lret
xor
ror
mov
rclb
add
push
push
mov
push
mov
mov
sbb
test
test
pop
aam
add
dec
mov
or
lea
mov
xchg
popa
add
ror
mov
or
hlt
nop
add
pop
or
push
inc
sub
xchg
lock
add
mov
xchg
push
push
pop
push
pop
fiadds
jmp
add
sbb
sbb
jb
pop
outsl
and
je
sbb
or
dec
lcall
sub
add
xchg
xorb
or
subl
dec
or
cmp
push
jle
lock
jmp
sti
cs
fmull
mov
mov
jmp
adc
or
idivw
data16
or
test
jae
and
insb
imul
dec
push
push
sub
pop
out
or
or
nop
pop
adc
shll
xchg
mov
xchg
xchg
mov
lahf
ds
mov
jg
div
add
add
es
jmp
test
pushf
scas
int3
mov
ret
push
xor
add
add
hlt
or
int3
adc
xchg
out
movsb
and
mov
adc
es
sbb
mov
rcrl
mov
push
rol
jle
aas
push
imul
sub
hlt
mov
xchg
ds
ret
jo
add
jo
aaa
loopne
imull
nop
cmp
push
dec
ja
xchg
cmpsl
add
lods
adc
je
imul
js
cmp
add
imul
push
push
in
hlt
cmp
movsb
xchg
int3
cmp
in
xchg
adcl
pop
imul
stos
adc
ficoms
rcrb
add
loope
loope
dec
shll
pushl
inc
xchg
add
cmpsb
mov
add
xchg
jb
pop
outsb
out
inc
adc
or
xor
mov
dec
cmp
push
dec
int
add
push
lods
or
lods
out
mov
mov
mov
mov
insb
ret
stos
mov
mov
sub
dec
lea
adc
add
rcrl
mov
fsubr
in
ljmp
push
dec
ror
hlt
loopne
fcoml
xor
lock
in
add
fmul
addl
and
clc
inc
mov
pop
movb
add
test
testl
pop
mov
inc
sub
ljmp
std
es
add
xchg
nop
das
jbe
pop
nop
mov
xchg
add
cmp
xor
adc
sbb
in
out
xchg
cwtl
cmp
inc
or
sub
popa
pusha
test
inc
fucomip
sbb
or
adc
iret
nop
sbb
cmpl
test
push
je
sub
sub
addb
dec
cmp
pop
push
xor
mov
rorb
inc
xor
iret
jae
loopne
mov
nop
cmp
mov
pusha
iret
pop
adc
push
mov
adc
mov
je
movsb
mov
push
or
xchg
and
add
enter
movsl
idiv
pop
pop
rorb
sub
or
jle
xlat
sbb
pop
adc
sbb
lcall
and
sub
push
cltd
or
pusha
sbb
movsb
je
or
push
pop
jo
mov
pusha
sub
push
inc
arpl
xlat
and
mov
addr16
fwait
and
dec
pusha
push
xor
int3
cmpsl
push
push
dec
pop
nop
test
sahf
pop
insb
notb
jo
inc
stos
or
sub
mov
mov
in
mov
insl
insb
sub
xor
or
push
sub
add
cmpsl
or
std
add
aaa
add
add
push
enter
rcl
jbe
cli
fcmovnb
push
aaa
cmc
addr16
in
lds
dec
pop
loope
lds
add
scas
jo
ljmp
dec
loope
pop
adc
mov
pop
cmp
pop
sbb
sti
xchg
jne
mov
xchg
test
jno
jmp
add
dec
loopne
sti
rcrb
sbb
rol
sbb
pop
sbb
push
jo
jge
sbb
and
lahf
jle
xor
es
enter
rcll
xchg
add
movb
out
subb
rolb
js
mov
xlat
xchg
add
adc
or
and
aam
add
xchg
inc
xlat
dec
dec
loop
movsb
mov
repnz
fimull
jmp
sub
xor
jle
inc
cmp
ljmp
sub
sbb
ljmp
inc
inc
dec
pop
out
rolb
add
xor
cmp
mov
sub
and
roll
and
jo
jg
mov
jle
popl
insl
es
ja
dec
adc
cs
pop
aam
lock
pop
mov
sbb
cmp
adc
stos
push
inc
movsl
mov
xchg
aaa
rcl
push
icebp
push
decl
jne
imul
loope
mov
push
out
add
mov
imul
bound
pop
leave
ret
push
add
sub
mov
jbe
push
cmp
xor
xchg
pop
dec
inc
stos
sti
sub
sbb
insl
add
repz
lock
subb
and
das
jns
or
xchg
call
ljmp
jp
add
inc
stc
or
adc
call
rolb
push
and
bound
push
inc
mov
mov
sub
je
xor
mov
es
adc
test
adc
inc
loopne
dec
adc
jmp
cmp
jne
dec
and
or
stos
cmp
inc
push
rorb
cli
pop
lret
sbb
sbb
sub
inc
fsubp
stc
sbb
sbb
fdiv
or
sbb
add
mov
movsl
nop
lret
sbb
inc
cmp
xchg
push
sbb
inc
jge
mov
sub
dec
idivb
inc
jge
add
pop
loopne
dec
cld
sbb
or
inc
lret
mov
sub
js
or
inc
dec
insb
daa
es
xchg
fisttps
inc
mov
push
ret
adc
add
cwtl
add
sbb
sub
jbe
adc
pop
scas
call
out
xchg
pop
leave
dec
mov
out
push
fmuls
enter
adc
shll
sahf
insl
push
and
lods
ss
push
jo
fistpl
int3
sub
rclb
fcomps
dec
movsl
pop
add
push
cmp
ret
movb
pop
imulb
cmp
stos
in
dec
aaa
and
mov
popa
fwait
subb
fisttpl
xchg
loopne
or
jmp
and
sahf
mov
mov
imul
idiv
adc
adc
sub
in
adc
push
adc
imul
inc
ss
xchg
sarb
jno
gs
clc
xor
adc
aam
push
fadds
or
insl
xchg
daa
dec
cmp
jne
mov
xor
pop
mov
or
mov
mov
jl
pop
popa
sbb
add
and
sbb
cli
fldt
outsl
jg
mov
mov
pop
sahf
mov
in
adc
out
push
aam
pop
iret
sbb
add
divl
sub
lret
pop
mov
mov
clc
sbb
pop
mov
mov
mov
pusha
int3
jge
aas
sub
push
sub
xchg
adc
and
mov
bound
daa
push
shlb
mov
dec
xor
loopne
jp
xor
sbb
push
xchg
aaa
inc
fcoms
pop
or
sbb
loopne
loopne
mov
jne
mov
xor
and
sbb
pop
push
sti
push
inc
inc
push
nop
pop
jecxz
orl
es
arpl
push
or
jae
jecxz
out
mov
mov
nop
jp
enter
sbb
xchg
adcb
add
sbb
push
sbb
xchg
sub
iret
and
lock
push
add
mov
jo
mov
add
rorb
xchg
jmp
or
xchg
mov
outsl
nop
xchg
js
push
inc
out
and
jp
nop
inc
and
cmp
pop
mov
xor
adc
mov
stos
ret
iret
mov
mov
inc
pop
jecxz
mov
pop
add
fdivr
mov
inc
xor
fs
mov
leave
hlt
mov
mov
xor
lcall
or
into
testl
sahf
cmp
and
punpcklbw
add
ja
mov
push
mov
xchg
rorb
pusha
sub
pop
cmpsl
imul
stos
testl
cmp
stos
hlt
mov
pop
pop
js
in
popa
adc
aas
into
test
fld
push
aaa
pusha
sbb
add
ror
adc
sbb
or
and
inc
cmp
dec
lock
inc
aam
add
rolb
loopne
add
unpcklps
bound
mov
mov
andl
add
aas
test
movsb
fistpll
adc
push
inc
fbld
push
in
adc
mov
xor
shlb
or
jge
sub
shl
mov
and
and
xor
idivl
ljmp
rcrl
pushf
rclb
enter
enter
es
mov
std
xchg
mov
or
adc
jge
ss
lods
and
movsl
or
xchg
cmpsb
inc
pop
outsl
movsb
inc
pop
hlt
fcomps
repnz
mov
pop
inc
pop
inc
ret
adc
lret
or
push
mov
lock
inc
clc
aam
jo
mov
mov
mov
dec
rolb
push
sbb
subb
rorl
mov
shlb
xchg
push
add
inc
and
cld
addr16
rcll
scas
scas
pushf
mov
push
or
dec
inc
push
ffree
mov
inc
xor
xor
aaa
fnstsw
mov
rcl
xchg
fs
mov
fcoms
push
js
add
ret
mov
notl
roll
fcmovu
push
iret
add
pop
or
jns
ret
add
in
out
xchg
cmpsb
das
negl
loopne
lock
movsb
dec
ret
fwait
in
rcrb
adc
mov
mov
notb
sbb
push
sbb
ljmp
mov
mov
push
sub
dec
in
scas
shl
nop
pop
xor
cmpsl
lods
mov
or
call
ss
xor
cmp
adc
loopne
das
or
sbb
fdivs
push
xchg
cmp
sub
insb
cwtl
std
or
sbb
xor
fcoms
std
dec
push
les
or
or
int
xorb
sub
and
sub
lret
imul
and
jne
outsl
pop
jp
outsb
pushf
mov
dec
popf
ficompl
pop
add
adc
cltd
pusha
sbb
sbb
jge
and
dec
mov
push
loop
mov
pushl
loope
loope
sub
rcrl
pop
movd
test
push
mov
add
xorb
pop
bound
mov
xchg
xchg
mov
subb
pushf
mov
mov
mov
mov
gs
mov
and
dec
inc
adc
push
dec
push
mov
ja
test
xchg
mov
inc
ja
pop
sub
cmc
pop
mov
pop
cmp
jnp
xchg
lock
push
sbb
push
test
push
andl
icebp
and
imul
stc
push
push
mov
or
xlat
sub
ss
pop
movsb
xchg
xchg
nop
cmpsl
fbld
clc
sbb
js
or
cmpsb
sbb
aam
iret
cltd
xor
pop
divb
xchg
stos
adc
test
dec
test
adc
add
test
inc
or
mov
push
mov
push
adc
pop
xchg
imul
jp
mov
sub
in
sub
fbld
lahf
or
rcrb
rorb
lret
pop
mov
add
ds
fldl
pop
mov
scas
mov
fmull
lea
sub
mov
stc
adc
je
sbb
or
or
fldt
sbb
or
cmp
mov
xorb
mov
lods
movsl
das
add
jmp
std
popf
jne
sbb
mov
jmp
mov
add
mov
add
aam
push
sub
or
idivb
dec
sub
fiadds
pop
add
fs
js
fists
lcall
aam
shl
adc
sbb
jmp
jo
scas
cmp
mov
dec
insl
lods
cmp
pushf
out
push
push
add
idiv
pusha
or
and
daa
mov
mov
sub
xchg
add
frstor
push
sub
inc
inc
cmp
ja
outsl
push
inc
addb
jge
aam
push
adc
add
or
sbb
add
add
or
jl
dec
jns
push
sub
daa
jg
pop
add
dec
adc
loopne
add
mov
cmp
mov
push
inc
dec
push
cmpb
jecxz
or
test
fcomps
mov
mov
test
pop
arpl
jle
inc
xor
sahf
jne
fildl
lock
gs
cmpsb
mov
xor
pop
dec
js
xor
pop
lock
insl
sbb
adc
cmc
aaa
pop
xor
gs
daa
cmp
pop
lahf
adc
adc
and
dec
aam
aad
lret
rorl
adc
ds
pop
dec
inc
in
pop
add
dec
adc
adc
aam
xor
ja
jne
jnp
jae
bound
pusha
iret
sub
sbb
xchg
loope
add
jne
and
inc
insb
inc
enter
inc
push
adcl
ret
ret
mov
cmp
xchg
dec
insb
adc
mov
pop
fst
aam
lret
lret
add
push
mov
push
stc
aaa
pop
movsl
sbb
pop
sbb
mov
xchg
les
fistps
les
lea
cli
mov
adc
xor
nop
sbb
mov
jecxz
outsb
test
dec
loop
dec
or
xor
outsb
mov
xorl
adc
adc
push
adc
sbb
xlat
dec
movb
push
xor
jecxz
cmp
movl
fimuls
mov
mov
dec
pop
mov
xorl
mov
mov
cmp
pop
outsb
loop
push
xchg
pop
mov
imul
jnp
mov
adc
and
or
push
add
push
outsb
or
cmp
jo
pushf
fisubrl
push
lret
aad
and
add
pop
mov
mov
xor
xor
pop
hlt
mov
jo
inc
sub
cmc
pop
mov
rclb
pusha
add
cmc
and
xchg
sub
inc
and
test
mov
movl
js
sbbb
lea
mov
adc
shll
or
sub
xchg
mov
popf
stos
inc
inc
push
decb
es
movsl
cmp
jno
mov
test
xorl
adc
push
inc
dec
daa
insb
lds
imul
xchg
outsb
movsl
je
inc
cwtl
sahf
and
inc
movsl
mov
and
outsb
push
xor
fadds
pop
push
jle
les
lods
xor
push
out
cmp
or
adc
fsub
jne
push
cmp
push
push
and
or
jbe
std
loopne
shlb
add
cmpl
inc
mov
dec
adc
mov
mov
lds
insb
push
sbb
cmpsl
jge
daa
mov
mov
or
pop
lods
lahf
ret
out
jb
inc
cwtl
jo
inc
mov
popf
test
jge
mov
clc
sub
std
lahf
mov
andl
push
and
push
adc
inc
dec
xchg
call
rorl
and
pop
sub
fiaddl
daa
aaa
or
adc
mov
test
pop
mov
neg
xchg
inc
les
push
loop
mov
push
hlt
lock
je
push
sub
mov
dec
sarb
pushw
jns
inc
adc
ljmp
mov
xorl
mov
inc
jge
fs
xor
dec
mov
and
test
push
or
xor
lcall
cltd
cmp
sbb
mov
fdivrl
lock
mov
je
inc
shrb
add
fwait
dec
xor
inc
outsb
jge
jl
or
test
les
jno
lret
add
clc
into
imul
jne
add
aam
int3
jmp
int3
loopne
sub
sub
push
adcb
nop
sub
int3
std
pop
mov
push
mov
add
arpl
es
push
or
repnz
loopne
xchg
pusha
lret
int3
adc
pop
xor
mov
sbb
and
cmp
pop
scas
sbb
loope
push
fdivl
pusha
cmp
adc
sahf
inc
in
pusha
xor
in
lret
leave
sbb
xchg
fsubs
sbb
repnz
hlt
in
and
loop
lcall
les
jbe
adc
lret
mov
or
movsb
pop
pop
cmp
imull
insb
rclb
imul
sub
pusha
test
enter
add
int3
xchg
call
out
fists
push
pusha
add
add
imul
adc
sahf
lret
cmp
cmp
pushl
add
lret
sub
push
and
push
add
pop
sub
and
insb
add
bound
adc
dec
retw
add
pop
push
les
and
or
add
test
fs
add
inc
imul
sbb
jbe
loop
mov
notl
or
cwtl
rorb
add
adc
fstpt
insl
push
jmp
sbb
and
xor
shl
sub
xchg
adc
aaa
mov
mov
pop
adc
dec
dec
aas
rcrl
subb
sarl
fmuls
sbb
sub
and
jp
cmp
lret
xor
sahf
mov
push
rclb
imul
cmp
xchg
ficoml
outsl
push
or
sub
add
mov
outsl
adc
rcrl
sbb
push
jno
cwtl
int
fucom
inc
ret
xchg
mov
out
inc
xchg
or
adc
jne
xchg
lea
pop
xor
pushf
or
sbb
jo
or
loopne
popa
adc
call
lea
shlb
and
adc
in
jg
pop
aaa
or
xchg
fbstp
imul
insb
and
or
pop
mov
or
packsswb
pop
ja
lea
push
dec
xchg
cli
or
add
push
dec
out
push
and
pop
movb
lods
and
es
push
test
add
mov
jns
xlat
adc
mov
and
inc
js
subb
lock
rol
stc
and
cmovns
dec
xor
jge
pop
and
or
jmp
mov
add
inc
punpckhwd
in
inc
inc
inc
or
iret
addl
add
sbb
jo
sahf
or
je
pusha
inc
mov
push
mov
shlb
xor
dec
je
push
mov
add
mov
inc
cmp
jp
in
push
cmc
push
sub
cmp
add
mov
or
mov
inc
mov
dec
push
cmpsl
sbb
shlb
es
dec
mov
add
jl
pop
leave
sub
pop
sub
dec
btcl
dec
testb
sbbl
in
adc
or
push
shr
scas
lret
push
inc
jnp
movsb
or
pop
xchg
sbb
inc
jmp
insb
rclb
push
xor
jge
sbb
xchg
push
shll
add
push
mov
and
add
xor
fcom
jnp
inc
cmp
cmp
aaa
in
adc
or
mov
or
pop
dec
mov
subb
sub
test
adc
rolb
pop
scas
and
test
out
add
sbb
cmp
adc
and
or
adc
in
je
sub
pusha
mov
sbb
push
fwait
out
add
inc
pop
dec
pop
insb
subps
xor
lods
add
jmp
bound
sub
dec
addr16
and
mov
lods
sub
push
push
mov
xchg
inc
ljmp
jno
push
dec
add
les
xchg
jb
ja
push
or
scas
xchg
mov
adc
insl
inc
pusha
lcall
sbb
cmc
jnp
aad
and
adc
xchg
sub
dec
add
inc
or
or
xlat
subl
sarl
mov
cmp
add
xorl
mov
dec
mov
nop
mov
sub
sub
xchg
sub
adc
jbe
cmp
cwtl
adc
sahf
mov
add
or
leave
adc
add
subl
xchg
repnz
out
daa
and
mov
movsb
mov
cmp
leave
sub
adcb
xor
push
push
sbb
in
inc
xor
adc
and
fiadds
jle
cmpsb
inc
push
push
jle
sbb
pusha
adc
mov
in
in
jecxz
jmp
inc
push
xor
jg
fistl
je
ss
jns
lea
mov
and
jo
and
dec
inc
sbb
pop
adc
je
push
push
push
aam
pop
pop
movsb
push
add
mov
sbb
inc
mov
jne
dec
mov
or
inc
xchg
mov
jp
test
lock
mov
fistpl
mov
mov
incl
xor
lock
cmp
je
or
ja
rolb
and
sbb
push
test
ret
popf
or
jo
mov
js
jo
cld
rorl
push
mov
xchg
adc
and
call
and
iret
xchg
sbb
or
sbb
loop
dec
adc
jl
je
call
cmp
adc
or
jecxz
push
xor
jne
pop
sbb
mov
hlt
pop
out
insb
mov
outsb
add
loope
pop
or
dec
and
mov
cmp
mov
lods
and
xchg
mov
sub
cmp
mov
jmp
in
adc
lret
mov
pop
adc
iret
lods
push
movl
adc
into
bound
mov
xorb
or
imull
adc
xor
fidivl
es
or
lods
mov
or
inc
bound
push
and
mov
dec
cmp
inc
adc
stos
popa
int3
arpl
pop
pusha
jb
pushf
cmpsb
mov
inc
push
xor
xor
or
fs
call
inc
inc
pop
leave
cs
sub
add
mov
mov
cli
inc
pusha
rolb
inc
adc
dec
jne
sbb
and
shrb
aad
mov
dec
and
bound
mov
inc
mov
add
mov
daa
loope
inc
mov
movb
ret
outsb
mov
push
ja
pop
je
das
aaa
rorb
pop
loope
sbb
and
addr16
jns
push
sub
sbb
mov
cltd
sbb
mov
iret
cli
int
xchg
gs
push
popf
fcoml
jo
xchg
push
pop
inc
cmp
add
mov
lcall
es
dec
repnz
mov
jnp
imul
sbb
jne
cmpl
or
pop
cmova
pop
or
xchg
mov
cwtl
les
enter
and
addr16
adcl
xor
sbb
add
fiadds
fildl
add
or
lods
dec
inc
sbb
push
mov
rolb
or
inc
shlb
loope
gs
nop
movsb
ror
or
mov
dec
pop
mull
push
insb
xchg
or
push
adc
std
fsubl
mov
outsb
test
push
cli
test
divb
insb
mov
pop
xchg
xchg
dec
mov
and
and
mov
cli
ss
adc
fldl
ss
iret
sub
sub
roll
clc
add
xchg
rep
movsl
or
lret
xchg
jno
push
in
mov
ret
imul
add
adc
cmp
testl
cmp
movsb
inc
push
jo
rclb
or
leave
xlat
jle
push
add
mov
scas
cmc
aam
xor
fidivs
icebp
lea
pop
jo
loopne
or
jbe
dec
ret
xor
fcoms
aam
outsb
fsubrl
icebp
dec
dec
jmp
sarb
hlt
jmpw
xor
mov
xchg
addl
mov
pop
cmp
sbb
mov
sub
dec
xor
insb
mov
bound
mov
inc
cmpsl
daa
push
orl
xchg
int
pop
mov
mov
inc
cmp
movsb
ja
call
add
ret
mov
and
out
mov
int
push
in
add
jge
call
in
pusha
xchg
add
jp
mov
inc
lahf
aam
aaa
addl
loope
push
test
loopne
andl
and
push
test
outsl
xchg
rolb
xor
fnclex
ret
shl
loopne
andb
fstp
sarb
mov
sbb
push
imul
add
inc
out
xor
loopne
sub
orl
xchg
sub
popa
rcl
shll
rorl
daa
xor
bound
loope
test
push
push
and
cmp
xor
shlb
ja
or
add
imul
pop
pop
test
and
add
shll
outsl
push
push
jb
mov
inc
cmpsl
push
dec
bound
je
or
add
test
xchg
out
dec
dec
and
push
out
push
inc
push
xor
ret
aam
inc
mov
jge
jo
andb
jbe
loop
mov
sbb
daa
or
or
aad
jns
arpl
add
clc
sbb
or
cltd
sub
out
in
sub
mov
jns
add
add
in
daa
or
fsubs
cmpsl
add
and
loopne
inc
add
jo
test
push
sahf
mov
jecxz
lds
outsl
xchg
jecxz
das
sbb
sets
dec
out
mov
or
mov
icebp
push
fs
std
aaa
xchg
daa
dec
dec
xchg
or
in
shl
sbb
int3
loope
dec
fldl
sub
shl
les
enter
jae
push
flds
and
adc
pop
add
and
adc
mov
pusha
cmp
inc
push
push
adc
push
pop
mov
in
int3
int
adc
les
or
or
ret
inc
xchg
sub
in
data16
cld
jne
push
fsubp
inc
adc
out
sub
mov
fsubrs
jge
into
inc
xor
ret
inc
mov
and
dec
test
fiaddl
out
dec
add
sbb
iret
xor
inc
ljmp
and
nop
mov
xor
cmp
imul
dec
sbbl
sbb
xchg
inc
and
jns
gs
mov
add
dec
addl
arpl
or
inc
jmp
test
pop
adc
loopne
rcr
or
inc
sti
jne
inc
cmp
shll
mov
aas
bound
pusha
sub
insb
and
cmp
je
out
add
sbb
xlat
and
jge
adc
hlt
xor
xor
inc
arpl
xor
lcall
push
adc
pusha
sti
pop
js
std
ret
cmpsl
shlb
scas
pop
mov
ss
add
out
call
mull
repz
xchg
pop
nop
int3
cwtl
xchg
fwait
xchg
xor
inc
adc
cmp
test
sub
je
inc
sub
dec
push
dec
sbb
xorb
jp
out
enter
int3
inc
nop
xchg
sub
dec
sbb
jnp
bound
test
je
bound
outsb
and
pusha
adc
aas
inc
xchg
or
dec
jnp
arpl
mov
push
jbe
test
adcl
pop
sti
fimuls
fs
mov
inc
mov
ja
mov
jns
or
inc
inc
outsb
push
pop
mov
inc
or
fildll
add
adc
gs
mov
push
pop
cmpsl
inc
gs
cmpsl
push
adc
jne
cmp
scas
xorps
test
push
inc
xchg
sahf
test
out
dec
mov
xor
jae
out
xor
and
push
shrl
push
push
mov
into
jnp
jo
jns
jo
scas
jge
sbb
push
ficoms
cmpsl
addr16
dec
arpl
mov
loopne
outsb
cmp
inc
dec
push
jns
add
sub
pop
out
cmp
add
shll
mov
mov
ret
pushl
jno
xchg
scas
dec
outsb
out
fiadds
insl
lahf
inc
cmp
outsl
dec
or
or
adc
clc
dec
imul
pop
dec
gs
jg
or
pusha
push
jae
call
jo
out
jmp
adc
mov
push
repnz
jno
arpl
sbb
es
or
xchg
adc
cmpsl
inc
mov
xchg
dec
das
or
cmovns
push
sub
lahf
adc
xchg
sti
pop
push
or
inc
mov
lods
idivl
xor
add
push
lret
je
pop
mov
imul
add
add
lea
pop
adc
outsl
ret
mov
outsl
push
push
push
fiaddl
add
mov
jae
or
inc
xor
sbb
push
inc
lock
fistl
inc
divb
inc
lock
loope
fldt
push
out
lea
push
stos
adc
jnp
add
push
pop
xor
jp
jne
pop
adc
push
mov
hlt
dec
push
popa
cmpsl
push
lahf
gs
icebp
or
fs
scas
aam
enter
popa
popa
adc
daa
adc
repz
add
dec
test
and
dec
inc
cmpsl
out
cmp
cmp
cwtl
jns
mov
push
mov
insl
mov
pop
pop
cmpsl
or
sub
orl
repnz
imul
fadds
iret
bound
push
out
push
orb
rolb
or
imul
adc
adc
shrb
aaa
push
sub
inc
adc
lds
addr16
bound
add
or
push
sbb
push
pop
fadds
push
jo
lahf
stos
test
cs
fbstp
inc
and
das
dec
dec
mov
pusha
push
arpl
add
daa
push
mov
outsl
mov
inc
ja
outsb
push
fcom
lea
dec
adc
pop
adc
add
inc
adcb
push
and
push
and
sub
push
outsl
mov
dec
mov
or
push
adc
and
ret
pop
bound
testl
stos
stos
inc
fisttpll
bound
inc
pop
call
push
xlat
ss
imul
xchg
inc
mov
gs
or
xlat
or
daa
inc
push
cwtl
adc
jae
lods
mov
mov
add
push
idivl
andb
addb
lret
insb
xor
pop
sbb
pop
pop
xchg
add
addr16
push
fistps
xor
or
mov
xor
push
movzwl
popa
aaa
adc
push
mov
ret
aas
pop
mov
and
pop
inc
or
mov
push
lods
adcb
out
imull
pop
add
ficoms
in
insl
pop
push
jg
or
xor
insb
inc
sub
lods
dec
ljmp
inc
ret
push
loopne
mov
call
aas
insb
add
stos
lahf
xlat
imul
or
pop
movl
mov
js
lret
jns
xchg
and
aas
or
testl
fisttps
out
and
sub
xor
inc
aaa
adc
ficoml
ret
repz
fildll
inc
sbb
inc
in
addr16
adc
pusha
fldl
or
movsb
mov
mov
cmpsl
mov
iret
or
push
push
cmp
pop
in
pop
sub
add
lret
cmp
pop
aaa
rcrb
mov
popl
mov
sub
dec
in
decl
cmp
pop
jb
cmpb
dec
dec
je
insb
mov
push
and
xor
add
dec
popa
jns
jne
xor
add
xor
je
add
das
adc
or
insb
loop
je
test
xchg
push
jg
in
mov
fbstp
je
push
gs
and
push
or
fsts
mov
sbb
hlt
adc
test
sbb
test
mov
rorb
xor
inc
inc
xchg
loope
fisubrl
add
and
jno
js
fildl
mov
cmp
inc
mov
adc
clc
adc
addl
das
xchg
mov
and
mov
int3
packssdw
cmp
mov
in
add
jl
push
jo
push
mov
or
jbe
andl
out
testl
mov
cmp
push
test
inc
jo
mov
mov
xor
nop
rcrl
cld
fldl
jge
inc
push
mov
dec
icebp
ss
push
sbb
adc
jle
jmp
inc
push
js
sbb
fdivrs
mov
divb
fmuls
add
push
pop
cmpsb
xor
jle
mov
mov
inc
fisubs
push
mov
xchg
hlt
mov
pusha
out
movsb
rorl
inc
or
inc
sub
inc
jecxz
insl
lret
push
es
in
jmp
roll
xor
inc
fisttps
jbe
adc
sbb
mov
mov
cmp
pop
mov
xchg
ja
xor
mov
adc
inc
mov
call
push
inc
popa
dec
inc
push
lcall
xor
xchg
pop
pop
mov
dec
mov
iret
adc
je
adc
pop
jl
adc
scas
scas
pushl
add
push
mov
inc
inc
repz
push
push
xchg
out
sub
outsb
add
lods
push
clc
ss
mov
or
out
cmp
lods
arpl
mov
xchg
xor
sbb
shlb
insb
dec
adc
jno
add
ds
imulb
or
loopne
mov
roll
dec
inc
or
push
pusha
pusha
or
lcall
push
scas
or
adc
jl
push
sbb
es
pop
stos
outsb
xchg
cmp
data16
inc
nop
add
js
xor
push
push
cmp
out
pop
sbb
push
call
ret
push
push
sub
cli
pop
add
mov
push
push
das
adc
pop
sbb
rclb
movsb
lods
sti
enter
inc
test
cmpsb
xlat
add
ljmp
je
and
adc
jmp
fistpll
mov
pop
adc
add
jns
adc
adc
ja
lcall
loop
adc
mov
mov
add
addb
mov
imul
cwtl
mov
hlt
dec
and
push
or
addr16
mov
ja
adc
xor
pop
dec
pop
and
and
mov
push
sbb
in
lret
cwtl
adc
xlat
and
jmp
ljmp
sbb
dec
pslld
stos
adc
push
lcall
cmp
scas
add
mov
dec
adc
sbb
lock
sbb
cmpsb
mov
daa
les
inc
popf
pop
jno
or
rorb
out
arpl
and
push
je
cltd
popa
and
push
sub
xchg
stc
dec
loope
fimuls
enter
dec
mov
test
cmc
jl
andb
sahf
or
push
lock
arpl
lret
mov
jo
add
ds
fbld
lds
mov
dec
mov
popf
jns,pn
and
mov
stc
je
lods
xchg
mov
mull
sbb
int3
andb
lods
push
in
daa
add
loope
test
inc
testl
inc
jae
iret
xor
sti
sub
enter
imul
mov
dec
sub
xlat
aam
cmpsl
cmp
sub
jb
xor
out
push
pop
mov
clc
cmp
cmp
fwait
movsl
test
inc
mov
jns
ret
mov
daa
push
inc
sbb
insb
xor
pusha
aaa
push
lret
dec
jns,pn
cmpsw
add
xchg
mov
dec
loopne
adc
or
pop
enter
jl
dec
clc
clc
pop
push
or
or
inc
je
fmuls
push
inc
xor
fs
pop
pop
push
mov
mov
mov
cltd
das
in
inc
sub
xor
pop
push
sub
sub
push
shlb
push
xor
pop
mov
mov
ja,pn
in
dec
enter
nop
enter
xchg
sub
rcrl
fdivr
lock
push
jmp
mov
pop
dec
xor
inc
sahf
xor
cmp
push
add
lock
xchg
cmp
stos
add
outsl
cltd
fdivs
mov
add
aam
or
std
pop
push
sbb
sbb
mov
repnz
sbb
arpl
sbb
out
pop
or
sbb
sbb
popa
sbbl
sbb
sbb
sbb
mov
negb
inc
sbb
sbb
lea
add
lret
addb
aaa
or
adc
cmp
or
pop
popa
pop
add
or
jo
inc
or
pop
pop
mov
aaa
outsb
fcompl
push
push
xor
mov
push
test
pop
movsb
mov
popa
push
repnz
aaa
movups
outsb
mov
lock
outsb
fdivl
loopne
push
sub
inc
getsec
jle
lret
mov
xor
cmp
ja
icebp
imul
mov
psubw
push
call
inc
int
nop
pop
dec
cmp
imul
mov
mov
push
and
das
cmp
imul
and
jle
fdivrs
insl
repz
nop
cmp
in
mov
imul
mov
xor
addr16
mov
xchg
push
decb
push
aaa
push
sbb
dec
cmpsl
test
mov
test
setl
cwtl
rcr
xor
aaa
shll
pop
and
jl
mov
jge
orb
inc
ffreep
xchg
jne
dec
pop
jp
sbb
mov
lea
test
add
test
xchg
out
sub
sti
pushf
inc
inc
or
dec
imul
sub
inc
dec
adc
or
dec
add
or
cmp
sub
clc
int
mov
test
push
and
dec
js
pop
data16
nop
cmpsl
rorl
inc
add
xor
xor
sti
iret
cwtl
das
insb
clc
and
jae
daa
pop
call
out
ljmp
jno
push
dec
sbb
push
xchg
push
pop
adc
mov
sahf
xor
push
push
rorb
outsb
das
adc
js
enter
adc
pop
inc
adc
mov
inc
push
ds
mov
push
lcall
clc
cmp
roll
sub
cwtl
xor
push
xor
in
cmp
add
or
stos
shrb
outsl
mov
push
sbb
outsl
sbb
call
dec
sbb
jecxz
xor
pop
mov
xor
jmp
rolb
sbb
add
sbb
mov
push
rclb
pop
sbb
inc
lahf
jno
xchg
jno
imul
mov
xor
adc
cmpsl
sub
jmp
cmp
or
and
pop
inc
fcoml
xor
mov
cwtl
mov
popa
jge
and
pop
ret
dec
jne
inc
mov
ret
and
pop
xor
adc
test
test
ficompl
rorb
subl
pusha
inc
call
enter
jbe
scas
jne
inc
dec
repnz
or
add
daa
dec
outsb
in
gs
mov
add
mov
subl
sbb
shrl
push
or
xor
enter
mov
test
mov
ja
xor
xchg
cmpsl
xor
add
leave
roll
or
iret
inc
scas
lods
or
popf
es
mov
loopne
fwait
sbb
les
mov
add
xorl
push
sub
or
lahf
jae
push
add
push
jne
push
dec
enter
cmp
sub
aas
push
pop
lods
adc
add
add
clc
inc
inc
mov
inc
test
nop
inc
sub
inc
mov
pushf
inc
xchg
inc
call
cmp
pop
xchg
mov
test
dec
nop
cmpsb
lock
mov
daa
add
push
mov
xchg
pop
pop
cmpsl
scas
mov
aad
outsb
sub
sbb
fwait
hlt
xchg
add
sub
loope
adc
fsubrl
adc
adc
adc
push
sbb
push
sbb
shrl
xor
lea
or
stos
cmc
clc
ss
insl
mov
inc
sbb
mov
das
pusha
push
cld
push
or
sbb
pop
mov
sbb
jl
push
lret
mov
test
cwtl
xchg
add
inc
daa
jbe
sbb
mov
out
dec
push
test
or
add
push
pop
pop
iret
pop
sbb
orb
loopne
inc
xchg
adc
jbe
test
pop
mov
scas
inc
jp
lahf
movsb
hlt
adcb
jbe
inc
xor
pop
fs
and
scas
add
mov
dec
adc
push
dec
sahf
xlat
das
rclb
add
cltd
adc
sub
push
xchg
pop
adc
add
mov
mov
lock
xchg
sub
test
imul
sub
xlat
add
jmp
push
fldlg2
fiadds
mov
inc
aas
pusha
add
and
add
enter
in
mov
adc
nop
mov
and
and
pop
pop
and
mov
pop
or
hlt
pop
je
cmp
or
add
and
insl
gs
test
add
xor
and
push
in
es
dec
mov
test
test
mov
and
sub
loopne
sub
add
in
in
mov
call
vpshufhw
rclb
cmp
dec
dec
and
add
and
das
ja
sub
xor
gs
add
sub
mov
cmpsl
xor
add
in
jl
cld
pushw
arpl
ret
lret
xchg
cmp
in
mov
and
je
or
int
cmpsl
or
add
jmp
shrl
jmp
ffree
add
cmp
or
push
sbb
cwtl
xorb
jnp
mov
cmp
stos
in
cmp
scas
aas
inc
xchg
jns
dec
add
inc
add
outsl
cmp
cmc
or
mov
push
inc
js
je
popf
add
mov
sbbb
cmp
push
inc
inc
repnz
shlb
and
inc
push
pop
enter
xchg
sub
sub
test
pop
pop
dec
push
jo
inc
inc
inc
xchg
pop
and
push
inc
dec
dec
or
pusha
and
xchg
add
pop
push
xlat
dec
dec
fisubrl
sub
cwtl
fcomps
and
or
and
and
mov
and
sbb
pop
andl
and
mov
and
xchg
sbb
xchg
and
and
in
push
sub
and
and
pushf
ret
and
icebp
push
pop
aas
arpl
and
and
and
push
jnp
and
and
and
xchg
and
push
jns
xchg
and
and
out
and
and
and
dec
jno
mov
loop
and
or
mov
lods
pop
aaa
sbb
js
xor
outsb
iret
clc
es
int3
push
and
mov
rcll
bound
push
or
jge
mov
or
inc
push
loopne
outsl
push
aam
dec
pop
or
inc
inc
inc
sbb
xor
sbb
aam
loopne
movsb
jne
mov
decb
adc
xor
sbb
jb
push
inc
stos
and
sbb
je
and
pop
add
push
mov
adc
cwtl
test
mov
mov
pop
pop
adc
dec
add
or
bound
inc
test
aas
pop
jp
mov
in
dec
fcmovnu
mov
das
push
push
adc
xchg
or
xlat
and
frstor
sbb
sbb
mov
cmp
not
and
jmp
popf
cmp
enter
add
xchg
popa
lahf
push
rclb
xor
push
sarb
and
dec
sub
dec
popa
cmp
cmp
sbb
insb
sub
mov
and
ret
jge
pop
orl
mov
shlb
testl
mov
add
push
push
sbb
addl
fiadds
pop
inc
test
mov
pop
mov
iret
push
mov
int
push
inc
and
ljmp
cltd
imul
add
xchg
or
and
inc
ds
or
lods
push
mov
ds
clc
js
xchg
cld
fwait
push
xchg
sub
cmp
icebp
je
jnp
cmp
sti
arpl
mov
mov
es
imul
arpl
movsb
jnp
xor
jle
clc
xor
sbb
push
or
test
enter
fs
jns
testl
mov
cmp
adc
lahf
jae
imull
mov
push
or
push
ss
dec
pop
and
leave
rolb
jae
add
jge
loope
rcrl
insl
pushf
pop
xchg
cmpsb
bnd
push
xor
add
jl
dec
addl
mov
jge
jae
decl
clc
jle
lahf
adc
js
setg
jnp
mov
inc
mov
shlb
dec
stos
or
add
jo
inc
adc
or
lcall
int3
pop
and
xor
ja
add
adc
addr16
mov
pop
bound
and
jmp
mov
pop
cmp
push
or
cld
popl
sbb
jmp
inc
xor
xor
mov
in
je
mov
xlat
add
add
jmp
mov
imul
call
sbb
scas
imul
pop
mov
sbb
test
outsl
or
push
pop
push
insb
popf
jl
xor
jno
jno
fcoml
lea
pop
pop
int
xlat
push
adc
or
or
and
int3
sub
insb
mov
jbe
mov
fs
insb
aam
inc
push
movsb
pop
pop
jno
fs
or
xor
cmpsl
push
fdivs
movzwl
aas
pusha
or
and
or
xor
inc
les
jno
push
pop
sbb
jo
clc
or
movups
lds
or
dec
sub
cmpsl
inc
insl
jg
jmp
sub
cmp
insb
cmp
xchg
addb
jne
je
pop
outsl
mov
dec
push
adcb
mov
test
mov
dec
test
or
ja
leave
or
xor
jo
lret
inc
mov
add
orb
nop
mov
sbb
fwait
push
jae
mov
sub
jno
popf
mov
mov
fs
inc
ds
push
or
shl
scas
add
dec
sub
mov
dec
inc
lods
mov
dec
iret
or
add
je
mov
movsl
mov
nop
cs
outsl
adc
cmp
out
ja
xor
sbb
push
xchg
push
testl
nop
shrb
or
add
aas
cmp
incl
movb
inc
sub
or
aaa
leave
lock
sbb
or
mov
ds
cld
adc
cmp
addr16
outsl
neg
cmp
jge
pop
sahf
clc
jns
mov
push
ret
cmp
shll
xchg
push
fisubrl
cmp
push
loope
or
daa
stos
repz
and
iret
loopne
inc
hlt
cmp
mov
push
or
push
pop
je
imul
inc
jno
divl
and
fwait
mov
shll
mov
adc
shlb
mov
inc
rorb
cmp
lock
rcrb
mov
inc
adcl
or
shlb
sub
loope
dec
jg
fsubs
add
dec
repnz
or
sbb
add
mov
shlb
sbb
int3
inc
lcall
jg
or
add
add
xchg
call
lea
xor
cmp
shlb
test
iret
mov
push
dec
rol
or
cmp
or
pop
xor
lahf
push
mov
mov
push
xchg
test
loopne
insb
notb
push
mov
stos
xor
jge
mov
es
testl
es
mov
mov
sub
fidivrs
mov
mov
leave
int
xchg
addl
js
fdivp
and
dec
call
test
lock
sahf
jg
push
mov
sbb
loopne
rcr
leave
dec
or
xchg
in
testl
xorl
pop
xchg
sbb
jne
insl
inc
pusha
dec
mov
ret
mov
mov
test
push
addr16
ret
push
push
push
pop
pop
mov
jb
in
insl
jnp
mov
mov
iret
inc
xchg
push
push
dec
push
dec
or
andl
les
incl
add
sub
rcll
jecxz
aaa
and
add
call
popa
test
movsl
mov
jg
pusha
or
js
xchg
adcb
in
mov
out
mov
cltd
jo
popa
lea
lahf
push
enter
clc
lock
mov
jle
adc
inc
cwtl
adc
inc
aaa
jnp
sub
push
fdivrs
jg
dec
mov
inc
loopne
inc
shrl
mov
fisttpl
in
pop
cmp
and
clc
dec
mov
pusha
add
test
cmpsb
jae
push
subb
mov
push
cld
leave
and
xchg
imul
loopne
cmpsb
push
dec
in
cmp
cmpl
xorb
sbb
mov
dec
cmp
sbb
add
add
mov
and
add
lret
jmp
shlb
add
js
subl
mov
push
enter
outsl
scas
sbb
xor
xor
jl
or
jg
sbb
push
cwtl
lods
jl
and
adcl
andl
rolb
jecxz
daa
mov
dec
arpl
out
lahf
dec
mov
xor
mov
inc
add
je
testb
je
outsb
cld
mov
cmp
popa
negl
movsl
xchg
das
inc
sbbl
or
mov
pop
lea
cmp
arpl
pop
inc
ror
push
push
mov
movb
inc
fbstp
in
lea
xor
add
sub
push
nop
pop
adc
nop
jmp
movsl
loope
mov
mov
ss
or
ja
mov
divl
xchg
cmc
mov
xor
jge
fcmovnu
add
cmp
repnz
ret
add
adcb
pop
mov
or
xchg
push
jno
cmp
fimuls
mov
mov
stos
lahf
adcl
rorb
push
pop
daa
shlb
int
repz
mov
sbbb
fcoml
add
cmp
insb
test
and
push
daa
cmc
mov
jle
add
pop
mov
pushf
shll
in
xchg
mov
adcb
push
xor
test
xchg
orl
loopne
xchg
nop
sahf
push
dec
jmp
sbb
call
add
push
fildl
inc
jbe
mov
xor
das
loope
shlb
test
push
ret
add
sti
add
ret
andb
clc
mov
add
adc
sbb
adc
pop
orl
pushf
push
xchg
movsb
and
mov
mov
push
sub
jae
xor
add
xor
rcrl
fimull
je
notb
call
inc
movb
pop
enter
jmp
dec
je
cmc
push
faddl
dec
cltd
cmpb
jecxz
flds
fadds
jbe
popa
int3
pop
jno
push
mov
scas
and
inc
adc
rcrl
ja
pushl
dec
call
inc
shrl
or
mov
iret
pop
mov
mov
daa
sbb
cmp
and
mov
sbb
test
inc
mov
pop
jmp
loop
das
lret
cmpw
sub
cmpb
inc
xchg
mov
in
dec
shll
sbb
ret
pop
pushf
and
aas
es
lahf
dec
test
push
xchg
je
sbb
add
je
add
shlb
sub
roll
xchg
mov
ljmp
adc
or
aas
dec
and
mov
add
call
addr16
xchg
lret
inc
dec
sub
xchg
testl
movsl
sbb
inc
add
cmp
ja
push
pop
not
sbb
or
mov
and
je
nop
inc
cmp
xchg
cmpsl
or
outsb
or
repz
jb
mov
sbb
jne
frstor
mov
mov
shrb
lock
in
mov
shll
dec
ja
mov
and
lret
ds
adc
notl
xchg
test
pop
xlat
lods
sbb
fnstsw
add
xchg
testl
sbb
add
cmpsb
inc
add
lock
and
xchg
inc
inc
inc
or
dec
cmp
inc
inc
push
mov
out
bound
dec
pop
pop
and
fisubrl
js
aaa
stos
les
rolb
or
fwait
add
lahf
xchg
push
push
mov
mov
inc
cmpsl
push
or
push
mov
aad
or
data16
loopw
bound
cmp
and
adc
test
aam
xchg
test
sbb
or
or
push
aad
clc
inc
ss
cs
push
pop
cltd
inc
bound
push
sbb
sti
xchg
inc
cmpsb
sbb
push
movsl
mov
mov
aaa
or
enter
dec
add
test
and
lahf
cmp
cld
ret
xchg
pop
or
iret
notl
subb
and
rolb
mov
and
rolb
or
loop
sbb
test
xor
pop
adc
imul
add
sub
cmpl
add
shlb
and
xchg
in
aas
add
inc
ret
pop
pop
cmc
fwait
add
movb
add
and
inc
mov
inc
mov
mov
pop
xchg
fadds
pop
lcall
adc
or
lock
push
incl
rorb
in
push
push
repnz
add
add
push
sbb
les
outsb
pop
rcr
or
mov
pushf
into
clc
and
mov
ret
test
inc
xor
inc
and
fldt
sbb
scas
outsb
not
and
or
movsb
cltd
in
add
pop
mov
mov
xchg
inc
inc
lea
testb
add
out
or
adc
adc
sbb
push
mov
adc
clc
add
pushf
bound
enter
in
clc
mov
push
push
cmp
push
xor
popf
adc
fs
push
inc
mov
jo
lods
inc
sahf
inc
mov
inc
xchg
pushf
and
pop
dec
push
xchg
notb
sahf
sub
idivb
clc
xor
dec
mov
rorl
mov
rcrb
jbe
sarl
pop
sub
and
dec
adc
dec
cmp
add
into
push
inc
mov
jge
sbb
sub
das
push
mov
popa
test
xchg
xchg
dec
es
movsb
mov
shll
daa
addr16
xor
fdivl
mov
mov
andl
and
lahf
adc
inc
mov
sti
ja
dec
and
inc
sub
pop
pop
dec
inc
inc
fcomps
push
pop
mov
adc
mov
push
aaa
shrb
jo
or
push
or
rolb
dec
push
and
push
push
pushw
outsb
push
and
dec
inc
push
js
and
cmc
aas
jno
inc
sbb
inc
xor
das
ret
gs
dec
or
ja
inc
xchg
dec
xchg
rorl
inc
outsl
pop
xor
js
in
dec
dec
repnz
stos
dec
lock
dec
dec
push
and
arpl
aam
push
xchg
xor
pop
jne
xor
insl
pop
mov
or
mov
out
xchg
add
push
je
add
push
loop,pn
adc
lods
add
xor
xor
push
movsb
xchg
mov
movsb
fildl
pop
add
dec
add
or
rolb
movb
movl
add
pop
mov
pop
cmp
mov
mov
shrb
xor
adc
call
popa
xor
dec
xor
cwtl
inc
loope
and
orl
sbb
sbb
loopne
mov
bound
aad
insl
pop
test
andb
testb
pusha
mov
push
leave
fadd
test
je
cmp
xchg
ret
push
pop
mov
or
fcoms
int
jo
push
pushf
mov
push
xor
sub
xchg
mov
in
adc
mov
movsl
jmp
fisttpl
mov
clc
nop
adc
and
test
push
xor
push
cmp
ja,pt
sbb
xor
dec
and
or
inc
aam
xor
or
jbe
shll
push
jl
fiaddl
fstl
pop
in
pop
das
call
push
out
mov
sarl
dec
inc
push
inc
dec
mov
mov
shl
mov
lar
rol
pop
sbb
jae
nop
je
cmc
push
enter
dec
bound
shlb
ja
fildl
aaa
pusha
mov
adc
adc
cmp
nop
mov
imul
test
nop
iret
pop
stc
sti
and
adc
sub
scas
or
adc
adc
rclb
sbb
cmp
push
adc
dec
les
icebp
les
or
xchg
leave
rclb
jns
xchg
nop
add
popa
xor
sub
out
xchg
pop
rolb
imul
inc
pop
push
mov
jp
and
sbb
and
xor
test
ja
pop
orl
add
nop
test
lods
xchg
dec
push
adc
push
test
es
xor
add
dec
fistl
push
pop
add
nop
repz
push
sub
or
pop
and
push
out
dec
inc
gs
orb
or
xchg
aad
mov
clc
push
mov
ds
mov
mov
outsl
test
adc
in
sbb
fsubs
lods
push
cmp
push
push
add
push
xor
das
and
and
push
inc
aam
in
fwait
and
mov
push
pusha
push
xchg
into
jnp
pop
push
and
jecxz
sbb
push
push
inc
or
and
into
mov
inc
mov
dec
xor
adc
aam
mov
pusha
loopne
filds
rclb
cwtl
into
insl
inc
inc
dec
es
jne
pop
xchg
loope
dec
add
push
mov
loop
and
mov
push
fisubl
pop
mov
or
add
and
cs
aas
fs
push
mov
or
pop
rcrb
adc
xor
movhps
xor
dec
and
xchg
xor
inc
insl
insl
sbb
push
sahf
insb
addr16
push
dec
and
inc
rcrl
xchg
or
sub
sti
movsb
mov
dec
xor
mov
inc
or
mov
mov
gs
hlt
mov
dec
mov
mov
pop
pop
cmp
push
xor
jae
or
incl
sbb
jno
dec
cmp
or
pop
jo
out
jo
xchg
sbb
lods
outsb
test
push
sbb
mov
push
movsl
push
or
sbb
jmp
mov
adc
mov
mov
pop
cmpl
or
mov
jo
mov
xor
push
push
sub
pop
andb
xchg
rcr
punpcklbw
push
dec
xor
das
lea
ja
jb
push
movsl
rclb
add
or
add
mov
mov
or
popa
inc
push
rorb
cmp
daa
mov
adc
dec
adc
jle
ljmp
cmp
push
fcmovnu
std
inc
or
hlt
sub
inc
pop
jns
mov
inc
call
cmpsl
popa
ljmp
xor
adc
xchg
or
and
popa
insb
inc
jnp
push
push
out
dec
xorl
adc
pop
inc
add
adc
mov
lock
in
dec
or
test
dec
mov
adc
or
add
cmp
clc
mov
es
mov
xor
xchg
mov
es
or
test
jno
cwtl
lds
test
mov
or
in
fists
pop
and
stos
push
mov
jae
xchg
daa
dec
add
or
and
xchg
insb
inc
rol
add
je
push
stc
bound
or
jns
dec
add
in
frstor
xchg
add
add
inc
push
push
mov
andb
dec
les
testl
or
out
test
push
mov
rclb
scas
js
lods
iret
mov
daa
push
add
dec
and
hlt
inc
movsb
dec
rorl
jl
hlt
adc
loopne
xor
mov
add
pusha
lea
sbb
ds
sub
insl
add
lods
add
ret
inc
sbb
aaa
inc
jecxz
fs
jg
or
mov
loopne
out
and
xchg
cltd
clc
mov
adc
jbe
adc
rcrb
in
in
stc
push
iret
cs
mov
daa
out
push
pop
jl
inc
jo
push
jl
fmulp
add
inc
xor
leave
jae
mov
cmp
dec
fidivs
clc
sub
das
cmp
iret
sub
mov
mov
mov
push
pop
add
sub
cmp
xchg
add
adc
adcl
cltd
push
and
mov
fsubl
pop
pop
or
sbb
or
inc
xor
aam
imul
cmpsl
inc
jp
cwtl
push
jmp
and
fadds
data16
lods
int
sub
jg
inc
mov
orb
pop
push
icebp
test
or
test
pop
lods
subl
xchg
mov
jbe
and
outsb
rolb
outsb
pop
mov
lods
shll
fucom
adc
add
pop
and
or
movb
push
add
rcr
push
mov
push
or
jecxz
pop
mov
int3
mov
loopne
enter
or
cmp
sub
pushf
and
or
test
mov
cwtl
shlb
sbb
movsb
xchg
dec
movsl
xor
test
test
push
sub
call
mov
shlb
pop
mov
mov
in
sub
push
fidivrl
mov
inc
add
mov
out
inc
inc
add
in
dec
outsl
pop
ss
add
pop
gs
das
arpl
orl
arpl
jmp
push
dec
add
push
inc
cmp
subl
and
cmovg
mov
imul
lods
pop
incl
add
shlb
jmp
inc
in
ja
sbb
pop
and
jecxz
daa
mov
orl
inc
xor
test
rclw
insl
bound
sub
addr16
or
popa
jb
mov
jle
adc
mov
loope
add
dec
dec
jmp
lahf
and
bound
adc
les
lret
inc
push
pop
jge
mov
inc
sub
out
inc
cmpsb
test
xorl
add
pop
jo
add
push
roll
lock
and
inc
rclb
mov
inc
adc
xor
cmp
cmpb
jb
dec
mov
fnstsw
mov
pop
mov
sbb
jbe
push
adc
lds
popa
fistl
insb
mov
sahf
or
fimuls
adc
push
adc
add
inc
pop
push
add
mov
dec
pop
jle
arpl
das
jae
add
sbb
data16
add
adc
mov
cmc
dec
cltd
sti
or
popa
das
or
popa
add
or
in
adc
call
dec
bound
or
out
jne
xlat
jo
inc
push
pop
frstor
icebp
sbb
and
lods
lret
in
dec
add
mov
add
clc
mov
nop
inc
and
mov
cmp
and
push
pop
jns
in
dec
repz
das
push
nop
push
les
popl
idivl
mov
jo
in
sahf
mov
push
cld
out
shrb
es
and
mov
sbb
and
nop
mov
pop
sub
mov
dec
or
add
nop
lock
fs
pop
push
pop
cmp
mov
and
pop
inc
sub
dec
aam
mov
mov
jnp
sbb
dec
jns
les
inc
mov
nop
movsb
jne
add
inc
cwtl
and
pop
push
insb
mov
leave
pop
add
push
addb
adc
addr16
dec
shll
mov
gs
or
daa
lret
in
push
and
adc
rorl
push
mov
repnz
mov
push
or
push
mov
cld
mov
icebp
jge
adc
outsb
xchg
inc
scas
in
xchg
push
nop
das
or
js
sbb
je
lcallw
lods
pop
mov
data16
movl
xor
xor
or
lahf
cmp
xchg
mov
sub
cmp
cmp
ss
aad
es
add
or
jae
mov
cmp
mov
js
loop
jne
jecxz
cmp
mov
fs
aam
in
in
mov
push
push
jne
rorb
rorb
pop
mov
cwtl
cmp
dec
out
fsubrs
xlat
test
cmp
js
mov
lock
int3
cli
push
inc
rorb
mov
xchg
push
lods
add
arpl
pop
ss
je
mov
mov
aad
int
pop
imul
fcoms
fs
sub
mov
jmp
rcll
dec
push
cmp
cmc
jo
add
inc
cmp
inc
sbb
lahf
fstpt
xchg
inc
jae
inc
mov
pop
mov
jb
js
in
push
aam
nop
adc
into
sarl
pusha
cwtl
adc
cmp
cmp
mov
test
or
insl
jmp
add
sbb
imul
cli
imul
insl
add
in
aas
adc
in
imul
inc
mov
push
enter
insb
pand
dec
pushf
inc
push
pop
enter
mov
mov
leave
leave
leave
leave
arpl
in
outsb
inc
insl
outsb
lahf
clc
ret
mov
add
mov
push
lods
lret
push
movsb
lds
idivb
push
sbb
dec
dec
mov
inc
pop
lock
out
sub
dec
jl
shrb
insb
pop
dec
icebp
pop
test
aaa
mov
aaa
cmp
adc
daa
inc
mov
test
cmp
cmp
andb
push
xor
ss
loope
cwtl
mov
push
jecxz
popa
rolb
pop
sbb
scas
dec
roll
mov
adcl
and
dec
inc
repz
cltd
loope
mov
scas
adc
mov
xchg
adc
popa
les
out
jl
subb
negb
lcall
dec
xchg
cmp
in
bound
or
popl
cmpsl
pop
popf
and
je
loope
mov
push
pop
push
xchg
gs
fs
adc
sbb
pop
inc
es
rcll
mov
adc
stc
mov
inc
adcl
out
adc
andl
push
mov
fwait
mov
jecxz
dec
jecxz
popa
xor
dec
je
sub
jnp
inc
sub
jo
push
fists
sub
or
movsb
and
push
adc
add
add
imul
add
adc
sbb
push
push
mov
mov
inc
lds
mov
pushf
test
loope
mov
inc
xchg
incl
mov
push
mov
cmp
icebp
test
add
add
leave
sub
inc
lods
xchg
jne
scas
xor
ret
pushf
xor
xchg
xor
inc
add
and
add
inc
xchg
inc
jl
adc
adc
lods
inc
mov
test
in
or
orl
popa
adc
lds
xchg
leave
repz
fst
cmp
xor
inc
sahf
mov
in
pop
xchg
popa
outsb
inc
mov
jge
incl
addl
mov
lods
fwait
adc
incl
push
dec
imul
adc
add
mov
int
or
dec
test
fucomip
inc
fcmovbe
cs
nop
fdivs
fdivs
pop
push
lock
in
aam
adc
int
adc
inc
incl
hlt
mov
push
pop
adc
addb
or
adc
mov
mov
pop
mov
popa
fidivrl
lret
xchg
pop
add
rorb
xchg
lret
xchg
xor
push
outsl
xchg
xchg
xchg
xchg
cmp
mov
lret
in
adc
xchg
xchg
pop
jle
ret
xchg
xchg
lret
xchg
call
sbb
lds
xlat
pop
adc
push
mov
hlt
adc
xchg
jnp
push
inc
test
jp
les
dec
inc
inc
out
and
or
movsb
xchg
cltd
ja
dec
adc
mov
loope
and
jae
and
dec
push
testl
or
xor
test
or
int
clc
xor
add
je
mov
sahf
testb
jne
mov
loope
loopne
aas
aam
push
jno
add
add
hlt
pop
mov
jecxz
sbb
or
scas
or
mov
stos
lcall
dec
outsl
bound
and
pop
xchg
sbb
ja
inc
pop
seto
lods
inc
mov
inc
and
mov
push
sub
push
mov
lea
test
sti
call
jecxz
aad
jbe
jne
mov
repnz
sahf
clc
jbe
aas
ja
pcmpgtb
in
mov
imull
cltd
cltd
gs
cmp
outsb
mov
loope
inc
inc
shl
sbb
pushf
fildll
sbb
or
mov
inc
movsb
push
push
mov
cs
push
imul
mov
mov
and
xor
dec
fwait
insb
test
or
fisubl
punpcklwd
test
jmp
mov
pop
dec
cmpl
sahf
enter
mov
xor
add
xor
adc
adc
jecxz
rorl
iret
mov
lret
mov
stos
stos
loope
sbb
mov
push
lock
add
xchg
xor
jge
mov
dec
jae
bound
mov
insl
xchg
add
les
xor
or
adc
cwtl
sbb
mov
shrl
add
movsb
test
in
pop
lret
cmc
imul
pop
add
pop
fs
pop
sub
mov
in
add
shll
fldt
pop
xor
jns
fs
add
popf
jo
fs
jp
cmp
xchg
jp
sbb
sub
std
leave
inc
inc
test
push
test
dec
lods
pop
shrb
jge
sub
dec
mov
call
and
jle
nop
loopne
in
loope
lret
sub
invd
adc
scas
adc
mov
roll
ror
mov
pushf
push
xchg
fldcw
inc
add
mov
jecxz
pop
lds
xor
sbb
clc
sub
adc
jne
jnp
mov
and
shr
ss
shrb
mov
cmp
xor
pop
pop
cmc
xchg
fisttpl
jl
popa
jnp
xchg
bswap
addb
loopne
inc
hlt
ficomps
add
xchg
inc
jl
push
add
pop
cmp
xchg
pop
shrl
insl
imul
xchg
test
loopne
sbbb
pop
leave
flds
jp
xor
test
cs
push
push
or
sbb
mov
inc
mov
leave
push
mov
or
test
inc
dec
imul
mov
pop
insb
and
xchg
mov
into
mov
out
pusha
push
adc
sub
cmp
pop
pop
push
lea
push
or
pop
add
cmp
and
pop
insl
mov
ret
lret
add
push
daa
stc
or
add
iret
and
and
sbb
aas
push
loopne
mov
xchg
mov
enter
popa
shlb
add
adc
aaa
push
dec
sub
add
add
and
adc
jmp
jle
je
cmpsb
insl
xor
or
pushf
sbb
push
outsb
imul
lea
sub
add
jns
gs
pop
mov
sbb
fdivs
adc
sub
sbb
mov
xchg
ds
push
add
push
xor
or
es
pop
iret
addr16
pop
inc
test
xchg
pop
xor
cmp
outsl
shr
xchg
cmp
icebp
aaa
pop
shrb
pop
pushf
test
mov
mov
add
rclb
das
popa
and
ret
test
pop
lods
or
push
outsl
jo
stos
xor
stos
cs
jno
jnp
mov
js
jns
or
pop
dec
adc
subb
or
inc
loopne
repnz
or
adc
xlat
loope
xlat
imul
lret
arpl
pop
push
xor
or
cmpsl
es
add
xchg
in
jno
daa
and
xchg
mov
imul
ljmp
pop
fadds
loopne
lock
mov
xor
or
jns
and
push
xchg
inc
sub
or
or
in
sub
or
lods
enter
xor
movsl
orb
push
add
add
push
sbbl
fs
add
subl
fs
gs
push
jg
xor
sbb
add
sub
adc
pop
jmp
adc
addl
das
inc
push
sbb
mov
aas
dec
mov
ljmp
adc
fwait
mov
clc
mov
btr
xor
jl
push
push
scas
xchg
mov
mov
movsb
bound
cmp
ret
lods
repz
in
arpl
adc
adc
push
test
in
or
js
dec
shlb
fisttpll
push
push
xor
and
mov
and
loope
shlb
sbb
imul
mov
test
push
or
test
and
das
xchg
mov
xor
add
cs
push
aad
push
xor
inc
add
inc
scas
ret
lret
push
dec
scas
dec
xchg
and
mov
jecxz
sub
pop
or
mov
mov
or
and
cld
mov
test
adc
dec
mov
les
jbe
push
movsl
in
nop
lret
jo
inc
pusha
adc
push
mov
test
pop
xor
fadd
and
jge
lods
add
adc
inc
in
mov
lods
push
cmpsb
ja
and
and
dec
loope
xchg
invd
shl
mov
or
jp
and
aam
test
inc
sub
or
lahf
xor
mov
dec
mov
mov
stos
sub
dec
loop
jl
or
je
dec
dec
inc
pop
test
mov
icebp
jb
jle
inc
jge
rorl
sbb
sub
xor
and
fwait
jns
adc
imul
test
xor
and
bound
nop
dec
lods
mov
mov
ret
add
cmp
sbb
sub
pop
lret
aad
in
add
and
shr
xor
inc
inc
cmp
inc
sbb
outsl
xchg
add
js
and
push
rorl
call
push
aam
push
xorb
dec
sbb
or
push
daa
inc
call
mov
adc
push
aaa
dec
push
cli
and
pusha
pusha
and
psubb
push
and
cmp
push
loop
xor
fisttpll
push
mov
sub
xchg
inc
jmp
jecxz
xlat
or
sbb
jae
pop
pusha
pushf
and
mov
pop
mov
inc
xchg
inc
cmp
inc
dec
mov
adc
in
push
push
sbb
lods
jmp
add
pop
das
mov
xor
pushf
data16
scas
mov
out
dec
push
push
inc
jmp
popa
hlt
xor
bswap
gs
sub
stos
imul
cs
lods
ja
mov
and
das
pop
fadd
adc
sti
push
add
movsb
push
mov
loop
dec
pop
push
mov
xchg
jae
int3
movsb
arpl
or
sbb
insl
popa
xor
lahf
pop
ret
fsubrp
movsl
dec
adc
and
mov
jbe
mov
inc
lcall
adc
fstl
xor
addr16
popa
mov
or
cmp
jg
push
or
sahf
addb
outsl
call
push
imul
out
jae
je
or
hlt
imulb
cwtl
cmc
adc
ljmp
rclb
push
jmp
inc
dec
fidivrl
in
cmp
outsl
add
in
jle
adc
jmp
adc
ja
push
push
out
fnstsw
xlat
cmp
pop
xor
jmp
cmp
je
popf
mov
xor
push
hlt
aaa
add
pop
rcrl
je
sub
in
in
fists
sbb
pop
jne
ljmp
dec
or
adc
xor
mov
xor
in
dec
or
jbe
mov
cmp
xor
xchg
xor
outsb
sub
sbb
addb
sahf
mov
in
jecxz
push
mov
jmp
je
sbb
in
fiaddl
push
push
data16
outsl
fstpl
sbb
inc
imul
inc
mov
and
push
jb
inc
sbb
je
cmp
nop
pop
push
mov
jl
adc
mov
js
leave
repz
sbb
mov
push
aas
cmp
filds
dec
pop
insl
jl
addb
or
sbb
addr16
inc
sub
nop
xor
imul
pusha
shld
xchg
aaa
add
std
les
mov
add
mov
adc
movsb
js
sub
lock
sbb
dec
pusha
sbb
and
addb
fisubl
jg
mov
leave
js
int3
sarl
mov
xor
mov
add
aas
iret
cmp
fs
aas
cmp
clc
adc
in
push
aas
cmpsb
movsl
add
mov
test
sub
jg
adc
push
cmp
loopne
imul
mov
movsb
inc
loopne
add
cmp
stc
cmp
cmp
push
dec
push
loope
fsubl
inc
inc
fimuls
enter
pushf
xor
mov
aas
sub
stos
and
sbb
rclb
add
testb
inc
and
jmp
fdivrs
push
icebp
dec
jg
cmpl
add
lods
inc
xchg
pop
shlb
inc
pop
pusha
ret
push
inc
js
jnp
or
cli
movups
sub
and
mov
add
mov
mov
push
mov
xchg
mov
and
cmpb
enter
aas
push
xor
sub
jge
stos
jle
adc
push
fadds
pop
sub
clc
or
sub
js
jnp
cld
addl
adc
or
sub
fldl
ja
xchg
add
and
mov
cmp
xor
dec
pop
xchg
or
add
jbe
negl
xor
pop
adc
les
aaa
push
lods
loop
mov
xchg
lock
inc
dec
adc
sbb
dec
inc
inc
cltd
push
cmp
js
inc
and
mov
mov
inc
loopne
pop
je
pop
mov
adc
das
lret
stos
push
inc
je
enter
mov
jg
jne
or
mov
xchg
xlat
cmpsl
xor
fadds
push
cmp
push
shlb
arpl
data16
push
cmp
dec
or
mov
add
not
cmp
sub
push
jnp
outsl
adc
and
xor
adc
cmp
int3
sahf
push
inc
dec
arpl
aam
fcoml
or
andl
adc
clc
shll
movups
test
iret
in
cmp
dec
add
cmp
cltd
sub
sahf
clc
cmp
adc
fadds
sti
or
jno
roll
push
or
push
in
sub
mov
rcrb
pop
mov
add
jecxz
cmp
sub
inc
sub
aas
test
pop
dec
sti
fsubrl
rolb
imul
xchg
push
pop
jo
and
cmp
add
ffreep
jbe
js
mov
aam
sbb
push
push
xor
xchg
decb
cs
push
or
mov
dec
add
movb
ret
loope
and
ret
dec
aas
mov
inc
push
test
inc
stos
or
das
scas
dec
lret
xchg
and
ret
fmull
das
mov
pop
mulb
and
fs
push
push
adc
or
ret
lret
add
jnp
popa
jp
jge
lea
call
test
mov
mov
jmp
cmp
pop
and
and
add
and
mov
fmull
jle
push
inc
nop
pop
fsubrs
add
adc
mov
jae
or
dec
ss
mov
in
cmp
jo
daa
iret
or
adc
adc
imul
popa
loop
mov
sub
xor
mov
dec
inc
dec
mov
jge
aad
cmp
fsubs
or
push
dec
push
jl
xor
popa
mov
inc
xor
mov
add
cmp
popa
fdivrs
or
cmpsb
rorb
enter
inc
gs
fnsave
or
or
pop
mov
add
pop
nop
test
movsb
sarl
sbb
inc
lcall
dec
xor
xor
add
loopne
mov
lcall
xchg
outsb
mov
and
ret
test
push
incb
or
cmp
ret
ljmp
std
add
adc
mov
mov
ret
shlb
mov
cmp
jne
inc
sbb
sbb
push
xchg
dec
pushf
adc
lods
lcall
xor
or
adc
loop
mov
leave
jo
mov
call
mov
inc
repnz
cmp
cmpb
mov
pop
aad
shlb
push
hlt
xor
or
cwtl
jmp
enter
mov
fcompl
js
cs
popf
mov
xor
adc
mov
push
jl
pusha
es
lret
clc
imulb
dec
clc
mov
mov
xchg
adc
adc
or
js
adc
or
and
nop
loope
xchg
push
jb
syscall
inc
sahf
dec
mov
and
sbb
xchg
push
cmp
sub
mov
add
test
xchg
add
pushf
sbb
adc
inc
test
and
mov
fadds
and
xor
les
xor
xchg
pop
and
in
call
fs
rcrb
mov
add
adc
in
pushf
inc
dec
lret
pop
inc
loope
and
cmp
pop
xlat
call
cwtl
lods
push
scas
shlb
imul
rcrb
xchg
ja
loop
add
fdivl
cmpsl
inc
push
mov
xor
cmp
push
inc
sub
subb
cmp
xor
repnz
enter
push
mov
iret
test
fsubrs
daa
iret
push
rcrl
lods
rclb
setne
push
les
mov
adc
jo
mov
pop
pop
sub
xorl
add
iret
dec
mov
test
lock
pop
sbb
xor
outsl
stc
adc
or
xor
cmp
jge
mov
dec
cmp
cwtl
or
inc
adc
test
pop
push
adc
cmp
out
jge
hlt
cmp
aaa
aam
or
out
js
iret
add
add
xor
cmp
jle
jno
xor
mov
loopne
fnstenv
cwtl
jge
sub
sub
push
lea
lea
xor
icebp
js
lods
je
bound
cmc
pop
aam
test
mov
inc
sub
cld
rorl
incb
inc
in
xor
lret
xor
daa
push
adc
inc
cmpb
fsubr
jmp
sub
or
sub
aam
sub
add
push
or
or
jecxz
xchg
int
push
jo
mov
or
pop
rorb
add
add
mov
adc
je
add
cld
sti
scas
cli
fmuls
jmp
and
sub
fmull
cmp
jne
sarb
inc
or
mov
aas
fwait
movb
jmp
addr16
les
inc
fsts
sub
push
rclb
out
pop
movsb
push
mov
adc
sub
mov
orl
xchg
xchg
inc
sub
clc
jl
xor
push
and
frstor
dec
add
mov
stos
into
mov
xchg
dec
test
ret
pop
jne
inc
dec
ss
jns
fnstcw
jge
nop
dec
in
stc
or
or
shl
jg
sub
dec
fwait
jmp
push
les
inc
push
shll
push
dec
call
pusha
dec
cmp
testb
enter
rolb
js
jle
xchg
test
test
jo
pop
mov
add
or
outsl
repz
adc
adc
jo
mov
cwtl
push
adc
aad
sub
add
das
jmp
js
fbld
rcrb
aad
arpl
cmp
sub
jl
shr
dec
jl
jo
add
aaa
add
jne
in
imul
shlb
je
movsb
dec
dec
lea
cmp
xchg
addb
int
cmp
sub
dec
add
push
xchg
dec
aad
daa
add
stos
sbb
inc
test
insl
push
rorb
int
adc
adc
mov
jbe
shlb
test
xchg
ljmp
outsb
dec
ret
aam
adc
mov
or
leave
sub
jne
out
xchg
adc
imulb
jp
pusha
xor
sub
push
push
push
mov
pop
inc
or
aas
inc
test
or
iret
push
and
push
jmp
and
pusha
push
shlb
add
enter
pop
or
mov
push
arpl
add
js
imul
inc
xor
xor
adc
add
adc
mov
jbe
idivl
push
in
jle
inc
loope
les
dec
mov
test
jbe
sub
clc
aad
mov
pusha
nop
jns
out
movups
into
pop
push
add
pop
pop
ret
inc
push
or
gs
clc
sub
add
add
inc
fcoms
mov
rolb
add
fsubr
mov
gs
mov
je
inc
lock
add
ret
sub
mov
sbb
xor
rolb
lock
sbb
add
flds
sbb
stc
loope
sub
pop
enter
pop
enter
push
stos
mov
add
adc
les
or
or
jns
or
dec
aas
adc
imul
scas
sbb
je
mov
or
and
sbbl
sbb
fsubrl
mov
arpl
call
mov
push
jne
inc
pop
cwtl
mov
test
inc
cltd
pop
test
hlt
pop
inc
lret
adc
fdivrs
test
lods
sbb
dec
lods
push
movb
mov
pop
ss
xchg
add
popf
mov
dec
cmp
push
stc
cs
or
call
sub
pop
scas
push
push
adc
or
add
sbb
adc
jnp
flds
or
jo
mov
mov
das
or
mov
cwtl
sbb
aam
dec
cwtl
sub
lea
loopne
in
imulb
and
inc
jl
push
push
inc
loopne
in
and
test
pop
outsl
dec
insl
cmp
jge
sbb
inc
adc
sbb
inc
insb
insl
lahf
pushf
test
das
fldcw
gs
pop
lods
dec
aas
push
inc
adcb
xor
in
test
sbb
inc
outsb
lds
pop
push
or
sub
in
data16
sub
dec
repnz
pop
cmp
inc
push
xor
inc
pop
mov
rcl
inc
aad
rclb
sbb
inc
mov
pop
adc
cmp
add
decb
cmc
sub
cmp
jge
adc
and
cmp
or
push
pop
add
xor
iret
in
fmuls
rcl
sbb
pop
into
in
adc
cltd
and
mov
mov
jmp
scas
xchg
sub
dec
pop
test
adc
mov
out
sti
push
dec
leave
loopne
in
jb
mov
or
in
add
cs
ds
mov
adc
adc
add
ret
loope
sub
mov
jge
dec
subb
ds
call
shr
nop
or
cmp
lock
gs
push
dec
push
push
adc
inc
lock
sbb
add
sub
xchg
jne
inc
ret
roll
or
bndstx
lock
clc
loop
popa
push
mov
pop
push
lret
leave
dec
push
or
lods
adc
mov
bound
sub
jne
dec
daa
mov
out
or
sub
fadds
dec
jl
lahf
cmp
jmp
rolb
sub
adc
nop
mov
ret
jo
adc
aas
xchg
mov
and
adc
mov
mov
mov
lea
stc
or
mov
mov
fistpll
sub
xor
les
sub
pop
clc
dec
call
insb
mov
ret
add
mov
cs
and
les
pop
sub
xchg
inc
pop
mov
dec
inc
enter
loopne
call
cmpsb
jle
xchg
mov
mov
sbb
ret
pusha
push
outsl
call
stos
add
packuswb
call
and
loopne
push
and
test
lgs
cmpb
sbb
inc
push
sbb
jns
pop
aad
addl
sbb
inc
xchg
or
xchg
mov
stos
test
pop
dec
push
daa
xchg
out
sarl
pop
adc
aam
inc
cmp
mov
sbb
xchg
mov
adc
or
inc
dec
stos
popf
or
push
push
aaa
cmp
ret
and
mov
sbb
add
mov
and
inc
pop
mov
mov
jge
popf
jb
aam
rcrb
push
pop
pop
and
sbb
pop
pop
sbb
adc
push
lcall
and
jo
xchg
fsubrs
xorb
ret
jae
mov
sbb
in
mov
push
cmp
test
pop
pop
jmp
xor
pop
pusha
adc
cmpsb
test
push
jmp
push
cmp
loope
inc
rclb
mov
pop
repnz
aas
adc
scas
stc
xor
push
pop
adc
insb
mov
inc
insb
nop
lret
out
fwait
push
mov
jp
repz
jp
push
movsl
pop
xchg
mov
or
negl
mov
mov
mov
cmp
jo
dec
sbb
xchg
loopne
jl
sarb
in
xchg
daa
test
sub
push
loopne
pop
shlb
and
fidivrl
adc
pop
mov
add
jl
xchg
test
pop
mov
inc
fdivrl
push
dec
ret
or
mov
cmp
out
push
adc
std
fistpl
sub
pop
push
jp
add
rorl
push
clc
mov
rorl
or
or
cld
xchg
scas
push
pop
hlt
enter
xchg
loopne
pop
and
sbb
mov
add
push
cwtl
dec
rcrl
loopne
call
adc
inc
insl
sbb
daa
jecxz
mov
and
mov
jne
insb
push
jo
xor
scas
loopne
je
fs
adc
inc
adc
js
cld
mov
sbb
push
and
jecxz
xchg
pushf
pushf
xor
aam
aam
dec
xor
pop
test
scas
dec
jmp
jo
inc
pop
lea
push
adc
xor
fsts
hlt
mov
xor
and
shrl
les
cmpsb
dec
pop
xor
dec
lahf
cmpb
lret
test
inc
sbb
add
les
dec
adc
or
aam
adc
rolb
les
es
lret
rol
loopne
dec
mov
repz
loopne
decb
push
dec
dec
pop
xor
addr16
push
addr16
loopne
jecxz
mov
in
inc
pop
add
out
shr
push
ja
cltd
xchg
pop
shlb
nop
cmp
push
ret
mov
es
dec
jmp
fldcw
sbb
mov
push
cmpb
mov
push
fdivrl
and
outsb
add
jmp
mov
je
sahf
xchg
pop
iret
sbb
mov
lret
cmp
sbb
jp
divl
push
sub
adc
xor
add
dec
cmp
and
pusha
fsubs
xor
loop
shll
pop
sti
int
cmp
rol
pop
and
sub
xor
inc
ret
shlb
mov
sbb
adc
and
or
mov
inc
test
jnp
les
mov
push
stc
sub
lea
int3
jmp
data16
dec
fildl
loopne
data16
sbb
fld
ror
mov
insl
adc
scas
nop
or
or
mov
pushf
es
xor
imul
ljmp
dec
jae
xchg
push
dec
jecxz
cmp
loop
sub
insb
sub
fs
mov
push
icebp
sub
imul
mov
push
xor
xor
shll
mov
mov
mov
sbb
movsb
jo
je
js
xchg
jecxz
adc
add
or
inc
clc
es
mov
pushf
lret
nop
push
shlb
sub
cmp
sbb
xorb
push
orl
rcll
cmpl
mov
jmp
add
xchg
mov
pop
lods
js
outsl
iret
xor
outsl
aas
je
adc
popa
sti
sbb
adc
mov
add
add
mov
xchg
mov
sub
push
cs
jne
daa
icebp
adcl
pop
nop
ret
dec
insb
mov
push
pop
cmp
mov
test
out
adc
inc
inc
pusha
add
je
outsb
pop
pop
inc
jo
shll
cmp
jl
cs
leave
popa
cld
xorl
setp
push
mov
sti
jnp
es
in
inc
dec
sub
fbstp
shlb
std
lret
add
cmpl
inc
enter
lret
push
je
pop
in
out
ds
icebp
pop
cmp
cmp
or
lret
and
gs
aas
mov
adc
xor
pop
movb
movsb
leave
cmp
test
inc
add
add
insb
mov
enter
cmovne
mov
popa
icebp
inc
or
xor
or
add
mov
sub
inc
aas
jbe
and
push
dec
push
sub
dec
data16
cli
addr16
pop
out
sahf
icebp
pop
lock
movl
pop
pop
or
sub
cvtdq2ps
push
insb
mov
push
jo
sbb
jo
fnstsw
adc
in
or
sbb
ss
inc
repz
imul
cmp
mov
hlt
inc
mov
sahf
scas
ficomps
xchg
inc
and
jne
xor
popf
sarb
repnz
jno
fimuls
sub
cs
cmp
cmp
sub
jmp
adc
arpl
adc
cs
or
sbb
mov
popf
push
arpl
smsw
lods
jo
sub
add
adc
add
lock
dec
adc
mov
xchg
data16
push
loop
movsb
push
push
pop
rorb
bound
or
sbbl
mov
out
adc
js
xchg
repz
inc
sub
mov
cmovp
insb
sbb
cmp
and
mov
loopne
shl
lea
fs
das
mov
mov
orl
jbe
or
in
or
cmpsb
iret
inc
jmp
mov
mov
sub
pop
or
adc
push
filds
mov
mov
adc
data16
rclb
ret
sbb
sbb
xorb
mov
dec
push
or
and
mov
lret
pop
push
shrl
aad
adc
rcrb
cmpl
add
out
mov
pop
mov
cmp
dec
aaa
insl
or
cmp
sub
sbb
cmp
cs
jg
lret
mov
dec
hlt
jne
push
add
jnp
je
mov
inc
xor
xor
xchg
out
repz
sbb
rclb
bound
shlb
stos
mov
movsb
xchg
ss
jle
sarb
adcb
adc
or
add
adc
ret
xchg
pop
imul
lock
inc
je
push
pop
adcb
outsl
pop
jb
inc
pop
mov
cltd
xor
insb
xchg
sub
mov
or
adc
sub
add
xchg
test
aam
ds
iret
and
xchg
or
pop
fstl
push
adc
xchg
pop
push
cmpsb
adc
sub
lock
clc
pop
mov
inc
cmp
lods
push
in
adc
rcl
or
aas
pop
and
leave
and
cmp
inc
jb
xor
pop
and
inc
inc
jecxz
inc
jb
ffreep
popf
scas
rolb
mov
jnp
or
xchg
insl
push
sti
std
pop
push
pop
daa
outsl
push
adc
xor
jnp
sub
push
pushl
int
insl
xor
or
xor
cmpl
lret
outsl
das
push
or
movsl
or
je
arpl
mov
jle
pop
mov
jne
push
jmp
movzbl
mov
js
inc
mov
in
inc
mov
adc
cmp
movl
aaa
cmp
sbb
into
fistl
cli
addb
push
out
add
aad
lds
inc
mov
stos
enter
inc
incl
mov
dec
adc
sub
or
sbb
sub
rorb
dec
inc
mov
adc
gs
dec
test
in
lret
or
shll
inc
sub
aad
sbb
movsb
or
push
in
call
add
inc
outsl
lock
pop
xor
mov
push
pop
add
and
mov
and
rcrb
ds
ret
jp
mov
stos
dec
jne
mov
lds
into
stos
rcl
mov
shlb
inc
pop
mov
adc
sub
xchg
and
or
inc
xor
frstor
nop
push
jmp
mov
inc
stos
insl
inc
push
aaa
pushl
dec
xor
dec
inc
add
clc
icebp
push
mov
sbb
xlat
mov
dec
dec
in
lds
lods
push
pop
sub
add
sub
cs
mov
shll
loopne
dec
jb
mov
fcmovb
adc
fildl
test
inc
sbb
rcrb
jne
rorb
mov
std
xchg
movsb
in
fimull
push
sub
or
repnz
aad
inc
es
cmp
sbb
fs
stc
or
add
adc
movl
movsl
sbbl
int
jmp
sbb
xor
int3
popa
push
inc
bnd
js
mov
push
adc
or
adc
pop
adc
sbb
jp
fidivl
dec
push
popa
dec
xor
mov
jg
outsb
das
sahf
lcall
pop
push
pop
add
cmc
sbb
pop
in
imul
xor
out
shl
push
js
rcrb
jmp
decl
add
pop
sbb
ss
lock
pop
xchg
ds
xchg
sub
orb
roll
test
xor
mov
dec
jge
push
mov
xchg
inc
sub
fwait
test
js
sahf
dec
or
inc
sarb
inc
sbb
out
insl
mov
test
je
jecxz
dec
jmp
mov
mov
jl
sbb
mov
inc
mov
int3
mov
jp
das
dec
jmp
scas
je
cmp
sarb
xchg
jp
pop
push
or
jnp
and
aaa
mov
add
mov
mov
idiv
sbb
mov
std
pop
icebp
inc
push
xor
push
js
je
cld
dec
jne
pop
jb
jno
inc
lcall
negb
jnp
cmpsb
mov
adc
and
mov
mov
movl
xchg
pop
jge
cmp
sbb
andb
mov
call
jno
jne
push
mov
pop
scas
sub
insl
roll
push
repz
adc
inc
xor
ja
lahf
adc
mov
mov
scas
push
aam
sbb
push
mov
ret
sbb
or
push
and
fcompl
mov
adc
fistpl
mov
sbb
sub
xchg
jmp
fmul
js
jmp
or
inc
sub
clc
jns
cmp
dec
dec
negl
add
sbb
stos
xchg
add
xor
das
popa
mov
sti
sbb
adc
add
je
sbb
and
inc
jne
mov
shlb
mov
inc
xor
ret
inc
sub
dec
inc
pop
mov
arpl
inc
inc
push
or
inc
daa
add
fcomps
pop
jne
outsb
insb
test
aad
mov
cltd
nop
or
aaa
dec
and
dec
inc
jne
or
cmp
cmp
insl
dec
sub
inc
cmp
pop
les
add
mov
shrl
mov
dec
mov
clc
cs
pop
xor
or
and
cmc
add
pop
aam
cmc
adc
cmp
mov
mov
inc
sub
jo
inc
inc
sub
mov
mov
or
jl
cmp
dec
movb
fadds
test
add
add
adc
add
push
orb
movsb
in
jo
adcb
in
test
popf
pop
rcl
xchg
loopne
testl
dec
mov
push
mov
push
test
cmp
pop
iret
les
jns
mov
ret
add
imul
loop
gs
mov
or
jae
dec
sbb
inc
push
stos
call
pushf
lods
xor
lock
dec
adc
or
pop
cltd
xchg
mov
inc
iret
daa
pop
test
enter
mov
xchg
adc
ss
adc
mov
ret
shrb
xchg
fnstenv
ljmp
jo
xor
pop
rcrb
jo
or
pop
mov
jl
jmp
xchg
aad
lret
orb
inc
aam
js
in
and
mov
imul
pop
daa
mov
insl
sbb
xor
insb
pop
cmp
test
sub
jl
iret
push
mov
les
or
sub
mov
adc
and
adcb
jp
and
inc
adc
inc
aas
gs
dec
pop
aam
rol
mov
rclb
lea
inc
inc
xor
movsl
mov
fucomip
or
adc
mov
or
es
mov
sub
das
ret
gs
add
imul
clc
shrl
pushf
pushf
mov
fstp
xchg
push
xorb
int
lods
pop
hlt
in
addr16
xchg
fsubl
or
add
pop
cmp
dec
fsubs
clc
ficoms
jno
pop
fcoml
lahf
iret
nop
fnsave
fnsave
daa
cmp
sub
xchg
mov
jnp
movsl
sar
xchg
push
mov
aas
dec
jge
ljmp
or
add
pop
aaa
push
xchg
jp
xchg
mov
pop
in
mov
xor
xor
das
xor
mov
jae
int
jle
dec
iret
dec
ret
lret
push
sti
and
sub
mov
push
dec
jns,pn
sbb
jne
sbb
ficoml
jns
mov
jae
or
xchg
xor
cmp
xchg
in
fsubrp
mov
cmp
inc
or
pop
sbbb
inc
sbb
orb
leave
lods
inc
xchg
les
dec
jge
push
dec
cmc
clc
mov
sbb
cwtl
lret
mov
in
mov
ret
cmp
mov
inc
sbb
mov
add
sti
shrb
push
popf
jp
inc
outsb
dec
and
and
inc
and
and
xchg
xchg
mov
inc
push
jp
and
pop
lods
jle
xchg
cli
adc
hlt
mov
jae
mov
das
lea
pop
cli
push
add
fwait
pop
and
fiaddl
sub
push
add
jbe
push
sarb
and
cmp
inc
xchg
out
imul
cli
mov
mov
xlat
adc
mov
dec
sub
add
mov
in
adcl
out
cmp
push
xchg
jbe
dec
push
call
gs
testb
add
mov
orb
pop
or
clc
in
cld
inc
pop
mov
jno
inc
add
or
ret
popf
aam
add
xlat
lret
popf
xchg
movsb
pop
pop
xlat
int
lcall
int
data16
hlt
call
mov
fcomps
outsl
loopne
ss
xor
or
ret
sbb
imul
push
pop
icebp
popa
or
push
scas
dec
inc
or
push
add
outsl
adc
nop
push
ljmp
popa
push
add
movsl
jge
aam
shrb
xor
inc
inc
inc
cltd
xlat
xor
or
and
adc
or
and
inc
aam
popa
jge
pop
movl
sub
nop
pop
aam
mov
mov
push
xor
popl
xor
jecxz
pop
js
cli
push
cmp
jne
mov
and
push
inc
inc
ljmp
push
push
lcall
out
pop
xor
mov
mov
inc
loope
jnp
loope
lods
add
xchg
loop
dec
mov
call
lods
enter
jnp
outsl
rcl
clc
call
ds
test
orb
mov
add
jle
add
adc
popa
filds
mov
push
movl
mov
es
and
add
push
cmp
jge,pn
add
cltd
into
int3
subb
fucom
bound
or
cli
pop
test
adc
push
sbb
pusha
rcrl
inc
iret
or
lea
nop
sbb
rcrb
cmp
jmp
cmp
or
or
cmp
and
iret
je
ja
mov
push
adc
mov
jmp
cmp
pop
pop
jp
ds
push
mov
sbb
insb
loope
ret
jg
shr
test
hlt
inc
js
dec
pop
int
pop
mov
ja
or
xchg
shrb
cmpsb
push
cmpb
mov
jle
or
jg
roll
pop
prefetch
adc
lods
int
sarb
outsl
fwait
push
dec
and
cmp
sub
inc
sbb
adc
or
daa
enter
mov
add
sbb
add
gs
lret
dec
inc
dec
inc
adc
dec
jno
mov
cmp
push
dec
bound
push
jmp
mov
jp
lods
mov
and
sbb
je
push
insl
add
incb
xchg
pop
lock
xor
add
cmp
cmp
loopne
test
sub
xchg
mov
xor
outsb
pop
enter
aas
add
pop
jb
sar
in
out
or
mull
testb
push
sub
push
loope
adc
jge
inc
jl
sbb
pop
xor
pop
stc
inc
ss
mov
push
arpl
push
add
popf
cmp
hlt
pop
test
lret
push
xor
lret
loope
or
push
rorb
pop
mov
sbb
call
xor
push
push
inc
in
fimull
out
mov
imul
jae
ds
call
mov
sub
and
aam
cwtl
add
xlat
inc
mov
xlat
shll
jmp
sbb
mov
adc
lcall
push
mov
or
jl
adc
inc
add
mov
dec
int3
mov
xlat
mov
jb
test
or
jmp
and
xchg
into
or
popa
out
push
pop
mov
adc
push
in
jno
aam
aaa
in
ja
in
add
push
jno
test
movsl
orl
jbe
ss
push
test
cmp
movsb
dec
ret
jne
xor
inc
pushf
cmc
push
inc
push
stos
mov
adc
adc
stos
das
jecxz
pop
fmull
and
prefetch
pop
int3
push
insl
jmp
adc
cwtl
mov
xchg
add
jb
or
loopew
outsb
or
inc
inc
movsb
rclb
inc
jle
and
ret
daa
inc
sbb
push
xchg
adc
pop
dec
sub
loope
fnsave
push
sbb
loopne
inc
dec
push
arpl
js
cmp
cmp
pushf
push
ljmp
xchg
xor
cmpsb
inc
mov
and
xlat
adc
loope
mov
mov
mov
adc
or
push
rolb
mov
cmpl
notb
or
mov
test
inc
lods
xchg
add
jns
add
shr
xchg
pusha
and
lods
stc
int
sub
sbb
dec
test
dec
cmp
xor
mov
mov
loop
rclb
les
scas
pusha
add
cld
add
inc
es
pop
cli
jmp
lods
test
enter
out
push
cmp
ss
push
call
mov
lea
rorb
mov
std
ljmp
cmp
icebp
adc
ja
jl
cmp
aad
mov
es
test
sbb
mov
add
lret
inc
xor
mov
les
mov
inc
push
movsb
add
add
mov
add
sti
rorb
out
push
mov
rclb
ret
xchg
hlt
inc
add
or
repz
jmp
inc
hlt
add
push
or
rcr
push
sbb
or
push
and
sub
mov
cmpsb
ret
cld
pop
cmp
and
mov
add
xchg
inc
mov
mov
lea
and
call
movsl
orb
xchg
or
or
adc
adc
arpl
pop
push
push
testl
adc
pop
testb
sub
mov
je
lock
dec
xor
pop
dec
pop
xor
aam
add
or
pop
aam
mov
cmp
mov
cmc
pushf
add
in
mov
in
pushf
sbb
loopne
call
xor
or
pop
divl
imul
lock
sbb
mov
sbb
loop
cmp
dec
imull
pop
je
dec
insb
mov
rcl
mov
mov
pop
pop
test
mov
leave
dec
push
movsb
adc
xchg
add
les
adcw
scas
sbb
in
push
inc
nop
out
dec
mov
add
dec
mov
cmp
inc
rclb
adc
push
adcl
mov
xor
mov
test
push
in
loope
sbb
out
mov
push
outsb
cmp
call
stos
scas
xchg
dec
sti
cmpsl
pop
inc
outsl
push
outsl
int3
dec
ja
adc
add
push
inc
and
xchg
sbb
push
rcl
fcompl
mov
cmp
mov
dec
jecxz
call
and
xor
sbb
enter
jno
fcmovbe
jmp
sbb
adc
and
add
pop
xchg
adc
mov
mov
and
movl
push
fcom
mov
sub
aas
std
rol
add
inc
imul
rorb
js
dec
rorb
mov
fmull
pusha
bound
or
sbb
pop
incb
ds
push
fbld
loope
jmp
cmp
mov
inc
outsb
jbe
mov
pop
jp
push
jmp
xchg
mov
fists
or
cltd
jns
movsb
cwtl
sub
inc
sbb
test
dec
mov
ret
mov
scas
orb
xchg
jl
mov
loope
or
out
dec
mov
out
inc
cmp
adc
js
xchg
xor
addl
sbb
arpl
into
sub
pushl
push
sbb
or
daa
mov
sbb
shl
or
loope
add
ror
sahf
or
int
push
movsl
ret
ret
mov
addb
adc
jle
add
movsl
fs
xor
inc
inc
xchg
lret
cmp
ret
push
dec
sti
cmp
push
sbb
add
in
push
cmp
xor
lds
cmpsb
lcall
mov
je
rorl
and
sub
push
sbb
mov
pop
mov
and
push
and
je
add
sbb
pop
fsubs
and
scas
aaa
inc
mov
pop
sub
and
test
dec
push
pop
fidivs
push
lret
jl
dec
jo
dec
in
fimuls
ljmp
cmpl
jle
gs
ljmp
jae
rcll
daa
push
dec
xorb
orb
push
pop
lcall
cmp
or
pop
sub
test
or
pop
fidivrl
or
dec
xchg
loopne
mov
push
shll
mov
inc
xchg
cmp
roll
add
shrb
inc
mov
inc
pop
dec
xchg
mov
ret
mov
daa
pusha
pop
lea
mov
jne
push
adc
int3
sub
dec
jl
inc
adc
fmull
outsb
adc
xchg
and
jb
mov
push
inc
lods
push
and
aaa
data16
add
test
push
pop
xchg
dec
movsb
cmpb
pandn
xchg
orb
pop
in
sti
insl
sbb
jne
adc
jmp
jmp
or
jne
out
lods
sahf
dec
insb
dec
dec
push
sub
jae
mov
mov
xchg
addr16
movsb
fcoms
aam
movsb
mov
rorb
int3
pop
les
jns
fmulp
jbe
les
fmulp
cmpb
xchg
out
sbb
popf
mov
out
and
xchg
cmp
es
jg
fsubl
and
sbb
nop
or
mov
sub
ja
and
or
ret
ss
insb
pop
add
pusha
add
jbe
pop
push
in
mov
js
add
dec
fsqrt
and
lret
add
add
inc
add
addr16
add
push
pop
mulb
adc
or
in
ss
iret
enter
lods
movsb
sti
fdivl
xchg
dec
lock
adc
outsb
sub
aas
in
xchg
imul
fcoms
or
dec
mov
adc
out
dec
lret
xor
insb
popa
jo
cmp
add
adcb
sbb
push
jnp
sbb
push
in
loope
mov
sbb
inc
pusha
dec
sbb
sarb
mov
inc
outsl
push
add
sub
sbb
and
xor
imul
jne
in
sbb
jae
push
sbb
test
sbb
or
dec
inc
stc
adc
lock
and
imul
cmp
movsb
nop
aaa
ds
cmpsl
repnz
lds
fdivrs
push
or
inc
das
xor
hlt
push
imul
pop
mov
je
fs
roll
int
xor
dec
or
xchg
ja
sub
pop
outsb
adc
loopne
push
dec
or
cld
test
pop
popa
gs
mov
push
sub
xor
xor
xor
pusha
in
add
mov
or
pop
xor
mov
cli
call
ss
cmpsb
lea
push
inc
push
mov
push
cmpsb
movsb
sahf
nop
pop
std
popa
ret
popa
push
adc
daa
mov
test
or
push
ds
sbb
scas
inc
sti
inc
in
adc
mov
pop
es
das
add
push
add
call
dec
jnp
adc
scas
ss
push
push
cmp
mov
push
adc
xor
mov
ja
jns
lods
add
ja
xor
inc
add
ret
insb
scas
or
int
pop
or
sub
aas
or
or
ds
cmp
mov
rcll
sub
test
and
mov
repz
icebp
or
fsubrl
add
inc
adc
xor
jae
inc
add
pop
adc
add
pop
add
or
std
push
mov
loopne
imul
cwtl
psubw
leave
xor
rol
mov
push
push
mov
mov
ret
cmp
shrb
jp
xor
pop
mov
insb
sbbl
inc
pop
push
cmpsl
push
sub
sub
aaa
fldl
adc
leave
mov
push
aaa
mov
fisubrl
test
loope
rol
push
xor
inc
adc
je
mov
and
mov
push
pop
mov
inc
aaa
out
ss
add
fwait
or
inc
in
ljmp
inc
inc
inc
inc
jbe
ret
mov
cmc
in
je
cmpsb
adc
pop
add
inc
or
sub
sub
mov
dec
or
imul
add
adc
mov
or
add
mov
fwait
push
mov
je
fisttpl
addb
pop
or
mov
mov
jae
out
add
add
je
add
in
es
das
movsb
push
dec
push
in
cli
inc
leave
add
adc
aad
push
and
leave
mov
idivl
pusha
mov
lods
call
dec
pop
cmp
cmpsl
mov
lds
pushl
pop
mov
push
cmp
and
outsb
push
pop
sbb
xchg
add
addb
data16
add
lds
in
mov
add
adc
and
aaa
mov
adc
mov
mov
leave
xchg
adc
mov
mov
fiadds
xor
adc
sbb
inc
mov
jo
ret
jo
mov
icebp
pop
into
sub
imul
jmp
imul
xchg
ja
pop
dec
addps
cmp
jo
ja
jle
xor
push
and
adc
insl
into
push
jge
test
cmp
inc
mov
mov
xor
jecxz
aad
loope
sbb
add
mov
push
jl
daa
fldcw
mov
shlb
cmp
ss
clc
push
or
int3
into
jnp
xor
sub
push
mov
push
xchg
cmp
or
cmc
inc
sub
pop
sub
mov
add
sub
dec
lods
jle
int
mov
jb
lock
xchg
cmp
nop
sbb
or
xlat
xchg
es
xor
add
loope
scas
scas
shrl
cmpsb
aad
add
daa
add
mov
or
add
and
mov
sub
nop
scas
pop
push
clc
push
shll
clc
dec
lcall
adc
mov
flds
pop
es
popa
jno
pop
pushl
lcall
jne
pop
push
test
aas
or
xchg
adc
roll
popa
mov
scas
mov
lods
inc
or
xor
incl
dec
xor
mov
loope
and
dec
push
push
in
adc
xorb
xchg
pop
pushf
cwtl
cmp
pop
or
scas
nop
movsb
pop
out
cmp
pop
in
aad
outsl
das
lock
out
aam
out
add
add
mov
add
add
add
sbb
mov
nop
scas
pop
add
adc
std
sbb
jg
push
push
push
or
add
dec
cmpsl
cwtl
lds
les
lds
loopne
push
mov
pop
inc
sbb
imul
and
or
push
sti
xchg
jo
roll
int
adc
xlat
fists
add
pusha
push
js
and
adc
imul
push
leave
getsec
sub
pop
mov
mov
add
mov
aaa
test
rorl
aam
push
push
adc
aas
dec
mov
daa
stos
push
mov
jns
sbb
push
fcoms
cs
and
outsb
add
xor
xor
test
or
adc
fcoms
pusha
sbb
pop
xor
arpl
add
and
or
or
or
fcom
inc
out
and
sub
cmp
ret
aas
or
mov
push
rcr
roll
fst
testb
data16
or
push
mov
enter
sub
lret
lret
inc
sub
out
jns
sub
push
xor
out
cmp
push
adcb
iret
repz
hlt
int3
adc
lock
repz
notl
push
sbb
jle
cmp
fnstsw
xor
xor
dec
push
adc
int3
and
mov
add
imul
pop
rorl
xor
and
mov
pop
mov
mov
loope
movsl
in
divb
xor
int3
and
adc
or
lea
or
out
sbb
add
inc
cwtl
insl
cmpsl
in
xor
mov
gs
cmp
dec
add
and
inc
adc
ja
movsb
jnp
orl
and
mov
ret
fcmovbe
ss
push
push
push
fimull
mov
outsb
outsb
insb
shrl
or
das
dec
testl
rolb
adc
lock
xchg
pushw
or
pop
loopne
das
in
push
aaa
xor
repnz
sbb
cmp
fdivrs
adcb
adc
pop
sbb
test
or
add
adc
pop
sub
popa
cmpsl
and
jno
mov
fdiv
jmp
dec
mov
xorb
cmp
dec
outsl
pop
in
xchg
das
sbb
or
push
outsb
out
mov
cmpsl
or
cmp
or
int
imul
out
jecxz
inc
inc
inc
mov
repz
loope
or
mov
outsb
call
xor
adc
add
lret
cmp
push
lods
mov
adc
sbb
inc
pop
jns
add
adc
mov
insb
and
insl
insl
or
sub
bound
inc
mov
jns
push
inc
imul
xor
or
xchg
cs
fists
inc
adc
add
adc
insl
insl
fcom
cwtl
and
loop
mov
sub
or
jle
add
or
mov
es
or
sub
jnp
ja
scas
fstl
sbb
jecxz
xor
xor
pop
add
mov
jge
pop
cmp
and
add
pushf
bnd
lahf
or
cltd
aaa
xor
add
add
out
xchg
adc
push
mov
adc
xor
add
add
es
pop
or
push
jae
jnp
cmp
or
add
addb
push
adc
push
mov
out
mov
test
or
loopne
lahf
stos
add
cmpb
fnstenv
or
sbb
adc
int3
test
mov
or
add
add
push
fnstsw
clc
sbb
test
pop
adc
dec
adc
repz
ret
decl
and
adc
rclb
movl
push
das
push
add
jp
and
push
or
pusha
insb
sbb
scas
sub
jnp
adc
pop
and
push
push
adc
push
fsubrs
and
fcmovnbe
push
adc
dec
push
adc
or
push
rcll
and
dec
adc
sbb
pop
fwait
mov
ret
mov
lret
dec
and
add
fdivl
aaa
subb
cmc
inc
or
xor
lea
lcall
ret
ja
fs
invd
dec
stc
outsb
mov
add
add
or
sbb
mov
push
and
add
xchg
inc
out
mov
hlt
pop
add
cmp
iret
ja
mov
roll
push
inc
aad
loopne
inc
dec
fldl
push
fisttps
fimull
test
das
outsl
pop
adc
inc
fistl
js
jnp
mov
addl
dec
aaa
pop
pavgb
dec
fisubs
push
push
fcomip
pop
nop
popf
shlb
negb
insb
adc
sub
in
or
addl
inc
aad
xchg
subb
rolb
adc
push
xor
mov
sub
mov
or
cltd
pusha
addl
mov
in
add
sub
sbb
xchg
or
cltd
movsb
pusha
inc
in
sbb
lods
pop
dec
out
pop
sti
jge
stos
shrl
aas
xor
cmovnp
ret
cmp
or
cmp
cmp
lds
xor
mov
mov
push
dec
in
imul
push
sbb
bound
jb
ljmp
sbb
adc
xor
jo
xor
sub
add
lcall
inc
sbb
aam
add
dec
in
sbb
add
mov
or
nop
arpl
add
add
push
inc
aaa
push
jmp
add
pop
dec
push
add
and
jmp
add
pop
rcrb
andb
push
mov
call
xor
sti
mov
sbb
mov
mov
pop
and
leave
add
add
mov
addb
inc
push
sbb
and
enter
add
push
mov
push
test
and
arpl
rcrl
mov
sbb
dec
jle
lock
or
inc
adc
add
ret
les
or
rorb
xchg
ficoml
push
jmp
jl
inc
pushf
insb
stos
int3
sub
sub
or
outsl
mov
sbb
loope
inc
addb
pop
daa
or
pop
imul
outsb
push
mov
or
lock
mov
adc
in
loopne
lods
dec
add
and
inc
mov
mov
pop
add
or
ja
mov
addr16
add
jbe
aas
inc
sbb
adc
push
and
in
push
fcoml
dec
xor
add
in
imul
bound
pop
dec
pop
dec
insb
daa
dec
xchg
mov
dec
mov
outsb
adc
inc
ret
data16
ja
jns
jge
or
inc
jge
push
insl
call
outsb
sub
adc
push
pop
xor
das
in
push
push
shlb
inc
jae
jno
add
mov
sub
pop
out
cmp
push
addr16
cs
adc
int3
jbe
insl
cmp
sbbb
mov
nop
jle
adc
cwtl
pusha
adcb
insb
xchg
pop
cmpsb
imul
push
add
ds
adc
into
adc
ss
mov
xchg
int
and
sbb
and
mov
in
dec
cmp
jno
cmp
loopne
data16
cmpsl
or
pop
imul
or
jns
dec
dec
mov
sbb
loopne
mov
pop
adc
xchg
dec
add
sbb
or
ja
or
xchg
lret
xchg
xchg
shl
and
dec
insl
add
mov
jns
and
pop
jmp
jnp
sub
or
xchg
sub
dec
or
add
and
jge
jge
rorl
stc
test
xor
push
mov
jno
or
fbld
and
push
sbb
jnp
cmp
cmpb
push
or
es
jae
and
or
jg
dec
aaa
incb
push
mov
dec
mov
and
mov
les
mov
add
inc
mov
add
repnz
ror
sbb
and
adc
push
adc
xchg
lds
or
mov
movsb
cld
repnz
xor
unpckhps
jne
add
stc
repnz
test
testb
add
dec
inc
jbe
bound
or
or
adc
gs
and
cmp
sbb
adc
mov
jge
jge
icebp
adc
adc
add
push
or
sbb
or
cmp
and
add
in
xor
cmp
roll
insl
pop
cs
inc
prefetch
or
mov
les
or
mov
inc
ss
xchg
mov
xchg
mov
movsl
shl
fildll
aam
dec
movsl
jecxz
mov
jecxz
popf
mov
out
test
jae
adc
and
add
mov
aas
pop
adc
and
cwtl
call
adc
push
js
add
mulb
gs
sbb
xchg
je
inc
addb
popl
enter
dec
sbb
inc
mov
push
sub
mov
push
sub
fwait
sub
subb
push
aad
add
dec
xchg
into
jnp
icebp
sbb
inc
xor
inc
out
sbb
fsts
mov
mov
sub
pop
pop
xlat
xchg
pop
sub
inc
push
repz
cwtl
dec
jl
jnp
pop
ret
in
add
sub
insb
pop
dec
mov
ret
push
notl
cmp
adc
or
mov
inc
sub
aam
push
mov
pcmpgtb
popa
xchg
sub
enter
lahf
or
cmp
and
int3
out
sbb
lahf
xor
and
add
add
mov
xor
push
imul
mov
xchg
cmpsl
stc
ds
adc
scas
lcall
xchg
xchg
adc
dec
loopne
cmp
stos
sbb
lea
aas
inc
or
mov
pop
iret
dec
cmp
push
popf
insl
pop
lea
add
inc
loope
sub
sub
pcmpgtb
leave
leave
jg
add
jo
jecxz
adcb
mov
sub
in
mov
and
dec
call
jmp
adc
dec
js
xor
xlat
loopne
dec
adc
xchg
daa
or
inc
dec
xchg
and
inc
add
or
andl
inc
sub
std
nop
mov
sarb
dec
insl
sbb
push
or
sbb
roll
cs
adc
sbb
adc
rcr
pop
xlat
les
loop
sbb
lods
push
das
sbb
push
in
push
cmp
xlat
fnsave
cli
push
adc
stos
push
push
incl
mov
inc
pop
sbbl
aas
scas
mov
jmp
enter
popa
cmp
jnp
pop
fs
xchg
jge
sbb
stc
mov
ljmp
lods
pop
loopne
ja
das
inc
and
paddsb
aam
add
cmp
rol
sub
mov
pop
mov
pop
dec
pop
mov
std
dec
adc
pusha
sbb
rclb
fadds
call
mov
stc
and
add
stc
les
mov
or
jnp
or
mov
xor
in
and
loope
dec
mov
inc
xchg
fs
and
mov
inc
roll
mov
mov
inc
dec
mov
enter
add
push
jecxz
push
push
xchg
shl
adc
push
sbb
jg
push
jae
pusha
mov
sub
dec
inc
pop
push
addr16
inc
gs
sar
ss
or
push
scas
movl
push
dec
insb
mov
or
sbb
pop
pop
mov
mov
cmp
orb
and
mov
inc
or
add
les
sahf
mov
sarl
push
ret
push
add
xor
xor
nop
or
pop
dec
or
repz
movsb
jecxz
inc
cs
aas
fildl
dec
movb
nop
nop
mov
fisttpl
or
cmp
ficomps
test
sbb
and
fidivs
and
xchg
sbb
sub
cwtl
movl
jo
mov
dec
mov
add
test
imul
and
adc
xorb
lods
or
xor
dec
int
aas
jg
in
movsb
cmpsl
xor
mov
sbb
bound
mov
sbb
lea
pop
nop
dec
arpl
add
xor
cmp
sub
call
aas
or
push
dec
dec
aas
dec
addl
sbbb
push
sbb
xchg
push
cmc
pushf
push
or
or
xor
cmp
adc
imul
xchg
xor
push
sbb
stc
pushf
pop
and
pop
push
add
dec
nop
xchg
dec
fwait
int
xor
mov
push
dec
subl
test
lahf
add
fnstsw
lahf
shl
addb
js
mov
fimuls
or
sub
pop
or
adc
rcll
sub
and
or
add
add
jnp
or
or
dec
add
mov
xor
ljmp
in
push
stc
sub
xchg
and
stc
lret
testl
cmp
add
pop
sbb
aam
add
push
pop
or
inc
mov
add
add
xchg
mov
jae
lea
pop
pop
nop
jno
outsb
je
and
les
pop
gs
push
add
inc
sub
pop
and
mov
dec
and
lds
shlb
pop
testl
inc
out
mov
mov
pusha
cmp
lahf
fdivrl
insb
loope
or
add
rorb
andl
stos
pop
sub
adc
push
pop
mov
mov
in
pop
jns
insb
and
mov
js
das
push
jo
lods
rorl
adc
or
lds
aam
push
cld
adc
dec
lods
xor
add
cmpsl
sbb
lahf
nop
cmp
adc
repz
outsl
dec
outsl
cmp
aaa
push
lret
cs
pusha
add
jge
out
cwtl
fcoms
clc
cli
repnz
inc
inc
inc
shlb
push
pushf
inc
jle
lods
add
sbb
add
mov
inc
rolb
leave
inc
fadd
je
inc
mov
cmpsb
movl
fs
mov
sub
inc
add
int
inc
or
outsl
add
test
mov
inc
mov
inc
push
pop
scas
mov
xchg
fcomi
mov
outsl
dec
xchg
pop
push
inc
lcall
mov
sbb
aam
add
nop
sbb
pop
xchg
subl
dec
pop
pop
ret
inc
mov
fnop
ror
fistps
in
test
add
sub
nop
outsb
fwait
and
xor
and
mov
fists
xor
test
and
movsb
loope
cwtl
xor
add
mov
enter
and
sub
mov
jbe
cli
push
push
pop
pop
pop
and
orl
sbbb
push
dec
add
jno
fs
mov
jo
lcall
lods
adc
push
mov
lds
stos
sti
jne
lods
inc
mov
outsl
dec
inc
mov
ret
insb
sbb
dec
xor
fildl
sbb
fisttpl
cwtl
xchg
mov
fstps
pushf
fwait
das
shll
xchg
and
popa
addb
jb
push
inc
inc
cmp
test
ss
lods
xor
jne
inc
and
push
and
xor
and
lahf
adc
jo
pop
mov
sarl
inc
pop
sub
outsb
sub
cs
enter
dec
dec
pop
shl
das
push
mov
pop
aaa
inc
pop
daa
sub
dec
pop
inc
sub
gs
push
call
adc
ret
imul
adcb
leave
fldt
add
or
adc
pop
or
popa
stc
aaa
dec
pushf
mov
sub
dec
pop
push
add
xor
sub
and
mov
fwait
xor
add
mov
divl
cmp
movsl
and
jl
xorl
dec
shrl
cmp
mov
lods
adc
adc
cmc
mov
stc
pusha
stos
int
fs
das
inc
sbb
loope
jnp
and
inc
shlb
pushf
or
stos
cli
mov
jo
and
cmp
adc
movb
stc
js
sti
ret
mov
out
add
fldcw
test
gs
sub
jl
mov
inc
and
cmc
arpl
mov
cwtl
rcrl
repnz
cmp
pushf
push
nop
ja
mov
stos
and
in
lods
and
adc
test
xchg
mov
dec
xor
pop
jle
daa
daa
cmpsl
add
int3
decl
dec
mov
mov
mov
mov
stc
repnz
lcall
push
mov
decb
and
orb
inc
icebp
cvtps2pd
dec
dec
inc
cwtl
in
adc
and
outsl
mov
pop
mov
mov
mov
push
mov
psubb
fwait
adc
push
int3
fsubrp
cmp
mov
es
minps
testb
test
fs
push
gs
mov
add
add
push
add
add
sub
outsl
add
add
or
pusha
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
outsb
clc
call
sbb
cmp
cmp
mov
es
mov
jg
pop
cmpsb
out
in
fdivrp
jmp
ljmp
out
fcomip
decl
jmp
jmp
jmp
fisubrs
push
fcos
fdivr
xlat
call
call
call
call
call
call
call
dec
dec
dec
jmp
test
bound
xor
add
ret
sbb
out
imul
mov
dec
jnp
adc
add
nop
mov
cmp
cmpsl
stc
sub
fs
cmp
out
popf
in
repz
pop
xor
push
cwtl
push
clc
stc
mov
or
mov
sahf
out
cmpsl
aas
inc
push
data16
cs
or
out
fmull
shrl
cld
fdivl
movsl
jge
test
push
in
xlat
push
movsb
stc
mov
pop
jmp
push
sub
test
push
mov
int
and
or
sub
add
into
mov
mov
mov
cwtl
mov
jnp
data16
jo,pt
out
jecxz
hlt
repnz
cmpsb
mov
pop
out
ror
push
aam
sbb
mov
push
js
stc
ss
mov
inc
mov
inc
xchg
mov
iret
insl
or
cmp
dec
dec
not
pop
xchg
add
or
insl
or
dec
or
mov
push
pop
shrb
sub
scas
mov
data16
lcall
xor
push
push
mov
pop
ss
sub
insb
adc
ss
shrb
mov
or
mov
push
xorb
jl
xor
or
lods
ret
popa
std
dec
js
repnz
dec
dec
add
push
in
sub
or
imul
popa
dec
or
aas
addr16
or
daa
or
outsl
pop
pop
out
or
sub
push
sarb
jp
sub
adc
xor
cmpb
pop
inc
add
cmp
and
rorb
sbb
push
mov
das
lock
pop
dec
popf
roll
xor
jmp
shll
sub
and
mov
jmp
mov
daa
cmp
sbb
xchg
xor
sbb
xchg
arpl
sbb
jmp
xor
inc
or
test
icebp
jmp
push
inc
sub
mov
mov
add
cmp
orb
imul
imul
cmp
lahf
dec
add
or
rorb
pop
lret
outsl
rolb
cmp
or
mov
imul
xor
xchg
andb
add
jle
push
add
push
push
rol
xchg
inc
or
je
shlb
dec
add
pop
mov
dec
xor
dec
fstps
mov
cmpsl
dec
inc
in
mov
dec
test
imul
ss
xchg
gs
test
pop
push
jb
movl
xorb
push
xor
mov
rcrb
mov
sub
dec
jbe
lods
mov
adc
cmp
mov
in
mov
inc
dec
sbb
adcl
push
mov
push
insb
push
and
inc
or
in
rcll
daa
pop
dec
test
pop
in
aaa
adcl
stos
movsl
push
mov
inc
push
push
pushl
sub
adc
imul
nop
xor
inc
sub
fsubrs
cs
jg
mov
dec
add
xchg
out
add
out
or
adc
and
lock
scas
xchg
icebp
push
pusha
push
add
cltd
mov
cmpsl
cmp
aam
aad
in
push
scas
jl
push
xchg
lea
sbb
cmc
cmp
dec
rsm
sbb
push
or
sub
jp
nop
sbb
lds
cmp
pop
enter
aad
dec
cmp
inc
and
add
and
movsl
cmp
add
outsl
aas
dec
mov
or
xor
loop
inc
out
cmpsb
mov
xor
pop
test
inc
shlb
faddl
out
push
incl
jg
movsl
pop
lcall
fsubs
lcall
adc
sbb
insl
ret
adc
imul
or
popf
adc
mov
jl
jecxz
xchg
or
outsb
aad
add
test
mov
xor
sub
sbb
cltd
cmp
jl
sbb
sbb
sbb
sbb
mov
repz
sbb
push
mov
sbb
pop
xor
sbb
movsl
pop
pusha
sbb
mov
xchg
iret
and
or
xchg
xchg
jg
shl
xchg
xchg
lret
add
dec
outsl
or
xchg
xchg
xchg
mov
add
push
mov
xor
lcall
sub
pop
sbb
mov
std
lods
inc
shrb
xor
hlt
dec
xor
dec
test
aad
inc
fnstcw
flds
mov
jecxz
xor
sarb
push
dec
leave
xor
or
add
ret
mov
stos
sbbb
dec
imul
inc
sar
push
arpl
in
add
dec
push
in
or
add
dec
dec
mov
adc
packssdw
mov
daa
imul
sub
mov
mov
add
mov
divl
adc
flds
jl
loopne,pn
cltd
or
loopne
dec
push
lods
or
xchg
inc
pusha
mov
xchg
enter
cmp
arpl
and
das
loopne
and
add
cmp
and
mov
xchg
bound
pop
xor
sbb
adc
insl
cmp
sbb
jne
inc
mov
mov
pop
out
jae
inc
adc
pop
cmpsl
and
jl
add
aas
pop
inc
test
inc
int3
ss
gs
inc
aam
sbb
ja
add
xor
adc
lods
sbb
shlb
cmp
out
push
cwtl
dec
xchg
push
out
add
mov
or
push
mov
dec
pop
pop
adc
push
push
and
push
mov
or
fnstsw
inc
dec
testl
cwtl
jb
push
dec
cmpsb
sbb
hlt
xchg
inc
push
sbb
jbe
clc
addr16
insb
sub
daa
pop
shrb
mov
sub
subl
cwtl
push
push
pop
ss
mov
movsl
mov
sarl
dec
add
mov
mov
clc
shrb
fwait
enter
pop
jp
stos
add
loopne
jp
mov
pop
repnz
movsb
jno
sub
cmp
jns
lret
inc
and
bound
mov
or
adc
adc
adc
imul
push
jo
xchg
inc
jns
rcll
test
cltd
jo
pop
push
dec
fisttpll
or
scas
sub
push
fst
test
or
jae
xorl
xor
rcrb
or
or
insb
dec
pop
test
sbb
cltd
popa
shlb
add
sub
ss
aaa
std
sub
sbb
mov
sub
mov
jl
out
or
insb
outsb
or
cmpsl
daa
add
and
push
stos
or
inc
xor
xor
test
lods
loope
pop
loop
insb
loop
lds
andl
xor
adc
clc
pop
add
adc
mov
test
sub
jno
or
sub
add
push
xlat
xchg
fwait
add
adc
lcall
xorb
and
and
insb
aad
aad
int
or
jge
and
adc
ja
mov
sbb
mov
pop
addr16
or
popa
out
pusha
lock
bound
mov
insb
mov
push
sub
push
leave
pop
leave
push
loopne
fdivrl
inc
and
adc
adc
push
data16
or
subb
gs
mov
inc
scas
pop
push
mov
stos
mov
jp
cmp
ss
fisttps
push
ret
test
std
xchg
icebp
adcb
and
push
mov
jno
in
jmp
in
mov
sub
mov
add
repnz
fstpl
pop
mov
faddp
dec
adc
and
movsb
lods
test
and
outsl
test
add
icebp
sbb
les
mov
xor
popa
sub
jb
sbb
adc
stos
lret
add
lock
pop
shl
aam
mov
lcall
out
fcomps
xchg
arpl
call
ficompl
jbe
lahf
mov
pop
scas
in
out
popf
int
ss
insl
jmp
ljmp
daa
jmp
inc
sub
sub
mov
lahf
imul
in
add
lods
push
pop
cmp
or
pop
lock
decb
lret
arpl
dec
sub
pop
sub
clc
lret
sbb
repnz
fldenv
or
js
jno
cmpsl
jo
sbb
and
mov
dec
addl
lea
fcmovne
fisubrl
daa
pop
sub
shlb
cmp
xchg
xor
mov
pop
popf
test
js
jbe
cmp
push
das
add
adc
out
ret
adcl
and
dec
xor
and
push
addr16
or
xor
xor
xor
jb
test
add
or
mov
cmc
popa
add
pop
repnz
sub
gs
mov
stc
xor
add
mov
push
pusha
imul
jnp
jl
inc
imul
test
xor
insb
test
call
nop
prefetch
xchg
mov
fisttpl
js
mov
pop
lret
fists
outsb
mov
jne
mov
pushf
in
sti
in
jmp
mov
and
dec
in
in
mov
in
sub
in
out
jp
outsl
mov
mov
jno
mov
xchg
inc
jno
bswap
jno
jp
bts
jb
push
dec
mov
jg
daa
add
or
jl
jne
push
mov
add
repnz
and
into
or
jge
add
add
add
add
pushf
sub
xor
pop
test
add
add
add
sub
adc
push
add
test
outsl
rolb
sbb
int3
add
mov
mov
mov
mov
or
scas
cmp
mov
mov
mov
mov
mov
sub
add
sbb
push
into
and
mov
mov
mov
add
push
mov
add
adc
dec
inc
pushf
push
clc
lcall
add
pop
mov
mov
mov
mov
out
in
call
incl
add
ret
inc
pop
or
inc
mov
mov
pop
or
dec
mov
mov
sbb
orl
repnz
data16
ss
xor
imul
cmp
add
and
cwtl
mov
cmp
and
cwtl
cmp
stc
xor
inc
dec
rcr
pop
out
repz
jnp
pop
xchg
int3
pushf
pop
xchg
pop
jl
repz
fs
jp
ja
fldcw
pop
push
sub
push
in
add
push
mov
dec
es
cmp
mov
jle
jg
loopne
xchg
repz
outsb
pop
push
cmp
pop
push
or
lods
insb
push
in
mov
pusha
push
cwtl
ds
movb
mov
cs
popa
push
mov
dec
repz
adc
dec
arpl
out
imul
push
push
mov
mov
jg
pusha
xchg
xor
dec
push
fnstcw
int
xchg
push
test
les
mov
mov
gs
push
sbb
divl
push
mov
fstpt
fildl
push
jl
sub
push
out
pop
cs
pop
int
imul
jno
pop
push
lcall
test
or
mov
fisttpll
dec
or
adcb
jb
dec
or
sar
xchg
gs
xor
or
xchg
addl
inc
imul
adc
mov
mov
popa
arpl
cs
sbb
xchg
or
push
add
pop
in
inc
push
and
or
je
and
and
mov
push
cltd
outsl
loopne
dec
push
dec
adc
inc
movsl
jo
int
or
ss
test
xchg
sbbl
inc
mov
and
xor
daa
daa
pop
mov
add
pop
xchg
pusha
or
mov
or
or
gs
inc
loopne
dec
aas
inc
adc
cmpsl
cmovg
stos
push
js
movntps
repnz
icebp
ret
or
and
leave
inc
dec
imul
push
xchg
cmc
jmp
jo
push
iret
pop
scas
cs
daa
sub
xchg
pop
test
dec
push
outsl
shlb
mov
cmp
das
mov
dec
imul
addl
jae
dec
in
inc
rcrb
imul
sub
jns
jp
mov
mov
adc
jo
subb
push
cmpsl
ret
rorl
dec
inc
cmp
push
outsl
aad
pusha
stc
mov
push
xor
sub
add
mov
sub
imul
nop
les
adc
add
adc
mov
pushf
popa
movsl
xlat
jns
es
sub
mov
movsl
push
push
and
bound
add
js
fs
mov
rclb
dec
cmp
dec
inc
add
ret
jnp
and
push
inc
jne
lock
scas
xor
pop
pushf
xorl
loope
inc
addb
cmpl
cmp
bound
repz
push
xor
fdivrs
adcl
dec
jae
push
cmpsl
mov
popw
inc
jae
or
inc
inc
cs
inc
inc
inc
into
cmc
push
jne
inc
inc
inc
inc
mov
insl
inc
inc
cmc
mov
or
xchg
outsl
leave
push
shrb
mov
out
mov
inc
daa
adc
incl
jecxz
or
rolb
shl
add
mov
or
fcomi
mov
push
lods
pop
xlat
fcoms
in
cmp
lods
in
aad
push
mov
fsubs
pop
andb
push
cmpsb
fisubrs
mov
xchg
add
cwtl
adc
into
inc
add
aad
mov
jmp
adc
or
imulb
test
mov
subb
or
or
jmp
jmp
cltd
shlb
push
mov
jbe
ja
iret
repz
push
aaa
dec
push
ja
mov
or
add
xchg
pop
loop
lods
mov
mov
cmp
arpl
fildl
arpl
cltd
push
cmpb
insb
inc
mov
adcb
ja
stos
and
push
mov
pop
jecxz
inc
xchg
push
add
js
loopne
or
push
addr16
adc
and
inc
pop
push
add
mov
jecxz
lds
les
fwait
in
jle
mov
cwtl
pushf
push
jecxz
mov
xor
test
or
jne
insl
iret
push
pop
jecxz
loop
mov
imul
add
enter
jge
jnp
stc
icebp
cmp
mov
lock
adc
add
mov
and
sub
insb
out
sbb
xchg
es
push
pop
mov
mov
sub
push
add
enter
js
fwait
mov
inc
inc
xbegin
push
push
xchg
cmpsb
jl
cmp
dec
jmp
mov
add
lahf
xorl
adc
pop
ss
es
outsb
ljmp
shl
aam
es
call
or
pop
pop
leave
test
or
mov
ja
adc
inc
add
push
aas
push
or
and
mov
cs
es
push
sub
insb
fs
test
jnp
add
dec
loope
inc
rol
js
xor
arpl
push
sbb
jecxz
mov
and
mov
add
aas
dec
adc
and
outsb
fisubrs
jecxz
push
scas
push
mov
cmp
in
lods
cld
push
andl
test
inc
icebp
add
cmp
or
sub
inc
add
aas
movsb
les
js
test
sub
sub
push
add
inc
or
shlb
out
pushf
jl
es
das
inc
orb
popl
nop
fisubs
cmp
inc
mov
push
sbb
push
js
mov
clc
dec
xlat
push
mov
inc
push
push
push
test
pop
push
in
and
pop
sub
js
push
dec
js
movsl
addr16
pop
jns
enter
or
je
jo
in
popa
push
imul
mov
fisttps
add
jno
psubw
andl
fdivrl
subb
mov
pop
dec
add
jecxz
fcompl
sub
add
push
push
add
andb
dec
jnp
cmp
inc
mov
testb
xchg
cmpsl
sub
pusha
aam
fldl
jecxz
dec
cmpsl
sub
dec
add
adc
pop
pop
jg
push
push
call
pop
and
jecxz
inc
inc
xchg
push
adc
push
sub
insl
push
dec
mov
push
cmp
pop
pop
add
or
add
pop
jo
bound
andb
and
mov
pop
pop
sbb
push
push
aaa
pop
imul
dec
arpl
push
fisttps
test
sar
stos
or
adc
dec
imul
inc
add
sub
push
jbe
add
pop
enter
inc
sahf
mov
jle
xor
push
lea
sbb
or
imul
or
add
xlat
or
repnz
dec
rol
xorb
loopne
dec
add
pop
adc
cmp
ds
dec
cmp
ja
inc
jns
cmp
insb
mov
addl
or
push
sbb
loop
or
or
aaa
test
xor
daa
xor
popa
sub
leave
les
leave
popf
ja
sbb
test
sbb
xor
inc
push
lahf
cmpsb
xor
push
cs
xchg
scas
test
push
push
xchg
jl
and
clc
or
fnstenv
cmp
or
pop
add
enter
fwait
or
test
enter
xchg
enter
aaa
pop
cltd
adc
push
xchg
int3
mov
cli
daa
cli
das
xchg
rcrb
push
pop
shlb
enter
into
rorb
xor
push
mov
sub
outsb
push
or
test
inc
mov
das
push
inc
int
dec
pop
adc
imul
pop
addl
inc
in
inc
sub
aaa
inc
ss
cs
and
dec
into
aad
cld
insl
imul
loope
int
xchg
cmp
out
sbb
pushf
jno
or
and
shrl
test
xchg
mov
xchg
add
or
push
cwtl
jl
rcll
fmuls
xchg
adc
mov
out
xchg
dec
rolb
adc
popa
testl
fadds
test
sbb
mov
pusha
or
pop
push
and
test
sub
push
sub
loopne
mov
mov
mov
bound
jae
push
inc
mov
out
shrb
iret
pop
sbb
dec
push
cmp
pop
cltd
or
cs
inc
out
adc
inc
inc
jle
lods
inc
arpl
in
adc
popa
mov
adcl
and
mov
enter
cwtl
inc
add
adc
iret
push
cwtl
pop
xorb
pop
dec
pushf
add
xor
adc
out
add
add
sbb
jg
xchg
inc
inc
sbb
add
aaa
jmp
cmpsl
std
arpl
fadd
inc
pop
push
add
stos
add
and
and
adc
pop
cmp
push
fs
sbb
dec
and
push
fs
sub
add
fbld
stos
test
insb
repnz
adc
inc
mov
push
cmp
sarl
int
fucomp
iret
repz
testl
cmp
test
pusha
js,pn
mov
cmp
mov
or
stc
in
sub
pop
inc
test
les
mov
data16
mov
call
mov
scas
adc
ficomps
ss
mov
push
int3
movsl
jo
jle
dec
jo
scas
fists
dec
insb
andb
push
adc
sbb
add
test
cmp
add
pop
pop
outsl
or
pop
pop
andl
test
pop
pop
mov
or
sbb
xchg
pop
cmpsb
nop
scas
fists
rcrb
js
mov
daa
inc
dec
test
adc
daa
xorb
jmp
cmp
sarl
daa
insb
push
fiadds
es
cmp
fimull
inc
sub
or
aas
pusha
sub
insl
lock
or
fs
loop
mov
mov
pop
pop
mull
test
jmp
lret
mov
popa
sub
add
pusha
lods
add
test
add
adc
xchg
addb
in
stos
cmp
mov
mov
cmp
adc
mulb
jno
lods
or
mov
adc
lods
dec
xchg
ss
dec
loop
addb
je
shrl
dec
das
adc
push
ret
sbb
mov
ds
add
add
xor
iret
aam
aas
mov
cwtl
xorb
imul
mov
les
imul
xor
cmp
and
jp
icebp
shlb
ljmp
jne
cmp
cmp
ret
sub
mov
xchg
popa
test
add
test
rolb
cmp
or
stos
mov
nop
cmpsl
pop
popl
inc
pop
cmp
addl
lock
jle
xor
movsb
enter
jo
inc
daa
pop
xchg
inc
add
outsl
movsb
push
xor
leave
inc
and
inc
xchg
or
push
mov
or
jge
aaa
xchg
dec
jecxz
mov
rol
push
or
cltd
lock
jecxz
shlb
mov
adc
cmp
adc
and
mov
repnz
xchg
imul
xchg
aaa
add
and
arpl
add
and
das
jno
sbb
dec
jmp
ret
outsb
sub
call
pop
stos
xchg
sar
pop
or
xchg
scas
clc
xchg
js
adc
getsec
xchg
sub
enter
leave
mov
pop
pop
dec
leave
dec
aas
push
cmp
sub
jl
enter
pop
add
mov
and
or
push
adc
cmp
scas
add
inc
pop
incl
cltd
push
fbstp
test
or
in
pop
pop
xchg
or
and
mov
and
adc
and
xchg
movsl
adc
lret
sub
cmp
xor
adc
es
rorl
stos
cltd
add
fstp
adc
xor
dec
insb
leave
mov
mov
dec
js
push
inc
decl
inc
jno
or
inc
rclb
push
shll
cwtl
sahf
push
ds
frstor
xlat
stos
in
stos
iret
dec
adc
fbstp
popa
or
xchg
xchg
jg
xchg
inc
aad
or
jae
pop
inc
or
rolb
mov
jmp
cwtl
ljmp
or
and
and
xlat
pop
and
les
loopne
jbe
out
notb
sahf
lods
out
push
push
test
add
movsl
sub
lret
outsb
sub
dec
testb
popa
insb
into
push
mov
je
popf
or
aas
dec
lods
rcr
or
xchg
add
aaa
cltd
jns
mov
popf
xchg
bswap
push
lcall
fsubs
sub
and
ret
inc
dec
pop
gs
add
mov
fwait
sub
push
and
nop
arpl
fisubrs
add
inc
je
xchg
jne
ret
adc
jno
orb
cmp
jno
lret
pop
test
loopne
adc
adc
jmp
fs
pop
das
xchg
and
or
lcall
shl
sbb
das
incl
roll
cmp
mov
dec
jbe
arpl
insl
addr16
xorl
imul
lahf
dec
rolb
jmp
add
popf
sub
xor
jno
test
xor
sbbb
dec
jmp
sbb
je
dec
fistpl
add
inc
add
roll
lret
aas
and
fcom
xchg
dec
push
push
sbb
mov
jecxz
and
jo
loope
scas
or
dec
ficoms
pushf
or
mov
clc
xor
mov
jge
xchg
sarb
aas
in
cwtl
push
movsb
and
sub
loopne
inc
xchg
int
or
pusha
popf
jmp
add
enter
jo
or
fistpl
mov
mov
xchg
and
cltd
sbb
mov
lods
xchg
sarb
push
daa
fsubs
por
and
popa
mov
jecxz
test
or
and
testb
popl
negb
sbb
dec
push
inc
lahf
das
push
xchg
movsb
insb
mov
add
clc
fiaddl
fildl
adc
and
pusha
pop
mov
js
inc
adc
pusha
enter
or
inc
addr16
lods
xchg
xchg
or
cmp
test
fwait
add
inc
cmpsl
imul
dec
loope
push
mov
insb
xlat
or
imul
outsl
add
inc
adc
roll
test
mov
adc
je
imul
stos
sti
xor
add
sbb
out
scas
lahf
mov
lret
or
lahf
or
daa
daa
mov
and
inc
les
mov
enter
jns
loop
cmp
push
orl
repnz
sbbb
insb
cmpsl
sub
and
fcomp
inc
inc
mov
pop
or
add
insl
xor
dec
mov
cmp
add
fs
stos
sub
or
test
push
imul
rolb
xorl
jmp
push
jnp
lods
sub
inc
jge
scas
dec
sbb
add
cmp
fimull
mov
jo
mov
sub
xor
popa
call
bound
sub
test
sbb
jmp
pop
and
push
aad
pop
stos
cltd
xchg
or
das
jl
mov
mov
xchg
xor
dec
sbb
popa
or
and
rorl
or
pop
pop
push
addb
and
and
orl
dec
mov
push
push
aam
subl
xor
sbb
or
add
mov
push
inc
xor
dec
pop
int3
ljmp
pop
cld
mov
xchg
scas
adc
adc
nop
dec
nop
jno
xor
loopne
filds
mov
push
dec
sub
lods
je
push
and
pop
sbb
pop
jmp
xchg
pop
and
iret
and
push
and
add
aaa
pop
lea
testb
cmp
sub
inc
mov
jle
movl
and
pusha
daa
rcr
andps
or
shl
pop
sbb
das
enter
adc
jo
pop
pop
enter
adc
inc
inc
mov
jne
push
pop
xor
xor
cld
and
orl
jne
adc
jecxz
xchg
subb
push
xchg
fsubl
pop
nop
xor
sbb
dec
mov
or
inc
adc
add
out
add
in
ja
mov
sbb
js
fcmovb
inc
xlat
and
jno
test
xchg
jb
aas
inc
stos
int
push
lahf
ja
aad
mov
aaa
xchg
mov
ret
mov
xorb
jl
test
push
ffree
push
and
push
xchg
addr16
inc
push
adc
fdivrs
notl
fidivrs
cmp
mov
push
inc
cmp
leave
xor
jg
in
sbb
decl
pop
in
jnp
inc
mov
xor
pusha
mov
je
push
or
roll
stos
pusha
inc
mov
or
adcb
and
add
fidivs
je
push
shl
jb
popa
sub
test
xchg
stos
jmp
cs
shll
test
aas
add
mov
push
push
mov
mov
or
ss
lock
outsb
rorl
mov
inc
jmp
push
add
xchg
xchg
push
pop
cmc
das
enter
test
addb
test
imul
pusha
push
add
push
mov
lcall
lret
lar
or
jmp
xor
inc
pop
sub
mov
ljmp
stos
inc
lock
push
push
fcmovu
adc
mov
lock
into
nop
xchg
push
push
hlt
cmp
dec
fcoml
lock
shrb
sbb
into
mov
xor
xchg
mov
push
data16
nop
and
fsubrs
push
lret
loopne
or
fwait
dec
sti
adc
adc
mov
mov
jnp
scas
mov
aam
sub
xor
or
or
mov
xor
scas
cld
adc
push
iret
enter
inc
bts
adc
jns
and
sbb
push
or
stos
daa
movzbl
dec
cmp
loopne
icebp
and
or
jno
sub
dec
add
or
cmp
jns
inc
shll
ds
sub
loopne
adc
mov
lods
scas
fsts
lods
outsl
jo
xchg
xchg
nop
ja
xchg
add
sub
out
xor
cmpsl
pop
test
in
inc
das
add
inc
sbb
mov
jo
xor
mov
mov
xor
ss
or
pop
mov
cmpb
adc
push
pusha
aas
mov
inc
repz
or
adc
pop
sub
adc
inc
mov
push
aad
xchg
in
pushf
fs
or
and
and
cmp
ss
into
roll
add
scas
inc
push
push
push
sbb
jo
add
sub
pop
test
adcb
jns
sbb
fmul
jmp
ret
xchg
add
ret
call
dec
jne
sbb
or
cmp
add
ret
adc
jmp
inc
push
cmc
push
or
push
pop
mov
add
call
add
dec
adc
rorl
or
xor
shll
sbb
sbb
shll
sub
ja
xor
xor
scas
cmp
scas
inc
adc
xor
ret
mov
mov
dec
push
or
mov
sbb
shll
test
cli
mov
jp
cmp
je
sub
jp
xchg
and
pop
arpl
add
sub
out
dec
je
and
negb
call
insl
std
add
xor
adc
fstps
out
insb
mov
jmp
hlt
adc
add
inc
cmpsl
idivl
enter
dec
inc
cmpl
jne
mov
inc
or
subl
sbbb
add
stos
or
push
clc
push
movl
lret
sub
add
cmp
pusha
rcl
pop
mov
pop
jp
add
daa
mulb
icebp
xchg
add
pushf
mov
in
dec
sahf
or
xchg
rorb
push
cmpsl
mov
pop
xchg
in
adcl
xor
pop
in
sbb
pop
inc
or
dec
mov
daa
xor
movsb
js
mov
xor
inc
inc
jne
push
cmp
add
mov
fs
jle
xchg
gs
inc
aaa
pop
popl
pushf
and
rcll
loope
pop
ss
imul
movsb
and
mov
movsl
loope
dec
push
mov
jp
sarl
sbb
and
arpl
sbb
and
sbb
sbb
inc
cmp
pop
pop
add
cld
movb
fwait
ret
popa
jae
dec
pop
and
scas
xchg
ljmp
insl
sub
dec
ret
sub
or
dec
jo
mov
cmp
inc
icebp
fisubrs
cmp
pop
mov
push
pusha
mov
sbb
lret
test
dec
push
fs
xor
sub
outsl
sbb
ficoml
add
popl
out
test
enter
add
scas
mov
add
es
ret
or
enter
cmp
test
dec
cli
inc
or
jle
outsb
dec
xchg
mov
scas
push
sub
push
inc
sti
fisttps
sahf
dec
sbb
leave
in
jle
or
rorb
pop
imul
mov
das
pop
lea
lcall
nop
push
incb
frstor
add
fsubrl
dec
stos
xor
dec
cmpsb
mov
xchg
and
mov
lods
gs
fildl
sbb
inc
and
std
lea
sbb
inc
lret
add
add
push
inc
adc
jmp
cmp
add
sahf
jne
inc
or
dec
dec
and
sbb
inc
xor
rolb
arpl
pop
and
out
ret
inc
adc
addb
sbb
in
xor
sarl
leave
and
idivl
arpl
mov
inc
cmpsl
mov
inc
add
pop
push
mov
adc
sub
dec
insb
push
mov
mov
cmp
cmp
mov
hlt
inc
std
std
popa
test
cmp
jae
hlt
push
jb
push
subb
cmp
mov
pop
sub
or
stos
add
push
mov
repz
cli
loop
rolb
sete
and
je
mov
or
je
sbb
inc
xor
xlat
and
in
icebp
inc
stc
cmp
jle
jns
dec
loope
ds
inc
stos
ret
inc
adc
test
scas
hlt
sbb
rclb
sbb
rcll
rolb
xor
xchg
mov
push
or
or
ljmp
in
cmpb
mov
push
xor
push
imul
in
in
xor
imul
add
cmp
pushl
fadds
cwtl
pop
cwtl
push
mov
jecxz
pop
insl
or
nop
call
push
xor
shlb
pusha
ret
or
movsb
aaa
or
std
xor
xchg
and
mov
mov
test
js
cmp
je
ds
adc
fdivr
testb
and
pop
add
and
pop
xlat
imul
stos
sbb
pop
pop
insl
stos
sbb
cld
pop
add
sbb
hlt
push
test
lock
insl
sbb
mov
dec
call
xchg
and
push
aad
and
add
push
xchg
pop
mov
clc
cmp
jne
sub
mov
inc
inc
xchg
mov
repz
aad
lret
xchg
movsb
pop
push
push
flds
cs
cmp
lcall
jmp
adc
popf
test
popa
add
sub
push
pop
jne
jge
push
mov
and
sbb
xchg
cmp
and
or
push
insb
sbb
dec
and
sbb
adc
loop
push
mov
icebp
or
mov
cmp
add
imul
lret
cmpb
les
insl
mov
sbb
out
inc
xchg
bound
ret
push
xchg
in
push
jbe
sub
int3
sahf
pop
xchg
mov
and
mov
and
xchg
incb
outsl
push
cli
jmp
push
les
repz
mov
test
mov
fcmovnbe
sub
add
std
jge
add
mov
sub
jno,pt
pop
mov
pop
ds
frstor
test
adc
imul
mov
mov
sbb
mov
mov
popl
adc
lea
add
or
xor
adc
jbe
xor
pop
shlb
sub
outsl
add
sbb
mov
jmp
jecxz
jae
adc
cmpsb
push
add
das
mov
les
jp
pop
or
or
imul
adc
lret
or
and
sbb
or
sbb
mov
mov
lock
or
fdivl
jne
imul
jne
or
and
inc
push
adc
loope
fisubrl
or
sahf
pop
or
mov
sbb
xor
sbb
mulb
test
pop
pop
mov
mov
add
hlt
inc
xchg
sub
test
xadd
outsl
jnp
ljmp
jo
add
jmp
into
pusha
add
scas
js
cwtl
pop
sbb
and
hlt
daa
pop
fiaddl
rcll
inc
push
mov
sub
lock
mov
cmp
jle
mov
dec
add
push
fs
and
and
inc
push
adcb
out
mov
aam
sub
add
ds
cmp
xor
push
test
sahf
sti
sbb
sub
pop
mov
push
out
or
adc
pusha
sti
or
or
mov
mov
adc
cmp
adc
adc
inc
dec
pop
aad
rorl
push
jle
jp
adc
cmp
fistl
es
mov
fdivrp
fstpl
fwait
jmp
imul
sub
cmp
rclb
sub
ss
movsb
jle
push
jns
sub
imul
pusha
fsts
or
into
pop
xor
dec
sbb
dec
scas
sub
jmp
pop
js
cmp
popf
jns
xchg
jmp
sub
mov
push
inc
or
stos
adc
sub
adc
dec
xor
out
fsubs
add
sbb
inc
sub
mov
jne
sbb
in
mov
mov
or
jp
and
cmp
adcl
and
add
mov
add
xchg
in
repnz
mov
dec
inc
jo
mov
xor
fnsave
adc
loop
imul
lcall
sub
cmp
mov
mov
dec
cmpsb
sbb
or
popa
cmp
jmp
add
jnp
adc
push
push
lret
pop
in
into
in
fcompl
dec
dec
dec
imul
ret
adc
lcall
pop
lret
push
cmc
mov
and
nop
push
fisubrs
shrl
add
pop
test
scas
xor
mov
mov
jae
dec
and
cmp
mov
cltd
push
es
sbb
es
scas
pop
or
add
inc
cmpsl
ss
mov
cmpsb
fisttpl
mov
add
sbb
lock
jp
sbb
mov
pop
movb
adc
decl
andl
or
sahf
and
adc
ds
cmp
je
add
sbb
fstps
daa
adc
sub
push
sbb
jmp
cld
mov
and
inc
pop
xor
push
cmp
adc
adc
in
cmp
mull
adc
pop
outsl
je
call
sbb
aam
nop
nop
lock
inc
cmp
inc
or
addb
cmp
pop
jnp
and
lret
add
orl
loopne
xor
and
cmp
or
cmp
sub
inc
pop
cli
add
or
xor
xor
cmpsb
adc
insb
shll
pop
inc
ret
enter
adc
andb
and
jno
add
and
pop
rolb
aaa
je
jg
dec
out
dec
add
push
push
fsubrs
mov
lods
xchg
enter
and
fistpl
dec
in
adc
js
mov
aam
in
xchg
ja
add
imul
xlat
fcomps
daa
adc
jnp
addl
sub
daa
data16
xor
mov
sub
cwtl
icebp
inc
test
out
shrb
mov
shr
loope
cld
movsb
mov
cmc
xchg
test
pop
fs
gs
sbb
enter
ret
aas
dec
dec
insl
arpl
cmp
or
and
movsb
jg
shlb
aam
dec
mov
sbb
inc
out
push
or
dec
or
sub
rorb
add
stos
lock
sub
push
or
mov
add
cmp
add
leave
xchg
jg
inc
push
adc
in
lea
pop
jns
ja
sbbb
movsl
mov
cld
xchg
xor
mov
inc
lock
cmp
jmp
pop
lods
dec
inc
xchg
jne
xorl
sbb
inc
insb
or
out
mov
inc
mov
pop
insl
fcoms
sbb
hlt
sbbl
subl
add
mov
filds
pop
mov
lret
or
mov
pop
rolb
or
lds
pop
outsl
cwtl
adc
das
mov
and
mov
jmp
add
lea
pop
fnsave
sub
fisttps
ja
mov
daa
fstpl
push
push
js
popa
adc
or
push
pop
adc
sub
xchg
add
jl
je
arpl
xchg
mov
inc
inc
inc
shr
push
pusha
cmc
xchg
pop
push
pop
in
ret
inc
nop
lods
daa
mov
and
xchg
nop
lahf
pop
cli
inc
mov
mov
orl
or
mov
push
add
add
adcb
imul
adc
or
or
or
scas
or
or
adc
or
mov
cs
mov
and
mov
dec
es
jmp
cmp
addb
mov
nop
adc
jbe
push
adc
cltd
fs
cmp
push
or
nop
mov
test
dec
sar
inc
js
pop
cmp
cmp
imul
xor
xchg
stos
adc
pop
jcxz
xchg
fidivrs
in
cli
lods
cmpsl
sbbb
pop
and
dec
xchg
xchg
aad
fidivrl
cmpsl
js
push
loopne
mov
test
xchg
subb
fadds
test
roll
enter
dec
pop
push
out
in
add
rcrl
outsb
xchg
pop
xor
mov
inc
ror
inc
adc
in
add
jmp
adc
rcrb
inc
add
cmp
sub
sub
xor
xchg
leave
or
sub
adc
or
mov
insb
push
mov
cmp
mov
push
lcall
fmull
xor
sbb
mov
fstpl
push
push
sub
push
xlat
mov
repnz
and
cmpsl
mov
imul
imul
pushf
pop
shlb
pop
fs
mov
sbb
out
add
xor
out
imul
jae
ret
mov
add
xchg
xlat
inc
repnz
aaa
push
iret
xor
adc
inc
mov
adc
add
je
add
xchg
jne
cmp
xchg
pusha
xchg
jne
mov
jo
xchg
aaa
lods
or
aas
xor
sti
xchg
mov
xor
lcall
jo
add
test
pushf
ficoml
sbb
scas
test
in
out
cmp
lods
int
push
push
andl
int3
loopne
xor
mov
mov
add
in
dec
jo
in
iret
fcompl
cmp
cmp
pop
ret
cmp
rol
dec
je
scas
movl
sbb
inc
pop
add
pop
pop
pop
fistpll
push
push
push
pusha
add
dec
jp
push
or
data16
mov
je
sti
add
add
movsl
scas
arpl
or
pop
mov
push
adc
test
sub
push
push
or
stos
gs
mov
add
sbb
lock
sbb
or
mov
dec
rcrb
sub
fdivrs
inc
shll
scas
gs
enter
inc
inc
xchg
mov
add
jmp
mov
or
inc
push
gs
jo
pop
sbb
fs
xor
dec
xor
adc
mov
pop
lea
lea
shll
push
xor
and
iret
pop
xor
jno
or
inc
dec
xor
mov
nop
or
fisttpll
add
mov
add
adc
adc
call
xor
dec
push
push
dec
stos
lock
call
iret
lds
in
adc
push
scas
hlt
mov
push
mov
adc
cmpl
insl
pop
and
sbb
and
jle
jne
aam
iret
xchg
andb
pop
adc
dec
repnz
cmp
jne
stc
sarb
cwtl
inc
jne
pushf
dec
jne
fisubs
shlb
push
and
outsb
testl
insl
out
mov
jecxz
push
les
push
push
lahf
out
fadds
fildll
mov
arpl
mov
push
enter
xor
stc
xor
dec
push
inc
fwait
adc
sub
pop
push
push
stos
bound
rolb
add
scas
fnsave
dec
lahf
pop
xor
jmp
in
popf
out
fstps
sarl
pop
sub
orl
rcrb
mov
int
or
bound
cmp
rcr
or
add
inc
outsl
or
arpl
test
pop
xchg
cs
pop
lcall
flds
adc
push
scas
pop
aas
in
mov
lret
in
in
push
xor
xor
rclb
imul
or
jge
adc
pusha
addl
lret
cmp
xor
jb
fistpll
and
jb
cmp
jb
cmpsl
add
xor
adcl
filds
sub
and
cmp
mov
pop
jbe
into
xchg
and
and
ja
xchg
mov
adc
sarl
or
push
add
shlb
lea
inc
pop
cmp
cmp
sahf
sahf
enter
push
ret
pop
nop
xchg
rolb
push
scas
mov
fcmovb
test
lods
rcrb
xchg
pop
push
adc
cmp
adc
in
jo
and
or
std
stos
xor
sbb
adc
loopne
xor
sub
inc
dec
mov
movb
push
dec
dec
arpl
or
fs
mov
in
xor
ljmp
mov
test
push
das
cltd
dec
pop
add
shrb
filds
adc
sub
in
flds
ljmp
mov
mov
push
pop
push
sub
dec
mov
mov
lods
push
inc
or
call
jne
adc
pusha
mov
inc
sub
jno
movsl
pop
or
sbb
test
lahf
push
push
mov
shl
add
pop
push
lods
adc
mov
jne
lods
test
orb
aad
outsl
ret
clc
cs
je
sbb
xchg
xchg
out
jne
sub
mov
call
or
test
test
pushf
jbe
sbb
mov
call
punpckhbw
dec
nop
push
mov
mov
inc
addl
jl
inc
fsubrl
mov
enter
or
add
inc
mov
sub
mov
jo
fmuls
inc
je
xor
lea
icebp
ss
inc
or
push
pop
pusha
dec
inc
filds
movsl
pop
movsb
lock
lock
lahf
fbld
mov
lret
inc
imul
pop
movsb
sbb
push
leave
and
mov
arpl
dec
pushf
xchg
or
push
or
fadds
mov
enter
cwtl
xchg
outsl
add
mov
sub
aas
test
pop
fcompl
inc
cmpsl
dec
xor
out
mov
mov
gs
mov
add
lahf
add
das
and
mov
xchg
dec
jne
xlat
adc
fsubs
pop
sbb
xor
ficoml
sub
lock
inc
and
ficoms
cmpb
rolb
orl
push
dec
adc
andb
popa
scas
mov
add
mov
adc
in
jmp
xchg
push
mov
adc
test
push
mov
or
jecxz
das
pop
testb
movb
inc
pop
pop
xlat
xor
inc
sbb
sbbl
push
xor
cld
mov
orl
or
mov
or
dec
add
add
adc
sbb
mov
push
fidivl
adc
xor
into
push
and
jp
sub
adc
push
test
lahf
mov
jge
jbe
add
popa
xchg
jno
pop
arpl
dec
pusha
int
out
aam
scas
das
pop
mov
leave
aam
xchg
fistpll
lods
movsb
push
pop
enter
je
add
insb
pop
add
es
fcoml
leave
and
lods
fsubl
inc
loop
test
pop
xor
sub
push
or
rol
xchg
pop
or
xchg
jnp
pop
mov
stos
mov
add
xchg
add
xchg
inc
add
and
ljmp
mov
test
jbe
addb
sub
pop
enter
xlat
mov
or
sbbb
add
and
or
repz
pop
je
add
and
pop
ret
cld
add
add
push
cmp
adc
sub
xor
je
or
or
je
xchg
out
fists
pop
loopne
cmc
xor
in
and
scas
lcall
test
and
sbb
jnp
mov
push
test
xchg
push
sub
movsl
roll
jo
mov
cmp
push
aaa
jbe
push
imul
dec
mov
adc
adc
xchg
loop
add
movsb
sbb
movsb
outsb
inc
out
mov
inc
xchg
jb
lock
sbb
out
mov
inc
mov
sbb
jp
ret
pop
sub
aad
cmpb
xor
daa
xchg
fidivl
idivl
cmp
push
inc
xchg
fimuls
mov
lret
sbb
mov
rcrb
pop
sti
fwait
lret
mov
fs
or
sub
cwtl
addr16
loopne
adc
add
fsub
test
jmp
nop
loopne
jne
pop
cmpb
ret
and
push
pop
fs
fstl
pushf
xchg
add
mov
ljmp
pop
or
sbb
repz
push
cmp
je
mov
rcrl
dec
ret
pop
iret
adc
add
loope
aas
fldcw
xchg
fdivp
inc
push
and
jne
aam
loopne
xor
inc
or
inc
ja
jecxz
adc
pop
dec
call
lods
insl
insb
jmp
fmuls
loop
dec
orl
clc
push
push
dec
push
or
call
jo
aad
dec
test
add
jl
inc
adc
sbb
dec
dec
inc
pop
pop
orl
xchg
rclb
sahf
cs
cmp
push
repnz
mov
inc
mov
push
mov
push
jne
adc
xor
ja
pop
pop
fisubl
into
mov
push
test
or
jnp
adc
dec
or
je
mov
cld
push
jns
dec
rorb
pop
push
add
mov
pushf
and
insl
jle
push
add
fbld
cwtl
dec
dec
xor
movsb
mov
pushf
mov
mov
jl
inc
push
in
adc
adc
loope
add
inc
jne
pop
imul
testb
inc
nop
and
xor
sub
sarl
mov
mov
sbb
push
dec
std
lahf
mov
xor
movb
xchg
inc
dec
ds
cmp
add
inc
stos
insb
add
pop
sbb
fs
dec
or
cmp
pop
cmpsl
mov
das
mov
inc
sub
dec
push
aaa
fsts
movsb
sbb
or
ja
nop
jge
adc
xor
adc
mov
adc
or
hlt
and
fidivl
inc
jmp
push
aas
or
nop
mov
out
imul
mov
dec
and
ja
inc
sub
setnp
insl
popa
je
pop
nop
loope
mov
cmp
je
or
push
add
or
inc
add
xchg
jecxz
or
dec
lods
fwait
or
enter
or
movsl
and
sbb
mov
xor
sub
js
cmovnp
cli
jg,pt
lcall
iret
push
rolb
pop
sbb
arpl
cltd
adc
xchg
lea
lcall
mov
sub
arpl
push
es
sub
dec
xor
imul
add
movsl
das
aad
mov
xchg
push
add
js
push
xorb
and
xor
aaa
loopne
xor
leave
je
loop
mov
lahf
push
or
ror
rclb
mov
mov
mov
mov
fwait
je
sub
sbb
addb
dec
js
mov
das
cmp
je
lock
jle
cs
sub
pop
xchg
inc
mov
xor
mov
ret
adc
call
xchg
xchg
push
in
pop
enter
xchg
jno
add
add
pop
pop
int3
mov
imul
ljmp
dec
dec
cmpb
adc
push
inc
add
addr16
fmull
pop
in
add
call
sub
sbb
mov
mov
mov
out
add
sub
aas
push
sbb
repnz
jmp
push
or
push
add
addl
pop
sub
sub
outsl
dec
imul
sbb
jmp
pop
aas
punpcklbw
enter
cmp
imul
cmp
inc
xor
add
cwtl
jmp
data16
cld
pop
mov
inc
push
sbb
inc
dec
clc
shrl
movsb
icebp
insb
add
loope
xchg
in
or
push
or
mov
sub
sub
push
sahf
int3
adc
dec
test
adc
fs
adc
fldt
mov
jne
mov
cli
push
adc
fidivs
leave
pop
dec
test
add
inc
cwtl
dec
and
cld
aad
orb
iret
xchg
ret
and
push
or
aaa
ret
jge
sti
cmpb
sbb
je
mov
push
popa
imul
ret
xor
mov
js
push
arpl
jle
mov
cmp
rclb
dec
pop
cld
movsl
dec
testl
test
sbb
mov
xor
push
cwtl
dec
fnstenv
jecxz
jno
xchg
dec
jmp
movsb
in
inc
stos
das
add
adc
add
loopne
inc
push
sbb
aam
cmp
dec
xchg
push
add
les
icebp
adc
shlb
mov
fsubs
jno
out
test
cmpxchg
call
rorl
and
jne
lahf
testb
xor
rol
mov
dec
jae
inc
lcall
das
or
shl
or
ret
pop
adc
or
pop
pop
adc
mov
adcl
jecxz
add
push
cmp
jbe
add
xlat
icebp
movb
loop
sbb
add
dec
shlb
push
push
inc
in
sbb
fcoms
or
pop
movsl
push
and
sub
push
add
inc
fsub
mov
or
add
pop
movb
add
cwtl
jnp
adc
add
mov
mov
in
add
or
xlat
and
lret
jno
pusha
jge
adc
mov
mov
insl
mov
outsl
adc
mov
fmull
or
loope
fmuls
add
mov
sub
lea
loop
shll
and
mov
lcall
add
outsb
or
cmp
add
jmp
adcb
push
clc
push
adc
je
cwtl
enter
rcrb
ja
push
outsb
push
mov
lock
ss
sub
inc
repnz
or
xlat
pop
cli
popa
sub
lret
mov
repnz
mov
adc
xor
pop
xchg
cmp
subl
mov
lret
push
sbb
movsl
jb
push
or
subl
push
cs
dec
cmpb
cmpsb
pop
and
adcb
mov
idivb
ss
orl
dec
xchg
movsl
sub
push
jne
jle
cmp
sub
push
and
inc
adc
sbb
cs
xchg
and
mov
xor
dec
aaa
scas
jecxz
jmp
sub
and
mov
lahf
daa
loop
adc
push
mov
dec
pop
dec
lahf
add
in
or
push
lret
das
es
dec
sub
call
push
push
push
lcall
shll
push
or
addb
fs
jnp
xlat
jmp
sbb
add
enter
outsw
mov
test
or
in
inc
xchg
sub
xchg
dec
push
sub
sub
ret
cmp
push
testb
dec
mov
mov
inc
mov
cmp
aaa
call
out
inc
mov
inc
loopne
in
or
mov
popf
inc
in
push
xor
xchg
in
addb
cmp
clc
inc
test
jecxz
enter
imul
push
mov
pop
addr16
lcall
jp
lock
dec
push
mov
sub
mov
jo
pop
aad
addb
fcmovnu
or
sub
jb
je
push
fisubs
pushf
and
cmp
adc
mov
inc
or
ret
imul
neg
pop
push
cmp
sbb
in
mov
xor
test
mov
or
pop
les
cmp
push
inc
dec
gs
js
nop
and
sub
add
adc
add
addr16
inc
mov
and
and
push
sahf
jae
sub
jp
xchg
fstpl
or
aam
inc
fcom
in
xlat
xchg
fldenv
les
mov
cwtl
sbb
faddl
lea
pop
pop
or
jle
loopne
sti
jmp
push
mov
adcl
or
stos
loope
mov
xlat
inc
sbb
sub
div
arpl
lock
push
movsb
orl
insl
lea
sbb
std
add
mov
mov
or
ficoml
and
or
push
lea
jne
adc
aad
sbb
adcb
imul
xchg
in
xor
dec
cmp
cmp
mov
ret
testl
add
dec
sub
add
lahf
addr16
aam
inc
dec
add
rolb
jp
jnp
and
das
pusha
mov
inc
sbb
mov
ja
nop
ja
test
jmp
and
movsb
addb
xor
xchg
iret
xchg
add
add
and
mov
test
insl
mov
mov
mov
aad
pop
jle
sbb
enter
dec
les
gs
ja
adc
mov
subb
pop
cmpsb
pop
sarb
or
add
push
pop
popf
cmc
aaa
inc
nop
sbb
mov
loopne
mov
sbb
inc
aaa
xchg
pop
sub
sbb
sbb
and
push
enter
xor
in
jbe
cltd
mov
xchg
jmp
push
xlat
cmpsl
pop
sbb
movsl
stos
shlb
movsl
mov
mov
add
cmpsb
rclb
xor
push
add
xchg
add
mov
mov
mov
sbb
jbe
insb
cwtl
rorb
xor
jl
adc
pop
dec
dec
mov
sub
or
pushf
pushf
pop
or
jl
ljmp
cmp
loopne
add
lret
int
pop
jge
jmp
add
or
in
sub
jge
rcll
sti
loop
and
adc
rolb
or
enter
int
lret
lock
ss
jo
rcr
pop
jo
enter
push
imul
push
adc
movsl
xor
nop
inc
in
add
shrb
aam
std
xor
test
or
and
adcb
cwtl
mov
add
cmpb
adc
adc
or
bnd
movsb
inc
jmp
je
inc
lretw
testl
mov
lret
inc
incb
mov
dec
or
and
pop
push
stos
or
mov
inc
iret
sbb
pop
cmpsb
test
popf
cmp
lahf
add
ja
adc
mov
sbb
mov
bound
scas
mov
inc
sbb
cmp
insl
rcr
push
mov
mov
xchg
sub
lods
shr
dec
dec
out
adcl
addr16
push
sbbb
push
adc
xor
sub
mov
mov
aam
mov
bound
push
imul
push
sbb
push
push
mov
testb
not
pop
mov
and
xchg
or
jnp
ss
inc
mov
dec
fdivrl
into
je
inc
and
into
adc
xchg
xchg
aam
sub
push
leave
test
adc
sbb
push
je
sbb
push
sbb
loope
in
sbb
mov
rcll
inc
xor
xor
push
cmp
into
pop
pop
out
sub
add
mov
in
cmp
cmc
int3
mov
cltd
out
mov
xor
aas
cmpb
scas
mov
sub
dec
push
add
dec
and
mov
lods
sbb
add
push
decl
cmp
jne
lea
xor
lods
pusha
xor
push
xchg
push
testb
mov
popa
cs
and
push
or
lea
push
inc
dec
and
out
inc
bound
mov
lcall
in
test
loope
mov
popf
je
add
add
sub
pop
push
cli
mov
mov
dec
scas
aam
lret
adc
sub
xlat
hlt
mov
mov
jns
ret
and
dec
cmp
lcall
mov
add
mov
outsl
add
inc
add
loopne
inc
shl
sbb
into
pusha
xchg
and
rol
cmp
and
mov
cmp
push
xorb
dec
jecxz
jo
fsubrl
rcpps
ds
dec
push
add
cmp
sbb
ljmp
mov
adcl
lahf
add
stos
cmp
mov
add
pop
popf
cmpl
arpl
add
out
imul
rolb
cltd
add
cmp
mov
repz
cwtl
add
add
mov
pushf
pushf
xor
add
jl
jmp
xlat
push
cltd
inc
dec
cmp
add
leave
add
xor
sbbb
dec
jne
add
cwtl
add
add
lods
flds
push
aam
lods
pop
mov
loop
movsb
repz
push
and
sub
out
cmp
call
pop
call
nop
je
mov
andb
pop
std
scas
sub
add
nop
xchg
mov
or
test
in
sbb
push
add
in
dec
es
add
jle
call
inc
mov
or
add
cli
insl
sbb
or
push
adcb
dec
jnp
xor
pop
inc
or
insl
lods
in
push
inc
loop
rcll
cmp
pop
mov
insl
pop
lsl
adc
jns
mov
add
pop
dec
addr16
ss
stc
dec
or
push
arpl
pusha
stc
es
sbb
xchg
adc
add
or
lods
or
shlb
add
iret
add
cli
cmp
xor
add
cmpl
dec
jle
dec
lahf
mov
cli
int3
xor
icebp
out
or
mov
cltd
push
adc
pop
jl
xchg
aad
movswl
pop
rcr
or
arpl
aas
and
push
pusha
jg
adc
sbb
mov
or
xchg
jle
dec
cld
dec
dec
rclb
lret
add
jp
mov
sbb
cmp
xor
mov
pop
cli
rorl
pop
and
xlat
or
in
xchg
jmp
mov
or
xor
cld
inc
adc
ret
lahf
jne
add
into
xchg
push
scas
inc
and
jecxz
ret
loope
inc
cmpsl
adc
cmp
dec
mov
jle
pop
lea
dec
js
test
and
dec
mov
xor
sbb
movsl
xchg
lcall
imul
test
inc
imul
daa
aaa
mov
dec
xor
jb
jmp
jae
push
sub
cmp
lods
scas
fldcw
leave
add
push
scas
add
lret
in
and
push
sbb
icebp
in
mov
enter
rolb
xchg
dec
xlat
insl
push
sbb
inc
mov
sub
mov
mov
add
aam
stos
sbb
cs
or
dec
aaa
enter
rcl
rcl
mov
imul
add
enter
mov
mov
dec
in
push
sbb
insb
in
lcall
popw
xchg
xchg
push
or
daa
addr16
mov
push
negl
stos
cmp
lock
loop
outsb
mov
cmpsl
out
pop
inc
nop
test
add
mov
aaa
or
dec
and
jne
adc
int3
pop
outsb
stos
insb
sbb
add
dec
xor
lea
les
shll
testl
lock
movb
bound
mov
xchg
pop
inc
cmp
add
adc
push
cli
inc
pop
jle
inc
jo
push
pop
or
in
adc
adc
adc
jbe
cmp
jle
adc
or
test
or
dec
xchg
jle
dec
and
fwait
push
movsl
jno
xchg
test
adc
dec
cmc
call
or
xor
sub
pop
test
inc
fs
push
inc
inc
inc
mov
adc
push
out
iret
mov
insl
push
mov
inc
insb
je
adc
xor
sub
ret
pop
sub
pop
add
jbe
cltd
xor
inc
addb
daa
adc
insb
incl
add
jnp
sub
adc
adc
aam
dec
add
hlt
sub
adc
push
orb
aam
or
jge
inc
or
add
inc
push
test
mov
imul
mov
mov
mov
cmc
xor
push
insl
lods
jp
int3
xor
iret
inc
daa
loop
and
lret
sbb
jns
icebp
adc
jl
loop
and
stc
jo
cmp
jne
xor
inc
lahf
mov
mov
xor
inc
adc
ja
sbb
sbbb
push
push
jl
pop
sub
lcall
or
pop
mov
xchg
pop
ret
movsb
pop
divb
jo
sub
dec
pop
cmpsl
jecxz
fwait
jb
push
jno
push
dec
and
in
adc
inc
fdivrl
cmp
xchg
or
lret
mov
data16
sub
ja
adc
cmpsl
int
pop
gs
and
adc
xor
in
enter
stos
add
cmp
lods
adc
cwtl
mov
sbb
cmp
sbbl
fiaddl
inc
push
popa
jno
pop
xchg
dec
lret
push
dec
cmp
idivb
push
adc
cmc
shlb
or
pusha
popf
cmpsl
xchg
out
sbb
loopne
mov
adc
call
mov
sbb
adc
sub
mov
and
inc
pop
xor
xlat
sbb
sub
mov
add
insb
mov
int3
lock
dec
sub
rclb
push
sub
pop
dec
mov
mov
pop
pop
jb
sub
mov
inc
dec
pop
outsb
fisttpl
dec
push
dec
push
dec
or
add
lahf
mov
add
sub
and
mov
xchg
push
lahf
push
ficoml
lods
stc
cmc
adc
push
push
imull
mov
add
xor
mov
loopne
jmp
mov
aad
pop
adc
push
push
push
push
add
ret
shr
addl
adc
or
mov
test
xchg
push
pop
pop
push
clc
fstl
nop
cmc
dec
imul
adc
dec
push
push
mov
ret
adc
call
lea
xchg
xchg
jl
pop
jmp
aaa
xor
inc
push
enter
inc
adc
sbb
inc
xor
xchg
adc
sbb
mov
andb
and
xchg
pop
pop
out
call
dec
scas
and
mov
and
inc
adc
or
cmp
int3
inc
loop
das
or
lahf
adc
push
arpl
jg
subl
adc
cmp
jno
scas
mov
test
lds
loopne
pop
cmc
push
jl
ljmp
and
or
add
addb
inc
add
pop
out
mov
inc
es
xor
inc
inc
scas
sub
and
push
js
sbb
jg
mov
sahf
sti
leave
dec
jg
sub
stc
fidivrl
add
push
add
insl
cmp
push
add
inc
ljmp
lock
fwait
push
sub
sub
aaa
iret
mov
xor
and
movsb
sahf
clc
cmp
and
jle
sub
cli
in
call
or
add
ds
in
pop
jp
add
push
cmp
inc
sub
and
sbb
fs
and
dec
js
adc
test
pusha
push
pop
sbb
push
mov
dec
inc
or
ret
inc
out
sbb
adc
mov
jmp
sbb
sbb
adc
mov
push
xchg
rclb
aas
pop
mov
cmp
movb
ljmp
pushl
test
mov
movsb
imul
insb
lds
fistpll
test
sbb
add
mov
xchg
lock
std
jb
sarl
adc
push
and
into
imul
aas
aam
xlat
enter
aam
or
mov
pusha
movsl
cmc
inc
inc
adc
mov
push
mov
fdivs
dec
cmpb
lcall
mov
cmp
mov
cmp
xor
or
les
adc
mov
cmc
pop
add
dec
adc
rcrl
or
push
sbb
or
jp
inc
mov
pop
jbe
or
icebp
andl
mov
test
lahf
loop
shl
call
fwait
or
bswap
pop
and
mov
adc
or
in
test
je
fists
sub
add
in
mov
loope
jmp
or
addb
xor
jo
in
push
sub
pop
int3
push
repz
inc
jns
and
dec
andps
ss
add
jg
add
sbb
xchg
inc
cmp
jle
and
rclb
ud1
jnp
xor
fcompl
and
ss
push
mov
adc
movsb
cmpsl
hlt
orl
mov
adc
hlt
cmp
leave
and
mov
cld
adc
pop
add
rcrb
inc
cs
jmp
inc
dec
cs
xchg
dec
call
orl
pushf
cwtl
inc
or
bound
mov
setg
push
xchg
cmp
mull
push
inc
mov
addb
push
dec
movsl
and
mov
stc
in
push
lcall
mov
push
in
insb
jnp
cmp
or
jmp
in
add
int3
or
aam
stc
and
sarb
shlb
add
loop
jge
inc
cmpsb
lods
je
inc
inc
dec
arpl
pop
cmp
pop
sbb
xor
mov
add
push
outsb
movsb
mov
or
test
dec
sbb
loope
cmpb
push
mov
out
lea
test
lahf
adc
adc
or
jmp
andb
push
inc
lods
addb
cli
aaa
xchg
rclb
popf
cmpb
cmc
movb
js
les
push
cltd
clc
push
dec
mov
outsl
movsl
sbb
fs
das
movq
or
or
cmpl
add
pop
jl
and
mov
inc
bound
or
pop
adc
imul
sbb
add
xchg
mov
add
imul
imul
fistpl
stos
mov
sub
out
iret
add
sbb
inc
jp
mov
hlt
pop
cmp
andb
and
jbe
fmuls
nop
sbb
mov
pop
jge
enter
into
loopnew
inc
shrl
roll
bound
adc
mov
mov
sub
call
pop
adc
push
cmp
rorl
pop
je
pop
add
lea
push
adc
adc
mov
rorb
and
mov
cmp
add
adc
pop
cli
imul
adc
and
rolb
sbb
fsubrs
jge
popa
lret
sub
and
sub
inc
adc
fwait
loop
add
mov
in
lods
pop
mov
push
push
nop
xor
ficomps
and
ficoml
call
adc
xchg
or
adc
xlat
sub
jmp
das
hlt
jmp
and
repnz
or
out
push
in
inc
pop
insl
or
cmp
add
mov
cs
dec
xor
jmp
repnz
shlb
jne
nop
dec
fadds
call
cmp
jnp
mov
adc
loope
pop
test
les
or
test
or
mov
mov
cmp
in
les
mov
pop
jl
sbb
cmp
ret
sub
jb
sub
pop
add
mov
jl
cmpsb
pop
call
in
mov
fcompl
dec
xchg
mov
push
out
iret
sub
lds
add
imul
push
out
mov
xchg
pop
shl
in
lods
or
dec
push
sub
loopne
inc
loop
in
jle
add
jmp
or
or
loop
inc
inc
add
sbb
sub
or
int3
and
fsubrs
mov
or
add
cmp
js
movsb
outsb
and
movsl
or
push
cmp
pop
lods
mov
adc
into
repz
jb
andl
shrb
push
mov
rcl
loopne
jmp
add
push
loopne
fsubrs
jmp
sub
mov
clc
loopne
mov
movsb
push
nop
mov
nop
jbe
mov
push
pop
mov
sbb
shrl
shll
xchg
test
dec
lds
lds
insb
pop
lods
sub
dec
ja
adc
rclb
xchg
loopne
push
adc
push
loop
jne
outsl
js
mov
repnz
sti
cmp
fwait
sub
mov
mov
cmpsb
xlat
int
out
push
iret
push
sbb
sbb
jnp
out
leave
and
xor
pusha
sbb
jo
adc
mov
or
mov
push
add
outsl
xchg
dec
clc
xor
cld
inc
fdivrs
repz
jbe
mov
and
outsl
and
add
adc
adc
sbb
test
jmp
mov
imul
lahf
push
insb
add
aaa
or
xchg
lods
and
jno
mov
dec
andb
jbe
shlb
xor
lock
mov
add
pop
gs
pop
and
hlt
jb
pop
les
iret
cltd
xchg
pop
fidivs
add
mov
mov
mov
das
push
inc
inc
out
xchg
xor
fs
cmp
scas
pusha
jg
push
mov
inc
mov
adc
or
gs
negb
push
cmp
jae
jne
xchg
je
xor
jmp
pop
mov
daa
sbb
and
xor
cltd
add
pop
or
inc
mov
int3
je
cmp
mov
pop
dec
add
or
adc
fimull
mov
int
pop
pushf
shll
std
rorb
pop
cmpsl
jne
fldl
ret
push
push
push
imul
and
mov
lods
test
inc
mov
mov
cmp
jne
das
sbb
mov
add
dec
jae
xchg
sahf
sub
pop
inc
mov
cmp
sbb
enter
fwait
jl
testb
imul
push
sub
adc
sbb
lods
repz
imul
fimuls
out
sub
xchg
movsl
inc
js
jae
and
lcall
push
push
cmp
or
lea
aaa
and
test
popa
inc
xchg
xchg
inc
fstps
outsl
popf
push
push
adc
in
or
jno
xlat
or
add
adc
jle
inc
fcmovnb
pop
or
shll
ljmp
and
iret
je
in
sbb
js
jnp
insb
or
xchg
and
daa
leave
insl
sbb
cmpsb
lods
mov
add
imul
inc
lcall
mov
cmp
aam
mov
push
sub
mov
iret
or
push
xchg
cmp
adc
cmpsb
adc
das
lahf
push
inc
int
add
push
cltd
es
dec
rolb
ds
sub
and
mov
pop
inc
sbb
shrb
jns
sahf
lcall
sub
dec
add
std
adc
aam
dec
in
cmp
jne
test
and
adc
outsl
add
sti
fldenv
and
pop
push
imul
add
mov
cmp
and
push
pop
pusha
cltd
xchg
and
loope
jae
pop
insl
xor
in
sbb
das
loopne
sbb
xchg
sub
or
or
mov
les
dec
inc
notl
and
stos
jns
jnp
mov
push
jnp
push
outsl
or
jmp
in
sub
mov
mov
icebp
xchg
mov
and
inc
and
xor
pop
adc
add
xchg
inc
push
add
xchg
and
jo
cmp
dec
and
sbb
daa
wrmsr
pop
cli
fcomp
mov
sub
pop
mov
sbb
xlat
inc
sub
xchg
orb
pushl
mov
insl
or
ffree
lods
pop
lock
in
out
dec
pop
test
pop
mov
leave
fdivrl
or
adc
inc
orl
jmp
mov
xorl
inc
or
mov
lea
out
jge
inc
jmp
ja
incl
add
mov
jne
and
jmp
xchg
popf
fisubs
pop
mov
inc
or
stos
leave
and
test
xchg
scas
mov
or
push
fdivs
sbb
add
sub
sub
sub
imul
sub
mov
or
ds
xchg
icebp
push
in
insb
and
pop
xor
nop
push
sbb
add
cmp
lahf
fs
add
xchg
and
andb
mov
add
adc
lds
adc
test
inc
imul
adc
mov
cmp
dec
ret
mov
adc
sbb
sahf
cld
shr
ficoms
inc
dec
push
mov
insl
xor
cmp
xor
mov
add
loope
into
xchg
xor
clc
adc
cmp
sbb
movsl
in
sub
or
fs
jmp
fstpl
jnp
popa
push
mov
sbb
jmp
sbb
add
fmull
fwait
xchg
fimull
jns
inc
bound
rclb
mov
push
movl
test
sub
out
shld
mov
mov
or
inc
in
out
sub
cmc
jnp
inc
inc
or
add
mov
or
add
fwait
jmp
adc
nop
pop
arpl
add
cwtl
xchg
ss
push
pop
pop
int
and
es
fidivs
js
mov
lds
and
add
jle
sbb
or
add
pop
add
lock
pusha
push
stos
insb
aaa
dec
pusha
add
or
outsb
xor
cmp
jle
hlt
jmp
jmp
mov
lret
and
mov
call
ret
xchg
ret
add
cmpsb
push
stos
and
mov
daa
pop
rcrb
shlb
rorl
add
scas
and
cmp
mov
or
or
xlat
into
rolb
push
adc
movsb
add
add
aam
pushf
dec
xchg
cmpsb
nop
jle
mov
lea
sbb
rcr
lret
hlt
dec
sub
sbb
jne
cltd
pop
adc
mov
adc
cmpsb
dec
sbb
test
mov
cmpsl
ja
orl
and
daa
inc
xor
jecxz
xorb
inc
adc
cs
in
add
sub
pop
mov
test
fists
inc
sbb
jmp
lahf
mov
movl
inc
flds
sbb
and
je
orl
andl
sbb
or
insb
cmp
and
sti
sbb
pop
dec
pop
or
lcall
adc
mov
adc
mov
xor
scas
xor
out
xor
aam
add
push
jne
stos
sub
mov
push
adc
sub
push
sarb
ret
in
jae
sub
push
rolb
pop
faddl
or
xchg
gs
adc
cwtl
xor
sub
xor
fadds
test
xor
push
push
shlb
cmp
inc
cmp
inc
movsl
dec
pop
jl
andl
bound
jg
insl
jmp
movsb
hlt
mov
js
or
adc
lods
out
cmp
cmpb
sbb
sub
stos
cmpsb
lods
or
imul
cmpsl
sub
xchg
mov
cli
or
xchg
adc
cmp
out
dec
arpl
cmp
jl
pop
xchg
pop
or
call
add
and
push
pop
fmuls
lret
push
inc
inc
shll
pop
fcom
cmp
push
sub
inc
shll
sbb
mov
gs
jecxz
adc
popa
rolb
add
jg
loopne
loopne
popf
mov
jae
mov
inc
push
and
jecxz
and
mov
or
or
test
and
or
or
push
jg
sbb
shll
pop
add
aam
push
push
imul
mov
dec
ja
jnp
ljmp
test
mov
dec
push
inc
cs
mov
out
sbb
and
cltd
lea
pop
out
mov
scas
add
ds
das
push
enter
lods
popf
sub
cmp
clc
dec
fisubl
pop
test
fsubr
sub
push
test
xchg
loopne
movsb
xchg
push
push
or
imull
or
notl
or
adcb
add
xchg
sar
adc
and
cs
lea
adc
loop,pn
scas
mov
mov
mov
je
inc
aaa
mov
add
sbb
test
jno
pop
add
inc
add
lods
dec
pop
push
push
fisubrs
xlat
jne
or
loope
sbb
adc
jo
cmpsb
push
int
rcr
movsb
add
pusha
sub
xor
das
pop
out
lods
adc
fdivl
lea
rclb
cmpsb
pop
shll
mov
int
inc
pop
fmul
rorb
pusha
pop
out
lods
pop
jmp
push
dec
in
sbb
push
mov
push
pop
mov
aas
shll
xor
andl
pop
dec
and
sub
pop
and
imul
adc
jbe
cmp
je
add
movsb
add
or
or
xchg
mov
out
scas
add
jge
cmpl
xchg
in
add
inc
daa
pop
mov
push
outsb
dec
daa
sub
pop
xchg
pop
push
jle
xchg
jmp
pop
adc
sub
push
mov
cmp
test
jb
cmp
dec
dec
sub
push
xor
int3
add
and
test
loope
or
cmpsl
movsl
je
cmpsb
mov
and
dec
sbb
imul
pop
mov
cmp
out
mov
insb
and
mov
jmp
aam
push
cwtl
and
rorl
je
repnz
xlat
stc
xor
and
adc
ljmp
sbb
pop
jns
xor
ret
adc
cmp
dec
mov
mov
or
gs
stos
pop
test
pop
pop
test
mov
jb
cmc
je
sbb
fwait
xor
imul
sbb
leave
mov
push
and
inc
pop
inc
pop
imul
addl
test
mov
add
cltd
sub
in
lock
adc
fucomp
push
iret
xchg
bswap
cmp
test
roll
out
push
testl
xor
adc
das
sbb
push
ret
sbb
imul
pushf
add
loopne
inc
xor
mov
nop
jnp
ljmp
or
pop
cld
jmp
mov
cmpb
adc
fwait
xchg
xor
adc
or
nop
push
add
outsl
jae
xor
xchg
jle
adc
loopne
xlat
mov
adc
aam
mov
ret
add
mov
fdivr
cmp
xchg
adc
sub
push
das
push
test
push
push
fwait
cmp
mov
scas
cmp
icebp
dec
ret
je
push
mov
and
rclb
push
pop
popa
rcll
adc
mov
add
je
arpl
push
cmpsl
push
push
jb
xor
add
and
and
es
subb
and
addr16
test
outsl
push
cmp
push
dec
test
xorl
mov
inc
repz
ljmp
or
add
push
inc
adc
push
das
pop
imul
dec
xchg
push
dec
add
xor
dec
or
push
movsl
mov
cs
pusha
mov
mov
jne
loope
push
or
push
pop
dec
lock
xchg
cmp
jns
movsb
popl
mov
push
sbb
adc
pusha
dec
push
pmullw
sub
pop
call
add
and
and
mov
call
clc
outsl
xchg
stos
add
and
add
add
xor
or
jns
push
cmp
ss
dec
or
mov
jne
xor
sub
or
sbb
insl
fsub
pushf
dec
inc
cltd
mov
mov
arpl
pop
sub
loopne
sbb
aaa
pop
adc
mov
inc
adc
xlat
rcrb
adc
cli
enter
or
sbbb
jbe
ret
arpl
rolb
addr16
mov
or
and
mov
out
insb
jno
sub
sub
push
loop
adc
inc
or
lods
sbb
mov
inc
adc
andb
adc
add
xor
stos
or
rolb
fwait
bound
push
or
insb
repnz
sub
mov
sbb
sbb
es
ficompl
imul
cmp
jecxz
inc
fldt
scas
inc
cmp
push
sub
cmp
or
jge
add
xchg
xchg
out
es
or
movsl
pop
mov
push
sbb
or
jp
in
jmp
movb
jmp
push
ret
mov
aam
cmp
xchg
add
repz
cli
orb
ss
mov
test
cli
mov
mov
xor
mov
scas
movsb
mov
jnp
test
cmp
jg
push
push
jp
rolb
push
mov
adc
push
pop
xor
adcl
test
add
test
loopne
inc
add
ret
mov
imul
mov
mov
mov
mov
cmp
adc
lahf
movhps
or
ret
pop
xchg
push
adc
jno
mov
shr
les
mov
cmp
lods
add
shrb
sub
cld
adc
out
sub
xlat
jns
dec
add
inc
addl
or
adc
std
add
pop
orb
adcl
and
sti
add
add
inc
mov
scas
add
fiaddl
adc
adcl
loope
cmc
xor
in
subb
in
ficoml
mov
sbb
adc
mov
mov
icebp
dec
add
dec
xlat
add
jmp
dec
push
adc
adc
imul
pop
jge
add
movsl
addr16
cli
inc
pop
add
add
mov
clc
cmpl
test
mov
pop
push
inc
inc
or
push
mov
xchg
pop
cmp
loopne
add
or
mov
mov
divl
out
adc
push
cmp
rcll
aam
cmpl
adc
mov
add
cmp
xor
pushf
inc
sbb
push
or
push
and
sbb
add
cmp
mov
push
sbb
sbb
sub
das
sbb
jecxz
cmpb
jne
imul
or
aam
add
add
add
jo
hlt
sbb
mov
fs
in
jno
test
pushaw
mov
and
xchg
fs
xchg
jge
cmpsb
daa
sbb
call
lods
lds
sub
sub
stos
into
mov
insb
sbbl
dec
xchg
inc
dec
cld
add
pusha
ret
imul
lds
or
lcall
pop
add
push
das
xchg
push
mov
push
fistl
jae
xor
pushf
jmp
push
or
and
add
adc
leave
loope
mov
jmp
pavgb
mov
cmp
cmpb
xlat
add
push
inc
stos
add
sbb
push
sbb
push
mov
add
pop
jb
add
jmp
push
adc
stos
aam
push
add
adc
and
ljmp
and
add
aaa
xchg
rcrl
sbb
fcomps
pop
pop
jg
cmp
sbb
jge
sbb
cmp
push
sbb
xchg
clc
or
pop
xchg
inc
xor
push
test
pop
lahf
push
out
pusha
adc
out
push
test
pushf
bound
ret
or
dec
and
dec
jmp
mov
xchg
dec
pop
jne
sub
inc
aam
mov
jo
push
jp
stc
dec
ja
addr16
shll
xchg
aam
in
push
mov
xor
ret
sub
mov
in
push
xor
movsl
xorl
pop
and
pop
aaa
pop
xor
dec
lea
jo
and
pop
push
lcall
sub
shr
push
mov
je
jb
test
inc
inc
push
movsb
fcoms
or
lods
js
outsl
dec
sbb
add
adc
mov
lods
nop
iret
fstl
mov
push
xor
outsb
adc
mov
mov
xchg
xor
or
sbb
test
cmpsb
xlat
fsts
das
nop
fs
sub
mov
add
push
sub
mov
mov
movsl
push
ss
scas
adc
pop
std
cmpsb
jo
subl
lea
sub
and
xchg
scas
dec
iret
call
insb
pop
bound
and
insb
dec
outsl
sub
out
test
jmp
mov
insb
adc
rolb
push
iret
xchg
jo
ss
push
pop
sbb
push
sub
clc
sbb
shlb
lods
adc
orb
push
or
inc
in
xchg
outsb
jnp
arpl
pop
dec
addr16
dec
cmpl
mov
into
adc
mov
js
sub
clc
pcmpeqb
adc
jg
test
femms
cltd
jnp
ret
pop
push
rolb
call
cmp
dec
sti
dec
lds
sbb
test
lret
xchg
push
jno
adc
scas
test
pop
push
aad
push
push
scas
ret
repnz
xchg
rorb
cmp
cwtl
add
addl
dec
inc
bound
fsubrs
into
inc
dec
sub
iret
fmuls
adc
lods
enter
xchg
xlat
cs
mov
mov
push
dec
and
and
popf
pop
pop
mov
repnz
data16
scas
sbb
out
push
adc
rclb
nop
push
add
cld
in
or
push
call
mov
adc
test
cld
push
add
or
pop
jge
pusha
push
aaa
ret
sub
xchg
xchg
mov
icebp
movsl
int
cld
pop
lea
pop
in
mov
sub
xsave
test
mov
add
push
inc
loope
fs
sar
mov
add
push
cld
sti
or
mov
inc
cmpsb
pusha
sahf
jnp
xor
out
mov
mov
inc
sbb
jge
push
lret
aas
adcl
xor
or
ja
jo
pop
push
cmp
ret
jne
lock
test
add
adc
pop
cmp
cmp
push
jecxz
push
add
push
push
adc
inc
test
mov
xor
xor
inc
scas
add
sub
add
inc
aad
fdivl
push
in
xor
cmp
inc
add
xor
dec
lods
xchg
test
mov
mov
and
sub
xchg
jne
test
cmp
ficomps
adc
stos
or
or
lods
lea
cltd
jb
fsub
ret
inc
nop
dec
jmp
mov
incl
sub
mov
sbb
push
mov
aaa
or
or
adc
adc
xchg
dec
mov
cmp
sti
dec
inc
addl
es
test
xlat
je
sarb
dec
mov
test
pop
or
push
cwtl
mov
jge
mov
dec
dec
xchg
mov
stos
dec
daa
ljmp
pushf
loopne
adc
dec
fsincos
adc
jge
orb
inc
scas
xor
or
enter
push
jo
pusha
xor
ret
mov
outsb
dec
adc
pop
sub
mov
loope
aam
mov
pushf
pop
fdivl
loopne
scas
sub
aas
mov
push
mov
xor
js
and
pop
mov
bound
add
and
mov
andb
inc
daa
pop
daa
inc
jo
mov
inc
lods
pop
and
or
sub
add
je
ret
arpl
sub
add
mov
sbb
cmp
outsl
push
mov
pop
dec
stc
pop
jge
ljmp
add
inc
xor
sub
mov
push
out
jmp
xor
push
cmp
jecxz
fadds
cmpb
mov
and
xor
aam
adc
mov
shll
insl
movsb
cmpsl
and
jecxz
dec
incb
adc
and
mov
mov
add
add
or
enter
repnz
pop
cmp
or
adc
fisubrl
or
pop
cmp
push
pop
and
int3
cmpsb
sbb
mov
cmpl
popa
jns
sbb
pop
dec
push
cmp
inc
dec
and
loopne
nop
fs
shll
adcb
rcrl
jo
cmpsb
in
orl
xchg
or
fucomi
add
in
lahf
pushl
dec
add
or
ss
adc
cwtl
mov
pop
xchg
xor
addr16
add
add
es
pop
xchg
add
push
loop
fiadds
ja
sbb
lcall
roll
cmpsl
imul
mov
call
cmp
adc
call
data16
dec
mov
pop
cmpsl
nop
imul
add
xchg
out
push
adc
ret
je
sub
sub
mov
inc
int3
push
push
push
jnp
pusha
movsl
icebp
scas
movsb
add
or
or
push
scas
cmp
add
xor
add
imul
jecxz
cmp
loop
mov
dec
shlb
ret
aaa
mov
mov
jg
dec
jge
test
ret
xchg
pop
xchg
sub
iret
xor
and
add
pop
push
push
add
add
ret
lds
pop
push
mov
stos
repz
pop
xchg
sbb
push
xlat
add
add
nop
das
xchg
sub
push
outsl
sub
movsb
daa
and
cli
js
jp
cmpl
sahf
mov
add
push
in
push
shrl
sub
ja
xor
mov
mov
sarb
test
and
in
push
mov
enter
mov
adc
inc
mov
subb
scas
mov
es
shll
je
xor
or
je
inc
ja
pop
jg
inc
cmpb
test
gs
cmp
push
jo
dec
je
adc
iret
jne
mov
xchg
xchg
push
mov
mov
or
subb
push
enter
cmpl
dec
pusha
adc
push
aas
rolb
mov
cmpb
jo
aaa
fidivs
adc
das
xchg
shl
adc
add
and
push
cwtl
add
sbb
or
sbb
jb
aaa
push
or
mov
or
mov
or
and
cmp
xor
and
dec
sub
aam
in
hlt
lock
jl
add
adc
aaa
sub
adc
mov
sar
clc
pop
sbb
cmpsl
adc
add
sbb
mov
sbb
cmp
jno
xor
jmp
cld
sub
mov
mov
pop
icebp
push
push
or
jnp
out
std
xor
and
cmp
pop
and
shrb
lods
cmp
rorl
dec
fwait
nop
cmpsl
sub
std
outsl
pop
and
and
mov
xor
and
or
mov
xchg
or
addr16
xor
push
add
mov
mov
lret
adc
push
and
nop
xorb
adc
or
push
dec
pop
dec
push
lret
adc
sub
adc
xchg
out
cmp
out
or
push
lret
ljmp
shll
xor
cli
sub
movsl
daa
adc
daa
push
loop
push
inc
push
in
addb
loope
lcall
or
pop
js
loope
or
cmpsl
je
dec
js
movl
pop
leave
and
cwtl
sbb
mov
pusha
push
cmp
xorps
loopne
pop
daa
and
js
clc
xchg
ja
and
std
test
add
jmp
aam
popf
dec
mov
insb
stos
adc
lds
mov
cmp
jno
push
pop
add
push
push
push
addr16
loopne
fiadds
push
shufps
mov
dec
call
negl
int
inc
test
lds
ret
sti
inc
inc
loopne
fcmovnu
or
addr16
push
aas
loopne
add
rorl
inc
scas
push
xor
pop
push
pusha
push
xlat
dec
mov
into
mov
mov
push
movsl
arpl
sub
push
sarb
push
sti
pushl
xchg
lret
hlt
add
sub
sbb
or
jne
rol
xor
inc
mov
or
inc
or
loope
or
push
add
mov
add
mov
push
lock
ja
push
nop
mov
mov
out
sbb
sbb
mov
mov
mov
or
out
insl
and
cmp
je
cmpb
or
jne
cmpl
jnp
pop
test
jo
int3
or
addb
push
adc
pop
gs
insl
cmp
add
out
jmp
or
dec
lea
rcrl
outsl
add
mov
shlb
and
pop
mov
xor
mov
shrb
jb
ret
xor
sub
sbb
in
push
imul
out
imul
dec
mov
test
cmp
add
idivl
and
cmpsl
repz
sub
xchg
adcl
aas
mov
adc
xor
and
jle
inc
dec
inc
cmpsl
dec
inc
sub
andl
or
test
add
sahf
pop
adc
xchg
sub
and
jmp
or
and
mov
and
or
ret
pop
imul
mov
and
and
push
jne
adc
call
ss
mov
or
adc
add
std
xchg
sub
je
jo
cmpb
jecxz
or
test
stc
adc
andb
push
aas
cmp
stos
test
imul
add
mov
xchg
push
jne
popa
pusha
mulb
mov
or
mov
pop
push
jbe
mov
outsb
push
or
push
push
ss
in
or
cmpsl
in
xor
lds
enter
call
test
inc
movsb
rcl
clc
mov
popa
xchg
xor
movb
push
inc
and
xchg
push
cmovns
xor
ja
pusha
popa
mov
je
push
mov
jmp
xor
pop
push
and
repnz
inc
sbb
or
sub
and
in
mov
push
pop
add
push
inc
add
or
inc
and
adc
inc
or
ss
adc
pushf
test
xchg
or
out
push
hlt
xor
subl
mov
jne
push
dec
ret
fistps
add
rol
gs
sub
adc
xchg
cmp
loope
mov
iret
and
scas
clc
jmp
pop
inc
pop
inc
and
sub
xor
push
jle
shl
adc
mov
not
mov
fnstcw
daa
popf
seto
inc
scas
push
sbb
xchg
ss
loope
clc
inc
and
lahf
and
push
cmp
ljmp
adc
test
push
in
sbb
imul
lea
sbb
pop
xchg
adc
push
lods
mov
mov
mov
insb
and
adcb
or
mov
insl
fmuls
mov
test
or
imul
shlb
sub
inc
and
cmp
jb
dec
pop
lods
add
and
imul
test
xor
sbb
in
shr
inc
sub
and
pop
sub
jp
mull
addl
and
or
pop
pop
inc
or
rorb
add
insl
sub
mov
jmp
and
xchg
je
lahf
xchg
sbb
pop
xor
and
dec
sub
mov
daa
add
jae
add
inc
add
add
cmp
lock
cmp
jmp
shlb
pop
push
push
sar
mov
mov
movsb
inc
jnp
adc
and
sbb
pop
nop
cmp
pusha
adc
xchg
mov
rcrl
shlb
lds
pop
cmp
or
aaa
mov
inc
stos
in
cwtl
or
pop
pop
shll
negb
andb
adc
xchg
pushf
je
aaa
ss
aam
aam
dec
xor
push
mov
jnp
je
jb
fildll
mov
lcall
dec
add
cs
sub
pop
ret
pushl
or
lock
js
jg
lods
jge
fcompl
inc
sub
push
je
push
pop
jmp
icebp
ss
xor
push
cmp
mov
out
jmp
mov
loope
mov
mov
push
jne
arpl
xor
pop
sub
test
xlat
sti
movl
inc
push
jle
push
cltd
mov
sbb
or
jb
jmp
add
rclb
adc
ret
insb
movsl
aas
jns
arpl
enter
fstps
mov
mov
loope
lock
xor
jne
add
add
xchg
and
lods
or
das
and
pop
cmp
mov
xchg
and
lahf
inc
jne
cmp
es
xor
push
dec
pinsrw
push
mov
add
js
and
adc
mov
and
popf
jns
test
movsb
mov
xchg
adc
adc
cmp
or
or
jne
sti
pop
push
dec
sub
mov
leave
sub
push
jp
shr
clc
add
and
push
and
pop
push
xchg
cmpsb
dec
cmpsl
mov
cmpsb
mov
inc
enter
test
js
orb
mov
and
dec
and
xchg
jo
pop
adc
cmp
aad
inc
adc
adc
pop
push
fwait
ljmp
sbb
enter
push
int3
sbb
xchg
sbb
pop
dec
inc
andl
loope
xor
pop
inc
sarb
cmp
add
or
ret
nop
pushf
sarb
or
scas
mov
xorb
ljmp
sbb
jb
push
pop
sbb
cmp
push
xchg
xor
jne
fs
add
add
push
das
inc
add
push
inc
sbb
hlt
xchg
clc
int3
push
jo
popf
pop
mov
adc
push
mov
sub
sbb
outsl
popf
dec
aad
fcompl
add
mov
iret
outsb
jl
push
inc
sub
test
cmp
mov
dec
mov
es
aaa
inc
adc
mov
test
mulb
xchg
cmp
daa
mov
nop
push
push
push
pop
outsl
insb
iret
mov
movsl
jmp
sub
and
inc
out
xchg
mov
pop
imul
jb
mov
adc
inc
adc
mov
loopne
cld
aad
push
jl
mov
jo
test
lods
push
ret
daa
test
outsb
insl
adc
shll
sbb
or
jl
add
xchg
iret
push
inc
nop
mov
movsb
mov
pop
das
int3
push
xchg
sbb
fwait
add
push
pop
mov
dec
fldl
push
ret
inc
xor
decl
jge
mov
test
and
pop
ret
mov
xor
scas
andb
movsl
fldt
movsl
mov
arpl
add
sbb
and
fcoml
inc
push
xor
or
mov
test
xchg
test
xchg
add
push
xlat
lea
and
and
jp
sti
or
test
push
cli
adc
or
movsl
inc
lock
push
adc
jne,pn
mov
pop
lods
subb
daa
jae
inc
dec
inc
rcl
movsb
xor
xchg
push
inc
cltd
mov
cmc
jmp
pop
lahf
push
int3
arpl
fstp
mov
ror
jnp
pushf
fwait
gs
jns
popf
out
dec
mov
sub
shrb
sub
add
push
cs
mov
add
push
inc
jl
movsb
cmp
lret
adc
adc
pop
xchg
enter
or
push
jge
sbb
fdivrs
inc
add
adc
pop
movsb
rclb
push
mov
outsb
or
aas
addr16
rorb
fsubs
and
push
xchg
fidivrl
or
jne
xchg
and
inc
pushf
stos
mov
arpl
xchg
out
jne
push
push
push
add
push
push
sbb
rol
cmp
femms
movsb
xor
out
sbb
pop
shufps
dec
adc
sub
pop
push
out
scas
movsb
adc
in
adc
imul
das
xor
push
mov
mov
xchg
cmpsl
popa
pop
xor
xchg
push
or
ds
arpl
cwtl
ret
pop
xor
cmp
push
cmp
int
adc
cmp
sbb
push
adc
adc
sbb
pop
mov
inc
iret
push
or
in
push
punpcklwd
jg
call
fimuls
int
lret
mov
xchg
dec
mov
jo
pop
mov
mov
out
mov
push
mov
cmp
dec
pusha
clc
jo
outsb
xchg
jmp
andb
icebp
test
je
leave
cmpb
ret
adcl
sbb
mov
or
popw
mov
out
stos
daa
push
sbb
add
xor
movsl
add
or
adc
inc
sbb
stos
mov
sti
pop
push
xor
insb
push
push
sbb
xor
popa
add
ror
xlat
and
stos
push
push
pop
scas
mov
add
adc
inc
mov
cltd
jne
jae
jg
sub
dec
insl
sub
or
sub
and
lahf
xchg
and
pop
test
push
mov
add
popa
mov
test
xchg
notb
mov
je
mov
gs
push
imul
popa
js
inc
sti
imul
xchg
in
push
cwtl
xchg
mov
xchg
jle
pop
pop
mov
mov
xchg
adc
aaa
mov
loop
popf
lock
and
andl
addb
lea
das
or
xchg
cmc
roll
je
dec
addr16
inc
push
sub
add
enter
jno
mov
jns
hlt
loope
pusha
bound
add
sub
inc
loop
daa
inc
lcall
cwtl
sub
insl
add
mov
nop
and
mov
aaa
or
xchg
loop
mov
shlb
aaa
sbb
cmp
ret
xchg
lahf
jns
push
adc
enter
cmpl
inc
jo
jp
xchg
mov
pop
jo
pop
push
sbb
or
dec
inc
out
adc
out
push
sbb
sbb
push
stos
mov
out
pop
or
decl
imul
es
inc
mov
js
sbb
je
xor
xchg
mov
je
cmpl
ret
inc
add
jb
lret
notl
add
pop
ret
add
clc
add
adc
add
cwtl
mov
or
push
sub
mov
jbe
notl
cmc
repnz
mov
push
and
push
or
nop
lret
xchg
lret
dec
xor
movsb
pushf
call
pop
in
sarb
fstpl
sbb
push
cmp
adc
lock
or
daa
rcrl
fsubl
fs
ja
push
sub
rol
test
push
test
or
jecxz
add
pop
outsl
das
add
in
dec
fsubl
dec
mov
mov
sbb
fldenv
stos
inc
inc
aaa
test
push
sub
fwait
lods
rolb
push
lods
jmp
pop
arpl
push
cmp
adcb
push
dec
inc
in
sbb
adc
sahf
fsubrs
shrl
or
daa
xchg
mov
add
inc
inc
mov
rcll
inc
add
add
add
xchg
or
add
or
and
lret
mov
or
mov
lods
daa
or
pop
sub
mov
dec
lcall
jbe
and
mov
ja
lret
sbb
scas
adc
fcomp
add
testl
or
mov
cmp
mov
and
jle
loop
mov
and
jo
pop
les
mov
mov
adc
flds
push
sub
push
lods
inc
sub
or
add
js
dec
rcrb
jmp
cmp
rcll
mov
add
sbb
rcl
xor
subl
sbb
xchg
cmp
lock
movsl
sbb
imul
sbb
je
repz
add
add
fadds
adc
jo
pop
dec
sub
xchg
sub
loop
sub
clc
adc
orb
pop
popf
mov
ds
je
cwtl
inc
mov
mov
cwtl
or
cli
cmp
dec
xchg
jge
dec
outsb
sub
popa
or
mov
fdivrs
out
lret
sbb
lret
mov
aam
mov
in
fisttpl
add
adc
fldenv
fisubl
popf
sub
repz
sbb
fisubrl
pop
shlb
sub
or
xorb
mov
orl
adc
lock
lret
sbb
call
int3
sbb
mov
test
sub
cld
sub
add
sbb
call
dec
jne
pop
or
dec
pop
insl
jns
add
call
aas
xor
in
cmp
xorb
dec
or
sarb
sarl
push
mov
add
pop
jb
push
sbb
in
lcall
in
dec
aam
movsb
push
imul
or
add
adc
cmp
mov
sub
mov
mov
and
nop
out
xchg
and
dec
sbb
cwtl
sbb
and
sbb
dec
pop
pop
lcall
push
fwait
lahf
xorb
cltd
icebp
adc
pop
mov
ja
in
xchg
adc
push
add
sbb
sahf
int
mov
xchg
mov
jne
test
imulb
mov
je
jne
cltd
pop
cs
push
sub
xchg
cltd
ficoml
or
loop
and
lret
in
jne
ja
rcrb
lahf
jbe
nop
mov
dec
into
mov
jge
cld
pusha
and
inc
lahf
pop
imul
aam
fsub
add
imul
fwait
xchg
imul
pop
mov
jge
in
shrl
cmp
repz
in
pop
movsb
xor
arpl
ret
xchg
xor
shlb
pop
push
jmp
or
test
mov
nop
jge
aad
or
or
out
lock
stc
xor
icebp
cwtl
loopne
clc
adc
sbb
jae
in
fadds
jne
fstpt
dec
test
pop
mov
data16
mov
or
rclb
lock
loopne
leave
es
or
push
add
and
dec
je
or
lods
mov
andb
imul
mov
stos
push
push
cwtl
aaa
mov
daa
aam
inc
jl
inc
add
pop
imul
clc
dec
pop
xchg
in
dec
in
test
enter
imul
inc
call
and
inc
and
out
adc
add
mov
xor
and
mov
inc
inc
sbb
insl
jnp
cmp
cmp
test
sub
push
test
outsb
dec
js
sub
push
popf
or
adc
push
sbb
jnp
add
inc
insl
push
and
and
fdivr
xor
lods
lock
and
aaa
les
sub
daa
clc
mov
jmp
ret
add
adc
jae
mov
dec
outsb
sub
and
dec
minps
sbb
gs
ficoms
repnz
jg
subb
mov
adc
mov
adc
push
insl
cmpsb
outsl
sub
xchg
les
repnz
shlb
xchg
jmp
sbb
mov
or
ss
add
jecxz
mov
xchg
jnp
fldcw
gs
inc
or
mov
fdivl
mov
xor
cmp
fisttpl
pop
movb
jle
mov
cmp
leave
jl
aas
jnp
out
cld
nop
add
mov
cmpsl
or
and
adc
arpl
sub
es
pusha
stos
xchg
jg
call
testb
je
mov
in
mov
xor
fisubrl
scas
ja
hlt
sub
mov
jae
aam
lcall
sub
test
lea
sub
push
movsl
in
mov
loopne
mov
push
fidivrl
mov
les
mov
xchg
and
orb
add
push
and
shrl
push
out
incb
cmpsl
hlt
add
das
setle
test
mov
mov
pop
out
bound
js
or
shr
sbb
adcb
add
mov
dec
adc
mov
loopne
fsub
pushf
xchg
push
cmpsl
adc
cs
sbb
hlt
arpl
push
adc
rcrb
adc
xor
jns
adc
int3
push
aam
das
pop
fsubl
push
sub
fdivs
mov
fldt
mov
jmp
loop
or
rolb
add
mov
pusha
add
sub
push
lods
call
jo
or
dec
je
int
mov
push
dec
andl
add
cmpl
ja
ljmp
push
fcomps
sarb
test
leave
movsb
pop
mov
mov
in
adc
xor
mov
xchg
sbb
pop
in
je
enter
xchg
sbb
out
ljmp
push
add
movl
sbb
xchg
in
or
add
mov
xchg
add
orl
fwait
push
push
xorb
insb
mov
lea
movsb
sti
ja
push
sbb
xor
mov
mov
mov
in
dec
cld
xchg
shr
popf
dec
es
xor
out
jo
dec
xchg
sub
lock
adc
dec
sbb
or
mov
pop
add
xor
adc
out
out
jle
jle
adcl
sub
jb
movsb
cmp
jne
shll
bound
add
sbb
aas
loope
or
out
push
or
mov
hlt
and
add
sbb
and
and
pushf
inc
inc
push
sub
xor
fistl
add
sbb
lds
lret
daa
adc
rorl
fwait
mov
and
adc
adc
adc
sbb
and
inc
jle
xor
jae
push
or
mov
nop
adc
sub
inc
inc
jle
xor
adc
shll
xor
xchg
inc
je
sbb
mov
mov
sbb
and
jp
xor
icebp
sbb
jno
stos
fs
lea
test
lods
or
loopne
xchg
xchg
jo
gs
push
sbbb
outsl
or
or
sbb
stos
mov
sub
pop
fdivr
emms
ljmp
bt
sub
not
and
inc
and
adc
jne
adc
cmp
bnd
sub
add
sbb
push
dec
lods
sbbl
sub
adc
jmp
inc
sbb
in
xor
mov
or
out
mov
inc
sbb
mov
mov
pop
sub
add
pusha
rorl
pusha
mov
sub
scas
cwtl
es
aas
test
stos
xchg
sahf
fnstenv
inc
rcl
loope
dec
jg
sbb
pop
inc
outsl
and
and
test
push
or
pop
mov
adc
mov
sbb
cmpsb
imul
dec
and
push
adc
fcomps
imul
sbb
push
sbb
addl
inc
jae
cmpb
dec
pop
and
or
or
lret
out
add
mov
mov
pop
pop
test
mov
cmp
add
cmp
rorl
push
xor
jp
out
jo
lods
inc
add
test
mov
repnz
sarl
mov
pop
loopne
pop
cmp
rol
sbb
pop
dec
repz
testl
xor
sub
test
jge
int
push
test
xor
push
add
jge
out
xchg
or
mov
cmp
sbb
popf
adc
push
dec
loope
dec
xchg
data16
jmp
test
rolb
or
jno
enter
adc
jns
js
and
adc
xor
push
xlat
mov
or
ja
jne
addb
push
es
pop
rolb
pop
rcrb
push
cwtl
add
idivl
lock
add
clc
push
push
repnz
cld
sub
std
lods
xor
clc
pop
pop
xchg
shlb
inc
xchg
dec
mov
dec
fdivl
fcomip
arpl
push
lea
and
add
enter
fs
in
sub
cwtl
repz
mov
loop
fadds
pop
pop
sub
add
nop
push
loopne
subl
pop
add
hlt
add
push
sbb
in
adc
push
xorl
test
int3
jle
jge
mov
add
adc
shl
xchg
or
jo
jmp
lret
pop
push
dec
test
into
rolb
cmp
pop
jbe
ljmp
fs
push
add
cmpl
je
xor
sub
sti
sbb
sbb
and
push
push
jno
dec
push
or
pop
jmp
lods
sbb
sbb
iret
insl
mov
fcoml
stos
cs
dec
fildl
dec
pop
push
mov
inc
clc
dec
gs
inc
clc
jl
dec
rcrb
aam
inc
sbb
inc
nop
push
jo
popa
movsb
aam
sbb
lods
cmp
imul
adcb
insb
cmp
icebp
inc
sub
rorb
inc
or
loope
adc
in
lds
jb
in
jl
sub
mov
inc
or
ja
insl
es
pop
or
adc
sbb
mov
dec
sbb
int
inc
xchg
test
jecxz
clc
imul
fnstcw
pusha
cmp
jle
and
out
dec
add
jo
cmp
in
outsb
jno
mov
xor
push
jle
adc
dec
int
lock
pop
xor
or
xchg
jb
leave
and
push
inc
mov
add
push
fildl
mov
and
shlb
or
orb
jbe
mov
cld
add
clc
fs
lods
fs
fcom
add
dec
push
dec
call
pop
cli
mov
sbb
and
push
test
push
inc
sbb
insb
and
pusha
movaps
mov
call
in
mov
movb
cmp
mov
or
or
adc
in
or
inc
ret
into
or
mov
xorl
iret
movsb
jmp
or
xchg
xchg
mov
mov
sub
push
inc
cld
rcll
addl
push
or
add
mov
xor
mov
ret
jne
push
das
mov
dec
sub
cmp
push
pop
pop
lock
ds
fdivl
popa
sub
jae
dec
mov
addr16
add
cmpsl
cld
add
xor
dec
and
out
pop
dec
jo
pop
fwait
stos
lock
test
sbb
adc
scas
jns
xor
rorb
ret
test
in
jbe
mov
cmp
clc
iret
sub
test
mov
rol
cmpsl
xchg
push
cmp
or
mov
fwait
xchg
adc
dec
aas
sub
mov
lock
jp
or
dec
pop
lret
test
js
je
push
shrb
adc
jae
ja
out
inc
sub
test
loopne
push
cmpb
mov
clc
daa
repz
or
pop
cmpb
cmp
or
mov
inc
bound
dec
jmp
test
mov
fsubs
or
and
xor
push
js
int
rorb
sbb
aas
enter
add
cmp
ja
je
add
test
fimuls
inc
rolb
lds
aam
xor
inc
jl
jge
adc
mov
sbb
movb
adc
dec
and
add
xchg
popa
insb
mov
sub
and
pop
shlb
push
jae
push
cmp
dec
pop
lret
xlat
iret
pop
or
das
loope
and
add
cmp
shl
fstpl
test
jmp
fwait
xchg
mov
mov
cmp
stos
xchg
das
mov
mov
lcall
push
cmp
movb
aaa
mov
or
xchg
fildll
xor
shll
lods
sbb
or
cmp
int3
xor
lret
in
cmp
and
dec
lret
pop
dec
inc
rorl
jae
jmp
lock
fdivrs
xchg
pop
mov
imul
push
push
cmp
sbb
inc
fs
es
es
adc
push
test
xlat
jp
and
lret
or
mov
add
xor
or
jns
sbb
adc
sub
xor
mov
shr
add
add
ret
sub
or
push
movsb
mov
pusha
adc
and
mov
dec
adc
or
subb
imul
jmp
or
gs
icebp
jb
pop
popa
jns
adc
adc
popl
test
sbb
aam
enter
stos
cmp
jne
jge
jp
in
or
adc
xchg
sub
mov
pop
add
push
adc
sbb
sbb
pop
movsb
or
enter
jnp
out
and
rol
in
arpl
dec
sbb
rcrl
lods
mov
jae
jne
xchg
inc
cmpsl
imul
xchg
dec
jne
pop
inc
repz
or
outsb
ss
push
add
push
adc
sub
mov
add
mov
pop
cmp
stos
mov
push
push
sub
or
push
lret
sti
ljmp
cmp
push
add
xchg
in
fs
movsb
pop
xor
cwtl
fcmovb
cwtl
fs
lea
dec
in
xchg
movsl
mov
jmp
adc
ret
mov
insb
inc
popa
insl
inc
pop
mov
dec
jl
mov
or
and
popa
mov
lock
es
dec
rolb
daa
or
sub
pop
leave
mov
adc
scas
xlat
dec
call
cmpl
xor
or
pop
popa
push
loopne
movsb
aaa
pop
adc
mov
sbb
gs
push
jge
mov
push
sarl
movsb
jmp
bound
cmp
inc
jle
sbbl
fisubrs
nop
xchg
idivl
adc
push
mov
cmpsb
push
rclb
shl
lret
ret
pop
nop
out
or
inc
pop
cld
sbbb
add
cmp
pushf
xchg
push
adc
fs
sub
add
xor
adc
loop
inc
js
fadds
sbb
nop
and
lods
push
clc
rcll
pop
sbb
pop
or
and
cld
push
fisubrs
push
cmc
and
mov
sub
sub
push
adc
inc
mov
jl
je
sbb
add
pop
or
andl
mov
lock
mov
pop
shlb
sbb
es
lds
lods
mov
lods
or
lahf
push
popf
das
popf
xchg
rolb
push
js
pop
push
mov
dec
sub
mov
push
popa
or
loopne
mov
and
push
rclb
sbb
pop
insl
dec
push
and
adc
adc
cwtl
mov
mov
sbb
push
push
sbb
and
nop
outsl
ret
add
pop
pop
pop
and
sbb
pop
sbb
dec
or
dec
cmpsb
xchg
hlt
or
adcb
icebp
call
and
insb
cmp
sbb
mov
xorb
fsub
cmp
mov
int
cmpb
xlat
rolb
mov
lret
fs
or
pop
sub
andl
or
nop
and
pop
arpl
inc
jnp
add
adc
popf
rclb
push
sbb
dec
test
xchg
mov
in
hlt
dec
into
inc
lods
jmp
pusha
xchg
mov
and
leave
pop
sub
dec
addr16
cmp
sub
and
dec
aaa
jl
jnp
pop
xor
inc
mov
pushf
or
add
sbb
aam
out
mov
es
xor
roll
add
and
or
incl
test
test
xor
or
cmpsb
lods
movsb
add
faddl
cmp
imul
mov
cmp
ret
enter
insb
xor
pop
aaa
or
inc
sub
push
js
cwtl
shrb
adcl
out
clc
mov
push
jb
icebp
push
pop
xchg
rcl
inc
aam
push
pop
mov
pop
mov
les
adc
ret
add
pop
ja
and
pop
xchg
shlb
pop
push
stos
or
add
sbb
mov
pop
scas
and
fwait
and
iret
sbb
test
inc
push
inc
sub
adc
mov
cmpsl
xor
xchg
cmovg
fcoms
cmpsb
pusha
mov
test
sbb
insl
aaa
adcb
xchg
enter
push
rcr
in
jge
jns
call
jae
sbb
stos
xchg
xchg
jecxz
movl
or
adc
mov
cli
push
sub
push
and
push
mov
orl
xchg
repz
fstl
or
into
inc
push
pop
adcl
lock
or
pop
sub
cmp
add
jecxz
icebp
imul
sub
dec
test
mov
inc
inc
and
add
jne
adc
ja
je
mov
or
dec
push
push
push
sub
mov
sti
and
add
jmp
dec
andb
inc
ret
sbb
inc
sub
lods
cmp
sub
adc
fmuls
adc
add
sbb
xchg
je
or
push
jmp
lret
imul
xchg
lods
mov
pop
xchg
mov
xor
inc
div
leave
mov
pop
inc
iret
adc
xchg
sahf
fsubs
cwtl
add
push
push
lea
mov
dec
xchg
imul
loopne
test
cmp
mov
pop
and
sbb
bound
jno
int
repnz
fdivl
jbe
and
jmp
xor
sbb
subl
mov
stos
fmull
push
mov
out
pop
sbb
ja
sub
int3
adc
xor
rorl
sbb
cli
or
orb
or
sub
cmp
js
imul
adc
aaa
pop
adc
push
mov
xor
cmpsl
jo
bound
js
jmp
xchg
mov
push
mov
sbb
rcll
loopne
sbbl
popa
mov
stc
add
aam
jae
adc
test
mov
push
sbb
and
sbb
and
adc
lcall
and
jmp
jle
push
mov
sub
mov
lret
hlt
sub
sbb
out
loopne
jbe
or
adc
adc
movsl
mov
aam
adc
mov
mov
and
mov
aas
dec
mov
cmp
jp
cmp
and
add
dec
fstl
pop
xor
add
add
aam
js
adcb
lahf
and
sub
cmp
jge
xchg
fiadds
popa
adc
mov
xchg
jl
or
sbb
push
idivl
jg
idivb
arpl
clc
and
or
sub
push
dec
mov
ret
cmp
imul
daa
test
outsb
push
and
cltd
push
and
push
push
or
push
nop
pusha
adc
imul
mov
repz
xchg
adc
inc
arpl
cmp
lods
aas
push
fisubrs
cmp
je
and
sub
adc
adc
jnp
sahf
jge
in
jmp
xchg
add
add
xchg
fadds
je
lods
lods
and
test
hlt
sbb
pop
popa
dec
inc
push
push
andl
js
and
pop
adc
cs
sbb
dec
cmp
add
cmp
add
arpl
dec
fs
dec
mov
inc
xchg
int3
sub
call
cmp
cmp
jno
loopne
sub
sbb
xor
pop
or
push
or
push
daa
or
or
xlat
add
xor
stos
test
jne
push
push
jecxz
movsl
in
and
orl
push
js
lods
popa
or
dec
mov
hlt
inc
sub
inc
lods
dec
dec
pop
dec
fnstenv
pop
adc
scas
mov
mov
pushf
adc
movsl
mov
ljmp
fldl
ja
pop
push
add
mov
jge
ljmp
xchg
xchg
rcr
mov
jo
in
dec
jo
jne
lea
repz
push
inc
mulb
jmp
pop
pusha
pop
xchg
adc
les
pop
sub
rcr
aam
add
jo
mov
ja
orb
rcrb
enter
repnz
addr16
add
add
push
cld
xor
test
and
lock
scas
dec
sahf
push
cmp
decl
push
add
test
jmp
lret
or
sbb
ret
testl
mov
mov
nop
addb
sub
insb
in
test
add
and
fdiv
inc
add
insl
add
imul
push
and
add
xor
push
add
pusha
push
adc
adc
cli
test
sbb
pop
or
cs
pop
loopne
add
fwait
push
popa
inc
bound
or
and
push
addl
adc
mov
shl
push
xorb
mov
jbe
or
jae
inc
int3
jmp
pop
jle
sub
in
dec
imul
inc
jge
data16
test
inc
frstor
adc
leave
out
inc
sbb
lods
rol
inc
and
lea
sbb
xor
mov
adc
in
sbb
sti
inc
popa
sbb
enter
mov
clc
inc
lods
adc
xor
dec
xchg
movl
inc
jnp
iret
add
inc
adc
mov
xor
orl
xor
and
rcll
mov
inc
pop
push
add
subb
sub
or
xor
stos
bound
and
xchg
pop
sbb
jns
cmp
adc
cmp
inc
lret
dec
and
shll
inc
xor
jne
sub
dec
sbb
adc
mov
movb
sti
adc
dec
imul
jae
lds
inc
les
mov
add
or
or
mov
dec
sub
inc
fstps
add
negb
bound
movsb
cmp
loope
xchg
add
xor
int
push
add
test
xor
icebp
int3
jnp
sub
outsb
add
enter
add
or
jmp
push
aaa
add
repz
and
add
add
fs
dec
or
lds
and
maxps
push
pop
cmp
push
add
pop
add
add
mov
adc
data16
das
inc
and
pop
loopne
sub
sbb
mov
fldenv
sub
xor
js
mov
mov
in
adc
pop
dec
inc
xchg
ljmp
repnz
in
mov
out
cmp
ljmp
pop
mov
addr16
inc
ret
xchg
sub
movsb
cmp
push
fs
mov
inc
add
adc
xor
jl
scas
lret
movsl
loop
jno
pop
sbb
inc
nop
fdivrs
sub
sub
lock
inc
push
push
or
or
jecxz
cmpsb
mov
adc
xlat
shlb
in
outsl
xor
add
push
lds
xor
pop
leave
or
test
test
lock
aam
test
mov
mov
notb
or
sar
jns
adc
jmp
loopne
adcl
adc
mov
xchg
mov
cld
or
jne
add
popl
cmpsl
hlt
add
rcll
iret
cmpsl
sar
xchg
ds
push
out
pop
sbb
add
mov
mov
xchg
ss
push
xchg
shlb
push
dec
adc
jge
nop
or
pop
aaa
call
out
pop
fs
fdivrs
cmc
fs
jecxz
aam
pop
das
daa
cmp
jne
pop
cmp
jmp
ret
movb
rorb
adc
jb
test
frstor
cs
cld
and
add
addl
and
pop
das
dec
clc
lods
jg
movsb
pop
jo
lock
mov
enter
mov
inc
adc
add
xchg
out
xor
leave
call
enter
pop
repnz
add
cmp
mov
mov
leave
add
out
shlb
outsb
addr16
mov
jge
cwtl
jb
arpl
ffreep
inc
sahf
mov
out
sbb
das
aam
jb
xchg
xchg
adc
xchg
push
add
mov
mov
enter
and
jecxz
test
inc
adc
mov
mov
cli
or
inc
popf
sub
cmp
hlt
pushaw
sub
mov
rorb
outsb
out
test
mov
fwait
inc
jp
inc
addl
sbb
movb
jo
jecxz
pop
mov
mov
inc
sbb
popa
inc
divl
xchg
lahf
shrb
inc
push
ja
add
test
cmc
nop
pop
inc
js
movsb
add
pop
popa
and
lock
push
rclb
notb
cmp
adc
sbb
popf
in
pop
dec
inc
cld
mov
lods
mov
lea
je
loopne
adc
add
js
insl
xchg
push
cmp
adc
mov
cltd
and
decb
stos
dec
push
mov
add
sub
arpl
xlat
push
shlb
sub
lmsw
insb
xchg
movsb
mov
pop
xor
lock
es
cmp
stos
rolb
movsb
fildl
jle
jno
dec
inc
sub
dec
insl
ss
or
mov
or
aam
xchg
fcmovnbe
sbb
aad
jp
dec
clc
enter
mov
or
roll
pop
or
jno
adc
inc
mov
jg
inc
add
mov
and
add
mov
inc
nop
inc
pop
fstpt
dec
push
adc
imul
adc
mov
jg
hlt
add
inc
pop
xor
add
or
aaa
and
aaa
mov
sub
push
inc
and
xchg
add
mov
sbb
cmpsl
dec
push
push
inc
sub
xchg
or
daa
xor
adc
loop
mov
adc
xor
jp
in
lret
push
jo
cmpsl
ss
jno
cmp
sub
mov
jo
and
add
mov
testl
cmp
je
cwtl
mov
xor
movsl
dec
shrl
xor
xor
adc
sahf
adc
daa
sub
add
cmp
scas
mov
rcrl
sti
pusha
inc
cli
xchg
in
adc
into
mov
movsb
es
out
stos
arpl
clc
in
loop
shl
sbb
bound
stc
daa
jecxz
fsubl
clc
xlat
sbb
dec
push
add
jo
cmp
popf
mov
out
or
push
in
scas
jbe
stos
shrl
in
jo
push
mov
jne
repz
cmp
test
adc
lods
inc
cmpsl
lods
and
dec
shlb
punpckldq
cld
and
enter
adc
add
xor
jg
out
adc
ds
mov
or
roll
and
shrb
lods
jno
or
scas
add
dec
je
xchg
rolb
outsb
adc
icebp
pop
sarb
and
mov
or
push
test
dec
push
pop
push
cs
int
lock
or
ret
lods
lock
arpl
pop
fidivs
imul
xchg
rcrl
pusha
sbb
and
or
add
add
mov
mov
cltd
adc
push
pop
mov
pop
loopne
sahf
push
mov
ret
sbb
cmp
mov
cvttps2pi
push
push
out
jnp
and
pop
rcrl
movsl
inc
movb
cltd
inc
dec
clc
jg
push
xchg
roll
add
popa
xchg
inc
push
fadds
jl
sub
adc
js
inc
push
das
adc
xor
push
cmp
addr16
adc
pop
lret
pop
jnp
adc
cltd
mov
inc
adc
stos
jge
pop
dec
lds
jb
lret
sbb
outsl
add
mov
inc
imul
jl
pop
pop
cld
je
jg
fadds
ret
rcrb
adc
lahf
jle
mov
or
sub
add
icebp
jge
inc
jle
push
aam
mov
xchg
xchg
pop
inc
and
ja
and
or
mov
or
dec
pop
les
add
sub
jne
cli
frstor
insb
pop
es
das
xor
push
pusha
mov
fwait
imul
in
inc
imul
pop
cmp
lds
pusha
jl
mov
ss
ss
pusha
test
ss
es
push
lahf
xchg
mov
inc
jp
lret
mov
jmp
adc
and
mov
and
sbb
xchg
xor
gs
cli
scas
cmp
lcall
jle
sbb
sub
fcom
xchg
pop
or
filds
les
mov
mov
mov
jmp
push
add
mov
fldl
into
test
sbb
add
xchg
cmp
sbb
adc
push
mov
mov
push
and
movsb
jge
jb
imul
pop
inc
sub
aas
mov
mov
hlt
cltd
pop
lret
jg
sbb
push
xchg
mov
adc
not
push
cmp
faddl
xchg
stc
inc
daa
add
push
ret
imul
test
pop
sbb
ret
ja
sub
jmp
adc
pop
jmp
inc
cmp
popf
test
fimuls
jmp
or
pusha
mov
add
sahf
mov
test
pusha
or
sbb
call
mov
push
cmp
mov
inc
cmp
lea
and
cmpb
sub
mov
sub
add
sahf
jno
popf
jb
and
sub
xchg
js
fldl
mov
jne
push
imul
or
xchg
int3
mov
sbb
dec
movsb
adc
sbbl
dec
inc
mov
pop
xor
adc
or
rcrb
or
adc
xchg
add
mov
lods
sub
mov
add
orb
sbb
adc
popf
mov
dec
mov
test
inc
gs
rol
lcall
pop
pushf
jle
xchg
das
sbb
call
adc
push
adc
inc
andb
add
and
mov
mov
xor
les
xor
push
sti
es
insl
xor
cmpb
ss
sub
mov
cmp
pop
hlt
mov
fdivs
sbb
lcall
sub
imull
shr
cwtl
js
mov
mov
fs
js
add
inc
lods
test
das
fisttpl
ret
and
insl
add
inc
inc
add
sub
inc
add
inc
push
je
fdivl
adc
sub
pop
dec
sub
and
sub
sub
dec
into
or
fadds
ja
lods
movsb
jg
rorb
pop
add
mov
nop
incb
inc
adc
inc
or
sbb
sub
cmpsb
and
test
test
aam
xor
add
inc
mov
or
mov
lret
divl
mov
popf
call
inc
jbe
mov
sbb
in
das
adc
stos
int3
jmp
leave
jne
insb
mov
ret
loop
arpl
or
movsb
mov
addl
pop
ja
and
add
adcl
push
shll
add
rcrb
jo
ds
xor
movsl
fistpll
pop
sbb
jo
aas
shlb
xchg
iret
mov
mov
jl
or
dec
push
or
stc
xor
sub
xor
xor
add
pop
mov
cmpsb
xchg
xchg
das
flds
pusha
inc
xor
jl
lods
mov
jnp
push
adc
push
insb
mov
pop
dec
push
test
mov
sub
xchg
jne
pop
add
push
leave
pop
pop
outsb
cmp
loope
bound
jne
aam
ds
push
and
pop
dec
cs
hlt
jmp
test
loopne
lahf
cs
adc
shrb
outsl
fcoms
or
ja
repnz
mov
mov
imul
shlb
movsl
or
xor
mov
adc
or
rorl
mov
call
dec
ss
mov
int3
imul
sub
push
ret
xor
rcll
inc
push
out
leave
inc
jecxz
jo
and
xorl
mov
cmp
xlat
mov
repz
cwtl
inc
sub
add
outsb
cmp
dec
add
and
movsb
mov
fiadds
pop
enter
add
push
mov
cmpsl
cmp
xchg
or
js
or
or
sbb
xor
pop
je
adcb
add
push
inc
outsl
sbb
pop
inc
sub
push
sub
test
andb
mov
addr16
gs
call
rolb
adc
pop
mov
popa
sbb
imull
fisttps
xchg
or
jbe
punpckhdq
fildl
pop
and
cs
adc
mov
jle
lods
std
addr16
push
sbb
and
lock
sbb
push
inc
sbb
mov
inc
dec
imul
sahf
add
notb
pop
lock
out
sti
jmp
push
pmulhuw
lock
adc
adc
jne
sub
sbb
fisubs
ret
pop
and
mov
cmpsl
stos
imul
in
or
and
push
rcrl
jg
stos
sbb
jmp
adc
insl
sub
adc
loope
adc
or
lcall
adc
adc
sbb
add
daa
inc
lahf
cmpl
les
dec
fstpl
test
push
sbb
cmp
iret
dec
push
cwtl
test
add
test
mov
daa
sbb
aaa
mov
lcall
or
cld
push
cltd
nop
xchg
push
sub
push
push
in
sub
pop
sbbb
dec
mov
in
jae
xchg
fs
push
pop
xor
or
ror
imul
add
add
add
imul
xchg
sub
and
les
and
mov
dec
dec
daa
sbb
imul
push
mov
insb
mov
jg
sbb
jecxz
xchg
arpl
push
jne
add
stos
inc
dec
push
cmpsl
and
dec
push
jo
push
pop
xor
mov
push
addr16
dec
pop
mov
pop
fiaddl
jae
daa
fwait
out
outsb
dec
bound
add
and
jp
pop
nop
inc
cmc
sbb
push
cmp
and
and
add
nop
or
popl
adc
sbb
sbb
adc
and
lret
jb
dec
jnp
dec
jbe
ret
push
sub
add
stos
out
popf
or
xchg
gs
push
adc
aam
out
loopne
pop
arpl
and
or
daa
aad
shll
or
mov
je
fsubs
movsl
daa
mov
mov
jmp
fisubs
mov
mov
lods
out
sub
adc
mov
aas
and
cld
adc
es
fnstenv
hlt
clc
lea
add
or
and
pop
iret
ret
stc
inc
shll
dec
push
inc
add
mov
mov
sub
mov
dec
sbb
sysexit
int
les
push
xchg
scas
inc
sub
in
rorb
mov
lock
mov
sbb
sub
push
rcl
aam
xor
add
inc
movsl
out
mov
inc
hlt
shlb
fcoml
aam
mov
in
lds
adc
cld
ds
outsl
mov
sub
test
sahf
inc
cmp
dec
xor
and
jge
stos
fs
lahf
adc
inc
pop
inc
mov
roll
test
mov
orl
mov
rol
dec
or
add
inc
or
shll
aaa
push
ret
mov
adc
ja
add
outsl
lahf
lea
jno
dec
sbb
rorb
mov
push
js
popa
push
scas
or
mov
xchg
sub
push
mov
inc
dec
cmp
jl
xchg
sbb
loopne
push
mov
mov
inc
jno
mov
adc
imul
daa
popf
cli
jb
pop
int3
sub
test
mov
f2xm1
lret
out
iret
xchg
sbb
jb
nop
movsb
dec
cltd
dec
es
insb
xlat
or
sub
lahf
and
adc
mov
movsl
sbb
outsb
dec
scas
sbb
movl
movsb
or
or
shr
add
daa
add
jmp
rorl
push
cmp
hlt
or
sub
xchg
sbb
sbb
fsubs
lods
shrb
xor
adc
test
add
sbb
push
pop
fstpt
inc
mov
xor
aaa
add
inc
push
add
sub
pop
aas
pop
or
mov
cmp
or
dec
xchg
sub
sarb
or
fsubl
add
mov
fstpt
cmp
xor
pusha
xor
cmp
aas
adc
nop
es
addr16
add
mov
pmaxub
push
outsb
pusha
mov
jp
xchg
mov
enter
popa
push
call
addb
stc
cmp
stos
sar
sub
push
rolb
jnp
adc
sbb
jae
inc
sub
and
lret
adc
dec
and
int
inc
or
mov
sahf
dec
add
push
dec
dec
lcall
pop
sarb
sarb
sbb
jl
or
in
in
dec
cwtl
or
pop
adc
dec
jnp
cmp
xor
push
sub
sub
mov
jno
mov
add
ljmp
mov
mov
sub
cwtl
fiadds
push
icebp
jae
push
roll
push
ret
adc
in
rorl
cmpsb
cwtl
scas
push
mov
hlt
inc
loop
mov
adc
sub
xor
push
push
mov
data16
in
rol
sub
xchg
xchg
daa
cmp
mov
insl
pushf
add
cld
adc
idivl
aam
sbb
add
push
dec
rorb
iret
xor
inc
sub
call
push
inc
loop
mov
xor
jno
imul
pop
test
cmpsb
sbbb
dec
xchg
subb
movsl
out
scas
repnz
iret
adc
push
test
mov
out
mov
shrb
lfence
push
jmp
cltd
addr16
daa
orb
push
sbb
mov
aam
pop
cmp
fildl
adc
xor
outsb
dec
push
mov
jnp
test
xor
xor
addb
and
sti
adcb
into
nop
sahf
push
addb
sbb
adc
clc
add
pop
dec
leave
mov
fnstcw
jns
adc
push
cmc
or
add
cmp
pop
cld
push
inc
sti
or
push
cmp
mov
dec
cmp
adc
test
push
dec
aaa
movl
aad
or
movsb
movsb
in
ss
dec
hlt
xchg
push
push
add
or
push
pop
pop
negl
push
xlat
or
and
dec
dec
sbb
imul
sbb
add
pop
jne
xchg
test
mov
cs
push
daa
and
pop
fidivs
pop
cmp
or
lret
rcl
enter
add
or
push
movsb
adc
movsb
cmpsl
dec
mov
call
and
nop
jo
lock
popa
adc
inc
and
ret
mov
xor
push
gs
inc
sbb
ffree
sub
imul
sub
jne
test
hlt
fildl
jp
stos
mov
cmpsl
fwait
push
jmp
aaa
dec
jo
fists
clc
push
lods
adc
pop
lret
repnz
aam
push
mov
sbbl
mov
sub
pushf
add
movsb
insl
and
jnp
fdivs
mov
test
les
les
push
jno
inc
int3
push
cmp
loopne
xchg
mov
xlat
dec
mov
add
dec
pusha
or
add
fcmovb
xchg
dec
mov
addr16
jle
jl
sbb
shlb
jo
enter
mov
mov
rolb
jge
xchg
push
cwtl
mov
cmp
cmp
sub
call
aad
adc
cmp
shll
icebp
push
pcmpgtw
xchg
pop
inc
add
ffree
jbe
dec
jle
jmp
add
pop
add
push
mov
jmp
imul
dec
mov
or
cmp
sbb
sub
stos
scas
or
sub
gs
inc
arpl
enter
xchg
or
rolb
pop
sahf
or
add
jmp
dec
xor
sub
sbb
inc
xchg
or
popf
and
shll
push
stos
test
xlat
inc
fwait
rclb
jmp
mov
cld
inc
addr16
xor
or
jge
inc
bound
push
mov
adc
hlt
into
popa
test
xor
test
push
push
push
testl
jle
lods
push
ss
movsb
mov
stos
cwtl
ffreep
stos
in
xchg
scas
inc
insb
rorl
popa
pop
jo
popa
inc
mov
push
dec
add
dec
push
sub
inc
adcl
movsb
dec
and
rcll
jmp
add
adc
loope
dec
inc
fwait
jbe
movsl
jecxz
fs
cs
loopne
outsl
cmp
xchg
and
mov
addb
sbb
inc
or
or
clc
inc
rcrb
push
cmp
loope
xor
xor
and
mov
lret
add
mov
loopne
and
adc
sbb
xchg
push
inc
cmp
pop
fidivrl
mov
add
gs
sbb
push
addr16
out
add
pusha
pop
push
fadds
ja
push
dec
shlb
fs
push
stos
out
mov
push
std
out
sub
sbb
or
dec
sbb
and
push
push
shlb
sub
or
jae
and
in
dec
jo
fdivp
pop
inc
pop
xchg
loopne
add
or
xor
cwtl
cs
pop
outsb
fmuls
push
pop
inc
pop
adc
cmc
shl
int
fsub
pop
pusha
bound
add
ret
xor
xor
sbb
je
pop
incl
outsl
inc
or
add
or
imul
dec
xchg
int3
loopne
xor
cmpsb
push
sub
cmpb
hlt
mov
nop
inc
push
push
fcomps
xchg
cmp
in
fcoms
dec
mov
insb
pushl
sub
xchg
bound
push
jbe
dec
movsb
popa
jo
inc
or
mov
sbb
sbb
lcall
mov
dec
push
mov
jmp
jns
es
fsub
ss
les
imul
pop
or
or
xchg
subl
push
jmp
mov
das
pop
jb
add
test
ror
seta
and
adc
imul
or
in
or
in
out
mov
bound
cltd
sti
adc
inc
lods
bound
inc
out
adc
inc
inc
out
addr16
fiaddl
inc
scas
es
icebp
push
cltd
jb
mov
mov
cmp
cmp
dec
xchg
xor
jae
dec
mov
inc
push
mov
and
paddusb
mov
rclb
inc
rolb
inc
lahf
rolb
rolb
pop
pop
sbb
cwtl
stos
add
adc
push
ret
mov
test
dec
pop
inc
sbb
mov
xor
inc
mov
data16
push
into
fimull
sbb
add
in
pusha
pop
add
mov
push
daa
cli
mov
shlb
mov
inc
add
es
cmp
cmc
jne
adc
pop
out
add
sub
mov
testb
adc
inc
or
leave
mov
daa
mov
subb
mov
loopne
les
mov
jns
or
jo
push
and
dec
and
aas
add
addr16
lods
pushf
loopne
cmp
push
sub
and
sbb
loopne
adc
mov
add
xchg
rolb
cs
push
jecxz
add
and
push
inc
dec
popl
xchg
push
cmpsl
and
or
cmpl
adc
ljmp
lret
cs
pop
dec
ja
push
sbb
int
mov
inc
rorl
cmp
sbb
leave
xchg
cwtl
push
outsb
shr
ret
sbb
inc
sbb
lret
mov
inc
mov
mov
data16
lahf
ljmp
enter
punpcklwd
or
lock
mov
arpl
adc
lcall
cmpsb
mov
jo
insb
scas
push
push
test
gs
xor
cmp
fildl
ss
xchg
push
push
add
add
push
adc
or
pop
or
jb
dec
or
push
inc
mov
inc
ret
or
adc
pusha
dec
rolb
ret
cmovns
mov
frstor
lcall
test
in
dec
adc
out
fcmovnbe
or
call
nop
push
stos
sbb
add
sbb
push
outsb
fdivs
adc
or
dec
mov
test
push
imul
fisubrs
or
jns
or
gs
mov
cmc
lock
jae
or
cmp
pop
shr
or
mov
je
sub
and
fsts
dec
xor
rolb
notb
and
add
imul
into
adc
add
mov
mov
in
dec
jge
sbb
les
addr16
push
outsb
arpl
xlat
sbb
ljmp
lcall
cmp
jbe
and
sbb
sarb
fldt
mov
sbb
xlat
test
push
mov
push
xor
lods
not
sbb
andb
pop
mov
shrl
sbb
ret
dec
adcb
ss
dec
imul
and
mov
sub
aad
sbb
inc
and
or
sbb
mov
cmp
xor
or
mov
jo
sets
and
push
arpl
mov
pop
ss
mov
ja
or
jmp
getsec
insb
mov
cmp
mov
mov
dec
xchg
ss
and
or
adc
dec
push
pop
and
fstpl
das
pop
add
iret
adcl
cmp
cmp
imul
aas
adc
xor
and
adc
mov
sti
and
add
inc
dec
fiaddl
pop
addr16
imul
and
es
loopne
xchg
lock
idivl
add
popf
and
fcoms
lods
mov
jb
aaa
lods
adc
mov
imul
sub
xchg
xor
mov
pop
bound
adcb
loopne
push
imul
jnp
insl
sbb
pop
adc
cmp
pop
cmp
sbb
dec
inc
ss
insl
in
pusha
sub
or
insl
imul
and
jo
or
or
sbb
or
fistpl
pop
jo
add
out
pop
push
push
out
popf
insb
loopne
nop
adc
jbe
xor
imul
sbb
add
xor
inc
and
cmp
mov
mov
in
shll
lods
repz
xchg
xchg
sbb
pop
aad
sbb
xlat
sbb
scas
mov
xlat
sbb
sbb
enter
mov
and
daa
sub
fstps
add
or
sbb
adc
add
das
jbe
enter
mov
push
js
jnp
or
ja
cs
jo
push
pop
mov
xor
pop
in
hlt
fdivl
pushf
mov
movsb
call
or
xor
pop
mov
jbe
fimull
and
inc
dec
and
rolb
or
stc
or
inc
mov
icebp
mov
push
or
jo
sbb
lret
shrb
clc
nop
shl
addr16
adc
xor
mov
adc
scas
adc
inc
adc
inc
add
and
test
sbb
mov
or
dec
jbe
outsb
or
or
insb
add
jns
xor
mov
ja
pop
mov
xor
jo
jecxz
pop
or
ja
push
pop
aaa
orl
and
sarl
xlat
adc
mov
pop
or
pop
or
ret
mov
sbb
test
in
push
test
outsb
movhps
pop
movsl
mov
jnp
and
mov
jg
sbb
and
mov
and
add
mov
subb
and
pop
add
test
mov
sub
outsb
imul
daa
out
clc
push
cmp
xchg
syscall
xor
xor
jb
jl
aad
jb
imul
pop
or
adc
bound
adc
arpl
stos
or
ss
jnp
adc
mov
and
adc
inc
xchg
daa
jbe
in
or
adc
or
nop
fs
jle
jns
sbb
fwait
xchg
xor
pop
pop
xorl
or
xorl
or
add
adc
cmpsl
fistpl
dec
adc
cmpsl
and
ret
cmpsl
sub
pop
jno
sub
mov
sub
cmc
sub
push
sbb
cmpsb
ljmp
movsl
pusha
mov
push
and
push
sub
imul
add
mov
cmpsl
xor
sub
cli
daa
push
xlat
inc
pop
shrl
mov
push
in
inc
mov
es
or
das
outsl
push
adc
xor
adc
xchg
sbb
outsl
add
sub
or
imul
jecxz
in
imul
or
xchg
pop
pusha
sub
shll
and
aas
scas
xchg
shrb
pushf
cmc
pushf
pop
aad
daa
jae
mov
test
mul
std
cmpsl
push
mov
fdivl
push
je
repnz
cmpsl
sbb
mov
jae
orb
jae
jae
sbbl
and
xor
jae
xor
pop
jae
jae
push
pop
and
inc
adc
adc
fdivs
movsb
pop
sbb
xor
test
xor
and
mov
andl
push
sbb
adc
mov
das
stos
loope,pt
aad
sub
pop
or
or
mov
or
sub
testb
adc
scas
sub
scas
daa
leave
call
inc
jne
into
lock
lahf
popa
jbe
and
pop
sarb
xchg
and
push
jge
mov
or
popl
shll
and
push
mov
or
xchg
outsb
cmp
iret
or
leave
sub
jle
and
scas
jnp
ret
or
mov
mov
or
mov
dec
rcr
lcall
mov
outsl
pop
and
add
std
fsubrs
mov
ret
roll
xchg
pop
xor
sbb
dec
sti
dec
fcomi
xor
adc
xor
stc
movb
push
xor
shll
aaa
push
icebp
das
insl
adc
icebp
xor
in
lods
xor
repz
mov
loop
jo
addl
sub
sub
sbb
pop
xor
out
das
icebp
cmp
sub
sbb
ficoml
shll
lret
sbb
mov
mov
sbb
pop
cmp
sbb
cs
xor
xchg
xor
pop
sub
or
xor
mov
daa
lock
jg
jno
add
sti
in
cmp
push
pop
fsubl
adc
xchg
dec
or
addl
push
sbb
fiaddl
dec
jb
or
or
push
mov
add
cmp
sub
push
add
std
mov
sbb
dec
lret
and
mov
adc
xor
sar
mov
insl
sbb
sbb
mov
fwait
inc
imul
xor
pop
adcl
pop
sbb
jmp
insl
xor
fcomi
sbb
pop
mov
loopne
repnz
imul
das
dec
adc
sub
pop
fld
sahf
push
in
sbb
adc
adcb
push
adc
sbb
inc
subb
inc
jns
in
addb
shl
mov
fcmovnbe
and
sub
mov
lds
daa
cmpsb
sub
add
repnz
pop
add
or
pop
mov
das
mov
popa
push
pop
mov
stos
fisubrl
lahf
push
dec
or
adc
push
popa
and
test
in
rolb
pop
push
jg
or
ja
outsl
movsl
or
pop
cmp
adc
mov
shlb
jo
adc
xor
cltd
xchg
or
mov
add
daa
mov
das
xchg
adc
push
negl
adc
popa
insl
daa
jne
pop
pop
pusha
test
mov
daa
mov
mov
fistl
and
int
adc
leave
and
rcrb
fcmovnu
scas
mov
dec
and
sub
push
sub
adc
test
fcoms
shll
adc
nop
cmpsb
jne
insl
sbb
insl
gs
mov
adc
mov
sarb
rolb
dec
daa
mov
sub
adc
add
xor
sub
sub
or
mov
inc
sub
sbb
adc
mov
jg
popa
add
mov
outsb
xor
shrb
outsb
inc
push
loopne
jne
mov
sbb
shlb
addr16
adc
mov
mov
fldenv
push
xchg
sbb
dec
shrb
lods
das
sbb
test
inc
insb
jns
push
sbb
and
sbb
inc
shrb
push
jl
paddusb
loopne
scas
jnp
js
fstpt
xchg
xor
and
lock
arpl
adc
dec
outsb
adc
jnp
mov
jns
push
jno
sub
mov
mov
jbe
push
push
dec
adcl
push
fcmovbe
sbbl
mov
ss
inc
rcll
js
lea
adc
sbb
adc
mov
mov
sti
inc
mov
and
loopne
sbb
daa
pop
and
dec
ja
push
sub
or
adc
popa
mov
out
add
and
test
imul
mov
and
inc
add
mov
pusha
in
sub
pushf
and
inc
dec
xchg
sub
sub
fwait
lahf
push
sub
mov
sub
inc
movsl
adcb
rclb
xor
xorb
adc
mov
xorb
cltd
inc
jp
mov
xor
lea
jnp
add
cmc
xchg
adc
xchg
dec
movsb
lods
int
cltd
adc
mov
sti
cmpsl
adc
fidivl
in
push
adc
mov
dec
dec
adc
dec
mov
mov
sub
inc
scas
pop
sub
fbstp
inc
push
push
sub
loop
add
mov
fsubrs
lods
inc
test
and
fcmove
fwait
adc
mov
or
sub
adcb
inc
and
arpl
inc
and
cmpsb
sbb
adc
and
imul
jbe
inc
and
and
and
fiaddl
and
sub
or
and
pop
or
in
je
subb
sbb
xor
cmc
cmp
sbb
adc
ss
pop
ja
inc
jo
scas
adc
push
pop
mov
out
cs
xor
and
jo
add
cmpsb
adc
pusha
cld
inc
adc
push
xchg
fists
cwtl
xor
inc
push
adc
push
or
test
gs
mov
and
adc
push
neg
sbbl
push
pop
fisubrl
loop
xor
sbb
je
xchg
scas
insl
daa
lock
sub
insb
push
add
mov
dec
sbb
ja
add
add
cmp
jo
adc
pop
rclb
ret
lret
cmp
sub
xchg
push
xchg
das
xchg
or
dec
mov
and
es
push
jb
xor
dec
psubq
shll
mov
sahf
pushf
divb
mov
daa
and
leave
leave
enter
jmp
in
or
jns
jb
std
dec
and
loope
and
lds
inc
sahf
adc
daa
and
es
fldenv
daa
jno
or
dec
push
dec
test
push
lock
rol
test
in
add
adc
xor
or
pop
mov
jg
mov
or
xchg
inc
jo
insb
adc
pop
inc
loopne
add
sbb
xchg
test
inc
xchg
fcoms
gs
dec
xchg
imul
gs
push
test
jae
push
pop
fstpl
xlat
inc
lods
mov
inc
inc
sub
test
mov
dec
insb
or
je
or
adcl
jmp
dec
pop
xor
ss
out
xchg
loopne
xchg
sbb
mov
ss
popf
push
mov
fmuls
or
cs
and
fisttps
pusha
into
mov
pop
movsl
in
les
push
movsl
or
or
ret
adc
mov
sbb
pop
shlb
lock
push
imul
push
es
cmp
inc
add
and
cmp
sbb
cmp
xor
movl
or
xchg
or
shll
pop
inc
out
dec
push
das
test
shll
into
das
nop
add
enter
xchg
adc
inc
add
sbb
mov
push
mov
aaa
in
jecxz
adc
inc
jp
cmp
adc
or
mov
push
mov
in
nop
pop
pushf
sub
lds
adc
aas
dec
lds
inc
mov
imul
sub
lods
iret
push
pop
sbb
mov
jno
cwtl
out
jl
dec
add
push
cs
or
out
sbbb
repz
nop
push
call
nop
push
shlb
testb
jb
notl
and
stc
xchg
enter
fdivr
add
pusha
outsb
and
nop
and
in
add
inc
dec
add
mov
setb
sub
jg
adc
sbb
or
test
xchg
cmpsb
add
add
bound
dec
hlt
pop
js
outsl
sbb
jno
adc
ret
shll
adc
push
push
rcrl
stos
inc
outsl
jecxz
shrb
sbb
sub
adc
call
enter
lock
sti
mov
dec
push
inc
js
or
dec
outsb
or
in
hlt
movsb
leave
xor
in
les
add
lahf
mov
jnp
add
sahf
add
cmc
les
xor
jbe
or
jecxz
pop
mov
dec
sub
add
inc
es
add
jg
and
call
jmp
sbb
push
test
xor
divb
add
and
out
xor
out
xchg
in
mov
fstp
or
ss
push
jnp
insb
mov
outsl
pop
jnp
sbb
js
aas
je
es
jl
es
jb
bound
loopne
lret
inc
popa
fidivl
jmp
jbe
es
movsl
or
insl
ja
add
int
xchg
jb
addr16
sbb
push
mov
xchg
xchg
outsb
lcall
subb
sub
insb
fists
outsl
das
scas
insl
fistps
sbb
and
pop
fildl
pop
daa
mov
cmp
pop
dec
pop
ja
addr16
jb
arpl
or
pop
xor
fdivl
ja
dec
xchg
xor
mov
cmp
cmpl
xlat
punpckhbw
fwait
test
push
or
lcall
sbb
ficoms
xchg
loop
in
scas
je
and
cmp
jmp
adc
sub
mov
insb
xor
or
push
add
ds
jmp
mov
mov
jl
xchg
add
xchg
xor
sub
iret
aam
sarb
adc
imul
add
sbb
mov
roll
imul
mov
xchg
stos
or
loop
and
mov
sbb
inc
mov
mov
dec
mov
pop
inc
adcl
movsb
add
inc
push
lret
inc
imul
push
xor
mov
test
sti
sbb
fstpt
or
ret
and
in
addr16
and
adc
lods
inc
or
jne
adc
cld
adcl
cmp
icebp
inc
jo
les
add
xchg
xchg
push
mov
or
pop
sub
in
lahf
and
fwait
xor
sbb
mov
push
sbb
cmp
mov
enter
mov
fildl
xchg
fwait
ret
adc
jne
add
pop
xor
test
sbb
pushf
pop
sbb
aam
movb
mov
sbb
or
sub
push
or
rolb
in
lcall
fcoml
ja
push
adcb
mov
iret
addr16
pop
mov
add
out
sub
shll
loope
out
sbbl
std
or
fistpll
add
bnd
xor
add
xor
nop
lret
add
adc
xchg
push
inc
fsub
pop
jle
leave
leave
leave
mov
or
add
push
push
add
push
lea
movsb
xor
push
add
push
mov
push
push
lea
push
mov
mov
pop
push
imul
or
cmp
xor
xlat
iret
push
jns
ljmp
pop
pop
or
or
or
or
or
or
sahf
out
adc
adc
out
sahf
adc
sbb
jmp
jns
sbb
push
pop
and
and
and
insb
jns
cmpsl
sub
and
out
js
lcall
int
out
sahf
out
lcall
push
jns
out
data16
cltd
stos
out
sahf
out
int3
fucomp
cld
jns
out
or
sbb
es
push
fld
inc
icebp
pop
xor
jmp
xor
add
and
xchg
jb
fisubl
push
adc
pop
push
mov
or
or
or
or
dec
in
lret
push
and
mov
adc
cs
xor
dec
sub
in
lret
inc
push
mov
pop
dec
sbb
test
push
sbb
xchg
push
push
sbb
shll
aaa
pusha
mov
sbb
popa
imul
push
bound
arpl
inc
sub
nop
lret
and
addr16
dec
gs
dec
ja
cltd
mov
test
cwtl
gs
mov
jns
pusha
push
fcoms
movsb
js
mov
cmp
xor
clc
js
or
pop
popa
or
jle
inc
aaa
pop
push
imul
add
fsub
aam
pop
add
jecxz
test
inc
pop
es
data16
repnz
int3
mov
push
lods
lock
call
insb
clc
in
xchg
jnp
loopne
jp
fmuls
orl
xor
jmp
movsl
mov
loopne
cmp
mov
push
pop
mov
loop
mov
jecxz
orb
aas
inc
sbb
push
jns
and
cltd
fistpl
xor
xor
popa
sub
xor
xchg
xchg
xor
jecxz
cwtl
push
mov
push
add
mov
cwtl
pushf
cmc
cwtl
out
sub
jo
hlt
push
fsubrp
in
rolb
ss
daa
and
cmp
inc
mov
adc
mov
pop
cmpsl
cmp
push
add
fwait
add
mov
dec
dec
cmpps
mov
push
add
lods
xchg
or
push
frstor
add
pop
pop
add
movsl
jno
lods
pop
adc
dec
filds
shrl
adc
enter
and
movsb
xchg
ja
or
add
nop
ljmp
adc
adc
add
stc
or
push
adc
sbb
sti
dec
and
lcall
mov
adc
jo
rclb
mov
imul
sbb
imul
outsl
xor
dec
pop
imul
imul
sub
jb
jge
pop
and
addr16
adc
sbb
sbb
call
add
insb
popa
cmp
lea
dec
das
inc
fdiv
repz
pop
sub
insb
jb
arpl
xor
xchg
in
or
sti
cs
jo
inc
dec
jae
mov
and
and
sub
xor
mov
add
ss
add
sub
and
xor
jmp
sub
jecxz
jnp
sbb
divl
or
inc
adc
cmp
push
cmp
adc
and
inc
xor
or
pop
xor
divps
xor
ja
cmp
sti
cwtl
test
insb
jb
es
cmp
jnp
push
js
cmp
jl
je
inc
and
mov
dec
xor
xchg
cld
test
sbb
sub
cmp
addb
dec
dec
or
adc
pop
roll
call
inc
ret
push
push
and
xchg
mov
ret
inc
pop
fucomip
pusha
add
dec
add
mov
jmp
lret
rol
inc
icebp
sub
dec
aaa
pop
jb
push
push
and
ss
sub
pusha
add
and
xchg
out
mov
jo
iret
scas
sub
ja
add
push
psubb
or
sbb
jbe
push
mov
cmp
call
sahf
pushf
pushf
mov
add
ss
and
mov
inc
xchg
xchg
xchg
inc
xchg
icebp
movsb
enter
adc
inc
decl
and
leave
leave
leave
push
jge
mov
xor
inc
dec
sahf
out
cmp
jns
inc
mov
adc
mov
xor
dec
dec
fbld
dec
inc
loopne
fldt
inc
test
push
dec
add
xor
mov
rolb
inc
lret
push
lret
rolb
inc
fwait
or
test
sbb
es
add
pop
pop
inc
test
dec
xchg
dec
sub
mov
inc
adc
lods
mov
fs
dec
mov
inc
add
add
movntps
hlt
pop
sbb
or
jecxz
iret
pop
jle
scas
notb
into
xchg
xchg
pop
xchg
inc
or
pop
sbb
cs
or
cmp
xor
clc
jp
add
outsl
outsl
xor
sub
or
mov
imul
jne
add
mov
aas
stos
and
flds
dec
dec
xor
jno
fisttpll
loop
mov
push
and
and
and
sub
or
and
xor
or
and
or
rcll
bound
sbb
rcrl
pop
mov
xchg
adc
push
or
adc
inc
bound
pop
add
cs
cltd
mov
pushf
sti
aaa
adc
xchg
dec
and
inc
mov
push
adc
pop
mov
jb
and
cltd
and
cmp
jno
add
inc
or
js
sbb
ljmp
and
dec
loopne
rorl
inc
mov
adc
xchg
pop
enter
jg
inc
ror
mov
inc
gs
in
add
leave
add
lret
cmpsb
lahf
xor
adc
out
sub
testl
kmovd
push
les
jo
fs
and
or
sub
and
out
sub
mov
in
mov
mov
int
pop
mov
cmp
push
and
mov
mov
push
or
jae
adc
xchg
xchg
mov
xor
add
imul
cltd
and
xor
nop
push
movsb
add
sbb
nop
cltd
lods
and
mov
adc
dec
dec
stc
or
pop
inc
popf
push
mov
mov
lods
adc
or
or
sub
add
add
lods
mov
adc
xor
and
jecxz
mov
pop
fcmovnbe
das
inc
mov
and
add
faddl
cmp
mov
xor
inc
js
pop
pop
pop
pop
add
push
sub
outsl
push
shr
jmp
mov
scas
sub
push
loope
lods
sbb
sub
repnz
or
jl
or
or
aaa
mov
mov
push
incb
je
push
adc
nop
sahf
adc
mov
nop
outsb
pop
roll
js
mov
movsl
out
imul
or
or
mov
sbb
ss
mov
sub
sbb
xchg
add
mov
xor
clc
ds
or
add
push
lret
subb
push
jbe
sub
incl
sbbl
loopne
jno
add
rolb
add
mov
inc
jno
jne
roll
inc
shrb
push
lret
dec
lods
test
or
cmpsb
jo
mov
addr16
dec
dec
push
pop
and
or
cmp
imull
fnsave
adc
je
inc
call
sbb
ror
in
or
lahf
cmp
or
sbb
push
subl
mov
dec
ljmp
or
mov
repz
aas
sbb
adc
adc
dec
inc
in
adc
cmc
mull
popa
cmp
xor
inc
pusha
jmp
popa
or
or
fs
cmp
jge
mov
xchg
push
cld
mov
test
mov
aas
inc
add
pop
adc
js
sbb
dec
mov
push
jne
dec
and
test
push
push
cmp
jmp
lods
or
push
inc
jbe
lods
and
or
out
call
push
test
push
imul
adc
dec
cmp
mov
ret
nop
and
or
call
add
jecxz
nop
adc
push
adc
inc
inc
lods
jmp
lods
or
outsb
mov
add
jno
idivb
ret
sbb
push
or
and
ret
shll
adc
fistps
cmp
je
mov
fs
mov
mov
mov
lods
xor
lock
jge
sbb
dec
enter
rorb
out
mov
ja
xor
popa
aad
push
js
push
ja
adc
pop
fbld
sbb
ds
sbb
push
sbb
divl
inc
pushf
andb
or
push
les
jmp
inc
movl
js
xor
addb
pop
sbb
scas
pop
cmp
andl
sub
int3
nop
push
psubusb
ret
imul
push
dec
addr16
dec
mov
adc
jl
jmp
cmp
lahf
ss
push
pushl
test
mov
nop
mov
jecxz
cmp
repz
fsubrl
fidivl
push
bound
mov
mov
xchg
adc
lock
cmovnp
notb
jne
pop
push
imul
xor
cmp
mov
xchg
inc
std
ja
push
lcall
and
pop
shll
test
push
pop
cmp
inc
add
inc
adc
ret
or
add
sarb
push
mov
pushf
and
inc
cmp
addl
dec
adcb
mov
push
push
lods
test
add
dec
push
lcall
jmp
mov
inc
mov
adc
mov
mov
aam
inc
inc
iret
es
je
test
in
inc
mov
dec
adc
flds
dec
and
adc
mov
pop
cmpsl
inc
andl
or
mov
pusha
mov
pop
inc
cmp
adc
lds
aaa
cmpsb
push
mov
push
pop
cmp
mov
jnp
aaa
cmp
add
outsl
loopne
pusha
stos
ret
loop
pusha
outsl
jge
inc
sbb
adc
push
add
insl
call
rsm
clc
lock
cmc
cmp
rolb
jb
ljmp
fwait
dec
xchg
fwait
cltd
insb
sbb
lds
scas
lcall
inc
add
addl
popl
lods
cld
adc
pushf
push
or
adc
add
pop
iret
dec
inc
xor
or
push
jl
lock
cld
and
pop
mov
bound
and
or
inc
aas
out
xchg
sub
jno
mov
xchg
insl
pop
pusha
xchg
dec
add
movsb
pusha
pop
add
and
mov
test
mov
lahf
or
leave
mov
sbb
add
sbb
insb
and
or
xchg
xor
scas
push
and
mov
push
sar
jne
push
or
adc
fildl
popa
cmp
inc
dec
sub
inc
cmpsl
stos
es
add
inc
cmpsl
xchg
lock
xlat
sbb
outsb
or
repnz
inc
dec
jne
inc
or
add
pop
test
cs
movsl
dec
add
lcall
dec
mov
shll
xor
jl
xchg
sub
add
mov
add
mov
popa
popa
daa
jne
add
and
int3
pushf
add
add
subb
icebp
rcr
lcall
fdivrs
dec
or
jb
mov
jmp
mov
or
dec
fwait
fs
hlt
jmp
hlt
mov
cs
cmp
bound
shl
repnz
sbb
mov
faddl
add
int
add
mov
pusha
call
inc
jp
xchg
adc
xor
rclb
cwtl
pop
adc
push
adc
mov
int3
gs
mov
mov
scas
xchg
jo
out
mov
lea
mov
xor
ds
sub
mov
pop
and
xchg
mov
add
pop
in
fwait
or
cmp
xor
mov
lret
dec
push
cmc
test
sbb
cmp
fmuls
push
sbb
push
in
mov
or
mov
xor
mov
test
aas
dec
push
xor
wbinvd
test
xchg
mov
aad
inc
pop
xlat
call
fldcw
repz
xor
cmpsl
cmp
cmp
push
mov
inc
inc
and
rclb
dec
cs
xlat
mov
adc
and
inc
sbb
sti
ss
hlt
dec
les
jb
mov
sub
sub
cli
xsave
dec
in
lret
mov
inc
xchg
in
fisttpll
call
pop
xchg
lea
mov
cmp
hlt
or
addr16
or
lret
lcall
les
addb
inc
rolb
hlt
pop
mov
or
xor
pop
shrb
ds
jns
pop
sbb
add
inc
or
xor
dec
mov
mov
lock
add
adc
sub
sahf
and
push
xchg
dec
in
add
dec
jne
lret
inc
dec
cmp
mov
fs
adc
testb
out
xchg
mov
jl
mov
enter
inc
sub
adc
adc
pop
fstl
sub
in
mov
pop
jno
pop
and
inc
mov
push
cmp
iret
sbb
sbb
push
sbb
mov
mov
sub
push
or
or
xchg
pop
movsb
jg
cmp
clc
in
fistps
dec
sbb
dec
insb
jmp
adc
dec
fmuls
sub
push
sbb
sbb
sbb
cmp
cmpsl
mov
subl
mov
push
mov
push
inc
jno
pop
adc
into
cmp
mov
mov
jns
jnp
push
push
dec
call
or
into
dec
mov
in
jmp
outsl
imul
imul
inc
xor
inc
push
call
ret
inc
pop
adcb
and
sub
das
adc
lods
call
ret
shll
decl
jg
xchg
inc
lods
add
rorl
and
nop
sub
dec
and
fidivl
inc
push
jp
scas
push
lahf
xor
loop
push
insb
sbb
and
and
adcl
es
add
imul
adc
xor
mov
push
test
and
pop
push
inc
or
pop
adc
push
and
repnz
icebp
pushl
enter
add
fwait
jecxz
in
shll
add
push
adc
and
lods
sub
jo
xor
mov
xchg
dec
dec
xchg
jno
out
dec
add
pop
xor
pop
loope
bound
mov
inc
pop
push
inc
mov
or
bound
pop
or
add
call
xchg
pop
push
sbb
jecxz
outsb
jnp
pop
pop
or
cmp
jmp
or
fistpll
mov
shrb
dec
sbb
jbe
movsb
and
leave
push
incl
dec
sti
add
pop
dec
cmp
sub
jmp
inc
push
sbb
push
das
jno
push
shll
mov
and
xchg
cmp
pop
cmp
push
inc
in
adc
rclb
pop
pop
sub
adc
mov
add
inc
arpl
adc
jae
orb
cltd
jl
or
sub
dec
outsl
pop
dec
bound
and
add
pop
movsl
icebp
stos
add
je
mov
das
dec
or
or
add
ret
sub
ret
call
jo,pn
sub
lock
and
call
mov
sub
in
add
push
sbb
adc
pop
nop
pop
pop
in
jmp
add
fwait
aaa
xchg
gs
xor
sarl
push
addb
repnz
jl
inc
inc
jne
insb
jbe
sbb
ret
adc
fdivs
js
ja
xor
push
add
test
movb
cmp
dec
and
pop
cmp
dec
and
pop
ss
inc
add
pop
je
dec
adc
or
sub
ds
aad
pop
cltd
ret
pop
jmp
mov
daa
lods
out
add
data16
add
leave
dec
push
mov
pop
xchg
mov
into
addr16
jo
movsl
jno
ss
shll
decl
loopne
add
bound
cmp
dec
sbb
out
ss
mov
inc
add
shlb
insl
inc
add
dec
cmp
inc
jae
and
pop
adc
arpl
mov
adc
popa
popa
cmp
push
cmp
xchg
jge
xchg
push
push
pop
jge
out
inc
adc
pop
aad
loopne
sub
dec
pop
cmp
stc
mov
mov
xor
in
or
pop
imul
adc
jbe
je
xchg
nop
mov
mov
and
rcrl
and
cmp
cs
rcl
mov
pusha
mov
outsl
and
push
push
push
repnz
push
es
inc
cmp
dec
sbb
cwtl
mov
sub
arpl
insb
adc
faddl
int
push
cmp
xchg
add
inc
dec
xchg
icebp
add
pop
cmpxchg
jae
xor
jp
or
mov
add
dec
pop
icebp
sub
xlat
sbb
pusha
or
adc
xor
outsl
sub
add
and
add
dec
loope
add
rcrl
add
out
jne
jae
fsubrs
sub
sarl
push
sbb
push
movsb
adc
pop
scas
mov
sbb
jb
pusha
or
inc
jo
xchg
adc
add
adc
dec
ret
adc
adc
in
pushf
add
xor
gs
pop
imul
cs
rclb
cs
js
or
je
pop
movsb
jo
cmp
xchg
imul
mov
or
mov
adc
dec
xchg
out
mov
and
xchg
test
pop
test
jns
cmp
adc
icebp
mov
out
movsl
dec
pop
enter
cwtl
sbb
jmp
popa
and
mov
cmp
sbb
fldcw
xchg
push
outsb
mov
outsb
mov
push
or
dec
js
sub
push
or
mov
hlt
outsb
jp
add
insl
xchg
xchg
ret
jmp
xor
mov
pusha
test
das
adc
mov
jo
ret
sub
jp
xor
mov
lods
or
mov
push
jo
mov
repz
push
mov
xor
or
mov
inc
push
dec
inc
lret
add
or
nop
jl
mov
jl
mov
adc
xchg
add
sub
cs
pop
popf
push
jge
push
and
or
and
call
inc
int
mov
sbb
js
mov
sub
loopne
jle
loopne
lea
mov
inc
pop
andb
jns,pn
mov
in
dec
mov
insl
stos
push
cmp
addl
imul
add
jge
sahf
js
call
es
xor
add
ret
xorl
sbb
sub
dec
mov
or
jns
ja
push
xor
sahf
out
sahf
adcb
out
enter
fsubr
jns
out
loopne
call
push
and
cmpsl
sub
in
movl
pop
ja
data16
mov
test
addb
pop
outsb
xor
add
xchg
mov
adc
or
xor
xchg
mov
sbb
inc
and
sbbb
mov
cmp
icebp
and
xor
arpl
cmc
sbb
and
sub
inc
repnz
ss
mov
lods
fldenv
jmp
dec
adc
push
mov
cmp
jns
lea
ja
add
or
add
push
sub
cmp
adc
sbb
sbb
sub
adcb
std
dec
repz
xor
int3
or
jle
out
xchg
and
xchg
rcrb
dec
popa
sbb
enter
xor
repnz
aas
add
pop
xor
mov
pop
inc
test
pop
xor
pop
orl
add
stos
xchg
cmpsb
push
aad
aas
sub
cmpsl
shrb
cmp
aas
orl
xor
jmp
inc
xor
inc
lods
mov
aaa
sub
mov
popa
jmp
dec
and
lods
loope
popf
mov
mov
sub
dec
js
mov
mov
inc
add
xlat
loope
add
push
pop
inc
mov
rorl
out
lcall
adc
mov
sahf
jne
mov
nop
wrmsr
sarb
loop
mov
sbb
push
cmp
roll
add
fcoms
int
aas
jne
dec
jo
leave
cmc
loopne
push
inc
mov
cmpsb
xchg
jp
fwait
xor
div
or
or
lahf
push
xlat
aam
sarl
pop
popa
cmp
mov
mov
add
adc
inc
sub
add
xchg
test
add
subl
mov
xorb
lock
adc
bound
mov
and
push
and
sbb
xchg
fs
nop
inc
push
call
stos
test
sbb
cmp
ljmp
or
fs
ficoms
xor
mov
cmp
jmp
push
leave
daa
inc
ret
fs
testb
xchg
cs
nop
popa
aas
push
push
push
imul
js
sub
add
xchg
subb
out
dec
xor
cmp
inc
sub
or
fisttpll
push
and
aas
in
or
add
or
add
adc
or
add
add
jmp
inc
sbb
movsb
pushf
lea
inc
push
xchg
rcl
cmpsb
lcall
in
bound
pop
jno
push
adc
daa
and
pop
inc
out
pop
and
xchg
push
ss
dec
bound
movsl
and
loop
shll
dec
xchg
adcl
add
shrl
adc
sbb
adc
rolb
or
push
cwtl
inc
inc
pop
cmp
call
xchg
out
addb
add
fs
pusha
push
push
insb
adc
je
js
int
int
push
push
jo
outsb
cmp
dec
xchg
insb
push
adcl
mov
cmp
cmp
sbb
lahf
sub
add
rcl
push
daa
jne
pop
xchg
xor
xor
mov
push
dec
dec
or
dec
cmp
cmp
adc
nop
addr16
xchg
xchg
dec
xor
jno
adc
fildl
es
xchg
lods
xchg
les
sub
mov
push
sbb
add
push
leave
dec
cmpsb
pop
push
out
outsb
lahf
mov
enter
jno
xor
pop
sub
ja
inc
or
js
out
inc
push
add
jge
cmp
add
add
nop
pop
dec
sbb
and
mov
jnp
cwtl
pop
leave
push
fiaddl
or
jle
out
adc
test
xorl
inc
pop
clc
dec
add
orl
je
inc
inc
pop
or
adc
inc
add
pushf
divl
ret
rol
shll
sbb
imul
icebp
rol
add
xchg
leave
fcomps
fisttpl
inc
push
arpl
and
or
mov
dec
sub
xchg
scas
jb
out
dec
jno
sub
push
mov
mov
loopne
cwtl
je
push
mov
dec
lods
sub
pop
lods
mov
inc
xor
subb
shll
pextrw
and
cltd
mov
dec
out
inc
mov
pusha
ss
xchg
das
sub
xor
xchg
sbb
xchg
je
cmpsl
jl
and
and
jl
cmc
and
outsl
addl
and
jns
mov
and
inc
inc
xor
or
mov
jg
test
cmpsb
test
addl
adc
je
push
jp
adc
rolb
add
mov
hlt
andb
xchg
sub
adc
xlat
dec
cmp
jp
or
xchg
add
outsl
pop
adc
pop
adc
gs
scas
xchg
test
stos
int3
cltd
mov
adc
inc
dec
daa
dec
orb
aam
cmpb
or
test
lea
fbstp
mov
or
sbb
mov
sbb
sbb
jne
pop
inc
in
xchg
push
imul
or
sbb
flds
sub
daa
mov
jle
fwait
js
nop
rcll
pop
das
or
mov
in
imul
pop
out
outsb
add
xlat
mov
cmpsl
sbb
mov
xchg
sbb
and
add
insl
xor
nop
mov
and
inc
sbb
or
jb
push
hlt
or
bound
add
mov
add
xlat
dec
cld
xchg
or
xor
jge
and
add
add
xor
cmp
add
addr16
ss
adc
notb
adc
repz
or
rorl
mov
pop
xchg
lea
aaa
test
pop
popa
cmpsl
cld
stc
mov
loopne
or
pop
clc
adcb
fmuls
jb
inc
clc
jb
sub
pop
dec
shlb
loop
push
jno
push
jg
test
xlat
mov
and
sub
push
mov
sub
iret
daa
dec
int3
sbb
mov
sbb
push
outsl
dec
sbb
mov
leave
inc
adc
lods
fs
lock
adcl
xchg
mov
sub
rol
cvttps2pi
push
sti
mov
adcl
fnsave
sbb
pop
push
std
cmp
mov
ljmpw
fdivl
pop
imul
sub
js
push
xor
daa
mov
mov
jno
pop
mov
push
test
and
and
nop
pushf
mov
ret
fcomp
cli
dec
jmp
mov
addl
lahf
pop
inc
arpl
dec
jae
aad
adcb
inc
cmpsl
mov
dec
sbb
sbb
or
arpl
add
xchg
or
add
leave
cmp
jo
ja
inc
inc
leave
incl
hlt
and
jp
aaa
adcb
mov
inc
sbb
sbb
sbb
ljmp
cmp
roll
xchg
inc
adc
add
push
inc
push
dec
push
pop
enter
adc
pop
nop
dec
xchg
enter
sub
and
cmpsl
xchg
xor
sbb
cmp
or
inc
ficoms
mov
inc
nop
cmpsl
rorl
adc
add
xchg
fadd
push
add
add
mov
sbb
mov
xchg
mov
push
je
sbb
sbb
test
sbb
ret
mov
xlat
sub
xchg
pop
adc
sti
mov
cs
lcall
movzbl
imul
dec
inc
imul
fs
popa
js
sbb
loopne
mov
or
shrl
mov
xchg
and
push
lds
je
add
fists
pop
adc
dec
mov
stos
nop
push
js
scas
inc
push
imul
das
hlt
push
inc
or
data16
mov
fxtract
or
inc
cmp
test
jmp
inc
pop
orb
xchg
sahf
or
pop
mov
pop
test
xor
stos
ret
pop
sbb
js
xchg
xchg
mov
vandnpd
popf
movsb
mov
mov
imul
adc
rcrb
outsb
gs
mov
test
mov
cmpsl
adcl
out
fs
pop
push
pop
ja
clc
inc
cmp
in
data16
incl
xor
fdivp
mov
push
push
clc
sbb
test
aam
sbbl
adc
sub
sub
mov
mov
push
addl
test
popf
adc
xor
cwtl
sbbb
or
stos
dec
outsb
scas
adcl
test
inc
xchg
pop
sub
jmp
adc
inc
movsb
xor
incl
or
and
test
sbb
cmp
push
adc
ja
jmp
test
mov
cmp
int3
adc
sahf
rcrb
xchg
mov
or
and
inc
bound
test
and
sbb
or
stc
adc
pushf
lds
and
es
pusha
lahf
loope
adc
mov
fs
pop
iret
add
ret
lds
mov
or
mov
mov
pushf
movsl
sbb
out
mov
das
mov
xor
or
push
jnp
add
out
xchg
in
int
mov
pop
push
push
or
sbb
dec
dec
mov
inc
pop
pop
incl
adc
stc
jo
or
clc
mov
adc
hlt
or
rolb
adc
pop
adc
sbb
adc
push
imul
dec
dec
sahf
sbb
sbb
lds
and
cmp
sub
or
lods
xchg
pusha
ja
adc
push
adc
out
and
sahf
push
or
add
aaa
mov
pop
dec
pusha
roll
mov
jo
push
arpl
or
adc
cmp
retw
adc
mov
cmp
push
jo
loope
mov
and
lea
xchg
mov
mov
cmp
adc
dec
sti
in
mov
nop
mov
pusha
jae
ret
cltd
mov
mov
pop
push
cmp
fs
mov
ret
push
jb
dec
or
dec
cmp
iret
sbb
lods
nop
pop
ficomps
lock
insl
test
push
and
fld
xor
mov
out
cmpsl
mov
sbb
pop
push
je
clc
xchg
movl
outsl
xor
jae
cmp
adc
adc
loop
imul
mov
daa
push
push
and
adc
scas
push
leave
je
xchg
pop
in
pop
add
mov
xorb
lea
or
or
orb
or
sbb
pop
or
int3
mov
or
lds
lcall
inc
aas
jns
mov
adc
and
xor
add
out
inc
pop
dec
adc
jg
clc
rorl
test
add
and
or
movsb
and
arpl
nop
xor
loop
stos
es
test
pop
imul
dec
and
je
push
test
daa
mov
or
es
sub
mov
xchg
imul
jecxz
xchg
daa
sti
jne
and
les
cmp
mov
cmpsb
mov
inc
mov
add
sbb
lods
cltd
cmpsb
loopne
dec
pop
int3
xor
insb
pop
loope
mov
push
cwtl
dec
subb
test
pop
sbb
pop
mov
lods
push
jo
dec
inc
sbb
inc
cmpsl
cmp
push
mov
insl
push
in
or
jbe
mov
xor
jae
pop
je
ss
fiadds
iret
xor
add
test
dec
ret
cs
cmp
cmpsl
mull
leave
pop
les
or
pop
add
inc
adc
adc
sub
xchg
sub
xchg
test
pop
dec
je
inc
rcrb
xchg
sbb
xchg
cmpsl
pop
pop
mov
xchg
jb
dec
mov
add
notl
andl
shrl
xlat
adc
and
cs
sbb
and
add
or
fisubrl
lods
js
mov
jae
push
xchg
ret
pusha
inc
mov
cmp
pop
fistl
and
push
cltd
jmp
push
mov
cwtl
shr
ret
mov
fcmovnu
jno
in
cmp
adc
cmp
pop
or
stos
and
sbb
add
add
shll
icebp
pop
mov
xchg
inc
inc
mov
or
in
int
adc
or
mov
cwtl
mov
not
dec
and
push
pushf
push
dec
push
aaa
lahf
push
adc
mov
mov
mov
adc
adc
add
sbb
and
mov
pop
imul
mov
push
xor
push
cmp
add
push
dec
cmpsl
xor
dec
shlb
push
imul
ljmp
sbb
sarl
outsl
push
idivl
push
push
pop
jo
push
je
negl
je
repnz
xor
mov
inc
and
push
xchg
test
push
faddl
push
leave
add
mov
call
push
aam
push
adc
int
rep
in
pushf
push
es
sbb
je
push
mov
test
sbb
mov
iret
repz
les
ds
es
movsb
outsl
dec
xchg
and
xor
and
sub
push
sub
pusha
lcall
add
cmp
aas
dec
adc
mov
xchg
jae
inc
and
setle
fcoms
fwait
xchg
and
loopne
mov
xor
loop
in
std
mov
pop
xor
mov
mov
bound
or
fdivrl
aam
sarl
sti
mov
sbb
test
mov
clc
rcrl
dec
int
cmp
xchg
jl
and
xchg
pop
and
mov
push
test
arpl
xchg
xchg
cld
or
xor
add
inc
and
jmp
mov
pop
cmp
add
or
and
inc
test
in
inc
push
loop
push
arpl
cmp
fucom
hlt
adc
sbb
loope
mov
mov
adc
fwait
cmp
mov
fwait
mov
xchg
repz
and
lock
xor
es
clc
or
faddl
mov
test
jecxz
push
add
outsl
insb
mov
adc
repz
xlat
adc
outsb
sub
gs
jb
cmp
xorl
or
ret
cmp
mov
mov
xchg
sub
pop
repnz
dec
sub
inc
adc
or
inc
add
inc
jl
andb
jge
lds
sub
inc
ficoms
pop
leave
and
push
add
mov
pop
fwait
xor
jmp
mov
jae
pop
add
push
test
enter
ds
xchg
jle
mov
dec
rol
gs
xor
sub
ja
inc
and
xchg
mov
cmp
push
jge
pop
in
popf
adc
mov
popa
mov
iret
insl
addr16
inc
rcrl
movsl
xchg
cmp
int3
adc
dec
ja
add
add
ret
mov
xor
jne
or
mov
cmp
sbb
lds
andb
mov
push
dec
adc
das
flds
dec
std
xchg
mov
ror
mov
pcmpgtw
das
mov
movsb
das
movsb
jmp
and
jo
dec
outsb
jg
push
mov
sbb
cmovae
pop
cmpsb
das
add
push
mov
paddb
xor
psubd
push
test
mov
mov
adc
pop
add
add
add
mov
out
add
mov
shl
and
sub
add
sbb
bound
or
pop
push
roll
add
je
mov
sbb
push
mov
sub
jle
pop
sbb
mov
mov
mov
add
scas
cld
fists
and
ljmp
ljmp
jmp
sbb
out
push
or
ds
ficompl
push
iret
sarl
adc
push
mov
iret
mov
inc
push
aam
or
out
and
push
jl
repz
idivb
sbbb
pop
push
mov
fwait
int
js
fcomps
jo
push
pop
out
mov
mov
push
clc
repz
jge
sbb
ds
pushf
mov
sahf
data16
and
jl
pop
mov
sarl
sub
rolb
jo
jno
mov
mov
or
notb
out
sbb
push
sub
inc
sub
fs
jb
push
mov
sbb
das
pop
push
nop
clc
pop
in
cmpsb
mov
dec
push
sub
sbb
mov
push
loopne
pop
dec
rorb
imul
imul
jno
filds
inc
jne
insl
jns
jne
adc
adc
mov
sub
inc
in
fildl
rclb
stc
or
sbb
mov
aas
jl
sbb
push
pop
push
sbb
sbbb
lcall
or
add
or
cmpb
les
rcll
xchg
cmp
inc
or
add
jecxz
inc
lea
outsb
enter
jecxz
shlb
inc
popa
rol
mov
pushf
lcall
je
sbb
imul
clc
mov
adc
add
adc
xchg
xchg
jns
leave
sbb
inc
mov
adc
or
sarb
mov
xorl
stos
rorb
inc
jae
mov
xor
or
pop
xchg
je
int
xor
and
imul
xlat
inc
outsl
mov
or
push
fwait
ret
lret
inc
pop
pop
pop
inc
or
dec
subb
mov
xor
mov
fcmovne
sub
or
cmp
inc
jmp
test
loopne
add
leave
adc
dec
movsl
add
fsubs
js
pop
cmpsb
je
pop
mov
test
sbbl
je
add
xor
jg
adc
mov
mov
popa
nop
cmpsb
adcl
pushf
js
mov
lock
pop
mov
sub
sbb
mov
icebp
sbb
lods
xchg
push
sub
sti
enter
sbb
inc
insl
mov
enter
shl
sbb
aaa
pop
andb
out
stos
das
enter
push
jnp
lds
mov
dec
push
pop
pop
dec
pop
into
movsb
add
push
pop
xchg
je
xor
sbb
mov
lock
loopne
and
dec
movsl
lds
lock
out
ret
jno
arpl
int3
cmp
and
lds
adc
int
push
or
data16
dec
mov
or
dec
xchg
fwait
add
dec
popa
push
daa
fsts
data16
or
je
test
dec
jns
in
aam
inc
add
pop
sbb
jne
popf
incl
roll
aaa
mov
sub
daa
mov
xchg
xchg
xchg
call
jbe
xchg
int3
mov
mov
or
jp
push
push
sbb
aas
pop
mov
dec
mov
or
push
mov
jmp
dec
aam
lret
sbb
sub
incl
push
lea
jne
jmp
incl
pop
or
clc
fdivrs
push
movsl
push
cmp
xor
pusha
xor
pusha
push
pop
cmp
lods
mov
outsl
fdivrl
lods
cmpxchg
test
lods
lods
mov
punpcklbw
leave
pushf
pushf
mov
add
inc
inc
xchg
mov
sbb
xchg
dec
jb
jns
pop
jl
push
mov
popa
cld
jle
arpl
mov
mov
mov
test
sbb
in
xchg
cmp
inc
into
scas
pop
inc
and
outsb
loope
add
mov
mov
int
add
mov
adcl
adc
jp
mov
push
mov
dec
fsubs
sti
psubq
fsubrl
sbb
push
test
dec
dec
xchg
aam
pop
fs
sbb
push
and
icebp
sbb
xchg
pusha
mov
hlt
xor
pop
mov
in
adc
lds
add
mov
xchg
insb
inc
add
jbe
dec
push
dec
aas
cwtl
mov
add
icebp
inc
adcb
push
sbb
add
and
je
add
dec
adc
sbb
or
cmp
inc
loope
mov
or
stos
imul
add
or
and
and
inc
mov
adc
rorl
mov
add
repz
sbb
xor
or
pusha
push
addb
adc
mov
mov
sub
xor
dec
sub
sub
xor
fisubs
mov
das
imul
or
adc
and
xor
out
cmpl
or
xor
jecxz
aas
jge
jno
sbbl
xchg
popf
adc
aam
fsubr
adc
cmpb
repnz
add
xor
sarl
out
je
add
push
roll
test
push
adcl
push
addl
mov
adc
xchg
dec
lcall
cmp
jnp
mov
adc
repz
add
or
fiadds
sbb
dec
push
cmp
enter
aaa
ds
popa
xor
mov
imul
iret
faddl
xchg
pop
fisubl
add
or
inc
mov
dec
or
test
inc
add
inc
xchg
pop
xchg
fmull
and
popa
dec
xlat
or
les
jnp
push
bnd
das
orl
mov
and
sub
fiaddl
shlb
jae
add
adc
pop
dec
xor
push
add
sub
xchg
sbb
aaa
mov
incl
stc
add
and
cmp
std
dec
adc
ficompl
dec
and
adc
insl
mov
addb
mov
dec
or
adc
stos
and
push
fs
pop
mov
adc
xchg
or
adc
dec
call
mov
sti
dec
xor
inc
push
push
test
cmp
add
push
inc
loope
add
cmpb
rcll
pop
dec
aaa
dec
add
mov
push
jns
shrl
dec
add
push
rclb
xlat
loope
push
adc
add
adc
push
fildl
or
sbb
jl
pusha
mov
call
jns
push
adc
pop
mov
dec
xchg
jmp
cmp
push
xchg
pop
inc
push
or
sbbl
or
pop
push
adc
add
push
and
pop
popa
adc
pop
and
push
popa
popa
bound
sbb
out
or
dec
mov
or
test
add
mov
jbe
dec
dec
data16
add
mov
push
addr16
push
cmp
out
mov
push
inc
pop
xchg
jb
fnstsw
xchg
imul
test
addr16
add
jg
add
imul
rolb
insl
add
inc
hlt
cmp
mov
push
add
icebp
xchg
and
mov
or
add
xchg
xchg
lret
cltd
scas
mov
xchg
xchg
xchg
daa
push
jae
xchg
lret
xchg
xchg
mov
xchg
xchg
xchg
xchg
push
jb
mov
fisttps
mov
pusha
xchg
xchg
xchg
xchg
subb
lret
push
mov
fs
xchg
xchg
xchg
stos
lret
mov
xchg
xchg
xchg
xor
jg
xchg
lret
xchg
xchg
ret
in
mov
xchg
xchg
xchg
xchg
push
jg
lret
xchg
xchg
lret
xchg
out
adc
xchg
xchg
xchg
jle
jmp
xchg
xchg
lret
or
xchg
xchg
xchg
fwait
shl
mov
xchg
xchg
xchg
cmp
lret
xchg
xchg
into
cld
and
xchg
xchg
insl
xchg
mov
lret
add
xchg
xchg
xchg
xchg
mov
xchg
lret
and
lret
xchg
xchg
mov
xchg
xchg
xchg
xchg
push
js
int3
xchg
xchg
lret
xchg
out
adc
xchg
jge
push
jne
ffree
xor
addr16
sub
dec
push
sub
push
push
jae
add
mov
push
push
fmuls
jb
popa
incl
out
push
adc
mov
div
xor
mov
in
aaa
mov
jns
sub
ja
hlt
pop
or
test
rorl
sbb
mov
mov
les
fisubl
push
lock
insb
adc
loope
inc
inc
ss
and
pop
xchg
sbb
xorb
or
lahf
sub
pop
cltd
and
adc
cmpsl
fidivs
test
mov
stc
int
out
add
dec
nop
mov
sbb
sub
and
add
aaa
add
fmuls
or
push
daa
mov
jg
mov
fists
jge
pusha
mov
jno
loopne
pop
pop
sbb
mov
enter
add
pop
and
dec
push
mov
nop
loope
shlb
movsl
loopne
adc
imul
or
sbb
repnz
inc
clc
fsubrs
mov
imul
syscall
mov
pop
mov
and
dec
pop
add
pushf
add
mov
add
mov
addl
pop
xchg
js
or
add
decl
les
xchg
mov
cmp
add
dec
pop
test
aam
cmpsl
test
adc
push
or
push
or
cmpsb
xorb
mov
loopne
push
and
mov
mov
inc
xchg
js
mov
subb
leave
das
mov
mov
jg
orl
jle
call
imul
sbb
fldt
xor
jmp
stc
outsb
ret
push
cs
mov
aad
je
adc
mov
pop
inc
xorl
and
popa
rorl
pop
xor
cmpsl
and
das
or
xor
jb
in
or
xchg
pop
xchg
sub
add
pop
mov
add
pop
mov
push
inc
arpl
dec
test
jo
outsb
mov
cmp
sbb
inc
inc
das
in
dec
cmp
jae
mov
add
lods
cmpl
sub
add
adcb
leave
sub
in
das
mov
mov
test
add
pop
leave
and
cmp
mulb
pop
adc
or
adc
jb
test
pop
in
pop
rol
mov
pop
loope
mov
leave
imul
pushf
fsubrl
jg
pop
lret
pop
mov
dec
inc
sahf
or
arpl
hlt
pop
adc
pop
and
inc
adc
mov
insl
fimull
and
mov
outsb
cmpb
sub
push
push
ss
jmp
aad
fimull
sub
mov
mov
or
mov
mov
in
add
fs
adc
shrb
mov
mov
adc
lods
mov
ret
jp
clc
inc
mov
push
adc
cmpsb
cld
mov
rorb
xor
pop
adc
inc
in
add
pop
sub
mov
and
test
int
enter
jne
mov
in
into
ss
and
enter
negb
enter
mov
loop
shrb
dec
enter
jno
mov
enter
cli
pop
rorl
in
enter
fisttpl
shlb
pop
sub
mov
push
sub
pop
adc
inc
add
pop
leave
mov
rolb
setae
movsb
add
das
dec
sbb
dec
nop
jb,pn
push
mov
mov
mov
inc
loope
and
lds
leave
ret
adcl
addl
or
cmp
lods
xchg
dec
outsl
xchg
inc
sbb
add
push
nop
dec
or
inc
jnp
sbbl
popf
push
jo
jb
dec
or
mov
jno
adc
pusha
mov
dec
push
addb
xchg
lahf
test
enter
in
or
enter
cmp
xchg
je
loope
aaa
mov
leave
shrl
adc
mov
test
dec
mov
sub
nop
and
insl
lods
test
add
push
jecxz
push
leave
loop
mov
nop
push
push
or
andl
aas
icebp
inc
andb
xchg
bound
push
sbb
test
mov
pop
dec
rcrb
inc
pusha
xor
xchg
sub
fidivl
xchg
fwait
mov
lds
and
dec
scas
or
jmp
cwtl
cmpsl
or
loop
or
cmp
rorb
push
aaa
adc
cmp
jo
inc
inc
xchg
or
ret
lea
or
jo
push
and
mov
xor
loopne
pop
adc
jecxz
add
push
popa
mov
ljmp
lret
pop
add
insb
cmp
adc
movsb
inc
push
xchg
divb
and
stos
lods
test
lods
mov
insl
and
add
rol
sbb
add
mov
fadds
inc
mov
dec
inc
inc
or
push
pushf
test
cmp
add
das
or
push
inc
fwait
imul
das
lahf
cmp
inc
movsl
lods
xchg
hlt
sahf
aam
dec
jge
mov
outsb
das
xchg
sbb
mov
imul
sub
push
mov
adc
sbb
add
sbb
mov
je
inc
or
or
xor
push
sbb
adc
xchg
fwait
push
push
cld
daa
or
sub
adc
sub
mov
pop
mov
sub
lea
push
xchg
scas
xchg
xchg
xor
dec
add
lds
pop
adc
addr16
mov
or
popa
cltd
or
xchg
mov
orl
add
cmp
clc
outsb
adc
push
aam
enter
imul
mov
in
add
xlat
xor
and
es
das
mov
xor
xchg
push
pop
lahf
xchg
movsb
xchg
jo
or
jge
fcom
cmp
andps
cli
int3
push
cld
fadds
xchg
mov
movsl
popa
sbb
adc
imulb
pop
enter
xor
or
mov
inc
xchg
imul
imul
pop
int3
sub
cmp
movsb
adc
rolb
and
sub
movsb
add
movsl
loopne
and
add
and
xchg
push
test
js
scas
daa
pop
arpl
mov
mov
cmp
arpl
pop
cmp
sub
mov
dec
xchg
test
cmp
fisubrl
xchg
pop
pop
ficoms
mov
ret
outsb
xchg
xor
sub
lcall
adc
leave
xor
or
add
test
enter
inc
aas
mov
pop
fmuls
adc
cmp
or
sbb
xor
nop
push
mov
jp
pop
sub
xchg
das
lds
mov
pusha
cmpsb
push
inc
ficoms
pop
int
pushf
or
xchg
mov
movsb
add
push
es
movsb
popa
adc
xchg
mov
mov
addl
jae
repz
dec
dec
test
or
loopne
pop
bound
xlat
movsb
fisubrs
pop
mov
nop
adc
sbb
insl
mov
ficoml
mov
adc
lds
mov
mov
xchg
pop
and
add
adc
sub
add
mov
fsubs
pop
sub
inc
cmp
adcb
stos
mov
pop
popa
mov
adc
shlb
and
scas
roll
cmp
jmp
cmp
jo
and
gs
rorl
inc
push
jbe
jnp
sbb
ja
xor
sub
and
mov
cmp
inc
imul
sub
gs
es
adc
sbb
call
mov
rcrl
inc
inc
adc
popf
cs
lods
sbb
test
sub
jbe
inc
pop
and
cmpsb
aas
clc
clc
mov
ffree
ret
xchg
mov
jge
or
inc
and
xchg
xor
xchg
into
stos
and
sub
testb
xor
shlb
add
inc
dec
dec
es
sub
pop
dec
sub
mov
add
jne
fisubl
pusha
fisttps
jo
mov
push
cltd
and
add
js
dec
pop
js
popa
mov
lods
leave
movsl
insl
sbb
lock
xor
xchg
dec
pop
push
xchg
cmp
fbstp
ret
push
pushf
int3
sbb
arpl
emms
mov
in
loope
mov
dec
dec
dec
mov
mov
daa
daa
mov
es
inc
sahf
pushf
fmull
cltd
rcll
dec
dec
dec
dec
dec
test
daa
daa
and
pop
nop
rcll
out
enter
mov
leave
leave
dec
cmpb
sub
popa
or
dec
adc
xchg
loope
add
lcall
sub
test
loop
jge
lds
xchg
sub
or
lods
xorb
lcall
mov
addb
leave
jge
fs
inc
mov
push
outsl
jge
nop
sbb
jns
inc
push
addl
dec
push
sbb
jae
fiadds
mov
mov
fs
push
inc
pushf
aam
push
jmp
enter
andb
rcll
rorl
fcmovnb
cmpl
mov
in
push
insb
add
imul
push
and
aad
inc
sub
cmp
cmpsb
or
dec
mov
inc
stos
leave
inc
cmpsb
jbe
das
inc
outsl
or
cmp
adc
sub
dec
mov
ret
shlb
jmp
aas
fidivl
xor
push
adc
iret
enter
jbe
mov
inc
pop
add
das
push
shlb
in
mov
pop
fstpl
mov
push
push
into
fldcw
or
and
mov
cmp
enter
add
rcrl
fxch
add
sahf
xchg
dec
cmpb
jne
ja
dec
jne
jo
push
outsl
test
add
bound
xchg
cmp
mov
aaa
xor
jae
leave
enter
aam
dec
ds
jle
ret
cld
or
push
add
inc
in
mov
cmp
sub
xor
or
mov
pop
adc
popl
sub
lahf
jl
mov
xchg
jbe
inc
imul
dec
and
jp
xor
es
add
lock
cld
loopne
dec
leave
push
mov
mov
cmp
xchg
add
or
adc
mov
cs
xor
shl
add
push
or
xchg
jo
cmpsl
mov
sbb
add
mov
jae
lret
add
out
adc
popa
cld
adc
pop
sbb
pop
sub
dec
mov
and
push
ja
add
in
ja
pop
pop
dec
or
rcll
xor
dec
sar
nop
outsl
pop
les
add
push
xchg
mov
inc
add
mov
sahf
xor
dec
in
push
or
mov
cmpsb
push
lcall
adc
push
outsb
push
cmpsl
mov
aaa
inc
int
pop
sti
orl
push
das
shll
xchg
loope
bound
jmp
cmp
push
lahf
dec
fdivs
dec
fcoms
out
insb
mov
push
pop
pop
imul
aas
stos
das
aad
insl
pushf
mov
mov
sub
sbb
lods
mov
adc
sbb
addr16
pushf
lea
pop
ret
adc
shlb
ljmp
movsb
iret
test
enter
inc
outsl
xchg
enter
mov
enter
push
jnp
enter
out
sbb
aaa
pop
enter
subl
in
out
inc
jno
enter
mov
enter
pop
mov
enter
push
and
ret
in
icebp
enter
sub
in
enter
repnz
dec
xor
mov
inc
faddp
inc
test
nop
adc
and
sbb
lret
rcll
out
je
inc
fwait
out
cmpsb
pop
adc
and
xor
mov
xor
or
testl
aad
push
xchg
and
cmp
lods
cmpb
pop
loope
sahf
fadds
mov
inc
sub
xchg
mov
rcrb
dec
mov
add
pop
inc
xchg
repz
inc
sub
push
dec
in
sarb
mov
in
mov
dec
pop
outsl
pop
xchg
mov
inc
push
imul
or
mov
shrl
and
aam
xchg
mov
sub
shrb
push
push
inc
or
rcl
adc
adc
jae
arpl
les
xchg
daa
mov
push
dec
movsb
loopne
sbb
shlb
and
ret
dec
xlat
addb
fnop
dec
cmp
xor
outsb
sub
lods
add
push
popa
shlb
aad
rol
xorl
mov
stos
cmpsb
xchg
xlat
pop
pop
pop
dec
rclb
nop
cmpsl
pop
pop
repnz
shrl
sub
mov
mov
mov
int3
dec
dec
shll
call
sbb
ljmp
addb
sub
imul
dec
cmp
clc
leave
mov
stos
mov
movsl
push
adc
cmp
xor
add
jns
outsl
inc
and
in
lret
xchg
mov
dec
sahf
mov
sahf
jg
or
jo
or
repnz
dec
mov
stos
popa
xchg
xchg
lods
pusha
and
xorb
rcrb
repz
or
cwtl
pop
orl
add
icebp
jno
mov
jbe
dec
setae
js
mov
decl
sbb
rclb
push
xchg
mov
lret
jne
lods
mov
test
or
orb
icebp
mov
xchg
mov
jae
push
mov
rcrb
sbb
inc
or
sub
scas
jmp
push
out
add
cs
repnz
inc
mov
xor
lods
flds
and
insl
in
pop
pop
cltd
mov
clc
pushf
or
pushf
je
jmp
inc
mov
ja
and
lcall
adc
fnsave
xchg
xchg
or
xor
sub
mov
or
xor
cvtpi2ps
jmp
add
cmpsl
adcl
movsl
loop
sbb
int
or
jmp
add
dec
imul
or
dec
pop
inc
call
adc
push
adc
mov
lock
mov
ss
testl
adc
or
pop
popf
dec
fcomps
lods
mov
inc
or
dec
pop
hlt
out
or
mov
push
hlt
mov
mov
dec
movups
xor
inc
mov
fs
xchg
and
sub
mov
in
adc
fdivr
int3
imul
repz
push
adc
test
hlt
mov
mov
je
push
xchg
sub
sbb
subl
push
jne
je
dec
inc
sbb
pop
sub
sbbl
fstpl
jl
cmp
mov
adc
push
adc
xor
lds
dec
push
outsl
mov
lods
sub
dec
popf
je
sub
adc
mov
jp
sbb
adc
cltd
cmp
or
out
dec
jo
inc
lock
lcall
sbb
ret
test
iret
lcall
leave
ret
push
cs
cmp
test
and
lcall
and
mov
rcrb
jp
pop
mov
out
add
and
jb
xor
xor
sbb
xor
mov
jno
gs
pusha
add
sub
sbb
shrl
inc
cmp
fidivl
in
pusha
and
and
jae
mov
addr16
loopne
fcmovnu
or
mov
unpcklps
pusha
sub
ret
push
pushf
mov
clc
or
nop
divl
mov
into
add
or
int
mov
adc
push
push
pop
sbb
pop
add
add
adc
clc
pusha
pop
lret
add
pop
add
mov
cmp
pop
test
daa
movsb
and
inc
adc
lcall
or
sbb
adc
inc
mov
lea
add
sub
ds
xor
add
enter
mov
pop
dec
stc
nop
or
pop
mov
add
add
cmp
jbe
mov
cwtl
sbb
jne
test
je
pop
int3
lahf
inc
pop
inc
ret
sub
cmp
call
push
add
stc
mov
jae
push
xor
adc
pusha
mov
inc
add
dec
or
sbb
xor
adc
xchg
sub
push
inc
or
push
movl
ss
add
or
fcmovnbe
mov
mov
inc
add
or
into
inc
pop
xor
in
imul
xchg
sub
insl
dec
pop
orl
adc
icebp
insb
fmull
xchg
movsl
cmp
sbb
mov
cmp
lods
pop
iret
mov
cltd
stos
in
or
xchg
nop
rorb
jg
rclb
or
adc
mov
add
imul
sbb
sub
sti
inc
jmp
push
test
add
clc
inc
out
push
in
cli
dec
lock
rolb
or
sub
pop
or
push
inc
add
cmp
jl
ret
lock
add
sub
add
shlb
roll
repnz
pop
sti
pop
sti
inc
scas
movsb
mov
mov
sub
mov
cmp
orl
rorl
mov
jmp
inc
add
and
sbb
mov
push
push
cmp
aas
mov
sbbb
sub
pop
jo
mov
adc
push
push
mov
lods
add
adc
pushf
popa
pop
mov
lock
aaa
fdivrs
and
sbb
lds
inc
fdiv
mov
test
xor
outsl
push
outsb
mov
bound
xor
xchg
decl
push
mov
pusha
adc
fisubrs
add
mov
sbb
and
xor
jg
out
sub
neg
jmp
arpl
and
and
xchg
ja
pusha
lock
inc
rol
push
test
add
rcl
lock
push
push
cmp
push
stos
insl
pop
fadds
add
jmp
pop
insb
sarb
inc
enterw
cld
iret
lock
jle
mov
das
mov
add
push
cmp
pushf
dec
mov
add
nop
cmc
mov
mov
xor
lods
push
and
decb
sub
mov
or
mov
pop
fwait
jne
xlat
insl
push
inc
adc
sahf
pop
enter
inc
sahf
push
or
call
leave
into
hlt
xor
pop
fs
and
lret
push
ret
movlps
jmp
inc
inc
or
pop
lock
cmpsl
cltd
cmp
sti
adc
sti
jmp
mov
adc
jecxz
insb
fadds
mov
push
or
sub
xorb
and
popf
and
xchg
and
ret
popa
or
push
aas
sub
or
jmp
push
shrb
sti
jmp
mov
add
adc
nop
bound
rol
roll
xchg
or
pusha
mov
mov
inc
jmp
xor
add
push
mov
ljmp
and
sbb
add
repnz
push
shrb
cmp
repz
dec
insb
pushf
aad
push
sub
std
adcb
inc
jmp
addr16
pop
lds
xor
jp
test
jg
jle
push
or
pop
dec
out
fs
in
add
sbb
push
dec
jno
sbb
decb
cmp
pop
sbbb
or
add
push
pop
cltd
push
pusha
mov
push
ret
jne
xchg
imul
xchg
jbe
push
xchg
mov
clc
rclb
mov
je
mov
movb
push
dec
inc
loope
sub
dec
adc
inc
sub
or
mov
cmp
or
xlat
sahf
jbe,pt
push
xor
and
jle
icebp
dec
add
xchg
add
sub
sub
frstor
pop
das
adc
ret
addl
enter
les
sbb
cli
pop
pushf
sbb
js
test
mov
add
push
lods
mov
mov
into
je
adc
push
xor
btc
aaa
data16
inc
jb
xor
fdivrs
inc
jecxz
js
xor
xchg
cmp
mov
das
ret
test
test
jge
pop
cltd
in
adc
fwait
adc
mov
push
add
xlat
or
in
test
mov
or
push
push
cli
xchg
or
addr16
roll
xor
xchg
or
mov
add
and
addl
dec
xor
add
cmp
sub
xor
jo
add
cmp
je
nop
inc
xchg
xor
mov
push
sub
inc
add
cwtl
pop
jl
sub
sub
aaa
sti
inc
xchg
or
sub
mov
call
lods
gs
cmpb
sbb
push
hlt
push
jbe
aam
mov
mov
or
mov
hlt
adc
inc
fiadds
pop
xchg
rcll
lods
pusha
jle
or
cmpsb
imul
or
inc
and
inc
or
stos
fwait
mov
add
mov
lret
repnz
mov
lea
adc
cmp
mov
fs
icebp
fwait
cli
rolb
adc
fadds
mov
cld
mov
adc
popf
lret
sub
pop
jg
dec
jo
lods
pop
add
jle
add
decl
fs
shll
aas
fsubrl
sub
test
test
adc
lods
adc
inc
jge
adcb
jo
inc
push
ja
out
fisubl
xchg
and
sbb
nop
xchg
std
cmp
arpl
and
or
add
jne
pop
aaa
adc
push
sbb
add
mov
push
xchg
add
paddb
inc
sarl
test
add
sub
or
xor
lock
lock
dec
ret
add
in
or
cmp
adc
jo
sub
stc
xor
mov
aaa
inc
adc
add
inc
scas
pop
and
mov
sub
outsb
lock
shlb
pusha
lea
fbstp
test
sbb
xchg
mov
add
stos
loope
cmpl
add
test
push
push
fidivs
mov
or
cmp
and
fists
mov
sub
fsts
xor
adc
push
dec
add
xor
mov
jmp
add
pusha
testl
jg
enter
cmp
sub
js
pmaxub
pop
pusha
xorb
into
sbb
mov
in
pop
mov
dec
sub
int
outsb
fildl
lret
push
lret
xchg
scas
or
sbbb
jbe
jnp
in
in
test
mov
pop
mov
xchg
in
fsubp
jns
inc
xlat
and
shrl
js
mov
fisubl
dec
inc
mov
mov
test
mov
adc
xchg
xor
js
add
xchg
sub
or
sub
sub
jmp
nop
call
xchg
pusha
popf
push
imul
pop
add
outsl
sbb
or
sbb
sbb
xor
pop
xlat
repz
push
push
push
sarl
or
push
nop
aaa
jle
loope
or
pop
xor
and
cmp
jge
sbb
out
sbb
outsb
scas
jnp
pop
mov
ljmp
ja
mov
jns
nop
mov
or
jo
mov
sbb
or
mov
aaa
mov
pop
mov
add
cmpsl
push
sub
jge
adc
xchg
lods
jmp
jle
xor
mov
stos
push
push
test
dec
loope
test
fcoml
inc
sub
mov
lds
mov
push
add
adc
cltd
scas
sti
adc
push
out
jne
rcrb
pop
pop
xor
dec
mov
cmp
movsl
cmp
cmp
dec
dec
mov
ss
add
dec
ja
mov
stos
mov
shrb
pop
jecxz
mov
sub
jp
add
mov
or
sbb
pop
popa
in
test
bound
jne
cmp
xor
rcrb
rorb
scas
divl
jns
or
xchg
popa
ja
hlt
aaa
cmp
push
in
mov
pop
push
adc
sbbl
add
rcll
add
add
or
sub
xchg
clc
xor
mov
mov
cli
push
jmp
push
neg
xor
xor
and
sahf
into
sti
call
je
pop
push
jbe
and
mov
decl
cmp
mov
faddl
or
or
movsb
xor
inc
adc
dec
std
scas
push
adc
adc
or
dec
pop
mov
roll
aad
sbb
push
cmp
adc
cmc
js
xor
mov
popf
icebp
in
ss
xchg
inc
dec
push
adc
xorb
sbb
xor
das
inc
movsb
test
imul
add
mov
add
sahf
sbb
in
fldcw
cmp
call
push
and
iret
in
addb
xor
adc
shr
mov
adc
mov
sbb
jmp
outsl
mov
push
mov
push
repnz
mov
jmp
cli
sbb
icebp
stc
push
ret
div
addl
jnp
inc
or
mov
mov
adc
in
xchg
jo
adc
mov
mov
xchg
rolb
push
xor
js
inc
loop
dec
lods
fdivs
mulb
movsb
inc
inc
push
daa
add
push
orl
adc
fsubrl
sbb
mov
add
loop
pushf
movsb
in
test
loopne
cmpsl
sub
fcoml
cwtl
pusha
cltd
or
add
out
sbb
cltd
repnz
xchg
lahf
pop
lret
stos
pop
xchg
dec
or
pop
and
hlt
ret
inc
and
je
add
outsb
pop
jo
addl
or
rorb
ja
xlat
sbb
roll
pop
gs
andb
or
adc
adcl
sbb
xor
aaa
stos
add
push
mov
add
sub
orb
les
xchg
test
adcb
or
ret
popf
mov
xor
aaa
adcl
cmpb
andb
add
std
dec
xchg
lret
or
xor
arpl
rorl
test
or
xor
or
mov
mov
or
or
mov
xorl
push
add
add
sub
sbb
inc
push
mov
cmpsl
xor
movsl
mov
adc
test
js
imul
and
outsb
xchg
inc
xor
xchg
xor
add
adc
andb
sbb
cmpb
popa
mov
mov
cmp
idivl
inc
xchg
sbb
pop
sub
pop
adc
dec
mov
cvtps2pi
jle
sub
xor
push
orl
cmpsl
mov
mov
popf
orps
pop
ret
fsubl
xor
cmp
or
aad
xor
pop
cmpsb
jno
loopne
dec
in
pop
push
pop
faddl
push
push
mov
lods
dec
jmp
add
hlt
fcomi
jge
mov
out
insl
movsb
xor
orl
xchg
or
hlt
sub
and
shlb
call
cld
dec
add
je
xchg
push
lret
adc
and
repz
ds
aaa
pop
push
push
insl
and
add
and
adc
loopne
cld
loopne
adc
aad
inc
add
cmp
mov
jg
loope
or
push
add
lds
adc
or
mov
mov
push
add
lods
cmp
movsl
xor
hlt
mov
mov
inc
pop
mov
mov
clc
mov
inc
inc
mov
adc
adc
push
loope
push
ljmp
mov
lea
adc
inc
and
xchg
cmp
or
mov
mov
cmp
mov
cmp
and
in
sub
pop
push
pop
add
and
dec
adc
rcrb
dec
leave
mov
or
and
enter
inc
test
or
or
xor
sbb
dec
shlb
leave
adc
aam
inc
adc
cld
sbb
ret
or
inc
or
mov
hlt
xchg
or
dec
loope
push
js
and
cmp
push
dec
pusha
dec
add
dec
mov
or
cmp
pushf
adc
shrb
sub
add
subl
js
jae
xor
add
inc
scas
xor
ret
lahf
nop
mov
adc
cmpsb
xchg
push
push
adc
andl
cmpsl
xlat
xchg
sub
loope
pop
dec
or
pusha
test
es
xchg
addr16
jb
aaa
es
scas
orl
adc
add
inc
sbb
pop
xor
mov
aas
push
and
adc
jnp
testb
push
test
and
mov
and
inc
pop
out
mov
push
sbb
loop
fwait
call
adc
ja
push
cmp
pop
cs
and
push
int3
hlt
and
in
pushf
lds
or
sbb
out
dec
cld
mov
add
aas
pop
add
pop
pop
sbb
cmpsl
adc
fadds
jp
pop
test
addl
loopne
lea
cmp
nop
shlb
cmovnp
imul
add
and
std
jge
add
into
sub
add
aaa
sub
or
sar
xchg
int
push
in
hlt
lock
popa
cmp
adc
scas
adc
lret
popa
pop
xchg
daa
ds
xor
mov
arpl
inc
inc
imul
cmpl
gs
cmp
imul
and
adc
add
loopne
mov
pushf
aad
sub
mov
mov
fiadds
dec
rcrb
mov
clc
xor
mov
icebp
and
dec
and
xlat
xchg
xor
mov
mov
bound
leave
sub
push
push
addr16
inc
imul
in
test
cmp
lahf
das
lcall
mov
cmpl
iret
add
mov
adc
mov
jo
dec
push
popa
and
xor
push
add
sbb
je
xchg
inc
dec
aam
mov
pop
fcmovnb
mov
add
mov
adc
outsl
movsb
aad
or
push
xchg
add
push
pop
adc
mov
sub
mov
fldenv
rolb
pop
push
or
inc
add
jnp
jl
orb
adc
jg
ffreep
outsb
mov
pop
pop
je
sub
insl
loope
loope
cltd
sbb
outsl
addr16
int3
lods
inc
pusha
add
sub
or
gs
test
inc
cltd
xor
outsl
mov
adc
or
test
add
bound
jo
js
add
ljmp
shlb
xor
jne
jns
xchg
test
idivl
lret
jp
push
mov
or
mov
mov
and
pop
jnp
xchg
inc
dec
sahf
stc
adc
jb
dec
sbb
add
mov
sti
decb
sbb
fs
je
add
mov
shlb
xchg
jb
shrl
xor
in
dec
or
add
sbb
xor
inc
adc
loopne
cmpsb
mov
pop
add
test
pop
xlat
add
cmc
pushf
mov
sub
fadd
sub
sbb
jecxz
testl
out
pop
popa
inc
xchg
xlat
stos
inc
mov
dec
lds
addr16
out
aad
dec
cld
or
and
cli
mov
sbb
inc
popf
dec
xchg
addl
fcmove
jo
in
sbb
inc
and
aas
adc
cltd
and
ret
sbb
cmp
out
or
inc
shlb
adc
jo
sub
pop
or
imul
sbb
in
and
inc
mov
add
mov
inc
sarb
int
in
jo
movsl
or
pop
adc
clc
ss
popa
pop
jno
loopne
mov
jmp
out
cmpl
nop
mov
cmpsl
addb
ret
inc
mov
sbb
pop
sbb
cmp
add
insl
es
movsl
bound
push
cmpb
fimull
orl
jae
xlat
gs
xchg
or
sbb
push
cs
cltd
add
ret
lret
aam
lahf
loopne
sbb
idivl
jno
add
pop
out
bound
jae
cwtl
pop
cmp
or
dec
and
push
push
orl
push
mov
hlt
inc
and
call
or
test
push
lret
hlt
add
xor
and
mov
jg
xchg
dec
push
popa
scas
inc
andl
fmuls
jg
sbb
or
es
cmpl
lods
add
mov
out
ljmp
jno
es
dec
sub
dec
cmp
daa
sub
lock
lods
inc
lea
push
test
and
adc
or
xchg
inc
push
adc
lock
jmp
cmp
dec
rolb
and
dec
xchg
fs
cmp
add
adc
enter
mov
cmp
mov
mov
and
test
filds
push
push
loopne
imul
movsl
jae
sub
inc
mov
dec
add
add
mov
fnstcw
sbb
push
fnstenv
mov
inc
add
push
sahf
push
sbb
popa
dec
inc
xor
aad
stos
jae
sbb
out
fildl
xchg
xchg
add
adc
ret
jl
das
dec
movsb
test
insl
cmp
push
lock
inc
lea
or
adc
lock
mov
cmpps
cmpb
adc
xor
rorb
and
es
cmp
add
jns
xor
mov
aaa
lods
add
jge
push
mov
ret
hlt
outsl
inc
outsl
lcall
test
mov
neg
in
loopne
inc
adc
inc
repnz
or
or
and
outsl
into
cmp
inc
xchg
div
andl
test
movsl
or
pop
jle
jne
mov
dec
bound
adc
shrb
xlat
mov
sub
insb
adc
sub
add
push
add
sbb
lods
xchg
fcomps
adc
or
dec
lock
or
mov
mov
sub
dec
inc
and
add
hlt
cmp
xchg
and
fistps
subb
roll
cld
adc
shlb
shlb
xchg
arpl
sub
or
push
das
bound
xchg
mov
fidivs
jg
out
hlt
shlb
add
sub
adc
pop
pushf
sbb
pop
cwtl
adcl
inc
dec
and
jb
mov
xchg
mov
enter
insb
sub
out
add
mov
or
xor
addl
bound
inc
xchg
push
lock
addl
adc
add
push
clc
mov
or
fucomip
add
mov
sub
or
mov
add
sbb
stos
adc
pop
imul
add
or
xchg
ret
ljmp
adc
ret
je
add
sahf
lcall
std
add
push
add
into
sbb
and
xchg
mov
sbb
mov
sub
lock
js
ffreep
add
or
loop
adc
and
dec
add
add
xor
add
ljmp
loopne
int
stc
cmp
and
pop
icebp
add
fstpl
inc
scas
adc
mov
pop
dec
out
xchg
cmc
xor
adc
mov
xchg
jl
add
sub
loopne
arpl
cmp
cmp
push
xor
shrl
pop
mov
sub
xor
pop
add
xlat
dec
bound
jg
cmp
inc
lds
jg
jle
or
and
xlat
jae
or
add
add
ret
sbb
enter
xorl
and
sub
inc
push
pop
gs
insl
xchg
lods
lea
sub
fisubs
orl
shrb
sub
fidivrl
sbb
aaa
mov
or
pop
or
into
shrd
sbb
cmpsl
cmp
dec
mov
dec
push
mov
lret
and
jno
decb
add
mov
mov
jns
pop
pop
mov
in
clc
cmp
add
mov
cmpb
je
xchg
std
inc
push
loope
clc
fs
sub
inc
inc
cmp
jno
mov
jg
mov
sbb
lods
xchg
sub
pop
scas
or
sub
mov
push
xor
push
cmpsb
test
dec
andnps
jl
js
sbb
add
lods
pop
cmp
cmp
mov
push
cmp
push
add
or
imul
lcall
push
pop
mov
jbe
cmp
or
jo
pop
iret
ret
mov
sar
and
popa
daa
mov
sub
out
or
pop
mov
adc
les
fsts
ret
daa
sbb
movsl
sub
jb
and
jmp
xchg
lock
adc
call
mov
filds
cmpl
sbb
adc
nop
sub
icebp
xor
imul
mov
dec
dec
cltd
xor
sbb
add
jl
fsubrs
cs
and
xor
add
mov
inc
cmpsl
adc
ret
dec
faddl
or
call
add
loope
fldl
mov
in
jno
clc
fbstp
sub
shlb
pop
in
and
mov
and
sahf
xlat
pop
sbb
xor
cwtl
loopne
sbbb
loopne
insl
faddl
or
cs
pop
comiss
test
sub
cwtl
sahf
sbb
add
or
add
mov
push
adc
jne
scas
add
pop
mov
sbb
sbb
sbb
lahf
mov
je
fbstp
mov
or
jnp
push
fstpl
cmc
daa
add
xchg
rcrb
jne
int3
js
shrb
lcall
add
push
es
fldt
mov
mov
xchg
andl
data16
jg
inc
sahf
call
mov
cmpl
mov
imul
mov
or
movsb
ffree
je
jo
xchg
ret
xchg
mov
xor
xor
push
lods
push
lods
pop
lcall
enter
nop
push
xor
popf
sar
int3
inc
xchg
xchg
ljmp
push
pop
push
sahf
decb
and
mov
and
jl
ss
jo
movsb
pop
mov
imul
lds
mov
inc
daa
xor
andb
sub
sub
lock
cld
jne
sar
roll
orb
adc
sbb
adc
mov
push
sbb
cmpsl
sbbl
orl
add
cmp
fwait
inc
je
pop
mov
sub
ret
sbb
cmp
adc
mov
pusha
jmp
int
ss
test
outsb
scas
sub
adc
sbb
popf
popa
sbb
stos
add
in
pop
add
and
and
or
outsl
pop
movd
push
mov
loopne
cmc
and
nop
lock
dec
popa
xchg
lock
ret
inc
add
pop
sahf
mov
adcl
fimuls
push
push
lods
inc
or
std
dec
and
jl
pop
or
out
push
out
les
in
xchg
movsb
push
repnz
stos
fs
add
jmp
xchg
dec
add
cmovle
stos
sbb
dec
dec
cmp
dec
mov
orl
sub
and
rcrb
addl
insl
in
dec
enter
inc
xor
adc
xor
leave
stos
fsts
push
or
dec
add
das
xchg
push
lcall
mov
and
pop
dec
add
cmp
or
push
insb
cmpb
mov
add
shlb
ret
hlt
jbe
bound
mov
into
ficompl
je
in
adc
jne
imul
loopne
fnstsw
pop
jne
mov
sbb
sub
rcrb
addl
mov
jge
add
cmpb
paddb
cmpb
gs
push
movsl
fsubrl
aaa
pop
sub
lock
inc
sbb
mov
roll
jne
les
jp
lock
fcoms
jbe
adc
lods
xchg
or
inc
jns
add
in
in
shlb
fs
mov
inc
pop
adc
je
sub
pop
inc
pop
scas
xchg
mov
mov
out
or
cs
pop
jb
sbb
out
jne
inc
ficompl
lock
aas
subb
add
or
sbb
jne
roll
sub
dec
adc
test
and
sub
and
dec
dec
in
mov
mov
sub
and
add
popa
sbb
arpl
and
inc
cmp
jne
dec
add
movl
dec
and
sbb
add
shr
movsb
jns
or
movsl
pop
std
out
xchg
push
xor
push
pop
inc
rcr
xor
sub
mov
adcb
push
add
jb
popa
inc
xor
sahf
sub
mov
mov
jne
imul
popa
push
mov
mov
loop
mov
and
dec
movq
pop
andb
cmpsl
pop
repz
aad
inc
incl
dec
imul
rorb
inc
popa
mov
push
iret
loope
lcall
or
jne
sbb
or
nop
or
dec
push
pop
inc
inc
and
push
add
sub
pop
sub
and
mov
aaa
lock
loop
inc
or
lock
cmp
int
cltd
mov
add
xlat
in
test
shufps
add
sub
inc
lahf
mov
stos
mov
popf
push
sub
push
into
jnp
imul
xchg
adc
xor
adc
inc
jo
gs
cmp
out
cmp
divb
push
cli
movsb
mov
ds
lahf
js
fdivr
push
mov
and
subb
mov
cmpsl
jbe
xchg
or
frstor
adc
adc
inc
mov
mov
and
ljmp
sahf
rcl
push
push
cmpsl
lock
or
sbb
mov
add
adc
ret
jne
push
mov
jge
fmuls
jg
xlat
jnp
fistpl
fistps
or
cmp
add
pop
addr16
mov
pop
add
pop
sbb
push
loop
jp
inc
mov
xchg
test
or
jno
or
popa
xchg
dec
dec
fwait
daa
xchg
xchg
cwtl
popf
je
pop
lcall
lcall
jo
sbb
test
mov
dec
jmp
add
mov
mov
inc
imul
scas
jns
and
pop
pop
lock
popa
mov
bound
push
add
jnp
sarb
out
sub
jb
rcll
sub
dec
stc
mov
add
xor
or
pusha
jne
dec
movsl
pop
mov
mov
or
lods
add
pop
lea
lea
daa
or
push
mov
int
shr
sbb
rcrb
sub
pop
xchg
mov
add
adc
and
inc
pop
scas
dec
push
dec
mov
mov
lods
je
gs
push
popa
adc
adc
repnz
sbb
negl
sub
inc
cld
mov
and
call
std
adc
mov
sub
loope
add
sbb
orb
add
or
int3
inc
cmpl
jne
xor
arpl
scas
adc
sub
lds
inc
or
add
sbb
clc
push
adc
add
daa
sbb
add
js
xor
add
rcrl
mov
das
xchg
xadd
sti
orl
cmpsl
inc
xor
adc
mov
pushl
sub
shlb
dec
jmp
or
mov
push
bound
lods
imul
imul
mov
and
jle
mov
push
xor
lahf
out
out
push
jns
daa
cmp
push
loope
popf
xor
jno
cs
pushl
pop
cmpsb
mov
sub
gs
xchg
mov
push
daa
sub
or
pushf
adc
or
or
mov
dec
add
dec
enter
mov
cmp
rcrl
or
push
jge
rolb
test
push
lret
mov
lods
popa
add
or
in
mov
pop
adc
adc
mov
pop
pop
sub
jne
or
xchg
andl
or
dec
adc
xor
cs
orl
xchg
xor
or
call
dec
shll
sbb
add
test
push
in
sbb
fidivrs
mov
push
aaa
mov
adc
repnz
mov
incl
idiv
inc
sub
adcl
in
push
test
cli
rorl
inc
cs
out
movsb
xor
lahf
add
sbb
lods
mov
pushf
outsb
nop
jp
pop
inc
cmc
shrb
lods
xor
pop
mov
mov
fs
sbb
test
call
xlat
sub
adc
mov
xor
sbb
pop
mov
sub
cmp
or
int3
pop
movsb
push
push
mov
rcr
adcl
xchg
inc
jmp
imul
cmpsb
movsb
mov
cltd
push
dec
cmp
cltd
push
mov
dec
push
imul
xchg
add
push
add
inc
cmpl
jne
add
mov
jmp
pusha
das
mov
in
jmp
cmp
out
sbb
fsubs
cmp
fwait
xor
and
cltd
je
adc
add
dec
and
and
dec
or
sub
fidivrl
xor
out
dec
and
jo
mov
lods
sbb
std
or
and
nop
daa
fisubrl
and
adc
sbb
sbb
addb
loop
nop
mov
adc
jns
mov
daa
xor
mov
andb
addr16
jp
pop
lcall
xorb
das
cmp
lock
mov
cmp
lcall
loop
adc
pop
js
xchg
adc
test
xlat
ss
outsl
mov
add
cmpsl
mov
sbb
jge
xorl
mov
mov
pop
ret
jno
cs
fs
mov
aas
add
push
and
inc
xor
xor
sub
push
adc
push
jmp
and
push
pop
dec
sub
adc
dec
and
loopne
stc
add
je
push
lods
mov
leave
in
xor
hlt
xchg
mov
pushf
add
ret
push
push
lods
and
mov
lret
pop
imulb
cld
xchg
test
xchg
xor
sbb
hlt
sbb
xchg
out
inc
popa
jge
mov
pop
mov
ss
sysenter
push
mov
mov
inc
sbbb
xrelease
dec
sbb
or
sub
jno
jnp
mov
daa
mov
pop
inc
xchg
in
inc
jbe
jmp
sub
test
and
or
xchg
xchg
cmpsb
and
sub
mov
into
pop
and
xor
mov
lock
sub
mulb
cmpb
out
ret
or
dec
cwtl
push
sub
shlb
xlat
pop
jp
es
push
or
repz
jge
mov
sub
movsb
xchg
and
subl
jp
mov
mov
xor
sub
inc
aaa
testb
repz
mov
or
push
rolb
cs
cs
sbb
mov
ja
sbb
sbb
adc
adc
add
sub
mov
cmp
adc
xlat
xchg
arpl
add
mov
jns
pop
mov
cmpl
mov
and
inc
inc
je
jg
adc
inc
std
push
cmpb
rolb
mov
mov
mov
jns
shlb
sbb
mov
ds
push
add
fstps
adc
mov
pop
stc
lds
cmpsb
pop
mov
or
fiadds
add
mov
pop
out
push
cmp
sub
daa
loop
fwait
inc
and
fadds
xchg
push
xchg
mov
mov
mov
cmp
jb
shlb
add
lret
lret
add
add
sbb
sbb
xchg
scas
inc
adc
lret
or
es
add
xchg
mov
push
xchg
pop
in
aaa
and
cmp
daa
mov
hlt
push
cwtl
je
arpl
bswap
xchg
ret
jb
notl
addl
mov
inc
daa
jnp
cmc
js
pop
subl
mov
adc
push
sbbl
shll
jne
push
xor
ds
mov
adc
pop
sub
in
shlb
sub
sub
jbe
pop
sahf
insb
rcll
mov
mov
cmc
outsb
mov
sub
je
xor
push
jbe
mov
dec
call
rcrb
push
daa
or
dec
sbb
xor
mov
inc
sub
pop
jle
scas
add
ret
push
cmp
add
adc
dec
pop
mov
cmp
jnp
aad
test
es
test
clc
cmp
imul
gs
addr16
dec
fs
cmp
sti
inc
sbb
dec
mov
adc
movsl
mov
xor
add
ja
push
jp
movsb
sub
xor
lods
adc
sbb
scas
xorb
pop
lods
dec
inc
popa
subb
cmp
test
out
and
inc
popa
push
adc
or
ds
inc
adc
and
mov
jmp
insl
add
stc
or
lea
movl
mov
and
rcll
xchg
jg
fildll
testb
nop/reserved
mov
mov
add
push
fwait
test
xor
outsb
xlat
lock
sbb
push
jo
add
or
fwait
jmp
inc
jne
add
jb
fsubs
lods
js
add
ret
loopne
push
pop
pop
testl
nop
notb
mov
fildl
or
jno
ret
xchg
inc
mov
or
addr16
dec
xchg
add
je
or
lds
push
push
or
popa
mov
push
out
add
cli
inc
sub
les
out
sbb
xchg
xchg
push
inc
mov
lret
sub
arpl
sub
adc
addb
mov
pop
enter
inc
adc
add
jge
jl
addb
add
sub
mov
jne
orb
in
test
das
sbbb
inc
pop
jge
test
movsb
sbb
push
mov
add
add
pushf
sbb
data16
inc
lea
test
dec
fstpl
mov
add
xor
popf
jle
pop
mov
fwait
and
push
aam
and
or
or
cld
inc
aas
sbb
shrb
dec
mov
dec
sub
popa
add
inc
jo
cli
mov
dec
cmp
xlat
fiadds
inc
dec
roll
dec
inc
xlat
mov
test
mov
push
aad
mov
and
xor
fcomps
repz
pop
adc
mov
xor
mov
adc
roll
push
adc
testb
or
roll
lret
bound
pop
mov
fnstsw
sub
pop
inc
shrl
movsb
mov
rorb
sbb
sub
inc
jge
push
mov
gs
mov
ja
jle
xchg
add
out
ret
cld
adc
xor
mov
add
push
mov
mov
inc
jnp
bound
movsl
or
and
add
mov
push
dec
movsl
pop
imul
jnp
xchg
test
dec
pop
mov
push
pop
adc
jmp
movsl
subb
add
jecxz
nop
mov
gs
loopne
pop
add
sub
push
pusha
movsb
mov
sbb
mov
data16
adc
orb
in
fsub
cwtl
jmp
cltd
dec
cwtl
cmpsl
call
fsubl
or
sub
or
sub
rorb
sbb
or
sbbl
mov
dec
shlb
add
cltd
mov
add
ss
cmp
adcb
adc
or
xchg
movb
fidivrs
daa
cmp
outsb
xor
imul
or
loope
add
imul
push
push
or
mov
daa
mov
popf
push
cmpsl
add
das
sub
pop
or
dec
add
nop
sar
cmp
sbb
rolb
mov
pop
or
mov
popf
cs
shlb
mov
mov
enter
xor
cmp
ds
xor
rolb
leave
rclb
mov
popf
loope
sub
sub
or
outsl
xchg
cmc
enterw
movb
xlat
or
cmp
outsb
adc
xchg
and
jo
pop
push
mov
pop
dec
inc
adc
push
adc
jmp
inc
test
pop
inc
or
mov
xor
dec
xchg
add
out
sbb
inc
or
adc
dec
ljmp
push
xor
loopne
fmull
add
loope
push
shrl
xchg
mov
inc
ret
or
dec
jmp
jmp
dec
movsb
push
push
je
xchg
inc
sub
inc
mov
or
inc
int3
repz
shrb
jbe
loope
inc
loope
and
push
insb
adc
jmp
lea
loopne
cwtl
or
stos
jmp
es
inc
ficompl
hlt
fld
adc
rcrl
or
sub
push
mov
push
mov
xchg
inc
jo
push
aaa
add
mov
add
imul
sub
or
lock
and
dec
or
sbb
adcl
add
mov
std
stos
lea
add
sub
push
push
add
jmp
pop
and
sub
mov
int3
push
add
lahf
pop
dec
inc
and
stos
pop
cmp
or
or
int
adc
adc
inc
lods
imul
push
shrl
add
adc
dec
adc
and
fwait
and
data16
lea
push
push
shr
mov
dec
inc
pop
sbb
shlb
dec
mov
nop
jbe
and
dec
dec
and
hlt
outsb
dec
mov
cmp
sub
push
mull
into
sbbb
jle
push
in
push
adc
dec
addb
pop
dec
sbb
and
adc
cmp
into
sub
dec
sub
fiaddl
rcrb
repz
inc
sbb
add
dec
adc
push
xchg
test
repnz
jg
nop
lret
add
inc
movsb
xchg
pop
pop
pop
ljmp
adc
add
pop
call
inc
or
and
jmp
or
jle
in
cmp
addr16
jge
fsubl
nop
push
sub
push
fsubl
push
add
mov
ljmp
mov
das
mov
and
ror
in
scas
adc
push
lret
seto
roll
iret
lcall
pushf
loopne
pop
add
push
and
jp
sub
xchg
aad
cmpsb
and
or
jl
xchg
stos
add
or
shl
add
xor
addr16
inc
pop
push
cmc
mov
fcompl
setge
push
data16
gs
mov
xor
jl
lcall
or
sub
sub
inc
fiadds
add
add
pop
out
mulb
add
je
movsb
pop
pop
loop
mov
dec
jmp
jge
inc
mov
dec
repnz
fldenv
adc
add
pop
pop
mov
inc
mov
adc
arpl
mov
jmp
fwait
lock
jae
in
jne
pop
loope
sbb
jo
push
aaa
add
js
mov
cmp
pusha
stos
imulb
push
mov
hlt
cmpl
ss
mov
jge
imul
cmp
or
pop
fidivrl
sbb
pop
enter
xor
sub
mov
mov
pushf
cmpsb
leave
cmc
or
aam
sub
push
popl
cmp
fisttps
mov
add
ret
adcl
inc
pop
jne
mov
lods
les
cltd
movsl
mov
lret
inc
mov
in
and
or
icebp
es
or
je
xor
loope
xchg
dec
imul
mov
jo
outsl
and
scas
mov
xor
repz
push
mov
pop
sbb
sub
leave
cmp
dec
arpl
jecxz
push
pop
movsl
add
sbb
dec
clc
jae
cmpsb
movl
imul
add
and
cmp
test
in
jmp
testl
sbb
dec
jno
add
rorl
pop
pop
sub
daa
add
xchg
push
mov
in
mov
sbbb
cvtps2pd
sbb
mov
or
and
sti
je
push
or
aaa
fldt
js
call
jne
dec
scas
or
in
fisttpll
andl
mov
inc
movd
mov
add
mov
mov
xchg
ret
push
loopne
sti
movsb
add
cmp
and
scas
call
and
movsl
fs
fnstsw
pushf
xlat
cmp
push
cmp
mov
add
sbb
dec
inc
mov
xchg
out
je
sbb
inc
adc
inc
dec
and
jecxz
test
rorl
and
xor
xchg
adc
add
pop
dec
test
adc
push
stos
aas
pop
xchg
adc
xchg
jb
adc
add
push
stos
js
enter
mov
sub
adc
test
lahf
or
movsb
sbbb
push
ret
sbb
xchg
jmp
lea
inc
call
or
pop
movsl
roll
add
filds
lock
loopne
adc
and
add
jae
cli
mov
pop
clc
imul
sidtl
add
dec
call
adc
popf
fcomi
test
jmp
scas
shll
and
cltd
jmp
inc
and
add
add
inc
mov
add
add
iret
inc
jnp
and
mov
sbb
in
add
or
aaa
push
ja
push
mov
xor
or
add
adc
icebp
inc
mov
cmpl
push
pop
cltd
fsubrs
pop
icebp
pop
ret
add
in
hlt
push
push
mov
push
and
mov
jmp
mov
mov
je
roll
add
and
les
mov
push
or
je
shll
sbb
pop
addb
mov
popf
insl
daa
fdivl
femms
xchg
scas
or
or
jo
adcl
or
pop
outsl
adc
fs
and
sub
sbbb
dec
je
insb
mov
fstpt
test
pop
add
dec
jae
xchg
add
rcll
pop
pushf
rclb
xchg
cld
mov
test
push
lcall
sbb
jo
pop
hlt
movl
out
pop
pop
mov
pop
shll
mov
inc
flds
rcr
cmpsb
push
nop
cs
pop
or
rclb
pusha
xor
jecxz
ret
or
push
out
imul
sbb
pop
adc
dec
or
inc
and
js
add
or
sbb
test
pop
shl
je
pop
mov
jmp
iret
adc
dec
ljmp
inc
neg
pop
sbb
cmp
loopne
roll
add
inc
loopne
loope
fwait
xlat
cmpb
adc
sub
xchg
rol
jge
inc
lcall
daa
cmc
mov
pop
and
inc
mov
inc
pop
enter
mov
push
mov
mov
jle
push
lahf
dec
test
cmp
adc
mov
and
adc
leave
cmc
jne
sub
jp
xchg
rclb
jne
xlat
or
mov
mov
mov
xchg
pushf
or
adc
add
cmpsb
adc
add
sbb
js
scas
loopne
call
jle
ret
sbb
pop
sub
cwtl
pop
cmp
andb
jne
sub
sub
adc
xchg
addl
inc
test
push
leave
cmp
inc
loope
adc
mov
adc
pop
dec
pop
lods
sub
ss
push
pop
pop
adc
cwtl
rolb
mov
dec
adc
movsl
sbbl
ds
jbe
rcrl
push
in
push
rorb
imul
adc
stos
and
inc
sbb
pop
jb
je
pusha
adc
mov
xor
in
test
xchg
push
xlat
pop
icebp
adc
inc
mov
mov
pop
push
test
push
dec
pop
rcll
loope
nop
xor
cmp
adc
pop
mov
cmp
and
es
sti
popa
insb
pop
add
or
shlb
xchg
icebp
inc
dec
cmc
inc
and
mov
dec
sbb
andl
mov
mov
scas
shlb
sbb
dec
inc
fadds
icebp
add
dec
push
not
push
mov
iret
test
mov
mov
push
sbb
add
lea
ljmp
fwait
inc
inc
popa
push
jo
xchg
loopne
xchg
sbb
mov
mov
inc
imul
arpl
xlat
shlb
sbb
mov
add
scas
add
mov
cli
pop
mov
clc
push
or
stos
push
cmp
fisubl
int3
dec
xchg
sub
sbb
dec
add
xchg
adc
mov
repnz
push
loop
fwait
gs
cwtl
sarb
push
sbb
getsec
ret
es
mov
cmp
cmpsl
adcl
or
sbb
adc
xchg
sbb
std
shlb
rcrb
xchg
pusha
lock
popa
adc
mov
xchg
loope
loopne
pop
cs
xchg
dec
loope
dec
sbb
ret
sbb
mov
fmull
add
stos
jl
or
xor
mov
push
sbb
mov
jo
ja
subl
movsb
mov
test
xchg
push
or
sbb
dec
adc
mov
ss
push
fstpl
leave
insl
imul
and
shl
sub
shlb
sub
add
sbb
rcl
sub
sbb
test
cmc
adc
movb
jmp
push
pop
add
in
jmp
fwait
push
sbb
aaa
jg
and
outsb
dec
sbb
push
mov
adc
add
lret
popa
pop
fucom
mov
icebp
and
dec
inc
bndstx
bound
imul
in
inc
dec
push
push
jmp
lock
fldt
scas
mov
cs
add
lea
test
jg
sbb
jl
lcall
adc
xchg
cmpsb
inc
cmpsb
add
nop
lods
and
push
adc
icebp
and
and
adc
gs
jo
push
clc
dec
add
dec
ret
or
clc
add
or
xchg
sub
dec
imul
inc
ret
insl
xchg
cmp
sbb
fisttps
sbb
std
ds
mov
add
and
xchg
adc
lea
cmp
jns
dec
dec
xor
jecxz
mov
enter
inc
inc
xchg
test
in
popa
dec
mov
nop
xchg
mov
pop
sbb
xchg
adc
or
mov
cmpsb
pop
lods
shrl
jae
inc
adc
and
push
add
push
lds
or
cmp
jne
sbb
cmc
inc
test
pop
ret
push
movsb
add
sbb
repnz
push
in
and
add
inc
lret
test
adc
xchg
xchg
pop
dec
movsl
mov
loopne
cmpsl
in
ds
cmp
rcrl
mov
adc
pushf
mov
jnp
fisttpll
inc
pop
sub
jmp
jl
xchg
pop
push
test
mov
jb
cmp
add
xchg
and
inc
lahf
jl
jae
inc
cmp
and
jle
loop
dec
shll
imul
push
scas
push
scas
jmp
mov
pop
or
mov
and
mov
sub
lahf
nop
or
iret
pop
adc
aad
push
cmpsl
xchg
xchg
mov
pusha
test
xchg
and
cmpsb
jl
or
mov
dec
mov
ljmp
add
aas
mov
loope
fs
insb
and
dec
cmpsl
cmpsb
outsl
push
loopne
cmpsl
mov
sbb
dec
jl
jns
mov
test
dec
lret
pop
out
inc
xorb
and
mov
leave
imul
cmp
lock
popa
sub
mov
mov
mov
mov
mov
aam
dec
sub
push
mov
or
lahf
daa
dec
push
cmp
ss
sub
cmc
inc
add
inc
add
fs
sub
adc
push
fmuls
and
fcompl
dec
push
adc
add
inc
or
cs
push
sbb
ret
mov
push
push
mov
adc
dec
lea
fwait
or
mov
insl
cmp
ja
push
push
loope
lret
sub
popa
pop
adc
mov
test
cmpb
or
nop
sbb
xchg
push
test
les
cltd
push
pop
pop
and
test
cmp
movsl
es
mov
inc
cmpsl
pop
push
mov
xchg
xor
mov
mov
dec
sarb
and
jl
mov
repnz
adc
std
test
insb
pusha
mov
cmp
movsl
xorb
int
sbbl
jl
xchg
pop
int3
pusha
test
fimull
and
jb
xor
es
add
js
pop
xor
add
push
push
xor
jge
lods
movsl
and
mov
lret
andl
push
xor
xor
leave
and
dec
inc
xchg
pop
inc
cmp
mov
push
push
xor
add
dec
pop
xor
push
push
ss
lods
pusha
sub
push
cmp
pop
rolb
or
mov
jae
pusha
insb
insb
lcall
push
cmp
arpl
cs
or
daa
dec
in
sub
enter
xchg
je
pop
cmp
push
mov
popa
loop
icebp
adc
sbb
jle
out
out
ss
pop
fnstcw
cwtl
sbb
cwtl
pop
dec
sub
sti
push
sarl
mov
insb
aas
test
out
jl
or
jg
cmp
je
inc
mov
xchg
lock
cwtl
pop
std
pushl
std
scas
mov
int
mov
xchg
nop
add
jmp
lea
or
and
adc
cmp
pop
xchg
fldl
sub
dec
push
push
push
pop
lods
pop
cmp
add
inc
cmp
sub
mov
lods
stos
xor
adc
clc
out
rcll
xchg
aaa
imul
pop
xor
and
mov
leave
loopne
loope
jo
mov
test
cmp
pusha
jbe
adc
roll
inc
test
mull
or
fwait
add
cmp
test
rolb
xor
pop
pop
lcall
mov
sub
add
dec
popa
pop
xor
inc
add
movb
or
mov
lock
dec
inc
orb
dec
cmpsb
fiaddl
cmp
xor
scas
or
dec
fiadds
popf
sbb
insb
adc
jnp
fucom
jae
clc
cmp
lods
add
movsb
pushf
dec
cmp
adc
mov
mov
out
aam
repz
cwtl
adc
mov
nop
push
adc
movsl
hlt
pop
rolb
pop
addb
dec
mov
sbb
sub
adc
pusha
xchg
push
into
fdivrs
stc
add
or
sbb
adc
call
push
ret
aaa
imul
aaa
je
imul
pop
or
mov
dec
scas
push
cmp
jne
cmpl
mov
cmp
pop
pop
pop
xchg
dec
scas
add
pop
fs
imul
mov
mov
mov
sbb
jmp
sbb
adc
mov
lods
push
mov
adc
or
adcl
mov
adc
outsl
call
movsb
pop
mov
mov
push
sub
dec
pushf
inc
xor
cmp
arpl
test
lcall
add
fistl
and
jmp
movswl
rolb
in
rolb
daa
test
aaa
movsb
jl
xchg
enter
and
adc
pop
cmp
xlat
fisttpl
loope
pop
bt
nop
popf
lods
mov
xchg
les
bound
mov
gs
mov
mov
or
shlb
test
add
js
xor
arpl
or
jnp
fwait
mov
mov
xchg
test
movsl
jmp
cmpsb
lahf
arpl
mov
inc
ficomps
mov
xor
cltd
sbbb
mov
add
push
dec
test
sbb
test
dec
test
pop
mov
inc
nop
push
jg
pop
pop
mov
xchg
ja
pop
int
adc
xor
rorl
inc
imul
mov
and
mov
push
mov
ss
push
testb
mov
ret
dec
rcrl
leave
mov
and
dec
jmp
in
mov
ss
adc
sbb
pop
dec
inc
sbb
mov
push
shlb
addr16
inc
dec
sub
out
add
shll
push
dec
clc
pop
leave
sub
cmp
in
or
jno
mov
sti
mov
outsl
shrl
inc
inc
xchg
jo
fdivrl
mov
mov
mov
jne
sub
std
clc
lcall
dec
sbb
cmp
add
in
dec
rcr
scas
aam
push
sbb
shl
repz
inc
inc
xor
arpl
jbe
jmp
sbb
push
or
or
mov
sbb
xor
or
jo
adc
push
inc
and
inc
pop
push
andb
or
jne
or
movhlps
sub
mulb
add
cmp
je
sbb
push
andb
aas
mov
ljmp
je
sbb
and
mov
push
sub
inc
and
imul
nop
fdivs
sub
inc
sub
pop
vmovshdup
inc
jmp
sbb
adc
lea
icebp
sub
lods
xor
pop
lock
sbb
adc
mov
mov
out
mov
xor
mov
testl
mov
imul
lock
movsl
mov
pop
mov
or
lock
and
pop
movsb
cmp
lods
push
sbb
mov
pop
jno
add
and
sbb
sub
or
push
loope
sub
jbe
sub
pop
add
lock
lods
test
add
jo
roll
scas
or
clc
mov
pop
inc
adc
xchg
xchg
or
fwait
xor
sbb
outsl
js
inc
add
in
push
sbb
mov
push
jge
addr16
xchg
cmp
test
dec
or
adc
or
enter
add
dec
jno
and
and
iret
inc
pop
js
add
mov
or
jae
rclb
out
js
lock
fists
fidivl
xchg
mov
push
ss
pop
js
add
pushf
insl
xchg
add
gs
lds
xor
xchg
bound
jne
cwtl
shlb
sub
dec
cmp
movb
mov
dec
sbb
jmp
inc
imul
cwtl
pop
pop
mov
aad
mov
push
ds
test
lahf
add
js
mov
adc
push
push
lar
or
dec
and
mov
mov
test
cmp
xor
inc
jge
aas
imul
mov
in
mov
daa
sub
mov
ret
xchg
adc
sub
mov
test
sub
adc
loop
dec
and
mov
push
sarb
call
js
inc
les
and
jl
or
xlat
fisttpl
mov
test
icebp
xchg
mov
pop
add
movb
push
or
cmp
pop
adcb
push
inc
lock
cmp
loopne
faddl
pop
mov
cwtl
xor
add
in
je,pn
lock
mov
cmp
je
les
inc
pop
mov
mov
outsb
dec
pop
mov
jo
add
add
mov
or
push
mov
frstor
aam
sub
mov
mov
adc
rclb
ja
addr16
lret
add
push
andl
mov
sub
add
pop
xchg
sub
popf
push
insl
pop
mov
mov
dec
jne
mov
cmp
sbbb
les
pushf
sbb
aam
xchg
daa
cmp
enter
push
adc
jl
cmp
pusha
incl
inc
ss
pop
mov
mov
jno
and
jg
daa
orb
ret
sub
cmp
pushl
pushl
mov
pop
inc
dec
scas
jae
imul
aaa
sbb
xor
xor
in
adc
negl
xchg
push
pop
add
pop
enter
pop
jb
fimuls
je
sub
mov
sbb
js
add
cmpsb
add
and
movsb
jno
push
xchg
add
xor
pop
adc
adc
icebp
mov
stos
fisubs
dec
mov
hlt
push
add
lods
call
fadd
xchg
xchg
xor
mov
inc
xor
cmpl
imul
popa
and
pop
jecxz
add
or
inc
add
insb
ficompl
js
and
je
xorb
xchg
push
push
lcall
pop
imul
es
cmp
addb
addl
sub
jge
mov
fisubrl
movsb
and
xchg
mov
mov
mulb
push
lea
sub
or
popa
sbb
imul
cltd
mov
insl
mov
test
cli
mov
push
push
xor
mov
fbstp
clc
inc
sbb
mov
xor
mov
mov
xlat
ror
fmull
daa
loope
test
adc
mov
lods
sahf
movsb
fwait
dec
addr16
add
insl
loopne
cwtl
fisttpll
mov
mov
pop
and
xor
pop
lods
sbb
add
fnstsw
outsl
mov
dec
sbb
xchg
faddl
xchg
xchg
sbb
leave
cmp
mov
sbb
dec
popf
std
push
push
shrl
push
push
mov
movsb
ss
andb
mov
mov
pop
fcom
and
jns
add
mov
sbb
and
sbb
and
movsb
jge
adc
cwtl
xor
and
ljmp
xchg
adc
imul
mov
aam
and
sbb
in
cltd
mov
cmpsl
xchg
mov
or
test
xor
repnz
lcall
sahf
lret
and
cwtl
loope
pop
fsubl
sbb
or
and
insb
jmp
add
aam
mov
inc
movsl
andl
and
xchg
imul
adc
je
call
add
sub
je
popa
int
insb
xchg
cmp
dec
mov
mov
xor
inc
push
inc
sub
inc
fidivs
adc
hlt
cltd
aam
or
xor
mov
fcmovne
inc
in
push
xor
adc
cmp
pusha
ja
or
cmp
pusha
sbb
push
jmp
push
push
and
je
inc
pop
add
and
ret
push
add
push
xchg
iret
or
mov
sbb
mov
xor
lock
fisubrl
sbb
out
push
movsl
cmp
inc
xor
cmp
hlt
iret
sbb
test
or
out
mov
xor
lods
pop
push
sbb
addr16
stos
push
add
aas
or
cmpl
movsb
mov
push
sbbb
pop
lcall
pop
pop
loopne
ret
aam
imul
pop
and
rcl
negb
jo
and
shlb
inc
call
pop
and
sbbl
incl
outsl
incl
and
aam
imul
and
bound
cmpsb
jnp
lds
mov
sub
push
inc
ja
mov
ret
inc
test
mov
notb
orb
loopne
and
mov
bound
mov
ret
pop
scas
jle
dec
or
shrb
xchg
int
inc
sub
loope
push
aas
fsubrs
inc
loope
xlat
jp
push
mov
jne
adc
dec
pop
rorb
or
iret
pop
inc
cld
pusha
adc
jno
cmp
adc
cs
adc
mov
push
jne
je
push
xchg
inc
add
dec
jge
mov
call
and
test
in
aad
cmp
xchg
mov
cmp
xchg
sbb
mov
or
and
sbb
pushf
icebp
cmp
dec
xchg
fcompl
gs
push
push
lcall
clc
cmp
dec
sub
lea
or
jmp
test
int
push
lock
hlt
out
mov
incl
insb
out
adc
jle
and
arpl
add
adc
xchg
xchg
and
adc
js
dec
xor
arpl
in
mov
add
jne
jno
sub
adc
test
ret
mov
scas
add
sub
ret
fidivrs
xor
jg
or
dec
push
jmp
mov
push
xchg
push
fmuls
adc
enter
ret
pop
pop
xchg
scas
nop
gs
mov
dec
xchg
push
mov
andb
sarl
and
loopne
dec
xchg
cs
insb
push
or
bound
hlt
clc
ret
daa
xchg
push
jge
xlat
les
arpl
rclb
push
jo
enter
xchg
and
pop
ja
pop
lods
nop
std
adc
mov
mov
adc
clc
xchg
test
xorb
mov
mov
insb
sti
pop
add
pop
cmp
adc
mov
push
xchg
into
push
jnp
in
mov
cmpsl
das
mov
sbb
sub
sub
adc
xchg
push
pop
rclb
insb
xchg
pushf
mov
imul
mov
movsb
dec
xor
sbb
sbb
es
out
cmp
adc
imul
icebp
add
mov
gs
dec
shrl
add
xchg
and
js
out
cmp
sub
mov
jbe
xchg
loope
popf
test
stos
dec
add
dec
stos
or
push
add
es
add
mov
adc
mov
mov
rorl
dec
push
fsubrs
add
push
ds
jecxz
or
cmpsb
sahf
testl
insb
sbb
outsb
or
fs
xor
popa
lods
nop
mov
arpl
fadds
dec
pop
das
popf
pop
fsubr
dec
cmp
mov
add
sub
fldt
xchg
and
sbb
out
mov
fadds
jnp
insl
pop
add
sub
and
test
or
jbe
xor
adc
pop
int
and
jno
jb
sub
or
pop
and
add
enter
mov
les
cmpb
cli
mov
adc
pop
cs
mov
clc
xchg
mov
xor
and
cmp
test
clc
add
pop
jne
push
cs
cmp
fwait
add
and
adc
mov
mov
shlb
mov
mov
scas
push
mov
inc
and
sbb
xchg
aas
push
mov
push
aad
jge
sub
mov
aaa
mov
mov
xchg
in
sub
inc
cmp
je
sbb
mov
push
movsb
mov
mov
dec
clc
movb
dec
aam
cmpsb
test
fldcw
cwtl
mov
jae
xor
xor
inc
test
popa
bound
adc
popf
adc
ret
ss
sbb
pop
cmc
and
jne
sub
jo
inc
or
std
setno
ret
mov
dec
sub
pmulhw
dec
jg
sbb
add
or
adc
fwait
mov
mov
mov
icebp
ret
roll
test
popf
sbb
sbb
cwtl
mov
jb
sub
das
jp
pop
fwait
js
adc
ret
rcrb
mov
loopne
aad
cmp
cs
loop
loopne
movsl
and
sbb
daa
lods
mov
popa
sub
jns
mov
dec
or
stos
or
xorb
and
and
bound
inc
fidivrl
call
mov
jmp
test
pushf
xchg
cmc
jmp
cmc
lock
rcll
pop
cmovg
and
dec
imul
push
pusha
cmpsl
push
in
pop
outsb
cmpb
fs
fadd
inc
xor
lcall
xchg
repz
sub
push
add
lcall
sbb
or
jmp
mov
adc
lea
in
mov
jo
pushf
adc
add
je
xor
jl
std
push
and
mov
test
dec
and
xor
inc
cmovns
or
addb
add
pop
mov
lock
adc
or
xchg
mov
inc
lcall
cmp
addr16
or
add
and
sub
push
adc
cs
cmp
bound
int
push
dec
in
xchg
in
adc
imul
adc
and
rorl
scas
push
jmp
sti
je
lds
and
mov
sbb
push
cmp
jge
ja
xchg
mov
hlt
xchg
push
daa
dec
pop
pop
cmp
dec
pop
adc
inc
sti
push
inc
jbe
insl
add
add
pop
mov
lcall
add
push
test
xchg
std
cmp
cmp
je
mov
stos
push
stos
sbb
test
cwtl
cmp
dec
into
mov
cmp
dec
add
xor
xor
sub
mov
pop
or
or
sub
or
add
inc
cltd
jne
fildll
pop
or
cmp
sub
pop
int
jo
sbb
jae
inc
dec
sti
adc
add
and
subl
dec
and
ret
rolb
xor
and
cmpb
insb
sbb
das
les
incl
inc
outsb
xchg
gs
xchg
into
xchg
add
sarl
mov
sbb
test
push
ss
call
or
repz
xchg
sub
pusha
jmp
or
popf
push
icebp
adc
pop
mov
in
xor
pop
cmp
int3
inc
ds
xchg
pop
pop
mov
pop
stos
mov
fdivs
jg
cmp
xor
aas
call
call
sarl
aad
clc
outsl
dec
and
cld
outsb
test
test
test
xchg
popa
aad
rorb
pop
dec
lock
jp
stos
fwait
or
push
cmpsb
sbb
pusha
or
imul
dec
aam
les
and
adc
cmp
cwtl
jmp
inc
or
xchg
push
pop
add
cmp
mov
lahf
addr16
aam
dec
sbb
inc
popa
cmpb
fidivrl
mov
test
hlt
sub
sub
sbb
push
push
lret
jmp
flds
pop
cmpsl
push
ja
ds
hlt
clc
add
push
negb
inc
arpl
dec
jmp
mov
or
push
jae
testl
sbb
dec
push
and
pop
and
in
xchg
jbe
je
dec
movsl
cwtl
cmp
shrl
in
xchg
adc
xchg
mov
dec
pushf
add
or
dec
mov
es
call
mov
mov
int3
pop
sbb
jne
repnz
fisubs
popf
sbb
sbb
or
loopne
pushf
shlb
int3
imul
mov
jmp
mov
xchg
in
in
in
sbb
xchg
sbb
or
scas
pop
daa
mov
sbbl
and
mov
add
andl
xchg
or
rolb
mov
loopne
outsl
sbb
add
data16
test
sti
and
movsl
loopne
fdivs
inc
inc
sbb
nop
sbb
dec
dec
popa
adc
loopne
cmpl
mov
sbb
dec
pop
push
test
icebp
sbb
mov
es
rol
lahf
mov
xor
add
pop
in
xchg
push
mov
les
sbb
sub
adc
xor
pop
sub
sbb
or
and
packssdw
or
and
enter
andl
lock
or
add
or
movsl
inc
push
xor
mov
aas
sbb
cmp
and
push
xor
test
aam
fldl
fld
call
mov
mov
repz
cmc
fs
xchg
mov
mov
push
lret
mov
push
shlb
inc
push
sbb
movaps
and
cmpsb
push
out
inc
cmp
jnp
shrl
nop
push
daa
inc
out
adc
pop
ret
xchg
add
inc
cmp
fidivrl
and
sbbl
mov
popa
rorl
xchg
imull
xchg
mov
adc
and
xchg
lahf
or
rcr
jmp
cmp
fwait
aas
int3
and
mov
mov
mov
mov
dec
popa
adc
add
sbb
stos
pop
cmp
test
pusha
cmpsb
arpl
cmp
fdivs
jmp
add
repnz
and
imul
pop
cmpsl
inc
add
inc
jo
test
add
test
xchg
add
inc
mov
and
pop
lock
lock
scas
and
and
mov
cmp
mov
and
mov
adc
les
and
sub
stos
and
xchg
xor
ficoml
or
inc
jne
test
pop
loopne
dec
movsb
mov
in
cmp
aam
imul
xchg
mov
push
sub
mov
adc
jns
and
mov
loopne
lds
push
aaa
aad
add
add
aam
test
fcmovbe
in
add
ds
pop
push
add
test
bound
fsubp
fisubs
jmp
jmp
adc
pop
leave
or
xchg
adc
fbstp
mov
xor
fldt
add
cmp
mov
dec
rcl
pop
pushf
popf
jo
bound
adc
les
inc
pop
das
sti
test
add
and
push
call
add
dec
loope
or
movsl
adc
icebp
and
push
sub
clc
mov
add
and
push
cmpl
dec
xchg
adc
insl
inc
mov
lods
pop
mov
in
mov
faddl
outsl
loope
sbb
push
inc
ret
int3
xchg
mov
fnclex
jle
jbe
xchg
jne
mov
lods
or
loope
outsl
lea
xchg
push
clc
or
movzwl
push
push
dec
cmpsl
pop
movsl
xor
cwtl
adc
xor
hlt
push
mov
xor
sbb
push
xor
inc
test
and
add
mov
int3
je
or
test
dec
xchg
or
data16
sbbl
jns
sar
lods
sub
add
sbb
lods
lcall
imul
mov
dec
dec
pop
inc
mov
decl
jno
mov
and
or
lock
mov
nop
push
ret
xchg
or
andl
and
sbb
aas
mov
orl
loopne
sub
inc
pop
dec
xor
sahf
test
mov
dec
mov
inc
std
loopne
xchg
clc
sub
xchg
call
pusha
dec
cpuid
dec
sub
jno
push
js
pop
jmp
sahf
or
cmpsl
shll
jge
cmc
sbb
xor
push
nop
mov
fimuls
rclb
rcll
mov
xor
mov
push
in
test
inc
xchg
cmp
popa
and
stos
xchg
or
rcrb
mov
aad
sub
add
or
loopne
push
mov
lods
xor
bound
sbb
sub
xor
push
loop
subb
lock
lods
push
jecxz
mov
rorl
inc
or
jle
or
add
push
pop
div
adc
dec
dec
jbe
lock
movsl
dec
cmp
or
mov
cs
test
js
jmp
cmp
test
imul
add
jnp
mov
ret
adc
jne
push
push
jae
push
and
addr16
or
prefetcht2
adc
xor
sbb
loope
inc
add
add
adc
fiadds
adc
pop
lret
popf
push
sbb
cmc
loope
and
xchg
aaa
shlb
pop
fiaddl
bound
je
cmc
cmpb
jno
pop
out
out
lds
push
shll
rcrb
aam
adc
rorl
mov
sbbl
dec
test
in
loope
imul
add
mov
and
sub
and
or
add
insb
divl
cmp
sti
cmpb
xor
xchg
mov
dec
xchg
pop
xlat
pop
je
test
add
mov
mov
inc
mov
push
insb
mov
xchg
mov
add
mov
daa
push
xlat
sbb
sbb
pop
or
or
movsb
outsl
fs
scas
ja
pop
sbb
int
and
mov
mov
mov
and
arpl
mov
cmp
popa
mov
jne
movl
or
scas
out
adc
push
dec
data16
sub
mov
push
adc
idivl
xchg
test
subb
inc
movsl
pop
sbb
mov
rclb
xor
cld
sbbb
or
push
mov
loopne
iret
js
outsl
cmp
dec
in
cltd
outsl
aaa
mov
cmp
sbb
sbb
movsl
sbb
popf
add
push
mov
or
or
push
imul
push
sbb
scas
inc
and
fisttpll
mov
pop
or
pop
pop
sbb
and
mov
scas
inc
inc
xor
ret
adc
out
cs
dec
adc
xchg
xchg
sbb
cwtl
sub
mov
cmpl
mov
jmp
mov
dec
jecxz
xor
out
mov
pusha
stos
insl
push
fs
test
popa
inc
sub
jp
dec
out
dec
and
mov
shlb
cltd
jo
inc
lret
je
ret
pop
or
loope
xchg
andb
pusha
scas
cmpsb
mov
ffreep
inc
adc
push
mov
rorl
repz
mov
mov
xor
fwait
sub
mov
lea
xor
rcr
test
rclb
push
pop
cmp
add
push
sbb
or
mov
jne
push
movsl
mov
scas
arpl
std
cltd
lock
dec
lret
in
shrb
mov
cltd
push
mov
shll
add
in
pop
loop
jge,pn
mov
sub
jle
lock
mov
pop
aaa
fiaddl
jnp
mov
add
clc
pop
popa
pop
push
sub
scas
xlat
inc
repnz
sub
or
adc
sub
addl
aad
lock
scas
adc
add
inc
call
mov
in
push
or
and
test
frstor
push
add
cmpsl
popa
and
roll
andl
dec
inc
adc
mov
push
or
das
jne
mov
clc
stc
inc
push
pop
inc
jno
repz
fmull
mov
xchg
add
out
pusha
xor
iret
sub
sbb
mov
jae
js
push
enter
add
add
rclb
ds
dec
and
outsb
add
je
and
loopne
adc
pop
jg
inc
aas
dec
mov
outsb
fmull
adc
leave
add
inc
test
jns
jns
sbb
mov
cmpsl
sub
push
out
rcl
rcll
cs
or
inc
cmp
mov
adc
and
adc
test
pop
sub
andl
and
mov
enter
push
dec
stos
imul
cmpsl
inc
insb
sub
imul
sub
imul
imul
or
daa
jo
xlat
xor
aas
jmp
jo,pn
dec
adc
and
test
xchg
inc
sbb
test
mov
fwait
xor
dec
mov
lods
cmp
xchg
lea
adcl
mov
jg
xchg
dec
sub
adc
xchg
jmp
fsubl
mov
les
or
and
xlat
pop
je
cmpsb
mov
outsl
pop
dec
clc
dec
xor
orl
mov
push
mov
jnp
notl
in
jb
mov
lea
xor
inc
mov
loop
add
mov
mov
or
push
lock
mov
adc
and
push
das
cmpsl
outsb
mov
xor
les
incl
out
stos
mov
hlt
clc
sbb
rolb
pop
add
cmpsl
aam
sti
loope
mov
adc
enter
fsubrl
push
shll
shrb
nop
inc
pop
sbbl
sub
add
inc
add
fwait
sbb
in
inc
jmp
pop
cmp
aad
push
jne
pop
cmp
mov
and
shlb
in
push
push
sbb
daa
js
mov
jmp
lock
sub
insb
mov
mov
call
and
inc
sbb
out
adc
call
cmp
add
test
addl
ds
or
mov
pop
mov
pop
mov
xor
mov
or
movsl
mov
pop
dec
ret
stos
mov
or
sbb
stos
dec
loope
push
aas
xabort
lock
jne
inc
les
and
jno
xor
adc
xchg
adc
pop
xchg
mov
imul
mov
mov
sub
add
aam
or
xor
adc
jl
cmovno
mov
dec
call
rcrl
ret
or
add
inc
fnstcw
shrl
adc
filds
les
inc
cmp
je
pusha
xor
adc
fwait
enter
add
jne
lods
daa
lods
mov
out
subb
mov
push
fistpl
sub
lret
mov
loop
push
fcoms
fistl
sbbb
nop
pop
aaa
pushf
int3
dec
mov
inc
andb
cmp
or
out
jb
hlt
inc
mov
or
dec
pop
gs
jbe
sti
inc
cmp
jb
add
push
or
test
popa
and
movl
sldt
mov
shrb
in
cld
inc
das
dec
mov
pop
or
xchg
push
lds
loope
sub
fcmovb
cmp
fwait
and
inc
mov
adc
out
xchg
mov
rolb
add
mov
rol
loope
cmp
call
push
aaa
test
and
push
push
jnp
xchg
decb
pop
mov
shlb
mov
pusha
loopne
add
and
sbb
jns
sbb
mov
mov
xchg
out
inc
push
fdiv
ret
or
jmp
das
bound
xchg
xor
and
pop
nop
pop
loop
sbb
add
push
push
das
adc
icebp
cmpsl
or
sub
jno
aam
fadd
or
adc
insb
xchg
bound
push
jbe
dec
mov
pop
es
popa
mov
add
xchg
icebp
pop
pop
iret
mov
adc
adc
mov
push
sbb
inc
sub
fists
push
sbb
inc
psrlq
ficomps
add
lcall
sbb
fstpt
inc
jge
addb
dec
imul
and
xlat
lock
and
or
and
ss
inc
lds
pop
add
add
jae
shlb
enter
add
dec
adc
test
add
add
in
mov
sbb
or
push
adc
adc
dec
cmpsb
imul
push
cmpsl
cmp
push
add
add
or
lret
arpl
cmpsl
pop
or
and
dec
push
jge
and
or
aaa
movb
xor
and
es
cmpsb
mov
sbb
xor
add
sbb
and
mov
add
xor
cmc
add
cmpsb
xor
adc
sbb
inc
call
ret
in
xor
jecxz
add
pop
inc
or
pushf
fmull
xchg
das
test
into
cmpb
mov
jmp
add
js
mov
sbb
pop
jo
or
outsb
dec
dec
pop
pushf
arpl
rcrb
jle
inc
imul
popf
mov
and
rolb
rcrb
js
pop
in
dec
pop
test
push
adc
sub
xchg
cmp
cmp
xorb
pop
rcr
imul
adc
jae
loopne
push
sub
popf
mov
movsb
add
enter
xchg
rclb
cmp
pop
add
push
pushf
nop
mov
ss
popa
mov
fisubrs
add
cmove
dec
dec
dec
dec
push
push
sub
dec
dec
pop
pop
xorl
push
push
push
mov
addr16
sub
scas
das
add
jg
mov
in
push
inc
aad
ss
xchg
je
data16
in
and
loop
pop
js
pushf
pusha
mov
inc
cmp
adc
stc
nop
lahf
imul
or
popf
cmpsb
icebp
push
adc
pop
xchg
arpl
adc
jae
pop
and
ror
inc
movsl
data16
pop
mov
fwait
or
call
lods
add
test
sub
ds
add
daa
xor
pushf
mov
ljmp
pop
popf
ja
nop
idivl
dec
or
push
add
mov
rclb
jle
or
adc
fildl
mov
or
mov
inc
pop
nop
inc
mov
cmp
jb
xchg
sbb
mov
mov
insl
pushf
fcom
dec
enter
dec
test
cmp
in
dec
scas
and
pop
popf
imul
add
add
mov
or
insb
loopne
xor
shrb
imul
xchg
ss
xchg
push
cmp
xor
inc
push
xchg
xchg
and
enter
js
fadds
add
test
ss
jp
or
adc
imul
dec
lcall
pop
sub
and
and
and
adc
pusha
pop
cltd
adc
nop
sbb
and
or
mov
xor
xor
sbb
inc
lods
test
lret
fmuls
or
pusha
and
mov
jb
and
aas
test
loope
pusha
ljmp
pusha
push
sbb
and
dec
jo
movsb
or
xor
and
xor
add
loop
push
ret
pusha
or
and
pop
jo
or
ret
mov
xor
dec
insb
push
and
std
pop
sbb
mov
jo
pop
call
sub
int3
push
ljmp
mov
lahf
popaw
push
pop
lds
inc
ss
nop
cmpsl
sbb
xlat
in
dec
outsb
sub
fdivrs
inc
adc
dec
popa
xchg
loopne
fnstenv
into
dec
sbb
dec
test
xchg
fdivr
nop
or
aam
mov
pop
push
fiaddl
jne
pop
addl
insl
andb
pop
dec
pop
dec
dec
or
pop
fsubrl
test
ljmp
or
xchg
mov
pop
push
dec
add
pop
and
lock
clc
hlt
mov
les
inc
xor
dec
cmp
ret
push
fcompl
shlb
inc
inc
sub
jmp
mov
and
inc
xor
fwait
mov
mov
das
dec
fdivl
mov
sbb
fstl
test
lods
jmp
or
add
sarl
or
daa
nop
dec
rcrl
hlt
faddl
or
fisttpll
push
mov
fldl
lahf
add
ret
or
arpl
jae
ret
add
fnstsw
icebp
clc
cld
and
and
and
add
lock
cmp
xlat
push
jnp
repz
or
icebp
fdivs
push
in
xor
mov
outsb
sub
jl
ret
in
stc
fnstsw
and
dec
int
test
in
das
arpl
orb
ljmp
add
add
je
adcb
dec
sub
push
add
out
loopne
push
mov
pop
pop
lea
xchg
and
andl
in
sarb
dec
loopne
dec
sub
xor
lret
je
pop
xlat
fsts
or
rolb
or
xchg
shl
pusha
adc
add
cmpb
call
sbb
cmp
or
dec
leave
or
fisttps
inc
call
sbb
push
mov
popf
and
outsl
cwtl
je
jg
xchg
movb
pop
and
mov
aas
push
cli
mov
fistl
sbb
adc
daa
jl
lret
pop
pop
add
push
int
jb
push
stos
sub
jnp
fldcw
mov
or
or
push
or
cmpsb
ds
popf
dec
inc
loopne
mov
sub
pop
mov
mov
data16
mov
or
pusha
mov
mov
cmpsl
das
add
add
in
jne
push
or
jmp
imul
add
pop
jns
pop
push
push
ret
push
xchg
pop
mov
xor
sbb
pop
mov
mov
enter
rorb
xchg
jle
hlt
dec
mov
jbe
push
mov
in
and
insb
cmp
push
and
push
loope
add
test
outsl
rclb
enter
push
lea
mov
sub
test
cmp
jnp
xchg
sbb
xor
mov
xorb
pop
repz
cmp
mov
fwait
xchg
inc
mov
mov
sub
dec
add
sub
shlb
or
jnp
jnp
mov
pop
sarb
out
fisttpl
jmp
pushl
push
lret
scas
stc
mov
push
test
daa
xor
dec
sub
adc
cmp
loop
cmp
lock
or
fistps
dec
inc
and
jmp
sub
sub
xchg
and
inc
inc
add
pop
ror
mov
addr16
jb
sbb
mov
cmp
cmp
nop
pop
push
cwtl
or
sbb
lahf
adc
jne
xor
negb
inc
push
test
fiadds
adc
es
adc
adc
and
sbb
insb
jb
push
sub
test
mov
jo
bound
sbb
ret
pop
or
dec
cltd
mov
cmp
mov
inc
inc
cs
push
and
sbbb
lock
movsb
lock
jo
adc
add
lock
sbb
call
lods
iret
or
add
nop
scas
ljmp
je
jo
cmp
mov
mov
jne
push
sbb
out
hlt
jns
xchg
adc
sub
nop
test
iret
jge
jmp
xchg
add
mov
or
or
mov
mov
mov
lock
mov
add
cmp
fnsave
push
lret
cltd
dec
das
outsb
or
jmp
and
or
cmc
cmp
fmul
jmp
sub
push
fwait
test
jl
cmpsb
mov
sub
add
lods
popf
enter
pushl
hlt
mov
fstpl
lds
pushl
jo
add
imull
movsb
cmp
adc
adc
movb
add
push
rcrl
or
or
aam
jns
movsb
aam
mov
add
fs
pop
in
and
cmp
xlat
test
arpl
in
call
call
push
sub
pop
xor
xchg
loop
ret
adc
adc
cmp
inc
add
push
decb
cmp
aas
sbb
ret
adc
dec
or
sub
sbb
lret
lea
mov
cmp
mov
xchg
fs
xor
or
mov
cmp
push
cli
inc
nop
xchg
shrb
orb
mov
cmpb
jbe
and
fmuls
leave
std
dec
cmp
wrmsr
adc
sub
sbb
xor
mov
cltd
jp
adc
out
sbb
mov
jmp
arpl
dec
in
inc
mov
adcb
xchg
jmp
pusha
sarl
or
test
or
xlat
or
in
test
pop
inc
xchg
cmpsb
sub
dec
fisubrl
xor
dec
xor
xor
and
sub
inc
inc
sub
js
scas
xor
cmp
fsubrl
lahf
andl
test
add
push
xchg
or
xor
loopne
mov
dec
push
push
aaa
stos
addr16
add
andb
xor
aam
rorb
cmp
mulb
sub
pusha
mov
jb
inc
cwtl
or
adc
inc
les
sub
mull
js
push
pop
jo
stos
hlt
scas
and
das
das
daa
xor
ljmp
xchg
cvtpi2ps
jge
xor
in
ss
cmp
push
xor
push
ficoms
stos
pop
scas
imul
jno
cs
add
out
test
sub
add
inc
mov
dec
adc
inc
or
mov
ds
bound
ret
stos
add
mov
jnp
cmpsl
neg
js
ja
push
out
enter
adc
fs
scas
mov
add
lea
pop
sub
xor
aam
mov
mov
ret
mov
bound
mov
adc
or
mov
clc
xchg
imul
fnstsw
mov
add
stc
jle
sahf
jbe
cld
push
inc
dec
dec
imul
adcb
mov
pushl
add
fs
xor
jae
push
or
xchg
add
out
std
daa
shlb
adc
jmp
jmp
push
push
imul
lret
mov
fnclex
sti
call
fidivrl
out
in
arpl
sub
pop
mov
jge
cmpsb
test
dec
xchg
aas
data16
mov
adc
push
dec
xor
lock
xchg
xor
mov
add
xchg
js
mov
push
js
or
sbb
sub
add
shrl
mov
cli
cmp
adc
movsb
pushl
fsub
add
loop
popf
sbb
add
lret
mov
dec
add
mov
sti
cmp
loop
rorl
test
mov
call
adc
sbb
xor
jae
jne
dec
sub
je
jno
mov
adc
jb
push
mov
sub
push
add
or
pop
push
pop
gs
fidivl
movsl
leave
clc
sbb
lock
adc
mov
shrb
call
pop
imul
mov
mov
icebp
idivb
ret
rorb
inc
outsl
mov
bound
mov
ss
mov
jb
dec
dec
pop
mov
iret
mov
push
faddl
inc
jg,pt
inc
scas
imul
jp
or
movsl
arpl
push
jl
mov
or
mov
lea
xchg
add
es
pushf
push
ret
xchg
mov
push
rorb
xor
push
sbb
sub
lods
movsb
inc
and
out
jo
mov
add
jl
lea
mov
enter
mov
pop
lods
ja
mov
outsb
or
sbb
popfw
fnstcw
cmp
clc
stos
adc
adc
movsb
lret
and
sbb
rorb
pop
cmp
add
iret
sub
sub
sub
icebp
jbe,pn
or
fs
push
inc
lds
gs
pop
and
or
insb
divl
pop
and
lock
sbb
push
addr16
roll
loopne
test
jnp
repnz
es
push
pop
adc
hlt
ljmp
dec
subb
nop
mov
xor
ret
and
inc
pop
cmp
pop
add
dec
sbb
subb
rorb
loopne
test
mov
and
rclb
loope
or
iret
pop
in
pusha
push
mov
and
dec
ja
mov
mov
sub
xchg
xor
and
jl
mov
push
dec
push
jle
mov
sub
dec
nop
pop
push
mov
push
sbb
addl
add
pop
inc
xlat
push
subl
insl
movsb
xchg
pop
out
cwtl
repz
mov
xorl
and
add
adc
adc
dec
push
sub
testl
or
outsl
pop
sub
mov
cmp
push
add
add
xchg
ljmp
add
cmpsb
es
insb
jecxz
push
rcrl
mov
adcl
pop
repnz
fld
or
xchg
lods
add
call
imul
add
inc
popa
or
mov
clc
mov
and
or
test
jbe
dec
lcall
inc
cs
or
cltd
mov
xor
push
add
cmp
or
cmpsl
sub
add
and
mov
insl
mov
push
adc
addl
push
jae
adc
test
xor
orl
nop
push
cmpsl
adc
roll
lock
jge
in
add
fmuls
pop
pop
lea
divb
adc
adc
cmpb
add
and
xchg
xlat
adc
push
frstor
add
mov
xchg
add
addr16
nop
test
dec
cmp
push
daa
jmp
sbbb
xor
cld
insl
and
pop
jl
push
cltd
movsb
enter
dec
sub
push
and
adc
inc
xchg
inc
cmp
data16
add
lcall
inc
ljmp
cmp
scas
fwait
inc
stos
jbe
ss
movsb
xchg
push
mov
jge
mov
jne
xchg
add
push
push
lea
push
push
push
bound
push
fs
sbbl
pop
in
add
sbb
mov
mov
hlt
inc
stc
pop
std
test
inc
and
int
lock
data16
in
sbb
xchg
daa
dec
sti
add
push
sbb
lock
int
dec
or
hlt
sub
adc
and
je
pop
jl
mov
adc
dec
xor
lock
shlb
in
test
js
sbbb
mov
stc
dec
fcomps
fdivr
adc
pop
sbb
rorb
jg
push
mov
movzbl
andl
shlb
sbb
sbb
pop
cmp
push
inc
or
or
rorb
pop
adc
insl
enter
test
push
add
aam
cmp
cmp
jg
sub
sub
cmp
and
fucomip
mov
push
xchg
add
mulb
icebp
xor
pushf
mov
mov
add
adc
xchg
or
mov
sub
add
mov
repnz
cmp
insb
in
add
call
out
test
and
mov
iret
rorb
das
add
or
popf
out
mov
test
jmp
adcl
sub
or
or
rol
add
shr
movsl
xchg
neg
out
push
adc
adc
mov
xchg
push
push
push
or
dec
adc
fiadds
sub
lods
adc
push
add
loope
in
sbb
dec
add
addr16
cmp
dec
icebp
mov
add
mov
mov
add
inc
add
jbe
test
sub
dec
adc
mov
cmp
mov
add
add
ljmp
dec
fistl
fs
fs
xchg
mov
mov
jne
mov
mov
in
mov
add
mov
jo
dec
and
mov
push
cwtl
fdivr
enter
mov
out
pop
mov
cmp
xorl
jne
or
and
out
push
jns
ss
insb
xor
sub
mov
dec
mov
sbb
movsl
mov
lfs
sbb
daa
ljmp
icebp
in
imul
and
or
call
push
dec
outsl
stos
mov
clc
into
fbstp
test
cld
mov
add
les
add
lock
mov
sub
rolb
and
sahf
aam
je
in
mov
sti
lcall
sub
push
mov
dec
or
pop
scas
cmp
and
and
push
mov
pop
mov
mov
fiadds
adc
cmp
inc
cmp
inc
scas
mov
add
or
and
inc
imul
mov
mov
push
add
pop
popa
scas
test
js
ret
shll
pop
add
push
xchg
andb
sub
jo
addb
cmpsb
push
icebp
push
pop
sbb
popf
loopne
das
adc
stc
in
aam
pop
sub
cs
add
mov
ret
loope
aas
outsl
add
and
lea
add
je
outsl
inc
sbb
arpl
fnsave
push
cmp
sub
mov
sbb
or
sub
mov
or
test
nop
lock
jecxz
pop
xor
xor
push
jne
dec
dec
adc
ss
push
jmp
sbb
leave
pop
cmp
inc
push
rcll
js
jp
test
mov
mov
add
ret
stos
xor
test
stos
adc
dec
nop
arpl
xor
add
pop
sub
sub
je
cmp
jb
cmp
ja
pop
sub
push
push
add
pop
push
or
or
push
or
and
cs
xlat
mov
scas
in
push
inc
dec
jne
mov
lock
mov
jne
xchg
jge
pusha
xchg
dec
jne
sub
stc
sbb
or
add
je
or
push
add
push
push
leave
push
pusha
sbb
add
daa
add
sbb
and
jmp
add
jmp
dec
addb
add
xchg
fcmovb
mov
sub
push
mov
add
mov
inc
mov
add
ja
out
fs
fildl
loope
out
mov
add
sti
outsl
fxch
xor
fisttpll
push
fildll
mov
xlat
imul
xchg
daa
adc
mov
dec
jne
adc
pop
xor
xor
bound
sub
cmpl
adc
cmp
or
adc
ret
lods
or
and
shlb
mov
cmp
je
dec
push
testb
mov
aam
adc
cmc
push
mov
ret
xlat
sar
sbb
add
dec
movb
roll
shll
or
les
std
dec
add
pop
mov
dec
xor
add
adcb
nop
sbb
fisubrs
add
push
test
push
mov
fcoml
mov
add
lods
mov
add
mov
outsb
dec
push
lods
xor
pop
mov
nop
xor
pop
xor
xor
jns
dec
pop
xor
lods
xchg
out
and
mov
pop
in
sbb
xor
rolb
and
xor
xor
jb
push
enter
shlb
aam
popa
je
cmp
adc
sub
lcall
inc
pop
and
inc
or
sbb
dec
dec
or
subb
jne
and
push
nop
add
outsl
pop
adc
mov
mov
push
shrl
xor
and
jg
mov
cmp
jnp
mov
lahf
dec
add
fsts
das
movsb
pusha
mov
adc
orb
cltd
push
shl
adc
push
test
das
cs
push
push
sti
inc
js
or
cmp
or
fs
jnp
push
sbb
imul
sbb
or
push
xchg
jge
inc
popa
push
jg
enter
frstor
mov
and
cmp
bound
dec
or
js
in
test
adc
mov
inc
loope
xor
in
push
xor
orl
mov
rolb
cmpsl
stos
mov
ss
jae
and
mov
push
test
sbb
sub
pop
aaa
mov
xchg
push
mov
pop
dec
outsl
and
or
lahf
inc
nop
add
inc
mov
ss
sub
dec
out
xchg
jnp
stc
mov
dec
xchg
fsubr
repnz
push
mov
add
sub
jbe
dec
cs
sbb
call
lret
pop
add
cli
and
add
call
sub
rclb
pop
nop
or
mov
or
les
dec
sub
dec
mov
push
xchg
test
movsl
out
dec
bound
xor
push
inc
mov
xchg
xlat
movsl
pusha
repnz
add
fdivrl
sahf
jle
add
add
dec
in
rcr
jle
pop
pushf
divb
add
rcr
mov
and
sub
pop
cmpsb
adc
and
rclb
push
push
cltd
daa
int
or
cld
ss
shlb
or
adc
push
es
xor
mov
mov
sbb
imul
std
addb
movb
roll
stos
adc
enter
icebp
xor
das
mov
adc
push
shlb
pushf
notb
sbb
pusha
loopne
jmp
hlt
push
mov
hlt
sbb
xchg
mov
mov
fs
cmp
hlt
stc
xchg
pop
jnp
pop
mov
test
jb
inc
adc
mulb
ret
mov
lods
inc
fisubl
cmp
push
rcrb
ret
mov
nop
fimull
pushf
imul
mov
mov
shlb
js
out
cs
bsr
enter
orl
mov
push
sbb
add
or
dec
or
push
add
out
push
inc
dec
cmp
or
mov
popa
and
xor
push
das
jb
notl
inc
insl
mov
pop
jge
push
adc
cmp
pop
or
jo
xor
push
xlat
mov
fiaddl
lock
and
dec
mov
add
movsb
fwait
jae
jl
mov
push
adc
std
fiadds
push
xor
mov
out
or
mov
inc
and
adc
adc
movsl
mov
jmp
inc
rclb
int3
push
jg
cld
sbb
js
cs
and
jae
sub
repnz
inc
mov
jno
push
fildll
or
rol
das
ret
push
icebp
add
jle
push
ljmp
push
inc
sub
sub
cmpsl
rolb
mov
and
and
imul
push
dec
sub
sub
das
jne
push
or
and
pop
imul
insl
fistpll
adc
add
lods
shll
jne
mov
add
push
pop
xchg
sbb
xchg
rolb
adc
jb
mov
add
gs
lret
mov
push
cmp
fstpl
xor
movsb
mov
int3
test
lods
call
fnsave
push
cltd
movsb
xor
dec
int3
insb
push
es
mov
fs
ss
mov
test
lret
mov
and
pop
mov
sbb
jl
in
insb
in
mov
mov
mov
push
inc
adc
xchg
dec
sub
cmp
push
in
adc
imul
push
sbb
ret
add
in
dec
aam
hlt
xor
pop
dec
pop
sub
es
or
in
add
push
scas
fdivs
loope
jmp
sahf
sbb
sarb
push
jbe
push
inc
inc
les
and
jmp
outsb
repnz
or
and
adc
sbb
loopne
or
add
iret
mov
arpl
ljmp
mov
sub
inc
add
in
cmp
nop
and
push
mov
inc
dec
sub
shlb
adcb
jne
aam
pop
mov
xchg
xchg
sarl
loopne
pop
mov
or
stos
or
std
fs
xchg
clc
add
xor
scas
jp
mov
fsubs
jg
sub
push
add
mov
mov
cmpl
loopne
ret
loop
aam
pop
nop
jmp
pushl
test
insl
cmp
jge
fcoms
pop
ja
insb
sub
jle
cmc
movsb
in
and
repnz
pushf
pop
ret
loope
mov
pushf
mov
in
mov
pop
addr16
sbb
cmp
movsl
sbb
cwtl
pop
sti
inc
imulb
xor
mov
lods
fisttpll
inc
nop
gs
das
jge
lahf
fwait
roll
or
aas
jo
loope
jmp
test
push
lods
call
mov
pop
rolb
nop
addb
inc
adc
in
xor
call
lcall
jae
push
cmp
jp
and
add
aas
mov
outsl
packssdw
push
rolb
inc
imul
fisubrs
aas
popa
adc
imul
inc
inc
cmpsb
insl
xlat
mov
roll
mov
jae
ja
sbb
mov
cmpsl
pop
out
or
jb
aaa
or
sbb
inc
iret
dec
jne
mov
xchg
outsb
push
not
sbb
insb
fcomip
or
bound
inc
jle
mov
aaa
or
or
insl
inc
inc
mov
mov
or
xlat
xchg
mov
fiadds
inc
dec
add
scas
ja
sbbb
andl
das
fs
add
scas
loope
je
and
ret
sarb
scas
jecxz
gs
bound
push
or
adc
sbb
sub
xchg
jo
out
es
test
pop
lods
cmp
inc
mov
adc
inc
scas
jnp
or
les
idivl
add
push
shlb
fmull
cmpsl
fsts
mov
lock
das
inc
jg
push
in
inc
lock
inc
andps
mov
dec
pusha
js
mov
xorb
std
mov
leave
ja
ffreep
push
mov
inc
jg
mov
int
adc
lods
int
sbb
stc
aas
sarb
dec
xor
sub
mov
or
test
push
int3
testb
inc
icebp
fdivrl
pop
cwtl
push
push
jns
inc
inc
cmp
xchg
jno
js
xchg
jl
push
mov
out
pusha
dec
gs
rcrl
das
pop
shll
push
in
fidivrs
int3
shlb
dec
jl
in
push
push
nop
jge
aaa
cs
aaa
pop
pushf
sahf
inc
sbb
in
pop
pop
int
rcrl
scas
and
sub
mov
in
push
pushf
movsl
cs
cmpsb
pop
imul
scas
push
loop
insl
fldcw
and
and
sbb
push
pop
mov
add
pop
push
mov
cmp
pop
scas
pop
sbbl
and
daa
push
aaa
push
jnp
das
mov
int3
mov
in
call
sbb
bound
adc
mov
adc
jg
mov
add
or
cmp
lds
push
mov
mov
imul
js
cld
test
mov
mov
xor
dec
out
sahf
out
sbbb
in
adc
fidivs
push
fs
out
in
mov
pushf
mov
enter
insl
cmp
xacquire
cs
out
fidivl
push
or
push
and
mov
xor
or
xor
inc
add
sbbb
push
inc
lahf
fists
jnp
xor
push
mov
adc
pop
mov
daa
xchg
pop
fcmovb
and
jg
and
push
sub
cmpb
out
les
adc
and
pop
rcll
test
mov
int3
fcomps
pop
fiaddl
adc
int3
int
fnstcw
or
pushf
xor
rcr
aam
test
aaa
loopne
cwtl
ja
sarl
les
es
push
popf
idivb
int
in
je
mov
push
test
jl
jo
dec
out
mov
pop
lock
cmp
pop
fmull
jl
push
jmp
jmp
mov
in
cmpsb
push
fs
mov
xchg
int
icebp
in
icebp
mov
data16
clc
xor
out
inc
ret
decb
mov
addb
push
ds
mov
lods
sub
aas
add
cs
scas
hlt
xor
inc
aad
pop
adc
and
adc
mov
jo
dec
xchg
fs
xchg
mov
fmuls
mov
push
mov
data16
cld
sbb
aaa
int3
push
les
data16
dec
sti
into
testb
xor
pop
aaa
jg
cmp
into
notb
nop
cmp
and
push
pusha
cmp
add
push
iret
sarl
push
aam
cmp
pop
pushf
cmp
jnp
xchg
jo
push
enter
add
shll
cs
dec
dec
mov
iret
insb
dec
dec
les
cwtl
dec
push
cmpsb
std
fldcw
push
hlt
push
cwtl
push
inc
cs
repz
loopne
les
arpl
mov
push
or
mov
fdivl
rep
push
xchg
jns
jp
lods
subb
int
stc
push
or
test
int3
in
mov
orl
mov
jl
xor
repz
out
incb
sub
adc
mov
movsb
xchg
xchg
pop
xchg
xchg
shlb
and
jnp
outsl
mov
pushl
add
iret
imul
jnp
jae
push
mov
mov
push
test
dec
lods
enter
sub
jo
scas
push
daa
in
in
enter
ss
cld
int3
das
xor
pop
mov
aam
inc
sbb
lds
mov
sti
xor
sbb
dec
testl
dec
pop
ret
daa
cmp
sub
mov
mov
add
or
inc
inc
or
pop
push
push
mov
push
cmp
xchg
jl
xchg
mov
inc
fisubs
push
fsubs
add
aad
lahf
in
adc
and
mov
aas
sbb
xchg
or
cmpsl
mov
je
sbb
mov
push
outsl
inc
pop
enter
inc
inc
scas
inc
add
sub
dec
inc
dec
or
nop
add
cmpsl
fxch
fistpll
or
sub
cs
mov
lods
testl
stc
fdivr
filds
fadds
in
add
repz
or
inc
or
pop
je
adc
cwtl
hlt
idivl
push
je
cmp
repz
in
push
push
clc
push
adc
cmp
stc
out
pop
jbe
popa
adc
nop
cli
out
sub
jbe
std
imull
cmp
mov
mov
loopne
xchg
addr16
bswap
push
adc
insb
mov
out
ds
pusha
lods
in
mov
add
mov
repz
mulb
sub
int3
sbb
enter
pcmpgtb
sbb
mov
das
out
test
les
cmp
clc
push
daa
add
pxor
repz
fidivs
push
sub
les
cs
in
shrl
xor
mov
push
lods
xor
ds
roll
mov
xor
mov
imul
sub
jo
out
cmp
ret
nop
add
mov
imul
test
xchg
add
out
cmp
and
mov
enter
push
mov
fildl
cmpl
and
mov
insb
push
dec
enter
mov
and
mov
lods
clc
push
notb
clc
add
mov
in
or
xchg
mov
iret
repz
mov
add
inc
out
ds
pushw
mov
nop
test
lcall
push
enter
xchg
and
sbb
fisttpl
ret
ret
jnp
ja
cmp
push
movsb
mov
push
sarb
cmpsl
stc
mov
push
clc
pop
rol
fs
cmp
add
fs
dec
aad
mov
rcl
pop
outsl
adc
sbb
lods
push
add
jl
cmp
add
or
nop
add
add
add
push
inc
addl
add
pop
adc
inc
scas
inc
call
add
or
rcr
insb
push
mov
and
cmpsl
stc
fisubl
faddl
adc
inc
dec
repz
mov
inc
popf
in
repz
cld
sbbb
cmp
imul
sbb
mov
push
call
mov
and
jnp
jge
xchg
push
hlt
push
adc
cmpsb
pop
sub
scas
adc
xor
aas
push
insb
inc
mov
lahf
xlat
mov
dec
pop
testb
movsb
sbb
push
loopne
out
push
pop
inc
xchg
add
or
or
inc
jbe
in
mov
or
mov
cmpsb
push
test
pop
sub
test
lea
adc
pop
and
adc
andb
popf
jne
out
je
in
push
adc
add
hlt
outsb
mov
fmul
shll
es
push
inc
aam
lods
int
mov
clc
popa
bound
push
xchg
jo
xor
inc
pop
jae
out
fildl
push
enter
push
mov
in
push
test
mov
in
sbb
push
insb
movsb
in
cmp
ret
jl
mov
inc
push
lea
out
add
add
or
push
and
mov
push
jg
xchg
pop
mov
fwait
mov
movntq
rorb
sub
push
mov
cmp
out
icebp
bound
push
push
daa
cmpsb
pop
rorl
dec
xchg
adc
addl
loop
ret
shrb
fs
pop
mov
mov
inc
pop
adc
or
adc
test
xor
sysret
or
mov
inc
or
pop
add
pushf
adc
mov
arpl
jb
push
push
dec
jae
dec
pop
add
mov
or
insl
mov
ret
cmpsb
adc
xchg
or
push
or
sub
add
cltd
pop
dec
pop
clc
testb
ja
jo
pop
push
js
xor
and
pop
or
dec
push
push
inc
and
pop
std
iret
test
push
fiadds
insb
addr16
data16
rcrb
pop
fs
mov
rep
jl
jo
mov
pop
mov
or
fldenv
xor
pop
xchg
add
loop
insb
cwtl
inc
jo
inc
push
dec
movsl
push
pop
pop
or
xor
adc
xchg
add
inc
xchg
add
out
loope
orb
dec
push
add
push
mov
aam
push
or
adc
pop
push
addb
outsb
mov
ja
pop
bound
aaa
mov
mov
loope
adc
lea
inc
inc
or
nop
add
jae
xorb
add
insb
push
jge
and
popf
jb
xorb
cld
lret
mov
inc
jo
hlt
and
clc
jecxz
pushl
dec
insl
faddl
mov
lds
addb
inc
jae
popa
cwtl
or
fdivrl
mov
mov
mov
neg
sub
xor
adc
dec
xchg
lods
mov
sti
imul
inc
shlb
pusha
mov
sub
xlat
adc
mov
mov
adc
mov
fistpll
adc
movsb
mov
lcall
cmp
cmp
dec
fdivl
and
and
das
test
ret
pop
lret
ds
mov
ret
cmp
adcb
pusha
loope
lods
jae
mov
iret
push
xor
clc
lea
js
cmp
pop
adc
adc
shrb
push
dec
pop
aaa
mov
or
or
xor
and
movsl
xchg
icebp
add
dec
push
popa
jno
push
add
das
push
add
clc
es
xchg
jb
inc
jns
dec
or
add
movsb
mov
out
mov
mov
test
sbb
call
xor
or
and
das
inc
xchg
test
sbb
sbb
mov
mov
test
movsb
xor
mov
lea
popf
xor
bnd
xchg
jb
dec
decl
enter
jp
rcrb
adc
bound
sbb
out
dec
add
pop
lds
shrl
push
out
jbe
fisttps
inc
adc
mov
in
loopne
cmp
inc
mov
dec
xlat
enter
sar
xchg
sub
data16
xchg
pushf
andb
xchg
movsb
jg
cmpsl
scas
sbb
jl
dec
adc
mov
lock
ret
add
outsb
imul
in
nop
push
iret
sbb
hlt
je
aam
mov
jns
iret
sti
and
add
lret
cmp
sahf
lret
cmp
test
jno
inc
push
push
add
xchg
sbb
cmovo
add
add
push
add
dec
sahf
cmp
add
add
in
xchg
pop
adc
adc
adc
dec
sahf
cmp
push
or
or
or
xchg
daa
push
mov
and
sahf
cmp
repnz
adc
adc
adc
sub
cs
xor
cmp
repnz
sbb
sbb
sbb
daa
dec
sahf
cmp
daa
dec
fiadds
adc
inc
ds
adc
ret
pop
test
xor
ja
int
sbb
push
notl
sub
clc
clc
inc
push
sbb
clc
push
sbb
clc
clc
clc
sbb
clc
clc
clc
fs
inc
push
clc
clc
clc
nop
inc
push
sbb
clc
clc
inc
push
sbb
clc
push
sbb
clc
clc
clc
sbb
clc
clc
clc
fs
inc
push
clc
clc
clc
stc
dec
push
sbb
clc
adc
daa
dec
sahf
cmp
das
inc
cmp
dec
loop
leave
xchg
ds
aas
dec
pop
push
daa
xchg
xchg
fcoml
mov
jecxz
and
push
ret
mov
into
hlt
push
push
das
adc
dec
jle
sahf
push
aas
or
mov
lret
lock
push
leave
xchg
xchg
inc
push
pop
lock
push
mov
jle
lock
imul
lods
pop
add
leave
pop
pop
or
pushf
dec
in
jmp
xlat
and
scas
xchg
fucomi
cld
mov
outsl
std
lret
mov
cli
jmp
testb
sub
push
call
add
scas
je
xor
inc
pop
or
fisubs
fiaddl
adc
adc
insl
or
lcall
xor
dec
jae
in
inc
sub
addr16
jns
test
pusha
imul
insb
cli
push
lret
pop
test
xchg
dec
jg
js
mov
pusha
mov
jl
fwait
loopne
out
mov
insb
mov
out
push
pop
add
jl
inc
mov
ret
dec
xor
xchg
lret
sbb
and
push
dec
sub
and
sub
test
cld
das
xor
mov
cmp
cmp
enter
fs
aaa
push
jle
daa
push
adc
insb
mov
push
fidivrs
je
adc
inc
push
pop
orl
arpl
aas
mov
mov
lcall
xchg
mov
adc
cmpb
mov
loopne
inc
push
cld
add
pop
mov
repz
aaa
fistl
cmpsl
sti
outsb
inc
xchg
subb
mov
cmc
jbe
cltd
mov
test
mov
insb
mov
jae
or
notl
pop
adc
jb
add
add
add
cmp
sbb
dec
out
repnz
gs
iret
fcomps
sti
std
jnp
lock
dec
jge
cmc
xchg
add
cmc
adc
adc
add
sbb
inc
push
xor
out
repz
fmuls
jecxz
cmc
sbb
ficoms
shlb
rorb
test
nop
aam
cld
shll
scas
jnp
xor
movsl
cmp
inc
ret
mov
adcb
adc
std
das
popa
push
addr16
dec
jge
push
jns
pop
lahf
cmp
scas
sbb
enter
cmp
mov
ss
orb
and
scas
inc
sub
jnp
inc
mov
mov
jge
cmp
push
pushl
sub
nop
mov
or
insb
testb
sbb
lods
mov
call
mov
mov
les
mov
jns
pop
or
je
das
sbb
xchg
or
cmp
mov
cmp
sub
pusha
push
paddusb
loope
add
pop
scas
mov
sub
jbe
ret
add
or
fbstp
dec
das
and
inc
pop
add
add
jno
call
cmpsl
stos
add
fiadds
outsb
dec
or
aaa
pop
add
in
aad
movsl
fisubs
into
movsb
cmpb
jne
xchg
lcall
cwtl
rolb
or
lahf
out
adc
xor
xchg
adc
repnz
sbb
lret
push
in
test
aam
clc
inc
and
in
mov
sbb
and
pusha
push
jo
xorb
and
nop
and
leave
inc
cwtl
mov
mov
xchg
pop
mov
sarb
loopne
in
jb
add
mov
and
xchg
mov
and
and
das
xchg
mov
shl
add
dec
and
jo
pop
leave
inc
mov
xchg
mov
cltd
dec
pop
and
add
leave
mov
and
pusha
add
loopne
push
inc
xor
adc
mov
orb
or
add
mov
lcall
je
mov
lcall
loopne
int3
enter
enter
fcomp
fxch
loopne
jecxz
sbbl
in
nop
xchg
push
mov
popa
adc
rcrb
notl
and
and
popa
je
xor
xchg
icebp
ficoms
lock
call
mov
add
iret
sub
loopne
push
or
hlt
adc
mov
out
sub
sub
inc
out
sahf
out
push
xor
dec
iret
sarl
push
add
out
ds
jl
nop
sbb
jns
jnp
lahf
push
test
mov
sahf
out
jnp
les
fcompl
xchg
out
call
or
add
out
ds
push
sbb
and
out
sarb
dec
push
pop
das
push
mov
sbb
test
sbb
je
imul
push
mov
fsubs
sub
call
repnz
fisubrs
or
jg
fidivs
dec
pop
mov
pusha
imul
xchg
js,pn
fbstp
sbb
jl
movq
sub
adc
adc
jl
jl
movsb
lds
call
or
and
mov
pop
pop
push
push
adc
or
jg
lcall
adc
adc
add
push
sbb
sbb
pop
add
jge
sbb
add
sbb
sbb
les
std
sbb
divl
adc
sbb
add
xchg
data16
negb
add
push
or
insb
pusha
adc
adc
cmp
dec
push
mov
push
push
enter
rclb
daa
adc
sbb
jno
xchg
cwtl
outsb
adc
mov
push
aas
pop
xor
inc
xchg
add
inc
sub
lret
out
sahf
cmpsl
cmpsb
push
adc
and
sahf
out
sahf
xor
inc
dec
push
pop
jns
out
fs
je
test
jns
out
xchg
pushf
movsb
lods
sahf
out
sahf
mov
int3
aam
data16
out
in
hlt
cld
jns
out
int3
push
adc
and
and
adc
add
add
daa
and
and
fstp
lods
inc
fiadds
mov
loopne
idivb
in
loope
mov
loop
in
cld
in
xor
nop
out
out
dec
fdivl
sub
ljmp
jns
jb
jb
push
sysret
or
adc
jb
or
xchg
cltd
jo
sti
push
cltd
or
aas
iret
jmp
test
lods
in
sbb
cmpsl
addl
dec
shlb
add
and
jle
leave
push
mov
popf
sbb
jnp
push
test
or
or
or
or
push
pusha
add
insl
sbb
outsb
dec
add
int3
fiaddl
or
xor
push
add
add
imul
aam
or
add
idiv
or
push
jbe
pop
sahf
fcomi
dec
pop
or
or
jbe
add
or
or
or
or
or
add
lods
push
in
out
lcall
mov
out
lods
loopne
iret
repz
xchg
push
xor
push
repz
shl
add
outsb
ret
jnp
adc
push
mov
inc
add
push
push
inc
stos
and
orl
icebp
vmulsd
inc
pop
test
or
imul
mov
push
cmp
std
xor
and
adc
push
pushf
js
iret
repz
sub
pusha
cmp
or
adc
or
pop
xchg
cltd
or
adc
jp
cwtl
or
imul
inc
cmp
push
push
pop
sahf
jnp
cmp
js
push
xchg
pop
and
aas
add
aas
push
in
aas
push
or
sbb
or
add
push
test
inc
push
adc
js
and
imul
aas
push
aam
push
lock
jo
jmp
cmpsb
lret
push
out
sbb
sti
push
mov
or
jns
out
push
add
dec
repz
adc
iret
repz
adc
mov
mov
jge
push
sbb
push
sbb
repz
push
adc
sahf
out
cmp
sbb
or
out
out
add
mov
jns
rclb
add
push
iret
repz
sahf
xlat
loope
fistps
nop
push
and
out
push
clc
add
cmp
repz
pusha
das
push
out
lcall
dec
sahf
out
sahf
insb
adcb
mov
pop
imul
cmp
mov
ds
repz
mov
jns
out
fidivrs
mov
call
xchg
or
xchg
arpl
sbb
push
add
cmp
scas
cmp
add
mov
push
push
pop
sub
add
inc
adc
fidivrs
or
rorb
testb
or
cmp
fs
test
push
add
in
cmp
adc
and
adc
inc
mov
scas
imul
dec
jo
jge
sbb
pop
pop
jae
ret
mov
lock
into
lock
pushw
std
cmc
out
das
lcall
pop
repz
clc
fsubrl
push
cli
jmp
idivb
xlat
add
clc
xchg
loopne
clc
sbb
out
scas
cmp
push
repnz
in
ret
mov
add
fisubrs
mov
or
rcll
lock
add
mov
push
sub
imul
push
in
push
jmp
in
stos
std
insb
addr16
pminub
mov
mov
cmpsb
fwait
outsl
fmuls
mov
pop
lahf
out
push
mov
jo
pop
jle
pop
ds
cli
xorb
jg,pn
xor
outsb
or
arpl
aas
iret
icebp
fcoml
sahf
push
movsl
sub
decb
shrb
lods
jl
pop
push
dec
hlt
movsb
pusha
add
mov
adc
lock
out
push
movsl
cli
inc
mov
push
mov
and
mov
iret
lock
push
mov
int
aas
mov
lock
xchg
cmp
mov
pushf
push
pushf
loopne
call
rcrb
loopne
insb
pop
mov
icebp
mov
mov
lods
ljmp
add
in
adc
push
jg
mov
jecxz
clc
pop
aam
push
mov
repnz
fcmovbe
pusha
mov
push
jl
fs
cld
cmp
push
add
or
jl
mov
cwtl
call
data16
pusha
push
cmp
jno
push
mov
scas
inc
int3
push
mov
push
imul
mov
push
xor
mov
push
mov
cli
lcall
or
mov
je
scas
out
cs
sti
pop
mov
fmull
lods
fsub
testb
cli
push
fs
in
push
push
xchg
stos
mov
dec
and
push
dec
shll
cld
push
inc
loopne
outsb
testl
loope
test
jle
imul
outsb
push
inc
imul
xchg
aas
ret
push
sbb
jo
clc
popf
jmp
clc
push
into
rorl
push
pop
sahf
mov
fldl
ror
mov
out
fsub
push
nop
sbb
jg
push
lock
add
jle
cltd
xor
mov
out
out
jne
loopne
mov
or
faddp
adc
jle
out
push
mov
loop
push
mov
xlat
outsb
rorb
xchg
jo
xchg
sti
wrmsr
push
loope
in
adc
push
movzbl
push
push
out
subb
sbb
push
fidivl
push
push
frstor
stos
clc
push
fdivrs
imul
push
mov
ficoms
mov
ja
ds
mov
std
roll
sti
push
inc
add
inc
cmpb
or
pop
cs
in
xor
add
decb
loopne
pusha
out
inc
push
imul
pop
rcl
mov
dec
cmp
dec
dec
mov
add
push
fwait
push
loopne
add
inc
adc
roll
or
rorl
push
add
or
mov
or
or
adc
xor
out
outsl
fisubrl
dec
inc
push
int3
cmpsb
lock
aas
int3
cli
sahf
adc
repz
fsub
aas
push
hlt
jns
out
push
cld
add
adc
and
jns
out
xor
or
cmp
repz
push
les
iret
repz
or
sub
xor
out
clc
test
add
pop
push
xor
sbbl
push
ret
inc
testl
ret
or
inc
add
push
pop
pusha
inc
add
jno
popl
xlat
imul
dec
aas
add
add
pop
sub
pop
xchg
hlt
out
sbb
add
cmp
out
lea
testl
add
int3
fsubs
adc
repz
sar
xor
dec
stc
iret
repz
jo
nop
divl
aam
hlt
hlt
sbb
repz
push
icebp
out
sahf
out
lock
out
mov
out
fsubr
lock
ljmp
jmp
ljmp
mov
addb
lods
lret
or
inc
adc
ret
inc
lods
scas
outsl
dec
xorps
sbb
add
or
adc
adc
dec
loopne
mov
mov
push
aaa
pop
outsb
aaa
inc
or
or
add
repz
notb
sub
iret
repz
mov
sahf
out
cmp
cld
adc
sbb
jns
out
inc
dec
pusha
jo
jns
out
movsb
mov
cmp
add
aaa
rclb
push
and
mov
sub
aam
pop
cmpsb
adc
push
add
insl
sahf
xlat
jae
insl
fisttpll
xchg
push
xchg
ja
pop
in
mov
in
lds
jg
mov
repz
mov
iret
repz
std
incb
in
repz
add
addb
jno
add
add
cmp
cmp
in
xlat
hlt
lock
xchg
adc
mov
out
add
ds
aas
push
xor
out
sahf
xor
cmp
out
cmp
test
scas
add
fiadds
pop
or
or
cmp
or
out
sahf
adc
adc
adc
sbb
out
push
pop
sbb
cmp
repz
sbb
sbb
repz
and
and
iret
repz
and
es
sub
cmp
repz
sub
repz
xor
xor
test
mov
add
jns
shlb
rcrl
test
je
sub
push
div
cmc
dec
out
mov
out
push
in
int
cmp
fsubrl
xor
data16
mov
push
adc
dec
inc
push
or
faddl
mov
es
lahf
mov
aam
scas
je
fdivrs
inc
aam
int3
movsb
fists
out
mov
lock
loopne
dec
shll
leave
push
mov
push
insb
int
add
add
in
aas
and
aam
out
mov
push
fs
or
pop
push
pushf
jne
dec
mov
movsb
adc
mov
jle
decl
push
in
push
mov
dec
push
xchg
add
add
and
pop
push
xchg
xor
mov
push
push
cmp
stc
outsb
ja
or
mov
out
idivb
push
hlt
push
dec
cmp
sbb
mov
out
je
xchg
sub
sarl
push
in
scas
dec
mov
fisubrs
pop
ds
rcrl
ds
leave
push
in
inc
pop
add
adc
sahf
lods
int
movsb
out
cmp
push
movsb
aaa
cs
movsb
cmp
cmp
fs
pop
or
into
loope
pop
mov
fdivrl
enter
push
movsb
fidivs
pusha
lock
je
sarb
test
dec
pop
dec
ss
jnp
iret
xchg
jle
cs
dec
dec
out
imul
push
test
lods
lock
sbb
loope
out
jle
push
je
mov
inc
icebp
faddp
and
sahf
aam
fisttps
loopne
push
dec
add
jl
jnp
out
imul
and
arpl
imulb
cmp
das
push
lock
cli
inc
in
dec
dec
mov
mov
pop
les
ret
mov
fdivp
cmp
push
sub
ss
divb
and
out
iret
sbb
inc
scas
inc
les
pop
xchg
push
cmp
insb
cmp
cmp
lods
add
daa
outsl
mov
or
push
push
inc
pop
test
cmp
jbe
push
sbb
jnp
iret
jae
push
adc
decl
and
pushf
sbb
sahf
data16
cmp
mov
mov
dec
push
push
pop
out
cmp
jl
inc
dec
in
outsl
jno
push
inc
dec
xchg
das
fidivs
jle
int
popa
ja
push
cld
leave
sub
add
jnp
push
notb
testl
pop
sahf
lock
fs
outsb
sahf
pmulhw
jmp
loopne
add
es
push
loopne
sbb
sarl
iret
pop
scas
add
aam
or
out
addr16
hlt
dec
jp
dec
jns
mov
inc
mov
outsl
out
sub
inc
fisttpll
inc
sub
mov
outsl
add
push
inc
rolb
enter
nop
push
add
add
dec
and
xchg
dec
shrb
cmp
push
xor
aas
into
xchg
cmp
jae
aam
inc
cs
sahf
xchg
inc
mov
jecxz
adc
fcmovb
iret
outsb
sub
cwtl
push
mov
loop
inc
fiadds
mov
cmpsb
add
out
int
xchg
mov
into
mov
mov
repnz
loopne
push
push
cs
cmp
inc
adc
dec
andb
and
jb
inc
insl
xchg
clc
xor
fs
insb
pop
out
ret
sub
outsb
imul
dec
adc
xchg
shlb
add
pusha
fsubrl
jns
mov
mov
loope
adc
fmuls
outsb
jne,pn
je
int
inc
imul
xor
mov
pop
jo
xor
arpl
inc
in
pop
xor
mov
scas
sub
es
dec
dec
cmp
lcall
and
push
pop
cltd
xor
fs
fwait
mov
xor
movsl
mov
jnp
adc
dec
jp
sbb
sbb
shlb
pusha
aas
mov
and
and
and
add
fs
add
nop
push
add
add
test
dec
cwtl
lcall
or
push
cs
les
push
sbb
cmp
dec
bound
dec
sar
cmp
sub
or
test
add
or
mov
and
add
or
inc
int3
nop
jo
ljmp
incb
add
sub
jl
aas
pop
rolb
sbb
sub
out
add
add
sar
faddl
pop
mov
clc
aas
push
pop
jmp
mov
pushf
cmp
cld
add
pop
enter
or
push
aas
jg
mov
shlb
addr16
popf
sbb
or
iret
data16
push
mov
shrb
add
psubb
outsl
push
pushf
outsl
add
push
out
ds
mov
ficompl
out
dec
jb
sbb
add
pop
dec
mov
sbb
clc
pop
push
aas
pop
mov
in
popf
cs
pop
xchg
addr16
lock
int
insb
dec
incl
pop
std
cmp
xchg
fnstsw
add
jl
stc
cmp
sbb
push
data16
jg
jae
insl
out
pop
inc
add
jo
pop
sbb
pusha
iret
rolb
xchg
enter
lock
mov
xor
push
cltd
pop
movups
cmp
jg
repz
push
add
cmp
into
outsl
mov
or
es
or
cmp
loopne
lret
comiss
ljmp
daa
shl
sbb
clc
push
and
aas
rcrb
dec
out
insl
outsl
mov
pop
push
inc
pop
outsl
sbb
clc
popl
adc
hlt
addb
lahf
add
data16
not
pop
sbb
jbe
pop
repz
pop
cs
bound
cmpl
adc
ja
xor
inc
aas
movzbl
fidivrs
add
inc
jne
addr16
jb
pop
cld
push
cmp
fsubrl
mov
xor
repnz
lock
shll
arpl
xchg
and
int
fstpt
cmp
sbb
push
sub
inc
add
fldcw
add
inc
shll
jo
ss
xor
sbb
push
push
sbb
mov
outsl
aas
mov
add
jne
ret
roll
lock
jecxz
xor
jl
sbb
push
mov
ss
sbb
or
test
push
jno
in
rol
jge
jno
push
xchg
push
icebp
and
push
stos
inc
sbb
sub
xchg
rclb
mov
mov
and
jne
jo
xor
or
sbb
and
loope
in
ucomiss
fs
mov
and
popa
sbb
rclb
jmp
icebp
jbe
adc
ss
in
mov
adc
dec
insb
out
jns
jbe
mov
bound
addr16
cmp
mov
inc
nop
cmp
push
pop
dec
loope
imul
dec
ljmp
fcoml
icebp
cmp
movsb
or
xor
adc
jb
setg
mov
insl
ja
and
repnz
fsubr
pop
push
push
sub
mov
scas
loope
mov
adc
cmp
push
sub
dec
arpl
lock
fwait
fs
fs
mov
jg
or
jge
addr16
cs
sti
mov
dec
ja
xchg
xchg
sub
imul
or
and
xchg
aaa
js
je
cs
cmp
pop
sub
sub
cs
sbb
outsl
sbb
loop
sti
out
xchg
cmp
popa
and
and
enter
stos
sub
mov
ds
mov
outsb
scas
test
sarb
das
mov
jae
mov
scas
repz
mov
add
cmpsb
xor
cmp
out
jo
in
pop
bound
inc
es
movsl
pop
xchg
ja
push
test
push
adc
cmp
dec
jae
add
push
adcb
or
ja
dec
aaa
xchg
and
push
into
push
out
imul
sub
ja
sub
mov
mov
sub
pop
bound
imul
popl
adc
sarb
add
into
js
mov
dec
adc
es
imul
cmpsl
imul
xor
out
lds
or
sub
push
outsb
insb
fcomi
sub
jo
jbe
dec
mov
fwait
push
cmpsb
out
add
fbld
mov
dec
dec
xlat
mov
iret
sub
mov
cmp
rorl
mov
jge
ret
fwait
jbe
imul
and
push
xlat
lcall
movl
addr16
imul
imul
or
push
fs
jo
sbb
shlb
insb
iret
inc
inc
sub
ret
ja
arpl
addr16
pop
sbb
or
fstpt
daa
dec
out
and
adc
rorb
push
inc
sub
imul
adc
loop
jne
pop
mov
jb
adc
push
je
scas
pop
fmulp
dec
inc
inc
sub
xor
cmp
dec
das
push
sti
pop
mov
clc
inc
jb
jbe
mov
fwait
mov
sbb
aaa
bound
mov
das
out
push
push
sub
out
mov
jnp
pusha
add
das
xlat
fwait
inc
lds
xor
in
jp
dec
test
dec
xor
loopne
sub
test
and
pusha
push
popa
xor
mov
lods
xlat
sti
je,pt
xchg
jmp
daa
sarl
andl
jne
loopne
dec
push
outsb
mov
add
push
rcr
mov
dec
iret
data16
jnp
push
mov
idivl
mov
das
jnp
jnp
push
xor
aaa
jmp
mov
repnz
insb
adc
test
push
rcl
dec
push
ja
ror
mov
jbe
dec
je
mov
xchg
out
scas
andb
and
push
pop
add
cmp
jp
jg
aad
mov
daa
sbb
scas
rcrl
arpl
sti
scas
imul
jb
sarb
outsl
das
arpl
pcmpeqd
push
pop
cs
sti
and
mov
xchg
ja
adc
mov
push
or
push
in
pop
inc
and
sub
push
imul
ret
punpcklwd
mov
mov
scas
cmp
ja
imul
mov
push
xorl
xchg
mov
mov
jb
inc
loopne
sbb
outsl
push
subl
jmp
popa
add
pusha
out
sbb
inc
push
sbb
cwtl
mov
push
int3
dec
or
inc
mov
jo
xlat
scas
sbb
push
cmp
mov
out
adc
out
or
add
sbb
aas
jae
outsb
iret
mov
and
pop
push
repz
mov
sub
ret
inc
xlat
adc
push
scas
xchg
and
cmpsl
sbb
sub
fimuls
jecxz
sbb
sti
jae
xchg
adc
jnp
xorl
call
inc
add
sub
jae
or
fstpl
fwait
mov
mov
mov
daa
dec
sub
push
sti
mov
aaa
jne
and
sub
add
imul
test
sbb
cwtl
xor
mov
add
add
test
inc
or
xlat
and
arpl
push
sub
inc
push
sub
push
mov
xchg
sbb
leave
inc
in
push
pusha
adc
or
mov
jmp
jnp
mov
repz
sbb
inc
je
jecxz
jo
xor
push
roll
xchg
sbb
mov
push
xlat
adc
sub
addl
stos
imul
jl
ret
xor
dec
daa
sbb
sub
push
loopne
mov
fistl
roll
push
xorl
sub
arpl
loope
ljmp
xlat
mov
pop
push
jmp
sahf
mov
xor
rcr
rcrl
jnp
adc
repz
arpl
lret
pop
and
mov
out
xor
push
cli
dec
mov
mov
inc
mov
push
shrl
add
add
in
ss
shrb
cmpsb
pop
shlb
jg
test
xchg
mov
pshufw
xor
inc
jmp
shll
or
or
jg,pt
arpl
shlb
aaa
cmpsb
xchg
sub
mov
dec
push
and
icebp
inc
bound
push
sbb
push
lcall
inc
xchg
push
mov
sbb
push
shrb
outsl
add
jne
int3
mov
xor
inc
fbstp
adc
insb
inc
or
iret
mov
in
popa
and
cs
add
es
addr16
mov
and
cmp
sbbl
sbb
lds
scas
push
cmpsl
add
outsl
mov
inc
push
push
inc
out
out
jns
and
jns
jp
pop
in
ss
pop
or
les
scas
testb
aas
iret
inc
and
xchg
aaa
xor
sbb
and
mov
les
aas
shll
bound
push
test
sti
shl
aad
inc
addr16
dec
addr16
xchg
or
insl
add
sbb
add
ds
mov
cmpb
cmp
sub
inc
jo
iret
fwait
dec
scas
out
jb
inc
mov
pop
or
inc
or
cmpsb
sub
rep
sub
inc
adc
sub
push
orl
cmp
out
xchg
push
pop
and
or
and
movsl
out
pop
or
and
repz
jmp
mov
sbb
mov
jae
jo
pusha
xor
inc
dec
lods
add
cmp
rolb
mov
xadd
sub
popl
push
and
xchg
sub
sti
add
mov
iret
adc
mov
idivb
add
add
dec
jg
jae
inc
test
outsl
inc
aas
add
ficompl
inc
cmp
and
ret
lds
scas
xor
pusha
rorl
lsl
daa
push
fst
mov
mov
xlat
mov
add
outsl
cmp
adc
jmp
cmpb
testl
aad
xchg
stos
pop
mov
mov
scas
mov
out
out
adc
jg
test
cmp
ret
imul
arpl
inc
mov
sub
in
jo
divb
mov
cmpb
fwait
das
mov
mov
xlat
cmp
stos
cli
popa
out
gs
push
xchg
les
adc
test
arpl
imul
adc
adc
sub
pop
push
jecxz
xor
insl
add
or
adc
push
jmp
xchg
cwtl
subl
or
push
cmp
outsl
addr16
xor
mov
pop
xchg
pop
enter
sub
jae
jo
adc
pop
divb
ja
push
pop
adc
dec
push
add
xor
xchg
inc
lods
sbb
mov
bound
mov
or
in
mov
add
shll
pop
and
xor
jae
movsl
and
add
mov
mov
or
roll
pop
sub
fadds
cmpsl
push
xor
pop
inc
adcl
test
test
or
aaa
or
das
ds
ret
rolb
outsl
outsl
push
outsl
push
mov
out
or
lock
mov
enter
pop
jecxz
fsubrs
xor
scas
pop
gs
in
iret
xor
outsb
roll
pushl
ret
out
adc
or
dec
fists
sahf
push
or
arpl
popa
sub
push
jo
arpl
daa
xor
push
and
pop
inc
mov
mov
shrl
or
mov
arpl
pop
push
imul
jo
stos
fistpll
push
arpl
int
mov
and
mov
inc
fs
mov
andl
sbb
aam
or
rcrb
dec
jp
or
add
mov
jmp
xor
inc
add
pusha
add
addb
add
jg
and
rolb
loopne
xchg
add
add
add
add
mov
add
jo
sbbb
add
enter
add
add
pusha
sub
lds
lds
adc
addr16
add
xor
add
jbe
add
add
push
enter
mov
out
push
add
loopne
lock
adcl
and
add
add
popf
mov
and
add
pusha
add
addr16
push
xchg
adcb
pusha
clc
call
add
add
add
add
lret
and
dec
movl
add
xchg
sub
inc
or
inc
stos
add
and
inc
mov
mov
inc
add
addb
sub
or
push
push
jne
out
out
adc
rolb
in
sub
push
xor
aas
cmp
pushf
ret
pusha
adc
add
inc
mov
jle
into
add
dec
shll
sub
push
add
push
add
or
adc
adc
add
ret
in
sub
adc
roll
sub
jo
mov
add
bound
es
fs
popf
push
adc
and
inc
loope
das
iret
or
mov
and
add
ficoml
add
mov
add
nop
add
loope
mov
rcrb
loopne
lock
adc
and
xor
inc
push
pop
push
jg
repz
pusha
push
push
jo
addb
push
fisubs
fsubrl
imul
mov
aas
mov
push
pop
xor
inc
pop
fucomip
pop
fcompl
push
pop
out
mov
sbbb
nop
pop
mov
lock
pop
rolb
pop
loopne
lock
xorl
or
or
std
jnp
mov
or
orb
add
scas
sti
loop
sub
add
rorb
xor
or
pop
sbb
add
xchg
fbld
adc
and
cmova
or
or
pop
pushf
idiv
xchg
xor
push
or
or
add
jle
nop
or
mov
rorb
loopne
mov
push
add
xor
loope
pop
mov
and
daa
or
push
or
jo
orb
adc
lahf
ja
or
sbb
or
out
inc
adc
rorb
ds
pop
jmp
mov
or
or
add
or
int
sbb
or
inc
or
pusha
or
in
pop
imul
add
nop
or
mov
jge
mov
shrb
shlb
fucomip
jnp
loopne
or
or
or
push
and
add
idiv
decl
or
or
or
or
or
or
or
or
or
ds
pop
popa
jl
or
inc
or
paddd
pushl
orb
or
loopne
lock
and
sbb
push
inc
push
xor
push
dec
pusha
pop
mov
out
jge
jo
sub
subb
nop
push
mov
scas
mov
or
rcrb
mov
stos
popf
sbb
add
push
or
out
pop
mov
lock
out
es
and
xor
inc
cpuid
pusha
sbb
orb
sub
mov
push
mov
lahf
push
fcompl
rorb
xchg
jb
invlpg
movsl
sub
sub
push
adc
and
and
adc
adc
fsts
adc
dec
orl
idivb
outsb
jo
adcb
adc
cmpsb
adc
jle
jmp
iret
cmpsb
sbb
cmp
mov
push
add
or
xchg
fstl
or
aaa
cmp
int3
mov
aas
add
jg
push
mov
arpl
addr16
add
adc
call
push
loopne
push
mov
push
orb
add
frstor
cltd
mov
cmp
mov
sbb
std
adc
adc
adc
dec
adc
adc
pop
adc
adc
mov
clc
scas
cli
aas
sbb
rolb
adc
push
adc
jo
push
clc
and
mov
or
rclb
adc
push
adc
adc
out
sbb
push
add
aad
lcall
sti
and
xor
lods
stc
arpl
jg
inc
adc
inc
hlt
xchg
adcb
add
mov
into
pusha
or
pop
mov
adc
adc
xchg
adc
inc
lds
cld
aas
mov
add
or
adc
repnz
adc
sbb
out
jnp
and
adc
push
push
pop
pusha
xchg
subb
repz
mov
fiaddl
mov
insl
inc
sti
adc
adc
or
or
loopne
adc
adc
imul
adc
adc
push
es
pop
fisubl
xor
fdivrp
sbb
adcb
sbb
adc
jne
sahf
pushf
push
adc
push
jno
mov
inc
fidivrl
loopne
inc
adc
dec
push
push
enter
push
pop
mov
fs
movl
cmpsl
sbb
add
mov
adc
cs
mov
mov
cltd
movsl
sbb
pop
dec
inc
add
pop
fidivl
or
leave
add
fwait
cmp
pop
add
fs
sbb
fisubs
movsl
add
addr16
add
or
ficoml
popw
or
xor
add
lock
pop
sbb
adc
sbb
or
xchg
sub
add
or
ss
jl
add
add
mov
adc
add
xchg
popf
adc
in
dec
mov
add
pop
xor
pop
dec
and
mov
or
pop
in
sub
sub
add
shld
xor
push
mov
jg
xor
add
pop
bound
mov
lahf
add
or
xchg
cld
xchg
lahf
or
sub
mov
add
adc
push
orl
sbb
mov
xchg
cmpb
movsl
pop
frstor
fistpl
jne
adc
js
push
jo
fstps
incl
push
and
fimull
add
mov
mov
add
ds
mov
pop
and
xor
inc
mov
lahf
mov
das
imul
imul
incl
mov
adc
incl
sbb
mov
push
arpl
or
push
repz
fcomp
into
dec
push
pushl
adc
push
sub
xor
or
lahf
sysret
lahf
dec
mov
adc
jg
in
and
jg
insl
xor
add
add
sti
sub
enter
adc
jmp
jnp
outsl
mov
dec
add
pop
or
jge
mov
cmp
ret
mov
push
mov
es
push
fwait
adc
sbb
adc
pop
push
insl
pop
sub
add
adc
stos
cmp
push
bound
add
pop
insb
fnstcw
fnstenv
xor
or
mov
sub
cmp
ljmp
push
or
std
xchg
push
arpl
mov
mov
sub
cmc
popa
bound
test
inc
mov
fistps
mov
mov
push
sti
pop
xchg
pop
inc
push
pop
mov
add
or
test
adc
push
xchg
push
cwtl
push
dec
nop
insl
mov
adc
adc
jb
mov
mov
or
or
jmp
ret
lret
and
decl
mov
mov
add
fistl
add
cmpsb
rolb
sub
adc
imul
adc
je
fildll
fwait
add
adc
lods
sbb
and
xor
mov
or
out
int3
ret
aas
and
or
cmpsb
and
lahf
xchg
lods
mov
or
add
imulb
mov
mov
xchg
mov
testl
sbb
in
fdiv
cmp
adc
sbb
int
int3
adc
xchg
adc
sbb
loope
fidivrl
add
mov
add
dec
jae
pop
add
or
or
or
and
and
pop
out
pop
lds
sbb
add
xor
pop
sub
sbb
movsl
add
das
push
and
ss
or
lds
push
inc
sbb
add
outsl
sub
mov
mov
mov
addr16
mov
test
pop
push
pop
and
stc
mov
daa
jg
das
pop
bound
daa
insb
mov
insl
push
adc
add
sbb
in
arpl
pop
pusha
or
lods
jbe
sbb
pop
insl
xor
and
dec
mov
adc
xor
lcall
fsts
push
mov
push
test
push
adc
mov
lidtl
ret
push
sahf
rcll
pop
push
mov
adc
sbb
int
and
sub
ret
icebp
pop
pop
adc
mov
cmp
insb
mov
inc
popf
mov
and
mov
or
test
sub
pop
fdivl
jae
lahf
and
add
mov
adc
movsb
movsb
xorl
outsb
fwait
scas
push
lods
xor
incl
mov
adc
movsl
add
aas
cld
adc
adc
fdivs
adc
mov
sub
add
cmp
test
lds
mov
mov
orb
sbb
sbb
push
imul
cld
daa
lahf
mov
decb
jg
repz
pop
jae
adc
push
inc
and
rcr
fsubrs
xchg
outsl
aad
xchg
inc
adc
or
fistpl
mov
fucomip
sahf
and
mov
fisttpl
xchg
push
dec
and
pop
mov
sbb
icebp
inc
inc
lea
fcomps
lret
fsubl
insl
lods
lods
insl
stc
dec
scas
mov
pop
mov
xor
xor
mov
bound
addr16
sbb
lods
sbb
lret
inc
push
jbe
mov
adc
mov
sub
adc
mov
lcall
cmp
adc
add
and
xor
inc
das
push
adc
add
mov
adc
loopne
adc
pop
cs
cmp
inc
push
pop
jo
inc
jno
lock
lcall
inc
inc
push
sub
add
daa
cmp
and
or
fadds
or
xor
inc
jg
or
mov
push
inc
pop
and
and
int3
adc
repz
and
add
aaa
xor
mov
mov
mov
sar
and
mov
jae
in
sub
pop
in
or
addr16
dec
sti
sbb
pop
rolb
adc
cmp
jp
aaa
push
es
das
jo
neg
add
addb
nop
dec
ss
or
add
cwtl
adc
pop
lock
test
aas
adc
pushf
pushf
int3
invd
adc
or
and
adc
pop
add
lahf
mov
or
aas
das
shl
psubsb
and
inc
shll
inc
mov
pop
inc
adc
int3
sahf
or
iret
clc
add
pushf
pushf
pushf
pushf
adc
sbb
inc
xor
das
add
sub
mov
ds
pushf
sbb
cmp
adcb
cmp
push
lahf
mov
xor
sub
mov
push
jo
aas
incl
ud0
ljmp
imul
push
aad
pop
push
dec
or
in
lcall
leave
psubusw
xor
jecxz
jmp
cs
ljmp
and
lds
mov
stos
ljmp
in
jmp
in
aas
pop
je
adc
and
es
addb
je
outsb
jg
and
inc
pushl
push
or
pop
sub
inc
push
test
add
test
jg
mov
cltd
mov
sub
inc
sbb
shr
pop
mov
adc
mov
pop
and
push
outsl
mov
pop
cwtl
dec
inc
test
mov
xchg
ss
daa
daa
daa
aaa
cmp
cmp
add
cmp
aas
pop
inc
addb
jbe
pushf
inc
dec
inc
das
jb
repnz
inc
inc
inc
inc
jb
jb
inc
inc
inc
inc
jno
jb
inc
inc
dec
dec
inc
and
and
add
shlb
enter
subb
test
and
or
fs
jo
pop
mov
mov
das
in
in
leave
dec
fucom
push
in
aas
and
jecxz
pop
icebp
repz
stc
cmc
mov
add
and
aaa
pop
das
adc
dec
inc
pop
pop
mov
jg
and
mov
outsl
ret
out
daa
push
pop
push
fistps
movq
pop
xor
ds
mov
jne
pop
ljmp
outsl
and
push
aas
scas
dec
stos
jno
aas
loopne
mov
pop
jno
and
fists
mov
das
scas
add
pop
adcb
adcb
pusha
rcl
das
pop
es
loopne
aas
fbld
or
mov
push
adc
dec
rolb
and
push
pop
pusha
xchg
push
int
lahf
mov
inc
sub
mov
add
stos
add
punpcklbw
adc
jg
sbb
xchg
dec
and
outsl
sub
sub
aas
sarb
data16
inc
dec
dec
sbb
fs
add
mov
test
ljmp
push
cmp
xorb
repz
add
fwait
cmp
cli
adc
dec
add
sub
inc
cmp
pop
pop
push
push
push
adc
lcall
dec
dec
cltd
adc
rol
mov
dec
insl
or
rcll
sub
xchg
adc
inc
pop
dec
adc
jae
rcll
pop
adc
bound
cmp
adc
pop
sub
sub
adc
xor
mov
adc
dec
jnp
fidivs
popf
decb
add
aaa
dec
fdivrl
gs
push
aaa
dec
fsubrl
mov
dec
adc
cmp
fisttpl
push
pop
imul
push
add
inc
lods
imul
push
pop
inc
dec
or
lret
dec
adc
pop
push
xchg
adc
jbe
inc
add
xchg
xor
sbb
js
in
cmpsb
mov
es
stos
cmp
and
shlb
inc
mov
mov
adc
dec
adc
test
mov
cmp
mov
sbb
add
cld
mov
adc
rorl
insb
and
push
add
xor
add
adc
cmp
xor
inc
aas
aad
mov
dec
nop
adc
push
es
out
mov
movsl
add
dec
ds
mov
sub
popf
lock
mov
mov
push
insl
fs
fimull
das
adc
sti
cmpsb
mov
adc
jbe
les
stos
dec
dec
adc
and
mov
sbb
lahf
adc
mov
in
fwait
adc
add
inc
sub
es
dec
pop
adc
popa
xchg
mov
xchg
jbe
movsb
or
xlat
add
add
inc
dec
mov
push
shlb
mov
popf
add
mov
insb
inc
call
inc
cmp
inc
cwtl
cs
loop
sbb
pop
jbe
pop
inc
dec
inc
push
push
dec
gs
cmp
add
pop
or
lret
add
or
shll
sbb
inc
sbb
jg
test
lret
scas
sbb
ljmp
dec
arpl
lds
pusha
jo
pop
dec
or
inc
fcmovne
or
mov
sub
lock
push
aas
and
pop
cmp
mov
jge
enter
enter
sti
or
cs
aam
inc
sarb
xor
sub
pop
xor
mov
dec
inc
inc
loopne
ss
xchg
xchg
or
call
mov
cmp
mov
cmp
in
sbb
clc
mov
xor
and
and
inc
or
nop
dec
and
leave
enter
push
xor
xor
sbb
es
leave
xor
orb
adc
rolb
xor
fdivs
stos
sbb
nop
cmpl
xchg
mov
mov
jo
inc
add
fwait
adc
mov
adc
sbbb
xchg
and
sub
push
add
call
aad
or
sub
imul
or
jno
fidivs
push
or
inc
addr16
dec
push
and
mov
mov
or
sbb
lret
jmp
test
loope
push
pop
pushf
pusha
popf
cmpsb
popa
int
add
or
notl
mov
mov
add
add
and
add
and
pop
mov
sbb
add
inc
mov
add
ud2
fisubrl
jo
xchg
push
insb
jae
lret
sbb
sbb
inc
push
nop
imul
sahf
mov
xchg
pop
push
cmpl
insl
jo
inc
arpl
lcall
inc
jg
inc
sbb
push
adc
mov
lgdtl
jb
jne
sbb
mov
mov
negb
aaa
gs
sbb
push
xorb
pop
or
mov
iret
pop
inc
xchg
dec
add
mov
fs
jg
outsb
test
lods
xchg
fs
orb
mov
ret
aas
iret
insb
xchg
push
out
adc
jns
jecxz
js
dec
femms
and
and
push
sub
stos
dec
sbb
aaa
je
rcrl
push
mov
xchg
inc
sub
test
sbb
lcall
adc
rorl
pop
enter
dec
add
ret
cmc
or
mov
cmp
xchg
test
or
mov
fst
push
pop
pop
pop
add
imul
sbb
or
xor
psubusb
pop
test
mov
push
fstpt
xchg
loopne
pop
ja
inc
and
xchg
pop
frstor
push
je
je
adc
sub
mov
lods
fs
xchg
add
sbb
xchg
lods
jae
sbb
mov
sub
push
push
imul
mov
or
xchg
xor
pop
jns
xor
insb
or
mov
push
sub
cmc
sbb
sub
sub
jae
rcrl
pusha
rclb
lods
push
fcoms
or
test
adc
sbb
movsb
dec
jns
or
and
popa
pusha
dec
and
imul
sub
push
adc
jbe
sbb
int3
in
xchg
inc
out
pop
cltd
adc
push
in
sbb
imul
sub
in
push
imul
dec
adc
mov
cmp
dec
gs
je
andb
stos
xor
inc
sbb
imul
in
inc
mov
inc
and
imul
mov
xchg
pop
xchg
pop
pop
daa
nop
mov
add
inc
out
bound
lds
outsl
inc
adcl
pop
add
xor
sbb
cmpb
push
pop
adc
sbbb
dec
sub
push
mov
daa
mov
inc
rclb
add
das
mov
sbb
aaa
addl
or
mov
sbb
outsb
inc
cli
and
pop
cwtl
and
mov
mov
sbb
add
push
loope
shrb
loopne
push
cwtl
push
int
out
enter
and
ret
rcrl
and
pushf
push
mov
insb
xchg
movsb
add
rcrb
adc
lcall
push
cmp
pop
test
int
sub
push
inc
cmpsb
es
and
push
cltd
arpl
xchg
fs
add
stos
inc
js
xchg
xchg
pop
nop
imul
outsl
shll
add
dec
call
push
dec
outsl
inc
sub
int
xor
pop
in
and
sub
or
call
movsb
or
dec
add
test
ljmp
inc
bound
dec
insb
sub
cmpsl
xor
and
cmpsl
pusha
cmpl
fwait
loopne
inc
adc
imul
clc
adc
dec
dec
jb
js
cwtl
sbb
aam
pop
add
out
and
and
sub
cld
sub
notl
push
xor
lahf
adc
ss
sub
adc
test
and
ss
cltd
inc
mov
fcoms
jo
test
subl
push
lret
shll
or
daa
int
add
adc
ficomps
or
pop
mov
addr16
imul
loopne
push
imul
int3
roll
cmpsb
and
ret
ret
mov
rol
inc
inc
mov
mov
xchg
out
dec
xor
sbb
rorb
or
movsl
or
push
push
outsb
inc
outsl
mov
lods
enter
outsl
gs
pop
pop
mov
and
xor
mov
fdivs
push
ret
mov
mov
cmp
imul
or
lret
push
push
sbb
mov
cmp
sbb
cmp
adc
fcoms
sub
xor
fs
adc
stos
and
cmpsl
add
sbb
arpl
sti
and
dec
push
ljmp
and
and
das
adcl
iret
je
dec
jo
pop
push
jnp
das
lds
inc
cmpb
je
add
lea
test
dec
xchg
and
cmpb
add
stos
pop
jnp
daa
add
pop
cmp
mov
rorb
sub
inc
aaa
push
mov
data16
sub
sub
pop
and
mov
xlat
sub
outsl
jo
sbb
sbb
mov
enter
inc
push
jbe
and
sub
dec
loope
pop
popa
mov
sbb
adc
and
pop
push
insb
mov
ret
adc
aam
cld
lret
push
or
push
movsb
shlb
leave
xor
orl
jle
sub
sbb
push
xchg
inc
push
jp
push
push
or
add
jmp
rclb
or
fisubrl
arpl
dec
test
sub
add
mov
inc
mov
pop
adc
or
sbb
rorl
lods
sbb
xor
rcrb
cmpsb
lea
sbb
sbb
les
data16
push
mov
les
and
adc
xchg
mov
push
outsl
iret
lret
orl
or
cmp
sub
ficomps
adc
cltd
inc
iret
pop
or
push
mov
sbbl
mov
leave
ror
sub
mov
dec
insl
jge
mov
mov
std
push
insl
cmpsl
pop
push
ret
das
dec
sbb
push
sbb
imul
andb
mov
and
and
mov
inc
aaa
inc
movsl
js
icebp
xor
xchg
xorb
or
inc
xor
popf
jbe
pop
mov
jae
mov
xchg
shrl
sub
sub
mov
dec
aam
sub
mov
cli
adc
loopne
sbbl
fimuls
scas
pop
mov
xor
popa
in
lret
sti
rcr
mov
adc
dec
adc
imul
cltd
data16
or
testl
sbb
and
es
paddusw
aas
imul
jno
inc
cmp
outsl
or
mov
insb
inc
imul
sbb
add
bound
inc
mov
aas
cmp
adc
pop
shll
and
jnp
mov
xchg
mov
push
lods
sbb
insb
inc
sbb
lea
hlt
daa
pop
ret
orl
insl
sub
push
loope
aad
fnstenv
stos
add
mov
fimuls
icebp
pop
jno
sub
sbb
fsubs
push
movsb
xchg
adc
dec
icebp
js
imul
dec
sbb
sahf
push
dec
std
and
add
add
cmc
sbb
and
mov
rcrl
out
mov
sbb
adc
xchg
adc
pop
adc
fsubs
icebp
lea
adc
pop
adc
jge
jecxz
inc
jo
pushl
adc
sbb
sbb
or
data16
adc
push
cmpsl
xchg
xchg
push
shlb
addr16
or
and
or
nop
jmp
jne
insb
lea
add
inc
pop
fsts
push
pop
adc
mov
mov
insl
jmp
pop
imul
push
add
push
xchg
inc
fs
stos
cmpsb
popf
add
aas
xchg
arpl
inc
dec
sub
test
subb
cmp
adc
pop
add
test
push
push
add
cmc
aam
add
cltd
ret
popf
js
fidivs
mov
xchg
insb
mov
cltd
cmp
ds
mov
xchg
and
rcrb
and
add
lock
shr
and
inc
in
outsl
int3
insl
pop
cmpsl
inc
add
cld
punpcklbw
dec
add
add
int
dec
movsb
lea
loopne
popl
sti
mov
test
push
push
push
nop
aam
or
popa
outsl
fistpl
add
push
mulb
inc
psubusb
sbb
imulb
xchg
sub
int3
aas
loop
mov
rcr
fdivrs
das
mov
or
dec
test
push
sahf
fldt
je
dec
push
sub
scas
push
push
push
add
repz
adc
imul
and
dec
popaw
and
push
inc
and
jns
sbb
or
bound
lock
cmp
das
and
dec
cs
push
or
mov
push
xchg
je
cmp
push
or
jb
dec
pusha
add
rcrb
sahf
inc
dec
gs
xchg
cmp
mov
jo
bnd
dec
int
jae
mov
outsb
mov
add
outsb
xchg
pop
das
and
xchg
lock
or
xchg
incl
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lock
add
dec
add
mov
