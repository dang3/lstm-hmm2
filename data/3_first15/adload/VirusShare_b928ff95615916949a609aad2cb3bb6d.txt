dec
ljmp
push
mov
mov
xor
push
lea
mov
sub
or
push
add
cmp
mov
cmp
aaa
test
je
push
movl
call
les
orb
test
je
push
add
cld
xor
jge
divl
incl
mov
jne
xor
shll
test
les
int3
add
and
leave
mov
fildl
or
mov
movl
inc
mov
jmp
xor
repnz
icebp
or
mov
in
adc
push
mov
enter
fisubrs
sub
sub
mov
je
sub
adc
jnp
adc
pop
mov
ret
lahf
push
shl
shll
and
xor
in
or
rorb
push
sub
shrb
fs
mov
repnz
fstpl
pushf
jbe
pop
ret
jle
out
xchg
aaa
sbbb
cwtl
or
test
insb
jle
fisubs
push
lea
push
mov
rcrb
lock
mov
stc
xchg
and
lea
push
mov
add
in
mov
pop
mov
push
mov
push
sub
mov
mov
in
pop
inc
jns
js
jns
mov
mov
mov
call
mov
push
subb
mov
and
mov
push
xchg
jmp
and
xor
js
push
ret
mov
sbb
or
dec
push
push
mov
cmpl
add
test
insb
or
mov
cld
stos
shlb
jmp
mov
push
outsl
inc
out
sub
jae
sti
mov
xor
nop
add
ja
lret
or
mov
sub
incl
shlb
shl
push
or
leave
push
xadd
dec
test
jg
repnz
inc
add
mov
ljmp
in
and
ja
lret
inc
pop
adc
shlb
rol
sbb
lahf
stc
lock
push
mov
xor
and
mov
jo
mov
xchg
push
sti
outsl
push
push
mov
call
mov
push
adc
mov
mov
xchg
test
cld
push
push
inc
inc
xchg
push
and
push
loope
mov
lods
adc
subb
insb
push
add
rcll
mov
add
incb
ds
js
mov
and
xorl
push
xchg
cmp
or
out
jno
out
push
or
ret
pop
cld
cmp
mov
mov
mov
loope
inc
push
les
add
lahf
cli
mov
inc
jnp
sar
push
inc
push
lea
xchg
in
icebp
mov
jle
mov
scas
test
or
punpckhbw
inc
add
xor
lcall
aaa
or
or
push
setle
mov
les
mov
mov
std
jle
inc
and
je
push
test
mulb
push
or
sbb
pop
ss
mov
xor
add
and
dec
jl
xor
sbb
jle
pop
cmc
xchg
push
or
pushf
mov
mov
add
pop
or
testb
xorb
lea
test
stc
sub
inc
inc
test
and
cmp
mov
shll
add
mov
inc
sbb
add
mov
xor
pop
push
sub
lcall
mov
std
mov
cmpsb
roll
and
daa
sbb
or
mov
mov
and
std
outsb
scas
into
enter
and
push
push
lea
jg
cs
in
jmp
sub
lods
and
jbe
fcom
pushf
add
inc
movb
cmp
cmp
dec
push
in
inc
add
in
add
push
popa
je
jns
xor
push
push
or
pop
iret
mov
dec
pop
push
add
test
rcll
and
add
sub
jae
or
dec
push
xlat
or
add
inc
lret
sti
outsb
mov
sub
mov
adc
xchg
enter
out
dec
or
adc
add
dec
push
sub
sub
sbb
push
iret
pop
mov
cmp
jne
jo
and
xor
jo
enter
push
push
push
push
add
icebp
cmc
pushw
stc
mov
pop
into
and
cmp
or
pop
into
mov
add
add
or
fs
loope
test
in
in
out
adc
and
int3
data16
aam
add
or
mov
mov
mov
jle,pn
xchg
add
sbb
cmp
jne
jge
jb
add
push
push
push
ror
sbb
adc
fdivr
punpckhbw
mov
int
xchg
ret
loopne
out
inc
add
xor
cmp
or
movb
ret
or
std
mov
add
add
xor
shl
inc
sbb
push
xchg
addr16
sub
cmp
sti
jb
or
jmp
stos
xchg
sub
sbb
jmp
cwtl
adc
shrb
push
push
pushf
jbe
mov
xor
clc
jo
cmp
adc
popf
rolb
push
cmp
jl
or
xor
test
add
mov
shlb
dec
push
mov
pusha
fnclex
jns
fs
mov
jl
aad
sub
dec
and
sub
cmp
idivl
dec
jle
push
add
jmp
xor
stos
clc
push
cltd
push
and
add
xlat
push
adc
xor
scas
jmp
test
push
mov
in
cmp
mov
add
in
in
movzwl
les
push
xchg
and
mov
movb
jmp
sarl
fwait
subl
or
jb
push
out
xor
add
inc
push
adcb
and
outsl
fdivr
mov
and
mov
adc
lds
xorb
pop
xchg
dec
and
sub
and
cmp
sub
sbb
xlat
sbb
and
sbb
sahf
adc
sbb
loop
mov
sbb
xor
adc
pop
cmpsl
popf
push
test
xlat
js
in
lahf
sete
test
je
int3
mov
sbb
dec
sahf
mov
dec
dec
push
inc
rolb
fstl
xor
pop
pop
sub
add
mov
shrb
es
js
mov
ss
test
rep
push
add
xor
movsl
lods
mov
sti
sbb
xor
je
push
add
push
add
movsl
in
sub
out
xor
add
or
insb
shlb
in
enter
js
iret
sbb
aam
dec
add
stos
in
dec
add
in
dec
sahf
add
inc
sbb
stos
add
mov
or
xor
popf
lock
sbb
push
and
mov
add
cmpsl
or
sbb
push
call
les
mov
mov
lea
loopne
cmpsb
mov
je
push
cmp
out
daa
jp
aad
mov
inc
mov
adc
push
cmp
mov
mov
ja
add
add
enter
ret
enter
rol
mov
cbtw
pop
adc
jl
push
ret
cwtl
icebp
jmp
lea
mov
mov
cwtl
aas
jno
add
dec
hlt
xchg
mov
push
cmp
adc
pop
jl
loopne
sbb
inc
mov
push
push
cmp
adc
xchg
dec
lds
test
js
jb
sahf
ss
adc
outsb
pop
popf
pop
cmp
adc
cmp
dec
ret
inc
enter
adc
nop
fistl
pop
inc
ret
adc
mov
and
rclb
mov
or
jmp
add
das
push
push
mov
ficoms
es
inc
mov
aad
sbbb
cwtl
pop
push
shl
and
fstl
push
loopne
mov
pop
and
jge
add
and
cmp
sub
andl
bound
push
repnz
push
inc
dec
xchg
inc
out
cmp
push
roll
inc
pop
adc
mov
out
jmp
sbb
xchg
push
push
xor
int3
int3
insb
add
je
je
add
movsl
push
popf
lods
stc
sahf
pop
mov
aaa
add
inc
xor
add
sub
inc
add
lret
jmp
push
push
scas
lret
push
jge
fistl
xchg
and
sub
sub
in
lea
cltd
add
xor
pop
insb
jge
test
cmp
mov
mov
push
mull
mov
push
pop
adc
add
cmpb
test
adc
push
push
loope
dec
sarl
dec
rcrb
mov
or
rolb
push
in
test
add
stos
mov
jp
rcrb
test
pop
sahf
mov
push
inc
bound
lods
stos
xlat
add
stos
adc
lods
or
xchg
out
dec
add
add
add
or
add
mov
xor
dec
test
lcall
out
xor
xor
inc
and
add
rcrb
push
mov
and
sub
push
mov
add
push
sub
cmp
jl
xor
cmpb
push
cltd
daa
adc
dec
js
insb
ja
cwtl
mov
pop
cmp
dec
push
xlat
cli
shl
roll
fs
out
mov
in
ret
pusha
lea
sbb
outsb
push
inc
xor
push
sbb
push
push
add
repnz
popa
mov
xchg
xor
push
push
into
adc
ss
add
dec
add
inc
xor
push
lea
jne
inc
sub
xchg
clc
pushl
mov
dec
add
into
or
data16
inc
inc
or
movl
out
enter
sub
pop
mov
pop
je
ret
pop
adc
incl
into
pop
jns
mov
xchg
stc
xor
and
je
lea
or
jne
insl
lock
inc
cmp
dec
sar
xor
aam
pop
jecxz
in
jle
add
mov
mov
push
push
push
push
add
push
nop
adc
cmpl
lahf
mov
push
add
test
rolb
and
daa
inc
pusha
sbb
add
lock
je
xchg
cwtl
adc
and
mov
xor
mov
fmuls
jle
roll
adc
adc
add
mov
into
rcrb
sub
add
add
mov
sub
mov
pop
and
dec
out
hlt
push
lcall
push
sbb
jne
adc
push
ret
fbld
sbb
add
pop
dec
pusha
add
sbb
int3
imulb
sbb
sub
mov
cltd
testl
into
shrb
xor
sub
fcomi
fcomps
rolb
push
mov
rol
xor
sub
stos
cmp
fs
pop
mov
push
add
add
dec
cli
push
mov
jp
sbb
jge
out
add
cmp
lret
ss
inc
sub
xchg
push
inc
and
add
outsl
fnstenv
push
loopne
out
and
idivb
cmp
jge
lock
jg
mov
push
fmull
or
pop
mov
add
repnz
test
lds
cmpsl
mov
mov
fsubs
mov
in
jne
cltd
out
das
neg
mov
and
cmp
jle
cmp
jle
sub
mov
adc
call
mov
jmp
ljmp
jge
jbe
mov
addr16
jae
mov
add
das
xor
test
in
mov
cmp
fimuls
xor
or
jg
cmp
cmp
je
push
xor
push
decl
sub
cld
jne
rorb
mov
movzbl
pop
loopne
div
or
push
jne
push
sub
add
jge
add
jge
add
adc
xor
in
insl
inc
xor
nop
iret
test
ret
inc
or
movsl
test
xor
and
cld
mov
push
cmp
add
mov
lea
hlt
xchg
movsb
sti
cmp
pop
push
jl
inc
sbb
mov
adc
pusha
push
push
loope
and
or
jns
lcall
jle
sbb
popa
mov
sub
and
andb
sbb
jne
adc
insb
in
pusha
push
addl
jnp
mov
in
lock
mov
pop
or
loopne
push
aam
adcb
pop
sbb
ret
lahf
jle
sub
aam
pushf
rorl
mov
push
stos
orl
mov
pop
jmp
mov
frstor
add
push
push
or
inc
pusha
cmp
lods
cltd
ret
dec
pop
lea
pop
js
push
enter
jmp
aaa
stos
dec
xor
cmp
or
ja
sub
add
sub
sub
dec
lds
push
sub
xor
dec
arpl
bound
add
or
xor
add
movsl
or
pop
jmp
push
pop
push
push
sbb
mov
inc
push
js
jmp
cmp
add
inc
testb
xor
xchg
test
idivb
sbb
sub
xor
mov
lahf
push
je
imul
sub
xor
dec
sub
sub
sub
xchg
imul
and
adc
adc
and
push
xor
inc
call
int
pop
cld
cmp
jne
jnp
mov
xchg
test
xor
cmp
je
pop
call
sbb
mov
decl
dec
add
sub
outsb
cli
mov
mov
inc
shr
or
dec
shl
setae
lea
lods
jmp
dec
in
adc
add
xor
sub
add
adcb
or
or
and
movsb
inc
or
mov
outsl
xor
mov
push
mov
dec
jbe
inc
adc
inc
sbb
jne
inc
add
or
shr
sub
decl
push
icebp
test
je
mov
lea
in
cli
adc
lods
jne
xlat
cmp
jb
sbb
stc
cmp
jbe
daa
add
mov
call
mov
test
ret
adc
jbe
xchg
in
decl
mov
cmp
jae
mov
push
push
dec
daa
cld
pop
pop
pusha
fidivl
push
lea
stc
cmp
jmp
or
sub
ljmp
mov
rol
popf
lea
jno
test
mov
push
out
das
adc
lret
push
sbb
add
add
dec
mov
mov
pop
sub
add
rolb
cmp
test
clts
ret
icebp
jbe
xchg
or
or
js
je
pop
jle
fwait
addb
mov
xor
or
and
or
mov
pop
imul
jl
and
add
jno
push
mov
call
je
shll
mov
in
jl
fsts
pop
dec
enter
daa
sbb
push
push
push
jns
in
adc
push
cmp
jae
stc
shll
sub
mov
clc
sub
bnd
push
push
lea
mov
push
cmp
mov
lret
add
pop
aad
xor
ret
add
sub
lahf
cmc
lret
push
add
adc
lods
pushf
xor
scas
js
inc
add
add
sbb
xchg
add
add
inc
fs
lods
or
inc
aas
and
adc
pop
shll
les
push
test
ja
xor
push
scas
dec
addb
mov
xor
mull
shlb
lcall
leave
mov
sahf
sub
add
sub
and
adc
les
hlt
pavgb
cmp
ljmp
and
mov
mov
out
lret
shr
shr
cmp
jae
pop
das
cli
out
ljmp
sarl
ja
xor
xor
add
fistl
lret
ja
xchg
imul
out
dec
call
call
pop
push
fcoms
fdivs
loopne
dec
in
je
inc
and
add
cld
pop
arpl
jge
rcll
mov
pusha
cmpl
inc
add
or
or
inc
add
ds
push
add
jg
iret
inc
push
push
ja
mov
push
adc
sbb
sub
fidivl
push
sbb
push
jp
add
cmpsl
call
add
lock
jae
in
push
push
add
fsub
sbb
rcrb
fldl
jp
mov
pusha
adc
push
ret
lret
sub
push
adc
lea
loopne
inc
jo
mov
push
adc
outsb
or
pop
movsb
movb
mov
mov
jne
mov
inc
adc
orl
or
movb
adc
test
pop
cmp
adc
imul
push
scas
cmc
jnp
or
std
or
repz
adc
pop
in
scas
add
movsl
lods
mov
sub
or
add
sbb
add
push
xor
jl
mov
cli
out
mov
outsb
xchg
jge
lcall
and
test
jo
aad
daa
pop
mov
adc
dec
adc
adc
inc
jno
inc
adc
outsb
push
sub
test
jbe
or
mov
cltd
xor
lret
cli
out
jb
fmull
add
mov
push
into
mov
or
lods
pop
outsb
icebp
icebp
icebp
je
mov
push
and
and
test
lret
ds
pop
pusha
xor
adc
xchg
push
pop
sarl
push
popa
push
rcll
add
inc
and
cmpb
jo
push
adc
cmpsb
mov
leave
push
xor
leave
push
bound
or
cmp
je
xchg
lock
cwtl
mov
jg
cs
je
inc
lods
cwtl
je
mov
je
push
aaa
sub
and
imul
pop
sbb
mov
push
test
sbb
jae
adcb
test
push
jns
xor
cwtl
jnp
dec
and
push
dec
xor
test
sbb
xor
out
sbb
lahf
sub
mov
imul
mov
jmp
test
xlat
push
mov
mov
xor
push
xchg
bound
add
addb
jae
jmp
add
les
loopne
lret
int3
dec
mov
push
sahf
loope
nop
ds
leave
adc
lods
test
jp
push
std
add
push
add
mov
cmc
jo
mov
pop
jle
rcll
add
mov
jge
das
cmp
sub
test
fwait
push
cmpsl
jo
lea
push
imul
push
dec
dec
cmp
add
and
js
subb
add
mov
or
sub
and
inc
sub
sub
push
mov
aaa
adc
mov
ret
mov
lods
call
mov
shll
lret
mov
mov
insb
pop
push
stc
lcall
or
or
adc
leave
xchg
lods
xchg
dec
pusha
dec
arpl
mov
jg
add
aam
cld
dec
ret
add
ret
push
pop
ja
roll
adc
add
and
jbe
aas
fidivrs
cmp
jae
sub
lock
je
add
jb
pop
pop
fnstenv
and
xor
out
mov
aas
xchg
mov
add
or
cmp
push
push
push
hlt
nop
pop
and
and
rolb
xor
sbb
sti
and
adcl
test
out
mov
jg
clc
adcb
hlt
push
pop
mov
add
add
out
pop
or
mov
cs
outsl
jb
xchg
jo
or
mov
xlat
cmpsb
das
or
outsl
push
push
push
insl
or
pop
sahf
adc
adc
push
in
sbbb
pop
imul
add
cltd
pop
ret
sbb
push
adc
mov
inc
dec
add
push
pop
ret
aaa
add
inc
sbb
ret
testl
mov
mov
scas
mov
mov
jb
ret
xchg
push
xor
sbb
iret
cmp
cmp
stc
dec
or
sub
or
pop
scas
xor
add
pop
mov
sbb
test
loope
sbb
repnz
addr16
push
pop
iret
and
jmp
and
or
hlt
pop
pop
pop
pop
push
mov
ret
push
ss
add
hlt
sbb
lock
cmp
pop
stos
idivb
add
sub
add
movsbl
hlt
fwait
push
or
sub
and
push
xchg
pusha
out
add
sub
loopne
jmp
add
or
mov
clc
adc
addb
sbb
push
or
cld
cmp
jge
mov
scas
adc
push
fidivs
add
adc
test
lea
cmp
testl
push
add
int3
loop
sub
dec
inc
jae
lds
inc
arpl
scas
cmp
adc
insb
sub
hlt
push
push
repz
jns
sbb
inc
mov
jb
syscall
fisttps
jle
inc
add
or
cmpsl
pop
sbb
clc
xor
ret
je
pusha
cmp
add
fmuls
jbe
pop
ret
in
test
pop
add
lcall
rorb
or
sub
cmp
pop
jl
enter
imul
inc
or
mov
xlat
push
fldenv
outsl
fs
xor
jmp
push
hlt
repnz
mov
fwait
dec
inc
cs
dec
push
cmp
ja
bound
hlt
pushf
push
jmp
push
pushf
clc
lds
mov
add
aas
push
pop
inc
aaa
les
cmp
je
cmpl
ja
enter
mov
push
jne
push
push
sub
das
push
mov
mov
and
ss
scas
mov
mov
push
imul
sbb
arpl
xchg
mov
pop
and
or
cmp
sarl
ljmp
mov
jl
cmp
jne
push
sbb
push
cmp
pop
and
call
push
sub
loope
mov
jb,pn
or
add
loop
adc
popa
dec
jnp
incl
xor
jl
out
adc
testl
pusha
and
dec
movsl
pop
ret
mov
ret
push
jmp
or
mov
or
or
sub
xor
mov
pop
adc
aaa
lcall
lock
pop
faddp
iret
mov
pop
push
inc
mov
and
call
push
cmp
je
push
je
pop
popf
imul
testl
pop
push
or
adc
mov
jnp
xor
inc
rcr
repnz
adc
jmp
add
mov
dec
or
call
vfpclasspdx
xchg
add
ffreep
adc
lods
inc
push
sbbb
loop
hlt
inc
std
das
pop
or
lods
sub
mov
adc
cmp
scas
push
cli
jnp
pusha
orl
mov
outsb
push
mov
inc
sarl
push
xor
clc
add
pop
adc
sbb
add
jno
push
adc
pop
jle
add
pop
cmp
jp
sbb
nop
add
fsubrs
out
jmp
ds
pop
pop
test
fildll
dec
push
movsl
push
adc
sbb
in
xchg
mov
jb
nop
loope
push
sbb
je
push
dec
inc
scas
mov
sbb
push
mov
add
adc
int3
movsl
test
push
aaa
lods
jo
pop
push
cwtl
push
add
jne
mov
subl
sbb
cmp
bound
mov
pop
jl
mov
lcall
push
push
or
cmp
ja
add
jmp
nop
jge
add
push
push
add
push
cmovs
or
mov
lods
jbe
jmp
pop
push
pop
into
cmp
inc
in
push
daa
cmp
mov
or
jle
cmpsb
call
add
std
inc
inc
add
pusha
adc
and
xchg
push
xchg
add
movsl
popf
mov
mov
cs
cld
out
pop
xor
or
pop
pushl
int3
or
lock
daa
jae
jmp
sub
and
pop
data16
inc
cmp
add
xor
inc
mov
pop
push
movsb
pop
mov
or
test
ret
xchg
loopne
mov
and
das
cli
andl
adc
and
cld
shlb
mov
add
nop
cmpsl
and
add
icebp
pop
inc
add
loopne
in
clc
lods
push
rol
dec
pop
push
ret
cmp
mov
cmp
pop
mov
pop
push
cmp
cmpl
pusha
adc
es
loopne
aam
push
and
outsb
cmp
fcoml
xchg
xor
hlt
mulb
mov
scas
add
push
xchg
aas
or
fsubrl
mov
inc
jnp
jo
mov
insl
in
fwait
sbb
fnsave
adc
sbb
pop
cmp
mov
xchg
cld
sbb
pop
aaa
movsb
sarb
push
orb
add
cmpsb
leave
push
jl
pop
lret
nop
dec
or
push
adc
mov
je
aaa
jl
xor
pop
inc
sub
das
inc
sbb
dec
aad
sbb
mov
scas
xchg
loopne
pop
add
dec
fidivrl
cmp
test
fisubrl
xor
xchg
ret
xor
filds
mov
push
dec
in
out
push
insb
sbb
mov
or
mov
sbb
dec
push
imul
mov
cmp
jne
jmp
sub
jne
lea
sub
add
mov
or
mov
jmp
sbb
mov
cmpl
notl
fimuls
or
push
rorb
mov
mov
jge
bound
cmp
je
inc
cmpl
jbe
adc
add
rorb
pop
fisttpl
popa
je
mov
ret
push
push
mov
incl
pop
aaa
jnp
inc
ret
mov
mov
pop
cmp
mov
mov
add
jne
loope
fstl
hlt
mov
or
xchg
xchg
dec
insb
jbe
cmpsb
clc
pop
mov
jae
jmp
lea
push
mov
hlt
push
push
pusha
cld
inc
pusha
jg
jbe
sbbl
lock
psadbw
out
or
shll
adc
add
bound
scas
xchg
pop
adc
ret
or
cmp
or
ret
mov
ret
femms
pushf
into
push
cmp
inc
and
mov
lret
ljmp
sub
mov
mov
call
sbb
lea
sbb
inc
mov
ret
jmp
mov
repnz
mov
push
push
imul
mov
cld
mov
push
je
or
cmpb
stos
xor
jle
aas
inc
push
pushf
add
or
or
data16
inc
clc
mov
xorb
mov
mov
aas
and
lds
push
or
pop
jmp
int3
add
ret
push
or
shll
fisttps
dec
je
sub
je
mov
sub
cmp
cmp
ss
pusha
pusha
inc
push
iret
jle
into
or
push
push
push
xor
ljmp
mov
fadds
outsl
sub
jmp
push
sub
cli
pop
adcl
or
pop
add
js
lds
sahf
cmp
int
push
jb
mov
sbb
lea
push
cwtl
rcll
filds
in
or
cmpl
pop
setl
inc
cmp
pop
es
cmp
push
adcl
call
movzwl
jo
enter
pop
jbe
cmp
fs
push
sub
insl
mov
pop
inc
jo
je
jge
std
and
mov
int
push
movsb
inc
jb
cltd
mov
push
jp
adc
imul
sub
out
jne
jle
xor
and
or
loopne
loopne
mov
push
cmp
jo
push
mov
popf
dec
cmp
loope
cmp
adc
outsl
bound
orb
dec
je
or
add
xor
cmpsb
or
dec
dec
pop
cwtl
pop
xchg
xchg
pushf
movsl
sbb
and
cmpsl
fimull
sbb
or
ja
sub
and
pop
ljmp
outsb
ss
incl
or
pushf
fst
outsb
adc
and
push
cltd
ss
mov
mov
lock
and
or
in
adc
fidivs
ja
and
jg
xchg
pusha
loop
pop
gs
cmpl
xchg
xor
xor
nop
ds
ss
das
je
xor
ds
push
mov
sub
clc
in
stc
adc
inc
fstps
mov
sbb
sahf
xor
fwait
ja
jbe
pop
push
aas
fisubrs
fstl
setnp
mov
cmp
icebp
push
push
dec
enter
mov
mov
stos
rolb
cli
mov
or
push
push
out
mov
adc
test
push
inc
mov
outsb
add
shrb
jno
clc
rcrb
cmp
or
rcll
aas
loope
xor
sub
xchg
or
rorb
or
call
and
jnp
push
ds
daa
rcrl
mov
shrl
and
mov
shlb
rcll
adc
jmp
loopne
and
sahf
mov
add
sub
shll
pushl
in
mov
scas
and
mov
in
xchg
int3
test
xchg
fldt
scas
shll
adc
push
mov
sti
pop
xchg
jmp
push
xor
lea
inc
cli
adc
and
mov
popa
or
cmpsb
aad
cwtl
roll
std
mov
decl
movl
push
mov
inc
jg
push
fucomi
add
in
add
and
inc
jmp
ret
and
xor
cwtl
test
xor
mov
jns
aam
xchg
out
aas
cmp
mov
jl
dec
mov
pop
pushf
mov
mov
xchg
push
outsl
pop
xchg
cmp
xor
and
popf
in
sahf
in
push
jle
pushl
faddl
es
cmpb
cli
or
ficompl
fildl
pushf
lock
iret
and
loopne
mov
faddl
cmp
push
sarl
and
pushl
icebp
lock
xchg
scas
lock
push
inc
in
loopne
test
das
mov
jge
movsl
xor
add
push
movsb
rolb
addl
cmp
push
enter
xor
jecxz
cli
mov
test
sarb
mov
push
pop
push
jp
add
push
pop
jle
dec
aas
mov
filds
lea
in
cmp
in
aam
jo
adc
inc
sub
sbb
jae
mov
lcall
jl
push
outsb
pusha
mov
mov
dec
cmp
addb
xchg
dec
xchg
pushf
pop
insb
movl
mov
les
sbb
mov
div
pop
pop
xlat
cwtl
push
push
cmp
jl
dec
outsb
addr16
add
dec
addr16
mov
adc
or
push
movsb
cmp
inc
pushf
clc
ljmp
inc
cwtl
lock
std
inc
stos
cmp
je
mov
leave
and
xchg
cmp
jne
mov
adc
push
or
cld
shl
or
and
sbb
data16
mov
and
adc
loop
or
adc
test
push
mov
shld
test
push
test
fs
sub
push
in
std
inc
cmp
movsb
xchg
mov
push
push
xchg
in
ds
add
mov
push
shrb
in
in
sub
add
mov
and
adc
mov
daa
push
push
push
xor
daa
sahf
divl
mov
mov
add
cmp
loop
and
ret
shrl
xchg
xor
stos
push
cmp
je
mov
out
sbb
or
xor
je
pop
daa
or
or
inc
cs
push
push
push
add
push
adc
mov
jmp
int3
addl
mov
add
lret
loope
or
cmp
sub
call
js
xor
pushf
lock
inc
repnz
fildl
push
dec
lret
loope
mov
pushf
fiaddl
bound
adc
or
mov
pusha
sahf
mov
je
adc
mov
push
testl
nop
movl
rorb
shlb
jmp
je
push
add
sub
or
push
std
dec
js
add
cmp
test
mov
fcoms
or
inc
inc
pop
inc
inc
fs
jp
inc
jecxz
imul
dec
push
sub
je
insb
lea
enter
rol
sarb
sub
sbb
cmp
and
jmp
mov
fldpi
push
bound
pop
pusha
lock
add
xor
xchg
adc
lret
cmpsl
xchg
enter
push
pushl
in
jge
rolb
add
push
jmp
das
fs
clc
fwait
je
sub
jne
ret
jbe
mov
aad
add
jg
cmp
mov
mov
dec
inc
je
jnp
xor
dec
je
add
sub
dec
jne
push
and
dec
add
add
add
add
mov
inc
aaa
jle
test
jbe
sbb
cmpb
and
roll
jne
mov
adc
adc
lret
lods
inc
add
inc
ret
inc
js
inc
js
andl
push
int
xchg
cmpsb
xor
mov
int
cmp
leave
ret
mov
call
pop
sub
cmp
and
lods
mov
dec
and
rolb
jl
out
dec
xor
adc
adc
sbb
sub
aaa
in
mov
out
or
push
push
push
movsb
push
loopne
or
mov
xor
push
imul
in
xor
adc
mov
sbb
lds
inc
or
jmp
fsubrs
pop
or
pop
cmp
mov
inc
or
es
push
mov
dec
add
push
rorl
lods
jbe
repz
pop
jmp
pusha
cmpsl
in
dec
lods
mov
xchg
inc
sub
adc
call
xor
mov
mov
movl
mov
aad
fsts
or
adc
enter
push
call
dec
push
inc
sbb
adc
orb
loope
dec
andb
sbb
stc
dec
or
je
pop
push
mov
arpl
jbe
shrb
push
shrl
inc
xchg
lea
xor
aam
push
cmp
dec
or
fcoms
adc
pop
es
imul
pusha
push
je
pop
pop
xchg
pop
nop
aas
mov
sub
lock
test
test
sub
js
lret
jbe
fmuls
cmp
jb
dec
inc
in
inc
stos
test
test
jp
xor
clc
je
mov
cmp
jbe
dec
jmp
jg
push
xchg
push
pushl
in
and
pop
jmp
mov
mov
add
filds
and
jle
jmp
push
sub
scas
fsubs
jo
add
jge
cmp
ja
pushf
add
lcall
jo
cmp
sub
adc
je
xchg
push
adc
xchg
shl
data16
xchg
push
or
jo
or
data16
cmpsl
test
leave
pop
cmp
and
push
adc
push
pop
mov
out
inc
flds
push
push
xor
sbb
mov
addb
jae
cmp
or
and
mov
mov
sbb
add
jg
mov
cmpl
daa
neg
pop
je
insl
mov
add
pop
in
scas
out
inc
in
lds
pop
pop
push
push
add
xchg
jne
jns
push
push
push
sarb
dec
andb
call
adc
push
out
shr
sbb
pusha
mov
cmp
pop
mov
inc
dec
push
hlt
xlat
mov
call
lcall
or
leave
mov
jno
cmovg
xchg
stos
pop
push
add
xor
xor
or
cmp
add
xlat
icebp
dec
xor
xor
lods
cmpl
push
aaa
inc
sbb
pop
push
dec
sahf
mov
cwtl
push
push
xor
xor
data16
clc
mov
fs
mov
pop
popf
rclb
wrmsr
sbb
arpl
mov
inc
push
mov
insb
sbb
pop
xchg
push
push
jecxz
shll
or
incl
pop
inc
and
cmp
jne
push
out
xchg
adc
cmpsb
mov
movl
push
xlat
add
dec
push
dec
mov
int3
pop
shr
adc
mov
sbb
cmp
pop
jp
in
ljmp
je
dec
je
add
push
sbb
add
loopne
fcoml
shr
add
jbe
sub
fdivs
inc
cmpsl
daa
fidivs
pop
push
or
mov
jmp
pop
cltd
jae
push
jmp
popa
movsb
add
int3
rcl
fisubl
pop
insl
push
int
pop
nop
xor
pop
sbb
dec
and
jmp
adc
icebp
add
dec
xor
xor
sub
fwait
sub
sub
cmp
rcll
rolb
xlat
mov
cmp
mov
ss
add
and
add
ret
pop
notb
dec
cmp
dec
push
pop
sub
cmp
xchg
jno
inc
inc
push
out
xor
push
sbb
add
sub
jns
fucomi
or
dec
cmpsb
xadd
decb
enter
jbe
aas
mov
xchg
sub
push
add
push
imul
je
scas
jmp
push
inc
lea
cmp
jb
sub
popf
sbb
pop
cltd
xchg
or
mov
xchg
int3
push
or
rolb
clc
jae
shr
orb
les
pop
and
decb
cmc
push
ret
add
mov
jmp
push
mov
sub
test
fs
add
mov
jo
lock
jbe
mov
mov
cmp
inc
jmp
outsb
lds
loopne
adc
loop
cmp
jb
test
adc
pop
mov
push
xorb
lahf
aaa
mov
inc
imull
rorl
cmp
ja
cmp
je
or
jl
aad
shll
sub
addr16
sarb
mov
mov
lcall
addl
cmp
jae
fildll
cli
cld
call
push
inc
add
adc
xor
loopne
mov
mov
loope
dec
inc
dec
inc
jb
xorl
adc
rorb
or
ret
add
or
call
push
mov
lret
les
inc
mov
add
sbbb
ret
sub
pop
icebp
aas
out
push
cmpsl
leave
add
int3
dec
inc
xor
xor
cltd
or
loop
and
add
jns
jmp
pop
jecxz
sub
cld
out
mov
xchg
jae
outsl
push
push
pop
pop
xor
shl
les
push
dec
add
or
and
roll
int
pop
call
inc
aam
hlt
push
or
sub
push
mov
push
hlt
mov
lock
dec
ljmp
cmp
push
addb
add
push
insb
in
enter
push
sbb
cmpsb
inc
or
inc
inc
enter
pop
ljmp
mov
add
mov
mov
inc
mov
push
pushf
test
in
or
mov
inc
mov
sub
lods
or
or
mov
jno
and
inc
push
jbe
call
add
call
dec
mov
inc
sbb
sub
pop
and
test
lahf
jo
in
cmp
xchg
adc
es
ficomps
xchg
imulb
ret
lret
adc
cmpsb
test
xor
sbb
inc
sbb
or
jae
push
inc
jg
xchg
nop
testl
add
jmp
push
notl
jg
cmp
xor
mov
out
or
mov
adcb
arpl
push
pusha
push
pop
je
cs
lret
inc
or
scas
push
or
out
clc
scas
inc
movb
pop
pop
inc
cmpsl
xor
enter
mov
decb
roll
mov
push
or
repz
push
dec
mov
gs
adc
or
jne
add
cs
dec
popf
or
rcll
adc
xor
dec
sub
xchg
movsb
popa
nop
dec
dec
fsubl
mov
pop
inc
xchg
pusha
mov
in
ret
in
shll
fistl
jbe
inc
lea
push
or
lahf
mov
cmp
cmp
jle
jecxz
xor
decb
adc
pop
and
notb
das
popa
cmp
movsb
daa
xchg
fmull
adc
or
jo
or
roll
in
iret
rcll
mov
in
call
pop
mov
test
mov
test
sahf
mov
dec
adc
push
fadds
inc
das
mov
sti
or
sbb
and
push
sti
mov
pop
mov
lret
push
bound
test
push
add
sbb
mov
adc
test
lret
mov
stos
add
bound
mov
pop
or
dec
lock
and
pop
test
adc
push
js
je
xchg
push
add
fdivrs
hlt
dec
sbb
dec
mov
faddl
je
dec
sbb
add
outsl
or
dec
sbb
sub
inc
lock
nop
stos
push
invd
push
mov
pop
js
xchg
enter
shr
push
idivb
fucomi
push
push
pop
add
xchg
imul
push
sub
add
mov
push
test
pop
inc
in
inc
ficoml
in
mov
lock
adc
sub
and
andnps
aam
mov
push
and
inc
into
push
sti
add
add
ficoml
lahf
adc
ljmp
clc
mov
or
mov
push
lea
xchg
cmp
add
call
mov
mov
neg
fidivrs
test
std
andb
pop
cmp
mov
jle
jo
outsb
add
sbb
pusha
cmc
push
inc
push
push
xor
dec
cld
jnp
mov
loopne
mov
sub
subb
jl
mov
roll
mov
dec
sbb
adc
push
insb
addb
and
push
add
rorl
xor
inc
mov
or
out
out
xchg
mov
aaa
xor
je
push
pop
push
add
rcll
data16
mov
xor
orl
or
and
nop
inc
pop
cwtl
data16
addr16
adc
lods
xchg
or
cmpsb
or
dec
fldenv
and
ret
jo
pop
imul
mov
inc
inc
std
sub
out
addr16
mov
jmp
test
ror
inc
xor
xchg
mov
xchg
xchg
roll
or
or
jns
adc
les
mov
add
adc
incl
mov
aad
pusha
mov
ja
cmc
cmp
rcl
iret
and
data16
mov
push
js
shll
mov
mov
fs
lods
add
add
shlb
jne
in
mov
push
popa
push
sub
cmp
pop
lahf
js
std
sbb
ret
mov
mov
add
inc
enter
mov
push
cmp
or
jmp
cmp
mov
sub
pop
mov
outsl
and
shr
or
add
cmp
jne
test
push
lods
push
cmp
fidivrs
cmp
jne
jmp
push
inc
in
lret
pushf
les
cwtl
xor
dec
fistpl
or
or
or
mov
mov
es
iret
jp
or
add
outsl
jo
daa
adc
clc
inc
rcrb
inc
mov
mov
lea
sub
mov
sbb
sbb
dec
sub
cmpps
adc
dec
dec
dec
push
mov
mov
push
xor
negb
jl
add
roll
add
mov
add
push
jecxz
or
cmp
ss
add
add
and
xor
pop
cld
xlat
push
adc
add
pop
and
scas
loope
dec
and
sbb
lock
push
testb
or
outsl
xlat
mov
xchg
jle
sti
pop
arpl
mov
pop
mov
adc
shll
out
mov
lret
mov
or
testb
cmp
sub
dec
repz
sub
xor
xor
inc
fcmovbe
dec
aam
cmp
sti
jno
dec
out
mov
stos
call
lock
fbstp
fs
or
push
mov
popf
stos
adc
mov
xchg
push
push
push
pop
push
pop
sbb
cmpsl
xor
sbb
faddl
mov
lock
gs
add
mov
aas
add
pop
sbb
push
aad
lcall
xchg
xor
push
nop
pop
add
inc
imul
inc
ds
inc
add
rcrl
in
cmp
pop
pop
push
outsb
pusha
call
enter
sub
push
lds
add
xlat
cmp
xlat
or
js
cld
test
clc
cmpl
in
xchg
dec
mov
sub
cltd
or
dec
bound
push
pushl
cltd
fs
and
mov
inc
mov
pop
or
jmp
cmp
and
xchg
mov
lods
in
test
or
sub
mov
je
sbb
addr16
push
pop
arpl
gs
nop
xor
pop
jle
dec
loope
adc
jo
add
std
cmp
add
loopne
push
adc
call
outsl
out
flds
cmpsb
push
mov
scas
shrb
or
mov
add
sar
sub
mov
dec
sbb
dec
add
dec
xor
je
test
add
sub
or
call
sub
mov
ret
sti
pop
jno
data16
and
in
es
sbb
mov
rcl
fmuls
add
mov
add
dec
test
push
stos
inc
stos
pop
fsub
push
in
movl
dec
pusha
or
sub
jbe
fwait
push
js
fdivl
insl
and
in
dec
cmp
pusha
and
pop
call
or
cld
dec
xchg
sbb
push
lret
je
adc
xor
sahf
call
xchg
pop
adc
pop
sbb
aas
insl
enter
cmp
jmp
fistpll
adcb
cwtl
addr16
pop
inc
jne
das
push
xor
in
je
inc
sbb
sub
sub
int
or
push
jmp
je
shll
ret
mov
dec
inc
incl
dec
call
lock
and
sub
inc
add
jge
bound
mov
flds
and
ss
sbb
inc
push
xchg
mov
rcrl
cld
push
mov
movsl
sub
js
push
sbb
sbb
lock
iret
mov
filds
push
xchg
ljmp
cmpsb
addr16
ret
push
aaa
clc
bound
push
sub
adc
popf
pop
paddb
xor
ljmp
inc
in
or
enter
movsb
or
add
pop
jge
pop
or
ja
inc
push
lea
dec
xor
in
add
imulb
fldt
add
mov
cmp
lcall
sbb
pop
test
sbb
xor
fwait
cmp
inc
inc
dec
pop
push
negl
jo
rclb
ffree
pop
cmp
inc
or
pop
mov
xchg
cs
lret
in
pushf
mov
mov
mov
mov
lret
in
mov
mov
in
in
lock
jb
clc
cld
add
mov
or
adc
lret
in
sbb
and
jb
pop
cs
xor
cs
lret
in
inc
inc
dec
dec
in
mov
pop
pop
cs
lret
pusha
fs
jb
je
jl
loop
and
or
pop
push
leave
stos
or
mov
and
jo
xor
mov
testb
pushf
int
mov
cld
test
in
in
adcl
pop
xor
test
jno
dec
push
adc
mov
jbe
or
mov
cs
std
jo
or
adc
mov
and
js
and
sbbl
dec
xor
add
hlt
inc
xchg
into
mov
dec
pop
xor
insl
mov
add
mov
or
mov
je
fsubrl
xchg
subl
js
fs
mov
dec
add
insl
xchg
add
push
and
nop
push
adc
mov
imul
or
imul
lds
inc
push
add
mov
outsl
lods
outsl
jo
jge
iret
jne
push
je
inc
icebp
dec
sbb
out
xorb
pop
add
cmpl
subb
push
pop
push
addb
add
jmp
mov
or
dec
or
gs
inc
jbe
or
enter
lds
dec
dec
jno
mov
cs
and
inc
mov
sbb
add
fmuls
std
xor
adc
inc
cmpsb
adc
dec
jmp
stc
rolb
cmp
outsb
jo
or
sbb
and
adc
push
bound
pop
test
test
out
pop
movsl
sahf
xor
clc
and
idiv
push
fistpll
or
lock
xor
cmp
je
sub
clc
add
sub
xchg
jmp
in
ljmp
hlt
xchg
mov
lret
mov
sahf
shll
add
notb
inc
std
lock
mov
lcall
mov
mov
jo
jle
push
shll
jl
mov
pushf
inc
add
sbb
shrb
in
push
cmp
iret
mov
jbe
inc
dec
lock
jge
das
enter
jg
add
lock
push
jo
dec
pusha
push
sbb
pop
mov
addl
hlt
adc
jne
mov
loopne
add
add
xor
ja
orl
add
xor
inc
idivl
pop
push
jmp
lea
push
lock
mov
xchg
jo
xor
add
xor
ljmp
push
or
or
or
or
pop
mov
fst
push
lcall
jmp
cmpsb
push
mov
inc
je
cmp
loopne
test
xchg
pop
jb
fdivs
push
add
sub
movsb
cmc
mov
xor
enter
cmc
jne
in
outsb
insl
add
mov
inc
loope
rorl
mov
fldt
pop
jp
pop
les
lea
push
jae
clc
sbb
push
enter
jle
jge
adc
loop
call
or
pop
jns
sbb
cmp
push
js
jmp
adc
aad
dec
or
js
leave
inc
je
ds
rclb
dec
std
subb
adc
sbb
jo
out
push
or
fildl
repz
xor
sub
arpl
ja
pop
lret
sbb
sar
or
stos
adc
movsl
rolb
mov
imul
mov
cwtl
cmpsl
ret
push
sbb
push
push
popa
push
push
mov
jp
add
cmp
jge
es
jecxz
shl
add
je
fistpll
xchg
mov
add
int3
inc
adc
les
jl
mov
pop
cmp
add
mov
add
jmp
sbb
clc
mov
testb
push
imul
out
sahf
mov
and
push
imul
xorb
sub
shrl
out
loop
push
mov
add
lahf
sbb
and
pushf
shlb
lret
fidivrs
inc
add
mov
inc
icebp
insl
cmp
add
or
iret
aam
icebp
add
cmp
pop
add
nop
push
fdivrl
xor
outsb
jp
jl
push
call
fnstenv
and
out
adc
jnp
mov
ret
outsl
insb
out
loopne
mov
mov
cmpl
add
mov
and
and
jmp
push
dec
dec
pop
jecxz
or
fcmovnu
cwtl
je
xor
call
icebp
xchg
in
push
jle
pop
std
inc
or
xacquire
fistpll
push
jp
or
cmp
imul
test
cltd
xchg
pushl
sub
jmp
loop
ret
or
jp
mov
or
lret
mov
push
lea
dec
cmp
or
jno
inc
jmp
add
xor
mov
push
scas
sbb
push
jbe
and
inc
push
pop
push
sub
mov
push
or
push
or
loop
pushf
lods
push
outsl
sahf
fcomps
sbb
xchg
jo
or
xor
push
push
adc
lcall
roll
out
loopne
int3
in
movsb
sub
ds
out
mov
dec
inc
fdivrl
jbe
ret
aad
ret
inc
inc
lret
or
lahf
mov
ljmp
pop
imul
sub
push
or
sarb
push
jne
mov
loope
jbe
jbe
mov
inc
jmp
or
aad
aam
or
ss
pop
jl
jp
arpl
pop
mov
not
add
ljmp
push
pop
push
push
mov
xor
add
add
add
jle
imul
sub
rorb
dec
sub
movsl
rcrl
push
clc
mov
jl
into
inc
pusha
xor
adc
push
test
sub
cmp
fildll
pop
clc
aam
jge
test
insb
shrl
jne
or
jecxz
cld
fiaddl
lock
fcomps
pop
mov
xchg
mov
clc
mov
faddl
lock
jmp
push
orl
sub
stos
lods
and
inc
pusha
add
mov
loope
mov
push
or
add
mov
cmp
in
mov
sub
cltd
dec
fwait
jge
and
push
sub
fimull
mov
rorb
inc
xor
out
outsl
push
push
call
jmp
and
scas
movsl
adc
jo
sbb
clc
jo
push
cmp
outsb
mov
sti
push
sub
sub
pop
ja
sbb
add
cmc
cmp
jae
mov
bt
sbb
xor
sub
push
sti
jns
sub
cmc
mov
dec
sbb
js
loop
and
iret
fcoml
push
and
cld
or
jno
aaa
jbe
sbb
jb
sar
loopne
mov
rorl
sub
neg
sbb
cmp
xor
push
bound
clc
jno
mov
hlt
jnp
hlt
imul
not
test
mov
inc
dec
jbe
lcall
inc
or
adc
jge
test
add
jl
add
inc
lods
mov
cmp
jbe
xchg
push
cmpb
mov
imul
pop
add
sbb
stos
mov
jnp
lea
xchg
mov
rol
push
mov
push
pop
add
je
es
ljmp
mov
lock
push
or
dec
out
outsl
ret
cmp
mov
lea
add
pop
push
cmp
mov
push
mov
add
idivb
jne
push
push
push
jns
stos
adc
movb
push
out
aas
lret
imul
or
xor
aam
add
add
insb
test
clc
ret
mov
loope
data16
cli
fdivs
pop
popf
in
pushf
sub
dec
es
pop
or
and
pop
and
sbb
mov
push
dec
pop
sub
mov
adc
jae
popa
jnp
jmp
das
mov
inc
jl
pop
lcall
jnp
mov
in
dec
pushf
mov
cmpsl
scas
test
or
xor
lods
cmp
clc
add
mov
mov
or
and
and
cmp
or
stos
jns
adc
inc
lods
xor
mov
push
add
loopne
pop
ret
clc
into
add
loope
mov
or
sub
lret
cld
mov
jg
add
push
xor
add
pusha
jl
or
xchg
mov
xor
or
rorl
add
push
out
lea
fisubs
mov
xor
mov
and
jbe
adc
aad
fsub
mov
push
jmp
xchg
in
adc
or
mov
outsl
xchg
xchg
lcall
ret
xchg
fdivs
mov
add
test
hlt
stos
mov
jmp
adc
sti
xor
nop
mov
push
push
inc
js
xor
insb
cld
cmpb
xchg
insl
in
out
jbe
mov
add
rorb
cmp
ficompl
cmp
ljmp
jp
rolb
dec
aam
inc
iret
dec
pop
cmp
and
push
inc
jge
add
lds
pop
and
and
sub
das
cmp
icebp
adc
movsl
arpl
cmp
cs
cmp
pop
add
add
add
adc
adc
insl
jl
sub
inc
clc
inc
pop
cld
mov
int
jne
sub
je
jns
ficoml
fdivs
fs
mov
lods
popa
adc
lret
mov
mov
cmp
xchg
pop
loope
fsubrl
lock
cmp
je
mov
push
add
inc
push
push
loop
inc
adc
mov
sti
push
jno
add
imul
sub
hlt
adc
lahf
loope
dec
xchg
push
push
add
fnsave
ficomps
fcompl
xor
jecxz
push
mov
loopne
test
jbe
bound
cmpl
xor
outsb
or
sub
sub
inc
and
add
fcomp
jne
push
test
add
scas
xor
and
icebp
push
in
ret
adc
fstpl
dec
push
xorb
xchg
inc
xor
pop
add
sti
jle
cmp
aaa
es
jae
shlb
push
push
push
mov
pop
lea
sub
lret
pop
or
push
pop
or
inc
js
cmp
insb
add
hlt
inc
je
out
je
cmp
outsb
inc
sbb
push
push
insl
push
push
ja
sub
lea
xchg
jp
cmp
jae
or
inc
push
add
mov
imul
pop
mov
mov
test
mov
dec
pop
mov
xor
or
mov
xchg
nop
imul
fcmovbe
cltd
add
addl
scas
sub
mov
push
js
pop
inc
inc
and
or
or
loopne
test
out
adc
popl
idivb
dec
mov
or
cwtl
and
out
out
mov
adcl
jle
push
jle
or
sub
aam
xor
dec
stos
jne
jl
cmp
pop
nop
push
dec
xor
jo
sub
aam
pop
mov
sbb
xor
mov
clc
mov
mulb
fidivrs
xchg
icebp
pop
mov
push
je
push
or
xchg
js
mov
xor
inc
sub
cli
pop
pop
loop
mov
push
adc
clc
iret
ljmp
out
into
pop
jns
cs
je
push
fadds
add
sub
mov
push
jmp
in
cmpsl
pushl
jge
cmp
idivl
jp
and
jns
inc
test
shlb
mov
jb
cmp
add
inc
dec
fiadds
mov
jnp
pop
outsb
jne
fisubrs
movl
jge
rep
mov
hlt
cli
mov
push
std
pop
out
andl
loope
pop
cwtl
test
mov
add
dec
pop
icebp
and
imull
add
push
hlt
xor
sub
push
mov
mov
jg
mov
shlb
sub
and
outsl
push
scas
sbb
fbstp
and
inc
push
push
cmpsb
sbb
sbbl
cmp
xchg
jmp
pushf
je
daa
ljmp
add
mov
dec
repnz
clc
cmp
out
adc
es
rcr
insb
cmp
and
mov
jle
push
jo
fidivrs
decl
jmp
or
adc
mov
pop
in
loop
mov
or
pop
or
push
adc
sbb
mov
mov
mov
sub
stos
push
leave
mov
mov
push
dec
ja
xor
cwtl
mov
xadd
and
popa
inc
jg
mov
aaa
daa
mov
out
filds
outsl
and
test
add
mov
or
jns
pop
pop
aas
mov
cmpl
mov
sete
jmp
jmp
cmp
add
cltd
out
scas
pusha
fdivrp
repz
inc
je
push
lods
jne
faddp
jbe
bound
sbb
out
inc
push
insl
test
mov
out
loopne
stos
fldenv
jne
push
test
jbe
cmp
pop
es
lret
cmp
mov
add
call
mov
push
std
std
add
or
lret
mov
xchg
fs
dec
adc
push
dec
popa
jmp
cmpsl
push
lods
inc
sub
inc
and
shlb
mov
adc
cmovp
inc
adc
imul
xor
das
enter
add
cs
mov
pop
enter
mov
movsl
push
lods
inc
ljmp
or
or
aad
sub
adc
pop
push
or
and
in
mov
or
fsubrs
mov
cmpsl
daa
pop
das
xchg
jmp
mov
dec
pushf
add
mov
adc
in
and
push
cmp
sub
add
inc
dec
mov
xor
push
or
push
jg
push
pop
ret
mov
and
jmp
je
and
add
adc
adc
sbb
test
push
fisubl
sub
adc
cmp
arpl
jo
das
adc
xor
dec
or
adc
add
jl
stos
adc
int3
call
xor
xor
lods
add
enter
sub
out
xchg
xor
aaa
dec
pop
lret
je
hlt
inc
lods
mov
jne
nop
inc
add
jg
dec
push
or
ficompl
rolb
add
daa
push
int3
mov
jmp
pop
adc
fidivrl
pop
dec
dec
add
cld
fistl
jbe
and
fwait
inc
icebp
popa
inc
dec
and
push
sub
dec
push
rcrl
mov
jmp
push
dec
cmpsl
push
test
movsb
sub
andl
or
popaw
add
stos
jmp
in
je
cmp
xlat
adc
pop
xchg
fsubs
test
fcoms
inc
sub
push
xor
in
repnz
hlt
loopne
lcall
mov
fsts
dec
enter
add
es
and
cmpsb
or
mov
push
jo
ficompl
loopne
leave
push
je
ss
cltd
ret
pusha
insb
fsts
cli
mov
mov
sti
dec
loope
stc
add
fmuls
js
fldcw
jle
cmp
jg
cmp
jle
push
pop
aas
jne
loop
lea
cltd
sub
lea
sar
clc
rol
shl
aam
mov
sub
cmp
jle
push
in
dec
sub
pop
pop
xchg
flds
add
rorl
jbe
test
stos
test
mov
lcall
out
movl
iret
shl
inc
testw
pop
sbb
lock
add
or
fsubrl
push
xorl
and
adc
test
pop
sbb
dec
sahf
push
inc
lcall
adc
pop
xchg
ret
dec
push
cmp
inc
mov
cmp
inc
or
flds
cmpb
xchg
lds
xor
jbe
jno
mov
jns
in
xchg
fs
jno
punpcklbw
and
in
add
adc
xchg
cmp
push
repnz
jbe
mov
aaa
add
mov
ror
loop
xor
jne
mov
scas
pusha
pushl
cmp
xchg
fdivr
cmpl
cmc
mov
pusha
and
mov
push
pop
xchg
fcmovnu
cwtl
lods
fstpt
mov
sbb
push
add
ret
adc
xchg
push
fimuls
adcl
je
lea
add
jl
cmp
jl
or
sbb
sti
rolb
and
adc
push
loop
inc
push
fisttpll
mov
jb
push
add
clc
out
mov
lock
xchg
jl
push
fld
xchg
in
pop
inc
or
pop
push
mov
jmp
mov
pop
rorb
mov
pop
mov
imul
clc
imul
call
sbb
jle
xchg
sarl
hlt
pusha
ficompl
add
inc
jo
ss
jne
jp
inc
xchg
add
push
movsl
adc
clc
jb
push
mov
push
rcr
or
lret
or
gs
dec
add
push
das
push
into
cmc
or
jne
loopne
xor
lock
jnp
push
add
outsb
mov
mov
add
sub
dec
xchg
adc
ss
push
clc
movsl
lock
sub
movsb
das
or
ss
sub
jmp
cmp
filds
and
sbb
jno
push
or
pop
sbb
cwtl
adc
cmp
or
jnp
xor
push
xor
xor
jp
mov
add
popf
enter
and
mov
mov
pop
cmp
inc
push
lods
dec
loopne
je
push
or
cmp
or
inc
push
jnp
arpl
push
flds
pop
sub
push
jnp
je
and
add
bound
jbe
adc
mov
lret
or
adc
sbb
push
pop
add
aad
jbe
add
or
js
xchg
pop
xor
inc
cmp
iret
test
add
pop
in
and
pusha
in
and
add
sbb
dec
sbb
xchg
dec
pop
mov
and
dec
mov
mov
mov
and
mov
lods
add
fiaddl
test
adc
inc
js
sub
in
jl
push
arpl
xchg
add
bound
orl
and
push
add
or
sub
lods
popa
cmp
adc
mov
xor
adc
dec
xchg
pop
cmp
es
or
lret
adc
xlat
dec
sbb
cltd
inc
jl
je
push
aaa
add
cmp
inc
pop
enter
mov
push
fisubrs
xor
pop
subb
sarb
push
rcrb
lock
ret
push
jne
lea
mov
dec
add
push
mov
pop
or
adc
imulb
aad
push
xchg
xlat
or
jo
leave
jge
cmp
in
push
fidivrs
imul
push
mov
arpl
sub
xor
call
ljmp
popa
inc
lods
mov
inc
push
add
mov
test
add
jl
xchg
sbb
xor
sbb
cmp
cmpsl
and
sbbl
and
xchg
gs
roll
gs
jne
sahf
push
mov
ficoml
pop
test
sub
cmp
insb
ret
pushf
into
add
subb
push
add
pop
sbb
lods
push
in
or
out
cmp
push
jg
and
mov
rol
out
pushf
mov
cmp
and
sub
cwtl
sbb
cld
adc
sbb
and
shl
test
jecxz
faddl
add
jl
mov
push
dec
and
or
push
rorl
movb
add
test
or
and
cmp
cmp
sub
iret
ret
lret
add
adcl
push
cli
dec
push
and
rcll
lret
test
dec
mov
ja
out
mov
arpl
jnp
lea
pop
pop
outsl
aas
je
pop
aaa
mov
sar
adc
outsb
sbb
push
push
and
adc
adc
push
popf
sahf
jmp
xor
call
insb
into
xor
test
xor
les
cli
or
jno
push
dec
mov
mov
imul
cmpb
je
cmp
je
cmp
inc
test
lock
fiaddl
sbb
mov
mov
inc
add
inc
jnp
jnp
sahf
xor
jmp
imul
dec
lods
imul
dec
sub
cmc
sub
push
add
xlat
xchg
mov
shll
pop
js
jge
push
fwait
mov
clc
imul
add
add
pusha
pusha
mov
cmp
xlat
imul
mov
mov
cmp
adc
and
loop
out
add
inc
decb
faddl
or
sti
mov
or
test
cmp
xor
inc
mov
sub
dec
pop
loopne
mov
mov
xchg
insb
mov
adc
mov
test
aam
pop
mov
out
add
ret
and
pusha
int3
dec
add
push
loope
dec
cs
push
inc
fadds
jne
xor
add
loopne
scas
loopne
iret
add
fcoms
add
mov
ret
and
test
es
mov
int3
jmp
inc
rol
jnp
clc
out
std
or
subb
push
adc
xchg
mov
adc
add
pop
or
pop
cmp
xchg
loop
xchg
dec
data16
push
data16
loope
add
xlat
push
xchg
ljmp
mov
and
sub
push
fdivrl
mov
jle
je
push
push
cld
adc
inc
push
xor
inc
xchg
xor
push
sbb
jmp
mov
movb
or
sub
mov
xor
sbb
fsubl
pop
fcoml
mov
sub
flds
in
mov
loopne
or
cmp
in
or
mov
adc
aam
xchg
or
add
and
mov
dec
push
or
xchg
sahf
ret
or
clc
jg
xor
js
leave
cmpsl
mov
or
insb
adc
mov
into
cmp
inc
xorl
or
and
loopne
clc
jnp
jb
movsb
mov
ret
sbb
push
and
orb
test
mov
adc
sub
out
movsl
mov
movb
pop
negl
fsubrp
sbb
ja
xlat
push
into
adc
jae
outsb
rcll
add
sarl
je
push
es
add
pop
rcll
and
or
mov
dec
jns
xor
scas
sbb
xchg
dec
mov
pushl
or
scas
mov
movsl
pusha
sbb
mov
stc
rcrl
jno
mov
xor
loope
pushf
fists
testl
or
int3
mov
and
sbb
jbe
pop
xchg
popa
sub
pop
jge
and
add
add
mov
cli
outsw
jp
sub
pop
xor
ja
mov
popf
fs
jnp
sbb
adc
cmp
iret
pop
sbb
mov
jmp
fistl
pop
add
mov
push
mov
andl
cmpl
in
jne
lds
sbb
or
cmpsl
jb
iret
jge
or
and
sbb
xchg
lods
pop
daa
mov
pop
shll
call
ja
cmpsl
jge
aaa
ss
cmp
xor
je
ror
inc
mov
pop
pop
out
push
jmp
push
jo
inc
mov
cmp
push
pop
push
cwtl
add
jmp
pop
xor
jmp
xchg
pop
lock
dec
jge
mov
and
mov
cltd
cmp
pop
sub
pop
in
scas
fisttps
cmp
or
lds
pop
or
push
inc
cmc
jle
rorl
mov
les
mov
jnp
add
adc
adc
mov
adc
mov
mov
add
pop
push
or
fbld
repz
lahf
nop
and
inc
push
sbb
xchg
mov
mov
inc
xchg
mov
mov
pop
shr
pop
iret
pop
int3
push
push
push
dec
inc
ret
repnz
push
pop
sbb
sub
and
jl
pop
inc
mov
xor
jmp
mov
leave
jae
push
shrl
xchg
inc
jbe
movlps
jne
lea
movsl
dec
adc
xor
mov
enter
xor
inc
lods
adc
push
jp
outsb
add
or
xchg
sbb
jno
lea
add
xchg
sbb
addl
inc
fmull
pop
mov
jo
ja
mov
in
or
popf
jl
pop
jmp
adc
ja
sub
jne
push
pop
mov
into
pop
test
leave
clc
pop
adc
seto
neg
or
mov
pushf
shl
push
adc
jo
pop
xor
or
test
pushf
gs
push
fistpl
fists
or
adc
lock
add
scas
push
adc
aam
pop
orb
cmpsb
enter
and
adc
fldcw
mov
pop
fcmovne
popa
sub
or
xchg
jmp
push
loope
adc
mov
dec
sbb
test
cmc
and
fistpll
xchg
adc
jl
push
mov
test
call
inc
mov
pusha
add
add
adc
inc
sti
xor
dec
push
or
xchg
mov
add
and
inc
neg
sbbl
mov
jmp
cmp
rorb
inc
ret
in
repz
xchg
fcomip
inc
jmp
sbb
roll
xor
bound
jbe
bound
pop
adc
jne
inc
fdivr
jb
cmp
in
scas
loopne
push
mov
div
dec
idiv
sti
inc
cmp
jae
pop
lea
mov
cmp
inc
arpl
pop
subb
jno
pop
jp
sbb
mov
push
movsl
mov
sub
scas
es
push
sub
xchg
mov
lods
cltd
sub
cwtl
adc
or
adc
stos
inc
xor
sbb
and
imul
or
shrb
pop
or
shlb
push
dec
lea
js
push
test
xchg
inc
push
adc
test
aam
jo
mov
loop
mov
lods
push
push
sbb
test
pop
popa
ret
jne
cmp
lds
cmpsb
push
test
xor
test
fadd
add
ficoml
jge
ret
adc
add
sbb
addb
sbb
jg
subb
shlb
or
mov
sahf
std
cwtl
adc
jge
popf
gs
int
sbb
push
inc
loop
or
add
enter
test
sbb
push
int
push
stc
jmp
loopne
shlb
shr
push
pop
adc
aam
add
lock
js
dec
movsl
lock
hlt
pushf
mov
cmp
les
mov
inc
call
loopw
or
jg
add
push
movb
jmp
dec
push
loope
push
dec
movsb
pop
cmp
aam
daa
std
leave
and
mov
lret
sub
andb
mov
xchg
add
pop
or
inc
mov
push
imul
clc
sub
xchg
ret
out
adc
loopne
cmp
inc
adc
es
jp
sbb
push
cld
and
popf
fldt
test
das
hlt
xor
loopne
push
inc
ja
and
xor
dec
enter
shlb
popf
imul
cmp
and
push
add
push
leave
and
and
cmc
imul
stos
or
gs
xchg
sub
mov
repnz
mov
sbb
mov
lret
in
mov
fsubrl
je
xchg
loopne
call
cmovg
imul
cwtl
mov
dec
retw
test
shll
mov
add
or
push
loopne
dec
jne
inc
xor
add
fistps
incl
lret
ret
andl
ljmp
outsl
mov
push
or
cli
test
aas
mov
jg
pop
lods
por
cmp
movsl
jp
gs
sub
inc
jae
std
ljmpw
cwtl
jge
add
and
jp
mov
adc
int3
or
ss
sbb
aaa
jg
jnp
jecxz
inc
add
or
push
bound
and
push
mov
es
icebp
das
add
jno
or
adc
ja
sahf
test
pushf
movsb
popa
xor
ret
xlat
mov
sbb
movsl
mov
ficompl
sbb
sbb
mov
add
add
in
sbb
out
adc
cltd
mov
ss
push
dec
imul
pop
add
pushf
sub
xchg
xor
sbb
loopne
stc
sbb
mov
ja
ja
add
xor
pop
in
or
out
xor
stc
mov
pop
loopne
shlb
movl
xor
jb
xchg
push
push
push
or
clc
pop
or
sbb
push
and
out
lahf
add
lahf
mov
neg
cmpsl
or
inc
orl
or
push
or
shll
dec
inc
pushl
jmp
mov
and
pop
or
inc
mov
cld
adc
mov
gs
jmp
xchg
fsts
mov
test
outsb
je
outsb
jns
jne
add
add
test
fdivrl
clc
loopne
pop
push
sbb
or
cs
test
jge
inc
or
pop
add
pop
popf
dec
roll
sbb
and
dec
sbb
int
fmuls
fcompl
nop
jl
pop
jno
rorl
lods
rolb
test
add
popa
daa
dec
ss
mov
mov
outsl
push
push
adc
enter
sbb
xchg
mov
lods
clc
or
push
je
sbb
xchg
adc
xchg
pop
jo
and
jp
pop
sbb
movsb
mov
dec
or
mov
jo
je
dec
movsb
decb
push
inc
and
mov
pop
and
and
push
mov
imul
lahf
insl
lock
xor
dec
add
jmp
mov
push
testl
xchg
int
add
cmpsb
adc
dec
sbb
or
sbb
xor
sbb
or
mov
testb
js
js
imul
divb
sub
jg
dec
push
push
mov
movsb
add
popa
mov
iret
cmpb
cmp
iret
add
loopne
jmp
fstpt
xor
cs
or
sbb
fcoml
hlt
dec
push
sbb
sub
test
ret
shll
pop
sahf
shrb
scas
mov
add
inc
jle
mov
xchg
mov
jg
ret
or
mov
in
fisubl
ret
sbb
out
pop
lcall
fwait
pop
cmpl
dec
inc
cs
repz
jne
mov
or
pop
bound
ret
lea
je
dec
je
dec
jne
fnstenv
adc
mov
or
sbb
fwait
fwait
jge
test
data16
je
xor
inc
fwait
inc
inc
je
ds
not
and
test
repz
or
inc
or
pusha
test
lret
pop
add
rcrl
push
mov
jmp
cmp
jnp
pop
mov
add
movsl
and
push
or
nop
lret
or
add
pushf
movsb
jg
cmp
pop
inc
test
push
mov
jne
and
jmp
add
adc
jge
cwtl
mov
mov
dec
ljmp
imul
push
dec
aas
insb
and
dec
xchg
aad
mov
or
xchg
lahf
clc
add
sbb
or
xchg
xchg
inc
ret
mov
cmp
inc
adc
mov
ret
test
pop
and
out
jnp
and
mov
cwtl
push
mov
mov
ss
test
inc
repnz
push
pusha
pushf
cmp
dec
inc
push
cmp
leave
and
push
and
pop
adc
test
add
add
push
sub
mov
fdivl
pop
dec
push
push
jge
rolb
les
stos
mov
popa
testb
push
adc
add
jne
jle
ret
testb
sbb
or
push
mov
popf
adc
push
jge
push
and
jg
xchg
jl
add
adc
in
sub
push
arpl
sbb
jmp
mov
pop
jmp
das
jo
mov
lea
push
push
je
or
add
test
dec
mov
mov
and
js
push
sbb
jne
adc
divb
cmpl
dec
jae
sub
push
mov
dec
ss
pop
insl
jae
add
xlat
jbe
and
add
adc
jne
movsl
add
ljmp
sub
dec
and
jb
push
push
push
mov
sub
orl
xor
pushf
insb
rcrb
jo
cmp
jne
addr16
out
aas
outsb
mov
cmp
and
and
cmp
jbe
or
and
enter
outsb
xor
or
sub
jl
mov
shll
cmc
neg
mov
adcl
repnz
fdivl
decb
mov
jb
cmp
jae
cld
es
mov
lods
pop
sub
or
outsb
push
xchg
mov
call
add
jne
cmpl
add
jne
cmp
and
loopne
in
pushf
adc
dec
mov
scas
adc
xchg
push
mov
je
mov
inc
mov
jg
add
test
sub
add
or
lock
cld
dec
push
movsl
scas
xor
cmp
cmovne
cmp
jle
stos
je
add
mov
mov
jb
stos
sub
pop
rorb
adc
xchg
add
fwait
mov
push
call
fldenv
aaa
leave
sbb
out
xchg
cmp
xor
rorb
outsl
xchg
add
add
mov
divl
popl
test
je
or
sbb
movsl
sub
mov
aam
fisttps
dec
les
cs
push
jmp
fdecstp
sbb
and
ret
loop
xor
enter
aad
outsl
ljmp
add
imul
pop
adc
je
insb
push
xchg
int
push
addr16
add
xchg
sbb
push
into
add
and
jge
call
loope
and
dec
adc
or
cmp
jecxz
adc
mov
jno
cmp
push
mov
jne
jae
insb
xchg
aas
add
jmp
mov
adc
pop
push
stos
mov
or
loopne
push
add
imul
add
xchg
add
enter
dec
mov
adc
clc
cmp
inc
lds
mov
filds
test
je
push
testl
sub
dec
cmpsl
cmp
clc
lcall
stos
cwtl
jge
and
cltd
out
aam
jl
push
cmp
js
inc
insb
jmp
clc
and
nop
and
push
lds
cltd
fidivl
jmp
xor
std
jmp
ljmp
push
pop
in
cli
push
mov
mov
adc
das
sbb
mov
testl
repz
sbb
jl
mov
jmp
xchg
or
push
jns
xor
repz
sarl
mov
sahf
out
int3
mov
clc
and
sarb
dec
popf
pop
into
inc
pop
leave
clc
pop
clc
dec
ds
push
cmp
jbe
stos
dec
xorb
push
cmp
xor
pushl
or
clc
sti
ret
xchg
add
pop
xor
decb
cmpb
inc
ret
daa
test
xor
pop
dec
loopne
test
mov
mov
xchg
inc
xor
dec
or
push
and
and
add
xor
shll
inc
inc
dec
dec
mov
cmc
ret
frstor
sub
mov
push
or
inc
jmp
or
inc
lea
sarb
adc
cmpl
and
gs
or
sub
ljmp
inc
out
fwait
lds
aas
sub
sub
or
mov
xchg
ret
or
or
cmpl
jb
mov
bound
push
and
sub
add
jle
insl
dec
pop
jbe
cmp
testb
out
mov
movl
pop
add
mov
push
repnz
or
dec
cmc
push
adc
mov
jnp
cmp
cmp
jle
sbb
icebp
cmp
insb
add
idivb
dec
or
dec
or
in
mov
add
lret
pop
mov
jb
push
push
adc
jne
mov
into
ja
mov
push
sub
cmc
push
lret
inc
cmpsl
sub
pop
mov
cwtl
cmpl
sbb
xchg
dec
xor
ret
mov
inc
insl
add
add
add
add
out
push
cli
adc
and
adc
or
xchg
push
jae
test
adc
add
and
add
sbb
and
lret
and
imul
adc
insl
jo
call
pop
idivl
dec
inc
sub
mov
cmpl
cmp
add
fcmovnb
inc
dec
adc
add
inc
lds
into
and
sbb
sub
xchg
xchg
sbb
pop
add
adc
add
sub
movsb
dec
and
fs
pop
imulb
mov
or
cltd
inc
sbb
repz
dec
enter
push
inc
adc
xor
ret
mov
inc
dec
sub
out
push
fstpl
out
sub
or
push
jo
inc
je
sub
mov
adc
push
mov
and
jp
test
shlb
sbb
mov
int3
andb
test
sub
mov
or
cmc
pop
xor
or
dec
add
rcl
pop
pop
outsl
mov
or
xchg
sbb
test
adc
mov
in
movb
push
and
add
adcb
adc
xchg
xchg
add
mov
or
leave
pop
xchg
test
pop
add
push
mov
ds
xor
adc
cmp
mov
test
push
jnp
bound
push
inc
inc
enter
jo
shll
sub
add
in
xor
inc
movsl
sub
les
dec
sub
mov
and
lea
sbb
rcrb
incl
pop
jge
mov
dec
cmp
or
insl
arpl
lock
cmpsb
dec
and
in
mov
fiaddl
aam
push
jecxz
xlat
or
je
push
dec
pop
mov
jg
push
sbb
adc
inc
jl
leave
adcb
mov
sti
push
mov
or
push
pop
out
xor
push
lret
xor
or
mov
mov
js
and
push
clc
xchg
and
ljmpw
sbb
mov
fcoms
push
pop
xor
sbb
fs
sub
cltd
xchg
loopne
dec
add
lcall
add
lahf
sbb
mov
pushf
inc
lahf
mov
js
in
pop
jb
adc
push
add
xor
pushf
mov
je
sub
sub
lods
jb
ljmp
cmp
les
xor
adc
mov
xor
xor
into
dec
out
insb
dec
std
add
sub
lret
mov
push
cmova
dec
dec
cmp
cld
jl
jmp
out
sbb
add
scas
test
xchg
xchg
push
pop
add
jo
adc
pusha
jne
push
dec
popf
es
xchg
out
bound
lock
cmp
test
lock
add
and
shl
sbb
and
mov
loope
int
cmpsb
lock
pop
push
push
xchg
popl
popl
mov
out
in
inc
fimull
sub
sub
ret
sub
rcrl
fwait
or
or
les
xor
pushf
in
lret
or
lret
movsl
mov
dec
mov
nop
and
or
and
test
xchg
and
mov
add
ljmp
inc
leave
and
pop
mov
push
rol
test
mov
push
shlb
fcoms
int3
mov
cmp
test
rcl
and
inc
and
orl
fcomps
sbbl
cmpsb
and
loopne
fst
test
call
add
mov
aad
jecxz
inc
lods
xchg
test
dec
fmuls
jmp
dec
inc
mulb
push
mov
clc
jge
rorb
pop
mov
fisubs
add
push
lea
mov
hlt
and
sti
test
mov
sbb
cmp
sbb
test
mov
jmp
push
sbb
sbb
call
push
dec
sub
stos
je
mov
enter
xchg
jne
hlt
add
push
pop
pop
sub
xchg
rorb
sub
mov
jle
jne
sub
andb
mov
or
imul
fmul
jge
add
and
push
imul
adc
jge
popf
pop
lock
cmp
adc
js
xorl
inc
ljmp
add
adc
in
mov
sub
mov
adc
sar
sar
sub
ds
inc
int3
add
out
rcr
add
lock
push
sarl
inc
sub
cmp
jle
sub
add
lret
cmp
pop
jge
cld
iret
add
or
cmp
jle
clc
cmp
fcomip
sub
add
cmp
push
adc
sub
push
push
dec
fwait
add
push
push
push
mov
mov
test
fsub
out
sbb
dec
and
jno
cmp
enter
xor
sti
sti
call
cmp
dec
je
mov
push
add
inc
movsl
mov
daa
adc
sub
imul
and
mov
cmp
cmp
pushf
sbb
jl
adc
push
invd
mov
cmp
push
xchg
cs
in
loopne
xor
lret
inc
add
pusha
mov
dec
rolb
mulb
cwtl
mov
pusha
shr
loopne
dec
in
adc
int
push
mov
adc
insl
or
sbb
je
aam
push
xor
jge
leave
inc
or
mov
fcomp
adc
pusha
sub
push
leave
xor
test
push
sub
iret
pop
shrb
fsubs
jmp
das
xchg
mov
enter
mov
bound
add
mov
mov
cli
sub
push
fdivl
push
jo
dec
insb
lea
cmp
and
adc
mov
or
dec
outsl
adc
call
pop
pushf
unpcklps
in
ss
or
or
adc
fldl
cmp
fldcw
lock
clc
es
push
cmpsl
push
inc
ret
lock
sbb
aam
test
cmpsl
dec
mov
cmp
bound
sti
adc
je
xchg
add
mov
inc
fdivs
cmpsl
stc
and
leave
stos
mov
stc
and
fs
xor
cmp
imul
addl
jle
or
cli
mov
or
xor
push
dec
mov
jno
sub
dec
add
mov
cmpsl
dec
mov
cmp
cltd
pop
jge
dec
or
fnstcw
pop
xor
sbb
xor
ja
jne
lock
loope
adc
js
jne
cmp
xor
xchg
push
mov
push
jne
push
and
rorl
lret
or
and
es
addl
pop
push
sub
test
je
aas
js
pop
cmp
adc
test
xchg
jmp
and
mov
clc
inc
mov
sub
pop
aam
xchg
js
aaa
push
mov
pop
xchg
ret
cmp
mov
add
push
test
and
outsb
pusha
inc
nop
lods
cmp
subb
aam
enter
push
and
and
std
clc
or
inc
sbb
sbb
dec
mov
out
pusha
sub
or
mov
mov
pop
mov
sbb
push
or
shll
hlt
fstps
and
sub
xor
push
stos
sbb
push
rclb
or
cmpsb
and
jp
push
sti
fsub
mov
cli
inc
push
jne
mov
or
es
jmp
pop
mov
test
loope
push
aaa
jo
xchg
sbb
xchg
pop
or
dec
add
pop
daa
aad
ds
push
push
push
scas
dec
in
or
cmp
sbb
shrl
out
xor
mov
pop
pop
adc
stos
and
test
cmp
pand
mov
ljmp
in
fbld
adc
and
lcall
or
and
pushl
pop
test
adc
icebp
jae
aas
jmp
sub
or
in
push
jge
adc
and
loope
adc
jmp
popl
push
lock
loop
fwait
int3
xor
fnstcw
add
or
or
nop
pop
lock
push
jb
and
pop
nop
aad
out
data16
inc
and
aad
and
imull
cmp
mov
and
xchg
sti
pusha
pop
or
popa
xlat
mov
or
adc
rol
add
pusha
xor
xlat
push
inc
xlat
stc
imul
jne
jg
inc
mov
dec
div
cmp
or
dec
lock
divps
add
or
das
push
mov
jnp
fwait
mov
push
rcl
mull
clc
dec
aam
add
mov
and
out
push
ret
hlt
nop
adc
ret
and
scas
outsl
fmull
mov
xor
mov
fnstcw
mov
lcall
mov
mov
adc
mov
cmpl
dec
out
mov
pusha
sub
push
lods
xor
je
popa
dec
stos
enter
mov
push
out
cmp
jbe
mov
pop
push
jmp
jo
inc
add
push
fidivrs
sbb
cwtl
jmp
pop
jp
mov
add
push
lea
push
or
adc
roll
xchg
pusha
aaa
ss
mov
pop
mov
pop
push
jne
cltd
inc
loopne
movsl
nop
dec
adc
push
or
add
je
sbb
and
mov
enter
xor
and
or
push
push
or
sub
sub
or
lret
jg
mov
cmp
cli
dec
or
call
js
cmp
pop
les
add
mov
lcall
imul
mov
or
iret
addb
lods
inc
xchg
xchg
push
mov
rolb
jmp
cmp
lods
cmc
mov
sub
adc
stc
add
xchg
in
mov
loopne
arpl
sub
insl
or
loop
cs
loop
enter
hlt
and
push
shrb
icebp
sub
sbb
mov
inc
cmc
and
push
fwait
adc
out
sbb
data16
cld
inc
sbb
adc
loopne
sub
insb
push
mov
push
inc
popf
jmp
dec
jo
xor
popf
jo
lret
add
stos
push
jnp
and
or
mov
js
push
dec
and
rol
sbb
mov
mov
enter
add
add
cmp
push
loope
lcall
imul
jl
mov
push
das
inc
jecxz
sbbl
add
lret
stos
call
pop
je
xor
sub
sub
mov
jmp
je
ja
jbe
rolb
cmp
lcall
and
or
lcall
xchg
mov
mov
mov
rcrl
jmp
mov
add
pop
cmpsb
dec
sub
mov
and
dec
cmp
dec
push
adc
sub
mov
mov
cmp
cmp
dec
or
sub
js
mov
or
out
sbb
and
pop
and
xchg
and
jbe
dec
cs
sbbl
nop
adc
mov
mov
or
cmc
adc
jo
insl
fs
add
pop
ret
sbb
adcl
inc
sbb
inc
shrl
lcall
lock
xchg
or
lock
mov
sbb
jae
popf
out
lods
dec
sbb
sbb
xor
cmp
fisttps
cmpsb
xchg
inc
adc
and
mov
cmp
enter
fldenv
pop
push
imul
adcb
sub
loopne
or
cmp
adc
cmp
cwtl
imul
or
ret
push
loope
lods
in
rcrb
mov
out
je
mov
cmpsb
xchg
and
push
xor
rcl
xor
mov
enter
lods
xchg
mov
in
push
clc
in
xlat
jmp
mov
and
push
or
adc
xchg
rolb
xor
sahf
xchg
insb
std
jnp
add
jne
cmp
leave
push
dec
aam
add
lock
push
push
adc
jbe
adc
dec
cld
mov
daa
loope
sahf
xor
loopne
inc
adc
ret
xorb
add
rcll
fnstsw
lahf
test
cs
xchg
rorb
sahf
xlat
imul
ret
mov
push
push
iret
imul
dec
jo
nop
or
inc
and
or
rorl
cs
push
test
inc
push
dec
add
mov
xor
test
inc
mov
cmpsb
or
or
mov
bswap
mov
cmp
push
pop
or
popf
dec
add
push
fildl
xor
adc
xchg
hlt
push
xchg
adc
jg
or
scas
xor
push
gs
sbb
subl
add
add
jne
xchg
inc
pop
bnd
xchg
inc
jmp
out
sbb
lahf
push
stos
lock
lea
movsl
pop
testl
pop
dec
mov
push
and
lods
loop
adc
sbb
push
movb
add
dec
adc
mov
fwait
xchg
pusha
mov
les
mov
jne
sbb
mov
add
jne
push
or
inc
sub
or
fldl
cmpl
pop
jae
inc
inc
into
xchg
outsl
and
fwait
scas
sbb
loop
or
add
pop
test
orl
cmp
rorl
fildl
jne
and
gs
out
pop
and
les
push
mov
push
insl
xchg
rorl
inc
pusha
push
pop
or
pop
or
insb
push
daa
pop
and
inc
shlb
or
push
mov
pop
add
add
push
mov
in
aad
pushf
lods
push
mov
inc
ds
cld
call
inc
pop
pushf
or
stos
or
incl
adc
adc
mov
decl
xchg
adc
or
jo
adc
dec
test
add
jle
mov
and
mov
sbbb
jmp
outsb
cmp
dec
outsb
out
xor
pop
xlat
adc
sbbb
dec
dec
lds
inc
adc
test
and
fdivs
xor
mov
lock
sar
sub
or
outsb
add
dec
cmpsl
pop
jae
les
xchg
call
cmpl
aam
adc
pop
or
mov
adc
fdivrl
clc
imul
sub
pop
inc
bound
push
cmp
add
cmp
ljmp
mov
es
lock
hlt
rcr
or
push
in
add
inc
call
jp
cmp
je
or
push
sub
mov
test
sub
adc
xchg
push
adcb
xchg
inc
call
adcb
dec
xor
mov
mov
rolb
sub
push
push
adc
add
in
aas
shr
push
movswl
mov
lock
jmp
out
imul
mov
stos
adc
pop
jl
pop
jle
dec
inc
jl
push
daa
and
icebp
dec
shll
or
adc
rcrb
in
pop
jb
es
movsb
call
push
insb
movsl
add
test
xchg
rorb
pop
push
in
add
loopne
inc
lds
sub
es
lahf
mov
mov
movzbl
movl
psrlw
add
icebp
mov
push
jo
mov
jae
cmp
xor
test
or
loope
push
cli
cmpsb
and
adc
ljmp
and
in
pushf
insl
popa
cmp
and
mov
mov
test
ret
leave
push
inc
cs
cwtl
sbb
push
xchg
mov
cmp
lea
sbb
xor
add
insl
ret
push
aas
xlat
andl
movl
rolb
aad
data16
jl
pop
and
cmp
pop
push
fwait
xchg
and
negl
mov
mov
xchg
shll
sahf
mov
loopne
add
cmp
jp
add
popf
aaa
push
pop
inc
mov
mov
out
ds
dec
jle
daa
or
out
rcrb
cmp
cmp
daa
inc
push
jae
fwait
sub
push
lahf
xchg
and
nop
mov
or
scas
dec
in
lock
pushl
dec
push
push
sbb
mov
cmpl
push
fcoms
xchg
addr16
jmp
lea
shl
lea
jle
je
cmpl
and
js
ret
push
pop
add
add
push
sub
lds
xor
adc
je
mov
jns
pop
cld
clc
jp
cmpsb
jge
lock
imul
sub
add
inc
fadds
repz
jp
xor
cmp
ret
aad
mov
cmp
stos
lods
popa
scas
and
or
cmpsl
lcall
xor
faddl
shll
inc
repz
xor
lcall
push
test
lods
mov
push
cmpsl
out
add
push
add
add
fcoml
pop
pop
fcomps
adc
movsb
sbb
lret
fnstenv
mov
movb
je
sub
push
jmp
mov
hlt
scas
test
gs
mov
push
movsl
cmp
daa
jl
pop
lods
nop
in
and
fcmovnbe
jg
aaa
add
jne
add
dec
pop
lea
push
cmc
jnp
cmc
pop
iret
push
test
add
cs
in
out
push
or
inc
dec
or
call
xor
mov
in
push
hlt
xchg
and
dec
sub
and
jle
sub
jb
push
or
cmp
jbe,pt
push
add
add
lea
insb
xor
adc
dec
rcl
add
adc
add
dec
xchg
movsb
add
sub
inc
pusha
add
fmuls
jbe
cmpb
inc
test
ret
inc
movd
inc
xor
add
rorb
cmp
sub
popa
pop
adc
add
mov
sub
push
jb
enter
negb
sbb
js
js
out
push
lods
mov
jae
jg
jo
push
repz
mov
stos
lods
xor
adc
int3
adc
test
sarb
push
ja
es
sub
cltd
ss
push
xlat
inc
inc
inc
int
and
pop
adc
mov
mov
fadds
sbb
adc
or
out
and
inc
xor
inc
jo
sbb
pop
sbb
mov
shr
or
push
push
scas
stc
jge
xchg
lret
xchg
add
std
jmp
scas
call
pop
fistl
gs
das
dec
and
or
push
jmp
test
mov
test
push
dec
add
sub
je
and
jb
or
and
movsb
arpl
xchg
lea
push
lock
cs
roll
add
xchg
and
cmp
xchg
dec
jg
sahf
adc
sbbl
jp
leave
les
es
sbb
shrb
popf
adcb
sub
rcl
iret
adc
fidivs
in
jmp
imul
mov
call
mov
mov
ja
add
and
xchg
xchg
mov
out
mov
shl
aam
cmp
mov
jmp
inc
add
adc
sti
jmp
sbb
rol
jmp
mov
jne
inc
adc
push
cld
js
add
lret
push
xchg
push
lods
movsl
jne
jmp
lods
repz
sbb
rorl
in
pop
outsl
ret
mov
sbb
inc
fisttpl
hlt
test
and
mov
cli
pusha
jbe
aad
movsb
cmp
adc
add
push
and
shrl
jp
mov
addr16
xor
sbb
das
mov
or
pop
mov
test
jmp
adc
shll
and
cmc
or
test
cwtl
or
stos
pop
loopne
out
outsl
iret
sarl
xchg
test
mov
out
imul
aam
pop
pop
cmp
fucomp
push
cli
mov
iret
ror
inc
adc
push
sub
inc
push
int
iret
repz
bound
or
jnp
in
in
push
movsb
pop
aam
ja
push
stc
mov
aaa
out
lock
fildl
and
add
inc
scas
xchg
iret
jnp
loopne
popa
into
jmp
or
iret
repz
scas
pop
mov
pop
loopne
or
inc
mov
je
fiadds
inc
lods
sub
orb
jbe
add
or
je
dec
jne
mov
mov
pop
push
push
or
inc
lods
cmp
nop
jle
ret
icebp
dec
les
push
xor
outsb
clc
cmp
push
xor
mov
mov
into
je
mov
jmp
cmp
sub
cmp
sbb
dec
pop
dec
int3
adc
add
mov
je
pop
jmp
lea
pop
cli
push
ja
pushf
inc
jge
test
dec
and
hlt
push
fsubrl
pop
aad
xor
popa
cmp
pop
inc
popa
test
pop
lock
adc
add
or
sub
cmp
mov
nop
pop
daa
mov
test
sahf
cmpsb
imull
lock
fisttpl
sbb
inc
sub
mov
cmp
xchg
or
inc
jnp
mov
dec
loopne
mov
xchg
mov
add
inc
inc
incb
mov
xor
jno
mov
or
in
xchg
add
cmp
insb
orl
inc
loopne
sbb
inc
mov
adc
call
test
xchg
or
mov
sub
add
jbe
xchg
or
jo
inc
cmp
lods
xchg
imull
insb
xor
sbbb
fnsave
push
adc
xchg
hlt
xor
mov
cmpb
addl
dec
incb
pop
ja
add
push
mov
add
mov
cmp
xlat
sub
xchg
pop
ljmp
mov
mov
push
xor
test
adcl
popl
test
jl
rol
ljmp
pop
test
cli
lea
push
push
xor
rcll
and
shrb
jp
pushf
movsb
cltd
mov
push
or
lret
xor
xor
mov
adc
mov
sbb
xor
mov
iret
ja
jno
dec
addb
movb
mov
xchg
pop
lds
add
push
xor
mov
js
jo
nopl
cmp
jo
loope
faddl
mov
popa
jne
xchg
and
push
mov
mov
mov
fidivrl
int3
xlat
cld
sbb
in
lahf
nop
sbb
or
loope
out
xor
ret
lock
inc
or
or
adc
adc
int3
push
ficoml
inc
mov
push
cmc
sbb
shrb
les
inc
clc
mov
mov
notl
je
push
movl
mov
xchg
cwtl
imul
cmpsb
fidivrl
sarl
and
dec
mov
push
inc
fdivl
or
inc
add
mov
into
jmp
int3
movsb
or
add
mov
add
and
jp
mov
es
imul
add
add
pop
xor
outsb
or
push
movsl
push
pop
add
repz
push
sbb
clc
decl
inc
or
andl
inc
pop
xchg
pop
adc
jp
je
xchg
sbb
pop
push
jo
pop
inc
test
cmp
xor
mov
push
imul
add
repnz
add
negb
cmc
jge
push
filds
fadd
push
adc
push
orb
push
inc
movsb
pusha
cmp
jge
filds
and
and
xor
add
and
repnz
imul
mov
mov
inc
sbb
cli
jo
cli
inc
or
jmp
adc
shlb
pop
sub
pop
or
dec
adc
rolb
push
stos
add
enter
cmp
mov
pop
jno
aam
adc
xor
sbb
adc
sbb
adc
dec
add
xchg
mov
sbb
mov
sahf
sub
jge
jae
push
adc
fcomps
scas
std
or
out
incl
cmp
add
cmp
mov
clc
fldl
addr16
dec
adc
shll
or
push
lods
in
add
add
push
xchg
inc
xlat
stos
or
dec
jbe
andb
push
hlt
mov
mov
mov
test
test
add
shld
push
push
popa
int3
outsb
or
mov
imul
add
add
inc
xor
add
jmp
jb
dec
xchg
shrl
xchg
test
jl
or
mov
xchg
sti
xchg
add
cmpl
jbe
js
and
lret
jne
ja
push
rclb
cltd
push
push
xor
mov
jle
decl
popa
jg
test
jle
mov
sub
push
add
add
insb
std
fists
cltd
and
add
sar
popf
outsb
jb
jl,pt
mov
push
cmpb
jge
push
ljmp
push
cmp
dec
sbb
adc
adc
shrb
mov
fcomps
push
out
add
sub
jo
es
adc
out
fwait
rolb
dec
insl
and
inc
add
out
mov
rclb
add
data16
adc
cmpl
test
push
mov
std
out
pop
notl
fnstcw
add
sub
jne
jmp
push
scas
shr
add
sahf
fildl
imulb
aas
lahf
out
sbb
jg
add
sarb
repz
push
hlt
jle
mov
iret
inc
sahf
push
rcrl
add
mov
std
pop
xchg
push
and
pop
lcall
push
xor
loope
dec
in
jl
sub
aas
lock
out
pop
inc
in
inc
scas
mov
push
cmp
movsb
xor
pop
fwait
nop
add
test
in
jnp
in
dec
push
jmp
xorl
sbb
mov
jecxz
inc
adc
js
push
mov
inc
push
or
xchg
mov
mov
push
push
adc
clc
fistps
lods
cmpb
je
mov
cmp
jne
mov
cmp
jl
cmp
fdivrl
jl
cmp
jg
push
out
mov
push
call
xor
cmp
jge
sbb
int
loopne
and
jnp
push
ds
inc
movsl
cs
lock
and
or
clc
push
sbb
push
add
icebp
bound
pushl
inc
inc
jl
movb
inc
jmp
daa
pop
pop
rcrb
mov
push
inc
fstpl
xorb
inc
movl
cmpsb
sbb
negb
pop
add
or
inc
decl
adc
jl
dec
sub
orl
push
adc
mov
and
lock
cmp
jne
lret
add
add
ljmp
adc
mov
xor
push
cltd
js
add
inc
adc
nop
mov
rolb
inc
pusha
das
jae
sbb
xchg
fsubs
and
test
testl
push
add
push
cmp
aad
insl
add
push
adc
xchg
mov
add
dec
rorl
adc
adc
sbb
fistpl
sbb
iret
add
dec
sub
pop
testb
adc
push
testl
add
and
mov
jo
add
mov
jmp
sbbb
pop
or
xchg
push
iret
sti
sub
call
cmpsb
cmp
xor
pop
outsb
mov
call
adc
inc
dec
cmp
dec
aam
push
outsb
insl
adc
mov
jle
add
lret
cmp
sub
js
les
and
push
sbb
aaa
pushf
loopne
into
pop
and
leave
inc
adc
push
aaa
xchg
inc
jno
repz
push
mov
push
sbb
cmpsl
xchg
push
xchg
inc
add
sbbb
sbb
sub
movb
in
test
cmp
sbb
movsb
xchg
jmp
pusha
movb
call
add
inc
dec
and
leave
dec
cmp
push
sbb
adc
jo
lret
and
mov
inc
in
je
lds
mov
inc
push
popa
out
lcall
jae
cmpl
or
cmp
inc
adc
mov
adc
out
cmpsl
or
dec
mov
add
jne
sub
sub
add
pop
push
movsb
test
mov
sar
ja
insl
cmpsb
std
movsl
mov
lods
add
push
sub
inc
fmull
ret
les
out
pop
dec
push
or
addb
incl
je
and
xchg
daa
adc
mov
std
add
push
inc
add
in
les
insl
or
and
jo
lahf
lea
dec
inc
pop
push
or
or
and
ror
or
and
sbb
imul
sbb
dec
mov
in
testb
or
add
dec
dec
xchg
mov
add
daa
push
push
inc
stos
dec
neg
pop
or
add
xchg
daa
push
xor
xchg
rorl
pop
ja
mov
data16
je
aam
ja
je
pop
insb
hlt
pop
out
jns
mov
push
or
jbe
test
outsb
push
push
jmp
cmp
xchg
decb
jo
repz
cmp
sub
je
dec
shr
ret
sub
stos
or
fbld
lock
jmp
ret
push
sub
loop
fnstenv
or
jecxz
ja
adc
and
or
icebp
mov
repz
sahf
negb
jbe
cli
push
mov
xchg
ja
fistpl
cs
and
jbe
out
mov
pop
or
divps
out
pop
insl
mov
fwait
cmp
pop
jbe
mov
mov
scas
mov
xorl
push
mov
push
mov
pop
or
push
ds
lret
mov
imul
pushf
popf
adc
adc
ss
push
mov
sbbb
nop
add
or
shrb
cld
or
lock
leave
test
add
jmp
mov
mov
dec
mov
test
xchg
sbb
push
loopne
in
dec
jnp
scas
aas
adc
stc
dec
fcoml
int3
inc
bound
ret
and
push
cwtl
and
sbb
mov
inc
xchg
inc
or
fs
dec
xchg
xchg
adc
aad
das
mov
or
push
push
mov
imul
add
inc
insb
loope
rcrl
mov
jb
inc
rolb
mov
and
je
jecxz
mov
test
adc
sbb
push
cwtl
mov
repnz
ret
nop
inc
and
xor
mov
add
fdivrp
inc
cmp
lock
add
sub
inc
inc
ljmp
cmp
jge
xor
mov
pop
filds
xor
jns
push
aas
jb
adc
cmp
fdivl
adc
and
dec
test
das
das
or
push
push
out
and
jecxz
rolb
ds
inc
shrl
popa
adc
adc
es
add
jne
sbb
or
iret
pop
or
dec
arpl
cmpsb
rolb
adc
inc
adcl
mov
shrb
jmp
xchg
adc
test
cwtl
andl
add
sub
clc
test
insb
adc
push
test
cltd
lret
sub
pop
cld
movsb
jb
mov
popa
sub
and
xchg
lahf
fdivrs
cmp
fs
fidivrl
push
xchg
adc
andb
xchg
out
xor
mov
fsubrp
es
push
mov
shl
lea
push
and
xor
mov
xchg
xchg
roll
and
fstpl
xor
mov
sub
adc
adc
ds
in
add
sbb
sub
mov
add
bound
push
jns
dec
adc
rcrb
je
sbb
push
sbb
shlb
cmp
ret
inc
jbe
mov
or
xchg
pusha
add
sub
mov
sub
and
push
les
pop
sbb
inc
jmp
mov
fmull
loopne
lods
adc
js
ds
or
or
mov
add
cmp
andb
fwait
add
add
jmp
sub
push
jo
xchg
int
jmp
pushl
xor
pop
stos
and
loop
push
mov
jmp
push
orl
and
sbb
push
inc
pushf
mov
in
jle
bound
push
or
or
outsl
and
subb
xor
not
inc
stos
test
je
cmp
jne
je
addb
call
lods
xchg
or
stos
push
and
aaa
mov
stos
or
sub
sub
xor
cltd
fmuls
lahf
aas
adc
pop
mov
movb
mov
sbb
mov
arpl
pop
pop
lock
inc
mov
in
int
and
outsb
call
js
jg
add
inc
jo
and
out
add
xor
push
add
aaa
push
fsts
fbstp
mov
inc
adc
adc
leave
fsubp
pusha
inc
mov
scas
faddp
loope
dec
add
movl
mov
inc
xor
add
xor
pop
inc
stc
or
pop
stc
push
push
pop
add
jmp
call
ja
sub
or
pop
mov
lcall
cs
icebp
sbb
push
or
loop
das
inc
push
jnp
adc
add
push
sahf
xor
jecxz
lea
imul
or
push
ljmp
adc
pop
pop
cmp
push
popa
sbb
or
into
jg
push
jno
fdiv
in
push
subb
hlt
jmp
adc
in
cwtl
sbb
add
adc
adc
jg
hlt
add
push
outsb
test
jne
andl
andl
and
sbb
lcall
inc
es
jge
movsb
mov
inc
sbb
cmp
out
test
clc
je
pushf
cmp
add
pop
mov
xchg
xchg
mov
pop
cmpsb
push
insb
and
push
push
fnstcw
mov
mov
bound
lods
push
fcoms
or
add
sti
pushf
outsb
cld
mov
dec
push
ja
and
add
movsl
outsl
lock
stos
lods
push
add
cmpl
mov
push
dec
cmp
push
popa
clc
jbe
mov
insl
push
imul
xchg
fadd
jmp
fsubl
pushf
fs
push
leave
bound
rorl
jo
cs
idivb
add
dec
hlt
mov
lea
imul
inc
and
xchg
push
enter
jmp
jo
pop
stos
andl
scas
pop
sbb
sbb
lds
sub
dec
pushf
lret
add
mov
sbb
cmp
fdivs
push
cmpsl
rolb
jae,pn
or
sbb
push
movsl
pop
mov
rorl
jmp
and
je
stc
test
add
test
nop
adc
mov
and
cmp
xchg
pop
pop
pop
test
ja
movsb
mov
lds
loope
jmp
lea
ljmp
and
inc
je
mov
in
gs
in
aaa
sbb
in
jbe
rolb
js
adc
or
or
pusha
sub
movsb
add
js
test
ss
call
fs
push
pop
pop
adc
ja
and
or
addl
test
cwtl
popf
int3
cmp
inc
inc
mov
push
adc
add
inc
pop
andl
adc
bound
dec
or
and
xchg
pop
jo
jle
lea
popl
push
add
push
and
das
and
roll
ret
adc
push
fsubs
add
or
push
shlb
mov
push
jb
and
cli
inc
pop
or
orb
adc
jle
pop
push
xchg
add
pusha
jmp
sbb
incl
lea
shl
push
cmpsb
push
adc
mov
ss
sub
ret
icebp
mov
push
or
adc
add
push
jno
push
stc
sbb
inc
bound
in
adc
xchg
pushf
push
into
mov
ds
add
data16
fiadds
sbb
leave
or
pop
inc
xor
orb
sub
in
and
pop
mov
shl
push
lds
mov
and
xchg
lret
and
push
mov
xchg
adc
pop
sub
rorb
cmpsl
daa
orl
push
iret
addl
xor
dec
adc
pop
ljmp
add
in
jle
xor
ja
stos
inc
add
and
les
mov
push
adc
mov
stc
push
ret
jp
pmulhuw
fstpl
idivl
or
sahf
jne
repz
sbb
test
sub
nop
add
fimuls
dec
sbbb
add
fcomps
rcrb
mov
push
lods
ror
sbb
and
sbb
mov
ljmp
pop
mov
fildl
call
sahf
lea
jne
je
add
adc
cld
xor
das
loopne
dec
jmp
repz
push
mov
push
popf
and
outsb
jmp
scas
push
lods
sbb
push
cmc
adc
clc
cs
icebp
cmp
pop
sub
push
lea
into
and
fndisi(8087
pop
and
adc
or
xchg
fiadds
pop
mov
pop
into
addb
cli
sub
lea
push
jb
jmp
sbb
pop
ljmp
and
insb
ja
test
out
jb
loop
xchg
insl
jle
movsl
mov
cmp
sub
cs
xorl
cwtl
repnz
mov
cmp
adc
pop
out
movb
call
push
aam
pop
push
aaa
enter
xchg
and
lods
subl
or
hlt
and
and
push
xor
pop
xlat
in
adc
and
pop
or
sub
dec
push
hlt
ret
add
pop
lods
pop
dec
pop
mov
les
jbe
inc
mov
cmp
in
sub
push
adc
and
inc
add
mov
sub
mov
orb
add
lret
pop
inc
adc
push
push
inc
sbb
lea
js
pop
cwtl
pop
pop
fiadds
orl
cld
add
roll
and
push
add
xor
cmpsl
pop
lret
ret
test
sbb
stos
leave
sub
add
xor
mov
xchg
or
stc
or
sbb
push
adc
incb
jle
cltd
mov
lret
fs
decl
nop
mov
adc
cmp
jge
orb
adc
dec
and
fstp
lock
movsb
mov
sub
gs
shlb
test
push
pushf
sahf
cltd
out
pcmpeqb
push
pop
mov
or
mov
xchg
push
adc
dec
pusha
insb
das
push
into
push
aas
and
adc
xlat
xchg
incb
lods
orl
fs
sahf
or
enter
out
add
shll
sub
adc
push
repnz
mov
ret
or
ja
mov
loope
add
push
adc
push
sub
ja
sub
add
sbb
cwtl
mov
lock
data16
mov
jp
pop
notb
inc
call
fbld
cmp
add
inc
cli
aaa
or
inc
out
ficompl
shll
sub
and
lcall
sub
lock
cmp
jg
mov
je
test
and
test
ficoml
imul
dec
mov
call
movsl
push
mov
xchg
add
pop
jge
lret
sub
clc
pop
pop
jmp
and
xchg
adc
push
mov
mov
mov
adc
xor
repz
pop
and
rcrl
hlt
movb
lock
aas
xor
cwtl
lods
adc
shrb
inc
test
or
ret
cld
jp
xchg
dec
jo
pop
push
insl
inc
outsl
fadd
cmp
fidivrl
push
clc
sbb
mov
inc
sub
inc
jo
loope
int3
xor
sub
enter
adc
and
push
mov
cmp
test
les
outsl
add
bnd
push
test
push
cmp
jmp
in
pop
push
repnz
inc
in
jmp
cld
cmp
cmpl
mov
jbe
push
cltd
pop
idiv
add
mov
pusha
or
adc
test
xor
add
fisttps
aaa
dec
mov
mov
xor
or
lock
repnz
cmp
jae
dec
lea
sbb
sub
pop
pop
jae
pop
jbe
push
cs
loop
jmpw
pop
sub
adc
add
cmc
pusha
clc
pop
adc
jg
fldenv
add
pop
fwait
ret
ret
adc
sub
mov
sbb
dec
dec
je
adc
lcall
inc
jbe
add
mov
scas
jle
pushf
xor
add
mov
pop
decb
push
mov
xchg
push
mov
inc
sub
sbb
adc
movsb
mov
dec
push
jle
loop
inc
nop
arpl
add
push
out
xor
jg
add
adc
jge
add
pop
sub
adc
pcmpeqb
adc
out
add
jo
sbb
cld
or
stos
popf
mov
mov
and
pop
cmp
call
cmp
sar
aas
jge
sti
pop
pop
mov
pop
idiv
cmp
inc
ret
sbb
xor
xchg
inc
out
pop
push
and
cmp
sub
jmp
push
cmp
mov
mov
pop
imul
add
rolb
xor
jl
mov
sbb
int
adc
shrl
xchg
sub
sbb
or
mov
jae
sbbl
add
rolb
inc
jns
mov
insb
fdivr
pop
cmp
incl
pop
jo
shll
sti
cmp
popa
pop
sub
mov
push
mov
jecxz
aad
loop
mov
insb
in
movsb
loop
pushf
push
mov
sub
int3
xchg
push
cmp
xor
jmp
jge
pop
je
sbb
pop
add
cmp
fs
mov
ret
lods
ljmp
or
mov
mov
mov
fs
xorb
es
jne
jae
mov
pop
xor
mov
xchg
data16
in
rolb
adc
enter
js
pop
popl
mov
lods
and
sti
popf
pop
push
je
or
and
out
aaa
andl
popf
or
inc
sub
pop
cmp
lcall
lcall
xchg
inc
jmp
push
pushf
in
shl
xchg
adc
and
insb
sbbb
jne
fldt
ret
push
je
mov
test
push
push
movsb
xchg
mov
xor
jge
and
jge
add
push
clc
pop
xchg
dec
mov
push
outsw
adc
inc
adc
jnp
out
or
out
call
inc
xor
push
lretw
jp
out
add
mov
pop
jle
push
dec
hlt
dec
ljmp
ja
xchg
xlat
rorb
jg
pop
popa
mov
lahf
cmp
les
lock
sbb
cmp
in
and
cmp
out
add
pop
cld
push
pop
xchg
push
push
mov
lock
and
test
push
mov
adc
fdivrs
lock
decl
inc
jg
jp
push
cmp
in
lea
jp
pop
xchg
mov
mov
add
push
inc
in
pop
mov
add
inc
mov
iret
inc
inc
mov
xchg
mov
insb
in
pop
lcall
fadds
mov
movsl
test
or
dec
and
pop
gs
lods
into
lret
mov
jo
pusha
mov
icebp
mov
push
mov
incl
fdivr
mov
sahf
push
jbe
mov
push
inc
sbb
jae
cmp
adc
pop
negl
fwait
cmpsb
pop
sbb
lods
mov
xor
mov
or
and
and
or
or
xchg
dec
push
stos
and
movl
sub
cwtl
hlt
mov
dec
loopne
jle
add
xchg
dec
subl
adc
fcmovb
cmp
or
mov
pop
cmp
je
mov
adcb
add
inc
and
cs
inc
add
lock
add
push
push
subb
int
fs
add
imulb
add
adc
cmpsl
frstor
jl
sbb
jns
fwait
sbb
hlt
or
inc
sbb
scas
test
pusha
mov
inc
rcrl
xchg
pop
fcoms
enter
iret
add
jo
iret
push
shlb
push
lea
arpl
jne
jmp
push
stc
shlb
or
cs
and
xor
push
adc
cmp
lds
sub
mov
pop
and
cli
rorl
ret
stos
mov
scas
mov
daa
lcall
outsb
mov
or
notl
adc
mov
adc
jge
gs
fisubrl
mov
cmp
inc
out
sbb
mov
test
adcb
xor
add
sti
ret
push
cmp
popa
lock
push
jns
and
push
add
xor
inc
cmp
inc
aaa
add
rcrl
cmp
or
lods
or
dec
sub
je
mov
add
jmp
cmp
pop
in
xor
ja
or
inc
inc
xor
xchg
pop
mov
outsl
inc
inc
js
subl
sbb
sub
xor
cltd
pop
mov
jmp
leave
fisttpll
xor
dec
clc
jne
pop
call
and
es
mov
scas
inc
jmp
aas
test
push
cltd
jo
inc
xor
nop
sbb
sub
mov
repz
test
mov
les
mov
lock
adc
test
mov
imul
inc
ret
push
cmp
movq
jl
cmp
jb
cmc
outsl
mov
mov
inc
xchg
jbe
pop
xchg
push
mov
test
push
call
hlt
xchg
xchg
xchg
lret
aam
cld
dec
jg
mov
dec
xor
incl
push
call
sub
inc
sbb
push
add
call
push
bound
mov
sbb
cmp
fnsave
inc
sub
sub
sbb
dec
pop
enter
inc
and
subl
stc
add
mov
popf
es
push
add
add
aad
push
adc
or
adc
mov
outsl
xchg
jmp
sub
fimull
cmp
push
lods
fidivl
ljmp
cmp
mov
inc
push
cld
fs
add
add
insb
repnz
sbb
sub
sbb
aam
or
or
xlat
mov
call
dec
and
enter
sub
fadds
daa
mov
inc
sahf
out
pop
idiv
add
xchg
push
insl
push
sbb
sbb
dec
jg
jl
int3
int3
iret
jae
lea
dec
push
push
mov
rolb
jp
or
decl
in
or
lods
or
je
and
xor
cmpsb
dec
ljmp
push
out
push
je
movsb
mov
pop
call
mov
inc
or
ljmp
and
js
icebp
lcall
ror
pop
mov
cmpsb
mov
jmp
scas
imul
pop
cmp
push
rclb
push
mov
push
xchg
push
cmp
jb
lret
adc
ljmp
ficomps
dec
mov
fisubl
xor
pop
pop
cmp
sarb
push
loop
mov
fstpt
add
jnp
stc
cmp
test
int3
push
ffree
pop
ret
adc
or
lock
jns
aad
adcb
sub
nop
xlat
dec
insl
pusha
jb
jmp
add
jmp
out
loopne
jmp
rorl
in
xor
les
xor
sub
hlt
scas
jnp
cld
or
and
push
add
xor
or
aaa
dec
adc
cmc
inc
push
mov
test
xor
sub
sarb
sbb
scas
or
xchg
jb
inc
sbb
insb
jl
jns
push
imul
and
rolb
sbb
rclb
push
mov
cmp
cmp
dec
js
xor
push
js
call
lock
mov
sub
push
cmp
jb
xor
in
sbb
push
iret
fdivrp
ss
jp
cmp
test
sub
loope
pusha
lock
cmpsb
fsub
rcr
insb
ret
mov
lahf
push
add
xchg
pop
push
fs
cmp
mov
push
sbb
movsl
in
aaa
add
inc
pop
negb
jmp
aaa
icebp
test
add
ret
pop
sbb
add
aas
push
cs
pop
pop
mov
push
jle
loope
add
aaa
dec
out
mov
mov
mov
js
and
mov
pop
xchg
pop
and
push
push
add
out
movsl
xchg
loope
pop
lods
leave
hlt
xchg
xchg
je
inc
xchg
cwtl
jo
call
add
inc
insl
or
cmpsl
cmp
sub
dec
pop
push
push
cmp
cmp
int3
and
or
out
cmpsl
or
sub
pop
aaa
and
sub
or
repz
mov
add
inc
rorl
pop
pop
enter
xor
inc
xchg
push
fists
push
mov
pop
cmp
int3
pop
shlb
mov
mov
and
push
cmp
dec
or
add
add
repz
data16
scas
loopne
ljmp
push
shlb
mov
inc
mov
add
pop
jo
sbb
fsubrl
pusha
les
pop
or
or
loop
mov
and
fsubrs
and
lret
scas
push
cmp
dec
sub
ret
imul
addb
mov
es
lock
or
pop
mov
and
sub
xor
adc
mov
lea
inc
jae
xor
movl
lock
or
xor
jl
inc
push
inc
sbb
dec
jmp
push
mov
out
daa
lea
sete
ret
fbld
jp
xor
xor
inc
sub
adc
mov
or
mov
outsl
cmp
mov
test
push
push
xchg
subb
mov
into
ret
inc
and
iret
adc
jle
or
mov
inc
cmp
int3
jno
insb
pop
imul
hlt
cmp
add
or
xor
adc
xchg
cmp
or
clc
std
fwait
data16
testb
je
sub
add
out
push
pop
js
sub
loope
shlb
insl
dec
ljmp
or
inc
aas
mov
cmpsl
pop
cmp
mov
cmp
ffree
loopne
test
je
rol
inc
inc
cs
add
fistpl
or
jne
sub
inc
mov
xor
mov
sub
push
adc
add
fsubrl
add
daa
fistpll
sub
mov
jo
jns
dec
pop
pop
push
or
add
ss
mov
sbb
je
stc
push
inc
daa
js
mov
sbb
mov
push
push
push
leave
and
push
cmp
mov
in
in
lock
jno
adc
or
add
pop
rolb
das
xchg
dec
and
outsl
cwtl
out
jno
ljmp
ljmp
lahf
xchg
lret
aaa
clc
jmp
dec
call
mov
or
aaa
insb
sbb
add
mov
bnd
data16
xorl
pusha
xor
jne
pop
sbb
push
mov
sbb
xor
fcompl
add
adc
pop
imul
xchg
sub
cmp
add
test
and
and
mov
ljmp
push
mov
ja
and
cmp
cld
fsubl
push
iret
mov
sub
add
add
sbb
add
adc
push
movsb
mov
cmp
mov
add
jae
lods
call
scas
mov
lcall
xor
neg
inc
dec
add
and
pop
out
mov
or
push
negb
adc
dec
push
or
push
test
add
sub
jne
inc
mov
inc
xor
xlat
pop
out
andb
jg
pop
pop
cmp
inc
adc
xor
inc
xchg
or
mov
dec
test
xchg
sbb
push
pop
pop
mov
aad
fwait
pop
and
mov
lahf
or
psubb
les
cmp
hlt
cmp
cmp
in
je
lods
fbstp
and
add
and
clc
jg
in
lcall
mov
add
andl
mov
pop
add
add
add
filds
jb
test
mov
push
lcall
push
push
jmp
lea
lret
sub
ret
adc
mov
cld
call
push
popa
add
std
mov
jecxz
cmc
add
push
pop
movsb
mov
arpl
jmp
adc
sti
push
mov
xchg
push
jno
and
xchg
je
mov
add
data16
push
mov
arpl
dec
les
cmp
push
cmp
aas
pop
fdivrs
adc
int
adc
mov
push
nop
fs
push
push
in
inc
inc
nop
add
movl
pop
sbb
lcall
mov
mov
fcomp
or
lock
pop
add
cmp
loope
fdivs
dec
cmp
pop
por
aad
cmp
lock
hlt
xchg
outsb
dec
cmpsl
cmp
mov
xchg
jb
aas
cmp
popf
sahf
enter
int3
sbb
daa
or
int3
mov
ret
js
jo
aam
popa
adc
cmpsb
pushf
enter
sub
push
mov
jmp
mov
shll
data16
inc
ret
cmp
pop
sahf
std
push
enter
je
xor
inc
and
and
add
jmp
push
out
or
or
ret
gs
cmc
inc
js
cli
mov
xor
add
out
inc
push
sbb
jno
sbb
imul
cmp
das
les
icebp
xorl
mov
imul
cld
dec
fisubrl
adc
rorl
mov
test
lcall
jge
adc
pop
mov
pop
or
add
repz
orl
push
aad
fistpl
adc
ljmp
add
xchg
repnz
js
sahf
and
dec
inc
fsubrs
lahf
std
jg
adc
dec
add
mov
sbb
inc
icebp
test
inc
jmp
cmp
pop
clc
pop
movsl
mov
jmp
dec
sub
mov
shl
hlt
popfw
dec
pop
fadds
in
fidivs
push
mov
enter
push
pusha
pop
lahf
push
lahf
adc
jl
sub
aam
or
inc
ljmp
push
sahf
sub
and
push
aam
and
add
sub
imul
fldl
sub
or
lock
add
or
jl
inc
ret
adc
pop
mov
sub
daa
cmp
add
pop
loopne
ret
cmpsb
inc
cltd
add
adc
dec
adc
mov
pop
int3
push
mov
insb
push
lea
loopne
cmp
dec
mov
adc
repz
call
movsb
loopne
mov
in
lahf
sub
int3
sbb
jb
xchg
xor
pop
stc
adc
hlt
lea
ljmp
cmpsl
push
xor
aad
or
jmp
mulb
sbb
jmp
js
call
or
sti
sbbb
xchg
add
dec
or
arpl
xchg
xchg
loope
call
sbb
xchg
or
call
inc
loopne
adc
ljmp
jb
and
cmp
sar
pop
and
cmp
insl
loopne
sub
mov
incl
and
cs
cwtl
xor
dec
push
push
inc
pushf
add
push
pop
das
and
xchg
js
sbb
ljmp
int3
push
or
and
mov
and
lock
sarl
sbb
push
outsb
push
adc
lret
test
add
sbb
or
sub
leave
or
mov
lods
flds
sub
std
das
les
mov
stc
sub
in
mov
pop
mov
push
pop
test
add
add
mov
pop
clc
and
and
add
outsl
pop
lret
popf
jns
mov
insb
or
pop
dec
add
dec
mov
inc
inc
sub
sub
add
or
addr16
aas
xchg
and
shll
or
mov
sbb
rcrb
push
push
fdivrs
mov
dec
or
pop
add
loop
sub
jge
and
subl
lods
cmc
int
sbb
push
push
and
mov
cmp
int3
sahf
mov
push
sbb
repnz
dec
mov
arpl
pop
mov
mov
jle
cld
sbb
add
mov
jp
pop
loop
pop
fwait
lahf
pushf
push
mov
mov
arpl
cmp
cltd
sub
mov
aad
cltd
cmpsl
and
adc
popa
orl
test
mov
adc
push
in
push
add
xchg
cmp
test
lods
or
mov
inc
insb
insb
ret
ret
dec
ja
lock
jmp
ja
dec
je
sbb
mov
jmp
adc
int
sub
or
xor
mov
shll
jbe
lahf
jno
ret
jmp
stos
dec
xchg
jle
or
mov
mov
xor
jne
gs
adc
andb
movsb
inc
sbb
mov
jle
mov
jmp
mov
mov
mov
int3
in
inc
dec
add
repz
sub
imul
mov
mov
push
add
or
inc
inc
fwait
pop
inc
jl
adc
pop
stc
mov
pop
shlb
rcr
lds
in
call
mov
fdivrl
in
lahf
arpl
imul
js
jmp
pop
jo
bound
dec
orb
push
push
adc
xor
or
and
and
pop
imul
adc
mov
cs
jmp
inc
mov
inc
mov
popf
rorb
xchg
adc
adc
add
add
mov
dec
outsb
roll
add
push
or
daa
les
sub
add
mov
mov
pop
jo
js
lea
adc
dec
mov
mov
adc
adc
xor
adc
jbe
pop
push
or
fnstcw
pop
jbe
mov
inc
lock
mov
sahf
fwait
leave
and
stos
pop
outsl
test
popf
inc
fmul
push
rcrl
and
push
movsb
sbb
nop
xchg
xchg
inc
and
scas
inc
pop
lods
push
ds
mov
movsb
mov
test
cmp
stc
push
cmpl
popa
loop
push
jp
test
hlt
jg
cli
add
xor
flds
mov
test
dec
movl
enter
pushf
push
push
or
lret
lahf
xor
or
add
stos
mov
dec
ljmp
je
dec
fwait
iret
and
ret
cmp
rorb
sbb
nop
clc
add
add
mov
sbb
xor
add
add
xor
or
aad
or
push
add
pop
dec
jne
clc
jecxz
push
jae
je
hlt
cmp
cld
fldcw
sub
adc
pop
fmull
cmc
outsl
das
cmp
mov
testb
inc
mov
cmp
je
mov
test
inc
or
add
or
sbb
or
inc
scas
mov
pop
adc
add
jbe
lods
out
push
aas
push
loopne
push
jmp
push
add
daa
sub
lahf
lea
je
lock
mov
fadds
pop
push
sub
dec
imul
and
dec
mov
cld
lahf
out
dec
push
pop
stos
push
scas
mov
cmp
je
aam
outsb
enter
sbb
clc
adc
jl
lahf
ret
lea
mov
adc
imul
pop
add
add
out
cmp
add
ja
xor
adc
adc
and
cmp
add
jns
add
flds
xor
mov
push
pop
and
enter
push
pop
rclb
jb
or
inc
push
nop
out
or
addr16
jns
sub
jns
push
nop
or
or
xchg
cmpsb
repnz
add
or
repnz
or
add
sbb
cwtl
push
push
enter
ja
push
cvtdq2ps
inc
push
adc
pop
adc
inc
push
fcoms
fwait
sub
adc
ret
enter
adc
adc
mov
add
adc
adc
aaa
jb
cltd
adc
inc
push
js
push
push
and
sbb
push
pop
pop
enter
xor
sbb
lcall
sbb
push
nop
out
call
cmp
push
inc
sbb
sbb
test
pop
sbb
nop
out
arpl
in
push
pusha
push
push
mov
push
pop
pop
jne
add
xor
inc
jmp
lret
jae
mov
mov
jmp
fisubl
aas
or
mov
mov
push
in
jno
lret
lcall
rol
lea
in
dec
repnz
cmp
add
mov
ret
dec
sahf
out
push
mov
add
call
enter
adc
nop
negl
ljmp
jmp
lret
sbb
out
in
in
pop
push
mov
in
cltd
mov
add
inc
in
sahf
out
out
cmp
cmp
out
sbb
and
in
pop
lock
pop
enter
icebp
enter
pslld
test
pop
out
std
repz
push
push
jns
std
hlt
hlt
rorl
cmp
hlt
fwait
mov
in
inc
jg
testb
push
pop
idivl
sbb
clc
clc
cltd
inc
fmulp
add
stc
inc
stc
add
mov
cli
nop
adcl
cld
repnz
outsb
sub
cld
je
cld
push
pxor
mov
xor
cmp
xor
pop
cmp
push
inc
push
dec
push
pop
or
add
lahf
rorl
aad
push
scas
or
addr16
andb
es
jecxz
sbb
out
repnz
sti
in
in
xchg
stos
lods
mov
inc
mov
stc
daa
xchg
sti
out
fsubs
add
outsb
and
mov
sti
inc
add
pop
sub
sbb
cs
jmp
jns
jne
in
add
and
test
out
out
cltd
adc
enter
add
mov
das
cli
push
cli
nop
cmpsb
jb
sbb
scas
xchg
pop
insb
repz
sar
push
sub
cmp
mov
pop
stc
negl
scas
dec
div
pop
fwait
xor
jno
clc
add
stc
xchg
xchg
mov
clc
rolb
sub
sti
sti
cltd
push
nop
aaa
jb
cld
inc
cld
or
inc
pusha
mov
sbb
bnd
sub
xlat
cld
sub
inc
or
loop
icebp
testl
shl
xchg
xchg
mov
divl
sbb
out
push
jno
sbb
out
inc
testl
negl
sti
imul
ljmp
negb
jns
cmp
notb
adc
cmp
test
mul
inc
repnz
testb
push
cmp
bnd
or
jno
cmc
mov
adc
pop
xchg
cmc
jb
imul
cmc
pop
dec
cmc
pusha
pop
xchg
cmpsb
div
idivb
flds
cmp
cmp
sahf
clc
clc
jecxz
stc
test
cmp
les
hlt
inc
repnz
jne
xor
push
hlt
sbb
mov
push
dec
scas
idivl
jo
sti
imul
lahf
pusha
adc
pop
nop
test
loope
loope
mov
loop
sub
xchg
cmp
repz
rclb
test
mov
loop
repz
repz
andl
push
test
jmp
jmp
shll
xchg
repnz
or
sub
dec
in
cmp
lea
jns
jne
add
and
push
push
adc
mov
divb
cmp
icebp
test
icebp
cmp
imul
pushf
dec
push
add
jecxz
rcll
sbb
popf
lock
stc
adc
and
jne
push
pusha
leave
mov
mov
push
lock
test
ss
pop
ffree
fidivs
shlb
add
out
ret
push
iret
in
cmovno
push
add
jns
push
int3
add
xor
data16
add
jp
inc
mov
sbb
nop
mov
adc
jne
dec
jo
adc
dec
add
call
and
jmp
mov
pop
add
and
fstpt
out
push
add
jbe
cmp
imul
imul
insl
xorl
sahf
out
insb
bnd
ja
push
arpl
fnstcw
call
outsl
iret
repz
cmc
jae
cmp
xchg
into
repz
stos
mov
mov
call
fistl
dec
mov
shrb
or
push
daa
mov
xor
xor
mov
enter
fs
cld
add
cmp
ja
adc
dec
je
movb
dec
adc
neg
movsw
decl
popa
shl
push
cli
or
add
jmp
or
sysenter
adc
lret
sarb
sub
cld
jb
pop
or
into
jmp
out
adc
decb
mov
dec
dec
jbe
stc
jb
or
cmp
xchg
cwtl
mov
in
mov
or
add
inc
and
push
cs
pop
xor
dec
enter
imul
or
adc
cs
mov
xor
mov
aad
les
lahf
lret
sbb
movsl
sub
imul
xor
jns
jl
loop
or
add
sub
loope
fstpl
pushl
in
fwait
mov
add
leave
ret
aaa
adc
add
cmp
pop
and
outsl
mov
jg
rcrl
lock
flds
lods
data16
adc
test
jo
cmp
ljmp
push
fstps
icebp
movb
add
lahf
mov
jmp
cmp
fsubrp
lcall
ret
mov
or
pop
leave
pop
addb
inc
mov
or
or
push
xchg
mul
cmpsb
push
or
fstpt
mull
adc
add
pop
xor
add
mov
cmp
cmp
rclb
in
jnp
push
neg
clc
mov
mov
sbb
jnp
sbb
sbb
jne,pn
in
sbb
sbb
jb
mov
adc
sar
cmp
fucomp
inc
push
xor
jmp
ljmp
pmaxub
lock
enter
shll
cmp
sti
in
js
ja
pop
cmp
add
xchg
sub
shr
jne
fsub
add
pop
imul
cld
sub
add
and
int
mov
and
test
mov
xchg
cmp
ret
sub
add
add
xchg
loop
pusha
xor
push
xor
add
push
mov
les
sub
add
and
repz
jl
xlat
scas
add
xor
add
in
dec
js
shrl
pop
xor
lds
push
push
inc
loope
push
pushf
fsubrl
jl
shrb
and
cmp
repnz
cmp
pop
sub
sub
cmpsb
add
sub
sub
push
mov
rolb
or
lahf
sub
add
insb
push
js
push
mov
inc
sbb
sbbl
cmp
inc
subl
or
dec
ret
or
bound
adc
ret
sbb
es
adc
adc
leave
sbb
cmp
notb
xchg
mov
push
mov
xor
or
lods
push
mov
pop
cmp
shrb
sbb
add
dec
mov
lcall
clc
subb
sahf
jle
and
enter
loope
jecxz
xchg
push
add
mov
mov
sub
mov
mov
sub
adc
inc
aad
or
jecxz
or
jnp
popa
inc
adc
add
and
jae
lock
add
cmp
cmp
loopne
mov
shl
cmpl
dec
daa
loop
ss
sbb
inc
mov
cmp
jmp
movsl
xor
jmp
imul
rolb
mov
sub
mov
add
push
fisttpl
adc
rol
imul
lret
or
cmp
pop
cmp
clc
push
icebp
loop
loopne
add
mov
test
in
add
cmp
je
adc
cwtl
sub
or
pusha
push
push
pushl
or
test
lret
inc
cmpsl
xorb
dec
dec
push
dec
push
dec
mov
sbb
dec
rorl
dec
or
shl
shl
test
jne
mov
cwtl
imul
icebp
or
pop
sbb
not
xor
xchg
rcrb
pushf
fs
fdivp
ss
pop
pop
cld
pop
sbb
and
in
test
jno
dec
incl
and
xor
out
out
mov
and
cmp
mov
movsb
xchg
push
push
lret
sub
add
mov
icebp
adc
pop
cli
data16
aas
add
add
jb
test
adc
mov
xor
lods
mov
mov
pop
lahf
inc
and
add
ljmp
ret
cmp
cmp
daa
sbb
add
sbb
sbb
stos
or
push
pop
push
and
mull
int
je
pusha
test
lret
inc
jmp
sub
mov
out
mov
mov
sub
incb
cmp
scas
ds
add
push
stos
loop
cli
jno
inc
mov
aas
inc
pop
cli
shll
arpl
jp
and
ret
fimull
fidivl
sbb
decl
sti
pushf
add
push
cmpsb
js
mov
pop
iret
and
loope
inc
or
in
and
mov
and
push
jb
or
adc
and
push
mov
or
ret
and
adc
push
lret
subb
adc
adc
fisubrl
outsb
xchg
lods
xorb
pop
mov
inc
inc
push
and
loope
or
cli
xor
mov
loop
outsb
int
cmp
ret
add
outsb
xchg
popa
and
and
jecxz
mov
add
fwait
mov
jg
push
add
and
and
xchg
mov
test
mov
les
lock
mov
cmp
bnd
lea
jno
mov
push
daa
addl
addb
xchg
out
or
jne
stos
xlat
cmpsb
faddl
fdivp
jb
mov
add
test
or
and
je
jmp
cld
incl
inc
cmpb
je
mov
cmp
je
cmp
je
cmp
jne
jp
add
jge
or
sub
push
je
sti
int
pop
aad
pop
or
je
aaa
je
dec
je
sbb
lods
xchg
xor
fisubl
jne
inc
jmp
mov
cli
das
cmp
jne
mov
in
push
jmp
sbb
lret
push
jmp
test
jns
pop
or
and
inc
or
mov
adc
xchg
add
cmp
sete
jb
add
shll
movsb
mov
pusha
add
push
loope
mov
bound
sub
pop
pop
out
jmp
inc
mov
jl
das
sub
jmp
push
and
addl
sbb
sub
in
add
or
push
pop
sub
or
dec
test
sub
mov
cmp
push
cwtl
push
fsubs
cmp
cmp
jbe
jmp
mov
in
enter
push
jb
cmp
outsl
pop
pop
les
mov
dec
sbb
mov
jne
andl
push
out
and
imul
pop
je
sysenter
or
mov
add
test
loopne
xchg
pushf
add
or
add
pop
dec
pop
and
sbb
popf
insb
xchg
adc
inc
or
mov
adc
mov
leave
incb
xor
push
push
add
pop
push
jno
je
iret
xor
push
jmp
fs
jne
inc
or
and
or
and
popf
inc
mov
ja
rorb
scas
shl
mov
insb
fbstp
test
push
outsl
or
jp
lahf
add
je
sarl
mov
xchg
cmp
ja
xchg
jp
cld
scas
and
sub
add
add
sub
dec
cmpsb
mov
les
push
pop
outsl
push
jp
pop
filds
fnstenv
mov
in
inc
add
or
push
adc
sub
dec
sub
out
aas
mov
sahf
fwait
ja
cmp
js
push
outsb
movb
add
cmpb
dec
push
lea
add
fsubrs
fs
sti
sub
movsb
xor
xchg
popa
inc
test
imul
mov
fmull
or
lea
in
fildl
fistl
call
mov
or
and
xchg
movsb
sub
ffreep
xlat
mov
push
adc
push
dec
dec
add
mov
dec
or
scas
sub
adc
loope
scas
jle
adc
in
xor
cmp
push
sbb
cmp
or
xor
cmp
bound
daa
adc
sbb
dec
adc
ret
rsm
repz
jp
arpl
push
mov
insl
movsb
leave
xlat
les
push
jns
inc
pop
popa
and
imul
pushf
pop
add
loop
fwait
mov
mov
and
or
push
add
adc
sub
cmp
mov
and
das
sub
lea
fldcw
and
sbb
jge
pusha
push
cmpl
add
jb
loopne
vmread
jge
subb
jb
or
into
jmp
sbb
cmp
icebp
popa
mov
cmp
es
fldenv
or
lods
nop
or
lea
jo
sub
sub
test
js
pop
xchg
enter
aad
adc
jp
jle
movsl
or
sub
jnp
fs
out
sub
and
xor
shll
movsl
cmp
out
das
adc
rorb
sub
movl
lahf
xchg
inc
jge
or
add
sub
je
testb
jne
jge
popa
lock
push
dec
xchg
mov
add
testb
addb
sbb
or
add
push
mov
insl
pusha
mov
cmp
and
or
insl
jmp
or
dec
fcompl
repz
pop
lds
cmp
sub
ss
sbb
clc
dec
loopne
out
inc
adc
insb
test
outsb
ds
jnp
mov
outsl
loop
mov
les
orl
cli
mov
push
inc
and
ret
shrl
jnp
sbb
add
xchg
movsl
sub
bound
inc
pusha
or
push
xor
ljmp
loopne
cld
decl
js
add
pop
loopne
inc
mov
bound
add
fs
dec
sbb
fmull
pushf
jne
mov
loopne
inc
or
mov
jne
inc
add
std
add
mov
adc
fdivl
aad
mov
orb
jnp
add
pop
add
cld
jge
mov
cwtl
cmp
push
test
sarl
enter
test
push
sbb
add
mov
push
sub
sub
hlt
test
je
mov
and
xchg
dec
sahf
add
stos
sub
sarl
shlb
pop
cmpb
add
xor
inc
cmp
jb
inc
sbb
xchg
icebp
frstor
movsl
add
test
andb
push
ja
dec
add
stos
pop
jg
mov
and
mov
jbe
add
push
sbb
add
xor
int3
mov
das
dec
popf
inc
add
rcrl
dec
pop
enter
jle
in
in
inc
cmp
jb
not
bound
inc
arpl
imul
cmp
cmp
pop
cmp
or
rorl
or
xor
movsb
sbb
sbbl
fdivs
es
das
enter
aam
sbb
loopne
rorl
and
imul
imul
dec
pop
test
andl
addr16
add
test
add
sti
xchg
mov
push
test
movsb
or
jns
rcl
insb
pop
test
jns
dec
cld
inc
jmp
xor
adc
cmp
mov
in
or
leave
mov
ds
mov
xchg
out
ds
push
inc
sbb
xchg
lock
dec
rclb
push
flds
jne
sbb
push
push
pop
addb
dec
dec
lea
cmp
mov
or
mov
sub
aas
out
stos
mov
movd
bswap
rolb
xchg
std
pop
cwtl
sbb
jo
mov
sub
js
jns
xor
or
das
pop
je
xor
clc
xchg
pop
adc
xchg
orb
pop
imul
sbbb
push
stos
shrb
mov
stos
cmp
pop
cld
lea
decl
dec
add
cwtl
add
push
adc
mov
add
scas
push
push
sub
daa
add
adc
insl
mov
cmp
test
adc
sub
adc
sbb
adc
cmpsb
mov
and
xor
ljmp
inc
jmp
dec
cli
popf
pushl
push
fs
add
add
and
jo
add
push
xchg
xchg
or
outsl
and
adcl
or
jo
cmpsb
inc
jae
or
adc
push
shld
shl
ret
int3
fcomps
lods
jecxz
loop
loop
push
or
cld
rclb
arpl
xchg
cmp
xor
jne
lret
subl
xor
mov
sahf
data16
inc
inc
cmp
mov
cmp
outsb
out
jns
mov
push
sbbl
jle
clc
cs
push
mov
rolb
cwtl
cltd
subb
mov
fldl
inc
sbb
lahf
xchg
cmp
pusha
or
xchg
xchg
xchg
xor
and
cmp
into
add
mov
mov
hlt
jnp
pusha
mov
add
cmp
or
pop
pop
mov
sarb
sti
pop
xorb
mov
dec
out
or
push
loop
add
push
xor
pop
stos
and
daa
jb
push
cmp
inc
push
xorl
fiaddl
jge
jnp
push
inc
push
pop
or
cli
cmpb
mov
cmp
cli
mov
fnsave
mov
adc
loope
pop
gs
xchg
mov
fsubrp
lds
imul
fadds
mov
jl
add
jbe
js
popa
adc
subb
inc
xchg
sbb
pushf
dec
add
stos
pop
sub
ret
nop
test
push
cmpsl
std
shl
add
ret
xchg
mov
scas
cmp
mov
cld
push
dec
ja
movsb
mov
mov
add
mov
jg
movsb
and
sbb
push
rorl
out
or
in
andb
lea
out
ss
push
repnz
push
push
pop
jmp
inc
rolb
dec
or
das
je
stc
or
rep
jmp
fwait
hlt
out
mov
mov
jb
add
enter
xchg
stos
cmp
xor
aam
pop
call
ficoms
cmp
and
pop
mov
mov
jl
mov
or
scas
adc
mov
push
dec
add
dec
push
pop
push
movl
outsl
inc
sub
add
jns
jns
mov
or
cld
lahf
js
inc
mov
mov
call
repz
lock
hlt
pop
cmp
repz
clc
cld
fdivrs
adc
lock
fnstenv
mov
call
xor
cmp
andl
sti
and
mov
ret
push
sbb
lea
jl
cld
or
adc
std
cld
out
pusha
cltd
xchg
into
mov
fsts
mov
push
inc
sub
nop
je
int
in
mov
add
out
jbe
sub
mov
inc
push
jns
adc
push
add
nop
dec
dec
addr16
and
dec
add
ljmp
adc
sbb
and
pop
lahf
out
xor
inc
push
cltd
aaa
sahf
out
sahf
sbb
sbb
adc
jns
out
adc
or
or
sahf
out
add
inc
test
or
mov
adc
andl
inc
ja
add
push
in
insb
cmc
jp
inc
cmpsb
and
sub
or
mov
add
jno
or
xor
sbb
or
fcoml
fcomps
int3
data16
clc
or
test
movsl
add
lods
mov
push
mov
jnp
dec
add
rorl
call
jbe
dec
cld
adc
sub
sub
cmp
pop
inc
inc
in
mov
sub
push
das
xor
pop
and
add
jmp
xor
pop
aam
jge
movsl
pushf
shl
cwtl
imul
movsb
ss
xor
movsb
pushf
mov
jns
pushf
cmp
repnz
movsb
pushf
mov
pushf
xchg
sahf
out
cmpb
pusha
je
and
pop
pushf
mov
loopne
jmp
pushf
in
pop
mov
popf
divl
and
nop
push
push
js
cmpl
inc
push
inc
sahf
mov
jns
out
push
cld
push
add
or
sbb
and
out
aaa
sahf
mov
inc
push
or
push
inc
adc
xor
jp
ds
fisubrs
mov
push
cmp
xchg
dec
in
pushf
popf
inc
and
mov
sahf
ret
sbb
sbb
fcoml
sbb
movsb
adc
cmc
cmc
cld
push
inc
add
insb
dec
xor
mov
rcrb
jle
lock
fidivrl
das
sbb
inc
or
lods
mov
icebp
lods
js
jo
add
lods
repz
push
push
jl,pt
or
push
or
fcmovnbe
cs
push
cmp
push
fcoml
in
mov
pop
and
push
sbb
movl
mov
jle
sbb
or
lret
add
jnp
cmp
cld
push
jbe
add
jo
xchg
inc
or
add
push
mov
and
mov
and
int3
push
xchg
or
addb
subb
push
bound
loopne
loope
pop
pop
arpl
mov
dec
fildl
adc
jl
outsl
lret
sbb
add
imul
adc
rolb
cmp
in
add
xor
add
mov
inc
or
enter
xor
rorb
pop
mov
push
outsb
insb
sbb
push
push
jmp
mov
jae
and
cwtl
jb
pop
rcrb
sub
cmp
jb
pop
inc
inc
dec
sbb
xchg
and
js
sbb
mov
cmp
ja
cmp
adc
int3
out
sahf
testl
mov
fwait
dec
mov
lds
stc
popf
sub
mov
xchg
insl
inc
add
jge
or
push
fwait
jmp
lds
daa
adc
mov
pop
pusha
xchg
jno
pop
sub
xchg
mov
or
sbb
cmpxchg
ror
add
outsl
cmp
es
bt
sbb
je
pusha
test
test
sub
pop
outsb
es
inc
shlb
or
lods
andl
ja
mov
jno
lahf
inc
ja
loopne
scas
icebp
mov
jb
int3
popf
sarl
add
mov
jl
xlat
cmovae
pop
js
andb
dec
jl
call
loop
rcr
adc
gs
shlb
sbb
cmpsb
dec
xchg
xor
into
xchg
inc
add
shll
test
pusha
mov
or
pop
add
stos
daa
cmp
push
out
in
inc
rorb
lahf
mov
cs
scas
lret
xor
sub
data16
cmp
pop
enter
dec
sbb
sub
je
loopne
rcll
aas
ret
jmp
das
inc
das
mov
add
mov
mov
sahf
push
cmp
out
fcmovnb
frstor
pop
movsl
dec
sar
insl
ret
mov
pushl
out
aaa
adc
mov
push
mov
loope
pusha
shll
and
mov
inc
mov
push
pop
shl
filds
mov
dec
add
or
jnp
or
push
fldcw
xor
push
jg
outsb
inc
mov
ja
bound
push
jmp
test
sti
cmp
ret
add
int
and
cld
inc
loopne
js
adc
adc
jb
cld
mov
iret
cmpsb
repnz
test
and
add
sub
js
bound
cmp
and
add
fwait
xor
pop
add
inc
push
jne
push
push
mov
fwait
or
xor
pop
imul
inc
sub
xchg
or
outsl
dec
ret
loop
pop
test
adc
imul
pop
movb
scas
xchg
cmp
imul
lock
push
xorl
mov
dec
mov
pop
push
or
lcall
inc
mov
cmp
push
mov
adc
dec
xor
mov
and
mov
popa
or
push
and
and
jae
lods
js
cmp
pop
fbstp
adc
lahf
mov
xor
mov
rorb
inc
sbb
mov
adc
or
sti
sub
inc
sbb
fists
insb
dec
jne
arpl
ss
lea
clc
inc
add
out
stos
jb
pop
or
cmp
insl
inc
xor
outsb
adc
ficompl
je
or
push
outsl
je
js
dec
pop
jne
jmp
lcall
cmp
push
je
ja
inc
movsl
cmp
sub
and
sub
decb
sbb
sbb
mov
daa
test
mov
out
mov
mov
dec
xor
pop
inc
xor
mov
popf
jne
dec
push
je
stos
lcall
idivb
jne
adc
sbbb
push
clc
outsb
je
or
or
sub
scas
pop
fcoms
jb
popf
sbb
rorl
jmp
jl
mov
mov
outsb
outsb
test
outsl
ss
add
jnp
mov
ljmp
cmp
adc
in
lret
pop
xor
inc
or
or
shlb
or
je
inc
cmp
or
mov
mov
push
add
push
movsl
in
iret
adc
mov
ffree
add
sub
aam
xchg
rcll
ret
mov
shrb
push
imul
sub
mov
mov
mov
loopne
loope
jl
push
lea
xor
xchg
stc
push
icebp
jne
fisttpll
scas
or
cmpb
into
mov
sub
pop
adcb
shll
and
or
ret
mov
add
or
xchg
ret
pop
mov
pop
add
cwtl
xchg
fcoml
inc
push
dec
add
std
add
gs
enter
cmc
or
jne
sub
sub
sub
mov
cmp
and
jmp
roll
sbb
mov
in
sbb
scas
lock
pop
pop
xchg
rolb
outsl
ret
xchg
idiv
push
iret
scas
cmp
pop
inc
cmp
mov
push
inc
xchg
jmp
dec
add
enter
pop
inc
or
jo
mov
push
outsb
mov
cs
bound
push
xchg
or
dec
sub
popa
mov
mov
add
or
jo
arpl
jae
adc
jl
fsts
sub
add
jne
aaa
loope
mov
and
add
cld
inc
shl
f2xm1
mov
sbb
sub
xor
test
cmp
cs
sbb
jle
loopne
pop
inc
and
add
pop
mov
addl
mov
mov
sbb
loop
in
sub
jmp
push
sbb
inc
dec
mov
or
test
add
cli
ja
loopne
sub
xor
mov
add
decb
lds
push
push
out
jmp
lds
inc
cmpb
mov
jne
lea
or
mov
fsubl
icebp
lahf
sub
cmpb
jne
mov
inc
push
and
data16
cmp
inc
sti
pushl
movsb
mov
cmp
je
inc
cmp
jae
mov
jmp
enter
ret
cmp
ja
sub
adc
aas
mov
rcl
pop
mov
mov
shl
shrl
pop
push
inc
add
dec
jne
xor
nop
cmp
mov
cmpsl
inc
sarl
cmp
cwtl
dec
jl
pushf
or
add
andl
mov
sub
test
dec
pusha
inc
cmp
add
mov
cmp
je
imul
sahf
je
dec
or
add
ret
cmp
push
sahf
pop
outsl
gs
idivl
sub
mov
pop
mov
add
mov
mov
loop
lret
xor
nop
inc
adc
dec
push
cmp
adc
push
aam
movsl
imul
mov
lcall
add
add
mov
xor
or
or
pop
sub
mov
and
cmp
je
mov
push
add
jne
jmp
sbb
jge
cmp
movsb
notl
push
or
jmp
push
or
andl
mov
mov
xchg
add
gs
imul
xchg
push
vexpandpd
cltd
add
adc
loopne
repnz
pop
xor
adc
xchg
jecxz
pop
lods
or
push
pusha
js
mov
test
inc
mov
loop
add
and
pop
lahf
shrl
fs
add
xor
in
orb
outsb
shl
mov
decl
jmp
dec
push
dec
mov
xor
sub
add
addr16
jl
rorb
adc
movsb
xor
filds
sbb
cltd
jmp
adc
cmp
cmp
call
push
cmp
adc
sbb
mov
ds
data16
incb
sbb
pusha
cmp
push
and
insb
or
dec
movsb
sub
inc
data16
push
pop
lret
jae
inc
frstor
and
sbb
xor
scas
cmp
jne
aad
je
not
push
adc
cmp
sub
fidivl
push
jle
or
push
sub
lock
aas
jmp
push
push
jmp
push
rcll
insb
mov
pop
push
lock
pop
out
int
mov
js
rcll
cmp
jne
adc
imul
mov
sbb
or
lods
cltd
jns
mov
inc
push
mov
xorb
dec
mov
mov
rorl
ss
shll
lret
mov
lret
push
sub
hlt
jg
jl
inc
push
push
push
mov
cwtl
or
jmp
sar
xlat
inc
or
xor
es
xchg
ja
push
push
push
or
add
lock
inc
lea
icebp
mov
idiv
lea
push
dec
stos
add
mov
in
push
ret
notb
loope
clc
insb
add
cwtl
mov
mov
or
pop
add
xchg
push
ds
dec
add
adc
inc
jg
xor
cmp
mov
pusha
pusha
mov
adc
add
inc
insb
push
lret
or
fs
hlt
enter
push
cmpsb
lock
jbe
dec
mov
outsl
jmp
ss
inc
xor
or
ds
mov
daa
xor
jne
movl
out
push
andl
loopne
inc
imul
inc
adc
divl
mov
lds
mov
push
sbb
jl
jbe
movsb
pop
sub
test
inc
adc
inc
cmp
lcall
push
test
add
fwait
arpl
dec
and
rclb
or
icebp
hlt
fsubrl
call
push
dec
inc
dec
cmp
imul
out
pop
and
xor
mov
dec
add
or
mov
in
push
or
adc
inc
insb
mov
mov
cwtl
mov
sbb
jmp
test
dec
ret
pop
and
mov
push
lcall
cs
nop
mov
add
in
and
test
mov
fsubl
xor
jl
adc
mov
xor
mov
cmp
cld
imul
inc
dec
add
pop
adc
cmp
je
mov
push
jle
and
inc
and
xor
insl
testl
addr16
push
cmp
popf
add
inc
jo
aas
add
push
shll
mov
mov
cmpb
inc
call
add
mov
sbb
fdivrl
push
pop
ret
adc
sbb
and
sbb
push
jbe
add
add
push
and
loopne
sbb
push
push
aas
pop
xchg
dec
movsb
adc
mov
fmulp
mov
mov
rcrb
mov
mov
mov
jmp
adc
outsl
xchg
fstpt
adc
push
fnstsw
adc
ds
mov
add
xchg
cmpsb
lcall
arpl
daa
push
push
inc
pop
push
sub
outsl
or
nop
shlb
ds
aad
push
jne
mov
and
sub
xor
cmp
inc
jmp
adc
push
test
hlt
pop
mov
cmp
imul
rolb
xor
aas
sbb
dec
enter
adc
sbb
sub
test
xor
popa
sub
ss
sub
jle
inc
push
dec
movsl
cmp
mov
adc
xorb
adcl
xor
mov
setg
cld
inc
int
call
movsb
pop
idiv
pop
jo
jo
lea
std
add
push
sbb
jo
jmp
sbb
mov
out
cmp
mov
ja
inc
shlb
ret
cltd
sbb
ss
sub
mov
sbb
jnp
pop
add
ret
lea
inc
dec
fs
mov
sub
add
ljmp
xor
jg
lea
inc
and
mov
dec
cmpb
jo
cmpb
leave
cli
jl
dec
cmp
add
pop
jmp
addl
aas
out
shll
xor
jecxz
adc
sbb
loopne
shrl
inc
dec
and
and
leave
push
push
rcrb
jno
mov
xor
push
jmp
pop
outsb
imul
ret
cmpsl
sub
mov
popf
add
sti
fists
orl
decl
sbb
sub
jl
sub
incl
scas
push
mov
lock
pop
test
lods
add
dec
aas
mov
xchg
add
ret
mov
add
in
mov
movsl
idivl
cmp
add
sbb
cvtpi2ps
jns
push
push
and
and
xor
in
xchg
es
push
jmp
pop
push
push
push
push
and
lods
adc
cmp
fdiv
cmc
out
in
sbb
cmc
pop
shl
shlb
out
outsb
imul
mov
sbb
mov
jmp
cmp
fcmovnu
and
ljmp
xchg
test
clc
jge
ljmp
sbb
clc
add
ja
pop
push
push
jnp
outsl
jnp
jecxz
pop
rclb
stos
dec
outsl
fsubs
mov
sbb
push
cmp
movsl
shrl
sarb
push
jle
jge
push
inc
or
outsl
add
fstpt
push
jle
xchg
test
cmp
add
pusha
dec
rorl
pop
jmp
jne
mov
add
movsl
xor
sbb
mov
mov
mov
cmpsl
sarb
push
adc
int3
and
ret
js
jo
adc
setns
mov
jl
and
sbb
shlb
imul
xchg
push
les
or
mov
and
jns
sbb
xor
sbb
mov
jnp
pop
mov
ret
push
rclb
dec
cmpsb
push
inc
xchg
xor
add
mov
dec
enter
mov
adc
push
push
jbe
sub
mov
lcall
lahf
test
sub
pop
jp
movsb
jle
insl
test
pop
call
or
faddl
lock
cmpsb
add
adc
or
pop
dec
adc
enter
and
in
bound
inc
xor
sub
inc
cld
cmp
loope
test
add
dec
push
pop
sub
mov
mov
inc
dec
jne
lea
mov
jo
enter
sbb
push
or
dec
mov
dec
ljmp
pop
test
cmp
adc
hlt
mov
loopne
or
jo
lea
ljmp
push
adc
push
lea
and
bound
mov
inc
jp
testl
cld
ficoml
sbb
je
push
cltd
dec
insb
mov
jno
stos
sub
push
push
xchg
inc
inc
cld
imul
add
dec
sti
ljmp
and
mov
test
je
orb
mov
mov
adc
adc
adc
nop
mov
adc
xor
mov
imull
mov
sub
mov
ja
test
cmp
and
lret
add
push
lcall
push
and
and
sub
test
jmp
inc
cmp
jb
and
pop
jg
inc
shlb
mov
testl
lea
scas
and
mov
sbb
xor
jbe
sbb
push
mov
push
mov
mov
test
fadd
push
xor
mov
or
inc
cmp
jo
sbb
sbb
jne
movl
fmull
jbe
cmp
std
jne
dec
shlb
aad
dec
sti
mov
cmp
roll
pop
ret
dec
push
push
adc
pop
loopne
or
mov
jp
fcom
push
xchg
push
xor
rcrl
mov
mov
mov
add
addl
or
sahf
xchg
jo
push
jmp
andb
imul
stos
mov
lea
push
inc
inc
shlb
icebp
rolb
jnp
movsb
cmpb
jbe
sub
int
jne
mov
test
aaa
in
rcll
inc
pop
leave
inc
mov
lea
aas
pop
mov
imul
into
xchg
mov
lds
loopne
ret
add
sub
cmp
sti
sti
loopne
sbb
or
lcall
or
mov
insl
fld
jne
outsb
incl
loopne
dec
cmpl
xor
movsl
lods
jae
inc
mov
or
out
insl
inc
or
adc
mov
inc
mov
inc
inc
inc
dec
lahf
sub
insl
jbe
inc
cld
mov
mov
add
mov
test
jne
jb
inc
inc
push
mov
sbb
or
jne
dec
and
jnp
movsb
mov
lret
push
rcl
push
jnp
mov
mov
cmovne
add
sbb
out
loopne
adc
pusha
adcb
push
stos
cmp
sbb
lods
push
or
and
mov
cmpsl
popf
and
inc
mov
push
ja
sti
rep
andl
and
je
into
jb
les
mov
fisubrl
insl
inc
and
cmp
add
add
dec
sub
cli
jo
popf
ljmp
fldl
mov
xor
inc
loop
nop
cmp
push
or
or
scas
js
test
add
loopne
jl
sbb
or
inc
sub
jmp
xor
mov
dec
sbb
mov
ret
add
mov
ss
out
subb
xchg
jno
insb
jmp
sbb
aad
fwait
mov
jmp
or
cmp
and
and
xor
std
and
mov
dec
mov
xchg
and
in
int3
mov
decl
and
sbb
sbb
loopne
pop
pushl
int3
pushf
inc
lcall
inc
mov
adc
inc
dec
jnp
sbb
sub
lea
sub
and
lods
sbb
cmc
sbb
mov
loopne
cwtl
sub
or
add
add
mov
lea
mov
push
push
cmpl
mov
fs
pop
cmp
int3
mov
sub
fstl
push
or
sbb
sub
sbb
aas
stos
xchg
sbb
mov
lea
cmp
add
mov
aaa
cmpl
push
pop
cmp
mov
aam
movsl
sub
iret
lock
add
sub
pusha
ljmp
loope
pop
jp
push
push
pop
loop
mov
aam
dec
pop
ficompl
adc
mov
xor
shll
xchg
lods
sub
cmp
andb
in
pop
int3
dec
dec
ds
lds
in
mov
sub
pop
push
lock
lcall
sbb
jo
sub
or
inc
insb
mov
add
mov
test
inc
out
retw
lcall
js
adc
jl
in
sub
mov
push
mov
sub
enter
int
sbb
int3
subb
cmp
lea
add
ss
dec
loopne
inc
dec
jne
pop
pop
in
push
adc
punpckhbw
ficoml
push
jle
jae
iret
adc
or
jne
dec
aam
or
sub
push
aam
rorb
mov
mov
daa
mov
pop
xor
cltd
adc
sbb
lea
mov
jne
sub
adcl
das
fs
jle
hlt
cmp
jne
inc
jae
cmp
jb
push
mov
call
adc
fdivr
add
adc
mov
add
add
subb
push
into
daa
rclb
mov
outsb
push
pop
push
hlt
ja
dec
dec
push
cld
nop
jnp
or
or
dec
inc
mov
push
push
pop
mov
cmp
inc
je
aam
push
cmp
push
xor
lock
pop
sbb
insb
add
sti
lea
movb
sbb
lea
jle
sbb
inc
dec
pushl
cld
push
mov
mov
push
idivl
mov
mov
arpl
push
pusha
not
mov
push
pushl
jo
mov
or
or
inc
test
adcb
dec
lea
stc
hlt
pushl
test
cmpl
pop
and
mov
loop
sbb
adc
cmpsl
jbe
fdivs
sbb
sbbb
andl
and
jl
ss
in
cmp
roll
nop
addl
push
mov
lcall
and
mov
mov
xchg
push
lret
in
or
cwtl
mov
mov
pushf
push
dec
sub
popf
xchg
jb
adc
jno
xor
adc
inc
mov
or
js
aas
dec
adcb
cmpb
jne
cmpb
push
jno
cwtl
mov
loope
sub
add
mov
popa
adcb
add
into
cmp
cmp
shll
jnp
jle
fwait
jmp
fidivl
mov
jae
mov
push
fdivrp
sub
movsw
dec
dec
dec
jmp
jbe
fidivrs
push
popa
arpl
outsb
aas
or
inc
sub
or
jmp
sbb
inc
inc
jne
andb
or
iret
mov
pop
and
pop
add
push
movsl
adc
add
sub
adc
push
push
ljmp
insl
xor
pusha
push
push
and
push
cmp
int
inc
inc
int
je
mov
nop
aaa
imul
jl
pop
jge
mov
push
or
adcl
out
lret
js
shlb
rorb
push
pushf
add
vorpd
dec
pop
sbb
das
pop
js
test
cs
sub
test
and
push
inc
loope
mov
jmp
imul
insb
add
pop
mov
or
add
insb
andb
cmp
and
int
mov
mov
add
mov
cld
push
push
xchg
lods
scas
fwait
cmp
cmp
mov
adc
push
jae
pop
or
sbb
sub
out
sbb
nop
adc
mov
into
loopne
icebp
inc
and
dec
daa
sub
and
xchg
push
ret
cmp
test
shlb
xchg
in
and
in
inc
jbe
cltd
cs
inc
add
mov
pushf
mov
addr16
in
outsb
sub
adc
mov
sbb
fwait
jbe
jne
lods
adc
rcrb
sar
fwait
push
push
add
cmp
outsb
and
mov
jl
rorb
push
jmp
movsb
mov
dec
pop
lock
dec
jne
jb
xchg
add
stc
sub
jo
jno
loopne
mov
sub
push
push
mov
sti
mov
push
push
ret
jp
jmp
adc
addl
xor
push
push
scas
cmp
int
lods
les
adc
cld
or
arpl
sbb
add
jge
push
mov
rcll
mov
mov
mov
push
mov
pushf
cmp
lock
pop
movsl
ret
movl
mov
pop
repz
negl
stos
and
dec
movsl
fisttpll
or
adc
inc
adc
sbbb
add
push
lret
sbb
pop
inc
push
mov
sbb
enter
dec
insb
mov
add
sbb
test
icebp
call
ss
cmp
inc
dec
inc
push
ds
mov
inc
jge
or
jns
cmp
cmp
into
icebp
dec
loop
jg
pop
inc
pop
movsl
cli
add
dec
in
je
les
adc
xor
cmp
xlat
faddp
xor
aas
sbb
sbb
or
add
add
lret
add
xor
and
and
aas
orb
push
push
mov
hlt
xor
mov
mov
pcmpeqb
push
add
add
shlb
mov
mov
shl
inc
rorb
mov
test
and
inc
mov
mov
or
lret
lods
jne
dec
jo
ljmp
pusha
pushl
int3
daa
or
bound
subb
adc
or
lds
dec
or
cmpsl
lahf
aam
sbb
cmpsb
inc
or
jl
sub
ret
das
movsl
subb
shlb
jno
cmp
sbb
add
in
push
rcrl
outsb
pop
jp
mov
enter
sub
inc
fldenv
or
pop
jmp
shrl
jmp
enter
andl
cltd
ret
in
push
jnp
lods
loopne
cmp
dec
mov
ja
push
and
lea
inc
cmp
push
dec
lods
shll
pusha
outsb
or
ljmp
inc
pushf
add
lret
xchg
push
rorb
je
sbb
rorb
loope
jmp
xchg
push
rclb
and
aaa
iret
push
rorl
lock
xchg
inc
cmp
mov
je
sub
sbb
sub
aam
lret
sbbb
es
adc
dec
clc
fdiv
push
mov
repz
enter
or
xor
jo
and
adc
inc
lea
mov
lret
bound
adc
cwtl
in
push
and
mov
inc
mov
sub
adc
mov
clc
add
hlt
aaa
loope
sbb
adc
jl
ror
mov
lods
push
mov
adc
jmp
jle
mov
insl
xor
and
push
push
shr
jmp
inc
pop
push
xchg
nop
cmp
jbe
xor
lcall
add
movl
frstor
add
add
arpl
dec
jl
les
inc
adc
pusha
or
in
push
dec
xor
mov
sub
filds
in
pop
and
out
push
test
xorb
jne
dec
add
or
lds
add
lret
or
loop
and
mov
xor
divl
mov
test
sub
cmp
dec
int3
cs
and
jae
fidivs
or
push
movsb
cmp
jbe
push
mov
sbb
out
and
sbbb
test
and
je
jmp
pop
addr16
pop
push
imul
add
push
cmc
mov
or
mov
and
and
lods
mov
sub
mov
inc
mulb
dec
shlb
mov
insb
cmpsb
or
sbb
in
cmpsb
cmp
push
cld
adcl
sbb
xor
test
xor
inc
test
mov
rol
daa
imul
fstpt
and
pop
addl
shrb
inc
into
es
cmp
inc
xlat
or
jecxz
push
fisttpll
fstl
ja
sub
mov
mov
and
add
inc
aaa
sbb
pop
test
push
lret
pop
shlb
or
inc
pop
inc
mov
scas
pop
pushl
push
xor
adc
pop
scas
or
adc
pop
add
into
sbb
clc
dec
sbbb
sbb
mov
dec
add
aam
ljmp
add
sub
mov
cmp
shll
xchg
add
scas
mov
adc
dec
and
jo
sarb
and
jnp
jmp
push
pop
mov
xor
mov
push
and
mov
or
aam
add
dec
mov
dec
add
sub
and
imul
or
or
les
incl
subl
popa
adc
cmpsb
adcb
rol
sub
push
and
ret
lret
rcr
cmpsl
push
push
push
mov
je
ss
sub
clc
add
jmp
mov
jb
iret
or
je
imul
iret
mov
xor
mov
pop
out
pop
and
push
push
daa
push
pop
sub
test
jb
call
push
xor
sub
mov
in
iret
lods
std
out
fidivl
adc
mov
ret
pop
push
xor
in
lock
xchg
lods
add
mov
movsl
cmp
cmp
fcomps
lea
shl
sbb
xor
mov
mov
rorb
lds
cld
es
sub
sub
stos
ret
lcall
outsb
add
fistl
shll
pop
sar
pop
and
in
xchg
pop
adc
inc
pop
mull
or
cs
lret
int3
shl
enter
sti
es
into
lret
das
sbb
ss
and
loope
pop
stos
pushf
pop
pop
cs
mov
add
scas
xor
std
adc
push
sub
movl
mov
jge
popf
and
popa
mov
xchg
cs
hlt
cwtl
in
adc
xor
sti
mov
xchg
mov
fcmovnbe
push
jb
mov
push
or
sbb
fwait
inc
insb
je
and
lahf
pushf
loopne
lahf
add
cmpb
jne
inc
sub
ret
pop
aad
lcall
outsb
cmp
jne
cmpb
jne
stc
push
enter
cmpb
xor
or
xchg
mov
jno
dec
aad
cmp
push
int
dec
movsl
test
js
push
ret
imul
lds
cwtl
pop
mov
loopne
push
leave
cmp
test
lret
je
mov
jg
imul
arpl
jp
push
clc
lods
sub
and
call
lret
push
repnz
js
cmpw
adc
or
push
or
test
mov
pushf
lret
mov
popf
hlt
jle
in
fnstcw
dec
and
push
sub
iret
mov
shl
test
xor
add
dec
jnp
rcl
cmp
inc
rorb
xchg
add
stc
push
adc
pushf
jecxz
adc
mov
xor
test
movsb
loopne
sub
add
clts
jb
inc
jns
jbe
cs
out
add
inc
inc
scas
je
cld
test
add
or
dec
add
pop
enter
mov
jmp
mov
sub
cmpsb
sbb
jno
or
pop
sub
sti
cmp
xchg
dec
std
adc
clc
mov
jbe
outsb
or
lds
loopne
sti
push
add
mov
dec
and
je
jge
jno
sub
ss
subb
adc
sbb
cli
dec
cmp
hlt
push
das
or
insl
adc
jns
mov
fdivs
rcrl
adc
adc
mov
or
shr
out
and
rol
push
add
inc
sub
or
bound
mov
xor
and
jne
popf
mov
into
mov
push
sbb
jle
mov
and
pop
cmpsb
mov
sbb
dec
std
inc
lods
cmp
adc
push
mov
fcomps
xchg
daa
push
aad
scas
cld
mov
decl
out
leave
add
mov
lds
push
inc
fbstp
lea
and
adcl
push
push
out
and
sbb
pop
shrb
push
pop
int3
mov
add
mov
sbb
enter
daa
ds
mov
mov
xchg
push
jo
sub
sub
sub
cld
addps
inc
mov
ss
in
mov
add
fists
cli
jne
and
inc
add
push
fs
push
movb
pushf
out
loop
test
dec
push
popa
sbb
jle
test
sbb
adc
insl
adc
in
mov
add
cltd
inc
pop
addr16
hlt
cmpsl
sub
pop
jl
jae
push
or
inc
pop
rolb
neg
mov
jno
and
mov
jne
add
loopne
jmp
and
sbb
sarl
sbb
xor
jne
and
fwait
inc
loope
pushf
test
mov
bound
cmp
pop
icebp
enter
mov
xor
cmp
inc
clc
repnz
add
mov
sbb
inc
xor
lcall
popa
in
cmpb
je
cli
fists
add
inc
jmp
dec
cs
inc
push
inc
ja
cwtl
jne
sub
test
loop
jns
sub
jmp
dec
pop
movsb
pop
inc
mov
shll
rorb
push
stos
jno
push
xor
stc
outsl
push
sub
sub
or
inc
sub
lcall
mov
sub
adc
pop
ss
xor
stc
dec
test
les
enter
jns
mov
cltd
push
xchg
add
adc
xor
push
or
cmpl
je
add
add
mov
cmpsl
add
push
movsb
adc
push
sbbb
inc
push
inc
adc
faddp
lret
jne
cmp
xchg
sbb
cmovge
or
or
mov
das
jnp
in
add
dec
pop
xchg
lret
jno
push
je
addr16
adc
adc
add
movsl
daa
pop
mov
mov
fwait
test
jne
sahf
pop
sbb
xchg
aaa
fsubrl
rolb
push
xor
xor
call
jmp
push
loop
stc
cmp
jl
push
xchg
xor
cmp
add
cmp
add
or
sbb
mov
rorb
inc
sbb
or
xorl
sqrtps
pop
imul
sahf
adc
xlat
xor
pusha
cmpb
jno
sbb
xchg
sbb
sar
cmp
push
push
cmp
hlt
test
inc
mull
adc
add
jnp
jae
add
cmpsl
out
arpl
es
xor
test
ljmp
addl
cmp
sub
adc
mov
mov
adc
inc
mov
adc
dec
push
daa
xor
add
pushl
test
add
pop
push
lcall
xor
ljmp
and
pop
sub
push
pop
test
aad
add
push
adc
rol
dec
maskmovq
divl
xor
out
pop
popa
push
push
in
adc
or
mov
lock
cmp
mov
push
push
lea
cwtl
rolb
sar
sbb
sub
xchg
je
outsb
and
shlb
andl
sub
adc
icebp
xchg
xchg
add
dec
jne
sbb
mov
xor
inc
hlt
and
roll
rcll
es
add
sub
push
pop
add
xor
cltd
inc
add
out
rcrb
add
dec
add
pop
test
sbb
mov
add
shll
adc
xor
and
shr
adc
pop
xor
sbb
mov
mov
maxps
jne
sbb
adcl
lret
dec
imul
mov
mov
test
pop
push
lea
lds
push
jge
cwtl
dec
and
jae
pop
jnp
out
push
mov
or
clc
lock
loope
js
mov
and
fwait
or
jb
sub
pushf
ret
add
xchg
lea
xchg
push
xchg
rclb
jb
imul
and
roll
aaa
out
xor
loop
cmp
sete
mov
aaa
jg
outsl
fstpl
dec
enter
addb
scas
or
push
lods
xor
jbe
push
jbe
mov
or
icebp
sub
or
mov
add
adc
stos
add
roll
lcall
int3
lahf
push
push
push
clc
sbb
add
or
clc
adc
call
push
adc
out
loopne
or
insb
push
cs
mov
xor
shr
notl
loopne
mov
adc
add
or
add
and
xchg
xchg
lods
cwtl
movsl
or
js
push
mov
imul
pop
mov
jo
addr16
jl
and
jnp
int3
fistpll
roll
push
lahf
xchg
pop
insb
mov
push
sub
stos
pop
jne
loop
jno
fdivl
aaa
inc
outsl
ret
lret
cmp
imul
xor
mov
inc
out
adc
add
cmp
jae
xor
add
adcb
sub
loope
adc
jae
aam
pusha
sub
ret
inc
imul
pop
pusha
add
adc
fwait
in
ds
cmp
lock
sub
inc
xlat
jge
imul
notl
cmp
xor
scas
inc
add
and
sarl
lds
jle
fs
movl
and
pop
orl
addl
or
cs
xor
cmp
add
fs
imul
fmul
push
sbb
call
jl
mov
call
hlt
clc
add
out
push
cmp
or
imul
add
add
and
in
hlt
add
pop
sub
movsb
ret
hlt
lods
and
js
xor
pop
out
sbbb
push
outsl
pop
mov
cmp
add
dec
movsb
fdivrs
jne
fld
adc
pop
jne
jecxz
mov
scas
mov
ja
mov
es
imulb
adc
jmp
xchg
sub
je
or
and
and
jmp
mov
mov
lret
or
shr
int
push
pop
xor
cmp
mov
pop
xor
push
les
rclb
in
pusha
push
int3
dec
and
mov
or
jecxz
add
dec
mov
mov
call
jne
sbb
inc
mov
in
sahf
adc
ja
add
cmp
jge
mov
mov
pop
mov
dec
loop
mov
jmp
mov
gs
mov
sbb
push
push
addl
sbb
xchg
lret
and
add
xor
sub
adc
arpl
add
inc
scas
test
push
or
adc
push
mov
mov
dec
push
xchg
pop
mov
mov
push
adc
dec
cld
and
mov
jne
add
mov
loopne
fcomps
sbb
negl
xor
and
pop
hlt
push
push
mov
xchg
dec
sarl
std
rcll
cmpsl
movsb
mov
je
sub
mov
cmp
cmp
test
in
lea
push
adc
push
inc
adc
fsubs
ret
mov
push
pop
and
add
lcall
cmpsb
out
mov
mov
imul
add
sub
inc
inc
andl
or
mov
jl
jmp
sbb
fsubl
push
add
sbbb
xchg
roll
sbbl
dec
cs
fistpl
push
loopne
mov
movsb
adc
scas
imul
cmp
mov
jne
sub
inc
cmp
ljmp
or
cmp
divb
add
jno
pop
testb
outsl
andl
inc
mov
int
and
xor
push
inc
lcall
pop
cmp
je
inc
pop
and
test
push
lock
mov
ljmp
outsb
in
iret
inc
add
popa
lods
add
mov
inc
cmpb
pop
sahf
push
jno
jo
aaa
je
loopne
inc
mov
fisttpll
pop
sahf
mov
adc
shrl
daa
dec
in
xchg
mov
or
fadd
dec
add
mov
or
in
lds
add
push
dec
push
mov
dec
adc
clc
pcmpeqd
and
dec
cmp
jmp
fsubs
xchg
inc
daa
subl
mov
adc
call
mov
mov
push
mov
mov
adc
sub
xor
loopne
push
dec
mov
xchg
sub
out
mov
jne
cmp
cld
or
xchg
add
inc
addl
mov
xor
add
and
out
outsl
cmp
inc
jmp
dec
jmp
xor
popa
mov
aas
inc
inc
call
in
lret
inc
loope
sbb
inc
pop
je
pop
es
push
add
add
dec
inc
and
xor
mov
fcoms
sti
mov
shr
push
test
pop
dec
icebp
xchg
pop
jl
or
shrl
je
call
pop
fcomps
leave
or
pop
cmpb
mov
xor
inc
pop
cld
mov
add
adc
leave
inc
and
or
sbbb
cmc
sbb
dec
das
fstpl
adc
sbb
jg
dec
mov
mov
adc
mov
mov
sbb
and
lret
adc
jge
sbb
bound
lret
mov
aas
jae
hlt
daa
or
inc
dec
sub
stos
and
lea
inc
ss
ret
test
and
sub
adc
loopne
adc
mov
push
clc
or
add
popf
push
mull
dec
push
jg
or
xchg
loop
mov
cmpsb
and
dec
cmp
and
js
in
scas
xchg
sahf
add
xor
add
cmp
or
push
std
xor
jg
mov
pop
nop
inc
inc
push
xchg
fmull
jne
repnz
cltd
add
add
push
sar
pusha
or
mov
jmp
das
aad
adc
add
inc
loopne
push
add
jl
dec
push
test
mov
pop
add
ss
or
ret
jmp
dec
add
or
xor
inc
jmp
andb
pop
and
xchg
or
cmp
imulb
out
int
pusha
sub
add
mov
jmp
loop
and
xor
jle
mov
pushf
aam
inc
or
dec
fiaddl
dec
loopne
enter
les
loope
lock
fwait
mov
push
fwait
movsb
or
add
lcall
cmp
jo
xchg
shll
ret
insl
js
into
pusha
push
mov
sub
cmp
jb
sahf
mov
push
jl
mov
sbb
insl
pop
pop
xor
jb
dec
loopne
cmp
inc
xor
lea
and
mov
js
mov
add
adc
sbb
cmp
jg
popf
adc
cmp
mov
bound
xadd
mov
shrb
push
mov
hlt
or
jne
push
pop
adc
jns
dec
rolb
jbe
inc
add
sarb
inc
or
inc
adcl
lods
nop
je
xchg
repz
or
addl
dec
add
shrb
inc
in
jmp
xchg
cmpl
or
push
push
inc
clc
or
xor
in
push
aaa
xor
add
jne
sahf
fwait
andl
jne
or
push
cmp
pushf
je
and
or
add
mov
loope
add
mov
adc
notl
mov
inc
push
add
push
bound
ficoms
push
push
mov
test
inc
mov
ret
fdivrl
push
xchg
rcll
out
mov
sbb
mov
test
je
push
mov
shlb
dec
sub
xor
cmpl
pop
dec
lock
and
sub
and
fbld
cs
test
adc
cmp
cltd
add
not
push
rorl
popa
sbb
mov
lods
or
adc
adc
nop
add
je
fidivl
adc
adc
push
and
mov
xchg
mov
mov
mov
or
mov
shr
imul
add
add
push
sub
push
dec
or
shr
adc
shll
push
lea
adc
and
fs
outsl
xchg
and
jo
je
cli
add
cmp
jbe
push
rcl
hlt
aas
pop
mov
dec
lock
sub
addb
sahf
sub
lock
lea
lock
add
shll
pop
mov
and
and
add
mov
fs
loopne
pushf
mov
jns
push
pop
add
push
imul
add
dec
rcrb
push
cmp
push
or
shll
pop
lods
jecxz
sbb
or
sub
jge
add
and
sti
add
mov
pop
cmp
jbe
mov
mov
imul
cmpsb
loopne
mov
xorb
mov
fwait
lret
cmp
shr
and
push
jg
dec
add
sbb
andl
jle
xchg
cltd
mov
pop
add
test
pop
cld
jmp
pop
jmp
mov
cs
xchg
shll
inc
fwait
add
pop
dec
or
adc
mov
movaps
mov
mov
dec
enter
lods
push
lock
call
inc
dec
or
jmp
jns
jbe
dec
adc
pop
pop
jl
lea
adc
xor
mov
cmp
call
lahf
lcall
xor
rclb
push
scas
mov
push
cmpsb
aas
gs
push
or
nop
lock
mov
dec
pushf
cmp
dec
inc
adc
or
and
pushl
push
xchg
mov
int3
lods
mov
adc
das
fisubrl
push
loopne
int
adc
fildll
enter
dec
js
sub
pushf
sbb
cmp
or
cmp
mov
inc
frstor
xor
push
and
mov
mov
addr16
dec
outsl
push
out
or
mov
imul
cmpsl
xchg
adc
les
and
mov
call
or
inc
adc
dec
rcrb
sbb
push
andb
out
or
adc
dec
fildl
jmp
orl
jp,pt
add
lds
and
std
mov
jo
test
jno
xchg
add
inc
jl
popf
push
dec
stc
mov
imul
pop
pusha
movsb
decb
pop
mov
add
cmp
frstor
dec
jne
pop
sti
add
out
sbb
sub
enter
repnz
pop
sbb
rorb
push
cli
ja
mov
sub
shr
adc
dec
out
or
add
lea
fisttpll
adc
out
fiadds
lock
jne
xchg
xchg
sub
sbb
aam
lods
or
xchg
shlb
insb
dec
outsb
mov
sub
sub
fs
inc
cli
push
jnp
jae
sahf
pop
mov
mov
or
shlb
jbe
js
lds
not
and
add
add
fwait
or
sub
sub
mov
pop
shr
adc
dec
cld
push
dec
adc
add
icebp
cmp
ss
add
mov
test
outsb
and
orb
mov
push
mov
or
test
cli
pop
mov
imul
test
nop
es
add
das
movsb
add
nop
dec
or
adc
push
jns
addr16
fs
add
mov
gs
adc
pushf
sar
dec
mov
mov
fstpl
lea
push
scas
enter
adc
jle
imul
shll
lcall
adc
js
jmp
jmp
aaa
js
mov
imul
imul
xor
negb
pop
mov
and
clc
cmp
jl
scas
adc
das
mov
jnp
xchg
sub
pop
xor
inc
add
int3
dec
dec
cmpl
pop
notb
xchg
add
fistpll
xor
push
jl
cmp
dec
mov
loopne
cmp
mov
mov
inc
pop
sbb
fbstp
ja
add
cmp
push
push
out
sbb
or
dec
lea
mov
pop
ret
popf
and
jbe
mov
mov
push
cmp
sub
bswap
mov
push
cmp
rdmsr
sub
xchg
jns
dec
sbb
cmp
add
and
jecxz
test
shlb
add
js
and
inc
cmp
push
push
and
mov
call
out
sbbl
or
add
imulb
lock
or
and
and
or
jne
add
adc
andb
jb
aas
pop
int3
mov
sbb
jne
leave
jae
cmpsb
jmp
jnp
add
xor
fstp
or
arpl
xchg
mov
mov
and
or
push
sub
pop
lcall
adc
sbb
add
mov
and
xchg
aaa
fdiv
ret
mov
dec
pop
iret
jne
or
jno
mov
add
push
sbb
mov
rolb
lock
out
mov
ljmp
into
jne
xor
and
out
outsb
leave
inc
test
inc
push
pushf
mov
sub
push
and
icebp
sbb
sub
and
call
dec
pop
xchg
sbb
jmp
push
sbb
fisttps
call
mov
decb
jne
jmp
repnz
jmp
push
out
fnstcw
mov
out
xor
jne
dec
push
and
push
clc
into
xor
dec
sub
lea
js,pn
imul
pop
sbb
cmp
hlt
and
cmc
inc
lock
cmp
or
dec
sarl
inc
or
xchg
mov
push
mov
or
push
jge
xor
adc
insl
sbb
popa
cmc
lods
scas
and
lods
test
lea
xchg
out
push
ds
sbb
sbb
adcb
pop
mov
and
inc
add
adc
add
or
and
arpl
cmpsb
mov
sub
dec
and
xor
popa
pop
cmp
mov
popf
add
nop
outsb
mov
and
addb
mov
xorb
dec
sbb
insb
sbb
add
add
xchg
sarb
pop
xor
jg
push
adc
jne
lea
and
xor
add
sub
sbb
sbb
out
jae
sbb
sbb
pusha
ss
ret
cld
fs
cmc
jne
push
jbe
leave
enter
push
incb
lods
rcrl
adc
mov
sbb
sbb
mov
pop
clc
stc
xchg
popa
push
mov
inc
and
and
pop
fisubl
frstor
jl
mov
mov
add
outsb
iret
mov
cld
sbb
subb
fidivs
cmp
lret
and
mov
and
aam
inc
jae,pn
inc
inc
xchg
nop
cs
loopne
inc
mov
clc
imul
mov
arpl
mov
push
adc
int3
testb
push
lea
testb
je
je
nop
mov
jnp
sbb
in
sub
mov
cmp
je
cmp
mov
gs
pushf
add
and
jle
mov
ljmp
mov
and
cmp
sahf
lock
jp
cmpl
cmpsl
lea
or
or
lock
fldt
cmp
pop
push
call
add
test
hlt
add
pop
add
adc
lahf
out
enter
aam
adc
jns
adc
enter
pushl
dec
in
pusha
pop
xchg
cwtl
out
inc
outsl
out
jnp
or
movsl
add
push
adcl
jmp
scas
or
xor
out
cmp
mov
test
stc
icebp
adc
and
dec
xor
cmpsl
and
inc
sbb
das
adc
lods
and
inc
movsl
rcrl
pusha
jle
les
sbb
sub
inc
loopne
out
adcl
cmp
scas
add
and
pop
inc
dec
xor
mov
cmp
addb
ret
or
adc
push
jl
push
and
jl
mov
or
add
add
and
mov
pop
out
loope
sub
and
inc
aas
add
dec
pop
xorb
das
inc
sbb
inc
pop
addr16
loopne
xor
fs
jle
sbb
pushf
and
pop
xor
jg
jo
roll
inc
pop
or
pop
jg
jl
loop
hlt
nop
add
cmp
mov
mov
sbb
mov
cmp
repnz
call
scas
add
ret
fs
out
mov
mov
fsubrs
loope
in
int3
add
je
pop
mov
loop
cmp
test
sub
inc
clc
fcomp
xchg
mov
mov
mov
aaa
mov
nop
cmpsl
mov
mov
push
fiadds
add
pop
inc
popf
adc
xchg
movsb
outsl
cmp
icebp
jo
add
cmp
dec
sub
int
nop
xor
jae
sbb
mov
dec
je
xor
inc
das
lea
or
out
push
or
sti
mov
pusha
in
aam
or
sbb
incl
xchg
popa
sbb
addr16
mov
sbb
scas
rcrb
rolb
add
inc
cmpl
inc
mov
pop
cmp
int3
push
add
ret
push
dec
jmp
mov
enter
inc
add
in
dec
mov
sub
push
or
dec
inc
add
or
sub
mov
add
lcall
adc
mov
pushl
add
ret
repnz
and
push
push
xor
sahf
jo
repz
xor
iret
std
sbb
sbb
mov
je
mov
cltd
aam
push
andb
adc
jne
xlat
mov
jmp
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
add
mov
add
inc
or
pop
or
popa
pop
iret
es
inc
daa
ret
in
push
out
fisubs
jg
fmuls
xchg
jmp
jno
pcmpeqb
in
pop
adc
adc
into
push
xchg
mov
jne
push
loopne
add
mov
jno
push
or
bound
das
jmp
xor
pop
add
inc
pop
pop
adc
jp
adc
adc
sbb
xchg
add
jne
sbb
je
rcll
dec
push
xchg
pop
enter
insb
add
cld
cli
arpl
mov
sahf
inc
repz
sbb
sbbb
pop
pop
aad
cmp
mov
dec
in
cld
filds
add
daa
add
sbb
inc
mov
push
lret
dec
cmp
jmp
add
ss
out
inc
imul
outsl
dec
leave
ret
inc
and
jae
push
cmp
or
loope
jl
fdivrl
sahf
movsb
push
lds
lods
adc
or
mov
pop
lock
jne
sub
jmp
add
lret
jo
jns
in
jb
sbb
andl
and
push
mov
push
add
mov
dec
rorb
jno
cmp
enter
fwait
out
mov
icebp
cmp
scas
mov
xor
mov
mov
adc
mov
or
xor
cmc
rcll
cmp
pushf
call
or
xchg
xlat
sti
mov
sbb
jne
jmp
pop
xlat
in
rcll
pop
ss
jl
sbb
push
lods
mov
ret
fisttpll
jle
aas
pop
add
in
push
psubsb
jge
or
push
pop
inc
loope
adc
les
cmp
in
rorb
jg
aam
and
xchg
add
call
add
xchg
sbb
sbb
pop
cmp
and
dec
inc
push
or
push
insb
lock
and
addr16
xchg
sbb
push
jo
nop
dec
jg
repnz
fisttps
call
and
and
push
lcall
add
sbb
ret
add
dec
jg
adc
orl
call
lret
pop
hlt
sarb
ret
loopne
push
xchg
cmp
xlat
or
shrb
ljmp
sbbb
popa
icebp
cmpsb
or
cmp
jne
clc
push
pop
std
jb
incl
mov
pop
mov
out
loop
pop
or
adc
test
push
ljmp
and
or
or
rorb
aam
add
jbe
inc
lret
pop
stos
jp
mov
push
mov
add
cs
cmc
xchg
xor
pop
mov
dec
inc
jns
je
mov
mov
mov
xlat
je
cmp
pop
repnz
jb
testb
sub
cmc
pop
mov
int3
xchg
test
ljmp
mov
push
lahf
popf
push
and
jb
je
lcall
cmpl
sub
pop
adc
daa
mov
and
sbbb
enter
inc
in
push
out
sbb
dec
lret
push
jl
call
call
and
test
sub
or
imul
fwait
inc
sbb
sbb
push
sbb
cmp
outsb
inc
push
shlb
fstpl
xchg
pop
jmp
inc
les
inc
pop
pop
cwtl
add
rcr
fstl
or
push
lods
or
pusha
jl
push
add
pop
or
in
aas
adc
into
and
sub
sbb
pop
outsb
adc
out
je
push
fildl
cli
adc
inc
sti
xor
lea
or
jnp
mov
int3
mov
fcomi
dec
mov
mov
popl
mov
repnz
and
mov
dec
push
hlt
xorl
or
push
aaa
push
ljmp
fadds
mov
mov
dec
and
add
sub
or
jl
push
loop
mov
xor
shrb
call
pop
out
ljmp
jp
cmp
push
mov
leave
xor
out
imul
sbb
mov
lcall
rcrl
xchg
jo
add
adc
or
or
lock
sbb
adc
add
scas
jne
imul
dec
mov
or
push
in
test
lock
mov
pop
xchg
test
cmp
sub
adc
adc
mov
xchg
mov
sub
outsb
shlb
mov
shll
enter
inc
out
lret
and
mov
xchg
dec
sub
push
inc
mov
in
adc
xchg
hlt
xchg
xchg
loopne
movsl
xor
adc
push
mov
or
sub
mov
fucomp
push
jle
mov
cmp
mov
and
or
aad
lock
or
mov
das
inc
and
xchg
dec
pop
es
inc
sub
or
mov
xchg
int3
lock
xchg
or
xchg
xor
jle
sub
inc
fcoms
fsubrs
or
mov
xor
add
mov
xor
push
xor
test
popa
xor
movsl
call
cmp
cmc
mov
xor
xor
sbb
xlat
adc
and
outsb
push
or
sbb
mov
les
mov
sbbl
cmp
mov
lods
mov
push
xor
in
sbb
dec
mov
jb
jns
aaa
ljmp
sbbl
sub
dec
gs
cmp
and
jae
push
sahf
dec
ss
add
rcl
pop
and
test
leave
inc
and
adc
jp
add
lea
cmp
pop
mov
cmp
movsb
jb
cmp
loope
and
and
sbb
inc
out
mov
sbb
jb
test
adc
dec
cmpsl
mov
mov
mov
pop
adc
nop
dec
pop
inc
xor
das
nop
inc
xchg
push
or
pushf
pop
pop
xchg
repz
xor
sbb
addr16
xor
aaa
mov
adc
lds
in
in
das
mov
inc
dec
movsb
imul
loop
test
in
dec
ds
add
dec
add
jp
push
sbb
aas
dec
data16
adc
xor
push
inc
int
repz
sub
and
mov
pushf
pushf
nop
enter
nop
nop
pushf
sbb
xor
xor
add
mov
pop
pop
out
sar
or
lea
je
inc
push
or
or
add
pop
icebp
sbb
push
and
sahf
out
jle
sbb
dec
push
cmp
mov
popa
cmpsb
shr
pxor
jmp
xchg
out
xlat
or
inc
adc
and
pop
test
pusha
jo
popf
add
or
jne
xchg
fs
dec
add
lods
adc
fsubl
push
cmpsb
cli
sub
aas
jmp
push
loop
or
cmp
test
lret
mov
cmpsb
gs
xchg
in
push
add
and
mov
add
rep
ss
shlb
lods
mov
sub
std
lods
lock
push
add
push
xchg
out
and
jp
imul
jae
or
data16
scas
jmp
inc
sub
add
mov
mov
sbb
inc
sbb
pop
inc
lcall
push
pushf
pop
mov
sbb
fbld
sub
je
push
popf
add
mov
cmc
cmp
and
data16
pop
shr
clc
xchg
test
sbb
or
sub
mov
popa
sbb
lea
pop
ret
sub
xchg
movsb
sbb
stos
jl
loope
dec
adc
fcos
lret
je
test
je
sub
fcoms
je
adc
or
scas
shl
lret
std
add
xchg
loop
xor
iret
xor
jbe
add
lret
and
rolb
push
add
out
cmp
mov
inc
cld
mov
js
adc
cli
out
cmp
je
adc
jle
cmpsl
lea
and
faddl
aam
xchg
inc
ficomps
outsb
or
cld
dec
mov
lods
add
sub
sbb
mov
in
sbb
push
mov
out
xor
es
mov
pop
shrb
and
xchg
inc
sbbb
leave
call
scas
mov
pop
out
add
movl
popa
pop
or
or
inc
cmc
mov
push
imul
add
adc
invd
into
mov
inc
push
pop
push
push
inc
mov
shrl
fcmovne
leave
xor
shl
adc
or
pusha
out
outsl
push
jbe
dec
sub
sbb
shl
loop
or
or
rorl
pop
pop
mov
imul
add
mov
les
fs
jmp
inc
add
repnz
mov
cmp
add
inc
wbinvd
push
pop
dec
or
sub
mov
mov
inc
dec
adc
mov
mov
inc
test
cmp
andl
cmpl
imul
adc
inc
cs
or
xchg
stc
sbb
inc
xor
mov
jg
call
dec
cmpb
je
mov
cmp
pop
jne
dec
subb
mov
inc
idivb
add
hlt
jg
fldz
call
test
jp
in
add
push
aad
mov
sbb
sub
cmp
imul
rcrb
add
cld
adcb
or
inc
add
in
test
aaa
insl
lods
inc
es
sbb
or
mov
push
push
add
fwait
adc
insl
jns
test
sbb
cmp
xor
sbbb
and
test
sub
jo
test
jg
cmp
imul
sbb
push
xchg
dec
jp
sarb
dec
dec
sub
call
les
inc
stos
mov
pop
fcompl
inc
ss
setg
push
cmp
ljmp
push
faddl
sbb
mov
mov
xor
mov
lcall
xchg
xor
test
or
pusha
sbb
or
lock
ret
push
xchg
or
add
mov
and
lods
adc
dec
add
ja
sub
cs
jns
mov
es
jnp
add
push
add
mov
push
jecxz
xchg
lret
add
testb
enter
xorb
add
rcrl
dec
adc
pop
pop
adc
mov
mov
mov
and
filds
jno
insb
or
insb
jl
sti
and
and
loopne
shrb
mov
loope
clc
fndisi(8087
inc
sar
enter
aam
sub
adc
out
cmp
or
sub
xor
shlb
enter
mov
pop
rcrl
aad
inc
dec
popa
push
lock
mov
push
pop
dec
call
sbb
repnz
xchg
add
and
fcoml
test
cld
xor
and
and
js
sub
in
arpl
call
pop
jo
and
call
inc
inc
or
fcoml
and
add
popf
pop
dec
add
or
mov
fisubs
lret
push
shll
pop
nop
rcl
or
inc
out
add
enter
pop
cli
sbb
ss
add
sbb
negl
rcrl
add
or
push
add
push
xor
jmp
xchg
inc
enter
dec
and
add
pop
jle
add
sbb
dec
add
je
cmp
rcr
aam
jo
andb
adc
sub
or
je
and
push
dec
andb
scas
faddl
fistpl
sub
loopne
add
jg
mov
daa
xor
or
jne
pop
cmp
xor
cmp
adc
test
iret
ret
jmp
out
jmp
xor
adc
sub
jge
adc
pusha
dec
xor
or
mov
ret
ja
mov
mov
in
addb
xchg
push
and
test
mov
and
clc
shrb
loop
into
jb
data16
push
les
es
adc
sbbl
insl
cld
add
dec
shrd
push
pushf
int3
inc
or
cmp
push
pop
ss
jl
cmpsl
clc
mov
xor
mov
jp
pushfw
stc
inc
add
dec
jmp
ja,pn
add
mov
pop
add
rorb
roll
call
aaa
sbb
mov
push
lsl
outsb
or
sbb
xchg
bound
jo
fidivs
jne
inc
out
and
pop
and
sub
sbb
js
jg
mov
in
push
sub
or
inc
adc
neg
cmp
mov
lock
mov
mov
push
test
add
incb
shll
aad
push
jg
lods
jb
xchg
imul
dec
dec
inc
dec
pop
or
pusha
and
jb
or
or
pop
daa
add
mov
in
cmpsb
stc
push
dec
adc
sub
fwait
cmpps
scas
and
inc
dec
mov
xor
mov
ss
loop
add
test
call
or
add
mull
sub
and
or
or
push
loopne
mov
test
je
cmp
jge
mov
jne
fmull
cmpsb
repnz
popa
push
add
adcb
pop
xor
mov
rolb
ficompl
mov
or
xchg
mov
pusha
test
jbe
push
stc
jp
iret
cmp
and
shll
shrl
jne
xor
xchg
sbb
push
and
push
and
lret
jbe
push
dec
movsl
xchg
addl
ret
inc
movsb
mov
loopne
or
dec
push
push
insl
mov
pop
insl
cmp
lea
pop
cld
cld
jl
outsb
sub
outsl
adc
or
mov
sbb
loop
mov
mov
sbb
jns
das
nop
call
clc
gs
test
inc
je
data16
aad
add
popf
and
mov
popa
je
inc
je
dec
lods
in
in
xlat
jmp
xor
mov
dec
lea
and
mov
fisttpl
or
and
lret
dec
xor
lret
mov
pop
fldl
inc
add
pop
adc
call
adc
divb
fmull
insl
push
pop
clc
fstps
or
jecxz
icebp
fs
shlb
aas
adc
or
shrb
dec
rol
ret
mov
pusha
add
mov
or
add
or
push
add
fsubl
loop
test
and
mov
gs
sbb
sbb
sub
movsb
jle
sbb
ljmp
jns
jo
ret
inc
call
add
pop
out
or
fisubrs
push
jl
js
leave
xchg
mov
hlt
into
pop
mov
jl
popa
cmpb
xor
xlat
mov
adc
sub
pop
mov
divb
into
sub
fcompl
rcll
sub
push
lock
pop
dec
and
push
sbb
push
ret
push
push
sub
xchg
cmp
inc
cmp
push
mov
push
gs
xchg
mov
loope
andl
test
rclb
js
pop
movsl
and
sti
mov
adc
pop
sbb
mov
fildl
ret
sbb
pop
jb
iret
sbb
js
mov
test
or
lret
std
stos
adc
lds
mov
dec
lods
mov
or
or
aas
push
fildll
adc
jmp
pushf
aam
dec
jp
cmp
inc
out
test
imul
mov
mov
push
mov
cmp
outsl
pop
jne
xchg
sbb
jmp
rolb
mov
push
jmp
xor
andl
sbb
or
add
push
xchg
daa
repnz
mov
loop
xorps
outsl
les
cmp
lods
sbb
subb
sbb
in
insl
or
inc
add
push
push
xchg
mov
or
addr16
sbb
xor
dec
dec
pop
mov
js
fists
mov
pop
mov
rorb
push
dec
adcl
mov
mov
pusha
fsubrs
enter
or
and
sub
fwait
pop
mov
fmul
and
xchg
ret
cmp
sbb
mov
loope
mov
les
insl
and
sti
and
pop
inc
lgs
adc
pop
and
xor
or
and
ret
andl
mov
xchg
fldl
mov
sti
xor
lds
xlat
add
cmpsl
sub
sti
push
jo
je
outsl
inc
adc
add
adc
or
or
sbb
fiaddl
mov
adc
or
xor
jo
mov
aaa
push
jne
push
sbb
sbb
xchg
push
push
in
push
pop
mulb
adc
inc
pop
pop
xor
cmp
and
inc
scas
pop
into
fiadds
xchg
push
jne
mov
adc
dec
add
and
pop
adc
adc
fs
or
push
rcrl
add
dec
jp
or
pop
sub
add
in
popa
in
sbb
xor
repz
daa
insl
icebp
test
jle
push
pop
jp
xchg
loopne
in
outsb
adc
fucomp
push
fmuls
cmp
xchg
or
roll
add
hlt
outsl
js
aaa
and
add
sar
mov
dec
push
xchg
rcll
pushf
dec
or
sbb
or
jbe
loop
cld
movsb
mov
sub
xor
and
ljmp
pop
add
add
sub
dec
xchg
and
rcll
cmp
jge
xchg
pop
add
mov
gs
inc
push
sub
sub
sub
add
dec
ja
sbb
dec
insb
or
gs
call
inc
cmp
cmpsb
addr16
add
pop
xor
mov
mov
inc
cmpb
idivl
pop
add
movsl
sbb
js
xchg
adc
or
pop
push
dec
stos
ds
pop
mov
sbb
jnp
dec
add
inc
mov
mov
cmp
mov
push
xchg
pop
add
movl
xor
out
add
mov
cmpb
nop
or
andb
icebp
stos
mov
pop
mov
ret
pop
sbb
inc
in
or
bound
push
adc
cmp
push
inc
mov
pop
sub
pop
jl
ret
data16
movb
jmp
push
inc
pop
aas
out
jmp
decl
and
mov
int
ljmp
ss
adc
out
aas
cmp
je
rcr
push
mov
adc
mov
fdivs
mov
xor
add
sbbb
out
mov
loopne
addb
jl
inc
or
add
mov
sbb
hlt
add
mov
ret
adc
add
dec
mov
test
inc
xor
andl
scas
lock
add
adc
jb
dec
jbe
adc
or
mov
adc
test
mov
or
add
fsubr
inc
notb
inc
xchg
jo
in
jmp
sub
jne
es
sub
adc
mov
xchg
xor
cwtl
inc
mov
sbb
and
mov
cmp
sahf
xor
lea
test
dec
in
lcall
rclb
xchg
ds
ljmp
ret
ds
pop
imul
push
xor
sub
pop
dec
je
subw
int3
mov
push
stc
xor
sbb
jg
adc
pcmpgtd
lcall
loopne
add
push
mov
jecxz
xor
or
jge
xor
and
push
add
pusha
nop
lret
adc
sub
push
lods
push
shlb
pop
clc
adc
cmpsb
leave
cmp
outsb
push
jmp
jns
in
lods
pop
pop
test
mov
or
sbb
push
jmp
and
push
push
add
add
mov
dec
sub
push
xlat
cmp
pop
sbb
gs
pop
push
xor
test
pop
dec
push
sub
mov
inc
and
fdivs
outsl
leave
inc
test
mov
jl
jno
sub
enter
aam
or
gs
pop
sbb
inc
orl
jne
sub
mov
xchg
sub
lret
rol
push
in
add
xor
adc
sbb
lods
pop
das
adc
es
test
or
cmp
pop
add
ret
cmp
add
shlb
push
push
cmp
xchg
xor
cmpsl
std
popl
mov
add
sar
mov
or
sti
add
add
repnz
mov
and
inc
outsl
add
iret
xchg
cmc
adc
mov
ljmp
push
or
nop
xchg
rorb
push
inc
insb
or
shlb
and
mov
add
pop
mov
mov
fisttpll
pusha
pop
dec
sub
xchg
stos
popf
push
ds
popf
pop
lea
mov
popl
inc
ljmp
dec
js
inc
mov
mov
jae
push
jmp
ljmp
mov
cmp
xor
push
hlt
mov
lods
dec
aam
cmc
loop
hlt
push
jmp
pop
pop
enter
cmp
out
lret
add
loopne
fdivs
push
mov
dec
in
imul
rcll
inc
call
jmp
jne
xchg
cltd
enter
cmp
xor
xorb
lea
mov
dec
adc
pop
rcrb
xor
ljmp
movsb
loope
dec
jl
xchg
sub
sub
xor
sarl
cmp
test
mov
add
ss
push
test
sub
add
add
cmp
mov
out
mov
cmp
jne
movzwl
je
sbb
sarl
out
inc
jmp
push
push
jmp
mov
pop
cmp
push
lock
pusha
pop
sahf
stos
mov
pop
cmp
add
fildll
stc
cmp
mov
inc
mov
enter
sbb
dec
add
xchg
sbbb
adc
lret
jecxz
iret
dec
and
inc
xchg
or
sub
sub
mov
xlat
mov
cmp
mov
inc
cmp
cmp
pop
mov
or
adc
mov
adc
mov
sub
and
mov
inc
pop
inc
testl
and
daa
lock
mov
mov
call
xor
xor
pop
jl
movsl
dec
add
add
cmp
cmp
rcrb
adc
lods
push
orl
xlat
push
or
inc
inc
sbb
or
and
mov
xchg
push
and
pop
add
or
mov
out
jl
xchg
dec
dec
stc
jnp
imul
add
mov
into
xchg
push
xchg
sub
and
xor
addb
test
mov
mov
push
or
xor
jmp
scas
int3
adc
daa
mov
fs
push
loopne
imul
inc
jo
inc
frstor
adc
xor
addb
jo
lret
jmp
push
lock
sti
fidivs
stos
mov
lea
push
push
roll
xor
adc
rorl
bound
ljmp
into
cmp
sub
fidivrs
sbb
xor
filds
seta
xor
imul
xor
pop
icebp
or
add
xor
cmp
pop
test
cs
adc
rcrl
jno
clc
adc
aad
fwait
rolb
add
xchg
sahf
dec
lea
push
dec
cmp
mov
mov
add
mov
testb
inc
neg
push
pop
or
js
mov
mov
fidivrl
sbb
add
add
push
or
dec
inc
jmp
inc
inc
sub
daa
das
sbb
je
jg
std
pop
test
out
pop
data16
es
ljmp
mov
fisttpl
in
loop
dec
push
es
or
add
mov
add
cmp
xchg
lea
pop
and
mov
sbb
leave
and
sbb
cmp
pop
cmp
mov
adc
cmp
cmp
sbb
dec
rcrb
cmp
push
or
aaa
push
pop
cld
fbld
pop
and
mov
xor
movsb
jbe
cmp
or
leave
and
mov
xchg
lods
dec
int3
add
sub
cs
dec
outsl
inc
mov
mov
xor
in
pop
or
sbb
lock
xor
rcll
pop
or
mov
ret
dec
inc
shrb
jg
ds
imul
inc
insb
push
ss
dec
ja
test
rorb
dec
mov
icebp
test
ja
adc
pusha
fistl
subb
mov
push
imul
push
push
mov
sbbl
push
sub
dec
xor
cltd
or
or
pop
cli
push
adc
cmp
push
subb
leave
sub
jle
jl
dec
je
inc
mov
hlt
sbb
and
push
xchg
jns
or
mov
inc
jne
jmp
ds
xlat
aaa
movdqa
push
dec
adc
push
and
out
out
dec
push
pop
and
lahf
out
outsl
inc
or
jbe
jle
into
lahf
out
mov
outsl
ja
jo
mov
shr
and
mov
call
hlt
mov
dec
xchg
rol
out
dec
add
push
and
sub
jb
mov
adc
mov
aam
pusha
stos
outsb
dec
lret
jg
xchg
je
add
clc
and
jo
fldcw
mov
out
adc
sub
aad
lcall
repz
subl
xor
lock
in
in
jne
or
xchg
out
and
sub
jo
pop
push
push
ret
fucomip
sbb
mov
add
sbb
add
pop
in
test
in
xchg
or
or
sub
xor
pop
imul
or
xor
or
inc
push
dec
push
pop
lea
js
fcoms
push
les
je
xchg
lcall
mov
push
inc
clc
xlat
cmp
jo
enter
test
or
test
in
out
add
add
mov
and
and
push
and
mov
add
out
inc
loopne
inc
cmp
andl
addl
fs
lret
xchg
add
cmp
push
add
add
out
inc
and
or
inc
mov
or
or
insl
and
std
inc
inc
mov
inc
sbb
push
jne
push
in
adc
in
sar
dec
or
pop
das
add
mov
push
xchg
cmc
xchg
xor
push
sbb
test
jne
jo
mov
roll
shrb
ljmp
shlb
sub
mov
and
mov
mov
inc
add
pop
add
add
inc
push
lret
cmp
pusha
js
sbb
cmp
outsl
cwtl
inc
jns
test
cmpl
and
or
add
cltd
dec
aas
loop
cmp
inc
loope
adc
push
cmp
sbb
mov
mov
adc
adc
or
push
dec
out
cmp
cmp
inc
jmp
inc
jge
add
pop
inc
xor
or
jle
cmpb
andb
mov
pop
xchg
rcrb
pop
jmp
pop
shrl
cmp
and
pop
sub
loopne
inc
imul
mov
jmp
mov
cmp
mov
sbb
and
hlt
jne
sub
je
and
add
lods
xchg
je
arpl
xor
or
push
jne
sahf
xchg
je
loope
mov
ret
dec
push
jp
or
jbe
dec
cmpb
jne
and
popf
adc
push
iret
pop
push
sbb
xchg
rcll
sbb
add
hlt
outsl
xor
dec
cmpsl
xchg
push
rep
adc
loopne
fsubl
adc
pop
mov
mov
mov
in
add
sub
push
push
adc
jbe
rolb
jecxz
pop
lcall
jp
jne
lahf
push
mov
clc
mov
xchg
and
imul
sbb
cmp
push
inc
fsub
xor
jle
test
in
int
pop
lcall
fcomps
sbb
cmp
popa
loope
test
insl
loope
in
xchg
jl
pop
dec
stc
and
push
das
sbbb
xchg
mov
jle
shr
jbe
lods
out
mov
inc
fdivrl
fiaddl
sahf
js
and
or
adc
inc
inc
cmp
fistpl
test
jge
push
push
mov
int
das
or
fmull
push
jo
ffree
xor
fcompl
inc
push
add
push
ficoms
outsl
adcb
push
mov
push
push
push
mov
pop
add
shll
lea
add
mov
inc
push
mov
and
mov
sbb
mov
sbb
mov
push
or
ljmp
pop
inc
mov
aaa
xchg
or
lea
aas
push
int3
xchg
mov
jle
js
jbe
insl
inc
ds
or
dec
jle
adc
in
imul
xchg
push
mov
add
ds
push
lea
and
inc
fsubl
xor
fs
fs
mov
push
cmp
rcrl
enter
lcall
rcrb
sub
xchg
test
insl
sbb
push
in
fistpll
shll
fiaddl
lret
lea
es
mov
rcrb
scas
repz
inc
adc
nop
cmp
adc
dec
stc
adc
or
out
adc
add
subl
mov
lods
and
out
add
push
and
and
cmp
in
sbb
in
add
or
cmpsl
movl
jle
xchg
dec
test
clc
xorl
adc
mov
mov
out
popa
fs
pop
je
nop
lods
add
test
repz
clc
nop
and
xor
addb
mov
lcall
aam
xor
loope
es
push
repnz
rorl
add
inc
push
add
mov
rclb
enter
hlt
adc
pop
cmp
hlt
fdiv
mov
icebp
add
and
inc
cmp
dec
xor
add
inc
lods
push
enter
movsb
call
xlat
in
hlt
je
xchg
sbb
fistpl
adc
mov
jae
dec
xor
or
jge
cmp
mov
pushf
push
hlt
cmp
je
movl
adc
mov
sbb
rcll
xchg
data16
add
jmp
adc
and
xchg
add
cmp
mov
mov
push
sbb
inc
dec
pop
xor
lock
push
inc
xor
push
mov
mov
lock
push
jle
mov
or
outsb
cmp
fisttpl
adc
sub
sbb
pop
call
aam
lock
mov
jbe
jge
scas
mov
cmp
test
pop
ret
loopne
ja
enter
sti
je
movl
mov
push
mov
push
cmp
jnp
loopne
mov
jecxz
push
imul
push
mov
push
inc
and
das
add
or
lock
or
and
or
mov
push
jo
xchg
mov
insb
arpl
mov
xchg
sbb
lea
xchg
adcb
shrl
add
adc
ret
in
inc
orb
dec
enter
xor
mov
pusha
stos
int3
cmp
push
inc
add
xlat
push
int3
sub
xor
mov
mov
add
dec
mov
add
add
pop
mov
and
or
test
sbb
sub
xor
adc
jp
iret
imul
in
enter
jnp
jnp
add
fcmovnu
mov
mov
lret
add
cmpsl
test
idivb
adc
sbb
das
dec
inc
cmp
mov
jbe
cltd
inc
xor
andl
adc
cmp
cmp
push
pushf
add
or
push
testl
add
aad
and
test
push
push
inc
and
push
rclb
dec
or
fsubrs
lods
or
or
dec
nop
adc
mov
or
jns
sub
mov
or
imul
push
pop
adc
sbb
out
add
ss
push
push
xor
int
rcrb
sub
cmp
sub
add
mov
jae
int
das
sbb
xor
rcrb
inc
cmp
sbb
xor
xor
rolb
dec
rorb
int
dec
push
dec
int
xor
push
dec
pop
dec
add
and
dec
pusha
and
xchg
xor
fs
rcrb
jae
cmp
and
add
je
rcrb
cmp
jl
test
fiaddl
pop
ds
in
sahf
lret
xchg
mov
xor
jl
in
xor
jb
fists
add
mov
sub
outsl
mov
das
adc
cmp
or
pop
imul
mov
ret
mov
mov
pushf
xor
inc
in
jge
icebp
push
or
adc
ss
and
and
sub
xchg
xchg
xchg
xor
cmp
movsb
dec
lea
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
and
push
ret
pop
cmp
sub
add
jo
add
cmp
and
mov
sbbl
test
mov
leave
and
mov
xchg
xchg
imull
dec
or
test
fsubs
xor
push
nop
sbb
mov
push
sbb
push
rcr
push
mov
aas
aaa
pop
jmp
movl
enter
or
xor
into
mov
dec
popa
sbb
inc
inc
mov
add
pop
in
and
jbe
add
xor
and
xchg
xor
cwtl
jne
cmp
jne
or
jne
sbb
adc
or
mov
ljmp
pop
fstpt
adc
out
pop
shlb
mov
or
push
rep
pop
mov
pop
test
xchg
jno
jns
jmp
rorl
test
push
pop
dec
cld
sbb
movsb
test
clc
dec
pop
clc
lods
and
faddl
cmpsb
fcomip
jnp
push
push
push
dec
call
popf
and
movaps
cmpsl
int
dec
or
push
das
cmpsl
pop
and
in
cmp
xor
push
mov
inc
add
hlt
adc
in
jo
jl
jp
cmp
jg
sub
or
test
aaa
and
inc
mov
mov
prefetch
out
notl
bnd
and
loope
mov
movsb
rcll
outsb
adc
push
push
lods
pop
push
adc
cld
pusha
adc
lea
inc
les
xchg
mov
daa
xchg
xchg
sbb
adc
cltd
dec
mov
inc
adc
pop
repnz
mov
jmp
cld
movsb
cmp
sbb
or
sbb
and
or
and
int
imul
lods
add
dec
lcall
inc
xchg
mov
xor
cmp
pop
cmp
inc
fildll
push
test
cmp
jne
dec
inc
cld
ret
je
clc
adc
push
rol
inc
sub
jo
lea
adc
js
add
adc
sarb
or
sbb
add
push
sbb
mov
imul
xor
and
sbb
imul
jl
sub
movsb
push
ficoml
push
cs
rcll
pop
sbb
push
sub
sub
aas
fs
mov
mov
and
dec
pop
or
lea
pop
add
mov
adc
add
xchg
mov
lock
daa
cwtl
and
out
movsl
cmpsb
adc
push
add
dec
or
mov
lods
in
cmp
mov
mov
xchg
jno
sahf
cmpsl
push
sbb
or
adc
hlt
push
rolb
ljmp
lea
pushl
test
ss
pushl
test
into
call
test
cmp
or
dec
mov
or
add
fcom
mov
xchg
mov
shrb
add
sub
jecxz
fldl
push
std
adc
dec
push
ds
lea
push
add
mov
ret
sub
rcrb
das
lea
xor
cltd
dec
jmp
outsl
push
xor
sub
xor
push
mov
cmp
or
cmp
lar
clc
adc
in
pop
loope
sub
sub
inc
xor
or
cmp
ja
add
hlt
sbb
add
rorb
dec
hlt
insb
aam
pop
inc
mov
xlat
arpl
mov
outsb
push
inc
cs
jl
push
jle
das
pop
xor
adc
sub
pop
rorb
xlat
add
test
mov
or
jp
push
pushf
mov
inc
inc
mov
lock
push
xlat
jle
and
lods
xor
cmp
push
test
dec
test
mov
add
and
jns
mov
push
add
das
sti
daa
pop
loope
loopne
in
dec
sbb
pusha
push
lea
pop
push
adc
and
push
dec
mov
movsb
sub
in
mov
clc
pop
je
cmpsb
insl
fwait
bound
sbb
andl
or
mov
movsb
shrb
inc
lcall
add
je
push
xchg
imul
cld
gs
pop
jp
push
idivb
jne
or
or
rcrl
jns
sbb
add
push
mov
jmp
sbb
loop
andb
clc
push
imul
lret
sub
fs
ret
mov
sahf
inc
adc
out
dec
add
roll
push
das
add
sahf
inc
loope
fmuls
pop
js
insl
add
sbb
inc
sbb
je
pop
out
adc
cs
cs
and
jne
xor
das
in
push
dec
sbbb
xor
add
or
mov
adc
in
ja
mov
int
pop
inc
push
push
mov
or
data16
mov
or
in
or
out
sbbl
lods
nop
sbb
insb
testb
mov
pop
cwtl
inc
in
mov
scas
mov
sahf
push
fildl
xchg
andl
clc
into
fs
imul
add
pop
data16
insb
imul
xchg
adc
jns,pn
outsl
testb
addl
cmp
lock
test
pop
loopne
or
bound
lea
lea
arpl
adc
add
push
arpl
push
sahf
jnp
push
mov
push
or
push
notl
inc
pusha
jnp
add
rol
aad
loope
pop
in
push
bound
in
pop
push
xor
push
fcmovnbe
pusha
adc
insb
mov
pop
sbb
adc
inc
xorl
or
incl
xchg
lret
sub
neg
sbb
and
mov
or
ret
xor
fimuls
les
mov
pop
cmpsb
jg
and
insb
loopne
xchg
add
iret
and
inc
hlt
and
add
inc
add
sbb
cmp
sub
xchg
push
and
push
fimuls
cltd
push
and
adc
push
test
cs
push
xchg
out
push
push
xchg
in
ret
adc
shll
push
addb
or
mov
arpl
push
or
jne
jnp
jmp
adc
fsqrt
or
lret
jo
inc
push
cmp
jne
mov
outsb
sahf
out
push
cmp
jne
es
jne
push
pop
out
call
sbb
je,pn
xchg
jb
jmp
stc
jns
movsb
sti
jmp
adc
jmp
or
jmp
cld
hlt
lahf
popf
mov
mov
adc
inc
loopne
xor
sub
test
sub
jmp
adc
call
cmp
push
adc
das
adc
ret
loop
sub
xor
subl
int3
mov
sbb
dec
decl
roll
ret
sbb
add
adc
or
ret
mov
hlt
and
lods
mov
movb
dec
xchg
ror
adc
cld
add
mov
insb
or
jb
push
push
inc
cmp
popa
mov
add
inc
mov
mov
inc
dec
stc
shl
or
popa
lcall
cwtl
jmp
mov
adc
push
cmpsl
mov
cmp
add
or
imul
ja
xor
addb
push
es
clc
mov
cli
nop
cmpsb
rorl
clc
stc
addb
push
sbb
leave
leave
test
mov
fists
movsl
and
and
and
leave
dec
ret
sbb
jbe
push
push
sub
inc
aad
or
movsb
fisubrl
and
test
push
fstl
clc
mov
les
or
iret
or
inc
int3
jmp
in
loop
xor
push
sub
jne
es
dec
add
nop
sbb
lods
push
addr16
enter
jnp
es
jmp
push
push
add
cld
enter
loopne
sbb
in
push
pop
fdivr
push
loopne
inc
popa
cwtl
mulb
mov
scas
add
sar
iret
and
dec
loopne
xor
dec
or
mov
sarb
xor
push
rcr
adc
and
adc
mov
arpl
mov
add
jp
xor
sbb
mov
push
add
faddl
fcoml
mov
or
or
aam
inc
lods
or
fidivl
pop
cmpsb
loopne
pop
sub
push
cmp
mov
test
or
dec
sbb
test
cmp
test
mov
mov
lcall
por
adc
or
popa
outsl
or
adc
or
ja
xchg
pusha
mov
adc
and
push
jnp
adc
jge
mov
je
or
push
mov
push
adc
lcall
adc
test
neg
test
mov
fmull
jmp
insl
inc
xor
psubq
xchg
movsb
mov
xchg
sbbl
inc
and
adc
rol
cmp
mov
insb
inc
sbb
sub
cmp
pop
jmp
pusha
inc
andl
rcl
xchg
push
das
mov
cwtl
cmp
cmp
and
xlat
das
mov
cld
pop
inc
cmp
das
cwtl
mov
sti
xor
sbb
mov
sbb
cmp
add
pusha
in
fbld
push
and
stos
addb
ret
jmp
pop
sub
dec
dec
mov
cmp
fwait
scas
xor
lods
jo
sbb
xchg
cmp
in
sub
repnz
adc
inc
pop
push
lcall
dec
scas
into
jl
enter
xsha1
cmpsb
mov
fsubl
jge
sub
add
add
sbb
rolb
add
out
xor
mov
pop
out
ds
in
sub
popa
and
in
and
cmp
shlb
or
scas
call
sbb
andb
roll
into
sbb
movsl
and
je
movb
pop
sarl
sbb
cli
add
jmp
adc
xor
aaa
push
adc
sub
adc
adc
es
add
cmp
xor
lock
aam
outsl
fbstp
daa
dec
mov
push
jge
add
test
enter
divl
adc
dec
cld
insl
stos
or
mov
push
mov
insl
cltd
or
fs
jne
je
push
popa
push
adc
pop
jge
add
add
mov
xor
cmpb
fcmovb
cmp
je
pop
inc
pusha
jbe
orb
daa
test
mov
push
mov
push
inc
loopne
leave
mov
mov
cmpl
flds
inc
shll
add
or
sub
mov
mov
and
or
add
imul
pop
ljmp
lret
push
mull
ss
sub
add
lock
lret
test
cli
adc
push
sbb
sbb
std
enter
adc
push
adc
pop
call
arpl
sbb
add
add
pop
mov
or
into
push
mov
dec
mov
pop
jle
sahf
sub
mov
and
jns
inc
cmpsb
ds
xor
push
and
jne
jbe
add
mov
jle
dec
subl
mov
xchg
sbb
adc
dec
jle
pop
and
leave
inc
clc
out
mov
pusha
xor
dec
cmp
lock
lret
mov
add
xor
inc
or
js
cmp
je
adc
adc
es
stos
add
adc
xchg
pop
stos
add
test
aad
pop
fildll
movzwl
push
ret
inc
inc
push
dec
ror
and
or
xor
adc
fld1
or
or
sub
je
adc
hlt
pop
and
pop
jg
and
or
ss
or
mov
test
mov
dec
dec
add
mov
adc
clc
loopne
or
or
lods
inc
pusha
cld
in
test
dec
out
push
fcmovu
in
pop
rol
shlb
add
in
outsb
and
or
jo
push
imul
xor
mov
and
imul
jo
pop
pop
mov
add
in
pop
adc
jne
add
movsl
xor
jne
fnstenv
add
sbb
mov
movswl
pop
lock
xor
lods
fs
leave
and
push
sbb
sub
pusha
and
pop
lahf
push
jmp
in
mov
sbb
inc
movsl
sub
xor
xor
sbb
inc
adc
or
adc
sbb
inc
add
cmp
dec
jns
inc
sub
sti
lcall
xchg
shr
ret
faddl
andb
call
aaa
push
idiv
and
in
hlt
cld
je
push
notl
or
pop
dec
push
add
adc
loop
dec
push
jmp
mov
or
dec
loopne
jno
aas
cmpsb
push
dec
bound
jmp
mov
jge
cmp
in
push
mov
add
adc
rorb
mov
add
cmpsb
es
dec
xlat
add
inc
push
call
adc
inc
xchg
inc
xchg
mov
shrb
inc
mov
lahf
pop
push
jne
cwtl
push
lea
mov
dec
sbb
fidivs
addr16
pop
addr16
cmp
mov
push
inc
sbb
add
in
lock
inc
rcr
pop
push
pop
or
mov
xchg
pop
adc
push
push
out
push
add
pushw
dec
mov
int
jecxz
jp
inc
cmpsl
dec
adc
jne
jae
mov
lcall
add
clc
or
int
cmpsl
into
jbe
jns
sbb
and
aas
sahf
aam
pop
fisttps
mov
push
jecxz
cmp
pop
cmc
cmpsl
sahf
push
or
jo
stc
pushf
inc
adc
xchg
mov
ret
sti
adc
pop
cmpsl
jecxz,pn
ficompl
inc
dec
push
push
cmpb
jno
jp
push
aaa
loop
pop
lcall
dec
sub
push
push
push
inc
and
je
cld
inc
ss
xlat
bound
dec
hlt
ss
adc
dec
sahf
cmp
je
xchg
push
xchg
adc
cltd
mov
repnz
jne
sbb
mov
inc
jmp
jmp
push
xor
xchg
mov
les
loopne
movsl
inc
xchg
cwtl
dec
popa
xor
adc
daa
test
test
sub
mov
push
push
dec
xchg
push
int3
mov
nop
adc
out
test
xor
push
xor
xor
and
inc
push
pop
and
rcrl
pusha
xlat
icebp
lahf
adcl
inc
cmp
jle
cmp
push
push
lea
je
adc
sub
mov
inc
xor
dec
jb
adc
ffree
icebp
in
sub
jne
add
fmuls
shlb
cld
in
push
push
popf
sbb
int3
jmp
sbb
adc
sub
jl
pop
inc
dec
or
mov
movsb
nopl
or
icebp
sub
xchg
popf
push
push
out
loop
jge
pop
add
cltd
test
and
mov
mov
mov
lea
ss
test
sub
aad
push
sbb
fs
jns
je
push
pop
inc
pop
sbb
jbe
jge
faddl
fwait
pusha
rcrl
rcll
mov
cmp
dec
in
cmpsb
push
fdivl
inc
out
cltd
lock
xchg
mov
daa
popa
or
inc
push
add
add
jo
lds
addr16
sbb
dec
mov
or
loope
xor
cmpsb
in
push
dec
push
or
mov
or
sub
add
shl
es
cmp
push
adc
test
jne
push
not
or
sbb
loopne
bound
stos
pop
pop
push
sbb
outsb
stos
add
es
movsl
add
int
mov
movb
mov
pop
add
shll
add
iret
ss
insb
jns
dec
or
inc
lea
push
push
sub
inc
shl
xchg
in
mov
test
testl
loop
rolb
push
imul
cwtl
mov
mov
ja
and
mov
out
mov
inc
insl
jae
js
sub
jbe
dec
mov
pusha
push
jmp
or
jb
imul
enter
sbb
sahf
cmp
punpckhbw
jb
incb
jae
and
testb
mov
cmp
sub
mov
and
add
flds
ja
enter
fneni(8087
add
pop
enter
cmp
dec
xor
stos
inc
jge
ret
xor
pmuludq
in
jne
dec
or
movsl
cmp
mov
sub
sub
add
out
in
sub
sub
not
push
push
push
lock
popf
je
aam
rorb
push
outsb
ds
push
or
out
mov
mov
xor
jl
inc
sbb
pop
sub
adc
xchg
adc
jmp
mov
sub
pop
in
sar
or
pop
hlt
test
nop
pop
push
cmp
push
mov
lcall
lea
dec
cli
add
sub
pcmpeqw
mov
mov
push
pop
mov
pop
add
adc
dec
lds
inc
lock
or
jecxz
insb
inc
or
add
sbb
mov
mov
inc
inc
dec
xor
mov
ret
cli
lea
add
pop
andl
and
in
out
fimuls
jl
jl
mov
out
and
mov
xchg
mov
int
sub
jge
pop
and
adc
in
shl
mov
out
add
add
mov
addb
xchg
stc
inc
mov
push
fsubrs
and
or
jo
cmpsl
add
les
leave
test
int3
or
xchg
mov
pusha
fs
push
or
andb
add
or
adc
pop
push
test
jo
jb
dec
push
and
sub
inc
mov
inc
xor
sbb
mov
cmpsb
imul
sahf
mov
stos
aaa
mov
push
xor
mov
mov
mov
push
or
scas
mov
or
testb
mov
sub
and
addb
jmp
dec
or
add
loopne
cld
xor
push
dec
jmp
fs
or
add
adc
cmp
pop
xchg
pop
add
sub
mov
add
or
add
xchg
jmp
andl
jmp
cmpsl
add
jbe
mov
pop
sbb
sub
cmp
movsl
std
testl
inc
jle
cmp
push
xor
push
cld
into
cmpb
jmp
dec
push
mov
int3
testb
je
shll
sub
pop
lahf
add
push
jmp
lods
rcl
mov
sbb
sbb
mov
pop
out
sbb
jge
pop
cmp
add
idivl
jbe
nop
add
jne
in
imul
imul
sbb
adc
cmp
and
mov
outsb
mov
or
decb
push
sub
mov
or
orl
pop
xchg
dec
and
push
and
stc
sub
in
mov
xchg
mov
stos
sub
xchg
mov
cmpl
pushl
mov
shll
test
nop
mov
inc
mov
sbb
loope
or
add
testl
mov
jmp
fisubs
pop
push
xor
xor
jmp
cld
int
push
ljmp
lock
rolb
jg
in
sbb
dec
std
jecxz
push
push
out
pushf
xor
push
fsubr
or
pop
mov
imul
push
mov
dec
mov
ret
or
mov
mov
cmp
movb
incl
add
fadds
dec
adc
xor
sbb
test
cli
sahf
lods
mov
int3
cs
addb
pusha
jp
into
in
shr
enter
mov
xor
mov
aad
push
loop
lods
inc
push
dec
mov
test
call
sahf
push
orl
mov
sbbl
rcll
inc
insb
xchg
cmp
push
repz
in
pop
and
cmpb
dec
or
push
gs
popf
into
mov
lock
icebp
mov
ret
and
fbld
lea
nop
shlb
lcall
adc
sbb
aas
out
sbb
ja
ja
mov
stos
mov
arpl
push
sbb
add
inc
int3
push
jne
jne
mov
les
test
into
jne
add
flds
push
rcrb
imulb
cmp
jne
hlt
jo
jne
push
shr
mov
jbe
add
rcll
insb
stos
and
test
jle
xchg
les
or
mov
call
sub
xor
cmp
cli
cmpsl
repz
lock
ja
je
mov
lods
add
cmpl
insl
mov
pushf
sub
ret
xor
mov
stc
jg
add
add
inc
aaa
das
das
xchg
bound
jne
aam
gs
pop
dec
adc
lock
mov
or
push
pop
jne
jge
mov
jg
or
adc
inc
cmc
orb
jb
xor
add
div
adc
cmp
je
push
sti
pop
inc
inc
mov
shrl
shl
shr
or
mov
shl
call
jne
int3
hlt
xchg
insb
mov
add
mov
inc
push
enter
cwtl
mov
stos
mov
inc
or
jge
cmp
shll
sbb
sar
pop
fcoml
fiadds
aad
shr
call
fidivl
add
shlb
and
and
pop
cs
ficoms
gs
enter
jmp
stos
inc
mov
push
nop
sub
imul
push
into
jmp
scas
jnp
imul
xchg
shlb
and
scas
add
ss
dec
test
fcomps
int3
or
jne
push
lret
mov
sub
sub
add
mul
pop
adc
mov
sbbb
adc
enter
roll
or
call
lcall
add
stc
cmp
sti
xchg
inc
add
xchg
push
push
mov
pop
xchg
out
sahf
cmpsl
sbb
loopne
sub
pushf
test
je
xor
inc
popa
pop
lea
jge
pusha
sbb
lds
enter
jns
mulb
loop
inc
ror
push
rcl
shl
jns
out
aad
xlat
fsubs
ss
sti
fstpt
add
movsb
pusha
call
movb
ret
into
push
fsubrp
add
and
sbb
hlt
dec
jne
enter
jle
push
jno
push
xchg
xchg
or
or
adc
push
mov
push
add
cmp
mov
add
imul
leave
js
inc
insb
nop
inc
push
icebp
mov
or
adc
stc
mov
cmp
das
or
push
in
push
push
add
rolb
call
adcb
adc
hlt
push
hlt
lret
imul
push
dec
ret
cmpl
lea
sar
inc
push
xchg
xor
cmp
add
pusha
push
neg
push
mov
stos
test
out
loop
add
loopne
in
pushf
outsl
mov
mov
add
dec
xor
push
and
sar
fiadds
addr16
mov
push
mov
dec
or
mov
xor
and
inc
and
mov
cmpsl
ljmp
cmp
add
and
mov
pop
fiadds
pop
loopne
xchg
jae
andl
decb
xchg
rclb
adc
iret
push
sbb
push
push
into
jne
inc
testl
in
ljmp
jo
inc
inc
or
movsl
icebp
dec
or
mov
jne
dec
xor
orb
sarb
cld
add
sub
rolb
push
mov
push
lea
adcb
lock
xchg
mov
xchg
push
or
orl
cmp
add
shll
pop
cmp
addl
mov
jge
imul
push
and
sub
cmpsb
rorb
add
in
inc
inc
in
popa
imul
sbb
rolb
sarb
cwtl
adc
ljmp
sbb
push
push
lret
ljmp
rol
rolb
testb
pushf
fisttps
clc
dec
aaa
push
hlt
shrl
xor
or
mov
push
outsl
adc
or
dec
mov
dec
push
flds
lods
lock
imul
mul
test
inc
cli
testb
xchg
repnz
push
stc
or
xchg
dec
mov
add
adc
lret
xor
adc
outsb
xchg
aaa
or
lcall
hlt
jp
lods
mov
dec
mov
xor
sbb
rolb
repz
idiv
dec
mov
dec
inc
mov
je
pop
or
ja
mov
xchg
adc
mov
or
or
pushw
sub
loop
xchg
mov
push
xchg
testb
and
mov
sbb
xor
adc
enter
adc
xor
mov
cmp
xchg
pop
inc
shlb
ret
cmp
cmp
ss
rorb
cmp
jge
or
lods
sub
mov
mov
sub
or
push
hlt
cs
lea
fisubrl
insb
xchg
lret
mov
pusha
sub
insl
sub
decl
cmpsb
jg
pusha
and
repz
clc
sbb
push
data16
jb
test
pusha
negb
xor
enter
lock
inc
mov
stc
jge
xchg
sbb
mov
xchg
cld
pop
popa
pusha
add
adcl
in
fwait
loopne
ljmp
pusha
mov
jge
add
ret
xchg
sub
insb
sbb
pop
movb
inc
mov
push
add
or
aas
int3
push
nop
cmp
inc
fbld
push
out
adc
mov
add
lea
shr
sahf
add
jmp
fisttpl
mov
mov
push
cmpsb
mov
sbb
imul
incb
sub
sarl
jmp
loopne
sbb
fadd
lea
nop
js
add
and
fimull
inc
push
adc
outsl
out
lds
cmpsb
mov
xchg
orb
ds
out
add
or
mov
sbb
or
adc
shr
enter
jg
or
lea
sbb
mov
and
sub
sar
inc
js
sub
inc
pop
mov
cmp
push
shlb
add
push
leave
les
loopne
jne
cmp
shll
or
mov
pop
jb
fcmovu
lea
jmp
dec
nop
dec
mov
stos
aas
std
add
xor
inc
cmpb
or
add
dec
cmp
jae
out
add
dec
add
mov
sub
orb
pop
add
int
and
outsl
mov
jp
jne
dec
mov
jb
lcall
adc
clc
push
ret
and
add
push
add
lds
adc
adc
or
add
rclb
add
add
shlb
add
adc
lret
mov
push
mov
clc
rolb
add
inc
sub
or
or
or
jmp
dec
xchg
push
or
add
or
sbb
push
pop
pop
scas
add
cmp
ret
mov
pusha
scas
mov
mov
test
xor
push
rclb
jae
test
inc
pop
mov
mov
iret
xor
push
xor
into
pusha
inc
adc
sub
insb
rolb
pop
and
pop
pop
push
jnp
daa
orb
cmpsl
mov
and
loop
es
ret
or
fnstcw
and
out
inc
push
pop
dec
push
imul
add
cmpl
lcall
lret
clc
mov
or
and
lock
mov
or
scas
sbb
xor
or
adc
xlat
dec
add
cmp
add
mov
jne
and
adc
into
adc
adc
jge
psubsb
in
rolb
cmp
lret
ret
fnstenv
or
and
sbb
jae
fldcw
mov
cld
xor
test
sub
sub
fdivl
or
inc
stos
jg
and
ret
xor
xchg
xor
dec
dec
adc
and
add
in
stmxcsr
push
aam
ret
pop
data16
sub
or
add
addb
or
adc
mov
jbe
jle
idiv
shlb
sub
xor
inc
cmp
jns
jg
into
into
into
xor
pop
and
mov
pop
or
dec
ret
cwtl
pop
mov
mov
shlb
or
pop
and
pop
cwtl
dec
add
or
adc
hlt
add
test
pop
test
in
jns
add
add
test
arpl
add
xor
sbb
je
and
in
adc
or
mov
sub
sbb
mov
lret
xor
dec
xchg
and
jo
push
scas
call
movsl
add
dec
xor
push
sbb
inc
test
icebp
sub
or
add
outsl
bound
xchg
int3
or
mov
xor
push
popl
dec
push
mov
or
and
xor
add
in
xchg
and
add
cltd
push
inc
dec
jbe
rorl
sbb
lods
movsl
leave
shrb
sub
mov
inc
jl
ret
xchg
push
sbb
xlat
jle
mov
ss
mov
cmp
inc
insb
mov
jl
and
lea
stc
ljmp
jge
in
mov
pop
push
insb
dec
sbb
enter
test
je
push
adc
dec
mov
sbb
xchg
sbb
mov
jmp
leave
jne
je
dec
sub
std
mov
je
jb
jbe
out
je
mov
test
mov
cmp
hlt
lret
inc
mov
sbb
or
inc
test
out
insb
fisubs
mov
ljmp
cmpsb
sahf
sub
jmp
sbb
pop
clc
and
push
push
or
outsb
push
xlat
and
xchg
ret
enter
adc
rolb
push
add
mov
ret
jo
test
and
adc
int
loopne
mov
pop
flds
lods
test
jb
push
inc
lahf
add
scas
xchg
xor
in
fstpl
jle
pushl
dec
pop
fs
imul
jns
sbb
shr
fstpt
xor
mov
aam
jecxz
cmp
push
pushf
mov
fcoms
jbe
xchg
les
mov
enter
jge
sbb
adc
bound
pop
pop
jo
mov
sarb
push
mov
fdiv
sarb
sub
fmul
dec
cmp
inc
sbb
stos
dec
repnz
call
in
hlt
push
push
add
lea
jae
shll
push
pop
push
imul
pusha
xor
dec
adc
and
leave
arpl
enter
test
sarl
adc
dec
popf
jnp
jnp
lcall
add
adc
push
or
and
cs
push
stos
and
ret
pusha
add
into
add
lods
add
icebp
mov
mov
push
sbb
insb
and
push
pusha
mov
sub
popf
mov
jbe
sub
int
sahf
pop
dec
xor
mov
inc
in
ret
inc
dec
inc
cmpl
notl
sub
mov
jns
enter
sbb
loopne
push
dec
in
jmp
aas
push
xor
fnstcw
and
nop
inc
jne
mov
push
enter
dec
pusha
mov
fstps
fsubl
add
cs
test
and
push
fcoml
in
ret
and
inc
inc
call
pop
in
inc
sbb
test
jnp
mov
pusha
data16
mov
cmp
or
aam
add
lea
cwtl
and
sub
fimuls
in
sahf
xor
or
sub
shrb
mov
jl
dec
sbb
lea
or
mov
test
sub
sbb
lock
dec
mov
in
inc
out
aas
jae
fsubs
js
fisttpl
loopne
jmp
dec
loop
add
push
loopne
mov
scas
ret
xor
or
js
or
or
adc
or
mov
orb
leave
inc
js
inc
add
cmp
sbb
inc
out
pop
push
movsl
cwtl
insb
movsl
das
xchg
mov
and
sub
add
push
bound
loop
xorb
fs
xor
push
push
and
push
xor
ret
pop
cmpsb
pop
sahf
enter
pop
and
es
lahf
push
movsb
or
je
or
lds
loop
mov
mov
mov
mov
mov
in
je
add
push
adc
and
jb
cmp
ja
add
cmp
adc
cmp
mulb
adc
mov
xchg
inc
rcrl
cmp
adcl
ret
mov
mov
add
mov
push
and
shlb
mov
cld
adc
test
xor
push
into
adc
in
pop
inc
incl
fcmovb
jmp
cmp
mov
add
inc
cwtl
jns
jo
bound
scas
push
bound
xchg
inc
sti
mov
add
xor
aaa
push
in
je
xor
push
das
fildl
add
bound
cld
push
adcb
xor
xlat
mov
js
inc
testb
mov
dec
push
add
add
xchg
out
jo
push
aas
mov
jo
cmp
sub
cli
mov
pop
or
or
inc
sbb
push
cmpsl
push
mov
shlb
add
or
adc
dec
or
dec
or
or
stc
add
rolb
adc
incl
jp
fdivs
xchg
xor
cmp
ficoms
adc
iret
shl
inc
jecxz
xchg
rol
xchg
mov
mov
add
mov
adc
push
mov
push
xchg
loopne
data16
enter
test
je
data16
add
js
add
cmp
fdivl
dec
les
shlb
fxrstor
arpl
inc
mov
pop
dec
inc
fcomps
lahf
movsl
mov
icebp
int3
jmp
add
imul
sub
dec
jp
inc
dec
lea
aas
lock
mov
cld
push
sbb
insb
popa
daa
lahf
mov
imul
in
ja
or
cld
or
xor
mov
xchg
das
or
insl
arpl
jae
push
data16
push
push
and
out
sub
jl
hlt
cmp
dec
jb
add
jge
add
not
inc
and
jae
fwait
in
imul
roll
add
bound
mov
add
mov
ret
inc
loopne
mov
insb
das
lea
and
mov
and
data16
dec
adc
push
push
jae
nop
xor
dec
mov
mull
inc
adc
adc
cmp
xchg
adc
inc
cmpsl
cmp
cwtl
xchg
push
sbb
mov
jl
loop
pushl
inc
je
movsb
cmp
push
sbb
push
movl
mov
add
sbb
arpl
add
xlat
sub
jno
movsb
push
add
mov
adc
and
test
dec
and
insl
or
adc
pop
mov
fiaddl
adc
adc
inc
or
shll
xor
pop
ret
inc
xor
fiaddl
je
addl
lods
or
or
push
sub
lock
jno
shll
mov
push
aam
movsb
stos
dec
xchg
shlb
or
xor
aas
jge
pop
popf
aas
add
add
jecxz
add
jno
sbb
push
push
inc
add
sub
es
cs
ss
ret
push
enter
or
shll
lds
sub
inc
or
sbb
insb
and
push
sbb
into
and
pop
leave
aas
leave
and
adc
pop
fldt
pop
mov
xchg
mov
adc
icebp
movsl
hlt
adc
or
pop
mov
cmpsl
push
jb
dec
sbbb
call
inc
add
loopne
push
movl
jmp
rorl
xchg
fisttpll
fnsave
xor
xor
shrb
inc
add
orl
dec
popa
rcll
cmp
and
sbb
daa
lea
loopne
mov
hlt
or
ret
vdivps
addl
or
dec
or
roll
sub
or
aam
mov
pop
sub
add
or
dec
cmpsl
and
sub
add
xchg
cmp
fmulp
lea
inc
insl
push
popa
or
loop
adc
and
into
cmpsl
jns
dec
push
xchg
fcoms
data16
xor
ss
insl
mov
cmp
cmpsb
lods
xor
dec
rcll
sbb
sub
adc
push
jge,pt
sub
aad
ljmp
push
test
adc
xor
add
cmpl
stos
loopne
fisubl
mov
sub
mov
fnstenv
movsl
test
mov
mov
push
and
pop
inc
iret
mov
jle
roll
xchg
aad
mov
xor
insl
xor
dec
jle
mov
mov
xor
add
cmp
xor
xor
pop
flds
fs
add
jmp
loope
dec
pop
adc
bndldx
lret
ret
mov
sbb
jg
loopne
pop
scas
pop
ret
or
cmp
lahf
pushf
and
mov
leave
test
adc
dec
in
js
push
add
xor
insb
dec
dec
xchg
or
dec
pop
push
mov
push
push
add
or
mov
not
lret
inc
mov
scas
movsb
sbbb
or
insb
test
or
and
mov
add
add
dec
js
push
mov
movb
inc
sbb
adc
or
push
ss
movsl
imul
imul
jl
pop
movsb
test
inc
mov
shr
add
mov
dec
call
stos
scas
mov
adc
mov
lods
cmp
mov
mov
or
lret
into
xchg
adc
dec
inc
adc
xchg
xor
or
pop
pop
lret
mov
leave
inc
mov
or
or
add
lds
adc
mov
fadd
and
and
adc
add
cld
mov
adc
mov
loop
sub
decl
ret
inc
aad
in
pop
ret
jmp
sub
sbb
push
cmp
and
push
mov
mov
orl
stos
jecxz
je
pop
nop
inc
sbb
pop
mov
scas
jno
ret
in
jmp
cmpsb
bound
xor
add
sbb
into
aad
add
adc
std
out
shr
adc
and
pop
testb
adc
insb
or
add
pop
in
in
xchg
arpl
daa
adc
test
push
or
xor
cmp
inc
mov
bound
sbb
std
stc
add
push
andl
jg
push
iret
mov
stos
inc
loope
mov
dec
daa
cmpsl
dec
popf
xorl
je
xorb
mov
add
push
sub
rorl
pop
sbb
stos
xor
subb
inc
or
stos
inc
sub
or
in
inc
loopne
test
leave
dec
jmp
jmp
cmp
inc
or
pop
aad
push
add
fs
ss
test
push
out
mov
add
xchg
mov
cmp
add
mov
mov
push
mov
inc
jl
inc
and
inc
addl
jbe
adc
add
and
aam
cmpsl
neg
popf
test
test
xor
mov
push
pop
or
outsl
add
lret
mov
adc
pop
jne
xorl
in
mov
inc
inc
and
sub
or
adc
or
sbb
jbe
push
mov
pop
xchg
jo
dec
sbb
outsb
test
out
into
lock
ss
jmp
in
push
jmp
sub
into
and
hlt
cmp
xor
popa
stos
daa
scas
xchg
rcr
adc
pop
lods
mov
mov
cwtl
fsubrs
pushf
dec
andb
punpckhwd
dec
pusha
clc
shrb
xlat
test
sti
and
add
push
mov
aas
popa
loope
jne
jle
inc
lcall
jb
mov
mov
mov
fwait
jge
mov
sub
mov
add
dec
int3
ljmp
out
lods
add
mov
ds
dec
aam
int
pop
ret
pusha
lods
push
mov
and
pop
adc
sahf
andl
add
shll
lods
bound
push
in
js
adc
scas
out
dec
mov
xchg
lds
test
nop
xchg
movb
inc
jne
xchg
stc
jne
xor
and
mov
mov
mov
push
pop
int3
xchg
xor
int3
sbb
addl
push
je
fildl
repnz
add
mov
sub
pop
xor
sarl
jne
mov
je
test
dec
subl
rolb
add
or
orb
xor
xchg
test
orb
mov
shll
add
or
sahf
jns
sbb
or
xor
ss
fs
mov
insl
xor
xchg
out
and
movsl
rcrl
ret
mov
in
in
sub
jnp
xor
or
sbb
mov
cmpsl
pop
inc
inc
add
loope
mov
mov
je
adc
mov
push
int
xchg
adc
mov
sarb
cmp
les
mov
test
aaa
ret
loop
sbb
mov
adc
movsl
or
dec
icebp
nop
lea
mov
inc
and
enter
sbb
int
and
sub
cmp
add
ja
adc
fsubrp
and
cltd
scas
jnp
or
adc
add
adc
inc
sbb
les
rcl
push
xchg
ljmp
ss
jp
pop
push
insl
adc
rolb
mov
mov
cli
jno
insb
jmp
xchg
mov
incb
insl
ljmp
outsb
dec
xor
add
lock
push
dec
je
imul
sbb
fcmovu
inc
or
loopne
dec
movsl
and
pushf
jmp
int
pop
sub
mov
or
add
popf
sub
adc
daa
or
push
mov
mov
out
adc
and
xor
in
or
pusha
cwtl
lods
xchg
aad
adc
push
daa
lret
popa
movsl
sbb
nop
add
inc
push
dec
jns
pop
scas
pusha
jo
stos
pop
inc
pusha
xor
in
add
sub
and
dec
inc
cmp
imul
sarl
pop
dec
mov
sbb
repz
loope
call
pop
dec
cmp
xchg
inc
aaa
mov
inc
icebp
adc
sbb
test
adc
dec
in
loopne
div
sub
mov
pop
mov
and
insl
fs
add
shlb
add
jmp
pop
mov
sbb
cld
sbb
inc
repnz
push
push
sahf
and
iret
mov
sahf
fwait
push
mov
movsb
adc
std
fdivrl
cmc
aaa
dec
inc
or
cs
jp
pop
jne
aaa
and
jb
int3
bound
add
xor
and
cmp
loop
xor
add
out
xor
push
cwtl
leave
sbbb
xor
aaa
dec
sbbb
push
and
ret
add
shll
sbb
xchg
mov
push
cltd
push
les
pop
add
add
mov
rolb
and
add
and
sub
mov
dec
xchg
xchg
ret
mov
adc
sub
call
stos
adc
adc
sbb
cmp
sub
nop
inc
xchg
mov
mov
setl
leave
add
dec
jl
lods
inc
lret
cmp
pop
add
push
inc
push
xor
sub
sub
sti
mov
jl
adc
lahf
pusha
mov
push
jnp
rorl
add
lods
xchg
out
test
lret
pop
add
add
lds
clc
dec
rorl
or
test
inc
enter
jo
push
ror
add
push
pop
push
int3
dec
pop
add
dec
add
push
negb
clc
movsl
pushf
negb
out
push
orl
and
sub
sbb
fnstenv
aad
jno
loope
mov
in
adc
and
imul
pop
cwtl
jmp
out
sbb
ja
aas
in
scas
pusha
popf
add
dec
outsb
dec
and
mov
inc
push
xor
inc
xor
fmuls
pop
fisubl
push
int3
outsl
or
cmp
jb
les
icebp
or
adc
add
push
sub
jb
or
xchg
cmp
dec
std
inc
sub
lret
mov
push
push
sbb
aam
push
pushl
and
jge
lds
pop
sub
xor
aad
adc
pop
and
fdivrs
jne
dec
mov
pop
hlt
adc
pushf
shlb
cmpb
or
xchg
or
mov
pushf
or
pusha
sbb
mov
ljmp
pop
jge
sbb
xor
jge
sbb
scas
repnz
dec
clc
sti
insl
and
or
and
popf
add
add
cli
mov
cwtl
add
clc
or
pop
or
adc
or
loop
push
xor
lock
es
loop
push
out
lcall
lret
pop
cwtl
adc
mov
out
inc
jb
rorb
mov
popf
add
xchg
pop
inc
test
or
test
mov
and
jae
jmp
xor
adc
loop
insl
mov
outsb
sar
pop
mov
push
mov
add
xchg
jle
inc
xor
pop
jl
push
fcomps
fstpt
push
add
sbb
or
rolb
jle
pop
push
jecxz
add
loope
in
inc
cmp
dec
movsb
push
pop
pop
and
pusha
mov
or
dec
add
inc
mov
and
sub
sbb
pop
push
loopne
popf
inc
andl
rol
and
repnz
cmpb
loopne
add
sbb
xchg
fisubl
mov
jmp
lock
dec
dec
test
pop
add
call
inc
and
cmp
fstl
loope
sar
pop
in
or
mov
ss
add
or
fsubl
mov
jge
or
lods
or
iret
inc
xor
pop
jo
or
aas
pop
rcrl
or
cmpsl
in
cmpsl
or
js
add
or
icebp
push
rolb
add
movsb
aad
push
or
add
and
push
add
push
push
imul
rcll
scas
sub
sub
mov
lahf
cs
adc
cmp
push
stos
add
push
inc
pop
mov
ret
int
add
test
out
imul
push
push
daa
lock
cmpl
jbe
adc
cmpsb
or
mov
cmp
push
sub
push
inc
inc
fwait
add
dec
lods
outsb
cs
test
mov
inc
mov
fsubl
movb
dec
inc
sbbl
test
jo
aam
mov
sbb
push
or
push
sub
and
addr16
gs
stos
dec
sub
cmp
pop
ljmp
pop
adc
adc
pop
sbb
test
rcrl
or
xchg
jnp
sbb
pusha
pop
or
pop
repnz
mov
push
push
mov
fwait
add
adc
or
add
test
or
jl
adc
or
xor
add
cmp
or
lea
push
fs
pop
push
jbe
rclb
inc
mov
cmpb
jg
pop
jg
je
add
push
mov
int
ds
iret
call
jae
sar
sub
aas
push
roll
orb
fwait
lret
flds
pop
cmp
pop
loope
cmc
jo
fbld
mov
dec
mov
data16
fcoml
lock
test
call
mov
addl
pop
add
mov
enter
rclb
jg
shll
jno
test
nop
adc
mov
xor
push
or
outsb
inc
lcall
cmpsl
xchg
pop
or
and
or
inc
loop
and
add
jnp
popf
addr16
xor
or
sti
mov
mov
or
nop
out
push
and
popf
mov
adc
or
xchg
add
lods
fiadds
lds
sub
mov
clc
cmp
sbb
stos
jne
in
cmp
dec
dec
jmp
pop
subb
inc
mov
cmpxchg
pop
pop
mov
sub
push
or
leave
add
push
push
roll
and
fbld
sub
or
mov
push
dec
sbb
jecxz
add
pop
cmp
cltd
add
sub
add
pop
inc
sub
push
jo
sub
push
pop
and
jo
in
xchg
add
ret
popa
and
xor
in
or
and
jg
xor
outsl
push
sbb
pop
leave
push
sbb
mov
shlb
orl
in
out
push
test
cs
add
push
cmp
in
in
or
jge
lods
ret
jmp
inc
sub
xor
inc
lea
sub
dec
push
test
push
rclb
xchg
cmp
cmpl
test
data16
xor
pop
loopne
dec
jge
movb
adc
mov
lret
sti
addr16
push
mov
pop
pop
jmp
jmp
inc
xchg
jo
push
adc
and
add
imul
push
or
rol
add
push
dec
or
orb
push
adc
fsubs
sbb
adc
dec
enter
sub
stos
les
xor
mov
push
test
mov
stos
jbe
cmpl
xchg
cmp
or
adc
insl
shlb
lret
ret
push
mov
sbb
push
bound
rclb
pop
rolb
outsb
push
rol
orl
add
add
mov
mov
sub
inc
int
adc
pop
add
add
das
aam
or
add
das
cld
push
lea
push
out
dec
inc
add
sti
add
sbb
pop
fsubl
daa
add
and
adc
jle
adc
sbb
jb
pop
rcrb
add
pop
shll
daa
push
mov
xchg
lcall
or
mov
cmp
js
daa
mov
jne
shlb
or
mov
add
rorb
cmp
js
mov
scas
js
loop
sbb
add
ljmp
cmpl
ror
sbb
mov
stos
pop
fdivrs
or
adc
pop
cmp
clc
jne
push
mov
addb
sub
jo
pop
fidivs
sub
outsb
xchg
and
in
subl
sbb
dec
in
stos
adc
rcrl
and
repnz
or
nop
nop
pop
and
int3
sub
and
push
mov
nop
incl
jmp
mov
inc
rolb
pop
add
leave
int3
ss
test
imul
loop
pop
cmp
xor
xchg
int
dec
add
or
inc
sbb
adc
iret
add
pminsw
push
add
mov
and
xchg
cmpsl
test
fsts
roll
push
mov
mov
div
cmpsb
mov
or
jmp
mov
pop
push
in
adc
insl
idivl
sbb
mov
inc
add
movsl
fld
xor
mov
outsl
add
xor
or
ds
adc
inc
push
inc
dec
mov
mov
cmp
push
and
sbbb
xchg
fs
xchg
xorb
imul
or
es
or
push
xor
fcmovne
shlb
xchg
adcb
sub
and
and
mov
inc
stos
lret
add
xor
fistpl
jo
and
adc
lock
xor
addr16
or
movsb
mov
mov
ret
push
cmc
out
jno
pop
clc
push
mov
shl
sub
pop
push
ret
mov
add
sar
sbb
mov
jno
clc
mov
add
hlt
mov
ficoml
inc
cwtl
xchg
push
cmp
or
call
lret
test
cmpb
sbb
cmp
xor
push
iret
test
in
shr
push
loopne
push
outsb
test
xchg
push
push
mov
subl
mov
mov
pop
cmp
fstpt
xor
sub
or
imul
inc
jns
add
cld
testb
dec
test
lods
cmp
or
shrl
rorb
xchg
and
fisttps
pop
or
imul
aaa
ficoml
cmp
mov
sub
xor
ret
and
pusha
dec
sub
xchg
mov
roll
xor
rolb
adc
fildll
loope
mov
pop
push
lock
push
mov
cmp
jb
xchg
dec
and
jmp
adcb
addr16
jecxz
xchg
cld
add
dec
testb
adc
btc
or
xchg
pop
or
dec
or
lret
ret
test
add
cmp
jne
cmp
insb
add
pop
inc
pop
lahf
inc
add
in
ret
in
testl
fsubrs
arpl
data16
adc
rcll
pop
sub
notl
mov
pop
sub
jne
out
sub
jo
popf
inc
shrl
ret
sbb
xchg
pop
inc
pop
adc
test
test
int
sti
push
lods
and
xor
sarl
push
mov
inc
mov
sbb
xchg
insl
mov
jle
jne
push
mov
pop
adc
aad
inc
jmp
or
pop
shlb
sbb
addb
mov
jmp
mov
roll
data16
test
mov
jge
ret
xchg
dec
sbb
cmp
pusha
dec
in
inc
mov
insb
sub
sub
imul
adc
movsb
insl
ja
inc
push
dec
mov
sub
adcl
das
std
fsubl
pop
mov
adc
mov
jns
aad
inc
test
inc
pushf
nop
sub
mov
mov
cmp
cs
outsl
dec
add
sbb
xchg
jl
push
inc
nop
mov
inc
les
test
push
cmp
sbb
incb
dec
jnp
jns
imul
push
in
lds
sbb
adc
jb
lods
loopne
insb
inc
nop
inc
mov
pop
enter
insl
lahf
stc
mov
je
mov
cwtl
popa
sub
sti
and
in
inc
push
mov
nop
popa
arpl
xchg
xor
jb
outsb
loopne
lahf
leave
adc
push
pop
pop
push
test
dec
fcoml
sbb
lret
adc
inc
outsl
push
jb
dec
adc
insl
mov
mov
out
in
push
lea
cltd
lock
sbb
lods
gs
push
shlb
adc
xchg
int3
xchg
dec
push
nop
hlt
in
and
add
and
shll
push
enter
and
hlt
dec
rorl
mov
enter
add
xchg
aaa
pop
xchg
adc
sub
sbb
inc
sbb
inc
adc
xor
dec
mov
mov
jb
or
dec
dec
daa
xchg
jae
in
shl
sub
xchg
out
jmp
sbb
fdivrs
loope
jnp
xchg
sbbl
je
mov
dec
push
fsubr
inc
pmulhuw
jb
test
jne
clc
ret
imul
test
xchg
cwtl
mov
push
xor
lods
jne
jae
or
and
movsb
add
adc
push
mov
loope
test
inc
sahf
or
mov
or
adc
sbb
adc
sbbb
call
repnz
ja
mov
sbb
ja
in
int
enter
rolb
and
mov
js
call
add
pop
dec
sbb
mov
pop
mov
jne
lea
sub
cld
sub
and
mov
cmp
pushf
fidivl
pop
popf
and
fcom
inc
cwtl
test
cmp
repz
dec
pop
sbb
adc
dec
inc
enter
subb
sub
inc
and
repnz
inc
mov
dec
dec
orb
imul
stos
jecxz
pop
lock
add
adc
fcoms
inc
pop
stc
shld
mov
test
inc
xor
sbb
mov
popa
push
shll
and
jae
cld
dec
sbb
adc
pop
add
or
dec
clc
hlt
in
adc
xchg
scas
dec
add
add
pop
jnp
loopne
xchg
jge
pop
fiaddl
sbb
dec
dec
mov
aam
fcoms
add
add
rcll
cmp
pop
xor
pop
hlt
fwait
aam
sub
pop
pop
push
pop
jge
pop
leave
mov
push
movsl
cmpb
stos
nop
jo
mov
shlb
push
or
fcomps
dec
ret
pop
in
jge
int
and
xor
sbb
push
sub
call
scas
in
inc
mov
fidivl
sub
mov
jb
clc
pop
iret
mov
mov
mov
enter
lods
movsl
push
sub
dec
xchg
notl
or
fwait
pop
mov
push
dec
jg
mov
push
mov
aas
and
jns
mov
adc
cmpb
ficomps
jae
cwtl
jl
inc
or
pop
loopne
cmpsb
sbb
rolb
xchg
shl
popf
das
sti
cmpsl
sub
push
mov
push
xlat
dec
push
adc
out
or
mov
scas
or
xchg
mov
fildll
aas
mov
pop
add
das
pop
repnz
cmp
or
cmp
mov
or
push
cmp
inc
es
and
add
lods
in
pop
inc
mov
mov
out
and
pop
nop
rclb
add
adc
adc
sarb
push
or
out
popf
sbb
push
stc
outsb
sub
movsb
adc
out
or
push
mov
dec
movsl
lods
mov
mov
push
shlb
inc
push
mov
pop
push
push
in
xchg
lret
hlt
or
out
add
or
lods
push
sub
adc
out
fldenv
out
fisubs
orl
xor
xchg
cmpl
inc
out
sub
pop
pop
pusha
fs
push
test
js
in
add
js
pop
cmpsl
dec
push
lods
adc
mov
mov
movsb
push
test
enter
sahf
push
insb
addr16
fadd
clc
mov
loop
mov
pop
push
movsb
out
push
mov
and
stos
jbe
lahf
pop
xor
jnp
inc
push
cmp
mov
xchg
or
in
mov
pusha
incb
jb
stos
and
loopne
mov
push
dec
mov
push
push
mov
mov
xchg
shlb
push
push
xchg
mov
push
push
adc
mov
repnz
mov
cmp
adc
jnp
out
aas
cwtl
pop
call
adc
out
js
jmp
mov
cltd
sub
cmp
jo
jnp
sub
nop
dec
stos
pop
push
xlat
jg
rorl
sbb
mov
lahf
testl
addb
clc
cmc
mov
imulb
fdivp
sahf
repnz
lods
push
sub
inc
xor
out
insb
lcall
iret
repz
stc
xor
out
in
insb
mulb
popa
cmpsl
adc
xor
test
dec
jnp
int
xor
test
leave
pinsrw
dec
insb
gs
js
gs
imul
repnz
or
incl
inc
pop
dec
mov
adc
push
jbe
es
push
je
std
dec
mov
push
dec
dec
nop
dec
push
inc
dec
push
push
dec
inc
pop
pushl
outsb
jbe
insb
imul
outsl
je
jne
jo
adc
divb
gs
gs
es
push
js
lods
loopne
insl
jo
daa
sbb
fisubs
sub
mov
leave
lds
or
aaa
pop
sub
hlt
add
ret
adc
es
dec
negl
lods
dec
mov
out
fs
inc
mov
xlat
or
imul
pusha
push
dec
inc
push
push
testb
imul
je
adc
inc
addr16
jb
jbe
gs
popa
addr16
push
dec
repnz
addb
movsb
in
das
lcall
pop
adc
daa
inc
loope
cmp
xor
push
lahf
inc
das
mov
es
repnz
add
pop
ds
into
repz
add
arpl
jo
dec
dec
adc
inc
je
xlat
xor
gs
dec
jae
inc
sub
outsb
dec
xchg
cmp
dec
inc
push
dec
inc
dec
xor
push
outsl
push
mulb
ja
inc
pop
dec
imul
sbb
jae
pusha
clc
in
inc
jne
outsb
je
gs
je
push
outsl
insb
inc
out
cmp
and
lcall
mov
movsb
push
inc
jb
jge
idivb
sbb
xor
dec
gs
outsl
fwait
out
outsb
gs
inc
imul
fcomps
mov
mov
outsl
arpl
je,pn
es
test
add
enter
inc
fldt
inc
and
pop
insl
fs
addr16
push
insb
cmp
into
lcall
arpl
jne
loop
aas
cmp
gs
jb
dec
dec
pusha
jnp
cltd
out
mov
cs
push
inc
notb
mov
or
popa
jne
je
dec
dec
popa
movsb
pop
int
jne
aaa
push
jae
xor
insb
cltd
xor
insb
lock
and
int
add
scas
lea
pop
iret
shrl
cltd
push
inc
lcall
xchg
xchg
daa
push
and
push
xorb
jns
cmp
mov
ds
push
push
nop
xchg
push
xchg
xchg
xchg
jge
dec
jle
dec
add
xchg
push
mov
mov
lods
dec
sbb
jl
pop
fisttps
test
js
imul
sbb
js
imulb
sub
cmp
or
add
ja
imul
xchg
cs
pop
jbe
call
jae
aaa
insb
imul
stos
ljmp
arpl
jb
punpcklwd
cmp
add
rclb
sbb
jo
sub
gs
jns
xchg
jo
roll
outsl
push
int3
fdivl
dec
dec
dec
dec
jo
push
inc
sbb
in
scas
dec
push
push
add
inc
inc
pop
inc
inc
push
dec
push
push
stos
test
push
push
testb
pushf
push
iret
repz
xchg
nop
mov
push
cmp
fists
xchg
addr16
xchg
dec
adc
add
or
jno
add
sub
test
dec
cmp
pop
arpl
pop
push
arpl
xor
test
orb
testb
cs
dec
or
cmp
insb
in
arpl
and
push
fsubr
enter
fisubrs
imul
sbb
in
mov
jns
iret
imulb
push
mov
mov
insb
push
iret
fs
pop
jmp
push
and
insb
ss
mov
jl
ss
mov
fmul
imul
push
push
test
pmaxub
out
jb
imul
imul
test
ja
iret
and
cs
add
dec
dec
push
push
add
mov
push
pusha
data16
inc
jbe
inc
in
jp
sahf
lock
shlb
inc
dec
shlb
or
insl
outsl
dec
outsl
inc
test
and
dec
out
push
popa
pop
and
stc
call
js
je
repz
rep
pusha
push
dec
inc
adc
pop
movl
push
jge
insb
popa
sub
add
jne
fs
je
cmpsl
imul
mov
jns
int3
push
jl
int
cmp
jg
push
jle
lods
imul
inc
insl
iretw
mov
das
icebp
das
int3
and
pop
rol
cmp
push
mov
inc
xor
rorl
cmpsl
fs
adc
push
push
inc
popl
addl
push
push
mov
xchg
inc
xor
jne
add
xchg
pshufw
pushf
xchg
sub
xchg
xor
mov
mov
inc
inc
dec
push
xchg
mov
xorl
adc
daa
pop
adc
mov
loopne
popa
cs
movhps
clc
mov
sahf
dec
lock
or
add
es
sldt
pop
adc
jns
andb
jg
xor
call
repz
clc
popf
imul
imul
lret
and
sub
scas
daa
lds
das
movsb
aaa
cmpl
movsl
inc
cmp
dec
ficoms
push
imul
das
cmp
lds
lahf
out
nop
shll
bnd
lret
xor
xchg
lcall
push
test
lcall
js
movsb
stos
repz
jns
sub
mov
xor
scas
sarl
cli
sbb
test
jne
gs
push
xor
push
mov
out
aas
je
mov
adc
inc
jae
push
fcoml
sub
mov
mov
jg
ss
mov
ds
lret
push
inc
mov
js
out
mov
inc
mov
xorl
cmpsb
mov
mov
pop
dec
and
mov
and
or
sub
mov
clc
xchg
je
je
dec
popa
jo
je
push
outsl
or
nop
mov
sbb
pop
nop
ja
or
or
jns
leave
inc
fmull
mov
insb
push
sbb
test
xchg
pop
mov
les
out
push
mov
out
inc
adc
insb
pop
pop
and
data16
mov
jbe
mov
lods
lock
adc
jl
test
pop
mov
adc
mov
rcrb
dec
sub
iret
roll
fs
addl
cmp
jae
addl
ljmp
jp
daa
dec
inc
dec
inc
jb
insl
and
rcr
push
sbb
push
int3
outsl
jnp
mov
mov
mov
lods
adc
jp
xor
xor
xchg
adc
push
cmp
dec
fsub
inc
adc
sbb
inc
outsb
jne
out
insb
popa
jns
xchg
sbb
sbb
mov
mov
outsl
inc
inc
das
in
int
cmpsb
fildl
insl
push
outsl
jl
daa
push
mov
jno
lcall
lahf
addl
ja
adc
cli
push
push
inc
push
lret
add
mov
sub
pop
test
mov
imul
jae
add
xchg
cmp
push
insb
outsb
gs
jnp
mov
push
jb
jo
imul
insb
xchg
adc
pop
cmp
dec
inc
jo
push
jbe
aas
xlat
fidivs
arpl
jns
bound
add
fs
push
jne
mov
jo
inc
sub
xor
scas
scas
shrl
push
arpl
pushw
insl
insl
mov
bound
inc
jg
cmpsb
popa
in
jb
popa
pop
ja
mov
push
inc
rol
imul
dec
orl
ds
xchg
lahf
cmpsl
stc
cmp
scas
ror
ljmp
iret
sarl
popf
notl
pushw
repz
out
loopne
movsb
pop
loope
jnp
dec
mov
push
sbb
stc
adc
add
push
pop
in
mov
repnz
inc
aad
cli
nop
seto
aas
xchg
iret
stos
adc
movsb
xchg
sbb
shl
outsl
insb
cmp
push
jae
ja
insl
cmp
mov
rclb
ucomiss
adc
sbbl
mov
adc
xor
sahf
out
pop
jg
leave
out
repz
repz
cmp
stos
cmpsl
stc
cmp
mov
dec
out
cmp
je
mov
lock
outsl
imul
or
iret
out
fadds
das
mov
mov
repnz
ret
sbb
std
rorb
bound
movsl
iret
loope
rorl
data16
prefetchwt1
or
mov
sub
test
fwait
pop
hlt
push
pop
or
pop
jnp
je
loopne
xchg
cmp
adc
call
pusha
fwait
jno
popf
jge
mov
xor
orb
add
subb
mov
daa
inc
addr16
je
insb
dec
gs
ds
insb
jo
push
outsl
arpl
mov
std
fiadds
fistpll
incb
mov
jmp
dec
stc
repz
testb
jb
test
jns
out
stc
stc
mov
jns
dec
fmull
cmc
dec
mov
cmc
push
xor
out
testb
into
pop
notl
ds
xrelease
jge
int
lret
xor
ja
add
jl
push
add
xor
les
aam
add
enter
sbb
inc
adc
pop
sub
cld
and
xor
cmp
gs
mov
xor
cmp
pop
in
call
jle
das
xor
xor
and
enter
int
inc
pop
pop
add
in
sub
pop
cli
sub
movsb
mov
or
sti
cmp
sarb
das
sahf
and
das
or
adc
adc
add
sub
stos
pop
lret
das
or
icebp
jbe,pn
xor
sbbb
or
jl
jmp
add
dec
hlt
and
xchg
xor
cld
cld
sbb
inc
std
push
pop
imul
jae
lods
out
sbb
pop
lods
into
add
add
pop
dec
cmp
jle
xchg
jnp
and
add
inc
jle
pop
adc
pop
dec
cmp
jle
xlat
arpl
popa
addr16
jg
test
js
jae
rdmsr
add
subps
sub
jb
push
dec
inc
adc
pop
cld
adc
popa
dec
and
push
jo
incb
pop
or
inc
fs
mov
bound
fcomps
cmp
dec
lcall
psrlw
pop
push
imul
aas
or
arpl
outsb
fs
or
scas
gs
mov
outsl
mov
pop
mov
sub
sub
aaa
adc
jo
outsb
hlt
mov
sti
das
inc
jne
inc
push
jns
xchg
imul
xor
xor
add
add
jae
repz
ds
xchg
inc
sub
aaa
xlat
dec
imul
jne
jne
mov
push
mov
lahf
outsl
movsl
nop
pop
mov
xchg
cmpsl
cmp
sbb
testb
filds
adc
shll
mov
repz
push
cmp
in
or
and
pop
nop
pusha
and
push
dec
cmpsl
cmp
outsb
fsubr
and
sahf
out
cwtl
lods
shlb
push
sub
inc
ja
addl
mov
mov
push
bsf
lock
adc
push
cmp
int3
int3
sub
lods
das
inc
inc
jns
jb
jns
mov
int
xchg
mov
jne
out
loopne
xchg
sbb
pop
out
int3
xlat
ja
add
and
mov
pop
insl
and
pop
shlb
loop
and
cmp
je
cwtl
je
pop
aas
xchg
es
sub
ds
add
cmp
sub
out
shlb
imul
pop
test
xor
push
loopne
and
and
sbb
sub
lods
rclb
sbb
sbb
add
dec
dec
cmp
repz
add
dec
and
jns
add
inc
ja
dec
das
das
jns
push
dec
je
in
add
push
insl
cld
mov
mov
dec
cmp
push
test
mov
pushf
dec
shrb
outsb
or
pop
enter
cmpsb
popa
and
bound
push
inc
jae
fstl
inc
adc
xchg
into
mov
outsb
jns
jg
int3
jae
inc
ljmp
imulb
and
daa
push
gs
sbb
std
push
jp
xchg
push
jne
xchg
out
jae
outsl
pop
dec
inc
ds
pop
cmp
jo
or
outsl
or
mov
imul
mov
add
insb
add
imul
into
mov
push
outsb
imul
jecxz
mov
aad
mov
and
mov
lods
lods
mov
jo
mov
mov
imul
inc
sbb
popf
cmpsb
pop
dec
gs
jo
outsb
andb
insl
popa
aaa
inc
repnz
mov
inc
outsb
arpl
lods
inc
dec
mov
sbb
dec
scas
inc
adc
dec
and
push
inc
insb
jae
or
or
cmovl
xchg
scas
xor
inc
inc
insb
insb
sub
sbb
pop
data16
nop
loop
loope
sahf
lods
mov
lds
mov
mov
inc
or
inc
loopne
mov
pop
push
dec
dec
inc
cmovle
dec
inc
daa
dec
dec
add
out
dec
lock
push
pop
pop
inc
push
pop
ficomps
pop
dec
dec
dec
inc
push
inc
inc
adc
es
push
fadd
inc
mov
in
ficoms
add
jo
int
out
pushw
add
add
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
ljmp
sub
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
imul
ficoml
add
pop
or
pop
pop
pop
inc
mov
fcomip
pusha
popa
bound
addr16
imul
jno
mov
ja
jns
jnp
jge
jg
pop
cs
push
pop
rcll
cmp
cwtl
jb
clc
push
jne
sub
je
sbb
push
add
lahf
push
jge
add
add
add
and
push
pop
sahf
add
xor
push
push
pop
shlb
push
add
jge
stc
or
pusha
add
js
js
pop
sub
adc
xor
sbb
add
mov
insb
xchg
mov
dec
dec
push
push
and
xchg
out
sbb
inc
mov
inc
and
lcall
inc
adc
inc
and
and
dec
cmc
int3
and
and
jae
pop
adc
je,pn
mov
and
mov
and
sub
and
or
cli
aad
jb
and
cmpsb
lods
xchg
jo
push
mov
and
in
fidivl
adc
daa
mov
dec
fwait
sbb
insl
and
cmp
xchg
add
aas
xor
mov
dec
mov
rolb
negb
and
add
fs
cmp
outsb
xchg
jbe
dec
mov
popa
and
or
pop
sub
and
in
aam
jnp
push
add
push
and
test
or
imul
pop
mov
popf
jb
fsubs
outsl
mov
sbb
test
fcoms
sub
inc
jo
dec
sub
arpl
cmp
jo
or
sub
out
and
sub
and
subl
cmp
imul
lret
int3
or
jp
or
pusha
sbb
mov
popa
pop
lds
sub
xor
gs
cmpl
push
fistps
push
or
outsl
xlat
push
out
xchg
shll
or
add
add
sub
mov
ja
outsl
outsl
or
or
push
hlt
pusha
in
jo
cli
jbe
add
je
and
xor
xorl
das
mov
xor
or
cmp
ret
out
cmpb
push
pop
scas
sbb
cmp
jo
bound
push
idivb
insl
in
ljmp
imul
sub
pop
out
pop
or
pop
cmpsl
inc
jno
rclb
leave
xor
add
jbe
int3
enter
fnstsw
adc
push
cmp
mov
xacquire
cmp
push
or
into
add
lret
cmp
jne
jae
xor
inc
add
je
rorb
mov
addl
jo
aas
js
push
imul
dec
insl
iret
dec
or
dec
pop
add
cmp
test
cmpb
jne
ds
gs
dec
adc
int3
pop
and
dec
cmp
pop
shll
add
dec
dec
sahf
dec
lea
mov
mov
xchg
xchg
xchg
lock
dec
xchg
int3
or
push
out
inc
out
mov
sbb
xor
push
addb
adc
xchg
xor
aaa
addb
test
lahf
dec
fstl
sub
cmp
inc
pop
data16
clc
or
push
mov
jb
fisttpll
add
or
jo
ja
cmp
roll
sub
aaa
arpl
movsl
jle
push
in
push
loop
xchg
lret
dec
jae
sub
push
mov
sbb
dec
xchg
push
daa
and
scas
add
inc
andb
divb
inc
jg
and
dec
xchg
jns
inc
push
aam
adc
ds
cmp
rclb
imul
add
loopne
ss
in
mov
jae
jmp
fisubs
sbb
outsb
jbe
mov
shlb
push
pop
pusha
inc
jbe
push
cmp
mov
push
lahf
fs
sbb
pop
or
adc
cmp
outsb
and
push
and
inc
es
dec
mov
mov
lock
fcomps
addr16
xchg
pop
pop
pop
push
imul
aas
cmp
insb
call
push
or
mov
das
outsb
gs
mov
or
jbe
lahf
or
ss
push
push
push
push
dec
testl
insb
jne
repnz
pusha
outsb
mov
cmp
or
jge
lods
cmp
aas
jg
or
mov
jo
mov
popa
test
push
jg
jae
inc
push
shll
xor
das
outsl
push
sbb
jg
test
mov
or
stos
outsb
aad
das
je
outsl
xchg
push
mov
mov
popw
mov
rcrl
pop
cmp
cmp
ds
mov
das
push
sub
imul
addr16
jle
sbb
sub
fs
out
dec
pop
loopne
out
sub
mov
pop
sub
cmp
cmp
mov
cmp
jb
ja
dec
pop
pop
clc
gs
stos
mov
jb
push
das
jo
ss
sub
mov
js
hlt
sbb
push
xor
in
test
xchg
popa
jo
push
out
mov
jl
sahf
sbb
out
sub
je
out
pusha
jnp
out
push
dec
cmp
sub
out
insb
ds
sbb
pop
dec
pop
das
push
sub
mov
in
cs
jl
iret
repz
data16
xor
hlt
push
lock
call
or
aam
repz
repz
int3
enter
iret
repz
mov
movsb
cmp
repz
pushf
cwtl
xchg
nop
repz
repz
repz
js
jo
push
cmp
dec
inc
cmp
and
cmp
xor
mov
cmp
cmp
cld
xor
jns
out
mov
mov
insb
dec
inc
xor
jns
ja
or
xor
lahf
ja
out
add
das
xchg
push
mov
jo
xcrypt-ecb
cmpsl
ja
add
and
pop
and
xchg
sbb
xchg
adc
and
xorb
add
ja
cltd
xchg
push
aad
push
add
add
in
loopne
add
add
stos
subb
mov
incl
adc
sbb
push
mov
add
pop
adc
out
aas
sub
addb
xchg
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
ljmp
mov
mov
mov
mov
mov
mov
ret
enter
dec
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
jmp
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
adc
or
and
pushl
mov
inc
add
lea
push
jne
gs
add
pop
imul
outsl
dec
lahf
popa
add
xor
sarb
bound
outsl
inc
loop
push
mov
je
inc
push
popa
pop
popa
data16
xor
sbb
and
add
mov
popa
into
jo
mov
sub
jb
push
rcrb
push
outsb
aas
push
and
lea
sub
push
outsl
and
or
push
insb
daa
xor
xchg
bound
push
in
repnz
arpl
cltd
jl
adc
mov
jae
imul
ljmp
jne
xchg
outsb
pop
cli
lea
pop
insb
mov
jne
jne
dec
xor
xor
lahf
and
cmp
mov
imul
popa
pop
adc
imul
dec
inc
insl
sbb
outsb
pop
test
pop
rclb
xchg
jp
jae
sbb
xchg
pusha
add
daa
pop
sub
cmp
pop
loopne
mov
xor
lock
inc
and
adc
outsb
mov
and
push
push
pop
bound
jbe
loope
pop
popa
pop
lret
sbb
xchg
pop
mov
test
dec
outsb
imull
in
imul
jns
jae
daa
mov
imul
pop
ret
lahf
imul
and
push
ljmp
pop
insb
jne
add
xorb
push
sub
data16
popa
jne
cltd
mov
xor
cwtl
xor
loope
or
nop
and
bound
pop
es
push
pop
add
jb
dec
jns
mov
push
out
jno
jbe
push
cmp
clc
xor
test
fwait
mulb
sub
outsb
pop
xor
and
in
aaa
or
mov
pop
add
xor
or
ds
daa
jae
mov
jl
popa
lock
daa
push
lcall
daa
pop
ficoml
pop
popa
outsl
sbbl
adc
std
ret
daa
and
or
out
testb
inc
pmulhuw
pop
xor
out
add
dec
dec
inc
add
out
daa
mov
add
dec
push
add
outsb
pop
js
fs
add
ja
cmp
dec
add
mov
mov
call
lret
xchg
das
pop
add
push
add
out
sti
inc
add
je
push
mov
pop
decb
inc
add
inc
rcpps
xor
shl
inc
inc
add
clc
inc
imul
inc
fcomps
dec
push
int3
push
js
pushf
cld
dec
dec
push
add
push
or
push
xchg
scas
sub
sahf
inc
cmovg
xor
in
movsb
push
cmove
add
add
aas
das
pop
mov
inc
add
dec
add
lret
xchg
test
add
stc
sub
cvtps2pd
pusha
push
add
cmp
popf
das
pop
pop
add
push
add
or
adc
lea
pop
or
add
mov
ds
push
hlt
push
inc
inc
sahf
in
fldl
pop
mov
out
in
pop
ds
int3
adc
ds
mov
add
fisubrs
stc
out
push
push
dec
add
dec
add
xchg
pop
repz
dec
push
pop
inc
dec
mov
push
dec
pop
out
and
incl
or
or
or
adc
add
or
mov
or
adc
sbb
add
dec
lahf
fsubrs
sbb
dec
inc
gs
push
pop
loop
add
in
xchg
popa
pushf
lcall
add
mov
jne
daa
jo
sbb
pop
xchg
dec
mov
ds
outsl
js
jg
adc
xor
push
lret
dec
dec
inc
add
icebp
pop
inc
inc
push
das
inc
xchg
push
and
xchg
arpl
and
xlat
mov
aad
jbe
pop
dec
pusha
daa
mov
lea
out
push
xchg
mov
cmp
mov
mov
adc
repz
scas
mov
sub
pop
mov
or
mov
mov
sub
xor
push
inc
jae
scas
mov
clc
jbe
mov
mov
sub
lds
addb
ds
mov
iret
enter
mov
cld
adc
sahf
mov
inc
xor
inc
push
add
ret
mov
add
arpl
outsl
add
imul
lret
dec
pusha
repnz
mov
push
dec
push
add
cmpsb
dec
fisttpl
add
imul
loopne
outsl
jae
scas
inc
cli
mov
pusha
cmp
sbb
mov
in
jmp
fucom
rcrl
adc
pop
das
mov
rcll
xchg
adc
clc
xlat
scas
clc
lcall
or
cmp
rclb
cmpl
dec
dec
mov
inc
inc
push
push
popa
jmp
push
sahf
enter
fdecstp
jae
rcll
mov
lock
jg
cltd
or
jnp
mov
cwtl
ds
daa
orl
jb
imul
shlb
xor
pop
pop
insl
add
imul
dec
xchg
mov
imul
je
adc
insl
insb
adc
cs
hlt
sub
jns
push
jbe
add
dec
and
into
data16
add
push
inc
push
inc
pop
add
jns
adc
xchg
dec
je
sub
js
out
xor
ss
inc
adc
loop
add
push
mov
and
pop
jle
and
jbe
daa
jne
sub
add
test
aas
mov
xor
adc
jne
das
sbb
testb
mov
jo
sub
mov
xor
sti
loope
sbb
xchg
loop
clc
cmp
pop
and
cmpsl
push
adc
mov
pop
popa
imull
xchg
mov
pop
call
int3
sub
test
ret
cmp
dec
inc
inc
stc
and
insb
sub
shrb
test
fimull
push
jae
cmp
mov
sbb
ljmp
imul
push
jae
pop
dec
push
inc
rol
rcrb
adc
push
push
loop
call
dec
xchg
xchg
incl
movsb
mov
adc
push
in
popf
xchg
in
lcall
test
or
jo
xor
insl
lcall
jmp
test
xchg
mov
aaa
adc
aas
and
dec
shr
mov
dec
inc
mov
jl
mov
test
xor
mul
aaa
dec
aas
ffree
pop
or
mov
add
scas
ja
in
faddp
cmpsl
cmp
add
andl
dec
addr16
pushf
nop
int
mov
dec
cmp
dec
adc
or
ja
jae
stc
dec
pusha
js
add
push
pushf
jb
iret
aad
pusha
add
test
or
lock
or
or
pop
test
dec
xor
fiaddl
cltd
xchg
dec
test
scas
sbb
ds
add
push
nop
push
lods
das
inc
iret
dec
push
cld
push
outsl
mov
xchg
enter
insl
inc
fcomps
int
mov
add
sbb
xor
in
jo,pt
divl
js
add
dec
xchg
mov
xchg
jbe
mov
outsb
leave
mov
iret
push
mov
xlat
int3
push
add
mov
dec
test
adc
jl
or
and
clc
paddsb
int
test
push
adcb
or
adc
es
lods
cmpsl
movntq
adc
pop
shr
push
dec
dec
jns
dec
je
push
call
add
mov
xchg
je
jo
stc
outsl
dec
xchg
push
cmp
idivb
push
cmpsb
in
outsl
jne
push
out
mov
aad
mov
les
loopne
ror
add
negb
adc
loopne
pop
pop
add
push
pop
push
xchg
pop
rep
lods
jbe
out
dec
clc
or
pop
rorl
pop
imul
clc
outsl
inc
enter
sbb
and
xchg
fiadds
inc
push
sbb
daa
scas
dec
mov
push
loopne
mull
jo
jl
cwtl
das
inc
jb
mov
pushl
lahf
decl
lock
mov
stc
push
outsl
xchg
mov
push
enter
cmp
dec
push
mov
stc
push
outsl
xchg
aam
inc
jns,pn
mov
js
push
je
mov
dec
insb
pop
sub
ja
sbb
adc
dec
enter
push
xor
sbb
iret
mov
inc
ja
cmp
pop
enter
test
pop
jb
fs
mov
cmp
test
aam
pop
iret
test
addb
mov
adc
and
cmp
push
repnz
mov
push
push
lcall
jo
push
dec
js
pop
dec
ja
and
lahf
js
dec
call
push
lcall
int3
daa
js
add
ds
mov
out
cld
add
push
push
mov
push
add
or
pusha
insl
sbbl
lahf
outsl
dec
movsb
push
aas
mov
in
negb
rclb
add
lock
inc
xor
loope
or
iret
cmp
jb
mov
mov
in
xchg
mov
ret
pushf
das
sub
or
data16
mov
in
mov
dec
push
mov
mov
daa
aas
dec
repnz
lods
lods
addr16
je
pop
or
adc
cmp
je
movsb
flds
lcall
outsl
xchg
push
dec
mov
lahf
mov
out
cmc
mov
fcomps
in
mov
add
test
sbb
and
scas
mov
xchg
outsl
add
fdivp
push
insb
push
mov
cld
push
repnz
ficomps
pop
es
lock
ds
mull
dec
mov
sbb
inc
add
stos
ret
push
enter
inc
pop
sub
xchg
fs
pop
outsl
add
xchg
popa
filds
or
insl
out
mov
jns
push
loopne
cld
pop
pop
push
pop
xlat
sahf
or
pop
pop
mov
stos
js
dec
mov
sub
ja
pop
out
je
das
je
mov
mov
nop
outsb
lods
pop
addb
add
incl
lahf
addr16
dec
icebp
dec
push
mov
daa
in
pop
sub
pop
inc
mov
popa
outsl
add
adc
xchg
pop
and
daa
or
mov
test
inc
lcall
pop
jnp
mov
outsl
dec
hlt
daa
ja
cmp
mov
or
xchg
nop
fldenv
cmp
dec
pop
pop
mov
jb
pop
add
xchg
adc
cwtl
movsb
inc
cs
dec
adc
in
nop
out
aam
lock
fldl
mov
xchg
mov
cmpsl
cmp
or
aaa
out
mov
clc
es
xchg
insb
add
pop
in
and
out
insb
jo
push
mov
jg
out
test
enter
rcl
push
sbb
out
insb
into
xchg
sub
adc
and
pop
add
leave
xor
leave
outsl
es
shlb
jo
adc
negb
js
ds
mov
sahf
mov
movsb
mov
jl
jmp
test
loopne
and
lahf
out
cld
sbb
and
mov
outsl
mov
notb
jb
push
dec
daa
addr16
ja
add
out
jne
das
mov
mov
stos
adc
imul
adc
adc
addr16
push
add
mov
pushl
popa
testl
or
pop
insb
fsubrs
mov
outsl
and
je
aaa
test
xchg
lods
sub
ja
aam
repz
les
inc
jb
outsb
jnp
fsubl
aas
add
pop
mov
push
mov
mov
sub
inc
push
outsl
fcoms
mov
xchg
fsubrl
dec
or
inc
arpl
cld
nop
arpl
push
mov
cld
aaa
iret
inc
imul
jmp
shlb
stos
outsl
and
cld
arpl
mov
xchg
inc
sub
testb
cmp
dec
fs
inc
jl
sub
ja
pusha
test
bnd
pushf
jo
pop
enter
sbb
fcompl
call
andb
int3
xchg
shll
inc
push
sbb
cmp
add
leave
test
shll
lods
cmp
daa
addr16
nop
sub
push
add
cs
mov
les
leave
xchg
cmp
jo
in
push
enter
cld
pushl
xlat
ficoms
call
pop
sbb
add
imul
lods
roll
jecxz
out
sahf
out
xchg
cmp
sub
pusha
mov
clc
ss
out
lcall
out
iret
repz
push
jp
mov
push
xchg
enter
out
lcall
jmp
cmp
in
sahf
cmpsl
stc
or
cmp
mov
xor
out
cli
push
jmp
outsl
cmpsl
stc
cmp
mov
dec
repz
push
fadds
iret
repz
movsl
enter
jns
out
cmp
nop
mov
repz
dec
jo
fdiv
jns
out
lock
sbb
dec
push
js
fiaddl
xchg
mov
paddusb
aas
or
mov
test
add
mov
pop
sub
add
ds
add
popf
cmpsl
push
sub
mov
stos
jo
filds
aaa
jb
pop
adc
jg
add
push
mov
in
mov
pop
mov
hlt
xchg
sub
xchg
inc
dec
and
dec
and
imul
in
mov
mov
or
clc
mov
inc
daa
add
ja
lahf
push
jecxz
jg
je
xchg
jge
jecxz
outsl
push
mov
dec
divps
cmpsl
pop
cmpsb
pop
inc
aas
fadds
pop
leave
push
addr16
push
lcall
mov
jb
mov
pop
jb
les
mov
push
arpl
dec
out
enter
mov
inc
fisttpl
imul
cmp
shl
pop
push
js
pop
jb
mov
in
fisubl
pop
and
mov
inc
in
push
enter
pop
cmp
jnp
in
in
frstor
mov
add
fcmovne
scas
pushf
pop
inc
call
inc
jb
ffreep
sbb
mov
je
daa
nop
mul
jbe
inc
hlt
sbb
scas
addr16
rolb
mov
in
jmp
in
leave
mov
xchg
in
push
in
sbb
mov
mov
jbe
add
mov
cwtl
insl
subl
je
mov
inc
jne
mov
das
xchg
setl
add
icebp
test
and
and
xor
inc
outsb
cltd
dec
mov
jl
dec
dec
mov
not
outsb
jo
das
movsb
jns
popl
add
fcmovne
lock
out
sub
das
nop
and
outsl
adc
cmpsl
add
dec
out
push
adc
sbbb
xlat
aam
repnz
jo
sub
xor
or
fists
movsl
sbb
dec
add
dec
jb
cmp
mov
mov
inc
or
sbb
lods
inc
xchg
push
xchg
dec
mov
rcrb
sbb
cmp
enter
pop
outsb
getsec
out
dec
ss
insl
fstp
pop
inc
push
ja
pop
push
aaa
jns
adc
mov
enter
jno
out
add
subb
cmpsl
xchg
jno
enter
daa
add
in
cmp
jmp
add
jb
jo
mov
call
cmp
dec
scas
sarl
call
callw
mov
push
lock
cltd
loopne
roll
leave
inc
repnz
mov
xlat
inc
push
int3
mov
adc
scas
mov
xor
enter
mov
stos
call
es
je
aaa
inc
je
pushf
scas
adc
jmp
sub
pusha
push
sbb
add
mov
push
daa
xchg
shl
add
jmp
in
jmp
add
mov
push
leave
sub
xchg
rorb
inc
das
aaa
adc
or
jbe
fisubrl
pop
pushl
and
mov
mov
jbe
enter
into
mov
cmp
jne
xor
lds
leave
xor
push
pop
jbe
cmpsl
xchg
iret
push
les
mov
outsl
in
cwtl
jbe
mov
dec
xchg
ljmp
and
rcrb
dec
jb
sbb
sub
cmp
in
pushf
dec
and
bnd
ja
in
and
jg
adc
repnz
loopne
inc
lcall
add
cmp
adc
cmp
aaa
inc
adc
or
cmp
and
pop
shlb
data16
js
dec
scas
stos
dec
adc
js
nop
xchg
xchg
js
das
sbb
cs
or
imul
ss
push
lds
shr
dec
ss
add
dec
enter
aas
pop
push
ror
mov
test
lds
dec
mov
mov
call
cmpb
cmp
not
addl
mov
jb
popf
dec
push
xchg
xchg
mov
or
ret
mov
lea
jle
push
nop
aas
jle
dec
jbe
jno
iret
or
aad
pop
dec
aas
aaa
in
inc
jb
xchg
or
mov
or
int
aaa
fsts
adc
mov
mov
js
sub
leave
mov
lock
enter
and
xchg
int3
mov
rorl
in
out
repnz
mov
mov
ss
out
aas
fucom
adc
out
sub
shlb
and
ss
cltd
fsubrs
cld
add
divl
cs
je
loopne
sub
push
dec
prefetch
push
sti
xchg
sbb
jmp
jle
and
add
pushf
jle
jno
testl
cmp
sub
cs
iret
sub
in
sarl
int3
or
and
aas
cmpl
negb
or
push
lahf
or
push
scas
or
sub
inc
push
mov
repz
aas
pop
cmp
cmp
dec
mov
inc
jb
dec
mov
daa
xchg
pop
aas
sub
dec
and
fs
pusha
ja
xorl
cmpsl
sub
mov
push
in
pop
adcb
jmp
andb
mov
jns
adc
push
add
into
ds
add
add
in
out
xor
dec
insb
cmpsl
bound
jb
jns
decl
and
sar
mov
xchg
dec
inc
in
inc
fistpll
dec
adc
in
out
cmpsb
jne
std
fs
dec
jbe
push
and
nop
cs
dec
cs
mov
dec
call
ret
adc
daa
inc
lret
dec
lods
nop
dec
mov
ret
addr16
ds
xchg
mov
outsl
inc
sub
out
pop
jo
xor
cmp
nop
in
ja
daa
xchg
xchg
je
jecxz
test
out
ja
xchg
imul
sahf
pop
xor
pop
push
mov
cmp
in
repnz
ja
mov
test
sahf
jb
mov
push
test
test
add
adc
inc
mov
xlat
inc
add
xlat
sub
aas
xor
inc
jb
fdivl
sbb
rcrl
jg
jg
loop
rcl
pushf
cmp
adc
sarl
xlat
dec
inc
outsl
mov
ss
pop
inc
xchg
lock
mov
pop
mov
xorb
rcrl
jns
subb
pushf
pop
ss
mov
loopne
dec
hlt
and
sbb
fsubl
fimull
xchg
push
add
test
repnz
divl
lahf
cmp
mov
adc
cmp
nop
xlat
ja
into
mov
mov
test
dec
outsl
nop
in
mov
cld
rclb
mov
leave
mov
lock
into
inc
jb
xor
jmp
add
lock
mov
jae
mov
mov
repnz
loope
or
or
daa
icebp
testl
in
add
and
sub
ss
sahf
out
sbb
icebp
dec
push
add
add
bound
insl
pop
js
jb
cmp
dec
outsb
daa
iret
or
mov
dec
dec
dec
icebp
cld
addr16
pop
repnz
cmpsl
pop
pop
mov
addr16
xor
in
addl
cmp
jno
daa
fs
jo
fimull
daa
pushf
mov
dec
pop
das
stos
inc
xchg
inc
jns
sbb
enter
cmp
ror
mov
lods
xor
add
loope
out
xor
pop
out
fnstenv
incb
int3
rcl
mov
add
je
mov
xbegin
leave
fmull
dec
out
arpl
xchg
fistpl
ljmp
andb
add
loop
adc
mov
insb
inc
jle
push
cs
inc
push
inc
aaa
popa
mov
pop
xor
inc
mov
push
and
or
bound
sub
xchg
aas
jg
dec
and
aas
pop
lcall
dec
push
mov
aas
aas
and
aas
or
in
push
mov
push
inc
cmpsl
and
or
repnz
adc
and
mov
and
sub
cmovg
mov
dec
addr16
push
dec
inc
je
aaa
inc
push
dec
addr16
xor
push
or
clc
mov
xchg
jne
int
mov
or
iret
lret
sub
mov
add
or
and
or
mov
mov
push
test
es
xor
push
das
cmpsb
das
push
roll
mov
pop
sub
lods
cmpsb
jne
outsl
lahf
xchg
pop
mov
inc
movsb
and
mov
inc
cmp
cmpsl
or
or
xor
sub
adc
sub
mull
mov
push
pop
and
cmp
mov
or
xchg
aas
push
push
pop
sar
clc
pop
add
inc
inc
pop
pop
push
dec
push
sub
pop
xchg
xchg
pop
push
push
xchg
dec
sub
push
mov
cmp
fmuls
dec
inc
mov
push
sub
adc
push
jp
push
adc
cld
nop
insb
aam
popa
mov
ss
in
lods
xchg
xchg
inc
pop
ds
xchg
addr16
bound
inc
lahf
lock
pop
inc
inc
push
inc
cltd
xchg
xchg
inc
or
add
addl
aaa
xor
or
cmpsl
and
xchg
and
dec
add
push
into
push
test
push
cmp
inc
xchg
aaa
mov
out
lahf
push
sub
jg
ja
sahf
out
sahf
jbe
je
jb
jns
out
jo
outsb
insl
insb
out
sahf
out
push
push
shlb
dec
push
out
push
in
jns
iret
clc
or
sbb
dec
lahf
out
sahf
pusha
jo
mov
in
out
fidivrs
sbb
xor
fs
pusha
or
jg
repz
les
imul
out
aas
xchg
and
stos
lods
ja
dec
push
dec
dec
dec
inc
dec
push
mov
cmpsb
mov
stos
fbstp
aas
and
sti
cwtl
adc
jns
jle
sub
ds
or
movsb
scas
mov
aaa
mov
adc
push
or
push
mov
inc
inc
add
pushf
loope
and
dec
dec
out
dec
andl
xchg
cltd
lock
je
dec
push
insb
icebp
xlat
shl
fadds
adc
adc
push
inc
cwtl
aaa
inc
lock
add
mov
pop
inc
jo
daa
mov
outsb
test
adc
sbb
int3
icebp
cmpsl
aad
inc
adc
dec
and
jb
push
cmpsl
push
mov
mov
es
daa
mov
in
push
rcll
dec
mov
sub
inc
out
jmp
adc
cmp
xor
pushf
pop
lcall
mov
fimuls
mov
scas
div
loop
shlb
jae
lea
jmp
fistl
cld
pushl
inc
mov
test
sub
push
inc
adc
adc
xchg
dec
fwait
xorl
add
sub
popa
adc
fisttpll
or
outsw
or
sbb
xchg
pushf
xor
clc
dec
in
jl
lahf
out
gs
xchg
pop
xchg
nop
lock
add
inc
push
call
cmp
ror
shlb
pop
xchg
nop
mov
jns
out
test
jns
je
insb
push
out
push
dec
inc
cmp
xor
cmp
repz
or
and
jns
cmpsl
clc
hlt
call
fadd
or
popa
adc
mov
jge
roll
push
pop
inc
add
pcmpgtw
pop
sub
sbb
popf
out
scas
cmp
repz
add
add
iret
repz
or
or
sub
or
fucomi
imul
daa
adc
adc
leave
leave
in
movsb
and
outsb
mov
push
addr16
das
push
xorps
mov
push
and
cs
pop
andb
cmp
addl
sahf
sub
daa
mov
cmpsl
mov
into
aas
jnp
ret
xchg
xlat
sbb
data16
cwtl
push
add
pop
add
push
inc
mov
xorb
stc
rcrl
call
mov
mov
aam
aaa
pop
push
jns
out
cmp
pop
js
mov
xor
out
repz
xor
pop
xor
insl
add
jg
pop
xchg
out
sub
repz
repnz
das
push
dec
bound
mov
movb
mov
rorb
test
cmp
jns
add
push
fs
test
pop
adc
push
mul
or
add
add
movsb
add
cmpsb
fisttps
cs
jb,pt
movsl
sbbl
test
pop
shll
cmovo
pop
inc
mov
or
mov
sbb
in
call
adc
add
mov
xor
fmul
xchg
in
fsubp
stc
jb
jle
cmp
add
imul
jnp
or
push
in
int3
inc
pusha
add
add
pushf
imul
cwtl
daa
push
mov
pop
push
jmp
xchg
sub
iret
repz
rorb
cmp
or
sahf
out
fsubrl
adc
out
sbb
sbb
cmp
repz
sub
mov
cmp
push
je
adc
fmul
sarl
and
sub
inc
js
iret
repz
jns
jp
push
adc
cmp
cld
or
dec
outsb
adc
addr16
sub
pop
aas
cmpsl
add
cwtl
test
add
inc
add
mov
push
scas
xchg
or
adc
xlat
stos
cs
mov
add
je
add
push
or
push
int3
sub
add
in
add
cmp
test
outsl
or
cs
call
test
pop
jg
inc
loop
ljmp
push
jne
daa
pop
add
cmpsb
jmp
or
sqrtps
incl
or
adc
out
xchg
dec
pop
push
add
enter
pop
jb
or
or
ret
sysret
stc
and
and
adc
mov
mov
sbb
into
sbb
rorl
and
lcall
lods
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
lcall
inc
in
adcl
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
jmp
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
call
mov
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
call
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
mov
pusha
les
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
mov
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
add
mov
xchg
jge
pop
ficomps
frstor
dec
cmp
add
addr16
push
add
popa
arpl
gs
push
adc
jne
or
sub
shrb
ja
pop
jle
insl
mov
cmp
inc
dec
cmp
push
arpl
jnp
sarb
je
insl
inc
inc
push
and
popa
jb
pusha
arpl
je
push
addr16
pop
imulb
jnp
adc
inc
pop
sbb
push
or
cmpb
jb
mov
clc
nop
mov
je
inc
sbb
popl
jp
cli
popa
mov
sub
addr16
inc
or
push
jo
xor
pop
pop
dec
pop
movl
pop
sbb
pop
push
inc
mov
cld
fwait
inc
mov
push
xor
cmp
sub
push
xor
bound
push
cs
or
movsb
popa
and
fidivl
clc
jle
adc
inc
ljmp
insl
popa
push
xor
in
out
les
push
dec
inc
dec
push
push
or
pop
loopne
ljmp
inc
adc
add
lds
pushf
inc
push
or
es
mov
mov
lahf
xchg
enter
adc
jmp
xor
pop
cmp
movb
les
inc
dec
sub
mov
add
add
add
add
outsb
movsb
pop
push
and
add
add
cltd
or
pop
cmp
jo
lcall
sbb
push
cld
shrb
movsb
jmp
adc
incb
pop
cmp
cmpsl
imul
insb
ss
rcrb
pop
add
add
jns
dec
mov
aas
lock
push
add
outsb
dec
clc
sar
imul
movl
nop
xchg
cmp
adc
addb
mov
cmpsb
pop
cmp
test
push
leave
dec
test
js
sbbl
fs
rcrb
subl
cmp
mov
fsts
pop
js
xchg
ret
ja
push
add
fwait
in
jae
add
pop
aas
incl
sub
bswap
jecxz
in
jnp
add
pop
jo
sbb
imul
push
ss
jns
nopl
ds
mov
arpl
rclb
pop
jg
aas
cltd
int
int
pop
clc
xor
xor
cmpl
das
inc
dec
xorl
outsb
jle
iret
push
adc
or
add
mov
mov
pusha
add
jo
into
sub
mov
pop
pop
es
inc
data16
out
push
data16
jg
cld
aas
clc
pop
fwait
int
pavgb
les
add
jl
out
frstor
aaa
inc
push
data16
insb
mov
pop
loopne
mov
and
popf
mov
jo
nopl
dec
outsl
inc
add
dec
shrl
into
mov
add
push
pop
cs
push
iret
sbb
sbb
dec
mov
adcl
es
imul
rolb
mov
push
mov
iret
add
jg
pop
stos
or
adc
pop
icebp
fnstsw
add
aaa
inc
push
add
pop
push
iret
decb
cld
jg
aas
insl
rclb
lock
mov
jne
addr16
push
fidivrs
ss
pop
fsubs
lahf
push
add
aad
ss
fwait
insl
repz
sbb
cwtl
add
loop
mov
adc
insb
mov
add
add
mov
inc
adc
inc
and
mov
xor
add
adcb
out
mov
xchg
xchg
jl
xchg
addb
xadd
pop
cmpb
fldcw
aas
cld
ds
cmp
cmp
jl
in
testb
aas
incb
clc
ds
jg
shlb
mov
iret
int
or
pop
enter
imul
cmp
cmp
clc
inc
popa
xchg
sbb
push
dec
aad
jbe
popl
insl
das
dec
addr16
sub
outsl
inc
xchg
repz
push
fmulp
push
pusha
bound
inc
stos
sub
jns
outsl
sub
add
cmp
adc
je
and
aad
outsb
jo
addb
lcall
clc
or
pop
add
cwtl
sbb
and
enter
xchg
pop
incb
dec
fisttpl
call
int3
addr16
mov
outsb
pop
shlb
daa
inc
adc
inc
inc
inc
repnz
and
movsb
subb
test
push
and
nop
mov
pop
dec
mov
jle,pn
pop
pop
xor
dec
adc
adc
add
lock
pop
addl
iret
cld
paddd
add
mov
outsl
inc
mov
push
pop
addr16
rorl
push
pop
insl
aas
dec
inc
push
adc
out
xchg
pushf
push
loopne
push
pushf
jge
movsl
cld
xchg
pop
cld
jg
divl
addr16
inc
or
and
push
adc
mov
push
pop
cs
add
push
jecxz
mov
push
pop
inc
pop
cmp
add
mov
xchg
pop
or
sbb
pop
push
push
sub
add
push
fisttpl
pop
out
jbe
out
jge
cmp
push
adc
iret
outsb
shrb
es
sahf
push
pop
mov
iret
fdivs
js
nop
inc
data16
das
cmp
mov
iret
mov
push
cwtl
add
xorb
fimuls
dec
nop
xchg
movsl
add
push
dec
jp
jnp
aas
enter
subb
inc
push
data16
jg
loopne
sahf
rolb
bound
incl
jg
aas
mov
sbb
jle
test
add
pop
das
and
jnp
insl
imul
sbb
jl
insb
repz
fists
push
add
nopl
add
dec
pop
scas
dec
lcall
imul
int
cmpsb
inc
andl
add
add
loopne
sarl
push
ds
fwait
sbb
sub
jg
add
pop
nopl
adc
shll
mov
mov
lods
add
dec
addb
lock
and
cld
push
clc
jg
aas
pop
sbb
cli
pop
cld
int
addb
cmp
repz
pop
dec
dec
data16
dec
lahf
adc
bound
mov
sbb
cmp
mov
movsl
xor
pop
pop
daa
aam
inc
test
pop
xor
mov
or
push
adc
inc
loopne
pop
add
mov
add
cmp
pop
pop
daa
ss
mov
xlat
outsl
repz
pushf
cld
addr16
cld
pushf
mov
incb
pop
pop
daa
ss
sbb
adc
mov
and
repz
dec
or
xchg
push
andb
daa
adc
addr16
pop
mov
push
fldcw
lock
jae
popa
add
mov
loopne
clc
addr16
inc
aad
aaa
or
adc
push
and
inc
adc
push
repz
sub
add
adcb
add
aas
ja
mov
es
ret
repz
xchg
inc
dec
out
push
clc
lock
es
loopne
add
sbb
xor
add
inc
pusha
and
and
inc
and
push
or
push
imul
movl
iret
jg
pop
sysret
addr16
and
into
or
stc
call
adc
clc
js
mov
hlt
push
sbb
or
and
loopne
lock
jbe
cld
iret
fucomip
cmpb
out
push
adc
sahf
adc
or
jg
iret
repz
and
int
fwait
pop
fbstp
push
inc
dec
dec
test
dec
xchg
ds
dec
fidivs
sahf
out
popa
sahf
pop
nopl
fisttpl
fidivrs
push
addl
imul
mov
lock
xor
nop
mov
or
adc
adc
adc
or
out
push
pop
daa
aaa
inc
push
addr16
xor
repz
icebp
ljmp
outsl
jg
aas
clc
push
jo
lock
pavgb
adc
cmp
xchg
pop
pop
daa
aaa
inc
push
mov
or
iret
lods
stos
les
pop
clc
popf
fisttpl
or
add
pop
mov
pusha
or
xchg
mov
adc
addr16
xor
test
out
data16
inc
add
inc
inc
inc
and
pop
cmp
pushf
jae
daa
aaa
inc
push
pushw
jae
pusha
addr16
sahf
into
outsb
ss
int
cld
aas
cld
jl,pt
cmp
sbb
jae
cmp
pop
pop
daa
aaa
inc
push
movsb
push
ret
adc
and
mov
or
mov
jp
add
mov
es
pop
push
daa
gs
push
add
sub
pushf
cmp
mov
in
adc
aam
jcxz
xor
jl,pt
pop
pop
xchg
pushf
pop
daa
inc
add
or
or
pop
or
mov
sahf
jae
out
orb
pop
jmp
decl
idivl
and
push
emms
add
stc
int
gs
ud0
pop
push
arpl
pop
outsl
mov
fmull
or
push
addr16
mov
pop
mov
pop
xchg
daa
lock
add
cmp
vmread
mov
mov
mov
cmp
push
daa
mov
dec
lods
jb
out
add
lock
push
add
les
aad
outsb
mov
inc
jae
lcall
add
mov
add
sbb
ljmp
or
cmpsb
jecxz
add
cmpb
addb
adc
mov
sub
mov
jno
xchg
andb
in
cs
aaa
add
jb
sti
and
aas
pop
xchg
and
in
call
inc
loopne
clc
xchg
loope
mov
sarb
mov
iret
sub
xlat
inc
pop
pop
add
insl
lock
outsb
aas
push
inc
and
ss
in
js
mov
mov
xchg
es
movsl
pop
test
loopne
push
or
jl
testl
add
push
sub
sbb
test
dec
jecxz
outsl
pop
xchg
mov
inc
inc
fs
mov
int3
pusha
ror
dec
add
neg
or
adc
pop
mov
mov
add
mov
enter
adc
and
sbb
clc
dec
mov
or
dec
xchg
mov
jge
mov
xchg
mov
dec
adc
aad
pop
aad
pop
mov
lods
mov
sahf
lods
shrb
mov
or
loop
iret
cmpb
fisubrs
das
xchg
dec
lds
pop
movsb
mov
mov
cwtl
mov
mov
aas
lods
lods
sbb
enter
lock
mov
lds
or
ret
imul
mov
sti
rcr
mov
and
cmp
pusha
push
mov
pop
dec
imul
mov
insb
aaa
jecxz
aad
fsub
out
test
and
mov
aad
pusha
ret
jbe
pop
shlb
aas
inc
lret
mov
dec
mov
adc
mov
or
into
loop
push
popa
daa
movlps
popa
sbbl
inc
ja
popa
push
sub
mov
push
pusha
inc
in
jle
aad
mov
aaa
arpl
std
incb
in
mov
sbb
adc
mov
inc
in
lds
sbb
arpl
adc
pop
shll
cwtl
insl
jbe
mov
jle
outsb
cmc
fisubl
jbe
lods
mov
sahf
dec
mov
push
arpl
mov
mov
mov
jle
lods
rclb
fdivr
daa
add
jle
mov
pop
sbb
push
cmpsl
mov
sbb
xor
inc
daa
push
fucomi
arpl
lret
and
sbb
pusha
ret
sub
pop
arpl
hlt
mov
pop
jp
cmpl
sub
daa
xorb
cs
sub
into
ljmp
pop
xor
pop
dec
jno
adc
push
jb
xchg
ljmp
iret
push
and
mov
and
stos
out
cs
push
repnz
nop
pop
fidivrs
adc
add
mov
push
mov
seto
xor
ss
ds
and
fst
xor
push
xor
fwait
push
lods
lds
cli
mov
ret
mov
bsf
push
cs
jle
rcll
push
jg
inc
aad
inc
add
xchg
lcall
sbb
dec
pop
into
stos
mov
pop
and
push
xlat
in
fadd
xchg
jae
sub
ret
ds
sbb
pop
rorl
jecxz
outsb
scas
aas
or
sbb
jo
cmp
mov
sahf
sub
inc
out
mov
xchg
mov
shl
mov
shrb
sub
ljmp
out
scas
ds
loope
or
pop
scas
sub
dec
cwtl
or
jge
pop
and
out
ret
mov
pop
and
dec
in
test
jb
mov
mov
pop
sbb
pop
mov
mov
fisubrl
inc
arpl
les
dec
test
sbb
mov
lock
cmp
mov
lahf
add
les
mov
js
ljmp
rcl
add
sahf
ljmp
jmp
lods
push
insl
xchg
push
mov
pop
jbe
fisubrs
arpl
jb
jle
mov
loope
or
daa
mov
icebp
mov
mov
fs
adc
mov
or
adc
push
or
mov
or
xor
pop
mov
sbb
ja
add
xor
push
xlat
sbb
addr16
iret
mov
mov
fwait
adc
xchg
sub
or
xchg
or
pop
push
cmpsl
pop
mov
sbb
arpl
jg
push
daa
pop
aaa
push
fs
jl
lds
push
inc
pop
push
rcll
add
lahf
inc
fdivl
pop
lds
xlat
jae
ja
scas
xlat
inc
mov
addr16
stos
adc
mov
xchg
roll
adc
sbb
cmpb
loop
mov
in
adc
lods
inc
dec
pop
stc
jl
sbb
add
lods
mov
or
xchg
mov
pop
out
negl
adc
int3
lahf
and
fidivrl
push
jmp
adc
test
subl
fisubrl
add
mov
dec
xchg
aas
fcoms
pop
pop
add
sbb
mov
mov
pusha
test
das
push
xor
pop
mov
sbb
cwtl
mov
subl
addr16
pop
inc
sub
and
xor
xchg
addr16
cmp
pop
fistps
xchg
pop
and
add
jmp
lods
mov
das
sbb
xor
fwait
inc
movsb
ror
mov
dec
mov
ret
cmp
sub
or
fadd
lahf
push
push
enter
imul
adc
cmp
pop
ja
add
adc
sbb
test
inc
push
in
push
pop
inc
push
nop
add
or
add
or
pop
enter
sbbb
movups
enter
adc
nop
add
pusha
inc
adc
add
cmp
push
add
daa
pop
sbb
and
sub
xchg
sub
xchg
nop
sub
outsb
ljmp
movl
test
push
inc
adc
xchg
lea
lock
inc
mov
arpl
push
adc
in
xor
mov
out
or
je
insl
inc
and
sub
notb
add
sbb
push
mov
and
dec
inc
adc
cmc
dec
add
subb
daa
sbb
lods
testl
mov
je
push
outsb
ja
adc
imul
add
mov
push
gs
imul
push
push
pusha
adc
rolb
mov
lock
add
jnp
mov
pop
jb,pt
cmp
jae
or
sbb
adcb
and
pop
dec
arpl
inc
fs
insb
push
pop
rol
inc
adc
dec
inc
push
xchg
inc
dec
inc
ret
xlat
fadds
shll
inc
pop
push
jo
je
dec
xchg
enter
pop
jae
pop
push
and
pop
push
and
or
mov
popa
or
inc
bound
xor
test
nop
lea
push
testb
jle
outsb
arpl
mov
aad
push
jb
lds
push
adc
mov
mov
loope
push
mov
or
push
dec
cmp
pusha
mov
dec
inc
sbb
inc
jmp
mov
adc
dec
inc
es
adc
jp
dec
pop
das
out
arpl
cs
jnp
adc
cmpsl
mov
sbb
je
jne
add
add
add
sbb
sub
bound
sub
dec
je
dec
popa
insl
and
mov
push
loope
test
xchg
add
rcl
inc
add
jne
shll
xchg
and
mov
daa
mov
dec
and
xchg
imul
inc
out
mov
adc
jae
adc
inc
fsubs
imull
mov
iret
pop
push
mov
iret
push
imul
jmp
cmp
fst
into
out
in
sub
je
add
test
mov
pop
dec
push
mov
lcall
leave
add
dec
ss
inc
adc
and
shl
jge
jae
cmp
lds
jg
jge
cli
mov
push
insb
jae
adc
sti
push
xchg
xchg
pop
mov
sbb
push
dec
push
inc
jno
pusha
popa
and
adc
stos
or
adc
shrb
roll
push
daa
push
aam
insb
xlat
mov
mov
fdiv
sub
out
popa
mov
mov
sub
test
pop
sbb
push
push
cltd
xchg
fiaddl
fwait
and
jmp
xor
push
into
je
mov
pusha
or
fs
xchg
xlat
inc
punpcklbw
push
push
xor
cmpsb
sbb
inc
movl
mov
mov
cmp
jns
jge
imul
and
mov
in
mov
or
adc
jnp
lcall
cmp
out
xor
testb
ret
jp
and
imul
push
testb
inc
ret
and
test
adc
or
outsb
iret
hlt
jbe
rcll
jo
inc
cmp
sahf
push
pop
inc
add
outsl
scas
pop
jo
sbb
mov
cmp
jbe
sub
sbb
test
loope
imul
test
enter
test
jp
addr16
addr16
gs
sbb
mulb
sbb
sbb
inc
mov
adcb
fistpl
sbb
imul
insb
cmp
add
and
jo
je
cs
mov
fs
xchg
shl
push
or
mulb
inc
dec
xchg
je
aad
pop
or
mov
mov
dec
jnp
cmp
dec
mull
jae
dec
ds
add
popa
jo
cmp
jae
cli
pop
inc
jae
or
adcb
mov
lock
adc
push
mov
xchg
and
add
jne
fists
shll
inc
outsl
sub
dec
inc
ja
out
xchg
push
insb
jnp
push
mov
inc
imul
stos
imull
jecxz
xor
loope
push
inc
mov
mov
mov
mov
clc
xchg
shl
pop
lods
and
lods
repnz
add
add
cmp
enter
int3
add
lods
gs
inc
popf
mov
es
sbb
and
mov
and
push
dec
jo
inc
fiaddl
popa
jne
push
scas
mov
gs
fdiv
push
mov
push
dec
inc
movsb
sbb
int3
and
data16
mov
dec
jne
dec
dec
xchg
add
inc
loopne
pop
jnp
arpl
lds
pop
mov
das
add
shr
pop
push
adc
test
insb
fisttpl
xor
sbb
pop
mov
and
jbe
pop
sbb
dec
add
popa
xor
dec
arpl
fcmovbe
and
push
outsl
add
fnstcw
push
jnp
aad
rcll
in
mov
mov
sbb
adcl
cld
mov
inc
fs
cmpl
mov
sub
xchg
aam
ret
lods
cmp
mov
sbb
push
ss
gs
jo
sbb
arpl
or
pop
lods
adc
outsb
fdiv
push
push
dec
or
or
inc
inc
addb
push
xor
andb
push
je
xor
adc
xor
mov
test
test
into
dec
jne
mov
inc
loopne
adc
js
dec
xor
mov
lock
outsl
popa
lods
xor
jl
jnp
sti
jae
jns
push
stc
mov
lds
andl
es
jmp
pop
xorl
aaa
dec
and
sbb
adc
mov
jne
sub
shll
cwtl
sbb
inc
jb
and
push
jo
add
out
cs
cmpsl
fstps
xor
mov
cwtl
mov
sbb
test
xor
imul
andl
cmp
daa
lahf
jecxz
xor
enter
jne
jb
pop
sbb
jmp
xor
loop
add
imul
or
fisubrs
jo
jne
adc
or
jge
lahf
cwtl
loopne
pusha
pop
inc
or
mov
push
sbb
jns
sbb
xchg
outsl
sub
or
xor
movsb
sbb
xchg
sub
push
hlt
ret
or
imul
inc
and
pop
pop
mov
inc
pop
pop
add
das
cwtl
push
xchg
jno
pop
mov
cwtl
xor
mov
test
cmp
jge
sub
insb
dec
test
sbb
jns
inc
ret
leave
imul
pushf
fs
dec
int3
or
xor
test
dec
imul
les
les
test
or
les
cltd
jns
push
cmp
sbb
jae
das
jmp
sbb
add
adc
dec
add
pop
mov
repz
sbb
or
or
sti
jge
xchg
add
sahf
dec
push
adc
inc
pop
cmp
addr16
idivl
aaa
int
add
adc
add
adcl
prefetch
mov
add
pop
insb
dec
out
cmp
cs
dec
sbb
out
imul
add
mov
shr
into
nop
mov
je
femms
cmp
add
xlat
add
shrl
inc
and
jb,pn
popa
adc
movsl
fbld
add
add
inc
jl,pn
addr16
dec
clc
pusha
mov
xchg
add
sahf
test
xlat
out
push
mov
mov
dec
inc
gs
jns
jnp
jl
add
and
fistl
rclb
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
hlt
mov
inc
add
