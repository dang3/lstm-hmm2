mov
push
pushl
mov
xor
mov
dec
dec
dec
jne
push
arpl
add
insl
xor
mov
aaa
sbbl
push
sub
lret
pusha
sahf
in
subl
and
inc
jle
pop
xchg
mov
std
imul
mov
pusha
popa
mov
cmp
jno
les
inc
and
rorb
push
xchg
je
pop
or
icebp
xor
cmp
fsubrs
adc
aad
aam
cwtl
pop
pop
dec
int
into
loope
test
cmpsl
jns
mov
inc
sub
loop
int3
out
pushf
dec
outsl
popa
pop
arpl
or
or
and
and
push
fldl
sbb
stc
fistpll
mov
cmp
mov
mov
lahf
stc
call
stc
into
sub
cmpsl
mov
sub
addr16
mov
xor
dec
xchg
repz
xchg
divl
dec
icebp
xchg
add
add
ds
aaa
add
stc
pop
pusha
int
or
shll
popa
and
dec
and
xor
pop
sbb
dec
lret
add
es
sbb
fs
mov
xchg
mov
inc
outsb
lcall
sbb
in
jns
inc
mov
addb
jnp
imul
int
addb
push
outsb
adc
adcb
sub
popf
repnz
pusha
mov
jo
pop
mov
fisubrs
out
or
popf
pop
test
test
push
sbb
jne
xlat
xor
lock
dec
int3
mov
push
testl
je
rolb
rorb
dec
dec
cmovbe
mov
jns
inc
push
aaa
push
jmp
pop
enter
sar
cmp
xor
mov
mov
sarl
pop
loope
xchg
mov
mov
xchg
nop
push
sbbb
ret
jle
inc
jb
or
pop
out
sti
dec
mov
cli
sarl
into
dec
bound
lods
scas
xchg
das
lret
cs
ja
pop
mov
fbld
xchg
inc
adcb
push
adc
imul
push
fistpll
jnp
dec
scas
leave
shll
cmp
sub
dec
cmpsb
ret
push
cmpsb
add
fidivrs
adc
xlat
fstpt
repz
aam
xor
aam
pop
shrb
fwait
lret
jno
push
or
xor
repnz
dec
pop
pop
dec
cmp
test
aas
movsl
imul
add
jmp
mov
je
inc
inc
jo
fildll
pop
pop
pusha
inc
xlat
cmp
je
sarl
mov
sub
dec
xchg
dec
cmp
jge
orb
dec
punpcklbw
mov
sbb
gs
loopne
in
hlt
nop
arpl
rcrl
lcall
outsl
call
adc
mov
sbb
adc
sub
adc
xchg
out
or
fwait
das
push
push
pop
outsl
pop
je
pop
xlat
and
pop
jo
rclb
cmp
shrb
mov
jmp
mov
jg
insb
sbb
mov
decl
or
inc
pusha
lea
aaa
cs
jp
fwait
out
mov
xchg
ds
in
gs
cmpsl
mov
xor
cmp
cmpsb
xchg
aam
imul
daa
dec
movsl
daa
inc
pop
jmp
jmp
cmpsl
sbbl
jb
add
in
xchg
xor
and
jns
jg
lret
lret
movsb
mov
and
leave
mov
mov
test
rolb
xor
test
jmp
mov
sub
fs
inc
sub
mov
fildl
xchg
xchg
push
into
dec
push
cmp
or
or
cwtl
movsb
add
scas
gs
or
insl
pop
xor
mov
addr16
push
adc
sub
xchg
dec
jmp
and
mov
mulb
rolb
test
mov
outsb
fcoml
fldpi
inc
clc
lock
gs
fildll
ds
fisttpl
popa
cmpl
mov
sbb
addr16
add
sub
bound
jle
icebp
jne
lret
adc
mov
iret
pop
sub
pop
and
clc
adc
fstpt
mov
fidivl
inc
jl
push
dec
sub
and
jmp
mov
in
daa
jle
outsb
push
rcll
dec
inc
fadds
hlt
mov
add
jns
lcall
push
aas
out
and
and
cmc
fisttpll
pushf
mov
gs
int3
adc
jmp
xor
mov
adc
push
fwait
out
mov
mov
mul
or
out
in
pop
push
add
push
fimuls
out
push
and
add
xchg
negl
stos
loope
or
cmpsb
or
in
dec
out
gs
test
cltd
dec
ret
pop
in
cmp
test
dec
cmc
ficoml
cs
sub
movsl
pusha
sub
test
inc
scas
dec
in
mov
xor
jne
lock
sub
or
loope
ret
or
sub
addb
jns
push
inc
xor
sbb
mov
leave
decl
sbb
pop
insb
lock
imul
adc
movsb
fimuls
xchg
cmp
test
inc
mov
loop
andl
dec
dec
ljmp
dec
xchg
sbb
les
data16
mov
push
mov
jl
arpl
pop
int
lds
into
test
sub
sbb
jbe
sub
leave
hlt
add
and
lea
jp
daa
lahf
mov
jne
or
popf
push
in
mov
and
scas
sub
lods
sbb
fucom
pushf
dec
outsb
xchg
fimull
gs
inc
sub
bound
dec
add
push
stos
or
fcoml
add
sub
pminub
leave
inc
fdivp
adc
lods
fdivrl
ficoml
jecxz
mov
sbb
mov
sub
add
dec
dec
dec
stos
xor
stc
jbe
loopne
cmp
fistpl
xchg
lret
cmp
sbbb
jo
sti
pop
cltd
popf
mov
pop
xchg
divb
aaa
sub
adc
ret
sub
lcall
adc
inc
dec
sub
ja
mov
add
xlat
outsl
insb
push
mov
mov
pop
adc
jp
inc
mov
out
arpl
and
pop
fistl
cltd
fistpl
push
or
mov
sbb
lahf
dec
into
xchg
jp
out
out
push
inc
lea
sub
mov
movsb
cmp
adc
dec
test
iret
add
stos
jge
jp
push
mov
stos
mov
add
or
cmp
pop
out
int
hlt
arpl
inc
fcmovbe
mov
sub
mov
dec
repnz
add
sti
push
pop
mov
movsl
in
fs
sub
lret
loop
andl
mov
sub
fdivl
and
push
or
mov
imul
fwait
add
arpl
inc
xchg
adc
imul
leave
dec
cmp
loope
push
jp
push
push
aaa
sub
dec
dec
loop
or
gs
xchg
xchg
or
xchg
test
adc
push
dec
jae
or
inc
sahf
jb
and
scas
jb
mov
test
jg
mov
add
xor
jns
mov
cmc
sub
sbb
lgs
add
push
pop
pushf
dec
cmp
add
dec
push
xchg
add
inc
xor
jns
mov
jne
and
addr16
mov
or
popf
add
hlt
cli
incb
das
jns
leave
inc
fwait
pop
movsb
sub
xchg
in
pushf
into
inc
xchg
lcall
xlat
js
repz
and
xor
adc
dec
mov
fistpll
stc
movsb
es
mov
mov
or
jmp
test
test
dec
ret
push
sbb
loope
adc
fwait
lcall
adc
cmp
enter
pop
imul
pop
stos
fistl
cmpsb
fisttpll
push
sbb
pusha
and
inc
push
jecxz
and
hlt
pushf
sahf
les
jo
add
in
ficoml
movsb
les
jb
inc
push
sti
popf
jp
test
xchg
inc
and
test
lahf
insl
pop
jecxz
imul
xor
dec
and
scas
mov
xlat
fimull
mov
jp
inc
fists
hlt
dec
jmp
lahf
test
dec
or
mov
fistl
xchg
or
imul
dec
push
sbb
sub
jae
push
sbb
stos
adc
loopne
mov
ret
js
int3
jbe
cmp
test
pop
add
jno
adc
imul
dec
dec
sbb
gs
pusha
dec
fs
inc
daa
cltd
std
insl
popf
jl
dec
or
and
push
mov
dec
pusha
xchg
sub
add
and
cmp
cmc
cwtl
add
hlt
jo
pop
sbb
sahf
inc
inc
adc
dec
inc
sbb
mov
dec
nop
mov
scas
inc
data16
or
fdiv
sbb
test
es
push
aam
push
arpl
push
stos
cltd
iret
fdivs
pop
push
les
mov
push
and
cs
ja
rcl
xor
cmp
sbb
stc
packssdw
push
cmpsb
and
leave
sub
fsubr
push
or
mov
sahf
adc
loope
jae
pop
lock
pop
lods
test
push
mov
aas
movsb
hlt
sti
xchg
cmpsb
je
push
pop
push
push
movsl
cld
mov
arpl
inc
mov
add
rcll
fldln2
adc
mov
sbb
mov
adc
ret
shll
dec
insl
popf
fldt
add
push
cli
scas
jo
cmc
add
mov
les
fsubrl
mov
jnp
push
hlt
mov
dec
xchg
loop
shrb
mov
adc
shll
sub
cmp
clc
in
pop
pop
in
popa
xor
push
bound
cmp
or
clc
or
inc
pop
or
sub
dec
shll
jp
pop
ja
es
mov
and
pop
fistl
add
jno
xor
mov
lcall
out
mov
pop
notl
xor
or
xor
cwtl
imul
pop
mov
sbb
adc
ror
pushf
xchg
fsubp
xor
outsl
inc
sub
shll
adc
mov
mov
sbb
inc
aas
adc
xor
ljmp
mov
jne
or
adc
enter
jb
ret
mov
jno
jge
pop
and
mulb
lds
jecxz
ljmp
mov
clc
stos
adc
outsl
xorb
movsl
lahf
addr16
and
insl
xchg
outsl
mov
and
pop
lock
jne
pop
inc
push
aas
inc
inc
sarb
or
jne
sbb
cmp
test
push
insl
pop
in
jnp
push
loope
test
mov
int
sub
pop
inc
cmp
mov
jno
pop
pop
int
fisttps
dec
mov
add
test
daa
addl
loope
xchg
xor
inc
in
xchg
aas
push
das
lret
sbb
adc
lret
ljmp
cmc
jmp
inc
in
mov
pop
cmp
mov
out
fadds
or
ss
sub
pop
mov
out
lea
push
and
inc
mov
aaa
sbb
jg
adc
cltd
sbb
mov
mov
imul
movsl
lea
pop
outsb
sti
mov
jle
cs
and
push
dec
lea
sarb
popa
cmp
sbb
test
and
imul
adc
pop
xor
outsb
mov
ret
mov
lds
cld
dec
jae
mov
sahf
hlt
mov
int
push
jo
cmp
jg
daa
push
flds
xor
jb
xor
lds
and
sub
xor
sub
fisttps
sarl
daa
sub
mov
lds
jae
mov
jecxz
xchg
rorl
sub
push
addr16
js
je
js
push
int
dec
sbb
pop
jno
mov
test
pop
jnp
jp
mov
push
xor
mov
popa
sub
pop
cmpsb
adc
outsl
iret
ret
sbb
or
mov
movsl
fmuls
adc
mov
pop
ljmp
and
aaa
stos
lcall
push
add
and
hlt
dec
push
out
mov
or
scas
adcl
lock
lret
push
sti
cltd
inc
jp
jg
sbb
hlt
repnz
sti
rorb
iret
lret
mov
les
gs
push
std
push
aas
push
bnd
das
test
cmp
mov
fidivl
bnd
fbstp
xchg
push
in
mov
add
nop
mov
sbb
sub
je
or
pop
lds
mov
cmp
mov
movsl
das
mov
mov
cmp
add
lods
mov
inc
out
mov
iret
ds
xchg
pop
stos
mov
insb
or
cmp
scas
in
pop
sbb
arpl
sbb
dec
inc
xchg
lods
insl
mov
push
mov
sbb
fsub
jnp
fwait
pop
fiadds
inc
lods
arpl
or
add
jnp
mov
pop
imulb
fdivrs
push
jb
and
mov
inc
jns
cmpb
lods
or
shrb
xchg
cli
mov
dec
jecxz
push
stos
pop
xor
sbb
andl
xchg
mov
insb
jno
or
sub
inc
mov
add
mov
sub
add
mov
sbb
cwtl
xchg
jo
insl
js
pop
outsl
push
xchg
cmp
fldcw
mov
pop
inc
push
or
mov
jns
idiv
ljmp
pushl
push
cmpsb
push
and
sbb
mul
arpl
cmp
xchg
out
jo
mov
inc
sub
les
sti
notl
inc
cmc
lds
push
xchg
xchg
mov
xchg
jne,pn
dec
pushf
pop
pop
outsb
and
or
lods
data16
mov
dec
push
das
fmull
push
in
push
adc
inc
mov
fadd
insl
insb
sbb
cltd
sti
aas
add
xchg
or
mov
mov
add
push
mov
pushf
pop
and
outsl
mov
mov
out
pop
adc
adc
mov
and
orb
cli
popa
add
sar
xchg
pop
push
lcall
iret
pop
push
nop
es
sub
das
mov
xor
vpshld
xlat
xchg
sbb
lds
dec
and
in
or
xchg
sub
cmp
pop
jbe
pusha
icebp
push
mov
out
and
adc
mov
repz
and
mov
aas
jb
neg
lock
insb
jecxz
push
lcall
roll
jle
subb
rclb
gs
pop
adcl
sbb
aaa
cmc
cltd
enter
mov
negb
enter
int
mov
mov
or
sub
arpl
lahf
loopne
fimull
jb
inc
inc
sub
or
xchg
xor
mov
sub
pop
xor
inc
adc
pop
jmp
mov
adc
scas
lds
outsl
jmp
sub
std
dec
cmp
cmp
stos
jnp
mov
cmp
mov
pop
cltd
in
sbb
hlt
add
negl
dec
push
mov
or
xchg
jg
cmp
mov
xchg
push
in
mov
mov
pop
test
pop
or
cmp
cltd
sbb
ljmp
pop
jnp
dec
decl
movsl
cli
out
imul
push
dec
cmc
and
xchg
push
mov
insb
test
jns
fsubrs
xchg
das
rcrl
jae
lahf
fs
fildl
daa
dec
add
loopne
divl
cld
jo
adc
xor
test
popa
jg
jecxz
cmp
sbb
xchg
inc
mov
or
lcall
push
lret
movsb
das
andl
and
popa
push
mov
arpl
das
pop
ficomps
push
dec
cli
cwtl
pop
dec
mov
repnz
aam
mov
inc
imul
jns
jle
sahf
push
adcb
enter
les
mov
enter
shll
iret
sar
fstpl
xor
xor
mov
movsb
pop
pop
cmpl
dec
pop
cmp
rclb
cmp
lea
cmp
dec
adc
mov
into
pop
jle
in
aaa
test
loop
jae
sbb
outsl
or
int3
scas
mov
je
jle
dec
push
jo
jbe
and
int3
insl
fnsave
jne
adc
clc
and
cli
imul
fsubl
add
inc
mov
pushw
sbb
stos
push
xor
sub
out
iret
data16
lea
outsl
imul
arpl
out
inc
fidivrs
ja
lods
or
shlb
jge
sub
xchg
or
pop
sub
pop
and
sub
addb
cmp
pop
cwtl
popf
mov
sub
xchg
push
fs
or
int
insb
test
mov
imul
enter
aas
mov
mov
xchg
nopl
and
lahf
sti
in
mov
loope
pop
das
out
jmp
pop
jecxz
dec
out
mov
inc
fidivs
push
out
int
or
andb
test
mov
or
jmp
sbb
lods
mov
sbb
jnp
pop
inc
nop
mov
mov
je
dec
and
sti
cmp
or
repz
cmp
push
sub
mov
loop
int
pop
cmp
or
xor
nop
iret
movq
mov
mov
push
jle
cmp
ret
add
mov
sbb
repz
adc
jno
cs
mov
addr16
xchg
or
movsb
dec
mov
cmovb
adc
lret
inc
rclb
movsl
loopne
pop
ds
js
fcomip
fisttpll
adc
sbb
xlat
imul
dec
into
push
sbb
jno
push
insl
cwtl
scas
mov
push
ja
add
sbb
sbb
jo
out
adc
in
jle
std
xchg
inc
gs
inc
xchg
sub
sbb
adc
aam
add
sbb
stos
or
push
cltd
movsb
sub
ja
stos
scas
mov
arpl
pop
push
dec
ret
repz
lret
cmp
pop
xor
mov
je
dec
pop
sti
testl
dec
lea
jnp
imul
cmp
inc
data16
fcompl
aaa
in
xchg
aas
pop
add
lods
jmp
lock
repnz
dec
shlb
mov
addr16
xchg
stos
fistpll
adc
fs
ljmp
inc
lea
cltd
jb
mov
jno
mov
or
push
xchg
outsb
cltd
add
sbb
into
out
mov
out
sbb
imul
inc
ljmp
push
int3
outsb
je
push
ljmp
stos
lods
fucom
pop
test
sub
ja
hlt
out
xor
ljmp
mov
sbb
shll
scas
pusha
xchg
lods
mov
mov
cmp
cmpsb
jecxz
cli
leave
push
sub
scas
sbb
jb
mov
jl
daa
and
shll
xchg
lods
lock
sbb
sub
lods
leave
ljmp
out
xlat
in
mov
mov
sbb
push
mov
aaa
jns
mov
sbb
mov
cmpb
enter
sbb
cmpsb
mov
adc
add
push
jl,pn
inc
inc
or
mov
nop
xchg
adc
mov
mov
movsb
fs
mov
pop
out
sarb
jge
das
and
in
cli
loopne
leave
scas
in
stc
mov
mov
in
leave
mov
bound
jnp
jle
sub
cltd
and
es
addr16
gs
adc
int3
cmp
sti
outsb
dec
ljmp
pop
jne
push
scas
inc
fwait
sarb
into
mov
xchg
xchg
cmp
lods
popa
leave
pop
pop
xor
lahf
int
mov
popf
orl
addb
sbb
push
out
testb
cmp
cmpsl
outsb
stc
xchg
in
dec
mov
push
push
dec
insb
push
cld
jmp
inc
dec
push
outsl
outsl
cmpsl
add
pusha
mov
and
jns
insl
pop
mov
push
cmpb
lea
ficompl
sbb
mov
cmp
adc
xchg
jmp
je
in
pop
mov
sbb
stc
cmp
orl
mulb
and
jmp
sbb
stos
loopne
xor
jne
jl
cmp
test
ret
mov
jbe
xlat
mov
or
mov
jae
aas
imul
jno
ds
sbb
out
test
sbb
cmp
int
lods
punpcklbw
mov
call
jnp
gs
mov
sar
sbb
mov
pop
cmp
push
fscale
sub
outsl
inc
mov
jl
cs
repz
imul
psadbw
mov
imul
push
jmp
pop
mov
and
cs
fs
popf
sahf
div
inc
jmp
add
pop
testb
push
popa
push
mov
sbb
push
ds
arpl
mov
sbb
ret
sbb
lcall
dec
in
mov
and
in
addr16
aad
mov
shlb
xchg
mov
cld
cs
add
pop
xchg
mov
xchg
mov
loop
push
push
mov
adc
mov
sub
daa
data16
das
mov
adcb
out
stc
push
pop
sbbl
jnp
inc
dec
pop
cmpsl
test
clc
mov
aad
cwtl
imul
cs
sbb
dec
xchg
cmp
and
cld
xor
pop
test
fistpl
add
ljmp
xlat
stos
orl
test
xlat
mov
addr16
dec
ljmp
inc
aas
push
push
sub
pop
mov
mov
push
cmpsb
arpl
ss
mov
pop
repnz
sbb
test
repnz
addb
adc
aas
rcr
repnz
dec
rcrl
mov
sahf
lcall
aaa
sti
fistl
aad
sahf
mov
xchg
sub
mov
push
mov
adc
sbb
cmp
aam
testl
test
xor
lods
mov
mov
adc
mov
insl
mov
shl
mov
push
jne
push
hlt
sub
addb
mov
add
mov
mov
ss
jbe
cltd
rol
testb
xchg
sarl
das
jnp
cli
mov
sbb
sbbb
mov
mov
out
push
push
sub
lahf
add
jns
les
sbb
aaa
dec
popf
add
ljmp
mov
stc
cmpsb
jle
ljmp
in
adc
mov
cld
sbb
add
adc
push
pop
mov
pop
test
push
xor
adc
mov
ljmp
or
sub
sarb
lods
or
jmp
push
out
fwait
movsl
sti
or
imull
xchg
roll
fs
xchg
jns
or
dec
push
dec
cmpsb
mov
or
insb
xchg
jno
dec
jo
test
push
add
xlat
out
xor
and
adc
mov
pop
decl
and
fs
loopne,pt
pop
je
dec
fst
fisttps
lea
mov
add
or
test
cld
cmp
jg
ss
rolb
sub
push
shr
mov
dec
mov
sti
pop
pop
js
push
mov
leave
and
and
mov
push
adc
sbb
dec
xor
movsb
stos
inc
cmpsl
jo
sbb
aam
insb
push
jp
pop
or
jno
lea
adc
shrb
adc
test
das
aam
cmp
add
not
xchg
fs
into
into
sub
push
mov
cli
sbb
jbe
lcall
mov
and
jno
mov
dec
testl
mov
hlt
jo
xor
jo
and
mulb
push
mov
icebp
push
fs
int
xchg
repnz
xchg
loop
pusha
test
push
or
aas
dec
shl
dec
stos
ret
jbe
mov
or
xchg
or
or
adc
jnp
mov
jmp
iret
xchg
inc
daa
dec
jno
aad
jmp
cli
outsl
mov
aam
push
test
push
data16
ret
imul
inc
xor
mov
mov
cmp
into
mov
push
mov
roll
int3
mov
push
nop
shll
leave
mov
mov
in
into
orb
cwtl
push
int3
adc
push
sub
adc
shl
lret
lret
lahf
andb
pop
and
xlat
lods
or
mov
jl
adc
xchg
inc
push
xchg
jmp
dec
and
jo
sbbl
mov
shll
adc
push
fadds
mov
adc
xlat
push
push
mov
xlat
add
sub
leave
mov
sub
rorl
mov
cmc
popa
subl
ret
aas
xor
scas
mov
sbb
std
test
lret
call
repnz
test
add
ret
jmp
and
cmp
dec
jl
cltd
sub
xchg
and
jle
and
inc
rolb
push
loop
outsl
dec
movsl
xor
jo
cmpsl
jl
andb
fstps
dec
pusha
icebp
rcrb
add
dec
xchg
std
or
flds
icebp
mov
adc
test
sahf
daa
inc
sbb
in
test
fiaddl
gs
jmp
jmp
insb
pop
test
xchg
fildl
cmp
jl
test
pop
cmp
pop
push
xor
jle
insb
test
lcall
pop
insb
pop
rolb
inc
adc
test
or
inc
test
out
push
mov
test
ss
add
jnp
push
fidivrs
xchg
push
push
sub
pop
bound
cld
push
call
and
or
fidivrs
sub
xor
push
ja
xor
xorl
push
lods
movsl
mov
insb
mov
jae
lcall
repnz
jbe
mov
fcmove
mov
mov
xchg
lock
data16
jne
into
cmp
repnz
imul
add
out
jp
jbe
sbb
lock
mov
push
je
leave
arpl
out
mov
xchg
mov
out
call
dec
xchg
push
dec
ret
int
icebp
add
cmpsl
dec
shl
sub
adc
lahf
out
and
rcl
mov
es
jl
lret
out
pop
cmp
imul
jmp
adc
rcll
dec
ljmp
out
inc
xchg
mov
addr16
pop
mov
and
nop
and
popf
sbbl
scas
sub
cmp
jecxz
shrl
jns
and
scas
inc
ret
loope
push
cld
fs
sbb
cmpsl
pop
mov
mov
movsl
dec
repz
adc
fistpl
lahf
int
jns
js
lcall
je
aam
imul
sub
sbb
adc
leave
arpl
gs
stos
push
rorl
push
inc
lret
aad
sub
cmc
dec
mov
add
sub
jmp
fs
and
pop
rcr
and
cmp
jns
inc
icebp
popf
cmp
repz
jo
dec
addl
lods
sbb
xchg
pop
add
xchg
lea
insl
loopne
pop
cli
xor
repz
fwait
sahf
mov
scas
cmc
loopne,pn
push
hlt
cmp
add
mov
adc
xor
jle
cmpsb
cmc
cmpsl
inc
lcall
js
mov
jmp
mov
lea
enter
dec
jg
mov
test
jo
mov
push
xor
push
push
sub
cmc
es
jne
cli
fucomi
and
adc
jns
mov
push
mov
bound
out
test
jno
add
push
pop
mov
mov
rorb
jecxz
inc
mul
mov
jo
sahf
sbb
leave
push
inc
lds
stos
add
icebp
jl
rolb
xor
jl
jns
out
jecxz
lret
ret
xchg
mov
mov
lcall
jle
jl
scas
or
aam
mov
repnz
rep
jb
fdivl
ror
sbb
je
imul
rclb
mov
cmp
xchg
cmp
out
xor
js
mov
mov
xchg
dec
arpl
cmp
idivb
xchg
icebp
outsl
mov
and
mov
pop
push
scas
push
mov
cmpsl
sub
jo
dec
mov
sti
xor
pop
mov
push
mov
mov
cli
pop
mov
mov
pop
stos
movsb
cmp
mov
cs
sbb
xor
popf
mov
fs
mov
xchg
cmp
sarb
scas
repz
sbb
cmc
or
cwtl
pop
dec
scas
enter
add
mov
pop
aad
je
pop
loopne
adc
stos
pop
xor
call
outsl
xor
and
mov
faddl
mov
loop
in
pop
loopne
es
leave
insb
and
nop
sbb
faddl
aas
aam
inc
adc
stos
fs
mov
xchg
sbbl
in
jp
ret
and
jbe
add
sbb
or
stc
out
ret
xor
adc
adc
push
test
int
xchg
mov
nop
das
scas
jnp
sbb
or
xorb
xchg
xor
add
xor
or
jb
fsubrl
mov
jbe
jnp
cmc
push
and
int3
lcall
pop
dec
test
add
sub
cltd
dec
sub
outsl
sub
leave
dec
bound
cmpsl
xchg
xor
stc
push
pop
fsts
inc
cld
push
push
jecxz
ss
or
stos
sbb
fnsave
adc
scas
scas
push
js
sub
sbb
fcmovb
rorb
sti
enter
hlt
fucompp
xchg
clc
adc
jnp
in
and
and
xor
adc
and
out
jnp
fisttps
loop
dec
enter
xor
push
in
push
mov
aaa
mov
or
add
bound
test
mov
lret
pop
stos
lcall
pushl
xchg
lds
lcall
jecxz
cmp
push
gs
push
cli
or
add
iret
cmp
jbe
test
or
imul
mov
sub
test
cmc
frstor
sub
jecxz
xchg
cmp
in
mov
jecxz
mov
in
push
jle
push
fs
xchg
sahf
clc
pop
xchg
enter
nop
xchg
adc
and
jne
mov
mov
lods
into
lods
mov
mov
xchg
shl
mov
sbb
jmp
enter
ljmp
push
sti
int
jmp
pushf
mov
cmpsl
sidtl
mov
sti
xor
outsb
add
pop
sbb
jns
data16
xchg
ror
dec
lods
mov
push
mov
inc
popa
and
sahf
bound
adc
cmpsl
sti
pop
cmp
push
sub
xchg
shlb
and
cmp
push
addr16
jp
dec
mov
pop
jp
bnd
ljmp
dec
repnz
lret
lret
pop
cmp
xchg
adc
test
xchg
ficompl
jp
cli
test
inc
mov
ds
xor
mov
iret
dec
fisubl
cmp
into
dec
xchg
and
add
push
sbb
scas
lret
push
adc
mov
xchg
lock
leave
ret
push
pop
movsl
lock
jmp
push
mov
ljmp
push
ret
add
dec
lret
sub
add
dec
xchg
inc
scas
jno
pop
lea
dec
imul
jmp
popf
in
ss
les
sbb
and
adc
dec
dec
outsb
lahf
sbb
imul
fstpl
sub
adc
mov
jge
fcmovu
mov
and
stos
ror
jmp
out
and
cmc
xorb
js
in
in
and
mov
cld
or
out
xchg
idivl
aaa
or
push
pop
cmpsb
aaa
or
imul
pop
aad
dec
jecxz
loope
jp
mov
xchg
push
enter
cld
daa
jl,pt
dec
inc
iret
fldl
mov
pop
jp
jae
bound
shrl
fmull
xchg
cld
insl
ret
cmpsb
cltd
mov
rclb
inc
roll
and
gs
inc
ss
pop
dec
in
movsl
mov
xchg
enter
inc
push
mov
pop
jae
mov
test
push
dec
shr
ret
dec
insl
out
mov
gs
ja
test
pop
es
pop
outsb
pop
pop
jecxz
inc
adc
dec
int3
jp
test
push
in
mov
jle
mov
sti
inc
clc
dec
lret
sub
in
jl
out
stos
movsb
xchg
xchg
cmpsb
mov
repz
push
cwtl
dec
add
and
xlat
mov
mov
sub
decb
mov
jno
fstp
mov
and
mov
sbb
or
out
mov
xchg
fcomi
lods
rorb
dec
mov
xor
xor
push
jns
sub
lret
jae
mov
neg
xchg
aam
xor
loopnew
xchg
mov
push
and
mov
int3
push
xor
mov
pop
sti
pop
mov
dec
cld
fcmovne
filds
movsb
lret
aad
jbe
sub
popa
lret
or
ret
bound
mov
sub
jle
and
popa
fcompl
cmc
pop
insb
sahf
jo
pop
cmp
in
mov
mov
test
mov
jae
sub
rcrb
jae
imulb
loop
mov
addr16
loop
push
xor
cwtl
xor
or
faddl
dec
xor
cmpsb
aad
arpl
sbb
mov
cmp
ror
in
out
arpl
and
in
stos
arpl
adc
jle
shlb
or
mov
adc
cmp
sarl
cs
mov
cwtl
enter
add
inc
inc
mov
rcr
pop
loope
shl
pusha
push
popa
jle
gs
ljmp
sub
adc
lret
dec
cmp
jbe
pusha
lds
cmp
pop
mov
int
xor
sub
push
xchg
fwait
loopne
stos
int
or
clc
pop
in
and
xor
cli
jg
or
pushl
push
data16
push
mov
adc
jb
sarl
addr16
stos
jmp
xor
int3
mov
popa
mov
cmp
add
pop
outsl
xchg
pop
aad
cmp
enter
push
xor
inc
mov
ret
mov
push
xchg
add
sub
push
fstpl
or
pop
jnp
dec
sbb
es
mov
popf
loopne
mov
pop
pushf
sub
mov
nop
std
mov
push
mov
mov
les
push
fcmovbe
cmp
cmpsl
push
cmp
add
sub
pop
into
aad
fimull
sahf
out
call
mov
test
adc
imul
imul
adc
jmp
or
xchg
push
jg
and
jo
jbe
push
addr16
shll
test
mov
pusha
pop
push
in
mov
add
mov
mov
out
inc
fdiv
push
jb
fcompl
cli
outsb
inc
pop
cmp
xchg
js
mov
inc
out
xor
leave
pushf
rorl
fstpl
push
das
xor
ss
mov
repnz
repnz
push
cmp
mov
ja
or
pop
out
push
popf
push
and
mov
out
inc
xor
adc
jb
fldt
aam
adc
movsb
xchg
xor
sub
fs
jno
fbstp
cmp
pop
jle
mov
leave
mov
mov
mov
into
add
cld
out
iret
insb
cltd
in
pop
mov
fisttpll
sti
push
lret
popf
in
push
push
or
push
outsb
cmp
xor
int3
insb
add
negl
sub
mov
orb
mov
and
sbb
push
pop
or
xchg
pusha
pop
fcompl
sbb
sti
cmp
adc
adcb
xor
test
out
out
dec
stc
ljmp
pop
js
sbb
adc
neg
loope
xor
int
shr
icebp
testl
push
cmp
lds
mov
aad
test
ss
sub
add
sub
test
push
out
movsl
scas
in
xchg
aad
mov
cmp
push
mov
xchg
mov
movsl
shr
ret
lahf
popf
outsl
pop
outsb
imul
xchg
xchg
fmull
insb
mov
add
push
mov
push
jbe
dec
jl
stos
pop
xchg
pop
mov
and
std
adc
mov
adc
pop
push
sub
xchg
js
push
cmp
push
fadd
push
enter
jmp
ljmp
jl
out
les
sbb
arpl
mov
aad
cmp
ret
jb
lods
mov
xorl
and
xor
in
xor
jle
sub
adc
xor
lods
sub
inc
mov
adc
fldenv
icebp
out
mov
jge
inc
xor
inc
and
ja
jo
lret
test
mov
je
hlt
in
mov
and
scas
adc
inc
xchg
fisubs
push
sarb
ljmp
mov
aam
sbb
xchg
adc
mov
or
popa
and
or
loope
cmp
lret
pop
dec
mov
mov
stc
loop
mov
fcmovu
mov
jbe
out
lret
stc
mov
cltd
cmpsl
iret
int
add
pop
popf
cmp
fwait
jp
adc
jns
ret
or
cwtl
ss
and
out
xor
cmp
inc
push
jbe
dec
jmp
sbb
push
adc
sti
mov
cwtl
ret
mov
push
mov
stc
dec
mov
insb
push
ja
push
add
subl
call
hlt
xchg
rcll
nop
add
sbb
mov
adc
push
jp
in
shlb
ret
out
cmp
jg
add
xchg
cmp
movsl
xlat
pop
inc
push
and
lock
pop
dec
adc
lcall
imul
imul
mov
xchg
stos
out
or
sbb
data16
lds
push
or
jp
pop
adc
push
mov
js
or
out
shll
shl
xchg
pusha
clc
push
push
cwtl
sub
mov
sbb
dec
push
mov
add
or
lret
xchg
mov
push
cwtl
fdivrs
and
fcmovb
gs
les
xchg
ret
ret
push
mov
dec
push
in
push
adc
cmp
out
js
and
lahf
lret
movsb
sub
or
mov
inc
data16
rorb
pop
cmc
jbe
stos
dec
cmp
jno
stos
cs
mov
std
push
orb
mov
dec
ss
adc
iret
shll
enter
mov
icebp
adc
andl
push
popa
leave
sub
dec
dec
pop
push
add
xchg
sub
test
and
stos
cld
iret
imul
lds
push
repz
test
std
adcb
xchg
int3
and
bound
mov
outsb
jne
clc
adc
std
dec
jnp
pop
ret
nop
decb
cmp
jbe
dec
inc
mov
and
stos
adc
push
inc
mov
inc
cmp
mov
inc
inc
fs
ss
scas
jbe
dec
ds
and
xchg
or
in
add
xchg
stos
push
je
mov
push
mov
scas
stos
gs
dec
test
rolb
test
in
pop
arpl
cmp
mov
jmp
ss
fisubrl
gs
cmp
xor
cmp
lret
add
imul
xor
push
in
test
adc
enter
and
push
cmc
enter
dec
mov
test
mov
push
mov
aas
dec
pop
bound
sub
jae
sub
mov
mov
xchg
mov
or
or
add
push
xchg
pop
jae
sbb
rorb
fbstp
and
repnz
sbb
popa
sub
mov
sbb
xlat
je
and
sbb
gs
mov
mov
mov
aas
das
bound
popa
div
insl
pop
fucomi
inc
loopne
repz
daa
cmp
lods
bt
fwait
dec
imul
stos
stos
lahf
adc
pushf
scas
jecxz
jp
mov
or
mov
cmpsb
js
xchg
loope
sub
inc
fwait
cli
ja
rol
adc
cs
imul
aas
cmpl
xor
cmp
jmp
push
inc
test
shr
aad
xchg
inc
lcall
add
arpl
xchg
push
mov
jge
dec
dec
or
mov
xchg
stos
mov
sub
cmp
lods
popa
scas
testl
mov
daa
inc
cmp
xlat
repz
cs
pop
add
cli
add
add
adc
shl
jae
cld
fs
mov
movsb
mov
aas
mul
push
jo
mov
out
sub
lret
pop
rcr
popf
push
push
push
push
xchg
xor
pop
icebp
xor
inc
sbbb
mov
and
mov
pop
stos
sbb
jb
or
mov
jmp
outsl
dec
repz
xor
mov
sahf
lods
jl
push
cmp
and
dec
idivl
xor
jge
push
and
in
inc
xor
inc
ljmp
int3
jb
or
test
data16
mov
mov
sar
outsb
aaa
pop
push
scas
pop
add
mov
sbb
stc
xchg
mov
jg
shl
or
jbe
loop
mov
add
dec
mov
push
push
insl
fnsave
test
cld
fdivrs
cmp
test
inc
inc
push
mov
mov
movl
dec
fldcw
add
sarb
fcomip
div
add
jae
lcall
pop
push
shll
mov
cmpsl
inc
and
mov
cld
lods
and
ret
dec
or
mov
xor
inc
mov
bound
jmp
cs
das
aam
fdivrl
iret
pop
repnz
push
jg
mov
push
negl
out
movsl
cmp
sub
bound
lods
mov
outsb
pop
jle
lds
rcl
xchg
xor
aaa
sbb
jg
sub
lock
jns
hlt
dec
jne
lods
xchg
outsl
xor
stos
rclb
lcall
mov
rclb
xor
sub
cmp
test
add
in
aas
jp
mov
ljmp
xchg
dec
std
adc
call
jp
shll
push
cmp
inc
xlat
mov
mov
mov
pop
jns
into
jmp
popa
push
test
push
clc
jns
cmpsl
mov
cltd
mov
repnz
in
push
mov
stos
mov
pop
negl
adc
add
insl
gs
fisubl
scas
mov
pop
icebp
xor
test
adc
in
jnp
pop
sahf
xchg
pop
loopne
leave
andl
cld
clc
dec
clc
mov
mov
inc
adc
jg
mov
outsb
mov
cmc
mov
mov
in
inc
out
mov
or
mov
test
repz
and
add
add
push
dec
add
mov
and
xor
lret
pop
sub
cmp
pop
add
jbe
pop
in
dec
and
int3
insb
out
jnp
stc
ret
fbld
add
push
cmp
inc
add
cmp
rorl
adc
and
arpl
mov
mov
xchg
ret
ss
pop
dec
lret
jmp
das
xor
mov
int3
pusha
in
cmc
dec
inc
push
lea
out
sbb
pop
or
xchg
jmp
jns
push
add
jge
scas
outsl
push
shr
xchg
mov
loop
mov
inc
xorb
and
js
mov
data16
popa
das
out
mov
jmp
ja
xor
inc
cmp
aaa
inc
fists
push
pop
or
lods
cmp
push
and
mov
test
mov
add
rcrl
add
sbb
jg
pop
stc
sbb
dec
loope
shlb
scas
loope
push
jmp
add
or
inc
sub
popf
and
xor
xlat
sbb
repz
enter
mov
cmpsb
sub
outsl
jmp
jmp
outsb
adcl
add
shll
clc
xchg
inc
mov
jae
inc
mov
pop
lds
jle
pop
dec
pop
jle
popf
dec
ror
mov
jmp
aam
ljmp
sub
add
stos
data16
mov
scas
rcpps
cmp
das
cld
dec
mov
sahf
ror
loopne
outsl
pop
out
push
sbb
inc
les
sub
cmp
mov
mov
hlt
pusha
cmp
mov
mov
cmpsb
jnp
dec
out
rorl
into
clc
dec
jmp
sub
inc
subb
ss
jecxz
pop
stos
mov
and
sub
sub
icebp
fs
insl
jge
push
loopne
popa
cmpsb
dec
in
adc
jno
xchg
fildl
out
cld
jp
gs
mov
arpl
popf
jnp
push
sub
repz
negl
push
test
std
lret
faddl
movsb
cmp
cmp
jge
push
push
loope
jno
rcrb
jne
sbb
adc
fistpll
outsl
jmp
stos
xor
loope
ja
mov
popa
aas
mov
imul
daa
mov
xchg
sbb
and
lahf
mov
outsl
xorb
dec
fsubrl
scas
inc
iret
jl
adc
mov
push
inc
xchg
cmp
mov
sarl
cmp
mov
or
stos
lret
addr16
loopne
push
gs
sbb
shlb
mov
sbb
shl
mov
cvtps2pd
jp
jbe
ss
and
orb
dec
aaa
adc
loope
adc
loopne
rdmsr
dec
pop
jo
sbb
or
loope
or
jbe
cmp
pop
sbb
push
mov
mov
lcall
sub
jb
imul
xorl
daa
popa
dec
xchg
sub
add
pop
iret
cmpsb
sub
out
lea
inc
mov
test
pop
sbb
testl
xchg
fcom
shll
lods
sbb
lcall
dec
xor
fcomp
in
xor
xor
aaa
ficompl
in
jecxz
mov
iret
enter
pop
test
mov
adc
mov
jo
or
imul
ficoml
inc
mov
jmp
pop
or
es
out
jo
and
mov
rolb
xchg
rclb
gs
inc
imulb
cmpsl
fcoml
inc
pop
daa
scas
outsl
outsl
push
cmp
jb
lea
push
jl
inc
repnz
stos
add
or
pop
xchg
loope
fcomps
ss
mov
clc
sbb
mov
dec
or
jbe
mov
imul
xor
arpl
sbb
xchg
jp
insb
jb
add
jge
push
and
loope
mov
mov
pop
lea
mov
xor
mov
push
mov
pop
lock
mov
cmc
sub
sub
adc
imul
mov
pushf
and
lret
fucomi
cmp
sbb
xor
add
or
lea
jns
add
pop
insl
notb
ss
pop
adc
mov
jnp
cmpsb
and
xor
xor
pop
cmp
loope
pop
leave
mov
bound
lds
popf
sub
sub
into
sbb
fisttps
nop
cmp
fbld
test
popf
mov
pop
and
mov
cmp
test
cli
adc
jg
in
dec
mov
dec
sahf
daa
nop
outsb
sub
mov
mov
push
xchg
inc
cmp
mov
inc
jno
repz
mov
or
loop
and
les
lea
push
adc
cmpsl
es
js
repz
ja
enter
mov
and
imul
cld
pop
stc
inc
sub
push
mov
jbe
mov
push
push
sahf
in
cmp
cs
sbb
out
dec
add
sbb
mov
cmp
mov
pusha
mov
rorl
fidivrs
cmp
push
inc
xor
jp
iret
dec
or
or
std
fwait
imul
stos
insl
fsubr
adc
xor
enter
inc
push
int
ljmp
push
mov
loopne
mov
pop
clc
inc
sbb
scas
cmp
ror
sbb
mov
adc
push
outsb
dec
int
out
xchg
cmc
pop
or
cltd
dec
aam
xrelease
sub
das
stos
and
cmp
divl
adcb
lret
fmuls
test
call
lods
mov
add
fmull
popf
push
fs
ss
daa
jno
inc
stc
dec
jp
mov
dec
popl
and
push
sahf
sbb
test
xor
cmpsl
cmc
sbb
pop
xchg
or
sub
or
jp
sbb
in
aam
xor
add
xor
pushf
mov
dec
push
add
rorl
enter
mov
jnp
push
pop
adc
push
adc
pop
test
xor
and
push
aad
aam
loop
and
jae
ljmp
push
sahf
jge
mov
fisttpl
cmp
sbb
cmp
push
insb
mov
or
or
mov
add
cld
sbbb
fiadds
mov
xor
lcall
dec
xor
lods
mov
jno
icebp
cmp
push
mov
imull
adc
xor
scas
or
mov
icebp
stos
daa
std
mov
pop
sub
xor
and
sarl
sarb
daa
mov
shl
popa
sahf
fstl
add
xchg
in
add
shll
mov
ret
out
lods
pop
or
les
aad
or
sbb
jecxz
movsb
inc
adc
jo,pt
xchg
push
std
mov
cld
jmp
mov
out
je
mov
andl
jne
jb
stos
daa
ret
dec
ljmp
in
xor
imul
clc
xchg
lods
aad
jmp
jnp
stos
mov
mov
adc
dec
out
addr16
fimull
sarb
sub
inc
in
hlt
les
sbb
aam
jp
dec
inc
pop
aaa
out
mov
cmp
cmp
sbb
les
fldl
enter
scas
gs
in
push
into
add
js
enter
xor
cmp
inc
pushf
mov
pop
mov
push
push
mov
in
push
dec
or
push
push
xor
enter
fimuls
or
cmp
cld
push
push
minps
sub
push
inc
and
or
inc
cmpsl
xchg
scas
stos
inc
adc
add
jmp
xchg
or
aad
sbb
push
cmpsb
sub
pop
shl
lods
cmp
loopne
popa
das
out
clc
dec
orb
pop
dec
mov
sub
inc
cmc
ljmp
add
pop
jge
gs
daa
inc
aaa
idivb
push
add
mov
test
sti
xchg
es
jge
sbb
add
mov
and
pop
mov
mov
mov
mov
sbb
xchg
sahf
pop
xlat
mov
push
mov
cs
and
loope
icebp
xchg
test
repnz
xchg
adcb
mov
inc
xor
dec
ret
and
adcl
lock
adc
push
inc
sti
pop
lret
hlt
jbe
lahf
enter
mov
arpl
pop
or
or
xchg
and
lcall
cmp
mov
mov
stos
inc
jle
cmp
test
cmp
int
cmp
push
movsl
sbb
push
and
jns
pushf
mov
and
mov
mov
testl
jns
mov
add
dec
jge
mov
mov
cmp
push
mov
notb
out
mov
fsts
lods
and
and
dec
loope
push
fdivrl
pop
lret
mov
cmp
sbb
pop
sti
push
ja
in
int3
popa
repz
jno
adc
lds
lock
pop
mov
rcr
pusha
dec
movntps
mov
loop
xchg
xor
cmp
inc
pop
xchg
shlb
loopne
push
sub
lret
std
fstl
in
mov
movsb
ljmp
push
sub
hlt
sbb
fldl
push
xchg
repz
ret
add
mov
mov
sub
push
lret
mov
mov
and
mov
pop
popf
inc
adc
les
out
stos
popa
or
negl
cs
fxam
push
dec
dec
inc
fmul
out
push
lcall
sbb
cmpsl
xchg
push
xchg
push
mov
popf
repnz
pop
add
xor
cmpsb
pushf
add
leave
sti
mov
out
cmpsl
mov
insb
xchg
push
push
jnp
sub
lret
jb
inc
leave
add
sti
loopne
aaa
jne
jl
out
lcall
lret
pop
add
bound
mov
sahf
test
pushl
xor
sub
push
cli
ss
and
xchg
cld
jne
xchg
pop
xchg
outsb
in
and
mov
shl
and
stos
add
jl
addr16
xchg
xchg
jne
xchg
fnstenv
jle
mov
xchg
stc
inc
dec
push
and
mov
jl
sti
or
test
loop
loop
mov
jb
mov
cmc
dec
mov
fsub
lcall
sahf
and
inc
int
lods
fidivrl
jb
das
les
dec
jb
icebp
pop
push
xchg
add
xlat
mov
inc
sbb
int
adc
fisubs
cli
das
push
test
fwait
add
cmp
lret
mov
mov
and
xor
lret
inc
fisttpl
shr
rclb
pop
and
jp
data16
pusha
push
insl
lods
and
push
and
adc
mov
mov
xor
jns
repnz
out
jne
dec
xor
clc
daa
xchg
notl
add
out
addr16
dec
sbb
xor
mov
dec
fwait
pop
cmp
push
or
push
mov
push
cmp
push
inc
subl
or
iret
fcomi
xor
sbb
jb
nop
push
xchg
repnz
faddp
sub
ds
sbb
xor
cld
push
loopne
xor
cmpsb
or
mov
leave
jg
jge
pop
insl
add
push
dec
pop
xchg
inc
shl
movsl
aam
test
jg
dec
jne
cmp
das
enter
jle
jne
adc
ds
andb
adc
cwtl
je
pop
mov
mov
jno
jl
xor
iret
mov
xor
mov
out
xlat
jg
mov
mov
mov
int
fwait
push
jne
adc
mov
shlb
sub
push
mov
or
jge
sbb
lahf
cmp
ljmp
sti
inc
jno
mov
sti
and
sub
data16
loope
mov
fists
pop
sbb
adc
sbb
cmp
rcrl
insb
loope
icebp
xor
cmpsl
mov
and
cli
jle
repz
int3
je
cmp
mov
stc
stos
jl
pop
into
cmp
sbbb
push
imull
fldl2e
sbb
inc
roll
in
cmp
mov
push
sarl
sbb
out
xlat
jle
cld
mov
loop
fbstp
add
or
cld
mov
sub
shl
mov
fidivs
aaa
mov
push
mov
inc
daa
loopne
mov
push
dec
cmpsb
add
mov
and
clc
rcrb
mov
inc
mov
mov
mov
mov
xchg
sbb
rol
jmp
sarb
mov
xchg
mov
ja
mov
ds
stos
insl
lret
inc
aad
loope
addr16
pop
xchg
jmp
sub
stos
xchg
sbb
movswl
aad
imull
mov
jecxz
enter
aas
repz
add
or
and
mov
add
and
stc
adc
pop
test
and
test
push
fldt
xlat
xchg
mov
mov
sub
imulb
shr
stos
rorl
pop
in
lret
or
andl
leave
out
sbb
dec
leave
fwait
xor
inc
outsb
dec
sub
js
push
mov
pop
jg
pop
ja
test
and
mov
out
push
ret
pop
jle
and
test
pusha
aaa
lret
insl
push
ss
sub
sub
mov
xchg
xlat
lret
negl
aad
jl
pop
adc
out
jb
rclb
rcrb
xor
dec
and
push
cwtl
mov
jmp
jo
add
lret
les
pop
push
insl
mov
pushf
mov
pop
xor
xchg
pop
ljmp
mov
mov
sbb
and
jno
pop
mov
push
out
mov
ss
sarl
and
sbb
test
cmp
sbb
push
std
xchg
xchg
repz
mov
inc
mov
arpl
addr16
out
pop
mov
movb
iret
stos
mov
inc
dec
out
ficoml
fnstcw
or
mov
mov
dec
test
popa
cmc
push
jmp
jbe
ds
out
push
inc
jl
rolb
popf
push
pushf
dec
cwtl
xchg
push
fcomip
cli
inc
add
xchg
pop
pushl
mov
sbb
xchg
arpl
add
cmp
iret
je
cmpsb
lods
les
xchg
or
test
mov
or
dec
rcrb
test
loope
movsl
je
cmpl
add
in
pop
jnp
int
imul
out
aas
outsl
sbb
sub
cltd
sbb
xor
xchg
lods
push
xchg
rcrb
adc
fcomip
test
and
dec
mov
xor
pop
lret
shll
push
dec
leave
in
xor
xchg
xchg
and
lcall
xchg
in
ja
xor
outsl
mov
mov
stc
sub
mov
aam
sbb
push
mov
pop
out
cmp
pop
inc
arpl
lret
icebp
scas
stos
movsl
popa
pop
sbb
loop
ret
mov
pop
inc
push
rep
mov
repnz
sbb
fidivs
mov
ror
adc
pop
jl
gs
inc
xorb
fsts
push
mov
out
and
enter
jbe
rclb
imulb
fst
fldl
scas
arpl
jge
cmpb
imulb
adc
dec
mov
out
lcall
scas
mov
adc
mov
cmpsl
push
or
test
or
cmpl
xorl
or
adcb
or
popf
fwait
inc
mov
sbb
out
mov
rol
ds
xor
cmp
in
mov
lds
stos
pop
xor
pop
dec
mov
in
add
push
mov
mov
lods
in
bound
push
mov
into
xchg
xor
sub
lods
pop
mov
mov
scas
xor
cwtl
ja
into
movsb
xor
aam
outsl
sbb
dec
or
addr16
and
loopne
push
arpl
inc
mov
jnp
pop
out
imul
popf
inc
and
imul
mov
mov
insl
cmp
dec
dec
sub
out
int
aaa
pusha
push
and
js
xchg
loop
pop
sbb
sbb
outsl
xchg
mov
lock
jp
in
add
cmp
daa
mov
out
sahf
push
xlat
lahf
jns
and
je
sub
adc
dec
testl
inc
inc
add
imul
mov
jle
xchg
adc
fwait
popf
orl
xchg
push
cmpsl
rcrb
loopne
xchg
mov
faddl
arpl
ret
stc
sub
jge
inc
xchg
push
cmp
test
aaa
rorb
pop
and
daa
insl
mov
es
cmp
in
jmp
dec
inc
das
or
aaa
pop
jb
mov
cmpsb
lock
jle
mov
aaa
mov
xchg
mov
or
daa
and
jl
in
shlb
xor
fldt
aam
mov
out
pop
jmp
pop
cmpsl
mov
ja
or
sbbl
mov
or
sbb
in
pop
cmp
and
dec
scas
insb
xchg
mov
mov
jmp
or
test
mov
pusha
jp
fidivs
or
sbb
cmp
inc
xchg
outsl
arpl
or
push
out
sbb
cmpsb
mov
aam
add
dec
in
insb
xchg
add
add
leave
out
in
push
mov
add
inc
jp
jno
sub
out
jno
frstor
cmpb
adc
in
out
movups
cmc
inc
insl
xchg
outsl
mov
jnp
out
pop
pop
repz
aad
cmpsb
sbb
adc
flds
jg
dec
pop
rcrb
pop
insb
and
aas
lahf
mov
fidivs
outsl
mov
stos
cmp
fwait
out
mov
and
sbb
outsb
insb
sarb
divps
xlat
xchg
push
push
jne
xchg
inc
cmpsl
mov
sub
sub
shll
add
sub
mov
lods
dec
fldcw
loopne
incl
sub
cmpl
cmp
sub
test
ljmp
test
popa
ror
cmp
aad
jb
mov
inc
mov
int3
inc
jo
rorb
idiv
rcll
loopne
jp
and
movsb
or
xchg
in
negl
mov
add
or
test
pop
mov
push
push
fnstcw
in
jmp
je
push
in
fbld
cli
insl
enter
les
mov
cmp
cmp
xor
fnstenv
sub
repnz
xchg
vshufps
sbb
imull
adc
sbb
aas
xchg
mov
xchg
std
push
pop
push
hlt
fistpl
cmp
lahf
dec
cmpsl
fsts
fmull
inc
jp
sub
cmp
hlt
cmp
cmc
addr16
mov
fs
cmc
mov
push
movsl
dec
pop
pop
loop
ffree
je
dec
aaa
push
fiadds
xor
push
insb
pop
pop
cmp
mov
inc
lret
dec
xor
sbb
pop
jnp
in
rolb
push
sti
sub
sub
xchg
sub
pop
jns
and
add
add
into
xchg
jne
mov
sti
jo
loope
fst
mov
shrl
or
adc
jp
aam
vpcmpgtd
test
sub
mov
enter
or
xchg
mov
shr
inc
jnp
rcrb
push
popf
daa
hlt
lods
outsl
mov
out
mov
xchg
pop
call
push
xchg
mov
mov
mov
iret
sbb
mov
ds
and
push
jmp
fiadds
inc
ss
lds
mov
cmpsl
in
jmp
and
xor
cmp
fidivrs
sbb
scas
cmc
in
or
stos
pop
stos
mov
mov
push
out
mov
sbb
lods
push
and
aam
adc
test
sbb
addl
repnz
leave
and
jg
imul
mov
lods
cmpsb
mov
push
imull
pop
xor
daa
xchg
jns
mov
push
xchg
inc
sub
add
xchg
cwtl
sbb
cmp
pop
mov
call
adcl
nop
pop
cli
add
jmp
push
push
outsl
xor
xchg
addr16
insb
mov
mull
nop
fcmovb
mov
sub
out
push
shl
repnz
stos
sbb
pop
push
and
xor
mov
cltd
or
neg
jp
sahf
and
out
aam
pop
incb
inc
jo
xlat
pop
xor
xor
mov
scas
xorb
jmp
pop
out
ja
push
push
pushl
mov
scas
mov
leave
test
shlb
lods
or
gs
shrl
push
adc
sub
dec
xchg
cmp
shll
add
inc
jecxz
push
das
dec
aas
cmp
mov
jae
sti
pop
lock
rclb
orb
icebp
out
ret
ja
fcom
or
div
dec
ljmp
int
sub
add
nop
nop
pop
xor
jae
mov
outsl
cld
out
ss
mov
mov
and
cld
jae
gs
cltd
jbe
jle
lds
int
loope
cwtl
lods
jp
jmp
or
pushf
inc
xor
insb
fnsave
andl
mov
push
xlat
jne
push
inc
pop
orl
cltd
in
jmp
pushf
ror
inc
clc
lock
loop
cmp
mov
out
adc
mov
popa
outsb
in
in
xchg
or
sub
lea
cmpsb
jo
inc
pusha
xchg
ret
jno
movsb
lods
or
adc
push
leave
or
call
sub
push
cmp
pop
push
jo
sbb
push
mov
sub
pop
inc
mov
jne
aam
and
cmc
lea
cmp
mov
pop
and
and
lods
cmp
inc
je
cmp
repz
fstpt
cmp
sub
scas
mov
xor
mov
mov
dec
adc
cltd
sarb
pop
push
pusha
xchg
push
mov
mov
lret
push
aad
xor
int
jnp
inc
sub
push
scas
dec
fdivrs
es
mov
pop
cmp
leave
add
and
jmp
xchg
lock
sub
mov
cli
test
loopne
scas
cli
fldt
sub
push
pop
mov
test
mov
xor
push
xchg
int3
lret
add
sti
fistpll
lds
jle
imul
mov
add
cs
mov
stos
jg
or
fsubrs
mov
lcall
or
and
xchg
mov
outsb
add
adc
sbb
sub
out
inc
jge
sub
mov
sahf
loop
arpl
add
mov
ds
or
inc
mov
jmp
pop
jmp
repz
or
stc
ja
push
xchg
jns
jmp
rorb
add
dec
aad
jmp
push
and
pop
dec
or
xor
bound
xor
or
sub
loopne
add
cld
jl
pop
mov
mov
cmpb
sub
movq
jnp
and
inc
outsb
in
xchg
in
dec
add
in
pop
call
fidivl
int
xor
inc
lret
cltd
fwait
push
inc
cwtl
out
mov
mov
mov
push
push
xchg
mov
insb
adc
das
loopne
cmp
std
and
stos
or
sbb
aaa
or
adc
lds
sub
inc
sbb
cmp
jecxz
push
mov
xorb
xor
jo
stc
mov
test
and
jns
xchg
cmp
cmp
cmp
out
mov
stos
out
mov
jnp
in
jno
bound
shlb
hlt
sbb
sbb
leave
sahf
sub
xor
dec
lods
fisttps
fmull
adc
testl
sbb
adc
cld
adc
jnp
jg
cwtl
dec
cltd
jbe
pusha
negl
out
adc
cmc
in
lcall
scas
xchg
add
dec
testl
add
add
fidivs
nop
stc
push
mov
xchg
fldcw
test
mov
adc
das
jb
sbb
aas
xchg
cmp
call
sub
or
cmpsb
pop
jbe
mov
shrl
and
push
push
ds
dec
ljmp
inc
push
pusha
pop
sub
add
or
push
fmuls
sub
push
mov
jnp
mov
ja
mov
in
fistps
pop
es
sub
lret
jg
fwait
push
cwtl
fisttpl
fdivrl
xor
rep
nop
stc
inc
adc
xchg
in
popa
insb
outsl
inc
outsb
ficoms
orl
add
dec
ljmp
pop
out
mov
fsqrt
shll
lcall
dec
mov
pop
dec
add
roll
and
mov
hlt
mov
push
mov
addr16
not
xchg
test
mov
push
cmp
jg
dec
adcl
sti
repz
sbb
fstl
iret
xchg
inc
xchg
mov
xlat
xchg
xchg
sub
jns
xor
test
pop
cmp
enter
add
fisubrs
das
sbb
outsl
xor
jnp
cmp
pushf
inc
test
sbb
imul
add
sub
pop
ss
daa
movsb
pop
orb
leave
lahf
ss
fwait
mul
sbb
pop
shll
enter
outsb
sbb
dec
mov
mov
test
mov
std
hlt
sbb
fwait
mov
or
and
mov
addb
inc
sbb
push
js
enter
loopne
icebp
and
ret
or
sbbl
push
pop
loope
stos
mov
test
and
fucomip
stos
in
pop
out
fdivl
pop
xchg
in
or
or
cltd
cmp
iret
mov
leave
jne
mov
xchg
inc
mov
or
and
sti
fwait
out
mov
mov
sub
les
test
mov
jb
imul
es
sahf
iret
adc
xchg
or
xor
cli
push
daa
enter
lcall
xor
xchg
xor
sub
lcall
sahf
adc
movsb
cmc
roll
ret
mov
ret
or
jle
xor
mov
dec
xchg
popa
adc
or
lcall
insb
cmp
lock
xchg
jecxz
pushf
repnz
mov
jg
fiaddl
dec
das
iret
aad
cs
int3
iret
mov
or
jnp
punpckhbw
addl
aas
pop
jmp
mov
sar
imul
xchg
gs
sub
pop
scas
push
mov
lds
jae,pn
clc
lock
decl
outsl
rclb
mov
push
fwait
loopne
sub
jb
int
into
sti
fists
mov
adc
dec
jg
movsl
fwait
mov
addr16
sub
ljmp
push
push
mov
adc
call
in
ret
pop
jg
sub
inc
mov
loope
ficoms
mov
inc
je
imul
push
xor
mov
xorb
int3
adc
fcmovnu
sbb
jno
or
ret
sub
xchg
shrb
in
and
pop
push
pop
out
clc
cmp
or
mov
fisttpll
inc
dec
add
mov
mov
add
ss
in
rorb
mov
add
sbb
lods
cwtl
cmp
jno
jno
xchg
xchg
sbb
imul
repnz
push
mov
mov
mov
cmp
ret
or
loop
mov
cmp
ret
fdivl
pop
sbbb
out
pop
cmc
addl
inc
cmpsl
cmp
iret
out
mov
push
cs
pop
or
bound
xor
jg
sub
mov
push
dec
inc
jge
out
repz
dec
jg
push
mov
rorl
les
xchg
ret
je
adc
hlt
out
xchg
push
pop
lods
xchg
or
push
mov
jge
push
roll
inc
mov
sub
xchg
ret
jl
mov
mov
xor
stos
and
out
sbb
add
and
and
imul
push
cmc
xchg
cs
scas
pop
mov
cmc
int3
subl
xchg
enter
popa
xchg
jo
arpl
or
cmp
lds
repnz
pop
and
push
push
dec
jge
sbb
fstps
std
lahf
sahf
cmp
cmp
ret
push
mov
call
mov
sahf
xor
mov
addr16
sub
mov
mov
call
mov
push
in
ljmp
rcrb
xor
mov
imul
es
inc
mov
adc
cwtl
clc
adc
jmp
movsb
jg
push
adc
loope
pusha
or
mov
mov
dec
sahf
mov
pusha
mov
repz
inc
outsl
dec
xchg
aas
inc
cmpsb
es
out
mov
lret
xor
mov
stos
mov
mov
pop
mov
xor
fcomi
pop
ret
and
push
jg
xor
cmp
cmp
inc
and
jg
pop
mov
maskmovq
idivl
fs
inc
cmp
je
pop
sub
in
fldcw
int
sub
sbb
xchg
sahf
aad
fsubrl
lret
popf
inc
add
jae
dec
xchg
int3
daa
enter
std
add
push
or
adc
cltd
xchg
sahf
mov
xchg
mov
cli
dec
test
clc
test
adc
cmp
sarb
push
xchg
push
jmp
sub
ret
mov
data16
cmc
adc
movsb
pop
jge
sbb
jle
leave
push
aad
mov
jg
outsb
dec
pop
and
and
xor
and
neg
pushf
stc
mov
push
dec
loope
add
push
push
inc
push
adc
rol
add
sti
sub
fsub
mov
xor
and
dec
lret
fwait
push
sbb
mov
rorb
rcrb
dec
cli
insl
enter
in
mov
dec
lret
aam
add
jg
xchg
pop
dec
add
adc
je
gs
arpl
repnz
movsl
stos
xor
or
dec
mov
jl
mov
xor
gs
nop
push
pop
pop
xor
nop
xchg
js
aad
xchg
and
cwtl
mov
xorb
add
stos
mov
pop
not
push
mov
test
popa
aad
sub
lea
xor
lret
shll
test
sub
shl
fistl
nop
and
repnz
ret
add
push
daa
or
dec
popa
xchg
ljmp
push
or
jge
js
cmp
cmp
fsubrp
xchg
roll
push
xlat
lods
fcoms
add
jbe
scas
loope
push
and
push
sbb
js
flds
mov
sub
and
out
sahf
out
sbb
icebp
xchg
mov
test
cmp
shlb
loopne
jae
push
sbb
lcall
adc
shll
pop
mov
icebp
jle
jae
adc
adc
stos
mov
pop
push
lds
scas
adc
sbb
lret
jmp
into
stc
imulb
dec
lock
pop
in
inc
cltd
xchg
sti
or
xchg
int3
and
fwait
inc
nop
lret
mov
xlat
clc
idiv
scas
inc
aam
inc
sub
shrb
mov
loopne
add
dec
mov
fidivs
sahf
mov
mov
mov
mov
jne
mov
rcr
dec
inc
lea
fstpl
stc
mov
inc
loop
mov
leave
imul
push
push
loope
push
lods
xchg
clc
push
lods
enter
inc
lock
dec
fld1
daa
out
mov
imul
daa
iret
dec
loope
stos
invd
call
sub
ficoms
leave
xchg
push
lcall
adc
shlb
and
cli
cmp
icebp
cmpsb
jl
add
mov
xchg
sbb
push
clc
and
lods
xchg
pop
cwtl
add
aad
sbb
lahf
mov
sub
pop
stc
mov
mov
and
pop
and
cmp
lds
sahf
or
and
cwtl
dec
xor
jae
push
cmpsb
pop
push
repz
lock
loop
adcb
das
das
sbb
push
cmp
cmpsb
mov
mov
adc
into
xor
push
mov
in
pop
fcompl
imul
and
mov
mov
xchg
push
adc
lds
jb
popf
pop
dec
xlat
imul
mov
sahf
adc
xchg
filds
push
leave
dec
mov
push
fstpt
sbb
lea
and
rcll
shll
in
adc
popa
or
fldcw
lea
jle
mov
adc
mov
insb
jl
inc
push
insb
and
dec
cmp
outsb
cltd
pop
jae
pop
jno
mov
sub
cmp
sub
xor
sbb
jnp
repnz
ljmp
or
mov
out
divl
lcall
push
mov
pop
xchg
stos
dec
loopne
stos
sbb
add
into
sub
lret
subl
add
shlb
lock
les
aaa
je
xchg
stos
out
inc
in
movsl
mov
sub
ja
or
mov
jb
or
xlat
mov
aam
xor
dec
mov
inc
adcl
fcomi
xlat
movsb
xor
dec
pop
mov
outsl
add
loop
xchg
repnz
idivl
cwtl
das
fdivrl
arpl
dec
dec
sbb
inc
movsb
or
xlat
sub
sbb
gs
and
insl
sub
mov
cld
call
xchg
outsl
pushf
sbb
inc
sahf
mov
nop
push
lret
out
and
lea
and
jge
jb
lret
jle
xchg
stos
call
sub
push
mov
sahf
lods
sub
lock
shll
hlt
jbe
add
enter
addl
mov
out
jmp
cmp
insl
lods
xchg
addl
incl
mov
pop
xchg
or
push
cmp
out
xchg
out
mov
push
sub
cli
mov
add
dec
add
insl
in
and
in
cmp
inc
repz
and
mov
iret
imul
mov
jl
popa
sbb
xor
sub
aam
pop
push
cmc
clc
inc
std
popa
pop
adc
adc
int3
repz
cmp
push
fcomps
rcrl
cmp
int3
and
stc
int
addl
ljmp
and
push
mov
shl
sub
ja
xchg
push
aaa
push
sbb
std
aam
dec
cltd
scas
push
imul
lahf
dec
loop
cmc
sbb
add
xchg
mov
inc
imul
xchg
leave
in
outsb
mov
or
jb
sub
stos
inc
add
ljmp
mov
loop
cmpsb
jnp
or
fs
add
adc
push
inc
mov
xchg
xor
ss
cld
dec
sbb
arpl
scas
jbe
ss
cli
xor
leave
shrb
popf
arpl
jns
int
cwtl
stos
mov
dec
test
fldcw
inc
daa
icebp
pop
std
push
enter
aas
call
push
in
out
cmp
das
aad
sub
push
int3
pop
lahf
fstp
push
push
xor
push
add
js
mov
add
pusha
inc
dec
aas
mov
nop
les
or
push
js
xor
push
sbb
push
fucomip
xchg
lret
xchg
pusha
clc
fs
mov
loopne
test
js
je
cli
push
inc
loopne
into
bound
inc
lods
aas
cmc
dec
pop
xor
inc
gs
add
insl
cmp
mov
sbb
adc
test
sub
insb
sar
mov
mov
out
cmp
inc
in
dec
inc
pop
sbb
push
inc
cwtl
fiadds
pop
sbb
in
cmpsl
inc
and
pop
push
jno
xlat
popa
pop
xlat
mov
sbb
mov
cmp
xchg
test
push
pop
test
fidivs
shl
cmp
fdivl
clc
xchg
sarb
add
mov
xor
inc
dec
mov
inc
jns
lret
lcall
mov
push
and
shll
sbb
ret
pop
mov
mov
hlt
sbb
ja
sahf
push
leave
jno
aas
arpl
xchg
mov
inc
inc
js
lods
pushf
push
into
addl
cli
stc
sub
adc
and
inc
push
call
cmp
shrl
popf
mov
push
sub
sub
subb
xchg
xor
inc
mov
add
add
pop
data16
jb
sahf
or
jb
and
add
cmp
and
cltd
inc
or
mov
jns
adc
and
adc
adc
adc
jnp
mov
mov
pop
sti
mov
or
jge
xor
sub
clc
xor
or
mov
loop
mov
inc
loopne
or
push
dec
in
lods
inc
fldl
loope
dec
dec
mov
add
jg
insl
insl
sbb
into
insb
hlt
sub
jns
clc
stos
pop
int
mov
add
add
jmp
or
pop
add
push
push
push
imul
inc
das
xchg
inc
fucom
xor
cmp
daa
pop
jno
add
xor
scas
dec
sarb
stos
out
lret
and
cmc
push
int
xor
dec
mull
lcall
sti
stos
dec
filds
pop
rcll
push
lods
xchg
sub
add
xchg
shrb
test
dec
pop
mov
loopne
push
or
arpl
jecxz
sar
adc
dec
fmul
jno
stos
es
das
inc
dec
les
mov
or
inc
jb
add
sbbl
js
in
jb
inc
xlat
ret
loopne
xchg
data16
mov
mov
repnz
xchg
mov
xor
iret
jno
or
loop
cli
jbe
inc
outsl
into
mov
mov
push
lds
adcb
out
bound
adc
aas
adc
xchg
addr16
stos
stos
jne
stos
outsb
leave
sbb
adc
lods
mov
data16
inc
int3
add
mov
jge
enter
ret
daa
jecxz
push
std
inc
movsb
xchg
fildll
mov
adc
mov
js
and
xchg
push
out
mov
dec
in
sub
scas
sub
out
movsl
arpl
cli
cs
adc
mov
push
xorb
jbe
push
mov
mov
cmp
dec
repnz
lock
mov
testb
out
xchg
fldl
lock
push
jbe
and
ljmp
pop
jne
fidivrl
dec
scas
fidivrl
aas
or
xchg
jmp
fists
je
dec
fnstsw
push
in
pushf
sbb
negl
stos
dec
mov
sbb
js
and
mov
pop
mov
aaa
ficomps
fs
push
lods
sub
xor
sub
faddl
outsb
sbb
and
cmp
std
dec
mov
mov
rcrl
pop
cmp
cmc
add
jl
movsl
jmp
test
arpl
xchg
popl
iret
mov
inc
insb
mov
jns
cmp
call
mov
scas
mov
pop
mov
std
xchg
xchg
lret
das
xor
mov
mov
repnz
inc
lretw
lods
jge
mov
sub
cmp
jmp
pop
icebp
jp
stos
les
js
inc
sub
pop
mov
movsb
add
icebp
pop
mov
adc
sbb
addr16
sbb
jmp
inc
or
pop
out
gs
popa
or
lret
jo
cmp
aad
clc
loope
push
orl
adc
ficoms
ja
imul
dec
and
sub
xor
push
rcl
add
add
imul
push
cs
xor
in
aam
lret
scas
and
sub
fs
pop
scas
out
xchg
cmp
mov
push
test
or
mov
mov
neg
inc
scas
repnz
sbb
aaa
mov
or
mov
xor
adc
cmpb
iret
xchg
add
shl
fnsave
repz
and
mov
ljmp
jae
stos
or
mov
rcll
movsl
mov
cmpsb
push
call
js
push
pop
fs
and
in
dec
mov
fwait
xchg
loopne
or
cltd
cmpsb
adc
outsb
icebp
in
xchg
xchg
push
lock
dec
jbe
or
out
outsb
in
jle
inc
push
mov
aam
jb
mov
lcall
push
jge
test
mov
leave
stc
std
pusha
insb
jmp
outsl
ss
dec
pop
adc
jns
je
cs
cwtl
dec
scas
push
out
out
lret
mov
repz
mov
sar
adc
mov
adc
xor
jg
mov
lea
xchg
sub
pop
xchg
fwait
cmpsl
clc
mov
lods
lds
mov
mov
xor
mov
mov
sbbl
or
repnz
sub
call
xchg
ja
jb
inc
mov
mov
cmp
inc
pop
push
hlt
iret
add
lret
sub
ret
and
iret
push
push
bound
fisttpll
jbe
and
ret
push
fisttpll
xlat
mov
mov
push
mov
setb
lret
out
xorl
sbb
mov
imul
popa
xor
cvtpi2ps
xchg
sbb
sti
fisubrs
mov
xchg
sub
xor
notl
push
sub
jl
icebp
rcll
pop
pop
inc
or
test
xchg
pop
add
inc
out
pop
or
push
mov
mov
shlb
inc
inc
ret
icebp
sub
jle
add
gs
arpl
xor
mov
push
and
push
xor
xor
cmc
jae
neg
inc
cmp
push
dec
inc
or
xor
out
dec
ret
arpl
sbb
scas
jne
cwtl
inc
or
ret
mov
pop
lret
adc
repz
enter
es
fwait
add
jbe
or
das
or
fmuls
and
ja
push
sub
mov
mov
fistl
add
dec
fldcw
fwait
pop
or
outsb
subb
cmp
fiaddl
mov
mov
insb
dec
cmpsb
jb
mov
ljmp
jnp
les
jmp
mov
fiaddl
movsb
jl
pop
push
sarb
les
pusha
push
fiadds
xchg
and
popa
sub
nop
mov
pop
adc
cmp
pushf
daa
ja
sub
xchg
sbb
div
dec
int3
imul
js
out
enter
repz
dec
mov
pop
icebp
mov
movsl
sub
pushf
sbb
push
loope
mov
jo
push
pop
aaa
cltd
arpl
jne
mov
bound
mov
and
jbe
push
dec
rcrb
jns
roll
sub
cmc
jmp
cli
iret
adc
mov
pop
push
or
ds
mov
and
mov
bound
cmpsl
and
mov
mov
inc
or
and
pop
imul
data16
mov
xor
adc
ja
dec
mov
jg
jmp
sub
leave
xchg
ret
sbb
sub
pop
sub
cmp
sti
pop
mov
mov
sub
daa
push
nop
pushf
arpl
jg
hlt
xchg
iret
into
loop
dec
lds
xchg
adcb
adc
adc
iret
rdmsr
imul
sbb
aas
adc
jno
mov
out
stc
cmp
add
dec
outsb
dec
cltd
push
cltd
push
pop
or
loope
and
inc
inc
push
push
xor
cmpsb
repnz
lods
in
mov
jne
push
pop
stos
sahf
insl
adc
rclb
out
iret
xchg
xchg
inc
inc
cmp
ret
leave
dec
jo
lcall
jmp
lret
dec
and
out
mov
mov
adc
xchg
iret
inc
fisubs
or
roll
adc
cmp
test
mov
cli
cmp
fwait
ds
pop
lea
jmp
mov
xor
into
xor
jnp
mov
movsb
inc
or
pushf
leave
into
dec
mov
es
mov
mov
cmp
adc
sub
mov
cmp
and
popf
sub
jg
dec
lcall
sub
xchg
or
fisubs
cld
pop
xchg
jb
stos
cmpsl
out
js
pusha
sub
adc
mov
push
add
mov
scas
add
cmp
pop
out
sub
bound
adc
test
mov
in
fucomip
mov
outsl
jbe
xor
push
xchg
jecxz
sub
cmc
aam
add
dec
sub
jmp
push
xchg
mov
add
lock
cmpsb
call
push
lds
jns
in
int3
fimull
les
pop
popf
loopne
mov
mov
and
lods
pop
pushf
pop
mov
fimuls
dec
sbb
pop
popf
dec
cmpsl
fildl
mov
pop
xchg
inc
les
dec
lret
jp
fs
popf
imul
mov
mov
lods
inc
jg
rcr
icebp
or
inc
push
mov
cmp
faddp
arpl
sub
push
enter
loope
sbb
jno
xchg
mov
xchg
sub
dec
sbb
cmc
push
imul
movsl
in
mov
inc
mov
cmpb
cmp
cmp
das
xchg
shrb
imul
dec
loop
jmp
outsl
shr
cmc
imul
das
stos
pop
lret
inc
cld
das
sti
andl
pop
mov
cli
pop
pop
xchg
aam
jb
hlt
mov
mov
psubb
sbb
ret
push
inc
mov
test
xchg
mov
cmp
push
cltd
sub
movlhps
mov
or
imul
push
dec
shrl
shll
ljmp
rclb
push
jmp
push
repnz
lds
jmp
cmc
test
das
mov
mov
out
mov
dec
das
shll
sub
stc
adc
or
cwtl
push
test
out
into
lds
aas
cli
ss
add
movsb
xchg
pop
sti
mov
inc
push
decb
xchg
cmp
rorb
loopne
insb
das
es
dec
cli
movsb
cmp
test
sbbb
cli
ljmp
adc
jno
out
fwait
sarb
adc
add
jmp
xor
lahf
mov
cwtl
pop
pop
push
testb
fnstsw
adc
mov
cmp
movsl
ljmp
push
pop
lods
push
push
imulb
mov
add
lods
lods
sub
ljmp
mov
mov
loopne
xchg
pop
xchg
mov
addb
lock
xchg
and
cmpsb
in
xchg
pop
mov
sbb
mov
mov
sbb
sub
mov
mov
or
ja
push
push
testl
mov
dec
outsb
imul
inc
daa
mov
adc
sti
sbb
sbb
mov
mov
ljmp
or
jle
cmp
popa
jno
aaa
iret
cmpsl
sbb
xchg
xor
imul
cmp
sbb
jb
clc
jb
sbb
int
jp
int
mov
mov
jns
and
sub
sub
sub
div
cwtl
sbb
xor
fwait
cli
fs
push
fildll
sub
test
mov
fwait
mov
sbb
ds
mov
mov
cmp
push
jle
xor
mov
cmc
das
in
outsb
add
das
or
or
push
xchg
ljmp
loop
addr16
mov
scas
ror
sti
jge
or
sub
out
loopne
pop
test
inc
add
rol
aaa
mov
gs
pop
cmp
pop
jle
mov
sub
sbb
icebp
mov
dec
sbb
xchg
in
cmp
mov
lods
mov
shr
pop
and
leave
push
std
icebp
dec
pop
mov
fnsetpm(287
cmp
outsb
dec
sbb
jbe
stos
test
out
xchg
inc
jno
loop
inc
sbb
or
movsb
xchg
aam
scas
push
lock
adc
fbld
mov
mov
daa
outsl
dec
adc
and
call
push
add
push
outsl
push
iret
enter
shl
jge
in
shrb
div
pop
adc
mov
inc
addr16
hlt
adc
mov
leave
push
add
cli
jbe
cs
shll
cli
std
dec
push
psrad
sbb
js
pop
repnz
out
lahf
insl
outsb
add
xor
test
mov
sbb
cmp
ret
adc
shlb
mov
pusha
mov
test
xchg
mov
rorb
push
ret
inc
fildll
sub
fstpl
xor
inc
cmpsb
in
loopne
jp
pop
dec
ds
pop
cs
cwtl
loopne
mov
int3
push
call
cli
lcall
loopne
push
daa
js
pop
xchg
int
mov
lods
rcrb
adc
push
jae
push
cli
lods
mov
imul
insb
mov
ljmp
in
movb
scas
jecxz
xchg
push
addb
jecxz
je
data16
jmp
lods
jle
lds
fnstsw
mov
jae
xlat
sub
repz
push
push
leave
xor
sub
cmp
int
mov
sti
jg
roll
push
test
leave
inc
mov
push
xor
jmp
iret
xchg
mov
push
insb
popa
mov
scas
add
jbe
cmp
push
jg
mov
mov
fnsave
int3
adcl
sub
cmpsl
cltd
xor
das
xlat
adc
shll
mov
or
cmp
xchg
shll
xchg
jmp
sbb
pop
lock
pop
mov
or
in
cmpsb
adc
push
xor
pop
in
repnz
gs
xchg
sub
fldt
dec
sbb
cmpsl
fsincos
stc
pop
rolb
push
ret
jle
nop
adc
mov
in
push
hlt
fbstp
in
xlat
mov
add
inc
fistl
inc
mov
push
xchg
xchg
movsb
xchg
fs
mov
mov
cwtl
test
adc
das
xchg
sub
shr
adc
mov
fsubrl
xor
mov
mov
add
mov
mov
pop
int
adc
in
cmp
pop
mov
add
loope
or
pop
inc
sti
mov
pusha
inc
int
jb
aam
inc
cmp
cmc
jne
lds
pushf
adc
mov
cmp
loope
push
jle
dec
sub
mov
jae
mov
in
sahf
or
outsb
pop
fwait
dec
sub
xor
jb
xchg
ja
push
testl
lret
mov
stc
mov
jb
mov
pop
xchg
clc
stos
mov
loopne
fldenv
imul
aas
ds
pop
or
test
and
outsb
add
sbbb
or
push
pop
imul
scas
aas
cmp
cmp
out
shrb
neg
sbb
pop
daa
sub
jno
sbb
mov
addr16
or
jle
sub
mov
fstpl
and
imul
mov
lods
sbb
addr16
pop
lods
arpl
addb
movsl
pushf
cli
cmp
movsb
pop
jge
sbbl
leave
in
out
lock
iret
mov
xor
lcall
insl
jg
jmp
cmpsl
imul
ss
mov
mov
jns
xchg
inc
add
or
or
mov
inc
fiadds
xor
fnsave
pushf
sti
out
fdivl
add
fsubr
ds
test
shlb
fldl
and
aaa
gs
xchg
ds
insl
lret
loopne
jle
push
push
add
sub
fucomp
int3
adc
lcall
mov
das
or
inc
in
andl
add
mov
imul
dec
fdivp
icebp
mov
xchg
cli
add
rolb
insb
outsb
cld
xchg
out
test
test
mov
pop
mov
cmp
xor
push
push
sbb
fucomp
add
test
mov
mov
outsb
or
ss
js
andb
push
testb
xchg
clc
jne
add
addr16
js
xlat
stos
adc
dec
lods
scas
scas
xchg
cs
dec
fadds
stos
jnp
mov
mov
es
mov
push
or
push
rcr
loopne
addr16
ss
xorb
sub
fists
push
rcr
bound
add
fmuls
push
sub
or
scas
or
addb
mov
scas
pop
fcmovnu
mov
stos
or
mov
push
jbe
lods
mov
sub
paddusw
cmpsl
push
xchg
aad
xchg
pushf
lock
xchg
enter
call
xchg
stos
push
inc
loopne
inc
jbe
js
and
test
push
adc
dec
mov
push
iret
mov
mov
clc
pop
int3
aad
bound
xchg
shll
xchg
dec
mov
das
mov
sbb
pop
aam
mov
call
jns
pusha
out
push
adc
add
fidivrl
pop
adc
mov
xor
in
and
stc
xor
repnz
cmp
scas
ficoml
test
jbe
imul
pushf
inc
sub
sarl
sub
inc
jno
sbb
pop
dec
shlb
sbb
jae
rorb
dec
pop
sub
shll
xor
pop
inc
pop
daa
mov
adc
xchg
aam
cli
ret
pusha
sbb
xchg
cmp
fmulp
dec
lret
pop
add
nop
mov
push
and
lcall
or
mov
jns
or
xchg
dec
ret
movsl
mov
xchg
loop
add
out
dec
cmpsl
in
shll
mov
out
cmpsl
push
sbb
mov
push
or
addr16
mov
lret
jg
enter
sbb
std
dec
ljmp
cmp
iret
rol
fdivp
mov
push
or
ljmp
push
sarb
sbb
pusha
xlat
es
xor
es
xor
jle
adc
sbb
sub
fsts
aaa
dec
cmpsb
inc
movsl
mov
inc
out
mov
pmullw
xchg
scas
pop
mov
scas
mov
repnz
or
xor
adc
sub
arpl
enter
xchg
or
xlat
stos
adc
inc
test
push
inc
dec
pop
je
xor
shl
nop
push
jp
jb
xor
jg
mov
sahf
add
mov
and
add
in
cmp
adc
mov
fs
or
xchg
jle
inc
push
pop
stos
in
movsb
inc
adc
in
mov
imul
fwait
xchg
mov
xlat
xchg
loop
xchg
cmp
xorb
insl
xchg
movsl
jmp
jae
les
mov
fists
imul
inc
pop
ds
insb
sub
cmp
sbb
icebp
mov
mov
sbb
test
cmp
pop
or
xchg
inc
ret
xor
test
or
xor
cmpb
ret
ret
inc
pusha
adc
jnp
int
out
andb
push
addr16
adc
mov
sbb
mov
jns
mov
out
sbb
lahf
jmp
cmpsl
ja
insb
popa
add
lahf
jp
inc
and
les
repz
fimull
cltd
mov
test
mov
iret
add
sahf
xchg
in
inc
test
jns
inc
cmpsl
fs
insb
xor
mov
rol
xlat
ret
mov
push
jp
movsl
orb
sarb
dec
pop
mov
xchg
inc
dec
ficoml
into
adc
push
or
push
mov
imul
or
lea
imul
xchg
leave
dec
notl
pop
and
jg
ljmp
cmp
dec
je
adc
das
jnp
mov
enter
pop
test
icebp
push
and
out
inc
pop
fistpll
pop
mov
pop
out
lock
ret
mov
cs
test
pop
and
jecxz
in
or
pop
shrl
and
pop
sbbb
mov
fs
push
pop
sahf
add
icebp
subb
pop
inc
aas
adc
mov
aaa
jge
mov
sbb
mov
push
cmpsl
jmp
cld
mov
das
repz
mov
test
sbb
cmp
lret
add
add
sbbb
lea
or
push
add
lret
cmp
stc
lahf
jg
push
add
loopne
pop
push
aam
jb
mov
sbb
xchg
jae
jle
lret
mov
pop
mov
pop
cmp
aam
in
fnsave
ret
mov
mov
inc
sbb
ret
test
adc
mov
or
inc
fmull
xor
cmp
aam
enterw
push
push
sar
pop
and
gs
jns
xlat
sarb
loope
sbb
adc
adc
mov
push
adc
test
xor
sahf
sub
loopne
and
fucom
ret
js
nop
xchg
xchg
adc
paddsw
fwait
mov
xor
in
jae
ret
leave
mov
jge
in
andl
shr
cmp
imul
inc
xor
inc
push
cmc
cwtl
fnstsw
or
xchg
mov
or
or
or
push
push
adc
xlat
aad
hlt
aam
xor
cmc
adc
test
inc
sbb
xchg
out
popf
scas
add
dec
mov
lea
jne
xchg
inc
mov
xchg
xchg
insl
jg
fdiv
sbb
fsub
sub
or
and
xchg
and
fstps
or
ret
inc
jae
inc
sbb
fdivl
int
test
fchs
pop
enter
jecxz
adc
enter
mov
out
test
cmp
xchg
sbb
test
mov
mov
rcll
ljmp
imul
adc
xor
push
sti
decl
and
and
jmp
pop
add
mov
sub
jl
hlt
mov
mov
mov
mov
pop
dec
add
sbb
sbb
addr16
call
push
inc
stos
sbb
popf
cli
pop
inc
mov
mov
repnz
dec
jno
fsubrs
adcl
aam
and
gs
stos
addr16
sahf
aam
sbb
mull
dec
fldcw
and
mov
leave
hlt
xchg
mov
pop
sub
pop
push
int
fldt
push
in
test
das
add
jnp
out
push
mov
mov
imul
sahf
fsubl
xchg
loope
test
popa
fs
loop
sbb
imulb
jp
sti
rcll
gs
pop
in
pop
add
test
mov
imul
adc
testb
xor
or
inc
ret
push
dec
push
arpl
inc
mov
ljmp
in
adc
lea
add
aad
sbb
insl
nop
lods
jl
adc
cmp
ljmp
in
iret
mov
sub
sbb
mov
mov
es
dec
and
lods
add
sahf
mov
xor
inc
rcll
sti
adc
add
lret
push
orl
jae
addr16
insl
test
xlat
xor
lret
js
cmp
pop
pop
pop
dec
int3
push
jl
and
popf
xor
add
clc
inc
jns
imul
mov
addr16
inc
pop
shr
ffree
in
inc
push
lods
jge
bound
stc
loop
aad
or
lret
in
and
jg
fcomps
gs
push
in
insl
inc
sarl
cmp
push
andb
clc
push
jae
roll
lret
or
cwtl
pop
sub
mov
or
jle
or
jne
in
scas
cld
push
xorl
inc
imull
test
push
insl
pusha
xorb
cwtl
and
dec
cmp
cmp
inc
iret
inc
sahf
add
dec
das
stc
pop
xchg
mov
orl
nop
mov
jmp
subl
je
data16
lret
xor
add
or
leave
push
shrb
out
mov
mov
popa
xor
add
pop
call
jne
fisubs
push
popa
ja
mov
sub
push
mov
ret
dec
pushl
dec
movsl
mov
push
sbb
push
push
dec
and
mov
aas
imul
cwtl
jle
ss
insb
outsl
inc
and
hlt
pop
ja
adc
bound
fstpt
loop
jb
add
mov
rcl
adcl
mov
and
mov
mov
ljmp
into
loopne
test
push
xchg
xchg
sbb
repz
inc
hlt
cmp
fs
loope
xor
push
mov
mov
into
out
leave
idiv
mov
add
xor
xor
add
outsl
lret
xor
add
stos
jl
jmp
pop
popa
shrl
mov
push
cwtl
and
sbb
nop
lret
cwtl
add
out
mov
movl
sub
mov
mov
or
out
fists
cmc
push
inc
inc
jne
ljmp
cmp
mov
insb
adc
leave
pusha
int3
scas
test
test
push
dec
test
inc
mov
test
test
adcb
push
xchg
gs
mov
jnp
andl
add
cmp
jb
sbb
mov
sbb
insl
xchg
repz
movsl
jo
addb
adc
mov
mov
imul
dec
sbb
adc
sub
push
dec
gs
rorl
faddl
lods
mov
movsl
sbb
and
xorb
pop
cwtd
adc
mov
cli
inc
loopne
jae
incl
lock
data16
data16
adc
or
idiv
sub
out
call
and
add
les
ret
mov
xor
ds
or
loope
xchg
xchg
push
add
or
sbb
imul
pop
mov
clc
imul
dec
aad
mov
xor
enter
pop
xor
aaa
dec
xor
ss
or
sbb
lock
hlt
movsb
cmpsl
mov
in
inc
fcoms
test
enter
mov
fildl
in
scas
aam
lcall
inc
into
or
push
sub
outsb
jge
jae
lods
pop
test
push
std
inc
in
jno
inc
add
hlt
add
and
loopne
mov
xchg
inc
sarb
sub
lahf
shll
mov
rolb
call
ja
outsb
std
ljmp
mov
ud2
aam
shll
repnz
js
push
pop
sub
push
les
adc
call
out
insb
cmp
rcll
cmc
push
sbb
sahf
mov
ja
sub
test
and
pop
and
add
xchg
xchg
sbb
sub
lds
or
jno
gs
inc
addl
add
xchg
js
in
push
nop
or
nop
inc
divl
dec
out
and
loope
push
jmp
push
mov
cmpsb
push
mov
jno
jp
cli
test
mov
push
das
push
fwait
pop
pusha
xchg
ficoml
clc
pop
push
lahf
mov
loop
mov
pop
fldl
aaa
xchg
test
pop
je
popl
in
loope
cltd
sub
lods
aam
inc
popl
push
aaa
cmpsl
dec
jmp
inc
test
repz
pop
enter
stos
mov
jbe
push
mov
inc
inc
jg
push
sub
test
dec
pop
xor
dec
jmp
xchg
lock
sbb
xchg
push
js
out
cmpsb
sub
mov
cmp
push
pop
mov
cmpsb
std
popa
cmovno
loopne
push
dec
popf
xchg
pushf
insb
mov
pop
test
cmp
adc
icebp
cmpsl
sbb
test
pop
lret
or
jno
mov
jne
scas
call
leave
jl
mov
ljmp
ds
ret
push
push
jmp
test
adc
mov
movsb
inc
push
aas
aam
das
pop
lods
popa
fisttpl
cmp
ds
outsl
mov
rorl
nop
hlt
aas
js
sti
lcall
sub
push
mov
loope
repz
adc
call
or
add
sub
mov
mov
fstps
inc
push
xor
orl
bnd
lcall
fldt
ret
les
jmp
scas
sbb
hlt
negb
fnstcw
stc
lret
cs
xchg
jbe
mov
cmpsl
divb
cs
dec
jns
xor
and
jecxz
pop
stos
mov
xchg
sbb
xor
jge
loopne
in
addb
outsl
jp
in
inc
sub
mov
popf
cmp
lret
mov
es
xor
push
lahf
mov
and
repnz
lahf
sub
pop
dec
out
aad
lcall
mov
fisubrs
mov
sbb
sarb
push
sbb
shrb
js
stc
sub
jo
mov
in
cmp
mov
faddl
sub
dec
cmpsl
sub
cmpsb
mov
adc
cmp
test
cmp
mov
cld
rcll
push
gs
adc
pop
in
gs
dec
mov
ret
xchg
push
or
test
xor
cs
addb
lret
and
add
je
cmp
cmpsl
add
xchg
add
mov
sbbb
shll
xor
pop
imul
xchg
ret
xchg
popf
adc
mov
pop
cmp
dec
js
xchg
scas
rcrl
cmp
or
lea
or
xchg
push
lea
ret
sbb
add
mov
sub
or
inc
cli
mov
or
in
add
adc
xchg
in
call
sub
data16
lret
adc
xchg
and
jp
inc
test
dec
arpl
sti
adc
lahf
pop
leave
lcall
push
sbb
mov
xchg
ffreep
mov
mov
or
push
or
xchg
dec
mov
push
mov
and
fcompl
cmp
cmp
sbb
enter
cmpb
test
cmpl
daa
push
jns
cs
push
xlat
fdivrp
mov
dec
jns
adc
jge
dec
push
push
inc
out
rcrl
cmpsb
lods
lods
mov
repz
sub
rorb
xchg
das
in
addr16
scas
in
out
ficomps
or
out
imul
mov
movl
loope
jno
movd
fwait
cmpsl
inc
mov
pop
adcl
roll
mov
sub
xchg
cmp
repnz
ljmp
cmp
loopne
sti
bswap
cwtl
sarb
cwtl
mov
cmp
test
jno
xor
data16
mov
and
inc
push
out
daa
sahf
or
loop
jnp
dec
sbbb
or
ss
cwtl
gs
insl
in
loopne
movsl
mov
mov
adc
pop
dec
mov
mov
inc
jbe
jne
push
rcr
shlb
sbb
jno
test
ljmp
mov
insb
test
jl
dec
cmp
insl
daa
test
xorl
shrl
sub
std
inc
xor
cmp
clc
sbb
pusha
fcompl
cld
dec
inc
jb
pop
push
cmp
pop
adc
stc
mov
mov
inc
add
adc
dec
xor
testl
movb
sub
cmc
fwait
out
jbe
mov
add
xor
xchg
xor
test
inc
mov
jmp
lock
jb
adc
cmc
jbe
lea
divl
and
lds
cmpsb
movsb
jnp
stos
outsb
adcb
dec
sarb
pop
pop
sarb
out
lods
sti
adc
loopne
icebp
int
xor
pop
sbb
stos
mov
lret
pop
mov
jg
outsb
dec
sbb
out
mov
arpl
xor
add
hlt
cmp
push
test
rcrl
sbb
sbb
xchg
jg
out
sarb
push
in
lods
and
stos
pop
mov
outsl
dec
in
xor
xor
inc
jb
iret
lahf
xchg
adc
cmp
ror
adc
shrb
in
cmp
adc
in
mov
call
fcompl
pushf
aam
outsl
inc
popf
or
cmpsl
leave
test
ret
loope
insl
xchg
mov
mov
mov
roll
inc
pop
mov
dec
in
jae
imul
out
adc
out
test
ja
jecxz
and
movsl
sub
inc
rcrb
repnz
sarb
fnstcw
sbb
bound
mov
jle
dec
inc
xchg
ljmp
sbb
outsl
lcall
mov
repnz
inc
sbbb
scas
je
adc
scas
dec
push
shll
js
sub
jne
adc
dec
inc
bound
cmpsb
mov
test
movsl
push
mov
unpckhps
jge
mov
out
xchg
arpl
and
add
dec
jo
and
les
stos
xchg
es
jl
rorl
jp
pop
pop
lods
fstpl
mov
in
in
mov
loop
adc
jo
xchg
idiv
mov
mov
push
or
pop
adc
mov
roll
mov
rcrb
mov
xchg
ret
test
out
push
scas
push
jns
sbb
sub
mul
loope
or
ficompl
xor
movsb
add
movsb
jg
mov
or
in
pushf
shr
mov
sahf
loope
rcrb
loope
dec
cmpsb
cmpsl
sahf
jbe
adc
and
mov
and
push
cmp
push
arpl
adc
sub
aam
cmpb
sub
push
fidivs
cmp
add
repnz
sub
sbb
sub
push
sti
xchg
popf
dec
scas
pop
cmp
shl
dec
data16
out
xchg
add
leave
divb
clc
arpl
les
mov
cld
sbb
and
ds
sub
jb
mov
cmpl
je
hlt
xchg
mov
adc
shrl
mov
ret
mov
stos
adc
loopne
cmc
or
fists
out
imul
push
ljmp
lds
lcall
inc
push
fcmovu
push
inc
int
pop
sahf
pop
or
jne
jmp
dec
daa
dec
clc
popa
or
dec
jle
sub
mov
cs
lods
xchg
aam
or
push
and
push
push
in
xor
xlat
or
insl
mov
add
pusha
add
or
jecxz
sbb
rclb
ror
cmpb
jle
fld
xchg
dec
inc
lods
sti
shrb
sbb
mov
push
pop
imul
and
adc
leave
inc
dec
xor
push
pop
fs
push
sub
fwait
jmp
pop
das
mov
and
lods
push
xchg
clc
sbb
xor
bound
popa
sbb
push
loopne
rclb
cmp
cmp
adc
sub
push
fisubrl
subb
cwtl
inc
insl
icebp
fiadds
aad
mov
std
pop
mov
xor
cld
fidivrl
mov
xchg
aas
stos
sahf
out
lret
and
and
std
or
mov
pusha
push
xchg
mov
rclb
fcom
mov
pop
daa
fwait
mov
mov
jnp
push
and
inc
nop
les
mov
cmp
add
outsb
pop
add
or
shrl
push
mov
lret
xchg
jecxz
out
jne
jb
xchg
cli
loop
int3
cmpsb
dec
mov
cmp
sbb
imul
ljmp
jle
ja
mov
xor
sub
pop
fwait
inc
cltd
in
sbb
fdivs
in
or
shlb
adc
sbb
jnp
adc
jmp
cmpsb
pop
xchg
dec
insl
fwait
cwtl
sbb
mov
pop
cld
or
mov
pushl
jge
aas
push
cltd
lcall
int
push
fsubs
dec
push
dec
xchg
je
xchg
mov
rol
adc
xchg
jnp
in
add
adc
les
push
sub
push
out
xor
add
insb
out
cmp
mov
push
outsb
jb
sarb
jne
jo
sbb
jp
lea
cmc
rol
sti
jb
adcl
mov
ljmp
test
sbb
xlat
dec
call
test
mov
mov
sbb
mov
or
adc
addb
push
pop
push
lcall
or
or
mov
adc
push
repnz
addb
les
sbb
mov
or
and
imul
mov
ss
xchg
shll
cmp
push
popa
push
push
pop
pop
jg
cmp
xor
pop
ljmp
dec
adc
mov
pop
cmp
cmpsb
subb
pop
test
cmp
call
adc
xorl
pop
sub
cmp
adc
int3
and
arpl
loopne
fnstenv
cmp
or
stos
ja
outsl
lret
rcrl
in
ss
jae
mov
or
inc
lahf
out
das
outsl
inc
scas
and
cltd
movsl
ret
adc
sbb
xchg
repz
mov
lret
sti
movsl
push
and
insb
cmp
sub
jb
popf
je
pop
push
inc
xorb
push
pop
pop
inc
push
andb
es
fiaddl
shrb
int3
cmp
lds
lcall
inc
inc
fdivrs
out
and
dec
jno
bound
clc
jns
jne
add
mov
and
mov
es
scas
xorb
rol
add
pop
or
mov
imul
pop
xor
test
inc
dec
ljmp
push
lret
loopne
or
dec
xchg
in
jle
push
cmc
int
fs
cltd
mov
mov
jae
out
add
mov
push
pop
push
call
addr16
fists
loope
xlat
or
fwait
repz
jbe
fcomp
mov
cmp
dec
movsl
out
gs
mov
or
mov
mov
sbb
sub
fs
inc
adc
cmp
mov
push
je,pt
pushl
fidivrs
dec
and
rcrl
sub
xlat
dec
cmpsb
mov
scas
mov
adc
iret
or
ds
leave
push
add
pop
out
clc
and
mov
mov
cmp
es
cwtl
jle
mov
mov
fsts
test
sub
xchg
jp
xchg
pop
mov
mov
fldenv
mov
rcll
mov
jle
hlt
xor
packuswb
repnz
dec
mov
test
pushf
cmp
ret
dec
arpl
jb
pop
mov
call
cwtl
xchg
push
cmpsb
icebp
mov
or
orl
lods
scas
push
icebp
push
arpl
sub
loope
sub
lods
xor
push
cmp
adc
in
inc
into
sbb
js
pop
ja
cld
fstps
mov
outsl
push
lds
mov
xor
sbb
fidivrs
gs
shrb
cmp
push
fst
xor
mov
mov
and
sti
test
fst
in
adc
sub
or
idivl
dec
ds
lods
xor
sti
inc
test
xchg
stc
mov
xchg
add
in
mov
std
sub
sub
mov
fisubl
in
and
xlat
fwait
push
lods
loopne
adc
lds
jne
or
jbe
jno
sbb
and
adc
shl
or
sub
dec
lock
fsubrl
hlt
fisttpll
push
leave
xchg
shlb
fbld
push
xchg
dec
mov
int3
pusha
bound
dec
stos
es
inc
popf
in
cmp
test
test
popf
sbb
sbb
xlat
test
movsb
sbb
cli
ljmp
dec
jae
cwtl
mov
xlat
or
add
dec
sub
push
or
fildl
mov
dec
fists
fstl
push
lret
aad
movsl
xlat
inc
xor
mov
ret
mov
mov
push
inc
xor
int
mov
sahf
shrb
je
jae
mov
and
mov
push
xor
jle
push
mov
int3
enter
lahf
jl
pushf
testb
je
push
xchg
xor
lret
mov
push
dec
jmp
test
aas
cltd
mov
xchg
ljmp
movb
cli
iret
and
pushf
mov
lcall
jmp
aam
add
mov
out
in
popa
push
xchg
pop
fprem
jl
cli
outsb
dec
loopne
leave
adc
cltd
popa
sbb
iret
jae
sti
enter
mov
es
dec
lahf
sbb
sbb
cmpsb
sub
das
repnz
jg
sti
inc
in
int3
xor
fiadds
sbb
out
mov
lret
dec
jl
hlt
lret
pop
cltd
lods
sbb
outsl
mov
addr16
loop
jno
loopne
push
enter
inc
or
mov
adc
push
jb
test
cmp
movsb
jnp
dec
xchg
inc
xchg
mov
ljmp
cltd
test
loope
xor
out
cmp
mov
cli
and
lds
cmp
push
fyl2x
rolb
je
and
or
and
pushf
and
fucomi
enter
pop
dec
pop
mov
out
out
mov
addr16
sbb
jne
push
mov
sub
add
fimull
xor
cmc
push
dec
fs
jp
add
jle
ret
push
dec
or
mov
je
xor
sbb
ljmp
inc
in
push
pop
add
lods
int
popa
pop
mov
add
adc
dec
stos
test
dec
jge
into
ss
pop
mov
loopne
lock
mov
and
add
jmp
jne
push
xor
push
lods
dec
lret
std
pop
adc
xor
dec
lcall
test
mov
sbb
add
pop
inc
mov
lcall
icebp
fnstenv
mov
mov
pop
pop
adc
mov
addr16
jns
xchg
roll
shrl
jo
lahf
test
sar
sbb
pop
sbb
sub
push
sub
sub
sbb
sbb
fs
mov
adc
leave
mov
sti
outsl
and
xchg
inc
lcall
cmp
fnstsw
adc
mov
aaa
pop
mov
stc
jbe
cmp
paddb
pop
sub
ret
push
sub
add
scas
shlb
aad
lea
and
mov
cmp
and
add
sub
fimull
aas
pop
test
dec
orl
aaa
inc
rcl
sahf
push
int
fdivp
dec
add
fdivrs
mov
push
jge
jb
pop
mov
xor
sbb
pushf
dec
sbb
inc
iret
out
pop
imul
dec
add
call
lret
sbb
movsb
push
lret
xchg
cltd
xchg
aas
inc
pop
in
mov
das
hlt
jmp
or
jg
js
outsl
jae
adc
int
js
pop
push
mov
add
mov
add
lahf
add
add
jae
jl
push
inc
jnp
loopne
ror
pushl
bound
dec
fildl
scas
bound
push
fs
cs
jbe
ja
pop
mov
ljmp
or
out
xor
push
stos
add
pop
jmp
and
cs
sahf
and
or
xor
imul
pop
imul
mov
das
push
loope
jmp
mov
adc
adcb
adc
push
and
popa
inc
repz
cmpsb
pop
repnz
sbb
call
sbb
xchg
mov
sbb
into
leave
mov
xchg
in
leave
mov
mov
jl
add
add
hlt
add
push
dec
and
cmpsl
xlat
daa
repz
sub
push
popf
popa
xchg
cmp
add
repz
xchg
xor
cmp
jnp
es
sbb
inc
push
or
push
pop
xchg
push
in
inc
xor
adc
insb
dec
push
xchg
sub
xor
push
cmpsb
call
mov
mov
adc
adc
or
push
adc
std
cltd
sbb
jo
call
into
daa
out
scas
dec
push
mov
mov
jns
imul
add
mov
outsl
pop
popf
movsl
sbb
push
sbb
lea
lock
dec
xchg
dec
sarl
jae
idiv
arpl
pushl
ret
js
getsec
mov
jnp
cmpsl
pop
mov
mov
scas
gs
add
pop
addl
inc
add
pusha
leave
pop
and
cmp
pop
mov
test
xchg
and
xchg
inc
dec
mov
pop
mov
inc
nop
push
out
fchs
push
lods
add
or
dec
push
cmp
enter
jge
or
add
int
ljmp
xor
shrb
subb
shl
mov
repnz
repz
mov
js
std
and
inc
addr16
mov
xchg
mov
sahf
out
icebp
sub
hlt
scas
ret
pop
inc
popf
pop
imul
and
iret
sbb
fldl
push
dec
cld
notb
incl
lret
int3
je
mov
test
scas
and
cmpsl
int3
ss
mov
ljmp
adc
or
and
cmc
fs
divb
movsb
movsl
push
cmpsb
mov
ja
dec
fisubs
cmp
and
xor
and
enter
fsubs
jge
cmp
dec
lahf
test
insl
addr16
mov
fs
sbb
mov
fisubrs
scas
lcall
fisubrs
sarl
mov
xor
cli
sub
mov
cmpsl
jo
daa
scas
mov
loope
stc
cwtl
fcoms
and
sbb
jae
mov
push
push
xor
xchg
inc
jmp
in
filds
add
stos
popa
scas
cmp
ret
lods
cmpsb
cld
mov
sti
jae
andl
push
in
test
scas
lcall
jecxz
push
mov
xchg
add
cmpsb
pop
or
cmp
mov
and
inc
imul
xor
stos
sub
fisttpl
push
add
das
push
test
inc
repz
mov
test
aaa
mov
mov
mov
cmp
dec
jo
mov
into
or
gs
testl
mov
mov
movsl
mov
lret
xchg
insb
out
mov
sahf
sti
inc
mov
ja
out
out
je
dec
in
jae
mov
sbb
mov
or
add
cmp
or
lea
and
mov
int3
icebp
xchg
push
test
and
pop
pop
dec
jmp
pop
bound
pop
xchg
push
inc
bound
mov
addr16
shll
addr16
fsub
imul
idiv
mov
scas
out
imul
add
popf
out
popa
xchg
bound
fwait
cwtl
inc
push
and
pusha
inc
mov
mov
and
add
sub
pop
out
das
in
rclb
sbb
int
mov
ret
negl
stos
ss
xchg
subb
clc
outsl
adc
out
xchg
dec
imul
pushf
std
std
ss
out
inc
fldl
mov
sbb
movsb
pushf
test
add
mov
pusha
out
pop
mov
cld
mov
rorl
jno
xchg
xor
cmp
pop
lods
fwait
aad
scas
push
or
sub
mov
xor
push
inc
cmp
shrb
xlat
cmpsl
fstl
cwtl
xchg
cmp
xchg
enter
cmp
lods
mov
ret
xchg
setb
sti
dec
jle
data16
xor
pop
les
imul
popf
add
mov
jne
inc
enter
mov
push
jge
call
mov
jmp
jg
pop
cli
pop
test
mov
icebp
bound
sub
add
sarl
sbb
fcomps
addr16
in
scas
mov
rorl
adc
dec
mov
pop
bound
rcrl
jmp
sub
add
inc
pop
imul
rcrb
push
ljmp
pop
mov
mov
shl
aas
shl
outsl
cmp
cmp
or
inc
movsl
sub
jae
mov
imul
lods
cmp
stos
lea
xor
adc
ds
fs
pop
iret
push
xor
les
test
add
outsb
add
test
lods
jne
inc
cmp
adc
lea
jae
or
shlb
nop
mov
ljmp
sbb
jae
iret
mov
and
mov
xor
sbb
loope
iret
movsb
adc
dec
add
test
push
push
inc
jmp
mov
and
xor
jnp
int3
jl
in
movb
iret
adc
stos
arpl
aaa
lods
push
cld
rol
cmp
rcrl
push
js
xchg
mov
adc
jnp
and
push
sbb
sub
sar
inc
lock
into
jns
and
push
cmp
cmp
rcrb
jecxz
stc
aam
and
enter
and
imul
and
pop
sbb
imulb
cmpl
xchg
push
rorb
adc
leave
lret
into
jbe
jg
ret
jne
stos
out
xor
arpl
je
xchg
add
or
cmpb
and
gs
js
sub
jno
add
das
add
notb
pop
mov
mov
mov
dec
fildl
and
jle
mov
std
inc
mov
push
or
and
adc
mov
add
adc
xchg
pushf
notl
cmpsb
test
insb
jp
pop
popa
pop
leave
mov
push
dec
xor
bnd
adc
andb
aas
orb
sbb
stos
icebp
hlt
mov
int3
mov
imul
and
adcl
cmc
js
xchg
mov
cpuid
pop
daa
imul
movsb
subl
loopne
cld
bound
pop
fs
loop
pop
xor
xchg
mov
out
sarb
std
mov
push
adc
jno
out
repz
mov
and
cmpsl
adc
pop
xor
daa
gs
cmp
fstpt
notl
pop
pushf
movsl
sbb
imul
and
dec
shl
sub
and
dec
sbb
adc
dec
add
dec
test
and
pop
dec
jb
fimull
outsb
cmc
push
adc
pop
mov
imul
lcall
jo
hlt
cmpsb
lods
fdivl
out
dec
mov
les
stc
jmp
rorb
pop
sbb
sbb
mov
cwtl
in
and
inc
and
add
jne
pop
cmpsl
xlat
aad
sbb
test
into
lret
mov
dec
and
in
xchg
lods
push
mov
add
ja
pop
int
shrl
into
dec
lods
dec
shll
cmpsb
lock
sub
sub
mov
dec
mov
insb
jo
dec
je
fcmovb
jbe
push
bound
mov
fcom
popa
xchg
dec
xchg
mov
dec
data16
sub
fimuls
insl
cmp
ret
jb
movsl
pop
shll
sub
jno
scas
or
addb
lahf
xchg
lret
pop
lret
movsl
out
inc
mov
loop
pop
xor
mov
sbb
mov
test
dec
popf
pop
pop
stos
inc
xor
mov
lea
in
xlat
out
xchg
sbb
dec
xchg
sbbl
aaa
mov
xor
out
stc
sub
in
out
out
jmp
dec
pop
xchg
test
aad
lea
cwtl
mov
and
fidivs
pop
mov
mov
mov
jp
mov
mov
dec
nop
gs
ret
sub
mov
push
cli
cmp
jg
nop
sbb
dec
movsl
adc
and
sbb
jo
push
cmpsb
inc
xor
testb
xchg
lods
add
mov
xor
rorb
xor
insl
xchg
test
inc
or
in
movsb
pop
outsl
cmp
mov
test
sbb
sbb
push
clc
pusha
outsl
mov
jl
repz
es
or
rolb
add
cmp
loope
pop
mov
and
cmc
pushl
loope
inc
mov
movsl
xor
pop
mov
xchg
push
loopne
and
mov
jle
mov
add
xchg
int3
cmpsb
jp
push
and
lret
push
scas
insb
xchg
cmp
mov
in
xor
idiv
xor
iret
or
dec
cmp
test
mov
pop
inc
mov
xchg
ljmp
inc
xchg
pop
adc
mov
jnp
negl
pop
xchg
ret
mov
ficompl
arpl
or
mov
xchg
mov
lret
xchg
jbe
hlt
push
fldt
out
rcrb
divb
aas
stos
or
stc
adcb
mov
sub
dec
cmp
lret
loopne
xlat
jge
adc
jne
cmp
in
clc
cmpsl
loopne
inc
mov
jg
jg
jno
inc
sahf
cmp
mov
push
test
lret
add
mov
loop
inc
scas
and
pop
inc
dec
inc
fcmovne
int
push
inc
cltd
out
sti
xor
push
out
imul
fistps
insl
inc
hlt
addl
and
dec
adc
sbb
mov
cmp
shl
addr16
sub
sub
iret
mov
pop
orl
jb
mov
and
rep
ja
jmp
scas
jbe
cmp
sbb
or
xor
cmc
mov
jle
fiadds
mov
fadds
mov
in
sbb
test
mov
xor
lods
popa
and
repz
fwait
sub
cmc
or
inc
fstpl
jl
and
lret
pop
sub
scas
lea
shl
pop
push
lret
sub
rorl
nop
sub
imul
mov
outsl
jb
fbld
pop
stos
pop
into
sub
dec
lods
sbb
test
xchg
jmp
push
icebp
adc
jne
mov
jb
mov
sub
push
jb
push
mov
push
shll
ret
cmc
imul
std
xor
ffree
xchg
xor
xchg
jbe
fstl
sbb
aad
nop
popa
fdivrl
cli
in
mov
in
js
or
xchg
stc
jne
xchg
gs
add
test
movsb
sbb
or
test
fcoms
push
adc
jle
icebp
xchg
pop
movb
and
or
cmp
out
xor
push
mov
cmp
test
and
scas
push
int
movsl
addr16
dec
jb
subl
daa
in
ljmp
repz
das
ds
cmp
sbb
or
mov
loop
or
fidivs
scas
dec
pushf
jle
add
inc
sbb
mov
jp
cmp
cmc
movsl
nop
push
sbb
xchg
std
fldcw
dec
in
out
sbb
xchg
popf
popa
cwtl
or
sub
sbb
push
daa
imul
aad
sub
lods
rorb
ret
orb
test
mov
pop
add
inc
push
nop
stc
lock
push
ret
cmp
push
sbb
bound
push
in
cmp
lods
fs
in
sub
push
adc
pop
xbegin
pop
pop
sub
sbb
and
jnp
scas
movsl
cmpsb
cmpsl
lcallw
add
gs
loope
inc
and
scas
pop
xchg
testl
pop
out
mov
outsb
sbb
mov
or
mov
dec
cmp
je
or
xor
cmpsb
ret
testb
subb
xor
xor
sub
jno
leave
mov
or
add
enter
jnp
push
mov
and
orb
mov
pop
lods
pop
in
jae
pop
jae
or
pop
cmp
dec
cmpsl
lcall
and
lret
fisttps
fdivs
cmp
xchg
mov
andb
out
out
les
dec
test
and
enter
push
cmp
ds
mov
cmpsl
sbb
push
cmp
iret
es
fwait
test
fidivrl
test
jge
or
dec
in
leave
xchg
sbb
cmp
pop
xor
lock
lahf
cwtl
jbe
sbb
fwait
jp
mov
aad
aam
sub
lods
test
add
stos
and
das
call
cwtl
clc
dec
xchg
mov
adc
dec
dec
shrl
mul
cmp
fistpl
push
je
lea
cmp
lock
dec
insl
cmp
ljmp
jne
sahf
xor
into
jmp
push
push
popf
insb
jp
pop
mov
not
and
mov
inc
adc
mov
cmp
popf
jb
test
and
or
mov
push
jmp
xchg
cmc
ds
insl
stc
add
ret
enter
gs
dec
movsb
mov
cli
aam
clc
mov
es
pop
xchg
pushf
cld
popa
jle
mov
cwtl
out
pop
rorb
mov
inc
hlt
mov
call
addr16
movsb
fidivl
fxch
fmuls
not
sub
jbe
cld
dec
mov
xor
gs
xchg
ss
adc
rcl
mov
ljmp
aad
fwait
and
xchg
lcall
and
mov
or
call
inc
clc
adc
push
dec
or
popf
cmp
call
lock
and
push
push
inc
sub
adc
mov
notb
pop
pop
stc
fisubs
in
cmp
pop
mov
mov
mov
leave
lea
mov
jecxz
pusha
adc
popa
mov
and
test
xchg
mov
inc
dec
scas
cmp
stos
fisttps
data16
jecxz
hlt
fldenv
dec
add
lock
shl
je
lret
in
mov
movsl
xor
cltd
dec
cmp
mov
data16
inc
ljmp
call
jno
addl
xchg
shll
sti
mov
mov
cli
lds
mov
loope
stc
rcl
scas
xchg
push
into
fcompl
popf
leave
dec
loope
add
sbb
in
fiadds
jo
push
pushf
jns
push
add
jmp
push
xchg
and
adc
js
jo
test
int3
es
xor
xor
stc
scas
cs
mov
subl
mov
xor
adc
xor
imulb
jecxz
lds
pop
xor
jo
sbb
mov
push
add
clc
call
inc
subb
dec
dec
xchg
pop
push
cmp
or
adc
or
sahf
and
in
cs
or
sbb
push
sbb
pop
enter
pop
add
test
sahf
cmp
and
pop
je
cmpsl
cmp
bnd
cmp
xor
testl
jmp
fdivrs
sub
add
int3
lret
out
mov
js
jne
jbe
repz
pop
inc
lea
popf
mov
in
inc
jge
jbe
bnd
sti
dec
aad
push
push
pop
ljmp
cmp
in
mov
mov
loope
pxor
sbb
push
in
jnp
addl
mov
adc
adc
pushf
shrl
pushf
jp
popf
mov
test
shlb
or
daa
add
cmc
mov
mov
xor
jmp
mov
nop
inc
stos
cmpsb
inc
sahf
lds
jg
cld
cmp
sub
mov
push
les
xor
mov
jae
fucomp
adc
mov
sarl
and
mov
sub
dec
rorb
call
cwtl
jo
rol
inc
shll
jmp
popf
hlt
or
cmpsb
adc
cmp
or
push
push
test
lret
ja
mov
xor
jbe
xchg
paddsb
mov
and
sahf
fldt
xchg
sbb
xchg
push
sbb
int3
pop
icebp
in
scas
jge
dec
inc
jnp
or
incb
sahf
fnsave
sbb
movl
cmp
imul
loop
in
addl
adc
push
shr
cmc
add
add
imul
jno
mov
test
add
mov
mov
decb
sub
or
sbbb
mov
cli
mov
dec
sbb
aad
push
mov
aas
jge
pop
or
repz
inc
aad
mov
icebp
or
sub
iret
in
nop
lcall
xchg
and
mov
std
cmpsl
fwait
scas
fisubl
test
in
xor
inc
insl
pop
xor
adc
test
dec
cmp
adc
add
stc
daa
sbb
cli
mov
shlb
mov
cmpsb
xor
iret
dec
mov
adc
xchg
lods
dec
sbb
push
or
fs
jns
loope
or
pop
out
idivl
mov
popf
xor
dec
mov
push
repz
lods
pop
jle
push
arpl
mov
and
hlt
sub
jae
mov
jnp
sbb
aas
inc
in
scas
orb
aaa
cmpb
add
es
fsts
ret
xor
mov
inc
lret
sub
sbb
cli
push
movsl
das
push
je
fisubrl
add
orl
adc
and
imul
cli
mul
test
stos
adc
daa
cmp
nop
ss
sub
mov
pop
mov
ljmp
pop
movsl
addr16
pushf
fidivrl
xchg
and
and
loop
adc
mov
dec
xchg
clc
sti
aaa
lcall
sarl
adc
insl
push
sbb
mov
mov
outsb
mov
xchg
shlb
sbb
inc
repnz
and
xchg
mov
inc
hlt
adc
pop
or
and
cmpsl
jle
test
push
test
ja
adc
fwait
xor
ret
mov
add
arpl
aas
testb
lods
xor
imul
or
sbb
sub
shlb
imul
das
or
es
out
test
into
add
fwait
mov
icebp
pushf
lahf
adc
cld
and
cmpb
movsb
sbb
iret
bound
lock
inc
aam
subl
dec
popl
lock
pop
push
inc
mov
push
sub
mov
aas
and
les
call
hlt
jmp
inc
pop
cmp
cmp
cwtl
negb
inc
daa
push
lea
add
adc
ficoms
ljmp
aaa
iret
jge
push
call
ficoms
inc
pmuludq
push
sbb
mov
aad
or
and
jmp
jns
xor
or
test
fbld
rcrb
outsb
fcmovb
dec
cs
cmp
out
sahf
and
adc
bound
mov
xchg
ljmp
or
push
sbb
stc
push
fstpl
inc
aas
std
cmp
jecxz
or
xor
movsl
push
push
fsubl
in
push
cmc
adc
iret
jmp
insl
stos
rorl
ja
mov
xor
popa
aam
inc
loope
jle
push
fwait
ret
push
sbb
je
push
es
and
mov
or
xchg
inc
dec
mov
and
imul
mov
lret
fs
out
loop
adc
dec
movb
mov
mov
lods
les
sbb
sbb
lret
mov
mov
call
ret
mov
cmp
sahf
pop
sbb
jns
call
pop
jmp
call
lock
jns
js
mov
sbb
xchg
imul
adc
mov
imul
in
jbe
push
ret
jne
int
cmp
data16
mov
sub
mov
lret
ja
mov
mov
add
mov
or
popa
sbb
jns
inc
jbe
dec
fistpl
popa
cmpb
stos
in
cmp
test
cmp
data16
push
or
icebp
push
inc
or
shlb
scas
arpl
sub
out
lahf
cli
mov
xchg
cmp
xchg
ja
fwait
mov
cwtl
rolb
lahf
pop
aad
lods
add
das
icebp
add
ja
adcb
loopne
xor
dec
or
std
cmp
cwtl
jecxz
mov
fsts
test
enter
mov
fadds
or
test
sbb
adc
rcll
push
call
sbb
pusha
or
pop
sub
cmpsb
sub
in
mov
int
xchg
fstpt
inc
js
nop
je
repnz
add
sub
test
sarl
push
aas
sub
dec
shlb
in
fidivs
subb
xchg
std
mov
adc
popa
insl
movsl
mov
dec
add
lods
movsl
mov
or
fstpt
popa
lock
push
sahf
sbb
cli
lods
mov
ret
pop
cld
pop
jae
loop
xchg
sbb
adc
jecxz
xchg
outsb
js
and
fcmovnu
xor
mov
mov
and
mov
and
add
in
cmpsl
jecxz
sub
mov
mov
push
mov
xchg
iret
shl
std
cmp
xor
xchg
stos
push
fxtract
push
lret
or
dec
js
xchg
movb
cmp
xchg
inc
lock
lea
lea
and
movsb
jp
andb
mov
adc
divl
xor
add
push
xchg
mov
mov
in
notl
push
xchg
push
mov
jmp
push
sbb
pop
addr16
test
imul
stos
pushf
adc
xor
mov
incl
cmp
cmp
xor
or
repnz
cltd
and
lcall
add
arpl
cmp
mov
and
insb
add
cmc
pop
test
jno
push
fs
aaa
fadds
ss
push
imul
mov
imul
jge
daa
xchg
mov
popl
mov
jecxz
push
into
xchg
and
mov
lods
sbb
in
int
ja
jg
je
add
jg
sbb
jge
das
jl
mov
push
dec
add
mov
or
pop
push
test
decb
jmp
fs
rol
xchg
scas
or
sbb
push
mov
add
pop
cmpl
inc
hlt
pop
and
andb
mov
jmp
fiaddl
mov
and
jge
loop
cltd
clc
dec
testb
xor
jb
mov
in
push
xor
out
sbbl
iret
clc
movl
adc
mov
roll
out
es
adc
jmp
inc
and
fnsave
popa
outsb
aaa
mov
test
xchg
mov
cs
add
adc
push
pop
pop
lret
mov
aas
sub
adc
mov
test
and
mov
stc
in
push
push
xlat
sbb
xor
mov
stc
fsubr
jne
push
inc
jmp
test
xor
cwtl
mov
jle
pushf
pusha
cmpsb
cmp
mov
pop
mov
ja
scas
lret
sti
idiv
inc
mov
dec
loope
cmp
fstps
jno
push
add
inc
dec
pushf
push
leave
push
nop
xchg
jmp
filds
sbb
pop
mov
push
dec
movsl
cmp
or
inc
sub
in
aad
mov
stc
cmp
jl
mov
or
xor
imul
negl
or
jno
xchg
outsl
xor
stos
xchg
stos
xchg
push
pop
lea
jle
lret
out
jle
add
test
lahf
sub
sti
mov
sub
inc
int
je
push
mov
dec
in
dec
mov
shl
jp
xor
stc
fsubl
movsl
lret
pop
jnp
rorb
dec
push
jmp
test
aas
sub
pop
stc
or
mov
sbb
pop
push
dec
in
xor
add
pusha
xor
imul
adc
mov
inc
xor
pop
and
stos
std
mov
and
out
outsb
xchg
push
jno
es
jle
jmp
lock
jmp
jmp
subl
imul
dec
je
sub
mov
popa
sub
icebp
sub
inc
popa
out
fs
test
out
sub
shrb
es
sub
xor
pop
into
fists
jne
cltd
scas
daa
adc
xchg
mov
and
add
leave
sub
sub
push
xchg
shrb
dec
js
leave
add
dec
adc
sub
cmpsl
popf
outsl
popa
jg
mov
cmp
sbb
push
sub
cmp
mov
sbb
fincstp
sbb
testb
lods
repnz
xchg
add
sub
scas
mov
cld
mov
js
testl
fwait
mov
mov
fidivrs
xchg
leave
iret
pop
inc
je
faddl
insb
push
cmpsl
mov
fs
cmp
xor
pop
addl
outsb
shrl
test
sbb
mov
lock
lret
inc
sbb
in
mov
xchg
rcll
aaa
jle
inc
mov
or
and
inc
fiadds
pusha
mov
fisubs
fadds
fwait
add
xchg
out
flds
dec
dec
pushf
sahf
nop
inc
insl
inc
push
jecxz
testl
adc
xor
or
push
inc
shll
test
cmp
xchg
enter
fidivl
mov
addb
int3
fsubs
cmp
das
xchg
add
cld
pop
mov
mov
movsb
xor
in
sbb
or
fsubrl
imul
orb
out
push
xor
mov
ljmp
int
sbb
movsb
shll
adc
pusha
pop
add
jns
sbb
adc
add
push
xor
pop
cli
push
loop
or
sarb
fdiv
aaa
movsb
mov
push
testb
sbb
jae
add
incb
push
cmp
cmp
loope
test
jecxz
jg
popa
outsl
stos
push
push
inc
shlb
repnz
push
daa
cmp
mov
xor
mov
add
pop
stc
test
std
ljmp
pop
ficoms
aam
dec
sbb
sbb
sub
hlt
into
lock
mov
pop
test
inc
stos
dec
push
rolb
mov
movsl
test
mov
jecxz
cli
addr16
das
popa
cwtl
push
js
mov
pop
cmpsb
scas
arpl
call
dec
ja
test
scas
xor
xor
in
xor
cmp
addr16
divl
ret
popa
dec
sbb
movsl
je
adc
pop
mov
js
lods
xor
push
adc
rcrb
subl
sub
in
push
fistl
rolb
pop
cmpsb
cmc
push
xchg
loop
pusha
jg
adc
mov
mov
insb
pushf
sub
cmp
jge
xchg
jbe
inc
data16
and
mov
dec
mov
and
aas
push
pop
lcall
jle
fstpl
sub
es
es
and
or
pop
mov
pop
sub
imul
shlb
push
xchg
pushf
adc
scas
mov
cmp
xlat
pop
pop
sbbl
sarl
pop
pop
xchg
dec
adc
mov
adc
idivl
jo
sbb
pop
or
sbb
mov
push
pop
pop
mov
or
fadds
push
pop
or
push
mov
imul
cli
jbe
push
sbb
or
mov
out
shl
sbb
mov
inc
sarb
jg
sub
cltd
pusha
faddl
faddl
xchg
adc
pop
loope
adc
shlb
incb
mov
fildl
mov
cmp
or
test
push
loop
push
insl
mov
jae
hlt
mov
ret
cmc
lock
xchg
and
push
mov
push
xchg
ja
cmpsl
arpl
fstps
stos
or
not
jb
cwtl
aaa
xor
jp
mov
inc
insl
out
je
int
mov
ljmp
dec
les
nop
out
in
dec
inc
mov
xchg
xchg
les
testb
inc
sbb
push
cmp
jecxz
cltd
movsb
xor
iret
mov
mov
mov
cmpsl
dec
mov
xor
daa
mov
lea
in
cmp
jb
jno
xchg
lcall
shll
and
mov
sub
dec
push
lret
imul
lock
movsb
enter
bnd
out
push
xor
mov
jl
sbb
das
ds
cmp
aam
add
or
aas
outsb
mov
xorl
lahf
cli
lret
sub
test
mov
incl
mov
and
fnstsw
fwait
lock
sub
add
loopne
jno
sbb
jecxz
fs
rorb
jnp
jle
mov
ds
mov
pop
das
fistpl
xor
mov
std
inc
jmp
sbb
insb
adc
out
sub
lods
pop
lret
inc
adc
push
je
test
in
xchg
mov
lret
sub
jg
loop
lods
in
sbbl
lds
and
mov
xor
mov
push
out
arpl
dec
insb
push
jg
sbb
mov
loopne
dec
lock
jg
dec
popa
aaa
xchg
test
aas
sub
sahf
sub
inc
or
int3
jb
popa
clc
lds
cmp
add
or
aas
push
sbb
inc
mov
cmp
imul
fsubrl
das
test
adc
aas
imul
cmp
je
shll
sbb
add
fwait
cmpsb
ss
pop
inc
jae
stos
sbb
and
xor
addr16
and
adc
xchg
adc
cld
xchg
push
data16
pop
sbb
fdiv
mov
cwtl
inc
sub
sbb
cltd
pop
jae
loopne
cmc
repz
mov
mov
test
adc
call
add
lods
data16
jnp
insb
pop
inc
mov
cltd
sbbb
cmpsb
inc
fwait
or
push
out
in
mov
dec
and
les
lds
or
fs
xchg
fldenv
dec
mov
jp
loop
or
adc
dec
inc
push
int3
mov
xchg
popf
push
or
xor
lret
das
mov
mov
fcompl
push
jmp
mov
sahf
std
xchg
adc
mov
ja
push
push
ds
xor
pop
adc
sbb
xchg
iret
cltd
ljmp
fidivl
mov
push
cmp
arpl
test
jbe
in
xchg
hlt
mov
jge
and
popa
mov
and
jns
sbb
jne
push
psrld
adc
add
fisubrl
aaa
push
call
dec
add
mov
daa
push
jl,pn
cwtl
inc
add
push
dec
ret
or
aad
push
sbb
aas
jecxz
mov
mov
lcall
jg
aam
mov
cmp
test
mov
lahf
stc
ss
jl
push
cs
sarb
mov
or
popf
pop
push
jae
mov
cltd
add
mov
inc
into
fwait
jae
add
and
pop
rolb
dec
rcll
scas
and
mov
jp
xchg
add
shrb
cmp
push
lock
cmpsl
mov
push
outsl
scas
add
std
dec
lret
fnstsw
popa
inc
in
fmull
stos
in
dec
lods
sbb
pop
rcrl
mov
andb
jb
cld
arpl
shl
mov
inc
out
or
cwtl
mov
adc
jb
push
sarb
inc
pop
lret
jns
add
movsb
mov
aaa
in
pop
out
jle
arpl
xchg
lcall
fisubrs
aas
notl
mov
dec
and
xchg
jno
add
jno
daa
mov
mov
iret
lods
xor
cmp
loope
cltd
movsl
and
inc
mov
pusha
popf
and
scas
jmp
daa
out
jge
lock
addr16
cmp
pop
cmp
lret
push
stos
cmp
icebp
scas
es
push
sub
mov
cmp
lea
jecxz
cmpsl
sahf
pop
mov
stc
shlb
inc
and
in
in
lock
mov
xor
mov
repz
dec
test
adc
cmpsb
mov
aaa
xor
jp
jecxz
jmp
cmp
hlt
xor
pop
cmp
addr16
es
fldcw
stos
jge
or
sbb
test
imul
decl
fwait
je
popf
add
jle
rcll
and
sub
dec
add
mov
pusha
xor
xchg
aaa
fcmovbe
pop
das
inc
lea
lods
std
cmp
mov
gs
sbb
cmpsb
or
out
jae
mov
pop
add
cli
call
sbb
scas
clc
adc
iret
mov
movsl
outsl
inc
push
jecxz
adc
sub
iret
data16
fwait
push
pop
mov
pop
sbbb
in
cmp
out
lods
jmp
ss
ret
outsb
and
adc
push
in
lods
dec
mov
cmp
inc
jmp
outsb
inc
stc
std
inc
push
hlt
cltd
or
shlb
in
mov
movsb
xchg
jne
adc
dec
pop
xchg
sub
test
cli
add
subl
add
call
mov
jo,pn
xchg
fistpl
out
insb
leave
mov
pop
push
push
stc
xchg
punpcklwd
adc
push
mov
mov
push
fstpl
js
cmpl
xor
xchg
inc
jge
aad
pop
cmp
cmpb
into
and
cli
sub
rorl
mov
xchg
pop
mov
and
iret
mov
adc
xorl
daa
fldenv
jl
cmp
popa
movsl
jmp
jnp
jg
jbe
xchg
jb
daa
sbb
or
fstpt
sub
ror
lret
inc
mov
mov
inc
out
xlat
xchg
not
ss
push
int3
stos
push
repnz
adc
in
or
xchg
addr16
add
sarb
push
fcmove
mov
xor
and
cli
int3
fsts
dec
sar
ds
jns
cmc
pop
xor
movsl
ret
mov
sub
pop
and
cs
inc
push
out
add
xchg
lods
lret
sahf
in
mov
inc
mov
cs
stos
sarb
out
xchg
imul
cmp
js
cmp
insl
arpl
iret
incb
dec
jg
adc
lods
dec
mov
cmpsl
fs
jae
cmp
sbb
jge
adc
cld
mov
addl
bound
cmp
mov
insl
xor
aas
and
pop
addr16
cli
lret
icebp
in
divl
fsubl
dec
shrb
inc
in
std
jne
mov
push
xlat
push
ret
cld
test
mov
popf
insl
jnp
cmp
or
ret
sub
xor
adc
push
enter
sahf
pop
popf
nop
inc
mov
add
ss
shrl
loopne
aad
test
lock
push
xor
xchg
sub
xorl
mov
push
outsb
fs
in
jle
push
int
jb
out
inc
sub
mull
rcrl
sar
mov
nop
test
xchg
mov
adcb
rorb
mov
add
jno
xchg
iret
rcrl
and
popa
ss
inc
packuswb
hlt
cmpsb
jmp
loopne
inc
ret
popa
rorb
or
iret
popl
in
clc
push
and
xchg
ljmp
repz
cmp
cmc
fucomp
add
aaa
xchg
inc
pop
jl
popf
sub
es
mov
xlat
add
fdivr
xor
mov
lods
pop
or
dec
popa
test
xor
inc
adc
pop
mov
cltd
inc
pop
mov
lcall
cmp
cmc
lcall
test
lret
enter
mov
pop
pop
adc
cmpsl
xchg
sbb
adc
lds
cmp
ds
fxch
inc
jnp
std
dec
cltd
xorl
dec
or
xchg
dec
shr
mov
rcll
into
push
push
inc
mulb
lcall
call
ss
xchg
push
loope
push
stos
push
in
lea
xchg
and
pop
rcrl
mov
in
and
shrl
xchg
lds
pop
xchg
mov
inc
test
adc
mov
in
jge
xor
sbb
mov
jmp
mov
jo
aaa
xchg
and
mov
cmp
pushf
dec
pop
pushf
jns
scas
lods
js
mov
add
shlb
or
xor
or
in
jb
scas
sbb
mov
mov
mov
xor
iret
in
add
lret
mov
push
or
sahf
xor
cli
into
repz
push
sbbb
push
add
or
shr
gs
inc
inc
shrb
scas
mov
sbb
clc
inc
in
mov
and
lret
sahf
faddp
icebp
aaa
pushf
out
popf
call
aam
and
push
popf
adc
mov
les
jle
and
outsl
out
movsl
aaa
cmp
pop
mov
cmpl
xchg
scas
xor
add
mov
ds
std
stos
push
pop
out
and
cmp
mov
outsl
cmpb
fimull
lock
out
and
mov
rclb
subl
iret
gs
or
test
jl
je
pop
jp
dec
out
xchg
scas
scas
dec
xchg
stc
loopne,pn
repnz
pushf
sti
mov
es
xchg
or
sarb
dec
jp
gs
je
mov
xor
aaa
aad
lret
dec
aad
movsb
jle
cmpsl
cmp
adc
xor
test
jb
mov
cli
in
cmp
sbbb
pop
shrb
out
sbb
rorb
add
cmpsl
inc
cs
xchg
push
dec
sbb
int
ficoml
xor
nop
pop
outsb
xchg
xchg
dec
out
inc
mov
fcmovb
add
xor
sbb
ljmp
xchg
pop
cmc
enter
sub
sbb
jmp
and
xor
test
out
inc
mov
pop
cmc
loopne
movsb
and
mov
in
dec
sbb
pop
dec
push
pop
push
or
aaa
cmp
ficoms
push
dec
xchg
jno,pn
out
rclb
add
xor
enter
ja
jbe
mov
scas
jmp
mov
mov
add
adc
mov
loop,pt
ret
aam
cs
sub
add
sub
mov
fisubrs
iret
aaa
push
mov
pop
jecxz
lods
inc
pop
jmp
rcrb
fstl
inc
dec
leave
xchg
xchg
jae
inc
jns
out
cmp
xor
loope
into
xchg
cmpsb
xchg
pop
enter
cmpsl
adc
jbe
dec
jo
addr16
add
repnz
popf
scas
mov
add
loope
cltd
mov
jmp
pushl
std
cmpsl
xlat
dec
js
xor
pop
mov
add
and
mov
mov
pop
fwait
sahf
sbb
xor
xlat
mov
sbb
push
fwait
adc
lahf
outsb
add
stc
jns,pn
mov
fiaddl
xor
xchg
push
dec
add
mov
aaa
leave
pop
repz
add
js
out
test
jae
std
loopne
fidivs
ljmp
rorl
pop
xor
test
ret
xor
cmp
fistl
mov
in
push
insb
inc
or
mov
jb
fistpll
sub
adc
sahf
mov
arpl
lcall
enter
xchg
pop
jno
cmpsb
iret
lret
mov
hlt
aaa
pusha
dec
cmp
std
lret
push
mov
sbb
sub
stos
std
xchg
sbb
cmp
sub
push
shrb
xor
aas
mov
lret
xchg
cmpl
mov
xchg
ficomps
mov
je
inc
or
xchg
nop
mov
inc
xchg
jne
push
mov
sti
jbe
stos
ja
add
push
mov
dec
adc
mov
je
stos
mov
aas
stos
and
mov
aaa
push
pop
insb
stc
out
negb
cmp
push
ficoms
je
push
mov
xchg
loope
or
push
mov
dec
and
pop
jmp
jp
gs
xorl
je
bound
fstl
out
cmp
mov
push
clc
inc
and
out
xchg
jge
adc
aad
inc
inc
push
jl
sti
sbb
dec
loopne
pop
aas
mov
in
cmp
push
push
sti
cli
inc
loop
imul
sbb
inc
mov
aaa
pop
movsl
out
insl
add
test
std
inc
jmp
or
inc
pop
xor
cmp
push
pop
pop
inc
adc
gs
xlat
mov
mov
or
xor
cmp
fwait
add
call
jbe
cmc
loope
leave
mov
pop
add
lock
push
and
adc
pop
roll
sbb
test
xchg
xchg
idivb
stos
mov
mov
sub
loopnew
in
dec
mov
inc
fidivl
sti
inc
xor
imulb
xor
lret
jmp
insb
or
jae
mov
sbb
push
inc
or
data16
xchg
fs
inc
lret
adc
pusha
je
lahf
aaa
add
adc
push
mov
mov
add
ja
mov
loop
xchg
sbb
fstpt
cmp
clc
mov
cli
fidivrs
fnstcw
mov
cmp
mov
popl
cmp
mov
ror
test
or
inc
pop
pop
mov
dec
loopne
pop
cltd
test
jne
scas
xchg
lods
out
leave
dec
cmpb
jnp
push
lea
jo
push
popf
out
call
imul
movsl
cli
sahf
test
inc
sti
push
mov
dec
test
adc
cmc
push
gs
cmpl
cmc
inc
cmp
push
mov
out
insb
cmpsl
mov
push
aaa
push
lahf
cld
push
jmp
ja
mov
adc
cltd
xor
test
aas
clc
shll
insb
xor
add
xor
inc
adcl
fstpl
jg
pop
loope
cmp
mov
push
int3
imul
cmp
fiaddl
add
test
xchg
mov
jp
nop
testl
rcll
adc
xchg
or
dec
lds
dec
movsl
or
sub
dec
adc
cmc
or
sbb
ds
add
movsb
mov
movsl
lods
inc
mov
fs
mov
lds
mov
cmp
pushf
inc
pop
push
xchg
jae
outsb
mov
sbb
popf
and
bound
or
mov
cld
loopne
pop
push
test
xor
adc
xchg
jns
out
lds
ds
fcomip
rcl
shl
lock
jmp
xor
out
jge
fdivrs
push
ljmp
or
push
fdivrl
mov
scas
or
enter
std
cwtl
stos
hlt
aaa
out
inc
aaa
in
dec
arpl
loopne
fildl
pop
and
inc
ret
gs
imul
adc
mov
mov
xor
pop
call
les
test
rcr
incl
sar
mov
dec
out
pushf
xchg
jb
jle
push
ss
pushf
jle
shrb
or
clc
aaa
lcall
mov
jmp
push
pusha
cmp
cltd
not
loopne
insb
clc
jp
pusha
jle
jo
cwtl
xchg
imul
sti
outsb
int
cmpsl
insl
mov
jbe
mov
sub
inc
mov
scas
pushf
add
daa
mov
cmp
cmp
adc
xor
sub
adc
jle
fwait
cmp
mov
xor
fnstsw
icebp
xlat
cmp
and
sahf
pushf
out
jns
adc
lods
jmp
popf
jmp
xchg
and
xchg
and
stos
iret
jbe
dec
dec
and
enter
pop
and
bound
stc
clc
mov
push
xchg
call
lods
adc
addb
cld
inc
xchg
push
mov
jb
cwtl
in
mov
rorb
lcall
dec
popf
jmp
add
inc
add
imull
test
mov
push
fisubl
jl
cmp
out
adc
stc
mov
dec
xorb
outsl
out
inc
add
pop
dec
daa
mov
dec
es
xor
mov
sbb
cmpsl
push
or
imul
cld
cmp
jne
cmp
mov
push
mov
mov
cs
shll
jae
ret
repz
insl
sub
add
jle
loope
dec
mov
mov
and
dec
bound
push
insl
int
dec
sti
jg
sub
inc
inc
push
rcrb
repnz
jbe
stc
sbb
mov
xlat
movl
and
pop
js
andb
fadd
push
pop
mov
cmpsb
xlat
icebp
sub
pop
xor
fmull
pop
sbb
xchg
dec
mov
pop
jmp
sti
jo
addl
jmp
or
scas
mov
mov
test
jns
and
push
xchg
lcall
mov
pop
in
xchg
push
cmp
adc
pop
dec
push
pop
jnp
loope
mov
icebp
adc
test
ss
sub
dec
test
xor
arpl
lcall
ja
inc
push
repnz
and
cmp
adc
and
sbb
sub
ljmp
pop
cmp
mov
inc
insl
fisttpl
imul
jp
test
pop
lahf
cmp
gs
pop
adc
inc
mov
jae
out
pop
aas
popa
and
iret
stos
mov
cmc
dec
pop
pushf
sub
jle
or
lea
aad
hlt
ljmp
cli
dec
mov
jle
xor
mov
shl
sub
shl
lds
aaa
leave
inc
popa
scas
gs
add
xchg
xchg
dec
push
imul
or
xchg
push
mov
jecxz
in
dec
imul
xchg
fadd
shrb
pusha
push
mov
add
push
aas
cmp
sbb
jge
pusha
lds
loopne
cltd
movsl
lret
in
cmp
dec
pop
and
adc
add
adc
push
out
add
and
inc
and
aas
inc
sub
ror
enter
sar
out
and
pop
je
dec
jge
loope
cwtl
pop
cmpsb
filds
fs
lret
push
mov
mov
ficompl
cltd
or
xor
inc
push
inc
jmp
pop
cmp
jbe
fs
lea
iret
pop
adc
out
repz
arpl
repz
pop
mov
jbe
enter
fldl
in
fdivrl
pop
std
bound
xchg
pushf
jno
pop
int
ds
sub
dec
lock
pop
std
and
test
xchg
stos
or
lret
imul
std
sub
mov
in
adc
xor
cmp
xor
out
les
jg
dec
fcompl
addl
mov
push
sbb
testl
insl
add
mov
loop
jp
and
and
adc
pop
sub
jns
adc
ljmp
pop
push
mov
jle
mov
cmp
call
push
pop
ret
test
sub
ret
popa
sahf
in
sbb
mov
pop
mov
lock
stc
sub
mov
mov
cmp
jnp
add
add
loope
andl
arpl
call
mov
sub
adc
ljmp
imul
add
sbb
sti
cld
scas
xor
mov
cmpsl
or
dec
leave
aas
xor
paddsb
xchg
or
push
jg
mov
pop
jo
mov
mov
lods
frstor
inc
shrl
mov
out
hlt
in
and
pop
dec
jo
add
cmp
scas
pop
les
or
adc
ret
int3
lock
outsl
das
cwtl
fcoms
adc
pop
fidivl
push
or
arpl
cmpb
lret
or
sub
mov
fiaddl
cli
or
ss
sbb
ret
or
icebp
scas
pop
leave
std
arpl
inc
xchg
je
addr16
jns
std
les
or
mov
roll
je
sub
mov
inc
jecxz
cmp
das
rcrl
and
mov
mov
out
fs
lcall
data16
fucomi
ret
inc
fisubrl
fiaddl
xor
and
sub
lds
lods
dec
in
pop
adc
fcom
rcrb
mov
mov
xchg
std
mov
dec
mov
mov
hlt
sbb
stos
loopne
popl
in
lock
fsubs
fwait
inc
mov
jle
xchg
add
mov
outsb
inc
lea
adc
or
inc
outsb
xor
rcll
mov
sbb
lret
movsl
push
in
loopne
lahf
out
or
inc
mov
xchg
and
ja
stc
mov
out
daa
lcall
pop
mov
mov
aad
mov
adc
sti
xchg
sub
js
loope
push
in
fstpt
adc
fs
ja
inc
xchg
sub
lods
sub
lods
pop
stc
in
xchg
mov
push
test
pop
in
daa
push
xor
mov
pop
mov
ja
cmp
imul
outsl
mov
lds
fbld
mov
or
cli
stc
idivb
sbb
lods
jmp
xor
sub
push
sub
insl
or
cld
mov
cmp
mov
adc
test
xor
xchg
jo
adc
pusha
iret
in
mov
sub
daa
loop
cli
adc
pushf
xchg
cmpb
sub
fcoms
shr
mov
subl
ja
leave
jge
rcrl
sub
mov
std
adc
dec
ljmp
push
mov
add
movsl
popl
bound
and
push
fiaddl
je
jns
jbe
push
fwait
pushf
mov
add
insl
fidivrs
jns
and
sub
enter
les
cmp
sbbl
pop
jb
xor
loopne
gs
rcr
push
pop
pop
mov
pop
inc
jge
lret
clc
pop
sub
testb
or
or
sbb
xchg
cmpb
cmpsb
out
jl
and
add
sub
andb
cmp
inc
lcall
loop
push
outsl
xchg
les
and
sbb
test
in
fstps
sbbl
mov
aad
xor
pop
bound
push
stos
std
adc
or
mov
and
or
fistpl
rcll
adc
ret
xor
dec
push
data16
fisttpl
mov
leave
fldt
int3
and
mov
jo
pushf
out
fiadds
jns
xor
fistl
mov
ret
mov
sbb
lea
mov
sub
and
inc
jno
or
ret
fbld
enter
xchg
repz
xor
lcall
daa
sar
xchg
test
int
je
test
and
ficoms
push
pop
clc
mov
daa
loope
shrb
mov
add
sub
fcoms
es
pop
dec
xchg
out
lds
in
loopne
xchg
push
fimull
inc
and
fcmovnbe
movb
std
leave
cmp
lcall
sbb
arpl
push
mov
mov
pop
jge
stos
xchg
pop
inc
jecxz
imul
xor
shll
aas
in
insl
out
stos
push
fidivrs
mov
dec
cltd
fidivrs
repnz
in
rcrb
fiaddl
and
out
ja
dec
and
fs
and
aaa
or
cmp
sbb
por
out
mov
gs
add
enter
cmpsb
icebp
scas
mov
das
movsl
pop
and
pop
pusha
jg
jp
xor
inc
cmpsb
pop
cmp
push
xchg
adc
lods
mov
stos
pop
fsubl
mov
dec
pop
testl
or
enter
scas
cmp
or
push
gs
adc
loopne
inc
mov
ret
jmp
idivb
cld
xchg
lock
sbb
or
cwtl
mov
in
xchg
movsb
push
decb
stc
sub
or
enter
cmpsb
pop
into
aaa
xor
mov
dec
data16
sbb
das
cmp
sub
or
pop
cmp
jae
inc
inc
mov
rcl
rcr
dec
lock
inc
jo
jo
and
mov
xlat
dec
mov
mov
repz
in
lock
and
xchg
aam
and
es
dec
aas
pop
xchg
add
out
jnp
pusha
jge
mov
aas
movsl
and
or
loopne
popf
cmpsb
cmpsb
dec
and
repnz
je
negl
adc
pop
lcall
and
cmp
jecxz
mov
ret
adc
into
xchg
xchg
sbb
lock
or
daa
mov
sarl
scas
dec
enter
dec
pop
int
pop
fisubl
adc
xor
insl
div
int3
gs
pop
xor
xchg
int
repz
jg
lahf
cmpsl
lcall
push
pusha
push
addr16
inc
test
movsl
jno
sbb
pop
mov
data16
ss
sbb
xchg
sbb
xor
mov
mov
inc
pop
pop
sbb
idivb
add
mov
roll
std
cld
mov
cmp
cmpl
int
and
pop
jne
into
jb
aas
sahf
add
aaa
shlb
dec
sub
popf
push
sbb
test
sbb
cmpsl
mov
pop
test
lds
gs
dec
pop
es
push
neg
mov
adc
inc
fwait
xchg
lret
movsl
inc
dec
mov
mov
jp
dec
jg
ficomps
push
sbb
enter
out
mov
or
ljmp
fldl
mov
or
inc
and
jl
add
sub
jl
das
or
mov
les
or
testl
mov
shlb
xchg
or
fildll
xchg
into
push
movsb
inc
add
sub
adc
test
je
scas
jns
fdivr
push
aad
lock
pop
cmp
mov
dec
lcall
jb
test
pusha
loop
jle
jns
out
stc
pop
jno
mov
push
ja
cmc
add
adc
xchg
and
dec
mov
xchg
jp
xor
out
push
fistpl
pop
bound
imul
dec
xchg
dec
mov
cmpsl
addr16
fisttps
dec
pop
sbb
aad
pop
aad
mov
or
lds
inc
mov
push
mov
imul
xchg
pop
sub
lea
pop
mov
insb
fmuls
xchg
inc
jne
sub
mov
lods
icebp
rol
scas
xchg
push
aad
int
daa
or
js
push
push
dec
cs
aas
mov
xchg
push
idiv
push
mov
sbb
dec
inc
jp
test
pop
aam
repnz
stos
pop
mov
iret
mov
je
and
cs
mov
push
lahf
cmp
mov
movsl
into
inc
mov
icebp
cli
js
dec
pusha
enter
mov
dec
and
daa
xchg
push
lods
test
adc
leave
jnp
pusha
adc
lods
sub
inc
jge
sbb
insb
pusha
sub
lahf
mov
adc
ret
cmpsl
dec
and
mov
iret
loopne
sub
ds
sarb
fst
inc
xor
into
shld
pop
add
insl
mov
lret
mov
sub
sub
jnp
sub
test
aam
divb
outsl
cmp
mov
lds
dec
data16
mov
into
mov
popf
jge
das
fldcw
fucomip
and
push
shrb
xor
pop
pushf
out
push
pop
outsl
add
stos
cwtl
pop
and
add
pop
jl
xchg
mov
mov
lcall
popf
jl
stc
sub
mov
test
cmpl
pop
push
lret
push
dec
out
push
cwtl
mov
mov
sahf
xchg
imul
sub
pop
imul
mov
sbb
xlat
outsb
xchg
ds
icebp
or
adc
xor
lahf
pop
imul
jne
int3
out
mov
adc
cli
dec
cmp
pop
jg
mov
xor
sbb
dec
cwtl
cmpsb
rcll
mov
inc
mov
add
jg
inc
test
cmp
jl
pushf
adc
or
out
mov
inc
jnp
lea
push
loope
lds
aad
inc
jp
inc
testb
cltd
ret
in
mov
pop
addb
movsl
sbb
xchg
xchg
mov
leave
daa
add
fisttps
addb
pop
xor
adc
jnp
cmc
push
test
and
mov
es
insl
fsub
jae
xchg
repz
mov
xor
in
jle
and
mov
stos
xor
iret
jnp
push
aaa
adc
icebp
arpl
std
jnp
mov
push
mov
leave
insl
sti
loope
jno
js
popa
nop
aad
cmpsl
or
push
fcmove
mov
rorl
dec
out
rcrb
adc
jb
int3
push
nop
or
es
scas
dec
pop
mov
inc
push
mov
xchg
shrl
inc
xchg
push
jge
adc
jae
fwait
aad
inc
les
xor
push
sbb
pop
shrl
scas
xor
jb
mov
push
jb
dec
adc
pop
ret
add
push
loopne
aam
insb
mov
cli
gs
loope
dec
out
xor
inc
jns
push
testb
cli
mov
or
js
test
jmp
jnp
adcb
inc
stos
lock
add
push
sbb
inc
xlat
jge
in
mov
mov
pop
inc
mov
dec
ja
or
lds
xorb
js
int
mov
xchg
mov
xlat
ja
push
push
push
sub
or
repnz
cmp
and
pop
xchg
push
aaa
or
shlb
inc
mov
mov
je
mov
lods
fs
bound
test
fmull
testb
adc
sub
and
sbb
les
out
ret
and
dec
inc
sbb
jns
jns
sbb
or
adc
push
insl
or
inc
cmove
sbb
mov
ljmp
mov
lods
jne
fildl
imul
push
hlt
mul
add
add
push
addl
lds
outsb
movsl
je
adc
and
jmp
ds
test
or
scas
movsl
adc
inc
into
lds
xorl
jg
sbb
cld
cs
mov
clc
mov
sub
stc
mov
and
fnstsw
push
aad
sbb
test
mov
xor
ror
lea
cmp
daa
pop
jb
add
popf
and
cli
ljmp
xor
fidivl
test
xchg
sbb
sahf
test
lods
inc
inc
xchg
xor
aam
mov
sub
arpl
cmp
mov
call
cli
jmp
rolb
ret
aam
pop
cld
sbb
ret
mov
and
push
fmuls
inc
mov
in
aam
sbb
insl
scas
aad
clc
dec
or
xchg
insb
xor
fwait
mov
call
icebp
sub
or
stos
shlb
and
mov
jno
xor
fistl
pop
vpsrlq
lret
push
mov
jge
push
xchg
push
fisubrs
ds
cmc
ss
mov
aam
repz
xchg
out
mov
lods
cmp
mov
push
xor
pop
pop
bound
movsb
push
cmp
sub
inc
add
lret
or
mov
cmp
je
lcall
dec
cmp
dec
cmp
test
push
jl
xor
aas
add
loope
fisttpl
pop
push
push
mov
mov
subl
mov
xchg
cmp
bound
fmuls
lods
xchg
fisttpll
dec
mov
jo
cmp
ja
push
shlb
dec
lret
pusha
fistps
and
mov
cs
xchg
pop
xchg
pop
ljmp
lods
lahf
rcl
pop
pop
jns
icebp
mov
push
bound
movsb
push
sub
sbb
nop
push
mov
outsl
jecxz
inc
orb
push
pop
je
aaa
push
call
andb
push
mov
xor
pop
push
pushf
xchg
add
sub
inc
ror
and
test
int3
in
aas
sub
in
pop
sbbb
mov
mov
sub
xchg
pop
int
dec
ret
pop
mov
aam
filds
rcl
cld
lods
cmp
cwtl
cmpsb
mov
add
sub
dec
mov
stos
int
push
push
es
mov
cmp
mov
adc
inc
adc
inc
cld
out
dec
popf
flds
xor
jno
adc
mov
lock
pop
rcrb
push
cmp
lret
xchg
xlat
pop
cmpl
imul
cmc
ss
in
ds
jae,pt
movsl
mov
movsl
xchg
inc
arpl
adc
adc
js
mov
sbb
pop
and
lea
sbb
cmp
push
inc
push
sub
je
mov
jbe
pop
jecxz
add
stos
lea
imulb
push
pslld
cmpsb
sbb
cmp
and
cmp
testb
and
dec
rcll
bound
dec
adc
mov
mov
cwtl
dec
ror
fiaddl
jne
lds
cltd
frstor
and
xchg
in
xor
mov
inc
mov
adc
lods
fs
icebp
mov
dec
mov
xor
aad
aad
lods
and
sub
int3
movsb
pop
sahf
fistpll
jne
jnp
jmp
mov
repnz
repz
int3
sbb
pop
xchg
stos
dec
xchg
mov
loope
push
xor
stos
cmp
mov
movsl
nop
or
xor
inc
mov
pop
sbb
and
push
int
add
sbb
push
leave
aas
test
and
shlb
mov
popa
lret
div
dec
fisttps
push
inc
jp
in
push
sbb
xchg
cmp
or
movsb
lea
xor
cmp
adc
filds
cld
sub
scas
jmp
pusha
popf
sti
mov
dec
dec
cmp
mov
xlat
and
jae
adc
scas
daa
mov
sub
data16
cli
cmovg
jge
lods
imul
addr16
jg
call
mov
jmp
mov
cmpsl
je
mov
jnp
adc
sarb
mov
sbb
dec
rclb
cmc
adc
dec
jmp
push
lea
std
pop
andl
dec
imul
adc
sbb
xchg
ljmp
scas
xor
jecxz
scas
test
out
jecxz
inc
inc
sbb
imul
sbb
xchg
imul
dec
pop
push
fdiv
and
out
fdivl
inc
dec
outsb
jle
xchg
xchg
pop
xrelease
xor
jne
loop
inc
inc
fildll
sbb
dec
push
xor
cmp
shlb
cmp
dec
mov
push
mov
add
inc
ret
or
add
push
test
enter
subl
in
sub
out
test
adc
pop
xor
int3
push
lret
pop
sub
cmp
xor
and
fsts
mov
int
enter
xchg
out
dec
fstpt
lock
mov
cltd
add
pop
outsl
jl
jmp
stc
into
push
stc
repz
xor
shl
das
sbb
jns
outsl
mov
jno
std
push
cmp
jecxz
ss
lods
jecxz
out
sbb
mov
ret
xchg
xchg
cltd
sbb
dec
inc
std
fstcw
cwtl
sub
adc
pop
fsubl
std
shrl
jne
fldl
sub
pop
or
dec
jge
jb
pop
icebp
xor
roll
mov
push
push
shrl
push
lret
loopne
push
clc
push
adcl
in
sub
dec
repnz
dec
std
push
out
lods
imul
rolb
push
pop
push
lock
add
in
cmp
mov
jns
mov
stos
inc
mov
and
adc
push
add
dec
repnz
cmp
pop
lock
pop
ror
pop
shlb
pop
sub
sar
iret
shrb
outsl
in
mov
dec
sbb
scas
mov
xor
test
fnstenv
sub
mov
sub
das
fidivs
jg
pop
in
mov
mov
mov
xorl
arpl
out
sarl
lea
scas
fwait
stos
pop
and
inc
inc
jo
push
pop
pop
fmul
addr16
iret
xchg
mov
orb
adc
int
aas
rcrb
cli
out
dec
sbb
int3
ret
add
dec
mov
mov
push
cmpl
popf
mov
movsb
inc
xchg
mov
cld
fidivrl
testl
push
sbb
divb
jle
or
sarb
push
enter
jne
and
lcall
add
sub
imul
jl
fdiv
push
mov
test
ficomps
outsl
scas
hlt
push
test
hlt
ficoms
mov
shl
xchg
xchg
and
icebp
pop
pop
xchg
pop
adcl
pop
cmpsl
and
xor
lret
cmp
inc
dec
dec
cs
stc
hlt
or
testb
or
xor
je
out
add
xor
das
pop
bsf
rolb
scas
xchg
popf
enter
mov
sub
push
mov
daa
pop
cli
push
pop
pop
fidivs
cmp
xor
pop
aam
mov
mov
xor
cmpsl
mov
sahf
cli
add
pop
in
push
add
push
test
xchg
arpl
xchg
mov
mov
rep
and
mov
mov
mulb
lret
aas
adc
mov
mov
mov
sarb
push
stc
inc
lret
ficomps
loope
mov
adc
sub
addr16
push
pop
lock
add
je
inc
stos
lea
movsl
dec
sub
test
std
out
xchg
sub
or
push
out
push
sub
jo
sbbl
mov
add
dec
fidivrs
enter
or
cmp
ret
sarb
dec
out
or
jo
int
fstpl
and
cld
mov
cmpsl
sub
cli
lods
filds
fwait
ja
cmp
cmp
lods
push
mov
lods
mov
movsb
cmp
xor
loopne
int
and
xchg
and
dec
adc
mov
xor
sbbl
imulb
sbb
lea
push
imul
addb
fistl
dec
outsb
in
pusha
sarb
jb
mov
dec
gs
xchg
sub
mov
push
rol
popa
testb
mov
das
js
sbb
pop
cmp
mov
or
mov
push
xchg
and
in
inc
std
pop
push
xchg
out
pop
sahf
jl
ja
and
add
mov
and
jo
push
pushl
jno
xor
mov
jae
in
push
adc
mov
sbb
call
out
and
jecxz
add
lock
fs
int
jnp
ret
lock
daa
push
in
movsl
sub
push
jnp
fs
inc
cmpsb
loope
lock
xor
or
outsl
xchg
inc
jnp
adc
ljmp
jge
fdiv
push
jns
mov
into
popf
mov
cmpb
push
dec
jl
scas
xlat
cmp
xchg
cwtl
add
ja
fsubrs
pusha
push
inc
fldt
adc
scas
inc
mov
cli
inc
icebp
in
aad
cmp
mov
pop
sbb
inc
jmp
fs
and
rcrb
xor
push
sub
aad
out
and
jp
pop
movb
clc
jb
je
dec
ret
jmp
sarb
lods
sarl
mov
fimull
lods
out
fisttpl
enter
adc
pop
stos
jle
incl
dec
fucom
cli
dec
push
mov
test
push
hlt
int3
cmp
out
dec
stos
pop
shlb
cld
pusha
adc
xor
pusha
hlt
inc
in
out
jmp
push
out
adc
add
imul
dec
testb
xor
xchg
loopne
out
ficoml
adcl
mov
ja
mov
mov
and
cmpsb
and
cmpsb
dec
pop
mov
xchg
pusha
adc
sub
int
inc
cmp
addr16
xchg
lret
dec
pop
test
and
cltd
adc
clc
mov
push
push
mov
cmp
icebp
insl
adc
js
push
call
mov
out
sbb
cmc
xor
jo
mov
lock
jg
mov
jae
flds
and
add
dec
insl
jo
inc
sbb
xor
roll
fsubl
and
jno
aas
inc
sbb
outsl
pop
pop
hlt
es
mov
and
sub
stc
and
clc
daa
daa
jbe
fptan
xchg
mov
lahf
repnz
and
sahf
shll
imull
shll
repz
pusha
jbe
mov
xor
nop
iret
push
cwtl
push
fwait
jno
sahf
jb
addl
frstor
es
dec
in
shr
dec
xchg
jl
fldt
fnstsw
dec
sbb
adc
or
nop
jecxz
sarb
mov
or
cli
sub
inc
add
and
inc
out
xchg
icebp
mov
call
mov
sub
jle
inc
enter
mov
inc
inc
int3
ss
xchg
jge
pusha
mov
outsl
je
xchg
xor
mov
iret
mov
cmp
and
xrelease
mov
jnp
xor
ret
mov
mov
lods
push
xor
or
bound
aad
icebp
inc
jmp
andl
mov
in
cltd
int3
rorb
iret
sbb
mov
shrb
push
in
stc
hlt
jno
iret
mov
xchg
mov
add
fists
clc
xchg
data16
jp
popa
fwait
xchg
adc
out
stos
out
xchg
sbb
mov
cld
mov
loop
shll
insb
stc
mov
aad
push
das
leave
mov
jae
mov
or
pop
push
mov
and
sbb
jns
jne
adc
lahf
mov
pop
pop
cltd
in
stc
ficoms
push
mov
jnp
fs
adc
imul
cmp
sub
push
inc
push
adc
es
mov
aam
mov
add
cmpl
scas
mov
pop
or
xchg
sub
iret
inc
shrb
jae
mull
andb
inc
cmp
adc
fistl
cmp
outsb
out
mov
cmc
out
mov
leave
or
movsb
cmp
adc
add
pop
insl
sbb
push
out
mov
test
sbb
mov
xor
test
ret
cltd
stos
mov
or
int3
out
add
in
adc
lcall
add
push
sbb
cmp
add
sub
call
out
stc
mov
shlb
and
and
loopne
jp
inc
out
push
sub
aad
jp
sbb
lcall
cwtl
iret
repnz
aas
std
jle
adc
mov
stos
ret
or
enter
add
pop
popa
leave
add
mov
cmp
adc
scas
fwait
adc
jnp
addr16
mov
sbb
rcr
push
aam
xchg
shl
popa
jecxz
and
mov
pop
mov
inc
fwait
mov
sbb
add
push
and
out
xor
jl
inc
xchg
adc
int
sub
jo
cltd
mov
dec
or
mov
cs
mov
dec
fcomip
dec
popa
int3
sub
dec
pusha
lods
sbb
adc
xor
push
mov
cmpsl
add
jb
xor
sbb
dec
lcall
inc
imul
pop
add
mov
adc
xchg
xchg
es
lret
lock
xlat
xor
jae
out
je
sarb
dec
mov
push
pushf
sub
cs
je
jge
cmp
in
das
sub
cltd
dec
aam
in
mov
sbb
and
ret
dec
push
fadd
stc
and
loopne
jmp
jle
push
push
adc
mov
arpl
test
cmp
ljmp
cmp
jno
cld
insb
leave
int3
xor
mov
leave
loop
lods
fldl
repnz
les
jo
shrb
adc
cmp
in
dec
cmpsb
sub
mov
pop
mov
dec
rcrl
cmpsl
paddq
jle
movsl
push
adc
and
cs
lds
aas
jno
mov
ja
push
pop
inc
or
lcall
es
push
ja
test
push
xchg
insb
add
mov
into
inc
push
mov
push
cld
sub
sub
cmc
mov
ds
jecxz
xor
cltd
aas
mov
in
idivl
fs
sub
gs
std
add
iret
push
pop
ss
push
and
mov
je
movsl
push
mov
clc
in
inc
cmpsl
call
mull
cld
cltd
mov
pop
mov
cwtl
mov
or
aas
je
push
in
cmp
dec
or
mov
add
out
or
test
cltd
int3
and
pop
mov
js
jbe
outsl
loopne
mov
xchg
pushf
sub
scas
shll
mov
in
mov
pop
rolb
sti
cmc
cmp
sbb
add
mov
pop
inc
fs
out
pop
add
aaa
jecxz
nop
pop
ret
test
jnp
clc
cmp
mov
push
xchg
add
push
dec
mov
sbb
in
mov
and
int
movsb
cli
mov
js
xor
jo
jl
xor
stos
and
cld
xor
mov
sub
pop
insl
cmpsb
imul
inc
push
push
adc
mov
lods
jns
not
int
mov
cld
sub
ds
mov
ret
int3
repnz
or
inc
dec
fidivrl
or
inc
pop
cmpsl
loop
stc
jg,pt
or
or
cmp
mov
mov
adc
xchg
sbb
push
xchg
jne
or
in
test
ljmp
out
pushf
nop
shlb
mov
pop
cmpsb
pop
test
xchg
xor
test
or
outsl
add
test
dec
ss
out
mov
inc
gs
fists
rcrl
aad
ljmp
filds
ret
cltd
dec
clc
movsb
inc
jnp
mov
or
push
xchg
push
mov
sub
mov
stos
inc
daa
inc
mov
push
in
xor
test
mov
pop
repnz
jecxz
insb
add
repnz
repnz
bswap
jge
or
and
ja
jbe
xchg
mov
push
mov
inc
mov
or
xor
xchg
bound
repz
imul
mov
in
cmpsb
push
mov
pop
jp
ret
sbb
mov
mov
js
mov
fsubrs
pop
std
push
loop
scas
jp
push
outsl
inc
in
idiv
repnz
pop
lea
shl
fidivs
push
nop
xor
addr16
loope
popa
fmul
and
push
popf
xchg
mov
pop
cmp
clc
and
cmp
inc
lcall
sbb
add
mov
psadbw
pop
jge
outsb
pop
xchg
xor
test
pop
mov
sbb
mov
jo
jb
add
xor
lcall
mov
hlt
inc
in
sub
scas
xlat
mov
pop
mov
cltd
mov
insl
ficomps
jmp
add
fwait
pop
imul
pop
pop
adc
adc
mov
cmpsb
add
lret
push
dec
movsb
clc
mov
out
ficomps
repnz
add
jb,pt
cmp
mov
mov
adc
xor
add
pop
mov
sahf
sbb
mov
ret
into
sti
pop
inc
test
aaa
mov
sbb
rorb
pop
loopne
dec
cld
fdivl
xchg
cli
or
mov
adc
sbb
or
cmpb
aas
divl
cmp
mov
mov
jl
repz
in
clc
loope
ret
sbb
or
push
jl
in
mov
imul
mov
aaa
xchg
push
lock
imul
adcb
mov
sub
mov
xchg
sti
fs
push
or
rcrb
mov
pusha
sub
in
jae
or
cmp
shrl
push
mov
shrb
cmp
xor
mov
call
imul
sub
shll
push
jbe
jne
clc
push
pushf
adc
xor
insb
cmp
push
out
scas
add
imul
imul
xchg
mov
xchg
mov
sub
fsubrp
aam
sti
fldenv
jecxz
divl
cli
mov
insl
xor
fildl
pop
stc
mov
sarb
pusha
dec
pop
das
mov
mov
sarl
rcr
mov
or
inc
push
filds
jns
cmp
dec
adc
pop
lret
clc
mov
pop
jno
inc
fistpll
adc
popa
sahf
fistpl
inc
xor
lahf
xchg
sub
fdivp
ds
inc
aad
repz
outsb
push
pop
xchg
rol
cmpsl
out
gs
fildl
inc
std
jmp
in
push
scas
cmc
mov
and
daa
outsl
jl
xchg
gs
lds
enter
imul
push
adc
push
mov
xchg
xor
insb
in
inc
loope
inc
pop
pop
sub
push
outsb
mov
sub
movsb
xor
subb
pushf
push
in
push
mov
push
fbld
mov
xor
push
push
mov
sub
ljmp
out
lock
sbb
xchg
push
sbb
into
jmp
jbe
cmp
mov
aad
add
jg
push
nop
add
adc
out
inc
ja
sahf
test
sbb
mov
out
xchg
pop
jo
jecxz
imul
add
add
imul
xlat
xor
add
stos
adc
and
lock
ret
outsb
add
mulb
popa
sub
scas
in
negl
mov
cltd
xchg
cmc
jmp
adc
or
sbb
cmp
mov
mov
sarl
daa
xor
imul
jnp
lods
mov
leave
mov
aam
inc
and
xchg
add
enter
or
add
xchg
aad
cltd
repnz
jb
pop
or
sbb
ret
out
sti
xchg
xor
pushf
les
push
jbe
xor
inc
pop
adc
sub
xor
or
bound
push
xor
mov
mov
fistps
dec
pop
sahf
lret
mov
fists
repnz
inc
daa
xchg
insl
jle
imul
inc
outsl
pop
data16
dec
fwait
incl
add
stos
cmc
out
std
mov
dec
lret
push
mov
jmp
xlat
fyl2xp1
aad
mov
inc
jmp
mov
xor
call
mov
add
cmp
sbb
subb
mov
adc
xchg
into
sbb
das
adc
add
push
lcall
cmp
in
aam
fs
or
hlt
or
mov
and
inc
push
nop
sub
out
dec
stos
add
movsb
hlt
test
mov
inc
mov
xor
mov
aas
aaa
addr16
mov
and
add
dec
mov
jbe
in
inc
int
das
sahf
jp
adc
jge
jmp
add
xor
stc
fmul
sub
xchg
sub
mov
fdivrs
jns
inc
dec
stos
repz
add
jne
imul
cwtl
mov
inc
cmc
jns
adc
push
and
test
cmp
jb
mov
sub
outsb
sbb
ret
jp
imul
addr16
pushf
sbb
fwait
std
jnp
mov
pop
rcrb
and
outsb
add
mov
fistps
xchg
sub
xchg
outsl
jl
icebp
adc
and
xor
xor
add
mov
scas
sti
mov
xor
ljmp
aaa
call
ja
xor
mov
cwtl
dec
hlt
roll
mov
aaa
bound
mov
aad
cltd
jns
lods
dec
add
in
xchg
mov
jg
cmp
and
jbe,pt
les
cmp
and
xchg
and
mov
add
pop
sti
lret
hlt
mov
sbb
cld
adc
dec
test
test
fstpl
lahf
jp
mov
arpl
inc
mov
sbb
mov
fistl
xor
jo
fmulp
or
mov
lods
mov
pop
xor
enter
idivl
mov
adc
xchg
les
dec
call
jo
shlb
xchg
mov
stos
lahf
aaa
dec
lea
push
mov
sbb
jecxz
stos
ret
gs
xchg
scas
ret
repnz
div
cs
pop
pop
mov
cmp
mov
cmp
cltd
or
jns
imul
xor
pop
inc
mov
loopne
sahf
jge
mov
cmp
leave
jp
dec
in
xor
es
enter
lock
inc
repz
inc
xor
and
xor
mov
testl
sub
sub
cld
movsb
fdivl
or
jmp
mov
adc
loope
std
dec
fwait
and
xchg
inc
sbb
fstl
push
data16
inc
pop
xchg
sbb
add
xor
lret
std
fbld
and
fisubrl
ljmp
or
repz
pop
and
std
mov
push
cmp
out
sub
in
mov
mov
fdivp
icebp
adc
jmp
cmp
adc
push
popf
fidivrl
mov
aas
arpl
xor
testb
cmp
jno
inc
in
mov
in
jmp
xchg
sbb
xor
addb
dec
push
scas
xor
stos
and
adc
popf
int
stc
jbe
int
lods
jl
add
lret
pop
jb
ficoml
mov
ljmp
flds
sbb
leave
scas
push
mov
inc
lea
sbb
or
rcrb
hlt
add
mov
cld
outsl
popa
call
repz
xchg
cmp
push
icebp
es
adc
add
and
sub
and
and
adc
add
aas
add
mov
aaa
jmp
add
mov
and
sbb
lret
ret
dec
push
sbb
rcll
aam
push
sahf
iret
mov
sahf
sti
jae
mov
or
insb
mov
sub
mov
mov
outsl
and
add
lods
jle
inc
cmp
daa
int
add
inc
jnp
mov
icebp
mov
and
mov
ss
cltd
xor
or
sub
adc
lret
cmp
stc
fdivrs
jbe
in
jbe
mov
imul
aam
sub
adc
dec
sbb
adc
movsb
out
pop
inc
out
pop
and
outsb
scas
shrb
push
aad
xor
mov
push
pop
mov
jl
dec
lret
sub
cmp
sbb
add
cltd
subl
and
enter
aas
lcall
popa
ja
jl
je
sub
call
sub
jne
imul
push
pop
sub
jl
repz
lea
ljmp
jbe
int
sub
jecxz
and
loop
rorb
std
sub
movsb
popf
fistps
and
imul
sbb
xchg
pop
mov
mov
cmpl
das
movsl
out
jmp
popf
lea
call
mov
pushf
push
dec
jns
int
pop
sti
sahf
sbb
dec
push
js
loop
sti
or
or
rorl
and
pop
mov
cli
dec
comiss
cmp
sub
xchg
imul
aam
loope
mov
loop
loop
aaa
pop
jbe,pt
mov
das
xchg
xchg
ds
into
in
scas
dec
sbb
jg
inc
shlb
inc
xor
fxch
in
mov
cmp
into
mov
mov
adc
sti
enter
jl
movsl
lcall
push
xchg
inc
mov
outsl
sahf
xchg
and
push
mov
xor
sub
data16
sub
loop
fcmovnu
aaa
inc
mov
jl
in
loop
inc
stc
int
fsubs
xchg
sub
jb
and
mov
lods
sti
mov
lods
sbb
aam
sub
pushf
mov
inc
int3
scas
negb
push
jnp
bnd
pop
dec
cmp
sub
push
mov
lcall
dec
or
das
cli
or
test
xor
fnsave
fadds
pop
mov
addr16
mov
rcrb
xchg
or
mov
mov
outsl
or
inc
pusha
dec
sub
mov
jp
cmp
aad
imul
addl
inc
sub
leave
fnstenv
addb
mov
nop
dec
daa
testb
and
dec
jp
push
dec
ret
cmpsb
mov
and
push
add
scas
test
int
das
cmp
aaa
xchg
movsl
add
inc
mov
dec
push
leave
and
mov
fcmovnu
shrl
and
pop
xchg
cmp
testb
stos
mov
stc
sbb
daa
and
sbb
std
into
xlat
mov
pusha
adc
jle
cmp
push
lcall
es
mov
xor
xchg
stc
mov
adc
inc
xchg
loopne
scas
dec
jl
push
in
sub
sbb
and
mov
jbe
pop
push
sbb
push
mov
xchg
or
push
push
clc
dec
sbb
sub
cli
dec
fldl
mov
mov
pop
fdivl
mov
mov
mov
ret
lahf
shll
adc
mov
pushl
sbb
xlat
popf
fildl
ret
ret
out
leave
adc
test
lret
aaa
out
or
or
jns
daa
push
lods
call
jmp
dec
js
push
adc
cmp
into
adc
mov
pop
push
push
rcll
pop
loopne
dec
adc
xor
and
or
and
or
and
xor
xor
das
xchg
push
sti
mov
or
or
pop
loop
insb
out
and
xchg
hlt
movsl
les
push
arpl
movsb
sbb
lret
mov
mov
fwait
enter
xor
daa
lods
jmp
mov
jle
les
rcr
mov
lods
popf
mov
mov
jecxz
jmp
push
std
xlat
dec
and
in
xchg
loop
fists
push
mov
lods
out
pop
dec
movsb
jns
sbb
dec
and
pop
data16
or
jno
lret
sub
mov
or
call
pop
dec
xchg
add
sbb
or
jp
out
push
xchg
add
call
pushf
push
js
js
lahf
mov
xchg
daa
jg
imul
add
sub
push
mov
cmp
cmp
and
daa
pop
es
aas
loope
add
ja
bound
mov
mov
in
mov
xor
inc
or
in
xor
sbbb
rcrb
dec
sbb
mov
mov
dec
xor
gs
adc
jno
in
fstl
add
push
loop
inc
sbb
push
push
or
pusha
adc
test
add
fisttps
xorl
mov
cltd
or
repz
insl
or
xchg
inc
hlt
outsl
in
jae
hlt
and
ret
mov
mov
inc
inc
mov
out
jbe
pop
fldenv
jns
jnp
stos
iret
into
icebp
adcb
mov
add
add
push
dec
lock
cmp
cmpsl
lock
mov
dec
mov
data16
iret
mov
mov
movsb
mov
xchg
add
xchg
in
mov
ljmp
mov
enter
fdivs
pop
rcll
out
insb
lock
aam
scas
pop
cltd
ss
dec
loopne
jmp
push
push
and
stos
lahf
mov
adc
outsl
stos
jl
repnz
js
call
push
xchg
aam
mov
gs
and
in
xor
je
jmp
xor
dec
icebp
cmp
fisttpl
pop
adc
sahf
insb
xchg
ljmp
cwtl
std
movl
cmp
pop
jg
lods
sahf
pop
cmp
pop
data16
jbe
dec
mov
pop
iret
unpcklps
cmp
stos
ss
sbb
adc
and
aas
xchg
cmp
sub
mov
xor
adc
xor
imul
pop
jg
test
scas
in
jb
mov
shlb
lret
in
js
ds
mov
dec
popa
xchg
or
lods
lret
inc
dec
mov
repnz
stos
jge
mov
cli
dec
push
and
outsl
pushf
je
icebp
mov
dec
lahf
xor
mov
adc
subl
xor
fidivs
and
test
dec
sub
push
or
ss
aaa
aam
hlt
push
js
push
mov
xor
mov
add
clc
sahf
ret
aaa
pop
or
cltd
psubusb
push
test
cmp
popa
popa
cmp
jmp
and
stc
mov
or
jl
jne
rclb
jl
fwait
jle
push
add
cltd
dec
mov
fs
pop
inc
mov
daa
xchg
cs
or
loop
dec
push
stc
mov
push
sbb
out
shlb
and
cmp
push
test
pop
pop
sbb
negb
pop
lret
jns
dec
call
adc
cmpsl
es
out
rorl
test
adc
fmulp
ljmp
push
test
push
jbe
in
ss
testl
in
rep
cmp
adc
leave
jno
fs
pop
push
daa
pusha
test
adc
mov
mov
insb
mov
jecxz
or
xchg
mov
xlat
in
es
pop
rcr
add
add
sti
ror
inc
cmp
mov
xchg
lods
ret
xchg
and
sbb
push
fdivr
lods
cs
scas
js
or
xor
into
cwtl
fwait
inc
insl
mov
outsb
xchg
cmpsl
dec
dec
in
pop
cmc
push
and
popa
js
and
jmp
sahf
outsl
int
adc
cmp
mov
and
sbb
mov
lods
cltd
imul
mov
dec
add
inc
stc
stos
das
stc
insb
mov
es
xchg
cld
sub
mov
dec
dec
shlb
call
mov
mov
gs
push
clc
lcall
and
sub
xchg
dec
ret
and
sbb
push
or
std
xchg
add
fs
lcall
outsb
rcll
repnz
mov
pushl
xchg
jns
out
scas
enter
aaa
jne
mov
into
ret
xchg
jp
out
add
nop
lcall
lcall
adc
mov
cmp
and
add
sbb
shlb
mov
or
mov
lods
outsb
lcall
int
lcall
and
ljmp
popf
scas
xchg
ja
rcr
gs
inc
ljmp
mov
push
mov
mov
ret
mov
test
inc
mov
jle
insl
or
xchg
push
lcall
pop
rcrb
shlb
add
enter
jne
and
mov
lds
mov
sub
xchg
mov
or
insb
ja
add
pop
test
dec
pop
adc
ficompl
imul
mov
fadd
movsl
jp
jno
mov
cmp
or
add
fwait
push
mov
mov
lret
in
imul
push
andb
fsub
xorb
fidivrs
push
icebp
xchg
fyl2x
jns
gs
inc
jnp
insb
fcomps
jno
xorl
iret
ss
or
dec
xor
xchg
mov
adc
pop
inc
mov
jle
fcompl
rclb
cmp
into
add
leave
out
mov
mov
ss
push
sub
mov
les
jg
adcl
ficompl
push
icebp
inc
inc
xchg
push
enter
cld
leave
inc
lock
push
test
out
mov
les
push
insl
xor
add
enter
lahf
dec
fld1
sub
ror
xchg
adc
mov
mov
add
mov
insl
cmp
push
lcall
or
push
mov
fisttpl
jae
or
sbb
fwait
xor
jmp
or
gs
mov
out
aaa
mov
call
adc
jb
fiadds
push
add
fdivr
int3
pop
mov
cmp
xchg
jb
test
and
or
ja
mov
cmpsb
hlt
xor
cmp
cmp
cli
data16
aaa
hlt
int3
jmp
mov
fwait
pop
pop
sub
fstpl
adc
stos
mov
loopne
decl
repnz
lock
cmc
or
std
xor
push
js
jp
mov
addr16
lods
scas
stos
lods
or
push
mov
out
loope
sbb
packuswb
mov
js
push
dec
sbbl
mov
fwait
movsb
mov
adc
popa
cmp
lret
mov
dec
or
cli
xchg
mov
mov
sbb
in
sarb
ja
iret
ficomps
adc
dec
aas
mov
cmpsb
call
rcrl
aas
loopne
mov
pop
in
cmp
fs
cld
lods
aaa
fcmovnb
push
sub
inc
inc
jb
sub
mov
fildl
fwait
insb
ret
sti
fistps
lods
xor
in
mov
jo
iret
jnp
mov
pop
add
push
ficomps
or
mov
add
adc
add
mov
pop
lahf
inc
pop
mov
and
aaa
push
and
push
into
mov
mov
flds
sbb
jmp
mov
mov
ror
sti
push
std
adc
imul
mov
outsl
mov
and
mov
mov
push
jmp
repz
int
pop
mov
cli
dec
rcr
test
cwtl
push
es
xchg
in
out
or
in
outsl
insb
xchg
jmp
adc
xchg
mov
adc
xchg
cmp
fxch
jge
lds
gs
les
filds
fs
or
ret
jbe
push
in
pusha
add
pop
inc
sub
fsubs
fcompl
lcall
cmp
movsb
imul
popa
or
push
test
xchg
imul
jp
cmpsl
jge
arpl
insb
mov
push
icebp
sub
cmpb
lret
pop
inc
repz
mov
push
fmull
xor
xchg
jp
gs
pop
and
cld
jns
pop
mov
stos
push
fbld
pop
out
dec
sub
dec
in
jne
mov
adc
pop
jl
xor
push
push
dec
insl
iret
sub
sbb
push
and
mov
xchg
ficompl
mov
call
jne
jp
lds
mov
cmp
shl
jno
das
cmpl
int3
adc
divl
push
push
jbe
call
or
cmpsb
icebp
pop
mov
repz
rorb
je
cmc
add
push
icebp
movsb
fldenv
mov
inc
loopne
pop
andl
push
jno
ljmp
mov
lret
sti
mov
xchg
mov
or
pop
movsl
bound
in
cwtl
or
mov
pop
mov
stos
cmc
enter
ljmp
cli
or
pop
ss
aam
inc
pop
loop
adc
xchg
cmp
jnp
mov
mov
xor
ljmp
mov
mov
adc
dec
adc
insb
jb
aaa
ljmp
xorl
mov
xchg
or
int
gs
jl
sti
pop
in
shlb
mov
inc
inc
jl
pop
sub
in
mov
add
or
hlt
pop
inc
add
add
adc
pop
lcall
pop
xchg
xchg
cmp
mov
notl
jne
add
stc
adc
xchg
and
cmp
fs
mov
bnd
cmp
repz
dec
push
imul
pop
cmp
lret
inc
rclb
mov
jl
aad
mov
fwait
sub
lock
inc
jae
or
push
sbb
lret
push
dec
jecxz
out
sub
xchg
sbb
clc
push
ret
cwtl
ret
hlt
dec
lcall
pop
loopne
or
cmp
ret
add
xlat
movsl
jne
jp
mov
rcrb
std
mov
out
fists
adc
jp
mov
ja
xor
in
clc
cltd
or
xchg
fdivrl
xchg
leave
mov
ret
inc
repz
push
mov
xor
outsb
pop
dec
mov
stos
addr16
xorl
loop
dec
dec
push
and
daa
cmpsl
adcb
test
mov
inc
enter
cmp
stos
arpl
sbb
push
pusha
idiv
or
xchg
lock
fs
ss
push
arpl
mov
pmaxsw
call
xor
inc
leave
inc
push
test
push
mov
addl
imul
inc
push
adc
inc
out
adc
and
mov
cli
adc
add
fdivrl
cmpsl
push
jmp
mov
cmp
xorb
cmpb
push
sbb
push
dec
ljmp
mov
addr16
mov
mov
mov
clc
popa
cmpb
outsb
inc
jo
pop
or
ret
mov
xchg
and
icebp
int3
fnsave
jno
sub
mov
jmp
sub
aad
in
ljmp
mov
sbb
fsubr
jnp
xor
dec
jnp
out
push
sar
dec
cli
add
mov
or
fs
push
push
rorl
cli
jae
movsl
lret
mov
adc
stos
pop
add
repnz
inc
rorl
lea
mov
xchg
adc
dec
ds
jl
and
or
jp
insb
inc
movsl
out
cmc
dec
mov
int
adc
mov
dec
aam
fnstcw
lcall
sti
shl
sahf
arpl
mov
pop
lods
pop
adc
add
fistpll
iret
adc
mov
cmp
sbb
sub
stos
and
pop
or
mov
jle
cwtl
or
je
and
xchg
fldcw
outsb
mov
dec
and
enter
fistps
addb
outsl
es
rclb
and
push
push
scas
cmp
mov
and
cmpb
mov
pop
insl
cld
sub
popa
push
jb
mov
xchg
sbb
mov
push
aad
test
jl
xlat
xorl
mov
popf
mov
lods
cli
push
sahf
rcll
movups
pop
arpl
lods
or
rorb
outsb
inc
dec
push
adc
or
push
jmp
mov
xchg
xchg
daa
xor
mov
movsb
push
ret
mov
aas
sti
mov
shrl
sub
ja
xor
aad
fldenv
adc
out
fs
mov
and
dec
sub
ret
mov
jae
aas
into
scas
pop
pop
pushf
cmpsl
dec
sbb
dec
pop
pop
sub
add
stos
movsl
and
inc
std
add
iret
cwtl
jno
mov
inc
daa
nop
xchg
inc
into
push
and
jmp
push
lret
jb
fsubl
pop
stos
xchg
cltd
jecxz
dec
push
mov
dec
movsb
add
rolb
sbb
sub
adc
imul
cs
in
sub
repnz
enter
arpl
cmp
lahf
sbb
je
js
adc
inc
sub
subb
sbb
sub
mov
bnd
adc
dec
outsb
dec
in
xchg
out
and
fwait
subl
xor
or
cs
xchg
es
sbb
push
icebp
push
jae
movsb
xchg
inc
dec
pop
jb
rep
mov
cwtl
adc
ret
fimull
pop
dec
adc
addr16
aad
movsb
stos
push
xor
sbb
pop
or
mov
adc
cmp
pop
mov
push
cli
cltd
and
or
mov
ss
adc
stos
pop
imul
sub
mov
test
ret
xchg
insl
or
jg
push
test
cmc
inc
sub
and
sub
adc
aam
mov
dec
or
mov
inc
iret
jle
cmpsb
mov
ss
dec
mov
xchg
adc
mov
loop
loop
lock
subb
popl
movsl
dec
and
popf
pop
jmp
or
jno
mov
addr16
fwait
xchg
sbb
sti
jbe
cmp
mov
pushf
popf
xchg
sub
mov
push
add
pop
out
xchg
jnp
repnz
aam
mov
xor
in
pop
add
dec
mov
fldenv
push
mov
outsl
movl
lret
and
iret
stos
push
sbb
pop
sbb
orb
outsb
hlt
loope
fisttps
push
sub
inc
xchg
xchg
call
jns
sbb
int
js
mov
cltd
stos
add
leave
nop
ds
pop
cmp
stos
add
xchg
cmp
jae
sub
fldenv
pop
add
push
pop
leave
aas
xchg
lahf
pop
cs
fcom
iret
imul
push
add
jnp
iret
outsl
jp
pop
mov
mov
repz
and
mov
jno
inc
push
dec
xor
cltd
cmp
imul
lahf
in
aaa
jecxz
add
stos
lretw
ffreep
dec
mov
pop
ss
repz
hlt
and
xchg
cmp
jl
mov
stos
push
rcr
clc
rolb
xchg
xor
jns
cmc
sub
push
rcll
repnz
or
adc
lea
xchg
sti
or
inc
cld
fcmovu
ficoml
bound
pop
fistl
faddl
daa
jo
jge
inc
out
lcall
aaa
dec
jnp
mov
ljmp
or
push
mov
pop
cmp
xlat
loope
pop
xlat
stos
jl
loope
sub
push
aam
test
push
cld
xor
gs
repz
add
or
inc
jb
lret
je
pop
mov
jae
loope
pop
sub
push
adc
imul
inc
adc
push
jecxz
ja
mov
pop
xchg
outsl
push
lcall
int
cmp
mov
xor
fs
sub
jb
xchg
roll
nop
fidivrl
jecxz
shrl
mov
loop
mov
or
sbb
into
int
imull
jge
aas
jne
pop
aas
mov
sahf
das
imul
scas
jb
cmp
inc
aas
and
loop
or
imul
jge
jmp
xlat
js
pop
stc
call
inc
std
sbb
cmp
dec
ja
popf
test
xchg
cwtd
fwait
or
sbb
push
or
loop
cmpb
imull
sub
adc
jl
sbb
mov
push
in
sbb
xchg
divl
jl
lods
pop
out
ja
mov
xor
scas
js
mov
nop
mov
daa
clc
ljmp
jp
fidivs
int3
or
repz
push
push
push
dec
lods
mov
adc
mov
push
mov
mov
fmull
cli
cmp
enter
pop
lea
xor
or
movb
push
and
daa
int3
das
jmp
adc
pop
hlt
dec
insl
mov
lods
in
xor
or
test
lret
repnz
cmpb
cmpsl
sub
ret
jge
dec
pushf
mov
scas
or
and
adc
repnz
mov
inc
mov
cmpsb
movsb
sub
jmp
jo
push
mov
lock
cld
sbbb
xchg
rcrl
jbe
ljmp
xor
xor
mov
jno
insb
mov
icebp
nop
or
enter
leave
inc
mov
call
mov
jbe
sbb
pop
cwtl
jae
popf
jne
out
jecxz
push
mov
pop
jb
adcb
clc
sbb
mov
outsl
xchg
mov
mov
jo
jecxz
bound
xor
mov
jp
fdivrs
movl
in
pushf
sub
fidivrl
xchg
fldl
push
mov
jns
adc
add
mov
cs
popf
loopne
out
pop
clc
into
pop
or
jns
pop
addr16
jge
hlt
cmp
add
arpl
dec
mov
jmp
add
xchg
xor
xchg
gs
pop
or
int
in
or
movsb
lcall
inc
fdivrl
in
jecxz
std
inc
mov
aas
repnz
sbb
xchg
sub
and
arpl
in
jo
ret
adc
ja
mov
mov
aaa
int
cmpsb
test
outsl
ficomps
pop
jmp
jb
and
aam
and
xor
xorb
pop
cmp
mov
mov
jns
dec
aas
mov
fdiv
lcall
sahf
jae
loop
mov
or
loop
out
inc
xor
nop
js
sbbb
push
fbld
push
adc
add
adcb
leave
out
jbe
std
ret
dec
xor
in
jbe
mov
xor
sub
test
repz
hlt
cmpsl
rcr
dec
adc
mov
pop
cs
mov
lret
push
jo
sub
and
add
xorl
push
or
lock
mov
sti
stc
xor
push
sub
push
inc
repnz
mov
adc
xor
adc
ss
iret
sbb
add
loope
in
and
mov
cmp
test
push
cmp
les
push
cmp
repnz
and
jmp
dec
and
push
shll
nop
shlb
xor
add
paddq
fcompl
cmp
in
xchg
pop
jno
cld
jno
sbb
mov
sbb
int
jecxz
cmpsl
xchg
fdivl
mov
add
rcr
in
pop
sub
or
popa
loop
cltd
lods
jnp
xchg
aam
push
stc
and
mov
stc
rolb
in
repz
push
mov
in
loope
xchg
std
cli
ljmp
scas
ja
outsb
into
lea
cli
jae
and
xchg
cwtl
lahf
jb
mov
lcall
jmp
adc
icebp
lret
inc
inc
mov
adc
pop
xchg
scas
cs
int3
jl
cmp
bound
jp
push
mov
lock
stos
addr16
jp
or
cmpsl
cli
and
mov
rcrb
and
int
insb
pop
or
inc
inc
mov
jg
mov
lock
loope
jnp
std
les
adc
mov
lcall
lcall
jmp
xchg
pop
or
negb
sbb
mov
mov
lds
rorb
add
add
adc
mov
push
jle
adc
ds
adc
sbb
stos
dec
cmp
inc
outsb
cpuid
gs
mov
out
jmp
pop
div
or
or
mov
ljmp
mov
xchg
and
jmp
cmc
mov
ss
mov
stos
decb
and
pop
xchg
mov
out
mov
ss
scas
cmpsb
dec
jne
and
loopne
jg
adc
inc
and
fsts
pop
mov
cmp
mov
mov
mul
fwait
aam
pop
jecxz
push
pop
sbb
subl
mov
cmp
adc
outsl
mov
rcrb
insl
jns
ss
decl
inc
cli
testb
imul
lock
ja
data16
sahf
into
cmp
mov
xchg
jmp
jecxz
in
lret
mov
mov
dec
out
push
mov
mov
xlat
scas
ja
out
mov
testl
cld
push
inc
js
jnp
imul
sbb
imul
notl
xchg
and
push
xor
in
addr16
adc
out
inc
jle
shlb
inc
xorl
fdivs
xor
add
in
or
xlat
xor
ljmp
pop
movsl
mov
cmp
sub
lods
pusha
jmp
push
fs
cli
loop
ss
push
jb
xlat
incl
mov
dec
inc
add
adc
adc
cwtl
std
mov
dec
mov
cmp
movsb
jecxz
xlat
jp
and
test
std
aaa
ret
nop
std
lret
sub
push
clc
fwait
outsb
sub
das
lret
jp
ja
loop
icebp
int3
push
mov
push
lods
shll
mov
in
and
jno
xchg
sub
add
fistpll
inc
rcl
or
in
fdivp
mov
add
mov
inc
mov
lcall
mov
push
xchg
test
in
jl
xchg
and
jmp
xchg
rorb
add
pop
in
mov
mov
inc
subl
and
sti
cmp
adc
or
xor
ret
push
test
outsl
cli
fmulp
mov
push
fisttpll
leave
add
or
xchg
pop
es
xchg
lcall
jo
test
xchg
jle
gs
push
and
mov
notb
push
frstor
mov
int
std
aas
out
sbb
fimull
xchg
mov
push
shlb
dec
stos
repnz
or
mov
lods
jp
inc
and
scas
mov
insl
push
aas
fwait
aaa
ds
aaa
cmpl
fsub
jno
bound
sti
in
mov
mov
dec
cs
mov
adc
and
inc
jle
stc
dec
jge
js
xchg
fucomp
je
out
mov
mov
out
stos
cmc
push
cmp
push
adc
out
add
and
aaa
mov
add
mov
loop
ds
cmc
mov
jno
xchg
je
in
mov
iret
jnp
mov
fdivs
daa
cld
xchg
les
mov
je
or
ffreep
addr16
sub
xor
inc
dec
ret
lret
jg
inc
inc
sub
hlt
xor
dec
adc
out
push
fcoms
push
cmp
mov
lods
xchg
imul
daa
les
jmp
mov
lcall
mov
frstor
scas
rorb
leave
pop
and
jbe
ret
inc
add
std
mov
xchg
mov
sub
jnp
push
xchg
hlt
mov
lcall
loope
add
sbb
ja
xchg
into
push
scas
lock
jg
divb
sbb
cmc
lods
xor
cmp
xor
mov
xchg
push
jg
movsl
rolb
push
add
add
rcll
xchg
cs
jnp
outsl
mov
ficomps
sub
jmp
adc
ljmp
cwtl
xor
sbb
pop
jne
dec
inc
repz
movsl
pop
mov
push
cwtl
or
into
dec
roll
shlb
xchg
dec
push
mov
es
mov
cmp
incb
pop
xchg
dec
test
dec
pop
sbb
shlb
adc
push
cmp
lret
int
push
sti
add
xor
inc
addr16
loop
cmpsl
adc
ss
dec
loopne
mov
popa
adc
dec
mov
mov
xchg
jns
lahf
enter
cwtl
dec
dec
lea
xchg
add
test
sub
fcmovne
and
loope
cmp
stos
push
popf
add
lret
and
arpl
sub
add
inc
xchg
mov
test
je
adcb
add
adc
mov
add
ljmp
lahf
ljmp
rcll
push
mov
xor
out
and
data16
fsubrs
lods
rclb
mov
enter
pop
adc
cmpl
scas
and
jae
scas
orl
rol
cld
sub
fistps
jnp
xchg
jl
pop
jmp
int3
daa
xor
jbe
dec
outsb
push
inc
sub
in
jmp
bound
inc
push
pop
push
add
or
mov
mov
or
cwtl
dec
arpl
or
xchg
xchg
jno
arpl
lods
dec
mov
int3
cmpsl
scas
shll
jl
daa
xchg
sbb
popa
dec
loopne
xchg
xchg
jecxz
jno
test
jae
repnz
pop
or
pop
xchg
mov
mov
fldl
dec
inc
jno
popa
mov
mov
stc
mov
insl
pusha
push
lods
mov
cmc
call
aas
ljmp
lods
mov
add
pop
loope
jns
jae
cmp
jbe
leave
xchg
ret
xchg
scas
mov
aaa
pop
imul
pop
in
inc
js
in
test
sub
xor
add
mov
mov
fwait
iret
movsl
in
mov
jmp
scas
xor
mov
out
jecxz
into
jmp
jg
fstpt
hlt
mov
icebp
lea
ja
sbb
mov
fsubr
pop
cld
pop
mov
mov
sbb
xor
jbe
sub
push
jb
imul
imul
daa
gs
inc
cs
jl
popf
and
mov
into
dec
insl
adcl
jmp
and
cmp
fsubrs
ja
std
mov
jb
xchg
adc
cmpb
mov
pop
lret
mov
fnstenv
test
sbb
cltd
sbb
push
je
ljmp
cs
fcoms
push
sbb
mov
pop
mov
fs
and
mov
cld
and
aad
enter
xor
xchg
jb
mov
mov
fdivrs
stos
rcrb
fwait
adc
adc
push
or
leave
add
mov
pop
nop
in
mov
or
aam
push
test
mov
iret
mov
sbb
mov
push
inc
pop
ljmp
xchg
fs
lea
and
mov
mov
pop
cmp
loope
push
push
mov
imul
scas
jge
les
and
leave
sbb
test
sub
lods
mov
inc
pushf
sub
addr16
mov
add
fmull
jg
int
adc
pop
mov
sub
cmpsb
jnp
sbb
enter
arpl
push
fnstenv
cwtl
lret
lret
in
pop
pop
mov
mov
je
xchg
mov
call
faddp
jp
mov
daa
mov
jecxz
push
sbb
push
aas
insl
js
popf
in
fiadds
lahf
popf
ds
je
and
xor
and
pop
lcall
sbb
loop
mov
mov
xchg
shrl
popf
js
insb
push
xor
aaa
mov
or
insb
stos
inc
pusha
pop
jmp
jo
lock
ret
cmp
stos
lea
xchg
into
sub
loopne
xchg
test
jbe
iret
movsb
lret
cli
pop
sahf
push
jle
popf
cld
mov
clc
add
mov
out
sub
fdivrs
sub
hlt
jb
adc
cmp
inc
bound
pop
cmc
cli
test
inc
outsl
xchg
cli
pop
push
cmpsb
push
in
out
arpl
push
jae
pushf
jo
aam
std
popf
mov
cmovns
imul
int
out
rcll
jp
push
and
jp
ds
or
dec
pop
push
push
loope
fwait
repnz
mov
pop
push
sub
ret
mov
ljmp
dec
dec
jnp
and
into
cmp
xchg
lcall
push
aad
inc
shll
fsubl
push
or
xchg
and
outsl
jmp
mov
mov
jge
mov
sbbl
cwtl
xchg
mov
pushf
test
imul
mov
cmp
mov
xchg
jbe
mov
adc
xchg
daa
mov
xor
bound
in
pop
and
mov
xor
mov
fnstcw
push
lret
popf
mov
daa
leave
xor
jae
stos
mov
lret
lcall
sbb
rcll
push
scas
xor
inc
xchg
cmp
lds
cmp
aas
push
repnz
cltd
xchg
push
pop
mov
xor
movsl
sbb
test
sub
jecxz
jnp
movsb
xchg
add
das
push
das
mov
dec
or
push
dec
cmc
push
lds
and
jg
pop
pusha
add
test
xchg
mov
push
pop
sbb
pop
cwtl
push
addr16
shl
add
or
inc
sub
rcll
lahf
fwait
daa
or
xchg
clc
cmpsl
jecxz
mov
sbb
jecxz
add
lods
hlt
imul
fbld
rorl
jle
dec
adc
mov
shl
jae
out
es
out
pop
push
dec
sbb
push
mov
repz
repnz
in
xor
popf
dec
in
inc
mov
js
popf
sahf
sbb
xchg
push
sti
mov
call
imul
call
sbb
sti
jb
cmp
jmp
sbb
dec
or
cld
mov
xchg
enter
cltd
enter
inc
andb
adc
fidivrl
loop
clc
jle
aam
push
in
bnd
loopne
mov
pop
rolb
inc
ss
mov
push
addps
int3
js
pop
pop
push
push
push
push
dec
test
xchg
outsl
mov
test
xor
mov
xchg
mov
les
dec
lcall
cmc
pop
add
xor
daa
int3
lods
inc
subb
add
jmp
mov
sbb
imul
std
out
xor
sbb
pop
stc
imul
sub
pop
jg
ljmp
cmpl
mov
mov
pop
sub
aaa
sti
aam
orb
jne
and
dec
sahf
adc
lock
stos
jg
sahf
jg
iret
mov
xor
sar
movsl
dec
fidivl
inc
mov
pop
jbe
jp
ja
jae
out
jbe
loopne
push
pop
data16
mov
sbb
loopne
arpl
pop
add
stos
push
mov
sbb
fwait
out
pop
or
and
nop
pop
loop
jmp
pop
inc
push
jne
fistps
in
lcall
sub
lea
mov
sub
adc
addr16
call
dec
clc
push
gs
mov
and
call
xchg
mov
xchg
xlat
hlt
movsb
jle
jbe
gs
mov
add
iret
imul
jl
aaa
mov
shll
sub
pop
cmp
mov
inc
xor
push
inc
adc
decb
inc
add
in
cli
mov
sub
ljmp
sarb
mov
outsb
enter
jae
dec
dec
pop
xchg
mov
cmc
cs
jg
sbb
xchg
mov
mov
lods
sbb
cltd
mov
jmp
cmp
movb
stc
sub
push
loopne
call
push
push
fimuls
js
call
xchg
cltd
cmp
out
iret
inc
mov
mov
xor
aam
gs
sub
mov
mov
pop
inc
pop
rclb
pop
sub
or
mov
loopne
inc
fidivrs
dec
jne
cli
mov
and
rcrb
mov
xchg
lahf
dec
jl
mov
jg
out
sub
dec
or
mov
ret
arpl
dec
add
or
sbb
pop
out
je
jae
scas
mov
lret
dec
das
sbb
test
js
add
sbb
arpl
or
sbb
scas
decb
fdivrl
stc
mov
loopne
xchg
sbb
mov
push
rclb
ret
ret
mov
imul
sub
xor
in
aad
test
mov
mov
add
insb
jle
jge
clc
loop
scas
inc
addr16
add
popa
inc
xchg
imul
mov
loope
jle
je
and
sbb
lret
out
dec
lret
xchg
mov
dec
mov
rorl
sbb
outsl
lcall
arpl
neg
pop
ja
mov
add
in
movsl
subl
xchg
aad
arpl
mov
lcall
std
xlat
inc
fmul
jbe
adc
cmp
andl
xor
or
inc
adc
jle
test
or
xor
push
loop
and
mov
cwtl
stos
outsb
sub
repz
loope
test
cmpsl
pop
decb
in
sbb
out
jne
repz
add
inc
repnz
rcrl
push
addr16
in
pop
cltd
hlt
ja
xor
out
mov
fidivl
addb
mov
and
xchg
xor
mov
pop
xchg
dec
pop
fs
cmp
push
jae
jns
loop
pop
sbb
mov
pop
push
add
sub
mov
jbe
out
test
repz
jg
adc
push
ret
sarb
adc
ret
xchg
pop
aad
lods
inc
movsb
xchg
imul
mov
xlat
adc
je
mov
movsb
sbb
ret
out
mov
jne
inc
pop
xor
es
arpl
xchg
push
sub
cmp
aaa
nop
adc
adc
jge
sub
jecxz
mov
imul
add
stc
addr16
sbb
test
cmc
test
sti
into
mov
dec
repnz
dec
push
lea
lea
subb
inc
movsl
jg
subb
jo
push
pop
jno
inc
adcl
adc
cmpsl
rorl
push
jns
cltd
dec
and
sarb
cmp
scas
jg
outsl
stos
div
sbb
add
hlt
mov
test
in
jnp
je
sub
push
inc
cli
inc
js
dec
jmp
jno
fs
inc
mov
bound
sbb
pop
dec
sub
inc
mov
cmp
or
cltd
loope
out
pop
jbe
adc
jbe
mov
jecxz
push
data16
scas
ret
adc
sbb
aaa
pop
loope
push
fstps
out
jge
or
xor
pop
dec
mov
popf
inc
pop
lea
std
dec
lea
jb
insb
in
jne
sbb
fsubl
aam
sahf
jg
test
mov
cmp
std
ficomps
test
pushf
mov
push
or
add
insl
add
pusha
loop
add
in
js
fxch
insl
jae
ffree
mov
test
popa
dec
sub
pop
sub
or
sbb
mov
mov
xor
out
push
or
mov
in
std
leave
stos
sbb
add
addr16
addr16
jecxz
mov
rclb
in
test
mov
sti
stos
scas
icebp
icebp
jne
repnz
stos
push
shl
mov
add
push
outsb
nop
pop
daa
sbb
out
ljmp
xchg
xor
jne
cltd
mov
scas
sbb
mov
mov
aad
clc
jmp
sub
gs
rep
mov
adc
testl
jge
scas
ds
dec
movaps
pop
mov
sub
xor
sbb
dec
push
jbe
push
mov
shlb
and
inc
xor
lea
dec
test
xor
pop
cmp
test
push
idivl
adc
in
movsb
xchg
fdivrl
mov
dec
mov
shrb
jns,pt
iret
push
pushl
ficoms
mov
push
sbb
pop
test
lret
leave
jp
shll
xor
jo
inc
ror
and
sahf
loope
popa
pop
push
enter
xchg
sahf
sar
sahf
or
out
sbb
das
add
repz
inc
adc
insl
in
mov
sub
sub
lds
push
fldlg2
scas
gs
xorb
xchg
mov
push
pop
iret
test
mov
inc
inc
call
les
adc
inc
out
test
adc
sub
subb
mov
pop
pop
jns
xchg
out
in
or
stos
test
add
stos
mov
adc
push
mov
ljmp
outsl
pop
lods
cli
jno
jns
loopne
test
arpl
subl
cmc
jle
lret
adc
lods
imul
pop
dec
imul
cmpsb
fcompl
mov
out
aaa
into
inc
lret
sub
add
add
stos
dec
mov
sbb
mov
fsts
xchg
adc
int3
mov
inc
jnp
add
call
or
stos
aaa
add
daa
push
pop
rorl
ret
mov
adc
int
call
mov
add
cmp
cmpsb
cmpb
sbb
movsb
jle
add
xchg
adc
pop
incb
adc
cs
jp
sti
push
ja
pop
or
inc
in
or
pop
pop
mov
shlb
into
add
dec
mov
dec
mov
mov
mov
add
rcll
push
fistl
jb
idivl
test
test
xlat
jle
and
lret
adc
inc
xor
xchg
ss
jle
lock
es
das
mov
push
leave
sub
add
mov
mov
xchg
and
lcall
std
imul
fstps
jno
mov
push
insl
or
or
mov
orb
popf
mov
pusha
stos
add
mov
sbb
test
dec
outsb
sbb
loop
xor
aam
stos
ljmp
add
jo
aam
lods
mov
dec
sbb
sbb
inc
int
and
jge
sbb
loopne
mov
xchg
iret
aaa
cli
repz
in
pusha
popa
out
xchg
inc
scas
pop
sahf
dec
fstl
mov
inc
inc
in
arpl
adc
in
and
mov
inc
and
cmp
stos
inc
pop
loop
jge
xor
inc
dec
mov
mov
mov
or
sub
mov
jle
and
or
xor
push
xor
out
rol
int
andl
lea
mov
in
pop
add
mov
jnp
movl
and
add
imul
jae
mov
repz
sub
mov
jg
outsb
imul
mov
pop
cmp
js
push
insb
mov
ljmp
lcall
add
fisttpll
sub
sub
outsb
test
insl
pusha
push
out
dec
mov
in
sub
aam
subl
addr16
jb
fdivrl
mov
ret
aaa
inc
fstl
cwtl
fistpll
lods
loop
fdivrl
push
sbb
dec
insl
jl
test
xchg
call
punpckhdq
pop
outsl
pushf
jae
mov
xchg
into
std
leave
movsb
cltd
popf
sarl
mov
xor
dec
popf
lds
push
iret
inc
xchg
test
pop
mov
adc
and
adc
mov
std
aaa
push
cmp
push
popf
push
or
leave
push
push
adc
sub
movsl
add
insb
mov
sub
stos
add
inc
into
pop
fimuls
sti
mov
fbstp
push
cmp
dec
divb
xor
inc
hlt
sbb
es
in
push
dec
and
xor
inc
push
les
sahf
and
or
test
daa
or
sbb
movsb
shlb
lcall
testl
ss
push
dec
ljmp
mov
test
xor
out
mov
lea
inc
movsb
sarl
fcoms
dec
cmpb
push
lds
mov
mov
sti
jnp
adcb
js
jp
xchg
call
loopne
xchg
push
push
shlb
pop
dec
mov
dec
push
adc
mov
in
pop
std
and
xchg
in
jg
insl
stos
loop
sbb
loop
pop
inc
ss
arpl
out
cmp
adc
inc
icebp
push
daa
pop
mov
lods
sbb
cltd
les
or
out
xchg
popa
xlat
xor
test
push
jg
iret
dec
dec
int3
stos
test
xchg
mov
mull
jb
or
cmp
xchg
xchg
leave
jae
push
mov
ljmp
scas
push
and
or
pop
loop
movl
popf
adc
xchg
shl
jbe
insb
mov
test
daa
push
pop
movsb
daa
mov
inc
repz
push
mov
sbb
incb
sbb
imul
push
jae
je
jmp
popa
adc
sub
pop
scas
and
sbb
fucomp
cmp
xchg
dec
sub
cmp
pushw
outsl
stos
cmp
mov
mov
mov
hlt
decl
xor
out
push
jmp
pop
mov
add
or
mov
fsubrs
xchg
or
sbb
or
imul
dec
jmp
jno
push
test
nop
cmp
add
out
daa
imul
inc
repnz
addr16
jae
icebp
test
cmc
test
pop
jo,pt
test
sub
aad
push
pop
pop
adc
or
dec
mov
add
stos
mov
sbb
testb
dec
mov
add
scas
push
mov
xor
icebp
mov
dec
clc
sub
pmovmskb
fisttpl
test
push
test
sti
sub
ds
call
jbe
arpl
dec
popf
loope
dec
push
jmp
arpl
pop
sbb
mov
xchg
and
pop
and
cwtl
adc
mov
loopne
xor
imul
mov
pop
rcll
pusha
mov
and
pop
ds
cltd
xchg
int
lahf
jbe
xchg
jecxz
imul
jle
xchg
mov
or
push
xlat
push
aad
push
mov
push
int3
xchg
call
and
push
inc
fisubl
xor
gs
adc
inc
cld
inc
outsb
mov
test
dec
mov
jge
cmpsl
addr16
in
cli
mov
js
aam
int
in
sbb
xor
stc
dec
inc
dec
mov
cmpsb
adc
mov
aaa
jne
inc
mov
xor
and
bound
inc
cli
jb
jns
push
fstl
and
mov
adc
outsb
iret
jg
jo
pop
inc
or
cmpsb
push
add
imul
xchg
imul
inc
jb
and
pop
inc
sbb
cmp
xchg
xor
or
mov
push
in
add
pop
imull
or
ret
sub
cs
jl
loope
cmp
push
enter
in
scas
xchg
adc
push
gs
pop
mov
jno
in
push
pop
aas
fcmovnbe
inc
mov
cli
ret
mov
leave
cs
dec
pop
mov
or
dec
mov
fidivrl
and
adc
cmpsl
or
loope
cmp
popf
jae
xlat
test
mov
mov
in
arpl
sbb
mov
lret
mov
jnp
faddl
jnp
mov
pop
mov
pop
cltd
icebp
mov
out
push
pop
xlat
xor
mov
mov
xchg
mov
cmp
aas
cmpsb
mov
andl
push
in
mov
or
fisubrs
cmpsl
xchg
lock
loop
clc
aad
adc
lret
fstpl
repz
xchg
cli
nop
ds
test
call
popf
pop
insb
pop
loop
or
push
push
data16
fiaddl
sub
fldln2
cwtl
mov
mov
and
mov
call
int
dec
ret
pop
push
fsubrs
and
andl
cmpsb
jge
add
lahf
imulb
push
outsb
into
lea
icebp
jo
aam
fs
popf
mov
mov
arpl
cs
cmp
popa
lahf
and
add
xlat
pop
add
rcrb
xorl
cmpsl
aad
mov
outsl
leave
popa
in
inc
adc
dec
jbe
mov
mov
ljmp
pop
pop
idivl
push
push
push
fldt
adcl
sbb
and
les
and
testb
xchg
jge
jne
sbb
aaa
cmp
imul
xor
shrb
cli
fdivrs
xchg
push
jge
mov
imul
push
dec
andb
mov
and
cld
pop
sbb
xchg
xchg
fstps
xor
mov
dec
orb
out
fwait
jmp
lret
inc
push
jge
stos
leave
shl
cld
leave
xlat
push
repz
pop
mov
imul
xchg
push
inc
loope
and
xchg
xchg
jbe
in
cmp
cmpsb
cmp
inc
movsb
mov
push
hlt
cmc
lds
push
daa
push
jg
xorb
arpl
movsb
jle
dec
push
or
shlb
add
sbb
daa
sbb
in
push
stc
adc
jns
ret
in
pop
pop
rol
jp
or
stos
mov
push
pop
jge
fdivrp
out
or
push
cmc
add
movsl
mov
xchg
popf
out
jbe
or
ss
rorl
jne
fsubr
jg
repnz
pop
dec
popf
mov
hlt
into
addr16
add
int
cmpsb
mov
jns
dec
out
push
lret
hlt
jl
es
mov
out
addb
test
ja
ljmp
xor
roll
data16
xor
mov
cmpsb
adc
adc
jne
fs
or
outsl
into
xor
jmp
pop
leave
lods
fadds
pop
data16
xor
inc
ds
int
xchg
pusha
cmpsl
fld
pop
xor
jmp
xchg
dec
es
mov
cmp
aaa
jl
add
cmc
mov
movsl
jle
test
popa
mov
mov
sbb
mov
mov
adc
sub
pop
in
mov
or
movsb
mov
adc
js
adc
push
jns
or
loop
push
push
ss
test
mov
sbb
xchg
in
adc
out
adc
les
lret
push
cmp
lds
popl
xchg
bound
setbe
rclb
dec
clc
inc
sub
or
mov
push
mov
push
and
mov
sti
sub
in
sbb
dec
icebp
xor
daa
jbe
mov
out
jp
xchg
push
dec
aad
add
mov
jg
inc
sbb
cmp
xor
mov
aas
ficompl
mov
ret
test
gs
fistpll
repz
dec
call
stos
sbb
filds
sarl
subb
lret
lea
push
push
orb
jo
fists
lret
push
or
pop
pavgb
andb
aam
lcall
mov
test
push
loopne
dec
cmp
jmp
mov
pop
mov
fwait
subl
fnstenv
mov
or
ja
and
push
rcrl
lea
mov
mov
rcrl
xchg
ret
push
sub
xchg
loop
pop
mov
lock
jecxz
pxor
sub
scas
push
push
and
scas
mov
jmp
aas
pop
movsb
imul
jae
ss
std
lret
jg
dec
in
gs
or
and
pop
nop
jl
lods
fsubrl
gs
cmp
cmpl
xchg
cmc
in
ds
lret
push
test
fisubrs
mov
adc
mov
mov
das
outsl
jnp
data16
aad
lea
cmp
pop
cltd
pop
pop
mov
push
jmp
push
dec
adc
xor
sub
jns
lea
pop
xchg
add
push
dec
xchg
scas
pop
or
mov
lcall
dec
xchg
mov
xor
insl
add
mov
mov
inc
xor
and
iret
pop
test
cmp
sarb
add
cmp
add
sar
or
pop
cmp
pop
pop
test
jecxz
or
jbe
mov
hlt
pop
add
push
fstl
xchg
mov
adc
enter
stos
dec
adc
mov
inc
mov
scas
sarb
pop
and
sahf
in
xor
sub
movsl
push
ss
mov
jmp
pop
adc
jp
xchg
push
mov
push
stos
lods
imul
mov
pop
iret
cmp
mov
adc
and
and
imul
mov
sbb
jno
mov
test
mov
jno
cli
mov
or
push
stos
hlt
subl
dec
hlt
neg
xchg
mov
mov
pop
aas
hlt
std
out
sbb
adc
and
popa
pop
push
cltd
push
jp
icebp
xchg
bound
inc
sbb
int
add
add
mov
fidivrs
in
fistpl
nop
int3
rorb
push
sbb
jg
addr16
pop
sbb
fnsave
cmp
lahf
aas
xor
mov
mov
mov
sub
int
loope
loope
mov
mov
cli
xchg
cmpsl
sub
das
mov
jp
sub
jbe
inc
outsb
jle
jge
sbb
dec
int3
nop
ret
jnp
loop
xchg
clc
adc
sti
or
popf
mov
lahf
mov
or
adc
pop
call
or
mov
xchg
xor
pop
or
stc
sbb
xor
mov
out
mov
xchg
pop
fisubrs
add
mov
in
sbb
or
out
jg
push
leave
fstps
repz
dec
aad
sub
mov
pop
add
loopne
fistpll
and
shl
jns
notl
repnz
and
pop
cmp
cmovge
add
push
sbb
loopne
lcall
adc
loop
fnsave
inc
test
dec
jb
dec
maskmovq
divl
mov
cs
push
pusha
scas
enter
and
notl
and
xlat
test
ficoml
fdivs
faddl
sbb
cli
bound
xlat
sbb
adc
into
imul
sahf
sub
push
test
decb
jmp
mov
dec
decl
push
add
fstl
mov
mov
mov
sti
icebp
rorl
jb
lahf
add
mov
pushf
jb
cwtl
sub
dec
test
pusha
sahf
ret
cwtl
inc
leave
lahf
lods
scas
inc
sbb
int
in
subl
and
out
mov
call
fcomps
pusha
cs
std
push
or
outsb
jnp
cmp
sub
mov
cs
inc
add
mov
ret
stc
and
fsubrp
cmp
test
ret
and
mov
in
testb
inc
popa
xor
jbe
sahf
lds
aaa
pusha
das
push
xor
push
mov
xchg
jmp
movsb
push
mov
aaa
scas
fwait
stos
and
add
leavew
mov
or
pop
jne
push
outsl
mov
pusha
rcll
in
cmp
mov
mov
push
divl
inc
je
pop
div
lret
pop
push
jae
xorb
mov
mov
xchg
les
lds
cmp
add
sub
rorl
jne
jno
pop
jns
mov
adc
cltd
rorl
push
je
push
outsl
mov
push
mov
in
mov
add
out
lods
dec
add
lcall
frstpm(287
movsl
repz
mov
mov
jo
push
outsb
test
pop
jo
cmp
jmp
daa
mov
cmp
lods
mov
notl
or
cmpsl
mov
cwtl
pop
pusha
adc
lret
in
sbb
pop
xchg
arpl
arpl
mov
mov
adc
mov
mov
jg
sbb
fwait
sub
std
inc
outsb
cmp
push
sahf
inc
xchg
jns
xchg
dec
sbb
cmp
cs
insl
cmpsl
fadds
inc
clc
inc
addr16
jne
jp
dec
pop
inc
sbb
lods
adc
sub
mov
aam
xchg
lods
gs
dec
jo
dec
paddw
dec
pop
dec
pop
lock
cmp
xchg
push
pop
daa
insl
dec
sub
fmul
xchg
fwait
add
push
das
inc
jmp
adc
ret
adcb
xor
adc
dec
mov
xlat
mov
mov
add
dec
inc
xor
mov
adc
aas
pop
insb
pusha
jl
aad
pop
scas
lret
mov
cli
jle
push
fnstsw
fstl
mull
xchg
testb
mov
scas
cs
jp
sub
xor
jecxz
lea
sbb
jg
add
sbb
and
fs
bound
push
js
inc
push
addb
sbb
movaps
sbb
adc
jno
loopne
push
cmp
mov
js
in
push
cmp
xor
push
mov
adc
insl
jmp
int
pop
repz
in
inc
in
rclb
cltd
rorl
add
dec
divl
test
rcrb
xchg
stos
lds
pusha
jbe
push
jp
adc
in
jge
cmp
pop
add
mov
les
cmp
adc
sbb
sbb
stos
loop
mov
jg
xchg
repz
mov
fs
std
movsl
movl
loope
mov
aas
inc
out
sub
and
push
movsl
ja
push
inc
into
sbb
repnz
add
repz
add
imul
sbb
test
clc
ficoms
pop
idivl
inc
sub
fstps
fcoml
imul
cmp
jb
mov
pop
add
mov
xor
pop
cmp
xchg
in
dec
xchg
dec
xchg
or
movsb
int3
lret
testb
mov
sbb
repnz
testl
shrl
cmp
pop
mov
mov
xchg
gs
pop
dec
add
jne
lods
lea
mov
jb
sub
test
scas
sbb
xor
insb
dec
movsb
mov
cmc
sahf
fsubs
dec
ss
mov
std
sub
inc
adc
mov
jbe
ja
adc
pop
mov
scas
xchg
add
push
in
notb
lods
out
addr16
jg
mov
ds
call
sahf
dec
or
or
std
icebp
cmpl
shrl
and
hlt
xor
xchg
mov
fsts
iret
ja
sti
or
sub
pusha
and
pop
and
sbb
shl
mov
mov
xchg
push
nop
je
inc
cltd
inc
sub
popf
fsubs
and
add
les
mov
not
jns
pop
subl
xor
pop
call
lock
sub
mov
adc
jo
idivl
jge
jecxz
lea
sbb
iret
push
int
add
int
and
movl
mov
js
mov
jg
inc
and
xchg
fidivrs
movsb
mov
imul
pop
mov
out
arpl
insl
repz
fisttps
es
test
rcrb
mov
ss
xchg
pop
movsb
insl
es
and
lahf
xchg
xor
xor
dec
hlt
push
jl
jp
sbb
cmp
dec
or
dec
out
jno
push
sub
shlb
or
cmpsl
cs
icebp
pop
mov
xchg
hlt
xlat
push
nop
fs
cmp
push
push
pusha
mov
xor
mov
sub
shlb
pop
inc
cwtl
test
push
fldcw
cmp
outsl
fwait
cwtl
movsb
arpl
push
aas
cmc
mov
pop
cmp
in
sbb
imul
xor
dec
mov
sahf
sub
jg
int3
lock
popa
stos
xchg
cltd
mov
inc
ss
add
cmpsb
inc
int3
fmuls
mov
pusha
fldcw
mov
andb
lret
sbb
jnp
inc
sbb
lods
pop
jmp
mov
enter
lret
mov
inc
dec
or
xor
xchg
dec
cmp
addr16
cwtl
and
hlt
popa
sahf
xor
jmp
imul
lds
mov
jo
outsl
in
std
fwait
cmp
mov
xchg
sbb
fs
dec
dec
xchg
xchg
push
je
pop
mov
push
repz
pushf
inc
and
lcall
cli
movsb
push
or
pop
or
leave
cli
fstl
int
scas
test
in
mov
scas
push
lcall
pop
jmp
mov
adc
out
jge
sub
dec
lahf
mov
aad
test
in
xchg
out
cmp
insl
aaa
pop
hlt
add
mov
adcl
mov
xor
sbb
xor
fsub
sbb
mov
jle
cmp
fsubs
addr16
mov
pop
and
ret
ljmp
test
nop
mov
add
mov
xor
sbb
movsb
jl
lea
out
fmull
inc
push
jne
mov
xchg
jns
push
sub
call
adc
mov
sbb
scas
call
xchg
cvttps2pi
mov
shlb
mov
mov
mov
shrb
cltd
cld
xchg
or
pop
loope
call
sbb
movsb
xchg
out
lods
mov
xor
xor
xlat
mov
inc
adc
jno
loop
idivl
dec
inc
push
popf
outsl
or
imul
mov
cmp
mov
and
sbbb
shr
inc
shll
adc
and
int
sbb
mov
mov
pop
and
inc
fimuls
sbb
fsts
in
ror
sub
xchg
mov
test
pop
test
and
das
or
lea
dec
popa
bound
pushf
sub
dec
testl
mov
ljmp
xchg
lcall
mov
dec
add
popa
and
dec
repz
ja
imul
jl
ss
lcall
ficomps
xor
dec
shlb
les
sub
clc
nop
xor
cmpsl
or
adc
dec
fcmovb
add
or
xlat
out
jnp
and
sbb
ds
push
adc
clc
test
lcall
sbb
dec
mov
xlat
mov
filds
mov
std
ret
int3
sbb
loope
fstpt
clc
jae
mov
xor
lds
adc
pushf
insl
stos
sub
add
pop
popa
fnsave
mov
push
inc
cmpsb
mov
out
xchg
xor
sarl
mov
cld
dec
adc
mov
movsl
and
jge
aad
inc
adc
test
ret
sbb
pop
inc
jb
jecxz
mov
stc
stos
in
jmp
mov
inc
sub
fadds
and
xor
or
sub
je
mov
push
mov
inc
test
mov
mov
adc
xchg
add
call
addr16
or
xor
cmp
nop
aam
sbb
mov
test
mov
movsl
repz
movsl
fistl
lret
jne
push
sbb
out
push
dec
ret
mov
mov
mov
out
mov
mov
jns
fldcw
mov
vpcmpgtd
jo
dec
je
movsb
insl
push
lret
call
add
in
fadd
xchg
and
mov
adc
mov
jb
daa
sub
mov
mov
cmpsl
jg
adc
popf
mov
and
mov
mov
mov
inc
in
int3
xor
addr16
pop
push
into
mov
push
adc
or
loop
inc
jl
and
sbb
fistpl
clc
mov
mov
pop
scas
fs
adc
pop
ja
cli
pop
mov
xchg
jae
aam
adc
imulb
jnp
fcoms
adc
fildll
sub
es
repz
cltd
jne
enter
in
jmp
cmp
sbb
dec
adc
push
roll
dec
sub
lcall
xorl
mov
pop
fstpl
cmp
mov
lcall
popf
adc
in
mov
mov
lea
push
xchg
rolb
aam
inc
mov
cmp
mov
or
imul
into
add
jne
dec
nop
loope
mov
cmp
push
mov
mov
and
std
cs
rcl
mov
add
inc
add
push
jb
jmp
cli
pop
mov
dec
hlt
mov
jle
outsl
bound
cmpsb
jmp
lret
mov
mov
mov
lods
insb
push
push
iret
xchg
out
mov
mov
xchg
negb
push
cwtl
sbb
sub
shlb
mov
sub
xchg
cwtl
mov
sahf
xorb
mov
fsubr
or
push
sub
or
jbe
push
jbe
or
popa
mov
lret
xor
or
lds
and
lahf
out
xor
in
jo
and
incb
lret
mov
outsb
and
pop
lcall
call
push
jge
sbb
pusha
mov
ja
lock
mov
or
push
enter
sbbb
nop
xor
fsubs
aad
or
mov
add
mov
adc
mov
mov
nop
hlt
bound
mov
popa
icebp
outsb
ret
faddl
repnz
jnp
out
inc
mov
clc
out
inc
add
push
mov
lahf
fistpll
mov
adc
out
sbb
inc
shrl
cmp
jae
mov
rcrb
pop
scas
jbe
dec
and
mov
rcrb
dec
ficoml
xchg
repnz
jno
and
xor
adc
imul
fsubrs
pushf
outsl
popa
ljmp
int3
sbb
push
adc
hlt
or
jns
aam
rolb
push
push
cmp
or
xchg
aaa
mov
cmp
adc
outsl
aas
gs
xor
push
outsl
xor
or
cld
jb
sub
daa
fisttps
cmpsl
ret
fwait
insl
jge
push
outsb
jge
pop
cmp
jmp
and
push
lahf
jp
inc
js
and
sub
loope
jno
cmpsb
and
xchg
mov
int
dec
add
dec
adc
push
fnstenv
mov
int3
mov
sbb
lret
das
test
pop
ds
lret
ficompl
cld
inc
insb
fbstp
jmp
xor
aas
jge
push
adc
add
sti
dec
or
call
inc
push
insb
inc
and
sub
mov
addr16
imul
std
jp
ret
aad
sbb
cmp
test
jp
inc
pushf
ds
loopne
out
adc
pushf
jo
push
mov
inc
sahf
mov
adc
xrelease
or
mov
in
adc
fdivrl
dec
imull
lahf
inc
add
jmp
dec
subb
dec
dec
or
push
inc
pop
addl
icebp
sbb
jbe
xchg
popa
or
enter
or
imul
xchg
pop
dec
sbb
push
fidivrl
cmp
and
rcl
add
cwtl
mov
jo
xchg
push
shrb
cmp
inc
xor
and
and
adc
pop
push
repz
sub
mov
addr16
mov
dec
dec
xchg
inc
or
lahf
mov
in
cmp
bound
sub
pop
enter
pop
pop
xor
xor
jae
cmp
lds
lret
sahf
xchg
cmp
xchg
mov
out
inc
ss
mov
push
test
dec
and
imul
pop
xor
pop
mov
inc
mov
fwait
dec
mov
movsb
das
stos
std
dec
xor
test
imul
or
out
daa
je
dec
out
iret
xchg
pushf
xchg
out
out
nop
mov
push
loopne
and
sbb
lea
xlat
inc
xor
dec
push
push
pop
sbb
cmp
mov
stos
negl
pusha
mov
inc
incl
inc
cli
loopne
ljmp
jp
sbb
sahf
inc
dec
fsubrs
cmp
push
jecxz
inc
sbb
xlat
movsb
pop
mov
pop
out
or
adcl
xchg
movsb
bound
or
inc
sbb
pop
mov
enter
xor
cmp
mov
mov
stos
adc
xchg
lds
xchg
pop
xor
sbb
in
aas
fimull
sahf
xchg
in
std
adc
adc
popf
sbbl
cmp
mov
xchg
mov
movb
mov
repnz
sub
stos
ret
add
fidivs
xor
dec
ss
dec
xlat
mov
pop
sbb
popa
inc
aam
adc
cs
dec
xlat
xor
xchg
lahf
cmpsb
mov
shrw
addb
test
adc
stos
and
inc
xchg
cmp
cmp
lcall
mov
lret
iret
ret
aad
sbb
xchg
dec
dec
sahf
fucomp
xchg
shll
ljmp
xchg
add
cwtl
pop
or
cmp
mov
mov
out
hlt
cs
les
pop
notl
lods
mov
lahf
div
cwtl
std
mov
xchg
insb
jmp
movsb
inc
inc
ss
outsl
or
lret
lret
clc
mov
push
mov
fs
pop
lods
pusha
dec
dec
nop
lea
cld
lds
iret
sub
cmpsl
push
push
push
repz
inc
les
loope
test
sub
inc
pop
jmp
jno
lea
in
xlat
movsb
lods
stos
fidivrl
jge
adc
out
js
sbb
pop
arpl
xor
xchg
nop
and
sub
push
loop
add
mov
add
nop
repnz
xlat
insl
pusha
dec
mov
sbb
jae
fcmovne
push
movsb
aas
les
adc
in
test
cld
fs
cld
and
sbb
enter
dec
xchg
gs
cmp
lret
push
pop
aas
aad
ss
repz
andb
aad
mov
adc
jb,pn
jne
repz
adc
sub
push
fstpl
test
aaa
dec
pop
imul
xorl
pop
hlt
dec
inc
or
movsb
mov
mov
push
inc
pop
sub
adc
addr16
cld
ret
cltd
xchg
cmp
sbb
mov
and
sub
int
stos
sub
push
mov
adc
mov
je
push
cmp
xor
adc
jmp
out
dec
outsb
and
ror
push
and
inc
mov
std
inc
ret
sbb
fwait
push
sbb
icebp
mov
imulb
cmpb
mov
insb
fnstenv
cltd
cli
in
jg
cmpsl
popf
std
dec
adc
leave
movb
and
sti
inc
rep
push
dec
imul
shl
xchg
push
push
xchg
add
cld
in
inc
subb
inc
push
jp
loopne
inc
pushf
mov
out
pop
sub
dec
pop
gs
cmp
sub
jbe
adc
inc
call
cmp
ljmp
sbb
sbb
pop
push
and
movsl
push
xor
lcall
movsl
push
ljmp
jne
push
sub
sbb
notb
insl
cld
push
dec
sbb
mov
arpl
adc
das
pop
lods
sbb
ret
jo
sbb
mov
pop
ds
in
sub
out
push
pop
cmp
inc
jle
jle
insb
xchg
scas
inc
icebp
fs
cmp
iret
in
insl
movsl
add
notb
jbe
push
sub
and
lods
mov
ss
cmp
loop
adc
mov
xchg
push
and
popa
lods
or
in
inc
mov
lret
add
push
push
iret
mov
test
mov
into
jb
out
jecxz
popf
dec
dec
loope
mov
adc
stc
enter
lret
stc
mov
sub
jns
iret
inc
push
dec
sbb
adc
pop
pop
lret
fcmovne
mov
out
push
aam
mov
aaa
out
push
insl
push
mov
mov
add
add
pushf
arpl
js
dec
cmp
push
in
and
jmp
out
mov
push
leave
fnstenv
push
pop
push
sub
pop
adc
lock
add
repz
cmc
and
loopne
pop
movsl
jg
and
outsb
negb
imul
inc
roll
lret
pop
stos
dec
cld
les
push
scas
jp
aad
mov
pop
daa
lods
jmp
iret
test
daa
dec
stos
dec
movsb
icebp
shll
je
mov
repnz
rol
pop
jp
clc
lahf
aam
ds
and
decl
fcom
aad
divb
ret
repz
jo
sbb
js
xchg
mov
inc
lahf
jnp
add
push
add
fs
lcall
jle
lahf
push
out
pop
jb
scas
inc
push
and
or
inc
dec
dec
jo
add
cld
and
mov
packsswb
jmp
mov
cmpsl
ljmp
clc
push
pop
and
push
pop
out
stos
leave
pop
xlat
iret
mov
test
and
je
cmpsl
in
sbb
loope
in
mov
or
je
add
inc
lret
ljmp
push
aas
scas
adc
cmpsl
or
out
sti
stos
sbb
pop
in
pop
add
mov
sbb
fcoml
movsl
insl
push
lahf
clc
dec
and
int
loope
arpl
cmpsb
stc
mov
or
ss
vmovaps
sub
mov
test
das
mov
push
sub
out
test
pop
push
xchg
xor
inc
xchg
adc
ljmp
xchg
cmpsl
push
inc
inc
inc
pop
bound
push
xchg
inc
aaa
vhaddpd
scas
dec
lret
imul
mov
ljmp
dec
jns
ds
inc
loope
adc
add
xchg
jg
in
popf
cmpsl
fcompl
js
cltd
sbb
dec
jbe
jne,pn
xchg
mov
je
inc
into
ret
jecxz
jg
sbb
push
pop
and
xor
add
add
jo
ror
mov
push
in
enter
sub
test
xchg
mov
pop
mov
leave
int
add
cmp
mov
cmpsl
sub
sahf
loope
fmuls
test
das
cmp
shlb
loop
data16
dec
and
mov
sub
and
mov
add
imul
sub
bound
dec
aas
mov
sbb
jle
adc
add
push
mov
mov
xor
pop
lods
mov
popa
push
xchg
sbb
bound
pop
rolb
int3
ljmp
adc
or
dec
mov
sub
cld
push
mov
fs
or
je
mov
mov
xchg
out
inc
push
lret
popf
jne
fnstsw
fidivrl
jo
aas
cmp
xchg
mov
sbbb
mov
xchg
shrb
into
data16
test
sbb
adcl
mov
xor
lock
xor
push
xlat
mov
out
fs
rcrb
adc
jecxz
addb
les
push
cmpsl
fwait
pushf
mov
lods
shrb
shll
sbbb
or
and
fdivp
ljmp
mov
addr16
dec
sahf
xor
stc
adc
xor
fdivs
aaa
cmp
clc
inc
mov
outsl
mov
shrl
cmp
jge
arpl
adc
mov
cmp
mov
jle
lret
cmpsl
lea
mov
gs
fcoms
dec
arpl
lret
test
jbe
push
fs
rcrl
test
mov
and
xchg
sub
or
je
repnz
insb
pop
ljmp
cmp
sbb
inc
out
jne
xbegin
inc
ds
int
test
inc
orb
es
cltd
inc
push
or
cmpsl
inc
xor
adc
sbb
push
push
adc
test
fdivr
mov
pop
lods
loop
pop
sub
orl
inc
cwtl
xchg
out
xor
cmc
insl
jae
lds
loope
and
shr
xor
loop,pt
inc
lods
add
cmp
xchg
or
sbb
mov
jl
push
mov
xor
cmp
loopne
cmpsb
outsl
jb
jge
push
les
dec
imul
leave
out
mov
fnsave
pop
fisubl
cwtl
adc
test
push
fidivl
data16
mov
pminsw
iret
ficompl
mov
pop
pop
pop
rclb
fcoml
xchg
push
cmpsb
jbe
mov
icebp
sub
cld
lds
sub
out
idivb
aam
ss
sub
add
cmp
fdiv
mov
xor
add
sbb
cmp
pop
cmp
subl
flds
dec
sbb
mov
mov
lret
xor
lahf
push
pushf
jo
jb
test
push
mov
sbb
mov
pop
pop
stos
inc
mov
addb
add
aad
pushf
jno
iret
fcoms
rorb
daa
jg
ficoml
mov
shlb
nop
into
pusha
aam
mov
pop
ret
popa
movsl
scas
dec
mov
ret
jecxz
movsb
mov
mov
mov
jno
in
dec
pop
push
or
fnstenv
in
dec
imul
mov
cmpb
lret
fs
aaa
mov
jno
std
repnz
inc
stos
aad
cwtl
clts
popa
mov
cpuid
dec
and
xor
or
or
mov
sbb
xchg
aaa
mov
cmp
mov
aas
cs
jnp
daa
in
jae
mov
call
xchg
aam
pop
push
jo
imul
jnp
or
testb
jno
adc
pop
adc
xor
icebp
in
call
mov
sbb
mov
int3
xchg
fsts
loop
sahf
pop
call
mov
inc
jge
movsb
ret
mov
sub
mov
xchg
out
addr16
mov
cmpsb
and
or
iret
cmp
gs
pop
inc
xchg
testl
in
pop
cmp
add
and
ds
xor
push
fisubrs
lds
or
mov
add
inc
fstpt
add
sahf
and
ja
orb
xchg
push
jo
outsl
xchg
sub
jae
mov
ret
sub
adc
in
out
sub
int
movsb
dec
out
iret
jge
xor
or
pop
shl
call
cld
mov
add
ret
push
adc
push
mov
cmp
lods
add
mov
pop
test
adc
cmpsl
js
jmp
jno
adc
scas
sub
xchg
dec
jno
call
stc
imul
cmp
nop
lcall
mov
icebp
push
in
xor
mov
pop
xchg
pop
xor
aas
shll
leave
test
inc
ja
std
out
imul
mov
mov
mov
push
or
ret
mov
movsl
push
imul
sub
loop
shrb
sbb
in
mov
dec
jmp
icebp
inc
test
dec
int3
add
inc
sub
ret
lret
dec
stos
lock
clc
sbb
lds
mov
inc
pushf
push
andl
and
stc
pop
lret
bound
cmc
jno
xor
fdivrs
mov
sub
loopne
lahf
dec
xor
lret
jp
and
int3
mov
arpl
xchg
add
shlb
popa
cltd
xchg
xor
mov
or
fnstcw
adc
test
push
and
popa
ret
stos
loop
and
js
jl
pop
mov
inc
nop
xchg
jmp
mov
xchg
or
xchg
enter
sarl
addl
push
mov
fstpl
dec
jl
add
sti
and
push
insb
les
and
adcb
pusha
dec
xor
push
cs
sub
in
insb
jns
loope
cmp
push
fiadds
push
dec
jns,pn
std
or
fcomp
outsl
or
test
xor
enter
loope
dec
mov
mov
outsl
mov
ss
inc
incl
or
test
add
daa
daa
sbb
stos
shll
mov
clc
pushf
adcl
repz
scas
imul
repnz
lahf
inc
and
iret
sahf
or
inc
sbb
outsb
xchg
pop
fisttpll
loop
push
cmpsl
aam
dec
call
jmp
push
cmp
pop
cmp
js
icebp
je
jmp
repz
loope
mov
jecxz
fcompl
mov
xchg
xor
sub
stos
jl
shll
movsl
jl
push
int3
loop
sbb
xorl
mov
or
push
lods
fwait
mov
dec
sti
out
adcl
mov
aaa
mov
mov
inc
mov
mov
icebp
mov
add
fistpl
add
or
push
xchg
push
mov
xor
push
rcrl
scas
sbb
insl
fwait
pop
mov
mov
mov
xchg
push
push
clc
incb
or
mov
daa
mov
or
mov
rcrb
mov
lods
ljmp
scas
pop
and
roll
fisubrl
cld
mov
inc
mov
mov
dec
iretw
push
sbb
and
out
mov
push
jae
add
cld
lret
pushf
dec
test
dec
popf
push
or
inc
pushl
add
xor
stos
adc
outsb
fidivl
in
loop
pop
loope
dec
lock
sub
cmp
jb
scas
cmp
aas
enter
mov
mov
adc
push
sbb
xor
xchg
test
lret
lcall
push
pop
jmp
mov
mov
shll
in
ja
jae
jmp
stos
mov
inc
lret
pop
mov
pushf
cmc
enter
mov
icebp
fistpl
ljmp
mov
and
lock
jns
and
jb
fldl
push
dec
jecxz
ss
add
or
lret
out
sbb
inc
push
loopne
sub
mov
or
cmp
and
push
inc
ret
jg
mov
aam
in
testl
dec
sub
js
lods
jnp
push
std
pop
adc
and
insb
data16
dec
xchg
repz
xor
les
mov
or
lcall
lods
fnstcw
cs
mov
cltd
mov
cmp
adc
sbbl
enter
in
push
dec
mov
add
outsl
rolb
cmp
cmp
and
xor
enter
ror
lock
mov
xor
push
sub
bound
mov
adc
and
mov
sar
stos
push
inc
jecxz
rcl
stos
push
nop
and
dec
and
xor
jmp
cmp
ror
std
dec
fucom
cmp
jne
mov
push
inc
pop
lock
cmpsl
mov
or
loopne
push
push
adc
jae
lret
pusha
jp
push
pop
add
sub
repnz
rolb
ftst
xor
popl
dec
inc
and
popf
ds
out
mov
jl
add
jbe
cmp
mov
jnp
push
jmp
lret
cld
rolb
fdivr
push
sub
loope
pushf
scas
in
lock
loope
orl
cmp
inc
outsl
jp
dec
into
pop
cld
mov
adc
jo
push
scas
dec
fwait
in
les
cmp
in
dec
add
push
mov
dec
mov
sub
enter
xchg
jo
xorb
and
mov
mov
cld
sbb
mov
add
inc
sbb
outsl
fwait
mov
cmp
rorb
aas
mov
ss
lret
sbb
or
jo
xchg
sub
ret
out
insb
cli
pop
enterw
sub
sbb
dec
sbb
pop
sub
add
divl
cmp
out
dec
leave
in
sub
cmp
dec
ja
movntq
out
jb
loope
out
jae
jmp
mov
cmp
arpl
or
inc
jg
divl
pop
jl
push
ret
fldcw
cmc
or
and
clc
or
sub
mov
cltd
inc
sbb
lahf
test
ror
cmp
adc
mov
adc
lret
and
fwait
lahf
push
pusha
push
lods
pop
lea
xchg
lds
int3
adc
pop
jne
inc
jmp
int3
mov
mov
push
mov
cltd
pop
push
jmp
jns
dec
xor
xchg
xlat
and
sti
shrl
loopne
and
stos
outsb
push
int3
ret
xchg
mov
and
jg
neg
stc
or
gs
push
mov
outsl
mov
mov
addr16
shr
scas
subl
pushf
mov
and
adc
out
mov
sahf
dec
in
hlt
je
lea
andl
iret
sahf
leave
scas
cmpb
loopne
pop
cmpb
stos
or
je
pop
mov
and
daa
data16
scas
xor
jle
mov
mov
fnsave
lahf
subl
mov
sub
dec
fists
xor
pop
stos
test
rcl
inc
mov
pop
jp
inc
jb
pop
adc
in
cmp
les
inc
nop
insl
jle
jp
xchg
and
sarb
cmp
sahf
push
jge
xchg
andb
out
push
sub
pop
xor
push
sub
out
dec
inc
dec
dec
mov
fcmove
pop
gs
aas
sub
push
addb
pop
mov
lahf
xor
cmp
loopne
jle
bound
cwtl
ja
mov
dec
inc
push
loope
jne
popa
and
loopne
cmpsl
jecxz
pop
rcrl
sub
mov
cltd
lcall
out
out
push
std
cmc
cs
test
cmp
add
sub
sub
fimull
cli
xor
scas
sbb
pop
or
loop
js
pop
in
mov
lods
push
andl
fldt
dec
push
jecxz
je
jb
mov
aas
inc
call
cwtl
push
cwtl
xor
mov
adc
jno
xchg
dec
inc
adc
shld
out
enter
jmp
xchg
inc
mov
adc
and
push
shlb
push
sbb
fiadds
test
mov
add
dec
rorl
jnp
mov
cmp
lcall
pop
add
or
cmpsl
inc
lods
mov
push
stos
xor
pop
dec
iret
sahf
loopne
scas
xchg
xchg
jne
jnp
mov
inc
mov
mov
cmp
xchg
xor
sbb
mov
scas
inc
dec
and
xchg
and
shr
mov
mov
jns
adc
outsl
repnz
push
pop
push
stos
sbb
pop
test
outsl
pop
outsl
jb
je
addr16
mov
dec
sub
lahf
adc
dec
xchg
push
xor
xor
pop
cld
mov
cmpsb
rolb
sub
aad
ret
pusha
divl
mov
sbb
push
mov
cmpsl
xor
jb
pop
sub
loope,pt
xor
xchg
rclb
mov
mov
adc
repnz
jnp
xchg
rcl
dec
mov
mov
xor
cmp
push
sbb
ljmp
stos
leave
jl
push
jo
mov
lods
lea
mov
imul
mov
mov
cltd
inc
add
adc
mov
add
push
push
iret
mov
sti
ret
mov
lret
or
in
test
fcmovbe
pop
daa
outsb
push
inc
fnsave
push
or
mov
hlt
jl
in
call
dec
lret
les
push
and
lret
or
mov
testl
and
cwtl
xor
aam
test
mov
or
decb
cmp
jns
inc
pop
les
out
or
daa
movsl
inc
xor
in
cmpsl
movsb
and
fnsave
sbb
xchg
aaa
adc
lods
pushf
sti
subb
std
aad
adc
push
jnp
arpl
xor
rcrb
dec
rol
inc
scas
lea
push
adc
jo
xchg
mov
push
lods
dec
or
test
lock
dec
jo
call
hlt
and
push
sti
out
push
sub
andl
adc
cmp
imul
pop
adc
lahf
mov
fbstp
out
xchg
inc
mov
pop
mov
and
jl
lods
fdiv
mov
pop
jne
cmp
push
out
lret
inc
imul
js
imul
shll
jecxz
dec
xor
outsb
inc
in
je
xor
or
xchg
aad
icebp
dec
sbb
push
movsl
xlat
mov
lock
enter
cltd
out
fdivl
jp
xlat
repz
mov
push
or
repz
rcll
mov
jle
xchg
jns
clc
out
orb
mov
fcoms
int3
mov
mov
mov
inc
mov
pushf
sbb
or
gs
cmp
popf
mov
bound
jle
mov
shl
sub
push
sbb
push
es
movsb
adc
push
aam
in
pop
aas
push
imul
outsb
cmpsl
fucomi
fldcw
jle
fcoml
mov
dec
inc
test
xor
dec
jae
sbb
fldcw
and
mov
fcomps
sub
test
dec
js
xlat
mov
repnz
mov
fwait
int
xchg
fsubrs
fildl
mov
xor
loope
movsl
aas
mov
jecxz
in
or
into
ret
push
jae
pop
hlt
push
sbb
jg
pop
insb
cmp
cltd
xor
push
pop
aas
mov
xchg
pushf
cmp
ret
mov
aad
pop
addl
test
push
je
fwait
femms
sub
aas
pop
test
sbb
lahf
popf
xchg
fldt
mov
es
sbb
mov
test
add
std
daa
out
fldl
dec
jecxz
out
fcoms
loope
mov
aam
push
ljmp
test
push
pop
mov
mov
call
fs
jle
hlt
jl
mov
jbe
adc
inc
inc
loope
shll
xlat
jecxz
xchg
sbb
sbb
nop
sub
iret
xor
ffreep
div
mov
jno
divl
icebp
mov
out
mov
loopne
cld
nop
cltd
pop
add
mov
incl
xchg
jno
shlb
nop
je
ret
pop
js
jecxz
insb
push
inc
fbld
add
aas
int
pushf
sbb
out
test
ja
pushf
insl
dec
int3
adc
sub
and
push
out
aad
jp
mov
dec
add
rcrl
jmp
in
sbbl
nop
js
in
sub
iret
call
xchg
ja
adc
pop
sbb
add
push
cs
add
scas
fstps
popl
inc
sub
jbe
lock
fdivrp
mov
test
sub
and
sarb
lds
mov
rorb
fmuls
dec
int
cmp
mov
xchg
insl
insb
push
xlat
cmp
sarb
jne
inc
into
ja
mov
dec
mov
or
mov
cmpsb
insb
adc
xor
stc
mov
pop
mov
int3
adc
mov
stc
cmc
xchg
in
push
ds
lods
dec
cmp
add
xchg
mov
xchg
xor
xchg
xor
dec
mov
ljmp
fldcw
sbb
lea
mov
cmpl
xchg
mov
mov
popf
leave
xchg
rorb
mov
sbb
push
lods
cmp
mov
sbb
aam
aaa
mov
sub
dec
in
jne
mov
or
adc
mov
push
add
cmp
clc
pushf
ljmp
inc
push
mov
inc
adc
dec
call
jo
pop
inc
cltd
mov
jmp
adc
icebp
dec
push
nop
push
mov
test
mov
and
into
push
mov
mov
or
sbb
pushf
ljmp
jns
xorb
cmpsl
es
ljmp
jae
adc
mov
test
imul
lret
bound
movsb
out
mov
shlb
pop
daa
bnd
mov
pop
es
add
clc
repnz
mov
sub
fs
test
xor
shrb
sbb
into
sbb
and
roll
leave
inc
outsb
sub
mov
sbb
dec
fcompl
mov
fcomps
sarb
movl
pop
cmp
das
cmp
add
stos
scas
out
mov
js
ds
loope
pop
xor
dec
push
insb
jp
lods
cli
pop
sbb
sub
adc
sub
stc
push
psraw
movsl
nop
sbb
xchg
add
daa
ficoms
in
dec
sub
mov
mov
add
mov
or
push
fsqrt
or
loopne
leave
jp
jp
inc
mulb
xor
or
sti
aam
pushf
rorb
shrb
add
and
out
bnd
imulb
dec
push
cmp
xchg
mov
xchg
lahf
push
scas
iret
push
xchg
es
aam
mov
imul
jge
mov
popf
xchg
mov
xlat
mov
xor
nop
out
cmpsl
cmp
pop
jl
les
out
push
cmpsl
adc
sub
inc
call
imul
fimuls
inc
sbb
pop
pop
mov
adc
lret
in
rorb
mov
adc
mov
dec
xor
imul
add
or
mov
scas
cmpsl
dec
imul
int3
mov
push
mov
popf
mov
mov
loope
dec
mov
movsb
and
icebp
add
jb
lahf
jmp
shrb
ja
bound
nop
out
dec
out
aaa
dec
stc
test
push
sahf
lds
add
inc
mov
stos
lock
fsubr
push
sti
shll
mov
jb
int
and
mov
lcall
push
test
cmpsl
arpl
out
pop
into
dec
xor
xchg
mov
sub
inc
popa
sub
mov
leave
out
lods
mov
mov
push
mov
push
sbb
sub
sub
pushf
add
and
xchg
or
jb
mov
mov
test
pop
sub
or
push
xchg
push
mov
xchg
sbb
icebp
push
lods
les
xchg
xchg
pop
std
mov
in
inc
push
prefetcht1
mov
lds
out
jne
cmc
movlps
sbb
nop
clc
in
jle
lahf
pop
fs
cli
mov
scas
sub
repnz
cmpsl
mov
xor
outsb
or
xor
rol
pop
xor
nop
bound
fsubrs
mov
popa
add
lret
fbstp
or
fisttps
add
rol
push
mov
cltd
test
je
sbb
jl
fiaddl
xchg
hlt
push
into
or
push
repz
in
mov
movsb
repz
dec
adc
xchg
roll
mov
mov
dec
pop
jnp
mov
dec
mov
mov
lcall
in
fxch
adc
inc
xchg
inc
cmp
int3
out
out
sub
mov
insb
je
sub
loopne
pop
into
mov
bound
inc
sar
fsubs
mov
or
test
fs
imul
vhaddpd
movsb
jg
aas
xchg
fwait
xor
pusha
shrb
sbb
and
fwait
push
mov
ja
inc
adc
and
push
sbb
pop
test
pop
dec
fcmove
imul
inc
int
into
data16
sbb
lret
ss
out
in
scas
push
add
loope
bound
adc
cs
lret
mov
sub
jb
fisttps
sub
movsl
xlat
popf
ret
cmp
sub
in
inc
fldt
mov
popa
cli
jbe
dec
popa
shlb
or
shrb
cmpsb
push
xchg
gs
fidivrl
pop
mov
push
xchg
cmc
loopne
int3
movsb
mov
add
js
adc
jecxz
mov
in
out
add
mov
xchg
add
loop
sbb
pop
outsl
fldcw
adc
clc
cwtl
sub
adc
outsl
adc
mov
jo
and
js
lahf
mov
int3
xor
push
out
out
pop
mov
push
mov
push
not
push
push
fldcw
lret
and
push
pop
icebp
lahf
cmp
in
and
lds
inc
cmp
push
movsl
out
push
adc
idivl
cltd
sti
jp
int
ss
or
jno
inc
xor
mov
test
sbb
xor
mov
mov
jle
or
loope
jle
out
out
int
xchg
ret
sbb
mov
mov
dec
add
jg
ja
repz
scas
int
rorb
xlat
xorb
dec
add
into
shr
movsl
lret
mov
jge
outsb
xor
loop
incl
push
js
pop
push
push
sbb
mov
cmp
ss
ja
pop
cld
mov
lock
inc
scas
push
es
outsb
out
es
add
jne
outsb
pop
mov
pusha
imul
sub
int3
xchg
icebp
lods
je
or
test
nop
hlt
lcall
inc
pop
orl
mov
pop
flds
jp
in
inc
inc
cli
in
pop
pop
xlat
fisttpl
mov
in
push
and
insl
cmpsl
loop
movaps
fistpl
clc
mov
rcrl
outsl
inc
mov
call
movsb
and
popf
and
popa
pop
xlat
add
xchg
mov
shlb
cmp
bound
xor
cmp
cld
push
lock
add
mull
push
or
sbb
inc
sbb
sbb
lahf
adc
testl
test
cwtl
push
jbe
mov
dec
cmc
dec
fwait
out
or
and
push
loop
mov
in
sub
popa
jp
addl
scas
and
mov
hlt
fsubl
stc
sbb
sbb
jg
in
jecxz
cmp
jecxz
pop
sbb
mov
push
inc
mov
faddp
jns
inc
cmc
mov
addr16
cltd
push
pop
jmp
mov
cltd
push
fisttpl
out
mov
xchg
or
fld
pop
divb
xor
xchg
adc
xchg
arpl
push
stos
ja
dec
jg
out
pop
xchg
aad
in
lret
out
aad
push
repnz
mov
or
aam
dec
mov
xor
ja
es
adc
lcall
inc
mov
fiaddl
lcall
mov
pop
mov
push
lret
repz
loop
fwait
xor
cmpsl
inc
int
mov
enter
xchg
mov
xlat
test
dec
or
outsb
test
and
dec
jno
in
loope
fs
or
mov
sti
es
mov
das
xor
xor
ljmp
cmpsb
movsl
ds
out
sbb
nop
into
loopne
test
stos
not
outsb
or
pop
divb
xchg
pop
popf
push
js
cli
repnz
xchg
xor
rcrw
xchg
out
shl
xchg
xor
xchg
jns
push
pop
mov
jns
fcompl
push
cmp
inc
arpl
ret
cld
in
nop
pminsw
adc
pop
leave
mov
aaa
pop
mov
loope
loopne
aaa
scas
bound
or
sub
push
les
jno
lret
in
rcrb
mov
sub
lea
mov
or
mov
lret
rcrl
sub
sub
dec
ds
or
xlat
jbe
ret
fstpt
and
sub
xor
divb
or
lret
nop
and
jo
jge
call
adc
pop
or
pop
cld
add
mov
mov
out
cmp
aas
in
adc
jge
mov
adcl
and
add
xchg
shrl
cld
push
lds
inc
and
sbb
lret
mov
pop
pusha
test
aad
jge
pop
in
mov
lds
loop
repz
mov
xlat
push
cmp
rcrl
cltd
movsl
outsl
call
jno
sub
fs
mov
sub
subb
jge
lret
std
mov
pop
pushf
xor
fwait
cmp
inc
scas
mov
inc
cmpsb
std
nop
pop
sbb
xchg
cmp
pop
dec
sub
or
dec
ret
sbb
inc
lcall
adc
push
ljmp
and
aaa
or
cmp
inc
cmp
and
fadds
mov
jbe
mov
jmp
push
test
idiv
sbb
repnz
push
sub
jmp
aam
ljmp
pop
dec
and
lds
adc
aas
mov
inc
into
dec
inc
jnp
bound
pop
or
int
icebp
mov
and
shl
gs
jns
enter
jne
mov
popa
push
repnz
and
jno
push
adc
mov
daa
add
pusha
mov
sbb
mov
and
pop
maskmovq
mull
arpl
out
adc
mov
out
fidivl
jmp
dec
cmpsl
lcall
sbb
movsl
jb
mov
and
sub
adc
fs
cmpsb
sti
loopne
push
push
push
rcl
jl
pop
push
mov
and
cld
mov
testb
arpl
loopne
xor
pop
sub
cli
rorb
flds
mov
mov
fcomps
mov
data16
ficoml
insl
inc
and
mov
mov
dec
rcr
adc
lds
add
es
dec
in
clc
or
std
das
mov
adc
iret
out
sbb
or
adc
jmp
dec
test
cmp
clc
xchg
jb
and
xlat
rorb
ljmp
mov
mov
idivl
sti
dec
mov
sub
push
push
aas
push
mov
jecxz
pop
push
push
adc
cmc
xor
daa
rclb
jae
adc
or
mov
cwtl
repnz
mov
push
adc
jp
call
cwtl
lds
sub
inc
and
sub
mov
std
inc
mov
pop
xchg
out
nop
inc
outsb
mov
das
psrad
xchg
lods
mov
sti
cld
jp
sbb
lea
fcmovb
xchg
vpmacsdqh
idiv
repnz
imulb
mov
stos
dec
mov
xchg
inc
push
sbb
loop
stos
rcl
in
jl
pop
xor
aaa
or
test
repz
cmp
jg
arpl
add
cmpsb
push
mov
pop
jmp
popa
scas
push
mov
adc
aad
loopne
push
mov
pushf
mov
inc
xor
scas
inc
add
std
xchg
ljmp
lahf
push
lea
push
cwtl
pop
jns
xorb
mov
xchg
sub
mov
dec
dec
adc
xchg
jecxz
mov
mov
ror
mov
mov
jb
inc
xchg
push
leave
xlat
sub
jl
mov
mov
xchg
xchg
pop
or
mov
dec
pop
and
jge
adc
call
pusha
push
pop
inc
jecxz
lea
inc
mov
add
jp
js
lret
jae
fdivrl
xchg
push
adc
inc
adc
or
mov
out
inc
mov
jbe
xchg
cli
adc
stos
fsubrl
pop
aas
and
sub
icebp
lret
dec
mov
inc
in
ficoms
mov
mov
mov
mov
dec
in
adc
mov
stos
jge
cltd
adc
cs
cli
inc
cltd
push
stos
inc
notb
and
imul
add
push
jne
clc
or
es
push
fidivs
xorl
lods
aas
cmpsl
pop
pop
nop
push
fmul
or
mov
pop
daa
int3
fcmovne
add
mov
and
mov
jecxz
ss
insb
sbb
inc
sbb
jecxz
mov
mov
shl
sub
adc
pushf
subb
cmpsb
sub
testl
js
leave
xchg
mov
mov
stc
lahf
mov
add
sub
and
sbb
cli
jmp
and
repz
jmp
lret
cmpsb
lock
rorl
divb
aaa
or
cmp
cli
jge
push
fcompl
push
orl
mov
push
les
cltd
pop
xor
cmpsb
bound
pop
jmp
pop
and
jbe
sub
mov
xchg
mov
shll
rorl
fcmovnb
inc
icebp
jmp
outsb
mov
aad
cli
mov
pusha
add
push
jae
mov
jp
lock
mov
fincstp
icebp
outsb
adc
add
dec
sahf
outsb
incb
pop
cmp
es
adc
mov
ret
xchg
xchg
stc
mov
xchg
lods
or
mov
hlt
jb
int
mov
push
fisttps
rcr
pop
ror
push
movsb
sarb
mov
push
daa
in
test
lea
or
not
in
sub
ret
test
mov
xchg
dec
mov
in
ds
pushf
xor
cmp
xchg
dec
fmull
fidivrs
lahf
je
pop
fcmovnu
js
xchg
pop
imul
cmp
or
sbb
xchg
mov
sub
mov
add
lods
or
pusha
negb
mov
leave
lret
xchg
aad
sbb
adc
cs
sub
addr16
ljmp
les
pop
add
pusha
cmpb
dec
pop
outsl
aaa
and
gs
mov
adc
dec
or
adc
mov
mul
pop
mov
movsb
xor
or
int3
dec
es
adc
dec
xchg
cwtl
shrb
cwtl
xor
insl
rcl
test
sbb
mov
into
scas
gs
or
bound
sbb
aaa
clc
dec
shll
fmuls
sbb
jmp
negl
outsb
xorl
inc
lods
inc
in
dec
insb
cmp
jg
inc
xor
or
mov
jg
jne
or
inc
mov
ret
xchg
xor
cmpsb
fildl
popa
jo
adc
aam
in
and
les
stc
add
mov
in
lcall
popl
in
in
popa
sbb
pop
into
into
cmp
inc
ret
test
push
and
call
test
adc
adcb
or
adc
jmp
mov
clc
stc
call
lods
sahf
out
jno
into
mov
push
sbb
loop
cmp
aaa
push
mov
rcrb
jns
ljmp
and
int3
jp
out
xor
cs
movb
inc
xchg
jl
pop
in
inc
add
into
sbb
xor
mov
test
bound
mov
jle
ret
fsubrl
pop
dec
inc
lock
cmp
outsb
push
lret
xchg
popa
sarl
push
out
pop
xor
in
je
or
pop
add
fcmovnb
mov
adc
fwait
loope
fnstcw
mov
mov
mov
cmp
push
leave
std
jge
rorl
jecxz
in
dec
in
mov
sub
mov
fildl
xor
or
cs
repnz
fistpl
jns
push
cmp
aas
jb
rolb
sub
sbb
test
push
pop
fistps
xchg
dec
dec
cmp
inc
xchg
stos
lods
orl
ja
dec
mov
fisubl
add
mov
test
cmp
les
sub
adc
mov
sub
xchg
sbb
icebp
jne
mov
imul
add
xor
add
mov
mov
inc
sbb
cs
push
mov
xor
or
xchg
jle
push
enter
div
nop
subb
sbb
inc
hlt
dec
data16
xchg
mov
push
aam
dec
sbb
mov
push
bound
lcall
pop
shlb
push
xor
mov
gs
dec
pop
inc
int3
mov
push
dec
xlat
push
in
pop
jp
loope
mov
mov
adc
outsl
sub
cmpsl
jae
sbb
or
mov
xchg
das
lods
fmuls
cmc
inc
mov
lret
outsb
movsb
pop
in
sarl
xor
sub
sbb
je
mov
lret
push
lock
add
incb
sbb
sbb
adc
pusha
and
add
push
pop
sub
movsl
inc
clc
and
sar
pop
xchg
in
push
dec
stos
xchg
mov
lea
xor
push
test
inc
ja
sub
mov
sbb
lock
popf
lret
cmp
mov
pusha
inc
popf
pop
xor
dec
dec
lcall
movsl
pop
aaa
stc
fldcw
push
leave
inc
out
mov
popf
cmp
ljmp
inc
jns
ljmp
xlat
sub
and
int
mov
mov
repz
inc
test
add
icebp
cmpsb
sub
adc
movsb
and
call
ljmp
into
sub
data16
std
popf
mov
xchg
icebp
inc
push
sti
dec
sti
add
je
cmp
adc
mov
mov
rolb
jle
sti
mov
and
std
aam
rcl
ja
mov
enter
push
test
icebp
push
or
cwtl
stos
shll
inc
add
lods
sbb
push
mov
push
cmc
cld
push
fmul
sbb
loope
cltd
inc
mov
ficomps
xchg
sub
mov
out
rol
push
mov
cmc
jmp
stos
push
lcall
push
call
shlb
testl
jp
inc
push
dec
mov
enter
in
mov
lea
cmp
push
xchg
push
mov
inc
xchg
insl
lea
xchg
ja
loop
lahf
dec
sub
dec
subb
mov
jge
imull
cmc
imul
and
lds
mov
movsb
dec
jno
dec
mov
xor
dec
push
mov
cs
test
push
fsts
addr16
jmp
ret
lret
outsb
sbb
addl
fcoml
xor
cltd
in
roll
adc
mov
rol
ljmp
fbld
pop
cmp
hlt
and
repnz
cmp
cmp
pop
and
cli
dec
add
xchg
repz
gs
mov
int3
sub
das
pop
repnz
adc
pop
mov
or
add
add
call
ficomps
jmp
mov
andl
xchg
js
popa
aas
mov
pushf
into
mov
and
pop
cld
enter
cli
notl
mov
jno
pmaddwd
add
sbb
push
cmc
xor
jns
push
ljmp
pop
fstp
xor
popf
imul
ds
cwtl
in
popf
inc
jecxz
shl
sbb
roll
out
mov
jo
sub
out
inc
xchg
outsb
sbb
cltd
and
pop
xchg
lahf
popa
test
clc
jmp
test
adc
push
aas
cmp
out
lahf
pop
das
sbb
jmp
mov
movl
fisubrs
adcb
iret
stos
mov
sbb
mov
test
repnz
mov
mov
andl
sbbb
fiadds
dec
aam
jmp
push
outsl
xor
add
xchg
jge
mov
pop
nop
in
pusha
inc
sbbb
out
xchg
xor
scas
sbb
mov
in
and
mov
stos
imull
mov
sti
fimuls
imul
sti
mov
sbb
xchg
sbb
mov
sub
cs
or
shrl
xchg
scas
sarl
dec
lea
pushf
dec
mov
nop
mov
mov
mov
lret
push
bound
mov
xchg
outsl
pushf
push
sub
ss
inc
jmp
xorl
or
mov
jne
jae
aad
sbb
cmp
push
cmp
mov
pushf
sbbl
movsb
cli
mov
js
inc
pop
mov
and
mov
push
je
or
shll
pop
cmp
test
and
sbb
push
push
imul
mov
mov
les
mov
cmc
push
loopne
sti
xor
add
inc
inc
sub
je
std
rorb
mov
pop
jb
push
fnstsw
lret
scas
xchg
xchg
hlt
movsl
aam
cmpsl
cmpsb
inc
jnp
mov
aas
das
shlb
in
push
and
clc
adc
int3
jle
sub
and
mov
dec
jl
and
pop
push
xchg
mov
mov
jae
test
jg
mov
shl
sbb
jne
or
addr16
inc
jo
and
jg
and
incl
or
fisttps
sbb
lea
sub
push
mov
pop
xor
add
mov
xchg
xchg
sbb
xchg
jb
gs
mov
push
fistl
ljmp
add
xor
icebp
jp
insl
scas
arpl
sub
sahf
pusha
outsl
outsb
cmp
aam
jmp
pop
add
hlt
aaa
inc
ret
mov
mov
in
mov
hlt
negb
xchg
fmuls
dec
cld
pop
mov
xchg
lods
mov
xsaves
ja
adc
icebp
or
cltd
lahf
xchg
xor
aaa
sbb
sbb
xchg
inc
ficomps
pusha
xchg
jmp
add
dec
sbb
repz
rolb
lods
fisttpl
jle
xlat
and
push
fs
fldenv
dec
cwtl
sub
ja
push
add
pop
pop
cmpsb
mov
jp
lods
xor
adc
xlat
je
add
xor
dec
ss
and
insb
lret
loope
ror
adc
mov
dec
sbb
mov
xor
or
sub
adc
std
jmp
lock
shrl
push
aad
mov
xchg
stos
mov
sub
inc
mov
dec
sbb
or
push
cmp
and
bound
cltd
jl
jg
test
mov
mov
icebp
pushf
cmpsb
xchg
fwait
or
mov
lret
pop
pop
jp
scas
repnz
imul
mov
mov
and
int
insb
cmp
mov
mov
andb
or
xchg
push
mov
test
mov
ljmp
adc
or
in
sub
stc
pop
out
pop
mov
test
jle
ror
outsl
xor
aam
cmp
cli
arpl
aaa
xor
in
cwtl
outsl
sub
push
addr16
inc
dec
push
cmp
fstps
xchg
int
xor
cltd
mov
or
cmp
sbb
push
dec
call
out
enter
insb
push
pop
test
sub
push
mov
cltd
popf
jl
cltd
lahf
inc
mov
jp,pt
iret
sbbl
pushf
in
lcall
call
dec
cwtl
popf
jecxz
paddusw
stc
loopne
push
mov
gs
pop
shrl
sar
bnd
or
lret
lret
cld
rorb
mov
and
sub
cmp
sbb
or
test
out
cmp
nop
sub
rcll
add
addb
inc
xchg
xchg
mov
or
sarl
mov
testl
int
jns
cmp
lds
out
mov
mov
xor
jle
pushf
lea
dec
and
loopne
push
aaa
stos
xor
cmp
imul
out
jae
std
or
bound
scas
cwtl
inc
adc
orl
pop
cmp
and
mov
mov
pop
add
test
adc
sbb
and
sbb
push
jmp
mov
fiadds
stos
cld
pushf
mov
dec
sub
inc
cmp
dec
call
sarb
pop
push
fs
iret
cmp
out
inc
pop
rolb
jmp
hlt
fs
adc
fisubrl
push
aam
cmp
mov
add
test
and
fstl
lret
sub
movsb
lcall
xchg
and
sahf
xchg
rol
sub
pop
mov
add
repnz
dec
xchg
or
in
jmp
mov
lret
sub
fisubl
fcmovnu
mov
pop
pop
js
cmp
addb
les
sub
xlat
cld
cmp
pop
and
dec
rorb
mov
adc
inc
inc
lods
fidivrl
mov
aaa
aad
cmp
nop
movsb
sbb
mov
sti
test
push
out
inc
pop
cld
jge
jne
or
push
out
dec
jnp
sbb
ret
test
push
dec
test
fnstcw
xor
push
testb
hlt
push
nop
pop
pop
out
inc
out
and
lea
orb
sbb
loop
cmp
dec
fstps
addr16
xor
push
mov
movsl
scas
fdivrl
adc
mov
fisubrl
xchg
fwait
ja
std
aad
pop
loope
mov
xchg
popa
add
or
iret
addr16
arpl
cmp
divl
in
and
jmp
loope
jmp
jne
mov
inc
adc
faddl
jno
hlt
pop
push
lret
sub
mov
jo
stc
arpl
mov
iret
and
ljmp
sti
cmp
ret
mov
ret
mov
mov
push
dec
imul
dec
cmp
in
ret
inc
and
push
hlt
enter
dec
inc
dec
cmp
xchg
mov
sbb
add
daa
out
fs
ficoms
sub
sar
cmc
fldl
xor
clc
nop
adc
mov
xorl
loope
jp
adc
in
je
in
test
and
adc
dec
sub
test
mov
testl
rcl
ljmp
stos
push
mov
cmp
daa
xchg
inc
call
mov
mov
push
cmp
aam
sbb
mov
rcrl
fiaddl
xchg
xor
inc
xchg
pop
mov
xchg
mov
pop
xchg
fisubs
mov
ja
clc
xor
fisubl
xchg
outsb
or
sub
insb
or
clc
int
sub
aaa
lods
lret
xor
cli
xchg
mov
pop
xchg
pop
mov
pop
cmp
mov
xlat
add
or
mov
enter
outsl
or
adc
mov
imul
pop
sub
jo
iret
idivb
std
sbb
pop
dec
mov
sub
push
popf
ret
sbb
mov
jp
xor
sahf
pop
lret
popf
sub
push
das
xor
sub
adc
subl
mov
movl
ja
outsl
mov
repz
sub
adc
shl
fwait
mov
mov
add
mov
shr
inc
cmp
sbb
shl
fisubrl
jnp
jp
xchg
daa
stos
ret
scas
sub
pop
das
into
push
aad
iret
jb
dec
add
aas
adc
out
xchg
mov
mov
mov
pop
cli
jo
dec
push
mov
or
dec
rol
ret
mov
push
adc
pop
test
add
add
pop
fisubs
mov
lods
push
outsl
lcall
negb
xchg
ja
mov
mov
mov
js
aam
insb
mov
dec
movsb
inc
test
and
mov
inc
cltd
out
push
and
cmp
pushl
addb
sub
jns
fmull
shll
adc
out
cwtl
xchg
imul
inc
test
xchg
idivl
enter
fisubrs
cwtl
je
mov
jl
aas
rcrb
pushf
and
mov
stos
sub
push
xor
pop
stc
orb
xchg
in
int
in
shl
xchg
adc
xchg
adc
lds
cmpsl
sbb
insb
inc
subb
xor
mov
mov
into
and
cmpsb
mov
scas
je
clc
ds
inc
or
xor
xchg
je
iret
jecxz
jo
fs
or
je
fildl
ljmp
xchg
movsb
sbb
cwtl
faddl
xchg
lea
and
cmp
mov
fisubrs
fstl
push
push
rclb
dec
mov
sub
adc
in
fldenv
shlb
repnz
int
lods
sahf
inc
and
out
sbb
lods
cmp
or
aas
iret
add
dec
or
stos
fcomps
fmulp
rcrb
ds
int3
and
outsl
dec
push
or
jl
mov
mov
mov
sub
add
lret
push
leave
sub
mov
jl
lock
xor
dec
adc
inc
mov
xchg
add
mov
out
cmpb
imul
ds
lods
mov
add
les
or
fnstsw
sarb
inc
mov
xchg
inc
or
lock
lcall
or
call
pushf
shrl
imul
add
nop
movups
jno
mov
push
dec
mov
mov
push
out
sub
add
std
je
adc
adc
rcrl
nop
xchg
or
push
pusha
lret
xlat
cmc
adc
jae
imul
jle
jae
adc
roll
jle
cmp
mov
scas
hlt
or
adc
ljmp
sbb
in
mov
inc
mov
adcl
aaa
pushf
cltd
cmc
dec
mov
cwtl
xor
pushf
movsb
xor
pop
sub
xor
mov
mov
iret
nop
push
outsl
inc
lds
mov
jbe
imul
fadds
cmp
mov
push
pop
lret
cvtps2pd
mov
inc
or
inc
dec
inc
jge
pop
insb
lahf
mov
out
mov
ret
adc
push
gs
ret
movaps
cmpsb
test
push
xchg
sub
jbe
les
xor
rclb
xchg
sub
rcrb
sbb
in
adc
push
ljmp
js
xorb
push
pop
in
insb
xor
xchg
movsb
mov
dec
lods
fistps
push
cmpsl
or
int3
loop
jp
mov
cmp
ds
enter
push
pop
xchg
pop
xor
aad
scas
jp
fdivl
aas
mov
xchg
mov
addr16
xchg
pop
mov
add
add
jnp
or
add
push
dec
jmp
or
fwait
sbb
xorl
mov
mov
mov
shr
mov
mov
incb
ja
jae
dec
in
add
pop
je
iret
lods
dec
push
shrl
iret
mov
fstpt
and
cmc
test
mov
add
fwait
add
sti
mov
mov
cs
or
ss
jg
lock
hlt
inc
sbb
jns
and
inc
aad
add
fbstp
frstor
cmp
push
sub
aas
push
lock
add
addr16
or
add
fwait
outsl
push
push
jmp
mov
insl
cld
loope
adc
push
jmp
movsb
pop
lods
xlat
pop
ja
insl
xor
rcr
jno
in
adc
enter
cmp
mov
xchg
push
sub
lods
into
mov
out
fsubl
rol
ret
ret
call
push
cmpsl
mov
cmp
lcall
adc
shrl
adcb
and
mov
sub
cld
aaa
imul
xchg
outsb
pushf
mov
sbb
or
pop
xchg
in
cmpsb
insl
or
mov
insb
sub
ss
lahf
std
pop
out
loop
mov
adc
cmpsl
fwait
add
stc
data16
pop
mov
mov
mov
in
or
jne
scas
fidivl
ja
rorb
mov
push
mov
cmp
ljmp
mov
leave
adc
loope
adc
pushf
into
xor
out
pop
xor
sbb
pop
les
push
and
aas
test
out
push
imul
xor
hlt
xor
lods
bound
data16
pop
xchg
popf
sub
adc
jl
sbb
xchg
dec
shll
cmp
icebp
stc
stc
ret
push
and
push
stc
mov
mov
or
lock
in
or
pop
sbb
or
xchg
inc
xchg
pop
pop
or
jl
test
push
pop
jp
jl
stos
push
mov
sub
pop
adc
mov
sub
lret
or
pop
addr16
jmp
fldcw
popa
clc
cmp
dec
dec
sub
mov
bound
xor
xchg
loop
daa
jbe
adc
out
sbb
mov
cld
std
sbb
dec
enter
mov
in
insb
adc
xor
push
sub
cmpsb
push
fwait
sub
test
outsb
xor
push
fwait
xchg
cmpsl
dec
xchg
dec
pop
rcrb
sti
fs
ds
iret
sbb
jge
add
mov
sahf
inc
ret
repnz
scas
inc
add
push
lret
jge
lea
aam
mov
icebp
sahf
dec
jle
push
jno
mov
sbb
pop
jbe
test
out
dec
add
mov
mov
inc
dec
sub
mov
int3
cwtl
flds
lds
shlb
ljmp
stc
daa
je
pushf
pop
mov
and
cs
mov
sub
repnz
out
xor
addr16
sub
adc
insl
dec
inc
hlt
rcl
push
inc
andl
cld
das
cmc
pop
movsb
call
pop
out
fildl
sbb
sub
out
shlb
into
xchg
shll
flds
repz
scas
jmp
add
push
mov
in
icebp
inc
fisttpll
iret
jbe
dec
push
daa
iret
testl
aad
mov
in
cmp
mov
push
adc
pop
or
les
icebp
inc
es
mov
data16
in
sbb
subl
mov
adc
mov
xchg
cltd
push
or
push
push
inc
or
and
mov
fs
insb
fcompl
test
jge
xchg
out
cmp
imul
mov
jns
cld
fs
cmpb
xor
mov
mov
fcmovnu
aaa
clc
arpl
das
xrelease
adc
lock
out
mov
pop
cmp
jge
xchg
mov
mov
hlt
mov
mov
shll
dec
shrl
loop
cmp
cli
mov
xchg
push
or
test
lds
in
inc
lods
orl
or
iret
sub
mov
pop
or
pop
clc
lods
daa
test
sbb
pop
mov
cmp
mov
into
mov
add
fimull
xchg
stos
and
mov
jne
dec
adc
jns
aad
hlt
push
xchg
and
subl
inc
ss
rorb
mov
mov
leave
std
pop
add
movsl
out
out
cmp
pop
dec
dec
jnp
enter
jae
fdivs
addr16
xor
jbe
mov
lods
jbe
mov
or
pop
pop
loopne
mov
inc
std
push
sub
adc
mov
push
sub
xor
nop
movsb
xchg
in
sti
jo
mov
xchg
adc
push
or
ret
push
xor
clc
movsb
add
inc
stc
pop
jg
rorb
jp
es
test
lods
imul
xchg
mov
insl
dec
xchg
in
cmp
xchg
pusha
repnz
out
pop
in
test
mov
inc
cs
arpl
mov
mov
pop
lock
cmp
xchg
push
adc
push
sbb
pop
rcrb
sub
ret
aaa
mov
shll
int
test
repnz
out
stos
jno
xchg
cmpsl
imul
fisubs
and
push
xchg
push
lret
popf
pop
ss
xchg
pop
cmc
inc
shll
arpl
xor
jge
rcrb
mov
test
sarl
fnstenv
mov
jnp
nop
addb
scas
mov
xchg
or
cltd
js
insl
daa
mov
xor
scas
push
leave
xchg
sti
mov
lcall
xchg
inc
sbb
test
fnstenv
mov
js
adc
xor
out
jle
or
out
mov
push
lods
aad
stc
sbb
sub
popa
mov
faddl
lea
cmp
fists
popa
add
pop
adc
add
into
add
cmpsb
popf
into
xchg
and
jl
aam
or
stos
dec
jae
lods
xchg
cs
fisttpll
js
mov
fnstenv
pop
filds
int
rcrb
cmp
rcl
jl
and
rcr
addb
dec
sub
test
pushf
mov
mov
fstps
mov
stos
jbe
fcompl
inc
add
inc
push
mov
push
mov
std
mov
push
fists
adc
iret
or
dec
pop
sub
jbe
icebp
jbe
sbb
push
stos
mov
fsubrl
test
shrl
push
rol
stos
into
mov
push
dec
or
loopne
clc
push
cs
stos
adc
test
fimuls
repz
cmc
push
push
xchg
xor
out
outsl
add
mov
mov
dec
imul
fcmovnbe
inc
dec
outsl
pop
lods
stos
dec
cmc
xlat
inc
stc
sahf
shr
in
adc
add
add
or
sub
test
int3
inc
jae
aam
popa
jecxz
lahf
inc
add
dec
mov
loopne
pusha
test
pop
int
mov
push
emms
mov
push
or
sub
fisubs
ret
insb
lret
xor
and
or
lea
cltd
jl
out
xchg
insb
ret
jo
in
subb
inc
out
adc
mov
add
dec
enter
sub
lods
pop
pop
test
mov
cmp
fldenv
ret
add
xchg
lock
push
loop
mov
movb
fldenv
sbb
insl
lods
mov
fldcw
mov
jle
and
cmp
enter
pop
pop
shr
xor
rep
mov
sbb
push
push
cwtl
or
repnz
adc
nop
pop
in
outsl
sbb
cmpsb
imul
adc
add
loopne
mov
inc
or
fcoms
out
mov
pop
stc
inc
inc
nop
xchg
mov
pop
lahf
sbb
inc
push
push
lds
add
mov
lret
cmpsb
mov
xchg
btc
and
cmp
mov
push
cmp
ret
jmp
dec
jmp
daa
adc
xor
xor
repz
pop
mov
pop
movsb
jae
xor
int3
cmc
ja
cltd
push
les
cmp
sahf
movsl
mov
outsb
mov
dec
loopne
movsb
and
mov
std
push
iret
fsubrs
stos
mov
loopne
add
lods
add
sub
xchg
mov
pop
in
in
mov
cmp
je
out
cmpsb
inc
dec
mov
push
lret
inc
mov
popf
cmp
out
lock
cwtl
add
jae
mov
sbb
in
jmp
cmp
ljmp
push
aam
outsl
adc
stc
sbb
std
and
jecxz
ja
nop
repz
mov
pop
fbld
int
outsl
adc
fcmovbe
notl
scas
or
sbb
mov
push
jno
mov
adc
stc
cs
jbe
fdivrs
js
inc
mov
in
orl
fmull
repnz
pop
jl
push
and
jbe
gs
push
jb
add
dec
shrl
dec
push
sbb
call
jmp
jle
out
jp
int
scas
mov
cmp
out
inc
fs
sbb
sbb
inc
rorl
nop
test
ret
or
fstp
mov
movsl
push
addr16
mov
inc
and
or
pxor
adc
cli
xchg
and
orl
adc
ret
fisubs
mov
pop
in
sbb
fwait
jb
add
les
mov
rcr
mov
fisubrs
in
xlat
dec
pop
test
shll
ficoml
stc
out
popf
loop
mov
rcr
aaa
inc
or
outsb
adc
mov
ljmp
addl
or
fs
lahf
mov
xchg
jno
cmp
popl
mov
leave
leavew
cmp
ja
lds
push
out
dec
and
xor
icebp
ret
cwtl
push
cld
jo
xor
and
cmpsb
cwtl
xorb
xchg
cmp
out
insb
xchg
xchg
dec
dec
push
data16
xor
xlat
mov
in
loop
in
xchg
jbe,pn
lret
in
cmpsb
sahf
in
add
out
data16
fcmovnb
mov
call
inc
sub
dec
mov
adc
jnp
mov
dec
iret
mov
int3
adc
mov
xchg
inc
mov
mov
sbb
xlat
xlat
dec
fcomi
sub
and
sbb
pop
popa
xlat
test
adc
cmpsl
cli
mov
push
out
rcll
ret
sbb
std
push
in
leave
dec
aad
enter
sub
xchg
push
aad
mov
fdivr
jo
mov
cmp
int3
xchg
and
jbe
mov
push
stos
adc
bound
fnstenv
cltd
imul
movsb
scas
and
xchg
xchg
sbbb
jg
aaa
pop
movsl
cld
cmp
inc
inc
sar
cld
dec
push
jl
sub
mov
dec
sbb
idivl
xchg
fnsave
xchg
jns
ss
es
push
lahf
cltd
testl
mov
fsubr
cmpsl
push
jne
xor
xlat
insl
lret
lds
push
mov
xchg
les
loopne
lret
loope
add
jmp
dec
inc
dec
sub
ljmp
push
jo
aas
add
or
push
xchg
sbb
cmpsl
push
push
xchg
hlt
stos
add
negl
int3
ss
out
addr16
mov
xchg
pushf
imul
mov
sub
jae
ja
fistl
mov
gs
daa
ss
movsb
pop
cltd
pusha
jns
stc
bound
xlat
mov
add
jne
cmc
std
arpl
jge
jnp
mov
push
repnz
notl
mov
fldcw
sub
in
scas
addr16
sub
push
clc
in
sbbb
dec
jns
stc
or
ds
sub
pop
mov
fs
and
outsb
popf
sbb
test
xorl
mov
lea
mov
pusha
mulb
repnz
add
jb
js
ljmp
or
jnp
das
jnp
mov
push
sub
popa
lods
xchg
inc
add
adc
push
xor
testb
lahf
jnp
mov
imul
fmuls
adc
addb
mov
shrl
dec
or
mov
cmp
mov
aas
sub
xor
lcall
push
loop
mov
pop
mov
mov
out
mov
clc
jmp
lea
push
push
dec
aas
and
or
add
push
jmp
pushl
inc
mov
lret
mov
enter
mov
pop
adc
lods
add
mov
xor
ficompl
jbe
adc
daa
xor
fnsave
pop
es
imul
cmp
push
sub
and
push
jb
das
mov
sbbb
push
shrb
pusha
aas
cmpsl
hlt
jge
jmp
dec
xchg
xchg
lret
mov
vpsrlvw
and
xor
add
xlat
pop
lcall
push
std
push
repz
pop
adc
lds
fnsave
pop
add
enter
xor
comiss
cmp
pop
jmp
jp
and
pop
dec
dec
push
jnp
ljmp
push
sbb
scas
jne
loope
xor
xor
mov
loop
pop
out
rcr
imulb
push
fiaddl
andb
lods
andl
pop
sbb
cmp
out
scas
jl
call
test
sub
mov
add
mov
mov
jecxz
dec
adc
pop
js
push
in
repz
imul
jmp
lods
mov
sub
jp
sbb
add
jno
jg
sbb
andl
popf
in
aad
dec
pop
mov
jb
pushf
inc
out
adc
and
rcl
std
aam
insb
std
rclb
lock
mov
xchg
out
sbb
xchg
les
pop
inc
fs
push
xor
push
xchg
jge
ljmp
mov
in
arpl
lret
add
jbe
rolb
or
sti
fmul
js
shrb
and
mov
cmpsl
pop
jo
gs
bound
aad
fwait
push
inc
sti
inc
cmp
push
xchg
ss
add
push
mov
pop
xchg
dec
enter
test
dec
mov
sub
test
xchg
or
jns
sub
push
push
pop
push
inc
movsl
fcoml
and
mov
mov
mov
out
dec
jmp
jmp
arpl
jne
dec
mov
add
adc
xchg
push
ljmp
cltd
xchg
in
mov
insb
mov
add
xchg
sbb
in
xor
pop
mov
pop
jo
dec
sub
loop
icebp
add
vpshad
lahf
add
mov
mov
xchg
shrl
cs
das
scas
sub
mov
pop
adc
pop
arpl
mov
ja
leave
sbb
jl
aaa
cmp
and
xchg
lcall
out
nop
mov
dec
test
jnp
adc
mov
hlt
mov
cli
adc
cld
xchg
mov
dec
pushf
push
scas
cmpsl
cwtl
cmp
xchg
setp
xchg
xchg
subl
loope
aaa
je
sbb
stos
sub
mov
popf
pop
stc
jbe
jge
adc
inc
pop
fnstcw
int
sbbl
js
push
iret
clc
shr
fs
adc
pop
xlat
cltd
dec
push
xlat
inc
fbstp
push
pusha
f2xm1
jb
xchg
and
push
push
cmp
shll
sub
inc
mov
pop
aas
das
fs
clc
gs
adc
test
push
pop
mov
into
dec
ret
mov
cmp
icebp
dec
lahf
jne
jmp
je
lods
bound
ja
scas
and
dec
jecxz
cmp
fmulp
jle
arpl
add
ljmp
dec
jecxz
cmpsl
fiaddl
negb
pop
xchg
or
mov
jns
into
insb
ja
test
add
sub
adc
pop
jmp
aam
mov
repz
or
add
test
xchg
jo
jae
data16
xor
lret
cmp
push
push
sbb
shrl
jns
sbb
stos
or
testl
cwtl
adc
imul
mov
pushf
cwtl
jg
gs
sbb
xor
cltd
inc
insb
push
test
pushf
sub
pop
shl
jns
mov
xchg
cs
mov
mov
inc
adcl
adc
lahf
outsl
imul
movsb
jge
ret
das
je
scas
pop
sbb
fdivp
daa
jge
xchg
rol
push
rcr
mov
fcmovb
push
insl
aam
popa
loopne
and
fildll
repz
fisttps
xchg
aaa
subl
mov
mov
mov
mov
inc
hlt
lea
dec
mov
mov
repnz
icebp
xor
clc
mov
pushfw
push
shrl
cmpsb
outsl
xchg
aad
es
cmpsb
and
cwtl
cli
pop
int3
or
stos
cmp
cwtl
push
addr16
out
mov
add
test
adc
std
insl
push
xchg
xchg
int3
or
das
cwtl
mov
loope
aas
jle
pushf
sub
test
push
scas
fcmovb
clc
imul
insb
cld
cmp
aad
out
stos
add
fisttpl
inc
sbb
inc
fnsave
data16
push
rclb
sbb
scas
andl
dec
xchg
push
mov
mov
sti
addr16
subb
xor
pop
fidivrs
dec
pop
fwait
adc
mov
js
cwtl
jnp
add
enter
movsb
mov
stos
jnp
sub
xchg
ss
aaa
lahf
aam
ds
pushf
repnz
xor
push
ficoms
out
repnz
cmpsb
dec
dec
inc
jnp
sbb
addr16
push
xchg
sub
aam
lods
and
jmp
int3
out
popl
xchg
test
icebp
loopne
add
ret
iret
fdiv
pushf
out
mov
sbb
ficomps
adc
lods
adc
outsb
data16
popf
mov
lahf
dec
push
sub
sar
mov
sub
outsb
jb
adc
orl
cmc
xlat
fldcw
jo
es
rolb
lahf
leave
mov
aam
in
pop
ja
dec
mov
sbb
pop
es
jno
lods
cli
and
cmp
jmp
push
inc
roll
jae
out
fwait
mov
mov
pop
in
fiadds
xchg
in
jne
and
es
jl
dec
add
inc
add
loop
xchg
std
icebp
imul
mov
das
push
jmp
mov
or
in
js
cmpsl
add
push
pusha
sub
lods
inc
dec
sub
push
into
aas
xchg
pop
adc
sbb
fs
into
mov
sbb
adc
sti
dec
setb
cmpsb
mov
and
pop
jno
lcall
adc
pop
jns
push
out
jb
lods
imul
sahf
mov
aad
scas
inc
fwait
cli
fistl
in
push
fsubs
faddl
jmp
or
mov
icebp
shrl
lcall
push
mulb
sub
dec
aam
add
cmp
iret
xchg
lahf
push
iret
xorb
pop
repz
pop
test
and
clc
fmuls
xor
arpl
into
xchg
mov
out
xor
stc
pushf
jmp
xor
lcall
jb
test
movsl
in
aad
mov
iret
js
or
and
push
mov
add
pop
push
pop
in
sub
outsl
dec
loope
xchg
iret
mov
jmp
sbb
lock
cwtl
rcll
movsb
testb
push
or
hlt
xchg
iret
dec
adc
lods
xchg
aad
mov
sbb
pop
inc
fmuls
loop
or
or
mov
add
dec
xchg
or
into
dec
inc
xor
jo
cmp
jge
inc
sbb
stc
lods
pop
mov
loop
dec
mov
pusha
pop
adc
and
ficoml
loop
push
push
mov
fwait
adc
mull
mov
mov
or
mov
gs
daa
mov
adc
add
sbb
xchg
popf
fwait
sti
test
adc
test
out
fimull
scas
push
imul
enterw
mov
pop
adc
lahf
adc
adc
test
xor
push
ds
and
clc
sbb
push
arpl
es
cltd
clc
or
stos
fsubrl
clc
ljmp
stos
xor
push
adc
xchg
test
xchg
repnz
hlt
clc
stc
mov
test
pop
mov
movb
jae
cmp
je
dec
fsubrp
aad
sbb
and
fistpll
aam
or
lock
mov
dec
and
sbb
dec
cs
sub
lahf
rorb
mov
addb
mov
xchg
decb
mov
mov
out
jl
push
sti
stc
lods
xor
lahf
mov
shrl
mov
nop
xor
xchg
dec
pop
lahf
xchg
mov
addr16
sbb
mov
cmp
inc
iret
adc
loope
sarl
popa
rclb
inc
int3
sub
pop
insb
int3
out
addr16
inc
arpl
inc
fsubrs
adc
adc
clc
daa
mov
aam
lock
sub
sbb
imul
xchg
dec
dec
ds
loope
mov
outsl
ret
or
push
sbb
adc
popa
sub
adc
movsb
dec
es
sbb
repnz
lret
mov
das
adc
pop
ffreep
hlt
pushf
dec
push
sbb
shll
mov
mov
imul
iret
ljmp
aam
xor
daa
out
fiaddl
repz
adc
sub
jno
mov
push
cmp
movsl
js
xor
repz
movsl
pop
pop
pushf
and
rcrl
lret
dec
xchg
fdiv
aas
mov
or
xchg
push
call
jns,pt
pop
hlt
insb
cmc
icebp
sbb
cmp
push
sbbl
rorb
int
cli
and
pop
mov
cmp
cli
scas
cld
data16
mov
xchg
iret
add
cmpsb
lods
mov
clc
adc
icebp
xor
dec
out
loope
pop
mov
add
test
outsb
loope
mov
xchg
lcall
push
xor
mov
pop
lds
inc
outsl
mov
loop
enter
aad
out
addl
popf
pop
loope
sub
mov
cmp
add
cli
mov
aad
cmp
sar
cmpsb
cmp
aas
outsb
jae
jmp
aam
stos
ds
xlat
cwtl
or
out
movsl
push
in
mov
sub
movsl
inc
adc
lret
stos
xorl
push
pop
cmp
jnp
out
bound
and
lds
std
pop
ss
fwait
cmc
bound
in
inc
xor
out
nop
stos
sub
xor
test
pop
es
lock
xchg
dec
in
cwtl
loope
scas
lds
inc
scas
mov
pushf
in
inc
mov
les
xor
add
repnz
test
movl
sbb
and
jp
fiaddl
dec
stos
icebp
es
push
stos
fwait
sbb
or
mov
sarl
mov
in
movb
pop
jecxz
push
int3
fwait
mov
adc
dec
ret
mov
out
and
arpl
jbe
jnp
adc
test
mov
lahf
fcompl
push
inc
fsincos
insb
pop
aam
xchg
mov
add
push
out
fdivrl
in
dec
lret
mov
aas
dec
lods
lret
xor
jg
adc
xchg
lock
lret
adc
stos
jp
and
add
push
xchg
out
pop
mov
fiaddl
pushf
movsl
dec
mov
xchg
dec
mov
aam
mov
test
pop
jo
pop
mov
jg
add
js
pop
pop
daa
mov
test
lock
sti
pop
adc
loop
jmp
testb
out
mov
jne
push
rcrb
ret
jg
out
in
push
adc
cs
jmp
cli
push
mov
mov
int
sbb
mov
cltd
lods
popf
mov
add
int
dec
orb
or
or
or
inc
sbb
or
sub
ficompl
cmp
lock
fwait
pushf
repz
stc
mov
ret
in
add
mov
push
mov
jg
pop
call
in
xchg
test
dec
popa
in
mov
lahf
sub
mov
test
std
adc
imul
scas
ljmp
mov
cmpsl
xor
push
imul
jge
mov
and
mov
mov
mov
outsl
lock
popf
addl
dec
xchg
xor
pusha
sub
test
dec
sub
ja
xor
cmp
sbb
loop
sub
stc
popa
ja
fistl
jnp
cmp
loopne
add
add
roll
dec
dec
adc
jge
pop
cld
popa
movsb
in
or
inc
cmp
xor
inc
in
js
scas
rcrl
lea
test
sti
nop
push
or
mov
or
andl
pop
pushf
iret
scas
push
cmp
cmp
loop
and
rcrl
and
and
adc
dec
dec
adc
sbb
testb
aad
mov
call
add
sub
cmp
sbb
int3
adc
lock
mov
daa
add
mov
fstl
sub
test
shll
jnp
mov
sub
cli
dec
stos
xor
dec
or
xchg
insl
push
push
loopne
sbb
add
cmp
scas
outsb
cld
jno
xchg
fdivr
mov
push
xor
pop
xor
cmp
pop
lods
out
pop
dec
mov
mov
xor
push
xchg
xchg
sbb
sahf
sbb
jno
lahf
cmp
mov
sbb
sti
ret
sub
xlat
es
or
dec
pop
jno
data16
arpl
xlat
jecxz
loop
add
popa
jb
cmc
dec
popf
fnstenv
cmp
ffreep
aaa
dec
dec
mov
mov
mov
movsb
or
add
sub
and
jmp
adc
push
es
mov
dec
orl
adc
push
pop
cmp
mov
jl
nop
sti
sbb
popa
icebp
mov
dec
push
xchg
mov
push
lahf
inc
mov
in
mov
inc
push
test
andl
scas
or
and
jmp
jae
push
cmc
mov
sahf
clc
mov
sbb
icebp
jl
and
adc
scas
hlt
xchg
xchg
aam
jb
testb
dec
hlt
mov
pop
aam
sbb
insb
cs
cld
rcrb
scas
jae
sub
xchg
push
push
mov
aad
fdivs
xorl
xchg
sbb
sub
mov
add
scas
jle
sub
jns
cmp
subb
ds
mov
inc
push
add
leave
les
xrelease
sbb
add
fcomip
push
inc
adc
xor
pop
cmp
stos
mov
pop
push
repz
add
add
mov
fwait
insl
sbb
and
ret
pop
adc
xchg
push
mov
subl
dec
pop
mov
popa
inc
mov
mov
push
dec
pushf
shlb
jbe
xor
ret
jns
arpl
in
inc
imul
repnz
mov
stos
lods
getsec
call
add
dec
arpl
jl
inc
cltd
dec
inc
push
int
adc
into
or
into
sub
xchg
es
cmpsb
enter
mov
int
xorl
sbb
push
test
clc
bound
movsb
sub
scas
lret
mov
sbb
push
jb
jg,pn
dec
mov
mov
mov
add
jno
and
xor
outsb
out
in
aad
filds
mov
jg
sub
jl
jmp
mov
cmp
sbb
rol
xor
pushf
dec
in
outsl
add
adc
sahf
jmp
mov
fcmovne
es
mov
jp
add
rolb
jmp
scas
push
out
or
repz
mov
test
lods
fwait
push
jp
sbb
mov
inc
test
mov
or
movsb
ss
addr16
je
cs
enter
adc
xchg
sbb
enter
jge
mov
mov
divl
mov
jp
cmp
sub
call
or
fdiv
or
and
sbb
test
dec
push
into
out
mov
shlb
jmp
or
or
inc
enter
mov
lret
or
jmp
cmp
add
add
push
jmp
push
gs
push
dec
fs
jge
sbb
movsb
dec
jbe
pushf
dec
mov
lcall
xor
mov
test
movsb
sub
dec
pop
sub
xor
adc
pop
fwait
pop
outsb
jns
loopne
push
xchg
adc
and
leave
mov
mov
pop
xchg
movsl
add
outsl
mov
pop
jno
push
and
push
loop
xchg
cmpsb
rol
into
dec
lea
adc
dec
adc
lcall
dec
cmpl
xchg
std
sbb
gs
cmp
out
stc
ja
cmp
jns
jae
mov
mov
add
ficoms
lret
and
sbb
imul
addr16
jge
test
dec
fs
int
frstor
inc
mov
xor
lods
je
xchg
rorb
shrl
mov
jle
fwait
push
out
outsb
outsb
jl
jle
fsubs
xor
scas
xor
cmpsl
mov
sbb
and
mov
push
mov
stos
or
sahf
sti
enter
and
or
sub
dec
clc
or
outsl
mov
fistpll
dec
dec
rclb
sub
push
mov
jo
xlat
addr16
adc
lret
lea
or
sbb
xchg
adc
sub
xchg
ss
push
and
push
cmpsl
pop
cltd
ret
inc
xchg
mov
loopne
adc
add
pop
pop
scas
mov
insl
jl
cltd
in
outsl
xor
xchg
jbe
dec
js
in
cmp
ret
sub
adc
xchg
mov
dec
pop
cmp
lods
jbe
in
test
xchg
cmc
pop
add
mov
dec
adc
inc
push
fwait
rorl
dec
lock
cmp
inc
inc
xchg
or
cmp
xchg
push
mov
xchg
pop
aad
test
xor
pop
mov
aam
push
inc
hlt
inc
dec
inc
iret
add
repnz
mov
scas
or
test
out
cwtl
jb
xchg
jbe
cmp
lock
pop
icebp
cs
arpl
clc
arpl
notl
rol
pop
jbe
cwtl
test
jb
xor
dec
xchg
mov
test
and
mov
xor
ljmp
sub
xchg
and
test
jno
or
inc
and
lcall
xchg
sbb
xor
fs
lret
dec
cmp
or
mov
movsl
sbb
in
push
insl
and
cmp
and
fucomp
popa
xor
popf
lret
adc
in
mov
jo
sti
add
jo
sub
sbb
pop
and
pushf
or
fisubrs
loop
das
fsincos
xchg
and
in
fimuls
das
popf
push
push
fwait
mov
jmp
mov
mov
popf
xchg
or
jg
adcl
adc
jp
hlt
in
aas
notb
adc
pop
fistpll
xchg
jno
adcl
dec
push
bound
dec
sbb
pop
xchg
jg
pop
cmpsb
mov
in
jnp
fldenv
push
gs
pop
inc
rolb
in
push
cmpl
sub
jle
fwait
loope
jo
in
aam
sarl
imul
cmp
sub
mov
stos
in
rep
jmp
inc
fildll
xor
jge
add
rclb
dec
jo
jb
inc
push
adc
and
loop
pop
pushf
jecxz
in
pusha
imul
lret
mov
jb
stos
inc
stos
mov
int3
lea
xlat
push
imul
pop
movsb
pop
mov
mov
shrb
or
repnz
inc
pushf
pop
mov
out
arpl
adc
ret
mov
pop
inc
ja
movsb
sahf
fisttpl
dec
lods
adc
inc
xor
jge
mov
fisubrs
push
jmp
xor
lods
push
jo
mov
int
pop
cltd
or
cs
shll
mov
ds
ret
xchg
xchg
or
dec
or
dec
icebp
sbb
out
push
js
xor
adc
pop
or
cltd
inc
push
cs
out
sbb
ret
sahf
inc
push
test
arpl
sbb
shlb
mov
inc
xchg
push
inc
fwait
sbb
js
or
ret
pop
xor
add
fstpt
push
xor
dec
xor
test
das
mov
push
inc
cmp
rorl
mov
stc
rcrb
jecxz
bswap
fists
lea
inc
out
sub
call
je
lret
and
and
lret
pop
lahf
inc
mov
aad
loope
sub
dec
fimuls
in
xor
jmp
mov
cli
pop
lret
out
push
add
dec
and
jge
adc
ljmp
sub
adc
sbb
out
imul
pop
mov
xor
push
add
fsts
xor
adc
sbb
pop
cld
adc
in
or
mov
xor
push
sub
sahf
add
mov
scas
aam
sub
ret
repz
adc
loop
aas
out
pop
pop
add
dec
jbe
sbb
in
add
lcall
mov
out
shrl
or
shlb
and
add
or
add
jno
cmp
enter
sbb
pop
inc
test
push
inc
push
sahf
fbstp
add
pushf
cmp
sbb
jae
test
and
insl
sbb
neg
aas
shrl
sub
out
ror
movsl
sahf
ds
cltd
jne
aam
jae
sarb
out
sbb
testl
mov
das
fldl
adc
les
add
in
pushf
jns
pop
stos
cmp
add
fwait
nop
ds
das
and
popa
sub
cmpb
jecxz
add
nop
adcb
pop
add
call
dec
inc
cmp
sti
pop
xor
add
mov
and
or
mov
sbb
es
adc
test
add
repnz
pop
jle
jg
testb
inc
mov
dec
xchg
ja,pt
sub
xor
jb
cli
call
push
xor
and
adc
xor
sbb
rorb
leave
fwait
and
add
push
sbb
jae
pop
scas
loopne
insl
inc
dec
dec
ret
pop
or
and
ljmp
scas
test
mov
faddl
pop
das
movsl
fiaddl
popf
divl
pop
sub
or
ficompl
push
xchg
cmp
mov
jbe
repnz
push
jg
fs
out
xor
stos
mov
sub
lods
stc
sub
lock
fs
iret
mov
mov
fs
fistpll
mov
cli
ret
dec
adc
dec
jne
call
fmul
fadds
mov
out
mov
and
cmpsb
pop
pop
mov
xlat
icebp
pop
sub
add
and
out
inc
inc
dec
fistps
ret
loope
addr16
movsb
xchg
pop
sbb
cli
sbb
cmp
inc
mov
add
in
jnp
cmp
aad
fdivl
into
push
imul
repnz
dec
js
ret
addr16
mov
dec
mov
cltd
jmp
fcmovb
and
mov
outsb
and
sub
movsl
mov
std
lret
adc
test
sbb
pop
mov
pop
jo
imul
xchg
test
ret
movsl
iret
inc
lods
push
lods
scas
sbb
mov
icebp
dec
test
lds
xor
mov
test
ficomps
cmp
fnsave
mov
scas
xorb
pop
inc
cmp
add
les
addr16
movsb
jp
xlat
add
mov
and
xor
roll
xor
repz
mov
pusha
xor
or
inc
and
pop
movsl
pusha
bnd
inc
jp
xor
imul
int3
mov
popa
xor
dec
or
sbb
ret
pinsrw
push
repz
arpl
push
xor
dec
jne
pop
mov
and
mov
push
imul
adc
dec
add
popa
xor
fs
push
outsb
out
outsb
mov
lea
inc
jp
stc
repz
or
xchg
rcl
les
adc
ja
mov
repz
inc
sub
lret
push
scas
dec
bound
jno
cmp
dec
shl
cmp
dec
shlb
rcll
mov
add
adc
push
mov
pop
repnz
dec
loop
jp
mov
xor
mov
shrb
mov
scas
pop
int3
xchg
insl
test
cwtl
xchg
fsts
xor
xchg
and
jae
jne
pop
int3
icebp
mov
repz
repnz
and
inc
push
sub
lcall
mov
mov
dec
cmp
push
int
xor
push
pop
inc
dec
jbe
xor
sub
movsl
imul
fidivrl
xchg
pop
jmp
jmp
jb
fdivp
out
sahf
sub
push
push
cmp
jbe
fwait
aaa
xchg
shll
movl
hlt
dec
pop
scas
lahf
popa
mov
inc
mov
jno
jecxz
hlt
mull
loop
jp
scas
dec
js
push
popf
or
aad
xchg
push
push
xchg
xchg
outsl
inc
notl
loop
inc
add
add
fwait
gs
mov
dec
adc
push
es
shl
push
inc
adc
out
and
arpl
adc
mov
and
jae
insb
jmp
or
and
add
pop
pop
loopne
mov
add
mov
rcrl
out
ret
out
addb
cltd
mov
pop
pop
push
inc
out
add
and
fs
xchg
aas
jmp
push
movsb
inc
push
jmp
add
lahf
std
repz
add
test
xor
inc
popf
enter
outsl
sahf
mov
sbb
rcrl
adc
push
cmp
add
roll
pop
lock
push
push
ss
sbb
cli
and
lret
xchg
cwtl
push
lea
add
test
push
push
repnz
fisttpll
enter
or
cmpsb
loop
mov
xchg
cmpsl
incl
pop
in
clc
daa
push
xchg
int3
dec
pusha
fdivr
lret
push
push
icebp
pop
xchg
dec
mov
or
mov
dec
gs
pop
cmpsb
dec
scas
aad
adc
mov
xchg
jmp
jge
lods
dec
addr16
addr16
xor
or
xor
popa
mov
jecxz
jbe
cmpsb
push
sbb
or
dec
mov
rcl
sub
cmp
mov
in
popa
cmc
adc
jnp
dec
mov
sbb
cmp
lds
int3
pop
xchg
cmpsl
dec
int3
jp
inc
mov
push
xor
mov
xor
outsl
push
daa
xchg
paddsb
mov
push
loop
push
push
fsubs
incb
das
pop
xchg
decl
mov
orb
cmp
xor
out
inc
sub
xor
enter
push
loop
jmp
xor
and
sub
js
inc
daa
pusha
je
dec
dec
inc
stos
enter
dec
pop
mov
jae
stc
int3
xchg
xchg
insl
sub
adc
push
adc
sbb
xor
cmpsl
or
mov
push
jo
mov
movsl
test
push
or
out
aas
fiadds
imul
push
testb
jns
inc
push
hlt
aam
shll
ja
push
dec
outsb
lret
cs
adc
or
jbe
cmp
push
inc
mov
xor
insl
mov
and
sub
push
aas
mov
dec
js
scas
lcall
mov
aam
jle
orb
scas
or
inc
stc
push
dec
xor
mov
jg
test
inc
adcl
aam
cmp
mov
mov
pop
in
pop
jle
mov
mov
mov
inc
ds
test
and
call
sub
jno
and
xor
arpl
mov
fsub
inc
lcall
stos
sbb
xor
sub
xchg
cmp
popf
inc
stos
mov
push
testb
adc
and
xchg
pop
xchg
add
push
add
dec
pop
jae
bound
pop
push
sarl
add
sarb
jmp
popf
cwtl
dec
add
lea
fiaddl
mov
jge
into
in
cmp
jle
sbb
loop
ficompl
dec
dec
bound
fists
mov
fcmovb
int3
xor
fdivr
lea
aaa
mov
inc
add
xor
shll
xlat
jecxz
push
or
movsl
icebp
jecxz
icebp
jmp
stos
adc
rol
inc
in
push
mov
fisttps
test
xchg
test
mov
stos
decl
outsb
push
sbb
movsb
dec
adc
sub
fistps
inc
lds
jle
out
mov
lods
and
aas
es
sbb
loope
cmp
xor
cli
call
jne
lock
fs
push
jno
insb
push
mov
lds
in
xchg
dec
jl
xchg
xorb
inc
mov
cmp
and
test
mov
fwait
enter
adc
adc
mov
or
pop
popf
clc
jg
out
scas
idivb
mov
adc
pop
popf
gs
and
clc
scas
mov
push
xor
pop
leave
mov
add
add
inc
xchg
adc
outsl
insb
in
xchg
mov
mov
lock
pop
es
notb
hlt
pop
sub
inc
lahf
js
or
push
xor
das
or
rcl
das
sbb
pop
fmulp
xor
es
frstor
adc
lods
dec
xor
imul
add
outsb
ror
mov
mov
test
mov
mov
xchg
andl
adc
aad
sbb
mov
std
ss
lods
popa
sbb
xlat
add
fdiv
subb
push
pop
pop
xor
inc
enterw
mov
mov
hlt
pusha
push
test
sub
sub
xchg
mov
pusha
mov
jmp
fs
and
pop
push
fs
pusha
int
pop
sub
loop
cmpsl
das
cmpsb
mov
repz
push
jae
movntq
out
sahf
scas
dec
xor
out
add
inc
repz
cwtl
mov
cld
sub
in
sbb
add
in
imul
aaa
jnp
gs
xchg
push
cmpsl
out
mov
xchg
dec
or
fnsave
cmpsb
fidivrl
into
mov
in
bound
xchg
dec
andl
adc
aaa
add
mov
shl
xchg
add
jle
cmpsb
popf
repnz
add
push
ljmp
add
jle
jmp
popa
es
jnp
inc
mov
mov
shlb
pop
mov
push
les
pusha
inc
gs
dec
mov
icebp
mov
push
lgs
mov
cwtl
sar
adc
subl
cltd
insb
js
je
mov
jbe
mov
or
leave
inc
insl
sbb
mov
or
jnp
inc
shr
jle
enter
add
add
mov
xchg
or
and
movsb
daa
loopne
mov
insb
push
jle
sbb
push
xor
adc
iret
push
jle
cmc
push
mov
dec
bound
or
dec
or
jbe
inc
mov
push
sub
add
cmpsl
sbb
dec
xor
fisubrs
stc
jnp
jbe
mov
xor
cmpsl
cmp
out
in
rorl
leave
lods
jnp
add
or
fs
or
in
fstps
imul
mov
fnstenv
and
repz
gs
pop
add
hlt
sbbb
mov
ja
dec
pushf
push
and
xorl
sti
xchg
push
aas
fimuls
aas
jno
push
push
mov
in
jae
fstl
or
or
imul
pop
fcmovu
push
jle
jne
fistl
aaa
daa
mov
popl
icebp
dec
arpl
adc
roll
pop
repnz
push
inc
pop
cmc
push
push
inc
cld
push
pop
mov
jbe
sub
lret
mov
sub
loopne
xor
sbb
jl
and
insl
mov
mov
sub
or
mov
scas
jnp
bound
imul
aaa
jne
dec
jge
leave
jne
cmp
cmp
sbb
push
dec
ss
fs
push
inc
and
sub
push
loopne
or
xchg
mov
cmp
inc
xorb
pop
mov
imul
sti
pop
mov
or
in
and
pop
or
sbb
das
imul
cmp
cmp
sbb
pop
inc
int3
or
fnstcw
inc
xchg
into
mov
mov
inc
cmp
mov
mov
push
pop
out
ja,pt
daa
jne
int3
sbb
popf
and
sub
fs
push
cwtl
negb
lahf
sub
mov
cltd
mov
stos
jns
bound
xchg
xchg
mov
loopne
add
xlat
call
sub
insb
lea
pop
mov
mov
lea
in
div
loop
lret
lods
mov
test
ficompl
icebp
arpl
loopne
cmp
dec
fidivl
inc
jno
xchg
or
push
dec
negb
mov
fiaddl
push
lods
lcall
sbb
add
in
mov
fistpll
mov
dec
scas
jne
mov
push
lret
repnz
adc
add
mov
xor
fmuls
and
jo
xchg
cmp
hlt
dec
frstor
insb
inc
push
mov
xor
pusha
sbb
mov
dec
pop
cmp
jae
sbb
cmp
pop
mov
fldcw
push
repz
icebp
push
cmp
out
cs
jnp
inc
push
mov
popf
adc
sbb
stos
xorl
pusha
fucomp
cmp
adc
pop
ljmp
rcrl
pop
push
in
jge
pop
mov
lods
push
inc
call
stos
pop
and
jbe
mov
loope
inc
and
xor
push
fmull
pop
insb
sbb
inc
mov
inc
or
ljmp
fcmovnb
xchg
sub
ds
lea
iret
xchg
cmp
sbb
addr16
xchg
add
outsb
push
adc
push
xor
jae
outsl
or
push
ficoms
leave
jns
ja
aam
fdivrs
rol
mov
xor
jns
jg
adc
cmpsb
ficoml
fdivp
pop
mov
add
imul
in
scas
call
mov
loope
movsl
jp
inc
or
lcall
movsb
adc
popf
out
push
and
sbb
jae
std
enter
jp
and
lret
xor
sbb
hlt
js
out
add
xor
lahf
arpl
mov
mov
dec
lds
cmp
test
cmp
fs
or
fs
jp
scas
cmpsb
dec
shrl
xchg
cmp
cwtl
add
pop
ficoml
sahf
rclb
repz
dec
sahf
dec
push
dec
push
int3
mov
adc
popa
mov
repnz
jmp
leave
mov
cmp
push
push
jmp
in
cmp
cmp
mov
mov
pop
pushl
loopne
andl
jns
xlat
mov
enter
fimuls
fists
pop
xchg
sbbb
inc
fnstcw
int
or
bnd
ret
mov
adc
rcrb
mov
mov
xchg
faddl
pop
aam
test
xchg
sbb
xlat
cltd
push
fnstcw
movsl
aam
pop
cmp
daa
add
test
das
loope
xchg
enter
arpl
lret
loopne
mov
idivl
imul
je
dec
and
or
and
jl
mov
cmpsb
pop
inc
arpl
pushf
fadds
sbb
jecxz
aad
cmp
and
scas
inc
shrl
push
js
dec
in
inc
jns
lea
mov
int
ficoms
les
xchg
sub
pop
mov
pop
lea
jmp
cmc
repz
pushf
jae
aas
xchg
mov
xor
imul
mov
lret
scas
clc
outsl
add
divl
add
mov
popf
je
sbb
insl
or
aad
inc
dec
mov
dec
add
int3
mov
push
popa
or
pop
rolb
cltd
jb
mov
test
mov
xchg
stos
pop
bound
xor
and
sbb
fprem
ds
dec
testl
sub
and
hlt
dec
fwait
mov
and
sti
insl
cmp
push
bound
inc
adc
subb
mov
stc
push
and
xor
jno
in
stos
imul
stc
fimull
pop
loope
in
inc
pop
popf
push
xor
jne
cltd
push
jns
orb
cld
dec
arpl
or
sub
loope
dec
in
test
in
sbb
push
mov
mov
cmp
mov
mov
lahf
xchg
push
jo
push
inc
sub
inc
cmp
leave
adc
jl
shrb
push
arpl
test
xor
xchg
xchg
icebp
popf
aam
setno
icebp
aam
mov
xor
lods
push
mov
out
orb
cmp
jae
iret
nop
add
mov
lea
pop
jbe
iret
shlb
inc
loopne
push
cmp
shlb
sbb
jb
inc
fstpl
and
repz
imul
into
cmp
lods
pop
pushf
xor
nop
jle
dec
push
loope
les
ds
rcrb
fdivrl
leave
mov
or
mov
clc
sbb
lds
mov
lods
test
dec
inc
insb
sbb
iret
and
or
push
or
lcall
arpl
loopne
inc
jmp
pop
cltd
pop
bound
cwtl
mov
andb
push
fistpl
mov
sbb
jmp
out
fs
ret
into
add
xchg
pop
and
lock
and
add
scas
push
cmp
movsb
push
mov
aam
and
adc
ss
cmp
repnz
push
in
xchg
cmp
mov
jns
dec
adc
out
es
inc
test
push
add
jecxz
out
xchg
sbb
jne
test
sbb
rcrl
inc
fsubrs
ds
pop
adc
lea
xchg
loope
mov
comiss
int
ror
or
add
test
inc
jno
addr16
inc
insb
shll
mov
jns
sub
aas
popa
leave
mov
xchg
in
push
ficoml
sahf
xor
dec
sub
jl
lods
and
js
mov
sbb
add
stc
mov
popa
sbb
or
aad
test
fnsave
jp
stc
jnp
lods
add
decl
pop
pop
test
je
inc
add
and
test
mov
cmp
mov
cltd
cwtl
in
add
data16
fwait
notb
in
sub
cld
cld
and
iret
push
int
mov
push
push
inc
inc
insl
sub
sbb
mov
clc
cmp
mov
js
sbb
cmp
out
leave
icebp
popaw
mov
xchg
xor
andl
mov
repnz
xor
cmp
test
test
ss
mov
dec
add
mov
arpl
popa
ss
lahf
jno
and
aad
stos
sub
push
cmp
rcll
jne
dec
popf
jno
icebp
sbb
popl
das
sbb
sti
cmp
aad
xchg
cmp
test
push
mov
jb
push
ja
jmp
xchg
pop
loopne
cmpsl
mov
cmpsb
fsubs
insl
shrl
imul
jle
dec
lods
jno
dec
add
inc
mov
xchg
roll
movsl
leave
in
rorb
rcrl
dec
daa
push
js
cwtl
ret
mov
lock
mov
dec
jge
lods
aas
or
mov
fldcw
push
cmp
pop
pusha
addb
shrb
xchg
call
pop
fnsave
lcall
jae
mov
rolb
or
pop
pusha
lahf
adc
pop
pusha
imul
mov
push
pusha
xchg
pop
arpl
sahf
lea
add
inc
mov
xchg
ja
outsl
adc
fistpll
sbb
dec
jge
fildl
arpl
sti
jp
lahf
mov
or
pop
and
mov
test
add
out
mov
mov
out
pop
jo
popa
pop
cli
mov
aad
daa
out
dec
test
leave
lret
jmp
jmp
fsts
test
bound
and
jmp
ret
dec
into
inc
cmpsl
dec
filds
dec
mov
adc
fsts
daa
or
dec
adc
inc
insb
cmp
dec
ffree
sti
call
pop
sbb
mov
das
rep
sbb
xchg
pop
and
das
lock
pop
movsl
add
mov
add
jle
into
ljmp
lods
push
shll
inc
loopne
paddq
add
jmp
outsb
lds
mov
push
xor
push
arpl
push
out
imul
in
aad
pop
mov
xchg
cwtl
sarl
imul
adc
add
xor
mov
test
pop
mov
adc
push
enter
mov
rcrl
stos
push
pushf
inc
pop
fildll
cmp
ret
pop
shll
mov
xor
arpl
adc
jnp
lret
sub
adc
dec
mov
notb
inc
pop
lahf
xchg
sub
daa
aam
mov
call
imul
jle
sarl
push
adc
cmp
pop
sbb
sub
or
insl
sbb
lret
in
cmp
xor
cmp
cmp
and
xchg
lock
test
aas
shrb
add
add
pop
lea
scas
fcoml
imul
aaa
andb
push
fsubrs
xchg
cwtl
or
in
out
sarb
push
test
xchg
stc
xchg
std
inc
sti
xor
jbe
scas
xor
sar
mov
cmp
pushf
dec
fldl
lods
rorb
or
push
test
mov
xor
pop
mov
inc
lds
mov
int3
sahf
xchg
mov
sbb
mov
ftst
mov
repz
pushf
in
sub
fisttps
cmp
dec
shlw
stos
ja
mov
in
jo
outsb
fs
jbe
dec
or
ss
mov
in
sarl
cmp
nop
adc
icebp
imul
cltd
inc
clc
push
imul
push
adc
aad
lahf
pop
aad
scas
inc
cmp
jmp
jae
adc
pop
mov
shl
push
cwtd
push
and
mov
xchg
jbe
cmpsb
movsb
test
push
lds
and
test
repz
xor
cltd
mov
pop
dec
mov
inc
nopl
bound
neg
icebp
dec
outsb
sbb
imul
inc
xor
addr16
fsubs
fistpll
into
mov
rorl
imul
cmp
push
iret
push
cmp
cli
cmpsl
into
mov
sub
jp
push
adc
xchg
fucom
mov
or
or
cmp
mov
data16
fwait
push
stos
mov
cmp
inc
dec
fistpll
adc
mov
push
in
fs
inc
test
mov
mov
pop
iret
inc
lret
rcrl
xchg
loop
xchg
enter
sub
fs
adc
outsl
xchg
mov
roll
subb
pop
lahf
sub
mov
clc
jb
shrl
sub
sbb
adc
sub
add
sbb
xchg
jbe
mov
mov
iret
movl
xor
inc
add
scas
xor
push
pop
jae
dec
pop
mov
fwait
jo
sti
push
xor
mulb
mov
mov
outsl
adc
jg
insb
ss
and
sbb
fs
sti
imul
idivl
bound
or
pop
fbld
insb
pop
adc
flds
nop
or
xor
or
orb
imul
and
push
imul
sub
cmp
andb
xchg
iret
insb
test
mov
cmc
and
pushf
lea
movsl
lock
pusha
repz
lea
mov
push
push
xor
jbe,pt
inc
clc
adc
mov
aam
data16
dec
js
dec
lds
aas
repnz
or
jp
pusha
pusha
mov
xor
cmp
repnz
roll
pop
js
pop
test
add
or
pop
cwtd
pop
pop
scas
sbb
jl
mov
popa
jno
leave
sub
sbb
stc
hlt
leave
jg
sbb
and
cmp
mov
mov
xlat
outsb
cmpsl
mov
divl
jne
repnz
push
cld
or
sub
dec
fldcw
cmp
mov
loopne
cmp
and
es
sub
test
push
stos
out
incl
fisubrl
cmpsb
pop
cmp
jle
arpl
mov
fwait
repnz
int3
pop
lods
sub
inc
dec
pop
aas
push
or
ror
jl
andl
jmp
shl
add
xchg
fwait
nop
addr16
sub
cmp
jle
pop
cmp
sub
mov
mov
xlat
cs
xchg
js
outsb
mov
push
andb
mov
rorl
jo
in
adc
mov
xor
cmp
cmpsl
sub
ss
sub
movsb
push
sbb
jbe
xchg
adc
push
cmc
ret
pop
inc
shl
lret
sub
into
test
es
rol
xor
jmp
pop
into
nop
addr16
out
xchg
xor
lods
dec
sbb
dec
or
cbtw
push
cmp
xchg
push
mull
or
push
pop
add
mov
pop
out
mov
rcll
test
aas
add
mov
adc
test
test
fcompl
or
xchg
nop
xchg
mov
in
pop
popf
in
sub
aas
gs
xchg
sbb
lahf
sub
push
out
pop
pop
mov
mov
jo
or
mov
xchg
inc
int3
and
xchg
movl
lods
sub
pcmpeqb
or
movsb
xchg
sbb
or
lods
mov
jmp
dec
loop
ja
or
test
mov
imul
push
sub
sbb
cltd
cwtl
xchg
out
lock
notb
xor
ljmp
inc
xor
push
add
pop
enter
add
inc
leave
repz
xor
cmp
data16
sub
or
sbbl
xor
shlb
lods
loopne
mov
sbb
inc
in
test
in
call
dec
hlt
pop
xor
jge
jge
pushf
das
aaa
add
es
add
sbb
jmp
or
int3
es
popa
jecxz
xlat
int3
sbb
cmp
and
aas
cltd
xchg
fwait
jmp
mov
cli
or
xchg
xor
xchg
gs
idiv
sahf
add
in
adc
add
je
lret
xorl
cltd
mov
bound
loop
mov
pop
out
adc
cld
cmp
mov
je
aad
ds
cs
xor
out
mov
pushl
jo
pushf
sub
int3
in
aam
push
fucomip
pop
xlat
dec
jl
fs
rcrb
pop
repnz
mov
cmp
and
add
lret
lcall
das
aad
loope
fwait
je
gs
fiadds
mov
popa
lret
shl
sarl
cwtl
add
mov
cmp
sarb
faddl
mov
in
xchg
sbb
pop
sub
aas
push
or
or
pop
iret
rcr
loopne
mov
imul
jl
mov
out
push
lcall
popa
pop
movsl
loop
test
add
div
add
jecxz
pop
add
add
in
es
sarl
mov
std
out
cmp
cmp
add
aaa
outsb
fistpl
lods
push
and
and
stos
imul
xor
push
cli
hlt
mov
repz
lcall
mov
and
iret
xor
cli
scas
cltd
repnz
movsl
mov
mov
xchg
jno
lods
and
sbbb
clc
repz
jg
mov
jmp
jmp
xor
cs
sub
loop
cwtl
ds
rorl
push
pusha
xchg
mov
mov
inc
dec
jecxz
sbb
sti
dec
jmp
or
pop
xchg
xor
mov
or
mov
push
cmp
jl
xor
jb
mov
hlt
pop
dec
int3
mov
mov
mov
xchg
xchg
jp
ficompl
sahf
sahf
ja
adcb
lcall
aas
sub
push
inc
lds
cwtl
pushf
scas
push
sub
mov
xchg
or
cmpsl
push
test
xor
jge
pusha
cld
shll
jae
add
movb
mov
mov
or
call
loope
sti
ss
cltd
adc
dec
es
cmpsl
cs
xchg
mov
fs
ja
stos
mulb
sub
cmpsl
data16
out
pop
jno
mov
loope
movsb
sub
push
imul
lock
aam
sbbb
pop
push
stc
jno
cmp
mov
into
imul
mov
xchg
mov
outsl
xor
js
repz
sar
jo
mov
sub
nop
mov
or
fistpll
sti
int3
clc
aaa
loope
shlb
les
or
push
scas
lea
or
cmp
xchg
stos
lock
xchg
sbb
fnstsw
mov
in
jne
fmulp
sbb
xor
clc
mov
lcall
ret
dec
xor
lods
repnz
inc
scas
mov
mov
pop
mov
inc
mov
dec
pop
stc
xlat
pop
out
add
pop
mov
and
push
je
daa
subl
mov
daa
sub
dec
or
pop
in
fnstcw
loop
js
push
test
popa
and
mov
pop
pop
mov
inc
jg
push
bound
jmp
cmovnp
in
sbb
shlb
es
stc
pop
in
out
mov
std
test
cmp
xlat
daa
mov
ss
lcall
mov
adc
test
dec
fwait
cmp
ja
imul
push
fldcw
xor
test
push
lods
rorl
or
jne
cmp
jb
mov
imul
dec
add
outsb
push
aas
shlb
int
and
mov
roll
mov
roll
adc
mov
xor
add
sub
xchg
dec
bound
or
out
jb
pop
cmc
push
pop
cld
dec
mov
push
out
mov
mov
fucomi
aaa
and
or
pop
fsubs
sub
inc
repnz
fsubrs
xchg
cmpsb
ss
subl
test
jbe
fwait
subl
adc
push
arpl
addr16
mov
xchg
jmp
mov
jmp
sbb
mov
xchg
movsb
and
data16
push
mov
addl
aad
out
or
cmp
and
fmull
ret
seta
inc
dec
test
jo
testl
jle
mov
sub
lock
incl
hlt
arpl
pushl
lds
in
cmp
aad
iret
jge
sub
out
mov
dec
imul
mov
enter
push
adc
inc
aad
fst
mov
in
mov
xchg
leave
or
adc
adc
fwait
lea
mov
icebp
inc
sbb
cmpb
sbb
and
stos
int
sbb
sbb
orl
loop
gs
cwtl
ret
sub
sbb
loope
lock
or
sub
jnp
jle
or
test
repnz
push
xor
mov
pop
dec
mov
jne
aad
inc
push
jl
movsl
add
decb
adc
int3
sarb
pop
arpl
inc
adc
lea
jns
lret
dec
dec
imul
mov
loopne
sub
dec
mov
push
xlat
fbld
adc
dec
mov
add
and
cmpsl
or
movsl
inc
faddp
shr
jns
jae
or
or
mov
cmp
mov
sbb
call
je
sub
out
loopne
or
stos
or
in
dec
insb
or
ss
jecxz
out
or
pop
cmovne
test
cli
cmc
pop
pause
in
es
fmull
dec
icebp
push
jecxz
aaa
orb
outsl
push
sahf
loopne
mov
aas
int
xchg
and
pop
fwait
out
loop
jbe
aam
or
lret
jno
fimull
clc
xor
cmp
jb
dec
andb
xlat
sbb
scas
imul
jnp
into
jbe
jle
or
pop
shl
sub
jmp
test
lret
and
in
and
add
jle
repnz
mov
lahf
mov
sbb
lret
jmp
mov
rcl
jmp
fsubrs
mov
jno
nop
popa
lcall
testl
or
fdivs
aam
inc
and
arpl
xor
pop
sbb
or
mov
sbb
jl
sbb
mul
cmp
pop
and
xchg
es
aaa
add
fnsave
sbb
or
jg
mov
int
jb
aaa
movsl
leave
pop
xchg
icebp
cwtl
pop
sub
divb
push
lret
call
mov
fiadds
aad
insb
inc
cmc
sbb
loop
shl
inc
test
jb
ret
sub
and
shl
rcll
jns
xchg
or
mov
imul
inc
in
mov
inc
lret
sbb
dec
ss
in
nop
cmp
ja
mov
lock
and
pop
mov
das
pusha
jne
sub
push
fildl
test
mov
repnz
stos
cli
jmp
dec
mov
sbb
shlb
jae
pop
push
push
mov
and
lret
push
pop
bound
pop
fwait
out
rcrb
ja
or
jo
rcll
mov
sbb
dec
adc
and
enter
pop
cwtl
fsubrp
sub
dec
sub
mov
jecxz
pop
out
in
fdivrs
mov
cmpsl
sbb
rcrl
cmp
mov
add
mov
cmp
int
mov
mov
out
out
mov
shrd
add
sub
mov
push
jae
sahf
std
sbb
test
cmp
out
and
pop
and
adc
sub
and
nop
mov
nop
push
andb
mov
mov
cltd
mov
xchg
sbb
push
jecxz
movsb
or
jg
std
cmp
int
outsl
mov
cmp
sub
ficoml
pop
sahf
inc
std
push
aaa
push
stos
mov
push
push
test
nop
push
call
inc
ss
add
mov
je
or
outsl
xchg
sub
add
lock
out
push
fldl
and
test
aad
adc
and
cmpsb
pop
dec
dec
dec
test
ret
sbb
insb
arpl
lds
scas
lock
lds
dec
mov
add
jmp
stc
call
cmp
cmp
add
cmp
xlat
adc
pop
cmpsb
mov
sbb
arpl
mov
xchg
push
popa
sub
das
shl
leave
lock
jo
test
out
mov
leave
or
and
leave
add
mov
mov
bound
aas
stos
pop
pop
subb
adc
inc
push
sbbb
inc
xor
dec
repnz
popf
jae
out
movsl
sbb
push
add
daa
push
sub
and
push
pop
mov
inc
aad
sub
shll
adcb
add
push
or
in
pop
or
in
in
js
jnp
lcall
lret
iret
aaa
push
fstp
data16
lcall
push
pop
mov
std
jle
jno
pop
and
sub
repz
outsl
popf
inc
movsl
push
push
test
call
scas
shrb
and
jmp
mov
or
cmp
push
test
inc
or
push
arpl
sub
ret
push
mov
xchg
jnp
int
sbb
cmc
mov
shlb
sub
adc
jo
add
cmp
fxch
push
pop
cwtl
das
dec
jl
clc
loope
push
or
ficoms
bswap
call
jle
ret
lahf
andb
jl
mov
mov
push
sti
nop
sbb
jecxz
push
test
in
les
mov
les
push
push
inc
dec
aam
stc
fsubrs
inc
add
fnsetpm(287
pop
push
stos
clc
test
mov
or
push
inc
push
cmp
mov
lret
enter
xor
sti
mov
or
and
aad
lret
jl,pn
ss
jecxz
fcomi
call
jno
int3
pop
les
rorb
lcall
loope
arpl
xor
fsubrs
inc
sbb
push
mov
or
cmc
cmp
cmp
movsb
out
pusha
and
arpl
data16
cld
cmp
stos
xchg
dec
test
fimull
fistpl
jnp
sbb
pushf
testl
mov
and
push
cmp
out
pushf
outsl
sbb
ja
xor
jne
and
ljmp
pop
nop
decl
xlat
adcb
inc
pop
mov
fsubs
adc
clc
adc
adc
inc
out
cmpsl
aad
out
sbb
mov
mov
jns
push
dec
add
cltd
xchg
push
test
test
cmp
lahf
jecxz
mov
sub
dec
cmp
fadd
dec
pop
mov
ds
cmp
out
insl
cld
fadds
push
push
or
mov
loope
rolb
cmp
mov
pop
js
je
pop
fidivrs
cmp
shl
pop
aad
or
cs
mov
mov
fs
mov
pop
add
in
insl
das
lahf
in
xchg
cmpsl
lea
sbb
and
shrl
aad
and
mov
fs
and
shl
fcomps
lcall
bound
test
mov
or
rcrl
loopne
int
stos
sti
inc
ss
insl
mov
pusha
scas
jge
icebp
insb
inc
faddp
pop
aad
repz
dec
std
cmc
mov
outsb
xchg
lcall
cs
sub
nop
fstpt
xchg
popa
stc
fisubrs
adc
fisubs
fsubp
mov
cmp
push
shlb
xlat
clc
dec
inc
fsts
ds
rcll
rorb
mov
jge
cwtl
pop
sbb
rcrb
movb
in
stos
and
test
fdiv
or
pop
pop
adc
sub
lret
stc
push
filds
dec
inc
adc
pop
add
mov
push
das
adc
cmp
shll
add
imulb
lahf
test
std
data16
insl
fadd
pop
es
popf
dec
call
jne
add
fwait
lods
sub
adc
xorl
mov
pop
push
xlat
clc
cmp
mov
stos
hlt
mov
jge
popf
push
sub
enter
in
xchg
sti
jp
call
cld
inc
lret
outsl
fwait
inc
test
dec
out
mov
popa
mull
mov
jmp
fisttps
jmp
jno
mov
pop
or
add
mov
sbb
hlt
vmovaps
mov
imul
xor
int
mov
or
out
and
arpl
out
test
call
mov
inc
mov
lods
cmp
scas
inc
stc
inc
mov
in
in
cli
cs
cs
adc
popa
jo
jae
mov
aaa
sub
mov
add
pop
cmpsb
xchg
cmp
fisttps
fildll
mov
rol
bound
push
lcall
jne
mov
and
rcrb
sahf
pusha
xchg
mov
add
and
cmpsl
lret
or
or
add
int3
in
test
dec
gs
fwait
and
push
xor
shll
cmp
movsl
movsl
jmp
ret
rorb
xor
pop
jmp
mov
aaa
sbb
xchg
pushl
and
or
enter
add
icebp
mov
dec
dec
cmp
jmp
testl
and
push
aam
pop
daa
and
aam
stc
dec
repz
scas
stos
mov
sub
movsb
scas
mov
sub
push
jnp
jo
gs
js
jecxz
or
test
mov
test
push
ds
loopne
nop
mov
cmpsl
xlat
xchg
pop
dec
adc
cmp
or
adc
lahf
sbb
pop
mov
jecxz
mov
cmpsl
sub
and
push
sbb
ja
push
int
out
push
push
orb
lock
ja
lret
in
and
sub
out
fcompl
xor
push
push
popf
add
xor
mov
cli
mov
or
test
rcll
movsb
mov
sub
dec
nop
mov
fs
femms
aam
dec
outsl
vmptrld
cmp
mov
xchg
mov
std
add
push
arpl
pop
fs
jns
cs
mov
iret
lcall
cltd
fs
jno
jno
mov
mov
cmp
dec
bound
and
mov
ret
and
rol
push
cmp
push
adc
aad
push
and
rorb
lds
push
dec
fdivrs
adc
insl
pop
decb
ja
add
cld
roll
and
add
movsb
idivb
xchg
dec
xchg
roll
lock
loope
mov
or
mov
imul
lret
push
adc
pop
test
jb
shlb
imul
into
pop
scas
sbb
insb
jbe
jl
lock
iret
lock
sub
adc
xchg
mov
pop
sahf
test
aaa
sub
mov
jnp
add
adc
test
std
lods
push
ficomps
shrl
cmpsb
sbb
in
sub
test
bnd
sub
lcall
add
stc
cs
cmp
pop
push
pop
lods
sahf
or
in
and
roll
les
dec
ret
xchg
push
dec
mov
mov
fcmovne
addb
subl
dec
mov
push
xchg
and
pop
or
add
out
push
dec
insb
cmp
cmp
xor
cmpsb
xlat
jl
mull
aaa
sub
out
push
push
dec
jmp
pop
push
dec
in
loope
xchg
ret
cltd
push
or
out
orl
mov
sbb
mov
cmp
cwtl
js
test
mov
ret
or
int
unpckhps
pop
fbstp
pusha
inc
pop
cs
mov
mov
ss
push
pop
push
scas
pop
inc
loope
repz
xchg
clc
and
and
push
fwait
sbb
mov
addl
inc
jg
vaddsd
jp
push
push
xchg
xchg
jo
insl
rcll
xchg
or
xchg
sub
aam
jno
cltd
hlt
dec
push
pop
cld
inc
xchg
lcall
and
lahf
mov
sbb
and
pop
loopne
jl
shlb
mov
mov
lods
mov
cmpsb
inc
frstor
decb
dec
xchg
lea
push
pop
mov
sub
xor
push
add
pushf
sub
add
and
call
pop
push
dec
or
adcb
inc
jbe
mov
icebp
xor
xchg
adc
mov
jg
sbb
dec
imul
mov
cmpsl
pop
lock
pop
push
outsl
pop
fwait
imul
dec
mov
jmp
jle
loop
fs
xlat
bound
add
ss
mov
rorb
xchg
ret
cmc
xlat
je
or
bound
pushf
sahf
in
xchg
imul
outsl
mov
push
adc
pop
loope
pushf
xchg
mov
xchg
or
and
xorb
loopne
repz
cwtl
cmp
aaa
push
cmp
dec
or
ds
pop
add
call
inc
cmpsb
jecxz
mov
insb
lds
sub
test
in
dec
cmp
mov
and
cmc
and
lods
mov
repz
pop
or
mov
push
and
out
addr16
out
and
and
mov
mov
ja
sbb
lock
mov
cwtl
shll
mov
xor
lods
ret
mov
imul
lods
pop
fdivrs
adc
in
cli
mov
mov
mov
sbb
je
jo
mov
imul
cli
xchg
repnz
cmp
push
stos
stos
fidivs
inc
es
jmp
sub
in
lods
icebp
in
frstor
jmp
or
push
loope
push
lret
jmp
or
pop
stos
nop
push
cs
ja
lret
movsl
mov
mov
cmpsb
jnp
or
xor
aas
test
hlt
xchg
xlat
rorb
inc
int3
push
dec
xchg
sbb
mov
scas
loop
popf
icebp
jo
ljmp
mov
mov
dec
adc
xchg
jecxz
sub
dec
adc
push
fcoms
jbe
shrl
outsb
inc
ret
int3
mov
and
leave
pop
aad
sbb
outsb
add
cmp
push
bound
ret
hlt
and
cs
sbb
fwait
imulb
subb
jecxz
pusha
ret
add
adc
mov
dec
push
icebp
mov
ss
loop
stc
fucomip
pop
cmp
fbld
in
xchg
adc
daa
int3
in
jnp
in
and
in
es
sahf
jo
arpl
aas
jno
xor
cmp
dec
mov
enter
jl
mov
push
shrl
push
push
punpckhbw
mov
in
sahf
pushf
out
xchg
cmp
scas
jo
movsl
or
push
xor
push
xor
jmp
test
mov
iret
add
clc
pop
or
sub
lds
cmc
xchg
imul
mov
mov
and
cmc
or
sbb
std
dec
loop
mov
jmp
aam
add
add
sub
mov
cltd
stos
fs
add
imul
jmp
sub
lock
shr
pop
insl
jns
clc
loop
cld
je
fnstcw
push
aas
cmpsl
cwtl
xor
adc
mov
aas
pop
mov
xchg
xchg
nop
out
pop
xchg
pop
mov
sub
push
mov
or
cli
mull
lahf
mov
enter
repz
movsl
aaa
pop
imul
mov
push
jne
push
clc
cmp
mov
push
mov
cmp
lcall
push
out
adc
xchg
test
scas
mov
incl
mov
leave
popa
inc
xchg
pushf
test
enter
pop
out
stc
out
push
pop
cmc
insb
clc
mov
inc
adc
lods
jnp
arpl
comiss
imul
xlat
sub
incl
xlat
sub
lds
fwait
push
mov
jmp
mov
mov
daa
mov
je
add
xchg
adc
jae
pop
pop
stos
cli
dec
add
insl
rorb
sub
sub
fwait
mov
cs
mov
adc
adc
push
push
ud1
leave
jmp
cmp
mov
hlt
mov
mov
outsb
jae
pop
fistl
dec
lock
out
adc
jp
les
cmp
push
mov
push
iret
popf
cli
xor
fs
sti
jge
out
ja
adc
cmc
stos
mov
push
sbb
lret
inc
call
mov
stc
xor
adc
inc
sub
dec
leave
inc
xor
fnstenv
mov
cld
cmp
fsubrs
das
test
jo
adc
jle
xchg
lcall
sub
loop
dec
jne
mov
repz
sub
nop
mov
mov
fs
adc
loop
jns
ret
fidivrs
sub
les
ljmp
sub
and
jmp
mov
gs
movsb
mov
lock
insl
xchg
mov
adcl
adc
sbb
mov
xchg
lret
pop
mov
push
data16
xchg
sbb
cmpsb
loope
scas
pop
adc
pushf
xchg
jo
ds
push
mov
popf
mov
ds
mov
or
jae
nop
lods
mov
add
push
xor
enter
and
jl
test
push
mov
je
sbb
popf
push
out
or
dec
mov
pusha
xchg
sub
dec
or
pop
cmp
jno
mov
pop
xor
inc
and
xor
and
push
pop
daa
sbb
ret
push
jae
leave
nop
ficomps
js
mov
fs
in
lcall
ret
jno
mov
call
lcall
mov
lods
enter
inc
inc
push
pop
les
hlt
cmpsl
in
add
pop
cs
cmp
add
out
inc
gs
add
jo
out
into
ljmp
das
and
xchg
in
mov
ja
das
inc
jo
jno
lcall
dec
add
mov
inc
mov
cmp
insb
movsb
sub
popf
xor
xchg
lcall
sar
xchg
ja
rcrb
xchg
jbe
inc
cltd
aam
pop
or
dec
lcall
adc
nop
pop
mov
push
cmp
je
cmp
push
xchg
in
cmpsl
push
jne
jl
mov
repnz
dec
push
sbb
xor
decl
scas
add
push
xchg
aas
stos
dec
mov
cmp
push
push
jnp
or
ror
in
sbb
dec
mov
inc
je
test
dec
shl
clc
mov
sbb
imul
sbb
das
pop
test
hlt
addr16
jnp
js
stos
out
orb
out
es
or
or
mov
cwtl
xchg
mov
call
lea
mov
idivb
mov
popa
add
inc
subl
jecxz
addr16
dec
xor
js
aas
mov
xchg
sub
xchg
xchg
push
lret
mull
mov
add
pop
sub
imul
in
out
decb
inc
push
fimuls
rclb
add
into
dec
ja
xchg
insl
cs
cmc
test
pop
icebp
mov
cltd
stc
cmpsb
ficomps
ret
adc
push
or
or
push
outsb
mov
xlat
push
mov
mov
add
push
inc
orb
pop
jmp
ss
in
adc
jecxz
mov
movsl
outsb
push
aam
xchg
jne
cmc
xchg
mov
mov
inc
bswap
jge
subb
out
stos
nop
rcl
popa
in
rcrl
xor
fcomps
mov
lock
cmp
mov
mov
sub
xchg
iret
test
inc
pop
sti
int3
xor
notb
xchg
xchg
loopne
or
sub
iret
xchg
lea
test
sub
xchg
inc
scas
pop
iret
dec
adc
mov
into
divl
sti
icebp
adc
sub
je
filds
mov
jo
arpl
add
add
shlb
icebp
repz
xchg
add
mov
test
pop
jns
ds
xor
push
cltd
dec
imull
pushf
out
mov
mov
add
pop
dec
pop
shrd
loopne
pop
repnz
push
xchg
out
add
mov
ja
push
xchg
lret
and
aad
jo
mov
fwait
mov
in
dec
adc
mov
dec
mov
xorl
in
lret
adc
adc
xchg
xorb
aas
adc
repz
and
mov
cmpsb
xchg
int3
sbb
enter
jne
adc
add
pop
sti
jb
adc
dec
sbb
pop
mov
xor
inc
dec
and
add
mov
xchg
fists
jae
or
sub
insb
fldcw
lds
adc
int3
jno
insl
adc
ja
pushl
fadds
cmc
mov
js
xchg
sub
cmp
add
add
jno
dec
push
or
idivb
out
sub
stc
or
popa
inc
sbb
daa
cmp
out
daa
hlt
add
jbe
inc
inc
cmp
cli
test
mov
stos
pop
out
xor
inc
and
shll
jp
sub
loopne
adc
jg
push
mov
adc
lds
test
ret
cltd
jl
push
pushf
addr16
jg
ljmp
ret
jno
jno
fcmovnu
loope
pop
jp
xchg
push
pop
clc
pop
ja
add
xor
stos
lds
shrl
addb
std
int3
inc
push
imul
xor
mov
mov
mov
ljmp
mov
out
lret
movsb
jae
lahf
adc
ljmp
sbb
mov
or
adc
js
jmp
frstor
pop
aad
mov
fcmovnb
fnstcw
imul
push
sbb
jle
mov
test
dec
xchg
into
mov
popa
inc
daa
cmp
in
loop
data16
lock
ljmp
fildl
or
ret
aad
cmp
add
popa
popf
clc
mov
js
in
rcr
je
mov
mov
lret
jmp
in
mov
icebp
out
xchg
std
push
call
notb
scas
xor
lds
lock
adc
fcomps
and
sbb
mov
lods
inc
daa
es
daa
mov
data16
mov
jno
clc
rcrw
in
stc
pop
or
and
popa
rol
jne
shrb
pop
lods
xchg
pop
dec
cmp
dec
lock
inc
inc
jecxz
orb
mov
inc
hlt
push
jb
lcall
mulb
pop
andb
mov
inc
test
pop
dec
push
xor
cmova
xor
adc
clc
inc
test
inc
push
and
jmp
insl
add
add
xor
jo
cmp
adc
cs
hlt
sub
pop
sbbb
fnstsw
push
lret
and
pop
push
pushf
and
xchg
cltd
arpl
out
or
sti
xchg
jae
cmp
shlb
cmc
add
jnp
in
scas
cmp
inc
add
fildll
out
in
outsb
out
jno
mov
nop
std
fnsave
push
jnp
dec
mov
test
adc
popf
sarl
mov
iret
aad
shlb
aam
ss
lock
scas
js
fdivrl
sbb
insl
or
lds
add
xchg
not
jae
jae
push
xlat
or
sbb
lods
inc
pop
dec
mov
shll
imul
mov
add
into
sub
mov
push
or
xlat
outsb
ljmp
in
adc
jl
mov
sbb
xor
push
or
js
mov
or
adc
inc
cmp
sahf
and
daa
xchg
rol
insl
testb
push
imul
ret
aaa
into
sti
lods
gs
add
xor
ljmp
fnstsw
or
pusha
add
inc
test
mull
xor
in
jp
mov
push
sub
dec
adc
inc
aaa
aad
aas
sub
lahf
push
aam
imull
mov
pusha
es
xor
data16
stos
lods
add
xor
std
js
movsl
push
pusha
fidivrl
push
lea
push
ds
adc
subb
scas
pop
int3
mov
sbb
lret
lret
leave
add
rolb
sbb
xchg
cmc
repz
xor
icebp
fnstsw
cmp
and
mov
jbe
xchg
jns
xchg
mov
sub
mov
pop
dec
xchg
jl
popf
inc
mov
aas
out
stos
lods
repnz
negl
mov
fiadds
leave
test
test
pusha
call
stos
fwait
adc
adc
jl
in
out
add
cltd
imul
inc
sahf
leave
mov
sbb
cmpsl
loope
jns
repnz
hlt
push
push
pushf
dec
scas
lock
inc
adc
or
and
xchg
stos
ljmp
sub
xor
add
pop
cli
xchg
mov
iret
ret
outsl
insl
mov
and
sti
ljmp
sub
repnz
xchg
int
js
gs
xor
imul
sahf
or
pop
lret
adc
or
orb
cmp
or
cmpl
lret
stc
rclb
in
shr
pop
mov
aad
mov
xchg
out
movsl
adc
or
adc
int
clc
cmp
cs
lcall
dec
mov
mov
and
scas
and
xchg
jbe
adc
das
push
rcrb
enter
cli
loop
xorb
mov
pop
fldcw
mov
xchg
fsubp
jno
cmpsl
movsl
fcmovne
mov
in
cmpsl
mov
dec
icebp
mov
sub
stc
and
arpl
or
scas
fisubs
dec
mov
add
or
sub
jmp
rcl
mov
rorb
add
push
xor
xchg
aam
adc
dec
mov
and
jae
into
addr16
xor
mov
arpl
jnp
and
jge
aad
out
inc
fldl
fstpt
xlat
loop
ficomps
lret
enter
insl
rcll
cltd
ss
sbbb
ret
mov
test
mov
mov
sti
iret
jmp
and
adc
xor
cmpsl
sahf
sbb
iret
in
add
dec
aad
jo
jge
mull
rcrl
cmp
cmp
scas
inc
dec
jg
sbbl
sub
or
adc
mov
nop
mov
es
push
sbb
sbb
xor
cmc
jle
jmp
fists
mov
dec
loopne
xchg
push
or
subl
sub
lcall
mov
pop
push
loopne
dec
jae
push
dec
out
xchg
add
push
inc
mov
imul
jne
ret
cmpsb
cmp
xchg
mov
movsl
mov
mov
jg
test
mov
mov
xchg
lret
inc
insl
xor
into
mov
mov
les
push
das
pop
lcall
ret
push
movsl
jno
pushf
daa
inc
cmp
jge
aad
and
cmp
rcll
lcall
cmp
in
mov
frstor
cmp
aaa
pushf
aas
xlat
das
push
aaa
inc
cs
lea
mov
cmp
shll
or
dec
cmp
xchg
jp
adc
cmp
cmp
mov
ffree
sub
add
in
cltd
xor
sub
into
rolb
push
xchg
in
outsb
xchg
add
pop
pop
pop
jbe
out
into
pop
out
lods
ds
call
adc
pop
bound
sub
add
push
adc
arpl
out
push
mov
jae
xchg
lods
xchg
cld
clc
add
daa
lods
loop
adc
dec
sar
push
fdivrs
and
daa
dec
testb
push
imul
inc
xchg
popa
and
xchg
cmp
hlt
add
adc
cmp
lds
inc
clc
bound
jmp
mov
adc
xchg
cmp
les
pop
push
add
adc
mov
ljmp
or
and
loope
add
cmp
mov
mov
or
xchg
mov
rclb
outsl
mov
pop
fdivrl
jmp
push
jle
dec
pop
adc
jne
sti
pop
gs
ds
jne
jb
mov
mov
and
insb
bound
movsb
mov
sbb
sbb
ljmp
dec
jl
push
clc
jnp
imul
xlat
das
inc
test
fsubs
adc
loop
lock
ljmp
jbe
nop
aaa
ljmp
popa
call
mov
pop
or
inc
nop
mov
jg
out
js
jp
hlt
mov
int3
enter
loop
imul
loopne
imul
lea
or
ds
mov
pop
loop
jecxz
cli
mov
lods
push
outsb
jg
mov
jne
sub
push
push
pop
shll
jnp
jl
imul
imul
cld
out
ss
testb
dec
pop
cs
addr16
scas
and
inc
out
adc
sub
shlb
adcl
movsb
scas
outsb
push
rcll
sbb
xchg
movsl
in
sbb
stos
shl
inc
cmp
stos
mov
sub
or
jge
xchg
std
mov
repz
mov
xchg
fists
scas
enter
repz
rcrb
repz
insb
inc
pop
xor
movsb
mov
mov
add
pop
jle
and
sbbl
fiaddl
mov
das
sub
mov
aaa
or
lret
repz
sti
dec
lret
out
and
dec
imul
add
jmp
je
outsl
jns
mov
incb
sbb
xlat
and
lea
icebp
cli
aas
sahf
out
xchg
icebp
or
ss
adc
inc
mov
lret
or
pop
iret
shl
cs
jns
cmp
mov
adc
lods
ret
data16
mov
pop
mov
stos
clc
pusha
cltd
xchg
loopne
jecxz
pop
jb
jo
add
jnp
mov
gs
cmc
lahf
shl
and
outsl
sub
cs
mov
bound
sub
insb
push
xchg
stos
jb
push
pop
fwait
je
and
aaa
cmp
gs
sub
inc
sti
leave
out
xor
loop
xchg
out
inc
mov
inc
arpl
mov
mov
or
les
inc
sbb
mov
aaa
fldt
push
shl
cs
call
scas
loope
pop
mov
cmp
data16
or
outsb
in
test
out
inc
divl
dec
scas
out
call
popa
roll
fcoml
je
adc
ss
lods
jge
mov
pop
insl
jno
push
bound
inc
jns
ds
iret
negl
sub
fnsave
mov
sub
mov
xor
loope
shlb
fsts
scas
push
push
dec
push
xorl
hlt
sbb
mov
inc
mov
mov
or
mov
daa
cli
dec
adc
fldl
add
adc
jbe
scas
lds
stc
or
jns
lea
je
push
daa
mov
push
je
xchg
cmp
lock
xchg
fiaddl
cld
jo
in
mov
pop
into
add
fsubl
inc
cmpsl
adc
scas
inc
stos
loopne
test
push
ret
int3
stos
test
stc
pop
mov
pop
mov
xchg
sub
sbb
lods
rclb
andb
or
sbb
xchg
ss
subl
fwait
stos
sub
call
mov
add
sub
lods
jl
mov
inc
xchg
test
repnz
mov
cmp
popf
lcall
push
push
inc
xor
call
mov
push
push
mul
fwait
addb
mov
dec
xlat
fwait
pop
inc
pusha
mov
testl
dec
stos
or
mov
pop
gs
push
xor
pop
mov
int3
lret
mov
movsl
xchg
rorb
stos
mov
inc
mov
mov
std
sahf
inc
xchg
scas
mov
stc
stc
xchg
sbb
jmp
movsb
jp
mov
adc
jns
sub
cmp
in
or
push
stos
std
testb
and
sbb
and
je
fstl
pop
and
jecxz
jmp
mov
pcmpgtd
jb
out
loop
sub
xchg
push
sub
repnz
xor
repnz
nop
test
sbb
out
into
aas
outsb
ja
test
pushf
inc
arpl
leave
loope
popa
pop
cltd
setno
inc
xchg
xchg
push
js
call
xor
adcl
sbbl
dec
enter
and
js
pop
test
lret
adc
sub
sub
mov
stos
fmul
mov
mov
out
dec
arpl
aas
xor
lds
xor
jmp
in
jp
outsl
xor
inc
cs
lahf
add
mov
test
je
into
insb
idiv
popf
push
fdivs
push
in
into
pop
fldcw
inc
pop
orb
scas
xchg
in
fcmovnb
pop
rorl
xchg
push
mov
xchg
sub
je
mov
push
pusha
and
dec
cmpsl
into
mov
xchg
sub
rdseed
jmp
lods
rcrb
push
cli
les
pop
sarb
add
xchg
repz
stc
xchg
add
sub
sub
imul
movsb
popf
call
dec
pop
es
lcall
ds
and
sub
adc
outsl
pushf
sbb
inc
addr16
xor
xor
fwait
lock
sbb
mov
add
call
push
xchg
mov
outsl
js
in
push
repz
and
mov
imul
sahf
pop
xchg
push
pop
bound
out
pop
pop
mov
inc
in
push
adc
xchg
push
decl
int3
or
mov
mov
popa
sub
test
xchg
sub
xchg
outsb
mov
loope
mov
or
and
xor
push
mov
test
jecxz
sub
push
jge
push
enter
cmp
test
dec
add
bound
adc
adc
push
inc
adc
clc
xchg
movsb
clc
fnstcw
inc
xchg
rcr
inc
inc
xchg
inc
ja
push
popa
mov
or
dec
and
insl
inc
pop
arpl
and
cmc
imul
mov
cmpsl
enter
jg
addl
mov
ret
mov
jle
mov
jl
xchg
push
out
or
inc
push
bound
dec
fucomi
cmp
ja
lret
jno
cmp
cmp
std
out
push
pushf
cmpsb
cs
add
fmuls
mov
adc
mov
sub
or
sub
sarb
mov
fs
add
in
cltd
ret
mov
pop
je
ss
pop
sbb
inc
xchg
jno
aam
ja
testb
mov
xor
add
and
and
mov
inc
lds
pop
sub
adc
test
adc
sarl
mov
mov
dec
cs
mov
mov
mov
cs
push
lret
into
in
pushf
out
xor
das
mov
addr16
pop
push
fadds
gs
cmc
and
and
js
pop
fbld
push
xchg
push
hlt
and
test
lods
push
into
pop
jp
loope
inc
pushf
cmp
mov
jns
rcr
shll
mov
imul
movsl
out
xchg
mov
mov
push
inc
mov
scas
push
mov
xchg
lods
add
add
sti
xchg
xor
test
add
out
daa
imul
push
inc
insl
xorb
adc
xchg
sbb
cwtl
js
push
push
aaa
leave
aas
movsl
ret
idivl
xchg
pop
sub
lret
xor
roll
out
pushf
jns,pt
adc
and
es
push
dec
mov
sbb
out
in
sub
or
stos
push
pop
divb
push
rcrl
pop
jo
incl
add
jb
in
imul
pop
sbb
and
inc
and
pop
movsl
cmc
cmp
arpl
std
jo
pop
aad
rclb
dec
mov
push
cli
popa
mov
bound
inc
or
cmp
das
pop
je
or
mov
cmp
stos
pop
mov
arpl
inc
std
mov
movsb
hlt
test
push
fstpt
sub
add
mulb
addr16
pop
jae
pop
and
fs
mov
stc
test
inc
and
sbb
inc
xchg
fsubrs
pop
dec
es
adc
sbbl
stos
mov
cmp
dec
cmp
sarl
sub
mov
jns
push
cmp
daa
out
shll
sub
push
dec
adc
and
js
fsubs
jl
aaa
push
inc
out
out
jmp
push
mov
or
and
iret
outsb
decl
jl
xlat
out
push
cmp
fadds
push
push
enter
lcall
cwtl
int
sub
dec
sbb
test
mov
and
loopne
or
jnp
mov
sub
jbe
fstpt
daa
loopne
jae
sbb
push
fnstcw
fldt
dec
jle
mov
inc
mov
jge
sbb
lds
cltd
mov
stos
mov
adc
subl
pusha
pop
call
or
push
cmpsl
push
and
mov
in
je
push
enter
jb
dec
sub
mov
cmpsl
pop
sbb
push
push
sbb
sbb
insb
ja
sbb
lret
shl
pop
in
stos
andb
inc
inc
inc
xorl
in
jp
mov
xorl
dec
icebp
dec
popa
adc
fiaddl
mov
loop
sbb
xorb
or
js
jmp
jl
imul
jge
lock
mov
test
clc
fdivr
lret
mov
mov
bnd
js
push
inc
in
jno
scas
fsincos
push
push
pushf
pop
sahf
cmp
cwtl
jae
adc
repnz
and
dec
sbb
in
cmp
xor
or
jbe
push
imul
adc
inc
das
xor
inc
add
push
repz
xchg
dec
xor
push
out
adcb
jmp
cmp
add
sar
jg
xchg
addb
mov
add
loopne
cwtl
repnz
test
push
in
cld
push
push
into
xchg
iret
notl
cwtl
xchg
int3
or
dec
js
sbb
dec
pop
push
flds
test
leave
popa
das
mov
cmp
mov
das
sbb
push
or
repnz
addb
popa
push
fs
xorl
lds
cmp
pop
lcall
rcl
test
inc
mov
mov
ja
add
add
cmp
popf
in
cmp
sub
cld
dec
or
jmp
lret
adc
out
icebp
cwtl
dec
cmp
arpl
lcall
mov
fwait
xchg
loope
push
insb
xchg
cmp
and
xor
lds
lret
and
mov
sub
xchg
cmc
call
jmp
stc
mov
and
ds
jnp
dec
add
add
or
add
sbb
add
add
add
pop
add
add
add
addb
add
add
add
dec
add
add
inc
add
stos
in
add
lods
xor
add
add
loopne
add
add
add
pusha
xor
add
add
add
lcall
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
xlat
incb
add
add
add
je
xor
ret
mov
rorb
jbe
xchg
dec
fs
jg
mov
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
push
cmp
cmp
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
repz
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
or
into
outsb
mov
add
fmuls
pop
adc
sbb
out
repz
icebp
jae
pop
mov
rolb
cmpxchg
ret
mov
andb
adc
cli
adc
sbb
add
popa
cmpsb
or
or
xchg
dec
jne
ss
pop
or
adc
adc
adc
punpckhwd
sbb
lock
xchg
xchg
sbb
or
push
push
or
sub
lcall
insl
std
add
mov
sahf
adc
push
andb
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
repz
ret
imul
pop
add
pop
push
call
mov
cmp
subl
and
xor
int3
in
mov
ret
mov
shlb
mov
inc
push
and
jecxz
inc
sub
movsb
sub
add
push
push
je
adc
jnp
push
leave
hlt
add
popf
rorl
fwait
mov
mov
mov
mov
sbb
adc
sub
nop
sub
jmp
fs
pusha
sbb
xchg
js
xor
jp
push
xor
dec
pop
shll
push
out
fcompl
outsb
bound
imul
mov
shl
out
mov
inc
sbb
mov
mov
test
push
or
in
and
or
or
xor
cwtl
dec
jmp
jmp
inc
repnz
xor
pop
pusha
xchg
mov
pop
jno,pn
das
xor
add
mov
adc
push
mov
leave
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
or
ss
dec
jmp
xchg
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
jge
add
or
or
jmp
shr
add
cmp
mov
or
lea
mov
xchg
dec
sbb
inc
mov
cltd
jge
daa
test
adc
orl
sbb
pusha
jb
mov
add
or
add
lea
xchg
inc
imul
in
mov
lock
jno
hlt
add
fidivs
inc
or
push
lret
add
mov
dec
ds
mov
mov
sbbl
cmp
mov
xor
xchg
xor
inc
xchg
adc
out
push
or
push
pop
idiv
ljmp
adc
xchg
or
mul
jge
inc
out
pushf
test
xchg
sub
nop
in
add
push
call
xchg
push
sbb
cld
cld
jle
push
mov
or
outsb
mov
push
dec
mov
pop
pop
mov
jo
stos
dec
adcb
lret
add
or
pusha
pop
xor
adc
push
add
adc
cmp
out
and
or
push
sub
and
stos
in
scas
pop
adc
add
mov
stc
adc
sbb
or
mov
sbb
test
push
add
addr16
add
xor
cmp
push
or
sub
cmp
sbb
push
push
push
adc
dec
adc
lea
inc
cld
add
sub
fcmovne
push
inc
aaa
jbe
cwtl
add
lods
push
stos
add
nop
cmpl
je
es
inc
test
push
mov
cmp
mov
rep
cld
repnz
sbb
add
xchg
outsl
add
push
popa
aas
cwtl
lcall
sbb
call
cmpsb
add
mov
mov
inc
xor
push
dec
jnp
aaa
ret
and
push
call
mov
rorb
xchg
shrl
inc
xchg
or
sti
sub
es
ja
mov
inc
inc
inc
push
subb
mov
lea
push
mov
and
sub
xorb
loope
xchg
add
lea
push
aas
pop
adc
mov
sbb
enter
aas
jge
test
add
stos
sbb
shlb
or
jmp
or
aaa
fisubs
and
ss
dec
inc
add
add
movb
sub
sarl
movsb
mov
sub
sub
pop
inc
push
aaa
sbb
setge
or
pop
pop
pop
pop
pop
ret
adc
mov
sub
loopne
add
add
push
call
mov
inc
ret
rcll
add
push
jmp
ret
push
cltd
loop
xchg
xor
add
ret
in
pop
or
push
jne
scas
leave
rcrb
addl
inc
rclb
or
rcrb
add
or
fs
movsl
xor
push
and
ds
cwtl
pop
push
cmp
or
or
inc
xor
dec
pop
rorb
inc
adc
fisttpll
movsb
outsl
xchg
or
cld
pop
inc
pop
adc
add
cmp
cmp
xor
push
inc
add
sub
call
dec
mov
jne
mov
cmp
rorb
rclb
xchg
inc
push
push
add
add
add
int3
inc
jmp
enter
mov
cmp
sub
sub
pop
or
js
rcrb
aam
cmp
xor
sub
data16
jbe
push
mov
bound
sbb
sarl
xor
in
inc
pop
jg
cli
daa
fwait
push
xchg
fmulp
sub
mov
or
dec
loopne
cwtl
pop
bound
dec
or
clc
rol
add
movsl
sub
inc
jnp
or
cli
movsb
push
not
mov
or
cmp
mov
adc
adc
jecxz
push
sub
lock
push
aaa
xchg
sub
mov
adc
bound
jecxz
push
outsb
dec
sub
push
ss
pop
gs
adc
lds
mov
hlt
push
daa
dec
or
dec
enter
das
push
push
std
popf
push
in
lahf
rolb
sub
inc
sub
adc
push
in
jmp
lret
mov
cli
cmp
jne
push
stc
jmp
fidivl
jl
sbb
adc
push
pushf
dec
jecxz
cmp
fimull
push
inc
scas
or
sub
lret
fidivl
dec
inc
jbe
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
mov
xchg
pop
xchg
in
sbb
pop
mov
rclb
scas
or
jno
adc
loope
int
bound
test
xchg
dec
ss
test
adc
out
inc
leave
xchg
into
jge
pop
push
adc
shlb
testb
mov
sti
or
inc
test
and
jmp
push
dec
ds
push
inc
xor
dec
pop
mov
push
ret
mov
mov
sub
lods
popf
lea
push
outsl
in
repz
xor
sub
mov
dec
call
dec
or
inc
sub
repz
insl
sub
test
inc
sbb
mov
inc
cmp
orb
jl
prefetchnta
shr
pusha
loope
push
lret
jbe
insb
dec
xchg
cmp
sti
push
add
testb
mov
inc
push
xchg
cmp
mov
xchg
jp
and
cmpsl
sub
scas
jno
or
push
lea
loopne
push
xor
push
pop
cmpsb
hlt
lret
sbb
jo
insb
imul
sbb
gs
jae
dec
adc
and
std
mov
gs
ljmp
outsl
jae
das
insb
sahf
pop
outsb
lahf
je
bound
mov
imulb
out
mov
dec
cmp
xor
popa
insb
mov
sub
push
xchg
daa
je
mov
mov
dec
in
jecxz
popa
addr16
inc
outsl
cmp
cmp
js
data16
fidivrs
cmp
imul
dec
push
inc
rol
dec
popa
outsb
fs
add
xlat
mov
movl
les
jl
pop
imul
mov
jbe
xchg
lcall
stos
mov
xor
rorl
jmp
push
dec
cmp
dec
xor
jp
dec
pushf
or
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
pusha
push
add
or
add
cmp
add
add
insb
xor
add
add
adc
add
xor
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
