sbb
add
add
and
gs
pop
cmp
and
pop
xchg
hlt
loope
sub
cmp
gs
sub
push
test
lds
xor
jno
imul
outsb
push
neg
enter
push
test
lods
in
add
mulb
out
pop
jecxz
inc
ljmp
dec
xchg
add
cmc
or
gs
lea
mov
add
xor
mov
jge
in
jo
jg
sub
sbb
ficompl
mov
es
or
dec
jo
jl
xor
cmpsl
add
mov
and
dec
jmp
inc
daa
mov
xorl
pop
jg
dec
pop
mov
bound
dec
dec
sti
aam
push
arpl
movsl
cvtps2pd
sub
jg
rclb
aam
sbb
in
cltd
lods
fisubl
shrl
mov
icebp
mov
mov
jl
in
sbb
and
sbb
hlt
cmpsl
mov
pop
mov
jo
sbb
add
push
pop
ss
adc
imul
push
fsubrs
adc
mov
or
je
mov
add
jle
arpl
mov
mov
stc
jecxz
int
fdivrs
lods
fmulp
adc
push
push
arpl
xor
movsb
xchg
sbb
imul
add
sbb
roll
cmp
lahf
sbb
dec
subl
sub
xchg
test
xchg
mov
add
and
xlat
dec
mov
or
mov
xor
jb
pop
test
movsl
iret
mov
cmpsb
vminss
fidivl
mov
push
and
mov
scas
jmp
mov
adc
add
lret
into
leave
popa
js
leave
jne
outsl
es
jae
adcb
aas
xchg
push
arpl
icebp
mov
pop
xchg
push
cwtl
and
cld
sub
lods
out
mov
cmc
dec
leave
incb
adc
cmp
push
ja
lods
sti
push
mov
pop
sti
call
fbstp
pop
dec
mov
test
cmp
sbb
sub
jge
fwait
mov
pop
in
push
ret
lret
jle
add
mov
into
andl
sti
test
xor
stos
xchg
movsb
out
cmp
mov
pop
rorl
pop
adc
add
lret
xor
out
jb
xor
push
dec
dec
sbb
add
lds
xor
arpl
jp
mov
es
cmpsb
or
push
insl
lea
adc
xchg
fcomip
push
pop
or
mov
mov
int3
aaa
test
xchg
fstpt
xor
xchg
mov
bound
outsb
adc
xlat
dec
push
arpl
sub
jo
dec
sub
and
xor
ficomps
push
push
mov
mov
outsb
mov
cmp
pop
sarl
scas
and
and
aad
push
divl
xchg
mov
inc
fsubl
push
mov
das
xchg
cmp
or
das
je
fistpl
mov
jle
inc
inc
dec
jge,pn
scas
lahf
mov
aad
adc
sub
pop
dec
cmp
ss
mov
pusha
leave
push
loopne
ds
xor
mov
mov
xor
imull
daa
mov
std
outsl
xchg
aam
add
hlt
in
test
xchg
push
mov
test
imul
pop
jecxz
jmp
mov
adc
inc
mul
sbb
loop
pop
cmp
inc
and
add
or
test
lds
imul
add
mov
cld
fsubs
cmpsb
iret
inc
xchg
sbb
cli
or
and
test
xor
fidivrl
orb
aad
mov
rcrl
testb
jl
and
cmp
mov
push
clc
mov
xor
pop
pop
fiadds
cmp
std
pop
icebp
mov
or
xor
mov
jg
out
popf
cmpsb
jae
test
pop
push
jns
movsb
adc
dec
shlb
bound
fs
mov
jl
arpl
pop
lahf
dec
or
mov
pushf
push
push
jp
sub
clc
mov
mov
jmp
push
adc
xchg
shl
sub
dec
push
pop
add
mov
iret
push
stos
lcall
fidivl
mov
mov
test
in
mov
xchg
xor
sub
popa
pop
imul
mov
mov
mov
icebp
pop
inc
popa
cmp
inc
lock
mov
mov
cld
rclb
adc
xchg
adcl
sbb
bswap
cmp
cld
add
repz
push
cmp
fcmovnu
pop
sahf
cltd
popa
imul
test
out
sbb
pop
cld
lahf
nop
roll
in
aam
scas
aad
inc
ficoml
cmp
std
ja
mov
push
and
cmpsb
add
sub
mov
add
xchg
arpl
loopne
mov
dec
mov
shrb
push
jg
or
stos
js
mov
push
mov
xchg
pop
inc
xor
cwtl
jecxz
lock
mov
sub
fdivrl
inc
push
adcb
mov
leave
negb
add
shll
cmp
ljmp
xor
dec
pop
xor
xor
in
clc
push
popa
xor
pop
push
xor
or
adc
sbb
jge
xchg
dec
test
scas
add
push
mov
jl
adc
stos
xchg
sbb
push
jno
into
push
jb
mov
add
sbb
push
or
inc
into
popa
shl
and
in
jbe
test
xchg
push
movsb
roll
xchg
cld
and
imulb
scas
push
out
dec
inc
pop
ret
les
mov
nop
out
jmp
sbb
loope
ds
sbb
rcrl
sahf
out
fisubrs
mov
mov
lahf
sti
orl
ljmp
push
mov
fwait
xchg
cmc
cmp
pop
bound
outsb
jae
iret
inc
push
addr16
jge
dec
in
das
por
insl
fdivl
mov
dec
jbe
mov
insl
add
pop
insb
shl
lea
cmp
push
in
dec
and
repz
xchg
xor
jmp
outsl
pop
pop
pushf
xchg
imul
ja
stos
pop
test
aaa
in
add
jo
aas
adc
sahf
hlt
addr16
sbb
inc
push
pop
adc
dec
sbb
out
sub
inc
and
clc
sbb
outsl
adc
mov
jecxz
xlat
addl
lea
jnp
pop
pop
dec
in
out
into
adc
or
pop
push
xchg
gs
sub
dec
popf
jne
pop
cld
rorb
insb
cltd
jb
cmpsl
arpl
push
xor
pop
in
mov
sub
sub
or
or
cwtl
in
fcmove
fistps
je
rcrl
leave
loope
js
mov
lret
into
dec
into
test
test
imul
xchg
lods
sahf
les
nop
sub
inc
scas
xchg
scas
pop
or
push
adc
cmpxchg
jge
push
das
jle
jbe
or
pop
mov
add
nop
popa
movsl
lret
sub
out
jp
push
aaa
and
ret
lods
cld
inc
std
iret
movsl
imul
sub
into
in
popf
movsl
dec
loopne
sbb
and
hlt
out
pop
mov
mov
mov
add
fdivl
sbb
rcrl
and
arpl
and
inc
sbb
scas
popa
cmpsl
loopne
out
mov
fstpt
pop
adc
mov
jns
fisubrs
sahf
pop
add
mov
mov
fdivrl
ret
jae
sub
jno
sub
sbb
and
inc
cmp
aad
jge
fdivrs
out
push
aas
inc
scas
les
jp
clc
sub
std
jp
push
enter
das
pushf
mov
inc
pop
xchg
dec
les
inc
dec
xor
lock
adc
sbb
cmp
dec
inc
iret
jecxz
je
arpl
nop
mov
dec
add
pop
push
test
outsb
sti
and
jb
adc
sub
push
out
addr16
stc
cwtl
shrl
hlt
xchg
jp
pop
scas
das
xchg
push
daa
sti
lret
fldl
leave
cmpsl
adc
push
scas
cmpsb
and
mov
insl
mov
inc
push
stos
scas
mov
push
pop
adc
sbb
sarb
push
shrb
or
mov
sbb
jns
mov
inc
aad
mov
inc
inc
ds
sub
mov
das
pop
dec
aam
mov
cmp
jb
pop
loope
jb
js
or
mov
stos
into
loop
rorl
pop
cli
cs
int3
mov
sbb
push
dec
jecxz
int3
shll
loope
hlt
push
xchg
ja
sbb
dec
pusha
inc
dec
inc
leave
mov
push
push
sbb
clc
ss
mov
fcoms
inc
out
and
mov
ljmp
jne
pusha
cltd
in
mov
pop
fistpl
add
xchg
mov
mov
adc
stos
jp
xor
cmpsb
popa
ret
fdivrs
and
mov
mov
lret
cmp
sbbb
cs
push
jmp
out
call
cwtl
outsb
push
insl
push
repnz
sbb
js
and
xchg
sbb
clc
adc
add
or
mov
mov
bound
jge
mov
movsl
push
outsb
bt
shll
xor
rcll
jle
in
push
inc
andl
rorl
scas
shll
imul
out
test
xchg
rorb
sbb
and
shrb
inc
sub
mov
pop
rcrb
mov
out
ljmp
pushf
push
pop
xor
jno
adc
xchg
test
xchg
push
sbb
rcrl
jne
xchg
bound
pusha
pop
jns
mov
cmc
jbe
cmp
fstpt
xchg
in
mov
andl
cltd
mov
ja
pop
inc
add
loop
imul
xchg
fwait
je
push
das
dec
xchg
xchg
inc
aaa
daa
outsb
pop
push
cmp
add
pop
mov
insw
or
lcall
mov
push
mov
outsb
scas
or
fsubs
mov
das
fwait
xchg
fidivrs
aaa
test
sub
mov
jge,pn
lret
rdpmc
orb
fdivrp
mov
mov
mov
push
in
lcall
mov
fisubrs
lahf
xor
outsb
push
xchg
aam
mov
mov
and
adc
sub
mov
sbb
mov
adc
pushf
xchg
jno
mov
push
pop
adc
adc
sbb
and
mov
aad
mov
fs
mov
mov
xlat
repnz
nop
mov
aaa
testl
mov
pop
stos
mov
cltd
cmp
dec
xor
lahf
jb
mov
sbb
cwtl
lcall
sbb
jno
lea
ret
or
xchg
cs
cmpsl
and
sahf
sbb
adc
aaa
repz
jle
into
add
rclb
push
lcall
shlb
jb
sbb
sbb
fisubs
sbb
jecxz
xlat
in
mov
add
xchg
bndldx
dec
cmpsb
pop
ss
xor
mov
mov
sbb
and
addr16
add
cmp
and
mov
push
sub
cmp
das
xor
pop
loopne
sbb
in
enter
or
mov
mov
shrb
into
fadds
adc
inc
std
idiv
iret
push
push
lods
dec
xor
xchg
ljmp
aaa
jle
mov
rorl
call
outsl
mov
cmp
mov
std
xchg
mov
jecxz
cld
call
js
xchg
aam
mov
inc
imul
imul
inc
popf
cmp
add
mov
jge
sbb
inc
or
movsb
rclb
inc
add
mov
insb
cmc
fwait
cmpb
push
jbe
popf
xchg
fs
pushf
scas
and
inc
stos
push
and
popa
cmp
call
sub
test
es
repz
push
cmpsb
sub
push
push
insl
mov
cmpsb
pop
pop
and
lahf
xchg
scas
clc
or
add
leave
dec
sub
pop
aas
fisttpl
lock
pop
mov
lahf
inc
mov
arpl
jmp
inc
or
xor
pop
push
add
mov
pop
add
dec
and
vpmacswd
lahf
bound
scas
cmp
xchg
lahf
pop
into
mov
aaa
inc
jns
rclb
or
ss
jae
repnz
jg
jns
out
in
mov
pop
fwait
cmpl
sub
addr16
push
pop
les
lods
fsubr
mov
ret
sbb
fstps
xor
pop
jg
lods
pop
sub
add
js
imul
shr
std
push
and
sbbb
adc
dec
jp
enter
jne
push
lods
outsl
in
clc
push
aad
adc
insb
les
rcrl
adc
ret
aaa
dec
sbb
dec
addr16
xchg
and
mov
and
jae
and
in
jbe
data16
sahf
mov
jb
inc
jno
xchg
jae
scas
pop
mov
push
jo
mov
mov
push
fcmovnbe
xor
xor
insl
mov
and
out
inc
jg
mov
cmp
daa
pusha
push
out
sbb
mov
push
cmp
inc
sub
repnz
or
mov
das
fsubl
sbb
mov
push
mov
cmp
add
jae
sub
xchg
push
add
sahf
popf
mov
sbb
imulb
push
pop
ljmp
pop
lret
test
in
sti
ror
xor
cmc
pop
mov
mov
adc
xor
xor
jg
ds
test
inc
inc
rorl
out
test
inc
mov
incb
xlat
test
sub
gs
out
hlt
cs
push
jno
jge
loop
popf
int
iret
xchg
push
out
sub
hlt
scas
push
push
imul
sti
inc
mov
rolb
dec
dec
in
mov
imul
cmp
ja
mov
stos
pop
or
inc
rcrl
jne
xchg
xchg
jne
dec
jmp
call
mov
fidivrl
popf
inc
xor
nop
fiadds
subb
xor
add
fisubs
lods
fstpt
add
mov
popa
enter
push
popf
mov
mov
jmp
hlt
rorl
popf
and
stc
adc
leave
mov
pop
xchg
jecxz
aam
xchg
adc
rorb
or
lea
xor
mov
mov
jmp
cmp
gs
je
test
popa
pop
shlb
dec
popa
in
gs
insl
pop
inc
jb
leave
pusha
stos
addl
mov
fwait
or
jge
mov
mov
shll
inc
mov
and
mov
pop
ja
iret
aas
xor
addl
inc
add
sbb
mov
test
shlb
mov
add
add
cmp
dec
nop
adc
dec
cltd
js
dec
mov
popf
add
inc
jo
inc
inc
jno
clc
inc
inc
inc
adc
add
in
int3
xor
xor
mov
sbb
pop
mov
lret
jecxz
dec
jl
mulb
outsb
inc
pop
pusha
cmp
xchg
ds
daa
and
push
sbb
jne,pt
inc
popa
mov
and
dec
mov
fldl
xchg
test
pop
pop
ljmp
add
pusha
and
cs
ret
sti
dec
jecxz
cld
jo
cmpsb
push
xchg
int3
sub
pop
mov
lret
lcall
stc
sahf
jnp
fcomi
ljmp
push
lods
cmc
hlt
enter
pop
nop
mov
pushf
test
adcl
mov
jle
lock
adc
outsl
jb
pop
in
pop
mov
sbb
js
fisttpl
mov
add
inc
in
pop
pop
mov
iret
out
inc
dec
jns
pop
sub
push
mov
add
jae
inc
cs
jmp
outsl
mov
pop
pop
enter
sahf
bound
sub
add
hlt
ret
sbb
and
sbb
inc
jle
mov
sbb
or
repz
mov
pop
dec
xor
xchg
pop
lods
lock
inc
push
xor
fsubrs
out
mov
cmp
pop
cmp
push
in
ret
fwait
std
adc
cmpsl
shlb
aad
sub
jge
jmp
add
insl
or
adc
mov
push
adc
lds
subl
sbb
andl
lcall
fmulp
ret
test
push
mov
and
rclb
hlt
arpl
sbb
cmpsl
inc
mov
outsb
sbb
xorl
stc
loop
es
mov
out
test
mov
fidivrl
ficomps
fnsave
repz
mov
cmp
push
mov
pop
mov
add
mov
jnp
clc
popa
add
pop
jp
mov
adc
std
out
rcrb
sbb
lahf
jle
inc
cmp
aam
push
in
mov
sub
cmpsl
mov
xchg
outsb
aaa
xor
push
push
jge
rol
jb
xor
jbe
notb
lahf
jmp
push
add
out
add
dec
push
scas
jge
inc
push
stos
fstps
cmpsb
in
popa
sarb
addr16
pop
dec
cmp
xlat
inc
push
aaa
stos
lret
or
mov
call
lock
out
cmp
mov
pop
mov
outsl
sahf
push
and
or
pop
adc
test
dec
icebp
iret
mov
js
sbb
push
xor
loope
cltd
adc
cmc
dec
ljmp
orb
jns
ss
pop
jb
in
pop
cmp
fisttpll
fsubrl
mov
or
out
sub
dec
sbbl
imul
xchg
cmp
sub
xor
push
adc
mov
jge
mov
dec
pop
adc
loope
mov
push
pop
push
mov
and
movsb
rorl
ret
aaa
outsb
fucompp
ret
bound
int
test
dec
xchg
scas
pop
into
shll
and
pop
mov
iret
test
aaa
add
add
lret
pushf
fnstsw
and
mov
cmpsb
into
dec
xchg
les
jle
add
pop
adc
jecxz
scas
jo
push
test
pop
insb
push
add
inc
enter
fucom
repnz
xor
push
fcoml
xchg
mov
xor
loopne
pusha
scas
pop
fwait
sbb
lea
mov
nop
push
mov
ja
ret
mov
xor
push
mov
push
jle
cmp
jns
sub
cmp
lcall
cld
cmp
dec
scas
adcb
addb
imul
pop
stc
dec
mov
mov
rclb
push
jno
pop
jnp
imul
mov
sbbb
lahf
pop
add
pusha
jmp
daa
cwtl
pop
mov
cwtl
ss
mov
unpckhps
pop
jno
and
lds
stos
lock
popa
pop
mov
imul
in
adc
xorl
pusha
enter
xlat
outsl
xor
addr16
aad
add
or
push
aad
push
leave
pop
int
insb
push
lea
push
mov
nop
push
scas
orb
and
out
ret
je
ss
xor
mov
insb
push
xchg
dec
pop
cmc
and
aam
add
call
or
cld
sti
arpl
mov
outsb
fistpll
jne
out
aad
fidivs
adc
sub
sub
orl
aaa
mov
lcall
jmp
adc
add
pop
jne
inc
rolb
popf
push
fwait
out
xor
enter
mov
mov
in
lahf
popf
push
rol
sbb
push
mov
add
adc
fldenv
push
shlb
addr16
pop
sahf
sarl
cmc
mov
pop
adc
xchg
das
imul
or
dec
pop
aas
call
jno
add
push
ja
rcrb
sub
ret
pop
adc
cmp
cmp
jnp
mov
pop
hlt
cmp
or
subl
loop
jp
js
xor
into
adc
push
xchg
jae
hlt
test
sub
loope,pt
int
push
pushf
sbb
sub
sbb
jp
add
sub
xchg
div
mov
lock
test
xor
addr16
or
jae
lock
int
or
cmp
int3
cmpsl
ss
sbb
cli
push
xchg
adc
lcall
cmp
lret
les
pop
sub
and
iret
cmpsb
mov
sti
cmp
mov
cmp
jmp
add
or
push
mov
xor
cs
sbb
or
sub
orb
repz
and
inc
cltd
push
xor
add
pushf
stos
jae
sub
in
mov
sbb
and
dec
test
cmp
cmpsl
fs
adc
subl
leave
and
add
or
mov
bnd
inc
sahf
lea
or
movsb
test
les
popa
lods
inc
and
in
arpl
daa
adc
or
sub
cmpsb
out
pop
mov
rclb
stos
lods
call
push
xor
xor
sbb
add
call
adc
mov
test
adc
push
dec
in
lret
pop
or
push
cmpsl
mov
pop
ret
sbb
sub
cld
fcomps
out
aad
bt
aaa
jns
test
sub
cmp
xorb
mov
int3
sti
cmp
adc
imull
dec
pop
cmp
push
sub
int3
sar
mov
adc
cwtl
pop
dec
mov
cmp
out
bnd
xchg
lcall
add
imul
cmp
push
xchg
jle
cmc
add
jg
cmp
repz
mov
xchg
inc
push
iret
loop
cs
jmp
dec
mov
jecxz
popa
or
std
xchg
loop
adc
sbb
lods
paddsb
pop
gs
mov
into
cmpsl
mov
sbb
popa
arpl
push
xchg
int
and
or
sbb
pusha
and
mov
cmc
sub
andb
cmp
and
xor
outsl
inc
mov
push
push
and
lahf
hlt
daa
mov
jge
fcoms
cmpsl
jbe
in
fcoml
sub
loope
xchg
jbe
sub
sbb
xor
jmp
es
mov
cmp
lret
and
fisubrs
pop
mov
pop
shll
adc
iret
cmp
jge
nop
std
jnp
ja
cmp
push
inc
pusha
loopne
pop
adc
int3
and
xor
nop
adc
sub
pop
cs
jl
test
mov
and
fadds
test
sub
loope
imul
outsl
adcl
inc
movsl
jne
push
popf
scas
sahf
push
insl
or
push
mov
cmpsl
or
lret
sub
icebp
and
fcmovnb
cwtl
add
xchg
std
add
lret
jb
shlb
add
xor
sbb
scas
add
fs
sahf
gs
imul
sub
shrl
and
push
mov
sbb
outsb
arpl
sbb
icebp
sbb
enter
out
xchg
dec
dec
add
loope
mov
mov
notb
jg
insb
adc
and
xchg
lods
xor
in
mov
sbb
dec
adc
adc
pop
mov
dec
mov
les
jne
shl
aaa
enter
loop
push
nop
mov
icebp
mov
lea
rcll
sti
pop
lock
data16
mov
jecxz
and
jb
pop
daa
shrb
lea
in
xchg
or
fisttps
push
divb
push
jge
icebp
inc
jge
andl
icebp
test
into
mov
iret
xchg
mov
jbe
dec
cld
push
xchg
inc
mov
push
pop
fcompp
or
adc
popf
push
mov
xchg
cmp
jns
lret
mov
cmp
and
cmpsl
sub
stos
pop
jae
cmpsl
insb
xchg
jae
scas
pop
mov
jl
test
aam
jmp
sbb
xor
xchg
clc
pop
scas
xor
add
pop
pop
xchg
adc
ss
pop
cltd
jge
cmp
lods
add
mov
mov
push
mov
int3
push
jp
jp
sub
hlt
lea
xchg
bound
sbb
je
pop
cmpsl
sub
pop
mov
mov
mov
test
test
sbb
int
push
add
test
lret
mov
xlat
mov
nop
in
in
pop
cmpsb
sbb
imul
int3
stos
les
hlt
pop
lahf
cli
cmp
or
xchg
cmp
or
inc
cltd
inc
aas
xorb
xchg
inc
popf
popl
inc
push
call
test
cld
outsl
clc
movsl
sbb
and
inc
or
sbb
xor
pop
enter
jmp
les
push
lcall
jo
pop
xor
xor
pop
adc
fst
in
int
rorl
push
xchg
test
sub
das
inc
xchg
or
es
int
int3
mov
loop,pt
adc
pop
xchg
test
push
jno
lods
shrl
mov
jp
mov
incl
lahf
jmp
lret
xor
inc
mov
mov
iret
popa
mov
jbe
inc
out
jno
fldt
rorl
or
repz
jmp
jb
xchg
sahf
dec
es
outsb
sbbl
nop
aaa
movsb
sub
fmuls
stc
pop
mov
pop
in
pop
movsb
or
insb
fldcw
sub
pop
push
mov
scas
or
dec
mov
mov
jo
jnp
jbe
ljmp
aas
stos
jecxz
test
lds
xor
lret
adc
cmp
lret
repnz
mov
add
mov
movsl
or
jbe
mov
aaa
popa
adc
cltd
mov
jbe
mov
daa
or
divb
outsb
mov
jge
push
inc
into
push
or
idivl
imul
and
jge
cmp
push
mov
pop
insl
push
xor
dec
shrl
nop
mov
push
idiv
fmuls
jg
xor
ret
jo
add
inc
sti
mov
mov
xchg
push
test
cwtl
int
cli
inc
and
xor
mov
adc
cmp
cmp
mov
jns
loopne
mulb
bound
push
popa
in
mov
push
int
push
clc
xchg
aas
mov
out
pusha
mov
stos
mov
sbb
iret
mov
test
push
aam
push
pop
xlat
movsl
test
movsb
mov
inc
mov
mov
inc
ret
add
sbb
loopne
in
pop
xor
adc
push
aam
xor
and
fdivrl
jne
or
add
lahf
fs
aad
pop
insb
or
inc
adc
mov
je
and
pop
and
pop
inc
cmpsb
and
nop
cmpsl
out
dec
imul
sbb
or
adc
push
fimuls
mov
push
scas
gs
or
call
mov
push
mov
inc
fucomp
jno
cmp
aam
stos
mov
mov
lea
test
mov
lods
jecxz
cmp
mov
repz
sub
jmp
or
lea
inc
and
popf
push
cmpsb
jno
ret
testl
in
push
pop
popa
xchg
mov
or
cmp
mov
mov
jo
ljmp
pop
pop
adc
add
mov
jmp
stos
adc
xorl
out
cmp
pop
or
or
mov
add
test
adc
cmpsl
mov
mov
stc
jo
lock
psllq
adc
jbe
xchg
fldenv
xchg
xchg
popa
jmp
sub
outsb
dec
adcl
adc
xlat
pop
es
fisttps
adc
sbb
cmp
push
fistpll
aaa
dec
or
in
adc
dec
call
sub
jle
jge
pop
add
xchg
test
and
push
subl
testl
js
mov
popf
mov
and
xchg
clc
add
fsubl
mov
push
xchg
fs
shll
aas
in
add
sub
lcall
xor
cli
dec
push
int
mov
or
sbb
and
notl
xchg
fnstsw
divl
sbb
mov
mov
and
cmpsb
sahf
jg
stc
jmp
and
mov
lret
test
sub
sti
rolb
test
xor
mov
dec
push
repz
shl
jmp
hlt
ds
sahf
out
adc
mov
pop
mov
push
inc
xor
outsb
mov
arpl
jne
movb
pop
mov
mov
fistpll
cmpsb
and
sbb
dec
xlat
mov
sbb
pushf
mov
xchg
sub
mov
fisubrl
fcompl
ljmp
xor
pusha
jmp
jle
xchg
cwtl
pop
addr16
pusha
push
push
cmpsl
push
imul
sbb
aad
lret
add
dec
scas
push
popf
bound
mov
mov
sub
icebp
rcll
popa
loope
or
outsb
push
xchg
sbb
nop
jo
mov
cmp
aam
shll
std
sarb
xor
fstp
lock
loop
mov
into
mov
push
jge
pop
insb
into
mov
mov
insl
jae
mulb
into
lods
es
push
dec
mov
pop
outsb
popf
jnp
mov
ss
and
xor
push
inc
and
jne
sub
mov
mov
inc
test
cmpsb
dec
xor
xor
adc
xor
fstpt
mov
jp
add
scas
mov
dec
ret
fiadds
xchg
loopne
jmp
mov
push
inc
into
jbe
mov
or
fstps
and
outsb
call
lods
push
sub
jge
lods
leave
nop
xor
jnp
daa
cmp
add
sub
adc
xchg
sub
lret
inc
outsb
int
in
lret
insl
lret
jmp
scas
xchg
outsl
scas
in
enter
sub
push
addb
shl
rol
jnp
add
pop
int3
xor
je
or
das
fucomi
icebp
out
lret
dec
cli
popf
sbb
add
push
inc
out
lock
pop
xlat
mov
cmp
and
out
pushl
jne
jge
shrb
roll
cs
sub
sub
mov
fsubrs
sbb
cli
and
xchg
imul
test
in
add
imul
rcrl
ljmp
cmp
xchg
sbb
mov
int
fsubs
xor
insl
out
enter
mov
xor
pop
mov
ret
pushf
std
mov
out
add
pushf
lods
out
aam
lret
jmp
dec
mov
pop
mov
pushf
cli
dec
mov
lock
pushf
xchg
mov
into
pop
pop
inc
insb
mov
xchg
xchg
pop
cmpsb
out
jo
mov
rorl
pusha
and
add
adc
dec
outsb
out
add
inc
pop
push
push
dec
ss
test
mov
inc
arpl
sbb
cmp
or
outsb
aad
aam
xor
hlt
popf
insl
pop
sbb
jmp
xchg
and
jno
or
sbb
adc
cli
ds
scas
adc
adc
int3
or
outsl
mov
mov
shlb
mov
mov
cmpl
push
or
aad
pop
jns
or
out
dec
ja
ret
cwtl
mov
sbb
jecxz
sub
fildll
adc
cmp
mov
sbb
repnz
in
sbbb
sbb
inc
pop
nop
sub
mov
mov
in
mov
dec
mov
mov
fninit
jne
sti
or
nop
sbb
sub
fcomip
sbb
in
xchg
les
push
xchg
dec
mov
repnz
data16
mov
loop
mov
ficompl
loopne
inc
data16
sti
dec
mov
inc
push
into
xor
push
sahf
js
fnstcw
into
lret
push
cmp
xchg
xchg
jmp
in
fwait
jmp
fdecstp
in
enter
adc
out
xchg
inc
pop
cltd
jnp
lods
jbe
adc
das
iret
call
stos
cmp
pop
jg
xor
jno
ss
and
add
loopne
test
mov
mov
push
stc
ss
imul
xor
clc
cmp
jle
sti
cli
outsb
stos
cmp
push
sbb
fwait
jae
push
jmp
insl
imul
jnp
lcall
mov
js
or
add
lcall
push
out
sbb
dec
leave
in
arpl
pop
mov
mov
xor
cld
or
sbb
dec
cli
pushf
sbb
inc
push
cwtl
mov
insl
push
xchg
mov
xor
cmpb
mov
mov
mov
push
xchg
int3
cs
dec
xlat
push
xor
and
loopne
stos
adc
and
push
bound
mov
outsl
jg
ret
mov
dec
xchg
in
into
rorb
or
adc
outsb
lods
fiaddl
cmp
mov
in
fdivrp
xor
mov
stc
mov
jmp
lret
mov
xchg
sbb
addr16
xor
jmp
out
jg
pop
lahf
xchg
icebp
inc
sarl
sahf
mov
pop
ret
cmp
or
xchg
bound
in
and
in
mov
mov
aaa
add
std
outsl
sub
pop
xchg
aaa
inc
ss
xchg
das
xor
ret
movsb
fisubs
cmp
lret
test
pop
enter
xrstors
xor
adc
inc
push
xchg
cli
enter
xchg
adc
and
jo
sti
pop
jno
xchg
jne
push
xchg
out
mov
mov
je
clc
addl
push
cmpsl
jmp
cmpsl
cmp
ja
fucomip
push
pop
jo
adc
pop
lea
inc
mov
xchg
rolb
nop
shll
pop
sub
es
pop
jae
mov
in
scas
clc
lock
vrcpss
xor
fsubr
mov
and
dec
repz
ficoml
ficomps
jg
dec
stos
jbe
adc
jae
daa
mov
jbe
mov
push
jns
mov
and
cli
shlb
cmp
xchg
push
add
test
sub
sbb
lret
or
arpl
sbb
fs
popa
stos
and
rolb
jno
rcrl
jmp
dec
adc
xlat
out
lods
aas
xor
insb
push
or
mov
in
fdivrs
lcall
popf
sarl
lahf
push
lret
pushf
dec
scas
push
addr16
xor
mov
jo
faddl
addr16
out
sahf
int3
lahf
xor
jmp
movlps
mov
or
xor
sbb
rcrb
fs
sub
inc
lods
or
push
repz
les
or
out
jbe
cmp
sub
inc
test
sti
push
push
jo
int3
pushf
fs
xchg
and
fidivrl
push
mov
jae
push
mov
frstor
xchg
dec
loopne
mov
std
imul
mov
xchg
call
scas
fldcw
mov
fisubl
and
in
cmp
repnz
xchg
sbb
mov
aam
icebp
test
push
dec
loopne
jne
pop
push
pop
test
and
adc
outsl
roll
fsubl
dec
or
xchg
lret
into
shll
push
mov
mov
push
jns
ljmp
mov
xor
xchg
js
das
or
jle
into
add
out
fmull
pop
dec
stos
test
out
jbe
fwait
push
enter
aad
cmpsb
scas
faddp
inc
inc
mov
into
push
or
sbb
jns
data16
mov
jno
xchg
mov
pop
imul
movsl
xlat
lret
std
inc
dec
or
xlat
test
mov
dec
mov
mov
mov
dec
in
imul
out
mov
xchg
aas
dec
and
lds
cmpsb
loope
jmp
pop
dec
push
xor
inc
push
lods
les
adc
sub
cmp
cmp
ret
stos
sub
and
xchg
sub
push
cmpsb
ds
lahf
xchg
mov
stos
push
mov
out
daa
pop
pop
mov
xchg
jns
mov
and
or
arpl
in
call
jmp
mov
aam
pop
inc
int
pop
adc
dec
add
aaa
scas
fistl
mov
cwtl
add
dec
inc
or
hlt
or
mov
sysexit
loop
add
scas
and
xchg
lahf
xchg
mov
cmpsb
mov
ret
test
int
cmp
cmpsl
jecxz
jns
mov
push
xchg
test
dec
and
cmp
xor
js
or
leave
sbbb
bound
loopne
sti
out
jl
sahf
xchg
flds
mov
pusha
mov
sub
xchg
aam
icebp
and
add
ss
mov
std
movswl
out
cmp
pop
add
adcl
push
push
lret
sub
cmp
cmp
mov
sbb
daa
insl
fstpl
repnz
pmuludq
in
sbb
ds
and
jnp
pop
loope
ljmp
or
fucomp
cwtl
pop
call
xorl
mov
add
ret
xor
lret
fistpll
leave
scas
cmp
cmp
shl
push
stos
and
aas
or
iret
dec
dec
xor
jmp
sbb
jge
cmp
pop
nopl
out
lea
sub
aam
mov
and
sbb
mov
mov
scas
cs
cld
faddl
les
rcrl
das
lock
mov
dec
call
push
out
aad
inc
push
imul
mov
std
cmpsl
imul
leave
addb
push
das
dec
sti
daa
xor
movsl
dec
mov
jnp
or
push
out
jmp
leave
adc
cwtl
xor
jo
dec
popf
addr16
adc
fisttpll
loopne
jns
jnp
out
std
mov
dec
clc
sub
jnp
aam
scas
mov
lds
jge
cmc
mov
pushf
xor
mov
popa
shlb
inc
pop
fcoms
sub
sub
pop
loop
mov
or
ret
loop
ficompl
push
fiaddl
scas
or
aad
pop
mov
jno
pusha
cwtl
mov
nop
jg
lods
adc
push
addb
xor
xchg
ret
xor
xor
jmp
mov
jl
cmp
test
iret
scas
dec
rol
mov
fisubs
and
dec
sub
in
ss
jge
dec
push
mov
lret
mov
push
lret
insl
mov
cwtl
jae
mov
loope
jmp
mov
andl
jg
inc
jmp
movsl
push
and
movsl
aas
mov
cmp
or
xchg
xor
dec
push
and
lahf
test
inc
out
fucom
dec
cmp
lea
out
xor
xchg
bound
push
xchg
add
rcll
pop
mov
insl
inc
add
popa
pop
or
xchg
add
fwait
jo
stc
rol
mov
mov
adc
dec
pop
mov
pusha
ret
sbb
adc
mov
movsl
jmp
cli
jbe
cld
pop
pop
sbb
movsb
addb
js
mov
mov
fs
and
addb
les
sbb
and
mov
mov
xor
imul
cmp
pushf
ss
pop
xchg
xlat
mov
call
gs
and
xchg
scas
push
mov
scas
pop
enter
lret
jns
outsb
test
push
rclb
inc
cs
mov
or
pop
mov
inc
dec
imulb
lods
xlat
dec
pop
out
push
je
sub
mov
rol
xchg
loope
mov
xchg
jle
pusha
add
xor
dec
sbb
push
imul
push
aas
stos
push
dec
stos
cmc
or
popf
sbb
std
xchg
fs
xchg
cmpsl
loop
leave
outsb
stos
or
xor
cmpsl
fsubr
adc
orl
je
inc
daa
imul
push
pop
dec
sub
loop
push
flds
outsl
pop
mov
jg
inc
addr16
int
jae
fidivrs
cmp
xlat
mov
xchg
lds
mov
lock
lahf
add
mov
scas
inc
mov
and
pop
fs
dec
out
shrl
mov
loopne
iret
test
sti
cmp
stc
bnd
jnp
adc
jle
inc
sbb
inc
pop
pushf
leave
xor
insb
insb
sarl
mov
rorb
mov
gs
or
lock
sbbl
add
in
test
push
jle
sarb
push
gs
push
mov
subl
call
adc
inc
or
call
sbb
scas
xchg
dec
and
cli
ret
xchg
mov
push
ret
cmp
leave
bound
fs
int3
pop
xchg
subl
rcr
call
pop
or
jle
dec
cltd
sub
cmp
push
mov
xor
cli
outsb
popf
lock
dec
jbe
push
dec
or
dec
mov
mov
scas
fucomp
iret
adc
push
mov
out
movl
dec
and
fadd
repnz
or
mov
dec
jecxz
pop
adc
out
lods
fdivs
or
xor
mov
inc
jge
outsb
cmp
xchg
xchg
dec
mov
imul
sbb
int
mov
dec
or
daa
mov
outsl
addr16
shll
arpl
mov
inc
xor
jb
pop
adc
arpl
les
inc
dec
mov
add
xchg
out
adc
fiaddl
push
enter
aam
scas
shr
cs
push
int
jb
and
sti
out
popa
pop
addr16
jnp
xor
sub
aaa
aaa
lds
push
jle,pt
push
ljmp
xchg
imul
push
ds
adcl
lahf
loopne
loop
xlat
into
imul
mov
mov
call
scas
ret
stos
push
push
push
xchg
int3
mov
mov
pop
pop
inc
out
iret
ja
push
mov
push
ljmp
aas
mov
mov
jae
cli
mov
jnp
les
cs
or
pop
out
dec
cmpsb
jg
scas
jg
rcr
adc
out
out
push
inc
popa
pop
jo
mov
sbb
in
bound
mov
in
lret
test
push
adc
mov
enter
subl
adc
fs
xchg
out
jmp
lods
in
cmp
push
push
shlb
cmp
and
dec
mov
xchg
inc
mov
lcall
inc
adc
xchg
in
icebp
cs
icebp
testb
mov
test
cwtl
adc
jecxz
mov
mov
push
out
mov
add
mov
in
pusha
mov
xchg
andl
adc
insl
ja
sub
add
xor
and
lret
std
pop
sbbl
mov
pop
pop
jo
ljmp
sub
les
loop
xor
sarl
popf
negl
xor
jg
dec
inc
push
push
mov
rcrl
cmp
test
stc
stos
cwtl
dec
out
add
cmp
filds
or
out
mov
adc
call
int
outsl
sub
sahf
mov
repnz
and
mov
inc
or
and
int
push
cmc
mov
mov
data16
adc
movsl
dec
dec
xchg
sbb
or
lcall
roll
pop
ds
ds
int3
dec
sub
test
dec
repz
aam
mov
mov
sub
push
test
inc
lods
pusha
push
inc
insb
pushf
push
sbb
scas
or
dec
xchg
sub
or
stc
mov
int3
lods
jp
stc
sbb
popw
or
clc
lret
clc
js
xchg
aad
in
bound
js
movl
dec
ss
je
push
xchg
mov
and
jmp
bound
aad
add
cld
push
jno
or
outsb
push
adc
mov
ds
or
cmp
test
ljmp
pop
divb
cmp
movsl
cli
gs
jg
inc
xor
mov
fcmovnb
and
xor
xchg
cld
int
push
arpl
pop
inc
test
test
xor
and
pop
inc
add
add
lock
nop
lock
stc
sbb
cmp
enter
push
loope
dec
mov
adc
or
nop
loope
fcmovnbe
pop
cld
or
pop
xchg
lods
add
sub
mov
int
dec
xchg
iret
xchg
test
xchg
pop
push
int
and
inc
jne
sbb
ds
int3
or
cmc
repnz
shll
inc
bound
adcb
fsubrs
dec
add
xor
mov
jae
rcrb
pop
push
xchg
mov
les
mov
sub
pop
movsb
adc
subl
jecxz
mov
sub
push
mov
mov
repz
and
inc
in
outsl
fnsave
ret
cs
push
sub
jmp
xchg
pushl
xor
addr16
cmp
outsb
inc
repnz
popa
xor
cltd
mov
mov
xchg
fldl
incb
cltd
mov
or
mov
jecxz
jmp
notb
popa
xor
test
daa
xor
push
decb
lahf
push
int3
dec
adc
mov
pop
icebp
cmp
sub
in
mov
xchg
fdivr
sbb
scas
lret
dec
lea
call
in
mov
jmp
pop
insl
mov
or
in
cmp
sbb
push
sbb
jge
xor
popa
rcr
or
pop
jge
mov
sub
sub
xor
or
sahf
loopne
sub
lods
mov
ret
pusha
sub
fsubl
push
pop
jbe
cmp
jmp
mov
xchg
dec
adc
data16
dec
sbb
ja
push
push
cltd
or
push
in
or
mov
mov
pop
sub
jl
stos
jmp
sub
xchg
push
out
into
jp
inc
xchg
rcll
pushf
xor
sub
movsl
ror
mov
xchg
add
sbb
insl
mov
xchg
hlt
and
jne
xor
mov
push
xchg
lock
rorb
cmp
fwait
add
mov
and
xchg
fdivl
data16
mov
pop
jae
pushf
out
ret
addr16
lds
fmulp
aas
push
mov
fwait
lock
xlat
test
arpl
daa
fs
les
mov
movsb
shlb
insl
dec
and
xor
xor
pop
jecxz
xchg
into
fwait
push
push
fmuls
lcall
scas
push
ljmp
mov
push
imul
repnz
sbb
cmp
adc
cwtl
pushf
add
insl
add
fstpl
sub
mov
mov
gs
inc
jl
pop
xor
mov
daa
or
pop
add
adc
int3
xchg
loopne
mov
add
femms
aam
icebp
mov
adc
push
mov
shrb
notb
mov
add
inc
jnp
imul
jns
iret
outsb
decl
jo
inc
add
daa
xor
or
ret
adc
ficoms
in
out
mov
fwait
cmp
out
cld
movsb
sbb
sti
jg
push
sub
shrd
cmp
cmpsl
mov
inc
push
push
pop
shlb
cmc
mov
dec
xchg
dec
pop
pop
adcb
and
outsl
sbb
mov
jg
xchg
push
cmp
dec
dec
iret
aam
mov
inc
mov
xchg
jbe
das
dec
gs
scas
cmpsl
sti
adc
push
xchg
sub
out
and
insb
adc
pop
aas
push
pop
sub
push
jl
lahf
fwait
in
or
fcoml
loope
cltd
sbb
inc
inc
out
in
cwtl
stos
movsb
or
mov
aas
fdivs
fiaddl
add
or
pop
ss
xor
shrb
or
adc
xchg
mov
inc
xor
pop
xor
test
mov
mov
lret
fstpt
addr16
fldenv
dec
faddl
mov
movsl
mov
cmp
jnp
mov
sub
mov
faddl
pushf
or
mov
add
pop
hlt
and
pop
inc
lods
mov
repz
pop
sbb
dec
jp
dec
mov
mov
into
scas
orl
adc
and
test
add
loopne
jp
mov
add
pop
shrl
push
xor
add
or
and
negb
pop
push
test
mov
fcompl
dec
loop
sti
shlb
and
or
je
pushf
popf
pop
outsl
enter
cwtl
rorb
pop
mov
leave
mov
hlt
pop
sbb
pop
jmp
push
dec
xor
adc
je,pt
push
nop
fstpt
int3
push
shrb
jmp
mov
cmp
xchg
rcrb
cmpsl
adc
and
dec
xchg
jge
xorl
sbb
arpl
cwtl
xsaves
cmpsb
push
jne
jmp
inc
call
or
pushf
dec
push
xchg
out
je
mov
pop
push
xchg
scas
jb
sbb
fwait
pop
ss
cwtl
ret
sbb
arpl
pop
and
shll
daa
sti
mov
imulb
xlat
cmp
andl
jne
dec
sub
push
mov
pop
leave
lahf
pop
in
shl
loop
jo
enter
sub
xchg
cmc
and
ror
testb
ja
xor
aad
addr16
adc
sub
clc
cld
adc
pop
add
adc
mov
mov
jns
fwait
push
test
jecxz
cmc
dec
jnp
xchg
mov
jecxz
lds
xchg
ljmp
mov
mov
mov
jl
shrl
addr16
lea
cmp
adc
xor
bound
in
int
ja
mov
inc
jnp
fsubp
and
mov
imul
out
rcll
cmp
add
push
adc
add
pop
cwtl
scas
sarl
int
aas
scas
mul
pop
lcall
cmpsb
jecxz
sbb
shl
jle
push
fists
jbe
std
xor
push
mov
push
jb
outsl
fs
mov
xor
sub
pop
orb
ja
jns
xor
lcall
idivb
scas
mov
inc
andb
mov
and
pop
shrl
popf
ror
clc
lods
loopne
mov
dec
xor
add
jnp
nopl
rclb
jmp
inc
mov
or
jle,pn
jnp
push
es
adc
jmp
jecxz
or
dec
jg
aad
ljmp
mov
sbb
notl
movsb
push
fstps
int
add
outsl
orl
arpl
mov
sbb
mul
mov
aad
sub
inc
cmp
pushf
xchg
hlt
lret
stos
inc
or
lret
adc
lock
dec
fildll
fmuls
pushl
adc
sbb
popa
cli
push
and
jle
pop
mov
mov
dec
pop
add
std
mov
orb
out
inc
and
cwtl
xchg
mov
ja
cmp
jge
lret
loopne
out
cmpsb
mov
xor
fdivrl
jne
aaa
xor
test
push
jb
addr16
add
mov
cmp
xchg
mov
xchg
and
ja
or
and
cmc
push
jmp
lods
xorb
sbb
inc
addb
mov
scas
dec
int3
lcall
jno
mov
inc
dec
push
je
sti
insl
mov
mov
das
cmp
repnz
aaa
sbb
jnp
cmovns
movsl
jl
and
sbb
sbb
and
xor
push
lcall
sbb
cmp
fisubs
lock
mov
cmpsb
mov
push
negl
jne
jecxz
daa
cmp
pushf
daa
idivl
dec
ret
sub
nop
ret
pop
or
cmpsl
push
push
sub
xor
lret
je
or
sbb
stos
fs
movsb
sub
push
or
je
add
adc
cmpsl
je
clc
stos
sarl
ffreep
aas
xor
popf
mov
dec
pop
mov
pushf
pop
sub
push
fisttps
mov
scas
arpl
add
in
bound
and
pop
and
repz
jge
sub
dec
sub
pop
mov
sub
inc
mov
sub
or
add
mov
adc
pop
mov
xor
stc
jae
ficomps
xor
xor
or
int3
jae
out
pop
xlat
adc
and
sbb
push
shrl
mov
test
call
shll
sub
outsl
inc
aad
loop
or
lcall
mov
mov
loop
xchg
mov
lock
inc
js
inc
into
ljmp
dec
and
pop
add
dec
xchg
cltd
insb
in
mov
fadd
mov
mov
adc
push
clc
cmp
idivb
movsl
mov
xchg
fdivp
mov
fistpll
call
loopne
mov
push
mov
das
jnp
push
das
dec
cld
cmp
cli
add
outsb
shl
mov
test
cmp
and
pop
mov
subl
cmpsb
adc
inc
adc
enter
sbbb
pop
cs
xchg
dec
insb
ljmp
fnstcw
mov
cmp
mov
sbb
dec
push
jb
dec
lods
sbb
scas
adc
shlb
sbb
mov
xchg
fisubs
aas
add
outsb
cmp
js
das
loop
sub
mov
sbb
incl
daa
shll
adc
push
ja
jno
pop
mov
sbbl
addl
int3
lea
mov
sub
inc
jbe
xchg
sub
int
inc
jge
mov
xor
arpl
cmc
clc
sti
sub
pushf
jbe
into
in
scas
fsubs
push
pop
sti
mov
add
inc
and
pop
mov
out
xor
and
xchg
jmp
test
idiv
fistps
push
aas
mov
cltd
subl
xlat
cmp
movsl
clc
adc
mov
or
mov
shrl
pop
or
dec
sbb
adc
cs
enter
mov
add
pop
push
pushf
add
sbbl
inc
popf
gs
sub
call
imul
xor
mov
push
or
jl
es
mov
adc
sbbb
stc
pop
jne
sbb
mov
or
imul
js
mov
popa
daa
mov
sbb
push
cmp
sub
lret
or
mov
pop
dec
push
sbb
daa
out
dec
aaa
lock
insl
imul
sub
sub
clc
lea
mov
inc
jae
stc
insb
mov
xchg
inc
mov
pop
fwait
jns
jb
fsts
cmp
imul
repz
adc
adc
mov
aas
aad
leave
cmpsl
testl
pop
jb
mov
in
dec
imul
cmc
lock
lahf
pusha
pop
outsl
cwtl
xchg
dec
sbb
and
lahf
dec
fwait
cmp
push
jl
xor
insl
andb
push
fcmovu
xor
cmp
mov
jmp
mov
ljmp
adc
mov
sahf
js
dec
aad
dec
lods
or
loope
ja
movsl
jo
push
inc
lods
or
push
inc
mov
mov
mov
int
daa
pushf
loopne
push
fiaddl
into
outsb
std
and
cmp
out
jp
cmp
leave
pushf
cmp
scas
jo
jmp
aas
in
or
xchg
or
push
das
or
inc
idivl
mov
jmp
dec
mov
mov
repz
imul
fnstenv
sub
sti
jecxz
pop
or
push
push
movsb
lahf
jmp
mov
lods
dec
mov
fildl
sbb
pop
pop
mov
or
dec
mov
jne
xchg
sub
dec
int
ud1
inc
sbb
into
sbb
call
xor
mov
adcl
icebp
push
and
shr
cmc
cs
test
pushl
aaa
mov
dec
sub
cmp
and
data16
xchg
and
or
fdivrl
sbb
and
shl
ja
out
mov
pop
aad
test
out
filds
xor
lret
adc
jne
jecxz
xchg
mov
dec
jo
mov
sarl
ja
mov
push
inc
jp
mov
imul
cmc
mov
xchg
ret
stc
pop
lahf
pusha
sub
adc
aad
inc
in
jle,pn
outsl
add
fnstcw
in
adc
dec
mov
outsb
push
test
pop
xor
fdivrl
scas
mov
sbb
inc
arpl
test
cmpsl
pop
sti
stos
xchg
hlt
adc
mov
jne
inc
inc
mov
xor
insb
lods
cmp
mov
dec
fcomp
sti
xchg
add
dec
jae
sbb
daa
outsb
movsl
pusha
cltd
cmp
fistpl
fnstenv
stos
movsb
bound
notb
fwait
cmp
add
mov
pop
loope
in
insb
inc
inc
pop
mov
cmp
inc
imul
or
xchg
jns
inc
or
mov
dec
ds
sarb
iret
add
xor
jae
sub
cmp
je
mov
hlt
push
es
lock
push
mov
mov
das
out
roll
rcll
or
bound
data16
or
dec
mov
cmpsb
scas
fisubs
jmp
mov
adc
mov
inc
lret
pushf
xchg
inc
lahf
and
mov
loop
inc
stos
pop
mov
and
mov
cs
ret
mov
sub
xor
mov
push
and
insl
cs
push
cmp
ja
xor
shlb
pop
cmp
inc
je
dec
test
aam
jns
ds
lods
nop
out
mov
sbb
inc
xchg
mov
nop
jmp
arpl
aad
cmp
lcall
mov
bound
aas
mov
mov
fsubr
fld
imul
add
dec
jns
inc
mov
mov
cmp
repz
cmpl
or
lcall
addb
jmp
les
repz
lcall
shlb
mov
mov
in
mov
pop
mov
cmp
jno
stc
adc
jl
jne
push
loopne
call
or
cltd
jle
cld
leave
mov
and
jge
mov
dec
fisubrs
sub
test
insb
in
ja
jno
andl
and
or
enter
imul
jp
sbb
fists
fildll
jnp
in
in
push
pop
pop
sub
dec
in
cmp
mov
xor
adc
inc
sahf
pop
pop
dec
sub
cmp
sub
aas
jp
xchg
mov
jns
cmp
jae
xor
xor
xchg
mov
cmp
push
fisubrl
cltd
pop
and
int
pop
mov
cmpb
add
addr16
sub
pop
push
movsl
mov
rcr
lret
in
mov
mov
outsl
sbb
sub
psllq
jmp
xchg
divps
inc
in
xor
and
icebp
pop
ds
and
jns
pop
call
roll
bound
lret
mov
inc
fxam
xor
test
mov
xchg
dec
loope
bnd
xchg
ja
sub
mov
push
lret
enter
cmpb
push
xor
push
mov
or
test
mov
mov
xor
popf
js
add
pop
cmp
lds
pshufw
push
cltd
ret
inc
sbb
add
push
mov
xchg
or
scas
into
xor
mov
dec
xchg
xchg
call
in
ret
push
push
test
popf
sub
push
inc
cmp
mov
lahf
scas
cmpsl
in
es
and
add
les
adc
rclb
ret
int3
testl
pop
loopne
testl
sti
jmp
ret
mov
inc
pop
and
xor
xchg
repnz
xchg
push
mov
adc
lret
adc
dec
push
mov
or
cmp
xor
cmp
xor
pop
pop
jl
pusha
sbb
xchg
pop
ret
add
out
xlat
pop
clc
mov
xor
add
xor
pop
popa
shrl
xchg
pop
hlt
loopw
push
jle
fistpl
pop
dec
push
sti
cmp
ret
mov
adc
mov
rorb
jg
pop
lahf
pop
arpl
in
xchg
push
jbe
int
test
xchg
adc
jp
stc
pop
out
jnp
lahf
jl
out
int
repz
jmp
loope
xchg
cli
rolb
lods
push
and
jae,pn
push
jbe
dec
push
jmp
je
xor
ja
insl
imul
mov
jae
inc
ret
adc
jecxz
call
pop
sti
mov
push
ljmp
int3
jl
sub
jl
add
andl
pop
jbe
sbb
pop
iret
sbb
jecxz,pn
jp
test
xchg
rcr
mov
test
iret
outsl
lahf
call
or
hlt
adc
outsb
mov
jge
pop
mov
aas
hlt
mov
ret
out
jb
cmpsb
or
ret
shlb
lret
sarb
push
xchg
cs
dec
mov
lea
xor
mov
popf
xchg
test
int3
dec
dec
inc
xchg
aaa
inc
les
idivl
adc
ret
xor
popf
or
adc
daa
insb
xchg
xlat
jge
push
xchg
in
and
jmp
dec
mov
jne
pop
pop
lcall
jo
movsb
fiaddl
in
lret
sub
std
fisubrs
inc
adc
mov
jp
test
cltd
or
jo
push
popl
inc
lods
add
lock
aam
mov
repnz
mov
xor
jae
cmc
sbb
mulb
adc
stos
scas
stos
sbb
jl
enter
jne
jmp
jl
fimull
mov
xor
out
and
lahf
stos
sub
iret
sahf
shlb
loope
dec
pop
stos
test
dec
mov
shll
fildll
movsl
push
xchg
test
shll
in
insl
movsb
lock
or
adc
in
lds
loopne
mov
mov
jo
xor
shll
and
cmc
pop
jp
loope
stc
sbb
and
dec
setb
inc
push
push
out
sbb
pusha
pop
push
lret
cmp
iret
adc
rol
fidivrs
lcall
dec
and
mov
cmc
cmp
jecxz
js
incb
jle
pushl
adc
insb
jns
fwait
jp
leave
outsl
cmpsl
dec
mov
and
and
cmp
sbb
inc
push
and
icebp
lret
cld
je
mov
stos
scas
jbe
ds
fwait
push
insb
pop
int3
sbb
lcall
in
ja
idivl
adc
inc
lret
or
pop
add
clc
mov
shrl
in
jae
scas
xchg
xor
repz
insl
jg
jecxz
mov
adc
pop
mov
into
sub
pushf
mov
js
sti
repnz
dec
sub
mov
addr16
int
mov
push
out
ret
pusha
cltd
les
rorb
je
iret
mov
lea
cs
lretw
xlat
addr16
repz
mov
jl
lods
adc
ja
in
stc
rcr
fadd
loope
rcl
arpl
lahf
sub
and
inc
in
into
mov
push
mov
mov
pop
or
popa
imul
ss
arpl
ja
out
mov
test
sub
out
out
push
test
mov
sbb
mov
inc
jp
aas
pop
jecxz
and
xor
movb
ss
loope
cmp
adc
sub
jecxz
jle
in
mov
mov
aas
scas
fisubl
push
mov
jmp
jge
sbb
pusha
inc
and
insl
push
inc
out
addr16
pushf
cmp
cmp
jbe
rcll
pushf
push
jle
scas
sarb
add
rclb
sarb
push
mov
out
enter
add
sbb
inc
addr16
cmp
pop
jl
in
mov
cmp
lret
xchg
add
dec
jl
xchg
ss
xlat
sahf
pop
lock
mov
cmp
cld
in
stc
or
lahf
mov
dec
in
jle
fdivs
iret
aad
hlt
mov
stos
pop
pop
sti
hlt
pop
pop
adc
addb
push
dec
fwait
sahf
bound
pop
pop
loope
push
cwtl
xor
cmpl
inc
xlat
bound
sub
mov
adc
imul
jmp
mov
popf
mov
daa
xor
pop
pop
xor
lret
mov
add
out
mov
movsl
push
cli
flds
pushf
adc
cwtl
out
scas
pop
mov
in
jge
or
inc
push
enter
lea
adc
ss
insb
adc
xorb
insb
jecxz
push
js
dec
stc
sub
movsl
int3
push
shld
push
mov
add
inc
int3
daa
fstpl
jno
aas
xchg
out
push
add
dec
call
shll
mov
ljmp
aam
imul
movsl
ret
movsl
pop
add
mov
outsb
ss
repnz
sub
lea
adc
push
stos
shlb
stc
mov
cmp
mov
push
lea
mov
push
scas
xor
nop
addb
lret
inc
push
out
xchg
jge
ficompl
and
lret
jo
or
jmp
cwtl
mov
pop
pop
or
mov
jg
push
das
cmpl
inc
adc
jnp
lods
mov
adc
daa
jmp
mov
xor
dec
jecxz
or
xor
nop
xor
push
faddl
mov
push
sbb
and
inc
and
sti
pop
fmuls
mov
push
dec
mov
and
pop
bound
jo
xlat
jl
xchg
sbb
int
add
mov
jns
dec
data16
cmpl
scas
int3
cmpsb
dec
das
popf
mov
and
adc
push
xor
loop
xor
push
idivl
pop
adc
xor
mov
nop
pop
mov
test
push
das
fdivs
icebp
xor
or
cmp
inc
pop
jnp
outsl
push
enter
mov
xor
inc
xor
add
sub
cmpsb
jb
jle
roll
lret
and
aaa
dec
insb
push
mov
add
cmp
mov
mov
mov
pop
addr16
or
mov
shll
add
xchg
hlt
pop
mov
clc
xchg
addb
pop
and
addr16
cmc
dec
in
pop
pop
rcl
mov
sbb
push
clc
popf
cmpsl
xor
fstpt
pop
pusha
jle
negb
rcrl
push
jmp
je
xor
in
lds
dec
out
daa
mov
lds
movsl
sub
mov
dec
ficomps
imul
orl
sbb
iret
dec
mov
and
pop
jno
lret
add
ret
nop
call
add
stc
dec
dec
call
test
enter
jmp
cmp
sub
inc
popf
fdivrl
sbb
lods
filds
test
addb
roll
popa
sbb
hlt
mov
leave
jmp
cmpsl
test
and
and
mov
int
push
enter
add
jae
jo
sahf
imul
mov
insl
decl
enter
xor
push
fcomps
sti
mov
inc
and
out
sbb
push
rclb
fs
or
add
cmpsb
mov
rolb
cltd
mov
mov
jbe
add
out
xor
addr16
jno
cld
mov
pop
jne
mov
mov
sub
addr16
xor
cs
and
in
add
dec
cmpsb
out
inc
loopne
loop
xchg
add
push
cmp
inc
repz
int3
sbb
xor
test
cmpsl
lods
adc
repz
ret
loope
inc
popf
in
dec
pop
test
xor
mov
add
or
xchg
inc
jns
cli
movb
push
push
xor
push
inc
mov
jge,pn
xchg
je
add
jne
out
mov
sbb
dec
mov
nop
rolb
dec
push
arpl
jmp
add
pop
mov
jp
aaa
jbe
jl
sbb
loopne
shll
das
outsb
adc
adc
cwtl
aam
ja
das
adc
insl
cmp
ljmp
xchg
inc
dec
inc
ja
xchg
sbb
fs
add
and
lea
shr
js
loop
les
pop
outsl
adc
les
add
fwait
jl
jmp
icebp
push
jo
or
and
ret
push
cs
dec
scas
mov
jae
fsubrl
mov
ds
jne
cmpsb
insb
jns
lret
fwait
mov
out
cmp
outsl
test
pop
push
jg
add
dec
jp
jns
in
mov
adc
sub
outsb
sub
scas
imul
test
testb
mov
addl
dec
imul
popa
addr16
mov
pop
and
sbb
pop
or
inc
in
mov
pushf
outsl
pop
cmp
mov
fs
xchg
pushf
xlat
mov
fchs
or
std
cmp
mov
ds
gs
push
pop
dec
push
mov
xor
mov
inc
fcompl
in
fcmovu
in
out
mov
or
xor
add
push
out
jmp
test
push
xchg
clc
jae
inc
cmp
jae
fdivs
inc
sub
dec
mov
add
and
and
loopne
mov
pop
ljmp
rcrl
loope
inc
push
mov
inc
dec
clc
ja
pop
leave
movsb
aas
std
sbb
and
cmpsb
fsubrl
inc
fmul
add
push
aaa
inc
mov
insl
arpl
cmc
pop
mov
aaa
fwait
arpl
add
sub
or
nop
cmp
xchg
mov
cmp
mov
iret
scas
fcomi
outsb
push
cmpsl
fistl
lret
xchg
gs
inc
in
pop
lock
adc
inc
push
add
push
sbb
mov
mov
icebp
push
mov
mov
push
stos
aas
js
jns
ss
jle
enter
addr16
dec
cmp
xchg
and
mov
and
inc
fsts
mov
cmp
inc
inc
or
push
mov
call
sarb
lods
cmp
addl
dec
movsl
roll
loop
or
int
test
mov
mov
xchg
xchg
jno
insb
iret
cld
inc
daa
jecxz
sbb
cmpsl
lods
mov
imul
into
out
push
fistpl
loope
repnz
outsb
push
fstpt
xlat
xchg
lods
cmp
inc
mov
cmp
lahf
cmp
push
jl
js
out
fcmovbe
fwait
dec
add
scas
insl
rorb
jnp
push
fstl
sahf
fldenv
dec
jp
outsl
in
mov
insl
imul
pop
ljmp
mov
inc
jg
or
inc
adc
sbb
add
cmpsl
in
movsl
loope
jl
mov
pusha
leave
leave
xor
dec
ret
jmp
sub
fwait
adc
pop
outsb
or
push
xchg
sahf
xlat
lods
test
sbb
testl
xchg
mov
mulb
sbb
mov
aaa
pop
mov
inc
adc
mov
xor
mov
mov
dec
in
sbb
xor
lds
outsl
scas
cmp
jecxz
outsb
test
dec
aaa
fidivrs
jbe
xor
mov
dec
rcrl
xchg
mov
cmp
cs
mov
ss
sbb
and
out
pusha
out
add
pop
xchg
jecxz
xor
or
fwait
push
inc
pusha
mov
cwtl
mov
js,pn
loopne
jmp
mov
mov
cmp
adc
mov
cmp
out
jecxz
int
out
and
mov
int
ljmp
sub
mov
stos
decl
lret
std
mov
icebp
mov
ds
jecxz
cmp
pop
pop
iret
push
movsb
into
mov
repnz
adc
inc
test
push
xchg
out
mov
dec
mov
push
inc
cltd
dec
stos
jp
ds
les
inc
loopne
fs
push
xlat
rorb
mov
mov
in
adc
imul
mov
daa
adc
adc
lret
cmp
xor
dec
pop
movsb
lock
das
movlps
dec
test
int
or
mov
ficoms
flds
lea
and
add
and
push
out
enter
repnz
addl
lea
mov
jmp
push
in
xor
mov
mov
push
dec
add
testb
add
xor
das
mov
jge
lods
int3
addr16
jne
xchg
es
cmpsb
enter
and
lea
mov
lcall
cmp
add
adc
inc
mov
test
in
int
out
push
pop
add
cmc
test
jge
clc
aad
dec
loop
push
mov
ss
out
lods
jecxz
pop
test
xchg
and
in
movsb
movsl
jg
mov
test
movsb
mov
mov
mov
cmp
jne
jle
mov
adc
test
imul
sbb
fistl
leave
orl
scas
jmp
sub
pop
les
mov
cmp
mov
nop
adc
je
int
imul
mov
add
adc
rcrl
pop
fs
cmc
into
jle
lea
pop
sbb
pop
push
movsl
iret
mov
and
push
pop
mov
and
add
out
jecxz
mov
add
cmpsb
int
into
cmp
inc
std
add
xchg
imul
hlt
pop
fnstenv
push
sbb
pop
jne
jns
out
ljmp
sbb
les
int
jae
push
adc
in
jbe
xchg
jae
xchg
setnp
sub
pushf
loope
dec
scas
arpl
push
sub
mov
stos
into
push
test
sub
repnz
idivl
repnz
je
test
sti
mov
or
dec
mov
mov
mov
into
cld
aas
dec
mov
testb
je
pop
mov
ret
movsb
adcb
out
insl
in
dec
js
or
dec
dec
add
inc
fnstsw
sub
dec
mov
jnp
sar
adcl
cmpsb
xor
scas
outsl
cld
das
imul
jl
ret
rcll
aad
push
push
gs
imul
repz
jnp
mov
ss
sbb
dec
popl
imul
shlb
aas
cmpl
mov
sbb
out
cwtl
out
fiadds
or
out
sarb
lds
adc
add
repz
cltd
test
sbb
lods
or
rol
test
xor
xor
jmp
cs
mov
pop
fs
ficomps
in
das
inc
repz
mov
iret
faddp
xchg
rcrl
hlt
subb
call
mov
sbb
and
test
cmp
dec
add
ror
cmpl
cmp
cld
xchg
out
lock
jne
or
sub
stos
out
push
sbb
fsubp
fwait
pop
mov
enter
jb
rcrl
movsb
into
repnz
insl
sub
movsl
into
std
or
std
add
lret
adcb
movsb
add
pop
mov
or
inc
int
or
test
out
inc
ret
test
es
daa
mov
xchg
cmp
mov
sbb
fwait
and
test
sbbb
adc
or
ret
popa
pop
xor
jmp
adc
xchg
rorb
movsl
movsl
xchg
arpl
dec
and
enter
mov
and
ret
mov
shr
pop
xchg
sub
xchg
cmp
jo
mov
arpl
push
mov
and
add
mov
push
test
popa
insl
aaa
xor
outsb
cli
dec
pop
or
fildll
es
push
rcl
push
pop
push
lret
xchg
loopne
sbb
rorb
inc
xor
jmp
add
push
negl
inc
js
jecxz
lock
stc
pushf
outsb
stc
decl
lods
lcall
mov
or
aad
insb
push
js
ret
ja
push
insl
xchg
stc
in
sti
and
test
fsubrs
repz
clc
and
sarl
in
fs
xor
cmp
xchg
pusha
pop
sbb
fisubrl
add
and
popf
cld
push
dec
push
and
jle
jmp
pop
inc
pop
add
xchg
fisttpl
out
jnp
test
test
and
inc
mov
ljmp
mov
pop
arpl
mov
push
incl
sub
add
ds
xorl
stos
adc
hlt
js
insl
pop
sti
dec
pop
xchg
xor
loope
sub
add
int3
pop
dec
ret
bound
cli
aad
sbb
movsl
test
out
push
rorl
xor
sbb
xlat
push
das
pop
xchg
mov
xchg
jmp
xchg
pop
fsts
mov
or
or
and
out
fidivrs
pop
xor
jge
add
loop
std
jo
lcall
or
jno
sbb
jecxz
or
arpl
and
mov
lea
sarb
loope
inc
clc
mov
cmp
sbb
in
mov
jae
mov
push
mov
lods
clc
inc
imul
aas
mov
pop
inc
jns
jl
mov
loopne
xor
xchg
mov
or
jmp
xchg
jg
mov
fbld
sub
and
pusha
stos
outsl
jo
cmp
out
dec
adc
push
add
lock
stc
mov
xor
outsb
js
pusha
lahf
xchg
mov
sub
xchg
jmp
repnz
xor
or
xchg
sbb
nop
mov
xchg
mov
out
cmp
push
and
sbb
and
mov
pop
aas
dec
dec
in
loopne
inc
ljmp
adc
mov
sub
sub
adc
outsl
jns
out
test
imul
sbbb
adc
imul
in
cmovno
into
add
mov
push
andl
dec
push
aad
mov
mov
pop
or
cmp
push
hlt
imul
xchg
js
mov
xor
sti
iret
das
jo
clc
loope
les
pop
mov
or
fsts
inc
push
dec
je
fcmovbe
mov
je
in
xor
xchg
or
cmpsb
or
add
das
ret
call
push
lods
mov
lods
addr16
and
lock
jle
fwait
lret
loopne
clc
subl
pop
or
sub
das
mov
fs
sbb
divl
mov
adc
test
test
rclb
mov
lahf
dec
xchg
out
sbbb
push
jmp
fs
mov
pusha
ds
lahf
loope
dec
mov
out
or
in
lea
inc
gs
xorl
add
jmp
sarb
outsl
lock
imul
push
pop
xchg
inc
into
arpl
into
test
outsl
mov
jecxz
cmp
mov
xor
sarl
xor
xchg
cs
push
pop
clc
mov
push
test
dec
xor
dec
sub
mov
bound
mov
sub
push
gs
lea
call
enter
test
push
push
jno
in
das
xor
rcrb
xchg
cmp
cmp
cmp
or
cli
sti
and
hlt
scas
mov
push
mov
loopne
sub
xchg
pop
dec
cmp
mov
sub
xor
movsb
fildl
mov
mov
push
xchg
movsb
lcall
add
sbb
sarl
mulb
inc
add
fnsetpm(287
jecxz
aaa
pop
jb
ja
push
xor
lahf
out
xchg
cmp
rorl
mov
incb
pop
cld
popf
xor
push
loopne
jne
add
cltd
pop
cs
push
push
ja
inc
das
in
mov
jg,pn
in
push
fbstp
cs
pop
das
icebp
mov
imul
das
xor
mov
iret
dec
sub
fists
xchg
mov
out
pusha
inc
cmp
xor
mov
push
jp
test
stos
sub
insb
in
mov
ja
jae
adc
jno
lret
lahf
dec
ss
mov
outsl
or
mov
and
cs
pusha
clc
push
lret
sbb
cmp
int
mov
loope
xchg
mov
iret
mov
fs
xchg
xchg
lahf
mov
hlt
cmpsb
sub
ja
je
xchg
in
frstor
push
sub
test
xchg
outsl
rolb
pop
push
stos
sarb
enter
and
arpl
repnz
popa
pop
addr16
dec
out
insb
aad
pusha
movsb
subb
dec
pop
pusha
loopne
adc
cmp
aaa
stc
jne
daa
fcompl
and
pop
incl
add
scas
mov
into
mov
jb
lret
cltd
mov
mov
adc
or
fistpll
in
loope
or
movsb
enter
jns
adc
test
shrl
cmp
loopne
mov
pop
cmp
arpl
and
fwait
andl
push
sub
dec
add
xchg
jno
std
outsl
loopne
test
lret
sbb
adc
inc
scas
fisubrs
adc
sub
push
es
or
sbb
lret
mov
int
xchg
add
xor
popa
cltd
cli
int
lret
std
sub
mov
in
shlb
cli
sti
inc
push
pop
not
jb
push
mov
dec
gs
out
cmp
call
ret
out
aaa
xchg
xor
cmc
xor
dec
mov
jg
push
dec
movsl
xchg
aaa
sub
in
xor
cmp
mov
jmp
xchg
fistl
xor
inc
mov
dec
lea
clc
push
in
cmp
inc
push
lahf
sbb
repnz
dec
icebp
push
loopne
push
mov
mov
push
adc
lcall
mov
sbb
lods
sub
aas
push
dec
fsub
addl
or
pop
mov
push
fwait
les
insl
movsb
xor
ja
das
xor
add
sbb
dec
dec
dec
cmpsl
dec
rcll
dec
lods
pop
shlb
es
dec
cmp
or
push
clc
dec
mov
jle
fs
jecxz
dec
rcrb
cmp
dec
inc
dec
fisttps
sbb
popa
cli
js
inc
pushf
mov
int
pop
sub
cmp
ja
movsb
pop
mov
ss
xor
add
xor
mov
out
inc
push
cmpsb
mov
js
clc
or
adc
leave
negb
outsl
sub
lahf
dec
outsb
inc
cmp
ffree
dec
mov
ret
rcl
sbb
addr16
test
enter
into
add
imul
cmp
int
outsb
nop
dec
lahf
sahf
inc
movsb
jne
outsl
out
adc
inc
adc
stos
mov
mov
dec
inc
cmpl
popf
sub
sub
lret
adc
les
adc
jnp
pop
daa
cmpsl
add
aad
out
pusha
jns
jne
roll
and
jne
pop
add
sbb
mov
jnp
pop
fwait
repnz
pop
outsb
iret
std
pop
dec
cmp
push
paddsw
inc
inc
out
xchg
ss
lds
ss
addr16
in
dec
inc
and
pop
mov
mov
mov
scas
jge
fnstcw
aaa
jb
mov
pop
xchg
cmp
in
icebp
int3
test
mov
sub
stos
movsb
mov
mov
lahf
push
mov
rcrb
jge
sti
mov
imul
cmp
jmp
arpl
repz
cmp
repz
daa
or
or
and
gs
in
js
mov
or
ret
or
pop
sub
pushf
sub
xchg
and
push
or
daa
jecxz
loope
cmpb
xor
push
or
jb
ret
ret
mov
or
pop
dec
and
aas
ficomps
fbld
scas
add
and
fwait
push
jb
in
and
xchg
repnz
ficoml
adc
je
insb
idivl
cmp
rclb
push
or
dec
daa
pop
mov
lods
fsin
mov
iret
and
push
pop
dec
sti
sub
jns
pop
jmp
mov
stos
pop
pop
add
icebp
mov
in
inc
pop
les
ret
arpl
dec
sarb
call
push
push
pop
in
or
adc
fstl
push
mov
or
insb
lret
or
repz
in
rclb
stos
or
jg
dec
subb
mov
inc
aas
clc
cmp
and
idivl
repz
dec
daa
mov
mov
sub
fs
adc
sub
mov
ss
xchg
gs
fistl
xchg
xor
jge
xchg
ljmp
adc
dec
dec
mov
and
fs
jle
shr
add
and
test
movsb
add
int3
inc
jp
shlb
push
test
cmpsb
dec
sbb
stc
xchg
mov
mov
push
stos
sbb
stos
mov
jne
andl
jge
scas
mull
pop
fsts
sub
add
out
ret
pop
mov
xor
outsb
inc
dec
test
fwait
je
sbb
ret
pop
fistpl
pop
pop
jno
cmpb
popf
insb
push
or
stc
pusha
addr16
fldt
jo
gs
mov
imul
cwtl
je
jns
pop
lret
inc
jmp
outsl
imulb
stos
lret
imul
ret
aam
xlat
ds
ljmp
pop
aaa
insb
outsl
add
cwtl
stc
cs
std
idivb
sti
out
les
jns
test
cmc
aaa
cld
dec
or
mov
pushf
arpl
test
push
stos
cld
arpl
mov
dec
neg
sti
clc
jbe
pop
inc
ljmp
push
inc
cli
mov
icebp
repz
mov
std
pop
pop
mov
addr16
shll
and
clc
insb
enter
lods
aaa
xchg
pusha
fsubl
lret
pop
in
jbe
lahf
bound
dec
mov
add
jg
mov
and
jns
subb
mov
inc
aas
scas
push
xor
adc
dec
fs
call
and
cmp
and
rorb
imulb
mov
aas
sti
insl
mulb
pop
inc
push
adcb
dec
and
jl
rcrl
jbe
xor
adc
outsb
mov
lcall
call
jno,pn
gs
nop
adc
pop
push
rorl
scas
hlt
enter
pop
lcall
in
sbbl
mov
iret
pusha
out
mov
outsb
mov
and
pop
lcall
aaa
lahf
inc
rol
mov
lcall
inc
cltd
je
push
sbb
jno
mov
cwtl
ficoms
stc
xor
adc
mov
xchg
inc
xchg
cmp
or
push
jmp
jg
sbbb
add
fdivl
adc
test
aad
sub
cmpsb
repnz
inc
popa
scas
mov
ljmp
xchg
mull
mov
out
inc
ss
lods
std
sub
push
and
fsubrs
pop
push
pop
shll
pop
fidivrs
test
jg
xor
rol
div
jmp
aaa
mov
and
xchg
sub
daa
cmp
mov
sbb
and
cmp
aam
movsb
daa
inc
stc
into
or
add
int3
mov
bound
inc
xorb
mov
dec
cmp
scas
movsl
xor
ja
xchg
mov
stos
xor
ss
dec
mov
repz
mov
push
aas
add
jge
cmp
inc
fimuls
or
dec
push
push
fwait
inc
loope
popf
add
scas
and
inc
push
lret
idivb
ja
xor
aad
jl
mov
push
jmp
pusha
loope
mov
movsl
sbb
mov
push
mov
push
and
orl
nop
push
fstl
xlat
pop
push
bound
cmpsl
push
pop
call
add
mov
mov
dec
or
dec
stos
jle
fimuls
ljmp
mov
adc
cmc
push
pop
or
dec
jecxz
daa
fiaddl
loope
aas
xor
cmpsb
sub
pop
imul
in
or
mov
add
xor
in
addr16
push
add
std
bound
vmovss
and
and
xor
movsl
and
ret
add
daa
dec
inc
and
add
es
cmp
sbb
dec
iret
push
mov
xchg
out
or
sbb
loop
js
jno
dec
lea
fimull
flds
add
cmp
fidivl
sub
pop
out
repnz
xchg
jmp
adc
es
and
int3
loope
repnz
dec
dec
mov
sub
cwtl
fnstcw
add
loop
push
add
cs
cmp
mov
or
pop
sbb
mov
loope
xor
xor
out
push
mov
push
push
shlb
or
mov
fwait
mov
popf
xchg
mov
and
push
adc
jecxz
sub
mov
test
test
cmp
iret
mov
jle
cli
loop
dec
fwait
sbb
dec
sbb
add
cmc
iret
aaa
or
xor
mov
loop
or
outsb
push
sub
int3
shl
insl
addr16
loop
adc
mov
sbb
js
mov
mov
mov
sbb
xor
cmp
ficoml
push
icebp
xorl
inc
cwtl
scas
inc
jno
loopne
push
popf
cmpb
inc
jo
mov
xor
in
xor
and
dec
pop
stc
test
mov
sbb
sbb
fisubs
or
jne
pop
jp
jle
js
or
mov
shr
push
push
push
sahf
icebp
hlt
and
and
dec
psllq
fidivs
in
pusha
adc
dec
lock
cli
mov
cmpb
int3
adc
scas
cwtl
mov
out
ds
scas
fdivs
add
adc
mov
icebp
gs
popl
out
nop
aaa
add
mov
or
mov
pop
mov
cmp
mov
popl
inc
dec
or
push
jle
mov
je
enter
add
rol
mov
leave
xchg
lret
push
lret
jg
mov
and
pop
cmp
stc
pop
jae
test
or
xchg
dec
sub
adcb
xchg
jb
jb
adc
sub
lret
test
les
adc
jp
xlat
jl
repz
pushf
rcl
mov
dec
cltd
fcmovu
stc
xchg
cmpsl
das
out
inc
inc
pop
ror
rcr
or
sti
lds
fwait
pop
hlt
mov
mov
imul
or
scas
fisubrs
mov
xchg
jbe
inc
inc
mov
stos
outsb
stc
adc
mov
mov
testl
mov
ss
in
push
push
jl
add
std
aas
ja
xorl
test
insl
rcl
notb
inc
mov
xchg
ret
rorl
push
pop
in
or
scas
ss
pop
mov
and
mov
fbld
icebp
add
push
xchg
dec
pop
pop
jg
lods
in
ja
data16
xlat
fisttpll
mov
repnz
fistps
mov
add
sbb
add
push
mov
inc
mov
mov
fmul
add
gs
in
dec
xor
mov
dec
dec
jl
rcl
mov
gs
in
es
push
xchg
int3
jbe,pn
pop
xchg
push
imul
dec
dec
loope
lds
lea
adc
mov
test
das
mov
or
test
pop
in
stos
sbb
in
popa
imull
jg
mov
push
cwtl
mov
cs
pop
lea
outsb
ds
stc
test
out
repz
jb
push
push
pop
jae
loope
xchg
add
dec
cwtl
adc
into
or
jmp
jle
push
insw
adc
sbb
aaa
or
xor
mov
sub
cmp
fisttpll
push
aaa
inc
cmp
or
scas
js
decb
fldcw
fstps
push
jg
outsb
pop
pop
lods
mov
xor
adc
xchg
inc
xor
dec
aam
and
sbb
testl
aad
out
insb
imul
cwtl
push
push
mov
jne
jb
or
inc
adc
jae
movsb
xor
xchg
push
jle
ficoml
jl
sub
xchg
or
push
pop
cmpsl
mov
lods
inc
mov
xlat
pop
dec
call
insb
inc
mov
xchg
xchg
pop
in
xchg
dec
or
cwtl
xchg
mov
fdivr
jg
rcrl
jmp
xor
in
fwait
xchg
fbld
out
adc
add
scas
pusha
pusha
cmpsb
cmp
mov
into
js
sbb
push
cmp
stos
pop
outsb
in
add
add
mov
mov
and
and
mov
xchg
pop
dec
adc
and
cmpsl
sbb
sbb
fs
call
xchg
js
pop
xor
ss
xchg
inc
popf
pop
in
pop
outsb
xchg
or
negl
inc
aaa
outsb
mov
gs
sub
cs
sub
xlat
scas
and
push
jge
mov
and
jo
xchg
fnstsw
jle
mov
shrb
jb
popa
es
xor
dec
push
adc
jecxz
popa
adcl
movsb
dec
adc
out
mov
int3
jle
scas
push
pop
push
pop
js
sub
pop
cld
adc
aad
sti
add
xchg
cmp
mov
push
in
jg
cmp
lods
out
ja
scas
fbld
je
pop
mov
hlt
cmpsl
repnz
dec
cli
xchg
sub
push
jl
pop
xor
shll
jae
in
jae
inc
lret
jo
in
jne
or
cwtl
in
loopne
lcall
mov
jmp
mov
jl
sahf
or
cmp
ror
dec
push
and
mov
push
cmp
in
and
sub
and
fdivl
scas
adc
cs
xor
push
rcll
jno
xchg
lea
dec
or
xlat
inc
sub
xchg
sbb
pop
pop
add
jnp
pop
add
push
mov
cmp
imul
push
pop
lods
into
mov
cmpsb
or
sub
sbb
cmp
lea
in
mov
ss
add
in
out
roll
test
pop
cmp
sti
sarb
jns
cmpsb
scas
xor
xchg
or
cmp
push
mov
xchg
ret
mov
cli
cli
ret
incb
fwait
push
mov
xor
arpl
imul
inc
xor
mov
mov
mov
dec
out
fsubs
not
vmovaps
sub
push
or
popa
or
mov
and
out
das
xlat
pop
or
xorb
fs
push
cmp
mov
pop
movsb
cmpsl
sub
sbb
and
fprem1
and
pop
jno
sub
loop
xor
mov
mov
fninit
mov
adc
pusha
andb
dec
sub
inc
fdivr
mov
imul
mov
jmp
outsb
inc
call
pop
adc
fadd
ret
push
mov
cld
lock
mov
lds
cmp
clc
aas
out
cmp
out
dec
push
adc
fs
jecxz
enter
fmuls
dec
add
aam
push
stos
mov
jnp
jmp
cmp
jnp
mov
or
pop
pushf
pop
out
testl
xorps
mov
sub
cs
scas
aam
jns
mov
aaa
fidivrl
xchg
daa
inc
shl
mov
dec
and
xchg
adc
out
imul
and
jae
add
pop
xor
mov
loopne
in
jns
les
xchg
lahf
outsl
lahf
aaa
jns
in
sub
movsb
xchg
lahf
out
dec
mov
roll
and
xor
sbb
mov
test
sub
bnd
test
adc
jmp
dec
loope
push
cmpsb
cwtl
cmpb
inc
mov
loope
push
mov
inc
clc
notb
inc
sbb
jnp
fistpll
mov
xchg
or
mov
mov
repnz
insl
jp
cmp
mov
out
push
jp
sbb
xchg
pushf
push
mov
dec
jmp
popa
arpl
jge
lods
imul
pop
inc
pop
js
push
xchg
scas
xor
pop
sbb
xchg
dec
aad
push
cmp
mov
xor
ja
ret
jecxz
in
popf
cld
in
ret
cmp
cmpsb
aas
clc
push
in
sbb
and
rclb
mov
loopne
jecxz
xchg
aad
inc
mov
sahf
sbb
inc
dec
ljmp
xchg
mov
cwtl
mov
mov
lds
xor
daa
stos
rcll
cmp
pop
in
mov
shr
pop
xchg
lcall
cmp
in
movsl
clc
lret
loop
cli
es
mov
outsl
xor
xor
js
aaa
int3
jne
adc
lahf
sbb
sub
insl
add
dec
aam
mov
sbb
or
scas
subl
xchg
cmpsl
mov
push
push
jge
adc
inc
mov
add
fs
xlat
cmp
cmp
in
sub
sub
xor
cmpb
add
xlat
or
scas
push
inc
add
push
ret
lea
and
sub
cli
pop
sub
mov
sti
shll
ljmp
es
mov
xchg
jbe
cmp
shl
mov
arpl
sub
lea
and
xchg
jb
scas
lea
sbb
int
inc
pop
inc
and
or
jo
push
push
popf
push
dec
fcmove
mov
sbb
sub
out
inc
pop
ljmp
sbb
cmpsb
movsl
mov
dec
divl
in
xorb
xor
in
add
sahf
push
inc
sub
imul
jae
and
pop
mov
dec
dec
or
xlat
test
shlb
test
mov
gs
test
int
mov
ljmp
shrl
scas
clc
push
mov
cli
adc
xchg
das
movsl
mov
inc
in
data16
loopne
jecxz
pop
in
loop
push
mov
das
push
inc
aam
repnz
xchg
pop
push
pop
inc
or
out
push
rorb
cltd
jecxz
sbb
push
sahf
cmp
jg
mov
jno
dec
adc
sbbb
xor
jae
and
aam
in
ret
loopne
jnp
xchg
inc
sbb
add
xchg
fimuls
mov
xchg
push
and
sub
jns
or
mov
add
mull
in
mov
outsb
das
mov
mov
fdivs
sbb
scas
pop
mov
xchg
pushl
pop
cmpsl
sbb
jg
add
loop
pop
les
mov
xor
in
rcrl
adc
das
inc
jg
data16
dec
fmulp
fistpl
mov
mov
roll
stos
push
xchg
outsl
dec
xchg
cltd
ret
mov
pop
dec
or
out
adc
cld
push
clc
test
sub
lea
inc
mov
pop
gs
mov
adc
mov
xchg
loopne
add
dec
rorb
push
mov
imul
xchg
jmp
push
pop
adcb
stc
out
or
fistpl
scas
out
shlb
cli
pop
ljmp
repnz
xchg
iret
shlb
sbb
je
dec
jns
test
sub
adc
push
fsubl
mov
jle
inc
popa
addr16
scas
xchg
adc
dec
mov
pop
out
sbb
add
cltd
sub
fwait
stc
bound
adc
ret
inc
clc
cmpb
pop
js
jo
and
jecxz
pushf
popf
xchg
fdiv
jns
pop
dec
clc
add
mov
ljmp
cmp
lock
push
mov
push
repnz
adc
aaa
test
popf
pop
xor
mov
divl
hlt
movnti
lock
sbb
jnp
shrl
inc
sub
sarl
sbb
dec
loope
push
cwtl
xchg
dec
ljmp
and
ret
add
push
in
fimull
and
fiaddl
inc
sub
cmp
or
mov
iret
jmp
pop
sub
test
add
fcoml
push
mov
shlb
popf
or
mov
movsb
or
lret
arpl
push
push
fmull
out
cmpsl
inc
sub
out
andl
rolb
inc
les
sub
push
dec
sbb
roll
sahf
fnclex
out
dec
jb
jo
sahf
and
mov
lret
push
mov
rcl
xchg
xor
or
fnstenv
dec
xor
ljmp
push
adc
cmp
dec
clc
inc
adc
mov
into
cmp
test
push
pop
push
imul
jp
mov
sarb
ljmp
jecxz
adc
push
cli
cmp
cmp
add
mov
jle
imul
lea
sub
insb
stos
cmpsb
in
mov
imul
shlb
sbb
mov
pop
mov
nop
push
pop
lods
add
push
jge
jle
add
xchg
push
lcall
jns
insb
lret
insl
xor
sahf
mov
pop
mov
andb
test
test
mov
popa
cmc
sbb
sub
stos
sbb
jo
xchg
mov
mov
pop
jno
dec
adc
sbb
in
dec
adc
and
mov
or
iret
gs
or
sub
inc
xor
xor
and
xchg
insl
repz
ss
int
cmc
pushf
mov
add
stc
mov
jnp
mov
add
dec
iret
repz
loope
or
add
pextrw
mov
jp
sbb
test
mov
roll
out
add
mov
in
icebp
push
push
push
cmpsl
push
test
push
cltd
mov
ja
xchg
stc
test
lods
xor
adc
lods
sbb
notl
daa
cmpsb
sbb
sbb
sar
lahf
lea
mov
fistpll
adcb
pop
movsb
adc
and
imull
mov
scas
in
out
and
push
xchg
adc
cltd
data16
xchg
fcmovbe
xchg
mov
jae
imul
fidivl
idivb
pop
sub
scas
sahf
mov
cmc
dec
fmul
ds
mov
outsb
out
test
lcall
mov
insb
mov
xchg
leave
rcrb
pop
movsb
xor
sti
stc
sub
lahf
push
rcrb
sbb
gs
inc
sti
outsb
xchg
movsb
and
cwtl
mov
jp
jle
sbb
mov
xchg
lock
lods
movsl
add
xor
xchg
push
xchg
cmp
mov
imul
xchg
push
sub
aad
push
fsts
xchg
push
adc
adc
outsl
jp
ljmp
adcb
out
push
pmovmskb
rclb
in
movsl
push
lahf
jmp
mov
push
loope
test
sbb
scas
mov
test
cwtl
test
mov
enter
icebp
and
stos
psrld
ds
cld
sub
adc
cs
aad
mov
jge
mov
aad
xchg
int3
cli
pop
xchg
xchg
sub
je
nop
fdivrs
out
adc
fadds
outsl
inc
pop
nop
and
or
cltd
test
pop
or
repz
orl
fwait
xchg
std
fucomp
xlat
adc
mov
jmp
pop
pop
les
push
insl
aas
cmp
andb
fs
add
jg
dec
rcll
lea
cli
cmp
jne
nop
ds
pop
and
push
xchg
inc
icebp
rorb
sbb
pop
dec
js
ja
xchg
adc
loope
mov
ss
mov
jl
daa
cs
push
dec
dec
jbe
in
push
xchg
inc
shrl
loope
cmp
xchg
push
add
sahf
xchg
and
outsb
es
or
cmc
lods
pusha
jmp
xchg
push
je
or
test
mov
adc
fiaddl
xor
inc
repnz
fdiv
push
xchg
jl
and
sub
pop
outsl
cmc
sub
mov
in
int3
dec
std
adc
jle
dec
push
pop
add
es
sub
cmp
sub
lea
cltd
scas
push
lods
pop
inc
ja
cli
sbb
ret
sbb
dec
lret
inc
dec
push
xlat
jbe
hlt
std
orb
and
and
adc
fisubrs
or
dec
inc
dec
cmp
rorl
xchg
add
xor
jns
push
xor
rcll
dec
inc
pop
mov
mov
mov
dec
lret
xor
and
aas
fildll
je
enter
pop
fnstcw
test
mov
rolb
call
mov
icebp
ret
fimuls
sarb
xor
arpl
or
test
sub
mov
and
ss
out
jnp
in
cltd
dec
insb
imul
loopne
sahf
and
out
fildl
flds
mov
push
nop
stc
mov
ss
rorb
subl
mov
pop
inc
data16
mov
repz
jmp
xor
int3
enter
dec
sub
flds
loop
sti
inc
inc
mov
sbb
jnp
andl
dec
out
add
inc
add
xchg
xchg
pop
pop
cli
jb
push
cmpsb
divb
and
out
or
dec
cmp
scas
icebp
mov
sub
cwtl
out
aaa
stos
jnp
mov
stc
popa
mulb
inc
scas
or
pminub
xor
and
jecxz
stos
mov
imul
cs
dec
mov
add
mov
icebp
int
push
sbb
shl
fs
xor
xchg
and
or
ljmp
cmp
aaa
mov
sti
jne
outsl
xchg
notb
mov
lds
and
adc
fisubrl
imul
test
pop
mov
popl
inc
icebp
xchg
push
adc
push
rcll
js
mov
stos
outsl
xor
cmpsb
loope
in
or
leave
sub
fiaddl
and
jnp
push
dec
mov
adc
leave
jp
arpl
das
cmp
add
aaa
pop
negl
xchg
xlat
jmp
pushf
mov
mov
add
xor
test
jb
xchg
mov
enter
ss
popf
sbb
fnstcw
inc
bound
lds
push
lahf
and
jbe
cmc
or
add
ucomiss
arpl
les
mov
out
sub
les
test
jmp
jp
mov
movsb
adc
mov
jae
mov
push
sbb
imull
int
fsubs
hlt
adc
push
and
out
xor
pushf
xadd
loopne
cmp
ljmp
into
das
ss
mov
sbb
negl
xor
mov
fdivr
movsb
das
icebp
into
jno
call
push
bound
or
sbb
pushf
es
stos
repnz
pop
call
push
in
lcall
mov
enter
inc
aam
mov
lock
fcompl
sub
mov
loope
icebp
mov
pop
mov
loop
je
pop
movsb
js
cmc
rclb
inc
jo
xchg
sub
or
iret
rolb
call
dec
in
ljmp
lcall
cmp
push
js
mov
lret
xor
xor
push
test
dec
pop
inc
adcb
fwait
das
lods
xor
jle
fcomps
and
or
xchg
ret
inc
mov
cmp
test
mov
andl
out
push
sbb
insb
jle
xor
loope
push
insl
lret
imul
or
mov
push
inc
jno
push
pop
aad
sbb
pop
fsubp
inc
mov
bound
insb
add
mov
ja
mov
cld
mov
outsl
jb
adcb
roll
jnp
imull
ret
inc
push
fidivl
mov
sarl
dec
lea
jmp
daa
out
add
cld
adc
cmpsb
mov
mov
mov
leave
scas
les
add
mov
push
cmpb
mov
jl
inc
mov
pop
rcll
aam
jbe
int3
xchg
jge
pop
mov
in
mov
jmp
inc
mov
movsl
aas
dec
add
add
popf
adc
in
sub
jne
negl
enter
aam
jnp
stos
sti
mov
or
add
and
aas
inc
inc
pop
adc
or
lock
pop
sbb
jge
leave
or
fstl
and
push
adc
aad
pusha
in
aam
shll
mov
mov
test
sbb
sbbl
xchg
add
mov
pop
xor
or
fsubrs
pop
lret
push
adc
adc
inc
in
maskmovq
negl
rcll
mov
inc
fistps
push
sbb
aad
jl
mov
xchg
aas
sahf
inc
andb
push
lods
jae
xor
xchg
fiadds
sub
cs
daa
push
or
jo
movsb
xabort
lock
pop
movups
hlt
xchg
mov
cmp
or
inc
test
xor
leave
inc
jl
cmp
icebp
mov
insl
xchg
jo
addb
lea
inc
les
or
jbe
mov
ds
push
jp
push
rcrl
loop
push
sahf
push
mov
loop
dec
cmc
push
fsub
es
ljmp
ljmp
dec
das
dec
les
xor
xchg
pop
std
in
lcall
push
pushl
push
xor
and
xchg
cli
jnp
sub
in
xchg
loopne
clc
fdivl
testb
push
leave
pusha
add
lret
fdivl
push
push
ds
or
mov
mov
movsb
sbb
xor
sub
pop
out
jp
sub
dec
jns
mov
stc
int
les
test
fdivl
ja
add
or
int
in
xchg
dec
jbe
xor
repz
aad
xchg
cwtl
ret
aam
in
jb
test
stos
test
cmp
push
mov
and
xorb
cmp
inc
imul
imulb
or
cmp
xor
int
test
jle
sub
xor
and
xchg
fwait
pushf
cmpsl
imul
mov
fidivs
test
add
sbb
jns
xchg
lret
pop
inc
jno
pop
lods
ficomps
test
add
sbb
addl
lret
jecxz
lahf
inc
ret
ds
fimull
xchg
cmp
lret
lock
test
fimull
pop
dec
stc
fcomps
mov
push
sub
arpl
pop
daa
subb
divl
jle
mov
mov
cmp
jg
loope
inc
test
mov
push
pop
adc
jns
cs
sub
sbb
arpl
xor
jae
rclb
xchg
mov
cmpxchg
stos
stos
cmp
dec
jnp
enter
cmpsl
sbb
pop
jo
add
mov
jae
sti
ds
lret
push
and
imul
int3
icebp
push
vpextrw
lds
test
loope
inc
xor
xor
ja
vpsubusw
dec
ja
xchg
adc
daa
jbe
and
jo
lods
fstpl
fstl
dec
pop
incb
jns
mov
addl
out
xchg
lret
shl
xchg
push
inc
push
lea
mov
in
cmp
inc
pop
cwtl
xchg
jl
cmpsb
lret
fs
sub
dec
shrl
dec
jno
and
sahf
add
or
je
adc
sub
repz
subb
push
sbb
mov
movsl
and
push
lds
cmpsb
push
xchg
or
jg
test
test
mul
outsl
pop
mov
and
cmp
dec
sti
loop
shll
filds
ljmp
pusha
xchg
pop
pop
cmp
imul
xchg
inc
ror
ja
jbe
shrb
jmp
inc
aad
or
pushf
push
dec
mov
pop
call
fcompl
sbb
add
pop
push
or
adc
lret
cmp
jo
xor
xor
jecxz
lods
out
int
mov
faddl
push
adc
lds
push
je
xchg
sti
push
movsb
xchg
std
lods
pop
push
std
adc
cs
dec
orb
arpl
enter
push
or
sbb
inc
or
je
out
test
hlt
ficompl
out
mov
int3
sahf
mov
repz
mov
add
push
adc
sub
iret
icebp
in
int3
xchg
mov
imul
test
add
jp
mov
mov
pop
or
pop
ljmp
xor
fidivrl
push
cmc
dec
sahf
cltd
sbb
sti
mov
jne
test
test
xchg
mov
cmp
inc
je
loopne
cmc
mov
push
jne
or
jecxz
mov
das
push
mov
popf
aas
insl
push
cld
push
mov
in
dec
dec
mov
insb
push
pop
stos
into
popa
mov
ljmp
pop
and
cwtl
out
std
ret
push
in
jmp
pop
or
repz
add
outsl
and
leave
andl
xchg
lahf
jne
mov
push
push
jge
cs
mov
add
ret
shl
cmp
sbb
je
mov
or
daa
arpl
push
jmp
dec
notb
or
mov
mov
push
or
push
ficoml
sub
xchg
arpl
sahf
dec
sub
outsl
les
push
cmp
cltd
dec
push
jecxz
aam
dec
rorl
lds
flds
inc
xchg
rcrl
xchg
movsb
adc
cmovb
sahf
out
iret
test
push
and
or
jge
lods
andb
cmpl
sbb
aas
push
fwait
jbe
pop
xchg
loop
add
hlt
sbbb
cmp
outsl
pushf
pushw
mov
jecxz
ss
xor
pop
aad
or
popf
mov
adc
cmp
lods
lds
sub
mov
add
or
sub
mov
cmp
xchg
loope
sub
sub
lahf
icebp
sub
or
dec
mov
cmp
stos
cmpsb
test
fwait
rorl
cmp
xor
push
add
sbbb
sbb
pop
sub
inc
inc
cmpsb
sbb
movsl
cmpsb
push
outsb
inc
pop
gs
push
push
mov
in
mov
xchg
or
mov
aas
push
dec
mov
add
mov
lods
scas
pushf
jp
and
mov
cwtl
aas
inc
cmp
add
inc
pop
xlat
sbb
lds
andl
jne
jo
out
shll
push
ljmp
xor
and
cltd
pop
shrl
loope
aas
mov
cmpsb
dec
and
and
scas
repnz
mov
or
xor
sti
lahf
xchg
lds
adc
insl
lock
cmp
imulb
jnp
xchg
repz
imul
add
dec
in
scas
sub
in
lret
adc
jle
pusha
xor
sbb
cmp
pop
scas
pop
xor
ss
fidivl
outsl
xor
shll
sub
pop
call
ljmp
inc
addl
mov
push
xchg
int3
xor
cmp
ret
mov
out
sbb
mov
ss
das
add
das
mov
aam
incl
inc
mov
imul
jne
sbb
adc
stos
test
ds
outsb
cmp
and
and
pop
cmp
cmpsb
inc
cmc
inc
pop
sub
fs
mov
fistps
ja
dec
dec
call
icebp
or
mov
lock
cld
sbb
test
fdivp
loopne
push
leave
sbb
pusha
xlat
sbb
or
xlat
jmp
push
stos
es
jae
cmp
inc
jmp
inc
cmp
adc
call
jns
xchg
push
adc
adc
fwait
jmp
jns
leave
adc
pushl
inc
xor
add
xor
fwait
sub
sbb
fs
negl
or
lock
xor
jecxz
cmp
pop
jge
add
push
pop
mov
mov
xchg
call
sub
aas
imull
out
int3
sub
lret
test
xor
mov
xorl
and
aaa
adc
cmp
push
xchg
xor
push
pop
inc
repz
mov
mov
dec
pop
sbbb
mov
mov
adc
pop
xor
das
mov
xor
cmp
leave
test
repnz
pop
lods
and
push
xor
cmp
addb
rcpps
mov
cmpsb
jmp
xchg
dec
cmp
inc
or
mov
mov
cmp
sbb
ds
xor
mov
orl
add
add
push
push
imul
je
add
xchg
movsb
dec
cmp
xor
jo
outsl
inc
mov
sbb
inc
push
pop
pop
stos
mov
cmp
dec
inc
out
mov
mov
xchg
ss
insb
dec
enter
int3
inc
jns
pop
cmp
ds
or
hlt
mov
and
mov
insb
jmp
add
loopne
andb
into
jp
pop
push
push
lcall
jge
push
pop
jns
mov
sub
sbb
and
cli
mov
xchg
and
es
aas
inc
xor
fsts
fcomi
sbb
test
push
lret
mov
mov
outsb
mov
dec
aaa
and
inc
lock
les
cwtl
fwait
je
sbb
out
sub
xchg
lahf
sbb
push
movsb
and
add
shr
clc
popf
push
loope
loopne
lea
add
cmc
pop
mov
push
sub
iret
sbb
push
jbe
sbb
add
mov
push
jbe
loopne
loope
push
add
ljmp
push
cld
or
int
in
mov
sbb
inc
push
dec
sub
adc
dec
daa
or
mov
outsl
adc
gs
mov
popf
leave
outsb
lcall
xlat
out
add
xchg
lahf
out
push
cmp
icebp
jg
loopne
mov
test
xchg
dec
inc
lret
fsubl
jns
andb
es
xor
xchg
xchg
cmpsl
inc
in
jne
mov
mov
and
in
adc
mov
mov
lds
insl
cmovl
dec
std
jl
shl
es
push
cld
call
enter
test
icebp
in
push
xchg
inc
js
or
fwait
mov
mov
jo
stos
pop
xor
push
gs
or
out
call
xorb
clc
mov
es
xchg
pusha
xchg
inc
and
popa
mov
lahf
or
inc
xchg
jo
outsl
push
std
inc
mov
jae
add
popa
pop
popa
scas
mov
jno
xchg
popa
adc
ljmp
push
dec
pop
or
sbb
xchg
push
jns
stc
adc
mov
sbb
clc
insb
xor
nop
scas
sti
mov
pop
stos
arpl
and
push
into
add
xchg
pop
dec
pusha
xchg
add
popa
cmp
pop
inc
in
std
jge
xlat
inc
pop
xchg
xor
movsl
mov
and
sub
ret
dec
jne
pop
dec
cli
and
sub
clc
fstpt
xchg
enter
rcr
fcmovne
test
dec
push
sub
sbb
and
add
sbb
inc
cmpsl
std
xchg
and
xchg
rolb
pop
mov
inc
push
push
mov
gs
adc
insb
add
adc
sub
jmp
bound
xchg
shlb
mov
pop
adc
subb
mov
add
lods
bound
dec
add
hlt
push
ror
adc
adc
stos
movzwl
push
sbb
xlat
jne
arpl
sub
ljmp
mov
jge
lcall
mov
outsb
sahf
rcrb
out
dec
jns
inc
jne
test
or
mov
mov
ds
add
push
sbb
xchg
inc
aas
dec
pop
lds
aam
scas
outsb
jl
std
push
mov
cwtl
sub
xor
mov
or
mov
out
sub
dec
insb
inc
cli
xchg
test
dec
ret
pop
jge
cmpb
adc
xchg
movsl
addr16
movsb
dec
cltd
jmp
ja
ljmp
insb
add
push
jp
add
xchg
lret
and
int3
cmp
fistps
sbb
jp
xor
cltd
mull
dec
cmpsl
insb
push
mov
imul
daa
hlt
sbb
lcall
jg
push
or
imul
mov
mov
rclb
cmp
push
push
rclb
shll
out
push
lods
jecxz
sbb
mov
jnp
movsl
data16
mov
sbb
add
xor
mov
add
cmp
adc
push
ja
scas
rcrb
das
movsl
clc
jne
push
mov
dec
shl
rcrl
mov
xchg
mov
mov
loop
imul
sub
dec
sahf
or
cmp
sbb
js
jmp
dec
add
sub
leave
cld
addr16
mov
lods
arpl
movsb
mov
xchg
pop
nop
jb
jne
mov
mov
sbb
jmp
insb
ljmp
mov
push
fnstsw
roll
and
mov
sub
mov
pop
xchg
out
stos
lods
loopne
cmp
lds
or
and
repz
imul
cs
in
aas
dec
addb
jl
aas
in
sahf
pslld
addr16
out
and
and
out
or
pop
shrl
imul
fs
jae
mov
sbb
add
inc
ret
loopne
xor
mov
xor
jle
mov
jno
jecxz
sbb
mov
mov
rorl
outsl
outsb
pop
push
pop
pop
shll
jp
add
jmp
test
xchg
mov
jnp
shrb
rol
ljmp
nop
aam
mov
out
xchg
ret
sbb
xorl
cltd
imul
fisubrl
mov
push
pop
mov
jo
add
adc
repnz
outsl
mov
mov
nop
xchg
xor
mov
icebp
shlb
push
sub
dec
inc
jae
xchg
cmp
out
rclb
and
call
lret
jl
mov
sahf
dec
mov
sub
or
mov
stos
xor
and
out
add
ret
mov
cmp
cmp
jae
lock
mov
lahf
inc
aaa
pop
ljmp
sub
and
int3
pop
imul
insb
lea
pop
lea
sbb
adc
lds
sub
and
out
mov
push
fadds
lret
minps
jmp
imul
mov
push
mov
incl
inc
cwtl
adcl
jp
sbb
and
out
into
adcl
ret
sbb
inc
jl
sub
add
and
xor
test
cmpb
cmp
sbb
pop
das
jae
mov
or
add
sbb
mov
push
insl
insl
hlt
lds
sub
sahf
cmp
cwtl
mov
sti
mov
cli
sbb
lds
add
cmp
enter
leave
rorl
xor
mov
lret
jb
fwait
push
imul
or
and
out
inc
negb
xchg
pop
rorb
xchg
xlat
je
int3
add
sub
adc
sti
mulb
cmp
pop
adc
mov
movsl
clc
push
xchg
outsl
mov
es
or
push
dec
aas
and
pop
and
pop
mov
out
sar
adc
divl
pop
insl
inc
add
pop
adc
js
pusha
cld
xlat
add
in
push
adc
xor
push
mov
je
xor
xchg
mov
jge
loope
enter
pop
mov
cltd
repnz
out
dec
or
popa
mov
dec
pop
sarb
sub
rcll
inc
jg
inc
jle
or
push
fisubrl
das
adc
adc
mov
repz
mov
add
aaa
cmp
mov
mov
cltd
inc
dec
jl
mov
sub
aaa
mul
bound
push
repz
iret
dec
xchg
daa
push
outsb
lods
in
pop
hlt
sub
or
adc
rorb
xorl
sub
xchg
jle
add
sub
cmp
fwait
outsb
das
test
xor
dec
mull
out
push
enter
cmpl
or
push
add
pop
mov
adc
mov
jl
adc
ja
bound
cmpsb
es
or
xchg
add
iret
ret
clc
pop
push
jne
lcall
aad
mov
mov
ret
xchg
out
addr16
pusha
out
dec
pushf
mov
jne
dec
mov
adc
out
mov
loope
stos
data16
inc
and
inc
xor
pop
inc
sub
jns
aas
pop
loop
sti
mov
aaa
jbe
je
adc
mov
cli
inc
std
call
scas
add
popa
in
inc
jo
sub
dec
das
out
mov
mov
mov
adc
lods
ds
sarb
add
imul
mov
pop
lret
pop
data16
lret
in
int
cmc
bsr
lret
call
int
cwtl
adc
and
aam
jmp
mov
adc
psrlq
sub
and
cmpsb
in
add
out
jns
cmp
xor
add
or
adc
rorl
lods
out
daa
sbb
scas
inc
test
pop
movsl
sahf
cmpsb
decl
add
mov
mov
aam
and
out
aam
jne
repz
or
ret
push
adc
push
add
repnz
push
cmp
and
xchg
stos
aas
in
xor
ja
inc
mov
fstpl
sub
loope
sub
sbb
jl
int3
inc
mov
cmp
fstl
mov
adc
sbb
xchg
mov
fwait
sbb
inc
push
xor
int3
cmp
int3
test
sub
pop
fidivl
fwait
popf
xor
jge
push
or
popa
ret
loope
aad
push
lret
not
and
imul
out
pusha
inc
mov
imul
dec
fdivs
add
cmp
cltd
jno
aad
mov
cmp
dec
insb
push
pop
jmp
add
imul
arpl
iret
cmp
mov
add
repnz
cmp
mov
add
jb
sbbl
jl
adc
scas
mov
push
pop
ss
lret
cwtl
out
mov
push
ja
or
push
out
mov
mov
cmp
adc
rcrl
push
daa
mov
aaa
fcompl
cli
dec
push
xchg
arpl
pop
sub
xlat
cld
sbb
or
popf
mov
test
cs
mov
mov
loopne
inc
sbb
negl
fcomps
xchg
xor
mov
or
enter
jp
testb
popf
mov
mul
jl
mov
iret
push
xchg
jbe
test
mov
inc
add
push
mov
push
add
clc
mov
mov
pushf
adc
lds
mov
lcall
push
sub
stc
pop
imul
jg
sbb
test
mov
lcall
in
aas
pop
add
int3
repnz
rolb
jl
movsl
aas
jno
fstpl
lret
adc
push
inc
xchg
outsb
ret
or
cmc
mov
cmp
int
or
icebp
testb
loope
mov
lods
addl
jae
orb
push
mov
call
mov
ror
cmpsl
iret
adc
push
pop
rcrl
fidivl
xchg
out
negl
fs
out
xchg
negl
add
subl
mov
ljmp
xor
inc
push
cwtl
pop
insb
nop
rcrl
addr16
stc
test
lcall
cmp
and
pop
insl
es
shrb
pop
cltd
cld
test
rclb
sub
loop
sub
inc
insl
add
mov
rcll
fdivr
or
fldcw
movsb
sarb
out
mov
jle
mov
test
xchg
adc
cs
xlat
jecxz
cmp
mov
mov
mov
sbb
stos
xor
sti
rorl
dec
cmp
inc
loope
es
inc
es
orl
jbe
js
jp
mov
mov
les
das
sub
cmpsb
insl
and
cmp
push
mov
dec
dec
into
fwait
or
or
stos
xor
cmp
mov
orl
ret
or
dec
ret
mov
test
sti
sbb
push
jns
inc
insb
sub
xchg
lret
test
lock
jne
sbb
jb
pop
add
ss
mov
loop
adc
sub
adc
push
lcall
mov
rcrl
test
xchg
into
jb
and
mov
in
jbe
shlb
psraw
inc
addr16
add
lods
aad
lret
adc
cmp
hlt
push
mov
push
mov
mov
push
jmp
in
das
and
adc
pop
mov
ja
shlb
xor
test
mov
mov
into
aas
shlb
out
shlb
imul
ja
repnz
ljmp
and
or
lods
mov
mov
jmp
mov
push
fbstp
jae
mov
ret
stos
pop
aad
pop
cs
mov
call
mov
popf
push
test
adc
lds
or
pusha
lods
mov
negb
fstpl
lret
enter
xor
mov
cld
cld
sbb
sub
push
inc
das
mov
rcrl
xchg
sbbl
adc
mov
sti
adc
fsubrl
cwtl
enter
mov
test
sub
int
jp
jle
pop
xchg
jp
jb
hlt
cmp
stc
insl
in
lods
pop
xor
jne
test
push
adc
jecxz
int3
cwtl
push
pop
leave
sti
in
lock
pop
mov
sahf
adc
mov
xchg
mov
xor
sbb
mov
sub
repz
push
mov
jge
dec
ja
dec
rcll
out
pop
push
clc
aas
adc
dec
sub
iret
js
dec
mov
xor
push
pop
cmpsl
mul
clc
jp
test
jno
testl
pop
inc
push
and
fisttpl
stos
imul
pop
add
push
add
divb
xchg
fisubrs
lods
leave
xor
or
mov
mov
mov
repz
mov
cli
pop
test
push
and
roll
scas
dec
shr
adc
xor
out
adc
push
loopne
jbe
mov
insb
repnz
cmpsb
adc
mov
xchg
popf
add
or
add
pushf
push
daa
adc
and
push
leave
stos
gs
lahf
mov
jecxz
adc
ja
outsb
push
inc
les
fildll
inc
mov
lret
dec
out
adc
push
inc
fyl2xp1
sub
dec
xor
dec
outsl
mov
loop
sub
inc
cmp
or
pop
mov
xchg
and
xchg
addr16
test
enter
test
std
inc
js
jecxz
jp
in
mov
sahf
sub
inc
xchg
xorb
negl
jne
popa
dec
outsw
add
jle
push
xlat
jnp
xor
mov
sbb
mov
add
inc
jno
or
inc
cli
jbe
jbe
sarl
mov
dec
jp
mov
mov
fdivrs
push
jmp
ds
and
inc
insb
mov
ljmp
jp
xorl
jp
sbb
lea
les
push
push
mov
sbb
mov
push
sub
and
cmpsl
leave
and
pop
push
int
ror
setae
xchg
mov
push
fmull
mov
mov
mov
lods
int3
and
xchg
ret
mov
mov
fdivl
mov
movsb
mov
shlb
rcll
push
sub
mov
adc
cmp
into
repnz
in
mov
push
xor
cli
out
xchg
ja
cltd
jns
pushf
out
jmp
jnp
out
pop
xor
cmp
add
or
mov
enter
mov
lea
test
lea
jnp
mov
stos
dec
fldcw
sub
es
decb
out
adc
dec
fwait
mov
popf
cmp
dec
ffreep
test
mov
inc
fs
mov
xor
xorl
dec
or
test
mov
fisubl
aam
sbb
jae
dec
cwtl
ja
sub
xchg
lahf
in
push
jg
mov
adc
add
sub
pop
add
jg
int3
cmc
mov
lds
push
pusha
bound
imul
int3
push
aad
push
jg
mov
fcmovnu
push
sub
in
dec
maxps
sub
arpl
ja
mov
rcrl
push
cmpsl
inc
cmpsb
mov
xor
inc
adc
popa
cmc
lea
pusha
leave
push
fildl
cltd
cltd
cld
push
xchg
rcrb
rorl
pop
sub
out
push
or
dec
lret
jp
pushf
mov
jns
scas
mov
jo
dec
out
jno
js,pn
out
ret
lds
mov
test
jno
jb
or
and
inc
push
arpl
and
jge
popf
mov
mov
sbb
sbb
bound
lods
adc
mov
xor
in
cmp
call
data16
stc
cmp
enter
dec
inc
lods
jg
js
xor
addl
adc
cmp
cwtl
lea
aaa
inc
xor
outsb
xchg
push
xchg
aam
push
dec
jmp
fimull
int3
jns
rcrl
sbb
dec
and
inc
cmp
movsb
pop
sub
popa
sbb
push
test
js
rcrl
fnstsw
cmp
stc
push
jae
dec
mov
push
jl
in
cltd
shlb
sbb
push
inc
mov
adc
adcl
cmc
ret
add
test
ret
in
dec
cmc
or
sbb
fstps
fmul
faddp
pop
add
std
mov
insl
into
xchg
push
testl
and
push
cs
aam
in
push
push
lret
cld
das
mov
dec
fs
adc
scas
cmp
scas
and
sub
repnz
lcall
pop
aas
xchg
xchg
sbb
leave
pop
mov
xor
cmpsl
adc
mov
and
adc
xlat
ret
add
mov
adc
jbe
and
jmp
cmp
lods
xchg
dec
mov
fistps
dec
sbb
xorl
add
push
push
arpl
lahf
adc
pop
mov
ljmp
xor
pop
sbb
jg
mov
xor
test
mov
dec
data16
sti
cmp
push
xor
cmpsb
mov
push
pop
adc
cld
cwtl
or
xor
mov
dec
notl
ret
fs
jo
dec
cltd
imul
xor
stos
insb
pusha
mov
inc
pop
add
in
into
xor
aad
movsb
jle
pop
mov
scas
lock
cmp
xchg
repz
sbb
xchg
pop
cltd
repz
mov
mov
ljmp
scas
push
fwait
sub
iret
cli
mov
ret
push
inc
mov
add
insl
dec
ja
jl
inc
in
in
sbb
dec
repnz
rcrb
sbb
std
ds
test
dec
in
cld
fisttpl
jecxz
xor
outsb
push
rcrb
mov
stc
fstpt
mov
mov
mov
stos
inc
ja
lret
rclb
sub
lea
inc
mov
div
shrl
mov
push
lock
movsb
int3
and
sahf
cmp
xor
push
fnstenv
mov
push
sbb
inc
push
xchg
xor
jl
add
dec
shr
hlt
adc
es
push
mov
shlb
inc
cmp
jecxz
mov
ret
xor
xor
dec
push
mov
cmp
mov
stc
or
cmpsb
cs
jbe
out
aad
and
add
xchg
arpl
lock
dec
insb
cmp
inc
pushf
arpl
es
cmp
mov
shlb
mov
pop
pushf
cmc
repz
and
push
outsl
inc
push
out
push
int3
fisubl
ds
mov
clc
dec
notl
lods
aad
mov
mov
mov
into
mov
or
pop
popl
jne
mov
mov
test
mov
stos
test
rorb
addl
adc
loope
or
jno
add
push
inc
out
iret
mov
in
jne
ret
sub
push
shrl
or
sahf
clc
out
dec
shr
pop
mov
jp
jmp
es
jbe
xchg
fwait
pop
mov
cs
adc
push
push
and
mov
cwtl
push
pop
pop
cli
test
popa
jbe
jbe
push
push
mulb
pop
shlw
xor
dec
es
or
in
xor
sub
add
jae
cmp
fsubs
mov
or
push
lret
imul
pop
sub
dec
loopne
and
test
pop
push
nop
mov
adc
cmc
pop
imul
outsl
ja
lret
sbbb
mov
xchg
inc
push
push
mov
sbb
cld
pop
aas
xor
jmp
push
jne
addr16
lods
mov
repnz
fnstenv
aad
cld
xlat
in
test
mov
fcmove
je
testl
mov
jecxz
xorb
ljmp
add
pop
fdivr
adc
mov
stos
xchg
shlb
or
lret
loop
pop
lock
rcrb
movsb
inc
jp
daa
mov
nop
push
aas
sbb
pop
adc
clc
push
jp
jp
testl
and
es
sub
stos
push
pop
adc
fwait
sti
or
xor
jb
imul
fidivl
adc
jo
cmp
out
imul
rorb
inc
inc
imul
or
xchg
lret
pusha
adc
mov
cmpsl
add
scas
push
out
mov
in
decb
es
lock
push
xchg
movsl
xchg
xchg
sub
imul
mov
xlat
pushf
add
add
lcall
int
inc
scas
lods
jne
inc
shl
push
sbb
mov
dec
call
pop
mov
cmpsb
mov
icebp
and
or
jns
repnz
adc
nop
imul
sbbl
push
addr16
mov
inc
xchg
mov
dec
jl
inc
es
mov
pop
jnp
aad
rcll
push
frstor
sahf
int3
insb
jge
sbb
cmp
cmp
mov
mov
jae
cld
and
push
adc
xor
jg
fnstcw
jbe
cld
cmp
call
out
lcall
repnz
shrd
inc
or
sub
adc
nop
adc
ret
or
sbbb
pop
mov
jbe
fbstp
dec
xchg
mov
stc
ds
or
sbb
add
jecxz
imul
test
lcall
dec
arpl
int3
add
fdiv
dec
adc
sahf
movsl
fnstcw
pop
cmpsb
cli
xor
flds
xchg
xor
or
test
pop
nop
divb
dec
sub
xchg
std
lahf
mov
lea
test
xor
inc
xor
or
pop
das
mov
xchg
push
mov
out
imul
mov
aad
mov
adc
aaa
pop
lods
cmp
data16
pop
pop
xlat
negl
clc
loope
orl
mov
fsts
xchg
jecxz
jg
jno
sub
sub
ja
cmp
dec
pop
push
ljmp
jp
pop
inc
roll
dec
enter
push
xor
lods
lret
adc
dec
pop
mov
imul
je
cmpsb
lods
adc
push
cmpl
outsb
movsb
ficompl
lods
or
xor
push
cmp
call
xchg
jp
repz
mov
cwtl
in
outsb
mov
sbb
add
arpl
movsl
je,pt
inc
dec
fidivrs
test
adc
sbb
push
xchg
imul
lods
shlb
addr16
movsb
jnp
mov
sbb
pop
fnstenv
sbb
into
add
mov
sbb
into
popa
cmp
out
sub
into
cli
or
push
shlb
xchg
cmp
dec
sbb
rcr
loop
mov
popl
xchg
int
cmp
insl
outsl
dec
xor
leave
std
cltd
imul
dec
pop
jnp
aam
mov
xor
mov
jns
arpl
in
enter
pop
vpunpckhqdq
sbb
inc
mov
sbb
cli
jae
shll
clc
ds
jge
sbb
ret
mov
jge
or
inc
scas
sub
stc
imul
pushf
adc
mov
xor
outsl
dec
imul
pop
add
jl
mov
daa
and
ljmp
or
or
lods
xor
jno
jbe
lret
ds
les
das
adc
test
call
enter
inc
shrb
mull
sbb
add
push
ljmp
testb
sbb
lcall
shr
adc
or
aaa
into
loope
adc
inc
in
jle
mov
sub
adc
stc
or
scas
mov
sbb
call
jecxz
popa
push
mov
popa
orl
pop
mov
sti
push
or
dec
inc
cmp
fs
pop
in
push
xchg
aam
xor
in
icebp
mov
mov
es
test
addb
test
dec
and
loop
mulb
enter
xchg
or
int
adc
sti
iret
es
mov
stc
lahf
push
je
inc
mov
jecxz
lret
stos
andl
mov
insl
lret
adc
xchg
or
lret
hlt
jle
mov
pop
fadds
les
cmc
add
daa
adc
push
adc
mov
dec
nop
call
fdiv
or
lock
inc
mov
cmp
pop
cmp
adc
ret
stc
fildl
pushf
pop
cmpb
fbld
daa
mov
mov
pop
xchg
imul
add
pop
addr16
xchg
xor
push
pop
and
cmpsl
lods
aad
in
adc
aaa
into
gs
out
cmc
inc
mov
clc
scas
in
nop
jbe
aad
adc
sbb
popf
in
std
sub
mov
je
push
adc
dec
mov
insb
aaa
pop
sbb
insb
cmp
loope
jp
ljmp
sub
orl
jg
es
xchg
pop
test
cmp
outsl
fcoms
add
lock
dec
ljmp
dec
in
ret
push
ret
out
loopne
enter
sti
in
and
roll
or
jns
jg
cmp
add
add
imul
mov
jmp
or
cs
push
aaa
sbbb
ds
xor
in
cs
ds
cltd
adc
add
push
jnp
mov
fcoms
loop
mov
lret
and
pop
push
push
shrl
xchg
mov
dec
lret
popa
pop
mov
mov
sbb
stos
xorl
imul
pop
mov
cmp
or
js
shll
mov
or
push
clc
fs
jb
dec
xor
mov
dec
mov
pop
cmp
test
hlt
push
cltd
sbb
push
loopne
mov
mov
test
call
movzbl
dec
flds
scas
adc
push
xor
insb
gs
adc
mov
push
test
adcb
cmp
mov
inc
pop
pop
or
aad
out
leave
inc
fldlg2
xor
and
cmp
adc
add
pop
cld
adc
xchg
shr
mov
mov
pushl
mov
call
sub
or
jno
cmp
jl
sbb
vpcomd
movsl
jl
mov
shrb
imul
out
loop
call
jae
orl
imul
jle
xchg
popf
sbb
xchg
push
jp
dec
sub
aaa
loop
xor
std
add
bound
sbb
lds
data16
mov
sahf
push
pop
dec
mov
xchg
popa
xor
cmp
mov
pushf
dec
movsb
int3
rol
mov
scas
push
ds
adc
les
rcrb
push
lock
aaa
fsubl
rorb
cli
jnp
ds
inc
sbb
dec
insl
sbb
int3
mov
sub
jb
sub
cmp
jnp
xor
adc
mov
in
dec
cmp
aas
xor
sarb
repz
xlat
into
cld
rclb
icebp
push
push
imul
int3
jmp
pusha
out
movsb
push
sbb
addr16
out
sub
das
adc
cmp
push
dec
and
scas
das
sbb
insb
xor
add
jmp
jnp
jmp
aam
popa
std
xchg
mov
and
mov
ljmp
addr16
dec
aam
je
out
add
js
call
inc
mov
xorl
jbe
ror
insl
loopne
sub
fdivs
inc
xor
inc
jo
xchg
jbe
icebp
lods
sbb
incb
fnsave
subb
test
and
inc
pop
dec
loop
push
orl
mov
mov
push
into
jmp
popa
rcrb
subb
sarb
pop
xchg
inc
loope
jns
sub
lea
pop
data16
dec
inc
pop
out
sbb
dec
mov
mov
mov
jbe
add
inc
ret
mov
sahf
enter
enter
jmp
inc
test
xchg
xor
sahf
cmp
fwait
jne
leave
push
push
repz
xchg
aad
push
sbb
cmp
inc
addr16
pop
mov
or
cmpsl
out
lret
cmp
adc
fs
scas
pushf
pop
fs
pop
insl
dec
lods
mov
mov
xchg
adc
repnz
test
jbe
push
mov
dec
loope
push
out
les
mov
push
pop
sbb
out
iret
mov
pop
cmc
sbb
jmp
jbe
pop
inc
add
add
jge
addl
and
ja
out
pop
sbb
jbe
icebp
adc
cmp
push
pop
stc
mov
xor
mov
mov
xchg
lds
sbb
filds
sbb
sbb
cmpsl
pop
mov
daa
inc
add
jbe
hlt
sbb
iret
insb
mov
mov
rcrl
test
xor
in
aas
xor
push
fadd
and
xor
or
lea
cmp
adc
add
cmc
inc
inc
sub
movsl
rcrl
dec
mov
push
loopne
xchg
cmovs
outsb
add
jmp
cmp
and
sub
add
int
cmpsl
jne
lcall
jmp
ret
loopne
fstpl
mov
repz
mov
xor
int3
cmp
jmp
loop
jnp
or
jl
sbb
xchg
jp
jmp
pop
mov
pop
push
scas
adc
add
rcrl
push
dec
in
push
mov
mov
es
lock
aad
gs
repz
push
scas
dec
xor
ret
jno
inc
add
jae
push
xchg
movsl
fwait
add
mov
xor
add
cmp
loopne
cli
adc
dec
ret
or
push
pop
xor
xchg
lds
in
dec
mov
fidivl
ljmp
dec
xchg
add
fiaddl
std
hlt
shll
adc
std
test
push
cmc
mov
jns
mov
push
imul
sbb
movsb
and
stos
jl
dec
scas
and
lods
and
add
mov
out
rcrl
jp
in
pop
pushf
xchg
xlat
int3
pop
jmp
xor
sbb
je
dec
jne
loope
mov
xchg
mov
arpl
push
adc
jbe
ljmp
xchg
mov
push
nop
enter
pushf
sub
sub
xchg
ljmp
fs
jp
adc
sub
mov
push
xor
xchg
mov
inc
push
xlat
test
out
mov
pop
mov
sbb
ja
dec
inc
inc
mov
pop
sub
aas
push
mov
dec
add
mov
xor
pop
enter
dec
pop
into
push
pop
ljmp
or
rcl
loop
mov
test
enter
outsb
dec
mov
scas
fcomp
rcrb
into
addl
popf
push
pop
xchg
js
dec
jbe
in
out
incb
test
mov
push
lret
lods
inc
xor
test
std
push
inc
pop
and
mov
sub
push
in
inc
outsw
mov
sub
lret
nop
in
push
sbb
jge
pop
dec
mov
insb
je
push
push
push
sub
xor
push
jns
jo
pop
ficomps
mov
jl
push
push
sahf
push
test
cwtl
out
aad
cmp
into
push
xorb
xlat
into
xchg
pushf
push
or
jl
iret
mov
inc
out
cld
pop
nop
inc
nop
fisttps
push
jg
aam
popf
cmc
popa
lods
ficompl
lea
push
rorb
stos
dec
xchg
jmp
icebp
stc
xchg
and
pop
pop
add
mov
dec
ss
push
dec
inc
out
adc
inc
xor
xchg
movsb
lret
lds
sbbl
add
push
push
pop
and
cli
gs
mov
xor
mov
test
jbe
fwait
cmpsl
xchg
jp
jg
lods
adc
inc
pop
jnp
xor
imul
adc
leave
inc
cmpsl
sub
sbb
scas
mov
lret
out
push
adc
dec
mov
sbbb
mov
jae
lds
movsl
push
sahf
in
inc
dec
mov
adc
pop
sub
sbb
fldcw
sbb
lea
pop
clc
mov
cmp
hlt
pop
dec
imul
xchg
sub
add
das
or
bnd
in
mov
ljmp
leave
aad
and
ja
into
jns
imul
jns
push
iret
aaa
push
aad
cwtl
push
ds
adc
jnp
or
daa
xlat
jns
jl
dec
push
cmp
jns
stos
sbbb
inc
mov
inc
xchg
shrl
or
xor
loopne
adc
mov
dec
adc
gs
jp
push
and
xor
dec
push
jmp
push
repnz
push
cmp
loopne
imul
rolb
jae
out
jmp
testb
mov
subb
jae
cmpsl
test
jge
mov
cmp
dec
sar
add
idivb
ljmp
cmp
lods
mov
loop
jle
and
mov
pop
jns
rcr
mov
push
in
js
aam
add
or
movsl
out
adc
fwait
mov
mov
or
add
add
sti
mov
or
inc
inc
imul
rcrl
and
mov
add
dec
addr16
add
bound
xor
and
imul
cltd
nop
fsubl
pop
mov
test
pop
jbe
adc
into
popa
push
test
sbb
xor
or
inc
cmp
stc
xchg
roll
stos
je
mov
mov
and
or
xchg
cmp
int3
int3
sti
mov
xchg
orb
orl
cld
and
dec
mov
ficoml
cmp
fildll
push
sbb
popf
outsb
add
mov
cmp
sbb
fidivl
arpl
mov
std
mov
fs
lods
mov
test
sbb
hlt
cmp
lahf
fidivrl
movb
fiadds
xor
insl
xchg
mov
shll
inc
sub
hlt
ljmp
dec
scas
or
rcll
cli
scas
sub
inc
xor
jbe
xlat
popa
idivl
adc
cmpsl
dec
out
xchg
nop
jo
pushf
or
dec
push
fs
xor
shlb
cmp
xchg
dec
ffreep
and
hlt
cmc
jnp
loope
rorl
jl
test
outsl
cmpsb
imul
ljmp
sbb
mov
or
inc
aad
xchg
and
std
cli
sbb
or
pop
inc
nop
push
push
cmp
push
inc
call
fistpl
xor
xchg
shl
fbld
pop
lea
subl
mov
mov
push
jno
push
mov
lret
push
sbb
mov
inc
push
pushf
inc
dec
dec
je
loopne
or
xchg
mov
jbe
jbe
adc
inc
adc
scas
pop
rorl
pop
push
out
and
cmp
incb
cmp
jo
push
sub
or
sub
mov
mov
hlt
jae
dec
imul
ja
jle
pop
xchg
sbb
fcomip
ss
add
lcall
sahf
mov
aas
adc
sbb
das
mov
lret
and
adc
lds
cmp
xor
mov
or
xor
dec
andb
mov
xchg
mov
nop
es
scas
and
in
push
les
jns
lods
movsb
pop
rclb
test
fs
andl
insb
xchg
pushf
icebp
into
cmc
xor
jne
je
mov
dec
dec
push
nop
mov
insl
pop
rcrb
dec
sar
cmp
movsb
pop
xor
jmp
fstpl
in
out
jmp
jo
jl
ds
scas
sub
imul
xchg
xlat
lea
cli
push
mov
inc
cmp
push
cmp
pop
fsts
mov
dec
and
add
cmpb
lret
mov
mov
sbb
decb
push
enter
mov
pusha
mov
inc
test
popa
jo
ret
fcoml
sub
sbb
mov
mov
dec
sbb
cli
inc
mov
mov
pop
pusha
pusha
pop
rclb
xor
push
jno
push
in
sbb
insb
int
lret
fnsave
mov
jb
dec
mov
sbb
int3
xchg
popa
popa
mov
loope
out
fildll
mov
outsl
je
inc
xchg
ja
sbb
mov
sub
fldl
movb
rcrl
and
add
fdivs
jp
sbb
testb
loopne
cltd
daa
adc
pop
popa
sub
ds
adc
repnz
repz
mov
adc
outsb
push
sbb
std
jmp
scas
push
mov
iret
push
add
lods
lods
lret
repnz
xor
es
and
in
lds
rol
fsubp
mov
mov
or
popa
cmp
jmp
mov
cmp
aas
push
xchg
cmp
mov
cmpsl
mov
lahf
fcomps
enter
aas
push
test
pop
push
scas
or
cltd
mov
dec
xor
pop
psrlw
xor
pop
ja
mov
adc
jne
ja
xor
test
orl
lock
loope
cmpsb
inc
movl
mov
pusha
fsubs
outsb
nop
lret
dec
or
jne
cld
mov
add
inc
inc
and
cmp
cmp
pop
fmuls
mov
repnz
or
and
cmp
adc
xor
ljmp
daa
jecxz
push
cmpsl
fildl
repnz
fwait
pop
fisubrl
mov
pop
inc
and
pop
xlat
dec
mov
into
lcall
rcll
inc
xchg
mov
sbb
jle
and
orl
js
jbe
and
cli
mov
shll
lods
repnz
cmp
bound
subb
mov
not
inc
cs
popfw
or
jbe
push
add
scas
test
iret
mov
fdiv
movsl
ja
cmp
pop
es
mov
cmc
cmp
push
sub
addb
aam
push
gs
leave
fcomps
int3
ds
sahf
mov
inc
lcall
pop
mov
cmp
out
xorb
jnp
mov
fimuls
jge
or
out
pusha
cli
inc
jecxz
push
test
xor
insl
test
inc
pushf
pop
pop
mov
dec
icebp
mov
sub
pop
bound
adc
fisubrl
jno
cli
enter
aaa
repnz
in
ret
pop
popf
mov
push
jnp
in
cwtl
shll
test
loop
pop
sbb
inc
daa
jg
out
or
lods
mov
xchg
push
outsl
popa
divb
sbb
xchg
pop
xor
sub
rol
mov
jnp
xchg
mov
aam
js
add
arpl
or
adc
movsl
adc
jecxz
pop
outsl
les
ret
sbb
xlat
imul
sbb
mov
repnz
sbb
jno
jb
sub
cltd
push
push
in
xlat
les
repnz
add
shll
icebp
jbe
rorb
sub
out
jp
out
mov
leave
lock
adcl
dec
mov
repz
mov
sbb
push
popf
xor
movl
fstp
xchg
movsl
dec
push
cmpsl
pop
mov
push
clc
mov
movsl
push
int
xor
mov
and
test
shll
notb
enter
imul
popa
mov
inc
xor
jo
xor
mov
imul
push
jecxz
mov
sbb
or
dec
jns
lods
call
push
xor
icebp
pop
adc
shrl
cltd
shrb
scas
push
adc
aam
stos
cli
testl
inc
outsl
dec
aam
int
xor
or
push
adc
testl
jnp
jno
cs
das
pop
aaa
sub
push
cld
shrl
adc
aam
hlt
ret
ljmp
add
ds
or
test
dec
mov
and
jb
cmp
testl
fisubs
xlat
imul
arpl
ret
call
bound
popf
add
add
xchg
or
int
mov
imul
and
subl
test
inc
or
inc
nop
mov
and
lcall
icebp
mov
insb
mov
sub
lods
jle
inc
jbe
shrl
movsl
mov
or
xor
jp
pop
aas
addl
nop
je
sahf
pop
inc
mov
xchg
in
jp
mov
xchg
lock
fsubl
rol
cmc
mov
movsb
sub
int
ret
jmp
adc
dec
adc
mov
mov
addr16
and
push
add
lea
sahf
sbbb
push
aas
aad
cmp
jo
aam
sbb
mov
leave
or
adc
ret
popa
xchg
or
gs
sub
inc
inc
aas
jbe
cli
xor
cwtl
and
in
test
mov
movsl
mov
pop
adc
fnsave
scas
or
xchg
mov
xchg
push
cmp
lods
cld
out
ss
pop
xchg
sbb
std
xor
pop
aas
lods
sti
aaa
mov
clc
jo
push
inc
pusha
mov
and
and
sbb
je
loope
jg
dec
adc
inc
fistl
sbb
fildl
xchg
add
jecxz
lret
push
and
pop
arpl
lods
cmc
jecxz
cmp
fiaddl
repnz
into
pop
and
ret
cmp
insl
es
lret
adc
xor
inc
into
sarl
jle
mov
mov
jg
aam
mov
xchg
aas
cmp
mov
or
push
ss
push
int
lret
inc
fsubs
pop
rcrl
fisubs
mov
dec
mov
dec
mov
daa
sub
dec
insb
ret
lods
push
and
lret
and
inc
mov
xchg
and
add
insl
sub
cwtl
js
out
dec
aas
mov
jae
inc
mov
ljmp
fwait
mov
addr16
sub
out
test
jge
push
gs
jmp
test
pop
pop
xor
aam
enter
imul
push
cmp
pop
sub
add
lret
movsl
mov
and
xchg
jns
mov
js
pop
cmpsb
pop
cli
je
xchg
sub
shrl
mov
mov
push
sbb
cmp
adc
dec
pop
cmpsb
sbb
cli
and
adc
cmpsl
cs
lds
cmpsb
xor
inc
pop
shll
daa
aas
xchg
mov
lret
sbb
sbb
add
pop
sbb
notl
call
ljmp
int
daa
daa
ja
xchg
mov
adc
call
and
outsl
mov
mov
xchg
les
nop
xchg
or
mov
or
jae
xor
inc
out
fcmovb
cltd
rcrb
cmpsl
loop
shll
sahf
out
test
into
shll
mov
mov
xor
or
test
ficompl
ret
mov
mov
mov
mov
sub
lods
and
push
jmp
test
push
xorl
loopne
nop
mov
sbb
sub
leave
shlb
jecxz
addr16
fwait
lock
and
push
shll
inc
out
sti
xchg
pushf
and
cwtl
and
scas
jae
clc
lret
jl
xchg
movsb
cmp
int
arpl
cmp
jge
ret
or
mov
clc
sahf
push
cltd
push
lock
xchg
inc
xchg
nop
ja
adc
mov
cmpb
cli
movsl
fwait
mov
inc
adc
jle
xlat
gs
fs
insb
test
jae
cli
push
lea
test
loopne
nop
jne
movsl
fstpt
add
aas
ret
jae
mov
idivb
cmp
std
clc
mov
cmp
sar
push
mov
add
xchg
loop
aas
mov
mov
push
sub
aad
mov
xchg
pop
ds
pop
sub
and
cmp
outsl
loope
cmpsb
fdivl
inc
xchg
lahf
les
jmp
mov
ds
scas
inc
jbe
cmovs
cmc
jmp
adc
int
and
dec
mov
xchg
dec
ss
adc
or
push
sbb
or
incl
sbb
dec
and
sub
add
into
push
pop
dec
movsl
mov
ljmp
and
mov
add
push
jmp
add
or
cmpsb
in
mov
fcomp
jnp
or
cmp
pushf
aaa
subl
and
xor
push
inc
in
daa
mov
pop
lods
jecxz
lods
jne
loopne
jns
frstor
inc
data16
mov
cmp
inc
add
adc
int3
sub
pop
repnz
jmp
stos
jae
add
stos
shrb
in
imul
add
imull
data16
dec
mov
into
mov
sub
pop
push
inc
push
leave
test
arpl
int
fldcw
repnz
sub
pop
sbb
pop
pop
pushf
fstpt
int
jbe
mov
out
add
add
orb
js
push
lea
jnp
mov
and
push
mov
pop
sub
hlt
mov
pop
xchg
imull
sub
push
lcall
loop
add
add
ja
ja
in
into
and
std
stos
cmp
in
pop
xchg
xlat
insb
test
call
lea
out
mov
xchg
mov
sti
inc
shl
sub
sbb
xlat
pop
pop
mov
pop
leave
sahf
push
jecxz
sbb
mov
dec
pop
insb
and
jl
lret
mov
cmpsb
shll
lea
add
inc
mov
scas
in
fwait
loope
in
adc
jle
dec
jno
pop
xchg
das
pop
jge
mov
and
icebp
outsl
ret
mov
loopne
jnp
adc
popa
icebp
adc
in
mov
gs
inc
enter
add
shlb
pusha
ja
stc
cmp
lea
push
lods
or
test
and
in
mov
loope
lock
lods
push
je
and
push
jb,pn
jmp
fxch
mov
fwait
xor
dec
push
sbb
inc
sbb
inc
fwait
jecxz
sbb
int3
roll
pop
adc
pushf
cmp
loop
outsb
pop
lret
cmp
cmpsb
jl
xchg
shl
nop
mov
sbb
push
sbb
int3
mov
dec
sbb
mov
insb
outsb
adc
jb
popf
pop
ja
iret
xchg
or
ja
or
lahf
sbb
movsl
outsl
cli
fs
pop
rorb
pop
aad
sbb
dec
in
ss
pushf
stc
sub
pop
sub
mov
push
push
negl
outsl
mov
enter
out
mov
xchg
fnstsw
leave
pop
mov
xchg
pop
jge
xchg
icebp
mov
add
js
sub
ljmp
ss
in
popa
mov
sahf
fisttps
cmp
mov
stc
adc
sub
les
in
idivl
and
hlt
mov
stos
sbb
and
mov
add
mov
add
mov
cmp
mov
add
mov
les
cli
sub
jb
dec
lcall
push
ja
pusha
insb
mov
leave
fnstcw
jb
adc
inc
xchg
lods
notl
mov
sbb
mov
add
dec
out
jmp
jae
loop
cmp
mov
ljmp
xor
jno
xor
in
mov
xchg
cli
es
jns
pop
mov
cwtl
adc
lds
sub
jo
dec
mov
mov
outsl
pop
pushf
jp
jnp
cmpsl
in
je
insb
sbb
lret
pop
mov
fisttpll
cmp
bound
inc
xchg
and
dec
mov
inc
sbbb
mov
jmp
shlb
inc
int3
push
cmpsb
lods
xchg
dec
push
jp
in
mov
sarl
aam
mov
sub
std
orb
in
inc
cltd
bound
mov
push
addr16
rclb
cwtl
clc
and
mov
push
daa
sti
adc
pop
or
rcr
ret
mov
jle
adc
into
shrb
pop
insb
movl
mov
loopne
inc
inc
and
rclb
outsl
xchg
ds
nop
jns
enter
mov
push
dec
stos
sbb
sub
fnstcw
repz
sbb
xlat
inc
mov
gs
cmpsb
jg
out
lods
pusha
sub
inc
test
clc
xor
leave
push
ds
xchg
xchg
mov
pop
sub
pop
ds
jne
pop
mov
adc
pop
adc
jg
mov
inc
pop
shl
xor
jno
inc
mov
enter
mov
out
sarl
push
pop
mov
mov
ret
mov
pop
xchg
scas
adc
test
clc
sbb
bound
jle
stc
lret
dec
pop
ret
lahf
rcrl
adc
jecxz,pn
repz
add
sub
cli
pop
in
pop
fsubrp
jne
ret
pop
xor
data16
aam
and
or
push
add
fstps
roll
rcrb
popl
dec
out
jnp
and
pop
jp
cld
addr16
aaa
dec
pop
idivl
fwait
mov
xor
xchg
pop
mov
xchg
lret
stos
adc
inc
mov
out
js
jo
mov
jmp
jbe
cli
rcll
ljmp
movb
jbe
adc
cmpl
xorb
inc
fiadds
mov
mov
adc
in
xchg
movsl
mov
adc
fs
mov
or
les
xchg
or
lods
jg
fwait
incb
inc
mov
std
imul
xor
test
push
jecxz
push
dec
mov
cld
pop
or
push
xchg
in
loope
aaa
xchg
inc
popf
shrl
dec
or
cmpsb
push
jg
ljmp
cli
mov
pop
mov
pushfw
inc
int
mov
add
jecxz
or
push
mov
stos
sub
std
dec
or
cmp
rcrl
xlat
out
xor
xor
ret
out
das
pop
adc
movsb
out
push
fists
pop
and
scas
or
push
mov
cmpsl
pop
cli
mov
lods
jb
xchg
loop
mov
call
movsb
jle
jl
push
out
cli
adc
mov
xor
mov
jmp
test
add
dec
arpl
enter
xchg
loope
add
fbstp
add
xor
aad
mov
test
jg
repz
addb
lods
movsb
sub
movsl
add
mov
jbe,pt
cmc
inc
out
out
xchg
jnp
out
cld
ss
push
aam
push
rcll
mov
push
pop
sbb
or
cmp
arpl
ja
mov
rsqrtps
sub
sbb
inc
mov
sahf
inc
dec
sbb
mov
ret
ss
test
adc
shlb
movsb
xchg
sub
or
mov
xlat
xchg
lods
je
mov
pop
rorl
cli
mov
lods
mov
ljmp
lock
stos
cld
out
inc
pushf
xchg
addr16
lea
mov
and
ret
xchg
bound
mov
sub
push
stos
ds
popl
cmpsl
addr16
movl
lcall
mov
testl
rep
insl
inc
insb
cmc
or
into
sbb
adc
jnp
nop
mov
je
mov
cmp
call
sbb
push
adc
xchg
test
leave
inc
cld
dec
or
xchg
and
ss
ds
sub
out
mov
aad
xor
std
jno
xor
out
inc
pop
test
jno
sub
pop
dec
pop
sub
sbb
cli
orl
subb
mov
xlat
ja
push
daa
sub
adc
xchg
dec
lock
mov
sti
repz
cld
hlt
jnp
lcall
daa
dec
xor
xchg
stc
cmp
rorb
mov
mov
rorb
or
lret
inc
sbb
xchg
stos
repnz
inc
repz
add
outsl
cmp
ficompl
cmp
lea
test
pop
push
flds
ja
out
adc
fnsave
scas
popa
sti
lret
sahf
pop
cmp
push
or
int
mov
cmc
push
sbb
cmp
andl
stos
bound
push
sub
mov
mov
sub
scas
dec
std
popa
data16
lds
mov
push
jne
data16
push
in
adc
nop
sbb
adc
sbbb
popf
push
stos
xchg
mov
mov
add
in
inc
jl
das
call
push
imul
sbb
loop
scas
adc
dec
mov
aam
push
adc
jecxz
sbb
mov
mov
dec
es
and
sub
cltd
mov
adc
sub
flds
sbb
cmp
inc
pop
sub
rcll
insl
or
ret
jne
insl
pop
lret
ja
arpl
cmp
add
jno
push
push
xchg
xlat
push
dec
call
mov
dec
scas
pop
cmp
jge
lock
loopne
outsl
jl
push
push
adc
fsubl
fs
imul
fiaddl
push
decl
jo
sbb
push
es
lret
sbb
rorl
sub
std
test
sub
mov
iret
push
mov
je
loopne
cmp
in
jecxz
mov
and
mov
divb
ret
mov
sbb
addr16
je
cld
iret
mov
fildl
cmp
xchg
add
stc
mov
mov
jnp
and
mov
sahf
jp
jb
and
sbb
sub
pop
sahf
stos
insb
imul
dec
int
test
cwtl
sbb
jp
cs
fistpll
add
dec
fs
and
sbb
in
je
ret
xchg
mov
jns
loope
in
inc
push
jae
stos
leave
insl
mov
pop
sar
fnstcw
lret
pop
cmp
jmp
or
insl
adc
push
das
add
repz
pop
push
ret
cmc
lea
ret
dec
add
fildl
pop
test
scas
sub
or
loopne
mov
les
call
sbb
sub
test
adc
push
dec
popa
fnsave
and
mov
add
and
dec
call
or
pop
jmp
jb
dec
leave
std
push
daa
ret
fcoml
dec
out
mov
jne
push
dec
xor
mov
mov
adc
in
push
out
into
repz
out
mov
ret
pop
fwait
int3
enter
adc
fldl
ret
fisttpll
xchg
or
add
jne
xchg
jg
scas
push
ss
cmp
dec
xor
fwait
cmp
mov
stc
mov
sarl
jp,pn
jns
xchg
dec
int3
fwait
cld
mov
mull
icebp
popa
fwait
mov
ljmp
and
push
pop
jge
movsl
sbb
add
cmp
sahf
insb
inc
dec
cwtl
mov
sahf
js
dec
pop
push
shlb
mov
push
or
mov
cltd
aam
fsts
push
out
lahf
int
std
pop
je
adc
je
or
mov
aaa
dec
mov
int3
aaa
inc
rcl
xchg
mov
iret
pop
test
repnz
inc
je
ret
lea
add
pop
insb
js
cmpsl
inc
mov
ret
and
mov
iret
push
into
loope
pop
ret
pop
insl
addr16
inc
xchg
sub
and
stos
jae
push
popa
push
xchg
jb
ljmp
in
popa
push
pop
int
int
fldcw
xor
jecxz
mulb
sub
jb
stc
setg
xor
out
xor
sbb
fmuls
or
arpl
cmc
jecxz
sub
mov
sbb
xchg
push
adc
inc
icebp
xor
cmpsb
push
mov
gs
ss
add
loopne
sbb
divl
inc
jl
stos
and
sub
ds
loop
pushf
pop
fsubl
xlat
pop
mov
lds
out
or
aad
or
xor
jo
pop
lret
ss
cmpl
rorl
std
aam
rcll
es
jl
pop
adc
and
dec
sub
vrsqrtps
lcall
mov
mov
pop
pop
add
lretw
lods
xchg
clc
mov
jns
stc
adc
adc
jbe
cwtl
js
inc
lods
mov
cmp
out
mov
int3
scas
lods
pop
test
and
xor
fmuls
loop
mov
push
dec
push
mov
rcr
ud1
mov
sbbb
xor
mov
mov
sub
pop
push
rolb
popf
shrb
lds
xor
cmc
fdivrl
mov
cli
iret
mov
insl
mov
pop
push
jno
or
leave
mov
rcll
or
das
test
mov
adc
mov
xchg
or
sub
xchg
cmp
cwtl
jns
inc
sbb
add
add
iret
and
icebp
xchg
cmc
and
sbb
jecxz
sub
ss
sbb
lahf
das
ds
cli
jbe
add
push
test
jle
adc
dec
in
lahf
add
xchg
test
push
push
fwait
jl
nop
mov
pop
adc
movsb
test
pop
sbb
ja
call
mov
sbb
out
xor
fwait
add
shrb
rolb
and
cmp
gs
mov
cli
inc
and
or
pop
mov
out
sbb
inc
jo
out
pop
and
dec
jge
cmp
int3
jecxz
mov
test
jnp
dec
jbe
mov
push
orb
cmp
jp
xchg
push
out
cs
and
ret
or
insb
mov
xor
mov
jmp
pop
in
xchg
shl
fcmovbe
or
cs
pushf
mov
js
and
popa
and
jno
push
xchg
push
outsb
cltd
mov
ficoms
mov
cltd
loope
push
jno
daa
in
jo
jno
movsl
sbb
lods
mov
pop
dec
je
xor
enter
adcl
mov
popa
psubusb
add
fs
mov
shll
dec
cmp
out
xchg
sbb
fs
int3
mov
sqrtps
dec
addb
daa
enter
push
sbb
into
repnz
fwait
iret
and
jmp
cmp
dec
clc
nop
rcll
adc
jns
rorl
jle
mov
mov
addb
cmp
or
push
imul
inc
lcall
gs
sarl
xchg
mulb
jbe
stos
mov
mov
cld
loop
lock
out
pop
mov
fsubr
out
popf
test
pushf
adc
icebp
stos
mov
push
int3
out
adc
aaa
dec
mov
cmp
inc
push
insl
out
cmpsb
outsl
inc
stc
cmc
fnsave
dec
mov
sub
mov
sahf
in
push
divb
mov
addb
mov
lods
leave
enter
pop
cmp
stos
or
dec
sub
lods
inc
inc
xchg
inc
call
int
or
loop
jb
jmp
fmuls
gs
inc
nop
iret
mov
cmp
into
xchg
sub
sbbl
out
dec
fwait
and
jbe
sbb
iret
dec
pop
notb
jae
xor
mov
jmp
test
and
mov
push
jmp
or
sub
mov
xchg
call
insb
mov
mov
inc
sub
nop
loop
lret
push
jnp
in
xchg
fisubl
insl
mov
sub
xor
push
jbe
sub
fwait
int3
inc
and
mov
adc
clc
imul
mov
inc
cltd
pushf
lret
clc
jbe
lods
push
ljmp
mov
or
inc
cmp
sub
je
out
rclb
push
repnz
inc
or
jl
pop
mov
mov
jecxz
xchg
cmp
cmp
jmp
or
xchg
out
mov
imulb
das
xchg
mov
fsubr
sbb
jo
push
and
cli
loopne
sub
out
jo
xchg
jnp
sub
pop
out
fs
adc
out
dec
jno
vunpckhps
or
cmpsb
lcall
dec
add
sbb
jp
and
movsb
sbb
mov
jae
ficoms
pop
add
in
insl
push
call
adc
orl
xchg
aad
out
adc
arpl
call
pop
test
jne
pusha
pushf
and
movsl
mov
xchg
lods
adcl
inc
cmp
inc
js
jge
ror
repnz
and
mov
add
in
xor
stc
sbb
rcll
push
js
cs
test
jecxz
into
imul
cmpsb
and
add
jmp
sub
pop
popa
inc
pop
stos
loope
cmp
loop
push
lods
jo
jmp
int
and
jp
pusha
mov
bound
mov
jmp
fsubrs
xchg
jne
push
cwtl
xor
jmp
int3
and
andps
and
test
mov
xor
xlat
mov
mov
add
scas
jne
xchg
xchg
filds
andl
shll
mov
sbb
imul
loope
mov
sub
loop
mov
push
sahf
xchg
pushf
mov
gs
inc
dec
and
sub
fmul
cmp
inc
subl
aaa
push
fs
jmp
hlt
jne
movb
jae
decl
fs
orb
aam
dec
sbb
xchg
or
push
fwait
add
jbe
push
ds
sahf
add
and
xchg
cmp
push
pop
aaa
movb
and
jge
test
std
or
pop
out
mov
lods
xchg
jno
data16
pop
ja
in
fdiv
pop
pushf
std
xchg
out
adc
js
call
xlat
mov
mov
inc
imul
stos
lcall
jne
sub
aaa
adc
lret
aas
or
mov
pop
xchg
iret
adc
pop
push
mov
push
andl
pushf
inc
in
int
out
adc
ficomps
mov
leave
repz
push
es
jns
mov
push
into
sub
arpl
and
mov
xlat
mov
xchg
aas
adc
daa
add
add
push
cmc
aam
or
mov
lea
cmp
adcb
aaa
sahf
or
cmp
cmp
mov
adc
into
outsl
mov
xchg
or
rol
aam
cmp
lcall
jne
mov
add
ss
pop
jnp
out
negl
and
lock
das
mov
sub
pop
cmp
cmp
adc
mov
mov
nop
adc
mov
sar
inc
add
xor
cmp
out
and
cltd
iret
dec
mov
jo
xor
inc
test
je
sbb
fsts
push
int
scas
sar
leave
nop
scas
jle
add
rcrl
mov
jecxz
push
cmpsb
cmpsl
cmpsl
sbbl
movsl
sub
test
inc
push
sbb
jecxz
dec
hlt
hlt
ljmp
testl
movsb
xchg
jae
ret
imul
xchg
into
popa
imul
ret
test
jne
mov
lret
addb
movsl
aaa
loop
pop
jp
cs
stos
lahf
jb
push
les
fnsave
jp
fdivs
outsl
pop
hlt
jbe
fwait
sub
push
cmpl
ljmp
adc
xor
and
push
adc
pop
popa
stos
lret
pop
cmp
mov
cmp
xor
inc
rorl
add
imul
jo
mov
fildl
dec
mov
push
and
xchg
adc
lahf
neg
inc
andl
mov
fdivl
arpl
sbb
stos
nop
pop
xor
decb
mov
pop
mov
popa
pop
mov
sbb
adc
xchg
push
push
std
loop
xchg
lcall
cmp
test
popa
cmpsb
and
mov
pop
sbb
orl
std
nop
xchg
clc
mov
jmp
orb
lds
lahf
pop
and
pop
movsb
mov
aad
mov
dec
jne
shr
jb
lcall
das
sbb
push
loopne
pop
pop
sbb
push
cmp
loopne
adc
jp
sub
cmp
and
jo
in
and
in
jp
stc
je
popa
fldl
scas
test
nop
push
lds
int
jg
xchg
aad
lock
add
mov
push
lock
rcr
int
inc
jo
adc
sahf
add
cwtl
mov
movsb
add
rolb
jmp
jl
and
adc
xchg
jns
iret
addb
mov
test
inc
hlt
movsb
or
int3
sti
bound
stc
xorl
push
lahf
loop
test
iretw
stos
inc
rorb
in
push
sbb
add
into
and
imul
pop
and
pushl
mov
sbb
rep
sbb
data16
jb
xor
jecxz
adc
add
push
cmp
xor
cmp
jns
test
scas
orl
fsubrs
dec
adc
mov
jae
sub
stc
sbb
nop
cmp
sbb
lahf
jo
je
jae
inc
out
mov
jle
mov
xor
push
movsl
decb
in
xlat
test
mov
in
inc
fcmovnu
test
daa
sbb
lods
scas
xchg
stc
aam
mov
and
mov
jb
ljmp
jp
or
dec
arpl
cmp
mov
mov
push
push
xor
shlb
dec
not
inc
test
roll
scas
jle
fs
fwait
sbb
and
jns
push
or
shll
xor
dec
stos
mov
adc
sub
xlat
mov
test
adc
roll
lcall
and
and
cltd
in
jo
xchg
jb
mov
test
jmp
mov
pop
jg
xchg
fbld
out
inc
loopne
movsb
dec
arpl
divb
mov
fidivl
jae
adc
and
mov
cmp
test
xchg
cmp
dec
push
lret
mov
movsb
in
push
cmp
lods
adc
out
mov
add
adcb
test
adc
mov
fldcw
aam
cmp
jns
jl
mov
adcl
cli
popa
enter
lcall
mov
ret
mov
or
aad
pop
bound
mov
adc
xor
clc
popf
jb
std
out
mov
xor
fwait
imul
fsubrl
jnp
and
jle
js
adc
popf
xchg
pop
imul
popa
in
popf
dec
adc
stos
xlat
cld
pop
jbe
cltd
call
mov
mov
loope
sub
jae
mov
adc
push
shll
pop
mov
mov
jo
sub
inc
repz
xchg
jae
sahf
fistl
aad
jae
xor
add
dec
jecxz
mov
shl
rorb
xchg
mov
jnp
mov
sbb
ljmp
dec
pop
cwtl
bound
adcb
sbb
mov
push
xor
sbb
lods
jg
js
in
outsb
mov
jo
aad
mov
popa
incb
arpl
shlb
sub
inc
xchg
pop
add
sarb
test
out
test
aaa
test
cmpsb
xor
pop
neg
push
cs
or
add
lahf
repz
jecxz
mov
sbb
jbe
pop
sarb
fwait
ljmp
sbb
sbb
mov
sbbb
mov
fs
push
je
or
sahf
movsb
jle
repz
loope
pop
lds
jno
repz
xorl
pop
sbb
mov
push
mov
popa
mov
test
or
into
data16
adc
adc
out
add
adc
xor
daa
mov
sbb
mov
repz
mov
test
rcr
stc
out
mov
mov
movsb
inc
sbb
cmp
ljmp
sarb
lret
mov
cwtl
inc
leave
repz
push
adc
ficompl
les
fwait
add
xchg
sbb
jb
xor
xor
mov
jb
rclb
sbb
push
jae
jo
jge
jmp
sbbl
push
mov
lock
push
mov
cmp
adc
dec
mov
mov
sbb
mov
xor
jnp
jg
cmp
xchg
jle
ret
inc
mov
nop
or
and
cmp
mov
push
test
idivl
push
cmp
dec
mov
or
mov
mov
fdivr
add
push
ds
je
xchg
fwait
xor
add
sbb
jge
aad
aad
jb
push
std
dec
inc
mov
loopne
sbb
inc
pop
in
call
popa
mov
loopne
imul
fwait
movsl
cmp
outsb
and
lods
dec
cmp
jecxz
xchg
repz
mov
add
aam
xlat
pop
pop
xchg
cmpl
mov
mov
test
test
fwait
xchg
mov
fisttps
jbe
test
cmpsl
xchg
mov
pop
imul
inc
mov
mov
idivb
lods
mov
sub
in
mov
sub
pop
loop
movsl
ja
pop
push
push
ficoms
jp
lret
pop
ljmp
in
and
adc
jne
push
rorb
add
xlat
pop
mov
add
in
mov
cmp
das
jb
sarb
mov
jbe
movsb
outsl
pop
ret
push
pop
je
jp
mov
repz
mov
push
and
hlt
cli
scas
pop
mov
dec
push
icebp
jl
cmp
cli
or
jecxz
pop
fistpl
sarl
stos
es
xchg
add
mov
movzwl
jg
mov
shl
and
pushf
push
jmp
xor
pop
mov
fwait
mov
xor
sbb
jae
jp
or
cmp
ja
shrl
popf
hlt
push
stos
sub
dec
lahf
icebp
ja
fimuls
jne
inc
gs
shl
test
xorl
addb
mov
cmc
int3
das
push
cs
mov
bnd
sub
push
fimuls
sub
call
shrl
outsl
adc
xlat
ds
xor
jmp
cmp
cwtl
in
or
rorl
into
inc
repz
movsl
neg
jp
jge
lea
das
pop
inc
rcl
imul
cs
rcr
sbb
pop
mov
pop
in
std
sub
movb
std
aaa
fsub
inc
sarl
push
in
xor
adc
jp
flds
jae
jnp
inc
jle
pop
dec
incl
js
lcall
es
movsb
inc
add
gs
xor
fadd
dec
xchg
push
sbb
jno
adc
leave
add
or
mov
push
inc
fadds
pushf
push
inc
cmc
dec
xor
clc
pusha
test
lods
cmpsb
push
sub
xchg
outsl
sbb
cmp
pop
xchg
insb
push
xor
js
sub
mov
leave
inc
nop
sbb
cmp
cld
ljmp
pop
jmp
mov
sbb
mov
mov
push
popf
mov
movsl
lds
xchg
jns
bound
add
mov
fistl
inc
jmp
jmp
iret
or
jne
push
lret
sbb
jecxz
pop
cmpsl
push
xor
cmpl
adc
sub
sub
jo
xchg
jge
pop
loope
push
je
sub
loop
mov
test
daa
fsub
adc
loop
mov
inc
int
in
and
inc
ljmp
mov
sub
adc
or
dec
sub
daa
xchg
pop
std
dec
insb
adc
fst
icebp
in
sub
sub
xor
test
clc
ret
sbb
adc
out
xchg
push
cltd
xchg
inc
xor
mov
daa
call
shrl
les
bound
in
dec
sub
lahf
and
mov
mov
xor
jge
pop
lret
arpl
nop
xorb
xor
sub
mov
pop
std
jecxz
add
rep
xor
pop
xor
lret
shrb
addr16
sbb
popa
imul
aas
ret
and
and
aad
mov
insl
outsl
or
jnp
and
into
imul
data16
scas
lret
cli
loopne
std
xchg
std
push
cmp
in
cs
ds
insl
mov
fists
dec
out
mov
pop
pop
in
insb
out
mov
andl
sbb
cmpsb
shll
dec
xchg
and
fnsave
icebp
sbb
aaa
or
dec
mov
sbb
jp
push
sub
imul
mov
inc
test
adc
fisttps
push
stos
push
popa
mov
shlb
mov
aas
lcall
push
sbb
jmp
insb
xor
out
std
int
in
mov
xor
pushf
sbb
xor
mov
shll
push
xchg
iret
cmp
lret
push
or
mov
stc
test
mov
test
mov
xchg
inc
jno
int
in
mov
push
js
push
push
nop
pop
je
test
scas
xchg
mov
xor
imul
fisubl
lahf
adc
sub
stc
aaa
fucomp
fcoms
cmc
mov
out
fstpl
dec
sahf
sbb
popf
adc
xchg
scas
mov
je
cmp
mov
ljmp
xor
movsb
push
xor
es
ffree
iret
outsb
lret
mov
mov
mov
mov
push
sub
xchg
icebp
cmp
jge
mov
mov
into
cmp
push
repz
fsubs
sub
lock
sbb
cmp
push
subb
jbe
addb
leave
lret
cwtl
add
push
adcb
mov
daa
dec
jbe
adc
pop
mov
mov
pusha
shr
ficoml
mov
and
jbe
cmp
push
jmp
cmp
in
in
imul
daa
pop
dec
out
cmp
mov
std
popf
xchg
adc
jle
jo
mov
fistpl
divb
cltd
pop
loopne
xchg
dec
inc
jne
sti
sub
jnp
xchg
cmp
add
xor
stc
lret
in
out
or
mov
xchg
fwait
pushf
jg
jno
enter
pop
cld
movsb
sbb
cmp
jmp
shl
fsubl
adc
cmp
fisubrl
shll
sub
jae
lods
push
mov
ljmp
lret
and
call
cwtl
sbb
subl
xlat
es
sbb
and
fdivs
out
insb
inc
adc
sub
push
scas
sbbl
dec
repz
in
push
fistpl
or
fisttps
cmp
mov
in
in
xor
cmp
insb
sub
add
movsl
outsb
xchg
ljmp
jnp
in
pop
movsl
sbb
loop
pop
pop
out
jg
repnz
mov
mov
dec
ja
cltd
jb
imul
movsb
push
jg
cltd
js
orb
int3
sbb
ss
dec
cmovb
sub
test
xor
roll
vcvttps2dq
inc
push
data16
dec
xchg
or
out
orl
pop
imul
aas
aas
aad
xchg
repz
jno
adc
lods
mov
aaa
int3
ljmp
dec
js
lds
rorb
cmp
lret
inc
pop
mov
sbb
repz
xchg
fmull
sbb
and
or
jbe
data16
rolb
imul
aad
incb
cmp
adcb
xlat
repz
push
xchg
push
call
mov
xchg
sub
xorl
mov
mov
pop
movsb
enter
mov
xchg
or
push
xorb
popf
test
and
cmp
push
push
fs
adc
psubd
int
int
in
push
adc
jns
xor
cmc
sbb
outsb
andl
jnp
sahf
pop
std
mov
shrl
jl
jp
dec
stos
push
inc
pop
cmp
loop
jmp
adc
xor
sbb
pusha
pop
pusha
repz
leave
in
xchg
sbb
aaa
das
inc
or
sub
push
xorl
sar
lahf
xor
imul
xchg
cltd
mov
pop
cmp
dec
sbb
test
or
lock
jp
xchg
and
outsb
jg
lods
stos
push
mov
mov
dec
ds
test
mov
and
insl
lret
push
sub
mov
jns
call
scas
shl
in
shr
mov
shrl
and
aad
jecxz
lods
cmpsl
fs
dec
xchg
mov
xchg
and
ljmp
inc
lods
mov
and
shrb
sbbb
rorl
and
call
sub
cmp
fdivrl
push
stos
push
jecxz
mov
leave
lret
sub
pushf
xchg
sarb
std
push
iret
into
ret
or
sub
xor
data16
inc
pop
cmp
idivb
pop
lret
mov
aaa
cvtdq2ps
jmp
sti
movsb
push
movnti
adc
sbb
lret
xorl
sub
cmp
stc
mov
sar
rcll
xlat
pop
xor
sbb
and
cmp
mov
mov
les
pop
dec
or
jp
mov
sbb
cmp
cwtl
sahf
cli
mov
jne
pop
rcr
pop
mov
xchg
xor
mov
pop
daa
sbb
in
daa
adc
mov
popf
ss
inc
aam
jae
pcmpeqd
cmc
scas
outsb
xchg
ret
test
decl
in
sbb
movb
mov
idivl
pop
sahf
push
adcb
sbb
jnp
sub
mov
push
push
lods
mov
inc
inc
jl
pop
jne
loope
jae
xchg
cli
xor
loop
fisubrl
adc
je
pop
subb
xchg
fsubl
pop
fcompl
add
or
adc
scas
in
sbb
xor
jo
mov
xlat
outsl
cmp
and
stc
jl
adc
and
ss
jae
popf
jae
add
subb
imul
cmpsb
scas
icebp
scas
pushw
fiadds
and
and
mov
xchg
cwtl
or
nop
in
mov
shr
jmp
pop
jge
cmp
cmp
das
into
call
mov
outsb
jo
lahf
dec
mov
xor
lea
inc
imul
js
push
scas
in
repz
repz
jne
lods
mov
icebp
sbb
js
or
iret
lods
cmp
mov
lods
xor
cmpsb
xor
adc
push
pop
mov
lock
mov
popf
cltd
ficomps
adc
and
lods
in
xchg
out
push
jmp
out
push
pop
adc
mov
jnp
push
dec
and
enter
ljmp
and
and
lods
out
cmp
je
xor
xor
inc
cltd
lcall
jg
ja
in
jo
fnop
push
push
push
cld
add
fs
mov
in
add
add
in
call
out
and
fdivrl
xor
mov
and
add
sub
jmp
fldcw
repnz
ror
xchg
test
iret
mov
jmp
lock
test
movsb
repz
js
push
push
push
mov
push
cli
lahf
jp
fstpl
mov
inc
jno
idivb
push
lods
sub
pop
pop
out
cmpsl
push
fisttps
push
dec
or
bound
insb
jle
mov
cmpsb
mov
int
sahf
scas
fwait
lret
lods
dec
sbb
rorb
int
inc
sbb
push
inc
dec
xor
popf
scas
enter
cmp
jg
out
xchg
jnp
jbe
cld
cmp
clc
add
lock
jmp
push
pusha
jg
mov
push
mov
mov
pop
push
ss
inc
cmc
jle
xor
call
mov
negl
jae
mov
enter
mov
shrl
stc
xor
in
push
inc
push
cmc
scas
cwtl
test
imul
xor
add
mov
push
jnp
pop
or
loope
sbb
ja
lret
xor
js
rcrl
les
sbb
dec
pop
in
push
aad
push
dec
dec
pop
or
xorl
les
rcll
jae
sbb
adcb
mov
das
lcall
cmp
mov
pushf
jg
cld
push
ret
sbb
test
in
mov
pop
mov
cld
fcoms
out
shll
aam
lock
mov
xor
mov
test
xchg
adc
xor
in
aas
subl
mov
imull
xor
clc
aas
mov
or
enter
notl
fs
mov
dec
imul
rcrb
add
push
mov
dec
mov
ss
mov
jo
movsl
sti
mov
cs
and
dec
out
loopne
nop
adc
nop
lods
icebp
adc
gs
ljmp
mov
and
testl
cmp
mov
mov
xchg
into
add
fistps
and
rcll
jecxz
add
inc
out
add
sbb
xchg
mov
int3
or
mov
out
pop
or
lods
insb
cs
lods
mov
mov
arpl
push
mov
and
scas
mov
xchg
out
mov
mov
dec
inc
orb
testl
cmp
mov
por
test
jns
movsl
pop
jo
sub
popa
push
push
aam
dec
push
jl
lds
push
out
xor
shl
mov
fisttps
dec
xor
pop
cmpsb
mov
lret
xchg
xchg
shlb
xchg
xchg
sar
repnz
lea
pop
push
movsl
xchg
push
jl
dec
pushf
mov
cmc
inc
emms
pop
jmp
xor
stos
mov
cmpsb
test
jge
mov
stc
ss
push
subl
lods
das
and
jecxz
mov
mov
stos
dec
popf
jo
jl
loopne
or
addr16
jno
xchg
loop
dec
bnd
pop
mov
dec
in
mov
sub
imul
xchg
mov
pop
jmp
jno
inc
jae
pop
lcall
popa
mov
cld
xchg
mov
pop
or
pop
push
ja
push
sti
mov
outsb
jnp
stc
cmp
push
pop
pop
dec
iret
leave
lret
push
out
push
daa
mov
stc
adc
sbb
hlt
data16
xor
into
mov
std
xchg
inc
std
adc
and
jo
ret
mov
dec
call
movsb
push
out
nop
clc
mov
mov
addr16
addb
inc
inc
mov
adc
sbb
inc
mov
adc
fs
jnp
dec
lods
or
or
out
loopne
in
jnp
in
pop
clc
mov
mov
mov
mov
clc
cmp
lods
cltd
popa
sbb
sbb
push
or
enter
sub
jne
loop
pop
insb
decb
sub
hlt
outsl
xor
cwtl
jge
insl
jnp
mov
mov
pop
mov
push
loope
rcll
aam
adc
scas
lahf
in
pop
pop
adc
push
addl
mov
dec
rcpps
pop
xchg
push
test
in
cmp
lods
adc
dec
aaa
test
and
push
inc
xchg
int
xor
sbb
sub
bound
fimull
push
lods
lahf
cld
or
mov
fnstenv
adc
push
mov
jne
dec
out
stc
rcrl
int
inc
inc
jns
nop
lods
pop
int3
out
xchg
jp
call
ljmp
or
push
pop
mov
sbb
cld
mov
mov
mov
testb
sub
adcl
mov
in
ret
aas
scas
imul
xchg
scas
lods
lock
lds
sbb
loop
add
pusha
lods
iret
lret
stos
adc
xchg
mov
mov
jbe
adc
gs
pop
fs
push
hlt
xlat
stos
in
int3
cmpsl
xor
mov
cld
pop
mov
out
mov
cmp
jae
push
mov
push
daa
stc
and
xchg
fs
sbb
jb
adc
pop
fstl
out
push
dec
mov
mov
add
lret
sbb
mov
dec
xor
aad
ds
mov
mov
mov
pushf
ljmp
in
cmovno
shlb
lsl
dec
push
in
xor
bound
mov
out
push
or
in
aas
test
or
add
inc
jnp
and
ja
sub
gs
sub
cmp
adc
push
adc
pop
hlt
ret
loop
mov
xchg
cmp
out
popa
in
mov
or
jns
fwait
hlt
push
in
cmp
push
out
lret
inc
inc
std
cmp
inc
mov
aas
sbb
call
sbb
pop
test
fnstsw
ss
cmpsl
in
xchg
xchg
jl
xchg
or
pop
mov
mov
jg
arpl
cmpsl
pop
push
mov
fwait
bound
push
push
cmp
inc
or
ds
xchg
adc
push
out
push
loop
scas
jno
jae
sbb
cmp
and
pop
jo
es
and
shr
mov
stos
push
fistpll
jnp
out
bound
test
or
in
int3
add
lcall
add
pushf
xchg
sbb
enter
ret
mov
rolb
or
jmp
jno
ds
pop
sti
fs
push
jns
push
iret
test
pop
jno
sbb
lock
ss
mov
lret
add
adc
xchg
and
orps
mov
dec
lahf
xor
clc
dec
mov
fwait
test
or
into
mov
sub
xchg
dec
mov
push
movsl
std
mov
xchg
pop
or
mov
lcall
inc
push
xor
mov
ffree
push
pop
andb
sbb
dec
movsb
add
out
mov
lcall
stc
xchg
inc
cmpsb
imul
insb
sarl
imul
xor
inc
in
jp
out
xchg
imull
lods
mov
lcall
cmp
leave
insb
push
xor
cmp
popa
sub
pushf
out
mov
fld
mov
leave
hlt
mov
aaa
sub
leave
subl
pop
mov
jg
fldlg2
push
int3
xlat
je
mov
adc
pop
mov
and
dec
mov
in
pop
adc
leave
push
cmpsl
jo
mov
mov
lds
pop
mov
adc
jp
pop
or
and
sbb
push
mov
fistpll
xor
cmp
test
or
das
sub
push
xlat
xchg
loopne
cwtl
cli
mov
cs
cs
clc
jp
dec
or
pushf
cmp
inc
sarl
and
jbe
fimull
push
jo
ret
pminub
mov
mov
cmp
inc
push
cmp
ja
xor
jl
call
pop
pop
mull
cmpsb
push
mov
add
bound
add
push
scas
arpl
jne
in
int
stos
mov
sbbb
mov
popa
jae
push
lcall
aas
adc
sub
adc
imul
add
dec
mov
gs
jae
add
or
sub
aam
push
dec
iret
xor
fnclex
xor
js
fsubs
pop
xchg
adc
and
filds
and
out
lcall
js
movsl
jns
sbb
push
and
pop
repnz
push
iret
push
pop
sti
add
movsl
xor
sarb
cmp
je
and
mov
stos
push
adc
push
and
xor
mov
cltd
xchg
ja
rcll
and
test
outsl
nop
and
adc
popf
pop
out
add
pushf
fwait
mov
int3
cmp
mov
arpl
ds
clc
subb
xchg
mov
pop
mov
or
mov
cld
inc
cmpsl
lret
xor
push
cmpsl
fistpl
xlat
mov
out
mov
cmpsb
and
push
jo
stc
inc
cmc
sub
jmp
fstpl
pop
inc
movsb
xchg
push
pop
mov
iret
xor
les
outsb
adc
or
jmp
enter
pop
insl
adc
cmpsb
sub
fstpl
adc
cmpsb
mov
test
xchg
cmp
lock
or
adc
mov
dec
notl
jg
je
ljmp
and
mov
push
pop
cmpsb
fsts
add
sub
and
inc
push
cltd
sub
pop
adc
mov
outsl
mov
divb
rcll
or
dec
xchg
sbbl
and
in
outsb
sub
cli
faddl
lock
sbb
xchg
outsb
cmc
ds
mov
ret
in
push
lock
scas
lea
es
xchg
mov
dec
cmp
fnsave
arpl
xor
push
loop
sbb
add
fdivs
add
enter
cwtl
mull
popa
ss
jo
dec
lods
cld
movsl
lcall
rcrb
sub
test
lcall
sbb
mov
dec
call
movsb
mov
std
cmp
ljmp
roll
jo
cmpsb
adc
or
lcall
pop
sbb
js
add
or
call
ss
scas
mov
scas
push
das
xlat
xlat
mov
cli
bound
int3
in
ljmp
push
imul
sbb
xor
inc
int
mov
aad
mov
lret
mov
push
lods
pop
mov
scas
in
push
sbb
xor
aam
jl
pop
sub
push
sbbb
add
xor
sub
shlb
shrb
jp
push
insl
test
or
or
ror
jb
jmp
mov
addr16
and
rol
loopne
mov
lods
xchg
add
popf
sbb
std
rcll
testb
push
jg
fadds
in
mov
das
or
pusha
aaa
mov
les
loope
dec
mov
xor
stc
push
mov
jns
push
stos
outsl
jno
aas
and
icebp
loop
push
mov
dec
aad
push
sahf
stos
and
sti
adc
cmpsb
enter
sub
pop
mov
stc
pop
mov
xchg
cmpsl
cmp
push
arpl
mov
pushl
sub
test
iret
dec
lea
or
mov
aaa
mov
pop
scas
ss
clc
ror
fimuls
sub
arpl
loope
jae
add
jmp
inc
ljmp
or
dec
adc
cld
add
adc
aaa
stos
loop
mov
cmp
lret
sub
jmp
inc
int
mov
fisubl
and
lock
push
sbbb
mov
pop
or
ret
insl
pop
mov
sahf
es
pop
rcrl
jle
pop
into
movsl
jnp
add
out
sbb
mov
add
scas
cs
push
jle
in
pop
mov
push
ja
insb
xchg
fmuls
loope
cmp
gs
enter
gs
imul
push
in
out
mov
ffreep
pop
xor
xor
xlat
in
push
add
mov
cmp
dec
das
or
insb
mov
jmp
dec
imul
mov
clc
out
and
pop
aaa
mov
outsl
sub
bound
cmp
nop
loopne
adc
jne
pop
add
or
aas
dec
fs
andl
pop
pop
mov
dec
add
push
cld
sbb
je
push
lods
mov
mov
clc
andl
imul
sbb
fidivrl
jne
in
movsb
jge
inc
stos
sub
insl
mov
loopne
rcrl
mov
add
and
cmp
cmp
aam
sub
test
test
sub
cmpb
insb
jne
daa
pushf
dec
rclb
push
pop
xchg
movsb
sbb
outsb
xchg
pop
push
cli
dec
push
mov
enter
jecxz
inc
push
lret
cmpsb
xor
and
cmp
sbb
popf
addr16
scas
push
mov
or
sub
aad
cmp
push
in
out
mov
add
ja
jl
jmp
xchg
lods
xchg
aas
xor
xchg
js
les
or
mov
ret
ret
fwait
rorb
in
fcmove
xchg
test
pop
jbe
scas
data16
rol
ds
jbe
sti
pop
and
mov
pushf
dec
negb
pop
aaa
clc
or
lahf
sbb
test
cmp
pop
sub
in
add
cwtl
cmp
inc
adc
in
int
mov
inc
jl
cltd
jle
pusha
repnz
xchg
sti
and
jae
sbb
jle
push
push
pushf
repnz
movsb
adc
icebp
mov
loope
es
add
cs
jne
dec
adc
testl
faddp
cld
jno
or
push
sub
pop
jns
movsl
pushf
pop
enter
dec
xchg
jnp
or
jmp
sbb
leave
loopne
jno
std
js
mov
or
mov
shlb
jle
es
jo
shrl
incb
imul
ficomps
push
and
mov
stos
movsb
or
aas
and
jno
mov
sbb
rcrl
les
dec
fdiv
push
push
fsts
fbld
pop
stos
sbb
test
js
mov
fs
movsb
cwtl
bound
dec
iret
cld
and
and
cltd
dec
jns
mov
lock
push
leave
pop
stos
insb
and
call
mov
pop
push
outsb
int
scas
dec
js
mov
lods
xor
xchg
and
xlat
iret
mov
mov
and
pushf
test
das
mov
sub
adc
mov
xor
xchg
test
cwtl
lods
rolb
imul
stos
mov
mov
arpl
hlt
jl
insl
insl
sbb
div
lods
pop
cli
adc
fcomp
mov
adc
xchg
fsub
cmp
pop
aaa
mov
mov
adc
lods
cmpsb
pop
or
icebp
fisttps
sbb
jg
test
aam
dec
loope
or
sarb
inc
jmp
xchg
leave
movsl
rep
call
dec
mov
mov
sahf
add
sbbl
jp
adc
mov
jmp
mov
iret
sub
out
inc
dec
cmpsb
fcomip
mov
mov
mov
jmp
in
mov
sahf
call
ret
sbb
mov
jb
xchg
movsl
test
cld
fldlg2
imul
loopne
mov
cmp
incb
mov
xor
dec
fwait
jae
jo
push
add
subb
in
fdivl
cmp
xor
aaa
lret
fwait
inc
test
mov
mov
push
pop
in
push
push
aad
sbb
loop
pop
rorl
adc
repnz
test
push
jg
out
adc
lods
xchg
adc
pop
and
test
xchg
adc
dec
in
enter
mov
pusha
jo
inc
and
cltd
jle
shrb
movl
jno
xchg
pop
xor
pop
sub
je
sbb
mov
pop
mov
mov
sbb
test
fldcw
push
loop
sahf
and
lea
jb
out
arpl
movsb
daa
lret
arpl
mov
arpl
int3
jle
add
call
adc
dec
sub
je
les
mov
data16
push
ret
rorb
and
mov
mov
jbe
xor
icebp
xchg
addr16
pop
cwtl
and
outsb
jnp
pop
in
mov
aad
lods
mov
scas
loope
add
lock
jno
xchg
cmp
jb
xchg
add
sbb
push
mov
les
jbe
aam
or
clc
mov
xchg
ret
cltd
pop
jl
std
push
cmpb
inc
stos
js
add
push
and
sub
mov
mov
pop
inc
subb
je
cmpsb
mov
fildll
xor
in
das
movsb
pop
or
push
int3
aaa
push
or
mov
std
clc
out
dec
xchg
cmp
mov
cmp
inc
mov
adc
out
sbb
stc
dec
shr
cmp
and
std
fnsave
aad
dec
lahf
subb
mov
jp
pop
test
addr16
loope
jnp
add
icebp
test
mov
push
mov
pop
inc
mull
dec
aaa
jp
mov
jns
cmpb
movsl
sub
adc
subb
inc
test
popf
cltd
jns
outsl
std
test
les
pop
cmc
popf
push
or
jge
cmp
dec
clc
mov
push
add
push
add
pusha
loopne
outsl
mov
xchg
mov
push
sub
inc
mov
lret
mov
test
pop
leave
movsb
ljmp
repz
arpl
scas
es
jge
jp
adc
adc
fldl
aaa
push
out
adc
add
cmpsl
repnz
lock
sub
imul
loopne
stos
and
and
lds
sti
data16
repz
or
gs
mov
fcomip
lods
jle
xchg
adc
sbb
add
jne
sub
loopne
movsl
test
lcall
pop
push
sub
sbb
inc
les
jne
cmpsb
in
xor
xor
mov
mov
mov
cwtl
ror
or
in
jg
jns
sub
mov
test
cmp
daa
and
test
or
or
out
inc
xchg
lea
nop
mov
add
xchg
jge
aas
testb
inc
jae
cmp
sets
jae
push
or
pop
sub
push
rorl
scas
mov
mov
pop
dec
addr16
push
cmp
lds
out
or
mov
jnp
sbb
into
into
add
sbb
icebp
loopne
mov
jg
or
inc
add
loopne
scas
pop
dec
jb
scas
out
push
leave
frstor
adc
inc
xor
cmpsb
notl
ret
lock
dec
add
insb
dec
sub
adc
sbb
jnp
or
dec
ja
fcomip
jmp
insl
pop
jge
out
and
push
sbb
ss
mov
loope
cmp
roll
enter
inc
inc
inc
fistpl
push
add
mov
daa
cs
call
lret
sbb
mov
or
push
lea
test
in
hlt
xchg
fincstp
sbb
ficompl
shlb
jne
or
fs
mov
cld
aaa
std
sub
ror
mov
cmp
dec
cli
into
cmp
loope
stos
adc
pop
call
push
dec
dec
cld
fnstenv
cmpsl
bound
jge
adc
mov
fdiv
in
cltd
loopne
or
data16
test
aas
ret
iret
xchg
icebp
mov
xchg
ja
cmpsb
ret
xlat
insb
ficoml
ret
stos
sahf
inc
lods
lods
xchg
clc
sub
xchg
dec
imul
mulb
and
nop
or
mov
jb
test
and
lods
sbb
push
scas
mov
push
lret
lret
je
sbbl
mov
jo
mov
xchg
fs
pop
adc
aaa
jo
nop
dec
inc
dec
push
xchg
pop
mov
pop
bnd
inc
scas
data16
add
push
dec
jge
push
aas
imul
ja
mov
sub
mov
push
shr
into
lods
add
push
push
ret
ret
jns
dec
pop
aad
imul
mov
scas
sti
imul
mov
mov
pop
enter
xchg
mov
xchg
repnz
in
sbb
lods
and
rorb
addr16
jg
and
cltd
and
and
sbb
mov
rcr
pop
mov
popf
jg
pop
insb
xchg
out
sbb
mov
lods
adc
int3
out
jns
fs
and
or
mov
int3
test
not
out
jmp
popf
cmp
loopne
xchg
jp
cltd
subb
lea
jmp
stos
mov
cmpsb
push
divl
pop
sbb
fwait
xchg
xchg
outsb
mov
int3
lcall
mov
adc
sbb
jno
dec
mov
pop
ljmp
rcr
test
jp
dec
mov
data16
in
js
or
mov
mov
push
je
inc
repz
out
mov
mov
andb
popa
ljmp
mov
sbb
xorb
fisubs
mov
lods
lcall
mov
faddl
pop
jne
popf
out
cltd
mov
xchg
and
xchg
jg
addr16
popa
lods
or
roll
cmp
push
fisttpll
xor
popf
pop
mov
dec
push
fisubrs
aaa
outsb
nop
dec
icebp
test
enter
fwait
mov
add
stos
bsf
jp
stos
adc
pop
hlt
lock
popl
mov
scas
out
jno
repz
cmp
ds
xchg
mov
adcl
xor
sti
xchg
int
add
cli
jp
xchg
outsb
inc
loop
jno
insb
aad
fcomip
test
push
sub
mov
ss
cmpsl
ljmp
adc
cmp
lock
out
bound
aaa
aaa
lret
arpl
aas
jg
add
mov
add
push
pop
inc
fxch
lcall
scas
push
or
loope
repnz
mov
push
movsb
ss
es
pusha
and
inc
and
movsb
lahf
adc
test
sbbb
pop
daa
xor
stc
jnp
adc
call
push
in
mov
mov
cmpsl
cmc
pop
sub
hlt
in
sub
mov
mov
imul
mov
fwait
inc
dec
pop
cli
test
pop
jnp
pop
mov
mov
das
popf
movl
fistpll
scas
aaa
ds
mov
pop
int3
mov
out
gs
ficoms
sub
mov
in
and
mov
fwait
shrb
insl
stos
jmp
ds
mov
lahf
push
push
shlb
mov
gs
inc
lret
int
fwait
aam
std
lods
shrb
xorb
jle
dec
imul
rclb
jmp
fsts
xchg
sbb
mov
jmp
addr16
push
cmpl
mov
dec
xorb
cmp
mov
sarl
jle
les
dec
aas
fsubl
jl
sub
and
mov
aas
xor
rolb
testl
jne
js
mov
add
pop
int
push
fsubl
cwtl
inc
add
dec
inc
scas
and
cmp
repnz
sbb
push
jecxz
sbb
test
sbb
lret
lds
sub
xorl
push
movsl
pop
aam
dec
mov
shlb
mov
mov
mov
mov
jb
inc
jp
sti
out
lret
pushf
mov
mov
cs
enter
xor
add
and
mov
push
pop
jno
sahf
xor
pop
sub
cwtl
mov
push
call
cwtl
cmc
push
popa
and
jns
into
test
test
test
cwtl
mov
lods
fsts
imul
imul
repz
out
cmpsl
jne
fs
pop
fwait
repnz
inc
lret
jmp
adc
scas
imulb
cmp
pop
xchg
xchg
outsb
adc
adc
dec
pusha
mov
sub
cmp
pop
stos
je
rcl
xchg
jb
cmp
pop
jp
jnp
mov
pop
cmpsb
inc
cmp
cwtl
dec
cli
pop
ret
push
cmp
jb
pop
sbb
sub
mov
inc
xchg
lds
leave
mov
mov
popa
or
mov
jb,pt
shlb
mov
lods
test
lea
aad
fs
lods
and
cmp
or
mov
dec
pop
pop
sahf
jmp
xchg
je
xor
ret
mov
mov
or
adcl
mov
daa
in
pop
mov
mov
in
jne
lods
and
scas
or
cmp
pop
sbbb
popf
adcb
jecxz
xchg
js
lcall
lret
and
popw
or
push
rcl
cmp
xchg
sbb
xchg
mov
sub
pop
dec
jns
imul
sbb
push
adc
daa
add
xor
pop
mov
add
pop
sbb
clc
movsb
push
xor
adc
jl
aaa
mov
loopne
mov
fisttps
pushf
sbb
and
cmc
xchg
out
pushf
rcrb
add
leave
and
stos
push
jnp
sub
es
sub
shrl
sahf
aam
mov
cmpsb
lock
sbb
push
add
imul
jbe
jb
loop
cmp
popa
xor
fwait
add
xchg
mov
mov
push
xchg
iret
jbe
dec
sub
xlat
out
sbb
dec
push
mov
loop
xchg
cmp
jbe
lods
popf
cltd
xor
rol
push
adc
lods
enter
push
pop
xchg
xor
mov
or
test
xor
pop
out
into
shlb
outsb
pop
sub
cmp
and
xchg
and
mov
inc
mov
cmp
jnp
or
dec
movsb
cwtl
in
adc
inc
lahf
insb
nop
push
popf
cmc
push
and
dec
dec
xchg
push
pop
push
das
arpl
xchg
outsl
dec
lds
repnz
jle
ret
lods
daa
adc
pushf
or
jo
imul
addr16
cmpl
sti
jnp
pop
lcall
xchg
xor
insl
lea
das
es
xlat
add
cmpsl
push
add
mov
aaa
jmp
nop
push
inc
je
repnz
sbb
test
push
out
jl
push
fadds
daa
cmp
mov
outsl
xchg
jne
jg
inc
out
or
adc
mov
sub
and
push
mov
adc
fnsave
jo
imul
sub
cs
pusha
imul
mov
idivl
sub
test
lods
in
lds
test
xchg
dec
pop
rorb
out
add
icebp
pushf
stos
cli
shl
dec
lret
sahf
cld
mov
push
and
sbb
insb
xchg
inc
xor
nop
nop
lret
popl
sbb
xor
sbbl
insb
push
fstpl
in
push
sub
mov
lcall
mov
xor
lock
into
pop
pop
mov
orl
xchg
stc
call
mov
test
in
xor
push
rcrb
test
movsb
addr16
nop
loop
inc
cmc
int3
jb
in
imul
mov
mov
movsl
rol
push
loop
sub
imul
xchg
cmpsl
arpl
xlat
jbe
or
mov
mov
pop
mov
xor
jbe
stc
outsl
insb
iret
mov
pop
outsb
sbb
pushf
pop
sbb
inc
xchg
inc
fucomip
dec
hlt
mov
jnp
inc
notl
out
cld
lods
and
push
into
scas
std
dec
or
xchg
lret
inc
repz
lods
pop
test
ja
jbe
xchg
es
jg
sbb
aaa
stos
fimuls
push
push
jp
lock
je
sbb
jmp
mov
lods
scas
stos
cs
adc
in
sbb
orb
xorl
sbb
xor
or
mov
int
int3
mov
out
mov
pusha
pop
push
in
je
pushf
insb
insb
pop
xlat
mov
jmp
or
mov
mov
push
mov
cmp
push
sbb
daa
shrl
aam
jae
into
xchg
rorl
repnz
mov
das
or
jle
test
popa
and
hlt
outsl
popa
mov
and
push
mov
jecxz
arpl
inc
into
lock
xor
lcall
mov
push
add
sub
or
pop
aad
mov
std
adc
test
inc
mov
add
and
rorb
lcall
and
fsubr
std
ljmp
mov
sbb
lcall
push
data16
xor
movsl
into
popl
imul
movsb
pop
adc
mov
pushf
int
lcall
pop
mov
xchg
mov
out
dec
xchg
rcrl
cli
leave
nop
adc
push
mov
cmp
and
mov
pop
test
fcmovu
fsubrl
sbb
dec
data16
cmp
cmpsb
ficompl
or
xchg
xor
sbb
dec
cld
sahf
jg
pop
sarl
adc
mov
mov
cltd
or
adc
dec
mov
call
and
data16
jle
repz
in
mov
lods
in
pop
mov
push
and
stc
push
sbb
cmpl
push
shrb
or
subb
daa
xchg
or
fcmovne
xor
adc
ds
and
inc
adc
cmp
fistpl
ss
imul
jge
add
sub
pop
iret
or
or
xor
stos
inc
lret
andl
xor
int3
pop
lcall
push
dec
mov
and
ljmp
int3
bound
xorl
pop
scas
cmp
dec
and
out
and
hlt
add
nop
mov
pop
scas
das
and
fwait
out
incl
jnp
pusha
jl
mov
nop
int3
lret
xchg
xchg
ret
lahf
sub
hlt
hlt
stc
cltd
sbb
fwait
or
cmp
and
mov
or
push
adc
pop
adc
je
out
mov
and
sub
adc
out
xchg
mov
aas
icebp
adc
xchg
ljmp
lds
pop
push
xor
shll
or
add
dec
inc
mov
lds
add
and
pop
in
dec
lret
test
cmp
sub
repnz
sub
mov
rcll
mov
aad
cmc
scas
les
fsub
pop
scas
icebp
mov
jne
sbb
sbb
shll
bound
mov
notb
cmp
out
lock
les
jle
inc
xchg
mov
jmp
and
cmp
push
cmp
cmc
shr
push
adc
out
lods
dec
call
jb
add
cwtl
or
or
mov
xchg
sub
cmpsl
fdivrl
and
pop
lret
and
insb
sub
push
sbbl
xchg
notl
ds
lods
jge
enter
arpl
pop
lods
mov
mov
xchg
enter
push
ret
dec
mov
pop
push
cld
sub
cmpsb
xchg
cld
int3
jle
push
xchg
fistps
xor
cli
test
lahf
pop
inc
xchg
out
jbe
xor
xlat
xchg
add
cli
addb
lcall
inc
and
xor
inc
mov
gs
mov
and
imul
push
or
sbb
test
push
sbb
mov
mov
js
cltd
idivl
mov
das
imul
push
aam
jmp
jg
add
cmc
xchg
add
mov
fdivrs
jle
mov
mov
rcl
testl
test
mov
std
cmp
xor
popa
jnp
vmovdqa
in
and
inc
push
xor
add
cmp
adc
jmp
sar
pop
dec
push
es
or
es
fcomip
incl
imul
in
out
addl
gs
mov
mov
cmc
addr16
add
fstpl
mov
cs
fstps
mov
pop
aas
ljmp
icebp
mov
sbb
ret
fistps
movsb
pop
enter
mov
pop
out
cwtl
outsl
addr16
insl
call
xor
les
cmp
inc
aas
sub
push
fistpl
loop
in
repnz
out
mov
out
push
and
popf
add
cmp
js
ljmp
jae
mov
push
mov
mov
dec
dec
enter
push
sbb
out
aad
dec
cmp
inc
mov
fcoms
or
mov
aad
xor
add
leave
jo
mov
lea
std
cmp
or
or
pop
int
aas
or
rcr
pop
adcl
pop
mov
cmc
push
jns
cmpb
add
xchg
xor
inc
dec
fiadds
scas
mov
inc
aas
adcl
aad
mov
add
ficompl
insl
mov
je
fs
lods
mov
xchg
xor
mov
sub
pop
mov
cmp
test
push
popa
cmp
mov
in
lods
test
sbb
sub
jae
fistps
aaa
xchg
pop
cmc
loope
and
arpl
outsb
shrb
out
enter
loope
or
pop
addb
dec
repnz
adc
inc
repnz
gs
rcll
add
test
mov
xor
and
jo
ds
repz
or
pop
xchg
test
ja
and
sbb
test
xchg
data16
jl
cmp
out
add
test
push
mov
mov
ja
or
pop
mov
rclb
or
or
push
int
das
xchg
jl
test
push
sbb
and
stos
sub
push
imul
sbb
mov
adc
lods
xor
and
xor
fcmovu
dec
test
cmp
test
rcrl
jecxz
popf
adc
pop
and
jae
pop
mov
jp
enter
mov
lret
adc
jl
insb
and
lahf
imul
add
mov
cmpsl
xlat
inc
lock
or
xor
aam
pop
mov
cmp
xchg
and
jecxz
cwtl
les
mov
mov
lods
jge
pop
cmpsl
sub
call
in
sahf
or
jno
daa
ret
sbb
mov
lret
push
jecxz
mov
scas
push
rcll
out
fistpll
sbb
xchg
and
and
inc
push
insb
lret
nop
xchg
mov
aas
jae
add
xchg
pop
inc
or
mov
jo
pusha
push
xor
dec
sub
adc
dec
mov
dec
and
or
push
push
icebp
lcall
jo
push
pop
out
lds
or
fdivrp
dec
cmp
lea
push
hlt
push
test
in
push
sub
xchg
rcr
inc
movsl
xchg
movsl
lcall
movsb
inc
mov
inc
test
rcr
and
imul
rclb
inc
loop
loope
adc
sub
or
jecxz
mov
push
cmp
aam
bnd
xchg
jnp
add
xor
xor
sub
je
cmp
xor
pop
inc
clc
shll
mov
pop
ljmp
jecxz
loopne
cmpsb
jmp
cs
inc
aas
sbb
gs
notb
xor
and
hlt
cmp
aaa
loop
icebp
lds
out
lret
cmp
ficomps
dec
enter
in
insl
outsl
dec
outsl
loopne
push
test
inc
push
cs
and
lea
adcl
jecxz
inc
sbb
jecxz
mov
ret
repz
imul
mov
insb
push
ljmp
mov
lds
mov
cmc
mov
add
int3
xchg
aad
jb
imul
fnstcw
out
dec
fwait
hlt
nop
adc
in
and
mov
mov
mov
adc
pop
add
or
fistpl
sarl
test
pop
push
pop
jae
add
in
push
jo
arpl
fcoms
ficoml
mov
mov
push
fnstsw
jmp
out
inc
xlat
cmp
mov
les
sub
fs
jno
ficomps
arpl
clc
sbb
test
xchg
fdiv
xchg
fisttpl
add
fcoms
or
mov
jmp
inc
lret
or
addr16
or
sbb
or
pop
push
dec
xor
mov
jb
mov
ja
das
cmp
sub
in
lret
inc
xor
imul
add
aas
sbb
ss
sbb
adc
lahf
mov
nop
out
loop
xlat
jecxz
fxam
rcrb
mull
inc
lcall
pop
jp
in
adcl
std
mov
nop
gs
xchg
mov
dec
jbe
xchg
loopne
push
sti
sbb
outsb
push
les
in
clc
bswap
xchg
sbb
negl
sub
shlb
pusha
sub
in
aad
xor
arpl
cltd
and
mov
mov
adc
movsl
push
pop
ss
or
adc
xchg
out
in
lds
and
sub
mov
mov
mov
xchg
jno
imul
mov
test
popa
add
push
and
add
sub
push
mov
cmp
pop
enter
cmp
int3
sbb
fwait
es
outsb
movsb
mov
std
cmpsl
rclb
push
pop
sbb
es
cmpsl
jge
dec
mov
pop
loope
jge
pop
addr16
inc
mov
mov
add
jmp
sbb
jl
mov
int
xlat
popf
and
mov
subb
sbb
popf
and
dec
dec
loopne
mov
lds
mov
dec
popl
jge
arpl
lods
inc
pop
pusha
jne
test
or
imul
push
jae
ffree
xor
mov
mov
pop
sbb
dec
xchg
mov
xchg
leave
mov
pop
ss
je
pushf
inc
cmp
cmovp
popa
test
pop
mov
pop
int
sub
xor
pop
loop
sbb
inc
push
push
cmpsl
lods
pop
aam
mov
jge
leave
push
xchg
add
push
in
mov
js
inc
sub
into
call
mov
cmp
jg
popf
int3
mov
insl
aaa
test
adc
imul
ds
push
lret
mov
mov
cwtl
jae
cwtl
aas
mov
bound
add
dec
stos
inc
fs
or
fwait
mov
pop
dec
jl
int3
pop
lea
fsubrs
mov
cmc
jle
jl
icebp
es
popf
ja
cld
and
lret
jnp
push
mov
popa
dec
and
or
fdivl
out
repz
std
xchg
xor
mov
xor
inc
xchg
mov
int
jae
fs
xchg
sub
lods
shlb
xor
and
adc
jge
arpl
loope
dec
push
sub
cmp
add
mov
in
filds
add
out
ficoms
adc
xchg
push
adc
pop
or
lods
fsub
fdivrs
jae
lea
fidivrl
push
sub
cltd
dec
dec
dec
dec
xorb
lea
outsb
cmc
into
flds
subb
mov
dec
imul
repz
pop
shlb
das
scas
int3
dec
pushl
pop
push
in
hlt
and
jmp
mov
fnsave
mov
scas
fadds
cltd
push
fwait
mov
les
xor
cmpsl
push
out
aad
int3
les
mov
cmpsb
shlb
fdivrs
pop
ffree
sbb
lcall
xchg
mov
cltd
int
enter
fsubr
vpshab
push
outsl
and
out
sbb
cmp
sbb
sti
xor
dec
movsb
cmp
loope
or
or
outsl
mov
lods
int
jne
pop
add
cmp
loop
sti
jle
ja
sti
pop
sarl
xor
or
jb
pushf
shr
fsubl
es
lahf
or
or
pop
xchg
in
xorl
in
push
cmp
negl
push
shl
orl
adc
aas
stos
mov
mov
adc
out
jg
mov
orl
xchg
in
in
rclb
rolb
pop
mov
idivl
das
inc
loopne
mov
scas
test
push
fnstenv
push
addl
xchg
stos
outsb
inc
xchg
leave
outsl
mov
mov
sub
enter
add
sti
cmpsl
loope
mov
inc
pop
push
xchg
mov
push
push
push
movsl
shl
aaa
int
inc
jns
xchg
pop
push
jbe
mov
lock
arpl
outsl
arpl
je
mov
push
or
lret
pop
mov
mov
shl
inc
js
fxch
testb
icebp
aas
jne
jo
pop
dec
push
in
daa
sub
push
mov
inc
mov
repz
cld
sbb
negl
arpl
inc
loopne
jo
dec
dec
pop
dec
icebp
jnp
jecxz
push
mov
mov
cmpsb
xlat
xchg
xor
adc
push
xchg
mov
add
sbb
jno
xchg
jle
mov
arpl
dec
xchg
mov
leave
ss
ret
cli
xor
inc
sarb
pop
cmpsl
mov
jge
jge
cmp
dec
xchg
cmp
mov
and
dec
xor
sbb
addl
popf
sbb
push
aad
out
adc
sti
test
xchg
jecxz
inc
pop
ljmp
fsincos
lret
jns
dec
cmp
ja
jle
push
push
pop
fisubs
xchg
xchg
xchg
cmp
fcmovnbe
jp
jecxz
outsb
mov
lock
jge
add
push
xchg
fdivrs
push
int
or
sahf
out
or
xchg
mov
movsl
push
push
es
test
sub
inc
cmp
cmp
xor
dec
adc
movsb
scas
dec
jl
add
fcmovb
cmc
jp
pop
rcrb
pop
inc
fcompl
mov
in
cmp
jg
test
in
arpl
mov
mov
cltd
mov
repnz
mov
adc
or
mov
mov
test
lds
in
push
mov
test
pop
jae
mov
popf
out
and
rcl
mov
fsubrl
cltd
testl
add
repnz
aaa
and
and
addl
rorl
test
xchg
or
fstpt
pop
mov
sub
adc
xchg
cmp
loop
imul
std
dec
in
sub
sub
aaa
shll
lock
cli
sub
hlt
es
pushf
ljmp
xor
mov
xchg
push
div
ljmp
out
repz
scas
cmpsl
lret
cld
add
xchg
je
xor
mov
out
arpl
pop
mov
aad
dec
ret
mov
inc
xchg
sub
in
jge
cmp
or
add
adc
pop
andb
scas
pop
mov
inc
jo
inc
pop
push
xchg
mov
cmp
or
call
imul
outsb
pushf
lret
jb
jg
ljmp
or
jp
dec
cmp
and
lods
sbb
and
aad
push
pushf
mov
mov
mov
imul
mov
pop
mov
addb
lret
out
dec
insl
ljmp
inc
jp
loop
push
mov
les
mov
shlb
rclb
imul
mov
xchg
or
inc
imul
cvtps2pd
fwait
addr16
fisubs
mul
inc
insl
or
pop
inc
dec
lods
and
cmp
lcall
lea
cmp
sbb
sub
std
fdivrl
and
lock
pop
pop
mov
pushf
or
mov
std
push
fildll
xchg
xchg
clc
push
popf
subl
push
std
imul
fisttps
bound
js
decl
lods
inc
pop
and
pop
out
into
dec
je
shll
repz
mov
push
dec
cli
dec
xchg
mov
aas
and
xor
pop
sbb
loop
insb
pop
dec
pop
sub
or
sub
sahf
xchg
rcl
mov
push
fisubrs
lea
shl
xchg
test
aam
out
fdivrl
outsl
ret
dec
lea
or
test
out
pop
mov
jns
imul
cs
popa
mov
push
addl
test
cltd
mov
xlat
xchg
pushf
lahf
pop
cmp
lock
ljmp
lahf
xchg
loopne
push
test
frstor
cmp
or
mov
test
popa
lds
pop
mov
sub
loope
push
mov
dec
sti
pop
test
rorb
cmp
movsl
stos
lea
inc
add
test
cmp
stc
mov
movsl
cwtl
nop
mov
inc
mov
adc
ja,pt
jl
imul
dec
cwtl
jle
stos
cld
adc
pop
leave
scas
jb
xchg
leave
lcall
jo
daa
push
pop
mov
lea
iret
sbb
and
lahf
push
popa
or
out
je
movsb
mov
xor
sarb
aas
fldcw
pop
cs
mov
negb
sbb
test
sub
mov
jae
adc
cmp
adc
dec
inc
or
out
xor
adc
add
data16
aad
int
inc
sub
out
xchg
out
inc
push
leave
stos
psubd
pop
fildll
enter
or
xor
or
adc
int3
mov
movsl
iret
adc
cmp
andl
jge
ret
or
pop
test
mov
jns
jg
and
mov
stos
mov
repnz
cmp
dec
dec
xchg
clc
mov
fimuls
push
jmp
mov
jl
push
cmc
cmp
movsb
push
add
push
imul
mov
rcll
mov
push
cld
ss
imul
mov
into
ja
movsb
sbb
outsl
and
fistl
lock
shlb
out
lret
xor
pop
xor
and
lret
pop
ret
pop
out
pop
hlt
rcrl
iret
dec
rcrl
and
jnp
cmpsl
pop
cmp
gs
cwtl
pop
aad
cmc
add
fcoml
inc
xchg
adc
nop
cwtl
movsl
mov
jle
sub
repz
cli
rcl
dec
aam
ror
jle
xor
ss
hlt
in
adc
mov
aam
mov
dec
outsl
and
sbb
push
ja
or
std
xchg
ret
lea
sbb
jb
test
sub
mov
jge
push
sbb
xor
loopne
pop
enter
xor
mov
and
add
jne
stos
cli
mov
mov
push
cmpsl
imulb
pop
imul
loop
fildl
ljmp
aad
or
mov
jae
das
add
je
inc
cmc
or
adc
add
inc
pop
pop
push
ljmp
push
js
jae
mov
jge
fisttpll
pop
dec
into
cmp
test
movsl
es
jg
ret
dec
mov
mov
imul
sub
std
rorl
movsl
cmp
mov
or
pusha
lods
in
mov
popl
pop
imul
mov
sahf
pop
jb
adc
shlb
xchg
xchg
popa
inc
stc
ja
sub
stos
mov
xor
sbb
mov
lahf
js
push
sahf
incb
inc
pop
push
gs
inc
xor
nop
fs
adc
push
inc
inc
and
imul
inc
mov
mov
push
cld
push
inc
out
out
lcall
and
pop
fimull
mov
mov
add
inc
mov
stos
dec
jb
xor
leavew
testb
cli
xor
and
lods
outsl
or
arpl
or
test
cs
push
stos
xchg
mov
inc
aam
ficompl
jg
loope
jb
push
out
or
mov
loope
push
jns
ss
adcl
xor
das
popf
pop
jle
sarl
push
cmp
xchg
sarb
jae
cmp
push
out
xor
push
cmp
adc
inc
les
mov
add
pop
int3
pop
icebp
es
and
inc
inc
mov
and
out
or
dec
xchg
fmull
push
decl
and
stos
sub
sub
mov
imul
out
repnz
aas
clc
fiaddl
mov
int
pop
adc
add
adc
add
aas
movsb
sbb
add
call
cmc
push
mov
icebp
inc
inc
jbe
xchg
mov
cs
iret
jno
mov
fninit
in
and
lret
mov
mov
out
insb
andl
xchg
cmp
mov
mov
cmp
dec
das
xor
pusha
dec
sub
mov
jns
pushf
dec
xor
fsts
push
mov
hlt
xchg
jecxz
inc
push
sbb
sbb
inc
mov
xchg
cmp
mov
pop
loopne
loopne
xor
mov
xor
popa
dec
jno
sub
inc
mov
push
add
fimull
adc
push
mov
cmc
push
or
or
popa
cltd
inc
adc
hlt
pop
sbb
dec
mov
imul
ja
sub
sbb
jmp
mov
xor
sub
add
mov
mov
lds
fbld
cmp
daa
ret
lcall
ljmp
xchg
xchg
test
inc
movsl
xchg
ret
push
negb
out
fistpl
or
pop
dec
mov
mov
arpl
fdivrs
xrelease
mov
mov
lods
sahf
insb
es
push
test
lret
mov
icebp
push
or
xchg
call
and
pop
pop
and
out
xchg
inc
mov
push
jecxz
jp
cmp
aas
or
xor
stos
inc
or
pop
leave
xor
xchg
je
mov
mov
xor
rorl
imul
dec
and
and
loop
lods
les
mov
pop
add
in
mov
mov
loope
mov
test
fbld
pushf
mov
sahf
mov
mov
test
lret
add
inc
test
and
push
mov
call
dec
loope
push
jle
arpl
lock
xchg
addb
inc
ljmp
jbe
scas
lea
fistps
mov
or
xchg
mov
and
or
jmp
xlat
lods
push
mov
cmp
push
jbe
aas
mov
jo
test
pop
imul
jns
pop
mull
addr16
xchg
sbb
sar
in
stc
lret
aaa
sbb
add
test
lods
fucom
add
dec
cwtl
jecxz
xor
cwtl
stc
lods
cmp
xor
cmc
js
or
shrl
inc
xchg
pop
lods
rorl
test
and
aam
mov
enter
iret
jb
dec
dec
insb
or
int
cmp
inc
cmp
daa
fists
sbb
sub
rolb
sbb
xor
pop
movsb
sbb
js
adc
xchg
dec
mov
movsb
jle
fdivrl
xor
addl
add
dec
fcoms
pop
out
das
mulw
jmp
subb
sub
jns
cld
bound
pushf
aad
mov
jb
mov
jge
mov
jg
inc
fucomip
sti
pushl
inc
dec
imul
les
cmpsl
shll
js
xchg
cmpl
bound
mov
movb
cmp
insl
fmull
push
or
pop
arpl
mov
inc
scas
xor
jp
sarb
inc
xor
pop
adcl
jb
in
imul
mov
sub
pop
jnp
jae
lods
add
push
mov
push
cmp
cmp
mov
mov
fucom
cmp
roll
addr16
je
outsl
push
mov
mov
mov
jo
fbld
mov
dec
setbe
pusha
adc
or
movsl
lock
xchg
aas
lods
mov
cmp
push
int3
push
and
into
lods
scas
lcall
sub
popf
fisubs
pop
shrl
push
test
sbb
bound
fwait
pop
cmp
fadd
jl
iret
pusha
int
in
or
cmp
rcll
xchg
mov
cltd
loopne
fcmovu
xchg
inc
in
mov
in
aas
ja
adc
bound
push
mov
es
lret
int
inc
icebp
add
in
and
out
std
xlat
cs
je
push
inc
sub
es
push
push
mov
xor
and
cmp
sbb
pop
push
jl
xchg
js
xor
and
mov
push
adc
in
xchg
rcrb
lcall
mov
jo
js
adc
pop
fstl
loopne
xchg
testb
inc
ljmp
movsl
pop
add
mov
and
pusha
cmpsl
in
stos
testb
and
push
add
and
bound
mov
shrb
inc
fs
xor
cmp
lds
xchg
dec
cmpsl
movsb
imul
sub
inc
shrl
mov
xchg
add
add
insb
cmc
mov
adc
xchg
add
in
bound
inc
add
out
push
push
pop
sbb
mov
mov
shr
pop
movsl
jnp
adc
cmc
dec
lock
add
pop
fucomi
adc
sahf
or
rolb
in
ja
shl
inc
sbb
inc
rcrb
lcall
or
inc
in
in
adc
adc
jae
xchg
pop
movsl
test
int3
ror
lahf
adc
pop
push
inc
sub
xchg
mov
hlt
faddl
rcll
call
adcl
inc
lahf
adc
add
pop
inc
orl
pop
mov
mov
out
mov
xchg
popa
pop
push
js
pop
xlat
jbe
mov
sti
shrl
cmpsl
push
fsubrs
cmp
add
lea
inc
push
inc
push
mov
outsb
push
add
cmpb
pop
jnp
dec
dec
mov
xor
popf
cmp
sbb
jne
fldl
lods
mov
dec
cmp
repz
int3
pop
pop
cmc
mov
sahf
sbb
testl
mov
inc
imul
mov
jne
or
aaa
and
cli
das
out
test
vcmppd
inc
xchg
das
cmp
mov
push
inc
sti
mov
pop
mov
push
xchg
pop
jecxz
and
shrb
movsb
aas
add
xchg
int
mov
int3
das
xchg
dec
test
int3
mov
jne
jne
pop
jecxz
sbb
mov
arpl
int3
pushf
sub
mov
dec
xor
push
dec
push
mov
les
mov
dec
pop
and
mov
test
lea
or
loope
and
push
rol
xchg
fstps
sar
sub
pop
fildll
xor
sbb
test
call
mov
xorl
fildll
mov
fs
lods
push
xchg
test
pop
ljmp
inc
sarl
push
jo
out
mov
scas
inc
and
imul
cmp
mov
jmp
mulb
in
mov
add
mov
sub
jbe
mov
adc
xchg
pusha
pushf
sub
ljmp
mov
pop
movsb
daa
out
push
push
lods
out
add
fisttpl
shl
hlt
push
fmull
jecxz
mov
xchg
jp
ret
jmp
lcall
imul
rolb
mov
hlt
push
or
dec
iret
mov
cmpsl
loop
sbb
sbb
lods
aam
movsb
cmp
outsb
les
icebp
lods
mov
add
js
outsb
mov
jnp
jmp
sbb
mov
push
fisttpl
jae
scas
fs
jge
into
add
cmpsl
sbb
inc
shlb
outsb
push
cs
mov
or
lods
sbb
call
lods
inc
mov
shll
lods
pop
and
cmpsl
push
cmp
or
loopne
pop
push
shlb
rclb
inc
icebp
sbb
pop
stc
sbb
repz
pop
mov
rclb
hlt
sbb
cwtl
lahf
das
add
cli
pop
mov
loopne,pn
rorl
into
xor
sbb
in
mov
or
xchg
lea
es
push
into
push
test
push
and
dec
aas
or
sub
push
mov
sbbb
jmp
rcll
xchg
fidivs
test
pop
inc
cmpsb
dec
sub
jno
enter
cmp
scas
dec
stos
jp
ficoml
mov
aaa
cmpl
shrl
dec
and
sub
add
out
mov
sub
pop
mov
jno
sbb
jmp
leave
fiadds
mov
cmp
orb
cmpl
adc
arpl
jbe
cs
adc
jge
out
test
lock
push
stc
mov
aad
sahf
dec
ljmp
pop
rcl
cmpsb
xchg
jno
push
cltd
in
aas
leave
ljmp
cwtl
cmc
and
aam
sub
add
add
test
enter
shll
mov
inc
out
jbe
outsb
cmp
and
leave
bound
cmp
insb
sub
pop
mov
jmp
mov
lret
mov
and
daa
sbb
mov
cmp
mov
fildl
daa
xor
test
pop
xlat
mov
dec
mov
push
xor
dec
inc
and
lock
adc
fwait
sbbb
out
leave
js
cmp
hlt
or
push
add
repnz
xor
loope
stos
pop
and
xor
cltd
adc
out
es
adcl
fisubs
cmp
cmp
pushf
scas
dec
out
mov
leave
ret
test
imul
sahf
xor
mov
clc
fdivrl
mov
dec
pop
out
inc
stc
inc
pop
ret
icebp
int
push
cmpsb
jnp
adcb
es
js
loope
imul
cwtl
inc
jl
gs
ja
loopne
dec
loope
out
lds
into
mov
insl
sub
dec
mov
fmul
std
leave
jge
out
arpl
lds
rcrl
jge
sub
sbb
adc
loopne
sub
fistl
cmp
jle
stc
into
pop
push
jecxz
in
lahf
push
cmpsb
jl
cld
mov
sbb
sbb
push
popa
sahf
jnp
pop
jno
mov
jne
scas
mov
int
fstpl
xor
mov
cmc
push
lahf
popa
xchg
push
test
dec
cli
imul
stos
inc
lock
scas
fmuls
lods
xchg
iret
and
dec
xchg
popa
dec
ja
loope
pop
mov
dec
sub
dec
orl
mov
jns
push
popa
out
xlat
clc
jg
int3
mov
stos
mov
xor
aaa
jecxz
movsl
mov
xchg
dec
mov
mov
int
lds
dec
test
ret
cld
sbb
push
push
repz
cltd
mov
adcl
jb
sahf
mov
mov
lretw
or
xchg
cmp
xchg
stos
int
fidivl
xor
and
inc
pop
cwtl
in
in
out
call
sub
lret
out
pop
fcomp
ficoms
sub
ss
or
pop
dec
popa
sahf
mov
test
xor
xchg
xor
fnstenv
faddl
xor
xorb
jp
leave
push
mov
mov
test
into
jo
pop
push
jb
enter
fsubrs
repz
pop
test
jmp
lock
mov
xchg
in
imul
mov
adc
lea
rclb
fildl
stos
fisubrl
imul
xchg
ja
je
fwait
cmp
icebp
test
sub
rorb
xchg
adc
adcl
push
repz
adc
fildll
mov
adc
dec
adc
in
sti
push
jg
mov
sbb
insl
mov
out
mov
out
inc
ficompl
push
cwtl
cli
dec
fsub
sarb
pop
xor
sbb
mov
sbb
test
jbe
xor
add
lcall
mov
and
loopne
es
mov
mov
jnp
in
fadd
fldcw
jo
sbb
inc
pop
sub
mov
std
arpl
sahf
adc
pusha
ret
out
mov
push
daa
sub
andb
cmp
out
hlt
aad
jle
movsb
je
sarl
rcrl
insb
sbb
lods
repnz
lods
jo
xor
out
cmp
aaa
loop
push
negb
icebp
fs
sub
mov
push
push
push
mov
xchg
inc
mov
jg
insb
mov
popf
xchg
dec
lcall
add
mov
inc
sbb
push
cli
sub
mov
rorb
mov
and
outsb
mov
arpl
sbb
push
sbbb
arpl
dec
jo
sub
cli
xorb
xor
loopne
loopne
and
jmp
loop
mov
std
int
fs
xchg
rorl
jno
iret
in
in
xchg
gs
xchg
dec
mov
jno
xchg
add
negb
and
in
jle
sbb
inc
cltd
xor
or
test
aam
pop
xor
lea
gs
mov
pushl
xor
jno
imul
jnp
testl
push
jo
sbb
add
adc
jns
decb
pop
nop
sahf
inc
and
inc
jge
xor
or
into
xchg
mov
cmp
push
in
frstor
daa
and
push
push
repz
sub
loopne
inc
out
or
cld
lea
clc
sub
shlb
push
sbb
inc
mov
fcomps
or
push
xor
xchg
popf
bound
out
sbb
fdivrl
jle
or
shlb
leave
cmp
adc
ss
sbb
mov
inc
dec
int
nop
push
imull
push
outsb
cmp
stos
and
andl
in
xchg
ret
bound
mov
or
pop
and
adc
add
cmc
mov
mov
sub
inc
pop
test
in
filds
xchg
mov
insl
push
inc
nop
inc
sahf
cmpsb
pop
lds
mov
sub
and
adc
add
sbb
std
push
mov
jb
or
fisubl
sahf
ret
and
xor
push
mov
iret
mov
int3
dec
data16
inc
aas
lret
adc
and
cs
inc
pop
lock
lcall
xor
mov
addl
push
popl
push
mov
xlat
ret
inc
and
fsubrs
ret
aam
enter
cli
outsb
push
and
stos
lret
cmp
sbb
jle
addb
daa
add
push
in
orl
sub
lods
xchg
fwait
inc
sbb
cld
xor
mov
mov
adc
ljmp
xchg
shll
leave
mov
outsb
roll
jmp
ficompl
pop
aam
mov
mov
xor
out
adc
fcoms
pop
inc
xchg
xlat
mov
lods
sbbb
pop
inc
clc
jne
mov
jg
data16
xchg
jbe
imul
jo
popa
sbb
shrl
addb
pop
cmpsb
push
mov
outsb
sbb
cmp
cmpsb
mov
cmp
out
add
testb
adc
shrl
mov
mov
nop
adc
or
sbb
daa
adc
or
stos
inc
jbe
and
ret
jl
xchg
inc
mov
push
push
mov
inc
jae
in
loopne
mov
outsl
cmpsb
add
xor
fsubrl
mov
or
and
dec
cmp
fildl
test
fxch
dec
insl
add
ret
mov
adc
mov
jle
inc
jmp
test
xchg
push
push
push
mov
cs
sub
cmp
xor
and
inc
in
push
out
nop
xor
push
test
xor
mov
subl
fwait
mov
mov
fcmovb
inc
and
xor
mov
out
xchg
std
cmpsl
xlat
outsl
or
leave
cs
dec
mov
jmp
xchg
sarl
xchg
enter
mov
pop
pop
dec
ja
rcrb
mov
push
and
mov
push
cmp
and
sbb
cltd
test
stc
scas
inc
lret
addr16
xchg
inc
or
sub
mov
dec
lahf
shll
in
pop
call
pop
and
mov
jmp
jmp
or
enter
movsl
jle
fisubs
into
mov
xchg
cmc
mov
inc
or
mov
das
fdivr
xor
pop
mov
pop
in
mov
lahf
cmp
pusha
inc
imulb
leave
cmpl
xchg
pop
out
jne
cli
ljmp
cli
gs
inc
adc
call
shlb
adc
adc
jle
push
sbb
gs
xchg
jp
push
lret
jge
jg
adc
insb
dec
fld
mov
fdivl
adc
hlt
add
jle
jbe
dec
sarb
mov
cmp
cmp
cmpsl
scas
jp
lret
xchg
daa
lods
add
notb
jnp
xchg
cmpsl
inc
rolb
jle
test
aas
movsl
call
vdivss
mov
arpl
and
aam
xchg
pusha
xchg
adc
pop
adc
cmp
dec
aad
add
pop
shl
fisubl
test
outsb
mov
into
inc
xchg
jo
and
xchg
aaa
pop
sub
bound
and
sub
cmpb
outsl
xchg
adc
lea
xor
mov
add
sub
cs
mov
pop
jle
jb
adc
cmpsb
hlt
xchg
shlb
outsl
add
daa
mov
or
pop
jb
enter
add
adc
pop
xchg
scas
pop
jl
negb
jp
out
arpl
mov
sbb
cmpsb
loope
idiv
dec
aaa
ds
cli
mov
inc
mov
inc
js
xor
jne
or
and
mov
dec
xor
arpl
mov
clc
mov
fistps
jp
pop
lret
sbb
andl
cwtl
xor
rcrl
pop
imul
add
cmpsl
xchg
jae
es
addb
in
pop
js
es
adc
jmp
imul
mov
sbb
popa
sbb
sahf
lods
mov
pushf
popf
and
inc
pop
icebp
xchg
xor
fsub
add
mov
lods
es
das
lcall
adc
mov
xchg
pushf
push
mov
or
jne
ja
cmpsb
loopne
xchg
jno
test
movsl
push
pop
aas
stos
pusha
pop
repz
and
add
inc
mov
mov
dec
and
jne
dec
inc
aaa
addr16
repnz
and
test
xchg
cli
jo
jno
aam
jb
aas
sbb
cmp
in
std
imull
xor
and
mov
mov
sahf
lret
lea
faddp
icebp
inc
ret
jno
sub
aaa
popf
adc
dec
jb
fwait
mov
jo
in
xor
mov
inc
test
clc
test
add
dec
push
mov
sub
sahf
loop
mov
inc
and
addr16
mov
xlat
jns
xchg
mov
push
movsb
jns
push
mov
call
or
pop
ljmp
pop
cmp
lock
inc
sub
into
stos
pushf
pop
inc
fbld
xchg
push
fsubrl
clc
mov
mov
mov
jns
mov
and
ret
cmp
leave
in
jno
jmp
cmp
lods
xor
mov
ss
popa
xchg
sbb
sarl
push
daa
roll
cmp
test
stc
test
add
cmpsb
or
or
ret
stc
mov
mov
les
or
cmpsb
test
jns
sub
out
shll
data16
ds
cmp
fwait
lret
pop
add
in
mov
pop
and
into
mov
imul
rorl
popa
rcrb
jbe
cmp
scas
add
or
test
les
sub
xchg
dec
cwtl
xchg
or
sbb
scas
pop
or
add
and
or
mov
jp
fidivl
xor
sbb
data16
jbe
mov
mov
lds
add
mov
inc
jl
push
hlt
jg
es
out
fidivrl
pop
mov
aas
iret
cmp
push
ret
cmp
rol
xorl
out
and
pop
dec
pop
mov
jns
call
call
pushf
cwtl
or
loop
mov
outsl
movsb
push
xchg
in
ficomps
jp
ret
or
icebp
out
xchg
dec
dec
cmp
lock
aad
cs
in
jecxz
sahf
loop
cmp
jecxz
shrb
xchg
rcrl
and
pop
and
daa
push
js
xorb
push
addr16
sar
jb
ljmp
jbe
xchg
jae
mov
and
lret
cltd
push
scas
push
add
les
in
jno
jmp
push
adc
stos
into
into
dec
xor
xchg
xor
mov
and
add
sub
inc
pop
cmp
xchg
ss
fbld
loope
icebp
dec
std
mov
or
mov
mov
icebp
in
cmp
scas
and
mov
cmc
rorl
adc
inc
loopne
push
rcrb
outsb
inc
pop
incl
pop
lods
out
pusha
lock
sub
testb
out
mov
outsl
lret
push
fs
xchg
and
jne
dec
sbb
out
pop
sarb
adc
pop
mov
inc
and
sbb
sarl
lds
jbe
jecxz
mov
push
rcr
popa
add
sbb
jg
ja
icebp
mov
mov
imul
data16
inc
mov
cli
sbb
aad
iret
js
aas
nop
xor
ljmp
xor
cmp
inc
movsl
nop
cmp
adc
xchg
xor
xor
or
movsl
aas
mov
mov
je
fdivrs
mov
je
jmp
sbb
call
notl
xor
insl
lods
adc
mov
inc
sub
outsl
data16
inc
xor
ds
lds
jge
sbb
push
inc
inc
lods
gs
aas
cmp
mov
hlt
enter
imul
push
and
pop
int
dec
stc
mov
push
adc
pop
jge
dec
dec
popa
iret
inc
mov
lcall
pop
jmp
jb
push
push
scas
mov
and
mov
movsb
lret
daa
mov
sti
xchg
mov
inc
sahf
out
jl
xchg
cmpsb
sub
test
pop
mov
hlt
push
js
aad
cmp
inc
mull
testb
push
test
xor
sbb
cmpsl
push
jecxz
mov
shr
mov
fists
ds
mov
cmc
jns
pop
mov
cmp
mov
jb
sahf
push
aas
mov
adc
ds
xor
repnz
dec
push
negb
adc
mov
add
xor
mov
imul
cmp
daa
in
xlat
aam
jns
mov
lock
popa
push
jp
test
in
xchg
pop
cmp
xchg
jecxz
add
fstl
push
pop
adc
sbb
outsb
jns
add
std
in
mov
pop
cmp
imul
xchg
mov
add
and
fwait
push
mull
jge
push
out
loope
add
sbb
xor
push
dec
sbb
les
xchg
mov
jae
and
mov
push
jb
and
sbb
mov
cs
mov
mov
cs
add
sbb
int3
lret
pop
ret
add
daa
daa
loop
xchg
testl
xor
push
sbbb
ds
pop
decb
insl
arpl
stos
stc
pop
sub
cmp
fidivrs
mov
pop
xchg
mov
ja
push
lret
push
mov
cmp
fisubrs
add
fmulp
orb
pop
cmpsl
mov
xor
test
test
addb
inc
cld
fcoms
pop
sahf
lods
push
push
hlt
fwait
cli
mov
out
lcall
push
gs
sbb
cld
ds
sub
or
mov
imul
dec
ss
dec
aaa
mov
pop
stos
out
inc
sbb
sbb
out
jmp
and
ja
xchg
popa
adc
lods
fwait
inc
add
push
fimuls
enter
mov
in
add
dec
aaa
lcall
out
jle
fsubrs
int3
adc
push
out
ja
dec
sub
mov
incb
lcall
shll
cmp
ret
dec
mov
ficompl
mov
jb
icebp
mov
and
daa
inc
dec
in
rcrb
sub
push
loopne
bnd
pushf
decb
sbb
adc
push
movntps
and
rcrl
dec
fcmovnu
xchg
repz
out
dec
rorl
nop
rcrl
out
std
dec
dec
aaa
ret
sbb
jg
stos
jl
xor
mov
or
imul
insl
sub
jmp
popa
xchg
xor
loopne
sti
cmp
shlb
int
lods
cmp
mov
sarl
push
ret
and
clc
es
mov
fs
lret
sbb
inc
ja
adc
iret
sbb
jae
es
call
fistps
mov
mov
std
mov
and
xor
dec
into
dec
inc
jge
xchg
out
mov
aad
push
sbb
mov
push
mov
testb
aas
adc
nop
xor
push
mov
scas
mov
mov
inc
nop
clc
outsb
ret
rorl
sahf
push
sub
or
add
sub
cwtl
lret
scas
popa
dec
cmp
pop
dec
inc
clc
clc
insl
jg
scas
roll
xor
mov
popf
mov
jg
dec
aad
icebp
inc
enter
jae
lds
cmp
mov
xchg
repz
leave
aaa
cmp
ja
mov
enter
adc
xchg
cmp
mov
or
pop
pop
in
outsl
mov
faddl
sbb
mov
push
pop
sbb
in
aad
test
push
das
or
xor
fnstsw
and
subb
cmp
xchg
loopne
jp
push
loope
adc
lret
jnp
and
fistps
test
pushf
sarl
call
insb
xor
mov
imul
cmpsl
stc
ficomps
xorb
loope
jns
ds
pop
pop
in
std
lods
aas
dec
jo
pop
movl
mov
js
enter
lcall
lret
cmc
stos
outsb
push
lahf
inc
int3
iret
lret
mov
out
clc
mov
test
test
sbb
sub
mov
sub
and
dec
xchg
mov
cmc
jo
aad
xor
mov
movb
dec
sbb
push
xor
movsb
mov
outsb
push
ja
push
popf
or
xchg
push
mov
inc
or
dec
pop
or
mov
aam
or
xor
pop
mov
hlt
add
push
mov
fdivr
pop
fcompp
lods
rcll
xchg
in
mov
mov
cmp
mov
loop
mov
adc
ret
fnsave
and
and
and
shll
loopne
jge
imul
cwtl
xchg
negb
stos
adc
imul
jmp
cmpsl
cmpsl
xchg
cmp
sub
or
sbb
les
push
es
inc
shll
out
mov
in
bound
or
jne
movsl
shrl
pop
clc
dec
sbb
dec
ret
pop
cmc
sahf
mov
or
cmp
mov
scas
scas
xor
adc
dec
add
orb
push
mov
pop
outsl
inc
sub
scas
mov
jmp
popf
jp
add
hlt
push
cs
outsl
or
or
mov
sarl
cwtl
push
adc
xchg
dec
pop
push
mov
lret
je
test
jmp
lods
push
and
xor
or
adc
lahf
mov
mov
imul
sbbl
sub
mov
xor
orl
jae
xchg
fimull
mov
adc
mov
bnd
xchg
shlb
mov
xor
cltd
sbb
adc
out
xor
push
jmp
iret
push
pushl
jnp
adc
jnp
lcall
mov
or
lahf
inc
add
xchg
xor
xchg
mov
jmp
ds
test
jns
daa
dec
mov
arpl
aaa
push
ljmp
push
push
xor
mov
scas
jno
mov
jae
jmp
add
scas
clc
out
sti
or
jb
jmp
pop
ljmp
push
fcoml
adc
dec
xchg
movsb
push
ja
adcl
enter
icebp
cmp
insl
clc
and
xchg
icebp
and
xchg
adc
cwtl
in
rorl
mov
and
jge
or
icebp
sub
fistpll
mov
mov
dec
mov
stc
xchg
cs
dec
fwait
push
mov
fwait
add
add
into
cmp
outsl
add
int3
jb
and
mov
fsubr
outsl
scas
js
push
stos
outsb
sub
in
jae
movsb
sub
sub
xchg
lods
clc
icebp
insb
push
jae
es
xchg
xor
in
sub
pop
mov
cmp
fstp
sbb
imul
hlt
fisubl
xor
mov
xor
sarb
pop
sub
hlt
xchg
data16
cmp
sbb
nop
cmp
and
faddl
mov
jecxz
sbb
and
aad
cli
pop
aad
add
jb
mov
fcomi
add
dec
or
sbb
cmp
in
loopne
jmp
add
xor
jmp
xor
data16
lret
stos
push
push
cmc
lock
inc
jge
cmpsb
jbe
or
inc
aam
inc
fdivl
loop
push
nop
xor
mov
push
xor
je
jae
mov
stos
adc
lret
fdivl
jp
in
clc
sbb
add
mov
aas
dec
jle
aaa
loopne
pop
pop
aad
imul
loope
inc
mov
adc
in
je
stos
push
insl
push
cmpsl
test
int3
filds
nop
xchg
rcrb
lods
push
adc
xchg
test
test
or
lcall
adc
dec
movsl
popf
sbb
dec
pop
jecxz
divb
arpl
pop
push
js
cmp
push
lock
cmp
xchg
int
mov
adc
test
pop
cli
gs
test
aas
adc
mov
mov
pop
fs
sahf
cmp
mov
and
aam
in
adc
scas
add
mov
xor
pop
stc
cwtl
lods
inc
mov
andb
cmpsb
leave
sbb
flds
jle
mov
out
insb
mov
xor
js
leave
dec
out
dec
shlb
inc
pop
jl
and
dec
inc
loope
fiaddl
ret
dec
xchg
xchg
mov
push
push
xchg
mov
jno
mov
xchg
shll
xchg
mulb
scas
test
adc
add
pop
adc
sub
cmpsl
aaa
xlat
enter
push
cmpsl
in
outsb
adc
jp
pushf
out
fisttpl
xchg
das
fs
adc
cmp
popa
out
mov
leave
rolb
jle,pt
sub
je
addr16
mov
idivl
lahf
mov
inc
jle
enter
xor
mov
insb
and
sbb
std
rolb
jp
jae
sub
dec
cs
loopew,pt
iret
pop
mov
xor
mov
dec
cltd
jg
out
cmp
mov
mov
cmpb
shll
stos
ds
cwtl
fstl
mov
test
jo
jnp
scas
sarl
xor
mov
pop
push
inc
cmp
push
shl
icebp
sub
inc
mov
sbb
sub
mov
inc
js
int3
repz
sub
mov
insl
or
xor
sarb
loope
fbld
and
sub
and
and
dec
lods
fsubr
call
mov
jno
cmpsb
sub
xor
stc
jno
sti
pop
loope
daa
xor
mov
push
in
std
and
dec
std
or
pusha
inc
sahf
xor
pop
or
inc
mov
shlb
mov
jns
pop
mov
decl
push
mov
pop
mov
inc
arpl
add
gs
dec
jne
pop
iret
adc
xor
jle
aas
pop
dec
adc
fadds
fwait
jae
xchg
lcall
jne
and
into
insb
jmp
outsl
or
sub
repnz
sbb
lret
sbb
ja
loop
les
and
call
fs
adc
push
shlb
push
pop
je
fs
push
or
js
fwait
mov
test
push
mov
dec
cmpsl
mov
stc
add
mov
out
fidivrs
cld
js
xchg
push
fiadds
mov
sub
pop
fnstcw
scas
nop
shrl
ljmp
lods
lahf
dec
insl
cmpsb
sbb
sbb
fs
dec
lcall
cmp
mov
mull
bound
pop
xchg
mov
dec
inc
cs
fidivl
scas
jno
mov
mov
pop
adc
pop
jnp
mov
jmp
adc
pusha
dec
lahf
cmp
sbb
jnp
and
gs
sti
push
loope
and
aam
sahf
and
mov
loope
stos
shr
sbb
pop
sub
imul
cmp
js
mov
inc
pop
cmpsl
insl
mov
movsb
push
mov
test
outsb
fildl
push
loope
add
imul
jno
dec
in
cwtl
dec
cmp
inc
inc
aas
xor
les
data16
repnz
rorb
dec
sub
imul
ljmp
imul
cmpb
push
mov
lods
mov
mov
pushf
mov
bound
xor
xor
mov
dec
push
or
pop
pop
in
add
cmp
inc
add
jns
mov
in
aam
pop
lock
mov
inc
jg
int3
lret
sahf
inc
out
mov
jne
add
jle
cmp
insb
sub
or
shl
and
add
mov
movsb
sbb
test
les
insl
dec
into
test
push
test
pop
push
sub
xchg
or
call
enter
adc
sub
sub
and
bound
push
int3
mov
xchg
push
lret
outsl
sub
add
je
jl
pop
fsts
cmp
cmp
mov
js
sar
and
imul
sarl
mov
je
insb
and
icebp
dec
aad
in
mov
mov
cwtl
jmp
es
orl
cmpsb
pop
negb
lods
ret
push
movsl
in
jns
add
dec
clc
lock
stos
repnz
adc
insb
insb
fwait
push
mov
cmpsb
adc
lcall
lds
loopne
call
orb
cli
adc
sub
je
lret
mov
pop
call
shlb
sbb
jge
sub
sub
or
ljmp
mov
xchg
popa
push
mov
movsb
popf
jne
cmc
mov
subb
sub
and
mov
jmp
clc
aam
or
dec
or
punpckhdq
jb
fisubrs
sbb
rcrb
jne
les
testl
pop
jmp
in
clc
and
dec
lret
test
sar
add
jns
dec
in
adc
add
mov
pushf
fisubrs
loope
sbb
sub
pop
fdivrl
push
hlt
cli
push
inc
daa
scas
jne
cltd
ljmp
flds
js
and
imul
pop
repz
xchg
sub
js
pop
and
cltd
push
jle
movsl
push
cli
mov
js
out
inc
jg
lods
lods
push
jp
testb
shlb
sbb
xchg
sub
in
outsb
push
add
in
stos
sbb
int
pop
subl
data16
icebp
pop
pop
loopne
sub
scas
and
push
shll
add
scas
out
rorl
insb
xchg
js
mov
add
shll
push
pusha
cmp
jb
sub
cwtl
dec
inc
arpl
cmc
inc
pop
dec
mov
fxtract
push
inc
enter
push
fxtract
inc
xchg
popa
mov
cmpsb
addr16
xchg
cmp
inc
inc
ja
inc
cmp
stc
push
jmp
in
jno
dec
cmp
repz
addr16
repz
mov
test
push
movsl
xchg
js
movsl
jae
test
sub
xchg
push
in
adcl
aas
dec
fs
push
xchg
rorb
jns
fsts
xlat
xlat
dec
mov
mov
or
mov
test
fcomps
pop
in
rolb
lds
jmp
push
add
loopne
mov
adc
ds
imul
or
jle
and
cmp
push
inc
jecxz
and
movsl
test
push
mov
addb
cmp
pushf
cmp
repnz
inc
pop
push
or
inc
pop
adc
or
fildl
jb
xchg
pop
in
outsl
bound
rcrl
stos
mov
sub
stc
testl
sub
pop
push
xchg
cmp
or
adc
jb
sbb
xor
es
and
mov
dec
inc
jno
mov
jle
sbb
mov
loope
xor
sub
insl
inc
std
sbb
jb
std
fwait
pop
xchg
lret
leave
and
addr16
imull
fwait
mov
adcb
out
fcomip
js
stos
and
sbb
pop
or
jge
push
pop
jl
pop
test
mov
pop
cmp
lcall
hlt
stos
pop
or
xlat
and
clc
adc
jns
clc
pop
adc
rol
in
push
lret
push
idivl
jmp
cmp
dec
arpl
mov
jl
scas
icebp
stos
jp
pop
call
aaa
js
sbb
adc
push
insl
fldl
adc
aas
lahf
inc
add
ror
mov
imul
roll
push
mov
or
sub
addr16
xchg
jbe
sbb
pop
adc
shl
sbb
push
lock
cmp
negb
divl
daa
sbb
je
shr
pop
jecxz
sub
pop
xor
ror
pop
dec
rclb
xchg
dec
cmpsb
mov
bound
fdivl
ret
fnsetpm(287
bound
mov
sahf
push
xor
push
jo
jno
cmp
and
inc
fisttps
dec
mov
mov
add
loop
ret
mov
orb
jb
jnp
stc
subl
push
mov
jne
adc
mov
test
jl
sarl
scas
fldenv
jge
into
jmp
push
nop
jnp
repnz
mov
aas
aad
pop
dec
xchg
cli
arpl
std
std
pop
dec
out
lock
push
jl
addr16
pop
test
mov
adc
jmp
lods
or
hlt
in
out
and
push
sub
mov
mov
mov
mov
sbb
jbe
lock
push
sub
push
inc
jge
or
movsl
mov
insb
pop
imul
loopne
add
pop
stos
push
adc
rcl
cmp
add
sti
xor
jp
int3
popa
mov
cmp
fildll
and
or
and
andl
inc
xor
or
addb
ficomps
push
and
pusha
mov
fadds
andb
int3
mov
std
mov
inc
inc
enter
lret
mov
aad
jg
gs
adc
cltd
in
inc
mov
dec
popf
je
adc
push
das
inc
adc
sbb
rolb
xchg
fidivrl
pop
ret
fstpl
daa
pop
scas
idiv
lcall
add
xchg
stos
dec
cld
call
jno
loope
jb
xchg
adc
add
or
pop
xor
nop
fstl
nop
jmp
fdivrl
xchg
push
nop
and
adc
lds
fildl
test
aas
add
sub
aas
pop
sbb
cwtl
xor
pop
subb
aas
add
pop
les
cmp
ret
scas
jmp
aas
and
push
and
cmp
leave
jns
pusha
xor
cmc
aad
cld
sahf
enter
pop
adc
loop
addl
dec
iret
cmp
testb
jo
pop
mov
cli
push
je,pn
lcall
ja
fisttpll
inc
mov
scas
mov
pop
cmp
cmp
enter
or
inc
test
mov
jmp
lds
and
pop
fs
push
sub
pop
repnz
push
mov
popf
lods
loop
stos
dec
lret
cltd
jns
mov
aam
mov
add
enter
adc
faddl
stos
adc
lods
in
mov
ljmp
cmp
push
negb
shl
enter
jg
xchg
or
fcomi
test
cmp
pop
mov
dec
sbb
das
call
fmuls
add
xor
das
rcrb
mov
inc
mov
and
jne
pop
xchg
dec
inc
mov
cmpb
xchg
jnp
fcmovnbe
add
pop
test
and
jmp
dec
dec
xchg
test
dec
mov
test
and
mov
iret
std
sub
imul
fucomp
push
mov
loope
inc
sahf
movsb
cli
popf
mov
push
fwait
jae
mov
xchg
pop
mov
out
sub
or
and
jne
test
push
stos
push
clc
jno
lods
rcrb
aaa
xor
xlat
jne
inc
xchg
roll
sbb
out
test
lds
push
mov
arpl
fidivrl
movsb
inc
mov
mov
leave
out
scas
mov
aaa
mov
loop
inc
loop
pusha
sbb
ljmp
cmp
aam
push
ljmp
xor
outsb
cld
cmp
mov
mov
iret
jmp
sahf
and
out
js
xor
das
in
xor
test
adc
jg
add
mov
and
mov
sbb
push
loop
add
push
pop
dec
xchg
mov
dec
xchg
test
lret
std
movsb
or
ret
int
sbb
aad
repnz
fdivs
fs
and
addr16
jb
cmc
xchg
push
in
cmpsb
jb
clc
pop
mov
lock
loope
leave
movsb
repz
dec
inc
loop
or
shl
push
ljmp
xor
push
mov
sbb
jnp
mov
sub
adc
mulb
pusha
mov
lods
pop
lret
mov
int
aad
out
pop
xlat
das
lahf
xchg
repnz
int
pop
test
fisubs
xorl
push
andl
testl
movsl
mov
adc
lcall
test
xor
sbb
dec
insb
mov
dec
addr16
mov
addr16
xor
and
pop
fdivrs
jo
pop
dec
and
enter
addb
or
push
xchg
sbb
test
lret
test
test
out
xlat
cmp
shrb
mov
test
jae
adc
movsb
jo
xorb
push
add
movsb
or
xor
add
and
stos
ret
inc
movsb
push
xchg
push
mov
adc
mov
add
arpl
push
andb
mov
dec
xchg
inc
sbb
jb
pop
mov
out
inc
xchg
or
pop
inc
sahf
mov
insb
cmpsb
sbbl
dec
mov
xor
ret
inc
jle
mov
addr16
jo
in
mov
lock
cld
aam
cmp
repnz
push
std
jecxz
insl
jne
in
jo
mov
fidivl
xor
mov
push
mov
lds
stos
mov
or
jp
adc
pusha
aas
cmp
mov
loop
cmpsb
or
ret
or
dec
imul
cmp
sbb
cmpsb
push
jl
push
mov
cmp
fiadds
mov
repnz
in
adc
pusha
lahf
jne
pushf
jbe
push
ror
cmp
insb
adc
js
incl
push
adcl
fstp
add
testb
fbld
lds
push
shll
enter
mov
mov
pop
sub
cmp
dec
cmpsb
mov
fidivl
xchg
mov
inc
inc
add
sbb
cwtl
outsb
fisttpll
push
out
mov
pop
inc
xor
fwait
xor
jbe
pop
dec
add
mov
pop
add
paddsw
jb
sbb
arpl
das
cld
xchg
push
decl
sti
lods
adc
or
cmpsl
sahf
mov
push
or
icebp
imul
arpl
inc
sti
and
jl
aam
push
into
or
sub
and
mov
add
jmp
mov
mov
bound
subb
sti
adc
jecxz
mov
fstpt
imul
pop
ja
addr16
lock
insl
jmp
data16
xor
andb
cmp
es
pop
fisttpll
fstl
push
cmp
lahf
shrb
mov
and
call
in
js
scas
mov
pop
je
fsubrs
repnz
out
in
int
stc
push
clc
jl
in
insb
dec
jb
jle
out
xor
cmpsb
fcomps
mov
sub
ja
push
mov
cmp
ds
add
dec
mov
sub
and
lock
dec
mov
das
popa
hlt
push
add
int
shr
int3
jb
call
push
sahf
sub
add
adc
cli
adc
shlb
jmp
mov
sub
and
cld
and
outsl
hlt
aaa
je
insl
add
mov
ficoml
lret
out
xchg
mov
inc
sub
or
inc
sub
add
or
dec
xor
fdivr
dec
add
stos
sbb
jae
mov
outsb
js
xchg
nop
popf
insl
addl
jbe
or
stos
fmul
divb
and
mov
push
shll
data16
icebp
inc
mov
and
fwait
in
repnz
sbb
adc
out
std
repnz
add
xchg
xor
int3
in
aaa
cmp
sub
adc
fdivrl
insb
jmp
jmp
sub
cli
inc
imul
mov
test
sbb
add
mull
mov
cmp
jno
inc
xchg
int3
sub
xchg
outsl
mov
dec
aas
shrl
loop
inc
inc
enter
mov
xchg
xchg
enter
in
leave
call
sub
clc
push
jb
push
insb
lret
mov
mov
add
push
bound
jp
flds
cmp
pop
jmp
sbb
xor
outsl
jns
cmpsl
push
imul
fwait
mov
push
ds
enter
sbb
ds
cmp
mov
mov
es
pop
lea
pop
lock
dec
lods
test
cmpl
inc
fiadds
sbb
mov
fldenv
jp
rcl
aad
imul
adc
jno
and
mov
subl
mov
sub
push
fimull
and
inc
and
fcoms
mov
xchg
movsl
mov
dec
in
adc
loop
inc
mov
popa
mov
adc
jno
cwtl
sbb
and
pushf
inc
push
mov
int
jle
pop
loop
xchg
push
cli
add
xchg
adc
add
test
sti
mov
sub
imul
iret
mov
sbb
jp
push
sub
push
ljmp
jp
sti
sub
pushf
iret
in
imul
mov
xchg
dec
push
and
add
rcrb
fldl
loopne
test
or
movsl
mov
and
sub
imul
dec
mov
cmpsl
mov
lds
xchg
mov
cltd
cmp
xchg
lock
cmpsl
cwtl
push
push
aam
jecxz
pusha
adc
test
xchg
push
push
cmp
das
push
sti
adc
movsl
mov
sahf
in
and
mov
push
add
dec
mov
cltd
mov
ja
jecxz
sub
mov
fwait
js
jbe
mov
xlat
adc
nop
fisubrs
xor
fcmovbe
xchg
mov
mov
mov
dec
inc
and
popf
lcall
sti
or
cmp
loope
pop
mov
ss
inc
jne
in
jbe
hlt
jb
in
lcall
arpl
pop
or
adc
hlt
in
cs
lret
pop
adc
cmc
bound
pop
or
mov
inc
jb
pushf
iret
dec
jmp
stos
mov
cmp
loopne
lods
das
pop
scas
jmp
mov
subl
popf
sbb
faddp
pop
xor
mov
cmp
inc
inc
jnp
ljmp
cmp
xor
mov
pop
or
adc
gs
mov
mov
sub
les
jnp
pop
orl
pop
hlt
rcll
out
and
mov
insl
mov
aas
jl
pusha
adc
fists
inc
fs
pop
icebp
jl
dec
cld
das
mov
sbb
imul
shll
cmp
and
jbe
mov
cmp
divl
stos
test
les
push
xchg
xor
xchg
mov
test
lret
mov
loopne
ret
lods
arpl
popa
cmpsb
jb
dec
ja,pn
aad
sbb
pop
sbb
popa
in
or
sarb
mov
adc
cmp
inc
or
test
push
or
sbb
cmpsb
push
test
fcoml
xchg
icebp
push
mov
fsubl
jae
mov
push
movsb
and
sbb
cmpsb
adc
push
aaa
sub
adc
fs
pop
lcall
mov
mov
rcrb
mov
or
pop
mov
mov
lahf
adc
shl
mov
sbb
xor
mov
outsb
pop
jo
sahf
ret
sti
sbb
add
mov
inc
fisubs
stos
out
lret
dec
icebp
sub
out
push
orb
cmp
enter
shl
jo
lods
dec
int3
adc
or
jle
cmp
dec
or
stos
cli
mov
out
or
xor
dec
out
bound
gs
mov
bound
repz
call
add
cli
add
jnp
xor
and
cs
outsb
daa
push
arpl
dec
add
pop
popf
out
push
inc
push
adc
fstps
scas
xchg
adc
jecxz
js
out
test
push
sbb
dec
call
imull
in
jge
dec
sub
dec
in
fdivrl
adcl
pop
pop
xor
jbe
mov
jns
adc
and
cmp
aad
fwait
add
sbb
into
out
in
xchg
outsl
sub
clc
mov
stc
inc
out
jg
test
mov
mov
jp
data16
inc
or
std
mov
out
test
je
test
xorb
xchg
pop
leave
sbb
xchg
addr16
ret
mov
mov
inc
xchg
push
adc
add
divl
out
loope
sub
rorl
jle
popa
roll
test
xchg
and
neg
sub
int3
push
jl
js
imul
push
addr16
cs
mov
movsl
fsubrs
loope
xchg
mov
pushf
dec
stc
push
mov
repnz
clc
add
cmc
sbb
xchg
pop
push
cmpsb
jg
popa
leave
movb
test
sub
jns
pop
cli
daa
jle
data16
pop
hlt
popa
and
push
xchg
std
sahf
jle
ss
out
cmc
jae
mov
stc
or
xorb
mov
inc
sbb
sbb
push
imul
add
test
jmp
out
nop
out
cmp
shrb
xchg
jmp
es
fisttpl
mov
int
out
mov
inc
jle
popf
outsb
mov
add
scas
fisubs
in
lds
mov
or
cs
dec
dec
bound
das
scas
cmc
pop
fdivrl
popa
sbb
push
xchg
adc
add
push
lea
ss
lret
pop
cmp
cli
sbb
popa
rorl
ret
nop
cmpxchg
scas
sbb
mov
or
jnp
mov
ret
notb
aam
pop
ret
scas
das
popf
out
scas
or
das
push
sub
push
or
popf
or
cmp
inc
inc
insb
push
adc
sub
cmp
lods
sub
push
add
lock
xor
or
cmp
add
mov
in
dec
hlt
insb
push
adc
jmp
push
addl
inc
js
je
fcompl
mov
xchg
jne
pop
stc
inc
rcl
xor
cmp
js
inc
mov
sbb
sbb
adc
int
cmp
addb
subb
push
or
orb
das
in
xor
loopne
daa
jbe
jae
sbb
call
fdivrl
or
rolb
pop
nop
fwait
xor
jae
aam
sbb
scas
sub
scas
mov
and
cmpl
mov
out
push
jne
popa
cld
mov
les
sbb
ja
roll
pop
pop
stos
jne
les
mov
mov
pushf
lcall
add
lea
push
mov
inc
cmp
mov
jbe
pop
test
jg
iret
dec
sub
and
jns
dec
push
xchg
test
jle
divl
mov
into
pop
add
ja
int
sahf
add
pop
aaa
shrl
dec
cwtl
or
ficoms
mov
adc
cmp
jecxz
pop
sbb
ja
mov
fsubr
adc
pop
mov
aas
inc
std
push
popa
leave
pop
fsubrl
stc
shll
pop
int
cwtl
jno
in
push
out
jnp
movsl
jge
sbb
adc
or
dec
insb
dec
inc
inc
das
mov
aam
notl
iret
into
aam
adc
add
pop
inc
xor
cmp
pop
hlt
dec
cld
lock
test
arpl
xchg
cmp
fnstenv
aam
in
aam
popf
gs
mov
add
mov
arpl
jbe
lock
outsb
push
sub
rcrl
dec
push
xor
test
pusha
and
jle
je
movsb
mov
or
leave
stos
fwait
ljmp
dec
jle
les
stc
out
inc
call
xchg
xor
test
sahf
cmpsl
sbb
inc
icebp
aas
mov
data16
push
negb
dec
repz
cmc
push
mov
push
pushl
insb
mov
sbb
jno
lcall
pop
inc
subb
inc
mov
mov
cltd
outsl
mov
push
add
jne
aad
addr16
sbb
adcl
scas
push
out
fs
out
sti
negb
fimuls
imull
clc
imul
ja
shlb
mov
xchg
sbb
or
daa
xchg
and
xchg
in
clc
das
in
jmp
jno
mov
add
and
es
pop
lret
dec
push
mov
cmpsl
cmp
leave
rolb
lods
scas
pushf
dec
jnp
xchg
xchg
and
loope
pushf
dec
stos
push
push
out
jle
cmp
sar
jge
incl
lahf
movl
cltd
sbbl
icebp
mov
mov
lea
out
mov
jbe
jae
cwtl
xchg
std
pop
dec
andl
sub
outsb
jns
popa
mov
push
mov
push
rorl
cwtl
cmp
xor
mov
mov
cmp
cwtl
out
notb
rolb
jo
int3
pop
int
call
in
xchg
hlt
sub
cs
pop
cmp
test
mov
fs
test
iret
xchg
int
pop
cmp
outsl
fcomp
sub
mov
test
inc
adc
dec
scas
loop
dec
jge
push
or
dec
cmp
pop
pop
out
std
sub
add
mov
inc
xchg
xor
and
sbb
stos
ret
mov
or
mov
inc
inc
hlt
add
test
mov
add
sbb
push
pop
xlat
mov
xchg
mov
and
into
ficoml
lods
aaa
jmp
adc
aam
ret
cmp
sub
push
sub
adc
push
push
push
mov
cmp
testl
jecxz
and
loope
test
inc
loopne
jmp
arpl
cmpsb
sti
test
lcall
outsb
jb
push
or
shlb
imul
pop
jecxz
push
xor
popa
pop
sbb
jmp
ja
lea
cmc
push
dec
cmp
ljmp
aad
jbe
aad
aam
and
cmp
andl
cmp
adc
mov
push
or
popa
mov
push
hlt
cmpsl
rcr
mov
mov
icebp
fnsave
pop
cmp
nop
xchg
daa
and
ficoml
mov
lahf
bound
sbb
and
repnz
ds
push
ja
push
push
inc
shlb
mov
inc
cmp
add
mov
mov
gs
sub
aaa
fs
jle
fs
xchg
in
aam
outsl
out
mov
insl
adc
push
xor
ds
push
xchg
push
push
js
mov
xor
inc
sbb
inc
imul
mov
dec
jl
xor
inc
je
push
sbb
sbb
iret
xor
jp
xor
icebp
jb
inc
jbe
test
xor
out
leave
push
pop
ss
sub
push
movl
jle
mov
icebp
in
popa
rolb
mov
scas
sti
xor
shll
ljmp
cmpsb
pop
mov
pop
mov
sub
data16
cmp
call
or
mov
push
xchg
or
push
fadds
add
lea
fisubrs
ror
daa
and
ret
or
mov
jle
jmp
push
daa
add
ror
stos
pushf
outsl
rcrb
andb
sub
xchg
jns
adc
xchg
push
xchg
jnp
stc
in
push
ficoml
fisubl
jg
lahf
sbb
push
push
js
push
add
imul
or
insl
push
sbb
xchg
mov
pop
ret
cmpsl
adc
in
xor
data16
add
jne
out
inc
push
and
inc
xor
sar
jle
cmpsl
dec
cli
adc
push
addl
aam
into
nop
push
fsubp
xchg
pop
enter
ret
adc
add
sti
clc
sub
aam
in
xchg
push
push
cmp
dec
add
jecxz
call
lods
lcall
sarl
sbb
mov
std
inc
xchg
ret
in
enter
rcl
lock
jb
movsb
sbb
int
or
cmp
sbb
in
nop
fwait
xchg
add
xorb
jnp
jl
inc
jne
sub
in
ja
or
es
and
das
pushf
test
sub
fiaddl
adc
bound
mov
out
lods
jns
jo
loopne
and
pop
loopne
cmp
xchg
cmp
add
out
les
fadd
push
sub
test
outsl
jmp
and
cs
sbb
stos
sbb
and
lcall
adc
or
mov
pop
push
jge
sub
push
sub
hlt
push
add
xorl
jnp
das
in
movsl
xchg
nop
pop
sbb
dec
mov
rorb
sub
lcall
fsubrs
xor
inc
xchg
inc
nop
xchg
movsb
fdiv
bound
lods
dec
shlb
fsubrl
xor
fadds
cwtl
movsb
and
stos
repnz
xor
jae
sub
movsb
lcall
mul
add
into
inc
mov
sub
and
dec
rcl
pop
pop
in
mov
inc
mov
pop
xchg
repnz
enter
in
fdiv
pushf
pop
mov
gs
psubw
rcl
or
fnsave
leave
dec
and
jg
inc
clc
leave
add
cmp
cmp
lods
andl
fwait
scas
idivb
and
xchg
mov
psrlw
out
pop
out
aaa
in
jmp
std
inc
dec
mov
addl
imul
popa
xor
sahf
outsb
out
pop
mov
dec
aaa
lods
xor
ds
jg
mov
icebp
repnz
sbb
xor
jne
lret
pop
pop
xor
mov
pop
icebp
fdivl
lahf
imul
jbe
cld
leave
mov
test
stc
popf
in
aam
popa
inc
xchg
scas
xchg
cmpsl
ja
popa
push
mov
shlb
xor
sbb
jno
inc
repz
jns
jno
mov
dec
imul
sbb
mov
movsl
sbb
cmp
sbb
inc
cs
lcall
sbb
mov
jp
dec
mov
in
das
imul
daa
and
and
fcompl
lock
mov
and
pop
add
add
sbb
inc
loop
and
cs
shlb
dec
repz
push
loop
mov
xchg
notb
xchg
xchg
pop
add
add
mov
pusha
xchg
mov
fcmovbe
fcomp
pop
cmp
sbb
out
fcompl
pushf
mov
test
scas
jle
push
adc
inc
cmpsl
loop
mov
xlat
roll
sahf
mov
or
cmp
cmp
ja
inc
in
pop
cwtl
arpl
sahf
rorl
insl
loopne
sbb
lahf
bt
icebp
cmpl
fucomip
jge
push
sub
loopne
adc
mov
push
int
push
cmp
and
and
je
xchg
jns
aas
jae
out
sub
negl
push
rclb
mov
mov
fsubrs
jne
jge
pop
xor
test
xchg
gs
and
repz
mov
insb
shll
jno
mov
cmp
push
add
insl
test
ja
push
fidivl
in
out
imul
mov
shlb
sub
or
lea
leave
in
mov
mov
push
adc
fnstsw
sbb
imul
add
mov
fstpt
xchg
pop
pop
outsl
cmp
ljmp
popa
adc
and
lret
pushf
loop
sub
xor
cmp
jae
rolb
xlat
out
pop
jne
test
xor
xlat
shl
xchg
repnz
fsubrs
mov
adc
inc
or
dec
out
jmp
cltd
and
or
or
mov
repz
int
sbb
xchg
lds
int3
cmp
aaa
ret
or
dec
inc
inc
les
jnp
ror
movl
or
jne
sub
mov
ja
add
jle
sahf
inc
cmp
dec
andb
icebp
mov
dec
dec
shll
mov
ffree
pushf
mov
sarl
push
cmp
push
lods
lcall
aam
and
or
scas
dec
add
pop
fdivrs
nop
int3
xchg
aad
ds
push
shlb
push
sbb
push
insl
popf
int
xor
inc
fldl2t
divb
ret
mov
movsl
pop
jl
mov
jns
lret
push
pop
sub
mov
mov
inc
mov
addr16
fwait
and
fucomi
scas
jo
sbb
pushf
jae
int3
movb
addr16
inc
shrl
mov
mov
mov
inc
out
leave
cs
cmp
mov
mov
pop
pop
int3
adc
inc
cs
mov
xchg
xchg
sti
dec
popa
add
call
add
loop
cmpb
xchg
or
mov
xchg
ljmp
mov
and
loopne
mov
int
aam
scas
and
not
outsb
int
call
jo
push
fidivrl
push
jle
imul
xchg
stc
push
cld
inc
in
das
daa
or
push
outsb
and
je
mov
and
popf
adc
addl
repnz
mov
scas
ss
stos
out
jbe
pop
and
or
push
xchg
cli
inc
imul
clc
xchg
inc
andb
aas
ret
cli
not
or
jno
faddp
push
push
sub
jns
xchg
repz
movsb
out
fadds
outsl
push
sbbl
andb
dec
negl
adc
pop
imul
pop
aad
test
fucomip
sub
mov
push
gs
aad
fwait
aas
adc
sbb
sbb
fstpl
jge
fsubs
inc
scas
pop
adc
push
add
mov
sahf
jb
scas
mov
jo
lods
xchg
xor
xchg
repnz
mov
and
push
xchg
mov
rclb
jno
out
int3
aaa
jmp
clc
push
cmp
cld
cmp
int
iret
pusha
addl
dec
std
add
ds
or
mov
jne
aam
mov
inc
shrl
jmp
pop
out
shll
or
xchg
ljmp
shlb
mov
jp
pop
scas
shll
push
xor
or
imul
hlt
repz
loope
sbb
pop
adc
fwait
out
ret
mov
push
jge
cmp
cmp
inc
out
js
je
and
mov
pusha
push
in
ret
xor
jno
add
dec
out
fcoml
fisttpl
jnp
mov
mov
xor
mov
aad
xor
jno
in
stos
iret
or
unpckhps
and
push
mov
mov
adc
imul
js
imul
repnz
push
mov
jle
fstl
testb
xor
gs
push
lret
ficompl
lds
ss
inc
insl
test
adcb
outsl
je
dec
inc
movsb
test
push
lods
sub
or
sub
cmp
push
inc
arpl
inc
jno
dec
out
cmpsb
adc
mov
pop
insl
or
mov
pushf
aam
call
xchg
out
xchg
cltd
pop
into
jg
dec
sbb
xchg
shrb
lahf
imul
inc
dec
pop
add
xor
sub
jmp
push
sbb
add
cmp
push
rcrl
not
insb
movsl
jg
mov
sub
lods
stc
fs
lods
test
jmp
push
jnp
fs
mov
xor
inc
add
insb
xchg
inc
inc
jl
jbe
in
fwait
push
ret
sbb
cmp
repnz
dec
int3
cmp
adc
fdivrs
pop
mov
push
push
pusha
pop
or
pop
test
cmc
mov
cwtl
sbb
mull
pop
adc
sarb
pop
mov
push
mov
es
out
xor
outsl
rolb
dec
or
and
or
fdivrl
imul
push
ljmp
ss
jl
pop
rolb
xor
dec
mov
pop
inc
push
in
mov
or
pop
sbb
jp
in
lcall
jge
cmc
ss
pop
std
cmp
jge
and
push
xor
sbb
cmp
push
add
lods
cmp
arpl
push
adc
sub
mov
sub
mov
pop
stos
adc
lock
das
imul
jle
cmp
or
stos
and
lret
sub
mov
out
mov
fldt
idivl
and
cmp
lret
lahf
lret
adc
insb
mulb
add
cmp
sbb
iret
cli
fsubl
ljmp
aad
push
lcall
add
aad
adcl
call
lret
repz
clc
lock
outsl
js
pop
pop
adc
stc
test
call
ror
mov
into
mov
push
jge
inc
mov
or
lret
add
lods
or
pusha
pop
fisttps
das
add
add
pop
dec
mov
cli
scas
fmull
cmp
xchg
pop
sub
lods
cmp
lcall
xor
mov
inc
sub
lahf
and
fsubrs
movsl
pop
aam
xor
jp
inc
adc
cmp
xchg
pop
jp
negl
mov
test
push
sbb
and
es
imul
enter
insl
pop
push
cmc
out
xchg
in
sti
mov
cmp
xchg
jb
aam
push
mov
jbe
sbb
sbb
lock
es
loopne
das
xor
push
je
ret
adc
adc
mov
add
loope
jno
test
nop
pop
xor
pop
scas
les
xor
sbbl
lock
push
xor
or
add
in
push
insl
std
ret
mov
xorl
inc
arpl
in
cld
sub
mov
adc
xlat
mov
adc
aam
adc
cmp
shrb
mov
ds
imul
and
subb
mov
scas
repnz
add
dec
sub
inc
mov
xorb
in
fsubl
in
call
jle
dec
cmpsl
push
aad
jmp
lods
andb
xlat
loope
pop
add
icebp
sub
jmp
mov
xchg
shlb
mov
insb
mov
fadds
inc
cmpsb
pop
fisttpll
push
inc
or
cwtl
dec
movsb
rcrl
mov
out
mov
cmp
mov
jecxz
lret
pop
icebp
lea
fwait
mov
sbb
dec
or
icebp
cmp
mov
iret
jbe
push
bound
adc
ljmp
popf
pop
sub
mov
inc
or
pop
sub
and
cmpsb
mov
jge
dec
out
out
clc
data16
mov
iret
outsl
mov
iret
rcrb
out
aaa
jl
aas
lret
orb
mov
enter
push
cmp
call
inc
fwait
lahf
xor
shll
fstps
push
lea
push
mov
mov
jecxz
hlt
lds
rorl
adc
dec
fstps
dec
add
stos
xchg
sbb
mov
insb
into
bnd
mov
push
cmp
dec
mov
popa
loope
add
inc
add
popa
in
mov
hlt
sub
cmp
xchg
ja
cmc
pop
xor
adc
or
jbe
pop
mov
out
add
cmc
arpl
repz
dec
repnz
sarb
jmp
aad
rorl
add
lahf
jae
imul
aas
subb
call
or
push
pusha
xor
repz
xchg
and
stos
sub
fnstsw
js
std
mov
mov
push
pop
sarl
xchg
mov
mov
and
add
push
testb
lods
cmp
jno
add
fstpl
shlb
or
repnz
adc
or
pusha
imull
rep
jo
push
mov
aas
cmp
subl
addr16
jp
lds
xor
imulb
fnstenv
enter
shlb
jl
mov
push
sbb
sbb
paddsw
cltd
cmpb
inc
mov
mov
imul
ret
stc
cmp
fcoms
ds
in
cmp
adc
ljmp
loopne
sbb
mov
mov
adc
jnp
lcall
out
stos
xor
pushf
test
and
mov
outsl
cmp
mov
mov
daa
lods
dec
stc
fcompl
or
out
ret
orb
or
fs
mov
mov
cmp
jmp
outsl
clc
jbe
jne
mov
fists
adc
inc
sub
push
repz
out
cmp
sub
xchg
ficoml
clc
push
pushf
inc
sti
fimuls
or
jne
or
ss
push
mov
test
out
dec
aas
imull
subb
pop
repnz
mov
dec
iret
pusha
pop
xchg
xor
sbb
test
or
ja
jl
mov
sbb
add
mov
fnstenv
in
inc
ffreep
sti
pop
add
mov
mov
lea
jb
test
mov
fwait
sbb
jne
mov
jge
push
inc
scas
add
negb
lods
push
xor
aas
ret
std
jns
leave
dec
inc
jmp
insb
add
jp
rclb
dec
pop
mov
jecxz
and
fistl
fsubrs
adc
jp
subb
jg
call
dec
fcmovu
mov
leave
mov
sub
mov
outsb
and
push
and
es
xchg
sbb
sbb
js
xchg
inc
cmp
and
js
enter
sti
fimuls
imul
xchg
int3
xchg
clc
xchg
jo
enter
adc
pop
inc
jae
push
std
jle
cmp
iret
stos
mov
cmpsl
test
and
pop
cwtl
pop
push
iret
xor
lds
imul
pop
xchg
pop
lods
pushf
das
leave
pop
inc
and
roll
pop
inc
adc
sub
stc
and
rcrb
and
pop
sbb
in
mov
cs
pop
int3
shll
sbb
cmc
mov
sbb
add
or
cmp
hlt
das
lret
cltd
and
mov
xor
or
shl
in
mov
mov
movsb
add
popa
pop
mov
fadd
imul
pop
loopne
call
xchg
adc
roll
out
imul
mov
outsl
mov
and
or
xlat
pop
mov
xchg
push
cmpsb
and
testl
inc
push
sbb
or
mov
outsl
enter
add
pop
add
sub
adc
icebp
pop
movsl
insb
movsb
sti
lahf
pop
fnstsw
xor
aam
or
sbb
into
dec
test
xchg
push
push
lods
add
sub
sbb
xchg
call
out
aas
xor
or
int3
cltd
aas
cltd
xlat
iret
and
or
pop
stos
xor
call
or
adc
js
fisubrl
daa
and
out
xchg
inc
dec
push
inc
sahf
lock
daa
lods
adc
dec
out
sahf
les
jb
aam
lea
cmp
jae
adc
scas
push
movsb
dec
and
stos
sub
cmp
stos
stos
cmp
xchg
push
daa
xchg
dec
pop
insb
and
call
xchg
xor
gs
mov
pop
add
aad
xchg
sbb
mov
int3
stos
stos
inc
xchg
mov
cltd
ret
orb
addr16
jbe
add
std
dec
adc
jl,pn
leave
shlb
inc
pop
sub
jo
pop
repnz
int3
pop
cli
mov
xchg
xor
sbb
stos
jo
in
jg
adc
inc
aad
or
es
sub
jb
pop
outsl
fisubs
jg
stc
dec
add
or
jle
xchg
fmull
push
dec
repz
fidivrs
leave
das
mov
xchg
pop
daa
or
faddl
iret
out
movsl
mov
out
or
outsl
dec
insb
push
pop
sub
inc
mov
sub
xor
dec
in
imul
test
repz
and
cltd
adc
adcl
mov
jbe
insl
dec
xchg
int3
imul
in
cmp
xchg
mov
fstpt
iret
add
es
and
adcl
pop
add
clc
push
scas
dec
jo
lret
test
mov
fnsave
push
outsb
lahf
adc
mov
pop
je
sub
xor
mov
mov
imul
int3
outsl
adc
inc
xor
xchg
pop
sbb
jae
add
js
loop
imul
call
pop
cmpsl
xor
xchg
lds
imul
xor
jno
sarb
jge
or
sbb
add
out
mov
cltd
jb
addr16
fwait
push
or
imulb
mov
aam
pop
xchg
idivl
inc
jecxz
cmc
fwait
push
sahf
mov
dec
stc
dec
popa
lods
pop
xchg
xor
fwait
cmp
stos
aad
test
pop
test
popa
jmp
sbb
adc
xor
jl
inc
sub
lahf
adc
xor
or
and
fiaddl
fnsave
fwait
cmpsl
fcoms
adc
sub
lahf
add
stos
scas
test
in
mov
addr16
sub
and
movsb
or
pop
movsb
xor
pop
add
fistpll
dec
jg
jno
dec
in
mov
mull
incb
ljmp
cmp
pop
jg
sub
cmp
icebp
and
popa
mov
push
lret
iret
mov
jbe
push
push
jne
in
shlb
in
rcll
scas
nop
mov
push
adc
fsub
fstpl
btr
jb
push
mov
mov
and
dec
jmp
inc
out
adc
mov
std
mov
dec
jbe
addr16
xor
pusha
fwait
test
test
popf
inc
sub
cli
sbb
out
or
push
pop
pushfw
jbe
pop
cli
inc
es
pop
std
push
adc
xor
sti
xchg
mov
lcall
dec
lock
push
inc
xchg
inc
enter
insl
mov
xchg
pushf
cmp
xor
in
cmpsl
cmp
mov
mov
and
popf
test
push
push
lock
mov
xor
aad
dec
pop
leave
sti
mov
or
xor
test
sbb
push
sub
ret
add
loop
xchg
test
aas
nop
loop
call
stc
jl
mov
fs
mov
and
xlat
dec
push
fmuls
dec
data16
icebp
or
stc
dec
mov
xchg
dec
xchg
xchg
inc
xor
rcr
in
imul
and
ret
popa
iret
fldl
mov
sub
rorb
hlt
test
mov
ss
or
jo
pop
lret
xor
insl
icebp
sub
rcll
dec
xchg
sub
inc
mov
mov
mov
push
pop
inc
les
dec
stos
gs
mov
dec
pop
pop
adc
loope
icebp
cmp
pop
jae
lahf
and
clc
cmc
pop
iret
and
dec
xchg
dec
popa
and
shll
cmp
xchg
dec
sbb
call
in
xchg
scas
xor
fstps
and
dec
adc
dec
mov
mov
jns
xchg
imul
xor
ds
mov
fistps
add
out
stos
jge
xchg
mov
and
fmull
sbb
mov
pop
testb
sbb
pop
outsb
xorl
jp
stos
scas
lds
pop
sbbb
xor
push
xor
pop
push
mov
in
jb
popa
daa
lret
dec
mov
sbb
pop
mov
lcall
sub
faddl
jae
neg
out
sbb
xor
hlt
in
xchg
mov
inc
mov
xchg
popf
mov
std
insb
call
push
push
nop
push
mov
loop
repz
adc
rclb
sbb
mov
scas
mov
jbe
inc
jecxz
dec
call
add
roll
push
out
stos
jns
int
outsl
dec
push
dec
mov
pop
data16
push
adc
mov
fisubs
test
call
adc
fnstenv
mull
adc
subl
and
xor
jno
push
les
adc
xchg
jmp
leave
jae
lock
adc
fimull
loop
jns
mov
cmpsb
rorb
into
jne
ror
mov
je
sbbb
cmpsl
jns
sbb
add
jno
scas
stos
cmpw
dec
sub
imul
or
dec
xchg
fwait
sbb
mov
xor
cltd
aaa
mov
loop
push
pop
fmul
fldcw
mov
mov
add
scas
mov
mov
ds
mov
inc
clc
jg
mov
cmc
imul
push
mov
mov
push
jp
xchg
adc
pop
push
xor
adc
scas
jl
clc
das
jp
popf
adc
into
hlt
pop
je
int3
jg
shrl
mov
jecxz
jo
push
int
loop
sahf
popf
es
adc
or
or
xor
dec
cwtl
dec
ja
xor
aas
sbb
sbb
mov
adc
jns
das
dec
call
cmc
adc
in
xorb
mov
js
xor
sarb
add
ss
repnz
mov
adc
jne
insb
ljmp
fdivrl
je
rolb
mov
out
sub
aaa
or
sbb
fisubrl
gs
adc
and
int3
fsubl
mov
xor
sbb
mov
stos
pop
add
sub
fcoml
push
sub
adc
and
mov
das
add
sbb
add
mov
loopne
sub
sbb
mov
cmp
adc
sbb
push
js
add
mov
jne
jbe
sub
dec
fimull
inc
lock
sub
test
lret
or
mov
hlt
andl
scas
mov
lret
out
call
test
jle
and
sub
jbe
sti
add
push
add
push
es
lahf
mov
and
mov
mov
push
adc
push
adc
sbb
insl
xchg
add
or
or
xchg
xchg
jmp
scas
jo
lcall
hlt
dec
push
xchg
jge
arpl
cmp
push
lock
dec
xchg
mov
sti
xor
jl
aad
pop
fbld
push
stos
mov
mov
dec
mov
mov
cmp
iret
repz
sbb
fimuls
jge
sbb
fisubs
mov
add
and
jecxz
mov
pop
inc
addl
xor
or
pop
add
arpl
int
pop
jne
push
jae
iret
mov
adc
mov
cmp
push
aas
xor
std
push
fildl
pop
xlat
xor
in
sbb
add
mov
repz
imulb
adc
xor
scas
xchg
dec
cmp
pusha
dec
mov
imul
adc
sub
xchg
lods
xchg
mov
fildl
icebp
sub
test
sub
adcb
test
lea
push
nop
xor
repz
and
pop
pusha
fdivl
pop
jp
xchg
cli
xor
inc
push
pop
or
icebp
and
data16
jmp
loope
sbbb
outsl
push
repz
loope
push
loop
divb
lret
xor
lcall
test
out
mov
in
inc
pusha
mov
insb
js
les
mov
js
mov
fs
xor
out
mov
nop
pushl
push
in
mov
cmp
lret
push
sub
add
insb
dec
mov
cld
insl
and
stos
fmuls
inc
sahf
xor
add
es
xchg
lret
pop
loop
sti
and
jecxz
jns
enter
in
lret
fiadds
arpl
sahf
push
jb
std
test
stos
scas
in
add
in
inc
dec
jp
movsb
fdivl
pop
adc
inc
bound
stos
adc
dec
jne
das
add
mov
pop
cmp
lcall
add
cs
adc
popf
lds
and
mov
mov
not
jp
add
hlt
repz
or
push
in
out
mov
jecxz
push
outsl
mov
add
jle
call
xchg
fcompl
jmp
fistpl
xor
or
mov
xchg
xchg
sbb
lret
repz
dec
imul
push
jmp
in
out
outsb
jb
dec
xchg
icebp
gs
mov
fisttpl
imul
in
in
ja
push
inc
mov
adc
mov
rol
outsl
jmp
insl
out
lret
mov
cld
aaa
clc
jno
jb
int3
aas
cld
mov
push
sbb
lods
mov
inc
clc
test
adcl
movsl
add
cs
cs
lock
push
add
cld
sbb
repnz
adc
mov
or
lahf
xchg
mov
mov
pop
flds
aam
data16
sbb
filds
movsb
cmpsl
aam
lds
jle
jg
loopne,pt
pop
lock
fadds
jg
test
sbb
and
mov
repnz
mov
mov
xchg
or
add
subb
cmp
xor
lcall
inc
les
insb
loopne
mov
movsl
pop
sbbl
push
adc
mov
ss
mov
aam
ret
dec
adc
add
cmp
inc
negl
cmp
mulb
mov
pop
pushf
cld
cmpsb
inc
mov
sbbb
pop
cmp
push
lret
dec
xchg
sub
lds
inc
dec
sbb
rcll
xor
rolb
ljmp
lods
sub
stos
mov
xor
pusha
push
in
add
int
push
or
cmp
inc
xchg
push
mov
cmpsl
int
mov
inc
push
mov
mov
sbb
pop
cmp
enter
inc
pop
mov
cmp
and
xchg
inc
push
sti
lods
jecxz
pop
leave
jnp
cld
nop
clc
xchg
xchg
dec
dec
mov
xor
outsb
adc
lahf
mov
test
dec
adc
pushf
js
cld
outsl
sysenter
ljmp
mull
adc
xchg
xlat
pop
shr
fbld
enter
or
adc
sbb
loope,pn
lcall
cmp
stos
scas
out
fwait
push
and
sub
pop
outsb
pop
sbb
mov
leave
push
adcl
mov
or
out
pop
xchg
cmp
add
dec
stos
mov
mov
std
push
jno
in
inc
mov
lea
push
shll
cld
mov
ljmp
dec
pop
or
xchg
mov
push
les
dec
std
jge
lock
jns
mov
pop
aad
jl
aas
mov
vmaxsd
aam
call
addr16
lcall
pop
popf
pop
ljmp
icebp
inc
js
xchg
mov
or
jp
rclb
pop
add
in
fs
adc
mov
sahf
fwait
push
ds
dec
sub
xchg
cmp
or
and
jmp
lret
cwtl
or
dec
jae
test
or
loop
fmull
out
inc
dec
mov
into
inc
ljmp
cmpsl
iret
shll
sbb
ret
rorl
adc
mov
cmp
xchg
pusha
mov
addl
dec
decb
cmpl
imul
sbb
xchg
pushf
sti
fcoml
jns
sti
sbb
mov
sub
sbb
mov
pop
jle
jmp
jl
adc
push
repz
jl
into
pop
stos
hlt
xchg
fwait
out
dec
imul
mov
icebp
call
jno
sub
lret
dec
or
xchg
outsl
and
mov
mov
mov
pop
out
loopne
int
addr16
clc
subl
in
add
lods
xor
lcall
mov
out
xlat
cmc
adc
mov
insl
icebp
dec
data16
imul
mov
dec
shll
fucomp
daa
xchg
movsl
or
push
sub
pop
jle
push
stc
stos
fidivs
and
aad
lea
push
push
je
inc
xchg
or
std
push
cmp
mov
sbb
push
scas
imul
addr16
gs
adc
fnsave
inc
popf
lock
and
or
or
push
pushf
dec
mov
pop
push
adc
xchg
sahf
aam
loop
and
pop
push
xchg
sub
xchg
in
icebp
jecxz
push
test
sbb
sahf
fdivrl
loopne
and
push
in
call
andl
mov
cmp
mov
mov
jnp
shl
int3
arpl
cmp
jg
aad
not
inc
loop
add
popf
jge
and
fiaddl
outsb
push
mov
inc
jmp
shrb
inc
mov
repnz
dec
int3
jmp
ss
pop
sbb
and
test
call
or
aas
xchg
xchg
sub
mov
xchg
inc
pop
xchg
daa
sub
add
subl
imul
outsl
or
add
dec
popf
jp
shr
xor
mov
sti
repz
and
sarl
lds
push
jo
xchg
jae
sub
fs
aas
and
xor
call
jecxz
bswap
pop
xchg
lods
popf
or
mov
cmpsb
imulb
fsts
mov
ja
aam
enter
or
shll
loopne
push
fisttpl
fs
push
shll
cmp
mull
jne
pop
outsl
loop
inc
shlb
push
ljmp
lahf
insb
pop
mov
lret
cmp
lods
add
mov
movsl
out
push
shrl
in
pop
pop
add
push
in
dec
dec
sbb
xchg
pop
int3
test
sbb
testl
sub
out
in
pop
jns
add
lret
adc
sub
and
adc
sbb
gs
xor
outsb
in
lcall
stos
test
loop
aas
xor
gs
mov
imul
jl
pushf
pop
push
adc
pop
xlat
pop
cld
or
clc
insb
dec
pop
pop
shl
je
hlt
pop
jo
clc
xchg
aas
aam
cli
push
cmp
bound
push
out
cmp
mov
popf
jmp
pop
sbb
or
out
insb
loope
cs
push
mov
in
loop
inc
jb
pop
and
mov
insl
rcr
pop
pop
dec
xor
in
cli
imul
sub
push
es
pop
xchg
xor
andb
push
loop
inc
inc
jnp
imulb
iret
push
jle
imul
inc
add
adc
push
and
mov
and
jp
lahf
dec
arpl
lods
mov
sbb
stos
adc
inc
insl
dec
mov
or
push
jl
push
test
outsb
mov
out
mov
subl
pop
shll
xchg
mov
sahf
cs
mov
mov
push
test
bound
lock
xor
mov
inc
xor
dec
mov
inc
loop
loop
jbe
jecxz
shll
in
cltd
clc
push
shll
xlat
cmc
arpl
out
jae
xchg
fstpl
xor
stc
jge
aam
lods
cmp
and
dec
in
jo
lahf
or
xorl
fstp
mov
push
adc
popa
xor
mov
arpl
inc
dec
push
mov
flds
jo
add
push
pop
and
and
xor
mov
mov
cmp
xor
mov
ja
or
inc
leave
in
lods
lret
outsb
je
imul
xor
aad
xor
pop
shll
mov
cli
push
es
fs
test
call
rcr
adc
cmc
sub
fs
xor
adc
adc
dec
fnstcw
pop
mov
mov
xchg
cmpl
sub
sbb
fcoms
int3
lods
jae
jbe
test
out
add
aam
sub
cltd
adc
xchg
setle
daa
ja
scas
inc
sbb
jmp
adc
pop
jle
je
or
inc
pop
adc
xchg
loopne
or
ljmp
xlat
mov
sbb
xchg
xchg
enter
in
and
mov
sub
xchg
push
rol
dec
push
cmp
push
mov
pop
xor
pusha
out
leave
push
inc
dec
mov
in
or
pop
or
lret
imulb
mov
mov
dec
hlt
imul
icebp
add
xor
fildll
filds
lock
mov
mov
pop
xchg
std
popf
mov
dec
clc
xchg
xchg
xchg
imul
push
sahf
mov
int3
mov
outsb
and
cmp
mov
lea
sub
push
mov
inc
or
repnz
cmpsl
insl
push
lret
and
push
pop
push
sahf
fbld
sub
or
adcb
movsb
mov
or
test
add
lock
push
fwait
in
popf
sbb
mov
inc
mov
cwtl
aam
mov
dec
xor
and
push
fs
xchg
or
out
adc
dec
mov
cmc
mov
imul
pop
insb
pop
xchg
out
pop
and
sbb
or
clc
subb
aas
cmc
pop
pop
rcrb
movl
mov
cs
iret
scas
xor
dec
mov
js
adc
fstpl
dec
cwtl
mov
fidivs
ret
jne
add
nop
out
es
pop
or
mov
mov
call
add
imul
fdiv
xchg
hlt
sar
das
rorl
xor
shl
lods
ja
fbstp
jbe
lret
inc
stos
xor
adc
mov
mov
mov
out
push
and
aas
in
and
jp
aaa
or
addb
pop
mov
loop
lret
mov
into
in
push
loopne
cltd
pushl
inc
popl
jb
loopne
ljmp
push
stos
cli
sahf
jmp
mov
pop
mov
xchg
inc
dec
mov
jle
mov
sub
sbb
add
or
xchg
pop
mov
sbb
sbb
in
es
shrl
clc
mov
jge
xor
das
shlb
ja
xchg
ja
sbb
mov
lret
xchg
ja
mov
or
mov
jbe
imul
lods
lea
cwtl
cmpsl
in
cmp
push
lock
jle
sub
jl
ja
jo
xchg
add
scas
inc
fsubs
sub
out
dec
rclb
insl
add
jae
icebp
and
negl
dec
sbb
loope
dec
jmp
xchg
mov
adc
sbb
jl,pt
repz
jae
xchg
mov
cmp
xor
imul
mov
insb
mov
cmp
mov
inc
jne
push
mov
jmp
sub
sbbb
sbb
rcrb
inc
dec
jg
mov
lahf
mov
rcr
iret
cmp
into
jmp
pop
shrl
movsl
cltd
dec
push
jmp
sub
loope
jb
fbstp
loope
rcrl
sbb
ss
std
push
xchg
gs
stc
cmp
sub
je
xor
imulb
lret
mov
bound
mov
and
xchg
fsubrl
add
dec
cli
pop
call
push
pop
test
inc
inc
sti
int
jno
movsl
pushf
testl
add
lock
pop
dec
ds
out
xchg
lahf
mov
dec
mov
mov
cltd
out
out
nop
daa
fisubs
lods
xchg
mov
mov
cmp
pop
scas
inc
cmp
cmp
mov
xchg
mov
push
lods
js
mov
cmp
ja
lret
or
pop
icebp
nop
int
or
js
push
sti
xor
dec
pushf
inc
push
cmpsl
adc
inc
popa
sub
push
cmp
aam
adc
gs
je
sub
popa
mov
and
pop
test
mov
add
rclb
xchg
mov
orb
lret
out
xchg
lret
add
cwtl
loopne
test
sub
sub
and
xor
mov
pop
xchg
lds
aam
push
mov
push
popl
shll
ljmp
jnp
cmpsl
xchg
fistpll
mov
lods
pop
xchg
icebp
dec
loop
pop
cltd
cwtl
fstps
pop
cmp
mov
hlt
cmpsl
lcall
pusha
or
jns
sahf
ret
daa
cld
pop
test
lock
lods
lahf
push
jmp
sub
push
hlt
in
jecxz
xor
mov
lods
mov
mov
in
sub
movsl
dec
ja
out
xchg
test
inc
int
mov
stos
cltd
jns
add
lock
jne
fcoms
jmp
or
jge
fildll
push
lahf
jbe
cmp
popf
out
inc
shll
or
push
inc
jnp
dec
mov
shl
mov
add
pop
sbb
pop
jnp
lcall
pop
push
dec
scas
test
push
adc
mov
movsl
jbe
jb
mov
push
dec
jge
ret
adc
mov
das
notl
cmove
subl
mov
js
sti
mov
ret
inc
std
out
jg
or
inc
sbb
inc
inc
icebp
xchg
mov
xchg
mov
pop
insl
mov
sub
notl
out
jg
pop
xor
push
adc
in
dec
pop
outsl
and
push
dec
mov
cmp
mov
dec
sub
sbb
outsb
jb
push
mov
pop
push
sub
jae
and
stc
dec
inc
cmp
stc
inc
adc
sarb
and
cmp
xchg
ret
xchg
pop
xchg
xor
or
lock
cmpsl
fbstp
cli
xchg
lret
rorb
inc
fcmovb
lds
repnz
cmc
ljmp
mov
dec
inc
movsb
insb
and
push
imul
ret
iret
pop
add
out
xchg
dec
cmp
imul
bound
push
mov
inc
pop
das
aas
sti
push
imul
movsb
xlat
mov
or
cli
lret
loop
loop
xor
xor
movsl
pop
sub
call
mov
push
fld
sbb
push
popf
jne
mov
xchg
test
ret
aam
mov
mov
cmp
add
mov
test
aam
jmp
mov
outsl
xchg
or
bound
push
jno
pop
sbb
clc
and
or
jnp
mov
adc
mov
call
jg
leave
jecxz
out
push
sbb
int
inc
mov
cs
std
push
mov
xchg
sub
push
push
nop
add
cmp
and
mov
jge
cmpsl
pop
mov
mov
mov
int
mov
cmp
and
in
js
jne
mov
ret
mov
js
test
add
mov
pop
xor
sbb
mov
leave
lock
and
out
mov
movsb
out
or
add
stos
pop
jb
pushw
sbb
aaa
mov
dec
les
jne
xorb
jecxz
add
enter
pop
cmpl
xchg
lcall
push
aas
cwtl
sbb
shll
divb
call
jmp
gs
lahf
into
inc
mov
mov
pop
lds
subb
xor
aas
mov
and
adc
shl
shlb
push
lock
cmpsl
fnstcw
cli
lds
sub
lods
pop
and
xlat
aaa
bound
loopne
movsl
mov
push
dec
inc
ljmp
stc
add
loopne
and
mov
add
in
sbb
shl
inc
loopnew
sbb
int3
jg
stc
push
xor
add
out
xorl
in
stos
call
ficompl
movsb
pop
inc
sub
push
pusha
mov
or
push
dec
nop
dec
xorb
mov
sub
lods
cmp
stos
nop
rclb
lods
stos
stos
imul
icebp
and
pushf
mov
cmc
ljmp
mov
repnz
imul
xor
fsub
fs
orb
test
out
adc
arpl
js
enter
call
fstl
jbe
jae
scas
addr16
aad
fisubrl
lods
dec
sbb
outsb
cli
inc
jmp
and
xlat
cmp
xor
dec
or
outsl
jnp
jo
sub
sub
adc
adc
or
sahf
dec
ljmp
es
js
js
aam
adc
dec
mov
inc
out
jg
adc
xor
push
xchg
iret
enter
iret
fs
pushf
lock
cmc
cmpsl
lods
cmp
or
mov
cltd
xchg
and
rol
mov
iret
jae
dec
or
jnp
xor
mov
pop
out
aas
adc
cld
mov
jge
push
mov
push
fwait
push
add
or
cmp
jns
lahf
pop
enter
cld
pop
stc
jge
mov
stc
and
sbb
inc
std
leave
aam
jge
hlt
int
in
sub
mov
js
adc
adc
pop
jle
dec
lods
xor
push
fistpl
adc
jne
jns
pop
fmul
insl
cmp
lcall
roll
icebp
mov
sub
cmp
sbb
adc
sbb
and
sub
adc
test
mov
sbb
sub
loope
imul
sub
lods
testl
loope
movsb
add
gs
push
xorl
mov
enter
and
mov
mov
sub
mov
ja
movsb
out
pop
push
jle
cmp
arpl
out
lock
mov
mov
out
xor
gs
fwait
dec
push
test
loop
sti
sub
pop
or
mov
in
mov
call
xor
test
sbb
pop
jmp
push
fstps
addr16
pop
popw
sub
dec
testl
xor
fwait
cmp
arpl
mov
loope
shlb
pop
fwait
dec
je
xchg
ljmp
into
int
fdiv
cmpsb
aas
push
in
arpl
ret
mov
add
rcl
jge
or
div
les
sub
divl
lret
add
mov
or
sub
cld
xlat
pop
sub
jl
andb
jne
mov
adc
subb
mov
ljmp
fs
insl
decl
mov
pop
lcall
leave
fwait
adc
mov
mov
or
jae
fistpll
arpl
xchg
nop
ret
sbb
movsb
and
imul
mov
repnz
mov
xor
sti
cmp
mov
cmp
lods
push
adc
std
shlb
push
rep
jb
sbb
pop
bound
pop
insl
scas
sub
lahf
jl
sub
pop
sti
mov
mov
adc
repz
mov
sarb
test
jp
and
add
rorl
pop
and
push
cmc
pop
sbb
pop
hlt
ljmp
nop
adc
imul
cmp
cmp
sub
xor
or
mov
call
push
pop
out
xor
add
adc
dec
not
stos
cmpsl
dec
dec
cmp
xor
or
jge
faddl
and
or
xorl
xchg
xor
fwait
dec
jo
arpl
mov
jmp
and
stc
arpl
out
mov
sub
int3
xor
mov
mov
data16
aaa
jo
iret
xchg
ret
lgs
inc
pop
sbb
cltd
and
jno
pusha
mov
sarb
adc
xchg
xchg
adc
fwait
xor
sub
fistps
sub
and
xor
sbb
or
andb
mov
cmpsl
mov
setne
jb
jmp
sub
repnz
scas
insl
cmp
negl
add
insl
add
in
mov
pusha
sarb
cs
fdivs
or
clc
mov
mov
call
insb
sahf
adc
inc
push
jo
mov
enter
mov
bound
push
jns
dec
ret
and
and
mov
fimull
lahf
lcall
mov
dec
mov
jge
fildll
jecxz
lahf
rclb
add
aad
ds
orl
xchg
cmc
mov
push
int
ret
shll
rorl
mov
scas
ds
cltd
xchg
jg
push
movsl
adc
mov
rcrb
and
inc
pusha
jecxz
mov
pop
jecxz
xchg
mov
pop
and
mov
ljmp
pop
jmp
aad
js
repz
sti
dec
add
xchg
inc
adc
add
cwtl
fisubl
add
xchg
mov
jp
clc
adc
or
shr
int3
sub
add
bswap
push
adc
int3
jo
mov
in
fisttpll
sbb
jle
arpl
xchg
nop
pop
out
in
mov
inc
jae
rorl
mov
adc
cmp
repnz
xchg
jne
push
in
daa
int3
rol
pushf
pop
inc
inc
test
push
mov
xchg
jg
jge
stc
decb
repz
js
push
mov
cmp
popf
jo
inc
data16
cmp
cld
mov
mov
loop
pop
or
mov
lret
mov
ljmp
rclb
pop
push
mov
jle
pop
mov
arpl
cmp
jnp
or
cmp
mov
lret
or
out
outsl
and
lea
inc
cld
lea
xor
repnz
xor
mov
loope
sub
adc
in
and
rcl
mov
mov
add
sub
insb
jo
mov
pop
dec
insb
sub
mov
nop
orl
outsb
pop
cmp
mov
ret
fsts
cmpsl
mov
jnp
xlat
mov
shlb
xchg
and
dec
adcl
cld
cmpsb
mov
jb
mov
fcmovbe
or
scas
jnp
dec
cmp
pop
sub
jnp
sbb
mov
lds
sbb
cltd
cld
cs
ret
lret
popa
les
iret
xchg
out
sarl
inc
or
fs
in
adc
rcrl
mov
xchg
add
xchg
js
loopne
outsl
pop
lahf
mov
xchg
hlt
stos
ljmp
jge
icebp
jb
ljmp
push
dec
repnz
fimuls
mov
xchg
adc
xchg
rorl
shl
test
shrb
sbb
in
pop
inc
lea
cmpsb
jnp
jp
cmp
add
jg
insl
ret
add
xor
xor
push
add
jb
dec
test
iret
xchg
adcb
inc
cli
mov
and
mov
push
and
subl
jo
hlt
push
push
ds
inc
and
shll
push
push
ror
bound
in
or
imul
in
shll
std
loopne
xchg
sbb
cmpsb
push
shll
push
mov
nop
enter
mov
ds
aas
xor
stc
jmp
in
popf
cmc
call
gs
inc
pop
mov
test
push
inc
and
and
jo
into
xchg
gs
xor
int3
xchg
jg
testb
in
js
jecxz
dec
lods
sbb
add
add
or
ficoml
mov
lret
adc
jg
mov
adc
mov
mov
clc
cmp
fsts
call
mov
lcall
outsl
xchg
pop
xor
enter
imul
leave
jne
sub
fwait
inc
jns
ljmp
addl
mov
jl
aas
add
add
fs
cmpsb
push
je
cmp
fldt
pop
mov
pop
xor
popa
mov
jnp
or
mov
fsubl
xchg
fdivs
jl
add
pop
jmp
aaa
sbb
sbb
fwait
aam
stos
pop
inc
push
popf
in
mov
mov
adc
ss
ljmp
jne
popa
xchg
and
mov
xchg
std
into
xchg
cmp
mov
cmp
cmp
mov
imul
sarb
dec
addl
imul
cmpsl
cmc
dec
cld
stc
pmaddwd
pop
pop
nop
jl
lods
inc
add
fs
inc
stc
pop
pop
cwtl
adc
outsl
jb
xor
inc
es
push
movsl
dec
jo
in
scas
mov
jnp
add
mov
loop
mov
and
push
iret
imul
aam
push
cli
dec
ficoml
std
sub
xor
xchg
xchg
sarl
dec
test
inc
ficompl
daa
mov
inc
cmp
insl
jg
jp
sbb
jbe
lds
or
mov
add
cmc
jle
xchg
inc
sub
mov
fnsave
mov
inc
in
fidivl
push
xlat
lods
pop
add
lds
aam
pop
adc
xor
push
inc
jg
ljmpw
ss
mov
sbb
imul
mov
int3
mov
jge
mov
xor
aam
jae
mov
mov
stos
adc
daa
dec
ja
stc
imull
mov
rcrb
pop
xor
repz
or
fdivrs
xor
sti
xlat
adc
cwtd
pop
xorl
sti
jg
cmp
pop
cmp
push
out
lds
jns
orb
ret
insl
orb
and
cmp
out
mov
jle
push
cmp
pop
jge
sub
mov
hlt
adc
aad
add
mov
dec
xor
aad
push
xlat
pop
push
jge
mov
mov
fs
outsl
pop
xor
xor
ficomps
pop
mov
mov
ja
jl
cmp
clc
push
pop
push
and
jae
dec
lods
out
into
sbb
inc
fdivr
jmp
mov
mov
rcll
push
or
mov
jp
js
jns
int
lcall
or
add
test
cld
cld
sub
fcompl
lods
xor
loope
sbb
xchg
leave
ror
int3
or
test
pop
ljmp
fstp
cwtl
out
cmpsl
and
incl
cmp
rcl
scas
mov
pushf
cmpsb
inc
cmpsl
jle
xlat
ss
inc
inc
sti
mov
push
sub
arpl
mov
loope
cmpsl
roll
sub
inc
dec
enter
mov
dec
xchg
and
jns
push
shlb
xor
mov
mov
popf
jle
push
adc
nop
and
in
test
icebp
xchg
popf
jl
mov
imul
mov
inc
inc
lret
not
std
mov
pop
add
push
dec
popa
inc
sti
xchg
jmp
and
sub
pop
loop
fstpt
mov
mov
and
xchg
mov
shll
daa
scas
xor
pop
icebp
or
test
fistl
adc
xor
test
cmpsb
subl
call
inc
xor
xlat
addl
in
mov
loop
pop
stc
or
int
cld
push
cwtl
add
xchg
test
int
push
stos
jo
mov
sbb
mov
imul
xor
aaa
loope
jno
sub
mov
loop
int
clc
lret
rcll
dec
mov
shll
xchg
or
int
add
sbb
mov
cmc
ja
xchg
mov
data16
jae
lret
xchg
imul
in
fbstp
cmc
adc
lret
fisttps
dec
loopne
add
lods
jge
add
rcll
mov
inc
mov
enter
out
xchg
sub
inc
push
adc
in
cmpl
ret
add
cmp
mov
stos
jge
push
push
mov
xchg
in
lock
xchg
lock
pop
loopne
xor
lods
out
mov
jle
jo
pop
fwait
adc
test
testl
insb
push
mov
push
mov
add
test
dec
mov
orb
scas
add
popa
push
aas
sub
inc
in
push
xor
daa
inc
inc
and
mov
jecxz,pn
inc
imul
addb
fbld
filds
in
enter
or
sar
fcoms
pop
out
jg
push
mov
daa
daa
aad
pop
out
push
sub
sbb
cmpb
jmp
push
iret
or
add
sub
loope
fs
add
testl
stos
xchg
xor
or
test
cld
lods
sub
dec
jmp
dec
and
and
pop
pop
dec
lcall
das
inc
scas
push
or
jno
in
mov
mov
mov
popf
jmp
jnp
and
test
fstpt
out
add
orb
mov
or
mov
repnz
adc
xchg
xor
gs
aaa
icebp
adc
cmp
sub
rol
mov
movsl
in
jno
pop
push
ljmp
and
sub
jecxz
and
sbb
or
lahf
clts
jae
jae
sbb
xchg
pop
xlat
and
gs
jbe
cmp
adc
mov
bound
insl
test
dec
in
es
mov
pop
loop
or
pushf
xchg
mov
push
xor
cs
test
pop
ss
xor
or
repnz
or
pop
sbb
inc
sbb
repz
or
aas
add
lahf
pop
xchg
bswap
jo
mov
mov
jp
jnp
pop
push
aam
loop
xchg
mov
es
call
inc
mov
mov
xchg
into
shrb
aad
push
cltd
jb
xchg
sbb
push
push
icebp
jb
cmp
jmp
dec
and
inc
add
iret
xchg
cmp
and
xchg
es
mov
ror
mov
xor
jle
jno
aam
push
push
mov
mov
rorb
idiv
es
shlb
dec
test
push
dec
cmp
inc
add
cmp
mov
jl
dec
das
cmc
test
stos
sbb
push
cli
shlw
jmp
cmp
jecxz
and
pop
add
shlb
xor
iret
cwtl
sub
pop
iret
sbb
pop
add
cmp
mov
adc
fsubrl
push
mov
cs
sub
cmp
sarl
sbb
sar
cli
adc
cmpl
inc
push
imul
rclb
xor
mov
xchg
and
sbb
pop
mov
in
in
mov
and
movsb
jnp
subb
lds
cli
add
loop
jne
sbb
jecxz
ljmp
xor
sbb
dec
pop
sub
add
lret
fwait
xchg
and
push
jnp
cmovl
icebp
mov
jne
jnp
movsb
cli
cmp
data16
cli
aaa
inc
int
popf
xor
jne
and
add
scas
jecxz
arpl
popf
in
fcmovbe
dec
out
vpshaw
and
push
pop
and
das
out
ljmp
ss
outsl
mov
mov
dec
shl
ss
jae
nop
dec
mov
loope
aaa
pop
xchg
sbb
sbb
test
adc
mov
pop
mov
test
jne
and
dec
in
lahf
pop
inc
cmpsb
scas
xchg
rcll
jl
mov
inc
jo
lock
push
and
add
push
imul
ja
idivl
fcmovu
enter
xor
mov
cmp
mov
adc
out
and
stos
inc
mov
fisttpl
cltd
repz
cmp
cltd
lods
xchg
xor
lea
cmp
xchg
arpl
add
jmp
adc
insb
enter
les
xchg
or
sub
ja
pop
dec
lock
negb
dec
mov
out
mov
xchg
cmp
data16
sbb
inc
pushl
enter
sbb
mov
into
cmp
xor
inc
insl
adc
xchg
mov
movsb
mov
mov
xchg
popa
sub
aad
sub
inc
push
adc
add
jmp
xchg
jo
call
shl
pop
popa
int
int
das
sbb
outsb
pop
sub
dec
xchg
push
repz
aaa
inc
and
stc
push
cmp
ret
rorl
mov
mov
pop
clc
and
push
dec
out
adc
out
lock
rorl
xchg
into
lret
shrb
jl
inc
dec
and
add
fldenv
andb
fistps
jb
jecxz
pop
jle
lods
int3
cld
test
jl
cmpb
test
pop
push
mov
pusha
add
fs
scas
jle
pushaw
mov
test
cld
pop
mov
mov
cli
icebp
inc
adc
pop
pop
ljmp
cmp
cmc
fwait
push
lahf
in
les
cmp
ja
xor
in
subl
ficoml
xor
xchg
test
scas
std
inc
imul
push
adc
test
out
nop
sbb
ret
lahf
rcll
push
pop
cmpb
mov
rorl
andb
mov
aaa
or
push
ret
imul
jge
nop
add
mov
movsb
pop
inc
xor
leave
fyl2x
dec
das
fdivrp
xchg
fsubp
cmpsb
jge
call
xor
mov
js
xor
xor
xchg
pop
out
add
push
push
push
popf
test
rcl
lods
flds
stos
lds
inc
rcr
daa
inc
pop
xchg
jge
adc
add
cli
or
sub
pop
inc
or
jns
mov
mov
loop
shr
std
inc
aaa
pusha
sbb
mov
pop
mov
mull
adc
push
mov
call
cmc
lods
push
jo
inc
inc
xor
lods
xor
sbb
fsubrp
jp
enter
jmp
cld
lcall
push
lea
mov
cmpsb
shl
nop
sbb
sub
push
cli
mov
xchg
adc
xor
xlat
fisubl
jns
add
cld
ret
push
and
ficoms
xchg
add
push
push
dec
pop
sti
xor
cmc
scas
adc
push
fsubrl
xchg
jl
es
push
rorl
cmc
bnd
inc
lret
xchg
jnp
cmp
fbld
mov
popf
in
in
inc
into
dec
xchg
rcrb
out
inc
mov
ja
push
js
iret
divl
dec
int3
ret
xor
or
sub
push
lret
push
sbb
pushf
scas
out
xor
adc
leave
or
pop
dec
xchg
imul
xor
mov
out
dec
notb
ror
std
fiaddl
std
sti
arpl
push
sbb
xchg
es
dec
insl
fldcw
notb
stc
call
push
xor
daa
adc
test
lock
ret
jb
clc
fistps
or
mov
jo
das
mov
dec
les
adc
adc
mov
out
mov
cmp
pop
xor
sahf
inc
inc
sarb
sub
pop
pop
fwait
add
add
pop
adc
dec
daa
or
ja
das
test
pop
mov
jle
pop
insb
out
int3
push
push
pop
popa
push
outsl
xlat
insl
stos
in
lfs
mov
pop
pop
pop
addr16
add
adc
dec
lock
cmp
xor
aam
sub
mov
lahf
test
push
sbb
loopne
cmp
fsubrp
inc
inc
xlat
cld
pop
mov
loopne
jnp
sub
lea
inc
hlt
scas
mov
stos
loope
imul
push
add
xor
aas
mov
lods
dec
and
mov
jg
and
sbb
test
and
lock
inc
cmc
rorl
cmp
mov
adc
enter
loopne
xchg
gs
ja
sub
xchg
push
sbb
insb
sbb
push
adc
test
xchg
push
sbb
iret
fsubrl
fwait
and
jae
adc
jl
push
xor
adc
cmp
dec
cmpsl
push
lods
mov
or
xchg
jnp
nop
aam
rorl
add
lret
push
sbb
add
jne
mov
cltd
cwtl
addr16
addr16
loopne
dec
lods
jbe
jmp
cmpsb
std
mov
rclb
cmp
adc
pop
mov
sbb
lret
pushf
sub
and
sbb
into
fwait
mov
aaa
arpl
pop
ss
ds
add
jo
sub
ljmp
xor
pop
out
fldl
mov
dec
dec
test
inc
sub
sub
fisubrs
pop
pop
arpl
adc
fbld
jmp
push
pop
decb
dec
push
push
cmp
movsl
js
out
pop
loop
fstpl
or
sub
jg
stos
cs
shr
inc
adc
sub
es
jl
push
scas
mov
or
outsb
pop
sbb
adc
jmp
lods
sub
jb
pop
jle
pop
jns
dec
lret
scas
in
repz
repnz
push
imul
mov
outsb
mov
and
shlb
pop
call
sbb
ljmp
or
rcll
out
insl
or
dec
fwait
aad
je
in
jmp
rcrb
ret
aad
pop
fidivrs
xor
cwtl
xchg
leave
ret
ljmp
test
xchg
shll
xor
hlt
adc
jb
shlb
mov
inc
adc
push
sbb
pop
ss
sub
mov
pop
clc
enter
dec
aaa
and
out
push
ds
das
adc
jnp
leave
xchg
daa
mov
cmp
adc
push
mov
fcomps
sub
cmp
xchg
sbb
aad
bnd
sbb
call
mov
and
jo
and
adc
sti
decl
push
mov
sub
adc
cmp
fiadds
ss
add
pop
std
arpl
xchg
scas
fs
pop
sbb
gs
enter
mov
xchg
es
and
in
mov
add
xchg
inc
outsb
mov
lret
and
popf
add
sub
test
push
cwtl
arpl
push
and
xchg
rcll
mov
sbb
sub
sbb
mov
insl
in
or
xor
sbb
cmp
insb
rcl
test
cmp
loop
ret
fwait
sub
push
insb
sub
push
leave
inc
xchg
xchg
sub
mov
or
sbb
fsubrs
push
test
lds
lcall
ret
cli
js
lods
je
test
addl
or
repz
xchg
or
sub
and
cltd
xor
loope
xor
xchg
jmp
rclb
outsb
and
cld
cmp
shrl
fwait
addr16
pusha
push
mov
dec
outsl
jae
sbb
xchg
sbb
xor
pop
insl
jle
add
jp
push
ja
and
cmp
mov
sbb
iret
int
adc
cmp
lcall
mulb
outsb
repnz
xchg
dec
or
iret
and
shr
cmp
fiadds
jg
sbb
or
bnd
fdivr
adc
fbstp
add
mov
pop
mov
jle
ficoml
scas
leave
loop
push
sti
fdivs
jae
adc
cmp
mov
jbe
pop
pushf
dec
inc
xchg
add
adc
pop
lea
jge
jns
pop
fwait
cmp
sub
bound
jge
mov
shll
sbb
dec
push
add
outsb
xlat
jno
stos
and
pop
test
cmp
mov
aad
xor
in
ja
cmp
pushf
jle
xlat
ret
mov
mov
pop
xchg
adc
insb
les
mull
fdivrl
movb
inc
mov
or
add
dec
mov
ss
insl
jl
or
in
mov
ret
mov
adc
pop
pop
adc
lods
popa
cmp
mov
sub
mov
mov
push
lahf
adc
popf
int3
loope
gs
fs
gs
cmp
or
add
outsb
add
pop
push
addr16
out
inc
ret
jl
adc
add
jb
mov
arpl
scas
mov
dec
pop
xchg
fstpl
push
jae
push
stos
mov
jne
test
or
out
popa
cmp
pushf
add
mov
test
es
ljmp
and
and
inc
mov
sti
push
jb
pop
mov
jge
cmp
adc
dec
pop
dec
inc
sbbl
and
aas
lahf
fidivrl
cli
stos
mov
add
fs
mov
push
add
mov
pop
test
iret
mov
in
lret
es
cmpsl
test
lahf
stc
adc
push
mov
inc
and
push
mov
pop
outsl
mov
dec
test
test
pop
inc
xchg
sarb
inc
lahf
dec
jge
aad
jg
sbb
das
mov
lods
cwtl
push
pop
adc
adc
xlat
std
push
outsb
sub
push
push
or
and
lret
flds
xor
scas
popa
or
aaa
mov
inc
lahf
rclb
adc
push
std
pop
int3
fdivrl
ljmp
in
sub
mov
insl
test
test
push
xor
add
loopne
add
fsubrl
stc
lret
push
push
pop
popf
scas
loope
std
jmp
iret
xchg
popa
aaa
or
fnstenv
mov
int3
fidivrl
mov
out
push
inc
pop
sub
mov
adc
inc
fiaddl
pop
out
loopne
ja
xor
scas
negb
ljmp
jnp
sub
fnstsw
pop
je
popa
cld
pop
xor
out
in
dec
cs
xor
fdivrs
andl
dec
xor
movb
adc
mov
or
adc
xor
outsl
fbld
mov
or
and
je
add
jo
sub
mov
add
test
gs
or
cld
imul
adc
dec
add
sbbl
and
fcmovbe
movsl
dec
sahf
pop
pop
cli
pop
notl
les
imul
and
pop
jae
fidivrs
stc
push
popf
lods
jns
nop
add
sbbb
jecxz
sahf
jle
and
add
in
mov
lahf
xor
jle
ret
loop
cld
or
test
cmp
fnsave
dec
add
test
jl
mov
lret
in
or
pop
mov
inc
repz
xchg
mov
cmp
popf
dec
or
sbb
ds
pop
sbbl
jae
mov
daa
lods
or
fucomp
adc
xchg
push
jbe
xor
je
test
lds
jne
nop
and
jnp
adc
arpl
dec
jecxz
lea
imulb
shlb
outsb
xor
or
into
out
stc
nop
inc
inc
xor
ds
pop
adc
push
cli
mov
fdivrl
shr
popa
mov
imul
mov
xchg
out
or
dec
and
sahf
movsb
shrb
ss
xchg
pop
dec
imul
cli
mov
sbb
mov
aad
rol
mov
test
and
and
xchg
popa
mov
idivl
xchg
cltd
xchg
adc
loop
dec
cmc
andb
dec
add
repnz
sbb
les
sbb
int3
aas
xor
pop
push
sti
and
xchg
repnz
push
ljmp
sti
into
inc
sti
testl
inc
jl
push
nop
push
gs
or
push
mov
sti
les
pushf
movsb
pop
sbb
cs
sub
mov
jecxz
adc
xchg
jl
movd
jmp
xor
test
mov
fwait
push
xor
inc
cs
popf
xor
decl
cmpsl
out
adc
mov
adc
imul
pop
pop
cmp
iret
lods
movsb
fcoml
popf
sub
sbb
int
div
sahf
call
stc
push
or
mov
test
mov
add
repz
mov
adc
jae
push
adc
sbb
jg
jae
push
mov
dec
push
test
iret
scas
push
sub
cmp
rcrb
cltd
into
insb
mov
out
fstp
mov
popa
mov
popa
aas
push
rclb
aad
test
xor
mov
and
sub
data16
shrb
push
arpl
inc
daa
enter
xor
insb
or
montmul
cmpsb
test
add
lret
bound
es
jge
call
or
or
arpl
mov
mov
add
in
xlat
mov
xchg
loope
sub
ficoms
idiv
imul
cli
js
fcmovu
sti
aas
xchg
scas
clc
ret
mov
pop
std
xor
and
daa
enter
rcrb
lods
inc
fsubs
inc
xchg
xor
bound
xlat
dec
leave
push
lcall
inc
mov
into
mov
mov
pop
jne
loope
pushf
jbe
push
mov
adc
add
nop
dec
jbe
jmp
mov
lock
xchg
mov
lcall
xchg
jle
xchg
neg
push
daa
test
mov
adc
int3
xlat
cmp
mov
ret
rcrb
ja
movsl
cmp
mov
add
hlt
test
icebp
add
outsl
mov
push
or
mov
jle
xchg
cld
inc
mov
movsl
mov
jno
out
movsb
fs
call
aaa
jmp
pop
subl
call
sbb
loop
sub
mov
scas
pop
adc
sbb
ja
push
imul
jecxz
rorb
xor
cmp
xchg
das
pusha
jnp
jecxz
mov
xor
jo
mov
je
cmp
add
pop
mov
lea
inc
cli
hlt
cld
leave
lods
enter
fiadds
xlat
inc
add
push
pop
out
push
sbb
sarb
or
mov
cmp
insl
or
mov
sahf
out
adc
cmp
sub
add
test
jb
sti
cmp
jnp
pushf
aaa
mov
or
rolb
fstpt
lea
cmp
push
insb
scas
outsl
les
jmp
push
retw
sub
das
cwtl
fldcw
and
lods
in
xchg
add
and
mov
mov
xor
xor
push
push
push
lock
ss
push
out
out
popa
adc
push
loop
test
arpl
adc
xor
push
pop
cltd
inc
lods
aam
jg
adc
loopne
push
sbb
aas
loop
cmpsl
test
or
repz
pop
mulb
rol
fidivl
push
jl
mov
enter
mov
jp
push
std
pop
jle
mov
sbb
cmp
inc
sbb
cltd
das
popa
je
adc
out
mov
stos
mov
push
jmp
dec
fldt
cmp
mov
jo
lahf
scas
adc
in
cmp
xchg
popf
sbb
in
pop
ja
sbb
cld
or
sbb
push
push
inc
enter
shlb
pop
icebp
inc
insl
aam
add
lods
negb
push
mov
stos
stos
pop
popf
cmp
add
pop
in
jo
push
rol
aas
sbb
sbb
sub
ds
xchg
imul
mov
aaa
adc
xchg
mov
and
iret
dec
xorl
xlat
cs
insl
jae
movsb
cmp
add
popa
cmp
test
adc
popa
lret
test
cltd
inc
jecxz,pt
push
or
stos
sub
xchg
xchg
xchg
or
lret
inc
xor
jg
sarl
jno
das
das
jo
xchg
stos
mov
lods
or
mov
xor
rcll
into
xchg
dec
mov
cmp
and
mov
push
pop
stc
push
dec
frstor
adc
aad
push
insl
or
ret
int3
scas
enter
lret
mov
pop
xabort
xchg
dec
or
cmpsl
xchg
xor
add
mov
fldcw
fadds
inc
inc
xor
push
nop
int
scas
pop
addl
mov
mov
jecxz
sbbl
mov
xchg
je
push
aad
push
pop
and
xchg
pop
fsubrl
pop
repz
cld
pop
punpckhdq
sub
sub
cs
xor
aad
loope
loopne
outsb
outsb
push
cmc
mov
pop
and
outsl
stos
popf
aas
and
imul
addl
std
ja
add
call
sub
add
and
or
pushf
test
cmp
push
push
xchg
adc
loope
adc
pop
xor
loope
push
fisttps
xchg
std
or
xor
inc
cmc
in
mov
lds
movb
andl
ljmp
jle
cwtl
inc
pop
pop
in
jbe
fbstp
adc
pop
hlt
cli
lcall
sub
add
repz
nopl
sub
cltd
lahf
add
jo
in
loope
imul
or
int3
mov
cli
cmp
sbb
add
jne
adc
outsl
cmp
ss
mov
in
push
mov
or
pusha
mov
addb
pusha
addr16
sbb
sbb
movsb
pop
neg
fmuls
lahf
out
dec
outsl
mov
jl
mov
loope
jnp
push
or
fistl
cmp
scas
or
lahf
bound
mov
cld
sbb
adc
mov
jmp
add
xchg
cmp
jge
xchg
pop
loop
adc
push
in
imul
xchg
fcom
in
fucom
sarl
add
mov
enter
cli
add
xchg
add
fildll
in
movsl
push
cmc
rorl
add
pop
dec
jne
cld
aam
test
in
orb
jbe
mov
inc
xor
daa
loopne
lock
xchg
sbb
inc
mov
nop
xor
or
lret
push
xor
mov
mov
push
inc
adc
adc
out
ss
mov
inc
sub
cmp
sarb
jb
rcrl
cmpsl
dec
sub
xor
fs
dec
jb
movsb
pop
rcrl
pop
enter
subb
nop
push
jle
cmp
test
xor
push
aaa
mov
sub
fidivs
lock
das
adc
mov
pop
cmc
fcoml
into
xchg
lods
das
les
push
xchg
rorl
into
rcrb
pop
mov
in
mov
cmc
xchg
int
pop
loope
add
sub
push
mov
orb
sub
mov
and
pushf
push
jl
in
pop
popa
cmp
mov
mov
sub
dec
into
dec
cs
fdivl
xchg
mov
dec
repnz
pop
add
enter
pop
jb
add
daa
adc
push
outsb
cmp
subb
pushf
xchg
mov
cmp
xchg
shrl
pop
or
xlat
subb
lds
pusha
xchg
cmp
mov
lods
pop
cltd
and
inc
aad
jl
dec
add
xchg
sbb
out
cmc
sub
mov
ficoml
push
mov
iret
ret
add
pop
pop
pusha
das
jp
jp
js
mov
mov
xor
lock
dec
insb
outsl
jle
lods
ror
aad
pop
incb
bnd
jecxz
dec
ja
cmp
jae
pop
mov
push
data16
pop
lcall
cs
sbb
out
pushf
push
push
cmc
stos
je
out
inc
sub
lcall
pop
dec
mov
mul
les
jge
shl
push
cmp
jae
xchg
lods
aam
arpl
mov
insb
fdiv
jp
jp
pop
inc
arpl
ret
adc
and
ss
fisttpl
fisubs
lds
fadd
scas
pop
sarl
jne
xor
push
mov
pop
call
adc
cmpsl
aaa
stos
jmp
fisubl
movl
push
insl
outsl
sbb
sahf
mov
sub
lcall
xor
movsb
loopne
and
imul
xchg
xchg
pop
xchg
xor
push
clc
gs
jne
std
push
mov
outsb
stos
shrb
lcall
mov
dec
leave
jb
imul
repnz
push
mov
ret
pop
jmp
cmpsb
cmp
aas
cmp
fucomp
cld
xor
outsl
cmpl
imul
pushf
sub
mov
mov
dec
fdivl
pop
lds
fmuls
test
add
les
inc
or
sbb
ret
inc
push
add
cmc
dec
ret
aad
aas
mov
xchg
outsl
lret
push
jb
mov
in
or
push
or
xor
push
ja
cmp
pop
pop
loop
jge
dec
cli
aaa
scas
dec
pop
imul
lock
mov
add
xchg
adc
mov
ja
cmpsb
cmp
pop
lret
pop
xchg
in
aas
dec
cmpb
mov
mov
add
pop
js
dec
jle
lret
cmpsl
mov
pop
mov
xor
insl
jns
xchg
push
je
les
push
pop
jbe
or
leave
xchg
aas
xchg
dec
mov
mov
out
dec
in
jecxz
rorl
in
jns
stos
int
inc
cmp
sbb
push
dec
xor
pop
add
rorl
jmp
loope
lahf
in
cmp
sub
dec
jbe
xor
loope
in
or
xchg
dec
dec
inc
jae
cmp
movsb
push
pop
and
mov
cmpsl
jo
pop
mov
push
add
sub
push
enter
repnz
sbb
pop
repnz
dec
pusha
scas
adc
mov
out
addr16
ret
andb
cmp
ja
mov
loop
adc
je
or
xorl
xor
fdivs
lds
cli
fidivrs
iret
push
adc
lahf
dec
pushl
add
inc
addr16
push
jl
push
shr
jge
push
sarl
pop
or
pop
cs
sub
loop
jp
call
ss
aaa
xchg
mov
test
sub
ud2
jecxz
mov
repz
cli
jp
mov
popf
stc
push
repnz
mov
jl
dec
mov
and
les
cli
shlb
rcll
ret
das
mov
push
sahf
mov
aam
gs
sub
shll
ljmp
mov
repz
scas
fcomps
pop
adc
cmp
roll
mov
nop
add
add
and
lret
rcll
std
xor
push
fucomi
xchg
cmp
mov
sub
loopne
fldl
push
mov
addl
pop
sbb
negl
lods
xor
nop
push
mov
or
or
adc
jo
xchg
pop
lock
mov
movsl
sub
sub
dec
fidivs
pop
loope
jns
pop
test
adc
jb
add
in
jg
lret
in
pop
adc
psubq
stos
push
push
xchg
jno
in
subl
ljmp
push
int3
iret
lds
jg,pn
xchg
mov
dec
mov
sti
add
movsl
push
push
sub
mov
daa
cmp
insl
adc
inc
clc
xchg
aad
jmp
gs
ret
sbb
scas
mov
aad
sahf
xor
popf
xlat
cmp
mov
out
iret
push
sub
ljmp
ss
jnp
mov
mov
push
cmpsl
mov
mov
cmpsb
in
mov
lcall
js
and
fisttpl
lods
mov
add
iret
or
pushf
cli
push
pop
jae
jno
push
mov
adc
sub
push
jb
adc
add
add
xchg
call
stos
sbb
jnp
dec
dec
addl
divb
repz
shrl
xchg
leave
mov
stc
jg
xor
stc
mov
inc
sub
pop
push
mov
xchg
lcall
adc
cmp
cmpsl
std
dec
mov
lock
mov
add
pop
divl
push
ljmp
popa
popf
mov
or
mov
add
notb
pop
stc
xchg
ret
jb
loope
jl
xchg
or
xchg
xorb
addr16
mov
jle
jmp
mov
lret
jno
sub
and
jge
sahf
shlb
xor
pop
jecxz
mov
push
push
mov
push
out
add
adc
mov
adc
lods
sbb
mov
jo
popa
ss
xor
pop
push
add
jns
xor
or
lret
adc
popl
cmpsl
add
sahf
adc
divb
es
bound
testb
sub
jp
cmp
mov
mov
jecxz
outsb
and
push
ds
pop
out
push
pop
push
mov
or
mov
call
cs
add
jg
mov
cld
outsb
test
or
hlt
xchg
cmp
cltd
fdivrl
iret
mov
or
sub
and
mov
out
shrl
jg
cmp
and
ds
int
xor
push
sbb
or
jg
dec
adc
out
rcl
lds
addr16
and
ret
or
mov
imul
inc
cwtl
dec
std
shlb
imul
xor
mov
cmp
into
lods
add
or
xchg
dec
decl
mov
shrb
pop
scas
scas
lret
sub
jl
xchg
mov
mov
idivl
imul
addr16
adc
mov
mov
test
cmc
jbe
dec
cmp
push
pop
mov
ror
cli
mov
into
xor
fcomps
jnp
sub
adc
fs
les
sub
mov
xchg
out
mov
fs
les
popa
mov
lahf
jae
jo
subl
ss
jbe
add
dec
loop
ja
flds
mov
jle
or
push
cmp
dec
ljmp
aaa
dec
out
les
sbb
inc
sti
pop
and
rep
cmc
or
or
test
lahf
mov
xchg
testl
ljmp
add
mov
pop
int3
lahf
mov
push
mulb
rorb
jns
push
cmpsb
xor
xor
movsb
cmc
hlt
sbbl
push
xchg
jmp
inc
sub
clc
jns
iret
std
mov
stos
fld
mov
mov
inc
loopne
negl
xchg
jo
mov
xlat
int3
pop
mov
andb
xlat
and
std
pop
scas
out
push
cmp
adc
gs
jl
addr16
push
out
loopne
cmc
or
xorb
xchg
out
mov
andl
push
push
ret
sbb
in
popf
fidivl
nop
or
sub
or
pop
cmpsb
xor
cmp
adc
mov
in
and
and
push
lahf
xchg
fiadds
sbb
xor
movsl
loope
test
sahf
les
mov
fbstp
mov
aam
adc
xchg
lcallw
jno
add
sub
mov
add
adc
xchg
mov
js
sbb
and
cmpsl
mov
sub
inc
dec
ja
and
ret
mov
iret
rcll
adc
cmpb
mov
testb
dec
jg
mov
push
cs
or
mov
add
sbb
cld
push
fdivrl
popf
fsubs
or
mov
outsb
pusha
xor
popa
jg
xchg
arpl
xor
ds
jecxz
pushf
pop
daa
rcll
mov
ds
aad
lret
jmp
pop
mov
cwtl
ljmp
cwtl
pop
test
jns
pop
mov
cmovnp
dec
in
mov
stos
addr16
jle
or
std
inc
sbb
sarb
insl
insb
sub
mov
out
xchg
shlb
ljmp
nop
fisttpl
arpl
int
sbb
cmp
push
mov
xor
sbb
and
jmp
jno
xchg
xchg
add
or
add
mov
fmuls
fiadds
add
pushf
mov
push
sbb
or
sahf
aaa
mov
push
jno
movsb
inc
mov
mov
cmc
push
enter
ret
shlb
les
imul
jmp
sbb
jno
push
add
jp
push
fs
xor
repnz
pop
dec
or
mov
mov
xchg
jb
in
mov
test
mov
inc
int3
das
les
jmp
sub
xchg
pop
iret
insl
push
inc
adc
or
mov
jno
sub
jb
aam
xadd
call
mov
push
add
jbe
fistl
leave
rorl
inc
lock
decb
out
mov
mov
outsl
in
jbe
test
mov
stc
stos
mov
loope
or
adc
xchg
jae
adc
iret
popa
inc
add
pop
out
js
push
mov
push
adc
jnp
push
addr16
jecxz
and
inc
movsb
pop
gs
inc
mov
lods
cwtl
movsb
fidivl
inc
xchg
xorl
sbb
dec
int3
gs
dec
xor
sbb
pop
dec
pop
int
movsb
sub
mov
fnsave
adc
icebp
mov
mov
testb
push
repz
mov
mov
xchg
popf
or
or
popf
pop
jl,pt
outsb
sub
lcall
adc
add
or
cld
mov
stos
or
cmpb
ljmp
pop
mov
aam
and
lahf
sbb
es
dec
mov
push
rorb
sti
repz
fsubs
jbe
mov
jnp
stos
cmpsl
lock
ja
sbb
mov
mov
sbb
cmpsl
scas
sub
cmpsb
mov
subl
out
xchg
jb
popf
int3
test
xor
add
sti
jae
mov
jae
lret
cs
xor
pop
sbb
gs
lret
int
and
into
cli
xchg
dec
mov
xor
fcomps
mov
dec
xlat
xchg
shl
mov
int
mov
imul
aam
fistl
filds
lea
fistpl
sub
aaa
mov
pop
test
push
dec
sbb
stos
cltd
in
mov
cli
inc
dec
arpl
xlat
push
fwait
cmp
cmp
sub
xor
pop
jb
scas
inc
js
mov
inc
cmp
test
mov
rcrl
test
jmp
and
push
pop
mov
mov
div
and
cltd
sub
xchg
mov
dec
push
inc
hlt
cwtl
push
ret
pop
pusha
out
inc
mov
pop
adc
mov
sbb
or
cmp
push
mov
push
inc
in
bound
bound
pop
jns
sbb
lea
mov
inc
pop
fcmovne
mov
xchg
mov
xchg
xor
movsl
push
je
inc
int3
add
mov
pushf
adc
push
lods
dec
xor
or
lea
xcrypt-ecb
cmpsl
sqrtps
enter
mov
sbb
jno
and
ret
inc
xchg
dec
mov
stos
jl
into
dec
mov
mov
hlt
das
xchg
mov
dec
or
or
mov
sbb
das
call
das
les
pop
mov
cmp
scas
adc
jl
hlt
adc
scas
arpl
cmpsb
jo
dec
jnp
xor
fiadds
orl
in
xchg
jbe
and
inc
stos
mov
adc
xor
cmpb
mov
xchg
scas
sub
push
mov
jl
scas
mov
loope
jbe
adc
fistps
outsb
sahf
std
cmp
mov
dec
sbb
cmpb
jbe
jg
push
lock
ret
iret
fsts
mov
cmpsb
jmp
jle
ret
sbbb
stos
or
sub
jo
dec
sub
jge
dec
aaa
mov
xchg
jae
scas
fwait
cs
insl
bound
sahf
dec
test
addr16
sub
fldl
flds
sub
xorl
xor
popa
roll
push
daa
adc
sub
push
jo
hlt
aam
push
push
jmp
dec
mov
push
mov
mov
xor
jl
mov
cmp
leave
dec
push
jl
mov
into
fsts
xor
ljmp
jbe
sbb
push
imulb
js
cmp
xchg
and
scas
sahf
xchg
clc
cmp
insl
sbb
mov
xchg
mov
xchg
or
xchg
shll
fsubl
aaa
and
stc
push
mov
and
fwait
inc
and
inc
adc
lock
cmp
sahf
shrb
daa
lods
orl
mov
inc
adc
push
scas
pop
ret
nop
lret
add
cmp
and
shrl
jns
inc
lcall
lods
lahf
pop
cmp
mov
and
adc
cmc
stc
lds
sbb
dec
add
fadd
hlt
repnz
pop
loopne
or
out
sahf
scas
pop
sarb
nop
sti
arpl
inc
xor
xor
xorl
xchg
mov
and
shll
aaa
pop
and
sbb
aad
imulb
movsl
das
push
ja
mov
rcr
lds
pop
dec
xor
or
hlt
jne
push
jno
pop
cmp
insl
jmp
fimuls
out
xchg
lods
jnp
leave
inc
cmp
jne
out
xchg
mov
mov
imul
xor
aad
mov
push
pop
sbb
loope
jl
dec
lock
test
mov
es
mov
mov
cld
cltd
in
outsb
adc
mov
sub
add
dec
ret
data16
imul
je
outsb
ds
mov
sbb
inc
sub
lock
push
clc
mov
je
or
fnstsw
dec
adc
aam
sub
mov
sbb
push
movsl
ret
cmp
scas
minps
lock
push
push
fs
mov
xchg
mov
adc
jb
jecxz
lods
mov
jmp
dec
repz
mov
xchg
mov
sbbl
jle
cltd
sbb
mov
xchg
and
lcall
mov
test
dec
aam
int3
pop
pushf
xor
xor
sub
call
aam
cmp
sbb
call
sahf
mov
jae
daa
stos
rorl
cmp
pop
mov
dec
mov
push
cmp
adc
shrl
mov
imul
aaa
fstps
cmp
test
mov
fldlg2
adc
gs
and
push
pop
fistps
jmp
or
stos
mov
cli
lcall
cs
adc
std
mov
xor
lcall
mull
pop
mov
mov
sarl
xor
inc
push
jge
inc
push
dec
in
or
mov
mov
shll
mov
cs
aas
roll
sub
fisttpl
inc
sahf
or
xor
xchg
add
fprem
aas
test
cmpsl
mov
bound
andl
mov
and
cmc
int
loopne
sub
mov
cli
stos
cmpsb
mov
js
pop
sub
jecxz
cmp
pop
dec
jbe
inc
sti
test
pop
cli
ret
sbb
shl
jae
icebp
in
cmpsl
adc
mov
gs
inc
les
sub
mov
or
mov
cs
mov
shll
fisttps
xchg
sub
imul
popa
popf
test
push
int
sbb
jl
cmpsl
packsswb
inc
jne
lds
cli
cmp
mov
and
jle
push
mov
adc
sub
stc
imul
insl
mov
mov
sbb
addr16
nop
pop
cmp
jno
jle
mov
xchg
cld
xor
inc
enter
inc
shlb
jl
ss
jecxz
mov
mov
rolb
aas
sub
cmpsl
popf
cli
xchg
xlat
clc
push
cmp
in
mov
ficoms
ds
in
push
jge
jae
pop
pop
jno
or
push
mov
enter
inc
mov
cmp
test
cmp
out
mov
popa
test
lock
and
pop
daa
loop
or
cmp
sti
loope
jbe
xlat
test
pusha
mov
or
add
mov
xchg
push
cmp
stos
ljmp
lea
ss
out
jecxz
sti
jge
icebp
xchg
sbb
movsl
dec
adc
sbb
repz
test
lret
arpl
daa
xchg
adc
lret
jl
jmp
dec
jae
mov
add
adc
hlt
dec
mov
negb
pop
sahf
push
scas
xchg
aad
push
ret
cmpsb
sbb
mov
out
imul
mov
in
sbb
out
fistpll
push
pop
jmp
add
aas
in
add
cmp
mov
jae
lods
insb
xchg
std
jo
pop
mov
test
dec
mov
sbb
pop
mov
pop
and
xchg
push
pop
sub
sub
aaa
scas
xor
out
lods
mov
fbld
add
or
xor
js
mov
xchg
sbb
cmp
adc
out
in
or
sub
jbe
loope
fs
mov
dec
add
cltd
gs
sarl
cmp
sbb
mov
and
mov
inc
mov
adc
xor
push
scas
and
xor
dec
mov
pop
nop
jnp
loop
lds
nop
fsubl
pop
ja
addr16
pop
mov
mov
adc
jbe
push
jb
dec
hlt
orb
rcrb
call
aaa
ss
call
jne
lret
test
imul
xchg
mov
hlt
push
mov
je
push
and
cmp
pop
mov
sbb
xor
pop
mov
and
clc
mov
mov
cwtl
cmp
int
js
adc
push
hlt
jae
repnz
sbb
fs
insl
mov
adc
repnz
push
cmp
rep
mov
ficoml
in
cmp
or
adc
rcll
repnz
jecxz
adc
cmp
add
movsb
add
pop
pop
rclb
inc
mov
mov
ret
enter
aas
dec
or
mov
enter
jae
xchg
imul
push
sub
or
repz
mov
xchg
rcl
mov
outsl
jge
mov
pop
inc
adc
and
loop
in
addr16
js
in
adc
jno
dec
into
mov
fldenv
in
int3
lea
aaa
push
lds
aad
or
movsl
ficompl
dec
out
int
lret
pop
mov
aam
aas
fs
jecxz
mov
stc
pop
cmp
xchg
jbe
lcall
mov
jno
sub
dec
mov
mov
das
sub
push
ds
dec
jle
jmp
je
mov
test
lock
insl
push
ja
and
dec
sbb
scas
or
sar
aam
decb
ds
sti
pushl
pushf
aaa
sub
icebp
mov
or
push
push
testb
mov
loope
mov
in
sbb
jge
inc
jns
testl
adc
pop
xor
shlb
das
pop
sbb
cmpsb
jns
lods
mov
rcrl
jbe
ss
in
jg
out
mov
pop
movsb
int
and
aad
push
mov
xchg
pop
jp
add
adc
and
and
rol
sahf
iret
mov
cmp
xlat
dec
sbb
and
dec
aas
jge
stos
push
add
xchg
pop
dec
mov
rol
jle
daa
sub
and
aas
outsb
les
push
mov
ret
push
rcl
xchg
mov
mov
das
repz
lahf
push
sbb
fdivs
aas
push
test
jne
xchg
mov
int3
pcmpeqb
cld
sbbl
loopne
and
loopne
mov
sti
inc
xchg
inc
iret
xchg
sahf
inc
fdivl
add
inc
pop
dec
jmp
loop
dec
js
xchg
in
movzbl
lods
dec
add
jb
icebp
outsb
fldt
popa
jp
xor
lret
ss
push
fdivrl
dec
jns
adc
xchg
scas
inc
dec
jl
dec
insb
into
pop
mov
sbb
aad
add
ja
outsb
loope
rol
xchg
adc
mov
cltd
or
push
pusha
xchg
jp
jmp
arpl
je
xor
addb
xchg
subl
jmp
clc
mov
imul
push
push
jb
mov
test
pop
clc
sar
lcall
fcmovnu
pop
mov
push
mull
out
add
cmc
xchg
xor
out
repz
mov
xchg
dec
in
xchg
jmp
hlt
insl
sub
gs
xorb
arpl
jecxz
sahf
cmpsb
int
leave
and
aad
hlt
adc
lret
jno
outsb
in
sbb
jmp
and
dec
xchg
insb
or
jb
out
jle
mov
rcrb
gs
push
cmc
in
js
adc
mov
jl
add
mov
sub
xchg
movsl
lods
inc
gs
push
sbb
std
push
int
mov
push
stc
mov
and
jp
mov
jg
lret
fs
mov
popa
dec
int3
cmp
fisttpll
or
or
sbb
js
sti
or
dec
in
sub
xchg
insb
in
xchg
jns
cmp
ljmp
pop
jnp
orb
xchg
mov
out
sub
std
iret
fisttpll
add
xor
das
or
gs
adc
jne
imul
std
fcom
push
movb
stos
es
adc
ret
push
out
dec
push
rcrl
mov
sub
test
pop
sub
jl
sub
sub
lret
mov
fwait
or
ljmp
fsubs
jno
je
nop
mov
test
or
push
mov
pop
enter
push
push
jg
mov
mov
subb
pop
shr
pop
out
sti
in
fwait
ljmp
fistpll
popa
pop
fisubl
in
jbe
add
fnstcw
sub
inc
pop
mov
push
dec
adc
lret
jbe
insb
cld
shrl
inc
popa
mov
icebp
or
pop
fstpt
mov
or
mov
rol
loopne
push
cli
sub
ret
les
xchg
xchg
das
shl
mov
movsl
push
push
jge
sbb
nop
dec
js
out
repnz
or
pop
movsb
push
js
shll
insb
push
sub
dec
cmc
or
lds
xlat
mov
jmp
mov
lods
movsl
push
icebp
std
fcmovnu
mov
iret
in
mov
xor
icebp
sarb
pop
call
adc
lock
or
jge
push
pop
mov
dec
int3
int3
ja
cmp
inc
sub
pusha
mov
cmp
add
lods
dec
pop
xor
mov
pop
outsl
out
popf
cmpsl
adc
imul
stc
or
xchg
imul
popa
lock
ljmp
mov
mov
aad
cltd
cwtl
sbb
pushf
jns
sbb
inc
sahf
and
int
pop
xor
mov
lahf
pop
imul
push
out
lcall
pushf
addr16
mov
test
and
dec
jns
das
pop
push
add
push
and
aam
cld
int
cmp
add
sbb
imul
sbb
insb
or
add
push
jae
repnz
ficompl
pop
push
jbe
std
das
pop
or
movsb
dec
mov
pop
sbb
push
push
jg
jbe
push
pop
mov
xorl
xchg
test
push
sbbl
ficoms
orl
dec
adc
sub
mov
stos
mov
shll
in
dec
mov
sbb
lret
push
pop
push
mov
ss
push
mov
mov
or
jns
rcl
insb
mov
jl
push
fs
popf
popa
loope
push
mov
or
into
mov
push
dec
iret
dec
mov
in
lcall
fisubrl
cmp
mov
enter
push
imul
or
outsb
cmp
lret
and
int
fistps
push
add
adc
fcmovne
pop
push
cmp
add
lods
pop
pop
or
and
add
mov
fisubrs
pop
xor
sbb
mov
bound
inc
inc
pop
in
sbb
sub
jae
inc
test
fwait
pop
movsb
ret
inc
jmp
es
bound
jl
push
mov
lea
sub
pop
fstpt
mov
mov
jecxz
insl
jp
pop
xchg
xchg
aam
push
jle
push
mov
mov
and
jl
arpl
fs
sahf
repnz
setae
ljmp
lods
or
movl
aaa
push
ja
in
fwait
sub
aad
pop
test
data16
pop
sbb
jecxz
aam
sahf
xchg
xor
or
rcl
popl
std
out
xchg
mov
dec
add
stos
hlt
mov
mov
fistl
mov
lds
adcb
inc
rcrb
and
jg
push
and
cltd
hlt
enter
mov
xchg
in
mov
hlt
jns
jge
cmp
stos
lea
mov
in
movsl
dec
std
insl
or
cmp
mov
mov
lea
andb
inc
mov
je
dec
xor
push
cwtl
daa
xchg
dec
mov
cmpsb
jmp
sub
cld
lret
and
mov
push
or
add
fcompl
pop
and
and
sbb
mov
mov
call
stos
cmp
out
cli
mov
xchg
std
outsl
cmp
stos
add
sbb
pop
xchg
jge
data16
sti
cmp
leave
pop
push
push
sub
pushf
ret
int
notb
in
ret
pop
insl
pusha
dec
cmp
push
adcl
mov
fs
ds
stos
incl
inc
pop
inc
loop
push
xor
andl
pop
inc
jecxz
leave
mov
xchg
lods
aad
jl
aaa
aam
rcl
mov
inc
aas
mov
outsb
add
jecxz
out
xchg
push
stos
jo
outsb
push
or
mov
dec
int
xor
arpl
inc
out
adc
out
iret
xchg
sti
ds
lock
inc
test
andb
inc
mov
xchg
subb
sbb
jp
mov
call
push
add
cmp
popf
lahf
mov
in
nop
mov
jno
mov
ret
push
adc
cmp
pop
inc
jno
loop
mov
jne,pt
sub
dec
xor
sbb
jne
call
pop
pop
and
and
xlat
psubusw
sbb
cmp
or
pop
dec
ret
adc
cmp
xchg
out
lahf
imul
loope
push
in
pusha
xchg
mov
xchg
mov
sub
bound
sub
rol
or
test
or
or
loop
sbb
cmc
mov
cmpsl
cmp
push
pusha
xlat
adc
stos
loope
push
cwtl
sub
push
mov
jbe
ja
test
cmp
leave
push
dec
xchg
sbb
scas
leave
or
sarb
xor
cmp
in
stos
inc
fisubs
loope
mov
hlt
fnstcw
push
fstpt
mov
adc
nop
xchg
arpl
insl
xor
cmp
xor
pusha
mov
inc
mov
orb
push
fists
shlb
fsubl
test
add
pop
lcall
xchg
pushf
gs
xchg
xchg
insl
cmp
and
dec
and
xchg
xchg
pop
in
sbb
data16
or
adc
repnz
add
xor
fwait
ret
cmp
bound
mov
jp
lret
lods
movsl
sub
dec
popf
jge
pop
rorl
lods
xchg
out
test
fldcw
jle
sbb
sub
ret
mov
pushf
xor
inc
outsl
pop
movsl
sarl
shrl
popa
or
dec
in
mov
sub
scas
and
dec
ja
test
in
add
mov
or
lret
test
jmp
cs
mov
insb
pop
stc
add
jge
jg
int3
sbb
push
xchg
cmp
mov
enter
lods
mov
jl
dec
sbb
xor
testb
xorb
sub
mov
fs
or
in
mov
dec
movsl
pop
jl
loop
out
sbb
or
imul
inc
and
fcomps
insb
or
stc
dec
sub
inc
dec
cmc
pop
sbb
in
fbstp
pop
sub
pop
adc
mov
mov
pop
cs
add
and
mul
das
xlat
mov
dec
js
add
adc
push
add
add
enter
scas
fs
and
jecxz
insb
mov
mov
pushf
fstl
repnz
ret
popa
cmpb
sti
adc
xor
rorl
iret
and
push
add
rolb
enter
xchg
mov
pop
sub
adc
std
inc
stos
scas
mov
pushf
add
popf
adc
pop
mov
out
mov
int3
adc
and
inc
nop
aaa
mov
jl
cmp
sub
mov
cld
sbb
subb
das
mov
bound
jmp
subb
mov
mov
int
jbe
pop
mov
mov
mov
sbbl
test
adc
jp
cmp
imul
inc
out
pop
and
sbbb
mov
lods
out
push
out
add
call
cltd
clc
sub
sbb
pop
scas
mov
and
insl
or
and
dec
hlt
mov
jns
int
mov
repz
scas
leave
or
aaa
cmp
mov
gs
and
and
hlt
jne
bound
cmpl
fisubrl
sub
call
les
adc
popa
pop
pop
adc
scas
or
mov
nop
push
or
dec
ljmp
xor
mov
push
nop
sahf
lds
les
aam
jg
inc
iret
pushf
call
addr16
xor
mov
in
push
mov
les
dec
mov
and
adc
add
test
xor
mov
and
sbb
pusha
movsl
stos
ja
data16
xor
push
dec
push
enter
pop
es
emms
cld
mov
push
popa
nop
aaa
or
cmp
inc
xchg
pop
out
inc
cld
push
fimull
sub
and
dec
jge
fimull
jmp
add
adc
fists
mov
fdiv
int
fmul
mov
lahf
pop
sarl
push
addl
adc
dec
popw
cmpsl
dec
adc
repnz
inc
lret
and
push
das
sbb
lret
pop
loopne
push
mov
sub
push
rolb
pop
pop
mov
arpl
ljmp
ds
fimuls
pop
iret
popf
or
imul
pop
testb
pushf
jl
pop
fwait
ljmp
shll
jbe
sbb
aam
jg
mov
mov
popa
xchg
xor
cmp
push
xor
outsl
adc
pop
out
mov
lock
add
lods
insl
enter
push
cmp
mov
enter
dec
jmp
lods
mov
xor
pop
lock
jb
mov
pushf
test
dec
adc
xor
cmp
call
or
push
pop
repnz
call
xor
jg
pushw
ret
cltd
or
push
xchg
mov
roll
test
push
pop
imul
dec
jp
mov
sbb
push
test
xchg
ret
xor
pop
xlat
popf
push
mov
in
add
adc
pop
inc
ja
pop
jno
stos
sbb
dec
pushf
inc
fdivrs
icebp
loope
cli
leave
dec
mov
add
aas
scas
adc
or
das
inc
xor
xchg
or
push
pop
cld
mov
dec
into
or
fmuls
jne
enter
inc
outsl
mull
nop
dec
icebp
ja,pn
cld
pop
stos
out
pusha
push
add
out
jb
dec
and
xor
mov
gs
into
test
cli
hlt
push
lret
mov
sub
sbb
xchg
dec
mov
paddusw
fstpt
mov
mov
icebp
push
push
out
aad
movsl
add
and
stos
clc
mov
and
push
mov
sbb
and
daa
sti
add
xor
and
adc
clc
xor
mov
rcll
jae
and
int3
aad
xchg
cmpsb
sub
cmp
icebp
test
mov
rorl
jecxz
pop
enter
push
mov
ffreep
inc
mov
inc
mov
popa
lcall
xorl
ja
sub
fildl
lock
jge
sbb
cmpsl
dec
and
xchg
pushf
mov
jnp
sub
dec
fistpl
xchg
into
sub
push
or
or
out
movsl
or
sbb
mov
mov
push
pop
test
xor
pop
call
lds
ret
dec
add
rcr
cmp
adc
mov
repnz
shl
into
push
adc
shll
push
testl
int
xlat
outsb
xor
enter
sub
loope
jno
repnz
mov
int
inc
cmpl
xchg
or
pop
rolb
dec
and
cmp
jecxz
into
xorb
out
adc
dec
std
out
inc
daa
repz
in
inc
not
mov
jo
xchg
into
test
movsl
mov
test
and
push
lcall
inc
cmp
bound
mov
dec
insb
gs
pop
lretw
ljmp
jmp
stos
out
mov
arpl
aad
push
sahf
and
dec
fsubrs
xchg
jle
and
jbe
jl
inc
loop
sub
ret
mov
mov
inc
aas
lcall
sbb
mov
mov
dec
xchg
vmread
mov
jmp
jb
xorl
mov
jo
fiaddl
jmp
les
push
and
test
jmp
roll
sub
mov
jmp
inc
push
jne
sub
push
movb
xlat
enter
insb
lea
cmpb
sti
mov
faddl
fidivs
push
fnstenv
pop
mov
sub
js
add
mov
outsl
iret
cld
xchg
mov
pusha
sbb
inc
xchg
int
cmp
fisubs
fsts
mov
dec
cmp
fwait
cmpsl
add
popf
lcall
es
mov
into
lods
repz
dec
mov
fld
cmc
xchg
into
pop
fnsave
sub
cmc
jp
std
cmp
mov
mov
push
inc
mov
in
or
add
dec
shlb
pop
test
mov
stc
jl
js
sbb
push
icebp
and
mov
rclb
xor
sbb
imul
or
je
loop
mov
jns
test
or
cmpl
ljmp
mov
rorb
sbb
loop
jmp
or
aam
sub
push
and
push
pop
loope
jb
adc
aad
mov
repnz
mov
add
mov
jge
sbb
mov
pop
test
dec
int
pop
stos
ds
pop
jl
dec
fstpl
lcall
aas
add
rcll
add
cli
dec
fsub
jmp
xlat
and
pop
sub
mov
adc
mov
les
gs
adc
jl
mov
iret
sbb
fdivr
push
lret
sbb
js
sbb
xor
movl
or
cmp
mov
lds
rol
lea
fsubs
inc
sbb
mov
xchg
daa
mull
gs
mov
xor
push
test
jl
sahf
xor
and
loopne
stc
or
mov
inc
es
sub
cli
je
or
aad
xor
popa
lret
inc
push
xor
cmp
call
mov
xchg
or
fwait
sub
sub
and
add
mov
arpl
jno
mov
push
pop
lea
test
icebp
call
xchg
in
and
and
addr16
shlb
add
pop
rclb
push
jl
repnz
testb
shr
lock
or
rclb
lret
repz
sbb
dec
and
cmp
dec
cmp
out
jae
dec
inc
fidivrs
jne
lret
cmp
clc
mov
sub
push
pop
cld
outsb
scas
nop
aam
gs
dec
cmp
in
xchg
add
ljmp
push
sbb
gs
out
test
dec
mov
mov
inc
cmp
xor
push
sub
push
cmpsl
jno
mov
jl
jo
push
out
jecxz
mov
mov
jmp
fdivrp
cmp
dec
out
jns
cmp
xlat
adc
clc
aas
lods
movq
mov
mov
mov
cmp
insl
mov
push
add
add
aam
std
jbe
push
test
mov
xchg
inc
mov
xchg
sub
inc
fwait
out
and
iret
loopne
xor
out
insl
repz
mov
jno
dec
mov
mov
pop
push
fnstenv
xorl
fdivl
pop
jle
lock
test
inc
sahf
sbb
dec
imul
mov
xor
arpl
ret
add
inc
popa
lea
out
repz
mov
call
xor
mov
mov
ror
lods
jb
push
ds
jp
jo
test
inc
sbb
push
ds
adc
subl
or
push
or
mov
or
in
daa
movsb
loopne
ja
rcr
and
pop
js
pop
jbe
xor
jbe
cmp
aaa
push
negb
divb
jge
mov
lret
pop
dec
aad
in
dec
std
iret
jmp
and
loop
imul
scas
fstpt
ffree
pop
sub
cmp
jl
mov
lret
scas
jne
push
mov
mov
xchg
pusha
xor
loopne
repz
dec
adc
or
inc
and
mov
icebp
mov
mov
push
inc
jns
jne
pop
fwait
sub
push
lret
leave
push
mov
add
mov
std
or
repnz
loop
inc
pusha
rep
hlt
add
test
ds
out
ret
out
insb
inc
jne
dec
mov
xor
adc
enter
xchg
popa
inc
or
aad
in
xor
repz
jmp
inc
mov
mov
fbstp
jg
push
jae
xor
je
jecxz
mov
loop
dec
jle
aam
mov
pop
in
mov
nop
rcr
clc
ret
cmc
test
dec
fcmovnb
imul
add
dec
incl
mov
in
push
les
mov
fisubs
aaa
inc
and
jnp
xor
mov
pop
inc
xchg
xchg
jbe
sbb
mov
adc
inc
xchg
outsl
mov
es
xorl
dec
out
dec
xchg
clc
test
jb
inc
cmp
inc
dec
test
rcrl
loop
call
pop
pop
adc
stos
sbb
inc
repnz
cltd
push
incb
mov
jmp
dec
xlat
hlt
push
out
add
sub
stc
push
ja
xchg
xchg
dec
adc
gs
add
mov
repnz
test
and
push
xchg
int3
dec
mov
jecxz
push
imul
loopne
popf
push
mov
stos
ljmp
pop
jg
adc
sarl
dec
jge
pop
lahf
daa
call
ret
pop
pop
jle
inc
mov
fistpll
xor
jmpw
xor
mov
in
into
xor
mov
cmp
lods
cli
xor
in
mov
cmpl
xor
nop
mov
aam
or
fucomi
mov
lahf
testb
push
mov
in
xchg
dec
lds
mov
inc
loop
sbb
xchg
dec
xchg
mov
sub
jno
negl
std
pop
in
movsb
loop
pop
sti
imul
xor
lcall
call
mov
icebp
xchg
fs
pushf
fldt
pop
jg
fidivl
ja
add
int3
in
das
xchg
ficoms
lahf
xchg
lahf
or
inc
out
mov
outsl
mov
add
scas
dec
cltd
jp
shlb
divb
ret
sbb
or
add
dec
hlt
cmp
dec
out
ss
cmp
mov
cli
loopne
ds
or
adc
dec
test
cmp
mov
mov
int
mov
ljmp
ret
fildl
mov
push
push
fisttpll
mov
jno
jle
sbb
mov
lret
mov
pushf
popf
sti
fldl
stos
dec
or
dec
and
iret
std
enter
fildl
sub
div
sbb
pop
imul
test
mov
loopne
lret
mov
and
mov
dec
and
lea
adc
out
jmp
repz
and
loope
jl
ds
aad
or
cmp
xchg
cld
pop
aaa
aad
xor
filds
push
push
mov
jmp
fdivr
aaa
into
insb
or
leave
jmp
subl
pop
sbb
test
sub
push
shlb
jg
imul
inc
pop
adc
push
push
sbb
dec
loope
daa
pop
and
repz
xor
arpl
or
and
mov
xchg
mov
cmp
pop
cmp
adc
aam
sub
dec
xor
push
push
dec
mov
pop
ficompl
mul
pop
xor
sub
popf
jb
xorb
insl
mov
insl
xor
divb
fsubl
xchg
movsl
pop
or
sub
icebp
clc
sysenter
popa
push
jae
mov
jne
and
cmp
or
lret
inc
aaa
aaa
sbbl
sub
je
adc
inc
popa
lods
or
push
outsl
pop
scas
loope
je
pop
ja
push
ret
jle
test
in
or
daa
jmp
add
in
out
aas
mov
pextrw
inc
pop
dec
inc
stc
lds
fmull
int
std
add
xchg
xchg
sub
mov
movsb
push
push
lods
fidivl
gs
inc
das
mov
add
jno
je
jg
cli
bound
pushl
out
les
and
pop
push
jmp
clc
add
cmp
jae
ja
xchg
negl
adc
inc
jbe
jne
mov
push
movsb
push
out
inc
pmaxub
jge
test
adc
subb
xor
xor
xor
sbb
push
or
jp
ds
and
loope
cmp
mov
push
pop
and
ds
push
adc
js
test
or
pop
loope
dec
or
xchg
mov
xor
cmp
mov
in
sub
mulb
push
sbb
xchg
inc
pop
bndldx
jo
push
mov
stos
ja
es
std
testl
fsts
fwait
push
and
pop
jge
into
xor
sbb
push
push
lret
je
cmpsl
es
pusha
andb
sub
lcall
ljmp
sbb
xor
xchg
lea
insb
test
add
inc
jle
mov
lods
int3
stos
cmp
cmpb
dec
push
cmp
and
mov
add
cmp
movsb
pop
dec
jge
fimull
or
jb
sbb
call
hlt
add
cwtl
mov
in
aad
xor
or
loopne
out
xor
lahf
mov
shr
outsb
dec
rorl
xor
flds
pop
fisttps
pop
sbb
jmp
js
popf
mov
or
int3
bound
cld
adc
data16
popa
cmpsl
int
or
push
adc
mov
xor
popf
cltd
mov
xchg
or
movsl
adc
scas
or
lret
imul
daa
dec
cmpsl
orb
pop
cmpsb
dec
xor
jns
subb
and
rcrb
mov
les
loope
dec
push
fiaddl
xchg
repnz
dec
push
fdivrp
mov
imul
negl
dec
enter
or
or
push
push
int
bound
push
inc
loop
and
int3
pushl
mov
dec
test
push
loope
pop
or
adc
shlb
daa
jl
into
ljmp
shl
push
fiadds
jg
std
jle
mov
fsubrl
inc
mov
add
fistps
clc
shlb
adc
icebp
or
stos
js
jmp
mov
out
xchg
movsb
leave
cmpb
mov
add
adc
inc
mov
mov
dec
or
out
loop
pop
in
outsl
in
pusha
shrb
adc
mov
cmp
jp
fistpll
movntq
add
lea
and
mov
lret
sarb
lds
movsb
daa
sub
outsl
pop
jne,pn
inc
dec
dec
imul
pushf
arpl
dec
add
mov
movsl
sahf
addr16
je
out
push
es
xchg
mov
std
stc
sbb
negl
sub
mov
cs
cld
aaa
iret
inc
aaa
int3
ret
roll
pop
mov
fdiv
push
in
iret
movsl
dec
ja
lret
sbb
mov
sbbl
xchg
ret
stos
lock
adc
lret
mov
sarb
movsl
bound
out
inc
jnp
clc
fwait
rol
sbb
sbbb
sbb
icebp
addr16
xlat
out
js
movsb
mov
sub
xorb
in
mov
imul
lea
jo
or
push
mov
pushf
lcall
pop
pusha
addb
push
cmpsl
decl
test
jmp
out
popf
adc
popf
fwait
mov
mov
mov
or
cmp
cwtl
mov
push
fmull
int3
pop
lahf
pop
dec
xor
movsb
sarb
dec
and
push
xlat
fs
sbb
dec
inc
cmp
sub
or
jp
int
adc
loopne
xchg
aaa
mov
mov
ficoms
sub
in
add
jmp
mov
add
mov
push
jmp
jne
lahf
dec
aam
sub
mov
pop
outsb
sbb
sbb
or
push
mov
gs
lret
sbb
mov
sub
xchg
ljmp
sahf
jge
push
xchg
add
stos
jae
pop
dec
sbb
push
adc
loope
and
pop
sbb
jle
repnz
sub
or
mov
cld
jge
aas
jno
scas
mov
mov
insb
xchg
in
cs
jle
xchg
xchg
inc
leave
arpl
dec
jge
cmp
cmc
lahf
push
daa
sub
add
fildll
pushf
jns
lods
imul
pop
mov
in
lret
shl
xor
dec
vmovaps
outsl
mov
jbe
dec
xchg
jmp
pop
into
jo
pop
ret
adc
test
mov
sbb
imul
insb
or
jmp
and
insb
bound
push
rorl
rcrb
cmp
cmpsl
push
test
outsb
shrl
rcr
pop
sbb
test
cmp
std
mov
es
or
adc
fsubr
xchg
cmp
and
aam
pop
jae
fstpt
cmp
test
mov
scas
inc
adc
lcall
movsb
paddw
imul
shll
jmp
push
sub
xchg
push
gs
sets
cmp
or
cmp
and
cmp
scas
mov
jo
imul
stc
push
mov
das
jno
xor
fcoml
sbb
pop
mov
arpl
insb
addr16
imul
stos
mov
lret
add
repz
and
push
mov
hlt
out
xor
lds
je
and
dec
jp
sbb
sub
or
sbb
inc
out
dec
pop
cmp
cli
mov
pop
sub
push
jae
les
sbb
jne
dec
imul
pushf
lea
enter
sub
sub
push
mov
ret
inc
loope
mov
dec
add
aaa
stc
cmp
sbb
xchg
adc
aas
xor
push
ret
jne
pop
rorb
test
clc
popa
xchg
adc
gs
mov
jns
xchg
sbb
les
push
push
mov
push
sbb
adc
ss
dec
and
or
sahf
lock
or
mov
cmp
shll
gs
sti
cwtl
jno
fnsave
mov
cmp
xor
lahf
mov
inc
push
pop
pop
pop
repnz
pop
inc
cmp
xor
sub
pop
xor
lret
inc
pop
pop
pop
adc
sarb
sarl
pop
xor
jne
add
scas
push
mov
jl
movsl
mov
dec
stc
pop
das
mov
mov
mov
hlt
or
pusha
pop
loopne
sub
sarl
mov
dec
mov
decl
dec
sub
enter
std
repnz
sub
mov
pop
outsb
add
loope
sub
stc
pop
sarb
sahf
imul
cmpsl
cmpsb
jnp
sbb
xor
cltd
pop
adc
push
repnz
jl
stc
push
dec
sub
test
nop
shrb
rclb
fstpl
jne
icebp
pop
shr
icebp
adc
xorb
dec
cltd
push
ds
shll
dec
pusha
xor
popf
mov
pop
mov
test
mov
cld
repz
mov
pop
cltd
mov
jg
dec
add
daa
jmp
mov
mov
xchg
xchg
push
rorl
repz
sti
dec
movsl
int
aas
mov
mov
repz
fdivrs
cmp
loop
xchg
call
aam
imul
dec
js
iret
pop
dec
sub
inc
cmp
pop
dec
mov
bnd
mov
arpl
stc
xor
mov
cmp
adc
sub
mov
adc
nop
arpl
sub
xchg
cmp
out
pop
loopne
ror
and
push
and
shll
mov
divb
cmp
push
cld
xlat
clc
push
fisttpl
push
push
and
insb
mov
adc
push
addr16
mov
cmp
andps
mov
inc
cli
push
movsb
sbbb
fistps
fsub
mov
jle
iret
fmuls
pop
add
dec
push
sub
and
bound
push
hlt
roll
ret
popl
hlt
nop
nop
out
adc
movsl
xor
sbb
dec
push
pop
adc
loopne
or
xchg
sbb
xor
sub
popa
sahf
mov
lock
hlt
add
sub
push
shll
mov
add
or
pop
mov
pop
sbb
sbb
js
cltd
enter
push
mov
inc
rcrl
push
and
jbe
xor
mov
dec
and
mov
addr16
rolb
out
push
stos
call
ror
sub
xchg
mov
std
push
dec
adc
mov
out
xorb
mov
push
std
cs
adc
in
cmp
inc
js
stc
and
sahf
imul
xor
mov
jl
sbb
fiaddl
and
or
insl
leave
mov
in
jo
and
xlat
lods
cmc
scas
andb
gs
mov
inc
pushf
pusha
push
xchg
call
daa
dec
jg
jbe
mov
xlat
jne
or
iret
mov
dec
cmpsl
sbb
jns
fs
stos
lock
adc
jle
cmp
out
mov
lret
lcall
int3
loop
insb
insl
outsb
mov
int3
push
ficompl
xor
notl
mov
push
pop
push
push
divl
sub
add
loop
lock
gs
and
or
adc
pushf
adc
push
pop
push
nop
dec
inc
xorb
dec
add
xor
nop
xchg
scas
push
icebp
sub
ret
adc
sub
mov
cmp
inc
mov
ds
and
stos
sbb
jae
jp
xlat
aad
lahf
add
test
lret
dec
push
cmpsb
inc
rorb
pop
pushf
rcrl
mov
push
add
callw
mov
push
xchg
insl
push
push
repnz
inc
mov
mov
mov
dec
popa
daa
and
in
out
mov
mov
dec
dec
push
inc
insb
ja
inc
pop
sbb
inc
xchg
adc
mov
shlb
sbb
js
clc
pusha
fcmovb
jns
dec
sbb
add
or
dec
cmp
push
mov
sarl
les
adc
fs
cld
dec
jns,pt
imul
mov
inc
daa
and
imul
cwtl
cld
cmp
cmp
jge
and
fs
je
dec
lret
outsb
pusha
mov
fnstcw
xchg
das
aas
lods
or
ljmp
mov
dec
aas
jg
loope
outsb
push
xor
ja
lcall
aas
push
push
cmp
pop
rclb
sbb
test
in
in
sub
in
push
add
dec
xchg
sbb
adc
stc
or
insl
jns
dec
icebp
lahf
xchg
rol
pushf
out
xchg
sbb
inc
test
lret
or
xchg
jl
xor
adc
nop
test
rorb
or
stos
add
add
ljmp
iret
stc
shr
mov
push
shll
or
jle
dec
adcb
mov
insb
mov
int3
jecxz
sub
pop
mov
adc
gs
fistl
into
aas
les
movsl
mov
ret
add
xchg
cmp
sub
into
enter
mov
in
idivl
in
cld
std
pop
cmp
inc
stos
sbb
pop
ljmp
repnz
adc
js
jno
in
js
ret
daa
je
bound
dec
dec
xor
outsl
rolb
fs
sub
cmpsb
pusha
sub
sti
pop
inc
mov
aas
stos
or
in
sbb
cmp
or
xlat
aaa
mov
sub
loopne
sub
cli
adc
out
gs
js
out
jmp
adc
push
dec
add
add
aas
and
jp
in
shlb
inc
ds
loop
xchg
push
shl
push
shlb
lea
nop
lock
lds
jo
adc
cmpsl
aaa
mov
movsb
inc
jae
into
mov
mov
sub
cwtl
ror
ds
insl
gs
mov
pop
mov
insl
clc
jno
popa
dec
cltd
pop
cmp
mov
lods
test
dec
or
mov
mov
stos
loopne
cmp
ja
mov
xor
shrd
rcll
addr16
arpl
icebp
sti
and
adc
cmc
cmp
fidivrs
push
mov
mov
shll
das
xor
pop
pop
xor
mov
movsb
jl
jns
fwait
hlt
mov
add
pop
roll
cwtl
push
xchg
sub
and
dec
adc
xlat
adc
cmp
adc
leave
sub
nop
es
sub
sahf
out
arpl
xor
lahf
aaa
jmp
cmp
xor
ficompl
cmpsb
sbb
mov
jnp
and
cwtl
cmp
jb
inc
jge
fdivrl
in
ret
imul
sbb
push
xchg
mull
xor
stos
cmpb
jge
mov
rcr
lods
xor
lret
jbe
or
clc
jg
push
cmp
fdiv
fucom
addl
sbb
or
mov
sbb
push
sub
inc
aas
je
push
lret
lock
insl
shll
sbb
movsl
pop
clc
outsb
xor
fwait
lret
pop
adc
add
sbb
outsl
dec
jb
lret
cmp
sub
xor
xor
mov
loope
stc
inc
lds
fdivrl
test
lock
add
divl
sbb
icebp
lods
popf
in
or
loope
lods
add
xchg
xor
div
dec
adc
lret
xchg
or
dec
jle
inc
add
sub
int
sar
inc
out
mov
int
cmp
push
insl
out
and
mov
xor
mov
xchg
mov
aas
imul
or
or
cli
xchg
hlt
orb
cmp
out
mov
adc
out
push
jecxz
mov
sub
jp
stos
or
sbb
jo
add
out
sbb
sub
sub
inc
inc
jl
and
insb
hlt
xlat
bound
outsb
sbb
icebp
gs
cmpsl
cltd
fstps
pushf
xor
dec
mov
mov
or
outsb
mov
sbb
jnp
inc
clc
sub
xchg
cmpsl
jne
push
jne
imul
and
loopne
pop
mov
repz
pusha
stc
adcl
icebp
adc
hlt
je
add
or
mov
pop
cmp
fcmovne
xchg
xlat
ja
dec
inc
or
jae
addl
repz
inc
inc
hlt
mov
int3
lods
push
mov
mov
dec
cmpsl
xchg
pop
sbb
stc
pop
imul
xor
add
sub
or
sahf
and
out
cmpsb
inc
inc
xor
add
lcall
jge
pop
sbb
push
int3
pop
dec
mov
out
into
test
lods
pop
fisubl
lret
aas
push
jne
push
in
movsb
cmpsb
stos
testl
xor
jg
je
mov
mov
lret
jne
int
leave
dec
sbb
mov
mov
sub
lds
adc
mov
fstl
inc
cmpsb
mov
lcall
inc
jns
outsl
rcl
ficompl
mov
add
push
mov
in
push
movsl
mov
mov
lret
call
ljmp
mov
idiv
mov
lea
test
repz
jno
pop
xchg
enter
iret
cmp
shlb
inc
cmp
mov
jb
aas
pop
pop
icebp
lret
pushf
xor
ss
enter
subb
xor
scas
lret
cld
das
mov
in
sub
inc
adc
inc
sub
sbb
arpl
sahf
sbb
pop
pop
cmp
dec
sti
mov
shrl
xchg
pop
ret
outsb
out
push
leave
push
sti
jne
dec
into
mov
ss
push
or
out
test
push
repnz
addr16
mov
jbe
and
fstpt
call
mov
dec
push
mov
xor
imul
xchg
fistpl
jae
add
pop
mov
or
rol
dec
lahf
jno
xchg
adc
fisubl
rcll
jecxz
in
das
jecxz
enter
cmp
xor
subl
addr16
sub
adc
sbbl
cmc
test
push
das
dec
cmc
xor
mov
sub
jo
out
sbb
mov
pusha
or
bound
shl
aam
pop
in
fidivrl
repz
dec
mov
xchg
pop
push
xchg
loope
add
xor
sbb
cmp
repz
int3
dec
mov
mov
xchg
pop
mov
cmp
cltd
dec
adc
inc
outsb
push
pop
stos
dec
jecxz
pop
sbb
dec
jl
sbb
push
scas
mov
mov
movsl
lahf
movsl
and
popf
pop
cmp
mov
adcb
or
mov
movhps
dec
push
hlt
or
and
movsl
jge
stc
cli
jmp
pop
sarb
mov
lcall
or
cmc
or
stc
sbbl
sub
divb
scas
mov
sub
xchg
pop
vmovsd
aam
setnp
pusha
call
daa
hlt
xchg
mov
popf
in
sub
push
xlat
sub
cwtl
clc
jns
mov
push
lahf
mov
add
out
or
jnp
test
push
inc
cmp
int3
call
dec
test
xchg
push
fsubs
xchg
and
cmpsl
in
mulb
ljmp
xor
cmp
jno
jmp
push
pop
lds
ljmp
pusha
fisttps
xchg
lcall
jg
cmp
jg
ljmp
push
mov
mov
js
inc
sub
jp
push
lods
push
push
mov
fwait
inc
sbb
add
cmp
xor
scas
stos
clc
out
fistps
add
lret
pop
pop
adc
in
cmpsb
test
aam
mov
sub
cmp
xor
mov
mov
adc
mov
xchg
pop
ljmp
adc
sbbb
xchg
out
ret
inc
scas
lahf
mov
mov
adc
cs
std
jmp
sub
pop
out
jmp
movsl
sbb
mov
lock
push
testb
mov
negb
out
je
sub
dec
iret
es
push
push
cmp
out
loop
popf
adc
dec
xor
dec
xchg
xor
xor
sarl
mov
jbe
cmpsb
fdivl
xchg
jl
js
push
insl
dec
loopne
cmpsl
ret
inc
push
push
xor
outsb
cltd
mov
mov
dec
jecxz
dec
dec
xor
jbe
jl
in
imul
cmp
cwtl
sbb
inc
pusha
cmc
and
jl
pop
int3
jo
jb
in
in
inc
insl
xor
mov
sbb
push
pop
add
inc
or
sahf
pop
jge
testb
outsb
mov
cmp
lock
enter
pusha
mov
mov
hlt
xchg
insl
pop
aam
xchg
stos
fldl2e
test
call
xchg
adc
cmp
shll
mov
bound
std
or
fwait
dec
std
adc
leave
pop
mov
popf
nop
add
mov
mov
es
add
sbb
fisttpl
add
sub
push
lods
pusha
push
jns
fwait
mov
jbe
or
push
arpl
stos
mov
sbb
scas
xlat
outsl
xor
mov
or
call
mov
fmulp
push
add
jae
add
push
mov
jmp
add
pop
sbb
xchg
leave
cmpsb
gs
ja
pop
loop
mov
jo
mov
andb
xor
dec
je
stos
test
xchg
sbbl
inc
xchg
push
in
nop
imul
mov
and
fildll
lock
sbb
cmp
sbbl
lret
pusha
adc
cmp
and
xchg
mov
mov
sbb
add
out
mov
jl
mov
mov
pop
call
fmuls
inc
sub
adc
icebp
xor
int
adc
cmpsl
xchg
lock
dec
jb,pn
lret
sahf
and
and
pusha
test
sbb
sarb
jo
xchg
mov
pop
sub
xor
iret
push
repz
aam
mov
jnp
mov
mov
jle
push
or
clc
mov
mov
outsb
mov
rorb
out
add
sarb
sbb
mov
in
mov
scas
std
sbb
rcrb
sti
mov
xlat
xchg
jge
xor
inc
lds
or
mov
or
jae
das
jg
xchg
sub
int3
sbb
pushf
sub
mov
or
mov
inc
cwtl
stos
out
outsl
mov
dec
sub
mov
push
sub
div
in
inc
mov
enter
sbb
mov
jb
aam
push
int3
lods
dec
or
xor
sub
push
sbb
lret
stc
xor
push
imulb
or
jns
daa
das
mov
dec
fimull
lcall
sub
adc
jns
jnp
sbb
sbb
aad
push
inc
rolb
mov
leave
es
jmp
cmp
call
push
jecxz
pop
test
pop
jne
fidivrl
xchg
xor
test
sbb
out
leave
rcrb
cmp
test
xchg
inc
mov
lret
fldl
inc
push
xlat
inc
fbstp
dec
mov
in
test
fdiv
ror
or
cmp
rclb
cmp
adc
mov
int
cmpsb
mov
outsb
adc
sbb
xlat
pop
fisttpll
or
popf
insb
je
jl
lods
jne
cmp
mov
pop
add
negl
and
xchg
mov
repnz
xchg
cmc
mov
xor
rclb
and
fs
cmp
cld
inc
repz
jl
jns
loopne
daa
mov
movsl
dec
ja
adc
fnstsw
lock
subb
pusha
jge
jp
lods
push
cmpsl
scas
sub
test
or
pop
xor
cmp
hlt
scas
cmp
jp
mov
stos
stc
int
sub
imul
xchg
mov
adc
cwtl
jb
jno
aaa
arpl
js
out
mov
shrl
inc
pop
xor
dec
stos
pop
sub
jle
ss
push
inc
xchg
adc
mov
or
jne
loopne
and
fwait
inc
pop
mov
movsb
jge
ds
arpl
and
add
cltd
jo
pushf
push
out
icebp
sti
jnp
enter
popa
mov
dec
gs
loopne
mov
or
mov
jnp
lods
cmp
icebp
cwtl
in
jb
jnp
mov
mov
rcrl
sub
lods
cmp
daa
outsl
in
pop
imul
add
adc
movsb
dec
cmpsb
fsubrp
jmp
cmp
out
or
subl
sbb
into
out
in
jo
lods
xor
cwtl
fdivr
out
xchg
dec
out
dec
push
loop
jo
dec
ror
jns
cmp
jp
jnp
and
pusha
popa
fldl
or
sahf
ss
fninit
pop
push
push
add
sbb
adc
lods
das
push
fdivl
xor
push
lcall
mov
dec
mov
ljmp
lcall
sub
inc
jnp
push
sarl
pop
fldcw
outsb
adc
mov
add
mov
movsl
icebp
arpl
lret
rcrl
enter
xor
sub
repz
lea
adc
mov
adc
scas
inc
jg
mov
or
ret
inc
jbe
call
repnz
cmp
ljmp
push
sub
push
les
jecxz
mov
enter
lahf
cltd
inc
outsl
pop
outsl
sbb
js
scas
or
call
mov
xor
pop
in
mov
imul
icebp
cmp
daa
clc
lds
or
mov
outsb
insb
adc
out
jle
loop
xchg
push
enter
mov
in
and
lds
add
cmpb
xchg
push
mov
cmp
push
push
sahf
mov
sub
jbe
imul
sub
xchg
jle
pop
pop
sub
pop
movsb
in
cmpsl
loope
out
mov
add
and
fwait
push
dec
dec
xchg
ljmp
mov
mov
cltd
loop
scas
jp
pop
xchg
loop
jle
stc
add
and
lret
push
xchg
xor
or
mov
pop
cmp
cmp
adc
push
in
xor
aam
push
andps
xchg
jb
add
jae
in
out
scas
test
popf
or
shll
jmp
mov
ss
lcall
enter
movsl
dec
pusha
loop
pop
adc
ja
and
xchg
push
inc
mov
and
dec
mov
das
imul
loope
out
mov
das
inc
stos
shlb
sbb
mov
faddl
sti
movsb
test
lret
inc
xchg
xor
shrb
adc
mov
xchg
mov
push
xorl
sbb
pusha
sti
cltd
pop
shrl
push
repz
clc
xchg
nop
mov
xchg
push
test
pop
sbb
push
pop
jb
aam
imul
push
fucom
cmp
mov
fistl
jb
or
lret
cmp
movsl
fldcw
xchg
pop
ret
shl
lahf
and
cmp
xlat
stos
ja
js
push
cmpsb
dec
ss
xchg
lahf
mov
xchg
push
or
leave
push
andl
fs
outsb
or
cltd
xor
call
mov
mov
sub
inc
pushf
push
icebp
jne
les
mov
aam
mov
repnz
cmc
test
dec
xchg
jg
pop
rcr
fisubrs
ds
test
pop
sbb
inc
jae
xchg
in
xchg
fimull
aad
add
leave
inc
push
pop
jmp
mov
in
and
clc
sbb
or
adc
or
push
popa
mov
push
cmp
leave
loope
push
movsb
xor
cmp
jb
in
jle
cmpsb
jecxz
cmpl
lods
into
xlat
icebp
cmp
inc
fwait
jmp
xor
lret
repz
pop
sarl
push
stos
repz
and
add
out
jp
shll
arpl
pop
pushf
fwait
hlt
or
and
mov
and
lods
jg
mov
movsb
xchg
loop
lahf
mov
shr
mov
out
out
mov
push
jle
mov
mov
lods
sbb
aaa
add
out
add
mov
das
sahf
xchg
cltd
icebp
cmpsl
add
mov
call
fdivl
dec
lods
js
or
ds
xchg
add
dec
and
loope
popf
cmpsb
imul
cmp
inc
loopne
mov
pop
stos
adc
sub
loope
divl
mov
cwtl
jb
ss
outsb
imull
adc
push
cmp
aad
mov
cmpsb
xchg
cli
fld
cmpsb
fcmovnu
test
lret
mov
out
xchg
in
ds
sbb
cs
cld
cmp
xchg
mov
clc
aad
inc
lcall
ja
sub
rolb
adc
add
fimull
test
loopne
push
cli
jae
movsb
add
insb
mov
cmpsb
sbb
add
fmull
pushf
test
mov
mov
pop
mov
bound
data16
pop
cld
sub
jae
pop
aam
adc
sub
cmp
sub
pop
ret
cmp
in
adc
inc
mov
xchg
out
fadds
dec
and
sbb
sidtl
push
ret
imul
mov
jb
subb
push
cli
test
jge
les
es
xor
jge
cmp
adc
push
push
movsl
mov
sub
cwtl
lds
xchg
or
jnp
xchg
jnp
int
fs
or
lods
out
fistpl
ret
push
jle
xchg
mov
sub
mov
ds
and
out
xor
add
sub
out
jl
push
or
cli
pop
aad
lcall
divb
cmpsb
loope
xchg
fs
push
pop
xchg
divl
pop
xchg
xchg
lret
mov
rclb
cmp
and
pushf
push
sbb
js
pop
push
xchg
mov
cmp
or
xchg
scas
pop
add
jle
pushf
add
cmpsb
xchg
outsl
adc
dec
inc
jo
call
jecxz
aad
cmp
cld
xchg
and
push
movsl
inc
fdivrs
xchg
shlb
push
out
mov
inc
aam
rorb
mov
lahf
mul
adc
or
movsl
test
imul
lock
or
jmp
gs
fisttpll
mov
push
mov
cwtl
push
jmp
mov
inc
out
fsub
loop
fcmovb
adc
cs
ret
push
addr16
and
adc
push
mov
mov
push
mov
add
mov
and
lcall
lret
xchg
sub
sub
fimull
rcrl
xchg
sub
pop
sbb
pop
in
push
fisubrs
jne
das
jb
je
in
xchg
aam
fwait
push
adc
mov
adc
pop
mov
movsl
fisubrs
xchg
lret
cmpsb
inc
cmp
insl
mov
sub
mov
popa
fdivl
aam
jbe
in
ljmp
sub
fwait
sub
je
sbb
aaa
cwtl
add
test
jge
lret
or
cwtl
pop
push
xchg
inc
iret
pop
jmp
inc
fists
sbb
jo
cwtl
mull
js
test
rcrb
int
aam
xchg
repz
dec
push
scas
sbb
jge
push
adcb
rorl
je
inc
fisttpl
leave
push
push
mov
addb
int
movsl
dec
out
aas
add
out
std
push
lcall
mov
and
or
mov
pop
jg
pop
adc
jg
ficoms
cli
mov
jg
leave
mov
mov
sub
cmp
push
jge
out
add
stos
jae
add
jecxz
cmp
hlt
and
adc
dec
scas
mov
mov
mov
push
push
and
jp
pop
push
add
sub
loop
insb
aaa
sbb
aaa
mov
mov
pop
xlat
add
sub
lds
iret
xchg
out
jle
sub
mov
incb
mov
imul
mov
sti
ja
out
jb
push
xchg
dec
and
mov
mov
xchg
shrl
mov
jg
fistl
outsb
movsb
jmp
mov
nop
test
imul
leave
and
xchg
push
mov
cmpsb
jp
adc
bound
andl
mov
out
out
sbb
inc
adc
popl
cwtl
and
fisttpll
add
sub
sbb
and
pop
in
mov
out
lret
mov
xchg
ja
movmskps
mov
push
dec
pusha
ja
add
jo
rorb
lahf
sti
imul
push
fisttps
lret
push
repnz
mov
dec
dec
shrb
and
insb
push
xchg
xchg
aam
call
arpl
cltd
xchg
push
movsb
in
pop
mov
loopne
xchg
xchg
xchg
and
scas
stc
out
sub
jge
ret
sbb
outsb
filds
cmp
push
in
stos
push
xor
std
and
jp
cmpsl
mov
fadds
popa
stos
inc
push
push
into
push
pop
clc
jbe
popf
je
pusha
ss
mov
mov
je
mov
xchg
inc
repnz
inc
orl
loope
mov
pop
sub
ja
lea
jns
setnp
sarl
mov
addr16
rorl
fists
push
inc
adc
adc
insb
xchg
into
sbb
popa
fs
adc
sbb
orb
in
stos
movsb
int
adc
sub
mov
jae
lcall
and
scas
mov
jmp
inc
sbb
jae
jno
sbb
fs
dec
sar
rorb
jne
and
rolb
dec
cmp
daa
into
fimull
pop
inc
std
cmpsl
pushf
or
jbe
aaa
test
test
jnp
push
bound
inc
xor
fwait
and
mov
fidivl
pop
sahf
push
loope
les
popa
repnz
test
jb
outsl
sub
add
sub
xlat
in
outsb
iret
sahf
pop
inc
xor
andb
es
sbbb
dec
sub
jno
arpl
push
cmp
sbb
rcrl
sub
mov
int
std
sbb
bound
mov
or
sub
in
cltd
gs
loopne
dec
cmpb
ja
and
pop
sti
cs
jae
dec
icebp
aaa
add
cmpsb
dec
loop
icebp
mov
scas
lret
xchg
mov
lock
add
push
aaa
mov
int3
xchg
jge
push
pop
addl
lods
lock
cmpsb
sbb
or
in
push
and
pop
ja
or
test
fdivrl
scas
jl
imul
scas
into
test
cmp
push
sub
adc
pop
and
push
cmp
stc
jo
int
push
cmc
mov
into
pushw
or
pop
lcall
loope
pop
mov
fwait
cmp
std
mov
add
push
lret
in
dec
inc
loope
in
pop
call
push
jno
xor
aam
int3
lcall
pop
adc
xchg
lods
stos
push
in
push
dec
mov
or
sub
push
aad
jg
lods
cmp
jge
stos
dec
imull
fwait
xor
sub
xchg
adc
mov
cltd
mov
rcl
cmpsb
push
fwait
and
pop
jne
cmp
lods
lret
movb
sub
jl
cmp
sti
cmp
adc
shll
js
pop
int
jno
cwtl
pop
shll
adc
xchg
ret
cmp
mov
push
dec
mov
push
jl
xchg
pusha
push
int
mov
xchg
push
jbe
notl
icebp
lret
cwtl
je
cltd
out
adc
cmp
aam
dec
adc
repz
inc
mov
ss
pop
mov
ret
ljmp
std
stos
xor
rclb
jp
aam
popf
mov
lret
pop
scas
jae
rcrl
dec
sbb
jmp
jns
cli
daa
or
insb
or
mov
loopne
jae
stos
push
jno
leave
add
jbe
dec
stos
cwtl
out
bound
pop
pop
pop
dec
mov
sub
mov
clc
loop
xor
inc
out
sbbl
push
pop
arpl
pop
mov
lea
fsts
lock
pop
add
mov
xchg
jo
and
call
adc
sub
xchg
add
push
lea
inc
or
into
cmp
sub
push
out
xchg
sbb
push
xor
ljmp
add
xor
jecxz
mov
inc
sbb
pop
sub
popf
fldcw
jns
xchg
inc
testl
push
push
push
scas
xchg
xchg
pop
adcb
call
ficoms
es
cmpsl
not
pop
cmp
loope
cs
xchg
jge
push
orl
ret
ret
mov
sub
test
lock
pusha
mov
popf
push
pop
jns
xor
adcb
imul
dec
inc
icebp
push
push
push
imul
pop
aaa
or
pop
outsl
and
pop
jmp
sub
ss
and
gs
mov
push
call
xchg
lret
js,pn
in
repz
jae
in
dec
shl
inc
lmsw
sub
sti
imul
pop
push
inc
int3
mov
hlt
int
rorl
lods
or
jge
add
stos
jg
jnp
push
fisttpll
filds
imulb
sub
and
aas
xchg
es
push
sti
add
xchg
pop
ret
adc
mov
ficoms
movsb
fisttpll
sub
jne
imul
lret
push
sbb
ja
movsb
fidivs
cmp
mov
adc
xor
lret
aad
jle
sub
out
sbb
sbb
inc
icebp
ret
movsl
mov
cmp
popa
cli
test
or
xor
rcrb
pop
mov
and
xor
push
out
dec
lret
inc
dec
cmpsb
stc
sbb
imul
lea
mov
inc
pop
xchg
mov
mov
mov
test
or
enter
insb
dec
add
icebp
out
dec
or
xor
std
or
fsubs
lods
imull
inc
repz
aad
mov
negb
test
loopne
mov
bound
popf
cwtl
inc
mov
sbb
outsl
xchg
dec
lods
mov
cld
shll
jecxz
or
sub
mov
fs
js
pop
push
test
adc
sub
sbb
lea
out
and
adc
data16
daa
jmp
ret
inc
jne
mov
dec
add
or
sbb
ss
pushf
sub
pop
inc
pop
psubq
xor
fsub
mov
xchg
jo
loope
push
push
aaa
pop
or
aas
bound
ret
sub
fnstenv
fidivl
rolb
dec
stos
out
xchg
push
sub
lds
xchg
lcall
into
loope
push
mov
ljmp
adc
sub
pop
cmp
cs
xor
mov
lea
adc
fiaddl
clc
dec
popl
or
testb
or
jecxz
mov
jb
jo
mov
lcall
popf
dec
movsb
in
dec
jmp
sub
jae
cmp
mov
cwtl
test
mov
and
sbb
add
in
arpl
stc
jnp
mov
popf
push
iret
icebp
sbb
pusha
inc
or
hlt
xchg
out
push
mov
in
shl
aad
cs
test
in
push
data16
insl
inc
xor
pop
pusha
and
ret
inc
leave
push
sbb
jo
jae
push
jp
xlat
mov
or
xchg
xchg
test
add
xchg
cmpsl
cmp
pcmpgtw
add
mov
pop
jmp
cmp
mov
repz
jb
out
loop
pop
aad
pop
cmp
dec
mov
mov
adc
cmpsb
mov
sbbb
rcll
mov
out
idiv
popa
out
mov
xchg
mov
lea
pushl
aam
scas
int
shlb
dec
add
pop
jae
cltd
mov
xchg
rorb
cltd
movsb
pop
ret
add
inc
jecxz
insb
pop
jmp
sub
sub
inc
pop
in
scas
push
mov
fnsave
and
out
sbb
cmp
fwait
xor
mov
and
das
mov
mov
add
sbb
xchg
test
adc
inc
loop
push
sbbl
dec
cli
xchg
js
mov
lods
mov
mov
std
push
or
mov
dec
les
mov
jne
fildll
fnstenv
aam
sti
add
xchg
jbe
sub
pop
les
dec
mov
fsts
add
sub
xor
jle
xchg
in
leave
shlb
xor
outsl
pop
inc
outsl
je
jnp
dec
add
cmp
inc
pop
push
cmpsb
xchg
call
aaa
inc
aad
imul
inc
bound
movsl
dec
mov
lods
mov
hlt
ficoml
andb
popf
in
and
in
es
jl
pop
inc
mov
sub
mov
test
jmp
pop
aaa
jne
mov
imul
dec
mov
xchg
subl
or
jns
mov
adc
xchg
push
repz
into
sbb
xor
pop
add
rolb
iret
nop
sbb
xchg
loop
fcmovbe
pop
pusha
push
pop
popa
sti
js
lock
mov
lcall
sub
dec
aad
es
inc
push
mov
add
test
inc
mov
ljmp
jb
push
mov
lods
xchg
fbstp
jmp
and
mov
cmp
or
imul
mov
push
stos
xchg
aaa
inc
ret
stos
shrb
pusha
dec
mov
sbb
les
mov
push
lahf
shll
lock
push
dec
or
lds
sbb
stos
adc
pop
xchg
je
stos
daa
test
push
aam
mov
mov
divl
mov
push
fwait
std
inc
mov
ret
lret
scas
sub
rcrl
cs
dec
idivl
mov
test
sub
idivb
pop
lods
gs
sub
out
scas
aam
icebp
das
lret
je
mov
lods
or
inc
dec
int3
in
pop
cmc
out
xor
xchg
fiaddl
or
fwait
or
adc
jmp
aad
sti
sahf
imul
pusha
mov
dec
mov
mov
nop
pusha
stos
cmp
in
daa
cmp
sbb
add
mov
dec
or
xchg
cmp
pop
aam
sub
or
test
subb
push
push
add
sbb
jecxz
pop
shrl
push
and
cmpsb
jae
cmp
mov
sbb
and
jecxz
inc
out
xor
loop
cmp
shrl
pop
imul
and
divl
loope
push
xchg
shll
push
mov
jne
addr16
andl
sub
xchg
in
mov
or
pop
out
insb
pop
popa
cmpsl
mov
and
lret
movsl
std
cli
add
mov
inc
in
mov
pusha
sbbb
bound
push
std
cwtl
fildll
aaa
stos
lea
test
sub
sbb
aas
stos
jge
es
mov
stos
fldl
push
push
add
sahf
aam
jae
fnstsw
rcrl
stos
movsb
pop
sub
lods
cmp
test
mov
mov
mov
adc
push
sbb
adc
push
out
push
xchg
fwait
daa
ljmp
enter
scas
or
xchg
mov
xchg
sub
inc
dec
jno
add
mov
jbe
sbb
data16
jl
push
lods
in
xor
stos
jp
jge
dec
out
test
aam
inc
fsubp
jnp
jo
sbb
dec
insb
jmp
pop
std
jno
xchg
or
aam
sbbb
lahf
movsb
xor
shr
push
dec
mov
xor
sbbl
add
fwait
popa
cmpsb
test
dec
rorb
fsubrl
mov
mov
insb
jg
dec
and
mov
xchg
jne
cmc
loop
movsb
into
scas
fisubrl
add
dec
popa
loope
iret
jne
cltd
ds
fdivl
idivb
xchg
mov
push
xlat
ljmp
xor
jbe
pop
cltd
int
mov
xor
dec
aaa
mov
inc
mov
add
and
pop
std
fldl
and
cmp
jp
loope
dec
xor
pop
push
inc
jbe
sub
scas
roll
pop
das
add
or
enter
or
rcrb
pushf
cmc
movsl
lcall
rclb
les
sbb
sub
inc
test
lret
dec
sbb
xor
fcomp
and
dec
cs
pop
mov
ret
cli
inc
insb
fcmove
jge
subb
aaa
mov
cltd
faddl
push
int3
mov
loope
push
lahf
jnp
int
lcall
notl
scas
insl
sub
inc
xlat
movsl
dec
adc
imul
dec
mov
pop
xchg
inc
mov
mov
int3
fcoml
lret
rol
clc
cmp
jbe
daa
in
popa
cli
jnp
arpl
xlat
pop
add
adc
es
mov
cmp
cltd
push
sbb
inc
add
sar
popf
jnp
push
inc
in
fcompl
test
or
fdivrs
xchg
cmc
fcmovnbe
lods
cmp
scas
pushf
imul
xchg
inc
xchg
orl
cli
mov
in
push
and
inc
mov
sub
dec
roll
loopne
xchg
ror
cli
and
push
mov
xor
cmc
inc
gs
mov
push
xadd
cmp
repz
enter
sub
js
mov
add
cs
dec
adc
mov
or
adc
outsb
ja
or
mov
sub
and
and
push
pop
out
cs
sbb
sarb
push
popf
fcoms
mov
add
jae
add
sbb
gs
xchg
test
insl
fs
xor
jg
adc
sub
fdivl
cmpsl
ljmp
pop
sbb
xchg
ret
or
cmp
or
rclb
cmpsb
leave
jbe
scas
jae
enter
les
dec
mov
xchg
jp
std
cmp
cmc
stos
mov
jmp
rclb
insl
daa
jne
je
mov
hlt
or
rorb
stos
out
inc
cmp
pop
xor
out
add
fldt
sub
xor
jmp
sub
cmpb
test
or
or
adc
fdivs
xchg
mov
push
js
or
jp
cwtl
push
mov
fcmovnb
test
mov
scas
lcall
das
scas
jae
mov
movsl
lahf
mov
testl
in
ret
mov
mov
cmp
outsl
mov
jg
pop
sarb
in
pop
pop
js
in
ljmp
mov
or
mov
xor
push
pop
cmp
cmpb
push
cmpsb
aad
xchg
dec
ret
addr16
and
and
xchg
es
pandn
mov
sti
xor
je
scas
sub
lea
cmpsb
jmp
cmp
incb
cwtl
ds
add
or
mov
push
sub
pop
pop
mov
pusha
inc
xchg
hlt
pushf
jg,pt
loop
loope
jbe
cmp
scas
add
in
inc
mov
cmpsb
or
leave
iret
xchg
cmovp
outsb
nop
ficomps
sbb
mov
jnp
dec
add
repnz
test
ds
inc
cltd
mov
es
fdivrs
daa
test
fs
loop
test
into
es
dec
mov
ljmp
mov
push
loopne
jno
test
addb
shr
pop
lret
ss
jl
inc
cmp
addr16
or
imul
enter
les
push
jle
scas
insb
mov
repz
bnd
sbb
in
and
push
pop
sbb
scas
xchg
cmp
jbe
js
mov
push
testl
loope
out
hlt
and
dec
pop
inc
pop
dec
out
cmp
sbb
movsl
data16
mov
dec
cwtl
lahf
pop
adc
adc
inc
mov
into
jno
xchg
xchg
mov
mov
xchg
in
mov
stos
mov
or
aad
xlat
pop
jb
add
fnstcw
loope
das
sub
movsl
js
push
movsb
sbb
popf
cli
xchg
enter
mov
loop
std
in
cmp
je
jle
adcb
pop
aas
mov
pop
mov
insl
dec
je
push
stos
test
adc
adc
sub
and
push
adc
jnp
and
rcl
mov
mov
fistpll
out
scas
test
lcall
popa
loop
in
leave
shrb
mov
rorl
xchg
xchg
enter
clc
or
icebp
xor
insb
add
inc
jle
cwtl
addr16
je
popa
push
dec
or
icebp
push
mov
mov
gs
enter
pusha
push
jle
dec
arpl
in
aad
js
xchg
xchg
jne
mov
addr16
aas
mov
mov
adc
enter
sub
and
lret
xor
jns
jne
fwait
es
addl
or
pusha
cmpsl
push
push
repz
cmc
hlt
and
push
adc
imul
sarb
js
fidivs
out
sahf
adc
sti
push
xor
xor
ljmp
in
cmpsb
out
mov
adc
je
aas
and
push
pop
clc
sarb
push
sub
mov
aas
cmp
adc
idivb
and
inc
aam
xchg
adc
inc
push
inc
mov
or
jg
mov
pushf
aad
mov
mov
clc
xchg
out
add
jne
sub
repnz
inc
out
cmpsl
rclb
mov
sub
or
mov
popa
mov
dec
mov
fs
or
jns
imul
daa
aas
mov
ss
jg
lock
inc
loope
adc
fdivp
inc
test
rclb
cmp
ss
mov
pop
mov
jbe
mov
out
cltd
mov
call
mov
xor
push
cli
es
cld
xor
enter
sbb
xchg
push
xchg
mov
cmp
push
cld
mov
ret
inc
jmp
sub
mov
sub
aaa
cmpsb
dec
and
add
or
inc
clc
xchg
lds
pop
stc
int3
inc
popf
push
jmp
inc
xchg
add
lock
jmp
fsubr
es
lea
je
sbbb
pushf
test
mov
ds
mov
sub
jge
dec
pop
adc
adc
aad
or
in
add
mov
pusha
ljmp
popf
iret
call
out
sub
call
push
out
inc
pop
fstl
cmpsb
jg
fisubrl
sbb
jne
mov
enter
cmpsl
shll
cmp
popa
lcall
lea
decb
jbe,pt
mov
clc
mov
lret
pop
mov
or
fs
clc
dec
inc
stc
das
add
jns
call
push
dec
and
loopne
data16
adc
dec
test
fsubs
in
sub
xlat
xchg
inc
stc
mov
dec
jb
pop
enter
incl
test
outsb
push
fcoml
adc
ret
fwait
jb
push
cmp
filds
sti
xor
mov
scas
mov
push
sub
pushf
clc
push
loop
in
push
pop
movsl
cli
inc
les
stos
ljmp
mov
pop
jb
and
fs
lods
lret
mov
cmpsb
lods
sbb
xchg
push
xchg
mov
dec
lock
sbb
pop
jle
fcomip
add
std
rcrl
mov
lea
imul
stc
bound
outsb
leave
dec
mov
xchg
xchg
data16
mov
mov
and
scas
pop
test
cmpsl
xor
repnz
fsubl
mov
sub
shlb
adc
mov
adc
dec
xchg
adc
pop
lcall
jo
add
and
js
popf
cmc
jg
sub
stos
cld
xchg
out
test
mov
es
pop
fldl
mov
xchg
repz
test
xchg
xchg
lret
jecxz
out
xchg
and
inc
lcall
xor
pusha
ss
jp
lods
mov
rolb
cld
dec
xchg
xlat
sbb
jg
mov
push
jge
push
mov
pop
mov
push
sub
ficoms
lea
inc
pop
adc
cmpsb
jb
mov
push
or
testl
mov
push
jne
addb
sti
aaa
lret
into
daa
and
xor
sbb
je
iret
je
pushl
dec
jmp
les
call
adc
mov
inc
cmp
fs
jae
js
icebp
xor
cs
cmpsl
cmp
mov
or
fwait
das
ret
mov
js
mov
fwait
sbbb
pop
out
mov
add
out
dec
call
sub
sub
push
dec
mov
xor
shl
mov
fnstcw
lods
sbb
pop
jg
mov
dec
and
dec
rcll
ja
push
fcomi
xor
sbb
pop
mov
aas
shlb
mov
jo
out
movsb
subb
push
or
sbb
clc
int3
pop
adc
test
js
orl
clc
stc
and
or
mov
jmp
shrb
mov
and
sbb
addr16
or
sub
out
movl
adc
cltd
and
ljmp
xor
rcl
mov
hlt
stos
push
mov
stc
test
jecxz
adc
ljmp
mov
adc
xor
mov
or
nop
les
mov
inc
nop
rcll
sbb
leave
inc
fs
insl
mov
scas
mov
jae
mov
cmp
lret
scas
shlb
pop
jb
xchg
enter
cltd
add
arpl
cmp
or
gs
xchg
sub
movsb
inc
jmp
sbb
in
mov
and
jnp
xor
jo
ret
mov
pusha
divl
outsl
push
or
popa
out
mov
mov
jp
fsubrs
mov
inc
ljmp
push
add
iret
cmp
sbbl
adc
push
cmp
pop
popa
add
aad
mov
or
test
push
pop
pop
adc
aaa
test
dec
lods
mov
jge
js
push
xchg
scas
imul
xor
sub
notl
mov
and
lods
sub
jb
popf
pop
imul
push
pop
cltd
lret
dec
in
pop
fcomi
insb
push
shll
mov
inc
aam
shr
mov
push
mov
jnp
sub
mov
sub
imul
ret
add
push
sbb
lea
adc
fcomps
rol
test
jl
les
xor
inc
enter
stos
push
js
mov
jl
insb
inc
push
sub
pop
jp
imul
dec
outsb
in
sbb
dec
mov
mov
jmp
lock
lods
sub
xlat
leave
push
pop
mov
cld
push
xchg
mov
cmp
sbb
add
and
sbb
xor
mov
mov
daa
dec
lods
lahf
and
jns
sbb
xchg
bound
or
add
or
mov
addb
std
mov
and
call
call
test
sbb
cwtl
add
cmp
mov
lret
dec
and
xor
and
sub
cs
inc
lods
into
add
and
into
dec
imul
rol
mov
mov
scas
cltd
lahf
xchg
mov
incl
ljmp
push
mov
mov
jno
and
out
out
jb
mov
std
inc
and
pop
jae
fadds
jmp
push
aad
inc
test
cmpsb
mov
jb
xchg
jmp
mov
jge
xchg
adc
sahf
cmpl
push
and
cltd
push
jge
pop
fneni(8087
ss
popa
cs
cli
push
aam
cmp
mov
sbb
push
into
sbbb
lahf
jns
popa
pavgb
in
ret
push
hlt
jne
popf
mov
push
je
cwtl
jecxz
mov
outsb
push
pop
mov
rcr
test
popa
shl
mov
out
and
ja
aad
mov
aad
je
sti
dec
inc
test
fldt
ret
xor
les
jnp
xchg
ljmp
mov
repz
fimull
cltd
pusha
repz
cld
popa
inc
or
push
movsb
jecxz
loope
insb
mov
adc
fisttps
or
cwtl
nop
mov
inc
int
xchg
add
lods
arpl
jne
adc
sahf
mov
loopne
nop
and
push
sub
inc
mov
jp
cmp
add
icebp
pusha
subb
mov
push
mov
loop
lds
mov
mov
int3
cmp
push
sbb
mov
and
and
imul
movsl
or
push
sub
mov
adc
fcmovne
arpl
push
cmc
mov
sahf
mov
fs
test
mov
stc
cmp
mov
lock
enter
xchg
mov
and
lret
or
add
imulb
loopne
jo
fmuls
out
vcvtss2sd
sub
mov
mov
xor
lods
push
mov
mov
xlat
pop
cwtl
sbb
sbb
cmp
ljmp
add
jge
pop
lret
inc
aam
add
scas
movsl
divb
ljmp
adc
sti
xor
inc
stos
add
xor
dec
cmpsl
out
aas
and
push
aad
cli
shrb
loop
hlt
mov
in
aaa
dec
sbb
jg
xor
adc
or
xor
pop
push
lea
cmp
push
js
data16
int
fldenv
sub
push
sbb
and
jno
nop
cs
in
sbb
and
sub
or
xor
lock
add
adc
push
push
mul
orb
jp
enter
movntps
jl
xlat
scas
dec
mov
add
movsl
sti
sarl
aad
mov
insl
rcll
pop
push
dec
adc
or
or
push
hlt
jnp
xor
dec
dec
mov
xchg
sbb
cmpsl
add
sbb
orl
arpl
fimull
xchg
nop
mov
cmpb
popa
mov
push
fadds
pushl
push
or
push
adc
mov
mov
pop
mov
inc
lahf
lcall
je
lock
mov
rcll
mov
mov
faddp
mov
xor
cs
mov
add
mov
dec
fwait
xchg
scas
stos
out
andl
sub
inc
pop
out
data16
fistl
test
xchg
mov
stos
in
jle
inc
xor
daa
mov
ja
jg
inc
and
mov
popa
dec
inc
dec
adc
scas
or
shll
mov
popf
push
hlt
mov
cmp
ret
jp
xchg
jne
bound
pop
sahf
cmpsl
sub
pusha
sub
push
and
pop
stc
sub
adc
inc
xor
ret
jo
fimull
xchg
sti
push
or
xchg
jo
out
xlat
jno
mov
jno
cmpsb
inc
test
into
add
add
popf
or
cld
insb
sub
imul
jno
xchg
mov
cli
jmp
cmpsb
clc
arpl
mov
sub
or
dec
pop
out
mov
cltd
outsb
in
lcallw
adc
jno
movsb
ret
test
std
dec
repnz
push
leave
lds
and
flds
or
or
adcb
cmp
ljmp
div
fwait
add
inc
cmova
mov
xchg
add
push
rorl
movsl
fbld
lock
add
push
dec
add
cmp
sub
push
adc
in
jnp
push
stc
adc
sbb
leave
sbb
nop
aad
xchg
das
or
fistpll
xor
adc
mov
mov
popa
sub
gs
sub
dec
mov
insb
sub
insb
mov
std
movl
scas
cmpsb
in
xor
pop
int
mov
loopne
pusha
out
mov
inc
lds
imul
bound
jmp
xchg
or
xlat
lret
mov
xor
les
test
jae
xchg
mov
shl
scas
fbstp
dec
fsubrs
sub
xor
push
cmp
loopne
push
pop
push
dec
test
jno
sbb
cmp
imul
imul
xorb
inc
lea
mov
mov
pop
pop
jmp
push
inc
xchg
dec
dec
out
js
sbb
lret
mov
cs
lret
adc
fisttpl
ja
sbb
lds
cmc
or
rclb
int3
mov
outsb
loopne
ja
push
or
rclb
js
in
mov
inc
mov
jecxz
cmp
inc
roll
imul
pop
sti
leave
cld
cltd
xchg
dec
mov
xor
inc
xchg
cmpsl
nop
cmpsl
test
xor
pop
fsubs
loopne
ret
xor
cmp
jb
aas
xchg
push
loop
cmpsb
pop
mov
aad
pop
push
popf
std
jns
mov
ss
pushf
adc
pop
ss
mov
mov
in
fwait
mov
and
sbb
je
in
js
push
mov
in
and
mov
sbb
js
sbb
imul
mov
jne
scas
addr16
jmp
outsl
repz
mov
push
mov
push
and
mov
fiaddl
pop
pushf
mov
enter
adc
imul
bound
xchg
add
dec
dec
mov
mov
adc
mov
xchg
dec
js
push
ret
jge
add
repnz
pop
fiadds
and
dec
dec
das
jg
mov
jno
cli
loope
pop
je,pn
rcl
jmp
cmp
mov
xchg
push
mov
cmc
in
mov
dec
adc
iret
std
jge
loope
pop
add
loope
cmc
ficoml
lods
and
mov
and
mov
inc
dec
xor
std
mov
push
pop
push
inc
lcall
mov
cmp
and
cmpsb
ja
and
jnp
adc
sub
jmp
lods
pop
das
es
sbb
push
inc
adc
inc
jecxz
cmp
scas
mov
mov
sbb
stc
pop
or
jno
sbb
lcall
adc
pand
push
jnp
mov
or
out
fadd
loope
daa
lods
push
movsb
popa
insl
jo
in
out
gs
xchg
xchg
jmp
jmp
loop
dec
ret
mov
sub
xchg
dec
rcr
fadd
call
outsb
insl
dec
sahf
cmp
xor
out
lret
or
and
loopne
sub
mov
out
xchg
roll
aad
pop
mov
aas
push
fsubr
mov
leave
mov
aas
jne
pop
or
or
inc
mov
add
das
and
cmp
fistl
push
or
pop
mov
dec
push
sti
lret
mov
ja
jmp
in
ja
push
jle
leave
cld
movsl
mov
xchg
or
sub
xor
mov
jne
and
and
mov
mov
aaa
cwtl
xchg
jp
in
sub
sbb
xor
push
and
leave
lret
jmp
sbb
ljmp
mov
aam
or
clc
add
mov
dec
loopne
aaa
fisubrl
fs
mov
sub
inc
pop
repz
or
push
mov
loopne
and
lods
sbb
sarl
mov
dec
or
fsubrl
push
sub
push
cmc
mov
or
es
lods
cmp
sti
sub
les
cmp
mov
fdivrs
inc
enter
fs
and
sub
and
das
cmpsb
jp
push
in
shl
std
daa
lret
mov
fsubs
scas
jae
cs
cmp
push
nop
addb
fildl
mov
bound
sub
sub
inc
lret
div
lea
mov
imul
inc
add
cld
fists
loope
into
mov
out
cltd
jg
int3
pop
ljmp
lret
cmp
in
xor
jbe
jo
push
loopne
stc
sbb
ss
sub
mov
pmaddwd
mov
pop
data16
nop
xorl
xchg
imul
testb
inc
mov
xor
cmpsl
pop
ja
imul
mov
adc
fs
mov
testl
add
mov
mov
mov
mov
adc
das
and
pop
gs
fsubs
mov
mov
mov
aas
repz
neg
pop
sti
adcl
xchg
test
add
nop
and
inc
fwait
outsl
mov
dec
xchg
pop
xchg
jg
inc
xchg
fdivr
cld
dec
daa
popa
hlt
aad
and
mov
movsl
lret
xor
cs
mov
dec
lods
pusha
mov
sub
add
in
enter
push
cs
mov
ljmp
cmpl
cmc
les
iret
sub
je
push
mov
loop
xchg
test
lcall
mov
and
mov
and
inc
aam
cmp
jae
ja
rorl
xorl
push
movsbl
mov
jae
loop
mov
and
push
fisttpl
cmp
outsl
or
scas
xchg
or
sub
lahf
lock
jno
repnz
push
inc
pop
mov
mov
cli
adc
pop
mov
pushf
imul
loope
divl
les
popa
push
fsts
and
arpl
lret
push
push
or
inc
das
les
cmp
cmp
outsl
mov
lcall
fmull
jp
je
aad
xchg
lea
xchg
cwtl
jo
movsl
pop
sbb
inc
out
jno
orl
lret
add
in
xor
push
pop
push
daa
xchg
xor
sti
mov
daa
mov
jecxz
mov
inc
sub
xlat
std
fcompp
push
jl
rol
popf
mov
aad
mov
jl
les
aaa
iret
pop
pop
xchg
data16
mov
add
inc
aad
mov
and
or
iret
xor
cmp
add
cli
jl
and
sub
dec
cs
pop
out
mov
jmp
pop
movsb
add
cmp
adc
out
xchg
push
push
inc
jp
sub
repz
adc
test
scas
push
dec
dec
out
xchg
pop
push
push
mov
inc
pushl
mov
fimull
inc
cltd
xchg
jmp
sbb
cmp
lret
xor
jp
mov
add
xor
cmp
enterw
inc
sub
in
int
es
lcall
jae
stc
mov
je
mov
dec
ficomps
mov
daa
int
push
xor
or
dec
jmp
jecxz
idivb
lahf
xlat
and
xor
divl
icebp
cmc
inc
xor
push
sub
mov
push
out
adc
jns
mov
movsb
sbb
or
stos
pop
ror
rcrb
push
push
dec
adc
ret
loope
les
loope
out
les
sub
das
inc
fbld
mov
jns
test
and
sti
jno
lods
out
outsl
push
into
insl
push
mov
pop
test
test
mov
test
xlat
es
sbb
pop
dec
adc
cmp
shl
or
jle
inc
jg
ljmp
dec
in
jno
int3
inc
inc
inc
test
cmp
push
mov
rcll
mov
insl
std
xchg
jb
bound
cmpl
mov
and
insb
adc
insl
inc
loop
test
loopne
loopne
je
dec
mov
xchg
cmp
xchg
and
sti
push
inc
push
push
dec
adc
jp
cmp
shl
mov
xorb
mov
icebp
push
inc
test
leave
or
leave
dec
rcrb
adc
xchg
push
filds
in
mov
ss
fnstsw
adc
sub
lea
shlb
sub
pop
mov
ds
ljmp
add
jge
dec
xchg
clc
add
in
scas
push
popf
cmpl
outsb
xchg
cld
xor
sbb
inc
aad
je
cltd
nop
int
jnp
pusha
mov
xorl
popf
xor
sub
sbb
lds
xorb
rorl
jmp
dec
dec
test
ret
movsl
insb
push
pop
sbb
faddl
push
dec
call
cwtl
xchg
int
or
xchg
gs
jb
push
jae
arpl
loop
xlat
adc
jb
mov
add
fsub
cmp
loopne
fildll
adc
push
cmp
imul
lcall
stc
cmpsb
int
jge
xor
out
aad
inc
push
sbb
lods
push
xlat
mov
aam
int3
int
sbb
mov
adc
aas
test
sub
xor
dec
fcomi
xor
lods
aam
clc
push
js,pn
pop
push
sub
inc
mov
addb
sahf
push
mov
pushf
sahf
xchg
cmovb
dec
aas
sbb
mov
stos
lret
cmpsl
ljmp
xchg
pop
xchg
jg
and
cmp
add
scas
in
jbe
push
popa
and
cmpb
lods
mov
pusha
push
inc
xchg
sub
xchg
sbb
pop
sub
inc
pop
mov
and
je
orl
and
or
test
js
mov
inc
xchg
jns
jbe
sub
shl
das
add
call
jbe
test
or
neg
arpl
nop
push
insl
stc
repnz
lods
notl
arpl
cltd
add
mov
dec
sbb
or
jb
stc
sub
add
sbb
jl
adc
jo
frstor
les
mov
push
push
mov
rol
fwait
push
lock
push
repnz
shll
imul
xor
mov
push
mov
rolb
cmp
mov
mov
sahf
or
mov
xchg
and
pop
clc
lcall
test
push
lds
sbb
jl
adc
lock
lss
dec
jns
andb
inc
psraw
adcb
and
pop
in
mov
shll
pop
push
jmp
divb
dec
into
jg
adc
pop
nop
cmp
xor
adc
test
nop
daa
push
lret
imul
hlt
pop
push
pop
inc
xchg
daa
repz
in
or
flds
xchg
and
call
and
mov
lret
xlat
out
ljmp
mov
leave
dec
dec
sub
rolb
sbb
pop
adc
cmp
pop
or
push
push
repz
insw
push
into
pop
xchg
cmp
jge
out
mov
cmp
pop
sarl
nop
pop
push
jno
sub
push
pop
inc
pusha
mov
sub
dec
inc
pop
scas
dec
cmp
xor
mov
sub
push
orl
dec
out
push
mov
lret
stc
rolb
xlat
inc
sbb
insb
out
sbb
and
jns
mull
or
and
lods
js
mov
fcomip
or
aad
cmp
push
pop
movsl
xlat
dec
cmpsb
mov
popa
pop
mov
pop
mov
ja
lds
sub
xor
cmp
jg
jo
xor
stos
lea
pop
call
push
and
lret
sub
gs
and
jg
xchg
add
jecxz
insb
mov
cs
ljmp
xchg
sub
or
push
lret
cli
fst
pop
push
mov
cmpsl
iret
mov
in
xchg
push
xor
mov
mov
pop
int3
loope
sub
mov
stos
insb
in
inc
out
out
dec
inc
repz
add
je
or
sub
adc
ds
cmp
andl
push
jns
cmpb
stos
jno
leave
push
jle
ss
test
in
cld
mov
lret
or
sub
mov
mov
sbb
cs
jae
je
inc
test
pop
cmp
stc
mov
mov
xor
mov
dec
sub
outsl
add
adc
or
xor
pop
adc
mov
pushf
push
xchg
js
dec
inc
cmp
icebp
lods
add
cmp
inc
jno
ret
sub
push
rorb
mov
mov
mov
mov
into
adc
aas
pop
xchg
daa
push
fcmovbe
pushf
movsb
lock
cld
repz
pusha
fwait
ret
repnz
dec
pop
daa
or
and
mov
loopne
int
into
sub
popf
iret
imul
pop
cmp
xor
sbb
mov
stos
test
jne
jle
std
add
mov
mov
popa
clc
jno
imul
fcmovb
fisubrs
xor
ja
push
jmp
ja,pn
or
xor
mov
sbb
ret
add
fdivrl
xor
mov
es
fwait
jne
inc
xchg
and
out
mov
push
push
outsl
add
or
and
push
cmp
jmp
push
sbb
test
arpl
bound
daa
mov
push
das
loope
jo
int3
mov
mov
push
mov
pop
test
stos
jmp
xchg
lahf
lret
mov
xlat
or
mov
test
dec
aam
aam
cwtl
rcrl
ljmp
rcrb
fs
adc
add
push
xorb
shrl
test
gs
pusha
and
cmp
fisubl
mov
mov
inc
push
repz
test
mov
cmp
add
movl
pop
jp
add
dec
jb
nop
leave
stc
jne
mov
lahf
dec
add
add
mov
jg
in
mov
mov
mov
cli
mov
movsl
popa
mov
xchg
jl
push
cmpsl
pusha
and
stos
mov
push
jbe
jg
aaa
fcomps
cli
push
add
cs
movsl
and
dec
xchg
cmp
loop
xlat
nop
cmp
adc
ret
pop
iret
sbb
add
sbb
xchg
mov
gs
jg
cltd
mov
ret
mov
loopne
jnp
push
cmp
xor
ljmp
insb
fisubl
add
fcoml
pop
aas
aam
adcb
in
jmp
inc
push
sbb
inc
inc
daa
pop
es
arpl
cmc
daa
mov
pop
loop
out
rclb
pushf
fsubr
pop
out
popf
mov
cmc
push
cmp
popf
push
inc
jne
subb
hlt
adc
dec
out
xlat
lahf
pushf
stos
jns
mov
jge
cli
sbb
out
rolb
inc
out
and
push
dec
push
mov
jno
ljmp
cmp
fs
and
in
or
ja
imul
std
gs
cltd
arpl
pop
push
pop
mov
xor
cli
lahf
bound
hlt
clc
enter
cmp
js
shl
push
cmpsb
xchg
lahf
sbb
pop
sti
or
mov
adc
test
popf
push
xor
psubw
push
sahf
mov
xchg
mov
adc
loopne
sbb
mov
mov
incb
stos
xor
fcmovnb
xlat
aas
lret
mov
xlat
arpl
inc
scas
push
test
inc
rcrl
stc
in
cld
push
xor
fsubs
lcall
out
dec
es
push
rol
or
mov
outsb
shl
pop
fmull
inc
xchg
fs
mov
cmp
ss
jge
je
push
mov
pushf
cmpsl
xadd
mov
mov
sub
dec
or
lret
pshufw
hlt
mov
cmpsl
push
add
sti
sbb
add
xor
orl
jle
sbb
jp
js
insl
sahf
movsl
xchg
out
add
jmp
lret
sub
hlt
test
orb
add
popf
jbe
xchg
mov
xor
mov
in
cmp
lret
cmpsl
adc
aam
sbb
jp
xchg
addb
sti
and
jg
testl
jle
jle
ds
aas
out
cmp
movlhps
addr16
movsb
add
pop
scas
sub
ds
push
cs
mov
adc
dec
scas
repz
push
inc
push
sub
test
mov
int3
insl
jle
mov
stos
cmpsb
and
mov
inc
test
insl
mov
fdivl
push
jge
push
sbb
daa
ss
out
stc
repnz
mov
pop
into
and
enter
mov
jge
jge
inc
xlat
imul
lahf
sub
xor
scas
push
cmp
es
stos
dec
push
pop
rcrb
pop
push
nop
mov
aad
scas
insl
xchg
movsb
add
incb
mov
push
sarb
lds
stc
pop
inc
push
inc
fwait
mov
icebp
dec
fsubrl
je
xor
mov
mov
mov
xchg
jbe
xchg
dec
cltd
out
xor
lahf
fildl
mov
pusha
add
cmp
adc
push
shr
fisttps
test
shrb
push
arpl
mov
push
inc
jo
jne
cwtl
lret
mov
icebp
scas
add
into
inc
sarb
dec
cmp
lcall
js
arpl
push
mov
fucomi
xor
fdivs
push
cmc
loopne
mov
lds
jge
dec
jnp
cmc
lret
xor
push
popa
mov
cmp
jmp
icebp
xlat
sub
nop
dec
pop
sub
loop
push
cmp
pop
mov
arpl
cmp
arpl
add
sbb
je
cmc
adc
dec
loop
adc
xor
movsl
push
scas
sahf
in
insb
adc
les
repz
inc
scas
cmc
sub
pop
mov
testl
mov
jl
jns
add
sahf
cld
cmp
lds
ds
lock
jne
repnz
ljmp
mov
dec
pop
dec
xchg
mov
mov
fwait
pop
fbstp
fnstcw
push
test
jbe
jne
bound
jno
jb
popa
jnp
test
fs
push
test
enter
push
adc
stc
jge
jae
xor
popa
in
clc
jae
mov
jge
bound
popa
sar
dec
outsb
dec
in
jb
lea
pop
stos
clc
into
stc
cmpsl
ret
cli
imul
out
or
xchg
ljmp
mov
and
inc
xchg
stos
cmp
mov
cmc
or
push
stc
xchg
or
addr16
add
ljmp
roll
adc
jecxz
aad
sub
daa
inc
pop
lods
pop
xchg
sbb
xchg
xor
push
ss
mov
pusha
dec
lret
in
loop
pop
jns
subb
mov
addr16
dec
stos
sub
cltd
into
add
mov
jo
cmp
push
mov
sti
jge
std
add
mul
push
add
mov
lahf
fcomps
or
outsl
test
fbstp
data16
xor
aam
fldt
aad
xor
mov
bound
add
mov
xor
adc
cmp
stc
das
sbb
insb
ja
mull
cmp
adc
popl
jns
sbb
fdivrs
adc
pop
das
mov
dec
insb
bound
and
dec
lret
inc
add
push
fnstenv
sub
adc
adc
xchg
jle
adcl
popf
cs
in
fsubrs
loop
int
rcl
adc
jl
xchg
xor
push
pop
divb
sbb
movsl
std
mov
insb
mov
scas
cmc
inc
gs
push
pop
jnp
add
push
cli
xor
dec
dec
imul
inc
push
mov
imul
push
into
dec
pop
ret
xchg
mov
pop
loop
ljmp
jecxz
dec
ret
xchg
ljmp
pcmpgtw
inc
mov
xchg
jmp
test
cmp
push
fwait
icebp
aas
stos
push
cwtl
cld
pop
adc
pop
and
mov
mov
mov
ljmp
add
pushf
clc
pop
mov
dec
xlat
or
das
gs
in
sti
or
adc
inc
push
sub
scas
push
push
ficoml
push
mov
xor
or
sbb
jnp
adc
jbe
arpl
mov
mov
jbe
cltd
dec
mov
cmp
fldenv
dec
pop
enter
out
mov
test
sbb
mov
add
enter
ss
bound
cmp
pop
mov
rorl
outsl
adc
divl
cli
jae
mov
inc
insb
outsl
enter
push
push
in
in
lods
jns
movsl
lahf
fdivrl
pop
and
pushl
push
outsl
int3
in
in
inc
xchg
lar
aaa
pop
sub
jnp
add
sbb
gs
into
xor
les
inc
mov
mov
lea
les
pop
or
ret
or
pop
lret
loope
fsubr
clc
xor
mov
sub
xchg
add
pop
inc
addl
outsb
xor
jae
jnp
sub
pusha
gs
into
inc
xchg
adc
pop
call
lock
xchg
sti
iret
dec
mov
movsl
push
lea
pop
aad
mov
fwait
lahf
push
cli
adc
into
scas
inc
enter
ja
mov
adc
popf
adc
nop
icebp
cmc
pop
pusha
in
int3
mov
imul
imul
subl
jge
aam
gs
mov
xor
adcl
dec
cmp
stc
sub
fsub
mov
push
adc
jle
lods
sub
pushf
or
xor
aam
jp
adc
push
sarb
mov
cmp
idivb
es
je
mov
sbb
lret
xor
aaa
cmp
mov
xor
jmp
xchg
or
mov
sub
push
add
movsl
leave
sub
mov
pop
es
jmp
gs
mov
jno
xchg
or
outsl
xchg
push
icebp
jg
repnz
jnp
jo
test
or
pop
dec
cmova
aam
pushl
xor
xchg
or
fs
call
push
enter
jns
loopne
sub
cmpsb
sbb
push
ss
inc
xchg
jnp
mov
xor
stos
cmpsb
push
lahf
push
mov
testl
sbb
jecxz
rcr
lds
cltd
dec
sub
jecxz
jne,pn
cmp
add
and
add
xchg
test
fsubs
pop
or
idiv
sub
daa
imul
in
add
mov
sarl
cmp
hlt
repnz
stos
adc
cltd
sub
inc
insb
lods
pop
fdivs
mov
pop
pushf
push
push
dec
and
sbb
xchg
xor
sub
mov
mov
rolb
dec
or
and
dec
andb
push
aas
test
cwtl
test
ljmp
and
xor
data16
add
jle
cmp
rcr
shr
iret
dec
jns
xchg
adc
popa
or
mov
inc
xor
out
es
cwtl
rclb
or
lds
xchg
push
mov
jle
mov
mov
push
inc
movsb
mov
pusha
loop
dec
mov
ret
cltd
inc
or
lret
or
icebp
fistl
movsl
ss
outsl
adc
pop
mov
push
mov
sbb
adc
jecxz
add
jmp
arpl
jp
sbb
shl
mov
inc
mov
ljmp
jmp
inc
pop
shl
shl
pop
adc
dec
and
imul
pusha
lret
std
push
aaa
sbb
in
test
sti
mov
into
cmpsb
add
adc
push
out
stos
jecxz
dec
pop
adc
lock
jge
iret
xchg
mov
dec
out
jbe
mov
movmskps
lock
sbb
and
or
jb
push
pop
lods
mov
movsb
rcrb
loop
add
xor
hlt
mov
mov
sub
into
repz
cmp
call
xchg
xor
or
push
in
dec
shr
roll
movsl
xchg
pusha
pop
jbe
jb
mov
mov
iret
jecxz
pop
dec
sbb
mov
pushf
das
pop
sbbl
push
push
sarl
or
imul
sub
in
roll
xor
inc
pop
sbb
sub
or
xor
decb
in
aaa
lods
pop
std
es
fnstenv
sub
sbb
in
cmp
stos
sbb
dec
push
test
decl
bnd
sub
adc
into
pop
pop
mov
cs
jecxz
icebp
test
jo
and
in
push
leave
cmc
mov
xchg
imul
sub
push
pop
add
mov
or
push
rolb
icebp
ret
jecxz
mov
daa
jmp
push
lahf
push
fadd
out
jecxz
pop
xchg
jmp
fmull
cmpsl
mov
jmp
push
cmpsb
es
inc
xchg
inc
jecxz
and
mov
repnz
mov
sub
lea
ret
jnp
lret
popf
loope
out
sarb
jecxz
sahf
xchg
sub
movsl
sarl
add
enter
les
cwtl
es
shll
fldt
jbe
mov
hlt
bnd
test
adc
sbb
inc
popa
loop
repnz
imul
sbb
mov
lcall
cmp
ret
or
mov
jecxz
jo
and
sysenter
dec
aad
test
mov
or
mov
sbb
pop
or
iret
addb
fs
mov
jo
cltd
movsl
xchg
hlt
mov
pop
jo
test
imul
loope
cmpl
lods
push
jns
xchg
mov
xchg
jo
fwait
push
xchg
xor
loopne
fcoms
push
cmp
sbb
loope
mov
xchg
mov
enter
xchg
loope
das
xor
jp
pusha
pop
mov
pusha
xchg
push
int3
in
ljmp
jp
into
jmp
mov
adc
int3
fsts
jae
and
test
insl
xchg
cmp
dec
inc
es
iret
dec
pop
cli
lods
jo
and
or
adc
daa
lcall
xchg
mov
fwait
ss
daa
cld
in
in
cwtl
xchg
jmp
rcrl
je
mov
pop
int
gs
jne
jl
sarl
stos
fdivr
and
nop
sbb
bound
dec
push
push
scas
jg
push
mov
jb
xchg
pop
add
insl
stos
lock
cmc
hlt
loop
xor
mov
cmp
inc
push
cwtl
popf
mov
add
mov
sbb
mov
in
mov
sub
dec
in
mov
push
daa
cmpsb
lods
pop
jg
mov
mov
jmp
jbe
mov
or
lods
clc
mov
jns
jmp
sbbl
imul
ds
and
ss
leave
or
or
scas
decl
xchg
mov
pop
fcomip
aad
repz
shl
or
out
push
imul
pushf
mov
fcomip
stos
adc
lods
vmread
xor
push
jge
pop
repz
add
add
xor
push
aas
push
jns
adc
sub
sub
jnp
push
inc
sbb
cmp
arpl
mov
xchg
cli
loop
les
add
subl
popl
das
mov
cli
js
lods
fdivl
in
data16
fwait
hlt
and
cmp
out
xor
lods
nop
pop
push
hlt
stos
push
outsl
dec
loopne
pop
addr16
cmc
pop
outsb
sub
pop
and
movsb
pop
iret
sub
add
js
inc
fdivr
in
mov
jae
lods
jns
clc
xchg
cmp
notl
ret
and
sti
sub
xchg
cld
sti
mov
in
xchg
inc
cli
lods
insb
push
mov
xor
mov
sbb
lret
jmp
mov
adc
lds
js
les
popf
xchg
jb
fildl
dec
mov
pop
adc
icebp
mov
cmc
push
dec
lea
inc
or
or
je
out
sub
or
lods
addr16
adc
fs
fstp
sbb
mov
pop
orl
popa
mov
cmpsb
ret
push
int3
sti
icebp
cmp
sbb
pop
xchg
jbe
xorl
jl
ret
inc
fisubl
test
fldl
or
inc
push
faddl
xlat
sbb
mov
pushf
outsl
mov
repz
add
cmp
shll
sub
adc
adc
lahf
icebp
jne
mov
and
xchg
add
mov
or
add
add
ss
adc
mov
test
xchg
mov
rcrl
jne
pop
jp
jns
ljmp
fstl
adc
push
pop
dec
les
mul
or
jb
pop
cmc
outsb
mov
mov
mov
adc
push
sub
fld
aas
add
push
test
pop
or
pop
and
pushf
testl
sbb
ja
sub
repnz
xorb
pop
outsl
cmpsl
inc
test
in
xlat
cltd
ffree
add
mov
pusha
pop
js
in
cwtl
dec
mov
lods
adc
pushl
add
js
or
nop
ds
mov
stos
xor
or
push
pushf
or
daa
adcl
sahf
int
mov
jmp
mov
loop
cmp
repz
add
inc
sbb
inc
push
out
xchg
or
jbe
xor
xchg
mov
cmpsl
mov
les
shlb
push
movsl
cmp
cmp
cwtl
fs
mov
mov
lods
test
sahf
imul
mov
lods
clc
dec
out
mov
jg
fucomp
insb
xchg
call
jl
mov
mov
dec
xor
clc
xor
lods
jb
scas
insl
cmc
mov
cs
ficompl
or
adc
or
into
add
adcl
cmpsl
test
arpl
les
pop
push
in
fwait
mov
test
and
insb
fwait
data16
pop
and
sub
pop
outsb
mov
int3
daa
aam
test
or
adc
or
sbb
cwtl
xchg
jnp
mov
in
and
sub
pop
mov
inc
push
xchg
in
inc
fsubrl
daa
cli
aas
jae
sbb
mov
sbb
sub
and
mov
test
movsl
sbb
pop
int
mov
out
in
mov
test
sub
jno
jae
mov
xchg
add
or
jns
test
sarl
pop
sbb
fs
rorb
mov
adc
into
js
cli
test
ljmp
dec
es
mov
ljmp
jle
bound
and
xchg
mov
imul
in
inc
test
iret
lods
mov
mov
dec
sbb
xchg
imul
mov
int
fistps
sub
jecxz
stos
sbb
sbb
xor
and
mov
addl
add
push
jne
jbe
push
and
and
push
jbe
cli
inc
pop
jne
arpl
cmp
pop
dec
cmpsl
loopne
roll
in
mov
cli
xor
adcb
inc
adc
inc
mov
adc
roll
pop
repnz
xlat
idivl
push
repnz
stos
dec
or
mov
les
xor
inc
jb
loope
dec
inc
js
negb
xor
cmp
fdivs
fs
hlt
ds
fldcw
xchg
or
cmp
test
jns
mov
lret
ds
lea
sub
sbb
pushf
sahf
and
xchg
jmp
jnp
ljmp
int
mov
negb
fwait
push
jb
test
insb
adc
bound
cmp
lahf
jns
or
ljmp
push
cmp
mov
inc
jmp
cld
aad
push
sbb
jnp
shr
push
push
mov
orl
pop
mov
mov
mov
aas
lret
in
lret
and
jl
sub
leave
pop
idivl
std
out
jecxz
mov
lods
ja
push
ret
jle
push
sbb
xchg
aaa
pop
cmp
sbb
xchg
xchg
not
ftst
mov
mov
jne
test
jo
inc
mov
pop
jno
jno
lret
addr16
jb
clc
lods
mov
das
ds
or
jg
ljmp
pop
inc
and
cld
fs
jb
mov
pop
inc
jmp
ret
pop
mov
out
negl
push
mov
and
push
push
add
shll
lds
daa
imul
in
pop
inc
test
xor
mov
enter
scas
mov
pop
ds
in
in
pop
shlb
fs
bt
repnz
es
cmpsb
lahf
std
stos
data16
pop
add
es
add
testb
jae
fs
pop
clc
jno
mov
add
mov
jo
push
in
mov
pop
scas
mov
sarb
test
int
push
call
mov
lods
mov
cmp
add
dec
mov
in
jge
scas
push
pmulhw
data16
jg
sbb
sahf
test
pop
mov
push
fwait
and
adc
or
outsb
imul
scas
shl
jmp
cmc
loope
mov
ss
pushf
jb
addr16
in
mov
mov
cltd
inc
cmp
jge
fs
data16
xlat
addr16
inc
xor
mov
adc
and
dec
lods
rdpmc
cmp
js
fldenv
push
push
fs
xor
in
sub
out
mov
cld
rol
cltd
mov
jmp
xor
jo
jle
mov
mov
push
cli
lcall
mov
xor
sub
jge
test
out
fcmovbe
adc
inc
cmp
fdivrs
clc
jecxz
test
aad
inc
stc
jle
into
mov
ja
pop
jge
stc
out
arpl
ljmp
or
cld
cld
scas
loope
popa
inc
sbb
ror
push
imul
jbe
rolb
rcrb
or
dec
dec
pop
movsb
popa
jns
jecxz
cmp
call
push
pop
mov
jno
in
jb
ljmp
jnp
fidivrs
addr16
lret
in
mov
icebp
imul
adc
lret
lock
dec
fmuls
push
stos
repnz
out
insb
jbe
push
sbb
and
and
xchg
les
gs
js
mov
aam
dec
loope
mov
dec
aam
cmc
dec
mov
push
mov
mov
push
jecxz
pop
jle
cltd
mov
push
arpl
stos
push
cmp
fnstenv
ljmp
sub
mov
jnp
dec
pop
int
movsl
push
les
push
idivl
jecxz
xlat
pop
pop
add
mov
adc
add
insl
mov
loop
nop
or
sbb
add
in
and
push
adc
scas
idiv
ljmp
aam
cmp
and
jo
ret
test
fwait
pop
es
pop
lods
mov
lret
push
insb
addr16
fcompl
and
xchg
and
jno
pop
rcr
and
rcrl
out
fsubs
fimull
scas
sarl
rcrl
test
dec
dec
ret
outsb
inc
fs
ds
fsubrp
jo
xchg
sub
cmc
rorl
adc
repnz
push
cs
mov
mov
or
dec
mov
push
adc
mov
xorl
icebp
add
inc
inc
out
inc
mov
shlb
pusha
imul
std
mov
and
std
ret
push
push
fbld
adc
mov
pop
and
fmull
out
xor
pusha
cmp
leave
pushf
clc
mov
js
repnz
xor
data16
push
mov
and
or
jo
add
pop
stos
loope
sub
push
jbe
push
or
sub
daa
stos
sar
ja
fwait
out
cwtl
test
cmpsb
push
test
cmp
cli
pop
rclb
sbb
lods
in
pushf
sbb
lret
mov
mov
xor
jno
out
dec
add
add
fsubrl
dec
movsb
pop
mov
stos
adcb
les
les
inc
sbb
inc
push
aam
shrb
mov
cltd
sub
fstl
fistps
test
fisttpll
xor
push
dec
push
mov
dec
mov
rorb
xor
into
fstpt
test
aam
lret
and
cmpsl
pop
pop
sub
inc
jl
testb
test
jbe
in
outsb
xchg
cwtl
mov
and
cmp
repz
sub
pop
mov
icebp
or
jne
cmp
or
std
jno
push
jp
inc
lock
and
inc
out
gs
mov
sub
shl
add
mov
mov
fs
call
xor
push
jo
fstpt
mov
call
mov
xchg
mov
imul
add
add
cvtdq2ps
js
out
mov
fistps
cmp
jno
lock
push
jns
mov
pop
lods
sbb
mov
fisubrl
stc
jmp
stos
out
mov
push
cmp
cmc
add
sbb
dec
push
jmp
cmpsb
mov
and
pop
mov
xchg
loop
mov
outsb
xor
push
xchg
mov
and
cmp
pushf
dec
sti
enter
mov
orl
push
bound
mov
jae
xlat
fcmovnb
idivl
cmpsb
push
fcmovnb
ret
inc
mov
les
fisubrs
sbb
mov
pop
pop
mov
and
fsubl
jo
sbb
pusha
mov
mov
xor
inc
fs
cwtl
pusha
loop
popa
mov
and
cs
xor
dec
push
sahf
xchg
jnp
pop
lcall
cs
inc
mov
mov
mov
or
fcmovnu
xchg
in
test
popf
orb
pop
push
and
arpl
xchg
mov
sub
mov
rclb
xorl
or
xor
mov
adc
mov
add
ret
jns
es
push
or
xor
call
push
test
out
or
cmp
inc
mov
add
roll
iret
jno
sbb
mov
push
push
ss
dec
mov
pop
dec
call
sbb
and
fidivs
xchg
push
call
rcr
cmp
outsl
lret
mov
insb
mov
xchg
pop
aas
push
lcall
pop
scas
push
outsl
out
repz
daa
pop
es
cmp
mov
iret
fwait
sbb
repz
xchg
add
out
leave
mov
jp
mov
gs
push
xchg
cli
push
and
push
mov
into
push
adc
lcall
inc
xchg
ffreep
sbb
jg
cmpsl
xchg
cwtl
mov
mov
sub
aas
stc
cmp
pop
sub
dec
repnz
jbe
adc
stos
and
rcrb
inc
pop
stos
xchg
and
cmpsl
push
mov
push
dec
popf
lods
jb
daa
sti
push
jg
pop
fldl
cs
and
and
pop
push
mov
mov
mov
or
xor
cmpl
test
ljmp
cmp
jnp
and
cmc
sti
mov
and
mov
mov
push
mov
sar
dec
push
pop
pop
fidivl
mov
daa
pop
rorl
jmp
lcall
sub
sti
and
inc
and
sub
mov
cmp
stc
adc
shlb
dec
in
pop
mov
out
sbb
int
cltd
outsl
ret
push
loope
js
xor
xchg
jae
mov
lods
pop
or
and
inc
inc
xchg
lea
xchg
dec
jle
mov
jmp
stc
imul
bound
popa
dec
dec
sub
rclb
cmp
loopne
adc
stos
loopne
pop
push
out
dec
inc
mov
inc
aam
pop
es
test
xor
cld
loop
mov
lret
mov
xor
sbb
push
pop
out
popa
mov
adc
ja
xchg
push
cmp
pop
ficomps
ficomps
clc
cwtl
xorl
sbb
xor
adc
mov
out
cmpb
imul
or
and
cmp
sub
mov
out
push
test
imul
in
sub
call
mov
add
mov
data16
xchg
adc
cmp
mov
shlb
loope
pusha
in
call
sbb
sub
push
jae
rcrl
sub
or
mov
mov
rcrb
inc
push
pop
loope
stos
cmpsb
ret
aam
jns
mov
mov
popf
cmc
cltd
jmp
adc
mov
cmp
dec
push
aad
xchg
push
sbb
add
mov
sarb
insb
shlb
inc
adc
push
mov
pop
and
push
mov
push
sbb
xchg
pop
fsubl
fcoml
call
leave
leave
dec
mulb
cmp
xlat
leave
mov
cmpsb
push
addl
inc
in
pop
push
lods
xor
sti
adc
adc
jbe
or
push
mov
xchg
ss
outsb
aam
sti
rcll
stos
and
loopne
sub
arpl
lods
std
mov
cld
repz
sbb
pusha
push
sub
stos
xor
jns
outsl
rorl
mov
or
test
cwtl
mov
out
loop
scas
aam
or
loopne
mov
mov
sbb
orb
add
add
cmp
int3
and
pop
in
or
push
aad
test
cmp
sub
aad
jg
loop
inc
adc
lret
cmp
in
pop
into
test
sbb
mov
popa
pop
xor
pop
shr
int3
xor
sub
stos
inc
mov
push
sahf
daa
adc
bnd
jno
pop
mov
es
dec
data16
sbb
sbb
lock
orl
pop
leave
idivl
ss
cltd
pop
sub
pop
fidivl
push
repz
and
icebp
lds
pop
clc
inc
sbb
insl
adc
cmp
cmp
push
push
cmpsb
lock
jg
leave
fldenv
cli
lods
ja
lcall
adc
loopne
mov
dec
xchg
out
das
test
sarl
sbb
int3
jno
push
adcb
mov
dec
fsubrs
or
out
xor
inc
adcb
mov
dec
jecxz
sbbb
sub
aas
inc
xlat
mov
mov
mov
mov
shlb
inc
xchg
dec
std
dec
bound
and
gs
and
mov
mov
xchg
cmp
cld
push
iret
mov
pop
add
dec
repz
xor
aaa
xor
mov
loopne
cli
mov
ret
dec
mov
ret
mov
xchg
jnp
into
cmp
xchg
das
add
gs
out
insl
ss
xchg
mov
push
cmpl
mov
mov
pushl
aad
sbb
fucomp
mov
imul
sbb
pop
jge
ss
dec
jnp
xchg
adc
insb
sbb
fwait
adc
repz
les
out
xor
popf
xorb
out
test
push
arpl
xorb
or
mov
popa
cs
mov
mov
test
pop
push
fisttpll
pop
les
sbb
out
dec
bound
xor
lret
push
sbb
jb
pop
lahf
push
pushf
pusha
hlt
jo
pop
and
sub
jmp
dec
test
ja
jecxz
inc
xchg
mov
aas
adc
sub
push
lods
jecxz
mov
in
lock
pop
pop
pushf
sbb
dec
sbb
leave
mov
dec
jae
cltd
adc
rorl
or
std
push
aam
pop
or
cmp
jbe
xchg
push
dec
andb
jl
popa
push
int3
lret
add
pop
dec
test
xor
sti
int3
dec
sub
jnp
dec
mov
fistl
cmpl
and
pop
push
je
adc
ljmp
xchg
dec
and
out
imul
sarl
cmpsl
repz
pop
jle
cmp
out
push
arpl
test
jns
lea
cltd
insl
pusha
sar
lods
mov
and
xor
in
xchg
cmp
popa
xor
test
sbb
out
fstl
jl
or
hlt
out
int
je
mov
xor
xchg
and
push
mov
pop
ss
cmp
and
inc
bnd
cmp
arpl
and
cmp
inc
push
jne
inc
mov
ficoms
pusha
shrb
mov
out
sbb
jle
sbb
leave
add
cmp
js
pop
dec
jno
test
das
les
cmp
fcoml
jge
idivl
test
fcmovnu
cmc
xchg
cmp
sub
sti
adc
inc
pop
leave
out
adc
sbb
xor
add
dec
xor
dec
es
subb
push
out
jmp
xor
loope
rclb
dec
push
push
ret
cld
scas
add
aas
in
popf
sbb
jne
dec
cli
fwait
add
mov
cmp
push
out
rclb
jmp
adc
inc
jne
inc
dec
rcll
repnz
jae
mov
mov
jbe
mov
jb
inc
popa
sub
or
enter
sti
xchg
or
mov
lea
sub
pusha
dec
adc
test
jmp
pop
loopne
lret
ret
outsb
xor
mov
pusha
imul
js
dec
enter
jmp
js
enter
lahf
lcall
sahf
push
xchg
sbbb
stos
dec
xchg
inc
or
sarl
sbb
inc
iret
inc
fcoml
mov
adc
int3
cmpsb
flds
sti
out
push
xchg
push
push
sub
jecxz
js
lcall
pop
pushf
jl
enter
lcall
mull
fidivrs
jl
push
fcmovnu
push
jns
xchg
dec
sahf
inc
shl
add
dec
cmpl
leave
scas
inc
fisttpl
cmp
test
mov
lahf
jo
add
in
pop
inc
xchg
jb
inc
das
mov
sub
xchg
testl
xor
mov
xchg
mov
clc
cmp
int3
dec
jb
jbe
mov
call
int
and
or
xor
add
outsl
push
loope
call
andb
fldl
out
pop
daa
add
iretw
push
and
mov
in
dec
push
outsb
adc
dec
stos
dec
gs
adc
in
inc
mov
sbb
shr
shrb
xchg
xor
cmp
cmp
inc
test
shld
insb
icebp
mov
in
bound
mov
mov
imul
push
popl
cmp
popa
es
inc
add
push
divb
inc
cmp
out
xchg
cwtl
mov
faddl
adcl
jno
dec
cmpsl
or
push
push
push
or
dec
retw
repnz
adc
xor
push
sarl
sbb
and
mov
outsb
sbb
and
std
dec
ja
in
add
sub
cmpsl
mov
jno
out
mov
and
imul
shlb
add
sti
lods
add
hlt
jbe
inc
lea
fcom
xchg
add
cli
xchg
sahf
imul
sub
ficoml
cmp
es
lret
ficoms
xchg
xchg
xor
sahf
push
lods
lods
inc
xchg
jl
cmc
fwait
mov
push
or
pop
in
cmp
leave
pop
ljmp
mov
push
aaa
jb
scas
out
mov
dec
mov
ds
cmpsb
rdpmc
pop
test
mov
push
sahf
inc
cmp
js
aas
mov
cmc
jns
mov
out
push
daa
jno
xlat
add
cmpsb
xor
xchg
in
pop
pop
fmuls
or
dec
out
mov
jne
add
mov
xlat
ja
jnp
xchg
sbb
sar
and
js
mov
clc
sti
std
in
lock
adc
inc
stos
or
scas
sub
pop
dec
pop
push
adc
sti
test
adc
or
fdivrl
dec
loope
inc
mov
enter
jae
cmp
arpl
repz
push
repnz
jmp
mov
or
xchg
xor
scas
cli
dec
jne
dec
std
cltd
mov
movsbl
cmp
sub
lea
sbb
stc
loope
cmp
xchg
cmp
xor
in
jge
cmp
adc
repz
flds
dec
call
mov
test
movsl
dec
fildll
mov
push
xchg
ret
addr16
sub
add
push
sub
popl
push
adc
dec
stos
rclb
dec
add
pop
add
push
jmp
es
divl
rcll
ds
cmp
in
roll
or
and
ret
and
movsl
or
iret
shl
add
jb
loopne
cld
pop
shr
cld
pop
sbb
push
and
adc
outsl
and
push
ret
inc
push
pop
cmp
adc
imul
in
fwait
leave
jle
xchg
jecxz
cs
push
cltd
bound
xor
jmp
dec
sub
add
dec
pop
imul
sbb
int
mov
push
je
test
mov
fisubs
mov
lret
xor
into
sbb
sub
and
lea
mov
jbe
scas
ret
fildl
int
dec
in
mov
insl
cli
cmp
xchg
push
push
aam
mov
push
pop
lods
mov
outsb
dec
test
add
xchg
cmp
gs
and
ret
push
jge
adc
fcomps
xchg
fs
xlat
ret
and
les
push
shlb
add
xchg
repnz
mov
jo
sbb
xor
rcrl
andl
mov
loopne
xchg
aaa
pop
jno
lock
jle
popa
icebp
test
mov
js
lcall
imul
push
lds
leave
mov
popf
dec
in
add
jecxz
dec
fldenv
ja
cmp
fs
jns
mov
loopne
xor
ficompl
push
mov
jne
js
jo
mov
xor
xchg
shlb
gs
addb
imul
test
push
fistpl
jp
in
shrl
push
outsl
sti
xchg
push
rcrb
xor
sti
inc
lcall
cld
push
in
out
mov
and
or
frstor
push
jecxz
cmp
fsubl
call
push
inc
push
out
jns
mov
jle
push
repnz
pop
xor
pop
movsb
push
das
sub
das
jno
inc
lods
push
mov
sbb
xor
test
pop
aas
notb
das
dec
push
into
fdivrl
out
xchg
aad
bnd
pop
mov
mov
fwait
dec
pop
std
dec
mov
popa
xchg
fadd
outsl
xchg
jge
jno
cmp
ja
sbb
fistpll
adc
cli
add
pop
sbb
aaa
jnp
add
xor
jp
jbe
jecxz
cmpsb
and
test
push
stos
cmpsb
sbbl
iret
xchg
sbb
cmp
sti
and
dec
iret
inc
call
push
in
mov
cltd
stos
xchg
dec
cwtl
push
shll
stos
and
adc
xor
cmp
ds
lcall
das
imul
in
fwait
movsl
xchg
xor
and
ljmp
es
or
mov
call
repnz
pop
or
mov
adc
movsb
mov
push
subl
mov
xchg
stos
mov
jbe
mov
push
or
dec
ret
inc
push
lds
outsb
sbb
and
mov
xchg
stc
xor
gs
pop
adc
pop
or
movsl
out
add
sub
mov
fldenv
cmp
pop
dec
jl
push
data16
adc
dec
jl
idivl
jg
test
push
js
mov
sti
cld
or
xchg
dec
outsb
adc
in
pop
xor
jns
cmpsl
shll
pop
jmp
sbb
cmc
pop
jl
sbb
xor
or
sti
xchg
ljmp
mov
inc
je
sub
fisttps
and
pop
dec
push
fpatan
pop
pop
mov
xor
scas
frstor
push
out
sub
stos
int3
popf
mov
mov
add
xchg
in
pop
insl
and
ret
push
in
mov
rcrb
cwtl
dec
xchg
test
xor
aaa
dec
pop
pop
mov
filds
lret
mov
jp
jnp
stos
pop
mov
sbb
adc
pop
lds
ficoms
fsts
add
dec
and
add
sub
mov
pop
and
cmc
mov
loopne
inc
scas
lods
stos
dec
xor
mov
aam
dec
mov
or
ljmp
sti
in
insl
shll
push
mov
xchg
push
mov
es
jl
ja
lahf
sub
pop
pop
repnz
stos
cmp
loopne
js
mov
insb
adc
jge
les
pop
inc
stos
movsb
push
ss
jo
push
adc
pop
aad
jmp
lds
cltd
pop
loope
cmc
dec
jge
sbb
mov
fs
xchg
inc
bound
lock
push
sbb
inc
cwtl
faddl
aam
in
ja
pop
mov
test
jns
addl
inc
cmpsl
mov
mov
mov
push
xchg
lds
xor
fwait
xchg
sbb
lods
pop
iret
icebp
arpl
lods
mov
aas
es
xor
mov
and
jb
stos
pushf
dec
jbe
data16
pop
mov
ret
cmp
rcll
mov
fdivl
dec
sub
cmp
mov
iret
inc
sub
fcmovu
cld
or
push
popa
or
xchg
jae
jns
data16
popf
and
mov
cmp
mov
enter
fadds
pop
fadd
loopne
cmp
sahf
or
movsb
pop
add
pusha
leave
pop
cwtl
imul
and
sub
lods
hlt
mov
pop
test
and
jg
push
fists
xchg
push
ds
andl
dec
pop
bound
xor
cmp
xor
jg
adc
call
inc
leave
mov
icebp
jnp
pusha
insl
dec
mov
rcrl
or
bound
fadds
sbb
outsb
xchg
sti
mov
fisttpl
aam
call
xchg
hlt
xor
cwtl
mov
into
dec
popa
mov
movsb
inc
sub
aad
adc
test
iret
rcrb
push
flds
leave
sahf
std
inc
nop
leave
outsb
and
mov
pop
jle
jmp
mov
sub
sbb
mov
pop
jp
les
test
sbb
xor
xor
pop
lds
or
ret
lock
xchg
or
data16
aaa
push
subb
xor
pop
aas
xor
mov
mov
sbb
add
fcmovbe
repnz
in
pop
cmpsb
adc
mov
pop
pushf
stos
cmovne
incl
adc
cld
lods
dec
xchg
js
lahf
dec
xorb
jnp
and
xor
jns
stos
mov
mov
lds
dec
mov
out
mov
daa
sahf
cmpsl
xchg
into
xchg
sbb
inc
adc
push
mov
cwtl
fstps
sub
popf
xor
mov
scas
cmp
mov
cmp
mov
adc
sub
ja
out
jecxz
jne
daa
mov
adc
cmp
mov
aam
xchg
dec
sub
cmp
pop
mov
jo
cmp
xchg
lcall
arpl
dec
push
test
mov
push
jno
sbb
sub
out
add
fcmovu
adc
sub
hlt
sbb
xor
pop
movsl
out
je
jbe
cmp
jno,pt
fdivrl
mov
mov
dec
push
pusha
inc
sub
data16
jmp
mov
adc
shll
fucom
adc
lcall
in
or
arpl
outsl
ret
popa
jno
mov
fs
scas
pop
out
pop
xor
shl
ljmp
push
int
mov
xchg
mov
sbb
pop
cwtl
loop
out
sbb
jle,pt
bound
inc
ret
mov
mov
es
mov
mov
fsts
push
ja
fsubr
int
aas
mov
mov
lret
lock
push
or
pop
aaa
sub
test
int
mov
orb
cs
xchg
stos
inc
xchg
sti
in
add
cwtl
shrb
push
jbe
mov
and
loopew
mov
fwait
cli
fistps
popf
aas
addl
addr16
push
add
jl
pop
mov
lds
mov
inc
lds
arpl
inc
sbb
into
or
pop
outsb
sbb
dec
xlat
in
inc
cmp
sahf
enter
jle
jle
movsl
mov
orb
mov
dec
inc
mov
push
pushf
mov
daa
xchg
inc
inc
subl
sarl
mov
jo
sbb
push
sub
enter
mov
leave
push
jle
jno
imul
popf
dec
xor
data16
repnz
and
dec
lods
or
push
jbe
push
dec
xchg
xlat
pop
lds
adc
stos
mov
mov
lret
pop
inc
arpl
xorl
mov
aaa
fdivs
ficomps
nop
sub
sbb
divb
cmp
lret
inc
sbb
mov
pop
push
pop
insl
mov
pushf
sahf
cmp
cmpsl
movsl
pop
fistl
ss
cmp
std
jbe
rcrb
add
lods
pushf
xchg
iret
into
test
mov
dec
lret
xchg
aam
xchg
or
push
or
adc
push
cli
mov
ret
std
and
cwtl
pusha
inc
aaa
fwait
repnz
add
xchg
loop
xchg
subl
xchg
push
sbb
pop
jl
sbb
mov
xorl
mov
jbe
cld
mov
call
pop
out
xchg
arpl
out
dec
movb
jbe
lret
and
add
or
sub
mov
lods
pop
adc
adc
fcmove
pop
cld
arpl
pop
add
ret
fcomp
push
jl
sbb
outsb
cmpsl
cmp
xchg
popf
ss
pop
adc
sub
cmp
loopne
nop
es
pop
pop
outsl
imul
into
jl
jmp
cmc
cmp
call
je
scas
mov
add
dec
inc
stos
xor
mov
sub
xchg
ret
inc
clc
lahf
pop
and
nop
jg
jnp
add
sub
ljmp
mov
je
ljmp
adc
ret
mov
jo
cmp
cld
inc
jae
out
gs
mov
incl
pop
adc
movsb
nop
xor
std
cmpsl
fildll
mov
leave
mov
xlat
pshufw
rolb
in
test
clc
and
push
push
jns
subl
inc
rolb
xor
sti
lods
clc
cltd
xor
cmpb
in
mov
jl
or
ja
shr
cld
ljmp
fs
out
subl
lds
rorb
in
lea
mov
or
scas
in
fcomi
fs
scas
cmp
mov
or
popf
xor
out
inc
pop
xor
fstpl
mov
mov
ficomps
cmp
test
mov
insl
pop
fwait
mov
or
jmp
rdpmc
push
dec
dec
cmp
mov
rcll
stc
insb
popf
mov
pushf
push
jne
push
mov
lock
push
push
mov
fidivrs
pusha
xchg
or
ret
mov
mov
pop
jns
das
jg,pn
xchg
cmc
mov
dec
mov
adc
inc
fistpl
add
cmp
lcall
or
adc
lret
icebp
hlt
inc
sbb
in
sub
xchg
and
out
fimuls
adc
xchg
ficomps
push
movsl
inc
adc
xchg
inc
das
or
stos
enter
sbb
cmp
xor
cwtl
arpl
fldl
mov
dec
jns
nop
inc
mov
sub
imul
sbb
fisubl
and
repnz
mov
ret
mov
lret
mov
push
sub
and
mov
divl
jp
test
inc
push
push
xchg
mov
loope
gs
or
aad
std
xorb
add
adc
mov
mov
lods
dec
xor
sahf
push
imul
loop
loop
sub
jl
hlt
repnz
cmp
xchg
jb
mov
in
dec
fcmovbe
mov
or
pop
add
scas
fisubs
cld
lods
fld
or
mov
mov
lahf
dec
xor
mov
addb
aas
and
in
jbe
stc
mov
jo
lcall
jnp
iret
outsb
xchg
ds
mov
cs
out
rorb
stc
jno
mov
dec
xchg
movlps
adcl
jmp
push
adc
test
lods
arpl
inc
loop
in
sbb
sub
inc
add
into
ret
in
adc
pop
jno
push
repz
sub
lea
jmp
pop
push
xchg
xlat
sbb
scas
mov
inc
mov
push
xchg
addr16
jne
push
jecxz
loop
pop
mov
das
push
mov
mov
aaa
push
inc
xor
xor
dec
outsb
rolb
enter
sub
fdivs
ret
mov
scas
and
das
and
xor
lret
dec
xor
push
fidivrs
into
in
rcrl
jge
test
fs
sub
push
dec
cmp
dec
fldenv
xorb
fstpl
add
push
and
loopne
mov
dec
push
pop
lret
or
sahf
push
pop
push
aaa
push
movl
xor
stos
into
lret
les
mov
jb
pop
add
sub
xchg
pop
xchg
mov
push
popf
and
scas
dec
cmp
lods
or
pop
sti
les
mov
pop
fisttpll
and
pop
fstps
cmp
fstpl
loope
or
jmp
mov
lea
push
adc
daa
pusha
rclb
gs
xor
pusha
cmp
fs
adc
lds
push
andl
out
add
sbb
pop
mov
mov
fistpl
pop
stos
or
daa
sbb
inc
mov
jge
in
jg
fs
dec
add
cmp
or
out
sub
xor
out
jns
xor
into
cmp
pop
loope
push
push
mov
mov
decl
adc
and
adc
or
jle
or
call
dec
sbbl
call
sbb
ret
cs
iret
lcall
dec
pop
lea
xchg
mov
and
paddq
cmp
mov
sbb
mov
lahf
and
inc
lcall
and
mov
gs
xchg
js
and
mov
loope
mov
pop
js
xor
addr16
icebp
inc
das
rolb
das
mov
sti
pop
aam
and
loope
cmc
mov
lds
push
dec
jne
dec
aad
in
test
test
cltd
stos
and
cmp
mov
pop
mov
xchg
pop
out
shll
jg
dec
jns
mov
jge
adc
rolb
dec
pop
inc
or
cld
cmp
inc
fldt
lods
test
push
xchg
movlhps
push
dec
daa
dec
sti
stc
dec
or
loope
xor
pop
in
pop
cld
pushf
cmp
mull
adc
mov
arpl
xorl
push
mov
stos
dec
cmp
subl
adc
andb
push
or
and
jge
xchg
push
out
mov
divl
and
dec
repnz
and
stos
cmp
test
cmp
pop
mov
xchg
sub
inc
jnp
or
jmp
leave
adc
ret
mov
lea
xchg
sbb
jg,pt
aad
jae
cmp
mov
xchg
aaa
or
popl
aam
mov
leave
mov
in
jecxz
imul
jno
sbb
lea
mov
cwtl
sahf
sbb
std
aas
stos
xor
rorl
shll
dec
jbe
mov
test
addr16
cltd
cmp
xchg
xor
lcall
data16
jae
flds
ror
jp
xchg
sub
jne
bnd
out
int
lds
cmpl
xchg
fwait
mov
push
push
jmp
outsl
test
mov
dec
push
ss
cmp
and
fwait
ret
pop
mov
jo
or
mov
or
mov
icebp
and
cwtl
sub
lea
in
sub
aas
fldenv
daa
cmp
dec
xor
out
mov
inc
adc
out
leave
and
pop
scas
pop
mov
jb
outsb
shll
dec
pop
mov
loop
popf
cmp
jo
movsl
mov
xchg
ficoml
xchg
jo
js,pn
xchg
scas
popf
sub
xchg
pop
rclb
or
dec
nop
arpl
je
push
mov
cmpsl
add
mov
sbb
mov
pop
add
jae
push
arpl
or
push
jb
lock
int
sbb
les
pushf
pop
jae
les
cmp
or
pop
xchg
inc
movsb
xchg
push
xchg
ds
in
movsl
xor
mov
mov
adcl
lods
mov
mov
jg
push
loope
outsl
xchg
cmpsl
roll
sti
xor
add
lock
cmc
push
rcll
pop
outsl
sub
pop
pop
cli
cwtl
rorl
mov
mov
roll
test
ret
nop
sbb
xchg
push
push
repnz
pop
js
or
mov
sub
in
and
aaa
xlat
addr16
xchg
call
and
cmp
inc
mov
repz
scas
mov
xchg
cld
jg
std
pop
sahf
mov
push
xor
inc
push
push
call
ret
insl
lret
mov
int
hlt
in
enter
add
xor
mov
and
push
jns
xchg
in
insb
cli
out
out
sbb
scas
je
add
mov
push
push
enter
sbb
dec
sbb
inc
fs
shll
push
push
repz
ja
call
inc
add
cmp
lds
add
jmp
out
and
popa
mull
add
jae
xchg
and
adc
inc
mov
addb
loopne
ret
iret
xor
mov
inc
xchg
xor
sbb
adc
add
rcl
jae
sbb
dec
and
push
xchg
fstl
repnz
dec
mov
cwtl
push
lods
scas
dec
addr16
push
adc
movb
mulb
inc
cltd
movsl
rcr
into
andb
inc
sbb
sub
repz
cmp
ljmp
scas
mov
cs
xor
das
lahf
push
adc
lret
aam
stc
mov
jnp
pop
arpl
sub
insl
pop
inc
sbb
cmpsb
mov
js
fstps
jl
adc
je
repz
pop
and
push
enter
shr
mov
in
fsubrl
jmp
sti
ret
dec
pop
cwtl
adc
jge
test
lds
popf
ds
jmp
pop
mov
nop
in
sahf
inc
xchg
repnz
imul
mov
lahf
push
stc
push
dec
in
adc
mov
movsl
aad
in
fstpl
dec
stos
mov
ss
push
xor
inc
das
mov
cmp
out
sub
sub
insb
jne
add
push
mov
push
subb
loop
sub
add
or
mov
sub
adc
testl
clc
out
insl
lds
data16
xor
es
lds
mov
jae
pusha
pop
in
adc
push
lret
jle
push
or
push
xor
lret
pop
leave
loop
call
dec
or
jo
pop
mov
mov
mov
jmp
jmp
jg
or
mov
leave
mov
fisttpll
sub
jo
gs
xchg
test
inc
xor
pop
enter
xlat
in
mov
popf
adc
lods
inc
leave
or
xchg
mov
fsubrs
inc
rorb
jge
jmp
cmp
mov
sbb
cli
mov
loop
fs
mov
cmpsb
adc
shll
aaa
orl
dec
cmp
in
jl
roll
insl
scas
xchg
inc
out
jl
inc
push
add
leave
sbbb
popf
bound
cmp
aad
adc
fstps
sub
xor
shll
pop
pushf
repz
adc
subb
std
and
pop
jbe
test
int
inc
pop
sub
imul
pop
int
cltd
imul
xchg
push
mov
jne
dec
mov
or
call
xchg
fwait
ret
and
shl
lahf
lds
fs
fldl
xor
cld
ficompl
fidivrs
das
dec
pop
rcrl
das
sub
adc
lock
or
sbb
faddl
gs
ljmp
lret
pushl
stc
enter
jo
insb
add
lcall
loopne
cmp
jmp
add
test
mov
mov
ds
outsl
cli
cmp
push
cld
es
push
out
imul
adc
push
xchg
cmp
pusha
and
inc
data16
jmp
jno
cmc
adc
dec
cwtl
mov
data16
iret
gs
into
imul
stc
pusha
ss
mov
decb
div
fnstsw
mov
jg
ljmp
dec
jbe
cmp
imul
rol
rclb
int3
fidivs
xchg
mov
xor
aad
lods
int
push
ljmp
cltd
xor
mov
and
lock
adc
shll
bound
pop
cmp
fs
vpunpckhbw
into
xor
and
xor
lea
mov
pop
mov
setno
and
add
pop
fists
dec
adc
imul
stc
ret
in
ret
push
cwtl
mov
and
loope
ss
add
pop
daa
lds
pop
sbb
xchg
lret
cmp
add
aad
lret
rcr
stc
out
sub
test
ror
adc
ficomps
pusha
push
inc
jl
lods
je
cmpsl
scas
mov
mov
adc
dec
pop
add
xchg
rclb
cwtl
test
fdivrp
cld
mov
notb
xor
pusha
outsl
popa
outsl
adc
and
mov
lods
adc
ds
and
movsl
mov
adc
cmp
mov
das
mov
fcoml
dec
pop
pop
jecxz
scas
mov
add
sti
ja
ds
pop
out
mov
clc
mov
insl
lret
jbe
cmp
pop
dec
adc
sbb
in
popa
pusha
fistps
punpckhdq
and
gs
leave
pop
adc
mov
test
repz
loop
aaa
sti
push
arpl
lret
scas
mov
lock
xor
jmp
stos
and
adc
push
in
add
lds
adc
adc
aaa
test
pop
ja
xchg
xor
xchg
pop
sarl
lahf
adc
mov
inc
test
les
push
cli
aas
insb
into
sub
cmpsl
push
xor
push
mov
leave
data16
shll
shlb
inc
pop
in
inc
or
inc
push
popa
mov
push
loope
adc
jb
sti
or
push
bound
lds
daa
dec
jae
sbb
pop
imul
js
lret
dec
in
dec
movsl
push
lods
lcall
rep
xchg
xlat
lds
imul
cmp
push
jmp
sub
mov
or
and
iret
hlt
movsb
loop
jae
js
mov
pop
xor
sbb
pop
and
addr16
mov
pop
out
popf
jo
adc
aaa
cmp
pop
adc
xlat
fisubrl
pop
sar
mov
mov
fistpl
mov
xor
lahf
mov
and
in
shl
inc
cltd
lcall
cld
jb
addl
jns
mov
and
pop
in
les
xor
adc
push
xor
cmp
jmp
mov
mov
pushf
jb
jl
dec
mov
cmp
inc
jbe
movsb
xchg
and
repnz
jle
jl
mov
repnz
add
ja
add
or
mov
fdivr
xor
repnz
jl
dec
fcmovnb
cltd
push
add
mov
cmc
movsb
adc
sub
out
js
imul
fs
hlt
or
call
add
pop
inc
adc
jb
fnstsw
jns
inc
call
test
lret
mov
in
jo
jns
pop
add
jecxz
sub
lds
std
cs
and
or
lods
pop
xor
stos
sub
test
xchg
inc
cmp
or
and
mov
fs
push
sub
sarl
cltd
xchg
sbb
adc
inc
xchg
inc
xchg
or
add
xor
sbb
jecxz
out
pop
push
lret
aad
lock
fwait
jl
or
and
int3
leave
push
loope
mov
dec
add
and
test
pop
push
das
popa
outsl
loope
incb
pop
mov
push
xor
inc
ret
ss
scas
divb
and
push
jl
adcb
ds
or
jns
test
pop
dec
mov
xor
jb
mov
push
dec
mov
mov
xchg
divl
insl
mov
imul
jmp
call
mov
xchg
dec
icebp
cmp
or
mov
nop
xchg
add
push
jbe
fmul
inc
xchg
xlat
or
enter
pextrw
jb
pushf
jecxz
pop
inc
repnz
les
mov
mov
in
scas
add
mov
cld
stos
jl
loop
mov
adc
adc
mov
xlat
push
inc
dec
xchg
iret
inc
scas
push
lahf
enter
mov
inc
lds
data16
cmp
inc
add
stos
fisttps
mov
xchg
loop
int
add
cmp
push
jae
stos
pop
mov
outsl
xlat
ss
ret
jge
sbb
cmp
or
dec
inc
pop
sbb
fcoml
mov
jae
loope
jg
iret
xorb
push
fwait
sbb
pop
notl
sbb
pop
mov
sub
mov
bound
mov
movsbl
mov
mov
mov
mov
and
mov
and
movsl
stos
xor
insl
jae
lcall
loope
add
dec
inc
stos
ret
push
and
sahf
pusha
push
push
loop
xor
call
add
dec
out
mov
and
dec
jnp
lcall
sti
pop
xchg
aad
insb
lret
cs
mov
pop
shl
or
ljmp
adc
pop
mov
cltd
and
pusha
iret
add
mov
xor
shl
mov
mov
mov
inc
add
push
sbb
sbb
loope
mov
adc
or
xchg
stos
dec
fbstp
pop
xor
cmc
test
ja
lods
test
frstor
ret
and
stos
jnp
out
ja
pop
mov
addl
movsl
pusha
jne
dec
jae
xchg
imul
sbb
out
mov
ja
inc
xor
adc
push
dec
xchg
bound
xchg
jp
fwait
sbb
cmp
mov
cmc
mov
mov
out
mov
fwait
movsl
aad
adc
or
or
fnstenv
xchg
inc
jns
adc
or
cbtw
outsl
test
out
aad
sti
clc
cmp
loope,pt
sbb
movsl
or
inc
dec
imul
iret
jbe
pop
jae
jbe
dec
jmp
ds
mov
shrb
xchg
or
mov
inc
les
xor
mov
cwtl
inc
out
lods
jo
xrelease
add
ljmp
jb
sub
clc
fs
pop
ljmp
pop
cmpsb
je
push
dec
jecxz
add
daa
sbb
jg
sbb
pop
out
push
cmpsb
mov
ficompl
ja
inc
enter
sbb
push
mov
push
cmc
aad
jmp
xor
sub
lcall
dec
adc
push
addb
adc
mov
pop
jbe
roll
cwtl
xchg
cmp
push
adc
test
cmp
clc
lcall
jecxz
jne
inc
or
hlt
mov
cmp
sub
into
xchg
dec
cmp
pop
inc
inc
xchg
push
cmp
ror
mov
lret
jns
movl
pop
int3
add
inc
push
sahf
in
icebp
sti
sub
dec
sub
call
push
imul
cmp
ja
cmpsb
jecxz
popf
push
daa
int
adc
mov
es
inc
aam
dec
fimull
sbb
dec
and
mov
mov
cmp
loope
ja
inc
mov
ficomps
xor
int
jbe
jb
mov
cs
js
sub
mov
in
jo
aaa
cs
mov
sbb
cli
sarb
aam
dec
mov
aas
push
sti
sbb
shlb
movsb
mov
fdivl
repnz
sub
jae
sbb
and
test
cmp
adc
lret
inc
inc
cli
jo
pop
hlt
mov
repnz
fwait
in
imul
push
adc
pop
xchg
ret
mov
jae
cld
aad
pop
xchg
sub
xlat
push
pop
fdivl
pop
movsb
rclb
sti
fadds
outsl
xchg
mov
idivl
add
inc
shlb
sub
popf
push
frstor
ss
std
xor
or
push
iret
cmp
adc
in
mov
enter
jle
dec
dec
fiaddl
xchg
inc
dec
jnp
scas
push
sub
movsb
enter
push
pop
cmp
mov
jbe
bound
loopne
inc
enter
scas
mov
push
call
sbbl
jle
push
mov
hlt
sbb
fsubrl
sbb
cmpsb
cli
lcall
cmp
dec
pop
into
adc
rorl
fdivl
imul
jo
jo
cmpl
mov
incb
sub
mov
mov
inc
std
ljmp
pop
xor
dec
es
insb
insb
jge
sub
sbb
popa
imull
scas
scas
lahf
pop
cmc
test
jmp
pusha
add
imul
xchg
ds
rcrl
jb
add
lcall
movsb
adc
and
xchg
movsb
pop
and
or
lea
out
lret
mov
dec
data16
xor
movsb
out
sbb
mov
pop
jge
dec
js
sub
dec
push
sub
ret
loop
int
outsb
orb
test
inc
sbb
mov
sub
mov
xchg
xchg
scas
jl
sub
and
test
xor
sub
stc
icebp
pop
test
and
add
movsb
roll
jae
sbb
add
movsl
jno
push
jnp
push
and
push
mov
mull
inc
int
fildll
or
lret
rcr
dec
aad
pop
cmpsl
ja
mov
mov
mov
outsb
jl
insl
dec
inc
adc
push
add
cmp
mov
testl
push
lret
subl
pop
es
dec
push
sbb
lods
xchg
hlt
int3
push
jecxz
xchg
sub
hlt
nop
mov
cmp
cmc
mov
cmpsl
sub
test
push
add
mov
cmp
hlt
jns
icebp
push
ds
in
or
lock
loop
push
cmp
push
xchg
or
movsl
dec
or
std
push
jecxz
insw
xor
dec
rdtsc
inc
stos
stc
pop
mov
cmpsl
dec
mov
bnd
push
imul
push
xchg
cmp
xor
popa
and
cmpsb
popf
hlt
repz
in
ljmp
and
mov
cmpl
jae
push
movsb
jecxz
mov
or
mov
push
aad
out
xchg
sbbl
out
insb
insl
enter
imul
push
sbb
hlt
in
popf
jp
xor
loopne
pop
cmpb
enter
loop
cltd
push
loopne
sbb
int
arpl
les
and
add
aam
in
xchg
and
jmp
add
add
dec
jb
imul
in
cs
mov
or
in
xchg
pop
xor
mov
std
or
sub
stos
or
rcl
dec
stc
enter
aas
imul
jge
sbb
inc
and
add
jnp
mov
add
pushf
in
nop
jns
add
testl
pushf
test
mov
iret
sub
pop
mov
aam
cltd
xlat
icebp
sbb
lds
adc
jl
mov
push
xlat
inc
ret
jmp
ret
cmpsl
sub
fs
jae
pop
cmpsb
imul
cwtl
push
icebp
lea
out
int3
mov
popa
insb
outsl
adc
adc
mov
fstpt
stos
xor
mov
cli
int
cmp
sar
jmp
outsl
stos
inc
dec
outsb
sbb
xchg
cmc
dec
test
cmp
jg
sub
inc
ud2
popa
adc
sbb
mov
ljmp
repz
and
jae
mov
shlb
js
test
stos
test
and
rep
insl
jp
xchg
or
cmp
sahf
insb
rolb
js
mov
adc
insb
mov
enter
dec
ss
or
mov
push
inc
jl
lods
dec
push
pop
mov
jl
dec
jae
shrb
out
imul
es
fnstsw
or
push
fs
pop
rclb
sbb
ret
mov
imul
or
lock
push
ss
mov
mov
mov
dec
jp
frstor
sbb
or
mov
push
mov
mov
sbb
dec
cmc
cmp
sbb
leave
mov
cmp
imul
jle
in
fucom
push
mov
push
sbb
and
sub
enter
xor
inc
sub
mov
pop
outsl
icebp
int3
mov
loopne
sub
xchg
in
inc
adc
or
cli
cli
push
push
bound
aam
ret
or
test
dec
add
push
cli
je
out
mov
loope
pop
push
cmp
jo
mov
jae
push
bound
adc
gs
mov
addr16
les
test
jg
dec
ret
add
add
lea
lret
fnstcw
xor
cmc
inc
xchg
xchg
jmp
pop
bound
ljmp
jbe
repz
fsubs
test
mov
pop
movsb
into
addr16
push
mov
mov
ret
mov
mov
shlb
pop
int
jo
cld
xchg
inc
add
scas
cmpsb
jnp
shl
push
dec
mov
fidivl
add
or
mov
mov
push
cmp
fs
imul
cltd
mov
dec
and
in
sub
outsl
pop
and
mov
cmp
not
js
fs
mov
jno
jg
jne
lds
daa
xchg
int3
daa
mov
and
je
loopne
jno
mov
inc
stos
pusha
int
cmc
push
bound
mov
aaa
int
pop
bound
pop
xor
cmp
adc
pop
fdivs
inc
mov
jmp
out
xor
jp
movsl
std
jbe
lea
mov
mov
mov
fists
insb
adc
push
dec
ss
jecxz
and
dec
fldcw
fwait
sub
lods
lret
ret
cmp
mov
pop
or
xchg
adc
shrl
mov
adc
sbb
jecxz
in
xchg
fistpl
rcll
fcmovnb
leave
push
pop
dec
xor
xor
loopne
push
sti
test
js
fstpl
jecxz
jecxz
fisubrs
adc
xchg
add
bound
sub
and
push
repnz
xchg
rclb
insl
inc
xchg
sub
adc
scas
lret
fsubrs
jg
shl
xor
sub
push
repz
stos
push
cmp
mov
js
addl
mov
and
adc
leave
mov
loop
mov
in
mov
push
out
push
lea
into
lcall
stos
mov
aam
lahf
push
jle
cli
mov
scas
and
push
xor
push
lret
cli
add
in
push
idivl
mov
ja
push
pop
pop
mov
dec
xchg
sbb
xchg
mov
pop
ss
push
arpl
dec
lahf
fsub
mov
or
int
psllq
call
jl
ljmp
xor
cmp
call
mov
add
leave
pop
cwtl
shl
jecxz
dec
ljmp
adc
dec
dec
sarl
mov
jae
dec
out
push
repnz
into
xor
rcl
mov
dec
ja
cs
sub
divb
add
pop
push
fwait
shll
and
pop
xor
stos
inc
cli
add
jns,pt
jns
lret
jne
adc
push
adc
stos
ficompl
test
add
lahf
ljmp
jge
lret
push
popa
pop
fnsave
in
xchg
xor
xchg
jae
pop
push
pop
fdivs
inc
adc
or
popa
adc
cmpsb
pop
popf
pop
mov
inc
cmpsb
and
enter
repnz
cmp
cmpsb
aaa
or
push
lea
mov
add
loop
push
lods
mov
mov
xlat
or
les
add
push
push
mov
sbb
push
mov
push
mov
xchg
je
mov
ds
arpl
sahf
sub
fwait
add
sbb
dec
jbe
inc
mov
jecxz
outsl
stos
cmp
cltd
pop
dec
je
mov
adc
and
pop
scas
scas
xlat
xchg
sub
leave
lahf
dec
fs
jmp
outsb
pop
adc
adc
jmp
fisubs
test
outsl
xchg
fiadds
add
sub
mov
mov
fsubrl
jge
stos
stos
out
jo
das
shr
or
stos
addr16
xor
test
sub
jo
fwait
jmp
fnstsw
sub
mul
sub
xchg
fmull
jmp
aas
int
add
xchg
movsl
cs
pusha
xor
mov
mov
mov
cmp
mov
fxch
out
je
or
dec
mov
iret
mov
sbb
lahf
lcall
sarb
xor
cmpsl
insl
lea
xchg
cmp
ret
cmp
add
shlb
jo
and
mov
mov
jle
lcall
fs
shl
cwtl
sbb
outsb
out
mov
xchg
out
or
push
mov
out
je
mov
rorb
test
sahf
fwait
add
and
xor
cmp
inc
sub
sub
lods
insb
or
repz
mov
nop
nop
sub
testl
mov
mov
jmp
lahf
adc
add
inc
cmp
dec
fwait
ret
or
cmp
mov
aas
mov
pusha
pop
jno
out
leave
mov
test
movsl
push
sub
shll
cmp
test
sti
imul
jle
add
fsubrl
bound
add
dec
inc
xchg
lahf
xchg
adc
xchg
pop
mov
popf
mov
pop
jnp
test
xchg
add
pop
or
insb
out
and
cwtl
subl
push
cmpsb
inc
and
jae
loop
popl
cmpsb
mov
sti
jle
cwtl
sti
jg
mov
mov
or
mov
repnz
out
stos
jp
or
and
jno
cwtl
hlt
xlat
adc
jbe
pushl
mov
and
pushl
movsb
je
dec
rclb
adc
data16
je
push
push
pop
lods
jge
das
test
test
push
ljmp
mov
scas
pop
dec
jg
loopne
or
pop
mov
cmp
mov
pop
repnz
in
cmp
scas
or
lods
rcrb
push
into
pop
addr16
or
cmp
pop
dec
lcall
mov
push
mov
sbb
push
mov
leave
cmp
mov
push
test
or
addr16
mov
and
jecxz
mov
cmp
outsb
xchg
sub
jno
js
cmp
add
imulb
shlb
dec
xor
clc
in
xor
pop
adcl
negb
outsb
shlb
xor
call
stos
inc
outsl
ret
push
jo
dec
add
xchg
ret
pop
xchg
mov
cmpb
js
sbb
nop
aas
scas
mov
dec
sub
push
xor
dec
or
cmpsl
xchg
fwait
mov
adcb
xchg
inc
mov
adc
stos
incb
imul
je
repz
call
mov
jl
in
and
cmp
adc
push
pop
in
xor
ss
repnz
push
popa
and
add
push
mov
or
movsb
jb
and
add
mov
cmp
rclb
adc
inc
xor
mov
mov
mov
sub
jg
dec
enter
scas
fimull
pop
add
sbb
add
cwtl
xor
sub
outsl
cmp
cmpsb
cld
cmp
ror
mov
cmp
jbe
jl
shr
or
add
dec
adc
test
sahf
int3
in
sbb
in
add
je
shrb
inc
adc
pop
xchg
aaa
imul
jbe
fwait
mov
in
lret
das
cmpsl
negb
mov
test
pop
lret
stc
enter
aaa
add
into
sbb
inc
test
xor
aad
pop
mov
int
lods
lods
std
jl
xchg
pop
and
pop
push
fmuls
jnp
mov
sbbb
xor
and
sbb
movsl
fisubs
push
cmp
aaa
inc
int3
fdivrl
and
fists
movl
or
imul
cs
jg
inc
clc
mov
pop
ret
push
dec
add
mov
mov
dec
pop
xchg
or
aas
rclb
std
movsl
sbb
jb
xlat
je
cmp
add
dec
lret
es
or
subb
sub
xor
lahf
inc
inc
outsl
imul
jg
call
and
mov
fdivs
cmp
adc
call
stos
mov
jge
mov
std
sub
inc
mov
xchg
cmp
cmp
xchg
xor
and
sbb
in
loope
rep
pslld
or
xchg
scas
sbb
stos
mov
mov
xchg
outsb
or
lea
mov
add
adc
fcoms
xchg
int
xor
test
cli
or
inc
sbb
dec
jo
mov
adc
lds
stc
push
pop
pop
and
enter
insb
popa
rorb
lock
push
or
repnz
jmp
ret
dec
sar
cmp
dec
lret
xchg
xor
lret
mov
lds
xchg
dec
mov
and
push
addr16
jno
xor
dec
or
xchg
cmp
in
outsb
jnp
mov
cs
push
sbbl
lahf
push
rcll
jns
cmp
pop
or
ds
mov
fsub
stos
inc
movsl
pop
inc
dec
ret
mov
xchg
out
pop
rcl
xchg
insb
xchg
inc
ja
fildll
mov
dec
adc
xor
mov
or
add
shl
xlat
xorb
push
pop
in
aam
xchg
jae
notl
ficoml
aam
xor
scas
dec
lcall
stos
cmpsb
hlt
out
xchg
cmp
ficomps
rcl
xchg
ror
iret
lods
fistps
dec
push
ret
repnz
adc
pop
cmp
mov
out
test
ljmp
or
jo
dec
loop
mov
dec
sbb
and
ss
sbb
jno
int
jns
in
mov
xchg
daa
aaa
xor
xor
mov
mov
or
cmp
mov
push
jg
mov
lea
pop
sbb
lret
and
stos
xor
imul
or
push
fistl
sub
inc
shlb
mov
jge
js
add
jl
adc
fdivrl
hlt
push
or
rcll
sub
push
mov
bound
fwait
adcl
popf
xchg
push
jae
andb
int
adc
jp
pop
movsb
or
fidivl
or
repz
cmpsl
je
test
jne
faddl
in
mov
inc
pop
bound
aaa
sub
fwait
adc
cmp
jns
lods
dec
loopne
push
imul
fisttpll
lods
push
js
cmp
mov
cmp
aad
rcrb
stos
into
fwait
aaa
xor
mov
aam
ret
sub
inc
xor
jb
test
leave
adc
add
fcomps
popf
cmp
fdivrl
lea
xchg
push
push
jge
sbbb
cmpsb
popa
imul
pop
or
lret
test
adc
jnp
loope
cmc
cmp
cltd
stc
cmp
xchg
or
dec
cmpsb
ret
sbb
adc
dec
rcll
out
pop
leave
arpl
xchg
xchg
cmp
fucom
adc
leave
pop
cmpsl
pop
adc
cmp
das
scas
mov
push
lcall
jmp
jbe
out
xchg
and
push
jle
into
insb
xchg
mov
lock
xor
icebp
push
stos
xchg
push
out
sbb
mov
mov
adc
pop
mov
adc
ret
pop
mov
or
inc
aas
das
jns
nop
push
enter
orl
push
lahf
ret
fwait
push
sahf
cmp
jecxz
mov
xchg
lret
hlt
dec
mov
ljmp
xchg
jne
fldl
in
cmp
std
test
push
xchg
push
imulb
dec
es
adc
sbb
in
bound
cmp
popa
fsubs
adc
mov
dec
xchg
add
loop
add
shlb
mov
daa
xchg
inc
pop
lret
mov
inc
fidivl
out
and
add
insl
jnp
in
mov
test
enter
jl
std
call
roll
cwtl
iret
out
jbe
stos
lret
fdivr
pop
loopne
mov
sub
mov
popf
scas
xchg
arpl
mov
inc
pop
leave
or
jmp
push
pop
aam
xor
mov
cmp
or
decl
ret
push
mov
add
pop
or
mov
push
int
and
aam
jg
mov
xchg
push
mov
dec
lahf
pop
cmpl
push
cmp
xor
ret
or
add
pushf
push
add
out
push
mov
jmp
nop
mov
rcrl
rorb
push
jnp
sbb
mov
inc
jge
adc
andl
mov
out
push
nop
fs
or
mov
dec
lds
cmp
mov
sbb
mov
pop
lods
mov
cltd
or
stos
pop
sbb
or
clc
scas
clc
sbb
ds
sbb
es
mov
mov
mov
sub
and
bound
push
enter
mov
and
mov
dec
ja
lcall
lret
mov
dec
sub
das
mov
test
test
pop
shl
push
popa
shlb
xor
and
aam
xchg
push
insl
loop
lds
pop
push
les
or
movsb
stc
mov
shll
das
sbb
js
imul
cwtl
jo
dec
push
js
pop
jo
into
inc
inc
test
jp
fidivrl
divb
mov
cmp
dec
sti
les
movsb
and
push
fnstenv
sub
imul
testb
insl
das
xchg
fstl
cs
int
lahf
sub
les
lret
leave
mov
and
jmp
and
dec
add
insl
push
fidivs
das
movl
xorb
fwait
sub
and
push
repz
add
dec
inc
mov
mov
filds
lcall
fistpll
icebp
xchg
sbb
loop
sub
test
inc
dec
mov
jb
mov
or
push
pop
fndisi(8087
bound
cmc
mov
cmp
dec
aaa
jnp
leave
push
push
stc
cltd
sub
jg
insl
js
cwtl
mov
push
pusha
aaa
das
es
xor
ficoms
dec
popf
icebp
in
xchg
xchg
int3
xchg
cmp
mov
fists
lock
mov
pop
stc
popa
ret
rcrl
dec
mov
loope
push
call
inc
push
jle
add
inc
shrb
push
dec
syscall
popf
movsl
mov
and
sub
jno
adc
cmp
inc
sub
in
sub
movsb
mov
pop
adc
dec
imul
call
and
xor
dec
pop
leave
mov
call
mov
or
xchg
jp
std
jns
jae
fidivl
aam
cmp
sbb
out
js
xor
dec
sub
int
cmpsl
cmpb
outsl
inc
cmpsb
xchg
xor
popf
repnz
int3
loop
and
je
enter
test
adc
js
inc
sub
inc
and
call
icebp
std
cmpsl
insl
andl
leave
jl
popf
aam
movsb
xchg
out
mov
sub
fstl
and
jae
add
mov
xchg
roll
mov
dec
dec
or
hlt
sbb
fistl
fadd
dec
lret
cmp
movsl
int
ficompl
in
pop
adc
mov
rclb
imull
jnp
fcoml
in
dec
sub
and
in
iret
jp
lods
dec
neg
imull
mov
jmp
mov
cli
xor
leave
xchg
xrelease
adc
push
xchg
dec
sbb
cmp
not
aas
add
insb
mov
jo
cmp
mov
std
cmc
push
outsb
inc
push
jne
push
int3
inc
pop
xchg
imul
mov
and
mov
adc
icebp
int3
cli
xchg
and
out
sbb
cmp
mov
pop
mull
frstor
push
mov
lret
mov
roll
imul
jmp
or
fisubl
mov
stos
cmp
icebp
int
shrl
jecxz
lahf
dec
jecxz
mov
mov
sti
cli
orb
daa
test
and
add
bound
rcll
inc
popa
ljmp
and
push
mov
imul
and
or
ds
test
and
xchg
or
addl
sahf
scas
add
leave
adc
jno
popa
push
rolb
mov
dec
push
insb
std
inc
cwtl
mov
mov
test
inc
xlat
outsl
das
fcomp
mov
out
mov
mov
sbb
jg
sub
ds
gs
int3
jecxz
lods
fs
fcmovb
out
jb
sti
jp
push
sarb
int
dec
orl
add
call
cltd
or
stc
xchg
push
dec
push
sbb
adc
mov
xchg
pop
push
int
jl
add
and
cmp
rcrb
add
jae
sub
and
loope
mov
xchg
cs
js
lock
mov
or
xlat
loope
icebp
insl
daa
clc
pop
jne
jecxz
cmp
shrb
xchg
in
adc
cmp
idiv
out
hlt
push
aaa
push
ficoml
iret
out
sti
pop
inc
imul
scas
push
imul
push
and
dec
arpl
mov
stos
rclb
mov
sbb
adc
int3
incl
pop
jp
dec
shl
push
xor
xchg
mov
jb
rorb
jle
xor
fwait
lock
mov
repnz
jno
addb
fcmovnbe
and
enter
imul
add
ds
push
push
testb
std
call
lds
fldl
daa
sbbl
inc
adc
into
mov
inc
scas
pusha
xchg
add
mov
pop
mov
mov
jge
loope
mov
mov
rclb
popf
sub
hlt
loop
dec
or
xchg
aad
lods
lock
std
mov
out
mov
jmp
fcompl
out
lock
push
daa
inc
enter
cmc
int
sub
xchg
outsb
or
inc
mov
adc
sti
nop
push
jb
jae
dec
pop
out
and
lock
call
inc
divl
sbb
test
imul
data16
xchg
aam
lret
icebp
lods
add
movsl
std
cli
dec
sti
out
icebp
lods
test
mov
pop
mov
mov
pop
fwait
das
popa
cmp
and
sti
gs
jo
push
addl
nop
shll
ljmp
mov
lds
pop
sbb
jle
aam
stos
or
mov
cli
faddp
mov
mov
pinsrw
mov
icebp
xor
xchg
sbb
push
mov
jno
fiadds
mov
popa
enter
lret
imul
xlat
nopl
dec
leave
adc
lret
pop
aam
into
jl
loopne,pt
fsub
int
outsl
cmpsl
nop
adc
test
xchg
cwtl
fs
std
out
orl
sbb
dec
xor
insl
push
or
jecxz
aaa
orl
jno
cmp
mov
push
ja
sub
ret
clc
jp
xor
jne
mov
test
sub
dec
adcl
mov
lock
lret
mov
sahf
or
fmull
mov
popf
es
dec
cs
adc
jno
cmp
jb
inc
sub
sbb
inc
or
ljmp
sub
sbb
hlt
cltd
lods
lds
leave
icebp
lret
hlt
and
inc
sub
mov
dec
xchg
je
inc
dec
xchg
clc
scas
stos
xchg
stos
outsl
popa
cmpsb
and
xchg
sub
jbe
into
push
mov
insl
shr
cmp
fdiv
popf
cwtl
mov
or
rcrb
or
dec
and
mov
or
lods
jmp
mov
dec
das
pop
mov
mov
ret
sahf
scas
fwait
out
inc
outsl
dec
stc
cmpsl
jge
mov
push
popf
xor
mull
test
ljmp
fucomip
sbb
cmpsl
insb
dec
out
insl
jecxz
sub
dec
repz
sahf
xor
aaa
and
mov
or
add
mov
inc
lea
adc
xchg
icebp
pushaw
mov
xchg
scas
stos
int3
dec
data16
sbb
sub
loop
loope
sbb
pop
inc
adc
arpl
cltd
cmp
push
insl
mov
and
cmp
sti
xlat
cmp
xchg
call
daa
mov
scas
jg
es
mov
setae
jb
es
movsl
mov
outsl
lods
inc
inc
xor
sti
mov
cwtl
mov
scas
hlt
push
xchg
movsl
mov
jae
je
aam
mov
out
std
cmp
mov
fsub
add
sti
push
into
mov
push
xchg
bt
push
out
in
test
pop
lcall
fs
fstl
mov
xchg
mov
add
fstps
cmp
lods
dec
in
icebp
lret
fs
flds
adc
fdivl
stos
movsb
sbb
je
or
rorl
mov
pop
fnsave
xor
loop
lcall
out
ret
cmpsl
imul
in
out
pop
int
mov
fstpl
and
lods
pop
lds
arpl
push
sub
mov
idivl
mov
lods
outsb
xchg
xchg
test
jns
mov
addr16
fsubrs
mov
sub
inc
jecxz
xchg
xchg
lret
cmp
out
mov
jb
dec
mov
and
pop
lea
orb
push
cmp
jecxz
ja
xor
or
hlt
into
in
push
loop
cmp
xchg
push
out
arpl
jo
xchg
inc
mov
js
pop
pop
push
es
dec
sbb
push
jg
pop
aad
js
jo
mov
jl
dec
sub
jecxz
decl
push
xor
jae
ffree
jp
push
scas
inc
and
mov
pop
stos
mov
add
outsb
nop
mov
jnp
in
decl
in
and
mov
add
mov
mov
push
inc
sbb
push
inc
jp
ret
sub
mov
int
mov
cmp
xor
daa
xchg
adc
stos
cmp
rcll
in
sti
cmp
pop
dec
repz
mov
sarb
gs
pushf
in
xor
in
int3
mov
jecxz
mov
or
xchg
fstpl
icebp
jb
loop
adc
dec
xchg
push
inc
imul
in
add
xor
fimull
out
and
in
std
test
jp
cmp
ret
subb
pop
stc
dec
shlb
mov
aas
outsl
dec
add
mov
or
add
pop
ss
push
je
or
fwait
jbe
out
aas
int3
insl
sub
mov
cld
test
jge
or
insb
xor
mov
push
cmpsl
jb
add
add
rcl
out
mov
out
dec
popf
mov
cmp
into
lret
pop
mov
aad
jne
adc
cltd
pop
ret
inc
mov
pop
mov
popf
adc
pusha
or
decb
hlt
cmp
cld
out
ds
in
in
mov
and
cmpsl
mov
push
aas
add
cmp
cmp
repz
or
xor
or
clc
fnstsw
cmc
sbb
fst
push
dec
push
dec
fst
add
es
push
cmp
pop
mov
adc
pop
xchg
lods
lods
push
in
je
pop
mov
nop
mov
jnp
xor
sub
call
inc
ret
gs
gs
cmovl
ljmp
leave
or
addr16
fwait
or
cmp
fcom
std
mov
jle
add
subb
mov
mov
nop
inc
daa
stc
mov
imul
subb
sbb
aam
mov
pop
rcrb
xor
mov
adc
mov
ret
pop
mov
jecxz
sbb
dec
pushf
repz
in
repnz
or
or
jp
or
add
lcall
mov
sub
add
and
push
dec
cld
test
cmp
aam
mov
scas
cmpsb
jo
and
sbb
rcr
xorl
mov
mov
adc
mov
stos
cmp
daa
sub
mov
stos
mov
jle
lods
cmp
lcall
mov
in
adc
mov
mov
sbb
repnz
pop
lods
lods
mov
adc
addr16
andw
scas
mov
add
mov
mov
test
pop
movsb
cmpsl
jle
mov
xchg
adc
mov
dec
inc
es
xor
xor
cmp
inc
fisubrs
jo
xor
in
adc
sub
jg
aad
jle
inc
and
movsl
mov
sub
dec
dec
test
sbb
lcall
xlat
fnstenv
mov
jge
movsl
fsubl
fisubrs
outsl
sub
popa
popa
and
ret
je
cmpsl
in
ja
hlt
pop
idiv
add
sub
jae
sub
mov
out
xchg
mov
mov
lods
outsl
add
xor
jge
jp
add
out
mov
cmp
mov
jl
cmc
sbb
sbb
mov
xchg
cmpsl
mov
fdivp
test
mov
repnz
int3
sub
cmp
sbb
leave
xchg
shr
adc
std
mov
clc
out
jnp
out
icebp
rclb
push
mov
jb
jmp
dec
mov
sti
mov
push
and
mov
jo
mov
popf
test
out
mov
data16
dec
jg
outsb
xor
jg
push
xlat
outsb
jno
movsl
cs
mov
cs
xor
mov
xchg
push
pop
shll
pinsrw
xor
dec
daa
ds
pop
inc
jns
xchg
xchg
sub
cltd
dec
jp
xchg
adc
or
jo
inc
sbb
cmp
fstl
fwait
xchg
inc
push
mov
sub
mov
cmp
clc
lods
lret
adc
xor
jne
in
mov
dec
push
cwtl
shll
repnz
hlt
jmp
imul
int
jae
mov
sahf
lret
hlt
add
mov
scas
into
or
cs
jge
or
pause
sub
and
movsl
xchg
mov
loop
lgs
cmp
cmp
dec
pop
xor
xchg
fisubl
ja
push
jge
push
push
add
cli
lods
mov
push
cmpsl
rorb
lods
and
cmp
ja
mov
xor
xchg
jno
push
push
pop
xor
adc
jl
xchg
fiadds
stc
idivl
dec
out
ret
xchg
std
jg
movzbl
test
into
push
out
data16
mov
cltd
stos
sbb
xlat
mov
jl
dec
xor
repz
addb
mov
jmp
push
mov
mov
dec
jecxz
test
cmp
pop
imul
cmp
mov
out
cltd
mov
cmpsl
pop
js
repz
stos
inc
rcrb
xchg
jae
notb
mov
jbe
dec
xor
aam
mov
test
and
mov
cld
andb
out
fwait
push
scas
adc
mov
clc
sbb
fucomi
or
sbb
dec
fwait
je
ret
and
xor
pusha
mov
mov
clc
push
andb
popf
and
fdivp
cmp
rcrb
aaa
cs
sub
dec
push
pusha
pop
dec
xchg
adc
imul
jnp
cmp
icebp
sub
mov
add
adc
mov
mov
pop
mov
inc
pop
mov
outsb
dec
push
pop
jns
rclb
xchg
sub
out
je
push
stos
push
std
sbb
mov
imul
add
mov
cmp
jl
or
inc
ja
ds
mov
es
mov
outsl
aad
mov
std
dec
mov
pop
out
fiadds
sub
inc
or
or
mov
push
pop
inc
out
or
sub
xorb
xchg
add
leave
je
jae
call
pop
fsubrs
mov
int3
jns
cld
jbe
mov
movsl
xor
out
push
jo
sbb
aas
jns
daa
mov
fs
aam
movsb
or
fcmovnbe
je
das
pop
push
ret
sbb
lods
pop
lahf
mov
push
inc
imul
fs
cmp
sub
js
jg
scas
xor
fnstenv
sbb
mov
mov
xchg
repz
xchg
test
nop
ss
and
mov
mov
insb
iret
mov
js
inc
jmp
rcll
pop
pop
aam
out
loopne
cmp
mov
ds
insl
sbb
aad
fldcw
enter
out
negl
data16
call
sub
arpl
sarl
das
mov
repz
jo
mov
movsl
xchg
inc
movswl
xor
lds
fidivrl
ret
ret
xlat
inc
repz
clc
sub
pop
xchg
fnstenv
mov
sahf
cltd
es
jae
mov
lret
int
adc
cmp
cmp
xor
and
mov
mov
fwait
jp
or
xor
pushf
dec
or
ss
push
out
shll
pop
inc
out
jp
dec
mov
pop
push
lea
int3
je
push
dec
inc
daa
sub
jno
jecxz
adc
pop
sbb
lahf
and
push
lock
fildll
push
push
or
mulb
push
mov
jp
cmp
xor
push
sbb
std
lcall
cmc
sbb
aas
cmp
les
push
sbb
rcrl
cmpsb
mov
xchg
dec
sub
rcrl
adc
fs
jo
sub
jecxz
rorl
das
into
mov
aaa
ficomps
pop
push
xchg
sbb
cmpsb
dec
lahf
dec
nop
adc
jbe
add
cli
ja
popa
cmp
loop
or
jge
movl
push
pushf
shrb
xchg
cmp
dec
cmp
sub
aaa
leave
cmc
ror
xor
out
test
loop
jns
adcb
aad
mov
lret
cltd
loope
pop
addr16
testl
and
mov
aas
inc
sub
fisttpll
cmpsl
pop
movsl
jg
cmc
stos
cltd
js
sti
cwtl
mov
enter
pop
je
mov
cmpsb
adc
jbe
stos
or
mov
or
cmpsl
push
jmp
es
cltd
dec
adc
cmp
cld
cli
inc
cmp
or
push
xchg
es
cmp
daa
js
mov
inc
shlb
jle
test
mov
es
xchg
fiadds
inc
mov
ret
push
dec
idiv
icebp
adc
push
adc
push
lret
dec
aas
mov
mov
call
mov
dec
or
lret
pushf
je
aam
inc
scas
dec
or
scas
fwait
add
insl
into
sbbl
sub
xchg
pushf
lods
scas
pop
aad
cld
push
jp
push
push
mov
sub
fld
mov
cmp
pop
mov
aad
sarl
adcl
cmp
lods
xchg
mov
pop
testl
cltd
sub
sar
or
fldl
jecxz
mov
in
push
and
repnz
xchg
and
loopne
cmpsb
subl
fnstsw
popa
dec
xor
mov
mov
add
fdiv
mov
cmc
scas
push
imul
cltd
xchg
cwtl
hlt
xchg
fsubrl
jl
shlb
std
jl
dec
jb
cmp
sub
call
fsubs
or
sbb
or
pop
xchg
repnz
push
in
lcall
jle
pushf
sbb
dec
jl
sub
xchg
fldl
je
stos
push
mov
incb
lret
fstpt
cmp
push
mov
push
mov
int3
or
into
sub
xor
fwait
adc
inc
pushf
setnp
mov
jg
aad
sub
sbb
call
xchg
pop
sbb
in
ss
mov
push
insl
xor
xbegin
jae
jge
inc
ljmp
insl
mov
mov
loop
lods
sbb
add
fadds
mov
cmp
mov
in
push
mov
sbb
daa
jmp
add
mov
lods
fchs
sub
pusha
out
or
mov
sahf
sub
jnp
adc
pusha
ss
test
mov
iretw
jp
add
xor
mov
mov
icebp
mov
pop
jno
xchg
sbb
outsl
sahf
sbb
into
ss
int
mov
popf
outsb
insb
les
mov
pop
bound
test
mov
test
in
movsb
push
pop
mull
add
sbb
push
push
mov
sub
sbb
les
pusha
bnd
gs
jecxz
mov
fchs
xor
push
ficomps
jle
cwtl
clc
push
aas
pop
loopne
lcall
pop
push
sub
push
pop
pop
in
movsl
and
add
jae
and
ds
cs
or
xchg
pop
push
clc
dec
dec
ljmp
mov
xor
out
fadd
and
and
movsl
jl
jge
mov
jp
sbb
cld
jns
lds
lcall
adc
dec
push
addr16
inc
js
cwtl
pop
movl
jge
or
xchg
jo
push
out
test
push
xor
mov
xchg
neg
test
add
cmp
sub
add
push
stos
cmp
dec
fimuls
pop
ds
xor
lock
out
mov
inc
adc
xchg
adc
sbb
icebp
aad
and
in
sbb
dec
cmp
out
pop
leave
jb
adc
ret
xchg
clc
imul
mov
cmc
call
in
xchg
adc
ja
xchg
mov
lock
ret
test
adc
ficomps
push
cwtl
out
dec
inc
ficoml
test
inc
sub
fdivl
mov
mov
out
dec
addr16
cmp
mov
sbb
jmp
inc
xorb
pop
lds
xchg
into
xchg
int3
xchg
addr16
stos
cwtl
lret
push
or
popa
jns
jns
mov
stc
test
nop
or
inc
scas
cli
loop
es
fisttps
js
aam
sbb
pop
sub
scas
jecxz
adc
incl
xor
jns
leave
xchg
mov
daa
adc
leave
inc
sbb
pop
jle
jns
sub
and
rorb
imul
out
rcl
ljmp
push
jmp
mov
mov
inc
inc
int3
stos
test
jmp
cmp
pop
xchg
clc
jg
bound
xor
lock
sub
jp
outsl
fistpl
pop
fcomip
add
dec
add
sbb
sbb
ljmp
out
lea
stos
mov
gs
pop
mov
adc
add
mov
adcl
loop
loop
mov
pusha
inc
sub
sbb
ja
dec
push
jo
mov
xchg
popa
sbb
aas
out
out
and
mov
jb
jne
xor
jne
int3
cld
icebp
push
fmull
pushl
jmp
test
cltd
adc
in
popf
dec
shrb
lret
negl
xor
mov
and
repz
out
pop
jle
adc
ficompl
into
fcoml
imul
test
adc
imul
xchg
js
mov
mov
mov
popf
loop
mov
adcl
mov
xorl
mov
mov
fsubs
dec
lahf
shlb
lret
sbb
pop
push
push
and
and
push
or
cld
iret
sbbb
mov
sub
and
mov
or
fidivrl
leave
inc
ret
std
daa
push
movsl
arpl
mov
in
inc
add
add
mov
data16
ret
stos
mov
int3
pop
xor
xchg
outsb
stc
add
adc
pop
stos
dec
jmp
repnz
ds
jl
dec
mov
cmp
scas
mov
fcmovne
mov
inc
loop
push
ret
jmp
ret
push
pop
sub
push
pop
lds
aaa
adc
stc
imul
sbb
gs
inc
mov
repnz
sbb
lods
and
inc
inc
ret
jge
cli
mov
fdivr
mov
fsubs
mov
test
or
lds
sub
jbe
lods
mov
jmp
mov
add
mov
repz
xchg
sub
cli
add
jnp
mov
popa
adc
lds
pop
or
or
sbb
negl
mov
xor
insb
xchg
pop
mov
daa
aam
enter
or
jbe
stos
orb
fists
and
pop
sub
cmp
xchg
cmp
test
mov
lods
dec
xlat
mov
sahf
xchg
out
mov
or
push
pop
jbe
mov
jl
fidivrl
add
std
pop
popf
rorb
and
cmpsl
mov
lahf
inc
shl
fcoms
addb
mov
test
stos
fnsave
lahf
dec
dec
xchg
lcall
fwait
xor
add
add
cmp
cmp
pop
fucom
pop
popa
and
pop
pop
int3
sbb
pop
sub
loopne
push
mov
addr16
xchg
cld
mov
push
or
stos
pop
adc
cmc
icebp
mov
mov
xor
pushf
dec
jb
test
xlat
and
rolb
mov
jge
xchg
das
mov
dec
loope
or
jo
lods
add
pop
cmp
test
cwtl
push
outsb
adc
mov
cltd
lret
push
add
insl
les
mov
adc
clc
jb
inc
xor
and
sub
mov
dec
dec
lret
jo
repz
mov
mov
cltd
cmp
mov
dec
movups
jns
outsb
pop
aam
mov
fidivrl
or
int
xor
aaa
lret
sbb
mov
jae
daa
es
jbe
fstl
jge
icebp
out
push
in
xor
adc
fldt
add
popf
jo
xor
or
fs
sub
pop
fwait
mov
test
ljmp
push
scas
push
adc
xchg
jnp
mov
loope
inc
pop
dec
jo
jo
and
out
add
xchg
addl
std
xchg
sbbb
aas
insb
jle
inc
ret
xlat
fdiv
inc
in
xchg
sbb
jmp
dec
cltd
ss
sub
dec
ja
out
jl
mov
sbb
lahf
add
fidivs
mov
or
mov
movsl
std
add
mov
pushl
push
ret
pop
jecxz
sbbb
add
mov
cltd
push
lcall
lods
add
inc
pop
in
dec
and
arpl
inc
aam
jl
rcr
stc
lds
lods
push
fs
lahf
daa
cmp
shrb
dec
inc
dec
inc
xchg
dec
in
jg
sbb
les
mov
ret
movsb
fwait
cmp
adc
sbb
mov
push
mov
adc
sbb
mov
jmp
insl
lahf
push
cltd
mov
test
dec
leave
sbb
xchg
jp
mov
cs
mov
mov
ja
mov
daa
lds
in
and
mov
stc
inc
sbb
orb
popa
jmp
lea
call
xchg
test
in
sarl
push
pop
push
sbb
or
ljmp
inc
and
mov
pusha
and
in
popa
into
jne
jbe
add
rcrl
xchg
cmpsl
cmp
xor
xlat
add
mov
mov
xchg
pop
roll
cmp
ja
push
inc
mov
aad
jg
inc
mov
ds
mov
stos
mov
mov
cmc
mov
stc
fs
cmp
mov
jp
adc
adc
cmc
je
cltd
aas
lcall
rcr
adc
scas
jno
movsl
pop
push
aad
pop
lret
mov
rcrb
test
push
subb
dec
aaa
adc
jb
mov
ficompl
insl
add
sbb
mov
nop
imul
nop
addr16
lahf
cmovne
in
inc
xor
mov
loop
lods
cltd
outsb
aaa
adc
xchg
or
xlat
rclb
mov
jns
adc
rorl
pop
scas
cli
adc
mov
push
imul
mov
xor
sbb
xchg
inc
ljmpw
push
arpl
jne
mov
bound
out
insl
fnstenv
sub
xor
pop
dec
lret
dec
ja
fisubrs
mov
sbb
add
mov
lahf
fnsave
inc
adc
mov
fisubrl
ret
jle
bound
jne
inc
jg
push
push
push
sub
adc
sub
js
xchg
shl
mov
decb
data16
std
test
adc
inc
inc
sub
mov
popa
xchg
ss
sbb
loope
je
cltd
inc
xchg
ds
fmull
xchg
mov
es
in
enter
adc
mov
jl
int
inc
leave
lret
mov
add
pop
pop
fwait
cld
sub
mov
sub
mov
xchg
mov
jg
ret
les
clc
jle
push
cli
pop
or
mov
sbb
push
xor
cmp
in
mov
mov
jp
pop
jae
shrb
ss
imul
mov
test
iret
mov
sub
mov
sbb
push
lcall
out
inc
mov
cmp
setnp
arpl
jle
xor
shll
or
cmp
ss
jns
adc
sti
out
js
sub
push
or
jl
sbb
xor
xchg
sbb
mov
add
out
dec
cs
ss
scas
or
adc
add
dec
xchg
out
in
jmp
inc
lret
call
fadd
stc
add
scas
sbb
fistl
sub
or
cmc
mov
sbb
mov
cltd
sahf
xchg
jae
leave
and
fistl
mov
sub
xor
addr16
rorl
add
push
jns
stos
ret
in
fcomp
inc
dec
push
in
leave
mov
cld
in
push
add
lret
jmp
add
or
pop
ljmp
data16
fisubl
push
add
lds
mov
xor
pop
stos
mov
add
pop
cmc
int3
cmpsb
ror
add
push
mov
flds
add
dec
pop
in
out
xchg
mov
add
arpl
push
jge
in
out
int
insb
cmp
push
stos
and
in
xor
push
stc
aad
int
pop
pusha
pushf
sub
xorl
jns
push
les
je
jae
insl
inc
stc
popa
imul
jnp
push
pop
cmpsb
dec
mov
fdivrl
xor
inc
jbe
repz
xchg
mov
dec
pop
push
aad
jl
pop
or
das
in
outsl
arpl
push
add
xor
adc
sbb
sbb
jp
int3
push
cmp
mov
inc
jmp
cmc
pop
loop
cwtl
nop
dec
ds
xchg
scas
lea
adc
adc
push
enter
scas
mov
or
cmp
inc
dec
jo
jge
divb
cmp
fmull
stos
jnp
fbld
fstp
pop
fwait
in
push
sub
jecxz
fisttpl
xchg
imul
fsubl
mov
aam
add
imul
mov
mov
jne
push
dec
mov
xor
fidivs
xor
mov
push
cmp
mov
or
fndisi(8087
stos
cld
fisttpl
inc
imul
sub
lods
adc
into
lods
pop
mov
std
adc
mov
adc
inc
cld
arpl
push
shl
scas
cmp
and
mov
out
push
cmp
adc
je
push
add
insl
adc
push
and
fmuls
cwtl
lret
pop
jb
inc
sbb
out
mov
cmp
jb
xchg
mov
pop
scas
cmp
add
fcmove
mov
push
mov
sbb
outsl
mull
or
jge
pop
xchg
pop
sub
les
movsl
out
popf
mov
arpl
aas
and
dec
dec
push
xchg
push
mov
insb
inc
mov
data16
popa
xchg
and
jge
inc
stos
pop
in
sahf
or
dec
les
int
mov
pop
jae
mov
into
pushf
adc
push
loopne
in
push
add
mov
pop
std
xchg
cmp
cmp
cmp
inc
repz
imul
ja
jbe
mov
lods
inc
add
movsl
jge
imul
orl
mov
sub
lcall
sub
insl
jp
cli
xchg
aad
mov
pop
jns
inc
xlat
jno
leave
loop
pop
fs
andb
out
mov
mov
int3
rolb
push
addl
inc
push
arpl
push
test
lods
mov
sbb
or
mov
jle
mov
lahf
add
xchg
or
mov
bound
out
out
push
xor
dec
push
fwait
and
mov
jb
mov
fdivrl
jb
add
aad
movsl
test
stos
cld
lds
sbb
jns
xchg
push
push
inc
push
mov
xor
jg
dec
imul
loop
cmp
loopne
imul
loope
repz
inc
mov
xchg
outsl
cmp
mov
add
or
hlt
dec
xchg
repnz
lretw
movsl
xchg
jg
mov
daa
mov
and
adc
and
sbb
ss
mov
cmpsb
shlb
mov
cmp
aas
nop
test
xor
sub
adc
fpatan
xchg
or
xchg
push
sub
and
scas
rolb
inc
mov
lods
daa
mov
xchg
and
loop
jecxz
or
sbb
mov
adc
movsb
jb
aad
inc
fbld
ret
fdivl
in
xor
dec
int3
sub
shl
pushf
fucomip
lods
fnstenv
or
imul
cwtl
outsl
cmp
adc
mov
nop
mov
push
cmp
call
out
std
das
xchg
pop
fwait
cmp
fs
xchg
xchg
and
jl
sbbl
int
mov
xchg
out
and
push
arpl
mov
in
sub
or
int3
aaa
cmc
rorl
jmp
mov
and
pop
jo
lods
lcall
push
hlt
dec
mov
stos
test
lret
push
add
pop
shll
into
xor
negl
bound
lret
in
ljmp
inc
jge
mov
mov
lret
xor
aad
sbb
push
xchg
sahf
rcll
xor
add
mov
movsl
mov
cli
dec
lret
idivb
inc
cli
dec
jp
cltd
movsb
fnstcw
cmpl
adc
pop
jnp
aam
inc
fidivs
sbb
out
test
divl
arpl
jg
aas
push
daa
jae
add
sti
mov
cmp
pushf
or
sbb
xor
cld
pop
retw
push
scas
cmpsl
pop
jg
sahf
mov
xor
aas
or
bound
jmp
xchg
notb
pop
mov
pop
mov
xchg
les
aam
js
jp
add
cmpb
negb
push
cmp
mov
into
inc
call
cmc
clc
xlat
and
or
dec
or
lds
adc
mov
cs
test
shlb
pop
jo
dec
std
movsb
pop
mov
out
repz
pop
jns
push
push
daa
mov
xchg
aam
add
imul
ret
sub
shll
mov
rorl
inc
adc
test
xor
ljmp
sarb
imul
sub
data16
jb
mov
leave
push
cmp
pminsw
xchg
out
and
or
and
std
push
cmp
dec
fisubl
add
push
scas
mov
jns
and
pop
gs
movsl
mov
movsl
bound
stos
and
lret
pop
cmp
daa
push
data16
or
repz
xor
inc
cltd
add
jge
pop
data16
sub
push
mov
clc
fwait
jl
mov
sbb
fisttps
sub
push
popf
mov
dec
sub
cmp
cmpsb
jl
add
xor
adc
shl
sbb
mov
jg
xlat
add
dec
xchg
jmp
lcall
adc
xor
sub
sbb
and
mov
faddl
mov
gs
cld
mov
aaa
dec
fistps
scas
inc
mov
jl
je
cmp
popa
imul
push
jecxz
aas
mov
push
fildll
les
push
andl
dec
out
divl
scas
ret
cli
gs
and
cmp
aam
lods
addr16
add
les
jb
xchg
ret
fsubr
data16
repz
out
and
fsubrl
inc
outsb
pop
xorb
sbb
shll
and
mov
mov
fadd
int
sarb
dec
or
cmp
pushf
bnd
push
adc
add
mov
pop
lock
loope
mov
xchg
push
enter
lret
es
fistps
out
xlat
out
and
sub
inc
push
ret
std
hlt
stos
fisttpl
sahf
and
or
cli
int
je
cmp
movsl
test
loope
pusha
push
and
fisubrs
adc
stos
add
in
mov
ja
mov
int3
in
cmp
jle
push
jmp
push
add
add
fsts
es
fildll
mov
pop
dec
xor
mov
repnz
inc
pop
or
mov
pushl
repz
xor
push
add
fistpl
nop
inc
pop
pop
fdivrp
jg
into
fs
test
inc
rcr
loope
mov
in
jb
lods
push
inc
xor
push
daa
cmc
fcmovu
imull
jb
adc
and
and
pop
dec
outsb
jno
pop
mov
xor
xchg
into
jo
jle
sbb
push
or
shr
adc
push
sub
stos
sahf
pop
adc
imull
xor
xor
je
hlt
jmp
out
xchg
cmp
cld
add
jp
or
insl
stos
push
push
pusha
pop
call
adc
jae
ret
adc
nop
jb
sbb
jae
cs
mov
sbb
xor
int
repnz
lret
je
sbb
in
loope
daa
xchg
cmp
fcmovnu
pushf
int3
sbb
fstpt
jns
jo
mov
es
mov
out
pop
push
das
lret
pop
loope
test
aaa
mov
sub
cmp
xor
sqrtps
js
stos
xchg
out
mov
add
aaa
test
ret
sti
sub
jmp
inc
add
dec
mov
inc
dec
xchg
jmp
sbb
adc
call
mov
xchg
sbb
aam
jno
jo
leave
push
pop
enter
outsb
mov
xor
sbb
sub
xchg
mov
cmpsl
inc
imul
lret
rolb
xchg
outsl
jbe
and
test
aad
or
dec
stos
repz
iret
cmpsl
lret
test
mov
cmp
mov
fdivrl
adc
sbb
aad
mov
cmpsb
mov
jb
cmpsl
adcl
cmp
shrb
inc
test
pop
sub
ds
popa
in
fidivrs
cmp
mov
ja
int
mov
outsl
out
mov
jge
cld
cmpsl
loopne
jo
pop
stos
es
or
push
jo
adc
cmp
xchg
cmpsb
pop
leave
stos
mov
mov
cmc
loop
add
and
push
inc
or
or
popf
jbe
stos
cmpsb
adc
je
mov
jecxz
imul
int
aam
push
addb
add
cmp
jae
lock
int
dec
test
xchg
and
or
adc
and
and
lds
xchg
hlt
fs
sti
fisubrl
and
xchg
or
std
ja
cs
pusha
xchg
jge
jmp
sbb
hlt
jp
ja
std
xor
into
dec
inc
sbb
sub
stos
dec
test
sub
adc
cs
ja
cli
enter
xchg
int
mov
and
xchg
xchg
lods
mov
mov
out
std
mov
orl
add
lret
mov
sbb
sub
faddl
jmp
add
mov
pop
lcall
lea
std
push
jp
push
ljmp
mov
ja
leave
pop
jnp
cmpl
mov
inc
lret
pop
rol
out
push
sahf
or
sub
leave
gs
stos
dec
cmp
mov
jne
inc
pop
rcrb
cmp
aad
cmp
cmp
push
jmp
imul
andb
cmp
rcrl
xchg
mov
mov
cmp
push
shll
pop
jle
gs
in
cmp
jbe
testb
push
sbb
sub
or
sahf
les
xchg
push
aaa
push
adc
mov
sbb
xchg
arpl
xor
testb
je
sub
mov
repnz
cmp
push
sub
jnp
mov
stc
mov
jne
fldenv
sub
bound
and
aaa
fsubl
pop
dec
adc
jmp
sbb
push
jle
pop
mov
adc
repz
add
cs
jae
push
push
sbb
fdivrs
outsl
mov
mov
jl
mov
nop
sbb
mov
addl
ja
or
bound
xor
in
jg
test
popa
mov
push
and
cmp
out
in
dec
and
xchg
dec
xchg
andl
mov
xlat
outsl
adc
cmp
pop
jbe
nop
inc
dec
fldl
add
adc
ds
push
jl
add
adc
sbb
xchg
ljmp
mov
xchg
mov
jle
pop
adc
and
xchg
mov
orl
ds
mov
sbb
dec
movsl
sbb
or
mov
movsb
xchg
xchg
dec
popa
xor
sbb
das
arpl
sbb
cltd
push
jno
inc
and
mov
jecxz
mov
xchg
mov
push
mov
incl
adc
push
or
mov
mov
roll
pop
mov
pop
repz
adc
cmp
outsb
add
jnp
push
or
sub
sub
loop
arpl
add
mov
jo
inc
and
leave
pop
add
dec
repnz
and
iret
adc
mov
jecxz
repnz
mov
pop
mov
jnp
push
out
mov
repz
rorl
pop
cmp
sbb
jmp
and
mov
icebp
adc
loopne
shl
in
scas
andb
or
popf
lds
lock
jmp
jecxz
lods
mov
cmp
xorl
pop
cmp
scas
and
sbb
pop
jb
push
imul
jg
ss
shlb
aad
scas
dec
in
addr16
fs
xchg
outsb
mov
push
push
sbb
pop
leave
xchg
mov
mov
add
pop
fs
cmp
xchg
ljmp
mov
dec
adc
mulb
inc
pop
shrl
ss
test
movsb
mov
shll
mov
push
add
lret
adc
inc
mov
pusha
lahf
mov
sarl
inc
cmp
and
je
cmp
inc
bound
cmp
iret
fstps
jno
icebp
sbb
aam
jg
and
mov
cld
je
push
stc
sbb
sbb
mov
ds
lahf
xor
shll
pop
icebp
mov
insl
mov
or
pop
mov
fimuls
xor
gs
imul
push
dec
xchg
in
xchg
push
nop
shll
icebp
push
pop
or
call
iret
and
es
aaa
mov
dec
ror
enter
lcall
rcrl
int
xchg
jmp
cld
mov
insb
cld
cld
pop
sbb
cmp
add
cmp
out
pusha
nop
mov
shlb
xor
es
push
dec
push
sub
cli
dec
mov
add
int
or
mov
ss
std
pusha
dec
cmpsl
mov
outsl
mov
sub
test
test
repz
mov
addr16
sbb
movsl
and
inc
mov
aad
stos
sbb
shrb
test
leave
out
jmp
cmpsb
cld
xchg
insl
mov
rcll
ss
popf
sbbb
cltd
fisubs
testb
lea
adc
xchg
dec
xchg
pop
lock
in
cli
cmpsl
pop
xchg
pop
dec
icebp
mov
call
and
xor
ljmp
xchg
mov
inc
ja
mov
in
outsb
cmp
sahf
and
push
int3
stc
jae
add
sbb
sub
pop
test
movsl
mov
data16
arpl
movsb
loop
gs
sub
xchg
cmp
lret
ljmp
js
outsb
jmpw
out
inc
xchg
orl
hlt
lock
inc
in
mov
dec
or
cmp
jp
out
aad
and
fnstenv
push
loope
push
or
ret
mov
mov
pop
sub
rcrl
dec
and
test
icebp
jae
cwtl
dec
jecxz
or
push
jb
sbb
aaa
xor
sub
adc
out
cmc
mov
and
mov
push
inc
les
lock
and
pop
cmp
mov
js
lea
daa
fnstcw
xor
mov
clc
mov
mov
mov
dec
test
movsb
dec
push
in
ds
popf
mov
pop
movsb
jb
jecxz
mov
ja
mov
push
jle
add
push
int
fldln2
arpl
lods
add
iret
mov
mov
repz
dec
ljmp
adc
or
pusha
fstp
jb
stc
and
cmp
pushf
lret
aam
jno
cmc
out
or
sbb
xchg
inc
cmp
xchg
shlb
insl
es
sbb
lret
icebp
xchg
loope
add
mov
rorb
outsl
popa
inc
sbb
cli
out
xchg
push
and
fadds
cmp
jbe
mov
movsb
nop
jo
out
imul
push
pop
sti
jmp
xchg
sbb
pop
std
add
jmp
lea
aaa
adc
sti
sub
stc
in
jge
in
into
sbb
gs
adc
jmp
or
push
jp
jnp
out
push
mov
push
mov
xlat
scas
daa
pop
mov
or
pop
loop
addl
mov
dec
jb
into
rorl
mov
cmpl
pop
data16
jecxz
into
pop
sti
push
push
xchg
fcoml
jle
pop
push
dec
add
pushf
icebp
or
add
pop
pop
push
cmp
add
mov
mov
xchg
add
jne
inc
lea
xor
loopne
in
cmc
insb
mov
outsl
orb
and
push
and
clc
lods
xchg
dec
mov
xlat
fdivl
iret
cld
lret
cs
ja
jo
adc
andl
jb
leave
bound
les
push
sub
adc
push
out
pushf
aam
cmpsl
lret
je
test
mov
cld
cmp
and
pop
xor
cmp
jnp
adc
iret
nop
cs
mov
scas
push
pop
rol
loop
in
dec
and
fimull
mov
inc
ss
cmp
pop
ret
push
decb
sahf
cmp
xor
dec
cmp
and
hlt
lret
adc
dec
dec
bound
cmpsl
outsl
xor
jle
pushf
cmp
xchg
into
and
cltd
push
cs
mov
cld
cltd
pop
adc
aaa
out
iret
mov
mov
ss
mov
adc
imul
mov
mov
add
xchg
hlt
mov
sub
in
in
pop
outsl
mov
imull
xchg
mov
xchg
sbb
push
stc
imul
xchg
xchg
sbb
dec
movsb
jns
jo
sub
test
rcl
out
lret
inc
mov
jne
inc
popf
dec
shrl
pop
jbe
hlt
sahf
adc
adcl
movd
adc
mov
cwtl
cmc
inc
les
dec
loopne
in
sti
dec
mov
push
inc
sahf
or
pop
pusha
in
lret
test
push
add
adc
insb
leave
inc
adc
inc
add
cmpsb
dec
and
rolb
mov
pop
rcll
fsubrl
pop
jmp
sti
loope
jmp
sub
arpl
adc
popa
push
dec
sbb
push
lea
and
and
mov
push
loop
stos
fildl
jns
push
xor
xorb
out
sarl
jbe
cwtl
inc
push
mov
cmpsl
filds
or
mov
clc
dec
adc
add
pop
mov
sbb
outsb
cmp
pop
fcmove
sub
mov
jl
push
xor
call
jbe
jmp
jle,pt
dec
pop
shrb
push
stos
xchg
sbbb
mov
inc
mov
mov
scas
xchg
lock
lcall
pusha
push
outsb
shl
les
pop
jp
arpl
data16
test
mov
fildll
mov
mov
dec
imull
adc
jns
out
je
mov
sarb
pop
dec
inc
adc
push
sahf
jo
mov
mov
cmp
mov
inc
sbb
testb
stos
jmp
lods
pop
dec
aaa
mov
sub
lods
jne
mov
stc
and
ret
mov
iret
cmp
mov
sbb
dec
std
out
insb
test
mov
dec
mov
sub
stc
mov
jge
jnp
and
and
pop
jl,pn
jae
in
mov
inc
in
repnz
daa
jge
jp
shlb
lea
mov
mov
hlt
aaa
cmp
xor
mov
test
push
int3
nop
rcl
xor
test
inc
icebp
iret
hlt
jne
call
sahf
jo
gs
movl
lcall
movsb
jp
test
add
out
adc
sub
loop
das
test
pop
dec
negb
mov
leave
cmpsl
fistps
das
sbb
push
pop
je
enter
sarl
dec
jno
mov
jb
lcall
inc
jmp
lock
adc
cmpsb
out
lock
cmp
xchg
push
push
cmp
loopne
lock
push
lcall
leave
in
pop
push
fadds
dec
pop
in
push
out
xchg
mov
pop
lcall
cmp
mov
out
xchg
scas
mov
mov
xlat
or
jp
dec
adc
fs
mov
loope
mov
lcall
push
add
inc
data16
dec
testl
cld
sub
xchg
scas
ret
std
in
outsb
fadd
aas
pop
dec
ljmp
pop
testb
dec
es
xor
ret
dec
xchg
testb
jnp
sbb
sbb
jmp
mov
dec
lahf
inc
jmp
pop
into
ret
popa
lock
out
cmp
lods
into
or
les
pushf
int
les
cld
cmp
and
scas
push
pop
lds
loope
imul
je
xlat
push
mov
repnz
jp
add
push
or
test
inc
outsl
mov
sbb
fisubrl
push
dec
repz
jl
jno
pop
cmp
adc
mov
mov
push
imul
jmp
mov
aas
test
add
cmp
adcb
jo
lret
cmpsb
pop
add
sbb
ss
xor
cmp
adc
in
xor
jp
pop
sti
push
sub
ficoms
ret
mov
cli
xchg
or
in
movb
mov
jg
mov
popf
test
xor
xchg
int3
in
nop
inc
in
leave
sbb
repz
and
lock
mov
mov
dec
cmpsl
push
mov
cmp
gs
flds
out
pop
dec
jge
pop
out
push
and
inc
mov
loop
outsl
xchg
push
sub
jl
sbb
into
push
xlat
jmp
jl
cmc
lret
mov
pop
sbb
in
outsb
out
fdivrl
dec
sub
mov
sahf
mov
int
and
std
and
into
test
outsl
adc
jae
xor
iret
adc
xor
stc
pop
mov
mov
roll
and
xor
fldcw
jbe
inc
mov
movsl
mov
out
push
das
and
mov
inc
push
rcrb
cmc
cmp
mov
fldl
pop
jg
cmpsb
jmp
sub
and
pop
inc
add
int3
mov
std
xor
ds
repz
mov
insl
inc
ss
in
fwait
sbb
sub
sub
leave
mov
je
lods
mov
cmpsb
pop
dec
pop
inc
xchg
imul
sub
orb
cs
js
xchg
mov
cld
mov
push
mov
imulb
outsb
or
shrb
andl
ja
iret
fisttpll
pop
sbb
fs
and
sub
add
xchg
push
or
lret
jp
mov
sbb
jbe
pop
jmp
cli
iret
leave
je
addr16
dec
mov
or
test
mov
adc
iret
add
add
mov
movsb
jbe
int
pmaxub
or
jnp
inc
lret
push
adc
test
sub
insl
pop
mov
mov
out
imul
sbb
xchg
inc
push
mov
add
or
jecxz,pt
push
or
popf
cltd
jle
xor
pop
ja
sbb
js
or
je
stos
and
cmp
mov
or
mov
dec
adc
repnz
lret
mov
add
lret
xchg
xchg
mov
test
lret
jl
stos
leave
adc
cmpsl
jl
mov
cmp
or
adc
mov
leave
jp
outsl
sbb
call
pop
test
cld
and
xor
inc
fsubl
and
mov
lods
shrl
push
data16
lret
and
inc
mov
inc
mov
mov
in
sti
adc
mov
sub
movsl
mov
inc
sbb
mov
es
jmp
sbb
push
cmp
je
orw
arpl
xor
jbe
and
daa
dec
repnz
mov
xchg
and
roll
js
inc
bound
mov
in
ds
or
adc
loop
and
adc
frstor
aas
mov
lea
cmp
ja
jbe
std
add
es
inc
cmpsl
xchg
and
xor
test
fwait
int3
add
stos
jecxz
insb
fcompl
ficoml
or
sbb
int3
mov
popf
fadd
jmp
mov
ret
push
lret
imul
xchg
dec
es
and
lret
cmp
mov
ljmp
mov
arpl
adc
and
or
sbb
mov
dec
in
mov
xchg
cmp
and
sar
popf
add
add
jmp
push
xor
das
add
cmpb
mov
push
call
cwtl
mov
mov
lahf
adc
mov
cs
mov
test
add
popf
das
cmp
mov
adc
ret
mov
loope
leave
mov
mov
jae
stc
inc
add
test
mov
popf
cltd
jns
cmpsl
push
stos
fmull
mov
adc
xor
dec
mov
popa
push
cmp
addl
je
addr16
fwait
adc
test
sbb
mov
mov
dec
push
scas
cmpsb
testl
adc
add
jmp
es
cmovg
xor
xchg
push
fists
ret
insb
inc
aam
and
addl
stc
sbb
mov
rcll
xor
push
imul
mov
stos
jge
or
mov
and
add
insb
adcb
ret
out
stc
push
ljmp
adc
nop
cwtl
int3
repnz
adc
adc
ficoms
lret
push
cs
xchg
outsl
lods
sahf
test
lds
fsts
addb
daa
faddl
imul
cmp
int3
push
push
push
lcall
mov
in
pusha
inc
mov
add
push
lahf
xchg
xchg
movl
jmp
mov
and
ret
pop
mov
adc
mov
mov
sti
pop
adc
xchg
push
cmc
sti
push
or
nop
mov
push
movsb
mov
push
pop
or
cli
call
cmp
ja
in
out
mov
sbb
cmp
dec
sub
in
adc
jb
dec
push
push
xchg
adc
jecxz
pop
out
lods
outsl
lret
in
shl
mov
push
imul
push
xlat
sub
adc
cmp
and
cli
shll
or
jg
sti
mov
popf
pushf
cmp
ljmp
xor
fs
int
push
lods
jo
jns
lock
pop
dec
xchg
add
pop
aad
int3
jne
mov
add
in
xor
pop
pop
jb
fistps
dec
das
push
push
sub
ret
leave
cmp
add
inc
sbb
cltd
repnz
pop
sub
imul
pop
popf
add
mov
repnz
in
xchg
sub
gs
mov
pop
fisttps
repnz
inc
dec
test
dec
lcall
insb
and
insb
inc
xor
xorl
mov
loopne
and
jmp
out
jne
push
movsl
aad
fidivrs
and
dec
ret
fdiv
cmp
inc
inc
xor
inc
mov
out
push
mov
jne
lret
mov
dec
mov
mov
and
popf
mov
push
or
mov
jae
xlat
pop
inc
movsl
ss
out
push
xor
and
cltd
sub
xchg
insl
imul
jae
xchg
jmp
xchg
es
inc
push
ret
inc
pop
lods
shl
sub
mov
or
inc
rclb
in
mov
push
lock
cmc
and
xchg
ret
jae
imul
in
xor
add
and
pop
mov
pushf
sbbb
sahf
xor
lods
mov
int
jns
lahf
movsl
lods
sbb
mov
mov
rclb
and
test
shrl
xor
scas
add
iret
inc
push
xor
cmpsb
mov
orb
push
lods
neg
pop
jnp
fidivrs
sub
sub
jle
push
mov
aad
filds
es
ror
mov
and
jl
adc
inc
xor
lods
mulb
incl
popa
add
mov
push
xlat
mov
adc
xchg
out
pop
mov
sbb
add
xchg
imul
popa
lock
mov
jno
aam
sar
arpl
popf
in
add
fidivrs
xchg
repz
mov
imul
stos
jg
popl
loop
cs
or
cmp
pushf
jmp
ss
shl
and
les
pop
jbe
popa
or
cmp
lods
neg
fadds
ljmp
xor
imul
jae
stc
es
repz
lahf
adcb
fwait
xor
mov
ret
loopne
xchg
adc
out
mov
test
nop
dec
decb
sbb
and
dec
ss
jns
adc
mov
sub
cmp
add
or
aam
adc
sbb
jno
mov
pop
out
sti
sub
cmp
cmc
hlt
xor
and
or
les
out
cmpsl
sahf
xchg
jnp
mov
gs
push
and
popa
xor
jg
sti
mov
roll
adcl
pop
xor
sub
fadds
hlt
sbb
stc
inc
xor
add
addb
or
dec
out
xlat
sbb
fsubr
inc
je
mov
sub
cmp
mov
stos
mov
testl
push
repz
insl
loope
or
add
sub
cwtl
lret
xor
nop
and
mov
or
inc
sub
mov
mov
jge
lahf
xchg
jno
aas
fisubs
in
jne
sub
push
add
xchg
es
aas
sbb
fimull
or
jecxz
ficomps
xchg
jmp
shll
ja
push
clc
lfs
mov
mov
mov
xor
or
or
mov
sbb
stos
xchg
aam
in
cmpsl
pop
push
shrl
pop
push
mov
lret
addr16
mov
int3
mov
movsl
and
into
dec
dec
adc
repnz
aas
lea
push
xchg
and
mov
add
gs
dec
and
fdivrs
stos
push
or
or
hlt
dec
xor
fidivrl
jno
cld
or
ja
daa
movsl
orb
jg
xor
mov
cli
scas
popa
push
je
cli
stos
sbb
ror
cmpsl
cmp
bound
mov
out
sbb
or
jb
pop
in
out
dec
movsl
ja
out
jg
mov
sub
dec
leave
pop
insl
push
stc
das
nop
mov
ja
movsl
push
xchg
mov
jbe
sete
mov
mov
lea
adc
xchg
sub
pop
add
scas
mov
cld
push
scas
push
fwait
dec
push
push
sub
scas
in
lock
sarl
dec
hlt
push
clc
xchg
sub
ds
jg
push
iret
mov
inc
icebp
and
push
std
mov
or
sbb
ficomps
adc
dec
mov
jl
lret
fiadds
xchg
ja
lock
fwait
push
imul
inc
mov
test
outsl
aas
jb
mov
stos
mov
cmpsb
out
add
push
pop
loop
and
dec
inc
andl
stos
jp
xchg
mov
arpl
sub
ljmp
cwtl
test
andb
out
cmp
hlt
mov
push
xchg
xor
js
sbb
dec
repz
insb
mov
inc
sbb
jno
loop
xchg
mov
fstl
pop
test
outsb
add
jmp
popa
mov
inc
ds
stos
jbe
sub
sti
push
loope
xchg
ljmp
jmp
push
and
movsb
daa
push
cli
rcll
aam
dec
push
xchg
roll
fsubrs
je
add
dec
pop
pop
jo
pop
or
jb
lret
lsl
jmp
rcr
es
jo
into
push
pushf
outsb
repz
iret
or
pop
inc
xchg
daa
push
sbb
or
je
mov
jae
add
sbb
rcrb
fs
outsl
mov
add
or
dec
xchg
cmpsl
inc
out
loope
sub
call
sbb
mov
fists
lret
adc
xchg
gs
dec
fs
or
int3
cwtl
xchg
adcl
rolb
adcl
push
fidivrl
pushl
sahf
jnp
int3
inc
jo
or
in
mov
push
fimull
jmp
adc
lret
orl
sub
js
push
gs
jbe
mov
mov
push
fiaddl
xchg
jo
repnz
int3
fldenv
pop
or
or
cmpsb
pop
lcall
push
insl
lea
fnstsw
les
loope
pop
clc
insl
stc
gs
icebp
icebp
cmp
mov
mov
lea
xor
es
in
or
sbb
cwtl
lock
out
imul
xor
add
jns,pn
push
xor
and
mov
push
outsl
or
popa
mov
lcall
je
xchg
ds
in
pop
push
in
pop
push
cmp
push
sbb
xor
mov
dec
or
insb
dec
pop
xlat
inc
inc
pop
mov
movsl
pop
test
lcall
lret
or
out
push
sub
jbe
mov
sub
xchg
ret
aad
sbb
adc
and
les
push
jecxz
sbb
fiadds
or
sbb
push
daa
jnp
ljmp
push
loopne
outsb
jns
add
nop
push
imul
cmpsl
or
popf
jle
movsl
loope
push
lods
mov
add
cltd
dec
test
movsb
jl
popa
xor
insb
mov
enter
scas
mov
inc
mov
dec
and
stc
inc
inc
cmp
or
pop
sub
mov
sub
loop,pn
push
mov
jge
xchg
pop
ljmp
and
pushf
xchg
inc
cmc
push
mov
inc
pop
je
mov
pop
daa
repz
push
xchg
js
iret
js
cmp
dec
push
xchg
cmpsb
ss
sub
fnstcw
and
ljmp
negl
mov
adc
in
enter
out
js
mov
nop
dec
lea
outsb
dec
sahf
stos
sti
stos
xorl
mov
adc
xor
mov
cli
fildll
test
cwtl
dec
and
fistpl
jnp
mov
and
adc
popf
loope
sub
mov
push
sti
repz
xor
insb
xchg
jecxz
adc
into
or
lret
push
cmp
inc
fidivrl
loop
jns
out
pop
loope
sub
lods
cs
and
sub
mov
std
adc
sahf
pop
ret
ret
mov
xor
fisubl
fadds
mov
mov
add
mov
xlat
jnp
popf
aad
and
adc
adcl
mov
xchg
dec
mov
pop
jmp
pop
adc
push
jns
cmpsl
xor
pop
jbe
test
div
cmc
push
mov
add
hlt
outsl
pop
lock
cltd
popa
mov
sub
daa
sar
push
int3
popf
pop
add
sbb
imul
popf
aas
adc
push
dec
pop
sub
leave
mov
fwait
xor
out
stc
adc
repz
cmpsb
push
out
aad
add
int3
add
mov
xchg
adc
aam
loop
mov
and
mov
xchg
mov
pxor
cwtl
or
fdivl
ds
and
dec
push
or
pop
das
mov
gs
sahf
pop
mov
rorl
es
jbe
xchg
lcall
aad
lock
mov
into
mov
inc
dec
jle
rclb
fxch
mov
rorl
aam
and
jns
into
mov
inc
subl
bnd
repnz
mov
xchg
movb
cwtl
adc
icebp
stos
out
xor
dec
data16
or
push
xor
inc
dec
adc
fiaddl
mov
lret
rcll
jnp
ficomps
inc
lcall
div
pop
js
test
shll
sub
insb
xor
and
nop
faddl
cmp
test
mov
mov
xor
fildll
xchg
arpl
adc
inc
lret
shll
stc
test
cmp
cltd
adc
push
inc
xor
sbb
and
aam
addl
pop
ljmp
sub
filds
cmp
shll
mov
rolb
xchg
ret
out
xor
xor
dec
add
mov
xor
outsl
mov
rcrl
imul
xchg
cmp
inc
push
push
bound
jecxz
xor
and
fwait
jb
pop
call
fwait
test
jb
fidivrs
lods
cmp
pop
mov
inc
push
bound
daa
fwait
cmp
out
rorl
xchg
aaa
shrb
mov
out
adc
aam
xchg
mov
mov
repz
sbb
gs
cmp
popf
aam
fnstcw
push
cmpsb
or
mov
mov
jb
inc
mov
mov
sbbl
xor
or
jne,pn
xchg
filds
roll
sub
ds
lods
pop
cmp
or
xchg
fstpl
lahf
cs
mov
xor
cmc
outsl
enter
jge
fs
movsl
sub
xor
jl
push
sbb
dec
cmp
mov
test
mov
nop
imulb
xchg
or
or
lods
sub
loope
les
cs
mov
pop
sbb
cmpsb
in
lock
loopne
cmpsl
std
sbb
int
ja
pop
lret
mov
mov
mov
fwait
call
fnstsw
adc
sub
mov
push
sbb
push
lock
pop
aas
orb
sarb
mov
xor
jae
out
xlat
cmp
fsubl
sbb
pop
jno
xchg
rorb
mov
shrb
or
mov
adc
adc
rorb
jns
sub
jmp
cli
cli
mov
iret
fsincos
imul
mov
mov
mov
negb
aad
and
jl
sub
mov
mov
aaa
fs
stos
push
xor
ja
fdiv
xchg
add
fadds
push
fcoml
mov
adc
jmp
int3
mov
shlb
lods
daa
int
and
xor
jo
adc
inc
cmp
sbb
lret
mov
les
push
add
enter
fcmovbe
enter
sub
cmp
jbe
or
xchg
inc
stos
sub
icebp
out
mov
insb
hlt
sub
mov
xor
popa
xchg
sub
inc
push
mov
or
cmp
int3
call
out
mov
setne
jp
or
push
or
lods
sub
inc
cld
mov
stos
test
addl
imul
push
loop
push
jbe
push
mov
aaa
cmp
dec
pop
jp
jge
or
xlat
cmp
test
loope
sub
push
mov
dec
add
pop
dec
inc
fistpl
cmc
jb
pop
sarl
or
mov
adc
jae
dec
int
dec
adc
pop
loopne
es
xchg
fsts
mov
xchg
xchg
cli
stc
adc
push
sbb
movsb
test
push
in
out
loop
ror
lcall
sbb
incb
jno
jecxz
in
andl
sub
pop
mov
out
adc
outsb
lahf
int
sub
loop
push
fldpi
jo
hlt
ret
sub
test
ljmp
sub
mov
pop
leave
daa
testl
cmp
mov
mov
mov
imul
int3
push
testb
call
sbb
adc
mov
and
ret
add
fidivl
mov
mov
mov
adc
pop
push
cmp
scas
sub
ficoms
pusha
xchg
add
mov
jp
lcall
pop
lahf
pop
rorb
and
or
or
push
mov
dec
cs
ret
xchg
mov
fistps
push
mov
cld
lock
or
mov
push
mov
jae
lock
sbb
mov
and
je
aas
scas
fiaddl
leave
jle
jbe
lods
pop
in
dec
mov
pop
sbb
lods
adc
sti
test
repz
inc
ret
xor
loopne
loop
pop
push
test
mov
insl
daa
cmpb
andl
pop
insl
lods
mov
cmp
inc
shl
and
rep
ds
dec
in
popa
mov
mov
data16
inc
cmp
dec
xchg
hlt
mov
xor
fucomi
xchg
xor
popa
scas
mov
sbb
iret
fwait
repz
xor
dec
mov
mov
xlat
dec
or
inc
mov
lahf
jno
push
test
jnp
scas
jns
aas
mov
addl
aam
adc
gs
je
nop
cmp
imul
pop
lods
pop
push
hlt
dec
mov
push
or
test
test
in
mov
scas
pop
pusha
loope
cmp
jae
add
stc
inc
inc
xorb
inc
das
pop
xchg
inc
loop
mov
test
mov
mov
pop
xor
cmp
xchg
dec
xor
cmpsb
leave
je
lret
mov
mov
or
cmpsl
je
jl
inc
into
fstps
push
push
int3
xor
sti
or
out
xchg
ss
std
xor
jge
mov
in
xor
xchg
ret
fst
mov
dec
mov
sarb
and
jg
xlat
stos
pop
inc
mov
shlb
enter
push
jp
push
data16
rorl
out
ja
mov
stc
or
sbb
pusha
xor
test
inc
mov
movsl
iret
xchg
in
adc
clc
cld
cmpsb
xor
iret
loopne
push
repnz
pop
cmp
lods
sarb
mov
dec
cmp
sbb
test
xchg
icebp
mov
xchg
push
and
adcb
enter
mov
outsb
push
xchg
push
mov
out
mov
xor
push
xlat
pop
jae
mov
xchg
fs
adcb
and
mov
out
outsb
mov
in
and
aas
stc
mov
pop
bound
jle
icebp
jno
daa
jp
fdivrs
xchg
adc
punpckhdq
or
leave
or
cmp
ss
rcll
int3
cmp
imul
ja
shlb
popf
xchg
lahf
mov
clc
mov
stos
dec
and
insb
mov
mull
ljmp
divb
cld
in
flds
loop
xor
lds
pop
and
andb
inc
call
andb
sarb
dec
outsb
ret
lret
pop
or
inc
inc
fbld
int
xchg
sbb
jl
or
push
pushf
shrb
subb
stos
push
mov
adc
sbb
call
enter
xor
push
cwtl
pop
sub
loope
imul
mov
das
pop
add
push
jnp
out
mov
sbb
fldl
add
cli
xchg
cmpsl
and
and
ljmp
ret
cmp
jns
daa
xor
les
ja
push
cmp
lods
xchg
xor
ror
negl
cld
and
or
out
mov
add
cld
fildll
sbb
lods
push
or
popf
dec
sbbl
inc
fildl
jo
jo
leave
mov
dec
adc
and
int
jno
iret
jp
imulb
dec
movb
mov
and
mov
jg
les
mov
mov
imul
div
loope
jb
test
xor
incl
repnz
jl
popa
stos
nop
and
lods
dec
lret
int
shr
inc
arpl
dec
add
push
enter
lds
pushf
imul
inc
ljmp
push
mov
cli
hlt
pop
std
dec
xchg
iret
cmc
dec
mov
or
mov
das
fistl
imul
xor
dec
jnp
add
lods
xchg
mov
inc
lahf
je
dec
cmpsb
daa
adc
scas
pusha
arpl
sbb
mov
addr16
adc
lea
inc
rep
cmc
adc
mov
cmpsl
or
push
fucomp
cmp
aad
out
repnz
xor
shlb
pop
out
lcall
cmp
and
sbb
adcb
loopne
icebp
xor
insl
fstpt
or
add
dec
in
xchg
aaa
psraw
bound
loop
dec
leave
stos
mov
jne
xchg
ss
mov
pop
push
push
test
push
add
sub
jl
mov
adc
push
loopne
int
int3
mov
jb
aam
imulb
orl
inc
pop
mov
out
add
nop
mov
cmpsb
push
xchg
dec
sbb
cli
mov
ja
adc
out
push
dec
push
jns
cwtl
adcb
pop
mov
xlat
pop
scas
jle
out
push
test
cwtl
scas
cmpsb
pop
dec
aas
sbbl
outsb
xchg
sar
mov
mov
sub
cmp
pop
enter
mov
cmpsb
jb
decb
cmp
jo
les
out
sbbl
mov
xor
dec
inc
dec
add
fstpt
movsb
sub
or
iret
jnp
jp
cmp
jns
cmp
nop
mov
fisubs
mov
popa
and
inc
mov
push
xchg
mov
jno
jp
inc
pop
jg
cmp
enter
xor
xchg
in
lret
popa
mov
mov
popf
add
pop
das
arpl
into
push
pop
sbb
sub
imul
mov
add
and
xchg
popf
mov
je
and
pushf
fs
inc
or
testb
and
mov
adc
jecxz
les
mov
sti
mov
pop
into
sub
jecxz
and
mov
enter
repnz
int3
sub
push
shrb
jmp
xchg
push
jge
jl
shr
dec
mov
out
sbb
loop
lock
push
jb
xor
mov
test
push
xor
loop
aad
std
fcompl
pop
jb
cld
stos
js
in
adc
push
cmp
and
sub
scas
pop
stc
insl
stc
pop
stc
leave
rcl
adc
mov
cwtl
jl
ret
lret
ficoms
dec
cmpsl
pop
call
dec
outsb
xchg
movsb
xchg
jo
fs
fdivrl
jl
adc
out
xchg
ror
mov
cs
out
inc
arpl
pop
xchg
mov
cmpsb
or
dec
adc
clc
push
fcompl
insb
enter
inc
mov
push
daa
ja
call
lds
aam
clc
pop
xchg
and
push
sti
pop
xor
jns
pop
je
jnp
outsl
repz
ss
sub
aas
sti
imul
mov
fisttpl
push
or
xor
sahf
mov
cmp
adc
imul
xchg
out
or
icebp
sbb
lods
sub
sbb
mov
int
mov
dec
xor
ret
pushf
pop
das
dec
movsb
xchg
or
cmc
push
incb
dec
push
mov
int3
dec
loopne
ja
xchg
aaa
mov
ret
mov
push
ja
test
scas
in
andb
leave
int
call
sub
lock
cltd
pop
dec
int
sub
repnz
xchg
inc
test
shlb
xlat
scas
insb
movsl
rcrl
push
lahf
pop
fsubrl
adc
sti
jo
fwait
add
scas
scas
sbb
repnz
popf
cmp
fcmove
mov
add
ret
adc
and
call
js
lcall
push
xchg
xor
test
outsl
push
push
xor
pushf
and
adc
jns
test
xchg
pop
and
insb
push
arpl
inc
or
pop
in
mov
sarb
adc
insb
inc
add
insl
jo
mov
pop
push
cmpsl
pushf
xor
xor
pop
out
xchg
into
bound
cmp
xchg
push
jmp
movsl
pop
mov
cwtl
xchg
mov
iret
aad
das
mov
movsb
mov
stos
sbb
outsb
pusha
mov
lods
mov
and
sbb
setg
pop
daa
push
imulb
repnz
xlat
sbb
test
adc
sub
pop
arpl
cwtl
inc
xor
stos
add
in
fnstsw
fnstsw
or
dec
icebp
insb
stos
mov
aam
add
mov
pop
stos
scas
push
es
cmpb
mov
iret
out
adc
stos
jns
leave
andl
fwait
into
shrb
fstps
stos
nop
in
nop
cmpsb
xchg
inc
pop
and
or
push
shlb
pop
and
dec
aas
lods
loopne
sbb
in
mov
adc
sub
fs
fs
cwtl
stos
aaa
lods
add
or
xor
stos
sbb
enter
loope
mov
cmp
test
cmp
shr
aam
ficoms
insb
inc
lods
das
push
sub
rcr
sbb
stos
pop
pop
mov
in
mov
jle
or
mov
scas
les
fmulp
arpl
mov
push
mov
clc
inc
and
jnp
les
pop
push
dec
repnz
jge
cld
test
jbe
orl
loopne
rolb
xchg
test
add
shrl
pop
test
dec
in
rorb
into
inc
test
rorl
jmp
scas
push
push
sbb
call
scas
sbb
cltd
xor
iret
dec
pop
pop
leave
xchg
jmp
jmp
jp
cmpsb
or
push
fwait
sub
popa
inc
fbstp
mov
jecxz
pusha
mov
pop
pop
mov
jg
dec
iret
cmpsb
jnp
jne
adc
idivl
cmp
ret
dec
push
call
inc
cmp
test
movsl
int3
int3
mov
aas
addb
dec
lods
mov
pusha
mov
inc
or
mov
xchg
xchg
movsb
into
or
movsl
inc
inc
add
in
scas
mov
dec
ret
addr16
push
in
or
pop
sub
js
jo
mov
adc
adc
mov
mov
aas
in
lret
daa
xor
cmpsl
jbe
cmp
pop
out
and
addl
outsb
daa
mov
cli
inc
je
xlat
out
call
int3
sbb
test
add
movsb
lret
push
sub
xor
je
int
out
push
aam
pop
mov
xor
ljmp
pop
and
data16
xchg
pop
testb
sbb
mov
fnsave
ret
fistpl
sbb
lock
mov
imul
jecxz
outsl
or
mov
ror
mov
rol
ljmp
xchg
movl
stos
imul
adc
and
cli
out
cmp
fimuls
pop
clc
lea
push
out
jmp
mov
scas
jnp
repnz
jp
jge
imul
push
xchg
test
dec
xchg
mov
lods
add
popa
adc
std
insl
or
cmp
stos
mov
xor
ror
fldenv
inc
and
test
repz
pop
sub
jmp
xor
mov
mov
push
hlt
dec
lret
jns
fcoms
and
mov
mov
ja
les
adc
xchg
adc
cmp
pusha
sub
sub
sub
or
dec
lret
cwtl
testl
ds
sarb
outsb
sub
jno
push
lret
lods
cmp
bound
in
jno
rorb
add
stc
out
pop
mov
hlt
or
ss
out
insb
fcmovnb
pushf
cmp
sbb
cwtl
fnsave
mov
mov
rcl
imulb
cmp
mov
in
leave
mov
push
stos
add
orl
jo
subl
push
jns
daa
push
int
les
or
paddusw
jg
pop
inc
pop
shlb
push
xchg
insl
cmp
cmpsb
scas
lcall
fildl
push
lds
je
cmpsl
fmuls
mov
shll
lea
les
imul
sbb
in
sub
adc
mov
pop
push
jns
lret
mov
cmpsb
ja
xor
mov
lods
loope
sbb
jmp
xchg
sti
jae
mov
fisttpll
popa
mov
xor
popa
andb
cmp
xor
xchg
or
jle
loope
cmpsb
in
and
push
cld
adcb
pop
adcb
sahf
pop
test
mov
flds
xchg
insb
pop
xacquire
mov
shlb
in
repnz
xor
push
dec
cmp
pop
pop
les
dec
leave
jmp
lcall
data16
mov
pop
out
xchg
mov
cltd
popa
ret
push
push
cli
adc
std
jo
lea
pop
pop
and
insb
in
pop
lods
sub
cmp
sbb
xor
in
add
cwtl
and
inc
sbb
in
into
sub
mov
divb
and
sarb
inc
test
push
xor
or
out
and
lret
adc
mov
add
xor
jnp
mov
in
sub
lret
jmp
xchg
or
in
call
popf
mov
mov
adc
cmp
sti
ret
js
aam
inc
inc
hlt
sti
js
pop
jbe
adc
test
fwait
jp
mov
adc
sbb
xchg
mov
les
or
std
ss
push
and
idivb
and
push
sbb
adc
das
and
stc
pushf
mull
in
in
nop
iret
pop
push
shlb
popf
nop
pop
outsl
mov
mov
mov
jecxz
jmp
pop
into
push
into
lds
xchg
xlat
mov
pop
ret
std
divb
mov
add
add
ret
scas
pop
pushl
pop
in
std
out
outsb
mov
cmp
aam
push
cmc
lret
mov
lret
push
mov
repz
push
je
mov
push
nop
xchg
clc
idivb
cmp
aaa
fs
xchg
add
lods
loopne
les
push
ss
ja
and
idivb
int
pop
push
jb
cmp
cltd
sub
pop
jle
cmp
xchg
push
pop
imul
xchg
adc
movsb
bnd
repnz
clc
orl
fldlg2
push
fwait
cmp
lret
mov
add
ret
insb
mov
insb
push
inc
fwait
pop
mov
and
or
or
jno
lahf
add
mov
leave
inc
out
push
scas
pop
leave
addl
and
movsb
add
xchg
pop
and
push
push
adc
pop
outsb
repz
repz
int3
out
and
jmp
inc
mov
sub
repnz
adc
mov
inc
out
and
push
adc
mov
mov
ja
das
mov
je
popa
jne
jle
inc
cmpl
pop
xor
add
jecxz
sbb
arpl
pushf
jae
out
in
pop
mov
and
mov
mov
stos
inc
add
outsb
push
jecxz
cmp
mov
stc
xor
outsl
adc
or
out
sub
js
push
pop
cld
cmpsl
sub
xchg
cmp
loop
int3
pop
shlb
push
add
add
xchg
int
mov
cmp
or
in
mov
mov
pop
hlt
mov
jecxz
in
test
add
repnz
xor
xchg
pop
sub
dec
or
outsb
cld
shll
ds
imul
les
call
mov
mov
add
bound
cmp
enter
mul
jae
push
xlat
mov
sahf
jne
aad
and
inc
fidivrl
mov
fcom
call
sahf
jge
outsl
sahf
pop
jno
mov
pop
cmp
push
pop
into
loopne
inc
sahf
loope
cmpsl
lea
fldt
lret
xchg
movsl
insl
pop
bound
jno
jb
push
daa
movsb
dec
imul
mov
aam
mov
push
sbb
jnp
clc
stos
cmpl
rcrl
dec
out
mov
and
mov
ret
popf
sub
add
lea
fs
hlt
shl
or
adc
add
pop
sbb
jle
insl
jge
xor
jbe
jns
jno
fdivrs
imul
sbbb
add
mov
aaa
loop
sbb
mov
mov
daa
cmpb
mov
fbld
dec
jnp
fucomip
cmpps
sbb
sbb
mov
pushf
pop
inc
mov
ret
cwtl
iret
cld
push
cwtl
std
pop
popa
add
dec
pop
sbb
inc
jmp
push
mov
test
mov
mov
lock
out
push
xchg
aas
in
push
pop
jmp
mov
shlb
xor
in
add
pop
cmp
addr16
inc
lret
sahf
push
cmpsb
push
test
rcrb
leave
mov
repnz
mov
icebp
dec
mov
jae
hlt
out
pusha
or
xlat
jle
mov
sbb
fs
psubsw
in
sbbb
lret
dec
adc
push
and
jl
insl
xchg
push
inc
push
loop
push
into
outsb
mov
and
inc
xchg
and
pop
adc
push
out
mov
add
repz
into
add
inc
and
fbld
leave
test
adc
rolb
mov
das
jns
mov
stos
lock
push
testl
ljmp
mov
fnstenv
jmp
in
push
outsl
and
and
xchg
jo
div
hlt
lods
jnp
xchg
or
push
cmpsl
in
pop
hlt
sbb
lahf
lcall
push
icebp
push
pushl
push
shll
aas
out
dec
push
xchg
fbstp
sbb
and
pop
jle
arpl
mov
xchg
rclb
mov
mov
ds
lock
dec
fbstp
inc
mov
fdivp
xchg
pop
xchg
loopne
movsl
loope
popa
movsb
xlat
dec
and
jecxz
inc
lcall
loopne
or
adc
add
mov
jbe
outsl
push
in
xor
loopne
jbe
push
inc
mov
dec
into
fadd
pusha
stc
test
rorb
es
lods
fcomip
inc
data16
and
lea
loopne
inc
jnp
outsl
mov
inc
sub
flds
sbb
xchg
adc
scas
out
xor
imul
jne
jno
pop
push
sbb
clc
pusha
xchg
aam
push
xchg
call
lea
pusha
cli
int
mov
and
pusha
add
jp
and
int3
dec
sub
sbb
jp
push
lods
call
aad
jecxz
or
fs
icebp
xchg
clc
cltd
mov
xor
push
and
cmp
subl
adc
dec
cmpsb
cmc
out
iret
into
jmp
sbb
cmp
cmp
and
or
test
outsb
xlat
clc
enter
adc
sbb
pushf
cmp
push
push
xchg
jne
iret
iret
sbb
enter
add
inc
xchg
mov
mov
cli
mov
mov
jbe
in
int3
int
rclb
scas
sbb
push
pop
cwtl
ja
inc
dec
ficoms
xor
jle
dec
or
leave
push
dec
adc
cmpsb
cmpl
mov
or
cmpsb
add
outsl
fcmovnbe
xor
repz
pop
adc
ficoml
mov
ja
sti
insb
loop
mov
mov
pop
lods
shlb
add
mul
and
roll
rclb
mov
lret
push
mov
pop
mov
mov
testb
shrb
insb
and
fldcw
xchg
in
ss
lcall
push
clc
call
sub
push
dec
and
cs
add
mov
mov
sbb
adc
aaa
or
mov
lcall
adc
mov
push
cld
cli
fsubrs
aad
data16
or
daa
fisubs
dec
bound
loopne
orl
jns
inc
fadds
pushf
imul
sub
inc
push
mov
sub
insl
pop
cmp
outsb
push
mov
mov
add
lock
or
loopne
std
adc
sub
cmpsl
stc
std
mov
inc
nop
mov
xor
ja
jmp
lahf
setbe
icebp
mov
dec
into
xor
jb
pop
mov
xchg
or
cwtl
jp
and
scas
outsb
or
or
stc
scas
inc
jecxz
aaa
push
push
mov
or
pushf
in
testl
mov
sbb
cld
test
sahf
dec
loop
push
cmpsl
ja
push
cmp
xor
inc
pusha
scas
and
push
ljmp
out
sub
push
fs
imul
sbb
test
dec
stc
into
and
inc
pop
and
xchg
adc
push
xchg
xor
jnp
mov
sub
mov
sbb
xor
mov
cmc
sbb
gs
push
int
lret
aad
cmp
pop
scas
mov
les
rcll
xlat
or
call
clc
inc
in
lods
add
mov
add
cmpsl
js
xchg
insb
jmp
je
jmp
loop
sub
nop
fnstcw
sub
lock
xchg
mov
mov
lret
pop
push
jo
jnp
inc
jl
ret
lea
sbb
inc
or
movlps
xchg
stc
test
and
xchg
jg
int
scas
jl
cmp
inc
mov
daa
imul
jo
mov
mov
sbb
fldcw
xchg
andb
loop
cld
xchg
sbb
mov
out
fsub
inc
pop
push
sub
vcvtps2dq
and
cmp
hlt
scas
call
fucomp
int3
mov
or
mov
cmovs
mov
jecxz
xor
ds
dec
lret
mov
mov
iret
ffree
nop
push
cs
adc
sub
insl
in
cmp
aam
sub
test
jmp
fimull
outsb
or
xchg
cmpsl
stos
scas
cmp
leave
leave
daa
scas
iret
sahf
jbe
es
ljmp
push
push
pop
push
add
or
dec
cs
jle
lock
dec
leave
scas
fs
std
mov
ds
sbb
iret
or
int3
jmp
daa
rcrl
imul
xor
mov
in
idivl
movsb
frstor
mov
das
jmp
jle
or
cmpb
fildl
sti
aam
ret
mov
pop
aad
xchg
mov
adc
mov
adc
loop
xchg
outsb
flds
mov
lcall
cli
cmp
int
and
mov
pop
iret
les
mov
inc
call
pop
scas
push
cmpsb
sbb
jmp
dec
xchg
lcall
add
push
idiv
inc
dec
cld
das
repz
xchg
pop
xchg
insl
jle
jno
loop
push
add
mov
lds
test
negb
daa
bound
mov
adc
out
inc
adc
imul
xchg
add
inc
xchg
pop
imul
bound
shll
dec
in
inc
pop
in
jnp
xchg
test
sbb
pushf
sti
or
adc
clc
inc
xchg
ja
gs
add
dec
mov
mov
jl
je
adc
adc
lcall
jmp
test
push
aaa
sub
rcll
std
fisubrs
jg
pop
ds
lahf
add
sahf
fcoml
mov
rcrb
aaa
addr16
pop
push
mov
popf
aad
push
leave
lods
test
add
mov
or
scas
cltd
inc
loopne
dec
dec
ss
stc
pop
cwtl
push
je
mov
dec
out
fs
jl
mov
and
and
repnz
push
cmp
in
pop
notb
xor
fadds
dec
pop
jae
xchg
insb
sbb
das
js
add
xchg
xchg
mov
popa
pop
test
xor
add
or
into
xchg
jmp
dec
or
pop
add
aas
mov
rclb
and
lea
mov
xlat
jb
push
jo
lea
insl
xchg
push
push
mov
pop
in
push
aad
repnz
stc
iret
xorl
and
mov
lahf
mov
jle
int3
pop
clc
dec
ja
adc
dec
stc
movsl
repnz
mov
sbb
mov
mov
jmp
pop
cmp
sahf
icebp
test
xlat
cmp
sub
jge
mov
mov
xlat
mov
mov
push
ror
lahf
add
push
cltd
dec
lret
push
enter
icebp
mov
xchg
adc
and
ret
pushf
mov
or
add
fsubrs
fsub
outsb
lds
shlw
cmp
and
ljmp
das
lea
es
mov
push
out
sub
sbbl
fwait
dec
call
jae
pop
sbb
outsb
jno
and
push
pop
mov
jp
add
inc
inc
scas
les
pop
mov
sub
pushl
push
shll
xor
push
lods
jb
push
mov
sub
fimull
add
cmc
cmp
mov
les
or
lds
mov
jecxz
push
cmp
ljmp
mov
subl
dec
dec
pminsw
mov
cs
test
and
xlat
popa
sub
imul
lock
mov
sbb
movsl
add
push
incl
mov
mov
int3
push
xor
lret
call
jb
mov
clc
add
push
mov
inc
loop
das
cmpsb
rorb
mov
shll
adc
dec
push
and
stc
add
xchg
ficomps
loopne
or
fisubl
pop
xchg
and
mov
mov
xchg
push
test
lret
jmp
stos
dec
cmp
loope
or
ret
shlb
int
jo
aaa
jo
push
push
xchg
mov
push
daa
sub
add
int
sbb
mov
mov
es
jns
xchg
add
dec
xor
pusha
popf
lock
mov
popa
outsl
mov
imul
dec
push
mov
insb
imul
testl
test
adc
adc
adc
mov
or
enter
jge
test
xchg
movsl
and
cld
dec
lret
repz
jae
or
push
clc
and
pop
push
aam
or
add
ret
adc
add
test
stc
lahf
cmp
call
inc
cmp
loop
jns
jle
stos
scas
loop
xchg
and
xor
push
ljmp
scas
lods
js
cltd
imul
mov
loop
push
push
inc
or
sbb
adc
test
mov
cs
pop
pop
cmp
movl
xchg
mov
int
call
repz
pop
imul
mov
and
sbb
push
mov
ljmp
test
cmpsl
xchg
inc
or
sti
adc
xchg
adc
and
pop
ss
or
pop
xchg
aaa
andb
subl
fstl
vmread
mov
test
xchg
leave
inc
sti
cmpsl
sar
cmpsl
sbb
mov
pop
addr16
dec
mov
mov
add
into
sub
popf
outsb
mov
mov
sbb
add
and
fwait
loope
push
add
fs
in
xor
imul
andb
jne
cmc
or
rcrb
addr16
jo
mov
addr16
dec
orl
daa
mov
lcall
in
push
shrb
mov
aad
jg
les
jae
push
push
fsubs
in
jne
push
jge
aas
dec
enter
xor
inc
nop
sbb
mov
or
pop
jle
and
test
cmovnp
rorb
movsl
out
sub
sub
xchg
or
mov
clc
pop
pop
xchg
jl
mov
sbb
lods
jecxz
mov
in
pusha
sbbb
shl
imull
inc
xchg
xor
rcrb
filds
push
rorb
jae
pop
mov
push
xchg
jne
mov
sbb
inc
lods
dec
sti
lods
icebp
jne
lock
clc
addl
lretw
stos
andl
jnp
shl
imul
adc
rcll
inc
sahf
lcall
pop
cli
jecxz
sub
lods
sbb
sahf
sbb
lock
mov
jb
data16
stos
push
pop
fldt
psrad
xor
mov
stc
push
ja,pt
or
dec
pop
mov
and
xchg
shl
inc
sbbb
adc
outsl
mov
push
cli
rcll
enter
mov
mov
clc
sarl
jl
std
sbb
popa
lea
scas
fadd
push
dec
test
ret
jecxz
lcall
inc
inc
mov
les
fdiv
adc
mov
fisubs
ja
mov
call
das
or
xor
ds
fidivl
xor
aas
js
insb
mov
xchg
xchg
shrb
inc
ja
pop
gs
cltd
jae
out
loopne
movlps
ret
mov
insb
jmp
cmp
cli
inc
xchg
fs
lds
aaa
mov
add
mov
mov
test
lcall
add
push
mov
pop
jecxz
mov
cmp
fcompl
popa
pusha
insl
jg
dec
mov
sbb
ja
inc
cltd
fwait
cs
pop
push
in
push
xchg
movsb
and
xor
jae
out
inc
test
aam
cltd
ja
mov
int3
inc
dec
outsb
push
in
adc
test
jb
inc
popa
sub
or
xor
push
outsl
aas
mov
fisubs
call
leave
sub
repnz
sbbb
lock
and
cwtl
dec
imul
lret
xchg
pop
dec
push
sub
pop
xchg
inc
dec
insl
hlt
push
mov
dec
lods
cmp
inc
cmpsl
cmp
xorl
repz
jae
mov
add
sbb
ret
std
sub
jnp
adc
iret
jp
dec
daa
inc
mov
pop
sub
dec
cmp
out
dec
xor
push
inc
cwtl
cltd
daa
inc
inc
movsl
dec
fdivrp
cmp
fldt
and
pop
xor
mov
lcall
adc
push
cltd
xchg
js
subl
mov
cs
addsd
frstor
or
stc
cmp
jne
enter
aaa
or
and
push
or
xchg
fmulp
xchg
in
enter
mov
bound
ljmp
sbb
mov
xor
lret
jg
mov
test
popa
sub
push
xchg
mov
in
enter
mov
lock
xchg
xor
cli
xlat
movsb
sbb
stos
adcl
dec
scas
inc
fimull
aam
repz
imul
shl
mov
sahf
je
movsb
das
mov
outsl
sbb
push
ss
jecxz
dec
jle
fldenv
roll
sbb
jmp
ljmp
xchg
fsubrs
je
shl
xchg
div
sbb
fists
and
cmp
movsb
cmp
mov
pusha
cli
adc
sbb
das
adc
nop
invd
push
mov
fcom
aas
mov
xchg
stc
push
aad
rorl
daa
adc
les
nop
dec
repz
inc
pop
jns
sbb
aad
sub
fiadds
or
cmp
lds
in
add
cmp
lret
iret
mov
adc
pop
sub
mov
test
mov
xchg
loopne
dec
adc
jno
pop
adc
in
cltd
ss
jb
sbb
sbb
dec
cmp
cli
movl
dec
clc
das
adc
mov
mov
cltd
push
mov
mov
adc
in
inc
sbb
mov
mov
adcl
imul
xchg
jg
xchg
out
jle
adc
adc
jns
out
pushf
shl
inc
add
lock
push
fwait
ret
gs
xor
lret
xor
and
movsl
pushf
test
pop
scas
dec
jbe
push
jp
or
inc
push
movsb
sti
jno
das
mov
dec
pop
ss
cmp
push
cwtl
xlat
test
jb
jo
pop
and
add
pop
jmp
jle
loopne
mov
rorl
inc
push
pop
dec
pop
sbb
or
push
je
push
ss
out
frstpm(287
sbb
inc
sub
mov
cld
fimuls
xchg
mov
outsb
lods
lock
or
call
mov
mov
ds
sbb
mov
syscall
mov
lock
push
cs
dec
fistps
push
xlat
adc
mov
push
push
pop
jo
aas
imul
mov
test
jne
jmp
push
sbb
jl
xor
push
sub
ret
scas
mov
mov
xor
in
or
ds
iret
outsl
test
xor
sbb
or
xchg
push
inc
pop
jp
icebp
int
mov
movsl
adc
fwait
pop
pop
fdivs
lret
pop
test
lahf
and
jne
cmp
cmc
adc
in
add
sub
fcoms
or
shl
pop
push
arpl
cmpsl
shll
ret
xlat
jl
mov
jne
xchg
or
call
mov
adc
lcall
movsl
cs
loopne
jb
dec
xchg
push
push
fcoms
mov
lcall
sahf
mov
add
addb
xchg
push
leave
roll
pop
mov
outsb
inc
movsl
hlt
into
pop
adc
inc
xlat
rcr
or
test
insb
cmp
adc
pop
fwait
stc
push
insl
mov
outsl
fisubl
mov
shlb
pop
test
jbe
and
cwtl
push
popa
subb
call
jg
xchg
add
scas
repnz
repnz
add
inc
nop
imul
and
push
sbb
lods
mov
and
loopne
sbb
push
pop
aaa
pop
jb
imulb
sbb
loope
dec
das
les
adcl
ficoms
push
add
inc
dec
sbb
inc
dec
dec
clc
loope
paddq
dec
out
outsl
mov
imul
add
jmp
stos
xchg
xor
inc
lret
mov
inc
sbb
out
sbb
push
mov
dec
mov
jecxz
sbb
movsb
pushl
adc
mov
mov
cmpsl
pop
mov
sahf
clc
push
push
icebp
out
push
cmp
lea
sbb
cmp
push
cmp
mov
xchg
or
push
call
push
mov
cmp
mov
aad
push
negl
mov
movsl
loope
shrl
lock
test
test
iret
sbb
jecxz
xchg
sbb
lea
push
or
sti
stos
xchg
pause
add
subl
in
mov
andl
bound
mov
repnz
subl
xor
das
jno
xlat
nop
fidivrl
addr16
scas
daa
sub
xchg
popa
push
cmp
dec
jae
out
bnd
mov
or
add
jge
jmp
inc
sbb
sbb
xchg
repz
in
and
mov
mov
mov
jecxz
mov
andb
int
jmp
cmpsl
mov
pop
pop
jge
and
and
mov
mov
cwtl
daa
outsb
mov
ljmp
pushf
int3
pop
xchg
pop
into
test
lahf
mov
hlt
addb
mov
sbb
jge
xchg
inc
pop
and
into
push
or
loop
les
filds
mov
xorl
xor
xor
addr16
add
fldenv
int3
data16
lahf
stc
or
out
cmpb
sub
cld
lods
or
cmc
mov
repz
jb
hlt
inc
mov
dec
das
ss
xor
push
loopne
xlat
testb
sub
pushf
ljmp
in
xchg
jmp
frstor
cli
loope
xchg
xor
push
outsb
lret
fidivl
popa
adc
hlt
mov
and
fwait
in
cmp
orb
js
js
pop
sub
ffreep
and
movl
sbb
pop
mov
movl
mov
pop
sti
jns
push
fimull
mov
cltd
movsb
mov
rcrb
jp
rcrl
inc
jns
xor
and
int
cld
mov
sbb
scas
arpl
fcomp
iret
out
inc
lods
test
xor
push
mov
les
xchg
mov
dec
mov
sub
dec
insl
xor
or
mov
hlt
into
shrl
push
sub
jle
leave
out
outsl
xchg
lret
mov
cmpsb
mov
push
xlat
mov
or
das
xor
mov
dec
adc
jo
xor
push
fidivrs
cmp
popa
push
lods
cmp
rcr
sub
outsl
decl
mov
or
enter
js
shll
mov
aaa
pop
in
mov
insl
sub
cmp
push
inc
aas
daa
cmp
jle
repnz
inc
lods
cmp
sub
test
dec
jbe
popf
mov
lea
aaa
adc
jb
aam
add
cmp
mov
movsb
out
sahf
mov
pop
inc
dec
and
pop
or
or
xchg
loope
icebp
iret
jae
mov
sbb
adc
int
add
dec
mov
repnz
mov
jae
dec
popa
pop
aam
inc
pop
daa
inc
daa
dec
push
mov
cmp
cmpsb
push
jb
mov
lahf
lods
jl
pop
fs
mov
movsb
data16
loopne
mov
fwait
pop
mov
mov
les
jle
lret
inc
jns
call
mov
push
mov
pop
jl
inc
push
cmp
fsubrs
mov
add
les
cs
jecxz
hlt
xor
mov
mov
fisubs
jl
notb
xor
mov
cmpl
sbb
xor
xlat
movsl
jl
imul
repnz
and
xor
fisttpl
fists
sahf
xchg
rol
aad
or
mov
rolb
iret
mov
aad
and
sub
mov
jmp
ds
or
daa
dec
jnp
das
mov
mov
cmp
inc
xchg
repz
es
scas
pop
aaa
stc
stos
jecxz
jo
iret
repnz
mov
add
pop
mov
and
aas
cli
sub
mov
fildll
sbb
pop
shlb
sub
mov
sbb
xlat
sub
xchg
xchg
scas
jbe
in
jns
fwait
repz
push
jae
cmp
mov
push
sub
or
shl
jae
gs
add
cmp
add
mov
das
sub
jnp
popa
ljmp
inc
loopne
scas
sub
fldl
je
out
stos
lea
jg
imul
adc
pop
lock
adc
push
mov
add
jns
push
stos
stos
cli
jnp
mov
dec
cwtl
cmpl
jp
clc
jmp
icebp
fdiv
xchg
push
scas
push
sbb
xor
push
sti
stos
inc
jae
mov
fcompl
dec
popf
scas
xor
cli
or
xor
jbe
enter
push
mov
shl
cmpsb
fsubr
mull
icebp
pop
iret
in
ret
add
cmp
insb
mov
inc
jge
push
fsubrs
in
leave
lea
sub
sbb
mov
loopne
xor
push
mov
dec
es
lahf
mov
fcompl
sub
sbb
fs
cld
bound
pop
push
daa
repz
testl
xor
sub
lock
sbb
add
or
imul
mov
out
add
jbe
pop
std
mov
call
push
addl
imulb
push
cmp
stc
xor
sub
push
dec
fnstcw
aas
fidivrs
pushf
pop
cmc
mov
xchg
xchg
fmull
test
ret
or
aad
dec
pushf
nop
dec
jmp
xor
lea
dec
movswl
out
xor
add
test
mov
inc
or
mov
dec
sti
pushf
pushf
jg
mov
xor
pop
mov
inc
ds
bound
fwait
adc
cmpsb
lret
movsl
enter
leave
mov
dec
stos
mov
pushf
and
add
int
in
outsl
push
mov
aaa
xchg
inc
xor
sti
cmp
mov
aas
mov
inc
repz
aaa
mov
jno
repnz
data16
mov
xor
add
stc
arpl
in
inc
cmp
push
movb
jge
push
add
sub
lret
pushf
jl
pop
push
pop
test
xor
dec
clc
push
xorl
shll
jge
sub
popf
xchg
test
and
jns
mov
push
mov
lret
dec
inc
jmp
or
xor
out
mov
sbb
jnp
outsb
in
lcall
cltd
push
mov
addl
lahf
stc
jecxz
cld
mov
mov
adc
mov
mov
das
dec
sub
orl
xor
cmp
mov
ficoml
fidivrs
cwtl
movsb
scas
in
mov
xor
or
das
jmp
test
fdivr
xchg
sbb
ljmp
leave
enter
ret
mov
mov
lret
sbb
dec
movsb
jnp
lret
test
movsl
add
lock
dec
adc
cltd
xor
sbb
inc
jecxz
mov
ret
sub
outsl
mov
mov
or
dec
mov
les
into
xor
rolb
push
loopne
movsl
mulb
js
mov
int
pop
jne
inc
or
or
out
stc
icebp
lods
dec
xor
jb
shll
fidivl
mov
insb
xlat
pusha
in
and
mov
rcl
fsts
ret
incl
test
push
pop
jecxz
les
xor
pop
loop
out
lock
mov
adc
sub
test
jp
std
loop
jnp
and
mov
das
jno
mov
iret
ss
cmp
adc
cmpsl
fidivl
popw
xor
xor
ja
or
push
dec
cmp
cmp
sbbb
lcall
fists
pop
fstp
clc
cmp
testb
push
pop
loope
push
jns
aaa
lret
mov
cli
adc
mov
xchg
cmp
pop
fstpl
imul
aam
movsl
adc
arpl
sbb
lods
add
xchg
test
mov
mov
clc
dec
pop
call
sti
fisubrl
cmpsl
add
out
pop
ja
insl
adc
xchg
mov
outsl
mov
cwtl
fdivs
cmp
xor
xchg
pop
cmp
aas
dec
jge
jecxz
cmpsl
int3
sahf
mov
mov
scas
into
insl
inc
enter
test
cs
mov
mov
inc
xchg
inc
test
inc
push
jno,pn
mov
lcallw
push
sbb
fisubl
mov
mov
mov
ficoml
dec
bound
or
adc
loop
outsb
out
dec
orl
daa
loope
outsb
enter
or
sahf
test
pop
sub
push
mov
cmp
in
sub
lret
int
mov
xchg
xchg
mov
adcl
and
mov
rolb
inc
shl
or
mov
cwtl
fistpl
adc
mov
hlt
je
mov
les
ds
cmp
lea
lods
enter
dec
cmpl
inc
stos
js
sub
add
test
movsl
push
cmp
pop
sub
test
decl
inc
or
imul
pop
bound
in
out
arpl
imul
cmp
fbld
xor
cltd
in
mov
in
in
push
sbb
dec
test
in
je
cmc
push
xchg
pusha
arpl
aad
lea
test
sbbl
xchg
ja
cmp
and
mov
pop
insl
adc
dec
je
dec
fcmove
rclb
adc
sub
dec
inc
pop
inc
fs
dec
add
stos
push
dec
or
inc
stos
jae
sbb
lcall
adcb
scas
sbb
lds
loop
push
cmpsl
jmp
push
nop
xor
mov
push
jae
test
and
mov
adc
adc
movsb
out
mov
scas
mov
sub
inc
cmp
ds
and
jecxz
aas
addr16
cmp
mov
iret
dec
mov
js
mov
psubusb
imul
loope
pop
xchg
lds
jge
mov
cltd
popa
push
push
sbb
fwait
ret
stos
mov
pop
add
ret
jae
aaa
cli
mov
push
adc
roll
cmp
inc
dec
pop
xor
or
mov
xchg
jmp
data16
call
cli
cmp
loopne
mulb
or
xlat
sti
jp
test
popf
push
sbb
mov
in
mov
lret
jns
test
or
mov
dec
mov
mov
imul
out
push
mov
push
inc
shrb
add
pop
dec
loope
mov
cmp
push
push
xor
faddl
shlb
cmp
shlb
imul
mov
clc
call
xlat
jmp
std
movsb
jne
lds
jne
jae
mov
loop
test
adc
or
inc
cmp
arpl
lock
cltd
cld
data16
enter
push
lret
jno
out
dec
das
fcompl
cmp
jb
scas
and
sub
fwait
mov
fnstsw
mov
jne
scas
inc
roll
mov
sbb
and
pop
mov
jnp
or
mov
mov
add
mov
xlat
xchg
lea
mov
sbb
or
sbb
lcall
or
adc
out
outsb
mov
push
inc
cmp
sbb
adc
mov
ret
shlb
aad
pop
icebp
cmp
subb
cld
mov
jle
stos
and
cwtl
je
fnstsw
dec
mov
xchg
mov
lods
cmpb
in
mov
out
xchg
mov
xor
scas
inc
mov
imul
xlat
mov
jmp
mov
jae
or
das
sbb
lock
leave
mov
push
xchg
jp
idiv
and
add
sbb
or
test
int
lret
dec
adc
add
adc
or
inc
or
int
jbe
xor
jne
aad
movsb
aam
es
data16
popa
add
ficomps
clc
sub
or
or
fistpl
push
ljmp
int3
cmpsl
pushf
orps
lret
loopne
pop
pop
es
leave
ret
add
jae
fildl
rcl
faddl
xchg
jge
jb
xor
jo
lock
imul
jbe
jne
add
pop
jl
out
scas
call
pop
add
add
or
xchg
lods
test
aaa
mov
loop
stos
nop
fldcw
jnp
xchg
mov
push
or
in
cmp
jae
lock
and
stos
mov
out
xchg
push
jle
inc
push
cmpsl
pop
xor
popa
xchg
cmp
cs
push
push
mov
adc
imul
xor
dec
or
pop
mov
sbb
add
xor
lds
jno
mov
inc
std
mov
jl
xchg
lcall
fidivrl
call
loop
mov
inc
ljmp
cmp
pop
out
pushf
mov
xor
pop
sbb
and
rcrb
lea
mov
xor
xchg
call
and
pop
cli
sbb
jp
sub
aaa
xchg
sar
cli
mov
int
xchg
dec
pop
add
or
mov
in
faddp
imul
inc
icebp
scas
lret
jns
jb
iret
into
mov
pop
push
jnp
int3
sub
fcomps
je
mov
imul
clc
dec
mov
int
xor
mov
xchg
sub
hlt
pop
mov
inc
jbe
int
jmp
mov
xchg
push
into
add
pop
and
sarl
push
js
ljmp
ljmp
aaa
fistps
stc
seta
push
pop
mov
cmpsl
stc
fistpl
inc
sbb
repz
jns
iret
insb
add
and
and
sbb
sub
stos
shlb
lods
push
jae
add
lcall
mov
inc
mov
fadds
sub
movl
mov
xchg
mov
out
aas
sub
sbb
and
dec
xor
loope
loop
adc
inc
push
pop
sbb
sbb
add
xor
mov
sub
shlb
dec
fists
ja
mov
in
ljmp
xchg
xor
mov
and
xchg
pop
cmp
ret
out
fstpt
xchg
xor
sub
negb
rcrl
adc
xlat
loope
dec
ljmp
cs
dec
add
push
mov
xlat
sub
rcrb
adc
jnp
mov
test
jno
dec
daa
fs
shlb
sbb
fwait
xchg
adc
mov
sbb
out
adc
in
scas
cmpsb
jnp
movsl
pop
mov
jl
lds
rorl
outsb
es
dec
xor
pop
push
stc
mov
sub
push
movb
add
adc
add
pop
jecxz
les
sub
jp
xchg
shlb
ffreep
lret
sbb
pop
adc
icebp
dec
lret
xorb
xchg
loope
pop
sarl
test
mov
popf
xchg
ljmp
or
pop
fbstp
jmp
pop
inc
movsb
inc
push
movsb
mov
in
push
test
jge
jno
or
cmp
sbb
and
sub
repnz
stc
or
mov
inc
lret
test
inc
pop
adc
jmp
jle
xchg
and
jo
add
sbb
push
ror
push
insb
sub
ss
pop
pusha
jg
mov
jmp
popf
adc
and
and
lahf
cltd
cmc
push
pushl
rcr
addr16
lret
test
aam
je
int3
sub
fucomip
lods
adc
adcb
test
sub
ds
mov
cli
adc
mov
mov
sub
or
je
enter
cmp
out
je
loope
movsb
imul
callw
hlt
imul
out
xor
into
lret
jmp
xchg
or
loope
inc
icebp
js
cmp
push
shlb
push
xchg
inc
or
jbe
scas
popa
cmp
cmp
cmp
mov
and
test
shlb
cmpsl
lret
jbe
xor
mov
fildl
add
dec
js
mov
sbbl
adc
xlat
jle
pusha
push
cmpl
inc
lods
nop
std
xor
sar
and
sub
faddl
dec
mov
fiadds
aad
cmpsl
mov
test
fwait
inc
and
loope
mov
addb
or
orl
fdivr
cmp
xor
imul
sub
repnz
adc
sbb
dec
pop
pop
int3
pushf
cmp
popf
mov
and
popa
fnstcw
testb
idiv
js
mov
mov
jge
ret
mov
jle
rorb
jae
cmp
sub
adc
lods
jnp
add
inc
xchg
or
push
mov
xor
ds
aam
inc
lods
dec
xchg
or
xor
fisubrs
push
xchg
mov
iret
call
movsb
push
sub
daa
jle
mov
xor
adc
sub
jge
jno
cmc
sub
ret
jbe
loopne
insl
int
cwtl
sub
arpl
lods
and
fnsave
xchg
mov
push
es
inc
or
mov
or
mov
mov
push
pop
sbb
in
xchg
pusha
xchg
xchg
jp
dec
hlt
arpl
jmp
add
testb
inc
cwtl
lods
shrb
ficomps
mov
scas
pop
shrl
jnp
sbb
and
enter
fucomi
jg
mov
adc
icebp
mov
lock
mov
repz
cmpsl
daa
in
shlb
test
xor
pop
jge
mov
aas
mov
shrl
popa
aam
and
xchg
inc
mov
daa
stos
adc
rorb
cltd
loopne
or
clc
push
sbb
fnstsw
hlt
xor
or
cmp
adc
jmp
or
mov
dec
mov
or
and
aam
cmp
test
pop
lock
lds
sbb
pop
push
lret
xchg
pop
les
pop
push
jl
loopne
and
inc
les
dec
pop
jle
icebp
int
mov
lock
movsb
or
lret
xor
adc
mov
jl
mov
cwtl
ja
adcb
cmp
les
sub
sub
ds
mov
adc
loopne
push
out
icebp
sbb
pop
scas
dec
inc
sbb
sub
scas
pop
sbb
xlat
sub
sar
pop
push
and
stos
sub
sbb
adc
add
inc
sub
lret
aaa
lock
outsl
push
mov
insb
in
lods
fdivrl
xchg
jbe
mov
dec
sti
rcr
add
mov
cmpsb
loop
dec
test
or
into
es
rol
jne
sti
gs
cltd
cmc
xchg
jae
adc
and
inc
sbb
repnz
sti
push
push
lea
aam
cmp
in
movq
lods
dec
cmp
mov
aam
lahf
int3
mov
out
pop
xorb
pop
gs
mov
mov
scas
xchg
xchg
sbb
xchg
sub
movsl
adc
mov
jge
jg
push
or
out
out
sbb
imul
jmp
mov
jge
call
leave
and
sub
rcr
test
cld
adc
mov
loope
mov
sbb
mov
xlat
movsl
loopne
sub
sub
mov
pusha
or
shrb
clc
loope
mov
cld
out
pop
jae
mov
pushf
mov
add
nop
mov
pop
add
mov
push
mov
xor
cmc
decb
int
push
xor
dec
xor
mov
push
sti
and
lret
cmp
cmpsl
push
cmp
mov
mov
movsb
mov
in
in
add
out
sbb
sub
mov
and
inc
std
out
xor
nop
push
pop
addb
data16
loope
add
mov
orb
movsl
pop
aas
xor
repz
fldcw
out
and
mov
xor
arpl
call
mov
fndisi(8087
mov
sbb
and
cmp
jo
repz
mov
mov
push
addr16
pushl
out
pusha
imul
pop
pop
adc
out
fucom
sbb
gs
xchg
les
push
cld
inc
lcall
adc
or
loope
cltd
cmp
xchg
outsb
xchg
mov
fldl
pop
es
ljmp
jne
sbb
popa
push
push
ret
pop
leave
es
jne
test
push
mov
mov
push
pop
outsb
test
shlb
mov
add
mov
loopne
in
testl
sub
and
cmp
jecxz
jno
fdiv
outsb
pop
call
sahf
int
fbld
dec
xorb
loope
ret
int3
mov
cld
fs
mov
arpl
inc
sub
sbb
fstl
sub
push
add
js
rolb
dec
push
in
test
insb
arpl
add
sub
jae
out
lret
xchg
or
mov
fcmovnb
push
ds
add
pop
adc
sbb
and
dec
ret
roll
mov
dec
sti
sbb
imul
push
xor
cld
pop
push
xchg
sahf
cli
lock
outsl
vsubsd
je
icebp
addl
inc
sahf
icebp
out
and
inc
mov
adc
cmpb
cmp
rcll
jg
pop
pop
lret
scas
fistps
and
jmp
sub
insb
sahf
mov
mov
add
pushf
push
cwtl
sub
movsb
ljmp
stc
xor
cs
fsubrl
mov
xchg
cmc
popa
dec
fstl
mov
adc
pusha
les
mov
cmp
push
cli
sahf
cli
addb
mov
and
cmp
sub
ficompl
sbb
fucomip
rcll
icebp
ja
add
inc
pop
or
mov
ja
pop
or
in
mov
lock
cmp
out
xchg
je
pop
cmc
frstor
jge
daa
outsb
push
or
mov
push
pop
out
lock
jae
stos
call
inc
and
push
cmc
pop
outsl
arpl
mov
pop
in
push
test
sub
push
popf
test
ds
mov
mov
test
mov
xchg
scas
sub
clc
fstl
push
imul
sub
push
jge,pt
data16
mov
and
xchg
call
mov
sub
add
jl
cli
cmpb
jp
cli
js
lods
add
pop
ja
add
add
mov
xchg
pop
mov
or
dec
dec
int3
cmp
sbb
jns
stos
lods
insl
push
push
xchg
ds
jo
jmp
mov
outsl
popf
cmp
and
sbb
mov
xchg
jno
pushf
xchg
adc
in
je
mov
lret
cmp
mov
cmp
aas
shlb
dec
sub
test
notb
addr16
call
pop
cwtl
dec
cmp
into
mov
sub
cmp
pop
xor
repnz
scas
mov
push
cli
jle
mov
push
sub
imul
jmp
mov
add
push
out
insb
push
dec
test
mov
cmp
jno
inc
mov
push
mov
add
pop
sbb
in
push
clc
mov
shlb
aam
insl
cs
inc
mov
cwtl
shl
cmp
mov
sub
cld
mov
iret
mov
and
jnp
jns
shrl
inc
inc
decb
pop
mov
cld
in
mov
ljmp
ja
mov
imul
adc
jo
popf
jne
pop
inc
call
pop
and
and
fiaddl
mov
pop
inc
popf
dec
xor
ja
push
or
push
arpl
mov
in
xchg
mov
push
movsb
or
jmp
inc
jo
push
lock
xchg
cmp
adc
mov
lds
xchg
movsl
stos
and
xchg
mov
call
ret
add
jle
add
push
xchg
lea
mov
aaa
lods
lods
xor
dec
out
xchg
sahf
clc
mov
xchg
movsb
popa
mov
push
popf
or
xchg
outsl
add
mov
mov
mov
lds
add
sbb
ficompl
cmp
mov
mov
xchg
jnp
bound
xor
or
and
and
daa
sahf
ja
pop
pushf
test
frstor
mov
aas
stos
sub
xor
add
and
jb
daa
sti
pop
mov
fadd
rcl
sbb
lds
call
add
stos
jnp
sub
arpl
popf
xchg
fucom
and
cld
lahf
movsl
mov
out
push
push
mov
loopne
aad
pop
aas
in
xchg
jae
gs
test
mov
jno,pt
aam
movsl
pop
lods
out
mov
hlt
les
xchg
inc
pop
pop
or
mov
stos
push
outsb
sbb
jo
adc
dec
jl
out
xchg
jge
pop
jecxz
in
sub
rcrl
sbbb
pop
jp
dec
scas
add
testb
sub
sbb
mulb
or
add
call
sub
mov
mov
sub
and
push
lock
sbb
ja
mov
loopne
mov
std
mov
enter
or
add
icebp
add
stos
movsl
dec
jmp
jbe
jle
adc
jne
outsb
mov
pop
xor
sbb
fcmovu
sti
add
lcall
push
adc
imul
push
mov
or
jecxz
imul
outsb
sbbl
jle
leave
ss
push
mov
ret
fbld
es
pop
out
jnp
jp
sahf
mov
leave
xchg
pop
aam
loopne
dec
and
addb
cwtl
mov
imul
out
inc
inc
lods
call
xlat
pushf
or
sarl
psubsb
dec
pop
mov
adc
sub
xchg
outsl
mul
leave
and
mov
daa
sbb
in
jb
mov
lret
pop
aaa
adc
mov
sub
lahf
divl
pop
imulb
mov
inc
xchg
inc
sub
lcall
lcall
arpl
fisttpll
lahf
lret
pop
push
pop
jo
cmp
rcrl
cld
mov
ljmp
gs
xchg
pop
cltd
cmp
insb
inc
xchg
xchg
jne
shll
sbb
dec
inc
ljmp
fildll
mov
pop
pop
aad
mov
cwtl
lea
outsb
jp
or
push
jno
pop
adc
out
and
fs
insl
mov
movsl
lret
mov
or
into
cltd
addr16
rcrb
lret
call
or
mov
sbb
je
ds
fdivs
loope
lcall
fmull
mov
daa
in
fsubrs
ss
jecxz
push
test
mov
push
pop
pop
dec
mov
ja
jns
adc
fsub
std
adc
cmpsb
gs
mov
insb
sub
dec
add
pop
js
pop
stos
jg
jg
push
popf
fcoms
popa
mov
xor
mov
push
dec
fwait
cmc
stos
insl
in
data16
sub
pushf
fsub
cli
mov
jnp
movsb
lahf
jge
and
jbe
cld
ficompl
cli
dec
sahf
out
sub
xorl
mov
cmp
jae
fcompl
roll
inc
pop
add
ljmp
inc
outsl
pushf
pop
imul
fs
jnp
pushf
pop
loope
push
lcall
adc
xlat
dec
cmp
inc
test
or
insb
xchg
sti
loope
aad
test
jecxz
test
cmpsl
mov
bound
sub
dec
mov
addr16
xor
addr16
arpl
inc
jecxz
ljmp
pop
push
push
mov
mov
dec
push
push
rolb
xor
mov
mov
adc
sbb
inc
xchg
arpl
movsl
xor
sbb
repz
pushf
int
push
repz
sbbb
adc
add
mov
bound
ljmp
mov
xor
jl
add
loopne
and
jae
lock
push
sub
icebp
and
xchg
jl
mov
add
mov
pop
and
arpl
xor
pushf
int
cmpsb
add
vunpcklpd
dec
add
sub
push
xchg
dec
icebp
idiv
loope
mov
fcmovnb
call
jae
in
leave
xor
mov
test
ret
repz
mov
mov
push
sbb
mov
jo
jnp
or
fdivl
je
ljmp
and
stos
test
and
mov
xlat
mov
lcall
loop
push
ret
xor
sbb
jmp
jp
js
mov
clc
jp
sub
xchg
jns
sub
stos
fbld
mov
ficompl
cmp
push
cmpsb
aas
fs
sbb
pop
mov
shll
adc
lods
mov
stc
inc
xchg
int
cmp
mov
test
mov
test
adc
xlat
call
sbb
cmp
mov
fs
fcomps
jb
jo
cltd
adc
das
ret
pop
sbb
in
sbb
and
cmp
dec
mov
mov
sub
lcall
sbb
mov
out
in
pop
call
xchg
pop
push
xor
adc
rcrb
les
into
pop
add
stc
pusha
mov
shll
sbb
xlat
xchg
ror
or
inc
into
pop
rcrl
push
push
fs
lods
popa
or
xchg
jmp
jo
cmp
scas
cmp
mov
mov
mov
fsubrs
push
push
pusha
adc
dec
inc
lock
loope
mov
cmp
mov
jmp
lret
ja
sbb
mov
lret
mov
push
pop
cwtl
decl
bound
cmpsb
inc
or
pushf
filds
or
notb
das
hlt
mov
std
mov
cli
sbb
adc
sub
fs
mov
pop
pop
xor
mov
insl
xor
or
fidivrs
xor
sbb
xchg
inc
sti
adc
or
push
inc
in
add
xor
or
or
ljmp
loopne
dec
andb
movsb
test
cs
subl
aaa
dec
stos
pushf
pusha
lea
inc
push
lds
pusha
repnz
sub
push
push
nop
mov
stos
inc
loop
dec
ljmp
push
adc
es
mov
jno
and
inc
xor
dec
int3
pop
xchg
popa
cmp
std
call
clc
sub
addr16
cltd
jmp
aam
fyl2xp1
insb
cmp
add
push
sbb
cltd
lods
jnp
mov
xchg
cld
pop
add
jae
sbb
cmp
pop
and
push
in
mov
pop
test
mov
inc
iret
jb
push
xchg
sarb
sti
inc
mov
fistpl
xor
or
addl
repnz
sub
push
mov
hlt
adc
pop
mov
rorl
out
mov
shlb
xor
push
lahf
lods
sub
pushf
xchg
inc
sbb
lea
leave
or
outsl
imul
sub
xor
pusha
mov
cmpb
sub
pop
sarl
rcr
cmp
xlat
aam
mov
sahf
orb
xchg
repnz
inc
mov
jg
lock
dec
inc
mov
and
sbb
cmp
xor
inc
or
pop
movsl
xor
fisubl
xor
xchg
xchg
ja
mov
lcall
pop
pop
int3
pop
cmpsb
add
mov
lret
jg
push
mov
in
ljmp
mov
ret
pushf
sub
iret
pushf
mov
je
mov
hlt
or
sub
fcomp
inc
imul
xor
mov
ja
mov
mov
fnstcw
loop
mov
out
scas
jg
popa
push
out
stos
dec
cld
push
dec
das
or
adc
int
cmp
popa
scas
adc
push
outsl
xor
inc
sub
mov
mov
xor
repz
aam
cwtl
mov
adc
aam
mov
cbtw
push
test
mov
mov
clc
inc
ret
jae
jne
lock
bound
jae
cmc
fwait
stc
mov
bound
lea
mov
push
jmp
jb
push
out
shrb
lods
mov
sbb
add
mov
cmp
mov
js
or
fldln2
call
stos
aad
push
and
push
ficomps
sbb
add
sbb
or
jo
roll
pop
xchg
push
aas
and
aas
mov
mov
lahf
aas
cmp
sub
push
push
adc
rolb
int
arpl
test
mov
mov
xchg
fdivs
sbb
fiaddl
call
push
xor
xchg
jmp
lods
adc
mov
cmp
jmp
dec
push
lock
dec
loope
inc
dec
je
data16
cmp
sub
sbb
sbb
iret
xchg
ds
push
xor
pusha
and
cmp
movsb
add
jle
cmp
cwtl
adc
test
add
push
xchg
mov
hlt
ds
fdivrl
fadd
ret
repnz
mov
je
pop
add
push
adc
mov
xchg
mov
inc
push
ret
cld
ret
repz
orl
xlat
mov
cmpsb
data16
sbb
aam
ret
or
xor
mov
mov
ljmp
cmp
mov
or
inc
push
fwait
cmpsb
sbb
rcll
imul
or
shl
shll
mov
sub
bound
subb
stos
int
fidivs
stos
jmp
lea
dec
fst
int3
popf
push
sbb
fwait
mov
cmpsl
imul
insl
mov
clc
out
inc
gs
and
sbb
rcl
adc
push
fisttps
cmp
xchg
xor
cmp
jnp
insb
xor
dec
sti
popf
fldenv
bound
mov
xor
pop
lcall
jns
sti
notb
inc
cld
popf
jl
jne
mov
data16
in
test
ret
jmp
xchg
out
xor
xchg
test
pop
sti
mov
dec
xor
jnp
fucomi
cmpsl
mov
in
pop
cmp
jnp
mov
mov
add
gs
mov
daa
imul
mov
outsb
sarb
inc
pop
and
out
call
mov
icebp
fwait
aad
or
mov
in
inc
sbb
loopne
dec
push
pop
fwait
test
sbb
stc
ljmp
stos
pop
int
nop
out
imul
roll
and
lods
popa
cmp
cltd
fisubrl
pop
or
or
outsb
push
rorb
cmp
roll
jle
jbe
lea
mov
jns
adc
xchg
and
pusha
std
ret
pushf
pushf
repnz
jb
jle
lcall
adc
mov
dec
les
ja
push
in
pop
lahf
and
or
aam
jb
fnstsw
test
movsl
jecxz
adc
movsb
inc
xchg
es
cmp
mov
mov
jp
pop
mov
arpl
jbe
lret
cltd
cltd
jae
xchg
xchg
incb
je
jno
iret
or
jb
int
pop
addr16
mov
mov
fstpl
ret
enter
cltd
mov
out
inc
stc
adc
jp
add
loopne
aad
cmp
cld
sarl
insb
cli
or
int3
sub
in
mov
push
lahf
stos
mov
leave
jbe
sub
and
mov
jo
mov
mov
pop
into
imul
jns
push
scas
es
test
andl
popf
mov
jno
xor
push
and
sub
test
hlt
gs
aad
xor
mov
loopne
es
add
inc
leave
cld
lcall
lcall
pop
sbb
out
imul
pop
shr
sbb
lret
mov
lret
aaa
icebp
mov
lahf
aas
sub
lret
and
test
inc
sub
or
xor
shrb
push
lret
push
ret
push
dec
xchg
or
insb
dec
pop
sub
ds
add
jecxz
mov
mov
inc
pop
fcmovnb
sbb
sbb
cltd
adc
push
xchg
sbb
xor
push
lods
xor
test
mov
inc
fadds
pop
inc
fcmovb
add
dec
enter
pop
push
lret
xchg
push
cli
lods
inc
mov
icebp
leave
repnz
inc
cmp
add
cmp
es
fs
cmp
adc
test
mov
inc
sbb
jno
sub
orl
out
dec
aaa
pop
xor
das
fisttps
adc
out
orb
mov
sub
jg
push
sbb
ja
js
jmp
in
push
xchg
mov
push
mov
mov
cmp
mov
clc
mov
dec
std
neg
mov
cmp
mov
test
mov
int
out
decl
test
fs
rcll
push
test
fcompl
into
push
sub
lahf
pop
push
fs
jo
aam
push
add
int
push
and
dec
jo
popa
enter
push
into
xchg
jno
lea
repnz
and
or
adc
pop
and
cmp
mov
not
and
pusha
call
lea
dec
je
movsl
xor
in
inc
mov
xor
stc
outsl
and
clc
jp
and
daa
mov
outsb
cld
hlt
or
aad
cmc
mov
mov
xor
push
xchg
or
aad
xor
dec
xchg
mov
cmp
and
push
and
ljmp
push
adc
stc
mov
test
xchg
xor
push
cmpsb
mov
jbe
mov
push
pop
cmpsl
jb
or
outsl
mov
pop
les
jge
sbb
stos
mov
rclb
cmp
jmp
push
loop
xor
or
lock
movsl
in
mov
pop
int3
je
mov
pusha
inc
outsb
mov
jecxz
shll
out
ja
or
xchg
ds
xchg
xchg
aas
inc
xchg
mov
mov
sbb
pop
or
mov
jmp
jae
or
push
mov
pop
xchg
daa
daa
cmp
sbbb
and
push
pushf
mov
in
mul
mov
adc
mov
mov
xor
mov
xchg
loop
mov
sub
push
jb
aam
or
notl
inc
sti
inc
mov
push
int
sub
pop
pushf
imul
mov
jmp
cmc
int
jno
das
mov
push
shlb
xchg
lock
fsubs
or
sti
sbb
pop
pop
mov
jl
mov
mov
push
les
cmp
pop
xor
push
int3
addb
jae
inc
divb
lds
mov
jecxz
cltd
arpl
inc
pop
pop
cwtl
stos
and
mov
dec
jns
inc
xor
or
call
xor
pop
in
sarb
mov
mov
lods
sub
cli
fsubr
lret
loop
rorl
mov
sub
push
adc
xchg
shrl
sbb
jne
icebp
arpl
push
lahf
or
push
cltd
sub
mov
test
jno
das
sbb
pop
sahf
jmp
lahf
push
adc
mov
scas
mov
sub
jp
cmp
je
mov
lea
int
leave
pop
iret
insl
push
cmp
les
cmp
test
loop
sub
pop
fsubrs
xchg
mov
mul
xor
mov
xor
rol
push
in
in
lret
lods
lds
pop
fistpll
repz
mov
sahf
cmp
mov
sbb
pusha
fadds
add
inc
dec
inc
insl
push
cld
xchg
jmp
push
add
clc
pminsw
mov
call
and
jp
sbb
xchg
sti
outsl
addl
mov
or
dec
repz
ficoml
mov
pop
push
push
mov
adcl
pop
stos
or
lea
bound
fcmove
aam
mov
cmp
jl
fistps
mov
xchg
std
decb
gs
xor
in
outsl
and
lret
push
xor
push
int
loope
test
mov
rcll
xchg
addr16
pop
cmpsl
push
cmp
mov
adc
loope
out
stos
iret
jecxz
scas
mov
mov
outsb
pop
arpl
inc
jecxz
stos
sti
insb
cmpsl
loope
rolb
clc
ljmp
push
cmpsl
inc
mov
aaa
out
icebp
sub
inc
call
xchg
inc
inc
or
divb
ret
sti
sub
inc
add
data16
dec
pop
jno
add
lods
aas
xchg
stos
pop
popa
xor
fisttpl
cmc
sub
and
xchg
out
je
fwait
pop
jge
pushf
and
add
inc
mov
sbb
in
lods
ljmp
hlt
fnstenv
mov
leave
pushf
ja
jae
loope
loope
adc
data16
push
test
jns
mov
or
push
out
add
cmpsl
or
xor
aaa
sub
mov
inc
jbe
aaa
out
pop
sub
pop
cmp
cltd
in
inc
popa
xchg
aam
fdivr
sub
hlt
fistpll
imul
stos
aad
mov
insb
xchg
std
mov
js
sahf
repz
adc
and
or
xlat
push
jge
or
mov
pop
xchg
movups
cmp
mov
xchg
roll
push
mov
pop
cld
xorb
ja
adc
xchg
cld
sbb
subb
mov
lret
in
dec
mov
test
pop
daa
insb
push
test
pop
inc
push
or
sbb
fcmovne
pop
les
cli
mov
sahf
add
arpl
xlat
movsb
fucomi
pop
xor
popa
cmp
jmp
subl
imul
inc
lea
dec
mov
fsub
mov
dec
nop
add
inc
popa
in
ret
mov
push
cs
fmull
xor
mov
lret
int3
cmpsb
jbe
rep
ja
adc
xchg
jns
cltd
cmp
cmpsl
adc
mov
pop
jns
fildl
sbb
add
mov
or
pop
mov
add
mov
insl
push
mov
and
inc
pop
inc
mov
mov
and
pusha
int
push
adc
pop
jle
icebp
sub
add
sbb
dec
push
or
movsl
clc
imulb
aas
push
in
add
xor
sub
leave
or
cwtl
jo
cmp
testb
mov
sub
call
sahf
dec
int
fnstenv
jle
cmp
cld
cld
bnd
int3
inc
loop
mov
jnp
leave
aam
psraw
mov
jbe
cmp
cmp
in
cmp
sbb
pop
inc
cmpsb
or
xor
pop
mov
divb
dec
lcall
add
adc
sbb
sub
pop
dec
sub
cmp
cmp
pop
cmp
xchg
rolb
jo
mov
loop
mov
xor
int
mov
fs
mov
decb
jne,pt
loope
sub
cs
jae
lret
pop
xor
mov
les
out
mov
data16
cmc
mov
jno
xchg
js
stos
mov
getsec
rorb
jp
cld
push
push
adc
push
lret
push
cmp
pop
or
hlt
xor
mov
jp
add
inc
sub
mov
add
out
cmc
and
inc
cmp
and
add
cmp
pop
cwtl
inc
xor
pushf
inc
inc
jecxz
jnp
mov
dec
cli
xchg
cli
jge
push
ret
enter
in
shr
and
push
cmp
lds
pop
cmp
imul
outsl
cmpb
adc
leave
sub
test
xlat
sbb
test
pop
dec
pop
sub
push
mov
or
adc
dec
push
xchg
add
mov
mov
call
dec
scas
fbld
mov
ds
mov
scas
add
icebp
repnz
inc
fcomp
dec
nop
mov
inc
outsb
mov
into
rclb
mov
ret
jne
xchg
addr16
inc
shl
pop
mov
lahf
ret
es
pusha
xor
push
pop
mov
adc
jge
sbb
cmp
mov
ds
fisttpll
lret
roll
lcall
dec
cmpsl
rcr
jnp
jp
stos
push
dec
mov
jae
movsl
ja
ficompl
int3
pextrw
dec
dec
sbb
ds
stc
jl
sub
pop
notl
sbb
jnp
lret
push
jnp
jmp
dec
adc
pop
dec
out
lods
inc
adcl
dec
dec
pop
int
dec
shll
mov
dec
cli
cld
ds
push
dec
fidivl
gs
xor
inc
lgs
add
jne
mov
cmp
ljmp
mov
mov
lods
mov
mulb
push
jb
cli
mov
mov
cmp
mov
aad
mov
inc
cmp
xchg
cmp
xchg
dec
xchg
add
movsl
das
push
sbb
and
dec
enter
dec
enter
dec
out
mov
pusha
jmp
roll
push
add
in
insl
mov
mov
add
or
xor
xchg
cmp
pushf
jb
xor
lea
and
pop
inc
jnp
lcall
or
lret
ret
xor
je
or
mov
xchg
mov
mov
cld
in
mov
shlb
je
aaa
loope
xchg
xchg
mov
add
mov
ret
xor
inc
pop
pop
jg
cmc
jg
or
shlb
in
fstps
popa
aaa
aad
aad
idivl
xchg
cmp
xchg
dec
adc
out
adc
pop
mov
loope
pop
fisubs
add
mov
repnz
jnp
xor
faddl
data16
sbb
pusha
mov
mov
or
pusha
or
cmp
push
icebp
mov
mov
pop
call
lret
out
pushf
in
dec
std
loop
popf
data16
xchg
mov
mov
inc
cmp
fisttps
and
dec
mov
sbb
cmpl
jns
pop
in
out
outsl
and
lock
pop
iret
daa
cld
ret
xor
jg
and
mov
push
xor
inc
cli
in
fcomps
test
pop
mov
bound
stos
or
push
into
mov
dec
pushf
aam
cwtl
sbb
jle
leave
movsl
imul
iret
inc
lods
lahf
add
mov
sbb
mov
shr
inc
pop
push
std
mov
out
cmp
mov
mov
sbb
or
sbb
out
sahf
cmp
pop
pop
testb
or
push
mov
loope
imul
mov
mov
inc
sbb
mov
mov
scas
push
mov
mov
xchg
shll
push
lods
push
lds
test
pop
inc
pop
inc
repnz
pop
xchg
out
ljmp
addb
subb
push
push
and
or
inc
sbb
add
dec
subl
mov
int3
inc
lahf
push
mov
je
jns
jnp
lods
pusha
push
push
adc
cmpsl
fcmovnu
xor
adc
fstps
ret
mov
lods
std
lds
inc
push
adc
sbb
dec
ja
in
push
mov
push
fdivrl
inc
cwtl
xchg
outsl
inc
inc
into
lods
xchg
fbld
jge
mov
mov
dec
jbe
cltd
sub
dec
sub
pop
jl
mov
adc
mov
add
in
jmp
ret
adc
scas
jl
add
or
pushf
inc
arpl
int3
mov
sub
xchg
divl
gs
xchg
inc
jecxz
xchg
push
inc
popa
pop
xor
mov
out
pop
fstpt
xor
sahf
push
fbstp
cmp
sahf
pop
scas
push
daa
out
or
in
mov
pusha
ret
out
aam
int3
xchg
enter
out
ret
aad
imul
fistpll
cmp
cmp
call
fisttpl
dec
cmp
xor
or
push
ja
add
lods
pushf
and
xor
fbld
sbb
pusha
push
and
cld
sbb
cmp
pushf
insl
popa
outsl
out
sahf
or
cmc
cmc
scas
xor
mov
xchg
jecxz
cmpsl
lods
faddp
mov
push
adc
test
repnz
and
inc
pop
jno
xor
pushf
aas
test
mov
add
shll
lds
stos
inc
aas
cmp
xor
cmc
outsb
add
sub
and
cli
lock
push
sub
imul
inc
stc
enter
cli
mov
lods
bound
mov
insb
fstps
mov
mov
push
out
mov
add
jne
sbbb
and
rcrl
fldl
clc
outsl
cmp
int
cmp
add
mov
orl
and
bound
and
cmp
mov
mov
xor
aam
aas
push
mov
jg
sub
sbb
sbb
xchg
imul
aaa
repz
or
xor
icebp
shlb
sbb
inc
out
sahf
dec
out
xor
int
out
push
loopne
push
cs
mov
ret
or
scas
imul
stc
jmp
inc
outsl
mov
lock
push
push
cmc
mov
stos
call
lods
push
ds
repnz
sbb
mov
hlt
xchg
push
add
adc
mov
sti
adc
sub
fists
dec
in
cwtl
xor
aas
insb
cmp
lea
jmp
cltd
push
or
out
testb
add
sti
add
pop
out
bound
mov
sbb
and
adc
rorb
dec
push
dec
and
test
cmpsl
jo
fadds
or
adc
or
ds
test
loopne
mov
sbbb
pushf
dec
or
mov
repz
movl
jbe
mov
pusha
mov
aas
cmp
fldcw
dec
out
int3
cli
cmp
insl
das
clc
je
clc
mov
sti
mov
pop
push
mov
fldcw
pusha
sbb
in
jne
mov
les
xor
and
lret
jne
xor
pop
sub
cmp
inc
fistps
xor
out
lret
push
dec
mov
repz
ret
cld
xchg
pop
mov
ret
imul
rol
loopne
inc
pop
xchg
add
ja
shll
inc
adc
cmp
mov
roll
jmp
in
mov
movsb
or
xor
and
adc
adc
into
addl
out
cmp
test
push
ss
mov
xchg
mov
pop
and
sub
dec
fsubrs
mov
in
das
cltd
repnz
jge
add
dec
sti
sbb
es
mov
adc
movsl
outsl
fidivrs
push
andb
inc
test
popf
out
and
dec
mov
stos
dec
int3
jmp
push
xchg
and
daa
mov
push
ja
loop
insl
call
cmp
pop
sub
add
out
sbb
inc
bound
xchg
jmp
xchg
fdivs
mov
cmp
lds
sbb
stos
inc
dec
add
dec
xor
sub
mov
xor
sub
cwtl
push
adc
data16
std
xor
pop
dec
scas
out
orl
js
in
add
mov
mov
pop
iret
aad
test
ja
xchg
pop
jecxz
das
daa
cmp
mov
loopne
adc
pop
icebp
add
roll
mov
aad
sbb
test
jge
mov
imul
ja
mov
mov
xor
ret
fcomp
or
adcl
cld
movsl
inc
add
fdivrp
jmp
jnp
adc
inc
lret
xchg
aad
mov
fstpl
out
inc
xchg
fmull
out
rorl
or
lret
hlt
sarb
inc
dec
push
cltd
lahf
repz
lods
inc
stc
pop
cmpsl
lods
stos
jmp
mov
xchg
ret
repnz
sarb
mov
mov
sbbb
fsts
scas
pop
jo
inc
cmp
push
clc
je
push
sub
sbb
test
gs
xchg
stc
stos
cmc
push
shld
pop
xchg
mov
test
xchg
mov
lar
out
movsl
adc
fcomps
lock
loop
arpl
add
fnstenv
mov
test
aas
jnp
int
add
add
xor
nop
pop
mov
inc
add
out
je
pop
fiadds
dec
aad
mov
push
mov
xchg
mov
xchg
jmp
fldenv
in
inc
clc
cmp
clc
imul
cmc
and
das
enter
xor
aad
mov
pop
lcall
sub
test
out
and
cmp
adc
xchg
ljmp
popa
xor
xor
nop
mov
push
push
cmp
mov
test
xorl
outsl
push
pop
xor
push
scas
add
jmp
sbb
mov
mov
mov
aam
insl
gs
sbb
gs
dec
adc
adc
fiadds
pop
fbstp
pop
add
jae
dec
mov
cld
mov
push
and
pushf
jns
sbb
mov
mov
push
popf
add
push
nop
mov
push
xchg
fstl
fistps
subl
mov
push
push
aas
inc
cwtl
mov
cmpsb
cli
fstpl
mov
imulb
in
and
jnp
call
shlb
out
cli
aas
shll
in
call
loop
out
das
jne
scas
xchg
mov
cld
das
movsl
and
iret
popa
cli
subb
pop
jns
sbb
lcall
jno
adc
cmp
out
pushf
mov
cmpsb
jnp
mov
ss
add
mov
push
jbe
ljmp
sbb
and
adc
dec
lods
fdiv
cs
mov
outsl
fptan
lods
jg
sahf
pop
test
adc
cmpsl
repnz
es
mov
lret
pusha
outsb
xchg
inc
repnz
cmc
and
bound
iret
dec
pop
insl
dec
test
sub
hlt
nop
cmpsl
fdivs
in
pop
ret
sub
out
mov
aas
stos
pop
data16
loope
mov
cs
or
bound
popa
pop
cmp
mov
sub
xchg
adc
mov
mov
sti
rolb
insl
in
es
or
add
cli
iret
sbb
hlt
mov
add
clc
or
cld
out
jp
hlt
sub
xchg
and
or
xchg
aad
sbb
xchg
mov
xlat
mov
les
add
push
in
mov
aas
in
ficomps
lock
jge
adc
adc
jo
push
cmp
jae
dec
add
daa
cmpsb
mov
xchg
sbbb
rcrl
jg
pop
and
das
xchg
mov
mov
dec
inc
inc
fcmovnu
mov
sbb
sbb
mov
popf
add
lcall
cmpsb
and
mov
rolb
imul
pop
jp
aad
into
arpl
ss
subb
pop
xlat
cmpsl
adc
cmp
sub
sbb
inc
or
inc
mov
test
call
je
fcoml
scas
push
mulb
sub
push
ror
nop
ljmp
pushf
cs
ja
iret
pop
pop
adc
movsl
mov
scas
xchg
fnstcw
bound
mov
xor
pop
mov
push
lret
mov
mov
shrl
fs
stos
add
add
lds
sbb
sbb
adc
test
sbb
cmpsl
insl
in
loop
pop
jl
lds
subb
cmp
xor
stc
pop
lahf
insl
mov
or
int3
jecxz
into
add
xor
jo
insl
aaa
sbb
inc
push
out
mov
pop
into
cmpsl
xor
push
sahf
mov
jle
mov
out
cld
outsb
lods
loope
mov
ja
cmpsb
adcb
and
or
lds
xor
cmpsb
cmpsb
testb
es
sub
dec
mov
fbstp
das
je
shr
jnp
xor
mov
adc
shll
lret
mov
std
and
mov
mov
sub
fdivrl
int3
jecxz
cmpsl
aam
xor
in
adc
shll
in
pop
mov
aad
jne
or
xor
lcall
jnp
rcr
mov
dec
repnz
fcomp
or
and
insl
aaa
insb
inc
negb
outsb
dec
std
inc
test
mov
pop
shll
push
pop
push
inc
mov
adc
rcll
sar
pushf
scas
inc
sub
aad
popa
and
adc
xchg
aam
hlt
cmp
fdivrl
scas
out
inc
mov
push
imul
mov
hlt
push
pop
cmp
or
jmp
shrl
int3
aad
mov
int
dec
js
adc
push
daa
das
jle
and
inc
test
inc
aam
jl,pn
dec
push
mov
call
push
sbb
pop
out
stos
xchg
shlb
adc
mov
sub
mov
movb
mulb
int
jl
and
pop
or
stos
mov
push
xlat
inc
pop
fstpt
cmp
loop
stos
adc
stos
icebp
push
cmp
lcall
sub
sti
stc
pop
iret
mov
jnp
mov
xchg
push
mov
xchg
cmp
mov
sbb
dec
mov
lret
push
jmp
das
in
push
add
and
add
scas
cld
sbb
xchg
pop
insl
mov
or
xor
repz
test
scas
out
outsb
mov
dec
test
or
and
push
test
cld
xchg
sbb
mov
cld
mov
push
xchg
adc
and
jo
push
inc
bound
in
jecxz
data16
cltd
in
xchg
sahf
data16
push
and
adc
shll
stos
sti
imul
dec
std
fstps
mov
inc
mov
lret
loop
pop
add
sub
push
aaa
in
sub
mov
sub
lock
add
shrl
cmp
lods
lock
jge
jbe
adc
xor
outsl
fsubrl
cmp
cli
pop
stos
out
push
movsb
scas
cmp
aad
cmp
xchg
xor
nop
pop
mov
fnstcw
dec
push
adc
add
jle
mov
xchg
adc
push
fwait
xor
daa
pop
mov
adc
arpl
lea
fcmovnb
xor
pop
mov
test
sahf
xchg
test
push
daa
mov
cmpsl
mov
inc
push
pop
insl
incb
push
add
subb
jecxz
xor
sbb
xchg
ret
cmp
mov
mov
xlat
test
mov
and
or
or
add
addr16
mov
subb
cmp
add
ficoml
imul
lahf
lds
loop
dec
add
andl
pop
inc
ficoms
rcr
insl
or
adc
lret
push
leave
inc
lds
arpl
nop
stc
jno
lcall
cmpl
or
popf
int
or
inc
fildl
addr16
fldenv
lret
je
push
adcb
and
aaa
into
xchg
xchg
rorb
cmp
fimull
adcl
inc
dec
push
ljmp
pushf
pop
ljmp
aad
cltd
cmpsb
cmp
cmp
andl
push
dec
imul
pop
inc
test
dec
mov
outsb
lock
lret
lcall
sti
push
addr16
adc
jecxz
lock
daa
jb
sbb
ret
sti
aam
scas
aaa
add
fimuls
je
ret
pushf
pop
pusha
sub
jle
pop
pop
mov
lods
nop
popa
sub
outsl
sub
adc
xchg
xor
bound
xor
jae
jne
jle
mov
hlt
xchg
imul
xchg
xchg
sarb
xchg
adc
popf
lods
mov
popf
insl
or
sub
or
lret
mov
adc
loop
aam
mov
mov
arpl
xor
inc
xor
cwtl
aas
js
into
dec
loop
sub
ret
cwtl
mov
shrd
sub
sar
out
rcrl
in
in
adc
ljmp
ret
inc
jle
dec
cmp
mov
pop
inc
cmp
scas
jecxz
addr16
pusha
add
pop
sbb
sub
rcrl
mov
test
out
shlb
inc
xor
add
in
scas
js
fstl
into
xor
lods
rol
xlat
push
imul
iret
cld
inc
mov
xchg
rcll
sub
sub
mov
imul
and
subl
lahf
movsb
cmc
pop
adc
add
call
push
out
test
and
fbstp
dec
mov
rcr
cs
test
call
leave
sbb
js
pop
stc
add
arpl
push
fdiv
mov
dec
nop
sbb
cli
cli
sti
cmpl
and
aas
xor
nop
gs
loope
sub
sbb
outsl
or
iret
pop
mov
and
jg
sbb
dec
enter
add
cltd
inc
sbbl
mov
push
imul
and
lret
inc
push
daa
popa
clc
xlat
add
aas
insb
pop
xchg
leave
ret
or
rol
icebp
pop
pushfw
aaa
inc
lcall
dec
sarl
sbb
lock
iret
or
outsb
idivb
xchg
leave
push
ficoms
int3
mov
repnz
outsb
jge
test
fsubrs
and
add
jb
ja
adc
lds
rcrb
into
pop
jecxz
inc
xor
mov
dec
iret
mov
mov
mov
std
cmp
fsubrl
and
jae
in
outsl
nop
mov
stc
jp
hlt
push
jb
popa
je
rcl
rol
xor
jmp
sti
lret
jle
fidivrl
xchg
jg
cs
mov
push
jecxz
loop
add
mov
jmp
sbb
xor
and
in
jge
mov
fs
dec
and
cmp
aad
lret
xor
cmc
cwtl
imul
push
pushw
add
cmpsl
sub
sti
cmp
push
aas
sub
sti
pop
fcoml
jmp
xchg
mov
push
arpl
jae
mov
pushl
fucom
inc
xlat
cltd
push
insl
pop
xlat
bndldx
mov
aaa
mov
mov
xchg
test
out
jle
icebp
fiadds
jg
or
cld
jg
rep
fs
jmp
push
xchg
scas
jns
mov
addr16
rolb
icebp
mov
lock
cmp
inc
dec
add
cwtl
imul
jno
mov
dec
pusha
imul
ljmp
jecxz
dec
stc
lock
test
lret
mov
into
fdivrs
inc
cwtl
fwait
mov
jns
xchg
jecxz
xor
int
outsb
add
in
mov
inc
mov
jne
push
mov
lock
movsb
not
call
scas
push
int3
ret
in
push
lret
ss
pop
push
dec
cltd
push
cmp
inc
xchg
scas
sub
jae
mov
ds
into
popf
das
lcall
sbb
push
lods
bound
sti
insb
clc
repz
mov
loop
jne
mov
nop
fadd
mov
fwait
add
call
and
dec
mov
xchg
jno
ret
adc
mov
add
dec
out
jle
outsb
mov
adc
jo
mov
cmpsb
mov
je
rcrb
pusha
mov
jle
dec
call
jmp
inc
dec
adc
movsl
xor
cmp
inc
inc
adc
test
sub
xor
leave
mov
mov
sti
sbb
mov
pop
mov
or
jle
mov
add
dec
push
pop
arpl
cmpsb
push
lods
jg
push
ljmp
cltd
push
cmpsb
mov
inc
dec
cltd
mov
mov
pop
cmp
sub
jg
mov
jns
in
xchg
pop
cmp
imul
jle
inc
loope
outsb
lret
and
xor
out
and
pushf
lret
push
or
mov
mov
dec
mov
enter
testl
jnp
push
xchg
std
mov
roll
es
hlt
inc
addr16
cmp
pop
sub
mov
int
xchg
mov
lcall
jbe
add
pop
test
gs
push
inc
xchg
shl
xor
sbb
add
rolb
adc
pop
xor
loopne
les
leave
and
imul
fstpt
sub
dec
xor
push
xlat
adc
add
out
fwait
lds
fidivl
pop
xor
mov
push
lods
cmp
icebp
push
jecxz
aam
mov
jmp
fisttps
mov
hlt
incb
andl
adc
push
iret
es
push
pop
or
inc
xor
push
adc
xchg
mov
outsb
add
and
cmp
or
mov
scas
add
leave
in
mov
enter
cmp
cmp
jecxz
add
repnz
pmuludq
pop
add
pusha
or
or
push
push
les
faddl
xor
lcall
xlat
popf
out
inc
sarl
fdivl
xchg
mov
xor
cmp
pop
push
xchg
out
jp
jnp
inc
xor
pop
movsl
ja
je
jbe
and
frstor
sub
shl
add
cmp
mov
xchg
jbe
dec
cltd
mov
or
sar
and
pop
lods
aam
sbb
inc
add
loopne
mov
aad
jno
inc
pop
push
mov
jecxz
and
stos
test
ljmp
sbb
adc
icebp
or
incl
pop
in
and
in
push
mov
or
jae
xor
aas
dec
push
pop
clc
jmp
pop
and
cmc
mov
inc
decb
popa
xor
outsl
mov
mov
and
mov
mov
pushf
movsb
and
out
imul
push
test
movsl
int
jp
rcrl
inc
ret
push
pusha
xchg
arpl
mov
or
jnp
or
and
imul
ret
ret
scas
loope
pop
jb
out
and
fdivs
lock
int3
or
stos
data16
mov
lods
cli
fwait
imull
jae
scas
mov
out
imul
icebp
add
lock
negb
mov
add
dec
test
mov
pushl
and
mov
or
lret
lret
andl
xchg
pusha
mov
test
pop
or
lret
ljmp
jmp
insl
dec
mov
and
out
dec
std
dec
shll
inc
fmuls
push
arpl
dec
jge
or
cmc
in
add
sub
js
testb
imul
jmp
or
mov
enter
inc
push
out
cltd
mov
xchg
movsb
into
xchg
fcomip
int3
jp
out
cmp
adc
or
std
cmp
dec
repz
test
ss
out
add
inc
xlat
xor
jb
in
push
das
mov
cld
mov
mov
pop
and
out
sbb
jl
xor
mov
adc
mov
pop
inc
mov
test
faddp
or
hlt
out
push
dec
pop
pushf
addr16
test
popa
sub
iret
ss
sahf
arpl
pusha
xchg
adc
jl
jecxz
push
out
ja
push
roll
push
jmp
ljmp
xchg
jge
inc
xlat
rclb
mov
inc
daa
lea
jg
and
shlb
incb
mov
adc
push
xlat
push
cmc
or
test
and
addr16
sub
mov
sbbb
fistl
loope
mov
test
repnz
push
lds
pop
fwait
ror
adc
fs
jnp
mov
cld
push
and
sub
mov
mov
mov
hlt
mov
sub
add
dec
inc
inc
inc
mov
lods
pop
shlb
scas
xchg
and
mov
shll
std
mov
sub
outsb
adc
pop
pop
lret
das
push
mov
mov
dec
loope
xor
loopne
sub
call
test
test
add
dec
or
adc
mov
clc
and
das
xor
pop
mov
push
nop
lea
out
fs
jl
inc
pop
bound
addb
dec
xchg
cmp
push
sbb
cli
in
addr16
subl
lcall
pop
test
pop
xchg
sub
rcll
push
sub
pushl
dec
lret
push
add
sub
xchg
pushf
cmp
mov
mov
inc
inc
std
lahf
outsl
mov
mov
call
xchg
add
push
cld
out
imul
insb
lods
and
popa
icebp
call
ret
pop
sbb
xor
mov
mov
icebp
xchg
ds
je
add
lods
mov
sbb
fstpl
mov
movsl
ret
testl
pop
push
and
lds
js
cmp
jl
fldt
xchg
sub
mov
jae
xchg
outsl
ret
leave
add
imul
into
inc
scas
cli
pusha
or
push
cltd
adc
arpl
mov
xor
cld
int
loopne
cmp
xor
add
test
jnp
cmp
loopne
xor
sahf
aam
fidivs
lcall
push
jg
push
adc
in
push
add
aam
inc
pusha
in
inc
add
rolb
stos
test
subb
aaa
repnz
pop
push
xchg
clc
mov
jne
movsb
adc
or
xor
cltd
loope
and
adc
dec
pop
call
xor
or
out
xchg
sub
pop
in
in
sbb
lahf
mov
xor
and
roll
jae
fidivrl
cmp
scas
setle
mov
stos
or
sub
clc
dec
adc
mov
jbe
pop
scas
inc
sbb
xchg
pop
cwtl
lcall
addr16
sbb
pop
add
inc
cmpsb
stos
dec
lahf
push
add
fdivrs
and
sbb
or
sbb
mov
mov
add
dec
and
inc
enter
xchg
lock
cmpsb
sbb
mov
adc
sbbb
ja
arpl
xchg
sub
daa
or
and
fimull
xor
movsl
push
xor
mov
xor
jbe
jae
inc
aam
dec
repz
pop
mov
jo
aad
ds
mov
repnz
mov
incl
mov
sub
sbb
pop
inc
int
shlb
push
enter
jae
mov
add
fwait
shrl
daa
out
pop
dec
pop
arpl
cwtl
out
icebp
scas
hlt
jns
pop
dec
xor
mov
out
lcall
cmpsb
or
push
cwtl
fwait
push
and
mov
and
hlt
and
stc
jae
popa
out
xchg
jl
cwtl
mov
push
dec
out
cli
ret
adc
add
sub
pop
lds
stos
cs
fnstsw
rorl
adc
clc
inc
int3
jno
imul
loopne
aas
inc
pushf
int
mov
aad
and
cmp
sbb
mov
pop
cld
das
fsubrl
repnz
or
fldenv
gs
xchg
xlat
sub
add
pop
xchg
push
out
xor
std
cwtl
pop
jecxz
xchg
fistpll
mov
mov
imul
fldt
jb
lods
jl,pt
es
adc
adc
js
mov
repz
icebp
std
inc
pop
mov
add
rcr
or
sub
dec
and
xchg
dec
push
inc
test
adcl
lret
mov
out
fsubrl
andl
out
mov
data16
xchg
and
shll
iret
push
fstps
shl
push
out
xor
sbb
nop
aam
xor
mov
mov
imul
into
xchg
mov
cmpsb
push
jmp
in
mov
lock
xor
fimuls
je
pop
shlb
jle
out
fdivr
cmpsl
xchg
popf
addr16
mov
call
aas
icebp
std
push
mov
sub
xchg
das
xchg
inc
popf
arpl
popa
into
test
xchg
insb
pop
je
inc
shlb
mov
sub
inc
sbb
fidivrl
jg
inc
ret
mov
scas
lcall
cmp
aas
dec
mov
push
and
rorb
jecxz
jae
or
leave
jnp
data16
dec
and
gs
cmpb
xor
bound
js
mov
outsb
push
test
test
pop
jnp
loope
js
xor
adc
jge
and
add
xchg
xchg
pop
mov
sub
fildl
jno
inc
and
xor
xchg
jne
push
ret
fcmovnb
inc
stc
mov
add
jb
enter
mov
fistl
repz
or
pusha
xorl
gs
mov
lds
push
and
rcr
or
mov
add
cmp
cmpsb
jnp
pop
dec
mov
mov
insb
cmpl
or
in
dec
das
pop
xchg
fsubs
cmp
cwtl
jecxz
test
int
cli
cmpsb
sti
nop
pushf
aam
aad
fadds
mov
cmc
fnstcw
and
or
ret
push
push
cmp
xor
sarl
jbe
pop
add
push
mov
mov
divb
sub
pop
pop
pushf
jp
mov
adc
popf
stos
or
fsubr
inc
pop
lcall
stos
mov
jg
movsl
dec
imul
fs
popa
and
push
loop
sub
mov
mov
leave
xor
out
xchg
jge
je
xor
jns
xorl
in
mov
jnp
jmp
stos
push
mov
adc
icebp
sbb
dec
stc
in
push
xchg
jnp
movsb
aad
div
fwait
dec
aad
arpl
and
pusha
adc
loopne
push
sub
movsl
enter
xor
mov
cmpsb
add
rcl
jne
out
mov
inc
add
xchg
mov
mov
lock
lahf
add
add
in
inc
add
aad
mov
xchg
sahf
cmp
pop
push
ret
xchg
pop
dec
idivl
mov
push
jbe
push
ljmp
jp
movsb
jmp
mov
imul
fwait
sarb
js
xlat
repnz
movsl
add
dec
in
bound
push
mov
in
cmp
leave
pop
xchg
clc
pop
inc
lcall
mov
cmp
fisubl
or
sub
xchg
lahf
xchg
mov
jl
add
mov
jnp
pop
or
xor
dec
jne
cmp
fisubrs
mov
nop
sbb
push
pop
aas
lret
xchg
push
aad
sti
rcrb
pop
cmp
popf
loope
adc
fisttpl
and
roll
test
gs
dec
mov
pusha
and
test
or
popa
jl
dec
loope
sub
push
mov
xor
test
fcomip
push
or
mov
popf
fdivrs
scas
adc
hlt
xor
sti
or
out
pop
mov
cltd
repz
leave
push
in
dec
movsb
imulb
es
sub
testl
movsb
or
mov
fbstp
cwtl
arpl
dec
lahf
scas
push
or
sub
pop
lahf
or
or
out
jo
jno
xchg
cwtl
or
push
mov
insl
sub
jbe
stos
fnstsw
mov
push
push
dec
cld
in
imul
pushf
subb
enter
rorb
adc
out
pop
test
data16
dec
pop
out
testl
mov
push
aam
movsl
rcrb
mov
xchg
mov
shr
add
mov
dec
lods
pop
xchg
mov
push
sub
aaa
inc
xor
cmpsl
daa
xchg
mov
mov
xchg
jae
lret
sbb
out
not
in
or
sub
sub
xor
repnz
shrl
xor
hlt
cmpb
xchg
mov
xor
jp
pusha
loop,pt
das
push
pop
mov
test
addr16
sub
movsb
outsl
push
cld
mov
fs
xlat
pop
jle
pop
js
daa
fcompl
cmp
jo
mov
xchg
lret
sub
pop
inc
testb
inc
mov
dec
jnp
and
and
ds
insb
aam
jecxz
mov
ret
dec
fstp
push
popf
out
xchg
dec
and
daa
cmpsb
inc
sub
add
stc
or
aad
orb
outsl
adc
in
insl
pop
repnz
fcomps
dec
mov
and
rcll
mov
pop
ret
xchg
dec
test
addl
stos
sub
dec
stos
sub
adc
gs
aad
movsb
cltd
and
pop
shl
jno
popa
shlb
cmp
inc
sarb
out
ljmp
and
int3
div
call
cltd
gs
pop
pop
mov
and
xor
push
jle
mov
rorb
pop
mov
pop
and
sub
stos
sub
lcall
pop
insl
jp
iret
or
jge
add
push
rorb
push
pop
dec
sub
jmp
fwait
pop
inc
xor
popf
sahf
push
adc
int
sbb
dec
push
and
cmp
les
or
lcall
sub
repz
push
xchg
pop
aam
push
lret
jmp
push
push
inc
add
adc
cltd
das
cs
cmp
ds
mov
ss
sub
cmp
xor
icebp
and
push
aaa
inc
adc
add
inc
sbb
cld
loope
insb
lea
push
stc
arpl
icebp
in
or
enter
push
lds
sub
dec
push
jo
dec
mov
sub
nop
sbbb
jbe
jg
inc
mov
imul
dec
push
out
pop
leave
lret
sbb
push
push
dec
dec
sbbl
inc
jmp
aaa
sbb
push
inc
in
inc
xchg
mov
fmull
adc
inc
loop
subb
xor
push
inc
mov
fwait
out
in
mov
insl
and
mov
and
in
xor
sbb
xchg
ja
pop
add
mov
lcall
add
cli
insl
not
pop
push
pushf
mov
mov
inc
pop
mov
jmp
lods
movsl
inc
cltd
inc
dec
mov
xchg
arpl
lock
cmp
fnstenv
pop
loop
pop
sbb
push
lods
sahf
insl
and
outsl
jns
xchg
lret
jecxz
imul
ss
dec
test
sahf
cli
scas
pop
mov
lods
mov
roll
push
add
pop
adc
addb
movsl
shll
or
and
jns
dec
push
adc
inc
outsl
jno
cltd
sub
icebp
aam
xchg
cmp
cmp
stos
lds
add
cmpsl
inc
clc
test
fsubp
mov
push
push
in
cmc
in
inc
dec
push
cmp
xchg
pop
decl
pop
xchg
xchg
test
jae
mov
cmp
xchg
insb
add
dec
inc
adc
lods
adc
mov
cmp
jae
imul
out
test
sub
stos
cmp
ret
dec
mov
jno
jno
pop
std
addb
adc
dec
in
gs
idivl
in
int3
xchg
xor
data16
jge
push
test
mov
mov
pusha
push
nop
rcr
sbb
cmc
xchg
cli
and
cmpb
outsb
cmp
rol
fsubs
jb
xchg
push
pop
sbb
mov
sbb
mov
aaa
xor
pop
dec
out
xor
popa
lret
mov
inc
filds
aaa
and
mov
les
ret
out
jns
xlat
inc
outsb
movsl
fwait
and
adc
cmp
mov
mov
pop
or
lret
push
pop
and
js
pop
div
pop
ja
sbb
mov
popa
subb
arpl
jle
cmp
movl
inc
scas
clc
cmpsl
and
push
sub
roll
jb
xor
stos
xchg
cmc
loop
fcompl
fisttpl
insl
sub
mov
cmp
hlt
mov
or
mov
addb
push
filds
mov
pop
or
inc
mov
jmp
xlat
fucomip
cmp
push
sub
stc
outsl
jmp
mov
mov
and
mov
or
pop
or
dec
add
test
lcall
dec
adcb
scas
icebp
clc
adc
pop
stc
mov
adc
push
aad
es
adc
orl
pop
leave
and
mov
fwait
xchg
mov
loop
sub
pop
cltd
inc
sbb
and
ficoms
xchg
jecxz
in
mov
cmp
xchg
arpl
xchg
xchg
push
mov
and
xlat
xchg
movsb
js
insl
add
mov
lret
and
inc
lea
lret
flds
leave
cltd
jno
or
add
fwait
lahf
call
loope
push
pop
sahf
out
imul
xor
mov
mov
in
or
sahf
addl
sub
sub
cltd
pop
adc
pop
cmp
jp
aad
mov
scas
and
pop
pop
aam
pusha
sub
add
aad
ret
push
sub
fdivp
sbbb
out
call
lock
dec
inc
aaa
sarb
inc
fdivl
fisubl
cmp
or
jnp
sbb
adc
addr16
xchg
ljmp
or
jns
xor
pop
repz
fldcw
xor
cwtl
es
sahf
into
inc
shrb
pop
pushf
cli
inc
in
popf
outsl
sbb
clc
stos
jne
xchg
pop
mov
bound
xor
mov
lea
sbb
xor
jnp
es
or
jae
ja
mov
nop
pop
xchg
inc
nop
lods
in
jns
lock
jge
pushf
ljmp
jnp
fldt
ret
sub
pop
inc
lea
xchg
push
or
jno
pop
sbb
add
mov
and
cs
decl
loop
pop
pop
pop
mov
inc
int
lds
movsl
inc
cs
cltd
jae
decb
mov
arpl
jne
inc
gs
mov
jmp
sbb
pop
inc
mov
sub
and
push
cmpl
fidivrl
into
filds
outsl
mov
adc
cmp
xchg
cmc
lret
sbb
sbb
cmpl
fildll
cmp
mov
pop
into
xor
popa
mov
jp
mov
lods
in
js
insb
jle
and
dec
and
mov
or
adc
fidivl
pop
push
je
inc
mov
test
cmp
and
popf
or
fdivr
test
xorb
rclb
and
fs
push
pop
rcll
add
xor
push
and
out
movsl
ja
es
cltd
push
pop
aad
movsl
jo
mov
or
mov
or
adcl
mov
arpl
loop
inc
sti
je
mov
mov
or
in
lret
ss
in
test
sarl
add
xor
add
bound
lahf
and
mov
jecxz
sub
dec
sbb
mov
mov
push
cmpsb
into
test
fisttps
inc
and
jmp
ret
xchg
sub
nop
inc
xlat
add
jg
leave
mov
mov
sti
cmpsb
aaa
mov
repnz
mov
enter
aas
clc
xor
pop
add
ror
out
out
sbb
cld
std
sbb
xchg
mov
stos
mov
bound
cmpsl
hlt
mov
push
mov
shll
repz
inc
popf
pusha
cmpsb
xor
pop
jns
sub
testl
sbb
mov
and
test
rolb
jnp
stos
fwait
shl
movsb
adc
xor
cmp
sub
pop
das
fdivl
adc
out
lds
mov
nop
stos
push
cmc
mov
out
ja
pusha
aad
adc
pop
dec
push
sub
rclb
popf
mov
sbb
xchg
add
stc
push
test
cmpsl
andl
ss
divb
and
sub
add
mov
es
sub
push
inc
mov
jge
fwait
popf
dec
pop
push
lret
jae
inc
imul
je
bound
movsl
ljmp
test
adc
push
xor
andl
pusha
jo
int3
out
loopne
dec
sbb
loop
inc
add
xor
shl
lret
aam
stos
aaa
and
loope
xor
rcll
mov
insl
mov
xchg
jo
jbe
jns
or
push
mov
pushf
loope
out
lds
dec
test
xchg
movsb
or
out
cld
bound
insl
pop
mov
and
mov
pop
mov
mov
aam
lret
and
push
pop
ss
push
mov
jg
popf
mov
xchg
cmpsl
stc
xchg
xor
cltd
xchg
xchg
mov
lods
popf
pop
jp
int
es
jb
pop
cli
sub
mov
xchg
jge
inc
cmc
dec
cmp
int3
xorb
xchg
in
dec
jbe
rcll
jo
jle
mov
mov
lds
pop
fs
mov
nop
std
gs
mov
loop
jns
mov
andnps
lret
jno
adc
leave
jecxz
mov
and
repz
iret
mov
xchg
inc
icebp
aas
cmp
inc
push
sahf
lfs
add
mov
xchg
fneni(8087
aas
xchg
lret
sbb
movsb
xor
inc
inc
push
and
idivb
mov
mov
les
gs
call
xchg
loop
adc
dec
les
insl
push
lcall
pop
imul
lods
or
enter
stos
mov
xchg
inc
out
test
add
mov
movsl
sbb
je
std
hlt
insb
and
jge
dec
push
rorl
jb
push
ret
ret
sbb
jne
sbb
dec
insb
sbb
cmp
ret
imul
push
fimuls
mov
jmp
jmp
or
xor
daa
push
xorb
icebp
pusha
test
lret
ret
and
ds
sub
jae
xchg
test
dec
dec
jne
cmp
cs
movsb
jge
jp
mov
cmpsl
xchg
cmpsl
jle
xor
in
aam
loop
cltd
mov
aaa
ja
pop
enter
les
cltd
jnp
stos
xor
jle
jbe
aam
xor
lahf
inc
xchg
out
ret
addr16
ret
jbe,pn
loopne
mov
adcb
outsb
mov
cmpsl
in
mov
cmpsb
mov
pop
xchg
mov
mov
stos
lea
fmull
imul
ret
cmp
mov
pop
lahf
and
adc
je
lcall
mov
push
wbinvd
mov
push
addl
xor
pop
pop
shrb
fs
sub
inc
and
pop
aaa
adc
test
stos
and
mov
jae
inc
fstp
push
add
push
outsl
js
ss
imul
mov
inc
ret
cmp
sbb
loopne
cli
inc
push
inc
push
iret
imul
loope
frstor
jmp
pusha
fidivrl
insb
lret
pop
jmp
sahf
cmpsl
and
and
mov
sbb
jae
std
mov
lods
sahf
mov
clc
or
fs
dec
inc
cmp
push
jecxz
pop
sub
fs
jbe
fisttpll
xor
fdivrl
cwtl
cwtl
ret
jb
daa
dec
jl
mov
iret
mov
repnz
out
mov
xchg
xor
add
pop
and
push
repnz
fists
dec
pop
sub
enter
sub
sbb
push
xchg
adc
dec
mov
pop
sub
jecxz
icebp
sbb
jl
sub
inc
mov
or
mov
bound
sub
leave
mov
sar
sbb
adc
push
test
jge
mov
push
and
jge
ljmp
cs
xor
lret
push
clc
push
mov
stc
dec
or
iret
pop
mov
cwtl
mov
movsb
stc
push
out
cmpsl
aad
lcall
lea
or
repz
jp
movsl
popf
mov
or
test
ss
xor
dec
out
mov
clc
fnstenv
clc
in
mov
mov
jecxz
mov
jecxz
add
iret
jb
jl
pop
inc
mov
dec
adc
ds
pop
addb
loope
dec
loop
fidivrs
test
xlat
cmp
mov
lcall
sub
test
jg,pn
daa
jg
insl
pop
inc
pop
mov
mov
jnp
into
mov
pop
cltd
adc
in
in
and
adc
les
shll
daa
lock
iret
xchg
sbb
push
add
ljmp
test
insb
cmp
pop
dec
xchg
mov
mov
push
ja
sbb
jae
add
movsl
xlat
mov
mov
lods
lds
shlb
cmp
pop
lods
jecxz
lret
scas
pop
jle
rcll
jle
dec
cmp
xorb
out
test
cmpb
pusha
paddsw
mov
rcl
add
jnp
aam
push
out
jae
fcoml
pop
adc
mov
stc
sbb
call
jl
add
adc
jp
xorl
add
lea
aaa
lret
mov
in
in
stos
lods
pop
les
arpl
lret
lahf
xor
and
add
sar
out
adc
cmp
add
and
lea
enter
mov
aaa
sub
mov
xlat
xor
mov
psubb
mov
dec
mov
call
jp
add
mov
inc
cmp
lret
outsb
dec
mov
jmp
sub
sbb
fs
adc
inc
xchg
mov
cmp
mov
aaa
sbb
notl
cmp
cmp
movsb
adc
pop
daa
in
jb
and
aaa
pop
arpl
and
xchg
jns
lret
push
inc
loop
pusha
xchg
jle
push
aam
sub
sub
pop
sub
out
jecxz
aam
sbb
xor
popa
ljmp
sbb
cmpsl
and
cld
jae
jns
into
addr16
pop
ret
subb
cltd
pushf
sbb
pop
pusha
shrl
out
sahf
iret
and
jo
pusha
ds
out
movsl
stos
ret
push
pop
adc
sbb
inc
xchg
sbb
mov
or
mov
aad
jg
jb
nop
mov
inc
push
jb
adc
movsb
xchg
and
movsb
out
xchg
inc
inc
lret
push
call
sub
xchg
pusha
roll
clc
and
out
sub
icebp
push
jbe
lock
push
fisubs
adc
fs
sub
xchg
or
mov
add
loope
dec
xchg
push
mov
dec
adc
mov
loopne
leave
maskmovq
idivl
imul
cmc
xchg
cmpsl
pop
in
in
or
mov
jnp
push
xchg
insl
cmp
inc
aad
lods
arpl
out
mov
sbb
cli
dec
mov
arpl
lods
add
or
mov
push
adc
xchg
pop
add
outsb
cmp
mov
adc
mov
icebp
sub
out
rcr
mov
and
mov
aas
test
or
add
jns
aas
addr16
fimuls
jmp
out
mov
dec
pop
repnz
push
adc
int3
aaa
inc
add
mov
mov
cmpb
jae
mov
sub
or
push
jae
inc
pop
pop
ss
mov
sbb
fsts
or
lods
lock
jl
and
or
push
in
mov
aaa
icebp
push
adc
lea
cmp
mov
into
xlat
nop
out
sub
lock
subl
inc
inc
dec
das
sub
movsb
sbb
sahf
add
cmp
add
pop
xchg
insb
std
jns
cmp
fdivr
lret
je
lcall
mov
inc
fdivrl
dec
jp
frstor
popa
mov
or
fstpt
lods
imul
mov
jp
in
mov
xchg
ds
mov
mov
pop
lods
lock
mov
addr16
pop
inc
jo
arpl
dec
cmpsb
xchg
cli
push
xchg
imul
sub
test
sub
push
fsubl
push
sbb
lahf
addr16
pop
jns
sbb
clc
out
add
leave
push
jb
test
push
mov
xor
sbb
add
lcall
mov
jmp
subb
jg
bnd
pop
adc
sub
out
repz
push
push
fistpll
pusha
ja
adc
lret
or
fdivr
lods
out
adc
test
fisubrs
int
rcr
adc
sub
xor
xchg
lret
test
jae
dec
inc
jmp
jg
xchg
mov
out
lock
sahf
add
sbb
sti
daa
test
or
inc
pop
add
and
jl
jbe
sub
std
lods
cmc
sti
and
int3
movsl
pop
jle
stos
inc
push
push
movsl
cmpsl
sbb
stos
cmp
dec
lret
imulb
aam
jne
call
push
lcall
pop
inc
iret
aas
and
mov
cmovbe
cmp
inc
mov
sahf
repnz
js
das
jge
xchg
test
jb
lods
jecxz
sub
adc
test
int3
repnz
int
adc
lcall
outsl
mov
jb
insl
mov
lds
fistps
inc
imul
hlt
loop
mov
negl
loope
xchg
mov
icebp
hlt
orl
cld
aas
jne
and
pop
inc
int
inc
aaa
inc
lcall
not
lcall
out
lock
jae
pop
sbb
sbb
addb
rcr
mov
je
aam
lcall
jl
lcall
lahf
ds
push
fmull
shl
adc
subb
mov
imul
xchg
roll
dec
std
fnstsw
stos
lods
js
sbb
mov
ss
aam
insb
stos
sti
movsl
test
jmp
pop
and
out
jbe
cmp
and
cmp
lahf
aas
aaa
fildl
push
mov
aam
dec
cld
ret
shll
xchg
push
sbb
add
cs
js
lret
or
mov
or
adc
mov
mov
scas
sbb
inc
pop
ffree
test
in
adc
jno
and
mov
push
stos
pop
xlat
inc
insl
aam
mov
jbe
adc
pop
mov
bound
outsl
fadds
jg
jno
ljmp
mov
int
inc
mov
call
add
popa
cmp
ss
push
mov
out
inc
xor
cli
push
xchg
jnp
fwait
ljmp
lret
ja
jmp
sub
das
push
out
mov
mov
pop
xchg
pop
and
inc
xchg
aaa
dec
notb
sar
fisttpll
mov
test
push
or
stos
pushl
outsl
sbb
jno
cwtl
add
pop
dec
adc
inc
or
cmp
jge
pushf
adc
mov
push
jae
lea
xor
push
or
lret
lods
xchg
cmpsl
and
or
jo
mov
mov
jecxz
sti
rcrl
mov
cmpsl
push
jno
pop
nop
mov
notb
adc
pop
andl
lcall
pop
dec
mov
jne
mov
xor
rolb
iret
jae
cmc
cmpsl
pop
enter
inc
mov
ret
fdivrp
repz
insl
movsb
mov
or
push
or
jns
outsl
aas
xchg
popa
popf
xlat
sub
mov
call
test
outsl
sbb
lcall
scas
mov
cmpsl
stc
mov
adc
adc
jne
push
aaa
idivb
inc
shr
and
adc
ja
testb
lret
xchg
mov
sbb
jge
arpl
push
and
push
mov
jl
cmc
jb
ljmp
dec
jmp
notl
ret
cmc
adc
jae
xchg
adc
mov
xor
imul
out
or
sbb
dec
inc
out
and
stc
dec
sub
mov
sub
clc
pop
mov
movsl
sbb
cmpsb
movsb
jbe
stc
mov
inc
js
es
xchg
shlb
gs
mov
inc
fs
lahf
adc
mov
dec
scas
and
mov
loopne
shlb
xchg
inc
jno
sbb
cwtl
dec
pop
sbb
pop
lods
jmp
test
sbb
fmuls
push
push
jno
sahf
add
adc
test
and
loope
push
or
pushf
daa
aam
rcrb
test
or
les
jno
xchg
clc
sarb
stos
rcrl
rorb
or
push
jo
movsb
cmp
loope
inc
xchg
jecxz
sbb
sub
jae
pop
pop
movsb
cld
cmp
fistpl
mov
cmc
xchg
xor
mov
mov
call
test
xlat
pop
push
cwtl
jmp
add
mov
pop
cmp
dec
stos
cld
loop
push
fisubl
out
ds
xchg
jno
addr16
adc
rcrb
aam
mov
dec
push
imul
push
fisubl
sarb
dec
enter
pusha
or
repnz
scas
aad
je
loope
push
jb
xor
dec
popa
jns
mov
xchg
inc
or
shrl
cmpsb
adc
xchg
push
hlt
andl
out
xor
push
roll
pushf
xor
leave
sti
inc
sbb
pop
xchg
sub
aam
or
fisubl
push
int
mov
cmp
jo
adc
or
xchg
pop
lods
xor
sub
out
xor
scas
bound
fimuls
movsb
mov
and
jbe
sbb
cltd
sbb
imul
popa
data16
repnz
adc
leave
outsb
popa
and
mov
jge
imulb
aam
mov
dec
test
push
push
pusha
mov
lret
sahf
movsb
imul
fsub
shr
jecxz
imul
lahf
lahf
movsl
pusha
pop
xchg
dec
shlb
or
inc
add
insb
fidivrl
cmpb
popa
jmp
lea
stos
cmpsl
or
inc
movsl
ds
pop
lret
outsb
pop
sar
mov
bound
sbb
loop
adcb
les
and
xor
adc
dec
adc
inc
xchg
mov
sbb
inc
out
push
cld
test
pop
push
cmp
push
mov
lods
mov
xchg
ds
repnz
cld
repz
mov
xchg
add
shll
insl
sbb
xchg
pop
sahf
mov
xchg
orl
in
cmp
cmp
ljmp
lds
sbb
xchg
push
add
jle
int3
xchg
xchg
inc
xor
insl
inc
mov
push
sbb
aaa
ror
ficompl
mov
mov
mov
mov
push
call
pop
imul
add
ja
hlt
mov
fucomp
ds
lret
addr16
stos
gs
cltd
ret
lret
jno
out
fnop
mov
adc
jmp
lea
push
pop
aad
aam
xor
test
mov
or
test
or
fidivrl
sarb
cmpsb
and
sub
dec
push
cwtl
jo
mov
iret
cmp
mov
mov
or
insb
inc
hlt
or
mov
add
inc
out
aad
lods
sbb
push
push
cmp
jle
sbb
aas
inc
push
bound
fadds
xchg
mov
pop
into
pop
mov
psraw
test
repz
jmp
and
cld
and
test
jns
xchg
aaa
and
jle
pushf
test
xor
adc
sub
ret
call
and
cmp
mov
inc
mov
and
hlt
test
ss
xlat
dec
add
ljmp
adc
inc
mov
mov
cmpsb
mov
divb
cld
add
xchg
mov
or
sbb
popl
add
pusha
adc
jg
push
rep
nop
fmulp
xchg
push
sti
lods
cld
icebp
pop
rclb
push
call
enter
test
movl
xor
arpl
push
jge
outsb
mov
nop
imul
or
pop
mov
jb
or
loop
je
mov
ror
outsl
xchg
dec
scas
int3
add
pop
je
dec
xchg
mov
imul
dec
xchg
or
pop
js
fdiv
push
lcall
fmulp
mov
sti
dec
dec
mov
shl
sbb
imul
pop
das
cmpsb
add
packssdw
xlat
mov
adc
push
pop
cmp
shr
insb
mov
aaa
adc
xor
sbb
or
xchg
push
ss
pusha
fistpl
shll
jl
mov
pop
mov
and
mov
cmp
pop
rcll
enter
cmp
loopne
mov
or
cs
or
add
mov
clc
sarb
fbld
add
es
pusha
out
in
pop
cmp
popa
sub
mov
adc
push
popa
sahf
mov
popa
shl
sbbl
shl
scas
dec
pop
xchg
sub
nop
fnstenv
sbb
imul
or
add
stos
pop
push
or
fidivs
cld
cli
mov
movl
xor
or
fisubs
fnstenv
scas
pushf
andl
mov
clc
inc
into
into
into
mov
dec
push
fisttpl
cmc
fnstcw
add
push
mov
add
cmp
ljmp
pop
mov
push
sbb
lds
pop
mov
sbb
xchg
in
xchg
jnp
push
cld
cmc
xchg
in
clc
push
adc
dec
gs
loop
sub
xlat
imul
push
adcl
pop
push
int3
das
add
inc
imul
adc
in
xchg
pop
push
mov
cld
fdivs
stc
pop
stos
sub
mov
add
divb
aaa
add
js
add
sub
andb
sbb
xlat
ret
push
mov
push
mov
int
mov
push
jnp
mov
adc
xchg
jo
jl
std
jns
mov
jne
ljmp
xor
mov
stos
mov
popa
hlt
in
mov
pop
movsl
mov
adc
mov
jne
jb
fldt
mov
xchg
xchg
bound
push
inc
imul
dec
or
adc
stos
mov
out
imul
xchg
or
cmp
cmpsl
aam
loopne
sar
stc
sub
adc
pop
mov
jb
sbb
fwait
add
js
push
or
jp
jg
lret
out
push
aas
ficoml
loop
sbb
loopne
sti
adc
insl
movsb
jbe
movsl
and
arpl
lret
xchg
data16
out
jne
cld
mov
in
and
fcoms
cmpsl
pusha
fstps
inc
cli
jecxz
sbb
jo
lock
imul
push
insl
add
aas
std
lods
lret
lods
sub
mov
imul
mov
shlb
cmp
sbb
push
push
es
adc
lret
inc
jns
sub
dec
arpl
mov
mov
nop
fsin
int
or
sbb
sarb
repz
sbb
andl
dec
int
cmp
pop
pop
push
pop
xchg
int
and
andl
pusha
loop
or
sub
mov
add
sbb
mov
lods
jo
lods
inc
nop
jl
sub
xor
and
fistpll
rcrl
mov
cmpsb
jo
pop
push
dec
or
jl
daa
std
or
icebp
mov
cli
mov
inc
jp
ret
and
pop
mov
push
jle
jnp
cmpsb
or
sbb
imul
push
fnstenv
loop
add
fsubrl
pop
icebp
rolb
into
or
inc
cltd
add
lret
cwtl
adc
inc
push
hlt
cmp
push
inc
cs
fisubl
push
insb
mov
jb
sub
lcall
sub
sub
mov
inc
jmp
es
insb
lds
sub
dec
inc
pop
loopne
mov
rcrl
add
push
xchg
cltd
adc
sub
movsl
cli
lret
les
dec
clc
lods
push
icebp
and
xor
adc
test
movsb
lea
sbb
addr16
mov
hlt
inc
inc
add
icebp
into
sar
pusha
cmp
jns
in
aaa
loopne
lea
test
or
shl
hlt
add
ss
mov
sti
add
xchg
fcmovne
lcall
mov
inc
shll
dec
xchg
negb
mov
jmp
push
les
push
fisubl
pusha
mov
pop
jbe
sub
mov
cmp
in
dec
pop
mov
add
aad
bound
adc
std
inc
loope
inc
jae
push
call
add
inc
adc
mov
adc
insl
and
jb
test
int
push
cmpsb
mov
sbb
aam
cmp
xor
xor
cmp
dec
jmp
movsb
push
outsb
fildll
not
mov
mov
loop
jmp
xor
and
cmpb
sti
jge
mov
or
in
pushl
lods
or
das
jnp
leave
clc
stos
lret
outsb
dec
xor
jno
ljmp
xchg
mov
pop
mov
sbb
mov
jnp
sbb
imul
mov
in
fpatan
data16
xor
pop
sbb
scas
and
dec
add
cmp
test
add
negl
test
pop
sbb
outsl
pushf
push
pop
xor
or
lret
cld
mov
push
dec
sub
cmp
xorb
pop
scas
mov
add
out
xor
pop
std
into
sub
sbb
cmp
jp
or
dec
dec
pop
sbb
ja
sub
jl
cmp
push
enter
and
mov
scas
xchg
jne
iret
lock
stc
cmp
rorl
stos
out
ror
cli
pop
mov
xor
jp
test
inc
sbb
fsubl
adc
adc
call
les
add
lret
or
sbb
fmuls
lret
cmp
repnz
test
fildl
test
jnp
popf
iret
movsl
frndint
in
push
filds
jmp
fwait
imul
hlt
add
popf
pop
add
jl
adc
pop
test
adc
dec
js
push
lahf
inc
fmull
xor
mov
aas
lea
repz
rcrb
addr16
ljmp
mov
pushf
xchg
out
aam
mov
fimuls
mov
lahf
or
stos
dec
daa
rcrb
in
xchg
jle
mov
push
incl
testb
pop
or
mov
add
cmp
xchg
dec
push
mov
sbb
jecxz
pop
scas
jnp
inc
ret
int3
sub
mov
hlt
test
int3
fcos
cmpsb
cwtl
lret
fcoms
push
outsl
jo
adc
fs
sub
xchg
daa
sub
sbb
aad
mov
insl
aad
add
es
js
out
popf
push
mov
test
in
mov
addb
clc
jns
int
mov
aas
nop
hlt
add
xor
or
push
adc
js
xlat
out
mov
sub
mov
jecxz
idivl
sub
mov
push
inc
aas
or
lock
insb
int
inc
cmpsb
cltd
repz
insl
xlat
iret
sbb
push
and
fdivrs
or
mov
mov
leave
js
jmp
out
mov
stos
cmp
dec
orb
sahf
and
daa
mov
insl
or
ret
and
inc
fwait
push
or
mov
pop
mov
roll
pop
jo
mov
sub
mov
incl
popa
mov
adc
mov
in
scas
test
and
pushf
cwtl
sbb
pop
idiv
cmp
loope
fidivrl
mov
ret
cwtl
ret
sti
adc
mov
sti
or
sbb
or
jmp
test
je
sub
jae
pop
addr16
or
popf
add
fistps
movsb
mov
popa
xor
jns
push
addr16
ficomps
sub
js
repz
lea
mov
sti
sbb
out
add
pop
mov
cli
mov
dec
jg
sbb
xchg
mov
push
shl
stc
push
sbb
jg
mov
mov
sub
xor
add
inc
clc
xchg
push
repz
or
jmp
repz
jecxz
xchg
lods
mov
movsl
dec
in
mov
ret
push
dec
negb
xchg
fadd
or
arpl
push
arpl
xchg
and
shlb
jl
call
jno
rcll
dec
jns
jnp
xchg
push
jnp
in
addr16
jno
inc
in
sub
add
orl
or
inc
in
hlt
adc
out
jb
iret
sub
lret
out
bound
sbb
test
pop
push
shrl
fincstp
xchg
mov
adc
test
or
lcall
mov
pop
sub
outsl
lahf
and
icebp
aam
push
mov
je
xchg
clc
test
ret
jns
mov
inc
jns
inc
notb
insb
sbb
and
and
sub
pop
lods
lcall
pop
rorb
das
ds
in
push
jecxz
jmp
mov
adcl
or
mov
and
das
cmp
xchg
icebp
and
sub
and
lods
outsl
jge
pop
stos
dec
mov
pop
adc
sbb
mov
adc
mov
sbb
ds
dec
xorl
sbb
shlb
adc
bound
xor
pop
sub
jl
xchg
sbb
fisttps
dec
pop
inc
dec
mov
and
push
pop
loope
xchg
sub
adc
aas
xchg
or
pushf
sbb
cmp
jno
popf
add
adc
es
sub
mov
test
and
jle
inc
jmp
push
data16
xchg
stc
push
nop
mov
into
sahf
aaa
mov
xor
lds
jl
xor
sub
xchg
or
addb
xchg
int
ja
jae
inc
imul
and
push
aas
bound
out
jno
cltd
mov
inc
ja
mov
test
jle
fisubrl
xor
pushf
out
jl
sarl
cmp
ds
sbb
xchg
daa
pop
fs
lret
repz
sbb
loopne
das
sbb
test
cmp
mov
mov
lret
sub
sbb
and
pop
pop
pop
gs
lds
jb
imul
inc
lock
sbb
out
fs
mov
mov
ret
loop
int
imul
xor
aam
into
push
aaa
pop
sub
inc
jbe
fcomip
outsb
jns
inc
mov
or
scas
stc
dec
or
jo
repnz
cli
pop
pop
push
outsl
sbb
hlt
adc
cmpsl
xchg
mov
sub
lret
lods
xchg
gs
push
adc
ret
xlat
cmp
sbb
imul
cmp
fidivl
or
call
and
mov
cmpl
and
add
jp
mov
hlt
sub
xor
arpl
cmc
sub
inc
pop
mov
mov
dec
and
es
sbb
shlb
pop
xor
rcrl
lods
ja
sub
adc
loope
mov
cmp
lahf
mov
mov
mov
mov
ret
js
ljmp
mov
and
nop
jnp
pop
push
popf
std
test
enter
pop
je
sbb
cli
pop
rorb
popa
pop
add
rorb
xchg
add
pop
lock
mov
mov
cli
or
cmpb
or
xor
not
stc
call
jp
adc
xchg
adc
xor
popa
mov
sbb
push
das
sbb
inc
movl
lcall
dec
dec
inc
push
cmp
inc
jbe
push
adc
lea
cmp
out
imul
incb
popf
cmpsb
rcll
xchg
mov
inc
and
mov
push
sarb
xchg
xchg
daa
fcomps
adc
or
or
fwait
xor
loopne
outsb
dec
add
adc
mov
mov
adc
pop
jge
and
and
stos
into
add
sbb
stos
adc
xor
nop
fildl
pusha
pop
push
xor
test
sbb
sub
inc
es
ficomps
dec
mov
popf
sub
sti
loop
cmp
lods
mov
adc
idivb
fcmovne
psubq
push
imul
ja
jb
fiaddl
scas
mov
mov
cltd
lahf
ret
or
sti
mov
push
push
mov
mov
daa
cltd
push
call
lea
dec
inc
add
xchg
adc
cmp
loope
jl
roll
popa
adc
adc
push
call
mov
add
add
inc
mov
mov
pop
out
push
mov
mov
pop
inc
cltd
in
mov
icebp
push
lret
out
subb
mov
movsl
addr16
imul
fcomp
in
mov
das
cmp
xchg
out
test
or
mov
and
test
sbb
movsb
xchg
lods
mov
sbb
lahf
mov
mov
adc
repz
pop
hlt
mov
pop
add
inc
aad
fwait
xadd
aam
icebp
lods
pushf
cmp
jmp
pop
jnp
push
cmp
fadd
push
pop
pushf
mov
ret
push
jle
sahf
inc
sarb
mov
test
inc
push
lds
pop
and
cmpsl
mov
cmp
fwait
adc
xlat
push
test
jbe
jg
movsl
push
cmpsl
incb
cmovg
pushf
pop
and
fiaddl
xorb
fwait
xor
std
or
sub
call
je
mov
push
inc
sub
push
es
inc
js
xchg
mov
pop
xor
or
insl
cwtl
push
fadd
add
jge
pop
shlb
outsb
sbb
sub
jle
das
arpl
push
dec
mov
jp
ljmp
dec
xor
fidivs
enter
jae
shl
stos
lods
bound
jbe
data16
jp
lea
js
dec
movsl
sti
and
inc
int3
pushl
nop
lods
jp
xchg
xchg
mov
push
ljmp
enter
sbb
or
arpl
rorl
cmp
test
inc
fildl
cmc
adc
fsubl
in
mov
push
add
rol
movsl
imul
out
inc
adc
or
or
sarb
in
lea
push
mov
rcrb
push
das
jne
xor
mov
mov
push
cld
movsl
cmp
and
mov
pop
adc
adc
jle
push
xor
jecxz
and
jb
mov
pop
jnp
das
cmp
push
dec
ljmp
shrb
xchg
cmp
aaa
lcall
mov
cwtl
ljmp
inc
sbb
fsubr
sbb
fstl
xchg
or
sbb
mov
ljmp
out
insl
inc
xor
cmp
lods
mov
sbbl
lods
insb
lret
cwtl
lock
sub
jle
lahf
hlt
ja
popf
jne
in
pusha
push
add
pop
pop
fcompl
mov
loop
lret
xor
cmc
pop
pusha
mov
lods
xchg
sub
mov
mov
adc
adc
nop
hlt
div
js
shll
mov
jecxz
or
xchg
mov
push
push
push
mov
dec
rcrl
test
lea
lea
add
sub
sub
xor
adc
std
or
hlt
jmp
fsub
or
jae
mov
dec
sbb
pop
xorl
fsqrt
imul
popa
pushf
xchg
jmp
add
adc
lret
ret
cmp
pop
jge
outsb
bound
sahf
test
pop
add
out
stos
mov
cltd
add
cmpsb
call
xchg
into
jo
mov
mov
add
jns
repnz
incb
push
cmp
sbb
push
lock
sbb
add
stos
xchg
dec
add
icebp
shll
cmp
addr16
adc
mov
push
pop
xor
xchg
scas
jno
jmp
bound
lahf
adc
sbb
sbb
adc
fstpt
mov
outsb
sub
jge
loopne
stos
cs
add
jnp
mov
lea
and
and
jo
leave
fists
mov
adc
out
call
mov
xchg
mov
pop
push
dec
dec
leave
inc
das
loop
mov
cmp
inc
packssdw
mov
adc
cmp
cmpsl
mov
xchg
icebp
shl
xchg
mov
add
lret
mov
jl
fcompl
or
lret
push
mov
adc
movsl
xchg
dec
dec
hlt
mov
addr16
and
dec
mov
mov
mov
or
push
pushf
add
cmpsb
mov
cmp
je
repnz
scas
adc
xchg
xchg
mov
lods
jno
into
cmp
xchg
push
popa
cmc
mov
cld
leave
and
ret
call
sti
dec
or
sub
aaa
fiaddl
pop
addr16
not
fs
lods
push
loope
icebp
xchg
push
shlb
or
cs
mov
test
pop
sub
lds
dec
lcall
insl
jns
and
jns
mov
jecxz
aas
popf
and
add
cmp
push
jp
xchg
mov
lea
lret
or
cmp
lods
xchg
sub
mov
xchg
dec
push
test
inc
jmp
inc
sub
dec
sbb
movsb
inc
adc
push
cmp
out
arpl
push
push
les
sub
mov
sub
mov
fisubs
mov
mov
cmpsl
rcrb
or
insb
fnsave
and
adc
cs
mov
test
jns
mov
sahf
or
mov
enter
push
sbb
jmp
repnz
mov
sbb
into
cmp
cltd
pop
sub
out
lods
loope
test
jge
in
xorb
pusha
xor
rcrb
xchg
lods
push
ret
pop
dec
pushf
push
mov
jg
mov
xchg
lods
xrelease
cmp
add
cltd
mov
popf
xchg
pop
cli
mov
mov
cwtl
cmp
daa
js
lret
push
popa
push
scas
push
sbb
shll
dec
shrl
dec
jnp
push
or
add
and
roll
fwait
sarl
dec
rolb
aaa
and
or
movsb
test
pop
sub
lret
addr16
xchg
inc
sub
jecxz
in
in
xchg
pusha
push
fdivrs
push
xchg
fdivrl
mov
in
dec
push
in
sub
jnp
cli
cmp
daa
push
mov
sbb
inc
cmp
jmp
mov
stos
xchg
and
mov
mov
dec
jns
pop
xchg
dec
in
add
lods
dec
aam
mov
out
xlat
and
xchg
xchg
mov
fisubrl
mov
loope
xor
cmp
rcll
lods
cmpsl
cmp
out
pop
lea
xchg
and
lds
cmp
jecxz
popa
insb
adc
cmpsl
mov
mov
loope
daa
pop
sti
sbb
sub
dec
rorb
or
ret
fistl
outsl
stc
mov
add
shrb
ret
xor
aam
xchg
fcmove
push
sub
xchg
push
sbb
sbb
subl
jns
stos
fsubs
ret
push
shr
dec
push
or
inc
cmp
pushl
sbb
inc
sbb
hlt
pop
fidivrs
xor
pop
fdiv
dec
lret
lcall
inc
test
inc
arpl
jno
xchg
xor
popa
orb
and
dec
loope
and
jnp
movsl
adcb
xor
pop
loopne
cmpsb
insl
mov
sti
fs
inc
add
mov
mov
push
out
cli
shr
or
cmpsl
xchg
mov
pop
add
addb
mov
and
jb
mov
insl
jg
inc
in
nop
jnp
fimuls
jo
adc
mov
stc
out
imul
push
andl
dec
xchg
aam
xor
jno
add
xchg
push
fldt
fucomp
adc
ss
lods
movsb
push
rcl
imul
mov
in
scas
clc
stos
xchg
or
xchg
sub
add
repz
xor
aas
out
ret
mov
pop
sbb
rclb
mov
or
xor
mov
cmp
ja
pop
mov
mov
xor
aas
pop
scas
pop
fcomi
cmpsb
and
insb
sub
or
sbb
dec
mov
mov
and
inc
movsb
jmp
stos
sub
jge
fcos
lds
cwtl
mov
ret
push
out
push
push
add
fcomip
xor
xchg
jg
sarl
sbb
add
jle
inc
and
in
push
cld
cwtl
dec
loop
lea
in
stc
ljmp
icebp
sub
nop
nop
ret
shll
js
mov
rcll
loopne
sbb
push
jp
aaa
les
xchg
push
testl
lcall
jle
sub
jo
insl
lods
pop
ficoms
jecxz
xchg
test
cmpsb
sub
adc
fistpll
jns
inc
mov
mov
push
and
ds
cmp
inc
jmp
mov
lea
add
movsb
les
or
xor
pop
push
or
fadds
ljmp
mov
lods
sbb
inc
cmp
add
mov
test
push
inc
cld
mov
pop
or
rolb
pushf
repz
cld
popf
bound
cli
mov
add
js
xchg
cwtl
jne
adc
lds
xchg
in
jge
mov
mov
inc
sbb
enter
adc
mov
sub
add
pop
les
mov
inc
push
jo
xchg
and
hlt
pop
or
pxor
test
jmp
xchg
cmp
shlb
jmp
out
jne
outsl
enter
push
jl
or
sbb
out
inc
cltd
mov
jae
mov
cmp
push
and
sti
dec
inc
push
dec
push
push
dec
push
add
lods
stos
inc
sub
mov
xlat
enter
push
incl
daa
or
std
les
icebp
cltd
mov
pop
mov
jp
cmp
and
scas
lods
int3
mov
aad
add
jo
jmp
sbb
and
mov
fcmovnu
pop
push
or
popf
jbe
lea
adc
push
cmp
xchg
dec
insl
push
insl
rcl
mov
sbb
mov
add
mov
pop
test
cmc
mov
lret
out
test
xor
jl
jne
fsqrt
mov
jb
out
rcr
mov
dec
jl
jne
sub
out
push
jns
cmpsb
bound
sbbb
jmp
jge
ljmp
fcomp
cmp
cmc
aad
int3
sub
adc
xor
push
xor
push
dec
imul
stos
lods
jns
jmp
dec
std
imul
pop
mov
test
jmp
cwtl
jge
and
inc
das
notb
and
lock
pop
jg
inc
cmpsb
ret
xor
sub
pop
and
cmp
cmp
mov
or
cld
inc
mov
std
and
popf
loop
mov
pushl
outsl
jbe
data16
ljmp
adc
es
cmp
sbb
push
sub
push
adc
incb
inc
xchg
mov
jmp
inc
push
or
dec
push
or
inc
std
ficoml
mov
mov
jae
ljmp
pop
fs
adc
add
addr16
adc
adc
jge
xor
mov
jge
mov
jnp
mov
cmp
outsb
data16
push
scas
dec
lds
sbb
mov
mov
mov
sti
add
inc
jno
pop
adc
pop
ss
cmc
and
aas
jge
aad
cmp
mov
adc
pop
mov
test
adc
lock
adc
lea
rcrl
insb
mov
scas
xchg
mov
and
pop
movsl
andl
hlt
dec
push
dec
xorb
insl
cli
test
arpl
jo
aam
pop
nop
loopne
divb
jl
and
ja
xor
mov
out
mov
fdivr
daa
sbb
add
popa
jo
lret
int3
inc
cli
daa
pop
int3
mov
dec
pop
scas
int3
in
out
jge
sub
scas
xor
dec
mov
cli
mov
sahf
sbb
add
xchg
test
xchg
adc
sbb
jae
rorl
inc
sub
pop
cmpsb
jne
cmpsb
int
xchg
hlt
sbb
into
mov
inc
aaa
mov
pop
push
js
xchg
fucomi
sub
in
outsl
fsts
sbb
push
jmp
loope
dec
cmpsl
rcll
add
lcall
jns
jecxz
out
xchg
pop
aam
rorb
mov
lds
insl
jp
mov
ljmp
popa
adc
inc
mov
mov
movb
addr16
mov
or
scas
mov
out
adc
xlat
xchg
icebp
fmull
jbe
addr16
out
add
xchg
mov
inc
push
mov
push
xor
cmp
outsl
mov
pop
outsb
xor
xor
xchg
sbb
adc
xchg
push
out
xchg
pop
inc
hlt
jge
add
fimuls
rcll
cmp
mov
test
push
mov
mov
mov
ds
push
sahf
push
or
enter
iret
jmp
xchg
out
int
rolb
xchg
aam
call
xchg
popa
je
repnz
mov
sbb
or
mov
call
outsl
imul
inc
and
sub
adc
pop
loopne
lret
test
mov
sbb
addb
jae
in
xchg
je
jno
cwtl
popf
and
iret
fistl
xlat
xlat
aas
arpl
pop
into
daa
mov
lea
adc
stos
sub
rorl
jg
fsubrs
or
leave
mov
jmp
pop
mov
adc
fimuls
out
and
add
cltd
addb
insb
and
or
add
sub
inc
cltd
push
pop
icebp
jb
dec
mov
fiadds
mov
ret
imul
push
pop
mov
insb
das
push
push
mov
fs
leave
or
pop
ret
loopne
cli
daa
adc
ficomps
push
into
enter
xchg
mov
add
push
into
imul
test
roll
cli
leave
push
dec
jecxz
in
pop
adc
loop
inc
add
ret
hlt
mov
mov
jo
stos
adc
pop
popa
es
cmp
adc
sbb
cmp
test
loope
insb
or
rorb
dec
shl
xor
test
pop
mov
jmp
clc
mov
cld
sbb
jbe
std
scas
das
imul
in
aaa
xchg
fsubs
dec
das
cmp
pop
out
push
inc
negl
mov
incb
pop
shrl
mov
jo
aas
pop
cld
fdivr
or
push
repz
ret
jno
and
mov
jno
loop
sbb
stc
jle
xor
jne
jp
roll
xchg
insb
or
repz
cmp
mov
call
push
std
mov
insb
mov
rorb
add
fidivs
popa
push
ficompl
ja
int3
in
mov
sub
cmp
ret
shll
sarl
push
pop
mov
cmpsb
bound
mov
jle
ret
and
int
jecxz
pop
fldl
shl
aas
sarb
inc
and
scas
or
in
roll
inc
ret
cmp
inc
inc
lret
leave
xorb
sub
lahf
je
mov
mull
adc
xchg
jp
add
pop
mov
jo
push
sti
sub
aas
adc
jbe
push
call
mov
xor
jnp
jbe
jecxz
loop
bound
daa
es
or
into
add
add
pop
jl
push
fsts
lahf
adc
incb
mov
add
leave
push
imul
dec
stos
mov
or
rcrl
dec
jg
mov
or
int
mov
loop
xchg
add
and
fdiv
sarb
xchg
fldenv
sahf
cmp
imul
xchg
xor
mov
aas
popf
mov
xchg
jp
ja
das
xorb
fstl
xorl
scas
xchg
fcoml
push
std
je
rolb
insb
out
and
mov
loop
jns
pusha
divl
xchg
es
jns
push
pop
bound
fisttps
xor
jno
aad
fildl
xchg
das
cmpl
pop
dec
pushf
push
jge
test
inc
mov
mov
dec
sbb
mov
sub
cmpsl
rcpps
pop
int3
xchg
rclb
cmpsl
sbb
leave
out
add
movb
adc
test
lahf
pusha
test
mov
in
dec
movsl
xchg
ficoml
cmp
sub
sub
push
ficoml
ja
xor
xchg
cmpsl
or
push
mov
mov
fmuls
icebp
and
arpl
inc
in
mov
jecxz
popa
sbb
cmovo
in
fdivs
fxch
jmp
insl
add
inc
dec
adc
push
sub
pop
outsb
das
or
dec
xchg
stc
xchg
cmp
int
cmp
jmp
mov
sar
enter
mov
adc
icebp
icebp
sub
push
mov
mov
movl
mov
lea
cmp
push
mov
sbb
ret
out
cmp
mov
mov
push
add
pop
pop
or
stc
or
jo
or
mov
clc
cmp
jle
xor
mov
adc
xlat
xchg
pop
jo
loope
rcrl
mov
std
push
and
mov
fldcw
mov
bound
inc
popf
and
fwait
arpl
jno
mov
loopne
popa
lock
daa
fwait
popf
shll
xor
sub
push
mov
mov
popa
jo
ficoms
add
rcll
mov
sbb
int
dec
pop
xchg
hlt
xlat
movsb
bound
popf
test
jae
sbb
mov
mov
jle
or
js
pop
jl
push
sti
xchg
or
mov
loop
shrl
and
rclb
icebp
push
xchg
mov
mov
jae
sub
jno
mov
jnp
sbb
mov
pop
stos
das
jno
lds
inc
aas
dec
adc
ret
ljmp
out
aaa
movsl
cs
repnz
lods
dec
stc
sti
jne
pop
lcall
negb
insb
dec
pop
xor
sti
fchs
push
inc
sub
jecxz
mov
fistps
lods
ss
inc
add
dec
ja
push
xorb
sti
hlt
repz
push
ljmp
jle
and
je
push
cld
mov
push
fildl
mov
in
cltd
cmp
sbb
lcall
incb
xchg
push
or
lea
test
jmp
lock
cmc
movsb
mov
adc
xchg
into
mov
out
lock
hlt
xchg
fwait
out
mov
inc
pop
test
mov
loopne
sbb
mov
cmc
add
dec
mov
nop
push
data16
cs
sbb
push
js
inc
cmp
test
test
push
inc
cltd
push
test
je
icebp
ret
sub
push
cmpsl
cmp
mov
iret
mov
clc
shll
mov
xchg
xor
sbb
mov
bound
add
push
inc
xor
sbb
inc
push
insb
cmpsb
jae
add
lret
imul
sub
hlt
and
cld
push
push
pause
push
in
push
mov
xor
faddl
mov
inc
ret
xchg
in
mov
jecxz
jno
bound
lock
dec
mov
mov
rol
adc
adc
clc
cmp
mov
mov
ja
lahf
mov
insl
insb
push
loop
cmpsb
or
inc
loope
fadds
mov
insl
cmc
xchg
jb
xor
aas
jb
pusha
loope
jb
in
fwait
cs
scas
pop
xchg
push
rcll
adc
scas
lret
mov
int
lds
flds
xor
jge
fistl
pop
and
and
push
push
lahf
imul
mov
add
test
ljmp
sarl
test
jns
test
cmp
mov
inc
mov
clc
mov
pop
loopne
fwait
pop
fmuls
jecxz
xorl
ret
ljmp
pop
mov
or
inc
mov
enter
leave
cwtl
aad
outsl
ja
sub
jne
rclb
mov
pop
mov
js
cmp
and
adc
xorl
std
inc
popf
push
pop
notb
es
das
cmpsl
int
jnp
js
or
jb
cs
jo
mov
inc
push
imul
leave
jl
adc
cmpsb
aaa
cmp
add
ffreep
scas
lret
lods
mov
or
das
das
mov
jae
pop
or
xor
xchg
or
lretw
xlat
fsubrl
jno
mov
mov
xor
add
fldcw
movsb
lret
sub
in
or
fwait
aad
scas
pop
xchg
jns
mov
lahf
test
iret
mov
cmp
cli
or
mov
adc
inc
or
sarl
cmp
addr16
outsb
cld
out
outsb
aas
roll
push
pop
outsl
adc
in
mov
insb
mov
sub
inc
xchg
jne
sbb
cmp
dec
outsb
ret
jo
push
js
ficomps
lret
test
mov
jl
dec
es
jp
inc
jecxz
pop
xchg
sbb
test
jo
and
sti
jecxz
aad
dec
jbe
test
sar
imull
call
xchg
clc
rclb
pop
pop
popa
jge
inc
and
adc
lret
lret
movsb
sub
outsl
ljmp
imul
fldenv
or
divl
xchg
cld
mov
adc
call
or
push
gs
imul
sub
cmp
mov
cmp
test
fsubp
lods
adc
jl
cmp
sub
mov
stos
orl
clc
adc
cmc
lcall
inc
stos
es
adc
int3
loope
dec
enter
xchg
xor
int
cli
xchg
cmpsb
stos
or
cmp
rcr
jno
fstps
test
xchg
incl
cmp
pop
inc
jg
mov
and
xchg
jecxz
nop
das
fists
cltd
mov
add
in
and
and
xchg
aam
js
loope
xor
adc
gs
shll
add
std
jae
mov
jle
sarl
cmc
pop
ret
stc
shlb
lret
je
std
cmp
ret
xchg
out
jb
leave
xor
scas
cmp
in
dec
repnz
lods
sbb
pop
ret
iret
pop
cmp
inc
push
adc
adc
jmp
adc
sbb
call
mov
cli
adc
xchg
jb
jmp
adc
gs
stos
loope
xor
cmpsb
sbb
mov
xor
push
lods
lahf
loop
lahf
test
dec
aad
into
aad
cmp
das
and
sbb
out
popa
xor
ja
ficompl
dec
and
dec
adc
mov
xor
mov
mov
out
out
test
adc
mov
shl
orb
adc
incb
sub
lods
loop
ljmp
pop
lret
jbe
test
inc
sub
add
push
jns
xchg
and
adc
or
dec
jno
jno
cmpsb
adc
inc
cs
jbe
sti
mov
cmp
test
jb
jle
in
test
xlat
or
ficoms
in
mov
pop
data16
add
pushf
push
stos
xchg
pop
nop
xchg
jmp
and
outsb
and
out
and
aaa
or
sub
out
push
inc
test
rorb
dec
mov
out
mov
ret
add
push
adc
lods
mov
dec
aad
test
dec
mov
pop
stos
and
lods
popa
lcall
xchg
mov
push
xchg
or
das
xlat
jp
imul
rclb
fisubrs
and
mov
pop
dec
pop
mov
and
icebp
mov
mov
lock
sarb
call
inc
out
mov
jae
cmp
mov
sub
stc
add
push
sbbl
xchg
cmpb
mov
dec
sahf
push
pop
enter
lcall
test
sbb
mov
cs
insl
insl
movsb
sbb
sbb
pusha
add
rclb
rolb
and
idivb
jno
cmpb
add
pop
mov
mov
jg
scas
xor
adc
loopew
inc
inc
xchg
ds
xor
inc
test
push
cmp
and
xchg
lcall
pop
jp
push
pop
sub
xchg
je
mov
cmc
mov
xchg
fiaddl
ds
push
imul
inc
je
loop
jns
stos
repnz
add
mov
movsb
mov
fmull
cld
mov
and
mov
mov
imul
add
repz
pop
cmp
mov
xor
sti
jns
int3
les
dec
movsb
ja
xchg
or
mov
push
pop
data16
dec
ljmp
and
stos
scas
not
pop
xor
xchg
in
lea
lcall
sub
enter
pop
cwtl
jbe
leave
dec
int3
movsl
int3
sbb
sarb
lret
and
pop
loop
stos
mov
nop
inc
call
dec
dec
and
rolb
std
dec
bound
mov
push
mov
dec
push
sub
enter
hlt
outsb
fisubl
pushf
shll
es
je
subb
pop
xchg
jmp
add
add
pop
lock
mov
sets
loope
ds
movsb
xor
mov
lock
out
mov
dec
shlb
mov
xor
sbb
fs
insb
sub
adc
adc
add
sub
cmp
adc
lds
xor
call
jecxz
pop
les
loop
cmpl
sub
lods
add
xchg
sti
clc
xchg
add
popf
sub
mov
out
pusha
mov
clc
ljmp
fadd
jnp
out
aam
pop
fmull
push
xchg
or
xor
adc
mov
cmpsb
inc
outsb
mov
jmp
sbb
fldt
popf
pop
js
and
xchg
mov
data16
jne
xor
pop
repnz
mov
fldt
fwait
cmp
rorl
xor
test
adc
ja
xor
lret
aaa
dec
int
xchg
call
pop
loopne
incl
test
sub
lods
test
mov
dec
sti
mov
enter
paddusb
popa
pop
je
dec
mov
xor
pop
dec
xlat
lods
into
pop
arpl
inc
pop
scas
sbb
pushf
test
push
lret
test
mov
inc
xchg
scas
add
sub
cmc
mov
int
lds
add
enter
cltd
cltd
aad
push
sbb
inc
fiaddl
insb
inc
ds
lods
push
pop
outsl
gs
rcll
ret
mov
outsl
mov
xchg
cmpsb
cwtl
fsubrp
add
xchg
cltd
lea
push
push
sbb
xor
mov
or
xchg
cwtl
lods
and
push
psubb
dec
or
adc
lret
stos
cmp
mov
loop
push
pop
xchg
push
and
out
popf
inc
sub
ds
imul
fsubrs
out
fwait
subl
popa
sbb
cmp
cmc
xchg
int3
inc
dec
jmp
lret
rcrl
cmp
pop
fisubs
or
inc
out
add
lret
cld
dec
mov
decl
sarb
fidivrs
mov
out
adc
loope
mov
fnsave
stos
mov
inc
sub
mov
imul
jg
sti
jnp
sbb
and
sbb
dec
pop
dec
inc
cmp
ret
pop
es
ss
adc
dec
push
loopne
xchg
arpl
jp
jbe
arpl
xchg
bound
and
cwtl
mov
xor
dec
push
mov
mov
cmp
adc
sub
pop
mov
inc
cld
fcmovb
negl
sbb
in
lds
pop
sbb
data16
jg
mov
cmpsl
mov
mov
pop
rcrl
stos
xor
scas
sbb
cmp
xor
pop
divl
js
fcoml
cmp
flds
xor
jp
mov
add
out
ljmp
shll
mull
mov
js
cltd
js
sub
fwait
mov
ja
shrl
fsts
mov
cmp
ljmp
call
pop
inc
dec
pushf
insb
add
pop
aam
sbb
outsb
sbbb
pop
cmp
bnd
popa
xchg
ja
idivl
adc
push
mov
stc
jmp
mov
sub
rcl
das
call
sub
outsb
pop
xchg
testb
out
sub
int3
movsb
xor
add
stos
pop
out
enter
and
repnz
rcrb
push
mov
push
mov
dec
aas
pop
repnz
test
mov
jmp
ss
int
mov
sbb
mov
lret
or
add
out
or
outsb
aam
ret
mov
ss
push
orb
ret
in
xor
aam
out
mov
aas
adc
dec
jle
rcl
pop
gs
leave
mulb
mov
loopne
fwait
data16
repz
in
push
insb
add
movsl
sub
fnstcw
push
jle
sbb
shll
cmp
dec
xchg
push
icebp
add
leave
nop
xor
jo
add
out
shll
out
mov
xor
fnstenv
cmpsb
sub
bound
dec
pop
or
lcall
xlat
adc
or
les
repnz
js
in
loope
addr16
mov
cmp
int3
js
out
pop
push
cwtl
add
jmp
fisubl
sub
fstpl
pop
pop
or
in
aad
sbb
mov
jnp
in
int
shlb
push
jmp
xor
cli
scas
jne
jmp
mov
test
pop
push
or
mov
mulb
imul
clc
fsub
jb
imul
push
pop
jge
cli
pop
in
addr16
lds
icebp
dec
subl
jle
mov
mov
sub
jle
dec
inc
cli
jnp
sti
cmc
sbb
pop
je
in
inc
adc
aad
jae
lret
out
das
lret
mov
sub
mov
cld
cmc
and
add
fadd
mov
adc
imul
push
or
inc
inc
cld
fdivl
sub
addr16
xor
cmp
push
adc
in
jae
adc
jmp
imul
sub
and
leave
cltd
aaa
dec
inc
or
out
push
out
data16
cmp
pop
jecxz
nop
popa
push
sbb
jo
xchg
ss
aaa
aad
inc
mov
scas
dec
push
xchg
ss
fistpl
push
sub
loope
push
jae
addb
addr16
lods
pop
push
jecxz
jo
mov
rcll
sahf
cld
jns
fwait
xchg
add
and
stos
xchg
fwait
pushf
orb
negb
out
mov
sub
pop
mov
imul
dec
lret
jmp
ja
mov
push
dec
jecxz
clc
push
sahf
inc
sub
addb
xlat
jge
sti
insl
out
ja
add
cmp
dec
pop
sbb
fistl
inc
inc
dec
ret
repnz
jo
cmp
cmpsl
jecxz
sub
cltd
and
push
movsl
fucomip
daa
fwait
jmp
shl
fcmovbe
rcr
lea
aaa
push
and
pop
loopne
mov
jno
push
out
cmp
jle
dec
sub
push
lahf
lods
pop
sub
arpl
inc
jb
xor
fdivl
push
mov
xchg
adcl
rclb
pop
mov
push
cld
imul
mov
cwtl
mov
shlb
sub
and
aaa
mov
fcompl
push
add
lret
int3
push
sub
daa
mov
push
scas
scas
sbb
xchg
mov
add
daa
ret
fnstcw
scas
lret
xchg
popf
arpl
cmc
clc
ficoml
mov
rcrb
cmp
nop
andb
arpl
adcb
dec
mov
jle
ret
lock
dec
data16
je
stc
push
call
cwtl
cmpl
sub
push
jnp
mov
inc
adc
in
fwait
pop
push
fdiv
inc
ja
stos
aaa
inc
cmpsl
add
sub
inc
push
pop
inc
lods
push
sub
xchg
test
cs
or
mov
push
adc
das
dec
cli
pop
call
sbb
add
pop
jnp
and
add
jecxz
dec
lcall
sub
mov
jl
cwtl
jbe
int
xor
sbb
fistpl
test
fildll
mov
fistpll
add
cmpb
dec
and
or
pop
pop
xchg
jns
ljmp
aaa
adc
jae,pt
lcall
nop
mov
pop
test
xchg
or
push
push
pop
outsl
mov
fnsave
je
outsb
and
add
je
cmpsl
ror
jno
fwait
lods
push
mov
xor
sbb
cltd
mov
adc
push
or
adc
insl
test
subb
repz
inc
push
lods
mov
call
test
imul
rcrb
and
daa
mov
std
or
push
and
pushl
loop
or
jge
mov
popa
pop
cmc
aam
sub
notb
std
xor
add
xor
mov
out
add
mov
repnz
mov
test
lahf
or
sub
popa
ss
ret
mov
sar
negl
jmp
jb
pushf
call
mov
xor
shr
push
push
rorl
mov
add
imul
fisttpll
test
jb
dec
daa
sti
lcall
call
int3
inc
push
pusha
sti
and
test
cwtl
dec
sbb
stos
mov
or
stos
mov
jns
aaa
sbb
cld
sub
adc
and
cmp
shll
xor
shrl
test
je
lds
sbb
xor
dec
mov
rcrb
into
and
iret
pusha
insb
xchg
push
aas
inc
mov
lcall
addb
loop
enter
setnp
out
icebp
push
xchg
jne
adc
sbb
les
pop
insb
mov
std
jno
xor
xor
stos
jbe
in
popl
mov
xchg
shll
sub
mov
ficoms
std
push
test
lret
and
xor
dec
cmp
fwait
sub
ja
cltd
pop
jbe
push
je
jb
inc
or
insl
xor
dec
adc
testl
lcall
and
arpl
mov
sub
cmc
sbb
xchg
into
call
pop
cmp
stos
addr16
subps
jmp
xchg
int3
outsl
push
testb
inc
loope
test
jmp
in
sub
jg
mov
mov
daa
mov
lret
mov
push
inc
cmp
mov
fists
push
fisttpl
or
rcrb
or
fnstcw
sbb
fwait
xor
push
rcrl
adc
jae
sub
ret
jmp
cmp
or
cmp
inc
rol
sbb
insl
add
imul
mov
and
mov
xchg
mov
lods
leave
sub
incb
cmc
pop
mov
and
xchg
add
mov
outsl
jns
jae
std
adc
xchg
imul
jnp
push
sbb
or
mov
pop
stos
sbb
cmpsb
mov
outsl
inc
push
imul
inc
xchg
mov
testl
cmpsl
sbb
rol
test
cmpsb
andb
loop
pop
imulb
mov
mov
fcmovbe
adc
ret
adc
mov
xor
jmp
lret
pop
jae
push
xor
dec
testl
adc
fs
pop
in
jb
fbld
enter
pop
mov
push
test
xchg
mov
stc
testl
pop
fisubrs
mov
jmp
aad
jmp
jmp
lcall
inc
cmc
adc
xchg
daa
daa
dec
out
fdivrs
shrb
mov
or
test
adc
lods
in
pop
je
adc
pop
insl
repnz
push
js
push
mov
mov
cld
pushf
ret
add
mov
lods
xor
mov
loop
sbb
imul
loope
pusha
fisubrs
fadds
fwait
mov
mov
neg
dec
dec
aas
fcoml
lret
xor
inc
sub
xchg
and
in
push
fsubrp
xlat
pop
les
dec
lock
ret
sarl
mov
inc
and
in
inc
test
cmp
pop
xor
xor
push
xchg
mov
push
sti
pop
stos
adc
jbe
adc
or
pop
pop
xchg
je
sahf
leave
scas
je,pt
push
jecxz
pop
xchg
mov
addr16
sub
xor
shll
jl
xchg
ret
inc
aad
add
das
jmp
xchg
jne
xchg
shlb
mov
mov
iret
push
lea
adc
sub
mov
icebp
inc
push
sub
mov
dec
xor
xchg
mov
mov
aam
dec
pushl
xchg
ja
fnsave
mov
jo
loopne
test
in
in
sete
mov
push
xchg
mov
inc
xor
adc
repz
jb
mov
sbb
xor
mov
mov
push
int3
ljmp
clc
lods
les
xchg
mov
pop
dec
cs
mov
sub
call
pop
mov
ret
pop
push
pop
imul
pop
or
push
outsl
push
sbb
test
cmpsl
push
aam
sahf
rolb
jl
out
lcall
mov
adc
in
iret
in
xchg
inc
sub
aaa
out
inc
push
hlt
and
icebp
inc
mov
mov
popf
inc
ret
rclb
mov
in
push
clc
or
stc
adc
jge
push
fidivrl
ss
cmc
cmp
mov
insb
aam
ret
sub
pop
push
push
or
xchg
dec
sti
xor
fnsave
add
cmp
sar
adc
push
lods
adc
sbb
pushf
jp
dec
es
mov
mov
ret
pop
subl
das
xor
lahf
je
or
lock
nop
imul
jmp
into
or
xorb
stc
fadds
pop
into
xor
and
insb
mov
mov
sbb
push
mov
mov
sbb
adc
sbb
jb
xor
cmp
sbbb
imul
insl
mov
js
aad
xchg
mov
ss
push
sub
sbb
fwait
mov
incl
cmp
xchg
imul
int
ret
sbbb
jnp
das
xor
fisubrs
fidivs
jge
push
sub
jmp
test
in
push
sti
clc
int
sbb
cmpsb
cmp
inc
rcll
movsb
sbb
lds
es
popa
jecxz
in
cmpsl
sub
jmp
popf
enter
pcmpeqd
mov
cmp
mov
movsl
loopne
or
adc
inc
movsb
loop,pt
adc
test
xchg
inc
pop
out
cmp
add
and
aas
jmp
stc
dec
data16
jle
mov
pop
mov
push
inc
stc
lret
sbb
std
jb
ljmp
dec
jnp
jae
into
cmp
mov
shlb
arpl
ret
add
lods
adc
sub
mov
inc
imul
or
mov
and
xor
aas
sahf
addr16
imul
push
mov
dec
je
push
mov
test
xchg
push
adc
cmp
inc
and
out
leave
pop
or
or
mov
aam
jo
mov
mull
fstps
jp
aaa
addl
fsqrt
shll
cmp
test
push
pop
xorl
pop
adc
sti
loopne
int3
insl
loope
push
sub
dec
mov
scas
ret
sub
rcll
cmpsb
fwait
test
dec
mov
mov
decb
dec
arpl
orb
inc
or
xchg
cmp
mov
mov
mov
aaa
sub
inc
xorb
and
pusha
push
jl
clc
fisttps
out
cmp
adc
jns
xor
imul
in
mov
mov
dec
inc
fucomi
fisttps
add
insb
popa
jp
jae
enter
pop
xchg
xor
add
or
mov
pop
stos
xor
movsb
lds
test
push
dec
xor
pop
jnp
or
adcb
sbb
lcall
loop
jns
lcall
sub
adc
sub
dec
andl
jno
cs
add
mov
adc
xchg
sub
repnz
ret
inc
pop
movsl
xchg
cmpsl
int
cmpsl
jno
inc
icebp
cmpsl
shlb
push
int3
mov
stc
jne
loop
inc
ret
xor
push
pop
push
aad
jbe
xchg
scas
jns
dec
lea
loopne
pop
jmp
mov
pop
sub
shlb
scas
mov
dec
cmpsl
rorb
movsb
mov
xor
xor
lds
jae
jmp
mov
pop
mov
out
mov
sti
xor
mov
or
iret
xor
dec
sbb
mov
rcl
lock
jmp
xor
dec
iret
je
sub
mov
mov
and
cmp
clc
push
or
sahf
push
cld
arpl
incl
jo
jo
je
out
mov
mul
sub
pop
addl
inc
icebp
ficoml
xor
call
xchg
aas
sbb
push
mov
testb
fsubs
cli
pop
mov
xchg
sbb
xchg
jg
add
neg
cli
mov
jnp
nop
rcrl
sbb
add
push
xor
mov
fnstsw
int3
sahf
inc
mov
dec
and
andb
stos
sahf
add
and
xchg
ficoml
adc
or
adc
in
push
mov
adc
stos
inc
adc
imul
or
jmp
hlt
mov
test
xchg
insl
cs
movsb
cltd
movsl
iret
jns
into
sub
ja
jae
mov
aad
addr16
sbb
inc
outsb
fdivs
iret
addr16
jl
dec
dec
clc
or
or
add
jge
stc
cmp
mov
aam
cwtl
pop
jno
loopne
sub
mov
or
popf
inc
int
xchg
scas
clc
sub
imul
pop
stos
mov
xor
pop
and
mov
ficomps
cmp
pop
adc
sbb
lods
fwait
mov
sub
lock
mov
cwtl
ret
mov
jge
sbb
in
ret
filds
xor
lds
aas
xchg
pop
ljmp
movsl
jbe
lods
scas
jl
outsl
xchg
xchg
test
inc
pop
push
xor
jle
in
push
xchg
mov
cmp
adc
ljmp
mov
test
call
mov
cmp
mov
mov
jle
and
mov
sub
icebp
nop
push
call
or
inc
add
mov
icebp
jge
ret
inc
push
cmpsl
inc
mov
das
push
add
stos
cs
ljmp
lods
adc
lods
clc
push
shrb
mov
fdivl
stos
stos
and
mov
les
sub
pop
or
scas
push
push
dec
stos
cli
enter
jb
jae
push
mov
sahf
scas
sbb
push
mov
fbstp
fwait
loop
adc
popf
push
xchg
loopne
add
mov
outsb
xchg
sub
adc
outsl
scas
inc
fwait
arpl
data16
or
addr16
dec
mov
jle
sbb
sub
in
add
inc
inc
xchg
cltd
cld
arpl
mov
pcmpeqb
mov
pop
cmp
out
test
mov
mov
jno
adc
jo
push
test
sub
or
in
mov
pop
jp
xchg
test
cmp
inc
xchg
popf
mov
or
jne
dec
jle
std
push
pop
negl
scas
xchg
popa
mov
fsubl
mov
push
xor
mov
mov
fsub
or
push
loope
xchg
ret
fxch
xchg
push
xlat
jbe
jmp
jl
mov
push
pop
fwait
inc
std
or
fdivrl
mov
aaa
pop
popf
mov
inc
out
stos
xchg
sti
sbb
ret
cwtl
or
test
ja
sbb
not
pop
adc
ficomps
ljmp
jbe
shll
push
inc
fdivr
sub
jno
xchg
ret
sub
add
jb
pop
dec
adc
inc
xchg
pushw
loope
pop
in
dec
push
addr16
lock
mov
and
pop
repz
mov
mov
fincstp
and
mov
push
psrad
es
push
jp
adc
jp
les
fdivp
and
sbb
push
push
bound
jns
outsl
inc
cmp
mov
testb
cmc
insb
mov
push
jo
push
mov
data16
sbb
xchg
sarl
js
repnz
jp,pt
push
mov
mov
int
enter
out
push
mov
xor
int
xor
jecxz
fs
shrl
jle
cmp
xchg
adc
in
mov
loopne
push
lods
dec
xor
add
cmp
into
das
xchg
in
mov
cmp
lock
popf
aad
call
popa
clc
and
pushf
sarl
test
mov
lods
pop
push
jg
or
clc
out
jg
adc
sub
cmc
jge
push
repnz
sub
xchg
rdtsc
xor
push
sbb
mov
sub
fistpl
xor
mov
push
pusha
hlt
lret
mov
popa
jle
aam
rorl
mov
aam
pop
lcall
lds
push
and
xchg
inc
jnp
leave
movsl
rcrl
movsl
add
scas
xor
cs
sbb
push
frstor
jle
lock
pop
jp
or
sbb
xor
sub
cmpsl
arpl
imul
cmp
inc
sbb
jmp
dec
scas
sbbl
inc
inc
adc
enter
movsl
sti
lcall
shrb
jbe
xchg
mov
lcall
in
sub
add
adc
push
sbb
mov
in
mov
jne
daa
fisttpl
jp
fstpl
insb
int3
lods
xchg
out
push
push
pop
call
cmp
inc
cmp
insl
andl
out
int
in
lea
jns
in
fsub
sbb
out
out
dec
xchg
lock
leave
je
sti
int
mov
sahf
loope
lret
cld
fcoml
mov
pop
or
push
xor
loopne
mov
xchg
or
inc
and
push
inc
fsubs
inc
neg
sbb
iret
sahf
rcr
add
mov
fs
movsl
push
clc
clc
pop
jbe
mov
test
outsb
inc
loop
mov
shl
cli
or
scas
ret
jmp
or
xlat
imul
repnz
fmulp
das
pop
test
scas
sub
mov
mov
enter
jae
mov
mulb
cmpsl
mov
xor
addr16
sbb
pop
mov
ja
das
add
outsb
leave
pusha
jecxz
jg
pop
ljmp
lret
lahf
divb
sahf
addl
and
sarb
loope
sahf
js
roll
shlb
mov
cmp
stos
fnsave
lcall
pop
xchg
addb
inc
mov
mov
or
mov
movsl
mov
xor
cltd
fcom
mov
dec
loop
xor
aaa
lret
push
nop
popf
lret
push
ficompl
mov
or
aad
cli
cmc
pop
leave
ret
sbb
pop
xchg
xchg
xor
aad
cmp
xchg
add
push
aad
cld
pop
subl
popf
fidivl
add
adc
cmp
leave
ss
mov
or
and
pop
xchg
inc
arpl
into
rcll
cs
addr16
sbb
push
cmp
fs
xor
xchg
insb
cmp
xchg
cli
cmp
or
sub
cld
mulb
rolb
mov
cmp
shl
and
mov
fwait
inc
cmpsl
arpl
je
std
aaa
cmp
or
roll
insb
imul
sub
pop
sahf
jl
push
pop
mov
lds
adc
inc
jmp
jb
xchg
or
or
xchg
dec
mov
push
xchg
pop
leave
lods
insb
movsl
rorb
and
out
test
sub
cmc
cmp
mov
ret
fistl
pop
push
xchg
shrl
insl
dec
jb
movb
in
notb
int
aas
pop
pushl
push
sbb
stos
or
sub
stos
mov
or
xlat
mov
enter
in
cmp
xor
loope
repz
lods
cmpsl
mov
or
adc
jo
sahf
loopne
repz
ret
mov
iret
mov
inc
jmp
ljmpw
mov
mov
lds
jb
jno
jp
jns
mov
shlb
adc
mov
jmp
xchg
and
arpl
lcall
mov
daa
mov
ret
pusha
and
cmpsb
sbb
adc
or
push
cld
ret
or
push
dec
sar
cmp
outsl
in
gs
fdivs
ja
in
mov
sub
fsts
jmp
and
add
or
fstpt
mov
xchg
sbb
pusha
fidivrl
loope
insb
hlt
dec
xor
push
out
mov
movsb
fmull
add
out
pop
jl
int3
xchg
mov
cmp
scas
xchg
mov
das
add
push
repz
dec
addr16
int3
aaa
xchg
sbb
jns
inc
in
mov
lcall
dec
lcall
jno
push
inc
dec
push
or
push
test
mov
out
cmp
pushf
insl
das
push
movsl
adc
pcmpgtb
mov
sbb
mov
push
icebp
sbb
dec
sub
xchg
imul
or
scas
jg
je
xchg
mov
sub
adc
push
xchg
sub
pop
mov
stos
add
inc
std
les
or
jno
xorl
test
adc
and
sbb
dec
cmp
mov
in
clts
ljmp
fwait
xchg
cmc
in
pushf
pushf
pop
xor
imul
icebp
out
sub
out
cmp
jno
cltd
xor
or
or
xor
push
inc
mov
dec
ljmp
push
sbb
daa
jno
cmp
daa
xor
jno
push
into
lcall
push
add
inc
icebp
dec
add
xchg
mov
sbb
cltd
cmp
orb
ja
loop
cmp
leave
cmp
addl
xchg
pop
lahf
sub
shll
cs
jae
dec
sbb
and
dec
mov
xchg
je
es
push
lret
adc
dec
insb
mov
imul
or
jo
sbb
sub
pushf
ljmp
mov
sahf
aas
sub
cltd
sub
lret
repz
mov
jae
dec
inc
aam
arpl
rorl
out
dec
mov
ja
cltd
pop
mov
dec
mov
js
cs
pop
xlat
xor
daa
sbb
psrlw
sub
fcoml
jg
cmpl
and
aas
es
mov
push
rol
mov
mov
dec
js
test
mov
into
push
xorb
jb
test
or
or
sahf
jge
scas
xlat
outsl
sbb
push
mov
pop
divl
sub
rolb
loope
js
mov
xchg
inc
popa
cli
aam
nop
decb
inc
pop
cmp
mov
outsb
and
sahf
xchg
jecxz
mov
rol
xchg
popa
std
cmpsl
hlt
fidivs
popl
bound
sahf
xor
clc
and
xor
mov
inc
fwait
adc
pop
pop
das
add
bound
in
xor
pop
sub
out
insl
adc
cld
test
aad
jb
js
data16
sbb
fsubrl
mov
or
mov
and
negb
xor
dec
and
stos
ja
sbb
push
adc
iret
xor
cmp
loopne
mov
pushf
xor
rcll
aad
ror
std
xlat
jmp
xchg
std
and
jl
adc
xor
cmp
fldt
cwtl
shlb
pop
stos
adc
loop
enter
push
add
test
out
sub
into
dec
jae
mov
xchg
add
js
pop
mov
hlt
push
xchg
sub
and
clc
movsb
inc
fistps
add
in
add
test
jbe
sub
sub
popf
iret
fwait
repz
pop
out
ss
in
xor
mov
mov
in
test
into
or
sub
lock
sti
call
icebp
mov
mov
xlat
and
add
push
mov
cltd
push
repz
or
cmp
push
xchg
mov
and
dec
sub
repz
sub
sub
loopne
adc
ss
and
sbb
mov
pop
mov
fdivrs
in
push
mov
pop
loope
or
enterw
pop
jecxz
push
xchg
leave
or
xor
jbe
cwtl
roll
loopne
xchg
outsl
clc
incb
and
pop
jns
movsb
shrl
cmpsl
push
push
mov
xor
sbb
out
in
daa
jg
jmp
inc
and
daa
add
sahf
cwtl
inc
iret
cli
scas
sbb
cmpsb
ret
dec
jno
cmp
jno
stc
pop
stos
mov
in
out
cld
stos
call
in
sbb
cmp
inc
mov
es
jo
inc
push
jno
cmpsl
lea
cmp
mov
push
and
push
xchg
xchg
sbb
leave
xchg
push
sub
pop
and
jne
xchg
incb
cmp
fwait
xlat
arpl
pop
insl
xor
bound
test
and
imul
jns
insb
hlt
lahf
insb
adc
push
sbb
add
sub
cmp
bound
dec
adc
stos
stos
jl
jp
pop
in
dec
sbb
mov
push
hlt
mov
xlat
add
in
xchg
lcall
ja
mov
xchg
jns
inc
or
lahf
sbb
dec
add
adc
xchg
testb
cmpb
mulb
inc
cli
in
inc
lea
mov
mov
cmp
ljmp
scas
ret
mov
pop
nop
loopne
inc
lock
arpl
pusha
and
dec
imul
scas
aaa
lods
mov
jbe
shlb
repnz
fs
aad
dec
mull
fnstcw
daa
imul
pop
inc
gs
popf
mov
int3
add
fsubrp
push
ret
ficoml
pop
out
in
lea
dec
clc
mov
cmp
sbb
cmc
ret
hlt
xchg
and
lea
fisubs
notb
movsb
clc
and
add
stos
hlt
subb
jno
pop
jecxz
hlt
jmp
inc
roll
idivl
popl
repz
jl
add
inc
stos
int
in
outsb
ljmp
mov
and
push
mov
jg
mov
stos
push
mov
shlb
std
out
int3
cmp
xor
incb
movsb
stos
icebp
sti
inc
fisubs
jae
inc
or
jge
push
arpl
pop
push
pop
ljmp
test
out
int
lea
cmp
ret
aam
push
add
xchg
lods
fcoml
repz
sti
repnz
adc
push
fs
sub
sbb
lea
ss
xchg
ret
pop
imul
jle
inc
roll
dec
cmp
in
pop
xor
enter
sbb
insb
mov
movsb
pop
or
in
les
inc
ret
idivb
adc
lods
sub
jl
rcl
imul
mov
mov
or
mov
lret
hlt
mov
mov
in
or
sbb
xchg
enter
xchg
mov
and
icebp
pop
and
ret
xchg
push
cmp
cmp
sahf
ja
cmp
inc
bound
or
xchg
sar
mov
mov
push
pop
ljmp
mov
cltd
push
or
sbb
pop
jo
call
fimull
push
lea
sub
push
jp
add
mov
jle
sub
inc
xlat
mov
mov
das
iret
cmp
xor
mov
push
jne
call
jno
bnd
enter
movsl
popf
int
inc
lret
inc
ficoml
add
into
js
pop
insb
dec
out
out
and
fstl
repz
xchg
push
aaa
fs
out
addb
outsl
push
sub
or
loope
movsb
movsl
push
outsb
push
cmp
inc
dec
push
sbb
mov
loopne
xor
and
xorl
sub
loopne
loopne
jnp
adcl
pop
adc
insl
enter
jg
out
xor
mov
push
pop
or
add
arpl
stos
mov
lods
mov
dec
or
lcall
mov
js
push
xchg
rclb
icebp
xor
faddl
jp
cmp
pop
and
add
outsl
mov
cmpsb
or
pop
add
inc
cmp
jl
into
mov
mov
adc
xor
mov
sbb
ret
cmp
xor
pushl
mov
nop
rcrb
cs
mov
sub
fldcw
mov
xchg
cmp
rcll
dec
and
sub
pusha
scas
rorb
inc
xchg
mov
or
out
mov
in
mov
movsb
rcl
dec
lret
push
mov
aad
mov
and
jbe
std
mov
mov
scas
test
aad
and
xchg
out
movsl
xor
jns
sbb
ljmp
daa
je
jns
add
stos
sub
mov
movl
mov
dec
loop
mov
test
push
lret
or
mov
sbb
stos
xchg
imul
inc
imul
lock
sub
gs
rcrb
hlt
icebp
fimull
jo
cmp
inc
ss
mov
cmp
and
aas
in
test
mov
adc
mov
leave
pop
ret
aam
int3
pusha
adc
fstl
jns
and
mov
lods
je
sbb
je
mov
repz
imul
cltd
jp
xor
jno
push
jecxz
inc
dec
fcmovnbe
sub
sub
das
lahf
xchg
lods
xor
push
inc
jmp
add
subl
inc
popf
ret
testb
sub
cs
jle
dec
cmp
push
pop
imul
jge
fld1
rolb
bound
rcrl
xor
inc
inc
mov
fcmovu
push
sub
iret
inc
mov
call
test
push
mulb
mov
xchg
mov
sbbl
std
or
inc
inc
sub
add
subb
ret
rorl
repz
and
pop
mov
pop
int
push
aad
add
dec
shlb
leave
cli
dec
jno
dec
mov
or
dec
and
arpl
fsubl
mov
jp
loopne
test
das
push
inc
cld
adc
popf
rcl
aas
jle
adc
jp
pop
lds
dec
fmul
lods
fsts
mov
stc
out
out
imul
dec
jne
imul
mov
mov
push
dec
pop
cmp
mov
aad
xchg
xchg
pushf
xchg
pop
inc
or
imul
add
out
pop
jg
mov
lcall
push
pop
sbb
mov
xor
pop
sbb
hlt
fisubrs
cmp
mov
pushf
fs
mov
insb
jo
ds
inc
fbstp
jecxz
mov
mov
pop
inc
loopne
pop
mov
jl
pop
aam
into
or
fistpl
pop
mov
mov
adc
call
dec
aas
or
dec
sub
mov
mov
and
mov
inc
mov
fwait
clc
dec
sbb
xor
cltd
add
mov
adc
dec
insb
mov
jns
or
jg
push
or
scas
dec
pause
or
into
arpl
outsb
in
sub
lcall
je
outsb
aam
inc
or
sbb
and
std
cmp
jp
inc
fbstp
jl
pop
call
addr16
dec
cmp
lea
or
nop
aaa
sbb
enter
mov
fsubs
fdivrl
mov
fcompl
pop
ja
pop
stos
aad
jge
cwtl
xchg
dec
push
scas
push
arpl
f2xm1
pop
sarl
std
gs
test
and
add
call
push
mov
mov
fwait
xchg
cld
push
aaa
je
sarb
push
or
ret
adc
jne
inc
dec
fldcw
loopne
cmc
inc
cltd
xor
xchg
cmp
int
icebp
movsl
stos
sub
adc
inc
or
jne
fimuls
jmp
mov
int
add
ret
in
aad
enter
das
in
sbb
cmp
push
loopne
xchg
lods
push
fmul
mov
xchg
scas
xor
jbe
lret
and
xlat
cltd
cmc
fisttpl
sti
jmp
nop
sahf
fadd
sbb
push
mov
insb
stos
push
and
mov
sbb
ret
sbbb
sub
js
sub
repz
les
or
inc
push
xchg
scas
shrb
sbb
jae
test
repnz
es
inc
lods
aad
add
mov
pop
xchg
mov
mov
mov
pop
and
pop
fdivl
or
xchg
mov
jmp
clc
pop
pop
test
loop
cmc
into
dec
dec
cs
and
stos
or
rcrb
jl
scas
pop
sarb
jo
mov
jae
addr16
sub
dec
pop
enter
dec
xchg
or
insl
pop
cmp
int
cmp
das
mov
adc
ss
jg
dec
je
cmp
shlb
fcomps
xchg
ljmp
push
int
jne
cmp
mov
popa
sub
sbb
leave
in
shlb
xchg
xchg
lret
xor
inc
cmp
rcl
shll
sub
bound
cwtl
repz
fisubrs
dec
jecxz
fld
in
pop
pop
call
into
repnz
xchg
enter
jae
jl
add
inc
or
xchg
mov
stc
popa
adc
into
insl
dec
pop
int
test
push
jb
nop
loope
cmp
shll
sub
xchg
dec
sarl
loope
adc
jbe
ret
fmuls
test
cwtl
ljmp
pop
shll
xchg
xor
adc
or
xor
bound
add
push
adc
faddl
fbld
sub
or
add
xor
mov
movsb
jb
mov
jns
addl
lret
je
js
dec
into
xor
into
cmp
divl
ret
jmp
and
add
xor
test
mov
pop
mov
mov
ja
test
push
sub
fisttpl
mov
imul
ret
cltd
xor
shrl
roll
and
popf
mov
leave
int
cmpl
cmpsl
out
push
popa
and
inc
shlb
cmpsb
ljmp
adc
orb
jge
lea
add
xor
xchg
xchg
adc
das
lret
clc
and
inc
adc
sti
cmp
jecxz
mov
xor
adcb
sbb
or
stc
adc
jnp
mov
inc
or
ja
jp
scas
cmp
lret
scas
push
push
push
shlw
imul
mov
std
ljmp
dec
mull
call
sbb
hlt
adc
mov
jns
nop
adc
test
loope,pn
mov
cmp
jb
lods
sub
lcall
movsb
jmp
add
dec
xor
inc
ds
cmpsl
lahf
inc
jp
xchg
stos
andl
sti
mov
fcomip
movsb
cwtl
pop
add
arpl
outsl
movsb
cmp
and
jmp
gs
aas
push
mov
mov
cmpsl
mov
sarb
adc
cmp
aaa
xchg
xor
mov
aas
mov
fistpll
mov
sub
or
push
fistps
cld
movsb
bts
dec
andb
hlt
pop
cltd
and
call
daa
mov
lea
fs
cmp
nop
ret
lods
adc
or
sub
ds
cmp
fsubs
enter
ja
lock
push
jge
pop
mov
addb
aas
pusha
out
push
pop
ret
jge
push
add
dec
out
packuswb
add
mov
lds
loopne
xor
imul
pop
sti
sbbl
sub
leave
ret
xor
cmpsl
pop
xor
push
lods
aam
loopne
sti
lahf
and
fwait
push
pop
sbb
data16
pop
jecxz
incb
jg
push
in
ret
outsl
shr
or
ljmp
push
scas
cmp
movsl
sub
fs
cwtl
push
add
ja
fs
cwtl
shlb
push
loop
stc
bound
ja
mov
mov
push
imul
jl
jns
out
dec
add
gs
int
cwtl
movsl
jle
lock
movsbl
mov
mov
xchg
add
xchg
insb
mov
test
xlat
into
sarl
adc
mov
inc
rolb
lret
pop
insl
scas
shlb
xchg
xor
subl
push
adc
in
sub
push
sbb
mov
cli
push
movsl
outsl
imul
pop
mov
fsubl
test
fldt
and
mov
pop
aas
cmp
pop
jne
pop
test
sub
sub
add
lahf
ja,pn
xor
lods
push
shl
in
mov
pushf
in
jbe
ret
movsb
add
subl
cltd
mov
jae
lea
sub
roll
fisubs
xchg
xchg
sub
mov
mov
je
shlb
push
addr16
jae
fs
das
mov
adc
daa
into
xchg
fwait
jae
sbb
sub
clc
add
sahf
pop
dec
sahf
cmc
das
push
in
int
xor
jp
pop
and
xor
clc
add
push
pop
sub
xor
inc
pcmpeqd
fwait
add
sub
mov
icebp
add
xlat
xchg
mov
dec
mov
inc
mov
outsb
cmp
push
mov
cli
dec
mov
pop
xor
jo
divb
fisubrs
and
inc
or
loope
icebp
jns
cmp
or
scas
ja
jl
rclb
jg
aam
and
sbb
stos
pop
lods
fidivl
add
cwtl
iret
jp
addr16
lcall
or
inc
ds
inc
stos
or
push
popl
cld
adc
fldl
bound
dec
sub
test
divl
iret
lods
mov
push
popa
push
psubw
push
insl
push
mov
mov
pop
mov
lahf
roll
xchg
sahf
mov
adc
popf
in
inc
dec
int
mov
add
mov
jg
jnp
or
jle
mov
out
mov
adc
sub
in
or
scas
lret
adc
icebp
out
outsl
daa
call
xor
adc
push
faddl
rcrb
xlat
xchg
flds
and
sub
mov
xchg
or
je
lods
mov
adc
xchg
cmp
mov
test
push
mov
mov
and
mov
insb
mov
aam
rcrb
shrl
shl
leave
xor
cli
push
cmpsl
push
xchg
lods
ret
lea
ret
cmp
adc
pushf
pop
xlat
push
sbb
dec
lock
mov
push
or
push
imul
sar
fwait
dec
je
sub
arpl
je
inc
add
sub
xchg
pop
ret
aaa
push
or
mov
mov
sbbb
jp
cld
dec
jmp
xor
push
scas
sub
scas
hlt
push
mov
aad
xor
movsb
daa
xor
aad
addr16
fcmovne
hlt
mov
or
les
dec
shl
dec
loopne
fisubs
mov
aas
xchg
sbb
lcall
jo
ja
mov
cld
sbb
cmp
movb
mov
mov
lods
mov
mov
mov
cli
pop
mov
pcmpeqd
lret
adcl
cmovno
dec
or
in
jns
ja
xor
mov
mov
test
jne
loope
shr
std
arpl
mov
inc
mov
lods
push
bnd
in
divb
enter
xchg
fidivl
testb
push
mov
and
hlt
xor
inc
jl
sub
pop
pop
dec
pop
jne
push
push
dec
jmp
mov
cwtl
cs
fsubp
jmp
dec
xchg
cmpl
mov
sarb
add
inc
outsb
jle
pop
pushf
mov
mov
sahf
loope
cmp
fwait
popa
inc
jle
addr16
xchg
mov
push
pop
lods
leave
jno
jle
mov
push
mov
sbbl
mov
add
or
pop
xor
cmpsl
or
mov
inc
stc
xor
fmul
lds
lahf
push
inc
iret
jg
push
sub
jo
aas
stos
adc
test
scas
jmp
sahf
push
imul
sub
inc
jns
pop
lret
or
ret
das
sub
jbe
popa
popa
mov
sbb
jbe
decl
jns
and
cli
push
mov
jnp
xchg
rcrl
dec
mov
sub
mov
pop
loope
stc
movsb
lahf
cmp
and
cli
inc
sti
sub
movsl
in
jle
jne
call
jmp
loopne
mov
out
lret
cmp
std
popf
ret
ds
xchg
test
and
mov
mov
mov
dec
adc
mov
pop
movsl
inc
sahf
shr
mov
cmp
cs
addr16
xchg
pop
push
adc
or
scas
add
inc
shrb
popf
push
mov
cmpsl
popf
enter
nop
imul
jo
cmp
icebp
push
repnz
lret
dec
stos
push
jg
dec
ret
movsl
mov
sub
ds
dec
cmpsl
popf
mov
push
inc
add
pop
fcompl
sub
dec
sbb
xchg
sbb
loop
enter
mov
rorb
leave
sbb
and
pop
lret
sahf
sub
dec
test
ficoms
inc
mov
fistpl
popa
test
ret
cmp
gs
shll
push
icebp
cmc
push
xor
aas
insb
mov
mov
leave
sub
jo
add
sbb
mov
bound
loop
stos
adc
adc
fldl
fistl
xchg
ss
lret
jge
test
js
cld
and
cli
sub
jae
out
jg
jne
xchg
pop
int3
push
mov
je
and
dec
shr
cwtl
sub
jb
cld
lret
pop
pop
jecxz
and
mov
outsb
add
inc
mov
ret
cmp
push
test
jbe
sub
movsl
es
shll
in
adc
cmp
jb
pop
dec
mov
popa
sbb
xorb
adc
push
je
sub
and
push
mov
stos
dec
fistpll
sbb
and
mov
cmpxchg
out
clc
in
aas
adc
pusha
mov
nop
stos
cmp
in
lock
les
int3
jg
mov
sbb
sub
arpl
insl
push
push
cmp
cmpsb
test
inc
fldcw
lcall
dec
mov
fmul
iret
pushf
cmp
mov
ljmp
jp
ret
xor
and
fnstenv
sarb
hlt
xchg
outsl
clc
push
stos
jne
mov
adc
xor
jecxz
out
call
mov
push
adc
fwait
xor
inc
aaa
rcrb
scas
xor
xor
popf
leave
pop
pop
xchg
or
aad
mov
fimuls
mov
add
dec
inc
sub
and
in
pop
popl
imul
inc
and
adc
push
jmp
out
imulb
nop
inc
repz
inc
in
cli
mov
test
cli
xor
icebp
pop
popa
xchg
xchg
icebp
imul
lcall
cwtl
dec
xor
and
inc
ja
mov
dec
shrb
xchg
cvtpi2ps
cmp
icebp
and
push
insb
dec
xor
sbb
lds
inc
int3
daa
xchg
add
pop
mov
inc
push
adc
scas
xchg
sbb
xchg
sub
or
mov
nop
push
shrl
mov
es
repz
and
pop
add
mov
adc
sti
jp
mov
pop
or
sub
aad
mov
js
cmp
pop
push
and
xlat
lret
mov
adc
cmp
and
clc
jmp
cmc
xor
sbb
pushf
nop
in
cmp
xor
mov
stos
fs
sbbl
jo
dec
pop
out
xchg
xorb
call
mov
insl
push
mov
cmc
jle
inc
cmpsl
pop
jo
int3
jl
add
cmp
sub
shrb
dec
rep
or
in
jle
xchg
je
xor
add
out
mov
dec
adc
jmp
xchg
testl
mov
dec
xchg
jl
enter
stos
mov
pop
mov
je
repz
inc
cli
nop
dec
jbe
outsl
cmp
sbbl
lcall
mov
jl
inc
fisubl
aad
fstp
test
xchg
add
mov
ret
push
push
cmc
stos
imul
je
add
mov
sahf
mov
shrb
inc
fmulp
sub
push
mov
mov
cwtl
fstl
push
mov
daa
sbb
cvtdq2ps
sub
aas
mov
imul
movsl
cmp
popl
lods
xor
cs
subl
out
movsb
lret
xchg
leave
xchg
aad
movsl
sub
mov
cmp
inc
test
movsl
test
sarl
test
sbb
dec
lock
xchg
pop
jae
pop
add
test
adc
shlb
mov
jg
out
out
in
mov
push
jl
into
cld
inc
pop
roll
lret
into
cmp
jb
mov
lods
jb
lods
loope
push
xor
mov
push
mov
aad
jge
or
pop
mov
dec
jmp
pop
je
ja
inc
push
test
sub
decb
sub
pop
int
mov
mov
jp
xor
ror
mov
xchg
in
popf
mov
lock
mov
rolb
imul
jnp
pop
mov
icebp
test
mov
xor
pusha
add
cmp
mov
mov
xor
lds
loope
push
jns
inc
cld
andb
dec
cs
or
and
jne
sarb
push
jb
sbb
jecxz
push
pusha
addr16
inc
gs
dec
xor
mov
adc
mov
dec
aaa
lcall
out
scas
sbb
sbb
aam
mov
dec
pop
testb
push
push
and
lock
push
mov
fiaddl
xor
mov
out
mov
sbb
in
sahf
xlat
out
adc
sbb
mov
or
cmp
cmp
enter
sbb
or
gs
sbb
out
and
or
xlat
inc
aaa
mov
dec
xor
sbb
das
outsb
push
adc
std
sub
sbb
adc
xlat
xchg
outsb
fstpl
lods
iret
or
fidivs
mov
pop
rcr
mov
imul
sub
or
lret
inc
les
ret
cmpsb
push
pop
mov
cmp
jns
in
jns
xor
adc
pusha
and
adc
test
adc
sbb
adc
xlat
dec
sub
loop
sub
daa
shl
xchg
popf
call
test
cmp
sub
ljmp
fiadds
dec
jl
jmp
xor
mov
aad
pop
adc
cwtl
jl
ljmp
cmc
pop
cmc
cli
fisubrs
jne
mov
fimull
or
adc
cmp
push
stc
and
shr
fsubp
sbb
cmpsl
mov
sbb
dec
lret
sti
pop
and
rorl
sbb
adc
ds
inc
sbb
xchg
loop
cmp
or
push
ja
pusha
dec
rclb
ret
mov
jle
sbbb
add
mov
jmp
lods
ja
repnz
sub
mov
cmp
pop
fistpll
or
aas
decb
repz
mov
jl
push
test
push
xchg
mov
inc
fwait
mov
add
popa
lcall
incb
sahf
cltd
push
sub
xchg
mov
loopne
fs
adc
test
popa
movsl
cmp
pop
imul
dec
jp
xor
das
ja
add
mov
popf
ja
rclb
out
dec
lock
out
repz
jl
rolb
rclb
sbb
ljmp
lea
add
pusha
int
inc
mov
int3
scas
gs
push
or
jl
mov
mov
js
andb
rcr
jne
xchg
xchg
out
cmp
addps
and
shll
repz
adc
mov
adc
movsb
lahf
lds
adc
inc
inc
es
jmp
pinsrw
fwait
and
mov
jb
cmp
cld
adc
mov
add
jmp
jp
loope
jmp
pop
pop
out
push
rorl
hlt
movsb
roll
bound
pop
push
xor
dec
out
pusha
lods
cmp
pop
daa
test
test
aam
out
pop
sub
mov
xchg
loope
sub
push
and
cmpsb
rcrb
ds
arpl
popf
mov
lods
cmpsb
push
dec
cmp
popa
aaa
xor
push
push
icebp
rcll
les
sbb
xchg
pop
xchg
invd
pop
fstl
in
vmovsd
iret
jg
mov
cmp
jne
bound
and
das
dec
dec
repz
cltd
push
pop
dec
lds
mov
cli
jg
ss
or
sub
cmpsb
and
outsb
jb
adc
nop
or
lds
mov
repnz
test
jl
pop
and
dec
aaa
sbb
dec
fadd
xor
or
xor
movsb
lret
cwtl
xlat
sbb
cmp
stos
fildll
xchg
dec
mov
cmc
lea
or
push
xchg
jnp
bound
jno
xor
cltd
xor
pop
sbb
std
sbb
addr16
mov
enter
cmp
or
negl
daa
cmp
xchg
outsb
mov
xchg
push
adc
aad
test
sbb
andl
popa
mov
xor
add
in
adc
xchg
mov
mov
dec
mov
in
hlt
das
adc
call
mov
ficoml
in
push
jp
addb
popf
cmp
lret
cmpb
ficompl
lods
sbb
and
adc
movsl
xchg
mov
sbb
cmpsl
sti
jmp
sbb
jne
jp
enter
jl
or
jo
aas
js
cmp
sbb
sahf
cmp
xchg
pop
not
lds
fsubs
pop
add
push
int
ja
jae
hlt
lock
jns
pushf
sbb
add
jne
icebp
push
vmptrld
in
and
fsubp
nop
push
and
fs
cli
mov
inc
fnstenv
adc
pop
xor
ret
xor
mov
mov
dec
mov
dec
repz
xchg
cmp
pushf
adc
push
jl
mov
jl
and
pop
push
xchg
jnp
out
addr16
call
push
ljmp
or
sbb
les
jnp
shl
or
xor
push
mov
aad
jg
inc
aas
jnp
dec
in
pop
dec
dec
jmp
sub
cmpl
fcmovbe
std
popa
xor
inc
inc
loop
cmpsl
in
pop
in
aaa
fnstsw
stos
add
lret
stc
mov
stos
test
out
push
cli
dec
mov
lret
and
dec
inc
mov
xchg
sbb
je
stos
xlat
popa
jno
out
xchg
ljmp
pop
ss
out
inc
mov
xor
test
ja
adc
data16
loopne
out
int
fcoms
sahf
xor
data16
jb
jb
js
and
inc
cmp
push
pop
lods
out
pop
add
push
mov
dec
xor
lret
inc
scas
cli
hlt
mov
push
or
dec
adc
and
cmovnp
cmc
aaa
bnd
xor
xchg
pop
xchg
mov
fidivrs
xlat
lds
rcll
adc
mov
add
pop
cwtl
movsl
je
negl
dec
mov
mov
ucomiss
push
stos
fs
sbb
aaa
loope
mov
dec
mov
in
cmp
fimuls
popw
dec
pop
add
cmp
lahf
arpl
ljmp
xchg
mov
push
cmp
jae
icebp
sbb
in
cmpsb
cmp
jecxz
jmp
adc
sub
sub
mov
ret
pop
sub
sarb
scas
aad
scas
movsb
sbb
jns
repz
mov
ret
rcrb
out
pusha
sti
pop
or
sti
je
pop
sbb
int
jmp
mov
inc
mov
lock
orb
mov
cmp
push
mov
lods
adc
mov
mov
call
push
popa
movsl
xor
pop
iret
pop
or
jbe
aas
adc
into
add
ret
je
mov
mov
call
jae,pn
mov
pop
outsl
psrad
mov
jb
and
lods
cmp
pop
sbb
sahf
jg
loopne
lret
repnz
xor
rolb
pop
jnp
mov
movsb
icebp
dec
cmpsb
loopne
into
xor
jbe
or
lods
rcr
lock
mov
xchg
xorl
fwait
popa
mov
sti
xor
push
jl
sub
mov
add
cltd
sub
fldl
leave
sub
in
and
fadds
jb
shlb
pop
cmpxchg
movsb
pop
dec
test
stos
dec
mov
out
inc
sbb
xorb
mov
dec
or
testl
fiaddl
and
jl
ja
arpl
fimuls
jmp
inc
pushf
fcompl
adc
gs
jo
mov
pop
sarl
sub
mov
and
sbb
pop
and
sbb
ljmp
imul
in
adc
aad
out
ficoml
push
adc
mov
lret
mov
jno
mov
sub
jmp
add
dec
mov
pop
arpl
lret
nop
mov
testl
push
stos
popa
mov
or
stc
pop
pop
pop
lds
sbbl
cwtl
xchg
sti
int3
adc
std
push
fs
jecxz
mov
xchg
adc
shlb
sbb
cmp
inc
insb
xor
mov
lret
ja
das
icebp
lahf
fadd
rorl
in
add
or
sub
sbb
pop
push
push
xchg
pusha
test
jmp
adc
dec
mov
stos
ljmp
scas
sub
adcb
and
adc
mov
insl
shlb
jl
cmp
js
mov
sub
xchg
cmp
je
dec
mov
mov
inc
push
xchg
xchg
mov
and
test
mov
test
cmpl
xor
mov
adc
push
out
out
enter
fs
scas
and
repz
jge
or
out
inc
shll
push
sar
cmp
or
hlt
sbb
pop
fisttpll
mov
roll
dec
inc
cmc
int3
fidivrs
sarl
movsl
xchg
dec
popa
shlb
add
lds
ja
out
jle
arpl
or
dec
mov
dec
inc
repnz
in
incb
hlt
or
push
push
arpl
enter
roll
jge
ds
cli
add
fsts
addr16
sti
movsl
daa
stc
mov
outsl
nop
pop
mov
mov
enter
sbb
aas
sub
push
xchg
add
fs
xor
dec
mov
pusha
sahf
sub
push
cmp
aaa
mov
test
push
or
mov
push
imul
cld
sbb
add
or
xor
into
sbb
cmpsb
mov
sub
or
add
add
mov
adc
testl
fwait
insl
jle
jp
outsb
dec
mov
sbb
mov
out
rorl
push
and
popa
inc
popf
data16
pop
popf
push
xchg
adc
fisubs
jns
pop
pop
inc
jae
leave
cmp
sti
rcrl
idiv
je
jb
dec
ds
lcall
ret
das
inc
xor
loopne
mov
jmp
lcall
jp
lahf
lods
dec
fistl
xor
stc
das
and
mov
push
adc
dec
mov
ret
xchg
mov
dec
cmpsb
lret
pop
add
or
cs
pop
xchg
lret
orl
leave
mov
mov
in
push
fildl
cmp
pop
inc
fwait
add
xchg
test
fisttpl
sbb
pop
push
inc
idivl
sarb
sbb
into
js
mov
push
rolb
clc
or
frstor
sarl
in
mov
fmuls
js
decb
decb
in
addr16
xor
jne
out
fs
aas
shll
xchg
xor
dec
inc
leave
imul
stos
mov
data16
cmp
nop
rclb
sar
pop
and
repnz
subl
jmp
loopne
push
test
jl
in
hlt
shrb
push
lods
mov
inc
jno
cld
icebp
test
pop
popf
push
cwtl
jecxz
pop
sbb
movsb
test
cli
push
inc
pop
xchg
ds
xchg
jb
stc
and
popa
mov
sahf
push
xchg
jno
mov
mov
into
mov
nop
sbb
loope
addr16
adc
jle
jb
pop
push
pop
test
mov
dec
dec
mov
loope,pn
in
int3
inc
pop
or
xor
mov
insl
stos
jl
aaa
sub
negl
push
fstp
push
loope,pt
test
mov
daa
arpl
fs
xchg
pop
fwait
cmp
push
loope
inc
push
sbb
jle
sbb
data16
or
int
ss
js
inc
cld
adc
stc
pusha
scas
mov
adc
mov
out
insl
les
lds
sbb
push
fwait
mov
stos
out
mov
mov
add
cmp
js
jne
mov
test
outsb
repz
mov
xchg
sub
repnz
outsb
sahf
out
loop
sub
into
inc
fdivs
and
mov
jmp
xchg
cltd
repz
mov
insb
sbb
out
push
test
jno
dec
rcrl
mov
push
arpl
mov
xor
sub
ret
xchg
ds
xor
inc
adc
rclb
mov
inc
adcl
xchg
sub
cmp
adc
test
dec
xchg
std
jo
and
addl
push
mov
push
mov
add
sar
lahf
orl
and
test
andl
out
sbb
lret
push
test
jno
mov
andl
mov
sbb
adc
jae
dec
fldt
sub
sub
jge
jns
jle
xchg
test
add
sub
cs
insl
ljmp
pushf
dec
lcall
pop
testl
fs
lds
scas
add
xchg
in
and
xor
pop
lods
mov
loopne
or
mov
stc
xchg
jge
xchg
xchg
push
cltd
cs
jno
mov
sti
or
insb
enter
imul
dec
scas
hlt
popf
sbb
in
std
and
sbb
aad
sarl
cwtl
loop
daa
or
imul
movsb
mov
push
lcall
frstor
mov
pop
push
mov
pop
in
mov
push
lret
and
insl
aad
dec
jle
insb
and
xchg
outsl
mov
mov
arpl
add
bound
mov
test
ret
cmp
insl
enter
xchg
xchg
adc
rcr
and
add
mov
jae
inc
sub
cmp
adc
xchg
je
push
popa
mov
add
jecxz
shll
cmc
arpl
andl
xor
pop
cmp
push
popf
cmp
sbb
xchg
shll
push
pop
bound
rol
call
insl
mov
dec
or
jo
shlb
mov
sti
xor
addr16
or
movsb
cltd
cwtl
mov
dec
je
or
rcl
mov
call
or
bound
sbb
pmulhw
push
sbb
xchg
repz
inc
xchg
lods
test
test
clc
inc
adc
add
cmc
pop
imul
leave
cmc
dec
pop
fcmovnbe
frstor
mov
popf
mov
mov
inc
pop
cmpsb
mov
gs
out
adc
adc
sub
mov
jg
and
sbb
mov
imul
mov
loopne
leave
out
shll
cmpb
mov
add
mov
dec
lods
pop
lret
jo
and
test
or
sub
popf
aaa
popf
orb
cmc
ja
rol
inc
xor
fcmovne
rclb
adc
sub
xor
push
stos
repnz
sti
mov
jb
inc
add
jl
push
daa
add
cmp
jge
faddl
lcall
lret
jecxz
add
insl
sub
dec
popf
xchg
popf
sbb
cmpsl
xor
adc
sar
fsub
stos
inc
jns
sarb
xor
and
jmp
mov
outsb
in
push
add
addl
sub
push
jge
xor
cltd
roll
hlt
cwtl
in
das
or
or
adc
sub
shll
sarb
aad
add
iret
adc
arpl
cmpsb
cmp
xchg
stos
lret
jo
jle
out
add
popl
cmp
sub
mov
scas
cmp
inc
xor
sbb
jne
mov
addr16
sbb
das
movsb
mov
enter
addl
pusha
scas
push
pop
and
jecxz
imul
push
sub
fs
sbb
test
sahf
jns
xchg
jo
mov
xor
sbb
add
stos
dec
jbe
movsl
jle
and
mov
inc
outsb
mov
inc
mov
pushf
cli
or
pop
push
pop
jnp
xor
repnz
es
sbb
mov
xor
add
cmpsl
das
mov
sub
jb
ljmp
pop
les
mov
sbb
les
stos
or
in
sbb
aam
pop
add
subb
mov
mov
inc
pushf
test
xchg
or
dec
fisttpll
or
repnz
mov
jne
jae
push
add
out
in
sbbb
inc
dec
ja
inc
jbe
xor
jmp
jbe
les
add
and
and
pop
inc
repz
aas
xor
lret
out
sahf
test
sbb
das
es
jne
std
add
jmp
leave
inc
jno
and
push
dec
incb
cltd
mov
pop
lret
fisttpll
aam
xchg
jnp
in
add
insl
ret
in
dec
mov
cltd
aaa
mov
push
dec
xchg
jge
mov
mov
adc
fdivs
jl
lods
inc
sub
das
xor
arpl
fdiv
pop
pop
inc
popa
mov
lds
pop
movsb
cmpsb
sub
xchg
xor
adc
mov
xor
ss
add
lea
iret
push
sar
stos
mov
ds
lret
sub
rclb
fwait
int3
dec
cmp
sub
mov
rcr
data16
roll
mov
push
xchg
les
push
cmp
jnp
dec
sub
mov
es
not
mov
into
cmp
scas
rclb
jb
pop
movsl
inc
aam
dec
roll
xchg
push
mov
fs
pop
jl
xchg
in
sbb
jno
jne
sub
test
mov
data16
out
pop
lcall
outsb
arpl
sub
pop
popf
test
or
adcl
cmc
dec
ljmp
xchg
pop
lret
xchg
jbe
sub
and
insl
fisubrl
cmpsl
pop
mov
xlat
mov
es
xor
dec
lahf
add
outsl
rorl
lods
popf
pop
ds
push
or
sub
add
loope
jns
rep
push
loopne
cwtl
pop
sub
jle
mov
sbb
or
push
ja
inc
sub
test
sbb
idivb
loopne
xchg
lods
jno
int
jns
or
jge
cmpsl
jae
mull
fs
xchg
mov
test
xchg
pusha
pop
nop
sti
adc
roll
or
notb
push
cmp
pop
xchg
adc
inc
xchg
faddp
mov
pop
dec
pop
stos
fmuls
inc
and
in
aas
call
push
mov
add
cli
xchg
mov
add
jno
sbb
adc
dec
fs
pop
or
out
push
jge
orl
loopne
test
out
cmc
or
or
sbb
mov
repz
mov
movsb
call
inc
dec
or
xlat
or
pop
scas
mov
repz
out
cmp
lds
xor
out
mov
xchg
lea
push
aad
enter
mov
aam
mov
dec
sarb
mov
dec
jo
mov
jecxz
int
mov
add
mov
out
mov
or
pop
cmp
lds
inc
ljmp
cmpsl
add
repnz
sub
enter
stos
dec
test
push
mov
std
inc
ss
in
mov
js
int3
dec
pop
fisubl
sub
adc
push
pushf
fldz
jmp
push
ret
call
sbb
and
push
add
test
in
shr
xchg
das
das
lcall
mov
cmp
nop
lahf
push
and
and
lock
jp
adc
out
mov
dec
enter
jns
mov
rcll
imul
les
stc
loopne
xchg
imulb
dec
mov
in
int3
mul
mov
mov
pop
inc
movsl
xor
push
pop
gs
out
pop
mov
xchg
subl
push
or
mov
xor
sbbl
push
cld
test
push
aaa
out
lret
jnp
lock
stc
xor
push
call
and
arpl
mov
test
in
add
lds
paddq
xchg
aam
fsubp
cmc
mov
jle
jns
inc
jae
lret
daa
jae
insb
adc
or
in
sbb
mov
cmp
jnp
mov
jnp
lds
sub
mov
pop
sub
bound
lret
jns
lods
loop
adc
pop
fists
dec
ljmp
push
outsl
push
push
mov
jno
fmul
insl
mov
xchg
inc
fwait
decb
push
lods
lea
push
pop
callw
mov
pop
pop
jecxz
pusha
rolb
mov
aas
aad
lahf
mov
add
aam
enter
movl
outsl
mov
lods
push
cmc
sbb
jns,pn
dec
add
ret
mov
int
ljmp
mov
fnstenv
scas
cli
shrl
dec
inc
mov
dec
pop
sbb
xchg
into
lret
jg
jno
imul
lods
mov
pop
dec
mov
fs
jp
ljmp
in
ret
subb
arpl
mov
dec
dec
jbe
lcall
add
xchg
push
ljmp
cltd
inc
or
xor
push
loopne
loope
out
and
ja
or
test
js
loope
dec
add
in
mov
cmpsl
lods
adc
adc
jbe
mov
xchg
dec
add
shl
stos
push
add
insb
dec
rcll
or
dec
xor
push
lahf
arpl
mov
xor
fcoms
mov
in
int3
cmpsb
inc
aam
mov
pop
mov
mov
shrl
jns
sub
jns
sbb
dec
jae
js
sbb
mov
out
dec
jae
adc
movsl
and
gs
sar
popf
sub
pop
in
xor
aas
xor
push
call
clc
jb
push
sbb
dec
test
testb
and
jns
aaa
xchg
mov
pop
mov
nop
inc
iret
cmpsl
outsb
mov
mov
out
pop
sub
scas
mov
xchg
adc
adc
sbb
aad
es
gs
pushf
rcll
dec
int
xchg
pop
ds
mov
push
lret
fiadds
push
sub
pop
ljmpw
or
es
cltd
push
and
dec
sbb
mov
cmc
sbb
fsubrs
xchg
xor
cmp
cld
push
popf
mov
nop
lods
rcr
jle
repnz
or
lret
xorb
dec
mov
ret
pop
fcompl
les
das
and
mov
xor
decl
sub
int3
das
jae
daa
pop
add
or
sub
cmp
ret
insb
aas
jns
cmp
pop
bound
ss
pop
movb
subl
cmp
divb
addr16
bound
cmp
push
fiaddl
ja
je
jmp
push
mov
arpl
int3
lahf
jp
outsb
pop
mov
inc
rcr
fldl
mov
iret
mov
mov
inc
popf
xchg
stos
ror
add
cmp
mov
and
xchg
lretw
adcl
arpl
push
xchg
adc
add
testb
cmp
mov
iret
je
jmp
sub
stc
mov
sbbl
iret
aad
imul
mov
je
arpl
xor
inc
sahf
imul
xor
mov
sub
add
call
incl
aad
into
pushl
dec
fcompl
mov
enter
clc
jno
inc
mov
sbb
xchg
leave
dec
dec
cmc
pop
in
push
leave
inc
cmp
fildl
push
dec
sbbl
pop
and
ret
jg
test
icebp
xor
or
xchg
push
push
cmp
jne
xor
push
push
mov
dec
add
mov
mov
int3
add
ret
mov
test
and
cmp
fiaddl
aad
xchg
cmpsl
popa
call
dec
test
mov
mov
dec
ret
rorb
sbb
xor
dec
js
mov
xlat
inc
loopne
out
loopne
aaa
cmpsb
hlt
pusha
cmp
and
es
mov
mov
jb
das
lret
push
cmpsb
or
mov
cld
pop
jle
loop
test
sub
lret
push
in
push
inc
adc
mov
sbb
sbb
mov
xchg
mov
mov
xchg
dec
inc
shrb
loopne
cli
or
gs
scas
imul
negl
movsb
lcall
mov
jmp
mov
in
sahf
dec
cmpsl
lds
scas
sub
scas
fucomp
into
pop
in
jp
push
flds
int3
or
out
xchg
or
mulb
cli
add
add
fwait
and
pop
fbstp
mov
sbb
shll
inc
ss
leave
lahf
fcos
add
daa
dec
mov
and
ficompl
pop
int3
fadds
add
pop
add
aaa
push
cmp
mov
push
insb
add
pusha
cmp
jp
push
jno
jo
cmpsb
je
dec
mov
daa
test
repz
fwait
push
add
shll
push
movsb
out
xlat
stc
mov
push
cmpsl
xchg
sub
js
sbb
pop
mov
xchg
push
lea
test
int3
shll
repz
pop
or
pop
cmp
adc
add
xchg
loop
jmp
js
mov
cmp
lods
pop
lods
mov
sahf
mov
ficoms
sbb
jo
cmp
jp
iret
xchg
lret
mov
mov
pop
jnp
or
test
xchg
cs
faddl
adc
xchg
push
fdivrs
shlb
ret
out
xor
ja
xchg
in
cld
in
adc
mov
repz
sbbl
ja
cmp
mov
out
lret
mov
pop
jmp
fsubrl
sub
mov
into
fiaddl
mov
out
cmp
jge
fnsave
jo
pop
sub
cmp
add
cs
jp
popa
inc
fisttps
mov
rcll
shrl
lret
add
ds
sbb
jmp
lret
stc
mov
or
sbb
clc
test
sarb
gs
mov
xchg
add
pushf
jmp
sbb
aas
cli
out
cmp
lods
push
nop
fisttpll
xchg
jae
inc
xor
lea
and
sbb
jp
or
mov
loop
int3
sub
mov
repnz
negb
xor
in
loope
mov
pop
mov
not
jo
sbb
pop
xor
jae
jmp
jg
sub
pusha
cmp
pop
mov
dec
pop
nop
notl
call
sbb
add
dec
jno
dec
ret
sbb
cmpb
push
cvtps2pd
push
ljmp
xor
in
ljmp
add
push
add
fxtract
pop
dec
lahf
or
adc
push
shll
stos
cmpsb
cmp
sbb
jp
add
mov
nop
cmp
dec
mov
pop
jp
push
adc
int3
mov
lret
jp
sub
cmp
mov
push
cmp
push
mov
sbb
inc
movsl
push
inc
add
outsb
fs
cld
test
sahf
jo
mov
idivl
fcoml
lret
pop
fildl
mov
sub
lret
lcall
out
jne
push
lahf
sbb
cmp
add
push
cwtl
jne
addr16
jg
or
cli
lds
jmp
inc
stos
cld
aam
ficoms
insb
push
push
add
xor
je
jb
push
cmc
out
addr16
rcr
sub
jl
adcb
inc
push
push
dec
mov
cs
unpcklps
push
inc
mov
pop
adc
mov
stos
cmpsl
imul
lret
in
push
pusha
push
leave
pushf
sbb
mov
call
in
adc
movsb
and
fistl
xchg
lret
outsl
mov
fsts
in
pusha
mov
lret
leave
mov
add
xor
pushf
sbb
lcall
pop
jnp
lock
inc
lds
mov
xchg
gs
mov
dec
lds
das
jmp
xor
mov
fwait
cmp
push
push
mov
mov
pop
push
fsub
mov
test
aad
rclb
cmp
inc
push
push
push
aam
xlat
xchg
ds
fdivr
or
or
mov
push
into
aad
sbb
sub
xchg
or
mov
sbb
push
cmpsl
sub
mov
or
movntps
push
popa
gs
insb
xchg
mov
mov
lods
ret
leave
add
push
push
lods
outsb
jno
inc
sbb
in
icebp
pop
or
nop
jne
imulb
push
inc
pushf
sahf
push
dec
or
mov
sub
mov
insb
adc
jp
xorb
gs
push
add
lds
add
mov
popf
xlat
cmpsl
imul
or
out
pushf
inc
jle
daa
daa
adc
mov
or
mov
aam
and
push
aad
sbb
add
jmp
rorl
xchg
sbbb
jecxz
in
xchg
in
cmpsb
mov
pop
std
mov
push
mov
ja
icebp
fwait
pop
hlt
push
pop
xor
out
addr16
cmpsl
mov
jmp
mov
loop
xchg
xchg
xor
mov
sbb
jge
sbb
cmp
divl
or
shll
mov
pusha
jge
mov
cld
xchg
hlt
jno
mov
insl
aaa
aaa
dec
popf
inc
shll
or
lods
dec
out
pushf
xchg
add
mov
xor
jb
adc
sub
stos
cmp
ja
add
int
mov
add
push
subb
mov
or
or
or
xchg
imul
cld
setnp
mov
cmp
jecxz
cmpsb
xor
fistps
in
leave
notb
adc
in
outsl
xchg
call
add
movsl
push
push
cwtl
std
xchg
mov
push
pop
leave
adc
push
xor
mov
and
loopne
dec
adc
es
xlat
add
data16
mov
cmp
rclb
adc
cmp
push
fadds
pop
packuswb
fnstsw
andl
ja
repz
xchg
mov
dec
shl
clc
out
jnp
pop
sbb
ljmp
loope
mov
push
arpl
dec
mov
subb
lods
sbb
jecxz
lods
lahf
movsb
testb
fdivrs
xchg
xor
xchg
inc
xor
daa
xchg
daa
sub
mov
popf
lods
or
or
adc
adc
pop
push
jb
mov
test
dec
test
out
lret
das
in
mov
dec
out
and
push
repz
or
sub
dec
icebp
jns
sbb
xchg
pop
orl
into
sarb
dec
sti
popf
cmc
pop
test
and
xor
xchg
xchg
xor
mov
lds
xchg
int3
rcrb
pop
sub
adc
outsl
mov
push
adc
sarb
ret
push
lret
add
les
xor
movsl
out
mov
add
pop
mov
shr
push
mov
and
cmpsb
fsubl
aas
or
pop
imul
aas
movsb
jp
push
test
fmulp
pushf
xchg
jns
mov
repnz
sub
out
pop
xchg
iret
jb
stos
stc
movsl
inc
aad
nop
pushf
cmp
inc
sbb
sbb
jl
pop
xchg
push
dec
mov
adc
adc
xor
sbb
mov
and
mov
insl
xor
dec
xchg
inc
loopne
xchg
mov
in
add
sti
imul
clc
dec
fsubl
lds
jmp
add
mov
sub
mov
movsl
lock
sub
lea
inc
lretw
mov
xlat
push
arpl
mov
xor
push
stc
sti
mov
add
sub
pop
pop
lcall
fldt
xor
sbb
and
pop
sub
in
ret
and
pop
call
pop
inc
sbb
loope
lods
mov
mov
push
xlat
sbb
cmp
mov
scas
std
loop
sub
cmp
xchg
in
js
add
pop
pop
movsb
scas
or
out
leave
stos
xlat
call
popa
mov
imul
in
ja
jecxz
add
mov
mov
test
cmpsl
xchg
push
scas
pop
int3
repz
lret
les
nop
adc
pusha
cmp
test
mov
xchg
push
test
or
jb
shrl
jns
pop
jge
jns
pop
popf
fldt
adc
aam
ss
pop
adc
xchg
repz
in
int
ret
sbb
or
ss
push
gs
inc
xchg
add
jae
fcmovb
mov
mov
idivl
push
mov
xchg
int3
stos
sub
daa
jo
dec
dec
sbb
das
movl
mov
jo
xchg
add
mov
rcrb
aas
ror
test
mov
sbb
dec
jb,pn
jnp
mov
orb
mov
lea
mov
fistpl
shlb
pop
pop
mov
or
pop
cmpl
sbb
jae
sbb
dec
push
pop
jmp
stc
sub
mov
imul
sub
stos
imul
fldl
mov
insl
adc
dec
lds
call
repnz
lods
push
xor
pop
mov
js
or
sub
adc
sti
bound
xchg
mov
fsubp
jle,pt
mov
push
sub
test
pop
jbe
arpl
test
push
loop
inc
popf
add
cmp
mov
negl
adc
ficomps
sub
es
icebp
add
mov
dec
nop
xchg
inc
into
add
nopl
inc
xchg
sub
out
mov
ficoml
push
mov
dec
push
jmp
inc
scas
pushf
test
outsl
lret
pop
add
xor
loop
and
xor
xchg
and
test
ds
cmpsl
mov
mov
das
lods
test
fsubs
add
mov
outsl
dec
arpl
sub
shr
imull
push
adc
negl
sbb
dec
pusha
iret
inc
sub
push
fisubl
scas
ljmp
imull
mov
lds
frstor
ret
mov
jno
mov
pop
sbb
inc
loope
mov
add
imul
sbb
inc
subl
add
fldl
test
lods
push
sar
pop
xchg
fimull
shlb
pop
mov
sbb
xor
insl
notl
ret
movsl
push
out
or
mov
outsl
outsb
jle
inc
add
jno
cmp
push
add
fidivrl
pop
mov
cmp
imul
cmp
jo
lcall
pop
and
mov
lret
movsl
jae
cwtl
jbe
jp
flds
xlat
mov
xchg
outsb
xor
push
pop
sub
mov
pop
rclb
xchg
mov
aad
lcallw
dec
ss
mov
enter
push
dec
mov
pop
nop
jne
add
xchg
cmp
rorl
mov
es
fs
push
in
sbb
scas
sbb
jecxz
sbb
xlat
fucomip
ds
push
mov
push
nop
stos
stos
inc
cmp
dec
xchg
mov
jo
pop
icebp
iret
fcoms
mov
mov
xchg
and
pop
das
mov
jb
setae
sbb
rcrl
incb
pop
fisttpl
adc
pop
xor
or
jle
aaa
pop
xor
ljmp
ljmp
push
shlb
addr16
add
push
cmc
cmp
cmp
xchg
inc
dec
fisttpll
loop
mov
add
jecxz
mov
cwtl
mov
xchg
mov
dec
shll
daa
dec
sub
inc
mov
push
stc
pusha
je
mov
xorb
add
cmp
mov
jg
pop
adc
jmp
icebp
test
add
or
inc
stos
fsubrs
lods
and
push
test
sbb
xchg
xor
insb
pop
adc
cmc
sbb
xchg
test
aas
mov
xchg
out
mov
or
sbb
pushf
jne
pop
dec
or
loop
mov
jge
lea
and
pop
fildll
aad
mov
cmp
cwtl
mov
es
xchg
call
mov
scas
push
aas
popa
cmpsl
insl
out
adc
imull
adc
jns
adcl
insb
inc
stos
mov
jne
sub
dec
cmc
int3
inc
lretw
mov
jge
mov
push
xor
pushf
jb
mov
jne
cmc
pop
mov
and
jmp
scas
cmp
push
loop
sub
leave
jne
stos
cmp
xor
jns
cwtl
pop
sbb
jnp
fidivrl
pop
ja
inc
push
mov
jmp
aad
xor
adc
test
outsl
out
jge
out
es
lcall
sub
or
bound
lock
imul
dec
jp
test
cmpsb
outsb
cs
dec
sbbb
xchg
push
test
seto
mov
cmp
push
arpl
sub
int3
dec
nop
xor
shlb
scas
mov
cli
in
cs
and
fmul
lods
mov
pop
pop
jecxz
mov
mov
mov
rolb
jg
pusha
mov
fnsave
mov
rcrb
iret
xchg
dec
mov
add
or
cli
imul
nop
push
mov
out
iret
loopne
pop
call
sbb
faddl
push
in
cmp
scas
add
inc
int
stos
and
sti
pop
mov
adc
sahf
scas
dec
sbb
or
cld
in
lret
and
jecxz
enter
adc
sbb
pushf
outsb
push
cmc
das
gs
inc
or
cmp
hlt
add
pop
pop
icebp
int
push
dec
xchg
push
or
or
mov
out
in
je
ja
jge
mov
fmuls
mov
xchg
sbb
sub
cltd
mov
dec
mov
daa
cli
sbb
dec
fldcw
daa
mov
adc
je
sub
jb
test
loop
icebp
movsb
xor
xchg
cmc
movsl
push
int
mov
jae
enter
mov
movsb
xchg
cs
and
leave
fsubr
and
movsl
sub
outsb
ret
xor
sbb
or
add
loopew
inc
cmp
in
cmp
outsb
stc
adcb
adc
xchg
int
scas
dec
and
dec
into
mov
scas
std
fisubl
push
lods
jo
hlt
push
dec
in
stos
fsts
pop
jl
mov
mov
or
lock
popf
scas
mov
scas
or
sahf
pop
out
dec
adc
sti
arpl
cmp
in
push
add
dec
addb
sbb
sub
mov
cld
je
movsl
dec
xchg
add
push
test
or
xlat
pop
movb
das
in
push
cmp
je
negb
popf
fdivrl
xchg
jae
jae
mov
xor
jecxz
mov
test
push
or
adc
sub
in
mov
roll
rcrb
inc
mov
sarl
xchg
jmp
repnz
mov
pushf
add
int
outsl
sub
out
lcall
sub
mov
fs
divb
data16
in
pop
pop
sarb
insl
adc
into
pop
xor
lea
bound
out
or
sbb
jl
scas
cltd
je
sub
aam
call
pop
daa
shlb
out
and
hlt
or
pop
cmp
fcompl
cmp
xor
xorb
push
xchg
mov
pusha
fisubl
mov
jle
mov
gs
imul
mov
test
arpl
adc
imul
mov
call
cmpsl
push
jl
lock
push
inc
insb
fimull
add
inc
movsb
jae
sti
test
iret
sbb
loop
cwtl
ds
or
mov
push
jb
dec
mov
mov
pop
addb
gs
xchg
inc
push
cmp
jno
mov
rcr
add
and
subb
push
pop
sbb
jle
les
and
adcb
jnp
dec
enter
push
cmpsl
sub
test
cmp
gs
dec
push
loope
movsl
out
adc
mov
xchg
in
inc
stc
push
dec
push
int3
mov
lock
loop
jle
js
cld
inc
adc
arpl
daa
or
xor
in
daa
inc
push
jecxz
add
into
add
mov
add
in
inc
xor
adc
sbb
subl
lods
dec
mov
jmp
inc
inc
sti
adc
mov
aas
fsubrs
lock
push
iret
sti
dec
out
mov
fcmovnb
xchg
jg
in
mov
inc
int3
test
mov
cmp
push
push
mov
jp
cli
fs
mov
jp
inc
test
xrelease
lods
adc
or
pop
jo
pop
nop
jns
repz
in
jmp
adc
cmp
sub
neg
int3
xchg
hlt
lret
xor
mov
in
shlb
sahf
ret
cmp
jbe
fisttpl
or
inc
mov
arpl
adc
push
je
jbe
cmp
xchg
sbb
cltd
adc
outsb
lret
imul
sub
lds
cld
shlb
pop
aam
int3
sbb
dec
loopne
xchg
jl
inc
aaa
adc
insb
jle
cld
jae
in
idiv
stos
lock
cmp
rorb
cwtl
push
pop
imulb
fxch
xor
jle
aaa
cmp
mov
xchg
dec
pop
aam
outsl
pusha
nop
mov
pop
jp
adc
stos
push
mov
inc
loope
mov
insb
and
and
outsb
cld
xorb
xchg
mov
es
xor
pop
lods
sub
push
fcom
out
in
clc
mov
out
add
out
andl
out
add
imul
lock
adc
and
repz
xchg
cmp
push
movsl
xchg
inc
aas
dec
add
pop
xchg
out
repz
or
sahf
inc
lds
lds
add
add
dec
sbb
mov
mov
push
adc
push
lds
pop
jo
jno
and
arpl
inc
push
adc
call
stc
mov
movups
lods
addr16
testl
mov
stc
das
mov
mov
bound
pop
loop
out
into
xchg
aam
arpl
divb
add
mov
leave
shrl
pusha
dec
imul
int
outsb
pop
mov
lea
out
inc
sbb
inc
mov
orb
movsl
pop
xchg
sub
in
inc
lret
mov
dec
xor
outsb
xor
dec
ror
lock
sbb
cmc
mov
dec
inc
js
pusha
xor
mov
jnp
std
inc
mov
jmp
xlat
adc
adc
sub
sbb
lahf
jne
ficomps
mov
xlat
lret
int
add
js
dec
add
clc
pop
dec
test
in
lret
sbb
mov
cmp
pop
adc
mov
dec
and
ljmp
xchg
sbb
xlat
call
aam
mov
iret
rolb
repnz
or
and
lahf
cmp
fsub
xor
sub
leave
fldt
sub
call
add
push
push
inc
repz
jmp
sub
xor
ljmp
fsubrl
xor
sbb
into
roll
xlat
neg
sbb
xor
ss
sti
xchg
xor
cmp
push
rcr
add
mov
cs
or
push
leave
movd
and
sub
outsb
enter
je
popa
dec
rorb
sbb
mov
fs
sti
push
fcoml
mov
and
dec
imul
hlt
xchg
stc
sbbb
mov
mov
shll
arpl
inc
stos
or
mov
add
or
adc
call
mov
sbb
scas
repnz
cmp
cwtl
jmp
pusha
les
mov
jl
int
sbb
add
sub
lods
and
sti
stos
shll
das
lret
inc
sub
xchg
inc
add
pushf
loop
sub
sub
loopne
push
pop
jo
inc
xchg
mov
sub
xchg
push
incb
loope
xchg
push
fwait
adc
test
xor
fwait
cmpsl
mov
push
out
dec
test
outsl
clc
xor
mov
jns
jnp
nop
adc
fiaddl
xor
inc
mov
mov
jns
jmp
hlt
inc
xchg
cmp
dec
insb
test
mov
popf
scas
sbb
loopne
jge
filds
pusha
dec
xchg
adc
pop
inc
shr
jns
add
mov
sahf
sahf
and
sub
xor
add
sub
lds
and
repz
cmp
fstl
xchg
pop
sub
mov
mov
shrb
je
sbb
dec
aad
das
sti
push
inc
cld
sub
lcall
jecxz
or
loopne
sbb
idiv
cmpsb
out
mov
adc
pushl
int
mov
in
clc
dec
sbb
out
outsl
dec
xchg
fstps
aaa
fidivs
adc
fwait
mov
faddl
hlt
mov
call
xchg
pusha
jns
movsl
les
shll
pop
dec
mov
jmp
sub
fwait
lcall
inc
orb
bound
push
mov
jb
sbbb
xchg
sbb
les
iret
ret
scas
sub
cmp
shrl
out
cmp
mov
imul
stos
inc
push
dec
mov
xorl
jg
pop
dec
pop
fstpt
outsb
mov
cmpsl
les
xchg
std
ja
cwtl
pop
push
xchg
jnp
ret
pop
push
pop
cmc
pop
shrb
jne
movsl
stos
mov
ljmp
lahf
fcomps
scas
or
mov
sub
jge
decl
jp
mov
out
sub
in
dec
out
pop
lods
cli
xchg
jb
lea
in
mov
xor
push
jbe
pop
imul
rclb
rol
lcall
sbb
out
sbb
ja
dec
mov
mov
outsb
clc
fscale
xor
sub
push
adc
push
sbb
inc
pop
cltd
sub
rclb
aam
pop
imul
lcall
scas
mov
and
cltd
dec
daa
into
cmpb
aad
andl
jb
aam
jnp
dec
cmc
pop
xchg
les
mov
rcl
sub
mov
pop
mov
mov
xchg
inc
out
cmp
sbb
mov
cmp
inc
mov
mov
xchg
jg
mov
shlb
adc
adc
xchg
mov
aas
sbb
and
push
add
cltd
inc
test
sbb
in
or
xchg
mov
pop
pushf
sub
and
subl
fdiv
test
mov
loope
dec
adc
scas
in
test
popa
cs
sti
xchg
jl
xor
push
aam
xchg
sbb
jmp
inc
xchg
xlat
push
mov
cmc
sahf
roll
jg
cmc
sbb
xchg
pop
sub
mov
push
scas
or
pop
dec
push
inc
jnp
mov
aas
push
add
jbe
jmp
stc
add
mov
push
and
push
or
mov
loopne
mov
cwtl
and
sbb
pop
xor
add
adc
dec
xlat
xorl
mov
lds
sbb
add
shll
pop
or
xor
das
inc
js
daa
jmp
aad
jle
pop
sbb
fildll
xchg
mov
push
sahf
imul
popa
aam
push
mov
mov
test
jb
mov
sub
jecxz
or
push
imul
lods
aaa
sbb
daa
sub
bound
push
call
push
cltd
dec
icebp
sub
jmp
sahf
out
and
inc
std
roll
add
mov
mov
add
leave
pushf
sbb
testb
mov
incb
cmp
movsl
push
enter
dec
bnd
push
push
testb
dec
aad
loope
jno
or
and
sub
or
dec
movsb
ud0
mov
lret
dec
das
into
outsl
mulb
pop
lea
adc
add
mov
hlt
ljmp
lds
adc
jmp
daa
cmc
adc
ss
notb
repnz
aas
jb
pusha
xor
lea
fwait
push
data16
pop
pop
xchg
mov
push
insl
into
je
mov
dec
mov
sub
out
mov
scas
xor
jne
cs
sti
jae
ljmp
mov
imul
xor
pop
int3
add
test
sub
push
in
push
push
sahf
add
mov
pop
in
pop
subl
xchg
es
shlb
leave
cmpsl
lock
mov
jae
add
dec
push
movsl
jb
enter
push
sti
dec
cmp
cmc
out
mov
or
std
cs
mov
in
sub
inc
movsl
sbb
in
clc
adc
sub
jb
jl
sbb
cmp
sbb
aad
orb
push
mov
add
imul
es
pop
shll
cmp
test
pop
hlt
pusha
in
pop
andl
mov
push
cmc
into
dec
mov
jle
pop
xchg
cmp
inc
xchg
cld
aam
jo
nop
mov
or
or
jae
fsubr
sti
mov
and
cmp
out
inc
leave
sub
mov
dec
mov
xchg
in
mov
addr16
cmpb
push
push
popf
pop
sub
xchg
iret
int
mov
int3
nop
into
in
mov
and
jb
mov
cmp
movsb
outsb
cmp
das
jne
mov
outsl
test
jnp
mov
pusha
sub
xchg
sub
inc
sbb
and
aas
and
pop
pop
iret
lret
sahf
outsb
iret
pop
jle
fdivl
add
add
add
inc
xchg
rorb
add
or
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
or
adc
or
loopne
adc
