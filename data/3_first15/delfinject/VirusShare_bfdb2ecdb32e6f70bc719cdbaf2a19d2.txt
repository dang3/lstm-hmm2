add
add
incl
add
and
add
sbb
and
add
sbb
test
sbb
xchg
and
add
add
add
push
outsb
inc
insb
xor
cs
dec
dec
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
lea
push
mov
push
call
cmpsb
and
add
sbb
and
add
sbb
test
sbb
xchg
and
add
add
add
cld
pop
pop
ret
mov
push
mov
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
pop
ret
lea
push
mov
push
mov
mov
mov
add
mov
add
mov
add
mov
pop
pop
ret
nop
jmp
inc
cmpb
jne
inc
ret
mov
add
ret
push
mov
add
push
push
push
mov
add
mov
mov
cmpl
jne
call
mov
call
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
dec
test
jb
inc
movl
cmpl
je
mov
add
mov
add
push
push
call
add
add
incl
dec
jne
push
push
mov
mov
push
push
call
mov
mov
mov
add
mov
push
push
call
add
mov
jmp
lea
push
call
mov
cmpl
jne
push
call
mov
mov
call
mov
mov
add
mov
test
jbe
mov
movl
testl
jne
movzwl
push
mov
push
call
mov
mov
call
mov
jmp
push
mov
push
call
mov
mov
call
mov
add
incl
dec
jne
mov
cmpl
jne
mov
mov
add
mov
add
mov
push
push
mov
push
call
mov
mov
add
add
mov
add
lea
push
push
push
push
call
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
int3
pop
pop
pop
mov
pop
ret
lea
pusha
call
ret
nop
push
add
add
add
and
add
add
cltd
sbb
add
rolb
add
add
add
add
adc
add
nop
add
inc
cmp
add
add
add
mov
add
inc
rcll
add
add
add
adc
add
add
rolb
add
add
add
add
add
xor
add
lock
add
add
add
add
add
add
pop
lock
cmp
xlat
add
cli
push
lds
into
clc
movsb
push
pop
jp
mov
test
fbld
pop
and
aam
adc
fsubs
pop
mov
imul
mov
lret
pop
mov
add
scas
inc
cs
xchg
enter
and
decb
add
aad
xor
out
add
pop
mov
popl
hlt
ret
fldl
nop
cmp
add
mov
roll
mov
stc
aad
pop
add
scas
mov
cld
leave
add
fisubl
push
loop
add
add
lea
pop
push
jns
mov
add
xor
add
mov
inc
cwtl
cmp
es
lret
lock
stos
cmp
sbb
ja
fwait
adc
je
sub
mov
call
mov
jecxz
add
hlt
scas
mov
pop
add
push
cld
xchg
xchg
incl
sub
cli
stos
fwait
clc
fs
push
sub
rcr
ljmp
or
push
mov
lods
rcr
jmp
sub
mov
add
cli
sbbb
adcl
add
pop
pusha
cmp
bswap
in
sarb
sbb
pop
ss
mov
push
icebp
lahf
in
jecxz
test
inc
imul
xchg
jg
mov
push
cmp
jmp
mov
repz
and
dec
xchg
and
stos
popa
hlt
test
mov
shlb
in
and
add
outsl
mov
fwait
imul
vmovss
cwtl
repnz
repz
call
hlt
daa
std
out
push
out
dec
push
xchg
popf
jmp
sub
sahf
mov
jb
push
add
push
insl
cld
lret
ficoml
pop
push
stos
test
fsub
outsl
xor
std
out
in
xchg
add
pop
xchg
cmp
adc
cltd
inc
add
add
add
jge
mov
and
mov
pop
xor
addb
dec
ja
fcmovne
pop
fdivs
fldcw
fadd
mov
out
mov
xlat
rorl
aad
mov
push
movb
repz
and
pusha
das
add
pop
mov
add
rcll
in
sahf
test
enter
call
add
mov
addl
dec
enter
pop
xchg
call
add
sarb
sbb
fcom
inc
jecxz
mov
clc
dec
sahf
add
mov
lret
enter
clc
rorb
add
add
push
sbb
out
add
xor
dec
add
lret
out
pop
hlt
lods
clc
add
jno
push
fcmovne
lods
mov
loop
sbb
mov
lret
pusha
jno
lods
clc
jb
add
aad
add
xor
scas
mov
inc
sub
aad
mov
add
pop
mov
inc
rclb
out
pop
cmp
inc
cld
add
in
xchg
inc
scas
iret
add
incl
jmp
imulb
loope
addr16
add
mov
movsb
fidivrl
decb
mov
xchg
mov
jecxz
repz
rcll
mov
xor
out
mov
pop
ja
ret
adc
mov
icebp
fimuls
sub
cmova
lods
ret
add
mov
dec
clc
loope
push
fisttpl
add
jb
xchg
andb
xlat
out
add
ljmp
add
pop
sahf
aas
add
js
cmp
or
clc
mov
fstps
xor
out
push
xchg
add
ret
dec
xorl
repz
shll
adc
cld
mov
lds
ss
add
movsb
lods
popf
aaa
aas
das
add
add
and
lahf
rolb
mov
mov
push
mov
dec
cli
mov
sti
popf
out
mov
repnz
idivb
cwtl
lods
subb
push
dec
subl
inc
into
lock
stos
mov
add
inc
xchg
int3
js
add
dec
insb
stos
jmp
popf
xor
or
sarb
ret
enter
stc
jbe
ss
pop
fdivrl
sbb
shrb
sub
sahf
add
mov
mov
add
daa
scas
loope
dec
inc
loop
js
ror
je
push
add
fnop
scas
test
add
or
aaa
mov
inc
lods
pop
jmp
test
jb
xlat
adc
iret
cmp
mov
add
xor
fcoml
pop
add
dec
das
rorb
mov
cmp
aam
xlat
outsl
add
shl
lock
jge
pop
mov
mov
jns
mov
xor
pop
addl
enter
rol
cmpsb
jge
pusha
das
arpl
xor
sub
aam
pusha
pop
in
mov
xchg
add
hlt
xor
adc
inc
push
sub
repz
add
imul
cmc
mov
loop
push
scas
push
xchg
enter
inc
sar
popl
shr
js
xor
in
pop
xor
add
les
xor
push
insl
cltd
aam
adc
jl
das
add
loope
mov
sub
dec
push
lods
cmp
sar
pop
shl
iret
mov
pusha
cmp
rorl
pop
push
mov
into
popa
insl
in
push
movsl
cmp
arpl
sahf
je
cld
cmp
xor
aas
movsl
add
xlat
jb
decb
fwait
mov
and
inc
mov
bound
adc
adc
aaa
adc
cmp
cli
psrld
iret
pop
sub
pop
nop
rclb
inc
add
dec
jns
je
add
push
dec
cmp
pushf
add
nop
dec
das
mov
je
cld
roll
mov
xor
ljmp
inc
jb
and
sub
push
xor
lock
fcoms
cld
jl
movl
adc
fidivl
pop
pop
or
xchg
bound
sarb
test
cld
xor
addr16
lods
stos
mov
lret
and
int3
add
sbb
subb
add
loope
iret
add
pop
nop
sub
fiadds
pop
add
dec
mov
test
sbb
sub
inc
stos
sbb
js
in
aad
mov
icebp
test
loop
scas
cmpb
add
mov
mov
insb
lcall
dec
jmp
clc
adcb
mov
sbb
add
ljmp
jns
orb
les
add
push
xchg
xchg
and
inc
sar
jae
sbb
popl
sub
sbb
lret
sbb
pop
xor
fdivl
xor
lods
fldt
insl
add
jnp
pop
push
dec
and
add
adc
sahf
add
aad
hlt
shrb
push
add
push
add
dec
daa
adc
dec
or
and
cs
inc
scas
rol
add
enter
cmp
mov
ror
add
adc
add
pop
lock
in
push
sub
insb
mov
or
out
add
lcall
in
mov
jmp
lret
scas
mov
push
imul
add
lds
jnp
adc
nop
aad
rolb
jge
xchg
das
xchg
in
lcall
call
push
pop
arpl
cmp
pop
pop
or
aaa
jge
add
test
add
push
pop
xor
int3
lret
sahf
iret
dec
and
jae
inc
add
cmp
inc
pop
xchg
cmpb
sbb
add
push
cmp
inc
aad
int
inc
dec
pop
es
push
pushf
push
lahf
mov
jb
shlb
loop
add
add
rcll
mov
jo
or
push
shl
inc
xor
push
lret
rcll
and
ja
add
in
jge
push
jne
pop
xchg
sub
jle
add
adc
or
sub
faddl
cs
inc
rcr
cmpsb
jg
pusha
jmp
add
mov
and
push
xchg
out
adc
cmp
add
enter
inc
mov
ret
stos
mov
dec
inc
movsl
clc
insl
sbb
and
fcoms
bound
leave
loop
inc
jbe
cltd
jg
out
mov
fistps
fmuls
xor
clc
adc
mov
pop
push
ss
sbb
loopne
mov
dec
pushf
add
les
leave
sub
add
cmpsl
mov
xor
int
mov
fwait
push
dec
add
xor
iret
xor
dec
addr16
inc
imul
sub
je
aam
mov
rcrl
jle
add
and
sub
data16
jae
loopne
pop
fwait
jmp
xchg
and
push
lea
out
out
fcompp
add
add
sbb
add
cmp
xor
mov
sub
add
mov
dec
clc
add
imul
in
add
cmp
or
lock
sub
push
cmp
roll
loope
pop
cld
xor
or
das
push
test
sti
lcall
mov
mov
jmp
mov
stos
scas
add
sbbl
add
push
lret
bound
cwtl
pusha
pop
inc
pop
add
add
sahf
lods
nop
push
dec
adc
add
mov
fisubs
in
ljmp
jno
out
cld
lret
sub
and
add
inc
pop
inc
add
inc
xchg
push
ud0
bound
xorb
js
mov
mov
xlat
push
mov
fildl
push
mov
lret
cmp
and
pop
ret
pop
mov
ja
fwait
lret
out
add
outsb
insb
jae
push
lahf
adc
add
mov
stos
add
movsl
push
sar
inc
add
andl
lahf
or
inc
mov
adc
stos
loopne
mov
adcl
xchg
push
mov
add
add
test
sahf
loop
add
leave
data16
outsl
faddl
mov
into
arpl
cmp
add
shll
sbb
jo
cmp
pop
add
jae
xchg
mov
sahf
out
mov
pop
inc
scas
or
push
push
popf
mov
sub
loope
enter
xchg
and
add
call
pop
mov
jle
pop
fistps
loop
mov
add
mov
cmp
add
lcall
jmp
push
aas
mov
mov
loope
push
add
pop
inc
jle
push
mov
inc
add
jnp
jne
mov
add
mov
cmpsb
into
int3
mov
add
lret
push
test
xchg
aam
pusha
push
jecxz
cld
js
cmpsb
xor
je
lea
out
dec
jae
insb
adc
loopne
push
mov
push
pop
and
dec
hlt
orb
xchg
sahf
ljmp
nop
rcll
mov
imul
xlat
testl
inc
shrb
fs
in
test
iret
pop
inc
adc
int
shlb
bound
mov
in
adc
insl
sbb
dec
jo
mov
test
mov
hlt
scas
scas
add
xor
inc
ds
cmp
sbb
push
jp
or
sub
xchg
leave
and
add
inc
jecxz
pusha
rclb
add
push
mov
jmp
sbb
add
mov
add
in
mov
push
in
add
mov
add
test
cmpsb
mov
ret
ret
testb
lods
or
lahf
les
add
dec
cli
fiadds
or
mov
arpl
add
inc
hlt
popf
pop
je
pop
jo
push
pop
lcall
cld
add
xlat
addb
addl
iret
add
push
add
pop
mov
and
inc
cld
mov
shll
rclb
in
sbb
out
xlat
mov
and
popl
test
iret
scas
push
inc
fmuls
lahf
add
call
iret
mov
add
das
imul
mov
sahf
pop
insb
into
xchg
mov
loopne
mov
push
unpcklps
fnstenv
inc
add
jecxz
cmpl
xorb
lods
mov
mov
and
xchg
fsubl
add
inc
test
inc
inc
mov
push
sarb
cltd
add
pop
iret
dec
das
movsb
and
mov
lret
mov
xchg
sahf
aad
mov
mov
mov
cwtl
xchg
test
jp
pop
roll
std
cmp
ljmp
mov
mov
fdivl
dec
movsl
lahf
and
enter
addr16
add
adc
mov
mov
xor
int
ljmp
in
mov
movsl
lret
sbb
add
sub
add
lcall
mov
mov
iret
adc
mov
add
add
jg
ljmp
fistps
mov
push
xchg
add
sub
push
cmp
pop
add
jae
ret
add
add
or
mov
mov
or
sbb
mov
push
add
pop
repnz
ret
xorb
outsb
pop
cltd
es
or
movsb
mov
popf
push
cli
fistps
subb
mov
add
and
js
pop
mov
daa
testb
and
pop
inc
add
jge
popf
cmpsb
dec
addr16
add
stos
add
jecxz
in
into
dec
cmpl
shufps
jle
xor
ss
outsb
mov
mov
loop
add
sbb
push
lret
inc
dec
fcoml
mov
hlt
dec
sbb
add
xor
mov
and
sbb
imul
mov
add
fisttpll
dec
in
add
mov
mov
dec
adc
mov
lcall
es
mov
adc
cmova
fmul
in
push
pusha
jge
popf
cmp
add
add
cmpsl
enter
xchg
lret
stos
ror
push
scas
jp
hlt
jp
lock
and
dec
add
dec
add
push
mov
or
pop
fucom
pop
add
jo
int
sub
add
cli
pop
jle
out
add
orl
sub
in
or
rclb
das
sub
nop
loope
in
jmp
shlb
xchg
imul
mov
xchg
cs
outsb
ds
pop
add
mov
test
repnz
add
pop
in
lock
push
xor
insl
inc
nop
sub
add
rolb
inc
mov
pop
int
push
int3
test
xor
mov
add
xor
add
ds
negl
push
cmp
push
push
dec
sbb
cmp
into
mov
add
xchg
sbb
das
push
add
jmp
test
repz
push
add
adc
xchg
add
xchg
push
push
loopne
clc
xchg
js
pop
cmp
inc
pop
out
out
insb
xor
add
fidivrl
push
mov
ss
sub
insb
add
adc
jo
mov
in
add
or
pop
push
mov
jnp
mov
fwait
jo
es
cmp
arpl
repnz
or
mov
add
dec
rol
dec
sbb
mov
outsl
push
or
cld
jl
push
push
dec
push
cmpsb
adc
hlt
fucom
sbb
je
jmp
add
adcb
scas
pop
dec
mov
jne
add
sbb
mov
lds
arpl
add
sub
rol
xor
cli
lods
bnd
fsub
fs
dec
roll
jmp
pop
add
les
pop
add
sbb
jae
mov
and
push
fildl
adc
stos
nop
cmp
les
imul
add
popa
push
add
sarb
add
mov
mov
into
nop
xor
insb
test
push
ret
int3
dec
add
push
daa
decl
cli
scas
add
xor
into
add
mov
cmc
mulps
stc
lea
xchg
dec
js
add
or
mov
out
mov
push
mov
cli
add
cmpsl
mov
dec
inc
shrl
adcb
cmpsl
fisubl
dec
mov
xchg
je
enter
mov
cld
add
sti
dec
adc
xchg
insl
inc
das
fildl
pop
or
jl
imul
and
addr16
fwait
push
adc
imul
add
test
mov
nop
fidivrl
mov
add
mov
add
push
inc
pop
jecxz
add
lods
pop
fidivs
push
push
out
repz
inc
jmp
iret
mov
ret
push
sbb
or
insl
add
or
jmp
cmp
popf
cmp
pop
pusha
cmp
jne
push
imul
roll
in
shrb
pop
inc
jno
je
dec
daa
jl
add
stos
les
scas
dec
sbb
pushf
lods
push
add
jmp
dec
fnstsw
in
loopne
sbb
mov
inc
lods
dec
sbb
jecxz
into
loopne
dec
movsb
cmp
fisubs
mov
lret
nop
add
cmp
xchg
pop
sti
xchg
lock
cmc
ficompl
movsl
imul
arpl
lahf
add
mov
add
cmp
insl
rolb
push
sbb
mov
idivb
call
mov
ss
push
aaa
lods
dec
rcl
pop
cmp
add
adcl
std
add
dec
data16
imul
sbb
mov
fbstp
pop
or
push
add
js
push
enter
je
inc
fsts
adc
pop
jne
aad
shrb
or
cli
fcoml
into
les
cmovg
scas
sbbl
ss
mov
jge
repnz
jle
ret
cmp
adc
sahf
pop
mov
out
xchg
cmp
jp
push
aam
shll
add
clc
rcrl
cmp
jecxz
call
cli
push
sbbl
mov
ljmp
pop
xlat
push
jae
scas
rol
loopne
in
cmp
cmp
iret
mov
jbe
dec
outsb
push
adc
cmp
fwait
rcl
mov
stc
add
xchg
jmp
adc
rolb
popa
clc
add
jns
mov
cmp
ret
push
add
popf
inc
ret
adc
pop
dec
in
enter
repnz
add
jae
shl
lods
add
sbb
int3
and
out
push
add
dec
cmpsb
pop
add
or
sub
sub
aad
push
mov
clc
pop
jns
mov
roll
mov
add
xchg
pop
jnp
dec
adc
jecxz
adc
sub
push
xchg
iret
roll
mov
out
adc
icebp
shlb
insb
jb
add
es
inc
or
sub
add
pop
jge
fcmovbe
fmul
add
jns
fs
js
movsb
jbe
js
cmp
scas
inc
add
jbe
rclb
add
fildl
aam
mov
lock
add
ret
xchg
fwait
pop
lret
add
or
repnz
add
mov
mov
push
add
mov
rcl
add
loop
das
in
lods
adc
jmp
pop
pop
je
add
out
ret
or
aaa
xor
mov
and
sbb
into
mov
xchg
add
aam
movsb
dec
std
decb
add
nop
aam
lock
fisttps
aad
sahf
sbb
out
push
fiadds
iret
rorl
rcrb
inc
mov
inc
pop
inc
lret
shrl
jl
add
ret
cld
xchg
repz
xchg
pop
mov
ss
aaa
insl
arpl
pop
push
xor
lea
inc
mov
es
in
cmp
clc
add
dec
jns
stos
sbb
loop
xor
jle
cmp
hlt
add
add
inc
cld
data16
outsb
jo
or
jle
cs
addb
jns
or
push
xchg
add
or
popa
jp
ret
jo
ffreep
xor
add
or
ds
pop
subl
sbbb
mov
cmp
aad
repnz
jl
les
arpl
add
jp
adc
leave
pusha
dec
int
repz
fwait
pop
push
loopne
rorb
inc
iret
jecxz
idivl
arpl
enter
prefetchwt1
or
jmp
pop
insl
out
jle
sbb
fbstp
out
pusha
outsl
push
add
int3
pop
sub
jo
jae
jge
inc
mov
aad
pop
pxor
data16
pop
mov
mov
xor
sar
jne
xchg
incl
push
and
lret
repnz
adc
fdiv
cld
sarb
leave
add
clc
xchg
into
add
popf
gs
int3
lock
cli
add
pop
inc
sti
mov
dec
mov
adc
out
ss
mov
jnp
test
push
dec
mov
dec
das
insb
scas
add
ljmp
cmp
ja
movsl
test
mov
orb
mov
int3
sub
lret
adc
in
jl
add
scas
addl
enter
inc
ret
dec
cmpxchg
je
lods
pop
dec
scas
mov
adc
push
aaa
aas
roll
jmp
rcrb
add
imul
mov
mov
dec
push
lds
xchg
push
jl
jnp
jne
or
add
jmp
add
mov
mov
loopne
inc
imul
mov
test
mov
lret
pusha
push
jo
sahf
push
jle
lea
mov
xchg
rcrb
jecxz
jl
adc
jo
push
call
adc
pop
mov
cmp
enter
or
add
sbb
adc
shrb
fs
push
push
push
sarb
paddusw
mov
mov
ljmp
ret
outsb
mov
mov
ja
loopne
repz
shll
add
xchg
mov
rolb
into
nop
scas
cmp
add
mov
pop
inc
cmp
add
mov
xchg
add
out
rolb
scas
add
sbb
ss
je
mov
iret
cmpsb
xchg
xor
clc
test
push
int3
cmc
cmpsl
sub
into
add
cli
sbb
sub
xor
fwait
cltd
inc
push
push
shrl
add
sub
rcrb
mov
fiaddl
jge
add
jne
fnstsw
cmpb
popa
enter
add
mov
cmp
out
xor
push
and
add
in
jns
mov
lds
add
shrb
fcoms
cmp
scas
sbb
mov
nop
cmp
sub
pop
ljmp
add
inc
loope
mov
xchg
repz
add
in
mov
test
jmp
inc
lock
jg
add
add
lods
sti
push
sub
adc
fldl
mov
mov
xorl
mov
das
fs
ja
fisubrs
and
sarb
ret
sbb
iret
ret
daa
cmp
int3
mov
add
sub
loopne
and
and
mov
aas
push
push
add
sub
clc
add
fs
push
fidivl
outsb
insb
insl
in
jbe
jmp
mov
sarb
ret
jb
pop
push
pop
xchg
out
lea
jmp
xchg
xorb
mov
cld
ret
out
mov
in
rolb
lcall
icebp
jne
or
xchg
or
mov
lahf
jle
aam
adc
mov
dec
test
pandn
lret
lods
rclb
mov
xacquire
and
push
lahf
sahf
mov
stos
pop
outsb
andb
cli
mov
jns
psraw
add
jnp
xchg
rcrl
call
sarb
xlat
andl
sub
pop
jle
lahf
dec
daa
dec
pop
xchg
xlat
pusha
jnp
cmp
push
imul
pop
jnp
pop
jns
pop
pop
lock
loopne
ss
add
rolb
idiv
jo
xlat
call
xchg
outsl
ljmp
pop
ret
test
add
sbb
cli
rclb
and
push
mov
or
ss
jne
and
pop
sub
dec
pop
or
out
stos
add
cltd
xchg
jo
xor
int3
jecxz
inc
stc
les
cmc
ja
jl
mov
in
push
in
repz
ret
pop
inc
cwtl
shlb
int3
mov
xlat
into
shll
jb
jl
cmp
out
mov
sbb
xor
add
fcoms
pop
dec
out
repz
add
pop
jmp
iret
xchg
arpl
ss
rolb
add
adc
shlb
pop
push
pop
incl
cli
dec
idivl
mov
cmpsb
mov
sbb
or
mov
pop
scas
jmp
add
mov
jmp
jne
cli
js
and
mov
add
xchg
inc
daa
adcb
add
cmpl
add
loop
aaa
ret
cmove
push
jae
jge
add
mov
adc
pop
int
adc
orb
add
adc
imul
sar
mov
inc
scas
ljmp
push
ljmp
outsb
jae
sbb
loop
addb
cmpps
into
and
add
lahf
add
mov
fadds
fidivrl
adc
sub
jecxz
jb
test
movsb
sub
xlat
loope
mulb
sbb
add
test
aaa
ret
int3
fwait
sti
shlb
leave
add
arpl
test
cmovb
test
push
leave
into
in
lea
xor
pop
das
std
jecxz
push
jbe
mov
xor
inc
imul
scas
pop
es
out
js
jp
lcall
testb
push
enter
inc
cmpsl
add
add
add
stos
ljmp
jmp
xchg
out
add
aam
xor
mov
or
mov
std
das
mov
jne
pop
movsl
add
jb
out
das
stos
pop
mov
call
inc
sub
adc
sbb
inc
out
lret
rcl
shll
jae
mov
fcom
mov
int
dec
pop
cwtl
add
sbb
sub
scas
popf
add
leave
push
jo
jno
sub
movsl
jecxz
fistl
cwtl
cwtl
imul
std
faddl
aad
add
fs
or
add
adc
jo
pop
jae
hlt
inc
add
push
push
adc
pop
sbb
cmc
add
lea
insb
js
add
xchg
ds
sub
add
das
fld
xchg
pop
cmpxchg
mov
imul
in
loopw
xchg
add
out
pusha
jbe
loopne
inc
add
orb
lret
add
mov
sub
cli
add
mov
cs
rolb
adc
inc
scas
and
in
enter
adc
popa
stos
rorb
add
dec
dec
sbb
and
push
pop
push
clc
add
add
push
es
add
test
cwtl
leave
enter
push
xor
or
addr16
add
sbb
mov
call
loop
push
popa
push
subl
lret
pop
scas
or
push
ret
add
cld
adc
add
testb
lcall
loopne
call
out
pop
push
out
add
mov
jmp
dec
push
lcallw
cmc
mov
mulb
mov
push
cmp
add
inc
cmc
jae
jb
pop
inc
mov
cmp
pop
filds
in
jmp
imul
push
sub
lahf
add
adc
ss
sub
adcl
scas
gs
lods
repz
cmp
inc
ds
push
mov
rcrb
shl
mov
cmpsl
dec
movsl
loop
xchg
mov
jg
inc
ljmp
jp
pop
cmc
out
sarl
pushf
ret
add
hlt
cmp
xchg
ds
xorb
mov
rol
add
icebp
add
add
scas
out
je
jp
xor
and
movsl
add
inc
xor
sbb
out
sbb
outsl
stos
inc
insl
icebp
fsubrl
push
fisubl
mov
fcom
aaa
roll
les
int3
fstpt
dec
add
cwtl
arpl
add
ret
mov
into
adc
push
xchg
sbb
and
sbb
mov
out
repz
jecxz
jl
insl
fadd
lods
ret
cld
xor
mov
mov
inc
int3
push
add
mov
inc
mov
loop
xor
add
mov
out
add
push
scas
leave
jmp
mov
pop
pusha
mov
sbb
stos
imul
push
call
inc
stos
add
enter
add
rolb
add
jo
mov
xor
aaa
out
mov
add
or
cld
xor
xchg
pop
adc
popa
or
xchg
enter
mov
push
bound
dec
gs
add
rolb
add
jge
push
xchg
imul
pop
sub
movb
adc
orb
decb
sub
cltd
js
push
cmovle
cmp
stos
mov
jmp
adc
daa
adc
add
lcall
lret
outsb
int
xchg
mov
ja
notl
test
cwtl
or
mov
dec
or
loop
pusha
adc
xchg
mov
fwait
add
inc
pop
xor
rorb
loop
clc
mov
cmp
add
inc
sub
aad
push
pop
clc
repz
jp
fiadds
add
sbb
imul
mov
pop
hlt
push
add
das
pop
in
rcr
jne
test
cmp
xchg
scas
call
mov
mov
adc
cli
aas
xor
dec
push
outsb
jecxz
inc
and
adc
data16
xor
jne
inc
add
mov
inc
cs
pop
add
sub
adc
mov
pushf
scas
fwait
push
movl
push
pop
into
dec
add
bound
lret
pop
sbb
inc
jmp
xor
fdiv
sub
xchg
cmpb
repnz
cmpsb
int3
ret
add
push
mov
push
int
mov
mov
fnsave
stos
ja
vcvtpd2psx
ds
clc
add
adc
insb
and
push
loope
xor
dec
pop
jg
mov
mov
movsl
stos
add
gs
scas
adc
mov
cld
aas
ret
add
jns
sbb
add
cmpsl
mov
add
sahf
imul
shlb
or
push
loop
mov
pop
lock
or
xor
repz
add
pop
jb
sub
mov
mov
add
inc
and
add
push
lret
fidivrs
lcall
mov
pop
add
push
std
cli
orl
add
add
mov
jb
mov
mov
in
sbb
insb
pop
mov
out
jae
lds
sarb
ret
push
andb
out
add
dec
adc
add
sbb
cmp
loopne
cli
pop
cmc
aam
pop
pop
add
or
out
mov
addr16
lret
mov
add
xchg
xchg
sahf
int3
and
xchg
adc
inc
jmp
pop
adc
test
rcrb
sub
clc
fbld
sbb
push
aad
xchg
xor
pop
je
pop
push
jns
lock
mov
pusha
sub
aaa
icebp
cmp
dec
sahf
repz
pushf
xchg
and
cmp
mov
add
rorl
pop
mov
in
push
mov
or
and
stos
adc
shlb
mov
fidivs
add
mov
in
lret
cmp
lahf
jmp
ret
mov
js
stos
inc
sbb
into
in
dec
add
pop
fnstcw
or
cmp
xchg
mov
add
pop
xlat
leave
pop
addr16
ss
mov
add
bound
adc
ret
movsl
add
sbb
shrl
popf
add
or
mul
xchg
dec
add
movsl
into
and
mov
andb
cmp
and
push
pop
and
sub
push
sbb
mov
mov
das
push
int3
loopne
add
sbb
xor
mov
push
sbb
mov
stos
cmp
test
call
add
dec
xor
inc
out
outsl
jae
add
and
push
add
fdivl
xor
mov
add
xlat
adc
cmc
pop
add
xchg
scas
stc
jnp
add
sbb
not
out
lahf
or
mov
lds
test
push
lods
add
mov
mov
add
adc
push
divl
add
pop
xchg
jecxz
std
cmpsl
test
push
add
out
ss
daa
push
je
push
xor
out
test
jbe
add
fcomps
shr
add
jp
sub
jnp
push
xchg
pop
rcr
add
push
sarl
sbb
inc
jns
or
or
add
pop
pop
and
into
mov
shlb
push
xchg
xchg
cmp
sub
sbb
jno
in
jle
pop
movsb
out
xchg
lds
shlb
pop
cmp
sbb
mov
add
nop
hlt
lahf
add
movsb
mov
xor
repz
int3
and
das
mov
push
into
nop
mov
add
pop
jne
add
fisubl
push
cmp
push
inc
sar
lock
addr16
or
lahf
lods
das
add
test
imul
add
ret
lock
pop
bound
add
jae
fdivrl
lahf
ds
add
xor
mov
scas
out
pop
add
and
fisubl
adc
mov
add
adc
das
lcall
xlat
push
ljmp
fnstsw
jae
pushf
add
aas
test
imul
fucomi
xchg
xchg
jo
jnp
dec
jo
lock
scas
inc
sbb
repnz
mov
cld
subb
cmpsb
pop
or
rclb
in
and
add
pushf
out
jno
dec
insl
roll
icebp
sbb
sbb
push
adc
push
xchg
loopne
divb
push
fs
faddl
cmp
loope
cmpsl
or
stos
enter
push
hlt
ljmp
lds
sbb
inc
sbb
imul
jmp
xlat
dec
mov
stos
fnsave
jecxz
mov
mov
push
into
rcrb
std
mov
es
js
add
sbbb
mov
sub
test
jmp
ret
pop
xchg
jle
sbb
frstor
dec
adc
cmp
cli
or
out
push
mov
push
data16
movb
mov
sahf
mov
hlt
sbb
mov
out
push
adc
dec
add
adc
sub
mov
test
sahf
les
mov
mov
mov
add
and
clc
stos
add
mov
rol
cmp
xor
cltd
xchg
dec
ljmp
mov
mov
dec
add
sub
sub
xor
cmpsl
sar
xor
pusha
in
enter
aas
add
das
sar
loop
bound
rorb
in
add
pop
into
cs
add
push
aam
or
dec
push
js
faddl
testl
jnp
mov
jae
add
dec
loop
mov
mov
lret
inc
repz
mov
and
and
cmp
mov
adc
cmp
into
cmpsb
xchg
sti
dec
rolb
mov
and
dec
inc
aas
add
sub
mov
notb
jge
add
cmp
rolb
push
push
dec
cli
stc
xchg
push
push
add
mov
add
mov
xor
push
outsb
test
dec
cmp
adc
mov
add
faddp
adc
in
push
add
mov
jns
insl
cmp
icebp
adc
je
dec
xor
pop
or
adc
mov
and
dec
lret
mov
and
shll
repz
inc
mov
xchg
add
ljmp
xchg
push
add
push
jae
xor
dec
lea
dec
add
xchg
loop
jno
jg
aas
pushf
aam
lcall
pop
mov
test
jl
cmc
rcll
dec
mov
dec
stos
aad
inc
mov
pop
mov
inc
or
xlat
and
sub
aad
cwtl
js
add
loope
push
push
pop
and
inc
decb
or
in
test
shll
add
insl
cmc
pusha
jle
add
ret
push
lods
or
popf
test
mov
push
jp
cmc
adc
paddw
mov
imul
enter
xor
shr
sti
adc
push
iret
imul
push
dec
jl
xchg
cwtl
icebp
add
jle
push
mov
cs
je
add
xlat
fmul
add
xchg
shlb
jle
add
cli
mov
add
xor
test
shlb
out
cwtl
sti
push
sbb
jbe
xchg
sahf
pop
add
push
in
sub
subb
imul
jp
add
out
xchg
sbb
clc
fcmovne
jle
in
fdivs
push
add
mov
push
jmp
shrb
lock
add
jl
add
or
in
imul
jg
add
lea
add
out
sahf
inc
ret
test
jle
fbld
or
pop
mov
xor
notl
xor
push
pop
lods
int
adc
call
jl
cmp
cltd
test
mov
shlb
outsb
xlat
push
jae
leave
loopne
jle
push
mov
add
faddl
stos
pusha
and
cwtl
xchg
cmp
std
out
movsl
loope
or
push
mov
add
aas
idivb
inc
xor
jge
shll
out
mov
and
mov
cmp
fadd
and
sbb
scas
cld
cmpsb
shll
iret
stos
add
ret
push
ret
fiadds
mov
push
mov
pop
jg
add
lods
test
push
inc
add
stos
lods
imul
add
sahf
int3
cmp
mov
or
or
add
je
testb
rclb
in
lret
cmc
add
adc
cmpl
add
sub
enter
inc
pop
rcrl
loop
cwtl
jmp
sbb
cmp
cmp
repz
insl
paddsb
mov
xchg
or
jmp
dec
fsubp
push
push
cmpsl
bswap
or
xchg
lea
add
and
pop
add
outsb
hlt
pop
mov
clc
cmp
xchg
jnp
xor
icebp
cmp
sbb
aam
dec
xlat
sbb
sbb
iret
add
dec
xor
dec
add
mov
mov
mov
xor
cmpsl
aas
scas
das
adc
imul
add
jl
push
push
add
xchg
xchg
xlat
into
mov
pop
pop
dec
daa
rclb
test
outsl
repnz
rolb
lahf
jo
inc
lea
cld
add
push
cmp
popf
loopne
aaa
adc
dec
fdiv
push
pavgw
call
stos
dec
roll
fnsave
mov
pop
popl
subl
push
test
add
mov
lods
ljmp
xchg
add
push
testb
jmp
hlt
adc
in
lahf
add
dec
pop
fsubs
jae
stc
aas
out
orb
mov
push
jae,pt
mov
jecxz
loop
xlat
add
cmp
lods
pop
push
add
in
lahf
aad
mov
aam
mov
pop
shll
xor
and
js
jmp
add
mov
pop
add
sub
testl
cli
sub
popa
jae
cmp
add
pop
pop
jo
imul
stos
xor
and
js
add
call
dec
push
jecxz
sbb
test
lods
dec
or
xchg
filds
pop
fstl
lret
adc
add
popf
stos
xor
adc
add
push
fwait
mov
dec
pop
mov
or
notb
dec
mov
add
adcl
jmp
mov
and
aas
stos
sbb
jle
vcomiss
orl
inc
pop
add
push
push
or
shl
cltd
jne
mov
loope
fstpl
cmpl
outsl
psrlw
fistps
dec
inc
repz
pop
pop
push
fs
std
jl
inc
push
push
jo
add
lock
mov
mov
iret
rol
shrb
lods
inc
cld
add
mov
insl
xor
repnz
insb
xchg
cmp
push
shll
push
add
mov
cmp
xchg
pop
addr16
popa
shll
in
in
pop
aad
orps
xchg
inc
lds
test
jmp
lcall
jbe
das
inc
lahf
in
repnz
pop
movb
scas
push
jg
sbb
lds
jo
xchg
add
leave
fnstcw
or
int
rcr
inc
cmc
cld
add
frstor
sti
push
pusha
dec
sbb
mov
rcrb
sarb
repz
xchg
push
movsb
push
incb
or
mov
add
sarl
ljmp
mov
insb
pop
cmpsb
lods
aad
sbb
sub
test
jnp
ljmp
roll
das
jmp
std
xchg
add
mov
add
in
pushl
inc
add
xlat
or
in
ret
mov
pop
lret
movsl
add
repz
add
ljmp
aad
rorb
std
das
loop
add
imul
add
jg
sub
xorb
clc
jl
add
jns
mov
and
xchg
push
in
mov
aas
lret
popf
lret
mov
pop
fildll
ret
pop
in
dec
cmpsb
test
leave
pushf
cltd
push
inc
mov
cmp
cmp
in
xor
mov
lcall
jge
fs
mov
cmp
enter
and
dec
lock
je
cmp
std
pop
jne
push
clc
call
lahf
nop
ret
mov
pop
cmp
clc
push
fcomip
mov
lods
or
stc
jns
push
je
out
pushf
jo
add
dec
sar
mov
sahf
filds
addb
adc
stos
pop
sub
sub
mov
shl
add
dec
sahf
xchg
in
cmp
pop
pop
fsubrl
add
ss
mov
scas
mov
in
jae
out
in
ja
setg
jne
sub
xchg
clc
and
push
mov
sbb
add
xchg
and
mov
push
add
xchg
lret
jne
imul
jge
add
pusha
test
add
xor
lcall
adc
mov
lock
cmp
in
ret
add
jns
inc
imul
pop
dec
gs
add
out
int
add
test
push
add
pop
addr16
cmp
gs
das
jl
outsb
ds
adcb
pop
imul
inc
lock
pop
mov
cmp
stos
orb
dec
lret
push
cmp
add
insb
sub
pop
and
add
mov
cmpl
inc
fstpt
fs
add
mov
cltd
inc
push
cmp
dec
mov
test
pop
fiadds
scas
adc
mov
sbb
dec
xchg
cli
push
jne
add
iret
cltd
xchg
jp
adcb
push
inc
rclb
insb
mov
mov
mov
cmp
cmp
push
fs
add
fld
sub
xchg
adc
lods
add
or
insb
push
stos
sbb
mov
out
inc
pushf
lds
fiadds
cmp
and
sbb
rcrl
sub
pop
xchg
dec
fildl
xchg
adc
nop
lcall
pusha
add
negb
sbb
into
orb
sbb
add
mov
arpl
stos
push
ficomps
or
ds
push
mov
xchg
orb
fimuls
dec
cmp
or
iret
pop
add
mov
mov
add
push
lock
pop
insb
inc
add
loope
enter
gs
rolb
push
push
add
pmuludq
jnp
ljmp
imul
mov
dec
arpl
lock
add
aad
shl
loop
pusha
mov
js
mov
xchg
stos
out
roll
scas
fdiv
mov
cld
dec
cmp
into
and
stos
imul
repz
outsl
les
popl
cli
add
dec
call
xchg
add
xchg
sbb
jns
aaa
out
sub
adc
popa
inc
jle
mov
dec
cmp
mov
shr
add
jecxz
xchg
or
daa
xchg
pop
xor
pop
inc
jo
pop
repnz
dec
cmp
rclb
pop
neg
jle
jge
pextrw
mov
mov
roll
jge
mov
out
sbb
pop
or
xchg
repnz
cmp
inc
adc
idivb
popf
and
lret
jge
shrl
push
xor
jb
in
test
adc
in
in
jae
xchg
sub
push
fiadds
sahf
mov
xchg
jmp
mov
flds
or
icebp
ja
mov
fdivl
mov
pop
mov
xor
aad
inc
imul
pinsrw
jle
fadds
push
mov
clc
cmp
jne
adcb
nop
pop
nop
sahf
add
std
stos
sbb
iret
or
idivb
test
add
pop
arpl
pop
sbb
xchg
pop
loop
jns
add
mov
or
add
test
mov
mov
xor
out
sbb
add
sub
addl
fmuls
mov
or
pop
addr16
mov
add
mov
lea
mov
scas
dec
jmp
dec
flds
mov
cwtl
mov
imul
and
mov
jmp
daa
jg
add
dec
pop
inc
inc
sbb
jp
adc
movb
shll
add
dec
cld
test
loop
repz
imul
movsl
rolb
xor
je
pop
jp
add
cmpsb
jg
sub
sbb
add
fmull
mov
popa
std
inc
cmc
ret
push
jo
mov
adc
pop
into
adc
adcb
add
scas
sbb
jl
adcl
jno
inc
mov
call
dec
push
inc
ficoml
push
add
mov
jge
adc
xchg
inc
aas
cmp
mov
decb
pop
in
adc
jecxz
in
mov
into
xchg
mov
mov
inc
or
call
fsubrl
push
sub
std
and
adc
inc
lret
ffreep
add
mov
and
cmp
int3
mov
xchg
xor
mov
jp
xchg
mov
inc
shll
xor
dec
cmpl
adc
int
inc
pusha
lahf
stc
shl
add
push
inc
mov
mov
lock
adc
dec
loopne
pop
add
or
add
mov
cmp
in
in
adc
add
jmp
into
rorb
rcll
sbb
xchg
jle
in
roll
sub
xlat
xor
repz
cmp
daa
mov
mov
mov
bound
xchg
push
sub
add
ds
fcomps
test
pusha
and
add
cmp
test
fnsave
or
sti
mov
lcall
aas
loopne
outsb
pop
dec
mov
das
add
lea
sub
sysenter
inc
rcrl
sahf
cmp
roll
mov
or
inc
push
addr16
pushf
rol
pop
lds
cmp
int
push
sti
fs
cmova
push
mov
sbb
fcoms
add
dec
ret
mov
fistpl
shl
fstps
mov
push
add
js
imul
lahf
les
rol
fldcw
xchg
push
lret
arpl
and
in
add
cld
into
sahf
enter
add
out
mov
fiadds
mov
xchg
mov
lahf
cmpsl
out
push
ja
and
mov
push
cld
sahf
jns
add
xchg
xchg
jg
push
adc
insb
dec
shlb
sbb
out
sub
add
ds
rclb
jecxz
add
mov
roll
or
imul
mov
hlt
inc
orb
int3
fwait
or
movsb
pop
bts
pop
add
jg
loopne
mov
inc
pop
adc
out
inc
pop
pop
insb
xchg
cwtl
mov
xor
dec
dec
loop
mov
xorl
push
pop
jo
cltd
invd
and
bound
orb
int
mov
xchg
push
mov
add
and
les
jmp
movb
in
lahf
adc
xor
jae
sbb
sbb
cmc
adc
hlt
cmpsb
add
lcall
enter
mov
ds
xorb
cmp
add
add
and
arpl
hlt
pop
in
inc
add
mov
sub
mov
cmp
filds
pusha
or
pop
lods
or
nop
leave
fadds
sub
mov
and
push
int3
add
test
lret
jmp
fcomps
nop
xor
lock
gs
sti
nop
push
pop
ds
add
jmp
pop
push
lods
push
or
jecxz
fadds
jb
pop
sbb
inc
lret
add
cmp
sbbb
dec
jl
pop
je
push
push
xor
out
pop
addps
imul
test
xor
jnp
inc
mov
adc
sub
dec
fxch
aaa
fiaddl
mov
push
xor
adc
and
and
scas
shlb
cmp
add
cmp
xor
adc
xchg
hlt
cli
mov
xchg
and
and
dec
mov
lcall
add
and
repnz
push
push
add
mov
out
leave
xchg
add
mov
or
xchg
lds
das
fimuls
lahf
mov
out
sbb
add
shr
xlat
pop
jb
bnd
add
stos
pushf
xor
test
cltd
int3
test
in
pusha
adc
sahf
ret
loopne
mov
xchg
xlat
into
adc
fs
mov
pop
insb
sbbb
data16
xchg
add
jno
fmul
fmul
aam
bswap
add
aad
mov
enter
loope
fmuls
jge
add
fidivrs
iret
xlat
xor
add
popl
lods
inc
add
out
jne
add
in
mov
inc
push
cmpsl
add
iret
rep
aad
insb
ficompl
mov
ds
out
xchg
cld
push
or
sti
add
hlt
add
je
xchg
lods
push
dec
lret
dec
add
test
and
xchg
mov
xchg
mov
hlt
or
push
ret
in
mov
mov
jns
fucomip
mov
mov
cltd
xchg
push
inc
imul
int3
out
leave
in
sbb
das
pop
or
mov
sbb
add
aam
faddl
inc
test
mov
cmpsb
call
add
lret
cmpl
pop
cmp
sub
mov
sahf
push
aad
out
add
mov
popf
mov
into
push
and
xchg
push
add
stos
sbb
sbb
sahf
testl
faddl
repnz
shlb
push
add
insl
cmp
add
sbb
add
add
add
fadd
or
int3
lds
add
mov
insb
inc
add
cwtl
aam
stos
cs
or
jmp
add
push
rclb
loopne
pop
add
leave
cmc
adc
jne
insl
xchg
push
pop
daa
arpl
pop
les
add
jecxz
filds
popf
bswap
or
push
imul
add
cmc
testl
and
adc
add
mov
frstor
loope
popf
cmp
xorb
mov
cmp
int3
xor
add
stos
push
data16
push
pop
add
inc
dec
std
add
les
xor
fistps
stos
testl
cltd
push
mov
add
lcall
add
fadd
out
stos
or
xor
mov
lock
inc
lds
int3
ljmp
aas
fsub
mov
stos
push
in
add
mov
xchg
mov
add
repz
adc
addr16
andl
test
adc
testb
hlt
or
mov
je
mov
out
out
insb
mov
mull
xchg
ret
lock
add
mov
loop
mov
push
lods
and
xorl
loope
sahf
pushw
xchg
test
push
pop
enter
dec
roll
xchg
jle
je
gs
sub
popf
mov
insb
and
into
push
xchg
sbb
andl
add
popa
jo
add
mov
mov
ljmp
mov
and
dec
add
out
mov
lds
movl
loopne
cli
hlt
push
in
imul
mov
add
into
hlt
cmpsl
add
xor
stos
repz
dec
stc
add
add
cld
xor
cmp
sub
xor
test
into
or
movsl
outsb
out
push
dec
out
push
rclb
mov
pop
lds
out
cmp
add
mov
cmp
out
rcll
std
clc
cwtl
and
addb
fistpl
pop
inc
cmp
cmp
add
mov
sbb
jo
xor
pusha
rsm
mov
ds
sbb
push
jae
push
sbb
mov
jnp
popa
in
add
sbb
lret
jecxz
add
hlt
adc
pop
add
in
xadd
mov
push
imul
add
sti
les
scas
lret
cmp
lock
iret
add
inc
rclb
repnz
sbb
add
popa
jge,pn
xchg
jl
aad
int3
inc
incl
shr
cwtl
arpl
shlb
xor
fucomi
dec
test
dec
add
xchg
lret
lcall
fisubrs
js
leave
jo
in
inc
cmpsb
xor
xor
loope
pop
gs
nop
aad
add
xchg
or
repnz
sbb
orl
cmp
insl
add
push
xchg
test
jg
ljmp
add
aaa
add
mov
add
push
mov
jne
and
pusha
pop
adc
push
push
or
iret
jae
lds
jno
mov
outsl
out
arpl
add
das
aaa
daa
add
push
mov
add
adc
call
mov
lret
std
mov
test
add
outsl
mov
dec
fistl
movsl
out
pop
lods
out
lcall
movsb
stc
dec
mov
xor
push
lock
aad
add
fcmove
fwait
xor
rcl
or
cmp
ret
cmpb
sbb
ret
add
sbb
add
xchg
scas
into
inc
shll
inc
sbb
adc
addl
dec
mov
cld
cmpsl
jg
add
or
insb
loope
fucomip
add
pushf
ja
add
in
cmp
add
pop
sub
pop
sbb
ljmp
add
rcrl
sbb
adc
test
jno
in
gs
negb
int3
jp
ljmp
stc
pop
push
or
sub
cmp
fld
add
dec
aas
inc
shlb
pop
pop
add
int
push
xchg
lea
or
fsubr
mov
xchg
and
lods
adc
xor
dec
add
mov
mov
neg
or
jecxz
and
lahf
test
int3
loop
xchg
jo
loope
sti
out
in
rcrb
push
fisubs
call
and
mov
xchg
das
push
insb
add
inc
sbb
dec
mov
cmp
ret
cltd
lret
aam
out
push
daa
sbb
mov
loopne
add
inc
test
in
adcb
pushf
push
mov
push
shr
inc
mov
js
add
int
jmp
subl
and
jbe
xchg
in
in
addb
inc
cmp
add
cwtl
or
xor
xchg
scas
dec
subl
add
push
lret
repnz
or
mov
loop
xor
leavew
jb
lret
je
push
add
out
add
cmc
push
test
stc
ds
mov
pop
in
orb
loopne
scas
dec
into
add
out
cltd
mov
repnz
pop
cmovae
xchg
js
pop
movsb
add
jle
mov
jecxz
rorb
pop
push
ret
add
popa
add
pop
cwtl
xor
fxch
loopne
test
addl
or
cs
in
fadds
ror
sbb
sbb
fwait
stc
fistl
sahf
adc
cmp
dec
add
pop
inc
addr16
int3
fiadds
rcll
and
add
or
leave
adcl
push
mov
inc
add
rorl
movlps
jl
mov
dec
add
shrb
or
das
mov
mov
sbb
pop
sub
aas
test
scas
push
je
mov
push
in
mov
jae
push
cwtl
inc
jg
nop
mov
xchg
jp
rcl
add
cwtl
icebp
add
adc
pop
sbb
xor
add
ljmp
mov
outsl
jle
mov
sbb
push
test
add
ljmp
fbstp
pop
pop
pop
fisttpl
push
or
dec
stc
add
cmp
dec
jg
fcompl
push
inc
add
stc
cmpsl
mov
add
xor
add
or
xlat
add
push
rorb
push
bound
int3
aad
lret
pop
mov
cmpsb
insb
loopne
icebp
adc
adc
mov
sub
mov
mov
jmp
inc
mov
sub
std
aas
mov
int
inc
roll
cmp
fwait
mov
std
mov
rclb
pop
push
stos
add
and
lret
push
icebp
pusha
xchg
jp
pushf
pop
nop
jecxz
and
lock
inc
adc
repnz
jg
into
push
insl
rorb
orl
xor
mov
je
jl
mov
pop
bound
iret
out
sub
repnz
pop
mov
scas
aam
add
dec
xchg
ds
aas
inc
rolb
inc
fsubs
fs
iret
add
sbb
imul
xchg
nop
mov
push
les
xor
mov
jne
push
js
add
dec
mov
mov
lcall
loop
mov
dec
add
mov
scas
imul
mov
jae
out
adc
sbb
arpl
pusha
shl
test
cld
sub
xor
mov
out
adc
and
add
int
jle
add
repz
add
fistl
ds
addl
outsl
jo
cld
add
push
imul
push
aas
dec
sbb
mov
push
cmpb
dec
adc
mov
mov
enter
ljmp
jle
std
lahf
sub
push
repz
and
popa
sti
aam
aam
fsubs
sarb
clc
mov
notb
xor
ret
mov
fxch
add
dec
dec
jge
sub
and
jmp
add
out
and
cwtl
pop
in
lsl
call
sbb
lret
add
push
ss
jge
daa
or
mov
lret
xchg
rolb
jmp
pop
rcl
add
mov
ja
xchg
ret
push
xchg
aaa
addl
add
ret
push
inc
add
cmp
aad
mov
popf
adc
add
push
stos
or
xchg
movsb
inc
adc
pop
sbb
jl
mov
out
push
add
jbe
subb
repz
add
popl
or
push
incb
cmp
pop
mov
popa
sbb
cmp
orb
xor
aad
stos
add
dec
sbb
sbb
loopne
scas
nop
push
aaa
jge
add
jp
jbe
push
out
add
pop
adc
rcr
xor
mov
rolb
repz
dec
push
add
and
jbe
stc
pop
pop
add
ret
repz
leave
jmp
adc
add
lret
jecxz
xor
mov
mov
aaa
dec
shlb
adcl
add
cmp
add
js
mov
xchg
dec
or
add
push
push
pop
dec
fsubp
and
roll
push
lds
inc
imul
inc
sbb
xchg
scas
adc
add
rcll
xor
pop
lahf
inc
cmp
dec
cli
add
mov
jb
bnd
fnstsw
fstps
push
pusha
jl
dec
inc
push
dec
push
sub
in
outsl
mov
lea
leave
stc
clc
add
in
jmp
add
inc
loopne
paddq
pop
pusha
jge
imul
add
and
add
nop
clc
stos
dec
dec
aam
add
sbbb
xor
inc
cmp
jne
add
inc
scas
or
stc
xchg
cmp
sbb
es
add
and
xlat
nop
dec
add
scas
inc
cmp
dec
cmc
add
testb
push
dec
add
lock
mov
rolb
push
add
ds
mov
jne
jae
test
ffreep
pop
push
cmpsl
jb
int3
addr16
add
and
in
mov
stos
jne
sbb
jge
or
mov
adc
lahf
roll
mov
xor
and
cmp
add
mov
jb
add
push
fstpt
fdivrs
movswl
ret
add
xor
enter
push
xchg
pusha
mov
imul
shr
imul
lret
jno
pusha
dec
out
arpl
lods
jb
add
lea
add
cmpsl
dec
movsl
mov
cmp
mov
in
faddl
outsb
lcall
dec
imulb
lock
inc
mov
pop
xorb
push
in
pushf
add
ret
stc
xlat
pop
add
pop
pop
fists
jmp
in
cmpsl
aam
addb
ret
inc
jg
push
cmp
mov
mov
hlt
inc
mov
sbb
add
cmc
int
and
add
push
cmp
aam
mov
fcompl
xor
fs
dec
andl
clc
enter
outsl
movsl
add
xchg
sbb
mov
addb
cltd
add
in
inc
or
mov
bound
jge
mov
das
cltd
mov
mov
xor
in
repz
cmpsl
aaa
add
lds
fbstp
fldcw
dec
mov
mov
add
sbb
push
data16
cmp
cmpb
mov
out
xchg
jp
rorb
ret
add
push
scas
xchg
jecxz
inc
add
shlb
jp
jle
sbb
lods
enter
cmp
std
add
jne
add
pop
fldl
stos
gs
cmp
lods
jg
mov
and
out
xchg
dec
aad
cmp
enter
mov
push
enter
daa
or
mov
push
inc
jb
add
jg
mov
lods
dec
pop
add
push
les
js
add
ljmp
add
mov
fcmovb
add
out
aam
stos
adc
call
ret
sbb
cli
cmp
push
lock
repnz
mov
pop
xchg
jne
rclb
xchg
mov
add
fstpl
scas
add
out
ds
xchg
xorl
pushf
mov
stos
lock
and
ja
stc
push
sub
or
sub
in
mov
inc
out
sub
movsb
fdivp
adc
mov
push
push
sbb
jbe
pavgb
add
mov
std
sub
ja
add
push
dec
xor
sti
movsl
add
aaa
push
add
jnp
mov
lods
ds
ret
aas
rolb
xor
fsubl
popf
pop
add
int
js
push
sarb
enter
cs
mov
stos
das
stos
cmp
lods
adc
inc
pop
lods
xor
jl
mov
ffreep
cmp
add
push
push
rorb
add
add
ljmp
aad
xlat
add
add
call
out
je
mov
jp
add
or
lock
jmp
mov
xchg
sbb
xor
add
push
repz
jo
xchg
fs
outsb
lock
rcll
movsl
mov
sbb
loop
sbb
sub
repnz
add
xchg
push
cmp
enter
xor
sub
mov
add
loopne
les
add
jle
into
push
pop
loopne
pop
add
pusha
mov
or
xlat
mov
cmp
xor
pop
or
das
aad
sbb
add
scas
jge
into
or
add
push
jmp
pop
roll
test
pop
fsubr
ja
cs
in
shll
pop
sub
push
insl
cld
lds
call
adc
outsb
add
int3
test
popf
aam
cmp
out
xlat
xor
dec
or
roll
push
inc
inc
outsl
mov
pop
inc
inc
push
and
xor
dec
xor
mov
inc
inc
movsb
fdivs
sub
inc
xchg
iret
enter
pop
add
out
cld
mov
shll
cld
mov
pop
iret
inc
call
add
xor
lds
das
push
sub
xorl
ds
add
stos
dec
mov
jnp
sub
jg
mov
mov
cwtl
pop
mov
arpl
jg
stc
xchg
sub
mov
sar
cmpl
add
imul
xor
mov
xor
add
mov
test
dec
loop
pop
daa
xchg
mov
iret
inc
adc
jnp
xchg
cmp
jge
hlt
xchg
cmpsl
aas
cld
xchg
pop
loope
rcrl
mov
sbb
aam
xchg
adc
jmp
cli
test
pop
xchg
and
push
add
loop
xchg
rcll
add
in
xor
loope
sub
jmp
jle
add
adc
xor
inc
sbb
lock
fwait
add
out
cltd
inc
lret
jne
add
dec
ret
xchg
loopne
mov
add
inc
scas
mov
shlb
orb
jle
jg
inc
enter
cmp
pop
pop
xor
xchg
imul
cs
inc
dec
add
lds
xor
mov
imul
incb
and
push
mov
inc
adc
cs
mov
pusha
add
cmp
dec
add
add
aaa
lods
mov
add
js
int
pop
std
les
in
xor
cmp
sbb
ret
test
xchg
jbe
ljmp
test
pushf
pop
xor
in
sbb
add
lods
push
mov
add
in
pop
orb
push
add
int3
mov
or
xchg
push
scas
clc
les
add
hlt
popf
mov
push
add
mov
push
loope
adc
push
mov
fidivl
cli
and
mov
add
or
dec
mov
add
mov
xchg
test
shl
add
repnz
scas
sub
pop
xchg
mov
add
aaa
mov
cmp
jmp
cmpsb
shlb
add
xor
pusha
jg,pt
pop
add
pop
adc
in
out
lret
pop
jno
xchg
mov
and
sbb
jp
add
movsb
and
lcall
and
enter
jge
jmp
inc
into
les
push
and
cmc
inc
cmp
mov
lds
clc
jnp
jno
orl
dec
add
rorb
sub
sar
fcompl
add
aam
repz
test
out
jecxz
in
les
mov
pop
jo
dec
add
mov
jmp
add
cmp
arpl
inc
jnp
xchg
xlat
iret
ret
mov
test
or
pop
cltd
add
fstps
fucomi
into
adc
icebp
and
mov
add
mov
push
nop
mov
in
xor
lret
cmp
clc
cmp
xchg
jmp
out
push
pop
mov
rclb
fdivrp
sbb
es
mov
fwait
rol
add
in
or
inc
addl
jns
add
lret
xor
push
dec
push
add
dec
mov
pop
scas
add
inc
jns
cmpsb
pop
xlat
sbb
sbb
cmp
add
xor
cmp
sub
test
mov
push
pop
nop
xchg
mov
stos
test
add
pop
gs
add
inc
inc
mov
cmp
hlt
pop
and
nop
aaa
pop
mov
jg
idivb
inc
and
pop
in
popa
insl
ret
aam
imul
sub
rorl
cltd
xchg
idivl
adcl
rorb
xlat
in
sbb
frndint
xor
test
cwtl
dec
jmp
movsb
xchg
mov
dec
push
or
mov
aaa
add
add
ss
lock
hlt
repz
jmp
sti
dec
incl
sbb
sbb
inc
cmp
pop
pop
lcall
mov
mov
insb
vpackssdw
or
pop
push
xchg
loope
loop
roll
mov
adc
fdivs
inc
pop
inc
and
outsl
jo
lret
push
xor
inc
adc
std
lahf
mov
mov
insl
add
cltd
or
pop
jecxz
xchg
jp
repnz
push
pop
inc
push
rol
loopne
adc
lods
add
jbe
pop
mov
dec
and
add
mov
cmp
scas
xchg
or
push
enter
aaa
into
add
xchg
rol
cmp
dec
sbb
ljmp
iret
hlt
out
pcmpeqb
sar
pusha
and
add
inc
out
sbb
or
orb
push
mov
add
pop
add
cmpb
lds
pop
mov
leave
mov
mov
std
ds
sbbb
pop
mov
jnp
lcall
sub
or
cmp
in
repz
pop
or
shrl
xchg
je
sub
mov
lds
adc
es
sbb
push
cmpl
roll
inc
sub
add
adcb
add
arpl
sbb
sbb
push
pop
or
dec
out
add
xchg
imul
add
xchg
push
mov
pop
pcmpeqd
xchg
add
icebp
xor
pop
inc
roll
dec
inc
inc
pop
xor
mov
loopne
insb
shlb
or
mov
dec
xor
bnd
add
int3
jp
pop
std
orl
and
add
mov
test
popa
ret
push
cmp
jne
cmp
add
pop
cmp
mov
fiaddl
scas
addr16
pop
sbb
sarl
add
mov
movsb
aad
and
xchg
ret
repnz
add
sbb
pop
add
or
dec
pop
add
push
popa
inc
add
dec
jp
dec
adc
lahf
pop
inc
scas
add
sbb
dec
jge
push
jp
xorb
iret
sub
imul
cmp
add
outsl
inc
sub
xchg
ds
fidivrl
cmp
push
cld
push
lods
xchg
dec
sbb
xor
jg
mov
int3
pop
inc
add
mov
or
dec
xchg
nop
mov
sub
mov
pop
pop
xchg
dec
and
push
xchg
add
ja
dec
test
ds
test
mov
test
stos
std
mov
adc
loopne
out
add
or
inc
js
mov
lahf
jecxz
test
add
fs
add
add
xchg
outsl
lds
or
inc
rcll
test
mov
rolb
pop
or
pop
xchg
sub
sbb
lds
pop
pop
xor
mov
enter
push
jne
mov
rcrl
xchg
dec
stos
push
mov
add
loop
packuswb
push
inc
ret
cmpb
or
add
fstps
dec
and
addl
adc
mov
pavgb
jle
mov
sbb
xlat
mov
je
mov
add
out
push
js
fcoml
sub
jge
add
mov
dec
xchg
mov
pop
inc
rorb
pop
and
mov
add
sub
sub
dec
cmp
aas
add
add
jne
jae
jo
pop
add
mov
addb
add
loop
pop
add
mov
xor
fildl
leave
enter
and
test
or
addb
add
iret
adc
sbb
lret
jae
mov
inc
add
aaa
mov
xchg
enter
mov
pop
push
cmp
ret
mov
adc
ror
jo
sbb
fs
out
inc
out
push
dec
aaa
dec
add
movsb
mov
or
mov
xor
push
fistps
fucomp
mov
into
push
xchg
mov
dec
add
push
out
mov
adc
add
dec
enter
inc
adc
pop
sbb
les
mov
fisttpll
and
popf
xor
jbe
arpl
add
cmovo
inc
add
into
mov
push
xchg
or
call
arpl
pop
and
ljmp
add
push
and
add
std
or
paddq
scas
sub
mov
push
xchg
adc
das
arpl
add
aad
mov
inc
add
mov
cmp
push
sub
inc
mov
add
insb
js
add
cmp
pop
insl
aam
pop
add
fildll
add
inc
inc
mov
jmp
inc
push
add
das
pop
jg
loopne
add
push
pop
ficoml
dec
jnp
add
lcall
add
incb
enter
iret
sahf
lea
sbb
add
loopne
lods
xchg
add
mov
mov
pop
movsl
int3
cmp
sbbb
dec
add
and
ljmp
jo
movsl
xchg
add
jecxz
adc
loop
mov
aas
gs
jne
popf
rcl
jnp
in
add
push
sbb
jmp
sbb
add
pop
loopne
sbb
add
lcall
mov
rolb
outsb
ja
notb
aad
data16
lahf
sbb
pop
xchg
pop
adc
and
push
mov
out
test
add
insl
inc
ret
out
jp
pop
pusha
lods
xchg
xor
dec
pushf
add
push
dec
dec
in
inc
push
arpl
adc
dec
lods
js
mov
inc
cwtl
xchg
movsl
dec
push
cmp
rol
test
jp
punpckldq
pop
inc
les
push
and
imul
jo
leave
push
add
pop
dec
sub
xchg
push
add
addr16
sti
lods
inc
push
out
push
or
inc
fsubrs
add
enter
cltd
hlt
jmp
movsl
outsl
add
sarb
inc
dec
out
and
xor
add
sbb
outsl
pop
sbb
dec
or
mov
add
pop
sbb
add
cmpsb
dec
dec
add
mov
add
dec
inc
popf
push
xor
jbe
daa
cmp
or
mov
push
pop
dec
leave
sti
and
inc
jp
mov
les
repnz
sbb
sbb
dec
inc
adc
repz
dec
add
mov
push
rorl
cwtl
or
inc
fsubrl
inc
addr16
jg
add
enter
fsub
adc
pop
xor
push
xor
es
ja
pop
xchg
xchg
das
add
pop
mov
mov
pop
mov
ret
jl
pop
xor
outsl
int
aas
adc
add
fs
or
leave
in
add
daa
inc
jbe
gs
aas
lock
js
adc
mov
jns
dec
sub
cmp
and
xchg
mov
mov
pop
and
dec
add
lock
in
add
inc
dec
mov
pushf
cmc
and
pop
jmp
mov
shrb
mov
stc
mov
ss
aas
ja
jno
rcrb
fwait
inc
sbb
ficoml
inc
outsb
or
hlt
repz
out
int3
mov
push
ficoml
cmp
mov
data16
push
add
insl
push
or
jecxz
ljmp
cld
loope
mull
pop
leave
cmp
inc
loop
push
insl
inc
dec
dec
lret
sub
std
inc
imul
sbb
dec
inc
push
imul
data16
xor
inc
mov
add
out
jmp
out
adc
shll
pop
xor
repnz
lahf
addr16
adc
xor
mov
in
hlt
popa
lock
add
clc
inc
add
jns
mov
pop
cmpb
add
jne
cmc
in
out
inc
loopne
jb
jae
sbb
orb
jns
push
jmp
clc
lods
mov
sbb
and
mov
add
mov
adc
add
push
scas
testl
int
shrb
add
xor
and
add
push
push
int3
int
jecxz
add
je
fptan
loopne
test
sub
jo
pop
push
xchg
jecxz
sub
or
add
repnz
push
jg
test
inc
test
addr16
inc
daa
dec
int
gs
subl
into
push
add
push
xchg
adc
std
and
mov
mov
out
outsl
cmp
rorl
push
cli
mov
inc
push
cwtl
add
fidivrs
lea
push
sbb
inc
jge
mov
jne
add
aas
adc
data16
mov
cmc
sbb
add
mov
gs
and
imul
test
mov
nop
add
std
in
xchg
mov
lds
imul
or
fwait
cmpsl
xor
cmp
xor
or
and
andb
xor
jne
push
test
test
in
add
pop
cmp
fwait
add
dec
jbe
stos
and
insl
add
aam
cltd
inc
outsl
sbb
lods
pop
cmp
and
sbb
pop
dec
dec
cmpsb
imul
adc
jb
ds
xor
mov
call
pcmpgtd
push
add
imul
aam
roll
insl
fsubs
pop
push
outsl
mov
rcrb
mov
or
xor
nop
xchg
sub
pop
add
fldt
add
dec
mov
in
sub
rorb
mov
cmp
scas
negb
dec
aad
shr
int3
push
push
push
dec
repz
enter
repnz
cmc
clc
mov
cmp
add
stos
mov
push
enter
aaa
fldl
loop
and
and
xor
add
insl
iret
pop
je
mov
mov
inc
add
pop
jl
inc
jne
adc
loope
cmp
adc
sbb
inc
adc
inc
cmpsb
add
cmp
xadd
jb
jbe
fistpl
fadds
sar
add
popf
stos
add
repnz
enter
into
cmp
xor
sub
mov
add
test
pop
scas
pop
jb
add
push
and
bound
mov
sbb
js
add
jae
or
pop
fildll
jno
es
push
adc
sahf
pushf
data16
and
mov
jl
test
imul
jnp
and
iret
xor
cmpsb
dec
push
shlb
daa
jno
lds
cmp
clc
icebp
loope
pop
shlb
add
jns
in
loopne
loope
dec
cli
xor
clc
mov
dec
dec
test
fstpl
lock
jno
icebp
das
int
push
stos
outsw
lcall
mov
cli
inc
lock
in
push
lock
mov
shlb
pusha
or
lea
add
cmp
out
addr16
pop
outsl
cs
jae
add
jg
cli
inc
xchg
movsb
testb
jno
imul
jecxz
aam
add
or
into
inc
add
rcr
lret
fcoms
dec
loop
outsl
mov
sub
jecxz
clc
add
or
adc
jbe
sbb
mov
lock
sub
in
int3
pop
push
or
imul
mov
stos
cmc
movl
jo
outsb
add
pop
leave
lock
outsl
add
sbb
out
push
cmp
cld
rclb
addb
mov
sbb
mov
xor
mov
add
outsl
mov
cli
add
fcmovnu
sti
mov
ret
push
dec
sub
xchg
lods
jnp
pop
push
cwtl
inc
orb
mov
push
add
divl
jbe
fiaddl
addr16
test
cmp
or
ds
into
xchg
lds
movl
loop
xor
adc
out
pop
test
mov
push
les
inc
inc
jne
pusha
arpl
in
sbb
dec
adc
pop
push
enter
add
xchg
inc
adc
movsb
les
jle
mov
data16
ficoms
int3
add
popf
dec
cld
mov
inc
fldt
mov
add
adc
push
inc
add
dec
xchg
cmp
jno
lds
push
xor
aam
push
stc
imul
sub
data16
cmpsb
cwtl
outsl
pop
or
sbb
mov
or
jae
in
push
mov
pusha
mov
xchg
gs
test
push
mov
into
add
int
repz
pop
pop
add
mov
sbb
push
out
jns
cmp
js
cmp
jge
pop
lcall
add
sub
dec
pop
out
in
test
xchg
add
jl,pn
stos
enter
pavgw
mov
jl
dec
aam
push
push
shlb
push
xchg
pusha
add
jle
xor
add
in
lods
in
popa
int
bound
xor
sub
sarb
jae
ret
add
add
pop
cltd
mov
jg
mov
std
insb
jg
add
stc
dec
add
sbb
pop
push
jp
add
push
jno
sbb
leave
ds
add
mov
add
je
inc
out
js
add
sub
dec
shll
adc
icebp
stc
jl
and
add
loopw
sbb
mov
pop
shll
lret
xchg
mov
push
loopne
push
roll
test
push
cltd
add
mov
add
push
lock
or
add
push
aad
in
adcb
repnz
movsl
xchg
out
insb
add
ret
std
jbe
add
cltd
jne
mov
push
or
inc
repnz
aad
int3
lahf
pop
add
dec
jmp
pop
xchg
sbbb
xor
adc
dec
je
cmc
mov
push
pushf
adc
ja
push
cld
xchg
incb
mov
imul
mov
je
add
das
jge
leave
shlb
inc
cmp
je
fisttpll
add
xor
add
mov
into
popa
dec
add
add
add
mov
jl
add
stos
push
mov
cwtl
sbb
fnsave
lock
or
adc
lret
cmp
insb
cltd
mov
gs
push
cwtl
add
jge
push
stc
dec
divl
cltd
or
idivl
adc
pop
stc
add
mov
cmp
andl
rolw
or
call
int3
iret
movsb
fnstenv
inc
mov
clc
mov
and
adc
add
cmpsb
imul
dec
test
aad
mov
cwtl
inc
add
adc
aam
cmp
inc
hlt
stos
sbb
in
inc
mov
add
jg
mov
dec
jae
jp
add
mov
addr16
frstor
lcall
cmp
add
mov
scas
ds
aas
dec
mov
add
into
orb
sub
mov
cwtl
adc
push
push
lods
pop
mov
push
aam
mov
pminub
leave
push
ljmp
in
push
inc
cmc
shl
adc
aad
lss
dec
push
sub
mov
mov
loope
cmc
movsl
cmp
ljmp
mov
mov
add
mov
dec
sub
imul
sub
or
imul
dec
inc
xlat
push
and
pop
cld
in
add
mov
gs
sbb
add
dec
shl
inc
pop
out
add
pop
or
rcl
addr16
adc
sbbb
out
popa
enter
jae
mov
sub
push
jecxz
loope
fistpll
loopne
push
or
sub
push
test
sbb
ret
add
pop
mov
rcrl
and
cmp
lods
add
jae
rorl
ret
popa
cmp
push
mov
pusha
add
jg
add
mov
jae
inc
xchg
sahf
pop
adc
bound
mov
mov
jae
ljmp
scas
adc
or
adc
xlat
rol
fwait
adc
adc
addl
loope
arpl
pop
xlat
add
xchg
and
popa
jae
add
xor
add
lds
add
outsl
sub
daa
movsb
es
add
out
adc
xor
andl
lcall
mov
or
jl
aaa
xor
and
mov
movb
xor
imul
pop
add
je
cmpsl
sub
mov
sub
ret
fstl
add
cmp
add
lret
leave
inc
dec
pop
sbb
cmp
popa
lret
xor
xor
mov
movsl
jmp
shlb
sub
sbb
cmp
pop
adc
jl
cmp
mov
jle
jmp
ret
push
dec
loopne
popf
cmp
push
add
adc
pop
es
imul
add
add
enter
mov
in
add
arpl
jecxz
pop
jnp
cmpb
ret
add
xor
xchg
jge
or
xchg
xchg
test
rolb
push
or
fmull
ret
bound
jmp
or
sbb
aaa
scas
add
jne
dec
int
sub
mov
hlt
test
dec
or
or
mov
out
call
add
add
dec
stc
sbb
adc
in
inc
pop
mov
dec
sub
in
dec
inc
or
in
aam
mov
adc
cmp
pop
mov
std
inc
shlb
push
cwtl
xchg
adc
pop
sbb
jnp
jge
add
movsl
add
jecxz
insb
push
frstor
pusha
jp
push
leave
or
add
rcrb
xchg
nop
add
fmuls
add
les
inc
and
sti
mov
js
jbe
lret
sbb
pop
popa
addb
add
jae
stos
dec
imul
add
mov
das
dec
je
add
lcall
nop
dec
sub
cmp
add
xor
inc
dec
add
pop
nop
es
sub
pop
enter
inc
xchg
xor
xor
push
inc
pop
cli
push
scas
inc
lds
movsl
adcb
xchg
out
add
pop
das
daa
dec
outsl
or
add
mov
add
in
inc
loopne
add
add
sub
mov
pop
adc
jno
addr16
sbb
inc
ss
cmp
jb
add
mov
mov
jb
mov
lds
add
cwtl
in
pop
js
add
jg
int
daa
cmp
sbb
adc
fnsave
jle
js
cld
push
jne
push
xchg
xor
out
roll
jmp
or
lret
pop
xchg
xchg
inc
cmpsb
jns
add
fadd
bound
movsb
popa
add
xchg
leave
mov
notl
lret
cwtl
jge
fs
arpl
ds
add
jb
push
xor
andl
std
in
bound
ret
roll
aam
dec
push
push
and
dec
flds
add
cmp
add
das
lods
sub
inc
add
jp
push
pusha
jmp
pop
int3
cwtl
loop
jg
add
rolb
arpl
fmul
push
lahf
push
push
movsl
inc
sbb
mov
lods
mov
adc
inc
mov
xchg
sti
out
stos
cmp
sbb
push
aaa
xchg
sbb
test
xchg
ret
arpl
loopne
jl
int
or
dec
jo
pop
push
je
dec
xor
inc
cld
insb
adc
mov
sahf
and
add
xchg
fdivrs
clc
mov
pop
add
lods
xchg
lock
add
inc
shrb
mov
jmp
dec
dec
bound
inc
add
and
out
jne
add
inc
in
in
rcl
or
inc
push
cmp
inc
ret
les
mov
sti
pusha
xchg
shrb
and
loop
inc
xor
and
pop
push
scas
sub
add
insl
xor
mov
mov
pop
add
mov
mov
lods
or
aaa
push
mov
adc
and
arpl
add
imul
mov
add
inc
clc
les
push
pusha
dec
loopne
fiaddl
inc
out
hlt
lods
pop
fs
push
inc
arpl
mov
mov
in
pushf
jecxz
cld
mov
filds
and
add
jmp
add
je
cli
xor
mov
mov
mov
add
dec
inc
rclb
cld
push
add
iret
add
lret
cvtps2pi
add
push
pusha
fldl
ds
xchg
jl
add
movsl
adc
dec
movsb
iret
jnp
call
sbb
pusha
rorb
xchg
clc
enter
mov
not
lods
pushf
in
pusha
add
xor
test
mov
lahf
sbb
mov
jno
repnz
add
lahf
cmp
inc
insl
scas
js
imul
cmp
add
push
ds
fwait
gs
and
inc
das
dec
jmp
cmp
popl
inc
adcb
add
mov
add
clc
pop
cmpsb
inc
xchg
stos
leave
jg
add
shl
mov
int3
dec
arpl
add
scas
mov
movb
test
out
aas
jg
ds
std
sbbb
jecxz
push
inc
add
shlb
decb
mov
mov
ret
push
hlt
pop
pushf
inc
cmp
in
xchg
ds
sbbb
and
lods
inc
js
add
mov
push
add
je
in
push
add
fcmovnbe
push
out
dec
add
cmp
jbe
add
inc
enter
mov
clc
cs
add
jno
dec
xor
jmp
sbb
aas
add
cmp
out
adc
jns
add
fldcw
mov
scas
shlb
sahf
jae
loop
add
inc
stc
pop
or
faddl
dec
dec
jne
fisubl
or
dec
xor
and
ss
pop
add
lcall
push
adc
jmp
arpl
scas
add
loop
lahf
cmp
pop
mov
imul
jmp
out
add
inc
xlat
push
dec
pop
mov
cmp
fsts
mov
add
push
cli
call
mov
faddl
cmp
inc
push
in
mov
sti
aad
inc
xor
xor
cmp
pusha
add
shrl
cmpsb
cmc
inc
sub
mov
outsl
inc
push
push
insb
or
lods
shll
fldl
pop
mov
lcall
push
adc
adc
loopne
ss
out
inc
sub
into
add
jb
out
inc
call
and
add
bound
out
cs
cmp
pop
mov
loop
jbe
dec
inc
lret
cmp
jecxz
in
push
das
and
loopne
cmp
cmpsl
andb
xchg
filds
ss
and
sbb
xor
aam
dec
add
mov
add
add
daa
cmpb
xchg
insb
shr
out
sub
cmp
mov
jge
orl
cmp
in
xchg
xor
lahf
jo
mov
test
outsl
or
roll
mov
jle
xor
push
add
cwtl
adc
mov
les
add
jl
cmp
inc
mov
movsb
and
push
add
mov
add
jge
dec
push
iret
add
in
dec
inc
lcall
mov
add
pusha
xlat
sti
mov
jl
or
cs
ret
insl
shlb
popl
jg
sarb
mov
xchg
sub
dec
addr16
jge
mov
and
push
loop
in
insl
add
xchg
jae
and
jecxz
adc
pop
sub
fs
add
pop
push
std
orb
fildl
and
push
dec
add
and
jnp
xor
pop
shrb
cld
pusha
mov
jb
inc
mov
mov
jl
push
ss
cmp
and
inc
jmp
in
add
es
cmp
jp
or
popa
sti
mov
add
aas
push
sub
fsubp
in
mov
aaa
mov
sbb
add
iret
lea
push
push
add
inc
insb
adc
test
scas
arpl
loopne
inc
inc
pushf
sub
sbb
push
pop
dec
call
sarb
mov
mov
pusha
jo
ds
add
test
push
jp
jl
sub
inc
add
xor
cmpsl
add
xor
lret
popa
add
js
sarb
outsl
jg
call
pushf
ljmp
jo
pusha
mov
mov
add
adc
jge
mov
repz
add
popf
subb
xchg
bound
call
fdivs
fldcw
inc
add
jnp
or
add
pop
ljmp
out
lahf
loop
sbb
dec
outsl
arpl
push
xchg
in
sub
ficoml
insl
stos
add
push
in
mov
dec
andb
outsl
test
add
dec
loopne
cmp
pushf
mov
xchg
pop
pusha
loope
out
add
sahf
and
jl
add
mov
xchg
push
push
loopne
lret
pop
mov
pop
push
inc
rcrb
add
push
aam
jmp
in
outsl
sar
arpl
and
sahf
adc
clc
add
inc
or
jnp
adc
add
nop
xor
sbb
lods
sti
cmp
and
pop
mov
popa
xchg
or
sub
inc
push
cld
add
and
cmp
dec
add
addl
sbb
dec
fbld
jno
jp
fidivs
push
shlb
aas
mov
mov
out
rclb
jmp
mov
pop
repnz
xchg
add
push
xchg
call
push
lock
pop
add
add
in
adcl
sub
ja
pop
mov
icebp
cmpb
cltd
mov
rolb
fstpl
mov
add
mov
aaa
std
add
shll
scas
push
flds
or
addr16
jbe
rcl
es
addb
pop
test
inc
xor
loopne
add
shlb
imul
mov
add
lds
cmp
lret
mov
rorl
fadds
jnp
loop
cltd
in
inc
cmpsl
jo
xor
xchg
mov
inc
lock
pop
jbe
add
dec
cli
adc
cmp
in
add
jle
mov
xchg
add
or
add
bound
sub
cmp
xchg
mov
inc
jno
inc
fmull
sbb
pop
lds
jge
cmp
xor
dec
and
jno
add
daa
jne
dec
sub
add
cmp
inc
push
cmp
add
mov
add
jge
ds
dec
sbb
in
xchg
inc
dec
stos
mov
xchg
rolb
xchg
push
andl
dec
xor
xor
add
inc
mov
arpl
pop
ds
add
pop
cmp
push
dec
or
in
sti
cmpsb
push
sub
mov
cmp
mov
and
or
imul
dec
add
mov
or
add
xlat
mov
add
jne
jmp
adc
mov
jnp
jo
add
shll
clc
repnz
pop
jge
test
dec
jp
ret
push
shl
inc
in
xor
add
push
mov
add
sub
ljmp
pusha
sub
insl
pop
out
call
fdivrl
add
mov
arpl
insl
mov
add
pop
cmc
sbb
movsb
aad
mov
mov
fiadds
sbb
std
and
das
mov
jb
stc
lret
push
and
xor
and
or
inc
icebp
fidivrl
sub
jns
dec
add
mov
and
adc
or
cmovno
rolb
subl
inc
pmulhw
lcall
adc
mov
sub
movsl
in
push
or
pop
xor
mov
inc
loopne
xchg
repnz
into
add
inc
rol
fisttpll
cmpsl
movsl
out
mov
xchg
pop
mov
mov
out
pushf
in
fsubl
add
cs
mov
dec
test
inc
dec
add
clc
sti
add
test
xchg
add
jl
xchg
cmc
add
add
ljmp
daa
shll
mov
cmp
test
dec
xchg
mov
add
adc
mov
or
push
push
into
inc
or
cli
add
add
cmp
dec
in
out
mov
push
jo
nop
nop
nop
push
js
push
jecxz
add
cmp
push
pop
pop
mov
xchg
les
arpl
jo
add
push
mov
add
add
imul
daa
lods
loopne
jl
xorb
repz
aam
cmp
mov
sub
ljmp
addb
push
inc
add
and
lret
ja
fwait
cmp
or
ficompl
jo
pop
pop
mov
inc
jne
add
push
inc
xor
imul
sbb
mov
add
push
lret
adc
push
add
adcl
add
pop
movsl
xchg
push
into
pusha
fstpt
je
mov
pop
add
push
call
or
xchg
jae
cs
ja,pt
pop
sbb
xor
shll
clc
push
add
arpl
mov
pop
push
inc
xor
add
cmp
addr16
ljmp
mov
sub
flds
dec
int3
testb
jge
pop
lods
add
rclb
sub
sbb
js
bound
in
loope
in
fcoms
int3
pusha
pop
add
push
push
ss
in
xchg
xor
and
adc
jnp
mov
add
mov
jbe
repz
push
lret
sbb
and
cwtl
or
mov
or
in
add
je
push
filds
dec
dec
popf
inc
scas
mov
mov
lcall
subb
flds
jge
dec
lods
mov
bswap
dec
add
mov
cmp
ja
outsl
loopne
shlb
inc
sub
and
ret
jo
cmp
mov
les
push
idivl
mov
xor
sub
mov
pop
mov
nop
add
cmpsb
inc
add
jnp
mov
outsb
inc
cmp
jge
mov
shrb
gs
add
sbb
ss
cli
and
rorl
inc
and
pop
iret
jo
lods
fdivrs
sbb
mov
mov
inc
stos
outsl
lret
arpl
sub
add
cwtl
add
cmovbe
ret
and
mov
test
lcall
jp
add
add
adc
adc
in
pusha
cmp
push
out
cmp
je
repnz
mov
add
push
inc
add
mov
and
dec
dec
xor
out
jp
cmpsl
xchg
lods
and
add
adc
rorb
xchg
inc
and
jg
push
loopne
inc
add
popa
pop
rolb
add
adc
mov
dec
stc
jmp
aam
add
jl
add
pop
push
add
xor
add
push
mov
addl
cmpsl
mov
add
pop
adc
mov
fdiv
imul
mov
sbb
add
cmp
rcrb
push
jmp
out
test
jo
xor
mov
in
push
add
cli
xchg
pushw
mov
andb
rolb
dec
sub
add
mov
aas
das
loopne
in
add
inc
bound
arpl
fldl
inc
jnp
inc
xor
rep
mov
nop
jp
mov
cmp
inc
out
add
xor
xchg
test
pop
cmp
jmp
fsubs
cmc
nop
rolb
sbb
add
jp
ret
lret
xchg
rcrl
add
decb
pop
arpl
mov
dec
dec
sti
push
lock
cmp
test
and
dec
add
mov
dec
add
xchg
inc
lock
xchg
fwait
pop
add
arpl
add
xchg
cli
jae
cmpl
jne
hlt
or
add
jno
fcom
sarb
packssdw
int
les
inc
add
jl
pop
push
push
jecxz
xor
stos
btc
mov
je
jl
and
pop
add
scas
jecxz
mov
lods
sub
add
pop
jbe
add
sbb
cld
gs
and
or
jo
add
jle
xchg
pop
jge
flds
mov
pusha
inc
sti
add
roll
mov
add
sub
rcl
test
cmp
cmp
add
addl
movsb
es
stos
add
sbb
push
push
fldz
add
jo
es
shl
add
sbb
or
mov
cs
pop
mov
jnp
jmp
pop
les
sbb
adc
sub
mov
inc
add
cmp
in
test
dec
sbb
jge
rcl
lcall
mov
dec
fdivs
lods
lds
adc
sub
xorl
pusha
repz
pop
dec
movsl
xchg
aam
mov
iret
es
scas
int
cmpsb
add
dec
loop
cld
shl
subb
add
fbld
mov
or
pop
loop
pusha
cmp
mov
push
adc
mov
sbb
push
loope
sbb
push
jnp
enter
push
mov
mov
mov
pop
add
scas
lock
cmpsl
sarb
push
xchg
pop
sbb
test
call
adc
mov
xor
lds
dec
ja
jno
push
inc
in
sbb
jge
xor
jmp
push
adc
add
and
cwtl
cmpsb
fdivs
add
dec
fisubs
sub
pop
enter
add
fwait
lea
jae
je
add
mov
scas
loopne
repnz
sbb
cmc
rol
jne
xor
lcall
rcl
add
inc
cmp
adcl
pop
add
fbstp
pop
fstps
cld
mov
sbb
call
pushf
xchg
cmp
cmp
lahf
sub
pop
jne
add
lock
push
ja
idivl
xchg
sub
dec
sar
insl
xchg
push
mov
out
fs
flds
lds
lock
mov
mov
push
add
add
xchg
fs
add
insl
pop
fiadds
pop
int
add
push
vmovups
add
jne
inc
cwtl
xor
pop
fwait
in
js
jo
xor
loopne
push
loop
pop
test
push
xchg
jno
adc
jg
push
inc
add
aaa
fxch
dec
dec
inc
shll
inc
mov
cmpb
and
ja
add
cmp
cmp
add
enter
adc
stos
sub
jmp
add
std
add
test
insb
add
xchg
fsts
rol
xor
clc
lcall
add
sub
imul
rolb
inc
and
xchg
movb
xor
or
inc
and
add
stc
cmp
ret
test
shlb
test
add
inc
push
pop
popa
mov
nop
mov
lret
dec
jne
add
lcall
sarb
addl
ja
cmpsl
mov
cmp
add
cli
inc
jbe
jle
add
outsl
or
fldenv
jns
cltd
add
mov
repz
mov
mov
inc
test
rolb
fs
aas
inc
mov
lret
arpl
cwtl
rclb
mov
test
hlt
rorb
add
cmp
push
les
add
push
mov
sbb
or
movsl
add
addr16
jl
or
jle
add
enter
xchg
or
pushf
stos
es
mov
jge
insl
pop
and
dec
xchg
cmp
and
mov
jo
and
mov
stc
and
data16
jge
jo
push
dec
inc
in
add
lds
and
cwtl
mov
sbb
mov
mov
aad
and
pop
out
mov
lea
push
cwtl
xchg
add
pop
loopne
arpl
stos
sbb
sub
cmpsb
imul
pop
loope
mov
in
inc
cs
mov
fadds
mov
cmp
or
sbb
add
adc
in
xor
add
push
lahf
mov
add
test
jmp
rolb
aaa
in
js
fcompp
repnz
arpl
push
push
jnp
add
push
cmpsl
xchg
lcall
fistps
pusha
stos
popf
inc
pop
xor
add
inc
subb
das
rcr
sub
cmp
jb
cmpsl
lds
push
xchg
push
hlt
sub
int3
es
loopne
pop
rcrb
pusha
xchg
and
cld
xchg
imul
and
sbb
inc
addb
adc
add
leave
and
setae
cmp
xchg
lock
cmp
lock
add
mov
arpl
fimuls
inc
lods
pusha
push
mov
out
fsubs
icebp
push
cmpw
sub
and
faddl
fsubrl
push
inc
and
xor
and
inc
cmp
incb
pushf
ds
inc
add
dec
ret
mov
inc
add
je
jo
sti
add
dec
roll
fcmovu
jnp
xchg
push
shl
ljmp
inc
cmp
pop
andb
add
icebp
add
ja
roll
sti
add
or
mov
iret
arpl
mov
call
aam
lcall
imul
add
adc
xchg
mov
mov
add
mov
add
leave
addr16
pop
in
adc
rclb
rdpmc
mov
adc
inc
pop
cmp
jg
dec
inc
mov
lods
ljmp
loopne
jbe
pushf
or
sub
imul
out
push
or
add
and
jecxz
enter
add
jle
mov
xchg
mov
sbb
aas
add
sti
shll
dec
popf
add
inc
xchg
sub
add
hlt
stc
dec
out
xchg
add
add
in
in
inc
push
add
or
fsubrl
inc
add
ljmp
std
mov
imul
lds
adc
ret
pop
test
aam
push
scas
mov
movsb
add
mov
sbb
xor
inc
pop
cmp
test
jne
or
std
iret
outsl
lock
add
es
ss
adc
fisttpl
add
pop
cmp
or
test
add
jnp
sub
xor
js
add
mov
mov
out
stos
add
xchg
dec
test
shl
mov
jecxz
outsb
inc
mov
test
mov
mov
scas
jmp
jge
lock
xchg
add
call
or
mov
ja
shlb
jae
add
add
fwait
loop
rcl
add
add
pop
sbb
cmp
nop
sub
fcmovnbe
mov
daa
mov
test
inc
nop
xchg
jp,pt
add
out
add
scas
mov
inc
and
and
sub
lock
adc
pop
sbb
add
mov
pop
std
addl
xor
push
stos
loopne
mov
repnz
and
sub
jp
add
pop
in
mov
sbb
or
lea
mov
mov
add
repnz
lret
repz
lea
add
pop
xchg
adc
pop
pop
adc
xchg
jae
out
movsb
push
xchg
cmp
fidivl
push
add
cmp
clc
pushf
aam
mov
sbb
sar
outsl
pop
mov
dec
push
push
add
js
mov
sub
jne
add
popa
inc
cmc
cmp
and
sldt
cli
jp
jl
add
rorb
or
shrb
push
les
xor
scas
fwait
adc
pop
pop
add
daa
mov
push
inc
lods
add
dec
adc
jle
sbb
add
test
push
test
xor
add
inc
lods
cmp
add
push
push
cmp
jmp
cmp
adc
mov
subl
fnstsw
dec
add
movsb
faddp
add
arpl
mov
push
jg
add
clc
incb
fdiv
pop
ret
push
test
imul
jmp
xor
dec
xor
xor
stc
and
addl
push
aas
jns
ja
add
xchg
lds
mov
xchg
cmp
scas
mov
in
cmp
aas
mov
xorb
sub
popa
inc
add
out
and
lcall
sti
out
jb
inc
xchg
pop
add
js
jno
adc
add
xchg
add
pop
test
add
xchg
aad
dec
mov
pop
cs
mov
ret
jo
inc
or
sub
aas
xor
pusha
in
loope
add
jecxz
lods
clc
enter
pop
je
push
or
nop
jmp
mov
mov
ficompl
das
add
pop
ret
test
or
xchg
mov
xor
leave
mov
xor
add
negl
mov
arpl
rorb
dec
iret
push
aam
mov
daa
or
push
icebp
das
ds
insl
and
sbb
inc
outsb
add
lods
fsubs
push
inc
add
out
mov
and
sbb
inc
add
loope
cmpsb
les
sbb
inc
out
shlb
fildll
repz
sbb
cmp
std
in
pop
and
cmpsw
add
push
sub
add
aam
rolb
das
fs
or
sbb
lret
mov
inc
not
stos
pop
add
jp
test
pop
enter
sub
lahf
pop
lock
add
inc
popa
lods
mov
add
clc
pop
sub
arpl
shr
jo
pop
push
ret
aas
mov
add
cmp
add
subb
scas
pushf
sub
stc
mov
stos
pop
lods
jg
out
jbe
add
pusha
mov
add
cltd
mov
adc
pop
mov
pop
pop
xlat
loopne
pop
or
push
icebp
push
test
mov
int
cmpsl
add
push
adc
xor
dec
pop
add
push
mov
jp
push
test
in
popa
scas
or
cld
add
jns
std
add
fmull
loopne
shlb
scas
outsl
push
or
pop
pop
jge
sub
push
fwait
orb
fsts
add
mov
bound
and
ret
loope
adc
dec
add
fwait
stc
add
inc
repnz
xchg
add
imul
push
xorb
sub
test
stc
mov
push
lds
mov
xchg
jmp
fsubrs
inc
jg
sbb
push
lods
or
popa
int
add
pop
jge
cli
adc
in
js
into
push
push
fadds
add
es
cmp
mov
mov
loopne
imul
mov
shrb
std
loope
inc
add
xchg
andb
daa
ds
pusha
repz
cmpsl
mov
stos
addl
pop
cld
add
in
cwtl
jecxz
lret
add
fstl
aaa
add
out
fs
mov
adc
ds
add
inc
in
test
mov
mov
xor
popa
addl
add
fldl
jecxz
xor
add
push
push
add
into
rclb
xchg
loope
inc
add
sahf
push
xchg
jp
in
jne
cs
aas
jmp
cmp
xchg
cmp
sti
andb
xor
add
loop
push
pop
and
fs
add
pusha
push
push
mov
sbb
cmp
jge
cli
inc
add
mov
in
adc
xchg
sbb
and
pop
and
add
in
and
inc
mov
jne
mov
xchg
push
sub
pop
cmpb
jg
add
dec
sbb
mov
bound
push
pop
and
xchg
cmp
cmp
jle
bound
add
lahf
adc
add
popa
iret
loop
out
add
cmp
in
fidivs
pop
lods
insl
daa
add
adc
mov
or
adc
insb
decl
lahf
xchg
arpl
jp
add
adc
jge
pop
pop
sbb
sub
add
or
push
pop
out
rolb
jl
loope
mov
inc
mov
call
cmp
mov
stc
and
mov
add
inc
lret
xor
pop
add
lcall
orl
inc
mov
fdivrl
xrelease
mov
adc
inc
ja
inc
push
xor
imulb
dec
add
and
mov
inc
sarb
add
scas
push
cltd
rcrb
stos
cmp
cmp
sub
add
ljmp
or
and
push
jo
fs
sldt
xchg
fcomip
cli
and
xchg
popf
mov
ficomps
mov
push
xor
je
sbb
push
pop
sbb
scas
lea
or
fsts
ljmp
stos
shr
ds
shlb
inc
mov
jbe
add
lcall
call
arpl
xchg
add
rolb
jl
sub
sbbb
cmp
outsl
add
int3
lock
sahf
mov
ja
mov
xchg
lret
pusha
xchg
pop
dec
lock
inc
data16
fiaddl
push
fisttpll
mov
push
pop
adcb
popf
ret
arpl
jp
inc
push
daa
jns
add
mov
ja
lods
adc
add
mov
scas
cmpsl
push
out
inc
jne
rorl
jo
add
test
add
lea
push
jns
add
cmpsb
xor
imul
push
xor
out
sub
in
xchg
jo
call
pop
in
rcll
shl
lods
bound
cld
mov
xchg
and
sub
bnd
adc
aam
mov
and
mov
add
and
jae
push
add
lcall
mov
add
arpl
dec
fisubrs
lahf
inc
or
cmpsl
test
mov
mov
xchg
and
push
sbb
xlat
mov
inc
jo
add
jge
inc
inc
and
shll
and
lcall
cmp
push
mov
jae
add
sbb
inc
add
jl
cmp
cmpsl
jnp
je
pop
jle
nop
push
push
gs
and
repnz
push
arpl
or
clc
mov
cld
mov
add
shlb
js
add
inc
call
add
jg
and
cwtl
cmp
mov
incb
sbb
lahf
dec
roll
ds
pop
add
mov
cmpl
push
loopne
pop
mov
lock
push
pop
add
loop
aad
sahf
popf
push
inc
sbb
add
testb
scas
adc
mov
lret
sub
loop
jo
cmp
mov
leave
hlt
jno
add
xchg
ss
mov
xchg
push
lea
mov
adc
ja
daa
fwait
add
inc
mov
and
pop
cmp
jmp
mov
sbb
push
shl
mov
or
lock
addl
pop
add
mov
ret
enter
dec
arpl
pop
cmpsl
cwtl
add
leave
dec
dec
push
pop
adc
sbbl
and
sbb
mov
fs
fisubl
mov
inc
repnz
inc
popf
fistpl
pop
push
in
out
into
addl
cmp
insb
mov
jl
adc
fidivrl
mov
sub
rolb
push
xor
dec
sub
mov
push
ja
or
jbe
sti
jae
pop
aaa
sarb
add
pop
mov
xor
xor
outsb
popf
lret
ja
add
int3
xchg
mov
jno
xchg
mov
xchg
faddl
mov
scas
out
aam
popf
out
lret
jbe
sub
lock
or
mov
adc
jg
push
arpl
mov
addb
mov
push
mov
arpl
add
jae
in
lods
add
jbe
mov
push
add
mov
jl
add
inc
push
add
sbb
dec
pop
lods
push
mov
push
cmp
add
sbb
fs
out
inc
in
movsl
aas
scas
jno
dec
sbb
shl
cwtl
mov
adc
cmp
and
cmp
divb
sar
imul
xchg
xor
push
inc
xlat
adcb
fmuls
cmp
ljmp
push
shl
daa
add
jo
jbe
dec
bound
add
mov
out
sbb
add
into
mov
add
lcall
xor
roll
mov
mov
mov
add
iret
xor
add
dec
subb
rorb
loopne
mov
aam
jae
iret
xchg
jo
pop
inc
or
add
pop
add
mov
jecxz
sub
je
jge
jg
mov
fwait
popa
push
inc
fdivr
sbb
ja
add
xorb
jecxz
xor
add
fs
int3
shrl
add
xor
add
push
fwait
lods
add
arpl
dec
jae
xlat
add
fs
mov
xor
mov
in
jl
popl
pop
inc
movsl
inc
fs
fstps
add
mov
xchg
loope
stos
gs
in
add
jbe
bnd
push
inc
out
fsubl
and
pop
adc
mov
inc
sbb
cli
cs
xchg
paddsb
mov
pusha
jb
add
jbe
push
sti
xlat
or
sub
sub
add
adc
pop
pop
push
repnz
in
inc
xchg
stc
std
cmpsl
in
sub
out
push
imul
lock
call
jo
iret
add
jb
inc
fwait
adc
dec
mov
jb
add
je
in
scas
xor
arpl
xchg
out
xorb
inc
jnp
mov
sti
sbb
xchg
shlb
clc
les
xor
aas
mov
in
mov
out
and
aad
popa
pop
mov
cld
add
add
xchg
nop
pop
sarb
adc
push
bound
mov
addl
xlat
orb
repz
and
int
addb
push
insl
add
pop
sbbl
sub
inc
loope
outsl
lret
insb
xchg
or
cmp
in
adc
inc
cmpl
add
jo
mov
jl
and
lock
dec
inc
fisubrs
xor
inc
dec
push
jp
push
lret
stos
mov
jns
push
in
and
stos
cmp
xor
sti
js
xchg
dec
out
roll
jl
mov
imul
xchg
dec
insb
pop
incb
ret
mov
sti
push
push
xchg
pop
lock
push
adc
pusha
fiaddl
lret
inc
fdivs
pop
push
add
pushf
push
inc
in
repz
or
add
pusha
testb
pop
inc
test
repnz
sarb
call
mov
pop
xor
int3
mov
xor
mov
pushf
addb
inc
pop
jle
add
sbb
out
sub
inc
adcb
add
jl
loop
jo
mov
aam
push
cli
mov
dec
pop
test
pop
push
lret
nop
cld
xchg
mov
addl
or
mov
xchg
rol
pop
lcall
or
mov
add
sbb
adc
add
in
push
pop
sti
and
mov
ret
insl
sub
add
and
inc
and
orb
insb
or
add
jl
out
fmull
add
adcb
push
rclb
shr
ljmp
xchg
sbb
mov
pusha
mov
shll
shlb
adc
ds
xlat
ljmp
call
sbb
add
jno
fwait
pop
jle
add
lods
shr
inc
xchg
add
and
pop
add
test
jnp
cmpsb
ljmp
dec
rolb
lods
call
inc
std
add
test
repnz
bnd
mov
add
daa
jg
ret
pusha
inc
sgdtl
dec
xchg
jmp
pop
jno
add
xchg
unpckhps
ret
bound
rcr
xor
nop
hlt
outsl
sbb
test
add
inc
add
add
clc
pop
es
xchg
jge
add
xchg
repnz
mov
push
repz
jne
addb
push
iret
add
ror
mov
inc
out
iret
shrb
inc
add
aam
add
push
mov
ss
add
push
imul
dec
sub
add
lcall
add
dec
push
fimull
iret
inc
xor
and
add
or
xor
mov
fisttpll
mov
adc
rorb
dec
test
jb
shlb
xor
fadds
jmp
adc
cmpsb
test
dec
and
push
add
mov
or
push
iret
mov
aaa
or
or
cmp
test
imul
add
movsb
fiadds
ret
xor
iret
jo
and
inc
into
mov
mov
es
jb
add
jl
movsb
dec
adc
pop
add
inc
clc
xchg
add
popf
bound
shl
cmp
rcll
sbb
ja
test
add
dec
ret
xor
rcrl
add
or
dec
inc
aad
mov
inc
enter
aas
repnz
popa
rclb
jmp
pop
sub
and
lret
or
pop
xor
add
add
nop
out
add
push
sub
stc
cld
mov
outsb
add
rolb
push
mov
pop
jge
iret
loop
ss
mov
add
sub
push
sbb
outsl
push
mov
push
mov
sub
inc
addl
jo
mov
mov
orb
and
dec
or
push
in
iret
out
xor
dec
insl
push
or
addr16
leave
aaa
testl
push
incl
frstors
mov
pop
add
inc
add
inc
repnz
sti
cld
les
inc
lea
or
add
scas
inc
aas
jp
jae
inc
fisttpl
adc
cmp
jg
mov
add
inc
orl
mov
or
cmp
mov
add
flds
shl
cmpsb
and
cmpsl
inc
add
bound
pop
and
popa
flds
lea
sarb
sub
faddl
lods
and
adc
add
aas
inc
loopne
sarb
inc
inc
jbe
mov
fists
xchg
add
data16
nop
dec
add
and
sarb
or
adc
orb
nop
xcrypt-ecb
cmpsl
or
inc
fistps
push
push
icebp
sub
inc
in
jle
jo
add
jmp
or
add
sar
add
js
jmp
or
insb
pop
lock
inc
add
icebp
adc
mov
std
mov
mov
dec
adc
xor
inc
push
mov
cs
jge
or
add
test
mov
cmp
movl
rcrb
imul
mov
ret
jo
inc
pushf
popa
xor
push
mov
mov
leave
fucomp
xchg
add
mov
mov
in
in
add
dec
in
sbb
add
cmp
into
shlb
inc
xlat
add
sub
add
add
addl
rolb
add
inc
incb
and
or
lock
adc
cmp
push
test
and
mov
sub
adc
dec
mov
inc
cmp
divl
movsl
xor
rcrl
cmp
mov
xchg
mov
addr16
add
sbbb
add
in
arpl
add
inc
mov
sub
add
cmpsl
lods
arpl
clc
rcrl
mov
mov
sbb
into
pop
xchg
popa
push
dec
mov
das
inc
xchg
inc
cli
outsb
lea
faddl
inc
repz
ret
ja
add
inc
jo
mov
std
push
insb
test
jne
ror
xor
pop
fucom
mov
mov
fcomi
call
addb
xor
cmp
push
call
lret
insb
dec
jge
jns
pop
or
jp
jb
test
shlb
lods
inc
lret
pop
add
pop
ljmp
mov
xor
add
jge
add
orl
loope
pop
add
cmpb
xorb
test
repnz
inc
popf
push
add
add
push
mov
stos
xchg
jbe
outsb
movsl
sub
or
mov
add
jecxz
xor
dec
nop
ljmp
int
inc
add
add
mov
mov
jnp
aad
fwait
inc
mov
mov
add
gs
lret
mov
rol
add
popa
inc
int3
and
xor
sub
push
xor
push
dec
ja
add
push
popa
daa
sbb
fadds
add
and
loope
mov
pop
and
mov
add
repnz
add
and
mov
dec
adc
popl
stos
add
jge
mov
inc
mov
lahf
jns
mov
arpl
negb
pop
flds
fsubrs
pop
and
mov
cltd
pop
dec
arpl
add
inc
dec
jb
push
les
test
lahf
add
inc
add
xor
add
jge
jecxz
lcall
and
int
mov
inc
out
pop
roll
pop
lock
xor
add
psllq
ret
inc
scas
cltd
xlat
mov
mov
daa
and
sub
add
pop
mov
fwait
psraw
xchg
or
pop
loopne
jo
add
aaa
push
das
rorl
jl
in
lods
je
add
mov
popf
xchg
add
std
pushw
add
cmp
out
add
lret
or
gs
mov
mov
aad
mov
mov
cmp
push
pop
add
xchg
sub
aaa
loopne
adc
lahf
jno
jo
rorl
stos
call
dec
and
dec
outsb
lret
xor
pop
adcb
aam
loope
pop
sub
mov
fildll
push
mov
or
js
cmp
stc
add
das
lahf
scas
popa
jne
push
sbb
iret
add
sub
lahf
cmp
add
fs
xchg
xorb
cmp
inc
lret
sbb
adc
mov
pusha
data16
pop
push
addl
lahf
popa
add
nop
sub
jae
add
loopne
test
jmp
inc
push
loop
leave
cs
cmp
and
sbb
sub
ds
cmp
lods
jle
call
cmp
add
inc
mov
fs
jg
mov
mov
aad
adc
push
scas
inc
add
clc
call
mov
pop
fcmovnb
test
push
and
jo
call
dec
inc
jl
cmp
dec
xchg
movsl
sbb
lret
add
inc
or
or
loopne
shlb
cmp
cli
and
int3
cmp
mov
ret
js
inc
add
xorl
add
pusha
lret
or
in
inc
repnz
inc
test
cmp
and
sahf
sub
mov
mov
mov
add
bound
popf
add
pop
add
aam
push
sub
test
das
add
mov
lsl
and
inc
nop
stc
add
mov
pusha
aaa
add
dec
stos
inc
sbb
jmp
pop
add
sbb
call
mov
adc
or
jo
call
test
ljmp
mov
pop
ds
into
sbb
push
mov
mov
bound
aaa
hlt
nop
push
adc
incb
sbb
xchg
pop
xlat
sbb
cmp
int
adc
popf
mov
movsb
mov
lret
xor
push
addl
daa
add
add
rcrb
dec
mov
call
cmp
pusha
leave
xchg
cli
mov
add
and
add
ror
cmpsl
dec
lds
and
xchg
lret
js
jg
dec
add
je
ret
adc
add
and
mov
inc
add
sub
pop
lea
mov
mov
scas
sarl
inc
psraw
addr16
push
arpl
icebp
es
or
in
rcr
or
je
jae
sbb
push
adc
andl
pushf
loop
notl
insb
dec
enter
test
fs
mov
movsl
sbb
lock
add
push
arpl
dec
sub
insl
push
mov
push
jge
pop
cltd
mov
add
and
fimull
mov
mov
arpl
jno
lods
or
push
sub
idivb
out
pushf
or
addl
cmp
push
inc
shrb
dec
push
pop
add
neg
enter
add
into
jns
inc
js
bound
fisubrs
movsb
pop
es
sbb
test
add
outsl
add
cmp
mov
mov
arpl
int3
jmp
int
adc
movb
mov
mov
add
jl
sub
cmp
sarb
fcomps
out
jle
out
cmp
leave
cmc
push
loop
add
sub
aaa
xchg
adc
repnz
pop
int3
rorb
clc
jp
fisubrs
cwtl
scas
aas
add
pop
add
cmpsb
leave
dec
in
add
push
fists
sub
jl
pop
add
insb
out
popf
mov
xchg
add
xchg
lock
dec
psubw
sbb
arpl
add
xorb
mov
je
cmp
add
xlat
jnp
pusha
sub
cmpsl
fwait
xchg
mov
add
sub
xor
add
xchg
aaa
xchg
pushf
or
outsb
add
and
adc
je
or
mov
or
daa
adcb
sahf
jle
movl
fistl
add
test
xchg
add
fwait
cwtl
sbb
add
inc
mov
dec
mov
fildl
cmp
movsl
clc
pop
mov
add
mov
rcrb
xor
movsb
leave
sti
sbb
xor
sub
pop
jg
dec
and
ds
addr16
rcrl
adc
xlat
sub
rclb
cli
ror
pop
cmp
or
lea
xchg
adc
rclb
cld
sti
sbb
lock
inc
filds
jbe
std
push
and
xchg
xor
mov
add
fstps
in
movsl
mov
and
add
jp
hlt
fs
xor
adc
push
in
xchg
push
nop
stos
cmpsl
mov
mov
inc
loop
add
call
push
mov
mov
ds
jno
scas
mov
addb
xchg
aam
xor
add
push
lock
enter
cmp
mov
sti
sub
adc
ljmp
lcall
lods
inc
pop
loope
out
sbb
fidivrl
xchg
mov
pop
je
mov
loopne
repz
sub
dec
cmp
push
inc
jmp
xchg
mov
add
sbb
xor
push
fnsave
jle
push
bound
roll
data16
int3
fsubs
mov
cmp
es
adc
rolb
pop
sub
int3
rorb
mov
nop
nop
movsl
bnd
cmp
pop
jo
cli
bound
inc
je
add
xor
xor
ret
mov
mov
mov
add
and
dec
mov
push
inc
lods
stc
aas
dec
sub
add
xor
in
pop
add
xchg
scas
add
or
mov
add
inc
pop
mov
ljmp
mov
add
fstl
mov
cld
jne
xlat
out
popa
jns
btr
sub
adc
pusha
mov
rcrb
hlt
or
sub
mov
fwait
out
dec
add
or
cmp
repz
iret
sbb
push
add
sbb
rorb
mov
fdivrp
mov
mov
adc
dec
loopne
pcmpeqb
mov
pusha
ret
sahf
jns
movb
xor
lds
std
pop
call
push
lods
adc
imul
inc
sub
cmp
inc
arpl
outsb
pop
sbbb
das
push
fadds
jbe
pop
enter
add
gs
push
test
popa
push
push
xchg
jge
adc
xchg
add
movsl
push
mov
pop
or
arpl
push
push
pop
test
inc
add
out
mov
push
push
dec
xchg
mov
inc
int
sbbb
or
add
shll
inc
jmp
xor
pop
add
iret
add
or
sbbl
cltd
add
pop
sarb
cmpsb
aas
movsl
dec
jns
icebp
je
shlb
cld
pop
lods
add
aad
mov
sbb
push
sahf
and
xor
out
js
pop
inc
nop
pop
add
jb
faddl
mov
subb
int
jecxz
push
cmpsb
add
pusha
sub
and
inc
mov
push
and
repnz
add
sbb
fadds
loope
out
daa
enter
mov
dec
mov
dec
lods
and
xor
inc
adc
icebp
das
in
movsb
add
into
adc
std
loopne
cmp
pop
pusha
mov
push
loop
int3
adc
sbb
jle
scas
pop
mov
data16
stos
nop
xor
add
push
jp
inc
add
fcomps
sub
inc
add
inc
dec
push
jecxz
adc
mov
cmp
sbb
dec
repz
mov
jle
movsb
jecxz
mov
lret
mov
popa
pop
out
jge
add
fadd
call
add
in
or
pop
std
sbb
mov
imul
adc
adc
data16
scas
in
lahf
add
dec
xorb
cmp
xor
inc
fdiv
ret
pop
stc
ret
shrd
jge
rorb
inc
lds
seto
adc
sahf
push
adc
arpl
lahf
add
mulb
and
test
add
xchg
jp
xchg
lods
dec
add
dec
mov
mov
pop
in
add
cltd
push
mov
dec
inc
jnp
xchg
ret
and
and
add
mov
loopne
inc
inc
jns
repz
xchg
add
ret
and
cltd
and
add
gs
lock
xor
ret
shlb
pop
loopne
imul
jns
sbb
push
sbb
sar
push
add
cwtl
gs
mov
adc
sub
cmp
add
into
jo
rcrb
pusha
stos
mov
add
and
jmp
jl
out
dec
xlat
pushf
les
daa
arpl
jp
fcomip
xor
mov
out
inc
lret
inc
js
mov
sbb
add
add
dec
mov
insb
and
stos
cmp
dec
mov
xor
insl
add
enter
jp
cmp
inc
add
pusha
dec
test
add
sub
dec
test
rolb
pushl
ficomps
add
ret
adc
bound
add
das
hlt
dec
mov
add
push
lods
dec
or
inc
inc
mov
or
cmp
cmp
sub
nop
add
add
clc
ret
push
adc
je
jge
lret
mov
nop
mov
insl
add
sbb
xorl
jg
and
push
rclb
mov
aas
push
fimull
mov
mov
xchg
or
adc
dec
gs
sbb
arpl
push
jle
add
add
inc
ret
aad
or
lods
test
pop
cld
leave
add
sahf
das
pop
push
inc
lcall
outsl
fs
cmp
stos
gs
lock
pop
arpl
add
push
pop
jns
mov
add
jl
icebp
jnp
into
mov
inc
xchg
int
test
mov
into
add
push
or
shlb
dec
push
ljmp
pop
lods
arpl
fnsave
fs
shl
add
pop
mov
xlat
add
arpl
add
dec
fdivp
mov
scas
cltd
out
loopne
and
add
sbb
or
loop
jo
cmp
shlb
jnp
add
xchg
inc
or
jno
add
jle
in
les
in
push
lcall
push
xchg
int3
clc
adc
das
inc
or
inc
pop
insl
add
movsl
pop
or
and
mov
roll
xchg
in
fs
imul
mov
mov
out
je
icebp
or
shlb
mov
sub
cmp
add
popa
repz
mov
push
jo
add
addr16
adc
out
or
rsqrtps
cmovne
pop
imul
out
cmp
aaa
lret
cli
add
loopne
push
repnz
fs
jmp
pop
xchg
pop
mov
inc
jmp
insb
loope
mov
call
mov
add
test
add
inc
xchg
adc
jns
add
shll
in
aaa
xor
add
fwait
in
cmp
enter
add
dec
ret
jmp
dec
xchg
out
fcoml
in
jbe
mov
aaa
dec
icebp
stos
pop
add
arpl
or
popf
ret
sarb
inc
cli
pop
sahf
add
test
inc
mov
add
loopne
arpl
or
add
leave
minps
fidivl
inc
mov
cwtl
arpl
loop
add
outsb
push
fisubrs
sbb
loope
push
jb
add
ret
xor
notb
jmp
jg
in
and
shl
mov
rorb
ds
and
mov
jnp
popa
pop
mov
xlat
scas
add
arpl
adc
pushl
fsubrl
add
jae
aaa
int3
enter
add
inc
push
sbb
test
add
popl
jl
fdecstp
movsb
jae
add
pop
gs
inc
push
and
sbb
push
rol
jge
in
inc
stos
push
movl
pop
and
add
int3
adc
addb
xor
jp
add
movsb
or
inc
xor
add
pop
sub
flds
xor
cmp
outsl
shl
xchg
lds
or
incb
and
loop
mov
mov
jno
fstpt
stc
iret
add
dec
xchg
pop
roll
fisubrs
lahf
and
push
popa
xor
cmp
mov
xor
push
add
test
add
pop
cltd
inc
gs
jp
clc
and
mov
pop
je
pusha
xchg
jno
add
xor
js
push
xchg
sub
pop
clc
push
push
add
in
add
addb
sub
jb
shlb
xor
pop
xchg
pop
add
rcll
add
and
jnp
sbb
add
loop
and
movsl
subb
xlat
or
insb
push
add
popf
sub
ret
mov
push
add
icebp
push
arpl
out
jae
and
mov
mov
adc
dec
idivb
dec
xchg
lret
rcl
inc
out
jge
inc
add
ret
lods
popa
in
inc
aas
lahf
push
andb
pop
jo
add
and
dec
ss
testb
iret
movsl
aad
ficoms
add
nop
popa
xchg
add
mov
iret
outsb
les
js
mov
jp
mov
cmpsl
fildl
aaa
iret
mov
and
jg
or
push
add
and
addl
xchg
mov
cld
mov
push
js
xchg
dec
jmp
pop
imul
push
cltd
lods
bound
jb
fldl
mov
rolb
add
fs
imul
dec
int
loopne
shrb
add
push
push
adc
add
xor
add
cwtl
xchg
je
in
push
inc
jae
shll
shrb
fiaddl
add
xor
xchg
in
inc
mov
xor
pop
cs
faddl
mov
ret
movsw
cmp
jl
xchg
and
outsl
ljmp
mov
push
push
inc
cmp
gs
lods
aas
rcl
movsb
dec
add
mov
pop
stc
mov
inc
or
push
aas
sbb
cmp
roll
rorb
inc
jno
cmp
and
push
sub
test
pop
lods
jle
sub
inc
jno
dec
les
fcompl
inc
pop
stc
add
pop
add
mov
test
arpl
jg
pop
dec
xor
jl
add
sub
and
add
fs
outsl
mov
jno
push
adc
fistpll
add
in
xchg
out
mov
test
dec
lea
dec
add
inc
push
mov
aas
cmp
jns
adc
inc
test
add
dec
push
nop
jbe
and
push
movsl
sbb
rcll
cmp
fstps
scas
push
ja
pop
fisttpl
lahf
inc
test
subb
jp
add
fs
divl
lret
add
or
loopne
out
outsb
shl
sub
inc
push
enter
and
sbb
add
push
ja
inc
or
arpl
mov
pop
push
push
adc
nop
lcall
jno
jle
add
iret
mov
and
sti
aas
add
lock
leave
rolb
xchg
repnz
repnz
adc
jns
popf
cmp
xor
sub
pop
jle
adc
filds
test
cmp
nop
pop
add
dec
inc
fiadds
stos
sub
jp
adc
jbe
xor
or
mov
pop
push
adc
add
jnp
mov
add
ret
push
mov
int3
sar
pop
mov
sub
add
jae
sbb
jle
add
cmp
fcoml
sti
cmpl
fs
xchg
aaa
xchg
into
icebp
int3
cld
add
pop
sub
cmc
aas
sbb
ljmp
mov
xchg
cmp
dec
jecxz
cmpsb
add
fcoms
fwait
mov
ss
and
adc
popa
push
or
pop
daa
sub
out
inc
sbb
sarb
and
nop
jge
mov
add
fwait
xor
jp
add
add
data16
sbb
lahf
pusha
dec
jle
mov
popa
lds
lea
add
adc
mov
inc
flds
mov
push
insb
jns
in
dec
add
cmpsl
je
loope
test
aas
xchg
xchg
cmpb
fisubrl
or
or
repz
inc
lret
movsl
add
inc
sub
or
dec
cmp
nop
xorl
movsb
popl
mov
push
jno,pt
sarb
lods
push
inc
or
adc
roll
pop
xchg
or
rolb
cwtl
mov
js
add
mov
jnp
sub
ret
nop
mov
fstl
aas
popf
and
xor
or
and
daa
inc
mov
enter
mov
test
inc
add
inc
pop
mov
dec
mov
pushf
dec
xchg
movsb
add
dec
outsb
sbbb
add
inc
add
mov
vmread
mov
add
mov
push
add
dec
pop
cmc
add
arpl
jmp
lods
and
or
sbb
cmpsl
cld
pop
cli
jb
push
cwtl
add
jo
or
leave
arpl
pop
cmp
add
sub
int3
repnz
add
inc
jno
lcall
mov
rorb
dec
in
movaps
das
jae
inc
jle
xchg
cld
add
iret
dec
data16
mov
or
popl
add
mov
insl
mov
add
add
enter
cmc
arpl
stc
jge
pinsrw
out
pop
push
lods
jae
bound
inc
add
sbb
xchg
loopne
lcall
sub
push
xchg
jne
lret
ror
imul
push
popf
cmpl
add
arpl
pop
sub
int
mov
push
mov
gs
mov
xor
cmpsl
jo
dec
insb
and
fstpt
push
fmul
shll
sub
cmp
in
add
ficomps
add
add
arpl
add
xor
gs
aad
dec
cmp
push
mov
jno
pop
cld
shlb
repz
add
push
arpl
fstpl
xchg
fiadds
push
push
rcrl
xorl
jle
stc
inc
sub
jno
arpl
push
jo
inc
add
jle
je
aam
add
push
decl
ret
jbe
add
xchg
arpl
inc
or
sbb
rclb
into
pop
push
and
cmpsb
fs
cmp
mov
imul
inc
jp
cmp
add
pop
data16
add
dec
std
adc
sbbl
or
and
and
imulb
das
jno
jmp
add
xor
inc
dec
cmpsb
dec
push
ja
xor
inc
jne
jl
cltd
movsl
pop
je
shll
bound
add
add
es
mov
mulps
pop
fildl
push
jg
add
enter
or
adc
xor
jnp
in
inc
in
lret
add
fdivp
mov
arpl
mov
push
insl
jno
shlb
mov
mov
pop
inc
or
and
xchg
inc
lahf
add
xchg
sbb
mov
int3
ret
das
or
hlt
adc
add
jp
bound
jo
add
pop
fadd
call
mov
dec
sub
in
insl
add
lcall
outsl
mov
fisubrl
mov
add
insl
xor
mov
sub
xlat
mov
cmpsl
cmp
add
xor
test
sub
stos
add
push
mov
mov
pop
sbb
push
loop
inc
add
cmc
shlb
add
rep
and
add
loopne
arpl
sahf
fidivrl
ljmp
mov
push
mov
pop
mov
xchg
xchg
fsubl
cli
add
cmp
add
sub
add
jecxz
js
test
add
movsb
imul
cmc
shr
aad
ret
inc
sbb
xchg
pop
add
rorl
scas
mov
inc
arpl
add
cmpsb
jp
jbe
sub
inc
out
aam
leave
loopne
mov
stos
push
sbb
daa
inc
sub
adc
add
andl
add
rolb
or
mov
cmp
xor
sahf
jns
add
movsb
ret
loopne
inc
popl
adc
cmpb
xorl
insb
cmp
out
outsb
shrb
add
mov
fwait
clc
out
iret
pop
add
add
pusha
loop
add
orl
jbe
sbb
movsb
leave
pop
mov
js
lock
xor
fnstsw
hlt
inc
mov
mov
arpl
add
or
adc
out
stc
nop
push
xor
mov
pop
sbb
inc
cmpsb
mov
sub
add
jbe
lcall
into
jg
sub
cmp
stc
mov
xchg
leave
lcall
inc
jecxz
mov
bnd
mov
and
mov
ret
sbbl
pop
gs
out
cmp
mov
repnz
jp
jmp
test
ja
jno
add
and
insl
add
mov
sti
repz
int
hlt
cld
ss
dec
and
mov
loope
add
ror
aam
mov
add
pop
sahf
insb
pop
movsb
call
mov
inc
cwtl
sub
xchg
jmp
in
jp
enter
dec
push
add
push
inc
cmc
cwtl
cmpsl
jecxz
cmp
cltd
add
mov
add
push
sub
jns
int3
pop
cmp
push
fstl
add
sbb
push
cmp
shrl
cmpsl
iret
adc
pop
jnp
int3
out
add
push
in
mov
add
lock
ljmp
xchg
push
sub
std
incl
add
dec
xor
faddp
push
add
arpl
add
fwait
push
inc
add
call
mov
add
inc
inc
dec
lret
and
mov
les
aam
inc
in
jge
inc
add
in
push
in
stos
fsubl
iret
data16
frstor
in
xor
std
rorb
add
js
sub
push
mov
xor
into
sti
les
push
or
adc
rcll
mov
roll
mov
dec
mov
outsl
push
dec
sbb
xor
gs
mov
pusha
jbe
loop
pop
pop
int3
add
jge
add
cmpsb
rolb
sbb
fcoms
inc
sub
js
sbb
sti
add
xor
cmp
andb
dec
pop
mov
addl
dec
scas
jmp
adc
inc
jmp
mov
jecxz
sldt
xor
add
inc
cmp
xchg
inc
add
dec
shrb
add
inc
and
mov
pop
enter
ret
lock
or
in
fcomps
es
pop
add
dec
dec
jbe
xor
inc
mov
xor
push
ds
pop
aad
in
in
ret
lahf
cmp
jb
aam
and
xchg
sbb
mov
gs
pusha
les
inc
shll
scas
xor
mov
lret
ja
pop
shlb
orb
adc
inc
jmp
cmpb
cmp
jg
mov
testb
mov
add
add
aam
mov
popa
dec
dec
add
mov
pushl
mov
jecxz
addl
sti
adcb
rclb
adc
imul
lods
jne
inc
sti
popa
add
push
adc
add
and
imul
add
dec
mov
fisttps
leave
inc
or
and
cmp
rorl
int3
xor
pop
xor
movsl
add
loopne
ret
dec
stos
jge
jg
add
fldenv
add
pop
es
cmp
mov
ret
pusha
add
loopne
inc
icebp
mov
lahf
mov
aaa
dec
cmpsl
add
ret
and
paddb
adc
addb
into
aas
mov
add
dec
inc
cli
push
dec
adc
mov
insb
mov
popa
int3
leave
and
test
sahf
andl
lds
add
sub
ret
pop
rclb
cltd
add
je
outsl
vpor
popf
loope
clc
int3
inc
in
aas
aad
cmp
cmp
pop
mov
add
into
pop
push
jmp
cmc
popf
jo
inc
add
in
mov
push
cmp
inc
add
push
pop
or
xchg
arpl
add
jmp
leave
int3
sbb
mov
inc
fwait
mov
in
add
xchg
sbb
aaa
add
sbb
dec
test
mov
pop
ds
fsubrl
push
movsb
addr16
add
adc
in
add
into
mov
add
arpl
and
jne
fcmovnu
add
add
mov
ret
scas
sbb
enter
pop
add
adc
jb
and
test
push
dec
sti
mov
je
dec
stos
sbb
inc
addb
mov
add
adc
mov
mov
mov
aam
fadds
imul
push
add
add
repnz
fmuls
xor
sbb
rclb
add
pop
or
les
or
out
dec
fsts
je
and
fisubrs
bound
pusha
push
lret
test
pop
xchg
cmc
add
ficoms
add
xor
push
test
sbb
mov
and
mov
add
inc
or
shll
sbb
jne
add
gs
arpl
mov
cmp
sbb
cmpsb
test
addr16
mov
sti
clc
add
cwtl
incl
push
xor
sbb
rcrb
cmp
aad
xchg
and
lock
add
xor
fistps
xor
stos
faddl
bound
and
es
inc
sbb
pop
push
loop
jnp
add
faddp
xlat
and
add
mov
nop
add
dec
mov
aas
inc
mov
pop
data16
ret
mov
pop
jo
jecxz
fs
dec
jb
insl
pusha
cwtl
mov
xor
pop
mov
shll
sub
push
mov
xorl
push
mov
ss
mov
rcrb
jge
js
lods
in
mov
push
sbb
iret
pop
mov
push
xchg
mov
shll
add
in
movsl
lock
fwait
mov
and
pusha
repnz
filds
dec
add
cmp
jg
arpl
incl
ret
inc
repnz
dec
push
add
divb
and
roll
mov
arpl
aam
addr16
mov
lret
inc
popa
out
dec
sbb
int3
imul
sub
and
adc
xchg
pop
mov
dec
mov
jne
add
mov
pinsrw
ja
arpl
sub
add
in
subb
je
xchg
mov
cmp
stos
xor
pop
scas
add
cmp
test
xchg
cmp
add
and
adc
mov
pop
jo
loopne
dec
dec
cmp
sbb
adc
jne
or
or
mov
adc
mov
mov
jmp
pop
sub
push
arpl
adc
in
cmpsl
inc
jmp
jne
jno
and
jns
inc
add
and
dec
and
loop
sub
mov
adc
lea
lret
sub
push
inc
scas
movsl
popaw
mov
in
es
push
add
cmpsb
mov
repz
pushf
mov
mov
hlt
xlat
dec
lods
mov
add
mov
xchg
pop
rorb
mov
add
pop
insl
jg
imull
loope
jecxz
jmp
inc
cltd
xchg
adc
rolb
add
add
sti
mov
lret
push
add
out
sbbb
xchg
sub
cmp
shlb
add
lcall
mov
std
add
push
jp
nop
in
outsb
cwtl
mov
loopne
push
mov
popa
es
ja
adc
sbb
add
mov
and
fmull
or
loop
rcrb
jne
inc
cmp
inc
sub
js
inc
add
pusha
test
shr
shlb
xor
add
pop
pop
addb
add
inc
aam
mov
mov
xor
daa
addr16
add
fwait
push
mov
inc
fdivs
jbe
add
repz
sar
push
dec
enter
cmp
ljmp
int3
aad
add
xchg
pop
sub
add
push
mov
movsb
divl
inc
jo
icebp
mov
je
xor
mov
pop
and
mov
pop
jns
inc
or
das
lds
xor
movsb
pop
or
xchg
or
xorb
jg
negb
sbb
jo
add
inc
rcll
inc
jmp
sar
xchg
testl
arpl
dec
sbb
xor
in
dec
sahf
rclb
das
sar
inc
lods
out
add
pop
inc
mov
push
out
arpl
movsl
es
fildll
dec
jge
jge
add
jnp
mov
je
pop
xor
es
loope
xor
pop
cmpsb
add
icebp
out
push
dec
rcll
ljmp
mov
cwtl
xchg
cmp
inc
jo
sbb
icebp
fwait
jle
shrb
inc
idivb
popf
movl
pushf
inc
mov
pop
cmp
addl
add
lds
loopne
or
mov
lcall
sbbl
sub
lret
jns
add
xor
les
jle
adc
pop
add
mov
xchg
jecxz
lahf
push
mov
ffree
into
add
leave
and
or
mov
lret
mov
xor
out
enter
inc
dec
loopne
stos
xlat
add
outsl
addb
fs
jb
loope
test
shrb
add
out
xchg
vpunpcklbw
push
cld
mov
cmpsl
inc
cmpsb
mov
sbb
mov
arpl
jp
pop
push
lea
in
push
movsl
ret
add
lahf
inc
sbb
dec
mov
cmc
into
pusha
rolb
je
pop
dec
xor
inc
mov
sbb
jb
nop
daa
fdivrs
pmaxsw
dec
std
sbbb
fisubrl
test
add
popf
int3
pop
add
adc
jg
xchg
inc
add
pop
push
loope
push
sbb
pop
out
popf
jb
mov
mov
jle
imul
fistl
repnz
cmp
xchg
push
mov
adc
jp
sub
inc
dec
add
jo
es
les
or
mov
shrb
mov
inc
add
xor
das
ja
adc
push
add
jbe
int3
dec
lods
inc
add
inc
in
cs
mov
jo
cmp
bound
push
pop
imul
xor
cmp
inc
pop
nop
in
add
repnz
add
arpl
rolb
cmp
lea
fdivs
mov
xchg
add
shrl
loop
add
pop
cmp
push
add
test
test
pop
jae
repz
pop
dec
sub
xchg
js
add
sarl
ja
jns
add
inc
std
sub
sbb
int
popa
add
or
mov
shll
inc
loopne
adc
mov
add
fsubl
pop
inc
inc
cltd
sti
or
mov
lods
pop
jne
fmuls
lock
cmpsb
lods
incl
lock
sbb
sub
push
push
sarb
add
add
scas
cmp
rclb
mov
insl
orb
negl
jmp
imul
adcb
mov
or
mov
add
es
lea
xchg
daa
xorl
insl
call
inc
cmp
and
rcrl
movsb
fidivl
ret
jno
cmpsl
test
push
subl
shl
cmpsl
js
cmp
dec
sbb
rcrb
add
add
push
and
outsl
out
jge
js,pt
loope
scas
test
add
or
inc
add
push
nop
shrb
add
negb
push
add
cmc
daa
gs
movntps
pop
mov
enter
add
and
mov
dec
aad
jae
push
mov
add
jecxz
cmc
insb
loopne
add
inc
add
jmp
pop
pop
push
xor
pop
fistpl
mov
shll
imul
daa
out
nop
mov
fbld
add
xchg
mov
cmpsl
sub
pop
inc
add
ret
jl
arpl
xchg
push
add
jp
inc
test
add
push
xor
fnstenv
add
idivb
lea
jo
add
adc
mov
test
mov
or
add
addb
cmpsb
arpl
add
call
add
cwtl
sub
outsb
jno
or
int
ror
aaa
out
mov
mov
stos
or
inc
xor
into
push
add
push
dec
dec
mov
shr
push
cld
jno
into
jle
inc
add
mov
pop
inc
mov
pop
xor
xchg
push
cli
nop
stos
sti
out
and
dec
mov
out
jae
movl
cmp
mov
add
enter
sbb
inc
push
cmp
and
arpl
and
inc
gs
jne
test
push
add
inc
sub
out
jge
and
gs
inc
sbb
add
inc
or
cli
mov
sti
adc
rorb
jae
push
js
gs
imul
lea
movswl
cmp
xor
fisttpl
scas
xor
rcrb
jb
jbe
movsl
xor
js
add
mov
jg
jg
add
dec
mov
mov
jmp
es
adc
add
inc
cwtl
dec
pop
outsb
xor
add
pop
arpl
add
pop
sub
mov
repnz
or
out
xchg
stos
mov
mov
sub
lcall
inc
cld
mov
jp,pn
xor
add
jb
mov
ret
mov
jl
push
cmpsl
add
test
mov
dec
lret
xor
stos
add
scas
ret
pop
add
dec
mov
jno
add
daa
mov
mov
and
gs
add
cld
insb
test
subl
inc
push
mulb
lods
add
int
and
pusha
push
aad
cli
cmpsl
gs
rcrl
add
and
bound
sbb
xchg
rorb
fbstp
mov
shlb
andb
jb
rcr
mov
and
xchg
inc
mov
xor
les
add
mov
push
ja
rorb
dec
fistps
aas
pop
mov
and
mov
push
sbb
jmp
pop
leave
or
mov
ret
fiaddl
add
rcrb
or
jl
pop
rcrl
out
cmp
loop
inc
mov
add
cs
or
add
inc
in
sbb
mov
ret
push
imul
dec
jbe
add
ud0
adc
add
pop
sbb
sbb
add
test
and
push
inc
loop
xchg
cmc
jno
shll
or
push
pop
adcb
cmpb
out
cltd
cld
bound
add
push
stos
mov
add
insb
pop
out
js
jl
arpl
rolb
lods
or
rcrb
rcrb
add
mov
adc
xlat
add
adc
pop
mov
and
adc
inc
sbb
push
into
stos
shlb
mov
lods
mov
mov
mov
cwtl
add
sub
xchg
jbe
aam
push
ffreep
stos
mov
adc
out
pop
sub
mov
add
or
js
call
lea
sahf
sub
add
mov
add
inc
enter
je
mov
adc
inc
inc
xor
lds
add
movsl
rcll
sbb
mov
add
movsb
xor
rorb
inc
push
and
out
mov
mov
add
jb
and
int
roll
inc
in
mov
mov
dec
xlat
xchg
pusha
and
in
xorl
dec
cmpsb
shlb
icebp
std
out
shr
in
hlt
dec
sbb
mov
xchg
lock
xchg
add
mov
mov
dec
frstor
mov
adc
pop
ror
pop
mov
inc
and
inc
and
push
or
sub
loopne
mov
push
stc
pop
cmpb
add
sahf
mov
or
adc
sub
xor
movsb
jae
add
ficoml
jg
jnp
add
shr
push
adc
inc
flds
stos
popf
push
dec
aaa
pop
pop
jns
data16
lret
add
imul
arpl
lods
jno
mov
add
xchg
xor
cmpsb
mov
lcall
sahf
mov
add
in
sub
les
jns
push
jo,pn
in
cwtl
add
and
jl
or
mov
inc
sar
pop
dec
xchg
mov
or
push
push
inc
pop
add
mov
arpl
movb
cmp
mov
add
mov
add
out
std
pop
pushf
cmp
inc
ret
adc
dec
push
clc
addb
lahf
imul
jno
push
fisttpll
aam
or
pop
repz
add
inc
fcoms
add
lds
add
jge
lods
in
loopne
clc
dec
pop
ret
jle
mov
and
jb
clc
add
jl
dec
jb
add
ror
cltd
aaa
ljmp
pop
jbe
cld
fstpl
testb
inc
imul
inc
pop
adc
add
pop
daa
into
cwtl
clc
loope
add
fmul
push
imul
dec
pop
cmp
sub
pop
jo
mov
insl
mov
arpl
jb
lods
imul
pop
lret
mov
xor
cwtl
into
jae
out
cmpsb
rcrb
add
stos
inc
lcall
popa
inc
shll
and
jge
xchg
shlb
cmpsb
cmp
cmp
dec
in
idivb
add
and
pop
add
sub
pop
int3
in
pusha
adc
lea
add
lods
pop
hlt
arpl
add
xchg
add
mov
adc
ret
insb
dec
sub
pusha
xor
add
les
or
add
cld
lods
and
add
jl
fadds
mov
add
cmp
into
and
push
push
scas
cmpsl
cmp
dec
mov
test
outsb
jle
mov
add
inc
jmp
adc
cmp
incb
movb
int
cmp
cli
arpl
add
sub
and
ljmp
xchg
add
ss
inc
or
jg
mov
dec
lret
pop
cmp
push
cs
add
or
cli
mov
push
and
ds
or
dec
add
xchg
mov
pop
sub
add
nop
aas
out
mov
dec
inc
xchg
xchg
scas
sub
cmpsb
inc
fwait
add
popa
adcb
ret
add
lret
jg
xor
out
or
fidivrs
mov
add
jl
mov
add
xchg
inc
sub
dec
mov
add
dec
out
mov
xchg
jmp
pop
or
add
add
shlb
inc
in
add
jle
dec
inc
jmp
insb
xor
cmp
sahf
pop
push
icebp
shlb
jmp
test
or
sub
inc
or
arpl
add
stos
ja
shl
movsb
xchg
inc
lea
mov
andb
inc
push
add
dec
dec
add
sub
xlat
xor
or
add
pop
loope
cmp
sub
xchg
push
fldl
test
loopne
repnz
sub
xor
sbb
and
pop
inc
sbb
dec
and
lods
add
inc
mov
outsb
cmp
int
cli
cmpsl
add
mov
rolb
jl
pop
outsl
push
xchg
leave
or
mov
movsb
scas
inc
hlt
cld
pop
lcall
test
cmpsb
pop
add
imul
shll
jp
add
arpl
dec
add
mov
outsl
lcall
sub
pusha
add
add
push
xor
out
shrl
add
aam
test
les
xorb
loopne
add
mov
sbbl
scas
pop
test
push
xchg
cli
inc
ljmp
jae
lcall
mov
mov
insb
adc
inc
xor
sbb
cmp
mov
testb
sbb
stc
pop
adc
and
inc
repnz
or
sbb
lock
iret
add
add
scas
push
je
sub
leave
aam
add
adc
jbe
mov
add
dec
rcrb
add
xchg
arpl
iret
ret
js
loopne
adc
adc
sbb
cmp
out
add
pop
cwtl
in
sti
je
rolb
dec
inc
data16
mov
call
dec
insb
sub
loopne
mov
loopne
popf
sub
out
popa
jb
xchg
inc
mov
and
subb
outsb
aam
cmp
shlb
pop
push
lods
add
mov
sub
and
add
xchg
xchg
clc
shll
sub
xchg
push
cmpb
int
outsb
push
gs
jmp
insb
int3
xchg
rcl
add
and
arpl
add
lret
movsb
jno
inc
add
xchg
adc
xchg
add
ja
into
xchg
in
addb
mov
arpl
mov
mov
xchg
loope
pop
add
and
ror
push
scas
add
enter
fstp
xchg
or
dec
add
mov
add
loop
rclb
pop
sub
mov
fcom
xorb
rorb
fsts
je
pushf
and
cmpsl
push
mov
or
inc
mov
popf
sbb
xchg
lret
orb
pop
jae
icebp
pop
jne
inc
cmp
push
hlt
insl
cwtl
add
jo
xchg
cmp
inc
icebp
shr
sbb
push
add
int3
aas
sahf
ja
test
into
in
mov
pop
lahf
aam
shr
jmp
push
xchg
daa
add
cmpl
in
adc
fnsave
enter
aaa
gs
add
mov
fisttpl
inc
mov
mov
xor
add
pop
ret
insl
dec
insb
sbb
lcall
add
mov
pop
cld
and
rcrb
lss
movsl
add
add
mov
mov
lods
add
lods
sahf
jecxz
add
mov
clc
icebp
cli
inc
pop
cwtl
push
popf
jle
inc
pop
scas
fmull
or
std
adc
inc
add
cli
cmp
fsubl
leave
jae
xlat
test
jg
jns
push
pop
nop
sbb
mov
jle
add
xchg
or
frstor
sahf
int3
rcl
unpckhps
mov
popf
icebp
mov
and
sbb
call
aas
popa
lods
push
xlat
stos
mov
fstl
jb
inc
cmp
jbe
add
dec
subl
in
lock
fdiv
rcrl
nop
sbb
lods
xchg
jae
add
test
and
add
add
sti
mov
sbb
and
in
pop
ljmp
cmp
rcrl
cmp
sahf
inc
subw
out
or
add
movsb
mov
inc
fldl
inc
cmc
push
and
int3
inc
push
add
push
pop
rcrb
xchg
mov
sbb
and
iret
pusha
dec
test
xchg
dec
andb
aam
clc
pop
and
mov
push
xchg
fs
add
dec
xor
sarb
outsb
aaa
push
ret
inc
pop
movsb
movsl
out
cmc
int
cwtl
cmp
cmp
movb
pop
add
arpl
mov
adc
in
inc
lcall
mov
mov
jne
add
mov
mov
loopne
add
add
cmpsb
shr
adc
xlat
inc
or
cwtl
outsb
add
push
imulb
add
adc
xor
lods
roll
sub
fwait
test
into
repnz
or
mov
sbbl
lods
stos
add
and
mov
pop
test
pop
xchg
sub
mov
shlb
jbe
add
push
and
fs
sbb
add
vpacksswb
mov
stos
xor
pop
fnstsw
pop
pop
std
mov
stc
pop
cld
and
dec
sahf
xchg
or
adc
outsb
mov
dec
gs
pop
cmp
insl
test
jmp
adcb
cmp
sarl
shrb
fnstsw
call
fldenv
mov
adc
popf
add
mov
cs
add
repz
add
loopne
push
enter
add
popf
movsb
inc
int
cmp
push
lret
adcb
mov
add
test
inc
outsl
mov
leave
or
xchg
add
adc
add
xor
pop
and
pop
mov
mov
orb
mov
in
pop
jb
and
fiaddl
pop
xchg
scas
repz
cmp
inc
pop
add
loope
lcall
add
or
dec
adc
add
push
loopne
mov
push
push
fmuls
leave
xor
bound
add
adc
loopne
mov
inc
cwtl
add
or
mov
lock
cli
popl
jg
add
int
movsl
jle
cmp
arpl
jmp
rcl
nop
adc
add
sub
icebp
add
sarb
cmp
dec
sbb
stc
inc
roll
xchg
inc
fidivs
add
inc
stos
daa
dec
xchg
add
add
fsubs
shrb
stc
sbb
add
cmpsb
arpl
push
dec
mov
inc
shrb
call
jmp
sti
dec
icebp
jo
pusha
or
lods
add
ret
rcrb
rdpmc
lea
mov
sbb
push
inc
movsb
rorb
aam
jae
xchg
xchg
sub
orl
into
imul
rcll
and
and
push
insl
mov
mov
add
lea
inc
lcall
cltd
inc
inc
aas
xor
insl
jl
cmp
inc
cmpsb
call
das
and
insl
mov
stc
sub
stos
pop
add
adc
sbb
aam
in
rcrl
jge
or
sar
aad
mov
ret
add
jno
add
sarb
push
xchg
loopne
add
es
dec
add
add
hlt
inc
jle
lock
sbb
das
imul
sbb
popf
add
repz
or
jp
fmull
add
imul
or
adc
mov
popf
cmp
add
push
mov
repz
add
dec
loopne
fsubs
dec
daa
aaa
mull
mov
mov
inc
punpckhwd
sub
inc
addr16
lea
fsubr
push
jmp
jnp
add
add
pop
pusha
nop
cmp
push
mov
negb
dec
add
xor
imul
aaa
mov
scas
pushl
add
sahf
mov
pop
cmpsl
inc
xchg
jo
sbbl
leave
xor
lahf
sub
icebp
aas
repnz
shr
mov
dec
sub
arpl
rclb
push
addr16
addl
inc
xchg
jno
das
rcl
std
testl
xor
or
cmp
mov
ss
insb
scas
popf
mov
add
cs
add
and
pop
fistpl
cmp
ds
rcll
mov
xchg
xor
add
add
sbb
cmp
adc
cmp
mov
ret
aas
push
add
enter
lds
scas
out
dec
pop
fwait
sahf
adc
insl
in
adc
dec
mov
iret
push
pop
jecxz
add
xchg
jae
imul
add
xchg
pop
inc
xchg
jb
xor
pusha
in
mov
call
daa
and
inc
dec
mov
add
sub
xor
ss
jns
add
push
arpl
rcrb
dec
jne
sbb
jb
ds
addb
adc
jge
add
mov
add
cmp
add
ret
and
add
pop
arpl
add
xor
sbb
and
jg
mov
jo
add
push
xchg
lock
arpl
nop
bound
cmp
and
jge
add
sbb
rcll
loop
testb
mov
int
add
push
sbb
add
subl
mov
mov
fildl
jg
cmp
popa
je
add
rcrb
push
pop
mov
push
ret
ja
lods
sub
insl
js
inc
mov
int3
cld
out
ja
sub
pusha
lret
test
or
add
or
mov
mov
jo
pusha
lock
psrld
or
filds
push
addr16
sub
cmp
sub
add
clc
insb
sbb
imul
fisttpl
ret
lret
dec
mov
mov
fwait
add
pop
dec
aaa
loopne
mov
xchg
pop
movsb
andb
cli
or
arpl
jl
pop
adc
mov
into
and
gs
in
lret
js
adc
mov
add
test
mov
bound
xchg
dec
out
and
inc
call
cs
out
xor
xchg
add
inc
pop
lret
aaa
ffree
addr16
cld
mov
or
icebp
mov
sbb
inc
incb
ja
or
push
rolb
scas
or
shll
ficoml
div
jae
mov
add
jo
jl
xor
jbe
call
push
add
jle
icebp
pusha
rorl
cmp
gs
lret
aam
pop
xchg
in
cli
add
loop
dec
xlat
out
gs
or
xchg
repz
sahf
add
xchg
in
xchg
cmp
call
push
pop
fdivrs
add
lods
adc
std
ret
rcl
leave
aaa
xor
push
lods
xchg
mov
mov
data16
jnp
inc
andl
push
lea
iret
out
add
addb
or
mov
ljmp
pop
pop
pop
add
testl
add
xor
shlb
mov
stos
out
sub
rcll
or
mov
pop
mov
mov
rcr
inc
inc
add
xlat
dec
inc
stc
sub
pop
sbb
jne
out
rorl
add
sbb
cmp
mov
in
cmp
and
push
icebp
mov
add
arpl
push
add
scas
xor
enter
add
and
pop
lods
test
stc
push
rcrb
xchg
repnz
dec
in
jle
sbb
inc
inc
ljmp
cli
rcrb
sahf
pop
dec
jmp
xchg
push
inc
sbb
cmpsb
add
loope
add
rcr
fistps
xor
ljmp
stos
add
pop
addl
dec
add
arpl
sti
popa
mov
fidivs
inc
add
sub
inc
add
lret
push
lahf
nop
insb
lods
add
popf
inc
mov
and
xor
mov
ret
xor
or
mov
cmpsb
push
xorb
fnstsw
stos
aaa
clc
add
add
cwtl
les
inc
cmpsl
or
pushf
pop
dec
pop
mov
add
jge
and
addl
mov
mov
jecxz
es
nop
movsb
adc
mov
pop
fwait
dec
psrlq
andl
cwtl
push
add
ss
mov
test
push
add
pop
ret
fwait
jae
push
nop
pop
iret
mov
cmp
andb
insb
push
mov
mov
pop
sub
in
icebp
pop
enter
add
call
aas
add
mov
inc
loopne
sub
fiaddl
or
packsswb
push
mov
and
push
rcll
add
xor
iret
outsb
lock
jp
add
sahf
adcl
imul
shrl
daa
add
adc
jo
insl
xchg
add
adc
cmp
movsl
nop
cs
gs
inc
stc
clc
dec
mov
ret
arpl
jns
outsb
or
jno
daa
and
cmp
stos
idivl
xacquire
jb
xchg
std
pop
sbb
test
push
popa
add
and
mov
add
das
add
jl
jge
and
in
rolb
into
wrmsr
pop
test
sub
loopne
mov
add
fmull
mov
jmp
inc
in
xchg
dec
hlt
add
inc
lea
jnp
add
pusha
loop
fs
les
lcall
fadds
mov
jne
mov
inc
add
aad
xchg
sub
arpl
rclb
jecxz
insl
sahf
adc
mov
into
mov
arpl
cmp
insl
dec
pop
add
sub
fisttps
inc
pop
lea
cmp
sub
rcr
pop
push
ja
into
repnz
xor
rcl
dec
movsl
pop
mov
xchg
dec
rcll
mov
jns
sti
pop
adc
sbb
push
loope
lahf
enter
add
jno
add
jmp
jp
add
jl
mov
pop
and
add
xor
insl
jne
popf
cmp
inc
pushf
add
mov
add
cwtl
movsb
add
push
outsl
arpl
sbb
mov
lods
add
repnz
push
add
jg
xlat
cmp
pop
add
in
adc
adcl
pop
jb
shlb
adc
mov
cmpsl
add
int
xor
jno
add
addl
add
push
gs
in
jbe
nop
jae
xchg
add
cmp
aaa
arpl
or
andb
test
pusha
insb
push
daa
bound
arpl
fiaddl
repnz
xor
rorb
push
inc
and
pop
stc
nop
fadds
out
add
cmc
add
fldt
pop
xor
add
mov
andb
and
adc
mov
add
sbb
pop
sti
and
push
add
jl
shr
pop
add
dec
pop
cmp
out
jecxz
aam
leave
push
icebp
add
arpl
xchg
jmp
stc
push
add
pop
inc
dec
cld
jb
cmp
filds
icebp
loopne
cmp
mov
iret
mov
sarl
inc
ret
cmp
leave
pop
dec
fsubs
out
lods
lods
mov
jge
sub
shlb
pusha
fldl
mov
xlat
push
lret
jge
addb
hlt
jns
cmp
into
add
mov
pop
cmp
add
sub
xchg
xchg
adc
ret
imul
push
inc
mov
add
insb
cmp
test
shll
xchg
fs
push
dec
lds
incb
cmpsb
pop
insl
xor
inc
cli
pop
push
popa
lea
ror
add
jb
inc
fldl
or
arpl
inc
fadds
in
add
pop
subl
scas
cld
imul
rcrl
sub
dec
add
test
cmp
bound
add
lahf
ljmp
inc
add
iret
push
mov
mov
jo
and
out
add
ljmp
pop
enter
dec
call
jae
cmp
cwtl
mov
xor
xor
sbbb
mov
cli
xchg
cltd
sbbl
sti
pause
xor
cmc
mov
jl
xchg
loopne
popf
jbe
jb
lock
movl
movsl
add
js
test
add
outsb
jle
inc
es
mov
or
jns
add
push
clc
mov
subps
mov
lret
cld
into
add
push
adc
jecxz
dec
cwtl
sbb
mov
aam
out
add
add
dec
and
ljmp
incb
bound
rcr
pop
aad
inc
movsb
adc
pop
push
adc
arpl
dec
bound
push
dec
dec
aas
inc
leave
andb
decl
outsl
mov
xchg
pop
ret
lahf
out
test
arpl
jnp
and
loopne
js
add
mov
mov
mov
stos
mov
jno
fs
add
pop
xor
adc
ret
mov
rcpps
sbb
mov
test
test
loopne
outsl
push
arpl
mov
inc
jno
mov
sub
mov
jecxz
cmp
iret
sar
mov
out
cld
arpl
add
popa
add
imul
dec
fldcw
mov
std
sbb
jl
ret
xor
adc
mov
sub
add
jnp
mov
dec
sub
aad
loopne
inc
je
lea
add
ja
jle
add
xchg
ret
inc
xchg
xchg
xchg
testb
add
incb
bound
jb
push
call
xchg
add
lock
add
push
adc
push
mov
xchg
add
pop
mov
push
leave
jle
mov
mov
test
fldenv
add
in
lret
adc
cmpsl
and
test
orb
testb
add
add
filds
dec
dec
repnz
js
cmp
aaa
add
add
int3
mov
mov
aad
sub
les
ret
in
add
popf
cmpsb
adc
jmp
xor
inc
sbb
cmp
lret
int
aas
pop
cmpsl
ljmp
sbb
add
xchg
sahf
add
inc
rcr
cwtl
xchg
pop
add
pop
jl
pop
ret
or
mov
es
inc
xor
dec
out
fsubr
add
inc
or
add
bound
stc
adc
and
outsl
hlt
add
fucomi
daa
psubd
dec
stos
mov
add
cs
rcrl
mov
test
jmp
mov
loope
add
push
sar
dec
lock
xchg
mov
xor
fldenv
int
dec
mov
add
in
inc
adc
enter
cltd
jns
add
cmc
popf
pop
test
inc
add
add
iret
lret
aas
mov
aas
xlat
nop
or
loop
arpl
in
xchg
add
aad
inc
inc
dec
test
mov
shrb
jns
mov
test
dec
pop
bound
push
cmp
enter
adc
mov
cs
add
repnz
fadds
jecxz
cmpsl
scas
pop
jo
ret
loop
add
push
les
movb
dec
out
add
pop
pushf
add
scas
aas
mov
or
test
add
rolb
shll
xchg
ret
sbb
push
orl
and
arpl
sub
and
cli
aam
inc
ficoml
and
add
out
ret
or
xor
sahf
xor
pop
std
push
jp
loopne
pushf
or
xchg
cmp
push
in
add
movsl
pop
xor
xchg
roll
push
and
popa
xchg
inc
scas
add
ret
add
jecxz
jle
xor
fwait
add
jae
and
sbb
leave
dec
aaa
iret
xor
add
shll
pop
cmp
push
jo
fs
cs
inc
imul
cmp
jmp
add
dec
dec
iret
outsb
inc
inc
ret
les
pop
and
incl
fistps
sub
sbb
sahf
dec
or
push
das
adc
mov
shr
mov
mov
sub
pop
add
or
xor
xor
jnp
mov
mov
aaa
xchg
cwtl
loopne
add
scas
mov
sbb
ljmp
aaa
nop
push
add
inc
sbb
adc
add
sahf
and
add
fs
pop
push
cmp
loope
and
inc
jbe
push
mov
cmp
inc
icebp
or
cwtl
rolb
lret
shlb
mov
jp
pusha
add
xor
hlt
add
iret
aas
movsl
dec
mov
jnp
add
pop
sahf
test
icebp
add
jbe
popf
cltd
ret
mov
add
rcl
add
cmpsb
cwtl
in
push
aad
cmp
mov
add
test
not
add
js
or
loope
add
repz
daa
leave
movsb
sbbl
loop
and
inc
cmp
loopne
cmp
pop
pop
jo
stos
rolb
test
and
insl
dec
add
pop
sti
add
stos
cmpsb
popf
sub
sub
shlb
test
icebp
add
bound
hlt
add
xchg
add
pop
pop
sub
cmc
inc
add
fstpl
pop
stos
cwtl
shrb
or
adc
cmp
inc
mov
stc
and
add
jae
dec
das
sbbl
add
push
add
sub
ds
or
xor
jb
adc
repz
fs
loope
insl
mov
and
jg
cwtl
adc
pusha
or
in
push
repnz
push
sbbb
arpl
push
call
jge
gs
incl
and
fnstsw
push
dec
xor
iret
insl
arpl
fcomps
jl
aas
add
pop
xchg
testb
aad
cmp
arpl
rolb
fists
insb
adc
into
jae
aaa
mov
adc
add
xchg
xlat
test
mov
decl
sub
loopne
loope
push
repz
push
int
adc
mov
aas
and
jbe
push
or
add
mov
jecxz
or
out
push
sub
mov
inc
repnz
lahf
bound
pop
lea
mov
xchg
sbb
mov
add
add
mov
mov
add
sti
lahf
adc
hlt
mov
or
push
aaa
sub
fisubs
dec
inc
inc
jp
pushf
add
mov
xchg
add
push
jb
stc
mov
pop
pop
dec
fldl
mov
push
rorb
outsb
fistps
fsubs
and
jmp
pop
rcrb
icebp
lock
inc
test
ljmp
push
or
popf
mov
pop
inc
in
add
das
jge
enter
sahf
addl
in
sub
xchg
inc
stos
and
not
mov
inc
lcall
adc
lods
fwait
xchg
sbb
mov
aas
xchg
rcrb
in
inc
add
adc
popa
outsb
push
dec
jp
cld
or
icebp
out
shlb
rorl
aam
add
lods
mov
push
cmpsl
clc
pop
xor
cmp
mov
mov
and
xor
rcrl
lds
add
cs
loop
sarl
lock
fsub
and
cmpb
add
imul
add
jbe
pop
add
mov
test
iret
push
add
lods
outsl
dec
mov
jecxz
cmp
shlb
ljmp
add
pop
add
mov
testb
sarb
lcall
xchg
and
das
and
xor
jbe
insl
xchg
rolb
push
in
ljmp
cmpb
dec
cmp
or
data16
lock
mov
xchg
hlt
xor
or
push
xor
add
gs
mov
movsb
fcomip
inc
push
in
insb
aad
mov
cld
add
out
jo
mov
add
enter
arpl
sbb
hlt
loopne
in
inc
pop
movsb
je
adc
mov
lods
pop
or
orl
leave
inc
in
cmc
inc
pop
mov
sahf
jne
push
sbbb
ljmp
pusha
inc
repnz
adc
jbe
add
fwait
aad
inc
sub
mov
lret
shlb
cmp
xchg
push
sti
add
shrb
jo
and
lcall
mov
ret
sbb
movb
pop
adc
pusha
fisttpll
ljmp
add
pop
or
xchg
push
inc
sbbb
inc
add
pop
dec
stos
lret
add
inc
sub
pop
xor
inc
xchg
fimuls
les
icebp
testb
imul
add
mov
fcmovb
es
lods
jmp
or
jns
inc
out
xchg
push
lret
scas
popa
int3
out
lods
nop
cwtl
into
das
mov
stos
orb
arpl
cmp
dec
xlat
mov
jge
sub
mul
add
jp
inc
call
arpl
lods
xchg
xor
or
inc
pmulhuw
add
mov
int
pop
dec
mov
pusha
fdivrl
inc
loope
lahf
mov
push
mov
in
add
xchg
mov
scas
shr
add
adc
push
add
or
arpl
stos
sbb
dec
sti
add
mov
stos
cmp
and
push
aam
cmp
lods
inc
or
scas
push
fsubs
sbb
insl
out
inc
pushf
jo
sub
movsb
dec
cltd
dec
loopne
cmp
mov
test
add
hlt
shl
fsubrl
or
mov
add
and
dec
lret
cmp
xchg
add
jecxz
xlat
lret
and
mov
inc
outsb
cmpsb
ret
test
clc
call
test
jmp
les
js
xchg
arpl
push
aam
add
pop
and
out
fidivrs
cmp
sbb
jmp
ret
data16
xchg
mov
dec
mov
mov
lock
fidivl
loop
cs
ljmp
add
fs
shl
push
add
add
push
add
mov
add
in
ret
sarb
add
mov
ja
out
arpl
hlt
repz
popf
clc
and
icebp
pop
jg
and
lock
je
js
mov
stos
dec
loopne
mov
scas
fcomp
add
pop
fiadds
push
inc
shll
cli
bswap
rcr
mov
movsl
cmp
add
inc
or
mov
xor
and
or
pop
xlat
in
dec
add
cmp
iret
add
mov
lods
sbb
mov
rorb
dec
arpl
pop
add
mov
pop
aam
xor
gs
xchg
cmp
ret
js
rol
adc
mov
mov
imul
add
adc
fucom
jecxz
inc
shlb
outsb
fistl
sub
mov
add
in
pusha
dec
popf
mov
add
imul
xor
and
stos
arpl
add
jecxz
sub
add
xor
loopne
cmp
nop
inc
pop
xchg
inc
pop
mov
cmp
and
add
push
mov
and
jp
cmp
xchg
lods
repnz
add
sbb
push
stos
popf
xor
mov
jle
arpl
movsl
add
adc
cmp
scas
inc
gs
sbb
mov
push
out
jae
sbb
inc
sbb
inc
mov
ret
les
xchg
jge
arpl
add
fsubrl
pop
sarl
sbb
int3
add
push
sbb
testb
cmp
ds
popa
test
xchg
mov
enter
xor
repz
incl
dec
mov
jnp
pop
inc
mov
push
adc
inc
ss
mov
add
dec
mov
arpl
adc
add
cld
dec
cmp
add
jne
adc
cli
stc
test
add
fldenv
mul
inc
jno
or
rorb
push
cmc
in
int
dec
mov
sbb
ret
add
pusha
and
jge
xchg
add
arpl
cs
mov
mov
and
xchg
ljmp
xchg
inc
loopne
movsb
ds
push
and
push
loopne
add
aam
add
pushf
adc
adc
push
lret
into
repz
inc
and
sbb
fists
add
cs
std
or
ljmp
sarl
sub
add
in
sbb
ret
pop
sbb
add
ret
lock
cmp
add
dec
push
and
stos
fstps
cwtl
cmpsl
nop
jne
dec
mov
cld
mov
icebp
pop
jno
stos
sarl
add
fisubl
faddl
add
scas
push
imul
test
mov
andb
xchg
cmpsl
jecxz
and
movsb
fwait
rolb
and
jo
rolb
cmp
sub
xor
ds
add
fmul
add
lret
and
sti
les
jg
ret
jne
jp
mov
testl
mov
outsl
pop
add
insb
push
and
fldcw
inc
call
or
rolb
nop
fiaddl
inc
lret
ret
call
movb
mov
xor
push
dec
cmp
dec
out
add
in
lock
cmpb
add
pop
add
rolb
and
iret
sub
inc
add
pop
mov
add
push
push
jle
sti
jmp
ret
pusha
mov
rcrl
push
iret
adc
movl
jmp
mov
cmp
cmc
and
mov
inc
or
push
or
out
sub
lcall
mov
fdivrs
popa
inc
loopne
in
inc
sbb
stos
mov
mov
jo
jns
pop
sub
inc
lret
push
xchg
test
mov
add
cmp
mov
pop
std
icebp
lods
shl
shlb
arpl
outsb
cmc
push
jge
je
aaa
push
push
scas
sbb
sbb
mov
jno
jo
push
push
inc
jge
cld
mov
push
es
push
adcb
or
ja
add
in
inc
add
inc
outsl
inc
jle
add
pop
dec
sbb
cltd
cwtl
mov
in
inc
popa
inc
scas
add
sub
mov
lock
mov
jae
movsb
sarb
rol
popf
lcall
jbe
mov
add
cmp
adc
ljmp
or
cmpsb
add
jo
inc
arpl
jae
inc
ror
insb
lods
cmp
fsubrl
mov
test
pop
sub
test
cwtl
mov
push
mov
push
inc
cmp
in
in
repz
out
cmp
pop
add
xor
mov
dec
dec
jns
xchg
shrl
or
ljmp
testb
ret
inc
stc
add
push
and
inc
add
fmul
pop
xchg
inc
push
adc
aaa
mov
out
in
ret
imul
xor
pop
stos
insb
lods
mov
pop
xchg
mov
andb
mov
shll
add
les
push
aas
add
fstpl
add
cmp
ds
sub
inc
lds
add
nop
subb
movsb
or
flds
lea
add
leave
xchg
sub
xor
add
inc
mov
arpl
sub
add
jns
add
jmp
sbb
inc
ds
pop
aam
xor
ret
mov
mov
movsb
mov
inc
push
cmp
cmp
pop
or
push
arpl
lret
sarl
push
mov
ret
pop
cwtl
icebp
add
in
clc
add
add
inc
push
mov
jne
add
xchg
out
xor
std
mov
cmc
xchg
fisttpl
sub
adc
mov
inc
movsb
or
test
out
aam
clts
std
shrb
inc
out
cmp
xchg
adc
repz
adc
sub
adc
add
lcall
cld
lahf
cmp
xor
and
sub
pop
test
dec
orl
enter
ret
lds
sahf
mov
add
xor
daa
iret
cmc
in
add
inc
jns
add
mov
add
inc
mov
sbb
add
adc
inc
xchg
cmp
sbb
inc
add
jp
mov
outsl
ret
in
add
mov
mov
loope
in
xchg
inc
push
or
push
movsb
pop
pop
inc
cmc
jmp
jb
dec
adc
mov
pop
push
call
xor
jl
lods
out
gs
ret
sub
dec
testb
add
lea
add
out
call
add
jle
sarl
cmc
orb
stc
sbb
mov
or
fs
stos
cmp
sbb
add
pop
in
jns
pop
add
or
cmp
repnz
jle
cmp
add
fs
in
jg
add
cli
les
cmpsb
decb
sti
lea
out
mov
xchg
sbb
mov
sbb
push
ret
jbe
sub
xor
mov
nop
add
lahf
insb
xor
or
sub
cld
cmp
divb
add
insl
dec
add
push
lret
jo
ds
out
call
inc
loope
xlat
mov
outsb
mov
sub
aaa
sub
dec
xchg
bound
inc
lds
popa
rcr
jmp
lock
add
flds
inc
add
arpl
add
pusha
xchg
jbe
add
lret
pop
mov
pushf
sbb
add
add
add
out
xor
leave
jo
out
shlb
add
pop
sub
xor
in
addl
lea
mov
xchg
pop
xor
loop
xor
mov
add
and
call
hlt
mov
cwtl
popa
out
add
ljmp
nop
lock
repnz
add
push
ds
iret
xchg
jle
addb
sub
cld
pusha
mov
icebp
push
repz
inc
jne
scas
jnp
add
sbb
push
add
xchg
adc
adc
sub
jge
xor
lods
mov
inc
push
in
xchg
iret
and
inc
lret
or
xor
adc
rcrb
ss
sbb
mov
jo
inc
pop
add
jbe
jge
xor
cmpsb
add
pop
adc
xchg
jne
lods
add
sub
jp
loopne
pop
xor
nop
cmc
add
outsl
fstpl
xorb
movsb
xlat
push
inc
stos
lods
in
cmp
repnz
es
scas
shl
ret
arpl
ror
pop
outsl
sub
push
push
inc
dec
sub
int3
lock
xchg
mov
repz
js
xchg
shll
pushf
mov
outsb
xor
leave
ret
outsl
push
and
mov
nop
pop
cmpsl
jge
roll
add
rcr
test
test
and
mulb
add
movsb
mov
adc
xor
add
mov
les
insl
xchg
aam
rol
mov
test
xchg
cld
mov
lret
fidivrl
cmp
dec
out
rol
push
shlb
outsb
add
arpl
push
add
pop
add
out
and
cmp
push
insb
pop
fidivrl
jle
push
inc
mov
push
lds
les
cmp
mov
mov
aaa
pop
inc
arpl
adc
incl
mov
shrl
into
out
icebp
jns
add
pop
fisubrs
mov
inc
dec
jo
nop
arpl
add
pop
push
flds
pop
jg
addb
lods
add
aas
xor
mov
push
roll
clc
cmp
ffree
iret
jno
add
xor
lahf
ljmp
pop
push
mov
adc
adcl
push
xsavec
inc
push
pop
je
mov
add
push
aad
jns
jle
add
add
add
arpl
inc
pop
add
sbb
cld
fcomp
inc
stos
or
push
sbb
repz
mov
cmpsb
lret
testl
mov
push
inc
sbb
pop
pushf
jae
orb
jno
add
mov
push
inc
je
shll
xchg
loop
sbb
jge
sbb
dec
jnp
mov
cwtl
scas
add
mov
adc
or
out
daa
clc
loopne
lret
pop
pushf
add
push
xchg
jle
adc
inc
lcall
es
mov
sub
in
in
aaa
add
pop
fdivrs
icebp
mov
jmp
dec
push
jl
add
jae
testb
cwtl
sub
cmpsl
lcall
jbe
in
sarb
sub
cmpb
mov
push
and
pop
mov
mov
jg
outsl
sub
inc
rorl
mov
cltd
xor
test
cmc
inc
push
mov
cmpb
mov
imul
aaa
xor
add
jecxz
lea
rolb
imul
pop
xchg
jge
cs
addb
inc
push
sub
cwtl
out
addr16
xchg
in
add
jl
add
bound
xor
or
arpl
mov
dec
scas
test
fildl
cs
mov
fstps
jg
and
xor
add
cmpsl
pop
xchg
movsl
sbb
rclb
pusha
inc
scas
das
lea
xchg
sbb
push
ljmp
cld
lods
popl
jle
pop
mov
push
sub
and
sub
adc
xchg
pop
popf
sarl
inc
inc
insl
pusha
push
add
test
add
sub
aad
sub
cld
shrl
sbb
in
fidivs
push
ljmp
pushf
ss
adc
fmul
inc
mov
add
push
pop
pop
sar
add
adc
test
arpl
pop
push
or
mov
in
inc
mov
icebp
outsb
push
inc
mov
pushf
pop
nop
inc
pop
lcall
mov
dec
cmp
and
jge
xchg
sbb
inc
adc
jb
add
adc
iret
mov
fcmovb
psllq
adc
loope
mov
int3
pop
jne
or
jno
imul
cwtl
add
fwait
adc
sbb
cmp
fdivrs
mov
sub
pop
test
dec
push
dec
shll
dec
mov
add
dec
xor
xchg
nop
add
int
fstps
fdivrs
data16
xor
add
jmp
call
sldt
push
out
jae
mov
and
add
rol
add
mov
add
xlat
outsb
mov
pusha
insb
pmulhuw
inc
rclb
dec
aaa
mov
out
pop
test
add
xor
inc
mov
es
fadds
add
imulb
out
and
daa
shrl
fiadds
mov
adc
pop
add
stos
rol
in
mov
push
inc
cwtl
dec
sub
enter
clc
add
jbe
cmp
aaa
add
push
dec
mov
fs
nop
dec
bound
xor
add
test
adc
fwait
popf
sbb
dec
add
inc
sbb
xor
inc
movsl
mov
inc
leave
in
add
mov
mov
xchg
pop
push
pop
inc
mov
pop
jbe
js
sbb
or
jbe
sbb
lea
movb
push
dec
pop
jae
add
sbbl
xlat
scas
fcom
xchg
lcall
jmp
sbb
add
outsl
add
ret
mov
roll
and
jecxz
lea
rclb
dec
sub
add
test
sub
jle
jmp
fldt
or
add
dec
aaa
cltd
jecxz
ja
jg
cmp
inc
pop
dec
in
add
jmp
test
and
ret
cmc
cmp
add
das
pop
push
adc
bound
cmp
jg
test
sarb
push
add
pop
sarb
inc
add
inc
sti
outsl
lods
daa
shlb
push
push
loopne
xorps
cmp
lahf
xchg
cmc
scas
sbb
roll
arpl
inc
add
add
dec
arpl
call
xchg
aam
pop
pop
or
shl
add
stc
shl
jns
adc
xor
inc
daa
int3
push
movsl
rclb
cmp
jg
xor
fcom
pop
sub
pop
sub
aam
jbe
add
ds
lahf
add
inc
add
and
pop
cmpsl
loope
js
add
mov
out
jae
fld
push
add
mov
mov
inc
dec
in
in
dec
stos
jle
push
xchg
jo
inc
sub
add
mov
arpl
add
sbb
cs
xor
inc
daa
push
add
insb
pop
cmp
addb
lods
cmp
adc
mov
add
xor
fdivr
mov
ss
shl
or
jo
add
lock
ret
fnop
push
scas
add
jno
push
addl
pusha
push
mov
add
pop
jmp
jp
rolb
adc
sarb
inc
push
sub
adc
cmp
add
dec
jl
add
xchg
pop
aaa
sub
stc
mov
cmp
rolb
test
sar
pop
call
es
mov
add
rcl
sahf
lea
mov
mov
push
add
jbe
inc
sbb
mov
sti
jge
and
adc
shlb
add
pop
inc
nop
adc
xchg
stc
loopne
rolb
add
ret
inc
ret
iret
add
cmpsl
sahf
fcompl
dec
mov
mov
mov
push
ja
add
imul
add
xchg
out
push
pop
je
dec
and
add
shlb
repnz
pop
add
in
jnp
mov
or
pop
or
xor
jl
repz
popa
add
dec
in
jno
jp
add
jle
inc
xor
jbe
xchg
dec
jmp
lds
loop
iret
adc
int
int3
add
loopne
jl
add
insb
adc
jg
dec
add
ja
daa
inc
js
add
dec
rclb
pop
scas
jmp
cmp
shlb
cmp
shrb
test
xor
push
add
xlat
dec
push
loopne
xor
inc
or
adc
mov
lods
push
shrl
and
add
xchg
insl
daa
mov
jmp
sub
imul
add
add
sub
imul
xor
add
jns
lds
jl
xor
lcall
sbb
sbb
inc
cmpb
pop
push
movsb
cmp
xorb
out
add
inc
sbb
fidivrl
rcrl
loope
pop
nop
jl
push
inc
mov
push
push
sbb
inc
xlat
imul
sti
getsec
lock
mov
xor
jbe
sub
aad
out
addl
push
imul
and
mov
dec
pop
mov
pusha
out
push
sub
push
inc
mov
addb
jl
add
cmp
loopne
add
mov
inc
insb
mov
pushf
lods
adc
sub
dec
aad
mov
add
ret
jno
lcall
imul
add
js
jecxz
push
cs
sarl
inc
push
add
inc
loope
ljmp
and
mov
push
sub
adc
add
movsb
push
sub
dec
in
sbb
add
rolb
mov
and
sbb
fistpl
push
push
or
dec
lods
outsb
jl
in
add
aaa
xchg
add
pop
sbb
jns
rclb
mov
cmp
loop
mov
mov
inc
mov
push
add
sbb
adc
xlat
ljmp
pop
imull
mov
xchg
adcl
outsl
jmp
add
or
add
pop
push
jle
lods
aaa
inc
push
shlb
mov
add
int
and
mov
sbb
mov
ds
sub
mov
loopne
add
int
adc
dec
ret
or
sarl
jmp
push
xor
add
add
movsl
push
mov
fwait
pop
inc
xchg
or
add
shr
pusha
pushf
int
dec
mov
pop
add
data16
das
shrb
dec
mov
add
outsb
in
push
mov
inc
fcmovnb
jnp
jge
add
jne
ss
jl
add
pop
jmp
add
xchg
add
adc
xorb
fstpl
popf
in
inc
cmp
jo
mov
mov
rcrb
xchg
mull
add
ret
ret
sub
inc
lock
shll
or
mov
lret
loopne
pop
test
mov
jecxz
into
pop
sub
pusha
jbe
hlt
pop
and
inc
jnp
fistpl
test
add
stos
daa
sub
push
insl
or
rolb
mov
jns
ds
inc
add
dec
push
loope
iret
shl
add
pop
pop
pusha
js
add
dec
add
mov
das
inc
cmp
add
add
ds
pop
cwtl
add
add
dec
or
aas
add
into
fidivrs
inc
add
mov
xor
jb
lock
push
aad
lds
mov
fcmovne
data16
jp
add
jo
xlat
cli
cmpsb
addr16
loopne
cs
cmp
ljmp
and
inc
bound
mov
push
daa
or
xchg
cmpsl
dec
pusha
popa
out
xchg
arpl
stc
xor
inc
lds
add
ret
ja
mov
xchg
int3
adcb
push
add
popf
jae
out
mov
nop
loopne
cmp
jns
outsb
movsl
sub
add
iret
out
sti
rclb
je
mov
and
add
mov
add
sub
inc
cli
add
mov
add
dec
lods
es
seta
add
jge
jo
clc
cmp
inc
add
jl
mov
inc
sbb
lea
lret
mov
push
fidivs
xchg
xor
imul
adc
mov
fistpl
mov
cmpb
clc
add
data16
add
inc
mov
add
mov
into
xchg
movsb
jp
sub
cmpl
lds
loopne
fsubs
cmp
out
sarl
arpl
inc
dec
mov
cmpsl
addr16
in
imul
popa
xchg
push
push
mov
or
jp
xor
je
inc
rolb
push
dec
arpl
mov
inc
pusha
mul
pop
and
enter
cmp
rorb
inc
das
and
add
out
jle
je
and
mov
fmuls
nop
mov
and
rcrb
popw
hlt
or
ja
dec
add
xor
add
jae
pop
ja
add
jns
scas
aaa
pop
scas
or
iret
test
mov
add
or
or
push
sub
outsb
aas
jecxz
adc
jmp
or
add
inc
out
cld
call
imul
xor
add
push
and
jb
inc
adc
in
add
add
adc
xlat
push
testb
sbb
rorl
inc
push
stc
ja
inc
pop
frstor
inc
mov
pop
testb
andl
dec
ret
insb
xlat
xchg
daa
add
clc
add
push
mov
scas
leave
add
aas
sub
add
pop
mov
inc
cltd
hlt
add
push
aaa
outsl
add
jno
dec
and
out
jnp
sbb
add
notl
rclb
xchg
push
addr16
jg
push
hlt
stos
popa
inc
shll
xchg
stc
pop
inc
or
shl
rcrl
adc
sbbb
mov
fdivs
add
insb
ficompl
jo
mov
fsubp
xor
add
idivb
add
aad
jecxz
scas
sub
mov
std
cmp
or
aas
rolb
neg
dec
imul
ror
mov
jns
add
cmpsb
cwtl
aaa
add
pop
jecxz
xor
push
or
mov
out
arpl
lods
inc
icebp
add
sti
or
je
pop
cs
jnp
sbb
fidivrl
movsl
bound
xor
sbb
loope
ja
xor
jecxz
add
aaa
popf
inc
lret
roll
dec
sbb
rol
and
loope
aas
mov
cs
mov
xor
aam
add
sar
add
stos
add
pop
inc
mov
cs
into
and
inc
dec
mov
adc
dec
bound
adc
lea
cmpl
fs
or
clc
cmp
je
and
in
adc
out
data16
dec
jnp
pop
sbb
push
nop
nop
mov
pop
xchg
cmp
dec
test
inc
sbb
in
adc
mov
pop
jae
insb
sbb
mov
hlt
adc
adc
daa
mov
add
in
out
add
cmpsl
xchg
add
arpl
push
add
xor
int3
add
cli
out
adc
js
mov
sbb
cmp
mov
outsl
test
add
jne
pop
jl
sbb
xchg
add
adc
gs
js
rcrb
cwtl
sbb
or
jge
cmp
sub
cli
mov
test
dec
pop
add
add
sub
jecxz
xor
clc
nop
sub
sub
mov
rcr
ljmp
and
popf
mov
outsb
adc
pusha
leave
leave
add
mov
add
cmp
sub
add
loop
and
rclb
add
lds
inc
lock
scas
fsubrl
add
mov
push
mov
shrl
movswl
xor
jmp
cmp
jnp
lret
sbb
aam
push
loopne
pop
call
xchg
add
fistpl
pop
xchg
mov
outsl
test
sub
adc
jnp
fistps
cmp
jmp
jbe
in
cwtl
inc
add
add
add
push
in
insb
jb
xchg
mov
sub
inc
stc
add
lea
push
iret
dec
popa
or
pop
ror
scas
sub
mov
mov
dec
add
in
inc
fbld
cmp
subb
ljmp
orl
jge
shrb
roll
inc
mov
cmp
push
mov
outsb
icebp
sbb
fdiv
test
add
push
jecxz
leave
mov
mov
push
or
inc
mov
inc
mov
add
pop
jbe
mov
outsl
ds
xchg
jne
rol
dec
shlb
sti
add
push
scas
sahf
inc
xchg
je
movnti
cld
and
ficoml
cwtl
rolb
inc
dec
out
sbbl
inc
pop
xchg
pop
icebp
add
out
mov
lcall
mov
inc
shl
jae
pop
fldcw
mov
add
inc
scas
clc
das
iret
maxps
outsb
and
sbb
inc
mov
loopne
loope
test
jl
xor
addl
mov
inc
fwait
add
mov
inc
add
test
pop
repz
jo
bound
aam
mov
insb
lds
adc
cli
mov
jno
lcall
rcr
xchg
xchg
mov
arpl
cmp
adcb
lock
and
sub
add
push
fldenv
pop
fcomi
inc
add
lds
cmp
out
jg
jns
mov
call
mov
repnz
adc
popl
fwait
add
and
data16
add
push
sti
aad
mov
bound
adc
hlt
add
in
inc
lock
es
pop
cmp
jmp
test
mov
jae
sbbb
xchg
add
ret
cmp
add
fs
cmp
sub
pop
inc
rcrb
add
jb
cmp
inc
sub
mov
mov
jge
inc
xor
bswap
lds
add
mov
sbb
xchg
lea
incl
pop
ljmp
addr16
mov
pop
stos
and
xor
sbb
xchg
dec
shrl
add
shll
fdivp
mov
and
sbbl
popf
jo
gs
adc
push
adcb
pop
cmp
roll
adc
mov
mov
fdivrs
ret
mov
pushf
jmp
pop
ds
or
inc
xchg
mov
icebp
testl
inc
dec
scas
mov
add
push
add
dec
sub
add
leave
je
mov
sbbb
push
rolb
nop
add
lods
loopne
mov
jns
push
mov
iret
add
sti
add
xchg
add
push
or
loopne
add
mov
pusha
add
xor
addr16
cmp
cmpsl
and
add
adc
mov
lock
mov
leave
cs
mov
add
mov
ljmp
mov
inc
jae
add
imul
jl
aas
cmp
mov
add
push
shll
mov
enter
mov
mov
stc
add
icebp
dec
cmc
repz
push
test
arpl
mov
rolb
outsb
inc
jbe
cli
fwait
pop
incb
xchg
inc
and
sbb
jno
sbbb
inc
ja
cmp
insl
jp
mov
fldenv
and
lock
mov
movsl
rorl
and
xlat
add
push
cmp
dec
rcr
aaa
cmp
jne
pop
dec
imul
xchg
inc
mov
in
pusha
xlat
mov
fdivrs
mov
sbb
mov
xchg
add
inc
mov
imul
fsubs
movsl
add
push
and
ds
out
repnz
inc
fwait
or
cli
jp
push
jle
add
in
add
pop
in
add
mov
xchg
add
pop
repz
inc
push
outsb
add
push
cmpsb
inc
or
pop
mov
fsubp
sti
mov
xchg
mov
gs
xor
add
mov
test
stos
push
mul
inc
in
outsl
jnp
shlb
nop
sbb
add
inc
mov
or
xchg
cwtl
insb
jg
mov
cmp
add
insl
push
add
fsubr
and
enter
cmp
adc
sbbb
cmp
loop
mov
rolb
sbbb
aas
fistl
out
add
cmp
mov
jg
subl
mov
mov
inc
pushf
inc
sub
push
mov
or
adc
mov
xchg
call
jecxz
out
or
lds
mov
pop
pusha
repz
arpl
add
insb
test
add
sbb
lret
fmul
add
popa
sub
pusha
jecxz
pop
adc
call
clc
add
adcb
mov
lahf
clc
stos
pop
sbb
xchg
mov
cmp
dec
lret
lods
js
jnp
push
sub
cwtl
mov
call
shlb
loope
push
jo
cmp
icebp
jb
push
sbb
jl
add
adc
inc
lret
testl
stos
jno
inc
sub
add
enter
add
into
test
ret
add
and
mov
es
xchg
mov
add
xlat
pop
icebp
pop
je
ret
add
into
int3
lock
incl
lea
inc
mov
dec
test
jl
mov
sbb
adc
add
fs
enter
out
add
sahf
jl
mov
cmp
das
subb
cwtl
fwait
and
xchg
shrl
add
jb
xchg
adc
cmpsb
pop
fldl
inc
ljmp
out
push
adc
add
jne
aam
movsl
fwait
movb
pop
cmp
insl
insb
jmp
lods
int3
sbb
add
add
in
incb
xor
popf
mov
jmp
pop
inc
mov
mov
js
jg
add
je
mov
ficoml
inc
int3
pop
add
lea
cli
mov
mov
das
nop
xor
sbb
push
arpl
sbb
mov
shlb
add
hlt
out
lahf
mov
sub
dec
insb
xor
ror
lock
jne
dec
fstp
cmp
ret
jns
xchg
bound
pop
jmp
lods
xor
jmp
cbtw
add
insb
xlat
sahf
add
sbb
mov
cwtl
pop
fcmovbe
cmp
push
subb
mov
repnz
inc
pop
and
adc
push
lods
xlat
cmc
movsb
cmp
xchg
add
inc
mov
dec
das
js
mov
xor
pop
rolb
jae
arpl
pop
adc
ror
in
add
pop
adc
pusha
cmp
bswap
inc
ret
repnz
add
ja
inc
repz
or
add
dec
push
cmpsb
cmp
dec
add
xchg
sub
movsl
fsubp
add
xchg
rcl
push
push
cmc
test
ds
pop
dec
data16
filds
inc
test
and
jno
mov
rcrb
add
clc
xchg
imul
jno
jns
mov
movsl
test
add
jle
sub
loope,pn
ret
sub
add
lahf
pusha
adc
add
xorl
sbb
dec
into
loopne
orl
or
sub
divb
add
push
xor
push
inc
pushf
add
cmp
push
pusha
push
cwtl
adc
testb
add
add
pop
push
pop
rcll
mov
es
in
xchg
dec
iret
jle
add
xorl
das
add
scas
mov
dec
add
mov
inc
xor
sarb
push
add
xchg
test
shrl
pop
int3
and
cmp
movsb
xchg
push
jnp
mov
push
fisttps
jecxz
add
pop
movsl
call
add
lock
fcmovnbe
add
xchg
add
pop
stos
xchg
adc
pcmpgtw
xchg
push
arpl
and
or
pop
lods
andb
sub
push
add
pop
cld
mov
mov
aad
idivb
es
adc
push
pop
sub
shlb
mov
outsb
sbbl
arpl
aad
cltd
add
xchg
std
xor
shll
fisubl
sub
rcr
out
stos
cmp
movsl
mov
add
cmp
das
add
mov
loopne
and
pop
leave
xchg
rcll
add
xchg
sbb
jb
push
aas
popa
pop
addb
mov
mov
add
subb
xor
pop
xor
arpl
clc
test
movsb
sub
ret
or
andb
add
sbb
js
jns
pop
mov
pop
movsb
das
scas
andb
movl
cmc
mov
aas
add
je
mov
xchg
les
xchg
add
mov
and
mov
divl
and
mov
pop
mov
in
push
add
scas
xchg
add
xorb
cmp
cmp
or
add
mov
test
call
out
add
jp
inc
negb
dec
sbb
mov
sbb
call
add
pusha
and
add
setns
or
push
pop
inc
rolb
orb
frstor
scas
jmp
mov
andl
shrb
jl
sbb
mov
in
inc
add
xchg
icebp
adc
and
or
cwtl
add
cmp
mov
pop
push
add
scas
push
and
inc
std
rcl
dec
xchg
test
inc
or
iret
push
cmp
test
jmp
mov
mov
jbe
or
add
addl
jmp
push
xor
jp
add
int
add
or
stc
ja
adc
mov
popf
dec
icebp
push
out
faddl
inc
clc
inc
rcr
mov
mov
sti
adc
test
jno
test
sbb
mov
popf
jmp
fstps
test
rcrl
inc
add
cmc
cmp
add
mov
cmpsl
and
out
jp
pop
lods
and
add
push
cwtl
popl
mov
mov
shlb
insl
aad
cmp
jp
out
add
mov
cli
sub
xor
dec
add
mov
and
mov
rcll
add
lcall
clc
add
jae
or
enter
inc
adc
or
aaa
repz
sbb
lods
nop
test
jle
add
jle
jns
ret
mov
les
add
mov
out
rolb
mov
test
lock
mov
push
pop
pop
in
movsl
inc
cli
pop
das
scas
xchg
mov
add
inc
lret
xor
fdivp
add
mov
jo
add
inc
mov
data16
push
lea
mov
inc
int3
jle
fs
leave
into
ret
push
push
mov
inc
flds
xlat
mov
mov
push
push
ret
inc
mov
fldl
cli
into
and
adcl
mov
outsl
pop
and
sub
xor
shll
mov
pop
add
test
sar
ret
cmp
sub
orb
mov
jns
add
out
mov
test
xor
stos
mov
pop
dec
mov
arpl
sbb
out
fcomi
test
shl
flds
cmp
mov
insb
dec
out
xor
rcl
mov
ret
hlt
inc
cli
lods
jge
pop
add
push
mov
pop
cmp
cs
or
inc
shl
add
sub
xchg
ret
mov
sbbb
popf
add
leave
cmpsl
jge
shr
fcmovb
mov
jae
jns
popf
xor
add
mov
mov
je
sub
mov
enter
jae
cltd
xchg
test
fdiv
dec
xlat
addb
or
push
add
shlb
pop
add
shll
enter
mov
sub
adc
jnp
test
push
sbb
imul
in
add
mov
jp
jecxz
and
jns
cmpb
mov
pop
out
push
mov
arpl
popf
and
jnp
add
ljmp
pop
add
xchg
sbb
inc
push
movsb
and
pop
jg
aaa
mov
add
sbb
or
call
adc
push
add
divl
mov
dec
mov
mov
xorb
jbe
ljmp
or
and
jecxz
scas
sbb
das
add
imul
xchg
inc
mov
cwtl
pop
add
sbb
or
dec
out
arpl
addr16
jns
add
mov
lahf
mov
cmp
mov
repz
nop
loopne
fdivr
mov
inc
xchg
adc
adc
pop
or
mov
cmova
or
outsl
push
ret
add
sbb
sub
sub
push
popf
sti
add
pop
rclb
aad
bound
shrl
push
pusha
mov
jae
ljmp
adc
bound
sahf
imul
in
add
inc
inc
add
mov
inc
push
xchg
pop
popa
pop
jmp
mov
adc
clc
add
cmpl
jbe
mov
adc
cmp
and
mov
jae
add
pop
test
cmp
rcrl
xchg
push
mov
cmpsl
adc
add
mov
push
outsb
xor
pop
push
push
xor
inc
rcrb
out
or
lock
add
dec
andl
addl
nop
jnp
test
sub
lock
mov
or
mov
mov
mov
jge
dec
adc
loopne
bound
add
orb
test
add
xorb
mov
lret
inc
xor
cmp
xor
inc
out
or
test
fcmovne
xchg
inc
add
lods
adc
push
or
pop
or
loop
cld
mov
jb
jge
inc
xor
mull
in
es
add
cmp
outsl
movsb
cs
cmpsb
sbb
mov
sahf
subl
mov
js
inc
add
pushf
scas
add
push
mov
jo
add
aas
iret
pop
inc
dec
je
add
xchg
imul
inc
add
adc
xchg
sahf
bound
outsb
and
repz
jmp
mov
cwtl
inc
mov
xchg
add
shrb
out
push
arpl
dec
ss
sbb
dec
les
testb
mov
outsb
cmp
mov
pop
jnp
xchg
add
rolb
shrl
sub
insb
cltd
call
popa
add
std
popf
cmp
and
dec
add
out
cmp
mov
test
push
fbstp
fnstsw
movsb
xchg
add
add
jo
data16
add
jmp
and
hlt
jno
dec
cmpl
add
pop
outsb
das
loope
mov
mov
jl
fwait
push
and
rolb
lret
int3
mov
aaa
add
stos
xchg
test
imul
mov
add
xor
cmp
lock
pop
jecxz
xchg
inc
inc
push
loopne
imul
mov
mov
xor
imul
test
jns
fldcw
dec
test
sub
add
in
and
rol
add
into
mov
incb
rcrb
add
push
inc
dec
loopne
jl
cmpsl
lret
out
dec
xlat
inc
jmp
aas
popf
lds
pusha
cmp
scas
shlb
pushf
and
out
push
fsubl
inc
shll
pop
sub
dec
loopne
adc
mov
addb
bnd
ret
mov
stos
dec
rorl
stos
cltd
mov
add
in
mov
and
leave
ret
aas
addr16
push
add
adc
inc
cmpsb
ja
add
and
inc
mov
sbb
aad
add
cmc
pop
fistps
cmp
adc
cmp
mov
jp
inc
ljmp
enter
and
jne
push
lret
cli
pusha
pop
pop
in
add
outsb
fcomp
pop
lock
loopne
bound
es
lods
add
mov
inc
add
push
sahf
pushf
fldenv
add
fadd
mov
mov
out
pop
std
lods
dec
push
sbbl
ret
cmpsl
sar
or
cli
andb
push
ret
orb
shll
mov
xor
push
in
pushf
insl
sahf
ret
std
shrb
paddusw
mov
adc
test
ror
sbbl
fcomps
add
xor
ljmp
arpl
jge
cmp
orl
inc
inc
cmp
popa
aas
add
loope
out
jl
add
loop
push
cwtl
imul
out
ss
jno
andb
sbb
inc
jle
lahf
add
xchg
add
icebp
leave
inc
je
arpl
loopne
cli
pop
add
mov
in
add
pop
inc
add
add
and
imul
mov
add
fs
add
pop
insb
mov
mov
jo
nop
jmp
inc
orb
pusha
sti
ret
dec
add
xor
inc
xchg
and
fadds
scas
orb
out
add
xchg
dec
sub
jge
add
inc
loopne
lret
addb
lret
mov
cli
nop
jecxz
mov
xchg
add
inc
loopne
leave
pop
add
push
out
jle
jae
flds
cmpsl
sbb
cli
sar
add
mov
fisttps
movsl
adcb
pop
add
or
and
sarb
or
ds
add
clc
rcrl
add
jbe
imul
iret
lods
daa
sbb
or
and
rcrb
arpl
dec
inc
and
adc
shlb
push
fnsave
test
lret
or
ret
lret
in
add
mov
fdivrp
sub
pop
add
call
popa
jbe
addr16
pop
enter
add
xchg
pusha
add
push
mov
jae
cwtl
add
jmp
lock
jge
scas
add
lcall
es
jne
rep
popf
cwtl
insl
add
pop
pop
pop
lret
mov
jg
scas
pop
hlt
jns
ret
push
inc
cmpsl
dec
das
clc
iret
mov
add
arpl
add
xor
pop
rolb
add
fiaddl
loope
test
mov
dec
add
cmp
push
sbb
mov
pop
push
out
push
repz
cmp
jge
dec
loopne
or
dec
mov
push
addl
push
movl
adc
cmp
add
mov
js,pt
add
ror
add
les
add
mov
stos
add
pushl
add
mov
roll
push
jle
add
adc
dec
mov
loope
loop
mov
cmp
inc
xor
add
jecxz
les
adc
jp
inc
lret
add
jl
loopne
sarl
push
ret
das
xchg
and
sahf
mov
sbb
xchg
pusha
sub
imul
push
push
sbb
add
mov
cld
add
cmpsl
les
sarb
sub
add
or
push
addr16
add
lret
fs
lcall
leave
dec
pusha
arpl
fstpl
shll
outsl
dec
imul
cmpsl
repnz
enter
inc
add
push
aam
push
sub
add
les
pop
leave
repnz
test
in
adc
jne
lret
es
xchg
adc
add
jb
outsl
insb
in
es
mov
dec
inc
lahf
xchg
jns
or
xor
fcmovb
push
add
jecxz
adc
addr16
push
lret
sar
scas
cmp
rolb
fstpl
sarl
stos
jge
or
mov
or
sti
xor
adc
dec
mov
cltd
sbb
dec
in
add
add
lods
add
jns
sub
xor
push
push
loope
dec
dec
lock
inc
add
in
add
pop
enter
pop
inc
shlb
mov
jne
dec
lea
inc
jg
add
iret
mov
jge
loopne
movsl
hlt
repz
pop
mov
cmp
pop
aad
mov
mov
push
add
xor
arpl
popf
mov
pop
dec
fisttpll
mov
xor
add
fs
rclb
fdivl
fbstp
add
clc
arpl
adc
add
mov
aam
add
loop
cmp
cmp
push
ss
mov
aam
or
xor
scas
or
sub
popa
push
add
fistpl
jle
add
out
add
insb
testl
add
mov
ljmp
push
xor
add
into
incl
push
mov
rolb
lods
es
add
add
fnstsw
or
subb
push
in
add
pop
push
iret
out
add
flds
add
dec
fiadds
sbb
shll
mov
sahf
add
jge
mov
lds
adc
sub
cmp
jl
loopne
inc
addl
cmp
push
in
inc
cmp
sub
push
sbb
sti
add
fstpl
out
sbb
add
jg
lahf
inc
cs
jnp
add
pop
mov
add
mov
js
je
pushw
shrb
std
mov
iret
scas
sti
push
aas
add
fiaddl
out
test
insl
add
dec
mov
outsl
test
js
xor
add
mov
arpl
push
stos
sub
jge
push
nop
push
add
sub
mov
add
jecxz
shrb
rcr
add
std
movsw
inc
in
mov
inc
jns
in
leave
jo
add
sbb
rolb
jecxz
mov
jne
add
enter
or
sti
in
cmpsl
push
repnz
jecxz
shrd
ror
pop
adc
xor
add
xabort
in
lock
pop
or
scas
fucom
add
xor
adc
insb
add
push
xchg
sbb
add
sti
add
popf
pop
in
adc
cmpsl
push
rorl
shl
mov
fstpt
push
sahf
pushf
mov
jno
jo
add
ret
cmp
aaa
mov
xor
js
and
add
pop
pop
fnstsw
pop
mov
mov
sarl
xchg
popa
mov
lret
sbb
add
cwtl
mov
pop
inc
fcmovnbe
jmp
push
inc
rorb
pop
dec
pop
or
cmpsl
mov
addl
lret
cld
in
addr16
adc
add
cmp
inc
xchg
xor
add
jo
add
les
inc
and
rcll
int
lcall
insl
enter
pop
out
mov
mov
ret
stos
sti
dec
sbb
std
rolb
mov
cmp
dec
call
pop
push
sbb
sbbl
dec
incb
adc
dec
add
jne
cmp
rolb
stos
into
sti
dec
testb
inc
ss
xchg
test
and
lock
pushf
sbb
inc
andb
adc
xchg
inc
out
je
or
fs
push
jo
xchg
add
jo
inc
mov
add
pushf
inc
sub
mov
add
add
dec
aas
jno
test
cmp
pop
addl
jo
mov
rcrb
cmp
mov
int
fbstp
pop
sbb
sahf
js
or
pop
addl
mov
ds
shr
pop
xchg
fucomi
cmpsl
xor
cwtl
jg
data16
jns
aaa
pop
lods
mov
sbbl
add
inc
jbe
fwait
scas
sbb
mov
pop
mov
rol
jg
adc
or
icebp
xor
add
repnz
movsb
jecxz
inc
jg
add
std
pop
out
xor
dec
or
repz
pop
lret
nop
cli
in
daa
jo
add
and
add
xchg
or
mov
mov
jne
mull
popa
inc
std
imul
mov
stos
out
pusha
sarb
dec
stos
adc
cli
lret
stos
jmp
sub
xor
lcall
aam
loope
push
jmp
int3
adc
cmp
push
popa
dec
mov
add
inc
adc
push
mov
push
es
stc
add
dec
xchg
test
dec
add
mov
inc
loope
pop
pop
in
pop
add
std
mov
ds
cwtl
mov
and
ja
ret
cmp
outsb
add
mov
mov
xchg
in
mov
int
lods
lea
aam
es
xchg
loop
push
push
add
sub
xlat
fdivrs
rcrb
cmp
or
pop
lock
inc
fxch
orl
ret
inc
push
xchg
jmp
add
int
jb
inc
inc
cld
inc
add
xchg
ja
mov
rcl
int3
xor
out
mov
fwait
ljmp
adc
std
dec
test
adc
aas
or
jb
aaa
cmp
aam
inc
test
test
mov
xor
sahf
inc
mov
cmp
fldl
addl
sbb
add
mov
repnz
adc
lock
mov
pop
loope
popf
or
in
sarb
dec
sbb
push
cltd
push
add
rorb
pop
rclb
mov
cmp
adc
pushf
js
imul
fcmovnu
xlat
es
or
and
lret
inc
jp
jmp
popl
fisubrs
ret
inc
mov
mov
inc
insl
add
xorl
and
and
cmp
lods
les
add
or
add
dec
cmp
mov
mov
inc
pop
push
push
dec
insl
js
mov
sbb
mov
sbb
arpl
add
adc
sub
mov
add
loopne
dec
sbb
mov
add
dec
xorl
jnp
inc
add
ret
jge
xchg
dec
aas
xchg
add
std
xchg
add
outsl
xor
or
out
mov
push
pop
or
pop
push
xchg
inc
mov
adc
mov
inc
lods
cmp
enter
and
xorl
rclb
sbb
pop
mov
in
xor
in
xchg
fisubs
dec
arpl
mov
or
cli
inc
jmp
cmp
shll
cmpsl
lahf
sbb
fistps
mov
icebp
call
data16
add
mov
sub
mov
and
mov
push
inc
sbb
addl
pop
stc
jmp
lea
lfs
je
mov
or
or
in
mov
cli
add
testl
add
scas
shlb
dec
arpl
ss
mov
pop
jne
jecxz
sbb
add
es
jmp
adcb
cld
cli
and
jle
add
decb
xchg
add
mov
jmp
jno
and
inc
in
add
ret
pop
sbb
add
es
add
test
or
mov
or
sub
cs
les
sbb
pusha
outsl
addr16
pop
mov
loop
jmp
or
or
ja
mov
adc
inc
movb
push
or
nop
push
cwtl
mov
pop
fdivrs
pop
cmp
sbb
pop
cmp
mov
insl
and
dec
les
ds
or
int3
add
mov
dec
mov
mov
mov
sbb
std
mov
es
sub
add
jne
ds
in
mov
cmpsl
pop
je
arpl
jl
mov
add
js
fs
and
add
push
ds
sub
cmp
arpl
loop
push
loop
fstps
add
xchg
jg
inc
push
cmp
fdiv
pop
nop
or
pushf
jmp
push
shlb
cmp
add
data16
arpl
mov
jmp
call
aad
add
sbb
add
clc
inc
sub
jmp
xchg
add
push
iret
nop
xor
shll
jno
das
test
rcll
and
xor
ds
lret
xchg
adcb
insb
adc
push
sub
sub
cs
mov
lahf
incl
jb
lea
xchg
popf
mov
inc
adc
fadd
xchg
addb
arpl
int3
dec
adc
push
pop
inc
mov
pushl
add
insl
roll
adc
inc
gs
xor
sbb
pop
push
insl
mov
loope
pop
sbb
int3
xorl
iret
out
dec
xor
and
or
add
loopne
in
jmp
inc
mov
sub
mov
lea
add
jge
inc
sahf
add
adc
push
sub
outsl
lods
sbb
arpl
sarb
in
lret
insl
or
add
arpl
loop,pt
add
cmpl
mov
inc
call
or
add
arpl
iret
loop
repz
out
add
pop
adc
bound
daa
add
push
push
mov
aaa
pop
add
rcrl
cld
jg
add
push
das
pushf
add
inc
nop
leave
loop
pop
rcrb
push
add
cmpsb
dec
inc
push
add
xor
push
lds
sub
outsb
pop
out
cwtl
dec
jl
pop
mov
popf
or
rol
mull
and
and
lea
adc
outsb
mov
nop
mov
sub
sbb
and
ljmp
add
shrb
inc
jo
iret
filds
inc
push
std
loopne
out
in
add
arpl
negl
mov
add
and
push
rcrl
fdivrl
inc
mov
shlb
fcmovne
sbb
inc
jle
sub
cmp
sbbb
and
mov
jge
imul
mov
jne
inc
aas
ljmp
sbbl
jle
add
fdivs
mov
in
testl
inc
decl
mov
push
add
pop
cmp
dec
rcr
in
mov
xor
cli
sbb
inc
data16
push
push
or
fldenv
pop
pop
call
test
lock
sbb
adc
and
mov
cmp
shlb
dec
aam
mov
push
xchg
cmp
popa
pop
jb
shlb
iret
add
outsl
jl
gs
mov
add
scas
pop
ret
fwait
cmp
dec
clc
push
pop
mov
add
das
movsb
add
xchg
and
out
sbb
mov
pop
popf
inc
nop
jp
nop
jmp
stc
jo
push
int
jge
adc
cmp
rcrb
stos
arpl
jle
add
ficompl
leave
pop
inc
xchg
pop
shr
pop
inc
int3
ja
add
rep
jb
loope
sbb
call
cmp
add
xor
fbstp
lock
imul
pop
data16
cmp
mov
sti
movsl
test
jle
add
in
mov
ret
lahf
lods
sahf
dec
push
nop
add
rcrb
iret
shlb
pop
cld
dec
push
lret
lods
and
add
push
sbb
loop
add
jbe
cmp
add
mov
leave
add
pop
add
filds
icebp
in
adc
shll
cmp
jp
out
addb
mov
scas
push
dec
mov
inc
pushf
mov
in
popl
incl
bswap
mov
cmp
mov
add
mov
inc
arpl
push
js
sbb
mov
jns
adc
testb
jle
arpl
out
enter
int
rcrl
push
sbb
dec
xorl
sub
and
mov
dec
pop
mov
arpl
jle
adc
mov
test
lds
cmp
das
jno
rclb
fcomp
inc
xor
add
mov
sub
lods
pop
adc
andl
shll
call
xor
pusha
mov
inc
add
xchg
imull
imul
test
add
pop
arpl
movsl
pop
icebp
inc
add
inc
insb
enter
add
mov
ljmp
and
sbb
shlb
xchg
pop
dec
mov
leave
pop
stc
jo
outsl
sbb
insb
out
out
inc
add
xchg
inc
sub
xor
add
jno
aam
addb
mov
fistpll
rcll
xchg
xor
insb
inc
push
movb
sti
into
cmp
add
mov
loope
mov
mov
push
rolb
testl
int3
pusha
push
pop
rolb
fucom
dec
sbb
add
aad
add
mov
stc
add
repnz
cmp
dec
and
enter
sub
pop
push
jnp
loopne
fadds
fnstsw
aad
add
ds
mov
xchg
push
out
xor
in
imulb
js
pop
andb
cmp
fildll
add
fdivrs
into
inc
or
add
call
fldcw
das
xor
add
iret
pop
or
xchg
and
addb
lret
add
pop
sbb
rorb
add
cmpb
sub
outsb
mov
and
add
cmp
lahf
or
shll
imul
dec
dec
int
nop
je
jbe
add
cltd
sbb
sbb
sbb
lods
test
cmp
push
cmpsb
mov
and
negl
xchg
adc
das
pop
xchg
nop
xchg
dec
faddl
adc
pop
add
in
inc
int3
or
sbb
pop
adc
movsl
mov
arpl
jbe
lock
shr
add
mov
jns
add
or
inc
add
andb
div
cmpsb
outsb
fidivrs
arpl
mov
add
hlt
leave
dec
adc
pop
add
and
mov
insl
or
lods
test
sahf
pop
inc
lcall
push
add
and
in
cmovne
ja,pt
mov
test
jo
fildl
add
clc
mov
lahf
xlat
icebp
andl
inc
call
iret
add
inc
or
mov
xlat
inc
testb
mov
inc
rorb
xchg
out
aas
add
inc
or
ljmp
fiadds
lcall
add
pop
ja
pushf
jp
xchg
add
xchg
xchg
stos
mov
adc
xor
fildl
sbb
pop
inc
dec
push
les
jecxz
add
test
cmovae
xchg
add
pop
jg
dec
xchg
sub
add
pop
and
mull
aaa
lods
ficoms
ljmp
in
inc
pop
or
ds
adcb
movsl
scas
mov
and
test
subps
pop
mov
mov
add
mov
inc
sbb
not
sbb
daa
and
add
pop
popf
addb
ficompl
mov
lret
add
push
add
adc
jno
sub
lret
and
addr16
out
xor
push
add
mov
add
mov
in
pop
inc
int
pop
cmp
mov
mov
arpl
sbb
adc
fsubs
lods
cmp
pushf
negb
adc
test
push
bound
and
cmp
inc
xchg
xor
sarb
imul
cmp
leave
roll
push
shl
inc
and
cmp
pushl
push
mov
inc
dec
add
cmp
mov
and
leave
das
pushf
pop
pop
packsswb
lret
jmp
shl
les
imul
test
cmp
mov
mov
mov
add
movsl
mov
movb
inc
sbb
add
popf
inc
arpl
outsl
das
aas
mov
shlb
insl
add
pop
fistl
cmp
add
or
cmp
sub
fnstcw
jbe
call
pop
shrl
dec
inc
add
cmp
dec
push
repnz
jecxz
das
fdivl
inc
out
push
jno
mov
aaa
test
sbbl
fstps
mov
iret
xchg
mov
mov
push
out
add
push
pop
and
shll
dec
ret
pop
movsb
mov
jmp
rcrl
enter
pop
jge
xchg
in
xchg
pop
shlb
push
and
insl
stos
into
lods
sbb
ret
add
or
in
pop
mov
leave
sbb
fsubs
test
add
inc
pushf
dec
pop
jl
stc
mov
or
or
andb
ret
in
jmp
xchg
pop
fwait
add
aam
push
sbb
add
in
inc
js
nop
mov
cmpsl
aaa
mov
cmp
inc
lret
xor
xor
add
daa
mov
outsb
sub
add
testb
add
xor
repz
in
mov
mov
and
jne
loopne
xlat
and
pop
pop
outsb
sahf
popa
pop
cmp
adc
or
incb
pop
movsb
mov
add
sbb
mov
insb
mov
and
and
inc
dec
fisubrs
push
fwait
in
mov
lock
mov
add
mov
jle
aas
sub
cmp
dec
add
bound
mov
pop
mov
sub
fsubs
in
add
aad
pop
js
sub
out
pushf
sub
ret
mov
rol
fscale
call
rolb
inc
add
sahf
inc
or
repnz
pop
xchg
mov
add
or
sub
fadds
dec
insb
jp
adc
push
inc
repz
xchg
push
xchg
pop
add
scas
jne
leave
loopne
dec
dec
pop
mov
cmpl
pop
add
js
mov
lcall
xchg
add
mov
jg
mov
inc
add
ret
jmp
test
adc
mov
subb
add
xor
dec
cmp
int
in
shlb
popfw
add
aad
scas
mov
or
add
adcb
lods
jo
sahf
push
and
in
inc
adc
int
das
movsl
add
shll
add
pop
xchg
add
call
sbb
jmp
mov
add
outsb
cli
mov
add
stos
lods
pop
adc
jns
xor
add
shl
stos
push
sbb
out
add
daa
negl
jecxz
mulb
pushf
xor
jle
sub
enter
rolb
xor
jae
and
jns
add
sbb
or
imul
jle
mov
shlb
xchg
pop
mov
xchg
push
inc
test
add
pop
pop
iret
pop
mov
loope
dec
sbb
mov
inc
adc
adc
jecxz
xor
std
or
loop
add
xchg
inc
add
sahf
mov
out
bound
int3
pop
adc
or
dec
mov
mov
iret
loopne
add
ret
je
jmp
mulb
add
pop
add
jmp
cmp
scas
adc
fsubl
add
mov
mov
sahf
rcll
test
dec
add
iret
rcrb
test
dec
inc
rorb
push
stos
je
jb
lock
mov
test
xchg
pop
cmc
mov
cs
add
cmpsb
xchg
jno
adc
mov
daa
xor
add
fsubrp
jge
inc
dec
jo
add
inc
fists
push
cwtl
repz
inc
rclb
cli
add
cmpsl
cmp
sti
loopne
jbe
add
or
pop
ds
mov
add
lahf
roll
add
xchg
daa
shlb
cmc
xadd
loope
rolb
cmp
subl
incl
loopne
mov
pop
xchg
lds
inc
cwtl
sbb
mov
popf
outsl
rol
pop
add
lock
inc
mov
ret
nop
add
lahf
repz
outsl
push
mov
sub
lds
pop
in
loope
inc
movsl
xchg
adc
mov
add
icebp
loop
ss
adc
fdivrl
add
xchg
sub
rcl
pop
arpl
adcb
add
adc
rolb
sbb
push
sbb
outsl
sub
cld
imul
and
in
xor
add
clc
add
inc
shlb
call
iret
arpl
je
add
inc
fwait
jbe
dec
mov
or
and
and
lcall
in
mov
lds
cltd
lods
xlat
or
enter
adc
popa
in
mov
pop
xor
js
lods
rclb
add
std
mov
movsl
add
jg
les
cmp
adc
sbb
and
orb
inc
cld
popa
jns
sbb
rorb
add
push
inc
incl
inc
pop
pop
aam
jmp
rolb
pop
test
xchg
inc
test
or
in
mov
enter
loopne
inc
mulb
sbb
in
cli
jns
ret
out
data16
xor
xchg
int
push
pop
flds
outsl
add
inc
xchg
aas
mov
push
filds
in
arpl
pop
push
into
or
xchg
inc
loopne
sbb
add
clc
mov
pop
sbb
push
sub
sub
jae
add
cmp
pushf
jno
inc
add
pusha
pop
pop
jb
add
ja
in
add
and
lock
rol
add
push
lahf
loop
addb
add
add
in
jb
lcall
orb
add
pusha
dec
inc
daa
and
ljmp
mov
lret
add
test
mov
movsb
in
cs
and
add
add
and
mov
xorb
das
pop
inc
pop
push
jne
outsb
es
outsl
push
dec
and
sbbl
mov
sub
in
add
je
jle
mov
lahf
scas
dec
mov
sbb
add
int3
out
inc
movsl
outsb
add
test
sbb
lds
pop
push
push
inc
sbb
nop
lock
aaa
adc
mov
add
mov
dec
sbb
add
mov
sahf
mov
push
xor
mov
or
movsl
gs
or
jo
xor
or
call
jp
jne
test
mov
xchg
mov
js
add
mov
inc
cmp
push
mov
jo
loopne
stc
inc
jns
cmp
add
and
xor
add
cmp
in
add
pop
dec
mov
imul
fbld
inc
jecxz
repnz
lret
insb
or
dec
sbb
test
mov
push
popa
or
add
shll
cmp
lcall
ret
inc
insb
lds
mov
add
inc
dec
jle
test
sbb
inc
or
jmp
inc
or
push
pushf
incb
stos
and
xchg
dec
sbb
mov
imul
mov
pop
xchg
test
shlb
hlt
jecxz
mov
dec
mov
sub
and
xor
in
fsubr
shlb
add
inc
mov
sbb
std
scas
sarb
ret
add
jge
jae
mov
int
fdivs
mov
sub
mov
pop
cmp
xchg
cmp
mov
lret
mov
popa
shrb
inc
add
sti
popf
inc
dec
xor
or
movsl
jmp
inc
pop
sub
cmpb
insb
aas
call
aaa
dec
jno
jnp
and
adc
daa
mov
fldl
mov
mov
sub
add
loop
cmp
sti
push
sub
pusha
xor
add
dec
mov
xor
aad
lock
jmp
sbb
aas
or
mov
insl
daa
lock
add
add
pushf
ret
or
arpl
fistpll
inc
cmp
add
inc
test
add
inc
or
outsl
pop
sbb
push
fistpll
add
jbe
adc
jo
add
mov
leave
mov
sahf
sbb
inc
push
inc
fistpll
add
cmp
push
pop
aam
xlat
icebp
sbb
mov
inc
lds
stc
mov
ret
mov
sub
add
pop
cmovae
inc
push
or
pop
aaa
adcb
fdivs
inc
int3
dec
add
sarl
into
add
add
cmp
test
add
or
cmp
ds
add
cmp
fisubrs
addb
in
mov
cld
dec
add
sbb
and
push
pop
ret
jecxz
lcall
mov
iret
add
sbb
loope
or
jecxz
mov
adc
inc
js
jge
add
mov
shl
sub
out
sbb
mov
add
mov
std
ret
repnz
and
add
lea
stos
cli
adc
jo
js
xchg
push
movsb
fimull
incl
mov
adc
pushf
les
scas
shl
into
add
add
loope
adc
mov
nop
shll
push
pop
add
into
mov
dec
add
stc
mov
push
add
aas
in
fcmovnb
nop
mov
add
inc
adc
lahf
stos
add
sbb
gs
jl
test
inc
in
pop
leave
add
xchg
pop
dec
jns
cltd
imul
nop
fiaddl
andl
test
cmp
inc
pop
repz
into
mov
cmp
jne
push
imul
cs
outsb
pop
xchg
inc
mov
add
fcmovb
sub
add
fwait
add
mov
mov
lcall
add
sti
in
rol
jb
inc
and
iret
out
lock
pop
dec
mov
push
xor
pop
mov
inc
jo
or
addr16
call
add
fiadds
sbb
pop
jns
add
aam
bound
add
push
mov
ffree
test
push
out
imul
and
inc
dec
jo
add
pop
arpl
add
inc
cwtl
dec
add
cs
aas
add
cmpsb
add
lock
jno
jp
mov
loop
shl
cmp
cwtl
fstl
add
sbb
add
lea
outsl
pop
shrb
sbb
scas
cmp
add
incl
loopne
lods
test
dec
in
pop
inc
pop
stc
ljmp
test
mov
movsl
jne
lds
flds
xchg
sti
insl
adc
out
add
js
clc
loope
js
push
aad
pop
pop
cwtl
fsts
out
inc
cmp
mov
pusha
rorb
leave
daa
icebp
iret
jo
push
xchg
and
jg
ret
gs
or
clc
mov
sbb
mov
cmp
sbb
out
add
cmp
pop
lock
fistps
jnp
mov
add
ret
and
add
inc
add
jge
mov
cwtl
stos
push
add
lods
flds
das
dec
in
sub
fcmovu
daa
sbb
add
mov
add
cmpsl
jne
mov
incb
incl
into
mov
pop
fidivs
add
xchg
push
sbb
shlb
add
jae
add
xor
scas
add
das
mov
icebp
jb
push
out
test
add
inc
data16
ja
iret
mov
and
inc
jno
add
jl
mov
inc
xlat
mov
lret
push
sbb
push
cmp
jge
push
shlb
sub
cs
cmp
in
repnz
add
lret
sbb
or
add
enter
daa
repnz
sub
sub
sbb
jle
es
adc
mov
jg
iret
inc
add
dec
shr
lret
mov
sub
mov
js
ret
push
xor
lret
je
mov
fldz
popf
ds
test
inc
xchg
iret
push
aad
dec
cmpsb
arpl
add
sahf
inc
js
cs
xor
loopne
push
lods
pop
adc
push
iret
or
in
lock
shr
cmp
fadds
sbb
add
sbb
inc
pop
sti
or
push
clc
xor
enter
cmp
lods
rolb
pop
jno
popf
test
xchg
push
pusha
decb
inc
pop
or
mov
sbbb
stos
inc
sbb
sbb
scas
lret
inc
push
ret
mov
ss
jmp
add
fs
sahf
jg
cmp
sub
xchg
vpmaddwd
xchg
lock
cmp
push
dec
add
inc
enter
add
shr
add
inc
and
aam
jle
iret
outsl
loope
in
add
cld
pop
inc
nop
outsb
add
xchg
mov
sbb
fidivl
pop
adc
sub
les
nop
lret
movzbl
xchg
add
push
mov
rcr
inc
cli
ja
add
inc
push
mov
test
out
mov
add
test
or
int3
push
mov
and
pop
jg
mov
xchg
inc
dec
cmp
hlt
out
loop
loope
jne
addl
lahf
aaa
out
pop
pushf
movsb
sbb
pop
adc
imul
add
push
jbe
or
jo
jno
cld
mov
in
sbb
cmp
mov
repz
push
xchg
add
push
adc
test
mov
mov
fs
into
push
lds
inc
add
mov
mov
sarl
rolb
hlt
shlb
les
push
mov
xor
mov
pop
pop
insb
ss
and
insl
xor
inc
add
test
push
or
add
jp
sbb
das
jecxz
sbb
or
push
cmpb
fwait
dec
mov
and
ret
cmc
orb
adc
mov
rolb
xor
pushf
jp
pusha
in
and
sbb
mov
cmp
add
fs
rorb
mov
rolb
mov
pop
xor
dec
rorb
cmp
dec
dec
adc
arpl
add
sbb
and
or
inc
jg
aad
and
adc
xchg
mov
nop
push
add
jno
cmp
out
dec
les
fwait
pop
xor
repz
rcl
mov
xchg
add
lea
xchg
outsl
clc
add
ljmp
push
add
rolb
xchg
leave
bound
jb
fildl
or
add
lahf
pop
pop
inc
jl
add
inc
mov
add
cmp
repz
add
and
mov
fnstsw
mov
adc
ret
imul
pop
xor
sbb
pusha
pop
dec
pop
movsl
add
test
iret
jo
jle
mov
arpl
movsl
dec
gs
shlb
inc
inc
aaa
nop
dec
rol
add
and
les
xor
in
add
out
jae
shl
arpl
outsl
add
adc
add
pop
outsb
dec
jp
enter
pop
add
fldl
sbb
cmp
and
testb
mov
rolb
add
arpl
adc
subl
insb
add
cmpsb
mov
aas
ret
lods
or
aam
sbbl
cs
lcall
mov
popf
add
scas
sbb
add
sarb
lret
rcrl
and
inc
or
mov
arpl
mov
inc
rorb
lea
push
aas
mov
mov
push
sarl
xchg
adc
ret
add
and
xchg
loope
adc
and
and
inc
add
xor
xchg
subl
les
add
cld
sbb
pop
fwait
inc
mov
cmp
subl
dec
inc
push
sbb
xor
mov
adc
add
jne
dec
lret
in
add
stos
dec
js
push
inc
add
mov
and
fs
and
dec
sahf
inc
mov
stc
dec
inc
shr
arpl
cmp
and
rcrl
add
pop
movsb
ss
sti
sub
faddl
push
aad
pop
jmp
in
verw
xchg
push
cmp
test
ret
jle
lret
outsb
mov
add
dec
fmuls
mov
jge
jns
iret
jae
add
call
jo
add
mov
sub
mov
and
orl
mov
pop
add
push
xchg
xor
loope
cli
jno
out
sbb
out
xor
arpl
mov
add
test
pop
inc
adc
cltd
pop
add
or
mov
mov
mov
clc
dec
pusha
pop
ljmp
js
mov
add
jp
cmp
stos
mov
mov
mov
push
push
dec
push
mov
push
andb
cld
inc
mov
incb
mov
mov
repnz
or
pop
adc
stc
dec
add
mov
jle
mov
jl
add
ja
fisttpl
pusha
add
add
sub
in
xor
lock
out
add
mov
jmp
add
ja
or
cmp
pop
dec
pop
jns
jns
mov
mov
in
add
incl
scas
jae
icebp
in
sub
mov
push
flds
xor
push
add
inc
add
inc
sti
arpl
and
adc
int
push
cmp
jp
mov
test
outsb
add
cmpsb
repnz
fstl
and
jg
add
aam
cs
add
js
add
add
lods
jns
shlb
add
std
mov
add
out
jecxz
add
xor
add
in
mov
inc
add
pop
push
dec
mov
jbe
adc
ss
int3
test
sbbl
aam
hlt
and
inc
xor
dec
jp
lret
cmp
inc
inc
sub
add
sahf
pushf
into
add
clc
inc
jns
scas
add
sub
pop
hlt
fadds
repz
std
aam
and
pop
push
mov
dec
leave
add
inc
pop
mov
cmc
add
mov
add
lods
cmpsl
ja
iret
jb
add
repz
nop
les
lcall
jo
push
aam
scas
subl
pusha
inc
aaa
inc
out
jl
xor
lcall
rolb
push
push
sbb
sub
jp
add
mov
fwait
lds
jmp
inc
enter
repz
inc
add
mov
mov
dec
pop
pop
sbb
inc
sbb
add
jmp
or
add
mov
das
stos
fwait
sbb
push
sbb
pop
dec
mov
out
sbbl
inc
leave
cmp
dec
sub
inc
iret
subb
bound
push
mov
ucomiss
rolb
add
mov
add
push
mov
cs
lods
arpl
add
int3
shlb
add
outsl
in
cmpsb
push
pop
dec
addl
xor
xlat
jecxz
jb
push
out
pop
add
mov
inc
add
xchg
inc
cli
es
ds
sbb
ret
dec
add
test
mov
add
xor
jl
aam
mov
add
sahf
loop
add
out
lahf
and
xor
cwtl
ljmp
add
push
enter
add
inc
aaa
clc
push
adc
pusha
es
sbb
orl
aad
loope
and
stos
lret
sbb
rcl
sti
shlb
sub
rorl
lock
aaa
add
fldl
fbld
pop
xchg
pop
test
jg
inc
rcll
add
mov
test
fistps
clc
add
pop
popa
sub
loopne
pop
xchg
stos
jg
inc
sbb
inc
adc
test
add
gs
pop
jle
lods
add
adc
xor
adcl
jge
scas
push
add
pop
xor
and
inc
addr16
and
pop
test
cs
leave
mov
les
add
arpl
dec
insb
mov
mov
dec
clc
pop
jns
ret
mov
add
mov
adc
cmp
mov
in
inc
pop
sbb
lret
add
pop
jnp
add
aad
repz
ficoml
add
push
in
insb
mov
add
cmp
sbb
lcall
xchg
ljmp
push
push
rclb
pop
movsl
cmpsl
add
cmp
add
pushf
or
and
push
add
test
movsl
bound
and
or
je
mov
test
dec
add
add
ds
shufps
jae
hlt
andl
pop
outsb
ficomps
add
pop
shl
iret
adc
sahf
and
notb
jecxz
xorl
or
pushf
push
shlb
outsl
in
psubd
inc
ret
jle
stos
aaa
add
das
adc
mov
pop
jno
mov
add
arpl
add
and
add
arpl
jle,pt
rcrl
popl
fsubs
insb
loopne
ja
lret
nop
cmp
push
inc
orl
add
fcomps
sti
je
in
lods
sbb
add
mov
test
inc
icebp
dec
stc
mov
jge
cld
ja
add
push
lret
mov
add
cmp
jne
dec
dec
add
inc
pop
add
lcall
add
and
mov
add
mov
in
test
inc
int
add
inc
push
push
mov
out
and
stc
int
fwait
dec
or
mov
arpl
lea
and
pusha
xor
inc
lds
dec
pop
enter
loope
xor
xlat
inc
jmp
mull
test
rolb
es
add
inc
sbb
int3
loop
out
js
add
push
repz
cltd
push
cmp
add
addl
cmp
push
pusha
jl
add
inc
fsubl
add
push
in
es
pop
xlat
jp
lods
cmp
push
add
inc
adcl
shll
bound
add
lret
std
add
into
cmpb
xchg
pop
outsl
jno
or
push
dec
outsb
inc
mov
shl
imul
arpl
and
cwtl
ja
dec
int3
nop
xor
sub
je
sahf
repnz
push
scas
or
addr16
ss
hlt
dec
inc
daa
dec
mov
loopne
dec
mov
aam
or
inc
add
cmp
sahf
add
iret
testl
mov
ret
mov
push
and
or
insl
fwait
jmp
iret
and
flds
pop
sub
sbb
mov
sub
loopne
dec
mov
mov
lahf
or
sbb
scas
mov
add
fcomps
pop
test
mov
ret
shlb
loop
add
rcl
jb
dec
xor
enter
add
outsl
or
aas
inc
fmull
iret
in
nop
bound
arpl
sub
sub
jnp
out
lods
or
xchg
add
mov
or
stos
adc
add
sbb
pop
push
pop
movsl
pop
sbb
pusha
movsb
push
test
and
sti
adc
add
push
add
in
cs
insb
sub
stos
or
jp
cmp
inc
clc
xchg
push
xorb
sub
sahf
dec
adcl
or
inc
pop
hlt
ffree
add
mov
inc
rclb
add
jne
mov
mov
or
cmpl
mov
mov
push
shlb
mov
mov
add
jmp
xor
repnz
ret
shll
sbb
add
jl
idivl
in
sub
push
stos
js
add
daa
ljmp
add
stc
ficompl
sarl
mov
add
cmp
out
jnp
adc
pop
leave
pop
mov
cmpsl
ret
mov
add
int3
mov
inc
pop
stos
sbb
repz
ja
sub
lea
cmp
pop
cmc
arpl
add
jno
jmp
adc
xor
add
add
add
add
add
sahf
pop
mov
or
arpl
add
pop
shlb
daa
push
roll
out
add
fnstcw
push
hlt
xor
outsb
aam
sbb
cmpsw
fnstsw
aas
inc
or
aad
rcll
sbb
jecxz
mov
dec
into
pop
mov
jo
push
adc
and
push
inc
xchg
jbe
add
push
adc
xchg
add
pop
adc
dec
movsb
fstps
rorl
mov
pop
xchg
push
mov
fidivs
adc
enter
into
cli
pop
pop
int
dec
pop
and
jo
xor
sbb
loop
mov
fbld
pop
add
sub
arpl
scas
test
cli
xchg
bound
mov
add
dec
andb
add
sar
sti
nop
lock
outsl
and
sub
outsb
pop
test
les
mov
mov
dec
shl
mov
pop
add
jae
je
mov
arpl
add
test
and
sbb
fsubrl
inc
pop
inc
das
dec
adc
imul
minps
cmp
rcrl
mov
or
dec
call
mov
arpl
stos
lods
pop
sbbl
add
jb
push
movsl
xor
xchg
mov
add
jne
fcomi
push
add
xor
cwtl
inc
add
cmpsl
ret
cmp
pop
lods
pop
lret
fwait
in
jns
mov
xchg
add
push
or
dec
daa
sahf
fadds
jns
mov
add
inc
mov
add
lret
mov
push
lcall
mov
xchg
add
movb
std
mov
xchg
or
dec
loopne
fbld
add
mov
push
or
addr16
mov
add
push
idivb
mov
adc
pusha
aam
sub
pop
cmp
add
cld
push
rorl
and
rcll
stc
pushf
cmp
sub
sbb
cmpsl
mov
shl
lock
xor
add
cld
cmp
jns
add
sub
adcb
enter
cmp
mov
add
pop
xchg
jno
aad
xor
jp
lods
test
add
int
inc
ret
out
push
decl
in
fidivrl
or
in
mov
sub
adc
testl
sbb
add
out
bound
arpl
add
nop
dec
fildl
mov
mov
stos
xor
xor
je
mov
xchg
out
pusha
je
add
in
or
aas
mov
xor
jne
popf
cmp
xchg
mov
jp
jae
arpl
je
jmp
add
pusha
lods
lock
fidivrs
in
out
pop
and
rcrl
add
hlt
mov
bound
inc
mov
cmpsl
lret
sbb
add
aam
ss
add
mov
inc
add
sub
xlat
xorl
subb
mov
shlb
loopne
es
xor
jb
mov
inc
ret
js
inc
fimuls
pop
push
mov
aad
or
push
insl
dec
sbb
xor
inc
add
in
xchg
jle
insl
cmp
jecxz
push
push
push
push
mov
xchg
movl
arpl
mov
or
ret
mov
add
arpl
nop
xchg
and
out
cld
loop
add
in
mov
add
cs
sbb
cmp
xor
add
je
sahf
inc
cs
notb
push
roll
stos
or
inc
mov
imul
in
int3
xchg
dec
jo
add
ret
push
add
jmp
inc
icebp
add
mov
aas
paddsw
mov
add
into
and
fidivl
add
mov
pop
xor
rcl
mov
das
xchg
add
arpl
cld
pop
jno
insb
cmp
jne
xor
popa
pop
sarb
add
mov
inc
adc
aad
cmp
inc
movb
pop
mov
jg
mov
add
pop
outsb
popl
mov
jo
loop
fidivrs
jo
outsl
cmp
mov
je
jl
incb
and
pop
pop
add
push
jns
push
call
cs
gs
loope
push
js
arpl
mov
push
pop
or
popf
loopne
insl
mov
push
inc
int3
leave
add
jp
jo
add
aaa
jo
je
add
xlat
bound
pop
cmpsl
test
add
xor
movsl
pop
sbb
insl
dec
add
cwtl
testb
pop
mov
lods
xchg
sbb
mov
xchg
inc
mov
orl
jno
leave
ret
cmc
add
sbb
rolb
mov
fistl
es
into
xchg
jl
movsl
arpl
jp
ds
stc
nop
inc
add
lods
cwtl
loopne
push
add
inc
in
andl
add
jne
std
cld
dec
and
shll
aam
iret
inc
into
mov
inc
mov
in
in
test
mov
dec
push
inc
jb
dec
shll
rorb
shlb
cmp
icebp
into
repz
sub
arpl
mov
push
push
lahf
add
lret
push
add
jo
iret
cmp
stos
cwtl
pop
sarl
jbe
cmp
push
xorb
aaa
lahf
dec
mov
lock
cli
les
sbb
fildll
mov
loop
rsm
popf
addr16
and
jmp
fcomps
cmp
into
mov
loopne
jno
and
mov
add
dec
sbb
pop
cmp
in
and
pop
cmp
pop
pop
cmp
push
sub
pop
inc
aam
xor
ret
cmp
pushf
lret
or
add
test
push
add
or
mov
js
add
inc
xor
mov
popf
cmp
mov
shll
stos
sbb
xor
jge
cli
rcrb
pop
pop
add
loop
addb
lcall
rorl
mov
lods
add
leave
push
inc
mov
std
movsb
cmp
add
ror
call
cmp
fs
imul
push
mov
add
aaa
into
sub
shl
cmp
add
out
pop
pop
sub
lock
xchg
push
pop
jns
arpl
jge
incl
inc
sbb
cmp
pop
test
pop
aas
jno
inc
cmpsb
add
jmp
pop
add
sbb
incb
inc
rcr
and
pop
xlat
pusha
pop
in
sub
addr16
add
jnp
fildl
out
mov
pop
xchg
add
daa
mov
inc
add
orl
push
and
mov
in
popa
or
out
and
into
mov
arpl
jb
or
stos
stc
stos
cs
rcrb
mov
sbb
mov
add
or
aad
loope
and
mov
sbb
aam
loopne
rcrb
and
loop
aaa
inc
add
add
arpl
add
mov
mov
pop
sti
les
loope
add
movzwl
mov
loopne
ficoms
add
jbe,pt
add
or
add
fwait
sbb
or
dec
mov
push
lods
xchg
add
insl
sbb
and
rclb
hlt
insb
jnp
add
push
rclb
adc
loop
and
adcl
xor
and
or
cmp
dec
fs
mov
movsb
fwait
in
pop
or
jnp
andb
or
push
or
pop
cltd
dec
push
sub
lock
fwait
dec
insl
sbb
adc
sub
mov
jae
lods
and
ljmp
insl
add
mov
dec
icebp
add
js
loop
mov
add
inc
rolb
jecxz
clc
add
ljmp
mov
push
loop
std
add
aaa
call
add
cmc
test
add
push
push
movl
in
sub
mov
lods
push
lods
xlat
gs
or
pushl
and
jge
clc
stc
or
scas
add
pop
add
pop
je
mov
outsl
in
pop
and
xor
inc
sub
pop
cmpl
adc
repnz
jo
lods
push
add
and
xlat
int
fadds
adc
in
repnz
add
loope
cmp
aad
in
pop
or
subb
fistl
add
stos
sub
cmp
std
cmpb
addb
notb
hlt
jb
add
movsb
add
xor
mov
push
xor
js
mov
lret
add
lahf
cltd
stos
daa
ss
sbb
cli
add
jnp
loope
xlat
ja
shrb
jbe
jle
pusha
test
jge
add
imul
mov
and
add
in
into
repnz
xchg
push
sbb
mov
or
or
mov
xor
ret
push
int
addr16
sar
cmpsl
mov
cmp
inc
mov
mov
sbb
add
add
mull
insb
out
data16
push
incl
aam
adc
sarl
add
int3
mov
mov
pop
sbb
rcrb
cmp
outsl
xor
mov
aaa
or
jecxz
add
xor
mov
lods
add
pop
pop
jb
jns
mov
dec
cmp
or
xor
in
lock
inc
cs
add
xor
fs
xor
ficoms
popa
add
arpl
in
mov
or
inc
add
sub
loope
pusha
mov
mov
inc
scas
hlt
or
sbb
add
and
jge
fadds
add
push
or
add
scas
and
rorl
mov
mov
cwtl
add
or
fidivrs
cmpxchg
popa
and
inc
popa
das
aam
inc
add
clc
shlb
je
add
sub
pop
add
add
or
and
add
push
addr16
cmp
rorl
mov
push
add
inc
in
movsb
cmp
mov
sub
sub
cmpsb
addr16
xchg
sub
dec
xchg
popf
cmc
xor
add
jns
jmp
orl
aad
sbb
arpl
enter
inc
js
adc
jp
pop
pop
loopne
inc
lret
jge
xlat
mov
sahf
pusha
fidivs
loopne
jge
mov
call
repnz
dec
adc
or
push
ret
xchg
out
orb
mov
lahf
icebp
jns
push
cmp
sbb
rcl
xchg
add
iret
scas
push
cmp
lods
mov
shl
out
and
push
add
or
cmp
push
and
push
mov
mov
hlt
mov
add
push
jecxz
iret
int3
cmp
add
and
rcrb
loopne
sahf
mov
cltd
pop
adc
test
add
mov
and
inc
add
arpl
rolb
jp
xchg
out
clc
and
jge
add
enter
inc
notb
rclb
xor
lea
dec
outsl
sbb
roll
push
popf
imul
hlt
test
fldl
mov
fwait
pop
xchg
mov
and
pop
inc
mov
sub
flds
mov
jle
adc
nop
add
movsb
pop
lcall
jns
jge
xchg
add
xchg
movsl
pop
insb
movl
inc
jmp
shl
cmp
pop
xor
push
orb
inc
call
subb
fidivrs
sbb
inc
adc
sahf
xor
addb
add
push
inc
cmpsl
xor
and
inc
jno
push
es
out
jp
pop
int3
push
pusha
mov
sarb
jns
add
mov
cld
pusha
jb
mov
push
ret
repnz
outsb
inc
inc
add
cmp
bound
in
sbb
inc
insl
gs
add
frstor
movsb
out
xor
inc
mov
repz
sbb
mov
add
test
repz
rol
int3
testb
xchg
sbb
pushf
in
ds
cmp
xchg
ror
and
lods
dec
iret
add
push
pop
add
jno
mov
data16
imul
add
and
xchg
lock
add
lahf
test
jl
mov
cmp
jne
inc
add
mov
les
test
or
cmp
aas
jo
xchg
mov
mov
cmc
add
mov
inc
add
jmp
sbbl
dec
cmp
mov
shrd
addl
adc
inc
scas
into
mov
outsb
jo
jbe
inc
or
add
jp
cmp
insb
lahf
xor
and
mov
push
iret
cmp
mov
aas
loop
dec
fdivl
arpl
ret
add
mov
test
stc
push
pop
sarb
sub
pusha
xor
addb
inc
push
sarl
push
cmp
adc
cltd
test
push
int
add
inc
xchg
dec
mov
lods
test
add
xor
sbb
inc
sub
ret
cmp
adc
cwtl
add
andl
movsb
push
sub
stos
lock
cli
int
rcll
mov
jecxz
testl
jge
mov
in
push
fs
or
movsb
add
jb
jo
fstpt
cmpsl
out
arpl
lret
incb
sbb
inc
pop
movsl
dec
xor
stos
imul
jno
cs
push
stos
pop
sub
ljmp
xchg
and
sub
mov
add
mov
scas
add
jecxz
call
inc
sub
stos
iret
add
inc
pop
stos
fimull
add
mov
and
or
stc
mov
or
xchg
inc
inc
frstor
cs
cmpsl
iret
add
and
and
or
jge
pop
rcll
xlat
inc
pop
jmp
push
jl
lret
push
mov
sti
cmp
orl
sahf
in
and
inc
mov
jne
cmpsb
faddl
cmpl
pop
add
xchg
jg
mov
inc
dec
add
mov
jo
mov
out
les
adc
push
jnp
pop
loope
pop
leave
fsubr
cmp
mov
mov
movsl
or
cmp
adc
les
pusha
imul
ret
add
inc
add
int3
arpl
push
mov
int
add
in
or
inc
and
dec
clc
inc
ficomps
out
test
data16
sbb
repz
addb
xlat
nop
icebp
or
mov
imul
jle
sub
pop
add
aas
jg
or
pop
ljmp
ja
add
clc
push
lcall
scas
push
or
pop
sahf
jmp
pop
cli
mov
xchg
sti
inc
ja
push
ljmp
shll
add
push
and
movl
xchg
push
aas
adc
xor
pushf
add
pop
repz
movsl
ret
jno
test
push
mov
dec
fiaddl
and
dec
mov
add
adc
repnz
inc
mov
les
clc
je
pop
pop
rolb
add
add
mov
add
fsubrl
add
fldl
ret
pop
add
popa
mov
dec
mov
outsb
imul
ja
addr16
and
adc
inc
incb
pop
js
cmpsl
inc
xchg
dec
repnz
xor
add
add
mov
cmp
mov
jae
cmp
mov
ret
mov
jl
add
jmp
inc
shrb
imul
push
add
call
pop
addb
xor
repnz
notb
pop
cmp
add
andl
add
lods
mov
and
add
fldl
sub
cmp
cmpsl
add
mov
push
add
cmp
cmpsb
mov
mov
imul
pop
outsb
inc
add
test
xor
add
push
lods
jl
inc
and
jecxz
out
out
fsts
ds
repz
xor
aas
ret
adc
ljmp
push
fadds
inc
pop
in
pop
dec
jmp
arpl
cmp
and
lcall
add
xor
add
popa
aad
cmp
mov
shrl
cmc
mov
clc
andb
xchg
rolb
cltd
icebp
pop
rcl
clc
dec
mov
push
dec
jg
jge
push
jno
xchg
aas
lahf
arpl
add
sahf
loopne
ret
scas
repnz
movsl
icebp
xchg
jle
dec
mov
mov
test
push
adc
repz
fcomi
pop
lock
push
dec
and
add
mov
int3
inc
call
pop
out
in
jmp
mov
test
neg
add
and
icebp
leave
testb
inc
adc
add
loop
cmp
sub
mov
jae
out
xor
loopne
es
mov
mov
pop
add
leave
sbbb
push
in
xchg
sbb
lret
adc
push
cmp
pop
inc
fs
mov
fwait
inc
lahf
jl
mov
add
xchg
hlt
das
and
repz
and
ficomps
inc
cltd
add
lods
cmp
nop
sahf
mov
ret
out
pop
and
cltd
add
and
pop
mov
lahf
mov
pop
addl
jne
inc
rolb
pop
imul
pop
inc
push
add
mov
mov
incb
sub
sbb
pop
sbb
lods
stc
mov
es
incl
flds
inc
xor
decb
pusha
pop
sbb
loopne
sarl
push
cltd
inc
aas
add
pop
inc
ss
add
rorl
mov
arpl
std
ret
enter
add
mov
add
ss
popa
movb
pushw
inc
pop
push
add
dec
lahf
mov
xchg
cmp
and
add
add
push
adc
scas
dec
or
xorb
sub
add
sbb
dec
add
lock
adc
dec
add
das
mov
pop
fmul
sub
stc
push
paddq
loopne
xchg
dec
push
aad
scas
jge
add
adc
mov
roll
inc
sbb
cmc
push
rclb
add
xor
adc
je
ljmp
clc
xor
adc
call
incl
adc
cwtl
pop
gs
mov
pushf
or
loop
add
adc
push
sub
aas
out
add
push
dec
ja
rcrb
pop
push
scas
add
inc
loopne
sub
inc
add
jl
orb
xchg
mov
int
clc
ffree
push
add
movsb
in
adc
sbb
addb
add
pop
mov
lods
rolb
ret
mov
shl
push
dec
inc
add
inc
insl
addr16
pop
fs
sti
add
inc
xor
lods
mov
sub
shlb
adc
jmp
mov
mov
aaa
inc
fadds
aam
mov
and
dec
add
repz
pop
and
inc
sbb
pop
out
push
adc
aas
pop
mov
out
idivl
cmp
insl
sbb
ja
pop
sbb
aad
lahf
pop
jl
gs
arpl
add
dec
lock
test
iret
pop
mov
cmp
add
inc
cltd
das
jl
testb
aas
mov
fildl
test
das
jb,pn
mov
xchg
iret
lcall
leave
popa
lret
mov
in
fsubr
stc
jo
rcl
inc
sub
inc
cmp
pushf
add
pop
aas
movsl
adc
lea
inc
adc
sub
or
add
mov
das
imul
pop
add
shrb
ja
cmp
jns
jno
dec
push
orb
xchg
dec
adcb
jmp
pop
aaa
daa
int3
sarb
add
dec
jae
incb
add
or
and
push
ffreep
mov
add
push
push
pop
jmp
repz
mov
mov
mov
es
inc
test
push
xor
enter
adc
xor
and
push
add
fiadds
js
xor
add
pop
rcrb
jl
sbb
les
mov
aas
adc
subb
pop
ret
sbb
mov
adc
in
push
pop
insb
mov
dec
fisttpll
adc
enter
mulb
rclb
pop
cmp
cmp
xlat
or
lods
jg
push
add
cmp
add
add
sbb
out
dec
mov
pusha
dec
mov
loopne
movsl
mov
movsb
dec
pop
mov
hlt
or
rolb
mov
add
adc
ljmp
lods
inc
in
add
cmp
shrl
xchg
mov
mov
sbb
shrl
iret
rcrb
fadd
rolb
test
jmp
add
sub
inc
sarl
shlb
jbe
xchg
pop
arpl
or
and
xchg
aas
sub
add
repz
test
mov
cmp
jno
xorl
rol
add
dec
dec
jle
stos
pop
rolb
pop
andb
push
mov
and
les
int
jle
popa
pop
cld
addb
ja
in
mov
idivl
mov
sbb
insb
pop
inc
xchg
outsl
shl
cmpsl
add
inc
pop
mov
scas
mov
inc
pop
ljmp
push
cmpl
add
stc
xor
mov
bound
dec
xor
add
loope
and
push
nop
push
mov
adc
mov
mov
adc
or
dec
movsl
fldt
jb
sub
sbb
fnsave
pusha
push
dec
out
lods
cmp
add
sbbl
into
pushl
js
loope
das
lahf
sbb
add
pop
xor
xor
stc
push
inc
sub
cvttps2pi
jo
sti
add
inc
fdivrl
or
xor
add
cmpb
shrb
fwait
sub
int3
or
dec
sbbb
je
pop
repnz
into
pop
cmp
mov
sarb
str
imul
shlb
add
add
fcoms
and
add
enter
ds
add
movsb
fs
mov
shll
pop
incl
sbb
and
jg
push
pop
subl
jp
add
pop
out
fnstenv
or
xor
mov
add
add
repz
jecxz
push
dec
pop
push
add
push
mov
pushf
cli
mov
pop
cmpsb
sub
mov
mov
jge
jnp
pop
mov
rcr
loope
ret
xchg
inc
std
add
arpl
inc
insb
or
lea
out
loopne
pop
lods
cmpsb
mov
fcomps
add
arpl
and
sub
pushf
add
fistl
int
in
mov
add
jp
outsb
out
sub
js
enter
loop
add
inc
push
lds
shll
push
mov
scas
xorl
or
stos
mov
jne
out
add
add
push
loope
jle
xor
add
lcall
mov
push
add
inc
sbb
add
jecxz
pop
add
shlb
pop
ds
aam
jmp
xchg
xor
imul
in
fists
or
dec
scas
aaa
inc
cmc
mov
jae
xchg
test
inc
je
sub
mov
jno
pop
push
lahf
repnz
aaa
xchg
xchg
pop
push
or
in
add
or
add
pushl
mulb
imul
xlat
rolb
sbbb
ret
je
add
andl
hlt
out
or
adc
pop
call
inc
jnp
add
mov
add
xchg
add
aam
jecxz
push
lahf
aad
enter
dec
mov
roll
mov
cld
mov
enter
data16
add
adc
gs
inc
movb
xchg
inc
mov
pop
push
cmpsb
add
pop
insb
sahf
rorb
mov
or
inc
mov
int3
mov
flds
adc
cmp
add
lcall
in
inc
push
jb
dec
inc
stos
call
add
jo
sub
icebp
cli
fstl
mov
in
shll
dec
or
add
jle
xor
sti
add
adc
add
rcl
mov
ret
lds
stc
shrb
add
inc
jl
add
push
cltd
cwtl
lods
popa
mov
push
addl
pop
mov
mov
pusha
orps
cmp
and
call
mov
rcll
enter
iret
jge
cmpsb
inc
lahf
mov
dec
inc
xor
cmpsl
aas
add
mov
inc
mov
mov
aaa
xor
sbb
fdivrp
push
push
orl
int3
add
rorl
pop
popf
xorb
lds
add
leave
loopne
ret
add
mov
popf
sahf
add
lods
jecxz
inc
fadds
cs
roll
gs
cmpsl
xor
jmp
negl
add
cmp
inc
lock
ret
enter
inc
add
dec
pop
fists
jp
add
sub
fstps
pop
call
mov
dec
rorb
jns
add
add
sbb
adc
mov
add
sbb
aam
cwtl
mov
add
ret
push
add
jge
repz
sbb
orb
in
add
sub
xor
sbb
sti
shll
pop
and
and
lods
jb
mov
add
iret
pop
xchg
lret
test
jle
outsl
std
inc
mov
xchg
shrl
cld
nop
inc
aas
lods
or
in
lock
lahf
inc
xchg
add
ret
dec
stos
pop
push
insb
add
test
add
mov
add
pop
inc
popl
jge
ret
mov
stc
aad
mov
xor
and
cli
add
inc
mov
push
fstl
lock
pop
pop
fwait
aas
cli
adc
jl
xchg
ds
nop
mov
fucom
aam
and
pop
shlb
in
add
sbb
mov
dec
ljmp
add
pop
jno
dec
add
sbb
cmp
pushf
subb
pop
les
add
push
sbb
ret
icebp
add
xor
cmp
clc
shll
dec
jae
les
mov
test
faddl
and
push
fmuls
adc
cli
inc
mov
popf
iret
pop
int3
aas
fildl
lret
stc
pop
jg
lock
mov
push
sub
inc
add
into
push
inc
or
outsb
mov
sysret
outsl
imul
adc
shll
sbbb
sub
add
es
shrb
clc
pop
cltd
mov
cmp
cmp
push
add
push
dec
sbb
test
repnz
adcb
mov
rcr
or
int
test
cli
xor
mov
arpl
and
pop
mov
mov
add
fs
adc
inc
cmp
inc
dec
int3
mov
mov
and
test
and
jno
sbb
dec
sub
and
aam
and
pop
inc
shrb
bound
ljmp
fcomp
test
sub
xlat
inc
lds
pop
and
mov
rclb
inc
into
iret
mov
mov
push
stc
mov
cld
mov
dec
xlat
out
xlat
loopne
jecxz
add
inc
fldl
sbb
in
push
sub
subb
fnstsw
notb
sbb
inc
and
mov
xchg
pushf
mov
dec
inc
cmp
scas
mov
inc
inc
add
mov
aam
sarl
add
adc
in
bound
push
inc
jmp
jb
push
add
fidivrs
xchg
add
jns
neg
add
clc
push
pop
mov
mov
arpl
jecxz
out
xor
insl
inc
into
push
push
add
fnsave
pushf
loopne
cmp
mov
inc
cmp
addl
test
jmp
add
sub
pop
clc
rcrl
dec
xchg
cmp
jl
repnz
add
jp
and
add
out
cmp
rcr
push
add
sub
mov
sti
or
mov
push
in
out
insl
xchg
push
sbb
add
sarl
cmpsb
xor
mov
mov
loopne
test
int3
addb
sarb
jg
faddl
mov
mov
or
xchg
xor
andl
inc
adcb
lods
lcall
fwait
xor
cmc
fs
push
icebp
sbb
aaa
jl
add
stos
fcmovb
mul
xor
add
addb
lea
cltd
and
xor
cli
ret
pop
add
push
pop
imul
xchg
std
aaa
lods
xlat
push
push
rcll
stos
scas
add
sarb
cwtl
in
mov
push
add
fiadds
sbb
inc
adc
sbb
call
jge
add
data16
add
xchg
fiadds
add
mov
mov
xchg
lcall
mov
cli
and
scas
xchg
inc
pusha
idiv
cmp
inc
fidivrs
nop
mov
cmp
arpl
out
sub
ljmp
inc
mov
jnp
adc
lret
in
jns
inc
std
scas
add
mov
adc
loope
enter
add
mov
cli
rclb
add
lret
and
ljmp
stc
sti
add
xchg
xor
loopne
pop
lods
mov
mov
data16
arpl
mov
add
ret
xchg
ja
test
pop
xor
adc
js
add
mov
call
add
sub
addl
ss
fcoml
inc
hlt
mov
fcompl
loop
mov
jl
stc
jg
inc
cs
pop
lods
pusha
sbb
pop
dec
fdivr
jbe
cld
add
je
xor
xchg
loopne
nop
vmwrite
fistpl
push
cmp
andl
mov
dec
test
imul
jecxz
push
loop
dec
fsubl
add
testb
into
xor
std
push
push
jnp
add
clc
mov
cmp
rolb
and
aas
loopne
lea
repz
add
lds
xor
xchg
add
mov
in
aas
les
add
and
or
add
push
sbb
pop
lahf
arpl
movsl
push
stc
dec
jle
int
add
pop
out
faddl
inc
lahf
ja
sbb
add
aas
iret
jns
mov
sub
cmp
push
sbb
and
cltd
cmp
lret
inc
insb
sbb
and
ja
stc
repnz
jbe
add
cmp
jno
add
test
cli
and
popl
clc
cltd
mov
or
dec
inc
mov
or
lahf
xor
sbb
cmp
ror
lods
pandn
cmp
shll
inc
push
lret
dec
dec
or
pushf
mov
dec
sbb
std
sbb
inc
jmp
ret
xor
mov
rolb
mov
outsb
pushf
push
pop
addb
pusha
rolb
cltd
cmp
rorl
cmp
and
push
shrb
repz
cmp
incb
mov
inc
xchg
add
sbb
inc
jle
sbbb
jmp
xchg
add
shll
add
lods
pop
mov
mov
outsl
inc
adc
mov
cmp
mov
mov
add
mov
dec
bndstx
pop
outsb
stos
sbbl
xlat
push
mov
lret
pusha
cmp
mov
mov
mov
mov
in
iret
sub
or
in
shr
xchg
jl
push
jge
xor
add
shl
add
jnp
and
pop
ss
rcr
mov
inc
add
iret
loopne
xor
das
add
addl
aas
add
push
mov
inc
or
push
mov
lret
faddl
dec
lods
add
jle
shl
pop
push
add
leave
adc
and
cmp
cwtl
and
sub
jns
add
mov
setl
jno
js
pop
or
pusha
sarl
pop
andb
push
push
inc
jnp
loopne
xchg
xchg
mov
inc
inc
dec
popl
inc
arpl
test
int
jle
cwtl
adc
in
and
sub
mov
movsb
lds
sahf
pop
cmc
test
arpl
add
sub
xchg
sbb
inc
add
mov
lock
pop
mov
subb
mov
mov
and
pop
fmuls
out
ffreep
lcall
dec
stos
mov
into
pop
inc
add
cli
xorb
add
and
insl
adc
dec
shr
pop
loopne
dec
je
out
sbb
sub
inc
cmp
fcoml
add
dec
fisttps
add
sub
jbe
add
movsb
sarl
dec
add
and
pop
add
nop
insb
sarb
shlb
jo
aad
add
ror
loopne
nop
lock
ljmp
and
fs
sbb
pop
inc
pop
roll
lahf
inc
insl
call
jle
in
out
or
push
dec
add
scas
pop
adc
sub
popf
rorb
add
dec
inc
lods
aas
pusha
adc
add
adc
xor
xchg
leave
adc
inc
inc
add
xor
hlt
aas
pop
push
js
fidivl
jg
inc
test
mov
xlat
dec
inc
push
dec
arpl
bswap
and
xor
cli
pushf
arpl
or
adc
scas
add
inc
in
out
jns
add
leave
test
arpl
xchg
mov
js
imul
xor
cmp
iret
cmp
jb
add
jae
adc
pop
jle
push
push
mov
fsubr
test
enter
cli
sti
lret
and
mov
jns
pop
dec
arpl
or
add
ret
xchg
sbb
scas
add
lret
xor
jne
push
sarb
inc
stc
and
nop
xchg
testb
aas
add
push
test
fwait
add
cld
fmulp
ret
xor
lea
sub
add
popa
pop
sub
push
and
jg
stos
mov
dec
push
and
imul
dec
inc
lods
loop
lock
xlat
jno
mov
mov
xchg
fwait
aad
push
jl
add
push
pop
mov
repz
mov
xchg
imul
add
ret
sbb
mov
jmp
mov
or
mov
add
repz
xorl
adc
jg
add
incb
add
ret
aam
hlt
testl
mov
mov
cltd
test
in
popf
pop
inc
jo
decb
add
mov
mov
dec
loopne
adc
add
xchg
movsb
push
js
ret
lahf
mov
sub
inc
xlat
add
inc
pop
inc
mov
xorl
push
pop
jecxz
cmp
stc
push
jno
add
and
add
push
jge
shlb
cmp
mov
out
xchg
jl
ljmp
lds
cld
inc
pop
mov
stos
aad
clc
cmpsb
or
push
cmp
stos
xor
jns
pusha
lods
jnp
and
pop
mov
arpl
add
adcb
cmp
cmp
rclb
and
pop
loope
or
int3
push
imul
pop
mov
jo
in
add
rorl
cmp
cmp
mov
mov
ret
shr
mov
movsb
enter
pop
or
enter
xchg
insl
or
cmp
pop
in
mov
in
add
mov
cmpsb
inc
pop
cmp
addr16
mov
xor
add
les
arpl
outsl
add
xor
add
lcall
add
cmp
xorl
stos
dec
mov
add
out
mov
dec
movsl
mov
add
inc
testl
mov
push
cwtl
mov
sub
subb
jp
push
add
mov
pop
add
mov
cli
mov
add
pop
aad
test
pop
cmp
addl
and
inc
stos
mov
cmpb
sbb
out
imul
inc
enter
add
inc
mov
cmpsb
and
jns
add
adc
stc
sti
jns
notb
inc
dec
movsb
arpl
cmp
or
test
inc
cs
jbe
fmuls
aas
add
and
pop
xchg
repz
jb
data16
std
mov
mov
fincstp
mov
scas
sbb
in
jno
adc
pop
lahf
pusha
add
jge
pop
aam
cmp
mov
jno
scas
dec
xchg
test
fwait
jns
mov
ret
jmp
add
jp
loope
andb
xchg
cmc
pop
aaa
ret
lock
imul
loopne
cmp
inc
sub
jo
jle
mov
push
inc
cmpb
mov
fs
jbe
xor
addl
loopne
das
jae
test
sbb
xchg
mov
clc
add
mov
add
test
adc
add
fdivrl
jns
add
sbb
push
hlt
xor
cmp
arpl
push
loopne
std
push
into
scas
out
xor
xchg
out
add
inc
fsubrl
in
jne
ss
enter
dec
sub
out
fiadds
pop
outsb
xchg
les
push
add
add
sub
dec
icebp
mov
mov
mov
mov
jmp
insb
cmp
xor
es
jge
mov
mov
pop
sbb
movsb
inc
add
or
in
or
subl
and
fimuls
sub
mov
ja
cmp
repnz
aam
jnp
jae
add
cmc
fs
lods
lds
jg
add
cmp
std
add
push
imul
popf
sub
and
aaa
add
fsubrl
add
mov
in
push
arpl
push
call
cmp
scas
decl
inc
inc
add
mov
iret
pop
mov
lock
lock
or
flds
iret
aad
shlb
outsb
je
subb
fcmovnu
add
lds
mov
lret
fldl
aad
out
jno
cld
int3
insl
xchg
pop
add
cmp
sbb
mov
xlat
jg
hlt
jo
testl
push
mov
push
lret
sub
mov
cltd
push
adcb
fdivs
loope
mov
stc
mov
out
ret
xchg
adc
iret
pop
leave
frstor
roll
and
icebp
push
fldenv
inc
sbb
in
inc
int
jno
mov
rolb
pop
std
arpl
ljmp
pop
bound
jno
movsb
add
xchg
jp
mov
dec
insb
sbb
out
popf
pop
shl
adc
hlt
add
inc
mov
mov
arpl
add
adc
sub
aaa
sbb
mov
rolb
nop
in
jnp
add
mov
sub
enter
dec
sti
add
stos
and
push
in
add
inc
xchg
outsl
imul
cld
rcl
adc
pop
sbb
jp
insb
xor
js
test
inc
add
xchg
imul
pop
cmc
cld
push
sbb
adc
lock
add
push
add
pop
add
ss
pop
lcall
mov
push
add
cmc
lods
into
mov
add
sbbb
mov
and
shl
cmpsl
jne
ja
add
shrl
xlat
jnp
push
ret
lock
scas
or
insb
jb
or
inc
in
sub
jnp
xor
add
test
rcll
ja
rol
aas
adc
dec
add
push
pop
sahf
add
out
repz
inc
fistpl
aam
dec
sti
jmp
fsubrl
add
xor
xchg
rol
js
jno
xchg
sbb
ljmp
inc
pop
xor
mov
arpl
aad
jnp
jbe
xor
pop
xchg
jp
addr16
push
data16
test
push
jge
jo
adc
pop
leave
push
add
jecxz
inc
mov
pop
dec
out
pop
push
shrb
xchg
lods
fs
ficomps
loopne
and
add
push
dec
xchg
add
inc
or
add
and
lods
add
outsl
jl
divb
or
inc
pop
xor
add
push
dec
int
in
xchg
push
roll
les
rcl
stc
fimuls
cmp
push
xorb
and
mov
jns
js
sti
add
addr16
cld
add
sarb
data16
js
pop
ret
sub
out
mov
push
fisubs
dec
pop
xchg
movsl
enter
and
xchg
add
xor
movsb
pop
inc
sub
add
in
inc
add
xchg
pusha
int3
sbb
add
push
stos
rorb
daa
pop
out
fstpt
cmc
nop
xor
unpcklps
sub
adc
in
mov
jle
or
add
adc
into
orb
sub
decl
je
jo
jge
mov
push
mov
jp
jp
add
clc
movsb
xchg
push
pusha
cmp
test
pop
add
inc
and
mov
add
movsl
sarb
pop
pusha
add
lret
mov
int
mov
inc
mov
sub
fdivs
lret
xchg
into
and
push
and
add
aas
je
mov
dec
mov
test
push
inc
lds
add
mov
pushf
push
imul
jbe
loopne
mov
jo
push
mov
jp
sbb
aas
pop
dec
stos
lods
or
jns
in
mov
test
push
add
push
add
pusha
ror
mov
rolb
push
das
arpl
add
push
out
adc
cwtl
mov
int
mov
add
and
sarb
jae
add
test
repnz
repz
dec
rcr
add
aad
dec
sbb
mov
test
and
mov
lock
mov
sub
dec
lock
cmp
or
in
sbb
and
add
push
add
dec
imul
inc
rcrb
outsl
adc
movsb
xor
pusha
cwtl
int3
sub
push
cmp
imul
fs
adc
out
push
nop
test
das
dec
ret
add
lret
aaa
mov
xchg
xor
aas
arpl
push
push
and
gs
xchg
shr
jo
loopne
filds
dec
inc
pop
ret
pop
and
icebp
adc
add
mov
jo
test
xchg
jno
movsl
inc
insb
das
movups
stc
out
lock
dec
or
inc
mov
adc
add
sbb
jae
add
faddl
in
flds
dec
adc
outsl
cwtl
adc
cmp
pop
mov
das
addl
dec
outsl
add
sti
insl
aad
cmp
jb
sbb
fmuls
add
aam
and
add
inc
mov
add
test
jp
mov
add
jns
cmp
dec
outsb
subb
pop
inc
inc
enter
cld
and
mov
jp
add
or
jmp
repnz
xchg
push
inc
div
jne
jnp
fisttpll
push
arpl
lea
add
or
adcl
loopne
aas
adc
testb
into
add
cmp
pop
push
cmp
pop
mov
out
cs
test
mov
dec
and
push
dec
popl
ds
push
call
add
cmp
jb
cmp
or
ss
sub
add
inc
xchg
fs
dec
sahf
repnz
aas
dec
push
lea
add
add
mov
jno
add
adc
lods
loop
mov
loopne
nop
clc
and
add
ffree
inc
add
mov
pop
push
add
or
inc
aaa
xchg
and
out
jno
xlat
mov
adc
mov
mov
mov
add
in
dec
mov
inc
jle
cmp
ret
mov
jecxz
add
lock
dec
addr16
sub
jno
call
mov
xchg
and
add
inc
cs
add
shl
dec
adc
fsubl
ds
mov
dec
mov
adc
repz
js
stos
mov
adc
fprem
dec
sbb
sub
adc
adc
add
push
and
pop
addl
mov
sub
into
sarl
cmp
jp
int
shrl
lods
add
mov
add
lret
jle
stos
loopne
test
mov
pop
arpl
add
jno
jb
jge
add
movsl
imul
cmp
dec
add
and
testb
loop
sti
push
cmp
pop
rol
sbb
dec
aad
xchg
sbb
xor
pop
push
ds
loop
jns
adc
inc
pop
cltd
in
popa
mov
mov
lahf
test
add
or
sahf
adc
stc
cmpsb
mov
jno
add
movsl
pushf
prefetchw
scas
xchg
inc
mov
les
cmp
out
add
jbe
rep
popa
sarb
pushf
and
mov
shl
cli
add
rorb
jg
pop
dec
add
xorl
add
adc
mov
arpl
icebp
ds
lods
add
jno
add
xchg
shrl
rcr
mov
xor
cmp
ret
add
fidivl
js
sbb
or
pop
sbb
inc
pusha
fistps
add
das
pop
inc
cld
or
fs
add
js
xor
dec
inc
clc
push
fcomps
jl
dec
xlat
and
negb
add
pop
mov
add
sbb
popa
xchg
pushf
add
add
inc
push
jmp
outsl
push
dec
add
fildl
mov
xchg
stc
pushf
hlt
mov
add
mov
hlt
xchg
add
divl
add
sub
and
lcall
xchg
pop
hlt
mov
dec
add
cmpsb
aad
es
loop
dec
add
inc
xchg
jns
add
mov
out
xchg
addr16
iret
add
add
andb
push
mov
imul
add
mov
dec
dec
stc
in
shr
jge
mov
add
cmp
and
into
inc
add
aad
lock
jnp
add
aas
fs
dec
cmp
inc
pop
icebp
pushf
ja
pusha
mov
ss
movsl
jns
inc
shl
push
mov
lock
icebp
dec
inc
push
mov
out
mov
adc
sarb
sub
mov
add
fs
push
sbb
cwtl
inc
dec
xchg
loope
shrl
jnp
cmc
inc
or
insb
mov
or
mov
add
inc
jno
mov
js
xchg
pop
mov
rcrb
sahf
sbb
xor
inc
movsb
push
shll
test
add
push
cmp
sbb
daa
outsb
out
into
stc
add
sub
movsb
mov
enter
inc
std
push
xchg
ror
cmp
mov
nop
push
xchg
or
pause
inc
cmp
leave
and
leave
cmp
mov
fs
clc
and
pop
add
adc
fbstp
das
add
subl
fldl
outsl
push
lea
inc
test
lcall
mov
pop
add
js
fdivr
outsb
loopne
or
in
cs
mov
add
fs
adc
dec
and
mov
in
xchg
add
push
rcl
je
in
sbb
aam
push
fadds
mov
jne
inc
xchg
cmp
push
adc
gs
or
or
dec
add
enter
mov
push
inc
adc
dec
jmp
and
outsl
inc
add
or
cwtl
xor
mov
scas
sbb
ret
cmp
add
rcr
gs
jne
add
ljmp
sbb
jg
pcmpeqb
push
ljmp
sahf
jmp
or
pusha
arpl
dec
gs
and
dec
leave
jne
movsb
in
pop
icebp
outsb
jp
sbb
inc
out
rclb
adc
loop
sbb
repnz
add
inc
rcll
jnp
or
and
push
mov
jns
add
loop
das
push
sbb
iret
rorl
repnz
arpl
and
fldcw
sqrtps
aam
bound
add
fmull
or
add
out
push
pop
rolb
lcall
ds
dec
aas
jp
mov
or
arpl
out
adc
pushl
into
ucomiss
inc
negb
dec
pushf
cltd
rcrb
push
and
xchg
lret
mov
addr16
jns
ss
ljmp
pop
jae
mov
add
pop
push
adc
and
scas
ja
ret
xor
pop
and
les
dec
imul
ss
pusha
daa
addb
sbb
push
or
loopne
roll
fs
bound
inc
fisttpl
loopne
jp
lods
in
add
mov
std
rclb
inc
sahf
sbb
test
mov
fdivs
adcl
add
adc
loopne
add
lods
popa
xor
int
add
sub
sahf
add
and
enter
xor
pop
adc
call
roll
cmp
loope
test
push
dec
cmpsl
mov
jle
add
sbbl
or
mov
add
dec
push
iret
arpl
lds
inc
inc
add
fnstcw
mov
fldl
test
arpl
sbb
or
clc
aaa
rclb
je
cmp
in
add
cmp
and
mov
sarl
out
arpl
std
in
sbbl
inc
andb
xchg
dec
popl
xlat
lock
cmp
test
add
lret
cltd
in
mov
xchg
inc
xchg
mov
cmp
popa
ret
rcrb
jle
jge
orb
mov
ds
mov
or
mov
inc
add
push
sub
xchg
lcall
add
xchg
push
scas
rcrl
mov
add
dec
addr16
add
imul
pop
jp
push
lock
inc
inc
cmp
jo
aas
mov
xor
ret
ljmp
cmp
push
loopne
jecxz
add
xchg
movsl
fisubs
jns
pop
pop
dec
add
jle
xor
add
sarl
popl
xor
add
cmp
clc
daa
push
in
inc
add
push
pop
add
ret
orl
dec
ror
mov
cmpb
push
add
adc
ret
push
fs
add
stc
mov
les
xchg
or
mov
jo
int3
sti
sbb
shlb
pop
mov
adc
push
cmp
or
mov
push
outsl
into
push
add
sarb
inc
nopl
popf
xchg
addr16
mov
jl
lods
inc
test
jo
push
daa
sbb
fs
adc
push
fwait
xlat
dec
rorb
movsl
add
int3
mov
arpl
sub
add
shlb
push
xlat
dec
shrb
imul
jo
dec
pop
mov
repnz
ret
cmp
dec
dec
loope
popa
and
sbb
add
nop
addl
push
mov
pop
pop
rcll
jo
push
jo
adc
adc
loope
pop
xor
sub
sti
in
aas
pop
add
fmuls
cmp
andb
testb
out
or
shlb
ficoml
xchg
xor
aas
imul
sbbl
test
pop
rclb
jg
jnp
sub
rclb
mov
add
jno
sub
test
or
jecxz
push
add
inc
insb
inc
add
inc
push
cli
adc
in
rcrb
push
add
test
add
or
jbe
out
pslld
lahf
lods
loopne
mov
std
pop
add
and
add
arpl
dec
lret
scas
push
stc
cmpsl
ss
dec
lods
scas
pop
cmp
mov
dec
loopne
in
add
xchg
outsb
mov
sub
add
enter
notl
add
inc
add
popf
ss
cmp
cmp
inc
inc
cmp
add
pop
loop
ja
pushf
pop
ret
or
in
and
push
inc
add
fdivl
ja
add
xchg
xor
inc
inc
repnz
push
fnstsw
add
pop
je
mov
jecxz
add
xchg
mov
push
pop
dec
push
iret
jge
xor
ret
scas
add
push
arpl
sbb
push
xchg
rcrl
adc
mov
add
xchg
movsl
shll
jnp
push
inc
das
str
add
push
inc
in
out
or
jg
dec
add
sbb
lret
jle
xor
push
mov
int3
add
inc
lock
ret
mov
add
inc
xchg
add
add
dec
xchg
adc
outsb
pop
rol
rdtsc
mov
mov
jl
add
stos
inc
repnz
test
and
xchg
add
mov
lret
pop
or
xchg
add
in
cs
inc
loop
mov
subb
divl
xor
and
lea
mov
cmp
aas
orb
fdiv
out
ret
mov
loopne
push
mov
add
dec
lods
or
mov
add
xchg
adc
pop
adc
jbe
mov
inc
hlt
add
add
packsswb
mov
add
mov
fsubl
popf
dec
inc
fwait
sub
push
cltd
lods
push
or
mov
les
push
push
mov
xchg
add
movl
mov
mov
and
mov
xchg
rorl
in
jge
loopne
iret
je
add
and
xchg
fnstsw
dec
into
or
add
pop
adc
add
iret
push
cmp
jo
add
mov
shlb
pop
popf
scas
xchg
aaa
dec
cmpsl
test
xor
sub
or
add
outsl
push
rorl
jae
mov
lret
add
loopne
inc
hlt
inc
xchg
jbe
pop
mov
pop
shlb
adc
xchg
xchg
les
dec
mov
prefetch
or
dec
cli
push
inc
lods
or
cwtl
or
sub
dec
or
push
xor
rolb
xchg
roll
loop
push
xchg
mov
inc
jp
xorl
lock
lds
les
in
and
sahf
aam
push
add
movb
das
mov
push
dec
mov
dec
cs
sub
adc
add
ret
add
pushf
rolb
loope
fdivr
aaa
pop
aam
jp
push
inc
push
dec
sub
lret
sub
add
dec
mov
or
mov
outsl
pusha
sbb
std
add
cmp
cli
rcl
mov
arpl
decb
pop
dec
cwtl
ror
pop
add
mov
dec
pop
testl
inc
dec
das
push
notb
test
xchg
sbb
idivl
or
push
jecxz
mov
add
cmpsb
mov
xchg
movb
and
call
loopne
mov
adc
inc
jb
rcrb
rcll
lds
push
popf
cmp
out
mov
jmp
bound
add
xorb
add
cmpsl
enter
pop
adc
fucomi
js
into
addr16
daa
loopne
sahf
inc
sub
icebp
jg
or
sbb
leave
cmp
fisttpl
in
sub
add
jmp
ljmp
add
mov
add
outsl
cld
outsb
ja
add
adc
es
movsb
fmull
add
adc
xchg
ret
adc
mov
jge
js
pop
cmp
xchg
scas
dec
cmp
ljmp
or
test
nop
shlb
shll
pop
inc
add
mov
inc
jmp
lret
sub
or
mov
gs
enter
cmpsl
adc
inc
jge
ret
mov
sub
aad
ljmp
jnp
adc
jbe
add
jecxz
out
es
push
js
incl
call
je
cmp
or
loopne
lret
mov
or
dec
rcrb
popa
movsb
add
mov
xchg
scas
rolb
push
mov
shl
in
punpckldq
xor
add
mov
pop
out
add
add
inc
push
xor
add
xor
add
pop
lock
add
sbb
call
mov
or
rcrl
sbb
mov
shll
jb
xor
cmp
pop
push
movsl
jbe
out
rorb
add
lods
jae
clc
rolb
rorb
or
andl
cmpsb
mov
inc
fdivrs
mov
out
enter
data16
sbb
flds
and
ds
test
mov
stos
inc
aad
pop
push
pushf
xor
fnstsw
rcrb
jmp
bound
shl
jne
mov
xor
fwait
inc
inc
dec
xchg
mov
sbb
jbe
jns
mov
fsub
rol
cli
add
in
cltd
gs
add
add
fwait
add
pop
leave
adc
mov
xchg
add
and
cmp
enter
mov
pop
stos
mov
decb
pop
iret
and
stos
mov
add
push
shll
ja
xchg
les
js
inc
sbb
mov
cli
add
repz
cmpb
inc
add
xor
push
mov
adc
das
xchg
and
push
in
push
xchg
xchg
nop
ss
sti
add
dec
daa
sbb
add
test
push
mov
ret
and
enter
mov
iret
andl
lock
hlt
sub
sbb
fldl
and
push
mov
pop
inc
add
jns
push
pop
pusha
pop
inc
cmp
mov
or
fadds
cmc
push
sbb
add
mov
je
pushf
shrb
jmp
add
sti
das
push
jbe
add
arpl
pop
je
add
sbb
mov
in
popl
push
stc
sub
add
fldcw
cmp
aam
push
mov
enter
add
mov
adc
arpl
ljmp
push
enter
add
xchg
inc
jecxz
xchg
iret
sbb
mov
add
scas
sub
pop
push
adc
mov
and
test
in
adc
push
push
clc
in
inc
add
call
sbb
add
cmp
inc
cmpsl
mov
pusha
sub
sbb
pop
xchg
gs
outsb
mov
jnp
add
dec
dec
sarl
ljmp
dec
loope
cmp
push
jg
and
add
inc
das
sub
cmpsl
loop
rcrb
lds
outsl
add
pusha
iret
inc
mov
repnz
jae
cli
add
add
add
scas
rcrb
mov
jne
add
xor
cwtl
or
pop
outsl
sahf
add
add
data16
lods
or
add
sahf
adc
or
cltd
arpl
mov
add
inc
dec
cwtl
jp
js
add
pop
pop
fwait
add
faddl
mov
push
mul
push
fs
andb
test
je
jbe
lahf
cli
gs
add
adc
loopne
fildl
mov
fsubl
mov
sti
inc
sub
dec
div
xchg
je
add
cmovne
jno
or
cmpsb
xor
inc
or
sub
xchg
mov
lods
mov
icebp
lock
mov
cmpsb
loope
lea
iret
add
add
scas
mov
arpl
adc
call
lcall
sub
add
call
sub
pusha
sbb
mov
jns
cmp
adcl
cmp
scas
je
insl
dec
add
ret
sub
popa
pop
add
cmpb
je
rclb
jge
cmp
push
and
inc
in
sub
stc
lods
pop
mov
add
mov
jl
scas
pop
pop
push
add
inc
stos
xor
sub
xlat
mov
pop
arpl
outsb
std
mov
sarb
jg
add
dec
das
nop
push
andl
or
mov
adc
jbe
add
loopne
xchg
mov
arpl
sub
je
add
out
out
xor
mov
dec
stc
and
rolb
add
push
push
adc
dec
mov
pop
mov
mulb
add
pop
testl
test
imul
lock
push
nop
mov
and
dec
push
xor
cltd
aaa
shll
add
sbb
add
jne
arpl
cmc
inc
pusha
iret
js
mov
bound
mov
jae
and
xchg
aas
in
outsl
repnz
sub
cli
inc
out
cltd
sarl
or
pop
inc
loope
inc
add
mov
sbbb
test
pop
movb
adc
repnz
lods
ret
mov
and
add
jne
mov
cltd
push
add
pop
inc
test
repnz
push
pop
cwtl
mov
stos
inc
mov
or
loopne
jmp
pusha
fidivrl
repnz
nop
push
push
lea
clc
mov
mov
or
and
xchg
xlat
testl
dec
sub
push
gs
add
jp
mov
push
add
sub
xlat
add
inc
cmp
add
xor
push
jae
cmp
filds
and
insl
push
rclb
xchg
outsb
add
xor
sbbl
loop
aam
jns
movsb
sbb
add
inc
and
les
cld
adc
int
push
jmp
add
cmp
push
icebp
in
push
inc
imul
mov
add
xchg
popa
movsb
cmp
mov
add
inc
adc
xor
or
push
rorl
rol
add
out
adc
cmpb
or
add
movsb
mov
pop
sub
cwtl
sbb
inc
data16
xlat
lea
cmpsb
in
sti
xchg
clc
nop
fstl
jo
sbbb
xor
jae
add
adc
addr16
add
mov
jl
sub
and
add
adc
push
add
lret
jl
popf
shlb
add
add
cld
in
push
sbb
insb
iret
mov
or
mov
mov
inc
add
iret
ljmp
imul
out
dec
movsb
cmc
xchg
sub
add
sbb
push
xor
add
movsb
lret
push
adc
ror
jb
leave
push
les
lret
iret
movsl
cli
sub
jne
inc
repnz
pop
mov
inc
inc
xchg
es
add
mov
jno
cmp
sbbl
adc
nop
out
or
adc
push
fldt
mov
ret
std
inc
pusha
fldenv
pop
pop
push
cmp
and
in
mov
fwait
sub
imul
fbstp
jo
or
outsl
fwait
sub
inc
paddq
repnz
jno
cmpl
dec
call
add
jmp
das
add
sti
ror
xchg
mov
inc
add
cmp
mov
add
xchg
and
xor
mov
aas
add
idiv
xchg
adc
add
xor
push
jle
leave
sub
inc
int3
add
filds
pop
mov
jne
iret
in
adc
sub
or
pop
sbb
push
jmp
cmp
dec
subb
lods
add
incl
inc
aam
adc
lret
movsl
pop
mov
add
icebp
xchg
jo
inc
or
out
dec
sbb
inc
lds
sub
arpl
inc
shrb
in
inc
pop
and
fwait
inc
add
mov
jg
push
xor
test
outsl
call
jge
add
pop
and
ja
mov
push
arpl
sbb
xchg
clc
mov
add
sub
scas
ds
sahf
add
ljmp
idivl
outsb
sti
push
pop
jns
add
mov
aaa
cmp
aam
inc
add
xchg
cmp
insb
add
fsin
movsb
fnstsw
add
xor
add
mov
add
bound
fwait
add
cmp
add
fnsave
mov
mov
jnp
rcrb
pop
subb
out
mov
xorb
in
setnp
into
and
and
andl
mov
daa
fnstcw
cmp
cmp
gs
imul
cmp
imul
add
xchg
add
pop
pop
testb
lods
sub
inc
sub
add
push
pop
addb
sub
mov
xor
push
inc
rorb
test
mov
sub
add
dec
sub
add
in
imull
inc
adc
jmp
xchg
xor
and
sbb
ljmp
scas
movsl
mov
arpl
lods
push
push
adc
jl
pop
inc
push
aas
xchg
arpl
pop
jmp
rcrb
orb
lods
repz
inc
cli
mov
add
cmpsb
sar
ss
xchg
les
xor
lods
mov
xchg
jno
xchg
or
add
or
adc
inc
test
dec
subb
rolb
enter
test
sub
repz
pop
or
inc
lret
push
push
inc
push
fldt
rclb
aas
mov
mov
bound
push
insb
fs
pop
lret
in
mov
outsl
mov
add
or
add
lahf
sbb
add
jb
mov
cmp
pop
inc
or
aad
aad
sub
loop
add
inc
inc
dec
push
add
stc
xor
shll
xlat
hlt
clc
add
jmp
insb
sbb
int
add
pusha
fstpl
pop
inc
pop
out
jge
xchg
jl
inc
add
mov
xor
mov
popa
xchg
adc
xorl
dec
jns
push
adc
cwtl
add
and
add
jmp
sarl
hlt
sub
inc
pop
or
sbb
and
sti
lea
ret
add
add
divb
push
pop
add
arpl
adc
outsl
push
loope
data16
add
rclb
sbbl
inc
shll
ja
rolb
es
aas
mov
out
in
inc
dec
xchg
add
movd
inc
lds
ss
sub
daa
push
jmp
pop
addb
fldenv
leave
add
inc
xchg
adc
sbb
dec
nop
push
xor
push
mov
add
dec
dec
into
adc
adc
or
aaa
rorb
lods
mov
jbe
in
add
mov
push
pop
das
sbb
push
andl
pop
loopne
add
daa
cmp
dec
aas
add
lea
add
push
cltd
cld
test
add
add
mov
pop
mov
sub
inc
repnz
fs
into
xchg
dec
push
ret
fmuls
cs
popf
adc
add
jg
push
scas
je
pop
add
push
lods
mov
jns
aam
ret
dec
pop
loop
sbb
pusha
adc
cli
push
add
inc
sub
pop
cmp
mov
cwtl
movsb
add
out
insb
and
push
add
pusha
push
stos
mov
leave
adc
add
adc
andb
icebp
add
and
mov
add
push
mov
pop
add
cmpb
and
popf
pusha
mov
xchg
sbb
lods
pop
add
cwtl
iret
mov
jle
add
jge
adc
jmp
add
arpl
xlat
mov
mov
mov
xor
inc
add
dec
inc
add
fsubp
scas
cwtl
sbb
shll
inc
arpl
dec
add
lahf
repz
cmp
mov
dec
lds
stos
mov
pop
add
nop
cmp
xchg
testb
push
push
roll
push
add
cmp
push
add
pop
outsl
xchg
add
fistps
cmp
insb
add
mov
inc
aaa
adc
inc
adc
outsb
mov
and
add
arpl
addr16
push
sar
sar
cmp
pop
aaa
scas
mov
mov
repnz
cmc
adc
xchg
adc
mov
repz
add
pop
aas
pop
in
sbbb
xchg
push
les
ret
add
jle
cli
popa
inc
insb
jne
std
xchg
jp
rcrb
sbb
mov
ja
std
dec
cwtl
jge
fistpll
inc
leave
jg
add
sbb
add
test
nop
jno
rolb
shlb
dec
jnp
jns
add
sbb
cwtl
pop
fbld
mov
imul
dec
add
scas
adc
std
adcl
cmp
push
lcall
daa
scas
add
cmc
mov
xchg
add
loopne
movb
inc
cmp
lret
sub
jg
mov
rorl
rolb
leave
inc
mov
xchg
adc
paddusb
sub
ret
fwait
pop
cmpsl
dec
inc
add
mov
add
jle
ficompl
push
scas
pop
rolb
arpl
mov
mov
addl
xchg
pop
pop
add
xlat
loope
xorb
and
or
stos
lcall
bound
pop
or
mov
push
fidivl
xlat
pop
inc
js
add
sbb
xchg
mov
mov
enter
push
hlt
xchg
es
pop
je
add
ret
push
fwait
rcll
mov
xchg
repz
lahf
cmpl
add
loop
mov
cld
or
add
adc
hlt
movsl
sbb
jp
add
int3
popw
add
jmp
xchg
pop
mov
arpl
orb
aas
iret
fisubs
inc
cwtl
stos
fwait
int
pop
lea
mov
sbb
sti
push
enter
test
in
cmpsb
add
mov
and
add
mov
shlb
rol
push
inc
pop
iret
xchg
andb
jecxz
sub
cli
fbld
dec
push
or
jae
pusha
data16
rorl
adc
aad
les
mov
mov
std
int3
jo
add
test
cmp
mov
dec
add
cli
mov
and
sub
dec
bound
add
cmc
jb
jge
add
pop
pop
les
jns
push
add
fadd
data16
sbb
sub
imul
out
ffreep
imul
pop
sbb
rorb
jae
add
inc
ret
les
out
jg
inc
sbb
addr16
mov
add
xchg
ret
rorb
mov
cmp
jg
add
push
inc
mov
test
add
cld
call
jmp
dec
inc
xlat
mov
into
cwtl
add
je
mov
add
btr
jo
mov
and
or
lahf
adc
push
mov
push
pop
push
mov
xor
add
shl
sbb
cld
mov
lock
ljmp
sarb
sbb
xchg
cli
push
bound
popa
add
add
outsl
fcmovnb
ret
out
je,pt
adc
nop
pop
sub
ss
aad
je
cmp
orb
push
leave
popl
mov
jecxz
lock
and
aad
out
pop
cmp
jg
out
rorl
and
stc
add
sub
push
add
xchg
cmp
loopne
pop
add
insb
fiaddl
loop
add
sub
test
add
xchg
imul
push
xchg
int
fwait
mov
sbb
fsubrl
add
xor
in
insl
aas
add
outsb
or
sbbl
xchg
cmp
add
xorl
add
cmpb
jp
jnp
add
sbb
lahf
adc
test
dec
mov
inc
inc
lret
sbb
inc
ss
imul
jbe
aaa
mov
pop
shl
imulb
dec
mov
xor
sarl
mov
fcmovnb
cmp
pusha
add
and
dec
iret
fistps
in
ss
andb
add
add
daa
or
sarl
mov
fs
popl
xchg
mov
sbb
cmp
ss
insb
inc
test
dec
std
xchg
add
sarl
inc
int3
pop
lods
push
mov
call
in
insb
aam
popa
mov
add
jo
sti
flds
sbb
lock
push
pop
jp
in
test
add
jae
in
imul
fwait
cmpb
cmp
jmp
push
sub
ret
ds
pop
sbb
popf
addr16
and
fimuls
fcoms
stos
cmpl
add
push
push
out
jp
jg
dec
call
add
rolb
lods
test
push
cmp
stos
inc
cmp
inc
mov
idivl
jmp
push
stc
outsb
int3
mov
scas
clc
pop
sub
bound
xchg
insl
mov
mov
xchg
add
test
cli
mov
divl
add
sbb
mov
mov
xorb
cli
inc
xor
lret
pop
nop
jb
dec
jg
stos
int3
cmp
xor
pop
mov
fistpl
into
nop
jne
mov
jbe
add
add
decb
lret
add
jns
insb
jle
add
iret
shlb
popa
rcrb
fisttps
int
in
lock
enter
test
and
popa
add
in
sti
subl
rorl
xchg
lcall
add
sbb
out
add
loopne
es
sbb
fiaddl
repz
xor
dec
pop
add
mov
loopne
ja
jns
add
adc
sub
inc
flds
and
jle
imul
gs
aam
sbb
mov
mov
add
aad
nop
scas
rcrl
cmp
mov
in
cmpl
shrl
adc
inc
mov
loopne
add
xor
xchg
push
sbb
fwait
int3
aas
rcll
jb
inc
cmpsl
and
or
and
test
or
add
or
dec
jno
dec
out
add
mov
inc
add
xchg
and
jle
push
add
daa
arpl
pop
inc
push
ds
mov
mov
stos
cs
cwtl
pop
fisubrl
sub
xchg
mov
movsb
scas
add
scas
push
adc
push
fildll
mul
xor
or
std
sbb
push
push
dec
out
ret
ss
pop
xchg
pop
and
inc
int
int3
cmp
imul
mov
les
sbbb
inc
push
jns
add
pop
mov
nop
out
or
add
sbb
xchg
xchg
xor
add
lret
and
jo
add
sarb
push
pop
imul
rcrb
loopne
add
scas
arpl
fistl
cmp
inc
push
add
dec
xor
mov
cli
mov
or
add
push
lock
in
stc
mov
ja
add
sub
cli
add
mov
stos
nop
adc
jle
xor
or
aas
lock
cmc
loop
dec
jecxz
jp
arpl
ss
and
push
call
cmp
push
aad
add
pop
pusha
ret
xor
add
cmc
call
insl
cmpsb
mov
fimull
inc
lods
sub
shlb
sbb
add
inc
sbb
mov
sti
jno
pop
mov
cmp
outsl
cli
add
rolb
cld
loope
pop
stos
ljmp
pop
repnz
hlt
inc
out
add
lahf
add
and
enter
add
sbb
js
add
mov
inc
xor
add
adc
dec
sbb
or
pop
shr
pop
adcl
push
mov
ss
lret
movb
lods
xchg
jns
add
bound
adcl
add
dec
sbb
imul
mov
sbb
cmp
in
jo
or
dec
or
xchg
inc
sbb
dec
add
adc
iret
xchg
arpl
ret
mov
mov
adc
add
mov
test
cmpsl
icebp
add
inc
arpl
add
sub
insb
xchg
jle
add
sub
push
add
and
pushf
movsb
push
inc
pop
add
js
out
je
xchg
imul
rcrl
sub
mov
mov
pusha
inc
fwait
mov
mov
mov
aam
mov
out
dec
lods
cmp
lods
add
sti
dec
shrb
pop
jecxz
pusha
add
pop
out
das
xor
ret
push
jb
add
inc
xchg
inc
repnz
add
lahf
jle
push
dec
pop
leave
sbb
addb
icebp
mov
stos
nop
testl
push
orb
pop
enter
jg
add
jp
mov
hlt
movl
xstore-rng
cmpsl
add
fisttpll
je
add
ror
roll
mov
mov
icebp
ret
add
arpl
cmp
add
sub
mov
add
xor
popa
pusha
jno
push
test
mov
enter
rclb
cwtl
push
push
xor
outsl
aaa
loopne
pop
std
and
mov
jmp
sub
pop
push
pushl
jnp
add
pop
mov
insl
orl
mov
or
dec
jl
add
cmpb
mov
ja
in
add
jecxz
fdivrs
inc
add
in
xor
int3
mov
lcall
std
movsl
stos
popf
into
imul
pusha
sbbb
jnp
sbb
inc
or
cmpsl
nop
lcall
push
hlt
inc
add
xchg
jge
lea
add
xor
pop
arpl
nop
dec
add
movsb
rolb
push
out
clc
fbld
add
imul
inc
mov
jl
jne
test
shlb
or
jae
cld
add
clc
dec
push
cmc
add
mov
add
and
pop
sbb
sub
sbb
popf
fsubl
sub
es
add
shlb
add
and
cmp
pushf
iret
and
xor
mov
test
sahf
js
mov
mov
jnp
das
mov
cmp
add
sbb
add
sub
mov
inc
add
jmp
and
lret
pusha
xchg
pop
inc
add
push
jmp
dec
repnz
add
je
enter
ret
dec
mov
int3
pop
add
pop
sarb
add
and
or
pop
jge
lods
cmc
xchg
nop
cs
push
push
vmread
pop
lock
sbb
cmp
loopne
das
scas
sub
decb
or
in
jg
cmpb
imul
lret
mov
bound
movsb
pusha
sub
fcoms
popf
inc
push
add
push
sbb
pop
out
xchg
sbb
leave
fs
loop
and
lea
shll
in
xor
loope
mov
add
inc
adc
lahf
jne
adc
jae
pop
out
jecxz
movsl
pop
rol
inc
clc
sub
in
sti
das
arpl
mov
add
aam
mov
add
sbb
inc
movsl
icebp
add
xlat
call
in
pop
insb
jmp
lcall
adc
and
sbbl
add
sbb
es
pop
add
popf
inc
data16
mov
add
loope
push
add
pop
imul
add
arpl
cmpsb
clc
repz
cmp
dec
fmul
mov
and
fdivrp
outsb
lods
push
mov
loop
xor
sbb
mov
add
bound
pushf
adc
cmpsl
xchg
xchg
jg,pn
add
ljmp
loop
add
fisttps
add
sahf
stos
and
std
add
fnstenv
stc
inc
dec
add
inc
int3
out
lahf
jecxz
out
mov
mov
cwtl
fsub
mov
les
add
sti
faddl
scas
arpl
out
mov
dec
add
test
mov
int3
in
add
scas
jns
pop
inc
shr
jecxz
mov
leave
aas
decl
push
jne
add
xor
aam
dec
push
push
bound
test
mov
push
xchg
fsubr
jbe
add
pop
pop
and
test
cli
inc
jb
lods
inc
lods
mov
xor
xchg
adc
hlt
faddp
out
push
fstpt
rol
sub
idiv
xor
add
push
ret
repz
cmpsb
push
lods
xchg
add
add
test
push
sub
outsb
push
call
add
jp
inc
pusha
xchg
shrl
nop
cs
ret
xor
inc
fsts
add
les
imulb
test
xchg
je
dec
call
xor
divb
adc
data16
mov
sbb
mov
les
add
pushf
ret
push
inc
sbbb
dec
or
jo
add
div
lock
mov
jecxz
cmp
orb
mov
push
in
clc
mov
add
inc
inc
cs
movsb
adc
push
mov
in
aam
cmc
inc
adc
data16
lret
seto
test
cmp
push
jb
and
push
push
inc
add
pusha
cli
loopne
push
aam
test
jecxz
push
aaa
xor
mov
movl
add
inc
sbb
fs
jns
mov
mov
xchg
inc
and
sbb
pusha
pop
add
arpl
ret
fwait
xlat
aas
ret
dec
add
mov
pushf
add
out
add
cli
sub
add
mov
pop
rorb
ljmp
enter
cmp
cmc
test
lret
aam
pop
mov
mov
mov
or
add
pop
pop
lcall
iret
addb
jg
imul
int
out
mov
jecxz
lret
stos
pusha
rolb
orl
fadds
jo
jl
sub
loop
lahf
sbb
loope
nop
loopne
inc
add
xorb
out
sub
mov
mov
out
ja
add
and
fwait
dec
jge
cli
mov
incl
xor
cmp
fsts
dec
or
cmpsl
xor
and
arpl
pop
sbb
mov
sub
and
sbb
int3
mov
insb
add
xor
stc
fldl
loope
pop
mov
clc
pop
inc
dec
inc
mov
ds
lods
cli
andl
arpl
mov
cmp
pop
iret
adc
or
add
into
inc
cmp
in
addb
pusha
add
cmp
inc
repnz
enter
jmp
xchg
inc
push
decb
cli
jb
ljmp
push
iret
xor
sahf
leave
out
je
jbe
xchg
add
les
xchg
jg
add
shlb
leave
scas
jns
out
mov
xor
out
call
cmp
or
pusha
lock
add
cs
ret
inc
xchg
add
pushf
jb
sub
or
add
jns
lock
int3
imul
push
xchg
mov
sbb
lea
sbb
ja
mov
shr
mov
dec
add
or
js
xchg
add
nop
out
mov
es
test
divb
add
dec
imul
call
add
lcall
aad
shrb
add
xchg
push
sub
mov
add
aad
lods
jnp
out
bound
roll
mov
jo
or
jmp
add
aam
mov
arpl
stc
loopne
pop
mov
or
add
inc
fidivrs
pop
lret
inc
out
nop
sbb
popa
iret
push
ds
subb
sti
push
add
cld
push
add
dec
or
out
add
inc
xor
mov
pop
add
loope
test
jno
cltd
or
pop
add
enter
push
stos
pop
je
addr16
nop
push
inc
adc
shl
shlb
pop
inc
pop
in
add
fwait
jae
sub
pop
in
add
jecxz
jno
push
in
shlb
add
inc
inc
fistps
repnz
aad
and
js
cwtl
mov
push
sarb
shr
inc
xor
add
hlt
insb
ss
add
and
rolb
sbb
and
pop
andb
add
cltd
mov
aas
jo
inc
add
loopne
adc
add
jmp
dec
add
bound
sub
push
mov
and
adc
jl
insb
sbb
inc
cli
sti
push
sbb
add
idivb
es
add
jl
pop
sete
int3
data16
sti
or
jle
pop
in
cld
add
rorb
aaa
ja
add
and
ret
fildl
cmp
imul
ljmp
addr16
sti
push
cmpsl
inc
aad
call
xorb
lods
add
mov
cmp
outsl
sti
jbe
inc
xor
paddw
bound
lds
adc
add
dec
jp
jb
fs
jp
add
xchg
mov
mov
enter
add
inc
rorb
push
xor
incb
jnp
insl
pop
cmp
inc
add
ss
sahf
cs
and
push
fsub
repnz
xchg
das
aas
stos
fmuls
call
pusha
cmc
and
mov
mov
push
pop
fsubrl
sti
rcrl
pop
inc
je
ja
fwait
push
cmpps
rclb
outsl
xchg
push
cs
faddl
das
add
iret
pop
push
js
and
ljmp
loop
mov
jecxz
loope
push
rorb
inc
add
xchg
mov
add
iret
cmpsl
add
xchg
pop
sub
or
lret
in
or
sbb
outsb
adc
loope
sbb
add
jne
cld
dec
sbb
inc
out
int
std
les
test
ret
nop
add
push
lahf
stos
fs
fisttpll
jp
andl
dec
rorb
jo
add
les
scas
add
adc
lods
jns
xchg
inc
faddl
mull
std
sbb
add
rorb
and
mov
sub
add
pop
aad
aas
rolb
sub
push
ds
sbb
nop
inc
add
add
outsb
push
mov
fs
add
cmp
xchg
and
flds
mulb
inc
sbb
fdivs
orb
popa
push
adc
pop
cmp
test
pop
pop
aas
pop
js
push
jno
call
inc
or
push
mov
add
pop
stos
jns
fadds
sarl
mov
dec
inc
xchg
lret
mov
adcl
xor
dec
mov
out
lcall
add
add
cmc
js
cli
imul
inc
pop
pop
or
pop
jns
clc
jg
scas
add
jb
arpl
icebp
cltd
add
dec
sti
push
xchg
add
xor
add
inc
lods
int
scas
in
cmp
cmp
lock
rorb
add
sub
mov
cmc
pop
popa
add
xchg
aas
fucomi
mov
pop
adc
pusha
movb
and
add
xchg
add
cmp
nop
and
jle
mov
dec
push
add
xor
cmp
jo
pop
movl
mov
dec
cmp
sbb
adcb
sbb
js
inc
mov
dec
add
movsl
ja
jns
xchg
add
pop
mov
add
cmp
dec
stc
aam
mov
addl
add
repnz
adc
dec
leave
jo
ja
add
test
pushf
push
add
dec
xor
add
mov
xor
jl
aas
add
jecxz
shll
mov
jno
push
outsl
fcoml
add
fwait
aas
or
push
add
shl
mov
push
out
mov
mov
ss
in
dec
add
jg
data16
pushf
loopne
cmc
inc
mov
add
out
inc
add
cld
pop
rcrb
mov
mov
rcrb
add
sub
pop
push
cmc
mov
mov
pop
arpl
push
lcall
inc
sub
test
or
inc
fldcw
jo
out
mov
push
add
stc
pop
pop
lods
push
add
incb
sti
or
cmp
and
int
add
add
add
out
sbb
ljmp
and
cmp
xchg
pusha
fwait
jle
add
movsb
rcrl
pop
jl
xor
rolb
cmp
fcomps
pop
xchg
aad
js
inc
add
add
loopne
aam
dec
scas
test
mov
sbb
mov
adc
inc
add
faddl
pmaddwd
inc
bound
rclb
mov
add
int3
fidivrl
fwait
push
add
outsb
in
mov
inc
aas
aad
xchg
xor
jge
xchg
pusha
add
insl
out
inc
sbb
in
add
sar
jge
sub
test
add
cmp
xor
mov
sarb
adc
mov
cmp
jbe
inc
dec
mov
arpl
dec
xchg
add
xor
add
pop
dec
sahf
push
scas
xchg
ret
jb
add
add
xchg
in
add
lods
sbb
adc
jns
add
and
mov
sbb
into
pushf
sbb
ret
inc
test
add
shlb
xchg
add
push
loopne
push
mov
sahf
pop
popa
jmp
xchg
mov
add
fdiv
cmc
in
popf
mov
mov
es
push
jecxz
cmp
test
fidivs
mov
orl
arpl
mov
xchg
inc
cmpl
cs
jo
mov
jo
add
inc
lock
test
fcomps
pop
jo
mov
inc
xchg
aaa
sub
jp
add
sarb
xchg
pop
stc
cmp
lods
cmpb
mov
jmp
sbb
xchg
aad
popa
mov
jb
xor
add
pop
push
mov
shlb
jae
dec
mov
adc
mov
scas
in
adc
xor
add
cs
inc
jo
add
test
sbb
cmc
or
pop
and
sub
inc
xor
push
sub
pop
sbbb
sub
or
std
jge
cmp
sub
out
add
push
lcall
add
dec
add
sbb
leave
xchg
in
fdivs
in
nop
add
arpl
pop
and
aam
cmp
les
movb
rcrb
fimuls
mov
nop
mov
les
test
push
rolb
pop
xchg
jmp
inc
mov
add
push
add
push
fmul
mov
xchg
cmp
arpl
ss
movl
dec
or
int3
xor
and
xchg
les
nop
mov
js
push
dec
ret
or
loope
cmp
pop
dec
addr16
xorl
roll
call
rcr
add
nop
mov
cmp
outsb
mov
hlt
cmpsb
inc
add
mov
mov
cmpl
add
and
cmp
push
cmpb
aad
lods
cmp
fistl
mov
pop
inc
jbe
jl
xchg
das
mov
movsb
xchg
movb
jne
call
add
les
sbb
scas
inc
xchg
sahf
aam
mov
mov
mov
xchg
andps
rolb
add
insl
mov
clc
add
testl
add
inc
cmp
imul
push
subb
ror
jnp
aaa
add
mov
pop
add
shrl
xchg
dec
add
inc
notl
nop
outsb
cmp
lret
mov
test
iret
fsubs
add
inc
sbb
arpl
dec
repz
imul
lods
sub
adc
push
std
jecxz
cwtl
add
lcall
sarb
in
insl
stc
pop
add
inc
inc
rorb
add
inc
or
mov
shrb
xor
mov
icebp
in
bnd
lock
int
pop
and
divb
adc
jmp
mov
pop
add
xor
cmp
push
cltd
insb
dec
pop
nop
shll
push
pop
mov
pusha
jg
add
addr16
int3
mov
add
mull
add
sarb
mov
push
pop
xlat
std
sbb
and
bound
out
cmp
enter
sub
js
push
das
cmp
iret
and
cld
mov
jg
sbbl
out
adc
incl
insb
fimuls
sub
mov
push
mov
adc
sahf
add
out
dec
and
addb
mov
inc
ret
cltd
push
inc
movsb
jecxz
ja
jp
pop
sub
fildl
call
xchg
inc
add
jg
lcall
xor
ds
and
sbb
movd
andl
sbb
fists
dec
mov
cmpsb
rorl
pushf
push
jecxz
add
dec
and
cmp
out
add
out
mov
push
cmp
shlb
add
mov
sub
sbb
jmp
adc
mov
or
add
push
cmp
call
daa
push
loope
shlb
out
adc
ret
movsb
push
jmp
aad
xchg
mov
test
lock
lea
xchg
lret
inc
and
or
ret
mov
arpl
add
shll
mov
outsl
mov
insb
add
ret
pop
test
dec
enter
fisttpl
test
push
fbld
loop
test
shlb
and
add
and
pop
pop
cmpl
sbb
and
flds
pop
mov
jecxz
sbb
mov
arpl
addr16
icebp
jb
adc
xor
add
jo
mov
rcrb
sbb
inc
xchg
push
mov
pop
xor
nop
int3
add
jg
mov
add
or
clc
push
or
mov
ja
add
jecxz
jne
shr
push
sbb
arpl
fildl
pop
dec
inc
fsubs
xchg
insl
mov
sub
inc
push
int
aas
iret
je
add
sbb
stos
or
in
nop
adc
inc
xor
leave
add
xor
addr16
add
loopne
and
mov
jl
sbb
int
ret
cltd
test
outsl
pop
dec
push
test
nop
add
pop
out
or
nop
and
popa
push
fmulp
mov
fisubl
adc
pop
pop
add
push
or
pop
inc
lock
js
add
addr16
clc
popf
subl
sbb
mov
xor
push
inc
in
inc
arpl
in
add
xor
imul
jge
out
add
enter
cmpsl
xchg
jb
fnstsw
dec
xchg
sbb
dec
sub
push
add
mov
hlt
test
divl
add
push
rcrb
push
mov
pop
inc
testl
imul
sub
hlt
xor
push
inc
ret
xchg
test
mov
arpl
add
pop
adc
push
or
dec
dec
push
jecxz
jnp
or
mov
push
sbb
iret
cld
repz
sub
cmpsl
mov
add
data16
inc
addl
cmp
pop
xor
push
dec
aam
add
cmp
mov
fisubrs
cmpsl
test
mov
shlb
repz
lcall
inc
push
sbb
mov
arpl
pop
adc
rcrl
dec
pop
mov
inc
addr16
sbb
mov
pop
faddl
or
ljmp
pop
mov
inc
sti
mov
mov
nop
sbb
add
mov
xchg
add
add
insl
sbb
and
mov
push
cld
std
lret
add
mov
and
ret
or
cld
sub
mov
pop
test
mov
cmp
in
pop
and
add
sbb
nop
js
add
sbb
orl
add
inc
pusha
pop
enter
add
arpl
dec
sarb
add
nop
mov
push
dec
add
xchg
or
fcmovu
push
mov
outsl
push
dec
out
inc
cmp
std
mov
lcall
mov
jae
stos
cmc
mov
sub
xchg
jbe
xchg
inc
jns
mov
xchg
popf
adc
xorb
sarl
lods
or
repz
insl
dec
jg
push
dec
add
add
adc
icebp
fldl
lahf
cmp
daa
jo
mov
pop
scas
xor
pop
xchg
leave
inc
inc
inc
nop
xlat
mov
or
xor
in
mov
or
add
xor
and
mov
add
cmp
xchg
dec
stos
and
lahf
pop
pop
mov
push
roll
fnstenv
cmp
aad
faddp
cmp
sub
sar
add
addb
movsl
mov
sub
mov
fdivl
data16
pop
jo
ja
add
loopne
add
flds
aas
sbb
dec
mov
or
inc
xchg
arpl
add
jg
repnz
add
jl
cli
outsl
aas
lods
add
rcrb
add
movsl
repz
ss
add
jge
inc
or
jbe
add
jg
xchg
leave
jbe
jecxz
xchg
add
mov
sahf
cs
aad
add
das
xchg
xor
add
xchg
dec
pop
in
mov
test
xor
xchg
add
rcrl
mov
fcmovnb
scas
inc
cltd
cmp
int3
je
mov
add
arpl
cmp
pushf
popf
in
inc
mov
lea
cmp
xor
out
addl
add
pushf
jne
shll
cmpsl
cltd
mov
aam
and
mov
mov
adc
dec
pop
adc
popf
xlat
xor
dec
sti
add
mov
shr
shlb
adc
inc
ljmp
fiaddl
or
je
adc
jmp
or
sti
add
sub
add
sbbb
mov
and
int
add
pop
out
inc
xor
add
das
jae
sub
xchg
add
xchg
shrd
lods
pusha
je
lea
or
push
pusha
rcl
inc
mov
jne
add
loopne
inc
inc
pushf
mov
mov
add
add
shl
jnp
repz
iret
std
mov
add
arpl
jmp
fisubrl
sub
mov
mov
inc
add
ljmp
out
pop
mov
fsubrs
nop
popf
lret
aas
add
ljmp
repz
xor
dec
adc
cmpsb
add
lret
lods
and
iret
xchg
jo
stc
dec
push
and
xor
inc
mov
es
lock
add
loopne
push
add
jmp
push
jns
push
xorb
mov
inc
push
inc
inc
std
ret
xchg
add
jle
aas
add
jecxz
out
adc
cmp
aam
push
in
mov
icebp
jo
std
add
mov
xor
add
arpl
jg
pop
popf
cwtl
add
mov
xor
arpl
call
mov
mov
jecxz
jb
subb
ss
test
rcr
push
mov
sub
sub
loopne
clc
rolb
push
mov
mov
arpl
xor
std
add
inc
fildl
add
and
inc
lahf
in
cmp
loopne
add
xlat
xchg
enter
arpl
push
push
or
inc
and
das
shrb
jno
cmp
and
push
pop
sarb
mov
das
mov
and
sub
cmp
sbb
mov
adc
in
add
lret
sarb
sbb
add
fiadds
add
xchg
or
test
das
loopne
stc
hlt
aad
mov
shll
fdivl
pop
or
mov
or
arpl
cmp
mov
outsb
xchg
test
sarb
xchg
push
inc
mov
gs
fstpl
mov
mov
dec
dec
hlt
add
adc
lods
xchg
mov
cmp
and
ljmp
push
iret
pusha
add
lods
rclb
repz
add
into
xchg
add
insb
imul
mov
jo
inc
push
or
aam
addl
jecxz
mov
scas
popa
sbb
inc
mov
mov
dec
jmp
dec
xor
add
fsub
inc
dec
xlat
pusha
sub
mov
inc
cmp
and
cmp
insl
mov
jo
fmull
fmul
sub
pop
xchg
cmpb
lret
add
adc
data16
inc
inc
cltd
movsl
jge
test
cmp
xchg
mov
jle
repnz
add
std
pop
inc
adc
cli
pop
aad
push
or
shrb
movl
cltd
inc
jbe
mov
xor
dec
mov
cwtl
mov
out
xor
bound
shlb
add
lret
mov
inc
add
pop
testl
or
and
int3
mov
inc
add
jno
aaa
out
add
sbb
add
fsubl
add
jns
cwtl
add
fwait
movsl
cmpsl
xchg
icebp
outsl
add
jmp
or
and
add
or
cmp
add
sbb
and
out
dec
lret
lods
xchg
iret
fs
lods
add
dec
sbb
mov
cmp
mov
mov
xor
add
pusha
cmp
and
inc
rcrb
sub
adc
movsb
mov
test
pop
into
testl
inc
inc
xchg
call
mov
add
hlt
mov
add
pop
xchg
clc
or
roll
popf
pop
cld
mov
ret
jns
add
iret
cli
icebp
pop
cmc
mov
inc
rclb
aad
push
call
mov
es
scas
cmp
int3
rorb
sub
orl
add
outsb
push
out
adc
dec
add
mov
or
pop
les
jbe
or
sub
mov
daa
jno
xchg
ljmp
inc
xchg
or
and
pop
add
aam
js
or
dec
and
xor
mov
xorb
jl
mov
sub
fimuls
addb
popa
into
sub
inc
adc
clc
adc
xchg
insb
xchg
arpl
add
pop
sbb
inc
push
push
icebp
mov
dec
mov
test
cmp
call
out
sub
repnz
push
inc
sub
jge
xchg
xchg
xchg
je
xchg
pop
icebp
sbb
sbb
add
pop
xchg
cwtl
sub
jb
push
repnz
loopne
pop
stos
and
movsb
leave
ds
adcb
aas
cmp
sub
mov
add
arpl
add
enter
cli
scas
js
imulb
bswap
jle
mov
xlat
insl
push
fs
stc
repz
jg
mov
add
dec
shrb
jae
test
inc
push
les
stos
nop
ret
or
pop
xlat
vmwrite
pop
push
mov
and
ret
mov
mov
cwtl
push
and
pop
add
aam
outsb
jl
cld
push
adc
stos
ja
nop
vmread
inc
xchg
rorl
rorl
adc
add
mov
jl
inc
add
iret
popf
loop
add
mov
cmpsb
call
mov
stc
pop
inc
push
pop
lret
jno
pop
jo
shlb
or
lods
ret
xor
xor
fistpll
add
mov
add
fidivs
sbb
add
lahf
fsubr
add
pop
xchg
inc
sarl
dec
add
ror
data16
lock
cltd
pushl
jp
inc
punpcklbw
nop
push
add
insl
pop
stos
mov
hlt
fcoms
pop
sbb
imul
jp
add
loope
aaa
enter
cltd
push
cmpsl
push
mov
inc
mov
push
pop
int3
test
pop
pushf
cmp
xor
xor
inc
das
push
loope
adc
cvtdq2ps
add
or
mov
insl
xor
cmp
xchg
jo
scas
inc
rolb
cld
inc
in
mov
aad
fcoml
rolb
jecxz
push
and
jp
mov
or
xor
div
or
cmp
jp
test
leave
mov
pop
std
cmp
inc
lahf
popf
add
mov
dec
in
dec
dec
xor
push
dec
fildl
call
jns
mov
push
ljmp
mov
addl
int
push
xchg
mov
or
cwtl
inc
fnsave
or
jmp
loopne
xor
inc
cmp
add
or
insb
out
jecxz
scas
loopne
rolb
fstps
movsb
dec
mov
add
pop
pop
push
imul
mov
nop
inc
pop
scas
adc
aad
jo
xor
xchg
add
popf
lds
hlt
push
xor
sbb
push
cmp
add
adc
fndisi(8087
shlb
stos
add
pop
xor
add
imul
insb
arpl
sti
or
push
fldcw
jnp
mov
loop
aas
cli
xchg
aas
sbb
push
fabs
dec
mov
add
push
test
add
mov
idiv
arpl
dec
mov
rorb
and
adc
js
add
inc
add
inc
dec
ja
push
outsl
push
fidivrs
adc
pop
ret
sti
mov
fldcw
mul
add
lahf
xor
hlt
adcb
testl
push
mov
arpl
lahf
add
push
add
sbb
icebp
mov
add
mov
unpcklps
pop
js
inc
push
mov
xchg
push
adc
and
loop
or
mov
imul
repnz
ret
push
dec
stc
loop
add
mov
or
mov
das
and
inc
sbbb
or
push
pusha
jns
or
imul
cmc
aas
hlt
adcb
add
jge
sti
add
xchg
arpl
pushf
pop
sub
cmpsl
enter
and
insl
mov
xor
sarl
push
add
jo
lcall
repz
dec
fmull
je
popf
outsl
jbe
mov
add
mov
test
rol
pushf
xor
jg
inc
cmp
or
imul
test
mov
add
outsl
mov
jge
in
rcll
mov
pop
dec
xlat
imul
aad
sbb
sbbb
inc
xchg
pusha
mov
aaa
pop
cld
fwait
add
sub
hlt
jmp
push
loop
inc
mov
pusha
or
inc
lea
inc
add
scas
adc
shlb
mov
ja
inc
cmp
add
stos
roll
iret
mov
push
push
pop
jb
scas
sarl
addb
loop
cltd
imul
fwait
cmc
add
adc
flds
or
and
mov
and
aad
nop
cmp
loopne
inc
add
pop
sbb
repnz
add
inc
pusha
call
loopne
add
imulb
decl
rcrl
mov
xor
add
imul
mov
enter
add
arpl
inc
pop
insb
and
mov
rolb
enter
sub
mov
cmp
sub
sbb
push
call
pop
dec
add
in
mov
pop
pop
xor
add
inc
push
loope
test
popf
add
or
mov
pop
lods
mov
arpl
jns
lahf
mov
call
and
into
inc
test
pop
push
add
jo
push
xchg
insl
and
xor
cs
xor
cmovge
cltd
into
imul
sbb
movsb
jmp
xchg
push
cld
leave
adc
sub
cmpsl
push
maxps
push
sbb
shrl
ret
add
xchg
push
scas
fs
enter
push
mov
push
pop
cmp
ljmp
lcall
mov
aas
adc
xor
testb
sti
jmp
mov
mov
lock
sub
xlat
inc
add
jns
add
inc
pop
inc
call
or
add
or
hlt
aam
jno
add
divl
int
ret
inc
sbb
lods
cmovge
das
test
add
popa
or
loop
pop
mov
mov
ret
mov
pusha
shrl
cmpsb
sbb
adc
test
inc
sub
divl
orb
fistpl
add
lock
add
inc
movsl
dec
or
add
cmp
aaa
sbb
nopl
adcl
shlb
std
push
sub
xchg
inc
in
push
incl
xchg
inc
ficoml
popa
testb
cli
das
arpl
inc
add
clc
out
push
add
stos
mov
out
inc
scas
add
pop
lret
ja
or
cltd
cmp
mov
movsl
rcll
add
inc
aas
je
or
mov
cs
call
fdivrs
push
dec
cmp
fldl
pop
add
rcrb
xchg
jg
enter
add
jnp
sarb
add
test
rcll
inc
je
mov
adc
and
sub
call
rolb
mov
cld
mov
adc
mov
add
and
xchg
das
jg
lods
add
pop
inc
filds
pop
inc
adc
fwait
cmp
or
cwtl
aas
pusha
adc
sbb
in
xor
xor
subb
adc
jle
arpl
loopne
xchg
xlat
add
xchg
inc
xchg
out
push
mov
sub
shlb
xchg
add
stos
sar
lock
jle
data16
add
lods
aam
add
add
imul
jne
add
xor
sbb
add
ret
sub
xchg
push
cwtl
mov
insl
dec
push
aaa
add
cmp
rcll
inc
cmp
xchg
fistl
xchg
inc
sbb
push
add
pop
leave
cmc
cmp
rcr
cltd
sub
sbb
out
andl
and
dec
and
shl
lods
fdivrs
inc
add
and
push
dec
gs
push
add
subl
add
insl
pop
faddl
cmpsl
pop
dec
dec
out
outsb
loopne
in
int3
xor
jno
mov
mov
xchg
sahf
add
popa
push
xor
mov
inc
and
or
lock
lods
mov
jns
and
faddl
insb
add
jbe
inc
ja
stos
pusha
add
ret
jns
mov
iret
push
push
inc
jno
repz
cmpsb
sbbl
mov
js
fadd
ds
sbb
dec
leave
inc
mov
inc
push
sbb
rcrl
arpl
ljmp
popf
nop
and
lock
pop
call
jecxz
add
in
rclb
push
lcall
imul
testb
push
cmp
sbb
pop
add
faddl
jb
inc
cltd
add
inc
lds
or
sarl
icebp
subb
xchg
ds
mov
shrb
inc
loop
inc
mov
jae
inc
or
push
mov
lret
cmp
test
cmp
mov
pop
stos
cwtl
incl
jnp
shl
jp
jecxz
and
outsl
adc
dec
cmp
jmp
aam
inc
add
nop
jbe
mov
dec
add
sub
ret
shrb
cwtl
mov
daa
jae
add
add
rcrb
jmp
ret
imul
jns
add
je
cmp
add
hlt
lret
out
adc
xchg
mov
in
shlb
subps
pop
inc
mov
cli
seto
loope
arpl
rcr
and
bound
stc
add
cwtl
adc
xor
xchg
shrl
cs
add
lds
sub
lahf
lods
add
or
flds
jle
cmp
js
scas
add
sub
pushf
lsl
std
hlt
add
jnp
inc
dec
jae
repnz
xor
cmp
or
mov
lods
sbb
ret
fwait
add
sub
xchg
add
sbb
push
shrl
push
dec
cmpsl
sub
rolb
mov
xchg
pusha
add
rolb
in
jecxz
je
test
adc
cltd
fstpt
mov
pop
sbb
dec
arpl
jo
adc
inc
pop
roll
mov
test
mov
rorb
jmp
incl
push
add
in
das
cmpsb
add
insb
adc
push
push
shlb
pop
test
cmpsl
sti
stos
and
lock
sbb
out
movb
xor
mov
inc
call
inc
add
cmpsb
xor
add
pusha
jg
inc
mov
shl
jmp
xchg
push
pop
pop
daa
test
mov
mov
in
sbb
arpl
int3
push
enter
inc
arpl
aas
cwtl
sub
mov
mov
add
xchg
rorl
adc
inc
test
mov
test
shlb
lahf
push
hlt
ror
mov
pop
sbb
adc
andb
sbb
std
xchg
bound
add
fiaddl
add
adc
inc
lock
mov
cmp
int
or
aad
cmp
inc
xchg
inc
testl
jo
mov
adc
mov
test
pop
fiaddl
push
inc
add
adc
pushf
pop
in
mov
mov
inc
or
mov
js
lds
sbb
imul
mov
inc
or
mov
mov
and
andb
push
mov
movb
in
adc
sbb
inc
imul
push
xchg
inc
mov
pop
idivl
mov
jns
pop
mov
adc
xor
cli
cmp
shl
cmp
add
enter
jl
pop
inc
cmp
dec
xor
push
xchg
stos
sbb
xchg
idivb
sbb
mov
cmp
clc
pop
and
mov
jg
fcoms
push
inc
mov
test
bound
push
subl
pop
pushf
add
fnstcw
cmp
arpl
dec
nop
pushw
sub
and
addr16
push
cltd
mov
roll
and
push
add
inc
int3
push
out
push
mov
fs
jmp
cmp
ror
fadds
jecxz
sub
add
idivb
inc
adc
mov
add
and
fisttpll
add
add
lods
scas
shll
add
xor
div
fs
xchg
jbe
add
stos
xchg
inc
mov
adc
sub
pop
enter
imul
inc
mov
in
and
inc
and
sahf
pop
push
or
jmp
rcr
je
aam
pusha
jge
lret
lods
out
xor
cld
and
push
fadds
add
pop
lret
mov
int3
xchg
gs
add
xchg
inc
je
pop
jnp
cmp
push
add
sbb
loop
xor
jbe
inc
cmp
fs
dec
dec
int3
inc
add
xlat
push
add
movsl
pop
inc
add
push
sbb
jge
rcrb
cs
test
pop
pop
adc
shl
in
nop
inc
cltd
leave
push
add
push
jno
rclb
sub
jmp
faddl
xorb
mov
orl
mov
adc
fcoms
inc
add
mov
popf
add
or
or
out
lret
push
sub
inc
enter
add
inc
xor
hlt
add
pop
pop
mov
nop
cvttps2pi
mov
popa
in
mov
add
sbb
lock
pop
or
mov
adcl
dec
mov
cli
add
or
mov
add
and
pop
inc
push
add
inc
fldl
add
out
cmp
sarb
fwait
add
mov
mov
not
add
sbb
outsb
inc
dec
in
data16
pop
add
pusha
cmp
sahf
add
adc
mov
addb
pop
ret
and
mov
inc
sbb
pop
xchg
lock
mov
je
imul
in
inc
cmp
cmpsb
hlt
testb
pop
sbb
push
sub
addr16
sarb
notb
push
sub
ds
stos
inc
mov
adc
cmp
xorl
add
inc
inc
sub
lea
push
hlt
aaa
xor
push
add
xor
call
sub
xor
and
jl
pop
and
sbb
arpl
faddl
mov
add
sahf
pop
sub
fs
dec
dec
mov
mov
push
add
and
rclb
sahf
ret
cmp
xor
add
or
loope
rol
lds
push
push
mov
add
aas
pop
pop
jmp
pop
filds
and
pop
shll
in
outsl
shrb
enter
addb
movsl
stos
jecxz
sub
jmp
loope
xor
or
fwait
out
sub
pop
ret
push
ja
jnp
push
push
imul
enter
ror
add
mov
test
shlb
pop
ja
out
dec
mov
int
add
xchg
push
icebp
and
add
push
js
test
jg
fbstp
jecxz
adc
cld
jmp
mov
mov
xor
dec
add
jno
sahf
or
xchg
mov
mov
push
add
xchg
out
mov
jbe
or
mov
push
rcr
jl
dec
test
pop
mov
xor
mov
cmp
xor
pop
mov
cmp
arpl
and
adc
add
xor
mov
es
in
add
aas
fs
jmp
sbb
repnz
pop
movsb
add
lahf
xor
lret
cmpsb
popf
sbb
pop
jge
add
mov
add
nopl
add
sbb
xchg
dec
add
fwait
rcll
add
pop
add
mov
cmpsb
push
inc
movl
jg
dec
in
adc
adc
add
add
xchg
add
ret
dec
add
loopne
cmp
mov
or
inc
add
neg
jbe
lods
dec
add
dec
int
mov
add
add
ja
add
cmp
dec
pop
out
outsb
mulb
mov
fcomi
add
pop
xor
add
lret
or
or
movb
fisubrs
xor
stos
arpl
pop
loope
jnp
cmp
push
mov
adc
sub
pop
push
add
and
add
mov
add
xor
hlt
rolb
inc
pop
jle
xchg
add
out
sub
enter
push
adc
stos
lcall
sbbb
test
add
sub
mov
imul
dec
add
into
loopne
jbe
add
hlt
movsl
mov
xchg
scas
add
cmp
xchg
xchg
mov
mov
xor
add
inc
jbe
add
push
test
repz
cmp
inc
cli
add
das
jmp
sbb
popf
inc
pop
hlt
aam
test
add
add
mov
popf
push
test
sbb
lret
dec
sub
inc
adc
pop
outsb
pop
inc
mov
sub
or
ficoms
inc
push
in
clc
add
add
dec
div
push
and
xor
cmp
jns
adc
jge
sub
add
sbb
xchg
out
sahf
pop
call
fidivl
inc
mov
mov
add
scas
pop
fisubs
sbb
mov
add
sti
rol
mov
fcompl
nop
add
jle
mov
pop
jle
inc
ljmp
xor
dec
addl
push
cmpsl
ret
pop
push
fildl
arpl
push
fld
pop
rclb
testl
pop
pushl
mov
addl
fldl
mov
mov
pop
or
sbb
ds
addr16
add
fsubs
pop
add
fwait
cli
jmp
xor
push
pop
shl
addb
test
push
cmpsb
add
or
arpl
or
addb
jno
cs
insl
add
inc
rolb
or
add
pop
jmp
loopne
cmpsb
pop
add
jo
dec
bound
call
fucomi
stos
mov
pop
addb
add
orl
stos
pop
shlb
in
or
add
rol
dec
ror
inc
add
or
mov
ret
adc
fldt
out
mov
lcall
or
ds
jae
repnz
inc
inc
int
cld
lret
mov
test
xor
dec
sub
mov
mov
inc
push
add
pop
dec
sarl
popa
pusha
pop
pop
and
dec
icebp
mov
mov
jne
mov
movsb
xor
or
pop
jno
pushf
popa
ss
cmpsl
adc
ror
add
lock
and
insl
mov
dec
clc
sbb
jne
out
loop
add
cmp
inc
and
stos
shrb
jns
ffreep
insl
scas
cmp
inc
cmpsb
mov
cmp
pusha
add
ja
stc
sub
rorl
mov
in
xchg
daa
movsl
test
xor
mov
cmc
in
sub
insb
dec
and
inc
cmpb
pop
add
xor
in
imul
jle
pop
xchg
sbb
xchg
add
sti
pop
xchg
mov
jmp
push
sbbb
incl
sbb
ret
mov
add
adc
subl
pop
hlt
mov
ss
fbld
pop
or
sub
add
shlb
mov
mov
mov
jne
dec
xor
or
sbb
out
outsl
push
rorb
inc
add
stos
mov
aas
int3
leave
add
jns
sbb
popa
cmp
push
adcb
gs
aas
insb
jecxz
push
repnz
cwtl
adc
add
ds
dec
lcall
cmp
fiadds
add
out
fnstsw
sbb
stos
cld
pop
push
jl
arpl
add
mov
rolb
cld
jecxz
jae
and
pop
stos
bound
pop
cli
shlb
dec
push
add
into
call
add
sbb
pop
cmpsl
data16
test
sub
add
add
mov
mov
inc
enter
add
mov
push
and
dec
call
insl
dec
filds
inc
lock
add
aad
pop
sub
in
test
pop
dec
add
adc
rclb
mov
inc
shl
xchg
cmpsl
addl
adc
inc
lret
or
add
lret
cli
inc
rorb
loope
scas
loopne
xor
rolb
ja
adc
or
setbe
mov
daa
and
push
push
call
test
lcall
push
dec
push
fisubs
inc
andl
shll
push
inc
xchg
xchg
push
inc
add
popa
lret
pushf
dec
fcmovnu
xor
test
push
pop
inc
dec
mov
xor
add
cwtl
add
jo
pop
push
sub
sbb
mov
add
nop
out
imul
pop
mov
dec
dec
lahf
mov
out
ds
aaa
inc
lods
add
imul
inc
ja
dec
xorl
pop
dec
out
punpcklbw
xor
jge
or
push
xor
jbe
jb
jle
push
out
push
sub
inc
pop
outsl
mov
repnz
inc
aad
push
sbb
jnp
push
push
sarb
dec
cmc
mov
xor
imul
adc
mov
rclb
inc
mov
movsl
add
lret
in
movl
rcrl
cmp
movsb
xchg
mov
xorb
pop
xchg
jns
out
scas
push
nop
add
adc
bound
lret
and
xchg
mov
icebp
rolb
jge
inc
mov
inc
out
aas
push
mov
loopne
add
loop
mov
add
ja
mov
out
aas
jmp
and
clc
insl
cmpxchg
xor
add
mov
add
inc
ret
iret
lock
mov
xchg
clc
in
add
add
sbb
sarb
and
rorb
mov
xchg
xchg
je
arpl
movsl
add
addr16
adc
mov
or
mov
jne
rorb
adc
sbb
jo
pop
cmp
push
xorb
rcll
pop
sbbb
andnps
enter
repz
nop
cmc
jne
test
sbb
outsl
sbb
insb
cmp
push
subb
or
add
and
inc
push
cld
mov
lret
sub
add
or
shrb
jle
cwtl
pop
add
dec
jne
mov
dec
add
rcr
cmp
cmp
stc
test
jae
push
ds
jmp
xor
add
cli
insb
xchg
fsubs
out
add
inc
cmp
pusha
sub
es
mov
add
pop
mov
push
dec
ljmp
sbbb
mov
jmp
add
cld
mov
add
pushf
dec
mov
data16
xchg
popa
arpl
add
inc
aam
int
je
pop
clc
ret
iret
add
sub
cmp
xchg
les
add
iret
push
sub
lcall
xor
mov
fs
jmp
add
xor
mov
mov
imul
je
cld
addr16
add
repnz
xchg
add
jle
sbb
sub
pop
je
fwait
add
inc
shl
scas
push
add
jns
addl
daa
das
out
mov
inc
add
add
lods
call
pop
add
xchg
rclb
add
stos
mov
rolb
pop
fldenv
xchg
pop
push
xchg
or
ds
cmc
adc
add
dec
fcompl
add
mov
shll
push
or
loop
xchg
add
pop
stos
pop
and
imul
adc
test
jb
scas
adc
notb
in
inc
adc
or
mov
cld
rol
sbb
shlb
scas
cmp
add
stc
addl
js
add
jo
jecxz
mov
lcall
add
pop
pop
mov
loopne
add
aam
icebp
movsb
clc
cmp
ret
push
fsubr
add
rcrl
jg
add
icebp
jmp
inc
or
inc
cmpb
fcmove
aas
inc
arpl
cmp
add
sarb
andb
inc
mov
push
into
xor
add
jmp
jne
and
sbb
sbbl
cmpsb
mov
repz
add
mov
fiadds
loop
pop
je
xchg
decl
dec
add
inc
in
add
adc
add
dec
push
mov
bound
hlt
and
outsl
daa
dec
and
push
jle
push
rcrb
mov
ret
repz
in
ret
incb
jo
pop
pop
jno
aam
lods
mov
mov
and
xchg
xor
repnz
adc
cmpsb
test
and
je
adc
add
nop
popa
cs
sbb
pop
add
shrl
test
js
inc
mulb
pushf
and
in
dec
inc
cmp
into
adc
daa
shlb
dec
mov
lcall
sarl
add
and
add
in
movsb
sbb
enter
inc
jns
adc
scas
fs
mov
ja
jbe
cmp
test
add
jae
aas
js
sub
adc
mov
add
sbb
xchg
andl
dec
push
push
xor
scas
dec
jno
loope
inc
dec
jne
icebp
jmp
mov
adcb
mov
imul
add
mov
mov
adc
stc
imul
ret
paddq
xorb
or
cmc
pop
ljmp
xchg
jecxz
jp
add
je
pop
cmp
sbb
mov
xor
shr
pop
or
repz
push
arpl
test
push
ret
mov
filds
mov
aas
inc
scas
pop
fimuls
jmp
push
test
mov
cs
jmp
in
loopne
jnp
aad
mov
push
je
fldl
sub
setnp
sti
cltd
pusha
sbb
inc
cwtl
lods
es
sub
add
xchg
add
dec
pop
bnd
loopne
and
decl
pop
scas
inc
add
inc
outsl
add
in
das
pop
repz
adc
push
mov
inc
sbb
push
into
fadd
wrmsr
add
mov
lods
mov
pop
jo
add
jno
movsb
push
mov
or
dec
ss
fmul
cwtl
xchg
pop
pop
or
dec
or
jno
mov
xor
adc
xchg
push
add
xchg
fdivs
mul
add
push
xchg
add
enter
pop
in
pop
jns
and
loopne
hlt
nop
repz
addl
sarb
in
add
lret
cli
xchg
add
out
into
ret
repnz
fst
pop
pusha
inc
cwtl
jbe
jno
pushl
cmp
mov
and
add
pop
out
cmp
cli
addb
cmp
cltd
add
dec
pop
add
sub
inc
add
hlt
rclb
sbb
test
mov
mov
popf
pop
dec
loopne
sbb
addl
push
nop
inc
movsl
bound
inc
add
aas
cltd
test
dec
sbb
dec
add
jmp
shll
sub
pop
xchg
inc
pop
movsl
nop
test
push
or
loope
mov
adc
xchg
cltd
lret
les
loop
cmpb
add
js
sarb
add
lahf
push
mov
js
add
insb
mov
or
add
popf
std
dec
sbb
and
stc
sarb
clc
pop
jmp
xchg
mov
lods
add
into
adc
add
add
mov
add
add
jle
loop
test
add
pop
movsb
roll
push
dec
pop
icebp
enter
mov
mov
pop
in
xchg
incb
xchg
push
add
mov
fldenv
scas
lcall
xchg
fiaddl
mov
dec
jne
sti
push
shlb
imul
adc
je
add
or
addb
pushf
cmp
pop
jecxz
lret
add
lods
dec
add
add
pop
divb
and
int
jl
lods
sub
xor
and
adc
sub
cmp
popf
stc
fisttpll
add
mov
aad
or
nop
rcll
sbb
add
and
mov
stc
rorb
fisubl
pop
xlat
add
fs
call
inc
mov
and
rcl
ficoml
out
aad
stc
push
popa
loopne
cmpsb
cmp
rcll
nop
andb
jmp
mov
incl
daa
pop
add
or
out
and
pop
mov
imul
std
add
mov
add
and
adc
add
ret
pop
cmc
cli
cmp
push
cmpb
clc
pushl
inc
pop
rorl
xlat
insb
rclb
popa
movb
pushf
call
fwait
add
push
xchg
jg
addl
in
in
ss
icebp
in
rcr
je
jl
cwtl
je
add
mov
ret
aam
movsb
fadds
fdivl
cmpsb
pop
rcl
push
add
insb
cmp
bound
add
mov
iret
add
int3
popa
repnz
add
cli
sub
jge
lret
cmc
add
jle
cwtl
xor
adc
jns
add
fisubrl
dec
add
and
jns
add
jae
call
inc
mov
jbe
popf
pop
add
dec
jne
dec
roll
mov
add
pop
scas
mov
shlb
dec
inc
in
nop
mov
fcompl
lods
jp
xor
add
push
pop
dec
add
lds
loop
subb
mov
add
mov
cmpsl
push
inc
loope
add
and
push
shlb
inc
sub
inc
add
sub
inc
lret
jno
jo
add
xchg
std
sbb
int
push
inc
sbbl
sub
mov
pop
cltd
lea
mov
rol
add
mov
int
fadds
dec
push
fnsetpm(287
clc
lret
cmp
push
dec
rolb
popf
aas
fnstsw
xor
scas
pop
in
inc
add
inc
loope
add
int
je
shrb
dec
ret
sbb
dec
pushf
and
add
clc
arpl
mov
and
xchg
mov
lds
aad
or
data16
stc
push
ret
inc
and
mulb
pop
mov
add
out
mov
adc
cmp
and
std
out
rolb
mov
mov
cmp
xlat
test
fdivs
add
or
std
adc
mov
bound
push
jmp
sbb
xor
scas
mov
pop
stc
lcall
cmp
addl
stos
mov
imul
imul
clc
sub
lods
fs
and
add
push
push
inc
mov
arpl
int
out
add
mov
call
add
inc
sub
mov
add
mov
xlat
push
out
xchg
out
nop
mov
xchg
add
gs
fiaddl
ja
add
mov
pusha
sbbl
inc
mov
in
mov
fwait
add
leave
jne
jo
inc
fldl
jg
add
fmulp
arpl
mov
jbe
sub
enter
mov
add
ret
mov
inc
arpl
cmpsl
mov
add
push
and
fiaddl
mov
rorb
add
bound
scas
outsl
adcl
xor
sahf
mov
rclb
xor
adc
jp
inc
inc
pop
push
inc
jnp
add
and
push
orl
incl
inc
sbb
or
movnti
mov
fcomp
jns
fsubl
clc
xor
rorb
mov
fldl
mov
mov
mov
push
mov
jne
add
mov
hlt
push
add
sahf
fidivrs
mov
adc
add
mov
jge
xor
fidivl
pusha
jg
adc
push
sbb
mov
or
dec
mov
dec
pop
jecxz
scas
mov
push
or
cmp
or
inc
jo
daa
aaa
adc
cld
ret
add
out
fmuls
mov
call
pop
insb
xchg
inc
cmp
icebp
adc
cli
jge
rcll
fcomps
xchg
and
mov
mov
mov
add
mov
inc
movb
xor
orl
sbb
in
mov
call
loop
js
jno
es
dec
fwait
loopne
pop
clc
lods
add
mov
orl
in
shl
xlat
adc
add
jb
dec
mulb
ds
add
dec
adc
cli
loope
add
sbb
sbb
rolb
push
add
dec
sub
sbb
bound
pop
scas
jp
push
dec
pop
fwait
cmp
inc
mov
and
xor
lret
add
ret
xchg
sbb
add
insb
shll
jo
sbb
inc
cmp
dec
jmp
and
enter
add
inc
jae
xchg
leave
sub
add
cmp
cmp
int
bound
jne
in
mov
popf
jno
test
sarb
lea
insb
outsb
cmp
inc
add
jne
popf
cltd
inc
add
lock
xor
push
lret
popa
bound
test
fcmovnu
add
or
jmp
aaa
xlat
xchg
xor
add
push
cmp
or
movaps
inc
fildl
jl
mov
add
fsubs
loope
adc
cli
out
mov
int
ja
lea
jns
je
add
mov
inc
push
and
add
sub
lods
roll
loopne
dec
mov
add
add
imull
add
test
add
or
inc
add
ja
stos
shl
dec
pop
or
lahf
cli
adc
sbb
scas
mov
fcmovnbe
and
imul
arpl
repz
mov
cmp
jge
dec
jae
mov
lods
mov
lret
aad
adc
lcall
inc
push
outsb
xchg
dec
ja
add
lret
frstor
add
sbb
jo
push
pop
iret
cmp
cwtl
fwait
add
aam
jl
cmp
fiadds
pop
or
inc
cwtl
add
inc
cmpl
add
daa
stos
insb
jp
ficomps
mov
cmp
or
inc
ds
test
or
push
mov
into
jle
pusha
push
add
jns
rcr
mov
xor
les
ljmp
and
xchg
flds
xchg
nop
lods
inc
rcll
dec
std
xor
add
hlt
sub
xchg
pop
mov
cli
push
mov
inc
lods
add
fstpl
scas
mov
aad
daa
add
into
mov
out
add
jmp
or
jl
aaa
mov
cs
jne
divl
xchg
test
movsb
sbb
stc
int
js
add
aad
push
dec
jg
jne
jecxz
add
mov
mov
add
cmpsl
bound
stos
add
lea
hlt
mov
mov
xchg
cltd
orb
add
call
add
bound
add
xor
push
push
jg
jne
push
clc
inc
add
repnz
inc
xlat
add
xchg
rolb
aam
loop
dec
pop
xchg
js
push
jp,pn
add
stc
and
add
ret
popa
jl
int
lret
pop
mov
push
ficoml
call
add
sbb
push
sbb
adc
scas
and
icebp
inc
mov
add
shl
ds
ror
add
aaa
arpl
clc
sbb
out
insb
dec
inc
jge
cmpsl
add
xchg
in
enter
rcl
loopne
out
pop
fs
lret
mov
je
add
ret
inc
lods
popf
push
ds
ror
daa
lret
clc
cltd
pop
hlt
xchg
ss
push
jo
outsb
pop
rolb
mov
jmp
add
mov
dec
lret
ljmp
ret
xchg
mov
mov
push
rcll
aam
push
aas
sahf
and
mov
cmp
pop
hlt
cmp
rolb
push
clc
cwtl
mov
dec
and
and
add
shrb
add
shrl
xor
dec
movsl
ja
pop
jnp
inc
mov
call
add
ret
jns
clc
xchg
pusha
mov
mov
xlat
add
aaa
xchg
pop
sub
add
sbb
adc
je
das
lea
arpl
rep
jne,pn
add
inc
xchg
and
mov
add
jg
gs
add
aam
cmp
stc
add
or
add
add
dec
scas
sbb
or
push
in
xorl
sub
rolb
xchg
jmp
imul
cs
arpl
adc
adc
rolb
les
mov
xchg
orl
cmp
cmpsb
subb
hlt
cmp
add
xchg
arpl
out
jbe
daa
fnstcw
mov
xlat
addr16
push
pop
xchg
vmread
inc
xor
orl
add
mov
es
add
fs
mov
movsl
in
outsb
mov
mov
inc
repnz
ljmp
push
insl
or
dec
cli
add
out
es
inc
pop
jge
push
ret
push
lods
inc
loop
jp
bts
mov
mov
les
mov
add
arpl
xchg
dec
pop
cmpsl
push
lods
push
inc
push
pushf
popa
test
jae
aad
adcl
add
in
clc
nop
rcrl
adc
mov
xchg
insb
inc
fld
repz
cwtl
les
in
add
imul
lods
sub
cli
std
pop
or
add
push
hlt
outsl
cmp
mov
nop
out
inc
add
pushf
stos
jl
lcall
popf
fidivrl
inc
popf
lods
into
pop
xchg
xchg
sbb
rolb
pop
inc
nop
add
jmp
add
aad
dec
add
loop
and
or
add
iret
out
test
sbb
loope
adc
pop
icebp
mov
inc
aam
andl
adc
addr16
pop
ja
icebp
call
bound
loope
pop
lahf
add
inc
mov
movsb
add
enter
insl
mov
popa
loop
lds
adc
test
xor
arpl
enter
cmpw
xchg
aaa
imul
loop
frstor
loope
sub
add
pushf
dec
add
or
fldl
test
xor
bound
inc
mov
ja
dec
dec
add
jae
fcoms
cld
ss
fidivs
dec
cmc
test
ret
xor
xchg
mov
adc
es
loope
popa
jne
nop
xor
add
lret
arpl
fsubl
insb
cmc
xor
test
pop
or
cmp
fs
mov
arpl
icebp
cmpsl
icebp
xor
sbb
xchg
mov
sbb
xor
and
push
pop
lds
jecxz
jno
xchg
add
push
ret
add
subb
out
call
repnz
add
roll
addl
idivb
imul
lret
add
mov
jbe
cmp
mov
pop
add
or
jmp
icebp
ret
jns
fistpl
add
mov
add
pusha
fsubrl
push
inc
test
mov
sarl
sbb
mov
or
mov
pusha
and
fcomps
cs
insl
add
fld
imul
in
icebp
rclb
paddsb
shll
lret
and
pop
add
fisubrs
addl
and
xor
add
shr
or
aam
inc
or
fimull
cmp
movsl
jns
adc
shl
lea
fisttpl
mov
add
fiadds
pop
jp
mov
out
xor
adcb
mov
push
ljmp
lods
les
daa
push
dec
sbb
sub
cli
in
roll
fdivrs
sub
in
repnz
sub
nop
and
adc
mov
shrl
dec
adc
add
rorb
iret
lock
mov
ds
imul
ffreep
pop
pusha
divb
fxch
sub
lock
dec
add
inc
pop
int3
fcompl
ret
jmp
mov
sahf
adc
inc
adc
test
sub
sub
adc
in
jge
pop
inc
pop
das
fsts
sub
roll
and
subb
add
pop
iret
ret
add
pusha
push
fistl
dec
shrl
mov
push
sub
clc
not
adc
das
push
add
push
xor
dec
data16
mov
pop
add
inc
jne
loopne
add
or
js
add
arpl
aam
mov
add
push
inc
call
add
push
leave
cmpsl
ds
shl
add
xchg
mov
mov
leave
mov
xchg
mov
jb
xlat
idivl
loope
add
ret
popf
add
ljmp
jnp
test
or
fwait
jb
xchg
fstpl
add
push
jo
addr16
std
xorl
loopne
repz
inc
fwait
inc
jno
shrl
cli
cmp
pop
roll
mov
xchg
add
push
pop
lea
push
pop
add
imul
scas
popa
shlb
or
dec
jle
inc
xchg
sti
pusha
lret
je
orb
cld
push
pop
jns
add
sbb
mov
ret
faddl
into
add
in
lea
loope
inc
cmp
add
roll
ret
sub
fisttps
outsb
add
push
ret
xchg
push
pop
mov
ljmp
jns
int3
inc
dec
js
test
jecxz
and
sti
dec
lret
push
repz
call
cmp
mov
jno
add
in
insb
fiaddl
enter
adc
shlb
xor
mov
or
cmp
rolb
ret
add
das
fiaddl
sbb
inc
mov
add
adcb
add
jecxz
mov
pop
lock
rorl
pop
addl
sub
lret
enter
inc
out
jbe
pop
pushf
jnp
add
mov
pop
iret
add
sbb
adc
loopne
dec
push
shlb
add
shl
rcrl
add
out
sub
rcl
sub
add
rcrl
and
add
arpl
out
adcb
rolb
dec
xchg
sarl
and
push
add
sbb
sub
gs
add
icebp
inc
lcall
call
out
cli
orb
rcrl
add
and
jmp
arpl
cmp
inc
mov
or
pop
arpl
sarl
ljmp
cmc
or
add
xchg
lretw
mov
sbb
ja
xchg
call
lods
nop
js
fwait
ret
add
or
inc
add
xor
push
subb
shr
pusha
shl
aam
inc
scas
xchg
mov
sbb
xchg
add
popa
jp
xchg
cmp
fmulp
add
sub
jnp
pop
pusha
stos
cmp
test
add
ret
rcrb
aam
sub
sbb
or
xchg
inc
jge
xchg
out
add
imul
add
or
and
loope
int3
add
test
mov
test
dec
add
add
jge
out
inc
mov
dec
sbb
cld
xchg
add
push
or
iret
pop
out
add
lahf
sbb
mov
mov
jno
sbb
inc
xor
add
xor
adc
add
arpl
dec
add
pusha
jnp
sub
mov
jecxz
push
cli
xor
mov
icebp
pop
xor
add
xchg
xor
inc
cmp
fimuls
adc
mov
or
ror
xor
xchg
pop
rcrb
ret
xchg
xchg
jle
mov
or
arpl
gs
int3
mov
dec
stos
jl
and
cli
or
lods
mov
add
repz
add
shll
shlb
add
jne
push
push
ret
push
mov
lock
fistps
sbb
add
add
or
push
jbe
dec
mov
dec
mov
pop
add
imul
cwtl
lea
hlt
xor
mov
inc
cltd
inc
dec
rclb
in
add
and
aas
or
inc
xchg
cli
adc
inc
leave
fistpll
add
mov
popf
in
mov
add
movsl
shlb
addr16
mov
adc
movsl
lock
sub
inc
adc
fucom
pop
sti
into
and
shrl
iret
mov
rolb
in
nop
add
cli
jae
add
and
call
add
dec
shl
les
andb
lret
push
xchg
jno
or
add
sbb
add
add
and
add
pop
loop
mov
sahf
jl
adc
pop
aam
sub
lock
pop
sahf
mov
aas
add
jge
mov
inc
and
add
inc
jb
add
adc
pop
xor
ja
pop
fists
insl
in
push
mov
add
or
rcr
add
imul
mov
arpl
cmpb
rcr
js
loope
lods
adc
mov
cmc
mov
pop
and
or
rcr
pop
xchg
pop
push
pop
ds
cmp
or
inc
sub
repz
pop
jno
popf
rcr
mov
mov
sub
fisttpll
add
sub
inc
add
addr16
mov
in
add
lcall
sahf
scas
mov
and
sbb
cmp
sti
dec
push
movl
arpl
fwait
outsl
add
out
inc
inc
jp
aaa
scas
add
rolb
add
or
mov
out
cmp
fiaddl
stos
xor
inc
outsb
and
sub
dec
jnp
sub
ret
or
xchg
cmpsl
xchg
mov
movsl
xchg
insl
cmp
pop
mov
cs
jne
ret
mov
dec
out
pop
aaa
pop
push
addr16
fisttpl
push
outsb
in
pusha
push
pop
sarl
ss
adc
inc
call
adc
mov
dec
add
cmp
dec
inc
or
mov
dec
xchg
sub
testl
pop
fisttpll
pop
test
add
arpl
xor
jle
inc
pop
cmp
or
movsb
loope
fidivl
aas
mov
inc
and
mov
arpl
add
inc
enter
aas
or
je
add
int
lods
test
push
mul
xorb
jns
add
and
repnz
and
xor
outsl
cmp
adc
mov
add
xchg
pop
mov
nop
push
fucomi
int
mul
shlb
dec
pop
add
sub
dec
popf
jbe
mov
add
filds
sar
pop
roll
in
push
leave
iret
cmp
fmul
cmp
arpl
pop
jecxz
repnz
in
outsl
subb
lock
jp
inc
pop
pop
cs
fs
andb
sbb
popa
fninit
sti
rol
adc
dec
movsb
dec
cld
add
bndstx
mov
add
add
enter
testb
pop
jecxz
jns
ljmp
les
dec
frstor
orl
add
insl
movsb
insb
add
sbb
sahf
inc
ss
mov
jbe
mov
std
push
rorb
add
test
fsts
mov
add
pusha
addl
xchg
ss
cmpsb
loopne
and
dec
adc
push
dec
sub
in
add
or
add
andb
sub
adc
push
cs
jg
inc
add
and
sti
js
pop
sub
pop
shlb
pop
jns
data16
add
push
jl
add
dec
test
mov
jnp
cmp
cmc
add
or
add
gs
or
inc
int3
sbb
add
mov
inc
and
cmp
in
xorb
jg
in
add
inc
aas
dec
jne
mov
jp
nop
push
jnp
roll
xor
addl
add
sub
xchg
add
clc
push
inc
pop
cli
dec
add
sbb
push
out
push
icebp
inc
jle
push
out
xor
mov
fstpl
repnz
dec
jno
mov
into
sti
fsubrl
add
cmp
scas
cmp
ret
xchg
rorb
mov
mov
mov
hlt
jmp
pop
stos
inc
add
cmc
insb
push
ftst
xchg
add
test
add
pop
push
add
call
add
mov
arpl
and
xchg
popf
call
out
gs
cmc
add
loop
jp
mov
scas
arpl
inc
mov
push
push
or
addl
imul
add
pusha
bound
popf
js
sar
icebp
push
or
mov
imul
or
push
div
adc
adc
sbbb
pusha
pop
mov
pop
stos
jo
cmpsb
add
cwtl
inc
dec
cmp
outsl
addb
sub
stos
mov
cmp
test
sbb
jl
cmp
mov
push
pop
mov
xor
mov
lret
lds
or
cmp
sbbb
mov
stc
pop
inc
arpl
nop
pop
cmpsb
push
inc
add
or
xchg
add
mov
xor
jge
pushf
push
and
lret
sti
inc
dec
inc
add
rolb
ret
scas
test
bound
xchg
push
xchg
cmp
sarb
sbb
ss
out
add
mov
rolb
call
arpl
jmp
orb
and
std
mov
scas
inc
push
lods
lock
xchg
add
cmpsb
mov
test
ss
or
jnp
cwtl
icebp
pop
and
cmpb
ds
xchg
mov
cmpb
dec
dec
sahf
inc
std
addb
rol
add
cmp
loope
or
repnz
pop
pop
push
test
ret
inc
ret
push
pop
mov
dec
repnz
jp
add
sub
movsl
pop
lea
xor
pop
iret
dec
ds
add
jecxz
pop
notb
rorl
inc
add
and
test
adc
push
cmp
adcb
sbb
push
add
push
adc
jo
add
test
call
jns
fildll
jmp
add
rolb
popf
lret
jnp
out
cmc
sub
and
pushf
lea
xor
out
cmp
scas
jne
adc
faddl
outsl
jmp
pop
arpl
xchg
xorb
dec
mov
xchg
xlat
in
inc
dec
lahf
sarl
add
pop
hlt
jb
ja
cltd
ja
mul
cmp
add
push
sub
xchg
mov
ret
cmpsb
mov
sbb
movsl
and
movsb
mov
xlat
jnp
mov
lahf
frstor
cmp
inc
sbb
in
push
jae
cbtw
in
add
ds
push
fdivl
add
mov
repz
js
ret
shlb
add
cmp
xchg
mov
adc
push
fiadds
add
mov
adc
mov
pop
or
add
stos
xor
and
xchg
add
fwait
popa
dec
sti
sbb
add
add
push
jne
movsb
adc
push
xchg
pop
mov
fcmovnb
lahf
fsubrs
mov
inc
push
imul
mov
pop
adcl
mov
jns
push
enter
subb
cli
scas
paddusb
fwait
int3
loopne
lea
dec
lock
sub
push
imulb
mov
adc
inc
fs
mov
std
push
mov
add
cmpb
jmp
add
sub
pop
pop
ljmp
out
and
mull
frstor
mov
incb
hlt
add
test
push
jns
add
cmp
xchg
jbe
pop
in
aas
dec
jle
nop
xor
jmp
jae
cmp
loopne
add
sub
add
cmp
push
and
push
arpl
test
ja
rclb
add
sbbl
repnz
add
scas
leave
gs
pop
roll
push
push
jbe
incl
js
inc
ljmp
repz
pusha
dec
mov
cmc
fdivrl
int3
add
pushf
imul
pop
add
mov
sub
add
inc
jbe
pop
mov
adc
mov
arpl
adc
cmpsl
shlb
daa
add
mov
arpl
push
lock
stc
push
decb
add
mov
lock
insl
mov
int3
lcall
xchg
inc
ret
xor
or
sbb
mov
jg
cmp
add
scas
jecxz
mov
mov
iret
inc
sbb
add
pop
ljmp
rol
xor
adc
xchg
sbb
mov
add
sar
out
stos
rcl
push
lret
add
das
stos
mov
pop
out
add
jb
mov
es
orl
xchg
decl
inc
sti
loopne
test
mov
jbe
and
lret
push
pop
sub
push
fs
and
add
shll
in
sidtl
fdivr
push
clc
sub
mov
pop
xchg
xor
inc
lea
inc
jo
or
clc
fmul
fs
pop
add
jae
sub
mov
add
dec
insb
ja
and
call
mov
mov
add
jge
cmp
mov
icebp
je
or
jns
add
cmp
daa
aas
ret
imul
stos
sub
mov
pop
mov
clc
ds
testl
ret
lahf
cld
jo
cld
sbb
sbb
setl
repnz
sbb
add
idiv
sbb
add
pushf
jg
and
pop
cmpsl
lea
jnp
clc
jle
jl
add
jbe
inc
fstpl
insl
into
adc
mov
out
cmp
add
insb
repnz
pop
mov
leave
jl
addr16
sahf
jmp
jb
arpl
daa
inc
nop
incb
cmp
cmp
movsl
cld
fsubp
add
sbb
pop
pop
adc
cmp
movsb
dec
orl
into
dec
fdivr
pop
and
push
jg
jns
inc
or
xlat
test
enter
pop
shr
cmp
add
jle
insb
dec
cmp
cltd
jo
sbb
adc
jge
pop
sbb
add
ret
icebp
add
js
push
add
xor
push
mov
dec
imul
adcb
push
xchg
push
and
cmc
inc
mov
sbbb
ret
cmpsl
adcb
push
in
inc
and
sbb
push
insl
push
les
inc
test
hlt
inc
add
fdiv
pop
and
into
jb
test
jne
in
cmp
call
and
add
dec
aam
add
clc
sti
mov
nop
mov
loopne
inc
loopne
add
out
cmp
sub
pusha
or
sub
pop
scas
add
stos
inc
fs
add
popa
mov
add
clc
shl
fmull
cmpsb
mov
and
orb
data16
add
fwait
shrb
repnz
popf
and
jbe
arpl
leave
cld
cmove
mov
stos
mov
xchg
mov
in
aam
js
and
pop
push
add
mov
pop
add
mov
orl
loope
cld
or
pushf
sub
inc
icebp
aad
inc
add
cmp
hlt
cmp
sub
dec
cld
imul
add
push
adc
nop
cwtl
hlt
adc
js
push
enter
shll
jmp
in
daa
mov
cmp
push
es
dec
dec
movsb
mov
push
cmpsl
sbb
inc
dec
daa
add
sbb
rcr
stos
jne
add
add
das
dec
hlt
lock
xchg
test
int3
and
aam
inc
push
andb
ret
adc
inc
add
sbb
mov
repnz
mov
adc
push
cmpsb
rolb
out
shlb
pop
mov
ret
xor
pop
adc
xorl
leave
add
pop
mov
add
sub
adc
mov
loopne
xor
cld
call
pop
push
orl
add
movb
mov
pop
push
insl
hlt
mov
mov
scas
aad
fidivrl
add
mov
clc
pop
shrb
lret
mov
and
inc
jo
add
addb
out
movsl
pusha
or
jp
push
push
popa
notb
xchg
sbb
or
lret
ret
addl
add
mov
inc
fcomp
sti
mov
cmp
std
sub
add
inc
add
mov
or
movsb
arpl
xchg
lock
jnp
add
jmp
ja
xchg
imul
je
mov
add
jno
jnp
das
mov
stos
sbbl
cld
pushf
add
int
add
jbe
outsb
hlt
insl
add
rorb
bound
xor
idivb
dec
ret
mov
out
and
mov
add
push
mov
add
dec
data16
adc
add
gs
es
jmp
xchg
inc
fildl
add
adc
js
aaa
xlat
adc
jl
ffree
xchg
sbb
fdivl
cwtl
and
gs
rcr
pop
jecxz
add
int3
mov
inc
mov
sbb
fbstp
sarb
or
cmp
out
mov
xchg
cmc
add
xchg
test
ss
dec
and
sbb
jne
lods
rorb
cmp
jp
nop
leave
add
lret
xor
push
mov
add
mov
add
pop
data16
add
inc
lcall
add
divl
jbe
add
sbbb
dec
cmp
pop
dec
iret
inc
shlb
add
stos
add
jae
pushf
sbbb
outsl
fisttpll
xchg
add
aaa
xor
imul
add
or
filds
cwtl
jne
cmc
shlb
cltd
sbbb
jp
arpl
add
int3
ret
sbb
and
mov
push
push
pop
inc
adc
ret
std
nop
xlat
test
ja
iret
popf
inc
andl
in
add
arpl
pop
add
jns
loope
cltd
call
ljmp
loopne
enter
insb
add
or
and
leave
mov
add
lahf
shl
scas
arpl
add
fstpl
adc
pop
jg
lret
packuswb
or
add
push
jns
cwtl
inc
sbb
cmp
cmp
jnp
sub
add
pop
scas
inc
sbb
dec
add
sbb
add
inc
enter
add
jg
push
inc
std
repnz
cmp
dec
fcoms
cmpl
insb
add
sbb
lds
daa
xchg
loope
pop
inc
xchg
mov
loope
sub
push
pop
and
inc
in
lea
stos
stos
mov
cmp
add
ret
add
cmpsl
mov
loop
adc
jmp
sbb
inc
sbb
add
mov
addb
dec
stos
hlt
cmc
js
pop
jno
add
sahf
mov
je
ja
add
notb
sub
fldl
jnp
jp
and
add
loope
imul
cwtl
nop
mov
inc
xor
xor
jns
add
push
jmp
les
cmp
sbb
lock
and
cs
add
rcr
out
adc
sbb
xchg
add
aam
push
cmpsl
cs
xchg
or
jnp
fmuls
icebp
je
adc
push
loopne
add
ja
push
cmp
mov
mov
push
pop
jb
jecxz
in
inc
leave
inc
xorb
pop
adc
scas
stos
add
ja
in
push
inc
jb
add
lret
hlt
sub
add
fadd
imul
aas
sbb
add
in
ret
xchg
add
xor
push
lods
loop
inc
jae
dec
add
pusha
clc
cmpsb
pmuludq
ret
xor
fldenv
addr16
setl
mov
sahf
in
inc
mov
xchg
add
push
loop
xchg
pusha
inc
xchg
add
dec
cmp
pop
xlat
jo
cltd
add
aam
ficomps
ds
sbb
js
inc
cmp
inc
push
nopl
out
xor
add
cmp
add
pop
dec
mov
jl
sub
jle
or
xchg
lods
add
fidivrl
loopne
sub
in
rcrb
xor
and
cltd
add
cmc
fsubl
bnd
push
xchg
faddl
lods
sub
sbb
out
addr16
adc
xorl
les
add
sub
mov
xchg
mov
add
pop
dec
fiadds
mov
xor
test
inc
adc
dec
pop
lds
les
mov
add
add
mov
testl
in
inc
mov
das
scas
or
loopne
arpl
push
mov
jo
mov
test
shll
pop
test
jne
les
xchg
mov
in
adc
add
imul
insb
psubb
push
add
cli
or
mov
mov
inc
add
pusha
lods
mov
in
movsb
add
pop
pushf
push
mov
into
cmp
cmp
testb
dec
add
arpl
pop
add
pop
shl
fadd
dec
pop
movb
push
ljmp
push
adc
andb
nop
shlb
push
xchg
jp
push
xchg
shll
leave
sbb
sbb
scas
sub
adc
add
inc
dec
and
mov
add
and
stos
insb
inc
clc
in
cs
xor
xchg
arpl
pushw
xor
pop
add
sub
xor
shll
jne
mov
cs
or
add
repz
add
bound
test
mov
out
fiadds
add
jns
bound
pop
sbb
and
std
cmpb
decb
jge
subb
jo
dec
add
sarl
test
test
cli
add
daa
inc
cmp
ljmp
loope
jae
lock
inc
pop
bound
fstpt
inc
daa
ds
dec
loopne
add
sub
popf
mov
out
push
mov
lods
add
dec
xor
or
xchg
inc
dec
jecxz
das
mov
subl
add
ja
fucomip
jle
pop
cmp
sub
test
mov
or
aad
mov
add
push
rolb
scas
jmp
push
aad
daa
inc
add
adc
and
fwait
xchg
adc
xchg
xchg
sahf
xor
push
sbb
xchg
mov
std
jecxz
subb
jle
dec
or
sti
fst
add
jnp
js
add
sub
idivl
inc
push
add
pop
movsb
pop
add
xchg
mov
push
jns
sub
fadds
xlat
mov
mov
push
enter
dec
lret
xchg
pop
mov
add
fimull
mov
outsb
add
arpl
add
xchg
mov
lahf
lods
sbbl
sbb
add
mov
fs
dec
jnp,pn
sbb
mov
mov
adc
inc
rcl
lods
aad
mov
push
arpl
sub
jnp
push
loope
andl
popf
jo
subb
test
sbb
inc
pop
mov
roll
out
ret
and
aam
in
add
push
cltd
mov
and
jnp
push
fs
xchg
add
xor
dec
loopne
sub
stos
mov
cmp
negb
dec
rolb
ret
mov
sahf
xchg
shll
mov
arpl
test
mov
xchg
jl
cld
sub
add
ror
inc
loope
arpl
ds
jns
or
enter
sub
popa
jge
das
stos
or
add
clc
or
sub
push
int
in
push
cmp
push
cld
inc
cmpsl
into
mov
call
jge
push
add
insl
cmp
lds
sarl
int3
jge
add
dec
cmp
jecxz
mov
inc
ss
incb
adc
loop
aad
adc
add
aas
outsl
add
arpl
xor
push
pusha
fcoml
or
adc
imul
mov
arpl
mov
xor
out
jae
lock
or
push
jns
jmp
xor
mov
mov
push
sbb
fistl
add
dec
fwait
add
in
add
inc
cmpsl
adc
xor
xor
shlb
mov
addl
out
stos
addb
cmp
xchg
mov
or
jg
hlt
sbbl
add
sbb
xchg
add
mov
jecxz
shlb
xchg
cmp
scas
push
jbe
cmp
push
movsl
shl
lods
cld
call
lods
je
enter
mov
jge
cli
inc
add
pop
loop
pop
subl
add
dec
std
jbe
push
add
add
test
fcompl
push
rcrb
sbb
roll
or
inc
outsb
scas
add
loopne
xorb
or
incl
sub
add
stos
nop
inc
sub
add
xor
flds
push
dec
int3
addb
jle
or
fisubl
xchg
mov
mov
or
filds
inc
pop
add
test
jmp
adc
and
xchg
fptan
adc
jg
mul
pop
pop
sbb
into
and
and
clc
add
test
add
aad
cmp
adc
jo
or
ljmp
mov
inc
dec
out
and
rclb
xor
out
sbb
sub
cltd
mov
cmp
in
sbb
shl
rcr
add
mov
cli
mov
test
cltd
jle
add
rcll
dec
cli
jno
sysexit
mov
jae
sub
add
sti
jecxz
aaa
add
pop
inc
sbb
psubw
leave
ja
lea
mov
hlt
xchg
inc
add
jg
lods
enter
dec
int
dec
xor
pop
shl
cltd
dec
add
jg
cmpsb
add
inc
cmp
sub
fcomps
clc
enter
sahf
sbb
jp
js
out
dec
add
mov
in
adc
movsl
push
add
frstor
lret
pop
sahf
mov
dec
or
arpl
jne
divb
adc
sub
jg
inc
repz
lret
fdivrl
pop
rorl
pusha
dec
jo
test
inc
add
inc
sub
cmp
xor
call
inc
jp
or
cld
cmp
push
mov
ds
add
es
stc
pop
adc
mov
ret
repnz
arpl
inc
and
mov
add
mov
jbe
gs
in
mov
sub
dec
sarb
mov
jnp
nop
pop
jp
dec
add
sub
mov
mov
repz
pop
mov
out
inc
mov
dec
pop
out
jno
outsl
inc
sbb
add
push
outsb
ret
sbb
or
sti
add
pop
sbb
add
aam
pushf
pop
ffreep
add
xchg
lods
inc
add
mov
testl
scas
inc
mov
push
adc
mov
add
out
jp
cmpsb
pop
add
pop
and
pop
sub
add
dec
pushf
lock
and
inc
loop
xchg
incl
add
pop
shrb
test
pop
add
fldt
cwtl
add
inc
adc
aad
add
inc
cmpsl
aaa
aas
ds
lcall
mov
cmc
das
push
sar
add
insb
test
je
outsl
cli
pop
or
imul
add
clc
call
lods
mov
jle
test
add
test
add
int
push
mov
stos
aaa
shrb
dec
rclb
int3
push
xchg
inc
nop
addr16
movsl
push
std
and
xor
add
stos
jo
pop
dec
mov
inc
lock
test
or
add
pushf
insl
loopne
rcrb
incl
mov
jp
ljmp
add
scas
cmp
push
insl
leave
fcompl
add
sub
add
jl
cli
fidivrs
mov
sarl
mov
flds
cmp
inc
add
sub
inc
add
insb
mov
xor
pop
icebp
cld
rorl
jns
fadd
dec
aas
and
add
addr16
cld
pop
aam
lods
pusha
and
cmp
or
inc
lss
mov
dec
js
out
pop
jecxz
dec
inc
jmp
sbb
dec
js
das
mov
xor
or
add
jns
in
push
inc
cmp
add
adc
aad
jg
add
shll
fsubr
xchg
xchg
nop
pop
add
jns
les
rol
lcall
add
fbstp
inc
aaa
push
rcrb
hlt
dec
insl
xor
inc
fldl2t
out
xor
add
xlat
mov
add
inc
inc
ja
lods
xchg
cmc
and
andb
jecxz
cltd
add
dec
fldt
icebp
mov
in
addr16
pushf
jmp
add
dec
xor
add
jmp
nop
add
mov
add
fcmovnb
or
or
bound
imulb
mov
adc
out
push
roll
dec
call
test
xor
mov
aam
adc
and
xchg
fistpll
cmp
or
add
aas
mov
lock
scas
add
push
in
mov
sub
das
fadds
pop
call
mov
add
jge
or
inc
add
adc
insb
cmpl
mov
popa
mov
sarb
sbb
adc
cmp
es
mov
xor
sbb
sub
int3
mov
lods
shlb
mov
push
cwtl
add
lock
mov
out
jle
add
repz
dec
push
pushf
cmc
add
das
sbb
testb
test
out
scas
out
pop
add
bound
xchg
or
fs
and
xor
push
cmpsl
xor
jge
fcmovnbe
mov
cmp
stc
sbb
cmpsl
pop
jnp
xchg
add
or
xchg
cli
icebp
add
xchg
shrl
add
bound
jl
and
xlat
sti
cltd
lock
dec
inc
rorw
or
fdivrs
loop
add
cmp
insb
cwtl
in
push
cmpsl
pop
cmp
jp
xchg
in
inc
mov
jecxz
lahf
add
push
jnp
jns
ficoms
shll
jle
js
adc
jno
rorb
mov
push
inc
jb
rolb
insb
ror
outsl
push
xor
addr16
aad
push
and
adc
inc
xorb
add
cwtl
pop
and
imull
add
inc
test
push
push
mov
xor
mov
xor
movsb
test
mov
jl
out
xor
js
je
fsubl
adc
out
cli
cmp
mov
inc
jb
pop
ds
add
fcompl
xchg
popf
add
test
cli
dec
add
mov
fxch
add
lret
js
pushf
add
fcmovnu
sbb
ret
rorb
jnp
pop
sub
imul
inc
add
loopne
pop
pop
sbb
nop
add
push
subb
sbbb
sbb
ss
mov
subb
adc
test
daa
sub
movsl
xor
cmp
iret
test
clc
mov
push
add
mov
jge
add
add
ljmp
and
aaa
jo
out
mov
shufps
cmc
add
add
jbe
inc
ret
add
lock
int3
mov
jle
out
jns
rorl
sahf
xor
inc
jmp
je
jnp
hlt
out
adcb
cs
jl
add
jecxz
add
fmull
sahf
push
js
inc
addb
mov
jecxz
xchg
mov
roll
xor
adc
enter
xor
push
push
imul
stc
sub
or
xchg
add
out
add
mov
jne
fbstp
or
rcrb
mov
add
dec
in
jne
sbb
popf
sbb
int
and
inc
pop
movsb
addl
inc
mov
xchg
movl
cmovno
clc
mov
inc
pop
xorl
xchg
pushf
in
aaa
xchg
xchg
mov
movsb
pop
mov
pusha
inc
add
mov
jnp
mov
add
insb
xchg
adc
xchg
sbb
jns
sbb
cmp
andb
add
pop
adc
insl
mov
push
gs
add
int
movsl
shl
sbb
sbbb
iret
pushf
je
adc
aam
inc
incl
mov
dec
add
lods
add
mov
xchg
inc
js
fwait
outsb
fmuls
mov
jge
adc
xor
xchg
add
mov
repnz
add
insb
cmp
add
sub
adc
lret
pop
mov
mov
push
add
in
pusha
mov
scas
add
rclb
fneni(8087
xlat
push
rcrl
add
adc
jno
cmp
xor
out
insl
sbb
mov
dec
inc
add
nop
xchg
sbb
ret
add
and
ret
push
imul
not
aas
test
in
cltd
arpl
add
shlb
sti
imul
fsubs
loopne
stos
add
subb
sub
lock
stc
mov
in
mov
or
jb
pop
and
mov
dec
add
repz
loopne
push
shlb
lds
or
imul
inc
pop
pop
lret
cmp
cmp
popa
add
add
mov
clc
les
rclb
lret
pop
lcall
inc
mov
jecxz
dec
in
pushf
mov
jae
jno
insb
inc
movsl
add
xchg
cs
in
gs
push
sbbb
mov
mov
push
add
jo
and
add
arpl
sub
mov
in
lea
aam
filds
mov
jno
jbe
jp
xchg
add
cmpsb
push
leave
jo
push
mov
cltd
sbb
xchg
dec
repnz
xchg
sti
fsqrt
inc
jb
jecxz
rcr
pusha
inc
into
pushf
xchg
jno
shlb
leave
scas
mov
sub
ret
push
aaa
sahf
fimull
xchg
xchg
jnp
jg
rclb
add
mov
incb
dec
mov
loop
add
mov
push
mov
aaa
mov
dec
add
mov
mov
add
lea
test
dec
mov
bound
jl
jg
or
aaa
cmp
pop
push
faddl
sub
xor
sub
jmp
mov
fcoml
add
decb
sti
dec
sar
aas
mov
xchg
cmpsl
sub
mov
rcr
imul
fisttpl
lahf
cmpsl
pop
iret
roll
rolb
repz
jo
add
pop
pop
add
and
push
cmc
dec
sub
add
arpl
inc
mov
cmp
sub
sarb
pop
adc
mov
inc
jle
sti
inc
addl
adc
inc
shlb
add
or
sub
add
iret
pop
sub
negb
add
rolb
rol
sbb
dec
fwait
push
cmpsb
mov
sub
or
inc
and
cmp
addb
sub
les
loopne
and
mov
and
adc
xchg
jns
fisttps
loopne
aas
lret
loopne
sub
add
push
xchg
ljmp
pop
jge
fistps
jo
push
jmp
add
xchg
pop
jle
mov
std
xor
mov
add
cmp
cmp
jle
ret
mov
ljmp
push
ret
add
cmpl
ja
add
sub
sub
inc
je
jecxz
ja
pop
dec
in
sarb
jbe
inc
outsb
sbb
sbbl
pop
lods
cmp
xchg
insl
pop
pop
add
mov
bnd
inc
arpl
in
mov
cmp
push
repnz
add
jl
rcl
sets
in
inc
repz
iret
push
cmc
add
out
cwtl
add
jle
test
mov
fcoms
jb
add
xchg
inc
lock
shrb
add
jge
scas
and
jecxz
cmp
add
fiaddl
and
jb
xchg
and
movb
or
push
testb
pushf
mov
in
enter
pop
in
mov
pop
dec
push
inc
pop
jnp
test
std
push
jae
scas
inc
outsl
add
ftst
pusha
cmpsb
pop
add
cmp
jecxz
inc
cld
das
mov
add
add
ret
fwait
and
mov
inc
and
aam
clc
pop
sbb
dec
mov
data16
mov
adc
inc
adcl
jp
jne
sbb
mov
add
add
test
mov
mov
rol
jnp
aaa
pop
cmc
cmp
repz
cs
add
adc
sarl
add
xor
and
jbe
pop
shlb
xor
aad
aas
xchg
testb
imul
mov
or
push
xor
sub
push
sub
lcall
fisubrl
inc
cmp
mov
bound
or
push
lds
xchg
sbb
push
cld
add
cwtl
and
sub
pop
hlt
push
out
outsl
or
and
iret
inc
pop
sbb
sti
cs
test
add
mov
push
cmp
cmp
inc
push
add
add
in
movsb
xor
add
cmp
rorb
add
mov
sbb
push
mov
repnz
sti
nop
add
inc
inc
rorl
rolb
icebp
xlat
xchg
inc
add
cmc
fs
push
jns
scas
cltd
jge
jp
adc
push
add
add
scas
dec
cmp
sub
dec
dec
add
sub
push
fucomp
push
jne
add
xchg
aad
add
gs
jp
inc
xor
sahf
xchg
repz
ret
imul
cmp
sarl
add
shl
add
stos
sahf
pop
xor
add
dec
jmp
xchg
add
xchg
fwait
mov
add
xor
test
aas
cmpsl
sti
add
sbb
fildl
aaa
orb
mov
dec
movsb
insb
add
pop
inc
je
lret
iret
stos
xchg
insl
orl
bound
icebp
lret
inc
pop
sahf
inc
and
into
inc
sub
cmpl
mov
adc
test
xchg
or
push
nop
roll
push
sbb
add
xchg
loope
test
jno
dec
int
cmp
filds
fcmovnbe
cltd
inc
inc
mov
pushf
pop
and
stos
inc
add
in
fwait
pop
mov
cmpsl
adc
jns
idivl
cmp
sbb
xor
pop
sub
adcb
cmp
add
cmp
dec
add
loope
jge
and
dec
movzbl
mov
add
pop
or
mov
mov
popf
movsb
jl
idivl
and
add
cltd
ljmp
les
sti
add
test
pop
adc
and
adc
roll
test
in
xchg
jns
add
cmp
cltd
cmp
jmp
inc
std
pusha
outsb
add
test
rolb
mov
adc
jge
dec
dec
les
out
dec
nop
and
fwait
mov
mov
xor
add
jnp
lds
ret
add
lods
mov
jl
pop
inc
add
das
ror
mov
pop
sbb
add
inc
jp
sahf
add
lods
xorl
js
cmp
add
setb
cmp
inc
clc
ljmp
ret
add
inc
mov
ljmp
mull
add
ror
adc
loopne
xor
push
arpl
mov
clc
jno
sbb
adc
sbb
stos
add
bound
add
ss
add
ficomps
cltd
movsb
or
sbb
subb
icebp
mov
dec
arpl
insl
add
jbe
in
std
int3
mov
or
mov
mov
lods
fimuls
pop
mov
xchg
add
sbb
and
mov
xchg
or
mov
add
add
push
cmp
pop
ja
dec
jno
rcrb
cmpsl
insb
sub
arpl
dec
cmpsb
sub
xchg
jo
sub
pushf
and
mov
add
mov
push
and
dec
addr16
add
aaa
pusha
and
cwtl
add
mov
push
int
cmp
inc
add
les
lcall
fisubs
mov
push
push
xchg
aam
adcl
fstps
add
scas
ds
mov
aaa
stos
add
in
pop
add
mov
cmp
inc
jns
push
repz
sbb
and
xor
mov
nop
mov
push
add
test
cbtw
add
mov
out
enter
lea
in
loopne
stos
jns
add
cli
cmc
xchg
out
ret
mov
repz
cs
pop
push
stos
shlb
iret
fdivr
add
arpl
dec
cmp
clc
imul
pop
ja
ljmp
sar
pop
mov
cmp
mov
jbe
add
fwait
ds
dec
or
fsubrl
mov
and
cwtl
out
rcrb
jbe
mov
icebp
add
gs
into
adc
rolb
push
sbb
jnp
nop
test
add
les
add
imul
add
fcmovnbe
mov
push
popf
je
js
and
push
pop
sbb
lock
add
fnsave
not
mov
pop
push
pop
push
ljmp
cmp
mov
inc
pop
lea
and
sarl
pop
pop
mov
jecxz
add
lds
push
arpl
adc
sbb
ds
test
add
or
aam
push
aas
add
repz
std
sti
filds
cli
shrl
bnd
mov
pop
gs
test
jl
push
mov
cmp
cwtl
sti
pop
pop
jle
add
adc
add
xor
out
sbb
dec
arpl
mov
jb
pop
xchg
push
call
data16
lock
stos
jecxz
lds
fsubrl
arpl
hlt
movsb
fs
fisttps
pop
inc
aas
mov
mov
pop
mov
mov
pusha
sbb
faddl
subb
cltd
add
jp
bound
dec
rolb
ds
jae
stos
roll
in
mov
out
cwtl
push
ret
pop
push
roll
andl
scas
dec
push
cmp
xchg
clc
dec
add
mov
aaa
add
stos
mov
mov
clc
push
add
lahf
push
das
arpl
add
mov
jmp
xlat
mov
es
nop
push
cmpsb
mov
test
ret
shrb
ljmp
mov
or
fwait
mov
repz
pop
inc
cmp
cmp
aaa
adc
dec
scas
dec
xor
lcall
adc
lret
pushf
hlt
push
ror
roll
jnp
push
mov
fistpl
inc
rolb
xchg
and
ret
dec
add
xor
rorb
sbb
add
lea
inc
repnz
pusha
stos
imulb
in
ja
add
add
lock
shlb
sub
push
pushf
and
pop
orb
pop
std
pusha
inc
data16
mov
sub
insb
sub
movsl
dec
pop
xor
xchg
xchg
fcomi
push
lds
jl
shrb
pusha
mov
test
cld
add
dec
push
add
mov
stos
test
inc
add
call
loop
cmpl
shrl
add
xlat
inc
dec
jecxz
add
lods
xor
daa
out
js
add
enter
adc
mov
xchg
inc
stc
jnp
pop
out
test
push
mov
xor
add
add
and
in
mov
xchg
test
inc
jp
add
sub
and
add
into
hlt
ret
or
inc
stos
jo
add
xchg
mov
add
push
jnp
add
mov
sbb
add
mov
sub
lea
dec
data16
cmp
fstpt
faddp
add
mov
inc
lock
mov
mov
mov
mov
dec
sbb
jno
add
or
outsl
imul
add
sub
lea
sbb
jl
andb
xor
mov
outsb
add
jnp
push
add
cltd
imulb
ret
inc
cltd
or
outsb
test
lret
mov
ds
adc
sbb
flds
mov
inc
mov
imul
ja
jnp
mov
xchg
jle
lds
cmp
rol
int
wrmsr
xor
stos
dec
outsl
cmp
add
jge
add
rorl
or
add
shr
enter
adc
xor
fs
sub
lock
shll
lods
leave
inc
add
or
add
inc
cmpsb
xor
leave
in
xor
mov
inc
out
addr16
rorl
daa
add
and
adc
loope
xor
adc
test
jbe
adc
xor
rorb
sub
and
mov
arpl
imul
push
in
jnp
mov
dec
jnp
aas
xor
inc
call
mov
xchg
inc
test
pop
add
pop
xor
push
jo
add
lcallw
pop
lock
add
adc
jne
arpl
pop
loopne
jle
out
popa
outsb
xchg
sbb
rolb
adc
arpl
mov
jae
mov
cmp
add
add
cmp
test
pop
cli
mov
dec
add
or
mov
mov
loopne
mov
jo
test
out
and
adc
add
push
lahf
arpl
xor
inc
rol
inc
add
mov
jns
loopne
popf
add
ficompl
cmp
loopne
loop
jp
pop
mov
dec
sarb
cmp
push
push
xorl
cmp
mov
add
in
sub
add
cwtl
cmp
int3
push
inc
add
mov
jl
pop
mov
sbb
pop
inc
add
int
call
or
pop
dec
add
add
test
add
cmp
cmp
stc
inc
or
data16
pop
ds
add
xchg
fbld
cwtl
stos
pinsrw
stos
test
cmc
inc
je
pop
add
jo
leave
lret
pusha
sub
xchg
cwtl
mov
inc
mov
popl
sbb
inc
and
add
jae
and
shll
push
mov
xchg
inc
outsb
sbb
inc
iret
call
jmp
add
faddp
rolb
fldenv
daa
xchg
mov
fwait
clc
cmp
adc
lods
aas
cmpsb
mov
dec
ret
inc
fiadds
test
ror
cs
icebp
push
and
sbb
xchg
jmp
and
pop
and
test
add
js
mov
mov
cmpxchg
leave
mov
or
mov
inc
mov
pushf
add
cli
test
jge
sbb
jb
rclb
add
mov
mov
add
loop
push
inc
xor
fimuls
call
xorb
testl
jae
sub
iret
int3
outsb
jns
lock
xor
les
add
cwtl
aas
add
add
xchg
arpl
add
repnz
pop
clc
loope
inc
cltd
arpl
mov
sarb
xor
adc
jp
pop
add
movsl
data16
test
push
test
and
sarb
jno
lahf
into
jg
sub
jl
add
pop
jl
sbb
out
scas
cmp
faddl
jp
outsb
ljmp
nop
xchg
xchg
stos
inc
sub
roll
cmovl
call
scas
inc
lock
repnz
ljmp
rolb
jb
push
mov
add
repz
inc
add
neg
ret
ret
add
pop
shll
mov
repz
mov
mov
mov
filds
dec
outsl
push
scas
popl
rolb
ret
mov
enter
add
inc
mov
stc
lret
and
bound
add
inc
sar
stos
or
pop
fld
les
inc
sbb
je
jb
pusha
adc
adc
fisttpll
add
subl
jne
add
aad
adc
inc
repnz
arpl
test
test
sub
das
add
lcall
sbbb
and
cltd
loope
nop
insl
pop
outsl
cmp
mov
sub
fdivs
mov
jbe
loopne
add
es
rol
lahf
or
add
mov
xchg
inc
add
std
push
push
add
adc
xor
add
arpl
push
add
into
sahf
inc
mov
ret
add
inc
flds
sub
adc
add
out
or
cmp
add
aaa
xchg
sub
psllw
cli
inc
aad
shrb
jo
add
push
push
cmp
decl
inc
loop
in
cwtl
dec
imull
mov
push
and
shl
jecxz
mov
sub
add
sbb
cmpb
fcomip
in
add
fnsave
in
into
add
dec
lahf
sbb
mov
push
sub
push
add
lea
rol
dec
outsb
xchg
inc
push
into
adc
push
sti
fcomp
add
loopne
enter
pop
dec
cmpl
fs
add
push
repz
adc
cmp
push
test
cmp
xor
or
mull
jle
test
lods
mov
and
movsb
xor
imul
and
pusha
shll
cwtl
mov
sbb
pop
dec
fisttpll
iret
fiaddl
or
jbe
xor
mov
mov
popf
leave
in
lock
jns
ret
mov
cwtl
push
mov
add
out
xchg
lock
xchg
in
out
cmc
jle
push
stos
aaa
pop
psllw
test
cld
sub
or
lods
add
xor
cwtl
rcrb
je
andb
insl
out
test
add
dec
mov
sbb
rcl
inc
jno
mov
cmpsl
in
ret
add
or
repz
mov
cmp
lcall
or
inc
std
ffreep
inc
repnz
add
push
stos
push
jge
adc
jg
lds
xchg
rcrl
fldl
and
jbe
repnz
mull
movl
add
movsb
inc
je
mov
push
sahf
push
inc
imul
cmp
xor
addr16
push
mov
inc
pop
sbb
mov
push
jl
add
inc
rcr
mov
mov
jg
andb
push
sub
stos
add
shll
jge
adcb
add
pop
stc
imul
pusha
add
sbb
ljmp
jno
inc
add
popa
sbb
xchg
push
sbb
sub
xor
add
arpl
sub
add
xchg
lds
lahf
add
fimuls
insb
add
xlat
mov
add
dec
pop
rorl
scas
pop
inc
xorb
sbb
add
pushf
mov
hlt
add
inc
inc
inc
inc
jp
sbb
lock
arpl
fdivrp
pop
pop
jmp
push
test
add
sar
and
and
add
lea
or
cmp
icebp
aas
inc
add
push
dec
mov
int
add
and
add
xor
push
add
push
dec
xor
mov
inc
jnp
mov
cmp
std
jne
pop
cmp
and
into
in
sahf
jbe
add
xlat
mov
sbb
mov
shl
add
hlt
pop
out
pop
xor
xchg
lock
nop
imul
sbb
cltd
xchg
sub
push
leave
jno
add
cmpb
and
dec
jo
ror
add
jb
sarb
cmp
xor
push
bound
mov
es
cmp
add
adc
mov
add
jo
xorl
and
incl
lods
sbb
clc
xchg
out
test
jb
and
cmp
inc
add
pop
jmp
comiss
lcall
jns
add
pop
cmpsl
rorl
add
mov
lds
arpl
out
add
and
add
adc
mov
mov
sarl
adc
lds
mov
or
jne
or
addb
xor
imul
add
pop
stos
sub
mov
fnstcw
sbb
pop
inc
mov
and
imul
push
clc
dec
add
mov
jecxz
add
fisubrl
lock
mov
push
lahf
into
cmpb
inc
inc
push
shlb
popf
repz
shrl
adc
ret
add
bound
mov
clc
pop
sub
jmp
addl
and
fcoml
cmp
pop
mov
mov
stos
outsl
push
add
pushf
add
aaa
inc
add
inc
pop
and
cwtl
pop
fnstenv
fidivrl
insl
add
sbb
xor
add
cs
mov
adc
dec
daa
mov
rolb
out
jb
scas
cwtl
add
sub
pop
sbb
cld
sbb
xor
popf
push
adc
sub
add
jne
push
in
add
arpl
jno
sub
loop
and
xchg
mov
push
push
xor
sbb
loop
jae
cmp
fxch
movsb
pop
js
rcrb
cwtd
jo
jns
inc
inc
add
pop
dec
push
adc
jle
mov
pop
sbb
xlat
mov
int
cmp
jo
gs
in
xchg
add
mov
or
cmp
fcos
les
lcall
bound
aaa
inc
insl
rolb
push
stos
pop
mov
push
out
mov
inc
mov
mov
add
cmp
mov
aam
test
mov
adc
jl
add
inc
daa
or
xor
adc
push
loopne
test
lcall
rcr
fmull
add
leave
inc
push
dec
andb
xchg
mov
or
sbb
cmp
xchg
push
aaa
mov
fstp
dec
inc
out
lret
mov
inc
stos
dec
es
mov
fldenv
mov
add
or
ljmp
test
movb
pop
inc
cld
shlb
cmp
pop
repnz
inc
adc
lock
clc
in
add
cmp
sarl
cmpsl
mov
dec
sbb
pop
arpl
mov
out
xchg
shrb
loopne
pop
adc
push
mov
mov
repz
outsb
mull
sti
pop
xor
ljmp
jne
push
adc
pop
add
inc
xchg
xor
jle
jns
test
sub
pop
jo
add
andl
fisubrl
jno
add
xlat
int
xor
mov
add
loop
shl
leave
sarb
add
test
add
push
jb
pop
jp
or
aad
das
mov
push
loop
or
and
jmp
mov
in
out
shrb
loop
pusha
in
add
or
movsb
sub
and
imul
add
push
fidivrl
add
test
dec
xor
call
cmp
add
sbb
dec
into
pop
ss
addb
xchg
mul
push
mov
xchg
mov
inc
adcb
xchg
dec
dec
addb
mov
movsl
add
cmp
or
inc
mov
pusha
ljmp
cmp
or
jp
cmp
int3
xchg
pop
add
mov
mov
cwtl
jmp
shlb
mov
jb
add
aam
jg
stos
pmaddwd
arpl
push
and
outsl
push
cli
lret
jge
fprem
movsb
sahf
popl
xchg
inc
dec
repnz
inc
mov
push
add
xchg
shll
pop
push
in
inc
sub
addl
lahf
add
mov
adc
pop
cld
sub
add
pop
ss
inc
fsts
ret
add
rclb
ljmp
icebp
and
add
mov
arpl
mov
testl
cwtl
rorb
mov
js
enter
les
fnstenv
ja
mov
jp
inc
lods
test
dec
popf
jo
add
add
sub
add
inc
stos
push
add
mov
inc
mov
mov
lea
push
jno
notl
in
lcall
jecxz
lods
test
lods
sub
sbb
les
and
jecxz,pn
or
pop
jbe
push
ja
xchg
pop
add
in
repz
add
dec
in
and
pop
xor
sbb
into
add
sti
adc
push
mov
mov
jno
pop
inc
lods
or
stos
xor
jmp
and
and
loopne
jle
mov
imul
scas
and
mov
addb
stos
jne
iret
pop
and
jle
pop
mov
pusha
outsl
mov
je
lahf
cmpl
add
lea
rsm
xlat
movsl
push
pusha
cli
out
test
faddp
js
mov
mov
pop
fnstcw
xchg
lea
or
add
cmp
jge
rolb
or
ljmp
push
sub
insb
inc
sub
mov
xchg
js
xchg
push
xor
cmp
lock
int3
rclb
cmp
loop
adc
mov
mov
add
fdivrs
out
sub
shlb
mov
cmc
xchg
insb
mov
add
dec
rclb
inc
push
nop
adc
add
ljmp
add
mov
jl
mov
add
cmp
loop
inc
int
push
ds
ljmp
inc
add
lret
add
pop
jl
jmp
inc
pop
jge
mov
xchg
pop
sub
dec
fcmovnb
ret
add
rclb
stos
loope
inc
cwtl
add
test
sti
dec
lods
jo
mov
test
push
shlb
sbb
andb
sbb
mov
jecxz
rcr
addl
bound
or
or
sahf
insb
stc
andb
adc
lcall
scas
hlt
xchg
jnp
mov
sar
dec
add
jno
push
inc
in
jmp
inc
cmp
or
rcll
and
sub
movsb
call
icebp
pop
stos
shll
arpl
popa
ret
push
pop
lahf
xor
add
ror
push
in
jnp
add
out
jle
xor
cmp
xchg
add
ret
push
and
dec
inc
cmp
push
lcall
add
fwait
pop
cld
and
fdivrs
rorb
sub
fisubs
and
push
pop
rcll
add
inc
mov
dec
and
addl
pop
rolb
insb
xor
push
xlat
add
in
std
mov
mov
inc
cmp
dec
notb
inc
jge
add
add
sbb
ss
push
movsl
mov
add
dec
inc
mov
shlb
shlb
jbe
sbb
fiadds
jno
inc
mov
sti
sahf
addr16
xchg
add
sub
jecxz
add
rorb
sub
subl
outsb
jne
or
pop
add
fs
popa
cmpl
sbb
sbb
cld
rol
cli
fadds
dec
mov
test
sti
insb
jle
xor
ss
mov
pop
lea
dec
aad
jge
cmpsl
insl
rol
inc
xchg
popa
add
lds
push
les
add
cmp
rolb
or
mov
pop
xor
cmp
sti
loope
or
lret
pushl
pop
inc
mov
or
mov
cli
xor
and
add
sbb
xchg
shlb
movsl
add
mov
test
xchg
sub
pop
rcr
dec
add
sti
inc
aad
jge
inc
add
jg
jae
sbb
leave
fimull
cmp
or
imul
cmpl
rclb
iret
mov
sub
inc
stos
cmp
mov
sbb
inc
leave
mov
iret
inc
in
imul
cmpb
mov
push
out
incl
in
jge
add
mov
scas
mov
pop
add
rcr
fiaddl
inc
push
repnz
sbb
inc
in
jns
testb
add
mov
outsl
pusha
lock
movsl
add
orl
dec
xchg
notl
xchg
enter
or
repnz
add
jecxz
imul
cmp
fs
fidivrs
clc
add
mov
jno
das
mov
or
in
sbb
aaa
inc
pop
xor
aad
mov
popa
cmp
lods
jns
arpl
pop
call
inc
push
add
inc
arpl
pop
out
jp
or
mov
mov
add
ret
jle
out
cmpb
push
inc
sbb
sub
rclb
bound
mov
ljmp
and
sub
sub
and
add
out
ds
rclb
add
push
sbb
pop
fs
push
jmp
ret
mov
roll
lret
and
push
lods
mov
add
das
cmp
add
dec
pop
enter
add
popl
mov
insb
add
leave
scas
cmp
add
arpl
pop
cmp
stc
pop
pop
mov
movsb
ror
and
cmc
or
stos
cs
add
xchg
icebp
sub
pop
add
mov
nop
maxps
mov
popa
andb
push
mov
push
add
inc
jg
ljmp
repz
xchg
xchg
and
xchg
pop
xchg
pop
or
fcoml
mov
or
bound
add
aad
mov
adc
mov
pushf
add
sbb
sub
out
and
mov
sarb
xchg
cld
add
adc
pop
sarb
lret
out
test
inc
andl
loope
loopne
notl
jo
aam
stc
ret
imul
xchg
dec
out
mov
push
roll
adc
gs
jns
fistpll
add
push
push
in
add
insl
pop
test
jge
inc
push
jecxz
xchg
lods
inc
fimull
out
pop
add
enter
nop
jne
jle
jge
cmovl
ficoml
js
icebp
stos
aad
sub
jecxz
add
and
sub
rcrb
or
pop
cmpsl
mov
in
popf
pop
sub
dec
xchg
push
fsubl
jae
adc
push
jle
arpl
das
testl
cwtl
sarb
cmp
jne
add
movb
into
cmpsl
xchg
inc
add
add
bound
adc
and
nop
pop
rcll
sbb
ja
add
repz
adc
aad
das
and
sbb
jle
push
sub
movsl
rorb
paddq
fsubl
test
sbb
add
lea
fidivrs
mov
outsl
add
or
dec
pop
xchg
push
arpl
aad
and
push
incb
in
adc
imull
cmp
mov
jle
loopne
add
in
mov
fcmovnb
cmp
mov
add
mov
loope
or
out
sbb
movsb
loop
jmp
arpl
add
lret
les
inc
cmpsl
pop
ds
xor
pop
xor
add
pop
push
repz
mov
jecxz
clc
mov
add
pop
repnz
push
iret
or
cmp
add
cmp
and
mov
mov
push
and
add
adc
stc
cli
out
add
fs
lret
push
lds
mov
ja
and
push
push
popf
cmp
inc
je
ds
add
sbbb
push
ret
sahf
mov
pusha
adc
add
mov
jae
mov
and
pop
outsl
mov
pop
js
jecxz
adcl
sbb
inc
pop
add
or
and
lret
lea
pop
scas
arpl
jo
add
in
imul
cmp
arpl
push
adc
insb
pop
cmp
iret
fsubp
das
jmp
push
lea
lcall
fisubrs
test
es
mov
loop
add
cmp
in
psubsw
mov
inc
pop
pop
add
cmp
arpl
or
stc
add
movsl
in
push
add
push
lock
mov
sbb
loopne
lods
sub
xor
mov
shrb
dec
add
add
int3
dec
jnp
add
mov
inc
fisubs
sbb
in
shrb
gs
push
or
sbb
stos
jbe
lret
inc
or
add
call
ret
cmp
hlt
imul
jmp
pusha
xchg
inc
cmpsb
scas
repz
lock
orb
and
lea
add
xchg
loopne
pop
sbb
loop
sahf
push
sbb
or
orb
dec
pop
fiaddl
aam
pop
xchg
push
stos
adc
add
inc
cmp
cwtl
repnz
and
push
xchg
adc
in
push
scas
lds
xor
pop
cli
addl
out
xchg
mov
jle
xor
or
sbb
dec
cmp
rclb
addr16
inc
imul
add
cmpl
mov
test
test
or
fcompl
xorl
add
add
loopne
inc
sub
add
int
mov
push
add
xchg
fadds
fildll
or
xchg
mov
in
movl
push
add
mov
movsl
and
test
add
shrl
and
or
add
cmpl
jecxz
lea
sub
scas
push
add
cmp
add
mov
js
into
jp
add
bound
mov
jmp
add
inc
adc
add
sub
add
pop
in
inc
xchg
lret
xchg
ret
push
sarl
cmp
rcrb
icebp
or
in
iret
gs
add
fiadds
add
push
jae
dec
sti
inc
add
ss
orl
shl
mov
imul
push
aad
lock
pushf
shll
add
jb
ror
lock
add
loopne
shll
nop
inc
jl
fwait
add
pushf
mov
movb
add
xor
pusha
mov
jg
out
ljmp
adc
pop
shl
loopne
repz
xchg
xor
pop
jp
mov
lahf
mov
push
xorb
ficomps
sub
add
dec
inc
in
push
xor
lar
jg
and
add
jmp
add
icebp
jns
xchg
lock
sbb
insb
ret
add
xchg
add
movsl
adc
cmpsb
arpl
or
rcpps
sbb
pause
popa
add
fwait
add
and
or
sub
add
inc
adc
mov
lcall
ds
subl
mov
out
fs
mov
out
filds
rolb
mov
push
stos
pop
dec
shlb
aas
mov
cwtl
jb
add
xlat
rolb
ficoml
sub
cmpsl
incl
pusha
enter
inc
add
inc
sub
add
fmuls
pop
movl
in
imul
dec
mov
lock
xchg
add
insl
inc
wbinvd
push
dec
call
rolb
fsin
mov
test
push
mov
xchg
xor
lods
xor
mov
xchg
add
movsl
inc
call
mov
lret
adc
mov
inc
rorb
shl
add
out
inc
inc
jb
cli
mov
je
pop
flds
out
lret
inc
rorb
fsubs
roll
into
popa
or
and
sbb
rorb
aaa
jo
add
icebp
pushf
and
jns
out
lock
xchg
shll
fwait
lea
sub
rolb
call
cmc
fnstsw
mov
stos
ja
sbb
xlat
sub
push
add
cmpsb
cwtl
rclb
xchg
lds
jae
pop
mov
insb
add
nop
push
jge
stc
sbb
mov
mov
push
xor
add
fcom
pop
cmc
shl
fcompl
push
and
dec
dec
sbb
filds
sbb
sbb
inc
add
mov
pop
dec
jne
or
insl
jl
scas
aaa
cmp
popf
jnp
mov
insb
pushf
mov
call
das
inc
pop
mov
addr16
insl
inc
andb
int3
xchg
ds
add
int
push
fcomip
adc
pop
dec
add
lret
xor
jnp
mov
or
addl
sub
jl
cmp
pop
add
mov
add
ret
adc
aas
inc
add
rorl
add
inc
xlat
xor
pop
mov
inc
scas
adc
add
mov
mov
inc
adc
fs
jp
cmp
jmp
out
add
movsb
push
dec
add
mov
in
loopne
rorl
bound
dec
sub
sbb
adcl
mov
inc
inc
add
mov
lahf
push
faddp
repnz
and
pusha
iret
arpl
xor
mov
xor
adc
push
jg
add
movsl
rcll
decb
shrl
jbe
add
sbb
aaa
gs
sahf
arpl
sbb
dec
out
icebp
stos
cltd
test
jae
out
fildll
xchg
mov
lcall
push
adcb
xchg
repz
out
inc
in
ret
push
rolb
fistl
mov
es
adc
jo
sbb
xchg
icebp
mov
cmpsl
jg
jmp
cltd
mov
cmp
dec
lcall
add
or
add
test
and
pop
or
dec
lods
in
push
add
dec
popa
lea
mov
movsb
cmpsb
xchg
ret
addl
pop
jnp
mov
push
adc
mul
fdivs
xor
js
inc
pop
cmp
in
mov
pop
addr16
enter
ucomiss
and
pop
mov
ja
cmpsl
out
jnp,pn
add
arpl
xchg
shl
add
adc
test
flds
push
bound
pop
loope
test
nop
arpl
xor
ja
add
push
call
js
bswap
repnz
pop
jno
in
inc
shll
sahf
add
ret
jnp
add
cmpsb
adc
das
add
dec
mov
add
dec
inc
repz
jo
adc
cli
xor
jns
rcl
cwtl
popa
lahf
add
arpl
sub
add
push
xchg
cld
and
inc
add
lods
xlat
call
outsl
add
dec
hlt
adc
add
stos
add
mov
pop
sub
aas
fidivrs
add
loope
data16
sub
cmp
adc
into
repnz
add
ss
ja
sub
repnz
add
movsl
add
out
sbb
jg
push
out
mov
ret
mov
add
das
orb
push
fst
cltd
clc
mov
or
inc
pop
out
mov
shlb
add
push
rcrb
mov
cmp
mov
mulb
push
js
loopne
insl
neg
xchg
insb
pop
cmp
incb
sub
ficompl
loop
sub
add
jno
aad
mov
add
shlb
inc
jae
add
test
in
popa
and
push
xor
inc
cltd
jne
and
testl
scas
xor
subb
and
ss
sbb
stos
sbb
adcb
popl
sahf
scas
push
dec
xchg
lret
adc
aad
and
or
hlt
out
add
xor
imul
andl
lret
aaa
dec
xor
xor
push
sbb
rolb
xchg
lods
bnd
cmp
pop
sahf
ret
xchg
inc
rcr
js
clc
adc
and
cmp
mov
xchg
inc
repz
sahf
dec
imul
push
arpl
add
je
push
pop
ds
inc
shlb
add
cmpl
scas
pushf
loopne
cmp
std
pop
adc
arpl
iret
inc
lods
mov
pusha
fsub
int
rclb
arpl
lret
mov
lock
sldt
int3
test
add
out
jno
xlat
add
in
shlb
xchg
fldt
jns
mov
cmc
arpl
repnz
push
add
inc
inc
push
pop
mov
mov
cmp
daa
or
gs
mov
cmp
packssdw
gs
icebp
pusha
andl
or
loope
js
cmp
jecxz
mov
pop
fstpl
cli
int
enter
add
mov
shlb
inc
sub
sbb
add
pushf
adc
andl
inc
jno
test
jo
rol
dec
adc
inc
add
pop
add
mov
or
adcl
inc
std
pshufw
add
push
imul
and
ss
jmp
out
add
add
mov
lcall
call
jb
sub
bound
add
pop
xchg
aas
jns
sbb
and
cmovo
dec
sub
je
mov
enter
dec
adc
addl
pop
aaa
fucomp
jbe
add
or
cmpsl
mov
mov
lcall
or
add
push
js
test
and
das
cmp
mov
or
jmp
jb
or
mov
xor
pop
rclb
pop
xchg
movsl
jo
mov
mov
push
mov
test
or
fsubs
mov
pop
and
add
movsb
mov
mov
gs
fdiv
cmp
inc
jmp
rolb
pop
dec
mov
dec
inc
roll
lcall
lahf
mov
xchg
jecxz
adc
mov
cmc
add
loopne
mov
jmp
sub
fs
bound
je
es
sub
es
repnz
add
jge
mov
arpl
xor
add
movsb
loopne
jecxz
add
dec
and
pop
jle
aaa
and
into
call
adc
inc
lock
xchg
mov
lea
fisubs
stos
add
bnd
or
fcompl
in
push
add
and
pop
jg
add
or
movsl
in
cvtdq2ps
adc
push
push
fsub
dec
sahf
add
inc
mov
rcrl
js
jmp
xor
fcmove
jnp
fs
rorb
cld
add
or
pop
fcmovb
int3
push
xchg
jne
call
ljmp
pushf
push
sbb
inc
adc
gs
add
fldenv
pop
into
dec
xchg
jbe
call
jae
jle
jmp
lcall
mov
and
jnp
jg
add
ret
mull
int3
xlat
out
cwtl
movl
jg
fwait
pop
inc
popl
int
sub
xor
add
insl
xor
and
addr16
add
inc
add
jg
jo
int3
xor
add
add
insb
in
jg
scas
sbb
jno
flds
lods
push
xor
enter
jle
pushf
and
cmp
stos
ljmp
clc
add
cmp
sbb
mov
or
or
fadds
inc
mov
mov
add
stos
mov
add
dec
iret
inc
push
pop
and
mov
ret
adc
push
jne
jno
shlb
aad
sbb
inc
flds
or
xor
jnp
ret
add
aad
pop
repnz
js
repnz
inc
arpl
test
sbb
jo
ret
les
add
addb
arpl
xchg
or
jecxz
pop
rol
inc
sbb
xchg
icebp
sbbb
add
scas
shrl
pop
sub
pop
imul
std
xchg
or
roll
dec
push
test
xchg
add
mull
xor
xor
cmp
cwtl
add
xchg
add
jb
aad
mov
incb
jnp
icebp
sub
cwtl
inc
popl
xor
add
xadd
push
add
adc
hlt
cltd
push
daa
add
jmp
add
insb
das
inc
cmp
push
jb
int3
or
add
add
dec
jg
add
pop
mov
push
scas
int
subb
sbb
idivb
in
lock
mov
shll
push
ret
cmp
mov
adc
add
inc
xchg
out
cmp
mov
cmpsb
inc
cmpsl
add
push
cmp
jp
mov
stos
sbb
add
jne
cmp
inc
add
imul
add
mov
jl
sbb
xlat
mov
in
dec
repz
adc
jle
or
mov
or
insl
out
adc
dec
test
push
scas
and
test
xchg
insb
lods
add
push
sub
xor
xorb
xchg
push
add
dec
sahf
inc
inc
lock
outsl
jbe
aas
jge
ret
push
adc
arpl
stos
sti
inc
js
cmpsb
repnz
add
adc
cmp
dec
xchg
push
loopne
pushw
sub
xchg
inc
inc
xchg
dec
arpl
cmp
adc
add
jb
mov
fiadds
push
cmp
and
flds
mov
int
fbstp
and
and
add
aas
arpl
sbb
or
sbbb
add
mov
mov
popf
inc
jp
in
loopne
adc
sbb
mov
subb
shll
add
cmovne
nop
push
dec
push
sub
out
fwait
inc
call
mov
xchg
es
popa
pop
xchg
inc
int3
add
jns
not
movsl
and
xchg
ror
stos
pop
out
test
cwtl
js
mov
out
bound
and
pushf
or
sbb
inc
add
daa
lods
aam
mov
pushf
dec
push
adc
sub
fwait
aaa
shlb
orb
ret
inc
xor
xchg
xchg
jl
rcl
inc
stc
popf
clc
imul
jge
xchg
aaa
inc
cmp
adc
add
pop
inc
pop
addl
inc
in
push
or
adc
mov
int
fbld
dec
jge
fucomp
jbe
add
shr
ljmp
stos
iret
ss
and
add
out
jnp
xchg
cmp
mov
fdiv
push
cmp
clc
inc
lds
cltd
arpl
xchg
aas
add
ljmp
clc
cli
out
mov
add
ror
loop
or
or
lds
jp
icebp
jbe
add
pop
cmp
call
hlt
enter
pop
arpl
divb
lock
jo
stc
add
jae
sbb
push
repnz
add
jp
adc
xchg
mov
enter
mov
shlb
add
inc
add
add
rorl
add
cmp
cld
pop
sbb
pop
inc
icebp
pusha
sbb
stos
data16
jl
and
mov
push
mov
inc
or
push
jae
add
cmpsb
mov
ret
loope
cmpsl
pop
dec
inc
xchg
add
test
jae
testl
in
push
pop
add
inc
jne
sbb
push
cmc
ss
pop
push
test
add
in
xor
mov
add
and
sub
push
jl
ret
popf
xchg
scas
aas
inc
cmp
and
mov
mov
add
add
lods
cwtl
in
add
and
xor
lret
roll
sbb
dec
sub
pop
push
inc
nop
fisubs
inc
insb
es
dec
lock
shll
jg
inc
jl
add
inc
sbb
scas
int3
add
xchg
mov
cwtl
arpl
cmpsb
stos
add
add
movsl
jno
loope
add
inc
pop
and
push
adc
test
fwait
sarb
sub
add
pop
cmpsb
cwtl
inc
pop
outsl
negb
loope
add
andl
insl
mov
xor
pop
mov
ds
adcl
xorl
les
cmp
mov
lods
xchg
jns
fwait
pop
lahf
add
sarb
jle
and
pop
loop
in
inc
js
roll
xchg
dec
repnz
jo
lahf
rolb
cmp
into
cmpb
add
add
sarb
pop
cmovae
movsl
sbbb
lods
xchg
add
arpl
stc
push
push
lcall
or
scas
xchg
adc
jp
add
enter
pop
sbb
push
arpl
xchg
sbb
addb
xor
cmpb
mov
inc
push
movsb
sbb
add
fcoms
cmp
add
jbe
jp
imul
cmp
enter
add
mov
repz
mov
daa
pop
sub
xor
sbb
mov
push
and
lds
inc
loopne
stos
xchg
dec
xorb
pusha
and
pop
mov
add
hlt
arpl
verr
out
sub
mov
xorl
xorb
jnp
aad
ret
inc
out
inc
repz
call
adc
inc
stos
mov
jae
addl
shrb
add
xchg
mov
xor
pop
jp
push
ss
or
loopne
push
jnp
int
add
imul
push
mov
sub
xor
jg
sub
add
lahf
mov
out
inc
xchg
pop
adc
inc
sbbb
pop
movsl
or
hlt
inc
cli
cld
mov
add
stos
pop
loopne
sarb
xchg
jns
pop
pop
xchg
loop
out
sbb
enter
add
rcrb
add
mov
dec
xor
fcompl
into
dec
sub
aas
jl
add
shrl
xor
pop
lock
cld
ret
ds
mov
xor
das
jmp
cld
cwtl
add
arpl
shl
loopne
stc
push
add
mov
mov
sbb
roll
or
xlat
inc
pop
fiaddl
inc
pusha
decb
xor
subb
push
or
adc
adc
popl
pop
sbb
and
add
pushf
cmp
das
mov
pop
ljmp
xlat
cmpsl
incl
cmp
cld
mov
mov
add
lock
mov
gs
out
imulb
shlb
mov
shrb
ljmp
js
loop
cmp
ds
add
jnp
inc
pusha
mov
leave
jns
dec
inc
pusha
add
add
xchg
ds
add
adc
bound
cmp
inc
push
outsl
mov
clc
jl
add
js
inc
adc
dec
add
fstpl
push
or
mov
insb
pop
ret
push
and
inc
add
adcl
mov
ret
sbb
jbe
dec
and
push
icebp
add
arpl
mov
adc
add
jne
aas
rolb
outsb
into
add
loope
mov
or
cmp
xor
aaa
lods
push
pusha
jmp
bound
es
ja
mov
scas
gs
aaa
mov
lcall
add
adc
insl
inc
ret
sbb
push
stos
add
addl
gs
add
mov
xlat
pop
frstor
add
jo
and
add
inc
rol
add
push
arpl
add
jns
inc
lret
scas
incl
into
stc
push
test
xchg
rcrb
pushf
mov
inc
push
add
hlt
aam
mov
add
inc
mov
rcl
dec
pop
xchg
cwtl
and
jmp
add
mov
sysret
cmp
loopne
xor
mov
inc
pusha
pusha
ficoml
test
in
add
inc
and
shrl
inc
push
out
add
stos
add
mov
dec
jl
shlb
aaa
nop
push
inc
mov
add
leave
inc
shlb
dec
and
xchg
lahf
js
jle
rolb
mov
sbb
jbe
insb
lcall
cmpsl
into
cmp
ja
fadds
adc
jo
pushf
pop
in
mov
xchg
inc
loopne
mov
sbb
data16
and
aad
jl
aas
add
inc
insb
jecxz
or
add
lods
mov
jl
inc
and
mov
test
mov
mov
lahf
dec
cld
sub
sub
xchg
sub
sbb
push
das
or
jecxz
outsl
add
mov
mov
sbb
dec
out
jns
test
inc
sahf
push
push
shrb
xchg
add
jae
adc
rolb
inc
and
push
scas
mov
jle
adc
ret
dec
mov
loopne
ja
pop
rcrb
loopne
inc
add
mov
insl
decl
push
add
xor
jb
out
hlt
imul
addb
and
fcomps
fs
add
rcrl
add
adc
xchg
test
jge
pop
or
add
inc
jnp
fiadds
addb
and
push
dec
cmp
and
pop
mov
pop
sbb
or
inc
jno
lds
enter
dec
dec
push
xlat
mov
xor
ret
in
jns
cmp
popl
ja
lods
movsl
jp
sbb
push
pusha
adc
aas
leave
stos
je
add
rorb
sarl
add
lret
arpl
incl
push
jl
lcall
iret
adc
adc
leave
mov
loope
hlt
inc
cld
sub
jae
ds
push
lret
js
mov
or
add
fmul
dec
mov
pop
cmp
jg
inc
jle
xor
jecxz
lcall
scas
add
fiaddl
adc
sub
add
adc
mov
fs
test
lock
and
in
adc
add
or
cmp
mov
inc
ret
or
fidivrl
inc
rolb
mov
mov
adc
and
push
in
andl
das
shlb
add
enter
jmp
xlat
add
cmc
jp
sub
dec
iret
jae
aad
fiadds
arpl
pop
jne
sub
or
pop
inc
push
mov
dec
and
sahf
mov
pusha
sahf
movsb
out
inc
inc
pop
xor
clc
test
sub
inc
xchg
pop
rcr
clc
flds
xlat
in
push
pop
xor
dec
cmpl
js
jbe
arpl
pop
std
push
jnp
sbb
movb
sub
and
and
pusha
inc
sahf
push
in
push
add
jo
push
gs
mov
xchg
cmp
mov
mov
popa
ss
mov
repnz
pop
xchg
insl
sbb
add
stc
add
mov
fisubs
sub
add
popa
scas
iret
cmp
lods
add
pop
pop
sub
clc
in
push
jg
inc
mov
cmp
popf
pop
fs
repz
nop
xchg
or
dec
mov
ss
adc
add
repz
call
out
mov
pop
fsubrs
or
sti
add
cwtl
push
pop
add
outsl
xchg
inc
les
inc
jmp
lods
xchg
je
imulb
icebp
push
xorl
jo
cltd
add
shlb
fwait
dec
mov
jb
adc
js
add
sahf
cmpb
inc
andb
dec
or
adc
testb
stc
scas
cs
dec
mov
movhps
rcrl
add
dec
je
mov
add
aas
cmpsl
jp
adc
mov
xchg
stos
das
mov
push
sbb
sbb
aas
add
pusha
loop
mov
shl
ljmp
roll
dec
gs
icebp
add
mov
and
cli
into
repnz
enter
mull
pop
inc
je
jle
jg
jge
and
outsl
sbb
add
mov
adc
test
add
mov
add
sarb
scas
xlat
adc
and
jecxz
imul
push
jp
lret
cwtl
cmp
repnz
fwait
adc
popa
add
mov
enter
mov
dec
fsubrl
pop
mov
jg
add
sbb
incl
test
insl
lahf
adc
jecxz
cmp
adc
xor
ljmp
in
xchg
add
mov
mov
inc
out
adcb
xor
push
jp
aam
push
add
and
je
fs
aas
arpl
cli
call
xchg
popa
rol
push
cmp
hlt
andb
inc
jne
pop
pop
cmp
xlat
loopne
out
int3
nop
loope
cli
rcrl
add
inc
add
mov
nop
add
push
and
addl
sub
inc
sub
rorl
adc
test
push
mov
xchg
add
shll
loopne
daa
mov
gs
cmp
add
mov
add
inc
adc
pop
xor
inc
cmp
sbb
frstor
std
dec
jle
add
rcrb
add
arpl
popa
cld
pop
out
lahf
add
add
xlat
arpl
aad
lret
sub
outsb
pop
cmp
and
lock
and
xor
ret
inc
insb
into
cld
lods
add
andl
and
sub
leave
shlb
push
mull
add
add
add
fcompl
sbb
mov
cmp
int3
je
dec
ret
add
push
xchg
add
mov
fdivs
cmpsl
or
xor
sbb
mov
inc
add
xrelease
add
push
pop
jno
add
fildl
outsb
out
add
enter
in
jl
cmp
sbb
popf
int3
add
mov
test
sub
inc
js
sub
fisubl
xor
decl
mov
into
mov
sub
stc
xchg
nop
pop
pop
pop
pop
cmpsb
scas
sbb
sbb
outsl
int
or
jge
xchg
xorb
scas
icebp
call
add
bound
mov
jmp
cmp
sub
mov
and
testl
inc
cmp
in
es
jl
adc
cmpsl
test
roll
call
pop
and
add
out
loope
test
ja
add
inc
xchg
ljmp
dec
mov
icebp
add
pop
mov
inc
mov
mov
cmp
sarl
or
in
add
das
incb
inc
dec
fs
lock
sub
xor
add
daa
sub
ljmp
mov
loopne
jnp
add
jmp
and
lock
add
push
sbb
arpl
push
pop
mov
add
pop
jmp
dec
mov
std
add
ror
xchg
add
pop
cld
shlb
inc
add
add
sub
push
xchg
lahf
pop
and
push
pop
fwait
add
fistpl
out
arpl
xor
dec
sbb
push
mov
insl
pop
add
aas
or
inc
hlt
insb
add
outsl
enter
cmp
arpl
mov
add
push
or
xlat
inc
pop
pop
mov
movsl
mov
push
fsubrp
inc
push
and
lds
pushf
add
inc
hlt
adc
addb
mov
pop
dec
or
ret
xlat
inc
leave
call
in
add
mov
in
arpl
popf
add
cli
es
add
sarb
notb
sarb
xchg
push
shll
pop
aas
rcrb
ja
add
pop
test
add
xchg
decl
cmp
aaa
mov
add
outsb
inc
push
inc
sbbl
cmp
and
loopne
adc
inc
fadds
add
pop
icebp
mov
cmp
dec
pop
repz
inc
and
or
add
imull
add
dec
jle
xchg
hlt
add
out
pop
lahf
cmpsl
mov
add
jb
mov
adc
lahf
addb
insb
mov
adc
pop
inc
xchg
andb
scas
add
ret
pop
lahf
xchg
add
xchg
xchg
sub
push
push
adc
pop
adc
add
xchg
mov
mov
push
mov
or
pop
pop
bound
mov
add
addl
mov
add
aad
inc
shll
jge
add
mov
sub
test
subb
jp
add
inc
pushf
push
roll
push
into
sbb
das
cmpsl
inc
ret
pop
scas
sub
lock
dec
add
xchg
sbb
subl
adc
dec
imull
mov
xchg
data16
js
es
cmp
inc
add
or
mov
mov
mov
not
inc
clc
adc
gs
dec
ljmp
int3
das
sbb
inc
loope
sbb
stos
and
js
std
sbb
sbbl
jge
and
xchg
fxtract
cwtl
push
add
enter
das
popa
add
inc
imul
pop
roll
sahf
add
jns
pop
mov
fistpl
add
cmp
jle
mov
pop
lcall
mov
mov
inc
push
mov
inc
dec
pusha
icebp
push
xor
jecxz
orl
aaa
add
imul
add
inc
pop
fwait
out
out
push
insl
dec
imul
lret
aam
push
jecxz
add
enter
rolb
mov
add
inc
loope
mov
inc
inc
out
outsl
xor
addr16
add
mov
mov
and
adc
ret
rcll
push
incb
loopnew
pop
mov
mov
call
add
mov
xor
dec
icebp
ss
lahf
bound
ret
add
pop
xor
loop
inc
inc
clc
negb
movb
into
dec
add
fadds
xchg
inc
in
in
test
enter
add
inc
inc
jmp
divb
mov
add
jl
jbe
paddq
push
test
fimuls
pop
or
and
inc
in
fsubl
pop
add
nop
push
mov
cmp
push
cmpsl
sbb
add
push
rorb
pusha
jle
mov
sbb
ret
sub
add
xchg
js
and
inc
addb
inc
xchg
sub
xor
es
push
imul
add
sbb
add
mov
pop
mov
out
std
loop
adcl
call
mov
lea
mov
xchg
cwtl
xchg
je
xchg
aaa
mov
popf
arpl
add
in
sbb
iret
pop
sub
rcrb
add
and
icebp
jecxz
cmovb
rorb
popa
dec
rdpmc
jmp
out
jge
add
and
cmp
adc
cmp
ja
add
nop
sbb
mov
inc
repz
loopne
pop
mov
out
inc
pop
mov
cmpsb
lds
mov
inc
std
arpl
es
outsb
dec
lock
test
inc
add
fnstsw
sbb
arpl
or
or
pop
roll
jg
inc
movsl
cltd
sti
dec
call
adc
loope
outsb
add
and
mov
sbb
add
loop
inc
cmp
shlb
push
add
mov
mov
dec
pop
sbb
shlb
jmp
call
jge
add
push
xchg
sbb
jno
pop
mov
dec
inc
jae
add
adc
into
inc
adc
arpl
mov
xchg
xchg
dec
inc
xor
mov
fs
je
add
xchg
push
les
insb
rolb
aam
mov
repnz
and
call
mov
mov
push
xorb
add
xchg
or
rcr
pop
std
add
iret
enter
insb
sbb
aaa
mov
sbb
add
pusha
lea
and
adc
testl
inc
jle
clc
jmp
xchg
mov
loopne
pop
fimuls
push
aas
mov
adc
inc
xchg
repz
dec
push
dec
clc
roll
and
pop
jle
mov
inc
add
mov
xchg
fstps
enter
jns
add
je
and
jne
incb
inc
inc
jg
into
push
outsl
sbb
ret
rcll
push
add
fcmovb
and
outsl
icebp
sbb
hlt
adc
loope
scas
add
aaa
push
jb
pop
adc
and
jecxz
sbb
insb
incb
out
aaa
cmp
testl
cmp
rclb
sub
and
leave
aam
pop
fildl
sti
pop
addr16
mov
xor
div
pop
ja
or
nop
nop
popa
int3
adc
mov
sub
sbb
jecxz
xchg
je
sub
add
inc
fstps
add
mov
mov
ds
cwtl
sbb
or
js
mov
int3
inc
jo
mov
xor
mov
test
faddl
pusha
xchg
xor
add
loope
xchg
nop
shr
inc
inc
inc
in
add
or
cli
inc
sub
fiadds
cmp
daa
leave
shlb
cmp
icebp
xchg
iret
jno
mov
pusha
pusha
fwait
add
inc
mov
ret
lea
aas
push
loopne
dec
arpl
notb
testl
sbb
push
pop
cli
adc
fs
add
dec
inc
jb
lcall
int
and
xchg
adc
add
mov
sahf
or
sarb
inc
add
mov
jns
jle
arpl
sub
hlt
cmp
and
or
cmp
jae
iret
xor
lods
mov
inc
adc
pop
xchg
add
mov
add
sti
xchg
xor
xchg
orl
popa
and
jmp
xchg
add
add
dec
xchg
lret
mov
in
stc
test
sbb
andb
cmp
push
inc
sub
and
add
inc
jnp
outsl
jo
pop
pop
xchg
xchg
add
iret
push
shl
cmp
stc
mov
sub
das
jne
add
xchg
and
add
xchg
mov
stos
add
mov
inc
inc
divb
add
scas
jmp
mov
cmpsb
and
mov
inc
xchg
or
and
push
lds
std
or
pop
mov
ret
mov
nop
repnz
add
rolb
push
pop
xchg
sbb
lock
or
fildl
xchg
aam
pop
push
sbb
stos
cmp
mov
int3
inc
mov
cmp
jns
mov
out
dec
testb
pusha
jge
sahf
out
stc
adc
add
inc
dec
cmp
push
dec
ret
sub
jecxz
sbb
lock
add
sub
xor
push
cmp
or
stc
and
pop
inc
xor
icebp
dec
sbb
inc
add
add
adc
movsl
pop
xacquire
sbb
mov
add
out
inc
add
call
test
mov
addl
push
push
lret
cmp
sub
mov
add
mov
jle
in
fdivrs
xchg
rcl
sub
inc
pop
add
xchg
mov
das
rorb
rolb
lods
hlt
cld
or
mov
add
adc
ffree
dec
mov
mov
push
pop
add
mov
mov
jae
add
imul
xchg
nop
sbb
in
adc
js
loop
xor
outsb
pop
out
xor
sub
outsl
lods
add
fchs
dec
cmpsb
add
icebp
loop
out
pop
jge
pop
adc
and
stos
cld
push
sbb
lahf
add
or
dec
mov
inc
push
jg
shlb
testl
add
mov
aam
repz
test
adcl
mov
jmp
sarl
adc
xor
jns
mov
adc
mov
cmp
xchg
cmp
movsl
adc
mov
add
lahf
ret
jg
xchg
sbb
mov
orl
popf
cmovge
and
bound
add
mov
inc
xchg
inc
daa
repnz
iret
and
mov
mov
lea
push
cld
scas
or
test
shrb
xchg
add
cmp
sub
add
cmp
add
lahf
push
pop
xor
mov
add
test
dec
or
xchg
add
and
pop
jge
mov
cmpsl
add
sub
popa
aas
scas
inc
shlb
out
jecxz
add
dec
mov
clc
pop
cmp
push
shlb
jge
les
mov
pusha
cli
fidivl
lahf
add
pushf
movsl
fwait
inc
dec
loopne
dec
jmp
add
insl
add
rcll
inc
push
shrb
inc
lock
sub
pop
inc
add
mov
fldl
or
aam
push
inc
rorl
fadds
add
loopne
lahf
cmpl
stc
inc
mov
mov
jecxz
mov
shlb
lret
loop
mov
sbb
jbe
mov
add
xor
std
inc
jge
mov
mov
arpl
mov
sub
xor
scas
inc
les
mov
inc
loop
inc
out
das
add
aaa
adc
xor
add
outsb
or
hlt
aam
dec
addr16
ljmp
shrl
faddl
push
arpl
sbb
repnz
dec
xor
ret
aas
les
add
mov
sti
jb
addl
jmp
aas
and
xchg
adc
mov
out
mov
aam
add
lods
sahf
pop
mov
pop
in
lahf
and
add
mov
arpl
nop
std
add
aaa
push
inc
add
push
cmpsb
jne
cmpsl
add
les
popa
add
fwait
jmp
sar
imul
outsb
inc
sahf
js
scas
add
mov
imul
ds
xchg
ret
add
in
or
mov
xor
sub
cmp
insb
imul
xlat
push
andb
mov
insl
jnp
dec
inc
cmp
mov
pop
das
jbe
xor
jb
pop
lds
add
cmp
add
add
mov
inc
add
lods
arpl
add
add
xchg
dec
call
rolb
mov
stos
add
inc
xor
pop
jmp
xchg
scas
push
add
les
add
shlb
lods
xorb
pop
add
ss
mov
sub
push
push
rorl
out
adc
xchg
pusha
mov
pusha
hlt
inc
subb
add
dec
dec
mov
add
lcall
add
movsb
loopne
pushf
or
outsb
xor
dec
test
jno
xor
sbb
add
leave
test
add
jae
dec
and
lret
loopne
inc
js
gs
mov
add
sub
pop
pop
outsl
sub
aad
pop
xor
xchg
arpl
add
mov
cli
addr16
xchg
jne
test
mov
add
sahf
push
repz
cli
adc
addb
xor
or
pusha
lds
mov
mov
jnp
add
insb
mov
mov
mov
arpl
or
les
fnstenv
add
int3
bound
add
add
dec
cmp
xor
outsl
add
and
jns
shll
add
fdivrs
pop
cld
roll
ficoml
inc
lds
divb
iret
fcompl
into
add
sbb
shll
scas
jl
add
inc
adc
add
fucomip
popa
mov
call
mov
aad
and
mov
sbb
call
mov
mov
push
inc
test
in
and
lods
xor
aas
xchg
inc
xchg
jb
jge
enter
xchg
arpl
jecxz
mov
mov
add
sub
jae
add
inc
and
loopne
outsl
push
jns
add
dec
mov
add
outsb
es
pop
cld
add
pusha
mul
add
pop
sti
jl
ret
inc
add
mov
mov
push
pushf
xor
sub
mov
fnstsw
add
ror
scas
mov
sti
inc
lods
push
add
mov
dec
out
xchg
or
add
inc
rep
je
jmp
jnp
leave
cmpsb
push
cwtl
mov
mov
jo
test
adc
rcll
xchg
lea
and
dec
stos
test
xchg
inc
cmp
dec
cwtl
cmp
jnp
popf
cltd
xorb
nop
add
ret
ret
aam
xchg
jne
cmc
jg
call
shl
testb
jecxz
add
mov
and
ljmp
pop
popa
mov
xor
pop
insb
add
and
jo
jge
cmp
aaa
add
mov
mov
mov
add
pop
jge
push
jb
movsb
inc
popa
fcmovu
push
cmpsb
fsubs
add
ja
xchg
mov
add
xchg
idiv
mov
push
cmp
pop
and
fcomps
add
inc
mov
cmp
jns
add
and
imul
stos
and
mov
pop
inc
enter
dec
cli
jp
pusha
fdivrl
mov
inc
or
xchg
insl
pop
loope
pop
pop
imul
fisttpll
sbb
add
cltd
adc
loope
dec
pop
pop
mov
inc
in
mov
mov
add
push
cli
xchg
pop
enter
sbb
out
addb
jl
movsl
push
and
mov
pop
iret
loope
mov
mov
sbb
dec
sub
dec
jmp
popf
orl
aaa
ret
divb
lahf
arpl
add
push
invd
dec
inc
les
push
fldcw
jnp
popf
cmpsl
or
push
fadds
inc
cmp
adc
xchg
pop
add
aad
mov
jne
xor
vmwrite
lods
dec
jle
pop
pop
mov
add
and
sbb
cmpsb
push
xor
adc
fnsave
ja
gs
cmp
sbb
mov
or
test
stos
dec
add
push
pop
fdivrs
jp
xor
sub
jno
add
xor
subb
adc
mov
xchg
in
iret
dec
outsl
xchg
add
inc
outsb
cmpsb
dec
inc
test
ror
pop
jo
lcall
aam
jle
xchg
cmp
add
inc
mov
add
push
inc
shl
movsl
repnz
add
sub
or
in
lods
add
push
js
push
push
clc
sbb
popa
mov
add
mov
mov
adc
mov
sahf
rcl
rolb
fucomip
pop
xchg
and
mov
or
subl
cmp
xor
addb
push
mov
jns
sahf
push
cmpxchg
push
mov
add
loopne
icebp
adc
inc
ret
test
aam
test
inc
mov
dec
sub
sarl
xchg
sti
push
add
fistpl
mov
lahf
add
ficoms
fsin
add
bound
and
fsubrl
push
test
addr16
xor
xchg
shlb
mov
int3
pop
rclb
arpl
sbb
sbb
jl
xchg
cmp
xchg
les
js
in
and
imul
xchg
inc
ds
add
jb
xchg
jae
push
inc
jl
das
pop
pop
or
or
roll
adc
inc
out
mov
add
jns
cmpsl
std
xchg
cmp
rolb
lds
test
clc
jns
add
arpl
cmp
jmp
sbb
fldenv
jae
add
fidivs
shll
mov
push
aaa
pop
jle
add
sub
and
mov
cmpsb
rorb
adc
inc
inc
pop
mov
inc
psubusw
loopne
jno
add
ja
daa
shrl
insl
and
xchg
ret
push
les
repnz
dec
and
cmp
cwtl
call
loope
dec
inc
mov
add
mov
fdivl
arpl
in
and
mov
or
rorb
jno
loope
xor
pop
arpl
fisubl
or
xchg
and
out
int3
cli
int
shrb
add
lods
lea
jp
arpl
call
add
ficoms
adc
xor
repnz
ffreep
dec
add
inc
nop
sub
sti
std
add
aam
pusha
rcrb
movsl
add
xor
ljmp
or
push
and
sub
pop
sahf
add
outsb
insl
add
adc
cmp
xchg
lcall
sub
mov
aaa
roll
inc
inc
sahf
pop
or
sbbb
xor
lds
cmp
repz
movb
xchg
jl
inc
add
fs
imul
loop
add
mov
int3
push
jmp
xor
mov
pop
add
jnp
adc
int3
push
add
ja
inc
sbb
movsl
add
stos
sbb
add
inc
fbstp
pop
orb
xor
xor
mov
xchg
shlb
mov
or
mov
jo
cld
bound
stc
js
popa
add
movswl
add
adc
add
inc
cmp
adc
idiv
push
mov
fwait
jl
push
shlb
js
jbe
mov
mov
icebp
incb
jo
lahf
inc
cltd
insl
sbb
xchg
movsb
lods
mov
pop
shrb
mov
call
push
cltd
fcmovnbe
sbb
lock
dec
inc
mov
fidivl
sbb
shrb
cmpsb
cltd
clc
add
in
bound
xorb
sahf
rol
test
out
in
in
sahf
mov
pop
add
or
mov
dec
push
js
cmc
mov
cmp
imul
fdivrs
pushf
add
xchg
add
sbb
testb
pop
pop
inc
lds
orl
add
jl
jnp
movsb
fbstp
ja
mov
outsl
cmpsb
lods
jge
add
pop
repz
mov
int3
mov
fidivs
add
inc
icebp
out
cld
add
jo
add
fs
gs
pop
rcrl
xor
add
add
add
lock
add
inc
roll
stc
jle
add
clc
push
and
rcrb
icebp
adcl
repz
jns
mov
dec
mov
inc
add
xlat
cmpsl
add
pushf
roll
mov
enter
sbb
subb
jecxz
and
aad
sub
arpl
mov
jg
jb
divl
insl
cld
add
roll
in
cmp
and
dec
ret
inc
ret
push
push
aam
add
in
cmp
add
scas
arpl
out
add
rorb
in
jmp
arpl
cmp
add
inc
jle
stc
add
and
cmp
out
jg
inc
js
add
cmc
mov
inc
fisubs
aad
mov
sub
cld
cli
mov
mov
jmp
pop
test
scas
insl
sbb
lods
xor
int3
arpl
pusha
js
mov
pop
das
out
shll
pop
add
fldcw
xchg
test
loopne
mov
add
out
cli
jg
fstpl
cmp
shlb
sbb
stc
fwait
mov
or
add
loope
int3
mov
mov
sub
test
jge
inc
or
dec
cmp
sub
idivl
or
lods
shl
sub
stc
pop
add
add
sbb
cwtl
adc
loop
pop
fistps
roll
push
xchg
mov
add
into
dec
mov
or
aas
and
repz
xor
arpl
xorl
jns
sub
add
xchg
inc
js
mov
lahf
arpl
add
fidivs
stc
mov
add
cmp
sub
test
xchg
cmp
fnstsw
je
mov
out
inc
popf
in
outsb
sub
mov
jecxz
imul
outsb
add
jnp
mov
jg
jmp
rcrb
add
bound
add
mov
scas
cmp
loopne
xchg
shll
xchg
push
mov
jecxz
mov
pusha
push
mov
into
inc
out
fwait
sbb
xchg
es
sub
jnp
add
add
or
pop
inc
push
movsl
cld
xchg
mov
mov
ja
loope
loop
movl
jo
adc
add
pusha
aad
imul
xchg
ret
popa
arpl
xchg
inc
sarb
gs
pop
xor
jge
iret
loopne
ds
rcl
or
mov
into
jl
jge
jae
push
dec
popf
movsb
stc
loopne
jno
negb
movb
rcrb
dec
mov
jg
add
or
hlt
inc
fs
add
add
pop
and
pop
lds
xor
add
jg
jae
stos
sub
shll
movups
clc
sbb
pop
and
addr16
mov
call
xchg
add
ret
add
imul
fistpl
sbb
pusha
jns
add
stc
popf
leave
call
out
adc
repz
clc
pop
add
jecxz
dec
jg
shrl
add
inc
mov
add
jle
icebp
add
cmp
or
dec
sub
imul
adc
inc
jl
push
clc
add
loop
cld
push
jnp
inc
add
push
jg
scas
xchg
push
aas
push
arpl
clc
xchg
pop
sti
or
aaa
add
or
lahf
icebp
jle
ret
rclb
or
jp
mov
fldl
jnp
jmp
cmpsl
lea
sub
push
add
add
sbb
shl
and
pop
jmp
and
pop
movsb
add
lret
pusha
add
adc
test
add
mov
imul
addb
mov
jmp
add
mul
xchg
and
mov
sub
sub
inc
jnp
inc
xorb
pop
ror
mov
sub
add
lret
adc
or
mov
cmp
stc
and
inc
add
sti
outsb
ret
insb
incl
bound
or
pop
repz
mov
stc
push
shlb
sub
fadd
pop
les
std
xchg
insb
shll
jae
imul
aad
dec
in
and
inc
mov
ds
inc
jge
lahf
mov
dec
xor
stos
ret
cld
test
jo
jp
add
xchg
lods
cs
add
movsl
inc
popf
pop
js
sbb
inc
pop
jb
jne
jnp
add
sti
xor
pop
and
gs
sbb
xor
into
cmp
add
inc
adc
pop
mov
scas
test
inc
cmc
and
bound
andb
sbb
outsb
mov
test
rcr
mov
inc
cmc
mov
aas
add
xchg
pop
stos
cmp
lds
int3
adc
mov
push
jge
or
push
lea
lret
adc
mov
insb
inc
rcr
pusha
pop
xchg
cmp
in
shlb
dec
cltd
jg
cmp
data16
sbb
ret
into
test
repnz
sbb
pop
dec
jge
xor
in
push
sbbb
add
xchg
dec
js
fs
and
stos
jle
pop
fwait
jmp
fcmovnu
mov
insb
pop
xchg
sub
adc
or
inc
sbb
pop
outsl
inc
stos
scas
push
jne
mov
inc
pop
jmp
rcrl
and
or
icebp
popa
inc
jb
add
scas
mov
or
fiaddl
call
nop
dec
jge
sub
inc
inc
mov
add
mov
ljmp
and
mulb
inc
out
sbb
add
imul
arpl
outsl
loope
ds
mov
pop
dec
mov
adc
xor
xor
sub
pop
sub
sti
roll
xor
call
lret
mov
add
push
movsw
sbb
add
mov
in
mov
faddl
inc
mov
outsb
sti
jne
add
in
popa
inc
xchg
in
test
xorb
mov
shlb
push
xor
dec
jmp
arpl
sub
mov
scas
cwtl
mov
and
in
es
out
loope
sub
les
add
xchg
xchg
repz
pop
add
lret
ja
ds
inc
orb
pushf
mov
fmul
add
in
outsb
pop
std
add
xchg
add
idivl
xor
loopne
cmc
cmpsb
cmp
pop
ss
inc
f2xm1
push
pop
roll
mov
lahf
add
cli
mov
insb
dec
icebp
stos
rclb
xchg
lcall
jg
out
pop
mov
es
and
xchg
xor
popf
add
pop
inc
mov
add
ja
scas
mov
inc
shrb
loopne
popf
add
dec
inc
idivl
andb
add
mov
mov
inc
sub
in
add
jb
inc
cmp
pop
push
jns
std
sarb
xchg
dec
sub
lods
shlb
add
jbe
dec
and
arpl
add
imul
xchg
rol
stos
sbb
mov
cmpsl
cmp
cmp
ud2
sub
push
jnp
xchg
push
nop
pop
add
lods
clc
xor
enter
add
xchg
insb
in
xchg
add
icebp
or
inc
push
insb
cmp
or
aam
addb
js
shll
sbb
shlb
dec
fwait
add
jl
jmp
sub
push
sbb
in
ret
inc
fdivr
inc
xchg
mov
imul
pop
test
add
adc
cmp
inc
popa
aas
popf
sti
add
push
xchg
pop
pop
add
jl
xor
imul
mov
cmp
add
pop
enter
add
pop
jl
bound
add
sbb
xor
sub
pop
add
pop
inc
or
add
or
cmpl
xchg
inc
loope
add
insb
sub
push
and
jne
mov
or
xorb
add
add
dec
jno
adcl
shll
inc
mov
add
inc
dec
and
jo
fsubl
arpl
inc
mov
or
scas
dec
push
or
xchg
daa
hlt
inc
add
and
test
pop
in
cmp
mov
jle
add
shlb
test
add
arpl
and
ljmp
cmp
ror
loop
add
jecxz
mov
add
add
in
cmpsb
test
or
outsb
push
mov
cmp
into
push
fisubs
jb
xchg
mull
jg
pop
test
arpl
popa
in
inc
rcll
jns
add
pop
inc
or
hlt
loope
insl
push
mov
std
xor
cmpsl
test
test
jo
pmaddwd
pop
ja
add
dec
dec
movb
add
sub
jecxz
add
outsl
inc
inc
xchg
jp
pop
cmp
jl
mov
shr
adc
lret
sub
mov
mov
mov
mov
push
lds
inc
and
and
adc
pop
dec
rcll
or
or
xor
sbb
add
xor
aas
add
lcall
mov
enter
add
in
fnstsw
pop
pusha
inc
cmp
and
add
mov
dec
inc
pop
iret
ret
jmp
insl
sub
mov
add
sahf
xor
lcall
loopne
mov
iret
sub
cmpsl
jbe
or
xor
mov
enter
add
test
add
fucomp
push
jnp
add
fimuls
xor
and
test
adc
inc
jns
cmpsl
and
pop
fcoml
jb
pop
ffreep
xor
loop
jmp
dec
dec
mov
cmpsb
xor
stos
sub
sbb
dec
add
mov
sar
gs
xlat
push
and
jl
addb
jle
xchg
rol
push
or
out
inc
dec
add
cli
or
mov
and
xchg
mov
jecxz
sahf
orb
imul
and
jnp
in
add
data16
bound
jno
inc
notb
add
xor
pop
xchg
add
push
jnp
shl
insl
jb
pop
mov
mov
mov
add
xor
leave
aas
in
sti
dec
push
xor
lea
rclb
test
fsubl
pop
add
or
mov
ficoms
pusha
pop
jae
inc
add
shlb
cwtl
mov
xor
add
add
pop
out
xchg
cmp
cmpsl
add
fwait
pop
mov
stos
jle
in
add
ret
mov
orl
dec
cmpsl
pop
mov
sbb
xchg
pop
adc
xor
or
xchg
insb
iret
cmpsb
add
cmp
das
inc
push
in
test
shl
add
mov
cwtl
leave
add
incb
ret
jg
cmp
push
call
addb
scas
push
movsl
add
loopne
xor
fldl
inc
psraw
sub
add
movsb
pop
in
mov
pop
mov
add
pop
stos
or
test
mov
or
inc
and
mov
ds
add
mov
popf
inc
fxch
pop
push
mov
out
cmp
incl
mov
in
iret
inc
dec
adc
xchg
pop
fwait
or
pop
pop
ds
add
sub
xchg
inc
add
xchg
aaa
popl
inc
ljmp
jno
adc
cmp
jle
sbb
inc
jno
fsub
les
cmp
insb
add
mov
fadds
add
add
cmp
pop
ret
inc
lea
push
jne
dec
push
mov
xor
sbb
push
shlb
add
jp
pushf
jp
jns
add
jge
xor
push
add
push
das
dec
inc
andb
push
fwait
adcl
cmp
outsb
ret
mov
pop
movsb
xor
sub
xor
dec
cmp
push
addb
xchg
or
jne
add
mov
lds
lock
loope
lods
mov
or
jo
or
xor
rcll
add
sahf
addb
std
lds
pop
mov
movsb
inc
imull
cmp
fcomi
imul
and
xchg
test
enter
int
xlat
add
sbb
mov
imul
cmp
inc
pop
jne
add
add
movsl
push
cwtl
push
sahf
jl
xchg
and
mov
sti
aam
test
add
roll
pop
arpl
insl
ljmp
push
jmp
xor
aam
out
inc
add
add
jge
cmpsb
sti
add
push
add
mov
in
ftst
cmpsb
lret
cmp
imul
jbe
cltd
xor
jmp
pop
sbb
scas
mov
popa
jmp
jo
add
insb
and
je
mov
stos
and
out
jnp
testb
jge
rol
pop
in
insb
add
lea
sbb
xchg
add
dec
out
cmpsb
adc
add
das
push
std
add
lods
inc
add
ret
je
nop
pushf
cwtl
arpl
jne
mov
add
or
pop
cmp
insb
dec
addr16
adc
shll
subb
sahf
dec
repz
mov
repnz
jmp
sbbb
or
cmp
add
mov
and
call
lret
add
cmp
clc
sub
cmp
dec
test
adc
push
es
cmp
cmc
add
sub
cmpsb
add
enter
inc
mov
push
dec
mov
push
add
popf
and
pop
xor
cmpsb
cmp
shlb
pop
sbb
cmpsl
xchg
adc
mov
or
stos
jl
dec
movzwl
loopne
divl
mov
dec
dec
add
iret
hlt
inc
pop
mov
add
clc
or
mov
popa
call
aam
add
xchg
inc
fucomip
pop
add
nop
mov
loope
cmpsb
into
in
cs
mov
jnp
arpl
push
add
stc
xchg
js
add
sub
ret
adc
icebp
dec
push
add
dec
sbb
leave
jnp
pop
cld
xchg
outsl
add
aad
or
clc
and
pusha
out
mov
popa
or
cmp
cmp
sbb
adc
push
sbb
push
mov
dec
cmp
je
dec
inc
call
enter
push
xor
add
push
in
sahf
icebp
adc
inc
pop
int3
mov
arpl
dec
pop
stos
xorb
and
xchg
nop
mov
cltd
repz
lcall
shlb
ss
jmp
dec
add
jbe
inc
rclb
push
sarb
cltd
sbb
sbb
fbstp
pushw
pop
ss
pop
inc
push
sub
add
popl
or
incb
mov
sarl
mov
arpl
outsb
pop
add
mov
add
dec
andb
aam
mov
mov
sbb
aas
add
bound
inc
js
lods
rolb
inc
sti
insb
sub
arpl
sbb
test
add
lea
mov
mov
je
mov
mov
and
or
fisttpll
call
lahf
jle
outsl
adc
pusha
push
pop
mov
arpl
push
cmp
test
rol
inc
orb
add
xchg
xor
add
pusha
test
in
add
in
cmp
jp
lods
jns
add
jge
fdivr
inc
rolb
adc
sub
lock
mov
lock
dec
cmp
add
mov
add
add
cmp
andb
or
xchg
xchg
shr
add
or
sbb
xchg
and
push
cmp
add
aad
xchg
inc
pop
cmpb
ja
xchg
shll
bound
lret
fdivl
cmp
inc
orl
pop
adc
push
les
pop
cs
out
test
rclb
mov
cmc
fs
push
inc
push
fldl
cmpsb
cld
loop
inc
and
mov
daa
xchg
push
movsb
add
test
lea
dec
mov
inc
sub
in
jecxz
repnz
arpl
xlat
stc
mov
int
mov
pusha
cmpsb
inc
mov
cmc
sub
into
cmp
add
ja
sarl
mov
out
rcrb
sti
add
inc
rolb
insb
sahf
dec
arpl
ljmp
cmpsb
adc
push
xor
call
add
push
clc
jmp
pop
insb
mov
fiadds
dec
ret
mov
lcall
imul
xor
jl
add
popf
fsubrp
mov
mov
das
push
cmp
inc
test
rcrb
cmp
popf
sbbb
gs
jl
pop
addb
adc
sub
adc
mov
inc
pop
roll
je
iret
scas
rclb
incl
dec
imulb
mov
mov
fidivs
add
xchg
add
push
mov
xchg
hlt
add
dec
jbe
and
pop
add
cmp
push
lcall
pop
xchg
loope
testb
and
subb
inc
gs
or
pop
outsb
dec
shlb
add
imul
push
loop
sahf
xor
and
pop
or
pop
add
or
mov
out
push
loopne
sub
sbb
add
rorb
rol
inc
int
lcall
ret
mov
add
add
jns
add
arpl
std
inc
dec
out
shr
inc
add
add
inc
pop
shlb
out
jg
mov
push
xchg
dec
jne
lock
ljmp
rclb
lods
pop
sbb
movsb
mov
fucomp
push
ljmp
cmp
inc
mov
mov
jl
pop
xchg
xor
sti
add
sbb
inc
mov
mov
add
daa
int
xchg
push
jbe
outsb
push
add
cwtl
mov
nop
add
rol
ds
mov
mov
dec
jge
add
bound
ds
xchg
leave
shll
sub
xor
xchg
fisubrl
pop
add
lds
sar
aaa
jge
iretw
mov
call
inc
cmp
push
push
push
add
inc
out
xor
jl
cmp
popf
mov
sub
testb
test
xchg
pop
or
add
xor
pop
adcb
dec
sub
imulb
inc
cmp
add
cwtl
insl
dec
cs
icebp
add
stos
rcr
aam
pop
mov
cmp
mov
pop
in
out
fiadds
insl
sub
push
imul
mov
cmpsl
jns
fmul
or
push
aas
int
mov
mov
shrl
loope
add
jno
stos
insb
insl
mov
adc
sub
aad
ljmp
inc
pop
sub
jle
out
add
icebp
mov
add
or
xchg
and
pop
push
mov
andb
roll
sar
and
mov
orb
dec
jmp
and
mov
inc
add
mov
movsl
adc
push
push
rclb
push
sbb
fldt
sub
test
add
out
inc
scas
xchg
add
or
jns
push
cmp
inc
pop
cmpsl
xchg
sbb
shrb
aad
test
out
add
pop
mov
fistps
add
int
call
enter
and
pusha
inc
and
fdivrs
sarl
pop
sub
ljmp
xchg
sbb
stc
add
mov
jb
adc
bound
shrb
out
xor
add
in
push
pop
jb
fwait
pushf
ja
and
cmp
es
and
cmp
das
jo
pop
or
sbb
mov
add
stc
into
mov
cmp
xchg
xchg
cld
fcom
mov
pop
add
dec
or
outsl
lods
add
icebp
inc
mov
sub
dec
imulb
inc
test
pushf
cmp
filds
sub
pop
dec
and
pop
pop
inc
in
daa
and
les
repnz
jp
pop
adc
loop
add
int3
sbb
jne
insl
add
inc
mov
dec
jmp
jle
mov
outsl
pop
mov
mov
add
and
add
inc
dec
sub
ficoms
arpl
lds
iret
pop
inc
test
cli
bound
outsl
pusha
mov
cwtl
aad
xlat
rcr
pop
loope
enter
mov
xor
out
out
jg
or
and
rcl
fwait
sbb
fadds
pop
mov
inc
outsl
adc
add
aam
pop
dec
add
push
cmp
and
es
xor
jl
mov
mov
jle
lahf
mov
shlb
inc
pop
add
xor
adc
pusha
xor
add
xchg
pop
fadd
insb
adc
dec
addb
jae
and
jg
pop
push
aas
cld
cmp
dec
subb
pop
mov
or
dec
inc
adc
pop
or
rorb
mov
ret
clc
add
xor
stc
push
sarl
roll
lods
pop
shrb
sbb
xor
add
nop
add
in
xor
nop
adc
add
push
dec
stos
pop
mov
inc
and
ficoml
and
sbb
cmc
mov
add
inc
arpl
add
ret
jl
mov
mov
jns
addb
shlb
pinsrw
inc
lret
add
sti
sbb
dec
dec
xorb
add
pop
push
add
xlat
dec
nop
xor
popf
push
add
fildl
pop
add
idivb
inc
inc
mov
insl
sbb
popf
add
sub
dec
mov
das
mov
push
push
lret
pusha
xchg
dec
inc
or
mov
repnz
add
popl
mov
test
or
add
out
mov
jmp
repnz
jo
mov
rorb
lcall
aaa
add
and
add
lock
mov
inc
idiv
std
pop
mov
xor
arpl
adc
loop
mov
add
shlb
push
add
mov
leave
xchg
lock
add
or
add
outsb
inc
loope
sbb
pop
adc
and
mov
push
mov
aas
stc
add
adc
ljmp
fs
shrb
or
mov
pop
push
scas
aaa
loopne
add
les
inc
xchg
ljmp
cmpsl
negl
in
dec
jbe
jecxz
movsb
inc
cmp
push
add
aaa
iret
jp
pop
rcrb
into
add
stc
inc
mov
push
mov
popf
pop
imul
mov
int
pusha
push
repz
movsb
mov
cs
daa
add
pop
pop
sub
xchg
lods
sub
lods
xor
hlt
push
leave
add
sarb
fnstcw
lea
pushf
rol
outsl
arpl
test
push
mov
nop
pop
roll
daa
pop
mov
hlt
adc
sbb
movsb
stc
mov
or
ja
fistpl
add
fdivl
lds
jl
and
add
sub
rcrb
outsb
iret
add
jmp
rcll
dec
pop
mov
fldl
xor
push
out
psubb
add
popa
jb
out
test
mov
inc
push
xchg
pop
int3
ljmp
lods
jnp
inc
xchg
and
xor
fmul
or
add
in
jo
pop
jle
xchg
dec
orl
std
rcrb
dec
jb
add
add
movsl
fsubrl
add
outsl
std
sbb
adc
jbe
aad
inc
add
out
inc
les
mov
decb
fdivs
mov
daa
inc
push
mov
mov
mov
mov
cmp
cmpsb
add
add
sar
test
shrb
push
sbb
and
add
shlb
cmp
sbb
sub
xchg
aaa
mov
cmp
inc
mov
jp
lock
scas
jl
imul
push
pusha
and
je
jne
add
add
add
cmp
add
inc
xor
subb
jg
mov
mov
out
and
lds
add
inc
scas
jl
sub
fwait
rolb
add
sub
repnz
add
sti
pushf
fldcw
cmp
push
cmpl
inc
xchg
fistps
jecxz
loop
push
fsubrl
out
lea
pop
mov
add
mov
inc
push
push
popl
cmp
mov
bswap
sbb
aas
out
dec
addl
push
add
and
in
xor
cs
lret
adcb
arpl
add
lea
js
xor
inc
popf
xor
nop
divb
add
xchg
inc
lcall
xor
add
add
sbb
subps
add
bound
xor
loopne
gs
into
dec
add
cs
hlt
inc
dec
pushf
add
push
inc
adc
in
int3
addl
popf
jb
jnp
fmuls
xchg
add
in
imul
xor
arpl
hlt
cmp
add
inc
mov
inc
cmpsl
jmp
add
fimull
pop
test
add
not
shl
mov
popa
adc
add
fistl
add
sub
cmp
add
push
lcall
xlat
dec
or
push
inc
out
push
add
inc
jne
mov
imul
inc
inc
add
int3
or
xor
cld
and
add
push
jbe
inc
sahf
lahf
add
xor
inc
sahf
lods
js
jbe
add
xlat
int
sbb
pop
dec
add
pop
jbe
dec
mov
jo
push
add
lock
cltd
add
or
sahf
add
hlt
pop
fdivrs
mov
andb
clc
add
push
lcall
loope
or
mov
inc
ja
jle
ffree
push
loopne
daa
js
testb
scas
mov
adc
or
add
mov
lods
add
sub
push
add
fadd
stos
sbb
cs
loopne
dec
int
add
or
lock
and
inc
mov
add
hlt
sbb
push
loop
stc
add
xchg
std
jge
incb
jg
hlt
and
scas
push
inc
add
mov
add
xor
andl
cmpsl
xchg
lea
add
rolb
push
aas
addr16
hlt
push
inc
mov
mov
push
jnp
lds
xchg
rcrl
xchg
sub
js
sbb
sarb
cmp
add
xchg
mov
mov
scas
shlb
jge
stc
ss
rolb
adc
xor
in
add
mov
inc
and
push
daa
add
jne
shll
xchg
add
aad
mov
and
lods
out
ret
push
nop
xchg
cmc
outsb
jo
in
clc
aam
jne
add
sbb
out
adc
xchg
add
arpl
pop
dec
inc
rclb
dec
gs
shl
jg
std
inc
adc
loopne
jnp
lahf
add
mov
test
sbb
add
dec
adc
scas
sahf
loop
stos
pop
or
add
xor
or
sub
pop
daa
add
outsl
sarb
add
and
xchg
sbb
ret
loope
sbb
outsl
xchg
inc
cmpsl
mov
fs
fadd
add
adc
jb
roll
inc
addb
add
aam
mov
push
add
xor
inc
rorb
adc
cmc
lret
gs
jp
push
mov
cmp
pop
clc
cmpsl
inc
lahf
add
les
negl
sbb
leave
cwtl
mov
lods
dec
jo
mov
rolb
jecxz
out
arpl
mov
ja
sub
pop
jb
orb
sbb
inc
lret
mov
test
pop
dec
loopne
out
mov
pop
inc
scas
cltd
adc
cmp
shll
les
nop
and
rclb
dec
add
inc
es
js
jecxz
lret
jnp
scas
test
inc
inc
add
jb
inc
clc
jmp
sbb
cmp
adcb
and
sti
loope
add
test
xchg
add
xchg
sahf
mov
inc
dec
add
adc
dec
inc
cmpb
mov
lahf
add
std
mov
or
rcrl
pop
test
rol
push
in
push
pop
xchg
insb
add
sub
add
jnp
dec
mov
xor
sbb
fdivrs
add
xchg
add
xchg
call
jo
mov
iret
mov
push
enter
add
mov
inc
mov
pusha
xchg
hlt
sbbl
popa
add
test
or
addr16
xchg
jno
outsb
cmp
mov
push
mov
popa
loop
mov
aam
add
repnz
cmp
arpl
test
pop
pop
pop
rorl
orb
mov
or
xor
mulb
popf
jno
xadd
dec
add
pop
mov
cmp
mov
in
mov
add
push
aas
pop
jb
sub
jmp
pop
add
pop
or
add
out
jg
iret
faddl
add
lret
jb
push
addb
mov
cmpb
loopne
jp
sbb
push
int
pusha
lret
mov
mov
adcb
and
mov
scas
lret
fwait
pop
outsl
mov
flds
mov
jnp
ds
test
cmc
mov
sbb
mov
or
ret
add
jb
ss
mov
aam
faddl
or
xchg
add
std
fildl
push
leave
rolb
js
inc
cmp
add
dec
sbb
mov
push
cmp
inc
cli
aas
jecxz
jo
cmp
xorb
shlb
call
push
or
enter
mov
push
add
inc
rorl
or
pop
xchg
subb
cvtdq2ps
sahf
inc
push
add
cmc
sub
jl
xchg
and
add
stos
mov
adc
sbb
push
push
fimull
imul
pusha
pop
test
pushf
adc
cmp
push
sbb
pop
dec
or
add
inc
aam
test
outsl
mov
sbb
add
push
out
jecxz
stc
add
add
test
push
add
clc
inc
outsl
add
mov
sbb
cld
sbb
pop
in
add
out
inc
mov
add
outsl
add
jmp
and
outsb
add
sbb
mov
inc
and
push
nop
lock
or
mov
sar
jmp
insl
sub
jno
hlt
repnz
add
fnstcw
or
pop
jge
and
stos
add
xchg
add
sub
mulb
loopne
cmp
enter
mov
dec
sysenter
mov
pop
pusha
mov
add
mov
das
add
pop
push
outsl
pop
pop
pop
pusha
xchg
cltd
imul
push
cmp
fisubrl
add
movsb
cld
jl
add
dec
mov
dec
push
add
les
jnp
outsb
inc
push
lods
push
repz
arpl
test
rcrb
add
test
jmp
jb
add
inc
in
push
sbb
fisubrs
add
pmaddwd
xchg
aas
adcb
xor
mov
push
imul
out
fidivl
aaa
pop
add
jbe
jl
shl
imul
icebp
cwtl
cmp
dec
pop
insl
push
sahf
add
adc
inc
out
andb
add
cmp
stos
jge
jns
add
sbb
xor
add
sahf
rorl
into
jae
mov
or
inc
xchg
push
or
sahf
inc
addb
add
jmp
mov
mov
divb
add
pop
inc
call
add
stos
aaa
pop
inc
stos
shlb
pop
insb
add
popa
or
lods
lds
call
and
sub
out
arpl
ja
outsb
push
popa
lds
js
add
mov
or
dec
push
insb
add
in
aad
mov
adc
mov
adc
and
scas
xor
lods
xor
jle
add
jecxz
in
add
inc
sbbb
add
mov
dec
add
mov
dec
rcr
arpl
test
and
mov
inc
and
test
sub
jge
mov
pop
cs
sub
cmp
jle
sarl
and
push
add
fninit
cli
mov
add
add
push
je
jne
add
aad
movsb
cwtl
outsb
mov
add
iret
sub
jecxz
add
cmp
add
sarb
adc
add
test
ja
pop
push
pop
or
shlb
cmpsl
xor
add
xchg
pop
add
mov
lds
jg
ret
inc
dec
pop
add
add
dec
add
cmp
jp
add
sbb
cli
mov
inc
jmp
inc
leave
cmp
cmp
nop
repz
mov
ljmp
add
fstpl
pop
adc
test
or
pop
test
into
pop
add
bound
je
add
push
mov
add
sbb
xchg
add
je
lods
inc
adc
pusha
subl
fstpt
jecxz
rcrl
or
ret
into
sub
xchg
shrb
aam
jb
sar
sarl
cmp
sub
shlb
dec
leave
push
xchg
jge
test
fcoml
and
insl
xor
insb
jle
jnp
xchg
xchg
cltd
fisubrl
pop
inc
jl
cmpsl
stos
movsl
add
push
push
inc
mov
mov
lods
cld
shll
sub
add
repz
and
test
out
mov
in
add
scas
stc
push
mov
fistps
pusha
jge
push
in
faddp
cmp
rorb
sub
add
cld
mov
pop
add
sbb
mov
pop
out
fistpll
add
fiaddl
inc
lret
xchg
add
out
xor
add
and
ret
fimuls
add
fsubrl
pop
pop
jg
adc
fldl
cmp
inc
inc
push
fs
adc
push
lods
sbb
movsl
pusha
mov
add
xor
inc
mov
sahf
repz
dec
sti
add
sbb
add
das
jae
xchg
jb
add
iret
pop
fmul
sbb
inc
cmpsl
mov
pop
and
inc
loopne
add
idiv
inc
out
lea
arpl
mov
enter
cmp
inc
xchg
lock
add
sbb
adcl
mov
push
inc
push
and
or
cmpsl
add
pop
cmp
addr16
jge
dec
ror
xor
adc
sahf
aam
inc
inc
les
mov
push
xchg
pop
enter
add
out
outsb
jns
sbb
rolb
cmp
dec
arpl
mov
incb
aad
mov
sub
arpl
ret
leave
popa
dec
in
leave
add
outsb
in
stos
adc
negb
cltd
mov
inc
in
xchg
add
xchg
roll
mov
cli
inc
lret
sub
add
shrb
es
out
sbb
inc
xlat
add
repz
in
mov
and
out
loope
sub
xchg
and
inc
popa
jle
cmpsb
lea
xchg
sbb
mov
inc
pop
scas
adc
out
pop
js
add
call
cmp
jnp
mov
mov
sub
add
roll
lret
jo
test
xor
mov
pop
aaa
mov
jb
ds
or
cltd
mov
imul
bt
sub
aas
add
shrl
mov
jmp
fisubrl
cmp
out
inc
add
stc
in
add
js
rolb
pop
dec
mov
incl
adc
call
lldt
sbb
dec
or
inc
fildl
ret
push
adcb
dec
nop
imul
push
mov
adc
jp
repz
or
jmp
stos
xorb
sbb
jno
xchg
push
pop
je
fdivrs
or
int3
jle
rcr
mov
add
inc
movsb
test
hlt
or
bnd
sar
xorb
test
pop
filds
and
clc
shlb
mov
cmp
adc
inc
push
sub
lea
rcrl
push
adc
loop
jnp
inc
add
xor
les
add
mov
add
jmp
nop
jae
decl
cwtl
jb
jo
jmp
push
cwtl
das
add
pop
pop
push
insb
test
ljmp
add
popa
addb
and
loop
popf
insl
gs
xor
sbb
inc
mull
mov
pusha
add
aas
lret
movsl
addr16
or
scas
loopne
cmp
add
out
xor
jne
inc
xchg
js
and
lahf
add
add
xor
inc
mov
push
flds
jg
iret
int
lret
add
js
inc
popa
outsl
xchg
inc
and
add
xchg
and
add
mov
or
call
dec
add
or
mov
add
xor
pop
test
subl
loopne
test
add
pusha
dec
add
stos
sub
add
sbb
iret
sub
dec
xchg
cmpb
clc
sub
add
inc
or
iret
jbe
pop
outsl
pop
lods
push
rolb
xchg
jl
sbb
insl
jmp
sarb
mov
xchg
lret
cmp
mov
ror
mov
add
lds
sbb
imul
scas
sbb
icebp
mov
inc
pop
xor
jo
sub
or
mov
sbb
repnz
js
sti
scas
cs
inc
ror
push
addb
out
clc
fimuls
xchg
cmc
push
jo
fnstsw
bound
adc
and
out
stos
cld
gs
mov
bound
inc
or
sbb
push
push
and
movsb
jg
dec
mov
leave
adc
rorl
loopne
inc
cli
lock
add
inc
dec
fsub
add
lret
lahf
ljmp
mov
dec
je
add
shll
pop
psraw
add
lahf
les
js
add
xor
xor
pusha
pop
lods
jo
jecxz
cmp
scas
sbb
and
adc
jp
lock
aam
add
leave
mov
xor
in
cmc
add
stc
mov
cltd
loopne
push
cwtl
add
xorl
testb
gs
repz
out
test
aad
jmp
add
xchg
push
aam
ret
xor
mov
adc
add
pusha
sti
cwtl
nop
cmp
out
cs
rclb
adc
test
xor
adc
fptan
add
cmpsl
inc
gs
jbe
int3
sbb
mov
mov
lds
and
mov
pop
dec
inc
add
adc
add
dec
sarl
es
mov
scas
xor
outsl
add
or
add
loope
add
cmp
or
gs
std
cmp
jmp
subb
jp
sub
daa
add
dec
add
int3
dec
pusha
mov
repz
mov
add
cmp
jge
inc
jbe
mov
aas
cmp
pop
fiaddl
jo
pop
addb
in
pop
insb
iret
inc
push
rol
adc
pop
or
push
cmp
add
xor
jecxz
mov
jge
enter
loope
pop
push
fdivrl
add
arpl
loope
fwait
movsb
sahf
popf
out
and
cmp
add
and
addl
es
repz
push
cmp
ret
shlb
roll
inc
cmpsb
movsl
sub
orb
test
arpl
pop
call
in
dec
add
cmp
add
add
arpl
sti
add
jo
jnp
sbb
mov
dec
fnsave
inc
sub
ljmp
lcall
and
inc
mov
pop
arpl
mov
and
cmp
test
arpl
cmpsb
movsb
dec
test
push
jecxz
rolb
and
lcall
imul
xchg
inc
inc
jp
test
pop
add
cmpsb
loopne
inc
sub
gs
inc
fldenv
adc
int
shrb
popa
inc
call
push
add
xchg
add
mov
inc
ds
dec
xchg
sub
dec
xchg
cli
incl
rclb
lods
or
insb
test
mov
add
inc
mov
aad
dec
adc
aas
adc
sar
adc
leave
inc
fidivl
adc
sub
push
test
rorb
inc
loope
cmp
jns
xor
sbbb
movsb
imul
decl
push
xlat
dec
mov
mov
inc
add
sub
xchg
shlb
inc
add
mov
pop
lock
xlat
inc
pop
xor
sbb
cmp
std
and
sub
int3
lret
dec
inc
leave
add
popa
push
inc
xchg
add
fldl
fistpl
aam
js
insb
rcll
push
and
add
mov
push
sub
aad
testl
loopne
jecxz
movsb
xchg
add
mov
mov
test
add
out
jge
or
jg
dec
adc
rolb
jmp
rolb
loop
scas
cld
add
inc
shlb
mov
shl
or
dec
jnp
cmp
jns
and
incb
add
fiadds
test
sub
daa
inc
pop
and
cmpl
mov
les
cmp
test
mov
aaa
mov
xchg
lds
dec
mov
jns
nop
jmp
and
sti
add
add
mov
rcr
pop
out
pop
and
testb
sub
mov
inc
idivb
mov
inc
cmc
inc
aad
hlt
dec
cs
cmpl
lods
repz
out
jg
iret
inc
std
mov
jecxz
cli
add
push
dec
inc
add
in
lret
sbb
repnz
mov
push
stos
push
inc
inc
in
xchg
sbb
mov
push
rcrl
loope
test
cmp
add
adc
xchg
pop
cmc
mov
leave
mov
add
dec
mov
jg
imul
das
sub
rolb
dec
adc
xchg
leave
shll
cwtl
movsb
add
mov
mov
in
sub
jnp
add
das
lcall
xorb
mov
jnp
lcall
cmp
jl
ret
dec
in
sarb
add
pop
and
pusha
xchg
mov
int3
add
inc
add
mov
shlb
fwait
adc
dec
mov
xchg
mov
add
xor
mov
fildl
xchg
daa
flds
clc
push
test
insb
adc
ret
jno
cs
push
add
adc
and
loopne
negl
mov
shl
pop
enter
jbe
inc
add
lock
mov
mov
std
add
jnp
icebp
pop
cmp
in
test
repz
popa
mov
je
dec
inc
inc
xor
xor
cmp
inc
adc
pop
push
nop
out
jl
iret
add
mov
and
pop
push
mov
xor
dec
mov
int
jg
jl
test
xchg
pop
add
fstps
jp
add
in
ret
mov
dec
imull
mov
movsb
or
add
or
add
cmc
pop
pop
aaa
cmp
rcr
push
sub
mov
and
add
mov
mov
push
scas
cli
mov
gs
int3
aas
push
sti
data16
add
dec
rclb
inc
lret
add
dec
xchg
add
xor
bnd
inc
lret
cmp
outsb
cmp
jne
xchg
cli
push
fiadds
xor
add
jl
in
jae
out
lldt
mov
or
jnp
mov
in
xchg
jo
pop
sarb
inc
aaa
aam
jb
nop
push
add
stos
shll
js
push
hlt
sbb
xchg
fs
and
stos
add
aam
mov
mov
nop
jae
add
add
pop
inc
mov
lock
jo
scas
add
shlb
pop
xchg
iret
mov
cmp
dec
ds
sahf
cmp
stos
or
push
fiadds
popl
ret
lret
adc
jecxz
dec
xchg
and
xor
mov
in
add
mov
jmp
ds
pushf
insl
idiv
hlt
subb
aas
js
pop
sub
cmpsb
xchg
fildl
mov
jo
jne
push
mov
or
and
and
add
dec
fdivrs
add
dec
sbb
fwait
cmp
jmp
clc
pushf
and
pop
mov
roll
nop
push
fwait
dec
pop
call
fisubrs
cmp
pop
lret
cmp
lds
sub
push
dec
shll
leave
sti
mov
lods
jle
pop
sahf
add
pop
sbb
int
push
stc
rolb
inc
cmpsb
lods
loope
sbb
and
pop
in
adc
sbb
add
jp
push
xor
xlat
loopne
cld
testl
jecxz
lahf
stc
jae
aas
mov
test
pmulhuw
sbb
dec
cmp
outsb
je
xchg
xchg
imulb
cltd
stos
mov
pop
subl
cmpsb
or
rcrl
dec
lock
mov
pusha
lret
loope
dec
mov
scas
xchg
add
sub
iret
xor
add
lock
loopne
repnz
add
pop
pusha
test
movl
jge
cmp
add
adc
xchg
scas
and
add
popa
xchg
adcl
dec
add
push
jg
mov
pop
xor
ret
add
ljmp
adc
dec
loopne
rcrb
xchg
je
shlb
adc
pop
sarl
popl
jecxz
je
pop
call
dec
cmp
lret
popf
pop
mov
xor
cmp
cmp
push
rcr
add
jb
stos
mov
dec
inc
add
xchg
aaa
pop
cwtl
ret
or
add
dec
aam
arpl
cmc
filds
lcall
xchg
pop
mov
dec
or
test
je
lods
rcrb
test
mov
repz
and
out
add
sbb
xchg
add
push
adc
loop
sub
bound
mov
sbb
fcoml
add
cwtl
xchg
ja
add
adc
movsl
mov
add
daa
mov
add
je
jmp
clc
xchg
dec
mov
push
in
repz
add
es
arpl
loopne
mov
int
in
mov
sub
dec
mov
mov
pop
or
addr16
add
sbb
add
xchg
xlat
jl
inc
sub
push
inc
inc
mov
je
ja
xchg
jge
push
cli
add
negl
jp
clc
and
pop
lcall
jnp
push
mov
inc
in
les
add
bound
sbb
xor
iret
lock
ret
addl
rcrb
repnz
jg,pn
push
pop
pop
pop
out
inc
inc
pop
sub
add
movb
insb
fisubl
add
icebp
inc
out
aas
mov
push
xchg
push
ss
adc
fwait
push
push
shlb
xchg
jl
int3
xchg
push
inc
mov
mov
cmp
daa
jno
add
sbb
leave
mov
clc
mov
jecxz
xchg
mov
mov
dec
jne
add
das
ljmp
scas
hlt
aaa
xchg
sub
adc
aad
xor
movl
fucomp
rolb
pop
xchg
adc
je
mov
loopne
fisubrs
insl
push
add
or
xor
adc
add
fiaddl
jge
cmp
fs
fnstenv
pusha
add
repz
xchg
xor
xor
push
or
sub
es
add
pop
sbb
inc
sbb
in
ds
in
jl
add
and
sbb
sarb
inc
pop
repz
add
addr16
add
jge
add
jle
or
shlb
fwait
inc
cmp
rcrl
les
inc
sarb
mov
pavgb
fadds
push
lods
arpl
mov
ret
inc
cmp
push
addl
jne
jb
js
add
arpl
cmp
add
pop
out
cmp
mov
sar
mov
cmp
cmp
adcb
stc
add
and
jns
ds
and
add
loopne
addl
pop
add
stos
sbbb
push
adc
and
xchg
jae
inc
jmp
add
lds
lahf
mov
mov
add
shl
das
mov
sub
mov
add
inc
add
and
scas
and
ss
mov
pop
push
xor
scas
add
fcoml
inc
pop
inc
test
out
jg
das
adc
enter
les
inc
mov
jae
add
test
inc
clc
dec
ljmp
and
dec
sbb
fadd
mov
xor
add
rcr
mov
sbb
stos
rolb
ss
inc
mov
or
push
adc
mov
cmpsb
test
mov
rol
mov
insl
pop
call
jecxz
aaa
hlt
jmp
lods
sbb
stos
mov
test
dec
scas
mov
stc
push
iret
add
jnp
insl
lret
mov
push
pop
or
and
sti
pop
cltd
or
int3
jo
jle
inc
andb
add
cmp
inc
stos
loopne
ret
jle
aaa
dec
daa
out
and
orl
and
add
stc
mov
cmp
lret
add
movsl
lods
jno
dec
es
jno
add
jnp
popl
sbb
sbb
fldenv
inc
popf
inc
mov
loope
pop
sarl
hlt
push
sbb
femms
inc
cld
mov
inc
aaa
cld
jge
cli
sbb
xorl
sub
add
dec
fdiv
push
push
mov
leave
jns
add
lea
or
push
aad
jb
sbb
les
in
aas
inc
mov
mov
sti
inc
add
das
mov
rolb
add
inc
xchg
dec
pop
cmp
movsl
insl
inc
xlat
pop
mov
mov
inc
mov
jg
add
arpl
das
xor
lea
dec
cwtl
bound
lock
cmp
lds
cmpl
add
int
add
xor
in
stos
pop
add
xor
push
xchg
cmpsb
testb
data16
lds
xchg
push
inc
fmull
sbb
mov
imul
iret
inc
add
and
push
push
ret
jnp
shlb
sub
mov
and
dec
add
in
je
popf
fildll
push
test
cmp
mov
fiaddl
jnp
aam
ds
add
notb
pop
test
fsub
add
sub
inc
adc
sbb
mov
popf
ja
mov
test
inc
rorb
rorb
push
mov
push
inc
inc
and
inc
mov
xlat
xor
daa
inc
add
mov
lahf
inc
add
push
cmpl
sar
lds
sbbb
mov
or
fstps
add
ja
addr16
in
add
cmp
lret
add
mov
inc
jno
add
stos
mov
out
add
cld
sub
lahf
add
fs
movlps
sbb
push
pop
lret
inc
fiadds
mov
cmp
xchg
pop
das
stc
into
rolb
sub
clc
jne
add
and
add
push
jno
mov
jae
in
sahf
add
loopne
gs
sbb
into
rorb
lock
mov
popf
add
aam
sbb
inc
iret
and
jecxz
mov
rclb
xor
fistpll
push
sbb
sahf
mov
jp
inc
lods
or
jo
add
xchg
arpl
inc
test
lahf
popa
xchg
push
rcl
ret
jg
enter
or
dec
mov
das
shlb
mov
pop
jmp
mov
cmp
or
adc
dec
sbb
outsb
push
test
add
push
mov
aad
mov
int3
push
sahf
dec
add
jae
ret
cmpsl
je
cmpsb
pusha
xchg
push
jecxz
shrl
adcb
mov
pusha
add
adc
sarb
scas
imul
sbb
arpl
add
fs
xchg
sub
flds
jl
xchg
ja
fwait
add
inc
out
pop
add
xchg
lret
loop
lods
push
loopne
cmp
mov
iret
enter
jns
add
xchg
pop
cmp
pushf
add
pop
out
sub
int3
cmp
aaa
jmp
add
arpl
mov
ret
jecxz
int3
mov
inc
sub
aad
pop
mov
add
cmc
ret
push
add
sbb
or
gs
adc
pop
mov
mov
dec
popa
add
loopne
add
push
imul
dec
iret
mov
xor
add
dec
or
mov
adc
testl
shrb
add
js
sbb
ljmp
clc
add
add
xor
shll
add
adc
fnstenv
jne
jnp
in
inc
add
jecxz
fstl
movsl
jnp
add
and
add
push
loopne
xor
repnz
pop
in
or
xor
sbbb
jecxz
add
add
sahf
call
dec
push
filds
adc
outsl
pop
push
sub
shlb
xchg
jae
sub
inc
std
adc
or
mov
ss
mov
arpl
fs
add
jnp
and
push
add
arpl
inc
pop
popf
movb
roll
ret
xor
jge
jno
pop
add
cmp
sbb
mov
ret
sub
icebp
add
out
fwait
dec
mov
into
je
xor
shl
sbb
idivb
mov
shll
fisttpl
movsb
or
jns
jbe
add
xor
jp
xor
sarb
sbb
add
test
sbbb
add
adc
or
mov
enter
dec
add
ljmp
jne
add
ror
pop
dec
add
imul
add
add
aam
fucom
xchg
xor
cmpsl
add
mov
push
dec
icebp
rolb
adc
xor
sti
fs
fisubrs
pop
shlb
sbb
test
sarb
jp
mov
ret
or
cmp
shll
add
enter
add
or
push
fiaddl
inc
or
jbe
les
sbb
inc
mov
or
add
mov
push
shrb
mov
xor
test
inc
ljmp
add
rol
add
push
dec
loope
dec
je
add
xchg
add
push
xchg
jg
mov
jecxz
nop
mov
cmc
xor
shll
push
xlat
divl
xor
ret
adc
jo
add
ds
inc
adc
inc
xlat
jne
mov
add
and
es
xlat
inc
sti
xor
aas
inc
in
into
rorl
and
sub
jbe
jecxz
pop
add
add
nop
pop
pop
push
lret
inc
push
sbb
lods
xchg
mov
aas
jno
add
jns
popa
add
push
aam
jl
mov
add
adc
jmp
add
adc
add
xor
jecxz
push
in
pusha
xchg
cmp
repnz
fwait
push
or
xchg
add
pushf
pop
fistps
xchg
pop
rcrl
adc
add
and
cmp
dec
in
loopne
loop
and
pop
sbbl
cmpsb
cmp
jno
fdivrl
pop
pushf
icebp
popf
rclb
cmp
cmp
lods
sub
aas
push
daa
jle
lds
fwait
iret
shr
or
inc
jecxz
cmpl
insl
stc
scas
in
pop
add
js
pop
xchg
pop
add
inc
fwait
mov
inc
inc
mov
or
bound
int
push
and
xor
add
pop
push
inc
cmpsb
lock
sahf
insl
add
jp
cld
inc
xchg
add
adc
mov
or
rol
dec
add
ds
adc
and
mov
inc
add
inc
divb
enter
add
jae
fisubl
iret
test
addb
add
cmp
addl
cmpsb
mov
add
push
arpl
stos
mov
push
dec
add
dec
shlb
loope
imul
fcoms
mov
out
add
jge
stos
add
or
add
adc
stos
in
pop
xor
push
and
icebp
sub
add
push
push
sarl
incl
mov
in
mov
pop
cmc
test
sbb
fistl
rcl
cmp
xor
or
test
or
data16
repnz
lret
cmpsl
inc
mov
mov
xor
test
add
add
movsl
shll
xor
repnz
test
inc
scas
or
arpl
dec
or
jl
pop
dec
out
cmp
sub
xchg
push
rorl
mov
mov
dec
rol
add
push
adc
ljmp
inc
out
jl
dec
sahf
sbb
cmp
or
cli
loopne
mov
jmp
mov
sarb
lss
jb
test
in
movb
pop
mov
and
mov
push
aad
pop
shrl
scas
xchg
ret
dec
cli
mov
dec
inc
je
sahf
test
es
push
or
pop
push
jb
fdivs
nop
add
test
pusha
fadds
pop
cmp
arpl
mov
pop
or
add
inc
scas
enter
cmp
aaa
arpl
or
loopne
loope
push
popl
push
mov
adc
sub
loop
push
pop
aas
dec
push
insb
test
faddl
and
cmp
xchg
inc
outsl
rcrb
sbb
fnsave
shlb
inc
jbe
adc
pop
inc
xchg
pop
xlat
mov
sbb
mov
mov
mov
test
mov
add
or
pop
or
pop
sbb
int
aas
mov
add
test
xor
mov
sbbb
and
sbb
outsl
stos
je
cmpsb
filds
push
xchg
xchg
sub
pop
lret
add
arpl
add
xchg
or
dec
out
call
add
fs
pop
pushf
push
jo
add
cmp
add
loope
pop
cmp
cld
shrb
enter
aas
mov
push
pop
jg
int3
add
mov
or
xor
mov
rolb
sub
xchg
xor
roll
pop
inc
sbb
into
jne
or
shl
inc
fisttpl
add
shlb
int
xor
pop
fwait
rclb
ficoms
mov
xor
jl
addl
and
insl
lcall
mov
addr16
fstpt
repz
add
jo
adc
xor
mov
pop
mov
add
xchg
jno
in
push
add
dec
rorl
add
pop
movsl
adc
sbb
lret
shrl
ret
mov
dec
pop
inc
and
mov
jmp
mov
pop
scas
nop
cmp
jne
sub
sarb
sbb
roll
bound
and
popa
aam
pusha
stos
dec
insl
sarb
popl
movsb
rcl
sub
in
pop
loop
add
test
and
lea
cli
push
add
outsl
mov
xchg
popa
mulb
pop
mov
out
sub
ds
inc
cmp
add
jo
je
inc
sbb
xor
faddl
pushf
push
cmp
inc
jno
fdivrp
jb
xchg
and
rclb
push
inc
mov
inc
cli
inc
pop
cmp
jmp
nop
adc
mull
fnstsw
sbb
clc
das
movsl
and
fdivr
cmp
je
jo
sarb
and
xchg
pop
hlt
fistps
dec
ret
dec
cmp
add
pusha
push
and
add
mov
mov
repz
out
pop
cli
cmovae
nop
xchg
bound
or
mov
dec
out
pop
iret
inc
jl
xor
stos
mov
inc
rcl
testl
mov
and
inc
xchg
push
cmp
add
xchg
mov
inc
xchg
aad
loop
pop
ret
and
inc
mov
enter
pop
sub
jne
add
mov
fcmovnu
and
xorb
orb
xor
subb
mov
imul
aaa
pop
leave
jecxz
les
rcrl
add
xor
add
std
fdivrs
xchg
ljmp
mov
pusha
cwtl
push
add
mov
push
dec
pop
add
inc
jg
add
jmp
add
testl
loop
xor
jmp
or
cli
mul
dec
aaa
stc
dec
mov
arpl
mov
cltd
jb
pop
add
mov
mov
subl
pop
add
mov
cmp
add
loop
mov
push
rolb
lds
shrb
or
adc
pop
in
sti
fsubl
mov
stos
add
arpl
sub
icebp
or
dec
mov
cmp
in
push
orb
daa
loop
mov
xor
cmpsb
mov
pop
insb
shlb
in
fdiv
or
lea
lods
mov
bound
cmc
gs
jmp
add
push
fs
xchg
arpl
mov
adc
add
nop
pushl
mov
add
xlat
fiaddl
dec
ss
xchg
fwait
in
push
cltd
add
mov
cs
cli
sbb
mov
incb
iret
movsb
mov
movsl
mov
adc
jb
cmp
pop
mov
sbb
and
outsl
push
fdivrl
fsubs
push
add
inc
lods
jecxz
lahf
imul
sbbl
xor
popf
daa
outsl
iret
mov
lds
add
jle
mov
pop
cmp
inc
mov
push
shll
jns
pop
add
cmp
add
clc
pop
fsub
in
dec
rolb
in
stc
mov
cltd
sub
adc
sub
enter
mov
add
dec
cwtl
push
mov
ljmp
mov
xchg
xor
push
inc
xor
inc
cmpb
dec
and
dec
mov
pop
or
fildl
sub
ljmp
push
push
cli
mov
inc
jecxz
add
mov
pop
ds
push
inc
arpl
dec
xor
xorl
or
xor
lods
cwtl
cmc
push
mov
cs
jecxz
push
in
sbb
roll
xlat
xchg
adcb
inc
mov
loope
aas
pusha
xor
cmp
stos
or
aaa
inc
jo
add
inc
inc
cmp
cmp
out
out
sub
test
stc
cwtl
call
dec
jbe
rclb
inc
cmp
sbb
leave
cmpsl
inc
pop
push
aam
ljmp
movlps
cmpsl
mov
scas
xchg
push
pop
xor
cmpb
enter
inc
je
pop
aad
loopne
xor
cli
inc
jle
cmp
jnp
add
imul
repz
inc
call
insb
ret
nop
cmc
add
dec
cwtl
pop
pop
addb
add
lods
in
bound
cmp
cmp
or
adc
pop
add
popl
testb
mov
pop
scas
mov
js
adcb
add
fdivrl
pop
fmuls
mov
loope
mov
test
add
inc
outsb
out
pop
push
xor
idivl
inc
rolb
js
dec
repnz
outsl
ficoms
shlb
or
mov
sbb
fnstenv
mov
addr16
scas
jp
bound
nop
inc
adc
push
pop
cmp
add
sbb
inc
mov
add
push
js
pop
adc
sbb
add
ss
fisttpll
test
aas
dec
out
add
dec
test
mov
insl
inc
call
add
int3
sub
add
push
enter
add
inc
add
imul
stos
gs
loope
enter
aas
add
cli
cmc
add
jmp
fldl
pop
jns
nop
sbb
sub
inc
pop
xchg
jae
add
cwtl
inc
mov
addr16
xor
rclb
fwait
leave
inc
in
push
jnp
mov
jmp
faddl
mov
fbstp
loopne
xchg
iret
les
in
add
mov
subb
jb
aas
movsl
ficoms
pop
lcall
adc
mov
ss
add
sbb
add
mov
sbb
ja
mov
in
inc
adc
push
dec
shlb
dec
pop
insb
and
leave
icebp
movl
out
cmp
or
movsb
das
jo
popa
punpckldq
sbb
and
add
adc
add
xchg
imul
shrb
adc
aaa
popa
jecxz
and
xchg
inc
sti
movsb
arpl
add
cmp
bts
xchg
mov
push
mov
pushf
inc
sbb
cmp
mov
nop
ds
faddl
ss
pop
jo
xchg
shlb
mov
adc
xchg
repz
pushf
testb
pop
std
jecxz
inc
cmp
adc
jo
mov
add
subl
loop
pop
mov
or
scas
add
ret
hlt
movsb
and
inc
cmp
mov
clc
mov
xor
sub
insl
dec
adc
pusha
clc
std
int
testb
into
dec
mov
push
cltd
shr
stos
pop
jp
cmp
movsb
cmpb
push
nop
jge
add
inc
xor
mov
das
iret
incl
mov
cmp
fildl
scas
dec
fsubs
mov
fldl
icebp
clc
xchg
cmp
repz
push
shlb
push
xchg
int
and
pop
loope
sub
incb
add
push
insl
sub
arpl
stc
loopne
js
add
or
lock
mov
or
jo
mov
and
addb
pop
adc
sub
add
xor
sahf
enter
pop
in
jge
inc
cmp
xchg
out
pop
rcrb
xor
pop
mov
sub
push
dec
stc
xorl
lods
inc
imul
dec
xor
loope
and
cmpb
add
in
push
addr16
or
sub
fxam
jl
ret
sbb
add
adc
push
sti
cmp
add
adc
add
rol
and
enter
inc
decl
data16
inc
and
mov
sbb
push
pop
cmp
loop
arpl
sub
cs
cmp
push
nop
push
sub
aaa
dec
add
cmp
xor
movsl
fmull
in
cmp
xchg
or
jnp
mov
scas
sbb
mov
daa
arpl
add
push
xchg
sub
jne
pop
mov
enter
es
aaa
xchg
lock
jge
dec
ljmp
in
roll
xor
lahf
aam
into
push
std
adc
dec
cmpb
xor
aas
jns
shll
flds
test
adc
imul
fnsave
out
jg
dec
push
shrl
arpl
and
insb
pop
jmp
add
dec
mov
inc
aam
cmp
mov
shlb
iret
add
imul
add
pusha
insb
jbe
xchg
xchg
sub
lock
dec
jne
push
imul
aam
mov
add
pushf
add
xor
mov
ret
add
aaa
ficomps
lcall
and
hlt
addl
xchg
dec
sti
pop
cmp
cmpsl
inc
adc
icebp
and
cmp
aam
mov
or
aas
sbb
pop
inc
xchg
roll
push
scas
add
and
ss
lods
fiadds
hlt
cmp
jge
add
cmp
push
inc
adc
jne
ljmp
lds
add
dec
pop
xchg
arpl
add
outsl
pop
in
test
push
jl
add
out
mov
ds
aad
push
roll
fsubp
sarb
inc
test
movsl
inc
pop
ret
add
fstl
mov
jle
cs
loop
cld
jae
es
test
dec
cmp
jmp
mov
faddl
mov
out
ds
out
xor
xor
add
addr16
pop
pop
mov
shl
add
in
mov
add
xchg
mov
nop
sti
rcl
sti
stos
push
xor
das
jo
inc
mov
dec
add
and
mov
jne
mov
lea
mov
lret
mov
xor
sbb
cmp
add
jp
mov
arpl
and
cmp
ljmp
xor
cmp
sub
mov
jp
cmp
cmp
test
mov
or
push
movsl
xlat
lret
inc
shl
add
ja,pt
sub
mov
js
pop
pop
cltd
xchg
add
mov
loope
adc
sarb
fsts
sub
andb
dec
out
jg
inc
aam
or
pop
add
push
mov
pop
mov
add
je
negl
cld
shrb
sub
incl
sbb
mov
dec
das
inc
imul
add
adc
imul
loopne
cmp
cli
jbe
loop
mov
sub
sbb
pop
adc
and
add
xchg
andl
js
add
rcrb
cld
jp
out
or
sub
push
dec
add
lock
je
push
loopne
in
add
or
daa
cmpsl
add
jg
xchg
add
xor
pusha
mov
add
imulb
mov
cmpsb
jbe
push
jmp
incb
pop
notb
inc
add
clc
insl
mov
cmp
daa
cmp
mov
in
cmp
add
out
leave
pop
cltd
lahf
pusha
rcr
mov
add
mov
imul
add
sbb
cmp
xchg
ficompl
incb
scas
sti
es
or
add
shlb
mov
add
mov
popf
int3
xchg
sbb
add
lods
jbe
test
loopne
add
xchg
in
stos
add
aaa
in
adc
pusha
rcrb
cmp
mov
add
inc
ret
pop
mov
adc
dec
sbb
push
stos
adc
cwtl
xchg
dec
add
popf
ss
outsb
pusha
sbb
sbb
cltd
push
add
sti
xor
fs
outsl
add
dec
mov
arpl
add
shrb
lds
inc
mov
adcb
arpl
push
gs
incb
add
xor
pop
sar
arpl
jle
sahf
call
lea
push
push
cmpb
es
stos
cld
push
add
cli
cmp
jg
inc
sbb
add
sbb
insb
xchg
cld
adc
arpl
ss
lret
in
push
mov
je
dec
inc
jl
clc
repnz
sti
mov
rclb
dec
in
add
ds
mov
add
push
hlt
xor
ja
mov
es
push
in
pusha
xchg
adc
jb
aas
add
sbb
pushf
mov
cmp
ljmp
jne
xchg
lods
and
lret
add
cld
test
imul
jg
xorb
out
rcl
leave
dec
roll
subl
add
push
inc
out
loopne
fiadds
xor
mov
subl
lock
dec
xor
leave
cmp
je
out
push
pop
rcl
push
cmovg
mov
leave
add
mov
pop
roll
repnz
jo
push
std
in
mov
push
add
cwtl
lret
ret
cmp
mov
orb
iret
stos
test
mov
push
sbb
decl
sbb
inc
fwait
sub
aas
xchg
or
iret
and
add
inc
cltd
xor
or
popa
and
mov
and
lock
push
add
mov
add
mov
rcll
negb
add
pop
add
dec
addl
sub
sbb
xor
lock
rcr
add
in
inc
aas
sub
jmp
add
jge
fstps
outsb
add
iret
and
sub
cmp
mov
pusha
rclb
repz
ret
or
rorb
add
sbb
insb
popa
pusha
sbb
lahf
cmp
xchg
xchg
jbe
xor
push
mov
cmpsl
and
dec
inc
sbb
testl
fcomps
jns
pop
addr16
or
xchg
inc
mov
ror
xchg
mov
fstps
xchg
rcrb
xchg
and
sub
add
arpl
mov
add
xor
dec
mov
lds
cwtl
pop
cltd
pop
inc
pop
cmp
jns
fstpt
sbb
add
push
sub
stos
pop
loopne
inc
shlb
push
icebp
lods
xchg
add
add
push
into
cld
insl
cmp
test
or
dec
bound
sub
xor
fildl
inc
pop
icebp
clc
dec
or
jb
push
adc
gs
and
repnz
iret
js
xor
push
mov
aam
mov
mov
arpl
and
mov
pop
sub
adc
add
sahf
int3
fcomps
lods
fs
sarb
and
roll
push
adc
push
push
dec
jmp
aam
xchg
sub
scas
repnz
mov
push
icebp
insb
scas
cwtl
out
std
xchg
stc
pop
xor
cli
in
pusha
mov
inc
push
js
shrb
push
arpl
push
roll
popa
xor
add
jge
icebp
enter
movsb
push
fistpll
mov
xor
add
call
or
adc
das
push
lcall
stos
add
inc
lock
add
aam
cmp
push
test
sahf
cmp
jns
add
adc
jle,pn
pop
add
pop
repnz
rolb
int3
add
push
lret
jge
adc
xchg
std
cmpsb
inc
clc
xchg
add
mov
xchg
dec
push
cmp
roll
fimull
add
lods
xor
cmp
les
xchg
or
jae
out
into
shll
ror
inc
packuswb
ror
jecxz
add
imul
mov
arpl
cmp
cld
inc
movsb
sbb
mov
arpl
cltd
add
xor
pusha
sti
push
es
push
popa
das
lods
push
mov
insb
dec
add
jmp
into
jp
and
fwait
jmp
mov
scas
xchg
mov
adc
dec
pop
sbb
repnz
enter
leave
mov
addr16
dec
mov
dec
pusha
xchg
add
stos
or
add
movsl
mov
cmp
loopne
out
mov
shlb
push
jae
insl
add
inc
ds
sbb
fmull
mov
shll
std
lds
dec
push
hlt
add
stos
jns
pop
nop
add
aas
in
fbld
add
ja
jnp
pop
xchg
arpl
out
mov
sbb
add
jecxz
mov
cmovl
jl
mov
dec
sbb
xor
add
inc
enter
test
into
add
stos
dec
dec
adcl
inc
mov
cmp
push
cmpb
cmpsb
mov
lret
lcall
sub
repz
inc
add
and
jg
shll
test
arpl
xchg
movsl
shl
stos
cmp
mov
add
mov
sub
push
cmpsl
sbb
fnstsw
pop
shl
jno
mov
scas
pop
adcl
sub
rol
sbb
bound
push
jg
sbb
add
call
cs
cmp
pop
test
repnz
gs
inc
mov
shl
repnz
add
xlat
pop
push
cmp
or
lods
mov
mov
arpl
fisubrs
orb
lcall
xchg
cltd
fsubrs
add
test
cmpsl
add
cs
dec
cmp
xchg
inc
lea
add
popa
scas
pusha
xchg
mov
mov
pusha
mov
imul
cmp
divb
push
add
arpl
loopne
flds
out
inc
bound
xor
mov
sbb
sbb
aas
andb
int3
arpl
imulb
push
inc
repnz
lock
roll
pusha
and
mov
inc
add
fldenv
arpl
lods
pop
pop
adc
jbe
aaa
add
inc
dec
call
lcall
test
sub
pop
add
push
rcrb
lret
cmp
rolb
stos
inc
addl
xor
inc
stc
lock
xor
into
testb
lret
and
bound
cmp
and
imull
sub
jo
cmovae
mov
push
or
incb
dec
mov
mov
dec
shrb
clc
xor
inc
fsubs
xchg
add
bound
sti
xor
hlt
out
cltd
add
je
mov
call
adc
mov
add
fcoml
adc
cs
xchg
shrl
jbe
push
mov
int
das
mov
xchg
cwtl
jb
popf
sbb
xor
nop
sbb
and
cld
inc
or
mov
stc
add
in
push
fnstenv
fs
loop
add
adc
jl
loopne
xchg
leave
mov
push
push
and
jmp
outsl
in
sub
in
test
call
mov
add
dec
jmp
jns
out
mov
jno
jp
sub
adc
lret
mov
shrl
scas
ret
xchg
pop
sti
orb
ja
add
pop
cmp
push
les
mov
cmp
std
inc
pop
in
mov
sbb
or
lods
dec
xor
inc
sub
and
inc
testb
jl
je
inc
ret
cmp
xor
movsl
add
xor
popa
shlb
or
pushf
lea
add
stos
pop
imul
into
push
xchg
inc
cmp
pushf
adc
add
add
push
test
cld
ja
inc
into
sbb
jecxz
mov
push
sahf
cmp
outsb
outsl
pop
add
int3
aaa
sbbl
mov
inc
inc
mov
int
mov
lds
xchg
cmpsl
add
mov
inc
sbb
or
hlt
and
push
rcrl
aaa
jp
jbe
loopne
sti
add
pop
insb
and
add
int
dec
mov
rolb
inc
test
cmc
push
je
add
daa
pusha
dec
rorl
push
movl
push
mov
cmp
ja
and
sbb
cmp
das
push
pushf
cmp
mov
add
sti
insb
popl
dec
inc
pop
arpl
movsb
jecxz
pop
stos
daa
shrb
sub
sbb
mov
outsl
iret
mov
bound
add
jge
repnz
sti
test
divb
sarb
xchg
addb
mov
ja
add
pop
gs
add
clc
add
add
add
lock
out
sbb
add
jmp
cld
add
xchg
test
jae
imul
pop
add
call
sahf
test
lods
ds
mov
cmp
ret
pop
add
mov
filds
sub
add
xor
cmp
add
mov
lods
add
mov
bound
cmp
fists
mov
mov
pusha
sbb
mov
pop
call
dec
arpl
ljmp
mov
out
dec
xor
in
sub
mov
daa
sbb
jbe
insb
pop
push
push
and
pop
add
rcrb
movsb
andl
jge
lods
xor
dec
add
sbb
loope
pop
adc
rol
pusha
iret
pusha
sahf
cmp
push
add
and
inc
dec
cs
add
inc
jmp
cli
inc
mov
add
pop
mov
mov
stos
shlb
negb
ret
nop
adc
jb
add
xor
or
lret
adc
inc
mov
arpl
sub
push
xacquire
adc
cli
fwait
add
inc
shlb
jecxz
add
outsl
roll
pop
into
pop
push
in
jne
not
adcb
rclb
pop
pop
ret
inc
mov
dec
mov
add
inc
aaa
cmc
sub
add
xor
add
in
stc
mov
inc
nop
add
cmp
cmp
popf
iret
out
adc
add
pusha
jns
sbb
scas
jns
imul
out
pop
inc
xchg
add
cmp
fidivrs
adc
pop
mov
shl
mov
xchg
adc
jmp
dec
cwtl
mov
add
push
pushf
aam
add
inc
jns
adc
or
cmp
mov
repnz
add
dec
int
insb
sbb
xchg
mov
inc
ss
es
mov
jb
gs
shr
inc
das
xor
xor
aas
xchg
iret
add
dec
mov
std
jg
loop
arpl
stos
xchg
inc
test
out
cmp
into
add
rcr
mov
rorl
or
les
mov
add
adc
movl
in
add
fmull
cmpsl
add
popa
and
add
fmul
xor
sarb
orb
aas
loopne
mov
cmp
icebp
add
jle
repnz
add
mov
inc
dec
adc
xchg
or
mov
jae
pop
pop
loopne
test
mov
inc
test
cmp
loop
mov
add
pusha
inc
das
add
push
int
movsb
iret
jo
cmpsl
add
dec
test
mov
gs
sub
push
cmp
andb
add
mov
testb
sti
fstp
lods
int
or
jno
jge
adcb
in
imul
in
inc
add
or
popf
aad
xchg
add
inc
rolb
xchg
xchg
jle
add
mov
push
fwait
pshufw
cld
addb
adc
adc
nop
inc
sbb
dec
xchg
push
ror
mov
xchg
sub
sub
or
jle
negb
lcall
inc
sub
out
jg
push
jns
shll
fisttps
addb
sub
fildl
lcall
adc
cs
nop
jb
fisubrl
cmp
int3
call
push
pop
roll
sub
sub
xchg
jo
fadd
mov
loope
aaa
sub
psllw
inc
and
jl
mov
jle
loope
rolb
pop
int3
shrb
sbb
jne
jle
add
jbe
in
pop
add
sti
xchg
incb
jb
shrl
arpl
inc
jle
add
mov
cltd
cld
or
shlb
mov
in
xchg
fwait
cmp
cli
cmc
hlt
faddl
add
push
adc
mov
enter
dec
adc
rolb
data16
lahf
add
cmp
fs
mov
xor
and
jle
sbb
roll
xchg
push
pusha
add
mov
data16
insl
lret
loopne
mov
prefetch
cmp
inc
lret
mov
mov
and
sbbb
push
arpl
bound
xor
push
push
mov
enter
mov
jl
rclb
xor
enter
sbb
dec
insl
aad
jmp
sbb
test
mov
shufps
cmp
mov
jmp
add
mov
lods
cmpsb
in
or
jle
add
sahf
push
mov
jl
jg
into
lock
repnz
int
add
dec
dec
pop
shll
movb
imull
adc
shrb
arpl
add
mov
std
insb
rorl
subl
add
call
inc
int
push
and
rorl
lea
loopne
repz
mov
dec
push
outsb
push
jbe
jns
add
je
mov
jns
push
cmp
ds
mov
jmp
in
xchg
inc
aad
push
sub
jl
loopne
or
out
incl
call
sub
inc
add
test
data16
hlt
cltd
add
daa
add
inc
fldl
jb
mov
dec
cli
mov
inc
popf
cmc
cs
push
in
add
add
les
roll
popa
fstps
mov
sub
es
xchg
jbe
add
ret
pop
adc
aaa
arpl
add
and
sub
dec
cwtl
leave
push
lret
add
ljmp
arpl
mov
mov
push
xor
shll
pop
add
pop
out
dec
jo
dec
jp
add
push
push
out
lock
movl
loope
repz
or
popf
jl
dec
sbbb
les
fs
lock
jo
cwtl
push
sbb
ss
pop
andb
sbb
xlat
divb
xchg
add
xchg
test
loope
jmp
ret
loopne
mov
jmp
aam
push
dec
add
xor
mov
sbb
scas
std
add
test
push
shlb
sbb
xor
aam
xor
add
jge
rcrb
pop
add
xchg
push
iret
mov
loopne
add
jne
rcrb
mov
cmp
pushl
add
pop
mov
cmp
test
push
dec
xchg
cmp
scas
repz
test
int
add
sbb
inc
jo
add
mov
rcrb
or
push
jg
movsb
rolb
xchg
pop
int
dec
sbb
mov
adc
xchg
shrb
mov
pop
mov
je
lock
repnz
outsl
aas
push
mov
add
arpl
lret
dec
mov
mov
inc
sahf
imul
rolb
outsb
push
push
fnstcw
fildl
pop
cmp
dec
loop
add
enter
xlat
add
cmp
sub
mov
loop
adc
inc
sub
inc
inc
aaa
dec
cmp
or
xor
mov
sub
ror
imul
mov
xchg
pop
mov
add
das
inc
les
loopne
dec
aam
mov
dec
mov
out
jae
sbb
fdivrl
and
mov
arpl
push
call
add
mov
push
push
mov
pop
sbbl
add
adc
mov
loopne
xchg
lcall
adc
hlt
iret
mov
fstl
mov
sbb
jbe
jno
movsl
adc
cmpsb
pop
inc
xchg
call
adc
rolb
and
adc
mov
mov
cmp
icebp
orb
sti
dec
lret
adcl
test
xor
inc
or
mov
add
pop
loope
cmc
popa
cmp
addl
jp
add
inc
adc
or
fsubrl
movsl
setl
dec
aad
mov
out
ljmp
fdivl
push
mov
nop
sub
mov
test
xchg
add
xchg
push
pop
pop
lock
inc
add
xlat
cli
jle
and
inc
add
loopne
mov
movsl
jl
lret
lock
add
xor
in
xchg
test
cmp
rcr
fnstsw
es
jg
pop
jmp
ret
add
adc
dec
add
xor
add
xor
or
add
inc
mov
insb
sub
add
inc
jns
dec
jp
add
fildll
cmp
jo
add
roll
inc
jp
jo
add
jge
out
leave
push
sub
pop
mov
std
adc
push
repnz
cmp
je
xchg
mov
add
sahf
popf
in
hlt
int
add
dec
insb
xchg
aas
jnp
orb
cmp
inc
pop
in
mov
lock
inc
jg
push
adc
pop
pop
jecxz
lea
add
lods
lods
ds
xchg
cmp
add
mov
loopne
les
faddl
mov
shlb
add
mov
or
mov
add
fiadds
lea
add
dec
in
add
xor
faddl
add
cmp
lods
mov
cwtl
add
fnstsw
addb
lret
mov
les
cld
sub
cs
xchg
sahf
add
mov
inc
test
jecxz
add
mov
xchg
pop
sbb
dec
shlb
clc
or
incl
push
stc
xchg
push
add
arpl
addr16
lret
popl
fisttps
dec
ljmp
fimuls
inc
incl
subb
clc
push
add
aad
ret
jbe
add
test
out
and
fistps
sub
add
dec
jg
out
loop
add
adc
sahf
and
mov
push
mov
push
arpl
inc
add
lds
repz
pop
and
pop
enter
cmp
out
testb
sti
jbe
or
loopw
push
dec
sub
fildl
pop
jmp
lea
call
xchg
pop
pop
shrb
sub
mov
inc
pop
test
jecxz
and
cld
clc
inc
add
inc
leave
stos
push
xchg
in
mov
sahf
add
jae
sbbb
shll
push
cmp
lret
inc
icebp
sub
xchg
clc
mov
arpl
inc
sub
pop
sub
jge
out
mov
in
mov
add
mov
jne
aad
sub
sbb
add
inc
jecxz
int3
add
into
mov
leave
das
imul
and
push
movsb
rcll
ja
xor
mov
stos
or
ds
int3
push
enter
aas
es
mov
or
adc
push
sbb
sbb
fcmovu
push
pop
jb
inc
sbb
pop
xor
outsl
fstpt
add
daa
add
arpl
lahf
movsl
add
inc
enter
sahf
dec
jl
xchg
adc
loope
std
pop
and
mov
mov
push
arpl
sbb
ret
insl
fnsave
add
cmp
insb
scas
scas
stc
pop
push
add
fwait
adc
inc
movsl
mov
sbb
stc
xchg
add
enter
aaa
repnz
mov
jmp
test
mov
icebp
inc
pop
inc
arpl
sub
je
add
lock
push
std
insb
cltd
mov
aam
mov
inc
add
lods
jne
add
std
subb
inc
jl
sbb
cmp
lret
add
sbb
add
inc
into
adc
inc
out
les
aas
out
bound
add
add
or
das
and
add
inc
pop
addr16
cmp
adc
sbb
jo
fistl
cltd
iret
and
mov
call
icebp
rcr
je
ret
dec
clc
jnp
pop
add
inc
addl
rolb
add
lds
pop
sbb
mov
cmp
hlt
jl
or
mov
sarb
dec
adc
add
inc
adc
repnz
add
hlt
pop
pop
add
and
imul
dec
inc
fsubp
scas
or
mov
add
xchg
push
loop
push
pop
push
scas
jne
or
inc
pop
add
add
add
pushl
pusha
les
jne
es
loop
push
mov
and
leave
pop
fsubs
add
cmp
ret
add
test
fiaddl
stos
pushf
xchg
fdivs
dec
add
or
sbb
pop
mov
or
cmpsb
add
cmp
mov
shrb
jb
ret
lcall
rolb
cmp
cli
repnz
mov
add
mov
imull
popf
je
lock
repz
xchg
mov
push
and
out
imul
mov
mov
sbb
data16
add
xor
dec
or
lahf
xor
mov
ja
jle
sahf
pop
call
xchg
sbbl
push
mov
add
shl
aaa
mov
dec
xchg
xchg
and
and
adc
jl
add
ss
mulb
add
aas
das
aaa
andl
into
inc
popf
push
inc
push
int
lahf
mov
adc
mov
xor
inc
add
sub
aad
imul
loopne
push
or
popf
mov
fwait
smsw
pop
or
mov
mov
fldl
outsl
std
push
sbb
pop
add
out
and
popa
arpl
ja
cli
push
jle
andb
stc
test
mov
inc
push
ffreep
lea
and
fidivs
cld
xor
xchg
repz
popf
add
out
lock
outsb
jl
xchg
ror
test
inc
add
push
xor
add
jle
sub
in
add
pop
lds
test
add
push
adc
mov
push
sub
jo
mov
sub
cltd
push
andl
adc
repnz
add
inc
xchg
lods
mov
in
add
hlt
repnz
pop
int3
ror
inc
or
mov
cmc
add
loope
cmp
xchg
adcb
and
mov
arpl
aas
pop
inc
orb
inc
loop
pop
jno
ret
nop
jg
shll
inc
sub
arpl
push
addb
bound
out
xchg
xor
add
sub
sub
cltd
or
insb
hlt
outsb
add
mov
ret
adc
lcall
add
sub
fsubs
add
jne
les
clc
roll
sbb
mov
movsl
add
fwait
or
xor
sbb
inc
xchg
sub
aas
cs
pop
sub
in
add
jnp
or
aad
mov
das
sub
add
aas
icebp
inc
or
mov
ja
push
into
test
sbb
add
mov
loopne
jns
test
stc
shll
popa
adc
jg
mov
mov
sbb
mov
andb
dec
xor
bound
nop
movb
mov
test
add
orb
pop
and
push
sub
dec
cmp
iret
sbb
lahf
jo
pop
add
je
xlat
add
jg
mov
mov
add
mov
and
adc
inc
xchg
pushf
dec
push
js
push
cmp
insl
loopne
aas
push
or
add
fistl
sub
cmpsb
inc
pushf
ret
jno
add
sbb
add
mov
clc
inc
rcl
adc
scas
out
xchg
ljmp
and
loop
add
ds
loopne
popa
add
mov
push
in
xor
hlt
cmp
add
in
lock
xor
cmp
and
xor
pop
jp
xchg
popa
add
push
mov
jns
daa
dec
lock
insb
sub
mov
jbe,pt
and
clc
sbb
repz
add
mov
lods
pop
addb
shrl
out
push
stos
adc
add
mov
inc
pop
add
or
out
pop
inc
push
movsl
loopne
movaps
cmp
pusha
jge
popa
add
dec
and
sub
addr16
jb
jmp
pusha
daa
add
sub
inc
mov
or
adc
mov
jecxz
cmp
inc
adc
mov
pop
dec
add
add
sbbb
xchg
adc
subl
inc
dec
add
pop
add
cmp
insl
mov
gs
adc
mov
xchg
ret
repnz
shlb
inc
mov
xchg
sbb
fistpl
or
or
dec
push
cmc
loope
push
pusha
add
pop
fiaddl
test
cmp
inc
adc
mov
pop
pop
mov
enter
add
jbe
mov
addr16
pop
repnz
inc
mov
mov
sub
lods
rcrb
ror
add
hlt
iret
pop
adcl
or
and
add
rcrb
test
lcall
into
pop
call
loopne
and
hlt
aad
push
lock
dec
add
mov
sbb
add
xor
add
mov
sti
add
jge
ret
sub
or
add
fwait
mov
rolb
iret
adc
test
scas
sarb
add
aad
test
jns
sbb
daa
dec
ret
dec
add
sbb
add
mov
ficoml
dec
mov
jl
insb
cmp
call
add
cmp
adc
jp
and
popa
insb
dec
pop
cmove
sbb
outsb
mov
cs
movl
and
iret
add
sahf
jle
scas
je
nop
jae
sbb
loop
hlt
paddw
push
pop
add
loope
stc
fwait
pop
inc
insl
add
sti
leave
xor
and
out
cmc
mov
ss
loope
jne
aaa
aas
pop
inc
add
aas
lcall
mov
sarl
push
jno
pop
xchg
mov
pop
inc
xor
sub
inc
inc
aam
push
and
roll
fdivrl
ret
mov
inc
daa
xchg
mov
test
inc
mov
push
popf
add
push
cmpsb
add
jp
and
popa
inc
and
xlat
add
pop
enter
pop
add
pop
pop
add
gs
or
dec
inc
mov
jae
inc
repz
pushf
mov
add
or
icebp
inc
push
loope
stc
add
add
roll
jbe
add
cld
jecxz
pop
xor
inc
add
subl
outsb
sarl
jb
lods
leave
notb
dec
iret
cmp
fwait
jl
das
xor
pop
inc
add
add
call
sub
inc
pop
dec
pop
add
out
lea
pop
pop
xchg
or
add
inc
fisubs
add
adc
popf
add
push
mov
lret
or
adc
lret
mov
stc
cmpsl
aaa
dec
int
and
test
or
mov
cmp
shr
fadds
imul
sti
rorb
pop
add
addb
push
xchg
inc
or
push
mulb
ljmp
or
fstps
inc
mov
pusha
dec
lcall
pushf
or
and
add
subps
xchg
mov
push
add
xchg
jb
inc
stos
mov
lret
loope
jo
lcall
and
pop
rolb
push
adc
dec
mov
enter
incb
aad
in
pop
test
add
loopne
roll
scas
repnz
add
dec
test
add
insl
jnp
mov
outsl
add
aaa
mov
jge
out
outsb
popf
shl
js
xchg
addr16
arpl
mov
or
jl
add
das
mov
call
mov
cmp
dec
lds
outsb
adc
getsec
xchg
mov
lock
ja
cwtl
out
cmp
add
in
push
mov
add
add
push
rcrb
dec
rorb
add
push
inc
fsubrl
jns
add
cli
push
push
jb
mov
bnd
sahf
cvttps2pi
xlat
repz
mov
call
adcb
popf
cli
shlb
or
add
mov
loop
push
mov
dec
mov
aad
insl
add
push
inc
ds
mov
cmpl
xor
je
idivb
push
mov
shlb
inc
cmp
inc
les
xchg
cmp
adc
mov
outsl
jnp
pop
incb
inc
je
in
pop
sbb
gs
lcall
out
or
inc
jae
icebp
pop
cmpsl
enter
add
stos
lds
fcmovnb
ds
outsb
sarl
add
adc
add
dec
aad
push
subl
inc
jmp
pop
aas
and
add
fidivl
xchg
add
xchg
outsl
filds
adc
mov
lds
or
push
mov
data16
adc
xor
mov
stc
jmp
sahf
inc
gs
jns
mov
mov
jae
mov
nop
push
sbb
add
enter
jo
add
call
inc
mov
push
push
mov
inc
or
invd
pop
cmp
in
and
adcl
sbb
pop
push
cmp
inc
and
movl
jno
pop
pusha
lcall
fnclex
rcrl
aam
jbe
das
inc
ljmp
pop
mov
pop
clc
ret
cmp
loopne
xchg
arpl
add
fs
inc
sub
inc
add
jno
mov
psraw
jmp
add
int3
adcb
lods
arpl
mov
bound
xor
ljmp
rolb
clc
mov
adc
jg
cmpsb
sub
arpl
add
jle
pop
or
lock
or
push
sarl
jg
push
ret
jns
adc
je
ja
iret
or
push
in
outsb
push
inc
lock
add
or
jecxz
push
mov
xor
mov
into
insl
ljmp
ret
test
add
inc
inc
sarl
jg
pop
fdivrs
das
sbb
loopne
cld
dec
aad
cmc
outsb
loop
xor
add
adc
inc
inc
shl
add
add
mov
arpl
xchg
sahf
sub
xchg
cs
icebp
dec
or
add
sub
pop
adc
ret
mov
inc
dec
add
push
pop
jae
jp
inc
loopne
xchg
gs
lret
fwait
aaa
in
add
andl
push
xor
pop
inc
outsb
imul
push
mov
sub
add
jp
sbb
sbbb
and
ja
iret
add
fs
loope
pop
jmp
add
mov
arpl
inc
fcoml
pop
dec
or
pop
sub
add
push
sbb
pop
cmp
sbb
push
sbb
jae
add
xchg
jecxz
jno
cwtl
pop
push
jae
rorb
cmp
test
outsl
add
sub
mov
push
arpl
add
pop
jg,pt
add
lret
cli
sbb
stos
inc
ret
mov
jecxz
movb
push
sbb
mov
inc
mov
and
rcrl
pop
add
cli
xchg
add
xor
sub
je
add
arpl
add
xchg
pop
jne
repz
addr16
out
mov
adc
mov
jae
ret
test
es
sbb
adc
dec
bnd
pop
rclb
insw
fsub
arpl
mov
nop
lods
shll
int
add
mov
add
cli
sub
idivl
mov
mov
cs
ds
jo
aam
mov
jae
jo
cmp
int3
cmp
inc
mov
pop
dec
mov
dec
adc
and
js
cwtl
fistps
fistpl
vxorps
add
dec
hlt
popa
dec
icebp
aad
imul
push
pop
in
les
mov
incl
cmpsb
jbe
das
cmp
add
jge
xor
jg
add
sbb
mov
inc
mov
mov
cmp
outsl
pop
arpl
jmp
fstpl
sbb
lods
or
jecxz
jb
jmp
xorl
ret
filds
add
pop
fs
rol
mov
or
leave
arpl
xchg
ja
sub
cmp
inc
aad
cmc
mov
cli
xor
dec
jp
add
inc
loopne
inc
cmpsl
mov
xchg
mov
pop
pop
mov
jecxz
jmp
out
mov
add
inc
into
dec
add
cmp
aaa
add
xorb
mov
inc
int3
dec
add
dec
sahf
sub
sub
sahf
mov
js
fs
int3
mov
push
insl
out
lret
cmp
rclb
and
cmpb
arpl
nop
sbb
ljmp
daa
inc
lock
jno
push
insb
lods
xor
or
mov
mov
add
mov
incb
pop
dec
push
adc
andb
mov
sbb
nop
clc
sub
xlat
enter
jp
add
inc
outsl
mov
lock
mov
rorl
ret
jo
sbb
pop
mulb
add
or
sub
fcmovb
sti
mov
xchg
les
std
add
mov
mov
shrl
pop
int3
in
add
popa
sbb
add
add
sbb
sub
push
aam
cmp
add
sub
lock
bound
adcl
gs
ret
fwait
sbb
xor
fildl
popf
sub
inc
add
adc
sti
pusha
jg
xlat
add
jns
push
add
push
repnz
mov
enter
ja
adcb
insb
rolb
adc
mov
cmp
mov
fldl
add
xor
rcr
repnz
adc
leave
imul
std
push
movsl
outsl
sti
loope
loop
pusha
dec
push
pop
xchg
xchg
add
inc
bound
std
hlt
push
shll
dec
add
rcrl
add
into
or
addb
add
test
aas
dec
sub
xchg
jle
sbbb
cld
and
hlt
or
xchg
adc
call
mov
jno
mov
arpl
ret
call
pop
sbb
gs
loopne
lret
adcl
fimull
jns
add
ja
add
sub
call
mov
loopne
push
sti
stc
call
add
inc
sub
sbb
mov
mov
jae
mov
inc
mov
add
mov
add
rcrb
mov
fiaddl
fbstp
hlt
or
aad
add
es
push
mov
jns
add
add
push
mov
imul
xchg
hlt
arpl
rorb
add
pop
inc
add
pop
mov
mov
inc
shll
gs
std
cs
xor
and
add
sbb
arpl
pop
shrb
jnp
stc
add
jecxz
fadds
shlb
cmp
pop
outsb
imul
inc
mov
test
loopne
subb
mov
jne,pt
int3
add
mov
mov
fisttpl
inc
sbb
pusha
or
jecxz
sar
dec
jne
sarb
adc
pop
add
add
xchg
or
fsubp
inc
mov
add
cmp
loopne
pop
inc
add
mov
dec
add
add
adcb
decb
or
stc
aas
addb
jne
dec
inc
sbb
xchg
into
add
fmull
pusha
out
out
push
mov
push
jge
enter
or
sar
pop
fildl
adc
aaa
or
ret
pop
repz
loopne
arpl
xor
mov
pop
rolb
cmp
pop
add
pusha
lea
repnz
dec
xor
cmp
push
cltd
jle
xor
in
mov
rol
popa
fsubs
cmp
stc
mov
pushf
jno
icebp
inc
sbb
inc
les
repnz
orb
cmp
mov
das
sahf
lret
ds
push
ret
and
sub
inc
icebp
addl
clc
jg
cli
rcrb
mov
out
add
add
leave
rolb
ljmp
int
int3
mov
inc
add
mov
adc
inc
adc
das
push
cmp
jb
jae
cmpsb
loope
and
insl
aam
sbbb
add
fmuls
inc
and
add
and
jno
sub
xchg
mov
add
mov
mov
xor
mov
out
jl
push
fs
mov
add
cmp
cmpl
rolb
or
outsl
scas
cmp
sbb
shrb
shll
orb
dec
ds
xchg
mov
jo
mov
into
add
xchg
cmp
adc
inc
mov
mov
inc
mov
loopne
jnp
and
dec
cmp
pushf
pop
mov
push
outsl
inc
lret
xor
or
add
andl
cmpsb
sub
add
jge
in
sbb
add
and
pop
shlb
and
mov
loopne
roll
mov
mov
ret
les
popa
sub
xchg
int3
jnp,pn
inc
incl
mov
out
in
and
xor
repz
sbb
cmp
jns
sti
repnz
shlb
stos
subb
hlt
add
mov
mov
out
inc
mov
in
push
inc
ja
add
pop
rorb
addl
into
jge
lock
jmp
dec
add
fwait
pop
mov
clc
add
mov
pop
inc
not
adc
and
cmc
cmp
in
jg
sbb
jne
fcom
arpl
sbb
andb
add
lods
xchg
popf
or
inc
add
jns
sbb
jle
faddl
xor
mov
push
outsb
mov
add
sub
and
lcall
push
pop
add
fsubl
inc
add
scas
jl
movaps
add
xchg
xchg
cmp
insl
inc
and
aas
stos
sbbb
xlat
jg
add
in
jecxz
arpl
inc
push
push
inc
inc
xchg
loopne
add
xor
adc
js
filds
pop
push
loop
fimuls
daa
push
fwait
add
arpl
lea
cmc
gs
test
inc
jno
fstps
imul
arpl
xlat
push
jne
lock
inc
add
xor
mov
les
loopne
mov
pop
pop
xor
cltd
in
and
push
add
adc
inc
sbbl
jge
inc
jle
int3
es
lds
clc
add
jl
inc
imul
outsb
ja
add
add
clc
mov
add
movsl
pop
mov
ffree
lcall
in
push
xchg
cmpsb
inc
add
pusha
cmp
imul
xor
and
xchg
fwait
inc
or
dec
inc
jbe
add
jp
shlb
pop
add
mov
lock
push
je
dec
xchg
repz
cmp
dec
and
add
orb
fnsave
sub
jp
pop
stos
inc
jo
aas
hlt
pop
int3
pop
xchg
and
push
jns
jg
ficoml
wbinvd
add
pusha
jge
arpl
shlb
inc
push
rcl
sti
add
in
ljmp
xor
fidivrs
pushf
rolb
sub
lahf
add
xchg
add
outsl
out
lock
add
mov
repz
pop
clc
scas
arpl
push
cld
int
push
cltd
jg
pop
mov
xchg
or
sbb
sub
pop
jle
movsl
addb
adc
push
xchg
inc
jnp
or
ret
mov
cmp
push
and
xorl
pusha
mov
sbb
shrl
dec
mov
subl
repnz
cmpsl
or
int
cs
add
add
sub
flds
and
mov
iret
in
ret
pushf
cwtl
xor
push
js
add
test
lret
push
xchg
xor
adc
mov
sbb
or
xlat
or
add
fucomip
shl
add
cmp
addl
sarl
add
std
sub
add
orb
or
cltd
mov
adc
dec
push
pop
and
inc
dec
faddp
psubsw
mov
scas
pop
inc
das
dec
fcmovnbe
cmpb
add
add
outsl
jle
pop
pop
lods
add
inc
and
sub
movsl
xchg
frstor
les
shrb
dec
push
aas
ret
fistps
sub
or
mov
add
mov
hlt
sar
sbb
lcall
shlb
mov
inc
mov
lods
jbe
or
ja
movsl
push
pop
mov
pop
add
out
add
stos
inc
adc
fildl
inc
pop
cmp
loop
push
or
cmp
inc
enter
fwait
add
xchg
or
mov
cld
xchg
leave
inc
test
loopne
xchg
add
inc
data16
lods
mov
aam
movsl
mov
add
xchg
jl
pusha
js
arpl
leave
cmpsb
jne
or
or
add
nop
loopne
push
mov
rcl
xchg
inc
fdivrl
rcll
lods
add
add
jge
sub
aam
rorb
add
xchg
inc
ror
or
mov
rolb
insb
add
adc
add
dec
ret
pop
cmp
std
pop
mov
xor
mov
add
in
into
mov
add
mov
pop
adc
push
cwtl
or
sbbl
popa
ficompl
xor
pop
call
sbbb
and
or
jecxz
popa
add
or
into
xor
mov
and
ljmp
pusha
test
xchg
addb
fadds
test
adc
add
daa
ret
les
xor
add
lds
ss
inc
fs
add
es
add
cmp
cmc
stos
shlb
add
lahf
mov
ss
test
mov
iret
data16
jno
and
int
fadds
enter
ds
or
cmp
and
add
pop
sti
lock
arpl
or
sahf
jo
add
cmp
mov
imul
movsb
mov
pusha
push
loope
aas
cmpb
cltd
push
dec
aas
mov
add
ret
sub
ficoml
outsb
test
mov
ss
in
jb
aaa
addr16
jg
sbb
imul
andb
push
push
cmp
jns
sbb
sti
sub
ljmp
ret
test
push
xchg
jl
add
imul
push
pop
add
xchg
adc
mov
int3
pop
mov
subl
fisubrl
daa
add
movsb
add
shl
add
xor
push
xchg
or
cmp
and
pop
jmp
push
repnz
dec
push
xor
or
fldenv
sbb
xor
mov
mov
lret
or
push
inc
fiadds
push
in
sub
add
push
loope
lahf
sbb
jo
or
out
sbb
pop
xchg
repz
loopne
repnz
add
roll
enter
in
pop
notb
loope
out
inc
and
das
popf
adc
test
sub
jp
jg
fs
sbb
cmpsl
add
popf
push
or
xchg
inc
push
xor
cmp
xor
add
push
or
and
dec
and
sbb
loope
stos
inc
push
outsl
sbb
mov
pop
cmpxchg
mov
addl
adc
push
or
mov
shlb
mov
testl
sbb
test
xchg
and
clc
jae
xor
mov
leave
sbb
inc
outsl
jb
imul
in
stos
aad
sub
add
aaa
inc
cli
insb
adc
dec
pushf
inc
add
xchg
push
mov
add
ds
shll
jle
add
std
arpl
test
lea
popa
xchg
add
mov
sarl
mov
push
repz
shlb
scas
sbb
jne
ret
test
dec
fwait
adc
xlat
inc
mov
sti
pop
add
ss
lret
add
push
pop
inc
mov
xchg
xorb
sti
cmp
inc
pop
jmp
xchg
sbb
jo
add
mov
jne
inc
stos
clc
cwtl
popl
adc
stc
sub
shlb
ret
out
addl
mov
test
add
fistpll
xorl
sub
mov
fstpt
lahf
fimull
cmpsb
sbb
test
enter
jg
add
lods
cmpsl
scas
repnz
add
and
sbb
aam
iret
imul
cmp
popa
lcall
stos
mov
inc
out
pop
adc
adc
and
outsb
adc
imul
arpl
incb
pop
dec
cwtl
and
xlat
inc
add
call
jp
btc
and
jo
ja
and
pop
add
incl
xchg
sbb
add
rcr
jnp
dec
jno
jnp
sub
fstl
or
push
jge
add
arpl
sbb
out
jns
add
push
inc
popf
cmpl
pop
in
enter
sbb
or
dec
and
test
scas
imul
insl
dec
nop
adc
pop
arpl
aam
jp
xlat
jo
outsl
pop
cltd
add
adc
rcrb
gs
add
test
jle
call
mov
dec
pop
movb
leave
js
push
and
add
pop
in
mov
xchg
sarb
orb
mov
out
xor
pushf
sbb
mov
arpl
roll
test
push
jle
xor
arpl
pop
cmp
sub
add
jecxz
dec
cmp
cli
fistps
shl
mov
ja
stos
cmp
add
sbb
push
add
inc
push
ja
xchg
in
jnp
rolb
add
inc
xlat
push
aam
pop
add
adc
in
clc
mov
xor
rcr
add
int
adc
mov
adc
lock
jae
cmp
add
arpl
mov
mov
add
addb
daa
enter
add
cwtl
dec
add
in
fsubrs
add
xchg
mov
push
stc
addb
ret
mov
or
mov
dec
loopne
filds
aas
movsl
ret
mov
sub
push
inc
add
scas
mov
nop
ds
daa
mov
inc
std
jg
pushf
and
jo
aad
pusha
inc
int
adc
idivl
push
aam
mov
arpl
mov
jo
add
inc
shlb
inc
popl
test
inc
jl
mov
xor
add
inc
lahf
aam
push
cmp
cmp
jl
and
cmpsl
arpl
or
add
addr16
add
jbe
xor
add
fcompl
xchg
mov
mov
sbb
add
stos
ret
jne
xor
add
inc
mov
dec
add
inc
add
xchg
data16
cld
or
rol
add
xchg
add
fildl
inc
sahf
mov
add
call
jns
arpl
fidivrl
je
add
dec
insl
popa
xrelease
jp
add
arpl
jo
add
es
add
popf
jb
shrl
mov
arpl
ret
rcr
mov
pop
mov
push
shrl
rclb
cltd
lock
add
cmp
add
jmp
insl
fisubs
or
and
aam
test
cwtl
shl
rorb
call
mov
sahf
orb
insl
or
dec
inc
pop
call
or
mov
popa
lcall
ljmp
adc
fidivl
mov
pop
ja
mov
add
mov
inc
xlat
sub
cmp
sarl
mov
pusha
push
fildl
jne
cs
push
fcomps
add
mov
pop
xor
movntq
hlt
and
mov
sbb
xlat
mov
cmp
add
inc
cwtl
add
push
insb
aas
xchg
jo
xor
ljmp
testl
sarb
adc
repz
jge
pop
add
int
jecxz
add
mov
mov
jne
in
imul
mov
fwait
cmpsb
jbe
add
inc
scas
push
sbb
mov
insl
jmp
pusha
nop
cmp
add
cmp
sbb
inc
test
add
cmp
mov
aas
andb
pop
sbbb
adc
inc
or
sbb
arpl
sahf
add
cmp
and
std
arpl
add
inc
stos
pop
fmuls
gs
add
xor
movsb
add
xchg
out
icebp
loopne
enter
pop
sbb
fdiv
mov
cs
xor
xor
add
inc
movsl
fwait
adc
jge
in
addl
jno
or
jo
and
jae
jl
mov
leave
sub
add
std
shlb
enter
cmp
icebp
jg
add
pop
xor
fcoml
mov
popf
cmpb
loope
add
pop
dec
pop
adc
add
sub
pop
movsl
sar
cmc
cli
inc
imul
mov
shr
xchg
add
sahf
inc
loop
mov
pop
repz
pop
or
ds
pop
nop
jo
adc
add
outsb
sbb
inc
adc
inc
pop
inc
adc
repz
fwait
cmp
data16
add
loope
push
cmp
ret
iret
pop
mov
loopne
fstps
xor
xorb
add
and
into
add
mov
jl
add
sub
jb
shrd
mov
in
sub
incl
add
jae
xchg
cmpsb
mov
jnp
add
out
mov
pop
cmp
cs
mov
and
daa
pop
mov
jb
jp
shrl
popl
pop
or
dec
fs
inc
xchg
lcall
and
cmc
or
cmp
mov
inc
insb
sbb
clc
pusha
scas
int
stos
add
mov
jge
es
or
and
repnz
call
imul
or
hlt
mov
add
inc
mov
movsb
add
aas
lds
arpl
sub
imul
inc
pop
mov
ja
lods
lret
cmp
mov
pop
in
add
rol
jns
pushf
add
adc
xor
cld
shrb
push
jecxz
dec
int3
jp
add
lods
inc
push
add
shl
scas
popa
test
push
pop
movsb
cmp
or
repz
movsw
xor
cmp
add
xchg
push
add
mulb
jp
cmp
xchg
add
loopne
testl
xchg
dec
shlb
push
push
sbbl
xor
xchg
sti
cmp
adc
in
mov
and
jl
int3
lods
js
jge
add
jl
jbe
mov
or
shl
orb
stos
jp
inc
mov
mov
and
cmpl
inc
out
sahf
add
jb
add
or
out
sbb
dec
sub
mulb
addl
push
addb
push
inc
sarl
push
sbbb
leave
jg
sar
adc
add
inc
or
cmp
ss
jg
stos
cmp
movl
aam
cmp
xchg
mov
pop
push
ljmp
repnz
stc
add
inc
movsl
out
cmpsb
adcl
nop
and
xchg
push
push
push
cmp
sti
dec
pop
ja
stos
ljmp
push
push
subl
xchg
jp
add
mov
and
add
inc
sbb
enter
add
les
addr16
add
aaa
ss
test
add
lahf
rclb
lret
lods
mov
cs
fistps
inc
xor
addl
bnd
or
jle
add
cmpsb
dec
dec
add
jecxz
cmc
push
push
sbb
adc
inc
andb
sbb
xor
add
out
xchg
add
adc
in
add
jle
xchg
add
xchg
pop
add
out
lock
js
outsb
add
loope
xchg
xchg
add
sub
fidivrs
repz
in
dec
add
shrl
and
loopne
fildl
fs
push
fmull
jae
cmc
std
addr16
enter
mov
push
add
jmp
stc
in
adc
mov
and
mov
cli
inc
push
add
mov
xchg
mov
addb
insl
in
push
jge
cld
cmp
sub
enter
jp
add
sub
jle
xchg
add
icebp
xlat
dec
out
mov
mov
jl
add
mull
inc
dec
fwait
imulb
jle
stc
add
mov
fildl
xlat
and
cmpsl
lock
inc
push
cmp
add
sub
jne
add
mov
in
lods
pop
int3
xor
mov
and
jg
fwait
inc
js
cli
fdivrl
sbb
add
pop
push
pcmpeqw
imul
jnp
add
xchg
arpl
mov
cmp
bound
popf
or
xchg
movsb
jecxz
imul
in
xor
mov
add
faddp
mov
push
in
cmc
add
fdivrl
inc
add
push
loopne
pop
or
mov
add
shlb
inc
adc
cltd
sti
adc
add
test
jmp
xchg
js
xlat
cmp
mov
sub
mov
pop
cli
cmp
arpl
add
in
sub
das
rolb
in
sbb
ljmp
repz
int3
test
mov
mov
xchg
jno
shll
push
out
adc
add
popa
lret
andl
jo
scas
nop
xor
inc
and
ljmp
add
daa
jne
loop
jmp
mov
xor
clc
lods
mov
dec
hlt
add
fwait
add
adc
mov
cmc
popf
add
addl
pop
in
std
add
xor
dec
fcmovnbe
mov
xchg
inc
cmpsl
adc
sub
xchg
add
je
loope
fcoml
call
loop
cld
push
out
or
dec
jle
pop
sub
int
in
dec
xor
adc
rcl
sbb
adc
iret
aas
sti
add
and
and
add
jbe
mov
mov
push
insb
dec
daa
mov
add
fldl
cmpsl
mov
mov
or
enter
push
sbb
jge
inc
mov
push
inc
fisubrl
xchg
sbb
enter
add
sub
bound
pop
add
inc
inc
pop
incb
and
xor
inc
cltd
sbb
stos
push
dec
mov
in
add
jnp
addl
addb
mov
add
shlb
pop
movsb
xchg
inc
aad
lock
clc
cmpl
imul
fwait
xchg
sbb
jecxz
jo
mov
je
add
push
bound
aad
sub
mov
add
add
mov
and
add
mov
jo
repnz
adc
add
mov
pop
mov
mov
std
cmp
pop
test
inc
rcr
outsb
lds
or
jmp
movsl
add
rcr
xchg
mov
mov
bound
xchg
je
ret
ss
fdivrs
xchg
iret
sbb
add
mov
and
filds
pusha
ja
repz
and
mov
cmpsb
fwait
call
or
add
jge
imul
xor
jle
cmp
xchg
shlb
adc
push
mov
sub
jbe
insl
adc
adc
and
xor
idivb
dec
fiadds
add
pop
or
sub
xchg
arpl
cmc
add
and
filds
repz
mov
mov
iret
pusha
xchg
cmpsl
jecxz
jb
add
xor
loopne
jns
jno
inc
clc
popa
or
loope
shl
add
mov
adc
daa
mov
clc
out
xor
inc
cmp
push
inc
nop
hlt
push
orl
and
loope
sub
inc
lahf
jp
jle
out
cld
jecxz,pn
mov
mov
lods
xor
and
jo
xchg
inc
xor
cmc
add
cmp
dec
fistpll
repz
add
pop
mov
sub
sub
arpl
out
shll
leave
add
fistl
jns
add
mov
fisttpll
mov
push
push
fsubs
inc
iret
loopne
loope
dec
inc
pusha
popf
insb
enter
push
lds
dec
pusha
or
push
dec
outsl
cmp
inc
mov
shll
inc
adc
jp
mov
jl
and
lret
cmp
mov
lcall
cmc
in
divb
inc
add
push
mov
fstpt
cmp
xlat
mov
add
mov
cmp
dec
inc
pop
std
rol
cmpb
xor
ljmp
cmpsl
mov
lock
jbe
test
and
add
inc
test
mov
inc
data16
add
pop
fdiv
stc
ffreep
pop
dec
mov
jp
inc
in
jg
add
addr16
inc
cmp
ss
or
xchg
sbb
xlat
lock
fcmovne
adc
xor
in
sbb
add
or
or
inc
sbbb
aaa
add
out
inc
jmp
mov
dec
push
or
aaa
and
out
push
add
adc
mov
pop
cld
mov
inc
pop
pmulhw
ljmp
dec
and
jns
pop
lahf
cmp
xorl
inc
push
add
outsl
test
pusha
test
and
es
sbbl
shlb
sub
fisubs
mov
or
add
ds
pop
pop
nop
dec
or
add
cld
mov
inc
jne
mov
lret
add
out
and
push
sub
shll
cmp
add
cwtl
add
mov
xchg
in
inc
aaa
mov
add
sub
jns
add
icebp
push
mov
push
add
sub
stos
and
addl
push
notl
out
les
mov
and
push
lock
add
aaa
jge
add
xchg
jl
enter
in
je
dec
dec
dec
aam
lahf
dec
mov
mov
sti
push
adc
jns
in
fwait
inc
mov
leave
jmp
or
incb
sbb
decl
inc
pop
cmp
aas
push
mov
or
lcall
xchg
loop
sub
rcrb
add
orb
jne
sarb
pop
lahf
mov
inc
into
pusha
pop
cmp
pop
adc
mov
pop
mov
movsb
xorps
mov
fs
repz
lock
add
adc
aam
push
add
insl
xchg
ret
fmul
test
adc
incb
or
add
imull
sti
lret
mov
pushf
ja
xchg
adc
aas
nop
dec
pop
mov
imul
filds
mov
inc
xor
inc
cmp
add
cmp
push
adc
sub
aaa
in
xchg
rclb
add
inc
dec
xchg
xchg
popa
mov
out
and
cmp
shlb
test
cmpl
fildll
mov
fcomps
ds
or
pusha
cmpsb
jo
add
xchg
dec
addb
cmp
test
lock
add
mov
daa
repnz
loopne
xor
rcrb
pop
sub
cmpb
insl
loop
jo
and
jmp
inc
cs
sbb
adc
lret
push
cmpb
add
sbbl
inc
mov
in
cmc
push
xor
pop
dec
xchg
test
cmpsl
popa
cli
shrl
dec
std
jmp
add
push
add
push
iret
rclb
add
ret
das
fldl
pop
int3
xor
negl
cltd
sbb
sarb
stc
push
out
rcrl
jmp
cmp
push
xor
add
lcall
add
jp
popa
xor
sarb
rcl
jmp
add
inc
loope
sahf
pop
xchg
add
pop
fs
arpl
jns
push
xchg
push
lods
out
push
pop
aad
mov
ret
jo
inc
xchg
insb
add
dec
lret
adc
pushf
scas
sub
inc
leave
cmpsb
inc
pop
add
push
sahf
add
cld
fldenv
pusha
outsb
icebp
add
mov
sub
aaa
int
clc
mov
jo
aam
or
jnp
popl
or
inc
iret
xchg
mov
rorl
mov
shr
add
ret
and
mov
add
arpl
jo
mov
push
sbb
ret
inc
add
xchg
mov
popf
shll
mov
add
insb
lea
mov
aaa
popa
filds
jns
pop
andl
or
pop
jbe
xchg
sarb
outsw
call
fidivrs
mov
aad
add
push
add
insl
inc
jb
pop
mov
jno
inc
mov
cwtl
pusha
into
jmp
fists
add
xchg
inc
cmp
sub
adc
dec
mov
xor
inc
xchg
adc
and
mov
pop
add
aad
mov
pop
mov
imul
sub
or
adc
rolb
mov
sbb
push
dec
push
sarl
or
mov
or
cmp
bound
mov
insl
add
cltd
cmove
fs
jge
clc
sub
jecxz
jb
bound
add
popa
xchg
mov
sub
sar
sbb
pusha
jle
cmp
loop
push
mov
inc
mov
add
dec
dec
fs
loopne
add
add
cltd
push
mov
cmp
fcoms
bsf
xchg
loop
shlb
cld
loopne
cmp
mov
sahf
cwtl
nop
add
lock
xchg
mov
stos
add
into
scas
fildl
xchg
fwait
jns
inc
je
int
ss
push
int3
shl
xchg
sub
nop
ret
inc
ljmp
repnz
add
out
pop
add
mov
mov
add
mov
adc
out
cmp
inc
rclb
push
jae
cmc
jge
pushf
pusha
inc
mov
add
lret
ret
mov
lods
add
ror
push
pop
inc
add
stos
xlat
xchg
stc
ja
lret
mov
int3
add
sub
pop
adc
inc
add
push
fdivrs
pop
pop
shr
mov
add
in
push
inc
mov
dec
es
pusha
add
divl
ret
inc
add
mov
in
pop
out
or
rolb
or
movsb
test
mov
jae
adc
adc
mov
in
addb
icebp
add
inc
mov
aaa
cmp
out
lahf
push
lea
jns
mov
xchg
faddl
test
lods
fldenv
inc
add
mov
stos
xchg
aas
in
jg
and
pop
add
ss
je
addb
fidivs
js
xchg
icebp
or
and
shlb
pop
dec
sub
xlat
dec
icebp
cmp
push
in
lock
clc
ret
loopne
adcl
dec
or
add
sub
loopne
shrl
mov
add
sub
inc
jnp
push
and
jecxz
sbb
inc
movl
push
sbb
pop
pusha
xchg
pusha
cs
scas
mov
cmp
sti
cli
outsl
arpl
add
xor
lret
ret
or
adc
fistps
out
fiaddl
lret
push
xor
add
lea
sbb
push
lds
dec
adc
push
cmp
shlb
cmp
pushl
sti
das
mov
fisubrs
dec
aas
stc
aas
mov
cmp
push
dec
pop
add
shrl
or
dec
or
mov
jl
inc
cmp
ds
inc
push
pop
pop
mov
xorl
sbb
add
mov
jl
jo
pop
dec
cmpsb
pop
xchg
pop
lcall
lods
xor
mov
sbb
mov
add
add
inc
and
ret
add
xor
shll
pusha
cmp
push
roll
fiadds
inc
and
jnp
sub
push
rolb
in
arpl
dec
cmp
push
adc
xor
push
in
rolb
xlat
jge
stos
or
adc
dec
sbb
pop
popa
cwtl
pop
add
daa
pop
into
shl
jne
add
rorb
jb
push
in
or
mov
push
xchg
shrl
jle
pop
aas
or
mov
jge
mov
add
loopne
ja
push
insb
cld
add
adc
in
inc
push
cmp
mov
mov
cmpsb
push
pop
cwtl
incb
jecxz
xchg
push
fdivp
cltd
jecxz
fdivrs
add
out
push
push
jmp
add
and
in
sub
outsb
repz
lds
scas
push
inc
sahf
add
add
fistpl
fwait
pop
flds
sbb
repnz
add
testl
pop
mov
iret
xor
dec
xor
inc
or
loopne
jg
addl
dec
add
inc
xchg
mov
aam
and
push
add
add
inc
xchg
scas
add
test
mov
pop
inc
out
and
jmp
xchg
xor
and
fcoms
mov
lcall
pop
cmp
cltd
mov
loopne
inc
mov
leave
jno
movsl
rorb
loope
adc
push
mov
and
es
divb
add
or
iret
arpl
jno
cmp
mov
mov
xchg
enter
inc
add
filds
lahf
sub
rolb
addl
lock
xchg
adc
ds
lods
rorl
add
adc
movsl
fdivs
jmp
add
mov
stos
add
cmp
inc
loopne
fidivrs
sbb
neg
and
sbb
sub
cmpsb
xchg
popf
push
cmpsl
out
jl
arpl
add
clc
adc
in
inc
add
mov
addb
or
push
xchg
into
cmpsl
cmp
fwait
in
add
psllq
cli
nop
outsb
jo
jbe
pop
sbb
add
push
pop
add
add
mov
inc
sbb
lods
loop
or
or
add
push
andl
pop
paddb
and
xchg
or
mov
inc
push
inc
mov
add
aad
jge
pushf
and
xor
cmp
adc
ss
imul
aas
lock
adc
add
xchg
std
or
sub
inc
outsl
decb
adc
rcll
sub
sub
test
dec
scas
cmp
cmp
cmp
jl
add
out
sahf
fwait
lahf
loopne
push
std
add
icebp
add
pop
lds
pop
jle
mov
add
mov
loope
daa
xchg
cmp
into
gs
ret
icebp
fucomip
ret
mov
cmp
mov
pop
outsb
push
add
mov
add
cmpsb
sahf
mov
add
fisttpll
jno
xchg
call
fisttps
mov
xchg
jmp
fstpl
aad
daa
push
rolb
xchg
add
push
cmp
mov
sub
dec
jle
movsb
dec
pusha
lcall
je
pop
sbb
iret
inc
shll
add
arpl
int3
sbb
cmp
fld
jl
aaa
daa
add
pop
repnz
test
int
sbb
outsl
fldcw
push
movsl
dec
lret
add
testb
out
mov
add
or
and
sbb
and
pop
inc
xor
xlat
sub
jbe
mov
xchg
pop
fsubl
pop
adc
cmp
aad
pop
cmp
addl
rolb
adc
inc
push
mov
dec
add
scas
inc
dec
ret
pushl
cmp
in
shlb
mov
xor
shr
in
addb
add
add
ficoml
pusha
enter
dec
jo
mov
or
cs
pop
es
pop
out
arpl
push
xor
movsl
push
adc
nop
sarb
pop
sti
mov
pushf
cmpsl
leave
mov
shll
xor
in
jle
mov
add
add
outsl
jnp
roll
dec
pop
jle
call
add
rclb
test
cmp
incl
mov
in
adc
pusha
xchg
pop
add
clc
movzwl
aaa
inc
mov
fiadds
add
outsl
lea
cwtl
add
aas
addr16
add
inc
sti
mov
xchg
mov
insb
push
sub
mov
inc
aam
cli
popf
inc
cmpsl
lds
jl
cs
xchg
sbb
pop
xor
shlb
icebp
jns
add
dec
lret
fdivl
inc
out
xchg
sarb
add
bound
daa
inc
js
add
cmp
mov
mov
mov
addb
cmpsb
xchg
in
xor
cli
lret
fadds
xlat
aam
cmp
int
sbb
mov
add
mov
jl
add
pop
call
jno
inc
mov
pop
mov
cltd
scas
inc
ror
mov
insb
or
cmp
mov
sbb
outsl
fnstsw
add
ds
hlt
cmc
scas
hlt
scas
add
je
inc
push
aad
push
add
jae
mov
cmp
dec
or
cmp
mov
test
add
lock
jg
pop
arpl
roll
rcrb
inc
add
mov
repz
out
jle
add
mov
pop
incb
jbe
add
mov
lret
jp
dec
loopne
ljmp
sbb
call
iret
sbb
add
push
data16
or
sub
dec
addr16
add
jp
ljmp
aaa
sub
loopne
add
ja
enter
add
arpl
cli
push
insl
cli
sbbb
push
inc
sub
or
sub
pop
subb
inc
add
loop
test
scas
cmp
or
or
xor
sub
cmp
repnz
push
adc
and
pop
add
loopne
push
ljmp
add
mov
inc
out
jbe
popa
mov
or
sub
ret
mov
fwait
jg
inc
mov
stos
xor
or
lods
mov
lahf
add
faddl
out
sub
and
sbb
test
lods
adc
daa
mov
pop
xchg
repz
das
cmpsl
add
inc
and
js
add
mov
inc
jg
cmp
push
lods
ret
fmul
push
insl
pop
push
dec
add
orb
jb
xchg
cmp
add
cmpl
or
inc
mov
ds
jae
adc
and
outsb
cmp
xchg
xor
inc
push
add
xchg
test
repz
out
push
add
add
lods
mov
pop
jns
push
fwait
add
xor
inc
adcb
scas
dec
cmpsl
mov
mov
into
add
cltd
add
dec
nop
pushf
jbe
repnz
add
das
orl
add
imul
ret
sti
add
xchg
pop
repnz
add
mov
mov
cmp
adc
inc
xchg
sbb
fsubr
inc
jle
push
rorl
inc
icebp
stos
rorb
sub
les
push
js
stos
inc
mov
add
cmpsb
push
mov
call
dec
or
cmp
scas
sbb
andb
mov
lods
fs
fnstenv
jno
cwtl
pop
add
loope
lret
in
xor
push
xor
jmp
imul
mov
clc
dec
imul
sub
out
mov
or
les
xchg
lock
add
push
cwtl
dec
jp
sub
cs
lock
cmp
add
cld
ds
inc
add
in
cmpl
add
faddl
push
ja
inc
ds
or
push
movsl
ret
mov
jmp
pop
ror
add
insl
mov
cmpl
mov
roll
inc
repz
add
fdivrs
ja
jl
jmp
jg
dec
jecxz
lock
ror
into
rcrb
add
cli
test
xor
mov
lcall
loop
adc
cmp
xchg
add
or
and
pop
out
xor
dec
add
pop
cmc
sbb
inc
add
lret
into
fdivrs
in
add
clc
jbe
xchg
fsubs
pop
inc
loope
add
and
jl
push
push
sti
fcmovb
mov
fadd
into
add
sbb
cld
add
push
pop
sarb
addr16
add
repz
int
leave
add
pop
cmp
decb
xor
jnp
movb
inc
fwait
add
jbe
outsl
xor
cmc
aas
in
enter
adc
dec
ffreep
ss
sbb
stc
add
clc
xchg
mov
inc
add
or
mov
pop
jp
inc
jb
and
test
push
inc
add
mov
test
jno
ret
stc
cmp
sub
jge
mov
frstor
faddl
cli
scas
sbb
int
push
outsb
lea
add
scas
add
mov
sbb
outsl
movsl
js
lea
loopne
and
inc
adc
shlb
fldl
leave
mov
xchg
add
inc
jno
cld
mov
inc
pusha
jbe
in
lock
repnz
daa
cmp
push
add
mov
aam
add
cmp
adc
mov
pop
test
xchg
fsubrl
pop
xchg
sbb
inc
inc
in
xor
push
inc
push
cli
mov
cs
mov
jecxz
mov
out
xchg
rcrl
add
arpl
out
adc
addr16
add
jno,pt
cmp
testb
push
add
fists
mov
adc
cmc
jecxz
clc
cwtl
cmpsl
sbb
fildl
push
loop
jl
inc
add
inc
daa
data16
stos
add
adc
fwait
inc
xchg
adc
test
shll
flds
adc
inc
and
sarb
add
and
adc
and
mov
add
push
dec
push
jnp
push
inc
test
dec
sub
lock
sub
loopne
lret
movsb
push
sti
or
lds
stc
mov
loopne
add
addr16
imul
sub
jecxz
push
cmp
adc
or
jo
lock
xchg
hlt
add
cmp
mov
jae
pop
mov
rcl
and
push
mov
or
inc
inc
fucomi
add
xchg
mov
out
pop
pop
push
jle
iret
loop
add
jmp
rorb
stos
mulb
mov
mov
inc
dec
add
loope
or
add
lret
cli
pushf
ss
add
loop
dec
ds
mov
mov
jge
filds
mov
fdivl
mov
add
shrb
popa
add
stos
cmpsb
sub
data16
test
pop
xor
mov
and
arpl
add
jns
nop
xor
fwait
jae
adc
add
cwtl
add
imul
add
mov
scas
lock
or
dec
shlb
rorl
pop
loope
mov
add
outsb
nop
repnz
fmuls
push
and
sub
lock
jo
and
jg
inc
add
xor
cmp
cmp
fadd
cmp
add
sbb
jle
iret
mov
test
ja
sahf
lods
push
add
jnp
mov
stos
popf
cmp
add
pop
sub
add
mov
lar
andb
mov
pop
add
adc
inc
add
lahf
popa
xchg
xor
add
fs
xor
mov
inc
add
iret
shlb
add
imul
xchg
in
inc
icebp
popa
inc
add
es
mov
mov
xor
mov
pop
iret
push
in
repz
push
jmp
mov
in
or
mov
cmp
addb
rcll
add
lds
bound
test
mov
jb
enter
inc
nop
sbb
pushf
add
arpl
addr16
mov
add
or
sbb
add
cmpsl
lock
js
in
ds
add
inc
mov
scas
ficoml
popf
mov
add
dec
mov
addl
icebp
jne
push
mov
shll
pop
loopne
add
flds
xchg
sbb
test
stos
xlat
push
add
jg
or
add
fmuls
add
or
addl
jbe
or
or
shll
xor
lock
outsl
inc
push
add
in
add
pop
fdivs
inc
add
mov
into
jmp
out
fsubrp
push
movsb
stos
add
sbb
add
bound
outsb
loopne
pop
sarl
icebp
arpl
adc
jg
add
ret
orb
sbb
add
cltd
inc
and
mov
adc
rcrb
dec
and
fs
clc
fdivrs
lods
and
popa
cmp
pop
sbb
or
push
inc
enter
pop
jg
push
loop
rolb
pop
add
inc
pop
mov
jge
jg
ret
add
xor
xchg
cs
insl
rol
add
in
fdivrl
iret
sbbb
lcall
add
inc
sbb
cs
mov
inc
inc
jns
adc
pop
adc
ss
movsb
test
rorb
dec
jo
arpl
outsl
hlt
repz
inc
out
and
pop
scas
push
mov
pop
xor
cmp
ret
mov
add
mov
dec
out
clc
xchg
add
stc
cs
push
cmp
pop
add
mov
out
leave
xor
adc
mov
ljmp
cli
push
add
push
sbb
loope
push
add
and
call
sarb
js
push
lret
add
cmp
subl
add
dec
or
andl
scas
and
mov
jecxz
jnp
sarb
aaa
inc
cmp
sbb
xchg
nop
call
add
dec
sub
ret
addr16
imul
dec
mov
pushl
loop
mov
add
add
mov
jne
dec
arpl
adc
dec
cmpsl
mov
jbe
add
and
add
movsb
mov
repnz
add
into
pop
sbb
mov
add
jno
add
bound
xor
cmc
sub
mov
add
bound
ds
ret
inc
notl
add
mov
inc
daa
imul
getsec
lods
dec
jle
xchg
aam
icebp
fcomps
mov
sub
lahf
add
ret
add
sub
and
outsl
mov
dec
or
inc
js
add
or
pop
popl
xchg
push
in
push
add
sub
adc
cmp
lock
push
mov
mov
pop
add
arpl
inc
inc
shrl
out
add
shlb
mov
cmc
arpl
jecxz
pop
test
pop
or
std
sbb
out
add
inc
push
jo
add
jmp
lods
jecxz
inc
sub
lods
movsl
mov
sub
inc
inc
ficoms
xor
loope
out
cmpb
rorl
loop
adc
mov
xchg
jo
and
jb
addr16
add
ret
arpl
sahf
pop
testl
add
push
loopne
push
add
cmc
inc
pop
divb
add
pop
inc
sbb
ret
adc
int3
push
ljmp
pusha
les
loopne
sub
xchg
mov
inc
js
rorl
push
test
mov
loop
mov
arpl
xchg
fs
xor
rcrb
inc
lods
add
sbb
movsb
or
mov
jle
add
mov
push
dec
and
out
in
or
stos
pop
pop
add
out
sarl
xchg
mov
lahf
mov
arpl
mov
call
cmp
lret
adc
jo
fs
test
xchg
sbb
dec
ret
push
push
loope
pop
xor
pop
add
pop
add
jg
cmp
pop
add
ljmp
cmpsb
test
aad
scas
insl
sub
or
aam
or
fwait
je
pusha
data16
test
mov
add
and
add
inc
icebp
cmp
arpl
mov
addb
xlat
cltd
mov
jge
add
sub
inc
cmpsl
mov
aam
addb
je
shl
xlat
mov
and
cmp
mov
ja
pop
fld
inc
or
in
xor
loope
xabort
add
or
jbe
pop
inc
test
push
cmpsl
bound
shlb
cs
test
push
or
pop
dec
push
cmpb
dec
in
jns
add
repnz
xchg
or
jae
sub
out
ljmp
cmp
roll
insb
add
loop
mov
and
arpl
xorb
dec
nop
add
pop
mov
js
xchg
sbb
add
pop
enter
lret
jb
add
inc
pop
les
icebp
jmp
gs
bound
arpl
add
pop
movsl
push
mov
jg
rorl
mulb
insl
add
push
inc
jmp
or
subb
xor
jle
mov
ret
sahf
addb
dec
push
pop
and
test
lret
xchg
outsl
rcrl
add
addr16
loope
movsl
add
pop
xchg
mov
jg
scas
clc
inc
inc
xor
add
inc
shlb
add
xchg
sub
mov
inc
dec
add
adc
xchg
push
inc
imul
std
jecxz
insl
jo
out
shl
sbb
fiaddl
pop
movsl
add
dec
add
add
add
ss
ljmp
mov
fsubrp
cli
xor
mov
in
adc
stos
inc
pop
stc
ret
inc
cs
mov
adcl
loopne
adc
xchg
ss
shl
add
sub
loopne
push
pop
add
jmp
pop
testb
aaa
sti
js
cmc
add
add
jne
inc
adc
dec
mov
pop
mov
add
adc
test
sbb
shlb
and
and
pop
into
adc
add
mov
lock
mov
in
or
out
addr16
and
repnz
cmp
mov
pusha
mov
aam
rorl
rclb
test
std
xor
jge
inc
add
cmp
fsubp
fstp
cs
inc
add
into
lret
popa
sbb
mov
comiss
inc
fildl
push
mov
pop
jno
punpckhdq
xchg
inc
push
shrl
add
and
pop
lods
dec
jbe
mov
int3
icebp
inc
inc
jb
dec
out
sbb
or
xorl
call
nop
ret
pop
add
adc
stc
clc
sub
cmp
pop
int3
es
add
mov
pop
ljmp
xchg
xchg
ss
inc
add
cmp
fildl
int3
or
cli
repnz
out
push
cmp
loopne
sbb
push
or
cmp
add
and
insb
mov
leave
loope
shlb
add
clc
inc
and
js
nopl
out
xchg
jo
push
or
push
hlt
popa
dec
mov
cmp
arpl
push
aas
inc
repnz
clc
lods
out
pop
ficompl
add
mov
add
push
mov
add
inc
fstl
ror
cld
inc
jbe
arpl
lock
add
outsb
hlt
cmp
sbb
in
push
pop
shlb
test
jp
jge
pop
test
loopne
xchg
lret
jecxz
mov
cmp
popa
and
rclb
jae
jbe
adc
jno
xor
xlat
in
inc
imul
leave
ret
insl
orb
enter
pop
add
imul
shl
adc
fimull
mov
push
icebp
push
lock
pop
xor
subb
add
stos
adc
mov
xor
das
xorl
sarb
mov
and
scas
fwait
imul
pushf
sti
add
stos
retw
subl
xchg
inc
add
nop
addr16
add
jmp
loopne
faddl
push
inc
cltd
mov
lock
add
cs
jmp
push
mov
popa
jno
cmp
shrb
xor
dec
ljmp
icebp
pop
ret
or
lret
adc
in
push
add
cmpsl
int3
andl
fisttpl
mov
out
pop
pop
mov
fildl
jl
sahf
mov
push
and
shlb
xchg
insb
loope
add
sub
jle
inc
push
xchg
out
pop
notb
add
inc
sbb
add
add
mov
inc
or
inc
cltd
adc
rclb
pop
lret
mov
push
push
pop
add
fsts
add
mov
adc
and
mov
add
rcrl
lds
std
shrb
add
mov
lods
verw
sbb
jnp
rorb
adc
enter
add
add
add
lret
and
cmpsl
add
dec
sbb
jnp
jp
add
cli
fldcw
xchg
cld
sub
outsb
adc
or
add
xor
std
fwait
in
loopne
add
mov
sbb
xor
add
and
sbb
push
cltd
push
dec
aam
mov
stos
add
jae
cmpb
and
adc
jle
xchg
add
sub
cli
adc
add
int3
rcrb
insl
pop
aad
iret
push
std
ss
mov
add
mov
pop
xor
add
mov
in
or
enter
movsb
lret
add
mov
adc
add
insl
pop
hlt
add
sbb
add
idivl
adc
or
dec
sbb
jecxz
sarb
test
cli
arpl
outsl
cmp
sbbb
or
inc
call
jp
and
sbb
cmp
xor
jo
test
push
xchg
cmp
rcl
jne
jp
out
pop
jg
and
mov
adc
cli
aas
leave
cmpb
push
add
jo
add
push
push
popf
decb
add
cmp
inc
repnz
andb
add
movsl
mov
push
imul
inc
or
push
push
and
cmc
clc
jns
push
scas
aam
add
je
pushf
add
fmull
jmp
inc
lea
ret
cmp
es
loope
sbb
icebp
mov
push
mov
iret
push
cmp
mov
pop
mov
push
scas
cwtl
xchg
pop
mul
mov
dec
sub
push
add
loopne
repz
fists
inc
cmp
mov
mov
inc
mov
jmp
lds
int3
fists
fdiv
sbb
sub
inc
push
mov
rcrb
add
and
aam
sarb
cmp
rcll
fbld
leave
add
and
lock
and
push
pop
xor
mov
mov
in
push
add
cmp
aas
jne
add
aad
fwait
sub
lret
xchg
mov
add
or
in
repnz
stos
lret
mov
lea
popf
jecxz
push
daa
mov
pushf
fwait
or
push
jb
sbb
inc
addr16
jge
xor
stos
call
xchg
lcall
mov
jl
in
cmp
jp
mov
and
add
push
out
lret
inc
and
jmp
sub
pop
dec
add
xchg
sarl
mov
add
xchg
or
shl
sub
ss
aaa
repnz
add
jmp
pop
xor
in
repnz
aad
stos
lods
arpl
mov
jno
cmpb
mov
enter
lods
add
pop
dec
dec
xchg
push
bound
inc
sub
pop
or
push
aad
pop
cwtl
cmp
sbb
sbb
or
add
sub
stos
xchg
cmpl
fldl
cltd
call
push
fwait
xor
inc
insb
add
sub
imul
rorl
sub
adc
adc
iret
add
out
xorb
lods
cmovae
test
rolb
mov
adc
pop
je
je
adc
call
push
jae
cmc
inc
lock
stos
add
and
cmc
addr16
cld
rolb
mov
push
jae
enter
cmp
xor
fisubs
adc
testl
push
aam
inc
sbb
imul
test
push
jmp
add
push
lods
xor
push
pop
fcoml
add
inc
or
js
add
xor
jl
dec
lcall
fidivrs
mov
icebp
mov
arpl
jne
lods
dec
or
mov
push
test
je
dec
inc
push
add
leave
lahf
inc
add
cs
inc
add
cpuid
in
inc
leave
xchg
add
sbb
jo
insl
add
mov
shr
cmpb
inc
subb
jmp
mov
inc
jp
ds
xlat
add
cmpsb
or
popf
rol
outsb
push
add
ret
in
add
hlt
clc
je
sbb
rclb
mov
dec
add
mov
aaa
add
mov
stc
inc
pop
mov
stos
jnp
inc
mov
lods
xor
pop
add
out
shl
dec
in
cmp
nop
jbe
cmp
adc
push
int
flds
and
idiv
inc
add
sbb
push
bound
push
and
inc
push
push
xor
pop
xorb
mov
call
add
or
movsb
add
sub
ljmp
into
mov
push
jb
dec
cwtl
roll
stos
xor
and
es
add
xchg
arpl
add
jo
rcr
ds
add
adc
mov
or
fwait
xor
loopne
js
pop
sub
lret
fisttps
aam
or
mov
push
inc
fnstcw
and
icebp
je
pop
mov
jl
adc
or
jg
sub
js
insl
add
scas
or
jb
or
aaa
sti
inc
test
in
imulb
add
xor
xor
inc
jnp
add
lret
imul
push
and
jp
in
add
mov
repz
iret
arpl
dec
int
cmpsb
int3
imul
movsl
mov
loopne
inc
and
cmp
fildl
test
loop
jp
add
std
jg
pop
cmp
mov
inc
push
and
in
mov
push
mov
mov
add
cmpsl
jbe
mov
xor
into
fwait
add
test
inc
add
je
fnstenv
xchg
shll
imulb
sti
call
lods
mov
dec
xor
fs
mov
dec
add
cmc
pop
ficomps
add
test
lea
sub
clc
out
mov
lcall
pop
pop
shll
mov
mov
inc
jmp
fiaddl
adc
cli
hlt
sarb
dec
dec
mov
add
inc
and
in
xchg
add
aas
adc
aad
popf
scas
rclb
xorb
out
push
add
ldmxcsr
push
add
dec
xor
decl
push
call
pop
pop
adc
pop
in
stos
or
out
gs
mov
pusha
push
xorb
out
cmc
add
xor
add
push
jbe
or
faddl
sub
pop
and
imul
jp
scas
cld
mov
pop
add
incb
inc
mov
or
pop
jmp
imul
cwtl
xor
das
out
es
jne
add
daa
mov
data16
sbb
sub
jbe
popf
std
imul
hlt
xchg
je
popa
adc
cld
sbb
push
shr
scas
sti
or
add
sbb
jne
add
cmp
sub
sub
jl
pushf
stos
push
add
xor
pop
pop
and
add
imul
daa
adc
shll
shl
lea
xorl
cltd
lock
andb
mov
ljmp
inc
add
sub
fildl
mov
cmp
push
hlt
adc
mov
adc
push
movsb
pop
sub
or
xor
test
ret
insl
mov
pop
or
inc
mov
test
jle
adc
pop
adc
mov
sbbb
and
adc
xchg
loope
or
add
or
xchg
decl
or
adcl
cs
add
dec
jns
add
fbstp
test
call
cmp
cmp
add
ftst
pop
jl
arpl
iret
mov
out
sbb
dec
leave
fisttpll
sub
add
lret
ds
sbb
add
or
xor
je
loopne
mov
ljmp
inc
add
or
testb
je
push
mov
rolb
mov
inc
sbbl
or
push
int
loope
movd
inc
stc
lahf
aam
repnz
aas
es
arpl
fsub
int3
dec
lock
aad
adc
fiaddl
inc
add
mulb
cwtl
and
lds
nop
mov
pop
scas
push
daa
mov
das
enter
stos
mov
inc
inc
adc
fucomip
aam
add
pop
movsl
inc
cmp
mov
push
inc
xor
jg
adc
lcall
mov
or
inc
xchg
shrb
push
mov
int
or
inc
add
es
cmp
or
jno,pt
popf
aaa
aas
pop
inc
add
mov
movsb
xor
add
lea
scas
xor
pusha
daa
sbb
insb
inc
shl
fildl
sarl
add
xlat
mov
xchg
mov
test
or
lods
stc
sarl
xor
and
ds
lahf
sbb
mov
xor
inc
xchg
fcompl
pop
jnp
push
add
lods
xor
shrb
arpl
pop
push
in
add
bnd
outsb
jp
rcr
jecxz
add
inc
cmp
pop
cmc
pop
jns
inc
mov
add
outsb
arpl
stos
push
xchg
and
andb
mov
mov
inc
add
fiadds
push
loopne
cmp
std
pushf
and
js
inc
in
pop
fs
rcl
or
add
cmp
add
xlat
adc
shrl
jge
sbb
add
dec
add
mov
nop
xor
push
push
add
in
dec
pop
inc
lret
push
push
push
mov
pop
roll
leave
add
inc
in
add
insl
sub
repz
movsl
jg
inc
push
orb
movsb
arpl
nop
cmp
pusha
xor
or
mov
stc
pop
cld
push
jno
push
push
lock
test
loopne
dec
stos
add
inc
xor
orl
push
sub
add
and
add
inc
orb
add
test
popf
lds
push
andl
loopne
add
into
mov
mov
add
push
cmp
ss
rol
imul
and
adc
jp
clc
xchg
pop
adc
mov
rolb
loope
pop
shlb
mov
pop
fstl
aaa
and
add
dec
jecxz
ror
rcrb
cmovns
xchg
test
inc
mov
add
adc
addr16
fldt
pop
and
rolb
cltd
jge
pop
arpl
add
clc
mov
sub
push
testb
loope
dec
xor
and
rolb
repz
cmpsb
add
lret
xchg
call
orb
push
and
mov
jmp
xchg
mov
outsb
cwtl
cmpsl
adc
add
stos
mov
popa
imul
add
lea
mov
dec
pop
repnz
pop
inc
mov
shlb
mov
arpl
push
int3
mov
int
jno
pusha
inc
inc
push
mov
add
aam
add
addl
divl
mov
test
pop
adcb
pop
shll
cmp
push
gs
mov
loope
into
pop
adc
sbb
shrb
xchg
orl
mov
aam
out
add
aad
decl
int
add
adc
mov
push
jle
jg
xchg
cmp
add
stos
adc
push
shll
xchg
mov
fistl
adc
into
nop
filds
cmpb
hlt
outsl
les
mov
insl
lcall
fnstenv
paddusb
cmpsb
and
xor
push
cmp
idiv
jo
and
rclb
repz
test
add
inc
push
push
push
sbb
lock
imul
add
cmc
push
ja
jae
jns
add
sbb
movsb
add
lahf
mov
adcb
ja
add
jmp
dec
pop
bound
cmp
frstor
pop
adc
add
pushf
push
arpl
out
daa
repz
lock
add
lret
ret
pop
pop
out
cli
inc
mulb
jo
nop
dec
xor
jne
out
hlt
sub
test
inc
in
pop
sbbl
adc
xchg
mov
sbb
ret
movsb
test
push
shlb
add
std
dec
aas
xor
push
sahf
popf
add
xchg
int3
push
pushf
inc
xor
pushl
cli
addb
enter
pop
or
inc
adc
pusha
jae
test
dec
dec
add
and
adc
sbb
pop
cmp
mov
add
jecxz
add
sub
xchg
push
add
xor
mov
popa
add
dec
jmp
push
nop
rclb
loopne
add
ret
inc
adc
arpl
lea
xor
pop
mov
cmp
dec
add
or
jns
inc
es
arpl
stc
cmpl
cmp
in
ret
popa
bound
xor
pop
sarb
push
jp
in
movsl
add
push
ds
jns
add
stos
arpl
into
mov
js
jge
pop
and
xlat
add
fs
pusha
jecxz
imul
add
mov
mov
push
mov
es
lret
add
imul
add
sub
ret
add
lahf
inc
jle
rolb
push
jecxz
push
cs
sahf
add
mov
jbe
lcall
aas
mov
in
rolb
ret
dec
jo
add
popa
jge
add
cmc
in
add
push
arpl
push
insb
add
adc
xor
adc
aam
pop
mov
mov
mov
jp
cmp
nop
mov
mov
repnz
jnp
and
push
push
fisubl
incb
shr
movsl
loopne
dec
add
inc
or
xor
jns
sarb
in
mov
andl
lea
pop
mov
pop
add
inc
inc
aad
adc
push
add
mov
add
fcomp
jge
ret
cmp
adc
ficoms
mov
int
or
mov
insl
push
jecxz
jnp
xorb
inc
js
and
mov
bound
sbb
xchg
add
pop
adc
clc
rcrb
int
ror
cmc
in
mov
es
dec
scas
cmpsl
loopne
xor
dec
xchg
pop
aas
inc
inc
inc
das
add
mov
add
pop
rcrb
cmp
cld
lds
packuswb
jns
add
pop
aam
mov
dec
pop
cmpsb
jp
inc
arpl
fs
add
add
jne
mov
or
dec
jg
clc
pop
stos
pop
add
sbb
cwtl
xchg
add
js
jg
fs
jns
pop
pop
inc
fnstenv
shl
clc
pop
idiv
bsf
loopne
faddl
mov
mov
mov
lock
inc
mov
push
add
adc
imul
popa
or
sub
fs
jno
iret
adc
xchg
mov
add
push
jg
leave
add
jb
arpl
pop
inc
imul
or
mov
push
mov
xor
jns
shrb
xchg
xor
cs
add
dec
pushf
cld
jmp
adc
imul
shlb
inc
repz
jle
hlt
mov
mov
add
repnz
add
lods
dec
cmc
add
repz
enter
and
mov
ja
mov
movsl
and
xchg
xor
add
aas
inc
in
sbb
push
dec
add
movsl
and
stos
mov
sub
or
nop
inc
add
and
pop
jp
scas
lock
add
fistpl
das
and
ret
pxor
or
call
add
adc
fcomps
dec
inc
pop
and
lea
inc
inc
lds
sahf
add
shlb
shrb
cmpsb
addb
pushf
add
rcrl
int3
adc
mov
add
popa
mov
push
sti
pusha
enter
mov
inc
cmp
rolb
mov
jecxz
out
ret
ja
insl
sub
lods
inc
jo
movmskps
jmp
add
testl
cltd
and
mov
ds
scas
xor
lret
movl
mov
cltd
fwait
add
xchg
cmpsl
inc
jg
xor
pop
cli
icebp
sahf
loopne
sbb
add
ljmp
xor
rcr
add
mov
add
add
lods
out
mov
adc
push
cwtl
or
test
add
arpl
and
hlt
cltd
add
dec
lcall
pop
lret
xchg
out
push
mov
rcll
jb
stc
ss
adc
mov
sbb
stos
add
sub
rcr
add
cmc
dec
xchg
clc
push
dec
inc
push
das
jecxz
add
xchg
add
jle
push
dec
rcrl
and
cmp
adcb
test
dec
mov
test
movsb
ret
jne
xlat
imul
jecxz
ds
xor
inc
addb
mov
popa
mov
lods
faddl
pushf
sarb
sbbb
js
popf
and
loopne
or
mov
add
inc
jbe
inc
test
jne
or
pop
ja
adc
inc
mov
mov
add
ljmp
insb
stc
into
xor
mov
bound
rcr
add
and
rorl
test
es
and
pop
je
insb
add
xor
add
dec
nop
mov
mov
sub
add
inc
or
mov
sub
and
in
add
in
push
ljmp
jge
cli
lcall
xor
shlb
pop
data16
test
mov
inc
insb
pop
dec
imul
pop
jmp
push
mov
add
jo
pop
arpl
xor
incb
or
sub
mov
stc
pop
and
pop
or
dec
and
or
adc
push
fnstsw
add
hlt
call
and
rcrb
mov
add
pop
mov
iret
clc
sub
jecxz
in
repnz
shlb
addb
push
push
or
and
cli
add
test
push
xchg
sub
pop
call
lods
mov
jo
ljmp
push
xchg
jmp
iret
aad
loop
add
mov
lock
in
add
in
mov
adc
add
imul
pop
add
mov
push
test
lcall
mov
add
pop
rcr
or
fnstsw
inc
add
divb
xor
dec
mov
xchg
fwait
mov
imul
movsb
jge
fildl
arpl
test
push
mov
out
dec
int
movb
sub
jp
pop
mov
inc
add
sti
xor
mov
aaa
push
mov
movsl
or
dec
add
or
faddl
inc
xchg
movsl
jle
adc
push
out
or
dec
out
pop
cmp
mov
or
or
xchg
inc
lock
mov
popa
aaa
inc
out
sbb
mulb
mov
leave
mov
mov
sti
sbb
lods
mov
ds
add
jg
lods
add
lock
icebp
mov
sbb
fs
pop
iret
fcoml
adc
shr
dec
push
mov
pop
jecxz
sub
add
inc
inc
loop
ja
fiaddl
push
jp
movsb
cmp
hlt
sbbb
arpl
scas
dec
xlat
aad
adc
mov
loope
inc
clc
cmpsl
add
or
cwtl
jnp
aad
add
xchg
ror
pop
and
push
nop
xchg
add
xlat
cmpsb
jae
lcall
and
shl
dec
fldl2e
add
movsl
daa
adc
clc
sbb
out
addr16
cmp
sbbb
repnz
push
pop
mov
pop
loop
add
aad
rorl
jo
add
push
sahf
and
xchg
lds
icebp
pusha
mov
push
and
scas
sbb
inc
pushl
stos
sbb
mov
rol
loope
push
mov
aad
push
xchg
add
pop
arpl
inc
loopne
push
enter
pop
and
push
and
mov
add
pop
add
pusha
out
enter
or
orb
mov
aaa
bnd
jnp
cmp
mov
and
inc
xlat
and
imul
leave
xchg
add
insb
orb
jnp
shll
or
sbb
outsb
adcl
add
jne
jmp
pop
inc
je
sbb
push
nop
fadds
jo
in
packsswb
in
inc
jbe
inc
adc
pop
adc
inc
pusha
xchg
lock
inc
add
jle
loop
push
scas
dec
add
loope
addb
dec
mov
inc
mov
cmpsl
dec
mov
shlb
jmp
out
sbbb
add
inc
fadd
push
nop
or
add
mov
daa
add
jo
jbe
lods
bnd
add
stos
sub
int
dec
add
pusha
mov
pop
push
ret
mov
repnz
lock
pop
jb
jae
sub
mov
rcll
jns
or
cmc
out
inc
pop
lret
mov
adc
add
lea
imul
imul
jno
add
sub
xor
adc
jo
lcall
or
inc
into
cmp
add
dec
inc
stos
fdivp
jns
add
test
push
or
add
xor
ja
sbb
das
push
cmpsb
mov
jno
out
lret
adc
push
mov
scas
dec
push
pusha
pop
movsb
add
xchg
test
add
or
fstpl
adc
bound
je
inc
sbb
scas
sahf
negl
popf
xchg
or
fcmovnu
dec
adc
fs
or
mov
orb
or
filds
push
pop
adc
mov
and
push
add
lahf
jnp
inc
sbb
cmp
std
sub
sbb
jo
or
arpl
stc
stos
in
cli
inc
add
insl
push
pop
fs
add
add
mov
jecxz
cltd
add
xor
insl
pop
fsts
lods
shl
inc
nop
xchg
or
mov
and
int3
sahf
mov
xchg
cmc
push
ret
jp
mov
rolb
jl
arpl
scas
adc
mov
xchg
ret
popf
add
les
cld
jecxz
add
pop
imul
pushf
je
add
arpl
sub
addl
pusha
aam
add
scas
sub
inc
adc
add
and
ss
add
in
popa
lea
mov
call
loop
andl
xchg
jnp
cmp
movsb
inc
add
mov
lret
ret
push
push
xor
andb
add
mov
xchg
or
test
pusha
fs
adc
jg
cmp
add
sarl
sub
faddl
add
out
ljmp
adc
add
cmp
nop
jmp
and
add
sbb
inc
add
das
dec
push
std
mov
repnz
pop
cmpsl
jae
dec
dec
rorb
cli
loopne
add
ds
lods
jno
rorl
test
orb
in
pop
pusha
dec
inc
addr16
arpl
and
fs
ret
push
jmp
push
jecxz
push
les
icebp
add
imul
cmp
add
xorb
je
mov
push
andb
mov
add
inc
pop
sti
negb
push
add
addr16
push
fdivrp
add
jae
add
ror
clc
scas
add
das
xchg
mov
add
pusha
cmp
movsl
inc
inc
xchg
mov
jb
lahf
push
xor
rclb
sub
inc
data16
es
dec
sahf
pushf
into
inc
adc
dec
add
inc
add
stos
mov
orb
xchg
dec
push
pminub
inc
pop
rcrb
adc
add
aam
xchg
into
jbe
inc
or
inc
add
insb
fldt
sub
mov
test
rcr
inc
call
and
pop
fwait
in
lods
mov
int
add
pop
das
lahf
push
hlt
pusha
mov
ret
pop
divb
mov
cmp
out
add
jmp
int3
xor
inc
pop
adc
jle
cmc
rcrb
jb
or
sar
add
add
jg
scas
add
push
movsb
mov
push
or
and
dec
mov
add
jne
xchg
out
out
add
adc
mov
pop
mov
loopne
xchg
or
add
movsl
imul
pop
cmp
rcrb
andb
stos
inc
dec
mov
enter
fsubl
dec
enter
ret
insb
outsb
lret
push
add
test
daa
clc
push
out
cmp
push
aam
jmp
iret
pop
xchg
call
fisubrs
shr
mov
pop
out
add
ds
add
je
cmpsb
xchg
roll
add
sub
cmpb
enter
aad
add
sub
fistpl
xor
or
orl
nop
cmpsl
cmp
fsub
setns
xchg
inc
aas
ret
rol
add
cmpsb
xchg
push
jo
das
lds
push
stc
dec
push
or
jecxz
pop
mov
loopne
ffreep
sub
xor
push
sahf
jge
pusha
jo
cmp
cmpl
in
call
jns
cmp
fs
testl
roll
add
sub
sarb
add
pop
les
cvtpi2ps
or
mov
mov
rolb
outsl
imul
cs
inc
cmpsb
pop
jnp
testb
add
arpl
push
add
mov
sbb
add
loope
aad
pop
dec
cwtl
or
jl
mov
nop
jb
inc
pop
fadds
in
mov
add
in
rcrb
je
test
jecxz
dec
das
add
lods
mov
add
pop
mov
dec
cmp
mov
dec
sbb
adc
jns
adc
lahf
rolb
xor
shlb
out
pop
addb
add
pop
xor
stos
faddl
ss
loope
sub
inc
dec
add
and
and
lock
mov
addb
call
shlb
or
jbe
ret
je
sbb
mov
andl
add
movsl
adc
add
pop
outsl
xlat
nop
xchg
add
dec
mov
push
das
outsb
sbb
cli
or
or
cli
pop
add
movsb
mov
add
xchg
sarb
pop
add
cmp
jle
call
int3
shlb
and
adc
xorb
mov
jle
jecxz
loope
push
pop
sbb
add
loop
add
outsb
mov
mov
sub
xchg
add
sahf
add
cld
pop
add
mov
push
xor
pxor
push
mov
cwtl
add
scas
dec
fdivrs
add
sbb
cmp
xchg
inc
cmp
test
rclb
icebp
loope
jg
clc
xor
sub
dec
mov
inc
add
leave
jns
add
inc
mov
add
push
test
push
popa
iret
and
std
cmp
xchg
cmp
rcrb
add
loope
xor
test
mov
inc
mov
pmaddwd
pop
cmp
adc
mov
inc
adc
push
cmp
fsubrs
roll
pushf
push
in
inc
or
push
sbb
pusha
mov
cmp
js
pop
cmc
addb
dec
cwtl
add
imul
or
gs
xchg
add
adc
cmpb
js
sbb
inc
lods
xorb
pop
cs
push
push
add
jmp
fmull
outsl
mov
cwtl
xchg
dec
jecxz
push
and
rorb
rcl
andb
add
dec
inc
imul
sahf
testl
adc
jb
inc
add
push
dec
nop
push
subl
mov
cmp
arpl
lahf
add
sbb
repz
cld
movsb
add
xor
mov
jnp
into
stc
pop
inc
add
adc
pusha
add
xchg
inc
cmp
add
sbb
jecxz
inc
pop
scas
push
mov
jmp
cwtl
add
xchg
arpl
xchg
imul
incl
mov
push
test
add
into
jge
arpl
sub
sub
out
fildl
inc
repnz
mov
rcll
and
lea
inc
mov
add
aam
push
das
negl
aaa
jle
orl
insb
and
add
pop
cmc
push
push
sbb
rcll
sub
ret
js
pop
adc
pusha
pop
testb
or
sbb
fldenv
fiadds
out
rol
and
cmpl
push
outsb
dec
aaa
fucomp
aam
mov
and
add
mov
pop
xchg
inc
and
loope
out
pop
rolb
mov
sub
sarb
add
popa
mov
xor
dec
and
add
or
pop
xchg
cmc
addr16
out
loopne
add
xchg
lcall
shlb
les
mov
aas
lock
add
out
inc
loopne
leave
add
push
pop
bound
js
mov
subb
rolb
ss
and
add
pop
jo
inc
shll
fildl
inc
mov
rolb
xchg
jae
add
pop
add
inc
sub
jecxz
sarl
pushf
lahf
ror
outsb
inc
add
xor
inc
cltd
out
mov
inc
fidivrs
inc
push
dec
inc
jns
add
add
imul
xchg
cmpsb
loopne
ss
arpl
cmp
xchg
nop
stc
and
cld
add
pop
jbe
ds
adc
add
push
inc
leave
das
roll
fcmovb
inc
sbb
test
loopne
add
or
nop
adc
jmp
outsb
mov
add
out
ja
das
add
and
push
sarb
iret
ret
int3
dec
in
daa
add
inc
jb
cld
test
add
pushf
mov
adc
dec
add
insl
inc
outsb
stos
or
pop
arpl
in
ljmp
inc
inc
push
icebp
subl
shlb
out
add
cs
mov
movsl
bound
in
inc
dec
test
mov
push
cmc
xor
adc
sub
add
movb
mov
rcpps
shll
mov
xor
adc
fnsave
xchg
roll
jb
dec
pushf
mov
push
push
add
inc
add
lcall
inc
cmc
or
sbb
xchg
rol
ror
dec
pushf
ret
mov
jg
xor
fidivs
xrstors
addr16
and
xchg
scas
je
add
lret
or
int3
mov
pusha
push
jp
xchg
mov
pop
sub
jg
pop
out
pop
lret
mov
call
mov
sbb
xchg
lods
inc
inc
push
pop
pop
pop
cmp
or
adc
cmp
xchg
icebp
insb
and
pusha
cmp
int3
add
aam
outsb
nopl
in
mov
cmpb
jnp
mov
aas
or
xchg
add
sbb
sbb
bound
add
stos
enter
iret
arpl
jecxz
pop
add
push
lahf
add
xchg
add
mov
loope
lcall
cltd
adc
cmp
rolb
push
lea
shlb
jmp
jae
mov
inc
add
push
cmpsl
arpl
imul
dec
movsb
or
add
xchg
fucomi
test
xchg
in
lock
add
addr16
sar
popa
pop
add
das
test
loope
and
insl
mov
mov
mov
out
pop
ror
jae
add
pop
or
pop
add
es
push
aam
out
pop
push
cmpsb
sbb
pop
push
xor
pushl
inc
pop
aaa
mov
stos
jmp
add
test
xchg
jecxz
add
push
cld
scas
sub
and
add
andb
jmp
ret
ljmp
jecxz
adc
add
arpl
out
call
loopne
cmpsl
roll
dec
or
test
fucom
push
ds
dec
mov
or
pmullw
add
and
and
and
loopne
xchg
add
pop
arpl
cmp
fcompl
jmp
ror
cmpl
lret
mov
adc
mov
outsb
pop
add
inc
and
ljmp
out
pop
cmp
pop
xor
outsl
add
je
sbb
clc
stos
cli
inc
pop
push
pop
mov
or
sub
add
add
mov
mov
ds
cltd
or
sbb
xchg
outsb
and
adc
loop
arpl
ja
pop
bnd
push
inc
pop
movsb
fdivs
cmp
add
and
iret
mov
cli
mov
xchg
mov
jecxz
mov
sbb
arpl
adc
sub
or
hlt
push
inc
shrl
cmp
ja
fimull
cmp
mov
out
data16
jle
popa
pop
add
outsl
lea
lods
out
mov
inc
pop
xchg
dec
pop
fstl
jne
and
pop
add
mov
dec
inc
push
out
in
testl
shlb
pop
in
inc
add
dec
mov
mov
shrl
or
popa
push
movl
or
in
inc
dec
add
mov
addr16
insl
inc
mov
incb
in
jno
add
mov
add
lods
aaa
js
or
subb
mov
cmp
cmp
daa
inc
into
add
sbb
jecxz
pusha
add
adc
xor
out
and
cmp
push
pop
dec
mov
jecxz
popa
pop
mov
add
imul
stc
shll
pop
sbb
sarb
push
mov
scas
jo
insl
cmp
negl
fs
xor
dec
arpl
les
pop
nop
jmp
mov
aas
icebp
jnp
cmp
mov
stc
mov
nop
mov
adc
sub
sbb
loop
pusha
out
mov
cmp
jp
bound
inc
hlt
mov
xchg
lock
add
pop
aam
insb
xchg
jge
icebp
dec
lret
mov
add
inc
add
pop
cltd
int3
lds
pop
push
xchg
cmpsb
fstps
ss
pop
push
pop
jecxz
and
loop
add
incl
pop
rcr
rcl
outsl
mov
nop
lods
add
jno
lock
add
repnz
cmpsb
in
pop
add
sub
mov
jle
add
pop
cmp
fcmovb
xor
dec
das
xor
inc
push
add
in
jmp
lods
cmp
lock
inc
ret
imul
cmp
add
inc
dec
adc
or
fstpt
inc
cwtl
lds
popa
mov
cmp
jns
or
outsl
adcl
sub
xor
rolb
cmp
push
inc
repnz
add
push
loop
scas
and
sbb
add
arpl
mov
add
jecxz
addr16
push
or
dec
xor
clc
inc
jnp
jle
add
inc
rclb
jp
movsb
cmp
pop
xorb
and
add
push
pushf
mov
shlb
add
pop
xchg
jmp
hlt
add
push
inc
imul
movsb
cmp
inc
repnz
and
pusha
les
add
ret
pushf
roll
jno
or
xchg
mov
dec
aaa
and
xor
fs
scas
cmc
clc
push
ds
add
fwait
bound
or
dec
add
sub
flds
push
arpl
jnp
leave
lock
mov
inc
test
xchg
loopne
inc
mov
push
mov
dec
inc
add
cmp
xlat
fs
arpl
test
in
and
add
shlb
push
popf
dec
or
out
xchg
add
cmp
das
andb
imul
jno
xor
orb
cmc
push
inc
divl
add
mov
lds
mov
adc
pusha
sbb
mov
add
ja
adcl
add
shr
mov
cwtl
pushf
stos
adc
and
fstpt
add
ret
add
cmp
add
test
ret
add
add
pop
lds
movsl
mov
add
rcll
insb
dec
nop
sub
inc
mov
cmp
pop
mov
aaa
xor
pop
hlt
dec
adc
jne
rclb
mov
add
aam
bound
rorb
insb
dec
scas
int
dec
pushf
mov
adcl
mov
arpl
jo
roll
add
mov
or
test
leave
popf
and
mov
jge
in
jo
sub
inc
add
and
jne
add
into
pop
mov
adc
pusha
add
repnz
add
cmp
or
mov
or
dec
stos
mov
or
xchg
adc
cmp
push
push
adc
jno
es
mov
xchg
aam
pop
adc
mov
bound
aad
sbbb
mov
add
mov
add
push
sbb
mov
insl
popf
mov
inc
aaa
pop
out
adcb
add
dec
pop
imul
mov
lods
shr
add
gs
sub
ret
mov
inc
mov
lods
arpl
dec
pop
or
jge
push
clc
push
add
mov
dec
and
fdivl
sbb
inc
adcb
aad
faddl
xor
bound
pop
adc
cmp
jg
cmc
in
sub
inc
add
xor
mov
loope
add
mov
pushf
and
cmp
imulb
cmc
pop
outsl
add
or
add
fs
jns
mov
pushf
dec
sub
add
leave
ret
mov
faddl
sbb
cmpsl
adc
push
pop
or
cmp
sub
add
in
stc
dec
stos
add
pop
pop
xchg
loopne
push
out
stos
add
addr16
arpl
rcrl
pop
int
aas
mov
divb
sbb
scas
out
add
pop
gs
nop
cmp
xchg
push
shrb
std
push
inc
int
test
mov
jno
aad
loopne
es
hlt
aas
into
xchg
add
mov
dec
and
xchg
jo
add
sub
pop
mov
sti
arpl
xlat
dec
mov
ljmp
inc
sahf
inc
jp
or
loop
xlat
fsub
jno
add
xor
pop
sarb
adc
and
in
mov
rorb
lds
mov
hlt
add
shlb
sub
mov
sbb
loopne
inc
cmp
add
lock
add
push
in
jecxz
sub
aas
rclb
cmp
xchg
cmp
out
add
mov
sarb
ret
in
pop
scas
addr16
sti
into
mov
push
cmp
xor
pop
sbb
repnz
add
adc
scas
mov
sub
das
jle
pop
mov
aad
xor
stos
stos
adc
shlb
sahf
xorl
xor
flds
add
lret
mov
fisttpl
outsw
mov
inc
subb
lret
add
pop
add
or
sub
mov
mov
jno
sbb
or
push
and
xchg
pop
cltd
call
xchg
pop
aam
shlb
icebp
fnstenv
cmpsl
or
xor
cs
fsubr
into
add
mov
add
shrb
mov
cmp
add
add
lods
cmp
mov
push
sub
mov
imulb
add
jl
add
cmpsb
jmp
lea
test
je
into
inc
pop
pop
sti
mov
rol
arpl
les
shr
and
xor
jbe
inc
mov
aad
and
pop
mov
mov
add
es
jg
inc
jne
add
adc
push
test
sbb
shrl
cs
add
sbb
push
add
and
fcmovne
out
add
bound
mov
lret
repz
iret
or
lcall
arpl
push
sbb
popf
adc
fs
loopne
fwait
xor
xchg
ja
test
orl
or
pop
mov
cmp
xorb
fcmovnbe
push
jl
sub
mov
into
arpl
in
mov
mov
cwtl
dec
and
mulb
add
jbe
sarb
sub
test
fsubl
ss
inc
loopne
dec
add
sbb
iret
outsl
and
xchg
mov
sarb
lret
gs
and
adc
inc
add
add
pop
dec
mov
mov
incb
inc
out
out
in
iret
mov
push
xchg
jns
or
popf
push
test
add
fwait
sub
and
mov
add
mov
iret
add
les
shll
xchg
and
lods
aaa
or
mov
lret
mov
scas
outsl
add
push
xor
mov
cld
add
arpl
push
mov
and
push
out
push
pop
xor
sub
loope
and
ret
fsubrl
pop
stos
out
xchg
xchg
pop
popf
inc
inc
pop
insb
add
sub
into
fidivrs
cmp
add
stos
in
cmp
add
pop
pop
js
daa
sbb
mov
adc
inc
adc
push
cwtl
push
sub
push
cmp
shl
pop
inc
mov
movb
pop
inc
push
mov
imulb
push
mov
jb
cmp
add
sbb
iret
mov
mov
mov
imulb
dec
add
mov
push
addr16
adc
add
sbb
add
stos
and
in
rorl
push
add
jmp
jmp
arpl
ds
out
adc
daa
add
xchg
repnz
add
mov
jl
mov
ret
add
or
sub
ja
or
xor
stos
les
daa
push
shr
xchg
add
or
enter
adc
sbbl
cmp
add
xor
mov
sbb
cmp
push
add
cld
jae
daa
inc
jecxz
mov
popf
pop
mov
mov
adc
xor
test
add
dec
imul
test
mov
xchg
inc
add
cmp
rolb
stos
adc
jle
orb
add
sti
popf
lods
leave
jmp
rol
xlat
aas
xor
incl
push
and
mov
movsb
cltd
add
ss
andb
scas
mov
pop
cmp
out
loopne
jns
push
add
inc
pop
ljmp
repnz
add
jnp
cmpsb
mov
in
imul
xor
scas
jns
gs
ds
sbb
jg
inc
add
mov
sbb
scas
inc
mov
push
jns
add
and
iret
dec
dec
add
inc
enter
jle
mov
test
movl
mov
mov
mov
push
pop
or
mov
nop
repz
jge
add
js
test
xor
adc
rolb
sub
push
pop
mov
add
sub
lcall
lahf
dec
loop
and
inc
xor
cmp
add
std
inc
push
inc
cli
sarl
add
sbb
add
enter
inc
adc
pop
fdivp
dec
subb
sub
push
jmp
xchg
add
mov
les
push
fsubl
incl
mov
lahf
add
and
daa
test
add
sbb
cmp
jae
cmp
pop
lahf
pusha
cwtl
mov
push
xchg
lock
call
jns
add
fs
jmp
adc
or
decb
add
and
std
loope
sbb
adc
and
xchg
pop
add
pusha
mov
fistpl
shlb
add
jp
popa
mov
in
aas
or
int3
ret
cmpsl
sti
fcomp
mov
nop
stc
jle
nop
popa
cmp
add
call
or
loopne
add
pop
mov
rorb
push
pop
jg
fiaddl
popa
dec
stos
icebp
int3
movsb
push
repnz
sbb
fstps
mov
xchg
xchg
adc
dec
cmp
lods
leave
lret
sub
add
push
sar
jg
xchg
sub
add
or
mov
repnz
rcrb
jl
add
mov
or
pop
imul
mov
and
push
cmp
in
xchg
pop
into
loop
mov
call
add
xchg
fmul
inc
push
fnstcw
add
adcb
add
mov
rolb
stos
jecxz
or
inc
data16
cmp
fs
pop
mov
fildl
flds
stos
lret
jg
dec
jns
xor
lahf
add
arpl
cwtl
jbe
std
add
nop
push
bound
lods
xchg
fxch
insb
cmp
mov
ljmp
popf
das
and
insl
add
test
ret
inc
xor
add
pop
inc
cwtl
cli
mov
add
cld
movsl
or
pop
pop
out
lret
push
lret
aam
cmp
sbb
add
jns
add
mov
cmp
test
pushf
gs
cmpsl
loopne
add
cltd
sbb
add
and
scas
int3
push
incb
dec
pop
out
into
hlt
inc
lahf
add
loopne
sbb
jno
pop
xchg
les
stos
or
loopne
sbb
add
mov
push
adc
inc
mov
mov
dec
popa
push
or
and
cmp
pop
push
rcrl
and
arpl
add
std
lcall
adc
mov
jmp
add
add
xchg
pop
in
push
lds
xchg
jmp
xchg
cwtl
add
inc
push
fmulp
mov
lds
data16
in
adcl
jns
inc
popf
iret
add
mov
aaa
dec
cmp
int
sub
and
insb
je
sahf
cmpsl
jae
decl
cwtl
psllq
jns
sub
popl
mov
popf
push
setne
cmc
fistpll
mov
inc
add
fdivrl
mov
inc
pusha
mov
dec
fwait
push
cli
xchg
add
pop
cld
xchg
add
fldt
pop
cmp
fsubs
add
loope
filds
add
sahf
sbb
mov
cwtl
rorl
adc
mov
mov
iret
add
popf
int3
add
jg
mov
mov
dec
add
nop
cld
push
sub
add
sbb
bound
add
sti
add
outsl
in
jno
sarl
add
inc
nop
cmp
lock
mov
fninit
xchg
shlb
and
test
adc
xchg
jp
add
mov
clc
sub
roll
mov
mov
jno
outsb
leave
clc
in
repz
jl
sbbb
inc
add
aad
mov
cmp
jns
sub
mov
add
sbb
addl
jo
pop
push
add
insl
sbb
divb
mov
push
rcrl
je
jl
push
aad
in
dec
sub
shl
mov
mov
lahf
loopne
inc
pop
adc
mov
push
mov
arpl
in
and
stos
cmc
mov
add
xor
push
xor
imull
fbld
xor
daa
inc
add
push
mov
add
add
ljmp
ds
orb
cmp
pop
adc
jo
inc
inc
add
imul
sarl
enter
add
mov
add
adc
mov
inc
dec
add
shll
cmp
add
push
and
cltd
adc
jmp
mov
push
std
mov
pushf
cmp
xchg
cmp
in
rolb
mov
xchg
je
push
cs
loopne
adcb
xor
fmul
je
popa
add
inc
loope
or
xchg
mov
or
ret
add
ffreep
inc
or
dec
jnp
shlb
sahf
pop
sub
add
mov
movsl
mov
add
cmpsb
mov
int3
adc
ret
jp
add
sub
sbb
shl
inc
push
insb
nopl
xchg
fnstcw
adc
inc
popf
mov
add
inc
xor
xor
out
add
je
push
pop
rcr
rol
lods
xchg
push
add
mov
xchg
or
jge
sbb
pop
in
mov
loopne
push
sub
test
fsubl
fidivs
or
js
insb
in
and
push
aas
mov
adc
loop
test
int3
arpl
dec
hlt
pop
add
inc
ljmp
adc
pop
jmp
movb
sbb
icebp
add
jge
sub
xor
in
ret
mov
nop
lret
shld
pusha
mov
pop
and
ja
pusha
xor
sbb
mov
xlat
sub
add
ret
add
and
dec
add
push
pop
mov
mov
testl
int
push
pop
add
dec
out
mov
inc
add
adc
mov
addb
sub
mov
inc
sub
xchg
mov
cmc
dec
jp
sub
sbb
das
mov
add
push
mov
jb
adc
cld
mov
xchg
outsl
rclb
in
ret
inc
sbb
xorb
jno
daa
shrl
sbb
jb
inc
cld
das
in
add
pusha
movsb
add
inc
aam
push
dec
add
pop
ss
push
fldt
add
or
and
ljmp
sub
shrb
add
lods
pop
pusha
add
pmaxub
es
mov
adc
arpl
into
jmp
add
sub
adc
lret
mov
xchg
fimull
inc
push
add
test
mov
sub
jo
cmp
xor
dec
add
pop
sbb
add
js
xor
lds
push
cmpsl
mov
mov
out
push
scas
fdivs
loopne
das
add
add
data16
mov
adc
movsl
mov
xlat
cltd
cs
cwtl
push
mov
arpl
inc
enter
add
das
add
or
add
gs
shll
cltd
leave
dec
shlb
scas
pushf
adc
adc
sub
jp
loopne
pop
rcll
add
ret
mov
mov
or
and
and
push
aas
inc
add
loopne
movsl
dec
stc
pop
pusha
iret
incb
inc
push
sbb
add
rorb
outsl
add
adc
fwait
cmp
inc
push
sbb
inc
pop
dec
add
shrb
mov
psraw
adc
push
push
sbb
std
repz
jle
push
outsb
add
adc
orb
pushf
dec
stc
xor
add
jge
shrb
cli
jbe
xor
inc
test
hlt
ja
loop
test
clc
xchg
mov
push
inc
sti
jecxz
sub
sub
mov
add
sahf
rcrb
mov
mov
into
xor
insl
pop
mov
and
xchg
mov
or
lock
repz
ret
add
and
pop
add
sub
pop
mov
xor
orb
in
xor
add
cmp
leave
push
mov
daa
push
or
hlt
mov
push
xchg
add
jg
int
shl
ss
lret
cmc
ret
je
sbb
movsb
in
push
fstps
loop
mov
fdivr
add
bound
out
add
lret
cmpsb
leave
push
sbb
jp
cmp
inc
add
or
and
fcmovnb
push
notl
or
sbb
pusha
xor
sub
emms
xchg
jge
and
mov
push
imul
repz
rol
clts
fisubrl
mov
mov
ret
sub
add
mov
sub
lahf
lcall
loopne
sahf
incl
push
outsl
iret
add
and
add
fdivp
xor
jge
add
and
loopne
sbb
jecxz
jnp
cmp
inc
leave
dec
les
mov
mov
add
add
push
mov
add
cmc
fdivrs
mov
adc
dec
ja
xchg
jne
pop
add
mov
add
scas
pusha
mov
bound
icebp
lock
pop
sbb
aaa
andb
add
xor
pop
mov
pop
mov
inc
pop
mov
nop
iret
je
cltd
add
mov
inc
or
icebp
lcall
sub
mov
pushf
mov
mov
inc
in
sahf
or
xor
and
add
inc
jbe
jae
js
dec
fmul
pushw
inc
lods
dec
sbb
in
adc
add
inc
cli
add
or
cmc
aaa
int
loopne
scas
cmp
imul
clc
jg
ret
call
lahf
test
cs
js
stos
xor
movsl
lock
sub
add
fbld
incb
movsl
cmpsl
xor
adc
test
pop
lods
jb
sarb
fbld
pop
mov
shrb
add
or
hlt
add
mov
dec
lock
sub
mov
icebp
dec
sub
rcrb
mov
and
add
test
inc
mov
push
pop
mov
adc
add
inc
insl
xchg
rolb
in
inc
loopne
repnz
out
lods
add
mov
add
aaa
pop
and
adc
push
cwtl
hlt
in
outsl
add
mov
lods
push
icebp
sbb
inc
pusha
pop
push
push
inc
dec
popa
shrl
mov
or
arpl
add
pushl
inc
loopne
and
test
sub
xchg
lods
lahf
inc
dec
or
pop
or
inc
ret
add
add
inc
xorb
sahf
adc
mov
cmpb
add
daa
aad
adc
and
add
pop
inc
and
add
inc
xchg
jg
pop
arpl
ret
jns
add
ret
mov
mov
pop
xor
test
adc
lret
mov
add
arpl
pop
jo
add
pushf
inc
xor
jnp
loopne
iret
mov
loopne
push
adc
add
leave
lds
mov
cmp
lcall
dec
xchg
dec
inc
pop
jp
shll
cli
dec
and
pop
inc
pop
andb
fisttps
push
pop
inc
and
ret
push
add
jo
lods
xchg
inc
push
daa
int
stos
fcmovb
rol
or
pop
sarl
mov
inc
lahf
jg
sbb
rcr
lds
inc
xchg
pop
in
adc
cwtd
roll
int3
push
loope
jae
mov
pop
add
call
inc
cmp
fildl
add
xorl
add
inc
add
sarl
and
aad
mov
xchg
inc
adc
add
lds
fisubrs
adc
popf
inc
jne
xchg
out
sbb
xchg
gs
lea
inc
add
xor
rclb
popa
inc
loopne
fs
sbb
lods
xor
mov
pop
dec
arpl
fwait
popa
sub
jmp
pop
fildl
pop
loope
ret
mov
add
test
push
jbe
lock
cmpsl
cmp
ret
jno
cmp
inc
ret
outsl
mov
rolb
idivl
ds
jo
cmp
xchg
fs
insl
push
add
jecxz
rcl
in
lods
add
adc
add
cs
add
and
enter
dec
add
sub
adc
pop
dec
add
bound
inc
inc
add
pop
sub
add
arpl
ror
shl
add
adcb
loop
loopne
add
add
jp
sbb
ja
lret
xor
pusha
lea
leave
push
ret
rcll
mov
push
jecxz
add
loop
jle
jno
punpcklbw
sub
xor
mov
jo
mov
mov
add
jb
lods
shr
jl
and
mov
jle
rcr
hlt
mov
add
mov
arpl
mov
mov
dec
sti
sbb
inc
add
mov
clc
popa
or
add
mov
ljmp
mov
inc
test
push
cmp
sbb
add
mov
jo
mov
xchg
lock
add
add
add
pop
clc
aaa
pop
ret
call
in
add
lret
jp
pop
mov
fimuls
outsl
bound
mov
out
push
fwait
scas
mov
push
jmp
jge
loopne
inc
test
sbb
dec
sbb
xor
roll
jno
add
mov
add
inc
mov
mov
add
or
js
inc
test
or
xor
and
pop
inc
stos
add
sbbb
clc
mov
rcl
xor
sarb
faddl
adc
jl
add
jp
fptan
aam
and
clc
sbb
add
jmp
xor
loopne
shll
daa
mov
in
loop
ds
filds
imul
icebp
aas
add
jmp
push
mov
in
pop
hlt
xor
aam
xlat
cmp
cs
inc
add
sar
in
mov
addr16
inc
fildl
mov
imul
mov
lahf
mov
jl
jo
cmp
rolb
outsb
push
sete
sbb
add
inc
add
ret
pop
push
dec
cmp
inc
or
ds
adc
mov
ljmp
mov
out
mov
mov
ret
cmp
add
mov
and
dec
or
mov
add
mov
leave
testl
loop
pop
push
add
dec
stos
dec
inc
dec
daa
fstpt
mov
xchg
push
rolb
cmp
inc
push
lret
icebp
add
sub
out
leave
mov
add
jmp
es
insl
addl
shlb
or
inc
fldlg2
bound
es
leave
cmpl
adcl
cmc
or
mov
xchg
add
add
jecxz
pop
clc
pop
jle
mov
inc
push
pop
out
and
add
push
out
lock
leave
add
repnz
les
pop
or
xor
add
mov
cmp
popf
dec
clc
in
ja
test
cld
incb
lahf
into
jecxz
pop
push
idivb
pop
std
cltd
rolb
nop
add
rcll
cld
push
or
or
stc
add
pop
in
icebp
pop
add
imul
sbb
lret
adc
lds
arpl
or
je
je
add
enter
cltd
inc
add
dec
pushf
lods
add
add
cmp
xchg
add
adc
cmp
js
ret
jo
sub
std
fcompl
pop
pop
xlat
jp
jle
jo
push
xchg
add
in
dec
inc
movsb
sub
stos
add
add
ret
fidivl
pop
cmp
cwtl
cmpsb
movsb
add
jmp
rorl
outsb
iret
mov
jg
arpl
push
xchg
lret
loopne
das
stos
add
xor
mov
add
or
in
add
inc
push
subb
cld
xchg
arpl
pop
adc
jg
mov
mov
pusha
add
pop
sub
stos
dec
add
xchg
mov
gs
fs
xor
stos
int
lret
pop
icebp
lahf
pusha
stos
int3
cmp
xchg
lods
repnz
arpl
inc
nop
lds
pop
add
fisttpl
push
xor
loop
out
cmp
loopne
jge
cmpsb
sub
sub
popa
or
pop
inc
inc
push
lret
add
push
aam
sbb
add
sbb
xchg
loopne
adc
push
add
popa
pusha
jecxz
or
mov
test
mov
rolb
xor
in
push
xchg
inc
add
mov
push
stos
adc
jg
add
mov
jbe
add
add
mov
jg
or
or
cmpsb
add
add
hlt
and
enter
inc
mov
cmpsl
hlt
pop
add
mov
xorl
dec
xor
or
cmp
nop
add
pop
ja
sub
loopne
jae
enter
out
dec
adc
imul
inc
push
dec
fildll
repnz
add
xlat
cmpsw
add
movl
cld
inc
dec
jbe
add
add
mov
sbb
leave
punpckhwd
add
inc
adc
rclb
push
mov
arpl
push
sbb
mov
popa
js
jb
inc
add
mov
fidivs
ljmp
inc
adc
mov
dec
cmp
mov
add
jo
mov
dec
cmpsl
mov
addb
addb
fisubrs
push
dec
add
outsb
fwait
sbb
cmpsl
and
jl
aaa
imul
jno
or
int3
cmpsl
xor
xorl
in
imul
cmp
sti
in
out
add
out
jno
fstl
dec
add
aam
rolb
mov
cmpl
pusha
add
and
jno
inc
lea
fstpt
cmp
or
fs
insb
add
push
and
nop
xor
andl
iret
push
in
and
pop
cmp
add
int3
roll
mov
mov
rcrb
divl
call
bound
sub
pushf
dec
enter
adc
jne
sub
mov
ds
scas
dec
popa
inc
add
jle
xor
icebp
inc
push
add
and
jae
cmp
push
fsubrl
add
jle
nop
sub
inc
cmc
or
add
sbb
add
std
out
inc
fbstp
inc
add
ss
stos
xchg
adc
sub
jg
mov
roll
cltd
pusha
add
je
test
lods
sarb
dec
pop
out
fmulp
mov
sub
jb
dec
ds
mov
aaa
mov
mov
and
xor
cmp
pop
xorl
movsl
sbb
inc
vpmaxsw
adc
pop
pop
in
in
push
rclb
mov
mov
je
add
mov
cmp
fbld
xorl
add
push
divb
push
sub
hlt
fdivr
add
rol
or
cmpsb
in
add
or
and
lcall
je
add
mov
cmp
pop
xlat
sub
jnp
imul
jl
cmp
mov
scas
sar
inc
dec
push
add
iret
push
scas
out
jecxz
lds
cmpsb
add
or
lock
add
cmp
mov
dec
pop
or
leave
and
popa
loop
add
std
lret
xchg
mov
shlb
movsb
das
inc
jge
add
shrb
cmp
add
inc
ret
gs
add
aad
inc
jl
or
mov
add
xor
sub
lret
in
jne
rcrl
xchg
hlt
enter
add
dec
adc
fadds
out
stos
inc
sahf
and
push
and
mov
add
daa
in
adc
pop
ret
pop
ss
jle
ret
mov
pop
inc
add
inc
insb
lods
inc
jnp
shl
mov
mov
jp
cmp
mov
adc
or
mulb
mov
mov
arpl
push
pop
pusha
add
sbb
pop
outsl
push
inc
orl
fbstp
scas
mov
repnz
lock
ljmp
fs
push
incb
ljmp
and
push
nop
adc
cmp
fnstsw
in
mov
inc
cs
push
imul
shlb
test
xor
pop
mov
arpl
sahf
ret
loopne
scas
cwtl
cmp
sbb
adc
jp
movsl
inc
jns
sub
sub
jecxz
setbe
dec
cmp
imul
stos
push
inc
xchg
cmp
fwait
popf
aas
xor
and
dec
aam
ds
mov
pop
les
iret
lods
adcb
fdivl
pop
cwtl
cmp
gs
mov
addb
xchg
sbb
add
or
insb
add
sub
add
mull
movb
push
movsb
inc
cmp
cmpsl
cmp
cld
xchg
pop
jg
add
xor
pop
shl
das
push
sbb
push
xchg
adc
add
popf
pop
inc
add
xchg
mov
loop
pushf
sarb
and
ret
mov
fdivs
in
inc
fwait
icebp
mov
adc
jb
cmpsb
sti
cmp
xor
mov
mov
shl
aad
cld
jae
add
jmp
add
out
dec
ds
and
mov
je
idivb
inc
loopne
jne
xchg
add
mov
fdivl
jmp
add
loopne
insl
and
push
pusha
cmp
int
repz
or
pushaw
ds
pop
add
inc
shl
filds
mov
inc
out
add
add
int3
xor
repz
adcb
mov
cmp
inc
fidivs
jg
dec
ss
pop
cmc
inc
xchg
mov
pop
nop
repz
mov
es
insb
jns
add
cmp
pop
shl
inc
fldl
mov
add
loopne
add
xor
sbb
cmp
inc
repnz
rol
cwtl
and
sbb
add
sub
in
jp
inc
jmp
add
xchg
xchg
daa
mov
fmull
and
mov
call
xchg
rcrb
inc
repz
ss
in
inc
idiv
out
xor
add
inc
test
jnp
outsl
testl
and
jp
add
inc
and
and
lahf
add
jmp
push
add
cmp
push
pop
cmpl
mov
pop
cmp
ret
xor
repz
dec
fs
sbb
pop
enter
push
xorb
xchg
mov
inc
fiadds
jne
inc
push
jb
scas
push
dec
mov
inc
fucom
lahf
xlat
dec
inc
cwtl
add
shlb
incb
jns
test
nop
insl
adc
mov
xchg
mov
pop
add
or
repnz
jo
jb
aam
sbb
ret
add
daa
gs
outsb
enter
pop
dec
subl
and
mov
fucomi
inc
dec
fldcw
scas
cwtl
arpl
gs
push
xor
push
shr
out
add
iret
pushf
add
inc
out
stos
sbb
xor
rorb
mov
loop
je
cmp
inc
jne
ficompl
push
add
xor
mov
sub
xchg
xchg
add
add
dec
lds
sub
test
std
cmp
into
fucom
test
cmp
add
cmc
icebp
xchg
adc
add
negl
inc
repnz
pop
sti
push
loopne
out
pop
out
xchg
aas
add
outsl
shll
add
xchg
les
inc
jecxz
and
sbb
pushf
out
inc
jmp
jne
je
adc
or
in
add
mov
pop
pusha
mov
xor
pop
add
ret
stos
add
mov
xor
dec
ret
sbb
ror
arpl
add
lret
sti
push
call
inc
add
loop
out
scas
add
sbb
inc
inc
adc
xchg
add
lds
aad
enter
ss
push
add
popa
in
dec
add
mov
addr16
sti
loope
add
inc
or
movl
test
cld
add
or
cmp
rcr
pusha
xor
add
mov
add
adc
add
and
inc
pusha
jne
outsl
add
add
add
fwait
ja
xor
sub
pavgb
push
mov
mov
inc
add
das
out
mov
add
sti
mov
cmp
popa
push
add
rcl
jle
push
adc
sets
mov
cmpsl
fwait
and
sub
pop
jmp
mov
xchg
lahf
cmpl
in
subb
add
ret
rorl
insb
out
cld
adc
orl
jmp
add
cmp
flds
outsl
ret
jge
and
lret
pop
mov
fistpll
push
add
je
jno
pushf
mov
or
lcall
add
jmp
sub
pop
pop
ror
jl
shlb
sbb
push
xchg
daa
test
pop
insb
fwait
xchg
mov
pushl
push
xlat
dec
ror
pop
into
movsw
add
roll
add
xor
ds
lods
movsb
mov
add
pop
xor
orb
mov
pusha
mov
pop
cvtpi2ps
jae
pusha
nop
jbe
xorb
repnz
and
jl
movsl
scas
cmp
sarl
mov
jecxz
mov
or
rcrb
jae
add
out
pop
ret
inc
xchg
push
rolb
sub
sbb
mov
or
mov
mov
adc
push
cmp
xchg
add
pop
call
add
add
or
mov
sub
jg
jecxz
in
xor
fs
lods
or
inc
jae
orb
add
cmp
iret
popa
fsubrs
add
and
sbb
add
or
movsb
hlt
inc
add
cmpsb
rorb
shrl
rolb
rcl
mov
repnz
add
mov
lahf
jne
jecxz
mov
sbb
jo
adcb
add
enter
addl
arpl
add
fiadds
cli
loopne
and
sbb
and
mov
or
jp
lock
inc
jo
xor
enter
add
hlt
stos
push
das
cwtl
rorl
cmp
rcrb
mull
aam
movsb
out
outsb
pushf
mov
stc
dec
jp
rorb
jb
popa
cli
xchg
ret
mov
pslld
addl
mov
mov
dec
cli
or
mov
add
imull
inc
add
push
adc
cmc
add
pop
pcmpeqd
xor
loopne
ja
jge
push
icebp
sti
popf
or
jnp
sbb
cmc
outsb
mov
add
sub
xchg
aaa
dec
in
fsubs
sub
lods
or
enter
cmp
add
call
push
add
and
or
inc
cmc
cli
ficomps
sbb
xchg
iret
xor
loop
add
inc
les
jl
cmp
adc
add
pop
cmp
add
mov
lods
test
add
mov
out
xlat
inc
jb
fwait
add
mov
movsb
add
cmp
sub
ret
cltd
lock
adc
sub
cs
cmp
repz
pusha
add
xor
push
sahf
shlb
mov
adcb
cmp
sar
test
mov
inc
cld
ret
aad
mov
push
rclb
call
notb
jecxz
roll
and
push
ds
cmp
out
cli
popa
shll
add
or
dec
icebp
push
add
mov
xor
mov
and
loop
lcall
enter
mov
adc
out
jno
leave
inc
inc
sbb
mov
jae
out
and
mov
mov
add
jmp
pop
adc
add
push
mov
push
clc
xchg
pop
and
dec
sub
insb
add
cs
fisubs
faddl
jbe
inc
scas
inc
pusha
dec
enter
xor
rcl
lods
outsb
add
jle
cmp
int
pop
test
cmp
incb
out
push
add
popf
adc
sbb
dec
dec
mov
in
aam
push
jbe
jb
nop
dec
sbb
cmp
call
sahf
mov
movb
add
mov
dec
insl
jbe
add
popf
shlb
sub
iret
into
insb
push
ss
lock
aaa
popa
jg
repnz
shlb
and
pop
pop
sub
rep
add
rcl
jne
add
aaa
out
xchg
mov
enter
add
push
in
xchg
inc
cmp
xorb
pusha
lret
add
pop
je
hlt
call
dec
addb
add
pushf
adc
add
in
jmp
xor
insb
lds
test
sbbl
je
add
aaa
inc
inc
in
mov
insb
cli
or
test
in
js
test
loopne
mov
sbb
inc
pop
lret
or
dec
aam
sbbb
mov
lods
ljmp
add
sbb
data16
inc
scas
cld
adc
rorb
mov
enter
es
mov
mov
mov
jmp
pop
push
stc
pop
pop
int3
adcb
mov
call
jnp
rolb
pop
out
jns
add
roll
xor
stos
sub
movb
push
sbb
pop
sub
pop
inc
cltd
jo
add
aam
inc
movsb
push
mov
ret
xchg
xchg
add
imul
mov
mov
movq
adcb
mov
add
scas
leave
inc
add
ret
cmp
arpl
out
std
fs
fildl
shlb
fiaddl
pop
js
nop
dec
rcl
arpl
inc
xchg
push
add
push
sub
lds
jns
sub
bound
mov
lea
mov
pop
das
push
es
push
add
test
mov
lcall
inc
cmp
add
popf
insb
cltd
xorl
daa
ret
push
and
popa
add
mov
mov
daa
mov
lock
add
fwait
decl
arpl
fnsave
mov
xor
mov
inc
jbe
add
mov
sbb
or
xor
pop
enter
push
inc
mov
enter
add
in
add
pop
mov
pop
nop
mov
and
stc
gs
mov
rorl
fistl
lds
inc
pop
dec
sub
pop
add
add
push
ljmp
xor
sbb
jecxz
ret
mov
lods
pop
lea
push
xchg
inc
in
cmp
pop
add
mov
fcomps
mov
fs
pop
add
mov
daa
lods
mov
or
cld
addl
pushl
cmp
push
rclb
and
jle
jo
dec
add
repz
and
test
add
adc
adc
in
mov
sub
jecxz
in
mov
mov
inc
mov
jo
or
shl
popf
or
aas
pop
ds
fnsave
sldt
add
sarl
les
out
lock
je
dec
or
popa
inc
xchg
insl
inc
add
test
adc
das
shr
fs
add
shl
add
sbb
add
das
jns
orl
pusha
mov
sti
sbb
add
jb
ret
daa
lcall
into
jne
and
call
add
adc
sbb
add
es
pop
xor
mov
pop
mov
jb
add
idivb
add
sbb
cmc
xor
ret
lds
mov
inc
jo
add
or
lock
xchg
add
pop
pop
mov
push
sti
pop
mov
push
repz
cmp
divb
add
dec
xchg
cwtl
outsl
add
jne
test
jae
xor
aam
pop
add
ffreep
popf
test
bnd
add
dec
push
leave
add
mov
or
or
ds
inc
into
aad
lcall
in
adc
cmp
insl
push
dec
shlb
add
jno
cmpsb
cmp
and
jecxz
fsubs
pop
push
rsm
lcall
lods
inc
and
das
roll
mov
fcomi
int
sti
xchg
js
add
jne
dec
repz
clc
mov
gs
popf
and
sbb
inc
add
in
adc
shlb
inc
mov
inc
out
mov
negb
cmp
mov
es
inc
clc
add
xor
cmp
sub
dec
js
shl
std
dec
sbb
add
loop
or
call
dec
jecxz
repz
inc
sub
or
lods
fcmovb
ret
aaa
push
and
pop
and
clc
mov
js
add
stos
std
pop
shlb
mov
mov
add
js
add
sarb
sub
out
movb
movsb
dec
ret
shll
add
add
inc
scas
bound
pushf
jl
icebp
or
dec
inc
add
push
into
and
xor
sbb
or
sbb
jmp
add
and
mov
jae
pop
pop
push
add
mov
inc
jg
fldt
test
push
out
ja
pushf
andb
iret
cmp
xor
sti
add
jnp
add
or
cltd
cs
jno
cmp
insl
fdivr
fistps
xchg
xor
mov
add
arpl
or
mov
push
mov
add
icebp
adc
loopne
cmp
into
add
dec
jnp
lods
adc
mov
add
sbbb
or
pusha
fwait
test
stos
xlat
shlb
nop
cmpsb
jns
mov
arpl
popf
pop
sbb
jle
mov
inc
mov
cwtl
or
lods
arpl
sbb
mov
cmpsb
loopne
inc
cmp
testb
jge
dec
pop
add
cmc
stc
bound
xchg
push
jo
mov
sbb
hlt
loop
dec
or
popa
add
idivb
orl
loope
add
add
sbb
inc
or
loopne
fcoms
daa
pop
cmp
icebp
xorl
fs
addb
add
popf
sbb
mov
sub
ret
mov
mov
sarb
pop
sub
mov
xchg
loope
int
mov
outsl
push
fs
sub
out
pop
xchg
push
xor
scas
pop
insb
icebp
dec
repnz
pop
pop
sub
stos
xchg
ss
fs
testb
xor
in
sti
adcl
jae
pop
cmc
inc
ljmp
icebp
nop
and
or
std
dec
arpl
shr
loopne
xchg
push
imul
ja
sarb
out
push
cmp
add
lret
mov
inc
add
xchg
and
dec
dec
test
lods
cmc
and
imul
adc
arpl
jg
pop
push
cli
lods
cmp
adc
cmp
scas
jae
je
mov
pushf
add
jmp
rclb
push
add
pop
xchg
mov
push
cld
jne
orb
sub
repz
cmp
add
sbb
bound
scas
add
stc
xlat
xchg
pop
or
mov
jbe
daa
mov
mov
mov
xchg
xor
sbb
pop
loopne
add
mov
inc
das
psubd
mul
add
mov
mov
lock
in
xor
pop
adc
adc
jbe
jp
push
les
xchg
sub
shlb
fcmovb
jg
cltd
add
shrl
add
std
adcl
cs
xor
cld
je
inc
push
iret
mov
xor
enter
add
bound
addr16
add
jle
in
pop
adc
js
insb
pusha
add
icebp
pusha
and
mov
add
fcmovu
pop
jbe
cmp
outsb
xchg
mov
stos
scas
arpl
mov
fstpt
or
clc
sysenter
rep
xchg
push
call
or
in
cs
dec
sub
cmpsl
mov
adc
cmp
in
cmp
cld
arpl
jb
mov
or
xor
push
mov
add
in
iret
movsb
loope
add
cltd
inc
xchg
mov
sub
test
imul
xchg
push
cmp
mov
lods
jb
mov
shrb
mov
xchg
add
dec
vmovntps
dec
add
pop
fnstsw
dec
add
repnz
add
fisttpll
xor
data16
jle
std
adc
mov
adc
into
andb
pop
cmp
in
sbb
add
rorl
push
ret
loope
arpl
add
push
and
int3
test
lcall
jge
push
cmpb
dec
addl
movsl
sti
xchg
inc
fadds
in
aas
add
add
inc
outsb
cwtl
ficoms
lahf
aas
sarl
subl
xchg
add
jae
loopne
js
stc
add
jmp
je
mov
add
std
jl
aam
or
iret
jo
adc
fs
add
sbb
jnp
in
add
inc
dec
aaa
negl
push
mov
cmp
xor
lret
push
int
test
cmp
jle
js
or
mov
iret
fisttps
push
add
cmpsl
sub
fildl
cmp
cmc
dec
add
neg
push
add
mov
arpl
add
add
ss
ret
cs
push
aas
sub
scas
inc
jmp
mov
inc
fs
imul
mov
sti
popa
pusha
cmpl
pushf
add
inc
xchg
in
add
jo
adc
out
cmpb
cmp
bound
add
or
les
sub
adc
dec
cmpsb
in
inc
xchg
or
gs
jp
stos
je
shlb
cli
fildl
sbb
jp
loopne
inc
xchg
ljmp
enter
imul
sbb
add
cmp
outsl
jle
dec
add
mov
clc
xchg
rcll
leave
sub
add
in
mov
cmc
lds
les
cmpsl
dec
or
and
lods
push
pop
sub
imul
sub
xor
add
or
shr
das
movsb
add
into
push
cmp
lods
and
test
loopne
jno
push
sbb
and
fwait
iretw
sbb
daa
add
clc
ljmp
pop
or
add
je
repnz
adc
and
rcrb
imul
add
shrb
adc
add
repnz
cvttps2pi
mov
int
add
test
cmpsl
add
push
dec
xchg
dec
ret
pushl
jmp
push
shlb
pushf
das
sub
movb
aam
adc
add
xchg
mov
jle
leave
in
fcomp
sbb
nop
sub
addr16
jle
ret
jns
cmp
push
or
mov
outsl
mov
jmp
dec
push
adc
loopne
int
imul
push
stos
lahf
sldt
add
jp
out
add
push
int
ret
roll
pop
pop
dec
stos
sub
arpl
pop
dec
add
xor
mov
ja
loopne
inc
lds
sub
mov
xor
add
pop
xorl
add
and
shl
pop
mov
fisttpl
cld
inc
sub
inc
jb
sub
dec
add
jns
cmc
push
repnz
push
leave
jl
mov
orl
pusha
bound
cmc
loop
enter
testb
inc
cmpsl
mov
xchg
pop
scas
pop
or
add
pop
bound
pop
fxsave
cwtl
dec
xor
punpcklbw
push
pushf
xchg
add
clc
jg
xchg
sbb
pop
mov
inc
leave
fprem
fdivp
inc
add
sbb
scas
add
rorb
and
inc
dec
fs
pop
inc
data16
das
loopne
sub
stos
scas
sahf
rcrb
xor
pop
cli
jns
jbe
add
test
scas
cmp
mov
add
rcll
inc
aam
jno
push
clc
lret
add
rolb
jg
mov
xchg
push
push
push
add
pusha
loope
xor
and
pop
imul
inc
push
add
sub
outsb
push
add
sahf
dec
mov
add
insl
push
push
stos
sub
jbe
adc
or
sar
add
arpl
xor
xor
push
add
js
xchg
jl
loop
sbb
xchg
loope
xor
sbb
out
daa
add
arpl
and
inc
inc
cmp
adc
rolb
push
lock
and
arpl
enter
xchg
mov
inc
mov
daa
sbb
add
leave
sbb
stos
add
or
outsl
imul
push
dec
fisttpl
add
cmp
xchg
lods
cs
popa
loopne
adc
rolb
pop
frstor
in
cmc
shrl
inc
cmp
jmp
add
mov
ss
add
pop
add
add
sub
shrl
std
aaa
inc
add
cmp
mov
push
or
pop
movups
aad
mov
out
mov
stos
xorb
fmuls
sub
mov
jge
adc
out
aaa
add
xlat
arpl
jmp
add
in
mov
cli
inc
out
add
dec
and
je
scas
inc
enter
scas
add
push
rcl
iret
leave
add
ret
andb
cmp
push
pop
adc
aas
movsb
js
add
insb
xorl
mov
imul
add
fwait
pop
xor
add
inc
pushf
jnp
jge
into
into
push
rdtsc
dec
sbb
mov
rolb
cmp
ret
jnp
jl
add
add
mov
xchg
jmp
fistps
mov
add
push
rcrl
rclb
add
push
pop
and
faddl
jb
mov
mov
jecxz
je
pop
adc
jb
add
push
mov
cwtl
inc
fwait
xor
rclb
add
jo
lods
gs
xor
mov
js
mov
mov
sbb
fmull
add
in
inc
icebp
into
sarl
cmp
shl
add
push
jp
fcmovu
cmp
leave
cmp
add
adc
int3
inc
lret
test
and
js
inc
lods
addb
or
daa
shlb
flds
xchg
inc
shll
add
mov
and
out
jne
pop
cmp
cld
fwait
inc
add
jecxz
mov
icebp
add
adc
lcall
sub
add
jl
inc
cmpsl
repz
imul
dec
adc
inc
add
mov
xor
inc
rolb
add
inc
jb
lret
add
add
clc
sbb
push
pop
push
sub
lahf
sub
fcompl
rcll
xchg
cld
in
out
add
or
add
inc
lahf
mov
dec
push
test
inc
testl
cmp
inc
pop
sbb
in
add
push
enter
add
sbb
pop
test
rorb
sub
xor
add
inc
shl
mov
rclb
mulps
ja
les
cld
mov
add
pop
push
mov
add
mov
mul
lock
adc
pop
rcl
rcrb
dec
movsl
mov
ja
push
mov
or
xor
arpl
inc
xor
jmp
insb
adc
cs
mov
in
mov
and
mov
lock
pop
push
mov
ret
test
sti
fwait
jb
add
in
cmc
and
sahf
add
cmp
cwtl
add
mov
jle
mov
add
inc
xor
mov
jle
add
inc
testl
lods
mov
mov
jl
pop
jo
or
pop
js
fstps
pusha
inc
ret
and
mov
imul
sub
faddl
mov
xchg
lahf
mov
dec
add
dec
push
jge
test
jl
dec
imul
push
inc
into
ljmp
dec
fnsave
mov
mov
mov
es
cmp
and
adc
leave
scas
jge
add
inc
push
subb
add
movsl
sar
out
mov
push
dec
mov
sub
loope
repnz
cmc
stos
inc
ret
add
ljmp
jecxz
xchg
and
out
mov
mov
or
mov
and
pop
add
out
mov
les
add
xor
sbb
pop
loopne
out
cmp
xor
fists
inc
popa
enter
mov
push
lods
push
jle
xchg
xor
inc
jo
loop
nop
xchg
add
sti
pop
mov
add
mov
mov
stos
ficoml
movsb
test
clc
lods
adc
in
mov
orb
pop
bound
jg
inc
sbb
lcall
dec
add
add
pop
pop
and
mov
mov
inc
add
ja
cmc
gs
adc
js
iret
call
and
xchg
add
mov
das
lret
andb
adc
dec
and
shl
jnp
add
inc
sahf
jge
dec
jmp
add
mov
add
jo
ljmp
in
add
insl
and
stc
arpl
aad
push
movb
inc
mov
pop
xchg
inc
test
push
cld
out
mov
enter
test
mov
sub
in
arpl
sub
add
cmp
jp
adc
xchg
mov
outsl
popf
push
add
fimuls
pop
fcompl
cmp
rcr
jb
pop
insb
xor
adc
jbe
add
cmpsb
arpl
scas
cli
ret
das
mov
fdivs
aam
mov
je
xor
fdivl
clc
push
add
fisubl
cwtl
lods
sbb
pushf
dec
add
cmpl
dec
rolb
mov
shrl
imul
cmc
imulb
cmpsl
sub
test
arpl
jno
div
mov
add
pop
pop
insb
xchg
fisttps
movsl
jg
add
ss
dec
adc
insb
add
push
inc
iret
add
add
add
lds
cmpsl
mov
lds
nop
add
jns
adc
aam
lock
jns
push
sbb
test
pop
or
mov
insb
xor
inc
test
add
mov
inc
fisttpl
shrb
out
out
imull
xchg
fistpll
daa
lahf
aas
imul
pusha
lret
inc
push
inc
cmp
push
xor
add
enter
jl
pop
je
push
jmp
or
add
ficoms
out
imul
adc
sbb
jb
or
cmpsl
adc
mov
mov
add
cmp
push
call
mov
jns
xor
dec
orl
push
mov
push
and
in
jno
dec
fbld
xor
pop
fwait
add
jbe
loopne
add
jno
add
pop
aaa
cmp
into
pushf
add
jbe
sub
and
mov
sub
out
out
adcb
pop
in
mov
into
mov
and
fisubs
pop
mov
add
mov
pop
cmpsb
push
inc
in
add
call
push
add
fwait
dec
inc
hlt
aas
jmp
xchg
xor
iret
jb
jbe
add
inc
outsl
vcvtsd2ss
add
xor
shlb
aam
cmc
mov
daa
cmp
das
rclb
out
jecxz
inc
add
nop
lods
sahf
popa
inc
stos
adc
aas
sub
jnp
jo
push
jno
inc
add
fwait
jge
add
test
sbb
scas
add
xor
xchg
add
pop
fimuls
outsl
pop
inc
add
inc
jns
out
mov
add
xlat
jl
movsl
adc
adc
add
jb
pop
movsb
arpl
pop
xchg
push
inc
sahf
mov
add
das
cmpsb
xchg
dec
pop
push
data16
and
fldcw
aas
mov
rorb
das
loop
nop
add
in
adc
call
push
in
jns
or
cmpsb
addl
and
jle
test
clc
add
dec
in
xor
or
lahf
jecxz
fcmovne
loope
inc
cltd
les
bound
push
into
xchg
push
fstps
add
jbe
cwtl
addl
xchg
adc
add
pop
inc
mov
pusha
pop
repz
orb
sub
dec
add
imul
movsl
mov
add
ffreep
fidivl
dec
jnp
pop
nop
idivb
sahf
add
divl
jmp
int3
pop
mov
mov
insl
or
mov
add
jg
nop
inc
and
jle
xchg
dec
mov
cli
add
push
push
gs
jmp
rorl
out
jb
cmp
ret
subb
pop
or
pop
xlat
inc
les
loopne
loopne
out
add
add
popf
mov
add
popa
loope
add
sub
add
cwtl
and
jno
arpl
add
enter
jge
cmp
fs
inc
push
jns
add
bound
scas
subb
jecxz
and
loopne
mov
repz
and
xchg
gs
dec
pop
ficoms
mov
pusha
xchg
pop
int
sbb
fwait
xchg
out
add
sbb
pop
inc
or
pop
fisttps
dec
fistpl
mov
shl
or
lods
pop
add
mov
xlat
add
adc
add
inc
and
adcb
jp
repz
cmc
mov
psrlw
cmp
jmp
ret
imul
shrb
jne
add
inc
testb
nop
inc
f2xm1
pop
inc
pop
lcall
xchg
pop
xor
cmp
add
fidivs
add
imul
rolb
cltd
add
ja
dec
arpl
dec
testl
cmp
repnz
pushf
pop
in
nop
inc
pop
jne
adc
rorb
mov
adc
xor
jle
cmp
jo
inc
inc
test
icebp
or
dec
inc
and
aam
inc
movsb
lahf
into
mov
jb
lods
fwait
mov
push
cmpsl
jge
xchg
out
fs
adc
add
cmp
rolb
scas
nop
xchg
adc
dec
cmp
add
sbb
pop
pop
mov
ljmp
sbb
or
scas
out
add
mov
add
arpl
sti
shr
add
lea
clc
lock
pop
mov
lret
icebp
sahf
call
addr16
or
push
pop
nop
test
jge
jb
rclb
aam
shlb
roll
in
sbb
lret
rolb
xor
add
jle
pop
add
sub
and
pusha
in
add
fucomp
jmp
cs
add
xlat
or
lret
add
pusha
sbb
rep
pop
test
sti
sub
dec
pushf
xchg
cmp
pop
adc
arpl
pop
jg
add
imul
add
xchg
xchg
mov
push
inc
xchg
add
mov
mov
andb
movsl
repz
and
xchg
inc
ss
add
cmp
xor
push
mov
push
adc
mov
repnz
cmp
jns
add
jnp
pusha
pop
sbb
ss
sub
dec
shlb
sbb
vpshlb
adc
fistpl
adc
cmp
mov
arpl
or
xor
and
inc
lret
pushf
add
out
mov
push
dec
add
pop
mov
xchg
push
mov
add
cli
inc
int
mov
cmpsb
add
jns,pn
push
mov
in
cli
add
les
mov
add
pop
fistps
push
pop
shll
add
mov
jo
sub
popf
adc
por
test
pushfw
xadd
xchg
das
add
out
sarb
test
std
fiadds
roll
sbb
pop
arpl
jmpw
inc
xor
pop
test
lret
aad
mull
or
mov
int
push
xor
xorb
test
inc
add
mov
popa
ret
xor
cli
xorb
out
xor
rol
fadd
add
test
lods
add
mov
jns
mov
add
ds
arpl
outsb
scas
loope
and
lcall
pop
fs
inc
cli
add
add
outsb
dec
dec
rcrb
mov
dec
fcom
add
sub
outsl
pop
inc
adc
and
lret
push
je
xorl
push
add
mov
setae
call
xchg
add
mov
mov
push
jle
into
jmp
scas
cmp
inc
push
fwait
lds
cmpsl
dec
jns
mov
fcompl
out
arpl
add
imul
xchg
cmp
jo
mov
and
bound
mov
inc
push
loop
sub
into
inc
imul
adc
cmpsl
mov
inc
and
add
xchg
xchg
sarl
mov
dec
push
jns
addb
sub
jp
popl
fisttpll
je
insb
xor
add
mov
jmp
shlb
out
push
jl
test
mov
mov
movsb
pop
inc
add
mov
jle
arpl
std
aas
fdivrs
mov
push
mov
xorl
add
je
mov
leave
mov
enter
xchg
add
mov
jg
in
arpl
das
icebp
testl
js
mov
shr
mov
fsubrs
and
push
lods
cmpsb
in
push
add
sbb
cmp
jp
dec
xchg
push
xor
into
in
fdivr
inc
add
cli
hlt
jmp
cmp
or
mov
test
add
lea
lock
fdivrl
popf
fidivs
mov
pop
add
rclb
lea
sbb
adc
mov
jns
sub
jb
and
sub
leave
pushf
loop
add
ljmp
imul
in
push
int
sarb
jl
cs
fwait
scas
add
daa
dec
fs
jo
inc
add
pop
cltd
mov
rol
call
test
movsl
mov
cld
cmp
adc
and
pop
inc
mov
or
xchg
jne
es
jmp
inc
pop
lea
inc
arpl
shlb
xor
stos
mov
lcall
push
and
add
cltd
add
out
repnz
or
and
add
inc
inc
add
jl
jg
xor
and
adc
out
add
fcomi
add
jg
test
sub
loope
insl
int
inc
shrb
xchg
sub
mov
subb
cltd
arpl
lock
cmp
imul
ss
push
pop
int3
jge
xchg
xor
cltd
pusha
into
xchg
add
repnz
add
fstps
arpl
jle
dec
sbb
jns
add
push
mov
das
rolb
dec
jg
push
lods
or
lods
and
xorl
test
fimuls
ss
daa
add
dec
repnz
mov
call
pop
dec
testb
mov
cs
sub
dec
push
pop
adc
imul
xchg
pop
cwtl
jmp
cs
push
shrl
or
inc
aad
push
pop
inc
shll
add
inc
std
sbb
enter
rcrb
pop
add
adc
fsub
and
mov
or
inc
or
add
xchg
test
jge
shlb
sub
inc
xor
push
cmp
xor
mov
lret
sub
sarl
int
inc
mov
lret
push
clc
test
shlb
das
jl
decb
cmp
pop
push
cmp
jg
mov
mov
mov
fcom
pop
daa
adcl
lret
ficoms
or
loopne
andb
pop
js,pn
aas
or
add
into
sbb
loopne
and
mov
es
lds
push
scas
add
fmuls
cmp
push
inc
inc
mov
in
hlt
in
inc
cltd
or
and
inc
fcomps
mov
fildl
pop
stos
test
repnz
xor
sbb
fbld
rorb
add
jecxz
push
and
sub
bound
pusha
cmp
add
mov
outsl
add
jns
push
ljmp
dec
mov
mov
fsubp
outsb
and
add
sbb
cmp
add
xchg
add
adc
dec
shld
cld
mov
or
shrb
das
jae
inc
dec
hlt
sets
icebp
inc
jl
jbe
popf
add
mov
mov
inc
test
sub
ja
add
inc
loopne
pop
push
shl
shlb
mov
inc
sbb
inc
add
cli
pop
inc
test
imul
idivl
and
jl
push
aaa
loop
lret
mulb
mov
decb
dec
push
enter
rolb
fwait
add
mov
pusha
pop
jmp
stc
xchg
repnz
and
leave
add
jl
mov
add
gs
push
cmp
mulb
pop
sti
sub
add
scas
adc
ja
add
push
push
jg
push
addb
cmp
mov
fwait
or
cmpsl
sub
inc
mov
jo
mov
mov
dec
loope
sub
jp
mov
and
and
call
lea
icebp
add
stos
enter
std
mov
xchg
cs
inc
ja
sbb
mov
adc
inc
aas
enter
and
jl
insl
or
subl
outsb
dec
ficomps
mov
mov
add
or
mov
dec
adc
movlps
push
enter
jns
add
pop
push
mov
pop
pop
push
xchg
cmp
ficoms
add
push
in
aad
mov
shr
add
mov
into
mov
movsl
jp
inc
and
adc
push
cmp
cmp
mov
pop
dec
inc
aas
insb
dec
cmpb
shll
rdmsr
int3
sub
add
add
ss
push
nop
mov
push
add
inc
add
push
add
pop
imul
xchg
add
xchg
lds
add
adc
mov
scas
aaa
fidivrs
and
inc
jns
popf
push
mov
jae
std
sbb
out
rolb
movsb
stos
inc
xchg
dec
sub
insl
popa
add
inc
lcall
push
les
add
jecxz
mov
mov
add
cmp
mov
into
xchg
xlat
into
test
mov
int
mov
push
xchg
pop
or
add
add
ss
jne
jl
aad
movsb
sbb
push
add
das
mov
add
sub
outsb
inc
dec
fidivl
xchg
in
sub
inc
leave
lcall
inc
mov
or
or
addb
dec
scas
sub
das
pop
in
arpl
mov
xor
add
leave
xchg
bound
in
mov
mov
mov
cltd
ret
pop
orl
std
jno
loope
stc
lahf
inc
imul
push
jnp
je
lods
cltd
add
mov
jle
add
dec
mov
pop
or
jle
into
add
mov
and
add
push
clc
nop
mov
mov
cli
ds
jae
inc
cwtl
bound
mov
mov
add
adc
push
dec
add
ret
mov
sub
mov
add
xor
pop
pop
mov
cmpsl
xchg
leave
xor
add
lea
lret
nop
cmpsb
adc
lahf
add
sub
add
test
xchg
add
sub
mov
ljmp
add
dec
shlb
popf
dec
mov
add
inc
call
push
inc
stos
pop
inc
adc
pop
add
int
xchg
add
dec
xchg
loopne
mov
mov
addl
shl
incb
mov
sahf
out
jns
ja
bound
aas
jae
add
rcr
or
jb
movsb
stos
cld
mov
mov
cs
aad
or
push
add
cltd
fimuls
add
iret
mov
popa
or
xchg
icebp
stos
xchg
je
mov
add
dec
inc
fldenv
orb
fwait
jns
add
aaa
clc
fildl
jle
add
scas
cmp
cmp
in
ja
pop
enter
pop
xor
nop
mov
cmp
add
dec
dec
insl
pop
imulb
add
rcrl
add
cli
dec
dec
sahf
ficoml
jbe
xor
dec
cmp
je
mov
test
leave
call
push
mov
fdivrl
rolb
mov
cmpb
scas
add
bound
xchg
outsb
sub
mov
push
cmp
mov
lds
dec
je
xchg
fs
clc
add
add
stos
loopne
imul
addl
sub
sbb
in
out
add
bound
mov
clc
testb
ret
fwait
rclb
shll
clc
push
mov
inc
inc
cltd
loopne
shlb
cld
arpl
repnz
inc
outsb
jne
xchg
nop
or
add
and
mov
fiaddl
push
rolb
add
add
jl
dec
adc
dec
call
inc
push
arpl
inc
aam
and
or
fsub
mov
push
inc
dec
cld
mov
sti
and
and
or
xor
inc
test
or
cmp
rolb
insl
or
test
sub
add
dec
xchg
pusha
push
mov
and
sbb
js
fwait
outsl
dec
lods
cmp
mov
xchg
es
sti
inc
scas
push
bound
dec
dec
iret
dec
es
push
add
in
in
movsl
adc
add
pop
test
xchg
into
cmp
scas
push
inc
cmpsl
jp
pop
test
int
inc
fcomi
cmp
or
jnp
mov
cmovo
inc
push
lcall
sbb
fldl
cs
push
mov
arpl
add
inc
push
mov
dec
testb
adc
add
dec
push
adc
inc
enter
add
mov
dec
jns
push
pop
jns
add
sub
add
sub
fwait
scas
add
inc
and
jge,pn
add
je
in
arpl
cmp
lods
adcb
loop
pop
imul
scas
mov
add
mov
xchg
mov
sbb
cmp
js
pop
pop
lahf
mov
orl
pusha
pop
xor
aas
lea
jno
add
jge
inc
pop
loope
mov
les
mov
add
sahf
inc
dec
aas
scas
cmp
mov
cmp
inc
je
add
imul
xor
inc
add
mov
add
xchg
pop
test
dec
in
in
outsl
jge
pop
in
add
jg
call
add
or
ja
ds
pop
cmp
dec
mov
add
add
lcall
sbb
cmc
mov
sbb
testb
cmp
push
mov
rcrb
or
jg
clc
iret
mov
loopne
add
shrb
hlt
jg
add
or
pop
std
aam
aam
setns
jo
mov
or
jl
mov
push
xor
xor
jb
mov
lods
xchg
add
inc
lret
mov
test
je
dec
aam
lods
dec
nop
les
js
xor
in
pop
or
cmp
rorb
outsl
push
fsubl
and
fcmovnbe
mov
loope
inc
add
mov
jmp
xchg
testb
push
xor
add
xor
xor
rolb
mov
lahf
std
cmp
push
xor
add
sub
in
inc
mov
xorl
aas
pop
repz
inc
ja
nop
mov
and
push
scas
into
mov
js
fbstp
test
inc
repz
add
rcrb
add
cmp
inc
adc
mov
arpl
cmp
mov
mov
int3
outsb
mov
jp
pop
add
jmp
and
add
ret
inc
roll
stos
xchg
out
sti
mov
xor
aaa
loopne
push
push
add
loopne
rol
in
adc
pop
arpl
incl
add
jb
jns
mov
adc
js
mov
jp
sub
pop
xchg
lea
cmp
mov
aas
inc
adc
push
mov
das
rcrb
arpl
adc
repnz
pop
add
xchg
fnstcw
add
mov
inc
addb
pushf
fidivrs
jge
xchg
pop
test
repnz
add
fadds
fnstsw
and
adc
lods
xchg
enter
mull
push
lret
test
rcl
pusha
or
xchg
push
inc
inc
and
sub
pop
add
cmpsl
mov
push
loop
adc
jns
jbe
pop
xchg
dec
jno
xor
add
add
cmpb
and
push
push
loop
add
fstpt
mov
pop
mov
inc
and
jecxz
cmpsl
cs
jl
fistl
mov
add
push
ret
mov
loopne
loope
scas
cmp
or
shll
xchg
mov
out
int3
xor
add
rcrb
cmp
mov
and
add
stc
mov
pop
xchg
sub
ljmp
cld
mov
int
or
mov
adc
lds
cltd
fadds
jns
stos
rcrb
add
lock
xor
dec
ss
add
dec
les
add
repz
or
jmp
add
in
mov
nop
add
cltd
sbb
arpl
add
mov
add
add
hlt
ret
stos
add
jecxz,pn
xchg
mov
dec
jle
lret
shr
adc
push
pusha
lock
in
or
pop
adcb
dec
inc
pop
mov
jae
adc
in
mov
insl
imul
lcall
jnp
mov
or
nop
jns
dec
dec
in
add
leave
add
insl
dec
or
xchg
lahf
xchg
xor
movsl
nop
fdivl
xor
pop
cmp
shll
sbb
sbb
out
jmp
cld
cmc
arpl
pop
ds
sub
add
dec
jae
aad
xchg
add
adc
inc
test
movsb
and
mov
sub
cmp
divl
leave
mov
pop
sbb
popa
dec
roll
mov
nop
das
test
sub
sub
add
jmp
lea
push
add
sbb
or
push
inc
repz
mov
pop
enter
mov
push
nop
add
inc
adc
dec
push
mov
out
inc
scas
push
and
sti
lods
sub
cmp
xor
data16
roll
fidivs
jne
and
rolb
ret
stos
sub
cmpsl
add
push
mov
fucomip
addb
enter
bound
fwait
in
insb
xor
hlt
or
mov
inc
sub
ds
sti
pop
pop
cmp
ja
repz
imul
fwait
pop
push
add
test
mov
fdivrs
pusha
rol
xor
cmc
and
mov
out
mov
push
push
fld
into
clc
enter
scas
mov
arpl
pop
mov
out
mov
mul
loop
add
pop
fisttpll
mov
aaa
mov
aad
inc
int
js
mov
and
lock
push
dec
mov
jbe
push
xchg
mov
dec
mov
push
jg
pop
dec
inc
stos
xchg
jl
inc
aaa
fs
pushf
cmc
add
fucomip
cld
sarl
dec
lock
add
sub
clc
xor
mov
xchg
test
jg
nop
dec
mov
fimuls
mov
cs
lds
sub
add
inc
xlat
fwait
sub
and
js
pop
clc
data16
mov
inc
sbb
lret
sbb
mov
sub
or
inc
add
stos
add
pop
sbb
iret
rcr
pop
or
or
int3
scas
add
pop
inc
outsb
hlt
cmp
add
cmp
fs
addl
mov
and
sahf
inc
movb
cmp
mov
movsb
arpl
fsubrl
mov
push
cld
pushf
mov
push
add
inc
ret
cmc
jb
cmp
movsl
add
push
aam
inc
sbb
outsl
mov
sbb
pusha
pop
add
or
outsb
insb
leave
pop
add
inc
int3
fadd
aad
adc
lods
jle
inc
int
hlt
insb
sbb
into
cmpsl
addb
mov
dec
mov
out
mov
mov
into
jae
or
jmp
popa
pushf
xor
inc
and
mov
add
cmpsb
inc
xor
shrl
dec
pop
dec
mov
les
add
adc
lret
mov
mov
js
push
add
mov
push
rorl
add
aas
sub
loope
addr16
fldl
xchg
xchg
sub
addl
testb
push
sbb
push
xor
in
mov
fmuls
xchg
daa
sahf
push
ret
xor
inc
or
cmp
xor
mov
sbb
inc
add
nop
shlb
rcrl
inc
in
and
arpl
cwtl
icebp
ret
sbb
xchg
test
adc
pop
nop
xchg
add
jl
xor
xor
add
cs
stc
cmp
out
cmp
pop
inc
fisubrs
in
hlt
jle
cmp
insb
adc
jno
dec
adc
jb
add
or
jp
loope
jnp
jge
das
jo
mov
into
outsl
sbbl
mov
add
xchg
imul
mov
cli
mov
jl
sbb
pop
cmp
frstor
sbb
sbb
and
add
push
ds
bound
call
cmp
push
mov
add
inc
mov
adc
sub
mov
pop
fsts
pop
gs
or
jmp
ljmp
mov
or
pop
ret
pop
adc
cmpl
xor
xchg
cmc
jge
ret
jg
inc
add
push
jo
lods
add
fiaddl
cmp
push
dec
cld
add
cltd
mov
dec
pusha
aas
pop
jecxz
adc
punpcklbw
push
xchg
jl
add
cld
movsb
xchg
lods
jo
add
mov
ljmp
stos
lcall
aad
shlb
repz
mov
es
pop
mov
or
xor
fdivrs
dec
loopne
dec
jecxz
aam
inc
and
arpl
ret
ss
cmp
jo
xchg
inc
pop
pop
push
push
rcrb
bound
jns
add
stos
movsl
lret
filds
cmc
xor
aam
cmp
xorb
and
clc
inc
sbb
inc
push
lret
jecxz
jne
and
add
mov
movsb
push
add
dec
sub
fcmovnu
enter
xchg
sarb
mov
mov
push
cmp
sbb
add
mov
cli
xor
add
lds
clc
add
loope
sbbb
or
out
xchg
lcall
iret
pusha
movsl
rorb
nop
pop
mov
jecxz
popa
adc
and
repnz
pop
lock
dec
add
shrb
add
jecxz
mov
mov
push
dec
push
inc
mov
aam
aad
jne
cmp
pushf
xchg
inc
add
pop
pop
sarl
andb
ret
lret
inc
add
xor
mov
rcrb
out
cwtl
cmp
xchg
loop
mov
jno
stos
iret
xor
mov
xadd
fidivl
mov
xchg
mov
cli
ljmp
and
stc
inc
fcomps
arpl
xor
pop
cmpsb
adc
mov
mov
adc
clc
jecxz
and
iret
inc
push
adc
push
cmp
dec
jge
jbe
mul
cmp
mov
lret
inc
hlt
rorb
jns
subl
push
add
js
add
mov
clc
repnz
and
bound
pop
add
imul
push
sbb
adc
testl
outsb
xor
mov
add
cmp
out
push
add
cmp
xchg
inc
jmp
lea
inc
sub
test
in
add
cmpl
jns
push
lret
cmp
add
inc
jo
push
add
pop
js
push
mov
int
lcall
mov
xor
std
cmp
jae
xor
and
xor
lret
or
and
jnp
inc
arpl
or
cwtl
push
xchg
cmc
addb
dec
das
add
fidivs
pushf
add
sub
inc
and
pusha
leave
arpl
inc
pop
mov
stos
pop
nop
pop
out
ret
mov
shlb
les
shl
jmp
inc
outsb
pop
jl
nop
lret
daa
pushf
arpl
mov
cmp
inc
test
add
cltd
xorb
lret
add
xchg
cmp
dec
inc
iret
insb
add
lea
fsubrs
add
int3
pop
jecxz
lock
jns
inc
jmp
sub
cmp
cmp
aaa
cmp
roll
xchg
and
push
andl
enter
test
add
add
dec
es
add
xlat
rclb
mov
addb
or
adc
add
js
add
arpl
sub
hlt
xor
inc
jns
mov
push
or
rolb
mov
cld
adc
cmp
adc
xor
loope
arpl
in
in
add
cmp
push
adc
fwait
inc
and
cld
dec
lahf
add
xor
ja
jg
add
inc
js
mov
pop
add
add
shrb
jne
pop
add
outsb
dec
gs
test
jo
xor
add
js
jb
xor
lods
sbb
cmc
mov
push
and
inc
test
fdivrl
inc
cmp
add
dec
pop
movb
add
add
cmpsb
xchg
mov
pop
loopne
pop
mov
andb
mov
add
arpl
ds
mov
or
aad
mov
xchg
xor
lock
pushf
ja
ret
sub
mov
mov
scas
js
rolb
in
add
xchg
add
inc
sub
add
js
and
mov
cwtl
filds
mov
insb
nop
sub
ds
negl
shlb
stos
inc
movsl
addl
jp
or
push
insl
inc
add
cmp
enter
cmpb
add
push
es
les
mov
add
mov
ja
int
inc
popf
xchg
add
lock
or
or
ss
ret
add
in
pop
add
imul
adc
shlb
cmp
pushf
pop
imul
adcb
arpl
cmp
push
js
mov
out
push
cmc
insl
add
pcmpgtb
adc
mov
xchg
inc
push
xchg
lock
fwait
sbb
test
stos
int
inc
cli
adc
sbb
mov
arpl
aas
push
shlb
out
add
bound
mov
xchg
sar
leave
insl
in
subps
mov
loopne
inc
and
jle
jp
mov
pusha
mov
rcll
inc
sbb
ja
push
xchg
cmp
test
insb
pmuludq
leave
sub
add
xchg
mov
add
push
stos
enter
add
mov
loope
js
dec
add
xor
jbe
in
mov
imul
inc
incb
aaa
loopne
mov
ds
sub
rcl
or
inc
stos
add
cmp
jno
cmpsl
sub
dec
imul
inc
adc
mov
add
inc
es
mov
add
test
ljmp
sub
inc
add
or
or
jb
or
xorb
cwtl
repnz
leave
xchg
dec
mov
ljmp
mov
idivb
pop
pop
cmc
sbb
push
lods
and
andl
fistps
shlb
jmp
pop
outsl
test
add
lcall
add
cmpsb
or
rorl
jno
out
push
push
mov
mov
sub
and
xchg
sti
nop
mov
mov
cmc
xchg
inc
pop
stos
mov
mov
arpl
dec
add
xor
enter
add
jl
imul
cmp
std
xorb
dec
or
ds
cltd
cs
test
add
sub
and
and
aas
mov
adc
xchg
jge
sbb
ljmp
and
inc
jb
push
dec
push
jb
xor
xchg
sarb
inc
sarb
inc
mov
pop
cmp
add
shll
adc
xchg
cmp
dec
aam
hlt
add
pop
sub
aaa
stos
add
inc
cld
pop
sbb
and
add
push
rol
mov
addr16
dec
inc
mov
cwtl
test
lock
rolb
jge
push
leave
inc
lods
dec
fsubrs
adc
dec
add
xlat
push
movl
inc
imul
fnstsw
push
daa
mov
roll
ret
jg
xchg
mov
sahf
xor
dec
imul
ljmp
add
sar
lds
push
out
lock
ljmp
or
loopne
add
cmp
add
inc
xor
sbb
mov
aas
push
test
lcall
add
mov
mov
pop
mov
xchg
inc
repz
mov
jne
sub
inc
mov
int3
das
adc
fwait
pop
or
inc
nop
inc
xor
xchg
arpl
pusha
add
jmp
push
aas
in
xchg
push
into
test
jno
add
ret
cmpsl
sbb
rcll
adc
sbb
fwait
inc
pop
lahf
loope
add
iret
pop
js
rolb
call
jecxz
negb
lret
and
in
movsb
cmp
jae
inc
adc
in
lret
shlb
inc
aaa
push
daa
aas
add
cli
sub
add
pop
push
xor
in
cmp
add
pop
outsl
mov
repnz
add
orb
rclb
add
mov
leave
pop
add
out
aaa
sarl
imul
loopne
aad
fucomip
hlt
mov
cmc
pop
mov
loop
mov
mov
fdivrl
lds
add
addl
pop
push
sub
add
sbb
inc
stc
enter
inc
mov
sub
es
cmp
xchg
pop
sbb
push
pop
cmpb
pop
insl
dec
out
add
jmp
shrl
arpl
je
loop
push
loopne
xor
xor
dec
pop
push
sbb
lret
pop
ss
sub
mov
inc
ret
js
mov
loopne
and
add
cltd
fadd
stc
inc
jp
or
imul
sbb
push
jmp
jae
ret
in
add
ror
push
fstpt
aam
test
inc
stc
push
inc
cmp
inc
xchg
cwtl
out
rclb
psubq
rep
mulps
mov
sbb
xchg
xor
sti
inc
cmpb
and
cmp
push
cli
or
ljmp
add
leave
lcall
rclb
rorb
dec
add
inc
leave
sub
xchg
nop
push
add
ja
ret
push
ret
repnz
in
jo
dec
add
add
pop
sub
inc
das
xchg
mov
jne
push
sub
or
je
mov
sbb
insl
push
jnp
shrb
test
add
inc
out
fsubrl
shrl
loopne
add
sahf
popf
icebp
add
ss
push
shll
add
cli
push
js
jae
push
shlb
inc
adc
xchg
lcall
daa
insb
mov
das
loopne
lock
dec
xorb
pop
arpl
inc
add
pop
push
pop
leave
mov
or
ljmp
fadds
pop
arpl
rcrw
stos
std
aam
in
pop
dec
jno
push
cmpsb
push
loope
lds
out
xorb
pop
add
mov
xor
stos
inc
dec
add
shll
pop
add
lods
inc
test
ds
pusha
leave
fildl
mov
jge
add
mov
pushf
mov
arpl
add
mov
in
lods
add
push
notl
inc
pop
adc
add
test
int
ret
mov
outsl
xchg
cli
lock
add
sub
dec
sbb
flds
cli
push
mov
insl
jp
ljmp
ss
pop
cmp
pusha
mov
ja
data16
cld
insb
mov
nop
out
clc
dec
dec
orb
roll
lods
dec
jp
ja
stc
addb
ljmp
divl
fsubr
add
cmp
sahf
pop
pop
nop
jae
insl
push
icebp
push
es
jns
shlb
mov
nop
movsl
mov
inc
push
sbb
mov
and
ljmp
pop
ret
fstl
sbb
sahf
bound
inc
sub
dec
cmpxchg
lods
and
xor
cmp
into
add
les
loopne
push
add
cwtl
icebp
inc
jb
add
cltd
push
push
cmpsl
inc
or
fwait
hlt
mov
fildll
lret
jge
mov
add
or
push
repnz
add
mov
dec
aam
xchg
pop
adc
int
add
ret
xlat
nop
push
pop
fildl
out
and
inc
mov
add
rcl
adc
sbb
ds
loope
out
outsb
jno
test
mov
xor
inc
add
ror
push
lahf
add
sbb
inc
int3
dec
std
repz
pop
icebp
xlat
add
pop
sarl
enter
repz
inc
les
inc
sti
test
xchg
in
mov
add
jle
and
mov
fcomps
popf
aas
add
cli
push
or
mov
jl
jecxz
inc
and
cwtl
ret
mov
xor
out
adcl
inc
and
add
cmpsb
add
jge
inc
mov
add
lahf
sbb
mov
fcomp
repz
je
outsl
aaa
test
mov
bound
and
xchg
jg
xor
and
dec
aam
rcll
or
xchg
xlat
lahf
shlb
outsb
sahf
add
lret
mov
inc
sbb
cmp
rclb
negl
pop
bound
adc
cwtl
jp
out
test
mov
fs
cmp
imul
pushl
mov
push
movl
inc
mov
cwtl
add
push
aam
stos
adc
dec
jmp
jl
inc
pop
popf
mov
inc
mov
int
add
xor
pop
pop
inc
dec
dec
sahf
ret
add
leave
mov
lock
cmp
xchg
fidivrs
in
add
cmp
sar
xchg
clc
insl
or
adc
std
cmp
fs
cmp
inc
sbb
andb
inc
push
faddl
inc
sub
jnp
pushf
add
das
shl
mov
xchg
mov
add
fcomps
mov
sbb
das
incl
test
enter
lock
push
bound
fneni(8087
hlt
or
pop
nop
add
inc
in
subb
add
mov
movsl
dec
daa
cmp
roll
into
stc
add
pop
xchg
pop
out
add
push
or
movsb
add
lret
cmp
xor
xor
push
loopne
adc
add
sbb
add
cwtl
cli
add
inc
ror
sbb
add
in
ffreep
add
xchg
inc
fsubl
sub
rcrb
mov
jmp
dec
adc
mov
and
stc
push
pop
mov
jae
xchg
repz
jp
std
push
inc
add
lods
jae
lea
insl
sarl
fisttpl
xchg
sbb
repnz
mov
add
aas
sarl
add
shlb
out
test
add
push
pop
sbbb
mul
add
pop
sub
repz
add
mov
mul
sbb
mov
stos
push
nop
das
inc
fwait
add
inc
loopne
add
stos
xchg
testb
xchg
xchg
movsb
nop
and
push
add
jno
idivb
ljmp
clc
mov
cli
cltd
lds
rcl
add
adc
inc
dec
enter
add
mov
scas
arpl
adc
insb
mov
enter
add
inc
and
push
sarb
cld
lods
cmovae
cmpsl
add
sbb
cwtl
add
add
sahf
mov
lcall
inc
cmpsb
shrl
jo
lea
cltd
add
and
push
inc
dec
stos
add
jge
add
cmpsl
or
leave
pmullw
scas
jmp
rolb
shl
addl
sub
pop
stc
hlt
pop
jb
add
jl
test
dec
rorb
loopne
mov
mov
xchg
add
arpl
add
inc
addl
sarb
add
fs
outsb
cli
jl
jecxz
sbb
lret
sub
xchg
xorl
inc
ret
jnp
inc
add
or
jle
pop
lods
mov
cli
mov
add
mov
scas
aad
pop
pop
std
dec
cs
mov
add
pop
shl
mov
xorl
sbbb
add
mov
fldl
movsb
cmp
pop
xor
inc
jbe
add
lret
xchg
dec
ret
push
add
subl
mov
jle
add
inc
shrl
repnz
cmp
pop
mov
xchg
in
rolb
dec
clc
mov
add
das
lea
or
mov
jle
mov
dec
mov
sarl
addr16
mov
xchg
outsl
cmp
fdivrs
and
insb
mov
add
mov
or
mull
imulb
rolb
aas
faddl
popa
push
add
int3
rolb
inc
cli
flds
ljmp
pusha
cmp
mov
js
rcr
xor
jmp
loop
adc
cmp
bound
and
dec
add
add
mov
fpatan
notb
iret
in
add
or
loop
jge
bound
enter
outsl
popa
inc
sub
or
int
add
push
loopne
mov
jb
lods
iret
shlb
aaa
cmpsl
add
cmp
addb
and
add
inc
mov
mov
add
fnstsw
in
inc
xchg
loop
add
call
je
arpl
jnp
add
jne
push
add
sbb
inc
mov
mov
fdiv
push
loopne
add
inc
xor
test
pushf
cwtl
nop
mov
sub
dec
pop
jl
into
test
and
adc
add
xchg
fwait
clc
inc
jg
or
addl
sub
into
aad
adc
dec
add
pop
mov
pop
cs
sbb
rcrb
test
jge
add
movsl
inc
xlat
pop
push
inc
test
cmc
popa
out
jb
ss
mov
mov
scas
pop
cli
pop
or
jmp
add
mov
je
aam
add
lea
dec
push
imul
testl
mov
push
jae
aaa
cmc
inc
pop
and
aad
in
ret
and
aas
hlt
fwait
add
mov
inc
xor
popa
mov
sub
outsl
and
pop
mov
mov
incl
add
mov
lahf
shl
and
sbb
xor
pop
xchg
shll
mov
cmp
scas
push
add
mov
pop
jno
adc
add
pop
xor
cmp
pop
sub
mov
cmpsl
div
aas
in
xor
pop
das
push
sub
mov
or
inc
push
insb
pop
call
test
movsb
outsl
mov
add
sbb
ret
cwtl
mov
pop
pop
popf
js
std
jg
call
movsl
add
xchg
loopne
enter
sub
pop
lds
dec
xchg
adcb
pop
cwtl
lea
add
cmp
gs
or
add
inc
cltd
ds
push
mov
lods
jg
push
arpl
mov
in
inc
add
pop
dec
pop
mov
mov
xor
inc
fildl
sahf
lods
ljmp
rcr
int3
jo
es
mov
add
mov
int3
into
push
vsubps
sbb
adc
icebp
pop
mov
inc
jmp
sub
je
mov
xor
insb
shr
filds
loopne
shll
cmp
dec
add
mov
add
addr16
loopne
dec
add
in
push
add
xor
mov
ficomps
jl
clc
outsb
movsb
dec
or
dec
fisttpll
mov
jecxz
push
aam
xor
data16
cmp
add
shll
add
addl
add
add
cltd
pop
pop
add
aaa
xlat
fucomp
cmp
cmp
cwtl
jns
pusha
int
mov
inc
push
dec
inc
sti
enter
sbb
aam
scas
dec
sub
mov
push
jg
inc
scas
inc
push
jp
cld
jno
shlb
push
leave
fadds
mov
add
js
int
xlat
add
test
shll
xchg
mov
ret
jl
ja
or
outsl
mov
add
gs
cmc
test
mov
jle
pop
jo
roll
inc
jns
mov
add
shl
push
addr16
cmp
inc
jmp
int3
add
enter
add
push
arpl
add
and
popf
cwtl
sbb
jne
pushf
dec
movsl
addb
mov
stc
pusha
aas
lcall
pop
arpl
push
imul
inc
shlb
test
outsl
cmpb
jle
push
xchg
add
xor
jl
in
addb
add
inc
mov
hlt
enter
aaa
ljmp
push
jno
shlb
out
pop
xchg
popf
add
insb
push
nop
add
lret
fwait
or
test
inc
aam
mov
lods
rcrb
out
leave
add
or
mov
div
cmpsb
sbb
add
movb
cmpsl
in
imul
nop
xlat
and
push
add
sub
xchg
shlb
jp
mov
push
cli
jb
xchg
mov
jne
stc
call
enter
jno
add
inc
sub
sbb
add
repnz
in
mov
inc
pop
flds
xor
mov
cmp
pop
add
popa
int
dec
inc
into
mov
leave
jo
jmp
mov
test
pop
dec
imul
add
and
inc
inc
pop
push
xor
out
and
add
movsl
leave
dec
cmpsb
mov
icebp
add
cwtl
inc
add
out
fs
aam
adc
and
add
cmp
push
mov
adcl
mov
movsb
add
into
push
aaa
loope
mov
mov
cmp
pop
js
mov
jns
dec
repz
lret
adc
mov
jno
call
push
popl
push
hlt
lea
scas
fstps
dec
or
subb
xlat
test
stc
mov
push
or
adc
push
add
lods
leave
xchg
into
jo
inc
add
cs
mov
ljmp
add
mov
enter
add
xchg
lock
inc
mov
call
xchg
shrb
ffreep
xor
mov
push
mov
out
lds
movl
fstps
mov
fs
stc
jg
add
sub
decl
xchg
add
in
mov
pop
test
pusha
ret
adc
xor
cmp
or
cmpsl
movb
or
fidivl
lcall
sbb
inc
ljmp
adc
sub
pusha
je
int
pop
jbe
add
fildl
fucomp
addb
adc
aam
mov
adc
ret
add
pushf
mov
cmp
in
add
pop
shl
pop
mov
int3
inc
pop
add
add
inc
and
xchg
sbb
jnp
mov
add
mov
fldl
lret
clc
lahf
daa
add
pop
push
out
arpl
faddl
inc
rclb
movzbl
lods
pusha
scas
mov
mov
and
std
nop
outsb
xchg
fiaddl
mov
xor
stos
lsl
add
add
push
and
dec
hlt
in
rclb
bound
dec
push
rol
iret
inc
dec
add
adc
test
imul
movsl
sub
jo
xor
addr16
ret
out
shrb
push
loope
lods
sbb
imul
jp
data16
cmp
pop
push
shrb
out
dec
orl
mov
addl
fsubl
ror
cmp
or
repz
movsb
xlat
aaa
inc
lods
mov
mov
imul
add
xor
add
add
sbb
pop
popa
cmp
add
dec
push
inc
inc
or
add
inc
mov
push
mov
sub
xchg
pop
fs
cmp
mov
sub
sbb
xor
fnstcw
jns
cli
add
cmp
mov
das
xchg
mov
mov
nop
idiv
add
leave
ret
js
inc
rorb
lret
or
mov
aad
popf
add
push
mov
fdivrs
sarl
lods
js
pop
xchg
or
cmp
movsl
inc
pop
andl
mov
adc
ret
inc
xchg
movsb
lods
aad
push
pusha
in
sub
jb
xchg
push
pop
fcmovbe
or
add
dec
lret
inc
add
out
cld
push
pop
push
test
sub
ret
add
addb
xor
lret
loopne
fs
add
int3
xor
add
mov
hlt
push
pop
shrb
pop
xchg
sub
repnz
movsl
add
inc
pop
sbb
popa
mov
mov
sbb
pop
and
jle
mov
inc
ret
xchg
xchg
inc
cmp
add
inc
push
and
xchg
dec
in
clc
sarb
jns
xchg
add
dec
iret
jge
add
and
add
mov
test
jmp
push
insl
packsswb
inc
adc
icebp
sbb
add
cmp
mov
imulb
jecxz
cmp
arpl
pop
lods
ficompl
jge
aas
inc
and
movsb
testb
ficomps
cmp
pop
or
inc
mov
add
fisubl
add
cmpl
add
sbb
in
dec
sti
xchg
add
cwtl
lock
pop
adc
mov
add
iret
fwait
popa
repz
dec
imul
sbb
cmpl
addl
mov
fmuls
add
sarb
mov
frstor
and
and
das
add
out
add
sti
jmp
inc
and
cmp
xchg
fsubs
ret
pushl
sub
out
adc
mov
faddl
jo
add
dec
das
xchg
jp
fisttps
sub
xchg
cmp
js,pt
cmpb
sub
mov
arpl
add
mov
inc
jbe
add
mov
xchg
mov
jg
mov
stos
rorl
repz
mov
sbb
in
dec
pop
adc
stos
clc
lds
xchg
xchg
arpl
xor
add
mov
pop
push
insb
rorb
inc
lcall
arpl
pop
xor
and
mov
add
sub
sahf
and
mov
or
ja
and
es
pushw
cmp
stos
and
psllw
cwtl
in
add
aas
fwait
ret
xor
or
sti
xor
in
add
xchg
fldl
lods
push
shlb
subl
cmp
aam
mov
pop
push
and
sbb
add
mov
inc
jne
xchg
mov
inc
cmp
std
arpl
push
inc
mov
stos
inc
adc
add
cmpsb
mov
add
dec
rolb
xor
cmp
call
xchg
rcll
stc
inc
and
shr
add
and
rorb
lods
icebp
out
popf
mov
es
in
push
andb
pushf
add
and
ret
loope
mov
xchg
xor
jg
cli
ficompl
leave
lret
dec
push
jns
adc
lds
aad
in
inc
pop
test
ja
add
fstl
leave
mov
add
pop
xchg
xchg
fcmovnu
addb
adc
scas
xor
xchg
mov
movsb
xchg
rcl
lods
sbb
mov
or
scas
pop
cmp
addb
rolb
pop
cmp
adc
and
shl
movsb
arpl
jae
test
inc
adc
xchg
rolb
lock
insl
cmpb
aam
inc
inc
fbstp
lret
es
mov
sbb
mov
rorb
add
inc
int
das
dec
pop
jns,pt
cmp
sub
mov
pop
sub
add
jae
test
xor
dec
pop
arpl
bnd
jg
fsubrl
add
addb
adcb
ljmp
and
xor
add
sub
popa
jecxz
movntps
inc
sub
add
adc
add
push
add
add
push
in
xchg
xchg
and
leave
ds
rorb
add
inc
enter
in
stos
je
nop
mov
jns
ret
mov
rcl
push
lret
push
imul
inc
adc
imul
in
ljmp
adc
les
insl
add
cmp
or
add
repz
orl
lahf
lret
sbb
or
sub
add
jns
pop
sarl
jp
mov
mov
inc
dec
mov
data16
or
pop
lock
mov
out
outsl
in
in
adc
aaa
outsl
icebp
push
inc
cmp
mov
cmp
jnp
sbb
dec
cmp
mov
in
pop
inc
rcrb
add
aad
add
ret
popa
cmp
shrb
add
fnstcw
add
in
loopne
add
pop
aas
sar
mov
scas
mov
adc
push
shr
mov
sub
add
jo
addl
inc
dec
clc
jmp
insb
imul
inc
int3
pop
popf
pop
jns
add
data16
or
inc
cmp
bound
sbb
out
add
stos
repz
adc
cmp
sub
testb
mov
bound
jmp
insl
out
adc
mov
sub
lret
cwtl
out
lock
inc
les
popf
cld
mov
fldenv
shlb
repnz
cmpb
mov
jns
add
dec
test
mov
int3
add
mov
add
adc
inc
vmread
add
shll
test
mov
pop
push
add
mov
iret
rorb
mov
gs
in
and
mov
push
std
adc
jns
jbe
adc
sbb
rolb
inc
jmp
inc
sub
jl
adc
add
stc
sbb
rcrl
enter
into
loopne
adc
and
cmp
loop
dec
xchg
adc
decl
mov
inc
stos
ss
xor
int
std
hlt
outsl
cmp
sti
rcrb
mov
in
inc
pusha
sub
or
sti
sbb
inc
lods
add
jle
dec
setns
push
stos
aas
push
int3
es
add
imul
pop
leave
add
inc
test
jo
punpckhbw
push
cmp
insb
add
roll
push
das
sar
dec
jmp
int3
nop
add
mov
lcall
sub
fildl
add
loopne
add
sub
mov
dec
mov
and
pop
fstpt
outsl
inc
mov
mov
add
mov
jmp
rorb
ss
mov
mov
aas
jge
add
jmp
test
mov
sbb
mov
inc
adc
and
inc
cmp
or
cltd
or
outsl
inc
add
add
mov
cmp
ret
bound
scas
movsb
jmp
and
andb
cmc
push
inc
js
or
fcom
ret
loopne
mov
outsl
mov
add
inc
sti
call
add
inc
pop
std
por
aam
das
sbbb
sub
pop
mov
mov
scas
paddusw
xor
mov
popf
add
pop
sahf
bound
data16
add
jae
xor
or
jno
add
ret
and
test
scas
enter
add
cmp
add
fnsave
add
ds
scas
jns
add
mov
sbb
pop
jne
fistl
jns
fwait
rclb
pop
fnstenv
add
test
arpl
jnp
inc
sahf
mov
push
cli
jecxz
outsb
mov
js
mov
jle
int3
xchg
shl
je
loopne
sbb
stc
ficomps
pop
mov
push
sub
add
sbb
and
stc
int3
mov
mov
add
dec
mov
inc
or
arpl
stos
pop
cmp
dec
es
adc
and
cmpsl
push
pop
cmp
clc
add
mov
or
push
sarb
ficompl
mov
orb
std
push
pop
sub
aad
rolb
mov
push
push
enter
add
stos
pushf
mov
add
jne
xor
xlat
add
int3
add
inc
mov
mov
sbb
xor
pop
push
stc
mull
or
nop
addb
inc
aaa
jp
addb
fiadds
enter
insb
ret
add
add
add
icebp
or
add
mov
jne
dec
and
dec
dec
and
add
imul
lods
stos
xorb
mov
push
rcl
subb
dec
inc
pop
xor
subl
roll
in
setge
xchg
add
add
faddl
inc
mov
inc
sbb
xchg
sbb
callw
add
mov
mov
and
xchg
lock
bound
inc
movsl
and
aas
xlat
xchg
mov
jo
jp
cld
xor
dec
xor
cmp
jns
jecxz
push
pop
pop
add
clc
rcrb
lahf
jo
inc
mov
pop
sbb
insb
push
das
inc
repnz
and
inc
outsl
out
sub
adc
adc
dec
mov
push
daa
pop
dec
xorl
jp
icebp
add
adc
cmc
add
add
das
xlat
inc
xchg
add
xchg
xor
push
arpl
mov
add
outsl
xchg
jno
and
add
sti
cmc
inc
outsb
dec
add
pop
lahf
inc
lods
mov
scas
add
and
sub
and
das
cmp
out
inc
mov
cli
bound
adc
shll
pop
sbb
ret
in
popa
xchg
mov
cmp
stos
orb
test
add
mov
addr16
inc
outsb
sahf
add
push
cmp
push
pop
or
xchg
add
outsl
leave
inc
cmpsb
out
and
cmc
les
enter
inc
arpl
inc
test
jae
xchg
lock
hlt
add
lret
add
mov
adc
je
fucom
outsl
scas
inc
add
inc
cmp
cli
or
std
push
adc
movl
mov
stos
add
push
cmc
xchg
std
outsl
dec
fnstsw
pushl
sbb
cmp
bound
add
out
pusha
fcoms
add
mov
add
and
cmp
pop
xor
pop
xor
cld
jge
add
lods
sub
mov
fidivs
rclb
iret
or
cltd
inc
dec
xor
or
rcll
repz
add
mov
jecxz
rolb
lods
jbe
jg
cmp
rcll
add
int
jmp
add
roll
adc
lcall
ds
cld
or
shl
rclb
and
in
out
mov
or
jnp
dec
lret
cmpl
insl
std
push
push
ret
pop
push
out
sbb
dec
xchg
ja
sub
add
sbb
push
push
outsb
adc
sbb
fwait
cmpsl
adc
es
ret
pop
push
jae
add
xchg
arpl
add
sub
or
add
fstps
mov
nop
add
ret
add
ja
je
add
in
clc
add
sahf
rorb
or
test
and
push
inc
xchg
fwait
mov
inc
inc
xchg
mov
pop
mov
outsb
stos
xchg
add
xor
cmpsl
pushf
mov
out
mov
or
fwait
mov
movsl
mov
movaps
and
seta
mov
xchg
cmpsl
adc
sub
mov
pop
inc
fucomip
out
adc
je
nop
hlt
lea
jnp
inc
sbb
shrb
daa
mov
inc
pop
cmp
scas
mov
es
add
sbb
jo
cwtl
add
fldcw
jae
add
or
les
mov
add
mov
nop
add
decb
aas
notb
adcb
std
add
lea
out
inc
and
jns
sbb
mov
pop
movsl
shrl
add
outsl
jb,pn
test
add
inc
mov
movl
push
inc
add
sub
add
adc
add
pop
push
xor
cmp
sbb
dec
shlb
sti
add
add
adc
add
xlat
repz
and
rcrl
inc
stos
pop
pop
pop
imul
ss
add
mov
fs
aaa
outsl
push
push
xchg
inc
add
mov
popf
cmp
inc
int
add
xchg
fsubrs
ficoml
dec
outsb
sbbb
cmp
mov
pop
add
adc
add
push
js
jmp
repnz
adc
xor
leave
cld
add
dec
dec
test
outsb
add
push
rclb
mov
inc
pop
push
push
add
xor
xor
pop
cltd
test
jp
xchg
pop
rorb
jbe
sbb
inc
jno
mov
push
add
mov
xchg
fnstcw
sub
lock
fmull
jb
push
addr16
mov
mov
ret
frstor
mov
inc
and
mov
and
or
gs
in
mov
xchg
add
jl
mov
jecxz
jno
lds
roll
mov
xchg
sarb
mov
or
lahf
arpl
mov
lcall
pop
aad
push
jo
fldenv
or
push
sbb
clc
jns
add
inc
and
icebp
repnz
push
pop
push
int3
jge
add
enter
or
fbld
inc
in
mov
movsl
add
inc
xor
jae
jmp
bound
mov
mov
push
movsl
add
sub
inc
add
push
aad
mov
jo
add
roll
loopne
inc
xchg
xchg
pop
cmp
dec
addb
daa
jmp
cmp
xor
cmp
scas
add
inc
pop
jno
push
insl
sbb
insb
call
subb
add
js
mov
xor
cmpsl
and
add
shrl
add
mov
mov
xchg
mov
mov
jns
mov
add
ret
xor
mov
imul
fldl
adc
movsl
ljmp
pop
add
jns
add
mov
repnz
add
push
cmp
mov
xor
and
jno
call
repz
out
xor
in
stc
add
adc
or
push
xchg
add
lret
lock
or
add
les
xchg
push
adc
push
arpl
cld
add
divb
dec
add
jo
cmp
mov
nop
push
xchg
addb
or
pop
insb
mov
fadds
sub
arpl
xor
dec
cmp
jmp
sub
cmovs
push
dec
jnp
ss
mov
and
fmuls
cwtl
add
lret
pop
hlt
add
xchg
inc
inc
lods
in
add
sub
mov
test
or
mov
call
inc
mov
aam
fs
in
es
push
jmp
str
dec
leave
iret
ljmp
mov
sub
inc
cmc
mov
int
xor
add
and
pop
ficompl
sub
dec
cltd
and
mov
dec
sahf
mov
cwtl
jge
ljmp
pusha
mov
rclb
adc
stos
out
push
pushf
loope
cmp
add
cmp
add
lahf
xchg
shrb
hlt
add
pop
mov
int3
add
scas
and
mov
jecxz
repz
loopne
shll
mov
mov
cmp
xchg
dec
in
in
and
scas
xorb
pop
add
ret
in
stos
loopne
pushf
push
add
arpl
pop
mov
mov
cwtl
pop
incl
lock
iret
push
sahf
inc
mov
or
test
mov
jae
cmp
add
mov
or
fsubl
cltd
in
int3
lret
jmp
xor
inc
out
adc
mov
test
ficoml
es
pushf
sahf
mov
into
or
mov
mov
fsubrl
xchg
push
push
add
xor
or
pop
sub
rorb
add
jbe
mov
lcall
addr16
vmread
and
xchg
inc
setno
inc
subl
push
add
add
in
pop
push
mov
ret
dec
clc
cli
add
test
fsubs
movsb
mov
cmc
add
sub
push
imul
or
testl
shll
int3
or
cltd
fmuls
inc
push
pop
and
xor
sub
pop
add
cmp
or
mov
xor
rcrb
movsb
data16
mov
js
pop
or
mov
addr16
push
mov
push
inc
inc
sub
sbb
sub
and
inc
add
mov
add
imul
inc
lock
repnz
jns
mov
xor
mov
add
movsl
lods
inc
nop
fdiv
repz
cwtl
mov
inc
add
insl
shl
pusha
rol
cmp
sarb
and
cmp
cmp
or
jo
or
xchg
fsubs
xchg
add
jo
mov
sub
add
aaa
push
cmc
lods
sbb
add
cmp
rolb
stos
negb
out
lds
pop
and
stos
add
inc
aam
push
mov
xor
popa
addb
xor
aas
add
sub
mov
leave
inc
lods
add
loope
addl
inc
lods
popa
dec
test
push
add
sar
mov
loope
mov
add
orl
add
notb
push
sti
or
call
add
hlt
lods
les
fstpl
ret
mov
fs
arpl
out
sbb
lret
into
mov
push
cmp
std
push
testl
lds
mov
add
ret
add
mov
enter
jmp
dec
scas
add
dec
inc
into
gs
push
sub
addb
in
dec
or
mov
push
addr16
push
push
push
sbb
xchg
nop
cmp
inc
andl
mov
fisttps
stos
add
test
xor
pusha
lahf
inc
add
scas
jg,pn
xchg
roll
and
or
fidivrs
cwtl
enter
add
jge
cld
add
shl
neg
pop
mov
xchg
lock
xor
repz
sub
ret
add
fidivrl
inc
mov
rolb
pop
addr16
lods
nop
aad
sbb
popf
sub
mov
insl
or
rorb
cmp
xor
je
jno
sub
ljmp
int3
mov
shll
daa
xchg
xor
lahf
inc
xorl
mov
scas
ss
jecxz
shlb
mov
adc
sub
push
cltd
add
pop
cmpsb
dec
inc
add
std
sbb
cltd
stc
bndldx
adc
add
js
dec
les
xor
add
movsl
or
aam
fisttpll
rolb
out
and
leave
in
push
inc
push
push
mov
mov
in
lods
add
jnp
js
jne
outsb
add
adc
call
iret
cmc
or
inc
popa
add
insb
add
sbb
mov
jo
add
in
rclb
lds
xchg
xor
jg
lret
jnp
fmul
mov
shlb
roll
mov
out
inc
pop
mov
cmpsb
test
or
imul
pop
add
inc
pop
out
jbe
adc
inc
pop
repz
movsb
arpl
cld
popa
add
inc
push
ds
push
push
dec
push
add
xor
enter
dec
jbe
js
mov
bound
push
xor
sub
jae
pop
cwtl
aad
rclb
shrl
inc
push
add
lret
jb
mov
decl
ljmp
cmp
in
add
shr
imul
loope
inc
int3
xor
test
stc
jecxz
cmp
mov
push
jge
or
add
xchg
mov
insl
aas
out
cmp
rolb
mov
mov
add
or
enter
into
add
inc
mov
pop
fisttpll
push
xor
and
inc
and
cmp
mov
mov
invd
fistl
lock
adc
add
sub
roll
sar
and
sub
jno
fimuls
sar
xchg
aad
add
mov
or
pop
roll
out
mov
insl
add
mov
std
cmovae
pop
loopne
jns
cmpsb
rolb
cmp
jg
mov
sbb
aad
pusha
sub
add
or
cmp
add
je
jg
jne
dec
data16
add
cld
arpl
push
inc
les
mov
cmp
mov
pop
cmc
sahf
int
cmp
rcll
imul
sbb
and
pop
pop
pop
movsb
lods
cwtl
mov
inc
xor
pushf
nop
fildl
mov
pop
mov
flds
mov
jle
mov
jecxz
mov
adc
punpcklwd
inc
test
mov
add
inc
jae
sbb
pushf
add
jno
mov
lret
push
cmpsl
mov
arpl
data16
sti
psubd
mov
xchg
add
in
mov
sub
ret
out
mov
sub
jns
add
pop
je
push
in
add
jp
filds
int
daa
push
jne
jl
mov
mov
add
std
xor
testb
lahf
insb
shrb
mov
add
push
ret
outsl
mov
add
loope
out
dec
add
add
je
adc
outsb
popf
cmovl
jge
mov
push
rorb
inc
mov
inc
add
or
rcrb
mov
mov
mov
cmpsl
stc
and
sub
cwtl
lahf
mov
cmp
cld
cmp
or
pop
outsb
pushf
ja
imul
and
aaa
push
dec
dec
addr16
jmp
inc
add
lea
mov
scas
orb
rolb
sbb
arpl
dec
in
insb
inc
add
xor
or
jg
mov
sbb
leave
cmpsb
addb
inc
and
movsl
rolb
bound
add
adc
js
push
sub
add
aaa
ret
cmp
sbb
or
mov
push
add
enter
inc
xchg
mov
hlt
mov
test
test
inc
jecxz
scas
add
cwtl
push
push
loopne
push
jle
rcll
push
jmp
xchg
ljmp
xchg
add
out
cld
repnz
cmpb
sbbl
icebp
imul
pop
push
mov
dec
xor
bnd
jb
mov
fs
add
idivb
cmp
dec
adc
add
scas
mov
sbb
in
orb
test
mov
jne
ljmp
aaa
mov
lahf
add
cmpsl
lds
lods
jns
pop
loope
fwait
push
sub
pushf
xor
add
or
nop
lea
add
dec
sbb
sbb
and
mov
lods
or
mov
inc
js
dec
arpl
and
icebp
add
daa
inc
cmp
inc
jae
fs
out
pop
push
dec
arpl
add
data16
jae
mov
add
hlt
rcl
sub
xor
dec
mov
enter
xchg
lea
arpl
ja
pop
or
push
pusha
adc
inc
adc
sub
push
push
dec
cmpsl
loope
loope
fldlg2
jnp
cmp
jg
add
mov
stos
scas
dec
arpl
pop
and
insb
push
jp
rcl
push
rcr
sub
outsl
inc
xchg
inc
nop
mov
arpl
aas
imul
sahf
inc
mov
add
jne
nop
add
fildl
xor
loopne
cmp
pop
movsl
adc
arpl
lods
add
movsl
cmp
sub
inc
es
adc
mov
sbb
xchg
fidivs
stos
shr
xor
js
mov
mov
ret
mov
cmovae
cmp
inc
add
pop
mov
mov
js
ror
xchg
test
inc
xor
ds
and
mov
inc
xor
cli
mov
adc
out
add
xor
or
mov
add
add
outsb
addb
rcrl
pop
xchg
pop
stc
or
gs
push
mov
js
rep
aaa
add
pop
xchg
pusha
lods
mov
test
test
movsl
mov
add
push
add
add
jno
jl
iret
addl
jmp
and
pop
dec
add
cmp
and
std
adc
arpl
add
add
sub
jae,pn
pop
ret
out
repz
mov
hlt
push
pop
add
in
cmpl
jbe
adc
jnp
ljmp
lods
pop
pop
add
arpl
xor
insb
push
dec
jns
jmp
cmc
add
aam
sub
inc
sbb
pop
dec
inc
lcall
pop
out
add
adc
sahf
arpl
inc
xor
add
iret
cmp
loopne
mov
and
add
add
mov
add
xor
lock
pop
mov
daa
xchg
insl
and
mov
adc
movd
jl
pop
push
ja
rol
arpl
outsb
push
mov
data16
add
push
subb
add
test
je
mov
das
jecxz
add
mov
cmpsb
pop
inc
lea
or
xchg
and
sub
incb
clc
cmpsb
push
xor
xchg
addb
aas
push
inc
pop
adc
mov
mov
cli
inc
add
mov
xchg
stc
les
pop
lock
pop
jb
cltd
mov
add
pop
data16
cmp
push
adc
add
rolb
add
mov
mov
cmpsl
push
sbb
mov
fwait
xchg
add
mov
jle
or
test
add
mov
addb
int
sbb
xchg
add
cmp
jp
add
arpl
jne
xchg
aad
mov
xor
mov
inc
jp
or
xchg
xor
inc
or
push
out
ds
negl
adc
stos
add
sti
sbb
add
adc
into
cmpb
fistpll
cmpsl
and
pop
pop
inc
idivl
and
pop
gs
push
inc
xor
shll
cmp
popl
inc
cwtl
jle
rolb
inc
push
xchg
pushf
cli
mov
add
inc
fadds
out
repz
imul
pop
rorl
fisubs
hlt
mov
xchg
add
push
iret
adc
dec
data16
mov
push
and
imul
push
stc
cwtl
pop
jl
test
inc
jns
adc
out
push
popf
sub
aad
pop
adc
cli
scas
jp
cwtl
ret
push
int3
lretw
rorb
into
or
inc
xor
mov
mov
fstl
mov
dec
fcomps
add
xchg
lea
mov
call
fdivrl
insl
cs
jl
add
mov
xchg
add
rcll
pop
push
cmp
arpl
mov
popf
dec
xchg
push
sar
xchg
mov
add
cmp
and
loopne
or
inc
add
pop
pop
outsl
jg
dec
faddl
pop
cs
clc
lods
add
stos
xchg
pop
inc
cmp
movb
ljmp
add
mov
hlt
ret
add
cmc
pop
adc
cmp
xchg
cmp
out
adc
jmp
mov
sub
push
paddd
inc
mov
jl
les
add
sarb
cmpsb
xchg
lea
push
add
repnz
jp
enter
into
jle
add
add
out
add
mov
add
xchg
std
xor
into
repz
xor
xchg
rolb
mov
mov
mov
scas
out
mov
into
add
pop
cli
mov
mov
stos
dec
or
adc
fcoms
inc
sub
jae
repnz
emms
test
sbb
inc
fiadds
pop
mov
mov
inc
pop
lea
cli
aad
add
pushf
sarb
int3
mov
xor
add
inc
fcomp
jae
test
arpl
roll
testl
loop
add
sbb
rolb
ja
sar
lcall
mov
xor
add
pushf
cmc
pop
test
add
cmp
fiaddl
add
testb
dec
rolb
hlt
sahf
test
inc
mov
repz
cmp
add
mov
cld
add
mov
sub
add
jo
ja
addr16
jl
pushf
mov
jecxz
xchg
jge
mov
mov
fs
hlt
add
pushf
sub
inc
or
lret
dec
push
mov
adc
mov
pop
mov
cmp
popl
sub
fldl
add
imul
pusha
cs
outsl
fcomps
pop
hlt
ja
pop
add
out
shl
xchg
and
xchg
cwtl
xor
mov
inc
je
or
mov
sarb
out
movsb
imul
sub
sbb
leave
xchg
scas
cwtl
and
not
or
dec
or
icebp
add
add
cmp
xchg
push
in
jne
add
xchg
clc
xor
jle
and
mov
jno
loop
sub
adc
sbb
inc
pop
aas
push
subb
mov
jo
cmp
mov
mov
push
flds
sbb
je
out
xor
xor
or
or
jns
dec
rorb
cmpsb
pusha
add
lods
stos
into
cmp
dec
test
fstpl
fmull
movsb
int3
outsl
rolb
add
negl
or
xor
and
inc
pop
lea
adc
add
jmp
xchg
mov
push
lcall
and
pop
push
add
mov
xchg
aas
je
loopne
inc
rcrb
mov
cmpb
push
sub
mov
pusha
add
cwtl
jecxz
pop
sbb
addl
mov
aas
pop
sub
xchg
add
leave
les
mov
adcb
cmp
mov
clc
test
push
adc
mov
lahf
pusha
jno
add
subb
mov
add
iret
rolb
std
mov
xor
add
or
mov
popf
pop
mov
iret
mov
add
adc
xchg
dec
mov
int
sub
cmp
div
popf
mov
adc
add
outsl
cmc
mov
add
stc
scas
shr
loope
add
jecxz
or
std
mov
or
push
and
mov
lret
daa
repnz
mov
add
stos
jb
cmp
arpl
and
push
lods
mov
lds
out
clc
aad
in
xor
incl
add
cmp
test
clc
ss
out
scas
cli
push
cmp
push
in
fisttps
arpl
add
xor
push
mov
mov
dec
add
aas
inc
xchg
addl
xchg
cmp
sub
mov
jno
cs
jnp
sbb
imul
or
push
inc
cmp
xchg
lret
xchg
inc
push
sti
pop
push
add
daa
jae
rsqrtps
or
outsl
inc
imul
clc
lret
mov
out
mov
xchg
cmp
inc
adc
daa
push
add
shlb
sbb
pop
mov
mov
add
pop
add
stc
testl
and
loopne
rcl
sbb
mov
pop
inc
bound
stos
adc
cmpl
aam
repnz
xor
repz
outsl
add
clc
rclb
push
rcl
jae
call
jle
pop
pop
mov
inc
push
outsb
add
shrl
inc
negl
sti
add
inc
xchg
lds
int
daa
add
stc
mov
add
gs
jo
inc
scas
pusha
decl
add
pushf
in
mov
push
pusha
fadds
inc
xchg
hlt
leave
testl
out
fildl
inc
jl
sti
xor
mov
sbbb
fs
ss
inc
add
mov
pop
addr16
fisttpl
or
add
mov
jecxz
add
adc
xchg
jl
add
data16
pop
outsl
pop
inc
add
jecxz
nop
add
cld
ror
fwait
inc
push
add
xchg
dec
add
sub
dec
add
add
pop
adc
add
ret
cwtl
lea
xchg
sbb
daa
xchg
xorb
js
sbb
fsubrp
lret
push
and
push
inc
inc
add
popa
push
fildl
and
aaa
add
nop
adc
insl
mov
mov
xchg
mov
in
adc
enter
cmp
xor
add
xchg
mov
aam
repz
push
pop
xchg
add
in
lret
adc
inc
fs
inc
lahf
cmp
push
jnp
imul
dec
cmpsb
add
shrl
mov
cli
add
in
xorb
jp
dec
sub
add
into
arpl
cmpsb
cmp
and
pushf
sub
add
sbb
pop
add
inc
jge
and
mov
mov
aas
aaa
xchg
add
incl
add
jo
mov
lahf
ja
call
xchg
shll
pop
aam
popa
loope
test
add
inc
xchg
and
repz
lcall
inc
repnz
cwtl
or
push
or
xorb
int
cmp
pusha
ss
icebp
add
adc
leave
or
in
out
pop
mov
add
pop
arpl
enter
cs
mov
test
cli
and
pop
dec
dec
sbb
mov
clc
dec
loop
push
or
add
dec
add
mov
sbb
push
add
mov
stos
sbb
cmc
int
add
jmp
adc
mov
add
add
cmp
cltd
push
pop
mov
rorl
inc
cmpsl
movsb
cmp
aas
cs
addb
add
dec
arpl
shrl
adc
pop
sbb
mov
fwait
mov
sahf
lds
mov
dec
addr16
int3
aam
push
hlt
es
and
jae
lret
cwtl
out
sbb
jnp
repnz
sbb
sub
inc
enter
jns
rorl
xor
cld
xchg
add
sarl
add
lods
cltd
sbb
and
pop
jnp
inc
dec
add
sub
jo
flds
dec
jae,pt
xor
jae
das
mov
pusha
mov
inc
add
jb
inc
inc
andb
arpl
xlat
jge
add
adcb
ret
shlb
add
in
enter
adc
lret
push
out
cmpsl
rcrb
add
enter
xor
adc
lea
andl
scas
adcb
adc
dec
inc
xchg
fimuls
xor
adc
add
faddl
add
insl
sahf
sub
nop
cmp
add
cmp
hlt
lds
stos
fs
inc
incl
push
lea
mov
or
add
add
cmp
inc
xchg
inc
or
lods
sub
mov
push
cmp
add
addb
insl
ljmp
pop
sbb
inc
stos
shrb
jae
out
cmpsl
arpl
add
stos
loop
js
enter
pop
pushf
and
adc
nop
lock
addr16
jecxz
sub
add
xor
xchg
ljmp
bound
icebp
add
or
mov
add
add
dec
adc
cmp
repnz
ret
mov
jne
jmp
mov
fiaddl
add
iret
mov
add
mov
add
int3
repz
pop
sub
xor
mov
repnz
or
mov
dec
icebp
mov
sub
add
mov
rorb
push
push
cmpsb
inc
movsl
adc
add
mov
shlb
imul
icebp
and
pop
mov
xorb
sbb
sar
mov
xor
test
pusha
inc
add
add
leave
dec
dec
jecxz
xchg
mov
aas
popa
ret
sub
out
adc
fcoms
or
subb
and
add
aam
aaa
xchg
dec
out
bound
mov
ret
add
pop
mov
jns
add
or
insb
xor
sar
ja
ds
loopne
adc
add
mov
into
sub
test
add
lahf
mov
xchg
dec
mov
dec
add
repnz
aad
sahf
add
fnstcw
psubb
aaa
add
xchg
imul
xchg
dec
fstl
push
jne
add
repnz
addb
in
cmp
jl
jg
push
xchg
arpl
sbb
andps
orb
cmp
push
cmp
pop
or
dec
adc
gs
jge
das
loop
loop
ja
mov
adcb
push
push
outsl
inc
into
lods
fdivs
pop
and
add
dec
rcrb
mov
jae
add
push
arpl
in
inc
add
and
mov
daa
xor
outsb
sbb
push
sbb
dec
cwtl
add
lock
inc
in
add
ds
andb
call
xor
add
add
mov
add
outsb
push
push
add
popf
aaa
add
and
nop
mov
cld
rol
inc
add
popf
jl
pop
mov
addl
data16
mov
cmp
cmp
cmp
xchg
mov
adc
jmp
add
pop
pop
ret
repnz
int
aas
xchg
imul
sub
aaa
stos
adc
sub
fwait
xorb
inc
add
or
bswap
ja
push
andb
cmp
nop
sbb
add
out
cmpl
add
movsl
scas
lret
rolb
jnp
test
outsl
addr16
negb
dec
fcompl
sbbb
mov
das
add
xchg
jmp
add
inc
or
iret
movsl
nopl
fs
gs
dec
push
ret
subl
inc
sbb
icebp
inc
pop
and
ljmp
sub
push
add
mov
nop
scas
in
sarb
mov
fwait
jo
and
jp
push
leave
ja
jmp
add
lods
lahf
movsb
repnz
mov
mov
push
ret
sub
and
scas
pop
pusha
push
push
add
popa
mov
mov
in
adc
int3
sub
enter
jge
push
subl
negl
gs
fst
int
aas
mov
pop
sbb
fs
sbb
mov
dec
pusha
add
mov
je
jbe
jl
dec
cmc
adc
pop
xor
cmp
dec
mov
xchg
add
andl
push
xor
lret
sbb
lret
sub
or
in
fldcw
test
add
movsb
pusha
add
imul
add
add
mov
jl
incl
idivl
pop
mov
mov
imul
movl
out
jl
jne
inc
dec
loopne
dec
cld
xor
jmp
add
inc
inc
imul
mov
sub
xor
jnp
add
cmpsl
add
inc
pop
addr16
push
push
sbb
lahf
shlb
mov
out
out
lods
add
xchg
cld
jns
push
imul
cmp
add
cmpb
mov
mov
inc
add
fisttpl
jge
pusha
cmpsb
pop
sub
sbb
ja
loope
icebp
mov
adc
sti
jno
add
or
add
push
std
sbb
inc
sub
jno
fiaddl
repz
jmp
mov
clc
or
call
mov
mov
jbe,pn
add
int
insl
iret
inc
add
rclb
and
arpl
jg
fcmovbe
push
mov
insb
jp
leave
dec
into
cmp
out
add
push
rorl
push
ret
ficoms
add
imul
jmp
add
repz
into
js
pop
mov
pusha
add
push
and
cmp
ja
xchg
sub
inc
fstl
jg
int
jecxz
mov
add
rol
cltd
cmpsb
lahf
je
pusha
xchg
mov
add
aas
call
aad
shl
cmp
cmovo
mov
jecxz
add
push
rcrl
inc
add
lret
shlb
loopne
inc
dec
and
mov
clc
mov
cmp
sbb
push
cmp
mov
inc
inc
hlt
cmp
cld
xchg
dec
addl
inc
sbb
pusha
inc
int
mov
sub
aad
cltd
dec
and
daa
out
jns
test
je
mov
lds
push
lock
enter
ror
arpl
sahf
ja
inc
dec
ljmp
xchg
add
jnp
fsubs
lock
sahf
jo
cli
inc
push
or
adc
loopne
pop
add
xchg
lret
add
inc
es
in
add
out
adc
xchg
shr
int3
ljmp
or
inc
push
mov
push
loope
out
dec
push
sub
mov
ja
add
inc
mov
ret
sarb
leave
xchg
xor
inc
mov
add
out
jle
lock
mov
add
ret
clc
mov
flds
add
adc
mov
popa
lret
add
push
mov
mov
add
cmc
ljmp
push
or
aas
imul
jno
ds
xorb
fchs
inc
js
mov
push
rcrl
xchg
data16
push
push
add
and
inc
pop
mov
enter
pop
add
add
shrl
mov
loop
and
jle
clc
jae
test
insb
jbe
repnz
add
imul
xor
out
fiadds
xchg
movsb
mov
pop
sbb
loope
insb
addl
sbb
shll
or
inc
xlat
push
addr16
iret
add
sbb
add
outsl
mov
add
jns
mov
or
lahf
inc
sbb
enter
add
add
hlt
lock
push
stos
fstl
mov
adc
mov
add
cltd
push
dec
add
or
jp
mov
adc
xor
out
cmp
xor
fimull
fwait
lret
add
sub
ret
sub
cld
dec
clc
mov
xor
adc
mov
insl
pusha
mov
rolb
scas
xor
jns
cmp
lock
mov
and
jbe
add
inc
gs
xor
fistpl
xchg
scas
inc
cli
pop
xchg
outsb
fbld
aaa
shl
sub
out
pop
inc
test
addb
cmp
jg
mov
pop
shr
gs
add
dec
shll
loop
add
mov
mov
mov
repnz
test
mov
aas
cli
sbb
or
add
test
movsb
sub
mov
add
pop
out
rcr
sahf
bound
or
mov
into
add
add
jp
shlb
iret
test
pop
inc
loopne
or
sbb
adc
clc
jge
add
mov
sbb
bound
add
mov
mov
push
addr16
loop
xor
mov
add
test
stc
add
int3
inc
mov
clc
add
inc
adc
aas
add
shll
bound
shlb
xchg
add
push
and
adc
icebp
xchg
sahf
lret
addb
inc
iret
cmp
mov
and
sbb
out
out
jne
push
cmp
popa
test
xorl
add
or
pop
mov
cmpsb
repnz
add
xor
outsl
into
cmp
add
jecxz
stc
popa
sarl
sahf
push
add
or
jmp
dec
outsb
mov
push
filds
rorb
stos
ficomps
arpl
lret
add
xchg
nop
mov
sub
icebp
push
inc
pop
iret
push
shll
sbb
add
shr
or
in
and
inc
aad
std
pusha
push
sub
pop
lea
outsb
xchg
enter
rol
out
cmc
mov
push
fistl
add
push
xchg
add
out
mov
add
pushf
mov
leave
outsb
xor
mov
lcall
roll
mov
insl
mov
mov
dec
xor
loop
pop
rclb
roll
fldcw
stc
shl
fbstp
inc
fs
addb
add
and
les
add
in
pop
inc
mov
xlat
jbe
ds
xchg
add
cwtl
movsb
push
in
gs
mov
push
mov
add
movsl
xor
lahf
inc
add
pop
xchg
sbb
jo
hlt
xor
popa
mov
in
add
dec
shlb
or
inc
add
cmp
xchg
sarl
add
or
add
aam
arpl
add
xchg
bound
cmp
mov
test
push
in
inc
inc
loope
jecxz
andl
add
aam
dec
adc
push
mov
fs
mov
jo
sbb
cmp
xchg
in
add
daa
and
push
and
add
aad
pop
or
pop
stc
cmp
int
sbb
push
and
or
add
inc
popa
cmp
jo
sarb
cmpsl
arpl
mov
adc
in
movsb
xchg
add
jb
les
push
rcrb
mov
lahf
arpl
stos
xchg
add
out
shl
fs
pop
int3
or
adc
dec
addr16
call
xor
mov
jno
test
ds
sub
inc
lret
rolb
jmp
pushf
lods
and
out
cmpsl
add
mov
mov
scas
dec
adc
ja
add
mov
pusha
gs
or
jo
shll
and
sub
test
push
add
mov
push
arpl
or
fstps
sub
aam
inc
add
xchg
movsl
pop
inc
loopne
cli
scas
add
pop
popa
fidivrs
cmpsb
lds
in
and
mov
cld
outsb
pop
andb
sub
xlat
inc
fcoml
lahf
xchg
stos
add
inc
add
aaa
inc
ds
push
popa
pop
jnp
push
push
rorl
cwtl
ljmp
xor
dec
inc
add
inc
sbb
add
sbb
imul
inc
and
xchg
adc
mov
xor
rcrb
in
inc
add
das
sub
loopne
fnstcw
cltd
std
ffreep
dec
xchg
inc
push
mov
je
jmp
mov
xchg
mov
sub
orb
das
outsb
sahf
cli
js
jns
mov
and
in
dec
dec
push
jnp
xlat
rclb
cltd
mov
clc
fcmovne
xchg
jp
inc
jmp
or
sbb
add
ja
sar
insl
add
jecxz
inc
test
lock
add
inc
jnp
sbb
and
xchg
pop
addl
js
push
movsb
pusha
cmp
mov
jge
add
mov
mov
cli
pop
loopne
inc
sub
cmp
xor
push
jg
add
fcomps
cmp
pop
addb
add
inc
loope
imul
in
pop
add
add
ret
inc
std
jbe
mov
mov
es
fbld
inc
sbb
mov
test
cld
ret
into
sbb
xor
dec
push
jbe
xchg
or
adc
push
arpl
pop
lcall
rcrb
lods
mov
test
ffree
or
mov
loop
add
add
insb
pop
push
cmpsl
cwtl
inc
add
xorl
int
pop
or
xor
mov
push
pushf
push
jnp
mov
enter
cld
mov
ret
or
nop
rolb
mov
scas
push
inc
mov
pop
xor
aas
int
mov
xchg
jns
pop
jl
sbb
or
add
fcomp
pop
xchg
add
adc
pop
or
mov
xor
xchg
dec
dec
push
jle
fsts
add
sub
mov
pushf
mov
call
sbb
jmp
cli
faddl
fchs
inc
xor
inc
stc
mov
aam
movsb
xorb
hlt
sbb
jmp
add
ret
mov
imul
rolb
clc
inc
sbb
or
pop
dec
gs
lahf
cmp
rclb
out
inc
xchg
ds
push
mov
inc
add
sub
leave
sbb
enter
inc
jne
xor
fadd
shrl
stc
add
pop
xchg
or
add
inc
inc
sbb
adc
addr16
outsl
mov
add
insl
ret
push
lahf
jl
insb
cmp
add
jae
xlat
clc
jg
test
pop
mov
add
xchg
cmp
enter
xor
out
jnp
sbb
xor
sub
or
and
pop
add
clc
xchg
out
filds
mov
jns
sub
add
xor
insb
dec
out
add
mov
movl
icebp
rcrb
add
xchg
arpl
iret
xor
xor
mov
ljmp
inc
or
mov
jmp
mov
fwait
movsb
push
add
pop
push
inc
enter
mov
ja
rolb
mov
add
movsb
pop
ret
lea
xchg
loope
lcall
sub
adc
ds
cli
add
inc
cmp
adc
stos
leave
inc
mov
add
rolb
addr16
push
add
int3
fxam
add
inc
js
or
dec
mov
movb
lods
or
shrb
xor
lret
mov
aaa
jns
mov
mov
cmp
shrb
add
leave
sub
add
jbe
mov
pop
mov
push
add
insb
inc
cmp
loop
nop
mov
addr16
pop
lcall
xlat
sub
add
lret
call
aad
xor
fadds
mov
outsl
add
jno
adc
mov
inc
jno
dec
in
add
mov
pop
cmp
inc
outsl
arpl
test
push
cmovo
addr16
aaa
pop
dec
inc
inc
cmp
add
loopne
call
movsb
sub
dec
mov
sahf
add
adcb
add
arpl
outsb
push
inc
cli
add
jmp
test
sarb
and
cmpsb
imulb
orb
lods
sbbb
mov
aam
sahf
mov
rclb
jl
shrb
pop
sarb
xor
arpl
fstpl
add
repz
pop
inc
sub
push
clc
sbbb
mov
add
sub
sub
cltd
js
cs
fbstp
testb
jecxz
test
rolb
pop
mov
jl
add
cmp
mov
xchg
lods
add
jmp
orb
div
and
punpckldq
shrb
mov
ja
pop
fsubr
mov
inc
int
out
add
test
mov
repz
shlb
cmpsb
adc
pop
sub
lcall
xchg
dec
fnsave
pop
push
add
inc
pop
or
add
fs
sub
pop
add
mov
adc
cmc
lahf
inc
jnp
add
fldcw
add
gs
arpl
dec
jne
lds
pop
sbb
repz
dec
add
lds
jnp
sub
stos
addl
js
call
dec
fidivl
jo
shl
add
insl
loope
lret
and
es
repnz
add
pusha
jo
jmp
jae
mov
mov
and
fcoml
insl
in
call
fwait
lret
arpl
jmp
dec
dec
pop
das
leave
dec
adcl
add
mov
push
fisttpll
mov
icebp
rorb
fs
jle
dec
fildl
add
mov
dec
sbb
fdivs
add
inc
dec
inc
adc
outsb
call
hlt
xchg
dec
dec
gs
jne
sub
rorl
popa
nop
mov
mov
pushf
es
adc
push
or
imul
add
daa
loopne
ret
or
pop
inc
jmp
stc
xchg
mov
enter
cmp
arpl
push
mov
mov
nop
jae
cmc
scas
out
adc
xor
mov
enter
add
ret
xor
flds
stos
movsl
jne
inc
sahf
pop
pusha
push
mov
pop
paddq
ds
and
movsl
push
add
pusha
jne
xchg
clc
adc
sub
cmp
pop
test
mov
xor
mov
inc
mov
ror
movsb
arpl
jmp
loopne
aaa
fidivl
or
fstpt
push
testl
insb
xor
movb
in
xor
cmc
in
add
adc
fwait
add
adc
rcl
adc
jg
data16
add
pop
les
add
roll
push
ja
nop
call
out
inc
jge
xor
and
sbb
fwait
repnz
and
adc
hlt
cltd
add
cld
mov
add
aad
xor
fiaddl
loopne
sub
push
xchg
adc
pop
jle
cmp
inc
enter
jecxz
mov
add
mov
addl
sti
loopne
fwait
adc
pop
dec
mov
jecxz
lods
addl
call
sahf
or
inc
cs
add
cld
sub
adc
pop
outsl
add
pop
lahf
mov
add
and
add
sbb
dec
insb
sti
out
sub
mov
add
sub
inc
sbb
adc
rcrl
mov
dec
ret
sbb
push
andb
jge
idivb
sbb
and
inc
fildll
mov
in
add
stos
lock
add
push
push
add
inc
cmpsl
mov
jmp
fs
mov
fstl
mov
enter
add
insl
mov
flds
add
cmp
push
add
ljmp
push
out
fdivr
push
lods
andl
mov
inc
fsts
mov
pop
mov
adc
jle
and
inc
and
sub
addl
outsb
ds
xor
addr16
out
pop
mov
push
jns
arpl
lret
int3
or
and
add
xor
outsl
roll
cmp
pop
fucomip
mov
jl
cmp
enter
mov
push
loopne
cltd
mov
pusha
adc
jb
xchg
scas
pusha
inc
sbb
sub
mov
out
cs
fdivr
sbb
add
roll
popa
lea
add
xor
and
in
icebp
pop
mov
insl
std
push
nop
leave
jle
shl
and
jge
inc
outsb
mov
add
paddsb
add
in
xor
push
out
pop
das
adc
push
add
and
testl
sti
daa
icebp
xchg
nop
sub
push
add
adc
pop
and
rolb
jle
push
leave
mov
pop
mov
popa
sarb
add
addb
cmpsl
movl
shl
pop
cld
xchg
add
inc
pop
shlb
cwtl
ja
mov
test
stos
cmpsl
lea
mov
lahf
add
xchg
lret
test
adcl
inc
out
push
mov
ss
adc
add
jae
pop
icebp
or
sbb
or
loop
pop
sbb
icebp
ret
mov
lret
mov
inc
mov
repz
xchg
inc
das
cld
add
aam
add
enter
add
dec
add
ret
je
call
mov
add
push
dec
cwtl
xlat
adc
sbb
add
lcall
das
lea
ret
add
inc
jo
adc
movsl
add
js
in
add
xor
xchg
testb
dec
ret
mov
insl
inc
cmp
inc
adc
nop
add
cmpb
lahf
sub
cmp
outsb
or
mov
and
or
add
cltd
sbb
mov
loopne
cmpb
or
cwtl
cld
push
add
inc
mov
or
jae
inc
in
xchg
mov
inc
mov
sbb
out
cmp
add
test
dec
cmpsl
inc
inc
add
adc
pop
gs
lahf
add
cli
push
mov
js
inc
mov
mov
mov
add
inc
int
lods
into
add
inc
or
ljmp
jne
dec
jecxz
jb
dec
shrb
mov
add
loope
push
scas
jg
add
leave
clc
sbb
mov
xchg
shrb
mov
jg
pop
mov
push
fs
rorb
cmp
jmp
cmp
push
pop
movsb
jno
and
pop
es
dec
out
sbb
dec
inc
and
lods
jae
xchg
mov
dec
js
loopne
pop
cld
add
inc
adc
mov
stos
pop
and
scas
out
lods
cld
iret
ror
je
addb
lea
les
pop
add
mov
test
mov
dec
rclb
cs
pop
js
add
or
add
pop
cmovae
stc
inc
mov
jle
dec
push
fisubl
add
mov
mov
addl
inc
dec
outsb
cmp
popf
pop
xor
pop
arpl
mov
and
aam
add
and
cwtl
push
dec
add
outsl
jbe
adcl
jl
mov
je
mov
add
xor
pop
cmp
stc
add
pop
sub
mov
pop
inc
sbb
jmp
xchg
ss
inc
and
shlb
and
pop
pop
adc
jg
add
jae
cmp
and
add
jecxz
cltd
jns
arpl
or
or
fidivrl
test
stos
or
sub
or
test
imul
sbb
dec
ret
pop
cmpsl
je
jns
adc
add
pusha
movsb
mov
or
add
pop
hlt
subb
add
xrelease
into
mov
push
cli
adc
out
aas
xchg
add
add
cltd
pusha
ficoms
xchg
arpl
mov
mov
xor
mov
in
xchg
mov
incb
cli
xor
lods
insl
cwtl
mov
xor
and
sub
xlat
out
pop
push
nop
divb
fildll
pushf
add
sbb
mov
xor
lock
dec
push
leave
cwtl
jns
fs
xchg
jno
aaa
add
sbb
adc
add
pop
sbb
nop
leave
add
sub
addr16
xchg
jg
jo
cmc
inc
mov
fidivrs
sbbl
dec
inc
fld
inc
mov
imulb
dec
mov
arpl
sbb
ds
push
xchg
pusha
inc
add
jae
and
lock
sub
out
add
adc
insl
lods
sbb
repz
inc
push
int
inc
pop
rolb
push
adc
shll
test
xchg
rclb
mov
push
xchg
mov
ljmp
xchg
incl
inc
xchg
inc
jmp
popa
inc
repz
mov
incb
fiaddl
add
loopne
pop
pop
outsl
sub
lret
mov
bound
ljmp
lea
mov
add
outsb
jns
dec
ret
repz
addr16
pushf
pop
stos
pop
sahf
sar
rcrb
dec
add
lods
mov
xlat
cli
push
add
jg
add
mov
adc
in
lsl
pop
mov
mov
xor
arpl
addb
rcrb
inc
js
add
inc
sbb
cltd
dec
lock
jb,pt
inc
sahf
stos
stos
cmp
movb
mov
imul
sbb
dec
add
push
jnp
add
fiadds
pop
cmpsb
pushl
inc
push
scas
jbe
filds
clc
push
push
pop
xchg
nop
arpl
jo
add
cmp
xor
clc
pop
add
xchg
xchg
mov
inc
jg
pop
jbe
pop
lock
or
cmp
ds
stos
mov
pop
jne
call
add
sub
pop
jb
pop
xor
dec
popf
inc
xchg
test
add
bound
jmp
nop
add
cmpsl
adc
arpl
das
add
mov
enter
loopne
add
pop
lock
iret
sub
mov
dec
xchg
orl
in
xor
mov
in
pop
fsubl
inc
pop
add
clc
add
jno
call
rolb
xor
jge
cmc
mov
mov
add
int3
mov
aam
push
push
in
add
jecxz
fiaddl
cmp
sahf
repnz
jle
push
subb
sbb
mov
lds
jecxz
xor
icebp
mov
and
pop
test
pop
push
xor
test
push
mov
and
adcb
mov
or
pop
mov
test
push
aas
add
push
insb
inc
and
rolb
cmp
mov
scas
cmp
sub
sbbb
jns
xor
ds
add
or
std
inc
jno
scas
push
mov
shlb
loopne
sub
jns
cld
fisubrl
dec
inc
xor
mov
nop
inc
jge
or
imul
arpl
aas
push
popl
cmpsl
in
xchg
stos
repz
xor
xchg
xlat
inc
cmp
add
jae
shlb
js
out
sub
mov
sbb
inc
aas
je
sub
andl
imul
in
add
or
std
popf
push
cmp
mov
add
mov
out
add
arpl
nop
inc
push
mov
add
cli
add
sarb
in
lahf
jecxz
add
nop
jp
insb
inc
outsl
cli
add
mov
sbb
pop
xchg
add
insl
daa
stc
inc
in
loope
cmp
or
mov
inc
cld
add
add
sub
add
pop
add
testb
mov
arpl
mov
jle
push
xchg
xor
movsl
lods
adc
ss
dec
jno
in
add
inc
xor
cmovle
clc
popw
ret
popl
fildl
add
cld
mov
addl
mov
cmp
andb
jno
add
and
add
hlt
jns
add
push
f2xm1
arpl
jbe
andl
push
add
das
or
jg
pusha
repnz
leave
add
lods
add
rcrb
add
sub
push
inc
dec
cmp
mov
pop
testl
add
cmp
out
pop
mov
xchg
ds
sbbb
xor
fdivrs
orl
add
lahf
ljmp
addr16
add
inc
pop
inc
add
cmp
xchg
shr
cs
or
jns
add
mov
ret
dec
push
jg
sub
pop
ficompl
add
je
dec
insl
lahf
adc
sbb
xlat
loope
mov
add
nop
xor
inc
sub
and
addr16
dec
sahf
pop
inc
out
sbb
adc
out
popf
shl
testb
stos
add
pop
hlt
or
and
mov
mov
popa
lcall
inc
lret
cwtl
lock
outsb
je
cmc
rorb
pop
mov
cmpl
add
and
in
mov
inc
xorb
lock
inc
xorl
xchg
stc
imul
outsb
pop
loop
add
lahf
push
mov
mov
and
cmp
xchg
mov
cmp
aas
movb
inc
pop
mov
pop
iret
mov
mov
in
mov
fdiv
sbb
sub
mov
or
push
adc
pop
mov
add
ret
sbbb
xor
inc
dec
out
push
std
add
inc
jecxz
push
add
in
mov
mov
cmpb
lds
pushf
ljmp
jge
clc
jecxz
sub
nop
pop
jl
jne
pop
test
add
stos
or
inc
jp
loopne
and
mov
mulb
rolb
xor
pop
dec
add
inc
adc
popf
in
pop
and
xor
adc
rclb
add
inc
push
xchg
lods
push
xchg
jge
push
gs
lock
fs
add
inc
data16
call
addl
xor
add
in
pop
mov
les
shlb
sub
fdivr
insb
out
xchg
cmp
inc
xor
add
pop
mov
lea
popf
adc
mov
sub
iret
add
loop
pop
loopne
mov
or
fdivr
jmp
jmp
xor
dec
je
cmp
in
pushf
adc
loope
ficoml
mov
jnp
ja
mov
pusha
or
sub
out
adc
loop
fildl
shl
push
int3
add
jns
testb
pop
add
adc
mov
je
inc
jo
sti
or
inc
and
xor
add
xchg
add
or
add
and
repnz
cwtl
cmp
pop
pop
test
jmp
push
add
sbb
inc
cwtl
movsl
add
jle
mov
sahf
xor
mov
add
mov
inc
lahf
imul
sub
inc
dec
rcl
add
in
push
sbb
sbb
pop
or
push
mov
add
add
sub
int3
out
int3
ss
add
lds
out
push
out
mov
test
dec
add
ljmp
push
push
sub
and
add
stos
sub
sarl
pop
mov
add
mov
xchg
popf
xor
insb
add
pop
add
js
call
or
push
stos
andps
sbb
add
cmpb
data16
pusha
add
push
mov
loope
inc
fwait
pusha
mov
push
push
pusha
js
dec
aaa
jae
mov
add
lret
or
adc
movsl
mov
add
pop
inc
dec
mov
pop
loop
add
xor
jne
fdiv
fimull
add
rcrl
pop
add
sbb
or
inc
int
pop
jl
sbb
mov
enter
jns
xchg
add
sbb
pop
rolb
inc
sbb
outsl
test
insb
stos
mov
dec
fwait
jp
mulb
mov
cmp
push
add
adc
xchg
fiaddl
int
mov
insl
pop
cltd
add
loop
pop
mov
add
call
mov
dec
inc
push
pop
push
jmp
loopne
test
mov
addl
and
in
iret
shrb
leave
jg
add
mov
les
repnz
jbe
sbbb
mov
pop
ljmp
inc
and
mov
xor
mov
arpl
pop
movsb
les
or
fisttpll
lods
shl
cmp
add
xor
pop
cltd
shlb
add
fisubrs
andb
in
adcb
push
cmp
popf
clc
mov
into
push
testb
rolb
jle
add
mov
shr
and
add
lds
mov
clc
adc
lret
dec
stos
inc
loope
jp
push
mov
call
imul
data16
movd
lods
lock
or
test
rclb
push
cwtl
mov
out
rorb
add
inc
lcall
xchg
cmpsl
lahf
or
push
jbe
fisttpl
fwait
cltd
leave
shrb
cli
add
jo
mov
loopne
or
out
repnz
sbb
shll
es
sahf
push
add
add
add
fadd
outsb
iret
add
adc
daa
mov
xchg
jg
xor
loope
inc
ds
mov
daa
add
or
xchg
arpl
lock
js
pop
mov
cmp
push
xorb
jge
jp
les
popa
adc
movsb
jle
or
into
arpl
fists
jecxz
inc
mov
test
push
or
test
inc
fldl
push
mov
loope
xchg
ljmp
out
jecxz
add
inc
mov
bound
add
repz
add
into
clc
cmpl
pop
mov
in
add
push
call
lret
push
pusha
add
aas
mov
adc
xchg
add
in
xor
mov
inc
dec
cmp
mov
push
pop
iret
sbb
add
jns
in
add
mov
ret
push
shlb
adcl
jns
jge
daa
add
xor
sub
loope
fwait
add
mov
dec
jae
xchg
addr16
pop
dec
add
shrl
inc
add
ret
shlw
pop
fwait
arpl
cmp
mov
and
sub
adc
repz
faddl
movups
rcll
pop
outsl
jle
add
xchg
into
mov
aad
add
mov
dec
xchg
add
loopne
jns
aad
add
or
xchg
inc
and
xlat
jne
push
jb
popa
pop
add
add
rcrl
push
inc
cld
jae
add
outsb
mov
fldt
mov
gs
push
dec
cmp
mov
pop
ja
lret
add
jo
movsl
push
test
dec
lds
hlt
data16
in
push
repnz
dec
notl
icebp
movsb
in
loopne
repz
mov
fisttpl
outsb
repnz
adc
pop
ret
cmp
cmp
cltd
pop
inc
dec
mov
push
cmp
call
data16
rcrl
fxch
pop
arpl
push
filds
pop
or
xchg
cmc
leave
loopne
mov
shlb
flds
mov
pop
in
add
dec
loop
jp
and
add
sti
push
fsubrs
xor
mov
inc
mov
mov
add
lods
je
ljmp
cmp
dec
add
and
ret
and
jno
mov
cli
xchg
gs
add
xlat
das
fldl
jno
cld
and
js
add
adc
mov
pop
add
jl
mov
mov
aaa
sbbb
sbb
or
mov
lods
cltd
xor
adc
add
jle
ret
sbbl
and
rolb
mov
jnp
cmp
cltd
add
dec
cwtl
bound
es
add
xor
jp
cmp
pushf
je
push
std
loop
adc
icebp
ret
mov
sbb
and
cmp
lret
add
cmp
cli
and
and
lods
add
stc
arpl
fwait
or
jbe
stos
cmpsl
sbbl
inc
dec
dec
movsb
and
nop
inc
iret
fdivrp
add
jmp
js
jle
mov
aas
fisubrl
pusha
movsb
add
ret
mov
push
pop
out
mov
jno
push
adc
inc
push
xchg
and
jno
sub
lods
jne
xchg
hlt
bound
add
andl
inc
in
pop
cmc
ja
jecxz
push
loopne
and
inc
or
testb
pushl
lcall
fsub
rcl
push
inc
add
insl
add
enter
and
arpl
aas
lds
jl
sarb
mov
dec
adc
cmp
jns
cmp
jae
shlb
inc
outsl
mov
lret
push
frndint
int
add
pop
movsb
stos
divb
pop
push
sbb
sbb
shl
mov
cmp
xchg
arpl
cmpsl
pop
xor
cmp
mov
sub
lahf
push
mov
loopne
shr
bound
or
xor
das
dec
inc
xchg
add
jbe
iret
cmpsl
pop
je
add
fadds
dec
test
xor
inc
jne
mov
jae
add
xchg
inc
jg
dec
jae
enter
negb
scas
pop
stos
addl
cwtl
jns
es
mov
mov
or
xor
mov
fucom
add
loop,pn
cmp
xchg
xchg
out
pop
push
push
dec
pop
add
cmp
test
mov
push
push
add
inc
fnstenv
xchg
pop
enter
cwtl
xor
orl
add
mov
cmp
push
jbe
add
add
inc
jns
ret
jle
loopne
pop
mov
pop
mov
fwait
mov
mov
xchg
sub
test
add
cmp
mov
push
inc
fistpll
add
sarl
mov
add
stc
mov
push
mov
mov
add
mov
lds
dec
add
adc
aad
dec
cmpsl
adc
add
fldenv
out
imul
outsb
cld
push
sbb
sti
mov
and
inc
adc
and
mov
xchg
mov
jp
add
ljmp
enter
xor
fldenv
pop
mov
add
bound
jge
cmp
in
push
fxch
jns
add
cmc
sbb
add
and
fadds
xlat
inc
mov
pusha
lock
adc
in
ret
add
dec
adc
and
cmp
dec
in
mov
lods
inc
mov
dec
sbb
xchg
aas
insl
mov
dec
outsl
pop
or
sub
scas
lahf
arpl
pop
sub
pop
and
jmp
mov
or
rcll
push
addl
pop
lahf
pop
orl
outsb
cmp
sbb
nop
add
inc
andb
jmp
out
sbb
movsl
xchg
sub
fsubrs
sarl
add
cmp
enter
add
inc
mov
mov
movsl
sbb
add
adc
inc
push
popf
cmp
mov
mov
in
add
dec
push
sbb
pop
and
ret
popf
dec
test
std
mov
xchg
arpl
xchg
mov
or
jmp
push
cli
es
push
jne
arpl
add
sub
or
test
aaa
adc
add
data16
mov
or
lahf
inc
jmp
test
adc
jne
or
fdivrl
outsl
sarb
aaa
pop
inc
mov
add
pop
add
cld
mov
mov
jbe
add
lock
lret
or
sbb
add
int3
push
mov
xor
lds
ficompl
xor
mov
sub
js
jle
cmpsb
jg
fwait
mov
mov
data16
out
mov
mov
test
mov
in
mov
add
cwtl
mov
add
inc
and
jmp
xchg
pop
ljmp
fmull
loop
dec
ficomps
add
aad
sti
add
inc
adc
xlat
mov
dec
dec
inc
push
add
xchg
ret
pop
call
pop
jmp
loop
add
adc
sub
push
and
sub
xor
jge
dec
add
xchg
xorb
jecxz
lret
inc
data16
fiadds
mov
or
add
mov
or
jne
push
mov
add
xlat
pop
mov
jecxz
test
lahf
enter
jle
mov
push
xor
je,pt
add
cwtl
insl
xchg
test
cmp
ret
out
movsb
inc
out
inc
inc
jg
loop
jo
add
aas
xchg
inc
mov
int
xchg
add
sub
mov
flds
mull
push
cli
push
mov
std
xor
inc
add
mov
add
pushf
adc
pop
mov
mov
xchg
cmp
in
mov
xor
orb
add
jne
repnz
push
and
ja
loope
add
rorb
or
and
push
push
subb
out
pop
xchg
inc
sahf
lds
jbe
popf
xor
and
mov
addr16
cld
jmp
jl
mov
xor
sub
aas
repnz
rorl
fwait
adc
pop
dec
mov
bound
scas
add
jl
dec
and
add
push
andb
xchg
add
jg
leave
lcall
or
mov
jl
jb
or
int3
and
outsb
outsl
sbb
inc
mov
and
ljmp
scas
scas
inc
add
add
rorb
test
xor
jle
test
cmp
dec
dec
add
inc
xor
add
das
in
nop
insl
daa
loopne
or
cmp
dec
nop
sub
xchg
jnp
mov
add
scas
idivl
jle
xchg
pop
push
arpl
ja
and
sarl
xchg
mov
add
out
rclb
add
pusha
inc
scas
add
push
sbb
mov
out
aaa
add
popf
shr
addr16
sub
add
shrb
mov
cmp
adc
sub
imul
add
gs
cmp
add
sub
mov
mov
pop
dec
push
jnp
pop
xor
adc
sub
out
jo
pop
fstpt
faddl
cmp
pop
lret
xor
add
cmpsl
xchg
pop
push
xchg
jecxz
and
inc
mov
shl
add
lcall
add
incb
xor
jns
nop
out
les
fisubrs
int
out
adc
cmp
and
add
inc
add
pop
inc
adc
repz
push
jmp
xor
adc
test
add
dec
jge
add
test
or
ret
dec
adc
mov
add
dec
ja
add
mov
or
add
nop
sub
fadd
mov
insb
retw
mov
shlb
lahf
es
pop
shll
outsb
push
in
ret
loopne
jns
push
inc
add
jp
js
adc
inc
add
ret
mov
jp
add
shll
or
or
inc
into
lods
add
mov
xor
adc
add
push
adc
clc
arpl
pop
sbb
pusha
leave
ret
pop
jecxz
cmp
pushf
xchg
jbe
mov
cmp
lods
and
or
cmc
sub
inc
sbb
jp
fcmovb
adc
push
nop
xchg
js
add
add
jns
adc
bnd
dec
push
mov
and
aad
cli
loopne
bound
ja
mov
imul
sbb
inc
dec
inc
push
jno
es
pop
add
call
mov
addl
add
mov
pop
inc
scas
cli
add
aaa
inc
jg
add
stc
shll
pop
push
cmp
pop
inc
fwait
sbb
ret
mov
add
push
aad
repnz
jg
ljmp
and
cmp
adc
aam
or
push
add
stc
sbb
dec
ret
pop
add
inc
stos
and
int
add
xchg
mov
mov
add
mov
add
pop
in
inc
aas
inc
fmul
cmp
dec
fwait
mov
enter
jns
fld
loopne,pn
test
rcrl
fidivrs
add
adc
push
and
mov
jmp
insl
inc
fadds
js
jl
sbb
lock
xchg
daa
inc
in
xchg
push
data16
mov
outsb
add
push
pop
fidivl
xchg
orb
add
gs
add
cld
cmp
repnz
and
loopne
call
pop
push
add
mov
pop
and
sub
dec
mov
sbb
repz
js
push
ret
ss
jbe
jl
pop
inc
sbbb
sti
cmp
inc
lea
add
cmp
mov
or
or
push
add
xor
and
mov
sub
mov
mov
cmpsb
mov
add
xchg
mov
sub
add
and
mov
add
nop
repnz
clc
roll
aas
xchg
add
xchg
inc
add
adc
dec
outsb
std
add
mov
push
cmp
inc
push
jb
fiadds
iret
data16
push
sub
clc
pop
xchg
xorps
jge
fnstsw
ret
out
int
call
mov
xorb
repnz
cmp
rorl
pop
sbb
jne
sbb
xlat
fiadds
pop
in
push
clc
sbb
gs
insl
nop
xor
add
xchg
add
inc
mov
rolb
lret
sub
repz
add
inc
sbb
or
add
and
out
ja
ret
nop
adc
rolb
or
test
ret
scas
mov
pop
adc
jno
add
adc
js
and
add
push
mov
add
xor
xchg
mov
lock
loope
into
xchg
test
out
jecxz
mov
sbb
dec
push
sbb
mov
pop
sbbb
cmp
insb
mov
or
ljmp
clc
adc
add
xchg
fsubs
mov
arpl
jbe
inc
push
xor
orl
sbb
sub
lea
lock
adc
inc
outsb
call
add
jl
adc
pop
inc
mov
in
inc
add
andl
mov
cmp
cmpsl
pop
dec
dec
mul
enter
xor
data16
scas
femms
loop
pop
and
or
cltd
inc
movsl
jo
add
inc
lea
inc
fcmovnb
add
int3
ret
xor
push
arpl
add
adcl
inc
jmp
les
adcl
pop
lods
cwtl
hlt
stos
or
addl
sahf
aad
in
push
pushf
jmp
add
xchg
push
adc
xor
bound
add
test
shlb
aam
cmp
cltd
andb
xor
cmp
xchg
and
mov
sarb
mov
stos
add
int3
js
in
f2xm1
int
inc
jne
sbb
jmp
mov
sbb
jb
test
cmpsl
add
sub
jns
in
push
add
cmp
or
mov
cmp
out
ss
add
jecxz
ret
rolb
lds
mov
cltd
stos
les
adc
shlb
pop
mov
cmp
sbbb
int3
hlt
and
pop
in
iretw
inc
push
cwtl
scas
cmp
xchg
cmp
xchg
cmp
fcomps
movsb
push
sti
jnp
add
rclb
mov
mov
arpl
sbb
les
fnstenv
cmp
daa
imul
into
es
sub
mov
aam
push
ss
or
cmp
mov
in
lret
aas
add
inc
roll
cmp
xchg
lea
pop
out
repnz
jne
jl
mov
test
jmp
xchg
mov
add
and
jnp
xchg
bound
inc
fmull
lds
cmp
int3
lods
push
dec
push
scas
pop
push
mov
adc
sbb
inc
arpl
popf
xchg
mov
xor
mov
sbb
rorb
loopne
xchg
jne
add
and
sahf
mov
or
movsb
jb
push
add
jle
mov
or
lahf
push
stos
fbld
mov
inc
into
add
pushf
movsb
movsl
jae
inc
add
inc
decl
scas
dec
adc
aas
loopne
cmp
mov
add
insl
lds
dec
subb
cld
inc
add
test
outsb
mov
cmp
sub
shl
xchg
aam
stos
test
inc
roll
add
mov
into
loopne
push
shlb
rolb
andb
push
add
dec
test
xchg
sbb
add
inc
inc
add
pop
aaa
add
dec
cld
mov
hlt
adc
in
pop
testb
lods
lret
ds
mov
xchg
add
cmpsl
bound
arpl
sub
push
movb
pop
add
mov
and
out
pop
pusha
rcr
xor
cmpl
andb
jl
out
cmp
in
out
sub
and
add
sbb
mulb
cwtl
ret
xor
xor
add
fs
pushf
out
add
rcll
clc
add
pop
and
mov
insl
ret
adc
and
add
and
rolb
add
xor
jle
mov
cmp
cmpsb
bound
add
mov
add
lds
hlt
jecxz
mov
push
add
out
xchg
pop
cmp
add
dec
insb
imul
push
daa
add
pop
and
inc
add
push
jg
inc
sbb
add
mov
jo
mov
ret
add
xchg
mov
jns
imul
jb
subb
stc
sar
add
test
lock
mov
inc
jbe
pop
xchg
rcll
cmp
inc
cmp
js
xor
into
add
roll
icebp
pop
mov
add
jmp
inc
je
mov
mov
adc
adc
pop
js
es
bound
aam
call
shlb
dec
out
shrb
sbbb
test
add
xor
add
andb
notb
push
fsubrl
xchg
push
out
out
inc
mov
jo
jecxz
or
arpl
push
bound
jle
add
shr
es
inc
inc
jl
and
inc
jnp
lea
add
ljmp
jb
outsl
loop
sub
add
addr16
shlb
add
add
movsb
add
loopne
lea
imul
add
inc
inc
add
or
dec
or
xchg
cmp
add
rcll
inc
and
sbb
add
jmp
rorb
add
arpl
in
addl
mov
sbb
lret
int3
packuswb
jecxz
clc
cmp
push
stc
add
int3
adc
jb
shrb
dec
stos
mov
lret
les
add
push
mov
add
xor
mov
jp
adc
jae
cli
lods
add
and
mov
adc
out
jae
sbb
jl
shrb
out
movsl
lahf
add
in
fiadds
dec
sahf
loop
push
rcll
stos
jnp
inc
ret
pop
mov
xchg
mov
or
aad
es
xchg
aam
jbe
mov
iret
movsb
inc
insb
mov
sub
aas
sub
adc
mov
inc
popf
pop
jmp
dec
pop
pop
xor
sahf
sbb
inc
test
ljmp
add
inc
aas
dec
jmp
outsl
jbe
loopne
in
lods
cltd
add
in
rclb
inc
xchg
ret
mov
sbb
mov
pminub
ds
inc
lods
idivl
add
inc
insb
cltd
push
pusha
mov
aas
hlt
ffree
sbb
push
nop
mov
scas
add
fsubs
push
mov
pop
adc
test
push
sbb
shrb
incl
rcrb
mov
adc
ret
adc
mov
add
stc
daa
les
jnp
dec
add
cmpsb
popf
hlt
dec
arpl
adc
sbb
into
ljmp
mov
arpl
jb
dec
xor
rcl
fs
jle
popl
in
stc
mov
add
mov
loopne
mov
dec
test
add
arpl
call
xorb
mov
sub
or
aaa
add
popf
loope
jns
imull
add
sub
movsb
mov
push
dec
xchg
sbb
cld
push
add
arpl
xchg
sub
inc
dec
mov
loope
imul
test
aaa
rcrb
fiaddl
jecxz
mov
inc
decb
clc
data16
and
mov
xchg
nop
mov
fildl
adc
imul
mov
mov
cld
data16
push
leave
add
incb
popf
and
std
mov
inc
cltd
jnp
lret
add
ret
mov
pop
pushf
mov
popf
fs
push
insl
inc
cli
add
push
aad
add
rorb
lret
insb
jno
jmp
mov
xor
jno
mov
xchg
add
inc
das
sub
pop
cmp
add
lock
inc
dec
jne
loop
add
adc
sbb
xlat
add
jecxz
les
bnd
adc
mov
int3
and
rdtsc
fsubl
mov
pop
xchg
xchg
mov
add
mov
loope
add
inc
push
pop
and
add
pop
xchg
pop
pop
mov
xorb
loopne
dec
dec
xchg
inc
mov
mov
add
add
pop
in
les
add
or
cld
shrb
lret
in
xor
cs
data16
bnd
ret
into
sbb
mov
daa
mov
popa
out
push
add
pop
pop
lret
xorps
jle
rcrb
add
int3
sub
ja
stc
rcrl
jl
test
xchg
roll
sti
sbb
dec
pop
push
mov
jae
pop
add
pop
sub
and
add
xchg
notb
mov
add
sarl
sbb
mov
push
cmp
stos
jg
jl
fsub
sbb
cld
or
popa
lret
add
mov
test
fs
cmpsl
or
add
sub
arpl
in
stos
mov
ret
int3
add
and
addl
enter
movsl
push
dec
cmc
add
andb
stos
and
push
loopne
movsb
push
jg
in
bound
push
out
or
sbb
push
mov
lahf
shll
roll
sub
dec
jnp
ljmp
and
fimull
addr16
cmp
pop
arpl
ds
mov
lahf
dec
movsb
vmread
cltd
xor
jne
add
aaa
ds
add
sbb
loop
push
fldl
dec
sub
xor
sbbl
ret
shll
jbe
and
cld
push
pusha
ret
jp
push
pop
cmp
add
loop
adc
mov
pop
sub
out
and
hlt
dec
cmp
loop
xor
popa
dec
adc
outsb
or
fmuls
lock
adc
mov
pop
inc
jae
sbb
add
mov
arpl
cltd
aaa
les
in
adc
adc
mov
std
sbb
loop
mov
sbb
or
push
jae
mov
dec
pop
shlb
hlt
push
icebp
unpckhps
loopne
pop
arpl
inc
pop
pop
or
sub
mov
inc
lods
sub
in
iret
pcmpgtd
mov
sbb
mov
sbb
inc
fdivs
sahf
int
movsl
ds
lea
add
leave
addl
xchg
cmp
stc
xor
add
mov
add
cmp
sbb
push
insl
cmp
inc
jecxz
pop
lahf
hlt
push
xorl
mov
daa
xor
dec
push
icebp
enter
add
test
push
inc
xor
lea
sti
pop
sbb
add
inc
dec
mov
movb
jo
aam
lods
add
shlb
test
ror
add
sbb
inc
repnz
aam
push
mov
add
loopne
addb
ja
stos
cmp
or
fists
loop
ret
and
pop
sbb
inc
jo
push
mov
in
test
mov
sahf
xchg
rol
pop
push
pop
fsubs
jp
sub
bound
mov
call
subl
out
iret
add
fcompl
inc
je
test
lea
insl
int3
outsb
and
arpl
sbb
popa
mov
addb
inc
mov
addb
sbb
mov
mov
jne
stc
xor
ret
xchg
jnp
rcrb
mov
mov
mov
jns
shr
int3
in
xor
xor
test
mov
pop
add
cmp
add
xor
or
inc
add
or
nop
subb
mov
push
adc
inc
xchg
pusha
leave
sub
add
scas
jns
cltd
rcl
cmp
test
add
sub
mov
call
jb
sbb
insl
jecxz
popf
insb
mov
movsl
add
and
or
mov
add
fidivrl
add
adcl
sbb
sarb
jge
push
add
pushf
test
fiaddl
mov
int3
push
and
pop
inc
add
and
jbe
ret
lcall
add
dec
sbb
ja
fmuls
popa
xor
push
adcb
push
add
jle
and
andl
sbb
faddp
sbb
adcb
cmpsl
mov
add
cwtl
mov
adc
inc
call
sub
lock
scas
pop
insl
mov
sti
testb
xchg
mov
clc
inc
loopne
and
jo
rolb
lock
aaa
inc
xor
mov
pusha
cmp
ret
add
xlat
jle
jo
dec
cld
cld
push
mov
push
out
push
push
sub
sbb
sahf
cmpb
pop
mov
cld
call
fldenv
shl
arpl
in
xchg
imul
push
in
out
inc
lods
add
mov
dec
inc
pop
rolb
incb
or
cmp
sub
inc
add
lret
and
hlt
enter
add
dec
cli
fsts
jo
ret
pop
mov
sahf
add
sub
icebp
add
pop
movsb
ret
cmc
xchg
ds
xor
or
jge
pop
test
jl
lret
mov
aas
cmp
add
call
fs
rcrb
inc
add
cmc
pop
xorb
lcall
outsl
in
adc
verw
in
inc
inc
cmp
and
cmp
jg
add
push
push
xor
pop
ret
cwtl
add
std
movsb
dec
xorb
add
mulb
cltd
pop
loope
shrl
out
add
insl
lcall
rclb
into
rolb
and
dec
push
jecxz
sub
int3
jg
cwtl
lock
jnp
push
mov
mov
cmp
and
arpl
add
dec
pop
call
mov
inc
repnz
in
sbb
cmpsb
cmpb
pop
inc
mov
cmp
sbb
ja
inc
arpl
pusha
add
jmp
dec
add
mov
add
in
mov
es
mov
push
jecxz
add
pop
sbb
pop
rcll
sbb
or
subb
xor
add
xchg
pop
push
pop
mov
jle
push
ds
xchg
dec
pusha
stos
fwait
shr
lds
rorl
and
sbb
rclb
in
xchg
add
push
int3
add
xor
jno
sarb
cmp
sbbl
mov
ja
mov
push
pusha
lret
dec
sub
insb
dec
add
pop
jno
mov
mov
pop
jle
cwtl
into
xchg
add
lds
out
inc
push
inc
adc
add
xchg
jmp
rcr
int
xor
ljmp
ret
das
clc
clc
pop
into
add
jge
mov
sbb
xor
js
add
sub
inc
insb
in
add
mov
mov
fbld
push
pop
sbb
adc
pop
insb
cmp
pop
pop
inc
mov
jge
rcrb
inc
add
or
scas
pop
xchg
dec
add
sti
jo
and
popa
mov
xor
out
add
pushf
dec
xorl
xor
bound
call
add
sub
sub
push
add
movsb
les
add
jmp
das
pop
pop
xchg
ror
push
sbb
add
cmp
push
pop
dec
fdivrl
mov
shrb
pmulhw
aaa
mov
insl
fmuls
out
cli
les
cltd
add
inc
cs
add
mov
stos
ret
inc
push
jp
add
add
clc
cmp
mov
nop
pop
lcall
add
repnz
dec
inc
add
sub
add
das
inc
fucomp
cs
add
mov
into
jns
push
jbe
dec
add
lds
mov
scas
roll
cmp
outsl
mov
in
add
loopne
pop
int
mov
adc
ljmp
pop
leave
inc
mov
fcmovb
mov
mov
pusha
mov
lea
sbb
inc
sbb
jne
lret
and
out
pop
or
leave
ret
cmp
add
pop
add
cltd
add
pop
sbb
mov
mov
dec
pop
jno
pop
mov
sbbb
pop
shlb
add
inc
daa
stos
js
add
out
inc
jne
insl
push
add
cltd
pop
enter
push
pop
sub
imulb
repz
add
mov
hlt
inc
lea
push
icebp
cmp
jge
or
jp
inc
xor
call
and
pop
mov
outsl
orl
sub
cld
cld
pop
arpl
xchg
jo
ret
mov
mov
dec
adc
sar
adcl
add
sbbl
push
add
xchg
jge
cmovne
imul
and
add
arpl
cmpb
enter
jo
xor
jg
push
mov
add
sub
add
sbb
jne
cld
add
mov
cltd
sub
shrb
pusha
test
rorb
mov
add
sbb
popf
imul
out
inc
add
out
lods
lea
xchg
push
les
fwait
loop
xchg
add
pop
lret
loopne
xor
dec
ret
lods
mov
in
add
sbb
xor
fbld
daa
xchg
mov
arpl
cmp
xor
sub
or
jge
add
pop
xchg
stos
arpl
add
bound
jg
pop
inc
scas
dec
sti
addb
xchg
add
sub
cmpsb
sub
cmp
and
xchg
jbe
add
inc
nop
fstps
mov
pop
mov
push
in
xor
repz
aad
add
mov
xchg
push
je
or
insl
jge
mov
add
jg
sub
push
add
xor
jo
sub
shll
add
dec
push
add
push
scas
lods
lcall
sbb
cld
pop
sbb
pop
dec
and
add
call
add
lods
or
popa
mov
xchg
xchg
cmp
cs
inc
iret
btr
lcall
add
pop
loope
sbb
mov
xchg
das
mov
ja
iret
dec
aam
push
addb
sub
fwait
mov
fstpl
add
dec
inc
cltd
dec
subl
add
jle
sti
lret
add
push
data16
xor
add
inc
aaa
call
add
mov
jb
add
hlt
in
push
xor
push
pop
stos
mov
pushf
ljmp
fbstp
fwait
ror
inc
xchg
pop
rolb
mov
push
sbb
repnz
stos
enter
testl
mov
push
add
and
fists
add
js
push
add
cli
addr16
add
jp
pop
scas
aaa
std
sub
out
mov
cmc
mov
in
inc
pop
dec
sub
add
loope
stc
in
insl
push
aas
outsb
popa
add
loopne
ret
add
sbb
add
jnp
mov
xor
mov
adcl
fwait
loopne
imul
shlb
movsb
mov
enter
hlt
rorl
daa
push
add
and
imul
add
xor
add
inc
sbb
push
adc
add
xor
and
repnz
mov
leave
arpl
or
and
ss
inc
mov
push
movl
xor
dec
jno
pop
mov
add
bound
fmuls
loopne
iret
mov
mov
shlb
push
dec
mov
inc
inc
cmp
dec
call
jg
jmp
pushf
andl
stos
push
xchg
cmp
add
rcr
mov
lahf
int3
add
ret
add
inc
inc
imul
dec
add
sbb
cmp
or
xor
push
push
add
test
pop
mov
sub
add
dec
ss
hlt
test
sar
rcrb
test
adc
pusha
mov
dec
cmp
push
jae
int3
in
sub
mov
jp
lods
rcll
lock
jg
movsb
push
and
dec
add
xor
inc
rolb
leave
es
inc
add
mov
out
cmpsb
sbb
enter
pop
add
xchg
ret
inc
mov
and
int3
movsb
add
add
push
inc
sub
xchg
push
mov
rol
mov
add
cmpsl
push
inc
mov
dec
sbb
nop
movsb
sbb
add
inc
pop
adc
lret
ret
sbb
and
mov
and
fcoml
add
sub
xchg
fdivrs
icebp
outsl
sarb
rclb
push
adc
push
lldt
sbbb
test
add
jmp
push
mov
adc
xchg
mov
pop
push
add
push
out
test
add
pop
ret
mov
shr
xadd
adc
inc
pop
or
or
subb
outsl
xchg
or
cmp
fstpl
cltd
push
mov
in
xor
test
rcr
xchg
cmp
aam
inc
pusha
in
push
mov
or
sub
cs
sti
inc
add
pop
inc
gs
push
les
mov
pop
jmp
rcrb
sub
sbb
jae
push
in
mov
inc
and
ds
bswap
iret
mov
sbb
jbe
add
mov
add
inc
mov
xor
pop
sub
in
xlat
and
enter
add
aas
fwait
push
xor
fidivrs
inc
and
mov
cmp
xor
sti
add
andl
add
inc
test
pop
test
xchg
ja
mov
push
xor
adc
mov
add
bound
dec
call
push
shlb
popa
outsl
cmp
ret
andl
inc
repnz
cmpl
test
sub
lds
rolb
xchg
jb
mov
add
stos
pop
arpl
jge
sbb
hlt
or
js
mov
sub
pop
pop
sbb
or
add
shlb
mov
inc
mov
inc
lahf
nop
pop
ficoms
pop
filds
pusha
in
jb
pop
sub
add
sahf
xchg
ret
ss
or
xor
icebp
add
mov
clc
cmp
sti
xchg
rol
in
cmp
pusha
xchg
fs
mov
pusha
cmpsb
andl
sub
adc
jne
inc
mov
leave
pop
and
sub
add
popf
mov
scas
sbb
enter
or
and
add
xor
sbb
subb
repnz
outsb
cmp
dec
pop
insl
add
dec
arpl
add
lock
aas
add
sub
xchg
pop
jl
scas
lds
pop
mov
scas
xchg
add
pop
sub
jl
nop
addl
jl
cmp
add
push
lret
mov
sbb
nop
stos
pop
cmp
push
rclb
movsb
sub
arpl
cwtl
pop
pop
scas
cmpb
insl
pop
adcl
pop
loopne
fnstsw
add
jecxz
add
dec
test
add
imul
popa
mov
add
enter
addr16
add
and
sub
sub
push
sbbl
ja
loopne
xlat
arpl
sub
sbb
insb
js
in
shl
jo
mov
add
pop
or
imul
dec
pop
xchg
mov
add
mov
and
sbb
bound
enter
push
ret
iret
mov
cwtl
or
adc
jns
lahf
outsb
push
xor
mov
inc
dec
jecxz
push
xchg
enter
rolb
lahf
daa
jae
imul
or
cli
test
je
sub
cli
add
pop
dec
add
arpl
add
jle
add
xlat
lods
mov
pop
mov
add
xchg
js
cmp
xchg
and
add
cmpl
dec
mov
lods
push
add
fs
ret
cmp
xchg
mov
jnp
popf
in
inc
lods
add
ja
rcrb
iret
cmp
add
and
scas
int
mov
jl
add
fisubrl
pop
addl
call
idivl
test
adc
leave
adc
xchg
mov
add
loope
ret
mov
pushf
push
jbe
fldt
test
inc
sbb
push
mov
sub
adc
or
jmp
jp
pop
aad
mov
pop
call
jmp
pop
lcall
insl
mov
inc
jbe
popa
jmp
xchg
inc
pop
rclb
add
pop
lock
mov
adc
mov
cmp
mov
mov
jo
pop
dec
pop
pop
mov
inc
adc
cmp
jl
add
out
mov
popa
add
xchg
aas
jge
arpl
add
sbb
fs
fistpll
inc
insb
add
mov
xor
stos
mov
add
push
scas
add
add
fstpt
push
sub
sbb
adc
cld
pop
inc
popa
lea
xchg
add
outsl
mov
add
in
and
adcb
das
inc
ficoms
into
shll
bound
cwtl
mov
dec
jmp
lds
icebp
add
cmpb
fwait
int
add
aaa
jl
add
arpl
add
ret
push
mov
addr16
add
pop
loop
popa
add
mov
outsl
ret
inc
add
stos
jecxz
stos
cmp
andb
xorl
jge
pusha
ja
idivl
sbb
ret
fsubp
jmp
inc
add
pop
and
enter
fistps
mov
test
pusha
lret
cmovb
inc
jne
enter
inc
subb
xchg
push
pop
add
mov
pop
push
xlat
inc
fistps
push
paddusw
stos
repnz
inc
pop
sub
xchg
movsb
jp
movb
xor
push
lret
cmp
sub
xchg
movl
add
in
les
jp
cmp
xor
xor
cmp
pop
or
lea
inc
sub
enter
push
fnstcw
or
sbb
mov
icebp
mov
inc
comiss
test
loopne
xchg
lcall
pop
cmc
mov
js
push
xchg
xor
jle
shrb
addl
sub
and
mov
adc
push
je,pn
pop
pop
aad
mov
and
filds
rcrl
push
mov
jg
push
je
repz
mov
out
in
inc
xor
push
sbb
test
cmpsl
cs
mov
mov
add
pop
mov
inc
in
mov
mov
jecxz
push
inc
push
cmpsb
xor
xchg
mov
arpl
aam
push
cmpsl
rclb
loope
push
jp
jnp
sbb
add
sbb
inc
xor
mov
jmp
add
out
dec
inc
push
rorb
add
loop
pop
xchg
aas
jnp
cmp
and
bound
add
sldt
shlb
scas
xlat
out
add
push
icebp
pop
push
mov
mov
xbegin
sahf
adc
sbb
sub
sub
popf
ret
inc
add
icebp
and
push
push
lea
sbbb
mov
arpl
add
popa
jne
jns
mov
loop
xchg
mov
cvtps2pd
lods
lds
xchg
out
fwait
in
xor
push
mov
dec
add
inc
test
fiadds
jg
shr
repnz
fmul
add
and
push
inc
jecxz
add
add
cli
push
sbb
sahf
je
jae
add
mov
xorl
add
pop
add
ret
pop
sbb
xor
add
fildl
cwtl
popf
add
fadds
inc
iret
testl
sub
cli
leave
add
add
xor
and
fnsave
add
out
pusha
sbb
push
add
ja
jl
testb
xchg
outsb
add
popa
lret
dec
rep
pop
es
iret
add
ficompl
fnstsw
add
bound
sub
repz
test
mov
sarb
xchg
dec
cmp
ret
orl
add
idivb
jl
add
mov
out
int
cmp
aas
xor
fwait
dec
mov
inc
inc
cld
or
jmp
push
ljmp
inc
movsl
xor
pop
jns
dec
fcoms
add
outsb
scas
sub
inc
rolb
sbb
xor
jb
dec
or
loop
outsl
nop
add
adcl
arpl
cmp
enter
mov
inc
jo
add
daa
cld
xchg
add
cmp
sarb
in
mov
or
sbb
sbb
push
shlb
mov
mov
pop
inc
addr16
inc
jns
or
fistps
xor
test
inc
cli
mov
adc
mov
stos
hlt
enter
lock
jl
jle
test
insl
add
pop
arpl
cmc
xor
add
add
test
rorb
inc
sbb
and
add
xor
rolw
into
or
shl
sahf
add
aaa
pop
xor
shlb
loopne
push
in
pop
sub
cmpsb
stc
inc
sbb
lods
inc
dec
fisubs
jg
add
es
popf
mov
mov
mov
adc
ja
push
andb
push
cmpsb
add
nop
mov
bound
xchg
and
add
jecxz
shr
pop
aas
call
inc
cltd
xchg
sbb
and
std
mov
add
push
and
mov
das
out
inc
cmp
mov
lds
ss
xor
jecxz
mov
mov
nop
loopne
add
xchg
aas
jo
lods
add
push
jmp
cmpsl
add
pop
push
icebp
mov
sbb
stc
jle
ret
mov
popf
sbb
and
cmp
jae
lahf
add
cmp
rol
dec
imul
lods
testb
sbb
out
mov
stos
sub
inc
sub
mov
shlb
out
add
out
xor
mov
sub
fildl
inc
and
cld
out
sbb
sbb
inc
rcll
sbb
ret
subb
in
mov
aas
shl
jg
inc
popf
push
add
sub
inc
xchg
dec
lea
cmp
or
iret
add
pop
mov
fcompl
and
addl
pop
cwtl
jmp
movsl
das
and
jbe
clc
pop
xchg
add
xchg
fsubr
mov
add
outsl
enter
pop
cmp
xchg
cs
mov
testl
and
hlt
sub
mov
test
jne
jp
cmp
incb
xchg
sti
jo
inc
dec
add
loopne
arpl
fwait
add
inc
out
scas
xchg
hlt
mov
imul
push
ja
add
ds
or
mov
mov
adc
stos
pop
add
mov
cmp
pop
sbb
mov
adc
add
fistps
push
push
add
inc
js
loope
orl
pop
xchg
jmp
mov
xor
and
pop
fs
adc
data16
sub
inc
dec
es
std
or
sub
push
call
lods
fcoml
test
lcall
or
sub
push
inc
add
fwait
dec
xor
cld
xchg
cmp
shrl
imul
xorb
or
jbe
push
stos
pop
mov
andb
lret
add
add
and
xor
shrl
mov
pop
lods
inc
inc
add
sub
xor
jno
jp
cmp
fadds
in
pop
inc
or
jecxz
xor
scas
cmp
add
js
sbb
jge
cli
bound
inc
or
test
mov
and
lret
cli
insl
jmp
sbb
filds
into
mov
cmp
add
fcmovu
dec
add
insb
push
rcrl
add
js
jno
enter
sbb
add
inc
pop
push
repz
mov
xorb
arpl
repz
mov
ret
into
aaa
mov
pushf
stc
inc
jl
movb
push
mov
pop
adc
inc
jns
push
push
sbb
jnp
les
int3
xchg
xchg
int
mov
sbbl
inc
inc
test
push
fwait
scas
or
xchg
pop
adc
xor
inc
mov
fstl
mov
into
lods
sub
jp
add
push
add
add
pusha
lahf
dec
add
roll
xor
into
mov
cmp
sub
mov
push
fiaddl
fnstcw
das
inc
dec
sbbb
cld
add
pop
mov
xchg
lods
sub
cmpsl
add
fcmovnb
mov
mov
inc
iret
add
lret
lods
mov
inc
pop
sub
or
xchg
sbb
mov
pop
add
inc
stos
addr16
and
mov
mov
daa
dec
or
xchg
mov
enter
add
mov
mov
add
lret
lods
add
shlb
dec
cmp
loopne
xchg
xor
inc
notb
repz
icebp
jge
or
add
lea
ret
cmpl
les
mov
inc
scas
in
or
add
add
insb
sbb
inc
push
pop
push
insl
mov
mov
and
test
mov
inc
add
mul
mov
daa
test
push
mov
loopne
clc
add
icebp
add
fs
push
out
mov
les
mov
jnp
add
adc
inc
adc
push
add
test
pusha
xor
add
push
cltd
push
pop
push
add
mov
std
xchg
test
test
pop
in
jecxz
add
in
mov
add
cmp
jns
cmp
daa
cmp
jge
push
inc
hlt
add
jae
inc
add
pop
aaa
cmp
mov
add
adcb
inc
bound
jmp
jmp
mov
sbb
inc
xor
jge
push
xchg
pushf
lret
cmc
stc
add
mov
arpl
in
mov
stos
xlat
inc
adc
leave
pop
fs
push
lods
incb
jle
sub
add
ja
xor
cmp
adc
lods
orb
push
inc
adc
notb
loop
jno
mov
test
rcr
add
inc
jp,pt
hlt
sbb
rclb
inc
mov
jae
jo
imul
pushf
sti
inc
pop
mov
pop
shll
add
out
pop
test
popf
inc
das
shr
mov
std
test
and
int3
rolb
or
add
inc
adc
pop
mov
inc
stc
cmpsb
clc
add
mov
sbbl
adc
jne
jb
js
add
dec
jbe
adc
fldl
rclb
cs
popl
add
scas
sbb
or
into
mov
push
stos
jp
add
xchg
xlat
fmull
inc
mov
add
jnp
add
stos
ja
js,pt
add
sub
push
lret
inc
dec
push
xor
add
inc
cmp
cmp
popl
out
mov
push
inc
sbbb
pop
movsl
inc
pop
subb
mov
mov
add
or
mov
ja
add
sub
add
fneni(8087
push
call
arpl
adc
stc
pop
push
add
add
cmpsl
jne
inc
out
lods
cmp
jbe
or
mov
pop
xor
inc
outsl
or
clc
mov
xchg
adc
bound
dec
loope
sub
jae
pop
sti
inc
mov
mov
fwait
add
sub
aad
repz
ds
loop
cmpsl
fwait
mov
jo
sub
pop
mov
shlb
mov
pop
aaa
xor
mov
nop
adc
xchg
sti
or
jl
pushf
add
lahf
repz
insl
dec
call
inc
push
lock
inc
jl
cmp
rclb
movsl
aam
add
sbb
ret
int3
aaa
sbb
jmp
fisubrl
xor
sbb
loopne,pt
sub
movsb
push
add
push
shlb
sbb
nop
add
sub
add
div
rolb
mov
mov
cmc
push
test
mov
int
mov
fisttpll
add
iret
add
add
clc
jnp
jle
loopne
add
mov
in
sbb
add
inc
ficompl
push
pusha
out
push
inc
add
sti
or
add
in
enter
jo
pop
add
or
popa
addr16
pop
mov
xor
lds
gs
insb
clc
add
rclb
add
pop
pop
or
jmp
fdivrl
or
mov
es
ret
and
sub
inc
leave
int
mov
clc
mov
inc
mov
mov
fdivs
add
adc
out
jp
cmp
rcr
jno
cmpsl
add
jns
sub
daa
pop
xor
cmp
add
ficomps
xchg
pushf
subb
and
sarb
dec
lret
in
dec
cs
xlat
sub
dec
mov
hlt
scas
pop
lsl
sub
pushf
jo
jns
sub
repz
add
xchg
psubd
pusha
mov
into
scas
hlt
cltd
out
dec
push
jns
dec
or
nop
and
and
mov
add
inc
icebp
lock
and
add
mov
imul
insb
cmp
lds
lock
add
dec
cmp
sbbb
les
addr16
add
cmp
addb
addl
into
enter
stos
rcl
bnd
es
aad
cli
dec
xor
inc
jg
sbb
fbld
insb
xorb
lahf
cld
repnz
flds
divb
xchg
arpl
pop
mov
lock
mov
pusha
add
popa
lock
cli
inc
push
pop
add
hlt
gs
ja
inc
add
aas
into
fldt
cmp
add
jp
inc
pop
jbe
out
cmp
add
dec
mov
test
jle
loopne
add
adc
pop
mov
jno
jo
sbb
imul
sbb
mov
lcall
fnstenv
sti
and
imul
xchg
add
cld
xchg
mov
xchg
pushf
arpl
ds
pop
and
imul
pop
mov
cmp
ja
and
or
dec
sbb
xor
aad
jmp
dec
push
add
and
mov
cmp
or
xlat
jmp
into
fsubl
fbld
mov
jne
add
inc
mov
stos
popa
xor
cmp
add
aam
ds
flds
pop
sbb
cmp
inc
outsb
dec
out
jne
enter
adc
mov
in
out
out
mov
lret
pusha
cmp
dec
fistl
add
xchg
decl
test
mov
mov
mov
inc
cmp
pop
xchg
cmp
pavgb
push
dec
notl
add
fiadds
adc
xor
pusha
pop
push
mov
adc
sub
sbb
stos
cltd
insl
mov
add
int
iret
lahf
cwtl
repz
add
cld
jae
and
scas
outsb
out
add
dec
mov
jns
mov
fs
pusha
xlat
arpl
ljmp
cmp
cmp
push
inc
sbb
add
mov
cwtl
mov
fiadds
mov
movsl
pop
jo
or
in
adc
rorb
nop
cmp
jp
jl
sbbl
aam
int
push
cmp
jae
shll
ljmp
add
pop
mov
aaa
cmp
test
ret
add
sbb
arpl
int3
les
ffreep
add
add
inc
nop
push
add
shl
mov
sbb
xor
inc
sub
sarb
dec
push
and
in
scas
in
xchg
cli
or
mulb
cmpsb
xchg
add
mov
insl
dec
fnstcw
movsb
les
pop
repz
sbb
mov
or
sub
push
clc
stos
sbb
add
in
mov
arpl
mov
xlat
sarb
test
sub
aas
je
add
testb
icebp
arpl
mov
add
sub
jnp
pop
call
clc
xchg
mov
adc
xchg
enter
or
pop
jne
addb
inc
jp
or
cmpsl
or
aad
imul
cmp
jge
push
das
mov
les
mov
jl
sub
gs
sbb
pop
data16
xchg
call
sbb
jge
mov
aam
rolb
cmp
div
mov
pop
mov
clc
sbb
add
mov
inc
inc
sub
fwait
jle
stc
repz
mov
push
sbb
jae
fsts
addb
or
pop
mov
and
push
outsb
jnp
sbb
jns
dec
adc
ja
sub
cld
jecxz
adc
in
and
cmp
adc
add
bound
or
aad
cmc
in
in
add
mov
ret
inc
scas
cmp
add
jmp
fsubrl
push
pop
add
dec
cmp
xor
jle
add
aaa
sub
sbb
daa
add
sbb
fadds
scas
cmpsb
pop
ret
mov
inc
jecxz
xchg
and
shrl
add
stc
movl
mov
ret
add
test
mov
mov
push
sbb
push
mov
xchg
cmp
aaa
scas
or
add
or
cmpl
add
mov
or
add
cmpsl
movsl
add
cld
jne
cmp
adc
pop
dec
ret
and
sub
add
push
cmpsb
sbb
nop
mov
pop
mov
shlb
and
mov
out
push
stc
add
add
in
jp
ret
adc
mov
xorb
add
jle
jo
call
push
sub
mov
pop
loop
sbbb
add
mov
jl
sbb
imul
cmp
icebp
into
or
dec
inc
sahf
push
add
cmpsl
cltd
imul
jmp
loop
add
jle
inc
adc
dec
stc
popa
and
ja
add
call
dec
loope
add
jmp
fwait
or
shr
add
mov
pop
jae
jb
cmp
iret
xchg
rcrb
mov
fildl
cmc
jno
das
ret
fistps
xchg
rclb
pop
lock
xchg
sub
es
into
rolb
lahf
sub
mov
xor
out
lret
call
shlb
shr
add
cmpsl
inc
xchg
cmc
push
and
mov
add
jne
cmp
test
movb
cmc
add
inc
pop
in
sbbl
popa
fisubs
cmpb
or
lock
push
iret
sub
add
out
testb
cmp
add
inc
cmpsl
cs
das
add
pop
adc
or
sahf
enter
add
iret
out
xor
mov
mov
rcll
ret
out
shrb
cmp
and
cmp
inc
loopne
cltd
sub
sub
bound
mov
lret
jno
or
mov
arpl
jg
popa
enter
out
aaa
clc
push
add
push
push
sbb
stc
ret
insb
and
rclb
lret
add
clc
mov
loope
sbb
das
xchg
add
add
xchg
cmp
cmpsl
add
mov
aaa
stc
or
dec
rolb
dec
push
adc
stos
scas
popf
pushf
or
decb
ret
ljmp
int3
mov
and
pop
aam
xchg
jne
pop
add
test
call
cmpsb
dec
fwait
into
es
movsb
inc
add
and
pop
cmp
fadd
imul
mov
stc
rclb
sub
inc
add
sub
push
dec
insl
jo
xor
add
mov
clc
dec
or
inc
inc
jmp
and
les
pop
insl
lods
fdivp
mov
inc
add
std
fwait
nop
dec
test
push
and
pop
push
cwtl
mov
cmpsb
dec
sar
int3
fldcw
add
xchg
or
dec
jnp
cwtl
sarl
cmp
adc
push
arpl
je
hlt
sbb
dec
sti
rolb
mov
vmread
mov
insl
inc
add
ficomps
fsubs
add
inc
cmp
lea
mov
subl
xor
jl
mov
in
popf
cli
sbb
ss
pusha
gs
push
push
dec
clts
dec
in
cmp
das
inc
rolb
xor
cmp
popa
nop
loope
adc
or
and
jl
add
dec
out
sub
int
push
call
subl
push
shlb
xchg
adc
popa
inc
sbb
scas
mov
and
xor
add
adcl
frstpm(287
roll
fsubl
pop
mov
stos
lret
aas
imul
arpl
insl
add
mov
cmc
scas
stos
lods
xchg
adc
add
arpl
push
test
inc
inc
dec
cmp
aaa
repz
movups
cmp
ja
mov
inc
add
faddp
mov
pop
mov
add
cmp
pop
std
rolb
arpl
cmpsl
aas
rorw
jbe
xchg
in
fnstcw
mov
and
mov
inc
push
pop
sub
jo
add
gs
fcompl
cmp
push
lea
sub
scas
dec
sbb
lldt
xchg
inc
pop
cmp
add
xor
scas
jns
add
adc
inc
fbld
iret
pop
enter
clc
jecxz
or
mov
jbe
sub
inc
out
xchg
or
mov
sbb
mov
into
add
sub
cld
add
xchg
sub
mov
xchg
push
jnp
hlt
sub
and
mov
ret
add
arpl
daa
add
ja
leave
mov
fwait
andb
jnp
je
add
inc
out
ds
fcompl
jecxz
je
mov
sbb
push
jbe
fwait
enter
add
dec
nop
arpl
xor
and
jo
sub
lock
lock
pop
inc
sub
jnp
addb
jno
mov
daa
fwait
push
push
test
sti
pop
mov
dec
fidivrl
icebp
push
mov
andb
inc
add
mov
add
ss
mov
orb
mov
add
pop
add
arpl
jns
push
rcrb
or
jle
in
subb
mov
inc
in
pop
ds
push
ss
mov
add
mov
mov
test
adc
and
lock
inc
add
lahf
dec
sbb
cmovl
shl
int3
out
rol
jo
or
mov
lods
and
sbb
js
add
xchg
iret
sbbb
popa
incl
add
out
adc
sbb
add
xchg
xchg
ja
sub
ret
arpl
push
add
ss
mov
stos
incl
pop
out
xlat
flds
inc
inc
mov
daa
or
xchg
arpl
push
pop
lock
and
pop
pop
add
xor
call
push
add
rcrb
out
mov
into
or
jno
jo
daa
xchg
dec
add
jge
cld
out
mov
sbb
xlat
xchg
dec
pop
push
in
xorl
or
shll
iret
add
xchg
jb
fs
scas
andb
jmp
pop
movsl
or
add
sti
test
pop
jecxz
xchg
cwtl
xor
loope
cmpb
mov
out
nop
adc
sub
mov
pushf
fstpl
push
stc
inc
cmpsb
std
in
test
add
inc
ss
mov
cltd
outsb
popf
fdiv
pop
or
inc
or
mov
cmp
push
inc
movsl
mov
dec
lea
lods
daa
add
cmpsl
xchg
mov
sarl
mov
mov
mov
push
movsb
pop
adc
sarb
lret
xchg
jo
nop
scas
imul
add
lret
in
mov
xchg
icebp
cmp
popa
incb
addb
pop
jle
add
fsubl
repz
out
cld
lea
jecxz
lods
mov
loope
mov
pop
inc
je
out
bound
mov
jno
adc
cmp
stos
sbbb
add
and
jno
lds
repnz
sub
push
mov
movsb
aas
mov
lods
add
std
repz
notl
or
adc
jl
add
dec
and
xchg
add
mov
jl
insl
rolb
add
lods
shl
rorl
sbb
mov
stos
popf
add
dec
fwait
mov
out
into
add
adc
cld
fs
mov
xlat
xchg
mov
pusha
xor
fsts
mov
pop
xchg
cmpl
sub
cmp
inc
cmpsb
cmp
dec
lock
inc
invd
sbb
popa
inc
jmp
mov
rorl
xchg
pushf
out
jnp
jns
arpl
pop
mov
cwtl
xchg
add
lock
cwtl
pop
out
jp
jmp
stos
pop
outsb
jecxz
pusha
lret
sbb
push
xor
iret
add
stc
mov
mov
jnp
inc
dec
add
xchg
inc
mov
add
pop
xchg
nop
jecxz
loope
or
inc
adcl
fldcw
outsl
add
cmp
pop
je
push
xor
sbb
pop
jae
add
lock
xchg
imul
fisubrs
lock
lcall
movsb
xchg
mov
lcall
xor
mov
xor
inc
add
cmpl
lock
add
dec
cmpsb
adc
faddl
add
shrb
jae
int
add
and
mov
aam
je
jge
dec
lcall
cwtl
les
or
add
fs
sub
das
adc
rol
or
jmp
sbb
jns,pn
jnp
add
or
rorb
sub
jecxz
arpl
sti
fs
cwtl
dec
push
cs
orb
inc
push
or
pop
stc
add
cld
hlt
testb
ret
adc
rolb
xchg
fwait
sub
fdivr
cmp
add
mov
mov
dec
mov
pusha
lahf
push
push
aas
shll
push
movsl
faddl
rorb
nop
cmp
add
mov
andl
dec
shlb
jns
push
xor
out
cld
mov
out
add
stos
shrl
mov
cltd
dec
or
pop
inc
hlt
stos
and
cmp
scas
push
cmpsl
imul
xchg
inc
ja
gs
inc
add
sbb
movsb
or
shlb
ljmp
add
inc
lds
jbe
add
dec
xor
dec
push
pop
subb
mov
adc
add
fldl
add
xchg
jmp
jge
pop
lods
push
cmp
mov
inc
add
movsb
push
jp
xor
sbb
add
add
stc
push
jo
or
sbb
xor
adc
fidivs
mov
scas
cmp
dec
cmp
pop
mov
jecxz
sarb
jl
jbe
mov
loopne
addr16
add
or
fcompl
insl
add
filds
jle
sub
mov
out
in
mov
repz
mov
xor
or
mov
sbb
inc
pop
and
add
inc
call
add
mov
popa
mov
cmp
cmp
jae
dec
rolb
jne
and
or
add
rolb
int
jp
std
out
pop
add
push
push
ret
fmuls
push
fldt
and
lahf
shl
sbb
pop
out
mov
sbb
clts
fcmovnbe
jo
cmp
jmp
or
rorl
mov
jb
pop
repz
rclb
push
xchg
or
add
lret
in
xorl
mov
test
inc
mov
fadds
inc
inc
push
mov
add
aam
mov
add
rclb
inc
sbb
pusha
ds
jge
movsl
lret
in
cs
add
mov
add
add
adc
testb
movsb
out
add
sahf
cmp
sbb
test
add
ror
psllw
xorb
xor
ret
out
add
mov
cmpsl
adcb
emms
add
and
add
or
xor
inc
movl
jo
push
xchg
add
xchg
shlb
sbb
add
sarl
je
add
push
popa
daa
cmp
jb
cmp
incb
mov
imul
inc
xor
rorb
stos
iret
sub
inc
dec
xor
add
out
push
jmp
push
test
add
outsl
por
inc
out
add
fwait
neg
mov
pop
bound
dec
inc
adc
and
add
mov
flds
inc
test
shlb
push
and
jg
pop
js
loopne
fisttpl
inc
iret
add
xor
ret
push
inc
and
adc
jl
add
in
adc
cmp
sti
inc
int3
add
and
adc
pop
xchg
push
repz
mov
adc
add
in
arpl
cmp
loope
dec
cs
lcall
loop
add
daa
adc
sub
dec
iret
dec
lcall
roll
xor
rolb
dec
jns
mov
jecxz
call
pop
mov
inc
push
aaa
sbb
sbb
ds
pop
lods
add
sti
inc
mov
les
leave
shl
scas
xchg
add
sti
or
mov
cmpsl
aaa
sbb
int3
arpl
xchg
sbb
cld
nop
add
lcall
shrl
sbb
pop
and
daa
adc
aad
pop
cmp
cli
add
xor
arpl
pop
cld
rolb
dec
push
or
loopne
cld
xchg
dec
mov
mov
mov
nop
lds
and
clc
mov
pop
mov
and
add
inc
arpl
fidivrl
subl
jae
add
adc
addl
enter
out
lods
add
inc
mov
test
fimuls
loopne
lods
adc
adc
dec
and
rcll
stos
repnz
and
or
sbbb
sti
jns
add
pusha
mov
push
pop
in
inc
mov
insl
loopne
repnz
insb
adc
leave
push
ret
push
push
pop
push
sub
add
out
xchg
enter
or
inc
adc
add
inc
jp
scas
pushl
add
arpl
pop
inc
pop
das
lcall
ret
scas
cmp
je
dec
and
into
gs
adc
test
lahf
push
lss
pop
ss
jecxz
fbstp
add
jbe
mov
bound
or
jmp
inc
imul
adc
add
xchg
cli
lds
inc
xchg
add
lret
pop
inc
mov
cwtl
movsb
add
jl
push
inc
fisubl
dec
xor
arpl
mov
mov
inc
incb
mov
add
adc
fs
aad
lret
outsb
adc
incb
ljmp
fs
faddp
lock
pop
pop
sub
add
sbb
mov
inc
leave
cmp
mov
dec
inc
add
adc
movsl
inc
sbb
xchg
lea
dec
in
mov
pop
add
loop
lcall
orb
dec
lock
add
outsl
xor
aaa
sub
jb
pop
lock
jae
add
rclb
ret
sbb
inc
add
into
rcrb
shll
out
ficompl
pop
inc
imul
dec
add
pop
jle
sub
cld
inc
mov
fisubs
add
xchg
std
xchg
loopne
fs
cmp
pusha
adc
out
addl
gs
adc
xchg
dec
add
pop
mov
fdivs
aam
adc
repz
loope
xorb
imul
sbb
add
pop
sbb
addl
popa
xchg
jge
xchg
fsubrs
jmp
cmp
add
rcrl
sar
jmp
add
fsubl
add
add
or
pop
add
out
adcl
lahf
add
push
cli
or
add
ret
movl
imul
shlb
lods
add
mov
sbb
insb
ljmp
ja
sub
xorps
xor
pop
xor
ss
out
sbb
xor
out
js
sub
and
or
inc
pop
mov
xchg
test
ja
in
and
sub
cmp
pop
pusha
pushf
call
les
repz
adcb
inc
xchg
sbb
adc
es
ror
push
jle
negl
test
pop
inc
push
add
jmp
push
add
dec
pop
imulb
sub
enter
jmp
rcrb
jno
add
aad
mov
adc
repnz
cmp
jb
aas
sub
xchg
add
in
sbb
push
std
mov
sahf
movsl
inc
adc
enter
icebp
pop
insb
add
dec
rol
pop
fucomp
sbb
mov
rcr
sbb
sub
push
mov
jmp
cmp
pusha
add
cmp
cltd
push
ficomps
enter
repz
loopne
add
popf
sahf
sbb
mov
js
pop
xor
add
mov
mov
push
add
sbb
out
and
add
popl
mov
add
mov
xor
arpl
push
fisubs
fnstsw
mov
shll
inc
int3
incb
xchg
mov
mov
mov
and
das
sbbb
ja
xor
or
and
stc
jns
xchg
insb
pop
mov
ret
lock
shlb
add
les
sub
imul
push
lock
aaa
mov
orl
sarb
imul
lret
jmp
insl
insb
add
cs
stos
jl
arpl
sbb
push
lret
shrb
cmpsb
aad
xchg
pushf
movsb
and
lock
add
push
lock
hlt
flds
imul
dec
das
and
inc
xor
add
and
data16
sbb
inc
arpl
dec
popf
sti
ud1
outsb
jne
addr16
out
cmp
push
cli
inc
sub
sub
jo
add
pushf
cltd
popa
pusha
nop
lods
add
push
clc
adc
inc
add
xor
mov
inc
jle
add
adc
mov
or
cs
or
add
jb
test
adc
push
stos
inc
mov
sub
lea
ret
inc
popf
or
pop
out
add
icebp
popa
dec
mov
inc
cli
add
test
call
js
enter
shr
cmpsb
pop
mov
xchg
int
mov
pushf
in
lods
add
mov
loopne,pn
pop
mov
add
mov
lock
cmp
jp
adc
xor
rolb
loop
ret
lods
lock
sub
pop
movsb
lods
add
mov
cmpl
xor
out
sbb
cs
std
sub
lcall
cwtl
mov
xchg
or
mov
mov
add
iret
cmpsb
rcrl
rcr
mov
stc
add
iret
adc
jecxz
outsb
or
inc
and
shrl
inc
xchg
add
shrb
mov
mov
pop
xor
fistl
iret
cmpl
add
std
xor
pop
mov
lds
outsb
add
jecxz
and
sbb
rolb
enter
aam
push
add
adc
das
int3
or
jns
add
shlb
and
mov
add
test
cli
lock
aam
inc
lret
test
rclb
jg
or
int
cmpsb
or
pop
fmul
out
aaa
inc
roll
add
jecxz
repnz
cmp
mov
data16
sahf
adc
cld
push
inc
mov
loopne
or
push
mov
mov
add
or
dec
test
add
pop
adc
mov
cwtl
fcoms
loope
in
add
popf
mov
clc
addr16
xchg
ret
jo
stos
add
xchg
dec
add
out
sbb
icebp
push
mov
add
rorb
inc
mov
add
test
pop
cmp
inc
mov
mov
fwait
push
jnp
pop
pop
scas
jns
shl
add
push
and
push
adc
sti
adc
ret
add
and
jne
sbb
js
push
cmp
add
sbbb
pushf
mov
inc
popf
and
cmpsb
lea
mov
fcompl
pushf
jno
dec
inc
es
cmpsl
add
and
mov
jns
add
add
sub
dec
add
mov
fwait
bound
mov
push
add
shr
add
je
add
add
lock
jne
add
inc
and
pop
rcrl
jnp
or
fbld
out
insb
and
inc
sub
mov
dec
sub
add
repz
rcl
roll
outsb
mov
test
dec
add
rcrb
adc
mull
cmp
xchg
inc
mov
xchg
add
aad
jns
add
aaa
ljmp
inc
shlb
add
stos
jae
jbe
in
roll
mov
sub
pop
jb
pop
ljmp
add
sbb
enter
outsb
jae
or
jle
mov
dec
xor
add
pusha
rorb
mov
shlb
movsl
add
sbb
clc
pop
icebp
bound
inc
add
sub
xor
ja
mov
repnz
push
daa
xor
push
mov
pop
inc
push
clc
rcr
in
jle
pop
adc
in
movsb
sti
addb
lahf
cltd
mov
enter
add
imul
sub
jl
inc
out
adcb
mov
xchg
mov
push
push
push
fs
add
adcl
rcrb
add
inc
iret
mov
add
adc
std
push
ja
out
ljmp
movsl
sbb
push
mov
pop
inc
rolb
and
pop
leave
mov
imul
adc
cmpsb
jmp
loopne
lcall
inc
add
in
sti
cmpsb
inc
lea
imul
sbb
dec
imul
push
test
ret
outsl
jmp
clc
jnp
arpl
iret
cs
cmp
push
rolb
clc
push
mov
push
mov
mov
aam
in
mov
fwait
or
cmp
push
rcl
lods
mov
inc
add
sahf
cwtl
mov
push
inc
sarl
out
cltd
mov
jl
sbb
incl
stos
int
rcrb
xchg
push
lods
cld
or
push
jae
mov
jge
add
sbb
test
lret
cli
pop
js
inc
nop
and
or
add
xor
clc
mov
bnd
dec
call
ret
cmp
sbb
push
insb
add
pop
pusha
jmp
lret
das
push
arpl
inc
rcrb
add
xor
mov
outsb
subb
inc
push
inc
xlat
aad
jnp
pop
cmp
in
andb
push
movsl
insl
jo
mov
inc
outsl
and
cmp
dec
or
pop
xchg
cmpsl
push
pop
lahf
sti
ds
shlb
int
add
into
in
ljmp
add
pop
outsl
std
jo
lods
outsb
sbb
enter
or
pop
sti
ja
dec
std
add
and
adc
data16
insb
pop
sahf
fdiv
loopne
pop
fbld
mov
push
arpl
push
cmp
xchg
out
xchg
mov
cmp
add
shlb
xor
dec
pop
xor
xor
sarl
scas
in
xchg
inc
call
add
pop
pop
mov
add
test
jp
sub
testb
mov
cmp
dec
lea
in
into
lcall
loop
xorl
fs
jns
arpl
test
xor
pop
add
xchg
mov
pop
push
dec
imulb
pop
inc
pop
outsb
inc
mov
fcoms
cmp
repnz
mov
jmp
adc
sbb
stos
gs
add
ljmp
push
fisubs
loopne
jo
popa
std
pop
push
fdiv
jge
sub
and
push
add
repnz
mov
pop
out
add
pop
cmc
xchg
imul
bound
add
add
cmp
in
mov
dec
sbb
sub
or
imul
add
inc
leave
xchg
int
mov
mov
add
mov
pop
pop
xchg
lock
sub
cwtl
push
mov
add
arpl
outsb
sbb
idivb
add
in
push
fcomps
and
lods
subb
jo
dec
inc
adc
adcl
pop
push
dec
push
scas
cmp
sti
pop
jnp
shlb
mov
mov
mov
rol
and
sbb
aaa
arpl
addl
adc
in
jnp
push
jo
in
popf
add
xchg
dec
das
shl
aaa
sti
inc
dec
adcb
fwait
daa
aam
repnz
mov
cmp
push
push
addl
out
push
sub
jl
hlt
sbb
repnz
shrl
fstpt
add
ret
push
aad
mov
mov
mov
jne
cmpsb
stos
inc
pop
ja
das
cmp
bnd
loopne
and
sarb
jns
adc
cwtl
popf
inc
into
xor
mov
adc
out
dec
add
iret
jbe
mov
enter
bound
jb
mov
inc
push
dec
mov
mov
lds
add
jl
xlat
fbld
ret
pop
pusha
sub
inc
test
xor
loop
mov
sub
xchg
xor
add
xorb
stos
sub
pusha
mov
arpl
faddp
inc
aas
ds
repz
xchg
add
fdivr
xchg
lds
pop
add
cmpsb
jp
inc
cmc
sbb
in
cltd
loop
shrb
sub
mov
cmp
mov
or
jae
mov
and
xor
jp
add
loopne
pop
add
pop
gs
mov
js
push
mov
int
mov
push
enter
push
or
sbb
insb
shlb
push
out
add
mov
push
ret
or
lea
adc
dec
pop
push
imul
adc
add
hlt
loop
inc
and
rcrb
add
or
rolb
sbb
or
pop
jbe
dec
test
je
daa
psubq
dec
fsubs
or
jecxz
push
xor
mov
inc
jae
cmp
push
lahf
into
inc
bound
sbb
mov
fsubr
add
mov
add
js
arpl
and
add
mov
mov
mov
call
inc
mov
add
cmpsb
dec
xchg
push
push
jbe
add
inc
sbb
adc
pop
xchg
push
dec
insl
mov
sub
cmp
mov
dec
rolb
inc
sbb
dec
jle
add
dec
and
lahf
mov
rcrl
icebp
push
insb
add
mov
sahf
daa
mov
dec
int3
inc
popl
outsb
pop
shll
das
pop
enter
push
add
lea
leave
ret
pop
rol
fadds
add
jle
mov
pop
sub
inc
xchg
mov
adc
mov
cltd
jne
inc
rolb
and
cld
popf
push
stos
int
pusha
aam
arpl
inc
rcll
add
fildl
cmovns
mov
lret
mulb
cmp
and
loope
mov
dec
push
add
adc
repz
arpl
add
enter
xor
xor
sbb
bound
arpl
loopne
call
push
xchg
sub
add
dec
mov
and
in
xor
out
cmpsl
add
rcrb
call
ret
xorb
aas
pusha
imul
add
mov
mov
inc
pushl
push
sbb
dec
rolb
sti
add
enter
cli
sub
add
sbb
add
jle
xor
adcl
aas
popf
loop
push
int3
les
testl
add
mov
xor
add
mov
scas
sub
pop
lahf
outsl
arpl
push
mov
mov
in
add
xor
inc
push
pop
pop
push
sbb
or
inc
sbb
xchg
lock
and
xchg
in
inc
test
push
dec
loopne
jnp
scas
rcl
jne
test
mov
int3
xchg
or
shrb
cmp
xchg
add
cmp
call
inc
and
je
pop
or
cmpb
push
mov
push
adc
loopne
adc
fs
inc
fwait
push
add
lret
das
dec
pop
inc
push
add
cmp
and
inc
loopne
cs
repz
dec
insb
aad
xor
in
andl
cmc
jle
hlt
and
push
xchg
leave
test
jg
mov
jl
mov
adc
shlb
push
test
shlb
imul
outsl
pop
inc
mov
js
test
push
inc
pop
pop
xor
jmp
add
jle
cmp
mov
loop
pusha
xor
pop
add
cwtl
cmp
dec
add
push
sbb
xor
or
jae
xor
cld
mov
mov
pusha
arpl
push
icebp
pop
mov
inc
or
add
mov
arpl
add
and
pop
sbb
lods
xchg
insb
mov
ljmp
add
loope
ret
test
jecxz
xor
arpl
inc
insb
inc
inc
and
fcomip
or
ds
inc
addb
gs
iret
repz
loop
lock
lds
jbe
bound
dec
xchg
add
aam
in
mov
push
fs
cmp
insb
jae
jl
push
mov
xor
stos
cmc
verr
jge
arpl
cwtl
sbb
aaa
and
and
test
stc
mov
push
adc
jl
add
xchg
enter
add
pop
mov
dec
andb
adc
dec
add
or
fisubl
mov
mov
enter
cmp
pop
ret
daa
inc
dec
fadd
cwtl
jb
into
or
mov
pop
inc
push
ret
js
xchg
loope
ficompl
add
roll
pop
pand
dec
jmp
ja
shlb
out
add
push
jae
inc
mull
lea
or
lds
mov
add
or
mov
or
cmp
add
xchg
fdivp
testl
das
subl
add
out
xchg
xor
std
sbb
mov
in
ja
dec
adc
or
stos
je
pop
out
repz
xchg
add
jne
jno
pop
add
xlat
add
push
adc
xor
bound
cli
add
pop
pusha
out
add
outsl
cmpb
xor
bound
add
loopne
sub
test
pop
inc
add
add
aam
mov
xor
sarb
and
sbb
jbe
jb
cli
imul
lods
pop
cmp
jno
adc
jle
mov
mov
repnz
cltd
push
sbb
push
xchg
inc
pop
xor
mov
stos
mov
insl
mov
jecxz
dec
mov
testb
scas
push
jp
lea
sbb
cwtl
ds
iret
xor
bound
out
sub
jb
sbbb
inc
pop
popa
jnp
dec
add
aam
and
pop
add
sub
incl
aad
xchg
sub
pop
mov
cs
rcll
sbb
inc
pop
add
adc
or
push
mov
and
xchg
sti
push
dec
sbb
jno
sub
imul
add
iret
test
push
aam
mov
jmp
testb
or
adc
paddb
jle
and
add
or
inc
dec
xchg
add
lock
push
shlb
ljmp
movsl
mov
cwtl
sub
addl
or
inc
xchg
stc
inc
xor
cmp
push
pop
loope
push
leave
add
jne
incb
insl
xchg
sbb
outsb
addl
jb
int3
dec
rorb
fsub
test
lock
gs
mulb
cmp
in
adc
subb
jo
mov
add
dec
add
push
and
orb
add
sbb
add
adc
rcll
or
into
loopne
mov
incb
push
addr16
imul
pusha
int3
mov
pop
mov
fists
inc
les
sbb
ret
fldt
jecxz
push
lock
outsl
xchg
in
push
xchg
push
mov
jecxz
xchg
inc
enter
pop
shl
push
lahf
push
add
jge
imul
jle
add
xlat
mov
lock
add
fucom
arpl
add
lods
cmpsb
int
push
or
mov
scas
mov
lcall
adc
inc
inc
je
add
stos
pop
loopne
rcr
mov
ror
loopne
je
lods
sbb
cli
leave
orl
or
lods
or
mov
sbb
pusha
std
xchg
add
out
add
int
jo
daa
and
pusha
out
mov
test
jns
in
push
inc
ljmp
cli
push
daa
shl
pop
outsb
insb
sub
lods
lods
add
inc
add
mov
inc
jmp
outsb
movsl
and
out
xchg
sbb
push
ret
scas
div
mov
stc
add
mov
arpl
mov
push
dec
or
pusha
pop
push
add
push
std
add
addr16
sbb
pusha
rcll
sbbl
cwtl
std
mov
test
leave
dec
cmp
or
rolb
testl
push
stos
jb
jl
loopne
sbb
cmpsl
inc
aad
inc
jg
add
fs
xor
add
pop
out
pop
push
rol
in
faddl
mov
movsb
into
add
cs
jmp
or
cmpl
loope
cmp
data16
lock
rcrb
mov
test
aam
pop
cmp
push
push
loopne
pop
add
hlt
sbb
mov
bound
loope
xchg
xchg
push
add
jbe
or
mov
arpl
pushw
adc
pop
add
add
fbstp
mov
pop
stos
sub
lahf
mov
movsb
mov
mov
jns
aam
sbb
add
and
roll
fst
fcmovnu
fcoms
fadd
fld
add
lods
inc
mov
mov
add
jbe
arpl
je
gs
push
mov
pushf
test
loop
daa
lods
in
mov
aas
cmpb
add
ja
ds
popf
add
xor
xchg
cltd
cmp
jle
ret
mov
add
inc
sub
dec
mov
ljmp
je
jo
nop
pop
inc
icebp
add
adc
adc
add
lods
jg
or
je
mov
lock
aad
or
leave
pop
mov
pusha
adc
add
subb
ds
mov
shll
int3
mov
push
and
jecxz
jp
jne
sbb
inc
mov
js
cld
jbe
shrl
insl
test
inc
add
popa
loopne
push
push
pushf
repnz
inc
or
fadd
cmp
or
adc
push
xorl
pop
add
testb
adcb
cmp
cmpsl
shrb
stos
add
dec
push
inc
aaa
add
jge
add
jg
arpl
mov
xchg
sahf
inc
add
ljmp
sti
stc
aad
add
mov
mov
cmp
mov
mov
cmpb
mov
mov
inc
add
add
in
sbb
inc
test
push
inc
dec
mov
fwait
sbb
mov
sbb
adc
mov
fldenv
sahf
fildl
arpl
mov
ljmp
jl
in
add
movb
pop
out
rolb
sti
fwait
add
push
clc
push
inc
mov
lock
cltd
lods
dec
pop
popf
push
add
jecxz
in
out
and
rolb
jg
add
rorl
repnz
popf
sbb
int
push
jp
stos
mov
cmp
add
jbe
mov
mov
in
lods
test
arpl
mov
xchg
pop
and
cmp
fcomi
rolb
add
fistps
sahf
add
mov
jecxz
cs
mov
inc
sbb
test
fbld
add
adc
cmp
sub
mov
cs
xchg
cmp
cmp
out
pop
add
cmpsl
push
push
cmp
cmpb
add
mov
mov
lea
aas
cmp
pop
mov
lds
nop
dec
lcall
incb
stos
stc
mov
add
mov
imul
jecxz
jb
mov
pop
or
out
and
sub
cmp
fucomp
cmp
cmp
add
lods
arpl
loop
dec
push
inc
xor
fwait
clc
mov
fcoms
in
xchg
ljmp
ret
shl
xlat
sbb
mov
mov
lock
or
push
rcrl
adc
scas
jae
int3
add
sarl
out
lea
cmc
add
mov
ret
mov
icebp
push
and
add
fidivl
out
pop
cwtl
pop
lods
ja
add
jecxz
icebp
mov
add
scas
push
rol
cmp
xor
add
mov
clc
or
loopne
push
pop
add
pop
adc
xor
fwait
sarl
add
mov
sub
add
and
xchg
push
lret
mov
sar
pop
add
pop
into
fwait
or
in
cmp
jg
imulb
add
cmpsb
loopne
sarb
dec
add
add
inc
xor
sub
push
push
and
sub
jb
out
inc
arpl
fists
jo
add
or
push
jp
out
add
sbb
or
add
fisubl
push
push
test
shlb
lea
inc
pop
loop
call
fstps
bound
sbb
in
and
jle
lock
adc
pop
inc
mov
inc
mov
xor
xchg
lret
adc
mov
add
dec
inc
aad
inc
add
dec
xorl
fcmovnu
shl
pop
mov
sub
shrb
mov
jb
out
adcl
add
push
or
inc
insl
jbe
add
shll
lock
popa
and
xlat
scas
fiaddl
adcb
mov
jg
add
and
mov
mov
dec
inc
mov
ret
add
rol
ficomps
pusha
inc
scas
adc
fiaddl
stos
mov
ja
pop
inc
cmp
icebp
pop
xor
shlb
pop
fwait
mov
cmpsl
jbe
into
insl
stc
add
sbb
ficomps
je
add
push
rolb
ja
add
pusha
mov
add
adc
shrb
test
loopne
movswl
fwait
and
pop
scas
add
into
pop
rcrb
add
xorl
and
or
int3
push
jbe
cmp
pushl
dec
xchg
arpl
inc
loope
inc
rol
popa
out
mov
adc
test
mov
add
inc
adc
ljmp
lock
pop
dec
sbb
ret
xchg
repnz
add
lds
aam
sub
out
divb
and
aaa
ja
out
loop
add
sti
repnz
mov
mov
ljmp
idiv
add
push
jnp
cs
cmp
add
clc
fwait
dec
mov
jle
sbb
bound
inc
shrb
jge
push
add
scas
int3
inc
add
in
rolb
hlt
pop
jae
roll
mov
add
dec
jle
push
rorb
bound
fildl
in
mov
mov
jg
add
mov
icebp
arpl
push
mov
mov
scas
jle
push
and
xor
lea
add
dec
icebp
pop
mov
dec
add
pop
jl
jecxz
xchg
add
ret
das
ljmp
aas
mov
mov
mov
or
js
sahf
repz
xchg
fimull
dec
andb
es
xor
fisttps
fdivl
push
lahf
nop
jp
in
arpl
push
mov
incl
fcoms
aas
mov
add
arpl
repnz
jecxz
decb
push
or
jg
dec
mov
sbb
add
mov
add
dec
insl
orb
add
mov
inc
test
imul
cwtl
add
and
jecxz
xor
xor
fs
xchg
lods
add
push
and
rolb
dec
dec
outsl
arpl
in
sti
xor
cmp
repnz
pop
mov
dec
xchg
and
scas
aas
orb
cmpsl
dec
fmull
out
sbb
push
lods
pop
repz
arpl
mov
xchg
aaa
sbb
add
lods
add
pop
add
fsubrs
mov
xor
jle
sub
add
dec
or
dec
lods
sarl
rcrb
popf
lret
bound
cli
inc
adc
add
and
dec
lcall
inc
in
add
ret
mov
fcmovnb
jge
xor
aas
add
pop
mov
push
test
negl
mov
jecxz
pop
in
in
add
mov
testb
insl
or
roll
pop
xchg
mov
add
jg
mov
xchg
hlt
add
mov
arpl
sbb
add
lods
dec
js
sbb
inc
xor
sarb
mov
xchg
mov
add
cmovno
js
enter
jnp
mov
cwtl
jns
and
lahf
outsl
jge
stos
mov
or
cmp
es
inc
jo
dec
and
fstl
cmp
xchg
stos
in
pop
sub
cmp
sahf
push
or
add
fs
cmp
and
add
icebp
sti
adc
fiaddl
inc
std
jns
aam
outsl
push
pop
xor
pop
cmp
add
mov
lret
jp
int
jge
inc
xchg
popf
add
inc
inc
fdivp
xchg
pop
xor
or
jle
mov
xchg
pop
xor
jo
mov
mov
inc
imul
pop
mov
mov
pop
inc
fstp
outsb
add
js
inc
clc
sarl
mov
add
cltd
inc
loopne
cld
inc
push
add
cmp
out
loop
stc
test
inc
bound
ret
jo
add
aam
mov
or
inc
leave
lods
sbb
cmpb
mov
pop
mov
mov
add
cld
pop
xchg
sub
movl
cmp
jecxz
cmc
mov
pop
jns
add
pop
fcmovne
hlt
in
repz
pop
add
rorl
push
sub
or
mov
sbb
jmp
xorl
mov
xchg
cmp
pop
inc
adc
push
pop
pusha
mov
lock
mov
adc
xor
icebp
scas
cwtl
xlat
rorb
mov
adc
bndldx
aad
cmp
push
mov
js
pop
mov
nop
mov
test
fs
leave
dec
ljmp
add
cmp
inc
orb
subl
cmp
add
inc
outsl
into
cltd
adc
jg
jge
inc
sub
test
add
xor
shll
cmc
mov
enter
jo
jecxz
add
fldenv
push
outsl
clc
adc
mov
xor
or
jb
add
add
in
inc
lret
test
rcl
insb
mov
pop
repnz
add
xor
xor
push
sbb
pop
pop
orb
xor
out
insl
xor
sti
arpl
jb
sub
xchg
popa
shr
push
xchg
add
cs
add
inc
aam
icebp
shl
out
add
adc
rclb
xor
scas
add
and
jnp
in
jp
test
or
test
mov
pop
outsl
mov
add
std
ds
add
es
xor
cwtl
int3
cmp
and
cmc
cmp
inc
call
fildl
push
cltd
in
arpl
and
stos
add
add
add
rcll
add
imulb
jno
or
cli
and
add
jb
add
clc
das
mov
inc
pop
add
inc
loope
mov
mov
add
add
ficomps
sub
dec
dec
add
push
rorb
jmp
shll
mov
add
pop
ficompl
push
in
jecxz
adc
push
std
insb
gs
or
and
add
pop
mov
or
pop
repz
mov
roll
clc
jl
shlb
mov
imull
inc
inc
mov
insl
lahf
xchg
mov
aas
push
add
punpcklbw
jae
add
jle
imul
rolb
xorb
pusha
test
jl
add
pop
jo
in
or
sub
and
sahf
cmp
test
dec
in
lea
push
xchg
lock
cmp
sti
mov
add
xchg
sahf
ss
out
js
leave
arpl
cli
mov
jno
and
or
dec
add
jae
jmp
inc
push
insb
mov
sti
ds
testb
fxch
test
sub
xchg
add
cmp
push
add
cmp
add
sbb
pushf
push
pop
ds
inc
adc
cli
cli
add
pop
mov
iret
rorb
lds
scas
dec
pusha
sbb
cmpb
ljmp
lock
mov
cmpsl
pop
mov
push
cmp
and
inc
sbb
ret
jb
cmp
jle
fisttpl
push
push
pop
jne
inc
sarb
std
int
les
inc
jns
rorb
out
jmp
cmp
loop
cmp
add
arpl
imul
xchg
mov
push
out
add
and
inc
add
adc
fxam
pusha
add
mov
pop
pop
in
subl
int3
rorb
mov
xchg
push
rolb
xchg
push
addl
cmp
jne
sbb
adc
jg
xchg
xchg
add
repz
daa
xchg
inc
add
ss
pop
popf
mov
push
add
shlb
dec
push
and
jecxz
mov
add
mov
add
xor
les
add
inc
outsb
int3
add
push
rclb
jl
aas
adc
xchg
jo
mov
nop
test
push
dec
add
push
xchg
hlt
lea
add
mov
jne
ljmp
sub
shrl
push
jb
sub
adc
inc
testb
inc
or
inc
dec
add
inc
cs
push
and
dec
ds
sbb
inc
pop
pop
fldl
cmp
add
inc
ffree
loopne
jne
addb
mov
test
leave
xchg
mov
or
roll
inc
push
out
cld
pop
outsb
push
adc
ror
add
inc
add
mov
cwtl
std
and
add
aaa
xchg
mov
adc
pop
or
adc
ret
inc
mov
mov
add
dec
inc
mov
inc
add
cmp
fstl
cmp
cmp
dec
insb
add
sbb
pop
sbb
and
inc
lret
push
ljmp
add
adc
in
xor
lcall
outsb
sbb
add
sti
lahf
faddl
ja
cmp
cmpl
inc
sbb
push
adc
sub
ds
mov
in
add
mov
pop
cmc
add
inc
loopne
add
lods
mov
in
out
cmp
mov
jg
pop
mov
jecxz
jno
mov
stos
adc
fsubl
inc
and
sub
add
bound
push
pop
add
mov
xchg
mov
or
std
dec
fldt
pop
jne
in
add
jge
les
cmp
add
lret
cwtl
add
inc
xchg
or
fldt
lds
add
sub
lret
cmp
inc
xchg
out
cmpsb
inc
jmp
xor
pop
lret
out
fwait
add
mov
call
dec
mov
push
pusha
cwtl
jle
pop
arpl
out
add
cmpsb
inc
push
sub
stos
scas
push
stc
in
dec
jne
cmpl
orb
sub
add
mov
loop
mov
lahf
imul
insb
adc
push
and
jecxz
and
leave
nop
push
push
sub
sub
jecxz
mov
push
lea
push
insb
pusha
out
clc
adc
add
push
dec
test
xlat
add
inc
xor
jo
cmp
pop
mov
lods
jo
xchg
test
imul
inc
scas
mov
out
in
push
jnp
jecxz
push
aas
dec
cli
movsb
add
arpl
push
adc
inc
jle
addl
jmp
fsts
pop
push
lret
ret
aam
xor
sbb
sbb
sub
push
out
xchg
pusha
mov
lods
stos
cmp
and
push
roll
pop
and
adc
clc
xlat
out
mov
ss
dec
sarb
cmp
xchg
leave
pop
adc
fs
xchg
fadds
add
out
movsl
jmp
cmp
es
cmp
les
call
arpl
lds
jle
xchg
add
shll
add
add
cwtl
sub
loope
int3
mov
add
push
fisubs
dec
fldl
and
or
xlat
nop
in
mov
ret
pop
cmc
add
fdivrl
movsb
add
lock
loopne
add
aaa
or
xchg
andl
pushf
mov
jmp
add
fnsave
ss
mov
push
inc
inc
enter
loop
push
cmp
inc
and
add
or
mov
push
sbb
outsb
xchg
cmp
push
hlt
add
in
mov
ret
mov
pop
iret
cmp
loopne
pop
shlb
mov
arpl
cmpsb
sbb
mov
inc
lahf
jg
mov
dec
add
or
xor
shlb
into
push
mov
xor
cmp
xchg
mov
add
xor
jbe
xchg
dec
inc
aas
jle
and
fcom
ret
sub
in
into
je
insl
loopne
pop
add
jp
out
mov
add
jo
add
pop
xor
inc
arpl
and
add
push
enter
and
push
shlb
inc
outsb
notb
adc
roll
xor
bound
add
inc
fs
sbb
add
mov
addb
xor
cmpl
and
or
std
cmp
insl
out
jmp
add
mov
scas
add
mov
mov
insl
aam
out
mov
adc
xchg
roll
jo
dec
mov
jp
clc
addl
inc
pop
add
push
add
add
jmp
inc
ret
imul
add
push
xchg
dec
add
mov
mov
or
loope
inc
pop
les
lds
fdivrl
dec
jno
lods
sub
std
add
in
movb
in
arpl
sub
add
rolb
dec
cmp
fisttps
xor
ret
es
aam
sub
cwtl
xchg
xor
gs
stos
push
push
add
lea
push
pop
xchg
dec
add
mov
insb
fs
call
inc
pop
adc
jp
int3
add
adc
loopne
lcall
and
lret
jle
dec
sbb
arpl
ja
daa
inc
fadds
and
pop
mov
add
push
and
cmp
jbe
push
jmp
shlb
sbbb
mov
add
pusha
test
push
add
ficompl
les
pop
daa
test
add
int
cmp
add
clc
repnz
xor
test
dec
cwtl
loop
add
cmc
into
cmpsb
pushf
dec
dec
inc
inc
jo
xchg
dec
adcb
lret
jne
add
push
inc
dec
add
jbe
movsl
cli
add
add
outsl
in
mov
add
fsubp
xchg
gs
in
or
fwait
cmp
test
jmp
mov
add
mov
cli
jae
cwtl
add
icebp
ds
xor
add
xchg
pusha
pop
fisubs
mov
loope
sbb
inc
lods
aam
dec
push
icebp
xor
lret
jbe
mov
arpl
add
inc
sub
cmpsl
mov
add
mov
mov
add
add
add
movl
pop
cmp
or
ror
add
data16
shlb
hlt
cmp
fsubrl
aas
pop
mov
stos
rclb
and
dec
or
add
ret
sbb
out
sbb
sub
pop
in
test
jne
loopne
mov
ret
cld
xchg
xchg
sarl
jo
mov
shl
sbb
lock
in
add
pop
inc
stc
xchg
int3
add
adc
jl
inc
test
subb
rolb
sti
ret
xchg
mov
movsl
ljmp
add
or
aaa
stos
loope
mov
add
popa
add
dec
push
ret
jb
push
les
jl
add
in
ret
push
mov
ret
lret
jge
scas
fsubrs
aam
jecxz
adc
or
adcl
sbb
lcall
cli
inc
xchg
or
jmp
lods
cld
push
add
add
add
and
add
inc
ror
sub
xor
pop
inc
and
jo
inc
int3
mov
sub
les
xchg
mov
add
andl
shlb
loope
jecxz
lock
imul
xchg
add
ja
mov
sbb
mov
cmp
loopne
mov
jne
pop
aad
subb
stos
aam
xchg
add
mov
add
addb
icebp
add
rclb
in
jne
add
xor
nop
fists
leavew
repz
lds
adc
add
outsb
mov
nop
jb
jecxz
inc
shll
test
rclb
add
add
popa
add
pop
xchg
hlt
cmp
insl
arpl
insb
sar
mov
sbb
cmp
mov
mov
dec
and
rcl
test
xor
adc
jmp
incb
inc
xor
pop
add
jge
mov
aad
repnz
je
add
inc
das
jp
loopne
add
pusha
sub
in
insl
pushf
mov
sbbb
inc
add
movsl
fcomip
mov
movl
add
sbb
sti
pop
loopne
add
out
shll
roll
stos
push
xchg
cmp
dec
cmp
xor
mov
aas
fnstenv
mov
popf
ficoms
subb
add
pusha
clc
xor
inc
rolb
out
xchg
std
sbb
mov
shrl
pop
mov
test
and
std
add
insb
mov
add
mov
fisubrl
pusha
add
cld
add
jbe
lcall
daa
jae
movl
addb
notb
add
arpl
gs
pop
sbb
in
lcall
rcr
mov
cmp
ret
add
and
sbb
xor
sub
xchg
and
pop
fildl
in
outsl
mov
xchg
add
ret
pop
mov
shrl
insb
mov
mov
arpl
stos
dec
cmc
lock
cmp
cmp
add
mov
push
jecxz,pt
in
add
lds
pop
testb
adcl
insl
pop
mov
and
add
repz
loope
fcmovb
add
fidivl
inc
or
push
xchg
cmp
lods
add
arpl
fsubrl
fldl
add
jno
mov
xchg
add
cmpl
test
sbb
mov
sti
add
add
cmpsl
cmpb
scas
insl
mov
add
xchg
outsb
push
cmp
push
jne
popa
and
cmpsb
jno
add
rcl
lock
testb
shlb
adc
fucomip
jecxz
addb
add
mov
or
sbb
arpl
xchg
add
jno
and
push
lds
add
inc
dec
cmp
xor
xor
test
lods
adc
sbb
pop
push
add
andl
leave
add
mov
push
pop
cli
imul
add
push
jo
insl
incb
pop
in
add
icebp
ss
inc
flds
mov
cmp
addr16
clc
lods
push
cmp
inc
add
popa
movb
sti
lods
add
ret
fisttpl
addr16
lods
add
mov
fadds
pop
add
lds
sub
outsl
add
imul
sub
and
add
adc
inc
add
jmp
enter
add
xchg
mov
outsl
into
and
add
cmp
in
mov
or
jecxz
addb
jg
pusha
ds
jp
pop
add
push
xor
repnz
cmpsb
add
aad
loopne
sbb
ja
xchg
ljmp
mov
pop
fildl
insl
xor
in
ret
fcoms
inc
roll
shlb
gs
add
jno
sbb
inc
insl
mul
push
jecxz
and
fcmovnu
ret
push
mov
loop
xor
out
mov
mov
mov
enter
pop
add
jb
ret
je
dec
sbb
in
add
add
mov
outsl
sub
add
and
sub
lock
aaa
cmp
or
lcall
jl
mov
pop
inc
les
ret
pop
sbb
pop
adc
add
sbbl
rcrb
mov
inc
xor
dec
lcall
inc
dec
dec
sub
jnp
sbb
test
add
xor
adc
jge
loope
mov
mov
add
and
lret
mov
insb
jecxz
pop
mov
mull
fists
cltd
add
push
rolb
lods
add
ljmp
out
cmc
in
fwait
add
testb
rorb
data16
lret
icebp
sbbb
push
bound
cs
test
add
xlat
push
jp
rorb
fistpll
add
or
mov
add
pushf
test
jmp
int3
pop
movsb
add
mov
in
jo
inc
add
mov
loop
into
cli
inc
test
add
mov
loopne
test
add
sub
mov
movsb
inc
and
cwtl
ja
das
push
rcrl
mov
add
fstl
aas
pop
push
pop
jmp
xchg
cmc
jns
fistps
rclb
and
jl
into
add
andb
xchg
sbb
andb
add
or
xor
aam
arpl
xchg
cmp
add
adc
fisttpl
lods
and
add
inc
test
dec
dec
push
loopne
divl
inc
mov
pop
jg
lahf
roll
addr16
cmp
mov
movsl
inc
lahf
aam
or
cwtl
filds
jle
jg
sbb
add
sarl
cmp
test
je
bswap
sarl
mov
outsl
add
ljmp
add
into
repz
dec
stos
xchg
push
pop
xchg
add
and
and
ficoml
mov
and
out
jbe
enter
cmp
cmpsb
pop
push
add
or
hlt
cmovae
jg
test
adc
inc
jecxz
jge
stos
out
mov
ret
cmp
jns
dec
push
sub
add
pop
les
xor
iret
inc
mov
pop
xchg
in
or
pop
lret
aaa
or
shlb
popf
dec
ret
outsb
insb
dec
arpl
push
push
sbb
add
mov
sbbl
add
rolb
cmp
inc
push
mov
or
mov
loop
insl
adc
add
or
push
pop
insb
mov
hlt
daa
xchg
add
xchg
ret
inc
adc
add
lret
stos
loopne
fsubs
add
lcall
add
mov
scas
add
cmp
jg
cmp
ja
xor
outsl
pop
test
mov
xchg
xor
and
add
xchg
xchg
inc
fsubrl
sahf
ds
and
pop
xor
pop
add
push
shll
addb
sbb
sbb
fnsave
sub
jns
add
adc
add
push
out
mov
mov
add
insb
sbb
ja
push
pop
addr16
nop
movsl
into
arpl
std
and
add
stc
ds
add
xlat
rol
scas
pop
sahf
jns
pop
loopne
add
lret
gs
insl
sbb
dec
pop
fidivrs
xchg
xchg
push
add
push
mov
scas
mov
xorb
in
shl
pusha
cmp
lea
ja
dec
mov
sti
arpl
bound
jg
sbb
lock
add
pop
int
shlb
lcall
int3
ljmp
stc
lods
gs
punpckhdq
push
and
inc
flds
pop
add
xlat
sbb
adc
mov
xor
iret
and
loopne
pop
add
xchg
add
mov
inc
add
pusha
lahf
out
pop
inc
mov
jle
scas
shrb
sar
mov
clc
xchg
or
push
cmp
sbb
lds
jl
mov
add
in
int3
negb
aas
leave
sub
in
in
add
lods
out
sub
pusha
lds
and
add
inc
imul
push
and
repnz
add
or
or
pop
aad
add
inc
jae
sbb
adc
frndint
addr16
mov
call
or
pusha
test
add
cli
mov
mov
mov
std
adc
aad
add
cmpsl
add
sbb
cmp
add
push
xor
push
inc
dec
mov
cmp
add
shrl
xor
fisubrl
jae
inc
adc
sub
mov
inc
imul
xlat
jmp
lretw
sub
movsl
test
lods
ja
arpl
xchg
loopne
xchg
cmp
or
mov
push
push
rclb
mov
loop
xor
xchg
rolb
add
cs
jo
lock
pop
add
pop
add
jle
jge
arpl
ret
and
add
inc
into
lahf
jnp
sbb
cmp
cmc
jge
add
std
test
pop
inc
jbe
add
pop
push
loope
mov
pop
negb
test
mov
fadd
inc
add
mov
test
cmp
pop
push
aad
stos
sbb
andb
mov
xchg
cld
movsb
fs
sbb
xorl
add
mov
mov
sbb
mov
jns
cmp
enter
enter
add
arpl
ja
add
jae
je
pop
xor
add
repnz
add
jb
lods
push
popa
mov
sbb
xor
repnz
movsl
push
in
inc
inc
ret
pop
add
sub
out
mov
add
or
xchg
add
int
mov
pop
sbb
cmp
add
cmp
inc
sub
jbe
int3
pop
fs
arpl
push
test
lcall
jge
and
sbb
fidivs
adc
addr16
rorb
sarl
pop
add
add
mov
xchg
mov
push
adc
inc
out
outsl
sti
in
sbbb
icebp
ret
mov
cld
xchg
es
pop
add
pop
and
aam
rolb
cltd
push
inc
movups
add
arpl
fwait
and
add
cmc
enter
popf
xor
xchg
or
shlb
or
mov
pop
mov
adc
push
or
inc
adc
sbb
pop
jnp
pop
jecxz
lock
notb
into
rclb
fistps
lods
add
ret
mov
jns
xor
inc
add
xor
mov
push
jo
rclb
or
xchg
mov
hlt
and
comiss
adc
and
xor
pop
sub
mov
rcrb
jge
imul
sbb
inc
sub
jbe
cld
shrl
ret
add
clc
in
jne
adc
sbb
lea
ss
and
cmp
mov
sbb
mov
movsl
mov
pop
dec
pop
mov
imul
ljmp
loopne
out
and
and
inc
pop
add
and
into
dec
ja
add
jo
rolb
fidivrl
jl
add
lret
popa
push
ror
jmp
pop
fists
add
cmpsb
inc
imul
jno
or
test
mov
pop
call
pop
in
xlat
aad
pusha
pop
jo
mov
fsub
add
call
cmp
fadds
orb
cmp
xchg
loop
cmpsl
pop
cmp
jg
mov
lods
movsl
mov
push
add
xor
ficoml
stos
arpl
js
pop
push
gs
jne
add
jns
stc
xor
sub
or
test
push
fwait
pop
add
in
enter
imul
or
xchg
ficomps
jp
sahf
inc
add
fildl
dec
cld
sub
add
xchg
jb
adc
add
push
cmp
pop
adc
stc
mov
imul
add
rcrb
add
cmc
stc
std
inc
and
add
dec
mov
in
arpl
loopne
add
push
in
cltd
cmp
jmp
push
and
rorl
pop
dec
inc
aaa
in
xchg
rcrl
in
addb
or
sbb
or
into
ja
cmp
push
cmp
jne
jbe
add
xlat
dec
dec
xchg
popl
sub
cmp
in
popf
mov
or
and
adc
add
icebp
or
add
inc
sub
repnz
repz
mov
mov
sbb
insl
call
es
cmp
push
jp
mov
mov
add
lods
inc
xor
push
sbb
cmp
rcrb
xchg
or
xlat
sub
xor
push
push
mov
fbstp
ret
les
dec
into
rolb
sahf
movb
lods
mov
subb
xchg
iret
fsubs
sbbb
adc
mov
lea
add
jge
pop
mov
js
push
or
cli
add
and
cmpsb
imul
inc
dec
push
sub
ljmp
adc
aad
push
jg
lods
in
pop
add
push
xor
add
mov
mov
mov
lock
arpl
adc
les
pushw
cmp
cmp
push
jg
fmuls
add
dec
inc
ror
mov
or
mov
das
sub
add
out
pop
add
cmp
inc
add
les
outsl
add
rcll
cli
pop
add
clc
mov
add
popf
shrb
pop
add
call
loope
out
in
pop
inc
jmp
cmpb
add
jne
inc
add
push
jo
pop
popa
sub
decl
add
mov
negl
fsts
lock
adcl
inc
or
shll
bound
pop
mov
jnp
dec
ret
xor
mov
add
inc
daa
cmpsl
add
fdivs
rcrb
mov
add
mov
ja
mov
pop
add
push
push
jp
and
rorb
push
jnp
inc
cmpsb
sbb
ret
jbe
add
mov
add
sub
add
adc
lods
out
pop
add
in
inc
inc
cmp
mov
or
jmp
jle
pmulhuw
imul
add
jmp
mov
dec
add
fwait
ljmp
push
and
outsb
pop
shl
xchg
mov
test
jp
add
loopne
mov
pop
mov
loopne
pop
add
lds
push
add
int
mov
add
pusha
das
mov
mov
outsb
test
add
pushf
and
mov
mov
pop
clc
in
xchg
xchg
shlb
stc
cmp
nop
or
ret
call
into
loope
pop
mov
fiaddl
mov
xchg
xchg
or
mov
lds
dec
and
inc
je
add
orb
push
sbb
aas
push
mov
lods
pusha
arpl
pop
aad
insl
mov
loopne
mov
mulb
add
inc
ret
lret
cmpsb
add
in
inc
pop
ds
add
cmp
lcall
jnp
mov
mov
adc
gs
rolb
or
leave
pop
repnz
add
outsl
push
lods
cltd
movsl
shll
loop
add
adc
pop
rcrb
test
inc
add
mov
add
push
pop
sar
pusha
into
pop
xor
lea
sub
sbb
jo
rorl
dec
push
pusha
add
push
mov
sbbl
sub
cmc
push
fmuls
or
push
dec
addl
stos
faddl
popf
and
std
add
xchg
adc
jns
jbe
add
cltd
or
push
add
dec
stos
shr
push
int
mov
js
jg
mov
adc
add
pusha
pop
or
xlat
dec
push
pop
add
cmpsl
push
imul
movsl
fnstcw
aam
sbb
or
mov
add
pushf
popf
jb
arpl
adc
cmp
leave
and
nop
jecxz
add
jb
inc
mov
xchg
cmp
mov
push
pop
ret
in
xor
jmp
int
hlt
stos
aas
pop
mov
roll
inc
mov
dec
repnz
cmpsb
pop
mov
cmc
or
dec
add
ret
out
inc
mov
bound
adc
movsl
inc
jae
adc
arpl
add
out
shll
mov
xor
test
addl
dec
jecxz
add
pop
loopne
nop
inc
inc
xor
xchg
cmp
jp
add
dec
pop
add
pop
data16
negl
dec
mov
movsb
cmpb
and
lea
jo
sbb
jmp
jb
add
int3
aam
pop
push
mov
mov
jg
inc
cmp
arpl
repz
int
cwtl
incl
jb
push
cwtl
out
in
add
movsb
jg
ficompl
add
xor
mov
jbe
inc
add
inc
jae
fsubs
lods
push
or
lahf
xlat
loopne
neg
add
add
sbb
xchg
lock
xchg
pop
add
fcmovb
jmp
into
subl
es
inc
and
xadd
push
sub
out
inc
add
xchg
push
shr
js
add
mov
xor
lcall
sahf
in
pop
cmp
jae
sbb
shlb
add
bnd
div
pop
push
add
in
inc
shlb
repnz
cmp
ja
scas
cmpsl
and
test
test
movd
mov
out
mov
inc
cltd
jmp
rclb
out
inc
cmp
sbb
add
sti
std
dec
add
jecxz
dec
out
loopne
xchg
arpl
fdivrl
xchg
repnz
add
mov
in
cmp
aaa
mov
std
sub
dec
rolb
ja
lods
addr16
in
cld
pop
add
adc
imul
pop
fistl
add
ret
cmp
pop
xorb
mov
xor
add
push
push
adc
push
add
bound
push
out
cmp
sbbl
rorb
jge
or
add
add
sbb
push
shrb
add
pop
push
pop
inc
movsl
mov
pop
jmp
pop
cltd
add
sbb
mov
imul
cmp
icebp
cmp
data16
mov
push
add
add
jae
test
or
pusha
dec
dec
inc
nop
scas
and
ljmp
cmpsb
and
inc
lock
inc
inc
test
out
add
mov
cmp
xor
das
adc
add
cmp
rolb
xor
add
mov
inc
int
mov
cmp
pop
ret
iret
pop
mov
xor
pop
cmp
jecxz
cmp
es
pop
adc
gs
das
inc
mov
aam
inc
push
fcomps
icebp
js
aad
push
mov
mov
adc
shrb
add
sbb
xchg
add
add
test
add
push
mov
lcall
dec
pop
fldl
or
sbb
icebp
insl
or
in
movsb
add
mov
sub
add
imul
cmpsb
stos
mov
fdivrl
repz
push
xchg
xchg
das
mov
add
mov
mov
mov
push
add
add
scas
aaa
pop
dec
jecxz
xchg
jp
inc
mov
imul
add
jnp
ja
inc
jae
leave
push
test
jbe
mov
rclb
loopne
mov
add
lds
in
sar
fcmovu
lea
add
inc
pop
xchg
outsl
test
popa
jge
add
subb
mov
ret
jmp
push
adc
mov
inc
xchg
dec
leave
nop
arpl
push
loop
mov
in
mov
mov
pop
mov
xchg
add
mov
ror
mov
push
mov
jmp
mov
add
cmc
add
mov
add
or
loope
in
add
das
js
mov
or
pop
incl
arpl
push
jnp
dec
xor
cmp
sbbl
aam
inc
add
pop
push
mov
push
fnstenv
mov
addb
cmp
jl
or
sub
mov
stos
add
pushf
arpl
pop
add
jae
pusha
adc
add
pushf
test
lds
es
adc
add
paddsw
test
xchg
arpl
out
xchg
inc
inc
dec
fsubp
lock
rcrl
dec
lcall
inc
cmp
mov
insl
add
outsb
arpl
pusha
and
add
pop
push
dec
mov
arpl
ret
insl
add
cmp
inc
ljmp
cmpsl
pop
add
inc
mov
test
lods
repz
add
adc
add
inc
mov
popa
in
addl
mov
movsb
or
adc
mov
sbb
jg
cmc
add
mov
and
mov
stos
jo
xor
int
mull
fsubrs
pop
xor
leave
mov
and
add
js
xor
pop
mov
rolb
xchg
bound
inc
or
add
cwtl
shll
add
popa
adc
xchg
xchg
call
xchg
insb
jne
int
popa
sbb
andb
add
nop
add
daa
rorb
mov
insb
xor
ret
mov
out
sub
incb
pop
inc
into
fiaddl
arpl
dec
mov
sahf
xchg
add
rolb
mov
daa
fnstcw
mov
outsl
sbb
xchg
test
popl
arpl
sahf
adc
jns
cmpb
fcomps
sbb
shlb
shrl
inc
add
popa
popf
push
mov
xor
movsl
test
mull
aaa
dec
sti
ljmp
add
outsl
inc
add
jae
pop
push
push
xchg
sub
sarl
inc
ja
roll
xchg
inc
sbb
and
sbb
xor
outsl
add
das
lret
pusha
sbb
cmp
jae
ret
popf
pcmpeqw
cmp
pop
jle
fidivl
inc
adc
xchg
add
pop
cmp
popa
add
subb
enter
negb
jnp
clc
sbbb
int3
cmp
shr
pushf
movsb
pop
stos
aas
or
scas
pop
outsb
sub
loope
jmp
pop
add
push
pop
dec
mov
jo
xchg
sbb
push
xchg
mov
mov
xor
add
sbb
daa
in
outsb
add
arpl
sti
add
scas
push
inc
test
pusha
and
cli
testl
adc
divl
addb
inc
insb
inc
xlat
test
mov
pop
mov
cmpsb
dec
xchg
xchg
loopne
incl
int3
aaa
mov
dec
xchg
roll
and
or
inc
in
aad
mov
add
xor
or
pusha
or
daa
push
pop
aad
std
mov
and
sub
add
push
pop
adc
inc
jbe
sbb
arpl
aad
mov
stos
sbb
sahf
call
jle
jmp
rcrb
arpl
xchg
lcall
int
add
inc
lods
cmp
cmpb
add
lods
add
test
mov
aaa
pop
jmp
shr
sbb
add
sub
add
ret
in
sub
sarl
movsb
jg
clc
test
icebp
inc
push
test
cmp
pop
out
add
pop
pop
or
std
add
jl
adc
jmp
mov
or
clc
jo
add
inc
or
push
in
inc
and
mov
xor
sahf
mov
in
cmp
rclb
add
mov
sahf
fadd
or
mov
add
rclb
pop
insl
int
andb
push
fbld
inc
inc
inc
ja
in
rcrb
push
int3
test
or
add
sbb
repz
fiadds
pusha
jno
add
pop
insb
mov
add
subl
add
pusha
aaa
repnz
outsl
push
rcrl
inc
jns
add
stc
push
shl
add
dec
push
pop
addr16
jle
loopne
loopne
add
adc
cli
arpl
or
sub
in
addr16
add
mov
xchg
dec
mov
add
data16
cmp
or
insl
xor
or
popf
jo
rcrb
add
sbb
push
xchg
or
sbb
mov
arpl
add
shlb
pop
cwtl
dec
rcl
movl
inc
std
pop
mov
or
add
inc
vmwrite
orb
stc
stos
cld
push
mov
dec
dec
data16
pop
jmp
jnp
inc
clc
push
add
inc
cld
push
add
push
cltd
popf
rcrl
loope
sbb
loopne
jge
dec
sarb
and
fwait
inc
daa
sbbl
pushf
or
fnsave
aas
loop
xorb
mov
inc
mov
cld
add
dec
lcall
in
add
pushf
mov
pop
jae
jb
pop
jle
cmpsl
jno
add
sbb
xchg
fsts
mov
fwait
pop
jne
push
mov
xor
cld
dec
cmc
dec
pushf
mov
push
fsubs
mov
inc
jl
add
fcomi
inc
das
rorl
aam
std
add
push
dec
jo
pusha
rol
fs
mov
mov
cltd
jp
lret
loopne
imul
iret
fiadds
add
inc
lea
mov
pop
and
ja
pop
data16
arpl
inc
mov
inc
xor
pushf
push
lods
adc
in
lcall
loopne
cmp
add
mov
mov
pop
jge
pop
push
adc
and
pop
dec
push
rclb
pop
inc
add
aas
arpl
movsb
hlt
stos
inc
add
int3
jmp
repnz
aas
mov
test
ds
cmpl
xor
add
add
gs
pop
mov
adc
sub
push
adc
adc
call
jns
adc
pop
roll
fwait
sbb
inc
fstps
loop
in
xchg
adc
in
stos
inc
jecxz
add
mov
ja
add
jl
cmp
jns
add
mov
enter
pop
test
add
iret
test
pusha
lahf
dec
imul
repz
mov
out
pop
add
inc
cmpsl
sar
cli
push
add
fadd
mov
ja
paddb
loopne
inc
stos
addb
insl
loopne
add
shlb
pop
mov
rolb
cmpsl
or
sub
es
sarb
ror
pusha
mov
lahf
cwtl
arpl
movsb
add
mov
add
shrb
insb
sahf
enter
in
arpl
dec
add
xchg
imul
repz
in
add
adc
cmpsb
test
or
push
arpl
sbb
mov
sbb
mov
test
or
das
inc
add
lods
lret
sub
cmpl
icebp
push
testl
arpl
sub
jecxz
add
nop
icebp
cmp
or
fcoml
into
add
stos
mov
dec
jo
testb
fmulp
sub
imul
jl
inc
and
bound
inc
inc
pop
mov
out
js
dec
sbb
add
pop
stos
mov
and
inc
mov
inc
or
push
inc
sub
xchg
lea
loope
jb
inc
sbbl
lock
sbb
and
dec
add
push
sub
push
stc
cmc
test
shrl
scas
push
pop
add
into
sub
stc
out
test
jbe
sbbl
add
push
and
cld
push
cmp
cmpsb
addr16
inc
xchg
cltd
mov
pop
push
fildl
cli
jo
lret
jp
imul
pop
test
add
pop
jge
aad
push
add
jb
pop
add
fs
pop
mov
setle
xchg
rolb
outsl
mov
out
adc
loop
pop
jnp
add
dec
leave
repnz
push
pop
out
xchg
mov
jg
add
xor
dec
stc
dec
add
mov
mov
xchg
pop
jge
push
mov
or
test
sbb
mov
add
lcall
sbb
sub
mov
jle
inc
pop
and
add
dec
ljmp
mov
pop
decl
scas
mov
loop
filds
int
push
or
lea
adc
and
jns
cmpb
add
jle
add
inc
or
add
mov
mov
test
sbb
and
aaa
push
mov
push
pop
xchg
daa
dec
sarb
adc
jmp
jl
mulb
add
and
fadds
adc
orl
pop
jno
cmp
ret
mov
bound
rolb
inc
inc
jo
add
and
add
or
loope
add
pop
and
clc
lods
mov
ret
sahf
xchg
mov
add
push
add
outsl
js
clc
stc
incb
add
ret
cwtl
mov
add
das
cmp
arpl
stos
loopne
loop
pop
inc
add
ror
push
cmp
mov
cmp
add
jbe
jo
sti
popa
push
rol
test
xchg
mov
fnstsw
lcall
daa
fcoms
push
arpl
sbb
xchg
cmpsl
insb
cltd
add
stc
nop
mov
imul
fdivrl
sbb
out
jge
push
mov
xchg
mov
out
shrb
out
or
pusha
jnp
add
pop
inc
sbb
loope
movb
sbb
jne
mov
add
adc
and
rcrb
and
popf
imul
mov
arpl
push
or
add
repnz
insl
sbb
loopne
lret
sub
test
jnp
adc
inc
add
xchg
andb
push
push
dec
sbb
xor
inc
add
xchg
xchg
add
jg
pop
add
and
jo
iret
cmp
pushf
cmpb
inc
lea
mov
out
mov
pop
arpl
add
and
shr
loopne
add
add
mov
add
or
lock
dec
inc
mov
add
in
or
push
push
mov
mov
xor
int3
dec
pop
cmp
mov
testl
and
xor
inc
mov
cmp
gs
arpl
lahf
dec
stos
add
mov
cltd
das
add
sbb
nop
inc
jns
add
dec
jbe
pop
cltd
arpl
lds
inc
cld
addb
jnp
pop
fcom
push
outsl
setge
push
lods
pusha
dec
mov
sti
xor
pop
rcrb
std
mov
dec
adc
cmp
add
jo
mov
dec
add
and
push
add
jl
sub
or
fs
inc
mov
push
scas
shrb
jns
test
outsl
inc
dec
in
movb
xchg
xor
cmp
add
cmp
xchg
inc
pop
push
out
jno
xor
mov
or
add
adc
mov
xor
out
cwtl
out
add
push
in
imul
add
jbe
pop
scas
int3
cmp
dec
mov
add
xor
rolb
cmp
add
dec
subb
js
mov
add
cmpsl
pop
mov
dec
sbb
ret
sub
push
pavgb
call
stos
adc
xchg
in
movsb
inc
das
cmp
lret
add
push
stc
bound
inc
sbb
test
adc
mov
pop
sarb
cwtl
inc
adc
jbe
cmp
add
outsl
arpl
add
pop
repnz
sarl
xchg
test
adc
add
xchg
sbb
add
inc
aaa
into
sub
xor
int3
pop
cmp
shlb
jno
aad
push
inc
mov
jge
enter
sarl
cmp
push
push
add
xchg
test
ret
add
mov
outsl
mov
shrl
in
sbb
repnz
lret
and
loope
add
and
std
cmp
sub
inc
leave
test
iret
jns
add
sbb
sub
loop
or
pushl
js
arpl
cwtl
lods
pop
xor
faddl
pop
xchg
adc
inc
je
das
push
jb
popl
dec
jge
into
in
and
mov
mov
add
loopne
cmp
push
testb
add
pop
adc
add
inc
xchg
lahf
add
dec
loopne
push
xchg
mov
test
fucomi
jo
jle
and
movsl
jmp
popa
pop
add
push
mov
add
ljmp
loop
fistps
push
jmp
and
jbe
mov
daa
add
mov
lahf
add
lods
stc
and
mov
add
arpl
repnz
cld
push
add
and
push
lcall
in
shll
mov
scas
ja
add
ljmp
rcrb
loopne
adc
lods
inc
xchg
push
dec
xchg
shlb
push
push
scas
lcall
mov
sar
shrb
test
and
mov
mov
add
bound
ja
mov
inc
mov
loopne
and
mov
mov
or
push
xorb
push
lea
sbb
adc
gs
inc
js
popa
xchg
add
push
inc
enter
add
dec
jge
dec
pop
aas
roll
or
test
mov
ficompl
data16
jg
push
dec
adc
xchg
add
mov
push
or
sahf
sub
or
mov
addl
adc
mov
push
mov
into
xor
pop
dec
popl
mov
jp,pn
cmp
insb
cmp
test
pop
lds
xor
arpl
cwtl
and
dec
add
sub
xchg
jmp
inc
stc
inc
shll
jg
inc
gs
mull
aam
loopne
shrb
fidivl
scas
jg
add
icebp
loop
push
add
ret
out
add
pop
shll
cld
popf
pusha
aam
mov
add
push
lods
int3
imull
cmp
sbb
inc
and
sub
mov
inc
std
pop
into
scas
dec
movsl
cmp
in
enter
push
fsubrl
mov
pop
shll
lea
add
pop
jo
lret
jecxz
enter
jns
add
fbld
push
repnz
add
jne
mov
cmp
out
jo
dec
add
mov
stc
outsl
add
jge
sbb
dec
and
jmp
push
inc
add
rcrl
add
popf
inc
inc
jbe
repz
or
push
test
and
add
sbb
scas
enter
in
xor
rcll
xor
fdivrp
xchg
jl
mov
bound
pop
xchg
in
adcb
add
or
and
dec
fwait
pop
rcrb
aaa
mov
shrl
push
pop
test
or
push
pop
rclb
mov
mov
in
push
fucomi
jno
sub
mov
adc
jl
mov
repz
idivl
jecxz
mov
arpl
fdivrp
xchg
pop
dec
sub
push
fimull
sbb
insb
lock
incb
mov
pop
sbb
roll
jo
lods
icebp
xchg
insl
nop
jle
mov
ss
add
out
test
add
dec
add
mov
adcb
addl
out
fimuls
add
mov
cmp
arpl
mov
or
inc
call
add
test
lods
in
xlat
add
frstor
sub
out
add
inc
jmp
loop
and
movsb
sub
lock
pop
test
mov
lret
setle
cs
and
xchg
xor
out
lock
ficoms
movsl
or
xor
notl
pusha
mov
mov
add
movsb
or
sarl
dec
add
mov
lock
sbb
loopne
or
adc
enter
add
lods
jnp
jmp
mov
imul
jne
arpl
in
sti
aas
shlb
out
sbb
dec
cmp
in
pop
outsl
jmp
testb
mov
outsb
add
mov
cmp
adc
sub
cmp
test
mull
out
pop
lock
dec
add
mov
popl
hlt
in
sub
test
idivl
push
and
mov
inc
dec
lret
pusha
dec
xor
and
push
aad
mov
repnz
add
dec
pop
add
lahf
out
pop
or
stos
into
rorb
xchg
xorb
aad
inc
cli
fstpt
add
and
leave
inc
int3
add
ljmp
add
sbb
jae
xor
and
sub
mov
mov
popf
inc
jge
and
cmovp
jmp
repz
rcll
mov
and
inc
icebp
push
out
fidivl
add
inc
loop
add
ja
outsl
add
pop
inc
pop
fwait
roll
xor
push
shll
sub
mov
mov
stc
je
or
or
sahf
mov
jl
addb
jns
add
mov
inc
pop
mov
push
das
out
loopne
dec
shr
add
ds
jecxz
js
add
ss
cmp
andb
xorl
inc
jle
sub
mov
inc
lcall
mov
sbb
loope
fucomp
in
push
push
nop
outsl
add
lret
add
ljmp
mov
shr
push
lcall
lea
jb
roll
sub
jecxz
add
mov
inc
push
nop
xchg
cmp
add
sbb
push
cmp
mov
push
adc
xor
aam
add
repnz
xchg
nop
cmp
popf
pop
in
pop
mov
pop
sbbb
scas
repnz
aam
cmc
out
lods
xor
nop
jge
int3
ret
js
fwait
and
or
lahf
shrl
mov
inc
and
cmp
iret
popa
cmp
dec
jne
add
jge
insl
dec
andl
out
arpl
movl
mov
dec
push
in
add
cwtl
add
cmpsb
add
or
add
sub
js
in
push
inc
test
mov
inc
pop
xlat
push
add
mov
xor
add
jle
mov
fidivrl
xchg
inc
add
out
mov
adc
test
pop
popa
stc
add
jle
cmc
jecxz
sub
add
jbe
adc
or
add
dec
aaa
mov
leave
jbe
push
push
sbb
arpl
or
push
mov
inc
add
es
sbb
xchg
add
scas
sti
inc
add
mov
rcr
outsb
inc
add
stos
call
mov
sub
es
sti
stos
or
pop
cmc
inc
dec
cs
xchg
lea
and
sbb
rcrl
cltd
ds
sub
ret
jno
sti
rcrb
pop
add
ljmp
jecxz
setnp
roll
pop
out
pushf
dec
icebp
or
mov
add
imul
pop
sub
aaa
into
add
and
jne
repz
stos
pop
add
mov
add
pop
or
and
sbb
jmp
sub
hlt
xchg
mov
mov
lods
lock
cmc
add
mov
arpl
pop
push
xor
push
cmc
cltd
outsb
xlat
fiadds
jo
xchg
push
insl
call
sbb
push
sub
mov
lcall
inc
sbb
sub
rcrl
lcall
pop
adc
inc
loopne
mov
lock
popf
cmp
sarb
pop
ret
xchg
ds
mov
add
mov
xor
push
iret
sub
mov
jae
cmp
add
push
pop
cmp
xchg
orb
js
aad
jb
push
jno
mov
leave
cmpsb
out
sbb
pusha
shlb
ja
repnz
add
ljmp
mov
fbstp
xlat
adcb
ds
js
add
cmp
add
cmp
add
call
pop
and
or
rcll
add
sub
inc
pop
mov
clc
ret
cwtl
add
inc
mov
repz
cmp
and
lret
call
cltd
pop
mov
mov
out
imul
xor
std
push
dec
sbb
mov
dec
jge
add
push
inc
popa
lods
jno
add
ffreep
mov
inc
add
cmc
int
iret
xor
jne
add
repnz
ljmp
lret
add
jmp
shll
jno
add
and
add
pop
sarb
stc
mov
ja
and
iret
add
pop
in
and
lock
or
mov
popa
add
sbb
add
addr16
sub
mov
inc
test
cltd
adc
adc
add
mov
mov
sbb
clc
inc
lods
add
jbe
outsb
sbb
mov
rol
cmc
in
addl
jmp
movsb
les
push
and
jg
add
sbb
add
mov
xchg
into
sarl
mov
or
jnp
add
mov
dec
jno
and
rolb
mov
sub
cmp
lret
dec
sbb
out
test
cld
pop
and
push
pop
jecxz
lcall
imul
ja
call
add
push
fsubl
sub
push
push
test
insb
sahf
pusha
loop
rcll
push
rolb
push
jne
in
test
xor
ror
stos
pusha
fldenv
sub
arpl
lock
pop
mov
inc
mov
cmp
vmcall
add
push
out
jno
sub
add
add
mov
jbe
jp
pop
loopne
inc
dec
mov
jnp
xor
shrl
pop
sub
int
cwtl
dec
inc
scas
and
add
fcmovu
sbb
jbe
jge
pop
out
sbb
add
jmp
add
mov
inc
loopne
sahf
sbb
cltd
sub
adc
rolb
stos
loop
add
arpl
test
dec
add
hlt
daa
or
shll
inc
pushl
sbb
jmp
mov
sbbl
sbb
out
mov
jecxz
and
and
add
rcrb
cmp
movsl
popf
and
pop
push
mov
jnp
inc
add
xchg
mov
ret
add
cmpb
xorb
stos
mov
das
test
add
jbe
sti
or
push
cmp
arpl
pop
jnp
add
aad
rcpps
and
hlt
adc
add
adc
nop
inc
lds
inc
shlb
loope
cmp
dec
adc
or
xor
arpl
adc
jmp
push
insb
add
and
icebp
out
jle
add
iret
add
dec
or
mov
adc
xor
fcmovnbe
dec
pusha
inc
cmp
add
icebp
clc
arpl
test
popa
pusha
mov
mov
cmp
shr
or
mov
xchg
pop
out
sub
jl
push
fsubs
cli
cmp
jg
or
popf
jle
or
in
sbb
fstpl
xlat
loope
outsl
dec
js
cmp
add
lods
decl
adc
pop
jp
in
push
inc
mov
test
jmp
xchg
fldenv
outsb
add
pushl
pop
add
inc
jmp
pop
movsb
pop
in
pop
pushf
mov
addb
mov
cmpl
push
pop
or
repz
stc
adc
and
dec
add
pusha
shlb
inc
hlt
mov
mov
cmpsl
jbe
sbb
add
inc
mov
cltd
fbld
bound
std
mov
call
mov
jecxz
dec
insl
add
or
cld
bound
iret
fisubs
stos
sbb
das
jmp
imul
push
mov
pop
sbb
add
mov
add
test
xor
pop
js
push
shlb
jo
rcl
nop
sbb
lret
adc
icebp
jl
push
cmp
inc
pop
push
mov
add
or
les
xchg
add
addr16
sub
sarb
fsub
jle
out
mov
popa
pop
and
lds
adc
ss
and
dec
out
dec
add
jg
inc
shll
test
add
fbstp
mov
add
sub
sub
std
or
mov
addl
jle
ret
stos
add
inc
mov
add
xor
jmp
or
lahf
pop
add
pop
shlb
jle
push
cmpl
sbb
add
mov
ficoms
int
and
mov
add
icebp
js
movsl
adc
nop
lock
jns
popf
cmc
add
stos
ss
cmp
lods
aam
add
movsl
dec
add
adc
mov
push
stos
daa
testb
xchg
ret
cs
adc
xchg
mov
rolb
lds
imull
push
mov
add
pop
add
in
push
lea
jo
pop
scas
ret
pusha
nop
jo
pop
repnz
or
dec
je
ret
add
jae
insl
inc
mov
bswap
scas
mov
mov
adc
dec
xchg
or
outsl
jg
aad
addb
clc
mov
ljmp
pop
push
xlat
cld
arpl
mul
sahf
pop
cwtl
sub
adc
add
dec
inc
add
mov
add
mov
and
loop
ret
sahf
pop
aam
addr16
xchg
and
and
lahf
xchg
pop
adc
mov
inc
popa
repnz
aaa
test
pop
fbld
add
daa
lock
mov
test
dec
cmp
js
nop
int
cmp
mov
xor
int3
fmuls
pusha
adc
movsl
inc
add
loop
and
ja
and
stos
adc
inc
test
popf
add
add
sub
in
cmpsb
mov
inc
jmp
cli
rorl
sub
add
fwait
les
mov
fsubl
add
test
sub
add
xchg
or
popf
js
push
ret
xor
addb
jmp
arpl
add
xchg
pop
inc
jle
pop
idivl
mov
xchg
mov
sub
jae
ljmp
add
fs
scas
fadds
add
xchg
pusha
sbb
pop
clc
int
fiadds
push
ja
jb
nop
xchg
fbstp
add
stc
dec
pushf
push
or
cmc
cmovae
adc
insb
pop
sldt
in
inc
sbb
test
clc
add
pop
push
repz
negb
pop
pop
fsub
pop
clc
arpl
add
lods
sarb
mov
cmc
cmp
fdivl
std
iret
add
mov
arpl
sbbb
call
pop
mov
loopne
nop
aas
cmpsl
loop
arpl
dec
in
daa
mov
rcrb
jbe
out
icebp
mov
pop
add
xchg
mov
push
enter
adc
cltd
jecxz
aaa
pusha
iret
cmp
xchg
arpl
ror
or
idivl
or
push
dec
subb
and
int3
hlt
iret
dec
test
sbb
inc
mov
cmpb
cmp
jecxz
cmp
fistps
inc
popf
inc
add
pop
sbb
cmp
sbb
sbb
inc
insb
and
mov
and
out
add
xor
pusha
jns
repnz
add
mov
add
and
inc
movsb
pop
add
insb
insl
mov
mov
movups
sarl
and
ret
shll
jne
add
adc
ret
dec
add
sbb
add
sub
xchg
nop
jbe
add
inc
imul
xor
int
xchg
add
lea
push
cmp
jns
sbb
out
out
dec
add
scas
push
roll
dec
jg
int3
fbstp
push
jne
stos
mov
inc
fldenv
add
jp
add
shl
cmpsl
sbb
inc
rcrb
pop
in
add
sti
js
push
shrb
jg
push
and
lret
lds
int3
rclb
lahf
je
out
jns
add
imul
into
out
add
jle
dec
ret
faddl
push
mov
and
fsubrs
hlt
mov
jbe
mov
cmp
cwtl
add
jg
xor
adc
sbb
pop
mov
sbb
add
xor
in
cmc
add
mov
addr16
js
inc
loop
test
loopne
push
add
aaa
mov
imul
flds
pop
test
and
push
pop
sub
nop
mov
mov
jmp
cmp
lods
aad
pop
add
negb
jnp
sbb
sbb
aaa
filds
xchg
stc
punpcklbw
add
sbbl
add
cli
out
inc
xor
push
pushf
mov
pop
mov
push
lds
add
pop
lahf
jns,pt
cwtl
in
cli
add
rolb
mov
movsl
push
cmp
inc
add
test
or
jmp
xchg
or
jge
orb
fiaddl
jp
cmovno
out
repnz
mov
mov
outsl
sub
shufps
into
rcrb
mov
call
mov
sahf
mov
add
lods
push
dec
cmp
dec
add
es
and
add
or
je
dec
jp
jg
or
push
adc
insb
push
arpl
xor
pop
add
loopne
inc
call
pop
pop
jnp
je
cmp
adc
mov
pop
out
popa
pushf
nop
pop
stos
repnz
add
scas
cmc
imul
push
mov
ja
push
cmp
mov
cmpsb
add
add
nop
stos
lahf
add
je
xchg
pop
inc
loopne
xchg
push
cld
add
and
les
add
inc
add
cmpsb
xor
testl
iret
fdivrp
pusha
ljmp
and
je
hlt
imull
add
vpshlw
pop
inc
add
rolb
repnz
add
inc
xor
movl
xor
xchg
sahf
popa
arpl
fdiv
sbb
sub
adcb
push
push
add
movsb
aad
iret
jl
push
cmpb
cmpl
jb
inc
dec
mov
sbb
xor
sbb
sub
mov
pushf
ss
jle
cmp
push
cltd
inc
fimull
out
push
leave
lods
sub
ds
sub
add
jecxz
stos
in
add
pop
aas
xor
stos
add
push
push
sbb
fisttpll
mov
fwait
pop
imul
add
repnz
add
cmpsl
shlb
sub
xor
add
lods
in
or
inc
rorl
ja
lahf
cmp
adc
loopne
xchg
pop
mov
int
inc
and
mov
aad
test
xor
mov
jno
lcall
fsts
or
testb
adc
mov
sbb
ret
ret
insb
cs
xor
add
loopne
cmp
mov
jl
scas
dec
pop
rcr
add
inc
adc
sbb
arpl
add
mov
cli
xor
clc
add
mov
in
or
sub
pusha
out
std
jbe
xorl
stos
sar
inc
add
push
jmp
cld
add
xchg
cmp
out
sbb
add
mov
jl
or
call
inc
lret
add
daa
subb
outsl
mov
loopne
add
mulb
lock
int
cmpsl
adc
add
jle
fisubrs
fdivl
shlb
test
ljmp
mov
ret
js
les
adc
jmp
loope
inc
pop
rolb
xlat
cmp
popa
add
jp
ret
es
bound
or
mov
pusha
mov
push
outsb
rorb
sbb
in
cli
add
and
xchg
add
mov
imul
shrb
dec
or
inc
repnz
dec
je
pop
rcll
xchg
rolb
rclb
ja
add
das
and
ds
movl
insl
xchg
or
in
mov
mov
or
or
cmpsb
xor
push
add
int3
ficomps
int3
push
pop
inc
push
dec
jns
cmp
out
addb
aaa
stc
mov
or
add
enter
ljmp
cli
mov
shll
pop
sub
pop
call
rcrb
add
fstpt
sbb
sub
lods
dec
ret
jmp
push
sub
push
mov
fcoml
add
adc
and
push
mov
cwtl
add
sahf
add
pop
mov
add
xchg
add
jne
jp
pop
mov
add
push
arpl
lods
pop
jns
mov
mov
in
pop
loopne
cmp
and
add
mov
mov
push
test
jmp
ficoml
mov
nop
add
inc
jmp
or
icebp
idivb
fcmovnb
pop
clc
pop
popf
stc
jno
fld1
add
scas
fiadds
js
cmp
xchg
les
in
cmp
add
shll
adc
rorb
outsb
and
ret
jbe
sbb
sub
add
xor
test
pop
movsb
imul
test
scas
aam
sar
add
mov
orb
sbb
out
jns
or
dec
les
aam
sbb
sbb
inc
daa
xor
and
cmpsb
bound
ret
add
mov
pop
dec
arpl
dec
insl
mov
push
dec
ljmp
push
pop
in
scas
unpckhps
ret
mov
iret
sub
push
inc
imul
mov
cmc
mov
ss
add
aaa
push
jle
out
jo
or
xchg
cmp
lcall
jno
loopne
lods
add
push
mov
enter
aas
aam
pop
inc
dec
rclb
jmp
adc
xor
fistpll
cltd
mov
mov
pusha
mov
xor
enter
add
inc
bound
popf
rorl
cvtpi2ps
dec
xor
jbe
out
or
sbb
sub
add
adc
sahf
add
fsub
inc
add
lret
inc
add
mov
jg
and
mov
lock
cmpb
mov
and
mov
pushf
into
xor
out
daa
ret
add
add
pop
xchg
mov
scas
addb
fldl
stos
xchg
pushf
xor
incl
pusha
adc
jle
push
sbb
mov
rolb
dec
ljmp
mov
mov
fwait
mov
mov
inc
and
mov
pushf
dec
inc
inc
movsw
add
mov
sub
mov
add
cmovae
cmpsl
leave
into
jge
jns
add
xchg
pop
sbb
inc
push
mov
loopne
and
add
ss
movsl
call
mov
jno
loope
pusha
fnsave
cmp
push
and
inc
xor
pusha
push
mov
out
adc
mov
or
mov
aaa
xor
cmp
pop
and
negl
fdivl
add
fldl
loopne
push
push
ret
cmc
inc
push
add
sbb
push
adc
mov
arpl
sbb
shlb
jge
ret
add
out
push
sbb
loopne
mov
sub
arpl
pop
repnz
add
out
cs
cmp
add
ss
cli
lds
movsb
inc
sub
xor
jl
js
add
mov
mov
push
pop
or
push
loopne
jg
imul
mov
int
fimull
xchg
in
add
jbe
pop
mov
jge
adc
int
add
inc
movb
mov
xlat
in
lods
pop
and
xchg
adc
jle
fadds
adc
dec
in
sahf
mov
mov
or
mov
push
fisubs
xor
call
pop
cli
movsb
incb
iret
out
mov
outsb
add
and
add
bound
int
arpl
cmp
jl
into
add
aam
pop
popa
xchg
add
fidivrs
add
dec
pop
push
add
je
xchg
arpl
xor
std
push
data16
cwtl
loop
repnz
mov
xor
orl
push
jae
inc
adc
add
fimuls
add
push
ret
mov
arpl
mov
aad
dec
rclb
push
ja
push
decb
xchg
inc
sbb
lret
push
sbb
xor
scas
scas
and
bnd
mulb
jl
cwtl
hlt
ret
xlat
sub
sub
repz
faddl
inc
mov
ret
pop
or
loope
imul
test
mov
sub
sub
sbb
daa
xchg
adc
jge
loop
sbb
frstor
cmp
xchg
push
mov
fiaddl
in
mov
mov
inc
pop
add
daa
adc
add
and
iret
add
nop
roll
sub
ret
pop
addr16
cmp
in
push
hlt
lcall
loop
push
add
sbb
pop
stc
pop
or
stos
loopne
in
sbb
stos
cmp
incb
bound
outsb
sbb
mov
add
fs
ja
inc
cltd
mov
outsl
inc
pop
add
mov
cmp
movsl
pop
lock
jge
out
mov
inc
mov
pop
add
cmp
push
inc
push
ss
jne
fnstenv
jno
push
xlat
cwtl
add
push
inc
es
add
ret
cmpl
jmp
inc
fcom
aas
and
and
lret
aam
sbb
add
sbb
jo
adc
pop
mov
repz
sub
cmp
cmp
stos
rolb
jb
inc
add
sbb
data16
add
pop
pop
hlt
add
fcoml
add
cmp
daa
ds
outsl
add
xchg
or
jne
mov
dec
loopne
mov
mov
sbb
adc
pop
inc
add
xchg
cmp
cmp
jmp
inc
lcall
xchg
test
shrb
bound
nop
sbb
adc
or
or
shlb
dec
pop
scas
test
dec
pusha
iret
dec
out
and
xchg
lds
mov
add
and
add
aaa
incb
in
mov
in
fstpt
or
test
or
cmp
cmp
dec
enter
dec
add
hlt
ret
mov
shlb
sbb
add
mov
push
pop
inc
imul
sbb
mov
ljmp
enter
mov
xor
cmovno
dec
pusha
ret
pop
inc
daa
insl
add
xlat
sarl
and
in
mov
push
sbb
addr16
xorb
dec
cltd
add
and
inc
pmulhuw
andl
pop
lret
aaa
pop
inc
sahf
xchg
cld
jne
and
mov
or
add
jp
dec
or
mov
jns
sahf
lods
mov
clc
pop
add
subl
lahf
push
cmp
ficomps
pop
fistps
push
mov
pop
mov
fdivl
and
dec
sbb
xor
arpl
or
inc
imul
mov
mov
mov
xor
les
shr
orb
sti
ret
addr16
push
sbb
das
cmp
adcb
push
imul
jecxz
shlb
or
pop
pop
cmp
divb
push
add
jmp
sbb
pop
xor
add
es
push
cld
jae
imul
adc
lret
scas
andl
add
jg
out
pop
loopne
add
sub
push
call
loope
sbb
shll
pop
cmp
xor
push
or
or
inc
cmpsb
push
add
test
jne
xchg
add
stos
pushf
popf
rcrl
add
lea
add
mov
pop
arpl
lcall
orb
xchg
ret
ret
incl
dec
add
and
add
or
sarl
add
sub
fldl
rol
mov
jbe
stos
pop
sbbb
dec
gs
xchg
inc
roll
jno
cmpsl
push
nop
orb
pop
subb
repnz
shll
movsb
inc
mov
mov
ret
push
jge
inc
idiv
loopne
push
xchg
mov
and
lret
test
push
push
lea
add
sub
xor
jnp
mov
sbb
mov
jl
dec
shll
or
adc
stos
jle
call
shufps
add
mov
add
pop
dec
add
andnps
pop
mov
jmp
cltd
cmpsl
jae
lds
add
adc
xchg
xchg
mov
in
pop
call
cmp
data16
lea
jg
js
ret
pop
jne
shl
inc
jmp
pop
roll
addl
add
mov
or
pop
cmp
sub
pop
clc
dec
and
sub
stos
fcompl
add
pop
xlat
mov
out
add
clc
push
out
dec
roll
into
push
inc
outsl
dec
pop
mov
scas
jmp
orl
add
shlb
roll
xchg
add
adc
dec
xorb
mov
jns
andb
pop
movsl
or
push
je
popf
add
hlt
cmp
mov
mov
test
jmp
jbe
jg
test
xchg
cmp
and
rorb
ret
mov
lcall
adc
push
or
dec
add
jmp
ja
ljmp
add
loope
xor
and
or
add
inc
adc
scas
cmp
push
cmp
cs
ret
add
fldcw
pushf
push
and
and
cmp
sahf
lea
cmp
shlb
add
std
iret
adc
jo
jg
cmp
xor
add
jb
pop
cmp
aam
inc
adc
and
adcb
js
add
shlb
fdivs
sub
jae
inc
lret
mov
sub
mov
xlat
mov
jmp
rolb
fldl
push
adc
add
push
iret
aas
xchg
sbb
ljmp
xor
inc
mov
mov
nop
and
cmp
add
mov
mov
sub
outsl
sbbb
dec
add
cmc
ja
push
xchg
adc
cmp
add
xchg
mov
shlb
pusha
mov
enter
add
inc
mov
cld
add
sti
push
rclb
and
or
stc
add
add
ret
loopne
aam
add
out
sub
add
sbb
nop
jle
lret
xchg
add
inc
testl
pop
test
loopne
add
cmpsl
outsb
and
add
jnp
loope
or
lods
add
out
std
xor
mov
inc
jno
xor
psubd
xorb
or
repz
ficoml
aad
in
add
xor
add
repnz
push
data16
push
fistpll
in
mov
mov
inc
adc
add
aaa
cmp
jo
je
xchg
mov
fs
pcmpeqd
adcl
sub
sbb
imul
push
add
enter
add
out
push
pushf
pusha
adc
pop
jno
add
dec
lds
test
sub
add
outsl
insb
mov
inc
cmp
adcl
jae
dec
call
xchg
inc
mov
push
xor
outsb
loope
and
and
xlat
jae
add
jne
leave
scas
and
jae
je
mov
and
add
jge
push
sbb
imul
add
jl
and
mov
insl
add
jecxz
sbb
sbb
mov
cli
in
rcrb
stos
inc
mov
pushf
sub
sbb
call
sub
pop
sbb
cltd
push
inc
sahf
daa
les
or
sahf
add
pushf
cltd
add
sbb
fadd
push
lret
icebp
push
rcr
sub
rolb
mov
add
mov
das
insb
and
sbb
push
or
mov
mov
add
jg
mov
add
cmpsl
push
pop
ss
jge
add
cmp
popf
inc
incl
arpl
fdivrl
in
daa
add
stos
xor
lcall
rorb
fdiv
cmpsb
add
pop
inc
pop
pop
push
add
adc
fldcw
clc
xor
mov
ss
add
inc
dec
sbb
mov
sbb
jp
adc
add
not
int3
add
ljmp
sub
daa
cmp
cmp
addb
jns
lret
loop
aas
sarb
add
out
rolb
cmpsb
mov
cwtl
in
jle
pcmpeqb
cmp
fbstp
inc
xchg
sbb
add
rorb
clc
sub
nop
fisubs
xchg
pop
jnp
sub
cmp
flds
pop
push
aas
test
arpl
push
add
mov
xor
push
mov
push
dec
loopne
and
bound
cmc
icebp
aam
pop
jno
imul
fnstcw
adc
jle
cmp
push
push
fistpl
sub
mov
lock
push
std
test
pop
push
leave
jmp
xor
cmp
push
ds
sahf
inc
add
jns
add
jge
arpl
add
stc
pop
jl
add
push
lahf
loopne
jae
lods
jp
push
in
adc
mov
sub
imul
clts
rclb
ja
mov
iret
bound
add
clc
cmp
add
addb
repnz
dec
push
sbb
ret
addl
push
int
pop
dec
shrb
fldl
fistl
rorl
popa
mov
add
cmp
stc
scas
loopne
loope
repz
add
push
xor
mov
mov
shrb
pop
sub
xor
lcall
call
dec
xor
movsb
out
add
ficomps
mov
sub
loopne
inc
adc
dec
mov
mov
addb
loop
daa
dec
dec
and
pop
mov
inc
lea
outsl
add
jnp
arpl
jecxz
add
mov
jle
ds
jge
into
push
sbb
in
mov
and
add
ret
sub
inc
adc
inc
fistps
push
jmp
pusha
add
shr
cmp
jbe
and
add
cli
ret
jecxz
int3
push
addb
and
aas
or
fimuls
jo
or
jge
push
mov
rcrb
push
movb
and
sarb
fwait
bound
mov
test
push
dec
int
rolb
aaa
ljmp
jne
popf
add
fwait
mov
arpl
stos
es
scas
mov
mov
fildl
mov
in
mov
daa
jl
add
push
jo
scas
mov
jne
ret
movsl
sbbb
into
jae
popa
cmovb
sub
add
push
loope
je
lods
std
out
add
test
into
fbstp
add
cmp
repnz
sahf
movsb
xchg
insl
out
pop
sbb
andb
pop
push
jg
and
and
add
enter
out
mov
popf
mov
dec
loopne,pt
lods
sti
pop
shll
and
lods
adc
rcrb
cmp
repz
dec
and
pop
add
mov
add
push
fwait
pop
cwtl
cmpsl
aas
pusha
cmp
mov
jecxz
jae
add
int3
push
fsubrs
loop
mov
sbb
xor
lahf
rcll
ljmp
push
push
add
stos
insb
int
js
pop
and
add
pop
jmp
add
pop
mov
xlat
pop
mov
add
testb
aas
inc
int
dec
mov
lret
add
pop
add
aad
mov
fisubrl
push
fs
mov
inc
lock
pusha
rcl
dec
mov
inc
add
in
jno
cmp
add
lds
shll
cwtl
jp
out
shr
cmc
fwait
or
sub
push
pop
mov
push
add
push
xchg
mov
push
insl
das
jge
andb
scas
lock
add
lods
stc
jmp
xor
ret
hlt
mov
mov
movsl
fwait
inc
aaa
filds
lcall
add
mov
inc
in
adc
xor
int
jae
sbb
inc
xor
addr16
mov
dec
add
add
add
mov
out
add
xor
cmc
cwtl
push
push
inc
adc
andb
push
mov
jb
cmc
dec
lea
add
or
mov
int3
add
or
shrb
sub
movsl
and
sub
loop
mov
cmp
test
enter
jb
add
pop
mov
xchg
sub
mov
jnp
jo
cmp
mov
add
dec
into
mov
push
insl
fistpl
rclb
or
inc
hlt
lods
frstor
cmc
push
mov
sub
sbb
fsubrl
push
add
fwait
inc
sbb
testb
add
push
pop
ds
in
fs
loopne
mov
and
hlt
arpl
stos
pop
add
cltd
jo
rolb
jp
add
mov
add
dec
jle
fistps
scas
outsb
rcr
loopne
pop
add
adc
stos
xor
ficoms
adcl
jnp
scas
mov
dec
ja
shrb
add
xchg
cmp
and
add
jne
call
add
sahf
push
push
and
add
add
xor
into
sahf
addl
cs
inc
add
mov
cmp
pop
sti
inc
add
shl
add
add
les
xchg
jnp
push
dec
js
pop
fwait
push
jmp
loop
mov
cli
push
xchg
sti
add
pop
inc
in
mov
test
sub
inc
xchg
nop
inc
add
jl
sub
or
in
rol
repz
sbb
mov
mov
and
inc
push
mov
push
add
cmp
add
je
rorb
loope
cmp
orl
push
dec
add
fcomps
out
push
in
mov
rolb
mov
int3
shlb
xchg
sub
fsub
ret
add
add
inc
rcrl
fsubr
xor
roll
adc
mov
das
inc
pop
adc
add
sub
dec
insb
push
add
out
popa
sbbl
les
dec
or
rclb
jl
add
rcll
hlt
js
push
shll
je
outsl
add
sub
inc
dec
push
or
and
test
inc
imul
int
enter
sbb
nop
call
into
lods
mov
and
ss
adc
dec
add
sbb
cltd
cmp
cmp
and
in
sbb
incb
and
pusha
orb
lods
pop
push
bound
jg
loopne
adc
stc
jp
flds
cmp
sub
add
enter
movb
or
stc
push
sahf
mov
sub
jae
loopne
sub
shr
add
outsb
insb
in
into
or
inc
call
movsb
adc
mov
cld
int3
xchg
in
cmp
jne
add
xor
movsl
add
aas
sbb
adc
in
stos
mov
jns
mov
add
or
push
mov
pop
aam
adc
stc
aad
test
in
lret
daa
mov
sbb
popa
aas
clc
cmp
arpl
rcrl
add
xchg
dec
pop
es
xor
lret
jp
cmp
popf
push
cli
mov
lret
aas
inc
test
mov
add
push
ret
push
movsb
scas
sbb
add
add
dec
add
int
cmpsb
inc
xor
add
decl
loop
movsl
cmpps
inc
sub
popf
push
mov
mov
push
jecxz
icebp
inc
add
ret
add
dec
lods
sbb
add
mov
rol
fisubs
xor
popa
jmp
mov
cmp
insb
xor
add
or
mov
mov
adc
sub
inc
push
fstps
cmpb
pop
lods
dec
jnp
aas
jge
inc
test
ja
pop
js
mov
fadds
pop
xor
push
add
arpl
inc
pop
cmp
dec
mov
movsl
mov
xor
andl
cmp
sbb
inc
inc
in
rorb
inc
movsb
jns
push
cmp
and
mov
and
mov
js
ss
cmp
xchg
je
jle
shr
filds
mov
adc
addr16
pusha
mov
movsl
mov
roll
pop
push
pop
iret
mov
pop
shrl
imul
add
mov
adc
cmc
sbb
pop
add
sub
in
in
cs
shll
leave
adc
cmp
pop
mov
inc
add
test
mov
push
add
xor
push
out
and
lret
scas
push
clc
cli
pushf
push
out
loopne
add
sub
cltd
incb
ffreep
add
dec
xchg
jmp
push
mov
arpl
jp
std
jns
out
push
inc
push
jl
mov
fsubs
stos
shl
in
and
mov
add
push
js
das
xchg
pushf
std
cmp
repnz
mov
push
subl
pop
mov
xchg
add
out
pop
into
jne
cmp
bound
out
inc
or
adc
and
adcb
xchg
push
bound
cld
sbb
jo
hlt
mov
cmp
mov
rolb
mov
ret
arpl
lock
cmpsl
mov
add
sub
push
sbb
arpl
leave
pop
add
in
cmp
rcrb
sub
fldl
test
pop
add
adc
shrb
cmpsb
aaa
test
sbb
push
push
bound
or
adc
test
pop
pop
rclb
xchg
or
push
cmp
inc
shlb
mov
inc
cmp
dec
lds
cmp
jp
mov
xchg
movsl
push
aad
push
fldl
pushf
add
jle
add
pop
out
add
push
leave
sbb
rol
adc
sarb
sbb
push
fisttpll
out
repz
sbb
inc
dec
mov
icebp
add
popf
mov
pop
or
pop
add
cmpsb
add
xchg
das
xchg
sbb
loop
add
fidivrs
adc
jmp
push
xor
adc
rcrl
mulb
cmpsl
adc
in
push
je
in
mov
xchg
sahf
sub
or
fsubs
clc
xchg
add
xchg
fs
pop
lock
dec
add
jge
sub
jecxz
pop
or
push
movsb
dec
inc
dec
add
push
inc
xor
in
adc
xchg
stc
pop
mov
add
adcb
lsl
xchg
fnstsw
mov
xor
pusha
and
cmpsl
and
adc
mov
insl
lods
jb
loop
sub
push
xchg
pop
test
ret
aam
jecxz
cwtl
and
add
icebp
xor
jnp
add
mov
test
call
pop
das
add
ds
ljmp
inc
arpl
repnz
mov
loop
cmpsl
sbb
xor
jo
inc
lret
inc
js
cltd
in
sub
aas
jb
insb
sub
add
call
add
cmp
shrb
pop
and
pop
pushf
in
dec
call
and
rolb
aaa
pop
shlb
add
xor
ret
xor
add
xchg
xlat
ljmp
ret
pop
int
mov
sbb
repnz
sbb
inc
push
add
fbld
cmp
inc
iret
rolb
lcall
add
push
lret
stos
and
add
sar
mov
inc
in
arpl
imul
mov
fnstenv
cmp
mov
inc
imul
clc
sbbb
xchg
sub
sbb
dec
cmpsb
fbstp
add
arpl
jbe
xchg
inc
add
in
cmp
pop
and
inc
push
psubsb
rclb
xchg
and
outsb
mov
jns
in
inc
push
lret
sbb
cmp
mov
add
xor
lock
decb
scas
stos
jo
ja
add
jg
add
dec
jae
sahf
adc
xchg
adc
add
leave
call
inc
ja
cmpsl
rolb
int3
or
sub
jecxz
jo
js
leave
jns
add
cmp
add
xlat
jg
adc
dec
pop
and
xor
pop
cld
add
iret
push
mov
xorb
dec
adc
std
cmp
inc
andb
pop
add
mov
mov
in
dec
push
jge
add
adc
arpl
jns
add
lock
push
loope
mov
add
push
sbb
add
xorl
fwait
sub
cmpsb
idivb
movsl
sub
xchg
dec
or
jb
sbb
call
sbb
adc
add
push
add
cmp
sbb
pop
mov
xor
lods
dec
mov
sti
ret
ror
mov
push
gs
iret
jecxz
add
xorb
into
out
sub
or
push
add
and
rcrb
scas
loop
pop
dec
add
or
cmp
add
adc
inc
fisttpl
loopne
clc
add
bound
pop
xor
fmuls
je,pn
add
ret
mov
es
sub
inc
jmp
mov
add
loope
in
fdivs
dec
sub
jae
mov
hlt
fsubs
outsl
add
outsb
add
mov
lret
cmp
xor
pop
xchg
ficoms
add
les
int
js
clc
add
sbb
loopne
sub
mov
aad
jg
add
jo
push
mov
cmp
inc
xorb
add
in
dec
mov
inc
stos
movlps
bound
ss
jg
sbb
icebp
repnz
or
add
sbb
loopne
cmp
sti
add
loop
sbb
xchg
subl
subl
sbb
rcrb
sub
jo
add
adc
cwtl
insl
popa
push
js
add
lea
xchg
inc
icebp
xchg
sarb
dec
sbbb
jmp
dec
add
test
outsb
mov
adc
mov
and
roll
dec
stos
push
add
cmp
xchg
aaa
xor
rcrb
adc
lea
add
mov
add
std
push
xchg
out
add
int
pop
fstpt
movsb
add
fldl
push
or
in
and
add
lds
push
shlb
or
add
loopne
mov
repnz
scas
jb
ret
aas
add
stos
orb
add
pop
pop
adc
add
dec
inc
cmp
lea
mov
add
shl
or
add
mov
in
dec
mov
and
push
push
sarb
cmp
xor
sbb
fidivrs
adc
jle
sbb
nop
je
popa
ja
add
add
sahf
arpl
cmp
add
mov
fadd
xchg
cwtl
add
insl
mov
push
and
gs
mov
flds
xchg
jno
jp
cmp
sub
dec
lods
push
add
mov
push
and
xor
adc
rolb
cmp
ds
add
cld
mov
fistpl
cli
mov
xor
call
bound
inc
ret
adc
or
fwait
and
and
mov
mov
pop
incl
decb
pop
sahf
loopne
iret
out
stos
add
lcall
sbb
xchg
shlb
sysenter
xchg
fnstenv
in
pop
add
sti
inc
in
movsl
jmp
add
cwtl
jnp
inc
sub
jl
int
insl
icebp
arpl
lahf
sbb
cmp
xor
scas
pop
paddusb
sahf
testb
setg
mov
add
clc
inc
push
jno
push
lcall
imul
fcomps
lods
in
push
cmp
xor
inc
mov
lds
repnz
xchg
and
sbb
shlb
pop
bound
arpl
adc
pop
inc
mov
test
mov
add
jp
cmp
repnz
push
or
clc
cld
mov
jg
inc
inc
mov
xor
and
ficoml
cmp
dec
in
xchg
into
adc
jo
add
and
ss
jns,pn
subl
fmuls
mov
sub
lock
mov
loopne
dec
push
sbb
test
inc
rcll
je
cmpsl
lret
sbb
cmpsb
ja
add
pushf
pusha
insl
jmp
push
out
loope
je
add
ss
shll
adc
xchg
pop
rol
test
push
and
ds
das
push
iret
rolb
inc
cmp
aas
data16
das
pop
add
sbb
arpl
movsb
add
cltd
stc
mov
hlt
fnstsw
add
out
ds
xchg
push
add
pushf
cld
jg
mov
rolb
js
inc
and
stos
fst
or
jge
data16
push
call
shlb
add
in
or
pusha
insb
dec
add
dec
jecxz
arpl
nop
push
movsl
mov
sbb
rolb
pop
insl
movsl
repz
jl
push
stc
inc
bound
push
jle
shrb
jp
xchg
mov
scas
test
sbb
sub
pop
add
dec
test
xchg
movl
pop
jnp
mov
orb
add
sub
and
lahf
add
std
mov
je
faddl
testl
jp
add
lods
mov
add
and
pop
cmp
mov
outsl
loopne
sub
and
ss
pop
loopne
add
pop
add
lea
popf
inc
aad
jecxz
xacquire
mov
rcr
fstpt
xlat
int
sti
add
dec
out
cmp
or
pop
jg
push
dec
sbb
cmpb
xor
int3
fcom
insl
popf
pusha
dec
mov
mov
mov
fchs
jns
add
bound
call
addb
jmp
mov
arpl
cmp
cwtl
pop
add
fnstcw
iret
mov
in
popf
add
cltd
mov
mov
mov
in
test
ret
sbbb
sti
cmp
adc
lea
jnp
inc
iret
add
dec
repnz
ds
scas
add
adcl
jo
cli
add
repz
shl
mov
add
mov
adc
lret
pop
cmp
loopnew
jmp
mov
adc
pop
lock
and
add
popf
or
mov
add
push
negb
mov
inc
cmpsb
mov
cmp
add
push
bound
lods
daa
push
inc
cli
xchg
add
push
sbb
in
cmp
sbb
flds
add
pop
jb
loop
outsl
les
add
push
and
add
mov
ret
pop
and
pop
add
out
mov
add
rolb
mov
pop
stc
sub
test
fstl
dec
sbb
or
pusha
xor
hlt
mov
add
flds
xor
add
adc
mov
add
cmp
add
mov
cltd
mov
sarl
ffreep
rorb
jns
sahf
mov
mov
sbbb
xchg
inc
push
lret
sbb
sub
add
mov
dec
cwtl
movsl
xchg
add
addl
clc
mov
jo
xchg
add
sub
and
loopne
jbe
and
mov
and
xor
mov
pop
aam
movsl
andl
and
popa
xchg
sarb
adc
out
shrl
imul
js
movsb
imul
mov
push
sbb
cmc
movsl
cld
incb
jmp
xchg
rclb
inc
roll
add
add
xor
pop
add
out
xchg
movsl
sti
leave
add
add
add
sub
jge
andl
lahf
mov
mov
shl
or
jp
xor
adc
js
sbb
push
rolb
cmp
add
lods
sti
in
shr
mov
fisttps
pop
ljmp
push
fwait
test
xor
add
sub
mov
mov
cmp
fists
jae
jmp
or
inc
std
scas
in
jbe
arpl
mov
pop
jle
and
jp
insl
es
add
in
mov
jns
scas
mov
cmpsb
push
outsl
imul
inc
xchg
dec
sbb
sbb
jg
add
dec
add
mov
sahf
aaa
xchg
popa
cmp
shlb
cltd
arpl
lcall
xchg
adc
sbb
cmpsl
jecxz
adc
pop
bound
add
sbb
popf
sar
psllq
add
mov
add
add
shr
mov
popa
sarb
jecxz
mov
arpl
add
jo
cs
clc
add
insl
push
cmpsb
sub
inc
jge
ss
push
ja
xchg
fwait
jg
jae
and
andb
add
and
push
xor
mov
jnp
bound
cs
pop
xchg
mov
je
cmp
push
inc
add
and
clc
cmp
jmp
push
xchg
mov
out
repnz
sub
inc
or
lcall
add
add
add
inc
sub
push
roll
push
inc
repz
jl
movsb
cmp
pop
fpatan
sub
pop
mov
sub
cmp
jo
cs
adc
addl
mov
push
pusha
bound
add
in
decl
and
icebp
add
arpl
push
add
insl
loop
dec
mov
add
add
fiadds
cmp
roll
mov
add
das
sub
sahf
cmp
loopne
shll
adcb
stos
lods
leave
rcll
hlt
mov
in
mov
imul
jle
std
xchg
repz
mov
mov
inc
xchg
add
xlat
dec
lret
test
inc
or
jne
mov
pop
out
sarl
sbb
arpl
xchg
lret
push
cmp
push
add
pusha
mov
lahf
mov
les
add
enter
cld
mov
add
sbb
call
lahf
jle
lds
lret
mov
sub
add
in
mov
add
sarb
iret
and
sub
ret
in
pushf
repnz
and
cmpb
jmp
les
jge
add
inc
aad
rolb
adc
jbe
fisubrs
dec
adc
push
push
add
add
cld
add
mov
and
call
xor
or
roll
and
addr16
cwtl
cmp
add
pop
orl
iret
inc
rcr
inc
cmp
push
sbb
aad
insb
sti
lods
xchg
adc
clc
subb
add
pushf
das
popa
iret
push
dec
inc
xor
stc
stos
inc
add
pop
add
xor
out
pop
push
rolb
mov
jnp
and
mov
fwait
cmovo
call
mov
jne
add
into
stos
add
push
inc
xchg
jns
arpl
testb
jge
data16
outsl
pop
sbb
setle
mov
ret
popa
add
fwait
dec
dec
xlat
and
mov
add
stos
int
xchg
cltd
cmpsl
adc
jns
push
fldl
stc
xor
mov
push
mov
add
add
add
add
add
dec
jmp
sbb
or
xor
cmp
dec
add
outsb
cmp
push
in
pop
and
jnp,pt
jg
and
add
icebp
inc
mov
push
sub
xchg
cli
addr16
lock
inc
pop
subl
shlb
ficomps
jg
push
dec
imul
into
mov
and
mov
fldenv
pushf
xor
cmp
push
or
mov
xchg
cld
add
sbb
dec
arpl
push
add
mov
sti
add
push
insb
in
adc
push
ja
arpl
dec
aam
js
popf
add
inc
and
aam
addb
mov
push
ljmp
mov
addl
dec
divb
add
inc
aaa
jb
loopne
xor
mov
loopne
out
and
pop
pop
inc
movsb
addl
xor
les
xchg
sbb
pop
fstp
push
out
mov
add
and
push
enter
ja
add
test
mov
lsl
pop
mov
loope
mov
or
push
push
jecxz
or
sti
outsl
cmpb
std
jle
inc
imul
fstl
cmp
adc
jb
enter
mov
jo
rclb
lahf
mov
popf
mov
dec
sub
roll
and
mov
decb
movsb
add
inc
movb
inc
test
add
adc
add
lahf
cld
nop
mov
stos
add
inc
sub
add
sahf
mov
push
pop
ja
mulb
roll
mov
gs
enter
add
mov
or
ja
add
scas
xchg
dec
push
sub
sub
pushf
dec
mov
rorl
and
sbb
leave
jbe
dec
mov
add
pop
push
dec
push
stos
or
jns
add
sbb
add
cmpsb
das
pop
adc
clc
inc
add
mov
sahf
push
les
inc
mov
xchg
jbe
sbb
xor
push
test
shl
add
scas
in
jg
push
inc
rclb
add
sarb
add
push
jae
pop
enter
pop
clc
push
push
std
xchg
jo
cli
out
mov
dec
lea
add
or
pusha
iret
mov
push
dec
jmp
bound
add
dec
hlt
out
popf
lock
add
pop
mov
es
jno
lret
stos
addl
rol
mov
cwtl
add
shlb
cmp
in
jle
and
jecxz
add
loop
xchg
inc
xchg
sbb
mov
dec
xlat
outsb
mov
jg
add
add
ret
xorb
mov
roll
add
jb
imulb
sub
sbb
jae
lret
gs
push
pop
or
mov
push
jae
lods
out
jle
cmp
incb
push
ret
adc
shrb
popf
outsl
inc
add
lret
sbb
xor
cltd
xor
add
mov
xchg
or
add
dec
xchg
pop
aad
push
mov
add
pop
popa
in
jge
lret
xor
divl
in
xchg
add
sbb
sarb
pop
icebp
fs
and
mov
lahf
cmp
sbb
cmpsb
roll
mov
inc
xor
adc
xchg
cmp
ror
arpl
fnsave
cmp
rolb
add
hlt
xchg
add
mov
inc
aam
es
std
rorl
int
add
cmpsb
lret
mov
cmp
add
sbb
mov
xor
xchg
lahf
fsubrl
lods
add
mov
repnz
add
jbe
adc
rcrb
mov
and
lock
jnp
sub
filds
add
mov
jecxz
inc
xor
test
insl
lock
add
fldenv
cmp
jg
sarb
jae
insb
add
cmc
js
mov
stos
mov
push
testl
aas
mov
jbe
rol
incl
xor
sub
into
add
in
les
add
inc
pop
cmpsl
stc
push
cs
or
inc
sbb
lds
xchg
roll
in
lock
xchg
mov
mov
add
cld
push
mov
inc
add
xor
jns
shlb
add
rolb
and
cmp
adc
inc
fbstp
fstpl
pop
lea
add
in
lret
sti
add
mov
xlat
add
or
inc
sbb
cmpsb
and
repz
das
int3
push
and
add
bound
add
sbb
xor
push
scas
add
lock
outsb
add
js
lret
fmuls
pop
test
add
movsb
data16
ret
dec
sbb
inc
or
mov
ud2
ds
addb
pop
inc
add
xchg
iret
inc
xor
pop
out
pop
ljmp
movsb
mov
fldl
ret
and
xor
ja
push
cmpsb
jmp
push
add
push
dec
xor
add
ret
cmpsl
jmp
mov
push
les
hlt
push
inc
dec
xchg
lock
icebp
inc
mov
std
int
es
inc
dec
add
dec
es
add
jb
pop
lea
push
push
xor
add
mov
adc
xchg
adcb
in
push
add
sbb
add
bound
push
add
sub
xchg
pop
push
mov
adc
stos
add
into
lods
pop
and
out
cs
add
sub
rcrb
push
mov
push
inc
xor
mov
dec
push
stc
cmp
movsb
loop
subb
and
push
int
cmp
sbb
push
aas
jg
mov
mov
lret
mov
jbe
int
out
add
cmp
test
loopne
inc
sbb
loop,pt
nop
stos
sahf
call
cmp
or
mov
mov
add
sbb
je
fstpl
out
add
rol
jae
jb
or
pop
inc
outsl
cltd
add
mov
rolb
inc
mov
fistpl
sbb
inc
in
insb
mov
shl
rolb
add
fildll
std
fidivrl
inc
dec
jge
add
inc
and
mov
add
rclb
add
mov
daa
clc
cmp
add
xor
mov
sub
in
loopne
dec
add
inc
push
dec
mov
scas
cmp
lods
cs
cmp
out
adc
mov
in
out
and
aad
add
fnstenv
dec
fimuls
fwait
imul
xor
std
jne
mov
pop
hlt
xchg
pop
mov
pop
push
mov
hlt
cmpsb
add
les
pusha
inc
jecxz
add
push
pop
inc
add
sbb
ret
rorb
xchg
add
adc
dec
ja
cmpsb
xchg
add
pusha
in
add
push
cwtl
test
xchg
wrmsr
or
xor
jns
or
dec
xor
cltd
jnp
dec
fcoml
sbb
movb
sti
mov
add
popa
push
aaa
arpl
hlt
mov
rorb
add
cmp
cli
addl
sbb
rcl
cmp
repz
pop
adc
imulb
push
mov
inc
pop
lahf
int
mov
pop
add
cmpsl
lret
inc
rolb
popf
and
add
ret
fwait
add
mov
call
int3
adc
add
inc
or
andb
movsl
mov
sbb
mov
add
add
outsb
mov
orl
and
leave
and
rcrl
inc
fstl
pop
cmp
push
mov
test
push
pop
fildll
inc
dec
mov
jo
lock
cmp
adcb
mov
dec
mov
into
xchg
stos
and
fstl
sbb
fidivl
fs
dec
shl
add
jmp
add
jge
sub
rclb
add
roll
int
das
pop
loope
imul
cmpl
inc
cmp
sbb
fiaddl
dec
stos
mov
xor
and
in
xor
dec
pop
bound
xlat
out
lods
subl
or
and
clc
dec
mov
xchg
add
or
les
add
sahf
fdivrs
add
mov
fbstp
js
sub
or
add
pop
pushf
aam
bound
lods
add
arpl
jmp
push
sarl
sbbb
pop
add
test
cltd
inc
add
or
jne
arpl
fcomip
xchg
push
add
js
dec
push
mov
inc
lods
jnp
fstpt
call
push
mov
xor
mov
nop
add
push
mov
out
xor
xchg
inc
repz
rcll
dec
popf
in
insl
mov
ror
sbb
add
xchg
sub
and
push
arpl
inc
sub
lock
add
call
setge
icebp
jae
cmp
pop
outsb
sub
fiaddl
cmp
in
mov
inc
scas
add
insl
xor
sub
repnz
add
mov
ja
dec
jmp
inc
or
out
popf
or
adc
sbb
inc
dec
add
jge,pn
lds
shr
xchg
add
cltd
rol
lods
insl
or
cmpsl
int3
jge
hlt
imul
jo
dec
cmp
push
subb
adc
mov
add
jne
arpl
aad
jno
inc
mov
lret
imul
scas
add
stos
jae
shrb
popl
xchg
adc
xchg
imul
popf
dec
dec
inc
in
add
sub
add
add
lret
push
and
and
add
pop
pop
jno
std
push
or
dec
jmp
ret
lret
mov
jecxz
sti
cmp
arpl
jg
mov
cmp
in
cmpsl
sarb
popf
jecxz
fldcw
mov
pop
aaa
pop
in
xchg
sbb
addl
subb
inc
sub
loopne
dec
add
sbb
inc
inc
mov
push
jo
mov
and
dec
jbe
push
dec
out
pop
mov
xor
jl
lret
add
sbb
lock
jne
in
sahf
lret
dec
inc
and
bnd
inc
or
xchg
clc
cmpsb
or
dec
sub
adc
cmc
jecxz
enter
pop
rcl
aaa
xchg
cmpsb
xor
repz
jle
andb
arpl
lret
hlt
bound
push
push
aaa
add
adc
or
shlb
ljmp
add
jb
xchg
jmp
xor
add
mov
jecxz
add
sub
cltd
shr
ror
cmp
pop
lret
inc
push
ljmp
data16
pop
mov
add
fmull
xor
cmp
mov
xchg
xchg
inc
add
scas
iret
clc
jmp
mov
sbb
add
add
push
mov
stc
add
inc
cmp
add
leave
subl
arpl
add
js
sarl
add
pop
mov
mov
jnp
pop
push
ds
inc
xchg
and
bound
pop
andb
cmp
add
mov
add
cmp
outsb
daa
jne
sbb
repz
jl
adc
rcr
cmc
add
mov
pop
fwait
arpl
jmp
mov
aam
push
cmp
shl
test
jb
inc
or
dec
mov
inc
dec
pop
mov
stc
add
aas
mov
add
mov
sub
dec
cmp
rcrl
mov
fnsave
out
add
mov
mov
push
add
and
gs
inc
shl
add
and
inc
out
pop
cld
fnstcw
jge
add
push
sub
outsl
jmp
push
xor
pop
mov
lea
sub
cmpsl
test
cmp
pop
arpl
inc
repnz
xor
jne
push
clc
cld
sub
jp
add
jle
rcrb
cmp
inc
mov
hlt
fisubrs
jg
fmuls
popf
push
mov
int3
aas
addb
push
mov
call
add
rdpmc
add
fsub
leave
or
les
pop
add
jge
rol
int
mov
inc
and
push
dec
sbb
lret
add
rcl
adc
jne
add
pop
cmp
mov
je
push
mov
sub
pop
dec
inc
test
adc
add
mov
push
in
inc
add
cli
fwait
jg
mov
inc
push
ret
add
pop
sarb
mov
fcompl
fwait
xor
ret
lret
mov
inc
leave
cmovae
sbb
in
pop
add
add
pop
lahf
sbbb
or
cmp
clc
add
fnstsw
mov
mov
add
mov
mov
mov
dec
mov
in
add
call
shlb
insl
lret
iret
orl
into
scas
and
push
and
sub
out
arpl
pop
js
test
adc
jecxz
dec
xor
fisubl
dec
and
fstpl
je
add
push
fmull
cli
ret
sub
aaa
jge
lods
xlat
push
pop
add
shl
jae
mov
cmp
inc
push
xchg
pusha
pop
mov
dec
loop
add
fdivrl
addl
inc
xchg
shl
add
cld
loope
rol
add
out
gs
inc
test
pop
adc
aaa
in
add
decb
pop
xorl
sarb
mov
push
js
testl
mov
sbb
xchg
pusha
mov
in
in
pop
int3
sub
jg
and
pop
add
loopne
jb
push
jle
lahf
add
hlt
js
and
adc
xor
imul
jge
mov
cs
shl
sub
xchg
mov
clc
adc
mov
and
push
rolb
lea
pop
xor
inc
out
loop
mov
add
sub
mov
mov
pusha
loop
push
adc
pop
fcmovne
or
dec
sarb
aaa
inc
pop
test
or
pusha
mov
clc
jp
outsl
sub
lock
test
lcall
in
cmp
scas
stc
push
jl
roll
adc
xchg
shlb
jb
inc
sbb
dec
data16
sti
xor
repz
pusha
inc
inc
pop
mov
mov
dec
lahf
or
add
gs
addb
mov
add
mov
out
push
bound
add
cwtl
fnstenv
xchg
je
add
mov
mov
pop
or
cmp
mov
jbe
cmovg
cmp
sarb
ret
mov
push
fldl
mov
xor
mov
test
or
inc
fs
add
add
fisubs
dec
push
roll
fwait
ret
xchg
or
incl
inc
xchg
in
stos
into
pop
clc
hlt
lret
subb
fnstenv
push
pminsw
shl
shlb
mov
insb
inc
mov
mov
add
aaa
cs
repz
popl
unpcklps
jnp
dec
inc
ret
stos
jo
add
mov
mov
add
dec
mov
or
pusha
lods
pop
test
jne
add
cmc
loopne
mov
or
stos
insl
add
and
and
xor
add
adc
lret
in
pop
inc
out
les
inc
arpl
leave
cld
jge
mov
ret
add
xchg
call
into
jl
and
xchg
jb
pusha
mov
stos
push
sbb
mov
aas
out
clc
mov
mov
dec
adc
push
add
jecxz
inc
fmuls
jg
popa
pop
add
jns
sbb
push
ljmp
pop
inc
repz
test
mov
adc
std
inc
mov
fimuls
push
fs
das
rorl
arpl
sbb
ljmp
push
aam
jo
shr
imul
enter
xchg
add
xor
jae
shr
add
pop
or
xchg
repnz
out
inc
push
sbb
add
or
jb
loope
stos
arpl
sbb
pop
inc
inc
sbb
iret
rorl
insl
add
inc
cmp
jnp
or
and
jbe
xor
stc
sti
mov
insl
and
cwtl
sbb
ss
mov
fnstcw
add
inc
stos
push
cwtl
cmp
sub
addr16
pop
arpl
mov
mov
sti
or
add
jb
sbb
dec
add
shrb
push
js
cmp
jecxz
xlat
sti
repz
std
add
inc
xchg
fidivs
ret
add
lret
add
push
pusha
arpl
mov
xchg
add
or
in
rolb
xor
cld
cmp
or
sbb
cmc
add
mov
es
adc
arpl
stc
mov
inc
lods
cmpsb
add
push
mov
add
sub
push
addr16
add
cmpsb
out
mov
dec
and
movb
loope
cwtl
inc
sbb
fdivs
xlat
ljmp
movsb
loop
pop
jge
lahf
add
sbb
sarl
inc
orb
jnp
dec
adc
je
lcall
int3
push
push
vmovaps
fisubrs
xlat
add
inc
fsub
test
add
xchg
int3
jge
arpl
dec
add
clc
loopne
cli
sub
cwtl
mov
inc
sub
push
cmp
rclb
pop
add
mov
add
iret
rcrb
stc
add
lea
cmp
insb
add
lods
mov
aad
fisttps
andb
roll
hlt
inc
in
adc
xor
xlat
enter
shlb
pusha
lock
sarl
orb
pop
shl
aad
add
push
shll
pop
jb
push
inc
pop
add
nop
mov
inc
sbb
xchg
lods
cmp
and
dec
jg
aam
or
jns
add
repnz
add
out
xchg
add
js,pt
dec
add
inc
cmpsl
dec
cmpsb
pushf
jle
add
cmpb
add
jmp
add
in
xor
add
dec
shlb
add
outsl
sub
and
mov
icebp
push
aam
pushf
pop
xor
ror
inc
adc
add
stos
sbb
fs
and
add
or
push
ja
dec
pop
jnp
in
add
js
insl
inc
mov
mov
add
add
cmp
bnd
adc
add
mov
sub
addb
mov
sub
mov
test
inc
pusha
aam
mov
or
pop
add
jl
add
in
testb
mov
xor
add
out
cmp
lods
mov
sbb
fildl
mov
mov
jae
jb
adc
sub
sbb
cmp
in
pop
nop
cmpl
in
fadds
fsubl
mov
xlat
mov
je
call
call
inc
sti
inc
nop
addb
js
lods
mov
mov
mov
adc
repz
jne
sbb
incb
call
adc
inc
pop
fldl
push
addb
mov
add
sub
lds
repnz
lcall
push
add
xchg
inc
adc
into
addb
xor
test
addr16
xchg
clc
xchg
mov
xchg
and
mov
add
cmpsl
out
add
adc
arpl
pop
fsubs
dec
add
mov
jle
sbb
mov
nop
mov
into
pop
arpl
jmp
inc
lock
add
cwtl
push
call
cwtl
push
jge
and
ret
mov
pop
loopne
rorl
cmc
pop
and
mov
xchg
or
jp
in
in
out
mov
negb
inc
jg
add
push
stc
aad
pop
dec
push
xor
dec
test
scas
sbb
jb
add
pushf
xchg
pop
lahf
ss
andb
ret
dec
stos
mov
rcrl
pushf
shll
into
dec
dec
add
xchg
add
add
mov
bound
push
sti
cmp
add
jne
andb
add
sbb
jg
pop
in
add
pop
sub
mov
das
in
dec
jg
push
mov
add
jo
movsb
int
dec
lock
adc
add
add
push
cmp
mov
popa
pop
mov
mov
popw
test
inc
push
add
cltd
in
fsts
movsl
in
mov
xlat
adc
mov
int
jl
sbb
movl
jg
js
pop
mov
popa
add
leave
fnsave
mov
xor
jnp
mov
mov
push
popl
dec
inc
aaa
inc
or
add
int3
pop
jp
and
lds
push
rcrb
inc
jns
pop
or
inc
xchg
adc
mov
fs
push
or
cs
sbb
movq
xor
jo,pn
sbb
adc
fst
jo
push
add
imul
rorb
sbb
adc
ret
out
jns
mov
push
add
mov
jl
aad
inc
ss
add
mov
add
mov
rolb
inc
adc
cmp
out
push
dec
iret
xchg
mov
sbb
imull
int
inc
inc
inc
sub
xchg
inc
mov
gs
jne
pop
outsb
fnsave
adc
lahf
inc
testl
inc
paddusb
imul
mov
mov
mov
cmc
call
jno
mov
sbb
dec
pop
in
pusha
xchg
mov
lcall
mov
and
movsb
add
fisubrs
aaa
out
test
insl
test
jge
and
jle
inc
roll
pop
mov
inc
mov
pop
mov
out
add
sbb
push
sub
inc
pusha
cmp
insb
add
dec
xchg
test
rol
mov
aam
add
mov
dec
ja
mov
out
mov
push
or
icebp
push
cmp
sub
in
sbb
mov
in
jp
add
xchg
pop
pop
push
bound
out
inc
hlt
inc
mov
adc
rcr
and
mov
les
in
roll
arpl
nop
cmp
add
insl
data16
jnp
add
jnp
cmp
ljmp
mov
push
and
push
shrb
pop
jecxz
jle
mov
jo
add
ja
pop
cmp
test
repnz
sbb
xor
xlat
rorb
aas
sbb
xchg
add
pop
insl
or
ljmp
add
addb
add
aad
repz
ds
jecxz
and
xor
pop
shlb
repnz
cli
lret
pop
xchg
push
push
cmp
dec
inc
cmpsl
imul
mov
aad
mov
cmp
fucomi
xchg
xchg
push
mov
in
xchg
add
stc
mov
mov
xor
arpl
adc
cmp
or
inc
or
repz
hlt
sar
jmp
test
shlb
sbb
mov
add
cmc
inc
ret
inc
fldt
in
flds
add
test
sub
clc
mov
aas
mov
mov
mov
adc
mov
mov
arpl
lcall
pop
dec
mov
add
sarb
das
add
cmpsb
roll
mov
add
mov
imul
add
loopne
inc
jg
in
pop
add
faddp
mov
addl
xchg
shlb
xor
shll
push
adc
jp
sarb
sbb
ds
mov
scas
movsb
aam
sahf
add
fmuls
popa
dec
sbb
add
push
dec
mov
sbb
xchg
dec
fldl
rolb
mov
call
jo
or
ja
xchg
das
sbb
push
iret
mov
add
xor
repnz
test
mov
in
iret
add
insl
xchg
int
sahf
inc
in
hlt
loopne
lds
paddw
inc
rorl
sub
sbb
and
push
movsl
outsl
loop
icebp
inc
xor
sub
enter
add
sbb
add
rcrl
sub
mov
std
loopne
aas
xor
cmp
add
xchg
adc
add
outsl
mov
lret
cwtl
push
ror
mov
add
rolb
sub
js
add
mov
imul
mov
add
pushf
lret
and
popa
jmp
sub
pop
repz
pop
inc
push
inc
arpl
xor
mov
xchg
inc
jno
mov
adc
ret
mov
pop
push
hlt
add
sbbl
add
adc
sbb
cmp
add
push
push
jl
xchg
mov
iret
push
add
std
mov
or
add
push
sub
dec
lds
cmp
rcll
scas
or
or
add
test
addb
fcmovbe
pop
xchg
or
xchg
or
repz
ljmp
enter
pop
das
clc
sub
ret
and
or
icebp
sbb
adc
pop
fwait
pop
add
into
pop
adc
push
insb
pop
movl
addr16
add
push
mov
add
push
rolb
mov
inc
popf
pop
dec
inc
add
nop
inc
sub
push
mov
cmp
mov
movsb
and
sub
cmpsb
les
mov
into
push
xchg
shl
inc
orl
out
pop
arpl
lock
pop
xlat
inc
sub
sbb
add
dec
cmp
out
add
imul
sub
push
fnsave
xchg
add
mov
mov
xor
push
pop
dec
shll
add
arpl
jbe
mov
pop
pop
jne
repnz
pop
fnsave
andl
adc
les
push
adcb
sarl
xchg
aam
push
loope
dec
add
jbe
fnop
mov
lods
iret
inc
cmp
sub
sbb
outsb
jl
push
and
shr
push
mov
loopne
and
mov
into
xchg
adc
push
sub
add
sahf
loopne
mov
xchg
mov
cwtl
lcall
jns
xorl
lret
leave
sub
mov
movsl
jo
and
test
add
mov
mov
out
or
add
jle
pop
mov
sbb
pop
test
in
add
mov
push
lret
mov
mov
cmpsl
pop
jnp
cltd
add
mov
fs
sub
rorb
push
add
pop
movsl
jg
pop
stos
add
dec
hlt
fstpt
inc
add
add
scas
or
xchg
pop
and
inc
jle
add
pop
or
add
daa
jbe
push
cli
shll
imul
cmp
add
jmp
mov
rolb
mov
lret
cli
loopne
and
push
test
inc
lea
cmp
rolb
lret
in
filds
js
mov
jo
sbb
pop
and
lcall
repnz
gs
mov
daa
cmp
xchg
adc
lock
mov
and
ficoms
jle
cmp
jg
inc
gs
int3
xchg
test
test
adc
adc
cmp
pop
mov
aas
sbbl
add
popa
out
mov
jae
das
add
push
xchg
cs
dec
add
sbbl
mov
mov
add
fistpl
negb
or
pop
int
cmp
add
inc
stos
mov
add
sub
and
dec
fdivrl
dec
jbe
add
jg
and
cmp
jns
aaa
data16
add
jbe
cmp
xlat
inc
pop
add
xor
enter
loope
add
mov
inc
pop
cmpsl
adc
lcall
repnz
xchg
add
js
jl
xchg
pusha
sbb
add
pop
loope
sar
fwait
add
jae
add
nop
addr16
scas
inc
push
cmp
and
imul
sub
add
rcrb
orl
push
add
adc
sbb
jne
push
aaa
sub
test
push
push
or
pop
mov
imul
int3
mov
xorb
popa
ror
dec
xchg
adc
adc
sahf
mov
add
call
xchg
sub
out
mov
mov
cmc
es
jns
add
adc
pop
rolb
ja
icebp
mov
xchg
call
nop
cmp
mov
pusha
sahf
arpl
call
dec
ds
shrb
insl
add
sbb
sbbl
hlt
mov
jo
dec
pop
xor
add
mov
add
sub
add
mov
and
mov
mov
shlb
push
sub
shlb
sti
mov
addb
jb
stc
ret
flds
xchg
or
nop
clc
scas
adc
add
repnz
sbb
push
cld
ja
add
dec
leave
fstpl
xchg
add
jnp
xchg
mov
push
insb
scas
pop
arpl
add
imul
jnp
seto
cmp
pusha
ret
cmpsb
add
dec
pop
xlat
mov
pop
test
test
add
dec
xchg
mov
add
mov
test
lret
and
pop
jns
inc
int
dec
jnp
mov
mov
mov
and
fistps
insb
divb
jg
xchg
push
and
inc
test
jmp
es
dec
dec
add
icebp
add
sarb
jge
pop
sti
sub
aaa
push
cli
xlat
arpl
movlps
ret
inc
es
add
or
cmp
rolb
rep
or
lds
pop
jnp
add
pop
cmp
add
inc
je
mov
sub
adc
in
dec
inc
pusha
or
add
pop
and
popl
rcrb
insl
jg
or
pusha
lds
add
cltd
push
adc
not
add
add
add
aas
sub
stc
pop
movsb
or
sti
pusha
stos
clc
pop
mov
adc
adc
xor
add
sar
out
mov
pop
jg
test
pop
inc
sub
add
sbbl
mov
adcb
mov
pop
cwtl
inc
add
push
stc
sub
push
outsl
mov
add
in
andl
sbb
stos
pop
mov
add
sub
mov
loopne
jnp
bound
cmp
pop
add
popa
ret
repnz
xchg
cwtl
add
ljmp
add
imul
arpl
data16
cmp
push
sbb
cs
out
add
ss
jl
and
imul
or
repnz
or
rcll
lods
dec
mov
pop
lahf
xorb
loopne
ret
cld
sbb
out
inc
add
or
jecxz
mov
pop
cmp
data16
inc
pop
das
push
xchg
test
pop
in
in
stos
lret
sub
sub
pop
pushf
inc
jge
dec
cld
je
fstps
inc
clc
adc
inc
lock
jo
daa
pop
jle
jbe
jle
pop
sbb
loopne
pop
push
aaa
mov
stos
sbb
call
movsl
add
imul
pushf
filds
add
push
inc
add
push
mov
jo
add
filds
mov
pop
or
in
popf
movsl
inc
mov
cmp
addl
out
out
inc
sub
and
rolb
rorb
aad
inc
add
and
fistps
iret
and
mov
or
add
popf
xchg
mov
fwait
mov
add
cmpsb
jns
sbb
sub
cwtl
xchg
add
test
pop
cwtl
push
jmp
sub
adc
inc
loop
out
add
inc
jl
lret
mov
jp
mov
sub
sbb
in
sub
push
xchg
add
int3
mov
popa
std
lock
mov
add
add
or
andb
sti
cmc
mov
mov
enter
movsb
pop
cmp
repnz
or
adcb
testb
lods
mov
into
add
jnp
mov
jns
ja
and
sbb
mov
shlb
inc
add
adc
xor
inc
cmpsl
dec
push
cltd
inc
push
jo
mov
add
and
flds
test
mov
pop
fisubrs
ret
hlt
cmpl
out
add
mov
xchg
negb
dec
loop
fucomp
repnz
xor
push
pop
call
inc
into
shll
push
adc
cli
shlb
inc
test
popf
push
icebp
add
lock
add
test
xchg
xor
iret
call
lcall
clc
jnp
addl
pop
xchg
vmread
dec
in
push
add
pop
dec
mov
loopne
add
and
lahf
pop
adc
or
into
inc
wrmsr
mov
or
adc
jo
push
push
jbe
pop
mov
arpl
mov
push
add
je
lret
pop
mulb
ret
jg
push
dec
imul
mov
ds
push
jnp
jge
loopne
jns
dec
shrb
mov
add
or
adc
cmp
faddl
cwtl
mov
lcall
push
adc
in
mov
stc
and
cmp
and
repnz
jg
jne
dec
sub
xchg
and
filds
jecxz
pop
mov
xchg
and
sub
mov
jl
xchg
sub
mov
push
pusha
fdiv
in
cmp
addb
test
cltd
add
xor
rorl
je
and
mov
cmc
add
sti
out
inc
fsubrl
shrb
mov
imul
jmp
adc
test
fidivs
call
out
lods
cs
pop
or
lock
mov
shrb
inc
test
mov
add
sub
add
dec
in
sub
in
mov
jo
hlt
out
addl
inc
int3
inc
add
and
dec
sbb
aaa
enter
xor
out
aas
ret
je
xchg
loopne
add
mov
mov
stc
mov
sahf
call
negl
sbb
pcmpgtb
hlt
pop
add
shlb
cltd
out
jno
jo
or
cli
add
arpl
sbb
pop
aas
add
mov
addl
cltd
icebp
sbb
test
add
mov
xchg
ret
add
inc
in
insb
hlt
add
inc
jno
mov
add
shlb
mov
mov
add
mov
aas
sub
cs
jge
pop
lea
add
xchg
movsl
add
sub
rorb
ret
mov
sub
mov
pop
es
add
mov
sti
pop
pop
xchg
mov
xchg
aaa
cmp
fbstp
subl
pusha
push
xchg
xchg
adc
add
ljmp
pop
mov
mov
cs
adc
sbb
insb
jo
f2xm1
test
add
rol
inc
lret
jg
push
push
sub
add
in
dec
jnp
dec
test
jmp
lods
cmpsl
movsl
add
inc
int3
scas
and
cmp
inc
arpl
add
shl
cltd
push
dec
rorb
pop
jne
test
xorb
sub
scas
pop
mov
fwait
pusha
xchg
addb
data16
stc
in
jbe
push
sti
loopne
add
push
dec
ret
push
push
test
shll
addr16
sahf
insb
add
xchg
xor
sbbb
inc
cmp
inc
dec
jbe
add
test
loopne
inc
loope
cmp
add
cmc
add
inc
cmp
add
push
sub
dec
push
cmp
push
add
cld
pop
dec
sub
dec
push
pop
sub
pushf
add
mov
and
clc
jle
repz
out
xchg
adc
jecxz
outsb
clc
adc
dec
add
mov
add
shll
jmp
mov
pusha
js
add
ror
or
sub
push
xchg
cmp
rorl
arpl
into
push
cmp
push
pop
sub
add
arpl
cmpsb
nop
stos
bswap
xchg
lret
and
push
or
insb
inc
aad
gs
push
add
test
lock
or
fistl
push
jl
xlat
arpl
sbb
shr
jns
xor
sti
enter
mov
add
mov
js
push
jecxz
add
out
faddp
std
and
add
mov
cmp
mov
test
push
pop
sbb
lock
sahf
xor
sar
dec
popf
push
shlb
mov
cmpb
inc
add
jbe
adc
inc
sarb
aas
add
or
add
lcall
add
mov
inc
in
add
in
xchg
lahf
inc
add
aaa
add
pusha
sbb
enter
aas
leave
jae
cmpsb
dec
push
ds
xchg
mov
lret
cmpsl
mov
xor
shlb
shll
ret
cmpsl
call
mov
jl
or
repz
test
fdivr
and
adc
sti
add
and
fmuls
aas
pop
add
push
shll
imul
and
sbbb
in
fsts
mov
add
in
push
fwait
mov
add
sub
leave
mov
popa
lret
iret
sti
add
cmp
xor
loop
cltd
push
fnstenv
pop
xlat
pop
in
scas
xorl
lods
test
cmp
cmp
mov
rorl
shll
sub
xor
orb
xchg
add
ret
sbb
xchg
shrb
jbe
adc
repz
int
or
shrb
add
rcll
pusha
test
fisubl
mov
add
adc
ret
add
mov
dec
loopne
std
addr16
sub
jne
ret
add
faddp
pop
sub
arpl
repz
add
xchg
push
pop
aas
inc
insb
fcompl
jb
andb
jo
xchg
add
mov
or
xchg
dec
stos
fs
es
cmp
add
fstps
add
cmpb
add
je
or
fwait
loopne
add
ljmp
push
icebp
fildl
cmpsb
and
xor
push
jp
negl
pop
lock
fs
enter
mov
dec
add
xchg
inc
aam
inc
lret
stos
adc
mov
fsubs
jmp
mov
rolb
and
mov
inc
adc
push
adc
mov
out
loopne
lods
daa
mov
popf
xchg
or
pop
xor
repnz
dec
add
stc
aad
push
js
and
sti
loope
add
data16
pop
inc
mov
and
out
sub
dec
xor
add
ljmp
jecxz
rorb
inc
pop
add
pushf
fstl
mov
add
sbb
and
sbb
add
pushf
xor
add
iret
ss
push
xchg
clc
dec
add
cmp
add
inc
mov
iret
sbb
xor
mov
das
add
ds
inc
lods
aas
add
int
pop
std
out
negb
sub
jle
mov
add
cwtl
cmp
add
mov
fwait
inc
add
push
ljmp
lods
sub
mov
dec
sbb
sbb
rcrb
rep
test
add
adc
and
mov
inc
lds
mov
outsb
insl
jle
aaa
push
in
add
je
dec
ds
addb
push
sahf
inc
cmp
and
pop
scas
popa
mov
lods
clc
push
test
and
jg
jns
pushf
inc
add
shrb
add
popl
fadd
mov
mov
add
inc
cmp
and
pop
shrb
sub
mov
mov
push
adc
orb
add
aad
outsb
rcl
jecxz
add
popf
fnstcw
shlb
jg
lret
dec
push
int
inc
inc
and
rclb
add
rolb
add
push
sti
mov
dec
rolb
adc
lret
aaa
daa
clc
cmc
inc
add
loope
ds
rcl
stos
lock
or
or
add
xchg
sar
add
mov
mov
push
sbb
dec
inc
gs
sub
in
adcb
jb
aaa
pop
leave
add
mov
cld
sti
mov
cmp
mov
fistps
pop
pop
roll
mov
std
out
add
mov
and
add
and
mov
je
sub
shl
add
cmp
xchg
xchg
ror
std
and
cmp
sub
lods
mov
xchg
call
ficoms
add
pop
adc
or
into
ret
push
lret
mov
shlb
pop
jg
push
daa
jp
pop
rorl
jno
add
pop
xor
mov
repz
add
pushf
or
push
into
in
add
imulb
add
cli
out
in
lods
add
bound
testl
loopne
cltd
fistpl
mov
maxps
and
call
xor
add
pop
fsubs
shll
out
pushf
xchg
in
fldcw
inc
add
push
add
aas
mov
cmp
ja
push
pop
addb
inc
inc
sub
mov
sbb
std
add
and
add
cmp
scas
nop
pop
add
fimuls
jns
jle
ficoml
inc
gs
rorb
xor
arpl
in
pop
inc
inc
sub
mov
xlat
add
adc
cmp
xor
scas
shl
ud1
cmovs
inc
movb
xchg
out
jge
cwtl
push
add
add
out
jge
pop
call
sbb
shl
addr16
in
loop
adc
inc
add
sbb
mov
insl
xor
add
into
push
inc
test
and
jge
inc
dec
lock
ror
add
sbb
shl
sub
insl
rolb
out
cltd
int3
in
push
es
and
add
ja
dec
fwait
xchg
add
insl
nop
in
je
inc
stc
sub
push
mov
add
add
pop
arpl
pop
lock
jl
scas
hlt
xor
stos
adc
into
push
out
loopne,pn
insl
lret
push
lock
bound
xchg
adc
popa
subb
push
or
faddl
pop
xchg
mov
pop
sub
movsb
add
push
push
cs
add
test
subb
cmp
or
rorl
add
out
dec
sub
mov
fldt
lock
pushf
or
sbb
nop
ret
cwtl
dec
mov
and
mov
adc
in
jo
jecxz
push
cmp
add
cmpsb
popf
faddl
roll
movsl
inc
pusha
arpl
shrd
lea
adc
les
jecxz
or
ja
in
out
jle
mov
xchg
add
loop
movsb
add
inc
stos
cmp
pusha
inc
add
inc
and
add
jg
pop
sub
std
jo
fidivrs
test
sahf
add
push
jecxz
cli
nop
xorb
sub
sub
jle
adc
jne
stc
subl
inc
dec
pop
loope
test
clc
mov
sub
call
cltd
arpl
push
dec
ja
insl
push
fldenv
cmp
pushf
out
add
stc
push
jmp
cli
rcrb
into
cld
sub
ss
or
push
add
pop
lahf
aaa
shlb
fsubrl
add
insl
mov
xor
testl
jmp
mov
aad
test
insl
shll
push
xchg
inc
push
add
mov
add
fcmovnbe
cmp
jne
fwait
add
xor
jne
add
icebp
loopne
push
aam
testb
dec
adc
add
popa
add
push
in
cltd
test
inc
adc
sub
cmpsl
pop
and
sbb
pop
add
test
mov
add
adc
push
lcall
add
nop
adc
shlb
clc
and
pop
add
inc
pop
nop
loopne
sarb
popf
add
js
jmp
mov
das
add
add
aad
inc
fs
lds
inc
xchg
nop
or
and
lods
add
inc
dec
cmpsl
inc
mul
jae
pop
add
arpl
sbb
insl
add
cmp
out
sbb
mov
insb
adc
dec
lret
js
test
sub
xchg
mov
mov
add
xorb
out
rorl
pop
jnp
ss
add
shl
fidivs
mov
add
addb
pop
out
xchg
push
mov
ret
or
xor
adc
sbb
and
add
add
push
jmp
cmp
mov
sub
ror
nop
imul
movsl
jns
sti
test
inc
jl
sbb
push
shlb
add
xchg
stc
sub
pop
lret
xor
xchg
jne
xchg
rol
jo
aaa
add
ffreep
mull
js
jo
fadds
mov
dec
add
pop
cmpsl
dec
jne
stos
sbbb
add
es
add
arpl
mov
push
fs
pusha
loopne
xor
sbb
ret
rorl
sahf
hlt
outsl
pop
add
insl
push
repnz
stc
pusha
sub
mov
es
subl
popa
cmpsl
add
cmpsb
mov
mov
inc
xchg
pushf
stos
push
pop
insl
pop
aas
push
xchg
xchg
inc
lds
ficomps
mov
dec
add
aas
enter
inc
sahf
mov
or
js
add
test
adc
hlt
sbbl
int3
bound
repnz
push
pop
fsubp
lods
or
insb
out
adc
add
movsl
add
fwait
mov
xor
nop
xchg
inc
pop
xchg
pop
sbb
cli
add
ljmp
pop
cmp
xchg
jl
add
pop
add
push
insb
dec
leave
mov
cmp
and
scas
fs
in
pop
test
popf
jle
xchg
stos
push
mov
daa
popa
rolb
int
dec
add
outsl
inc
aam
xor
mov
push
aaa
ret
sub
js
stos
push
inc
fwait
in
addr16
lret
std
add
add
repz
pop
add
dec
mov
mov
loopne
push
inc
insl
addl
push
xor
sbb
add
pop
xor
add
inc
clc
inc
loopne
xor
push
iret
std
dec
out
inc
and
mov
test
xchg
pop
sbb
icebp
test
mov
iret
add
aaa
xchg
bnd
xor
xorl
adc
mov
shlb
xchg
insb
nop
pop
mov
ret
jae
pop
cmp
cld
into
jl
repz
pop
jge
jnp
jp
mov
enter
scas
sbbb
add
loop
aam
jl
add
xor
mov
xlat
mov
js
push
ret
cli
push
enter
rcpps
cs
fcomi
inc
mov
popf
fiaddl
add
jo
lods
xor
pop
add
dec
xchg
mov
bound
push
mov
cmp
jb
adc
push
jp
cmp
scas
sbbb
mov
jle
andb
mov
pop
inc
add
mov
loopne
add
push
lds
stos
pop
dec
shll
sbb
xor
daa
inc
mov
mov
push
mov
pop
loop
into
seta
add
and
and
loope
jge
xchg
inc
and
stos
test
inc
or
dec
jge
jmp
pop
pop
push
fistps
mov
call
movsl
jae
repz
test
adc
out
or
outsl
test
dec
testb
rol
fwait
insb
sahf
shl
sub
arpl
das
mov
movsl
add
aad
add
add
push
lods
inc
out
cmp
add
shlb
xchg
or
add
cwtl
fstl
add
inc
clc
movl
adcb
pop
sbb
inc
sub
jbe
shr
dec
fnstenv
sti
cmp
add
add
popa
inc
nop
jle
xchg
add
pop
fwait
xor
inc
cmp
lret
loop
repnz
add
inc
stos
mov
mov
jae
scas
and
mov
cmpsb
aad
addr16
cwtl
lcall
push
add
add
mov
cwtl
repnz
add
stos
stos
mov
xchg
aas
test
mulps
jae
xchg
fs
pop
inc
jl
jne
inc
aas
add
fistps
aaa
inc
outsb
jle
imul
iret
andb
xor
aam
cmpsb
sbb
in
jp
xor
jbe
pop
sub
inc
rol
add
jp
push
add
out
jmp
pop
and
or
das
mov
sbb
stos
jmp
adcl
loop
dec
out
mov
int
push
sarl
mov
pop
test
sar
adc
call
mov
outsl
divl
inc
mov
fwait
in
repz
add
cld
arpl
push
out
add
push
clc
jmp
shl
fs
add
mov
and
jae
incl
mov
jo
or
add
ficoms
clc
mov
adc
je
add
arpl
add
push
popl
outsl
bound
ss
incb
xchg
data16
js
sub
mov
out
subb
pop
inc
pop
ljmp
push
shrb
jno
sbb
add
mov
fsub
rcll
dec
fildl
dec
in
psubusw
test
mov
std
and
xor
or
xlat
mov
out
inc
inc
loopne
pusha
mov
pop
nop
add
shrl
sti
inc
scas
jo
or
jns
pop
mov
adc
add
repnz
in
mov
or
push
add
pop
lret
addr16
mov
mov
jmp
push
inc
push
jecxz
scas
and
jo
inc
mov
jnp
sub
pusha
sbb
inc
dec
jns
or
cs
cmp
jb
mov
sti
add
add
push
das
push
inc
dec
inc
sub
loop
inc
mov
pop
sub
lock
hlt
mov
add
test
fbld
pop
inc
imul
xor
pop
insb
gs
cmp
jae
xchg
rolb
dec
sti
or
jp
inc
cmp
mov
jno
push
add
fistpll
add
aad
cmp
inc
inc
out
add
cmp
add
test
int
repz
ds
addl
int3
loopne
dec
movsb
add
imul
out
add
inc
loopne
loope
jmp
sbb
arpl
jno
pusha
pmaddwd
lock
test
push
rorb
out
stc
add
call
pop
add
arpl
mov
mov
push
add
cmp
insl
jmp
jnp
or
add
xchg
fcompl
add
mov
sub
in
js
pop
popa
bound
pop
lea
sbb
mov
ret
cmc
filds
xchg
popf
out
mov
frstor
adc
xchg
enter
cmp
andl
shl
fldl
inc
ljmp
mov
insl
dec
clc
shr
inc
mov
jmp
or
mov
mov
xchg
jle
cmp
in
cmp
in
mov
push
mov
dec
mov
rcrl
mov
add
loop
out
andl
mov
popa
cmp
jne
loopne
and
rcll
leave
or
mulb
xor
jle
iret
pop
aas
invlpg
sbb
test
add
dec
jns
ja
lock
add
jo
add
mov
push
add
shlb
loopne,pn
mov
outsl
push
frstor
addb
int
bound
inc
sbb
not
pop
mov
test
mov
mov
stos
add
pop
jo
bound
nopl
adc
xor
mov
inc
cmp
insb
sbbb
xchg
pop
bound
add
xchg
and
je
mov
movsl
add
add
adc
fisubrs
add
sub
dec
dec
outsl
sub
inc
aad
pop
mov
fadd
sarb
mov
stos
inc
int
xor
or
imul
jmp
add
lods
push
add
popf
add
jge
cmpb
inc
cmp
jbe
sahf
mov
mov
add
or
out
aaa
xor
nop
add
shl
lcall
add
sahf
sbbb
mov
pmulhw
add
mov
or
testb
mov
push
fwait
cmp
mov
clc
inc
arpl
add
scas
jne
subl
in
or
dec
sub
dec
inc
fistpl
mov
ret
jmp
sub
or
sub
mov
stos
adc
shl
and
imul
add
iret
in
addl
lods
lea
inc
adc
xchg
arpl
nop
lret
mov
fadd
push
lret
cmc
mov
jae
cmp
add
lcall
pop
mov
or
xlat
loop
add
bound
add
inc
jnp
xchg
sub
cwtl
xchg
les
inc
jecxz
int
enter
pop
mov
icebp
sti
in
fs
hlt
cmp
or
push
sub
call
addr16
add
push
xor
add
aas
jb
jne
mov
sbb
or
loop
rcl
add
inc
mov
adcl
lods
in
xchg
mov
dec
jmp
call
lock
lret
incl
iret
fisubs
adc
jns
add
pop
sub
hlt
fstpt
xchg
inc
cmpsb
and
call
aad
cltd
cmpl
xor
out
shr
pop
sub
or
fs
push
insl
add
iret
test
call
mov
add
sbb
jecxz
and
shll
add
mov
inc
or
ljmp
jno
outsl
push
or
push
add
or
and
test
fidivrl
test
or
rorb
xchg
testl
cmp
mov
test
mov
stc
jae
xor
add
out
roll
test
xchg
or
add
psrld
movsb
loope
add
inc
fstpt
push
add
jecxz
pop
xchg
inc
mov
and
add
adc
pop
roll
add
adcl
add
sbb
jo
inc
add
shr
add
ja
inc
fs
cltd
mov
arpl
stos
push
into
insb
bound
arpl
mov
push
and
add
jg
aad
repnz
rol
cmp
scas
daa
jp
stos
mov
rorb
jno
add
xlat
mov
sub
pop
int3
add
repz
xchg
orb
xchg
pop
imul
lock
dec
or
adc
pop
pop
cmp
adc
adc
push
inc
outsb
add
aad
sbb
add
inc
test
arpl
sbb
push
das
orl
add
test
or
rorl
add
pop
jp
gs
add
icebp
or
pop
pop
loopne
add
inc
fs
add
popa
push
aam
and
pop
add
lret
inc
jl
jb
xchg
xchg
leave
mov
mov
pop
push
pop
add
call
ss
ret
inc
add
and
std
ret
jg
add
shlb
xchg
jmp
das
add
add
push
or
sbb
mov
add
inc
mov
push
insl
stos
and
mov
add
and
inc
shrb
gs
xor
xchg
sahf
add
arpl
cmp
ljmp
into
cmp
push
jge
mov
lret
mov
pop
sbb
or
xor
icebp
jno
add
rcll
cmp
in
add
push
mov
andl
pop
cwtl
dec
daa
cmp
adc
mov
add
int
cmp
add
adcb
js
add
arpl
cld
jb
add
inc
push
leave
pop
out
push
adcl
mov
add
in
into
enter
sbb
xchg
push
subb
addb
or
rolb
pop
out
addb
roll
adc
sbb
add
jecxz
into
pop
mov
add
shll
mov
inc
mov
outsl
sub
add
aaa
sub
xchg
sti
scas
adc
add
cmp
push
andb
stos
add
out
movsb
sbb
cmp
xor
cmp
add
fsubl
lds
pop
bound
or
mov
add
inc
insl
xchg
add
xchg
pop
push
and
ds
xchg
mov
mov
mov
in
pusha
loopne
fiadds
das
mov
rcrb
xchg
inc
dec
jno
icebp
jge
pop
mov
add
testb
dec
adc
test
faddp
add
addr16
xor
add
xchg
lret
fwait
pop
loopne
cmc
add
out
pop
roll
add
fistl
sub
imul
ja
and
inc
icebp
add
scas
dec
mov
add
add
pop
jne
pop
insb
jp
imul
ljmp
pop
push
jecxz
inc
xor
sahf
lea
mov
aas
mov
cmpsb
xchg
jne
dec
jle
add
insb
call
scas
xor
jbe
outsl
xchg
add
mov
add
cmp
in
mov
out
mov
popa
leave
add
mov
jecxz
add
outsl
mov
inc
sbb
fisttps
adc
pop
add
rolb
xchg
mov
int
xchg
pop
xchg
insb
arpl
mov
nop
ja
popf
xchg
jge
lea
mov
arpl
add
ret
and
stc
icebp
faddl
pop
aad
rcrb
imul
lods
inc
cmpsb
sahf
mov
add
fwait
mov
repz
nop
sbb
loop
mov
xchg
arpl
out
jo
mov
repnz
inc
pop
gs
jnp
nop
xchg
add
or
push
mov
dec
shlb
scas
jl
cwtl
pop
and
ret
bound
xchg
add
mov
or
pop
cmpsl
push
add
xorl
mov
add
pusha
into
push
stos
xor
add
jle
cmp
gs
daa
arpl
outsb
pop
push
mov
in
popa
add
xor
add
pop
inc
or
jge
arpl
stos
jnp
mov
mov
cmp
je
rorb
les
cld
push
add
lods
push
call
xchg
pop
and
dec
pushf
pushf
or
cmp
ret
jg
push
cs
pop
iret
pop
and
sub
inc
mov
arpl
jne
or
test
mov
jbe
push
andb
cmp
xlat
lock
and
xchg
in
nop
add
insb
mov
repnz
add
adc
sub
imul
sub
pop
push
xor
pusha
movsl
inc
jle
loope
insb
lret
fdivrs
push
mov
loopne
mov
fisttpl
popa
ffree
cld
adcb
jne
mov
xor
dec
push
mov
adc
cld
in
push
or
cmp
aam
es
icebp
int
mov
cmp
inc
or
arpl
mov
negl
add
dec
adc
inc
fwait
cmp
subl
add
adc
lods
jnp
in
ret
pop
add
stc
data16
inc
pop
push
jg
outsl
pusha
inc
sub
dec
cltd
cmp
jns
mov
pop
fwait
lds
mov
int3
sbb
sub
cmpb
int
rcr
aam
adc
in
sub
mov
push
sub
cmpsl
call
outsl
jge
ficoms
mov
inc
cmc
icebp
inc
femms
pop
inc
popa
push
andb
mull
push
inc
dec
mov
outsl
mov
xlat
add
jno
sub
inc
xor
int
add
movsb
and
int3
lock
test
add
adc
pop
pushf
outsb
dec
sbb
mov
dec
sub
mov
inc
bound
repnz
pop
mov
or
rcrb
pop
pop
out
pusha
cmpsb
add
pop
in
into
arpl
add
fs
sti
jge
hlt
mov
mov
push
and
dec
notb
add
add
push
sbb
push
add
pop
cmp
add
cmp
mov
stos
pusha
xor
and
mov
outsl
jg
dec
loopne
cmp
shlb
xor
add
fsubs
adc
aaa
scas
push
or
push
or
cmp
mov
adc
xor
mov
inc
bound
xchg
pusha
ror
leave
add
dec
sub
add
aaa
inc
jno
xor
pop
add
mov
lds
inc
pop
test
bound
arpl
lods
mov
iret
jns
mov
pop
add
pop
xchg
push
sub
add
popf
cmpsb
nop
push
mov
push
pusha
mov
add
fisubs
rorl
imul
rol
sbb
and
jne
add
or
jns
inc
push
js
mov
push
xchg
jge
inc
ret
add
shll
mov
movsb
add
fisttps
add
loope
fidivrs
shll
arpl
fldl2e
add
je
mul
mov
push
xchg
push
scas
cmpsl
jg
xchg
xor
adc
clc
xor
rclb
enter
mov
cmp
mov
rclb
add
sub
flds
push
imul
push
mov
add
xchg
adc
and
inc
lret
arpl
cli
xchg
push
mov
sub
sbb
cmpsl
adc
add
fsubrl
ljmp
ss
mov
inc
xchg
inc
add
add
xchg
push
test
inc
andl
jmp
rcll
cmp
dec
xor
dec
rorb
and
adc
sahf
push
pop
jp
cmpsl
cmc
add
mov
or
cmp
push
lods
pop
std
add
push
pop
xor
incl
mov
mov
cmpsb
add
stc
aam
es
addl
xchg
ficompl
insl
shlb
mov
adc
and
outsl
mov
or
enter
add
cmc
sub
insb
cltd
mov
inc
or
push
pop
ja
inc
loop
dec
or
mov
inc
fisttps
xchg
stos
call
fdivl
xor
jns
pop
cli
add
xor
sub
inc
push
push
add
jg
sub
jmp
stos
out
and
lods
lea
movb
ret
fisubs
sbb
lods
add
roll
mov
add
hlt
mov
cmp
cs
loope
jno,pt
aas
xor
std
outsb
jne
push
out
add
inc
dec
jns
jmp
jnp
xchg
jle
dec
pop
pusha
inc
sahf
mov
andb
rcrl
repz
sub
sbb
testb
cmpsb
stc
inc
pop
xchg
push
fistps
add
xchg
imul
cmp
mov
stos
adcl
cmp
sub
out
dec
int3
pusha
add
xchg
xchg
negl
add
insb
test
insl
repnz
add
je
and
adc
sti
push
jle
xchg
dec
inc
mov
xchg
fists
mov
testl
cmp
sub
sti
cmpl
mov
mov
int3
cli
pop
inc
popf
pop
jmp
loopne
sbb
test
fisubs
in
aad
inc
sbb
pop
cmpsl
push
pop
mov
std
sub
shrb
add
or
inc
mov
movsb
sbbl
add
jle
xchg
sub
leave
pop
std
pop
pop
lret
push
jmp
jle
lahf
jae
adc
aaa
xchg
nop
cmp
and
cmp
test
push
arpl
mov
mov
imul
ret
aas
aas
mov
jl
push
add
push
cmp
inc
shrb
dec
mov
inc
xlat
add
jmp
outsl
jp
dec
mov
and
dec
scas
add
add
add
movsl
ds
sbb
inc
das
jle
aam
add
fnsave
ljmp
push
enter
add
repz
sub
pop
xchg
cs
std
sbb
add
add
adc
cltd
push
jns
push
loope
out
vphaddbd
pop
push
loopne
dec
out
insb
cmp
adc
int
pop
mov
movl
dec
clc
test
sbb
pop
xor
cmpsb
fst
inc
decl
mov
test
hlt
call
xor
add
enter
loope
add
aas
in
movsl
les
mov
ret
xor
incl
sbb
movaps
sub
fs
mov
pop
and
mov
pop
ds
lods
add
or
hlt
xchg
add
cld
mov
add
pop
sti
arpl
in
pop
dec
push
mov
pop
adc
cli
add
les
dec
inc
jb
or
test
sbb
leave
std
rcrb
add
pop
movsb
mov
add
test
test
add
sbb
or
nop
mov
rolb
icebp
adc
inc
mov
inc
out
or
add
push
jmp
ror
sar
rcl
push
out
mov
sbb
lock
jne
cmp
ds
dec
stc
add
jno
mov
sbb
mov
pop
imul
test
out
movsl
pop
pushf
dec
inc
aas
add
push
testb
pop
inc
add
les
ret
fiadds
popa
or
dec
dec
mov
aam
lds
call
mov
inc
add
ret
or
inc
jnp
sub
add
into
call
add
fbstp
stos
out
pop
dec
dec
dec
add
jnp
cmp
push
pop
and
add
or
aam
or
add
jno
lds
insb
jb
add
scas
hlt
rolb
mov
add
mov
icebp
pop
ja
inc
test
add
or
adc
sarb
cltd
mov
add
push
jge
lds
rcrl
inc
pushf
scas
mov
dec
call
pop
mov
jl
out
jge
add
shrl
sbb
loope
pop
test
mov
dec
test
jge
lahf
inc
lret
rcl
mov
js
mov
sbb
pop
xchg
icebp
mov
inc
xchg
sub
xchg
cmp
dec
stc
add
int3
dec
cmp
xlat
nop
pop
add
repnz
sbb
or
push
paddw
stc
sub
xchg
push
insb
inc
jo
xor
clc
add
mov
pop
or
jecxz
jle
add
pop
int
and
mov
add
mov
int3
inc
add
lret
or
push
imul
test
add
pushf
sbb
add
mov
dec
add
sbbl
outsl
ljmp
mov
mov
add
arpl
out
sahf
das
jge
add
xchg
inc
add
add
lcall
test
adc
xchg
lock
jnp
loop
mov
pop
add
movl
xchg
das
add
xor
and
popf
add
pop
mov
push
inc
add
lea
sub
mov
mov
pop
mov
xor
dec
sbb
cwtl
mov
add
dec
xchg
mov
add
repnz
lods
std
lcall
inc
fucomi
add
dec
lahf
out
add
testl
mov
pop
push
jno
dec
mov
shl
lret
sub
repnz
outsb
inc
or
lret
in
rol
in
insl
movsb
add
scas
or
cltd
rorl
xor
push
push
ret
push
ljmp
jg
loopne
mov
aas
repnz
push
add
xor
addb
dec
sub
sub
push
repnz
adc
jo
mov
mov
leave
add
cli
test
push
sbb
mov
incl
adc
xchg
insb
outsl
jb
cmp
call
sbb
add
pop
inc
ss
add
xchg
rolb
xlat
push
mov
sahf
lock
inc
gs
add
inc
dec
pop
adc
lods
add
pop
or
xchg
test
add
imul
leave
testb
insl
add
mov
fadds
daa
sub
sub
in
inc
push
into
jle
push
and
es
push
sbb
or
arpl
sti
jge
sahf
ja
mov
and
out
add
stc
sbb
or
pusha
add
push
lea
add
push
mov
mov
or
jno
add
in
push
aaa
loopne
ss
rclb
add
cltd
cmp
lahf
rorb
lock
lea
aaa
jno
js
and
mov
inc
lds
dec
adc
xchg
inc
sbb
xorl
movsl
lahf
add
rolb
mov
push
test
test
cmp
loopne
mov
decl
enter
mov
mov
add
repnz
mov
frstor
sbb
xor
test
jbe
insl
daa
sbb
shrl
ret
add
inc
xor
add
rorl
lcall
mov
rclb
jmp
mov
xlat
jle
rorl
pop
add
sub
inc
arpl
in
mov
test
mov
cmp
add
cmp
push
xor
js
or
mull
rolb
add
sarb
repz
xor
inc
add
mov
mov
leave
xor
or
int
jg
stos
add
pushf
mov
xorb
add
and
mov
gs
cmp
push
subb
mov
mov
add
fdiv
mov
cmp
lret
dec
ljmp
xchg
aam
arpl
jp
repz
aas
mov
cli
mov
mov
add
aad
imul
add
ror
add
and
cmp
push
test
adc
pop
in
sub
jo
repz
iret
in
arpl
inc
push
sub
ror
adc
jbe
lret
inc
jo
push
and
lret
mov
mov
xor
in
repnz
mov
mov
sahf
mov
pop
aas
incb
repnz
or
enter
pop
aam
pusha
roll
xchg
add
xchg
cwtl
add
addl
fs
ja
jno
int3
cmp
popl
pop
test
sbb
fwait
add
push
nop
outsb
xchg
pop
repnz
into
movsl
xchg
inc
add
jnp
pop
pop
rorb
nop
jo
std
xor
insb
fs
movb
aaa
js
cld
adc
pop
or
lret
push
add
mov
in
dec
out
add
cmpsl
cld
ror
adc
add
mov
rolb
cs
pushf
pop
stos
call
or
pop
xchg
inc
jns
mov
lods
popa
pop
inc
push
in
add
hlt
mov
add
xor
mov
fisubrs
iret
inc
in
mov
out
mov
sar
ljmp
sub
js
mov
movsb
repnz
fldcw
xor
roll
repz
cmp
dec
sbbb
add
shrb
popa
and
sub
inc
push
test
leave
dec
add
adc
add
les
mov
add
cmp
add
cltd
fadd
test
pop
jns
mov
sbb
leave
pop
into
stos
sarb
inc
jp
test
iret
sub
push
dec
add
cmp
jecxz
mov
loope
inc
adc
cmp
out
pop
cmp
lock
add
leave
push
std
ret
add
aad
arpl
repnz
sar
cmp
dec
inc
ss
jnp
mov
push
subb
mov
cltd
mulb
mov
ret
hlt
pop
mov
add
push
scas
incb
mov
icebp
gs
jbe
insl
sti
xor
add
dec
rclb
cmp
dec
and
test
xor
sub
loopne
push
imull
add
xor
and
pop
and
inc
out
lods
sub
push
shrb
jo
pop
in
jecxz
negl
fsubl
sti
and
pop
nop
test
jno
pop
rclb
push
mov
xchg
test
jle
incb
sub
inc
xchg
sbb
pop
repnz
cli
popa
lock
add
xor
inc
jns
inc
jae
faddp
loop
xor
inc
inc
dec
pop
sub
dec
mov
cmp
cwtl
in
movsl
ja
add
shlb
dec
xchg
fwait
xchg
cmpsl
mov
xor
add
das
xchg
jns
ds
cmp
mov
jp
add
sbb
cltd
adc
cmp
add
push
data16
mov
pop
cmpsb
xor
jno
mov
xorl
adc
mov
mov
xchg
fwait
push
xchg
stos
mov
push
sbb
jo
mov
and
bound
loop
jmp
pusha
add
inc
fmull
add
lods
and
aaa
dec
cmp
call
cld
insl
pop
jl
es
push
add
nop
cmp
sbb
push
push
call
test
xlat
mov
inc
cld
clc
sahf
stos
push
add
outsl
dec
xor
stc
test
xlat
adc
push
mov
outsl
insb
jo
add
movsl
je
xchg
and
xor
aam
jbe
ja
adc
fmuls
or
add
fisttps
inc
int
and
loop
push
pop
stc
xor
jnp
call
add
lock
out
dec
pop
daa
loopne
roll
xchg
mov
jns
inc
fldcw
or
pop
add
jmp
repz
rclb
add
idivb
das
sarl
icebp
xchg
push
stos
sbb
cmp
push
aas
enter
mov
jbe
add
and
js
iret
pop
inc
jl
add
push
lods
push
cmp
fidivrs
pop
test
mov
add
arpl
pop
dec
xchg
test
dec
sbb
pop
mov
cli
out
lock
in
shlb
insb
das
aas
call
movsl
jl
pushf
sub
add
mov
call
divb
pop
xor
cmc
add
test
inc
add
cmovns
add
fiaddl
mov
lret
shll
popf
stos
rcrb
rolb
or
or
scas
cmpl
push
inc
add
je
and
fadds
dec
js
inc
cmp
sbb
push
lds
jge
mov
lods
add
jl
adc
push
rorb
je
mov
mov
xchg
dec
shll
inc
loopne
mov
adc
dec
mov
inc
add
loope
cltd
xor
mov
mov
mov
js
andl
ds
ret
dec
add
imul
jmp
lods
and
cmp
in
in
add
clc
ret
scas
dec
sahf
pusha
in
outsb
arpl
push
movsl
pop
push
jb
xor
mov
sbb
call
daa
lock
ja
cmovno
and
add
adc
inc
add
push
mov
test
add
test
adc
xchg
lahf
add
add
mov
jmp
pop
fadds
push
xor
inc
insl
or
inc
pop
incl
ret
push
jae
fistps
ret
mov
dec
ficoms
mov
or
roll
aad
mov
add
inc
xor
ljmp
xchg
int
pop
pop
into
sahf
inc
mov
adc
rorl
fisttpll
add
mov
cmpsl
add
inc
mov
add
mov
push
ret
pop
cld
lock
inc
push
inc
lea
sahf
add
gs
cmp
jle
in
add
xor
sub
mov
data16
mov
lds
mov
sub
xchg
cmp
adcb
enter
pop
add
int3
adc
mov
roll
pop
addb
in
fsub
popl
mov
and
and
or
inc
aas
in
or
call
and
pop
cli
in
inc
lret
and
movsb
sub
lock
nop
mov
mov
add
repnz
add
jns
cmp
pop
jg
lock
jno
inc
cld
sarb
leave
add
inc
inc
int3
push
stos
adc
in
add
aad
push
fwait
out
add
sbb
jg
pusha
cmp
pop
cmp
jno
bound
add
mov
pop
mov
pop
daa
fsubs
faddl
push
mov
mov
inc
xchg
add
dec
push
aad
sbb
add
dec
popf
dec
add
mov
add
push
idivl
jbe
roll
loopne
add
inc
in
sub
shll
xorl
push
cmp
pop
add
jecxz
inc
pop
add
inc
push
and
xchg
cmpsb
arpl
cwtl
in
ljmp
inc
jg
jne
ss
add
incb
cmp
jmp
inc
stc
js
jmp
push
cwtl
lret
pop
shll
ljmp
dec
pop
das
inc
add
sub
inc
cmp
cmp
jbe
insb
inc
add
aas
out
pusha
push
fimuls
es
or
jmp
inc
mov
xchg
inc
xchg
mov
cwtl
fdiv
add
js
xor
mov
mov
and
fdivrl
inc
add
or
add
sti
sbb
mov
data16
mov
out
inc
test
mov
arpl
pop
jecxz
aad
push
nop
cmpsl
mov
pop
adc
sbb
sub
add
sti
add
mov
aas
test
push
rcrb
out
lods
sbb
add
cmpsb
sub
js
add
inc
nop
int
dec
inc
test
mov
jo
lcall
icebp
fisubs
inc
jnp
mov
cmp
test
add
data16
or
fstpt
and
subb
mov
in
xchg
inc
mov
add
out
movsb
fsubrs
push
movsl
out
inc
loopne
add
mov
and
and
inc
test
xor
stc
pop
hlt
call
jbe
sub
shl
loop
clc
ds
ret
aam
cmpsb
or
scas
pop
cmp
mov
nop
rcl
adc
sub
inc
add
add
jae
cmp
pop
lcall
ja
xchg
dec
adc
add
sub
hlt
mov
add
sub
or
dec
std
add
aas
inc
orps
inc
pusha
js
and
ljmp
out
sub
or
pop
orb
push
xor
mov
shl
jl
add
add
xor
mov
int3
mov
pop
push
add
rcll
inc
sub
mov
fdivl
add
and
mov
insb
and
pusha
pop
popf
pop
das
test
jmp
nop
pop
loopne
cltd
in
xchg
add
out
add
inc
jo
pusha
inc
pop
fstpl
out
aad
sbb
das
mov
jg
jl
add
loopne
aam
out
pop
cmp
push
outsl
imul
cmpsl
or
inc
and
add
popa
jmp
inc
outsl
add
sahf
test
mov
cmp
testb
enter
ret
and
adcl
repnz
fs
mov
ds
jecxz
in
fidivrs
mov
dec
movl
aam
pusha
call
call
or
mov
loopne
xchg
pop
push
sbb
mov
push
insb
roll
xor
rolb
leave
jg
add
inc
xchg
add
lcall
in
cmp
cli
add
xchg
jmp
enter
jbe
and
jl
push
in
aad
inc
insb
imul
rolb
inc
adc
add
inc
push
rcrl
add
add
sbbl
or
data16
add
lds
add
pop
adc
les
out
lret
jno
outsl
add
inc
dec
inc
imul
in
push
pop
fadds
push
shlb
push
adc
ljmp
test
add
or
arpl
add
xlat
sbb
mov
int
imul
inc
xchg
push
ret
or
inc
ret
dec
in
insb
addl
xorb
jl
aaa
outsl
aas
jnp
orb
sub
cltd
mov
ljmp
jg
sbb
pop
and
adc
mov
add
jns
fdivp
in
lret
jg
add
and
adc
ljmp
mov
imul
fcoms
pop
add
inc
aaa
pop
jne
pushf
lock
out
mov
add
dec
icebp
mov
push
rolb
push
dec
pop
test
push
out
movsl
or
inc
mov
pop
orb
pop
jo
add
fimull
add
and
add
loope
int
pop
leave
dec
ret
jno
call
sbb
pop
add
adc
stc
fs
addr16
add
mov
lods
test
xchg
add
mov
pop
sar
cmp
ret
adcb
enter
jl
add
movl
add
inc
and
cltd
jo
into
mov
adcb
cmp
mov
adc
adc
scas
inc
cmp
bound
sbb
mov
add
mov
dec
andl
xchg
and
mov
cmp
arpl
nop
adc
imul
add
and
mov
add
adc
pop
push
adc
shl
sub
mov
inc
inc
mov
fisttpll
xor
shl
add
push
mov
fmuls
jmp
add
xchg
lcall
je
roll
inc
fsts
push
lock
loopne
es
fldt
movsl
or
cwtl
inc
pop
cmp
jle
add
out
fwait
nop
std
in
inc
mov
pop
call
movsl
shl
jmp
ljmp
sbbb
inc
fldl
mov
rolb
add
arpl
mov
push
add
nop
jg
push
rol
and
cmp
popf
xor
lcall
pop
je
add
sbb
xchg
xchg
dec
mov
sub
dec
ret
mov
or
arpl
sub
xchg
pop
jg
pusha
jns
mov
imul
daa
push
add
and
jno
mov
dec
xchg
ret
aaa
fyl2x
add
mov
fwait
and
loopne
addr16
mov
inc
into
movb
lock
shlb
xor
into
jns
add
cmp
sub
roll
push
jnp
mov
lahf
jle
sub
jg
stc
add
in
jmp
cli
or
jmp
mov
repz
adc
pop
dec
add
mov
mov
add
sub
pusha
or
cld
lahf
fistl
inc
jl
jns
add
dec
push
and
mov
add
pop
andb
mov
add
inc
rep
daa
or
jle
aam
outsb
arpl
test
es
sarb
add
dec
mov
sbbb
cmp
dec
lds
arpl
xorb
add
lea
sbb
inc
addb
xlat
mov
and
cmp
mov
in
add
inc
jecxz
cltd
imul
jp
lods
ret
popf
adc
in
add
mov
fisttps
test
cld
xchg
in
mov
idivl
pop
inc
sub
imul
ja
fbld
inc
jge
add
sub
add
inc
ljmp
sub
out
jnp
mov
fadds
mov
js
ljmp
push
sarb
or
dec
jp
lock
popa
cmp
pop
repz
addr16
sbb
fldl
add
inc
pushw
mov
dec
jp
add
pop
inc
incb
push
dec
add
add
add
pop
or
mov
dec
add
sbb
and
mov
inc
dec
inc
imul
arpl
dec
pop
mov
mov
addb
arpl
add
adc
inc
xor
add
ds
in
hlt
and
jg
ret
repnz
pop
sbb
pusha
dec
movl
mov
scas
push
mov
add
mov
push
xor
mov
lret
arpl
test
add
adcb
sub
sahf
adc
dec
inc
cmp
inc
pop
jns
frstor
popa
and
outsb
int3
jae
add
filds
mov
add
pop
cltd
add
bound
add
mov
xor
adc
imul
cmp
push
inc
in
daa
push
pop
aas
cmpsl
and
inc
xchg
int
andb
or
sti
sbbb
sub
add
inc
pusha
add
adc
fcoms
cmp
add
lea
xchg
inc
pop
xor
ret
ds
inc
iret
mov
cs
inc
lahf
lods
mov
add
sbb
adc
jae
cmc
ret
inc
dec
mov
imul
xor
int
adc
aas
mov
add
leave
fs
mov
fwait
mov
push
bound
pop
push
add
and
dec
iret
nop
mov
test
push
loopne
dec
jle
add
je
and
pusha
or
pop
sbb
cmp
subl
mov
jns
cmp
bound
jg
mov
js
mov
cmp
add
pop
cld
adc
jecxz
sbb
mov
out
jb
add
xor
pop
xor
xor
inc
in
out
ret
lret
mov
dec
dec
push
arpl
dec
les
and
pop
popa
loope
jae
int
add
push
movups
lock
add
add
and
addl
fildl
inc
jl
jge
inc
jecxz
cld
loopne
inc
in
add
pusha
rcl
adc
ja
inc
pop
sbb
push
add
push
cmpb
repz
rcrb
pop
mov
popf
pop
outsl
dec
shlb
and
divb
bts
jnp
jae
add
add
lock
cld
push
cltd
add
or
hlt
iret
arpl
cmp
cmc
pop
loopne
adc
xchg
jb
in
sbb
aas
cmpsb
and
shl
mov
add
dec
subl
push
add
push
mov
pop
and
add
iret
xchg
lds
dec
aad
bound
popa
leave
sub
pop
sbb
sarl
les
xor
add
inc
jae
adc
aad
addb
repnz
loop
icebp
add
mov
rcrb
out
in
shlb
sbb
inc
add
mov
lcall
scas
add
xlat
cmp
fcom
or
xorb
sysret
pop
imulb
xor
jmp
push
addl
mov
mov
sub
rcll
jns
add
int3
shlb
or
sbb
pop
jl
jne
ljmp
faddp
inc
jge
add
pusha
xchg
push
lods
shrb
xor
jecxz
addr16
inc
stos
dec
popa
rorb
lret
push
shlb
inc
jle
test
mov
gs
mov
pop
and
add
cmp
xor
jnp
push
pop
mov
jno
and
pop
int
pop
bound
jbe
mov
mov
fisttpll
or
in
ds
push
add
rolb
xor
mov
outsl
punpcklwd
xor
out
inc
filds
push
leave
out
fcoms
fld1
cmpsb
add
rol
add
xchg
add
mov
push
sbb
dec
cltd
cli
mov
xor
rolb
cmp
push
imul
mov
pusha
rol
add
fsubl
loope
push
ror
inc
loopne
jge
add
es
mov
je
and
pop
mov
sbb
add
movsl
leave
xor
imul
clc
lret
add
or
imul
add
jne
pop
add
adc
mov
jnp
out
shlb
es
sahf
push
sbb
bound
add
jne
lods
dec
mov
xor
xchg
imul
add
pop
jbe
jmp
pop
stos
sahf
add
pop
add
pop
popf
jo
scas
xchg
inc
cmc
testl
mov
mov
inc
add
mov
add
sbb
aam
adc
push
sub
dec
in
mov
addl
lret
scas
add
test
and
addr16
add
into
ffreep
or
push
cmpsl
rorb
ret
cmp
addl
aas
jnp
xlat
xor
fldcw
fs
add
push
push
loopne
outsl
imul
and
cmc
int3
add
mov
shrl
dec
pop
loopne
leave
rolb
cmp
inc
stos
inc
pusha
xor
mov
add
add
pop
movsb
lock
inc
shl
add
pushf
sub
sbb
add
cwtl
inc
cli
stos
jl
sbb
aas
xchg
pop
sti
loope
jno
jl
loopne
in
stos
and
add
stc
jmp
mov
addr16
jno
inc
shll
and
outsb
mov
scas
push
jae
sub
add
clc
inc
pusha
sbb
add
ss
mov
outsb
loopnew
iret
stos
or
orl
push
roll
pusha
pop
ret
add
sti
dec
aad
cld
sbb
adc
mov
inc
fnstcw
pop
lods
imul
aam
add
mov
pusha
add
mov
lret
inc
inc
jg
frstor
add
loope
pop
arpl
xor
mov
cmpb
jge
inc
add
inc
pop
add
lret
aas
push
jno
aaa
sbb
daa
jae
lock
enter
adc
popa
and
jecxz
dec
jo
jl
repnz
dec
cmp
inc
addr16
imul
push
rclb
xchg
add
xlat
pusha
andl
mov
lret
insl
sbbb
pop
and
jno
jns
mov
push
popf
pop
jbe
shll
adc
add
lock
inc
decl
add
xchg
push
xchg
sarl
add
insb
test
fs
pop
fsubl
pop
add
popa
lahf
sbb
data16
in
add
mov
pop
fs
add
aas
lret
or
pusha
add
add
out
icebp
cli
mov
incl
push
push
push
jmp
ret
loop
and
inc
xor
dec
mov
sti
test
in
out
jo
mov
pop
add
add
mov
sub
dec
loopne
jae
lock
jno
cwtl
leave
or
push
cltd
push
adc
jp
add
cmc
lds
mov
xor
inc
mov
add
jns
lret
and
add
inc
xchg
add
cmp
inc
rclb
or
gs
addl
shll
cli
xchg
out
jo
pop
add
dec
fs
call
xchg
jns
adcl
loopne
add
pusha
dec
sti
or
add
jge
adc
or
cmp
adcb
hlt
aam
in
push
stos
push
add
lea
cld
push
fstl
inc
sahf
repnz
mov
stc
mov
and
xor
pop
dec
push
adcl
incl
adc
and
pop
mov
add
add
add
roll
loope
push
mov
insl
inc
outsb
inc
lds
lods
sub
dec
xlat
bound
add
jae
arpl
sub
gs
mov
out
lret
jmp
sbb
cmc
mov
cwtd
add
sbb
inc
fildll
add
mov
pop
pop
or
fwait
lock
fwait
push
add
jbe
aam
int3
inc
pushf
add
ret
mov
mov
iret
jb
xchg
test
loopne
add
mov
fadds
or
lret
push
stos
ret
and
mov
xor
add
push
add
mov
cmpsb
and
fstpl
jmp
mov
jge
std
sbb
jae
cmpsl
divl
enter
hlt
jge
xchg
cmp
cli
add
cmc
int
arpl
scas
mov
call
sub
add
rcll
dec
sti
add
popa
xchg
rorl
add
stos
dec
mov
dec
gs
push
jp
cld
pop
add
add
aas
call
fcompl
mov
dec
jle
add
gs
pop
jl,pn
out
out
add
push
insl
cmp
and
mov
arpl
addb
test
mov
cmp
iret
jns
cmpl
inc
or
sbb
loopne
andb
mov
rolb
movb
imul
lock
add
lcall
outsb
inc
add
lods
jecxz
pop
std
pop
dec
call
inc
pop
hlt
roll
out
repz
jg
jbe
dec
add
inc
negl
test
mov
addb
clc
pop
orb
inc
mov
jle
dec
xor
incl
or
adc
sbb
jge
add
movb
leave
push
add
jecxz
inc
mov
or
add
imul
loopne
add
inc
add
in
ret
loope
mov
stos
outsl
and
aam
mov
inc
and
lock
mov
dec
pop
mov
std
loopne
mov
shlb
add
scas
mov
out
cmp
in
inc
fiadds
in
pop
mov
push
sub
mov
mov
sub
add
mov
lea
enter
push
push
call
les
mov
stc
and
enter
out
nop
out
nop
xchg
inc
jns
mov
sarb
loope
and
adcb
push
popa
ret
pop
jmp
je
dec
add
ljmp
jecxz
and
fidivrl
sub
pop
sbb
add
lds
orb
jns
inc
shll
stos
es
int
mov
jb
xorb
rolb
fstpl
dec
xchg
jnp
sub
inc
mov
roll
add
push
imul
adc
xchg
add
mov
mov
xor
mov
and
sub
arpl
add
mov
or
add
pop
ret
aad
shlb
dec
icebp
xchg
inc
andl
adc
ret
lret
add
inc
add
mov
movsl
add
scas
pop
inc
jnp
icebp
call
subb
lahf
pusha
out
inc
add
into
rclb
lret
sbb
dec
je
jecxz
gs
dec
into
imull
orb
repz
add
jno
xor
jo
call
inc
repz
pop
add
push
bound
inc
aam
add
lods
jno
sbbb
add
hlt
and
pop
pop
dec
fwait
cmp
loopne
outsb
add
inc
and
ds
xchg
mov
bound
lods
xor
pop
push
cmp
iret
pop
out
cld
add
or
sbb
shlb
rcll
scas
mov
pop
dec
fiaddl
add
adc
inc
sbb
mov
rcpps
mov
int3
arpl
add
fld
ds
pop
add
jle
push
pop
das
pop
movsl
add
sahf
fmuls
cmpps
mov
sbb
xor
push
push
aam
add
mov
pop
add
lock
mov
mov
inc
add
cmc
aaa
mov
insb
add
xchg
mov
ret
in
mov
cltd
cmp
stos
cmp
adc
add
inc
adc
add
pusha
insb
test
lcall
pop
arpl
test
jo
add
ds
pop
enter
add
bound
filds
je
add
push
mov
das
mov
or
inc
in
andb
call
inc
sub
ror
mov
hlt
outsb
xor
push
scas
mov
fldl
xor
fcomps
add
call
and
xor
push
add
int
lahf
arpl
sub
mov
shrl
adc
in
nop
mov
out
cmp
mov
mov
cmp
arpl
scas
pushf
jecxz
pop
add
lret
and
clc
mov
pop
imul
add
std
int3
inc
cmp
ret
add
lock
roll
dec
mulb
lea
loop
pusha
xorb
clc
es
nop
dec
fbld
pushfw
ret
add
push
mov
xor
jle
std
or
scas
mov
enter
dec
xchg
add
jge
loopne
mov
add
lock
ror
in
push
imul
hlt
add
or
adc
dec
shrb
pushf
jge
inc
add
in
movsb
cmp
xor
dec
dec
adc
jne
cmpsl
into
add
ret
sub
xor
or
push
clc
pop
bound
outsb
sbb
push
clc
insl
jl
add
arpl
clc
ja
cli
mov
push
mov
xor
pop
pop
pop
arpl
add
dec
pop
push
sbb
mov
lahf
cmp
mov
das
sub
inc
fcos
jbe
add
js
dec
test
ja
add
mov
pop
loop
add
imul
add
mov
add
mov
hlt
add
add
mov
push
add
repz
addb
dec
mov
mov
push
jle
aaa
mov
movntq
inc
stos
mov
add
sub
xor
push
mov
es
or
dec
out
mov
push
or
lret
xlat
inc
testb
add
inc
movsl
aas
pop
fnstsw
inc
add
xchg
lahf
mov
lret
add
add
shrb
je
loopne
jns
out
out
mov
or
repnz
xlat
add
jne
xchg
jge
add
jecxz
xor
push
adc
repnz
add
mov
cwtl
pusha
inc
negl
bound
nop
cs
sub
jo
test
call
mov
and
jle
push
daa
jmpw
xor
les
cwtl
xrelease
jge
lds
inc
mov
jle
cmp
inc
pop
inc
lods
sbb
shrb
xchg
cmp
int
movsb
andb
cmpsl
rol
cmp
dec
adcb
sub
add
mov
stc
popa
jmp
ss
or
cwtl
add
sub
add
imul
jge
sbb
stos
and
add
push
cmp
inc
push
jmp
mov
xchg
xchg
sbbb
cli
sbb
dec
push
stos
stc
mov
pop
lret
fbld
jge
pushf
cmp
jne
cwtl
push
add
int
nop
sbb
pop
mov
test
repnz
cmpsl
push
addb
cmp
adc
inc
pop
mov
negb
add
dec
fimull
sbb
add
imul
add
imull
add
into
mov
pop
mov
cli
pop
jge
push
inc
mov
and
xchg
arpl
cld
jp
fs
sub
and
rcrl
add
shlb
pop
pop
scas
add
push
or
dec
movsb
mov
mov
xchg
pop
mov
ss
jle
add
gs
jl
es
cmp
mov
nop
inc
pop
mov
nop
xchg
dec
xlat
or
in
adc
pop
cmpsb
add
or
and
adc
lea
test
push
jae
add
mov
dec
add
xchg
cltd
lock
mov
shr
jl
jno
xor
cmp
pop
imul
dec
jle
out
mov
stos
inc
mov
add
out
add
mov
push
nop
lcall
fcomp
sub
les
fwait
lea
lds
push
xchg
push
add
push
testl
add
scas
arpl
lea
roll
pop
cmpsb
inc
add
bound
arpl
orb
fs
sub
jge
jae
fldl
jnp
arpl
add
mov
and
add
pusha
jmp
add
insl
push
mov
sbb
cmp
push
ss
jg
jmp
mov
add
data16
xchg
call
popa
mov
cmpsb
pop
xchg
imull
inc
pusha
mov
rolb
arpl
add
pop
pop
cwtl
in
sbb
push
sbbb
sub
pop
inc
push
mov
cmpsb
sub
hlt
mov
mov
inc
jnp
add
arpl
xlat
aam
add
insb
movsb
enter
dec
cmc
stos
add
loopne
sub
ja
add
xor
xor
sbb
add
loop
notl
add
sub
jmp
mov
push
add
inc
shrb
add
mov
pop
shlb
mov
cmp
xchg
int3
addb
sub
add
mov
add
push
in
test
inc
xor
push
add
add
cwtl
int
repz
fisubs
add
mov
inc
pop
mov
dec
mov
add
psubusb
and
sahf
es
mov
add
sub
inc
test
cli
adc
mov
jbe
pop
mov
jl
xchg
mov
cmp
mov
jmp
ret
mov
cmp
xchg
add
mov
jns
pop
mov
nop
add
inc
jle
xor
mov
add
loopne
cs
sub
push
repnz
add
clc
inc
pop
sub
and
addr16
inc
add
push
pop
aaa
imul
and
pusha
loop
add
out
inc
add
sbb
int3
or
jp
inc
dec
insl
adc
mov
mov
sub
rolb
cwtl
aas
add
hlt
std
out
in
rcrb
add
loopne
mov
mov
pop
jmp
dec
incl
repnz
in
add
cmp
inc
and
pop
pop
add
mov
add
js
add
and
rep
ret
pop
arpl
xor
sub
xor
sbb
bound
dec
cmp
add
mov
inc
ss
add
arpl
xchg
or
in
call
shll
mov
xor
push
inc
fwait
rcrl
sbb
and
aas
mov
cltd
cmp
mov
lret
pusha
fdivrl
les
sub
sub
add
xlat
leave
sbb
jge
ret
or
cmp
inc
or
mov
inc
add
fldl
jb
adc
roll
push
das
rolb
pusha
jae
pop
dec
mov
mov
push
push
lret
inc
xchg
jle
inc
sbb
mov
in
es
add
ljmp
bound
jbe
add
bnd
add
mov
jge
imul
push
inc
and
sti
aam
addb
inc
outsb
adc
inc
leave
jmp
add
mov
fldenv
or
inc
pmaxub
add
push
xor
mov
call
sarl
lods
stos
das
ja
add
cmp
jle
jmp
adcb
add
aas
or
inc
cmp
jg
fnstcw
jae
push
xchg
and
dec
add
inc
xorb
push
outsb
pop
jne
ret
mov
sahf
jle
repnz
add
jbe
jle
in
add
jecxz
icebp
jp
hlt
stos
add
inc
cmp
dec
shrb
push
pop
push
ficomps
inc
mov
ljmp
and
xchg
orb
out
lock
in
test
add
jnp
push
sub
insb
sti
ret
xor
push
dec
ret
and
pop
insb
out
xor
pop
das
fwait
dec
fistpl
addl
ficoml
mov
hlt
fisubrs
nop
repz
nop
pop
cmp
xchg
fdivrl
inc
nop
mov
movsl
inc
add
cmp
xor
cli
repnz
add
in
or
adc
inc
pop
insb
shlb
imulb
cli
mov
inc
mov
mov
mov
pop
into
pop
or
jae
loopne
adc
stos
add
cli
mov
xchg
mov
movsl
jns
nop
mov
btc
cli
jg,pn
dec
repnz
lahf
cmpsl
xlat
mov
push
popf
je
cvtps2pi
lret
and
push
mov
and
xor
sub
pop
arpl
leave
mov
in
jle
fcom
sub
mov
inc
lea
pop
jmp
mov
push
nop
movsb
loopne
les
insl
mov
xchg
decb
add
xchg
xchg
lea
insb
add
pop
add
cmp
add
or
adc
dec
inc
cmpsb
jne
push
mov
pop
int
adcb
pusha
mul
dec
add
pop
mov
push
nop
add
sbb
scas
xor
pop
test
adc
jecxz
test
add
mov
push
add
aad
adcb
add
stc
stos
or
or
add
cli
push
imul
or
mov
xor
data16
jmp
add
imul
sbb
repnz
cmp
xchg
pop
jns
add
test
xlat
mov
add
pop
mov
pushf
xor
sub
push
lcall
push
sbb
jge
pop
xchg
fdivrl
xchg
jbe
push
movsb
or
xchg
dec
xchg
test
sbb
mov
push
test
lret
adc
std
aaa
roll
shlb
out
jo
add
push
cmpsb
xchg
addr16
mov
cmp
daa
inc
mov
js
sbb
movsb
add
movsl
dec
arpl
cmpsl
lock
out
call
clc
stc
push
add
cmc
icebp
pop
outsb
bound
mov
sub
or
adc
cmp
jmpw
and
cmp
pusha
lock
lock
in
inc
add
adc
mov
xor
movhlps
and
add
sahf
jmp
push
clc
mov
in
mov
add
std
lock
dec
stos
in
or
add
add
cwtl
sub
xor
dec
add
call
add
shrb
imul
inc
rorl
scas
str
jne,pt
mov
int
sub
sub
ja
addl
mov
mov
movsb
in
pop
icebp
xcrypt-ctr
cmpsl
cwtl
call
loop
fsts
mov
add
and
call
dec
add
inc
mov
add
std
inc
arpl
das
lods
pand
mov
aaa
pop
mov
stc
nop
jecxz
fiaddl
add
scas
cmpb
insl
add
push
sbb
xor
jbe
lcall
popf
add
shrb
outsb
icebp
jbe
xchg
add
hlt
lcall
mov
jnp,pt
inc
pop
pusha
jl
add
sbb
cli
add
add
dec
add
inc
mov
je
addl
and
rcll
push
sub
mov
cmp
ret
mov
arpl
dec
insl
outsl
clc
cmp
jecxz
pop
into
or
ja
pop
dec
jl
inc
or
pop
movsb
fucomi
cmp
mov
sahf
mov
add
push
pop
inc
add
fldenv
pop
mov
lock
enter
add
or
dec
and
sub
movsl
inc
cwtl
inc
jp
xor
mov
inc
add
bound
xor
xchg
clc
mov
outsb
arpl
xchg
out
add
stos
pop
mov
xor
popf
mov
push
cld
xor
or
jle
add
insb
rol
mov
setbe
pop
dec
pusha
ds
adc
repnz
adc
je
jp
or
or
lds
gs
and
add
push
push
ret
ljmp
popa
xlat
xchg
sbb
sti
sub
pop
dec
mov
add
sbb
lcall
jno
push
jle
hlt
cmpps
gs
xor
orb
enter
and
lcall
test
outsb
clc
cmp
mov
inc
xor
imul
loopne
add
inc
or
xchg
add
gs
jl
jecxz
add
loope
mov
cwtl
pop
ficompl
mov
jns
test
mov
cmp
subb
pop
sbb
mov
shrb
xchg
orb
aad
loope
adc
mov
xchg
loopne
and
mov
push
sarl
sbb
mov
in
hlt
arpl
pop
out
iret
dec
and
push
add
dec
sub
pop
psrad
push
cli
call
cmp
jg
in
mov
add
sub
stc
in
add
or
lahf
push
fldl
aaa
and
cmp
or
mov
dec
sbb
push
adc
add
inc
ljmp
pop
or
sub
or
sarl
std
jns
cmp
xchg
and
sahf
pop
stos
scas
stc
dec
or
cs
mov
aas
dec
add
out
mov
xorl
test
jae
jne
pop
gs
jg
jb
rcrb
push
sbb
add
je
out
movl
stos
xor
add
aad
lret
cs
mov
mov
lcall
stos
lret
mov
test
pop
add
icebp
out
and
js
add
fdivrs
mov
dec
add
int3
push
pop
pop
lcall
xchg
pop
pop
push
jno
cmp
push
aad
daa
faddp
jecxz
sahf
add
sub
imul
cmp
push
and
test
adcb
adc
lock
add
rcll
iret
cmp
mov
pop
arpl
mov
cmc
cwtl
or
cmp
in
xchg
mov
ljmp
push
jb
fcoms
pusha
je
rorb
mov
pop
add
das
adcb
incl
mov
and
sbb
lea
mov
inc
cmp
stos
shlb
frstor
xor
fwait
cmp
dec
inc
mov
cld
sub
dec
inc
lret
add
add
dec
iret
aaa
or
lods
lcall
inc
mov
int3
add
stc
jp
imul
shl
pusha
xchg
xor
mov
cmp
add
cmp
fdivs
inc
lret
fs
call
in
nop
jb
insl
jecxz
inc
add
add
sub
scas
mov
pushf
jle
pop
sub
sub
adc
mov
loope
push
ja
in
mov
cld
test
xor
mov
push
sahf
add
pushf
shlb
add
xor
inc
add
lock
mov
js
add
xchg
push
mov
xor
mov
or
xor
inc
das
xor
divb
loop
push
cmpsb
mov
sarb
nop
arpl
lcall
add
or
push
jne
pusha
lock
pop
jl
or
pop
in
jae
pusha
into
inc
bnd
xchg
cmc
ss
pop
scas
enter
add
sub
insb
in
sti
jne
fwait
add
sbb
popa
cs
xor
add
xchg
fcomps
orb
ret
mov
mov
paddd
mov
jmp
add
andl
std
xchg
or
pushf
or
cmc
call
roll
push
xlat
inc
push
xor
icebp
sub
imul
scas
rorb
cmp
add
js
in
adc
inc
fs
mov
dec
adc
or
mov
mov
aaa
lock
mov
and
xchg
packssdw
mov
xchg
insl
movsl
xchg
mov
popa
das
lds
test
mov
test
nop
adc
rcrb
add
mov
inc
pop
iret
mov
push
xchg
or
add
ret
inc
cmp
in
frstor
add
shrb
scas
add
jecxz
mov
fbstp
or
pop
jnp
sbb
int3
faddl
push
sub
sahf
xorb
adc
and
flds
jg
loop
fs
sbb
scas
mov
mov
mov
and
push
repz
fisubs
rorl
pop
test
xchg
out
sar
mov
lss
loop
stc
pusha
in
pop
adc
sub
std
into
add
imul
data16
fsubrl
push
sbb
jmp
daa
lea
iret
add
or
scas
add
adc
popf
xor
ret
mov
push
or
add
jg
jns
pop
enter
add
rorb
addr16
inc
mov
and
notl
in
mov
fs
push
pop
pop
in
pop
insl
mov
pop
sbb
out
lock
mov
jmp
jae
add
cli
mov
xor
ficomps
out
add
mov
xor
xlat
std
rolb
add
mov
loop
jbe
sahf
push
enter
add
in
bound
push
sub
dec
das
popf
pop
sbb
out
or
test
or
mov
add
test
in
mov
mov
jmp
mov
inc
fnstsw
add
lods
mov
andb
add
sbb
scas
ret
clc
jg
add
sahf
or
rolb
mov
add
add
in
outsb
xchg
jbe
fadds
push
add
pop
mov
clc
mov
cwtl
fildl
mov
inc
add
sbb
fiadds
add
and
fidivl
push
pop
stos
bound
loope
adc
cld
add
mov
sahf
push
jb
lds
sub
and
push
nop
push
push
add
shlb
test
add
inc
inc
adc
add
inc
rcr
add
cwtl
mov
push
lock
inc
lahf
lret
add
sub
gs
aad
lods
aas
push
jns
add
xor
cld
or
in
sbb
mov
lds
nop
hlt
inc
jp
pmaddwd
sub
add
add
mov
push
add
ds
pop
jbe
and
adcl
and
xlat
add
sbb
lock
pusha
and
sti
int3
inc
fstpl
dec
daa
jle
add
ret
xorb
push
add
pop
ja
pop
aam
pop
imul
inc
fstl
add
lcall
ljmp
in
inc
xor
and
pop
jmp
mov
add
inc
aas
insl
call
push
cld
scas
lret
stc
sbb
int
cli
xchg
insl
popf
fstps
into
cmp
pusha
repz
pop
inc
jnp
sub
out
gs
mov
add
jle
pop
push
cli
add
mov
mov
xchg
xchg
mov
pop
ja
mov
addb
mov
add
jb
mov
in
push
sbb
loope
dec
cs
push
nop
cmp
lods
push
clc
ds
out
push
adc
outsb
mov
addb
mov
sarl
rcrb
sub
lret
movl
cwtl
fiadds
into
add
inc
movsb
mov
aam
jb
repnz
lds
sub
cld
out
mov
adc
sub
push
add
sbb
add
adc
inc
lea
ret
fcompl
xor
mov
addl
nop
bound
add
enter
sti
js
add
outsb
addb
rolb
sub
push
dec
pop
xorb
arpl
test
and
push
add
testb
test
and
enter
into
xlat
mov
add
mov
fdivrl
mov
xor
cmovnp
jge
and
rorl
add
aam
js
add
loopne
fmuls
les
add
jo
jmp
pop
add
std
cmp
sub
dec
add
lea
arpl
xchg
stos
and
in
inc
cmp
cli
aas
mov
xorl
stc
outsl
add
adc
inc
add
xor
mov
std
nop
adc
push
push
and
inc
and
gs
xor
fisubrs
sbb
mov
xor
adc
add
xor
jbe
mov
add
mov
dec
ficompl
add
xchg
dec
jne
mov
mov
insl
cmp
in
add
lock
scas
pop
call
mov
je
lret
inc
outsb
pusha
shr
push
xchg
dec
add
jecxz
fwait
add
lret
ret
mov
ja
add
jmp
leave
ljmp
addb
xor
push
in
sbb
jo
shl
in
mov
cli
mov
xor
imul
notb
out
jle
adc
xchg
loopne
lds
fwait
add
cltd
ss
cwtl
lock
add
cmc
pop
rcrb
out
push
cmp
lret
add
lcall
xchg
inc
loope
push
cwtl
mov
aad
out
rorb
add
nop
in
ss
sbbl
sub
lods
shrl
icebp
add
dec
mov
inc
xor
ja
out
jb
btrl
jle
movsb
add
adc
shrb
fnsave
mov
or
inc
out
add
scas
jo
cmpsb
loope
testb
mov
inc
mov
daa
and
add
cmp
mov
add
sub
adc
inc
insl
jns
add
add
daa
stos
sahf
cmp
movsb
out
inc
cmp
gs
hlt
xchg
addps
scas
sub
mov
mov
push
fdivrs
xchg
pop
nop
or
ret
inc
add
gs
ret
imul
fldl
cmp
or
mov
sub
add
dec
lock
jecxz
cwtl
aas
ja
add
sub
add
scas
mov
push
jl
add
loop
fistpl
jne
enter
cmp
adc
repnz
cli
add
pop
clc
xchg
jno
ss
add
arpl
push
sahf
dec
dec
add
inc
sbb
std
mov
or
rclb
mov
mov
push
add
xchg
iret
nop
add
add
or
mov
inc
cli
sub
mov
lahf
daa
adc
fsubrs
lods
andb
mov
shl
jmp
or
call
nop
pop
rolb
mov
add
test
dec
pop
mov
push
les
pop
adcb
adc
lret
pop
mov
cltd
mov
add
cmp
push
xchg
pushf
bound
mov
xchg
mov
int
add
pop
out
aaa
adcb
cmp
inc
movsl
iret
xchg
add
xor
ss
sbb
push
loopne
pop
xchg
shlb
push
aad
add
ret
fidivrs
jbe
jg
rcr
or
cmpsb
push
cmp
jge
rclb
les
daa
adc
xchg
fucomi
dec
in
clc
outsl
add
adc
stos
cmp
js
xchg
stc
cmc
push
xor
add
mov
and
leave
and
add
mov
lock
hlt
sbb
xorb
sti
mov
xchg
add
inc
roll
push
mov
jp
push
inc
add
repz
cs
add
xorl
incb
sbb
pop
pop
or
lods
and
push
dec
mov
add
nop
sbb
xchg
jge
inc
add
cs
adc
btc
push
or
cwtl
sarb
mov
pop
fwait
dec
enter
or
mov
xor
fwait
int
pop
add
lcall
cmp
mov
cli
int3
jns
and
dec
sti
add
je
ret
add
lret
mov
shr
or
add
inc
aaa
dec
add
add
fld
and
clc
add
pop
mov
add
pop
sbb
setb
out
xlat
sbb
add
jns
mov
inc
mov
xchg
rorl
xchg
jecxz
sahf
add
inc
or
loopne
daa
xchg
out
lds
scas
mov
jecxz
imul
pop
and
xchg
and
mov
dec
sbb
jge
jns
out
sbb
xchg
and
push
pop
arpl
inc
add
cli
lods
popa
std
pop
inc
je
lock
pusha
aas
mov
outsb
mov
test
sbb
jbe
add
ds
pop
add
in
and
add
xlat
lcall
sti
popf
xor
push
ds
add
lret
mov
inc
cmp
mov
inc
add
inc
cld
mov
fiadds
stc
ror
push
xor
xchg
sub
inc
loopne
imul
and
add
ret
add
out
push
or
rorb
add
mov
mov
andl
adc
adc
out
inc
fisubs
add
cmp
add
loopne
sub
mov
dec
lds
xchg
or
lahf
xlat
shlb
cmpsl
inc
jl
nop
icebp
adc
jp
scas
fs
cli
imul
dec
js
mov
movsl
sbb
sub
mov
sbb
cld
dec
push
cmp
add
fmuls
fisttpl
add
in
add
adc
add
mov
psubw
faddp
jo
jecxz
add
loop
lods
jb
add
or
add
inc
and
add
mov
cmpsl
adc
ret
jne
xchg
dec
mov
inc
fs
or
aas
movsb
fsubs
add
fwait
push
sarb
adc
stos
add
testb
leave
rclb
xor
imul
scas
xchg
mov
push
cltd
nop
adc
daa
hlt
xor
dec
mov
fstpt
sbbl
outsl
shrb
add
dec
nop
mov
add
lcall
add
icebp
cs
mov
add
xor
mov
add
dec
repz
sbb
nop
enter
testl
rcl
add
sbb
dec
mov
nop
dec
inc
add
inc
xlat
scas
dec
inc
mov
pushf
fwait
add
mov
xor
sub
push
xchg
pop
xchg
fcoms
mov
fcmovb
inc
add
test
enter
add
xchg
scas
jnp
xchg
mov
inc
jge
add
mov
mov
jmp
sbb
in
cli
js
lcall
mov
pusha
ret
push
ret
pop
mov
test
push
add
xor
inc
call
outsb
iret
xor
pop
pushf
inc
cmp
in
je
add
pop
jge
lock
xor
cmp
scas
pop
push
out
mov
mov
gs
mov
pop
fsubrp
std
rclb
add
add
jnp
ja
rcl
add
shrl
adc
sbb
push
xchg
adc
and
inc
pusha
dec
sbb
pusha
subb
jge
ret
mov
imul
pushl
add
lret
inc
lea
add
sahf
fsubrs
sbb
jle
cmp
sar
out
mov
clc
add
mov
shlb
add
mov
inc
fstl
inc
loope
sbb
sbb
arpl
push
add
out
sub
in
adc
mov
inc
gs
add
es
cs
das
xor
pop
pop
jo
dec
lahf
sbb
dec
movsl
sbb
sbb
scas
adc
dec
faddl
imul
xchg
fdivp
loop
mov
and
fldt
inc
jns
sbb
pop
sub
cld
insl
mov
jae
add
clc
or
inc
jle
pop
mov
xor
cli
add
or
loop
pusha
jle
orb
test
sub
mov
popf
cmp
dec
jb
add
out
push
adc
pop
arpl
scas
lods
pop
sbb
es
popf
mov
arpl
ss
sbb
ja
add
mov
mov
rolb
sbb
dec
fildl
lahf
pop
decl
and
mov
pop
pop
add
in
dec
xchg
hlt
call
in
inc
fsubrs
sbbb
add
or
dec
push
mov
loope
sbb
inc
mov
cmp
cmp
pushf
add
dec
xor
fs
pop
fisttpll
fcmove
and
xchg
add
loopne
xor
push
sbb
popf
mov
shll
lcall
mov
and
sub
pop
mov
ds
xor
out
jmp
in
xchg
push
mov
sbb
adc
out
add
mov
mov
enter
arpl
push
mov
dec
in
add
sbb
ret
lcall
addb
mov
pop
aaa
repnz
loopne
lret
add
add
fwait
jge
adc
add
notb
push
inc
fcomps
add
movsl
dec
mov
dec
sbb
sbb
flds
pop
or
in
sub
movsl
add
inc
movsb
mov
dec
pop
mov
fsubrl
test
or
mov
negl
loopne
push
stos
inc
jge
fs
in
sar
pop
cmp
dec
add
aaa
jmp
call
pusha
mov
fisttpl
ret
add
jle
add
adc
lcall
add
add
sbb
jp
add
cs
je
popa
fiadds
shrb
int
das
inc
orb
xchg
adc
pop
pop
adcb
cmpb
jns
sub
pusha
mov
incl
popa
add
cmpsb
or
ret
mov
cmp
push
add
hlt
add
sub
jl
add
xchg
mov
out
bts
test
ds
test
ss
add
add
pop
loopne
sub
mov
cmp
xor
push
cwtl
xor
add
mov
adc
xchg
inc
mov
and
imul
add
adc
add
sub
fiaddl
aam
add
xor
int3
inc
out
pop
lods
push
ss
je
popl
subl
psubw
pop
mov
mov
ss
mov
add
sbb
inc
je
loop
std
xor
mov
jp
inc
xchg
add
shlb
add
mov
or
loopne
dec
popa
xlat
hlt
add
sbb
aaa
add
lar
add
pop
xlat
nop
aaa
mov
jl
repnz
jo
cli
add
jns
xchg
bound
dec
aam
arpl
cmp
jno
xor
cmp
dec
mov
in
aaa
ja
xor
add
adc
xlat
loop
jo
fchs
pop
dec
push
cmp
sub
add
mov
jnp
lahf
rolb
pop
in
mov
sbb
enter
int3
push
push
jnp
insl
adc
loopne
add
sbb
shrb
lcall
scas
mov
rcl
jp
push
push
add
and
shl
gs
add
imul
add
outsb
adc
mov
dec
js
add
shr
bound
pusha
arpl
and
add
addr16
lret
out
scas
xchg
push
fimull
lcall
push
push
scas
sbb
add
movsb
rcrb
jno
test
mov
repnz
add
sbb
imul
cmp
mov
dec
int3
bound
sbb
ss
dec
cmp
movsl
jg
lahf
cmp
mov
hlt
add
rcl
jo
add
push
dec
xchg
pop
mov
lret
outsl
add
stc
ret
dec
adc
xor
add
push
rcl
rcrl
push
stos
test
neg
fs
add
xchg
xor
add
mov
add
rolb
mov
nop
aas
outsb
pop
add
lds
mov
add
cli
call
pop
add
add
in
add
push
cmpsl
push
stos
dec
sbb
mov
mov
daa
add
add
jg
addr16
nop
adc
adc
dec
xor
add
pusha
jns
sub
inc
aas
xchg
cmp
xchg
jmp
jle
add
sarl
inc
lock
cmp
pop
bswap
lods
in
add
inc
adc
rorb
shrb
ret
xchg
dec
sub
add
sahf
imul
cmp
hlt
fstps
scas
addr16
jne,pt
and
ficompl
cmp
sbb
pop
pop
faddl
das
stc
mov
add
sbb
push
xor
jmp
add
push
mov
add
inc
mov
jecxz
inc
test
je
imul
addl
mov
pop
sbb
cmp
rorb
add
cmp
lcall
loope
push
js
addb
icebp
sub
jns
add
push
call
cmp
adcl
mov
jl
sub
jecxz
push
xlat
and
add
mov
mov
mov
cmp
add
mov
add
jle
cmpsb
fiaddl
stc
add
arpl
outsb
cs
mov
sbb
lds
ret
sub
add
rolb
mov
arpl
xchg
in
nop
out
mov
jo
inc
sub
sbb
or
mov
jo
add
lods
pop
sbb
les
leave
pop
scas
mov
mov
dec
inc
fisttps
std
xor
adc
lock
xchg
testb
mov
lods
hlt
or
push
mov
test
add
jbe
roll
cmp
adc
cmp
fldcw
repnz
add
pusha
sub
jnp
loopne
mov
lods
add
adc
rclb
or
push
pop
repnz
and
add
notb
inc
sub
out
iret
lret
mov
lahf
pop
add
push
push
sub
and
inc
xor
mov
add
pop
push
pusha
stos
rorl
sti
lcall
cmp
add
in
jo
pop
mov
addb
push
rcrb
cs
inc
add
push
and
into
mov
in
testb
je
sbb
arpl
scas
add
rolb
xchg
cmp
push
mov
js
jae
or
sbb
jne
nop
push
mov
cmpsl
dec
clc
add
mov
sbb
adc
inc
js
pop
xor
xorb
xor
pop
add
xlat
aam
mov
enter
cmpsl
cmp
cmp
cmp
and
add
std
mov
imul
imul
loope
mov
mov
in
out
pop
add
or
test
mov
out
bound
lods
js
ljmp
adc
push
add
fisubl
inc
push
xor
dec
clc
mov
mov
add
jnp
sbb
add
fcompl
and
mov
cwtl
sbb
adc
inc
or
inc
sub
dec
sub
add
out
lret
cmp
push
cwtl
inc
clc
or
or
inc
xor
dec
mov
cmp
jnp
jl
orb
mov
sbb
xchg
aas
inc
repnz
cmpb
lcall
xor
into
mov
jae
add
jl
inc
lcall
push
ret
rcl
scas
sti
xchg
fsubrp
fcomps
inc
add
xchg
pop
mov
add
push
leave
add
push
insl
mov
add
fnstenv
or
pop
out
aam
add
inc
test
in
add
or
or
add
sub
movsb
inc
pop
cmp
add
or
ss
xchg
mull
fisubl
pop
jecxz
cmpsl
cmp
inc
sub
and
inc
fistl
mov
cmp
std
cmp
mov
add
out
xchg
lret
ficoml
push
push
xchg
push
bswap
mov
fnstsw
mov
xchg
cmp
push
mov
nop
add
lret
fcomip
xor
clc
cwtl
dec
mov
outsb
mov
add
lahf
pop
mov
sub
inc
lret
rcr
xor
out
mov
popa
les
mov
xor
jg
lcall
lret
add
sub
sbb
ret
dec
sub
cli
ret
inc
nop
into
mov
push
int
ss
mov
or
push
xchg
sarb
sbb
mov
std
mov
jp
xchg
clc
jb
or
xchg
cmp
mov
adc
ret
add
aad
pusha
mov
and
jl
jg
jns
ljmp
rcrb
sub
inc
adc
arpl
daa
sti
push
in
insb
inc
sbb
or
cmp
inc
add
xchg
imull
stos
loopne
add
mov
leave
jno
or
aas
adc
addb
xor
xchg
test
add
push
push
fcomps
jo
jle
inc
pop
add
fcoml
aaa
ljmp
outsl
cmp
div
or
or
add
aas
rorb
inc
arpl
pusha
mov
lock
jmp
lahf
ret
add
cmpsb
insl
push
add
pusha
mov
add
pop
bound
jnp
add
and
add
or
stc
adc
mov
add
sub
ret
mov
nop
mov
fisubs
shl
mov
lcall
or
sub
mov
dec
push
xchg
in
mov
add
in
fldcw
lock
aad
pmaddwd
add
jg
out
in
sarb
add
sbb
add
cmp
test
dec
push
fmulp
push
xlat
sbb
mov
jb
rclb
add
mov
js
addb
jns
cmp
ds
xchg
jb
sub
hlt
div
in
inc
adc
xchg
aas
push
sub
loopne,pn
add
sbb
pusha
xchg
mov
inc
jle
ljmp
or
add
mov
lods
sahf
add
clc
push
jne
jge
sbb
ret
sub
or
inc
push
lcall
pop
inc
ljmp
outsb
mov
sub
cld
stos
mov
adc
imul
cmp
cmpsl
inc
call
pop
push
adc
xchg
and
jae
stos
mov
addb
mov
fstpt
insl
sti
negb
xlat
outsl
sub
mov
dec
cmp
arpl
test
dec
add
mov
lret
arpl
lds
mov
cmp
sbb
std
movsl
test
or
add
and
pop
jg
mov
rcrl
mov
popa
rolb
ret
pop
cmp
mov
sti
test
rcrb
push
fnstcw
push
das
inc
cmp
leave
adc
mov
stc
cmpb
add
add
stos
shrb
add
scas
bound
add
push
cwtl
pop
cmp
int3
inc
jne
cmpsb
add
push
cmpsl
repnz
add
incb
mov
sub
xchg
lds
xchg
xor
out
dec
adc
orb
ja
jp
add
fndisi(8087
rcrb
in
rolb
idiv
icebp
popa
push
mov
aas
in
pop
add
dec
pop
add
ds
adc
dec
mov
addb
cltd
rcrb
dec
jae
add
xchg
pop
std
insb
or
push
shlb
out
loopne
notl
popf
loopne
cmp
call
mov
insb
das
xchg
xor
bound
adc
push
push
pop
rolb
cmp
and
dec
jle
mov
or
ljmp
xor
mov
add
pop
mov
and
and
repnz
add
ret
add
int
rorb
cli
stos
in
jne
push
pop
movsl
dec
add
loope
jo
addb
push
aas
jo
mov
add
and
xor
sahf
arpl
enter
mov
add
int3
call
lea
dec
inc
cmp
jge
icebp
xor
inc
test
cld
push
testl
das
inc
dec
dec
add
jmp
push
adc
or
popf
sub
jnp
sahf
call
dec
sarl
shrb
int
push
mov
xchg
sub
jns
add
xchg
fs
add
adc
das
imul
cmp
xor
mov
addr16
je
inc
add
xchg
test
movsl
push
inc
sub
push
jns
push
add
es
sbb
jo
add
hlt
xor
ds
xchg
mov
and
add
repnz
add
xchg
and
mov
add
or
or
cltd
and
and
out
add
fcomps
sbb
ja
pop
shl
add
mov
cmpsl
inc
add
repnz
sbb
add
inc
cmp
out
repz
fcmovb
add
add
test
aaa
arpl
adc
xor
xchg
add
pop
adc
push
inc
add
cmpsb
cld
sbb
sti
sub
add
in
add
mov
inc
jmp
xchg
jo
xchg
pop
sub
lds
sbb
inc
cmpsb
int
in
popa
add
cli
sahf
mov
cmp
jle
pop
pop
sldt
or
outsl
aas
inc
orb
mov
dec
mov
pop
or
hlt
out
out
arpl
xchg
nop
fiadds
xor
ret
mov
stos
pusha
xor
add
fnstenv
das
in
into
lsl
inc
push
and
fmul
aam
add
mov
fcoml
test
add
pop
js
xor
test
cmp
lcall
negb
add
add
mov
orb
aas
fadds
push
mov
std
and
roll
mov
mov
loopne
aam
add
and
inc
add
mov
sbb
add
dec
sahf
cmovl
outsb
pop
fistl
jecxz
outsl
daa
enter
add
les
inc
push
and
pop
cli
clc
dec
pop
add
arpl
sub
adc
ret
mov
xor
popa
test
jl
sarb
mov
cmc
lods
adc
jo
jl
fiadds
push
xor
mov
pop
dec
and
push
popf
std
lock
subb
add
and
cmc
mov
xchg
add
out
int3
addr16
sub
jno
inc
inc
popf
sarb
pushf
roll
frstor
and
add
bound
push
mov
call
add
xor
sahf
cmpsl
xor
sbb
or
mov
nop
test
xor
sub
cli
inc
inc
imul
add
xor
addr16
pushf
pop
xor
xor
inc
in
es
xchg
sub
aam
adc
inc
sbb
pop
fiadds
and
aam
ror
arpl
cmp
xchg
mov
nop
loopne
jle
add
xor
xchg
sbb
pop
sti
ja
dec
inc
push
lock
cmp
xchg
or
mov
pop
push
push
cmp
jnp
inc
sbb
add
mov
add
add
sahf
insb
xchg
shrb
mov
sti
pop
xchg
inc
xchg
std
jp
mov
or
cli
lea
add
mov
fsubl
outsl
lcall
jl
clc
sub
adc
testl
fwait
xor
xchg
xor
lahf
mov
xor
add
mov
pop
push
dec
xor
arpl
out
cmp
fstpl
test
add
cmp
ja
aad
mov
in
cmp
in
add
lea
cmp
inc
add
xor
fdivrl
lods
fxch
addb
nop
jns
add
mov
add
dec
ds
lcall
call
add
jecxz
rolb
dec
mov
ss
mov
pusha
shrl
sbbb
movsb
add
and
rclb
xchg
and
mov
iret
ss
and
or
sahf
ja
cmc
mov
inc
pop
jo
ret
mov
add
mov
lahf
xchg
push
add
scas
sub
add
xor
add
ret
inc
test
add
add
mov
pop
push
add
and
push
int
jp
mov
loope
add
xchg
addr16
push
xor
gs
repz
push
pop
or
add
pop
gs
xlat
mov
jl
pop
in
add
cmp
mov
jle
mov
lret
sbbb
dec
push
ds
xchg
push
movsb
push
test
hlt
add
inc
xchg
or
cmp
sub
std
outsl
add
inc
push
aas
cmp
sbb
mov
pop
push
xor
adc
mov
or
inc
and
jns
hlt
sbb
int
int3
imul
es
cwtl
push
cmpb
stc
cmp
in
inc
cmp
and
arpl
push
inc
dec
dec
lock
and
nop
repnz
push
ja
insb
add
jne
adc
scas
out
inc
or
or
mov
out
mov
cmp
lcall
add
cmc
shrl
or
cs
inc
xor
adc
sub
cmp
or
lahf
orl
sub
fiaddl
sbb
adc
jle
add
icebp
mov
stc
inc
push
sub
add
xor
call
out
int
inc
mov
add
jno
or
leave
cmp
lret
inc
or
or
dec
mov
add
insw
orl
mul
repz
add
xor
mov
add
fsubrl
pop
push
testl
nop
add
dec
add
inc
mov
testl
andb
roll
inc
sti
push
mov
push
mov
inc
adc
fiaddl
sbb
add
mov
jae
clc
pop
arpl
jbe
cltd
xchg
dec
aam
incb
inc
repz
andb
cmp
sub
add
int3
js
add
dec
and
add
sbb
jecxz
fidivrl
ror
cmp
and
inc
jno
lods
rol
sti
stc
xchg
loopne
mov
shll
dec
xchg
add
cmc
xorb
dec
jmp
movb
push
mov
push
add
fnstenv
xchg
jns
in
xor
jge,pt
cld
movzbl
cwtl
pusha
mov
add
push
inc
mov
push
in
sbb
mov
add
stos
imul
dec
je
jbe
fwait
pop
inc
push
cmp
jb
add
xchg
fbstp
ret
sbbl
cmp
inc
add
shlb
add
dec
insb
cmp
cmp
pop
pop
push
inc
lcall
jb
cli
addb
stc
enter
cmc
gs
push
ret
fwait
mov
push
add
add
enter
lods
mulb
rolb
or
repnz
add
xchg
out
add
xorb
jge
shrb
xor
xchg
inc
loope
push
push
cwtl
push
idivb
add
call
xchg
and
sbb
addr16
ljmp
inc
cs
pop
add
roll
int3
pop
into
mov
inc
sub
aaa
cmc
fdivrl
inc
xchg
scas
ficoms
imul
call
pop
dec
or
xchg
mov
js
push
ds
dec
xor
and
mov
es
cwtl
out
inc
pop
popf
ja
insb
lds
add
pop
pop
in
add
lock
or
aas
cmp
js
xor
cltd
push
icebp
repz
dec
add
stos
int
aaa
stos
and
add
or
pop
pop
faddl
mov
push
and
xor
cwtl
fs
xchg
add
ret
aam
adc
sar
inc
cltd
fwait
out
es
daa
pop
xor
insl
cmp
jp
shr
fadds
push
add
ret
pop
inc
mov
xor
movsl
out
cmp
dec
push
dec
roll
jmp
stc
outsl
add
mov
rorb
negb
add
push
add
or
into
loopne
add
adc
cmp
or
add
sub
dec
xor
inc
or
push
cmpsl
pop
insb
in
rcr
and
leave
inc
xlat
jno
js
add
sbb
jmp
and
rcrl
inc
jp
mov
jg
cmp
sti
add
xlat
in
pusha
push
jns
add
cwtl
shrl
add
or
pop
add
push
nop
pop
add
add
push
out
dec
jbe
add
stc
pop
shll
popf
inc
mov
add
xchg
xchg
jnp
cwtl
pop
jae
add
xlat
rcl
inc
or
adc
test
arpl
dec
lods
mov
pop
dec
pop
cmpsb
orb
jge
into
fcompl
addr16
dec
movsl
xchg
adc
adc
out
cli
add
aad
out
fiadds
push
dec
mov
mov
loope
loop
rolb
push
pop
add
add
arpl
fiaddl
jmp
inc
into
or
xchg
mov
xchg
jbe
fwait
jle
jp,pt
movmskps
jecxz
add
push
sub
aam
and
inc
in
and
xchg
add
popf
jbe
pop
testl
jae
test
popa
sub
or
aad
mov
mov
pushf
cmpsb
mov
xchg
jae
push
xchg
push
adc
jo
call
and
and
xchg
push
fmuls
mov
mov
movsl
mov
sbb
add
sub
push
add
inc
aam
dec
lock
nop
inc
add
sub
fidivrs
pop
jmp
hlt
push
or
popa
and
jmp
or
dec
insb
or
mov
inc
inc
loopne
out
pop
cmp
inc
and
inc
ss
in
divb
add
inc
aad
inc
xor
lods
aas
mov
or
mov
nop
xchg
pop
mov
adc
and
rcrb
add
push
ret
hlt
inc
add
mov
add
add
pop
add
dec
fisubrs
push
add
inc
sbb
mov
cmp
shlb
push
int
inc
mov
mov
fnstcw
imul
sbb
insb
fidivrl
sub
inc
into
les
popf
arpl
jg
ds
cmp
add
or
sti
inc
sub
inc
movsb
orl
pop
arpl
dec
pusha
mov
and
jnp
sbb
xor
in
mov
push
push
mov
cmp
jl
les
fdivs
ret
fldcw
in
rcrb
push
cli
mov
inc
add
pop
lea
add
jno
push
xor
lds
repnz
add
lods
popl
bound
xor
shlb
sbb
std
mov
jecxz
lcall
sar
dec
add
push
cmp
inc
dec
mov
push
out
incl
xchg
add
lret
cltd
mov
cmp
sbbb
add
gs
jecxz
add
add
mov
add
jns,pt
jl
rcrl
repz
jae
cmp
push
or
pop
dec
add
leave
test
sahf
adc
add
jmp
fstp
add
add
push
inc
in
add
stc
scas
cmp
mov
cmp
jnp
inc
xor
xchg
dec
sbb
es
mov
cmc
arpl
jge
cwtl
std
mov
rorb
in
lret
inc
imul
lds
cmpsl
and
jae
negl
inc
clc
fs
pop
lret
subl
mov
xchg
rcl
cli
add
filds
pusha
popf
imul
stc
inc
push
sbb
add
inc
fstps
jmp
xor
push
rcll
ret
setle
adc
push
cmp
lret
ficompl
and
inc
loopne
adc
push
jp
xor
std
jge
add
aad
aam
and
or
ficomps
add
addps
pop
cmpsl
push
add
mov
outsb
adc
repz
jae
add
pusha
sahf
mov
xor
aaa
arpl
xor
sub
nop
pop
pop
movl
dec
ds
sbb
xchg
je
jo
adcb
inc
adc
pop
or
ficoms
jne
repz
jnp
into
jg
pushf
add
xchg
adc
hlt
popa
mov
pop
outsl
fcmovbe
inc
pop
add
adc
push
stc
mov
jns
shlb
jmp
add
inc
stos
push
adc
loope
adc
xchg
fcmovnb
rclb
sub
add
movsl
add
mov
sub
add
xchg
sti
xor
or
add
enter
and
push
in
out
xor
lods
push
pop
gs
dec
rcrl
sub
jne
and
add
xchg
inc
fsubr
lret
popa
dec
add
dec
sbb
mov
push
icebp
add
test
add
data16
arpl
mov
or
addl
lods
icebp
adc
iret
mov
xor
add
in
icebp
out
xlat
inc
add
sbbb
cwtl
aam
lahf
jbe
xchg
mov
addr16
das
add
sahf
mov
sar
std
add
xchg
rorl
xor
ljmp
call
fiadds
loopne
cmp
and
mov
sub
add
das
mov
pop
add
test
push
addl
popa
aaa
out
fcoms
pop
add
jne
ror
arpl
clc
push
lret
cmp
mov
dec
mov
sbb
cmp
lock
icebp
in
or
inc
in
sbb
sub
sahf
cmp
out
andl
das
xor
add
cld
xchg
aaa
xlat
add
jnp
mov
mov
xor
movnti
repz
pusha
add
rolb
rcll
mov
ja
add
adc
or
inc
decl
sub
cmp
mov
add
sub
lods
mov
inc
cwtl
stos
adc
dec
lahf
mov
pop
movsl
pusha
sarb
out
iret
rol
dec
pop
arpl
jge
adcb
mov
mov
sbb
inc
lods
xchg
cmp
mov
or
add
sbb
push
add
xchg
sub
add
cmpl
pop
xchg
movsb
shlb
jnp
imul
xor
stos
add
shlb
lret
arpl
push
push
imul
dec
push
and
nop
xor
dec
ds
lods
jbe
adc
xor
add
cmp
jg
xchg
cmpsl
sbb
push
mov
xor
es
enter
or
scas
pop
cli
or
sub
fidivl
fsubr
aaa
pavgb
add
sahf
lock
outsl
loope
or
dec
nop
outsb
add
jg
pusha
dec
mov
or
add
jbe
cwtl
daa
movsl
push
jl
add
test
cmpsl
mov
push
arpl
xchg
roll
add
mov
inc
mov
xchg
sbb
nop
call
repz
add
mov
loopne
add
mov
loope
mov
test
jle
cmp
or
dec
dec
dec
add
stc
mov
sub
mov
fsubrl
clc
add
sbb
pop
pop
out
inc
aas
add
ss
rolb
inc
addr16
mov
arpl
bnd
in
shll
dec
or
mov
in
add
or
add
inc
jo
das
mov
arpl
loopne
mov
pop
xor
xchg
insl
xchg
jmp
imul
pop
mov
pop
rcrl
test
sub
jl
add
sbb
fadds
push
xor
cmpsb
jbe
jge
push
push
and
add
negl
add
jno
dec
mov
imul
popa
pop
push
jecxz
loop
jns
andb
rcl
add
icebp
out
bsr
fsub
pop
inc
add
outsb
ret
mov
sub
stos
adc
pop
jnp
fiaddl
inc
rcll
add
add
jno
bound
inc
iret
fsubs
mov
test
mov
add
andb
pop
in
xor
xor
arpl
cmp
push
or
insl
xor
int3
mov
inc
loope
arpl
inc
add
test
iret
mov
cmp
fs
test
popa
jmp
inc
filds
in
inc
roll
xchg
test
xor
insl
idiv
loop
mov
push
les
mov
daa
pop
add
aad
enter
add
stos
addl
pop
in
push
xor
inc
cmc
pop
std
sub
in
cmp
repz
in
mov
pop
add
xlat
cmpl
sti
dec
mov
hlt
or
arpl
add
push
pop
push
orb
pop
inc
mov
stos
mov
cmpsl
jl
adc
add
dec
pop
xchg
sbb
inc
jecxz
inc
lret
test
xchg
shl
xor
fbld
pusha
mov
pop
push
mov
pop
fiaddl
jnp
imul
fnstcw
pop
push
call
inc
sub
out
fs
add
mov
jns
jg
add
arpl
add
sub
stos
add
pop
arpl
mov
mov
bswap
mov
pop
incl
shrl
xchg
add
sub
movb
lcall
mov
sub
inc
std
adc
cli
pusha
nop
jl
outsb
inc
mov
mov
ret
pusha
cmpb
xorl
popa
out
or
jecxz
add
dec
jns
cmp
mov
mov
or
lds
add
jge
ret
fcmovnb
push
jecxz
add
cmp
into
in
test
in
inc
xchg
cmp
sti
andb
add
and
jo
or
add
mov
mov
mov
and
scas
bnd
icebp
add
ljmp
add
jg
pop
dec
push
popf
inc
push
inc
add
mov
jecxz
add
adc
enter
sub
inc
inc
je
and
rclb
sbb
roll
out
ljmp
dec
mov
push
enter
loope
lods
outsl
xchg
mov
addb
rclb
or
cmp
sub
dec
add
lods
push
xchg
inc
shrb
add
in
rorl
mov
inc
fwait
dec
enter
hlt
adc
loopne
mov
inc
in
cmp
dec
inc
sub
and
mov
sbb
dec
std
jo
pop
add
mov
xor
icebp
inc
or
ja
inc
cmp
xchg
xor
imul
faddl
jge
test
dec
sub
inc
pop
stos
pusha
inc
sbbb
pop
pop
in
call
orl
pop
adc
cmp
add
dec
or
dec
add
add
repnz
jge
add
cmpsl
pop
mov
add
inc
pop
adcb
lds
fldl
sbb
pop
sub
mov
add
iret
cltd
stos
ss
dec
inc
add
addr16
push
or
aas
pop
popf
lret
daa
lcall
inc
lods
dec
scas
sbb
cmc
mov
xor
push
push
mov
movl
jns
fdiv
or
inc
cli
inc
add
stos
xor
das
add
mov
jg
sub
xchg
sbb
mov
rorl
xlat
jo
xor
mov
js
push
sub
jo
sub
cmp
xchg
fldenv
add
sahf
push
pop
insl
pop
cmc
and
mov
cmp
fsubs
push
out
fs
inc
insl
lock
push
leave
xor
cmp
add
lds
sub
mov
inc
add
push
fldl
shrb
add
insl
loop
sub
cmp
rcrl
ljmp
in
stc
add
inc
lret
adc
cwtl
mov
sub
in
rolb
mov
insb
sub
add
movsb
add
pop
call
mov
aas
jecxz
into
sub
lods
mov
pop
pop
in
loope
iret
loope
fdivr
push
jg
adc
add
lock
icebp
lods
loope
add
adcl
adc
sbb
lea
xor
add
push
mov
sbb
push
add
dec
xchg
and
call
ret
dec
cltd
inc
outsb
movsb
add
push
push
sbb
sub
xchg
in
fs
jl
fiadds
das
aaa
pop
mov
cwtl
add
lods
mov
in
mov
adc
pop
nop
movsb
jnp
pop
nop
pop
sbb
lret
inc
testb
es
mov
add
ret
pop
add
loope
push
das
add
inc
arpl
pusha
sub
cmpl
push
mov
add
xchg
fs
xor
cmp
add
adc
add
xchg
cmp
arpl
or
add
dec
shrl
aad
or
add
lret
pushf
inc
add
movups
xchg
mov
add
in
fcmovb
xor
inc
or
lahf
inc
mov
mov
into
sbb
lea
das
cmp
mov
fcmovu
or
xchg
jb
jle
cmc
or
js
bound
mov
rolb
movsl
add
push
lahf
in
mov
sbb
mov
pop
add
arpl
mov
fadds
mov
and
and
sbb
aad
add
add
outsb
lcall
mov
inc
push
je
shl
fidivrs
pushf
or
dec
lea
push
shl
sbb
pop
mov
out
shlb
sbb
push
add
movsl
or
imul
add
aaa
add
insb
fyl2xp1
les
std
or
out
aad
ficomps
inc
in
mov
pop
add
xchg
xchg
out
jae
xchg
or
inc
jmp
add
mov
aad
push
mov
leave
adcb
mov
out
add
test
add
xchg
ror
leave
lcall
fnstcw
cmpsl
stos
and
add
push
cmc
das
dec
adc
aaa
add
push
xchg
inc
outsl
add
xchg
in
add
les
mov
lock
and
jne
arpl
enter
pusha
sbb
test
imul
ja
xor
cmc
insl
add
std
popa
les
js
cs
inc
pop
imul
mov
cmp
push
incb
repnz
pop
sahf
inc
popf
cld
rcl
cld
mov
ss
ljmp
flds
add
mov
sub
lret
orl
std
fwait
and
and
inc
rcll
mov
jecxz
lret
mov
repnz
pop
and
andl
in
mov
mov
addr16
lock
aaa
push
addb
or
dec
mov
add
inc
pop
mov
call
movsb
cmpsl
popf
addb
int3
sbb
mov
or
scas
ds
add
hlt
push
call
ljmp
mov
cmpb
fs
push
hlt
mov
sti
js
adc
push
shl
or
pop
adc
or
or
ds
stc
add
pop
int3
ja
inc
add
les
push
lret
pop
sub
inc
xchg
jp
add
ret
push
dec
add
lcall
mov
icebp
pusha
mov
arpl
pushl
ret
mov
jle
mov
adc
xchg
shlb
pop
mov
arpl
push
add
nop
subb
leave
add
sub
xchg
adc
and
inc
lcall
add
jle
adc
arpl
add
jl
sub
loop
add
mov
loop
add
arpl
sub
mov
test
cmp
add
cld
stc
or
aad
mov
xor
mov
or
dec
add
xor
xchg
int3
inc
cmpsb
and
add
imul
es
mov
add
ja
cmpsb
lods
pop
cmp
popf
ret
push
in
and
add
and
push
add
jb
jno
pusha
popw
adc
cmp
repz
add
dec
add
inc
add
mov
add
ss
sbb
cs
shll
insl
orb
lds
jg
or
das
loop
mov
mov
int3
cmp
add
out
dec
cmp
xchg
fwait
call
and
fisttps
lret
incl
aam
hlt
mov
add
js
jle
pop
ucomiss
sbb
pusha
mov
in
push
sub
out
pop
dec
jo
add
cmp
push
add
loopne
jnp
xor
mov
push
ja
add
dec
push
dec
in
add
and
mov
cmp
add
loope
dec
mov
mov
sub
mov
adc
add
outsb
lret
dec
mov
adc
dec
popf
inc
add
push
pop
addb
int3
jecxz
stos
cmp
mov
fidivrl
mov
add
jnp
shll
add
inc
or
sub
push
xchg
ljmp
mov
sbb
ret
or
and
rcll
or
aas
xchg
popf
sbbb
inc
je
dec
pushf
add
mov
xchg
arpl
mov
roll
pmaxub
xor
pop
sbb
inc
xor
rcl
test
out
mov
rorl
add
add
dec
jb
inc
dec
xor
orb
push
fldt
and
out
out
out
mov
xchg
loopne
addl
inc
lock
cli
mov
xor
push
xorb
enter
shll
dec
pop
scas
outsb
jg
fst
xchg
imul
jbe
xor
xor
dec
xchg
push
enter
mov
jle,pt
cmp
mov
xchg
and
insl
push
sub
push
fldenv
add
cmpsb
push
add
repnz
movsb
xor
cmp
ficoml
inc
pop
add
das
fwait
sub
sub
jno
add
adc
jo,pt
xor
and
js
aas
subb
add
imul
lret
pop
add
cs
andl
cld
sbb
mov
push
sahf
jo
lcall
or
jg
aaa
adc
popf
addr16
mov
inc
scas
flds
test
xor
inc
cmp
imul
fwait
add
mov
inc
and
inc
add
rcrb
lret
bnd
push
out
inc
rolb
mov
negl
test
push
loope
cmpsl
inc
mov
jns
pop
mov
sbbb
test
mov
jno
sbb
jl
aas
shll
sbb
sarb
add
or
xchg
nop
push
add
mov
mov
xchg
mov
inc
mov
shrb
cwtl
inc
cld
push
jg
mov
leave
aaa
push
popf
add
xor
cmp
arpl
out
cmc
movsb
add
negb
jl
pop
cmp
cmp
lcall
mov
add
stc
rcl
lods
leave
cmpb
add
xchg
inc
lahf
cmp
mov
dec
repz
arpl
jb
cmpb
test
mov
pop
lods
ret
xchg
add
aas
jecxz
bsr
add
mov
sbb
inc
int
sbb
add
scas
fsubrl
movl
mov
mov
mov
fwait
add
popf
add
filds
inc
add
orl
dec
add
xor
cld
out
cmp
call
pop
test
fwait
push
nop
rorl
outsl
fisubrs
shll
icebp
mov
jae
loop
fadds
jo
sbb
add
inc
in
dec
stos
jge
add
pop
ror
xor
ss
pushf
and
rorl
add
lock
fnsave
imul
and
push
push
sub
lahf
dec
push
push
pop
add
inc
mov
push
sti
sub
add
mov
fcmovu
in
xchg
lds
inc
sbb
pop
push
rcrb
dec
dec
roll
movl
out
lods
int3
cmp
add
out
sbb
dec
arpl
mov
popf
out
add
push
cmp
dec
sbb
add
inc
jl
xor
add
cltd
mov
aaa
pop
or
aam
nop
pop
adc
arpl
sbb
mov
inc
mov
jns
sahf
stc
push
jns
add
mov
outsl
add
movsb
inc
cmp
pop
xchg
jp
add
jge
dec
mov
sub
jo
pusha
dec
xor
adc
adc
aaa
cmp
sub
push
cmp
add
shl
xlat
loopne
xor
rclb
push
pop
push
push
add
inc
or
mov
arpl
add
dec
cmc
add
sub
jge
pop
pop
daa
push
shl
jo
add
nop
jg
das
push
add
push
inc
aam
faddl
xchg
in
arpl
inc
push
xchg
adc
jle
jae
mov
adc
outsb
and
ret
sti
test
jle
jge
inc
add
sub
sub
xchg
lods
pop
int3
cmp
inc
pop
mov
and
adc
pop
fwait
inc
movsb
stc
mov
mov
repz
ja
add
incl
xchg
inc
add
js
imull
mov
sarl
cmp
addb
in
mov
inc
daa
scas
or
out
jnp
mov
sbb
in
inc
and
push
jae
add
cmp
in
fsubl
add
inc
cli
std
stc
xchg
enter
call
mov
scas
jne
inc
sbb
mov
and
add
cmp
mov
add
pushl
in
jmp
or
and
nop
pop
leave
pop
aad
test
inc
gs
mov
je
cmpsb
sub
add
pop
pushf
cmc
xchg
loopne
jo
add
bound
jmp
cmp
xchg
cmp
sbb
jge
add
inc
ret
xchg
daa
cwtl
mov
sahf
add
in
xchg
aad
or
adc
add
out
adc
jecxz
inc
jns
test
add
inc
test
mov
or
adc
cwtl
arpl
sub
mov
ret
adc
add
rcrb
pop
add
mov
lock
xor
pop
outsb
dec
loop
xchg
pop
mov
lahf
mov
ljmp
cmp
popf
andb
jb
into
aad
jg
add
adc
jl
and
inc
je
fwait
iret
into
mov
add
inc
inc
fisttpl
push
ss
icebp
dec
sbb
jmp
jne
dec
and
aaa
sub
add
out
xchg
add
out
push
xor
jl
sbb
jecxz
pop
xlat
push
roll
dec
arpl
mov
pop
addl
sub
insl
xor
inc
pop
add
mov
push
movsl
inc
stos
inc
je
les
add
push
out
arpl
aas
int
lret
xchg
push
push
in
mov
mov
lcall
aaa
sbb
shl
inc
or
dec
iret
cmp
add
leave
mov
cmp
in
push
mov
insl
mov
mov
mov
mov
inc
clc
movl
pop
adc
out
sbb
mov
add
sub
flds
push
sti
iret
dec
mov
clc
jns
add
jp
xor
fiadds
xchg
mov
and
inc
add
mov
arpl
add
mov
pop
pop
ss
jg
xor
push
inc
push
cmpsl
fdivrs
adc
mov
insb
rorb
dec
add
sub
add
mov
push
mov
nop
xor
jge
orl
inc
add
sarb
sarb
or
lahf
loop
pop
push
inc
hlt
or
test
inc
fwait
jnp
mov
inc
add
nop
mov
or
push
jp
shrb
popa
add
push
xchg
mov
or
pop
pushf
mov
sub
call
add
inc
ja
lcall
inc
lds
arpl
add
add
adc
inc
jo
push
cmp
sbb
subl
idiv
sbb
jmp
lret
jl
mov
add
cmp
adc
test
fimuls
fidivrl
sbb
mov
mov
cmp
add
std
add
mov
es
inc
out
sbb
mov
add
int3
ret
pop
mov
lret
xchg
inc
cmpsb
adc
andb
pop
cmpsb
pop
push
nop
lret
xchg
das
jbe
add
mov
repnz
dec
adcb
mov
jp
arpl
jnp
inc
sub
je
pop
jo
xorl
cli
in
arpl
out
dec
scas
add
and
inc
js
add
jae
mov
cmpsl
lock
add
or
loope
mov
adc
inc
add
add
pop
lds
pop
mov
xchg
add
push
inc
jecxz
pusha
lcall
mov
lds
inc
mov
mov
cmp
sarb
sbb
add
adc
jne
mov
je
loop
push
pusha
inc
inc
lahf
arpl
mov
inc
mov
test
and
add
loope
mov
lea
sbb
sbb
push
out
rcrb
sub
mov
rolb
cmp
push
test
mov
rolb
add
out
call
call
push
inc
pop
inc
pusha
js
roll
inc
into
fsts
and
xor
dec
sbb
or
sub
mov
push
movb
sti
mov
push
scas
push
testb
lock
add
jmp
inc
ret
pop
cwtl
add
inc
mov
insb
arpl
jb
das
sbb
test
loope
dec
fdivrp
pusha
lds
jno
add
or
add
cwtl
push
testl
sbb
stc
xlat
add
data16
insb
test
inc
and
sbbb
add
or
inc
adc
movl
mov
add
insb
stos
push
jl
add
push
dec
sahf
loop
loopne
enter
push
jae
push
fwait
rolb
add
xchg
add
testl
inc
pop
mov
in
push
icebp
inc
dec
add
xchg
pop
inc
add
int3
fdivrp
jecxz
out
adc
dec
and
add
arpl
jae
add
dec
push
mov
ja
xchg
loope
xchg
test
jge
andb
in
test
push
mov
pop
xchg
sbb
dec
cwtl
outsl
stos
add
inc
sub
mov
and
repz
ja
inc
sbb
insb
fstpt
std
mov
rep
push
cmp
arpl
pop
mov
jp
add
or
test
mov
push
dec
add
rorl
les
push
sbb
adc
ret
cmp
inc
dec
hlt
push
cmc
daa
add
push
cmp
push
loop
add
mov
fs
push
repz
lea
les
decb
movsb
inc
add
cmp
inc
flds
add
xor
push
dec
inc
data16
gs
push
rcrb
or
aad
mov
lret
dec
in
push
stos
aaa
mov
push
add
rcrb
lret
jp
pop
xchg
repnz
add
mov
xchg
add
loop
xor
inc
add
fists
int
mov
or
imul
ret
lret
push
enter
xlat
cmp
inc
testl
in
cmpsl
addb
shll
stos
pop
roll
les
add
out
aad
mov
add
addr16
test
or
fsubrs
or
in
jg
push
push
repnz
inc
out
mov
push
add
repnz
lret
rcr
outsb
mov
out
add
bswap
mov
aaa
or
arpl
int3
hlt
cmpsb
mov
mov
pop
dec
inc
jbe
xor
out
lods
add
mov
fiadds
pop
shll
cwtl
cmp
xlat
or
daa
fwait
xor
ja
add
test
mov
iret
and
cmp
sub
adc
add
popa
scas
das
add
mov
cmpsl
lret
mov
push
cmc
inc
jle
xor
sbb
mov
xchg
gs
push
test
pushw
inc
pop
jl
sub
sbb
roll
and
repz
sub
add
inc
outsb
in
mov
stos
sbbb
adc
orb
jnp
pop
xor
stos
add
push
push
rcrl
xchg
mov
iret
sub
out
frstor
jg
add
addr16
lds
jmp
add
daa
jne
pop
js
and
mov
cwtl
test
ljmp
fs
mov
add
mov
inc
sbbb
add
inc
fldl
dec
pop
subb
arpl
rol
add
inc
jb
dec
xorb
mov
or
mov
add
inc
xchg
add
mov
jp
add
cmp
rcrb
bound
pop
test
or
addb
mov
aas
jecxz
repz
inc
xchg
fwait
sub
pop
xchg
insb
add
mov
cld
add
mov
lcall
or
lods
sarl
inc
pop
sub
or
pop
jns
in
lcall
add
lea
mov
adc
jno
add
sbb
and
add
push
mov
or
jnp
adc
adcb
int3
push
scas
pusha
push
cltd
pop
pop
inc
inc
lea
push
mov
adc
ffreep
arpl
or
sbb
lahf
mov
jl
inc
add
mov
sarl
add
mov
lock
push
cli
imul
fs
add
cltd
hlt
mov
adc
or
push
adc
add
pusha
int
cmp
cmp
jle
cmp
xchg
pop
add
std
dec
movsb
bnd
xlat
add
mov
xchg
pop
xor
loopne
add
cmp
add
xor
pop
shll
jp
std
and
rol
das
pop
pop
jecxz
ficoml
dec
lea
mov
add
mov
and
sbb
xor
push
fisubl
jnp
pop
je
icebp
mov
lods
lret
add
xchg
scas
inc
enter
cmp
mov
xchg
arpl
orb
fdivrs
jg
daa
inc
xor
jmp
jb
pusha
add
inc
les
sbb
and
inc
add
mov
pushf
sahf
aas
add
leave
inc
xchg
jg
daa
and
inc
loope
jns
inc
loopne
outsl
mov
mov
daa
xchg
lahf
aas
xor
cmpsl
pop
fisubrs
dec
sbb
xor
and
inc
mov
enter
mov
adc
subb
inc
out
or
in
loopne
cmp
add
shlb
pushf
adc
add
dec
sti
stc
jmp
aam
adc
add
cmp
push
fcoml
arpl
repz
dec
sub
pushf
mov
test
inc
add
jae
cmp
cmp
adc
push
outsl
loop
pushf
bswap
je
outsb
dec
arpl
or
adc
and
mov
fwait
add
fadd
fsub
xchg
add
lods
aam
cwtl
mov
arpl
cmp
mov
loop
sub
jns
add
in
fnstenv
cs
call
pop
inc
pop
and
sbb
std
out
stos
add
out
sarl
add
jbe
arpl
cmpsl
stos
pop
pop
cmpb
xor
pop
jo
pop
lds
cmp
mov
jb
mov
inc
addl
mov
jo
in
ret
lret
cmp
mov
pop
sti
mov
cmpl
inc
pop
in
aam
int
add
arpl
daa
xchg
jne
sub
mov
push
xorl
add
ss
jmp
mov
ret
xchg
sbb
in
add
xchg
int3
xorb
cmp
adc
mov
inc
rcrl
je
add
ljmp
add
mov
push
add
mov
sbb
insb
shll
int
add
mov
jbe
jae
movsl
in
inc
mov
in
sub
jp
nop
sbb
xchg
add
xor
testl
popa
iret
je
sbb
into
jle
repnz
loop
mov
add
and
sbb
and
add
push
push
add
stos
arpl
pusha
mov
or
ret
add
in
push
sahf
stc
jmp
xor
pop
push
into
add
test
jo
roll
in
xchg
jae
or
adc
cmp
pusha
push
or
jecxz
push
cmp
addr16
sub
ss
repnz
test
les
movsl
cmp
fstpl
pop
data16
imul
popf
jno
jge
jle
int
aam
cli
pusha
iret
rolb
lds
imul
mov
fsub
sbb
adc
add
fadds
sub
popf
dec
xchg
push
in
add
lret
lds
loop
add
ficoms
pcmpgtw
dec
and
inc
add
jb
xor
push
loopne
xor
add
sbb
shrb
add
jp
adcb
pop
or
outsb
lahf
inc
shll
jle
imul
pop
add
mov
add
mov
mov
mov
mov
and
mov
inc
mov
mov
mov
add
jecxz
mov
xor
xor
sbb
fistpl
andb
push
decb
cmp
mov
xor
add
arpl
fists
add
sbb
sahf
outsl
add
mov
jl
sub
or
insb
sub
mov
add
into
fs
xor
adc
mov
daa
add
or
cmc
add
movsl
inc
icebp
popf
inc
mov
out
in
imul
pop
push
pop
jne
clc
mov
lods
push
sahf
cmp
add
xor
mov
sarb
dec
hlt
add
popa
xchg
das
iret
cmp
adc
test
sbb
out
stos
adcl
adc
sbb
mov
inc
mov
inc
jge
psubw
es
aas
xchg
sbb
mov
add
cmp
push
xchg
add
dec
mov
inc
add
lret
insb
enter
add
loop
mov
iret
loopne
sub
adc
jg
pop
pop
push
ret
aas
data16
dec
push
mov
comiss
and
icebp
lcall
or
sub
loopne
pusha
mov
cmp
sub
or
mov
push
add
inc
imul
icebp
dec
test
aaa
arpl
jle
faddl
lahf
adc
xchg
rorb
enter
jp
xchg
ja
mov
cld
or
rcrb
cmp
sbb
les
fisubrl
add
jg
loopne
inc
shl
add
pop
rcrl
mov
or
add
call
dec
add
cli
or
fs
subl
lock
adc
inc
loope
add
test
jbe
sbb
xchg
das
and
add
fisubrs
inc
cld
mov
leave
add
or
dec
adc
adc
and
jb
lahf
out
pop
inc
mov
add
mov
pop
add
jmp
dec
add
stos
and
push
mov
inc
enter
cmp
inc
rolb
stos
add
pushf
jne
arpl
mov
sbb
lahf
ss
jo
imul
cwtl
xor
and
test
cs
and
scas
sahf
inc
addb
mov
cmp
pop
scas
add
xor
arpl
mov
mov
testb
movsb
out
adc
pop
mov
add
test
adc
inc
ficomps
inc
aaa
je
add
arpl
sub
ljmp
sbb
mov
arpl
xor
ret
jmp
fidivrl
add
mov
adc
add
ret
ret
addl
lret
cmp
add
lcall
inc
cld
loopne
xchg
jg
push
jb
mov
pusha
inc
inc
xchg
xorl
in
push
mov
imul
pop
arpl
dec
pop
out
loopne
lret
add
adc
call
fdivr
dec
xor
or
ret
test
adc
call
sbb
lea
sub
xchg
and
jecxz
pop
jno
dec
cli
lods
xlat
jo
loopne
add
inc
les
jl
push
adc
bound
jnp
js
ljmp
fs
xor
imul
in
repz
adc
out
and
sub
imul
cmpsl
fnstenv
std
dec
cmpb
mov
add
dec
sbb
aam
and
add
inc
arpl
and
cmpsb
lret
insb
inc
inc
add
sahf
add
outsl
loopne
jl
ljmp
mov
fwait
lea
rolb
sub
loopne
inc
jns
sbb
popa
push
adcb
sbb
push
xchg
jns
out
mov
mov
ret
xor
xorl
into
jecxz
add
or
add
ret
fimuls
add
fwait
ja
insl
aas
enter
add
mov
cld
inc
sbb
cmc
rcrb
out
je
add
packssdw
xlat
arpl
xor
in
inc
add
sahf
std
in
ljmp
pop
xchg
dec
dec
xchg
cltd
jae
call
inc
xchg
xchg
cld
xor
add
out
roll
arpl
aam
mov
rcr
and
add
jg
jno
dec
push
add
mov
lret
xor
xor
and
popa
jnp
add
cmpsb
out
fisttpl
sub
mov
adc
and
or
or
daa
dec
inc
add
aaa
lods
and
fnclex
add
cmp
push
fnstcw
add
stos
repnz
jg
test
rcrb
movsb
fcoml
jb
mov
add
mov
mov
and
sarb
add
pop
mov
xchg
inc
jbe
sbb
mov
lods
dec
jl
jge
pop
into
sub
movsb
fadds
adc
push
xchg
xchg
push
idivb
repz
cld
cmpsl
inc
add
imul
js
movsl
add
mov
leave
push
arpl
into
jbe
loopne
ffree
xchg
addb
das
pop
iret
subl
lcall
add
aam
outsl
inc
js
ret
jno
lods
sbb
push
cmpl
nop
xor
imul
inc
fcompl
arpl
int3
in
push
add
stc
pop
inc
out
add
push
add
mov
popa
cmp
xor
pop
int3
xchg
and
inc
rolb
mov
mov
call
addr16
xor
stos
push
mov
roll
loopne
sbb
add
xor
sahf
enter
das
sti
sub
les
jno
add
mov
mov
push
xor
sarl
iret
inc
add
mov
pop
add
xchg
push
sahf
xchg
sub
add
jae
pop
add
clc
jle
and
or
rol
pusha
xchg
push
xor
cmpsl
hlt
push
jne
xorb
mov
or
sbb
xor
mov
rcrl
popf
dec
arpl
push
ja
and
add
sti
stos
mul
jge
arpl
xchg
in
jno
pusha
leave
incb
in
add
lock
lods
xor
push
push
dec
pop
mov
loopne
bsf
or
into
or
jne
pop
enter
adc
fdivrl
aam
icebp
clc
xor
push
xor
ljmp
cmp
std
ds
add
into
movsl
inc
fnstenv
inc
incl
and
xlat
dec
and
add
cmpsl
cli
fucomi
sbb
jne
int
add
add
test
inc
adc
ss
inc
mov
jbe
out
mov
es
cvtpi2ps
add
xchg
and
cltd
cmp
xor
add
xor
xor
pop
mov
test
adcl
jmp
popf
adc
or
mov
jl
mov
pop
filds
push
jno
stc
out
mov
xchg
cs
sbb
mov
mov
pop
imul
dec
adc
and
add
int3
neg
pop
addb
mov
mov
inc
xor
mov
ja
sar
add
or
and
push
and
popa
dec
sti
adc
xchg
dec
inc
jb
call
std
mov
dec
or
add
jge
xor
in
xchg
mov
ss
cld
call
and
push
in
push
pop
add
inc
movsl
icebp
iret
rcrb
inc
mov
or
inc
mov
xchg
ds
movsl
and
mov
loopne
add
jl
out
add
add
and
jge
add
adc
stos
fbstp
add
jecxz
cmp
scas
dec
inc
cmp
aam
xchg
arpl
add
add
shll
lods
imul
jmp
cld
add
ret
pop
and
cmp
test
inc
adc
roll
add
ss
ds
cmp
xchg
inc
scas
shl
ret
inc
sbb
movsl
pop
add
fiaddl
arpl
ss
jns
pop
sub
jge
push
dec
xchg
arpl
add
popf
jg
mov
bound
push
mov
adc
movsl
jle
mov
bound
cmp
push
mov
add
push
mov
mov
add
fisttpl
inc
jno
stos
daa
js
bound
test
mulb
ljmp
jp
xor
outsl
or
repnz
dec
add
push
add
dec
cli
cwtl
hlt
jg
sti
push
imul
mov
mov
pop
ret
inc
lea
jns
es
add
push
dec
add
jb
jecxz
adc
sub
enter
pushf
sub
inc
ret
mov
sub
or
cmpl
das
arpl
subb
dec
sub
pop
cmp
aas
test
faddl
movsb
bound
arpl
cmp
mov
gs
add
cli
mov
fildl
mov
nop
std
push
adc
inc
sbb
test
inc
mov
dec
lea
add
jecxz
pop
repz
in
shlb
pop
fs
roll
inc
mov
bound
popf
daa
dec
pop
roll
cmc
pop
push
push
lret
add
out
int
xchg
scas
sbb
push
lods
inc
dec
js
ljmp
add
mov
pop
clc
add
ret
add
pop
fwait
mov
cmp
ret
roll
ds
insl
jg
or
push
out
lea
sbb
je
add
pop
and
lock
addr16
xchg
inc
pop
add
fmull
and
or
lods
mov
push
outsl
push
mov
add
xor
repnz
fistpll
repz
add
insl
sbb
lock
pop
add
xchg
out
xor
pusha
jns
or
add
lods
lcall
mov
in
lret
xchg
ret
and
pushf
add
das
roll
hlt
add
iret
xchg
and
in
cmp
in
mov
inc
insb
popa
adc
sbb
add
inc
jo
xlat
fucomip
jecxz
pop
dec
dec
jns
js
sbb
inc
jno
inc
mov
push
push
jg
pop
mov
sbb
mov
cmp
add
inc
lcall
shrd
inc
int
pop
sbb
mov
cmp
in
jo
or
ret
ficoml
add
ljmp
push
inc
gs
repz
jne
mov
aas
and
xchg
aaa
incb
add
cli
scas
cmp
and
iret
movsb
pop
add
jo
addl
xlat
push
daa
fwait
roll
sti
cmp
push
sbb
add
lcall
in
scas
punpckldq
cmp
or
push
inc
add
cmpsb
jne
ret
add
xchg
push
sbb
xchg
fsubrs
inc
sub
mov
add
jns
in
add
pusha
mov
ja
push
sahf
cmp
shl
std
cmpsl
push
jne
sbb
call
add
jo
cmp
sub
data16
pusha
aam
and
sbb
movsl
mov
xor
data16
rclb
jmp
jp
mov
jmp
test
rolb
cmc
xchg
sub
addb
sbb
pop
push
add
shl
cmp
stc
or
sub
insb
cmp
pminub
mov
mov
sahf
add
test
cmp
ret
pop
pop
inc
testb
out
add
push
shlb
xchg
add
jo
lods
pop
cmp
out
xchg
leave
ret
and
push
xor
sbb
repnz
arpl
cmp
addr16
add
aas
jle
sub
jg
rolb
rcll
add
mov
and
roll
fistpll
adc
pusha
mov
add
movsb
xor
aas
add
rcrb
mov
test
cmpsl
add
jnp
mov
add
fidivrs
adc
xchg
shrb
mov
arpl
out
adc
test
jnp
dec
scas
push
add
xor
or
mov
add
pop
unpcklps
setle
aaa
insl
fisttps
ja
add
test
es
add
je
jbe
call
jg
xor
add
cmp
rcll
xor
push
pop
mov
xlat
repz
xchg
inc
mov
sbb
divb
aad
les
lds
jge
fbld
pop
add
scas
inc
xor
fildl
leave
inc
in
add
call
mov
add
xor
pop
pop
inc
xor
add
movsl
fistps
mov
aam
cmpsl
lock
rolb
pop
push
arpl
add
adc
adc
out
icebp
cltd
push
lahf
mov
mov
lret
imul
push
test
sbb
lcall
push
jns
add
inc
rcl
hlt
loop
push
enter
fsts
cmp
mov
xchg
mov
out
subb
cmp
jb
es
adc
sub
movsb
and
push
xor
and
xchg
and
mov
insb
jp
adc
ljmp
sarl
xchg
add
mov
sarb
fidivrs
add
lcall
loopne
arpl
imul
pop
mov
pop
mov
lea
add
add
jge
jo
mov
in
add
ds
stos
add
scas
bound
cmp
inc
xor
mov
add
jmp
test
mov
xchg
pop
cmc
stos
dec
pop
inc
inc
aas
out
mov
adc
mov
ret
jno
pop
lret
test
bound
outsl
add
fldenv
sbb
mov
jb
dec
fildl
cmpsb
xor
in
in
jno
jg
repz
sbb
movsl
or
rorl
ja
add
mov
sbb
ret
pop
ret
nop
aas
mov
dec
test
dec
cwtl
jns
jb
iret
imull
xchg
mov
mov
add
sbb
adc
sub
mov
inc
dec
adc
daa
cmp
jno
repnz
xchg
out
ljmp
mov
ljmp
cmp
or
addr16
cs
pusha
inc
jne
pop
or
popf
mov
lds
xchg
xor
pop
std
sbbb
push
pusha
cmpsl
inc
ljmp
mov
ja
adc
hlt
add
lods
push
mov
mov
pop
repz
adc
rol
add
mov
pop
sub
cmp
popf
scas
add
or
lcall
addl
add
addr16
aad
cwtl
inc
add
cmp
add
rorb
setp
hlt
and
add
push
sub
push
mov
add
or
add
in
lret
std
mov
cmp
popf
sub
std
add
in
pop
repnz
add
xor
loopne
ret
add
out
jp
sbb
add
arpl
and
cld
push
push
stos
sti
sbb
outsl
cmp
xchg
jmp
bound
cmpsl
push
sbb
and
inc
pop
mov
xchg
pop
add
add
sub
jb
rolb
mov
xor
mov
xchg
lret
sti
scas
pusha
mov
xor
add
loope
inc
bound
fcoml
inc
mov
mov
outsb
mov
shrb
adc
pop
add
sbb
add
dec
dec
rcr
lock
xchg
mov
push
add
insb
hlt
repz
bound
lret
xchg
and
xor
lret
mov
or
daa
xor
rorl
or
push
je
xchg
aas
add
scas
mov
outsb
jae
ret
roll
jl
mov
sub
push
mov
orb
add
adc
into
push
add
cmp
jge
arpl
daa
fs
pushf
jle
add
push
rolb
mov
xor
mov
in
adc
aad
cmc
mov
inc
push
bound
mov
xor
jecxz
imul
nop
sti
inc
cwtl
stos
push
mov
pop
add
cld
pushf
add
imul
add
and
pop
add
dec
fcmovb
fdivp
mov
add
cmp
pop
mov
shlb
popl
push
movsb
cwtl
sub
lret
dec
adc
call
icebp
jecxz
cld
insl
add
mov
loop
and
xchg
adc
jo
or
loopne
test
into
cs
mov
mov
xor
mov
sub
dec
leave
or
xor
add
outsl
jae
cmp
in
and
add
jp
or
jo
inc
lock
or
mov
add
mov
sahf
xor
jmp
pop
add
dec
inc
jbe
stos
rolb
repz
scas
push
lcall
fisubs
inc
pushl
cs
iret
mov
daa
lea
push
lods
mov
push
cmp
xor
and
adc
mov
in
lock
inc
aas
and
sbb
lcall
dec
pop
rcrb
aas
add
add
enter
roll
lret
push
xorl
inc
pushf
pop
inc
add
aas
inc
dec
lock
aaa
je
ljmp
mov
mov
inc
jae
mov
pop
cmp
aad
or
cmp
out
mov
pop
sbb
inc
pop
sbb
sub
xlat
cmp
cmp
or
adc
iret
fldl
addb
call
add
dec
mov
inc
push
add
dec
imul
mov
jp
inc
jecxz
add
loopne
sub
mov
faddl
jo
add
fwait
push
pop
cmc
xor
test
scas
push
pop
sub
xlat
add
xorl
pop
lcall
test
hlt
jb
add
loop
clc
out
enter
pop
add
lea
test
add
in
insl
dec
fcmovnu
xchg
inc
imul
lds
iret
pop
add
pop
cwtl
out
inc
repz
into
ret
sar
in
pop
popf
xchg
cmp
orb
inc
out
jmp
stos
push
push
jge
in
shlb
inc
jno
pop
mov
xor
lret
into
jo
add
jnp
adc
xlat
inc
stos
add
fcoms
es
shlb
and
inc
adc
mov
add
outsb
stos
jo
es
xor
lea
lahf
rolb
add
aas
inc
push
popa
stos
int
mov
xor
out
aaa
and
ret
xchg
nop
inc
add
lock
pop
inc
das
sub
or
xchg
pop
push
imul
inc
adc
shrb
and
mov
sbb
jmp
pop
jge
pop
cmp
jo
jp
adc
dec
push
inc
test
rcll
cmp
or
jno
add
jmp
in
add
adc
mov
pop
out
add
pop
ja
dec
call
mov
cmpb
pop
lahf
test
add
arpl
aad
rcll
jp
int3
add
inc
les
push
inc
lret
inc
dec
addr16
xor
sub
jb
adc
add
and
xor
les
pop
arpl
cwtl
fcomps
leave
jno
mov
pop
imul
outsb
cmp
es
inc
shlb
notl
mov
and
inc
out
and
mov
in
flds
pop
daa
and
imul
movsb
jo
or
add
push
pop
mov
add
dec
pop
insb
mov
int3
fnsave
outsl
roll
mov
mov
stos
and
dec
push
xor
or
repnz
cmpsb
xchg
adc
insb
add
in
fs
add
add
mov
inc
pop
lods
mov
push
loop
in
loopne
out
insl
ret
lock
ss
inc
sub
cli
fdivrl
cmp
scas
out
and
aas
rcr
arpl
enter
mov
into
mov
push
rolb
test
test
mov
scas
add
cli
push
push
lret
cmp
add
test
mov
add
mov
es
das
inc
xlat
or
xor
call
clc
sahf
leave
add
or
loop
aaa
jae
mov
outsb
fdivl
xor
inc
add
xor
dec
add
inc
xor
insl
push
or
or
cli
add
inc
rol
add
imul
call
daa
mov
cwtl
std
add
jno
jbe
xchg
orb
mov
or
rorb
and
int
or
stos
inc
lock
mov
jp
add
adc
stos
push
rol
or
fildll
add
cwtl
jecxz
jmp
inc
or
arpl
aas
jno
xchg
call
jp
ljmp
cmp
xchg
rcll
cmp
pop
adc
mov
sub
add
repnz
imul
mov
cmp
mov
fbld
pop
scas
ret
or
sbbb
sarb
sbb
cmpsb
mov
or
push
mov
push
mov
outsl
bound
fisubrs
ret
and
adcb
in
and
pop
push
std
add
out
jns
xor
addl
mov
insb
testl
pop
dec
jl
loop
add
pop
jno
outsb
add
inc
mov
sbb
mov
xchg
fiadds
and
shll
into
add
pusha
repnz
mov
aas
fdivr
iret
add
cmp
sbbl
adc
mov
pop
pop
les
dec
lea
sub
dec
testl
or
add
sbb
inc
out
nop
in
popa
pusha
add
push
mov
and
jno
push
add
xorb
add
inc
rorb
lret
jne
inc
stos
sarl
xchg
in
out
add
mov
mov
add
iret
add
cmp
or
add
into
fucomp
mov
cmc
sub
mov
fildl
xor
lods
sarb
add
popf
inc
pop
pop
aaa
lcall
dec
imul
jo
ret
and
pop
jne
ficompl
testl
loope
xchg
and
jne
cmp
jecxz
cmp
fsubr
or
into
decb
mov
repz
mov
jp
pop
add
pop
stos
push
inc
sub
daa
jne
mov
add
les
mov
pop
outsb
movl
and
xchg
call
testl
xchg
add
dec
inc
lahf
inc
lds
hlt
roll
popf
mov
aas
or
aad
ss
inc
shlb
push
clc
inc
repnz
pop
cmp
sarb
add
lcall
sub
inc
pop
cld
leave
mov
adc
shrb
mov
inc
mov
inc
add
rcr
sbb
push
dec
add
mov
fsubs
hlt
mov
add
enter
stc
mov
add
inc
pop
mov
add
clc
insl
mov
jge
rol
or
mov
icebp
cld
and
jle
roll
add
push
leave
outsl
sub
add
int
pop
push
mov
add
cs
jae
sysret
fadds
mov
mov
mov
inc
add
mov
pop
add
fmuls
add
add
pop
mov
add
inc
pop
test
cmpsb
add
push
outsl
add
loope
in
mov
mov
andb
or
icebp
adc
and
stc
and
jecxz
pop
xor
arpl
jne
test
mov
dec
cmp
adc
sbb
pop
jp
add
add
pop
in
cmp
xorb
mov
pop
lahf
inc
stos
popa
cli
cwtl
xor
dec
cld
and
jnp
xchg
cmp
add
in
jle
lock
fbstp
sub
sbb
leave
je
mov
xor
xchg
nop
cli
jns
add
popa
jnp
fs
loope
add
fnsave
or
dec
clc
add
adc
jge
test
aad
add
pop
in
call
les
add
in
repz
mov
movsb
aaa
rolb
xorl
sti
mov
and
jp
stc
ret
xchg
insl
cmp
xchg
add
clc
push
call
add
pop
mov
cld
jb
in
divb
cwtl
xlat
outsl
stc
sbb
mov
add
push
mulb
add
sub
shlb
and
pop
mov
or
fs
sti
jns
jmp
ds
add
mov
sub
cmp
inc
cmpsl
js
out
add
or
in
add
xor
ret
cmp
fstps
insl
dec
inc
cmpsb
repz
mov
xor
popa
sarl
mov
arpl
pop
fdiv
or
add
push
orl
pop
out
shll
cmpsb
inc
add
adc
jge
arpl
or
inc
loopne
mov
movsl
lret
add
inc
int
add
fcomp
shlb
push
jnp
icebp
lock
or
ret
or
pop
rorb
dec
mov
mov
out
add
push
xchg
adcl
mov
add
movsl
push
add
mov
imul
or
stc
sbb
push
dec
das
lock
pushf
imulb
xor
lods
xchg
enter
inc
inc
insl
arpl
push
jno
das
add
loop
add
fiaddl
jns
add
dec
fistpll
add
pop
or
in
ret
and
icebp
subb
stos
gs
lds
pop
push
jnp
sahf
inc
mov
sub
add
pusha
push
insb
add
mov
jns
sub
ret
xchg
shlb
arpl
add
xchg
scas
add
push
xor
icebp
pop
add
inc
addb
rcrb
mov
add
xorl
or
add
frstor
add
sbb
repnz
sbb
int3
pop
out
and
inc
xchg
imul
cltd
add
add
add
lods
lcall
sbb
cmp
pop
and
pop
loopne
enter
pop
sbb
in
lds
inc
dec
insb
xchg
cmp
xor
sub
or
mov
fisubrl
fwait
xchg
inc
testb
xor
push
mov
or
push
nop
pop
leave
pop
sub
sahf
arpl
inc
mov
mov
aas
fldl
dec
fcomip
push
popa
add
mov
cltd
hlt
and
push
adc
orl
lret
cmpb
scas
push
test
or
or
xchg
jg
jb
add
adc
rcrl
xor
inc
rol
pop
add
ret
sbb
movsb
xchg
ljmp
adc
jae
inc
add
cmp
fnstsw
mov
and
into
adc
test
pop
pusha
fsqrt
jmp
xchg
and
dec
jno
ljmp
push
in
add
mov
cmp
mov
jge,pn
jecxz
out
gs
xchg
add
divb
icebp
pop
pop
add
and
ficompl
xchg
in
or
shlb
call
aam
add
mov
adcb
lock
lock
leave
mov
push
mov
stos
add
inc
mov
dec
test
lcall
icebp
sbbl
shl
sarl
or
or
ret
cmp
jp
lock
pusha
inc
bound
ficoms
icebp
add
dec
mov
pop
jecxz
mov
pop
orb
pop
dec
roll
cmp
loope
aaa
jecxz
dec
add
xchg
xorb
mov
rol
dec
daa
test
push
arpl
inc
andl
sbb
into
jnp
leave
fs
sbb
insb
mov
jns
popa
lock
mov
sbb
test
add
outsl
and
test
add
sub
adc
dec
aaa
add
cmp
leave
jns
push
inc
mov
add
aad
aaa
xchg
push
add
mov
addl
sbb
js
test
das
cmp
inc
pshufb
xor
add
lret
add
mov
push
add
push
fs
lock
jnp
cwtl
inc
scas
xor
fcmovnbe
add
out
fidivrs
mov
mov
sahf
imull
repz
add
or
cmc
sub
pop
pop
xor
gs
adc
adc
mov
add
jl
mov
loopne
push
enter
aad
push
hlt
inc
xlat
add
xor
mov
or
push
xor
lcall
das
add
mov
sbb
pusha
call
jmp
pop
popa
xchg
ret
sub
fcompl
xor
cld
xchg
popl
std
dec
in
add
mov
xchg
adc
xchg
sarl
jno
add
jge
pusha
push
js
dec
jle
add
pop
push
cmpl
rolb
arpl
and
or
aas
mov
rcr
xor
jno
sti
sbbl
pshufw
ret
push
in
xlat
add
std
pushf
out
add
arpl
sbb
rol
bound
mov
repz
popa
inc
or
add
cmp
ret
push
test
sub
ljmp
cld
mov
fdivrs
jae
add
inc
add
cmp
mov
add
ja
call
int
push
popl
mov
insl
add
pop
pcmpgtb
cmp
add
aaa
sbb
bound
xchg
nop
pop
sbb
add
and
mov
cwtl
pop
stos
fs
inc
xor
add
repz
mov
dec
mul
in
rolb
pop
jns
add
scas
add
adc
pop
dec
out
or
mov
or
jb
add
or
arpl
xchg
jne
int3
add
xor
mov
mov
push
fimuls
lea
filds
add
inc
xor
xor
roll
orl
or
inc
or
in
jb
sbb
jmp
sub
pop
and
ftst
insb
jmp
insl
xchg
inc
sbb
add
clc
bound
xchg
sbb
mov
mov
xor
test
in
enter
fistps
xor
sti
arpl
data16
fucomi
add
and
data16
mov
and
add
mov
jbe
jae
adc
xor
add
xchg
out
rclb
push
popa
es
int
push
movsb
or
sub
int3
les
stc
add
push
push
mov
mov
fsubs
roll
mov
xchg
add
mov
roll
dec
paddq
or
movb
mov
iret
adcb
test
add
push
in
shl
scas
add
jecxz
sbb
dec
add
fidivs
add
push
in
inc
xchg
loopne
or
test
add
cmp
xchg
inc
clc
call
push
filds
test
rorb
dec
imul
fisubl
push
in
xor
mov
rcrb
jo
push
add
inc
cmp
dec
push
or
in
stc
add
bound
enter
ret
mov
sub
icebp
and
xlat
adc
jg
sub
shlb
push
cmp
jmp
sub
enter
add
rcr
clc
push
addr16
xchg
bound
add
mov
je
mov
add
rcrl
scas
loop
sbb
add
sbb
add
inc
js
add
out
inc
xor
pop
dec
jb
add
cmc
call
jmp
jle
pop
mov
and
shl
inc
imul
mov
cmp
movd
pop
inc
fildl
cmp
ret
in
loopne
int
add
mov
and
add
mov
les
push
insl
jae
sub
dec
pop
aam
cmpsb
dec
lret
dec
add
test
pusha
mov
loope
stos
out
in
sarb
or
lret
add
insl
imul
jb
mov
dec
inc
js
bound
addb
out
arpl
and
jge
pop
je
aam
mov
arpl
push
jg
mov
rorl
lods
push
sbb
addr16
shrb
xchg
stos
inc
dec
cmpsb
xchg
add
iret
fimuls
imul
or
mov
aad
mov
je
and
inc
repnz
or
cmp
movsb
add
mov
xchg
inc
pop
xchg
movsbl
das
add
mov
and
mov
add
into
jecxz
add
jmp
ds
addr16
mov
nopl
les
add
push
arpl
cmpsl
cs
add
sub
sub
bound
push
sbb
imul
shlb
dec
sub
mov
mov
into
imul
and
mov
lret
jnp
push
dec
adcl
inc
push
pop
pop
lock
jo
or
rcll
pop
mov
sahf
inc
inc
sub
adc
nop
push
add
daa
ficoml
std
inc
push
mov
dec
xlat
pop
cmp
inc
add
iret
or
jmp
stos
add
add
add
fisubs
es
test
cmp
or
pop
mov
jle
push
fs
mov
push
sub
inc
negl
pop
rorb
xor
pop
sub
add
and
dec
xor
cmp
arpl
out
add
mov
add
sar
pop
xchg
mov
inc
xor
add
imul
mov
iret
mov
inc
dec
add
insb
adc
and
xchg
inc
rorb
mov
inc
add
shrb
arpl
in
jmp
pushf
add
and
jbe
out
shll
mov
in
ffree
aas
decl
add
add
arpl
sbb
enter
fwait
int
ljmp
add
fs
pop
out
mov
shrb
add
mov
jno
dec
sub
outsl
dec
add
cmp
add
push
ja
add
cs
test
add
loopne
lock
shlb
adc
roll
sbb
rorb
or
cmp
add
push
pusha
mov
mov
pop
mov
fisubrs
adcl
lea
in
insl
in
adc
cs
xor
mov
pop
les
sbbl
lahf
xchg
repnz
xor
sub
add
add
xchg
pop
xor
popa
mov
ds
scas
dec
add
cltd
daa
mov
hlt
pusha
out
add
mov
clc
adc
add
inc
sahf
movsb
setno
mov
imul
jmp
inc
add
mov
pop
or
xchg
lret
ja
add
dec
call
jle
mov
jo
insb
lds
push
add
cltd
scas
fildl
jp
adc
and
or
fdivp
and
or
loopne
leave
pop
add
add
int3
xchg
cwtl
xor
into
in
roll
push
and
mov
lds
and
sar
push
dec
inc
aaa
add
mov
loope
rorb
aas
clc
cmpl
jmp
mov
pop
lods
jo
rolb
jne
add
subb
add
lea
add
sbb
out
add
or
push
pop
mov
jl
rolb
hlt
xchg
adc
int3
iret
inc
push
andb
popf
add
loopne
cltd
fisttpl
shlb
add
sbb
xlat
repz
testb
aaa
cmc
pop
cmp
dec
pushf
in
inc
xor
scas
hlt
mov
movl
push
push
and
cmpsl
inc
jo
in
pop
aas
out
or
mov
cmp
inc
xor
add
inc
pusha
cmp
lds
add
pushf
mov
rolb
jns
addr16
or
push
add
jnp
sub
add
add
imul
push
inc
xchg
decl
incb
xor
rcl
sub
inc
add
adc
addr16
ret
and
sarl
andb
and
ret
push
ds
xlat
add
xor
lcall
xor
repz
test
ds
add
jecxz
push
add
add
xor
test
pop
lea
xorl
cmpsb
sub
testb
scas
lahf
push
sub
pop
subb
mov
xchg
add
push
or
fsubrl
add
push
dec
pop
add
cmp
imul
mov
mov
add
push
adc
push
arpl
int3
rcrl
push
sti
outsb
lret
xchg
iret
push
jns
or
mov
add
mov
inc
or
adc
insb
stos
dec
jo
xor
push
incl
adc
movsl
rolb
mov
lea
add
sub
push
pop
rcr
pusha
jmp
add
roll
cmc
mov
iret
and
pushf
pop
xchg
jecxz
mov
pop
test
shlb
mov
mov
int
jbe
ljmp
xchg
ret
cli
add
push
aam
inc
inc
add
mov
xchg
add
cmpsb
pop
lahf
pop
or
mov
jge
sbb
add
jg
pop
pop
lretw
push
orl
stc
add
mov
addb
insl
loope
stos
popa
lock
add
ret
fwait
out
mov
daa
fs
inc
enter
mov
inc
stos
jb
mov
push
mov
jmp
add
mov
jne
and
xchg
rorb
adc
mov
push
out
sbb
pusha
add
xchg
adc
add
or
ljmp
cmp
rol
and
cmovnp
addr16
jg
mov
add
addl
in
scas
adc
mov
add
test
adc
mov
icebp
mov
dec
xlat
adcb
add
xor
mov
inc
jmp
xchg
push
cwtl
inc
sti
roll
repnz
sub
or
dec
inc
mov
adc
addr16
sarb
mov
je
std
sub
add
adc
or
jg
daa
push
int
clc
jne
or
adc
add
dec
lret
jmp
add
sbb
sarb
cmp
inc
push
test
shlb
inc
pop
adc
and
iret
movsb
inc
cli
pop
sti
push
jg
js
and
add
pop
sub
mov
nop
sub
sub
mov
cmp
pop
add
aas
mov
or
incb
and
adc
adc
imul
sub
add
jbe
mov
adc
repz
dec
push
fs
add
push
xor
sub
inc
shl
sbb
or
cmp
add
arpl
or
or
leave
mov
jecxz
push
add
add
inc
mov
arpl
cmp
inc
add
sti
pusha
or
add
adc
dec
mov
adc
add
ret
movsl
add
or
pop
shr
out
lret
dec
pusha
lds
add
aad
call
int
mov
imul
push
add
mov
inc
add
and
imul
add
daa
cmp
mov
stos
dec
add
xchg
or
icebp
jmp
push
jg
lret
xor
inc
mov
shlb
mov
pop
stos
adc
jne
add
lds
pop
lock
jge
xchg
jo
shr
push
dec
int3
mov
cld
arpl
movsb
xor
adc
cmp
xor
push
cli
sarb
pop
pause
into
dec
movsl
mov
add
xor
add
jge
cmpl
pop
rolb
mov
push
imul
jae
sarl
mov
data16
inc
enter
inc
mov
fs
and
sbb
ftst
test
les
push
arpl
mov
add
inc
popf
mov
sub
inc
js
cmp
fsubrs
sbb
jbe
out
sub
mov
cmp
xchg
popf
rcr
xchg
inc
mov
push
xor
xor
int
inc
add
or
outsb
insb
movsb
adc
cltd
xchg
shlb
sbb
sahf
shlb
add
lret
leave
or
cmp
dec
orb
popa
jbe
add
mov
sub
imul
ffree
jmp
ds
pop
fsubr
add
adc
mov
add
sbb
ret
add
mov
subb
jo
add
xorb
call
lods
sbb
cld
shll
add
dec
add
or
add
leave
rorb
jge,pt
mov
cmp
ljmp
jne
cmpsl
mov
pop
jb
mov
in
add
mov
adc
mov
xlat
adc
arpl
lcall
popw
insl
mov
and
lret
mov
inc
roll
push
mov
rcr
add
outsb
fs
adc
test
inc
les
inc
add
mov
inc
jecxz
dec
jno
add
xor
add
les
add
inc
lods
rcr
dec
inc
addl
std
mov
jb
imul
adc
idivb
call
jo
jno
inc
outsl
add
dec
icebp
ss
jge
psrad
testb
add
sahf
call
jle
adc
jnp
fildl
out
idivl
mov
std
and
ds
popa
cli
add
mulb
pop
mov
mov
inc
daa
add
out
lret
test
add
or
pusha
dec
jnp
add
inc
lds
mov
shlb
add
arpl
jb
and
in
add
lahf
dec
pop
mov
arpl
push
ja
push
mov
cmpl
js
add
adc
ds
jbe
sub
mov
arpl
jge
outsb
add
pop
push
cmp
add
hlt
inc
mull
push
cs
sbb
or
lock
mov
sbb
sbb
inc
shll
ja
add
mov
pop
lock
add
jmp
and
pushf
mov
or
popa
lcall
adc
add
dec
or
mov
mov
pusha
inc
push
imul
cmp
inc
add
repnz
or
icebp
add
shll
adc
push
test
add
lcall
call
cld
outsl
pop
aam
jge
sbb
jo
push
mov
xor
add
add
dec
rolb
dec
roll
std
ja
mov
xor
subb
add
sbb
xchg
jle
inc
and
rorb
jo
add
sub
ret
sub
loop
stos
int
xor
push
cli
orb
cmp
lods
andb
cmp
add
insb
inc
test
nop
dec
add
add
cmp
inc
xchg
lret
dec
scas
not
or
rcl
aam
fs
jl
cwtl
inc
add
jne
inc
je
in
jbe
shrb
push
jns
cwtl
arpl
dec
mov
mov
rclb
cmp
add
push
call
push
and
push
add
loopne
in
or
add
andl
add
insl
sbb
or
shll
mov
push
jbe
xchg
ror
jno
ljmp
mov
shlb
add
arpl
push
pop
fidivl
test
push
in
xchg
jo
add
rcrl
add
inc
or
xlat
add
rolb
ret
mov
add
inc
hlt
mov
rcrb
xlat
inc
loopne
test
and
jbe
add
inc
sub
sbb
je
lea
rorb
push
cwtl
loop
test
cmp
mov
pop
mov
enter
cmp
mov
adcb
push
and
inc
enter
lods
add
pop
add
nop
inc
iret
cmpsl
add
inc
cmp
imul
sarl
jge
inc
jo
inc
add
hlt
xchg
in
add
push
adc
push
dec
add
lea
add
dec
adc
or
bound
icebp
or
jle
mov
cmpl
jns
add
inc
rcr
push
pop
inc
or
cmpsl
xchg
or
hlt
andb
aad
in
pusha
rclb
ds
add
lock
mov
lcall
pop
jle
pop
jecxz
rolb
push
ds
jg
das
inc
push
add
pop
push
stos
ja
adc
dec
push
add
in
mov
or
mov
ds
ficoml
pop
ret
and
adc
cmpsb
xchg
add
pop
mov
ds
inc
mov
add
and
mov
sbb
dec
xchg
cwtl
dec
dec
mov
add
ss
add
mov
inc
jl
cli
or
pusha
or
sbb
testb
movswl
pop
pop
fsubl
add
je
inc
inc
mov
add
loope
jmp
sbb
push
jg
mov
push
mov
add
xchg
into
icebp
add
jecxz
add
scas
push
shl
orb
cmp
mov
jae
add
jbe
add
sbb
test
ja
push
pop
mov
shll
sarl
test
inc
cmp
push
sahf
aas
testb
in
and
add
mov
pop
in
push
pop
rcll
dec
enter
lock
add
dec
data16
mov
add
in
adc
dec
dec
add
mov
xor
pop
cmp
mov
add
icebp
jns
lods
cmp
roll
mov
mov
lcall
aam
add
pop
cmp
sarl
in
arpl
jp
in
jle
xor
cmp
stos
dec
sub
jl
stc
inc
ret
jns
add
pusha
scas
addb
test
dec
add
mov
sbb
xchg
jg
inc
jne
sub
int
xchg
or
pop
and
mov
inc
lret
jg
sbb
adc
jo
sub
add
mov
clc
cmp
enter
faddl
repz
sahf
or
xchg
int3
jle
pop
add
stc
in
jmp
in
sbb
push
inc
sub
add
pop
mov
psubw
add
mov
mov
cld
in
add
les
add
cmpsl
repnz
adc
pop
out
jns
adc
adcl
pop
cli
adc
arpl
sbb
sub
adc
add
pusha
loop
aad
push
jbe
xchg
and
test
add
rolb
fldl
divps
sub
push
mov
pop
mov
add
mov
popf
into
inc
xor
cmp
jne
add
jmp
mov
xchg
inc
mov
mov
lock
aas
pop
add
leave
inc
xor
push
bound
fistpll
adc
sub
xor
cld
arpl
test
scas
mov
insb
xchg
adc
popf
nop
int3
xchg
cmp
in
cmpb
fiadds
mov
inc
rcrb
add
stc
in
mov
arpl
jbe
add
ror
add
inc
shr
inc
add
test
and
cmp
adc
stc
iret
movsb
add
mov
lods
mov
mov
mov
push
inc
pcmpeqd
cld
mov
jno
pop
add
add
stos
dec
setg
xor
sti
aaa
out
add
addr16
add
popf
pop
add
cli
jno
imulb
test
cmp
cltd
cmp
add
jb
sub
cs
lods
mov
add
cmp
shlb
mov
mov
icebp
cmp
push
mov
in
out
das
dec
add
add
test
add
int
cmpsb
add
mov
or
in
add
fwait
shlb
sbbl
cmc
into
add
cmp
add
sub
sti
sub
mov
cmp
scas
fdivp
pop
mov
rorl
jl
insb
std
ret
clc
pushf
sub
and
cmp
lahf
push
sub
test
pop
pusha
lds
add
push
lods
mov
xor
bt
imull
inc
stos
lock
pop
mov
mov
and
lcall
add
jo
inc
stos
jnp
xchg
mov
pop
mov
xor
add
mov
hlt
pop
filds
out
repz
fisubrs
adc
xchg
jp
lahf
cli
call
shll
mov
lea
pushf
ret
in
jge
jae
cmc
adc
jg
add
inc
inc
fs
pop
test
sub
push
mov
mov
add
or
inc
jge
add
jnp
push
add
rcrl
ficoml
aam
inc
das
stos
add
imul
inc
xchg
mov
xor
adc
ljmp
sbb
push
add
sbb
push
pop
mov
mov
lahf
lods
add
sbb
and
push
int3
mov
movl
jo
lods
sbb
sarb
imul
add
mov
inc
pusha
mov
sbb
aad
add
add
es
push
add
cs
inc
outsb
ret
mov
xor
sbb
jmp
rclb
cli
cmp
lock
ljmp
lea
stc
or
xor
sub
inc
mov
jge
push
int
stos
add
xor
arpl
into
sbb
adc
mull
mov
add
loopne
ret
test
pop
push
rcl
rolb
negl
or
or
jle
andb
sahf
sti
in
mov
mov
mov
or
cmp
es
sub
add
pop
sbbb
mov
test
add
cmc
and
jge
pop
lock
sbb
push
lret
inc
sahf
aas
roll
pop
add
mov
ss
sub
add
fldl
lar
push
adc
sahf
idiv
add
fstpt
dec
add
or
adc
add
lfs
cmp
sub
scas
mov
mov
jp
test
loopne
cmp
pop
or
xchg
orb
xor
mov
add
xchg
cmp
jmp
push
push
jb
ja
fwait
inc
outsb
add
nop
dec
and
add
add
sub
pop
add
in
or
mov
ja
xchg
rcl
mov
pop
sbb
test
mov
sbb
orps
jmp
rcrb
int
pop
dec
je
add
popf
and
fistl
aas
mov
cmpl
inc
add
int
stos
xchg
add
pop
arpl
add
xchg
add
sahf
shl
bound
aas
mov
lret
ret
add
mov
xor
add
ficoms
xchg
sub
test
fstpt
dec
lcall
test
sub
les
pop
add
add
xchg
add
test
inc
sbb
mov
add
mov
jbe
add
ret
mov
add
mov
lods
fpatan
cmp
xchg
icebp
pop
adc
push
sahf
mov
insb
cmp
leave
loope
cmp
imul
aaa
jo
stc
add
pop
cwtl
cmp
dec
dec
call
inc
test
jle
stos
add
sbb
pop
push
mov
mov
test
push
popf
mov
add
mov
add
inc
mov
adc
mov
inc
pop
cli
push
xchg
mov
add
push
lock
popf
inc
loop
add
cld
pop
mov
or
int
xor
arpl
sub
xor
add
jns
bound
jno
xor
mov
mov
dec
out
mulb
dec
pop
fwait
adc
loop
popa
loopne
push
push
mov
lds
je
add
cmp
das
add
aad
inc
add
xor
mov
mov
dec
mov
xor
add
aam
rorb
inc
pop
add
stos
push
and
jl
sub
out
sarb
mov
lds
cmpsb
xchg
les
ret
ret
aaa
xor
and
add
add
scas
and
sahf
cmpsl
jbe
cmp
sahf
pop
sbb
and
rclb
dec
loopne
ror
aam
add
ds
and
cmp
push
inc
in
cmp
pushf
arpl
ljmp
mov
rclb
cmp
pop
xor
inc
out
repz
dec
loop
nop
addl
jno
jnp
repnz
inc
iret
or
sub
loope
xlat
sub
adc
popf
dec
push
push
pop
xorl
test
shrb
add
push
and
xor
xor
lret
add
frstor
sti
add
mov
xor
cltd
add
sbb
mov
xchg
outsl
out
mov
imul
enter
add
inc
xor
pop
mov
mov
in
cmp
mov
addb
repz
inc
pop
jecxz
add
stos
sbb
insl
mov
dec
mov
ret
inc
repnz
int
rcrl
push
adcl
imull
pop
push
or
mov
dec
loop
sti
je
popf
ret
push
add
test
mov
xchg
adc
mov
rorl
lcall
mov
push
repz
or
add
aam
add
ret
add
add
add
pop
aaa
dec
push
out
fldenv
add
fmuls
add
and
dec
adc
enter
mov
mov
push
add
enter
adc
sbb
adc
cmp
dec
repz
rcrl
rclb
jo
rcll
mov
dec
mov
inc
shlb
fs
test
sbb
fcompl
xor
push
adc
push
dec
pusha
mov
push
pop
push
js
fs
adc
and
fcoms
scas
and
dec
mov
fisubl
and
mov
or
jmp
and
pop
bound
mov
mov
cmpsl
popa
sub
xor
test
pusha
test
outsb
push
and
sti
addb
adc
push
aad
in
add
xor
dec
inc
xor
cmpsl
sbb
and
js
push
stc
mov
enter
test
mov
fadds
clc
sti
lcall
lret
sbb
cmp
dec
pop
nop
pop
cld
push
and
test
inc
mov
fdivr
call
mov
loop
mov
and
sub
pusha
enter
sub
in
xor
xchg
adc
dec
inc
fldt
pop
lock
adc
mov
add
sbb
mov
xor
adc
enter
shlb
or
cmp
sbb
inc
aam
sbb
loopne
dec
adc
dec
inc
dec
jne
cwtl
sarb
and
sbb
mov
xor
jo
xorl
aam
sub
cwtl
mov
cmp
push
insb
movl
enter
lds
xchg
test
mov
ds
mov
xchg
add
lods
push
xchg
aam
test
mov
fwait
inc
adc
faddl
loope
and
adc
adcl
push
adc
sbb
and
cltd
and
inc
rcll
or
sub
push
pushf
or
dec
adc
adc
adc
insb
dec
sbb
cltd
or
cltd
popf
dec
and
inc
dec
and
or
sub
push
dec
sub
xchg
sub
mov
push
and
push
mov
inc
stos
jp
pushf
push
adc
cwtl
jb
cmpsb
xchg
test
push
mov
or
movsl
xor
or
xor
or
push
mov
or
mov
push
sub
mov
lods
add
loop
pop
or
adc
or
add
lds
adc
adc
mov
ja
dec
jnp
push
adc
ja
xchg
sbb
clc
xchg
mov
mov
inc
adc
outsl
and
pop
mov
or
orl
adc
daa
incl
cwtl
or
pop
and
and
push
or
sub
and
aaa
arpl
adc
stos
lcall
mov
inc
mov
mov
jg
dec
dec
cmpsb
mov
push
adc
cld
push
sahf
outsl
imul
pop
outsl
push
jns
mov
clc
inc
xchg
push
jbe
aas
rcl
adc
mov
mov
add
adc
addr16
push
insb
orl
mov
and
pop
sbbb
and
mov
xchg
cmpsl
adc
divl
sahf
adc
loope
cmc
call
and
sbb
inc
jecxz
insb
push
or
and
inc
xchg
pop
shlb
dec
pop
sub
wbinvd
in
xor
cmpsb
add
add
call
cmp
mov
inc
jg
cmpsb
add
adc
adc
add
sbb
shlb
call
cmp
es
and
outsb
add
test
cld
pop
jnp,pn
ss
jb
sti
lock
insl
dec
outsb
xor
mov
jge
popa
pop
dec
add
jb
cmc
or
mov
pop
orl
or
jno
add
xor
add
pop
adc
aaa
mov
stos
lret
jg
jbe
outsb
or
daa
mov
lret
pop
test
inc
sbb
sbb
les
pop
repnz
push
jae
and
sub
fisubrs
adc
fisttps
add
andl
sub
mov
repz
sbb
dec
mov
lret
loopne
add
lcall
enter
adc
aas
push
or
xor
xchg
mov
test
xor
in
loopne
cmp
cmpsl
add
clc
cmp
lret
add
and
sbb
push
aaa
add
or
push
dec
cs
dec
imul
loop
fwait
add
inc
adc
mov
sbb
outsb
inc
sbb
cmp
ss
pop
xor
mull
adc
xor
pop
and
add
std
rol
fcomip
add
dec
push
pop
add
jo
add
gs
adc
and
sarb
add
pop
cwtl
or
neg
rcr
add
and
sub
lock
outsl
mov
jo
jno
jbe
add
add
add
test
pop
sbb
in
cwtl
call
and
mov
sub
mov
jne
or
dec
jp
dec
jle
dec
sub
test
addl
add
sub
mov
adc
lods
add
fcoms
sahf
scas
loopne
add
out
jb
pushf
and
sbb
test
push
mov
and
dec
fs
test
fnstsw
mov
pop
adc
icebp
enter
add
test
hlt
jecxz
push
push
fnstenv
popf
rorb
dec
mov
popl
xchg
inc
pop
popf
inc
pop
mov
insb
mov
or
sub
jns
mov
movsl
add
add
fwait
mov
add
jmp
cltd
dec
mov
mov
pextrw
stos
addl
add
xor
or
daa
pop
xlat
mov
testb
add
cmc
mov
cltd
jns
testl
shlb
shlb
mov
push
test
or
or
jo
inc
je
inc
adc
test
cmp
sbb
lahf
ret
subb
or
and
inc
adc
add
imull
enter
mov
loope
push
call
int3
stos
jae
mov
clc
fdiv
inc
enter
stc
fimull
movsl
bound
outsl
add
js
into
inc
call
pop
pushf
or
ss
jo
inc
add
xchg
sbb
dec
jl
dec
add
xor
outsl
dec
pop
xor
sbb
add
cmp
sbb
xchg
outsb
add
std
in
sar
lock
call
pmulhuw
scas
sbb
mov
cwtl
sbb
test
mov
push
les
sbb
icebp
lret
loop
lods
mov
xor
dec
xor
sub
les
jno
pop
add
sub
push
cmp
xor
notl
add
repz
add
dec
shrb
movsl
mov
push
clc
out
fadds
in
fnstsw
lret
pop
mov
push
sub
lret
fbld
or
test
mov
call
stos
sub
push
xor
push
mov
dec
xor
or
inc
sub
dec
or
dec
fcoml
push
les
cwtl
pop
pusha
lahf
pop
andl
sbb
push
add
fimull
push
clc
cmp
add
add
shr
ja
mov
cmp
mul
push
ljmp
adc
shrl
loopne
xchg
cmp
shlb
add
mov
or
movsb
xor
ret
ret
and
xlat
inc
loopne
pop
pop
mov
push
dec
push
test
push
hlt
adc
pop
aam
movsl
pop
jo
popa
cwtl
push
xor
or
push
mov
inc
movsb
push
pop
add
lahf
pop
push
add
lcall
sbb
push
decb
inc
mov
mov
cli
repnz
ljmp
sub
lock
mov
nop
inc
jl
sub
jno
xor
xchg
ret
jge
lock
into
bound
fisttpl
inc
sti
mov
or
lock
mov
js
mov
pushf
jmp
or
push
dec
mov
outsl
push
shll
ret
jb
jne
cld
jbe
pop
lret
or
jp
aam
sbb
fadds
clc
les
or
rcl
cltd
in
cld
adc
es
icebp
cmp
mull
cld
push
cmc
movsb
jl
xchg
loope
les
out
push
sbb
mov
lds
pop
dec
adc
stc
inc
xchg
rclb
xlat
mov
xchg
adc
sahf
mov
add
orb
jp
nop
cwtl
hlt
clc
mov
jge
nop
int
or
mov
lea
mov
es
adc
jecxz
shrb
clc
in
and
and
or
sbb
adc
leave
mov
sbb
rcl
xchg
out
and
ljmp
inc
adc
iret
pop
push
mov
add
addl
movsb
or
sarb
fs
inc
mov
bound
hlt
fwait
add
mov
loopne
pushf
xlat
stos
push
and
xchg
dec
and
pop
ret
andl
adc
aad
pop
and
das
ret
cmpb
xchg
adc
xchg
mov
adc
mov
hlt
add
mov
stc
es
cmc
cld
add
in
orl
xor
mov
lds
shlb
subl
sbb
or
and
lret
jl
cmp
inc
sbb
lock
xor
adc
lret
jo
xchg
nop
test
hlt
mov
and
mov
and
add
sbb
fidivl
xchg
adc
stos
jnp
scas
cwtl
add
mov
je
add
popf
in
inc
insl
loopne
push
add
scas
jns
hlt
int3
test
fldenv
clc
mov
xchg
or
mov
or
test
inc
les
nop
push
jge
bound
jnp
shrb
loopne
les
jmp
push
lcall
add
leave
adc
mov
mov
push
enter
add
xchg
pop
sarb
test
or
mov
fwait
pop
add
push
or
sbb
lods
adc
je
daa
lahf
pop
push
sbb
popf
or
aam
or
xlat
ja
adc
ficoml
aad
mov
es
cld
xchg
adc
push
mov
mov
outsl
or
js
lret
jle
adc
in
test
xchg
sub
or
enter
ljmp
mov
insb
sub
pop
dec
or
adc
xchg
push
lods
pop
cltd
push
adc
js
sahf
or
dec
dec
sbb
or
lds
cmp
iret
gs
call
xchg
sbb
sbb
enter
mov
test
or
mov
cwtl
mov
sub
mov
cmp
test
fisttpll
ret
insb
push
and
fwait
and
jb
fcoms
sahf
pop
add
sbb
or
push
fidivs
movsl
shll
fsubl
enter
adc
mov
fisttpl
fadds
ret
dec
add
iret
xchg
xor
lds
mov
adc
and
inc
fsubp
mov
popl
xchg
adc
mov
les
fs
loop
mov
add
add
into
scas
adc
orl
mov
mov
test
test
mov
mov
test
int3
xchg
pop
stos
or
mov
mov
or
jnp
test
and
lea
loop
or
xlat
cmp
test
xchg
add
add
inc
push
push
mov
inc
ss
lock
test
mov
daa
roll
clc
shlb
adcb
jnp,pt
adc
adc
and
inc
or
push
popa
les
mov
clc
fiadds
test
mov
mov
xor
lds
popf
mov
inc
and
scas
lods
sub
xor
adc
aas
push
pop
cmp
push
jnp
lock
subl
in
out
or
dec
dec
pop
mov
int
cmp
in
mov
sarl
scas
addr16
aas
mov
add
loopne
pop
inc
mov
movsb
pop
pop
mov
rorb
mov
adc
xchg
dec
imul
or
mov
xchg
shll
mov
add
mov
jle
stos
ret
push
aad
xorl
add
xchg
sti
sub
fwait
aam
adc
gs
sarb
pop
stc
inc
add
and
pop
js
vpmulhuw
add
mov
add
mov
ret
mov
push
rolb
sbb
in
push
sbb
mov
mov
enter
leave
jns
into
or
cld
lock
or
les
push
test
pop
add
mov
lcall
pusha
lret
loop
outsb
ja
shll
lock
push
clc
add
push
loope
pop
rorb
les
mov
mov
xlat
leave
jmp
push
call
add
mov
add
sub
lock
pop
lds
clc
out
pusha
sbbl
les
or
mov
adc
sub
int3
mov
jne
or
mov
sub
add
add
add
and
insb
xor
xchg
xchg
pop
add
aam
popa
add
test
add
out
xchg
pop
add
movsb
es
mov
test
push
or
mov
xchg
pop
popa
cmpsb
sbb
mov
add
jns
cmp
add
hlt
jmp
fwait
orb
fcoms
push
insl
inc
ret
je
push
ja
shlb
add
int
movsb
loope
das
adc
sti
ljmp
adc
popa
add
add
test
mov
outsl
add
js
es
in
ljmp
cmpsl
aaa
popa
iret
add
pop
pop
inc
pusha
mov
dec
jo
ret
enter
or
pusha
cmc
cmp
lcall
loop
add
xchg
push
pop
push
push
scas
imul
and
mov
and
jle
shl
stos
dec
lcall
movsl
insb
daa
lods
fs
add
in
adc
jo
inc
jb
inc
outsl
mov
xor
lock
mov
repnz
mov
pop
pop
pop
movsb
rorb
imul
sub
add
mov
add
pushf
pop
push
cmp
and
adc
jae
call
mov
in
push
xor
xchg
push
or
in
push
dec
push
insb
or
adc
repz
cmpsl
loope
outsl
sbb
dec
lods
or
add
mov
outsb
add
les
mov
adc
cwtl
fmuls
xor
and
mov
cwtl
add
addr16
test
inc
inc
xchg
push
or
mov
xor
mov
mov
mov
add
xchg
cmpb
shlb
lret
enter
or
and
push
shlb
les
mov
xor
pusha
clc
push
mov
push
sbb
cmc
mov
pushf
pop
rcrl
push
mov
adc
pushf
pop
nop
pop
mov
sub
adc
ficoms
cld
or
mov
mov
add
push
pop
pop
xor
nop
pushf
add
push
xchg
add
mov
sti
out
imul
mov
icebp
insb
popa
fadd
inc
mov
mov
pop
sti
je
inc
add
int3
movsb
dec
mov
dec
add
test
in
add
fwait
add
and
and
xor
jo
inc
verw
mov
mov
inc
add
push
pop
sub
mov
cmp
push
add
cmp
inc
adc
jbe
rcrl
sbb
and
pop
add
gs
iret
xchg
add
loop
arpl
ljmp
dec
add
mov
je
mov
scas
xchg
test
xchg
add
and
lret
fs
rcrb
xchg
push
add
in
test
add
xchg
xor
out
mov
push
dec
popf
push
sbbl
push
inc
add
or
sbb
add
adc
add
daa
xchg
push
add
sbb
aam
and
or
out
popa
add
test
mov
mov
or
add
cmc
in
pop
sub
pop
pop
adc
les
cltd
pop
add
or
rorl
sub
jnp
lods
push
repnz
cwtl
inc
push
mov
dec
or
mov
hlt
push
and
or
pop
add
lods
add
xchg
add
push
in
xor
fcomps
pop
imul
ficoml
in
sub
insl
je
enter
mov
mov
or
add
decl
mov
adc
popl
repnz
nop
out
loopne
xor
cwtl
or
decb
and
xchg
rcl
lret
fs
jb
add
jb
adc
pop
add
jb
and
or
add
or
inc
roll
mov
out
and
andb
and
add
or
add
or
xchg
addb
fsubrl
or
jg
lock
cmpb
clc
inc
mov
cld
and
sbb
sbb
adc
cmp
bound
inc
cmpl
icebp
jge,pt
ja
nop
xchg
in
test
adc
scas
xorb
add
add
adc
into
je
js
pop
dec
cmp
mov
imul
jge
add
pop
inc
sub
inc
add
shrd
andb
sub
mov
dec
gs
adc
push
xor
out
hlt
push
adc
add
inc
add
incl
dec
pop
adc
cld
push
sub
decb
push
das
or
iret
in
pop
loopne
cmp
push
add
add
incl
push
sub
stc
push
sub
add
add
xchg
cmp
add
add
adc
or
insb
xor
push
pop
sub
repz
sub
cmp
fstpt
and
cs
xchg
adc
jle
sub
les
jns
nop
cld
or
add
ja
fdivrs
mov
ja
add
adc
and
push
mov
xor
add
add
cli
push
addb
add
into
in
pop
xchg
cwtl
cmp
ret
subl
mov
push
lock
in
std
pop
cltd
call
push
xor
push
fsubs
mov
or
push
scas
lcall
fld
je
push
xlat
enter
outsl
sbb
cltd
push
add
in
fmull
add
or
js
add
adc
pop
mov
or
mov
mov
std
in
fcmovnb
mov
or
mov
into
mov
rcrl
sbb
jge
roll
hlt
ds
jae
dec
popf
cmp
inc
pandn
jp
sub
adcb
xlat
xor
out
jecxz
in
inc
rolb
fcmovnb
loope
in
mov
add
jo
sub
lahf
test
jecxz
lock
mov
cwtl
das
bndldx
or
dec
inc
mov
pop
add
pop
push
cltd
pop
add
jmp
push
or
mov
push
add
cwtl
dec
sbb
decl
jns
cmpsl
xchg
xchg
int3
mov
lock
jmp
js
jmp
xchg
lods
jl
cltd
jnp
jl
test
outsl
and
out
int
cwtl
cmpb
cmp
addl
mov
cmp
insl
and
dec
jb
aaa
jo
inc
jae
xor
or
jge
add
mov
and
jl
add
pop
mov
fucomp
repz
shl
in
int
enter
lods
dec
jo
rol
das
shlb
jg
aam
mov
mov
sub
xchg
sti
loop
shrl
hlt
pop
mov
clc
xor
xorb
sub
iret
and
stc
enter
fwait
or
pop
xchg
fstpt
mov
mov
out
flds
xlat
mov
lret
cmp
and
pop
sarb
mov
jns
or
cmpb
cwtl
or
stc
lret
mov
mov
js
add
and
jmp
pop
out
add
or
je
dec
sbb
jl
sbb
clc
loop
mov
leave
jo
jne
mov
jge
popa
js
cltd
adc
cmp
xchg
cld
jl
icebp
xchg
es
and
mov
mov
or
lods
add
aaa
movsb
popw
sbb
push
nop
mov
lcall
add
xchg
push
ja
inc
push
add
roll
add
mov
rcrb
mov
sub
cmp
jg,pt
adc
xchg
aam
call
ljmp
sbb
sbb
dec
cmp
push
and
loopne
add
adc
or
lock
add
cwtl
xchg
push
add
mov
jns
scas
jl
xor
mov
xorb
mov
mov
les
mov
aam
sub
mov
mov
xchg
loopne
test
shll
es
je
in
push
aaa
add
cmp
gs
jp
cld
jle
jbe
in
sbb
outsb
xor
pop
addl
mov
sub
inc
inc
enter
mov
xchg
add
cmpb
mov
and
lcall
and
sbb
cmpb
cmp
mov
or
mov
es
pop
js
mov
pusha
loope
popw
add
stos
jae
ret
shll
sub
jno
nop
jle
xor
test
mov
cmc
ret
jo
jo
mov
adc
add
mov
in
cwtl
int3
dec
ret
fwait
push
add
addl
jae
pop
mov
ja
clc
enter
lock
es
scas
or
test
mov
nop
add
lahf
adc
add
xchg
add
add
add
bound
stc
pop
mov
orb
test
sbb
mov
les
test
add
mov
sub
sub
push
scas
push
jne
xor
les
imul
mov
dec
sub
add
push
ret
test
les
jg
jg
sbb
pop
movsl
insb
sbb
lret
pop
mov
sub
xor
outsb
ret
cld
fs
adc
add
xchg
test
push
pop
pop
dec
sub
push
pop
rolb
add
arpl
push
cmp
mov
sbb
ret
push
ljmp
gs
das
mov
mov
add
pop
dec
pop
lds
mov
or
add
je
push
xor
pop
mov
cmpsl
imul
mov
sub
inc
mov
add
repnz
or
das
addl
sub
mov
jno
sti
add
addr16
cmpsb
pusha
dec
pop
or
mov
pop
sub
add
test
sub
cwtl
jl
je
dec
pop
or
ret
and
add
or
jne
lret
mov
add
sub
xor
dec
je
bound
inc
mov
test
adc
or
pop
sub
add
mov
pop
out
sub
or
sahf
pop
pop
ljmp
cmp
movhps
pop
sbb
add
jl
insb
mov
call
adc
rclb
rcr
add
test
push
add
mov
inc
mov
roll
or
xchg
pop
or
adc
xchg
push
aad
xchg
or
and
adc
and
and
pop
inc
rolb
data16
pop
aas
or
clc
jno
add
and
lgdtl
lods
xor
dec
or
add
int3
mov
xchg
cld
bound
stos
jl
pop
and
sahf
mov
adc
xchg
test
pop
jmp
subl
and
xor
cmp
outsl
cmp
or
das
push
add
push
cmp
jae
and
enter
loopne
aam
mov
int3
mov
loop
arpl
loopne
jg
clc
nop
push
jae
add
dec
pop
sub
fwait
xchg
cltd
inc
push
ret
inc
and
xor
sti
stc
addr16
shr
sahf
lock
jecxz
test
push
ds
js
xchg
lock
pushf
mov
cmp
ds
push
setbe
orb
clc
pop
testl
out
int3
repz
sarl
lock
mov
push
insl
mov
or
inc
or
addr16
sub
jge
lds
pop
sub
xor
adc
sarl
hlt
sub
inc
mov
xchg
je
addb
lret
cmp
addl
movl
cwtl
sub
cs
sbb
mov
das
ret
test
cmpsb
push
aam
xchg
loopne
fisttps
hlt
or
mov
cmp
lahf
inc
or
jp
and
sub
add
pop
sub
dec
xchg
repnz
or
xor
dec
jecxz
push
adc
jnp
clc
daa
test
andl
inc
add
sub
in
movsb
adc
rolb
and
fisttpl
mov
and
jo
movb
loope
add
and
sbb
cmpb
lods
les
loope
mov
mov
pushf
dec
push
lock
push
andb
cmp
cmp
adc
xor
lock
and
adc
addb
mov
sub
bound
xor
adc
push
or
mov
or
call
test
lock
pop
ret
addl
sbb
outsb
pop
xchg
mov
out
rorb
pusha
jns
ror
pop
adc
push
scas
es
mov
cltd
add
hlt
mov
dec
nop
mov
push
xchg
lea
mov
hlt
add
add
push
test
push
fdivs
xor
rcrb
push
subb
sbb
int3
mov
sarb
ss
mov
xchg
pop
bound
xor
mov
ss
dec
int3
xor
test
push
fmull
mov
sbb
cwtl
mov
sbb
shll
jb
rclb
push
pop
add
repnz
aam
out
push
cmpb
hlt
mov
push
test
sub
mov
push
aaa
sbb
cli
pop
mov
jl
jne
mov
nop
jmp
add
pop
ds
cmp
notb
jbe
pop
cmp
xor
push
and
sbb
into
dec
push
and
mov
andl
js
jbe
and
xchg
loope
outsl
cs
xor
ret
add
jl
jle
insl
pushf
and
sub
sub
subb
jle
bound
push
inc
jo
xchg
rolb
into
sub
push
mov
push
aas
cmp
aad
shrb
jge
int
pop
dec
mov
lods
adc
pop
inc
inc
test
cmpsb
push
adc
dec
xchg
mov
inc
insb
insb
nop
xchg
mov
cmp
jecxz
add
jle
jp
sbb
sub
mov
or
popf
dec
dec
mov
push
mov
pop
push
loope
or
hlt
cmp
add
sub
inc
loopne
sbb
mov
insb
or
dec
test
out
push
nop
xor
jno
test
push
ss
popl
push
fcomi
dec
stc
mov
xchg
push
or
nop
mov
sub
inc
ss
push
push
add
push
sbb
int
aad
mov
add
fsubl
nop
cli
xchg
jle
adcb
push
pushf
outsb
js
xchg
adc
push
or
adc
push
mov
add
pop
jnp
pop
arpl
out
lea
pop
xchg
dec
or
into
mov
and
push
jg
popl
push
push
jge
dec
adc
enter
stc
pop
fisttpll
std
push
jo
sbb
shlb
pusha
inc
insb
into
add
or
test
and
inc
fistl
inc
leave
and
gs
xchg
add
lahf
push
loopne
lret
pushf
or
add
imul
cmp
push
daa
pop
subps
or
xor
ljmp
mov
aaa
dec
push
xor
shrb
sub
sbbl
into
std
outsl
or
scas
cmp
xor
push
sbb
sbb
push
test
sub
inc
mov
cmc
push
or
lcall
and
cli
dec
add
fs
pushf
push
sbb
arpl
filds
add
add
addr16
lds
and
sub
mov
add
orb
fldl
mov
xor
jo
sub
mov
testb
test
shlb
call
or
mov
adc
add
ret
in
xchg
dec
and
and
notb
out
push
fisttpll
pop
jne
xchg
repnz
or
xor
jle
sub
dec
dec
push
fs
mov
ds
sbb
mov
lret
fdivl
mulb
mov
jo
sub
daa
rclb
jae
in
xchg
mov
xchg
xor
gs
outsb
mov
sbb
rolb
and
push
jne
je
xor
add
addr16
inc
les
das
cmp
js
je
ret
ss
sub
sub
les
mov
add
or
push
jl
fsubrs
loopne
mov
ss
inc
xchg
sub
imul
arpl
mov
xchg
mov
ljmp
jo
ja
jno
jae
pop
lcall
jne
lea
ljmp
enter
push
dec
dec
js
xchg
pop
mov
pusha
dec
sbb
push
andb
jge
push
in
mov
xor
dec
out
mov
xor
sbb
sub
into
mov
cli
xchg
pop
cs
sub
cmp
push
dec
int3
sub
shr
jns
xchg
mov
stos
or
inc
push
jo
jo
pop
jne
shll
mov
cmpb
cmp
pusha
xor
cwtl
xchg
cs
sbb
sahf
enter
jne
adc
jl
dec
sub
fsubl
push
pop
movsb
mov
cmpsb
mov
js
or
movsl
insb
cmp
gs
int3
add
or
lods
or
add
push
in
add
xchg
mov
das
push
nop
mov
mov
addr16
bound
jg
fsubs
mov
pop
jne
lods
outsb
jo
jae
pushf
lea
es
add
arpl
xor
mov
repnz
jo
icebp
push
jno
mov
or
ss
xchg
es
les
inc
pushf
outsb
push
pushf
and
test
lret
repnz
movsb
sti
mov
je
cmp
xchg
test
dec
adc
pop
and
movsb
add
outsb
js
push
or
mov
js
adc
out
cmp
nop
mov
movsl
call
ljmp
add
cmp
jl
mov
xor
out
xchg
and
dec
enter
pop
xchg
sub
pop
add
mov
test
outsl
add
xor
enter
pop
roll
add
push
loopne
pop
or
dec
xchg
adc
dec
and
or
test
scas
add
add
jbe
fwait
mov
adc
je
jb
hlt
xlat
pushf
arpl
dec
cmp
sbb
push
scas
xor
push
cmp
fmull
add
and
push
dec
jo
mov
lds
adc
rorl
xor
push
lret
sub
dec
sub
xor
xor
adc
or
nop
gs
xor
popa
cltd
test
insl
mov
add
jne
mov
push
and
xchg
imul
int
jns
sahf
addr16
je
mov
bound
push
cmp
jb
ret
insl
xor
mov
add
jle
bound
movsb
push
les
insb
dec
clc
push
jo
loopne
lret
dec
outsb
xchg
nop
rcr
cmpsl
ljmp
xor
cltd
fs
push
sub
xchg
xor
lods
test
xor
cmp
push
or
insl
mov
sahf
fs
fmuls
xchg
xor
push
in
dec
mov
imul
add
inc
push
push
push
sbb
ss
push
lea
inc
outsb
fstpt
fistpl
push
or
push
sub
test
fwait
loopne
fcompl
or
add
mov
add
and
jb
imul
xor
xor
neg
das
arpl
push
push
push
sbb
cmp
jae
jle
jae
data16
inc
gs
std
sarb
prefetchw
cmp
push
jg
insl
bound
subl
jne
mov
mov
xor
outsl
fiadds
je
xchg
icebp
cmp
xor
data16
je
outsb
int3
xchg
or
je
jne
dec
adc
outsw
dec
mov
jo
xor
imul
jno
mov
sub
insb
stc
addr16
and
arpl
js
iret
decl
inc
cli
lret
loopne
lods
cld
repnz
imul
inc
arpl
ffree
xchg
das
pop
fisubrs
pop
repz
xor
lcall
xchg
daa
sti
ret
pop
xor
add
adc
or
lahf
mov
sarb
call
fdivrs
inc
sub
and
in
dec
lock
push
adc
ds
pop
ret
movsb
jns
add
xor
xchg
mov
or
sbb
mov
adc
and
orb
imul
pusha
insb
xor
cs
xorl
popa
pop
jbe
jo
or
shlb
cmp
mov
jae
shll
jbe
cld
imul
insl
out
lods
sbb
add
jb
jne
in
inc
mov
outsl
arpl
push
inc
fldenv
cmp
outsl
fs
dec
aaa
popa
outsb
pop
aad
and
push
jb
push
jmp
pushf
inc
jae
and
imul
imul
cs
sub
outsl
push
js
push
std
in
inc
mov
addr16
push
pop
push
addr16
je
imul
popa
aas
test
cmpsl
jmp
sub
xchg
mov
fistpl
js
push
imul
sub
or
loop
sbb
pop
add
xchg
add
and
fucom
xorb
negb
push
cwtl
adc
cmp
sbb
mov
jp
xchg
mov
insl
cmp
xchg
add
add
sahf
and
xor
or
ds
int3
clc
or
repz
pop
lcall
pop
dec
fisubs
shll
mov
inc
in
and
pop
loopne
shl
jle
aas
sub
rcr
inc
out
or
add
adcb
out
add
pop
shl
aas
xchg
incl
push
jns
and
jo
push
fldenv
add
mov
orb
xchg
sub
std
popa
add
sbb
shlb
movsl
ss
adc
add
sbb
pop
call
add
lods
inc
add
sub
adc
dec
cs
add
jns
int
dec
lea
xchg
sbb
and
push
mov
bnd
fadds
lods
rorl
popa
pop
inc
xchg
add
mov
lahf
sub
mov
data16
push
cld
inc
lahf
sub
verw
pop
stos
push
adc
test
push
xor
mov
mov
add
ss
and
shrb
fisubrl
mov
fnstenv
push
or
dec
or
lcall
pop
dec
roll
add
in
fdivs
sbb
mov
or
nop
out
add
add
cmpsb
aad
ds
add
dec
sbb
adc
cmp
pop
shr
jnp
mov
sahf
add
inc
loope
add
add
rcll
add
sarl
jmp
mov
push
mov
and
data16
mov
add
push
and
pusha
xor
loop
xor
fstps
add
in
and
repz
fs
rclb
pop
and
lds
push
test
or
loopne
push
sub
data16
icebp
aaa
test
add
sbb
or
push
adc
and
cltd
cmp
and
jo
sbb
sbbl
mov
fildl
add
les
sub
add
push
push
jbe
lock
or
add
cs
js
loopne
add
xchg
push
pop
shll
lahf
push
add
cmp
push
sbb
jo
aas
inc
inc
add
imul
adcb
cwtl
je
icebp
lods
mov
pop
add
leave
in
jnp
je
fmull
cmp
addb
add
hlt
repnz
in
pop
xchg
push
mov
add
cli
xor
cltd
icebp
push
jo
out
notb
icebp
adc
test
sbb
and
cltd
dec
scas
xlat
es
cmp
mov
dec
je
add
and
cwtl
add
adc
pop
mov
sbb
add
xor
mov
xorb
lock
xchg
push
inc
and
pushf
add
daa
pop
aam
fdivrl
loop
fs
dec
add
sbb
xchg
aaa
sbb
addl
mov
insl
xor
add
clc
add
jl
sbb
lret
and
enter
add
gs
arpl
clc
mov
inc
add
push
into
adc
xchg
roll
sub
jae
sbb
mov
add
paddsb
shll
movsl
clc
scas
add
pop
adc
cmpsb
push
add
sub
dec
dec
or
mov
insl
add
mov
dec
popf
and
fsubs
pop
jg
push
xor
nop
gs
sub
add
add
mov
jae
enter
imul
xchg
pusha
xchg
mov
popf
mov
out
inc
sbb
addl
inc
push
inc
rolb
xchg
add
cmp
enter
sub
ljmp
imul
add
adc
rorb
add
aam
scas
in
in
lock
add
int3
cwtl
outsl
or
cmpl
jne
add
pusha
cmp
pop
dec
std
aas
xor
rorb
clc
stos
cmp
into
pop
scas
push
add
mov
add
ja
cwtl
call
fdivrs
push
and
roll
mov
out
adc
leave
cmp
sbb
xorb
mov
sub
loopne
mov
add
adc
lmsw
ja
mov
add
mov
or
sub
sub
sub
out
jno
mov
mov
rorb
push
add
pop
in
dec
cmp
lds
sti
add
mov
inc
enter
pop
mov
pop
push
push
add
inc
in
and
into
ret
add
hlt
xchg
or
and
sbb
mov
rolb
inc
add
stos
fs
sbb
mov
mov
ja
in
popf
xchg
mov
xor
orb
aaa
push
mov
add
mov
in
pop
add
outsb
dec
push
xor
add
jae
call
ret
mov
add
and
and
inc
gs
push
sbb
inc
xor
cwtl
inc
and
mov
inc
add
or
push
sub
mov
add
xorl
stos
cmpsl
pusha
xchg
or
xchg
add
jb
std
gs
cs
jge
push
adc
add
clc
fdivrp
add
cmp
inc
nop
sbb
dec
sarl
or
and
push
fisttpll
pop
aas
rcll
enter
mov
xor
cltd
add
scas
test
add
stos
js
pop
pop
out
sub
loopne,pt
shrd
adcb
movsb
xor
and
adc
xchg
push
scas
sub
xor
leave
jnp
aam
sbb
dec
icebp
or
and
punpcklbw
xchg
idivb
adc
mov
add
sbb
mov
add
lret
enter
leave
push
lods
push
scas
out
out
add
adc
add
popa
pop
pop
push
add
dec
jle
add
rorb
jg
ficompl
scas
add
ret
je
add
sub
xor
sbb
rcr
add
sbb
insb
lds
or
leave
out
outsl
add
in
add
sub
outsb
add
out
sahf
add
shl
adc
in
or
out
add
ret
xor
add
sbb
cmovl
jo
add
add
outsl
lret
adc
fldenv
fwait
sub
adcb
addr16
and
int3
adcb
bound
or
adc
fdivrl
roll
lods
lahf
adc
add
lcall
ds
mov
cmp
stc
cwtl
imul
inc
pop
add
cld
mov
sarl
out
inc
add
xlat
add
xor
test
insb
or
cli
testb
pop
in
sub
lds
add
jb
fs
jle
int
push
lea
add
sbb
aas
hlt
fnstenv
sub
and
fidivl
xorl
cmpl
push
push
es
add
adc
sub
scas
pop
daa
sbb
xor
test
dec
int3
pop
xchg
add
pop
aam
bound
insb
mov
das
add
jge
int
cld
bound
sub
or
or
xchg
std
sbb
fisttpll
add
mov
add
call
inc
xor
and
sbb
sbb
cmp
jecxz
push
sub
mov
jp
add
ret
mov
push
cmp
add
jne
xchg
xor
test
push
dec
clc
push
ret
add
sahf
push
loopne
pop
cmp
pop
loop
cmc
add
sub
cli
add
push
jnp
nop
mov
cmc
shrb
ja
pop
orl
sub
xchg
sbb
nop
cmp
popf
add
incl
mov
push
pusha
add
add
pushf
push
adcb
enter
loopne
add
js
and
and
adc
add
loope
xor
rolb
mov
pop
sldt
loopne
fistps
ja
movsb
sub
iret
repnz
add
rclb
dec
jmp
test
jmp
ljmp
popf
or
xor
aam
scas
lods
or
fldl
or
sahf
int3
mov
sti
inc
inc
add
jg
lret
bound
jecxz
ficompl
int3
add
lahf
add
daa
nop
xor
push
loopne
pop
cmpsl
fidivs
mov
cmp
pop
mov
xchg
push
hlt
data16
or
mov
adcb
cmpb
out
add
fdivrl
cmp
add
sub
sbb
dec
sbb
fadds
dec
mov
pop
and
xchg
pop
push
es
cmp
mov
add
mov
cmp
imul
jbe
jo
add
lret
ljmp
inc
pop
cmpsl
pop
add
out
jae
cwtl
mov
add
cmp
xchg
pop
or
push
sbb
int3
orb
push
jl
add
mov
and
xchg
add
push
cli
mov
cmp
or
mov
adc
xor
cmp
add
add
jmp
and
pop
adc
add
jne
leave
mov
xor
sbb
pop
jo
nop
cmp
xor
mov
jns
and
xchg
cwtl
pop
loopne
jae
xor
cmp
cwtl
std
add
fs
and
rorb
imul
push
out
xchg
dec
xchg
pop
dec
ret
orb
or
into
add
sysenter
add
cs
orb
enter
add
ss
xor
pop
inc
and
adc
sbbb
or
add
mov
sbb
sbb
mov
lock
ja
dec
pop
fadds
mov
mov
fwait
add
add
jne
mov
pop
sub
mov
dec
push
ja
or
pop
jo
mov
cwtl
xor
dec
cmp
pop
push
pushf
add
add
mov
sbb
mov
inc
loopne
mov
mov
jmp
push
pop
mov
or
and
addr16
or
cwtl
inc
add
pop
and
outsl
xor
daa
jne
je
bound
add
push
outsb
cltd
push
fs
arpl
imul
sub
aas
add
push
or
rcrb
pop
inc
adc
pop
adc
mov
add
add
or
inc
test
hlt
push
int3
fcoms
adc
add
and
push
or
aaa
add
xor
or
lock
or
movsl
push
arpl
out
add
jo
xor
lcall
mov
inc
sbb
clc
jne
push
inc
dec
inc
inc
mov
fsubs
stos
add
pusha
repnz
inc
push
push
or
sub
add
cld
sbb
adc
adc
sarb
inc
push
aam
xchg
xor
or
sbb
push
loop
ja
shrb
add
xchg
or
in
jmp
inc
inc
and
add
dec
jl
push
add
jb
clc
and
add
sub
mov
push
movsb
inc
jo
imul
sub
or
ljmp
pop
jp
add
add
mov
adc
add
pop
inc
jno
add
add
sub
inc
idiv
jae
mov
cmp
and
push
decl
nop
add
sub
add
je
gs
mov
add
sub
pop
in
add
inc
jns
sub
insb
inc
loopne
outsl
add
add
add
popa
jno
adc
nop
xor
xor
push
mov
movsb
sbb
or
adc
pop
add
mov
sbb
add
or
xor
and
pop
insb
xor
and
push
orb
add
je
adc
sbb
or
gs
xor
sub
pusha
mov
jb
popa
arpl
adc
pop
mov
out
add
inc
ret
int3
addl
psubb
out
loopne
or
inc
dec
add
push
mov
imul
aam
or
movsb
jl
lock
adc
and
adc
mov
rcrb
inc
faddl
nop
loope
push
dec
sub
and
push
jmp
add
sbb
adc
or
add
cmp
push
lock
and
xchg
adc
enter
aam
int3
cmp
dec
cld
mov
and
in
jb
cmp
es
out
nop
loop
cmp
rcrl
and
xchg
jo
cmp
in
jb
mov
sbb
xchg
push
add
mov
adc
popl
and
loop
sub
add
mov
pop
sbb
add
lods
lea
dec
xor
cmpsb
inc
loope
clc
inc
nop
or
lock
call
xor
push
mov
push
ds
pop
jne
add
pushf
int
push
call
mov
enter
add
pop
lret
sbb
sarb
jo
shlb
mov
and
rol
stos
mov
inc
addl
pop
fs
cmp
jl
adc
pop
nop
insb
push
inc
push
ja
mov
fsubr
fwait
iret
xchg
add
push
mov
or
push
addr16
popl
pop
bound
int3
adc
push
add
mov
cmp
or
or
push
push
push
adc
mov
pop
push
andnps
mov
out
and
aas
call
add
nop
ds
cmp
icebp
push
or
fwait
or
pop
ret
adcb
call
mov
mov
or
add
inc
add
adc
and
pop
pop
sbb
pop
pusha
fbld
inc
add
call
pusha
xor
pop
pop
pop
mov
add
sbb
pushf
sti
cwtl
xor
cmp
xchg
jb
mov
call
rolb
bound
and
pop
sbb
rolb
or
cmpl
loopne
xor
aas
add
add
pusha
sahf
cld
xor
xor
jmp
add
or
in
add
scas
and
stc
idivb
pushl
loopne
jb
add
je
mov
sbb
sti
repz
adc
fiaddl
dec
jge
pop
mov
movb
in
out
aad
xchg
add
add
push
dec
push
sbb
and
clc
mov
test
je
js
adc
mov
mov
dec
adcb
push
call
cmc
pop
pop
fs
and
fnstenv
xchg
popa
push
push
mov
push
add
xchg
gs
push
ja
add
dec
jo
in
movsb
dec
add
and
xchg
or
or
dec
mov
aam
dec
sbb
add
iret
sub
adc
dec
or
push
and
jae
adcb
add
jns
xor
in
add
mov
es
add
jae
xchg
dec
sti
add
lea
sbbl
cmpsl
add
xchg
adc
rcrb
cmovp
sbb
or
dec
adc
ds
adc
sub
scas
add
ljmp
sbb
sbb
ret
add
loop
cld
pop
mov
sub
lds
iret
js
pusha
pop
lcall
mov
add
hlt
mov
loopne
out
add
pop
sub
pop
mov
jmp
lds
xor
test
pcmpeqb
nop
mov
out
xor
and
add
lods
aas
add
es
sbb
cmovno
dec
test
cmp
and
xor
cli
out
mov
std
add
inc
movsb
call
dec
andb
cmpsb
leave
bound
js
add
sbb
add
aas
xchg
data16
pop
aam
xor
cld
or
jg
and
call
jb
pop
je
pop
push
inc
aaa
dec
push
xor
add
inc
stos
call
das
and
int3
mov
cwtl
cmp
inc
cmpl
pop
movsl
and
mov
sbb
fwait
pop
int
test
adc
dec
aas
js
add
xchg
jbe
add
mov
pop
cwtl
push
sub
pusha
push
push
mov
xchg
sub
sub
test
pop
lods
dec
push
adc
call
mov
xor
aaa
add
xchg
leave
sub
and
push
out
out
ljmp
add
xchg
push
or
add
xor
adc
test
push
decl
jmp
pusha
imul
or
add
lods
add
cmpsb
xchg
jp
and
outsb
sub
imul
adc
inc
adc
lods
push
add
stc
lds
sbb
or
add
push
out
cmp
fidivs
pop
out
rolb
sub
mov
sub
int3
inc
mov
add
pop
andb
xchg
mov
ret
mov
cmp
movsl
adc
lods
notb
adc
cmpl
dec
jmp
jnp
mov
test
in
pushf
jne
adc
sbb
dec
pushl
in
les
add
add
push
add
xchg
adc
jmp
push
sahf
pusha
adc
inc
ret
clc
mulps
sti
mov
add
mov
mov
rolb
rcrb
mov
sahf
bound
inc
adc
xor
andl
loopne
jmp
xchg
ret
enter
add
in
inc
cs
xchg
les
push
mov
test
int3
aad
inc
sbb
dec
or
add
push
xchg
mov
jb
add
push
cmp
aad
sbb
mov
out
stc
xchg
add
je
loopne
adc
xchg
add
jne
int
add
in
inc
xchg
push
inc
xchg
cmp
push
pop
loopne
and
cmp
jb
add
or
add
dec
cmp
mov
cli
leave
add
cmp
add
aad
and
mov
jmp
and
pop
sub
mov
fcmovu
or
imul
test
dec
faddl
shll
add
addr16
push
loope
cmp
call
add
add
addb
sub
popf
sbb
in
add
add
jl
movl
or
hlt
mov
add
add
or
inc
or
mov
cwtl
or
ud0
dec
sub
add
add
cld
clc
push
ret
adc
mov
push
push
outsb
or
andb
lret
add
dec
and
or
add
andl
incb
adc
dec
fnstenv
loope
and
inc
push
push
je
or
add
orl
sub
test
and
mov
notb
add
add
push
add
cmp
push
mov
add
add
ret
push
fs
fdivs
cmpl
add
dec
fmuls
and
sbb
repz
and
push
push
andl
add
dec
or
add
adc
xor
loop
call
lea
sub
push
cmp
clc
pushf
jl
call
jmp
add
mov
je
fwait
add
adc
lcall
fsubrs
add
aad
add
inc
pop
imul
jae
lea
adc
sbb
call
add
push
mov
sub
or
add
mov
push
or
divb
mov
call
sbb
cmp
inc
mov
and
add
adc
adc
es
lahf
add
sbb
adc
inc
sub
stos
pop
jg
sub
cmp
jl
add
jns
add
or
sbb
cs
mov
cmp
add
xchg
fwait
adc
or
jmp
mov
adc
add
adc
push
push
lret
comiss
nop
push
loop
ds
enter
add
testl
adc
or
inc
inc
popf
mov
push
addl
cltd
sub
add
add
add
repz
je
jno
sti
fcoms
call
pop
subb
and
cmp
add
js
outsl
fidivs
test
add
add
xchg
pusha
dec
in
aam
mov
or
rcl
les
hlt
pop
adc
pop
pop
pop
sub
xchg
nop
mov
cld
ret
inc
mov
or
xor
sbb
or
nop
or
add
cmp
xchg
je
outsb
les
stos
shlb
or
jbe
ljmp
push
mov
adc
add
or
mov
test
fwait
das
pop
adc
or
les
subb
aas
add
ja
jmp
arpl
push
leave
or
insb
add
xor
sbb
add
push
adc
dec
add
xchg
loop
add
inc
mov
add
xor
icebp
pop
add
sahf
pop
out
jne
enter
push
dec
cmc
push
mov
mov
push
rcll
add
cmp
cmpsl
mov
mov
movsb
cmp
add
test
sub
push
xor
mov
shlb
daa
add
xchg
mov
xor
sti
pop
pop
clc
adc
push
mov
add
xchg
ror
push
push
movsb
inc
xor
and
add
jmp
jecxz
lcall
pop
lods
mov
mov
adc
sub
inc
add
enter
add
ret
scas
mov
pop
clc
jne
add
and
jl
shlb
mov
inc
add
mov
push
in
add
push
shl
js
add
and
inc
sbb
cmpsb
rorb
cmp
jmp
push
or
mov
add
xor
and
les
mov
mov
adc
inc
loop
subb
and
add
imul
add
lea
adc
xchg
inc
pop
jns
push
clc
mov
or
jmp
cltd
cmp
cmc
test
push
test
sub
cmovae
or
jmp
jg
mov
les
cwtl
filds
inc
add
ja
add
icebp
add
mov
cmp
divl
sub
push
aas
mov
add
xor
add
add
pop
add
loop
cmp
cmp
jne
jno
push
les
dec
xorl
imul
add
ret
sbb
and
mov
or
add
js
add
pop
or
push
or
push
or
lds
mov
add
mov
xchg
cmpsb
bound
add
inc
pop
loop
xchg
mov
or
out
and
jmp
adc
icebp
add
lds
movl
stc
mov
int
insl
jnp
dec
inc
or
xlat
add
pop
add
cmp
sub
add
data16
sti
dec
rclb
nopl
sub
test
mov
aam
inc
xchg
subb
add
mov
mov
add
xor
mov
jns
push
test
out
and
jl
in
push
negl
jnp
push
sub
adc
add
add
loopne
gs
adcb
jne
test
stc
aad
xchg
fbld
dec
and
add
stos
and
push
cmp
lds
push
scas
add
sub
loopne
in
sub
es
shll
xchg
dec
xchg
dec
mov
push
xor
loop
popl
push
mov
out
addl
fcomps
lret
or
sub
adc
or
sbb
push
jmp
imul
andb
adc
dec
or
fildl
sbb
dec
fldenv
jmp
test
add
jmp
mov
and
clc
mov
add
xchg
movsl
pop
outsb
rcrb
andl
call
pop
mov
add
loope
or
add
sarb
pop
add
test
int
call
jmp
xor
cmp
dec
inc
out
nop
jle
pop
outsb
orb
leave
shlb
cwtl
add
sbb
enter
xor
and
sbb
ret
nop
push
push
xchg
loopne
enter
xor
fildl
fs
rolb
cmc
dec
xor
mov
push
inc
sbb
shlb
inc
push
mov
andb
inc
or
inc
loope
cmp
fildl
add
nop
push
and
add
les
push
add
shl
add
adc
stos
rdpmc
push
and
jo,pt
or
push
cmpsl
inc
or
dec
push
push
cwtl
inc
add
inc
jo
xchg
jmp
dec
aam
or
popa
pop
and
sbb
loopne
add
jmp
push
add
mov
inc
jp
add
xor
or
add
push
pop
jl
cwtl
push
hlt
popf
push
enter
jbe
cmp
test
add
sbb
add
inc
subl
out
mov
cmova
movsb
or
adc
xor
sbb
call
fcoml
push
cmp
shrb
mov
dec
clc
inc
fs
sbbb
sahf
je
inc
and
movsl
add
mov
inc
add
jl
xchg
add
adc
std
sbb
mov
push
enter
cld
inc
jmp
pop
add
xchg
mov
mov
movsb
das
sub
data16
fistl
loop
sub
push
lods
add
in
xor
fists
add
clc
or
pop
sub
repnz
add
orw
insb
out
fistps
and
cs
pop
and
add
push
push
add
mov
mov
add
cld
pop
push
or
js
add
push
js
nop
adcl
daa
nop
or
lret
test
fmul
mov
ret
add
cmp
inc
rcl
ret
pop
and
jge
dec
add
pop
call
sarb
scas
sbb
xor
sbb
mov
add
das
pop
or
arpl
mov
sbb
or
sbb
lock
and
and
je
sbb
test
jmp
adc
cmpsb
dec
inc
sub
rol
shlb
mov
add
mov
sbb
cmp
clc
dec
je
loope
inc
and
add
sbb
xchg
add
rorb
inc
inc
inc
pushl
add
add
push
shr
je
mov
pop
add
inc
dec
xchg
lds
sbb
mov
dec
repnz
jmp
xor
outsb
jg
push
rol
jns
add
sbb
jne
push
adc
add
hlt
dec
out
and
mov
adc
cli
loopne
jmp
pop
cmp
inc
add
inc
or
jmp
cmc
nop
sbb
push
or
jno
or
dec
and
pop
call
ds
fsubp
testl
add
or
dec
dec
les
dec
add
jo
sbb
iret
fdivl
sub
repnz
mov
add
data16
roll
and
stos
rcll
and
xchg
stos
pop
and
xor
fstpt
add
mov
push
or
loop
dec
ds
xor
lea
xor
add
push
pop
add
pop
and
in
push
sub
or
test
adc
pop
sbb
add
sub
inc
popa
call
add
or
and
push
add
cmp
andl
add
faddl
andb
and
aam
jge
jmp
sar
jo
adc
jle
add
pop
sub
testb
inc
inc
jb
mov
movntps
je
test
add
xchg
and
dec
jbe
add
ja
cmpsb
add
leave
orb
add
and
sbbl
test
mov
add
stc
add
push
push
or
inc
mov
mov
dec
jne
pop
xor
sbb
add
xor
sti
jo
xor
out
iret
xchg
add
inc
or
sub
add
sbb
rolb
cmp
add
icebp
and
rolb
loopne
fmuls
add
or
in
push
adc
mov
icebp
jne
and
loopne
pop
jmp
add
jbe
daa
mov
insb
mov
fwait
mov
push
addl
data16
in
ljmp
addr16
lea
ret
pop
scas
loopne
add
lods
push
jecxz
sub
jmp
pop
xchg
jns
lret
add
sbb
sbb
add
cld
popa
add
scas
mov
pop
push
filds
dec
mov
inc
icebp
stc
loopne
add
mov
pusha
clc
jmp
add
jge
xor
fldcw
add
adc
out
mov
roll
mov
adc
add
or
pushf
or
and
ret
testb
hlt
adc
rorb
mov
imul
leave
adc
loopne
or
and
add
aam
call
out
je
xchg
mov
fsub
mov
jmp
fdivs
test
test
add
leave
sbb
mov
lds
or
xorl
or
fisubs
movl
bound
inc
add
es
fadds
lods
outsb
xor
xchg
push
xchg
add
push
add
add
into
sbb
rorl
mov
popa
push
pop
add
sbb
leave
push
ljmp
daa
lret
into
pop
xchg
or
cmpl
outsl
xlat
mov
fisttps
inc
sbb
int
repnz
bound
inc
test
outsl
cld
jne
loope
mov
cwtl
ja
lods
lds
cmpsb
add
decl
js
mov
mov
push
stos
mov
out
cmp
jmp
mov
stos
pop
out
sub
mov
inc
imul
out
testl
xor
cmp
jecxz
add
mov
cmp
stos
push
inc
mov
add
pop
sbb
sarb
int3
aas
repnz
cmp
nop
fildl
daa
cmp
clc
add
cli
arpl
mov
jmp
repnz
aam
repz
loope
dec
jp
iret
hlt
bound
loopne
add
fdivrs
mov
xchg
push
add
mov
add
xchg
leave
dec
dec
cwtl
sbb
cmpsl
xchg
cmp
xor
pop
push
in
cmp
mov
lock
movsl
mov
jle
stc
enter
sbb
addr16
repz
push
aas
mov
subb
xor
add
push
pusha
les
pop
aad
bound
xor
mov
push
add
and
adcl
add
and
and
add
cmp
movsb
add
mov
mov
add
inc
clc
lea
xor
push
bound
push
lods
stc
ja
call
test
dec
xor
sbb
nop
mov
movl
pusha
fsts
pop
clc
mov
add
xlat
addr16
inc
les
add
in
out
add
jno
push
and
mov
movsl
push
cs
rolb
ds
divb
pop
or
inc
push
add
push
inc
add
jb
insb
push
sub
inc
gs
jo
imul
addb
dec
popa
add
push
call
add
or
fwait
out
xorb
mov
lahf
add
xorb
xor
add
push
inc
rep
add
or
shlb
push
mov
inc
pop
cmp
sti
adc
add
xor
add
add
cmpsb
repnz
add
pop
adc
fsubrl
movsl
cmp
add
xchg
add
out
insb
cltd
rcrb
mov
add
inc
pop
sbb
add
dec
cmp
cltd
call
sbb
bswap
dec
sub
je
dec
xor
sbb
adc
jecxz
mov
add
cmp
pop
mov
fdivs
sar
add
pop
icebp
outsb
repz
add
jb
gs
mov
js
daa
pop
jo
pop
mov
in
cmp
or
addl
sbb
adc
in
jo
jnp
adc
xor
sub
stc
aam
hlt
adc
pop
popf
sub
scas
mov
mov
aam
xchg
and
xchg
adc
aas
sbb
sbb
ret
xchg
inc
stc
or
pushl
lret
or
jb
add
mov
push
add
sbb
aaa
add
add
orl
loopne
roll
je
mov
pop
adc
add
mov
movsl
in
cmp
mov
aam
pop
nop
inc
cmp
adc
add
add
mov
add
jge
push
push
sahf
ljmp
lock
and
pop
adc
sbb
test
ret
xchg
ret
gs
add
call
add
ja
in
ret
mov
and
repz
or
cmp
cmpsl
cmpsb
jb
fnsave
hlt
or
add
inc
or
lea
xchg
dec
std
pop
ss
lahf
mov
sti
rolb
sbb
fwait
clc
add
push
mov
mov
add
shl
push
in
dec
rolb
or
xchg
jle
add
data16
test
push
sub
pop
cmp
push
add
repnz
scas
sub
or
and
sarb
enter
cld
add
fcmovnbe
push
inc
int3
popa
pop
add
pop
sarb
add
xchg
sbb
adc
sbb
inc
lock
jne
add
cmp
pusha
call
push
xchg
enter
dec
mov
adc
push
shll
or
pop
loop
jbe
add
rolb
incb
push
fnsave
ja
popa
lock
cmp
jnp
cmp
cmp
adc
xabort
dec
push
sub
add
or
dec
jne
icebp
nop
jns
jmp
sbb
cs
add
pusha
cmp
jecxz
out
add
inc
add
sub
cmp
or
enter
push
pop
sbb
pushf
repnz
push
mov
loopne
nop
ja
jg
sub
shlb
shlb
add
xor
and
add
sbb
movl
xor
or
pop
or
cmp
jmp
jne
sub
or
add
push
fs
pop
pop
mov
add
subl
ljmp
clc
enter
in
lods
xor
test
adc
call
add
pop
add
adc
mov
in
push
push
call
xor
in
pop
push
push
add
or
adc
call
adc
dec
sbb
add
stc
cld
or
adc
sub
int
adc
sbb
push
cmp
insl
les
jmp
cli
movsbl
popl
mov
cmp
xchg
push
mov
xor
sbb
imul
add
test
pop
adc
push
and
out
bound
push
adc
ja
enter
idivl
test
adc
or
faddp
inc
btc
pop
dec
adc
add
or
adc
pop
je
lcall
enter
add
mov
arpl
into
add
cli
out
push
je
call
loopne
xor
jbe
dec
add
ja
lea
or
mov
lret
orl
add
inc
mov
sbb
add
push
xor
push
cmp
push
jne
cmp
adc
inc
jp
sub
lock
dec
add
push
hlt
popf
add
cltd
cwtl
sbb
fstpt
push
addb
sbb
jl
in
jecxz
mov
outsl
or
mov
inc
int
adcl
push
add
sub
add
mov
add
jmp
aam
ljmp
pop
add
push
add
add
cmp
mov
scas
repnz
adc
outsb
and
mov
add
mov
add
sahf
inc
add
out
dec
xchg
aas
and
clc
add
dec
out
jne
pop
fs
push
mov
into
pop
or
pop
xor
fsubrl
and
add
sarb
punpcklwd
fdiv
call
jle
push
movsb
pop
jb
mov
test
dec
daa
mov
cmpl
cwtl
add
test
cmp
add
test
inc
add
mov
xchg
arpl
jge
loope
dec
dec
mov
add
jl
add
call
or
fcoms
roll
and
xchg
sbb
in
pop
add
push
push
mov
pop
xchg
loop
adc
mov
cmc
aas
add
ret
sbb
xor
mov
mov
xchg
and
add
cld
out
ds
mov
imul
rclb
pop
add
adc
inc
mov
movsl
jo
lea
add
pop
repnz
test
pop
call
or
ret
xor
add
pop
pop
aad
int3
mov
add
or
or
clc
cld
or
mov
xchg
mov
sub
pop
xchg
mov
or
adc
and
fldl
cmp
pusha
cld
jno
jmp
aas
pop
sub
mov
loope
cmp
adc
sub
inc
add
clts
and
cmp
std
out
sbb
das
push
mov
sub
mov
dec
jecxz
leave
cmp
and
sbb
inc
xlat
cmp
cmp
cmp
cmp
fidivrl
or
flds
push
inc
lret
dec
xor
sub
leave
or
clc
jge
pop
jo
add
int
or
lcall
jno
sub
jmp
or
add
sbbl
je
jae
mov
sbb
fdivs
add
dec
inc
sbb
leave
shrl
xchg
nop
lods
push
fstps
dec
mov
dec
pusha
bound
cmp
dec
outsl
shl
les
add
push
ja
xchg
and
sbb
adc
enter
pop
jp
or
cmp
je
cld
add
cmc
popf
and
add
xor
xor
or
pop
dec
jo
or
add
add
jne
cmp
add
test
jle
dec
mov
fiadds
xchg
out
mov
xchg
roll
cmpsl
add
sub
or
ss
ret
push
loopne
adc
popf
jg
add
aaa
js
pop
push
add
or
repz
sbb
inc
mov
shrl
add
movsl
pusha
jno
mov
lea
mov
rep
popl
or
orl
dec
mov
push
pop
inc
inc
dec
jns
push
or
subl
rolb
mov
add
jl
sti
sub
xchg
add
or
sbb
call
inc
jnp
xor
pop
fs
adc
pop
add
jb
pop
pushl
dec
cs
dec
popa
add
adc
mov
fsts
cmp
jl
sbbl
or
lock
cmp
inc
dec
cwtl
push
jle
pop
orb
imul
xor
cmp
je
out
in
adc
push
add
fsubs
fisubl
jo
add
or
in
pop
pop
in
and
cmpsl
cs
imul
lock
dec
or
dec
inc
rolb
inc
adc
test
cmc
in
dec
jne
lock
mov
mov
addl
push
or
add
add
or
mov
sub
mov
fmuls
add
nop
mov
mov
rclb
call
cmp
fsts
call
test
mov
adc
add
maskmovq
sbb
inc
mov
pop
sbb
outsl
or
adc
add
and
aaa
xchg
lds
mov
leave
in
sub
js
daa
inc
in
push
push
addw
icebp
test
or
adc
pop
push
and
add
or
cltd
jb
push
cmc
call
fcomps
push
add
pop
sbb
or
add
pop
ret
int
xor
movq
jp
loopne
push
adc
add
mov
cmp
or
sub
ret
inc
inc
cwtl
add
push
cmpl
mov
sub
mov
add
or
or
adc
mov
xor
leave
pop
inc
add
stc
xorb
mov
inc
add
fcmovb
sub
jbe
add
adc
sbb
pop
pushf
faddl
cmp
add
je
sub
mov
mov
stos
jg
xor
mov
cmp
popa
or
adc
add
lret
repnz
call
mov
pop
adc
push
hlt
pop
lock
sti
cmp
jmp
mov
cwtl
sub
jg
popa
push
add
dec
mov
add
inc
adc
mov
add
cmp
xor
jecxz
pop
stc
fisubrs
inc
pop
push
and
roll
mov
inc
or
inc
loope
adc
pop
jne
pop
pop
cmp
enter
mov
adc
stos
stc
call
loope
popa
mov
das
add
jb
sbb
or
or
push
mov
je
sbb
push
xor
add
push
mov
aaa
mov
sub
sbb
add
leave
sub
dec
clc
push
dec
jle
out
incl
push
nop
pop
sbb
rcrb
push
cmp
mov
xor
mov
add
leave
pop
sahf
add
pop
ficoml
and
inc
jg
js
add
inc
cld
call
add
dec
push
mov
inc
rolb
jmp
mov
outsb
xchg
dec
push
inc
or
test
xorl
out
and
add
pop
movw
xchg
rorb
pop
adc
xor
add
pop
xor
data16
bswap
jle
adc
dec
movl
mov
popf
ja
jae
xor
nopl
lds
adc
add
dec
mov
filds
int
and
push
sbb
mov
sub
sahf
push
xchg
clc
pop
fidivrl
gs
inc
fs
add
std
push
add
sub
add
call
sbb
test
out
enter
bound
jmp
je
add
sar
iret
cmp
inc
xor
xor
pop
cmpsb
sti
dec
adc
mov
inc
pusha
cwtl
nop
inc
jae
jecxz
and
pop
jo
mov
cmp
add
or
inc
jo
add
les
mov
pop
sub
out
rcrb
fs
xor
sub
bound
or
xor
push
push
sub
push
pop
xor
sbb
in
dec
add
push
cmp
scas
xor
test
rolb
nop
mov
add
mov
mov
add
sbb
add
aam
sbb
xchg
sbb
ret
cmpsl
jl
adc
add
imul
clc
jge
aas
pop
movb
cmp
jl
call
inc
idivl
mov
lock
cmp
aas
std
pop
sub
je
add
xchg
pop
ret
cmp
test
sbb
int
adc
push
inc
or
and
xchg
mov
and
ds
cmp
pop
sub
cld
mov
es
add
fimuls
into
or
add
cmc
lcall
mull
add
push
and
pop
loop
inc
arpl
add
std
mov
mov
add
jmp
jg
add
call
adc
je
cmp
mov
add
add
or
add
cmp
jne
and
pop
add
ja
mov
pushl
add
dec
add
or
sbbl
ds
mov
add
xchg
xchg
jmp
push
or
sub
test
add
or
jmp
jnp
fsubl
add
xor
push
inc
ljmp
sti
sbb
pushf
icebp
and
cmp
add
pop
rorb
and
loope
add
jae
jnp
push
and
mov
sbb
push
mov
cli
lret
mov
clc
inc
jb
pop
repz
add
mov
test
int3
call
cmp
xor
testl
mov
popf
add
adc
add
mov
rcr
jo
dec
cmp
mov
or
ret
sub
test
dec
jl
sbb
ficompl
jge
sub
pusha
mov
jl
add
inc
in
mov
sti
mov
pop
ljmp
cmp
add
cld
dec
jl
pop
xchg
jge
inc
pop
jle
add
icebp
fidivrl
aaa
rclb
pop
add
lea
add
movsb
mov
rolb
push
push
inc
or
adc
insb
aaa
add
push
dec
addl
adc
xchg
add
add
adc
lahf
mov
in
or
pminsw
test
fsubs
push
adc
jmp
clc
nop
pop
add
outsl
jmp
punpckldq
adc
mov
mov
or
fs
dec
push
js
mov
inc
je
sub
adc
xchg
pusha
daa
cmp
mov
add
in
pop
int3
pushf
sbb
or
jecxz
sbbb
ja
clc
movsb
add
jle
sbb
je
and
add
pusha
call
add
cwtl
cmp
and
inc
mov
adcb
cmp
jmp
or
add
xor
cli
test
cmp
icebp
mov
jmp
faddl
add
xchg
inc
pop
add
xrelease
dec
ja
sub
and
pop
mov
sahf
fucomp
out
mov
jmp
popa
adc
ja
add
push
push
clc
sti
shlb
dec
in
and
pushf
sub
add
pop
pop
mov
out
inc
test
popa
fwait
sti
test
gs
add
rcll
sbb
mov
jmp
fcoms
push
add
dec
divl
jno
add
adc
add
pop
and
jl
add
or
xchg
ds
lock
xor
sbb
pop
call
loopne
inc
sub
sbb
inc
pop
in
and
mov
add
mov
test
pop
add
jno
cmp
mov
jmp
jnp
cmp
add
test
add
add
adc
push
dec
pop
cmp
add
fwait
leave
mov
cld
and
lds
rol
movsl
ds
adc
pusha
jne
cwtl
dec
rorb
xchg
and
leave
mov
pop
shrl
push
push
inc
ja
add
jg
jg
cmp
dec
xorb
mov
add
xlat
pop
and
loopne
dec
push
pop
xchg
inc
and
sbb
and
mov
pop
or
jmp
adc
mov
lods
xchg
sub
pop
fimull
mov
sti
add
jge
call
cmp
stos
add
hlt
imul
daa
mov
jl
add
dec
and
sbb
shlb
or
xor
dec
add
pusha
fidivl
or
movsb
add
pop
push
les
lock
add
add
cs
adc
lods
popl
dec
pop
sbb
or
enter
pusha
or
or
add
inc
mov
leave
adc
jl
mov
add
dec
adc
jo
daa
aas
test
lds
out
mov
xor
sub
cmc
add
pop
and
or
and
or
out
loopne
popf
mov
or
add
jp
push
lcall
dec
dec
pop
push
or
add
adc
out
jmp
add
aad
push
or
add
dec
jmp
fwait
xorb
sub
adc
pop
add
push
lock
cltd
test
shl
adc
imul
jl
addb
adc
mov
cmp
push
push
in
loopne
orb
in
and
and
pop
adc
pop
xor
sub
and
jmp
push
adc
jg
mov
add
and
lret
je
add
ja
xor
outsb
sub
loop
cltd
add
repz
pop
and
jnp
sub
inc
aas
xor
sub
inc
cmp
sbb
push
add
roll
icebp
daa
jmp
or
shrb
inc
ret
adc
sbb
add
and
mov
or
push
jl
pop
lahf
pop
arpl
adc
push
in
add
add
jle
pop
ret
lock
subb
nop
sub
jmp
sub
sub
adc
inc
push
xor
jo
hlt
xor
or
pop
daa
mov
mov
mov
dec
aam
inc
jmp
hlt
adc
add
adc
add
notb
pop
add
std
pop
or
aas
lock
cmp
xor
sub
rcrl
or
pop
inc
and
pop
push
pop
dec
or
mov
inc
adc
add
dec
jne
pop
es
rcrb
enter
insb
loopne
adc
negl
or
inc
popa
pusha
and
xchg
mov
adc
mov
add
inc
cmpsb
pop
and
inc
jp
add
lcall
add
and
cltd
mov
add
call
add
add
in
lret
pusha
inc
mov
jno
add
sarb
add
cmp
rcrl
add
mov
dec
add
sub
scas
sub
push
push
std
imul
and
les
incl
add
inc
inc
hlt
dec
xchg
add
xor
adc
aaa
sbb
push
or
sbb
rcrb
rol
mov
add
adcl
xor
inc
mov
add
rorb
add
adc
push
or
jno
pop
xor
or
pop
mov
jo
je
add
sbb
leave
jne
stos
pop
lahf
cwtl
xchg
add
xor
jns
divl
fidivl
iret
add
mov
sbb
dec
add
pop
adcl
fdivl
not
loopne
shl
add
xlat
cmp
jb
or
jbe
fidivrs
add
inc
add
ret
or
push
add
jg
push
repz
cmp
jl
pop
mov
or
pop
ljmp
add
jge
fs
std
repnz
push
test
inc
adc
call
xchg
cli
xchg
xor
jp
nop
cmp
hlt
les
aam
lods
and
cld
pop
add
sbb
inc
pop
cmp
rorl
enter
pop
repz
or
push
jl
lock
push
add
add
popa
add
sub
sub
xchg
push
ja
push
call
jno
fs
cli
push
pusha
test
testl
mov
mov
pop
lock
sbb
push
dec
inc
or
xchg
add
xor
out
jge
lock
sbb
xchg
test
sbb
verw
mov
add
iret
dec
sbb
loopne
push
in
mov
scas
add
jmp
pop
decl
lods
jo
inc
add
movsb
adc
cmp
push
xchg
add
call
or
mov
in
adcb
adc
imul
mov
test
add
add
loope
repz
mov
or
add
mov
cmp
add
push
add
jge
add
jle
cs
add
decl
dec
dec
lock
inc
pop
xchg
andl
lea
gs
ret
rcrb
out
mov
dec
hlt
ret
inc
popf
es
add
push
add
and
mov
hlt
pusha
lock
daa
jne
fsubl
mov
push
adc
push
push
js
in
inc
pop
add
shrl
add
les
sbb
roll
mov
add
dec
add
push
push
mov
lret
int3
mov
pop
jl
pop
pop
adc
rcl
shl
in
push
sbb
ret
sbbb
ret
daa
xchg
add
adc
shl
add
sbb
call
pop
xor
cli
dec
test
add
jne
push
int3
push
stos
mov
xor
les
pop
dec
add
adc
xchg
jp
out
jae
or
js
pop
cmp
cmp
add
daa
or
push
add
repz
ret
inc
add
adc
into
jecxz
jmp
clc
or
xor
test
pop
add
jne
jo
jno
add
clc
mov
pop
pop
push
jg
and
cli
pop
xchg
or
push
and
xor
xchg
mov
sar
lods
add
push
shll
add
sbb
add
scas
or
xor
cwtl
cli
jo
add
js
mov
repz
cmp
add
add
mov
adc
in
mov
push
movb
fisubrs
add
lea
add
push
sub
jmp
rolb
rolb
or
inc
cmp
push
test
push
push
and
add
outsl
es
sbb
dec
sub
in
cltd
adc
movb
loop
mov
add
inc
add
adc
test
outsl
add
or
ret
dec
add
mov
mov
testl
adc
daa
dec
fsubp
das
add
push
pop
out
push
mov
pushf
inc
push
rolb
lods
outsl
outsb
sbb
into
push
inc
add
mov
pusha
mov
lea
outsl
push
push
cmp
and
iret
push
rclb
or
add
xor
sarl
enter
pop
cmp
dec
lea
add
pop
test
call
push
mov
cmpsl
add
sub
mov
mov
add
or
dec
push
sub
jne
lods
enter
cmp
es
lds
add
dec
push
add
jge
insb
xchg
sbb
outsl
add
mov
out
pop
sarb
shll
cltd
or
rcl
bound
mov
sub
push
dec
add
sub
cmp
push
sub
cmp
lock
ror
stos
subb
shrl
ret
mov
add
push
pop
lahf
les
push
jns
fs
add
cmc
test
add
pushf
xchg
push
sbb
dec
outsl
in
je
ja
rcrb
arpl
cld
ljmp
xor
push
clc
insb
int3
add
fisttps
add
push
decl
sub
scas
adcl
mov
mov
sub
jp
and
adc
sbb
adc
stos
push
pop
add
mov
mov
rcrb
add
icebp
inc
add
mov
fnstenv
fmull
push
pop
pop
mov
or
nop
xchg
jne
add
aad
cmpb
decb
or
jg
inc
add
cmp
jne
aam
mov
fsts
add
scas
iret
call
test
xor
dec
sarb
add
or
jmp
inc
test
pop
pop
mov
xchg
mov
adc
cmp
jne
jno
sub
mov
ljmp
shrl
iret
jl
insb
sub
sbb
pop
fmull
popl
pusha
insl
push
jbe
repnz
add
dec
xchg
mov
sub
push
adc
adc
cmp
push
pop
aaa
clc
popf
sbb
add
fcomps
ret
pmulhuw
add
push
lods
sarl
and
add
jmp
mov
mov
add
pop
addr16
ret
jo
add
pop
add
das
dec
adc
fsubs
jo
roll
xchg
mov
jmp
jo
test
add
jp
adc
add
mov
xchg
add
mov
sub
jo
add
jl
outsl
adc
jae
and
push
idivb
xchg
leave
add
xchg
xchg
push
clc
shlb
movq
add
pop
xor
jbe
lea
push
in
cld
cmp
add
shr
or
loopne
push
sbb
push
clts
int
aas
pop
outsb
sbb
add
stos
loop
adc
jp
push
pop
add
bound
add
rclb
lock
add
dec
or
aam
cld
sbb
enter
dec
movb
push
and
add
inc
dec
adc
movb
add
add
jb
lea
stc
ret
add
test
xchg
push
fnstsw
mov
jmp
adc
pushl
cs
push
xor
dec
out
dec
sbb
hlt
incb
mov
inc
test
adc
je
xchg
or
add
popa
aas
mov
orb
add
inc
rclb
cmp
es
cmpsl
int
call
xchg
loope
push
or
mov
pop
sub
cmp
inc
adc
pop
add
or
inc
daa
popf
jae
in
sub
adcb
ficoms
pop
push
and
add
add
and
lds
test
cmpsl
xor
test
mov
pop
out
in
push
popa
sbb
lods
repz
jb
movsb
push
mov
and
fwait
nop
sbb
push
shll
scas
or
add
dec
leave
xor
add
movsb
call
push
out
add
adc
or
adc
xchg
adc
add
and
pop
jg
packsswb
sub
dec
lods
add
cmp
pop
inc
add
push
in
jb
adc
stos
pop
daa
fisttpl
scas
ds
add
xchg
cld
les
addr16
inc
rolb
mov
mov
jb
add
and
cmp
aas
dec
and
cmp
lret
xchg
jg
ltr
pop
lahf
add
aaa
cmp
ja
adc
pop
lea
dec
imul
cld
sub
jnp
mov
jge
push
std
call
or
jbe
cmpsl
add
fs
push
aam
outsl
xor
mov
imul
add
cmp
test
push
pop
lea
add
jnp
test
lock
mov
adc
aam
mov
mov
sbbb
and
add
repz
lcall
dec
movsb
add
mov
mov
fs
adc
add
adc
pop
inc
fisttpll
push
shrb
cmp
cmpsb
pop
cmp
cmpb
inc
add
cs
add
in
adc
mov
sbb
and
ss
add
adc
call
add
add
and
xor
dec
and
mov
adc
into
inc
in
and
or
pop
add
adc
outsl
jle
jmp
add
sub
inc
add
clc
add
jbe
jp
mov
jmp
adc
inc
add
test
adc
push
xor
mov
cld
addb
xchg
pusha
arpl
cli
repz
jnp
adc
and
mov
mov
and
dec
subb
and
adc
adc
jo
sub
outsl
fbstp
es
dec
ja
add
xor
sbb
mov
jle
push
and
sub
js
pop
push
add
es
rorl
scas
push
jg
inc
mov
mov
and
xor
test
orb
add
add
addb
jg
xchg
add
mov
test
enter
mov
mov
mov
xor
sbb
push
add
jmp
mov
cmp
inc
movsl
xor
add
push
or
call
addl
mov
xor
cmpsb
mov
sbb
inc
andb
jns
add
dec
pusha
cwtl
sub
cmc
aas
cmp
add
inc
or
dec
jmp
cmpsl
add
and
ljmp
mov
dec
mov
je
ja
sbb
push
inc
shlb
xor
add
cs
xchg
mov
and
outsl
add
gs
scas
sbb
jle
pop
or
inc
jb
mov
adc
inc
pop
cmp
mov
add
imul
jne
xor
popa
in
add
push
dec
jge
dec
add
push
popa
add
inc
dec
int
out
repnz
add
or
push
nop
lds
sbb
push
int
jb
loope
dec
push
or
xor
leave
cltd
insl
clc
inc
enter
hlt
imul
pop
cmp
add
arpl
lahf
pop
push
jmp
adc
push
push
inc
cltd
fcoml
je
inc
cmpsb
add
roll
je
insb
xchg
fs
js
add
clc
xchg
xor
cld
pop
add
and
xchg
aam
ja
out
add
imul
push
xchg
and
sbb
add
adc
call
inc
or
push
mov
or
mov
nop
push
xchg
js
jo
push
pop
sbb
dec
and
inc
xchg
cmp
xor
mov
and
mov
mov
lock
jb
cmp
sbb
shrb
enter
mov
and
mov
xor
and
add
pop
jb
or
dec
sbb
add
xor
sub
or
lods
mov
jo
cld
and
xchg
add
mov
test
iret
sbb
fldl
in
add
ja
lods
les
dec
dec
stc
xchg
mov
dec
adc
icebp
sbb
ja
out
adc
and
enter
jb
jl
je
insb
jle
and
enter
inc
jb
cmp
sub
and
rclb
add
cld
sbb
add
lock
xchg
loopne
fcomps
cmp
test
sub
adc
mov
add
cmp
push
pop
mov
add
push
or
or
add
cld
mov
js
xchg
mov
and
pusha
pop
add
push
jb
cmp
cmp
xchg
and
sbb
test
add
push
jle
pop
lods
stc
enter
lds
pop
cmp
in
xor
push
les
mov
ret
imul
and
xchg
cmp
ljmp
rclb
sbb
cmc
sahf
nop
stos
sub
add
pop
jb
cmp
inc
inc
cmp
and
xchg
sub
and
sbb
jb
mov
sbb
loop
loop
sbb
out
mov
jle
or
and
add
loop
or
add
mov
jecxz
sbb
lods
or
jp
stc
sub
dec
or
and
and
sti
xor
push
or
push
add
add
nop
push
adc
aam
xor
sbb
movswl
inc
add
pop
sub
mov
aas
pop
mov
negb
pop
or
call
movsb
mov
mov
loopne
add
stc
dec
or
call
imul
adc
adc
sbb
add
call
ret
lahf
push
dec
jo
mov
mov
and
push
nop
pop
in
inc
push
push
jns
add
and
fsub
stc
push
add
jb
lock
or
sub
or
mov
add
nop
adc
dec
lods
paddd
in
sub
mov
xchg
push
mov
add
xor
jmp
pop
stos
mov
pop
jns
mov
add
jmp
insb
jp
stos
popf
sbb
mov
in
add
xchg
dec
inc
pop
sub
pop
outsl
loope
and
cmp
dec
jno
add
jmp
pop
adc
push
aas
add
add
out
sub
push
inc
fists
negl
das
popa
pop
popf
es
int
inc
movsb
adc
cmp
clc
mov
or
faddl
repnz
jb
cmp
and
testb
inc
cmc
cli
in
sti
jb
cmp
sbb
mov
movsb
and
and
xchg
jecxz
in
in
out
cmp
xchg
add
jae
mov
jnp
sbb
cltd
or
xor
add
shlb
or
aam
aad
add
xlat
xchg
fmul
ftst
fiaddl
jb
cmp
sbb
or
call
add
in
jb
cmp
sbb
lds
and
xchg
jno
add
in
jb
cmp
sbb
int
adc
iret
xchg
push
jecxz
mov
mov
mov
sbb
and
mov
jb
or
mov
and
mov
movsb
sbb
or
cmpsb
and
stos
jb
stos
cmp
add
lds
js
int3
inc
in
mov
xchg
or
push
shrl
inc
sub
rorl
push
push
push
xlat
in
jb
add
add
int3
add
fcom
xor
mov
pusha
pop
pop
sbb
insb
lods
jbe
idiv
add
fwait
pop
into
push
push
add
jb
xchg
fisttpll
or
add
jo
imul
jbe
cmp
or
or
pop
adc
loop
dec
sbb
iret
jo
pop
nop
sbb
pop
addr16
or
rorb
or
add
jne
andb
add
jb
xchg
test
push
aas
pop
mov
jmp
add
inc
dec
add
mov
int3
sbb
sbb
orw
fcompl
or
js
addb
ret
insb
pusha
and
fimuls
jae
push
xchg
add
icebp
or
in
add
jbe
jns
add
mov
jp
adc
lock
dec
add
add
outsb
rcrl
mov
or
or
jbe
scas
data16
outsl
mov
push
scas
pop
sbb
xchg
fs
nop
or
pop
dec
icebp
xchg
dec
mov
cld
jp
mov
ret
xor
fdivs
sbb
imul
in
int3
xchg
inc
add
rcr
adc
pop
bound
es
or
jp
dec
loopne,pt
push
outsb
fs
jb
sbb
add
mov
push
push
outsl
sahf
insb
test
xchg
lods
dec
jne
jae
je
mov
and
fmull
outsl
mov
sub
into
int3
mov
cmc
jae
push
add
mov
int
arpl
push
dec
nop
add
nop
imul
cmp
icebp
add
add
arpl
lret
mov
xchg
and
insl
je
adc
insb
in
adc
jle
enter
xchg
or
fdivl
mov
jae
inc
add
ret
popa
outsl
pop
xchg
fs
mov
pusha
push
insl
cmpb
jb
popa
arpl
jg
pop
adc
adc
dec
or
icebp
sub
mov
xchg
faddl
add
mov
and
in
inc
fsubl
cmp
popa
scas
and
sub
cmp
adc
cs
xor
imul
rclb
add
enter
and
add
call
repnz
lods
mov
cltd
inc
inc
insb
dec
scas
pusha
and
sbb
adc
aam
add
loopne
data16
rorb
add
inc
rolb
mov
xor
rorl
mov
add
cmovle
int3
aad
aaa
fisttps
jecxz
pop
mov
sub
mov
int
adc
jnp
sbb
fists
add
cmp
sub
gs
cmpl
or
xor
movsb
jae
add
andb
add
aas
cmp
xchg
xchg
add
push
push
adc
insl
loop
inc
aas
outsb
shl
and
mov
fs
ret
add
div
pop
scas
add
jl
add
adc
and
jo
rol
lret
mov
mov
add
mov
repnz
sub
and
out
xchg
stc
mov
cmp
orb
xor
dec
daa
inc
pop
sarl
mov
cli
mov
scas
lcall
and
adc
jno
add
ja
sub
mov
rolb
lds
jne
cmp
mov
pop
and
testl
fcmovu
incl
cwtl
pusha
mov
pop
cmp
jbe
call
repz
je
movzbl
decl
push
dec
cld
mov
dec
or
jge
pop
or
repz
cmpsl
jne
add
es
add
enter
push
mov
mov
ljmp
or
int
inc
jle
add
in
adc
fmuls
add
je
loop
int3
push
xlat
push
out
mov
sbb
test
mov
or
filds
dec
jbe
xlat
pop
mov
add
jns
outsl
cwtl
out
rclb
hlt
add
push
call
test
cmpb
enter
jmp
cmp
mov
sahf
das
sub
xchg
fwait
push
pop
jmp
pop
ret
cs
add
shlb
test
ja
repnz
dec
add
aad
add
cmpsl
fsub
mov
pop
ljmp
mov
mov
pop
nop
testl
jbe
push
jge
or
arpl
dec
and
sub
pusha
clc
insb
into
sub
add
ror
jae
xchg
lods
add
test
xor
rcrl
mov
mov
add
sub
add
or
repz
add
jae
sbb
add
sub
add
loope
ds
ds
ret
ljmp
stc
sbb
mov
bound
or
sbb
add
inc
dec
jne
fildl
add
or
cmp
jns
neg
inc
sti
add
mov
inc
dec
xor
or
rolb
div
movsb
sbb
loopne
cli
cmp
add
pop
mov
push
and
add
sub
and
jbe
add
sbb
mov
add
jmp
mov
add
dec
jne
insl
push
mov
add
sub
xor
push
lea
cld
add
xchg
shrb
pop
rcrb
add
in
push
pcmpeqb
ud0
shl
loopne
sbb
cmp
or
or
add
sub
jo
test
movsb
add
pop
dec
add
or
psrad
adc
mov
movsb
jo
daa
add
andl
push
insb
and
add
adc
add
jmp
sbb
fwait
add
cmp
dec
cmp
ficomps
fdivr
mov
sbb
sbbb
add
fstsw
sahf
add
jmp
insb
add
push
ffree
in
inc
shl
ficomps
jmp
out
xchg
push
jo
movsl
xor
cmp
or
call
sub
pop
outsl
add
cli
inc
loopne
test
push
mov
sbb
and
mov
mov
shrb
jnp
add
pop
in
xchg
adc
sbb
out
and
lock
add
and
mov
movb
or
cld
xor
gs
shll
inc
bound
aaa
pop
ds
mov
jb
lock
pop
in
aam
fdiv
push
add
push
test
or
sahf
jp
loopne
add
push
mov
mov
adc
ja
and
mov
imul
cli
mov
and
rorb
test
and
inc
push
jb
cli
int
add
mov
pop
xor
add
and
mov
dec
sbb
ret
add
js
xchg
addl
cmp
scas
and
mov
lods
sbb
hlt
movsb
leave
add
or
jge
ds
movb
xchg
add
adc
add
fcoms
sbb
sub
setne
add
jmp
call
mov
dec
or
xlat
das
push
add
add
and
hlt
mov
es
loop
add
mov
add
pop
rclb
add
xor
xchg
add
sub
and
lret
cmp
xchg
fstpt
sub
adc
add
adc
pop
xor
mov
dec
and
loope
adc
clc
add
push
rolb
cwtl
incb
add
aas
imul
cli
xor
mov
sub
and
cmp
add
lea
add
movsl
dec
add
inc
sub
pop
dec
push
add
adc
negl
rorb
dec
das
push
jge
xchg
cmpsl
push
add
lods
pop
insb
popf
js
jno
xor
adc
pop
adc
cld
xchg
add
out
outsl
imulb
push
sub
jmp
mov
test
clc
mov
dec
lret
push
lea
fbstp
add
cld
lods
rolb
lret
xchg
xchg
pop
add
test
ds
push
incl
imul
xchg
pushl
and
arpl
adc
jne
add
les
enter
ror
imul
push
sub
mov
test
lea
out
ds
adc
jle
pop
inc
dec
or
pop
nop
push
inc
dec
add
add
fnstsw
jmp
jmp
xor
add
sbb
call
int3
out
sti
les
cld
jne
add
and
sub
and
outsl
ds
sbbb
sets
inc
clc
add
iret
ret
outsl
push
shll
mov
popa
incb
jl
inc
or
xor
jne
pop
hlt
or
inc
addb
fnstenv
sub
dec
sbb
aad
das
adc
or
adc
jmp
mov
sub
xchg
stos
dec
lods
inc
add
stos
call
sbb
sbb
mov
sti
jl
fadds
mov
xor
adc
negb
lsl
mov
or
int3
add
jnp
popl
call
add
xchg
cs
popa
lcall
adc
xor
push
add
insb
xchg
dec
xchg
pop
push
lods
call
in
aaa
int3
jns
inc
in
jmp
push
pop
shll
aam
inc
sbb
daa
adc
sbb
pop
es
loopne
cmp
out
jge
mov
add
push
adc
add
add
xchg
data16
pop
cmp
stos
je
pop
arpl
mov
sbb
add
jns
inc
clc
not
mov
mov
imul
add
pushf
addb
addr16
mov
sub
pop
mov
adc
mov
and
imul
jg
mov
pop
push
sbb
adc
push
push
mov
push
in
pop
mov
inc
pusha
xor
add
rcrb
push
mov
cwtl
pop
rorl
push
outsb
std
andb
jg,pt
add
jmp
cltd
sbb
test
jo
mov
aad
dec
ret
sar
int3
jle
add
push
sbb
sub
fnstenv
mov
movsb
ret
cmp
push
xor
xchg
cmp
xchg
add
out
inc
cmpb
cmp
imul
cmp
add
mov
xor
mov
mov
add
push
pop
cmp
shrb
adc
js
lock
movsb
fs
and
sbb
xor
insb
add
xchg
push
gs
add
add
adc
mov
cmp
jmp
es
fiadds
inc
pop
jne
push
rorl
xor
mov
add
loope
push
and
inc
addl
sarb
imul
sub
mov
xchg
mov
lea
and
lret
jle
adc
leave
stos
add
js
and
jne
fwait
push
inc
dec
es
push
and
movsb
adc
inc
dec
pop
das
sti
mov
xchg
push
xor
push
fs
dec
enter
add
aam
sbb
jo
mov
xchg
add
xor
xchg
dec
jae,pt
loope
add
inc
ret
pushf
cmpb
call
sarl
push
add
andl
add
sub
xor
pop
lret
push
jo
ret
xor
test
test
outsl
add
push
ss
ja
add
pop
jne
jae
sbb
lret
gs
add
dec
mov
add
inc
xorb
movb
orb
out
adc
pop
repnz
pop
mov
and
aas
into
aam
test
adc
bound
std
pop
clc
add
fisubrs
adc
faddl
cltd
sub
mov
clc
mov
push
add
xor
lea
mov
add
test
pop
add
in
inc
push
les
je
pop
subb
push
sub
jo
xchg
mov
cwtl
mov
push
mov
sub
mov
mov
lret
add
clc
inc
call
add
les
add
aam
xchg
jno
cmp
clc
cmp
and
repnz
pop
pop
cmp
ljmp
push
sarb
jmp
je
sbb
dec
mov
pop
leave
arpl
nop
xor
adc
fs
jge
loope
sub
lret
mov
loope
sub
ljmp
xor
mov
fwait
xlat
ret
add
out
inc
adc
mov
loope
jl
xor
push
push
mov
rcl
jns
bnd
or
clc
shr
mulb
movsb
pop
xor
ret
add
and
xchg
add
inc
js
add
and
xor
pop
faddl
mov
fsub
cmpsb
add
dec
pop
das
dec
adc
mov
stos
mov
imul
and
mov
xchg
add
lahf
cld
add
repz
incb
add
jp
fcmovbe
mov
and
sub
cmp
scas
jmp
ljmp
mov
xchg
fcoml
sbbl
adc
push
nop
sub
add
mov
cwtl
lods
or
shll
pop
ret
jg
loope
shr
repnz
inc
imul
repnz
dec
bound
inc
mov
dec
je
cs
xchg
fistpll
xor
push
lea
or
out
enter
sbbb
in
push
loope
scas
push
xchg
call
add
fdivrs
test
int
adc
ret
sbbb
push
mov
pop
dec
fwait
pop
xchg
xor
dec
dec
scas
mov
adc
popf
jb
cmp
adc
lcall
pop
push
clc
inc
push
sti
pop
jbe
mov
rorl
dec
jge
rolb
add
xor
les
inc
or
pop
add
lds
sub
clc
add
or
pop
mov
pushf
sbb
jnp
aam
cwtl
pop
mov
add
sbb
sbb
pop
rorl
mov
js
add
scas
sbb
jbe
push
xor
and
mov
add
adc
clc
or
hlt
push
add
add
xchg
pop
or
mov
push
or
stos
dec
jne
test
sub
add
das
repnz
ds
frstor
mov
jb
out
aam
xchg
jg
fsubrl
cmp
or
xor
and
sbb
dec
loope
adc
cmp
dec
ljmp
mov
aas
or
mov
dec
add
sbb
mov
xorb
jge
xchg
or
lret
ja
lcall
or
mov
in
stos
sub
test
jge
or
pop
xchg
xchg
mov
mov
sub
loopne
xor
jb
add
ja
imul
rolb
add
add
in
jmp
cmpsl
pop
cmp
or
adc
fcoms
decb
dec
add
es
je
add
fisttps
mov
lret
cmp
in
push
pop
and
shlb
add
pushf
push
add
and
sbb
jmp
xchg
icebp
popa
sub
icebp
cwtl
add
and
pop
addr16
xchg
cld
enter
adc
xor
jbe
ret
adc
push
inc
dec
add
call
push
out
shll
sub
add
inc
dec
inc
mov
and
mov
add
sub
lcall
das
and
pslld
add
or
push
add
inc
jmp
mov
inc
cmpsl
mov
jo
icebp
aas
in
jo
in
add
mov
jmp
stc
push
popl
add
ret
movsb
punpckldq
jbe
cmp
adc
imul
cmp
jmp
add
leave
and
inc
sub
shrd
mov
ja
add
add
cld
test
sti
pop
fstpt
aaa
pop
jmp
stc
jle
or
add
add
mov
rclb
faddl
dec
ja
jns
or
test
jmp
xor
xchg
sub
mov
mov
fs
inc
push
add
leave
imul
fisubrs
add
iret
cmp
test
int
add
aas
jg
push
inc
fnsave
add
add
adc
add
dec
orl
jns
cmpb
jbe
mov
ja
add
or
test
shll
mov
add
in
mov
mov
push
mov
xchg
inc
iret
and
movsl
mov
cli
xor
push
jecxz
pop
data16
call
mov
sti
fiadds
lock
or
daa
loope
and
jmp
push
push
mov
aas
ret
mov
sub
mov
inc
add
clc
jne
das
sbb
stos
mov
push
inc
icebp
in
test
leave
fisubrs
push
dec
dec
xlat
cli
pop
pop
inc
mov
addl
sarl
inc
xchg
mov
sub
jge
es
pop
filds
add
js
jmp
aam
adc
and
cmp
jl
rcll
add
stos
and
or
test
push
push
inc
add
jge
xchg
test
sub
xchg
push
xor
add
xor
out
or
decl
xor
in
or
add
sub
mov
in
in
loopne
xchg
mov
add
mov
test
xor
adc
ret
inc
in
call
out
sbb
cmp
clc
mov
pop
aam
cmpsb
inc
xchg
jbe
add
ret
cmp
cli
xchg
jl
add
hlt
mov
addl
jmp
add
or
adc
imul
loope
jge
and
push
insb
cs
jle
sub
add
daa
rorb
add
add
call
das
dec
in
add
das
nop
add
sbb
pop
popl
mov
mov
in
mov
out
sub
cwtl
outsl
sub
adc
add
ja
xor
mov
jle
mov
sbb
and
jl
or
add
dec
movsl
cld
pusha
iret
jmp
mov
or
push
add
scas
sbb
dec
mov
lods
or
js
mov
add
jge
xor
stos
add
lods
jg
dec
dec
aam
cmp
cmp
stc
std
jl
sbb
xor
dec
stos
cmpb
add
sbb
loop
cmp
pop
add
sbb
and
lea
add
clc
or
adc
stos
or
pop
inc
stc
adc
add
xchg
sbb
imul
int3
push
push
add
mov
xchg
mov
add
call
inc
mov
in
add
pop
gs
add
mov
cmpl
add
mov
and
add
or
fildl
div
mov
inc
sbb
dec
add
mov
cli
ret
shr
add
ss
call
lods
add
jecxz
jnp
dec
in
inc
sub
das
add
jns
test
repz
xor
or
sbb
repnz
add
add
lea
push
mov
add
je
push
jbe
int3
and
add
loopne
std
nop
add
ud2
pop
add
loop
push
ret
hlt
leave
cmpsb
add
add
and
inc
add
and
jle
add
push
sub
add
push
jg
xor
inc
cmp
and
cmp
hlt
insb
add
xor
mov
xlat
jne
add
loopne
jmp
test
test
in
push
call
lcall
add
lds
stos
rcll
add
cmp
or
fs
or
push
sahf
subb
add
push
jo
fldcw
test
nop
imull
add
arpl
sar
inc
in
es
fdivrs
in
test
and
xchg
or
iret
adc
fldt
fdiv
imul
pop
popf
mov
je
fidivl
lcall
jne
add
or
add
xorb
inc
add
out
dec
shr
adc
pop
in
add
mov
sahf
jmp
add
stos
mov
add
or
jns
xor
push
iret
mov
mov
rorb
call
or
aas
addb
jg
sbb
lods
jp
or
sarb
add
jmp
push
mov
add
dec
sahf
dec
add
je
icebp
add
push
mov
roll
fmull
add
ret
dec
dec
out
leave
sbb
or
inc
adc
dec
pop
add
orb
je
daa
jns
xor
test
or
sti
pmullw
pop
mov
inc
sub
fidivl
jae
dec
push
add
nop
and
int3
push
in
xor
insl
or
add
sub
pop
add
sahf
lods
nop
clc
push
or
push
pusha
fwait
filds
or
pop
cmp
cs
pop
and
jne
mov
jo
cmp
in
enter
cmpsl
and
inc
and
lret
inc
pop
ljmp
or
enter
call
adc
push
pop
dec
jmp
rcr
nop
push
scas
add
mov
sbb
pop
js
mov
push
or
flds
movsl
cli
inc
fnsetpm(287
and
pop
xchg
add
addb
xlat
or
add
xchg
gs
mov
adc
cmp
pop
or
shld
cmp
je
add
and
cmp
jne
or
push
call
add
inc
je
clc
pop
xor
add
push
push
add
xor
loopne
orb
jmp
fstpt
sub
push
cmp
jg
ret
xchg
mov
inc
xchg
aad
enter
add
fistpll
pop
sub
cmp
jae
fimull
mov
ret
jmp
ljmp
movsb
mov
or
cmp
imul
nop
add
ror
jb
inc
sbb
add
and
pop
shlb
movl
dec
push
xchg
jo
xchg
mov
pop
lcall
push
mov
jl
mov
faddl
mov
pop
sub
cmpsl
mov
aam
sbb
sub
fldl
push
pop
fwait
lds
enter
sbb
call
cwtl
loop
fldl
or
inc
jle
push
add
cmpsb
mov
add
and
add
sub
mov
or
inc
add
xchg
dec
pop
clc
hlt
add
or
pop
data16
adc
movl
or
incb
stos
add
call
add
out
ss
sahf
adc
jns
pusha
ljmp
roll
call
imul
cmpsb
dec
fildl
or
fdivs
dec
or
fstpl
fwait
lret
cmpsl
add
inc
pop
pop
bswap
inc
xor
and
add
push
inc
data16
dec
or
iret
pop
jne
add
xchg
jno
add
mov
add
roll
pop
cs
add
int3
hlt
scas
inc
mov
lock
jne
cwtl
push
or
call
jge
jecxz
dec
push
add
jg
dec
add
sbb
jns
mov
iret
daa
cld
clc
out
jle
pop
mov
pushl
dec
insb
xor
xor
and
dec
add
in
and
adc
add
xor
testl
rol
mov
add
je
int
test
cli
mov
aam
cld
cmp
std
pop
nop
pop
call
data16
jg
cmp
mov
xor
lock
incb
jb
pop
pop
push
call
sub
jb
jle
jnp
add
cld
in
cmp
incb
nop
jle
push
pushf
mov
dec
pop
push
incb
jne
sub
in
sbb
aas
cltd
jnp
imul
setne
addr16
jecxz
sub
mov
stc
sbb
out
inc
ret
or
test
std
mov
clc
xchg
add
push
jno
xor
add
push
das
jl
in
call
in
xchg
enter
xchg
mov
std
nop
loopne
test
bnd
and
xorb
mov
add
fs
or
push
cmp
push
sub
pop
mov
inc
mov
dec
scas
sub
cmp
add
jl,pt
sbb
dec
shl
inc
xor
in
add
or
in
ret
add
dec
lock
xchg
nop
dec
pop
iret
add
cmpsl
out
dec
sub
insl
cmpl
pcmpgtb
xor
scas
mov
xchg
testb
dec
add
push
in
or
dec
insb
add
pop
popf
or
add
int
rolb
mov
jbe
add
pop
outsb
int3
jp
mov
mov
cwtl
add
fsts
inc
jmp
xchg
shrl
lds
mov
add
push
hlt
mov
sub
mov
dec
cmp
push
or
and
sub
add
jne
addr16
cltd
mov
xchg
inc
sbb
cwtl
orb
xchg
mov
and
decl
dec
add
push
into
or
sbb
sti
add
and
push
hlt
mov
add
lea
cmp
int3
jle
sbb
pop
repnz
insb
call
ret
repz
sahf
hlt
or
add
adc
adc
dec
mov
cltd
cld
add
sar
or
pop
sbb
dec
sub
lea
daa
lret
mov
mov
sbb
scas
push
popa
movsl
add
push
in
adc
lcall
fcoml
push
add
jg
fisttpll
roll
call
movsl
xor
pusha
mov
jle
popa
adc
stc
mov
pop
xchg
dec
xor
mov
adc
mov
or
mov
or
cmp
sti
je
mov
mov
mov
inc
hlt
js
push
cmpb
in
sbb
jne
adc
cs
dec
add
lea
mov
test
bnd
add
pop
ret
lods
ja
add
xor
test
out
sbb
sbb
fwait
ds
xchg
add
jecxz
lcall
push
push
rdpmc
leave
mov
mov
add
imulb
add
enterw
in
add
xor
add
test
push
in
mov
pop
lds
cmp
enter
or
imul
mov
fwait
mov
xchg
mov
cld
cmpb
int3
testb
loopne
orl
adc
and
fs
jnp
pop
sbb
pop
ret
push
sub
pop
cmpl
jne
mov
add
cmp
mov
mov
testl
adc
lods
add
clc
xor
mov
pop
xchg
or
push
xor
test
call
jmp
stc
jp
push
in
add
test
repz
add
test
dec
jg
pmulhw
mov
jmp
inc
pusha
adc
jbe
pop
and
xor
push
jne
ret
dec
xor
pusha
das
inc
inc
pop
or
dec
inc
add
cmc
push
test
insb
clc
jns
ret
xchg
dec
fiaddl
aam
or
in
faddl
scas
mov
and
cltd
inc
mov
xchg
stos
xor
cmp
mov
test
and
adc
popa
xchg
cmp
orb
and
orb
add
loope
in
call
add
pop
js
add
mov
fiaddl
adc
lahf
mov
add
xchg
stos
cmp
add
icebp
lahf
cmp
push
or
test
or
adcb
dec
add
dec
fidivs
pop
push
cmp
xchg
add
inc
jle
and
xor
add
push
mov
dec
add
and
or
or
or
pusha
test
pop
jmp
test
add
push
dec
add
mov
lock
adc
lods
shrb
and
mov
rorb
ret
add
roll
jns
adc
jmp
cwtl
push
sub
hlt
in
add
xchg
add
mov
mov
xor
int
inc
sub
and
nop
inc
add
push
dec
xchg
es
add
lds
daa
pop
adc
mov
xchg
inc
fsubr
or
orl
and
jmp
pop
lea
in
push
push
hlt
mov
add
mov
sbb
jno
push
push
gs
pop
add
nop
adc
je
ss
add
adc
jmp
movsl
divb
push
out
imul
call
dec
sarb
push
daa
loop
or
or
sahf
rorb
adc
inc
popa
xlat
loope
dec
add
jmp
aam
fmuls
mov
stos
shr
movsb
daa
add
push
rolb
je
loopne
adc
stos
pop
rorb
push
por
jg
mov
ret
mov
jge
lcall
and
jns
add
test
pop
mov
adc
mov
add
or
jne
and
jmp
pusha
nop
ja
aaa
add
int3
popa
imul
sbb
xchg
jo
es
push
dec
push
mov
loope
fdivl
sub
pop
es
add
in
jg
pop
and
push
jl
mov
xor
mov
testl
add
jl
out
notb
mov
adc
jge
inc
xchg
in
add
jns
pop
mov
push
pop
and
dec
shlb
adc
icebp
mov
inc
hlt
test
push
dec
cltd
xchg
addl
inc
add
dec
inc
xchg
ljmp
adc
mov
movups
gs
fs
mov
insb
xchg
add
xchg
mov
jmp
dec
movsb
inc
push
les
jo
adc
sub
jmp
lock
out
add
loop
insl
fs
mov
push
testb
jno
cwtl
shl
test
xchg
movswl
dec
imul
imul
fmul
nop
inc
je
ja
and
pmullw
push
retw
leave
or
add
add
mov
mov
and
inc
aam
push
push
dec
cld
mov
scas
sbb
cld
jmp
aam
sub
lods
lea
cli
clc
aaa
aas
add
and
cmpsb
mov
fcoms
cwtl
adc
dec
add
das
push
out
cmp
push
push
add
or
pop
add
or
mov
add
gs
adc
push
push
mov
add
jmp
in
mov
outsb
loop
dec
icebp
add
xor
or
add
ljmp
aaa
xchg
add
pop
pop
mov
mov
stc
dec
add
pcmpeqb
mov
or
aas
mov
popf
mov
leave
ja
add
add
call
add
sbb
imul
pop
jno
cmp
jle
mov
push
pop
in
rcrb
add
adcb
inc
add
xor
sub
jae
jbe
jnp
add
into
xchg
pop
jbe
mov
test
ret
dec
xor
mov
sub
sbb
in
xor
loope
mov
rcrl
mov
in
into
add
jnp
popa
fisubrs
mov
imul
test
cld
pop
movl
sub
or
jae
or
and
bound
push
ja
loop
je
popf
inc
and
and
test
push
mov
call
adc
dec
lds
jl
decb
loopne
pop
cmp
cwtl
out
pop
sub
gs
sub
lcall
xorl
add
xor
cmp
adcb
je
data16
add
push
cwtl
xchg
fnstsw
push
add
sar
int3
xchg
filds
ret
in
or
std
add
roll
lea
pop
ret
add
mov
sub
cmp
jl
cs
xor
xor
in
fadds
pop
mov
shll
mov
jne
sub
xchg
cmpsl
or
dec
mov
mov
add
sti
push
jg
cli
pop
and
rorb
sub
out
cmp
jne
inc
add
arpl
call
test
cltd
xor
ret
add
sbb
mov
stc
imul
neg
cmp
addl
cld
or
push
adc
jns
pop
xor
push
adc
dec
loop
nop
xor
ret
xchg
xchg
inc
dec
add
or
and
add
push
in
stos
into
mulb
add
mov
push
add
add
loopne
cmp
outsl
dec
inc
leave
pop
iret
test
notb
stos
cmc
jae
sub
sbb
jle
add
test
cmpsl
push
mov
in
add
cmp
push
pop
in
push
js
rclb
adc
add
sbb
adc
xor
and
or
dec
adc
add
sub
push
push
daa
pop
cmpsb
push
loopne
cwtl
xor
addl
mov
nop
das
jnp
mov
inc
sbb
fs
add
cmp
inc
push
jmp
lock
push
mov
inc
testb
fnsave
pop
and
jmp
mov
andl
jmp
adc
hlt
add
adc
adc
jmp
or
sbb
loop
nop
pop
hlt
enter
nop
inc
das
call
inc
sbb
lock
aam
push
subb
add
clc
ret
loopne
andl
out
xor
es
add
sub
push
in
push
and
push
add
jns
mov
orl
ja
adc
jl
sub
dec
adc
push
xchg
loop
push
and
into
nop
or
fs
inc
mov
pushf
mov
xchg
cmp
and
fwait
sahf
scas
inc
push
mov
sbb
ds
jmp
or
loop
pop
sbbb
and
dec
mov
in
cmp
push
nop
orl
adc
add
xchg
popa
jo
sub
sbb
jnp
mov
cwtl
lock
xchg
cmovp
jbe
mov
cmpsl
add
pop
mull
sub
enter
xchg
cmp
imul
sbb
sub
push
mov
andb
xchg
ss
data16
jp
es
dec
adc
je
add
sub
ret
cmpb
xor
or
push
mov
add
cwtl
shll
mov
popf
sub
push
pop
outsl
rclb
dec
add
insb
call
inc
inc
imull
add
mov
nop
clc
push
xor
sub
mov
jnp
add
and
popf
pop
mov
or
xor
pop
xchg
add
fldl
pop
loopne
jl
add
adc
add
or
test
cwtl
lea
daa
pop
icebp
mov
mov
int3
jl
test
subl
pop
into
mov
push
cmp
lods
lods
out
xchg
stc
pop
cltd
cmp
jl
in
jae
pop
aad
enter
clc
test
lock
stos
cmp
sarb
int
mov
push
inc
sbb
push
nop
cmp
aam
test
or
scas
add
push
jmp
fstl
mov
jb
or
lods
add
fwait
jmp
movsb
in
fs
jg
xchg
xchg
add
fisubrl
add
fsubl
add
mov
add
test
push
or
and
repnz
daa
lret
xchg
add
push
sub
dec
pop
cltd
cwtl
add
mov
dec
sqrtps
test
mov
mov
jle
popf
or
arpl
lods
mov
mov
or
jae
add
push
insl
and
add
dec
daa
xor
pop
cli
mov
mov
cld
mov
cmp
leave
andb
pop
cmp
mov
mov
jge
cmp
nop
outsb
mov
jno
add
in
add
and
inc
mov
mov
jae
or
mov
add
sahf
add
dec
call
pop
sbb
lcall
or
enter
push
mov
add
pop
cmp
add
scas
daa
popa
les
and
or
pop
push
cwtl
mov
int3
sarb
ds
push
push
jno
dec
rorb
and
add
test
pop
js
in
addl
jae
jne
pop
pushf
in
mov
mov
mov
pop
add
adc
xor
cmpsb
pop
mov
or
xor
add
popf
sub
jmp
or
add
mov
or
inc
mov
jp
dec
xor
sarb
dec
pop
mov
add
inc
sub
dec
inc
and
pop
adc
jnp
mov
pop
imul
mov
pop
pop
call
cmp
sub
push
xchg
aam
mov
pop
or
xlat
lcall
cmp
into
inc
add
cmp
xor
or
nop
pop
pusha
les
jp
mov
dec
cmp
add
pushf
mov
add
idivl
aas
rcrb
ret
ret
sub
mov
xor
pop
add
ret
pop
add
mov
push
and
lret
pusha
iret
roll
pop
add
add
and
add
pop
xor
pop
pop
jge
inc
cmpsl
sbb
and
add
xchg
push
and
dec
andl
dec
inc
aaa
jl
mov
jle
jmp
sub
lods
ljmp
jae
push
adc
mov
and
pop
dec
sahf
add
aam
imul
rolb
pop
cld
jmp
pop
dec
pop
lea
jae
sbb
xor
add
inc
add
adc
ret
add
jmp
pop
test
mov
loope
pusha
fwait
push
jp
add
inc
pushf
mov
and
in
add
mov
ret
dec
out
aam
pop
add
std
es
xor
lret
sub
sbb
mov
xchg
add
or
add
add
or
jmp
sub
repz
test
sti
notb
int3
fwait
mov
rolb
imul
adc
or
inc
mov
sbb
aas
out
add
std
cmp
nop
les
add
mov
dec
add
sub
mov
ret
popf
xor
rol
rolb
cli
repz
push
cld
jns
mov
pop
ret
mov
dec
jmp
daa
add
and
call
sub
lahf
popa
ret
add
fs
in
int3
cld
pop
add
inc
add
pop
xchg
scas
cwtl
push
push
pusha
bound
and
hlt
out
add
sub
or
mov
add
dec
xchg
adc
mov
add
mov
add
add
mov
add
dec
outsl
push
jae
fiadds
xchg
mov
pop
aam
xchg
loop
rolb
xor
or
addb
dec
sub
adc
cmpsl
inc
xor
loopne
add
out
mov
stos
hlt
cwtl
pop
add
jp
es
push
sbb
mov
test
out
data16
inc
dec
pop
mov
lock
mov
pop
and
push
add
push
loopne
icebp
jmp
std
add
and
add
and
pop
add
cmp
mov
lods
add
mov
rolb
dec
out
push
inc
add
in
dec
subl
add
xchg
inc
scas
leave
inc
add
jge
outsb
add
lret
push
lahf
jmp
mov
ret
add
leave
aas
mov
int3
pop
push
jecxz,pn
mov
add
jle
pop
pop
lret
pop
leave
pop
addr16
and
into
jmp
cmpb
push
sbb
add
mov
stos
daa
or
add
jne
lock
fucomi
adc
sbb
ror
cld
sti
add
add
cmp
sub
inc
pop
adc
add
notb
divl
mov
sub
mov
or
les
orb
xchg
and
sbb
xlat
adc
pop
inc
and
nop
add
sar
lret
rorb
adc
ljmp
sub
sti
nop
mov
loope
sub
adc
lea
add
push
jp
js
out
test
out
inc
into
scas
mov
ret
jecxz
lock
add
xchg
sub
mov
popl
push
jl
push
or
xor
xchg
add
mov
movsb
ja
fildl
push
fldl
in
push
add
lock
jge
and
add
push
loopne
pop
and
das
add
jle
xchg
xor
push
shll
add
adc
cltd
js
xchg
filds
add
jge
mov
int3
stos
ret
xor
push
mov
mov
and
sbb
add
inc
das
mov
dec
cmp
add
jle
iret
mov
mov
add
push
mov
cmp
lahf
add
and
aaa
add
inc
sub
push
jmp
das
les
les
mov
ret
int
nop
push
add
pop
or
or
or
push
lods
nop
shrl
jae
sarl
add
xchg
retw
mov
cmp
lods
add
lret
enter
push
das
lock
or
jg
adc
ja
add
jae
push
sbb
add
inc
je
xchg
mov
jge
pusha
arpl
pop
xchg
or
mov
in
mov
loopne
xchg
mov
mov
sub
xchg
jle,pn
mov
push
cwtl
incb
mov
push
sarb
les
leave
enter
cli
ja
add
or
fs
add
add
cld
add
lret
jl
cmp
adc
pushf
arpl
inc
out
das
add
add
nop
or
jle
pop
rolb
add
dec
xchg
xchg
xor
lret
cmpsl
loope
mov
out
mov
mov
push
xchg
leave
sbb
cld
incl
lock
ljmp
mov
arpl
add
or
pop
xor
and
mov
inc
fdivs
sub
cmp
dec
push
aam
sbb
xchg
xchg
out
add
lea
das
dec
cmpb
lock
pop
adc
jbe
jb
pop
add
xor
xor
add
xchg
pushf
pop
sub
add
fsts
push
test
and
sahf
mov
cmpb
es
push
in
faddl
enter
and
stos
mov
add
pusha
orb
add
mov
or
test
mov
xlat
nop
insb
inc
xchg
mov
or
ucomiss
jb
movsb
faddl
and
mov
add
adc
inc
insb
incl
xchg
add
out
pop
mov
int3
sbb
fsubs
dec
and
fmull
push
push
or
inc
popl
add
adc
and
pop
in
and
aas
mov
or
add
mov
adcb
push
push
into
mov
add
adc
adc
push
shl
mov
rorl
jo
clc
inc
mov
push
mov
negb
adc
add
roll
fcomps
cmpsb
nop
das
jae
fisttps
adc
push
push
pop
imul
add
in
sbb
xor
jg
dec
fbld
loopne
inc
or
popf
jno
dec
and
icebp
lods
xor
sbb
in
dec
jp
out
cli
stos
nop
out
xor
popa
sarb
testb
pusha
add
jne
mov
cwtl
xchg
jmp
mov
pop
dec
mov
in
jge
adc
loope
and
add
push
push
nop
sub
outsl
es
cmpb
or
pop
inc
clc
and
add
add
push
sarb
cmp
lock
mov
pop
pop
aas
push
and
push
popa
xchg
je
inc
mov
cmp
imul
ret
push
add
push
adc
sbb
shl
pop
imul
lock
or
dec
adc
bound
xadd
sbb
mov
mov
inc
add
jnp
push
pop
js
push
mov
add
add
loopne
lods
add
pop
mov
sti
add
inc
dec
jge
rorb
or
and
gs
add
in
xchg
repz
mov
sbbb
xchg
shl
movl
das
add
add
mov
and
add
push
xor
mov
push
dec
hlt
jl
dec
movsl
mov
aad
jle
or
xchg
imulb
pop
pop
inc
dec
jne
rorb
leave
jge
cmp
push
sub
inc
cs
jl
add
rclb
cmp
or
sub
push
inc
jmp
dec
or
nop
pop
mov
ret
push
inc
sbb
shll
jne
add
push
sti
push
pop
mov
lret
or
pop
call
rol
sub
lahf
js
add
adc
cmp
add
mov
adc
mov
dec
add
dec
add
mov
roll
cmp
push
pop
jge
mov
dec
nop
ret
mov
adc
in
clc
pop
pop
jg
add
and
or
test
jg
add
jae
hlt
jne,pn
addr16
mov
pop
lcall
jg
iret
rclb
lret
repnz
cmp
or
push
add
xchg
mov
filds
mov
mov
and
add
std
inc
out
add
push
mov
inc
rcr
pusha
les
add
cmpsb
push
hlt
pop
pusha
loope
int
call
cmp
cltd
add
js
aas
rclb
add
insl
pop
cmpsl
add
mov
adc
jmp
pushf
push
dec
rorl
add
and
inc
cltd
jmp
popa
lods
enter
pop
pop
push
push
sbb
and
mov
add
cmp
lret
aas
cld
lock
mov
scas
repz
cwtl
add
je
jns
push
fcompl
hlt
add
or
or
enter
js
orb
outsl
inc
lahf
rol
xchg
or
je
mov
push
popf
in
add
sub
sbb
and
adc
jno
add
aad
insl
pop
ljmp
or
cli
pop
jbe
push
inc
cmpsl
call
shr
adc
push
lock
add
sub
adc
add
enter
xor
clc
add
adc
xlat
xchg
lcall
add
xchg
add
jae
push
and
push
in
repnz
jl
cmpsb
or
sbb
jns
enter
add
imul
fistps
jmp
mov
jecxz
add
adc
iret
les
ret
rorb
add
in
add
add
xlat
jb
add
sub
add
popf
xor
push
and
aaa
push
add
fadds
add
inc
mov
clc
and
fwait
push
incb
xorb
lret
jne
ljmp
add
cmp
sub
xchg
icebp
add
cmpsl
out
or
add
sbb
push
in
rcrb
nop
xor
push
add
enter
dec
adc
call
add
add
adc
dec
or
cld
or
sub
sbb
adc
rorl
lahf
push
pop
mov
mov
sub
rep
jp
add
adc
lea
int3
and
dec
pop
add
push
dec
or
and
jb
mov
xchg
test
je
xchg
ret
mov
lcall
add
push
lea
pop
inc
sub
scas
jne
rolb
stos
faddl
add
imul
push
jae
scas
add
mov
cmp
mov
pop
add
ret
dec
mov
dec
imull
lret
add
sbb
jl
add
pop
adc
sub
mov
movsb
imul
adc
dec
jne
stc
push
add
adc
mov
add
scas
xchg
in
pop
add
xchg
subb
xor
leave
mov
mov
dec
and
pop
cmp
repz
jg
add
fwait
mov
sub
int3
mov
shrb
and
sbbb
fwait
jmp
bndstx
mov
inc
xchg
push
adcb
and
inc
push
orl
push
outsb
sbb
test
test
sbb
inc
fsubl
add
nop
pusha
push
mov
add
mov
mov
inc
and
enter
add
mov
sub
adc
add
insl
mov
sbb
pop
add
adc
mov
sbb
cmpb
and
clc
push
push
hlt
cmpsb
or
inc
test
lods
lds
pop
movsb
das
in
xlat
cmpsb
ds
bswap
sbb
add
inc
and
scas
jno
pop
pop
shlb
push
push
shr
push
hlt
mov
add
scas
int3
ds
jne
or
hlt
mov
imulw
add
sbb
fisubrl
pop
dec
inc
mov
fstpl
jge
push
xchg
dec
lods
hlt
add
push
and
fs
and
pop
sbb
add
mov
mov
push
inc
or
jo
dec
adc
push
scas
sub
add
popf
insb
dec
lods
adc
mov
xor
mov
lock
in
ljmp
fsubs
jne
add
andb
flds
inc
add
daa
je
sbb
push
push
ja
jns
xchg
or
jmp
je
psubusw
dec
inc
lock
sub
xchg
jmp
jbe
das
add
dec
les
lock
movb
stos
mov
mov
ss
pop
mov
nop
and
mov
mov
mov
xchg
roll
imul
daa
aam
dec
call
popl
cmpl
int
and
add
xlat
fldenv
add
mov
push
mov
jae
ret
add
in
fnstenv
call
and
fimull
dec
test
push
add
aaa
call
add
push
pop
push
scas
test
sub
test
jle
add
scas
adc
adc
ljmp
mov
das
loop
sbb
mov
xor
xor
jo
xchg
stos
je
nop
adc
cmpsb
das
add
mov
rolb
sbb
add
negb
xchg
add
and
push
push
mov
in
mov
adc
adc
test
cmpsl
jmp
xchg
push
call
out
jnp
and
xor
mov
cmp
mov
inc
adc
add
add
dec
imul
adc
push
popa
scas
inc
add
js
shl
adcb
jp
or
cmpsb
xchg
ljmp
int
cmp
mov
call
jp
mov
push
repz
add
adc
fidivs
scas
addb
loop
sarb
fstpt
pop
ja
adc
mov
push
and
add
sbb
cmp
xor
fs
leave
rclb
ja
jno
arpl
repnz
sub
mov
inc
fdivs
jl
pop
int3
jecxz
cmp
test
xor
mov
add
add
add
cltd
sbb
mov
inc
mov
mov
pop
into
sbb
jl
jbe
and
sub
lds
mov
add
ja
sub
pop
in
add
scas
push
je
shl
push
test
or
and
mov
push
nop
xlat
xchg
shrl
inc
add
mov
xchg
and
pop
rcl
enter
movl
scas
and
add
push
jg
adc
adc
jge
add
repnz
and
cmp
mov
cs
xchg
scas
add
sbb
xlat
jg
lret
test
or
in
mov
cmp
and
lahf
push
rorb
inc
push
mov
les
cmp
jo
pop
adc
out
adc
xorb
mov
dec
add
out
rorb
aad
cli
dec
imul
xchg
mov
pmaxsw
add
inc
ja
jg
add
jmp
adc
add
ds
add
rcll
add
rorb
aam
pop
orl
out
mov
lret
sub
cmp
lldt
jmp
push
in
adc
shlb
inc
mov
sbb
dec
sbb
cmpl
jmp
xchg
loope
ja
add
push
jae
jge
dec
dec
lds
mov
pop
add
les
rclb
popa
incl
icebp
add
jg
loopne
add
jno
adc
test
sub
subl
es
into
leave
jbe
add
rcrb
in
mov
sbb
xchg
je
punpcklbw
shll
addl
sub
add
sarl
mov
sbb
xlat
lds
jne
xor
test
lods
cmc
stos
pop
incb
fisubs
lock
aas
fwait
hlt
mov
fcomip
cmp
ja
push
adcl
add
mov
out
dec
mov
repnz
jne
stos
pop
aas
andb
out
stos
inc
fbld
cld
jg
xchg
add
and
add
in
dec
xchg
add
nop
jge
adc
inc
sbb
stos
sub
add
pop
rcrl
add
movsl
inc
cltd
add
les
clc
add
mov
xchg
adc
out
pusha
pop
insb
bound
push
sub
in
cld
mov
dec
fiaddl
cmpsl
fs
adc
pop
and
add
inc
in
int3
push
fdivr
dec
jne
paddq
cld
and
les
mov
mov
push
dec
cltd
movsb
ja
add
sbbl
mov
xor
mov
popa
jl
sub
je
stc
add
insb
xor
jbe
push
pop
fwait
or
push
lock
sub
cwtl
xor
dec
xor
and
repnz
add
sub
das
addb
xchg
sub
and
les
dec
sbb
ja
xchg
and
enter
outsb
scas
adc
dec
loopne
fs
sub
jp
out
sbb
outsb
adc
in
mov
and
pusha
icebp
clc
cmp
add
int3
lock
in
andb
call
add
add
loopne
nop
or
pushf
cmpsb
sbb
fdivs
xchg
pop
dec
addr16
rcrb
jge
add
enter
and
add
nop
das
xor
adc
cmp
mov
sahf
push
jo
mov
sub
xor
cmp
pop
dec
or
dec
and
cwtl
xchg
push
sbb
jb
jo
pop
xor
mov
add
test
inc
push
mov
add
shlb
cmp
sbb
add
mov
mov
add
mov
loope
les
add
push
mov
loop
dec
ds
cli
addl
inc
enter
test
aas
and
cmp
pop
inc
and
movsb
andb
lods
xchg
add
or
cwtl
fs
sub
mov
push
in
pusha
subb
cmp
in
and
cmp
dec
rclb
xlat
sub
xchg
add
lods
enter
roll
or
subl
inc
aas
call
xor
adc
js
add
push
and
popa
mov
cmpsb
add
mov
or
into
pop
cmc
enter
pop
inc
in
mov
push
pop
sti
and
test
mov
jmp
cmp
mov
push
add
add
int
rcll
sub
mov
cmp
add
dec
dec
pop
push
inc
push
rorl
repnz
pop
push
orb
jae
or
push
nop
xor
mov
sbb
cmp
sbb
lea
loopne
push
inc
sbb
adc
xor
cmp
clc
dec
testb
xchg
sbb
aaa
xor
add
fs
pop
pop
test
insl
xor
push
jb
data16
gs
mov
cmp
inc
add
pop
icebp
push
sti
lret
push
and
js
and
popa
je
jecxz
xor
sub
inc
or
cli
push
add
popl
jbe
repz
arpl
insb
push
roll
jne
dec
cmp
dec
adcl
mov
inc
test
or
pop
lock
test
xor
imulb
out
lock
gs
test
loopne
fs
xchg
cmp
sbb
adc
mov
dec
xor
in
inc
imul
andb
xlat
and
push
push
dec
stc
and
fiaddl
pop
inc
inc
dec
pop
xor
mov
add
in
dec
call
scas
and
adc
push
push
mov
sub
outsl
xor
mull
jl
inc
clc
sbb
loop
add
xor
scas
and
ja
push
add
rorb
jp
out
cmp
fisubs
dec
nop
cld
aas
push
repnz
inc
inc
js
pop
add
dec
mov
insl
pshufw
divb
and
cmpsl
pop
jmp
pop
pop
mov
mov
mov
cmpsb
clc
jo
add
fwait
mov
cltd
test
pop
popf
cld
add
xor
mov
movsl
or
xor
test
adc
js
inc
mov
fwait
movsl
out
lock
call
push
loop
add
sub
aaa
movsb
and
jnp
test
dec
jnp
in
or
aad
call
pushf
bound
rclb
jo
rcr
inc
pop
add
jle
dec
pop
shll
enter
aaa
orb
insb
lods
clc
cmp
sub
pop
stos
cmp
pop
and
push
push
inc
jl
cwtl
lahf
add
cs
inc
insb
xchg
dec
dec
sarb
sbb
dec
mov
lods
sbb
push
movsb
xorb
jp
add
mov
push
push
dec
sub
pop
add
push
sub
std
add
movl
add
or
inc
dec
fidivl
movsl
push
xor
xchg
cmp
jmp
movsb
pop
mov
jmp
xchg
jp
inc
shlb
mov
lret
inc
hlt
adc
and
push
adc
aas
xor
in
dec
mov
leave
imul
lea
aaa
lahf
fsubrs
pop
adc
arpl
push
cmp
add
dec
inc
add
or
rcrl
push
clc
mov
les
enter
scas
int3
pop
jno
fs
jne
pop
fldenv
pop
orb
inc
outsl
xchg
add
mov
mov
test
dec
mov
push
lods
pop
sub
add
sub
xchg
pop
imul
dec
sub
adc
add
xor
push
stc
das
xchg
mov
cmp
andb
add
roll
dec
cmp
stc
add
aas
pop
sbb
pop
cmp
cltd
js
push
add
popf
and
xor
cli
insl
divb
sub
jp
xchg
add
push
arpl
lea
pop
jns
xor
insb
scas
daa
pop
add
mov
mov
mov
sahf
into
jle
xor
jnp
sub
enter
inc
push
xorb
or
or
ret
pop
pop
xchg
pusha
xor
cs
jb
in
mov
push
push
cmp
push
fstpl
sub
sysenter
mov
mov
and
add
push
cwtl
pop
rol
lds
add
and
stc
dec
sarl
lock
sbb
addr16
in
imul
cmp
test
addb
cmp
push
dec
repz
pop
test
sbb
cmpsl
mov
pop
jge
add
inc
pop
inc
mov
mov
roll
ja
call
dec
scas
sbb
mov
rolb
dec
loop
add
xchg
pop
test
lods
mov
cmp
out
xor
mov
std
and
insb
jb
jp
dec
out
jl
pop
inc
cmp
jne
scas
sarb
in
aas
jnp
sbb
popl
in
repz
out
jnp
ja
sbb
jno
jge,pn
hlt
in
jl
sarb
mov
add
mov
add
xor
pop
and
add
sub
sub
stc
xchg
jns
aam
adcl
rorl
fcoml
pop
xor
jle
out
xchg
loop
repnz
in
cs
mov
mov
xchg
enter
aas
frstor
xchg
loopne
stc
rcrl
xor
cmp
test
and
stos
pop
outsb
iret
shrl
sub
push
xor
dec
mov
pop
clc
inc
mov
cmpsl
fcoml
outsl
das
test
out
mov
xchg
dec
jge
add
lods
cmp
fildl
xchg
mov
xchg
push
jecxz
cmc
and
mov
push
pusha
hlt
pusha
mov
imul
aas
dec
push
je
adc
js
repnz
iret
lock
mov
hlt
push
je
lods
es
mov
push
pop
inc
xchg
add
add
mov
mov
xchg
in
push
loop
cmp
sarl
xchg
lcall
mov
out
lret
jno
nop
push
ja
or
lods
test
out
lret
in
mov
push
movl
das
popf
out
push
cld
mov
sub
sub
lahf
add
fs
add
mov
push
nop
pushf
add
stos
mov
je
neg
cltd
clc
cwtl
push
not
jb
loopne
cmp
addr16
out
movsl
repz
les
lcall
cli
movsb
pop
gs
dec
pop
loopne
sub
push
aam
in
pop
and
adc
lahf
out
xor
or
xchg
fadds
popa
jecxz
repz
test
sub
jne
movl
sub
xchg
or
mov
movsl
push
dec
adc
mov
xchg
push
jae
mov
push
popa
xchg
ja
jle
add
arpl
jns
movb
aad
cmp
adc
and
addl
or
push
sbb
test
mov
or
pop
push
mov
inc
jmp
push
jae
sub
cwtl
push
push
jo
pop
in
add
sub
dec
je
mov
sub
rolb
orl
pop
enter
cmpl
push
sub
pop
xor
xchg
or
xorb
push
add
shlb
pop
aam
push
scas
cmp
dec
mov
and
daa
dec
ljmp
pslld
sbb
xor
je
mov
gs
pop
sub
xchg
adc
loope
ja
addr16
imul
jae
xor
cmp
xor
jne
movsb
xchg
add
fdivrs
insb
pushf
mov
out
insl
push
fcoml
jns
add
xchg
es
and
add
dec
pop
push
lods
rolb
push
insb
or
popa
imul
and
inc
xchg
dec
lock
pop
mov
push
out
and
ret
sbb
pop
push
mov
or
dec
add
and
push
imul
sbb
dec
inc
ja
jb
fsubl
sbb
add
push
movsb
mov
jbe
sbb
add
sbb
push
add
add
inc
xchg
popa
pop
dec
insl
and
pop
scas
test
dec
inc
mov
leave
and
jae
add
sub
scas
add
into
add
cmp
lahf
sub
inc
arpl
data16
popa
sub
add
int
sub
push
shrb
jp
xor
dec
clc
into
push
sbb
cld
sarb
sub
pop
xchg
orb
mov
adc
push
jo
dec
jns
ss
imul
bound
fwait
aam
popa
add
xchg
sub
push
fwait
jp
xchg
sub
rolb
jb
cmp
xor
add
mov
icebp
in
jmp
xor
insl
add
fsubs
mov
test
rolb
leave
cmp
sub
push
add
mov
sub
add
ret
pop
dec
dec
lock
flds
mov
shll
push
add
in
movsb
jae
cs
jnp
pop
out
xchg
call
bound
jno
loopew
fmuls
cmp
xchg
jmp
in
nop
dec
mov
and
add
push
fs
mov
sbb
insl
dec
adc
lret
fmull
outsl
cmpsl
sbb
inc
dec
lret
popa
sub
jo
loopne
add
mov
je
test
jo
outsb
add
sbb
sub
add
xchg
or
adc
loopne
mov
imull
outsb
and
push
xor
test
mov
adc
xchg
mov
sbb
add
xchg
adc
or
gs
adc
in
insl
cmp
dec
cwtl
mov
mov
inc
out
sbb
je
aam
aas
add
dec
add
dec
push
dec
movaps
data16
jp
mov
add
adc
push
add
mov
mov
inc
aas
pop
aam
mov
dec
rclb
add
cmpsw
jnp
imul
or
out
inc
pop
add
inc
dec
jne
jmp
leave
bound
filds
enter
movsl
cmp
orb
xchg
es
testl
adc
pop
gs
cmp
push
lods
add
js
hlt
jp
mov
jecxz
mov
test
movsl
mov
cmp
push
pop
inc
or
push
sub
jecxz
inc
outsl
aam
fstl
test
addl
insb
jns
dec
add
std
es
je
push
dec
and
xor
call
movsl
sub
push
faddl
jbe
and
enter
add
xchg
add
sub
cmpsl
mov
add
pop
bound
dec
dec
mov
dec
push
scas
adc
cmp
sub
in
jo
xchg
repnz
cmp
inc
sub
adc
bound
shl
mov
mulb
hlt
pop
pop
xchg
js
push
insl
cwtl
rcrb
pop
sbb
adc
push
cmp
add
mov
loopne
push
or
mov
ss
das
in
imul
mov
mov
gs
outsl
mov
add
push
repz
mov
rorb
loope
sub
pop
xchg
call
jne
fimull
jns
add
icebp
jno
xor
loop
push
jb
aas
xorb
inc
add
popa
fcompl
sub
jnp
in
cmp
jl
jns
pushf
pop
add
pop
push
add
enter
imul
xchg
lock
inc
pusha
add
test
mov
push
add
add
adc
sahf
jo
and
add
xor
mov
jb
shrb
addr16
xchg
add
adc
push
imul
adc
xchg
and
inc
sub
pop
push
xchg
mov
arpl
or
sarb
push
cmpsl
add
mov
adc
ja
or
orb
push
loopne
add
insb
test
cli
cmp
into
stc
rcl
subl
push
mov
adc
xchg
lret
cltd
xchg
pusha
dec
enter
add
rclb
cvtps2pd
sbb
ret
in
jl
call
inc
xchg
add
addb
sbb
xchg
and
dec
outsb
mov
add
outsl
shlb
je
jne
rolb
in
mov
cwtl
add
in
mov
mov
inc
mov
xchg
sub
jo
jne
arpl
pop
push
xchg
mov
aam
outsl
cwtl
leave
add
mov
aas
push
test
movsb
add
nop
add
cld
push
or
jl
pop
andps
and
fldl
add
setbe
jbe
add
mov
jmp
jl
xor
adc
lret
test
xor
sbb
mov
jo
decl
adc
call
dec
nop
sti
add
inc
data16
mov
into
andb
adc
add
inc
pop
call
pop
mov
add
push
push
inc
mov
out
into
push
les
sti
push
jnp
clc
dec
mov
loope
inc
inc
dec
movl
pop
dec
add
or
test
mov
dec
dec
push
add
test
mov
push
xchg
sbb
dec
clc
icebp
jne
lock
add
inc
pop
lds
dec
pop
dec
inc
cli
push
lock
dec
add
mov
cld
jnp
add
popl
movsb
subb
sbb
fcmovnbe
test
lahf
or
dec
inc
pop
loop
sbb
dec
clc
iret
sbb
je
mov
pushf
or
inc
push
aam
mov
in
cmp
push
inc
inc
iret
dec
push
xchg
dec
clc
dec
xchg
add
lret
fadd
cs
and
xor
movsl
cmp
pop
sub
test
push
movsb
push
xchg
repnz
sbb
cmp
inc
push
inc
push
adc
sub
pop
push
mov
sbb
cwtl
mov
inc
mov
mov
pop
pop
fcomp
fs
pop
add
cmp
adc
sub
sbb
sub
jle
add
ds
call
fmul
pusha
push
jb
hlt
mov
inc
sti
pop
mov
push
mov
movsl
jge
sbb
inc
inc
leave
push
ret
dec
sbb
dec
test
pop
cmp
xchg
xor
mov
ljmp
dec
test
cmp
push
dec
adcb
cmc
pop
cld
in
shl
mov
push
inc
add
adc
dec
push
mov
add
push
cltd
xchg
ljmp
inc
movsl
or
pop
push
rorb
pusha
xchg
andb
ret
or
sbbl
and
fmuls
or
adc
sbb
mov
inc
pop
inc
hlt
adc
sbb
test
leave
xor
pop
pop
sub
inc
pop
addb
stos
and
pop
inc
ret
cld
xor
xor
adc
xor
and
fsubrl
enter
sarb
pushf
add
push
test
sub
mov
xchg
sbb
mov
test
dec
xor
sub
lcall
pop
mov
xchg
add
test
les
push
mov
ljmp
outsb
js
push
and
or
and
xor
push
je
leave
xchg
int
or
ja
int
pop
and
daa
xor
daa
cmp
cmp
subb
adc
pop
movsl
cmp
jl
sarl
enter
sub
xor
cltd
mov
push
repnz
push
pop
in
movb
inc
dec
dec
and
movsb
add
mov
add
push
or
push
dec
dec
sub
sub
movsl
push
mov
orl
pop
dec
xchg
clc
lret
sub
cmc
add
fs
rorb
cs
pop
nop
push
add
mov
xchg
dec
add
js
inc
cmp
leave
add
jno
cmp
repnz
lock
inc
sbb
outsb
sbb
inc
inc
dec
cld
sbb
mov
add
call
jo
int3
add
outsb
adcb
mov
add
inc
jge
mov
jl
xor
pop
jnp
or
stc
jp
loopne
lock
jns
mov
scas
js
mov
pusha
adc
jne
cmp
mov
je
or
inc
jae
int3
es
jb
mov
nop
adc
add
and
outsl
add
add
outsb
or
mov
insb
shr
add
aam
cmpb
or
adc
into
add
inc
or
sbb
in
and
sub
adc
adc
test
hlt
rcl
fadds
popa
add
adc
pusha
test
les
add
add
inc
dec
pop
or
jo
xor
dec
adc
pop
and
pusha
fbstp
enter
mov
movsb
push
sbbl
and
adc
push
jne
in
and
xor
rol
jl
pop
or
js
loopne
pop
and
sbb
inc
dec
or
mov
jo
add
inc
push
inc
push
dec
push
jl
rcrl
dec
inc
adc
jbe
sbb
cld
pop
ror
or
pushf
lods
jle
sbb
nop
inc
add
je
andl
and
mov
lret
cmp
int3
call
add
test
add
ss
xor
shlb
adc
testb
inc
xor
cmp
sbb
subl
add
mov
jo
add
sarb
mov
adc
xorb
iret
lods
or
addl
or
add
jo
in
std
add
sbb
push
dec
sarl
add
mov
je
add
incb
ljmp
ja
jae
pop
cmp
sbb
add
mov
inc
movzbl
push
sbb
aas
das
mov
add
dec
add
and
shl
add
sbb
aas
add
push
mov
or
sbb
mov
add
sti
cmp
and
adc
mov
inc
loope
add
xchg
and
in
jl
push
add
push
dec
fs
adc
imul
rolb
or
jmp
and
flds
or
pushf
fmuls
add
ja
mov
nop
lea
or
mov
notl
fidivrs
data16
pop
add
add
mov
mov
push
xchg
addb
add
mov
mov
iret
push
sti
addr16
add
shrl
mov
pop
sbb
xor
roll
jno
dec
xor
or
add
scas
xor
dec
add
push
pop
and
mov
jmp
sbb
add
rcl
repnz
fimull
popf
pop
cmc
add
add
popa
mov
sub
cli
je
mov
out
add
mov
sbb
pop
jg
push
fcoml
ret
inc
lock
and
pop
shl
jg
rcrb
mov
mov
fldl
loop
test
dec
shl
add
add
push
or
or
jl
sbb
or
dec
xor
push
dec
sbb
lret
push
inc
ret
in
cmp
test
and
jnp
je
push
cmp
push
jge
cmp
fdivs
xor
mov
call
enter
aam
push
jp
add
push
jp
jae
mov
push
ret
je
sub
and
jbe
mov
js
rorl
sbb
pop
lcall
cmp
mov
enter
push
fidivs
adc
add
mov
push
mov
sbb
jg
das
sbb
add
dec
mov
out
clc
adc
mov
es
add
sub
push
cmp
sub
fidivrl
adc
sbb
scas
sub
sub
hlt
sbb
pop
or
jb
xchg
xchg
movsb
jo
inc
test
jp
scas
inc
andb
js
int
sbbb
stos
push
mov
je
mov
add
lret
clc
add
jbe
mov
or
mov
or
jnp
iret
dec
dec
mov
jno
lret
jae
outsb
adc
mov
sti
cld
adc
and
cmp
add
movb
ret
push
jno
add
push
in
add
repnz
mov
pop
sub
add
dec
jne
loopne
add
lea
out
add
cld
call
sbb
leave
or
popl
sbb
lea
pop
fldenv
mov
jo
or
adc
inc
add
and
add
push
aaa
adc
add
enter
inc
add
pop
scas
and
cli
popa
jmp
inc
inc
mov
mov
jl
push
je
pop
add
movsb
lock
pop
sub
jp
add
pop
mov
add
pop
movsl
adc
mov
loope
push
push
add
mull
mov
add
arpl
mov
add
jecxz
adc
lock
add
nop
bnd
add
cmp
int3
push
aam
add
xchg
xchg
and
fwait
xchg
cltd
jle
cmp
push
xchg
lock
enter
xchg
mov
fisubs
in
outsl
pop
xchg
clc
xchg
cmp
mov
mov
aas
add
cmp
xor
xchg
jecxz
rolb
jbe
iret
and
scas
repz
jp
add
sarl
add
cltd
adc
pop
and
js
into
mov
inc
and
add
push
sub
xor
sbb
decl
jne
mov
push
push
shl
orl
add
mov
loope
sbb
jle
nop
mov
or
xchg
inc
lds
add
add
sbb
dec
cld
ds
setg
lret
add
in
sbb
push
add
add
mov
pop
fcomps
movsl
mov
lock
scas
mov
push
dec
das
add
push
fs
dec
mov
loope,pn
add
xchg
es
dec
push
add
mov
add
pop
lock
adc
incb
data16
add
or
add
fs
imul
cmc
cmp
insb
cli
add
sbb
ljmp
pop
jmp
daa
sub
lods
rclb
sub
in
fadds
ds
jl
adc
sub
shlb
pop
test
xchg
scas
xchg
insl
push
or
mov
dec
andb
sub
add
out
cwtl
xchg
xchg
loope
scas
loopne
mov
imul
sti
fiaddl
insb
push
pop
mov
les
cmp
sbb
pop
jae
sbb
and
sbb
cmc
movsl
inc
or
adcb
cmp
mov
xor
fldenv
rcrl
mov
add
mov
mov
sbbb
loop
sbb
or
adc
push
adc
call
and
add
lods
jl
jle
add
adc
inc
addr16
dec
scas
pop
push
inc
cmp
xchg
and
pop
xchg
aaa
or
adc
add
jg
lahf
sbb
lret
fnstenv
adc
jl
xor
and
jp
sbb
fbld
aam
out
add
xchg
in
cmp
arpl
cld
mov
add
sub
insb
clc
and
mov
xlat
jb
cmp
clc
xchg
cmp
incl
adc
adcb
addb
sub
add
mov
les
inc
cmp
clc
inc
stos
in
leave
test
cmp
adc
sbb
mov
out
adc
mov
cli
test
pop
add
lods
repnz
adc
add
cmp
test
inc
cmpb
enter
adc
ror
dec
cld
mov
jl
stos
add
fwait
pop
adc
out
push
push
cmp
cli
xor
xchg
sub
fs
xchg
roll
xchg
int3
mov
cli
adc
mov
inc
cmpsl
sar
loopne
add
xor
push
push
jno
or
sub
nop
leave
add
pop
pusha
fisttpl
clc
add
das
xchg
add
sub
orb
ds
enter
and
rol
and
adc
sub
adc
enter
inc
int3
mov
rol
es
aam
dec
sbb
inc
push
faddl
mov
or
test
fs
int3
mov
add
sbb
js
orb
mov
add
test
pop
jno
lock
add
lods
cmp
xchg
inc
sarb
cmp
int3
sbb
dec
test
sar
incb
xor
jg
cmp
addb
aad
loopne
add
sub
push
sbb
add
rorb
gs
jns
jo
lock
add
pop
sbb
outsl
je
mov
inc
fs
push
jne
sbb
dec
loope
or
add
dec
adc
inc
cld
movsb
clc
jb
dec
loope
pop
jae
xchg
inc
insl
add
dec
xor
mov
and
mov
and
movl
dec
adc
inc
in
adc
mov
mov
test
sub
fsubrl
add
daa
mov
or
cmp
cwtl
test
xor
bound
dec
mov
lret
roll
cmp
outsl
pop
add
xor
mov
cmp
or
mov
add
int3
rcr
sbb
or
lahf
inc
loopne
inc
test
mov
data16
add
dec
and
dec
push
mov
popa
call
inc
push
add
sub
pusha
and
sub
or
push
inc
rolb
and
push
cmp
pop
sbb
mov
adc
inc
inc
or
in
pushf
pop
movsb
out
aam
push
jno
test
ds
lds
push
inc
xor
pop
and
and
add
test
or
mov
rcl
cmp
xchg
mov
addr16
rcl
sti
add
xchg
shlb
push
xchg
add
mov
xor
inc
mov
ja
sbbb
cli
and
cwtl
stc
push
push
repnz
push
ret
lret
cltd
gs
dec
sub
fnstcw
sbb
adc
inc
mov
pop
cmc
js
mov
inc
iret
sub
hlt
and
cmp
pop
add
call
out
pop
and
inc
mov
test
mov
inc
cld
aad
int3
scas
pop
stos
sub
cwtl
in
cmp
pop
push
add
inc
cld
jo
arpl
sbb
push
scas
mov
sbb
outsl
mov
jo
fadds
arpl
lods
adc
pop
sbb
add
dec
push
inc
xchg
sub
xchg
xor
inc
add
divl
nop
add
mov
push
dec
pop
mov
pop
stc
push
cmp
add
push
mull
pop
lds
outsl
jecxz
and
inc
hlt
push
cmp
mov
pushf
jp
ss
stc
sub
mov
xchg
sti
or
xor
mov
incb
xor
add
pop
movsl
sub
dec
inc
les
je
icebp
jo
cld
loopne
push
add
mov
push
xor
testb
inc
in
out
inc
inc
cmp
cmpsb
inc
loop
lock
bound
xor
shlb
adc
call
adc
mov
sub
je
sub
clc
idiv
insb
add
add
xor
adc
dec
je
aas
dec
xor
sub
dec
test
cs
add
adc
std
push
sub
cmp
cmpsb
pusha
adc
test
outsl
addr16
jp
xor
es
push
or
mov
mov
add
inc
mov
es
cld
in
add
pop
xchg
lock
inc
xor
adc
aam
dec
cmpsl
fadds
mov
jge
test
mov
adc
or
mov
inc
loopne
push
aam
sub
inc
and
ret
xchg
xorb
jo
inc
enter
or
pop
add
aam
mov
sbb
or
adc
and
add
xor
mov
xlat
add
adc
add
sbb
cmpsb
xor
cmpsl
push
pop
lods
sub
call
std
orb
jmp
lret
hlt
pop
outsb
adcl
scas
or
nop
shr
arpl
xchg
mov
push
cmp
add
call
or
fdivs
fdivs
pop
add
mov
jmp
dec
and
mov
rcrl
movl
adc
xchg
add
lahf
ret
ljmp
jecxz
pusha
lods
ret
cmp
popa
push
incl
addl
aam
ds
inc
pop
add
adc
xchg
and
jg
jmp
push
shr
cmp
std
aas
popa
push
mov
add
ds
out
rclb
add
push
lock
cmovge
inc
divb
cmp
call
push
pop
mov
sbb
paddq
add
xchg
xor
mov
popf
mov
cwtl
clc
adc
minps
dec
fsub
mov
and
popf
mov
fstpt
inc
xor
lea
rcrb
or
push
add
inc
jle
cmp
loop
cwtl
xchg
call
dec
sbb
scas
dec
and
mov
push
sub
push
add
rolb
and
imul
adc
inc
lock
pop
add
push
or
sub
add
mov
push
imul
inc
xor
pop
jne
push
ja
cs
pop
and
in
insb
jl
outsl
mov
push
inc
inc
sub
mov
sub
clc
push
xor
orb
jle
movsl
add
or
pop
pop
js
lock
pmaxsw
scas
adc
xor
inc
nop
sub
mov
rcrl
xor
add
sbb
je
fcmovne
inc
fsubl
loop
sbb
scas
pop
pop
pop
xchg
inc
ror
add
xor
sbb
pop
call
fdivs
mov
pop
out
add
jl
push
mov
nop
add
mov
cld
add
cmovno
clc
movsl
mov
and
int3
inc
ficompl
mov
dec
add
xchg
or
add
in
inc
or
movsb
add
xchg
lods
cltd
mov
pop
sub
andl
in
mov
inc
cmpsb
cmpl
mov
clc
push
push
xorl
adc
xlat
jae
aad
shll
cmp
xchg
push
xchg
sub
or
orb
mov
add
xor
ret
les
loop
push
inc
in
cltd
xor
in
call
out
cld
movl
and
test
call
adc
push
dec
pop
dec
je
jle
push
inc
pop
ljmp
cwtl
pop
add
push
mov
mov
push
incl
or
push
push
ds
cmp
jmp
rcrb
dec
add
pop
dec
in
shrb
in
jne
add
cmp
xorl
inc
or
sbb
cwtl
in
mov
rorl
add
push
jmp
dec
xlat
pusha
mov
sbb
add
add
or
jnp
pop
stos
jecxz
lock
add
je
scas
inc
mov
push
push
adc
add
shll
xorb
or
in
add
adc
aas
push
out
repz
dec
xor
scas
negl
jb
add
cmp
add
push
and
pop
mov
sarb
cmp
fmuls
sub
rcrb
push
das
stc
cltd
add
push
dec
sar
add
cs
dec
and
add
pop
adc
jb
je
or
enter
xchg
inc
imul
std
cld
notb
jbe
pushf
or
mov
fwait
add
add
pmuludq
outsl
lock
daa
adc
and
in
mov
mov
mov
fwait
xor
adc
add
enter
inc
push
lcall
or
add
fiaddl
push
push
and
dec
test
add
bound
fst
push
add
cmp
adcl
and
jg
loop
sbb
xchg
cli
test
cmp
int3
mov
adc
mov
jae
cmp
add
cs
sbb
jbe
das
cmpsl
cmp
inc
and
xlat
adc
mov
adc
pop
pop
and
lcall
or
loop
pushf
test
xchg
hlt
add
mov
xchg
add
insb
fsubrl
sub
inc
sbb
data16
pop
mov
cmpb
push
je
test
sub
ljmp
mov
fs
xchg
orb
and
sbb
pop
inc
in
mov
adc
inc
and
mov
mov
mov
clc
lret
add
inc
pop
xchg
lea
pusha
mov
mov
pop
adc
xchg
aad
inc
add
bt
dec
clc
mov
add
jae
jno
mov
ja
push
add
dec
mov
mov
xchg
or
dec
push
jne
pop
test
push
test
or
lods
pop
adc
cmpb
add
push
cmpsb
fmuls
outsb
jns
subb
sbb
clc
add
sbb
jno
or
adc
addb
and
loop
push
inc
lock
cmp
add
or
call
dec
jge
cmp
pop
and
xchg
push
loope
ljmp
xchg
and
mov
push
add
fistpll
pusha
mov
lret
cmp
movb
dec
lahf
stos
push
fsubrs
movsbl
outsl
xchg
cld
call
pop
sbb
cmp
dec
rcl
push
sbb
add
xor
push
test
sub
cmc
mov
sbb
mov
rcr
decb
addr16
adc
inc
sbbb
repz
lret
sub
lods
lahf
sbb
jno
das
inc
test
sbb
int
fmull
push
addl
pushf
add
adc
inc
xchg
in
and
test
cmp
pusha
push
mov
sbbl
dec
mov
lods
in
pusha
movsb
mov
mov
mov
add
pushf
mov
add
arpl
cmp
hlt
loopne
daa
mov
sbb
lahf
adc
add
dec
inc
mov
cmp
insb
add
fldl
jmp
enter
lods
push
mov
mov
add
sub
movsb
push
les
fldl
dec
cli
cmp
mov
roll
loop
and
mov
sbb
test
lahf
cmpsb
sbb
push
loope
push
and
push
rol
dec
mov
enter
add
rcll
cmp
xor
les
cmp
fs
push
mov
dec
call
mov
movsb
cli
add
xchg
cmp
sub
lods
mov
aam
pushf
push
in
or
pop
into
cmc
jnp
pop
pop
mov
pusha
enter
sub
jge
shll
hlt
movsl
add
pop
in
aas
subb
inc
add
aas
inc
dec
into
jne
add
loopne
push
sbb
mov
and
fs
nop
and
xchg
filds
hlt
dec
and
in
paddq
test
or
sbb
es
test
daa
sub
mov
add
loope
pop
cmp
mov
jle
rorb
inc
fiadds
pop
inc
pop
and
jnp
pop
and
dec
pop
lcall
lods
ficompl
cmpb
xchg
add
cmc
sub
inc
inc
xchg
push
gs
stos
mov
xor
js
add
sub
loopne
sbb
adc
stos
and
cmp
adc
rcrb
xor
in
adc
in
add
mov
loopne
sbb
adc
cltd
cmp
out
out
repnz
push
mov
sub
aam
les
jno
inc
shlb
call
jp
cmp
shlb
add
mov
rcl
add
ficompl
adc
pop
mov
add
pop
loop
add
pop
and
or
fdiv
mov
pop
aas
movsl
and
daa
add
dec
adc
inc
mov
popa
adc
cmovs
int
aas
dec
dec
loop
orl
cli
dec
mov
jbe
fsubs
aaa
pop
add
daa
push
cmp
addr16
movsb
out
dec
pop
or
mov
test
dec
aas
dec
loop
aam
aad
jne
add
sbb
sub
dec
jle
popa
cwtl
xorb
sti
call
inc
aad
aas
dec
add
nop
lret
dec
jp
cwtl
cmp
mov
ja
test
mov
popf
cmp
xorb
lds
setae
mov
add
lea
loopne
jae
add
sbb
aam
repnz
testw
outsl
add
fisttpll
mov
dec
adc
ret
lcall
lock
pop
jmp
repz
push
dec
or
add
jle
popf
add
imul
pusha
stos
lods
add
dec
cltd
push
add
aam
enter
or
add
pop
or
mov
insb
xchg
out
imul
jge
ja
and
int
adc
or
shrb
cmp
sub
leave
sbb
adc
ljmp
push
add
fs
cmpsl
or
dec
scas
ds
aaa
jle
or
cmpl
jb
mov
mov
xor
and
loop
lods
dec
sti
mulb
or
je
jns
dec
pop
sbb
sahf
loopne
in
add
imul
jmp
repnz
jl
add
insb
gs
add
jne
dec
mov
inc
roll
jb
push
scas
stos
iret
cld
dec
add
lea
dec
or
sub
je
cli
popl
loopne
leave
lahf
dec
mov
add
gs
jae
push
pop
jecxz
xchg
outsl
ja
push
adc
incb
or
insb
pop
xchg
cwtl
adc
add
inc
call
icebp
add
mov
and
lret
sbb
fs
or
icebp
jmp
ret
xor
sbb
les
clc
ljmp
add
mov
loop
arpl
add
std
loope
jnp
add
pop
ret
push
or
mov
pop
les
push
je
pop
sti
lahf
push
xor
nop
xor
imul
movsb
push
add
jno
lea
hlt
cli
cmc
pushl
pop
xchg
out
inc
jge
jno
popf
je
push
or
cmp
add
fsubr
sbb
xchg
cmp
addr16
sub
mov
push
push
popa
xchg
jnp
cmp
adc
add
movl
xchg
inc
jb
rolb
inc
bound
add
pop
daa
in
pop
push
cmp
cltd
push
cmpsl
ja
ljmp
jns
pop
push
xchg
inc
and
xor
xchg
add
add
sub
jp
fwait
or
lock
scas
push
rolb
subb
push
push
or
sar
or
add
xor
repz
inc
adc
inc
add
mov
push
mov
push
xor
pop
dec
mov
cmp
xor
and
mov
fimull
and
push
cmpb
add
pop
je
add
lds
pushl
enter
pop
adc
add
dec
cmp
add
sub
fwait
mov
aaa
dec
lods
aad
mov
fmull
adc
jae
add
inc
add
cmp
push
xchg
add
or
pop
jb
add
aas
out
int
pop
icebp
dec
mov
add
sub
mov
fadds
mov
clc
lods
inc
adc
scas
mov
mov
lock
inc
mov
cmp
insb
push
mov
add
lea
add
jnp
add
aad
mov
add
movsb
subl
call
mov
add
mov
les
push
jp
jl
add
sti
mov
add
mov
movsl
add
add
daa
push
mov
adcb
add
pop
cmp
fwait
xor
sbb
pop
and
rorb
movaps
push
addb
push
push
add
ljmp
push
add
and
notl
add
pop
cmp
clc
add
decl
inc
cmp
xchg
push
addr16
aas
add
mov
test
enter
xchg
loopne
mov
mov
mov
cmpl
out
xor
jmp
jbe
adcb
adc
fbstp
leave
cmp
dec
inc
rcrb
jg
mov
std
ja
add
popf
imul
cmp
add
lret
test
push
mov
push
cmpl
or
add
and
add
xchg
int3
push
add
adc
lock
lods
mov
out
dec
clc
stos
xor
cmp
and
mov
push
jl
or
inc
xor
mov
add
mov
xchg
test
out
xchg
prefetch
andl
ja
pop
or
sbb
add
add
inc
dec
add
leave
pop
sub
sbb
dec
push
stos
jns
push
mov
out
loopne
push
shlb
add
add
call
add
addb
adc
int3
loop
sub
orb
loope
jmp
sarb
cmp
inc
xchg
sbb
add
lahf
inc
stos
test
imul
sbb
fistl
lret
cmp
pop
outsl
and
inc
add
adc
adc
inc
dec
mov
push
sbb
inc
dec
inc
cmp
cmp
pusha
or
lock
and
or
pop
push
add
jns
add
pop
add
sbb
adc
pop
add
add
jl
in
push
mov
pusha
inc
xchg
inc
scas
out
mov
add
and
xchg
in
jb
cmp
inc
cwtl
and
add
pushf
jb
cmp
andb
xchg
subb
test
xchg
add
mov
mov
mov
jle
add
call
test
mov
js
xchg
les
sub
scas
mov
add
and
pop
or
rorb
inc
adc
pop
jmp
inc
dec
loopne
or
jo
adc
jl
pop
xor
add
shl
cwtl
pop
add
pushl
sbb
test
call
sbb
jmp
xor
orb
cmp
jle
mov
cli
cmp
push
call
icebp
aam
mov
js
jge
xor
add
jns
rcrl
xchg
sub
mov
add
push
add
loop
xor
xchg
mov
xchg
dec
add
mov
shl
inc
mov
mov
pushf
xor
add
add
hlt
pop
xorb
or
pop
or
sub
or
in
or
pop
add
jmp
mov
orl
sbb
jne
mov
jp
call
jmp
addb
fbstp
roll
loop
cmp
insb
adc
call
cmp
out
jae
push
lock
pop
push
add
cmp
aas
mov
ret
rcr
je
add
dec
pop
inc
or
add
js
add
jp
out
push
add
lock
adcl
sbb
sbb
movl
add
or
adc
ljmp
sub
out
orb
loope
cs
jb
pop
loop
add
out
fidivs
mov
pop
mov
fs
and
mov
xor
sahf
mov
je
addb
jg
add
xchg
jb
addb
push
dec
adc
lock
xor
test
loopne
and
dec
pushf
movsb
add
adc
mov
incl
cmp
add
xlat
or
vmread
cwtl
ret
loope
and
shlb
push
lods
cmp
sbbb
jg
add
std
add
out
into
inc
xlat
mov
add
ss
in
jecxz
add
mov
insb
add
testl
mov
sbb
popa
stos
mov
or
push
loopne
mov
dec
fidivs
inc
bound
sbb
push
push
add
jne
xor
clc
in
sbb
adc
iret
mov
dec
adc
add
movsb
pop
add
pop
mov
xchg
mov
andb
add
push
outsl
inc
add
sub
mov
or
stos
push
xchg
jp
sti
adcb
roll
pop
dec
sahf
jmp
loop
ret
leave
adc
push
jbe
sub
fxtract
jecxz
cld
add
cmp
add
push
rorl
sarb
popf
inc
clc
jmp
icebp
mov
adc
adc
pop
push
add
call
into
adc
dec
push
rorb
faddl
pop
outsl
or
lea
xchg
pop
mov
mov
fnstsw
ljmp
aad
movl
push
jnp
dec
ljmp
clc
sbbb
pop
add
or
add
fldt
add
pop
sbb
or
adc
rolb
xchg
add
popfw
push
adc
enter
and
cmp
call
adc
add
pop
pop
lret
add
adc
jge
pop
push
push
or
dec
pushf
and
cmp
jo
fs
sub
xchg
push
add
imul
flds
sbb
fwait
dec
sub
js
add
movsl
mov
pop
ret
clc
fistpll
jbe
add
xchg
ja
cmp
and
dec
lret
xchg
add
and
js
dec
movsl
nop
jne
xchg
lea
sub
push
xchg
sti
sysret
daa
cli
cmp
inc
sbb
cmp
and
inc
add
and
gs
push
add
inc
jp
xchg
cmp
add
xor
mov
sbb
rorl
ficomps
add
adc
enter
std
sub
aaa
mov
or
shlb
adc
sub
push
xchg
adc
mov
or
jns
dec
add
xor
mov
shl
sarl
into
dec
inc
das
push
xchg
push
jg
idivb
sub
pop
ja
dec
or
add
jb
jnp
mov
xchg
cld
pop
add
call
cmp
into
add
rorb
pop
pop
sub
enter
jb
ljmp
pop
mov
push
xchg
test
icebp
push
jmp
jle
pop
mov
inc
repz
aam
cmp
in
add
jne
dec
or
outsb
frstor
mov
inc
jl
aas
xor
gs
dec
mov
out
scas
sbb
push
loopne
bound
or
aas
inc
arpl
jb
pop
jp
jno
add
enter
sbbl
sub
les
add
fs
push
outsl
add
push
mov
push
cmp
lea
jp
add
mull
pop
hlt
sbb
push
lret
outsl
add
mov
sbb
add
and
or
mov
int3
push
or
inc
ljmp
add
push
xor
adc
add
lea
or
or
lods
cld
lock
add
push
fcoms
or
wbinvd
mov
jo
outsl
push
testb
fwait
add
out
scas
xchg
roll
nop
sub
lcall
fidivrl
add
fcoml
ja
push
aam
ret
mov
push
sbb
fldenv
ss
cmp
repz
cltd
js
or
movsb
fmuls
and
inc
inc
jbe
dec
or
add
push
adc
lahf
pop
xor
imul
stc
jbe
je
std
in
rol
pop
and
push
insl
add
jle
orb
mov
cmp
inc
add
lods
pusha
adc
inc
add
nop
mov
sub
pop
rolb
xchg
add
inc
xlat
outsb
push
pop
loope
pop
xchg
ror
mov
xchg
jb
and
icebp
or
addb
push
push
nop
add
or
pop
rolb
xchg
mov
mov
sub
add
dec
lock
lea
es
nop
rcrb
push
add
mov
xor
pop
or
ja
push
adc
addr16
add
inc
nop
xlat
bound
inc
inc
out
scas
pusha
xchg
test
add
push
pop
lea
cmp
mov
outsl
insl
jo
add
gs
pop
mov
adc
int3
push
lock
andb
out
clc
pop
je
cmp
movsb
dec
or
loopne
rcr
push
add
adc
pushf
or
sahf
jbe
jp
add
sbb
add
inc
and
xchg
bound
add
or
or
hlt
and
inc
jle
mov
xchg
sbb
jmp
subb
pusha
int3
sbb
add
icebp
pop
lds
enter
test
add
repnz
adc
push
jmp
shll
montmul
cmpsb
inc
mov
add
jb
add
into
rol
dec
int3
in
push
push
test
jae
dec
imul
and
mov
loop
jnp
movb
inc
jl
push
aad
xor
push
sbb
sub
jae
jnp
add
lock
jo
adc
pop
push
test
mov
data16
movsb
out
jb
je
pop
cmp
and
testb
nop
scas
sbb
sub
orb
jae
fs
arpl
add
pushf
call
sarb
sahf
cmpsb
push
and
xor
push
jecxz
add
sbb
push
in
mov
and
adc
and
or
cmpsl
push
sbb
stos
movsb
lock
sub
test
push
and
mov
sbb
mov
cwtl
jns
inc
lods
loopne
push
add
cmp
sbb
imul
sbb
add
fs
les
scas
cwtl
jmp
hlt
arpl
lods
mov
in
loopne
pop
mov
pop
inc
iret
or
hlt
adc
or
leave
dec
pop
add
jo
sbb
pusha
add
and
push
jg
mov
clc
inc
xor
lock
and
je
add
and
dec
mov
incb
mov
mov
adc
add
popa
sub
shlb
sarb
add
or
dec
sbb
sub
mov
add
cld
cmpl
test
in
jle
sbb
push
js
mov
mov
xchg
add
mov
adc
push
pop
mov
push
add
sbb
xorb
xor
les
or
adc
or
fisubrs
push
mov
adc
cmpsb
js
add
movsb
jae
das
push
xor
aam
mov
add
sub
rolb
js
mov
mov
mov
addl
adc
mov
add
lock
test
loopne
pusha
add
jmp
test
jp
add
scas
jl
mov
add
mov
clc
dec
test
out
cmovg
push
jne
and
mov
and
inc
add
cmp
or
xchg
testl
and
jbe
add
movsl
imul
add
into
and
sbbb
or
stc
addl
shlb
xor
inc
pop
imul
leave
xor
dec
xor
andl
xorb
movsb
inc
mov
mov
popa
inc
lret
cmp
adc
mov
and
mov
add
into
lock
add
rcll
cwtl
adc
jns
xchg
add
jae
pop
imul
les
pop
adc
dec
inc
lea
pop
pop
jl
andl
aam
sub
inc
cmp
fiaddl
outsl
aam
add
xchg
fs
cwtl
adc
add
in
add
adc
cmp
in
mov
mov
stos
add
rclb
je
jo
jmp
mov
mov
test
out
mov
pop
inc
data16
test
mov
stc
inc
jbe
bound
cmp
dec
loopne
pop
addr16
int
repz
sbb
add
adc
mov
add
aas
fnop
add
inc
popf
mov
cmp
call
pop
jecxz
leave
stos
mov
inc
dec
inc
outsl
add
popa
fadds
jmp
fisubrs
daa
dec
dec
inc
or
gs
and
push
cmc
or
int3
sub
or
das
and
inc
jns
sbb
add
imul
push
in
push
nop
dec
add
jae
jmp
mov
sub
xor
sbb
arpl
xchg
adc
test
in
xor
mov
xor
enter
inc
xor
or
repnz
aam
icebp
mov
mov
js
movsb
pop
cmp
cltd
jns
dec
inc
or
pop
add
fwait
pusha
inc
mov
inc
lock
cld
in
in
add
int
aad
xor
imul
cmc
cmc
hlt
cld
repz
cmp
addl
xchg
lock
and
addl
test
xchg
add
mov
loope
or
mov
jo
xchg
sbb
or
adc
in
dec
mov
add
or
add
imull
jge
addb
xchg
pop
add
mov
out
push
push
add
xchg
jbe
add
rol
lret
aam
jecxz
add
add
add
adc
or
and
adc
push
xchg
hlt
or
dec
rcrl
fdivrs
mov
sub
push
lods
add
loopne
push
inc
jecxz
sub
sbb
insb
or
sbb
dec
ficoml
sbb
xor
mov
inc
add
mov
pop
add
fs
add
inc
mov
cmp
or
jns
pusha
leave
scas
cmc
push
mov
das
repz
out
add
rolb
nop
cmc
out
das
xlat
mov
inc
sbb
push
sti
rolb
add
dec
js
lret
je
add
test
pop
mov
das
add
xchg
mov
or
stos
icebp
in
xchg
fdivs
or
cmp
nop
add
jg
xchg
notl
cmp
add
gs
stos
mov
or
xchg
ret
mov
cwtl
lods
add
xor
out
mov
adc
add
inc
push
adc
and
or
cmp
add
clc
push
pop
or
xchg
call
inc
mov
adc
jnp
add
fcomps
add
ficompl
xor
mov
sbb
pop
adc
mov
push
add
add
cmp
add
mov
add
adc
rclb
jns
pusha
add
inc
add
pop
adc
add
or
or
call
dec
jle
loope
push
pop
mov
jge
add
gs
add
sbb
or
adcb
jbe
sub
mov
add
in
lds
push
or
rcr
push
jmp
sbb
mov
cmpb
jne
or
jne
inc
add
or
pop
notb
sub
adc
pop
sub
stos
rol
shl
ljmp
xchg
add
or
or
push
add
test
movsb
out
sarb
decb
mov
add
hlt
xlat
lds
in
pushf
repnz
fadds
cmp
push
daa
pop
and
jb
das
lret
ss
sub
push
or
dec
or
call
dec
sub
add
lea
dec
ljmp
adc
scas
loop
cmp
lea
scas
add
pop
in
add
jbe
add
aaa
xchg
jno
setge
pop
jb
inc
lock
cmpb
mov
jle
pandn
mov
cli
dec
scas
pop
and
and
mov
sub
inc
shrb
dec
jo
fildl
xchg
in
xor
add
adc
fadds
xor
pop
mov
popa
jge
in
popf
push
add
inc
and
add
mov
sbb
jnp
in
inc
push
aad
lds
mov
add
xor
lods
jb
fistl
pop
sub
pushf
lea
cltd
or
mov
mov
xchg
gs
add
or
sbb
adc
jmp
or
jecxz
adc
daa
add
dec
add
push
inc
add
pop
sbb
xor
inc
pcmpeqw
dec
cmpsl
pop
pusha
inc
hlt
iret
in
or
fdivrs
sbb
and
dec
push
add
xchg
cmova
fstps
inc
mov
inc
mulb
test
add
xchg
iretw
mov
xchg
add
ficoms
pop
inc
adc
cmpsl
nop
xchg
clc
xchg
mov
gs
adc
cli
enter
lahf
push
sub
jg
cmp
add
pop
xchg
jno
sub
nop
inc
pop
fldenv
shld
lahf
hlt
add
xchg
push
sbb
xchg
andl
std
xorb
pop
inc
sbbb
ljmp
movsl
fwait
add
loop
push
mov
push
inc
add
cmp
jl
jp
push
call
lds
popa
sbb
ja
xor
add
bound
int
inc
sbb
xlat
scas
bnd
pop
iret
es
jns
cmp
sub
test
dec
xor
add
mov
dec
call
ds
sub
and
das
add
daa
add
lods
or
testl
pop
in
aaa
mov
rcl
cmpl
fisubrl
mov
inc
pop
xchg
adcb
sbb
in
int
adc
dec
cwtl
xchg
mov
xchg
pop
movsb
mov
xor
dec
sub
arpl
add
lret
cli
xchg
sub
sbb
xchg
cld
add
lret
call
add
iret
pop
or
lods
and
xor
add
add
out
and
or
pop
jmp
add
push
ljmp
push
inc
in
xor
add
scas
lea
cmp
jle
jge
ljmp
push
sbb
adc
fsubr
pop
xchg
push
add
jle
js
xor
in
mov
mov
movsb
pop
push
stc
jle
jno
cmp
call
cmp
rolb
gs
push
add
lcall
pop
stos
stc
push
mov
ss
mov
add
enter
mov
add
nop
aad
sub
movb
and
xchg
dec
dec
pop
incl
data16
mov
pop
or
xchg
sti
jb
add
xchg
jne
adc
lea
lret
test
xor
sbb
mov
pop
mov
sub
loopne
mov
or
in
out
roll
dec
jmp
arpl
or
pop
jae
aas
lds
sbb
cmp
add
cmc
test
fcomps
fwait
mov
mov
imul
adc
xchg
jecxz
cmp
in
dec
add
pop
inc
pop
mov
test
mov
sarb
scas
dec
pop
adc
bswap
mov
add
and
lock
loope
or
cld
mov
jnp
addb
push
fs
pop
add
lret
inc
adc
jno
jl
or
jecxz
push
sbb
jae
add
insb
fimull
add
pop
mov
or
mov
out
aam
push
push
mov
pop
lret
sbb
movsl
popf
aas
icebp
insb
xchg
mov
in
mov
popa
cwtl
jecxz
movsb
pop
xor
lods
aas
lock
pop
mov
mov
filds
add
or
pop
push
fbstp
adc
movsb
enter
cmp
pop
xorb
and
loopne
jl
add
call
add
pusha
dec
out
sub
lahf
xchg
loope
cmp
movsb
inc
dec
cli
rolb
pop
lahf
cmp
pop
adc
or
sti
jbe
in
pop
add
out
sub
cmp
or
lret
pop
cmc
cmp
ret
dec
adc
xchg
sub
inc
adc
or
push
repnz
or
add
popf
leave
loopne
cmp
nop
dec
adc
add
mov
aad
subb
adc
add
sbb
cs
call
mov
inc
in
scas
data16
inc
add
cld
hlt
xchg
or
add
pop
daa
lea
test
mov
push
push
in
sbb
push
xchg
jg
add
push
and
loope
negb
cmpsb
xor
bound
addb
nop
add
sub
lcall
mov
aaa
push
inc
enter
adcb
add
xchg
xor
pop
mov
cwtl
stos
aad
cld
addl
int
adc
push
test
test
xchg
aas
in
jns
adc
xor
mov
pusha
addb
out
inc
nop
and
out
mov
andb
mov
lock
out
add
jg
mov
dec
xor
push
cmpl
jne
sbb
xchg
pop
add
inc
ret
sbb
sub
rolb
jg
scas
add
fstpt
xor
push
fldenv
clc
test
call
lcall
pop
fcoms
jnp
adc
sbb
fisttps
sbb
rolb
pop
js
xchg
in
dec
or
xchg
pop
add
lods
mov
add
adc
adc
xor
int3
lods
dec
pushf
pop
test
pop
popf
sbb
rolb
push
adc
pop
cmpl
mulb
into
add
das
cwtl
imul
insl
call
add
mull
sahf
or
dec
sub
push
fs
push
xchg
mov
ljmp
adc
add
movb
mov
jae
cmp
or
cltd
ret
dec
add
das
hlt
xchg
mov
add
jae
add
stos
mov
daa
inc
lock
jnp
add
mov
leave
inc
pop
es
or
sbb
xchg
pop
sarl
and
repz
decl
pusha
enter
jge
sub
add
add
lea
mov
movsl
mov
mov
add
pop
and
repnz
call
push
mov
dec
push
mov
nop
dec
rolb
jg
sbb
jno
add
and
cmp
fldcw
das
xchg
inc
mov
pop
cltd
je
push
mov
or
pushf
in
add
loopne
hlt
dec
out
push
lods
sahf
paddq
hlt
rcl
pushf
out
cmp
add
push
inc
jle
add
popf
cld
adc
in
shrl
push
dec
sbb
or
add
add
popf
add
lahf
lock
xchg
cmp
call
jge
or
pop
add
mov
jb
pop
sbb
jl
push
mov
add
jg
or
add
push
or
repnz
add
aam
pop
rcrb
dec
bnd
imul
add
mov
shl
rolb
add
pop
movsl
aad
inc
sub
aaa
xchg
add
add
data16
jmp
test
imul
or
dec
fmuls
aas
movsl
out
movsb
inc
mov
cmp
push
mov
popf
adc
scas
stos
movsl
cmp
icebp
jle
out
jmp
sbb
mov
mov
loopne
cmp
cli
jmp
decl
std
jg
pusha
dec
int3
jo
dec
inc
or
repz
shll
mov
add
aas
mov
or
dec
lcall
and
and
fwait
pop
mov
cmp
enter
xchg
jbe
stos
mov
roll
sti
insl
mov
ljmp
dec
pop
pusha
adc
push
outsb
negb
mov
add
fidivl
inc
mov
add
xchg
leave
push
add
rcpps
sub
roll
cmpsb
ret
mov
lock
mov
push
add
sub
roll
pop
xchg
test
jo
dec
add
stos
cli
bound
pop
jl
fimull
inc
roll
mov
cmc
orb
js
add
mov
test
add
jmp
add
and
ret
jmp
add
push
and
cmp
push
rcrl
cmpb
cmpsl
sbb
push
add
out
je
dec
inc
and
outsl
add
mov
add
stos
imul
mov
push
inc
xlat
call
mov
dec
add
out
mov
or
mov
int3
dec
shll
push
adc
cmp
aad
add
mov
add
imul
add
push
inc
pop
xchg
or
mov
xchg
cmpsb
mov
dec
cmp
andb
iret
nop
lock
push
sbb
daa
roll
decb
mov
cli
pop
ja
add
mov
bound
sbb
fs
cmp
jl
in
and
push
inc
cmp
and
add
or
fnstcw
mov
hlt
aas
pop
xor
mov
add
push
xchg
mov
add
xlat
outsb
in
add
imul
adc
les
cmp
mov
das
aas
inc
fs
sbb
mov
scas
pop
pop
stc
and
test
xorb
sub
je
xor
in
inc
add
jb
and
outsb
imul
mov
icebp
push
out
fldl
cli
mov
adc
add
aad
mov
mov
push
daa
das
in
sbb
mov
sbb
lret
sbb
mov
inc
ljmp
imul
pop
in
sub
pop
nop
ret
add
mov
cs
mov
and
movsl
addb
push
xchg
fisubrs
pop
xchg
lea
stos
es
movsb
mov
mov
je
pop
mov
cmp
add
iret
and
jp
mov
mov
out
push
push
les
pop
sbb
mov
xlat
icebp
add
pop
gs
fstps
mov
or
cmpsb
and
pop
in
xor
repz
daa
imul
or
out
jg
adc
jbe
mov
push
pop
cmp
dec
add
in
inc
mov
mov
mov
pop
xchg
fdivs
adc
add
int
pushf
mov
push
jp
xchg
rclb
xor
in
and
movb
repz
xchg
imul
adc
mov
cwtl
push
push
lret
jns
lock
sub
es
or
call
add
subl
inc
mov
add
jno
cmpsl
xor
out
pushf
cmp
jnp
jns
xchg
loop
ror
inc
rcll
aad
cs
mov
mov
dec
out
cmp
inc
xchg
repz
jo
or
mov
enter
rolb
and
mov
or
xor
mov
sub
int3
lret
jg
mov
lcall
push
cli
xchg
xor
push
mov
add
jo
pushf
repnz
sub
mov
add
sub
clc
call
sahf
xorb
sbb
fildl
mov
add
mov
cmpsl
push
push
testb
or
mov
jo
sub
mov
data16
push
sub
and
loope
pop
movsb
sbbb
push
add
xchg
rcll
and
add
pop
jmp
fsub
mov
jne
or
add
xor
fistps
pop
and
xor
iret
push
test
es
shll
pushf
sarl
mov
add
mov
or
pop
add
fstpt
mov
inc
add
pop
stos
cmp
jnp
test
pop
popf
xrelease
mov
sbb
add
jg
hlt
jecxz
adc
cmp
pusha
mov
bnd
ret
das
mov
sbb
in
dec
add
or
repnz
add
and
add
adc
jnp
add
mov
lock
jg
inc
jl
push
mov
add
sbb
loopne
rolb
push
dec
sbb
cltd
leave
aam
iret
mov
xchg
cmp
jecxz
in
mov
mov
popa
call
xor
loop
jb
pop
lock
xlat
loopne
test
pushf
fsubp
jne
int3
cmpsl
orb
mov
mov
xor
pop
out
add
cmp
call
aam
enter
ja
jge
add
mov
dec
nop
add
call
push
add
rcrl
ljmp
mov
shrb
xor
pop
divb
in
add
pop
mov
push
std
push
ror
popf
loopne
xchg
jnp
pop
add
cli
cmp
cld
add
and
dec
or
inc
mov
sub
and
and
pop
cmp
cld
mov
or
aaa
add
push
fwait
ja
or
add
shll
nop
divl
mov
in
xchg
sar
loopne
shrb
jbe
add
jno
push
add
ljmp
inc
push
mov
cmc
add
outsl
aaa
je
xor
add
sub
mov
add
std
and
dec
add
movsl
call
adc
scas
orl
mov
xchg
je
add
sub
xchg
push
sub
cld
lods
js
cmp
dec
test
daa
or
negb
in
add
clc
or
lods
or
and
fsubp
js
push
push
leave
sbb
add
lret
adcb
movsb
cld
mov
mov
cwtl
xchg
je
insb
lret
add
mov
jmp
pop
nop
sub
xor
add
mov
push
scas
call
mov
test
sbb
add
lds
sbb
jns
dec
cmpsb
xor
add
jnp
ljmp
add
mov
push
xor
mov
mov
jo
in
pop
mov
leave
imul
or
push
sub
sbb
sti
mov
sbb
stos
dec
testb
iret
test
jnp
lea
dec
iret
add
mov
int3
dec
xor
lods
shll
test
jae
add
or
mov
test
div
je
pop
pop
xor
shlb
stos
add
in
cmp
or
adc
mov
mov
add
rcrb
fcomps
pop
les
std
mov
inc
mov
mov
push
out
mov
fisttpll
repz
bound
aaa
xchg
add
enter
jg
hlt
in
add
stc
mov
inc
cmpl
je
dec
lods
inc
aaa
add
rclb
scas
gs
add
clc
jp
sbb
ja
js
and
sub
pop
neg
dec
pop
repz
dec
mov
sahf
jp
cmp
sarb
fildl
sbb
pop
add
sbb
cmp
mov
dec
adc
rorb
ljmp
add
mov
sub
pop
xchg
sub
or
push
or
enter
jge
add
mov
in
sub
sbb
jle
inc
rcll
sbb
jb
add
iret
repz
addr16
lods
push
add
mov
sbb
xchg
lds
mov
ja
mov
pop
fdiv
inc
add
pop
shrl
addb
rorl
rcrb
add
testb
dec
sarb
push
cltd
lds
sub
mov
and
and
or
add
arpl
les
adc
adc
pop
xorb
insb
fisttpl
push
mov
loop
jne
add
mov
cmp
aam
adc
mov
notb
out
inc
sbb
mov
sbb
mov
jmp
fstp
mov
xchg
rorl
fistps
add
loop
push
data16
clc
mov
add
jp
cltd
sub
mov
fcom
adc
or
add
lcall
ja
sub
push
mov
xor
push
cld
mov
scas
ljmp
inc
sub
movsl
pop
lods
cmp
cmpsl
push
test
lea
jb
cs
jle
add
shrl
and
popf
add
scas
push
add
mov
test
outsl
inc
test
jmp
xor
iret
xchg
dec
jecxz
or
test
mov
lods
pop
jmp
inc
push
stos
cmpsl
inc
jmp
jb
add
cs
xor
pop
push
dec
pushf
mov
shl
ret
cmpb
mov
or
cmp
or
repz
push
call
jmp
nop
inc
dec
adc
pop
dec
mov
push
lock
add
add
sbb
pop
dec
mov
and
push
or
xlat
jmp
repz
ret
inc
sbb
push
fldt
clc
xchg
mov
add
xchg
add
cmp
mov
adc
jg
dec
jmp
in
ss
gs
sub
imul
jae
loopne
out
clc
inc
add
cltd
pop
push
pop
and
mov
add
inc
mov
sbb
jge
insb
jmp
jnp
push
lock
pop
inc
lods
and
ljmp
sub
ret
jle
imul
lds
pop
pop
pop
lret
sahf
push
rorb
jbe
add
mov
stos
adcb
test
push
repnz
xchg
dec
es
inc
repz
lcall
arpl
lods
loope
loopne
xchg
add
inc
outsb
imul
mov
shl
popa
call
nop
or
push
inc
test
imul
pop
cld
stc
jne,pn
pop
add
rcl
addr16
aas
xchg
pop
add
cwtl
mov
or
adc
or
adc
push
clc
arpl
cmp
jne
mov
add
dec
add
push
inc
dec
dec
jge
sbb
adc
jle
ljmp
or
lods
lods
and
sbb
add
loop
push
dec
lea
add
sbb
fsts
jle
outsl
sbb
adc
or
dec
or
filds
mov
hlt
inc
pushf
add
adc
icebp
movsl
sub
pop
rolb
mov
sub
sbb
mov
add
xchg
jle
mov
int3
subl
add
cmp
mov
test
xchg
mov
mov
add
dec
dec
and
jle
sbb
leave
ret
aad
xlat
mov
xchg
loopne
fmull
push
into
push
pop
scas
adc
and
push
je
add
ret
cmp
lods
add
test
push
dec
jp
sub
xchg
sbb
push
xor
add
dec
mov
pop
repnz
xchg
push
roll
or
xorb
jmp
jl
mov
pushf
or
jbe
rol
pop
add
xchg
fs
pop
ret
xor
jae
cmp
sub
jb
add
aas
pop
mov
sar
or
int3
popa
mov
data16
cltd
out
jp
aas
lea
pop
pop
ljmp
sub
adc
sbb
add
add
repnz
aad
or
cmpl
adc
loop
jne
and
stos
sti
add
scas
and
add
call
in
or
das
mov
orl
pop
loopne
cltd
add
push
subb
pop
mov
fwait
jb
sub
or
pop
rol
icebp
mov
mov
cltd
sub
pop
out
xchg
fnsave
testl
loop
cmp
das
jne
mov
xchg
and
addr16
push
pop
repz
and
sub
mov
pop
pop
or
inc
cld
add
addr16
fs
mov
xorb
scas
pop
dec
and
inc
jg
xchg
or
jns
mov
fcompl
lock
test
or
sub
lock
add
sbb
fstpl
cmpl
push
jecxz
cmp
mov
push
xor
js
jge
jo
in
out
add
mov
xchg
inc
mov
int
fwait
mov
insb
dec
jp
mov
pop
lea
dec
jns
imul
sub
mov
movsb
rcll
push
enter
push
test
pop
sbb
add
adc
nop
addb
arpl
not
int
add
xor
lock
fsts
inc
mov
lret
sti
outsb
mov
add
clc
ret
imul
pop
ficoms
stos
xchg
ret
test
xlat
push
imul
lock
dec
enter
add
shl
stos
sub
jb
add
cld
xchg
adc
add
sbb
into
adc
cmp
add
mov
push
nop
jge
dec
mov
add
pop
les
fdivrl
push
or
mov
adc
cmp
mov
mov
add
iret
and
inc
inc
test
adcw
xchg
push
xlat
ja
or
jns
or
mov
jb
ds
jp
das
sub
inc
push
stc
in
jg
mov
add
mov
lods
data16
or
in
add
mov
xor
pop
jne
inc
inc
stos
xchg
or
and
jl
and
cwtl
loopne
jno
xchg
mov
test
in
gs
fdivrl
les
sub
lea
out
mov
lret
mov
std
push
lods
xor
mov
loope
add
cwtl
jle
mov
push
popa
lods
or
dec
imul
jnp
adcl
mov
or
mull
testb
add
add
mov
or
push
dec
mov
std
add
jmp
jg
add
dec
or
jmp
sahf
ljmp
ljmp
imul
cmp
add
mov
or
add
les
lods
jp
add
and
jmp
cmp
loopne
repz
add
adc
sbb
pop
xchg
js
ret
mov
push
and
sub
add
and
jae
jg
add
jge
cmp
sbbb
push
lcall
test
add
add
loopew
loopne
ret
psubb
mov
sti
add
je
push
jne
push
in
outsl
add
or
inc
cmpsb
aas
mov
adc
push
test
adcl
shr
cwtl
cmp
movsb
add
xchg
pop
push
push
dec
pop
mov
jne
or
mov
pop
add
repz
icebp
jge
push
nop
daa
xchg
mov
xor
push
add
incb
jle
sbb
pop
adc
adc
sub
jmp
or
jbe
cmp
mov
jo
roll
rcrb
sub
mov
xchg
xlat
inc
enter
in
push
and
mov
hlt
lret
jl
bound
pop
idiv
jp
push
pushf
stc
add
sub
nop
inc
sub
daa
jb
outsl
add
fldcw
add
cli
daa
push
shr
sub
mov
and
aam
add
stc
xor
inc
adc
xor
mov
and
loope
pop
cli
inc
jp
or
js
add
minps
fadd
xor
and
sub
test
fidivrl
mov
out
mov
adc
xor
inc
les
ja
sahf
jne
add
test
cwtl
xlat
xchg
nop
mov
add
test
shl
les
clc
ds
mov
lds
loopne
test
shrb
popf
xor
adc
or
jb
outsl
jo
imul
jno
jle
cmp
test
add
test
subl
dec
nop
cmp
adc
inc
adc
xchg
roll
jb
mov
lock
dec
outsb
rcll
xor
icebp
add
shll
fsubp
pop
add
add
loope
add
and
add
int
inc
adc
clc
insb
sbb
lret
sbb
add
jo
pop
xchg
add
es
xchg
call
lret
mov
jmp
js
dec
xlat
outsl
pusha
wrmsr
sub
add
add
pop
add
daa
sar
xor
xchg
pusha
lock
js
push
dec
mov
adc
lcall
lods
jecxz
cwtl
mov
sbb
testl
jmp
pop
aas
sub
or
add
add
add
jle
push
mov
neg
test
adc
pop
lods
pop
scas
mov
shll
xor
sub
cmpsl
mov
pop
pusha
jge
popa
xlat
jbe
add
pop
test
push
movsb
cli
std
imul
scas
add
push
push
add
or
adc
and
popf
push
fisttpll
cwtl
cmp
mov
or
and
jb
cld
std
add
jg
inc
and
ds
in
hlt
cmp
pop
rolb
sbb
in
sub
cmpl
str
sub
inc
cmp
test
add
mov
repnz
cli
mov
shlb
jp
lret
push
hlt
add
mov
paddusb
rcll
xorl
add
jmp
push
or
inc
psubd
and
or
inc
add
ja
jl
add
mov
mov
inc
and
adc
mov
mov
sbb
call
push
adc
push
and
inc
cld
pop
add
jge
or
cmp
cli
mov
mov
mov
sahf
sub
scas
loop
cmp
test
xchg
andb
mov
xor
add
mov
insl
mov
jne
push
ret
or
add
leave
sbb
adc
pop
add
test
mov
xchg
stos
sub
inc
lret
push
rclb
pop
fsubrs
xchg
add
xchg
dec
mov
enter
mov
shrl
sbb
or
dec
cs
iret
inc
mov
rorb
adc
xor
xor
cmpsb
add
push
call
add
add
filds
rolb
lret
inc
cmp
stos
adc
xor
mov
add
ja
add
daa
pop
add
mov
dec
fimuls
push
rorb
sbb
scas
pop
jbe
cmpsl
add
jo
xchg
daa
and
data16
andl
or
jo
jno
stc
pop
lods
aam
divb
insb
push
je
add
push
ds
ljmp
or
sbb
dec
dec
in
dec
add
js
les
add
add
mov
xchg
int3
mov
out
jmp
sbb
clc
adc
pop
sbb
push
add
push
mov
cwtl
cmp
int3
les
pop
fldcw
sti
xor
ljmp
int
aam
incl
and
pushf
xchg
push
in
out
pop
add
or
or
lret
pop
add
sub
les
cwtl
mov
adc
push
testb
sub
sub
add
pop
fs
sub
mov
pop
adc
adc
push
aas
and
pop
inc
cmp
cmpsb
cmp
jl
shrl
add
pop
push
add
fsubrs
pushf
clc
cwtl
xchg
cmc
add
mov
dec
add
int3
xorb
or
add
ret
add
pop
scas
jno
bound
in
stos
mov
add
arpl
int3
unpckhps
xchg
mov
or
or
pop
jnp
add
xchg
imulb
xchg
jmp
pop
adc
inc
cmp
cmpsb
inc
rclb
or
pmulhuw
shrl
mov
mov
sub
add
add
xor
les
iret
xchg
or
jmp
xor
pusha
idivb
mov
lock
mov
lidtl
inc
pop
ret
cmp
hlt
add
shll
add
scas
test
enter
adc
pusha
cmpsb
dec
repnz
je
sub
shlb
add
stos
xchg
dec
sub
add
sbb
test
cmpl
ret
ja
in
inc
sbb
outsl
add
xor
mov
push
scas
lods
sahf
fwait
add
adc
xchg
loop
add
pop
dec
pop
adc
xor
jae
add
loopne
lds
fisubrs
lock
sbb
mov
sbb
xchg
sbb
inc
add
mov
test
aad
xor
bswap
fsubr
ret
dec
loopne
ja
add
pop
lock
xor
add
les
mov
decl
or
inc
add
jmp
mov
js
push
cltd
ja
ret
lock
inc
call
pop
push
push
adcb
pop
add
add
pop
insl
cmp
dec
enter
jmp
ljmp
jne
pop
xchg
pop
cmp
dec
in
cs
movsbl
addb
setns
data16
cmp
push
lods
mov
push
xchg
pop
loop
pop
mov
dec
jle
cmpsl
add
and
rorl
popf
inc
xchg
add
jae
cmpsl
fcos
aas
inc
test
adc
dec
mov
add
fs
cltd
shll
ret
fdivr
sub
add
jae
sbbl
fstpt
in
mov
lret
lea
push
pop
add
je
in
pop
mov
mov
lods
enter
repz
jmp
pop
xor
and
ss
add
jns
sub
nop
xchg
add
pop
insb
cmp
lds
mov
jae
xor
and
mov
je
int3
dec
xchg
adc
or
leave
xchg
and
xchg
add
dec
daa
hlt
inc
shll
inc
dec
pop
ja
push
mov
sti
xor
stos
xor
movsl
mov
sub
xor
adc
xchg
out
sub
mov
std
mov
add
andb
jge
andl
cmp
pop
sbb
pop
insb
sahf
nop
push
jmp
sbb
xor
rcr
and
iret
ret
inc
cmpsb
add
les
add
push
cmp
xor
cmp
mov
insl
call
mov
dec
out
lcall
test
jns
or
push
add
lock
push
aas
push
cmp
inc
push
add
add
inc
and
mov
divb
sbb
loop
push
adc
push
in
inc
dec
add
push
sbb
dec
testb
jo
pop
xor
insb
pusha
pop
push
add
aaa
jno
loop
hlt
mov
mov
add
sbb
or
addl
scas
xchg
add
call
cmp
aam
jmp
cwtl
inc
call
stos
xlat
push
or
aad
enter
sbb
pop
cmpxchg8b
mov
or
adc
mov
add
pop
mov
jno
mov
lea
cmpsb
stc
xchg
add
scas
mul
lret
jmp
repnz
je
xchg
in
add
cmp
repz
lahf
add
cmp
and
push
iret
xchg
sbb
les
adcl
and
xchg
fsubs
test
clc
outsb
sub
push
sbb
adc
mov
shrb
adcb
or
jmp
dec
loopne
insl
idivl
jnp
xorb
push
call
shrb
mov
ja
sub
aam
sub
push
notl
sbb
inc
outsb
sub
mov
fidivrs
insb
push
testb
push
lret
mov
pop
add
cltd
dec
jmp
cwtl
outsl
movl
test
xlat
push
unpcklps
and
xchg
movsb
push
call
adc
xor
mov
mov
call
sbb
fidivrs
cmpsb
inc
nop
pop
xchg
sbb
sub
push
lret
mov
add
out
fidivs
xchg
or
add
add
sub
in
adc
adc
and
std
dec
and
lock
mov
stc
or
add
scas
add
and
insb
inc
sub
xchg
add
xchg
cmp
dec
int
roll
lds
pop
mov
sub
add
repnz
fcoms
xchg
dec
push
or
jg
loope
xlat
add
std
addl
sbb
movsl
add
lock
mov
cwtl
lock
add
frstor
add
stc
add
jo
add
dec
mov
adc
test
mov
cld
in
and
mov
adc
mov
push
add
addr16
pop
je
jmp
push
sub
dec
dec
dec
int3
lldt
or
pop
shlb
aad
mov
mov
roll
sti
sbb
test
add
fldcw
mov
pop
sub
xchg
sbb
mov
call
leave
cmovs
xor
fs
or
adc
xchg
dec
movsl
add
in
cmp
mov
push
add
int
sub
clc
add
sbb
add
xchg
lret
hlt
in
fildll
pop
mov
jp
pop
sub
nop
hlt
add
pop
enter
das
psubusw
inc
lock
adc
and
mov
jo
sbb
cmc
push
push
mov
inc
mov
or
sbb
dec
out
fldl
pop
movsl
xchg
icebp
push
dec
inc
imul
adc
or
add
out
call
add
add
add
and
cltd
or
xor
add
push
dec
mov
das
ret
add
mov
jae
cmp
add
rclb
sub
mov
and
das
pop
sbb
adc
pop
pop
fnstcw
shlb
lods
call
dec
das
xor
loope
or
cmp
ss
pop
pop
jl
add
popf
xlat
mov
cmpsl
add
xor
mov
aaa
add
shlb
cld
add
insl
xchg
add
pop
xor
lahf
mov
mov
les
jns
dec
mov
add
mov
or
sub
data16
cmpb
xor
xchg
jne
dec
pusha
add
setl
mulb
popa
mov
pop
jp
hlt
pop
dec
xor
and
xchg
jo
mov
add
or
pop
ss
add
inc
cmp
add
cmp
mov
cmpb
jne
and
add
mov
loopne
test
in
loopne
or
sub
stc
iret
jle
in
add
pop
icebp
loop
or
test
std
push
adc
repz
add
xchg
sbb
and
jno
add
dec
hlt
mov
ds
add
inc
mov
movsl
jb
mov
filds
cli
add
adc
add
adc
fisubs
sbb
sub
cs
or
sti
jg
popa
cld
or
inc
andb
jne,pn
add
xor
addl
iret
mov
int3
inc
jnp
cli
insb
cmp
ror
xor
out
jle
jge
jg
add
dec
mov
rolb
xchg
and
sbb
dec
jne
inc
push
lock
ss
add
jnp
add
cmp
jp
shll
pop
push
add
imul
xchg
push
push
lock
xor
fstps
add
push
lds
add
add
sbb
xor
decb
movsb
mov
push
setp
jmp
daa
icebp
adc
add
mov
lea
mov
outsb
add
mov
sti
mov
fistpll
jnp
andb
jb
pop
push
push
cmc
inc
fistpll
dec
sbb
add
shrl
ljmp
gs
sub
mov
divl
sbb
shl
rep
lock
add
push
xorb
mov
sbb
pop
dec
add
lock
arpl
push
das
push
hlt
jae
pop
add
mov
and
cmp
sti
xorb
lods
sub
hlt
add
xor
loopne
ss
add
sub
sbbb
cmp
pop
add
andb
sbb
push
xor
pop
into
mov
push
sbb
add
and
paddq
jae
jno
cmp
cs
mov
dec
add
les
scas
mov
sub
rolb
sti
jecxz
hlt
add
adc
cld
lds
stos
popa
out
leave
pusha
add
rolb
in
jne
or
cmp
add
clc
adc
aad
cmp
pop
int3
adc
and
enter
xchg
jp
mov
shl
push
jecxz
and
adc
push
add
les
pop
mov
push
add
push
insl
sbb
sahf
push
pop
clc
xorl
mov
xchg
add
push
rcll
jmp
cld
das
and
adc
gs
sbb
in
sub
ret
pop
lahf
inc
or
int
fcompl
pop
arpl
faddl
iret
push
dec
jne
mov
repnz
addr16
fnstsw
dec
add
int3
xor
in
sub
jnp
repnz
cmp
call
xorl
mov
lcall
out
dec
mov
add
xor
sbb
orb
arpl
pop
jmp
mov
xchg
or
lahf
loop
fbstp
movsb
ja
pop
shr
mov
dec
inc
mov
aaa
fdivrs
push
add
jo
push
nopl
and
and
fwait
repnz
add
aam
mov
shl
inc
fiadds
lret
fcompl
insb
je
sti
push
jge
add
aas
cwtl
scas
add
sub
inc
adc
call
je
mov
cmpsl
nop
mov
pusha
add
iret
ljmp
ja
pop
mov
add
and
ret
xor
add
inc
fcomp
mov
outsb
add
and
dec
dec
and
hlt
cs
lret
ljmp
ret
or
mov
mov
inc
add
sub
inc
leave
add
cmp
scas
stos
add
jmp
sbb
pop
add
movsb
push
fsubrl
pop
dec
or
ds
xorb
cltd
add
cmp
xchg
hlt
cwtl
inc
lock
add
inc
out
sub
sub
xor
xchg
orl
iret
and
out
mov
sub
cmp
sahf
add
push
loopne
lds
add
sub
mov
and
add
inc
dec
in
les
add
es
lds
je
mov
loope
pop
and
mov
dec
cmovl
cwtl
dec
pusha
es
aad
add
bound
cld
add
pop
sahf
xor
clc
lods
xchg
add
out
stos
test
add
popf
scas
imul
jb
fistpll
dec
sub
in
and
repnz
adc
idivl
sub
lahf
cld
mov
loopne
jmp
aaa
add
daa
das
test
mov
nop
add
mov
lea
dec
sub
push
int3
pop
scas
pop
push
inc
mov
mov
cmp
cmpsl
std
out
js
push
push
cld
ds
divl
pop
sbb
loop
add
or
fwait
jmp
lcall
xor
add
push
clc
lret
push
mov
and
ret
mov
jns
in
ja
loopne
bts
push
les
pop
fdivrp
add
mov
iret
rol
mulb
call
enter
add
fs
sub
ret
sub
xchg
cli
insl
in
add
fadds
fldl
gs
movsl
adc
adc
sbb
add
out
xchg
inc
dec
cmc
add
movsb
push
cli
in
add
xchg
cmp
aas
or
pop
rcrl
nop
xchg
jl
add
insl
xchg
push
sti
mov
push
cmp
jns
cmp
jmp
cmp
cld
xchg
sarb
cli
push
ljmp
movsb
and
hlt
jmp
aas
jmp
andl
addb
pop
mov
xchg
cmp
mov
cmpsl
xchg
rcll
add
lret
int3
pop
mov
out
and
or
fisubs
ljmp
repz
cmp
lea
aad
dec
movsl
dec
orl
call
push
jnp
mov
push
xlat
jle
int
dec
add
mov
add
cld
jmp
lock
jmp
adc
out
add
push
ffreep
mov
imul
clc
xor
js
cmp
mov
jne
sbb
xor
add
loopne
movsl
adc
aam
stos
cmp
out
inc
add
shll
dec
sbb
xor
xor
cmp
cld
orl
sbb
and
and
push
dec
adc
insb
paddsb
adcl
and
dec
int
jmp
push
movsb
gs
push
or
add
or
add
and
cld
add
imul
fcomps
add
cmp
push
arpl
les
add
cmp
xor
mov
add
sbb
jb
rolb
imul
push
mov
add
rorb
adc
pop
incb
rcrb
mov
xchg
push
fmull
dec
mov
jl
pop
lea
xor
sub
arpl
or
adc
adc
and
fcomps
xchg
inc
test
lock
add
inc
jl
repz
clc
sub
lret
test
rclb
add
lock
popa
mov
pop
add
inc
xchg
xor
and
push
lea
dec
pop
push
aam
mov
aad
xor
mov
loop
movq
mov
xchg
setns
add
push
or
add
call
dec
mov
std
fs
ret
add
inc
xor
push
add
push
xlat
mov
dec
mov
sub
in
sbb
dec
jnp
add
cmpsl
in
pop
mov
mov
mov
jbe
add
and
in
out
or
push
jbe
add
pusha
xor
ljmp
inc
jg
imulb
icebp
divl
or
imul
add
push
daa
das
in
jns
shr
adc
or
pusha
cwtl
nop
sub
push
add
dec
adc
pushf
xchg
jg
subl
call
aas
popa
mov
icebp
cs
push
dec
or
test
repz
add
and
das
mov
add
sub
mov
adc
lahf
pop
add
std
lds
cmpsl
and
icebp
sub
int3
mov
add
hlt
inc
push
movl
add
push
ja
lret
nop
jge
and
sahf
add
js
sub
lock
push
lea
add
fdivs
add
loop
pop
into
push
push
pop
add
cmp
inc
in
inc
sarb
jge
add
shll
fwait
pop
imul
lret
add
sub
pop
repnz
out
pop
movsl
pop
dec
sbb
cwtl
cmpsb
adc
sub
inc
push
icebp
mov
dec
mov
jmp
jo
add
sub
add
aas
sbb
xor
sub
shll
jmp
and
lods
dec
add
stos
in
cwtl
or
or
xor
inc
mov
pop
add
cld
adc
mov
mov
jmp
iret
sbb
or
inc
test
lock
dec
jo
add
aaa
out
pushf
sbb
rolb
movsbl
xor
sub
push
mov
dec
xor
cmp
aas
int
mov
add
repnz
xor
adc
pop
into
enter
je
add
xor
or
aaa
dec
inc
gs
pop
xchg
pop
push
movsl
call
ret
pop
and
and
and
pop
cltd
jns
or
jmp
sub
les
fcmovnb
in
stos
lods
add
adc
pusha
adc
add
loopne
sub
pop
add
sar
pop
and
inc
movl
ret
mov
es
xchg
pop
sub
lret
xlat
pop
inc
or
xor
dec
add
add
pop
mov
sbb
pop
and
xchg
add
ss
mov
mov
push
outsl
jmp
push
or
add
jl
or
mov
lds
pop
ret
jmp
xor
adc
jg
int3
add
sub
addr16
sbb
add
movsl
add
dec
adc
jmp
push
in
movb
call
je
push
xchg
ja
add
and
mov
dec
add
push
lods
jne
jo
add
gs
sub
enter
or
ja
push
add
xchg
icebp
dec
add
das
out
xbegin
cmp
push
cmc
mov
or
lret
imul
fwait
pushf
ja
dec
call
bound
add
jecxz
pop
pop
cltd
inc
dec
xor
inc
pop
mov
fcompp
dec
faddl
xlat
or
cmp
bound
add
xchg
mov
jecxz
push
pop
add
nop
or
and
jg
mov
adc
cmp
shr
mov
jle
mov
int3
push
add
gs
jge
mov
stos
cmp
xchg
pop
testl
ror
mov
add
jae
pop
push
mov
je
or
jg
imul
loope
cmp
rolb
pop
add
cli
aad
adc
nop
add
pop
addb
push
loop
pop
cmp
jnp
mov
in
test
lods
std
in
mov
push
adc
pusha
adc
subb
aam
xlat
add
daa
je
and
lret
loope
add
iret
mov
push
movsl
xlat
or
pop
sbb
xor
cmp
clc
fcom
or
pop
adc
add
cmp
adc
cmp
aad
inc
mov
add
cmpb
adc
inc
adc
pop
pop
add
add
jmp
cmp
add
or
icebp
jge
lret
adc
pop
mov
fnstcw
stos
add
pop
jge
je
mov
out
mov
roll
push
push
add
hlt
cmpb
inc
pusha
call
xor
inc
fidivrs
add
mov
add
cmc
sub
std
mov
in
pop
jnp
mov
push
jg
js
push
adc
sbb
lds
push
and
outsb
push
sbb
mov
sbb
pusha
popf
jge
add
aad
pop
push
cltd
cmp
subb
jmp
sar
lock
jne
jle
xorl
jg
in
and
stc
dec
fdivs
fwait
call
into
loopne
sbb
add
xchg
or
add
cld
data16
jo
mov
jne
add
addr16
repz
push
mov
dec
jne
and
sbb
pusha
and
cli
addr16
cmp
test
sbb
aas
mov
std
add
add
mov
add
push
mov
cmp
jne
mov
add
pop
cli
pop
div
popf
notb
or
add
dec
xchg
sub
scas
add
add
rolb
xor
mov
sbb
inc
sub
pop
shll
add
aam
push
bound
add
or
sti
jo
mov
jno
add
cmp
movsl
adc
xor
test
test
int3
data16
test
daa
adc
mov
ret
sbb
add
repnz
mov
xor
inc
scas
xchg
andb
out
dec
add
in
sub
inc
pop
repnz
sub
test
mov
testl
mov
pop
push
scas
ret
mov
and
lea
and
mov
adc
lods
fidivs
roll
shlb
ret
add
imul
cs
pop
enter
add
dec
sahf
ret
in
cmp
jle
lahf
mov
add
mov
fmull
lret
lock
test
arpl
cmp
add
push
add
adc
fmull
bound
xchg
cs
pusha
sbb
dec
divl
sti
and
push
add
add
mov
bound
ret
inc
push
movsl
add
adc
pop
pop
sub
imul
mov
call
jmp
and
mov
add
push
nop
or
pop
fwait
mov
dec
add
aam
in
test
movsb
lods
dec
or
pop
xchg
jg
cmp
repz
ret
out
fldcw
cwtl
push
add
jecxz
add
mov
pushf
add
arpl
pop
popf
icebp
cmc
andb
add
push
nop
mov
sub
add
lahf
outsb
std
add
mulb
addr16
test
ss
xchg
addl
mov
sbb
lret
lods
loope
or
push
push
nop
ds
movsb
addb
jne
jbe
fiaddl
mov
adc
push
pop
sub
daa
adc
pop
out
aas
sbb
mov
lock
in
xor
sub
adc
sbb
adc
mov
add
jecxz
leave
push
ljmp
bound
out
mov
inc
pop
mov
repnz
or
sub
vmovhps
mov
dec
add
dec
xchg
cmc
shrb
leave
inc
ret
adc
inc
pop
or
mov
test
clc
add
and
addb
adc
icebp
out
dec
add
add
pop
xchg
pop
add
or
adc
aad
popf
add
adc
xor
dec
enter
out
jge
xor
lock
mov
es
sbb
paddsw
pushl
and
clc
cli
sub
push
or
shlb
cltd
push
addr16
popa
lods
or
push
xchg
cld
mov
adc
dec
leave
mov
push
cmp
add
dec
xor
sub
sbb
and
imul
jmp
cmp
aam
movsb
enter
mov
daa
dec
jl
shrb
jge
add
mov
add
xchg
fcompl
add
rorb
add
push
sub
inc
mov
cs
insb
inc
gs
orb
jge
sub
add
add
fisubrl
sub
and
movl
arpl
lahf
inc
push
push
js
clc
outsb
pop
jmp
shl
sarl
xchg
mov
add
push
xchg
push
and
xor
add
mov
cmp
or
cs
dec
mov
ret
push
outsl
jo
test
fnstenv
sub
js
call
inc
mov
mov
rolb
mov
sahf
insl
add
add
sbb
mov
push
sub
scas
cmp
ret
dec
ja
rcll
mov
xor
pop
push
movsb
xor
push
and
mov
inc
adc
les
loopne
imul
in
push
dec
push
clc
add
iret
inc
xchg
and
and
add
xor
lock
popf
mov
pusha
xor
mov
test
repnz
mov
icebp
aas
sbb
call
in
daa
fists
and
add
mov
pop
push
push
movsl
mov
addb
loope
add
iret
xlat
sahf
rcrb
mov
push
pop
dec
xchg
outsl
add
test
ds
aam
and
mov
jecxz
test
mov
xchg
jmp
mov
mov
or
dec
subb
pop
div
js
pop
adc
cld
mov
jmp
mov
xchg
add
into
scas
lcall
xchg
cld
jg
add
stc
and
add
jmp
jl
gs
aas
dec
test
pushf
jp
mov
idivb
shl
fdivrl
add
pop
dec
je
cld
loopne
xlat
repz
and
sub
notl
add
imul
cwtl
insb
fiaddl
sbbb
pop
inc
and
add
or
mov
lahf
lock
pop
mov
add
jl
mov
add
mul
mov
ljmp
xchg
add
jae
add
test
decb
aam
mov
je
add
add
mov
jmp
aam
fdivrs
xchg
push
xor
cli
pop
pop
fucomip
inc
lret
inc
pop
push
xchg
jl
clc
test
xchg
addl
and
cmpsl
scas
mov
call
loopne
jne
int3
shlb
pop
or
lock
jnp
pop
add
mov
push
adc
scas
daa
inc
jb
push
mov
mov
jns
shrb
add
cli
push
lods
subl
add
call
push
stc
or
sbb
sub
aam
std
outsl
je
push
aas
rclb
fs
add
idivb
and
inc
or
jbe
js
rcrl
adc
and
add
pusha
shr
cltd
bswap
insb
sub
sbb
add
mov
sahf
ret
roll
xlat
sti
arpl
mov
into
lock
mov
add
push
icebp
add
addr16
pop
push
lods
arpl
mov
add
and
sbb
mull
mov
je
mov
push
pop
lods
dec
sahf
movb
ret
push
roll
out
inc
cmp
lods
push
adc
adc
ffree
fs
xor
sbb
popf
addb
cmp
in
xor
dec
mov
in
push
sub
mov
adc
cli
mov
mov
fisubrs
fwait
andb
inc
inc
mov
adc
leave
push
mov
mov
sbb
mulb
push
xlat
sbb
mov
jp
out
add
sti
xor
popf
add
xchg
icebp
cmp
adc
dec
les
mov
xchg
sbb
inc
mov
insb
es
shll
cmp
sub
add
mov
inc
in
fstpl
xchg
idivb
or
and
push
cmp
mov
cmc
stc
mov
inc
mov
int
mov
adc
sarl
lds
and
les
pusha
imul
jae
clc
lock
cmp
sbb
or
pushl
add
mov
and
mov
stc
cwtl
inc
xor
add
std
dec
lds
loopne
add
add
xor
mov
add
in
sub
ds
movsl
or
add
arpl
add
push
insb
pusha
movsb
sti
addr16
hlt
mov
ret
inc
cmp
inc
pop
add
add
lea
inc
push
sub
lret
pushf
add
mov
fnstcw
out
add
push
mov
or
sbbl
dec
add
outsb
lods
stc
push
in
jnp
add
or
mov
jne
dec
jp
int
enter
cmp
push
popf
addb
test
adc
dec
mov
push
push
leave
or
jo
inc
fcoms
in
scas
dec
pop
pop
xor
add
mov
aam
ljmp
xor
or
adc
mov
add
mov
sti
or
mov
clc
cmp
shr
out
add
add
cwtl
mov
mov
pop
jne
cld
jle
hlt
jle
add
roll
mov
int
jle
verw
push
in
add
pop
sub
repnz
mov
sub
add
sbb
dec
or
mov
and
add
jbe
xor
or
sub
cmp
pop
push
add
fs
xor
sub
int
test
sbb
testb
popl
push
mov
jmp
xor
xchg
xor
repz
ret
add
loope
add
sub
loopne
in
add
push
call
xor
pop
mov
and
stos
mov
out
icebp
push
out
pop
call
push
loope
sbb
add
cmp
bnd
mov
out
fsts
nop
fs
add
push
xchg
nop
imul
imulb
adc
add
inc
add
and
fiaddl
add
adc
mov
and
and
fs
movl
mov
cmove
ds
adcb
adc
mov
movsl
and
mov
jne
add
lods
out
orb
adc
dec
pop
jnp
hlt
in
lret
mov
mov
sub
xor
or
and
mov
adc
add
cmp
enter
ja
imull
sbb
cmpl
add
insb
push
jmp
inc
push
add
inc
pop
mov
lock
push
add
push
cwtl
mov
test
clc
mov
add
add
inc
pop
or
jge
add
int3
pop
inc
jle
adc
xlat
roll
cmp
add
ret
or
cmp
add
xor
shll
add
dec
pop
jb
popf
pop
scas
lcall
xchg
adc
push
inc
mov
add
je
insb
stos
mov
add
jmp
out
push
add
xor
hlt
adc
push
push
adc
call
mov
mov
mov
sbb
add
call
clc
lahf
add
ret
mov
xchg
sbb
sbb
dec
sub
adc
adc
xor
mov
outsb
fs
and
inc
adc
cmpsb
scas
aas
sub
stc
pop
cld
push
xchg
jnp
add
cmc
jge
xor
cmpb
pop
add
cld
push
call
push
adc
sti
and
lea
js
xorb
mov
cmp
add
mov
out
push
push
add
jecxz
repz
rorb
add
mov
push
clc
xchg
add
cmp
jne
dec
mov
sbb
adc
add
je
sub
add
mov
movsl
mov
subl
call
fs
add
fidivs
addl
rolb
clc
call
aam
mov
add
push
add
and
pop
jae
add
xchg
inc
insb
mov
lock
pop
fmull
adc
sbb
inc
xchg
repz
dec
adc
sub
test
stc
fsub
add
xor
insb
or
add
decl
mov
fs
add
push
adc
cmpb
ljmp
push
inc
inc
in
adc
pushf
ret
loop
inc
sbb
cmp
sar
test
and
or
adc
cmp
mov
mov
add
inc
and
jl
test
add
popa
push
jg
les
add
or
aam
adc
mov
push
call
add
xchg
inc
sbb
and
xchg
jl
and
add
lret
xchg
sub
add
adc
add
adc
push
jae
cmpb
mov
rorb
adc
cs
outsl
andb
adc
test
dec
sub
adcl
or
arpl
in
or
push
movsl
or
nop
les
stos
test
dec
xor
cmp
jnp
lock
dec
inc
xchg
lods
paddusw
loopne
adc
jmp
mov
add
xor
or
or
cmpsl
seto
lods
xchg
xor
shlb
adc
dec
sbb
les
cmp
dec
mov
loop
cmp
enter
push
in
stc
push
sbb
mov
add
mov
xor
mov
js
fcoms
pusha
push
mov
nop
dec
popa
hlt
or
and
pop
or
jnp
add
fisttps
aas
xor
xorl
sbb
mov
lahf
xor
into
call
xor
and
sbb
sub
dec
mov
adc
add
pop
clc
cmp
xchg
popf
add
or
in
pop
dec
sbb
jbe
rorl
enter
rolb
xorb
add
and
mov
jns
aas
mov
add
loopne
xor
sbb
sbb
loope
ss
inc
ficomps
cld
xchg
stc
cltd
inc
repz
adc
add
xor
jg
loopne
dec
cmp
test
inc
out
add
call
and
or
mov
pop
mov
call
add
push
ret
movsb
or
adc
add
ja
xchg
pop
add
leave
js
popf
les
pop
cli
push
push
mov
mov
andb
inc
dec
add
pop
adc
dec
pop
add
mov
sub
rolb
and
pushf
adc
sbb
xor
shrb
lock
loopne
xor
adc
mov
sbb
xor
leave
or
xchg
push
add
add
shr
stos
subl
arpl
maskmovq
mov
cmp
jle
inc
jne
lods
sub
sbb
sbb
inc
dec
sbb
pop
add
xchg
jbe
imul
or
add
xorb
fwait
sub
mov
xor
mov
sbb
jl
cmp
xor
add
lods
pushf
add
std
icebp
cld
loop
lock
inc
sub
mov
cmp
sub
out
ret
add
mov
mov
shll
and
stos
ret
push
rorl
sbb
ss
rolb
jmp
int3
loopne
mov
fsubp
sbb
mov
sub
dec
mov
xor
or
mov
nop
xchg
add
shr
jl
lret
imull
jbe
mov
push
das
iret
aas
jge
add
inc
jne
inc
and
subb
scas
dec
jnp
int3
jno
call
movsb
sub
add
inc
add
jbe
in
or
lea
inc
pop
mov
and
int3
pop
add
bswap
scas
inc
mov
pop
add
mov
push
ja
push
sbb
inc
xchg
sub
push
add
movsl
repz
cmpsl
incb
inc
pop
lahf
adc
jbe
xchg
add
sbb
push
sub
in
pop
add
fimuls
imul
add
xchg
cld
mov
cmp
into
mov
cmp
int3
sub
adc
sti
jb
push
add
sbb
push
add
sbb
add
push
sub
push
pop
scas
push
bound
jge
ret
stos
add
fstpl
push
loope
dec
jmp
inc
dec
and
scas
lock
sub
sub
or
jg
mov
jo
daa
stos
jbe
push
jmp
mov
nop
sub
es
aaa
add
stc
rol
pop
je
jno
add
inc
xchg
repz
mov
pop
add
xchg
and
push
cmp
pop
xor
jo
popa
cmp
jns
xchg
push
arpl
xchg
outsb
popf
add
imul
add
dec
sub
es
cwtl
sti
repnz
add
cmpb
and
outsl
imul
in
jae
jg
icebp
repnz
lret
imul
push
aam
std
out
out
add
jb
iret
ljmp
pop
add
cmp
adc
mov
push
out
cmpsb
lock
jmp
leave
cld
dec
jge
inc
xchg
jbe
jae
stc
lea
jl
push
in
mov
xchg
lcall
into
push
add
fstl
push
add
mov
push
stos
add
cmc
inc
add
sub
pop
jmp
movsb
addr16
push
and
or
xlat
inc
push
pop
cld
add
mov
fsqrt
mov
pop
sub
test
dec
fstpl
jmp
cli
cld
and
js
ret
pop
mov
call
jnp
out
sbbl
add
or
jb
jae
jle
mov
mov
fadds
pop
cmp
push
call
sub
sahf
iret
mov
mov
xor
ljmp
cmp
jno
call
enter
std
fmull
adc
jle
inc
pop
push
pop
into
mov
push
cli
lret
call
mov
call
add
jp
mov
adc
shrl
pop
in
test
inc
mov
adc
pop
push
call
imul
imul
dec
dec
xchg
or
loopne
push
add
les
out
push
incl
and
rcl
lahf
add
jb
addl
ja
xchg
cmp
fwait
add
js
xor
jnp
sub
daa
add
pop
push
imul
cs
mov
clc
mov
jne
push
dec
out
addl
rcr
js
add
pop
mov
test
xchg
mov
sub
sti
add
sysret
xchg
inc
inc
pusha
xor
adcl
jns
mov
xchg
pusha
mov
or
fwait
idiv
add
xorl
push
lea
sbbb
push
in
jmp
push
mov
call
add
or
cmp
adc
xchg
mov
adc
pop
inc
popa
pop
inc
push
adc
and
or
xlat
mov
dec
cmp
xchg
add
insl
outsl
push
fs
outsb
inc
je
jae
jo
mov
cmp
inc
pop
mov
out
add
popf
test
incb
aad
int3
clc
push
add
add
jb
inc
and
add
add
jne
lahf
out
shrb
add
dec
sarb
fsubrp
loope
or
jl
add
dec
adc
push
bound
jae
cwtl
sub
adc
add
push
cmp
test
ds
add
inc
add
test
cmp
ss
add
jl
push
mov
inc
pop
pop
dec
sarl
adc
hlt
jnp
mov
inc
int3
push
inc
test
repz
xor
out
jle
in
cmp
movsb
mov
ret
mov
gs
cmpsl
cmp
add
inc
push
and
add
mov
fstpl
xor
mov
pop
jge
sbb
aam
push
pop
mov
lock
xlat
mov
push
in
sub
cmpsb
test
dec
xor
push
and
pop
inc
lock
dec
add
ljmp
inc
adc
or
push
dec
sub
sbb
pop
and
inc
sub
jo
push
cwtl
das
jb
mov
or
mov
in
or
jle
add
pop
add
fs
add
das
imul
out
inc
scas
and
in
cmp
add
jne
inc
lds
or
jle
pop
shlb
push
clc
cmp
loopne
or
mov
mov
addr16
fisubrl
add
add
inc
lcall
adc
mov
mov
jae
jbe
add
inc
clc
push
xorl
and
jl
cmp
mov
fdivr
xor
mov
arpl
xchg
pop
add
jno
orb
dec
in
jne
cmpsb
dec
roll
adc
mov
push
jmp
add
cmpsb
add
adc
xorl
fisttpll
mov
aaa
leave
jmp
adc
data16
mov
add
imul
add
dec
fimull
jo
cmpb
cmpsl
lahf
rolw
arpl
and
add
and
pushl
pop
cmpsb
insb
jmp
adc
mov
jg
add
sub
inc
add
call
xchg
rcl
adc
adc
loop
xchg
adcb
lahf
jp
add
jnp
repz
add
outsb
push
pop
add
loopne
mov
xchg
add
aas
movsl
mov
jg
shr
and
add
or
inc
rcrb
insb
and
jns
or
les
pop
in
add
inc
xchg
or
xor
gs
add
push
sub
hlt
fisubs
inc
repnz
add
xchg
inc
push
xchg
xlat
inc
inc
and
xor
add
mov
push
mov
js
add
rorl
jle
push
addl
fwait
xchg
test
js
test
shlb
pfrcpit2
add
push
les
imul
repnz
rcr
call
and
mov
sbb
push
loopne
jne
pop
dec
lods
mov
gs
roll
cmp
push
pop
andb
add
inc
push
lock
add
sub
sbb
outsb
jle
or
sbb
subb
fsubrs
pop
dec
pop
jo
rolb
fwait
mov
pop
cs
fmull
aas
arpl
inc
enter
sbb
call
sbb
lods
xchg
test
inc
add
sar
inc
add
jne
fstp
inc
mov
stos
or
mov
leave
inc
add
out
push
in
jl
sbb
jmp
sarb
push
or
sbb
xor
add
repz
dec
adc
jbe
jae
add
outsb
xchg
rcrb
push
fnstcw
push
add
pop
rcll
in
mov
add
out
rolb
or
sarl
add
sbb
cmovp
add
push
or
cmp
gs
jb
add
jne
dec
mov
subl
js
jl
sbbl
sbb
lods
mov
popl
int3
movsl
roll
cmp
and
mov
out
add
psubsb
adc
push
mov
xor
add
bound
mov
in
call
gs
loop
ficoml
arpl
fucom
cld
mov
das
add
nop
mov
or
add
xlat
iret
cltd
dec
lea
xchg
aam
je
fs
call
ja
mov
fwait
shrb
fcomp
cli
add
call
push
add
out
add
mov
push
fildll
mov
movsl
in
or
xchg
pop
sar
add
inc
or
jns
add
and
cmp
jne
int3
lock
pop
xor
mov
pop
inc
mov
ds
mov
sbb
add
cmpsl
clc
ret
add
das
dec
sub
xor
cs
cltd
sarl
adc
es
xchg
sub
xchg
xor
inc
dec
xor
mov
decb
cltd
shld
and
add
lea
lcall
les
mov
add
lock
add
enter
lcall
add
mov
lret
pop
ljmp
js
add
pop
add
dec
test
cmp
add
xlat
out
sub
add
jmp
enter
add
adc
mov
add
call
nop
xchg
inc
imul
push
ret
loopne
or
cld
pusha
sub
pusha
loopne
add
pop
push
pop
lock
aam
xchg
aas
aam
add
faddl
lock
insl
add
inc
in
es
fsts
push
add
pop
in
clc
dec
mov
jne
int
sub
xchg
or
xchg
insl
push
xlat
mov
and
pop
push
pop
rorb
divl
fcomps
enter
mov
and
dec
cwtl
jae
and
decl
sub
cmpsl
fcoms
mov
jo
xchg
mov
push
insl
jmp
adc
ja
pand
ret
jg
pop
and
pop
sub
orb
enter
movl
insb
sbb
cmp
icebp
jg
lea
adc
movl
jmp
push
sub
and
inc
sub
jge
or
ret
push
add
mov
add
inc
adc
adc
cmp
data16
jp,pn
pop
cmp
jg
test
push
ret
cmpb
je
push
dec
pop
mov
popa
inc
sub
xchg
and
push
sbb
xor
cmp
xchg
dec
sub
push
cmpsl
mov
lret
jmp
aas
shl
add
cmp
or
jmp
rcrb
pusha
cli
push
jo
cmp
xorb
pop
xchg
rcrb
outsb
in
shlb
add
lret
cs
pop
pop
sarl
sbb
cld
pop
leave
rolb
insb
inc
mov
add
jl
aam
testl
sbb
mov
gs
mov
cltd
pushf
or
adc
sub
hlt
nop
dec
lods
arpl
icebp
mov
push
mov
lock
je
lock
cmp
xchg
jle
mov
cmp
hlt
cmc
add
mov
js
add
test
dec
popf
inc
add
add
pusha
cmp
rcrb
pop
push
shl
jl
adc
sar
shlb
dec
cmpsb
cld
enter
stc
xchg
or
sub
repz
hlt
mov
andl
and
push
xchg
or
lcall
add
cltd
dec
sub
sub
cld
push
push
jbe
movsl
frstor
or
and
fldenv
bound
xlat
xchg
cs
add
dec
aas
imul
add
out
jo
cltd
add
jnp,pn
mov
lcall
arpl
jns
rorl
fldt
imul
sbb
orb
jo
sarl
and
jl
jbe
in
add
test
dec
and
xchg
xor
xchg
incb
ret
mov
fists
add
or
pop
or
les
cmp
inc
mov
push
sbbb
addl
imul
push
roll
clc
push
addb
pop
mov
push
pop
cs
inc
xlat
stc
add
dec
jge
push
sarl
xor
inc
pop
mov
mov
lock
add
aas
test
jo
test
cmovb
push
in
add
add
inc
push
lret
cmp
sbb
test
int3
xor
add
pop
add
ljmp
push
jg
rep
adc
and
xchg
mov
sahf
and
sub
movl
sub
lea
adc
push
mov
inc
jnp
add
pusha
sbb
push
adc
test
insb
or
std
push
lret
mov
add
jbe
cmpb
xchg
add
outsb
into
lock
pop
mov
inc
imul
pusha
add
loope
movb
adc
jle
add
stos
or
rorl
leave
mov
sbb
push
jno
add
fstpl
cwtl
add
push
mov
pop
loop
imul
lods
xor
rcl
ljmp
aaa
sub
pop
add
add
lock
test
mov
xlat
dec
pop
dec
sarb
xor
or
inc
and
rol
mov
jne
cmp
inc
push
push
sub
cltd
out
lock
out
jae
nop
cmc
mov
mov
aad
das
xor
mov
and
imul
add
adc
loope
lret
leave
loop
std
ror
add
xor
and
sbb
cld
add
add
pop
jns
pop
mov
add
inc
add
xor
clc
and
add
mov
enter
push
clc
incb
sbb
out
shrb
add
dec
ror
rorb
icebp
xorb
mov
add
or
add
lret
push
ror
insb
add
sbb
testb
in
lods
adcb
cmp
lock
nop
adc
xchg
call
mov
add
and
xor
push
mov
in
sbb
sub
cmp
inc
cmp
inc
call
jp
dec
push
rclb
push
xchg
or
mov
test
xchg
in
push
xchg
dec
sbb
sub
add
xchg
pop
stos
fsts
clc
scas
es
push
or
add
addb
loopne
nop
pusha
mov
xchg
fs
push
inc
jo
je
add
js
jl
inc
mov
inc
cmp
push
push
pop
mov
push
test
xchg
fidivrs
ret
nop
ret
mov
xchg
cmp
ds
dec
xchg
inc
xorb
loop
movsb
mov
add
xlat
int
fldl
out
inc
xchg
add
pop
fnstsw
shrl
lock
add
fisubrs
add
ficoml
pop
mov
lods
adc
popa
movb
std
rcl
cmpsb
dec
loope
add
lds
add
pop
ds
mov
dec
fld1
push
jne
lret
and
add
sarb
repnz
and
sub
aam
push
nop
fsubrs
loopne
ret
test
or
aaa
add
in
cmc
and
add
mov
aad
mov
das
mov
bound
xchg
push
sub
mov
hlt
in
cmp
push
lods
and
orb
clc
pop
mov
push
into
adc
stos
cld
inc
test
cltd
mov
add
inc
andl
popf
push
sub
pop
add
or
jp
or
push
adc
and
sbb
enter
sahf
and
sub
push
add
in
xor
cmp
lock
lods
xlat
movb
cli
call
mov
fmuls
mov
add
out
adc
subb
in
and
loopne
cmp
sarb
sub
or
or
and
push
aas
fidivrs
out
shl
frndint
add
jl
and
inc
loope
ret
test
jg
ret
nop
subb
addr16
add
and
push
inc
add
int
rorb
cwtl
mov
cmp
xor
or
shl
lock
insb
nop
inc
and
inc
add
repnz
jp
cmp
and
push
rorb
mov
add
dec
mov
mov
repnz
push
fsubl
xchg
pop
jo
add
push
sti
or
jne
aam
xlat
xor
and
shll
pop
js
push
sbb
xor
push
add
sbb
and
cmp
add
pop
push
jp
sbb
xor
xor
and
or
add
pand
dec
and
lods
ja
rcl
xor
add
repz
add
out
into
mov
or
iret
sub
adc
scas
cmc
mov
add
sub
xchg
push
loopne
fs
sbb
add
inc
mov
push
ljmp
mov
cmp
imul
sub
pusha
ljmp
cmp
sbb
and
or
stc
xchg
jno
std
sub
cmp
aas
addl
int3
or
add
push
bound
and
rolb
iret
inc
popl
enter
ret
scas
adc
cmp
testb
js
push
enter
push
movl
and
pusha
mov
aam
rcll
add
sbb
lea
fdivrs
adc
add
sti
shl
roll
adc
inc
and
out
loope
add
fcom
pop
and
lock
or
mov
or
scas
pusha
in
sbb
inc
je
and
mov
loopne
clc
mov
jo
flds
outsl
push
addr16
add
push
mov
imul
rclb
inc
xchg
pop
add
push
jno
xchg
or
pop
dec
add
popf
insl
mov
hlt
push
pop
xchg
lcall
ret
dec
pop
add
xchg
pop
mov
add
fimuls
cmp
add
popa
mov
or
jo
mov
pop
adc
sbb
loopne
daa
mov
or
test
out
aam
add
xchg
cmp
pop
shl
fnstenv
add
cltd
cmp
cmp
clc
adc
inc
xor
add
lods
les
or
add
mov
in
sbb
xor
mov
ljmp
inc
out
into
fdiv
mov
and
cmpsl
and
jle
add
mov
add
push
adc
ret
movups
add
xchg
int3
and
nop
mov
mov
hlt
out
inc
fldl
mov
and
and
dec
jle
outsl
mov
or
sub
cmp
negb
adc
push
add
adc
or
dec
xchg
adc
add
lea
add
or
rolb
add
and
xchg
roll
pop
lds
add
call
add
dec
pop
outsl
fimuls
daa
add
ja
imul
jne
add
push
int3
push
pop
inc
adc
push
rolb
inc
addr16
stos
and
add
or
fdivrl
push
je
adc
add
test
add
popf
ss
add
dec
andl
out
pop
adc
mov
jge
outsl
xor
aam
stc
sub
inc
adc
mov
es
sbb
jecxz
and
add
lret
es
or
mov
aam
mov
ss
add
sub
std
in
mov
inc
adc
pop
or
sbb
xor
adc
lret
or
and
or
xchg
sub
wrmsr
sub
setns
or
cmp
cs
rcr
mov
push
lds
mov
roll
scas
cmp
push
xchg
insl
loop
push
push
and
add
je
add
add
sarl
lret
push
fimull
movsb
mov
enter
lahf
sbb
cmp
sub
pmulhuw
cmp
inc
mov
adc
adc
or
js
push
aam
sub
or
or
lret
xor
or
sub
adc
xchg
and
insl
int3
mov
popl
sub
xchg
or
aaa
and
addl
sub
shlb
dec
fiadds
mov
adc
mov
imul
or
sub
xchg
jle
cmp
push
pusha
repnz
adc
add
psllw
xor
repz
cld
or
inc
push
repnz
into
or
loop
cld
adc
mov
cmpsl
call
lret
sub
les
inc
inc
add
push
sub
dec
xor
pop
jge
cmp
pop
xlat
dec
dec
stos
sbb
in
lock
sbb
sub
xor
clc
adc
push
rorb
push
addl
pop
les
sbb
in
push
orl
xchg
dec
sub
cli
jl
inc
cmp
adc
cmpb
sbb
adc
add
arpl
push
add
ss
sub
adc
cmp
xchg
add
and
add
dec
in
push
in
push
and
bound
jb
movsb
aaa
or
mov
das
xchg
xor
dec
inc
enter
add
lds
jno
or
dec
pusha
sahf
cmp
stc
sbb
or
sarb
add
pop
addb
pop
je
add
sarl
mov
mov
out
repnz
mov
push
fiaddl
les
add
mov
pop
dec
nopl
lods
push
enter
and
aad
or
idivl
hlt
nop
xchg
push
add
ds
pop
pop
xchg
mov
nop
adc
repnz
add
jne
nop
or
jp
add
xor
rcrb
lods
dec
and
pop
dec
pop
sbb
and
in
xlat
or
cmp
cli
add
enter
pop
push
add
or
xlat
xlat
dec
xchg
or
popf
and
or
aam
cmp
xor
jnp
add
xlat
adc
add
push
psrlq
orb
pop
jns
add
or
inc
repz
insl
sahf
add
rcll
jns
addr16
dec
sbb
mov
push
and
push
xchg
movsl
fisubs
pop
dec
cmp
push
inc
pop
and
mov
int
bound
aas
dec
jp
popa
dec
rol
jo
and
xor
mov
push
in
xor
lods
mov
lcall
jl
mov
lret
je
aaa
add
pop
sub
insl
pushf
xchg
cmc
sbb
push
jmp
jb
in
xor
aaa
jge
jae
xor
sbb
loopne
mov
push
push
mov
pop
jg
inc
out
dec
or
jb
jo
mov
shlb
sub
dec
leave
test
in
into
jae
lock
push
push
mov
mov
je
cmpsb
xor
sub
jno
cld
xor
sahf
add
pop
xchg
xchg
ucomiss
loop
jg
add
test
jmp
and
inc
jne
pop
jmp
mov
js
sub
gs
pop
iret
adc
vfnmsubpd
push
jmp
into
sub
imul
movsb
inc
ja
add
sub
cmp
sbb
and
fcoml
repnz
mov
lods
add
xchg
dec
sbb
or
push
add
inc
xor
cs
mov
mov
jnp
test
pop
and
leave
repnz
lret
xchg
or
add
inc
add
das
and
jnp
dec
fisubl
shl
lahf
stc
test
sbb
loopne
xchg
and
inc
sub
mov
mov
add
sbbl
add
lea
cmpsb
adc
clc
add
ret
repz
lret
adc
cmp
ficoml
std
mov
xor
mov
sti
ror
pop
xor
adc
fcom
out
add
aaa
sbb
lock
inc
jl
pop
mov
insb
sti
loopne
push
add
rol
or
or
test
sub
pushf
test
sbb
je
and
rclb
add
fadds
sub
add
inc
jmp
cmp
pushf
mov
or
mov
mov
lods
add
dec
jnp
call
mov
or
popa
push
les
sbb
leave
and
aaa
jno
nop
sub
mov
rorl
add
add
push
test
dec
cmp
popl
xor
inc
outsl
add
sti
and
mov
add
and
sbb
sahf
popa
lret
aas
pop
mov
adc
inc
mov
push
adc
add
test
insl
adc
rol
sbb
add
dec
mov
bound
stos
cmp
pop
ret
dec
cmp
test
jp
jle
inc
sbb
or
hlt
push
inc
nop
jo
add
inc
mov
push
adc
cmp
adc
pop
jmp
mov
movsl
and
sub
test
out
inc
fstpl
cmp
addr16
sbb
xchg
add
add
xchg
dec
jmp
jnp
ljmp
or
sbb
sbb
mov
add
pop
call
mov
loope
jnp
xchg
mov
or
mov
push
cmp
pop
push
lods
inc
andl
clc
or
pop
pop
adcl
repnz
shr
mov
stos
mov
rol
les
add
xor
je
mov
pop
xor
mov
cmpb
test
dec
cmp
or
lock
es
add
sbbl
out
push
xor
dec
adc
popf
roll
repnz
mov
push
in
sub
jmp
push
loopne
imulb
dec
push
pusha
pop
xchg
fsubrl
aas
daa
fimull
pop
dec
push
push
cmc
lea
and
insl
jns
xor
test
push
addr16
insb
nop
jg
mov
nop
loop
loopne
pop
jns
push
push
xchg
addl
dec
js
push
arpl
push
ret
jl
shll
and
aas
repnz
pop
or
mov
je
pop
sbb
lret
icebp
mov
insl
add
test
sub
add
push
mov
mov
push
jae
or
cmc
jns
outsb
enter
or
addr16
pop
jecxz
push
add
leave
ret
insl
and
dec
rcrl
sub
xchg
lret
and
orb
or
dec
data16
jecxz
mov
ret
add
push
cmp
mov
sbb
call
shll
inc
scas
enter
test
nop
mov
xor
or
shll
outsb
mov
push
enter
ja
daa
stos
cmp
add
xor
shlb
push
mov
sbb
cmp
adc
xchg
mov
sub
or
dec
lret
pop
add
fsubl
rep
cs
push
out
orb
outsl
arpl
mov
inc
jp
sub
in
orl
lock
cli
aas
mov
unpcklps
scas
and
or
mov
add
adc
mov
incb
mov
mov
testb
and
jecxz
enter
xchg
roll
loop
mov
mov
int3
push
push
inc
and
mov
mov
and
add
movsl
dec
cmc
cmp
adc
jg
adc
add
pop
add
sbb
loopne
int
andl
add
dec
push
add
ljmp
add
int
mov
jl
lock
xor
sti
add
lods
repz
fsub
xlat
add
adc
add
repz
xchg
shr
push
repnz
jge
xchg
add
dec
adc
add
xchg
mov
mov
call
add
or
sahf
sub
pop
add
mov
and
dec
lock
pop
mov
add
pop
mov
and
add
push
in
cli
enter
add
loop
lods
pop
cmp
cmpsb
popf
push
pop
popl
das
pop
inc
pop
xchg
adc
mov
mov
out
add
push
adc
mov
mov
stc
add
adc
cld
cmc
nop
pop
es
cli
dec
add
scas
sub
adc
out
cltd
cmp
movsb
add
jne
and
adc
sub
in
dec
cwtl
nopl
or
rcrl
repz
aaa
inc
xchg
fsubr
sahf
add
daa
mov
stc
pop
cwtl
inc
jmp
pop
lret
punpcklwd
sub
mov
test
mov
sbb
adc
or
or
int
out
add
cmp
push
in
sub
mov
and
adc
add
add
test
das
andb
nop
adc
add
lcall
ds
pushf
push
add
and
add
js
cmp
dec
in
or
aas
lds
dec
sub
and
pop
inc
subb
or
push
xor
mov
add
mov
in
sub
xlat
adc
mov
push
mov
xchg
or
cmp
inc
cmpl
add
push
sbbb
mov
sbb
mov
cmp
in
mov
adc
call
inc
mov
sub
out
mov
nop
xchg
xchg
sub
cltd
push
and
push
repz
jae
cs
mov
popa
fidivrs
push
push
pop
inc
sub
jno
nop
test
mov
dec
or
jnp
test
inc
adc
push
add
mov
add
xchg
decb
mov
test
cmp
jmp
sarl
sbb
mov
add
pop
mov
popa
add
inc
push
imul
ret
xorb
add
push
dec
add
hlt
inc
mov
cmpl
in
cld
xor
add
ja
mov
mov
jecxz
unpckhps
sub
dec
fwait
cwtl
jl
xchg
mov
xchg
or
pushf
test
lock
adc
mov
adcl
mov
add
fimull
hlt
pop
lret
sahf
xor
nop
ja
xchg
add
xchg
sub
inc
dec
dec
movsb
insl
pushf
add
or
xchg
adc
in
push
add
dec
mov
add
inc
mov
imul
adc
pop
scas
mov
and
mov
lahf
insb
and
unpckhps
nop
adc
push
rcll
and
inc
dec
aas
cltd
sub
sub
xor
pop
pop
mov
push
add
aad
lahf
int3
filds
push
jb
add
pusha
adc
mov
dec
idivb
ret
mov
add
in
push
mov
pop
push
cmp
pop
lock
adc
testb
add
xor
push
test
clc
les
or
pop
js
jl
add
and
pop
loopne
and
add
bound
add
or
dec
or
sahf
or
test
cmp
push
pop
push
xor
arpl
pop
xchg
xor
mov
cmp
fs
push
test
test
inc
pop
mov
xor
inc
add
xlat
mov
add
push
or
xchg
gs
jmp
push
les
add
bound
out
shlb
mov
xor
pop
sbb
popf
xchg
nop
or
jbe
sbb
clc
inc
and
addl
cmpsl
jl
dec
sbb
test
bound
mov
aam
and
mov
insb
jmp
jp
pop
pop
push
jo
mov
xor
mov
push
adc
and
adc
pinsrw
data16
push
std
dec
xor
add
and
and
enter
pusha
xor
and
enter
add
aas
and
inc
cwtl
jp
adc
and
push
outsl
scas
mov
add
push
adc
jp
fs
xor
inc
adc
loopne
in
and
jl
inc
cmp
mov
jno
mov
setp
adc
jg
cmpsl
and
xchg
mov
inc
scas
roll
mov
jb
pop
lock
test
adc
jnp
push
mov
imul
cld
add
outsb
push
or
mov
or
loop
add
and
das
rolb
add
xor
mov
inc
jbe
mov
repz
or
mov
es
dec
pop
das
fildl
add
add
xchg
and
or
insb
test
or
sub
cmpsb
js
sbb
xchg
add
cmp
dec
and
sub
and
outsb
cmp
arpl
adc
loop
or
dec
cltd
add
aaa
ja
push
xchg
and
add
jl
jp
add
and
in
cmova
push
xor
pop
mov
and
jge
and
sbbb
push
dec
xlat
dec
and
fwait
jle
ds
inc
cmp
add
dec
andb
add
in
xor
das
xorb
or
xor
inc
mov
sti
test
sbb
add
push
cmp
clc
rorb
shlb
add
mov
adc
xor
fldenv
jnp
jg
sbb
bound
push
or
adcb
add
call
aas
pop
mov
inc
leave
nop
test
inc
push
adc
jbe
movsb
enter
add
test
jo
je
andl
jno
push
xchg
fisttpl
adc
add
xchg
arpl
jl
mov
and
push
repnz
popa
add
sub
add
xchg
push
sbb
in
sbb
mov
test
xchg
sti
xor
cmp
mov
jb
add
jle
fmuls
rcl
push
mov
mov
pop
pushf
and
add
jnp
cmpsl
and
inc
and
mov
mov
pop
add
lds
out
div
cmp
push
daa
sbb
and
popf
pop
add
mov
sub
dec
add
inc
push
dec
dec
mov
les
jecxz
bound
int3
adc
cmpb
mov
push
jnp
das
roll
fists
popf
and
inc
ja
cmp
mov
out
pop
xor
add
xchg
adc
and
add
pusha
das
pop
inc
or
push
dec
fstl
sub
add
aam
jb
lock
pop
inc
dec
ds
xchg
in
and
faddl
in
cmp
mov
xor
xchg
jl
add
inc
sub
arpl
sbbb
ss
dec
add
xor
cmp
adc
cltd
loope
stc
fldenv
aad
icebp
add
mov
adc
adcl
or
add
lcall
and
push
jb
add
loope
dec
add
fwait
sub
in
ret
add
add
es
mov
push
andb
or
inc
or
add
lock
xchg
aas
mov
push
inc
mov
std
add
adc
add
push
jmp
int
xor
jge
pop
ljmp
lods
sahf
jno
inc
jle
inc
sbb
add
clc
cmp
jg
jge,pn
and
jmp
pop
push
test
add
mov
adc
jb
add
adc
lock
cmpsl
dec
lds
dec
push
adc
mov
add
mov
or
push
add
add
or
scas
or
add
cwtl
sub
push
add
mov
syscall
sbb
add
xor
jb
pop
test
mov
inc
les
popa
lret
cmc
ja
fildl
out
adc
test
in
inc
movsl
xor
add
mov
stos
lret
xor
cmp
cmpsl
add
push
and
add
inc
adc
cmp
outsb
pop
pop
test
jae
xor
xchg
and
stc
pushf
rclb
sbb
lahf
pop
push
jg
arpl
mov
or
add
add
lds
rcrb
pop
mov
stos
push
add
jle
cld
add
pushf
sub
pop
push
add
xchg
cmpsb
add
je
in
cli
cmp
hlt
outsl
lret
xor
ret
test
adc
add
jl
pop
pop
inc
add
mov
sbb
arpl
inc
scas
test
xor
lock
out
mov
stos
aas
add
push
loope
add
push
scas
pop
fldt
add
stc
sar
inc
or
je
push
cmp
mov
pop
xchg
mov
add
mov
sub
in
add
inc
mov
pop
pushf
mov
push
mov
push
rol
shlb
pop
cmp
mov
into
sbbb
rol
test
sahf
rclb
fdivrl
inc
enter
xchg
xor
add
xchg
add
pop
mov
inc
push
adc
mov
cmp
int3
stos
pop
in
lock
repz
push
rorb
cmpsl
add
mov
pop
add
incb
xchg
clc
sub
adc
cmp
add
jbe
add
lods
out
inc
shll
add
sub
insb
sbb
add
push
jp
add
sbb
imul
adcb
push
cmp
jle
jnp
add
in
mov
add
mov
inc
xor
shl
cmp
popf
inc
pop
adc
jl
pop
add
lcall
fstl
adc
pop
idivl
test
adc
fadds
rorb
add
xor
pushf
inc
push
mov
add
cmpsl
add
or
add
movsb
adc
mov
inc
sbb
sub
add
xor
lea
add
xor
and
add
sbb
add
xchg
add
sbb
dec
adcb
or
mov
add
or
clc
sbb
mov
dec
add
add
outsb
push
inc
rolb
or
xor
addl
xor
lea
xorb
adc
ficoml
rolb
mov
mov
add
cli
add
movsb
inc
cmp
inc
sti
add
call
mov
add
mov
sub
rcrb
out
jbe
iret
add
pushf
inc
mov
mov
dec
xchg
and
dec
scas
push
add
sti
mov
jecxz
push
shl
inc
push
cs
mov
lea
scas
xor
jl
lret
fldl
lods
in
xchg
xor
mov
xchg
notl
fmuls
cmpl
enter
and
mov
hlt
jne
or
jbe
adc
in
jo
pop
ljmp
add
inc
dec
pop
ret
rclb
js
addl
fsubrs
neg
jno
push
cmp
mov
stc
pop
mov
or
shll
mov
jmp
dec
sub
sub
sbb
push
jnp
icebp
jae
adc
push
inc
and
push
test
mov
pop
xlat
cmp
and
dec
rolb
push
mov
pop
sub
call
in
add
test
std
decl
aam
pop
add
stos
sub
pop
sbb
lss
arpl
push
pop
inc
lds
cwtl
dec
adc
push
adc
inc
sbb
int3
cmp
xor
add
call
add
movsb
inc
lahf
sub
rcll
ffree
add
ss
mov
pop
or
orb
fisttpll
repz
pop
or
xchg
push
rcr
pop
adc
out
sub
add
or
adc
and
or
or
add
test
cmpsb
add
adc
sbbl
inc
mov
pop
add
add
les
and
pop
loopne
add
push
fs
pop
add
pop
inc
inc
cli
fmull
add
ljmp
add
mov
aas
sub
push
jae
jg
jbe
add
inc
pop
push
rcr
je
add
les
enter
imul
inc
and
clc
insb
add
mov
aam
adc
push
js
pop
jne
xchg
sbb
inc
or
add
adc
or
jmp
inc
in
test
out
sti
add
loop
test
or
sbb
sbb
mov
mov
jno
and
nop
sub
pushf
in
xor
in
cltd
jl
mov
dec
push
and
int
cmp
and
enter
lods
aam
mov
dec
int3
add
xchg
jo
xor
test
je
jle
and
bound
fistpll
jno
cwtl
add
sub
sbb
lods
fdiv
add
test
and
and
inc
roll
mov
inc
loop
adc
jecxz
add
sbb
rorb
aam
pushf
andnps
inc
cmpsl
push
iret
add
clc
xchg
inc
call
sub
pop
pushf
sbb
dec
or
aam
and
inc
clc
push
test
lock
mov
jl
pop
push
insl
pop
jbe
in
ret
mov
mov
aam
jecxz
xor
lods
or
pop
or
icebp
or
xchg
pop
push
aam
add
adc
popa
jo
rcrb
pusha
inc
mov
mov
flds
gs
lods
push
test
add
mov
xor
test
pop
popa
jmp
push
mov
shrl
lea
sub
jp
or
jb
xor
pop
stc
int
repz
mov
add
push
push
lds
push
xchg
add
data16
je
push
inc
xor
roll
fisttpl
xchg
sbb
dec
in
push
add
popa
aad
push
sbb
nop
lock
int
xor
mov
mov
mov
xor
dec
sbb
aaa
mov
divl
mov
pop
das
and
jge
aas
sbb
and
add
or
xor
clc
pop
rcrl
decl
and
test
sub
mov
adc
loop
notb
lret
shl
into
sub
mov
pop
sbb
mov
das
push
and
aas
inc
dec
xor
push
movsl
ret
ds
addr16
pop
imul
loopne
or
jae
mov
call
pop
lock
adc
daa
andb
in
in
stos
push
pop
lds
pop
shrb
ret
or
mov
repnz
and
arpl
or
push
sub
dec
lret
rorl
mov
mov
push
stc
shlb
into
adc
arpl
mov
add
push
in
add
es
mov
adc
add
aaa
subl
add
test
lcall
mov
mov
add
scas
rolb
xor
xchg
and
adc
lods
hlt
jp
idivb
sub
int3
mov
and
inc
mov
setno
les
jle
add
mov
insb
sub
xchg
add
push
jge
inc
inc
inc
out
xchg
test
loope
arpl
xchg
rolb
cmp
sub
add
add
fmuls
pop
popa
mulb
dec
jmp
mov
movsb
or
xchg
mov
test
bound
out
fs
idivl
test
and
add
inc
insl
fcomps
xchg
enter
inc
int3
in
iret
or
pop
test
loopne
and
jle
push
lock
es
or
cmpsl
or
lock
out
repnz
cmp
mov
les
mov
out
cmpsl
jg
js
jl
add
add
mov
inc
and
mov
aam
sub
push
or
and
inc
daa
pop
inc
push
int
xchg
dec
imul
inc
and
das
or
push
clc
pusha
rorb
aas
movsl
cmp
sbb
fdivrs
sub
and
pop
adc
test
idiv
aas
and
xchg
fisttps
loope
es
lods
mov
imul
mov
or
out
inc
shl
in
sbb
les
sub
mov
pop
push
inc
xchg
adc
and
inc
mov
outsb
icebp
icebp
pop
loope
xor
or
push
fcoms
aas
xor
popf
cmp
loop
repz
mov
sbb
jl
or
cmp
lock
or
aas
inc
movsb
ret
sbb
or
or
les
push
sub
ds
xor
pushf
loopne
fsub
stc
xor
push
cmp
xchg
inc
or
jbe
jge
pop
push
push
out
sar
inc
sub
dec
je
cli
es
mov
fadds
ret
stc
es
or
jo
jne
cli
clc
sahf
jae
int
or
loope
inc
cs
mov
movsl
or
loopne
mov
cmp
aad
dec
dec
push
jb
or
mov
addr16
or
and
in
add
sub
mov
test
rolb
mov
mov
and
mov
lret
pop
pop
or
xchg
or
rclb
data16
addr16
jge
in
in
fcoms
fisttpl
inc
dec
add
push
mov
shl
mov
mov
test
xchg
sbb
add
add
aaa
pusha
out
add
je
adc
mov
fdivs
or
dec
jne
push
pop
add
scas
pusha
adc
enter
int3
jg
push
jo
adc
inc
lods
ret
add
das
fists
fnsave
jne
int
mov
lea
scas
enter
jge
push
add
mov
mov
fidivs
add
mov
dec
mov
inc
pop
add
ljmp
add
mov
arpl
or
sbb
mov
inc
push
pop
ja
dec
add
mov
jp
add
daa
mov
stc
fdivs
add
mov
mov
jge
and
out
lock
xchg
inc
inc
add
enter
cmp
clc
or
pop
pop
pushl
pop
add
adc
jg
inc
pop
lock
jmp
push
mov
andb
cmpsl
mov
inc
add
xor
adc
into
enter
cld
nop
add
xchg
pop
call
je
mov
add
mov
mov
enter
loopne
sbb
js
add
and
add
mov
jmp
sar
add
adc
mov
add
sub
dec
call
pop
fs
fwait
ss
int3
add
adc
sbb
jmp
mov
inc
mov
add
dec
sub
jl
pusha
imul
lcall
dec
add
dec
jp
imul
mov
fbld
add
test
scas
je
enter
loop
pop
loopne
dec
pop
push
dec
lods
orl
sbb
movsl
and
mov
jno
inc
dec
cmp
mov
enter
das
sub
push
inc
sub
stos
inc
loop
push
dec
lcall
mov
add
mov
call
push
mov
popf
lds
add
sti
mov
leave
ja
js
add
jo
cmp
dec
lock
fcomip
lret
jge
dec
in
jp
inc
imul
fsubl
pop
lds
add
adc
add
dec
daa
or
fdivrs
movsl
clc
fwait
add
mov
cwtl
add
inc
push
je
rorl
les
jo
nop
cmpsb
add
mov
cmp
add
nop
mov
xor
xor
inc
cmp
mov
add
or
in
mov
add
jbe
xor
add
fsubrl
lods
push
xchg
or
stos
add
mov
ret
stos
loopne
add
or
nop
lods
jae
aas
xchg
gs
dec
mov
fdivs
cmpsb
push
test
dec
mov
cmp
dec
or
pop
jle
add
inc
dec
stc
jnp
cmp
mov
js
and
cmp
mov
pop
push
xor
lahf
lock
dec
stc
add
inc
fdiv
cltd
push
mov
xchg
pop
mov
sbb
pusha
push
dec
addr16
ja
adc
mov
fstpt
shr
push
or
out
mov
pop
inc
stc
cmp
jo
inc
pop
jns
mov
fdivrl
cmp
pop
push
mov
icebp
add
adc
out
adc
outsl
mov
aad
inc
insb
sbb
into
cmp
push
test
pop
pop
add
cvtpi2ps
pop
or
int3
mov
sub
jl
push
movl
jae
mov
add
add
xchg
mov
adc
push
inc
adc
adc
ficoml
arpl
nop
ss
or
xor
sbb
les
aas
jge
dec
jo
push
add
cwtl
imul
pop
mov
movsl
xor
adc
jae
add
jecxz
jl
inc
hlt
mov
cmp
lahf
pop
mov
bound
dec
push
mov
pop
jl
and
shlb
shr
repz
add
subb
xchg
fnstcw
inc
sub
jno
add
add
inc
stc
dec
add
mov
rcrl
and
inc
mov
adc
add
add
jmp
xchg
sub
insl
les
push
inc
cltd
sti
subl
in
pop
xchg
sbb
sub
fwait
cmp
add
sahf
popa
stc
mov
pop
lods
dec
aas
push
ret
and
rcrl
xchg
push
lcall
sub
ss
scas
add
movsb
iret
ljmp
adc
outsb
in
loopne
incb
sub
push
jp
xor
dec
pop
cli
xchg
or
inc
and
pop
rclb
pop
add
pusha
sarb
je
popl
outsl
push
push
add
ja
lock
or
push
movsl
xchg
dec
adc
xchg
inc
daa
div
mov
or
adc
xor
enter
mov
add
ret
add
pusha
mov
sub
push
push
clc
pop
shrb
add
adc
sub
push
push
push
cmp
andb
xchg
add
loopne
mov
jo
sbb
out
out
cld
adc
hlt
pop
or
or
sub
mov
or
sub
and
repnz
xchg
add
leave
inc
psraw
or
mov
inc
sbb
cltd
and
leave
push
in
mov
daa
inc
inc
in
ss
add
or
mov
xor
sub
cmp
fwait
dec
pop
cmp
dec
xor
jns
and
pop
add
pop
push
rcrb
sbb
hlt
or
sub
add
inc
pop
imul
lods
add
mov
outsb
shr
dec
pop
enter
jl
push
loope
add
add
inc
aas
stc
xchg
ds
adc
sti
adc
cli
push
and
fstl
jg
orb
mov
and
inc
inc
dec
iret
or
scas
les
subb
jo
aas
es
sbb
loope
cmpsl
pushf
mov
sbb
fadd
mov
loope
adc
adc
or
dec
inc
mov
add
jg
jge
cmp
fadds
enter
out
loope
and
dec
xor
push
xchg
mov
adc
lea
dec
xorl
out
ds
pop
inc
dec
ss
or
pop
mov
lret
dec
sti
pop
cmp
inc
xchg
cmpsl
fadds
lock
rcrb
mov
in
int3
mov
push
addr16
and
xchg
sahf
jmp
out
add
inc
loop
clc
mov
fs
sbb
inc
or
xor
in
push
adc
outsl
push
cmp
in
ja
xor
adc
push
test
and
and
aas
xchg
nop
sub
out
push
into
clc
outsb
sbb
psrad
fcompl
xchg
fisubs
jp
mov
testb
int3
clc
push
pop
push
sub
sbb
scas
or
clc
or
in
and
inc
rol
xchg
in
rcr
and
clc
push
lock
or
inc
lock
ss
xchg
pop
sub
add
nop
outsl
je
pop
in
je
test
into
out
pusha
cli
pop
addr16
iret
pop
pop
push
nop
pusha
addr16
xor
push
or
jl
or
popl
sbb
sahf
repnz
ret
in
push
sbb
inc
or
lahf
enter
lock
pop
pop
push
dec
orb
pop
out
add
push
sub
push
adc
aaa
adc
sbb
or
dec
sbb
ss
repz
push
gs
push
mov
ja
pop
clc
les
in
mov
call
sbb
mov
cmc
and
push
or
lret
sub
add
and
imulb
je
setne
mov
mov
inc
test
or
jp
xchg
lods
sbb
fdivrl
fadds
jge
cmp
test
inc
xor
neg
lcall
fildll
inc
lods
outsl
dec
fsubrs
lock
or
sbb
or
orb
imul
mov
hlt
lods
in
and
adc
push
sbb
push
inc
mov
aas
aam
inc
in
mov
push
jp
inc
xor
les
repz
repnz
rolb
pushf
or
pop
lret
add
subb
nop
mov
xor
mov
or
insb
test
lahf
and
sti
movsb
aas
and
aam
jl
scas
add
sbb
ljmp
or
sldt
clc
xlat
jb
xor
jl
or
inc
in
add
xor
lahf
stc
sub
insb
and
movq
pop
adc
add
mov
cmp
add
jb
cmp
outsl
adc
cmp
dec
jne
sub
add
out
cmp
jge
pop
pop
push
orb
and
dec
push
inc
sbb
andb
mov
add
add
pop
pop
jnp
mov
enter
movsb
mov
dec
pushf
mov
jl
inc
cmp
inc
cmpsl
cs
stc
lret
add
pop
add
add
push
push
push
jb
je
add
xchg
mov
mov
jo
or
shrb
test
je
add
pop
cmp
jl
add
sub
inc
repz
xchg
out
popf
fiaddl
fsts
add
xor
adc
icebp
pop
pop
cmp
in
add
daa
xor
fsubl
cmp
add
out
mov
mov
add
pop
iret
and
add
add
lret
roll
test
test
add
fs
add
or
mov
add
bound
pop
ret
or
mov
loopne
pop
push
sub
lock
pop
fadds
clc
popf
pop
xchg
push
xor
push
test
jbe
dec
or
sbbl
stos
lea
insl
dec
arpl
push
mov
cltd
xchg
cmp
hlt
adc
add
pushf
cmpl
fists
nop
cmp
inc
mov
ror
cld
inc
clc
add
fidivs
insb
test
loope
les
mov
dec
cli
xchg
add
inc
jae
je
inc
lock
leave
xchg
sbb
sbb
or
enter
sbb
and
insl
leave
lock
cld
xlat
fucompp
push
xchg
inc
gs
cmpsb
mov
call
xor
mov
pop
rolb
js
cli
popa
jno
fstpt
iret
or
cwtl
mov
jns
pop
rolb
mov
mov
or
mov
jp
xor
add
or
adc
jnp
cmp
js
mov
lods
in
sti
loope
sarl
mov
fsubrl
sahf
jge
dec
pop
sbb
out
xlat
inc
adc
idivb
jnp
push
ljmp
lock
ffree
or
jg
test
cs
je
sub
movb
and
hlt
xor
addl
or
rclb
pop
mov
lds
xchg
aam
enter
testl
inc
ficoml
cmp
leave
add
inc
test
js
sbb
fistpl
push
push
cld
push
inc
or
jg
scas
js
iret
dec
cmc
nop
adc
xchg
push
or
mov
add
das
sbb
movsl
repnz
fcoms
pop
mov
jge
jle
sbb
mov
in
lods
mov
ds
arpl
mov
test
inc
iret
or
xchg
mov
cmp
inc
lock
mov
or
mov
or
sub
xor
fucomp
add
clc
jo
add
add
jl
inc
pop
add
inc
sbb
ss
add
and
add
andl
pop
fldenv
and
mov
sarb
add
rcll
out
add
mov
and
or
cmp
jno
les
pop
fwait
dec
cmpb
push
mov
pop
in
aas
mov
adc
sti
and
clc
sahf
xchg
or
mov
in
xchg
addr16
scas
or
xlat
decb
and
and
inc
leave
clc
xchg
cmpsb
inc
cmp
or
jno
psrad
pop
sbb
xchg
cs
jle
jbe
add
cmp
push
xchg
mov
cmp
addr16
or
xchg
mov
pop
adc
or
clc
cwtl
clc
in
cmp
mov
cltd
out
pop
inc
out
nop
and
and
shlb
lret
pop
cmp
test
jecxz
xchg
mov
mov
stc
add
aaa
setl
gs
les
fdivl
hlt
mov
cmp
inc
call
mov
add
hlt
adc
pop
push
push
nop
je
cmpb
cmp
mov
push
pushf
push
push
add
je
adc
mov
ret
divb
sub
in
add
hlt
push
or
outsl
mov
jbe
out
mov
aam
sub
cmpsb
sub
add
xor
jbe
push
in
sbb
test
pop
dec
add
decl
xor
cli
sub
inc
les
cmp
jl
lea
cwtl
jg
or
popf
call
jge
inc
orb
pop
loopne
xbegin
insl
dec
mov
movsb
xchg
repz
and
and
insb
push
push
adc
adc
popa
jne
iret
jbe
cmc
inc
add
sub
fadds
and
add
mov
cmp
push
sbb
and
mov
in
or
cmp
loope
add
dec
cmpsl
lock
inc
add
test
and
in
aad
inc
icebp
push
pop
mov
pop
mov
dec
mov
inc
adcb
cmp
adc
ja
hlt
push
mov
js
sbb
in
xor
cs
fs
ja
call
sub
push
xor
jno
xor
pop
xor
add
jae
hlt
lods
adc
mov
mov
loopne
add
insb
jmp
push
mov
sub
inc
inc
clc
or
out
sub
shr
or
aam
fistpll
inc
add
cld
bound
pop
jmp
or
and
xchg
xchg
mov
add
push
or
sub
cmp
imul
add
fs
fmull
add
je
insl
jmp
adc
shlb
stos
movsl
adc
andb
cmpb
adc
add
mov
cmp
sub
add
mov
add
dec
dec
pop
inc
inc
inc
xor
jae
hlt
outsl
pop
stos
cmpsb
out
fcompl
adc
mov
sub
sub
add
dec
xchg
cwtl
scas
mov
add
arpl
sbb
xchg
mov
dec
gs
mov
inc
adc
pushf
push
mov
cmp
idivl
dec
push
jo
mov
jge
add
xor
dec
aad
add
adc
jne
sub
clc
pxor
or
insb
jp
jns
cs
add
add
adc
je
dec
in
xchg
sysexit
and
mov
addl
insl
or
sub
mov
pop
dec
addr16
int
jbe
movb
fimuls
xor
jmp
push
add
inc
sub
cmc
sbb
bound
addr16
xchg
imul
push
ja
fs
add
stos
inc
xchg
jge
ret
adc
in
stos
fiadds
hlt
jns
shrb
push
test
nop
popf
add
into
sbb
fs
idiv
xchg
and
xchg
xor
add
pop
js
filds
cltd
xor
xor
dec
cmp
add
xchg
push
bound
addr16
inc
cmp
adc
push
fnstenv
lds
divl
aam
jne
imul
and
xor
in
cmp
push
add
add
xor
or
loope
add
mov
add
mov
add
mov
or
movsb
xor
mov
jns
pop
es
lcall
push
xchg
sbb
fadds
jl
fldlg2
inc
sub
je
push
dec
add
dec
xchg
push
xchg
insl
mov
ret
cmpsb
add
push
stc
pop
fldl
xor
lock
cmp
and
std
aam
sub
add
inc
pop
ds
imul
cmp
or
test
pop
xor
add
push
lock
jle
xchg
and
test
js
cmc
add
add
xor
mov
mov
scas
jp
jo
jg
stc
inc
and
inc
ja
add
add
bound
add
add
nop
adc
jle
add
cwtl
outsb
mov
and
jbe
add
loopne
push
rclb
jb
pop
push
xchg
cmc
es
ja
inc
pushf
add
cwtl
jp
sbb
mov
ret
adc
cld
mov
icebp
adc
sbb
mov
adc
push
inc
xchg
jb
add
add
add
pop
sbb
add
xchg
mov
scas
repnz
insb
mov
sbb
stc
add
sub
shl
cwtl
mov
add
xchg
push
xchg
jae
rolb
adc
dec
pop
or
aam
jae
add
testb
test
cmova
jmp
inc
xchg
mov
nop
orb
ja
push
add
xchg
mov
push
add
int
add
inc
sbb
add
add
insl
add
imul
pop
xchg
add
jecxz
adc
and
cwtl
das
add
adc
dec
inc
add
dec
mov
jb
pop
push
jp
lock
gs
add
out
lea
adc
sbb
xor
xchg
mov
mov
ja
fsubrs
add
adcl
adc
fbstp
jae
int3
push
aas
add
and
lock
jbe
jg
jo
clc
jge
cmp
push
or
sbbb
push
pop
mov
rcl
repnz
clc
or
xchg
lret
xor
mov
push
pop
sarb
cmp
pop
push
push
sbb
mov
rclb
orb
mov
movsb
pop
sbb
mov
sub
adc
adc
pop
ljmp
js
xorb
dec
pop
test
mov
rol
nop
stc
add
mov
mov
add
jle
sbb
push
push
adc
dec
shrb
push
adc
ljmp
add
movsb
and
add
test
adc
push
sub
inc
adc
dec
push
dec
scas
mov
dec
add
add
xchg
add
in
jle
andl
mov
cmp
cs
add
loopne
mov
outsb
sbbb
lahf
pop
add
inc
push
push
xchg
lret
jns
and
lock
cmpsb
loop
push
and
lods
fiaddl
cmc
push
pop
dec
test
mov
push
adc
xchg
popf
notl
xchg
add
sbb
adc
mov
setg
mov
call
jne
and
fists
or
jno
cs
in
push
je
add
push
enter
add
daa
push
sub
adc
dec
fldl
mov
fistps
jnp
sub
test
test
push
push
add
mov
or
inc
add
mov
mov
or
pusha
lea
add
and
insl
lock
add
in
sbb
and
add
sub
mov
add
test
je
push
data16
cmp
cmp
lods
push
add
sub
mov
ja
pop
rcrl
cmp
out
dec
fcoms
mov
lret
aas
ljmp
xchg
addb
mov
add
lock
and
rclb
xor
cmp
in
daa
or
jl
add
call
sti
inc
add
shrb
add
jo
je
cmp
stc
les
xor
pop
cli
lcall
push
push
cmp
add
or
lock
mov
add
xchg
into
push
mov
push
mov
aam
mov
and
add
popl
dec
add
inc
xor
popf
push
hlt
inc
add
dec
pop
call
add
cs
inc
xchg
cmp
jne
js
xchg
and
lahf
out
shlb
add
mov
test
jle
insb
jbe
push
xchg
add
inc
roll
in
jg
popl
sub
xchg
mov
push
movsl
cmp
stos
addb
cmp
popa
lret
sbb
rorb
stos
test
add
xchg
push
cmp
fdivrl
adc
cmp
jbe
and
inc
push
out
xchg
data16
mov
mov
inc
sti
sbbb
xor
arpl
hlt
fmull
xor
adc
loopne
cmp
loopne
cmpsl
push
adc
add
sub
adc
push
cmp
or
mov
mov
jbe
pusha
rcrl
movsl
dec
adc
int
mov
imul
repz
leave
sbb
or
ficoml
ds
add
mov
mov
or
incb
scas
xchg
or
addb
mov
lock
add
inc
sbb
push
sbb
add
add
sub
cmp
jmp
mov
pop
sbb
push
imul
inc
push
cmp
pop
xor
mov
cmpsb
jg
stos
subb
add
sbb
in
add
or
jle
pop
rorb
add
inc
mov
call
add
add
add
lock
lea
push
adc
add
mov
push
out
cld
sub
dec
cmp
mov
pop
mov
xlat
xchg
or
mov
call
add
sbb
jbe
sbb
test
pop
jge
jmp
rcl
add
repnz
inc
pop
daa
ret
pushf
nop
stos
mov
test
in
dec
inc
fcomi
and
mov
daa
movsb
add
push
sub
enter
inc
push
in
bound
rorl
jbe
mov
jns
cmp
add
xchg
leave
je
adc
jne
jne
jae
add
push
and
push
imul
sub
movsl
movsb
add
ljmp
jae
pmaxub
shlb
add
jge
push
test
js
or
add
mov
inc
das
adc
add
or
push
ja
add
sarb
cwtl
dec
sub
and
add
insb
fsubs
sub
and
test
pop
adc
out
mov
lea
int
nop
mov
mov
daa
rcrl
add
adc
fadds
pop
clc
xchg
mov
add
xchg
leave
ror
push
xchg
add
and
mov
pop
int3
adc
or
addl
and
nop
cmp
adc
ret
jbe
mov
inc
sub
cmp
je
push
loope
lods
add
adc
add
pop
jne
add
add
int
add
sbb
shrl
pop
add
adc
je
sbb
or
ja
daa
add
lret
push
in
xchg
add
cmp
mov
dec
or
cli
out
mov
adc
test
add
jno
push
dec
add
stos
jb
or
out
sub
xlat
out
and
test
adc
mov
nop
pop
lods
cmpsl
add
mov
adc
and
push
push
setb
cmpsl
xchg
sbb
fsubs
iret
add
or
mov
add
imul
jae
or
popf
xchg
mov
mov
adc
fidivs
xor
xor
xor
cmp
bound
andb
pusha
xchg
sbb
or
push
andb
inc
pop
and
sahf
sbb
adc
or
adc
push
out
add
adc
jnp
lods
sbb
pop
dec
lahf
imul
add
repz
shlb
push
je
add
lret
jg
dec
loope
sub
push
and
adc
addb
imul
clc
add
jl
and
das
mov
test
mov
rcrb
popf
fidivrs
and
jb
adc
into
cld
movsl
push
test
cmp
test
inc
je
add
cpuid
mov
dec
sbb
xchg
pop
jge
push
add
sbb
ds
and
sahf
and
cmp
cmp
add
mov
rcrb
repz
pop
adc
add
cmp
lock
and
add
mov
pop
loopne
mov
stc
int3
inc
add
mov
mov
push
test
pop
cli
mov
mov
sub
fsubs
add
push
or
inc
pop
aaa
sbb
xor
jbe
or
add
push
jmp
out
setle
decl
pop
mov
jo
xchg
test
and
dec
lock
ret
ficoml
gs
test
daa
xchg
mov
xor
add
push
loop
ret
mov
lea
add
mov
psllw
nopl
and
push
mov
add
dec
inc
adc
rclb
xor
sahf
je
hlt
and
xchg
leave
in
or
cmc
xchg
inc
add
aaa
fcomps
test
cmp
hlt
jp
pop
scas
in
add
mov
fdivr
repz
xor
imul
je
jae
nop
loop
mov
add
add
out
repz
dec
adc
test
adc
and
jae
xor
mov
xor
fldl
lods
test
add
push
movl
sbb
js
loopne
add
repnz
inc
lea
adc
xlat
inc
or
add
jecxz
pop
cmp
add
push
sbb
inc
and
nop/reserved
inc
ja
icebp
fcmove
es
add
jmp
adc
add
ret
add
fwait
lds
jne
and
mov
shrl
les
imull
loope
jmp
add
lcall
push
add
adcb
mov
pushf
and
lock
adc
rorl
adc
sbb
adc
dec
add
inc
mov
mov
cmp
ja
sub
xlat
xchg
jne
xor
xor
sahf
loop
mov
arpl
jo
or
mov
push
stos
in
pusha
cmpsb
mov
xchg
inc
push
or
xchg
dec
js
js
test
scas
icebp
xor
xchg
sbb
movsb
ds
jno
dec
cmp
and
dec
xor
mov
jge,pt
shlb
add
jbe
push
push
adc
add
test
push
and
mov
xchg
fsubp
roll
xor
cmpb
rorl
pop
push
dec
push
fmulp
and
cmpl
ljmp
sub
cld
add
mov
xchg
add
sub
push
adcb
shll
add
test
gs
nop
adc
adc
mov
or
add
movsb
pop
pop
or
and
push
adc
add
stos
push
xorl
sub
nop
add
das
lods
ret
pop
mov
in
or
pop
xor
imul
sub
mov
add
cmp
aad
das
lds
add
sub
dec
je
push
mov
ficoms
shlb
push
xor
and
inc
iret
shr
mov
adc
mov
inc
push
mov
and
push
jge
cltd
inc
inc
imul
add
daa
xchg
rcr
adc
mov
sbb
test
insb
pop
inc
fists
push
sub
xchg
insl
cmc
data16
repnz
cld
add
jo
jle
pop
inc
stc
nop
add
xchg
enter
adc
sub
lea
imul
rcll
add
dec
fdivrs
or
add
add
or
push
jge
lret
xchg
icebp
inc
push
dec
add
sbbl
add
rolb
sbb
push
or
nop
push
pinsrw
in
sub
cwtl
add
aam
cmp
cmp
mov
add
loopne
mov
ret
scas
sub
lds
rolb
jae
orl
shlb
shr
adcb
movsb
inc
and
pop
and
xchg
or
inc
sub
je
in
aas
pop
testl
jmp
push
icebp
xor
rcrb
mov
xor
cwtl
pop
jl
loopne
add
movsb
lret
inc
in
cwtl
rorb
fsts
or
pop
cmp
push
inc
mov
push
or
subb
mov
jle
scas
sub
daa
rolb
stos
mov
add
cmp
add
jmp
enter
inc
sub
add
shr
mov
cs
pop
pop
imul
xchg
or
mov
pop
imull
add
add
aam
scas
clc
pop
add
loopne
pop
add
add
test
xchg
adc
dec
cld
mov
add
inc
out
nop
mov
or
sarb
js
adcb
mov
outsl
sub
xor
sub
xchg
ror
inc
call
jns
push
std
and
push
jp
popf
sub
add
in
mov
pop
cltd
jbe
mov
mov
add
cmp
cmp
dec
pop
bound
add
fidivs
push
iret
add
push
jne
stc
popf
or
add
and
testl
sqrtps
ds
add
xor
int3
lea
add
cmp
aaa
add
jne
je
and
pushf
push
and
dec
push
pop
mov
test
and
push
call
xor
int3
sub
add
mov
lds
add
jne
cmp
inc
dec
sub
insl
dec
xor
loop
add
cmp
sub
fimuls
add
push
jo
shr
add
sbb
cmp
add
jae
add
nop
mov
psubsw
into
and
cmp
stc
emms
inc
loop
jg
mov
and
mov
test
ret
cwtl
je
cmp
add
ret
pop
in
push
or
add
inc
inc
adc
inc
mov
int3
roll
sub
cmp
pop
or
push
adc
xorb
xchg
rolb
jae
pop
sub
dec
cmp
add
inc
pop
mov
scas
and
ret
outsl
or
and
outsl
inc
std
inc
inc
or
add
pop
or
xor
sub
xchg
jmp
aaa
and
and
iret
add
ficomps
cwtl
or
add
add
or
sbb
inc
lds
jns
dec
es
add
imul
or
add
orl
mov
nop
jno
sbb
add
je
xchg
jp
jb
pop
js
cwtl
outsb
dec
inc
inc
test
aaa
aam
pushf
push
outsl
jbe
and
and
adcb
add
nop
sub
iret
add
cmpsb
lcall
adc
push
mov
inc
mov
add
and
ja
test
adc
adc
negb
dec
or
gs
loop
mov
cli
scas
add
add
add
repnz
iret
arpl
ret
xchg
add
das
cmpl
mov
xor
add
or
jge
add
cli
inc
sub
cmp
ja
loop
cmc
cmp
and
repnz
jb
add
fstpt
sbb
scas
mov
jle
or
mov
fs
lock
pop
jo
pop
sub
pushl
mov
popa
in
xor
and
jl
add
adc
mov
out
inc
cmp
pop
xor
mov
add
call
fisubl
jo
mov
ret
add
pop
sbbl
lcall
inc
push
add
andb
add
call
or
sub
jae
dec
add
fisubrl
dec
push
and
add
push
lea
int3
add
mov
adc
pop
inc
jle
push
mov
dec
movl
push
add
sub
lea
sbb
and
cmpsb
and
add
lret
arpl
or
clc
mov
pop
cmp
movsl
subb
fstpl
stos
add
fimull
inc
xor
jbe
or
cs
cmp
add
xor
stc
inc
adc
inc
roll
jne
or
jae
and
push
adc
and
subb
mov
int
xor
xchg
add
adc
adc
push
sub
xchg
inc
movlhps
dec
or
add
push
mov
jmp
pop
addb
cmpb
cwtl
popa
test
mov
dec
xchg
xchg
gs
xor
mov
push
adc
pop
fiaddl
test
inc
pop
add
pop
mov
mov
and
adc
js
test
lea
scas
rcrl
push
call
mov
sub
dec
lock
add
adc
mov
rolb
xor
lret
add
xchg
mov
and
sbb
lret
adc
xor
add
mov
insb
add
loope
sub
rclb
add
lods
sub
push
mov
mov
jp
xor
add
dec
add
aaa
pusha
add
shrl
cmp
pushf
test
mov
cwtl
movsl
or
icebp
mov
or
add
jbe
push
cwtl
ret
mov
xchg
inc
push
add
int
or
push
adc
adc
loop
imul
dec
lcall
fldenv
mov
mov
xchg
das
push
push
xor
jne
push
add
shl
movsb
push
add
and
ss
jle
imul
adc
mov
cmp
mov
sti
xor
sub
in
add
push
call
push
adc
pop
popa
add
push
in
cvtpi2ps
cmp
add
pop
cmp
seta
shlb
addb
and
and
int
inc
or
sub
pusha
and
int3
lahf
push
and
adcb
push
add
inc
enter
fisttpl
nop
and
push
mov
push
repnz
add
popl
fcom
test
sbb
jo
xor
bound
pop
sahf
stos
or
sub
movsl
mov
add
add
add
popf
push
mov
xchg
add
or
mov
jl
stc
fadd
sbb
fcomps
add
mov
push
xchg
pop
jae
enter
pop
add
xchg
push
pop
or
jl
leave
add
jo
iret
or
adc
mov
add
cld
fstpl
add
jecxz
jmp
in
rclb
mov
adc
cmovae
mov
sbb
insl
decl
add
cld
jmp
test
jg
out
loopne
sbb
add
and
push
lea
add
sub
xchg
loopne
insl
add
mov
add
and
xchg
cmpsb
mov
mov
fadds
fcmovbe
or
push
ret
arpl
fsubrp
mov
or
jne
nop
sbb
shrl
cmp
xor
xchg
movl
add
adc
dec
xor
add
add
sub
in
ss
push
mov
cld
adc
and
push
push
loopne
lods
bound
push
push
testb
xchg
mov
inc
mov
dec
mov
xchg
adc
cmpsl
and
add
cmc
push
pushf
adc
push
cwtl
insl
mov
add
xchg
inc
fimull
add
xor
push
jmp
pop
dec
adc
dec
pop
sub
into
lahf
lock
andl
push
data16
fdivs
pop
shr
push
scas
shl
push
enter
cmp
psubq
and
stos
fnstcw
mov
in
std
mov
cmp
add
cmp
add
jb
push
add
subl
mov
inc
xor
roll
loopne
cmp
je
jecxz
hlt
rol
pop
mov
lock
cmp
jae
add
dec
jne
push
xlat
cwtl
jmp
push
add
je
xor
add
popa
pop
push
jne
pop
add
mov
inc
adcl
sahf
push
fiaddl
in
ss
lods
into
mov
jp
ret
lea
add
int3
or
add
leave
add
add
xchg
call
je
add
cltd
cmp
xchg
jg
adc
nop
add
shrd
out
cltd
add
movsl
les
push
inc
jge
adcb
mov
je
add
shrb
clc
sarb
push
xlat
loop
sub
jg
and
ret
jecxz
push
fsubr
adc
ud2
push
sbbb
cli
jnp
loope
lahf
jl
or
pop
inc
sbb
xchg
lret
jns
mov
sub
dec
jnp
add
je
add
clc
daa
add
add
rcrl
add
adc
enter
jne
shr
sbb
clc
pop
sbb
loopne
and
add
sub
or
ret
mov
inc
je
mov
jg
add
adc
add
push
inc
lahf
test
add
xchg
mov
hlt
ret
dec
inc
stc
xor
adc
or
inc
into
mov
xchg
or
sbbl
fnstcw
or
outsl
cmp
inc
stos
pmulhuw
nop
add
movsb
data16
test
add
ret
jae
xchg
shl
sbb
jmp
inc
cmc
mov
call
lret
fiadds
sub
pusha
das
cmp
leave
add
test
imul
xchg
add
jb
inc
cwtl
cmc
and
add
xor
dec
je
jge
add
hlt
mov
in
repz
push
add
push
push
lahf
jne
add
mov
paddq
inc
sbb
push
js
stos
cmc
loop
xchg
movsl
jae
sub
sbb
add
fiadds
jnp
cmp
aam
sub
add
sbbl
jae
mov
dec
pop
fwait
loope
add
rorb
add
lds
push
jl
sub
mov
lahf
mov
xchg
sub
fprem
movsl
fisttpll
std
cmpsb
pop
cmp
cmp
popa
sub
push
fs
aas
dec
add
mov
sub
push
imul
inc
adc
sbbl
pop
jl
jmp
filds
and
in
add
and
test
fdiv
add
sbb
fidivrl
ret
loop
xlat
repnz
shl
stos
pop
cmp
dec
shrl
jg
cmp
je
pop
mov
and
jmp
loopne
mov
or
mov
sbb
jno
gs
jns
xlat
xchg
add
int
mov
pop
and
icebp
fidivl
add
mov
imul
adc
sbb
testl
dec
push
add
movlps
dec
mov
or
jecxz
mov
out
push
rorb
sub
ja
outsl
cmp
fstps
sbbl
aam
push
mov
mov
xor
dec
dec
jecxz
mov
popa
rorb
mov
add
jmp
add
shrb
in
addb
popa
sbb
sbb
mov
mov
inc
mov
cmpb
sub
sub
dec
rorl
mov
add
dec
call
sbb
sub
lock
inc
pop
decl
pop
loopne
sub
jnp
imul
mov
mov
jo
sahf
dec
ret
mov
jp
in
dec
test
pop
push
int3
test
adcl
jne
pop
push
push
add
stos
add
inc
adc
cmp
adc
ret
setp
xchg
inc
mov
andb
xchg
int3
dec
dec
int
out
add
add
cmp
add
dec
pushf
sarb
add
cmpsb
jecxz
add
aam
mov
dec
aaa
xorl
mov
push
add
xor
add
movsl
sub
mov
add
or
add
in
cmp
jbe
pusha
call
test
cld
dec
add
xchg
sahf
adc
call
test
adc
mov
rolb
in
jbe
xlat
push
pop
inc
lahf
pop
test
repz
or
pop
and
das
lock
add
fsts
add
mov
jp
rcll
mov
add
push
mov
jmp
pop
adcl
dec
dec
or
inc
jge
sub
pusha
sub
xchg
test
inc
iret
sti
mov
nop
add
jg
mov
repz
add
xchg
xchg
pop
in
es
into
or
xor
and
adc
add
dec
pop
sbb
add
rcll
inc
ss
mov
call
into
dec
lcall
jb
inc
add
mov
dec
add
jne
jmp
push
cld
mov
pop
adc
jne
xlat
enter
dec
add
xchg
cltd
and
into
inc
and
jns
jge
push
loop
or
fists
mov
add
sub
add
arpl
pop
adc
xchg
mov
xchg
mov
popa
add
call
loopne
mov
shll
mov
jnp
push
and
outsb
cwtl
int3
or
dec
ret
call
cmp
imul
aaa
pop
add
enter
int3
out
mov
rolb
inc
les
daa
cmp
popa
stos
xchg
test
and
jno
pop
add
and
fs
adc
add
cltd
mov
adc
mov
clc
fcoms
fnstsw
scas
or
sub
pop
inc
jne
fsts
push
add
and
movsb
test
bound
enter
sete
add
les
pop
daa
lock
mov
mov
pop
cmp
std
mov
inc
or
loopne
add
push
pop
rolb
xchg
cmp
adc
lret
lock
mov
cmovo
cmpsb
jle
push
add
repz
add
dec
popa
xchg
call
push
cli
scas
add
pop
ror
call
mov
gs
pop
loop
das
flds
gs
in
rclb
add
push
imul
add
mov
add
inc
stos
sub
mov
clc
push
mov
mov
aas
sub
pop
stos
push
dec
lods
and
pop
pop
xor
adc
inc
add
and
xor
rorl
jns
dec
or
dec
jo
std
pop
stos
pop
pop
dec
insb
shll
jne
add
outsl
push
push
pop
pop
jp
jg
je
pop
inc
flds
dec
add
mov
ss
add
mov
ljmp
lcall
cmp
ret
cmp
inc
stc
mov
add
jmp
inc
sbb
sbb
sub
add
aam
xor
fmul
add
dec
repz
push
or
mov
pushf
ja
add
jge
orl
adc
and
push
push
xor
pop
jo
xor
push
inc
pop
and
inc
mov
adc
add
cs
fimull
and
jmp
test
in
pop
add
inc
add
sub
add
adc
lock
add
adc
mov
out
aad
mov
add
mov
addl
std
cmc
and
and
push
sahf
add
xchg
loopne
cmp
jbe
adc
jnp
xor
sub
mov
mov
add
xchg
jne
shlb
fwait
inc
out
enter
movsb
or
or
hlt
cmp
loopne
push
add
mov
jne
jl
add
js
divb
push
jbe
mov
sbb
mov
jmp
xchg
add
movb
popa
popf
pop
arpl
mov
jmp
aad
push
lock
mov
ret
sub
cmp
inc
or
jmp
test
pop
jb
and
lcall
stos
sub
push
adc
mov
add
movsl
add
xor
jmp
inc
rcrl
shll
clc
in
mov
add
incb
sub
jg
inc
dec
jmp
scas
push
call
pop
push
nop
add
push
mov
shrl
lock
clc
xchg
bound
in
daa
clc
je
xor
push
push
cmp
push
test
fsubs
sub
jns
ljmp
loop
mov
dec
jae
ror
add
cs
mov
pop
nop
push
mov
and
subl
push
adc
mov
ljmp
xchg
add
jnp
les
add
jno
ret
testl
pop
or
clc
xor
inc
adc
push
gs
jecxz
cmp
idivl
sbb
test
mov
mov
push
or
call
mov
lds
cmpsl
xor
inc
xor
ret
cmp
dec
in
ds
fsubr
pop
add
outsb
jne
stc
and
scas
inc
mov
cmpb
mov
add
andb
mov
or
inc
in
leave
add
mov
call
lret
clc
fwait
outsl
push
movsb
iret
cwtl
jge
shr
ltr
jb
mov
add
mov
pop
mov
and
cld
lahf
add
and
lret
pop
xor
lcall
jb
addb
hlt
mov
cli
xchg
and
adc
add
ja
add
dec
mov
int3
mov
ror
add
xor
add
mov
add
jb
bound
gs
add
dec
jbe
in
add
and
repnz
sub
mov
addr16
add
je
add
shrl
xchg
mov
push
add
imulb
data16
clc
imul
fiadds
and
mov
clts
je
add
sub
ret
lea
inc
or
cmp
jns
add
or
pop
mov
inc
add
popf
mov
xlat
add
dec
into
mov
bound
stos
scas
xchg
in
cli
push
add
sbb
aaa
pop
push
repnz
adc
nop
cli
xchg
xor
cltd
sbb
push
inc
inc
cmp
int
cmp
or
or
inc
adc
fstpl
rcll
cmp
bound
loope
hlt
sbb
and
mov
sub
nop/reserved
jecxz
shrb
stos
cmpsb
push
add
xchg
in
jae
push
jp
sarl
xor
fldpi
add
imul
and
mov
add
mov
dec
dec
pusha
xchg
jb
or
fcomps
cld
jle
and
jl
xor
not
mov
cmpsb
les
add
pop
xchg
pushf
adc
mov
add
and
popf
outsl
aas
nop
sahf
les
into
sbb
xchg
add
and
lods
xchg
ret
popf
jmp
cwtl
jne
lahf
jne
adc
xor
addr16
dec
xor
add
jmp
mov
sti
adc
sub
mov
fsubl
jle
in
push
mov
movsl
jmp
inc
sbb
rorb
push
jo
cmp
add
jl
test
icebp
loopne
add
mov
addb
es
inc
pop
je
movsb
xchg
repz
nop
add
lock
push
call
mov
inc
outsl
insb
fs
dec
push
shrl
jmp
pop
inc
push
xchg
inc
jmp
rclb
mov
lret
add
gs
js
aam
ds
sub
mov
or
arpl
gs
outsb
adc
mov
insb
pop
orb
dec
mov
push
jnp
add
xor
push
scas
inc
rolb
fdivr
dec
add
push
mov
add
lock
or
inc
jno
rclb
hlt
add
dec
dec
repnz
pop
xor
xor
cmpl
pop
call
and
fnstcw
sub
or
add
arpl
ret
lfs
jbe
add
mov
mov
inc
add
sbb
mov
add
scas
in
shr
dec
aas
and
hlt
add
shrb
je
lret
outsb
push
dec
sub
ret
gs
or
add
cmp
xchg
jns
movsb
add
rorl
clc
int3
mov
loopne
push
jmp
shl
mov
out
push
mov
dec
add
shlb
in
adc
fldl
pop
bound
add
sub
push
add
adc
xor
fsubrs
or
push
cmp
cmp
xor
xchg
xchg
ret
add
fs
lock
xor
dec
or
add
adc
jns
xor
add
je
fdiv
mov
mov
mov
js
inc
mov
or
and
call
test
loopne
aad
lods
hlt
and
cmp
adc
xor
xor
inc
not
movsl
fsubl
add
dec
mov
and
enter
mov
add
inc
andb
mov
dec
fldenv
add
jns
inc
testb
sub
dec
lret
loopne
roll
push
add
lea
iret
pop
add
cmp
sub
imul
pop
dec
fistl
mov
cltd
call
xchg
mov
lock
pop
sarl
call
inc
cmp
rcl
mov
je
inc
shll
es
fdivl
add
stos
mov
pop
enter
and
xlat
sub
aad
jmp
mov
jnp
or
bound
movsb
sub
xchg
or
in
insl
sub
and
push
adc
mov
movsl
sub
int3
add
add
jl
jns
sub
shl
xchg
and
fisttpll
daa
add
ja
mov
add
pop
adc
add
and
pushw
add
xor
das
add
mov
sub
cwtl
adc
xchg
pop
mov
adcb
cltd
sub
fucom
add
pop
sub
call
push
or
add
cli
popf
orb
call
mov
sahf
js
or
sub
cli
mov
testb
xchg
pop
lret
daa
dec
jo
test
pushfw
cmp
fldl
inc
call
push
jbe
add
icebp
in
gs
jp
add
fwait
jmp
mov
or
adc
push
aas
xlat
je
push
push
enter
int
cmp
stos
mov
add
jbe
mov
pusha
add
jmp
movsl
je
sbb
adc
mov
cmp
daa
push
adc
inc
mov
and
test
add
loop
and
push
xor
push
mov
clc
test
sbb
jbe
ror
pushl
loopne
add
mov
xchg
call
mov
lock
cmpsb
ror
das
mov
inc
ljmp
loope
or
and
lret
mov
mov
mov
adc
jge
pop
hlt
lahf
movsl
mov
push
push
or
xor
mov
imul
add
addb
pop
mov
pusha
sbb
dec
mov
jl
loopne
jne
sbb
sti
je
mov
pusha
mov
out
add
or
jne
push
inc
add
pop
enter
out
inc
add
or
scas
adc
leave
push
add
jp
add
push
cmp
pop
inc
push
incb
add
mov
add
push
loopne
pop
jbe
add
sarb
add
jge
mov
add
clc
add
ss
push
rcrw
outsl
or
jl
lods
stos
add
and
push
dec
sbb
cmp
or
sub
add
dec
add
sub
push
enter
dec
jp
cli
jle
and
std
add
xchg
test
add
fisubl
or
leave
mov
add
es
ret
add
sub
or
filds
xor
dec
and
packuswb
jg
jb
xchg
inc
js
add
test
or
add
ret
mov
jg
stc
ds
loopne
das
add
jno
sub
xchg
sbb
xchg
sarl
add
pop
mov
adc
std
dec
rclb
push
les
dec
sub
flds
xor
inc
add
mov
dec
mov
jnp
add
pusha
or
adc
lods
les
testb
add
xor
out
int
push
bound
ss
xchg
push
dec
lea
cwtl
push
and
int
and
lds
or
inc
dec
add
dec
dec
dec
add
cwtl
push
add
daa
pop
pop
dec
pop
add
mov
pop
adc
xchg
into
stos
adc
daa
loop
hlt
add
dec
test
insb
hlt
decl
orb
push
sbb
lock
ret
mov
jne
and
outsl
adc
mov
into
pop
or
pushf
mull
faddl
leave
dec
sbb
dec
add
dec
shrb
jo
add
insb
insl
outsb
outsl
jo
loopne
es
cmpsb
add
jns
jp
or
sub
add
adc
cmc
pop
cwtl
loopne
and
or
das
push
add
sti
jno
and
sub
mulb
push
jo
fldt
sub
add
cs
add
mov
adc
inc
dec
fsubs
add
jl
jecxz
shll
cmovo
xor
adc
xchg
dec
data16
xchg
dec
push
nop
ret
or
xor
jge
lcall
int3
lea
and
jecxz
add
or
or
dec
add
sub
std
push
leave
jecxz
add
adc
popa
add
or
jl
add
inc
std
mov
add
call
stos
aam
ja
movsb
incb
mov
aas
shlb
add
push
add
and
cmc
sub
data16
add
jecxz
cld
dec
jbe
xor
add
mov
sbb
pop
adc
mov
inc
adc
sti
add
mov
outsb
jmp
push
mov
addr16
pop
add
pusha
lock
inc
and
outsb
mov
das
or
jge
mull
sbb
cmp
out
subb
inc
push
add
rorl
cmpsb
lret
or
xor
scas
mov
pushf
sub
aam
or
jbe
mov
and
mov
in
add
hlt
mov
xchg
inc
rclb
and
add
push
das
adc
add
cmc
mov
mov
xor
xor
adc
mov
rcr
sbbb
push
or
hlt
mov
add
shrl
xchg
call
adc
call
ja
int
lret
or
ljmp
aad
leave
fptan
jns
jb
pop
scas
sub
jae
push
out
xchg
lock
orl
lock
pop
lcall
xchg
dec
into
aas
adc
jbe
sahf
push
push
dec
call
xchg
pop
mov
je
das
jns
test
adc
add
popf
in
enter
xorb
cld
push
add
in
addb
jns
add
lret
pop
das
hlt
pop
popa
push
repz
rolb
bound
push
push
pop
jg
pop
cld
xor
add
push
addl
pop
bound
or
add
pop
xor
loopne
ret
push
dec
mov
push
push
inc
faddl
fdivrl
add
or
and
mov
lret
or
idiv
push
add
xor
in
imul
xchg
push
fsts
push
push
push
mov
cmpsl
push
in
enter
jmp
and
mov
mov
bound
cs
sbb
mov
add
sbb
leave
mov
scas
push
test
je
aad
push
jo
rolb
gs
add
cs
filds
movsl
sub
xchg
add
fs
add
add
push
jecxz
dec
add
cmp
roll
and
aas
push
icebp
cmc
dec
rcr
and
outsl
add
push
add
xchg
fdivrl
mov
aaa
je
pop
scas
jno
jle
xor
lahf
add
lret
sbb
push
and
xchg
mov
or
sbb
add
mov
mov
xor
inc
add
mov
adc
or
mov
sub
push
sub
push
and
xchg
cwtd
stc
xor
add
cmpsb
dec
dec
push
lds
stos
in
mov
adc
push
test
iret
lods
rolb
cli
push
mov
pop
scas
gs
or
jge
test
loopne
mov
enter
mov
pop
ret
cmp
add
leave
sbb
shll
adc
push
adc
push
stc
add
call
adc
add
adc
enter
sub
cmp
test
sbbl
push
leave
cmp
push
mov
sbb
bound
add
xor
inc
icebp
int3
push
push
and
and
call
int3
or
xchg
push
add
and
add
lahf
nop
xchg
inc
xor
or
pushf
int3
rclb
imul
shl
add
sub
loopne
fmuls
xor
dec
mov
dec
test
push
clc
pushf
sub
mov
dec
mov
cmp
sbb
shr
mov
dec
divl
sub
roll
sarb
sbb
add
mov
xor
jbe
repz
inc
mov
sahf
add
lds
add
sti
mov
and
add
lret
add
enter
dec
and
icebp
add
faddl
pop
movups
sbb
sbb
and
loopne
push
test
add
push
repnz
pusha
pushf
and
mov
in
sub
orl
push
mov
adc
jne
daa
add
and
call
add
pop
xchg
add
loope
jnp
jge
adc
or
xorb
push
add
pop
or
movsb
and
sub
dec
loopne
add
push
test
jge
or
xchg
add
fwait
sub
add
test
ret
add
pop
sbb
enter
add
shr
jle
add
cmp
dec
ficomps
adc
mov
fs
mov
fimull
add
or
add
pop
adc
jecxz
negl
cmp
adcl
push
cmp
add
stos
jmp
cwtl
or
cmp
inc
mov
add
inc
and
xchg
shrl
adc
inc
or
xor
rcrb
sbb
movsl
mov
sub
adc
mov
nop
stc
add
push
popf
shl
cli
lock
push
mov
and
jle
xchg
jns
add
pop
cmp
aad
or
push
dec
pop
add
dec
add
jnp
fstl
xorl
add
adc
cmp
dec
jnp
add
cmpl
mov
add
mov
enter
aas
jb
pop
shl
lahf
or
popa
adc
add
inc
enter
inc
bound
rcl
inc
aas
add
jb
mov
sbb
hlt
leave
inc
into
add
enter
es
adc
xor
pop
add
shl
add
inc
mov
add
inc
xchg
in
int3
mov
xor
mov
dec
pop
mov
test
fwait
pop
adc
sub
mov
mov
pop
std
cmp
les
pop
add
loopne
and
decb
js
sbb
lods
jl
lea
pop
pushf
sbb
loopne
cmpsb
and
add
xor
inc
nop
mov
push
fmuls
sub
cwtl
jl
xchg
cmp
shrl
xor
jle
fs
xor
push
je
cli
cmp
lret
push
push
gs
les
addb
dec
les
adc
out
adc
add
push
stc
push
fisubrs
jp
add
xchg
flds
mov
sbb
adc
dec
addr16
pop
add
data16
mov
rdpmc
testb
inc
xlat
inc
mov
add
subb
movsb
sbb
add
mov
lahf
test
fldl
fistl
faddp
pusha
push
pop
loopne
pop
pop
test
adc
mov
enter
sbb
mov
cs
insl
jmp
and
adc
jp
adc
ds
sbb
inc
loope
jmp
mov
xor
mov
stc
cwtl
jo
xchg
inc
adc
fdivp
jo
add
in
mov
pop
dec
add
pusha
cltd
add
lcall
or
and
int
mov
das
add
jl
add
repz
push
dec
adc
inc
cli
xchg
xor
or
enter
and
inc
dec
add
das
in
inc
pop
fbstp
push
stos
add
mov
test
add
mov
cwtl
xchg
push
jno
add
xlat
popf
push
inc
or
jbe
loopne
and
les
mov
shlb
adc
sbb
add
cmpb
jb
jns
add
ljmp
add
data16
inc
sub
adc
add
pop
out
dec
insb
adc
add
push
ja
push
add
dec
xor
push
mov
shr
scas
dec
dec
cmp
mov
push
mov
jl
lret
pop
mov
add
enter
loopne
test
cmp
sub
rol
cmp
sub
ja
jno
stc
xchg
add
pop
pushf
sub
lods
add
adc
fdivs
pusha
fs
mov
inc
cmpsl
jo
sbb
add
les
shll
xchg
flds
sahf
shrb
adc
clc
add
dec
out
movsl
mov
imul
sub
fsubs
inc
inc
add
dec
cmp
ja
add
imul
pop
push
stos
test
clc
adc
icebp
pushf
add
mov
sbb
loope
je
mov
rclb
aaa
les
add
lods
xchg
mov
push
inc
or
mov
mov
jle
ret
in
daa
push
cmp
pop
mov
adc
push
inc
add
mov
insl
fsub
adc
sbb
jecxz
aad
pop
add
mov
sbb
inc
pop
sbb
and
push
daa
pusha
push
sub
in
cli
out
xor
idivb
test
jo
ffreep
add
testb
imul
add
jg
sub
std
cmp
add
ret
sarb
lret
stc
pusha
xchg
faddl
dec
out
js
clc
loopne
jmp
pop
pop
inc
push
add
or
je
addr16
push
lock
stos
shll
mov
jg
lds
roll
test
call
add
ljmp
adc
pop
dec
outsb
xchg
jg
nop
inc
aas
mov
aam
in
testb
and
mov
dec
adc
imul
xchg
inc
scas
idivl
out
cmc
add
add
and
inc
pop
sub
dec
and
dec
gs
jae
cmp
stos
jg
jg
jg
jg
jg
add
or
sub
nop
mov
xchg
insl
and
and
hlt
and
xor
insb
sub
mov
movb
add
add
adc
out
and
sbb
add
pusha
and
add
xchg
xchg
and
xor
mov
orb
xchg
mov
es
and
and
add
mov
mov
out
cmpsl
out
mov
lret
hlt
adc
and
dec
xor
nop
mov
mov
jg
nop
negl
ror
fdivr
in
lock
cld
mov
add
adc
push
add
orl
stos
mov
inc
out
sti
dec
adc
or
sub
mov
insb
mov
scas
dec
shl
cli
ljmp
and
fists
je
add
mov
adc
cmc
and
and
insb
dec
pop
jp
mov
mov
ljmp
pop
sbb
inc
dec
mov
dec
adc
out
add
add
cmp
add
sbb
add
mov
mov
push
jns
sbb
add
lea
daa
adc
mov
ss
cmpsl
enter
out
adc
add
movsb
icebp
sub
push
in
fs
add
and
sbbl
data16
and
sarl
mov
repz
and
add
xor
mov
xor
inc
into
dec
and
add
dec
pop
push
out
loopne
jecxz
sbb
leave
mov
cmp
inc
lds
pop
cmpsl
sbb
sbb
adc
mov
sub
dec
add
popf
cmp
pusha
outsl
mov
sti
adc
sub
cltd
adc
lret
fstps
add
jecxz
aaa
insb
movl
jle
sbb
lret
or
fs
or
les
mov
mov
ss
sbb
cmpsl
adc
lret
mov
pop
or
mov
mov
inc
stc
mov
insb
add
lea
clc
ljmp
in
sub
push
wbinvd
pop
push
push
das
dec
cwtl
push
push
inc
xchg
jg
repnz
mov
adc
aas
jns
push
ja
mov
mov
sbb
arpl
in
in
dec
push
outsl
xor
add
inc
or
jp
sbb
inc
fwait
mov
addb
push
nop
loopne
add
fistps
sub
adc
mov
rolb
ja
push
add
sub
pop
loop
dec
add
adc
push
mov
dec
push
imulb
adc
mov
cmp
decb
jle
cli
mov
sub
std
lea
inc
cmp
and
loop
cld
sbb
repnz
pop
add
push
movsl
add
mov
stc
jno
pop
aaa
inc
out
or
xchg
fwait
xadd
sbb
iret
enter
sbb
sti
imull
and
or
lret
pop
adc
add
add
adc
xor
adc
cmp
das
sbbl
xlat
cmc
fnstenv
cmpsl
sub
mov
add
sbb
mov
pop
add
or
lock
nop
add
inc
enter
sbb
dec
stos
xchg
mov
add
sub
sti
icebp
jmp
out
adc
jg
sub
add
push
and
ljmp
adc
sub
sub
cmp
movsb
pop
and
js
add
out
sahf
xchg
incb
ud1
out
imul
mov
add
popa
mov
mov
xchg
add
push
repnz
ss
pop
cmp
test
in
push
cmp
pop
pop
das
cmpsb
adc
mov
or
push
sub
shld
push
aad
mulps
push
push
dec
das
mov
adc
shrb
and
add
xchg
sbb
adc
and
bound
popa
mov
add
ret
mov
jle
test
mov
addb
mov
fldl
sub
push
pop
xlat
push
mov
push
jl
add
jne
inc
cmp
adc
add
in
xchg
add
add
xor
and
xchg
inc
adc
add
nop
fstpl
cmp
shl
add
add
and
aam
sub
xor
adc
mov
push
inc
sub
ret
cmp
sub
push
in
push
mov
push
mov
pop
sbb
loope
add
inc
mov
sahf
test
jb
pop
push
and
inc
mov
test
pop
add
insb
xor
push
mov
loope
lea
mov
cltd
jo
or
sub
movsb
add
pushw
sbb
push
push
jge
adc
into
sub
mov
decl
jne
add
mov
add
push
punpckldq
add
cmp
imulb
fdivl
ds
cmp
adc
fwait
pusha
dec
nop
notb
add
xchg
dec
inc
add
ja
mov
inc
add
adc
in
insl
add
xchg
pop
in
mov
f2xm1
jecxz
mov
mov
dec
je
jno
add
push
adc
dec
jnp
add
aaa
jno
xor
inc
clc
mov
pop
aas
sbb
mov
loopne
add
das
mov
loope
and
adc
out
rolb
push
add
mov
inc
scas
ljmp
cltd
fs
and
dec
testl
loopne
inc
jns
inc
xor
mov
pusha
pushf
insb
add
push
mov
add
and
nop
scas
add
xchg
adc
imul
outsb
adcb
xor
popf
and
inc
mov
imul
sti
pusha
adc
add
ror
loope
pusha
or
mov
dec
cmp
add
inc
jmp
or
mov
add
pop
shrd
push
pop
sub
mov
arpl
xchg
mov
dec
ficoms
cmp
movl
mov
or
sub
lret
and
hlt
xchg
sub
movl
leave
dec
xlat
popa
add
aaa
dec
add
adc
pop
imul
adc
mov
pop
mov
add
cmp
cmp
mov
cmp
or
or
lods
push
in
add
pushf
mov
add
xor
inc
xchg
bound
adc
cs
xchg
add
push
imul
add
sub
lret
shrb
iret
jae
or
aam
xchg
cwtl
outsb
shll
mov
rolb
add
xchg
mov
and
xor
leave
mov
lds
and
push
dec
xchg
int
loope
rol
xor
add
jmp
or
pop
orb
add
out
adc
inc
jno
ret
push
add
stc
mov
add
adc
pop
adc
pushf
add
mov
sub
test
mov
xchg
jge
pop
ljmp
movsb
add
and
test
adc
ret
pop
xor
enter
dec
sub
ret
push
add
aaa
es
les
dec
in
adc
out
push
push
sbb
xorb
mov
xchg
test
xchg
adc
roll
cmp
add
add
imul
mov
cwtl
jmp
faddl
add
push
jecxz
mov
xor
popf
into
mov
pop
add
or
in
movsb
jecxz
lock
push
push
cmp
pop
jo
das
xor
rolb
add
xor
movsb
pop
jbe
dec
inc
ja
add
jmp
pusha
adcb
dec
pop
and
add
sbb
nop
push
movsl
je
add
aad
jae
sub
push
mov
bnd
push
pop
sub
add
lea
add
adc
popa
js
add
and
mov
movsb
sbb
loopne
mov
jle
add
and
and
and
cmp
or
movsl
stos
mov
jnp
inc
aas
sbbb
add
or
add
pop
jb
jge
gs
adc
lods
sahf
mov
mov
adc
jno
add
jge
je
add
mov
pop
cmp
mov
cmpsb
jmp
loop
xor
push
enter
add
jo
jno
xchg
jae
mov
outsl
and
jnp
sbb
jl
inc
jge
jle
aaa
xchg
jg
int3
mov
adc
inc
cmpl
repnz
mov
lea
imull
or
lock
pop
mov
pop
pop
rclb
add
add
sub
push
or
sub
cmpsl
and
push
test
adc
jne
ret
in
adc
add
push
dec
cwtl
mov
shl
scas
xchg
add
orl
mov
rcl
cmp
and
test
lret
xor
adc
xchg
pop
ds
lret
loopne
es
sub
dec
or
jl
jbe
pop
dec
popl
adc
dec
mov
push
sbb
pop
push
push
mov
xor
jne
je
cs
mov
sbb
adc
pop
and
mov
add
mov
push
test
jl
in
test
sub
lret
mov
pushf
in
int3
adc
leave
test
rorb
loop
add
mov
stc
icebp
test
xchg
add
dec
movsb
into
lock
inc
add
add
inc
insb
incl
fwait
sub
sbb
call
ret
add
add
cwtl
add
xor
inc
xchg
loop
lahf
dec
rcr
cmp
sbbb
sahf
and
cmp
mov
cmp
push
test
and
push
pop
repnz
inc
mov
adc
push
incb
mov
push
inc
add
aad
call
fidivl
lahf
add
mov
mov
mov
adc
mov
cmove
or
push
jle
shlb
movsl
sub
and
shlb
add
xchg
incb
repnz
aas
clc
xchg
add
xchg
in
jg
cltd
xor
lcall
add
inc
push
jg
hlt
into
sbb
pop
in
cmp
mov
push
add
push
fisttpl
push
shl
add
imul
add
pop
mov
mov
test
loop
cmp
cmp
test
cmp
leave
notb
sbb
jno
aas
imul
adc
fs
mov
rolb
call
and
in
int3
and
es
roll
or
add
outsl
pop
push
dec
and
ljmp
fs
xor
adc
loop
iret
jne
nop
clc
pop
add
dec
sub
push
lock
xor
popf
lock
fiaddl
cltd
lods
or
call
lock
data16
mov
or
add
fisttpll
lret
cmp
cmp
xchg
xchg
loopne
enter
sar
and
mov
mov
popf
add
and
xor
mov
mov
test
pop
or
xorb
leave
xchg
sbb
xchg
sub
xor
and
adc
pop
fstpl
sti
mov
test
bound
imul
shrb
fsubp
pop
inc
lock
xchg
pop
jl
add
mov
mov
sbb
push
push
repnz
add
imul
fs
cs
insb
sbb
inc
add
cmpsl
aas
xor
add
cmp
or
push
mov
bound
inc
es
push
push
or
std
mov
mov
jle
add
sbb
inc
add
push
fwait
dec
mov
outsl
sbb
popf
jb
fisttpll
pop
rclb
cmp
fsubrs
in
loope
fstpl
fdivl
add
lcall
cmpsl
out
popa
cmp
or
mov
pop
jge
fimuls
mov
cmp
sbb
adc
add
dec
in
rclb
cmp
mov
and
scas
dec
std
cmp
adc
or
inc
shr
add
cmp
adc
add
jmp
cmp
pusha
jbe
sbb
push
subb
mov
daa
add
inc
add
mov
or
mov
addl
pushl
cmp
arpl
or
add
xor
pop
push
out
add
xor
out
add
cmpl
add
sbb
add
sbb
dec
mov
add
push
sbb
imul
mov
arpl
mov
push
add
dec
ds
pusha
movsb
sarb
push
or
stos
add
push
test
les
sbb
add
movsb
pop
xor
mov
jno
pop
repnz
pop
cmc
out
test
insb
add
inc
sbb
cmp
add
in
mov
lahf
imul
sub
cmc
mov
clc
out
mov
sbb
in
adc
inc
mov
push
adc
loopne
bnd
push
adc
add
popa
mov
sarb
jo
movsb
repnz
sbb
mov
mov
push
cmp
add
mov
xchg
packuswb
loopne
cwtl
and
pop
sub
sbbb
lret
addb
sbb
xchg
push
nop
mov
dec
lock
int
stos
lret
and
add
enter
mov
push
cmpl
rcll
insb
jne
jo
add
sbb
xchg
inc
push
in
pop
add
sub
pop
pop
xchg
jne
push
sbb
sbb
mov
fists
add
or
lret
add
dec
mov
dec
sbb
add
gs
add
arpl
push
popf
add
adc
sub
and
add
insb
repnz
pop
push
or
nop
add
out
jg
sbb
adcb
sub
cld
pop
add
xor
aam
pop
sbb
jmp
hlt
mov
int
xchg
or
arpl
add
mov
adc
pop
adc
aaa
jbe
push
xchg
adc
add
push
cmpsb
inc
xchg
cmp
fildll
lcall
push
mov
xchg
jl
ret
pop
imul
push
mov
or
and
push
sub
call
inc
jne
add
js
pop
xchg
mov
add
sub
es
scas
xcrypt-ecb
cmpsl
mov
mov
add
sbb
jno
enter
and
enter
mov
cmpsl
ds
fisttps
daa
push
out
and
and
and
test
pop
inc
sti
maskmovq
testl
pop
ds
mov
inc
jnp
add
jl
mov
das
dec
loopne
jne
mov
mov
adc
call
sbb
inc
pop
sub
or
push
sub
and
pop
xchg
mov
andb
mov
adc
xlat
ljmp
or
push
ss
in
push
out
adc
mov
jo
icebp
push
or
jb
pop
jae
inc
xchg
xchg
jbe
ja
mov
sbb
andb
and
jle
cmp
hlt
add
bound
cmp
sub
addr16
add
imul
mov
outsb
and
add
push
in
jb
cmp
push
sbb
add
push
xchg
pop
enter
pop
jb
cmp
sbbb
std
add
inc
in
jb
cmp
inc
sbb
mov
inc
inc
nop
mov
dec
fsubl
in
jb
dec
cmp
sbb
sub
add
ss
aaa
cmp
sbb
and
and
cmp
jb,pt
or
mov
adc
clc
arpl
mov
jbe
pop
push
push
inc
outsl
insb
add
mov
sbb
jg
movsb
push
inc
and
or
or
fstps
and
dec
inc
jb
in
jo
push
fxch
push
repnz
jne,pt
imul
pusha
in
add
push
push
inc
ret
sbb
popf
imul
popa
loopne
or
data16
rcrb
or
push
loopne
imul
addr16
push
inc
xchg
sbbb
or
xor
sub
push
or
les
sbb
sbb
and
add
xor
insb
jae
fisubs
push
sub
jns
pushf
rclb
push
data16
and
add
arpl
add
pop
push
in
add
push
bound
dec
jne
jnp
or
push
mov
xor
inc
mov
outsb
cmovp
push
cmpb
into
and
sbb
pop
popa
int
jns
es
je
add
add
pop
inc
jle
adc
out
add
inc
jne
push
cld
xchg
and
sar
or
clc
movups
adc
mov
popa
pop
arpl
inc
push
pop
aaa
je
aad
dec
outsl
movsl
sbb
push
push
test
add
jns
push
or
dec
add
cmp
xchg
and
subl
loopne
sbb
pop
and
mov
or
push
or
dec
and
inc
mov
add
or
rclb
cmp
andl
lret
jne
out
dec
es
and
sub
and
data16
dec
add
push
pushf
sub
sbb
cmc
orb
ds
add
movsb
or
sub
jb
iret
dec
cmp
mov
lahf
mov
fwait
loopne
int3
test
mov
inc
or
outsl
loopne
add
pop
inc
lods
adc
jo
je
mov
mov
js
andps
mov
pop
scas
adc
add
add
sbb
clc
cmp
xsha1
cmpsb
dec
mov
jbe
rcrb
rcr
and
mov
pop
push
cmpsl
inc
leave
sahf
xchg
add
scas
add
xlat
out
add
nop
js
add
add
xchg
mov
add
scas
aam
hlt
inc
mov
cmp
pop
xlat
mov
push
pusha
xor
add
xor
adc
pop
or
int3
shl
add
dec
xor
sbb
ljmp
les
add
mov
repnz
lods
add
xor
add
add
cmp
and
sub
andb
or
test
add
add
xor
mov
out
jbe
pusha
clc
adc
inc
add
push
loopne
mov
aaa
inc
scas
rcrl
mov
push
add
or
xchg
inc
repz
add
push
mov
dec
jnp
add
add
dec
rclb
add
jge
xor
push
mov
fs
or
push
loope
or
mov
adc
lock
imul
sahf
cmp
add
roll
pop
loope
and
cmp
add
or
inc
pop
push
mov
or
xor
add
and
xchg
sbbl
dec
into
cwtl
daa
add
push
bound
nop
test
mov
sbb
out
out
dec
rolb
jno
dec
sbb
dec
lcall
sbb
push
mov
adc
rclb
pop
in
adc
inc
cmpsb
inc
jbe
lods
push
add
bound
pop
rolb
jae
jl
rolb
or
psrlq
mov
push
mov
ss
add
lea
inc
sbb
sbb
or
adc
das
inc
aaa
aam
sub
sbb
aas
cmpb
in
xor
xor
movsl
push
adc
into
sti
orl
add
std
loop
mov
push
sub
adc
dec
pop
mov
cmp
xlat
add
out
xchg
lret
enter
imul
inc
push
mov
stos
popa
jo
dec
xorb
arpl
inc
mov
inc
jns
mov
push
mov
fs
dec
dec
mov
add
cmp
mov
add
dec
jae
addr16
sub
in
cld
push
cmpsb
push
push
adc
sub
aaa
addb
int3
add
push
jo
add
in
push
xchg
or
out
insb
or
incl
sub
push
adc
jae
add
push
or
xchg
sbb
outsl
add
cmpsb
jge
or
push
loopne
add
int
jp
aam
adc
sbb
rorb
fstl
mov
xor
andb
loopne
or
inc
js
int3
or
sbb
clc
pop
inc
movsl
add
inc
arpl
mov
aam
sub
cmp
mov
insl
je
aas
push
adc
mov
pop
mov
push
loopne
xchg
pop
dec
cmp
add
loop
pusha
inc
add
mov
adc
orb
inc
jl
outsl
mov
fsubr
jecxz
bound
add
std
or
jp
int3
add
cltd
iret
enter
xchg
mov
mov
sbb
test
add
xor
arpl
wbinvd
dec
mov
in
or
xor
mov
pop
jne
xchg
les
add
cld
add
je
cwtl
pop
or
icebp
imul
sbb
xchg
aam
dec
sub
pop
xor
add
sub
shlb
pop
mov
test
stc
xchg
xchg
cwtl
hlt
or
js
pop
and
xor
push
jnp
sub
pop
mov
push
gs
inc
lds
and
dec
push
adc
push
enter
imulb
mov
in
or
add
or
mov
repnz
xchg
rolb
jl
cltd
jmp
push
or
or
pushf
js
add
pusha
sbb
test
xor
or
inc
pop
adcb
lret
mov
xchg
mov
inc
aas
mov
aaa
cmp
jle
orb
sarb
mov
adc
or
push
xor
xchg
ret
add
nop
cltd
pop
rorb
sub
leave
sbb
call
mov
and
sub
add
sbb
pushf
imul
andl
ljmp
adc
inc
push
nop
insb
and
aaa
jae
nop
mov
jno
add
or
incl
cmp
adc
xchg
cmp
movsb
enter
add
and
dec
add
scas
movsb
xor
xor
pop
les
movsl
shl
push
adc
pop
xor
add
sbbl
mov
mov
or
ss
mov
cmp
add
and
pop
or
add
sub
pop
and
add
jo
pop
add
mov
pop
dec
int3
rcll
xor
shlb
add
add
jne
cs
cmpb
add
or
mov
mov
pop
or
call
enter
cmp
dec
mov
pop
mov
and
xchg
xor
roll
pop
adc
cmp
inc
pop
sbb
add
clc
ds
cmpl
add
adc
ret
add
pop
adc
iret
rolb
sti
popa
les
daa
cld
inc
dec
push
cs
or
mov
fs
pop
stos
push
or
pop
jo
imul
add
xchg
sub
sysret
lret
daa
fnstsw
mov
pop
test
cmp
cld
sub
lods
aas
mov
fmull
xchg
add
test
add
dec
cmp
xor
lret
sbb
mov
push
xchg
and
cmp
or
cli
clc
fiaddl
inc
cmovg
popf
ret
mov
mov
push
leave
push
xchg
les
jns
add
fnstcw
add
jbe
mov
add
mov
mov
xor
fiaddl
inc
ret
adc
add
xchg
fbstp
scas
mov
pop
test
add
std
call
fwait
xlat
push
push
ret
add
je
xchg
add
repz
bnd
dec
cmp
push
popa
pop
lret
sbb
cmova
lods
jle
inc
imul
or
push
sahf
dec
add
pushf
jne
add
mov
pop
add
test
dec
add
repz
inc
and
mov
adc
jge
jo,pn
mov
sub
loopne
outsl
nop
ret
movsb
cmp
mov
dec
jge
cld
je
add
lods
gs
add
xchg
jl
push
add
mov
push
aaa
xchg
mov
cmp
and
mov
mov
sub
push
mov
mov
insb
cmp
add
add
adc
pop
push
xlat
add
dec
pop
dec
lods
add
in
add
dec
rolb
imul
insb
add
imul
add
mov
movsb
ja
add
jno
push
outsb
adc
dec
inc
imul
dec
jg
jo
cwtl
xchg
seta
mov
mov
add
push
gs
movsl
cmp
test
xor
rcpps
sub
jb
inc
add
inc
mov
gs
pop
idivl
and
inc
add
jne
and
or
push
in
jae
popa
push
pusha
inc
jno
mov
cmp
test
mov
or
add
dec
cmp
pop
inc
sbb
dec
mov
fildl
test
out
xchg
add
adc
jb
ffree
insl
ja
push
ljmp
lock
add
mov
fisubl
add
outsb
fs
jl
ja
sub
popa
out
push
lods
adc
push
and
push
sbb
push
dec
fs
lock
xchg
push
lahf
cmp
add
or
pop
cli
sub
aam
lret
pop
mov
mov
pop
imul
iret
lds
or
lods
cmpsl
add
and
jb
adc
sub
outsl
cld
dec
stc
in
adc
pop
dec
jp
sbb
adc
movsl
add
push
add
or
pop
data16
imul
fimull
mov
or
outsb
jne
inc
fisttpl
les
push
mov
add
adc
call
ljmp
and
mov
sbb
add
movsb
imul
add
cmp
push
add
imul
int
add
sbb
rolb
push
cmc
les
push
call
ret
push
mov
dec
fmuls
mov
pusha
loopne
in
add
stos
adcb
add
push
shrb
push
jnp
testl
pop
push
add
rcr
push
add
inc
push
adc
cmc
inc
adc
shrl
cld
add
pop
dec
adc
dec
loop
loopne
xor
hlt
inc
push
inc
sub
add
dec
aas
dec
inc
cmp
dec
ja
pusha
int3
and
stos
inc
inc
ret
xor
jg
dec
lret
xor
js
inc
push
sbb
xor
and
and
addr16
and
bound
inc
xor
sti
lds
add
lock
push
push
rclb
sti
mov
fs
enter
xor
inc
sub
inc
mov
in
pusha
lahf
push
in
sub
js
add
sub
adc
inc
and
push
call
push
pop
pop
pop
pop
or
dec
mov
adc
or
cltd
adc
das
in
int3
sub
cmp
sti
mov
mov
pop
cmp
add
push
call
jl,pt
add
xor
adc
xor
dec
cmp
add
add
xchg
adc
push
push
mov
add
push
cmp
adc
add
insl
xchg
or
inc
or
push
mov
dec
sbb
cwtl
xchg
rorb
or
jne
xchg
pop
mov
fs
or
pusha
out
out
pop
cmp
shlb
adc
sbb
mov
adc
xor
mov
dec
pop
sbb
dec
div
out
into
add
test
sbb
lahf
push
add
and
xor
jnp
sub
das
scas
push
addr16
pusha
pop
add
sub
add
or
cmp
add
repz
test
in
out
add
sbb
jno
push
lea
jmp
ds
add
inc
sbb
pop
pop
add
inc
sbb
inc
xor
xchg
cmp
push
rclb
xchg
fldl
hlt
test
dec
add
jne
lock
add
xchg
jo
adc
cwtl
lret
hlt
pop
inc
adc
lea
add
orb
add
adc
add
jae
jbe
jo
jmp
lods
push
cmp
add
je
mov
mov
sub
cmc
clc
mov
mov
push
mov
test
dec
adc
jle
dec
adc
jne
adc
mov
add
mov
and
xlat
adc
add
cltd
xchg
jle
in
or
add
inc
sbb
add
lret
loope
jmp
adc
sbb
setne
cmp
or
aad
or
daa
mov
sbb
adc
xlat
lea
add
or
ss
adc
jge
divl
and
sbb
ds
push
xchg
fildl
addr16
mov
xchg
loope
sbb
mov
cmp
neg
add
cs
pop
sub
xchg
movsb
daa
cmp
sub
jbe
icebp
or
add
push
xor
leave
or
jle
lock
add
pop
out
and
sbb
adc
add
fdivrl
dec
push
add
rorb
add
push
mov
dec
add
jb
cmp
add
inc
mov
sub
xor
cltd
js
lret
inc
or
adcb
add
mov
dec
pop
add
jg
into
in
and
add
jmp
cltd
jnp
xrstor
insl
push
xorb
add
adc
lods
push
add
dec
aaa
and
cmp
fsubr
push
scas
mull
fidivl
popl
and
pop
jo
jmp
pop
loopne,pt
mov
lret
push
movb
mov
and
pop
jmp
mov
or
xor
outsb
nop
mov
imul
jle
inc
test
or
or
bound
cs
sub
mov
mov
cmp
xchg
cs
xchg
sbb
xor
test
jns
pop
adc
dec
sbb
enter
sbb
cmp
icebp
rorl
in
scas
add
jecxz
in
and
scas
in
add
cmp
push
push
mov
data16
mov
pop
jmp
xchg
adc
iretw
add
cmp
loopne
nop
pop
push
test
fstpt
sbb
cmp
movzbl
pusha
xchg
pop
mov
add
stos
inc
ljmp
sbb
push
mov
scas
add
mov
clc
lea
xchg
and
cmp
call
call
lods
mov
cltd
cwtl
xchg
push
sbb
movsb
lret
mov
fidivl
add
add
jl
lcall
int3
in
and
push
cltd
enter
mov
js
mov
es
dec
les
cmp
and
jge
aas
fstpt
popf
lods
nop
cltd
mov
leave
dec
stos
fs
lret
cmp
les
outsb
dec
fdivrs
daa
add
cmp
push
add
call
add
xchg
in
lock
mov
js
pop
xlat
fiadds
push
sub
js
in
add
cmovle
movsb
dec
xorb
push
sub
sbbb
jno
push
add
xor
sub
add
dec
cmc
insb
sbb
popf
dec
pop
mov
push
fnstsw
rolb
jb
add
jmp
inc
push
lock
and
fldenv
adc
jnp
mov
sbb
or
add
dec
clc
xor
lock
inc
cmp
call
sar
inc
or
or
cmp
push
js
aas
mov
add
nop
movsb
push
jno
hlt
test
pop
clc
ljmp
inc
cmp
outsl
icebp
pop
imul
nop
cld
adc
ja
or
jle
movl
inc
and
xorb
pop
cmp
and
xchg
inc
bound
fmuls
jge
jge
xchg
push
lahf
and
mov
int3
iret
inc
repz
outsb
mov
add
dec
aas
cmp
xchg
sub
rorl
dec
sbb
sub
push
add
ret
fistl
ljmp
aam
idiv
add
jne
pop
or
jno
xor
inc
adc
sbb
xor
push
push
orl
loopne
jae
negl
pop
and
ret
shrb
ljmp
sub
sbb
inc
push
pop
call
subb
sbb
and
cli
adc
add
test
mov
aas
jne
ja
add
loopne
push
mov
inc
adc
or
in
xor
add
and
lret
push
ret
mov
add
iret
xchg
mov
jge
add
in
incl
mov
ljmp
orl
cmp
repnz
int
add
and
add
push
jbe
movsb
aaa
add
gs
inc
or
sbb
ss
mov
es
das
dec
add
xor
pusha
sti
add
xchg
test
mov
loope
push
add
dec
call
push
cmp
xchg
xchg
pop
and
or
icebp
leave
cli
call
dec
in
cmp
orl
repnz
or
in
std
add
movl
cmc
lcall
dec
mov
add
add
int3
lahf
fdivr
lea
sbb
lods
sahf
xchg
pop
push
shlb
and
add
stos
jmp
or
jp
jae
add
sbb
aas
dec
push
push
mov
lret
mov
loopne
imul
inc
mov
popa
call
dec
push
mov
sub
adc
add
and
push
add
lock
insb
pop
mov
adc
call
add
add
jns
push
and
pop
pop
pop
insl
lock
and
pushf
sbb
xchg
ret
jl
add
syscall
ss
in
push
inc
add
xor
dec
xor
shlb
push
loopne
mov
popf
loopne
aaa
mov
mov
pop
mov
add
cmp
push
add
and
add
pop
cmp
sub
jmp
dec
cltd
xor
hlt
push
add
nop
movsl
andb
jnp
sbb
lock
addb
inc
sahf
lea
sbb
push
mov
pop
in
add
jecxz
jl
pop
or
add
and
mov
cld
cmp
je
std
dec
jb
cmc
fcoms
pop
jne
add
or
add
cwtl
jns
add
mov
push
add
add
mov
xor
add
or
inc
dec
or
push
mov
inc
leave
ja
inc
lahf
mov
push
in
sub
sub
sub
fcoml
add
or
cmpl
inc
pop
add
nop
shrb
cltd
test
hlt
dec
sbb
movsl
xor
in
out
movl
in
ds
and
movsb
adc
lock
fwait
mov
movsb
roll
es
idivb
lock
std
jge
add
data16
or
nop
adc
jle
or
and
rcrb
add
sub
subb
add
dec
ret
repnz
and
dec
fimuls
jns
add
sub
push
rorb
aam
xchg
pop
sbb
cld
mov
pushf
cwtl
adcb
inc
add
pop
or
jnp
add
push
mov
push
pop
pusha
sbb
add
add
xlat
mov
pop
enter
push
lea
lods
ds
xchg
sarb
orb
add
mov
ss
in
add
push
and
idiv
jge
add
nop
int3
cs
mov
add
mov
sub
or
add
mov
ret
add
or
iret
inc
cmpsb
pop
adc
xchg
jbe
adc
stc
fiaddl
aam
dec
inc
imul
add
xor
inc
sbb
jmp
xchg
add
into
sarb
sub
fdivs
or
int3
adc
cmp
pop
fstps
gs
cmp
add
je
movsb
rorb
add
data16
ja
mov
push
add
and
sub
add
or
dec
add
adc
mov
call
imul
add
ljmp
in
add
push
ficoml
imul
xchg
xor
mov
dec
je
add
adc
add
push
mov
pop
enter
add
ret
sahf
xor
cmp
add
sbb
loope
xchg
int3
adc
add
cmp
rcrb
sbb
inc
testl
aam
cmp
add
test
add
inc
test
jne
and
lahf
xchg
addl
and
inc
inc
xor
out
adc
ret
sub
pop
inc
add
sbb
sub
add
xor
aam
mov
and
add
clc
movsb
insb
add
call
sbb
mov
rclb
mov
jne
jb
lock
add
push
push
mov
popf
fidivs
sub
add
sbb
xchg
cmp
cwtl
cmp
jnp
push
movsb
adc
add
sub
cmpsl
pop
push
stos
or
pop
loopne
push
andb
add
lock
push
rcrb
inc
pop
and
push
test
pop
push
test
add
hlt
out
lds
insl
loopne
push
in
dec
add
stos
push
sub
movsb
imul
testb
les
lds
rclb
xchg
das
movsb
sbbb
test
pop
arpl
push
insl
cmpsb
adc
fcomp
mov
lds
mov
adc
jge
cmp
cwtl
or
push
push
mov
pop
lar
pop
ds
or
mov
rol
lock
fdivp
inc
rcll
stos
stos
pop
scas
jl
xchg
xchg
in
push
mov
aas
add
mov
add
pushf
mov
add
movb
mov
andb
inc
add
fistpll
and
push
jge
pusha
das
or
pop
add
jae
test
push
sub
mov
add
ds
aam
shrl
pop
pop
add
or
pop
jno
cmp
in
xor
sub
and
nopl
enter
fisttpl
orb
add
sbb
mov
xchg
jecxz
sub
push
ret
mov
xor
in
add
adc
or
movl
add
xchg
cld
addb
inc
test
and
xlat
sti
pop
and
dec
push
int3
ret
sub
inc
adc
mov
test
or
inc
pop
add
sub
add
mov
stc
or
ret
add
popa
and
movzwl
lea
sub
out
scas
inc
enter
pop
xor
push
push
xor
fsubl
or
leave
xchg
sub
sbb
pusha
mov
push
rcrl
jns
jno
and
cmp
cmp
mov
push
add
out
pop
std
rcrl
inc
shlb
mov
adc
rol
stc
jle
add
xor
mov
inc
and
jb
add
roll
mov
and
push
icebp
out
rcl
mov
pop
and
stos
xor
mov
je
cmp
arpl
sub
dec
fmuls
out
int3
shll
add
add
imul
jmp
enter
or
sarl
out
pusha
add
in
sub
sub
les
push
inc
adcb
pop
pop
popf
ficoml
dec
mov
nop
jmp
jo
jno
or
rorb
add
rolb
iret
push
mov
cmp
clc
and
cmp
jge
xchg
inc
dec
push
scas
add
push
sbb
pop
pushf
pop
adc
bound
test
ja
add
lods
lds
add
cmc
rorl
jg
mov
add
sbb
cmp
ja
testb
add
fsubl
jge
add
sbb
add
cmp
jae
or
push
and
mov
add
movsl
aam
inc
add
adc
lock
push
mov
les
bound
mov
pop
xchg
mov
std
sub
mov
cmpsb
sub
sub
push
add
aad
movl
pop
xchg
adc
add
ja
jno
xor
jo
cld
push
dec
mov
jp
fs
add
mov
add
jecxz
lock
rorl
pop
lds
stos
mov
jg
inc
adc
pop
push
and
mov
popf
add
ds
sub
repz
push
pop
icebp
cld
add
jl
mov
mov
add
xor
lock
fcmovb
add
pop
and
cltd
xor
ret
loope
push
or
cmp
jg
test
leave
jle
add
icebp
jl
lds
sbb
pop
lret
add
jle
jmp
scas
jecxz
je
cwtl
loope
nop
xchg
jbe
js
or
add
shl
add
stos
call
das
cmpsb
and
jg
pushw
sti
inc
xchg
dec
fdiv
inc
xor
call
pusha
add
add
add
push
call
mov
lods
gs
inc
add
add
adc
mov
push
int3
test
in
pop
or
push
xchg
mov
push
stos
cwtl
add
lods
call
clc
or
inc
adc
in
push
jmp
push
xlat
and
add
push
roll
and
lds
es
fsub
icebp
add
hlt
rol
dec
mov
add
inc
sub
sub
adcb
or
loopne
test
push
push
xchg
xchg
ret
sub
cmp
add
dec
pop
pop
xorb
fadd
push
inc
mov
push
sub
push
shlb
push
pop
daa
lret
dec
shrb
cmp
arpl
xor
repnz
add
in
jae
add
sub
hlt
mov
push
fnstsw
mov
push
pop
jae
mov
xorb
jge
rcrl
cmp
cmovne
nop
pop
loop
and
xor
test
int3
enter
pushf
sbb
adc
mov
imull
add
sbb
je
mov
add
ret
sub
push
sbb
mov
cmp
jo
rcrb
repz
add
mov
imul
xchg
int3
push
lcall
dec
jle
pusha
mov
mov
mov
pop
pop
or
and
test
pop
and
clc
inc
sbb
mov
add
push
call
roll
sar
dec
in
and
data16
or
mov
ljmp
or
dec
inc
add
or
nop
add
rolb
jmpw
outsb
mov
testb
daa
mov
int
je
push
cmp
loopne
and
jne
icebp
and
jmp
pop
xor
mov
adc
mov
test
inc
sub
mov
mov
movl
sub
xor
cmp
mov
jp
adc
adc
or
and
adc
jb
jo
push
add
sbb
add
shll
inc
jns
add
mov
popa
cmp
enter
or
xor
pop
test
and
outsb
pop
pop
sub
rclb
add
push
inc
out
push
pop
or
cmc
test
mov
or
push
inc
clc
adc
jnp
add
xor
stos
dec
pusha
xchg
mov
inc
shlb
mov
adcb
iret
sub
mov
pop
pop
clc
jns
btl
or
cmpps
ret
test
nop
xchg
add
insb
inc
hlt
stos
mov
cmovge
outsb
faddl
adc
imul
xchg
cmp
xchg
inc
insb
xor
out
push
getsec
xchg
fdivr
add
addb
out
add
pop
mov
add
pushf
pop
cltd
js
add
sahf
adc
js
add
pushl
jl
dec
jle
je
test
clc
rclb
psubsb
lods
in
add
and
dec
add
push
or
dec
adc
jno
subb
inc
popf
lods
shr
push
mov
jmp
adcb
mov
hlt
add
sbb
repnz
cmp
filds
xchg
pop
fldl2e
xchg
xchg
inc
aad
fildl
push
ffree
out
mov
pop
out
dec
add
cltd
push
loopne
aam
add
cli
jne
in
sub
shrb
test
add
mov
mov
push
jmp
cwtl
push
dec
test
and
push
push
add
xchg
add
xor
xor
xchg
sbb
fadds
xor
and
sub
movb
push
add
mov
and
lods
add
movsl
push
enter
jp
add
jl
add
jno
subb
inc
push
loopne
fstps
faddl
xor
dec
hlt
mov
in
cmp
lods
cmc
push
movsb
sub
lcall
imul
add
dec
or
adc
in
jne
sub
adc
int3
jl
sbb
and
pusha
dec
fsts
jle
add
cmp
pop
and
ret
incl
adc
push
sub
xchg
lock
lret
aaa
or
outsl
pop
xchg
fisttps
pop
adc
and
inc
sbb
movsl
pop
clc
push
lods
mov
fistl
andb
dec
jmp
and
lret
test
out
and
int
add
cmp
push
or
adc
pop
mov
pusha
sarl
dec
jb
or
cmp
add
adc
inc
popa
pop
je
push
add
mov
xor
push
ja
cs
mov
inc
int3
mov
push
arpl
fistl
test
add
mov
or
add
pusha
mov
je
lock
sbbl
insb
adc
add
and
push
inc
into
jl
push
mov
call
push
lcall
sbb
jns
mov
sub
mov
insb
mov
ljmp
mov
pop
dec
roll
add
leave
call
mov
xchg
mov
push
mov
sub
add
insl
dec
ret
adc
pop
cmp
add
pop
pop
negb
add
mov
adc
or
add
xchg
or
lret
test
das
loopne
inc
sbb
movsb
push
push
pop
mov
dec
mov
fistps
enter
es
je
cmp
xor
andb
shlb
adc
enter
outsb
je
or
lahf
push
cmpb
outsl
jb
test
data16
gs
dec
sbb
or
xchg
test
dec
add
xchg
inc
mov
xchg
push
int3
fcomp
outsl
orb
sahf
cmp
lahf
push
mov
lret
cmpl
test
add
jge
adc
pop
testl
mov
push
orl
scas
cmpb
out
jmp
pop
outsl
push
loope
and
clc
iret
pop
sub
inc
gs
cmp
xor
xchg
enter
lock
aad
fcoms
sub
fmul
dec
add
push
popf
lahf
test
pop
shl
ja
xor
bound
imul
rolb
scas
pcmpeqw
bnd
sbb
mov
or
cmpsl
nop
inc
popa
inc
inc
loop
add
xchg
aaa
sbb
add
or
dec
sub
js
addb
and
add
test
jno
lea
ss
push
add
or
push
sbb
pop
sub
adc
cwtl
mov
jg
and
pop
mov
test
dec
hlt
stos
lret
and
in
idivl
popf
sbbb
jo
jno
add
push
or
add
ds
jne
add
mov
cmp
inc
lock
inc
add
inc
clc
fimull
ds
or
mov
push
loope
jb
adc
inc
add
imul
mov
mov
aad
or
inc
mov
push
add
setb
or
dec
add
add
adc
test
cmp
mov
jns
jp
xor
sti
and
pop
scas
loopne
testl
adc
and
xchg
or
dec
xor
dec
cmp
lret
aam
sub
xchg
out
cmp
unpckhps
int
mov
xchg
adc
jecxz
and
mov
jno
cmpsl
aas
gs
daa
pop
dec
in
cmp
mov
xor
add
std
cwtl
mov
test
imul
leave
test
jnp
lahf
or
sbb
rorl
arpl
push
lret
and
xlat
xor
jne
sbb
mov
nop
call
add
pop
icebp
or
aam
cmp
sub
xor
sbb
or
out
fwait
sub
adc
out
lahf
addr16
repz
xlat
cmp
lret
add
dec
ds
test
sub
daa
ret
push
shrb
adc
enter
cmc
add
std
ja
adc
sbb
int3
cmp
cltd
pop
add
enter
out
fildl
pop
push
push
mov
test
loop
aas
les
js
lds
rcrb
sub
sbb
hlt
xchg
sbb
cld
js
sub
lock
dec
or
add
push
push
pop
popa
mov
push
mov
xorb
sub
xchg
ss
add
pop
jnp
add
cmp
add
into
mov
ret
dec
pop
cmp
and
aaa
pop
mov
int3
movsl
add
loop
pop
movb
inc
add
cmc
mov
repnz
pop
dec
inc
sub
setl
fisttpll
arpl
jge
mov
lods
cmp
inc
add
and
inc
sub
loope
hlt
push
xchg
add
outsl
mov
adc
jbe
mov
add
into
call
mov
mov
pushl
mov
jg
add
in
pop
sub
aam
inc
les
add
rorb
add
inc
mov
sub
mov
pop
sub
mov
push
jb
sti
adc
jo
mov
add
outsl
sbb
das
fiadds
add
jo
push
add
mov
out
add
adc
stc
leave
in
mov
jbe
or
pop
xchg
lods
add
fcomi
inc
mov
fsubrl
adc
das
imul
add
ret
jmp
add
popf
pop
add
mov
push
sbb
and
push
in
in
scas
sti
fcoms
jae
xchg
mov
add
sbb
jmp
fsubrs
aaa
pop
jbe
inc
ret
or
sarb
add
dec
loop
cld
sarl
rolb
add
and
adc
xchg
movsb
ret
pusha
and
sub
loop
adc
fs
adc
push
pop
mov
mov
sub
inc
leave
add
adc
loop
sub
add
pop
sub
shrl
sbb
add
add
sub
push
or
lahf
lds
adc
cwtl
mov
or
dec
shlb
rcrb
js
dec
popa
add
sbb
and
xchg
push
adc
mov
aaa
xor
mov
or
icebp
xchg
andb
cld
imul
add
lods
decl
xchg
inc
jb
mov
add
push
push
insl
outsl
nop
jns
xchg
or
sub
pushf
add
pushf
lods
nop
and
jne
adc
ds
pop
scas
mov
or
add
push
and
xor
push
test
pop
add
jbe
push
push
loope
subb
ljmp
push
push
mov
add
dec
mov
in
jnp
cmp
fcoms
pop
loopne
push
add
xor
push
test
xchg
push
mov
push
sbbb
incb
push
out
fiadds
in
test
fnstcw
mov
adc
lea
add
nop
lret
mov
mov
mov
aam
lock
enter
or
xchg
add
sbb
or
jmp
sti
mov
sbb
subb
push
add
jno
pop
shl
inc
dec
into
popf
cmp
int3
mov
loopne
sarb
sti
add
xor
jle
aam
add
pop
xlat
add
mov
movsb
add
jmp
daa
popf
repz
int3
shlb
ficoml
std
sbb
adc
adc
lar
xchg
pop
movsb
mov
loopne
add
and
dec
inc
je
cld
cmp
add
pop
sarb
or
pop
add
lret
xchg
fnstcw
push
enter
add
and
xor
add
add
add
mov
adc
push
jns
add
sbb
inc
cmp
scas
xor
or
xchg
adc
enter
lea
add
jbe
pop
add
and
dec
bound
int
lcall
add
sub
out
loopne
insl
clc
push
jle
jmp
mov
push
xchg
sar
iret
and
data16
movsl
out
add
pop
clc
pusha
xchg
inc
add
outsl
dec
mov
xor
call
lret
sbb
jne
out
inc
movups
into
inc
pop
daa
sub
inc
fimull
test
out
push
inc
clc
jmp
inc
pop
lea
jmp
nop
outsb
divl
jno
add
pusha
mov
xchg
or
add
push
and
push
incb
xchg
jg
or
push
jle
mov
jp
or
fst
mov
out
sti
movl
adcb
test
call
insb
dec
cmp
mov
inc
test
or
push
scas
fcom
popl
inc
popa
les
jg
mov
push
mov
repnz
mov
inc
aas
add
divb
movsl
xchg
mov
inc
pop
je
jbe
add
aam
pop
call
inc
add
lret
cmpsl
push
shrl
jg
inc
jo
xor
push
mov
push
cli
jmp
aas
add
jns
dec
test
cvtdq2ps
mov
fs
fstpl
inc
pop
jno
test
add
je
mov
mov
sti
mov
lods
cmp
add
or
cld
jge
lock
clc
inc
add
push
bound
je
or
or
push
sar
out
shl
lock
dec
addr16
in
incb
jle
xchg
add
loop
or
fdiv
mov
mov
pop
xlat
add
add
add
or
push
mov
fildl
rcll
pop
cld
push
add
rcll
push
jbe
add
fs
xchg
dec
and
or
das
xlat
ret
mov
sysret
pop
cmp
or
adc
sti
sbb
nop
sbb
test
cmp
mov
jg
pop
inc
in
add
add
mov
out
add
mov
incb
or
and
jle
pop
fadds
pushf
aas
inc
jbe
and
dec
lock
ret
mov
mov
inc
dec
dec
pop
leave
add
xor
xchg
and
clc
mov
dec
and
iret
jo
ret
inc
lret
push
out
add
push
rorb
mov
add
ljmp
in
adc
movl
jg
sbb
dec
fsubrl
jle
add
push
push
pshufw
int3
mov
nop
add
dec
or
gs
add
jns
adc
dec
push
add
lret
pop
js
pusha
push
arpl
jg
pop
push
dec
ljmp
hlt
pop
inc
or
and
sbb
jmp
subl
xchg
xor
call
ror
rcrb
adc
sub
and
add
mov
xchg
rclb
sub
add
push
call
fsubl
jl
rep
mov
sub
jmp
xor
cmp
js
cmp
mov
or
mov
pop
and
repz
in
mov
lds
push
arpl
add
push
and
pop
jo
stos
movsw
js
pop
decb
scas
pop
jns
pop
adc
mov
pop
xor
xchg
fbld
inc
xchg
daa
jle
imul
add
ds
inc
xchg
test
add
sbb
dec
mov
or
sti
mov
dec
shlb
jl
add
xor
inc
add
loop
add
mov
jp
ret
jmp
roll
flds
popa
decl
adc
add
stos
es
icebp
lods
lea
xor
out
test
mov
push
setle
cli
and
push
pop
push
popa
add
pusha
push
pop
test
add
push
or
add
or
sahf
imul
adc
jbe
adc
scas
push
adc
mov
inc
ret
ja
cmc
add
test
rcrb
dec
inc
leave
push
push
jl
jb
mov
xchg
add
adcb
add
or
sbb
decl
pusha
das
movntps
sbb
shrb
add
gs
mov
add
pop
xchg
stos
int3
jbe
scas
aas
mov
cmp
and
shrb
cmpb
in
jae
jge
add
iret
jns
jmp
push
pop
jp
cmp
cld
and
jp
orps
or
add
adc
add
xchg
mov
shrl
cmp
sub
shl
dec
jmp
mov
addb
xchg
repz
nop
stos
push
or
mov
mov
mov
or
ror
jl
adc
add
adc
imul
imull
scas
bound
add
insb
xor
rolb
mov
adc
push
dec
pop
jnp
jp
repnz
outsb
cmpsl
iret
nop
mov
xchg
or
and
sub
mov
lock
mov
jl
xchg
mov
add
jns
or
pop
lea
add
xlat
push
xchg
mov
mov
cltd
test
lea
mov
add
test
xchg
add
jo
add
or
mov
loopne
frstor
mov
add
je
cmp
xorb
or
es
psubd
inc
pop
cld
and
clc
fmuls
inc
loopne
pop
add
pop
xor
inc
ret
cmp
sbb
icebp
aam
push
sub
inc
test
decb
cvtsi2ssl
rcrb
and
add
sbb
inc
jne
add
add
adc
add
adc
insb
cmpsb
nop
add
push
js
adc
push
add
inc
orl
sbb
jge
push
cld
and
aaa
or
jne
add
push
pop
add
jp
push
mov
stos
nop
or
addb
add
inc
adc
repz
cltd
add
cmpsl
xchg
daa
or
lock
mov
dec
dec
push
lock
lods
and
rcrb
push
and
fstpl
xlat
cmp
xchg
fs
and
dec
adc
push
and
add
scas
push
push
mov
fimuls
pop
mov
std
cmpsl
mov
mov
js
fcompl
xchg
cli
test
jb
push
cmpsl
pop
repz
or
push
cmpsb
sub
lcall
test
add
mov
or
loop
insb
or
sub
rcr
lret
add
add
in
sub
add
and
lea
mov
push
movsb
mov
lods
fnstcw
jbe
sbb
and
xchg
add
mov
sub
cmp
and
mov
popf
inc
cmp
sbb
movsb
mov
es
pop
jmp
cltd
add
adc
dec
adc
jecxz
jns
add
or
adc
loop
rol
pop
arpl
lea
int3
call
cmovs
add
push
dec
pop
add
cmp
dec
add
out
iret
subb
pop
sub
jbe
dec
xor
add
pop
cs
jecxz
add
push
inc
cmp
push
mov
pop
pusha
test
push
inc
dec
add
inc
int3
aad
and
mov
in
sarb
cld
jae
stc
sbb
sub
pop
add
js
test
or
dec
in
or
testb
xor
fwait
ss
mov
cmp
sbb
incb
in
cmpsb
push
mov
inc
cmp
pusha
nop
ret
adc
imul
test
mov
aam
jle
xchg
add
sub
xchg
jmp
push
iret
xchg
lods
stc
lahf
push
inc
dec
push
shlb
add
fisubrl
add
decb
outsl
add
lock
fists
sbb
in
add
pop
pop
cmpsl
loope
js
arpl
sbb
inc
lahf
shl
cmp
push
add
sub
add
in
jns
xor
dec
les
imul
inc
icebp
das
and
pop
movzwl
leave
in
xor
pop
push
jo
jno
dec
popf
pop
add
in
jnp
adc
das
scas
adc
inc
outsb
subb
cmp
add
cs
scas
pop
js
hlt
or
push
inc
xchg
jecxz
inc
iret
dec
and
add
shl
fidivs
divb
dec
inc
add
imul
data16
add
hlt
mov
pop
adcb
negb
aas
ror
and
xchg
pusha
addr16
nop
cld
pop
movsl
out
add
out
int
xor
add
and
shlb
xchg
mov
pop
pop
xchg
test
mov
jae
cmp
into
icebp
dec
cld
mov
cmpsl
inc
and
inc
push
in
jbe
popa
pop
jne
push
pop
xor
jp
cmp
dec
sbb
flds
xchg
mov
fadd
movsb
out
add
movb
mov
add
pop
or
add
and
cmp
mov
mov
sub
call
add
or
pop
add
adc
xor
fidivs
jnp
jge
xor
sub
push
cs
out
mov
add
ljmp
out
ret
push
cmc
add
int
lret
mov
jp
add
inc
ficoml
add
xor
cmc
adc
jg
add
fdiv
lds
pop
and
scas
popl
and
call
mov
ja
outsb
jo
cmpb
push
fs
add
lret
enter
adc
adc
mov
test
jmp
or
adc
inc
hlt
lahf
push
mov
sub
pop
les
cmp
or
loopne
push
add
jns
das
adc
mov
sbb
mov
or
xor
add
test
popf
add
push
sub
in
dec
adc
xchg
cld
jecxz
xchg
push
jmp
sub
push
fiaddl
dec
pop
sbb
push
push
rolb
dec
xchg
insb
jb
pop
push
or
stc
cs
das
pop
pop
xor
push
test
movsb
mov
lret
adc
pop
je
imul
xchg
add
push
inc
xchg
cmpb
or
xor
dec
pop
es
ss
mov
mov
nop
data16
jns
sub
dec
inc
dec
clc
xchg
mov
add
sbb
add
ret
insb
aad
jmp
es
lret
and
sbb
lock
mov
sub
cmp
imull
jae
mov
cs
push
sub
int
mov
xor
jo
push
xlat
push
or
add
mov
out
faddl
pop
add
or
inc
push
add
add
add
sbb
pop
jle
cmp
adc
lret
sub
push
add
and
stos
push
fcoml
sub
cmp
add
pop
adc
inc
xor
ja
pop
loope
xor
add
xchg
jle
and
sbb
mov
pop
pop
push
loope
pop
or
adc
inc
outsl
ljmp
add
adc
cld
jg
mov
mov
sub
or
inc
sbb
cltd
add
add
arpl
sbb
rol
xchg
push
cmp
es
add
mov
pop
lea
add
adc
and
adc
and
dec
fstps
add
repz
lcall
mov
add
pop
push
add
rcrb
adc
shll
pushf
sbb
gs
or
outsb
pop
and
into
or
fldl
lock
adc
add
inc
sbb
inc
and
xor
testb
sub
dec
call
or
out
push
push
and
xchg
jbe
xchg
lock
mov
scas
daa
in
inc
incl
jmp
sub
inc
pop
push
and
les
dec
jns
xchg
mov
in
pop
sti
sub
dec
repz
cmc
mov
adc
cmp
es
aam
leave
loopne
std
out
std
add
or
lock
add
add
add
lret
pop
mov
or
popa
adc
add
push
sub
ret
std
mov
mov
jle
fldl
mov
sbb
mov
push
mov
mov
aam
add
ljmp
cmp
push
or
insb
enter
ret
adc
add
sahf
cs
push
or
cld
and
test
jo
sub
pop
aas
or
add
sbb
push
xor
in
push
xor
cmp
sbb
loop
dec
lret
xlat
ljmp
mov
or
and
out
ljmp
add
adc
push
pop
mov
push
pcmpgtw
or
rorb
xchg
add
mov
jge
add
mov
dec
push
mov
add
lldt
jp
push
mov
mov
jg
add
fmull
xor
push
cltd
imull
into
call
adc
popa
mov
mov
add
pop
mov
aas
scas
xor
jne
enter
sbb
cmp
and
sub
pop
jo
push
shll
xchg
mov
or
mov
shrb
enter
mov
mov
or
pop
test
pop
int
stos
out
add
mov
mov
lret
push
cmp
dec
jae
mov
cld
movsb
roll
and
bound
dec
inc
rcrl
ret
aam
hlt
daa
lock
pop
and
into
xor
outsl
imul
mov
add
push
and
xor
add
cld
pop
cmp
pop
outsl
ds
cmp
jg
add
loopne
inc
fwait
xchg
jbe
je
shlb
push
mov
cmp
jns
movsb
movsb
add
adc
xor
xor
xor
fxch
iret
nop
add
mov
push
adc
fisttps
fcompl
test
movb
mov
mov
push
stc
aad
sub
movsbl
add
adc
test
cmp
or
add
insl
push
dec
ds
sub
lcall
push
add
out
jl
and
sub
sub
iret
orl
push
mov
or
lds
add
sub
cmp
clc
jl
cld
fisubs
pop
add
int
or
sub
pop
cwtl
adc
out
call
xor
decb
lods
pop
add
les
add
daa
lcall
inc
mov
mov
add
push
pop
std
mov
jmp
jo
lods
mov
pop
adc
add
cmpsl
cmp
cld
mov
xchg
pop
addb
xchg
pop
sbb
push
fildl
hlt
aad
cmpsl
mov
ficompl
test
jo
add
lock
outsl
mov
mov
push
aas
inc
jo
dec
xorl
insl
dec
pop
add
adc
jecxz
adc
clc
add
sar
pop
sbb
gs
addr16
cmpsb
leave
add
sahf
mov
jl
cmp
std
push
or
xchg
cmp
cmp
jns
das
and
adc
xorb
hlt
push
add
add
sub
shlb
jle
or
divb
movsb
rcrl
fbstp
movl
fucomp
daa
push
push
or
adc
mov
lock
in
loope
pop
mov
test
sarb
adc
arpl
lock
lcall
nop
add
cmp
shlb
ret
sub
mov
xlat
xchg
and
dec
mov
push
fimull
call
je
mov
mov
sub
add
cmpsl
daa
test
hlt
loop
jbe
fxch
cs
dec
scas
jno
andb
or
push
test
jmp
sub
add
in
add
mov
pop
pop
sbb
jae
add
mov
sbb
movsb
add
adc
or
pop
in
adcb
add
add
neg
test
push
xor
movsl
push
push
scas
in
add
or
and
pop
adc
push
push
nop
xchg
sub
xchg
inc
and
push
jl
inc
add
pop
ret
in
or
dec
xchg
les
outsl
xorl
and
and
cmp
xor
mov
cmp
mov
dec
out
dec
mov
test
out
mov
add
xor
lea
sub
lock
das
or
sbb
inc
mov
jmp
add
push
test
jbe
add
lahf
xchg
pop
cmp
add
test
cmp
add
push
in
mov
pop
mov
into
movsl
mov
mov
add
adc
jae
aam
inc
int3
in
add
xorb
dec
mull
push
push
enter
test
repnz
xorb
mov
add
shll
pop
add
push
rolb
sbb
adc
sti
cmp
pop
int
cmp
add
int3
cmp
lods
cmp
cmpsl
lods
das
push
sub
cmp
std
dec
test
into
cld
pop
repnz
add
add
jbe
xchg
and
sahf
imul
movsb
fsubl
xchg
in
cs
pop
push
inc
fdivrs
mov
add
into
mov
add
push
or
imull
sbb
int
dec
decb
lods
data16
dec
imul
add
sbb
pop
add
mov
and
mov
aam
mov
clc
add
call
sub
cmpsb
je
mov
mov
dec
shl
push
dec
sbbb
and
fs
rcrb
mov
lods
fbstp
and
incl
xchg
aam
arpl
sub
test
cmpl
add
adc
faddl
mov
xchg
jl
dec
pop
add
gs
sub
push
cld
jle
add
je
mov
or
or
jmp
push
add
movsl
pop
jle
add
add
inc
dec
adc
sets
jmp
add
cmp
call
add
mov
jmp
add
dec
xor
mov
pop
movsb
xchg
testl
in
jb
sbb
pushf
add
in
inc
movsl
pop
dec
xor
lods
cmp
cmp
lds
repnz
jle
cmc
jb
pop
lods
and
or
adc
cmp
sub
cmpsl
add
pop
jmp
js
cmp
stos
or
test
jne
mov
inc
insl
mov
cmp
dec
add
fadds
push
mov
das
ficompl
push
cmp
dec
je
jl
outsl
adc
jne
hlt
sbb
push
mov
jo
int3
dec
int
popf
adc
cmpsb
lret
add
cltd
inc
inc
inc
sbb
push
or
iret
pusha
pop
popa
mov
jp
loopne
sarb
adc
jne
fs
leave
adc
or
add
mov
mov
in
push
rolb
push
or
mov
lods
sbb
adcl
repnz
jmp
push
dec
add
stos
call
pusha
dec
stc
mov
add
xchg
mov
es
add
dec
push
out
lcall
push
pop
movsl
sti
push
cmp
cmp
clc
add
lea
add
ret
or
mov
int3
into
nop
sahf
mov
xor
cwtl
addl
icebp
cwtl
or
ret
loope
shl
and
es
adc
adcb
xlat
in
ds
add
js
roll
leave
lock
add
into
imul
test
xchg
dec
jp
add
data16
add
jg
push
jle
add
shll
mov
lret
call
jge
movb
xor
loope
nop
add
mov
or
pusha
add
pop
flds
je
aam
and
movsb
pop
adc
inc
fisubl
loop
jle
adc
pop
add
sub
dec
jo
lcall
pop
fwait
lahf
adc
add
xchg
loopne
add
xor
add
jmp
pop
mov
int3
mov
pop
add
adc
mov
mov
push
addb
jo
je
repz
or
dec
popf
push
ds
rclb
add
push
shl
inc
movsl
push
fsubp
add
add
pop
pushf
and
mov
push
jmp
sub
das
add
mov
inc
fstps
xchg
add
and
mov
pop
sbb
rcll
ss
cmp
jae
and
sub
xchg
jge
push
dec
ss
xor
and
scas
aam
test
push
add
sbbb
pop
add
mov
int
or
cmp
aam
mov
xchg
popa
jb
fsubp
movsb
xor
lock
add
inc
jae
daa
aaa
xchg
roll
aam
pop
add
inc
sub
cmp
int
dec
pop
add
xor
jno
add
adc
test
add
push
mov
jno
sub
or
fisttpll
adc
icebp
push
xor
sub
cmp
jle
testb
je
lret
cmp
add
rclb
dec
mov
sub
dec
mov
mov
lcall
mov
add
insb
rorb
sub
mov
sbb
pop
push
lret
pop
jle
sbb
xchg
idivb
jo
jb
dec
push
inc
int
imul
stos
test
add
insl
bound
pop
in
out
add
sbb
mov
test
push
mov
pop
mov
pop
pop
xchg
data16
test
nop
mov
add
add
mov
lea
jnp
nop
jl
pusha
xlat
mov
mov
pop
cmp
cs
out
xor
sbb
mov
dec
mov
mov
adc
cmpsb
cwtl
xchg
pop
mov
add
call
xchg
and
pop
sub
and
flds
mull
inc
inc
add
scas
pop
cld
cld
dec
sbb
loop
cmpsl
clc
cmpsl
mov
lods
adc
sarl
cmp
mov
adc
mov
cli
int3
dec
hlt
fld
add
lret
jnp
add
mov
sarl
add
add
repz
cmpb
loopne
aas
pop
dec
add
push
lea
jo
push
jmp
add
mov
adcl
push
das
test
mov
mov
jl
rorl
rorl
loopne
sub
xchg
sub
test
dec
xchg
lds
pop
dec
xorb
icebp
notb
push
cli
mov
outsb
add
sub
xor
pop
adc
adcb
in
lods
add
leave
pop
mov
nop
repnz
mov
add
shlb
or
shll
xor
add
clc
xchg
aad
or
test
add
pop
daa
add
mov
mov
add
bnd
add
push
xor
pop
jmp
inc
mov
push
mov
sbb
inc
add
and
dec
sub
jns
jecxz
sarl
lahf
jb
je
mov
aam
dec
sbb
sub
pop
add
jecxz
or
pushf
test
lcall
jl
shrl
leave
or
test
mov
or
mov
pop
sub
sub
add
fists
push
cmp
movsl
xlat
outsb
hlt
adc
ds
add
daa
mov
in
lahf
dec
inc
push
xchg
push
add
addb
and
hlt
mov
jbe
mov
in
pop
push
jno
mov
into
push
inc
xor
inc
aaa
call
jp
rcrb
sub
sahf
or
outsl
inc
movsl
aad
add
or
mov
lcall
jb
and
adcl
scas
pop
bound
dec
fs
jnp
push
and
das
mov
add
push
popa
je
xchg
xlat
mov
mov
std
add
aad
leave
add
cmpsl
inc
in
sti
iret
or
or
push
mov
pop
add
daa
xchg
mov
add
notl
call
adc
add
pop
or
mov
sbb
mov
fwait
pop
rcpps
aas
push
mov
aaa
add
and
enter
out
sub
pusha
fidivl
cwtl
inc
mov
dec
nop
movsl
std
int
add
pop
ljmp
cld
movl
push
add
xchg
mov
xorl
jmp
aaa
inc
pop
cmp
pusha
ja
adc
sbb
mov
push
es
xchg
add
call
or
das
lret
lret
xorb
dec
sbb
xchg
fldt
jne
add
incb
xchg
dec
out
lret
cmp
inc
mov
pop
call
inc
cmp
jne
lret
sub
mov
pop
scas
mov
push
in
add
hlt
xchg
and
xor
aaa
subb
mov
inc
xchg
test
mov
push
pop
adc
shr
push
mov
pop
jmp
cltd
in
mov
cwtl
in
pusha
mov
sbb
add
xor
pop
or
shlb
pop
jmp
dec
outsl
js
call
xchg
or
add
fs
dec
test
loopne
xor
pop
outsl
mov
jns
mov
xchg
inc
sub
in
sub
test
add
outsl
mov
fldl
ret
out
xchg
movsb
pop
mov
jne
add
inc
xchg
fiaddl
dec
xor
inc
shlb
adc
in
arpl
call
das
mov
or
adc
sti
movsb
mov
mov
add
add
loopne
fadds
push
pusha
inc
fsubl
sub
add
test
int3
clc
mov
cmp
addr16
enter
repz
cmp
lock
sbb
pop
loopne
cmc
dec
sbb
mov
and
add
sti
sbb
aam
mov
ja
mov
xor
fsubr
adc
sbb
add
movsl
notl
fs
mov
jo
in
add
xor
inc
loop
add
sub
push
outsb
pop
sbb
call
or
cmp
cld
mov
dec
push
add
enter
lock
mov
stc
popf
testl
pop
movb
or
mov
notl
test
ljmp
cmc
adc
xor
inc
mov
imul
adc
add
mov
scas
dec
adc
rcrb
or
push
call
jmp
cmpl
mov
ljmp
add
je
dec
int
iret
aas
cmp
or
mov
outsb
or
lock
add
jne
loop
push
fnstcw
jae
add
test
dec
insl
mov
imul
cmp
mov
push
enter
lret
push
mov
and
xor
dec
add
movd
pop
in
add
jo
lods
mov
cmp
out
pop
sub
or
mov
ds
stc
add
dec
dec
sbb
pushf
adc
insl
sub
popf
and
hlt
xchg
jne
int3
jno
jno
xor
sub
lret
call
jmp
mov
arpl
add
test
jno
add
or
pop
cmp
adc
jmp
xchg
sbb
and
call
mov
sub
pop
mov
adc
xchg
dec
jae
popa
into
inc
mov
or
int3
fs
push
add
ss
inc
sub
push
es
sarb
and
sub
fnstsw
and
cmp
rolb
mov
and
add
push
popf
pop
cltd
out
push
jae
mov
add
jge
je
add
adc
push
cmp
adc
subl
add
pop
and
call
xor
call
dec
frstor
mov
addr16
or
insb
add
jle
fs
hlt
stc
pop
add
dec
and
sarb
jb
add
and
add
pop
add
mov
add
dec
push
std
lds
adc
fstpt
and
push
dec
cmovno
aam
and
nop
pop
add
and
dec
hlt
aad
movsl
imul
jbe
mov
in
adc
in
xchg
ret
pop
les
jbe
add
xchg
jne
ja
cs
or
mov
dec
mov
loopne
or
sbb
shll
adc
inc
test
pop
xchg
push
sub
mov
lds
xchg
lods
pop
enter
stos
xor
ja
pop
cld
xor
fmul
aad
outsl
nop
in
or
push
adcb
fistl
inc
xorb
push
mov
loopne
add
jbe
dec
xor
dec
sub
int
xor
adc
adc
and
xor
das
testb
outsb
loopne
add
imul
jns
fistpll
or
mov
jnp
lds
movsb
sbb
or
cmpsb
les
push
and
nop
mov
add
mov
cld
or
and
sarb
inc
push
xor
add
cmc
decb
rcrl
or
xchg
mov
je
js
pop
test
xor
icebp
dec
mov
nop
clc
mov
mov
or
pushf
xor
and
scas
repz
mov
push
push
rorl
mov
mov
or
push
pop
or
shlb
int3
aam
mov
mov
sub
and
dec
pop
push
push
add
push
je
arpl
pop
int
fmul
or
cwtl
insb
repnz
pextrw
mov
xchg
aas
inc
and
inc
mov
add
rorb
fdivr
add
mov
lret
leave
xlat
test
jmp
jl
add
and
das
cwtl
sub
cwtl
mov
sahf
int3
mov
add
in
pop
add
dec
or
ret
loopne
xchg
mov
divb
inc
inc
push
test
dec
ljmp
cmc
pop
add
movsl
xchg
sub
call
push
or
and
lock
mov
pop
jb
mov
sbbb
dec
push
add
in
hlt
cltd
add
jo
sbb
cmpsb
or
pusha
and
push
mov
adc
sbb
mov
sub
and
sub
lock
jb
add
loop
rcrl
cmp
xchg
test
shr
sub
mov
or
gs
jo
pop
nop
popa
push
and
mov
pop
cld
mov
pop
shll
out
jns
test
or
add
outsb
je
jae
rolb
or
cmp
or
add
push
mov
adc
insl
mov
ljmp
mov
cmp
cmp
add
jmp
js
outsb
sbbb
mov
cld
mov
inc
add
mov
push
jo
fildll
xchg
pop
add
sub
inc
cmp
cmp
and
cmpsb
push
add
pop
aaa
mov
rol
pusha
je
sbb
mov
inc
add
addl
inc
jo
pushf
fildll
fcomps
nop
loopne
mov
mov
roll
add
sub
outsl
js
clc
add
add
inc
les
add
pop
test
dec
aas
adc
xchg
cmovle
or
pop
adc
je
add
ret
jno
ret
sbb
fwait
test
jne
dec
mov
push
add
xlat
xor
or
and
add
xchg
rcll
daa
les
add
inc
cmp
int3
and
or
cmp
sets
mov
xchg
xchg
cmp
push
mov
lock
ret
nop
or
sbb
mov
sbb
xor
inc
or
pop
sbb
enter
inc
add
mov
sbb
inc
and
push
xor
jmp
shrb
sub
add
enter
int3
fs
pusha
repnz
mov
adc
add
xor
addr16
add
sub
mov
fildl
scas
pushf
enter
xor
add
nop
adc
cli
testl
push
inc
dec
mov
adcb
mov
or
js
dec
ljmp
add
sarb
outsb
and
jge
stos
mov
stos
lcall
rclb
mov
add
cli
and
popl
push
sbb
push
in
add
out
adcb
or
and
pop
sub
iret
mov
add
cmp
inc
adc
daa
add
sub
pop
push
add
insl
dec
mov
dec
sbb
imul
inc
add
dec
clc
popf
dec
adc
out
inc
hlt
jl
pop
inc
sbb
decl
out
add
sub
pop
ja
out
add
pop
jl
add
pusha
mov
shrb
jae
add
inc
xlat
dec
pop
movsb
push
mov
dec
inc
xchg
repz
pop
mov
pop
mov
jg
or
cmpsl
lcall
add
fnstsw
push
inc
out
loopne
or
add
cltd
sbb
sub
ljmp
data16
mov
add
push
enter
lmsw
mov
mov
je
mov
add
pop
sbb
xchg
mov
or
pop
jle
fildl
adc
mov
mov
pop
jp
pop
jo
loope
push
xchg
pop
jne
add
call
and
add
xchg
pop
into
mov
sahf
jo
and
cmpsb
mov
and
add
popf
inc
mov
xor
mov
and
push
rclb
sub
in
dec
leave
clc
mov
jo
sub
inc
adc
jmp
mov
xchg
or
ret
scas
pop
lods
outsb
dec
clc
add
or
push
push
sub
rcll
fmul
sub
jno
jp
mov
xchg
ja
add
cmp
cmpb
jne
pop
fildl
push
mov
push
shrb
out
push
pop
data16
add
xchg
call
xchg
add
mov
and
xchg
cs
popa
pop
jmp
aas
inc
lock
nop
sbb
add
cld
lret
test
je
sarb
inc
lds
fldl
mov
shll
test
sarb
lock
test
loopne
mov
stos
add
mov
add
add
mull
xchg
in
xchg
pop
add
mov
mov
mov
add
and
inc
add
fs
xchg
loopne
xchg
sub
mov
ret
int3
fadds
xchg
sub
add
xchg
mov
out
mov
xor
cmpsb
pop
cwtl
add
lods
pop
mov
rcll
adc
in
lcall
add
mov
adc
adc
call
in
add
add
adc
add
clc
add
push
add
inc
in
cmp
fsub
add
arpl
sti
add
dec
out
test
sub
dec
inc
mov
jns
pop
in
orb
scas
popa
dec
andb
lock
loopne
rsm
jle
xchg
cmpsl
push
nop
dec
out
jmp
add
push
es
ret
daa
xchg
aad
fsubrs
shrb
loopne
sbbb
pusha
repnz
filds
clc
ret
pop
icebp
out
lret
lock
into
inc
add
in
dec
rol
test
cld
loope
add
shll
inc
add
mov
adc
inc
je
mov
push
or
loope
sbb
lret
in
fiadds
ja
push
and
add
cmc
cmpsl
jno
paddw
addr16
cmp
push
sub
add
es
into
shr
xlat
add
sub
lock
dec
add
andps
call
jl
add
and
adc
packuswb
ss
adc
and
sbb
inc
add
push
push
out
and
xor
jmp
or
sbb
fs
jmp
add
leave
pop
and
bound
iret
out
cs
mov
fwait
add
jmp
dec
rcrl
xchg
stc
mov
sahf
add
lea
sbb
ret
pushf
mov
add
mov
rcrl
jne
call
or
cmp
xor
jg
imul
cwtl
rol
dec
sub
add
jmp
add
jb
icebp
add
and
adc
mov
imul
push
xchg
fs
adc
mov
push
les
cmp
pop
scas
sub
push
xor
cmp
adcb
mov
add
int
test
sbb
sarb
or
daa
shl
and
dec
loope
push
sub
mov
sbb
std
push
jg
cmp
sti
mov
lcall
nop
add
cwtl
rcll
shlb
ja
roll
adc
jae
add
mov
add
xor
orl
or
sub
ss
movsl
jl
lock
repnz
icebp
in
push
test
and
mov
ret
sub
mov
adc
mov
adc
aam
neg
js
cmp
les
push
sub
popa
jp
pop
mov
push
bound
dec
orl
fcoms
cmp
imul
or
add
sub
and
mov
pop
xchg
test
sub
lods
aad
xor
div
or
inc
inc
cli
adc
pop
pushf
dec
sub
mov
pop
mov
es
movsb
inc
inc
cmp
call
test
dec
lahf
add
adc
push
mov
nop
mov
pusha
adc
hlt
int3
ss
or
pop
adc
pop
je
daa
xor
adcl
fdivl
cmp
mov
inc
mov
int3
and
scas
push
test
addl
in
int3
xor
jo
add
jae
loop
outsb
ja
fsubs
xchg
jbe
push
mov
test
jns
ret
xchg
sbb
out
push
mov
pop
testb
inc
fistpl
add
or
loop
int
cmp
ja
add
js
jle
insb
add
icebp
das
jb
add
in
add
sub
imul
in
cmc
test
sets
inc
push
test
sbb
in
pop
pop
adc
cmp
pop
add
loopne
xor
sbb
out
adc
push
adc
pop
mov
shrb
and
xchg
mov
sub
add
and
sub
sub
and
and
cmp
add
sbb
rclb
imul
mov
bound
xor
je
js
jl
adc
enter
orb
jnp
loop
or
es
adc
xchg
fimull
cmp
dec
lods
arpl
subb
add
adc
push
add
mov
mov
repnz
int3
inc
les
adc
test
aam
cmp
pop
add
or
cmpsl
and
fcompl
adc
loopne
sbb
xchg
add
push
or
shl
inc
adc
and
cmp
cld
subb
inc
or
in
sbb
jne
hlt
cmp
jo
mov
in
xor
and
sbb
xor
sbb
iret
adc
das
pop
daa
and
lock
or
lea
sub
ds
xor
cmp
mov
sarb
aam
inc
or
and
inc
add
or
and
dec
or
adc
and
push
push
xor
pop
pop
jnp
adc
loope
pop
test
orb
pushf
or
insb
or
lret
push
adc
cld
clc
jl
or
fmulp
addb
filds
stos
cmpb
sub
lods
pop
fistl
xorb
or
gs
addb
dec
jo
add
push
push
imul
outsl
jae
adc
add
ja
movq
loopne
adc
movsl
std
sbb
lods
and
popf
inc
jp
int3
cmp
repnz
rcll
out
ja
mov
inc
push
outsl
daa
stc
cmp
rcrb
ret
xchg
pop
aaa
add
loopne
icebp
add
lret
inc
divb
add
cmp
jae
add
popa
imul
pop
adc
inc
push
push
cmp
pop
jno
jns
jl
jae
loopne
mov
incb
test
mov
mov
ljmp
jecxz
push
bound
clc
xchg
mov
xchg
jmp
jne
add
es
adc
dec
xor
adc
push
in
xchg
pop
cmp
dec
mov
jae,pt
shlb
cmc
jl
adcl
fs
jo
adc
lea
or
rclb
in
popa
add
es
mov
push
nop
add
dec
out
pop
dec
push
not
fisubs
and
xchg
adc
push
mov
test
xchg
aaa
mov
adc
cmc
mov
inc
mov
dec
jne
jb
and
xchg
sbb
test
fs
into
imul
sarl
adc
pop
xchg
dec
fdivl
inc
or
jne
xlat
outsb
loopne
jno
mov
add
shrl
dec
mov
fdivr
jbe
sbb
pop
and
xor
adc
sbb
dec
adc
xor
push
mull
mov
xor
and
dec
cmp
add
cmp
jg
add
adc
mov
dec
xchg
mov
inc
add
adc
call
call
push
daa
cwtl
sahf
xor
js
pop
ds
rorb
in
sbbl
or
add
dec
test
inc
mov
jmp
adc
les
call
test
cld
test
stc
loopne
push
and
arpl
mov
cwtl
mulb
push
movsb
pop
pop
or
in
in
push
aam
xor
loope
insb
sbb
cmpb
scas
or
jne
mov
inc
inc
iret
inc
lahf
and
arpl
mov
xor
rclb
lock
add
cmp
orb
out
dec
add
mov
mov
pop
push
mov
mov
xchg
les
lods
sub
adc
add
and
scas
cmp
mov
jmp
cmpsb
or
add
in
pop
push
inc
or
mov
push
and
add
ljmp
cmp
dec
icebp
je
cmp
popa
rolb
outsb
shrl
les
jae
add
push
rolb
pop
mov
call
in
inc
jne
xor
push
push
add
xchg
mov
pop
repnz
scas
jg
jecxz
adc
pop
loopne
adc
add
adc
cmpl
jmp
adc
enter
add
leave
inc
clc
xchg
call
pop
push
mov
rol
aas
mov
cmp
pop
sbb
or
leave
aaa
roll
iret
adc
inc
sub
test
or
mov
add
jmp
jecxz
inc
xor
add
stos
jl
stc
xchg
or
jecxz
push
aad
xchg
call
movsb
jle
test
and
gs
sti
and
pop
pop
jae
test
push
cmp
or
and
cs
je
dec
push
and
pusha
in
add
push
add
push
add
fsubl
cwtl
or
add
lods
loop
add
notl
inc
add
ficoms
add
test
push
add
sar
pop
hlt
insl
mov
pop
inc
fisttpl
loop
cmp
adc
xor
fwait
test
arpl
mov
loope
cs
shl
loopne
jmp
jp
dec
stos
and
push
push
inc
push
addb
jb
hlt
pop
pop
ljmp
outsl
ret
dec
dec
loopne
pop
add
cmp
pop
jo
inc
bound
jb
push
adc
hlt
adc
jns
xchg
xor
dec
outsb
sub
loope
jl
inc
insb
adc
adc
enter
fildl
or
stos
sub
aad
adc
test
sarb
fmull
xchg
add
adc
stos
xchg
test
xor
sub
pop
ret
push
sub
add
lea
mov
hlt
testb
movsb
add
mov
mov
les
adc
pop
push
add
mov
cmp
negl
cli
sbb
jo
repz
and
cmp
add
jne
nop
fmull
lock
mov
aam
push
pop
das
les
int3
dec
cmp
fs
aam
bound
shrb
sub
mov
daa
lock
out
jecxz
insb
repz
inc
repz
mov
cmp
js
add
inc
out
mov
andb
push
mov
cs
inc
out
mov
mov
adc
loope
adc
subl
add
out
cmpsl
jnp
testb
arpl
mov
roll
mov
mov
or
and
add
mov
insl
jo
subl
jl
and
inc
and
jo
push
cmp
inc
inc
fstl
out
in
sbb
and
sub
xchg
in
pop
xor
push
sbb
add
in
push
lods
adc
xor
pop
repz
pop
add
push
cmp
dec
bound
and
testb
or
xor
add
cmp
lods
nop
add
push
add
mov
fs
nop
sub
jo,pt
lock
add
mov
pushl
push
mov
icebp
movsl
outsb
ds
or
imul
push
sub
inc
subl
add
pop
dec
fwait
je
add
inc
xchg
add
add
mov
mov
addb
pop
jns
mov
jg
mov
mov
or
inc
jno
addb
inc
jne
outsl
icebp
mov
add
add
les
push
inc
addb
out
aaa
add
mov
mov
sub
add
into
xchg
or
or
add
inc
stos
popa
imul
pop
out
and
or
sbb
pop
mov
nop
add
add
sub
xor
pop
loopne
jl
mov
movsb
and
mov
add
pop
or
daa
inc
add
out
flds
lods
push
dec
and
mov
fmul
sub
add
or
leave
jb
push
dec
in
dec
xor
sbb
movsl
fsubl
sub
jg
insb
test
push
add
xchg
in
add
add
push
outsl
jo
jne
hlt
add
jge
lea
push
mov
sbb
or
add
popf
daa
sbb
xchg
pop
push
or
mov
and
mov
in
or
adc
push
addl
gs
lds
or
jnp
xchg
add
mov
orb
repz
xlat
push
movsb
mov
push
and
dec
push
and
push
sahf
ret
jnp
add
cmpsl
lea
add
imul
add
dec
jb
push
inc
push
xchg
mov
leave
sbb
je
sub
out
or
adc
add
filds
jmp
and
or
inc
dec
clc
and
jbe
inc
mov
aas
or
mov
xchg
cmpsb
jae
adc
mov
and
pop
dec
stc
and
pop
gs
rclb
insl
into
add
or
xchg
or
push
pop
push
jns
xor
dec
fsubrs
xchg
repnz
jnp
dec
loopne
sbb
mov
jo
xor
cs
sahf
or
xchg
fcoms
hlt
outsb
inc
adc
mov
lret
fistps
adc
jae
xchg
es
in
add
sbb
or
lret
adc
inc
add
sahf
dec
out
add
and
imul
jl
add
mov
pop
add
popf
pushf
mov
jns
mov
call
add
or
es
loopne
test
mov
sub
and
sbbb
mov
add
sti
data16
inc
add
pop
add
add
xor
jp
arpl
push
cli
push
and
imul
push
or
or
jmp
or
jnp
or
xlat
or
xor
add
jp
and
movsb
ljmp
pop
dec
lods
stos
loop
sbb
std
dec
pop
push
call
fdivr
push
xor
imul
or
sub
lock
add
jge
sbb
xchg
push
mov
mov
out
adc
or
test
cltd
or
jg
add
mov
pop
add
je
test
jle
jbe
lcall
jb
jge
das
fwait
inc
adc
add
pop
add
clc
cmp
jge
mov
movsl
add
in
aam
inc
push
jae
or
or
dec
sbb
loopne
cmc
movd
jl
inc
push
daa
cs
add
gs
add
pop
xor
add
add
adc
push
loop
dec
add
daa
sbb
inc
and
insl
dec
cld
pop
mov
movd
shlb
add
inc
in
add
add
push
sar
popa
adc
push
push
pop
dec
mov
jecxz
inc
sbb
insl
out
xchg
mov
add
ljmp
add
shrb
incl
mov
inc
push
mov
int
dec
or
add
inc
jbe
jo
lock
into
mov
jg
call
clc
mov
inc
jo
add
push
and
add
testb
js
add
or
cmpb
add
stc
adc
push
sarl
inc
pop
pop
lods
add
xchg
add
mov
add
cwtl
push
dec
arpl
imul
jl
mov
push
inc
sbb
adc
xlat
or
jmp
in
in
sub
mov
pusha
daa
pop
ja
add
mov
pop
push
shlb
push
jle
cld
loop
or
incl
jp
add
mov
int
dec
xchg
xchg
bound
or
adc
add
dec
mov
clc
push
pop
xchg
into
mov
xchg
push
xlat
or
je
mov
insb
inc
xor
adc
in
cmp
jnp
sbb
add
ret
pop
lea
test
add
sbb
xor
adc
jge
les
xchg
scas
add
pop
push
inc
cmp
and
movl
push
push
add
fcomps
dec
inc
out
daa
pop
inc
rcr
adc
sarb
jne
mov
sub
cmp
xor
push
and
or
mov
jg
sbb
aas
out
adc
cli
or
andl
add
pop
push
adc
dec
add
or
pop
or
out
dec
jmp
add
push
setbe
sbb
jl
inc
movsb
sub
loop
jne
lahf
push
addr16
adc
add
fwait
pushf
add
in
loope
add
xor
pop
inc
pop
push
add
xchg
icebp
pop
mov
shr
sar
sub
add
or
jl
in
add
push
xor
pop
ret
imul
rolb
jo
inc
pop
std
mov
sub
add
push
enter
shlb
add
pusha
mov
add
push
xor
jg
mov
cmpb
lods
jne
jb
adc
xchg
cmpb
add
pop
jmp
push
and
add
jae
arpl
mov
mov
pop
std
into
clc
popf
push
jg
cwtl
dec
aas
cmc
test
enter
add
sub
xchg
jae
dec
lock
add
pop
cmp
add
push
add
pop
jae
stos
dec
nop
push
add
mov
test
cmc
mov
and
inc
xchg
mov
hlt
das
xchg
add
cmp
and
lods
adc
xchg
fnsave
pop
jns
add
adc
aam
test
or
imul
xchg
sub
sub
in
jb
cmp
sub
and
xchg
adc
add
in
jb
cmp
popa
adc
imul
sbb
sbb
cmp
sbb
sbb
jne
call
enter
jb
or
push
sbb
sub
add
or
or
jb
cmp
sbb
mov
lock
adc
enter
inc
or
push
fisttps
mov
dec
adc
add
mov
call
add
and
dec
fcoms
sbb
rclb
adc
enter
xchg
shlb
inc
mov
mov
hlt
adc
mov
inc
fdivrl
dec
aam
jg
int3
push
jg
les
aas
mov
push
mov
pushf
push
aam
fstpt
jb
inc
jg
jg
aas
jl
mov
insb
fidivrs
mov
pop
adc
push
fisttpl
int3
mov
das
add
add
call
mov
add
les
icebp
pop
call
das
adc
dec
rolb
adc
inc
mov
ret
sar
inc
enter
fsubl
mov
inc
shll
push
fsubr
xor
les
sub
xor
rcrl
iret
mov
insl
add
fs
mov
testl
sub
add
bound
sar
in
mov
pop
xchg
call
inc
loopne
fsubrs
imul
mov
mov
lock
clc
mov
cmc
pop
sahf
xchg
pop
add
mov
adc
adc
add
pop
mov
add
dec
and
add
xchg
mov
dec
les
inc
repz
lcall
inc
cmp
ss
loopne
lahf
rdtsc
mov
mov
mov
xor
insb
and
in
rorb
fs
and
xchg
and
pop
daa
add
cli
jno
loopne
fsubr
add
cmp
daa
rorl
lods
iret
xchg
sbb
in
rorb
push
fistps
int3
sub
mov
aam
and
push
out
mov
xchg
std
sbb
cmc
stos
cs
or
add
mov
movsl
push
xchg
adc
daa
add
jle
ret
xchg
shlb
push
je
ljmp
inc
cmc
mov
or
add
mov
nop
dec
push
cld
push
pusha
lcall
sbb
add
mov
adc
inc
jne
das
fildl
lahf
push
adc
daa
push
in
adcl
or
push
push
jmp
add
addr16
mov
add
in
or
les
xorl
je
fwait
add
adc
adc
sub
lahf
out
adc
or
mov
repnz
push
mov
mov
shll
jle
jge
mov
out
mov
fnstcw
enter
add
add
inc
rcll
faddl
cld
inc
and
jmp
push
adc
pop
jne
ret
sub
add
or
lock
add
or
testl
jno
scas
pop
push
ja
xchg
stos
add
out
ret
xor
nop
and
daa
setge
and
push
pop
sub
movsb
mov
inc
scas
popa
and
pop
in
sarl
fisttpll
add
movsl
loop
push
enter
xor
jno
add
ljmp
shll
sub
inc
bound
mov
mov
inc
jmp
mov
pop
push
movsb
xor
add
add
pop
test
xchg
les
addl
sbb
jbe
sub
hlt
mov
jne
push
fwait
mov
clc
cmp
mov
and
mov
cs
mov
shrb
and
adc
jo
inc
inc
add
dec
out
dec
sbb
jmp
dec
cmp
xchg
sub
xchg
popl
jp
out
or
mov
jmp
mov
jns
adc
movsb
mov
or
push
adc
popf
pop
add
inc
jmp
pushf
add
lds
addb
push
sub
add
inc
dec
sbb
bndldx
scas
and
mov
cmp
pop
pop
xor
dec
xor
stos
add
xchg
adc
push
cmp
add
mov
bound
ljmp
add
dec
jb
add
lods
push
sub
insl
ljmp
mov
addb
add
cmpsb
or
dec
push
sub
mov
jmp
adc
adc
add
out
int
dec
lahf
ror
in
add
into
jp
xlat
test
ss
lock
cmp
lea
push
sbb
pop
pusha
or
push
loopne
sub
into
movsl
and
or
add
lcall
or
in
loopne
jle
push
push
fimuls
and
dec
inc
cli
mov
shlb
je
mov
leave
lock
pop
pop
or
test
add
imul
add
add
jo
xchg
jbe
add
popa
rol
push
loopne
faddl
inc
test
hlt
adc
adc
in
mov
dec
inc
push
dec
dec
test
add
and
push
cmpl
pop
mov
xchg
mov
cltd
fsts
jb
mov
pop
and
sbb
add
dec
adc
and
out
push
push
adc
and
cmpsl
push
add
cmp
xchg
sub
nop
pop
jne
xorb
sbb
pushf
stos
lret
int
in
fsubrs
or
pop
out
sub
sub
subb
mov
adc
cmp
je
jle
push
fstpt
add
cmp
nopl
dec
dec
mov
add
shl
xchg
pop
in
ds
mov
and
out
mov
mov
and
jne
repnz
add
cmp
les
sub
dec
test
dec
outsl
jg
movsb
sahf
mov
adc
mov
adcb
add
sbb
push
inc
dec
jo
scas
pop
aaa
push
mov
or
mov
daa
push
push
jns
jnp
sar
arpl
jae
xchg
pop
jg
push
add
out
repz
dec
test
xchg
xor
jae
ljmp
nop
arpl
add
bound
outsl
lock
adc
sbb
rolb
push
pop
add
lods
and
imul
jb
add
dec
push
stos
fsub
add
gs
jbe
or
and
add
xchg
pop
add
aaa
jb
ljmp
mov
jbe
and
arpl
and
insb
imul
lods
push
outsb
and
xchg
or
test
pop
dec
add
test
stos
jae
xor
xchg
ss
mov
sub
arpl
pop
add
sub
sub
test
xchg
in
or
mov
imul
or
push
add
inc
push
rorl
add
icebp
xlat
cmovbe
push
xchg
clc
adc
aad
add
popf
shlb
add
add
fwait
cld
add
mov
js
movd
into
je
mov
dec
xchg
repnz
lock
mov
subb
push
cwtl
mov
or
mov
mov
in
call
repz
daa
leave
or
or
insb
dec
push
xor
movsb
pop
rclb
push
mov
xor
inc
cmp
jne
fstpl
push
mov
cmpsb
cmc
lahf
jns
daa
adc
add
loope
ds
lock
xor
adcl
hlt
and
das
add
mov
in
cmp
dec
cmp
inc
enter
add
adcb
enter
add
cmp
pushf
add
jb
mov
lock
inc
pusha
add
xchg
add
sbb
inc
add
cli
sub
ret
cs
and
into
ret
mov
jne
lods
xor
jno
mov
cli
adc
adc
push
cmp
cmp
inc
nop
adc
inc
aad
enter
fimuls
xchg
cmp
push
pop
jl
mov
jo
or
sbb
add
push
push
icebp
add
sub
pop
push
xor
or
add
push
std
fcmovb
mov
fiadds
sbb
xor
inc
and
xacquire
pop
xchg
hlt
and
rorb
loop
sub
jnp
inc
es
or
sub
add
sub
jb
xor
add
addr16
dec
add
shrb
ja
sbb
mov
pop
xchg
add
xor
inc
and
jb
or
js
jp
add
dec
adc
inc
adc
adc
sti
sbb
sbb
sbb
sbb
lock
pop
pop
and
shlb
and
fimull
inc
adc
bound
lock
xchg
pop
inc
cmpsb
mov
enter
ljmp
sbb
aas
inc
push
popa
mov
pop
andl
movsl
divl
jmp
add
icebp
push
cmp
and
sahf
add
pop
inc
push
add
jmp
adc
cmc
hlt
adc
add
inc
or
scas
push
mov
adc
or
push
repnz
sbb
or
sbb
adc
push
pop
or
mov
add
sub
push
push
xor
jmp
pop
cmp
adc
mov
dec
jns
jns
jns
inc
push
sbb
push
repnz
pop
sbbl
push
nop
jecxz
pop
popa
inc
imul
and
and
arpl
dec
adc
inc
fs
mov
inc
sub
and
addr16
in
push
sarb
mov
sub
pop
les
mov
or
push
sbb
fdiv
adc
test
or
movsl
and
sub
add
push
lea
out
add
call
pop
jo
add
mov
cmp
in
stc
add
cwtl
ja
dec
add
clc
push
add
fsubrs
inc
adcl
sub
mov
xor
rcrl
lock
in
add
mov
push
push
sbb
shlb
enter
add
push
cmp
or
push
nop
add
loopne
daa
fdivl
add
xchg
lret
xchg
pop
jns
inc
add
pop
dec
int3
mov
and
lods
push
fstps
dec
loopne
out
inc
add
movsb
imul
aad
inc
add
sub
subb
dec
lea
and
loop
adc
cmp
mov
dec
mov
inc
les
xor
loop
fadd
push
mov
push
into
clc
inc
add
adc
adc
xchg
xchg
sub
aas
push
or
int
sub
lods
mov
rorb
data16
ja
daa
push
aas
sar
outsb
popf
rorb
add
xor
add
data16
pop
adc
or
lock
mov
ret
push
inc
test
push
add
imul
fstps
bound
pushf
rcll
add
pop
xor
dec
inc
fmuls
sbb
add
and
dec
jge
or
mov
into
ss
loopne
push
mov
daa
sub
sub
add
cmp
sbb
cmp
or
je
andps
xchg
pop
pop
inc
loopne
jo
inc
sti
addb
xor
adc
into
mov
or
fs
dec
aam
rolb
shlb
jp
add
pusha
mov
push
add
or
adc
sub
les
sti
and
sahf
or
jo
add
inc
inc
imul
mov
cmc
aad
daa
add
and
lods
mov
lcall
cmp
sub
inc
mov
jmp
jbe
mov
int3
repnz
popf
push
adcb
dec
mov
adc
sbb
in
push
cmp
jge
cmp
je
gs
cwtl
mov
pop
inc
adc
add
push
shr
movsb
sub
and
sub
xchg
add
cmp
pop
mov
inc
adc
cmp
mov
sbb
mov
push
push
mov
insb
pop
sub
cmp
and
movsb
stos
test
push
dec
clc
out
mov
sbb
imul
sbb
inc
in
insl
add
sbb
add
and
dec
sub
enter
cld
pop
inc
sbb
and
push
jmp
pop
mov
and
add
inc
mov
inc
push
mov
mov
fiadds
aaa
daa
mov
or
cmp
fdiv
jp
and
add
and
and
add
lea
sarb
das
popf
pop
add
and
or
cmpsl
icebp
stc
sub
or
cmp
shrb
sub
les
jno
std
std
enter
sub
fcomps
or
into
rcr
xchg
add
rorl
add
xchg
repnz
lahf
out
in
cs
xor
xor
aas
add
and
jbe
xor
mov
pop
and
xor
popa
test
aad
add
inc
mov
data16
popa
jns
jbe
fmull
mov
or
push
add
insb
adc
call
jo
xchg
xor
push
nop
xchg
dec
sbb
push
mov
in
lret
jbe
add
sete
mov
mov
aas
xchg
jmp
sbb
push
inc
in
mov
xor
pushf
or
inc
adc
adc
adc
rdseed
popa
inc
push
xchg
add
inc
push
inc
lods
mov
pop
or
jle
dec
dec
xor
gs
lea
loopne
dec
adc
in
int3
idivl
sbb
or
adc
ds
adc
add
dec
das
jl
sti
mov
push
dec
jge
add
hlt
xor
or
jge
mov
mov
and
or
inc
mov
lahf
mov
ljmp
push
mov
lods
and
add
fidivrl
idiv
fcoms
jnp
add
push
ds
aas
or
arpl
call
add
sahf
test
inc
sbb
cmp
add
mov
and
andb
sub
inc
arpl
imul
jg
and
add
popl
scas
and
jl
jp
mov
lcall
les
mov
sub
pusha
ds
and
mov
inc
je
leave
fimull
jo
movsb
out
subb
es
adc
lret
daa
jle
push
xor
mov
add
mov
or
daa
adc
cs
and
lret
and
add
das
daa
pushf
dec
lcall
xor
inc
xor
andb
sbb
imul
dec
enter
and
dec
std
jp
add
mov
cmp
sbb
or
inc
add
sub
fcmovnbe
add
and
mov
rorb
and
mov
rclb
inc
push
and
add
rolb
lock
inc
inc
in
add
test
xor
or
sub
out
xor
roll
sarb
add
sbb
jl
add
xchg
or
add
mov
pop
adc
mov
mov
insl
add
xchg
dec
or
mov
adc
cld
mov
cmp
jnp
loope
dec
add
add
test
mov
add
xchg
fisubrl
sub
int
imul
mov
and
mov
push
addb
cmp
loopne
movl
add
divl
add
stos
pop
sub
adc
dec
outsb
rolb
sbb
push
shlb
push
jbe
jge
inc
ficoml
and
sbb
adc
push
jno
mov
pusha
movsb
dec
shll
cwtl
add
cld
cli
lds
push
and
dec
popa
ljmp
xor
xchg
add
cld
adc
ret
fldcw
adc
mov
ljmp
and
jmp
mov
push
pop
add
pop
pop
xchg
sbb
lock
sbb
sbb
dec
sub
adc
inc
pusha
ret
imul
add
inc
movb
and
adc
or
dec
insl
gs
push
outsb
inc
and
pop
ljmp
enter
clc
add
mov
js
add
outsb
addr16
loope
adc
push
inc
mov
repz
dec
xchg
adc
cmp
sub
and
mov
loop
mov
daa
cmp
icebp
add
lods
call
push
add
dec
ja
dec
mov
adc
test
lock
xchg
xor
repnz
loopne
mov
and
and
insb
jns
cmp
add
sub
enter
and
jp
jmp
add
ljmp
jl
push
rcrl
push
int3
or
add
aas
popf
and
xor
xor
and
ret
cltd
xor
fdivl
test
and
rorb
or
jns
fiadds
clc
adc
je
lods
and
push
cmp
or
push
push
stos
mov
add
call
enter
pop
jbe
dec
nop
cmp
mov
jbe
add
fs
stos
add
lods
mov
pop
call
nop
adc
aas
popf
outsl
push
inc
mov
push
mov
cwtl
repz
and
mov
inc
pop
hlt
fistpl
and
std
add
test
int3
and
add
sub
sbb
mov
and
loopne
add
adc
xor
jnp
insl
adc
push
sbb
add
push
sub
or
sbb
xchg
icebp
push
jmp
push
and
dec
rcrl
sub
dec
adc
sbb
add
das
or
nop
inc
xor
add
pop
lock
loop
mov
lahf
add
push
mov
cli
mov
cltd
test
add
mov
cmp
pcmpeqd
test
inc
cmpsl
sub
dec
movsl
add
in
and
cmp
test
dec
lcall
jo
or
das
jno,pt
sbbb
or
incb
pop
je
mov
aaa
jo
add
cmp
dec
inc
in
push
pop
into
jno
or
or
out
xor
ret
cmovo
dec
sbb
mov
repnz
sub
pop
dec
and
pop
jns
mov
sti
enter
js
xor
dec
es
sahf
add
decb
mov
mov
das
in
je
dec
push
lds
and
les
lahf
pop
xor
add
leave
lret
adc
cmpb
cld
adc
sub
add
adc
les
cmp
lret
add
cmc
loope
add
add
shlb
sbb
sbb
psubw
jg
add
sbb
push
sbb
push
inc
push
adc
out
test
or
add
dec
js
test
jno
or
pop
and
sbb
and
xchg
scas
add
add
or
sub
cld
lds
jo
ljmp
sbb
inc
jl
pop
outsl
sub
shlb
pop
inc
sbb
mov
out
sbb
jbe
inc
and
lock
xchg
add
das
or
test
js
and
mov
movsl
andl
jecxz
dec
add
cmp
movl
call
add
rol
popa
mov
sbb
adc
add
stos
shr
xor
and
cld
mov
add
daa
aad
inc
dec
push
stos
cmp
lea
add
cmpsb
sub
sti
or
outsl
cld
xchg
aad
add
mov
sbb
jge
or
add
sbb
add
sbb
scas
pop
xchg
in
test
push
push
std
pusha
inc
fcomps
lods
les
pusha
sub
stos
out
test
data16
adc
mov
loopne
jne
movsl
stos
add
adc
mov
jno
add
fcoms
or
push
xchg
pop
mov
or
add
cmpsl
mov
add
sub
ja
sbb
and
inc
dec
clc
shll
pop
movsl
jl
dec
add
inc
repz
jmp
xchg
or
dec
mov
xor
push
jnp
cmp
pop
inc
ret
add
jle
cmp
push
pop
pop
ja
mov
pop
inc
push
add
sub
test
fldl
jp
dec
pushf
cmp
movsb
cwtl
sub
aaa
cmp
add
push
sbbb
and
add
xor
mov
push
and
or
stc
sbbb
inc
dec
insl
jecxz
les
sar
pop
push
loope
orl
cmpb
cmp
mov
push
out
add
sub
ljmp
lea
inc
add
cmp
xchg
mov
aas
jmp
test
sub
aad
add
or
fmull
jg
ss
push
jmp
movsb
sbb
dec
mov
and
cmp
pop
sub
ja
xchg
stos
je
xor
mov
pop
jecxz
add
cmp
jns
add
sub
cmc
clc
push
add
inc
sbbb
xchg
jl
movsb
add
sarb
fwait
addl
sti
pop
and
xchg
fcoml
dec
xchg
add
lahf
popa
test
cmpsl
fdivrs
notl
dec
add
add
popl
nop
cwtl
in
cli
pusha
push
cmp
movsb
push
mov
and
sub
shlb
push
in
ffree
cmp
cmp
data16
and
imul
test
mov
dec
imul
cmp
cmp
add
mov
push
pop
aas
mov
sahf
cmp
xchg
cld
add
outsl
xchg
andb
jl
lret
sub
pop
fwait
add
and
sbb
lock
add
testl
add
inc
and
dec
inc
mov
add
lds
push
or
in
lcall
jns
scas
add
inc
lds
jmp
dec
dec
cli
leave
pop
dec
add
jnp
xor
push
test
dec
sub
adc
pop
push
out
sub
and
mov
mov
add
aam
je
sub
sbb
jbe
jo
push
xlat
jmp
data16
mov
jge
or
xchg
aad
xor
jne
adcl
pushf
xchg
add
mov
jmp
xchg
sbb
jecxz
popa
push
leave
add
cmp
testl
in
mov
adc
add
mov
inc
adc
daa
jp
push
mov
ret
add
and
dec
call
mov
xchg
orl
push
pop
jne
and
orb
push
inc
add
loope
sub
add
mov
add
js
add
push
push
xchg
mov
sub
dec
jle
add
iret
inc
adc
insb
and
sbb
and
xorb
pop
je
outsl
inc
loope
movsb
ljmp
adc
or
nop
jb
mov
lret
add
sub
pop
sbb
xchg
add
int3
mov
cmpsb
push
popf
push
pop
mov
iret
dec
mov
add
xor
mov
sub
xor
xor
push
pusha
add
mov
notb
inc
sbb
add
add
insl
ljmp
lcall
jne
mov
cmp
in
testb
or
xor
bnd
xchg
xor
hlt
dec
add
sbb
adc
add
inc
sub
in
or
push
les
pop
std
cmc
add
jne
or
icebp
mov
or
add
dec
aad
dec
jmp
clc
xchg
test
mov
add
fsubs
push
mov
incb
xor
jl
fs
sub
lods
rcl
dec
or
out
sbb
inc
push
movsl
push
add
xor
sbb
aas
push
lret
xchg
push
call
lods
pop
inc
jo
jns
add
or
xor
add
je
enter
inc
add
xor
push
punpckhdq
cmp
scas
push
pop
and
push
pusha
and
inc
xchg
jo
clc
sbb
sbb
test
cs
add
jo
push
flds
mov
lret
sti
inc
clc
lcall
inc
inc
adc
push
mov
sarl
pop
push
xchg
shlb
jne
add
repnz
cwtl
shr
adc
imul
jns
cmpl
sti
add
daa
push
xchg
out
dec
aas
scas
mov
sub
fwait
inc
aaa
mov
dec
lret
lea
dec
sub
addb
movsb
mov
adc
pop
xchg
mov
push
inc
mov
mov
pop
mov
ja
aas
cmp
add
cmp
aaa
sbb
sub
je
mov
jo
inc
cmp
movsb
add
inc
sbb
aas
aad
inc
mov
stc
rcrl
or
xchg
movsb
pop
lds
adcb
fildl
cmp
test
or
dec
movsl
lcall
cmp
call
xchg
add
lar
or
lahf
scas
xchg
orb
xchg
jl
pcmpeqb
pop
loopne
lods
sbb
stos
add
jl
cld
and
add
sub
add
adc
or
aam
mov
scas
decb
ja
dec
add
enter
adc
cmp
cmp
mov
cs
cmp
insl
add
inc
cmp
add
ret
clc
je
dec
add
sbb
push
mov
mov
js
mov
or
and
les
xchg
cmp
adcl
gs
pop
pop
test
adc
shll
cmp
in
repnz
sahf
pop
push
js
sub
sbb
sub
iret
test
rolb
testb
mov
push
pop
mov
jmp
js
popa
sbb
mov
stos
add
int
sub
jle
adc
outsb
xor
add
xor
mov
add
inc
fistl
push
mov
mov
push
sbb
mov
mul
adc
sarl
pop
or
rolb
inc
mov
inc
ja
aam
xchg
shrb
out
or
int3
pop
add
dec
bound
testl
mov
ds
roll
or
insl
push
push
add
ret
xor
enter
mov
clc
add
dec
mov
daa
call
arpl
xor
cmp
fnsave
add
lea
lcall
ror
rcrb
inc
cld
and
stos
in
sub
rorb
ret
pop
xchg
call
add
cmpsb
mov
lea
push
insb
cwtl
in
lds
mov
jb
sub
dec
sarb
or
add
cmpb
mov
xchg
inc
add
and
xor
movlps
push
enter
add
into
sub
push
call
xchg
and
push
andl
jg
pusha
dec
or
cli
inc
nop
xor
push
rcl
mov
push
xor
fdivr
pop
mov
adc
testb
or
aaa
loopne
cld
mov
movsl
sbb
notl
xchg
add
and
push
cmc
add
push
push
ret
pop
fwait
and
test
shld
int
pushf
fsts
das
repz
mov
sub
nop
push
daa
add
cmpsl
sbb
mov
adc
sbb
rclb
push
mov
push
push
movzbl
jae
fiaddl
and
movsl
xor
xor
or
xchg
cmpsl
xor
add
je
adcb
xor
adc
fsubl
pop
mov
ja
pop
rcrb
jge
add
mov
push
push
jl
cmp
imul
test
mov
in
and
add
pop
hlt
aad
mov
xchg
mov
push
popf
adc
outsl
rcll
pop
test
inc
sbb
sahf
xchg
jnp
add
sbb
loopne
lock
mov
sbb
std
cmp
push
jmp
add
bound
sahf
jo
cmpsb
into
fdivrl
test
add
imull
or
loope
cmpb
xchg
call
and
jmp
mov
gs
cmc
sbb
cmpl
push
add
jge
dec
lret
das
sub
add
pop
mov
add
enter
dec
sarl
sub
cmp
loop
insl
addb
sub
pop
pop
rclb
push
add
inc
dec
push
aam
adc
cli
ret
add
fs
add
or
jp
adc
add
dec
aaa
and
test
clc
mov
dec
cld
xor
push
cltd
andb
movsb
mov
sbbb
xor
mov
rcr
sahf
adc
movsl
stc
imul
inc
xchg
je
push
add
test
jmp
xchg
sbb
mov
ljmp
mov
mov
add
pop
sub
jp
les
popa
jo
jp
add
imul
enter
gs
inc
add
orb
loop
dec
cmp
ret
inc
push
xchg
int3
mov
add
jmp
xor
mov
jg
pusha
int
add
pushf
mov
xchg
add
movb
repz
and
add
sbbl
push
push
imul
mov
or
and
sub
push
clc
inc
scas
mov
cmp
add
cltd
push
or
jne
leave
jge
or
add
lret
pop
adc
and
adc
cmpsl
sub
or
or
jb
add
pop
cmpsl
sarb
xor
xorb
lret
loopne
les
ss
pop
add
or
in
mov
add
xor
jne
pushf
jns
int3
dec
rcll
ret
fistpl
dec
inc
pop
inc
push
push
add
pop
aam
mov
push
outsb
orl
mov
mov
cmovs
in
jnp
add
add
loopne
add
xlat
fwait
mov
out
test
fcom
stos
inc
xchg
add
lods
mov
maxps
aas
mov
mov
jbe
adc
enter
cld
dec
ja
add
cmp
cmp
sldt
je
cmp
pop
mov
add
jl
pop
pop
push
mov
mov
rcrl
dec
lea
cmp
daa
push
push
add
dec
std
movsb
add
mov
inc
test
add
repz
add
test
enter
call
push
xchg
dec
dec
in
movsb
in
adc
mov
add
orb
xor
pop
mov
nop
outsb
pop
movsb
ret
mov
daa
xchg
cmp
push
push
sbb
ds
enter
inc
or
mov
jmp
jmp
cmpb
jne
push
adc
std
je
rolb
add
stc
in
push
es
hlt
pop
xchg
add
sti
lock
sub
cmp
add
enter
pop
cs
out
or
xchg
leave
xor
int3
or
ds
xor
cmp
pop
rorb
sub
xor
sub
fstps
dec
pop
mov
and
push
inc
fs
insb
push
inc
addr16
rcll
add
cmp
fcom
inc
xor
mov
pop
fs
xorl
stc
sub
outsl
xchg
sbbb
push
and
insb
or
das
and
jo
cmp
push
test
orb
and
add
push
pop
outsl
xchg
out
add
lock
dec
mov
jb
sbb
or
outsb
jae
add
xchg
lods
loop
jo
inc
lea
cmp
bound
pop
mov
les
pusha
scas
mov
add
push
and
adc
dec
cwtl
das
repz
push
loopne
adc
cld
xchg
dec
or
sti
jno
add
sarb
aas
dec
add
outsl
dec
add
cmp
or
arpl
add
jne
repnz
or
jbe
add
sub
mov
loope
jmp
push
int3
adc
fldl
pop
cmp
mov
mov
rcll
and
test
mov
out
and
mov
fs
add
add
and
add
add
sub
lods
adc
push
shlb
inc
jmp
adc
push
push
xchg
pop
mov
insb
dec
jnp
inc
jge
add
or
add
cmpl
sub
mov
divb
pop
stos
int
shrb
cmp
jno
pop
shrl
push
and
sbb
mov
or
and
pusha
cmc
or
add
mov
roll
xor
cld
out
mov
pop
imul
push
inc
push
setb
mov
pop
xor
imul
or
adc
adc
mov
adc
outsb
call
mov
or
push
sub
inc
add
jecxz
roll
dec
mov
mov
push
cmp
ret
inc
add
dec
cli
lret
mov
add
aad
pop
scas
jnp
daa
faddl
cmp
mov
cmp
sbb
and
push
pop
aad
xchg
xor
pop
pop
jo
jg
cmp
mov
repnz
xchg
and
push
call
jne
jmp
mov
lcall
std
insl
pop
adc
rep
mov
adc
mov
mov
cmp
test
out
in
movsb
xor
jmp
push
daa
leave
insb
add
sub
xor
andb
das
cli
rolb
mov
out
in
frstor
ds
fbld
push
cld
dec
add
mov
xchg
push
sub
ud1
cmpsb
xchg
inc
sbb
add
or
add
inc
rcrb
inc
cwtl
cltd
lock
int
subl
and
mov
incl
ret
test
loop
enter
push
imul
movsb
sbb
inc
xor
push
dec
add
outsb
es
push
xchg
out
sub
add
incl
push
mov
pop
inc
xchg
add
negb
aaa
adc
dec
push
inc
sub
arpl
add
sub
xlat
add
sbb
cmp
jge
or
xor
test
sbb
xor
add
movb
add
inc
push
adc
mov
xchg
or
sub
xchg
test
fistl
enter
add
inc
lock
bound
xor
int3
inc
aas
inc
enter
cs
push
mov
dec
jbe
ds
lods
adc
push
lea
inc
dec
cld
orb
pop
push
add
movb
out
enter
mov
pop
add
cld
sbb
adc
dec
push
loope
fldenv
hlt
movb
push
mov
add
lcall
jno
xor
and
mov
xchg
outsl
add
inc
mov
pop
adc
add
loopne
dec
jne
jo
dec
inc
cmc
filds
clc
inc
add
out
mov
xchg
pop
inc
xor
test
mov
popa
add
and
add
addl
add
ficoml
clc
or
push
add
push
repz
xchg
repnz
or
cmpsl
rol
cmp
loopne
mov
ss
xchg
pop
xor
loopne
sbb
pop
aas
loop
mov
stc
ret
popa
lods
inc
sub
add
inc
pop
xchg
mov
and
sarl
jmp
add
sbb
fstpl
popf
addl
cltd
adc
add
inc
pop
jno
jne
pop
add
add
or
sub
add
mul
aas
inc
es
push
add
push
clc
in
mov
push
das
sar
hlt
add
jmp
inc
add
lock
add
inc
movsl
testb
mov
imul
pop
aaa
sbb
and
jmp
pusha
add
call
xor
mov
fwait
add
and
add
mov
xor
sub
add
jo
dec
push
pop
add
dec
dec
inc
cmp
pop
add
mov
add
int
or
xor
xor
sub
or
into
or
les
sbb
movb
and
outsl
add
mov
dec
inc
push
xchg
lock
inc
add
pop
pop
arpl
sbb
add
add
daa
cmp
adc
and
jmp
jb
adc
adc
aaa
add
pop
andb
inc
and
or
pusha
gs
pop
push
add
je
mov
xchg
lock
fdivr
insb
add
mov
stos
rcll
pop
add
mov
or
cmpb
xchg
sbb
stc
adc
hlt
add
adc
les
or
pusha
scas
and
cmp
imul
addb
outsl
dec
add
mov
pop
add
xor
notl
pop
mov
xor
pop
and
popf
add
xchg
cmp
push
add
ret
cmp
jbe
jmp
imul
add
push
int
outsb
repz
sub
pusha
jb
add
loopne
xlat
sub
stos
sub
lock
ljmp
add
cmp
jne
push
mov
adc
adc
pop
add
mov
adc
test
movsl
stc
mov
out
int
outsb
fs
mov
adc
jae
and
push
inc
jp
sbb
mov
shl
pop
add
dec
pusha
loopne
mov
or
push
loopne
push
sbb
mov
add
mov
inc
push
or
mov
pop
call
push
xchg
jp
es
test
rcrb
out
pushf
repnz
icebp
cltd
hlt
mov
add
adc
or
decb
das
je
into
pop
mov
cwtl
add
les
sbb
ljmp
aaa
or
stc
clc
shll
add
ljmp
xchg
sbb
mov
add
add
jb
adcl
cwtl
fadds
push
jo
jnp
loop
test
and
pop
sbb
mov
cmpsb
incb
inc
outsl
and
cld
pop
std
lcall
daa
repz
mov
add
clc
dec
adc
popf
add
cmp
pop
add
push
xor
add
sub
inc
lret
mov
pushf
jle
cmp
add
int3
sub
mov
cmpsl
je
mov
stos
inc
dec
mov
adcb
cwtl
inc
mov
jp
adc
mov
or
mov
loopne
cmpsb
outsb
ret
mov
ret
mov
jl
xor
pop
or
xor
lods
lock
push
dec
sbb
pop
mov
cmp
scas
jae
mov
sub
hlt
outsb
cwtl
jns
in
addb
dec
int3
test
push
mov
aas
jb
nop
add
out
hlt
and
dec
in
pop
lods
adc
jg
adc
sbb
adc
loopne
fs
pop
dec
lods
xchg
mov
movsb
sti
sti
clc
push
add
mov
in
xor
adc
jl
add
call
adc
sbb
jnp
in
adc
xchg
pop
add
and
add
jnp
xor
lds
mov
nop
into
push
lock
gs
pop
mov
push
and
dec
jl
nop
pop
add
xchg
add
call
in
adc
add
mov
pop
add
out
pop
int3
or
or
mov
rolb
scas
sbb
pop
ja
add
pop
mov
cli
add
in
push
xchg
push
sar
loopne
ljmp
xchg
rcrb
mov
test
inc
test
sub
sbb
js
pop
insl
push
xor
cmp
lock
mov
mov
sub
stc
in
pop
xchg
mov
pop
add
jne
mov
popl
jl
addr16
pop
xor
add
jge
or
push
cmp
jg
inc
repnz
mov
add
xchg
popf
jle
inc
add
inc
inc
out
test
push
aas
add
fists
add
xchg
idivb
iret
push
std
mov
dec
sub
xchg
ja
lods
sbb
loop
jnp
mov
push
mov
mov
push
inc
add
push
enter
xchg
add
je
mov
jp
outsb
xor
into
outsl
es
mov
test
sti
add
adc
mov
imul
add
adc
mov
and
aas
lea
divl
loopne
jbe
daa
pop
jne
pop
xor
pop
lock
mov
int
sub
icebp
add
and
add
mov
lret
adc
jmp
sbb
and
mov
mov
jo
add
aaa
jg
ds
testl
in
cmp
call
mov
cltd
lea
ja
mov
and
xchg
mov
sbb
jne
mov
and
jne
sbb
loopne
aas
repz
paddusb
stos
and
test
add
adc
and
pusha
std
pop
loope
xor
add
cmpsl
ja
cmp
or
pop
cmp
xlat
and
in
add
movsl
addb
adc
decl
shll
inc
mov
pop
cmp
jne
xchg
out
add
inc
dec
out
xor
pop
jae
add
inc
add
cmp
dec
or
ja
push
sahf
pop
push
add
xchg
dec
ljmp
mov
je
and
sub
xchg
icebp
movsl
jb
mov
inc
imul
mov
nop
sub
sub
sbb
cli
mov
mov
dec
jne
push
xchg
mov
sub
jae
shlb
js
cwtl
mov
mov
or
out
fucom
outsb
out
add
repnz
push
xchg
inc
mov
cmpsb
xchg
inc
cld
push
dec
add
testb
loope
je
add
lods
jge
push
imul
ss
push
sub
sub
stos
dec
add
sbb
or
mov
add
cmovs
dec
testb
adc
mov
add
push
scas
add
sub
inc
mov
dec
fdiv
mov
popf
add
and
enter
push
in
adc
xor
addl
jb
rol
andl
mov
pop
sbb
push
movl
adc
mov
cltd
std
shll
cwtl
sbb
in
pushf
pop
or
add
loope
lea
lods
add
sub
subb
add
push
sbb
outsb
mov
icebp
imul
xor
aad
adc
dec
cwtl
loopne
sti
popa
mov
xor
lret
push
inc
mov
mov
sbb
pushl
xchg
push
inc
mov
into
add
insl
or
add
or
cmp
cmp
mov
add
adc
test
and
xchg
push
push
jb
add
adc
jle
adc
mov
dec
mov
lea
inc
rcrb
cld
mov
cvtps2pd
push
cmpb
jne
insb
movb
xor
add
imul
dec
in
xor
or
enter
sub
pusha
push
sbb
pop
shrl
push
add
ss
mov
mov
jle
pop
add
ds
call
xchg
push
leave
ret
ret
scas
add
pop
comiss
cmp
push
je
mov
inc
adc
adc
inc
jbe,pt
xorb
cmpsl
inc
mov
add
fildl
add
push
enter
jb
add
pushl
fs
scas
lods
add
cmp
add
sbb
or
pusha
mov
mov
and
sbb
sti
in
movb
xor
mov
push
test
add
vpaddsw
fidivs
xor
dec
and
add
lds
sub
aad
add
cmc
rolb
js
add
rcrl
pop
mov
cmp
sub
lahf
inc
or
add
mov
push
mov
adc
je
pop
out
sub
add
pop
lret
shrb
add
adc
mov
clc
add
push
fildl
xchg
pop
shlb
mov
out
or
icebp
inc
adc
inc
xor
out
sub
fldt
je
mov
lds
xlat
das
mov
sbb
std
clc
mov
add
stos
jg
add
push
daa
nop
imul
aaa
cmpsl
add
fcmovbe
sahf
es
pop
aam
add
or
mov
dec
out
cmp
in
dec
or
es
lods
jmp
or
cmpb
jl
bnd
inc
xor
outsb
sub
inc
pop
and
imul
insb
lcall
add
or
sbb
pop
gs
lds
xchg
cmpsl
jno
daa
xor
popa
add
pusha
inc
fs
jnp
add
scas
repnz
aas
xlat
iret
adcb
test
xchg
roll
push
outsb
lock
mov
enter
in
and
jle
jmp
mov
mov
xchg
add
dec
lock
hlt
inc
sbb
call
fs
adc
push
add
mov
jmp
inc
add
jmp
mov
sbb
jno
cmp
test
add
and
and
mov
inc
add
rolb
fstps
mov
push
stos
pushf
or
jp
dec
add
rorl
jg
push
mov
leave
xlat
push
cwtl
dec
add
jo
cmp
ljmp
fcoms
aas
push
cwtl
mov
add
add
test
and
adc
or
dec
sub
push
pushf
stos
add
int3
mov
mov
sbb
or
sbb
cmpb
add
or
xchg
pop
shrl
subl
add
sti
mov
cmp
or
repnz
and
xchg
xor
push
jnp
cltd
add
sbb
or
push
das
lods
dec
pushf
xor
sub
sub
add
add
idivb
or
cmovae
add
or
mov
mov
jno
adc
test
pop
pop
xor
add
xchg
mov
pop
add
sub
and
mov
orb
or
dec
mov
mov
and
dec
in
ljmp
inc
pusha
out
inc
add
push
push
mov
add
sbb
or
lcall
mov
adc
add
mov
push
je
add
pushf
mov
popa
cmpsb
pusha
xchg
pushf
mov
jae
out
outsb
dec
dec
adc
testl
xor
cwtl
xor
pushf
je
lock
mov
push
daa
jb
add
sub
mov
fcompl
mulb
or
cmp
clc
inc
cmp
pop
inc
ja
mov
cwtl
out
add
in
subb
adc
add
add
mov
inc
cmp
add
cmp
pop
adc
addb
adc
and
jge
nop
mov
movsl
sbb
adc
ret
lds
or
nop
enter
mov
or
jp
leave
inc
sub
or
test
addb
mov
sub
add
jnp
je
mov
xor
add
pusha
aas
push
bound
add
or
push
push
popf
lret
or
sbb
adc
cld
cmpsl
mov
push
in
or
int3
fsubs
and
cmpsb
adc
mov
repz
and
shll
add
shll
call
imul
sbb
push
movsl
add
out
dec
mov
std
das
add
repnz
add
xor
or
scas
jmp
in
shl
add
fidivrl
add
aas
movsb
sti
add
xor
push
ja
or
rcrb
sbb
or
adc
add
push
or
test
imul
outsb
inc
fnsave
mov
fsts
mov
fsubrs
add
imul
sbb
pop
pop
mov
cmc
jno
insb
pushf
shrl
or
push
adc
jae
dec
add
enter
jmp
test
xor
and
jo
xor
scas
sub
xchg
es
jne
xor
adc
and
jg
fldl
push
fwait
scas
xor
xstore-rng
cmpsl
inc
imulb
xor
cmp
push
adc
dec
ja
adcb
pushf
cmp
movb
adc
or
fcoms
stc
pusha
jge
add
adc
or
clc
jmp
and
les
inc
enter
loopne
shlb
push
les
and
into
jnp
cmp
adc
xor
mov
add
adc
jl
lods
add
push
and
push
aam
dec
popa
cmovs
or
or
adc
xchg
call
sub
or
pop
les
lea
mov
add
cmp
out
push
push
and
adc
push
jne
jb
jmp
adc
mov
movsb
lock
push
add
inc
push
mov
sub
mov
ficompl
add
dec
bound
out
cmp
sbb
jns
cld
add
outsl
push
cmp
inc
push
pop
add
mov
mov
jnp
cwtl
loope
pop
add
xchg
mov
pop
push
sub
mov
adc
sarb
add
mov
add
add
mov
clc
add
push
push
je
xor
dec
stos
push
xchg
cmc
mov
mov
xor
cwtl
adc
jle
add
aam
mov
dec
ds
orl
mov
fsubrs
cld
add
pop
and
pop
je
inc
dec
sbb
fxch
sbb
and
je
nop
mov
push
jl
inc
pop
les
pop
add
addl
ljmp
in
imul
mov
cld
adc
cmp
sbb
nop
aaa
sbb
adc
jb
and
dec
pop
jbe
dec
rclb
xor
or
add
push
push
xor
mov
pop
pop
aaa
cmp
add
xchg
or
notl
out
out
out
out
out
jmp
mov
jb
je
pop
mov
stc
pushf
scas
popf
scas
sbb
lods
adc
rol
cmp
int
int3
cmp
xlat
mov
adc
xor
inc
or
and
flds
and
fiaddl
inc
jecxz
xor
clc
pop
xchg
xchg
push
sub
icebp
ficomps
shlb
and
int3
sbb
nop
inc
fcomip
inc
loopne
add
fwait
sbb
mov
or
rorb
loop
imul
sbb
les
or
jecxz
movsb
call
add
inc
mov
jmp
lock
clc
xchg
les
int3
aad
rolb
rorl
ss
or
and
add
stos
jge
add
xor
mov
int3
rclb
pop
repnz
repz
pcmpeqb
mov
pushf
adc
add
lahf
ret
adcb
fadds
mov
add
add
mov
pusha
insb
and
and
mov
push
out
or
in
ljmp
ror
andb
addl
ret
and
shll
gs
cltd
pusha
add
xchg
repnz
fsin
loopne
xor
hlt
rep
rolb
or
jo
push
mov
and
dec
loope
inc
fbld
adc
mov
popf
jno
stc
pop
adc
loop
mov
addb
pop
sub
adc
cli
pop
jne
add
adc
loop
lods
adc
ret
sub
xlat
movsb
add
cmp
daa
add
pushf
jp
popf
sub
rorb
add
pop
aas
mov
and
movb
mov
mov
sbb
es
out
cmpsl
xor
jp
xchg
movlps
scas
sub
sub
mov
adc
and
inc
mov
fstl
add
fiadds
xchg
outsl
pop
cld
mov
inc
add
call
daa
fldl
int
xor
fwait
xchg
sub
push
dec
in
pop
dec
pop
lods
sbbb
jmp
pop
add
push
sbb
ljmp
outsb
push
cmp
add
push
push
stos
inc
cmp
imul
repz
lahf
add
pop
data16
push
mov
addr16
add
cmp
mov
add
and
out
mov
test
dec
call
add
xchg
das
mov
jmp
or
frstor
sub
inc
dec
xchg
xchg
cld
pop
mov
mov
dec
add
bound
or
mov
stc
in
mov
pushf
ret
les
inc
add
dec
movsb
xchg
jbe
jnp
add
jae
and
cli
sub
repz
push
pusha
jbe
jb
or
hlt
dec
aam
inc
xchg
mov
fnstsw
mov
aas
push
push
scas
leave
cs
dec
insb
fs
add
mov
loop
les
lcall
icebp
js
push
lcall
insl
add
test
inc
call
imul
orb
repnz
add
xchg
in
push
ljmp
xchg
shr
xor
add
mov
pop
add
in
xor
sidtl
aam
mov
cwtl
lea
roll
add
repz
mov
dec
clc
loop
jo
iret
loope
call
in
mov
ret
mov
add
lds
push
ret
fnstsw
pop
dec
aam
cmp
cmpl
lock
fdivs
mov
dec
xchg
mov
dec
mov
cmp
add
jmp
enter
add
pop
sub
mov
es
add
mov
ficoms
dec
dec
outsb
es
rolb
sti
pusha
enter
lock
les
jp
push
movsl
cmp
jg,pt
add
lock
sub
aas
jmp
xchg
add
shlb
cld
bsf
mov
xorl
dec
pop
push
cltd
jo
repz
inc
add
mov
cmp
subl
and
push
inc
stos
cmp
je
lods
add
adc
sub
sahf
mov
inc
mov
or
repnz
pop
dec
jnp
rol
inc
or
mov
add
jmp
cld
sar
test
daa
dec
ja
or
dec
cmc
sbbb
dec
cli
or
pop
inc
mov
jo
dec
inc
push
cs
xchg
sbb
add
test
cmp
repnz
add
out
fbstp
iret
sete
push
iret
in
inc
cmp
pushf
and
dec
cmpsl
pop
and
push
jle
aam
adc
push
mov
mov
hlt
jl
inc
cmp
sbb
insb
test
rolb
jno
dec
pop
push
pushf
push
sub
push
out
add
push
lea
mov
cwtl
pop
loopne
adcl
clc
loope
dec
adc
pop
orb
or
jns
fs
rolb
and
or
mov
jmp
add
jns
inc
ftst
pop
add
mov
repnz
xor
add
dec
adc
fsubs
add
mov
test
lods
hlt
push
or
sbb
mov
pushf
cmp
or
daa
mov
cld
mov
test
add
xchg
adc
idivb
shlb
and
andb
or
push
into
add
enter
inc
mov
ds
jo
in
or
in
jbe
add
mov
cltd
add
cmp
aam
pop
pop
les
xchg
sbb
push
push
mov
lock
jb
jnp
insb
jo
stc
mov
lods
rcrb
push
jns
add
enter
mov
mov
inc
jmp
orl
les
jne
pop
or
pushf
sbbb
add
xlat
sub
push
jl
or
jb
push
mov
cmp
cmp
adc
mov
or
inc
jo
ret
add
add
add
sahf
adc
add
dec
mov
sub
xor
idiv
cmp
add
or
pop
les
outsl
shr
add
sbb
jl
cmp
test
and
jnp
lock
mov
and
sub
add
inc
xor
lods
xor
test
stos
sub
rorb
add
loopne
or
testb
mov
sub
addr16
cmp
je
ss
add
adc
xchg
and
cmpb
test
dec
mov
adc
pop
add
inc
or
jnp
pop
pusha
daa
lock
fsubr
jecxz
jne
add
push
adc
add
fimuls
mov
sarb
jb
and
adc
inc
cli
pushf
jge
popf
mulb
mov
out
testl
adcb
mov
add
xchg
nop
inc
and
adc
push
jge
out
add
and
add
test
xchg
ficomps
out
aas
imull
push
shld
repnz
mov
cmp
sbbb
push
cmp
and
jge
xchg
and
inc
xorb
sbb
push
jecxz
add
cmp
jns
pop
mov
mov
or
subl
push
inc
test
jle
add
jbe
fmuls
sbb
push
mov
xorb
pop
jae
sbb
movzwl
sub
lock
cmp
adc
fadds
jne
xorb
jmp
popf
ja
inc
cld
mov
movb
add
jg
and
ds
dec
sbb
push
test
inc
mov
mov
fbstp
push
pop
jmp
leave
add
aaa
mov
ret
sbb
inc
push
mov
and
sub
sbb
incl
shlb
pop
cmp
inc
scas
hlt
mov
and
xchg
xor
push
clc
loopne
or
test
jbe
pop
add
mov
add
subb
add
das
ror
arpl
inc
add
adc
push
data16
add
imul
add
push
out
push
shlb
shufps
pop
and
cmp
adcl
popl
adc
and
frstor
or
or
sub
lea
ljmp
xchg
rol
mov
add
leave
fsubl
sar
add
pop
xchg
fs
daa
sub
dec
jmp
mov
test
inc
xchg
mov
push
pusha
hlt
add
push
call
mov
jp
add
and
mov
pop
mov
jnp
add
hlt
enter
ds
or
xor
sbb
add
and
mov
pop
xchg
call
int
imul
icebp
push
lock
add
divl
xchg
push
inc
test
inc
push
add
mov
aas
push
dec
add
sysret
rcll
mov
inc
div
and
or
pop
mov
mov
or
cmp
les
sub
pop
push
ljmp
jae
das
jp
adc
sbb
sti
cmp
inc
jno
je
sub
decb
add
xchg
adc
add
cmp
push
pop
cwtl
mov
pop
repz
cmpb
jnp
test
inc
push
jmp
rorb
xchg
ds
add
sbb
inc
pop
inc
push
add
sbb
cwtl
add
push
adc
cmovae
sbb
mov
jg
cs
sbbb
inc
add
hlt
popa
mov
subb
push
add
or
push
out
xchg
push
add
add
call
pop
je
dec
fs
es
sbb
rolb
fs
dec
mov
add
xchg
sbb
inc
repz
inc
adc
mov
xchg
bound
insb
add
and
rorl
test
mov
adc
je
stos
cmpsl
xchg
add
mov
mov
xorb
inc
jg
add
pop
sti
dec
cmp
add
imul
add
enter
sti
fmul
mov
call
pop
inc
sbb
rclb
mov
and
add
or
xlat
cmp
cltd
dec
addb
fs
mov
fwait
xor
mov
lock
ds
rcll
mov
push
add
cmp
mov
and
push
sti
outsl
loopne
test
mov
cltd
aam
out
add
sti
adc
cli
loopne
sub
push
mov
xor
sbb
lret
and
sbb
pop
pop
push
add
sub
neg
jmp
add
inc
and
cmp
scas
add
adcb
sti
and
pop
test
push
test
fs
xchg
jp
push
mov
mov
sub
push
addr16
fsubs
repnz
sbb
jmp
je
add
mov
xor
jmp
lods
lahf
mov
stc
add
pushf
sarb
movl
lea
call
and
dec
cmp
cmp
aam
and
rolb
add
push
push
add
push
sub
add
xchg
dec
xabort
mov
lock
es
add
cmpsb
rorb
pop
ret
adc
loopne
adc
or
or
sub
inc
dec
push
fcompl
faddl
imul
inc
cltd
and
pop
stc
push
dec
aam
jg
inc
add
inc
and
cltd
xor
dec
add
or
sbb
out
lahf
fldl
out
ljmp
dec
fwait
inc
xlat
pop
fs
xchg
sub
pop
add
push
and
ret
mov
add
call
sti
xchg
add
lcall
adc
add
pop
sub
push
dec
insb
pop
fwait
loopne
push
jne
pop
add
aaa
adc
mov
sub
dec
mov
mov
add
add
mov
shld
stos
insb
pop
push
loopne
sub
je
adcl
jmp
arpl
or
cld
add
jbe
sub
dec
out
add
pop
cmp
xchg
xchg
xchg
decl
nop
rorl
add
stc
mov
fwait
cmpl
movsb
dec
mov
dec
fcoms
push
cmpsb
sbb
add
add
add
lahf
lea
and
add
xchg
add
cmpl
adc
pop
push
mov
inc
nop
fs
inc
rclb
mov
mov
pop
hlt
inc
sub
or
cmp
adc
add
ljmp
mov
sub
outsl
add
imul
xor
mov
rolb
xorb
popf
icebp
xor
add
test
sub
mov
or
dec
jmp
push
sub
sbb
or
pop
call
pop
subb
sbb
pop
fcomps
add
in
ss
clc
xor
push
subb
jle
push
loopne
jmp
test
jge
mov
les
xor
adc
adc
push
aad
mov
pop
add
or
sub
cmc
push
add
and
enter
ficompl
inc
int
pusha
cmp
adc
mov
sub
dec
push
sub
ret
sbb
repnz
paddq
add
add
das
xor
inc
dec
and
add
xor
cmp
loopne
and
add
je
sbb
arpl
or
iret
pop
or
lock
jmp
test
jge
xchg
cmp
sbb
nop
add
loop
bound
fs
add
sbb
cmp
adc
lret
sbb
pop
jmp
sarl
fbstp
sti
add
add
sbb
push
mov
xor
stos
mov
out
and
inc
cwtl
dec
sti
add
pop
lds
aaa
push
add
sub
add
pushf
lea
sub
mov
and
jnp
insb
aam
mov
test
and
or
gs
out
adc
pop
dec
adc
push
cli
xchg
add
jns
push
sbb
push
add
data16
cld
es
sbbl
inc
mov
unpcklps
jge
pop
cmp
add
ficomps
loop
pop
movaps
inc
out
adc
or
ljmp
dec
cmovo
out
or
or
repnz
notb
pushf
movb
call
cmp
loopne
imul
xor
add
xchg
ret
andb
and
mov
pusha
add
push
pop
mov
mov
xchg
loop
xchg
lret
add
inc
or
in
movsb
cmp
fiaddl
xchg
ljmp
jno
das
add
mov
fadds
mov
add
push
and
add
fimuls
mov
jo
mov
inc
pop
pop
push
adc
cwtl
cmp
bound
cmp
or
mov
mov
out
lret
xor
daa
mov
inc
jecxz
ja
pop
iret
and
push
or
pop
mov
jge
test
push
sbb
cmpsl
or
push
repnz
pop
push
stc
cmp
xor
or
add
add
pop
cwtl
mov
sbb
lahf
adc
ret
xor
imul
lock
jne
add
mov
arpl
sub
adc
repz
add
ljmp
das
loop
sub
or
add
push
dec
xchg
push
inc
movsb
in
out
add
mov
mov
cmp
mov
mov
jle
and
push
in
test
dec
add
mov
das
add
inc
cmp
in
and
jg
add
jg
jge
cmpsb
aas
cmp
addb
xor
adc
adc
cmp
movsb
cmp
add
pop
jge
mov
movsl
dec
sbbb
jg
aam
mov
sbb
test
jne
jmp
dec
into
lret
movsb
and
sbb
cmp
repz
jno
push
add
adc
mov
pop
lods
mov
mov
pop
sbb
cmpsl
pop
cmp
xchg
and
mov
aas
es
jns
stos
mov
stos
add
out
repz
add
and
sbb
or
dec
add
in
loopne
ljmp
xor
enter
jmp
inc
push
push
sbb
add
ljmp
or
rorb
sub
pop
in
repz
movsb
xor
sti
movsl
and
jae
pop
add
jo
mov
or
pop
sub
push
push
or
add
push
push
aaa
add
pop
dec
out
add
out
dec
inc
ljmp
cmp
sub
push
mov
sub
sbb
sub
pop
add
fistl
add
mov
or
js
lahf
aam
lret
add
pop
cmp
les
pushf
mov
add
ds
mov
mov
add
add
cmp
je
sub
repnz
pushf
decl
or
cmp
pop
mov
and
outsl
push
pop
push
adc
loope
inc
adc
mov
pop
jno
lret
and
ja
inc
sbbb
loopne
fld
pop
cltd
in
in
mov
stc
xchg
inc
jmp
inc
sbb
sub
testl
ljmp
cmp
add
ret
mov
add
cmpsl
lahf
pop
ret
cmpsb
je
je
or
decl
sub
pop
test
cmpsb
and
mov
cwtl
adc
pop
cmpsl
and
inc
push
adc
incl
out
xchg
loop
aad
sbb
or
rorl
or
movsb
xchg
lret
popf
lock
lods
and
rcr
les
push
cltd
in
pusha
sbb
sbb
push
adc
cmp
xchg
inc
rolb
out
cwtl
cmova
add
fisubl
or
call
cs
fsubs
pop
jg
leave
movsb
mov
add
mov
push
inc
dec
add
add
or
cmpsl
jae
xor
adc
fdiv
or
enter
xchg
in
or
cwtl
xor
push
add
mov
jmp
sub
mov
mov
mov
add
cmp
jnp
inc
or
mov
jo
mov
sub
push
pop
pop
js
lret
add
loopne
pushf
lock
in
xchg
add
mov
mov
mov
addb
add
addl
push
les
add
xchg
lock
test
loope
das
mov
adc
setns
jle
xchg
inc
in
mov
nop
sub
lea
ret
je
ja
into
int
pop
test
mov
xchg
sti
add
imulb
scas
hlt
in
in
sti
cmp
add
and
ja
sahf
daa
loopne
out
xor
pop
add
pop
shll
add
xor
or
mov
popa
jns
orl
and
mov
and
ror
into
mov
add
inc
push
test
scas
or
ret
repz
rolb
push
or
mov
xchg
add
mov
sbb
inc
fldt
xchg
sbb
xchg
fs
cmc
in
dec
sbb
cwtl
lods
xor
or
jecxz
loopne
mov
add
mov
inc
push
test
inc
mov
addl
adc
or
xchg
sub
in
xor
or
sub
xor
adc
jl
cmpsl
xor
mov
pop
sub
cmc
leave
pop
xchg
jo
xor
and
pop
lcall
mov
lods
out
dec
stos
add
in
xor
cmp
push
jmp
out
in
repz
dec
test
test
int3
pusha
sahf
lock
rcrl
add
stos
loop
add
cltd
nop
js
mov
outsb
add
out
repnz
dec
add
xchg
push
fisttps
rcr
jl
pusha
mov
cmp
clc
add
inc
orb
jne
lds
cmovns
dec
enter
imul
sahf
and
gs
add
out
xor
sbb
mov
lock
dec
pop
mov
loop
cmpsl
dec
xchg
pop
mov
cs
or
mov
add
pop
je
roll
adc
mov
flds
cmp
ja
and
aam
pop
cmp
pop
cltd
loope
pop
add
stos
gs
daa
lods
xor
jmp
test
negb
inc
pushf
leave
je
shr
add
fwait
mov
and
aas
adcb
fmuls
cmp
sbb
xlat
add
stc
imul
aad
andl
sub
orb
mov
add
pop
les
add
leave
inc
sub
scas
ja
jmp
mov
sub
push
cmp
sbb
and
ds
idivb
jbe
les
xor
cmp
jle
add
inc
push
js
mov
pop
xchg
fs
movsbl
jmp
repnz
mov
sub
or
dec
jmp
cmp
mov
dec
cmp
out
push
pusha
sbb
ret
add
push
adc
hlt
push
xchg
add
dec
stos
sub
mov
test
pop
nop
aam
add
fcmovne
push
dec
or
sarl
mov
popa
xor
xchg
lods
mov
sbb
adc
xchg
lcall
add
adc
pop
or
ja
test
movsb
adc
loopne
dec
xchg
or
inc
cwtl
pop
iret
sub
cmpsl
or
sub
mov
invlpg
inc
inc
mov
add
mov
add
push
jb
rclb
loop
inc
sbb
mov
call
adc
lock
dec
jp
cmp
mov
add
fldl
jo
data16
mov
pop
or
add
mov
or
imul
mov
sbb
and
and
push
add
sub
jns
adc
push
or
inc
gs
andl
dec
out
pusha
addb
and
inc
xchg
adcb
mov
xchg
add
cmp
xlat
or
test
add
stos
sub
mov
add
push
sahf
pushf
dec
xor
add
push
jg
add
icebp
add
pop
repnz
pop
xor
sbb
or
push
push
lods
sbb
aam
push
push
sub
sbb
shll
push
sarb
shl
std
mov
or
jae
pop
inc
push
gs
mov
xchg
adc
add
mov
outsb
add
mov
ret
les
out
ja
xchg
in
add
aad
test
iret
inc
add
and
sahf
out
adc
nop
cltd
add
push
add
pop
cmp
sbb
mov
mov
add
shlb
ss
add
mov
inc
jns,pn
push
xor
sub
jno
or
insb
push
jmp
xor
call
stos
sahf
dec
imul
insl
repz
add
xchg
test
rol
add
mov
addb
jmp
mov
add
xchg
push
mov
push
popf
add
cmc
outsl
lods
test
mov
mov
push
scas
dec
xor
shrb
in
nop
or
cmpl
das
fwait
jae
jecxz
in
mov
sub
mov
bound
add
and
dec
add
ljmp
outsl
mov
popa
xchg
xchg
or
add
lret
subb
call
ret
and
push
mov
mov
add
int3
jmp
test
in
push
mov
out
dec
arpl
fidivl
testb
das
xchg
icebp
push
inc
nop
pushf
ffreep
cwtl
cmp
adc
or
mov
outsb
call
dec
adc
cmpsl
push
lcall
and
pusha
scas
pop
sbbb
inc
ret
test
in
gs
cmp
cmp
jnp
ret
addb
jl
aam
or
movl
mov
xor
dec
popa
dec
scas
jne
mov
fs
add
mov
loope
pop
cld
addr16
daa
outsl
push
inc
inc
adcb
cmp
lods
lock
inc
loop
push
pushf
or
mov
add
lods
jle
call
int
sub
cmc
jns
andl
pop
push
outsb
in
sub
jb
sbb
lcall
aaa
jnp
lods
in
lds
sbb
cmp
cmp
add
fisttpll
cmp
imul
les
int3
insb
mov
and
loopne
pusha
je
add
les
out
mov
cwtl
lods
incb
je
sbb
mov
adc
xorl
out
xchg
jl
shll
insb
adc
mov
cmc
dec
add
cmp
testb
pop
mov
subb
mov
push
cmpsb
mov
das
add
cmp
push
hlt
movsb
dec
pop
add
add
cld
inc
add
and
in
mov
mov
dec
inc
das
add
add
mov
scas
mov
sub
add
inc
adc
lahf
lods
jmp
xchg
loopne
add
or
cmp
add
jne
add
pushl
adc
jl
cmp
xchg
add
pop
cmc
xchg
aad
add
jb
cmpl
cmp
cmp
in
pop
add
inc
andb
test
mov
jae
ljmp
les
push
dec
ret
jmp
sub
cmpsb
nop
mov
je
pop
cmpb
stos
pop
add
jns
cmp
mov
xor
sbb
rclb
sbb
mov
dec
sub
mov
les
add
mov
rorb
std
push
xor
cltd
push
loopne
jmp
adc
mov
add
int3
outsb
inc
mov
jmp
and
push
cmp
cmpsl
shl
in
add
adc
mov
push
adc
sub
jae
dec
ret
sub
loop
mov
sub
push
xor
add
inc
fldcw
add
xchg
jne
add
cli
mov
pop
cmp
push
add
cwtl
fisttpl
sub
push
or
out
cmp
mov
pop
jecxz
and
xchg
add
in
mov
sbbb
idivl
pop
sub
jmp
mov
push
clc
or
call
ret
add
in
dec
clc
stos
add
inc
xchg
adc
adc
adc
int
out
add
mov
mov
inc
daa
jge
jmp
mov
add
jb
lcall
clc
mov
or
add
push
sub
add
arpl
jl
lock
pop
les
fwait
add
xlat
sbb
shlb
mov
lea
or
or
inc
sub
inc
push
pop
and
fdivrp
into
pop
and
stc
cmpl
sub
pop
adc
insb
aas
in
out
and
push
inc
xor
or
xchg
add
idiv
jo
adc
add
dec
gs
add
add
loope
or
mov
je
outsl
mov
xorb
repnz
adc
add
mov
popf
inc
sbbl
sbb
add
enter
pop
pop
jae
xchg
mov
mov
call
cwtl
xchg
adc
cmp
in
sbb
scas
and
cmpsb
dec
mov
mov
popa
pop
lds
xchg
xchg
lahf
int3
mov
push
jmp
mov
jo
mov
pop
test
mov
idiv
add
and
dec
xor
push
or
push
adcb
jmp
or
add
inc
dec
mov
cmpl
loope
pop
dec
cmpsb
shlb
out
mov
xor
repz
hlt
stos
and
shrb
mov
jno
call
scas
lret
into
aad
xor
inc
sbb
add
enter
add
mov
and
das
sub
add
test
dec
cltd
neg
mov
fidivl
xor
loope
push
mov
adc
cmp
adc
int
pusha
adc
xchg
jmp
add
xchg
push
ja
or
add
pop
into
std
mov
xchg
out
mov
sbb
adc
fs
jle
or
adc
cs
lock
or
push
push
je
repz
flds
les
and
add
jg
add
inc
popa
outsb
jbe
fstps
add
in
add
out
lret
add
or
jl
sbb
cs
push
push
in
add
out
int3
fsubrs
xor
fcoms
add
lret
push
fisttpll
add
pop
jg
dec
das
add
fs
inc
push
jne
repnz
mov
dec
js
daa
je
adc
movsl
imul
std
mov
push
xor
les
sbb
xchg
adc
or
add
push
fwait
loopne
icebp
testb
or
fstl
sbb
pop
mov
add
subl
popa
cmp
sub
ret
mov
scas
xchg
mov
repnz
testb
sti
or
lock
fdivs
int
add
mov
xor
pop
push
jg
je
adc
test
jne
add
repnz
dec
leave
testb
rcrb
loope
fcoml
push
add
jne
mov
xchg
jp
pop
rclb
adc
jl
fstps
push
fsubrs
jno
adc
icebp
scas
loop
sbb
add
and
sbb
mov
shlb
cmpsb
popa
push
pop
cmp
cmp
cld
adc
rol
xor
add
and
aaa
sub
sub
inc
sbb
cmp
push
mov
inc
movsb
jmp
insb
jp
cli
dec
and
sbb
add
aam
jle
cmp
pop
fcom
daa
dec
lock
pop
pop
lret
inc
jmp
xor
lret
iret
ds
lea
jo
mov
adc
mov
add
mov
fxam
jl
gs
cvttps2pi
adc
out
cmpb
js
add
push
sets
jmp
xchg
mov
outsl
xchg
add
aaa
mov
or
rcrb
imul
ljmp
or
jo
adc
lock
xchg
xchg
lods
jge
mov
lret
add
mov
in
cmp
push
jg
mov
pusha
xor
jns
dec
add
push
psllq
out
add
xchg
test
mov
negl
add
aas
cmp
mov
adc
xchg
sub
add
sub
sbb
insb
out
shlb
out
add
stc
push
xchg
cmp
xor
stos
add
jo
add
shll
je
sub
mov
cmp
fnstenv
repnz
dec
mov
xchg
es
ret
pop
shlb
push
cli
inc
add
imul
push
add
dec
mov
out
add
jns
push
pusha
fimull
es
adc
inc
bound
repnz
and
lret
cmp
sub
movsb
nop
ret
stos
sub
add
inc
je
aas
mov
lods
adc
and
fcmovb
dec
and
in
xchg
cmp
popa
cmp
insb
dec
cmp
add
mov
je
pop
outsl
imul
mov
inc
int
sub
not
xchg
outsl
add
inc
decl
jne
xchg
and
add
es
or
or
or
cmpsl
pop
adcl
mov
inc
mov
xchg
shrb
orb
sub
push
dec
jl
inc
or
ja
sahf
push
push
sub
je
lret
orb
and
ret
cmpsb
sar
je
dec
push
add
push
sbb
cmp
fdivr
and
in
add
fidivs
sub
in
push
ret
sub
sbb
pusha
std
jle
add
push
shl
iret
pop
test
inc
loope
lds
jg
mov
mov
add
or
movsb
call
and
mov
and
jl
jmp
jnp
fnstcw
push
inc
pop
int3
std
add
cmp
mov
add
mov
jno
jg
xchg
imul
das
xchg
xchg
loope
aas
sub
add
inc
and
cmp
mov
ret
nop
jb
pop
add
in
aas
push
movsb
adc
cmp
push
add
rcr
cltd
shlb
jle,pt
or
add
push
lock
in
test
xchg
inc
mov
cmpl
daa
loope
inc
sub
in
jg
jle
add
outsb
ljmp
mov
test
pop
lock
push
pop
dec
jb
lret
xchg
push
std
xor
jl
sub
lods
sti
cmp
loopne
and
adc
nop
add
dec
fxch
add
in
les
add
add
cmpl
and
or
movsl
adc
inc
call
adc
push
in
js
in
add
mov
mov
fsubrp
sub
push
dec
cmp
add
andb
sbb
shlb
jo
push
sub
pmulhuw
out
movsl
mov
adc
add
or
test
aaa
adc
int
inc
lods
outsb
push
sbb
aas
xchg
mov
inc
daa
pop
or
cmpsb
push
popf
jb
cmp
xor
clc
es
sub
imul
in
repnz
push
cmp
jecxz
sub
add
pop
xchg
mov
mov
movsl
add
mov
add
mov
sub
call
mov
movsl
jle
inc
icebp
mov
xchg
inc
lods
stos
and
inc
add
repnz
sbb
popa
dec
sti
mov
adc
popf
cmp
push
testb
push
lds
mov
pop
jge
out
pushf
daa
inc
xchg
lock
movsl
cmc
pusha
add
push
test
pop
push
pop
sub
add
movsb
xchg
push
nop
dec
test
mov
pop
loopne
lahf
or
xchg
aad
arpl
pop
xchg
push
dec
add
mov
addl
xchg
bound
adc
les
test
sub
add
or
out
add
aad
sbb
mov
adc
pushf
mov
adc
xchg
or
test
inc
xchg
adc
add
iret
mov
adc
push
push
dec
or
cmp
lahf
mov
and
cmpb
mov
push
xor
jge
jne
or
and
add
movsb
testb
sbb
and
add
xchg
lods
xchg
pop
push
sub
push
sbb
jns
test
jo
les
fwait
jecxz
add
sub
pop
xchg
push
adc
imul
pop
bound
push
nop
aam
out
jge
xor
or
scas
dec
lea
cs
and
pop
jp
or
sbb
mov
jnp
xchg
mov
adc
add
cld
and
sbb
mov
hlt
dec
sub
jae
push
push
add
sbb
fisttps
jp
lds
loop
out
push
cmp
or
and
pop
adc
jmp
shrl
hlt
outsl
add
sbb
adc
sbb
add
and
sub
mov
mov
push
mov
or
fs
scas
add
fwait
xchg
pop
jb
add
push
jmp
push
sbb
rcl
das
or
cwtl
push
jp
push
or
mov
jmp
decl
test
pop
mov
mov
mov
cltd
add
add
sub
mov
add
out
jb
push
cld
or
leave
in
xor
cmp
add
arpl
pusha
leave
mov
jo
rolb
add
mov
mov
dec
cld
pushf
daa
xchg
pop
push
mov
push
sbb
xchg
sbb
sbb
xchg
pop
add
inc
ljmp
repnz
add
cli
shr
dec
cwtl
inc
sbb
cltd
pop
les
lahf
push
xor
mov
adc
movsb
div
add
pop
jbe
adc
mov
scas
push
mov
add
xor
repnz
mov
add
flds
inc
fmull
loopne
insb
adc
cli
pusha
out
loopne
push
add
sbb
sbb
imull
adc
clc
and
imul
jle
pop
subb
mov
mov
push
lahf
or
push
std
sub
pushf
sahf
pop
add
add
mov
pop
out
popf
inc
jnp
out
add
ret
add
cmc
in
add
cwtl
cmp
and
and
mov
add
cltd
loopne
mov
repnz
stos
add
mov
stc
leave
xchg
cs
and
add
out
adc
mov
sub
inc
inc
clc
je
cmp
fisttps
push
stc
loop
add
fdivs
cmp
ret
mov
pop
inc
push
add
hlt
mov
push
mov
add
fucomi
test
imul
cwtl
mov
dec
add
mov
fcoml
popa
insb
sbb
xchg
add
add
add
sub
pop
das
mov
adc
jmp
jno
add
imul
sbb
imull
mov
test
push
push
fsubl
inc
fildl
incl
shlb
cmp
aam
mov
inc
push
jmp
rol
cmc
imul
adc
sub
es
xchg
xor
sbbl
or
roll
cmp
xchg
out
pop
jmp
or
pusha
push
out
leave
xor
jl
mov
int3
rcll
cmp
jbe
loopne
loope
dec
add
call
add
add
inc
test
xorb
dec
add
and
in
mov
sbb
or
push
mov
add
jne
fiadds
int3
inc
jmp
xchg
adc
mov
sbb
rorb
push
inc
cmp
ja
fsubp
mov
ss
sub
push
add
jg
adc
mov
pop
sbb
sub
adc
xor
into
in
pop
jno
add
mov
jbe
dec
dec
pop
cld
push
and
add
data16
cwtl
jl
add
adc
add
sub
pop
mov
and
cld
mov
not
and
push
push
add
mov
xchg
arpl
add
int3
jo
and
nop
leave
jno
xchg
or
jne
pop
fisubrl
cmc
cmp
add
jns
and
sub
mov
mov
push
sub
add
mov
inc
insl
getsec
cmpl
sti
pop
mov
pop
dec
add
popa
test
dec
repnz
aaa
or
enter
loop
jmp
xchg
pop
sti
mov
test
dec
xchg
add
fcompl
sub
cmpsl
out
push
push
sbb
add
add
xchg
push
add
rcll
and
or
jns
add
add
and
cmp
add
imul
mov
and
sbb
xchg
adc
lcall
inc
and
dec
cmpsb
lret
lahf
lods
test
sahf
adc
pusha
inc
mov
xor
and
call
jp
and
jbe
add
je
stc
out
add
add
cmp
mov
retw
ja
daa
xchg
insb
test
dec
xchg
sub
jnp
and
cmp
sub
xchg
mov
add
les
cmp
xchg
add
mov
nop
mov
add
bound
push
add
fsubrl
add
stos
pusha
push
xlat
inc
add
call
push
repz
xchg
adc
jb
mov
jmp
add
and
lods
pop
daa
psubd
push
addr16
mov
out
subb
pusha
nop
add
xlat
xchg
test
mov
mov
test
cmp
add
xchg
or
adc
cmpl
jge
push
pusha
rorl
iret
pop
mov
mov
repz
mov
pop
mov
add
int3
mov
add
cmp
lea
movl
dec
jne
into
xor
stos
push
clc
gs
push
pop
pop
das
not
lods
out
add
sbb
sub
mov
in
or
add
cmp
adc
fwait
inc
push
pop
and
rclb
sbb
xchg
xor
pushf
pusha
inc
pop
lock
push
addl
jecxz
sub
dec
add
xor
loop
int3
push
pop
js
cmp
mov
or
ds
xchg
clc
sahf
pusha
push
iret
lcall
addl
jo
out
nop
and
xlat
add
movsb
stos
frstor
mov
inc
sub
daa
ret
xchg
lock
or
lret
cmpsl
mov
faddl
insb
mov
jo
fisttps
sub
es
test
xor
adc
mov
sarb
add
orl
add
call
inc
add
add
lock
imul
dec
adc
push
dec
or
add
pusha
ret
lds
jg
add
pop
mov
push
or
nop
out
push
jo
add
push
repz
cmp
dec
pop
roll
lret
jle
fimuls
and
xor
mov
xchg
mov
jl
push
xchg
push
pushf
icebp
add
mov
fbld
cmpl
mov
push
jmp
pusha
stos
daa
add
pop
jnp
dec
push
mov
push
mov
jne
lea
add
jae
push
dec
rcl
ljmp
arpl
push
and
cli
mov
jne
inc
sbb
adc
leave
push
add
dec
out
mov
ret
add
pop
add
testl
dec
xor
add
push
ss
and
sbb
pop
push
sar
je
inc
add
fcoml
lret
fldl
add
lock
and
addb
movzwl
push
test
or
clc
or
add
insb
cmp
jmp
and
fistps
inc
xchg
cld
dec
inc
sbb
pop
and
pop
push
mov
movsb
fistps
adc
push
push
push
inc
inc
faddl
icebp
imul
mov
push
enter
push
or
ret
lock
fmul
sub
and
mov
adc
pop
mov
add
xor
fldl
mov
xchg
in
cwtl
inc
or
call
cld
insl
lock
lds
mov
or
xchg
jg
xor
push
push
jae
add
xor
pop
sbb
xchg
ret
add
dec
pop
and
xorl
faddl
xchg
fnstsw
pop
add
bound
adc
stc
add
sarb
cmp
popf
sbb
shrl
dec
push
aam
cmp
enter
add
minps
outsl
pop
out
add
sbb
inc
push
add
adc
jne
pop
test
sub
dec
sbbb
push
mov
ja
movsl
rorl
adc
roll
mov
mov
bound
std
add
pop
dec
add
dec
shlb
xor
insb
add
pop
test
aam
and
ljmp
lret
jno
adc
cwtl
jge
add
xor
cmp
cmp
or
inc
and
sbb
insb
sub
nop
pop
add
popa
push
push
adc
imul
fisubl
pop
ret
jmp
loop
add
cmp
sbb
out
call
insb
pop
call
push
mov
push
fildl
outsb
dec
into
or
imul
rolb
dec
or
or
dec
mov
dec
pop
js
add
inc
xlat
push
add
or
add
sub
push
and
mov
rolb
sub
adc
fdivs
add
sbb
int3
mov
push
inc
xor
repz
fdivl
lock
pushf
inc
loope
je
add
adc
add
scas
cmpl
mov
pop
adc
dec
jmp
addr16
xor
insb
loopne
or
sub
xlat
scas
xchg
les
jo
add
enter
sbb
ja
rclb
inc
jg
int
in
xor
mov
inc
cmc
loope
cmp
push
add
jmp
and
movsl
rclb
insb
pop
enter
repz
hlt
push
jl
adc
mov
adc
push
add
mov
add
mov
call
test
sub
or
out
mov
sub
paddsb
push
adc
adc
loopne
lock
sbb
sbb
add
fbstp
das
jbe
popl
dec
ret
add
sub
and
add
inc
sbb
lahf
inc
xor
jbe
mov
sbb
adc
jns
popa
pop
add
and
or
invd
test
inc
push
push
rolb
insb
sbb
push
outsb
shlb
add
into
shr
rolb
and
shrl
jne
in
inc
movsb
lea
jmp
addr16
add
icebp
mov
mov
into
sub
int3
cmpb
mov
ret
add
pop
jns
lock
loope
outsb
sbb
inc
faddl
and
insl
inc
dec
add
pop
and
lock
dec
jecxz
add
hlt
pushf
adc
clc
add
sbbb
subb
loopne
inc
das
jns
aas
lret
push
pop
and
movsl
sub
and
xchg
rorl
in
jno
addr16
or
stos
inc
addb
mov
adc
cmp
in
adc
push
pop
add
popf
pop
shlb
push
sarl
out
xchg
loopne
pop
cmc
cmp
xor
loope
shlb
cli
add
jecxz
cmp
insl
cs
add
add
imul
ficompl
rorl
xchg
sub
imul
mov
stos
test
lahf
cmp
add
ror
pop
pusha
jmp
add
nop
dec
addb
mov
pop
dec
jecxz
adc
mov
lods
cli
xchg
repnz
dec
repnz
pushf
add
str
das
scas
xlat
ss
mov
mov
xor
push
push
into
jo
popf
inc
popa
sub
dec
adc
jne
bnd
ja
cmp
mov
cld
add
sti
add
int
rcll
and
xor
addb
out
xor
repz
mov
add
and
pop
add
mov
fldl
or
dec
inc
fldl
dec
add
xchg
sar
pop
mov
mov
jmp
cld
jg
inc
add
jae
jp
push
sldt
jo
sub
testb
jne
cld
push
leave
add
inc
push
add
mov
push
dec
mov
fisttpll
insb
add
rolb
inc
inc
lods
in
jo
popl
pushf
cmp
movsb
adc
aam
jecxz
xchg
mov
fwait
pop
in
sub
mov
push
in
mov
jno
pslld
repz
xchg
jo
jmp
popf
pop
addr16
sub
mov
add
test
dec
pop
pop
cwtl
and
loop
or
pop
xlat
push
add
aas
test
add
push
nop
roll
xor
and
pop
faddl
add
and
add
insb
scas
test
aam
into
add
hlt
ja
mov
jecxz
or
les
xorl
add
mov
jmp
outsl
xor
mov
jl
adc
push
lea
daa
sub
jge
pop
ljmp
je
pop
add
dec
les
add
cmp
add
in
sub
pop
setge
call
clc
stc
addr16
push
mov
mov
jne
cmc
mov
out
je
lret
push
push
imul
inc
cmp
ja
add
adc
popf
into
les
add
in
ds
pushf
dec
dec
fstps
mov
insb
dec
pop
mov
jno
jge
dec
push
add
inc
sub
or
cmp
fildl
add
popf
pop
fstpl
xor
cld
or
or
mov
in
pop
mov
add
stos
repnz
shrb
and
scas
pushf
jo
add
rdrand
add
fildl
add
jb
jae
adc
out
fldt
rorb
add
or
or
add
add
mov
cmpb
das
je
xchg
out
or
and
adc
add
ja
fadd
push
mov
pop
add
or
inc
xchg
pop
int3
lods
repz
xor
popf
mov
cs
jo
daa
add
mov
dec
in
ss
dec
and
iret
popa
mov
test
pop
pushf
fiadds
adc
cwtl
jo
dec
pop
ljmp
xor
mov
scas
loope
dec
pop
add
adc
add
sub
data16
lahf
push
test
pop
por
add
fisubl
mov
mov
out
xchg
int3
xor
out
call
and
add
mov
sbb
mov
dec
cltd
adc
mov
daa
or
xchg
cld
loopne
das
int3
cltd
add
ja
rcl
sub
imul
and
push
cmove
sti
int
fimuls
clc
fsubr
dec
rorb
push
outsb
mov
mov
pop
je
cmp
stos
aad
add
mov
notb
and
adc
pop
imul
lret
je
add
mov
mov
jne
shlb
xor
in
inc
add
xlat
adc
add
cmp
lret
icebp
lock
sbb
xchg
cmc
dec
pop
out
add
hlt
add
cmp
jl
add
leave
mov
outsl
lret
js
call
mov
hlt
in
test
imul
popf
aam
out
cltd
sub
enter
adc
dec
or
adc
addr16
fistl
fs
or
add
jmp
rorl
test
inc
add
fs
add
mov
lds
mov
cmpsl
push
inc
add
cmp
repnz
push
sbb
sbb
or
rcr
and
dec
fwait
test
or
push
jg
jb
xor
xchg
pop
add
and
mov
test
loop
pop
decb
dec
movsl
or
dec
push
xchg
lock
daa
add
outsb
and
divl
add
loop
js
out
orb
fistl
dec
sub
pop
jecxz
mov
daa
mov
push
push
inc
fsubrs
sbb
inc
fsts
scas
mov
xor
pusha
mov
add
adc
inc
add
or
in
and
xchg
pop
dec
mov
andb
divl
gs
test
and
jge
scas
jg
adc
add
dec
and
movb
addr16
lds
mov
pusha
insb
loope,pt
in
push
jmp
push
push
outsb
call
popf
cmc
mov
lock
das
sti
bound
cmp
jle
add
cli
enter
mov
add
das
jne
pop
icebp
nop
cmp
mov
push
test
and
call
sub
jl
in
add
fstl
add
inc
push
dec
xchg
pop
out
cli
inc
inc
dec
adc
sub
jmp
pop
scas
and
add
adc
das
in
int3
jae
add
ja
repnz
cmp
lret
scas
lea
add
ds
xor
pop
ret
pop
xchg
imul
inc
sub
sub
test
inc
add
lock
adc
mov
imul
add
lock
xchg
mov
pop
sub
push
pop
idiv
xorb
lods
add
stos
imul
and
subb
and
pop
inc
dec
inc
ret
adc
fwait
cmpsb
out
daa
cmpsl
loop
sar
add
aam
xor
add
dec
rclb
addb
adc
sub
push
ds
fildl
andb
pop
add
jge
outsl
arpl
cmp
je
out
xchg
loop
in
or
add
dec
clc
cmp
std
sbb
push
dec
in
dec
cs
xorb
add
pop
jns
add
std
push
or
rclb
pusha
pop
cltd
out
add
adc
movsb
mov
jno
adc
push
pop
pop
fcoms
call
je
imul
push
or
sti
ljmp
daa
lock
movsl
call
or
xchg
clc
pop
gs
add
loope
hlt
je
mov
push
adc
add
push
loopne
jl
add
jp
stos
pop
bound
mov
push
imul
or
negl
ret
sub
add
inc
in
xor
sbb
or
daa
data16
add
fs
testb
mov
and
and
dec
movsl
pop
cld
cmp
mov
orl
neg
xchg
repnz
scas
ret
clc
loopne
or
or
stc
loop
mov
adc
and
mov
add
in
movl
xlat
in
xor
mov
cmc
imul
movsb
push
dec
jne
outsb
and
add
push
or
mov
loop
jge
or
dec
add
mov
sbb
xchg
sbb
cmp
stc
ljmp
sbb
push
aad
scas
add
lret
xchg
mov
add
ss
jo
jmp
adc
fsubrs
push
dec
add
sub
les
outsb
leave
jae
add
mov
pslld
pop
call
jo
xor
lea
push
dec
lret
sub
leave
pop
push
hlt
pop
mov
sub
dec
inc
jo
in
decl
inc
dec
push
in
jbe
push
add
pop
or
jne
add
das
outsl
mov
out
mov
jns
add
pop
jne
add
sete
pop
xor
add
or
imul
mov
add
add
or
out
adc
jge
je
enter
add
pop
jle
mull
pop
mov
push
nop
imul
add
dec
jmp
in
pop
add
push
jne
jmp
mov
in
int3
js
add
cld
or
mov
mov
xchg
push
rcrl
icebp
and
int3
adc
enter
dec
jnp
pop
out
cmp
stos
test
sub
ja
add
pop
in
fcompl
test
sub
jge
mov
adc
imul
cld
sar
fwait
scas
js
cli
push
addr16
sbb
mov
jmp
jne
loop
jbe
xchg
add
pop
orb
fs
mov
or
or
sbb
pop
sbb
or
xchg
cmp
pop
jmp
mov
aam
xor
in
add
and
inc
pop
insb
sbb
add
push
stos
xor
lods
jmp
iret
mov
push
inc
call
xlat
and
add
adc
sti
add
cmc
leave
dec
sub
pop
rclb
stc
enter
imul
in
movl
adc
pop
push
add
or
icebp
add
rcll
and
xor
push
dec
js
push
and
jl
add
vrcpss
mov
sbb
sbb
sarb
je
push
repnz
mov
outsl
xor
xor
decb
lret
add
sbb
mov
and
or
fildl
sahf
add
xchg
je
inc
test
mov
cmp
test
mov
or
add
sbb
mov
sbb
pop
test
sarb
xlat
rorl
shr
daa
add
enter
add
add
or
icebp
and
sub
jnp
xchg
int3
hlt
daa
push
add
test
dec
push
inc
dec
enter
add
dec
sub
mov
add
loopne
test
shlb
or
push
sub
push
xchg
adc
xor
add
ljmp
xor
push
inc
push
mov
test
sub
loope
or
and
nop
xchg
loop
sbb
adc
pop
mov
ljmp
lods
sbb
addb
pushf
cmp
nopl
rcrl
mov
fnstcw
cli
je
cwtl
notb
jbe
in
sbb
or
push
lret
imul
arpl
shl
pop
sbb
cmp
add
ljmp
loope
stos
sti
out
xor
hlt
movd
jmp
rclb
xorl
push
sub
das
mov
adc
out
pop
repnz
push
das
or
push
pusha
add
pop
jne
pop
pop
sub
nop
pop
sbbb
andl
or
jg
xchg
stos
cmp
iret
scas
xchg
jl
into
test
mov
sbb
fisubs
jne
push
inc
push
pusha
loope
ret
push
push
sub
pop
mov
push
add
lea
add
adc
and
lret
mov
add
sub
xchg
or
ja
pop
stos
daa
js
cld
loopne
pop
sti
mov
jp
movsb
jle
push
call
cmp
cli
lea
cwtl
xor
mov
add
or
sbb
int3
lods
sahf
add
daa
lods
sbb
aad
scas
data16
test
pop
mov
in
enter
cmp
pop
nop
mov
xor
popa
push
gs
mov
mov
and
pop
adc
pop
ja
add
outsl
jae
pop
push
loop
std
ret
jne
dec
and
mov
cmp
dec
xor
mov
jb
test
sbb
add
loopne
jne
push
clc
add
xchg
mov
mov
push
sub
add
lock
lock
repz
xor
nop
push
call
ret
pop
sarb
sahf
cli
fldt
xchg
sti
add
xchg
arpl
add
mov
jmp
or
jle
mov
out
popa
hlt
fs
cmp
mov
and
js
insb
push
push
idivl
cmp
shll
cmp
inc
mov
cwtl
add
sbb
dec
mov
jne
das
cmpl
mov
cwtl
out
pop
xchg
sbb
dec
or
add
push
mov
enter
leave
cmp
shr
adc
pop
clc
cmp
or
add
add
cmc
je
jae
sub
call
ror
int3
sub
cltd
test
jae
add
movsl
stos
int3
mov
lcall
adc
and
adc
notb
jnp
add
imul
and
add
adcl
jmp
cli
lods
or
push
sbb
sub
pop
pop
jmp
sbb
push
xor
adc
mov
add
insb
pop
pop
jle
inc
in
ret
adc
push
jb
dec
xor
xor
and
das
sub
cmp
leave
pop
cmp
bound
adc
dec
daa
cmp
jae
add
adc
repz
ret
outsl
test
push
dec
cmpsl
fs
push
sub
fmuls
adc
adc
xor
flds
mov
movsb
es
jns
add
jge
js
add
pop
or
lret
iret
js
mov
push
orb
cli
fiaddl
jnp
call
in
add
push
loope
jne
notb
xor
sbb
jmp
add
dec
inc
ds
lea
push
dec
andb
pop
ljmp
or
jmp
cmp
push
popl
setg
outsl
das
and
add
dec
fistpl
sarb
lret
cmp
add
cmp
and
dec
fimull
rcr
stc
push
pop
add
cmp
fsubs
jbe
call
xor
push
or
mov
dec
jmp
in
cmp
jb
or
cltd
sbb
sub
mov
pop
incl
xor
dec
push
pop
lods
roll
sub
fiadds
jne
popf
data16
in
nop
sub
add
or
add
push
aas
add
pop
lcall
pop
xor
add
xor
or
and
inc
add
inc
cwtl
and
pop
add
push
add
cmp
iret
sub
lret
pop
adc
jmp
testb
and
loopne
fidivl
dec
push
call
cmp
dec
xchg
cmp
xchg
mov
repnz
push
mov
sub
loop
stc
add
push
xor
je
adc
lret
mov
add
and
add
cltd
or
into
and
inc
out
xchg
movntps
add
jmp
pushf
pop
adc
add
xorb
lock
cwtl
or
pop
movsb
push
sbb
cmp
push
sbb
push
scas
int
das
addb
hlt
sub
push
and
mov
inc
enter
clc
jae
mov
pop
inc
mov
dec
sbb
add
fildl
sub
jg
push
movsb
pop
sahf
mov
or
cmp
rolb
stos
sub
mov
aas
aas
fdivrl
xchg
leave
jb
inc
and
add
xchg
and
dec
push
enter
in
pop
add
inc
ret
cmp
ret
filds
cmc
popa
movsb
clc
clc
inc
add
jge
pop
iret
ds
mov
rorb
call
inc
xlat
stos
add
cmpsb
je
lock
dec
jne
addl
xchg
negb
lret
push
iret
out
inc
dec
push
stos
pop
xorb
test
ds
dec
mov
imul
dec
dec
sub
jb
dec
aad
out
add
inc
inc
dec
adc
pavgb
or
cmp
arpl
push
imul
dec
popf
loopne
add
mov
cld
lahf
movsl
hlt
xchg
or
add
aas
xor
fisttpll
lcall
out
add
stc
fsts
adc
or
adc
add
xchg
jnp
sub
xchg
lods
in
daa
jge
sarb
movsl
lret
je
or
or
jmp
test
call
push
lods
xchg
sbb
push
outsl
loope
mov
int3
mov
add
mov
mov
jl
mov
and
idivb
in
mov
cld
or
sub
jge
jne
add
pop
adc
jae
add
dec
fidivrs
mov
add
mov
jmp
add
cmp
lock
sbb
icebp
add
sub
dec
push
mov
int
or
mov
add
push
push
in
xchg
add
imul
cmc
mov
sbb
sub
cmpl
and
add
sbb
test
jne
pavgb
mov
add
push
push
cmpb
stos
pop
add
dec
scas
roll
test
cmp
mov
or
push
sub
mov
pop
adc
fstpt
adc
mov
jnp
add
or
orb
add
movsl
xchg
pusha
testl
lods
add
add
mov
fwait
dec
ret
sbb
mov
aas
push
jp
add
push
enter
fnsave
call
dec
add
pop
push
push
pop
sub
nop
push
mov
in
test
lcall
aaa
cmc
mov
pop
sub
adc
pusha
ja
add
and
test
pop
cwtl
or
xchg
push
stos
inc
and
add
or
sbb
daa
dec
shl
sub
push
and
or
xchg
add
add
mov
pop
cmp
dec
ficoml
xorb
sbb
sbb
xchg
fdivs
pop
add
sbb
add
and
out
scas
loopne
incl
popl
and
jl
add
jmp
loopne
inc
lods
mov
repnz
call
loop
cs
sbb
hlt
cmp
add
nop
popa
sbb
inc
xor
adc
add
jae
adc
dec
pusha
rorb
rclb
sbb
mov
js
add
sbb
imul
lsl
sub
adc
inc
test
or
imul
je
mov
in
or
jge
cli
add
mov
pop
popa
call
adc
lds
push
add
xchg
ds
adc
into
add
rorb
das
std
or
xchg
es
jge
mov
add
push
jg
push
movsl
add
pop
sbb
pop
add
xorl
and
mov
push
sbb
daa
jo
imul
jl
rorl
dec
add
inc
push
push
pop
mulb
dec
scas
into
imul
jno
push
mov
add
cmp
sbb
outsb
imul
inc
or
dec
add
inc
xlat
xchg
in
dec
pop
add
dec
jle
lds
add
push
push
jno
add
in
popf
mov
mov
mov
mov
mov
mov
and
push
adc
test
sbbb
mov
cmp
lfs
les
ret
pop
add
jp
pushl
out
mov
les
cmpsl
mov
sub
add
jb
jnp
mov
adc
pop
dec
mov
push
adc
xchg
add
mov
lods
mov
push
and
add
dec
inc
mov
inc
mov
mov
pusha
lea
popa
dec
xor
xor
mov
push
sub
mov
push
or
int3
mov
add
notl
add
sub
mov
cmp
bound
outsb
mov
push
aam
test
mov
mov
add
cli
or
test
gs
xor
cs
into
outsb
cld
xchg
or
xor
mov
mov
pop
adc
shlb
sbb
cmpsb
adc
push
jp
pushf
popa
lahf
data16
pusha
dec
cltd
add
sub
and
xchg
int
dec
stc
add
inc
mov
pop
shlb
pop
mov
or
test
xchg
dec
jg
neg
jae
push
sbb
cmp
pop
sub
pop
push
js
jns
enter
mov
jg
mov
xor
mov
add
add
cltd
shll
pushf
push
cmp
inc
xor
push
push
gs
add
cwtl
mov
inc
pop
call
lock
or
cmp
sub
cs
shll
jmp
add
sbb
cmp
orb
sub
xor
incb
xchg
jmp
dec
addl
pop
movsl
add
add
fildll
pop
ds
xor
cli
adc
sti
rorb
push
add
push
test
pop
xchg
out
add
xor
pop
mov
dec
inc
int
adc
loope
sub
adc
addl
xor
cmp
iret
and
scas
imulb
in
add
push
push
add
push
fistl
mov
push
xor
inc
loope
ljmp
push
add
in
add
loop
mov
nop
or
cmp
pop
dec
adc
jle
jnp
jnp
pop
jne
mov
xchg
call
pop
test
test
mov
addb
hlt
adc
xor
insb
sbb
add
sbb
pop
pop
cmc
fwait
mov
sbb
add
movsl
inc
pxor
mov
sub
clc
jp
jecxz
push
push
xor
jne
mov
mov
loop
add
inc
jmp
nop
and
pop
add
and
shrb
pop
ss
pop
push
icebp
sbb
sub
cmp
sbb
dec
stos
add
ljmp
mov
call
pop
mov
mov
hlt
mov
add
xchg
lret
mov
iret
in
rcll
and
cmp
add
loop
add
in
or
lahf
inc
jmp
and
movsl
fisubrl
cwtl
add
xor
pop
push
sbb
mov
pop
stos
aam
adc
call
sbb
cmpsb
cwtl
sbb
push
dec
lock
loopne
jg
jae
syscall
jg
push
outsb
push
addb
adc
xchg
rclb
dec
sbb
movsb
add
jbe
or
push
decb
push
and
sub
movsb
add
dec
mov
nop
adc
jo
add
and
mov
jp
jle,pt
sub
stos
mov
sbb
add
nop
adc
adc
add
pop
lret
cmp
dec
add
stos
stos
out
or
cmc
xor
ja
add
fs
pop
mov
add
cmp
push
add
lds
aam
cmp
pop
adcb
insl
add
es
icebp
enter
fsub
sub
popl
and
repnz
ret
mov
jecxz
cwtl
push
adc
sub
mov
jns
inc
push
jmp
in
iret
mov
scas
or
pop
sbb
add
cltd
rcrb
sbb
xor
push
inc
xchg
mov
mov
add
lcall
adc
add
push
pop
adc
movsl
add
rcrb
lods
orb
test
xor
push
pop
test
jp
dec
mov
mov
repnz
dec
xor
and
lods
inc
lock
add
out
lea
add
mov
mov
mov
add
inc
call
aam
jg
cmp
add
add
jbe
xchg
mov
out
addb
mov
js
jecxz
loopne
in
lcall
arpl
add
xor
ds
fiadds
shlb
mov
dec
movsb
pop
adc
xor
dec
cs
pop
add
popf
add
pop
inc
filds
mov
adc
dec
fcomp
jae
mov
in
orl
icebp
ljmp
call
dec
mov
call
dec
cmp
cmp
adc
and
add
inc
dec
mov
fistps
add
loopne
icebp
movsl
fcomps
outsl
inc
in
add
ficompl
pop
sub
ljmp
bound
sbb
shl
xchg
dec
lock
cld
adc
inc
push
add
mov
lods
adcb
cmp
cltd
pop
mov
jo
ret
adc
jae
add
adc
mov
enter
add
loop
xchg
add
and
adc
add
fcmovnbe
movsb
adcb
push
inc
push
jno
push
add
mov
sub
out
add
jo
aam
and
negl
adc
cmp
inc
jne
data16
inc
mov
mov
sbb
lock
js
add
xor
mov
aas
pop
call
fimull
pop
push
add
mov
adc
sub
sar
in
and
jae
sbb
adc
mov
adc
inc
adc
rclb
loope
ljmp
sbb
gs
shlb
movsb
mov
add
ret
pop
mov
add
adc
or
xlat
out
sub
add
xchg
pop
cwtl
fsts
int3
js
add
stc
mov
add
pop
cli
mov
add
icebp
lret
sbb
insl
xchg
add
xchg
pop
jae
inc
dec
mov
mov
scas
dec
add
push
das
add
in
fwait
pop
xor
jne
sub
nop
stc
inc
incb
and
sbb
xchg
sub
inc
popf
add
sub
mov
test
add
push
push
push
test
or
leave
pop
pop
xor
test
int
sbbb
xchg
fcmovnb
push
aas
es
movsl
add
fldl
adc
mov
leave
adc
ret
inc
xchg
mov
ds
jo
stos
ret
int
movsb
rclb
and
leavew
sub
pop
xor
pusha
jecxz
pop
jg
pop
cmp
push
sbb
add
hlt
adc
dec
jmp
push
add
arpl
mov
scas
cmp
xchg
iret
add
and
imul
fimuls
stos
dec
loop
push
add
insb
pop
movsl
inc
jmp
cltd
add
mov
in
jg
push
cld
orb
mov
dec
ret
add
sbb
jge
fldcw
and
es
fistps
mov
add
ret
and
push
fadds
add
push
mov
jno
add
push
xchg
mov
movsl
add
adc
fnstenv
mov
pop
call
jnp
sub
enter
mov
cmp
dec
add
imul
pop
rclb
push
xor
call
stos
out
and
add
shr
mov
push
add
movl
add
lahf
push
mov
add
cmp
jne
aam
add
mov
test
ret
push
test
dec
pop
std
iret
test
cwtl
adc
repnz
shrb
rolb
ljmp
mov
mov
sub
cmp
jecxz
in
jne
add
shll
add
sbb
pop
bound
mov
imul
stc
mov
mov
repz
dec
out
pop
xor
push
int3
add
cmpl
js
push
xchg
fiaddl
and
adc
mov
fcomps
popf
mov
imul
leave
inc
xchg
mov
adc
sub
or
xchg
add
adc
mov
add
pop
mov
add
in
add
adc
sbb
sbb
sbb
mov
add
xor
push
push
or
push
and
mov
lds
dec
test
fdivp
jecxz
xchg
pop
jno
sub
in
ljmp
and
popa
xchg
pop
jge
in
mov
and
inc
dec
gs
push
fwait
stos
enter
add
adc
data16
roll
icebp
pop
test
stos
xor
mov
es
pop
jmp
jo
in
ds
jae
add
mov
inc
rcrl
movsl
mov
dec
push
dec
add
jbe
jl
push
jo
adc
jle
jg
inc
cmpsl
rolb
or
and
enter
aam
ret
insb
rolb
jmp
lock
and
mov
fistl
xchg
and
push
test
mov
sub
jbe
lret
rorb
pop
pop
out
sub
xor
fs
nop
repnz
adc
cmpb
or
add
test
lea
push
push
xchg
dec
in
mov
add
push
icebp
lahf
cmp
dec
js
push
les
lret
stc
sbb
repnz
aam
loopne
inc
shrb
shr
mov
dec
push
addb
stos
pushf
inc
add
mov
cmp
push
jne
xor
add
ret
push
nop
xor
adc
test
in
xchg
add
dec
push
cmpsb
pop
mov
loopne
mov
mov
lods
fmul
sbb
add
lcall
aad
mov
add
mov
sbb
adc
loopne
dec
mov
sbb
fstpl
sbbl
sbb
cmpsl
xchg
push
adc
pop
xchg
add
add
loopne
or
mov
dec
inc
aaa
push
adc
push
xchg
bound
jle
xchg
mov
add
data16
add
jae
ds
and
mov
clc
cli
jp
pop
add
cs
sub
add
lahf
jle
scas
cltd
xchg
add
mov
add
jmp
mov
or
cmc
cmp
jbe
mov
xor
add
orl
mov
xchg
sub
aad
hlt
mov
movsl
sub
repnz
add
or
add
jne
adc
jg
ret
fisubs
adc
cmp
add
je
xchg
mov
enter
sub
xor
fcomps
fidivrs
out
pop
add
loop
mov
mov
subl
mov
cmpl
iret
jo
loopne
xor
xchg
rolb
cld
movsl
out
int3
pop
addb
dec
je
repnz
add
lret
mov
mov
mov
add
fiadds
mov
pusha
push
pop
out
pop
mov
and
sub
add
je
jne
in
and
and
mov
xor
push
adc
or
add
mov
int
add
std
mov
loopne
inc
adc
out
mov
mov
cmp
test
add
sbb
and
das
aad
lock
mov
sub
add
test
push
add
jmp
in
ds
pop
fnstsw
inc
mov
aam
pop
or
popa
mov
push
push
faddl
fidivrs
pop
dec
sbb
pop
jmp
add
xor
test
pop
xchg
lds
fnstsw
loopne
xchg
push
clc
jae
leave
add
lock
add
aam
shll
add
incb
inc
pop
push
cmp
jne
adc
add
adc
inc
std
outsb
int
shrl
dec
add
shlb
fiadds
out
out
add
daa
inc
cmp
sbb
xchg
jnp
inc
push
fldenv
js
into
jne
adc
rolb
mov
out
cmpb
sbb
sbb
mov
push
jl
pop
xor
aaa
sti
shlb
add
mov
cmp
sub
add
mov
push
cmp
jne
sub
gs
mov
dec
pop
add
mov
add
mov
xor
pop
cmp
cmpsb
add
adc
test
and
jae
jbe
add
or
mov
ja
jmp
mov
mov
and
mov
aas
pop
sbb
push
add
jne
add
or
or
mov
push
cli
gs
sar
or
lds
push
cmp
loopne
add
jmp
fisubs
insl
in
sub
xlat
imul
jo
ds
add
cld
push
sti
push
nop
add
leave
loope
add
es
test
sub
sbb
add
orb
mov
xchg
push
mov
movsb
cs
out
call
or
sbb
adc
arpl
pushf
and
xchg
les
dec
dec
aaa
or
nop
add
push
xchg
cmp
lahf
shrl
in
jmp
aaa
push
fnstenv
test
jae
dec
add
lds
psubq
mov
xchg
add
sub
or
mov
sti
loopne
pop
mov
stos
lret
in
negl
add
push
push
in
lock
sub
repnz
or
add
loop
mov
adc
xor
mov
push
jg
bound
stos
pop
jge
add
xchg
sub
push
sbb
xchg
rolb
add
fs
cmpsl
int
call
inc
add
pusha
jmp
gs
imul
pusha
or
pop
sub
repnz
jge
cmp
jne
mov
cmpsl
add
pop
push
adc
and
add
jg
hlt
pop
add
scas
push
jge
scas
dec
popf
loopne
mov
push
divb
vmread
fsubs
ret
lcall
cmc
xchg
mov
mov
jge
mov
mov
add
fdivp
stos
lcall
add
das
xchg
loope
call
add
pop
rolb
and
in
mov
sub
or
add
jg
dec
add
outsb
icebp
cmp
jnp
clc
andb
ja
add
sub
fst
add
inc
push
sahf
pop
mov
cmc
add
mov
add
sbb
fstps
dec
add
test
xchg
inc
movsb
push
add
pop
repz
scas
add
dec
xlat
negb
add
daa
loope
inc
add
mov
les
add
imulb
loope
dec
hlt
int3
add
mov
mov
pop
pusha
pop
xor
pop
divl
mov
sub
sbb
add
add
clc
movsb
cmp
add
xor
or
sbb
lock
add
jne
insl
pop
inc
adc
nopl
add
int3
add
loopne
test
mov
add
sar
mov
cwtl
clc
into
add
jge
mov
sub
filds
mov
aad
stos
add
stos
scas
push
incb
add
rolb
cmp
jl
adc
sub
add
xlat
pop
and
add
jle
mov
sub
in
subb
xchg
mov
dec
add
or
pop
add
jb
std
adc
add
jp
adc
jnp
pop
mov
lds
xor
ficomps
out
sub
add
loopne
sbb
push
add
adc
mov
lret
cmpb
dec
cli
aam
icebp
xchg
cmp
add
xor
jmp
sar
xchg
add
push
mov
sub
inc
cmp
pusha
sbbl
shlb
add
sub
or
in
cmp
into
dec
xchg
in
add
jo
test
sub
pop
add
or
cmp
or
add
adcb
enter
sbb
push
or
clc
out
lret
sbb
popa
add
fmul
je
or
adc
add
insl
mov
scas
add
jns
lret
mov
pop
in
mov
inc
mov
or
add
dec
mov
ret
inc
call
xor
into
inc
cs
add
mov
push
xor
jnp
mov
inc
mov
pop
adc
adc
imul
sub
mov
popf
subb
jmp
in
or
add
dec
mov
add
or
sub
aas
loop
xor
in
push
stc
mov
jo
hlt
stos
fwait
popf
cmp
sbb
adc
mov
push
lock
cmp
es
sti
mov
js
xor
mov
aam
jae
repz
xor
push
inc
or
shlb
and
adc
dec
shlb
add
popf
dec
mov
inc
rorb
je
aam
cmp
adc
add
xor
xchg
add
cli
in
jecxz
pushf
or
dec
and
xchg
sbb
sub
mov
pop
xchg
call
and
or
popl
mov
xchg
lret
js
sarb
cmp
adc
cli
call
bound
stos
jp
scas
loope
adc
dec
jo
cmp
push
add
dec
ficoms
mov
xor
mov
pop
mov
and
mov
lea
adc
inc
cli
arpl
or
fs
push
add
and
adc
loopne
sbb
adc
jl
push
mov
jo
lds
dec
loop
or
nop
and
push
jns
or
shll
test
dec
sub
jp
aam
mov
and
out
jge
add
sbb
incl
jno
jmp
push
aas
mov
cwtl
gs
mov
scas
add
xchg
jno
adc
add
xchg
push
cmpsb
jg
mov
push
xchg
fistps
dec
flds
mov
scas
lock
stos
movsl
push
jmp
lds
incl
inc
inc
cmp
enter
aas
sub
mov
mov
jne
pop
dec
lret
scas
push
rcll
adc
out
adcb
push
add
jne
divb
add
jl
mov
dec
add
adc
dec
mov
push
gs
sub
lret
sbb
enter
call
xchg
lock
add
sub
add
hlt
xor
adc
repz
dec
lods
pop
imul
gs
stos
arpl
push
faddl
scas
call
cmpsl
jg
xchg
fiadds
iret
and
and
mov
jmp
loop
les
stos
sbb
adc
stos
jl
add
push
lods
ja
mov
dec
pop
xchg
into
cmp
or
add
push
divb
out
push
pop
mov
incb
add
add
xchg
nop
dec
jge
stos
mov
inc
jo
jae
mov
jg
xchg
mov
inc
add
mov
fmul
mov
or
add
push
popa
jae
testb
repnz
pop
add
adc
add
inc
sbb
adc
or
push
mov
push
dec
inc
add
dec
mov
push
add
sti
and
out
add
add
jmp
add
pop
nop
pop
call
adc
jg
add
sbb
adc
mov
and
ror
push
add
or
aas
xorb
icebp
test
or
cwtl
pop
dec
push
add
inc
outsl
push
pusha
inc
nop
rolb
jmp
adc
repz
mov
mov
fcomps
stc
ja
ja
repnz
addr16
adc
and
pop
pop
add
in
pop
add
push
loopne
out
addb
mov
inc
sbb
or
add
and
in
add
inc
movl
push
xor
add
mov
add
sarl
add
bound
xor
jnp
mov
add
dec
push
repnz
scas
sub
mov
sti
sub
jmp
add
xchg
dec
addb
jl
cmp
add
mov
cwtl
in
lret
shrl
es
cmp
add
jno
add
add
inc
xchg
cmp
xor
dec
adc
outsl
enter
add
xchg
xchg
daa
mov
gs
add
sti
cmp
or
xchg
movsl
test
jne
cmc
sub
push
jns
mov
cld
jmp
loop
popa
inc
test
jecxz
pop
imul
pop
cmp
lods
add
icebp
pop
add
cwtl
add
mov
mov
lock
cmp
pushl
cmpsl
and
dec
cmp
push
leave
or
inc
movsl
enter
xor
roll
push
subb
lcall
add
test
mov
pop
pop
mov
in
jns
push
mov
je
push
push
data16
int3
bound
aad
cmp
cld
rolb
add
sub
imul
rclb
mov
or
jns
cli
sbb
pop
mov
cmp
push
ror
fmuls
negl
sub
add
in
stc
pop
out
push
add
xor
orl
inc
add
in
sub
xor
fs
pop
and
addr16
xor
insb
test
ja
pop
add
mov
nop
roll
lret
rolb
sbbb
lock
add
sub
inc
addr16
movsl
add
pop
lcall
loop
cmp
xchg
push
sbb
mov
adc
loope
or
outsb
add
add
cmp
les
outsl
bound
cmp
or
out
mov
cmp
lret
dec
icebp
mov
dec
add
or
cmp
inc
ljmp
cmp
adc
mov
dec
aam
jns
rorl
movsb
enter
mov
in
orb
add
jecxz
mov
add
cs
mov
dec
xchg
pop
push
in
les
pop
outsl
add
mov
dec
nop
dec
testl
pop
adc
add
or
lock
imul
push
push
mov
sbb
cmp
add
cs
add
into
bound
sbb
mov
and
fadds
hlt
inc
adc
enter
orl
cmp
xor
lods
les
mov
cmpsb
jns
inc
daa
das
add
out
int
xchg
sub
cmp
push
jno
stos
adc
sbb
push
or
es
mov
lock
or
arpl
mov
add
mov
lea
aas
mov
cmp
cs
add
not
imul
push
jle
ret
push
add
mov
push
adc
test
mov
adc
xlat
mov
add
pop
repz
add
push
fistpl
mov
mov
fwait
and
inc
pop
loop
xor
std
clc
inc
nop
cmp
adc
dec
add
es
add
pop
dec
sbb
mov
add
mov
add
inc
pop
movl
dec
mov
nop
add
mov
xchg
sbb
pop
sub
pop
push
subb
movsb
add
hlt
add
jb
dec
or
sbb
in
mov
add
mov
cmpsb
xchg
pop
dec
cmp
or
push
push
cmp
adc
test
add
ljmp
jb
in
loop
idivl
xchg
push
mov
sub
inc
fbld
or
push
insl
mov
cmpl
add
filds
jne
movsb
iret
cld
inc
mov
xchg
lods
add
xor
test
push
popl
or
fisubrs
mov
cmp
cwtl
popa
sbb
ret
xchg
add
lock
mov
in
adc
pop
cld
ljmp
xchg
ds
stc
loop
add
pop
sub
in
and
gs
push
rcrl
int3
std
add
fst
imul
adc
xor
add
jne
int3
add
sub
pop
insb
inc
xor
stos
data16
and
add
mov
pushf
inc
testl
push
inc
mov
jno
add
pop
bound
sahf
xchg
lret
add
jmp
cltd
add
imul
adc
test
or
add
cmp
push
out
mov
shrb
jmp
in
push
stos
in
add
pop
aam
mov
cmpsl
cmp
xchg
push
cli
xchg
cmpsl
je
mov
add
cmp
inc
add
xor
jb
pusha
test
xchg
popa
adc
fsubp
int3
add
add
push
mov
pop
stos
pop
dec
mov
sbb
dec
jl
rcr
in
sbb
inc
pop
add
jg
hlt
adc
add
mov
in
mov
aad
fiadds
xchg
mov
xchg
fiadds
push
jmp
bound
add
testl
adc
ljmp
daa
inc
cmp
add
add
cs
dec
call
push
dec
jle
andb
sar
add
ljmp
sub
outsl
sub
js
arpl
je
bound
push
pop
sbb
pop
enter
ret
sbb
mov
ljmp
js
lds
jno
xor
mov
inc
loopne
cmp
push
sbb
push
or
xchg
xchg
das
add
repz
add
inc
adc
mov
pop
fistpll
daa
inc
hlt
and
sbb
add
xor
je
add
push
je
imul
pusha
cmpb
mov
mov
outsl
daa
mov
clc
pop
add
push
or
add
cli
ja
addr16
shll
lods
or
adc
add
push
add
cmpsb
sbb
lahf
imul
movsb
jb
push
pushf
xor
mov
xor
js
add
in
pop
or
aaa
lahf
and
dec
mov
xchg
pop
xchg
or
jmp
loopne
movsb
inc
inc
push
add
insl
popa
jo
mov
add
decb
leave
cmp
xor
inc
mov
sbb
in
add
sbb
clc
add
test
aam
sbb
dec
jl
or
push
adc
call
push
aam
xor
aaa
cwtl
pop
shlb
add
insb
cmp
sub
inc
aad
mov
push
outsl
imul
mov
gs
daa
adc
rcrb
mov
jb,pn
into
mov
add
xor
movsb
call
push
or
xor
add
mov
shrl
sub
xchg
call
loope
dec
sub
xchg
push
mov
add
mov
aad
sub
xchg
popl
cmp
sahf
cmp
inc
xchg
add
pop
repnz
jns
cmpsl
inc
add
lock
in
loop
int3
jno
add
jmp
in
dec
cmp
sbb
add
inc
arpl
lcall
sbb
imul
inc
lds
xor
add
out
fdivrl
mov
cs
or
add
cmpsl
add
mov
clc
call
or
jge
fs
das
cmp
sti
pop
add
fstps
cwtl
test
adc
mov
or
dec
add
sub
lret
imul
add
inc
mov
sub
pop
and
out
jbe
xchg
loopne
add
in
incl
jge
dec
out
clc
push
js
cmp
pop
cs
push
in
or
push
dec
jl
mov
sete
xor
and
push
icebp
das
add
pop
roll
mov
out
adc
adc
div
aas
mov
mov
add
add
cs
dec
fadds
std
fsts
ja
das
pop
ds
add
mov
aam
pop
andb
dec
adc
mov
and
lds
call
ja
add
cltd
mov
subb
add
sti
dec
jne
aam
popf
add
in
xor
cmp
lds
add
cmp
cmc
xor
cmpl
xor
clc
dec
inc
popf
pop
lcall
sbb
jb
and
or
rorl
mov
or
and
cltd
push
nop
add
inc
jnp
add
adc
dec
cmpsb
lret
add
notl
add
fdivrp
adc
jmp
inc
sbb
sub
mov
cmp
rorb
mov
xor
add
push
test
aas
mov
jne
loopne
add
inc
stos
adc
stc
repz
push
jb
scas
mov
sub
inc
pop
ret
push
add
pop
sbb
dec
pop
pop
rcll
je
nop
push
out
mov
mov
mov
cmpsl
loop
cmp
jge
call
or
or
bound
shll
inc
lock
pop
and
push
and
adc
inc
jne
xor
add
inc
push
dec
outsb
push
roll
outsl
inc
nop
xor
add
or
inc
clc
push
imul
addr16
sub
push
loopne
fldl
xchg
pop
push
test
adc
or
shlb
adc
sbb
add
out
sahf
aam
and
testl
scas
out
sbb
bound
mov
dec
push
call
mov
adc
add
xor
and
add
inc
inc
pushf
jp
fidivl
and
push
xor
hlt
jp
mov
lock
add
fdivs
inc
dec
cmp
sbb
push
fstps
push
inc
add
outsb
mov
add
pop
out
pop
lds
adc
fbld
js
in
insl
or
jae
lds
scas
loop
pop
mov
add
push
adc
sub
test
xchg
add
dec
adc
add
test
mov
xor
add
ffreep
jp
or
add
pop
adc
cli
and
cwtl
mull
jno
pop
dec
xchg
add
aam
lmsw
dec
add
test
bound
inc
out
mov
lock
loopne
pop
inc
push
sub
and
xor
add
or
movsb
adc
sub
js
or
adc
punpckhbw
xor
out
mov
dec
xor
adc
add
js
rolb
xor
in
icebp
jmp
fldt
jno
sbbb
dec
adc
ja
arpl
jb
sub
fadd
pop
add
test
jp
add
push
lcall
sarb
insb
icebp
arpl
jl
push
add
sub
xchg
add
pop
popa
adc
lret
stos
push
pop
clc
scas
pop
inc
xchg
mov
sub
ret
xor
and
addb
cmp
verw
repz
fldl
sub
call
test
adc
movsl
mov
mov
add
aam
or
pop
cs
aad
imul
inc
mov
xchg
inc
add
add
enter
add
jae
es
sub
roll
rcll
and
gs
add
test
mov
cwtl
repnz
push
pop
add
scas
xchg
nop
push
pop
xor
dec
lds
add
add
jecxz
ljmp
inc
cmp
sub
xchg
or
popf
test
sbb
push
xlat
add
mov
outsb
sub
add
or
push
add
and
sub
and
mov
cmp
xor
insb
add
dec
loopne
fs
inc
movsb
ljmp
jne
test
in
or
je
andb
test
push
cmp
push
and
push
dec
add
lret
adc
sti
repnz
push
pop
cs
push
test
sub
pop
cmp
push
dec
dec
jnp
push
sub
mov
push
mov
cmp
pop
adc
nop
add
cltd
dec
adc
pop
gs
cld
cmp
adc
or
inc
adc
jecxz
test
mov
clc
and
lcall
rcrb
pop
les
addl
call
pop
xor
insl
and
dec
fucomp
pop
or
push
in
pusha
rorl
sbbl
test
xchg
adc
cmp
and
xchg
aad
fs
add
lahf
cmp
int3
pop
lock
inc
add
jno
adc
cmp
imul
pop
pop
or
addl
sub
add
add
cltd
push
sarb
add
adc
push
fwait
out
rorb
or
xchg
inc
subb
hlt
add
or
add
mov
mov
test
add
sub
or
pusha
daa
mov
mov
add
subl
dec
in
sarl
add
add
mov
les
psubusw
mov
loopne
ja
movsb
xor
mov
pushf
movsl
iret
cmp
dec
bound
fsubrs
and
pop
push
ds
mov
repnz
or
inc
jle
jno
add
lods
imul
xchg
insb
add
push
mov
add
cmpsb
inc
nop
pop
push
test
add
add
sub
add
mov
push
pop
jo
popa
fnstsw
mov
push
dec
mov
mov
xor
insl
pushf
addb
cmc
in
mov
in
sbb
bound
ss
sbb
sbb
lcall
cmpb
pushf
xlat
add
out
adc
push
fadds
cmpsb
subb
push
outsl
dec
aad
loopne
push
lea
jo
pop
out
nop
dec
or
pop
sbb
jmp
push
movsl
sbb
push
push
push
in
loopne
adc
in
and
lret
pusha
stos
add
out
stos
sahf
fdivs
xchg
add
or
cli
ja
pop
adc
mov
imul
les
add
inc
movsb
xchg
jp
dec
jne
add
adc
add
popa
mov
out
add
adc
mov
xor
in
lds
gs
repnz
lods
add
aam
or
imul
popf
add
or
xchg
and
push
add
test
mov
shll
push
and
loopne
testl
dec
pop
cmp
inc
adc
mov
xchg
cmp
or
lock
add
add
movsl
sub
jle
add
inc
rorl
aam
mov
and
shl
in
sub
jnp
or
nop
add
imul
mov
inc
daa
inc
inc
jo
sbb
dec
dec
add
dec
push
jle
add
push
push
push
push
pop
add
ret
dec
rolb
testb
rcl
loopne
imul
xlat
decl
cmp
add
repz
das
mov
push
dec
out
lret
add
aam
inc
adc
mov
out
add
pop
std
test
pop
add
xor
sub
call
sbb
out
push
loopne
cmpsb
add
sbb
adc
je
push
sbbb
pusha
sbb
fimull
dec
jo
fcompl
mov
push
jmp
pop
shl
and
and
data16
pop
push
xor
ret
pusha
add
pop
pop
jne
loop
aam
loopne
push
jnp
subb
add
pop
pop
pop
jecxz
pop
jne
and
jge
pusha
jl
call
outsb
or
ret
inc
subl
cltd
mov
sti
pop
pop
ss
notl
push
add
pop
clc
inc
jge
sbb
rorl
inc
adc
push
add
mov
mov
sub
add
xchg
shrb
mov
rorl
mov
cld
out
inc
jmp
mov
adc
mov
inc
push
cmp
mov
or
imul
fwait
ret
hlt
xchg
cli
push
add
and
sbb
push
repnz
add
and
outsl
andl
jl
sbb
cmp
out
incl
jmp
pop
inc
in
dec
leave
add
ret
add
outsl
xchg
add
jmp
stos
add
les
shl
dec
aaa
add
inc
addb
cld
dec
sbb
ret
dec
in
std
jne
fcoms
pop
jle
add
aam
push
xchg
jmp
xor
add
ja
add
sarb
movsl
adc
ds
sbb
js
aas
loop
add
cmc
push
lahf
push
xchg
inc
clc
ret
mov
in
add
pop
pop
mov
xorb
pop
inc
add
adc
jno
out
jp
inc
and
into
or
mov
sbb
add
movsb
xor
sub
mov
andps
or
test
or
je
movsl
add
dec
dec
lods
popa
mov
into
and
add
or
jmp
inc
jbe
xor
pop
sub
inc
add
in
std
scas
mov
lahf
add
or
mov
sbb
mov
add
mov
adc
scas
adc
add
hlt
add
cwtl
sub
or
pusha
cltd
or
outsb
pushf
ljmp
add
cmp
rolb
sbb
push
mov
jbe
mov
jns
pop
add
sbb
ja
jg
ret
mulb
push
in
pop
mov
rdtsc
frstor
dec
jno
xor
or
stos
fildl
or
mov
ds
xlat
jo
fucomip
mov
adc
test
mov
subl
add
add
pop
add
jle
jne
aam
lcall
scas
in
out
adc
out
hlt
dec
push
add
jmp
xor
or
ja
adc
mov
dec
xchg
in
popa
pop
xor
jmp
mov
xor
movsl
sbb
or
gs
add
jbe
out
in
mov
pop
sbb
ljmp
lcall
cmp
mov
stc
add
pop
data16
pusha
add
mov
pop
add
lret
sbb
mov
inc
sarb
test
adc
sete
pop
pushf
loopne
loopne
popf
add
push
and
sbb
loopne
mov
jg
nop
xchg
cmc
sbb
cmp
inc
imul
je
xor
cmp
dec
add
enter
sub
arpl
fiaddl
cmp
push
lods
into
xor
pop
adc
sub
enter
dec
pop
xor
sbb
mov
add
xor
fisttpl
add
ret
add
imul
add
movsb
sub
aaa
adc
xor
xchg
testb
adc
repnz
sahf
cli
popa
jl
add
test
xchg
add
pop
repz
jbe
dec
add
daa
or
mov
jo
insb
int
inc
add
sub
jbe
push
sarb
sub
movsl
iret
pop
dec
inc
roll
mov
pshufw
mov
ret
push
xchg
xor
push
cmp
and
add
cmp
push
or
pusha
lret
push
das
rsqrtps
enter
inc
pop
pusha
jle
mov
inc
add
es
mov
nop
dec
outsl
sub
adc
out
sbb
sbbb
add
and
add
cmp
or
movsb
add
decw
rol
inc
add
push
push
xchg
icebp
js
add
mov
add
jl
mov
test
mov
jb
add
xor
xchg
jnp
imul
inc
xchg
cmpsb
sbbl
leave
shlb
dec
push
jg
idivb
xor
push
adc
icebp
pop
inc
aas
cmp
pop
inc
repnz
stos
pop
sub
or
je
push
into
rorl
mov
xor
leave
sub
jecxz
int
inc
mov
xchg
jo
add
sub
add
lods
clc
je
and
inc
add
cmpb
aas
or
push
leave
int
loope
movsl
mov
adc
pop
jge
inc
mov
mov
dec
add
pop
addb
pop
out
push
sub
adc
push
add
aam
and
pop
jo
in
sar
add
es
sub
repz
mov
pop
add
lret
add
add
addb
stc
push
add
inc
dec
sub
pop
sbb
add
sub
inc
add
cmpb
and
lds
shll
xchg
mov
or
jbe
cltd
cmp
add
in
mov
sub
xor
int
dec
test
cmp
add
test
out
and
mov
dec
or
leave
js
call
and
ret
adc
ljmp
notl
test
jmp
cltd
add
xchg
aaa
inc
or
cmp
add
and
mov
add
jb
push
fildl
jecxz
cltd
dec
xchg
push
outsb
add
xchg
or
push
ja
and
shll
mov
add
xor
sbb
mov
pop
cmp
xchg
nop
or
lock
stos
in
rcrl
lods
mov
add
into
adc
add
mov
pop
movsl
mov
pushf
imul
sti
pop
data16
xor
jne
push
mov
popa
add
cmpsl
inc
pop
aad
or
sub
iret
add
mov
call
cs
cwtl
test
dec
sub
js
add
push
les
push
add
add
and
push
aam
pop
mov
push
mov
push
inc
ret
dec
and
mov
pusha
cmpsl
aam
push
and
add
cwtl
stos
fcoml
inc
push
jae
lds
in
mov
jg
mov
scas
or
sub
daa
mov
aad
mov
dec
insb
mov
flds
and
or
pop
repnz
add
pop
mov
xchg
lds
rcrb
je
cmpsb
or
mov
inc
cs
stos
sbb
cmp
pop
movsl
neg
push
in
sbb
test
sbb
popf
dec
stc
mov
inc
pop
in
sarb
pop
adc
sbb
add
xchg
and
popa
decb
inc
and
inc
shrb
sbb
test
bound
mov
add
push
pop
or
jge
add
into
mov
and
adc
mov
jmp
pop
pop
inc
pop
pop
add
repz
ss
pop
out
xchg
add
clc
outsb
pop
pusha
add
fnstsw
xor
in
add
sub
jge
cli
aad
jo
add
pop
aas
jae
mov
pop
aaa
mov
add
jbe
jb
mov
add
sub
add
pop
inc
mov
pop
push
add
fsts
pushf
or
jnp
or
sub
sub
ja
mov
jbe
mov
lcall
push
cwtl
and
outsl
jo
add
popf
jns
lret
jnp
cmpsl
add
mov
add
test
or
adc
xchg
lea
cs
jae
add
arpl
addl
jecxz
int3
lret
cmp
mov
xchg
in
sub
clc
add
push
and
std
roll
sub
push
in
rolb
inc
test
je
and
add
sub
and
jle
add
orb
pop
aas
add
sbb
add
cmpl
enter
cmp
mov
pop
test
in
insb
mov
mov
xchg
aad
sbb
sub
xchg
add
sbb
adc
add
cmp
fdivs
xchg
add
cmp
mov
xchg
add
pop
mov
dec
add
add
fnstsw
insl
add
push
mov
add
or
cmp
add
add
sub
or
and
loop
mov
add
shll
pop
bound
dec
imul
push
scas
sub
pop
add
jmp
adc
ret
jecxz
rorb
adc
add
fisubs
clc
jle
movsb
add
mov
lock
inc
or
je
add
dec
in
xchg
jp
add
es
aas
inc
pop
jne
add
xchg
xchg
adc
pop
icebp
cmp
or
je
mov
sub
mov
dec
adc
push
adc
jmp
cmovae
xor
push
in
add
xlat
orl
add
pop
mov
jmp
rorb
movsl
cmp
test
adc
loop
outsl
mov
shlb
das
push
sbb
loopne
test
or
xor
add
loopne
je
add
mov
das
jg
cmc
sub
int3
cmp
movl
scas
pop
xchg
add
data16
inc
dec
into
add
scas
or
jle
adc
shl
or
mov
sub
sub
jo
pop
loop
movsb
rol
xchg
jne
add
xchg
mov
adc
pusha
fisttpl
sbb
movl
ret
xor
or
mov
jns
hlt
add
add
mov
jbe
or
push
add
add
xor
clc
sbb
pop
mov
xchg
jmp
sub
addb
push
push
mov
sbb
out
cmp
adc
add
mov
cmp
sub
jb
xor
in
movnti
call
sarb
sbb
mov
xchg
inc
inc
rcl
movsl
add
sub
and
movsb
push
hlt
popf
and
int
add
sar
aaa
add
jecxz
or
xor
test
mov
sbb
ss
add
gs
lcall
push
inc
mov
pusha
push
dec
sarb
add
xor
icebp
mov
add
push
sbb
dec
jb
pop
adc
xor
pushf
add
mov
jno
ja
add
stos
sub
inc
push
lock
add
clc
adc
and
pop
shrl
iret
imul
xchg
test
or
cmpb
inc
adc
jae
lock
mov
inc
add
jnp
sub
cmp
aam
dec
add
push
mov
nop
jmp
lea
lock
or
xchg
add
pop
push
cmpsl
clc
into
pop
cmc
xor
rcrb
pop
movsl
scas
adc
mov
inc
push
cli
add
movsb
inc
lock
xor
dec
clc
push
push
cmpb
cmp
and
mov
push
pop
sbb
and
gs
push
or
cmpsl
add
xchg
jne
sub
addb
fisttps
out
mov
pop
jge
and
adc
ja
jle
es
mov
or
inc
cmp
add
push
movsb
push
mov
jmp
int
jg
add
mov
sub
adc
or
inc
movsl
sub
add
loopne
xchg
or
and
sbb
add
push
add
cmc
adc
xchg
and
pushf
repnz
hlt
sub
dec
jbe
nop
bound
add
dec
iret
loope
std
push
or
pusha
call
pushf
test
aam
adc
in
dec
fs
les
add
sub
mov
adc
outsb
ret
mov
ljmp
aaa
jb
add
repnz
or
add
cmpsb
push
dec
xor
call
jnp
add
cltd
dec
xchg
add
xor
in
ret
imul
cli
push
pushf
or
adc
dec
push
and
dec
jmp
pop
add
sub
lcall
xchg
mov
ds
dec
cmp
add
sbb
hlt
pop
dec
mov
and
or
xchg
add
arpl
inc
pop
das
jo
rcrb
dec
xor
or
adc
cli
cmp
adc
call
cmp
mov
add
xor
add
or
add
movsl
add
dec
outsl
add
lods
aam
std
xor
xchg
add
jmp
negb
xchg
es
mov
dec
push
jno
or
adc
mov
outsb
push
jns
mov
mov
cltd
sbb
hlt
in
xor
cmp
pop
adcb
fcmovb
scas
icebp
sbb
pop
sub
inc
aaa
shl
aas
loope
movl
mov
scas
in
sub
ds
add
fsubl
mov
movsb
mov
fs
and
add
mov
push
outsb
sub
or
pop
mov
adc
push
push
insl
hlt
inc
inc
xchg
loopne
push
adc
pop
imul
testl
ss
loope
sub
mov
pop
roll
lock
mov
jb
xor
rolb
shl
xchg
or
out
push
fimuls
enter
cmpl
jg
sbb
push
sub
ja,pn
add
push
adc
push
mov
xchg
divl
sbb
cld
jl
cmp
add
fcomip
lret
add
push
inc
add
push
rolb
movups
add
sbb
aas
mov
add
mov
mov
push
dec
sub
mov
movsl
jle
inc
add
xor
add
or
and
adc
or
xor
add
frstor
imul
lods
movsb
dec
mov
aas
push
adc
insl
enter
jp
jl
repz
pop
sbb
or
aaa
divl
mov
ret
stos
add
add
push
sbb
add
aad
xchg
rorb
push
pushf
or
std
sbb
and
fnstenv
jecxz
push
add
mov
clc
xlat
in
adc
addb
ret
add
fcompl
add
roll
out
adc
xchg
add
xor
adc
jecxz
hlt
inc
inc
xor
ss
dec
or
add
push
mov
pop
and
mov
jg
jo
pop
in
mov
mov
test
jbe
add
pop
or
add
jmp
pop
push
call
pushf
xorb
dec
imull
sub
decl
or
stc
outsb
jo
inc
push
pushf
add
adcl
mov
adc
add
loope
inc
xor
in
cwtl
ss
add
or
int
clc
add
shlb
ja
jg
add
mulb
add
mov
ljmp
es
imul
sbb
or
ds
pop
jne
add
cld
test
rcll
sub
out
sbb
shll
add
mov
mov
insb
pop
push
push
sti
xchg
popa
movsb
sub
xchg
mov
add
dec
mov
fwait
aam
popa
roll
addr16
jmp
add
sbb
mov
dec
outsl
pop
ret
je
insb
sub
pop
jbe
push
shlb
sub
add
pop
add
pop
xchg
sub
mov
mov
adc
call
add
cmp
or
add
rcrb
dec
std
add
dec
jg
xchg
negb
cmp
add
cli
xchg
loopne
lea
test
std
push
and
inc
nop
sub
add
cmpb
pop
add
jl
push
add
cmp
fsubrl
movsb
add
inc
or
ret
add
mov
sub
notb
mov
add
or
cmp
push
outsb
test
add
dec
daa
adc
mov
incb
inc
lret
pop
push
aas
ja
cmpl
mov
test
mov
push
cld
int3
mov
shld
aad
pusha
jne
mov
lahf
jle
push
jnp
mov
sub
shrb
data16
sub
in
mov
rorb
fisubs
popf
popa
dec
inc
inc
add
xorl
dec
add
mov
shr
dec
ret
clc
xchg
inc
mov
inc
leave
jne
and
adc
dec
stc
pop
dec
inc
sahf
movsl
xchg
or
fs
inc
pop
ret
add
xor
cmp
js
lea
add
push
adc
xor
lret
add
ljmp
cmp
cmp
cmp
xor
pop
scas
jo
add
rcrb
cmp
decb
and
mov
mov
cwtl
pop
cmp
add
push
movb
rcrb
vmread
sarb
movsb
test
fdivrs
cmp
xorb
sbb
sbb
rcrb
dec
test
in
jl
add
cmp
jge
lock
xchg
movsb
dec
ss
inc
add
jbe
adc
and
push
mov
dec
out
rolb
mov
push
xchg
add
pop
sahf
clc
cmp
xchg
add
jmp
push
add
pop
push
xor
scas
je
loop
dec
rolb
test
adc
movsl
loopne
dec
sub
and
ret
or
lret
add
xchg
or
add
test
jne
mov
jnp
add
inc
mov
jb
add
mov
in
push
or
shrb
pop
mov
mov
clc
pop
add
and
dec
inc
pusha
add
mov
xor
jp
push
je
or
std
add
xchg
sbb
in
dec
push
add
push
out
inc
call
mov
and
add
mov
dec
pop
jne
pusha
imul
mov
add
bound
lock
push
inc
add
das
xchg
xor
jp
mull
fiaddl
dec
loop
add
out
daa
xchg
stos
push
add
pushf
mov
push
dec
repz
add
fdivl
andb
adc
push
push
add
arpl
and
shr
ljmp
out
add
notb
sub
cwtl
adc
call
popf
clc
cld
dec
psubsw
test
dec
lret
push
dec
or
add
adc
in
lods
dec
and
xchg
push
push
out
fisttpll
sbb
unpckhps
rcrb
xor
scas
push
add
cmp
xlat
xchg
jge
push
or
pop
pop
add
sbb
xchg
sarl
add
shll
js
jle
fwait
arpl
inc
dec
imul
sub
scas
pusha
in
jae
and
adc
jmp
pop
dec
xor
xor
call
jp
inc
xchg
jb
imul
cmp
out
sbb
vmovups
add
mov
pop
into
sbb
aas
ja
jmp
sbb
mov
push
sbb
fnstcw
popf
insb
xchg
xchg
fdivrl
push
ret
dec
divl
mov
pop
fcompl
call
push
xchg
rolb
mov
in
cwtl
mov
jne
add
sti
repnz
fadds
or
mov
xchg
movsb
sbb
sub
mov
push
push
mov
jbe
add
jns
sub
push
pop
cmp
mov
ja
js
add
push
insb
imul
lea
setle
add
mov
push
push
insb
add
mov
incl
add
push
push
fimuls
push
add
mov
data16
add
sti
xor
bound
xor
sub
sub
mov
add
mov
mov
inc
rclb
das
add
cmp
movsl
hlt
fiaddl
jae
dec
movsb
xlat
xor
out
cmp
sbb
in
jg
and
stc
cmp
enter
inc
cmp
inc
aas
mov
add
je
jne
addb
pop
adcb
test
lea
leave
adc
jne
int3
xchg
ds
cmpsb
xchg
pop
and
call
je
mov
xor
iret
les
out
and
fnstsw
add
push
std
jle
ficomps
push
shrb
or
in
pusha
mov
lods
adc
cmp
aas
pop
pop
cmp
cmp
push
ret
rdpmc
xor
jge
add
into
in
add
mov
push
add
add
jecxz
pop
lods
jle
inc
add
lock
xchg
and
xchg
fldenv
icebp
cmp
call
xlat
add
cwtl
adc
cmpl
mov
std
andb
xchg
jns
add
cmpsl
insb
mov
jbe
fsubs
add
enter
adc
sub
out
mov
mov
loope
add
loopne
rclb
xlat
loop
movsb
popf
mov
scas
cmp
lock
mov
les
mov
popl
fstl
mov
push
mov
push
out
rorb
add
and
mov
je
add
loope
clc
stc
lret
add
cmp
add
add
mov
les
pop
lock
dec
mov
push
cld
push
mov
or
js
inc
mov
sub
jge
push
jmp
aaa
sub
ss
push
and
add
cmc
cmovp
iret
test
mov
add
push
dec
jae
fucomp
add
push
dec
inc
add
rolb
add
pusha
lds
es
sub
outsl
cmpsb
pushf
js
mov
and
inc
aam
ror
add
loopne
add
in
lahf
jae
adc
movb
xchg
loope
out
pop
sbb
cmpsl
add
aaa
lea
or
pop
in
pop
mov
movsb
jle
jmp
outsb
iret
push
testb
insl
rcrb
pop
pop
push
shr
int
rorb
in
loopne
js
mov
jmp
add
add
aas
mov
lcall
xlat
mov
fnsave
add
cltd
orb
or
xchg
mov
mov
jbe
ds
mov
and
cli
xor
jmp
inc
fs
push
or
jg
sub
cmpsl
or
jmp
push
pop
sbb
pop
stos
leave
or
add
add
enter
imul
pop
push
add
pop
movsb
xchg
xor
data16
add
push
int3
and
stc
in
pop
jcxz
loopne
icebp
mov
decb
loope
insb
and
sbb
sbb
dec
imul
rolb
mov
es
jno
add
jae
inc
add
js
cs
sub
and
cmp
or
jno
inc
pop
movd
data16
mov
test
scas
lods
pop
sbb
push
add
pop
rorb
imul
outsb
les
jle
pusha
and
adc
loopne,pn
lods
push
or
fdivr
push
xlat
jg
dec
in
pop
inc
sub
negb
jo
fneni(8087
inc
pop
or
push
sub
xchg
push
xchg
scas
adc
xor
sbbb
jmp
jno
jo
inc
movsb
sbb
mov
add
in
xor
adc
add
xchg
add
aas
ret
jne
push
jnp
cmp
push
pop
jl
add
inc
jle
xorb
add
jnp
push
add
jmp
pop
sbb
bound
cmpsb
or
and
sub
jo
pop
push
mov
clc
jl
jmp
xor
imul
xchg
ljmp
cmpsl
xchg
ljmp
adc
test
add
fstps
add
or
mov
xchg
add
fcomi
into
mov
mov
pop
sub
cmp
movsl
mov
add
sbb
add
outsb
fdivrs
cmpsl
sarl
test
mov
and
call
adc
pop
mov
push
or
movsl
ss
mov
add
inc
xchg
push
lret
pusha
adc
fisttpll
mov
mov
mov
adc
inc
arpl
sbbb
in
cwtl
sub
push
enter
mov
pop
imul
xchg
xor
cmpb
subb
out
fsubrs
push
xchg
or
sbb
les
add
mov
mov
mov
fcomps
and
jg
ja
xrelease
push
inc
add
xor
scas
popf
nop
and
cmp
paddb
inc
cmp
add
cmpl
pop
mov
add
sbb
xor
add
aam
cmp
push
and
cli
jne
test
stc
mov
hlt
inc
pusha
inc
dec
dec
and
out
xchg
xchg
mov
stos
mov
push
sub
sbb
inc
popa
test
lahf
add
iret
outsl
add
mov
inc
cmp
andb
lods
out
iret
sti
mov
loope
add
mov
jo
fwait
add
xor
mov
or
or
lock
mov
gs
pop
pop
inc
stc
aas
cmp
adc
rcpps
and
mov
pop
jae
add
ret
shrl
mov
fs
mov
push
add
push
movzwl
inc
ret
pop
lret
add
jne
xchg
pop
push
jge
out
je
movsb
adc
mov
pop
sbb
and
cld
or
mov
add
cltd
xchg
xor
ret
stos
add
xlat
and
ljmp
and
cmp
add
xchg
add
jne
mov
jns
adcl
push
sti
es
push
mov
add
popf
inc
imul
scas
add
add
loop
sbb
dec
mov
push
jae
in
scas
cwtl
add
add
adc
add
and
imul
xor
in
aam
mov
add
icebp
cmc
outsl
es
add
mov
inc
aas
hlt
rorb
xor
mov
inc
pop
rclb
stos
lret
add
dec
roll
inc
outsl
test
call
add
inc
mov
xchg
and
fmuls
pop
movsb
cmc
or
sbb
cmp
cltd
lret
in
ljmp
rolb
add
lahf
pop
mov
add
iret
xor
mov
ret
in
add
or
loop
xor
cwtl
ret
pop
lock
xchg
or
test
dec
rorb
adc
out
jecxz
mov
hlt
pop
add
pusha
dec
lret
add
jg
fisubrs
lea
add
dec
testl
call
xchg
or
sub
adc
add
jbe
xchg
add
cld
std
jb
pop
and
or
js
dec
cli
loop
or
cmp
fbstp
ja
mov
es
dec
out
push
ss
loop
push
add
pusha
xor
out
or
ret
or
rorl
rcrl
add
mov
out
ljmp
fwait
je
rcrb
cld
add
pop
inc
dec
pop
out
imul
sbb
cmp
add
ds
inc
dec
int
mov
mov
pop
sti
add
ret
mov
roll
rolb
movsl
dec
lret
je
add
mov
push
dec
addl
adc
pusha
and
cmp
or
xorb
pushf
out
jno
mov
pop
cmp
add
int
repz
nop
pop
add
pop
push
popa
scas
sub
add
insb
shl
and
stc
add
cld
or
add
mov
and
sub
int3
les
in
or
out
repz
mov
mov
dec
pop
aad
xor
fucomi
adc
mov
stos
mov
and
scas
add
cmp
dec
jecxz
pop
hlt
pop
sbb
pop
mov
add
and
and
cmp
lea
adc
push
out
cmc
out
add
push
sub
rcll
std
inc
add
pop
cmpsb
fs
ljmp
pusha
movsl
add
add
rolb
cmp
inc
inc
add
mov
popa
push
or
and
jb
loop
or
movsl
xchg
bound
xor
mov
pop
cmp
xorl
push
add
lea
cwtl
jg
movsb
lea
and
jmp
aaa
pusha
push
sbb
sub
push
add
mov
and
rcll
xchg
push
push
out
add
xor
jmp
jb
and
add
movb
inc
add
lods
xor
adc
push
or
pop
sbb
pop
clc
jb
jg
test
push
mov
pop
jo
lret
icebp
dec
cwtl
stos
int3
sidtl
in
adc
rorb
pop
ret
xchg
fcoms
lods
push
pop
sub
cmp
add
lea
push
loopne
sbb
sub
add
jo
dec
add
push
gs
or
sbb
or
daa
and
add
lock
repz
out
dec
push
push
add
mov
aam
dec
push
adc
mov
jo
xchg
ja
leave
fbld
xchg
jl
fildl
pop
mov
pop
sbb
jle
add
inc
mov
rolb
mov
xchg
insl
push
lret
add
dec
subl
fdivrp
mov
in
addr16
bound
add
out
inc
xchg
mov
mov
sub
add
push
push
inc
in
das
jb
pop
xchg
jne
fcomip
in
cmp
scas
sbb
mov
jl
popl
mov
test
cmpsl
ljmp
aam
daa
add
push
cs
lea
pop
jnp
test
mov
xlat
out
add
dec
jbe
fs
sub
mov
enter
sarb
add
mov
jbe
sti
cmp
mov
das
fstpl
push
lcall
mov
shrl
jbe
add
aam
mov
sbb
pop
push
mov
cmp
add
mov
xchg
lret
lock
xor
ja
add
je
adc
dec
or
call
sete
popf
add
sub
push
mov
push
xchg
adc
sub
sbb
inc
cmc
and
mov
nop
icebp
push
in
fsubrs
jmp
sub
lret
pop
ret
outsl
push
jge
or
dec
addl
jnp
fidivl
clc
jg
sub
ficoml
imul
mov
ljmp
inc
xor
repnz
std
push
cmp
or
popf
jne
ds
inc
loope
lods
jmp
pop
add
inc
cld
and
add
in
xorb
or
xchg
imul
or
ljmp
add
andnps
add
mov
in
xchg
xor
inc
imulw
pop
pop
ljmp
jmp
pop
mov
sbb
cmpsl
lock
jmp
nop
pop
xorb
in
jl
leave
push
in
pop
sbb
icebp
loop
push
add
xchg
jb
shlb
add
jno
mov
cmp
dec
add
popa
xchg
pop
sbb
add
inc
mull
call
mov
add
and
and
sbb
jae
repz
sbb
push
pop
add
loopne
mov
lea
push
dec
xor
mov
add
xchg
fsubl
enter
xlat
daa
xor
fstl
xchg
push
mov
imulb
sbb
xchg
rol
outsb
cmpsl
ret
enter
add
push
push
xchg
mov
fwait
add
cmp
xchg
int3
aam
ja
sbb
mov
and
je
pop
push
mov
sti
pop
sub
add
xchg
xor
mov
add
cltd
pushf
sbb
xsavec
push
stc
pusha
add
ret
in
imul
cwtl
add
sub
test
cli
mov
xchg
jg
sub
jne
pop
mov
cmp
adc
loope
add
loop
xchg
xor
cmp
movsb
and
cmp
mov
add
jne
mov
or
pcmpgtb
pop
push
and
cwtl
leave
ljmp
dec
push
rclb
or
xchg
test
push
ja
xor
inc
cmp
jnp
lcall
fmull
out
cld
imul
sbb
aaa
push
cmp
jno
pop
ret
pop
lret
add
dec
orb
add
sub
sbb
cmp
in
push
test
subb
push
in
mov
jo
test
pop
ljmp
add
gs
loopne
inc
movsl
sbb
andl
push
mov
insl
adc
rclb
movsb
cmp
add
push
adc
cmp
and
add
mov
inc
add
test
cs
and
or
jmp
sub
inc
lock
add
dec
jns
add
sub
xlat
in
mov
mov
add
ds
loope
js
pop
test
or
add
sbb
imul
testb
and
dec
add
jecxz
je
jg
sbb
into
inc
or
es
xchg
add
mov
xlat
or
in
mov
xor
add
movsl
add
dec
repz
push
enter
out
movsb
xor
out
adc
inc
sti
addr16
into
add
fistps
sub
jl
add
xor
add
xchg
aad
cld
sub
addl
push
call
or
cmp
or
arpl
pop
dec
dec
add
and
lcall
into
and
mov
into
push
pushf
dec
aas
nop
mov
ret
lcall
push
dec
insb
push
add
or
mov
pop
add
idiv
imul
sub
enter
or
cld
sub
stc
ljmp
and
add
cmp
push
faddl
sub
mov
lcall
test
adc
test
xlat
add
cmc
fidivrl
dec
push
sbb
lahf
stos
inc
cmc
pusha
leave
lcall
in
fiaddl
pop
fdivrl
xchg
ljmp
inc
fs
ja
out
daa
dec
add
lds
add
or
add
fdivrs
add
pop
cli
jl
in
push
mov
and
pop
add
stos
inc
cmp
test
jecxz
add
dec
in
mov
pop
es
daa
movlps
jg
or
addl
adc
mov
ds
hlt
shrb
sub
addr16
bound
add
leave
ds
jbe
add
js
adc
adc
rorb
fbld
push
out
xor
mov
add
mov
jmp
add
inc
xchg
jmp
push
test
pushf
jle
jb
negb
lcall
fcompl
cwtl
daa
pop
dec
sub
ds
pop
pusha
push
adc
cmpb
mov
hlt
add
lea
jp
dec
mov
cli
mov
mov
add
push
add
pop
or
mov
mov
sbb
sub
add
cmp
int
popa
mov
add
mov
test
mov
add
in
push
je
stc
or
add
fimuls
cmp
push
mov
add
mov
push
pop
rcr
aaa
jo
in
xor
lea
sub
dec
xor
jmp
mov
or
xchg
or
add
sahf
xchg
sub
clc
clc
lea
mov
pop
jno
add
pop
pop
xor
dec
sar
push
int3
add
pop
mov
mul
and
pushl
and
aam
xor
aam
out
pop
mov
test
dec
pop
rclb
mov
clc
mov
pusha
add
sub
jb
cmp
add
or
loope
sbb
adc
shl
pop
call
xchg
jo
insl
inc
push
mov
xor
lods
shll
lret
xor
pop
pop
jne
lds
ljmp
mov
fisttpl
add
rcrl
out
nop
dec
in
xor
loopne
push
js
pusha
mov
rcrb
cmp
filds
ja
fistl
mov
cmp
add
std
dec
adcl
cwtl
or
add
rorb
mov
add
lock
mov
lods
mov
push
ljmp
or
jnp
add
clc
rcll
cmp
sub
sbb
pop
cmp
mov
add
pushf
jmp
add
jp
mov
shr
add
pop
das
shll
nop
pop
xor
jo
mov
enter
loope
xor
add
dec
orb
loopne
or
add
jle
pop
jp
sub
ror
gs
sbb
add
mov
lret
adc
mov
cld
nop
add
jmp
mov
push
adc
inc
clc
fsubs
test
adc
xchg
cmpsl
push
vrsqrtss
add
cmp
jl
add
push
push
jp
cwtl
add
lcall
add
mov
adc
pcmpeqb
mov
and
cmpb
inc
loopne
jg
int
add
scas
inc
insb
pop
add
push
hlt
pop
seta
jle
xor
data16
or
out
ja
cmp
cs
les
shrb
or
push
xchg
js
add
das
ds
sbb
push
mov
sub
xor
mov
test
aam
jl
pop
inc
shlb
int3
pushf
and
enter
or
xchg
clc
and
add
mov
add
jl
inc
mov
sti
in
jne
add
out
movsl
scas
push
dec
xchg
jo
mov
inc
mov
sbb
inc
call
sub
cmpsl
jl
add
mov
mov
mov
jae
mov
mov
xor
lods
repnz
or
mov
shlb
ljmp
stos
or
push
aam
test
mov
add
fmul
mov
and
cmc
inc
adc
bound
mov
add
mov
ret
or
cmp
insb
push
push
gs
add
push
ljmp
rcll
lock
jne
jb
outsl
aam
lret
add
sbb
dec
xor
add
dec
push
in
push
xchg
daa
mov
setns
inc
mov
adc
cmp
push
push
fcompl
or
sbb
sub
sti
movb
or
mov
nop
xchg
in
push
add
adc
sub
mov
jne
int3
or
fdivs
push
pushf
fs
cwtl
pop
aaa
sbb
or
mov
cmp
mov
add
cli
push
mov
pop
sub
inc
add
inc
adc
jne
nop
mov
clc
mov
mov
loop
push
lods
fimull
push
xorl
mov
inc
add
gs
lahf
mov
fadds
movsb
mov
sbb
add
ret
in
push
mov
loopne
icebp
pop
loopne
or
push
jo
add
arpl
add
adc
mov
mov
mov
add
inc
fistl
adc
inc
cmp
add
adc
inc
or
and
fucom
das
fsubl
or
dec
adc
cld
int3
or
popa
xor
aam
mov
cmpsb
and
add
jo
aam
loope
jb
es
cmp
je
popa
les
push
adc
fisttpll
jmp
adc
pushf
add
incb
push
adc
aas
negl
mov
out
xlat
add
cmp
pop
faddl
cltd
push
pusha
cwtl
shll
out
or
adc
add
pop
adc
fcoms
jo
inc
mov
in
pusha
outsb
repz
lods
js
inc
icebp
adc
iret
inc
inc
repnz
add
clc
adc
lcall
add
fs
nop
int3
and
call
pop
ffree
mov
hlt
xor
add
adc
push
sbb
cmp
xor
xchg
icebp
adc
out
add
add
imul
shrl
loope
aaa
add
and
ss
jno
and
and
inc
xor
mov
daa
movsl
xor
sbb
fs
mov
adc
or
add
sub
andb
or
sbb
add
addr16
pop
add
push
cmp
jbe
js
add
ficoml
xchg
sub
dec
jne
push
dec
fcoms
into
enter
adc
sbb
push
pop
xor
les
add
add
popa
bound
add
mov
repnz
push
mov
ret
sub
cwtl
add
std
in
scas
pop
inc
add
hlt
popa
dec
add
lea
add
or
aad
xchg
in
and
jo
or
add
sub
or
std
gs
or
add
repnz
cmp
mov
and
mov
add
push
sbb
pop
adc
push
and
adc
jg
movsl
push
test
sub
sbb
mov
jl
andl
cld
aam
add
lret
cwtl
and
sti
js
stc
data16
inc
add
pop
dec
push
cld
cltd
xchg
jo
in
ja
lea
adc
add
mov
push
dec
stos
shlb
or
sarb
push
and
insb
jmp
push
add
je
dec
add
mov
pop
stos
imul
jae
aad
xor
dec
sbb
fs
mov
lahf
addr16
arpl
fdivl
add
jns
cmp
add
add
stos
leave
lahf
dec
push
mov
cld
dec
and
add
je
jl
stos
push
xlat
bound
nop
sub
pop
mov
push
mov
in
and
insb
ljmp
add
outsl
icebp
lock
add
pop
test
dec
or
or
adc
or
xchg
repnz
mov
add
cmp
and
or
push
dec
jbe
add
dec
or
add
cmpsl
pop
repz
mov
dec
jae
les
imul
mov
loopne
inc
es
test
cmc
jne
psrld
cld
xchg
cs
cmpb
ret
add
pop
mov
add
aas
dec
movsb
ja
leave
add
test
add
jne
cmp
adc
rclb
insl
or
sub
xor
add
movsl
leave
mov
icebp
andb
fdivs
cmpsb
add
or
jl
adc
or
and
lds
or
jp
add
or
pop
sbb
xchg
mov
scas
mov
add
mov
movsb
inc
pop
jle
jnp
ss
jbe
fiaddl
pop
fildl
or
cmp
cmp
nop
pop
push
xchg
add
mov
add
add
movsl
sub
and
icebp
fsubrs
sarb
cmp
outsb
push
inc
int
lahf
xor
or
xor
push
xorb
shrl
aad
repnz
xchg
aas
dec
push
cmpl
dec
inc
clc
and
push
jne
jbe
cld
cmp
push
jmp
add
call
cmp
fs
iret
jno
pop
enter
pop
sti
jecxz
mov
incb
test
notb
sbb
or
add
jo
clc
and
xor
pop
subb
js
cwtl
testl
pop
cmp
test
gs
das
call
int
pop
adc
cmp
dec
lret
dec
cmp
mov
dec
push
orl
add
or
or
popf
or
push
or
or
sbb
ret
stc
repz
adc
and
sbb
ljmp
and
in
in
jecxz
loop
loope
loopne
fsubp
fucom
fsub
fsub
xlat
out
out
out
loop
xchg
arpl
sbbb
je
test
in
mov
leave
add
mov
jl
in
mov
sbb
xor
adcb
sbb
and
cmove
subl
call
add
adc
mov
and
jmp
daa
repz
aam
enter
test
add
jg
sub
mov
call
or
push
test
sbb
add
adc
adc
push
test
jmp
cmp
in
inc
std
cmp
add
cwtl
test
inc
dec
sub
add
jno
andl
add
imulb
cltd
lock
push
mov
cli
jno
jp
push
int3
xchg
dec
hlt
add
xchg
push
push
cmp
sbb
loopne
push
int3
cwtl
cltd
clc
es
test
xchg
gs
icebp
xor
cmpsb
into
dec
xlat
movsl
fisttps
mov
clc
lret
or
rcll
out
rclb
add
inc
xchg
enter
sub
loop
jne
mov
pushf
push
sbb
mov
mov
call
add
incl
lock
jae
ds
popf
cmpsb
mov
mov
and
sub
iret
push
jb
decl
push
push
gs
push
mov
add
jno
pushl
movsl
inc
xchg
or
ja
into
cmp
lods
es
das
push
addr16
mov
xchg
cmp
jmp
js
add
inc
in
lock
iret
hlt
cli
xor
adc
adc
inc
imul
inc
xor
add
lds
adc
hlt
inc
push
das
or
out
int
jle
jge
pop
rcll
in
push
leave
add
dec
add
or
add
or
push
add
lret
add
int
xor
nopl
dec
nop
je
pop
arpl
loopne
xchg
pop
push
add
addr16
arpl
cmpsb
or
xchg
sbb
gs
rorb
add
or
call
pop
test
pop
inc
bound
or
xchg
adc
jmp
xchg
cmpsl
and
inc
bound
test
dec
mov
nop
out
lds
add
iret
adc
add
add
arpl
mov
add
sbb
xlat
cmp
gs
imul
or
adc
jae
lds
inc
push
nop
add
test
pop
adcl
dec
jbe
add
out
adc
pop
aas
push
insl
jns
pop
cmp
adc
cmp
in
ret
or
cwtl
nop
push
or
cmpb
xchg
add
pusha
push
loopne
add
push
jne
add
pop
mov
pushf
mov
sbb
lret
dec
adc
add
add
add
xchg
enter
inc
add
mov
adc
enter
mov
xor
cmp
add
daa
ja
int3
jb
add
pusha
call
jl
aam
or
leave
adc
pop
dec
or
fldl
repnz
cmp
mov
rcrb
xchg
inc
dec
add
cmpsb
fs
add
rolb
push
das
sbb
cs
xchg
cmpl
js
in
sbb
sbb
mov
mov
jns
pop
aaa
mov
daa
add
incl
or
daa
cmova
adc
sub
add
inc
and
push
and
inc
das
in
mov
pop
add
cvttps2pi
xor
cmp
cmp
jb
popf
in
sbb
lds
ret
lahf
rolb
stos
mov
dec
mov
leave
stc
cmp
jb
je
jbe
js
add
dec
sbb
and
inc
xchg
and
rcl
clc
adc
aas
and
fs
mov
xor
popa
or
pop
jmp
test
pusha
mov
pop
add
and
pop
ds
repz
or
adc
addl
leave
je
mov
push
adc
insb
in
addb
data16
pusha
test
xchg
out
pushf
out
cld
xor
popa
fcomps
hlt
inc
sbb
pop
test
adc
enter
aam
cmp
adcl
mov
mov
enter
cmpl
mov
cltd
cli
add
lock
adcb
pop
push
or
movsb
add
jbe
les
addr16
jl
adc
sub
inc
dec
fcoms
inc
xor
add
ja
in
jno
negb
push
cmp
leave
int3
pop
hlt
into
fadds
pop
or
sub
cmpb
imul
enter
outsl
adc
mov
and
lds
mov
push
sub
out
data16
sbb
or
add
inc
in
cmp
add
mov
adc
add
push
add
popa
jo
imul
pop
scas
adc
mov
test
xor
filds
xchg
add
data16
loope
cld
call
mov
pop
pushf
xor
adc
pop
rcrl
lods
mov
push
pop
adc
in
or
out
push
or
into
lock
iret
push
movsl
adc
mov
aad
pop
mov
push
jg
loope
mov
mov
je
addb
cmpl
push
adc
and
adc
pop
add
sub
mov
dec
adc
ret
pop
and
adc
xchg
fadds
mov
outsl
mov
daa
pop
push
sbb
in
clc
paddb
mov
int3
shr
xor
xchg
sub
aam
add
xchg
mov
add
ret
lods
or
rorl
adc
and
lahf
pop
push
xchg
popf
pusha
pop
push
cli
and
cmovle
int3
sub
aam
dec
into
push
adc
dec
add
and
outsb
inc
jnp
mov
clc
mov
dec
and
xchg
decl
iret
sbb
fs
cmp
add
cwtl
dec
rolb
int3
jmp
adc
or
arpl
insb
fwait
loope
sahf
lret
xchg
mov
std
cmpsl
or
movsl
push
cmp
js
movsb
jb
gs
or
stos
jle
repz
mov
mov
popf
sbb
orb
test
sbb
pop
movb
mov
pusha
push
pop
cld
add
jno
adc
nop
movsl
xor
jmp
push
push
arpl
add
or
int
xor
hlt
adcb
negb
sbb
inc
popf
jo
pusha
jl
add
or
mov
sbb
push
adc
mov
and
add
call
inc
roll
dec
cmp
fcomps
mov
add
push
movsl
call
add
adc
jnp
stos
pop
hlt
out
push
mov
push
add
xor
out
data16
imul
mov
inc
dec
dec
sbb
xor
mov
pop
outsb
jecxz
or
data16
mov
push
and
push
daa
mov
mov
add
pop
mov
in
sbb
push
push
call
push
mov
fstl
mov
loop
pop
call
add
push
insb
ficoms
add
inc
pop
shrb
ja
fwait
inc
adc
jno
add
orl
cs
mov
leave
add
jne
pop
ret
sub
inc
inc
mov
xchg
push
adc
adc
or
aas
lods
cli
popl
popa
push
add
xor
add
push
les
clc
or
pusha
adc
push
sbb
and
add
push
mov
jp
add
sbb
add
push
pusha
xorl
imul
or
stos
mov
adc
pushf
imulb
cmp
mov
adc
call
mov
dec
jmp
add
rclb
ficomps
or
bnd
test
mov
das
add
int
push
dec
dec
push
add
jo
push
xor
mov
add
cmp
add
es
mov
or
pop
dec
sub
add
fdivrl
jp
mov
sub
mov
mov
add
pop
das
stc
jl
add
arpl
sbb
xchg
mov
xchg
inc
adc
push
xchg
mov
sub
add
cmc
mov
add
mov
or
adc
dec
mov
mov
add
incl
sub
push
or
jl
add
cwtl
pop
cli
xor
sbb
mov
hlt
loope
pop
sar
or
out
sub
pop
add
add
sub
lea
cli
mov
cltd
repnz
and
push
ror
out
aam
fsubrs
xor
call
addr16
xor
dec
sbb
cmp
push
and
jmp
out
and
cli
pushl
add
mov
sub
dec
jne
push
nop
loopne
fistl
cmp
dec
in
jnp
imul
int3
dec
xchg
lock
scas
xlat
adcb
pop
jns
jae
add
sub
add
mov
pop
negl
mov
push
fwait
rorl
push
cmp
adc
sbb
andl
popf
xor
push
add
pop
fldenv
pop
adc
add
sub
stc
add
push
mov
sbb
and
ss
sub
call
js
scas
xchg
scas
add
mov
mov
add
cmp
popa
mov
dec
add
je
sub
sbb
sub
add
or
cmp
mov
mov
ljmp
inc
stos
xor
pushf
lock
int3
daa
xor
sbb
and
cmpsb
pop
outsl
inc
add
mov
adc
dec
mov
add
enter
add
or
daa
add
inc
push
add
repz
std
sbb
add
dec
incb
sbb
pop
pop
push
cld
xor
add
call
add
hlt
jmp
into
or
repz
add
sbb
mov
mov
cmp
lods
enter
pop
pop
daa
sub
or
mov
shlb
add
cmp
aad
add
pop
ret
scas
mov
or
ds
push
add
inc
mov
inc
iret
repnz
pop
cmp
push
add
dec
pop
cld
out
roll
add
mov
jmp
push
scas
clc
popf
push
push
pusha
jmp
push
cwtl
inc
add
fistps
pop
loop
add
iret
icebp
fs
and
lea
add
es
pop
xchg
ss
xor
add
out
mov
mov
and
je
sub
mov
and
idivl
sti
pop
cmpsl
js
or
mov
jmp
and
cmp
jge
pop
sub
scas
lea
out
out
ja
xor
mov
dec
mov
dec
and
xor
add
mov
cmp
pop
jbe
out
sbb
push
push
lea
adc
movsl
add
enter
ret
and
sbb
dec
out
add
int
movsb
mov
mov
in
je
add
mov
icebp
ljmp
ret
push
or
or
test
dec
je
xchg
call
push
or
ret
jne
call
and
fstl
mov
add
and
mov
clc
push
and
es
pusha
add
outsl
adc
dec
minps
call
sbb
xor
fmulp
push
inc
inc
scas
xor
jge
add
push
sub
fs
out
pop
test
sub
inc
lods
push
or
enter
add
js
jmp
mov
fsubrs
jae
ja
inc
roll
orl
daa
and
jae
adc
sarb
adc
push
or
add
stc
add
xchg
push
push
jb
jo
loopne
inc
adc
jmp
adc
xor
add
js
aas
dec
or
mov
push
insb
jno
add
xchg
add
testl
adc
add
fstpl
scas
int3
sbb
or
fdivrp
addb
add
inc
mov
mov
sti
push
cmp
xlat
sar
fs
mov
sub
dec
pxor
or
repnz
pop
lock
and
add
cs
or
lock
add
inc
mov
dec
jl
jg
adc
xchg
sti
or
lea
lock
scas
repz
xchg
or
clc
cmpsb
movsl
sub
fiaddl
aam
push
fcmovnbe
inc
pop
xchg
add
aaa
and
scas
or
add
dec
cmpsb
push
mov
mov
adc
dec
mov
pop
sbbb
sbb
pop
cmp
pshufw
aam
stos
loop
add
call
js
add
je
jmp
and
push
push
neg
cmp
mov
add
enter
mov
add
fiadds
push
add
out
xchg
xor
add
push
or
call
push
add
or
mov
call
add
jo
mov
sub
pop
sub
sbb
jecxz
lock
xchg
mov
pop
out
push
clc
xchg
add
std
repz
jp
jge
sti
int3
inc
push
pop
cmp
lock
xor
mov
cmovs
xor
cmp
add
imul
in
and
push
cmp
lret
lds
adc
lret
jnp
add
shrb
xchg
adc
push
cmp
add
rorl
add
xor
jg
xchg
out
lods
cmp
push
ja
leave
add
cmpl
lahf
daa
jne
cld
dec
jns
pop
fnstenv
mov
out
pop
sub
jne
test
dec
inc
add
push
adc
or
shlb
bound
pop
or
add
cwtl
movsl
push
je
sub
ret
pop
cmp
flds
sbb
cs
pop
cmp
in
int
nop
lock
add
inc
mov
rorl
call
jg
push
xchg
xchg
add
inc
mov
pop
adcb
cmp
pop
das
in
push
pop
xchg
testl
push
add
push
mov
push
mov
in
test
or
sbb
cs
hlt
jne
add
sbb
outsl
add
stos
cltd
bound
ret
sub
and
jbe
mov
repnz
or
add
jmp
ds
jle
movsb
push
pop
add
sub
out
movsl
xchg
add
mov
icebp
push
adc
add
in
push
imul
or
or
pop
xlat
dec
fsubl
jl
cmpb
jae
lret
movsl
or
mov
das
pop
aad
cmpsl
sbb
scas
sub
push
cmpl
pop
js
test
add
xor
and
sub
add
xchg
dec
clc
mov
mov
or
pusha
add
add
repz
cmc
add
clc
loop
leave
add
sub
add
xor
std
pusha
lret
adc
inc
push
add
xor
cmp
push
addb
mov
or
xchg
pop
movsb
lods
std
inc
les
ds
sbb
or
inc
bound
add
mov
push
sub
add
add
and
adc
xor
add
inc
cmp
pop
bnd
fdiv
insb
outsl
jecxz
adc
mov
push
mov
fdivs
pop
push
sbbl
add
or
xor
pop
pusha
cmp
add
js
je
add
lea
lret
or
jecxz
add
test
repz
int3
push
adc
or
sbb
jnp
jo
mov
stos
pop
loop
cld
and
xchg
scas
adc
or
lock
push
dec
push
add
inc
push
and
mov
mov
lods
incl
add
dec
js
dec
clc
and
imul
xor
dec
xchg
nop
pop
xor
int3
jnp
pop
movsb
or
daa
jnp
pop
movswl
stc
xchg
adc
adc
scas
xchg
sub
movsl
jmp
mov
in
in
adc
out
add
leave
daa
dec
add
pop
and
xchg
shl
dec
or
cmpsb
pop
inc
fsub
cltd
orb
xchg
sub
push
rcrb
sti
out
cmp
js
add
inc
push
sbbb
mov
ja
daa
pop
adcb
or
imul
stos
pusha
nop
xor
xchg
add
js
or
movsl
stos
jne
je
add
mov
pop
jp
add
nop
add
mov
sub
dec
adc
or
fiaddl
xor
mov
inc
sbb
punpckhdq
fildl
inc
aas
icebp
add
js
jecxz
sub
test
jle
and
jp
adc
fucomi
jnp
dec
sub
pop
in
cmp
fdivrp
fstpl
and
mov
test
xchg
add
int
leave
jle
add
into
xchg
jns
in
cli
dec
cmp
inc
add
aaa
pop
add
xadd
sub
loope
adc
add
xor
jmp
movsb
out
in
xchg
add
or
xor
xor
adc
mov
dec
add
dec
inc
cmp
mov
mov
xor
add
loopne
push
pop
xchg
fiaddl
test
sub
jmp
xchg
xchg
add
and
or
dec
jnp
js
addb
xor
lds
bnd
or
adc
add
adc
xchg
mov
or
xchg
dec
ret
clc
or
and
push
sub
inc
add
call
or
add
mov
mov
adc
jo
in
xor
mov
add
mov
jmp
xchg
stos
and
mov
mov
dec
mov
or
adc
pop
xchg
stos
hlt
rorl
sub
and
in
call
adcb
jge
pop
push
sub
jne
push
push
aam
adc
push
dec
ja
inc
int
inc
pop
add
cli
jmp
sub
adc
push
lods
pop
add
jb
sbbl
ret
and
mov
push
mov
into
pop
add
mov
or
xchg
ljmp
ret
out
sub
or
mov
mul
cmp
stos
add
aas
mov
sub
movsb
and
pushl
lret
sbb
add
push
or
add
jg
fdivrs
mov
out
add
xchg
xchg
add
nop
std
jg
andb
mov
hlt
imul
lock
add
add
or
or
mov
sbbl
mov
add
icebp
pop
in
jg
cltd
inc
bound
sbb
in
xchg
add
adc
jnp,pn
sbb
rcll
sub
adcl
stc
sbb
cli
jmp
lock
sub
add
pop
out
push
bnd
jg
jnp
insb
in
adc
nop
push
add
mov
insl
inc
xor
pop
dec
mov
lods
xor
aas
add
je
cmp
and
ja
dec
adc
nop
aas
and
add
outsb
repnz
or
add
add
lods
cmp
adc
xchg
aas
jmp
and
stc
or
xor
push
jno
in
sub
pop
clc
sub
pop
mov
mov
add
stos
add
xlat
dec
lret
push
push
repz
mulb
and
or
imul
sbb
pop
sbb
mov
enter
add
and
xchg
sub
add
inc
push
adc
aas
add
testb
sbb
add
jne
bound
adc
inc
sbb
mov
add
adc
cmp
stos
cmpsb
mov
inc
repnz
aas
inc
stc
andl
aam
bound
push
jb
fwait
dec
imul
xchg
dec
bound
jo
jecxz
fstpt
loop
xchg
out
fs
js
pop
fldl
mov
push
add
inc
add
test
sbb
lret
and
cmp
ds
aas
in
mov
mov
rclb
jae
inc
add
inc
in
pop
cld
or
jno
jle
pop
popf
out
test
icebp
daa
nop
insl
pop
xchg
cmp
pop
cmpsb
cmpb
push
sti
repnz
adc
add
in
repz
pop
push
flds
fsubl
mov
or
add
orb
ljmp
jbe
in
add
xor
lods
mov
cmp
sti
push
out
mov
add
cmp
clc
add
test
jmp
xchg
mulb
xor
inc
mov
pop
inc
cwtl
dec
hlt
jne
repnz
add
dec
daa
out
popf
ffree
int
hlt
add
mov
mov
hlt
add
inc
xor
rcrb
inc
repnz
or
lret
and
dec
jb
scas
in
jb
es
test
mov
push
enter
repz
jge
in
add
dec
mov
and
adc
jecxz
push
cltd
sub
add
stc
add
out
push
push
add
fwait
add
or
add
xchg
js
add
push
and
add
sub
pop
jne
xchg
stos
add
fsts
loopne
in
add
mov
xchg
daa
push
jle
dec
and
roll
pop
lods
jp
add
push
or
mov
imul
cmp
jae
scas
mov
and
xor
mov
jp
sbb
call
add
push
subb
xchg
sahf
arpl
test
stc
sub
push
daa
ret
add
xchg
jo
mov
and
and
pop
or
inc
or
add
repnz
add
sbb
clc
lahf
roll
jo
pop
popa
ret
or
hlt
rolb
jmp
cmp
ja
xor
or
cli
out
cmpsb
pop
sbb
mov
outsb
ret
and
adc
adc
popa
out
add
inc
add
aas
jbe
test
inc
sbb
or
adc
sbb
pop
inc
imul
js
test
loopne
jb
inc
or
push
sbb
mov
push
roll
jo
dec
pop
pop
push
or
push
jle
inc
inc
adc
fisttpll
xchg
jbe
lret
sub
filds
xor
roll
cmp
sti
nop
xchg
add
inc
scas
shrb
add
repz
push
in
sub
push
dec
inc
push
sbbb
add
loop
and
mov
fisttpl
movsb
add
mov
cmp
jp
push
in
pop
andb
sub
pusha
pop
or
les
mov
add
xchg
or
cmp
add
in
cwtl
lods
clc
sbb
inc
add
lcall
jmp
adc
add
or
add
sbb
push
add
pop
cmp
cs
add
and
ret
fistpl
pusha
nop
bound
out
enter
cwtl
pop
add
js
push
inc
fs
repnz
add
pop
mov
bound
adc
cmp
adc
xchg
jle
mov
pop
leave
jge
jo
jno
pop
cmp
add
aaa
lods
push
mov
js
adcl
and
sbb
clc
cmova
cmp
push
lds
int3
xor
add
out
sbb
push
movsl
lock
out
pushf
adcl
shr
loopne
orb
rolb
mov
cld
imul
outsb
loopne
cmpb
stos
int3
mov
dec
mov
cmc
rclb
add
mov
sbbb
dec
sbb
pushf
lock
inc
mov
inc
out
add
add
mov
cmp
imul
pusha
or
data16
dec
std
add
mov
movsb
push
ljmp
addb
add
sti
sub
xchg
xlat
or
xchg
xchg
and
aas
addl
imul
push
push
jbe
add
sbb
repnz
leave
mov
ret
inc
test
pop
add
sub
jmp
sub
add
rcrl
mov
aad
pop
pop
or
mov
push
cmp
add
jmp
or
mov
pop
lahf
rcrb
mov
xchg
repnz
mov
dec
sti
adcb
call
jge
daa
cmp
mov
xlat
dec
incl
dec
int
sbb
xor
jmp
inc
add
push
push
call
add
adc
pop
dec
adc
add
xor
sbb
movsl
aam
cmp
stos
dec
pusha
loopne
xchg
test
mov
nop
movsb
mov
rorl
or
push
femms
sub
sbbb
and
add
insb
test
add
loopne
jmp
push
shlb
push
jl
ret
int3
xor
enter
mov
and
aas
imul
cmp
add
mov
add
mov
data16
enter
xchg
call
pop
sub
lret
mov
out
sub
mov
mov
and
ja
loop
inc
pushf
inc
xlat
inc
push
mov
shrb
dec
divl
inc
out
add
stos
cmpsb
dec
aam
lock
inc
add
cmp
or
sti
xor
mov
out
dec
pusha
adc
cmp
and
or
push
mov
cs
add
cmpb
je
mov
rol
xchg
xchg
andl
jo
push
aaa
in
jg
add
pop
fdiv
aad
push
add
xchg
or
inc
clc
dec
sub
add
sahf
dec
rolb
ret
ljmp
cs
stos
and
inc
daa
sub
stos
and
jmp
cwtl
fcomps
inc
dec
mov
ljmp
inc
int3
imul
sub
add
jmp
mov
jae
pop
stc
or
add
add
das
inc
cwtl
cmp
jnp
dec
inc
mov
inc
dec
mov
sub
dec
adc
push
mov
add
inc
arpl
cs
aaa
test
xor
jl
data16
test
add
dec
loope
inc
adc
add
push
adc
xchg
pop
xchg
inc
or
pop
mov
sti
push
inc
addl
adc
jno
mov
add
nop
loope,pn
loopne
popa
xchg
adc
xchg
out
add
ret
sbb
sbb
add
xlat
pop
mov
dec
scas
xor
iret
jmp
xchg
push
inc
enter
testl
and
xor
add
sbb
inc
imul
fdivl
push
cmpsb
adc
leave
clc
imul
xchg
loopne
es
add
xchg
add
inc
mov
or
add
popf
notl
xchg
or
sub
sub
stos
aam
rorb
aad
xchg
sbb
cwtl
movsb
sbb
pop
adc
cld
add
dec
and
ljmp
or
loopne
lret
loop
add
mov
ja
aam
cld
sub
pop
call
cmpl
cwtl
lock
imul
xlat
cli
mov
add
lods
shlb
mov
int
pop
adcb
repnz
loop
pop
and
and
or
es
aam
jg
mov
orl
dec
mov
add
ljmp
xor
std
clc
and
mov
sub
xor
lds
pop
push
jmp
add
mov
push
add
mov
mov
dec
pop
fisubs
mov
add
rorl
aaa
xchg
rcrb
inc
jnp
jbe
adc
out
icebp
mov
add
out
mov
fistpll
add
pop
movb
push
pop
sub
loopne
fidivrs
push
fisubrl
in
hlt
xor
cmp
roll
push
mov
add
jecxz
adc
pop
and
mov
inc
and
jbe
roll
add
in
xchg
adc
xchg
dec
pop
loop
add
sbb
xchg
push
or
push
inc
rcrb
add
cmpsb
fistpl
aam
add
bound
inc
jno
ror
int3
cmp
movsb
push
divb
inc
enter
inc
xor
das
add
mov
add
or
xor
add
jmp
out
adc
or
add
in
je
add
xchg
mov
add
pushl
add
add
popf
add
inc
dec
inc
add
or
add
outsb
mov
add
fsubr
push
adc
and
mov
out
xchg
add
push
mov
push
sub
sub
adc
shl
fsubl
adc
pop
jnp
das
call
pop
lahf
push
sahf
sub
mov
loopne
addr16
add
pusha
pop
jne
data16
pop
cmpsb
out
pshufw
and
pop
in
add
xchg
push
xor
call
xchg
mov
fsts
mov
add
dec
mov
lock
cmp
pop
adc
je
or
jmp
loopne
hlt
std
movsl
add
and
push
add
inc
out
test
rcrb
xchg
outsb
in
movsb
cltd
adc
add
inc
inc
pop
stc
mov
add
xchg
cmpsb
push
add
add
inc
adc
mov
xchg
cs
lock
or
jle
jl
cmp
inc
add
add
xchg
add
and
lods
add
jbe
int
addr16
adc
insl
adc
and
adc
add
pop
movsl
and
mov
inc
lock
cmp
xchg
add
mov
sbb
sub
add
xchg
xor
or
les
or
add
push
cli
add
push
mov
add
pop
into
int3
pop
pop
add
add
mov
push
pusha
sub
in
cmp
pop
ret
jne
lock
jmp
ret
add
imulb
add
je
repnz
inc
xchg
inc
xchg
sbb
mov
les
stos
push
lods
stos
cmp
or
imul
mov
scas
div
loop
pop
push
xchg
lock
inc
int3
mov
popf
add
lods
dec
inc
call
push
jmp
add
and
pop
mov
jle
dec
iret
pop
sbb
jb
mov
aas
xor
push
jns
jl
xchg
into
xor
cmp
add
sbb
sbb
sub
mov
adc
inc
loopne
pop
sbb
fs
loop
cmp
pop
pop
mov
and
sbb
xor
push
add
add
adc
sub
pop
inc
nop
push
adc
test
push
cli
cmp
stos
push
sahf
enter
cld
mov
pusha
adc
test
loop
jg
add
jae
scas
cmc
movb
add
dec
inc
push
push
aam
and
xor
cmp
sub
mov
imull
lret
add
int
je
rorb
dec
rolb
sbb
cmp
add
mov
inc
les
ret
jmp
sbb
cmp
xchg
and
inc
add
ss
sahf
adc
xchg
out
into
dec
xchg
add
pop
add
scas
push
mov
les
lods
cmp
cs
and
push
shll
jge
xchg
cmp
push
mov
sbb
adc
rorb
shlb
sub
push
jge
loope
js
addl
dec
cli
pop
push
xchg
xchg
xor
cmpsb
ds
mov
notb
cwtl
add
je
adc
movsb
xchg
loope
shlb
push
mov
mov
lea
push
push
mov
aam
in
and
adc
nop
and
push
sub
or
mov
or
xchg
sbb
and
mov
and
cmpb
add
dec
test
mov
cmc
pop
jp
lcall
add
xchg
or
cli
mov
and
or
dec
dec
por
in
stos
and
push
mov
add
adc
mov
xor
add
dec
out
sarl
je
pop
pop
pop
in
pop
dec
mov
pop
cltd
add
adc
dec
fadd
je
ja
lods
xlat
insl
add
sub
scas
arpl
mov
mov
sarl
pop
out
std
andb
mov
outsb
dec
dec
repnz
and
push
adc
push
js
call
sub
rorb
dec
ret
insl
mov
hlt
adc
add
movsb
testb
je
push
xchg
mov
or
pop
sbb
sbbb
das
scas
push
xor
loopne
dec
in
sub
scas
out
xchg
in
add
stos
mov
mov
dec
add
jge
pop
stc
push
sbb
jle
insl
jns
dec
aad
add
push
cmp
inc
cli
or
pop
xor
rol
call
dec
push
jae
pop
shr
jae
add
daa
push
jno
cmp
lcall
aas
out
add
repnz
dec
push
adc
add
in
adc
jg
xchg
ljmp
pop
jne
dec
rolb
ret
addb
jmp
jne
dec
and
or
push
call
jne
icebp
outsl
dec
shll
xchg
lcall
add
push
push
mov
add
andb
xorl
push
mov
adc
test
push
or
lahf
add
add
fisubs
jg
pusha
pop
push
xor
or
push
and
stc
xchg
sbb
hlt
ret
popf
add
push
inc
clc
dec
cli
add
aaa
pop
cld
sub
and
fwait
shlb
cmpsb
add
xchg
fidivl
and
mov
or
int
cmp
push
push
inc
mov
ljmp
xor
add
test
loope
into
jo
dec
add
jmp
add
sahf
ds
rcrb
fwait
dec
xchg
add
push
pushf
cmp
jecxz
add
adc
cmc
movsb
loop
test
test
je
out
cmp
in
pop
jno
pop
or
rcrb
mov
sub
push
add
dec
or
ja
xchg
jne
mov
pop
iret
add
and
lea
cmpsl
rolb
fildll
or
or
test
add
push
testb
jp
cmp
and
mov
add
mov
iret
add
sub
add
jmp
pushf
mov
mov
add
pop
adc
mov
jg
fstpt
mov
add
push
into
mov
dec
lock
repnz
pop
sbb
inc
ret
call
add
pop
outsb
hlt
xor
add
xlat
fdiv
pop
add
fs
mov
call
stos
cltd
fdivrl
add
xchg
mov
mov
add
in
dec
aas
sbb
psubq
stos
repz
popf
faddl
cmp
cmpb
insl
je
xchg
cmp
rolb
and
clc
sub
test
add
inc
or
adc
loope
add
adc
sub
sbbb
jae
mov
imul
loopne
cmc
and
sub
pop
ds
jle
ljmp
lea
data16
add
inc
and
into
jge
mov
test
int
pusha
sbb
andps
outsl
rorb
dec
pop
jg
cmp
dec
inc
lea
or
add
mov
std
sti
rcrl
stc
orb
inc
add
dec
into
int3
and
es
ret
sub
movb
cmp
pop
push
mov
pop
je
pop
mov
ret
sbb
push
jne
repnz
push
test
sbb
fiaddl
jg
add
js
push
pop
test
sar
rclb
movsb
adc
mov
call
mov
ret
movsl
push
adc
mov
out
xor
pop
cmpsb
roll
addl
js
xchg
mov
fdivs
ljmp
sarb
ret
add
push
setge
sub
or
add
xchg
add
dec
mov
add
test
mov
dec
add
dec
jae
xor
cmpsl
add
inc
mov
icebp
dec
mov
call
push
add
xchg
pop
mov
cwtl
jmp
nop
push
sbb
mov
fcompl
mov
push
adc
and
inc
dec
jl
add
pop
inc
mov
pop
xor
dec
sbbb
add
call
sub
sti
cmp
sbb
push
clc
add
xchg
testb
pop
and
sub
push
fisubl
loopne
and
add
rorl
push
in
xchg
add
in
lds
sbb
add
lock
mov
mov
hlt
xchg
and
jge
pop
cmp
imul
add
in
mov
stc
lcall
cld
add
sub
mov
sahf
push
cli
and
outsl
and
xor
lahf
jmp
ds
adcl
lods
xor
cmp
jbe
add
add
cwtl
icebp
add
add
sbb
adc
dec
lds
push
rorl
push
adc
inc
xchg
jae
adc
and
mov
fdivrl
inc
add
or
xor
dec
xchg
clc
les
mov
sbb
out
enter
add
daa
xlat
gs
mov
int3
add
test
xchg
pop
and
js
mov
call
adc
sub
leave
roll
inc
test
add
xor
cwtl
loop
bound
jmp
cmp
push
fmull
inc
in
in
iret
inc
xlat
clc
shrl
add
aaa
xchg
mov
jae
inc
dec
push
out
cltd
push
dec
and
add
out
div
mov
inc
rol
pop
lods
incb
push
inc
push
ja
add
adc
adc
inc
xor
adc
jmp
leave
mov
jl
gs
cltd
or
or
movb
push
imulb
cli
cs
adc
dec
adc
add
inc
iret
push
mov
nop
sarb
cli
mov
add
sub
or
lock
lods
orb
negl
add
add
aaa
xor
lds
orl
dec
adc
mov
adcb
add
ret
add
mov
jno
xchg
push
lcall
push
mov
rorl
out
mov
in
shlb
cmc
xchg
pop
mov
inc
lahf
fdivs
pop
mov
or
hlt
push
repnz
and
xor
leave
clc
push
xchg
and
add
xor
xlat
mov
add
sbb
jmp
cli
push
cmpsl
adc
jno
adc
push
mov
shl
mov
stc
fwait
add
pop
dec
push
scas
pop
adc
jge
cmpsb
aas
lret
sarb
or
add
jae
or
xchg
or
push
lds
or
jge
or
sub
pop
shlb
add
std
adc
jmp
test
loopne
mov
jle
or
add
xlat
add
jg
dec
or
xchg
push
and
pop
shl
cmc
shlb
or
pop
sbb
or
adc
mov
pop
mov
dec
fisubl
sbb
cmp
movb
int
je
push
mulb
cmp
add
repz
int3
pop
nop
xchg
xchg
mov
sarl
xor
outsb
cld
pop
jae
mov
sbb
adc
sbb
add
add
cmp
or
push
dec
movl
mov
nop
push
enter
add
push
aaa
lods
shld
mov
test
push
sub
inc
inc
or
ljmp
add
inc
popa
xchg
mov
popf
adc
dec
and
add
jle
arpl
in
adcb
lock
test
xorb
sub
daa
push
loope
push
addb
addb
adc
push
mov
pop
leave
sub
jp
dec
lods
xchg
add
or
add
in
cmp
test
lock
mov
movsb
or
push
dec
adc
dec
mov
sub
adc
test
add
adcb
cmp
lods
push
jmp
js
mov
and
push
add
mov
add
or
mov
loop
add
inc
stos
and
sbb
or
add
das
shrl
pinsrw
das
push
pop
push
enter
lock
xchg
adc
lahf
divl
or
push
add
and
ret
push
pusha
cmp
push
and
mov
ret
mov
fsubrs
jb
aaa
out
imul
adc
lret
xor
repnz
mov
jmp
clc
xchg
xor
xchg
mov
xchg
push
shlb
sub
or
dec
loopne
arpl
and
ja
dec
and
sbb
jmp
rol
jmp
call
pop
movsl
adc
pop
add
xor
jmp
sub
clc
jmp
fdivrl
push
mov
nop
inc
cmpb
and
push
push
or
sbb
sub
xor
jecxz
bound
and
or
out
xchg
mov
fs
imulb
rcll
mov
les
and
push
cwtl
add
out
enter
add
in
scas
cmp
roll
out
push
nop
push
cmp
jmp
fists
clc
cmp
mov
xor
inc
incl
xchg
mov
hlt
iret
aas
jne
add
pop
mov
xor
stc
pop
sbb
and
inc
xchg
pushw
insb
mov
add
popl
pop
fxch
add
push
mov
pop
xor
xchg
push
out
sbb
imul
adc
test
mov
add
aas
popf
push
mov
int
pop
pop
ljmp
cwtl
jge
insb
xor
adc
imull
fcoms
add
mov
or
pop
enter
pop
sbb
sub
inc
sbb
jae
cltd
jne
jns
add
sub
cs
outsb
push
or
jbe
pop
and
sub
stos
aaa
lret
xchg
mov
mov
mov
mov
add
das
call
jbe
push
dec
shl
sbbb
dec
and
add
incl
sub
xchg
jno
dec
dec
sub
inc
add
add
jmp
in
add
adc
das
fiadds
push
popa
mov
es
jg
jo
sub
js
xor
or
add
inc
aad
sub
icebp
sbb
mov
lahf
mov
imul
std
mov
addb
icebp
in
fdivrs
dec
add
mov
addr16
or
pop
or
pop
xchg
push
hlt
sbb
hlt
add
jp
and
push
lcall
cli
push
push
mov
inc
xlat
imul
inc
call
sbb
outsl
and
mov
jnp
add
xor
jmp
scas
loopne
jns
das
inc
sbb
sar
or
jbe
inc
gs
fsts
or
sbb
or
cmp
xlat
pop
push
sub
add
mov
loopne
jne
pop
lds
xchg
cmpb
cmp
sub
aas
lcall
inc
shlb
test
nopl
sub
push
add
nop
inc
mov
mov
xchg
out
xchg
orb
mov
rcll
add
fdivl
add
pop
inc
imul
adc
jnp
cwtl
les
sub
and
into
rclb
xchg
xchg
fst
add
dec
pop
test
dec
add
and
loop
add
pop
fucom
add
mov
sbb
into
mov
mov
or
sti
mov
shlb
push
dec
cmp
inc
mov
fpatan
cmp
add
dec
cltd
add
insl
xchg
xchg
popa
rolb
sub
push
je
add
push
and
and
dec
gs
or
movb
mov
push
push
aam
add
mov
pusha
cmpl
add
test
add
loopne
daa
repnz
mov
sbb
inc
add
rcll
jl
in
cwtl
dec
add
cmp
jmp
mov
sub
fadd
jle
add
stc
or
dec
jge
data16
add
adc
or
mov
es
dec
and
xor
shrb
mov
dec
pop
cmpsb
add
cmp
and
jne
xchg
add
pusha
adc
or
flds
sub
add
ljmp
push
xor
mov
jo
xchg
lcall
into
imul
aas
or
in
inc
mov
les
jg
add
cvtps2pi
or
jns
push
lahf
push
add
lret
cmc
dec
loope
adc
or
lods
xor
std
sahf
add
fistps
ja
jge
xor
loop
jbe
add
jmp
sub
or
push
cwtl
idivb
jns
je
jmp
xchg
clc
out
mov
dec
pop
or
je
xchg
pop
add
mov
mov
les
cwtl
cs
add
out
mov
loop
lcall
mov
and
sbb
movsb
pop
scas
push
movl
adc
mov
aaa
ret
pop
mov
scas
shl
es
add
xor
repz
pop
pop
add
jmp
add
xchg
je
dec
adc
add
xchg
ljmp
dec
add
ret
add
pop
sbb
enter
or
push
adc
iret
or
add
mov
xor
ds
sub
mov
xchg
add
lea
nop
pusha
xor
inc
or
cli
bound
or
adc
xor
and
add
stos
movsl
dec
add
jb
call
scas
inc
mov
xchg
loopne
dec
add
push
scas
pop
jnp
pop
fists
out
arpl
leave
push
cld
add
lds
mov
adc
lods
pop
adc
lods
jo
bound
xchg
adc
adc
or
add
push
add
repnz
test
fdivrs
leave
push
sbb
stos
les
xchg
dec
ljmp
mov
adc
jmp
push
sbbb
sbb
pop
cmp
dec
push
add
mov
clc
and
hlt
hlt
jne
push
inc
outsl
push
shlb
call
fsubs
adc
scas
xorb
adc
sbb
pop
rorl
and
in
push
mov
das
jnp
add
and
add
adc
enter
in
es
cmp
lock
verw
in
repnz
into
hlt
mov
dec
aas
insb
out
popf
call
enter
xchg
mov
cmp
push
sub
std
andb
jo
repnz
mov
add
adc
push
dec
mov
call
iret
sarb
sti
leave
scas
sub
jp
pop
jnp
adc
add
ret
outsb
enter
push
int
cmp
hlt
addl
add
adc
dec
mov
orl
or
add
push
add
sbb
fistps
loopne
jae
fisubs
bound
ljmp
cwtl
enter
xorl
js
insb
sbb
dec
daa
add
mov
jmp
ret
fildl
add
pop
adcb
add
subl
cmp
add
add
ljmp
lock
fwait
sub
je
pop
fstpl
and
imulb
mov
push
xor
nop
fistl
and
aam
add
sbb
enter
mov
or
es
hlt
xor
xor
daa
xlat
add
sbb
sub
sbb
rcl
push
add
sub
addb
das
cmpsl
imul
push
push
dec
pop
dec
inc
dec
loopne
outsl
out
add
dec
int3
hlt
xchg
mov
movl
sbb
mov
jmp
inc
sgdtl
lret
add
movsl
mov
sbb
mov
stos
pop
xchg
push
add
out
xor
jmp
or
in
daa
pop
add
hlt
cli
cltd
mov
ret
inc
cmpb
mov
xchg
popl
sti
rol
repnz
mov
mov
jp
out
add
mov
stos
add
negl
add
cmp
inc
jmp
cmp
mov
or
add
sub
jp
add
adc
cltd
add
adc
sarb
out
gs
pusha
add
add
mov
add
mov
std
fs
aas
aaa
sbb
sbb
rcr
mov
add
scas
adc
inc
pusha
adc
inc
xor
push
test
movsb
add
adc
adc
pop
mov
fld
jg
call
jb
sub
pop
xorl
and
xor
dec
mov
aas
add
inc
cmp
insl
clc
and
sbb
add
mov
inc
add
bound
or
repnz
add
packssdw
pop
mov
add
int3
inc
add
lcall
jne
add
lea
fiaddl
push
icebp
mov
outsb
add
ficoms
and
xchg
pop
push
push
adc
lea
in
mov
sbb
fsubrl
cmpsb
add
inc
mov
sub
mov
and
adc
adc
sub
adc
jae
cmp
sub
push
ja
add
or
ret
xchg
mul
push
nop
and
mov
repz
andb
sub
xchg
cltd
and
mov
add
stos
cmp
mov
mov
mov
je
dec
jb
lds
xor
rcll
push
ds
push
orb
lods
inc
gs
cmp
sub
inc
in
dec
add
push
enter
subb
jmp
add
jne
and
jo
and
fbstp
pop
push
mov
sub
lods
add
add
pusha
or
inc
hlt
je
mov
popa
andb
add
mov
and
loop
cmp
add
repz
push
xchg
nop
mov
jo
lret
jge
add
xor
iret
xchg
dec
add
sub
sarl
nop
sbb
add
stos
hlt
stos
xor
shll
mov
popa
aam
adc
rcrb
sub
push
popa
std
outsl
test
leave
enter
sub
out
out
push
add
in
jecxz
lea
add
stos
pop
pop
mov
imul
dec
sahf
xchg
jne
xchg
push
mov
inc
cld
inc
add
incl
ss
jnp
imul
cmp
ja
fsubs
dec
sub
ret
aad
loopne
adc
cmp
hlt
mov
xorl
in
cmp
mov
xchg
movsb
jb
add
xchg
imul
or
add
adc
xchg
or
sti
sbb
xchg
jne
out
lds
ljmp
inc
add
inc
bound
and
les
jnp
leave
ficomps
jbe
add
lock
in
xchg
dec
call
add
out
add
imul
mov
pop
add
push
xor
dec
sub
leave
jle
shlb
inc
xchg
or
add
movb
sub
dec
rorb
push
lahf
sbb
hlt
fdivs
sub
dec
add
add
test
cs
in
jae
mov
ret
lret
or
add
adc
inc
mov
in
call
fs
rcll
add
xchg
add
inc
loop
fs
add
jmp
call
cmp
sbbb
dec
add
mov
sub
add
int3
jecxz
mov
mov
jl
lcall
pop
addb
or
test
add
nop
frstor
xchg
dec
xor
add
movsb
icebp
dec
add
out
lds
cmp
gs
lock
add
scas
loopne
and
test
xor
push
mov
out
repz
jl
pop
sub
jae
jmp
push
out
std
in
sub
sbb
shr
adc
push
pop
or
movsl
jmp
cmp
lea
fdivl
dec
or
sbb
sub
pop
rcl
push
dec
mov
dec
pop
xlat
mov
and
jl
inc
scas
mov
jo
shlb
mov
pusha
push
out
cld
add
mov
fwait
pop
sub
mov
inc
and
adc
inc
xor
mov
inc
mov
mov
or
in
out
add
je
mov
push
add
mov
and
add
rcrb
add
outsb
ds
imul
xchg
add
icebp
fs
dec
sbb
cmpl
mov
mov
loop
sub
or
push
inc
rcll
dec
icebp
repnz
nop
clc
cmp
pop
jnp
adcb
iret
xchg
dec
dec
add
xchg
jne
pop
das
jo
cld
insb
add
push
jno
add
jo
jo
jg
in
mov
mov
rclb
cmp
shlb
sbb
icebp
dec
adc
cmp
mov
andb
fstl
jnp
add
jge
arpl
dec
sbb
mov
clc
rclb
add
dec
sbb
repz
push
hlt
or
cmc
add
mov
xchg
add
push
cmp
out
mov
push
or
cmp
add
adc
jns
test
pop
scas
cltd
movq
pusha
inc
sub
push
shr
icebp
pop
and
add
mov
adc
push
popa
test
pusha
nop
xlat
fwait
scas
pop
stos
adc
or
fidivs
loop
test
cmp
loopne
xchg
jecxz
cmp
enter
jbe
andb
add
inc
sbb
add
cld
xor
es
add
mov
nop
pop
stos
lret
pop
addr16
arpl
repz
out
cwtl
lret
push
sbb
ret
mov
add
test
aad
mov
cmp
add
dec
fdivl
hlt
test
insl
xor
cmpsl
rorl
dec
push
cmp
push
iret
ds
adc
test
out
jne
mov
add
xor
insb
pop
pusha
into
add
mov
in
add
xorb
and
jg
xchg
xor
lret
mov
dec
decb
imul
mov
cld
int3
movsb
dec
pop
fwait
dec
scas
add
cmp
adcb
inc
add
dec
cmp
push
sub
push
add
pop
ljmp
sbb
push
and
inc
js
or
out
mov
test
push
push
add
jb
test
add
ds
add
call
movsb
xor
sub
movsl
and
repz
push
scas
int3
inc
or
test
add
imul
xchg
daa
ss
pop
in
mov
adc
cmp
int
pop
mov
movsl
loopne
inc
dec
jne
cltd
cmp
xchg
add
sarb
dec
sbb
jno
add
mov
ljmp
jle
or
lods
cmp
pop
nop
add
std
add
dec
ss
pop
fisubs
add
mov
stos
add
notb
mov
push
mov
inc
inc
daa
testl
push
aaa
jne
add
xchg
inc
clc
xlat
pushf
xchg
xchg
cli
lldt
or
cmp
movl
cmp
jns
lods
lock
lahf
andb
pop
cwtl
out
add
xor
pop
jp
sbb
or
mov
jb
dec
xor
push
mov
cmc
pop
push
add
into
mov
pop
rol
adc
adcb
mov
adc
scas
outsb
inc
mov
cmp
sbb
das
adc
daa
adc
fists
push
push
pop
fwait
loopne
push
test
xchg
dec
daa
fdivr
es
iret
inc
mov
shrb
jmp
in
xchg
xchg
or
xor
or
sbb
sub
add
jnp
int
das
sub
push
popf
adc
add
iret
dec
mov
lods
cmp
idivl
jmp
gs
sub
ds
push
cmp
mov
sbb
movsl
add
sbb
pushf
xchg
add
push
ljmp
xchg
add
sub
lret
adc
push
xchg
inc
cmp
push
cmp
add
stc
cs
outsb
sub
pusha
push
add
movzwl
movsl
loopne
stos
push
inc
or
pop
sbbl
add
pop
xor
push
jbe
add
lea
and
push
cs
imul
sbb
je
push
add
mov
mov
sbb
mov
enter
pop
xchg
movl
cmp
xor
inc
dec
jg
add
xchg
sbb
adc
add
sub
pop
outsb
add
add
orl
insb
jb
pop
push
and
fiadds
decb
add
xor
add
pop
addr16
inc
orb
xor
add
inc
lea
enter
sbbb
loopne
push
adcl
ret
or
jmp
int3
add
inc
repnz
dec
movups
movsl
cmpb
cltd
inc
jnp
add
or
cmp
xchg
jle
adc
rclb
test
dec
or
xorl
test
ljmp
jg
add
fwait
dec
adc
mov
pop
adc
xchg
or
lret
ss
pop
and
add
dec
leave
xor
sarl
add
jg
insb
nop
sub
and
es
xchg
xchg
or
add
cld
push
xchg
add
adc
jge
nop
subb
fidivrl
sub
aaa
pop
add
out
add
jbe
sbb
mov
ljmp
xchg
jl
or
inc
insl
movb
dec
lds
std
rclb
movq
aad
pusha
adc
inc
pushf
mov
incb
add
add
mov
sbbl
xor
jmp
aaa
call
and
xchg
cmc
movd
dec
add
xchg
xor
hlt
mov
cmp
lock
mov
adc
iret
push
inc
or
fwait
loopne
xor
add
xchg
inc
add
sbb
aad
jp
push
mov
mov
push
dec
mov
mov
loope
cmp
sub
jp
add
das
stc
pop
add
or
adc
dec
sbb
dec
add
or
jle
dec
or
add
cs
xchg
adc
rolb
add
iret
and
scas
test
call
sub
aam
cmp
jp
cvtpi2ps
fistl
aaa
add
push
sub
xchg
cmpsb
push
sub
jecxz
add
pop
lret
add
insb
mov
dec
or
or
and
cmp
add
and
add
shrb
add
pop
mov
lods
sbb
adc
aaa
scas
subb
sti
add
add
or
mov
jae
dec
add
sub
sub
add
repnz
mov
aad
add
test
prefetch
and
sub
push
call
cwtl
inc
mov
aas
xchg
rcrb
outsb
fbld
add
adc
add
jge
mov
add
and
jmp
pop
add
sbb
call
mov
enter
icebp
mov
and
adc
ljmp
test
out
mov
and
and
cmp
push
pop
inc
cmp
and
ret
pop
add
lret
push
scas
add
push
and
dec
adcb
cmp
out
pop
sub
rcrb
inc
adc
clc
lret
rcrb
imul
push
push
in
mov
add
add
fcoms
cltd
shl
pop
add
inc
adc
dec
arpl
mov
frstor
jns
call
stos
std
iret
rcl
sub
add
ret
out
mov
xor
cmp
inc
add
sar
sub
cmp
aaa
ret
xorb
cmp
das
test
push
xor
cs
add
sbb
in
cmpsl
add
fists
mov
jo
nop
cmpl
add
or
xor
mov
push
pop
fs
mov
add
or
add
loop
mov
fdivrs
ja
loopne
lcall
jle
mov
test
push
or
add
psrld
loop
or
xor
jl
add
bound
and
out
pop
mov
pop
jmp
lods
adc
mov
aas
fsubrl
in
femms
sub
add
clc
pop
mov
call
sbb
addr16
lcall
mov
adcl
inc
jns
dec
mov
pushf
mov
filds
fsubr
jmp
insb
add
fcompl
jo
rclb
loop
lcall
in
js
mov
and
je
and
mov
les
dec
shrl
mov
push
add
adc
mov
aad
push
xchg
sub
or
mov
mov
mov
daa
add
add
mov
add
sbb
pop
mov
filds
insl
or
push
adc
pop
pop
push
inc
or
jg
addr16
sbb
in
sbb
shlb
add
jge
push
lods
divb
push
das
add
enter
fucomip
sbb
dec
out
cwtl
inc
add
sub
inc
cltd
fld
fnstsw
and
int3
pop
push
mov
pushl
filds
out
pop
add
add
xchg
mov
loopne
and
sub
divl
dec
add
jmp
or
pop
cmp
add
std
adc
imul
repz
adc
mov
or
mov
scas
inc
push
add
stos
lods
push
repz
xchg
imul
pop
push
mov
cmpl
xchg
mov
call
sarl
add
adc
jecxz
cmp
cmp
mov
sub
pop
daa
lods
aaa
adc
inc
add
adcl
decl
je
xlat
add
ret
mov
dec
xor
push
sbb
and
add
dec
inc
lcall
icebp
rorl
cmpsl
jp
xchg
cmp
or
scas
loope
xchg
push
adc
lds
and
push
xchg
lock
cmp
add
loope
call
movnti
adc
jmp
jo
mov
cmpb
pop
mov
push
nop
outsb
sub
and
dec
add
cmpsl
sub
push
call
out
ficoms
add
fdivrl
add
ja
mov
test
jbe
adcb
mov
imul
xor
and
sbb
jmp
add
xchg
xchg
xor
add
lds
add
fwait
call
pop
das
xchg
shlb
add
fs
xor
sub
mov
subb
pop
scas
and
cmp
call
jnp
sbb
scas
push
sti
std
add
aas
rolb
add
cmpsl
adc
shrl
add
and
fldcw
inc
orb
inc
and
pop
mov
imul
and
mov
loope
pop
push
add
inc
sbb
add
jp
fistpl
xchg
adc
fnstsw
movsl
sbb
sub
add
ja
js
add
jae
sbb
sahf
fsts
push
jns
cltd
push
je
call
insl
mov
and
sbb
out
push
scas
je
lds
aaa
scas
adc
mov
leave
repnz
cmpsb
cmp
test
shrb
aaa
popa
fwait
addl
test
mov
push
xchg
push
jmp
shlb
repz
mov
pop
lock
mov
inc
cwtl
mov
pop
jge
fcomps
imul
rcrl
push
cmpsl
adc
jmp
popf
pop
add
arpl
cltd
hlt
add
movsl
pop
shlb
push
imul
insl
outsl
daa
adc
or
add
mov
les
sub
jg
mov
insl
psubq
fsubs
addl
test
adc
add
jne
movsl
or
xchg
push
and
pop
cwtl
shrb
mov
add
jge
fistl
hlt
add
sub
dec
and
jo
xchg
add
rcll
adc
repz
fnstcw
imul
jno
add
inc
jl
lods
xchg
test
cmpsl
add
ret
fildll
xor
ja
fidivl
xchg
sarb
test
push
mov
cli
adc
pop
push
incl
add
insl
jb
roll
add
add
test
andb
testl
dec
int
jle
cwtl
xor
adc
or
arpl
sbb
lock
imul
lret
test
add
call
mov
xchg
adc
cmp
rcrb
ficoml
mov
popf
add
sbb
mov
mov
jp
pop
xchg
insb
sub
xor
test
movsl
int3
sahf
add
inc
add
lcall
sbbl
test
out
ja
dec
sarb
push
sbb
xchg
dec
pop
pop
and
push
mov
sbb
fisttps
jnp
mov
add
jno
daa
push
xchg
in
inc
add
icebp
addr16
jbe
ds
mov
enter
xlat
cltd
ja
xor
aam
or
or
add
pop
xchg
rolb
xchg
jle
ja
add
popa
pop
movl
mov
sbb
push
sarb
ds
sarb
mov
cmp
loopne
call
daa
push
jg
inc
rcrb
cmp
xchg
add
pop
lcall
inc
mov
xchg
dec
cwtl
dec
add
jb
adc
mov
mov
int3
mov
cmp
add
sub
xor
cli
dec
inc
je
inc
ljmp
jne
stos
fcoms
pop
cld
shlb
add
clc
test
mov
or
xor
sub
loopne
mov
dec
push
mov
jmp
test
out
push
cltd
mov
pop
lods
add
sbb
test
std
and
pusha
lds
sub
rolb
sub
repnz
add
or
ret
imul
sbb
add
call
fwait
sbb
out
sar
nop
dec
int3
cmp
pushf
dec
and
mov
cmp
mov
stc
dec
stos
jne
loope
test
and
int3
je
push
jns
cs
rcrb
mov
rolb
icebp
in
add
push
sub
and
jl
sarb
add
call
insl
das
and
mov
pop
xlat
mov
xlat
pop
stos
popf
jno
lret
es
js
daa
movsl
adc
xchg
jne
lfs
add
and
nop
outsl
and
mov
dec
psubd
jmp
or
daa
notl
fldenv
xor
push
jbe
add
cmp
cmp
add
sub
std
es
cld
push
add
cmp
imulb
xchg
lea
push
add
in
lds
jl
add
out
push
or
movsb
dec
adc
adc
setge
lret
punpckhdq
je
rorb
movsl
pop
decb
jne
jae
scas
cmp
pushf
dec
adc
cmc
sbb
mov
mov
push
add
pop
lahf
ficoms
rol
pusha
xlat
add
aam
or
mov
les
sub
leave
pop
pop
negl
cmp
push
andb
clc
jecxz
pop
add
push
mov
dec
adc
push
dec
adc
nop
addl
add
or
add
and
test
sti
add
pop
outsl
mov
pusha
push
cmp
and
dec
add
test
xchg
add
lretw
sub
add
inc
push
adc
jo
add
js,pt
inc
sar
test
psraw
mov
mov
cwtl
in
mov
call
xor
out
aas
push
lahf
pop
and
shr
inc
cmpw
xchg
dec
ss
cmp
scas
sub
popf
fsub
push
pop
inc
xor
mov
aam
je
sbb
add
iret
xorps
sub
pop
gs
add
popl
cmpsl
in
mov
jnp
push
loopne
stc
add
test
pop
sbb
push
pop
mov
xchg
testb
push
sub
test
mov
mov
adc
cli
insl
clc
lcall
add
enter
nop
jns
ds
cmpsb
and
pop
cmp
and
xor
repnz
push
movsb
mov
sbb
sbb
add
cmp
add
dec
mov
add
aad
es
into
xchg
ljmp
sub
loop
add
push
iret
add
xchg
mov
scas
fwait
jle
movsb
jbe
mov
xchg
mov
sbb
dec
add
ffree
cmp
add
cmp
les
xchg
xchg
and
lret
xor
enter
add
jno
add
push
xchg
sbbb
push
add
iret
mov
jl
xchg
add
pop
testl
xor
sbb
jae
mov
push
dec
fiadds
imul
jge
xchg
adc
lods
sbb
aam
pop
mov
mov
movsl
add
mov
test
inc
add
mov
cmp
or
add
test
push
lret
movsb
loope
hlt
je
xchg
divl
mov
add
or
xchg
xchg
cmp
push
aaa
add
or
test
sbb
je
or
fistl
aad
mov
icebp
mov
ret
das
mov
xchg
or
enter
aad
sarb
clc
xor
cltd
fcom
or
ljmp
jnp
add
and
call
xchg
inc
sar
out
jne
dec
inc
lock
or
jg
push
add
cltd
test
mov
inc
je
and
adc
gs
add
lret
add
push
and
rolb
inc
std
add
push
push
dec
adc
mov
verr
and
cmc
inc
add
scas
ret
push
test
push
negl
lcall
or
lahf
ja
je
mov
push
or
roll
mov
xchg
jne
cli
and
inc
nop
add
je
stos
or
jmp
adc
and
dec
sub
sbb
push
movb
pop
lds
add
pusha
cld
cs
mov
jg
add
cmpsl
push
fs
mov
jge
mov
lods
movsl
add
push
and
dec
cld
mov
add
xchg
clc
or
pop
push
add
xchg
push
cmp
add
mov
xor
push
sbbb
add
dec
add
sbb
cmp
pop
xchg
std
fcom
pop
add
aad
and
add
cli
push
stos
mov
movsb
xlat
shlb
add
rcll
gs
aam
jne
out
add
pop
jmp
out
daa
ds
sbb
xchg
add
or
pop
push
shrb
inc
call
std
add
out
mov
push
mov
ljmp
xchg
jbe
push
aad
mov
mov
xlat
mov
pop
inc
rorb
faddl
dec
jns
pop
arpl
and
cmp
imul
mov
out
shrl
add
mov
dec
repnz
sub
cmpsl
pusha
in
jno
add
mov
cmp
mov
cwtl
out
jg
add
jbe
lods
lds
pop
minps
xchg
push
pop
dec
pushf
mov
data16
cmp
pop
pop
push
sub
sub
nop
ljmp
add
jle
in
rolb
test
mov
add
int3
mov
and
popf
add
fs
loopne
or
lods
cmp
stos
add
mov
dec
mov
addb
mov
push
add
movsb
icebp
add
xlat
mov
leave
mov
ret
adc
add
icebp
lcall
out
add
stos
pop
mov
sub
rolb
clc
popa
jbe
dec
and
faddl
lods
push
mov
std
add
xchg
repnz
push
add
lcall
stos
xor
repnz
mov
mov
out
pop
xor
divl
cmp
xor
xchg
jne
add
adc
je
push
add
fucomi
rclb
dec
add
stos
lea
cmpb
pop
inc
mov
add
pop
jle
add
outsb
subb
pushf
scas
add
push
push
mov
push
movsl
inc
pop
rolb
add
add
rorl
xor
stos
je
add
or
test
mov
bound
int3
xchg
pop
and
mov
add
pop
sbb
jns
xchg
out
and
ltr
sbb
cltd
ja
add
adc
lahf
mov
ffree
jle
add
imul
cs
add
sbb
jge
xor
add
jb
addl
and
add
sbb
jne
int
add
mov
and
fsubr
inc
sbb
fidivs
loope
add
cmc
or
pop
sub
daa
loopne
aam
ljmp
xchg
pop
movsl
pop
add
xchg
int3
jnp
jl
call
adc
lods
call
and
xor
pop
adc
dec
push
pusha
cwtl
lret
es
loope
cmp
cmp
aas
lret
aaa
cmp
bound
es
pop
cmp
lret
dec
ret
push
les
imul
das
add
out
dec
push
call
jmp
stc
jns
inc
push
xor
dec
pop
iret
dec
adcb
sub
in
test
add
sub
mov
push
in
in
pop
fsts
sbb
adc
es
add
call
in
xchg
add
aad
cld
jbe
add
jnp
or
mov
cmpsb
sub
push
adc
pop
movsb
dec
clc
repz
in
imul
addb
and
mov
adc
sbb
xchg
inc
pop
mov
inc
ret
fs
add
imul
daa
clc
push
dec
add
and
add
sarb
cmp
notb
nop
and
adc
pop
pop
loop
mov
jl
add
xchg
sbb
std
cmp
cmp
ds
mov
mov
sub
inc
daa
push
and
mov
icebp
sub
imul
sbb
mov
addl
or
add
scas
push
adc
dec
popa
sbb
add
imul
imul
dec
inc
jnp
or
xchg
push
dec
je
adc
cmp
add
xor
add
sub
inc
stc
pop
movb
sub
popa
mov
ret
jne
mov
insb
and
pusha
shlb
or
cmp
mov
add
icebp
loopne
mov
jp
add
mov
pop
xor
loope
outsl
repz
mov
pop
push
leave
sub
jle
add
sub
sarw
pop
imul
dec
sub
lret
and
test
dec
sbb
add
cmpb
add
and
jne
mov
jbe
aas
lret
pop
andb
add
mov
popa
mov
mov
roll
out
cmp
test
divb
inc
nop
xor
aas
xor
add
adc
ja
mov
xor
or
dec
mov
es
hlt
rcr
adc
xor
adc
pop
popa
out
mov
or
add
add
imul
inc
push
pop
push
lea
sbb
sbb
sub
clc
xor
jo
xor
jns
stc
fisttpll
lret
shrl
scas
ret
add
aaa
scas
ljmp
lods
movsl
inc
push
sbb
and
xorb
add
stos
add
ljmp
outsb
into
loopne
mov
mov
sbb
dec
lahf
movsl
addb
pop
adc
push
lods
cmp
call
push
pusha
xchg
xor
add
jne
scas
pop
cmp
rclb
and
cli
push
sarb
xor
jns
inc
arpl
sub
xchg
adc
arpl
add
test
sub
idivl
aad
add
adc
popa
dec
mov
pop
mov
add
cmp
inc
aam
xchg
faddl
ror
ss
test
stos
add
jne
ljmp
sub
xlat
aas
mov
xchg
mov
daa
jbe
loopne
add
lock
sar
insl
add
mov
stos
add
arpl
js
das
jecxz
movsb
pop
rcl
mov
sbb
addr16
into
mov
pop
mov
ljmp
add
jnp
cmc
push
xchg
ja
sahf
add
lret
sarb
orb
push
sbb
xchg
rclb
dec
hlt
add
jbe
shll
stos
in
fdivl
jle
jb
add
shll
add
push
imul
daa
or
call
negl
and
jb
add
mov
add
rcl
push
dec
jp
add
jl
or
sysret
test
xor
push
ljmp
dec
sub
imul
xchg
add
inc
or
mov
imul
jg
popf
pop
mov
aad
inc
sti
add
popa
lea
add
push
mov
add
popw
adc
add
jb
cs
imul
push
inc
push
add
fs
data16
pop
fsubr
sub
fbstp
je
push
jne
mov
add
test
aam
dec
cmp
add
adc
in
xor
sbb
jle
and
add
xchg
adc
push
cmp
mov
popf
push
mov
add
shrb
test
test
arpl
add
mov
mov
enter
addr16
adc
test
add
mov
sbb
xlat
bound
push
mov
xchg
add
push
icebp
lods
sbb
mov
push
dec
cs
fnstsw
setae
add
inc
bound
push
ret
jno
loopne
cmpsb
fildl
rclb
mov
psubsw
jp
rclb
mov
sub
enter
add
push
sahf
or
jl
lret
cmp
lahf
popf
fstpl
push
ror
sti
fcomip
or
std
lcall
mov
pslld
mov
mov
push
push
stc
repz
mov
jl
stos
lret
pop
std
loopne
int3
mov
pop
add
popa
pop
les
out
mov
clc
in
add
mov
test
jmp
xchg
push
sbb
sbb
dec
xor
call
add
pop
andb
dec
add
sbb
lds
rorb
and
imul
mov
fs
add
fidivrl
jne
xchg
roll
push
cli
and
inc
xorb
pushf
and
cmc
and
incl
lds
jg
adc
pop
sub
or
add
inc
mov
push
rclb
jp
ljmp
aam
sbb
xchg
push
mov
movsb
or
sub
out
jns
or
roll
jg
lahf
push
repz
jmp
fs
gs
or
add
insb
sub
lods
loopne
add
ds
xor
loopne
add
xchg
out
lods
adc
pop
arpl
cmpl
nop
insb
add
adc
dec
adc
clc
fnstsw
leave
shrl
push
add
movb
cwtl
add
push
add
xchg
xor
and
add
adc
push
test
pop
and
xor
xchg
or
in
lods
jge
cmpsl
popa
add
movswl
outsl
or
ja
and
push
or
in
cld
ret
cmp
fldl
les
iret
adc
inc
xor
sarl
dec
xlat
fcom
cs
jae
add
rorb
xor
lret
sub
inc
cmp
sahf
movsb
dec
lret
mov
add
fldl
nop
aad
packsswb
push
sub
sub
cmpb
jg
fcomps
or
inc
or
xchg
cmpsl
jno
add
mov
and
inc
test
mov
out
mov
or
loope
popl
xchg
mov
flds
jg
fdivl
hlt
ret
movl
mov
mov
mov
shlb
lods
sbb
push
pusha
jo
pop
insl
clc
es
inc
adc
adc
add
jno
dec
add
push
inc
and
loop
invd
sub
aad
pushf
cmc
push
andb
imul
fwait
mov
jne
mov
mov
jmp
add
shll
add
shll
inc
inc
mov
add
arpl
rcrb
mov
jno
out
rorb
dec
sti
sub
stos
hlt
std
mov
mov
pop
inc
test
jno
jne
sbb
push
ficompl
rorb
mov
pop
int
outsb
add
cmp
pop
add
sbb
pop
sub
fcompl
aam
or
and
clc
lock
or
mov
dec
movsl
cmp
div
insb
and
add
dec
mov
add
aas
mov
add
inc
sub
cmp
mov
in
aad
add
es
sub
leave
and
iret
int
scas
outsb
dec
dec
push
addb
add
push
mov
pop
mov
push
into
dec
mov
add
das
mov
rcrl
aaa
sub
adc
mov
mov
jmp
push
pushf
mov
pop
divb
and
lock
add
cmp
or
idiv
andb
mov
ljmp
roll
jmp
adc
add
mov
flds
test
bound
or
ds
sti
mov
je
movsl
stos
jbe
clc
push
push
and
add
cmp
pop
insb
sub
add
jbe
or
add
subb
mov
leave
push
add
addb
cld
add
mov
add
cmp
cli
mov
add
mov
in
add
jae
test
add
sub
scas
pop
and
mov
add
or
pusha
out
add
clc
aaa
inc
add
push
stos
sub
gs
subl
cmpsl
lcall
or
mov
cmp
jle
lahf
sbb
pop
clc
adcl
sub
add
or
and
pop
jnp
out
xorl
and
jbe
xchg
scas
pushf
pop
rolb
std
add
and
adc
xchg
psrld
inc
or
sarb
ret
fistps
jb
mov
test
mov
cmc
rcl
popf
add
mov
outsb
add
lret
aas
inc
data16
jecxz
sub
add
inc
add
push
or
rcrb
sbb
test
add
std
cmp
and
adc
shlb
sbbl
int
wbinvd
push
and
pop
xchg
jo
sahf
add
sbb
add
aam
xor
jmp
lods
popa
std
pop
cs
subb
flds
ljmp
fmuls
add
inc
mov
cli
and
pop
push
sbb
loopne
push
dec
or
add
adc
mov
add
jp
jmp
pop
add
in
divb
ljmp
xchg
and
add
adc
rorb
cmp
loopne
mov
mov
inc
sbb
jp
add
fdivrl
stos
mov
push
push
dec
js
cmp
or
sub
push
test
push
mov
push
stos
adc
xchg
pop
add
test
or
cmp
hlt
add
or
push
push
adc
sbb
in
roll
dec
add
cli
bound
incl
push
dec
and
cltd
inc
sbbb
add
pop
rolb
cmp
add
or
xchg
cmp
add
and
std
add
cmpsb
or
push
inc
push
jl
adc
test
aas
rcll
inc
xchg
jbe
adc
xorl
stc
aam
xchg
cltd
ret
jmp
add
pop
movsl
scas
pop
aas
mov
pop
dec
cmc
xor
cs
mov
push
mov
adc
sbb
mov
shll
aas
mov
xchg
add
pop
add
and
push
xchg
jle
add
mov
lahf
add
lock
sbb
inc
add
movsl
jle
les
enter
dec
hlt
mov
das
add
xchg
dec
int
jp
push
add
xchg
mov
lret
inc
fstps
push
fsubrs
sub
enter
scas
add
mov
adc
push
adc
xchg
daa
in
add
inc
push
add
pop
sahf
push
add
fistpll
xor
ror
add
pop
or
inc
fdivr
imul
cmp
fstpl
cmpl
loopne
inc
in
add
xchg
jae
mov
cs
sub
int
in
popa
sbb
ret
imul
add
inc
or
subl
jae
imul
add
pop
mov
sub
sub
mov
addb
fcoml
inc
dec
add
or
loop
adc
cwtl
xchg
sbbl
jmp
cmp
xor
cmc
adc
pop
iret
add
and
or
mov
jno
push
add
out
add
leave
repz
cmp
adc
cmpsl
cld
popa
flds
ficompl
pop
addl
add
orb
movsb
or
add
push
add
inc
mov
nop
push
arpl
push
add
jmp
out
or
fs
jo
notl
xchg
jae
add
push
or
pop
cmp
clc
adcl
subl
ret
stc
cmpsl
sbb
push
add
scas
jae
jne
mov
push
or
mov
sahf
mov
aaa
pop
les
adc
and
out
and
add
movaps
xorb
or
sbbl
or
or
pop
cli
push
dec
xor
xor
dec
jne
add
jge
movsl
add
inc
insb
and
mov
scas
lret
xchg
add
addr16
xor
test
add
pushf
lret
mov
lds
cmp
js
add
repnz
xchg
add
jb
add
fdivrs
imul
cld
fdiv
gs
adc
cli
dec
in
mov
add
inc
fdivl
or
loopne
adc
sub
mov
add
gs
or
add
addb
dec
adc
movsl
int3
nop
aaa
add
xor
add
adc
jo
xorb
stos
mov
sbb
enter
sbb
lods
jo
mov
and
xchg
xchg
call
outsb
cmp
inc
leave
je
aaa
jl
in
fs
mov
push
dec
clc
dec
fisubl
and
jbe
verw
ret
roll
stos
jecxz
shlb
adc
push
cmc
mov
inc
add
pop
lret
sbb
movsb
repz
add
jnp
repnz
inc
or
lret
add
cmc
push
aam
mov
pop
push
repnz
add
lcall
and
adc
add
xchg
jmp
and
add
xchg
pop
jo
dec
idivb
cmpl
mov
js
mov
add
clc
jmp
cwtl
push
cmp
in
sub
imull
add
inc
mov
jle
and
sbb
loopne
jmp
mov
and
mov
dec
mov
add
outsl
cwtl
dec
cld
out
pop
jmp
dec
test
mov
and
into
or
add
xlat
outsl
out
jge
inc
add
cmp
sti
add
sbb
cmp
add
hlt
out
test
cmp
mov
dec
mov
ljmp
inc
jmp
or
jmp
mov
jge
ds
rorb
loope
mov
xor
ss
sub
test
xor
adc
jbe
mov
out
cmpsl
jns
dec
ja
xchg
loop
jl
inc
xchg
subb
daa
jg
jns
mov
jbe
and
xchg
add
push
mov
ds
sub
push
fmul
add
popa
loopne
and
cmp
xor
or
pop
test
clc
jne
inc
cmc
nop
gs
push
mov
mov
mov
pop
sub
add
push
iret
call
add
out
clc
loop
add
xchg
xchg
adc
xchg
int3
xor
das
mov
push
jmp
dec
insb
sub
dec
int
leave
orl
lock
xadd
dec
and
add
and
andb
jg
cld
cmp
mov
add
and
or
in
je
mov
fsubrs
movsl
jge
dec
stos
xor
push
aam
pop
adc
inc
and
imul
push
push
mov
add
mov
add
rcl
inc
enter
cmp
jp
add
inc
shll
pop
and
enter
pop
bnd
fwait
jg
mov
pop
xchg
add
ret
jmp
mov
or
push
addb
add
or
pusha
push
dec
dec
sbb
lds
std
outsb
and
stos
inc
loopne
add
push
xor
push
add
sahf
mov
lock
sbb
mov
adcb
dec
pop
pop
scas
pop
mov
add
movsl
add
cltd
push
adc
jp
pop
adc
mov
inc
and
fstpt
add
xchg
rcll
in
add
mov
xchg
ja
adc
jecxz
mov
add
cwtl
lret
incb
pop
test
push
jge
dec
adc
add
mov
and
pop
and
dec
sub
cmp
sarl
lahf
sarb
add
js
cmp
cmp
push
sub
add
hlt
jle
gs
push
cli
ret
adc
mov
dec
sahf
push
loopne
loope
mov
cltd
jecxz
arpl
adc
rolb
mov
leave
clc
movl
aaa
and
jp
cmp
add
jno
pop
cld
or
adc
movsb
jge
sbb
sbb
stos
dec
jo
add
mov
mov
test
insb
ficoms
in
pop
jle
testb
int3
pop
cwtl
pushf
dec
push
add
push
inc
pop
jmp
jmp
std
xor
aas
add
add
arpl
mov
cmpsl
ret
dec
sub
sbb
movsb
out
sbb
mov
mov
int3
fdivrp
add
mov
dec
pop
pop
mov
lret
mov
pop
or
ljmp
popl
xchg
std
add
addb
push
or
add
hlt
inc
shl
sbb
shrl
jmp
jne
push
hlt
add
lret
ficoms
jmp
test
out
add
incb
push
inc
faddl
dec
sub
adc
loopne
fnstcw
les
mov
add
inc
fmull
rcll
or
call
mov
and
add
int
xchg
int3
out
add
cltd
rol
sbb
in
inc
in
adc
loope
jnp
fiaddl
subb
stos
jl
add
push
add
shl
dec
add
cmp
and
aam
int3
or
xorl
push
push
cmp
push
sbb
pushf
mov
rcrl
add
xchg
push
div
rclb
pop
cltd
lahf
xchg
push
add
aam
add
cmpsb
and
out
mov
cli
sub
in
jo
in
pop
sti
mov
in
inc
mov
push
inc
push
roll
xchg
pusha
inc
cmp
push
rolb
push
leave
lahf
jns
add
pop
movsl
loopne
jb
add
cmpb
icebp
jmp
arpl
push
js
aaa
imul
stos
and
testb
and
jnp
or
stos
in
add
leave
add
in
mov
pop
jecxz
add
cmp
ja
push
ljmp
fimuls
das
dec
stos
leave
pusha
inc
iret
std
or
and
ficoml
lret
dec
add
out
adc
inc
pusha
pop
jmp
push
addb
dec
push
add
fs
out
lods
sti
fiadds
in
mov
scas
sub
inc
add
xor
fldt
add
inc
mov
loop
dec
cmp
jmp
idivb
add
setge
inc
loopne
das
xchg
stos
or
aad
out
imul
add
xor
sbb
scas
sub
add
aaa
sub
cmp
leave
add
scas
sub
jmp
popl
pusha
sti
stos
push
mov
dec
cld
test
stc
pop
sub
orb
add
cmp
rorb
add
flds
fwait
sub
clc
cli
adc
pushf
cwtl
pop
xchg
dec
enter
dec
aas
push
mov
cmp
insb
in
and
pop
sub
je
add
pop
or
in
push
jne
pop
add
lods
xor
push
add
jl
loopne
adc
daa
or
sbb
inc
fs
jbe
add
stc
xchg
xchg
jmp
loopne
and
fimull
inc
or
fiadds
adc
xchg
call
enter
das
add
adc
outsb
icebp
mov
push
add
add
jmp
mov
stos
sub
in
add
mov
jbe
clc
out
loop
stos
lahf
movsl
inc
sub
iret
mov
pop
adc
pop
and
add
lret
in
pop
and
add
dec
dec
sub
adc
xor
cmp
call
dec
mov
add
jmp
sbb
gs
mov
jne
stc
js
jge
add
push
ret
inc
addr16
jns
add
jno
or
aam
push
loope
adc
rcr
xchg
add
stos
daa
js
push
add
mov
shrl
lods
mov
mov
pop
mov
ds
lcall
mov
jae
jne
jge
adc
inc
and
rcll
mov
push
mov
sbb
cmp
pop
inc
push
repz
mov
add
adc
clc
adc
xchg
sub
jmp
jae
and
jle
add
iret
inc
push
push
jle
add
add
mov
gs
xchg
mov
scas
cmc
sbb
fists
pop
dec
xor
sbbl
push
testb
mov
jmp
add
insb
cld
xchg
jae
jle
div
adc
add
hlt
scas
lds
xor
dec
pop
test
jmp
dec
and
and
xchg
pop
inc
add
enter
roll
mov
loopne
add
cwtl
fmuls
filds
addl
push
pop
lods
test
sbbb
dec
dec
push
adc
xorb
pusha
out
add
xchg
jbe
shlb
sbb
call
lahf
jno
dec
ljmp
sbb
popf
movsb
add
mov
gs
add
inc
fsubrl
cs
cmp
adc
push
xor
rorl
add
out
daa
pop
push
cmp
imul
jnp
or
pop
sbb
int3
jg
jb
add
std
jbe
sub
data16
inc
add
cmpsb
push
inc
add
push
dec
add
adc
cmpl
and
cmp
pushf
or
add
std
adcb
push
lock
scas
xorl
adc
xchg
jne
push
or
fwait
pop
out
test
jo
std
stos
outsb
test
sub
jp
add
sub
adc
push
test
add
outsl
dec
sub
push
les
clc
movsb
jno
lret
adc
in
cmp
lcall
stos
push
call
sub
add
pop
pushl
stos
dec
in
inc
xor
arpl
add
fninit
and
pop
sub
repz
loopne,pn
adc
and
jge
or
mov
addb
push
nop
cld
in
mov
add
iret
adc
jae
pop
movsb
int3
aam
dec
loopne
xor
sbb
ljmp
sbb
xchg
movsb
lock
jne
add
sub
test
ds
push
pop
in
cmpsb
add
nop
pop
mov
push
pop
xorb
push
add
sub
add
pop
mov
dec
pusha
push
cs
xor
and
add
push
aam
add
mov
dec
push
hlt
in
lret
xlat
out
mov
lahf
add
outsb
int3
mov
mov
jo
push
adc
jmp
into
sub
sbb
rolb
frstor
mov
push
cld
in
sbb
ja
mov
add
or
add
mov
mov
pop
lods
add
adc
fwait
andl
daa
xor
je
pop
dec
fsub
arpl
aas
sti
add
add
add
imul
xchg
xor
pop
jb
xchg
push
xor
int3
outsl
add
dec
or
mov
aam
addl
pop
add
and
cmp
mov
inc
dec
icebp
sti
cmp
mov
jb
add
push
inc
pop
add
jmp
rorl
xchg
lcall
add
mov
aaa
jp
mov
dec
fcmovb
push
icebp
fldl
add
add
inc
inc
jl
or
add
or
rcrb
leave
stos
loopne
mov
sahf
faddl
cmp
inc
lock
jnp
insl
dec
clc
ljmp
mov
xchg
ret
mov
les
inc
dec
adc
xchg
stc
add
mov
leave
idivl
push
inc
add
fstps
scas
add
loopne
mov
xor
inc
inc
and
pop
push
push
test
dec
cld
add
add
rcl
aam
mov
add
dec
cli
jne
xchg
add
adc
sbb
dec
pop
jmp
and
aam
pop
pop
ja
jecxz
jmp
mov
ret
sub
adc
mov
push
inc
push
adc
pop
add
xor
jae
pop
jle
incb
xchg
stos
sub
add
stos
pop
pop
out
scas
aad
movsl
push
stc
enter
movsb
in
sysexit
test
cli
mov
push
add
mov
sar
jmp
and
or
pop
mov
sti
xor
out
push
push
jge
sub
xor
mov
cmpb
mov
sbb
les
jecxz
scas
adcb
mov
push
call
push
lcall
lea
scas
cmpsb
cmp
dec
mov
adc
jnp
add
insb
cltd
push
inc
or
lcall
in
sub
mov
sti
pop
rclb
insl
push
jmp
or
dec
aaa
inc
xor
and
ret
loopne
push
add
xor
testl
jmp
std
or
inc
out
movsl
push
pop
mov
outsb
aad
inc
adc
mov
jmp
sub
add
mov
cmpsb
dec
push
add
cmp
ds
push
add
adc
pop
in
data16
sbb
xchg
lods
dec
add
fiadds
lds
xor
subb
and
shll
call
sbb
popf
add
mov
es
es
add
inc
adc
sbb
call
in
inc
jecxz
pop
add
dec
add
insb
inc
dec
pavgb
mov
push
faddl
push
mov
testb
and
xorl
nop
push
stc
or
dec
or
pop
xor
sbb
xchg
xor
inc
mov
inc
test
filds
dec
xor
push
pop
add
ja
out
movaps
jecxz
popa
in
sub
add
movsb
insb
pop
mov
fistpll
or
jbe
add
jne
mov
cltd
cli
push
out
orb
inc
dec
ljmp
xor
add
mov
imul
lds
xchg
add
fsts
fneni(8087
or
add
es
add
add
xchg
jne
negl
add
push
xchg
sbb
push
pop
xor
push
add
fdiv
aaa
add
and
pop
cmp
in
push
test
movb
sbb
mov
mov
push
add
testl
add
jbe
mov
add
loope
or
sbb
pop
add
adc
sbb
jne
es
push
and
addl
test
xor
cmp
cli
hlt
sahf
xor
shl
sbb
cmp
inc
lret
xchg
pop
ret
imul
or
bswap
push
nop
js
jb
sbb
cmp
xor
loopne
imul
xchg
mov
clc
scas
mov
push
daa
sti
mov
xor
adc
movsl
jae
unpcklps
xchg
add
jns
test
je
jo
jge
mov
sub
dec
addr16
mov
lock
loop
ss
addb
aad
adc
add
jmp
dec
jnp
mov
or
ret
into
cli
pop
adc
imulb
push
pop
pop
cmpsl
and
jo
jl
mov
stc
and
test
cmc
mov
push
mov
gs
outsb
lret
xchg
out
jo
xor
add
jno
mov
or
out
pop
fmul
cmp
pusha
lock
jbe
and
clc
mov
popl
adc
adc
jge
add
cld
push
fldt
roll
sahf
pop
push
and
in
xchg
pop
sub
inc
pushf
add
or
jnp
add
xchg
daa
imul
xor
test
cltd
jmp
add
fs
adc
popl
adc
adc
add
mov
xlat
xor
lahf
inc
sbb
jbe
imul
cmpsl
xchg
mov
add
jle
pop
or
roll
jb
dec
jg
mov
rolb
xor
cmpsl
aam
inc
mov
xchg
add
lea
or
xchg
and
mov
pop
and
mov
ficoms
out
jb
xadd
pop
dec
shl
movsb
pop
aaa
mov
sub
mov
xor
add
xchg
std
in
xchg
jo
movsl
add
lock
mov
jne
popa
mov
lea
dec
jo
dec
xchg
sub
xchg
xchg
add
shlb
adc
mov
adc
jns
mulb
aas
mov
add
pop
adc
dec
sbb
or
mov
notl
imul
in
push
adc
lea
dec
lahf
nop
pop
or
jae
jle
dec
inc
inc
pop
jmp
add
push
addr16
add
or
add
mov
jbe
xchg
movb
push
dec
sub
cs
add
push
sub
jmp
nop
test
int3
frstor
mov
sbb
aas
roll
popf
inc
or
jae
sbb
call
mov
fcoml
add
movl
xchg
loope
xchg
inc
adc
adc
test
fisubrs
xchg
dec
pop
dec
mov
roll
adc
jae
mov
adcb
push
cld
inc
or
dec
and
outsl
pop
add
cmpsb
adc
movsl
pcmpeqd
mov
outsb
cmpl
inc
inc
ret
lret
dec
adc
call
sub
jecxz
mov
add
cmp
loope
je
jle
mov
fldl
sbb
imul
push
aad
faddl
enter
add
mov
adc
and
sbb
popa
dec
cmp
add
inc
pop
sub
inc
push
stos
add
add
loop
pusha
inc
icebp
add
lcall
inc
or
add
or
in
mov
mov
test
add
mov
imul
inc
add
ficomps
movsl
jns
test
add
nop
mov
add
clc
fidivrl
test
sahf
cmp
pop
rorl
call
mov
outsb
incl
add
add
fcoms
push
call
dec
cmp
xorb
xchg
in
sub
adc
jle
in
lock
hlt
aaa
push
or
test
lret
sub
ret
push
push
adc
adcl
popf
shlb
inc
push
push
enter
add
aas
repnz
xchg
cwtl
cmc
inc
dec
pop
add
add
fldl2t
jp
inc
adc
jl
add
je
sub
push
xchg
add
sbbb
jle
add
jne
jno
mov
sbb
ljmp
aam
xor
xchg
js
mov
jae
add
or
call
jecxz
cltd
fildl
xchg
and
cmp
mov
or
inc
sti
dec
jmp
inc
add
ds
adcl
dec
cmpsb
cmpsl
cli
mov
cmp
mov
or
adc
jae
rolb
sar
jns
orl
or
xor
fcoml
add
sub
scas
or
cld
add
pop
mov
pop
add
iret
popf
pop
sbb
lds
stc
sub
pop
xor
and
add
cs
ja
cmp
es
xchg
pop
push
adc
add
cld
pusha
movsl
mov
add
sub
push
cmp
sbb
or
dec
les
adc
push
xchg
gs
push
sbb
cmp
pushl
jp
add
inc
jne
in
mov
add
out
clc
mov
push
adc
xchg
sbb
cmp
cmp
cmpsl
push
xchg
push
movsl
or
add
cmp
movsb
dec
lock
jmp
fists
ret
add
adc
and
add
dec
push
or
sub
loop
faddl
cs
sti
or
rcrb
xchg
add
movsl
mov
rorb
movb
adc
jmp
fsub
test
add
movsb
inc
dec
jo
das
jnp
add
pop
popf
add
out
sub
pop
jno
js
stos
mov
cmpsb
loopne
or
push
pop
lods
out
repnz
adc
push
pop
loop
add
imul
rep
dec
subl
mov
pop
stos
jl
outsb
gs
mov
xchg
dec
xchg
jne
add
pop
scas
cmp
adc
push
inc
mov
sahf
xchg
mov
or
lods
jg
cmp
gs
add
lret
scas
sbbb
add
adc
mov
mov
jne
push
out
rdmsr
ss
mov
xchg
add
enter
int
push
pop
into
jmp
subb
movsl
push
xor
fs
mov
xor
imul
imull
jmp
adc
je
pop
or
add
xchg
mov
add
mov
popf
test
inc
mov
inc
adc
lock
lods
test
push
sbbb
adc
cmc
cmp
xchg
int3
mov
lea
les
ja
sub
add
add
mov
xchg
mov
add
sbb
je
or
jmp
dec
xor
jp
fcompl
inc
adc
in
ds
sbb
fildll
jle
and
insb
addl
hlt
call
out
xor
faddl
dec
jne
daa
push
xor
mov
dec
inc
add
xchg
pop
pop
std
push
nop
in
clc
daa
pop
add
das
shll
inc
aaa
loope
mov
jle
inc
push
adcb
cld
into
push
add
or
xchg
xchg
fisubl
jmp
je
lock
sti
ret
nop
fadds
adcl
add
and
jecxz
pop
out
add
xor
add
dec
adc
sbb
add
xchg
cmpsl
stos
mov
sti
jno
add
das
clc
xor
aad
test
lea
js
repnz
fcoml
out
inc
test
xchg
lds
dec
notb
mov
stos
repz
lods
sub
popf
add
xchg
pop
cmp
fcmovbe
sub
add
jae
cmpsl
ja
xchg
jo
push
push
and
pop
fstl
enter
fs
ja
lds
xchg
cli
mov
cmpb
dec
push
xor
mov
jb
mov
enter
pop
jno
outsb
adc
mov
orb
pop
ds
mov
xchg
add
adc
xor
push
jl
in
mov
mov
sub
cmp
adc
or
push
add
loop
ljmp
adc
push
test
movsl
and
pushf
shl
add
cmp
nop
loop
jo
cmp
push
mov
lds
lret
add
or
push
dec
lcall
icebp
ffree
and
sbb
add
cmp
subb
push
add
inc
pop
pop
add
push
mov
add
xchg
xchg
jmp
aam
cltd
mov
daa
pop
shll
jns
cmpb
push
sahf
lahf
xor
cmpsl
add
adc
jns
sbb
xlat
cwtl
rclb
add
nop
dec
jl
mov
sub
inc
ror
rcpps
add
adc
movsl
sahf
jne
cld
add
cmp
sbb
pop
shll
inc
clc
and
and
into
jg
add
dec
scas
sbb
add
enter
pusha
add
push
pop
mov
xor
push
add
pop
add
push
push
cs
lds
cmp
clc
cmpsb
fldenv
adc
das
cld
dec
ficoms
popf
and
loope
xchg
in
lret
or
enter
mov
push
xor
add
test
xchg
push
or
pop
fwait
xor
push
add
in
sub
adc
pop
imul
shrb
jae
call
pop
pop
adc
mov
push
movntps
mov
pop
add
cmp
fistpl
push
cmp
jo
or
mov
inc
loope
adc
mov
adc
add
jne
add
jg
pop
insl
add
and
sti
xor
mov
inc
pusha
mov
test
repz
test
in
dec
xchg
add
addl
and
push
cmp
add
lods
xchg
push
and
cmp
sub
mov
xchg
shlb
add
popf
sahf
jae
add
adc
mov
inc
fiadds
ljmp
in
pop
das
insb
loope
mov
aaa
mov
add
mov
fwait
or
pop
add
dec
xchg
mov
adc
xlat
dec
dec
add
jo
jp
leave
ret
add
sti
push
sahf
rclb
in
cmp
inc
add
adc
push
and
adc
ret
mov
out
sbb
or
rorb
pushf
scas
add
or
shl
add
das
cmc
sbb
test
push
cmp
jnp
aaa
push
add
xor
inc
testl
xor
inc
add
push
pop
mov
inc
fldl
bound
and
jbe
sbb
lods
push
rolb
push
inc
aaa
or
push
incb
jnp
aad
and
stos
subb
data16
push
shr
loopne
add
repz
cmp
add
inc
cs
testb
cmp
xchg
rclb
loop
add
mov
pop
fcom
add
sarb
xor
push
pusha
add
mov
shlb
out
mov
add
mov
cmp
inc
push
jl
mov
push
push
sbb
sub
movsb
sbb
xor
xor
insl
add
push
ja
iret
jle
pop
sbb
scas
mov
rclb
add
in
inc
xchg
mov
fwait
push
addb
add
sub
dec
dec
add
mov
cwtl
pop
aas
inc
sbb
cmc
daa
cmp
test
add
mov
add
iret
or
xor
dec
add
jmp
cwtl
out
lds
sbb
add
xchg
inc
andb
dec
nop
pop
mov
daa
js
mov
jecxz
or
and
cmpsb
or
add
push
dec
inc
dec
imul
lahf
pop
ret
les
jle
add
mov
or
sub
jbe
add
push
in
out
pop
and
add
sar
dec
enter
push
sbb
inc
adc
jb
leave
cmp
mov
fistpl
pop
rorb
into
add
inc
arpl
push
mov
bound
xchg
xor
mov
add
mov
jmp
das
xchg
adc
adc
leave
pushl
cmp
cmp
ljmp
mov
cltd
add
lods
cmpsl
adc
ja
xor
pop
jecxz
mov
add
adc
pop
sub
and
push
hlt
add
mov
push
xchg
mov
mov
jecxz
mov
rorl
mov
inc
and
ficoml
cmc
les
pop
and
shll
cmc
loop
add
mov
adc
mov
fcomps
mov
test
sbb
xor
inc
sysenter
jmp
nop
test
mov
pop
xchg
and
push
mov
push
adc
and
cmp
jge
cltd
cli
xor
icebp
into
and
adc
rorl
add
xchg
lods
add
pop
ljmp
sub
inc
in
push
inc
add
scas
and
mov
lea
or
incb
lcall
add
mov
mov
jne
mov
jl
add
sarl
loop
and
xor
jmp
adc
add
fcmovu
lahf
loopne
scas
xor
roll
popa
add
inc
or
sub
hlt
jge
add
sub
imul
js
cmc
cmp
inc
or
test
add
mov
xor
mov
add
sbb
add
xchg
jnp
mov
add
add
ret
dec
sahf
nopl
and
insb
inc
adc
call
pop
mov
fmuls
adc
cli
and
push
sbb
jnp
jns
inc
pop
cmp
shll
mov
xor
lock
xor
lret
add
push
xlat
mov
adc
mov
or
add
jmp
pop
popa
arpl
or
inc
adc
add
fldt
testl
mov
jmp
pop
ret
or
push
adc
into
and
cmpb
fildl
pop
ret
loop
mov
add
cmpl
add
ret
rcrl
fadds
icebp
dec
movsb
sbb
xor
adc
pop
gs
rolb
xchg
fwait
pop
sub
inc
ljmp
dec
push
mov
inc
adc
push
push
in
adc
mov
mov
lret
adc
enter
cld
inc
sbb
push
mov
add
and
mov
into
cmp
inc
add
push
inc
adc
push
xor
push
push
dec
dec
sub
jmp
push
sbb
insl
jno
mov
add
dec
sbb
je
adc
push
inc
push
lods
dec
popa
jae
cmpsl
add
and
jbe
jb
imul
push
jne
sbb
sbb
adc
sub
mov
sahf
add
scas
pop
ja
inc
mov
out
inc
dec
je
shlb
push
sub
dec
mov
add
dec
outsl
inc
data16
adc
aaa
cmp
add
mov
dec
icebp
mov
push
lret
cmp
xchg
imul
mov
fldt
out
bound
lods
add
push
lods
jo
mov
push
mov
es
lods
inc
add
jg
ja
popf
pusha
jns
add
mov
dec
fprem
and
push
or
sub
mov
cmp
aas
add
cmp
pop
test
inc
mov
call
jb
imul
mov
add
or
rclb
jbe
jge
adc
icebp
sbb
add
sbb
and
stos
push
popf
lds
jb
add
mov
mov
pop
add
jecxz
push
or
or
sub
lea
mov
and
inc
inc
rclb
add
hlt
lcall
leave
mov
xchg
push
dec
add
mov
and
and
xchg
lods
mov
shl
test
shlb
dec
mov
mov
push
icebp
test
mov
push
jo
bound
jge
xchg
pop
jp
inc
inc
out
jns
addb
adc
test
shl
lahf
add
mov
sub
in
dec
add
mov
and
ja
adc
jbe
mov
sbb
add
add
arpl
add
test
popf
sbbb
test
push
ljmp
jno
movsl
xor
decl
lahf
mov
cmp
in
pop
das
cld
mov
insb
jo
add
scas
loopne
ljmp
enter
out
popa
push
data16
sbb
and
scas
mov
adc
mov
jl
pcmpgtb
loopne
pop
daa
add
filds
stos
cmp
lock
movsb
mov
push
gs
pusha
loopne
inc
pop
add
insl
cltd
inc
imul
add
adc
add
add
jae
jge
testb
call
xchg
adc
rcrb
cmpsl
adc
pop
pop
lcall
cmp
sub
mov
or
fsubr
inc
negl
js
cmp
inc
es
sbb
adc
pop
out
pop
loopne
ret
repz
sbb
xchg
xchg
push
inc
movsl
inc
mov
scas
add
aas
fs
lcall
add
cwtl
ja
jne
jno
push
pop
sbb
xchg
rolb
pop
inc
mov
dec
aas
jl
cld
ds
test
enter
hlt
inc
stos
pop
cs
lock
xor
pushf
iret
or
and
jge
or
ss
push
xchg
pop
icebp
inc
xchg
cmpb
sub
and
hlt
adc
xchg
add
je
inc
rcr
and
and
subb
and
add
rolb
loopne
cwtl
inc
clc
push
cmp
mov
inc
or
mov
dec
test
aaa
pop
sar
lret
aam
add
mov
inc
or
pop
sbb
in
mul
pop
inc
inc
add
jecxz
mov
loopne
pop
and
xchg
mov
add
test
push
pop
xor
add
pop
out
mov
call
lock
jg
ficoml
sahf
loopne
dec
and
xor
in
sbb
pop
ljmp
adc
lds
enter
mov
mov
rol
mov
aas
sbb
das
add
sbb
add
mov
cmp
pusha
and
add
bound
ret
and
je
mov
xor
inc
ret
test
js
fisubs
into
add
jge
inc
nop
arpl
movsb
mov
out
subb
sbb
and
inc
sbb
adc
lock
push
add
stc
or
adc
test
out
rcll
sbb
cmp
mov
xchg
test
shlb
xor
test
paddsb
cmpsl
popa
sbb
or
fxch
or
adc
add
mov
add
fadd
push
mov
jns
out
add
out
rcrb
pop
push
ljmp
mov
inc
mov
insl
nop
add
dec
pop
pop
and
nop
jl
jle
xchg
mov
sub
cld
lds
pop
shlb
sbb
add
inc
mov
out
add
shrb
pushf
jge
add
pop
fmuls
adcb
xchg
test
add
arpl
test
xor
loopne
ficoms
xchg
add
mov
fstpt
pop
add
movsb
xchg
and
xor
jns
jg
pop
pop
xchg
je
add
pushf
adc
jmp
movsb
enter
in
mov
stc
add
push
out
add
pop
or
or
jbe
add
repz
cmp
push
and
aam
mov
add
enter
pop
or
xchg
les
mov
sub
sbb
dec
add
cmp
add
jp
mov
test
xchg
ja
add
inc
gs
arpl
sarl
jae
out
add
dec
xchg
leave
call
add
pop
xchg
lret
push
adc
aaa
fs
enter
loopne
mov
fldl
daa
sbbl
das
jmp
dec
imul
out
pushf
cmp
push
pop
lock
pop
sti
fadds
xor
outsb
mov
inc
mov
push
aas
push
fsubrs
btr
subb
add
adc
push
jmp
shr
sub
loope
std
pop
ds
aad
mov
adc
ret
xchg
mov
add
push
loopne
add
pop
pop
add
inc
push
xor
scas
add
xchg
push
push
call
movsb
adc
push
ljmp
adc
cmc
jns
add
inc
movsl
dec
xchg
inc
hlt
mov
loop
jp
fnstenv
mov
and
mov
xchg
xor
popf
add
pop
das
cmp
jge
loopne
add
jbe
cli
jno
nop
es
mov
add
daa
rolb
lret
call
push
cwtl
xchg
push
or
mov
and
jle
add
inc
loop
cmc
mov
add
inc
ret
pop
xchg
cld
pop
fwait
add
cmc
add
movnti
sbbl
or
adc
adc
out
add
arpl
mov
or
shll
ficoms
mov
sbb
dec
or
clc
out
nop
mov
add
xlat
and
pop
mov
push
add
test
add
sub
lcall
shr
push
loop
inc
ret
inc
mov
or
add
lea
dec
rolb
mov
sbb
cmp
jl
sub
xor
push
xchg
sub
test
mov
ret
out
int3
fildl
add
sbb
or
sbb
add
popa
iret
lret
les
adc
in
xchg
es
add
lahf
xchg
dec
inc
test
scas
out
orb
mov
pop
mov
cmpsl
pop
sub
jmp
sbb
sub
push
outsb
lcall
sahf
outsl
lods
add
sbb
fldl
cwtl
insb
and
je
add
in
mov
mov
enter
ret
or
sbb
roll
fdivr
push
imul
cs
push
nop
loopne
clc
jecxz
int3
mov
add
dec
add
sub
push
jmp
movsl
ret
pop
add
jnp
call
frstor
dec
and
mov
jp
push
pop
lock
push
daa
xchg
push
mov
jmp
mov
xchg
xorb
cmp
inc
scas
lea
loop
mov
jmp
gs
pop
fmull
in
pushf
mov
lock
mov
inc
add
pushf
dec
lock
add
std
out
dec
add
xchg
mov
in
enter
adc
pop
mov
add
and
pop
mov
int
xchg
xor
jns
cmp
and
xchg
pop
dec
add
test
push
add
jge
xchg
outsb
jmp
jp
mov
into
push
movzwl
aaa
add
jge
add
es
or
test
add
xchg
repz
pop
add
add
cmp
cmpsl
ret
stos
add
inc
add
rolb
add
js
aaa
imul
sbb
mov
les
repz
loopne
cmp
and
or
or
dec
adc
mov
pop
cmc
aas
jmp
cmp
iret
nop
loop
sub
lret
pop
aam
sub
add
jb
pop
dec
push
xlat
add
sbb
aam
lahf
jnp
lock
xor
out
add
sub
push
add
xchg
out
dec
add
add
dec
gs
cmpsl
add
sub
mov
decl
fisttpl
add
sub
rolb
mov
push
xor
pop
dec
test
mov
add
add
dec
jne
hlt
mov
inc
cmpb
pop
mov
add
test
mov
cmp
or
mov
jo
sbbb
or
cmp
xor
call
icebp
pop
pusha
mov
ds
testb
sub
or
add
mov
clc
add
dec
ja
add
jne
cmp
inc
fdivrs
shlb
add
mov
cli
mov
call
js
fwait
cmp
out
or
sbb
push
push
les
add
repnz
sbb
add
add
xor
cltd
pop
adc
sbb
add
xor
insb
adc
add
dec
repnz
sub
test
add
sbb
add
sbb
sbb
sub
jp
mov
iret
or
ds
sbb
hlt
test
clc
push
lret
sbb
call
shlb
push
xchg
xor
xor
fwait
inc
cmc
lods
bound
push
dec
add
or
add
cltd
inc
adcl
lahf
int
jmp
xor
dec
and
add
pop
ljmp
sub
nop
popa
and
push
lahf
addr16
rclb
inc
imul
insb
loopne
popf
js
in
push
in
cli
mov
addl
inc
mov
das
in
xchg
push
pop
mov
dec
sbb
cmp
cs
cmp
fs
push
and
cmpl
or
add
jp
inc
shr
enter
aas
les
pop
push
or
sbbb
lahf
data16
add
push
int3
xor
nop
add
shlb
shlb
subl
adc
adc
aam
add
push
cmp
lock
push
dec
jne
mov
or
paddd
fimull
out
rol
pop
shrl
add
sub
jl
mov
add
jne
out
mov
add
ljmp
push
add
push
icebp
push
push
cmp
mov
and
fnsave
pop
mov
adc
mov
jecxz
add
rolb
ljmp
or
add
add
cmp
jno
dec
mov
loope
push
movb
fwait
arpl
add
inc
cmp
in
add
sbb
push
push
in
mov
mov
push
test
or
rol
push
mov
je
or
jnp
lods
psubd
repnz
inc
aam
pop
daa
xchg
add
ja
in
inc
pusha
mov
add
shrb
push
stc
lds
ret
aam
sub
lock
inc
adc
ds
push
loop
rolb
mov
dec
sub
push
inc
pop
inc
inc
xchg
adc
pop
push
add
call
push
aam
sbb
mov
fs
mov
cmp
push
jg
pop
pop
sbb
cmp
push
jnp
mov
inc
inc
mov
add
lea
dec
and
cmp
push
lret
adcb
and
sahf
add
fwait
hlt
adc
or
sbb
in
or
sbb
mov
inc
add
sti
inc
lds
sub
shrl
into
push
or
jge
xchg
inc
hlt
add
xor
hlt
mov
in
test
repz
mov
and
or
add
xchg
mov
dec
cld
or
or
add
sub
cmp
cmc
add
iret
mov
rorl
xor
push
fnstsw
adc
add
daa
xor
and
roll
xor
lahf
popf
add
or
jmp
xchg
dec
cmp
sub
push
inc
push
clc
or
add
and
adc
nop
rclb
dec
sub
push
call
es
xor
sbb
sbb
andl
lahf
lcall
mov
add
sub
dec
add
adc
jge
add
je
xchg
and
pop
adc
ds
add
adc
stos
add
xor
faddl
mov
and
jb
in
jb
je
nop
mov
cli
ret
xor
mov
fildl
adc
or
and
orb
loopne
mov
pop
in
add
lods
xor
stos
or
insb
or
push
add
adc
jl
jnp
les
mov
ffreep
jecxz
push
add
add
cmp
popa
mov
mov
call
loopne
push
pop
mov
pusha
adc
rcrb
cmp
cmp
movb
faddl
clc
cltd
rcrb
icebp
ret
in
jge
add
xchg
fcomi
jb
add
push
sub
mov
ds
in
sbb
clc
xor
mov
sub
pushf
fmul
jl
add
insl
je
mov
bnd
add
and
daa
add
inc
jl
hlt
sbb
dec
push
cli
or
fsubl
loop
call
inc
movsb
mov
sbb
add
addl
clc
pop
lret
pop
das
gs
test
rcrb
fdivs
inc
add
dec
mov
jae
mov
hlt
cmp
aam
push
and
jp
and
lret
addr16
loope
mov
into
jne
popf
leave
aas
nop
ja
lds
bound
in
aaa
adc
cwtl
jo
das
push
lret
adc
insb
pop
push
push
xlat
inc
pusha
cmpsl
out
scas
push
add
cmp
or
add
lods
out
lret
sub
add
xor
cmp
xor
in
rclb
inc
fidivl
shrb
repnz
daa
adc
mov
inc
dec
fidivrl
add
dec
scas
addr16
sbb
cmp
sub
mov
jmp
push
cld
out
test
loop
or
cltd
sbb
mov
inc
add
lcall
fcomps
inc
xchg
adc
mov
cmp
and
in
popa
xchg
popf
les
push
pusha
cmpb
int
lock
push
or
adc
loop
jle
mov
fcmovu
adc
mov
pop
movl
adc
call
adc
int
es
test
xchg
lods
sub
add
push
cmp
fs
inc
inc
js
mov
adc
push
add
push
leave
aad
xchg
mov
mov
sub
add
loope
mov
mov
add
sbb
add
cmpsb
jo
mov
jb
pop
inc
out
pop
add
repz
out
add
cmpsl
mov
push
xchg
mov
add
dec
ljmp
addl
adc
push
mov
xchg
sbb
jg
je
cmpsl
xor
out
add
add
or
lcall
sub
add
fsubl
push
icebp
cmpl
add
iret
cmpsb
or
add
sub
rorl
cwtl
sti
add
jl
jae
inc
mov
or
mov
xchg
xor
inc
test
rolb
sbb
movsb
jb
mov
cmp
sub
dec
mov
movsb
add
clc
popl
add
orl
pop
gs
leave
inc
add
roll
and
pop
and
mov
fimuls
dec
out
lock
fidivl
mov
in
movsb
pop
and
mov
push
dec
jle
loopne
incb
xchg
outsb
loopne
popf
cs
adc
jb
add
in
sbb
add
mov
adc
stc
add
inc
dec
push
mov
or
pop
cmp
nop
mov
cmp
and
pop
sub
xchg
cmp
lahf
pop
xor
nopl
lret
movsl
add
aaa
mov
add
jae
stos
mov
xchg
aas
xchg
xchg
pop
jb
xor
and
pop
push
jo
adc
push
adc
and
arpl
pop
repz
add
add
mov
or
mov
cmp
repnz
rol
je
jle
mov
push
push
pop
adc
inc
stos
push
sbbb
jno
mov
mov
dec
mov
lock
incb
xchg
popf
fcomp
or
add
in
add
mov
mov
in
xchg
out
stos
mov
or
push
xchg
in
sub
inc
mov
inc
pop
add
stc
loopne
addl
jmp
add
mov
mov
das
in
out
rorb
jno
repnz
cmpb
and
add
add
jg
inc
add
jae
mov
je
sbb
incl
and
in
mov
jne
mov
loope
cli
rolb
sub
and
sbb
jno
push
movsb
adc
enter
mov
test
roll
sub
add
adc
jo
or
xor
inc
loop
xchg
xor
clc
scas
add
fs
scas
subl
push
movsb
or
xor
lcall
sub
in
xchg
push
stos
and
movb
cmp
popa
jne
cmp
cmpsl
pop
pop
ja
loope
lea
add
das
push
mov
or
pusha
add
mov
ljmp
add
push
xchg
jge
add
cltd
orb
inc
inc
add
dec
add
ja
popa
sbb
icebp
sub
aas
add
sti
repnz
into
and
pop
xor
pop
add
mov
sub
sbb
outsl
int
push
push
repz
aas
mov
jecxz
dec
psllw
sbb
adc
sbb
jns
or
mov
nop
or
sub
add
xchg
pop
mov
nop
add
dec
mov
dec
sub
xsha256
cmpsb
adc
dec
mov
fwait
icebp
rclb
mov
xchg
or
mov
xor
aas
xchg
xchg
js
pop
jo
orl
outsl
dec
mov
scas
or
push
sbb
add
sti
loopne
mov
lahf
cwtl
add
shr
lock
stos
int3
mov
jmp
jg
and
and
in
cmpsl
fimull
pusha
call
fldl
les
popa
dec
cmp
jge
inc
xor
loopne
iret
add
cmp
das
add
loopne
pop
or
lock
add
xor
xor
bound
arpl
addr16
imul
jo
jo
add
jne
ja
jns
loopne
nop
cs
fimuls
or
dec
pusha
add
cmpb
jne
sbb
inc
xor
add
into
mov
addr16
mov
add
inc
mov
movsl
add
pop
adc
repz
add
cli
sbb
jl
cmp
das
add
push
in
rclb
int
nop
rclb
jae
cmpsl
sub
es
fildl
add
or
aam
data16
adc
mov
inc
xor
cltd
and
call
dec
jnp
add
fwait
adc
lock
lcall
inc
pushf
test
popf
or
cmp
loop
and
xor
add
sub
inc
in
jnp
add
xchg
cwtl
add
lcall
pop
ljmp
cmp
outsl
add
cmp
sti
xor
dec
sbbl
mov
rcrb
add
cwtl
lods
adc
lcall
and
testl
or
pop
or
and
adc
add
and
add
sub
adc
lcall
call
dec
pop
inc
add
push
and
test
push
clc
pxor
out
mov
fisttps
add
pop
mov
adc
ret
sub
mov
pop
or
int3
jne
xor
cli
mov
jg
sbb
mov
pusha
and
sub
mov
nop
shll
hlt
movsl
leave
xor
popa
clc
push
xchg
ret
int3
pop
add
add
dec
imul
lcall
add
test
sbb
push
or
mov
mov
aad
and
gs
or
cmp
mov
pusha
dec
push
add
inc
test
sbb
stos
in
ret
nop
cmc
loope
pop
xor
jo
add
mov
inc
inc
dec
jne
add
or
loopne
add
call
fstp
pop
mov
int3
js
cmp
jge
mov
or
and
aam
rcrb
sbb
lock
mov
xchg
clc
mov
andb
or
sbb
add
cmp
loope
dec
mov
jmp
cmpsb
dec
adc
sbb
fadd
jne
aas
sub
add
pop
sub
xchg
es
add
sbb
subb
adc
jo
mov
insb
dec
push
rol
xor
in
jns
push
sbb
lahf
fiaddl
sub
add
call
push
in
xor
jg
jmp
mov
hlt
inc
sbb
sbb
cmp
xor
ja
mov
add
ret
adc
jmp
scas
sub
movsb
add
xchg
mov
mov
inc
or
add
mov
push
in
stos
loopne
outsl
ret
push
sbb
pop
cmp
push
aaa
cmp
add
je
add
nop
add
adc
les
add
xchg
mov
mov
or
cmp
jle
xchg
jmp
in
push
jbe
mov
cmpsb
or
xchg
in
jns
add
shrb
adc
add
xor
jmp
add
xor
add
push
adc
fdivl
jg
add
mov
lock
insb
mov
test
pop
adc
mov
mov
or
rclb
test
adc
xor
test
lea
sbb
out
adc
clc
jae
dec
cld
inc
push
call
shrb
test
lahf
add
fs
in
cltd
test
add
adc
pop
add
jmp
cmp
lods
cs
fwait
mov
call
mov
and
add
dec
bnd
push
dec
sub
sahf
push
sti
shlb
dec
in
sub
in
popf
inc
int3
dec
mov
jns
xor
or
imul
scas
add
cmpsl
xor
out
adc
fwait
cmp
xchg
xor
sub
mov
stc
leave
xor
cmpsb
add
fcoml
clc
sub
loopne
xchg
add
inc
adc
sub
sbb
std
aad
cmp
pop
outsb
mov
aaa
or
cmp
repz
ficoms
mov
add
int3
jns
or
inc
xchg
je
add
fstl
xchg
push
or
mov
push
call
inc
loop
push
lock
in
push
test
cs
cld
cmpsl
or
add
out
loop
sub
stos
test
movsl
shll
subb
popa
sub
add
cs
loopne
out
push
jge
add
fxch
adc
loopne
adc
leave
push
cld
loop
jne
inc
jns
insb
and
xchg
add
xor
fs
in
cmpsl
dec
jecxz
adc
add
das
pop
scas
push
or
mov
mov
xchg
into
sub
in
xor
mov
popf
mov
push
and
int3
or
add
sar
and
or
orb
hlt
sub
aam
out
push
add
mov
adc
or
sti
in
cmpsl
dec
rcrb
or
imulb
dec
pop
test
cli
jmp
repnz
push
icebp
inc
add
inc
addb
add
dec
mov
rol
mov
push
add
push
mov
pop
aam
add
jp
mov
fisubs
add
xchg
inc
pop
add
sarl
in
hlt
xchg
jle
mov
fisttps
repnz
pop
cmp
loope
mov
mov
ret
sub
hlt
fs
insb
shlb
dec
lea
mov
fmull
add
cld
adc
std
adc
add
lods
dec
jne
jecxz
add
stos
ficomps
lahf
inc
xor
xchg
pop
jnp
adc
push
xchg
adc
js
add
jne
jge
or
outsb
inc
sbb
movsl
xor
jno
and
jbe
aad
dec
mov
or
pop
stos
pop
outsl
subps
test
fcmovnb
lahf
add
jbe
and
push
push
xchg
and
inc
repnz
icebp
dec
int
pop
jnp
rdmsr
test
and
sbb
testl
data16
push
xor
xchg
das
dec
cvtps2pd
addr16
xchg
add
mov
ja
mov
inc
xor
dec
in
aam
sbb
and
inc
and
pusha
mov
sbb
cwtl
xor
cld
hlt
mov
clc
fsubrl
inc
jne
push
packssdw
push
sub
inc
into
jge
jg
add
lret
ret
addr16
repz
fmull
arpl
out
push
and
push
cltd
fs
xchg
or
mov
mov
adc
shlb
dec
in
out
cld
clc
sub
je
mov
mov
int
push
push
or
push
mov
jg
sub
addb
or
jmp
punpckhbw
xor
xorb
test
imul
out
dec
out
dec
xlat
js
jbe
jbe
add
test
pop
jp
jo
outsb
repnz
fcomp
sub
pusha
test
movzwl
pop
or
push
or
adcb
pop
dec
ss
add
aam
repnz
adc
inc
mov
mov
add
clc
out
lret
jo
jge
add
xor
mov
scas
movsl
cmp
sbb
push
mov
push
and
adc
ror
in
mov
adc
lods
add
jge
stc
les
inc
add
test
mov
mov
fmull
daa
call
mov
push
rorb
pop
inc
or
mov
mov
jns
dec
push
xchg
ficomps
dec
pop
scas
orb
mov
adc
test
mov
push
sarl
push
dec
xchg
rcrb
xchg
lock
inc
mov
add
mov
inc
rolb
jnp
je
jg
add
cld
adc
sbb
add
or
and
loopne
testb
xor
into
aam
push
sti
add
xchg
sbb
or
add
orb
test
add
clc
lods
pop
and
sbb
or
add
out
icebp
dec
push
adc
pusha
lods
pop
call
nop
xor
jo
add
adc
sbb
dec
xchg
xlat
xor
pop
and
inc
loop
xor
add
je
sub
pushf
mov
repz
sub
lock
ficoml
xor
push
pop
cmp
add
dec
or
xchg
push
std
lea
add
fildll
xchg
and
add
push
xchg
outsl
pop
hlt
cld
inc
out
out
cmc
dec
mov
mov
stos
loopne
push
push
add
and
xchg
hlt
adc
ret
clc
fildl
add
mov
sbb
in
pop
lret
aam
mov
mov
std
sbb
push
rcr
cmp
xor
push
cmp
inc
dec
add
mov
mov
add
mov
ljmp
xor
xchg
mov
pop
mov
pushf
push
mov
mov
dec
rol
add
push
add
mov
add
push
sub
inc
push
dec
pusha
xchg
fmuls
gs
test
add
movsb
jne
pop
inc
add
cld
cltd
adc
pop
add
sub
inc
cli
add
add
pop
bswap
push
std
or
xor
movsl
dec
mov
jo
lea
add
in
sub
push
pop
add
sti
es
nop
sub
cmp
popa
imul
cmp
mov
cli
pop
sbb
and
mov
sbb
mov
fwait
push
push
add
fimull
cmc
lea
add
loopne
jmp
cmpsb
dec
decl
add
sbb
outsb
xor
sub
loope
add
mov
cltd
dec
add
xchg
jae
lcall
sub
mov
add
popf
dec
pop
add
into
cvtpi2ps
test
push
shrb
sub
and
lock
cld
push
hlt
and
clc
and
jns
jg
add
mov
add
sbb
cwtl
adc
mov
lret
sbb
fadds
sbb
mov
and
cmpsl
and
leave
test
add
adc
test
mov
or
cmp
idivb
es
add
imul
outsb
shrb
sub
scas
adcl
jo
push
nop
add
or
movsl
and
sar
xchg
add
adc
cmpsl
js
adc
sbb
in
sbb
pusha
push
lret
sub
pop
add
sbb
aaa
inc
dec
jb
add
fsts
jg
mov
fs
aad
aam
fcoml
dec
mov
push
and
push
xor
call
jno
mov
in
xchg
add
mov
sub
adc
or
clc
or
in
jg
and
dec
cmp
and
bound
or
inc
hlt
xor
fidivrs
and
xorb
add
mov
pop
and
and
leave
cli
das
add
jae
fnstenv
cmp
mov
mov
xchg
fildl
cmpsl
jno
or
pushf
sbb
or
scas
cld
jae
int3
arpl
jp
add
sub
jne
jo
dec
add
jo
add
loopne
push
iret
fwait
push
add
adc
cmc
loopne
je
add
xor
and
add
andl
int3
mov
and
shlb
or
xor
push
add
dec
sub
sub
add
lods
icebp
inc
or
mov
and
mov
and
repz
sub
push
adc
and
sti
negl
out
or
call
clc
xor
add
lods
les
jg
add
xor
faddl
add
sbb
mov
cmpsb
lret
iret
mov
pop
or
stc
xchg
cld
aas
cmp
sbb
add
out
dec
xchg
mov
ror
enter
or
fistpll
and
inc
xchg
pop
xlat
addr16
addb
out
cmp
mov
cld
in
divb
jne
sub
add
jmp
cmp
xor
inc
test
fstpt
cld
push
or
rolb
add
sbb
jg
lock
cli
jp
add
dec
test
pop
or
les
enter
adc
sbb
cmp
movsb
popf
inc
push
shrb
add
mov
sbb
xchg
add
pop
pop
test
ds
cli
pop
cltd
cmp
add
loopne
mov
add
addb
dec
js
add
lods
call
pop
add
push
inc
sbb
and
inc
cs
lods
add
sbb
cs
int3
jo
jl
cmpl
and
mov
or
add
call
loope
sub
jmp
add
adc
inc
jb
adc
push
or
arpl
lret
fmuls
das
test
pop
or
add
adc
cld
jno
loopne
dec
or
push
add
inc
push
mov
adc
test
push
popa
pop
into
mov
adcb
add
pop
add
stc
inc
jne
push
cmp
or
jae
cmp
fsubr
adc
jo
xchg
add
cmpsl
add
inc
pop
daa
sbb
dec
add
sub
and
sahf
adc
add
mov
adc
pop
jbe
push
or
movzwl
add
call
movsb
jb
aad
jne
and
sbb
sub
adc
add
stc
add
push
arpl
mov
scas
cmpsl
add
movb
add
gs
dec
aaa
add
inc
mov
mov
imul
mov
add
fs
add
mov
add
lahf
rol
add
and
sub
es
or
cmc
jno
add
push
and
test
xchg
cmp
dec
xor
mov
mov
adc
sti
dec
pop
sbb
or
add
mov
sbb
and
adc
shrb
mov
adc
inc
add
dec
les
xchg
sbb
lea
cmp
adc
cmp
in
mov
outsl
sub
xor
fs
mov
mov
adc
xchg
add
call
das
faddl
dec
pop
mov
sub
sub
shl
les
push
orb
xchg
mov
add
jb
push
add
xor
mov
adc
inc
or
cmp
mov
cmp
add
lods
test
mov
mov
call
mov
int3
inc
call
nop
stos
inc
lea
ds
sub
push
inc
int3
outsl
push
and
fstps
rolb
sbb
sahf
mov
xor
and
mov
sub
sub
dec
mov
add
xchg
fidivl
and
nop
mov
xor
pusha
clc
decb
loop
add
or
add
in
cmp
imul
push
mov
gs
pop
mov
xor
fcoms
adc
push
rolb
push
arpl
pusha
pop
mov
sub
lods
fimull
popf
popa
add
test
sbb
mov
xchg
dec
pop
push
clc
insl
outsl
push
jp
jmp
dec
inc
xchg
aas
mov
ljmp
es
mov
xor
add
add
arpl
mov
pushf
rolb
data16
adc
mov
test
push
insb
cmp
add
scas
test
lcall
push
es
iret
add
lret
add
mov
push
cmpsl
xor
loopne
lods
add
or
call
ja
lea
ja
sbb
stos
dec
jo
imul
addr16
add
dec
jno
sbb
in
push
icebp
fiaddl
mov
sti
cmp
or
ja
adc
dec
or
jns
std
ficompl
add
mov
push
add
jmp
dec
add
sbbb
daa
add
push
push
nop
cli
iret
add
jge,pn
pop
sbb
sub
jmp
pusha
add
inc
add
adc
cmp
xchg
xor
adc
sbb
sbb
push
jne
sahf
arpl
or
or
andb
push
in
pusha
dec
inc
xor
dec
cmp
enter
stos
adc
xor
xchg
add
inc
dec
das
cli
adc
cwtl
mov
push
lds
mov
sub
rclb
add
jo
sbb
insb
xor
xor
inc
add
push
data16
iret
sub
xlat
add
adc
add
bound
add
addb
lock
adc
daa
add
or
adc
xchg
orl
mov
lock
and
sbb
imul
xor
and
enter
adc
add
sbb
faddl
lods
daa
add
mov
xchg
adc
add
push
clc
mov
jb
add
ljmp
or
jns
cmp
filds
pusha
pop
je,pt
enter
pop
mov
or
lock
sbb
aas
jb
sbb
data16
sub
jbe
jge
pslld
sbb
pop
add
dec
les
mov
inc
or
jmp
xor
setnp
xor
mov
and
mov
xor
je
and
push
out
inc
push
orl
push
or
loopne
lock
add
les
repnz
inc
stc
aam
nop
xrelease
push
add
jle
inc
das
xor
out
psubusb
pop
decl
popf
mov
sbb
out
mov
xchg
dec
imul
std
sti
lea
push
add
mov
push
sub
push
jg
add
jbe
pusha
loop
or
and
push
mov
sub
push
add
jecxz
push
mov
lds
inc
fisubl
test
add
out
push
adc
testb
dec
pusha
adc
fmull
dec
add
cmp
add
or
fistpl
sub
mov
sbb
or
add
adc
lahf
or
jbe
pop
cmpsb
add
pushf
pop
cmp
jmp
jp
pusha
or
inc
add
and
dec
andb
adc
add
xlat
sub
lahf
xchg
inc
add
lret
add
sbb
or
out
add
gs
jo
orl
add
xchg
and
in
int3
jne
jnp
jae
add
popa
mov
test
sub
js
cltd
mov
roll
mov
add
jnp
stos
add
aaa
repz
add
mov
xorb
testb
jmp
xorb
mov
or
lods
sub
xorl
xor
les
push
and
sub
add
inc
add
sub
xchg
adc
jmp
xor
mov
flds
or
out
aad
jp
fisubs
sahf
xchg
js
ja
rcrb
cltd
testb
pop
jae
add
fisttpll
xor
testb
test
xchg
sub
pop
in
add
push
or
xchg
sar
cwtl
jle
add
mov
lds
pop
mov
or
jg
popa
subb
xchg
fs
or
aas
fsubrs
push
add
jg
xchg
fistps
jmp
push
daa
dec
push
bound
push
or
jne
rolb
mov
stc
jae
add
fisubrs
add
xor
mov
push
dec
add
push
xchg
adc
es
add
and
push
sbb
add
add
push
mov
push
nop
leave
add
adc
adc
pmulhw
or
scas
shlb
add
bound
sub
mov
adc
dec
cmp
or
cltd
dec
pop
mov
sbb
inc
stos
xchg
xchg
andb
inc
add
adc
rcrb
or
xchg
mov
mov
sbb
dec
icebp
xchg
lahf
in
inc
add
mov
es
sub
inc
adc
dec
xor
jle
inc
sar
push
pop
rolb
jmp
loope
jmp
push
sub
add
push
mov
stos
and
gs
add
inc
xchg
js
pop
add
adc
pop
fbld
loop
cs
out
dec
add
add
lods
add
xchg
loopne
out
mov
or
sbb
xchg
mov
icebp
and
add
add
push
in
sbb
mov
mov
mov
mov
mov
mov
cmp
daa
pop
xor
dec
add
or
xchg
arpl
dec
add
in
sub
or
add
xor
sbb
dec
sbb
lock
repnz
test
pop
cli
inc
movsl
cmp
xchg
add
lds
loopne
add
jo
xlat
popf
cmp
pop
orl
sub
mov
ret
push
add
mov
add
or
pop
mov
dec
push
jge
scas
sbb
push
fmul
rcll
jl
ret
push
and
in
inc
cmp
add
xchg
add
and
sbb
sub
or
stos
in
add
sub
dec
lret
repz
mov
push
mov
add
inc
mov
jns
cs
adc
in
scas
add
sub
dec
pop
iret
lret
inc
sbb
push
aaa
in
add
ja
int3
jnp
jmp
mov
int
xlat
adc
lret
push
cmp
call
nop
in
mov
fldcw
adc
jle
pop
and
sub
movsb
cmp
adc
enter
jne
cld
pop
xchg
in
fcomps
add
sbb
ret
dec
adc
cmpb
mov
in
mov
inc
add
or
movsl
push
cmpsb
fldenv
sahf
push
pusha
jp
mov
xchg
and
mov
sbb
push
push
xchg
cltd
add
or
rcr
add
jo
inc
or
or
and
lods
addb
loopne
push
sbb
js,pt
ret
inc
lret
lret
clc
jae
movsl
add
and
rolb
pop
mov
test
sbb
add
pop
mov
dec
and
push
add
mov
rclb
test
push
adc
popa
movsl
clc
scas
mov
fs
mov
pop
cmp
add
or
mov
add
pop
adc
adc
push
ds
sbb
push
sbb
and
xchg
sbb
enter
xorb
and
and
and
xorb
cs
cli
pusha
mov
loop
add
cmp
gs
cmp
lea
aas
or
add
adc
mov
dec
xlat
jmp
mov
add
test
push
push
push
push
add
push
dec
adc
pop
add
pop
or
xor
addl
and
xchg
adc
adc
pusha
sub
jae
mov
iret
sub
jmp
inc
mov
add
adc
cld
dec
xor
add
dec
out
xor
imul
popa
and
cmpl
and
sbbl
leave
and
add
aas
pop
or
lea
xor
add
js
lcall
push
or
repnz
mov
dec
int3
xchg
out
jno
jg
push
xor
roll
arpl
dec
leave
xor
jle
sbb
dec
mov
dec
sahf
inc
dec
leave
push
cwtl
jmp
and
dec
jb
add
mov
fdivrs
call
or
and
inc
aas
es
add
mov
js
mov
or
add
insb
dec
jns
xchg
sbb
pop
rcrl
mov
test
add
nop
pminsw
xchg
sti
cwtl
ret
outsl
jbe
mov
mov
sub
es
add
or
add
jge
and
loop
add
hlt
inc
mov
add
inc
fnstsw
and
enter
cli
add
dec
adcl
pop
inc
inc
test
shlb
loop
adc
or
or
xor
and
aaa
and
add
stc
inc
movsb
ss
nop
pop
sbb
or
mov
mulb
push
mov
dec
jno
movsl
fldl
xor
jge
add
ror
hlt
je
jo
adc
ret
shr
and
or
push
jno
addl
ss
or
mov
sahf
sbb
loopne
add
sar
pop
add
cmp
mov
mov
lock
inc
stos
inc
add
cwtl
movsl
pop
mov
xor
inc
dec
fwait
add
and
xchg
sbb
stos
push
mov
rorb
shlb
out
daa
pushf
push
cld
lods
test
rolb
lahf
and
inc
pop
int3
aam
pop
stos
es
mov
pushf
add
inc
xor
push
lock
xor
sub
xchg
add
xchg
ficoms
enter
dec
lahf
add
rolb
shr
out
or
inc
and
cmp
xchg
dec
and
jbe
aas
add
ficoml
and
inc
sub
imul
jl
cmpsb
dec
rcrb
daa
cltd
and
pusha
adc
adc
sub
inc
scas
je
add
pop
loop
jbe
add
sbb
xchg
cmp
inc
test
sub
adcb
mov
add
movsb
addr16
sub
jo
inc
add
nop
pop
xchg
or
popa
pusha
mov
jb
add
and
enter
xor
xor
pop
nop
sbb
jns
cmpl
add
and
adc
push
dec
add
js
xor
mov
scas
mov
js
or
dec
pop
xor
icebp
cli
xor
or
jns
rolb
cmpsb
repnz
hlt
jnp
cld
aaa
mov
add
adc
sar
inc
adc
adc
adc
stos
mov
sub
add
mov
jmp
xor
mov
xor
or
sub
les
rcr
movsl
ja
jle
add
sbb
in
scas
add
sbb
shll
xor
inc
sbb
fisubl
mov
mov
fs
sub
add
jne
daa
sahf
aas
add
ds
popf
push
push
outsl
lods
andl
les
imul
xchg
clc
mov
cmp
sub
pop
push
sub
test
push
add
mov
mov
add
leave
add
push
shll
adc
jge
mov
ja
add
sub
sbb
add
in
gs
or
add
es
call
cmp
dec
fiadds
sub
cwtl
pop
addr16
inc
daa
mov
jp
sbb
jmp
inc
jae
add
pushf
arpl
lret
dec
loopne
loop
enter
xchg
mov
mov
mov
dec
sbb
fsubrs
add
jb
xchg
inc
jl
pop
add
xchg
jo
shrl
idivb
mov
aad
inc
and
pop
xchg
sub
add
mov
out
mov
movsl
subb
cwtl
sub
add
jmp
clc
and
jae
movsl
testb
mov
add
mov
mov
das
mov
lock
add
je
xchg
mov
out
push
dec
test
dec
cmp
pushf
adc
and
inc
sbb
sub
sub
test
std
sub
fisubrl
xchg
pushf
jg
sbb
sbb
popf
adc
sub
pop
push
adc
add
testl
add
lds
add
inc
aam
punpckhwd
inc
xor
or
sub
add
sub
pusha
popf
mov
add
xor
xor
add
xchg
dec
daa
int
adc
pop
subb
scas
or
nop
adc
mov
mov
jg
mov
imul
fcoms
stc
add
or
inc
add
mov
jge
or
scas
add
add
cltd
outsl
mov
lcall
jmp
nop
ljmp
jbe
addr16
or
jmp
sbb
cmp
shlb
cmp
scas
add
dec
movl
subb
aaa
inc
xlat
xor
xchg
adc
inc
nop
add
aas
ret
mov
push
ja
in
js
jl
add
clc
lods
add
and
add
xchg
orb
sub
repnz
scas
into
aaa
fdiv
fmuls
add
xchg
cs
sub
lods
out
add
popf
adc
and
push
and
mov
xor
das
add
pop
push
add
rcrb
orb
stc
mov
test
popa
loop
ja
add
je
sub
pop
add
loop
mov
xchg
mov
push
cmp
cld
incl
imul
mov
iret
das
pop
bound
add
xlat
xchg
pop
and
sbb
inc
add
or
call
sub
add
or
cmp
mov
cmp
fadd
pop
sub
xchg
add
mov
call
cmp
dec
andl
jns
jg
jge
cmp
mov
mov
cmp
ja
jnp
push
inc
add
dec
test
jg
mov
xor
fs
je
and
push
add
stos
mov
sub
mov
and
jmp
ret
scas
into
popf
lret
pop
adc
add
cmp
gs
adc
inc
in
nop
daa
lock
pop
jb
adc
jg
ret
xchg
adc
js
popa
nop
scas
rorb
arpl
inc
outsb
jle
mov
call
das
decb
dec
push
sbb
inc
movsl
cmp
ljmp
add
add
pop
xchg
mov
lock
nop
lret
cmp
nop
filds
cltd
sarl
pop
dec
sub
mov
lods
aaa
fmuls
repnz
add
dec
repz
add
sarl
out
pop
and
stos
inc
ret
add
call
shlb
sti
nop
pusha
xor
jp
add
mov
and
cwtl
dec
pop
inc
add
or
dec
add
pop
pop
xchg
fldenv
loopne
jge
cwtl
subb
pop
xlat
cmc
mov
leavew
adc
and
mov
inc
cmp
xchg
loopne
push
repnz
testl
add
fs
add
dec
mov
mov
pop
adc
xchg
and
andb
and
sahf
dec
xorb
ss
push
push
fs
rorb
popl
es
cs
addr16
ljmp
lahf
push
shl
pop
xchg
add
cs
adc
add
stc
jae
add
fsubl
push
add
out
mov
fidivrl
fdivrs
pusha
fcomi
pop
call
push
les
imull
pop
push
repnz
or
jl
icebp
or
std
jbe
cmp
push
cmp
inc
push
orl
pop
mov
push
add
cltd
mov
mov
data16
clc
dec
mov
mov
jge
lahf
and
or
add
fs
clc
and
inc
xor
jb
add
clc
or
inc
add
lret
das
mov
dec
add
push
lds
fadds
cmp
mov
pop
cmp
jle
jbe
inc
cs
sub
sub
add
add
adc
and
inc
cs
lods
mov
mov
enter
nop
inc
cs
add
lods
cmp
cmp
add
jg
add
daa
jge
pop
xchg
pop
sbb
test
scas
imul
rclb
aam
jae
andb
aaa
jne
add
jge
sub
add
enter
mov
mov
clc
push
nop
sbb
add
jle
or
sub
xlat
adc
scas
mov
imul
push
shll
push
adc
and
stos
pop
adc
jbe
add
iret
push
add
fsubs
sub
inc
add
adc
adc
add
jg
mov
push
fcomps
test
pcmpgtb
add
icebp
add
arpl
es
jno
jb
cmp
idivb
add
call
insl
mov
push
lock
repnz
cmp
pop
add
shrl
dec
out
mov
and
adc
jge
ljmp
add
std
shll
dec
les
int3
es
jb
xchg
and
cmp
sub
push
jl
xor
adc
inc
into
cmp
add
sub
fistl
or
add
lret
dec
or
nop
fsubp
lods
insb
mov
inc
rol
adc
add
cmp
sub
cwtl
arpl
mov
adc
push
push
mov
adcl
sbbb
pop
pop
dec
loope
dec
or
push
sarb
add
jnp
hlt
xchg
testl
gs
and
ja
cmp
dec
add
jns
test
loope
push
cmp
jae
inc
rcrb
in
jmp
jl
nop
call
orb
dec
mov
xor
clc
mov
sbb
adc
pop
or
leave
nop
jo
xchg
rolb
dec
and
jb,pt
sbb
inc
out
dec
sarl
fiadds
push
jno
lret
ficompl
mov
cs
xchg
aas
sti
aad
fcomp
jae
or
and
mov
test
xor
sbb
inc
add
inc
adc
nop
mov
xchg
xor
xchg
xchg
es
loop
sbb
fnstsw
daa
adc
stos
dec
pop
test
push
mov
sub
mov
pushf
ja
arpl
mov
add
jmp
jno
sub
es
sarb
pop
adc
sub
push
bound
push
subb
add
je
xor
add
fidivs
mov
lcall
add
jb
mov
xor
ret
cmp
mov
loopne
adc
add
push
add
ret
icebp
lea
or
xor
sub
out
les
in
sub
in
leave
test
jbe
fdivl
fstpl
mov
roll
adc
mov
sub
mov
hlt
rcrl
int
adc
jae
jae
add
movsb
push
cmp
push
mov
rolb
mov
jbe
xchg
or
jge
inc
dec
popa
add
push
mov
int3
data16
jns
add
mov
lock
and
cmpsl
int3
in
sbb
js
lea
jmp
or
mov
enter
add
mov
xchg
add
push
pop
cmc
jecxz
pop
xchg
enter
pop
mov
push
sbb
mulb
jo
or
or
out
fsubr
aas
jno
ficomps
fists
repnz
add
dec
xchg
xchg
add
stos
sub
test
enter
cmp
je
pmaxub
loopne
push
fwait
movsl
std
stos
jb
xchg
or
sbb
shrb
int
add
mov
add
dec
rclb
or
rdmsr
push
bound
adc
jo
cmp
xchg
pop
inc
leave
cmp
cmp
scas
stos
xchg
aas
pop
enter
incl
sbb
fwait
cmp
pop
popf
movsb
or
mov
jb
aas
xchg
aas
xchg
add
sarb
iret
or
jge
xchg
mov
stc
push
addr16
and
and
push
mov
add
xor
scas
add
enterw
add
xchg
dec
xchg
lret
out
sub
mov
cmpsl
add
movsb
faddl
sub
add
lds
add
dec
das
and
dec
jo
xchg
ss
pop
mov
add
sub
add
outsb
adc
mov
mov
jbe
jp
xchg
cmp
ret
inc
push
hlt
mov
neg
sahf
lret
dec
add
outsl
mov
fwait
xchg
pop
and
xlat
dec
std
nop
out
xchg
inc
sub
xchg
movsl
adc
pop
sbb
lea
sub
lahf
add
sbb
pop
mov
cmp
cs
add
in
sahf
pop
adc
gs
adc
mov
lods
orl
or
xchg
adc
jl
movsb
ret
add
movsl
call
jl
pop
xchg
cwtl
fstps
adc
dec
xor
xlat
sarb
fdivrp
fs
xchg
fdivrs
jg
xorl
add
adc
xor
rolb
jmp
sub
pop
fwait
add
ljmp
jmp
sbb
popf
xchg
mov
mov
test
pop
xchg
xor
fwait
and
jno
add
call
mov
cmp
jg
je
push
addl
xor
fsub
add
and
xchg
add
pusha
pop
or
ljmp
lret
mov
stc
push
xor
jae
xchg
shr
push
outsb
cmp
adc
dec
imul
sub
jae
cmpsl
jns
aas
add
lcall
cmp
pop
jbe
add
mov
loop
in
test
mov
nop
das
les
cmp
and
aaa
cmp
or
or
int3
cmp
add
adc
xor
divl
jbe
cmp
pop
roll
test
adc
rcrb
pop
rcl
decl
xchg
fadds
ficomps
pop
rcrb
jnp
pop
scas
cmpb
inc
jg
ret
jns
push
enter
nop
lahf
xchg
push
dec
addb
push
or
imul
inc
mov
test
jne
add
sub
gs
add
adc
sub
loope
jge
add
xlat
xchg
lods
fnstsw
add
pop
stos
mov
jl
inc
mov
ljmp
sbb
and
pop
add
bnd
es
push
push
adc
adc
mov
rcrb
nop
call
mov
pushf
sti
in
sbb
mov
movsb
and
hlt
adc
test
xor
inc
xor
mov
lea
adc
or
mov
pop
ss
enter
int3
inc
mov
fmull
mov
or
inc
fadds
adc
repnz
sbb
adc
loopne
push
mov
add
xor
insl
add
call
dec
cld
add
je
or
inc
imul
and
loopne
imul
sub
ftst
sbb
dec
cmp
decl
in
jo
jns
and
imul
add
push
jne
cmpsl
adc
pop
add
jp
pop
stos
addr16
cmp
pop
and
add
lcall
fiadds
pop
imul
movsl
add
pop
sbb
insl
cltd
jp
sub
nop
aam
and
jae
xor
adc
pop
das
cli
cmp
mov
pop
mov
add
aad
xchg
aas
mov
mov
inc
pusha
mov
inc
xorb
and
call
push
sbb
and
inc
fsubrl
jne
pop
jl
loope
les
mov
cld
xlat
or
and
push
jo
shrd
push
and
es
or
mov
mov
pop
and
dec
add
sti
int3
jmp
jg
bound
add
and
add
in
mov
sub
gs
out
jo
push
and
dec
test
pop
and
adc
sub
xor
ja
gs
xchg
cmp
xor
sbb
and
mov
mov
je
push
adc
dec
sbb
or
pop
inc
lock
shlb
out
push
push
in
add
pop
inc
dec
jne
stos
add
and
dec
hlt
push
lret
sub
xor
ret
mov
call
or
imul
pop
sahf
imul
add
sbb
push
or
or
push
test
pop
push
or
push
adc
add
sbb
les
pusha
sbb
out
cmp
outsl
cmp
maskmovq
idivl
xor
cmpsb
push
out
mov
pushf
and
pop
mov
lea
or
jmp
mov
add
sbb
push
call
mov
mov
inc
pop
adc
sbb
add
jg
add
or
pop
dec
cwtl
adc
push
jmp
and
sarb
pop
sbb
add
xchg
add
dec
cmp
add
cmpsl
addl
mov
xchg
xlat
in
mov
ss
cmpsb
add
adc
and
out
mov
lea
in
lods
pop
shrb
mov
add
push
xor
add
in
pop
xor
jmp
push
lea
insb
push
dec
or
lock
jg
pop
mov
and
cmpsb
and
add
inc
scas
jb
daa
cmpsl
pop
add
fs
ret
and
pop
mov
xchg
dec
sub
add
je
add
inc
mov
dec
sbb
nop
lock
data16
pop
imul
sbb
or
pop
mov
add
div
shr
xor
mov
add
pop
xor
push
adc
mov
scas
pusha
xlat
cmc
add
inc
es
gs
orpd
or
mov
jo
dec
dec
ja
add
dec
xchg
jg
mov
and
clc
stos
add
xchg
sarb
imulb
mov
add
add
sbb
mov
jns
or
pop
xchg
test
inc
sub
pop
add
negb
das
rolb
outsb
icebp
imul
mov
add
aad
xchg
lods
rolb
inc
outsl
js
and
add
das
pop
mov
add
and
fwait
mov
repnz
pop
cwtl
mov
std
jecxz
cmp
mov
cmovge
and
std
imul
aam
addl
stos
lcall
insb
pop
nop
mov
les
ljmp
pop
addr16
scas
popf
repnz
repz
lds
mov
jae,pt
gs
clc
aaa
and
pop
stos
movsb
add
mov
addr16
lret
scas
int
das
add
outsb
bound
nop
inc
sub
or
push
add
xchg
scas
or
in
mov
or
cmp
add
pop
sti
and
mov
push
mov
mov
add
inc
inc
ds
pop
loop
sub
aas
sub
fs
inc
mov
add
push
jo
pop
addl
xchg
xor
fidivrl
inc
pop
mov
nop
pop
inc
push
iret
adc
push
inc
lea
sbb
orb
and
jmp
stc
push
dec
mov
popa
jb
push
movsb
sub
imul
insb
in
push
or
cmp
cli
add
xor
add
or
sub
or
push
es
rorb
popf
orb
sub
aam
or
jo
repnz
xchg
int
jb
add
push
xchg
rcrb
inc
add
jge
mull
or
xlat
test
add
mov
mov
jne
enter
sahf
add
and
fsub
in
jnp
repnz
mov
jne
jae
mov
or
push
xor
clc
inc
add
cmp
inc
fildll
xchg
push
add
and
aad
arpl
add
mov
jmp
lds
int3
mov
adcb
jmp
dec
sbb
dec
jo
add
jecxz
mull
pop
mov
push
cwtl
aam
lods
and
mov
add
add
stos
jbe
pop
xchg
and
sub
cs
add
rclb
pop
jle
push
sub
and
jo
subb
loopne
xchg
cmp
fiadds
xor
add
ds
fidivrl
cmpb
imul
test
mov
fdivrl
rcrb
add
push
mov
push
and
fs
addl
mov
subb
outsl
js
dec
xchg
fildl
mov
or
add
sub
shlb
cs
sub
add
add
call
xor
push
sub
hlt
add
pop
rolb
pop
shl
scas
daa
or
xor
imul
cmpb
xor
sbb
adc
mov
fsubs
jnp
add
outsb
in
adc
xor
aaa
mov
push
or
push
add
dec
xor
jg
sub
mov
popf
cs
inc
adc
fildl
shlb
lcall
pop
mov
es
xor
mov
shlb
dec
and
jp
nop
jle
add
ds
daa
enter
cld
and
sub
sub
es
or
xor
xor
xor
xor
add
enter
cmp
cmp
cmp
add
enter
inc
lock
pop
popa
inc
es
mov
add
dec
and
dec
add
in
sub
add
dec
add
shll
push
jle
push
adc
push
add
pop
xor
mov
adc
daa
cmp
adc
pop
test
push
inc
pop
inc
dec
nop
pop
mov
add
cmp
adc
addb
sbb
lret
gs
data16
lock
sbb
in
adc
jb
ret
dec
add
mov
and
lds
add
inc
xor
leave
add
and
push
add
pop
mov
mov
add
and
mov
enter
jo
mov
loopne
test
orb
add
or
fs
add
add
bound
andnps
add
cmp
xor
dec
push
popa
push
outsb
pop
and
push
sbb
dec
adc
and
add
inc
test
test
daa
fldenv
cmp
mov
mov
adc
inc
add
add
jo
sbb
xchg
and
testb
xor
and
or
ret
leave
sub
jno
add
pop
mov
adc
or
adc
sbb
faddl
xchg
popa
lcall
xchg
mov
testb
add
jns
out
add
insl
das
es
sub
jg
adc
sarb
mov
or
push
pop
cs
pop
lds
sbb
add
bswap
or
cmpb
add
aaa
insb
xchg
ds
mov
or
add
lds
mov
or
mov
call
sub
daa
ret
or
push
mov
adc
cmp
pusha
std
mov
xor
pop
add
pop
or
push
pop
xchg
sub
sub
add
inc
loope
mov
xchg
xchg
xchg
jne
mov
sbb
adc
enter
aam
rclb
add
dec
mov
cwtl
dec
inc
fsubrs
add
adc
mov
mov
push
jg
inc
adc
push
mov
addl
xchg
push
adc
add
xor
adc
in
mov
dec
ds
push
pop
or
inc
rclb
pop
add
xor
test
mov
js
mov
mov
add
cld
cmp
loopne
add
sbb
jbe
mov
mov
and
add
cmp
je
or
fdivs
add
push
add
jge
sahf
xor
stos
test
aas
jbe
adc
frstor
push
mov
sti
add
and
xor
pop
ja
shll
or
test
into
add
imul
add
adc
rol
push
xchg
add
dec
loopne
les
xlat
add
ljmp
movl
push
jne
loopne,pn
xor
lods
nop
add
mov
cmpsb
xchg
jmp
rorb
add
xchg
mov
or
test
push
dec
loop
jecxz
add
mov
bnd
test
test
or
push
mov
icebp
mov
stos
mov
dec
mov
mov
icebp
std
outsb
rolb
ljmp
adc
les
and
push
imul
push
cwtl
jo
add
int3
sbb
in
leave
pop
call
fsubs
mov
pop
mov
repz
add
js
jo
loop
inc
scas
mov
xor
add
pop
adc
lock
imulb
lds
popa
sub
adc
cmpsl
push
add
hlt
xchg
dec
xlat
lret
cltd
or
sub
das
fadds
movsl
ljmp
pop
adc
cld
adc
hlt
xor
add
ret
lea
enter
inc
fists
pop
and
mov
xor
clc
add
xor
mov
inc
dec
out
add
xlat
test
shrl
or
inc
arpl
out
xchg
je
outsl
jecxz
das
xor
scas
fwait
mov
or
xchg
mov
bound
pop
add
enter
jg
add
sub
popf
inc
jmp
push
inc
mov
and
les
mov
mov
add
imulb
xchg
insl
popf
test
mov
cmp
aam
or
mov
pop
xchg
or
shl
add
adc
in
inc
jns
and
dec
aas
sub
adcl
and
or
test
mov
mov
enter
lret
loope
fsub
scas
add
xchg
add
mov
pop
add
xchg
dec
add
jmp
loop
add
std
add
cmp
lea
les
rolb
adc
mov
mov
inc
add
mov
adc
js
cmpl
mov
addr16
add
or
lods
pop
adc
add
out
pusha
inc
rcrb
mov
dec
and
jo
fs
inc
mov
repnz
mov
aas
jo
inc
inc
cwtl
jns
or
lahf
mov
cmp
and
mov
add
push
cltd
inc
jns
mov
or
jle
jbe
shl
xchg
jge
sbb
mov
loop
jns
getsec
add
jl
in
push
sbb
cmp
lds
add
inc
jne
push
repnz
mov
add
add
fsubl
lock
call
or
sbb
daa
cmp
jmp
lds
push
stc
add
add
arpl
xchg
dec
push
callw
jne
mov
mov
mov
sbb
add
repnz
test
lds
mov
loope
loopne
jp
dec
add
sub
xchg
aam
jo
outsb
in
dec
add
out
fistl
add
cmp
test
jbe
enter
pusha
jle
pop
cmp
sub
mov
mov
dec
movsl
and
and
xor
dec
mov
inc
daa
call
loopne
pop
inc
dec
cld
fists
enter
mov
lahf
adc
subb
pop
daa
pop
ds
sub
jg
jp
inc
adc
add
in
adc
push
cmovne
mov
lea
popa
icebp
sub
js
jmp
push
ret
push
mov
jno
faddl
xchg
shll
push
xlat
pmulhw
xor
mov
subl
cs
jmp
insl
movsl
mov
add
fmuls
addb
mov
add
cmp
test
cmp
add
and
arpl
sbb
mov
stos
inc
lsl
lret
icebp
fcoms
or
add
jl
inc
inc
mov
and
sahf
ja
cmc
lock
cmp
push
sub
js
xchg
or
push
rolb
adc
and
add
xchg
std
cmp
pusha
jle
sbb
push
mov
fisubrs
lods
and
dec
add
addr16
pop
push
push
decl
loope
push
pop
in
mov
mov
cmovs
cmp
cmp
incl
jns
shrb
insl
or
outsb
je
sbb
jnp
addb
dec
cmp
mov
cmp
push
aaa
xorl
std
jp
push
jns
xchg
pop
test
push
call
xor
enter
pushf
adc
add
aam
fwait
sarl
rolb
jmp
or
add
faddl
je
add
mov
fs
sbb
clc
add
test
push
xor
adc
add
sub
movb
sub
dec
push
adc
add
aam
stc
rclb
cmp
sbb
sti
hlt
xorl
clc
dec
dec
ds
sbb
pop
sub
cmp
aas
dec
cld
sti
sub
adc
cmpb
in
add
sbb
xchg
nop
daa
push
pusha
in
add
pop
decl
push
lock
add
jmp
inc
in
fdivl
add
and
and
jmp
push
push
sbb
mov
and
mov
loopne
in
add
shlb
add
les
arpl
out
inc
cltd
add
xchg
mov
inc
cmp
and
test
add
std
or
add
mov
add
cmp
jmp
or
mov
lret
call
cld
add
sbbb
pop
orb
gs
add
outsl
bound
imul
xor
fs
dec
cwtl
mov
add
sub
xor
push
jmp
and
popa
mov
int3
mov
pop
push
add
add
mov
xchg
add
pop
add
je
insl
xchg
sbb
add
outsl
sub
add
outsl
enter
mov
fs
clts
push
add
sahf
pop
pop
adc
jb
dec
pop
adc
add
cmp
sbbb
or
test
add
pop
ss
js
mov
dec
push
push
dec
and
cs
cmp
cmpsb
jno
adc
pop
xlat
sub
or
nop
pop
inc
cmp
add
cmpsb
add
and
addl
pop
out
ficompl
cmpsl
or
or
nop
adcb
enter
clc
dec
mov
and
add
xor
sbb
add
xchg
pop
movsl
jno
jne
cmpsl
fldl
push
clc
sub
shrd
fdivrs
rcrb
idiv
jns
add
add
lea
cmp
or
push
flds
mulb
pop
xchg
add
xchg
adc
push
adc
or
clc
cmp
nop
pop
aam
lret
pusha
lret
push
add
ret
arpl
shrb
mov
in
sub
inc
pop
xlat
in
or
jmp
jmp
add
mov
or
add
cmp
dec
add
int3
cmpl
xor
and
push
mov
shlb
ficomps
dec
pop
test
push
pusha
push
cmp
dec
pop
les
and
fnstenv
xor
popa
mov
pop
sub
mov
push
rorb
aam
je
lret
or
les
mov
ret
dec
nop
cmp
or
lea
sbb
sub
inc
inc
inc
cmp
clc
ret
aam
cld
in
sub
sub
sbb
xor
lret
pop
hlt
ret
push
jnp
sub
icebp
test
or
add
clc
mov
mov
and
xchg
sbb
dec
js
nop
or
lods
add
or
roll
xchg
out
fdivrl
mov
and
mov
add
xor
pushl
rol
jp,pt
sbb
pushf
or
pop
hlt
mov
clc
adc
inc
pop
test
mov
add
dec
sub
mov
pop
incb
adc
scas
cwtl
cmpsb
test
negb
je
pop
incb
data16
movsl
or
mov
enter
add
add
add
mov
stc
call
add
loop
and
mov
xor
pop
rolb
rorb
pop
pop
jb
pop
stos
add
jae
das
add
add
jne
add
cmp
or
lahf
mov
inc
dec
and
aas
pop
fbstp
addb
xor
add
pop
add
inc
dec
add
adc
xchg
or
int3
adc
inc
adc
inc
xor
hlt
cmp
push
insl
xor
pop
je
aam
test
mov
or
push
rclb
out
outsb
js
add
ds
outsl
add
cmp
test
lea
and
add
je
push
insb
lods
rcl
sbb
out
pusha
add
add
adc
dec
xchg
pop
push
push
lock
push
js
add
enter
mov
sub
adc
das
sub
push
adc
and
and
jno
adc
mov
ljmp
cli
jbe
mov
fs
cmpb
sub
mov
mov
sbb
mov
add
sbb
jnp
fadds
and
into
jne
add
mov
or
push
mov
out
int3
shr
fdivl
add
mov
jo
push
adc
mov
test
inc
and
dec
sub
jb
sub
push
adc
and
dec
nop
and
daa
mov
add
sbb
scas
xchg
push
mov
push
push
xchg
add
or
subw
nop
jo
pusha
sbb
je
and
sbbb
inc
lret
testl
loop
rcrl
inc
dec
add
lret
add
aad
push
fcoml
add
popa
dec
fcmovu
lea
sbb
data16
out
enter
or
mov
add
and
rol
add
inc
xor
je
orb
xor
dec
add
in
popf
push
sbb
clc
add
adc
inc
shr
add
stos
mov
add
add
mov
stos
cmpb
out
push
cmp
adc
xchg
cmpsl
jne
es
jbe
add
lcall
js
add
pop
push
xor
cmp
icebp
cmp
and
adc
nopl
push
sub
and
fcmovnb
xor
js
mov
mov
divl
cmpsb
idivb
sub
test
sbb
push
add
or
icebp
add
or
mov
ss
psubw
and
pop
int3
in
inc
add
jae
fwait
sbb
or
in
add
test
sbb
stos
gs
hlt
call
out
xchg
and
pop
movsb
fnstsw
les
adc
mov
in
dec
add
ds
add
ficompl
push
sbb
xchg
add
pop
call
add
sbb
and
and
enter
pop
pop
cmp
and
leave
or
add
and
add
or
mov
cmp
xchg
sbb
arpl
cmp
sbb
notb
inc
cmp
pop
xchg
push
pop
inc
repz
outsl
dec
jmp
in
add
push
sbb
std
ss
xchg
test
push
clc
mulb
add
cltd
cwtl
sbb
mov
outsl
pop
mov
or
add
dec
add
pop
jmp
sub
call
rorb
mov
push
mov
je
in
push
inc
jne
sbb
into
cmpsl
fwait
add
push
or
push
lret
js
jns
int3
enter
adc
scas
xchg
addb
jne
ljmp
adc
inc
in
sbb
push
cld
cltd
adc
test
pop
push
push
add
adc
add
fsubr
mov
rorb
or
push
pop
adc
stos
out
rorb
sahf
rolb
inc
inc
xor
rorb
and
or
adc
mov
fisubrl
cwtl
fiadds
push
cmp
outsl
pop
jne
cld
pop
addb
into
jae
xchg
and
push
pop
xor
add
lahf
push
xchg
filds
enter
mov
clc
clc
leave
add
and
jmp
dec
loope
push
fbstp
repnz
add
sbb
inc
add
cmp
and
xchg
and
stos
cltd
leave
dec
outsl
sarl
pop
es
or
push
bound
sub
pop
loopne
hlt
roll
xchg
adc
mov
movsl
add
mov
cld
pop
loopne
dec
xchg
dec
mov
xchg
add
xor
mov
cmp
incl
test
or
enter
mov
pushf
ljmp
andb
test
mov
je
add
pop
sbb
cwtl
push
add
xchg
cmp
pop
add
ficoms
push
cmpb
add
inc
add
xchg
dec
clc
jmp
add
sarb
repnz
das
inc
sub
xchg
sbb
ds
lahf
sbb
mov
test
lea
and
push
adcb
jmp
clc
test
hlt
push
add
mov
xchg
fmull
fdivr
and
test
call
mov
add
out
add
dec
jmp
dec
xor
pop
cmp
mov
repz
int3
push
adc
adc
cmp
adc
cltd
sbb
jne
sub
mov
and
cmp
jno
jae
loop
cmp
push
cmp
scas
add
pop
or
int
in
push
add
out
imul
stos
push
lahf
adc
xor
xchg
in
pop
hlt
xor
adc
add
dec
mov
sub
in
and
adcl
add
cmp
call
pop
and
mov
push
or
add
and
clc
notb
aas
push
mov
push
sbb
adc
inc
cmpsb
add
inc
pop
and
pop
jmp
int
xchg
aas
cmp
rcpps
mov
pop
jmp
add
xor
xchg
or
add
mov
stc
call
inc
adc
sbb
sub
add
ficoml
sub
scas
test
add
clc
in
pop
dec
or
push
adc
pop
pusha
lock
pop
and
cmp
xor
sbb
sbbl
pop
sub
cmp
out
or
sub
add
cwtl
sahf
movl
sti
adc
stos
push
mov
mov
add
and
cmp
js
add
mov
push
rorb
push
and
adc
sub
mov
mov
sub
sub
push
sub
pop
sub
sbb
sub
in
push
add
das
adc
loop
adc
xor
mov
or
xchg
cmp
and
rcll
data16
cmp
or
loopne
xchg
lsl
sbb
adc
sbb
sbb
add
sbb
xchg
sbb
nop
sub
negb
outsl
sub
push
mov
and
adc
nop
cmp
mov
cmp
and
cmovs
lret
inc
sbb
adc
cmp
orb
mov
shr
pop
cmc
adc
flds
cmp
or
inc
sbb
or
or
js
aas
jno
cld
jnp
add
jne
add
and
jae
cld
or
cmp
or
or
dec
push
clc
dec
mov
aas
out
subb
add
jmp
adc
adcl
or
push
hlt
cmp
mov
add
xchg
push
sub
test
jmp
bound
dec
ds
andl
repnz
mov
in
mov
sub
adc
sub
sbb
aas
sub
sbb
sub
jae
or
and
xchg
xor
enter
jb
cmp
sbb
shll
and
xchg
fmul
cmp
pusha
mov
add
add
mov
sbb
add
and
add
pop
pop
mov
push
lret
nop
fiaddl
lahf
jecxz
sbb
jb
push
push
or
mov
ror
icebp
enter
jns
cmp
daa
add
mov
sbb
inc
and
mov
enter
add
and
sub
aas
dec
movl
in
les
add
sbb
test
push
cwtl
mov
or
push
jnp
jo
add
fisttpl
cmp
xchg
add
and
fisttps
jne
lret
jb
cmp
push
ds
mov
jo
adcb
sarl
jb
icebp
pop
cmpsb
lahf
lods
dec
mov
inc
cmp
dec
call
je
scas
add
cs
add
cwtl
das
push
loop
cmp
leave
std
cld
roll
mov
pop
cs
ret
push
dec
sbb
sbb
test
cmp
pop
and
mov
in
jb
mov
sbb
push
mov
jge
jge
inc
sub
xchg
adc
sbb
push
adc
sbb
xchg
fisubs
dec
adc
adcb
stc
cmp
xchg
enter
in
dec
cmp
fcomps
aam
cmp
in
pop
mov
insl
ljmp
rorb
fisttpl
je
dec
cmpb
mov
jmp
push
nop
xor
loopne
adc
add
xchg
xchg
les
add
sbb
jg
aas
imul
xchg
loopne
and
add
je
lock
pop
ret
adc
aaa
pop
insl
dec
loope
dec
rclb
add
add
add
ja
sbbb
jmp
aaa
stc
add
insl
psubusb
sbb
add
pusha
subb
and
or
into
jge
cmpl
addl
rorl
mov
pusha
add
ljmp
or
adc
leave
sub
int
inc
fadds
cmp
push
lods
loop
or
jg
xchg
inc
and
add
pop
je
jno
inc
or
cwtl
int3
push
jmp
sbb
cli
ljmp
enter
or
xchg
add
add
push
aas
lods
rorl
hlt
xchg
out
mull
cmp
mov
pushf
movsb
dec
cli
jmp
xor
jnp
cmc
int3
add
jae
out
jmp
and
and
into
cmp
in
xlat
mov
mov
jmp
lea
test
mov
in
dec
sahf
push
sti
and
addr16
or
jmp
mov
dec
adc
leave
scas
fadd
push
adc
xor
and
insl
jbe
add
cmpsb
js
add
fildl
mov
and
out
roll
push
or
pop
add
push
outsb
add
and
push
add
sub
or
andb
les
gs
inc
sub
adc
loope
int
iret
jle
xlat
and
pcmpgtb
mov
ret
loopne
jge
add
sbb
lock
push
add
inc
or
je
decl
rcll
sub
add
leave
lea
ja
cmp
pop
and
add
lock
add
push
mov
fimuls
push
push
adc
cmpsl
aad
mov
mov
dec
out
push
sub
inc
fsubrp
xchg
cmpb
sar
dec
add
mov
add
or
or
cmpb
addw
lret
imul
mov
add
cmp
adc
or
push
int3
std
add
and
or
mov
cs
sbb
aaa
andb
sbb
popa
add
inc
mov
xor
and
packsswb
or
adc
std
sub
subl
jae
cmpsb
sub
add
pop
pusha
mov
stos
js
or
fisubrs
test
sub
call
cmp
ret
bound
dec
mov
test
rolb
push
add
sbb
add
sbb
xchg
add
sbb
dec
mov
cli
imul
jb
mov
adc
sbb
jbe
bound
je
popf
call
xorb
mov
sahf
pop
std
loopne
stos
popa
add
nop
push
jne
imul
sbb
je
jl
sbb
lock
loope
mov
popa
mov
rolb
mov
mov
inc
jecxz
clc
nop
leave
or
fists
rorb
push
or
push
in
add
push
cld
inc
push
inc
sahf
arpl
imul
cltd
add
jne
mov
pop
test
ss
push
mov
rorl
sbb
enter
pop
test
add
rcrl
sbb
test
mov
sbb
mov
pop
dec
pop
jecxz
mov
add
scas
pop
lret
ljmp
hlt
adc
push
jbe
mov
loope
inc
in
addl
push
lock
add
push
jns
in
adc
test
adc
lret
sbb
add
imull
mov
pop
adc
sbb
jne
mov
fldcw
test
test
shlb
lret
pop
jmp
loopne
mov
add
call
and
pop
adc
xchg
push
les
sub
pop
fmulp
push
add
int3
push
mov
add
ds
addr16
nop
and
shlb
mov
cmpb
inc
stos
pop
pusha
lds
jmp
jmp
ss
pop
lea
cmp
push
and
lock
enter
sbb
lea
xchg
jg
faddl
loopne
push
adc
call
xor
cmp
dec
in
daa
push
lock
sahf
xchg
int
fcomps
mov
jno
dec
sub
pusha
sub
push
xchg
fcomp
scas
addl
add
mov
jno
paddq
lock
rolb
pusha
push
or
loopne
cmp
ret
ljmp
test
addl
jl
cwtl
sub
mov
or
inc
out
popf
adc
add
add
sbb
pusha
or
jmp
xor
xchg
shl
mov
js
decb
add
mov
sub
push
xchg
mov
icebp
mov
inc
adc
scas
xchg
xlat
add
xchg
stos
xchg
dec
repnz
add
jne
int
mov
pop
push
adc
iret
loop
push
fimull
and
pop
mov
mov
push
or
sbb
mov
sub
clc
add
pop
sub
stc
sbb
add
mov
and
incb
std
add
les
mov
addr16
ds
and
push
repz
lret
push
add
andl
xor
sbb
rorb
and
mov
mov
stos
ds
add
sarl
add
or
pop
add
sahf
les
add
or
jmp
adc
jl
mov
es
jno
sbb
xor
xchg
pop
and
push
loope
mov
imul
add
xor
cmpb
xchg
mov
xchg
add
jne
pop
adc
in
jo
stos
lods
pop
sub
sbb
sub
or
lods
add
pop
shlb
add
pop
iret
movsl
xchg
shlb
into
pop
jl
rol
adc
cltd
les
push
push
jnp
lret
aam
add
dec
les
clc
scas
ror
lods
cltd
cli
push
add
push
ljmp
cmpb
movsb
add
cmp
sbbb
loopne
fdivl
push
jbe
xchg
mov
dec
icebp
stos
roll
clc
cld
sarb
ds
pcmpgtw
test
sub
add
ret
call
out
popf
pop
pop
mov
push
mov
and
enter
fs
push
lock
call
leave
and
or
nop
insl
rclb
or
add
cmpsl
aas
cmc
in
xchg
push
add
test
add
xchg
cmp
or
loopne
mov
nop
adc
cmc
push
cmp
daa
or
pop
mov
jmp
inc
add
outsl
pop
add
mov
xor
and
push
jbe
add
inc
and
add
pop
lods
add
push
lret
int
or
jb
stos
add
test
cmp
rclb
sub
sub
repnz
hlt
pusha
sub
je
adc
adc
testb
testl
lret
shrl
loopne
movsl
imul
repz
outsb
dec
sub
leave
pop
data16
lea
add
xor
insl
or
mov
jge
mov
xor
dec
or
xchg
in
mov
jecxz
out
push
not
xchg
pop
add
adc
push
lock
jmp
rorb
fdivp
xor
cmp
xor
inc
xor
push
mov
hlt
add
fdivrl
add
mov
loopne
sub
cmp
push
and
jne
pop
inc
push
ss
add
push
into
pop
or
int3
xchg
add
addr16
pop
pop
or
push
ja
mov
add
lock
daa
pusha
push
sbb
add
lods
xchg
adc
or
push
clc
popa
jne
add
clc
add
xor
xor
add
cmp
adc
add
cmc
sbb
cld
add
int3
adc
add
add
pop
dec
je
ja
roll
popa
pop
xchg
add
jg
and
stos
jne
push
adc
or
js
cmc
sub
mov
add
sbb
cmp
adc
and
cmp
mov
xlat
ds
add
in
enter
add
jne
push
sub
lods
inc
push
int
add
sub
arpl
sub
sub
and
lahf
test
orb
xchg
push
cmp
push
xor
sub
mov
add
lods
sbb
adc
pop
xchg
data16
cmovl
push
hlt
jb
add
xchg
lret
push
inc
mov
xchg
mov
adc
jne
push
adc
jmp
mov
fisttpl
sub
push
add
sub
dec
or
out
add
xor
loopne
cltd
lock
mov
add
sahf
shlb
push
and
stos
out
cmp
push
sbb
and
inc
repnz
and
xchg
or
jne
lret
add
in
xor
dec
daa
adc
add
addr16
jns
add
jnp
ret
hlt
xchg
adc
or
pop
add
push
negb
pusha
push
mov
mov
add
push
lea
lret
xchg
add
into
shlb
popf
jle
jp
add
jmp
xchg
jnp
jo
add
xor
push
jbe
and
adc
repnz
jmp
jle
decl
add
pop
enter
mov
mov
lret
loopne
dec
add
popa
jl
repz
adc
push
cmp
mov
push
test
xchg
cli
jmp
pop
test
xchg
ficomps
pop
dec
mov
lods
dec
add
out
repz
daa
or
and
xor
fstpt
movl
pop
repz
push
add
or
sub
mov
sub
cmp
sbb
add
jae
push
hlt
mov
cwtl
xchg
fadds
mov
imull
mov
xorb
test
cmp
inc
xchg
clc
add
and
roll
call
mov
add
movzwl
and
lahf
dec
in
andl
fsubr
add
shrl
mov
add
cmpb
loopne
clc
xchg
clc
xor
inc
inc
incl
pop
cmc
cmp
push
sub
mov
mov
pop
inc
addb
inc
push
mov
jmp
shlb
cmp
add
dec
sbb
sub
sbb
fadds
movsb
cmp
outsb
testb
pop
xor
xorb
test
dec
es
xchg
add
test
lods
enter
rcr
sbb
mov
pop
jmp
int
jl
add
test
adc
ss
mov
std
pop
sub
les
rorb
mov
js
pop
outsl
addl
add
mov
add
shl
add
outsl
pop
mov
add
push
icebp
jecxz
cli
rorb
adc
and
pop
lahf
adc
shr
in
sub
sbb
adc
mov
xchg
adc
int
dec
cmp
mov
outsb
add
imul
add
or
rclb
lahf
xor
fs
pop
dec
mov
rolb
jno
push
add
cld
jmp
clc
xchg
jbe
loop
adc
js
mov
in
cmp
call
andb
stos
cmp
xchg
ljmp
out
loopne
loopne
cmp
and
ficoms
ret
mov
call
mov
or
dec
lock
rolb
xchg
xchg
cwtl
pop
out
and
cs
cwtl
lods
lret
dec
in
enter
out
push
and
je
jne
loop
lcall
jecxz
add
out
inc
mov
push
in
mov
pop
jne
and
add
xchg
cmc
mov
push
add
mov
mov
xchg
in
les
jbe
jne
and
xlat
inc
subb
fcomps
sub
fsts
dec
aad
stos
mov
roll
rorb
rorb
push
fcompl
frstor
jne
pop
mov
jns
cmpsb
add
xchg
push
cld
ja
push
jl
shl
ror
pop
jno
shlb
jg
aad
add
setl
pop
and
nop
jp
daa
and
push
in
push
call
lret
aas
das
andb
add
and
out
add
jnp
adc
add
cld
divl
in
or
leave
sub
mov
cli
pop
sbb
testl
lods
addl
je
mov
cwtl
std
xchg
hlt
dec
stos
add
aaa
ljmp
divl
add
dec
mov
data16
or
adc
sbbb
pop
mov
fld1
inc
mov
outsb
pop
adc
inc
lea
add
mov
loopne
push
add
sbb
jle
xchg
add
or
jl
xor
add
fwait
xchg
or
inc
push
add
jmp
pop
xchg
shlb
dec
adc
pop
add
mov
sar
adc
pop
push
repnz
fs
ret
add
fdivr
pusha
in
jno
rcrl
add
ret
push
mov
cmp
jb
iret
lock
add
shlb
push
pop
push
aas
mov
pop
lods
mov
cwtl
add
stos
test
rcll
cmp
push
cmp
loop
or
jmp
cmp
das
xor
push
push
and
sub
xchg
sbb
adc
inc
sbb
jmp
lret
inc
ss
jg
mov
inc
movsbl
subl
mov
add
test
stos
jle
sahf
cmp
dec
add
and
stc
shrb
in
pop
out
rorl
cmpsl
add
xor
adc
xor
adc
inc
arpl
xchg
loope
loopne
jb
add
sbb
or
idiv
mov
pop
and
inc
addl
mov
int
mov
shrl
dec
mov
adc
cli
cmp
je
nop
pushw
ds
sub
lret
jmp
inc
shl
adc
mov
jp
stos
scas
ret
sub
data16
in
and
push
jae
add
aam
int3
mov
sbb
cvtpi2ps
adc
and
jle
jmp
nop
movsl
daa
mov
jae
pop
mov
add
pmulhuw
sub
popa
lods
push
scas
adc
int3
cmp
add
mov
dec
pusha
mov
mov
jno
sbb
sbb
ja
jns
xor
jno
add
inc
sbb
add
sbb
mov
mov
add
daa
loop
xchg
adc
mov
sti
xchg
in
stc
dec
cld
and
add
and
dec
or
cmp
adc
call
or
push
cmc
sub
lods
out
xorb
push
imul
pmullw
cwtl
daa
pop
sti
call
in
jnp
ret
add
sub
add
xor
pop
lret
sbb
mov
daa
call
add
pop
andb
fwait
sub
jg
add
ljmp
bound
add
or
notb
aam
cld
pop
jmp
xor
push
mov
mov
push
and
add
mov
mov
mov
fbld
cmp
clc
add
mov
add
xor
ja
loope
add
xchg
call
add
scas
xor
invd
lcall
dec
mov
mov
fmul
in
add
cmp
mov
xor
mov
xor
dec
mov
or
jnp
pushf
adc
pop
pop
jmp
aam
pop
xchg
jbe
and
inc
fiaddl
and
inc
sub
inc
imul
add
sbb
mov
les
push
add
ffree
cmp
addr16
das
add
test
and
sbb
cmp
dec
push
sub
add
mov
dec
out
mov
rolb
pushf
mov
mov
xchg
add
callw
lock
cmpxchg
ror
adc
pusha
adc
fs
lea
pop
and
cli
pop
loope
and
repz
and
push
sbb
or
mov
push
adc
adc
std
inc
nop
call
lahf
cli
sbb
test
clc
call
pop
popl
inc
mov
push
lea
xor
jno
call
xor
imul
lea
mov
xor
jmp
or
inc
push
adc
adc
shrl
in
into
xchg
sub
pop
push
dec
sbb
ret
sbb
and
dec
into
and
lods
lret
add
mov
int3
popa
popf
nop
xor
sub
adcl
mov
xor
cmp
xchg
push
out
lock
out
or
inc
add
gs
and
pop
sbb
repnz
and
cs
ljmp
fadds
je
add
push
jbe
xor
orl
xchg
cmp
subb
inc
add
pop
outsl
cmp
adc
mov
or
sbb
pop
out
lds
rolb
inc
js
divl
jae
outsb
sub
imul
fistpl
add
insl
sti
dec
pop
jno
add
call
cltd
and
or
add
add
cs
and
aam
mov
pop
jle
jno
sub
jne
pop
fwait
mov
push
andb
inc
sbb
cmpl
xorb
das
add
orl
pop
pop
push
sbb
call
icebp
xor
adc
sti
adc
and
lock
add
add
or
add
lea
mov
loope
repnz
mov
lahf
repz
sbb
and
notb
sub
add
stos
add
xor
adc
andl
pushl
mov
sub
add
and
dec
movb
mov
add
in
ret
cmp
sub
jle
pop
add
xchg
pop
sub
sbb
and
clc
enter
xchg
hlt
sbb
xchg
add
icebp
and
lock
or
inc
pop
pop
mov
mov
out
add
inc
shlb
out
cld
or
dec
mov
pop
xor
mov
and
incl
orb
roll
jg
cmp
js
or
push
cld
push
add
push
add
dec
adc
clc
add
ss
dec
add
pop
movsb
push
roll
aad
add
sub
inc
inc
repnz
pop
into
add
jl
jo
add
inc
push
fs
call
mov
adc
bnd
jmp
pminsw
fistl
rclb
xor
cmp
gs
loop
and
fistpl
mov
cmp
fmuls
scas
in
add
push
cmpsb
or
sub
add
jns
inc
push
in
stos
leave
mov
sbb
add
xor
addl
push
cmp
lods
mov
sub
xor
dec
push
cmp
and
call
cld
add
cmp
decb
sbb
int3
adc
mov
jb
aas
lret
mov
int3
and
push
or
push
add
dec
rclb
sbb
mov
movsb
ror
mov
call
sub
mov
jp
dec
cmp
mov
cmp
add
add
mov
pop
sbb
call
jge
in
out
sti
mov
xlat
clc
jae
mov
adc
jmp
mov
mov
cli
add
xorb
pop
jl
adc
out
push
or
out
xchg
inc
push
add
fsts
adc
mov
inc
cmp
add
mov
je
sbb
js
cwtl
pop
push
push
das
xor
mov
push
push
and
xchg
nop
push
push
pop
add
add
lods
bound
add
inc
fdivl
add
xchg
add
pop
clc
out
mov
ret
pop
adc
xor
and
mov
movl
mov
inc
adc
stos
sbb
or
add
rorl
add
and
mov
jp
jle
add
test
adc
add
pop
rolb
mov
push
or
add
and
rol
iret
stc
xchg
and
cmp
pop
addb
ljmp
add
xchg
jno
mov
add
xor
adc
and
add
push
les
xchg
cmp
test
add
xorl
mov
sbb
test
or
adc
push
pop
add
ret
pop
add
les
rolb
add
test
fldl
popa
lods
or
mov
add
add
mov
pop
add
push
mov
repnz
insb
loopne
inc
cs
loop
add
or
rorb
dec
notl
jmp
insl
push
hlt
sbb
sub
mov
aas
inc
sub
inc
push
stc
and
jbe
add
xchg
xor
in
add
pop
add
dec
cmp
and
and
fsqrt
push
cmp
xchg
sub
nop
fcompl
mov
push
mov
js
inc
mov
and
and
sub
mov
add
xor
rclb
xor
pop
loope
add
add
call
sub
inc
and
xor
mov
stos
mov
pop
in
inc
add
xor
sbb
adc
jmp
hlt
mov
enter
adc
mov
inc
mov
and
lock
xchg
adc
pop
or
je
fsubs
rorb
inc
push
xor
and
fsubs
lds
mov
sbb
out
inc
jl
sbb
push
dec
out
or
sub
mov
mov
test
jle
jge
addl
adc
xor
pop
xchg
lock
jp
add
push
xacquire
pop
js
push
out
loopne
insb
mov
aas
cld
xor
clc
fiadds
loope
setno
ds
call
sub
inc
mov
sub
testl
dec
jnp
enter
add
cmp
subb
mov
sarb
jno
cs
sub
jl
and
xchg
loope
and
add
lret
xor
push
scas
clc
sub
or
fistl
or
jl
rcll
shrb
int
cwtl
sbb
or
test
or
or
daa
fcoms
inc
mov
push
cltd
flds
xor
adcb
aad
mov
adc
aaa
int3
add
sub
cld
lahf
scas
add
sbb
push
rolb
mov
push
add
add
hlt
dec
add
lods
lock
cmp
adc
out
add
jo
adc
or
in
add
fildl
out
xlat
mov
aas
mov
mov
push
push
dec
push
push
push
adc
mov
pop
dec
cmc
jno
pop
gs
xorb
push
jo
or
clc
add
iret
inc
out
mov
mov
push
xorl
jg
xchg
mov
addr16
mov
or
dec
add
clc
fdivp
mov
rorb
enter
ds
pop
test
cmpl
mov
loope
out
pop
mov
int3
sbb
aad
sbb
and
loope
rcrb
fmuls
inc
add
jp
mov
sbbb
adc
mov
push
icebp
mov
sub
test
jmp
sbb
dec
xchg
adcb
adc
push
mov
cmp
pop
push
pop
in
dec
mov
adc
pushf
pop
add
lods
add
shll
adc
add
pop
data16
cmp
verw
lods
les
in
inc
adcl
stos
cmpsl
test
mov
inc
jns
fs
jl
inc
mov
ja
xchg
bound
mov
mov
test
add
fstp
pop
fld
pop
adc
jle
fs
testl
push
gs
add
jnp
mov
add
mov
shr
fcoms
in
rcll
or
sub
or
or
mov
in
add
mov
clc
cld
mov
fs
mov
call
xlat
gs
add
adc
int3
sub
and
pop
or
add
test
mov
add
rorl
mov
add
pop
fsubr
dec
ja
mov
bound
xchg
rorl
daa
sbb
loop
in
sbb
jecxz
add
scas
test
stos
stc
repnz
addl
sbbl
cmp
add
jo
adc
add
test
je
scas
clc
sti
movsb
pop
scas
lods
pop
lock
ljmp
rolb
outsl
inc
and
adc
adc
jns
xlat
std
add
arpl
xor
mov
add
cli
add
push
inc
ret
xchg
xchg
pop
pop
je
pop
push
aad
mov
or
movsl
cmc
dec
lock
add
xchg
ds
mov
ljmp
push
pop
pop
mov
push
mov
int3
push
lea
push
or
cmp
fisttpl
push
xchg
call
hlt
pushl
jae
push
add
or
mov
and
add
rcrb
add
and
jge
sbb
dec
subb
iret
add
test
pop
push
negb
add
adc
and
or
lcall
add
lea
add
cmc
ljmp
ja
leave
movsl
std
inc
add
aad
sahf
xchg
add
mov
jno
nop
and
ljmp
rclb
sub
xchg
popa
jle
add
xchg
in
jo
add
insl
or
data16
or
cmp
add
adc
jne
out
ret
add
or
sbb
pop
cmp
jbe
stc
and
add
add
mov
or
mov
push
imul
add
imul
xor
pop
sub
ficompl
cltd
or
daa
arpl
jns
add
movl
or
fdivl
xorw
adc
mov
and
and
enter
add
mov
dec
add
pop
das
inc
mov
or
add
push
lock
sbb
add
lss
ljmp
cmpsb
shl
add
xchg
or
wbinvd
dec
je
pusha
inc
pop
sti
lods
sbb
mov
jecxz
ret
dec
add
daa
cmp
mov
arpl
inc
bound
and
fs
dec
test
add
pop
jle
xchg
cmp
mov
xchg
inc
outsb
sbbb
les
push
add
cltd
ret
aaa
adc
out
nop
fidivs
sub
and
add
in
fadd
cwtl
rep
add
scas
or
add
adc
pop
push
cmp
mov
inc
popf
insb
loope
pusha
add
lahf
imul
add
sbb
add
and
add
loop
adc
nop
mov
and
mov
insb
add
xchg
leave
pushf
xchg
add
movsb
ficomps
push
push
loop
jae
je
rcrb
sbb
enter
shrl
shrb
mov
xchg
fadds
push
int3
leave
sub
mov
outsb
inc
scas
insb
adc
cmp
sarb
or
shr
push
outsl
xchg
hlt
add
sub
add
jae
lock
cltd
loop
popf
clc
add
mov
mov
frstor
jb
lock
test
jno
stos
sbb
cmpl
jo
cmp
mov
mov
and
add
lret
sti
add
mov
sub
inc
lcall
xor
add
clc
imul
add
mov
push
je
clc
pop
add
sti
or
bound
mov
push
pusha
inc
shlb
xor
add
stos
aad
and
jmp
push
mov
imul
or
decb
sub
cld
pop
mov
mov
loop
cwtl
or
sbb
es
scas
sbb
dec
or
jb
add
and
sbb
loop
sbb
jl
push
push
adc
sub
and
mov
push
icebp
mov
mov
mov
inc
xchg
jle
inc
push
insb
enter
adc
dec
test
jno
lock
mov
adc
or
xchg
or
mov
xor
out
pop
dec
pop
out
leave
pusha
add
inc
pop
jne
pop
add
cmp
pop
and
xchg
es
or
repnz
push
and
mov
mov
mov
sub
sub
mov
pop
mov
jo
add
call
xchg
add
push
or
filds
aad
adc
hlt
cmp
pop
jmp
mov
push
sub
pop
cmp
xchg
test
and
push
adc
sbb
and
rorb
mov
std
adc
jnp
mov
sub
out
or
inc
jns
sub
loopne
jge
nop
or
enter
pop
mov
loope
sub
jb
test
js
push
test
adc
aaa
ret
ja
or
mov
inc
add
or
or
sub
push
loop
adc
jle
xorl
cmp
push
jae
mov
add
lret
push
add
xchg
js
add
jo
mov
dec
ret
cmp
and
stos
sbb
pop
jne
jns
and
sbb
sub
mov
and
sbb
dec
aas
jne
inc
mov
mov
pop
enter
cmp
add
cmp
xchg
movsb
push
shlb
pusha
outsl
adc
xor
mov
cmpsb
sbb
jmp
pusha
pop
movsb
sahf
push
add
mov
add
adc
adc
xor
add
cld
sub
add
push
sbb
add
popa
mov
cwtl
push
scas
fs
and
es
dec
ds
push
pxor
das
imul
test
add
cmp
mov
mov
dec
adc
or
sub
xor
mov
pop
adc
add
sbb
mov
nop
sub
push
add
add
sub
mov
mov
movsl
add
dec
xor
jne
push
add
cltd
sahf
mov
jl
and
adc
sbb
xor
mov
push
xor
sbb
cwtl
pop
ret
xchg
in
lods
and
movsb
scas
in
mov
test
test
popf
ljmp
mov
dec
subb
or
or
add
shll
test
std
lcall
sbb
add
ljmp
add
mov
pop
imul
test
push
add
mov
movsl
add
lcall
nop
mov
in
add
insb
int3
dec
xchg
jae
add
shll
add
negl
mov
lfs
je
inc
and
nop
jge
sub
stc
xor
xor
add
jecxz
test
call
clc
xor
mov
push
xor
cmpl
jb
cs
add
js
imul
jg
add
sub
loop
add
orl
xchg
adc
scas
hlt
cltd
in
pushl
add
mov
sub
mov
xchg
pop
repnz
testb
stc
cwtl
lods
or
sbb
call
test
push
push
mov
push
dec
mov
aad
lock
pop
pop
dec
pop
fsubrl
inc
and
and
scas
rolb
addl
das
cmp
xor
inc
inc
popf
cmp
xor
test
stc
and
xor
loopne
cmp
xor
aad
je
mov
adc
sbbl
std
rcll
or
push
rcrb
xchg
or
and
mov
in
outsb
subb
testb
movsl
call
add
jmp
lcall
or
mov
and
add
pop
inc
out
cmp
mov
xchg
add
jle
mov
rcr
inc
xor
mov
xchg
adc
les
stos
jns
add
sub
test
xor
add
xor
dec
add
mov
xchg
popf
dec
js
mov
enter
adc
mov
lock
add
adc
shrb
insl
add
pop
xchg
push
mov
sub
ds
xor
cli
int3
dec
rclb
jns
sbb
lea
jno
pop
add
dec
mov
adc
add
push
or
add
mov
mov
lcall
lea
movsl
cmp
add
xor
pop
dec
rolb
xchg
inc
decl
mov
imul
movsb
inc
push
js
jno
daa
mov
sbb
es
cld
outsb
mov
sti
enter
adc
cmp
add
addr16
inc
cmp
fcompl
addl
add
jne
xchg
sub
nop
push
fsubrs
add
je
jmp
and
and
mov
pop
lret
or
scas
cmp
dec
int3
sub
mov
ret
pop
lret
jp
pop
lea
in
ja
pop
xorb
cwtl
movsl
add
popf
push
pop
mov
andb
pop
dec
push
mov
adc
cld
push
lret
js
xlat
add
call
push
popl
cmp
pop
fildll
jbe
loopne
js
mov
pop
dec
add
jns
xor
jl
sbbb
xor
out
jmp
pusha
adc
bound
fadd
shlb
inc
loop
daa
push
or
movsb
fists
mov
add
addr16
xchg
jb
cmc
xchg
pop
xor
and
cmpb
adc
mov
test
push
mov
mov
inc
subl
add
subb
lldt
dec
test
or
jne,pt
add
js
adc
dec
add
cli
in
jle
cmp
ret
add
sbb
add
or
pop
add
add
das
jmp
and
jbe
mov
add
out
cli
sub
sbb
or
or
popf
sub
mov
cmp
lcall
jg
aas
ret
xchg
jae
adc
outsl
hlt
xchg
add
call
add
pop
dec
shll
mov
nop
int3
pop
cmp
into
inc
loope,pn
pop
push
dec
add
fs
sbb
ds
xchg
and
cmp
and
rolb
fbstp
rcr
popf
aad
sahf
adc
dec
add
cmp
jle
loopne
scas
add
sub
hlt
out
adc
and
jbe
cmp
clc
pop
dec
add
or
add
lea
xor
pop
and
jle
xor
add
cmpsb
push
dec
or
and
jne
hlt
adc
faddl
sub
jmp
lods
scas
aad
add
mov
dec
dec
sbb
cli
inc
or
cmp
jbe
inc
rol
and
inc
cmp
jnp
sbb
sub
popl
add
pop
or
dec
add
scas
add
jbe
add
stos
fcoml
add
pusha
jle
test
rol
add
add
push
cwtl
icebp
and
sbb
adc
pop
int
add
jne
adc
mov
sbb
nopl
loopne
mov
cltd
add
sub
inc
jbe
jno
mov
js
adc
int3
ljmp
leave
add
jae
dec
inc
and
sbb
rcrb
inc
mov
mov
movsb
dec
subb
jp
test
sbb
loopne
jno
add
clc
pop
ja
mov
call
movsl
sub
dec
push
mov
pop
orb
or
or
adc
sbb
sbb
sbb
push
pop
jo
add
loopne
xor
lret
sub
or
fistl
or
add
mov
adc
add
imul
stos
mov
jmp
sti
lahf
clc
imul
inc
cmp
add
gs
dec
jg
pop
mov
cltd
iret
cmpsb
mov
shl
inc
jne
fisubl
pop
incb
add
push
or
es
xor
and
inc
imul
xor
stc
test
clc
lock
ljmp
add
cld
loope
cli
push
and
pmulhuw
jmp
sti
mov
push
stc
pop
scas
aaa
scas
mov
jg
jle
iret
xor
scas
jecxz
aaa
sbb
add
jae
enter
add
nop
stos
mov
xor
add
adc
sbb
test
inc
xor
jae
and
call
or
add
std
xor
mov
mov
cmpb
jb
add
jmp
fstpl
ja
hlt
leave
push
jbe
insb
adc
and
jmp
add
fmuls
mov
mov
jle
push
mov
sbb
pop
test
push
inc
test
push
mov
jns
cmp
ja
adc
sbb
mov
mov
str
subl
rcll
lret
ja
cli
jns
and
hlt
cmpb
push
pop
clc
out
pusha
mov
ljmp
adc
add
sub
pop
push
push
mov
jne
fistl
test
adc
and
mov
push
lds
fldt
add
add
aam
and
iret
add
or
add
cld
add
mov
clc
aas
xchg
popl
push
xor
leave
dec
jg
dec
imul
out
in
rcr
inc
or
xchg
mov
lea
xchg
cmp
adc
pushw
and
adc
adc
lahf
add
shl
xchg
fwait
jp
add
jge
dec
jmp
add
xlat
cmc
xchg
fnstenv
or
mov
add
mov
add
ja
cmp
xor
cld
mov
add
lahf
roll
loopne
or
jmp
xchg
rolb
js
add
mov
sub
fwait
add
rcll
lahf
ljmp
test
push
sub
cld
add
jmp
ja
scas
mov
add
xor
push
jge
and
daa
and
pop
xor
mov
shl
in
pushf
add
mov
dec
ja
and
insl
push
cld
xchg
jl
sbb
cmp
daa
pop
mov
mov
add
cmp
pop
loope
xchg
mov
xchg
add
cmpsl
xchg
push
cmpsl
pop
push
ja
scas
add
mov
and
mov
in
pusha
add
inc
jg
je
pop
push
mov
cmp
sbb
add
inc
rolb
mov
add
push
fs
xor
pop
dec
sub
jge
add
xchg
ret
add
mov
mov
mov
or
addb
cmp
ja
xchg
imul
add
pop
fldl
shll
dec
pop
xchg
xchg
dec
popf
mov
add
call
jmp
add
or
pop
jle
add
inc
xchg
or
jecxz
jae
call
cwtl
mov
lahf
push
add
push
add
or
add
data16
cmp
roll
mov
and
add
jle
imul
arpl
je
or
je
mov
push
push
xchg
fmul
out
cmp
clc
pop
adcl
fs
clc
add
test
add
in
in
sub
pusha
pop
dec
inc
loopne
or
lahf
dec
sub
jnp
add
or
arpl
jbe
add
imul
cmp
mov
add
push
or
xchg
xor
inc
fisubrs
and
pop
jne
add
sub
cs
jo
int3
pop
std
sahf
pop
vpminsw
adc
and
sahf
call
mov
add
fwait
das
lds
jge
cli
dec
push
add
loope
sub
jl
dec
add
dec
jo
adc
dec
sub
xchg
dec
call
xor
mov
add
dec
inc
aas
or
jmp
add
out
sbb
insb
or
xor
call
call
jle
inc
loopne
push
inc
fcomi
push
dec
jo
add
ss
mov
push
cmpl
scas
inc
xor
aad
mov
faddl
shlb
mov
add
adcl
leave
enter
rorb
je
repnz
jnp
cli
es
shl
push
rorl
or
or
out
add
pop
pop
pop
test
xchg
clc
adc
mov
push
divb
nop
mov
imul
pop
sub
pop
pop
inc
hlt
push
xlat
jmp
dec
lcall
jge
insb
rcrb
sbb
ds
adc
pop
pop
jecxz
jns
add
int
add
js
sbb
enter
dec
adc
cmpsl
cmp
andl
jb
xchg
sub
jmp
inc
jle
xchg
fs
and
add
cmp
sub
and
pop
ja
sbb
push
in
lea
addb
clc
xchg
fldl
xchg
mov
add
pop
mov
sbb
adc
and
clc
add
into
loopne
sub
add
inc
sub
and
mov
push
add
into
or
xchg
add
shlb
push
rclb
cmpsl
mov
mov
lret
lock
rcl
sub
xlat
pop
sub
add
dec
lahf
in
addr16
movsb
and
add
dec
adc
cmp
push
pop
or
enter
test
cli
add
movsb
dec
aam
push
cmp
or
add
loopne
ret
hlt
add
out
pop
test
sarl
add
cmp
jo
jns
ds
fiaddl
mov
movsb
bound
jmp
pop
xchg
sub
movl
mov
imull
clc
and
and
shl
add
sbb
repnz
dec
pop
push
and
mov
popf
pop
push
lods
cmp
xor
loopne
push
cmp
cmpsb
xorb
mov
sbb
add
mov
adc
lods
dec
pop
xchg
into
add
outsb
pop
aas
add
and
daa
mov
adc
pop
and
mov
add
mov
in
add
add
add
cmp
dec
in
add
push
pop
cmp
mov
adc
das
add
rorb
adc
cmc
insb
push
faddl
push
in
sub
adc
rolb
and
fdivl
movsb
add
ds
and
sbb
ror
sbbl
xor
clc
jmp
es
add
daa
mov
add
fwait
mov
mov
sub
pop
sub
lcall
adc
sbb
add
and
push
mov
cmpsb
or
jns
test
aam
sub
je
inc
movsb
adc
icebp
add
sahf
cmp
out
add
ja
adc
and
cld
mov
js
sbbl
mov
ja
push
mov
nop
push
popf
pusha
sbb
loop
add
jl
addr16
sub
or
lret
mov
adc
cld
add
push
add
lahf
addb
lahf
add
insb
sub
loop
rorb
mov
dec
jnp
stos
fs
nop
inc
add
mov
enter
sbb
mov
adc
add
pop
shlb
add
inc
mov
add
pushf
imul
add
add
add
pushf
sbb
movsb
jns
in
cmp
mov
sbb
cmpsb
jnp
test
xor
pusha
cs
fs
push
lods
ljmp
cmp
shlb
add
pop
inc
jo
and
pop
repnz
jmp
in
aas
es
fiadds
and
xchg
iret
aam
test
sbb
cmp
add
adc
sbb
push
add
inc
mov
adc
push
outsl
add
rolb
sub
sbb
or
test
adc
jl
js
pop
dec
or
das
inc
sbb
popa
sbb
and
and
jbe
in
dec
jmp
adc
outsb
add
push
mov
scas
dec
add
lret
clc
or
add
gs
add
add
mov
jmp
enter
in
pop
nop
add
in
mov
mov
cmp
sbb
adc
pop
add
add
add
and
in
jb
sbb
aad
enter
out
add
mov
inc
push
jbe
mov
add
clc
aaa
or
cmpsl
imul
add
mov
mov
add
inc
dec
dec
inc
dec
inc
ret
add
and
inc
jp
or
clc
mov
adcb
cmp
movsb
sbb
loope
fsub
xchg
and
test
push
fadds
sub
sbb
dec
aas
sbb
adc
and
inc
add
cmp
dec
jg
cmp
or
in
inc
sbb
jge
sub
xor
fwait
in
mov
mov
rolb
sub
inc
and
jne
and
dec
ret
out
and
rorl
add
ljmp
jge
movsb
out
mov
movl
ja
pop
movsl
cmp
bound
call
mov
sbb
cmp
mov
ljmp
cmp
and
add
repnz
scas
rcrl
add
decb
xor
cmp
addb
adc
or
sub
and
add
out
clc
bound
out
pop
call
sbbb
dec
cld
mov
push
add
cmp
push
out
add
outsb
mov
stc
arpl
popa
nop
jp
pop
outsb
xchg
adc
or
scas
aam
push
mov
mov
push
pop
es
mov
add
jle
mov
push
adc
incl
pop
or
dec
add
xor
add
jmp
test
stos
std
or
jl
cs
str
lahf
push
push
addl
test
dec
push
nop
or
ds
and
jno
jmp
cmp
cmp
push
xchg
or
add
jne
sahf
pop
sldt
clc
out
pop
xchg
nop
add
push
je
pop
movups
inc
movsb
sbb
jmp
xchg
add
cld
adc
and
adc
add
jb
push
ret
mov
mov
in
jo
or
dec
pop
addl
sbb
add
push
sbb
add
inc
adc
stc
into
push
fdivr
sub
sub
addb
pop
mov
push
jge
ds
movsl
cmp
cmp
decl
shr
sbb
dec
add
sub
sub
push
mov
stos
and
pop
idiv
mov
xchg
sbb
in
xor
inc
hlt
sbb
imul
insb
je
add
jns
mov
in
gs
incl
mov
cmpsb
jae
add
test
stc
out
loopne
pop
push
test
add
mov
add
das
loopne
scas
aam
enter
ss
movsl
and
mov
out
pop
inc
mov
roll
mov
cmpsl
add
lods
icebp
stc
dec
sbb
and
lret
in
adc
add
xchg
fldt
push
or
mov
or
sub
inc
daa
movsb
add
mulb
add
out
cwtl
add
inc
hlt
js
inc
mov
roll
push
and
sub
rorb
add
movsb
cmp
mov
push
push
mov
push
mov
push
pop
nop
ficomps
ret
pusha
xchg
rcll
or
xor
push
in
add
and
add
xchg
dec
sub
pop
cmp
mov
xchg
add
xchg
andnps
dec
loop
add
sub
adc
je
popa
sbb
push
push
std
add
cmp
dec
sub
or
or
add
js
xchg
cwtl
sbb
loop
into
call
mov
ret
lods
ret
clc
shll
jnp
jl
pop
cmp
subb
push
stos
shll
sub
sbb
lock
mov
and
adc
cmpsb
add
push
xor
jl
sub
rorb
push
call
xor
and
imul
jmp
or
std
dec
cmp
cmp
sub
pop
push
and
push
aad
sbb
lock
dec
dec
add
lret
pop
clc
pop
sbb
sbb
data16
mov
xchg
jbe
add
mov
outsl
dec
cmp
cmc
add
jle
push
stos
test
xchg
sub
cmpsl
test
add
or
jns
add
xor
jne
sarb
out
dec
fistl
shrb
add
mov
xor
add
aaa
sbb
je
lret
rclb
pop
lea
pop
and
adc
frstor
ss
mov
fdivrs
cmp
add
mov
adc
je
adc
xor
jne
mov
mov
cmp
mov
or
outsl
arpl
and
daa
mov
ja
add
pusha
popa
adc
clc
add
decb
add
and
inc
add
add
jne
sbb
ret
xorb
mov
cmp
sbb
push
or
and
lods
fmuls
sub
adcb
loop
push
sbb
aad
cmp
mov
outsl
out
jg
cmp
popf
pop
es
out
fnstsw
adc
dec
push
dec
arpl
cmp
xchg
mov
mov
sbb
inc
dec
lret
es
repz
sbb
aaa
je
clc
stos
adc
fs
jmp
push
add
lods
aas
aam
add
xchg
add
mov
clc
mov
and
add
int
cmp
les
jne
add
clc
stos
jne
rolb
addb
fwait
push
adc
add
hlt
fidivrs
add
leave
push
ret
jae
roll
add
add
ja
or
and
sbb
adc
dec
add
mov
cmpb
ret
add
and
js
adc
sub
aaa
pop
push
or
pop
sahf
icebp
push
loopne
test
test
jno
addb
add
js
adc
andb
sub
inc
add
sub
shl
hlt
pop
adc
push
mov
xlat
aaa
xchg
mov
fmuls
ljmp
sub
mov
arpl
jge
mov
enter
insl
jp
inc
adc
divb
cmp
pop
pop
sub
or
and
nop
sub
daa
add
xor
test
stos
push
add
and
mov
inc
add
subl
adc
subb
dec
call
mov
pop
in
mov
dec
call
pop
nop
lds
ljmp
dec
fs
ret
sbb
push
ds
pop
sbbb
or
mov
mov
jo
inc
in
add
mov
pop
pop
dec
adc
orl
add
add
sbb
fdivrs
add
iret
ret
jo
insb
add
mov
dec
aas
mov
or
add
xchg
call
aam
xor
pop
cltd
add
pop
lret
cld
mov
sbb
stos
cs
call
xlat
int3
and
pushf
add
mov
enter
fldl
loope
cmp
in
rolb
xor
mov
pop
je
dec
and
adc
add
sub
mov
push
cltd
mov
rclb
xchg
jmp
add
pop
sarb
in
and
add
mov
dec
clc
aaa
dec
sarb
cmp
or
and
cmpb
add
push
add
xor
cmp
sbb
lcall
mov
and
sub
lds
inc
lods
add
mov
push
or
jge
mov
inc
jl
dec
orb
jne
cmpsb
in
or
aas
cltd
jl
inc
outsl
clc
cs
je
mulb
mov
mov
dec
faddp
add
xchg
add
fsub
scas
mov
inc
add
les
out
leave
cmp
pop
movsb
sub
jo,pt
dec
mov
lcall
dec
xchg
sti
aam
shlb
xchg
add
cmp
push
jno
pusha
inc
or
mov
pop
leave
mov
push
add
xlat
insb
imul
add
push
fdivs
ds
insl
push
pusha
int3
pop
push
les
cwtl
mov
sub
sub
sbb
movsb
popf
pushl
loopne
xor
addb
pop
push
ret
sub
add
push
push
sub
add
divb
pusha
test
or
popa
repz
inc
sub
jecxz
adc
sarb
add
int3
jmp
popa
push
mov
test
loope
data16
xchg
fiaddl
shr
or
add
jne
sbb
outsb
pusha
hlt
and
add
sub
mov
mov
add
push
mov
pusha
add
lods
dec
nop
test
enter
lock
imull
add
jmp
add
add
cmp
add
pop
push
scas
dec
mov
insl
inc
add
sub
or
add
jmp
add
test
data16
in
add
hlt
adc
sub
mov
pusha
pop
jo
add
add
dec
mov
leave
add
dec
push
add
fs
add
frstor
jnp
pop
mov
xchg
cmc
loopne
push
push
jge
pop
ret
mov
adc
add
sub
imul
push
jno
add
mov
inc
cmc
xchg
add
mov
in
add
jo
notb
jnp
sbb
jne
and
in
je
fbld
inc
bound
and
leave
add
jno
cmp
and
lea
je
test
add
add
pop
cmp
aaa
andb
jne
push
jle
add
inc
xor
pop
and
leave
loop
jb
add
pop
decb
dec
cmovs
jae
dec
adc
loopne
add
cmp
push
pusha
cmp
add
inc
add
fcomps
mov
or
aam
adc
xor
js
xchg
hlt
repz
push
inc
pop
and
nopl
add
jmp
adc
sbb
pop
xchg
ljmp
add
add
call
push
mov
cmp
add
cwtl
outsl
and
add
adc
lock
jae
pop
iret
lods
add
cltd
add
inc
add
test
add
dec
loopne
xchg
das
add
outsl
into
adcb
cmc
jb
add
dec
xchg
sbb
add
add
call
pop
sbb
pop
mov
pop
std
je
addl
dec
and
xor
add
int3
inc
push
roll
or
into
daa
aad
jo
pop
clc
sti
imul
cltd
test
std
rcrb
ret
add
pop
cmpsb
lock
add
insb
call
cmp
fwait
sbb
stos
clc
orl
outsl
dec
jnp
push
add
popf
in
mov
testb
add
push
mov
lahf
loop
loop
add
push
inc
std
add
mov
or
fmuls
sub
int
shrb
pop
stc
add
ja
add
push
adc
mov
aam
mov
xor
jnp
jns
push
lods
adc
mov
sub
stc
in
sub
fcmovnb
inc
add
lret
mov
mov
mov
add
mov
mov
cmp
in
leave
add
push
scas
inc
pusha
sub
and
incl
sub
add
jno
sub
push
pushf
cmp
push
pop
call
subb
push
push
push
sub
fs
fsub
pusha
lock
mov
xor
testb
or
daa
pop
das
xchg
add
pop
xchg
js
pop
dec
add
insb
test
cli
add
cs
push
test
add
adc
roll
jnp
dec
je
add
or
pop
int
xor
pusha
cld
movsb
add
pop
mov
rolb
mov
clc
add
icebp
fisubs
xchg
jnp
push
std
xchg
mov
mov
add
sbb
daa
movsb
in
inc
pop
jmp
xlat
ret
pop
push
je
jne
imul
add
mov
mov
and
xchg
push
iret
add
or
cmp
das
add
adc
pusha
xchg
icebp
pop
jle
ret
jmp
lods
add
mov
add
dec
dec
lret
inc
push
xor
jno
pop
adc
test
mov
sbb
push
mov
fadds
adc
popa
mov
movsl
bsf
mov
pusha
pop
shll
cmp
repz
daa
or
inc
push
cmp
or
sub
and
and
imul
cmpl
dec
adc
xchg
xor
adc
cltd
scas
sbb
in
leave
or
adc
mov
sbb
pop
add
shlb
add
outsl
mov
cmp
testl
test
mov
push
insl
hlt
add
and
in
xchg
adc
jno
push
mov
inc
add
insb
rcrl
in
sub
int3
mov
cmp
pop
testb
test
in
xor
leave
mov
jnp
add
icebp
push
outsb
sub
loopne
cmp
inc
fsubl
insb
inc
xchg
sbb
cmp
and
lock
int3
cld
lea
add
push
inc
rclb
and
jne
leave
dec
pushf
testl
jbe
adc
mov
rorb
and
push
inc
les
test
inc
xlat
clc
sub
aaa
or
adc
add
cmp
add
cmp
sbb
lea
lcall
mov
sub
cmp
subb
enter
inc
movsb
add
loop
aam
or
xchg
adc
js
xchg
mov
inc
xchg
nop
adc
call
fldt
mov
pop
pop
stc
fnstsw
loopne
sub
enter
cmp
add
mov
fidivs
mov
lods
add
lock
mov
jo
and
popa
cmp
and
insb
adc
mov
outsl
mov
pop
inc
add
popf
lahf
test
xchg
add
ret
push
aaa
das
js
jp
jae
add
hlt
xchg
dec
ljmp
mov
mov
push
orl
xchg
mov
scas
mov
add
pop
add
repz
in
sub
xor
lea
testl
cmp
add
mov
and
iret
jno
xor
in
iret
test
in
mov
mov
sbb
je
adc
shrl
jg
fsubr
mov
add
pop
arpl
outsb
test
sub
jge
xchg
jae
lret
lahf
lea
in
push
mov
push
jle
add
addb
cld
add
add
pop
inc
scas
add
jae
xchg
lock
test
mov
xchg
and
add
pop
and
and
adc
mov
push
add
lret
cmp
loop
or
add
sti
mov
mov
dec
in
aam
sub
add
cvttps2pi
das
xor
adc
xor
adc
cmp
bound
pop
pop
inc
sbb
inc
dec
bound
inc
fs
push
add
call
cli
fcomps
push
stos
fiadds
mov
push
sub
inc
and
push
out
sbbb
or
add
jmp
flds
imul
iret
ljmp
or
dec
jne
repnz
add
xchg
and
add
xchg
add
mov
decl
in
add
push
or
push
add
xchg
cld
push
in
test
mov
add
pop
adc
add
inc
fs
imul
and
sahf
add
rcll
add
hlt
add
sub
inc
and
nop
seta
lcall
xor
aad
cmp
sub
inc
push
dec
test
cmp
addr16
popa
insl
imul
sbb
inc
mov
outsb
dec
enter
insb
mov
push
jae
push
inc
lock
mov
mov
imul
movsl
lods
dec
enter
pop
rclb
in
hlt
les
out
cmp
pcmpgtd
fldl
popa
add
aam
movsl
cli
mov
sub
js
jne
push
xor
andps
dec
in
push
imul
fmuls
jns
xchg
fmuls
imul
jmp
pop
jns
dec
mov
dec
pop
insb
popa
pushf
roll
fs
jo
mov
inc
and
add
inc
sar
sbb
adc
es
aam
fmull
outsl
sbbl
pop
insb
mov
adc
inc
ds
out
jl
shr
test
inc
insl
jns
ds
xchg
mov
mov
jle
pmaxub
push
jns
add
adc
mov
outsb
insb
pop
push
pop
add
sub
js
out
push
movsl
adc
xorb
sbb
inc
sub
mov
es
dec
data16
mov
mov
xor
xchg
cmp
add
inc
loop
sub
inc
add
mov
inc
jno
jb
or
jne
jp
rolb
cwtl
and
shlb
loopne
ficoms
js
addb
adc
sub
outsb
lcall
clc
dec
in
loopne
repnz
insl
mov
sub
cmc
jne
cmp
lss
xchg
adcb
lcall
into
adc
shll
mov
lods
xchg
cmp
xchg
andb
jp
inc
sbb
mov
sbb
test
dec
pop
sbb
push
xchg
cmp
lret
fistps
outsb
inc
pop
mov
stos
mov
stos
xor
ds
sbb
in
add
push
sbb
paddq
mov
dec
and
cltd
dec
cwtl
adcl
scas
loopne
ja
add
sub
or
push
enter
add
fwait
and
pop
lret
push
xor
test
inc
movl
ljmp
outsl
jne
arpl
cld
sub
adc
outsb
xchg
fbstp
cmpsl
dec
add
out
test
pushf
add
and
loop
add
icebp
arpl
dec
sbb
addb
rol
dec
fcoms
inc
js
add
adc
push
push
mov
subb
mov
xor
xchg
rorl
in
test
push
xchg
stos
cwtl
jp
sbb
sub
add
push
mov
jno
adc
outsb
xor
inc
mov
add
addr16
nop
lahf
xor
addl
aam
adc
daa
aam
inc
dec
mov
pusha
adc
popa
enter
movsb
cmp
inc
outsb
out
aaa
push
dec
lcall
mov
push
adc
ret
loop
and
inc
test
mov
push
xor
and
dec
gs
or
jae
dec
xor
cmp
fildl
iret
mov
imul
dec
push
scas
add
push
xchg
adc
test
js
xchg
andb
add
xchg
fstl
pusha
or
arpl
and
push
and
in
xchg
out
test
lcall
xchg
mov
xchg
adc
cmp
mov
add
data16
and
mov
nop
xchg
psubsw
movsl
mov
sub
aaa
les
mov
dec
cmpsb
fstps
dec
jae
push
je
jno
pop
dec
push
cmp
cmp
das
xor
cmp
mov
sbb
fists
or
add
mov
hlt
pop
ret
in
push
cwtl
imul
sub
or
mov
out
add
mov
seto
fnstcw
jo
adc
pusha
cltd
adc
push
add
inc
inc
inc
cmp
and
sbb
adc
and
loopne
cmp
pop
mov
push
call
jle
rolb
enter
or
shlb
pusha
push
mov
vmread
jp
pusha
mov
pop
fsts
and
cmp
xor
sub
push
and
mov
jns
push
or
sub
add
aad
fadds
or
and
loope
insl
jo
dec
add
adcb
xor
or
add
add
jl
and
ret
clc
adc
add
movsb
das
mov
sub
fadd
clc
push
mov
add
pusha
in
add
mov
adc
je
dec
push
inc
sbb
sarb
mov
jp
inc
xchg
insl
push
mov
mov
push
push
xor
push
jo
jmp
lahf
mov
outsl
incb
add
push
inc
bound
cmp
add
fstl
leave
and
popa
in
xor
lods
cmp
dec
mov
cwtl
add
pop
sub
jne
mov
enter
mov
je
test
adc
popf
adc
sbb
sbb
mov
gs
or
in
out
fildl
adc
mov
or
cmpsl
sub
jne
addb
js
or
push
jle
rclb
pop
add
xchg
mov
into
lds
and
add
xchg
add
mov
sbb
xor
nop
sbb
outsb
orb
mov
inc
out
andb
mov
sub
sbb
xchg
out
mov
dec
or
cmp
sbb
addr16
aad
inc
or
sub
fisubl
lock
dec
jne
in
and
outsl
dec
add
xchg
add
sbb
and
cmp
test
fdivl
aam
or
add
jnp
scas
ljmp
or
mov
add
xchg
xor
or
or
imul
xchg
bound
notb
cmc
add
sub
xor
aam
shll
sub
and
push
cmpsl
lods
sbb
jno
or
mov
pop
inc
lods
mov
stos
leave
fld1
pop
xlat
xchg
rolb
dec
shl
adc
andb
cltd
push
jae
xchg
add
xor
add
xor
dec
mov
dec
pop
add
jo
outsl
add
cmp
add
adc
sub
lahf
push
sti
rolb
mov
sub
jl
push
pop
or
add
mov
pop
mov
mov
pop
outsl
inc
jb
loopne
push
imul
mov
shr
cmp
pop
add
fdivrp
dec
stos
add
xor
mov
sbb
das
jg
adc
dec
add
sbb
dec
addb
xchg
and
jno
adc
stos
add
out
lea
pop
loopne
mov
add
std
filds
test
pop
cli
fisttpll
cltd
add
add
je
sbb
mov
mov
andl
add
ret
nop
mov
cld
call
fnstsw
js
cmp
pop
mov
add
cs
subb
lods
and
add
enter
in
loopne
xor
inc
bound
lea
mov
jns
dec
clc
lret
arpl
xchg
out
or
hlt
inc
add
stos
and
scas
test
movsl
dec
mov
dec
adc
daa
add
fsubrp
mov
jle
movl
mov
js
jmp
call
xor
cmp
adcb
je
clc
xor
add
push
mov
pop
lcall
popf
andl
sar
inc
in
add
pop
rcrb
add
aad
jnp
mov
add
jp
adc
rolb
push
fmuls
mov
gs
jmp
push
nop
xchg
adc
cmp
xorb
rcrb
or
rclb
or
add
push
mov
add
xchg
inc
test
out
mov
loopne
cmp
ret
xchg
sbb
mov
add
adc
mov
jns
and
sbb
ss
jge
rcpps
add
mov
and
dec
je
push
sti
sub
cmpsl
dec
in
or
ret
add
daa
test
sub
inc
adc
movl
movzwl
add
push
sub
out
dec
xlat
mov
sbb
push
cmp
add
mov
xchg
rcrl
add
pop
pop
or
inc
add
fs
dec
and
jp
add
xchg
movsb
dec
outsl
jmp
lock
add
push
out
jg
adc
mov
jb
sar
addr16
and
aaa
adc
xor
add
xchg
mov
sar
pop
faddl
clc
out
jb
jne
add
scas
pop
mov
add
mov
and
jp
daa
push
xchg
push
in
add
call
cmpsl
cwtl
je
inc
add
sub
sub
cmpsb
lret
gs
pop
or
add
cmp
xorl
in
cli
stos
mov
fadd
call
mov
or
jle
add
jmp
push
pushl
mov
or
or
inc
cs
dec
mov
fcmove
jno
xchg
mov
sub
lods
mov
je
add
pop
lea
mov
shl
jb
fs
add
and
and
inc
add
test
ret
mov
and
inc
or
dec
adc
push
fs
push
add
arpl
sbb
pop
jne
push
jecxz
mov
adc
iret
adc
mov
or
inc
pusha
jns
push
push
add
cli
push
jmp
dec
xlat
add
mov
push
push
dec
jle
add
add
add
jge
mov
les
incl
sbb
lret
push
mov
jo
push
ljmp
push
shrl
lock
enter
clc
cmp
mov
add
xor
or
fiadds
call
inc
add
insb
mov
ds
mov
push
por
or
add
dec
and
push
sub
or
jmp
cmpl
add
cmp
ret
cmp
add
les
das
mov
in
sub
in
leave
add
add
mov
add
cmp
push
sbb
mov
inc
mov
loope
arpl
dec
adc
orb
inc
or
inc
add
jb
jg
sbb
push
inc
jns
divb
add
lock
add
pop
or
and
xchg
add
je
sbb
add
inc
shr
mov
inc
daa
cwtl
and
pop
xchg
pop
test
and
jmp
cmp
je
loopne
add
inc
dec
add
or
mov
jbe
mov
les
inc
mov
push
add
mov
xor
sahf
aam
cmp
mov
inc
sbb
dec
in
or
and
push
add
loope
dec
cmp
push
lds
pop
ficoms
clc
mov
insb
cli
rcl
push
push
add
bound
xor
sub
push
pop
mov
faddl
popf
adc
xchg
into
cmp
ror
aas
ret
bound
adc
outsl
push
jbe
sahf
add
xchg
xlat
mov
add
and
ret
test
fstpt
shl
popa
les
sub
xchg
xchg
aad
scas
xorb
in
jae
rcrl
outsb
xorb
mov
jmp
mov
inc
add
mov
sahf
pop
xchg
push
stc
lock
inc
or
xchg
and
push
mov
inc
icebp
inc
imul
jmpw
fs
cltd
imul
scas
sub
int3
add
out
icebp
add
mov
pop
dec
sub
sbb
dec
push
daa
rorl
icebp
fstl
dec
and
loopne
test
shr
sub
or
mov
movb
add
imul
flds
add
add
mov
je
arpl
in
sub
mov
ja
add
adc
pushf
in
add
or
notl
mov
mov
adc
add
test
xchg
repnz
add
push
jg
pop
imul
and
or
inc
add
ret
out
add
dec
cld
push
andl
and
loope
dec
and
adc
std
or
add
bound
pop
or
dec
inc
clc
cmpsb
sbb
cmc
adc
sub
test
enter
cltd
jb
cmp
add
lret
pop
inc
mov
add
clc
jge
and
jne
add
call
in
push
jecxz
xor
push
jmp
add
rclb
jb
jbe
xchg
inc
xchg
clc
inc
push
add
sub
inc
xor
push
add
adc
loopne
bound
cmp
imul
lea
scas
inc
test
sti
mov
inc
jmp
and
push
aad
sti
sar
xor
push
pop
adc
xchg
adc
adc
or
push
ds
addr16
push
jnp
sti
add
aam
iret
fwait
xchg
dec
lock
add
cmp
add
xchg
fisttpl
jecxz
std
sub
adc
repz
sbb
scas
lret
add
cld
add
jae
sbb
mov
iret
push
in
sarl
ja
mov
adc
xchg
lret
add
sbb
add
mov
sti
push
enter
and
sbb
pop
sti
cmp
add
ds
lock
push
xor
jo
jne
add
insl
aas
dec
cs
pop
mov
mov
jae
cld
add
adc
jne
aaa
xchg
cmp
cmp
pop
int3
mov
movb
sub
and
inc
cmc
in
xor
movsb
or
out
shl
das
xor
fldt
and
push
add
pop
sbb
pop
mov
repz
xchg
jno
jl
popl
pop
pop
pop
movsl
stos
add
jmp
bound
divb
mov
mov
push
inc
not
add
rclb
stos
pop
sub
cmp
mov
and
mov
mov
add
pop
pop
roll
aas
sar
lock
cmp
jne
mov
aaa
enter
pop
cmpsl
mov
ret
mov
jb
push
cld
mov
pop
ljmp
xor
push
mov
stos
adc
dec
js
retw
xlat
sbbb
mov
inc
jns,pt
cli
pop
xchg
cmc
addr16
rcll
cmp
sub
xchg
aaa
dec
mov
sbb
cmp
inc
adc
call
adc
rolb
mov
pushf
jbe
add
in
jo
shll
test
inc
mov
inc
jnp
add
and
add
mov
and
sbb
jnp
sub
data16
idivb
loopne
add
push
lahf
xchg
push
add
cmpw
mov
aam
push
popf
push
adc
add
leave
aas
ja
sub
aaa
add
mov
inc
push
pop
lea
pop
xor
push
or
pushf
dec
xorl
ret
add
mov
dec
insb
and
pop
sbb
push
sub
dec
ret
add
dec
cmp
add
xlat
shlb
ds
push
repz
inc
sub
sbb
iret
add
sub
push
mov
pop
cmpsb
dec
xlat
cmp
pusha
push
jg
mov
jns
push
xchg
lds
push
push
mov
xchg
jo
mov
movsl
pusha
aam
xchg
xor
fbstp
add
or
cmpb
mov
mov
stc
push
sbb
add
mov
sbb
mov
adc
mov
add
add
and
imul
xor
mov
inc
pop
sub
stos
sub
scas
add
push
cmp
adc
pop
pop
clc
andl
xor
add
test
jno
fnsave
add
push
shlb
stos
and
mov
jecxz
hlt
test
pop
push
call
cmp
add
or
scas
orl
adc
dec
push
push
push
add
pop
mov
in
xchg
sbb
adc
sti
jg
rol
lahf
or
rcrb
jmp
mov
popf
inc
pusha
xchg
cmp
or
test
sub
xchg
cmp
mov
inc
cmp
add
pop
inc
mov
jmp
dec
add
insb
dec
jmp
mov
sub
sbb
repz
xlat
lock
and
xor
mov
xchg
sub
add
lods
and
pop
push
call
call
clc
jmp
pop
pop
repz
cmpl
sub
test
testl
test
enter
pop
cwtl
sub
or
call
mov
nop
mov
or
test
or
add
gs
aad
mov
aaa
jnp
cmp
add
mov
sbb
bts
testb
adc
add
cmp
pslld
dec
scas
push
and
mov
xchg
jle,pt
pop
sub
int
pushl
sub
ret
cltd
ds
mov
lahf
jb
add
pop
sahf
or
cmpsb
cltd
pop
sbb
ljmp
pop
aam
lahf
mov
add
mov
add
xchg
jo
pop
or
or
ss
call
lret
cwtl
imul
push
lahf
daa
test
shll
add
adc
test
cs
xlat
inc
add
jnp
enter
sbb
les
pop
xchg
pop
test
out
add
pop
push
sub
loop
lock
repnz
das
xchg
xchg
vunpcklps
jb
fs
shlb
pop
xchg
add
or
inc
cmp
xchg
addb
cld
add
jl
addb
or
gs
fwait
divl
jle
adc
cmpl
or
pop
and
es
dec
pop
and
add
sbb
jnp
loope
outsl
rolb
sub
add
xor
pop
xor
mov
or
call
mov
add
or
popa
push
and
mov
out
xchg
push
pop
stos
iret
test
mov
add
std
out
test
push
xor
cmp
cli
sub
add
mov
dec
aas
mov
push
push
test
out
cmp
mov
dec
or
aam
inc
mov
rclb
xchg
and
outsl
mov
cli
add
arpl
xchg
test
mov
je
cwtl
add
sti
pop
inc
add
adc
pop
sub
cmc
lock
sub
scas
and
add
fldl
ret
mov
add
in
adc
std
call
add
pop
in
xchg
xor
xor
clc
movsb
push
add
push
mov
scas
adc
lret
sbb
add
mov
lds
add
mov
sbb
sub
or
movsl
cmp
sbbb
loope
lahf
adc
cmc
fadds
fildl
repz
pop
insb
adcb
inc
or
sub
in
or
pop
adc
sti
mov
shl
hlt
inc
les
add
jmp
xchg
dec
shll
fwait
xor
cmc
cmp
mov
scas
add
notb
les
addb
inc
mov
and
jge
js
insb
inc
or
mov
dec
xor
mov
test
cmp
cmp
add
sbb
mov
sbb
jb
adc
int3
mov
sub
pop
nop
push
repnz
dec
xchg
and
mov
push
ss
orl
call
sub
test
pop
sub
jl
add
pop
mov
and
lcall
daa
je
mul
or
sbbb
daa
add
or
jno
insl
sahf
add
jnp
push
jb
push
push
cld
sub
mov
xor
das
add
gs
sub
sbb
stos
add
xchg
aas
dec
inc
adc
jae
in
xor
inc
enter
xchg
movsb
rolb
adc
adc
pop
outsl
or
cmp
push
add
sub
sub
xchg
jns
mov
inc
inc
adc
cmovbe
xchg
inc
push
push
push
and
lcall
xchg
adc
add
jg
push
sub
sub
inc
roll
imul
into
sbb
xchg
cmpsl
cmp
add
pop
push
and
pop
faddl
pop
xchg
inc
ja
js
jns
loop
push
pop
ds
insb
pop
and
dec
inc
add
add
adc
sbb
push
orl
outsb
sub
aaa
add
push
push
push
lret
sub
fsubs
cmpb
outsb
adc
and
jge
add
in
or
dec
test
add
sbb
mov
sbb
mov
adc
mov
push
add
sbb
sti
leave
int3
and
pop
sbb
stc
sahf
rcrb
imul
sbb
xchg
mov
dec
add
je
add
sbb
mov
imul
adc
scas
push
add
cmpl
and
lret
test
aas
cmp
cmpb
sub
mov
stos
andl
test
in
sbb
idivl
rol
adc
push
hlt
jp
cmpsb
xor
add
ficomps
push
jne
jmp
loope
jl
jle
dec
push
add
mov
or
enter
hlt
iret
jno
lock
jnp
add
jmp
push
call
push
or
lea
jns
int
shl
mov
adc
pop
ficompl
xor
add
lds
imul
jp
add
cwtl
sub
add
rorb
fbld
cwtl
add
add
scas
push
xchg
mov
in
subl
repnz
rclb
pop
imulb
cmpsb
xchg
add
es
rcl
popf
add
fimull
call
shrl
cwtl
mov
dec
add
clc
mov
cmp
add
cmp
pushf
imulb
sub
pop
mov
fsubs
lahf
pop
lods
jl
add
clc
pop
mov
cmp
jl
inc
stos
adc
mov
dec
es
jae
lods
enter
aam
add
mov
imul
mov
push
lods
jbe
dec
mov
rcrb
sbb
xchg
cmp
stc
mov
cmp
dec
mov
adc
add
xchg
sub
sarl
sub
dec
inc
sahf
hlt
mov
js
and
mov
loopne
imul
jbe
ljmp
sbb
mov
loope
pusha
and
fistpll
test
les
adcl
aaa
psubusb
pop
mov
in
dec
call
add
lods
dec
and
mov
add
mov
mov
ret
rol
or
xor
pop
mov
fcomps
jnp
mov
int3
frstor
mov
add
inc
mov
xlat
add
xor
cld
pop
imul
or
in
pop
add
outsb
lds
arpl
xor
push
sbb
adc
pop
pop
dec
orb
adcb
jmp
pop
add
dec
clc
jne
adc
jg
icebp
add
adc
enter
mov
xor
cmpl
pcmpeqw
xor
push
sbb
adc
dec
loopne
cmp
cld
and
das
fdivl
leave
adc
pop
mov
enter
add
push
xchg
mov
ficomps
add
lcall
adc
mov
loop
imul
ret
test
les
enter
mov
inc
int3
rol
sub
les
push
push
add
pop
loopne
xlat
fs
scas
sub
mov
ds
andb
negl
loope
ret
mov
pop
lock
dec
mov
xor
or
add
xchg
movsl
jl
add
stos
mov
cmp
mov
testb
inc
popa
outsb
pushf
gs
pmaxub
adc
clc
and
faddl
inc
add
mov
dec
andb
cmp
inc
or
repz
cmp
adc
fnstsw
xchg
cld
mov
out
subl
les
ret
lock
cmp
or
pop
add
dec
mov
movsb
cmp
sbb
add
push
out
mov
scas
scas
cld
mov
sbb
sub
dec
imul
outsl
stc
out
jno
jle
repz
add
cmp
cli
add
popf
out
enter
addl
add
fcmovnbe
ficoml
addb
inc
adc
push
sub
repnz
adc
out
add
jae
in
lret
add
sarb
jle
pop
inc
lret
push
mov
sub
sti
sub
jg
add
je
adc
scas
add
adc
daa
pop
test
inc
pop
or
jne
push
add
mov
sti
gs
test
mov
aad
sbb
inc
xor
enter
mov
jnp
addb
popf
in
pop
pushf
movswl
mov
and
pusha
js
sbb
jmp
add
sbb
leave
xchg
or
fadds
mov
mov
sbb
lahf
push
fisubrs
jmp
rolb
inc
adc
inc
xchg
and
lcall
addl
dec
xor
mov
xor
or
enter
sub
scas
std
adc
movl
ret
add
ljmp
js
lea
sbb
cmp
xorb
jle
pop
mov
aas
push
add
rorl
add
jne
cmp
dec
push
add
sbb
pop
loopne
push
add
add
sub
adc
aam
dec
rclb
mov
ds
fmull
cmp
sbb
add
add
inc
stc
ficomps
push
ja
inc
test
add
lock
gs
and
int
push
adc
icebp
ja
jne
lds
and
sub
aad
inc
push
jmp
inc
or
pusha
mov
sar
add
ja
adc
inc
mov
xor
insb
loopne
or
daa
and
cld
lds
sub
or
and
or
sub
scas
test
lock
daa
lahf
and
nop
roll
bound
pcmpeqw
jno
loope
push
mov
cmc
test
mov
mov
movntps
jp
xchg
jbe
dec
add
and
adc
add
xchg
in
outsl
mov
mov
sub
jne
sbb
sbb
jl
call
aam
xchg
repnz
mov
sbb
add
ja
and
add
mov
loope
std
ja
push
pop
dec
mov
std
out
add
pop
in
pusha
call
test
call
add
into
decl
push
or
jo
cmp
add
xchg
push
or
mov
fbld
les
imul
outsb
inc
sbb
adc
jae
mov
jb
push
loopne
xchg
xor
pop
mov
ret
dec
dec
lea
add
dec
sub
movsb
aad
scas
repz
sub
sub
xchg
sarb
inc
pop
push
xor
iret
xchg
loopne
inc
out
fwait
call
mov
jge
add
movsb
cli
fidivrl
jl
or
loopne
xchg
and
push
js
nop
xor
out
cld
add
ja
sbb
clc
wbinvd
add
cmc
gs
xor
hlt
mov
or
jno
inc
fldcw
cmp
jge
pop
aaa
push
inc
lock
in
sbb
cmpb
fmuls
sbb
nop
lock
in
push
loopne
xchg
xchg
or
lock
shl
and
fsubl
fistpll
push
dec
add
pop
inc
aam
or
lcall
int3
add
filds
or
hlt
jno
bswap
enter
imul
cmpsb
fisubs
or
fs
aas
jbe
add
lahf
popa
mov
xor
and
cmp
xchg
mov
sti
or
cvtps2pi
iret
les
lods
add
sbb
and
stc
test
xchg
inc
movsb
paddq
aas
addr16
jns
repz
mov
add
inc
test
pushf
sbb
fisubl
mov
les
and
lods
sub
lret
out
mov
rcll
nop
repnz
das
mov
les
mov
or
pop
mov
lods
inc
jbe
jg
lea
je
arpl
ret
jns
js
enter
filds
or
add
shll
stc
pusha
aam
add
test
cmp
mov
mov
add
insb
mov
push
xchg
mov
arpl
xchg
add
inc
push
out
pusha
xchg
test
sub
sahf
jecxz
adc
movb
bound
mov
sub
aad
sub
push
and
arpl
and
addb
cld
sbb
cwtl
cmp
sbb
inc
jo
mov
pop
push
or
inc
nop
jnp
inc
add
mov
mov
repnz
mov
sub
push
mov
pop
mov
lock
mov
add
out
adc
mov
pushf
rol
call
cmp
or
out
add
dec
add
sbb
and
pop
das
jecxz
adc
mov
xlat
mov
jg
loopne
stc
hlt
fldl
push
dec
outsl
clc
sub
incb
adc
mov
xlat
pushf
sbb
cli
inc
add
inc
pop
push
inc
add
in
push
stc
cmp
xchg
jecxz
cmp
test
pop
push
push
in
and
jne
add
adc
mov
sub
hlt
dec
push
add
sub
pop
or
in
inc
out
adc
and
pop
sbb
call
or
fldl
push
aaa
xchg
jmp
xor
push
dec
mov
pop
gs
ds
xor
outsb
add
cmc
data16
jg
test
dec
xchg
shrb
push
sbb
dec
scas
push
lods
outsb
inc
fs
out
cmpsl
sbb
and
and
dec
loope
daa
add
lret
cli
dec
sbb
cmpb
or
sete
ret
add
mov
jg,pt
pop
jp
or
inc
add
adcb
aaa
sbb
adcl
into
add
mov
std
bswap
ret
push
bound
mov
mov
mov
add
jle
fdivl
lods
push
outsb
test
add
inc
add
adc
mov
pop
mov
add
call
ret
mov
pushf
jle
pop
int3
pop
dec
dec
loope
and
ret
cmpb
jb
addl
decb
out
fcomip
add
das
shrb
mov
dec
lcall
notb
push
bound
inc
test
dec
add
fcomi
repnz
inc
dec
add
or
adc
imul
or
shlb
and
add
pop
mov
jl
add
adcb
sbb
mov
adc
mov
out
xlat
in
popa
in
push
cmp
sahf
pop
mov
push
ss
leave
xor
mov
add
mov
xchg
and
xchg
in
out
mov
add
add
into
cs
fwait
int3
inc
or
enter
add
xchg
fs
inc
clc
pop
ret
sbb
cld
push
add
adc
sub
dec
or
lock
sbb
out
add
lret
test
cmp
andnps
mov
xor
jmp
cmp
call
add
jecxz
push
cmpsb
test
add
sbb
pusha
add
repz
jmp
cltd
cmp
test
sbb
mov
mov
daa
add
cmp
cmp
test
rclb
xchg
pop
add
lcall
push
or
test
enter
rclb
ljmp
add
adc
dec
shll
int3
jle
aaa
push
lock
cmp
dec
mov
pop
or
inc
push
not
pop
adc
je
test
push
sbb
dec
bound
out
je
mov
add
pop
jmp
addr16
repz
or
fisttps
nop
adc
add
test
xchg
add
jae
and
subl
mov
jno
call
clc
jb
in
dec
add
test
xor
add
cmp
and
inc
sbb
and
cli
inc
mov
int
dec
sbb
xchg
cmp
jnp
add
sbb
aas
mov
or
icebp
push
hlt
cmpsb
push
stos
mov
fldl
sub
movsl
fldenv
test
add
dec
insl
xchg
hlt
sub
adc
xor
sbb
add
xor
mov
add
sub
jae
pop
push
bound
jl
add
test
test
lret
push
inc
sbb
xchg
imul
sub
leave
xchg
mov
cmove
mov
adc
push
fs
lock
dec
pop
add
add
jae
add
push
pop
pop
pop
xor
adc
addb
lret
les
add
xor
in
xchg
dec
scas
add
shlb
add
dec
xchg
cmc
pop
or
je
xorb
adc
add
sub
mov
fs
add
mov
and
dec
es
fbld
mov
fmull
push
dec
pop
out
cmp
and
and
xor
mov
xchg
mov
push
sar
dec
or
call
jns
mov
mov
add
cmp
cmpl
in
mov
gs
cld
aad
hlt
pop
adc
test
std
jnp
mov
push
pop
mov
addl
push
cmp
xlat
dec
add
adc
sar
cltd
mov
dec
cmp
add
test
mov
inc
call
or
adc
push
ucomiss
aaa
lea
mov
std
pop
imul
lds
inc
dec
sub
add
test
and
mov
push
add
mov
push
shlb
in
inc
mov
sub
xor
ljmp
xchg
add
xchg
mov
outsl
in
out
and
dec
add
adc
sub
mov
sbb
daa
xchg
adc
les
std
lock
loope
push
outsl
in
out
and
or
jmp
andb
aad
jne
in
add
lcall
faddl
inc
add
addb
sub
in
push
cld
mov
or
fs
pop
sbb
xor
mulb
int3
je
push
add
sbb
aaa
cltd
mov
and
aam
cmp
fcoms
je
and
or
add
xchg
ret
mov
jmp
jle
xchg
ja
add
xchg
or
mov
adc
xor
cmc
jecxz
sub
add
xor
push
cmp
or
leave
in
rolb
dec
je
js
add
sbb
addb
mov
shlb
jmp
jbe
or
cmp
and
add
add
cwtl
pop
call
and
sbb
push
xor
add
push
enter
add
dec
xchg
push
or
jg
mov
add
push
push
mov
pusha
lcall
mov
add
mov
ret
mov
jmp
rcll
enter
jae
sbb
or
xor
or
pop
fcompl
rorb
pop
je
push
push
sub
ret
jo
add
mov
jb
add
mov
push
add
sub
rep
add
jmp
fsub
or
mov
mov
xor
roll
mov
sbb
add
inc
inc
inc
adc
push
sbb
jl
add
outsb
rolb
pmullw
sbb
pop
sub
mov
adc
or
fldl
xor
cmc
stos
scas
jbe
call
dec
and
cmp
jl
add
ret
lret
into
adc
adc
jno
and
mov
sub
cmpsl
rcll
jge
lods
xor
jmp
sbb
add
repz
cld
mov
sub
shlb
push
mov
sbb
rcr
mov
call
aad
loop
imulb
xchg
sbb
jecxz
inc
test
mov
ja
pop
loopne
push
inc
pop
push
loopne
sahf
dec
shll
add
int3
jecxz
push
icebp
jnp
add
call
pop
test
or
int3
push
es
aas
cmp
add
addr16
fsubrl
sub
xchg
hlt
inc
imul
jae
jne
dec
pop
adc
sub
push
or
adc
and
shl
or
out
inc
jl
add
lea
js
js
xor
outsl
icebp
clc
nop
lret
sub
jo
jmp
sub
repz
add
rcrb
add
aad
inc
or
movsb
les
nop
mov
jl
sub
rorb
mov
movsb
adc
adc
enter
add
add
sub
or
push
or
mov
or
mov
mov
loopne
inc
sbb
lea
std
cmp
adc
daa
xor
sub
out
pop
leave
jg
cmp
mull
pop
inc
clc
ja
xchg
nop
xchg
push
add
popa
iret
cmc
or
jle
lods
sbbl
add
pop
push
aas
dec
ret
mov
imul
cmpsb
movb
gs
cltd
subb
sahf
add
push
nop
adc
mov
add
shlb
mov
add
sub
ljmp
add
pop
or
add
jmp
in
cmp
mov
dec
nopl
shlb
mov
packssdw
repnz
xchg
xchg
push
andb
pusha
jb
imull
xchg
pop
rorb
add
and
cmp
xor
ds
loopne
scas
push
pusha
inc
and
inc
inc
cmp
add
cld
popa
xor
bound
test
push
add
mov
cmpsl
sub
adc
in
jne
and
mov
lea
add
pop
fsts
add
add
je
add
std
or
mov
sbb
sbb
xor
inc
add
gs
cld
pushf
xchg
dec
pop
flds
mov
dec
or
jmp
enter
roll
and
jae
cmp
pop
movsb
add
int
pop
enter
add
ret
sbb
push
add
jg
sldt
loopne
push
add
add
arpl
mov
jecxz
push
inc
add
sbb
inc
fisubl
add
inc
dec
push
jae
add
shl
je
sub
xchg
jae
adc
add
aam
sbb
cmp
stos
add
lods
cmp
inc
enter
out
cmp
cmc
inc
mov
scas
enter
das
mov
pop
jne
mov
xor
push
push
or
xchg
push
rcr
jle
and
pop
jp
add
dec
pop
jo
rcl
mov
fistl
push
mov
inc
mov
and
insl
add
stos
test
adc
jno
icebp
je
push
inc
jmp
inc
add
aam
mov
add
call
inc
adc
cmpsb
mov
add
loope
decl
imul
js
or
cli
mov
xchg
xor
jmp
dec
sub
bound
dec
mov
jne
add
aam
add
add
rorb
mov
sbb
movsl
cmp
ljmp
int
in
shll
inc
cwtl
cs
fiaddl
add
loope
fs
jle
add
push
add
lret
enter
cs
inc
in
and
test
add
cmp
xor
int3
mov
rorb
xor
dec
mov
lret
xchg
rclb
and
mov
adc
leave
addl
adc
add
jns
insl
inc
enter
jae
aam
jb
loop
xchg
push
add
mov
xchg
add
ljmp
add
or
outsb
repz
xchg
push
sahf
push
lock
dec
xchg
pop
lods
jbe
cld
imul
add
cmp
fs
cmpsb
push
ss
add
std
jne
mov
xor
jp
repnz
lods
jns
sbb
xchg
add
jp
cli
cmc
hlt
cmpsl
in
adc
add
es
sbb
repz
xlat
fsubr
add
pop
push
adcl
inc
sbb
out
add
push
ret
cmp
rcrb
or
and
inc
mov
push
pop
call
pop
add
pop
push
lods
movsl
sbb
push
add
jecxz
out
xchg
push
sub
in
iret
adc
out
cmp
jae
call
cltd
jnp
mov
and
add
dec
add
cwtl
mov
add
lret
sub
sar
jnp
add
cmp
sbb
ljmp
xor
sub
mov
movb
repz
cmp
sbb
cli
cld
sub
jmp
out
and
clc
outsl
add
daa
or
jbe
addr16
xchg
cmp
inc
lcall
pop
push
and
add
adc
call
xor
mov
pop
xchg
sub
mov
add
ds
adc
movb
cmpsb
inc
dec
addl
sbb
pop
and
pop
pop
cmpb
or
movsb
push
add
imul
inc
sbb
rcrl
cmp
xchg
add
add
lds
decl
and
adc
popa
or
inc
xor
iret
test
hlt
pop
push
or
ja
mov
cmp
pop
rcl
jmp
shrl
ja
adc
mov
add
pop
sbbb
jmp
xlat
out
xchg
sub
push
roll
jbe
in
push
or
jns
add
out
dec
repnz
inc
sbb
or
ret
in
add
fwait
or
movsb
add
and
push
pop
cmp
adc
add
push
pop
jns
pusha
pop
adc
and
je
dec
enter
in
adc
je
xchg
add
inc
mov
add
and
cmp
mov
cmc
jns
xor
les
movsl
ret
or
rcrb
inc
nop
jge
add
add
lret
mov
adc
pusha
scas
insl
or
add
add
add
and
sub
add
dec
xor
fwait
imul
add
fsts
cmp
int3
xchg
icebp
mov
je
add
adc
test
mov
and
sbb
insl
mov
dec
scas
cltd
les
ja
xchg
cmp
and
or
jbe
cs
mov
test
add
jmp
orl
arpl
mov
loopne
push
int3
sbb
sbb
sub
imul
loopne
les
push
push
cmp
in
add
pusha
das
mov
lret
clc
fs
dec
mov
adc
add
jle
xlat
xor
ja
or
je
mov
and
jecxz
and
adc
or
popa
inc
inc
add
add
xchg
aam
inc
mov
push
adc
sub
push
inc
push
je
sub
mov
mov
repnz
or
ret
ljmp
xor
repz
dec
enter
jle
sbb
ljmp
inc
cmp
aaa
pop
dec
lock
sbbl
cs
sahf
popa
mov
movb
xlat
dec
mov
add
hlt
lds
and
iret
jmp
xor
push
sub
pop
pop
in
add
cld
insl
lods
js
icebp
and
push
add
add
loopne
or
dec
clc
add
pcmpeqd
aam
adc
sub
xlat
add
insl
fadds
adc
adc
add
enter
jmp
sbb
dec
pop
push
cwtl
xor
adc
dec
ja
add
or
dec
sbb
cmp
cmp
je
xor
adcl
sbb
fsubl
add
mov
cmpb
xchg
sbb
clc
sub
jae
arpl
jbe
inc
mov
adc
sahf
lcall
sub
lgs
push
inc
pop
add
shrb
hlt
add
push
add
fisubrs
cmpsl
push
sub
fldl
dec
mov
mov
pop
ljmp
addb
xor
dec
sub
cwtl
mov
jmp
pop
cmp
add
add
stos
push
pop
sbbl
sub
jb
addr16
mov
inc
fsub
inc
rclb
add
add
ss
mov
push
or
sbb
jmp
adc
add
loop
xchg
hlt
add
lds
das
and
cmp
dec
mov
mov
mov
ltr
pop
sub
push
cmp
repnz
test
in
cmp
mov
loope
shr
push
add
dec
out
cmpsl
ljmp
add
adc
fcom
sub
push
or
jb
fmulp
add
xor
rcrl
push
add
adc
and
mov
add
xor
dec
add
or
mov
daa
test
inc
std
push
mov
rcrl
jmp
add
rclb
je
add
mov
sub
je
cmpsl
pusha
call
test
in
in
out
in
outsl
push
jg
add
mov
dec
call
mov
roll
inc
push
sub
call
mov
sub
sub
cmp
and
inc
add
arpl
mov
mov
add
pusha
add
inc
ds
mov
outsb
sub
xchg
mov
and
mov
out
ss
add
push
loope
sbb
lgdtl
sbb
push
mov
test
shrb
adc
rol
sub
add
inc
add
mov
sbb
and
mov
cli
call
sbbl
mov
inc
pop
andb
and
add
sub
test
jo
push
mov
add
adc
cltd
bound
add
fnstcw
push
ljmp
jmp
rolb
mov
inc
add
and
inc
and
dec
pop
inc
lret
add
pop
jmp
push
cs
xchg
and
ret
shll
inc
cmp
aaa
add
js
fbstp
sti
add
int
fildl
punpckhwd
dec
inc
xchg
cmp
lcall
sub
lcall
jmp
xchg
mov
add
test
add
into
cwtl
cmpsl
jl
add
call
insb
xchg
or
nop
call
add
jle
je
add
cmp
push
sub
push
andb
addl
add
mov
jp
setns
loopne
sbb
jo
loopne
addl
pop
add
arpl
add
sub
push
push
or
jnp
add
pop
std
fisubl
sti
xchg
add
stc
mov
pushf
sub
jg
add
xchg
xor
mov
xor
cmp
or
xchg
ds
mov
movsl
dec
xor
adc
sbb
in
mov
jl
into
lret
push
jo
add
push
rorb
out
push
bts
pushf
push
lahf
pop
sbb
repz
sub
inc
call
in
int
or
add
test
mov
add
fmul
pop
push
xor
add
js
cmpb
lret
dec
jge
add
shlb
scas
add
bnd
movsb
es
xchg
aam
mov
dec
repnz
sub
out
sarl
or
out
call
or
xchg
and
jne
cmp
mov
dec
fiadds
aas
cmc
ret
pop
sldt
jo
dec
xor
push
iret
icebp
lret
mov
add
lock
cli
adc
sbb
fstl
xchg
add
outsl
mov
in
xor
or
sbbb
sub
add
xor
add
into
sbb
sbb
sbb
mov
pop
pop
or
pop
call
ret
xchg
cmp
inc
or
jb
xchg
add
fidivrs
out
inc
push
sub
lret
mov
xchg
xchg
sub
push
pop
test
sbb
adc
or
xchg
sbb
pop
dec
adc
popa
push
filds
cmp
cmpsl
dec
out
pop
clc
add
fisubs
dec
adc
mov
dec
add
cmpsl
mov
jl
cmp
jp
add
lock
lahf
aad
inc
es
test
fildl
jb
jge
mov
pop
add
aas
jle
add
adc
lret
sbb
cmc
jnp
nop
in
adc
subb
out
orl
add
sbb
xor
dec
push
pop
add
mov
add
ljmp
jp
mov
mov
sarb
adc
sti
nop
inc
cmc
fcompl
push
js
or
sbb
hlt
push
pop
js
mov
lahf
add
stos
repz
pop
add
cmp
ret
adc
push
dec
add
or
push
or
push
rcrb
add
lret
mov
sub
dec
add
push
jg
push
jo
mov
or
mov
push
mov
dec
cmp
jmp
push
icebp
add
shl
data16
leave
add
and
mov
int
add
cmp
rolb
cmp
in
aaa
mov
mov
push
dec
and
sbb
jbe
or
cmpl
sahf
add
add
int3
or
push
pusha
sar
ret
int3
sub
cwtl
xchg
push
cmp
jne
add
sbb
in
and
pop
fs
or
std
call
push
mov
adc
icebp
add
adc
leave
out
test
add
les
clc
add
push
mov
aas
add
jae
push
add
xchg
clc
test
dec
push
out
add
call
cmpsl
or
sub
ret
clc
or
adcb
rcrb
or
add
jmp
mov
mov
mov
jp
dec
pop
add
cli
xchg
and
popa
push
push
call
stc
push
das
mov
mov
test
push
fstps
mov
dec
add
mov
sub
push
push
mov
adc
rolb
dec
cmpb
xchg
pop
dec
inc
mov
orl
add
pusha
cltd
std
int
aam
or
out
or
mov
cmpsb
imul
loopne
les
call
mov
loopne
jb
xor
mov
icebp
cmp
aam
inc
out
or
add
leave
push
mov
jae
ret
cs
add
lret
sub
cmpsb
cmp
cwtl
push
pop
or
xchg
jno
div
pusha
adc
pop
mov
or
and
jecxz
inc
ret
repnz
leave
sbb
mov
add
add
push
cwtl
pushf
movsl
and
add
mov
roll
test
sub
xor
clc
adc
lea
add
sub
loopne
ja
std
add
sarb
xor
jae
jo
add
xor
sub
inc
mov
in
add
inc
mov
add
scas
and
or
or
adc
push
pop
dec
xor
ds
clc
xchg
xchg
xlat
mov
mov
dec
cmp
jl
scas
mov
ffreep
cltd
in
out
neg
add
xor
push
ret
gs
add
pop
add
cld
fsubrl
xchg
add
aam
stos
pop
cmp
push
pop
out
push
and
icebp
dec
loopne
mov
jo
or
add
and
fcmovnbe
imul
bound
jns
sub
add
push
nop
hlt
js
add
imul
vzeroupper
add
inc
movsl
fdivs
or
inc
imul
das
hlt
mov
lock
test
xchg
mov
sub
inc
inc
push
and
add
pop
sub
fwait
mov
fabs
cmp
inc
pop
push
add
xor
xor
or
jne
push
and
xchg
lock
cltd
jg
add
test
aam
xor
inc
das
clc
add
and
in
mov
cmp
sub
addl
xchg
sub
and
push
cmpsl
loop
sbb
shl
repnz
xchg
je
push
jno
sub
dec
test
test
xor
pop
mov
add
lods
pop
movsb
mov
add
dec
sti
jb
sub
add
dec
adc
or
pop
pop
stc
cmp
sub
enter
add
orb
and
out
mov
sub
mov
add
adc
mov
shll
call
xchg
mov
sub
inc
adc
fwait
mov
sbb
fs
scas
add
pusha
pushl
sub
les
sbb
sbb
sbb
or
in
repz
lods
push
or
push
xor
inc
cmp
sbb
sub
fnstsw
sahf
add
adc
jo
sub
push
mov
xor
pop
xchg
add
push
or
cmp
pusha
rorl
cmc
add
xor
repnz
loop
mov
inc
xor
add
lcall
test
dec
add
lods
pop
add
mov
addb
mov
sbb
das
mov
psrad
xor
push
xchg
push
incl
scas
and
sar
add
xor
pop
nop
pop
cltd
dec
xchg
jp
add
sub
push
or
xchg
aam
jns
dec
hlt
xchg
jp
add
popa
int3
mov
pop
and
push
add
inc
push
lods
sub
dec
adc
lods
jno
jnp
add
lcall
cmpsb
imul
add
adc
and
aam
mov
orl
add
add
enter
movsb
or
sub
push
mov
add
jns
or
clc
push
test
jnp
cli
sbb
push
icebp
rclb
cmp
int3
jno
incl
out
addr16
sub
adcb
adc
pop
ret
movsb
jge
xchg
fnstcw
push
add
mov
jo
cld
pop
clc
add
push
sub
into
dec
insb
movl
push
jae
rcrb
stc
adc
mov
xchg
and
ss
mov
enter
cld
lahf
add
iret
lock
daa
pop
loopne
jl
out
cmp
inc
mov
bound
decl
and
and
fsubrl
and
pop
cwtl
popa
jg
add
cld
jns
adc
jmp
test
stc
mov
out
enter
dec
and
add
xchg
out
and
dec
add
mov
cs
or
sub
das
sub
dec
push
push
addb
dec
mov
add
fcoms
sub
mov
sbb
push
pop
enter
shll
add
or
jge
pop
fmuls
add
mov
sahf
orl
adc
or
sub
jne
das
scas
cmpsb
loopne
xchg
daa
into
dec
or
inc
dec
sub
idivb
pop
push
jnp
push
push
push
sahf
outsl
test
and
iret
xchg
push
ja
jl
add
scas
lret
call
gs
or
add
mov
sub
mov
leave
rcrl
sub
add
sub
add
mov
pop
test
gs
imulb
sub
cmp
jecxz
cmp
dec
rcll
jbe
add
cmp
push
nop
xlat
fadds
lret
test
enter
es
xchg
insb
inc
ret
add
sub
nop
sti
mov
xor
push
pop
je
cmp
enter
mov
js
xchg
rcll
mov
sbb
jnp
dec
rorl
push
add
pop
or
and
cmp
insl
add
add
jl
add
sbb
test
adc
das
inc
or
dec
add
pop
xchg
and
cmp
sbbb
pop
sbb
pop
imul
pusha
es
xor
xchg
adcl
outsb
aam
add
jb
dec
nop
mov
pop
movsb
hlt
and
adc
cmpsb
mov
cwtl
or
ja
xlat
add
add
clc
add
test
cltd
pop
inc
jne
stos
lret
pop
out
pop
lods
fadd
xchg
inc
cmp
fst
adc
aad
hlt
clc
push
add
push
sbb
stc
adc
add
pop
mov
andl
aam
cwtl
loop
inc
decl
les
test
enter
addl
int3
loop
and
xchg
test
jge
inc
cltd
xchg
jg
cmp
push
push
mov
nop
testl
mov
add
lods
sbb
push
js
leave
mov
pop
inc
paddsw
or
inc
je
ret
aas
addl
xor
cmp
inc
push
add
call
fsubrl
xor
mov
adc
cmpsl
and
or
push
enter
rorl
jg
sbb
adc
push
sub
rol
ljmp
out
dec
lods
aam
add
loop
adc
push
push
or
addr16
jno
loopne
imul
jmp
xchg
pop
add
add
daa
lret
mov
stos
dec
jo
cmp
call
fs
adc
cmpl
and
ss
das
test
inc
mov
addl
aaa
fs
push
imul
cmp
pop
loopne
or
scas
push
push
es
push
lcall
out
and
xor
cmp
adc
cmpsl
aas
adc
dec
mov
add
jecxz
sub
jnp
daa
adc
jbe
arpl
adc
popf
fcomi
sahf
add
sbbb
and
xchg
cmp
sbb
lret
clc
aas
xchg
sub
popf
add
sub
or
cvtdq2ps
lcall
cwtl
push
daa
push
mov
in
add
test
mov
leave
mov
stos
xor
push
imul
add
jb
lahf
and
xlat
movsb
cmp
add
cmpsl
and
out
loop
cld
mov
jecxz
jge
mov
int
dec
or
adc
adc
or
lock
cmp
divl
add
dec
scas
leave
pushf
cmp
pop
add
cmp
adc
shlb
and
dec
add
fmuls
pop
out
push
add
inc
xchg
jle
pop
jbe
and
and
push
jbe
pop
lods
data16
and
inc
xlat
xchg
push
xor
xor
test
dec
cwtl
sub
test
inc
clc
cmp
sub
pop
lods
mov
adc
movl
sub
in
subl
mov
mov
push
out
mov
pusha
cs
pushl
add
popa
dec
jne
xchg
in
fstl
orb
push
ds
jne
ds
mov
dec
stos
push
cmp
mov
je
xchg
adc
stos
add
in
loopne
fcompl
and
fdivr
sti
sub
mov
dec
sbb
or
adc
add
cmp
cld
or
clc
mov
je
adc
xor
and
mov
mov
add
cmp
jae
mov
or
pop
or
adc
adc
pminsw
sbb
imul
dec
lds
shrl
addl
je
test
xchg
adc
or
iret
pop
or
lds
and
incb
andl
or
push
mov
mov
add
dec
sbb
mov
add
jb
sbb
cmp
in
test
adc
shlb
add
movsl
subb
pop
pop
inc
insl
jmp
and
pop
push
dec
mov
pop
sbb
add
cmp
jb
mov
or
repz
dec
pop
xchg
dec
je
pushf
mov
and
pop
mov
dec
call
add
inc
jl
push
mov
and
pop
xor
add
adc
add
mov
dec
sub
cmpsb
roll
cmp
push
loopne
and
adc
imul
or
pop
add
add
das
push
jecxz
pop
sbb
push
jnp
mov
jge
dec
push
shl
pushf
roll
sbb
scas
pop
inc
fcompl
inc
push
xchg
or
add
dec
mov
cwtl
pop
aam
add
push
add
jp
in
jle
hlt
dec
cmpb
ret
fldl
push
iret
pop
jne
popa
movsb
lcall
adc
jge
sbb
or
rorl
mov
out
test
sub
shll
push
outsl
vmread
test
hlt
add
adc
cli
test
cmp
add
dec
jecxz
mov
repnz
push
loopne
jbe
add
mov
and
ss
or
push
add
or
add
js
add
lock
xchg
pop
adc
add
push
or
add
adc
scas
cmp
mov
imul
and
jne
xchg
jp
lock
aaa
movsl
out
mov
aad
daa
loope
stos
cpuid
or
mulb
cmc
add
shll
push
das
add
inc
fs
out
jbe
cmp
fwait
lahf
insl
ja
push
loopne
dec
inc
jne
add
xchg
cld
insb
and
add
fldt
adc
cmp
add
mov
sbb
push
and
sti
cmp
jg
incb
adc
adc
ret
nop
loopne
jmp
xchg
fimuls
add
fisttpll
js
repnz
add
addb
or
stos
adc
mov
add
push
ds
add
and
movsl
rolb
cmp
jae
out
fcoms
or
fmulp
mov
sbb
test
testb
add
adc
ret
dec
adc
ljmp
hlt
or
dec
dec
add
mov
add
adc
mov
add
jae
jb
je
cltd
mov
sbb
lods
pusha
dec
pop
and
add
jns
xchg
mov
pop
nop
push
adc
xchg
das
aas
jg
xorb
pop
outsb
adc
jmp
add
jge
testl
movsl
sub
pop
add
dec
roll
inc
add
cmp
sbb
add
sub
jne
dec
or
add
stos
sub
aad
jns
pop
xor
mov
or
lods
sbb
inc
movsb
add
push
loope
jge
mov
add
and
adc
sbb
sbb
inc
scas
inc
sbbb
ss
out
fsubl
sbb
add
push
mov
jg
or
mov
adc
addr16
add
or
lret
mov
jno
test
pop
mov
push
orb
aad
test
adc
add
lcall
jo
cld
loope
push
adc
xor
ja
add
xchg
pop
and
or
lds
sbb
add
jo
xchg
jno
add
hlt
jmp
cwtl
add
outsl
add
out
xchg
sub
pop
xchg
and
scas
repz
jb
ds
outsb
das
adc
push
insb
push
dec
shll
fiadds
sbb
sub
jo
call
arpl
iret
and
sbb
jle
mov
push
add
push
jo
dec
push
fldenv
pop
xor
lea
cs
fisubrl
dec
pop
outsl
add
mov
xor
push
or
add
add
jnp
or
push
imul
xor
and
flds
mov
sub
push
xchg
das
bound
loopne
in
dec
push
and
aam
popa
loopne
or
add
add
mov
dec
pop
bound
add
shlb
add
inc
cwtl
in
sbb
rclb
add
test
sub
add
adc
adc
shlb
cwtl
arpl
aaa
adc
or
fadds
pusha
test
sub
and
out
add
pop
or
mov
xor
inc
add
jno
sysret
rorl
rclb
xor
or
inc
and
dec
add
xchg
and
add
insb
inc
cmp
inc
jle
cli
adc
lds
or
movsb
int3
adc
and
add
in
dec
shlb
jno
pusha
sub
adcb
bound
cld
loopne
int3
pop
shlb
test
loopne,pt
and
push
lahf
pop
and
inc
add
mov
aaa
sub
add
sbb
push
sarb
loopne
or
add
filds
nop
pop
dec
pusha
cltd
inc
xor
or
add
inc
add
inc
xor
and
mov
sar
rorb
loopne
dec
mov
sbb
or
mov
jl
and
adc
sub
push
push
fs
decb
mov
pop
cli
js
scas
mov
sbb
insb
cmp
mov
lock
testb
pop
data16
out
xor
sbb
dec
into
inc
pop
pop
adc
pop
and
sbb
aam
or
int3
inc
add
mov
jno
cmp
add
sbb
mov
adc
and
mov
dec
and
or
ficomps
call
mov
nopl
pop
mov
sbb
test
imul
hlt
add
sub
add
cld
adc
mov
nop
pusha
pop
cmp
ss
test
add
sub
bnd
push
cwtl
sahf
xchg
add
and
fcoms
inc
dec
dec
lret
add
xchg
inc
sbb
push
add
xchg
mov
in
xchg
lock
pushf
xor
inc
mov
mov
jecxz
and
inc
and
mov
mov
sub
add
xorb
xor
testl
test
and
add
add
inc
hlt
icebp
sub
or
incb
inc
add
add
adc
loopne
xchg
add
mov
pop
andl
hlt
add
or
xchg
push
push
pop
add
push
mov
aaa
pop
dec
mov
push
jecxz
sub
in
and
shll
adc
call
les
shl
add
xchg
in
add
add
jbe
mov
es
sub
lret
int3
enter
ror
jo
add
fcomp
fxch
fiadds
fnstsw
loope
adcb
popa
xchg
pusha
or
das
or
pop
je
xor
inc
xorb
xor
mov
dec
add
sub
lahf
add
pusha
mov
pop
xchg
les
jecxz
rcrl
xchg
fs
or
or
sub
test
movsb
add
mov
add
sub
jb
add
je
pop
mov
add
fidivs
xchg
or
fs
dec
pusha
push
cmp
sub
je
dec
jo
outsl
adc
andb
nop
xchg
cwtl
addb
lods
aas
mov
fadds
dec
or
add
outsb
clc
or
jne
xor
shrb
mov
sub
xor
pop
mov
pop
mulb
push
lcall
pop
aam
add
add
gs
jo
js
inc
xchg
fstl
lock
jnp
cld
mov
jl
add
cmp
pop
jle
icebp
inc
sbb
scas
cwtl
and
jg
sbb
or
dec
push
pop
addb
add
mov
shl
jmp
xchg
bound
jo
ja
dec
in
cmp
and
inc
add
call
xor
fcoml
pop
and
or
inc
xor
inc
icebp
add
dec
mov
pusha
shll
and
mov
lcall
cmpsb
mov
hlt
sbb
js
loopne
or
mov
xchg
nop
enter
mov
adc
and
in
or
les
adc
sbb
jns
lods
pop
cmp
sub
mov
lock
xchg
pushf
icebp
cltd
call
fists
cmp
and
mov
dec
out
mov
test
test
leave
hlt
and
aam
roll
sub
loopne
inc
ja
inc
ljmp
addl
dec
adc
mov
rcll
call
or
jmp
mov
adc
and
dec
shl
mov
movb
inc
test
sbb
mov
cmp
cwtl
nop
push
dec
and
pop
and
movsb
add
xchg
lods
dec
pusha
mov
les
add
out
or
and
sub
add
xchg
or
test
and
out
adc
cmp
inc
sarb
rorb
add
mov
sub
cmpb
xchg
test
fsubr
xor
cmp
sbb
aam
push
repnz
and
dec
test
test
cmp
xchg
aam
clc
xchg
push
aam
mov
inc
and
in
mov
hlt
addl
add
aam
or
add
push
dec
jecxz
add
call
dec
fdivp
sbb
dec
shlb
cmpsl
pushf
inc
dec
rorb
push
adc
fs
and
dec
jl
lods
call
adc
clc
or
mov
adc
cmp
mov
addr16
pop
or
inc
stc
xor
test
mov
test
in
add
hlt
les
or
push
gs
push
cwtl
ss
mov
rclb
xchg
enter
cmp
bound
cltd
decb
jo
call
sub
mov
sbb
cs
sub
and
ja
std
or
sahf
adcb
push
and
inc
addb
sbb
xor
icebp
sbb
adc
loopne
xor
xchg
adc
sub
cmp
cmp
pushf
rol
inc
add
call
adc
add
push
cmp
xor
sub
inc
loop
adc
arpl
or
cwtl
in
rorb
or
add
outsl
ret
dec
and
and
add
in
mov
add
pop
add
push
mov
push
mov
sbb
or
add
loopne
loop
pusha
adc
push
and
jb
inc
pop
dec
clc
hlt
sub
pop
add
mov
es
pop
adc
add
xorb
xchg
pushf
enter
and
sbb
adc
xor
add
jo
pushf
andl
cmpsb
add
orl
jnp
add
ds
or
push
inc
xchg
loope
and
mov
incl
mov
lahf
fists
ret
adc
and
repz
inc
out
jmp
pop
sbb
fs
sbb
jae
mov
jg
dec
sbb
pop
pop
fbld
fbld
into
lock
popa
int
add
mov
add
push
adc
fs
sub
je
sub
push
imul
fdivrl
jg
add
cs
sbb
cmp
stc
ds
mov
aas
lahf
iret
inc
lret
jo
cmpsl
insb
inc
mov
mov
mov
xor
ret
push
inc
and
dec
jg
jg
aas
dec
cld
orl
stc
and
push
add
push
adc
pop
adc
test
inc
adc
pushf
mov
pop
mov
pop
iret
aam
or
mov
and
or
mov
pop
push
dec
push
sti
movsb
sti
sbb
mov
mov
clc
mov
add
adc
xor
lods
or
dec
pop
add
add
xchg
imull
add
and
pop
std
sbb
push
add
nop
add
cmp
inc
xchg
push
lods
pop
inc
push
or
push
aas
add
shrb
call
or
lea
popa
inc
sub
je
adc
add
or
sub
aas
mov
mov
sbb
in
adc
and
adc
fs
lahf
xor
scas
add
repnz
xor
aam
sbb
bound
sbb
mov
or
adc
andl
xor
mov
adc
or
fsubl
adc
xor
push
xor
nop
xchg
dec
or
fs
lcall
sub
mov
call
lock
xor
dec
data16
rclb
cmp
cmp
andl
mov
imul
rclb
add
xor
and
xor
mov
pushf
and
hlt
add
cmp
call
nop
imul
push
mov
dec
je
nop
mov
sbb
rcrb
add
push
add
pop
ret
xchg
xor
jo
outsb
or
nop
mov
lods
and
pop
and
bound
jg
add
loope
sbb
cmpsl
xchg
cmp
nop
ds
mov
clc
adc
sbb
xor
leave
jo
or
pop
pusha
adc
push
sahf
nop
cwtl
iret
test
mov
pushl
xchg
pushl
lock
jns
adc
or
cmp
dec
je
orb
call
jmp
in
incl
add
add
aad
add
xor
inc
inc
lret
pop
and
jl
jg
xchg
or
not
lock
pop
sbb
adc
sbb
or
adc
and
dec
push
cmp
or
js
push
loope
pushf
and
mov
rorb
dec
les
xor
cli
and
inc
sub
je
or
push
and
loope
je
lret
cwtl
movsb
dec
pop
mov
and
sbb
insb
ljmp
fsubl
fs
push
ja
add
sub
andl
add
in
add
bound
nop
and
ret
stos
add
push
inc
inc
xor
sahf
js
sbb
add
jae
outsb
fs
ret
inc
inc
loopne
lahf
cmp
xchg
push
enter
cld
add
stc
xor
pop
out
or
xor
icebp
sub
inc
cmp
and
push
add
das
adc
mov
adc
pop
mov
jbe
les
cmpsl
clc
jle
cmp
aaa
popf
mov
inc
mov
add
sti
pop
or
int3
push
and
incl
arpl
or
xor
jg
nop
test
and
punpckldq
aas
fiadds
mov
or
jecxz
jmp
mov
aaa
stc
and
orb
enter
and
or
push
sbb
sbb
inc
xor
push
sub
inc
xor
out
mov
inc
ss
rcrb
adc
gs
outsl
outsb
std
pop
jmp
mov
inc
leave
jl
add
and
inc
sbb
dec
dec
cmp
add
mov
pop
lcall
stc
lret
ja
js
daa
jne
push
mov
push
push
dec
popf
inc
inc
xchg
adc
sub
sbb
imul
cmp
pop
xor
dec
and
jp
cld
mov
adc
inc
xor
add
and
js
bound
ret
sbb
sub
add
pmuludq
and
pop
ss
addl
loopne
sbb
inc
aaa
pop
js
add
or
add
out
push
decl
dec
sbb
sbb
loope
or
jle
and
or
mov
and
loop
inc
repz
sbb
cmp
or
cmpsl
push
sbb
jns
push
sbb
inc
or
mov
and
jno
stc
jmp
or
notl
xor
ret
bound
add
adc
loopne
mov
mov
and
inc
adc
mov
and
pop
xor
jne
mov
add
loopne
push
dec
out
cld
inc
mov
add
pop
dec
aam
xor
sbb
mov
push
and
jbe
popf
fsubrs
or
push
inc
test
pop
dec
dec
sub
mov
xor
in
jg
cli
inc
adc
ret
push
pop
mov
lods
jle
or
inc
std
jp
jo
dec
in
add
inc
sbbl
outsl
inc
xlat
xlat
addr16
ljmp
je
sbb
adc
dec
jge
add
jecxz
addl
scas
add
cld
hlt
leave
or
cmpsl
add
push
or
adc
mov
jge
popa
inc
and
add
push
push
iret
add
cwtl
xorb
in
bound
and
cmp
mov
push
ljmp
mov
xor
or
lret
addl
push
add
lret
dec
decb
adc
add
add
add
subb
ret
or
fisubrs
push
inc
enter
inc
or
add
mov
ds
pop
adcb
and
or
push
or
xchg
add
lret
shrb
in
add
push
or
add
add
and
add
push
rcrl
jo
add
mov
ss
loopne
add
lock
adc
add
rorl
cwtl
xchg
sub
fnstcw
fwait
push
add
cmp
add
mov
in
mov
ficompl
cmc
loopne
add
push
add
adc
pop
and
pop
nop
xor
daa
xor
mov
lcall
xor
mov
movsl
mov
xlat
cmp
add
lods
push
stos
dec
mov
xchg
movsb
jge
jbe
imul
add
jo
pop
add
and
out
pop
test
sbb
add
negb
popa
add
inc
jle
sbb
inc
mov
scas
cmp
cmp
into
mov
push
jo
das
outsb
test
shl
add
aaa
or
roll
cli
and
jnp
or
mov
call
aad
jecxz
add
cmp
data16
in
ja
clc
jo
adc
or
and
popl
fistpl
adc
ja
repnz
lds
add
sbb
xlat
stos
add
or
cli
cmp
add
lods
aam
scas
pushf
movsb
jo
add
mov
xchg
es
cmpsb
testl
xor
adc
sbb
dec
add
jmp
pusha
mov
or
outsb
pop
add
sub
jecxz
sbb
push
roll
shlb
cld
mov
push
lret
mov
pop
iret
rolb
out
stos
sti
inc
push
dec
xor
jg
cmp
lahf
test
add
cmp
cmc
mov
adc
repz
in
pop
xchg
inc
pop
addb
pop
sbb
add
sub
mov
or
loopne
xor
or
and
pop
ret
lods
bound
out
add
insl
aad
test
hlt
ljmp
js
add
sbb
mov
call
or
mov
dec
adc
testb
gs
sbb
sahf
loope
clc
cwtl
adc
mov
xchg
fwait
add
xchg
pop
xor
dec
mov
add
push
sub
push
jo
add
or
sbb
cmp
and
sub
ds
cmp
jno
inc
or
push
gs
pop
insb
pop
add
bound
inc
call
add
push
jle
cld
cmp
add
loopne
shlb
fnstsw
repnz
lods
loopne
add
xchg
pusha
dec
mov
decb
adcb
inc
shl
addb
scas
cmc
test
jns
jbe
cmp
mov
xchg
sub
mov
fstpt
mov
sub
jo
sub
lods
add
pop
push
in
push
addb
inc
icebp
add
cwtl
dec
stos
jae
shll
movsl
jp
fisubrs
mov
leave
sbb
mov
xchg
push
out
cmp
popl
sbb
adc
stos
imul
mov
daa
or
rolb
add
xchg
push
in
pop
popf
pusha
xchg
adc
push
dec
cli
dec
jecxz
xchg
shr
push
cwtl
pop
jle
add
test
adc
jae
movl
cmp
test
lods
jbe
insl
testb
jg
std
mov
push
ja
loopne
sarb
push
pop
mov
push
rorl
xchg
ds
or
mov
mov
sbb
xor
mov
or
sub
dec
out
add
inc
out
mov
push
hlt
push
cmpsl
push
pop
std
add
add
lret
dec
test
adc
sahf
add
aad
xor
cmpsl
fcoms
or
das
mov
pusha
jne
and
or
sub
sbb
xchg
or
das
jbe
add
adc
fwait
fs
rcll
mov
xor
es
jb
daa
adc
mov
fimuls
aad
movsb
ret
adc
test
add
repnz
nop
addb
sub
popf
in
ffree
push
cmp
mov
add
adc
scas
stc
jne
jne
lock
sbb
mov
out
outsb
gs
and
js
cli
xchg
hlt
mov
fiadds
mov
dec
sarb
ret
in
add
testl
cld
pop
inc
push
loope
ror
ljmp
shl
gs
hlt
subb
xor
lods
cmpb
mov
add
or
pop
mov
pushf
xchg
sbb
fwait
xchg
sahf
mov
scas
jne
pop
dec
or
outsb
adc
addr16
pop
imul
dec
and
jge
inc
sub
jbe
xor
add
fistpll
es
or
das
jne
jmp
out
sbb
icebp
rorb
or
lcall
fisubrs
cmp
mov
jbe
mov
lods
cli
pop
or
push
mov
xorl
cmc
lahf
or
in
inc
fcomip
add
push
push
leave
add
mov
xor
jo
add
sub
xor
add
aaa
data16
subb
and
arpl
mov
pop
jno
lahf
aaa
add
xchg
or
mov
mov
outsl
push
sbb
add
jns
sub
dec
jo
add
loopne
cs
pop
xor
in
lcall
add
lock
mov
subl
enter
cmp
add
add
pop
xchg
jne
rclb
mov
enter
mul
inc
or
inc
in
arpl
or
or
add
push
jo
add
jge
push
adc
xor
add
cmp
pop
xchg
sub
cmp
add
jl
inc
movq
inc
or
jo
push
add
hlt
inc
xor
cmp
lds
ss
pop
xorb
push
jge
fdivs
xor
jp
push
test
jno
add
add
nopl
addb
xor
pop
inc
add
jmp
loopne
add
pop
sti
jle
push
cmp
jae
aas
jg
push
push
jno
jo
add
insl
inc
loopne
add
xor
lret
rorl
add
lret
and
daa
lds
outsl
add
pop
xchg
mov
in
repz
repnz
push
sti
cmpsl
jns
cs
test
mov
mov
bound
mov
lea
add
jb
les
add
inc
sub
mov
adc
xchg
xchg
testl
das
jno
imul
cmpsb
adc
xchg
mov
call
jecxz
sarl
add
iret
dec
rolb
xchg
fldenv
jnp
jo
std
data16
insb
pop
jmp
and
paddw
lret
repz
cli
out
lods
jg
jg
jg
aas
cwtl
test
in
test
cld
std
loopne
jmp
sar
int3
inc
scas
movsl
jg
jg
jg
jmp
xchg
std
lahf
cld
inc
out
push
push
pop
fisubrs
popa
shlb
push
mov
jg
mov
cmp
push
testb
mov
mov
ret
loopne
stc
repnz
out
maxps
out
jno
sbb
gs
jge
pusha
mov
adc
pop
ret
push
lock
loope
ljmp
fsubrs
pop
cwtl
rolb
xchg
adcl
cmp
pusha
in
jbe
enter
lods
add
into
inc
pop
push
mov
fisubs
dec
mov
add
test
mov
adc
leave
cs
repz
in
cmp
aaa
das
xor
and
adc
testb
or
xchg
jb
jns
out
inc
out
pop
out
push
jmp
pop
jg
aas
sub
or
push
std
dec
push
repz
sti
arpl
push
cli
cmpsl
pop
aas
or
andb
push
mov
adc
jmp
cwtl
dec
or
into
mov
loopne
jp
pop
jno
insb
fbld
push
pop
jo
add
mov
stos
mov
push
pusha
mov
and
adc
xchg
shll
out
out
mov
lock
inc
add
and
add
inc
test
adc
push
add
and
cmp
cmc
push
jg
pop
mov
not
nop
stos
jnp
add
and
inc
jmp
or
mov
rcl
mov
cmpl
and
mov
lods
out
sub
out
cwtl
out
shr
fsubrp
leave
out
out
ljmp
mov
jl
fists
inc
pushl
mov
adc
cmp
and
jg
aas
pusha
ja
jp
pop
popa
mov
decb
jg
std
xor
cmp
scas
jg
dec
mov
stos
repz
add
not
repnz
dec
pop
loope
cmp
idiv
nop
scas
jg
jg
jg
jg
jg
jg
jg
aas
mov
mov
xchg
popf
std
push
cld
or
adc
xor
and
es
lock
pop
xlat
cltd
mov
dec
xchg
fisubl
and
mov
int
out
shl
loopne
stc
mov
mov
lock
or
pop
popa
sbb
into
mov
outsl
xchg
pop
repz
push
and
pop
wbinvd
inc
popa
pop
cmpb
jbe
jnp
sti
dec
clc
inc
dec
inc
add
mov
adc
and
or
xchg
daa
js
aas
mov
mov
test
inc
mov
cld
inc
dec
pushl
loopne
idiv
cli
mov
mov
jg
jg
jg
sete
imul
add
inc
icebp
cld
mov
push
jge
pop
add
pop
fwait
and
gs
sbb
popf
sbbl
dec
add
push
in
cmp
data16
das
fs
mov
jae
push
and
dec
adc
inc
and
jmp
mov
and
sub
lcall
mov
jo
lea
mov
or
int3
mov
xchg
es
xchg
inc
adc
lds
divb
inc
add
mov
mov
mov
scas
or
add
movsl
cld
adcb
cmp
xchg
add
sti
or
sti
jp
popa
push
ds
dec
sub
loopne
mov
xchg
popf
and
std
fcmovnb
fcmovne
fcmovnbe
fcomp
inc
jbe
pop
dec
fs
clc
push
ficompl
dec
rclb
cmpsl
shlb
xor
sti
out
out
dec
mov
std
ret
sarb
jg
dec
cmpsl
xorl
sti
mov
and
mov
dec
mov
push
lods
imul
cld
mov
lahf
xor
xlat
aam
jge
mov
out
lock
loop
xchg
negl
dec
mov
xchg
mov
mov
loop
das
push
je
or
fisubl
xor
mov
cmpsb
xchg
mov
rcrb
addr16
cmp
lods
inc
cmp
adc
enter
iret
or
xlat
fsubp
vorps
repz
cli
andb
call
loopne
ljmp
out
or
and
xchg
divl
lods
mov
mov
push
or
add
sbb
sti
cs
and
cli
loop
lock
mov
cmpsl
xchg
bound
stos
call
fildl
sti
push
sti
xor
cmp
int3
mov
outsb
and
mov
pop
push
out
aaa
jg
jg
jg
jg
jg
add
add
cmp
loopne
adcb
inc
jno
arpl
f2xm1
lret
nop
lds
pop
pop
insb
add
inc
repz
mov
mov
rolb
jbe
in
add
or
adc
orb
ss
fsubrs
cmp
mov
xchg
xor
std
mov
jge
sahf
out
xor
xor
repnz
cmp
pop
adc
sub
decb
xlat
jb
jbe
lret
adcb
in
xchg
add
scas
aam
adc
mov
and
shrb
aas
inc
ljmp
icebp
sbb
jno
push
xor
daa
xor
insb
add
ret
sbb
or
sbb
mov
push
daa
inc
mov
jne
loopne
call
push
dec
mov
dec
icebp
xor
adc
test
in
divb
pop
sahf
out
pop
mov
jmp
rcrb
inc
dec
dec
fmuls
cmp
mov
sbb
jg
mov
test
push
xchg
mov
jns
add
adc
mov
fiaddl
and
call
and
adc
cmp
jno
les
fs
pop
fistps
lret
jae
movsl
fimuls
push
stos
bound
push
sub
nop
add
sub
and
pop
dec
fidivrs
xchg
loopne
loopne
cmp
add
hlt
lock
loopne
mov
lods
adc
mov
xchg
in
jns
loopne
enter
insl
and
cs
xchg
or
and
hlt
shlb
adc
and
pop
dec
and
cmpsb
sub
popf
add
call
fnsave
pop
dec
and
rorl
ds
inc
repz
add
or
call
pop
mov
loope
xchg
sarl
add
clc
fidivrs
adc
repz
fwait
sti
push
sti
xchg
jmp
into
xchg
sahf
sub
mov
std
out
inc
aas
pop
ss
cltd
lock
mov
ds
add
jne
add
leave
test
xlat
mov
lea
lret
std
js
mov
sbbb
arpl
mov
cmp
add
cltd
idivb
incl
repnz
cmp
fisubrs
add
and
add
add
into
add
test
out
decb
bound
add
mov
in
jbe
lcall
and
mov
inc
cli
jge
xchg
adc
adc
loopne
loop
cmp
sti
lock
lods
and
mov
add
std
cmp
mov
jb
add
in
loop
xchg
cmp
mov
and
loope
mov
cmp
push
add
and
aas
mov
add
loop
cmp
push
movsl
mov
add
in
in
icebp
loop
jae
add
xchg
stos
fsubs
jae
pop
xor
aas
cmp
jo
or
xchg
and
xor
loop
cmp
sbb
add
das
lcall
mov
pusha
mov
add
orb
cmp
mov
daa
and
mov
mov
add
lahf
adc
loop
cmp
sbb
sub
je
xor
mov
jno
sbb
add
outsb
inc
mov
pop
adc
push
pop
mov
add
jbe
inc
dec
mov
adc
popa
jge
sub
add
jno
sbb
pop
das
ja
add
test
xchg
cmpsb
push
cmc
jp
add
xchg
push
inc
add
and
pusha
jecxz
les
pop
jns
mov
enter
in
add
push
mov
jp
call
cmp
xchg
dec
inc
add
cwtl
dec
adc
mov
les
mov
pushf
mov
vmovsd
adc
dec
add
sti
sbb
add
dec
inc
xlat
push
xor
push
inc
test
xchg
mov
inc
add
jmp
add
cmp
jg
andl
and
fimuls
loop
cmp
mov
add
aas
xchg
loop
cmp
popf
mov
mov
icebp
cmc
shlb
ja
loop
lock
fimull
aas
into
and
and
add
decl
push
add
mov
int
add
mov
adc
add
das
mov
cs
and
rclb
cmp
cmp
cmpsl
and
repnz
jle
cmpb
add
enter
mov
xor
mov
out
add
xchg
cmp
pusha
mov
add
mov
add
loop
cmp
jle
cmp
mov
lret
out
mov
imul
and
sub
cmp
add
loop
cmp
add
sbb
xchg
loopne
mov
fs
push
cmp
add
or
push
xchg
dec
mov
fisttpl
adc
cmp
lahf
ret
mov
inc
lods
loop
fadds
xchg
and
movsb
shl
loop
cmp
pop
jns
mov
out
cmp
outsb
orb
add
lea
cmp
pushf
dec
mov
dec
test
insb
mov
cmp
hlt
mov
iret
pusha
lahf
and
scas
sarl
ret
lahf
add
push
adc
push
outsl
mov
sbbb
pusha
sub
jb
cmp
and
push
cmpsb
mov
jae
mov
xchg
mov
add
push
and
jl
loopne
or
adc
xchg
dec
add
popa
mov
mov
xchg
mov
loop
cmp
inc
add
and
int3
mov
fadds
add
add
mov
sbb
and
adc
popa
mov
pop
cmp
mov
xchg
loop
cmp
sbb
mov
add
clc
mov
sub
and
mov
shrb
mov
jo
mov
xchg
call
fwait
xorb
add
jl
cmp
xchg
into
mov
push
and
add
sub
jp
add
mov
clc
or
mov
pop
cmp
gs
and
add
loop
add
addb
sub
sub
loop
adc
add
cmp
insl
mov
mov
push
movsl
je
test
cltd
rolb
mov
daa
push
pop
add
lea
sbb
ja
out
lcall
cld
mov
or
sub
add
xchg
pop
push
mov
pop
incb
add
push
jg
xchg
cmp
scas
aas
add
pop
cs
pop
mov
jnp
sti
fwait
sti
cmp
jnp
jnp
jnp
jnp
je,pn
jecxz
adc
pop
dec
iret
popa
into
out
jnp
ds
jno
xchg
mov
sarb
bswap
jge
mov
dec
insb
mov
ja
pop
daa
test
adc
imul
in
push
negl
iret
pop
adc
jmp
clc
lock
jecxz
mov
daa
adc
add
shlb
xchg
fcomip
shl
mov
push
push
shrl
repz
push
es
aas
cmpsl
mov
push
div
testl
xchg
clc
adc
jg
aas
jg
mov
icebp
lret
not
repnz
js
pop
sbb
push
loope
inc
push
push
in
insb
inc
in
pop
mov
add
jne
repz
cli
inc
lock
jg
jg
jg
jg
and
mov
das
pop
mov
mov
sbb
adc
loop
add
dec
and
inc
icebp
xlat
push
add
add
push
lods
add
sub
faddl
xchg
xchg
test
outsl
add
stos
and
cli
add
mov
fcompl
jge
es
pop
mov
loop
arpl
cmpsl
cli
mov
push
jg
add
or
sbb
jp
popa
push
fidivrl
mov
ja
ja
jo
jg
aas
cmp
jl
jnp
repnz
push
pop
outsl
rol
or
add
shrl
idiv
not
imull
or
leave
mov
pop
inc
cmpb
cli
fcomp
jg
sub
xor
movsl
std
in
icebp
jl
daa
fmuls
xor
std
ret
jle
jmp
add
jg
cmpb
jmp
daa
mov
jne
loop
dec
sub
sbb
cs
jg
mov
cmp
test
sarl
jnp
jnp
pop
cld
add
pop
and
lret
dec
ficoms
add
ret
hlt
shl
out
sarb
sti
inc
inc
dec
mov
adc
push
mov
add
mov
out
clc
push
jg
and
popf
push
xchg
cmc
mov
mov
ficompl
adc
fwait
xor
xchg
or
cmpsl
das
jle
popa
cmp
pusha
incb
in
std
sub
sbb
movsl
inc
jmp
cmc
fsubp
sbb
loopne
cmp
cmp
out
dec
out
push
cld
jg
pop
mov
add
lods
decl
jg
jg
cmp
mov
add
push
rcll
gs
jp
pop
scas
jmp
mov
cs
test
cmpsb
rorb
adc
add
push
repz
je
or
sarl
mov
ds
cmp
decl
orl
jle
add
jmp
into
add
inc
push
sub
and
add
xchg
or
cmp
push
mov
mov
mulb
jl
and
xchg
repnz
mov
push
addr16
hlt
xlat
rcr
jbe
xor
inc
jge
xchg
xchg
inc
mov
nop
cs
mov
scas
adc
rcr
iret
std
xchg
out
es
negl
pop
movsl
in
icebp
hlt
jno
cltd
xor
adc
and
mov
jmp
stos
adc
adc
and
out
daa
jmp
rcrl
sub
xchg
mov
sub
pop
das
out
push
icebp
rcll
and
cld
adc
enter
jbe
cmp
dec
dec
in
add
outsl
fimull
rclb
inc
sti
inc
fdiv
dec
xor
adc
dec
mov
jns
push
rclb
adc
subb
adc
inc
mov
dec
lahf
call
lock
mov
adc
push
add
shl
mov
mov
add
testb
popa
sti
xor
es
pop
ror
sahf
jmp
cwtl
dec
adc
xchg
std
fwait
sub
popf
xchg
mov
ds
ds
sub
fists
add
mov
mov
sub
push
xchg
add
push
pop
in
add
pop
stos
push
fsubrs
xchg
mov
addr16
mov
sbb
sub
lods
sub
mov
movsb
aas
aad
stos
push
push
std
outsb
enter
xchg
xor
mov
adc
fisttps
mov
aad
aas
scas
jne
stos
mov
add
dec
mov
enter
pop
pop
adc
cmp
stos
push
jo
add
jp
push
and
sub
pusha
pop
in
sub
add
xlat
stos
cld
push
push
lret
sub
pop
test
mov
test
push
out
loop
rol
mov
lods
fsubrs
rolb
push
stos
mov
loopne
push
mov
pushf
rorb
and
pusha
jo
in
mov
cmpsb
decb
or
mov
push
je
xor
sbb
push
or
jecxz
test
inc
subb
sub
pop
mov
mov
cwtl
jl
in
scas
mov
sub
lgs
inc
push
sti
clc
sti
sbb
pusha
les
xchg
test
mov
sub
outsb
xchg
sbb
push
shrl
enter
push
jnp
xor
adc
dec
fistl
mov
in
fs
mov
xor
inc
enter
mov
cltd
inc
cmp
sub
cltd
push
lock
and
in
mov
fs
insb
lods
call
ficomps
mov
lock
cld
add
fistl
pop
clc
adc
inc
jmp
mov
jns
dec
sbb
je
cmp
and
fdivrl
add
ficoml
cld
pop
lock
cwtl
jbe
add
mov
int3
add
in
pop
cmp
adc
pop
ja
pop
xor
pop
add
call
jp
gs
or
inc
insb
cwtl
jl
cmp
add
mov
fnstcw
pop
mov
jbe
subl
outsb
je
rolb
push
push
fistps
shl
ljmp
iret
cmp
int3
js
iret
sbb
ret
jecxz
mov
in
test
nop
or
pop
bound
dec
jmp
pushf
fiaddl
or
jne
or
xor
fcoms
in
fs
sbb
in
rcll
clc
sti
dec
jo
sbb
stc
movsb
cmp
loopne
int3
in
mov
inc
fcoml
inc
dec
pusha
int3
sub
mov
aam
popa
mov
nop
inc
adc
call
aam
subb
add
jne
xor
pop
jle
mov
daa
ret
pop
mov
andb
loopne
mov
pop
aas
sbb
cmpsl
loop
sbb
rcr
add
sub
lock
xchg
mull
lock
mov
popf
mov
loopne
out
stos
out
push
jmp
cmp
mov
jl
out
jecxz
fcoms
jle
ja
je
lahf
inc
cmp
inc
add
jmp
jecxz
in
and
fsubs
pcmpgtw
imul
mov
and
adc
sub
push
pusha
je
push
out
sub
psllq
and
or
inc
mov
add
fs
pop
dec
leave
inc
enter
xorl
add
xchg
mov
aam
fs
xor
cmp
pop
mov
and
fidivrl
sub
push
sbb
ror
push
pop
clc
add
cmpsl
lock
aas
out
insb
and
add
out
mov
adc
rorb
ss
iret
hlt
out
popf
add
or
add
ret
and
in
nop
jne
in
or
in
clc
mov
imul
sub
cs
add
mov
pop
cmp
jle
or
and
arpl
into
pop
aam
inc
scas
aam
push
xor
shlb
xchg
pop
mov
push
dec
js
adc
mov
dec
mov
je
or
fs
or
push
pusha
push
jmp
add
clc
decb
push
and
andb
jp
orl
pop
imul
xchg
or
imul
fdivrs
dec
inc
pop
lcall
cmc
jo
sub
ret
jg
dec
imul
pop
out
jne
insl
pop
sbb
add
xlat
inc
lret
xchg
mov
lock
sbb
jne
lock
shrb
pop
add
loopne
movsb
je
imul
add
fcomps
cmp
xor
cltd
jg
jnp
scas
in
jge
sub
std
shrl
sar
add
stos
ret
jb
or
shlb
fs
mov
bound
or
stc
jmp
aas
cmp
mov
les
das
add
aam
adc
adc
pop
jp
xorb
pop
adc
and
inc
psubsw
sbb
xchg
in
jo
jb
ljmp
sub
lds
out
xchg
icebp
inc
and
pmulhuw
pop
pop
shll
test
sarb
sbb
stc
es
cmp
aad
sub
cmpl
insb
cmp
adc
idivb
das
jmp
jecxz
aas
pop
mov
pop
inc
jno
mov
adc
mov
push
mov
popf
xchg
sahf
or
inc
rclb
psubsb
cmp
xchg
adcb
jge
add
xchg
push
mov
add
jp
xchg
dec
iret
loopne
pushf
inc
and
or
xchg
or
add
and
inc
xchg
data16
lret
pop
fadds
and
js
jmp
cmp
mov
pop
inc
push
ljmp
dec
sbb
and
push
popa
or
jg
sahf
pop
pop
leave
xor
stc
fbstp
into
aas
jns
outsl
out
frstpm(287
repz
ret
pop
outsb
dec
hlt
xchg
ret
imul
aas
hlt
inc
cmpsl
pop
popa
mov
cmp
dec
cli
out
jecxz
xor
mov
inc
pop
xor
mov
sbbb
or
roll
xchg
mov
cmp
aad
add
push
je
push
dec
jae
fcoml
test
jecxz
fidivl
or
xor
icebp
mov
sbb
repnz
ficoms
rol
les
mov
add
lods
loopne
mov
add
inc
xchg
dec
int
jno
popa
pusha
sbb
add
addr16
cld
pop
out
xchg
or
xor
clc
fdivrs
pop
or
mov
dec
shll
or
xor
xor
xchg
lcall
aaa
xchg
sbb
sar
repz
push
repnz
movsb
dec
adc
insl
scas
jmp
push
pop
aas
negl
pop
decb
lock
pop
inc
orb
das
sarl
imul
test
das
rclb
fisubs
push
mov
dec
sbbb
mov
push
shl
push
clc
idivb
addb
imul
enter
shrb
xor
adc
and
pop
inc
lcall
mov
mov
xchg
mov
movsb
xchg
jl
mov
dec
nop
cmovo
in
or
mov
mov
xchg
adc
and
mov
inc
mov
cli
mov
mov
sub
insl
stc
repz
js
jl
mov
push
fildll
and
sub
push
xchg
ja
xchg
test
mov
add
mov
pminub
sub
ret
push
pop
pop
aad
jns
rclb
bound
push
xor
xor
movsl
xchg
insb
add
mov
jnp
lods
adc
in
cmp
jl
inc
or
fwait
add
call
xor
leave
and
add
in
add
pusha
lret
sub
and
pop
ret
sarb
dec
mov
mov
popa
cli
insb
jmp
dec
add
cmpsb
add
add
in
cmp
les
pop
mov
mov
outsb
mov
and
push
clc
cmpsb
lods
or
add
stos
jle
les
inc
stc
add
cltd
inc
dec
jo
cmc
and
adc
jmp
ljmp
pop
xor
add
pop
mov
shl
cs
mov
or
and
fdivr
inc
add
push
adc
cmp
cwtl
lea
orb
imul
out
xor
imul
jne
inc
jns
les
dec
ljmp
test
mov
ljmp
and
test
popf
add
call
push
scas
jne
rorb
cmpsb
aad
daa
sbb
adc
add
les
bound
lret
sbb
inc
loope
subb
and
adc
std
aad
mov
add
mov
icebp
pop
addb
inc
pop
pusha
fisttpll
dec
xor
add
adc
test
aam
les
nop
cmp
add
andl
jne
jl
les
jne
mov
cmp
cmc
dec
mov
js
adc
scas
test
enter
pop
mov
cmp
jno
cltd
ret
pop
out
xchg
daa
add
mov
cli
fcoml
push
adc
xor
push
addb
popf
int3
lods
loope
add
jmp
xchg
mov
mov
add
mov
or
pop
jmp
mov
sub
repnz
inc
adc
push
dec
dec
out
push
lods
dec
push
inc
loopne
xchg
mov
aad
fistpll
rclb
add
ja
popa
push
out
mov
cltd
sbb
insl
rorb
add
pop
outsl
sahf
loopne
add
fdivrl
popf
js
add
sub
or
mov
sub
add
jbe
shl
add
repz
mov
ficompl
add
in
mov
hlt
movl
shrb
stc
std
in
leave
andb
add
fldcw
arpl
cmpb
loopne
add
outsb
cmp
imul
aad
jno
sbb
jns
add
cmp
aam
dec
pusha
std
xchg
or
subb
inc
leave
mov
add
jne
loopne
adc
or
add
stos
add
ficoms
jb
add
enter
mov
mov
and
mov
cltd
xchg
add
mov
mov
sub
or
cmp
add
push
je
jl
jo
add
dec
push
shl
add
fdivl
push
jno
fildl
mov
sub
aad
out
mov
inc
incb
movsl
in
mov
mov
adc
xor
xadd
sbb
or
cmp
je
xchg
add
out
hlt
push
imul
popa
mov
test
add
xchg
push
inc
jnp
add
push
rcll
pmaddwd
flds
add
clc
mov
jl
mov
add
dec
sub
add
mov
add
sti
pop
add
dec
into
and
add
inc
movsl
add
fisttps
xchg
fadd
ret
nop
shll
push
jmp
outsb
xor
mov
shrd
mov
loope
in
sbb
dec
or
or
push
inc
pop
add
add
adc
or
sbb
add
outsl
rcrb
aam
add
push
add
fiadds
pop
cwtl
leave
fldcw
pop
and
mov
mov
pop
cmpl
mov
mov
mov
mov
popf
add
inc
shlb
push
push
ljmp
fildl
adcb
jae
adc
arpl
test
cmp
add
or
jp
iret
add
in
decl
xchg
daa
cwtl
add
add
mov
pop
jge
int
cmp
rolb
mov
add
jo
add
push
imul
add
jno
insb
sbb
jo
push
outsb
jbe
aam
loopne
roll
ficoml
int3
dec
fldl
outsl
push
fistpll
mov
mov
cmp
aad
mov
call
jle
xchg
shll
add
add
dec
icebp
addr16
mov
mov
dec
ss
fcmovb
sub
or
add
pusha
jp
inc
ret
out
fcomp
or
addr16
xchg
mov
jns
mov
mov
lret
sbb
add
outsl
and
push
xchg
add
int3
add
mov
mov
push
mov
add
loopne
mov
pop
mov
movsb
add
mov
cmpsl
call
mov
mov
sahf
add
sbb
mov
fs
es
or
mov
xchg
add
test
ss
push
cmpsb
add
push
sarb
addb
mov
loop
scas
mov
mov
fwait
xchg
rclb
pusha
inc
out
add
jl
or
inc
add
xor
mov
push
ficompl
int
mov
es
outsl
int3
inc
mov
adc
out
add
push
incl
lret
push
pop
or
adc
add
scas
clc
add
leave
imul
insb
inc
mov
mov
xlat
push
addl
ret
add
popa
cmpsl
idivl
push
pusha
add
dec
inc
imul
dec
push
scas
sbb
pop
add
or
inc
lock
cmp
enter
fidivrs
mov
inc
jmp
sbb
repnz
push
lret
mov
push
cmpsb
mov
ss
in
push
cmp
sub
push
push
mov
jp,pn
mov
mov
add
push
outsl
add
aaa
mov
push
or
ret
add
add
sub
xor
add
or
and
add
gs
data16
lods
add
or
mov
mov
mov
mov
push
sub
imul
shlb
out
hlt
mov
scas
add
stos
push
ds
xchg
sbb
adc
test
push
xorb
push
in
inc
andb
fsubl
ljmp
adc
add
int3
add
gs
add
mov
adc
inc
sub
mov
adc
add
mov
aas
orb
xchg
push
add
and
sbb
pop
mov
adc
mov
or
push
pusha
dec
sbb
pop
roll
inc
pop
add
dec
sbb
push
pop
cld
les
sbb
sub
sbb
pop
mov
lock
add
aaa
mov
dec
dec
or
or
popa
rolb
imul
mov
lock
inc
cli
loopne
enter
xchg
push
subl
xorps
mov
pop
jne
jbe
mov
jl
xor
mov
movsb
std
cld
shrb
xchg
pop
movsl
or
add
test
mov
icebp
sub
adc
add
int3
xor
dec
or
add
lret
loop
pop
daa
add
jae
add
fiaddl
dec
add
xor
aam
js
je
bound
out
cli
lret
add
ret
dec
cwtl
xchg
push
daa
pop
mov
enter
lods
adcb
fadds
or
inc
ljmp
mov
add
dec
int3
xchg
pusha
jge
inc
dec
in
mov
cld
adc
add
les
mov
pop
cmp
shlb
mov
or
xor
aam
add
jmp
outsb
aad
mov
add
inc
ret
mov
and
call
add
add
add
mov
adc
jns
adc
or
fldcw
or
push
add
adc
or
pop
sbb
inc
pop
add
xchg
jmp
jle
addr16
sub
scas
xor
sub
xor
pop
xchg
push
shl
sbb
sti
sbb
inc
nop
add
sbb
clc
mov
addl
add
adc
or
addb
add
add
sbb
and
fldl
nop
mov
lahf
jg
lahf
jo
add
adc
clc
push
adc
in
or
push
loopne
jo
test
and
loopne
add
bound
dec
insl
xchg
in
or
mov
cmp
test
ror
inc
add
fs
adc
add
cltd
add
cmpsb
fwait
xchg
popf
xor
inc
push
clc
push
add
or
push
inc
xchg
add
test
or
pop
mov
loopne
or
mov
std
inc
std
add
jnp
out
sub
loope
mov
add
jo
add
add
pop
in
adc
xchg
sub
push
aas
push
cwtl
mov
fcompl
mov
sbb
sbb
or
ret
cld
xorb
fsubl
pop
jmp
add
mov
pusha
add
mov
mov
aad
jge
add
shrl
push
xchg
ja
adc
gs
push
dec
mov
hlt
add
dec
pop
mov
paddsw
mov
rorb
adc
les
aam
xchg
in
enter
adc
add
filds
movsl
cmc
inc
jne
call
insb
shll
icebp
cld
xchg
lock
test
xchg
mov
ljmp
jmp
add
dec
ljmp
in
fdivs
push
cmovns
repnz
inc
test
inc
adc
jl
add
fidivs
sub
mov
xchg
cwtl
insb
add
cmp
or
push
xchg
pop
jg
pop
mov
dec
dec
add
push
push
add
push
push
add
inc
stos
loope
add
push
xchg
in
or
pop
jnp
sub
incb
das
gs
adc
or
push
sbb
or
jbe
gs
xor
mov
pop
or
aas
icebp
push
adcb
add
or
daa
xor
cmc
sub
pop
jmp
jo
push
cli
sub
lea
push
in
inc
jns
adc
je
pusha
adc
xor
clc
lcall
sub
cld
cmp
or
nop
es
add
adc
mov
add
adc
lods
mov
xchg
cmpsb
mov
mov
adc
sbb
movsl
fs
hlt
inc
push
sbb
cs
mov
fwait
and
adc
mov
ret
mov
cmp
dec
lock
cmc
sbb
or
fs
mov
sti
enter
pop
inc
mov
add
cltd
lock
daa
sub
inc
ljmp
notb
mov
sahf
pop
sbb
xchg
dec
push
adc
arpl
test
imul
repnz
jae
dec
in
cs
jo
aas
add
mov
jge
pop
adc
add
iret
xchg
enter
test
js
mov
sub
mov
fdivrs
repnz
xchg
fs
and
mov
or
inc
jno
pop
sahf
mov
ret
push
and
adc
mov
sbb
push
dec
cmp
mov
sub
mov
push
and
xchg
sbb
test
mov
inc
sbb
mov
pusha
clc
syscall
aam
fsubl
cmpl
jl
sbb
test
push
out
sub
aaa
adc
jns
sbb
test
xor
sub
xchg
int3
stc
lret
cmp
std
sbb
cmpsl
lock
xor
adc
sub
or
and
cmp
dec
push
jb
adc
xor
js
pusha
cltd
jb
andb
add
adc
sbb
sbb
add
cltd
inc
lds
xor
dec
xchg
and
cmp
icebp
daa
nop
and
clc
sub
sub
orb
das
xchg
sub
or
xor
sbb
add
lods
mov
mov
adc
or
inc
cmpsb
nop
rorl
pop
add
mulb
sbb
dec
adc
sub
dec
add
sbb
add
inc
shl
sub
dec
pop
add
inc
imul
and
pop
lds
dec
dec
jno
dec
cmp
cltd
rcrb
in
xor
nopl
cmp
and
or
jno
or
sbb
fmuls
incl
xchg
or
add
adc
pop
inc
fwait
sti
or
xor
pop
xor
mov
xor
pop
and
stos
jno
subl
dec
mov
xchg
push
mov
mov
ret
push
movsb
cld
movl
cmp
lret
inc
mov
enter
jb
rorb
cmp
loopne
adc
call
or
add
repz
adc
jp
push
jnp
cmp
cmp
add
in
or
sub
or
and
adc
push
orl
pop
inc
xchg
popa
daa
pop
xchg
das
pushf
mov
mov
cmp
dec
cmp
or
cmp
mov
cmovge
push
inc
add
mov
popl
gs
int3
and
insl
cli
pop
stc
push
inc
jno
cmc
pushf
push
push
jnp
mov
add
fs
std
xchg
inc
daa
jge
cli
cmp
xor
and
and
inc
lret
mov
xor
test
loop
push
daa
inc
xchg
mov
jge
dec
push
xchg
mov
mov
scas
bound
stos
xchg
sub
movsb
dec
cmp
push
inc
add
sarb
add
mov
adc
push
mov
iret
and
in
je
cmp
dec
add
ljmp
daa
out
adc
aam
pop
sbb
push
ds
hlt
xchg
inc
cld
inc
lret
gs
jmp
and
mov
in
inc
push
add
sub
or
add
adc
mov
lods
inc
adc
bound
and
sub
push
clc
nop
enter
bound
clc
mov
sldt
shrl
cwtl
shlb
loop
inc
xor
test
sbbl
push
xor
loopne
dec
push
lods
jae
das
pop
mov
in
addl
push
add
xor
or
jl
adc
add
dec
in
xor
sbb
sbb
xchg
jl
movsl
dec
push
cmp
js
mull
pop
jns
add
insb
sub
cli
outsb
dec
das
inc
shlb
aaa
arpl
or
jo
cmpb
je
rcll
or
xchg
and
aad
xorb
dec
test
push
daa
fs
xor
das
leave
add
pop
in
inc
nop
push
test
xchg
mov
hlt
push
enter
push
pop
mov
and
aam
sub
mov
rolb
add
punpckldq
cmp
sub
ret
xlat
imul
add
mov
xor
mov
rorl
das
mov
add
push
xlat
push
and
fstl
addl
nop
int
in
adc
add
adc
sub
hlt
xchg
int
loopne
or
shrb
cmp
add
adc
mov
push
test
add
adc
or
fdivrs
xchg
loop
add
mov
xor
xchg
cmp
es
and
inc
add
mov
cwtl
add
cltd
cmp
add
mov
mov
push
sbb
lea
sahf
mov
sbb
movsl
push
and
and
add
or
addb
add
push
jmp
adc
shlb
movsb
movl
nop
pop
adc
cs
sahf
add
repnz
dec
xor
clc
mov
fildl
push
arpl
fsubrl
jcxz
bound
sbb
or
mov
out
ret
leave
pslld
cmp
in
pushf
testb
mov
jl
lret
rolb
inc
dec
xchg
push
sub
sub
mov
inc
les
sub
mov
es
rcrl
andl
dec
add
repnz
loope
jb
dec
lahf
sbb
nop
dec
dec
push
or
jno
inc
dec
add
stos
and
and
loop
lock
sti
adc
test
shlb
daa
lret
imul
loop
and
and
add
fldcw
jns
nop
fldl
push
add
and
inc
sbb
dec
jmp
jl
movsb
mov
add
sbb
in
sub
dec
pushf
jae
and
mov
xchg
add
sbb
or
mov
and
inc
mov
push
push
cwtl
xor
jmp
sbb
and
nop
rolb
and
aaa
adc
and
test
aas
push
and
cmpb
sub
ret
and
and
fsubl
repz
mov
popl
xor
push
cmp
inc
dec
xor
inc
dec
mov
fs
nop
test
sub
cltd
pop
cmp
loop
cbtw
add
lock
inc
imul
loopne
push
jno
loope
jbe
fistl
js
add
jnp
jecxz
adc
cmp
xchg
mul
popl
adc
in
mov
iret
inc
jns
adc
jno
cmpl
insb
lods
lahf
repnz
mov
das
pause
xchg
mov
pop
inc
pusha
add
inc
cmc
cmp
loope
icebp
and
lret
add
push
cld
dec
js
add
inc
call
inc
mul
test
cs
ja
pop
nop
xor
loopne
xchg
sub
sub
movsl
fmul
mov
mov
jo
pop
sbb
out
pop
or
dec
mov
adc
shrb
add
mov
add
add
mov
mov
faddp
fs
das
jo
or
pop
in
xorb
sub
rol
or
jmp
in
inc
es
enter
lcall
pop
cmp
push
and
repnz
jp
add
mov
movsb
mov
call
jb
fcmovb
inc
popa
enter
fdivrs
sahf
mov
fcompl
mov
inc
mov
es
fsub
rcrb
scas
inc
or
lds
in
sub
push
fsts
lock
sub
mov
add
fadds
inc
jns
sbb
push
enter
in
mov
fcom
nop
test
push
mov
cmp
sbb
loopne
pusha
in
jl
mov
repnz
jl
stc
dec
popf
loopne
js
cmp
stos
pop
aam
popf
push
jo
lock
clc
mov
leave
fstps
sub
fstp
in
gs
arpl
cmpsb
mov
mov
inc
add
sbb
mov
and
add
cs
xor
sbb
xor
add
sbb
loopne
xchg
ds
fdivs
inc
test
aas
ret
mov
test
add
push
orb
or
and
es
icebp
cmp
or
je
pusha
sub
repz
es
les
test
sbb
sub
add
lcall
adcb
enter
popa
sbb
rcrl
cmp
mov
mov
push
and
mov
and
xchg
pop
push
push
shl
inc
not
loop
adc
xchg
adc
xchg
cmp
loop
adc
dec
jo
repz
sub
loop
adc
inc
sbb
sub
push
add
call
mov
int3
inc
fistpl
sbb
fistpll
push
lods
sub
popf
sub
inc
sbb
in
dec
xchg
fucomp
add
and
jne
xchg
and
adc
adc
sbb
inc
xor
xchg
cmp
leave
cmpsb
mov
jp,pt
xchg
sahf
xor
xchg
add
and
push
push
lret
jne
enter
xor
sbb
push
cwtl
sub
scas
mov
mov
outsb
add
mov
sbb
lret
outsb
loope
adc
stos
adcb
outsb
add
mov
cmp
outsl
sbb
jg
cli
sbb
adc
arpl
dec
add
cmpb
mov
add
les
dec
push
and
dec
inc
cmpsl
adc
rorb
sub
or
jne
inc
in
cmp
adc
xchg
cmp
repnz
dec
sub
test
notb
hlt
push
faddl
mov
push
clc
xchg
pop
fmuls
push
in
and
inc
pusha
push
jl
pop
push
aaa
or
loop
add
push
pusha
or
xchg
jbe
sub
xorb
mov
cmp
inc
cmc
sub
pop
pop
in
mov
mov
jmp
enter
inc
icebp
sub
add
xor
push
adc
adc
mov
push
repnz
jbe
push
jge
call
mov
cmp
jge
add
xchg
sarl
leave
mov
test
sbb
mov
rcrb
mov
pop
rorl
push
push
jbe
imul
icebp
add
sti
add
push
adc
mov
out
or
mov
or
xor
sbb
lret
cmp
testl
mov
jp
out
or
mov
cmp
lds
sbb
lahf
push
or
int
adc
stc
add
out
cmp
push
mov
or
ljmp
mov
cmp
test
fsub
movsl
cmp
jl
add
sbb
or
push
nop
cmp
mov
mov
sub
lods
cmp
orb
dec
add
mov
clc
and
movsb
lret
into
mov
pop
adc
loopne
adc
jb
lcall
fimull
and
nop
mov
or
aam
mov
mov
negl
pop
push
jp
and
movsb
popl
add
les
fcmovb
sbb
xchg
xchg
push
cmp
pop
pop
xchg
xchg
std
test
mov
out
sub
cmpsl
mov
fs
cmp
or
loop
inc
mov
inc
add
xor
fs
sub
movsl
lock
sub
add
fstl
fdivl
mulb
cmpsl
lahf
xchg
lock
jbe
cli
shl
xor
nopl
cmp
lods
les
sarb
in
icebp
movsl
xchg
sbb
xchg
nop
cmpsb
inc
cltd
xchg
adc
push
lods
pop
jb
mov
stos
add
popa
mov
nop
xor
adc
test
lret
callw
pop
add
push
inc
movsl
mov
js
cmp
testl
lods
pop
repnz
mov
loopne
pop
jns
push
stos
sub
inc
out
and
lds
cmpb
push
popa
and
cmpsl
fs
popa
xchg
inc
imul
scas
mov
push
inc
enter
pop
ljmp
cmpsl
push
inc
popa
sub
jno
lock
es
ljmp
mov
and
dec
push
push
scas
sub
ds
nop
lret
fs
mov
mov
cmp
stos
leave
testl
add
insl
enter
rorb
repz
outsb
jno
or
pusha
outsl
mov
cmp
or
add
test
cmp
loopne
movsl
push
pop
mov
sbb
push
in
movsb
add
js
and
or
push
sub
ret
sahf
int
adc
and
cmp
ds
orl
jmp
rcll
out
pop
adc
mov
add
dec
push
cmp
push
jbe
add
dec
or
inc
inc
dec
jne
dec
popf
pop
add
cmp
sub
pop
cmp
dec
addl
inc
inc
add
sub
add
push
jae
push
test
mov
aas
and
inc
push
dec
sub
or
push
push
dec
popa
das
inc
inc
dec
xor
inc
cs
adc
aam
cmp
push
and
push
sub
add
hlt
mov
cmp
or
jne
add
ret
pusha
adcb
inc
dec
xor
add
sbb
inc
lcall
sub
mov
add
inc
dec
inc
add
cmc
roll
or
add
sub
cs
and
add
push
mov
movsl
add
push
adc
add
cmp
in
bound
push
jne
add
mov
pop
pop
stos
int
jmp
sbb
sub
fisubl
or
sbb
inc
mov
cvtps2pd
clc
into
add
nop
jne
push
aaa
or
fisttpll
xor
dec
data16
adc
pop
cmp
rorb
sbb
cli
xchg
stos
test
xchg
jns
add
or
inc
mov
dec
pop
es
pop
pop
dec
jecxz
mov
loopne
int3
adc
pop
arpl
push
shll
push
add
daa
or
dec
rcrb
add
jae
or
imul
je
sarl
xor
dec
mov
inc
pusha
xchg
mov
mov
mov
inc
pusha
pop
pop
and
and
jno
imulb
cmpsb
pop
push
inc
add
dec
iret
jb
and
xor
or
dec
jl
stos
add
xor
mov
adc
xor
clc
adc
add
je
mov
add
add
pop
add
pop
dec
inc
ror
inc
cmc
inc
push
xchg
mov
dec
fdivl
fiadds
les
sets
dec
test
dec
jbe
sub
inc
inc
mov
push
add
adc
or
adc
xchg
test
jmp
ja
movsl
sbb
ljmp
push
xchg
dec
ljmp
cmc
cs
inc
inc
repnz
jge
jnp
add
cltd
dec
inc
fstpt
enter
inc
psrad
dec
imul
dec
mov
subb
push
leave
sahf
inc
add
dec
or
add
dec
imul
dec
push
dec
pop
shl
sub
jmp
or
push
inc
test
sbb
cmp
cmp
ficoml
test
pop
sub
cmp
ljmp
dec
add
ss
jmp
test
add
test
pop
push
iret
aam
pop
cmp
int3
fidivrs
imul
cli
add
dec
push
inc
add
push
scas
xchg
test
add
test
das
push
add
or
inc
pop
add
push
ljmp
push
pusha
ret
dec
insb
or
add
sbb
hlt
stc
push
jle
and
xchg
or
pop
add
inc
fs
inc
jnp
add
scas
mov
std
pushf
loopne
dec
cmp
sbbl
push
dec
or
add
push
sub
pop
dec
out
xor
and
popa
add
fldt
dec
add
dec
lret
inc
add
daa
in
xor
idivb
dec
inc
aad
add
pop
cmp
leave
cmpb
xor
sbb
cs
pop
sbb
shrl
je
add
xor
inc
add
aam
xchg
push
xchg
clc
lret
in
xchg
xchg
jl
pop
movsl
push
dec
and
pop
insl
add
jne
dec
add
jbe
movsl
cmp
adc
lds
clc
push
or
lods
mov
dec
mov
add
adc
push
out
imul
inc
xchg
lcall
push
mov
xchg
mov
in
stos
cmp
pop
dec
mov
xchg
pop
scas
add
push
lods
popf
adc
in
dec
mov
mov
push
jg
mov
out
sahf
into
iret
push
cmp
shlb
fdivrs
add
push
adc
push
imul
adc
adc
dec
inc
add
xchg
es
pop
sbb
adc
jge
or
sbb
gs
hlt
in
std
inc
xor
pusha
pop
call
jbe
xor
inc
jge
add
adc
sbb
dec
mov
fsubl
add
sbb
adc
cmp
shlb
add
lret
add
stos
subb
call
push
rorb
push
nop
inc
ret
nop
aaa
lock
xchg
push
or
fdivrl
dec
icebp
add
sbb
incb
push
inc
inc
enter
outsl
push
or
and
out
push
mov
mov
nop
add
mov
push
pop
jo
push
xchg
xchg
inc
and
cs
cld
add
fs
rcll
add
cwtl
xchg
sbb
inc
ret
add
stos
push
cs
inc
and
mov
loope
inc
pop
push
cmp
nop
enter
jle
stos
shrb
dec
fs
push
popa
add
cmpsb
inc
scas
or
xor
loop
or
fwait
je
push
mov
roll
popf
xor
call
jbe
mov
or
daa
inc
adc
adc
lock
push
mov
test
mov
cmp
push
inc
inc
dec
daa
orl
sbb
mov
lcall
lret
jnp
mov
add
mov
enter
das
adc
mov
sub
nop
xor
data16
sub
and
lock
mov
andb
mov
frstor
and
push
pop
inc
insb
xor
repnz
jb
dec
push
sub
adc
sub
or
jbe
out
cmc
lahf
add
mov
mov
mov
cmpsb
push
adc
add
cmp
dec
or
ljmp
shrb
lret
cmove
push
sub
pop
inc
repnz
orl
in
sub
outsb
xlat
rclb
inc
add
pop
xchg
inc
sub
add
js
sbb
insb
aam
dec
stos
add
inc
mov
insl
addps
add
add
inc
pop
fcompl
jne
insl
shrb
stos
bound
pop
cmp
pop
adc
int3
movsl
orb
add
mov
inc
mov
sub
sbb
fsubl
test
hlt
cmp
add
or
cld
mov
inc
mov
jl
push
adc
xchg
jo
inc
mov
ds
test
shl
in
mov
mov
addr16
push
sbb
and
loop
add
mov
and
lahf
es
popl
xchg
jl
add
xor
xorb
icebp
aam
test
xchg
hlt
fisubs
loop
push
jo
nop
pop
inc
sub
mov
push
cltd
icebp
dec
sbb
sub
les
jl
les
fwait
push
xchg
test
cmp
sbbb
jbe
add
cwtl
test
jno
fcmovb
pop
inc
add
sahf
and
push
inc
jb
mov
inc
pop
sarl
in
jmp
push
mov
rclb
rcrb
repnz
or
and
sbb
in
in
in
push
mov
add
jb
iret
insb
dec
inc
jl
pusha
lret
push
add
js
xor
fdivs
add
in
iret
pop
aam
hlt
sub
test
mov
je
add
add
and
or
cmp
fs
sub
pusha
out
lds
in
adc
xchg
pop
dec
mov
ror
int3
dec
xor
add
push
sub
adc
jo
loope
stc
rcr
in
adc
in
std
sub
pop
or
pusha
cli
cmpsb
adc
xchg
stc
add
in
dec
notl
clc
cmp
mov
out
xor
jo
repnz
filds
imul
cmovo
pusha
mov
xor
push
sbb
pop
pop
ret
pop
test
mov
cmpps
lock
and
ret
std
add
inc
mov
ficompl
pop
or
adc
adc
or
cmp
lds
lods
mov
inc
movsl
mov
cmpsb
push
fsubr
movsb
test
mov
pop
mov
push
push
icebp
jp
mov
icebp
and
add
mov
mov
lahf
rorb
pop
orb
lods
or
cmp
cmp
add
mov
add
loopne
cld
cmp
pop
or
xchg
mov
pushf
in
add
je
pusha
ljmp
mov
call
sbb
lret
cwtl
mov
aas
mov
mov
xor
and
lret
clc
lcall
pop
test
test
insb
data16
pop
inc
cltd
xor
sbb
jl
fs
mov
daa
add
inc
fsub
xlat
pop
enter
js
adc
ud2
incb
inc
insb
into
movsb
mov
xchg
mov
loopne
fmull
adc
jmp
push
rorb
or
test
mov
add
and
sub
cltd
movsb
shlb
mov
sub
lock
jnp
pop
mov
mov
inc
shl
inc
dec
int3
push
jl
sbb
popa
and
pusha
jo
pushf
pop
inc
jmp
pop
les
push
xor
cs
xor
add
fisubl
sbb
push
add
and
jnp
add
xchg
adc
add
jmp
pop
cmp
flds
or
pop
push
out
add
std
lock
jae
fsubrs
add
cmp
aaa
add
inc
sbb
shrl
and
or
add
scas
adc
add
dec
aam
add
dec
loopne
ret
popa
xor
arpl
xor
or
movsb
call
popa
pusha
cmpb
sub
mov
imul
shlb
mov
sbb
adc
stos
mov
add
inc
insl
inc
adc
int3
imul
ret
sbb
nop
cli
add
cwtl
or
add
push
stos
sub
and
sbb
sbb
gs
add
rorb
jno
push
adc
jecxz
xor
stc
shl
adc
int
dec
sub
add
and
int3
pop
shlb
jne
or
and
rcll
aaa
adc
adc
dec
cltd
pop
out
mov
movsb
rolb
pop
xchg
mov
pop
sub
and
data16
or
fs
sub
xchg
cmp
imul
ficompl
adc
and
mov
mov
pushf
dec
xchg
mov
cltd
jl
int3
jo
and
leave
push
dec
pusha
adc
or
insb
cmp
pop
and
jne
xor
flds
jmp
fs
cmpsl
enter
imul
test
cmp
mov
mulps
adc
dec
cli
xchg
add
imul
sets
mov
dec
xor
shll
push
lock
fsubs
mov
call
mov
add
xor
cbtw
mov
sub
call
xchg
add
shr
and
dec
sbb
cltd
or
xchg
aam
data16
sub
jae
lcall
xor
add
push
decb
pop
jno
add
clc
loope
add
adc
add
add
data16
sub
jno
add
in
inc
js
loopne
cmpsb
sub
imul
flds
dec
and
cmp
pop
inc
push
icebp
call
dec
xor
sbb
pop
add
sub
jo
and
cmpb
xchg
dec
mov
dec
je
pusha
adc
sub
xor
sub
and
cs
sarb
and
fsubs
add
les
test
and
push
fs
sub
sbb
sbb
push
cltd
pusha
cwtl
daa
inc
mov
add
dec
lods
aam
xchg
les
cltd
je
rol
fdivl
js
add
sub
fdivrs
sbb
data16
sbb
mov
hlt
adc
xor
adc
js
xor
scas
les
pusha
int3
and
sbb
jmp
js
sarb
cltd
and
lods
mov
das
pop
adc
shlb
sti
xor
inc
add
pop
and
rcr
dec
stos
jae
cmp
pop
cltd
push
push
mov
loopne
cmp
push
test
dec
sbb
dec
add
mov
sbb
dec
test
pop
es
cld
cld
pop
mov
inc
das
loope
enter
dec
or
xor
aam
push
jge
fsubrs
sbb
fdivr
xchg
mov
add
push
add
loopne
mov
cltd
or
adc
add
xchg
cmp
sahf
mov
push
andl
add
jl
rorb
adc
add
push
sub
les
xchg
js
inc
mov
mov
xor
aam
inc
add
clc
hlt
les
xchg
adc
and
inc
add
xchg
js
mov
pop
add
add
add
cmp
adcb
jp
popa
cmp
std
out
cld
and
fwait
inc
adc
mov
aas
add
cld
xchg
test
insl
repnz
pushf
adc
mov
mov
jbe
test
jns
jg
adc
xchg
sarb
adc
inc
das
or
orb
push
jb
jl
or
shlb
dec
repnz
lods
insb
jl
jmp
aas
mov
aam
dec
mov
adc
or
lahf
sbbl
dec
jb
cld
jb
inc
orb
xchg
into
in
loopne
and
push
mov
push
test
xchg
loopne
mov
xchg
nop
hlt
and
mov
jbe
test
aas
stos
xchg
mov
out
mov
or
xchg
ss
call
pop
imul
fistpll
in
loopne
adc
mov
pushf
daa
dec
fcoms
push
add
mov
xor
or
inc
jo
dec
push
cvtps2pi
add
dec
mov
sbb
mov
mov
jg
add
in
mov
or
inc
sbb
mov
sub
mov
cmovae
loope
adc
sub
sub
xchg
outsb
ret
sub
enter
sub
dec
cltd
add
pop
jo
add
mov
jno
mov
int3
fiaddl
push
test
ds
push
nop
inc
add
jbe
mov
loop
mov
cwtl
test
cmp
add
pop
test
cmp
shlb
lock
stos
and
sbb
adc
jle
rorl
std
movsb
xchg
inc
enter
inc
call
repnz
shrb
repnz
xchg
nop
inc
cli
mov
rclb
ljmp
sbb
ds
mov
add
cli
fidivl
scas
or
sub
adc
adc
dec
xor
in
mulb
jmp
mov
pop
add
jbe
mov
dec
dec
fdivrp
repnz
mov
js
pop
sub
insl
push
iret
jne
push
jp
inc
cmp
outsb
sbb
call
clc
adc
js
mov
pop
dec
mov
xchg
decl
das
mov
dec
call
shrb
scas
add
mov
inc
dec
test
daa
ret
addb
add
stc
adc
dec
sub
push
bound
adc
cli
into
inc
out
and
mov
adcl
leave
out
loopne
mov
mov
ret
cmp
mov
mov
icebp
je
xchg
mov
nop
test
mov
xor
adc
dec
and
or
adc
dec
cld
mov
push
fs
cmpxchg
mov
and
sub
cmp
inc
repnz
cmpsl
mov
imul
std
ljmp
inc
sbb
outsb
test
aas
mov
enter
sub
and
ds
add
xchg
xchg
xchg
outsl
mov
shll
fdiv
repnz
aaa
adc
icebp
dec
outsl
jb
adc
jp
mov
adc
mov
in
ss
xchg
js
pop
je
add
lcall
cltd
or
add
popa
sub
adc
dec
dec
je
xchg
add
dec
ret
out
sub
jb
in
sbb
jns
arpl
push
jmp
sahf
add
dec
mov
pop
sbb
sbb
push
inc
dec
and
jp
xchg
xor
cltd
jne
inc
fldenv
xchg
push
push
inc
subb
arpl
push
sbb
sbb
inc
inc
sbb
inc
cld
add
outsb
mov
mul
push
or
outsw
out
xchg
cmc
mov
sbb
sub
add
mov
jmp
pushf
movb
push
dec
stos
add
add
inc
add
insb
xor
outsb
mov
xchg
sbb
adc
push
imul
push
outsl
dec
popf
insb
sbb
jns
dec
mov
pop
or
and
sub
fldenv
loopne
jo
stos
or
cmp
bound
lock
pop
js
in
xor
adc
dec
jge
daa
test
mov
add
jb
outsb
cmp
push
jae
cwtl
ss
loopne
mov
or
in
inc
cmp
adc
popa
imul
dec
pop
add
and
jp
fcom
jae
add
inc
jge
xchg
mov
or
or
adc
lcall
lcall
mov
ret
sub
xor
test
push
outsb
push
xchg
js
es
mov
cmp
push
jp
ja,pt
push
or
popa
icebp
stos
shlb
lcall
xor
add
cmp
jns
and
cmp
dec
sbb
adc
outsb
add
cmpsl
sahf
popa
mov
xor
mov
je
sbb
cltd
jo
imul
addr16
push
add
sub
int
pop
outsb
shlb
imul
add
inc
mov
je
fadds
pop
jns
mov
pop
inc
adc
adc
ficoms
mov
push
mov
xor
ss
push
mov
mov
subl
push
loopne
xchg
push
hlt
dec
adc
push
inc
pop
xor
and
inc
pusha
mov
cmp
add
push
add
or
dec
adc
adc
ja
push
dec
in
add
sub
dec
mov
cmpsb
add
jmp
xor
pop
jno
push
or
std
stos
add
imul
xchg
clc
es
insl
not
jbe
add
insb
inc
mov
push
je
sbb
add
lods
in
shl
push
sbb
mov
popa
sbb
push
cmp
pop
adc
push
jo
sbbb
pop
pushf
xchg
das
nop
push
adc
mov
pop
and
pop
scas
and
jo
sub
dec
add
mov
and
mov
lcall
xor
rolb
leave
cmp
shlb
push
pop
jno
push
jo
mov
and
push
cmp
dec
sahf
jne
add
push
clc
fmuls
outsl
add
jns
adc
xchg
filds
dec
push
dec
adc
jbe
dec
or
test
dec
push
cwtl
add
into
cmovno
inc
addl
push
add
jnp
jno
jbe
add
push
or
jl
pop
push
mov
lea
and
roll
jae
add
repnz
sub
cvtpi2ps
cs
pusha
sub
es
aaa
sbb
movsb
xchg
adc
cwtl
hlt
imul
les
add
jmp
sub
jmp
movsl
add
rcrb
add
push
or
dec
loop
shlb
jb
or
dec
jae
mov
add
lcall
xchg
dec
jo
popa
or
imul
ret
sub
adc
movsb
aas
pusha
inc
sub
mov
hlt
cmp
pop
adc
push
add
push
lods
pusha
aas
sub
scas
es
push
xchg
ja
dec
jae
sub
repz
jns
mov
clc
insb
cwtl
xor
je
add
lcall
sahf
dec
je
sbb
pop
js
leave
arpl
inc
adc
cmpsl
fildl
pop
sub
push
jo
mov
rcr
xchg
jae
jae
adc
inc
inc
xchg
cmp
lret
cs
and
pop
adc
adcb
push
and
sbb
lods
add
jnp
and
lock
push
push
pop
sbb
inc
mov
icebp
cmpsl
sbb
mov
push
aam
pop
or
sbb
adc
popl
add
mov
push
fs
sub
add
insl
jns
sarl
push
push
push
les
xlat
fldt
lock
jne
add
fbld
ficompl
sub
mov
inc
and
daa
jp
sbb
jae
enter
sub
adc
mov
xchg
dec
sbb
push
repnz
pushf
cmp
push
jns
add
scas
lock
add
movsl
or
sbb
loopne
inc
sbb
cltd
xor
push
out
repz
pusha
sub
jae
add
test
in
lea
jns
xchg
lret
aam
inc
adc
test
lea
push
das
sarb
adc
adc
jge
add
cmpsl
xor
out
dec
lcall
imul
add
pop
outsb
jne
insl
inc
aaa
aas
mov
sti
add
sbb
rcl
je
inc
cmp
jbe
ja
outsl
ja
imul
pop
cwtl
cmpsl
xchg
mov
movsb
adc
and
dec
push
ja
mov
sbb
lds
dec
mov
push
push
repnz
sbbl
xchg
popf
popa
loopne
push
jmp
mov
out
jno
pop
int
inc
pop
test
mov
dec
pusha
or
add
mov
addr16
pop
cmpsl
ljmp
xorl
imul
lock
shlb
hlt
push
add
pop
dec
dec
jo
cmp
sub
fildl
pop
xchg
push
flds
subb
dec
push
xor
js
insb
adc
inc
lds
inc
dec
mov
rclb
faddl
inc
inc
std
sub
imul
add
test
xlat
fildl
ljmp
imul
bound
mov
or
aam
or
cmc
dec
pop
push
sub
movsb
shrb
xchg
cmc
push
adc
leave
pop
aam
imul
movsb
pop
mov
cmp
push
xchg
dec
add
push
and
sbb
js
das
pusha
dec
arpl
jae
inc
adc
mov
int3
cwtl
add
cmp
gs
data16
sahf
mov
sbb
dec
inc
mov
xor
sub
popa
sti
push
cli
mov
enter
fs
or
or
dec
jo
cmp
dec
push
lock
add
xchg
adc
or
or
sti
pop
inc
outsl
mov
push
insl
mov
adc
pop
mov
jns
aas
outsl
add
pop
and
mov
repnz
adc
lea
stos
sub
push
mulb
in
pop
popa
xchg
jb
push
scas
stc
loop
pusha
xchg
addl
scas
sbb
cmp
pop
pop
mov
xchg
dec
jb
adc
jbe
shlb
push
mov
inc
dec
mov
stos
aam
mov
outsl
mov
mov
popf
mov
movsb
cmp
jne
or
jb
cli
add
sbb
push
add
sbb
add
fsubrl
out
in
add
dec
inc
adc
xchg
adc
add
mov
push
pop
jb
lea
insb
jnp
push
xchg
adc
and
popf
cmpsl
andb
test
sub
pop
xor
fistpl
and
mov
int3
push
add
mov
push
call
cmp
pushf
add
mov
jno
cmpsb
setae
movsl
jb
inc
pushf
adc
mov
testb
hlt
aad
imul
add
inc
cmpsb
mov
dec
jge
add
xchg
xchg
sub
add
mov
cmp
testb
and
push
mov
leave
adc
and
and
sbb
lods
xchg
cld
cmpsb
adc
mov
push
cmp
outsl
addr16
xchg
dec
and
jne
jb
or
push
or
rcll
push
dec
pop
shlb
lods
mov
pusha
fiadds
adc
mov
pop
push
fldt
mov
rolb
addr16
rorb
nop
fisubs
cld
xor
movsl
jle
push
jne
push
and
cltd
jl
mov
add
sub
cwtl
lods
lahf
pop
and
mov
aaa
rorb
sbb
pop
out
jne
cmpsb
and
jecxz
mov
adc
dec
add
xchg
mov
or
mov
jae
lahf
add
paddusb
jo
adc
push
into
push
js
cltd
pop
dec
cmp
sbb
mov
dec
leave
pop
mov
sub
push
mov
and
ficoms
arpl
add
fstps
jbe
push
call
jecxz
xchg
orb
pop
arpl
pop
push
int
jo
xchg
jno
push
lret
mov
pusha
fdivr
sub
dec
cli
inc
mov
add
xchg
sbb
sti
add
addr16
sub
je
outsb
jbe
sub
inc
out
xchg
adc
and
or
sub
inc
jge
sbb
add
out
shl
dec
pop
sub
lret
adc
flds
aad
rcll
mov
jo
jb
mov
sar
adc
cmpsb
jecxz
adc
push
pop
orb
cwtl
push
adcl
loopne
xlat
sub
xor
inc
in
jl
mov
sub
inc
ret
xchg
mov
movsb
pop
adc
in
push
test
loopne
cmp
test
outsb
fnsave
sub
mul
cmp
mov
movsl
sbb
lret
cmp
xchg
add
dec
and
in
lret
cld
enter
fdivrs
inc
hlt
test
testl
je
add
dec
lahf
and
sbb
push
js
cmp
jg
stos
stc
dec
adc
mov
call
add
out
xor
lahf
clc
imul
into
insb
sub
and
test
add
adc
add
popa
dec
mov
fmull
ds
out
rorb
push
and
inc
sbb
cmpsb
push
nop
test
lret
sti
jle
sub
mov
mov
add
daa
cmp
push
lahf
inc
push
jns
popf
cmpsb
adc
cmp
xor
movsb
pushf
pop
add
cld
lods
dec
push
sub
data16
jmp
inc
repnz
fdivs
dec
mov
add
cmpsb
lods
sbb
push
dec
movsl
loop
testl
adc
add
push
xchg
cmp
negb
add
dec
or
and
or
add
loopne
jne
jecxz
test
lods
xchg
lea
inc
nop
dec
add
rolb
cs
add
jo
outsl
stos
mov
dec
add
push
sub
add
cmp
adc
sub
adc
xor
shlb
orl
jb
lods
add
sbb
bound
mov
and
inc
daa
cmp
or
loop
mov
push
test
imul
inc
lahf
orb
adc
lock
repz
mov
xchg
pusha
sbb
fwait
lahf
out
add
test
fdivl
inc
int3
pop
pop
fnstcw
add
push
mov
pusha
lcall
sub
inc
cwtl
add
out
iret
in
sub
out
and
pop
push
jbe
dec
fstps
cmp
rolb
imul
pop
push
add
adc
divb
mov
pop
mov
negb
add
cmp
movsl
add
sub
popf
inc
jmp
aad
outsb
adc
xor
out
ficompl
in
mov
add
outsb
add
aam
mov
out
push
mov
add
nop
push
or
test
fnstenv
adc
mov
clc
insb
mov
sub
push
push
dec
add
jnp
daa
bound
mov
cwtl
push
imul
push
leave
push
push
movsl
add
cmpsb
mov
inc
loopne
pop
pop
aas
pushf
push
pop
sub
xchg
or
nop
add
pop
and
add
lods
xor
jmp
xchg
and
add
push
sti
mov
inc
mov
pop
add
mov
sub
orl
add
arpl
shlb
mov
mov
pop
mov
pop
sub
pop
mov
les
xchg
cmp
adc
in
cli
xor
filds
or
loope
ds
inc
mov
mov
testl
testb
imul
adc
xchg
push
or
in
push
jmp
sbb
adc
xchg
or
mov
ret
mov
loope
test
mov
neg
lock
and
ret
or
sub
inc
inc
jmp
inc
push
add
lods
pop
lds
ds
xchg
sbbb
stos
hlt
or
test
adc
pop
fstps
jecxz
orb
jae
sbb
or
ficoms
ja
and
add
and
jo
add
cmp
ljmp
push
mov
rorl
sub
dec
sti
inc
out
and
in
cmp
add
mov
pushf
add
lahf
imul
lock
push
insl
jns
aam
test
iret
cmc
arpl
outsl
add
sub
jmp
push
inc
inc
jns
inc
movsl
pop
sahf
jbe
rcrb
bound
pop
inc
outsb
shlb
lidtl
int
out
mov
add
ja
repnz
push
inc
adc
mov
push
cli
dec
add
leave
adc
ficoml
rclb
xchg
or
jnp
adc
insb
add
inc
outsb
cld
imul
mov
jae
jmp
fisubs
push
push
jns
lods
mov
add
data16
jg
cltd
adc
pop
xor
pushf
sub
push
pop
mov
lahf
fcompl
call
lock
daa
clc
and
sbb
leave
and
jne
jns
jge
xchg
lahf
movsb
pop
test
les
aam
fcomps
in
call
cmp
push
xchg
push
mov
ss
jo
repz
repz
repz
repz
repz
jle
xchg
mov
xchg
repz
repz
repz
repz
mov
repz
repz
out
out
repz
and
push
xor
leave
push
dec
push
mov
iret
cs
dec
bound
jp
or
iret
xchg
iret
lcall
cmp
xorl
ss
pushf
mov
pop
daa
popf
xchg
shll
mov
fiaddl
cmp
cmp
pushf
ds
dec
rcll
pop
loope
jmp
mov
cltd
stc
lods
stc
mov
mov
fdiv
ljmp
adc
sbb
mov
iret
aaa
dec
push
movsb
lahf
push
lahf
mov
stos
lahf
mov
mov
jmp
pop
cmp
mov
sbb
sti
enter
add
mov
fxch
loope
call
pop
inc
dec
popa
add
addb
cwtl
add
fmuls
or
push
add
dec
mov
rol
push
xor
cmp
push
cmp
cmp
xchg
add
or
sbb
and
jle
jp
jl
add
push
dec
sub
cltd
out
mov
mov
lock
lock
adc
and
dec
add
leave
sahf
push
ret
adc
xor
daa
sub
mov
dec
scas
mov
xor
cmp
cmp
dec
mov
push
jle
pop
gs
out
out
out
out
out
cmpsl
iret
repz
inc
cmc
daa
jb
je
add
and
cmp
dec
and
lds
push
loope
and
int
add
inc
mov
adc
imul
inc
or
loopne
cmpsb
and
dec
out
xchg
push
daa
gs
jnp
cltd
test
mov
adc
jmp
adc
mov
inc
lcall
pop
in
imul
mov
add
or
leave
inc
xchg
mov
cmp
jb
cmp
mov
jle
sar
lock
cmp
dec
cmp
push
cmp
mov
loop
mov
dec
mov
es
ja
jns
jnp
jge
jg
jle
jle
jle
jle
jle
push
shlb
push
pop
or
daa
les
pusha
clc
inc
add
sbb
xchg
sub
subl
stc
lcall
icebp
loop
out
pop
or
sbb
inc
mov
mov
shl
outsb
mov
aam
fcomp
xor
mov
xor
loop
cmp
loopne
cmp
push
lods
xor
xchg
xchg
daa
aad
xchg
xor
jmp
enter
add
sbb
std
xchg
push
cmp
daa
pop
dec
jno
andb
add
inc
add
push
xchg
adc
je
loopne
aaa
in
mov
fcmovnb
and
test
int
out
jae
jp
aas
or
push
cld
sub
cmp
push
cmp
and
leave
ds
insl
add
mov
mov
inc
nop
pusha
add
or
pushf
adc
sbb
and
clc
pop
hlt
cmp
cld
mov
cmpsl
cld
mov
pop
jle
add
xchg
cld
dec
xchg
adc
cmp
push
ja
sub
jno
xchg
mov
push
lcall
push
sarl
hlt
daa
add
popa
or
shrb
repz
popa
sbb
inc
and
fiadds
pop
mov
cmp
mov
shlb
adc
xchg
ljmp
sub
xor
mov
dec
lahf
lahf
pop
pop
bound
jp
sub
iret
mov
mov
lahf
rcrb
ljmp
es
sbb
xor
adc
mov
push
sub
jne
push
mov
stos
mov
mov
shlb
fcmove
loop
ljmp
adc
in
inc
sbb
in
add
mov
inc
in
or
pop
push
bound
repz
icebp
xchg
pop
inc
aad
stos
leave
mov
mov
sar
pusha
cld
ljmp
add
or
or
mov
pop
hlt
cmp
inc
cld
dec
cld
push
cld
pop
or
cmpsl
addb
xchg
xchg
mov
std
push
jge
ljmp
cmp
in
in
push
cli
test
lcall
dec
mov
bound
nop
mov
hlt
xor
xor
je
jbe
js
mov
stos
push
mov
mov
rcrb
ljmp
cmpb
or
cltd
pushf
jmp
mov
xor
repnz
xor
andb
test
lea
fldenv
and
mov
shl
loop
ljmp
adc
add
sub
pop
cmpb
dec
dec
mov
pop
punpckldq
xchg
adc
add
mov
stos
fnstenv
aad
rorb
das
mov
mov
and
cmp
sbb
leave
and
sub
xor
cmp
mov
mov
sub
lods
repz
pop
and
cmp
and
or
add
std
orb
inc
xor
outsb
test
es
pop
jp
add
daa
adc
es
test
lahf
add
mov
sbb
enter
jb
popf
mov
sbb
xor
aad
mov
enter
sub
fcmovnu
xor
cmp
adc
sbb
and
xor
pop
repz
repz
push
frndint
nop
push
sub
cmp
lret
mov
pop
into
add
daa
loopne
call
jbe
push
xor
or
sbbb
and
fcompl
xchg
inc
popf
dec
sbb
pusha
lahf
push
lahf
sbbb
push
popa
pop
test
mov
mov
not
dec
fcoms
add
pop
clc
in
ret
xor
sbb
ret
sbb
repz
lock
je
sub
mov
add
add
cmp
push
adc
sub
push
cmp
inc
test
pop
inc
sub
mov
in
mov
mov
adc
lret
cmpl
sub
dec
adc
and
mov
pop
push
pushf
xchg
sbb
mov
insb
jmp
jmp
test
sub
adc
les
push
mov
cmp
or
or
adc
mov
and
rorl
leave
shrl
insb
loope
jmp
jl
cmp
stc
mov
in
aas
mov
enter
dec
xor
and
call
mov
daa
sbb
mov
shll
sub
aas
inc
daa
pusha
pop
je
out
out
in
loopne
cmp
pushf
jle
pushf
cmpb
cmp
int3
and
mov
fsub
fsub
loopne
addb
jl
mov
out
jmp
ss
jle
dec
xchg
add
inc
or
sahf
inc
sbb
lds
inc
cld
sbb
xchg
sbb
cmp
mov
xchg
rolb
test
push
jnp
jge
jg
jbe
rcrb
cmp
add
push
mov
inc
lock
hlt
xchg
pop
add
sub
xor
cmp
popf
inc
sbb
push
lahf
push
pop
push
dec
pop
cwtl
leave
pushf
mov
push
push
jle
enter
lock
dec
hlt
in
clc
in
push
in
cmp
or
out
cmpsl
dec
dec
out
ljmp
cli
inc
jno
sbb
cmp
add
mov
mov
jo
sbb
cwtl
and
adc
push
or
push
adc
outsl
xor
in
sarl
stc
fs
insb
push
loopne
jno
insl
cld
int3
add
shl
out
fadds
jg
jg
je
jbe
js
jp
jl
jle
jle
jle
dec
push
inc
push
test
or
rorb
dec
int3
ror
aam
dec
fdivr
loopne
in
pop
call
adc
jg
je
add
nop
mov
jl
je
xchg
test
mov
and
mov
js
cld
cs
xor
pop
or
push
xor
push
lods
ret
dec
pop
int3
cmp
cwtl
cmp
sub
pop
inc
dec
aaa
enter
and
mov
divb
dec
xchg
pop
push
popa
inc
pop
lret
add
repz
cmp
push
sarl
in
in
inc
jle
cmp
jmp
out
add
adc
hlt
add
mov
sahf
jb
into
add
sbb
xor
add
ss
icebp
jb
in
call
aaa
add
mov
sbb
sbb
repz
cmc
lock
cmpl
lds
lock
and
rcl
push
ds
cs
iret
pop
inc
mov
ja
xor
fldl
xor
add
xor
xor
xchg
add
pop
fisubrs
test
arpl
das
ret
mov
testl
xchg
push
imul
insb
jbe
inc
jo
pop
cmp
add
popa
sbb
adc
in
cmp
ds
std
sbb
jb
adcb
add
mov
sbb
adc
ret
pop
push
or
lahf
cmp
cmp
adc
xchg
nop
or
sbb
xchg
arpl
push
xor
push
cltd
and
jo
add
xchg
xchg
or
cltd
rcll
cld
mov
f2xm1
push
cmp
push
imul
and
rorb
add
add
inc
pop
xchg
sub
clc
pop
jnp
add
lcall
cmp
sub
adc
pushf
cmpb
push
pop
add
es
inc
inc
fimull
je
aas
xor
dec
mov
push
nop
fildl
mov
shlb
add
dec
add
jb
mov
and
xor
popf
sub
rorl
xor
cmp
or
js
sarb
sbb
pushf
sub
dec
sbb
or
jecxz
lock
xchg
vmresume
cmp
or
cmp
in
gs
mov
pop
ss
ja
xchg
out
push
sbb
push
dec
add
outsb
rcll
xor
je
loop
out
in
pushf
mov
sbb
add
xchg
add
add
jmp
jl
pusha
mov
dec
lods
add
xchg
mov
leave
sahf
cld
sub
add
pushf
xor
push
add
pop
fcmovb
fs
add
cmpsl
pop
aad
in
das
adc
sarb
xor
add
and
mov
dec
cmc
pop
popa
cwtl
das
leave
inc
and
inc
mov
sbb
xor
adc
scas
dec
add
inc
or
sub
pop
pop
addb
dec
lea
scas
fcoms
dec
cmp
cmp
es
psrad
push
dec
outsb
or
add
and
or
test
cli
xor
jle
add
pushf
mov
pop
or
push
add
dec
aas
mov
popa
add
mov
dec
loope
sahf
adc
add
mov
cmp
movb
daa
jmp
mov
push
cmp
leave
dec
dec
mov
daa
call
test
jb
in
fwait
xor
por
add
push
pop
pop
dec
pop
push
pop
push
push
lea
cmp
and
xor
js
loopne
mov
sbb
pop
jo
mov
pop
and
add
enter
adc
jle
xchg
fcomps
mov
or
pushf
or
pop
and
adc
sub
sub
pushf
cmp
push
out
push
adc
flds
xorb
mov
mov
and
test
shlb
int3
mov
mov
xchg
lock
add
enter
fidivrs
dec
pop
cs
gs
fdivrl
aas
nop
mov
je
andb
xchg
cmp
mov
lods
xchg
or
aam
dec
fsubr
or
dec
cmp
hlt
dec
pop
dec
push
add
xchg
loope
idivb
sub
aas
rorb
push
dec
pop
sarl
jg
mov
xchg
fstps
dec
mov
mov
rcr
call
aas
movb
xor
daa
sbb
es
add
inc
lcall
insb
dec
jbe
clc
lahf
xor
or
inc
aad
push
sti
and
xor
loop
jl
sbb
push
xchg
cld
lret
add
aaa
inc
pop
adc
or
add
mov
jo
cmp
pop
add
and
and
and
pop
addr16
add
loop
jecxz
es
nop
ret
cwtl
jo
push
stos
adc
or
or
shl
adcl
fadds
or
dec
pop
cs
cmp
xor
sbb
jno
cmpsl
adc
cwtl
shl
xchg
cwtl
cmp
add
push
loop
jecxz
xchg
push
pushf
xchg
mov
add
add
mov
rorl
add
inc
mov
xchg
adc
or
sti
leave
add
fs
in
xchg
sbb
mov
adc
mov
mov
clc
in
nop
insl
jl
jle
out
fdivr
sbb
xor
dec
dec
pusha
add
sbb
in
mov
loopne
int3
add
and
sub
xchg
cmpsb
inc
xchg
mov
in
daa
jecxz
lock
pushf
sbb
test
mov
pusha
daa
insl
and
lock
jg
add
repnz
inc
mov
cld
mov
pop
xchg
push
dec
shll
pusha
fcoms
cmp
dec
inc
orl
xchg
scas
leave
mov
add
cmc
nop
add
cmp
adc
sbb
push
cs
add
mov
pop
cmpsl
cwtl
imul
xchg
xchg
mov
inc
mov
dec
movsb
ret
int
aad
fstp
in
in
in
out
pusha
pop
shrb
insb
add
push
ds
and
rcll
xor
in
pop
pop
dec
push
movsb
pop
shlb
inc
jae
test
arpl
rcrl
add
daa
lret
cs
movsb
shl
add
setp
add
das
pop
pop
push
data16
cmp
mov
cmpl
sbb
dec
dec
inc
lock
cld
xchg
or
adc
and
cmp
or
adc
inc
dec
inc
movsl
ss
push
es
mov
loopne
lea
dec
sbb
add
test
mov
in
pusha
call
mov
push
sbb
fisubs
loopne
xor
sub
sarb
xchg
js
rolb
das
mov
stc
call
pop
push
dec
lock
lret
int3
mov
ja
add
das
push
add
pop
loopne
pop
cmpb
mov
into
xchg
xorb
xor
pop
or
adc
enter
lret
pop
int3
sub
aas
dec
xchg
xorb
jl
mov
mov
enter
mov
push
rcl
dec
inc
xchg
inc
sbb
sbb
cmp
add
test
jge
in
add
lock
add
pop
and
push
rolb
cmp
cwtl
fildl
add
xchg
sub
rcrl
pop
neg
pop
aas
or
es
push
jp
cmp
mov
sbb
jecxz
sbbl
in
pushf
mov
rolb
adc
xorb
dec
add
clc
enter
dec
addb
andb
je
mov
in
dec
popa
mov
imul
cld
jge
addl
ret
mov
enter
mov
iret
lret
loope
push
inc
cmp
and
adc
ret
and
and
dec
xor
ret
xchg
cmp
cmp
or
xchg
jne
add
popa
mov
or
cmp
test
loop
add
in
lods
out
add
or
sahf
add
dec
cmpsb
ret
loopne
adc
cmp
movb
imulb
into
add
cli
or
cmp
daa
or
and
in
push
dec
sbb
cmp
ficoml
pushf
add
adc
dec
dec
loopne
add
xor
and
dec
push
pusha
out
and
ret
add
adc
xor
aam
leave
in
enter
push
negb
add
and
dec
mov
mov
test
ss
add
addl
pop
rolb
sub
dec
xchg
sbb
popf
xchg
add
into
add
push
cmp
leave
xor
mov
ret
test
mov
add
dec
pop
fcomps
out
push
dec
incb
inc
add
or
clc
mov
adc
and
out
jnp
aaa
mov
push
repnz
pop
push
mov
or
mov
add
sarb
adc
call
fisubl
and
mov
add
or
inc
dec
pop
mul
and
js
inc
in
xchg
xor
sbb
pusha
lods
jge
call
popa
insb
fs
das
ljmp
jnp
pusha
add
mov
fwait
ret
sbb
xor
add
xchg
dec
mov
popa
loop
sbb
or
dec
ds
add
ret
imul
push
and
xor
sbbb
and
nop
sub
sbb
xchg
cmp
mov
lret
je
pop
jl
test
mov
adc
mov
lods
repz
push
inc
lock
hlt
xchg
jl
test
push
lcall
push
dec
xchg
pop
fiadds
loopne
call
lock
mov
loop
push
and
sub
movsb
je
sub
push
pushf
mov
setne
push
sahf
cld
jge
and
dec
push
add
mov
adcb
jb
ds
sti
or
and
add
movsl
insl
mov
shlb
cwtl
add
lds
clc
and
add
cmp
pop
xchg
jl
sub
mov
leave
aam
adc
push
push
sub
or
cmp
and
add
lock
lock
cmc
in
mov
roll
push
pusha
inc
cld
in
add
sbb
or
and
sub
pop
movsb
cwtl
pop
add
add
push
sarb
fs
inc
pop
pop
sbb
test
popa
pop
sbb
movsb
mov
mov
popa
lods
or
test
xor
cwtl
aam
dec
bound
pushf
ficoms
lods
and
xor
cmp
mov
dec
xchg
dec
mov
push
xchg
xchg
mov
jl
andb
add
rclb
addl
into
and
fcompl
call
lock
enter
dec
fcomps
ret
aam
dec
xchg
push
sbbl
add
jno
repnz
xchg
push
cmp
add
lods
add
pusha
adc
xor
cmp
pop
loopne
dec
lcall
iret
or
push
inc
call
out
inc
xor
iret
arpl
inc
pop
adcb
ret
es
mov
jb
lods
jns
jp
or
rolb
lret
add
shlb
mov
loop
mov
pop
push
mov
or
xor
repnz
hlt
mov
lret
int3
das
je
mov
pop
scas
pop
mov
cli
push
jecxz
or
pop
fcompl
and
add
lret
add
movsl
sub
lahf
loope
push
sbbb
or
dec
pushf
cmp
pusha
add
mov
faddl
cs
push
jo
inc
add
xor
inc
xchg
pusha
xor
dec
cmp
pop
fs
insb
or
je
fcompl
push
xlat
push
dec
mov
dec
int3
mov
push
jae
add
or
pop
cmp
sbbb
mov
xchg
pop
jae
neg
cld
add
cs
or
jle
adc
cmp
in
pop
movsl
ret
adc
lret
sbb
pushf
dec
mov
dec
inc
add
leave
add
mov
rclb
adc
push
xor
adc
add
je
cli
pushf
jae
addl
nop
call
dec
std
nop
clc
cs
add
xchg
add
push
addb
dec
add
xlat
sub
add
mov
dec
mov
jb
add
xchg
loop
xchg
adc
in
push
imul
pop
sub
and
leave
call
adcb
or
pop
add
mov
negb
add
lret
push
hlt
pop
add
xor
lock
xor
mov
lods
mov
add
add
and
mov
pop
mov
outsb
xlat
in
icebp
adcb
or
and
testl
insb
mov
cmpsb
add
or
je
mov
addr16
loope
xchg
clc
mov
jecxz
xchg
inc
xchg
ficompl
or
shl
pop
loope
and
hlt
jno
mov
in
andb
add
call
test
cmpb
cmp
add
pop
add
pop
jnp
jge
jg
add
loop
int3
dec
pop
xchg
test
mov
sbb
sbb
cmp
xor
dec
dec
jbe
je
mov
dec
pop
inc
movb
leave
and
lock
pop
ljmp
adc
and
pop
add
cmpsl
clc
mov
mov
dec
mov
ret
out
xchg
notb
outsb
andl
mov
insb
pop
je
loope
add
cmp
mov
pop
jg
push
push
mov
mov
nop
mov
xor
add
insl
xchg
pop
loop
add
out
dec
xchg
xorb
add
sub
pop
lret
aad
xchg
xchg
jmp
and
insb
dec
add
and
xor
fidivrl
ret
je
es
nop
add
cmp
cwtl
imul
jo
pop
jno
add
test
ret
leave
pop
rol
mov
orb
mov
rolb
loopne
sbb
xor
out
das
cltd
sbb
lds
nop
pop
ficomps
in
sbbb
xor
jb
push
mov
enter
push
pop
leave
mov
jp
and
fldl
push
jb
pop
je
aas
hlt
jle
lret
pop
dec
in
cmp
sahf
pusha
push
es
ret
imul
xchg
mov
and
xor
fs
jae
mov
cli
or
jno
sub
adc
test
and
xchg
nop
push
add
leave
cmpsb
cmp
or
addb
and
in
in
add
xor
push
add
and
jle
add
add
xchg
add
and
clc
mov
mov
fisttps
mov
pop
cmp
dec
cwtl
cltd
rcrb
orb
icebp
lock
or
jne
nop
xchg
add
inc
leave
outsl
sub
das
mov
jecxz,pt
add
or
dec
push
rolb
aam
jge
jno
xor
mov
and
dec
and
rcrb
sbb
adc
shll
cmp
cltd
add
pop
cmp
cmp
fmul
lock
add
ss
mov
push
sbbl
mov
dec
sbb
xchg
lds
aam
jg
and
in
popf
popa
jle
xchg
leave
fwait
xorb
add
push
add
cmp
mov
add
xchg
iret
mov
xlat
in
add
test
jb
adc
mov
leavew
insl
sub
cwtl
andb
add
xor
xchg
stos
xchg
mov
add
push
cmp
cmpsb
aas
or
scas
clc
sarl
cwtl
pusha
jle
jle
add
dec
lret
pop
rol
or
ficoml
out
cli
sub
sbb
pushf
jb
icebp
repnz
jbe
add
adc
mov
and
paddsb
and
daa
mov
in
shl
jle
lcall
dec
jnp
mov
add
leave
out
enter
xor
data16
or
mov
loopne
shr
push
xchg
aam
sbb
sub
sarl
or
dec
add
add
mov
adc
jb
pop
daa
push
add
mov
pop
and
fildl
mov
enter
dec
int
sub
dec
inc
roll
iret
or
push
call
repz
test
xor
push
in
add
sub
adc
sbb
mov
leave
bound
addb
add
dec
cmp
repnz
or
insb
pusha
add
push
cmp
fwait
add
imul
sub
fnstcw
sbb
pushf
mov
aas
mov
clc
jb
enter
sbb
pop
and
mov
or
push
sahf
mov
xchg
out
xchg
add
adc
and
sub
add
inc
sbb
pushf
cmp
pusha
pop
jae
jg
mov
mov
add
inc
inc
jnp
add
js
cwtl
pop
ficoms
in
pop
cmp
jbe
dec
or
inc
mov
loopne
cmpsl
sarb
add
mov
mov
cmp
rolb
fsubr
add
pop
adc
clc
sbb
mov
lock
sahf
push
add
enter
test
pushf
add
adc
in
sbb
or
add
lds
daa
push
popa
add
pop
cmp
das
add
insb
leave
jo
and
test
lret
in
inc
add
add
cld
clc
push
jge
add
jl
movsl
into
rclb
add
adc
mov
inc
aam
push
mov
faddl
pop
inc
pop
leave
add
popa
or
nop
cmp
sbb
pusha
insl
sub
adc
mov
push
sbb
add
mov
mov
psllq
mov
in
sub
sub
xor
rcrb
fidivl
mov
jl
stc
jle
cmp
and
sub
xor
test
pop
mov
mov
xchg
nop
add
lcall
jns
fs
loopne
add
mov
daa
in
add
dec
xor
aas
fs
jb
pop
add
in
bound
stos
ret
movsb
ret
dec
mov
cli
aas
cwtl
xor
aam
cwtl
xchg
xchg
test
and
pop
sar
jbe
add
scas
add
cmp
inc
xchg
dec
jae
imul
xor
loope
pop
sub
add
cmpsb
mov
pop
push
mov
mov
and
cmp
loopne,pt
mov
xor
pop
add
imul
stos
out
ss
and
scas
and
aaa
cmp
daa
inc
add
pop
repnz
add
aam
inc
icebp
lods
or
andb
shl
add
movsl
loop
push
mov
inc
mov
adc
pop
xchg
jae
mov
outsw
inc
cmpl
xor
sarb
cmp
inc
in
aas
pop
inc
test
push
lock
sbb
xchg
hlt
mov
test
enter
ret
stc
andl
add
mov
mov
add
inc
sahf
int3
jg
rolb
aam
shlb
and
cld
lret
sbbb
pushf
or
adc
call
cmp
adc
rol
incl
cmp
cld
cmp
lret
push
push
add
and
mov
aam
add
ljmp
inc
shrl
push
pop
xchg
test
repnz
pop
shlb
or
dec
adc
jo
ss
add
ret
push
js
lds
cmp
adc
add
mov
mov
dec
cmp
inc
xchg
pop
orb
lret
movsb
xchg
les
add
adc
int3
int
add
loopne
adc
add
or
sub
mov
les
lods
pop
cwtl
clc
add
xor
xchg
daa
push
pop
pop
mov
inc
add
jg
xchg
cli
mov
leave
fildl
add
xchg
mov
push
insb
das
push
cmp
pop
jmp
shl
enter
and
or
popa
es
insb
add
gs
jae
inc
lea
mov
add
push
fsubrp
inc
sub
shrb
repnz
jp
xchg
xchg
loop
inc
mov
pop
dec
jne
add
sbb
xchg
xchg
mov
mov
xchg
pop
rol
and
mov
xchg
and
addr16
out
dec
and
arpl
jb
xchg
adc
add
ffree
int
mulb
dec
and
dec
xchg
bound
imul
loop
or
loopne
fdivs
inc
add
and
out
and
and
sbb
ss
inc
push
mov
ja
jl
pop
xchg
loope
or
mov
rcrl
jo
push
pop
in
mov
dec
fdivrl
add
jle
xchg
xchg
clc
ret
test
cmp
mov
dec
pop
aas
ret
inc
pop
push
stos
daa
insl
loope
lret
or
mov
xorl
adc
add
pop
loope
cmp
fiaddl
push
dec
pop
dec
addr16
pop
cmp
cli
pop
mov
hlt
pop
xlat
jl
sbb
rolb
inc
sbb
xor
rorb
faddl
ficomps
xchg
jnp
xor
jo
iret
js
push
add
outsl
dec
add
jmp
xor
punpckhdq
push
jl
addr16
xchg
add
dec
int
inc
loope
out
in
add
loopne
push
sahf
mov
xchg
sub
repz
addb
add
rorb
loope
call
add
cwtl
pop
xchg
add
xchg
lock
je
aaa
and
add
mov
add
xor
imul
dec
or
clc
and
ret
inc
push
popf
popa
mov
js
sub
cmpsb
xorb
pop
add
imul
test
scas
in
mov
push
xlat
ret
add
xchg
stc
nop
push
xor
aaa
jle
bound
xchg
leave
mov
xchg
stos
js
dec
push
fsts
test
mov
xchg
add
inc
ret
jne
mov
and
add
fadds
pop
push
or
dec
or
outsb
rcrb
pop
sub
daa
pop
and
cmp
popf
test
ja
mov
xchg
xchg
add
leave
es
or
adc
pop
mov
or
enter
fnsave
popa
ljmp
test
dec
add
fsubrs
into
xchg
xchg
add
ret
das
mov
sarb
jnp
add
sub
aaa
dec
add
push
xchg
pop
add
dec
lcall
add
dec
mov
std
in
add
cmp
add
ret
cmp
xchg
xchg
add
push
enter
inc
das
call
pop
addr16
push
mov
xor
jp
lods
push
cmp
nop
dec
adc
in
cmp
and
lahf
add
cwtl
jl
es
mov
js
xchg
sub
cmp
fdivrs
dec
mov
lds
add
ds
test
add
jle
negb
mov
popf
adc
mov
pop
mov
daa
out
in
xor
popa
push
or
sub
clc
xlat
daa
mov
int3
inc
lds
sub
xchg
dec
add
adc
loopne
jl
inc
mov
sbb
das
add
std
movsb
adc
jo
add
xor
push
and
xor
cmpb
fwait
mov
and
repnz
adc
add
pop
inc
xchg
add
adc
ds
pushf
adcb
fs
lods
stos
cmp
and
add
and
xchg
and
in
jb
pop
dec
subb
in
pop
add
int3
roll
ss
inc
push
orb
add
adc
sbb
lock
dec
ret
cmpb
movsb
cli
repz
jmp
fmull
rcll
test
jle
mov
lret
in
test
jp
out
loopne
add
sub
imull
pop
idivb
pop
add
add
enter
add
fcomp
loope
out
cld
and
enter
out
add
push
xchg
push
push
ja
push
movsb
jb
inc
cltd
dec
cmpsb
addb
std
jmp
add
dec
cld
dec
add
pop
xchg
cli
inc
loopne
push
xchg
pop
test
mov
dec
mov
jb
pop
in
mov
push
xchg
sbb
out
das
pop
ret
fistl
pop
add
xchg
jnp
add
jl
and
cmp
xchg
pop
inc
add
mov
insb
imul
lock
test
rol
adc
mov
dec
xor
pop
mov
clc
mov
add
mov
dec
add
ret
dec
jl
cwtl
cmp
add
js
das
pop
pop
addb
and
clc
mov
sub
xchg
mov
cmp
or
shl
pop
add
push
lock
dec
and
cmpsb
popl
leave
xchg
xor
out
mov
andb
push
test
push
scas
and
loopne
outsb
or
add
mov
add
fs
or
loopne
or
jne
add
cmp
xchg
mov
adc
into
dec
fildl
insl
inc
orb
mov
mov
mov
insl
mov
test
popa
test
mov
lcall
mov
push
cmp
ss
pop
inc
mov
xchg
sbbb
negb
ja
pop
lds
add
loop
out
add
add
sbb
cmp
hlt
cmp
arpl
xchg
ja
loopne
mov
and
rcll
xor
in
adc
das
xchg
sar
cld
jb
xchg
sub
or
mov
add
push
sbb
imul
dec
add
jne
loop
mov
xchg
sahf
insb
adc
je
sbb
pushf
out
xchg
pop
mov
test
out
or
popa
xchg
push
xchg
cmp
mov
push
push
xor
add
lock
pushf
inc
and
jno
hlt
xchg
add
mov
xchg
mov
dec
xor
add
or
cmp
or
xchg
pop
push
pop
or
enter
sahf
mov
dec
loop
jmp
imul
pop
lock
pushf
inc
mov
mov
nop
cltd
pop
xor
mov
xchg
sbbb
inc
jo
jbe
dec
or
ret
inc
pop
jb
pop
push
mov
cmp
cltd
jns
add
sub
push
dec
jecxz
xchg
add
sub
add
dec
push
test
add
mov
push
mov
push
into
sbb
cmovns
push
loopne
dec
xchg
dec
push
or
jno
sbb
xchg
xchg
movsb
inc
clc
add
lahf
loope
out
je
sub
test
add
dec
and
push
lret
dec
test
mov
les
nop
pushf
lahf
xchg
add
dec
jmp
push
xchg
add
and
sbb
push
cld
push
dec
inc
lock
push
or
enter
andb
dec
rorl
in
sub
adc
imul
inc
inc
dec
and
call
lock
dec
mov
das
pop
lahf
test
mov
ljmp
mov
pusha
stos
pop
add
int3
dec
loope
pop
leave
imul
mov
lods
and
pop
fistl
jb
and
pop
push
push
push
cwtl
xchg
cs
ret
or
mov
push
push
mov
lret
add
dec
fiadds
add
push
xor
pop
xchg
outsl
cmpl
cwtl
je
jle
subb
xor
daa
inc
jo
dec
arpl
add
movsb
jle
clc
rolb
cs
mov
in
lods
add
pop
cmp
fdivrl
out
cld
push
leave
add
push
mov
add
or
in
idivl
push
testb
dec
sbb
mov
add
insb
subb
call
jmp
cmc
inc
loopne
pusha
cmp
add
daa
inc
and
add
cmpsl
xchg
mov
out
int
pop
loop
push
mov
aam
or
or
sbb
xchg
sub
imul
cwtl
das
mov
and
pop
mov
mov
add
jns
pop
sbb
rcrl
xchg
mov
fdivrs
add
and
xchg
ja
cmp
pop
mov
dec
mov
loope
jbe
pop
or
xchg
mov
pusha
shrl
sub
cmp
dec
sub
daa
aaa
add
inc
loopne
pusha
shll
xor
clc
mov
cltd
add
sbb
xchg
add
test
add
out
inc
adc
jo
in
push
pop
dec
dec
pop
mov
arpl
push
andnps
xchg
scas
lods
mov
sbb
cmp
xchg
test
fucomi
and
jns
jns
ja
ja
cmp
push
sbb
subb
xchg
push
test
adc
push
or
in
dec
out
pop
sbb
test
pop
cmp
and
leave
push
leave
popa
shrb
add
sahf
call
jle
lock
mov
pop
add
and
ss
pop
xchg
imul
lock
movsl
mov
mov
add
adcb
add
sbb
xchg
dec
lods
push
test
jle
in
mov
dec
add
fadds
jp
popf
popa
testb
leave
cmp
push
xchg
dec
push
ja
cmp
mov
dec
lret
push
push
jo
icebp
add
push
das
adc
push
inc
dec
xchg
rcll
dec
add
pop
inc
or
ret
jp
xchg
clc
mov
add
sbb
das
daa
adc
rolb
outsb
fldl
add
lcall
pop
repz
xchg
add
or
xor
push
dec
push
jns
pop
add
mov
fcompl
push
and
jbe
pop
sub
jae
loopne
fdivr
xchg
add
mov
divb
sub
addl
orl
push
outsb
add
fistl
add
mov
aad
cmp
mov
add
cmpsb
loopne
lret
lcall
add
int3
or
add
bound
scas
sbb
test
mov
fwait
call
dec
in
mov
xchg
in
xlat
add
call
in
dec
arpl
scas
and
js
cli
shlb
mov
pop
adc
and
add
mov
je
popa
js
cmp
in
and
add
flds
aaa
jnp
add
lret
and
add
pop
pusha
adc
pop
push
in
mov
rorb
push
cmp
xorb
cld
adc
in
add
mov
or
push
add
mov
stos
cmpsb
inc
es
mov
pop
xchg
sbb
sub
xchg
xchg
das
add
outsl
loope
aas
mov
add
xchg
mov
lret
rorl
out
repz
mov
jb
pop
daa
loopne
inc
in
push
mov
jp
add
pop
cwtl
pop
test
add
popa
test
leave
aas
push
add
lods
inc
in
push
test
ja
xchg
xchg
mov
lods
add
cmp
das
push
pop
mov
fcompl
negl
outsb
clc
jnp
popa
sbb
leave
scas
addl
xchg
ficoms
dec
in
in
lcall
dec
pop
loop
pop
bound
inc
rclb
xchg
mov
int
or
cld
dec
pop
daa
ficompl
and
jo
fs
call
add
sbb
push
push
push
loope
loope
jl
add
push
clc
adc
mov
mov
xchg
pop
lahf
lock
mov
mov
jne
ds
das
rcl
dec
loop
mov
mov
mov
sbb
mov
cli
cwtl
cmpsb
nop
addl
and
mov
dec
or
daa
jle
jmp
adc
or
push
je
testb
test
loop
dec
outsl
add
push
mov
inc
repnz
adc
testb
dec
out
xchg
mov
aaa
adc
cs
sub
leave
dec
jnp
dec
imul
ret
adc
add
xchg
and
cmp
jp
add
in
lock
adc
cwtl
xchg
add
mov
test
shl
fmuls
dec
xchg
out
or
leave
ljmp
push
sbb
cs
mov
out
fcompl
mov
addb
pop
mov
add
sub
incl
and
inc
test
mov
xlat
mov
or
adc
sub
cmp
mov
fimuls
fs
cmpsl
add
and
xor
mov
mov
in
mov
popf
hlt
pop
hlt
dec
xchg
into
add
fdivs
add
and
adc
in
xchg
add
dec
fsubl
subb
add
bswap
push
or
in
add
xchg
sbb
mov
push
out
add
pushf
push
nop
sbb
into
dec
insb
repnz
fwait
std
mov
in
xor
sbb
test
sbb
xchg
inc
add
add
mov
daa
cmp
dec
sbb
popa
cmovo
imul
inc
loopne
pop
add
mov
aam
pop
mov
mov
int3
jne
cmp
add
inc
add
addr16
add
pop
stos
mov
shlb
lods
orb
clc
mov
pmulhw
repz
pop
jbe
jl
dec
push
mov
and
in
into
aam
xchg
out
and
or
test
or
xchg
add
xchg
data16
xchg
int3
je
stos
js
jne
xor
addb
ror
sub
mov
cmp
stos
mov
push
or
in
mov
pop
in
xchg
push
ss
jb
dec
cld
or
adc
daa
fucomi
ljmp
push
jbe
add
cmp
adc
rclb
in
add
sbb
nop
push
cmpsl
cmp
add
and
int3
add
xor
mov
sbb
or
clc
adc
and
adc
test
dec
loopne
dec
filds
enter
rcl
xor
pop
push
cmp
stos
sub
and
add
push
leave
jb
push
ficomps
add
sub
add
das
flds
add
or
je
sbb
mov
mov
add
and
inc
or
xchg
ljmp
mov
popl
inc
js
cmp
and
and
sbb
add
int3
add
pop
in
xchg
pop
push
sbb
insl
and
sub
inc
add
cmp
push
lods
fsubl
in
leave
or
sti
add
ds
lds
rolb
mov
test
lret
sarl
jo
and
jb
add
sahf
push
inc
xchg
dec
out
into
dec
pusha
ret
mov
cmp
add
jg
fidivrs
sbb
cli
jne
add
insl
cmp
dec
in
enter
add
rol
aad
add
pop
inc
or
leave
dec
aas
and
dec
push
into
roll
jp
xchg
repz
cld
inc
leave
cmp
push
adc
jb
movsl
push
lock
lods
add
lock
adc
rclb
in
add
scas
mov
sbb
lret
xchg
rolb
pop
les
pop
mov
xchg
mov
dec
leave
xorl
test
popa
js
add
pop
mov
mov
and
call
add
je
adc
add
dec
xor
jnp
xchg
enter
jecxz
adc
orb
pop
cmp
or
int3
push
mov
pop
fsubp
in
push
hlt
enter
cmp
xchg
and
or
shlb
inc
sbb
cmp
lahf
dec
scas
fs
jmp
or
and
ret
push
adc
adc
or
xor
jp
enter
pop
add
je
push
push
pop
test
test
add
fimuls
fists
sbb
push
xor
lea
in
xchg
mov
or
lds
popf
add
lret
add
xlat
pop
loop
and
call
inc
push
inc
sub
xchg
iret
jo
pop
pop
hlt
bound
loop
fnstcw
testb
pop
mov
xor
push
mov
inc
adc
add
mov
add
pop
rorb
dec
fwait
lds
fisttps
out
adc
js
jb
sar
sbb
pop
cmp
add
and
cmp
or
add
pop
sub
repnz
js
pop
andb
pop
or
dec
test
adc
rcrb
dec
arpl
jb
xchg
outsl
mov
cmp
jg
orl
loopne
nop
push
add
push
fwait
and
add
xchg
scas
test
xlat
mov
mov
mov
add
cmp
mov
and
filds
pop
jmp
push
repz
lret
cmp
pop
popa
dec
cmp
cmp
daa
sub
fsubr
pop
pop
mov
xchg
das
sbb
dec
pusha
call
cld
inc
mov
push
add
jb
pop
pop
orb
pop
mov
and
loopne
pusha
jnp
inc
mov
leave
xchg
sub
push
neg
xchg
lahf
xchg
jns
push
or
add
add
lret
add
rcll
fistpll
out
out
jmp
div
cld
imul
sti
pop
xchg
call
pop
pop
sub
into
sbb
scas
and
daa
xchg
sub
int3
sbb
add
pop
inc
sub
sub
cmp
sbbb
push
sbb
xchg
add
fisubrl
loop
ja
jnp
loope
xor
xchg
stc
and
jg
adc
mov
dec
scas
pop
adc
mov
in
add
push
cld
dec
xlat
les
jbe
add
xchg
out
pop
test
daa
jb
je
pop
sti
and
stos
push
iret
dec
or
cmovns
js
inc
add
pop
pop
sub
leave
pop
xor
cmp
mov
sbb
adc
add
pop
loope
xor
push
lods
pushf
das
add
cmp
add
mov
xchg
add
jle
xor
inc
xor
jl
cmp
daa
sbb
pop
xchg
loop
mov
pop
les
cs
and
clc
pushf
sarb
add
xchg
leave
or
pop
testb
and
rcr
cld
sub
add
sbb
xchg
jmp
or
rolb
add
xor
cld
mov
add
and
sub
in
and
inc
repnz
or
add
adc
xchg
sub
mov
daa
in
loope
pop
push
and
mov
or
inc
cld
mov
add
jl
push
mov
incb
jp
lods
orl
add
jnp
mov
mov
xor
and
insb
xor
add
cld
jo
mov
jb
dec
mov
mov
mov
or
sub
in
in
or
jp
fs
add
ljmp
adc
add
in
and
mov
add
test
add
add
ret
cmp
jecxz,pt
xchg
cwtl
add
es
dec
loopne
inc
and
and
jo
push
sbb
aam
shlb
pop
mov
and
push
lock
add
pop
mov
inc
fst
loope
xor
pop
cmp
xor
mov
fdivrl
sbb
pushf
scas
ds
mov
adc
out
out
das
push
fmuls
fisttpl
mov
push
add
xchg
test
adc
enter
daa
setbe
push
out
aas
xor
jle
jns
add
popf
add
add
movsb
push
xchg
push
mov
add
pop
enter
rcrl
jge
jmp
sub
sub
pop
sub
rclb
add
xchg
jl
fistpll
in
jg
add
adc
xor
aas
push
or
pop
jo
xchg
jl
cltd
ret
cmp
aam
pushf
inc
xchg
shrb
jge
pop
mov
mov
repnz
dec
cmp
cld
pop
add
daa
jnp
sbb
adc
lods
decb
push
cmp
leave
or
test
scas
and
out
pminsw
cmpb
movsb
ret
jo
pop
loop
fadds
xchg
or
mov
dec
pop
into
add
mov
xchg
adc
mov
push
add
int3
mov
jg
jb
rorb
sub
call
push
inc
sub
xchg
cld
cmp
add
xchg
adcb
mov
push
add
and
cmp
jg
pop
fs
sbb
jns
je
sub
int
out
les
jne
mov
xor
fmul
or
pop
mov
mov
add
divb
jno
mov
sub
and
add
es
xorb
add
dec
pusha
das
or
iret
pop
jb,pn
dec
mov
add
mov
dec
sub
mov
add
enter
std
je
mov
push
push
rcr
inc
xchg
incl
lods
or
sub
orl
test
push
inc
add
cmp
push
adc
bound
mov
sub
mov
jb
pop
add
mov
sbb
int3
cmp
aaa
leave
xor
add
push
pop
add
jp
ljmp
das
add
mov
cwtl
pop
test
aam
and
inc
xor
and
pop
push
xlat
add
mov
add
lea
sub
mov
jno
ss
es
add
adc
cmp
rcll
dec
pop
xor
add
leave
mov
pusha
rorl
cmp
add
cld
ret
add
into
mov
jb
dec
arpl
jne,pt
add
les
pop
movb
pusha
and
fs
push
xor
hlt
or
push
mov
adc
add
ret
pop
xchg
sub
leave
es
mov
cmc
loopne,pt
fmuls
push
add
xor
add
dec
push
inc
push
loope
mov
shrb
cmp
and
dec
add
data16
xchg
popa
clc
or
cmp
aas
add
mov
in
mov
push
orb
dec
pop
pusha
jae
xchg
jo
pop
jl
inc
pop
push
rcrb
dec
idiv
jg
jnp
sbb
rcrl
adcb
add
inc
nop
loop
sub
cmp
inc
sti
daa
or
cltd
out
cmp
rcl
jl
ss
mov
subl
repz
pop
andl
add
insb
loop
lret
inc
arpl
xchg
xor
add
addb
test
xor
mov
mov
adc
lret
in
sti
add
rolb
cmpsl
icebp
fsub
xor
daa
jae
cli
mov
mov
fs
add
sub
inc
add
cmp
mov
add
jl
add
cmpsl
cmp
ds
mov
add
mov
xchg
or
andb
or
leave
mov
fdivrs
aas
or
loopne
and
lcall
add
aaa
ds
mov
nop
inc
add
adc
pusha
mov
daa
cmp
xchg
mov
xchg
adc
mov
ds
inc
test
orl
mov
jae
mov
xor
and
lcall
xor
add
cmp
push
mov
popa
hlt
stc
cmp
sub
daa
shrb
xorl
rolb
sbb
lock
dec
add
pushf
mov
add
xchg
ljmp
daa
xor
pop
shlb
pusha
lods
ss
push
adc
and
dec
add
adcb
fmull
adc
in
pop
mov
dec
add
dec
push
and
inc
aas
orl
outsb
mov
add
pop
cltd
enter
add
adc
adcb
fcompl
sbb
xchg
add
adc
out
ds
pop
push
pop
test
daa
outsb
add
das
lahf
inc
clc
enter
in
adc
xchg
sub
cmp
mov
inc
add
sub
jo
xchg
push
add
adcb
mov
shrl
fsubrl
pop
cmp
aam
xchg
inc
hlt
jb
out
add
inc
mov
cli
or
nop
outsb
jb
nop
imul
ret
lcall
inc
sti
es
jle
jbe
and
pop
clc
ret
dec
add
jl
inc
inc
jmp
sahf
add
push
jmp
push
or
int3
mov
test
mov
xchg
push
loop
adc
push
jno,pn
rcrb
adc
les
pop
sbbb
jle
cmpsb
jnp
in
and
out
fldl
jbe
shlb
loop
repnz
cli
inc
add
xor
xchg
adc
pop
daa
add
xchg
test
pop
mov
lock
push
add
sbbb
bound
or
pop
mov
rorl
cwtl
lock
mov
arpl
cmpsb
inc
sti
xor
xchg
xorb
dec
pop
pop
xchg
add
arpl
inc
imul
ja
movsb
jg
xchg
lcall
fs
call
jae
inc
or
and
dec
repnz
daa
mov
jb
enter
call
inc
loopne
sbb
add
nop
push
aaa
add
in
mov
js
mov
add
nop
fcompl
sbb
xor
sub
jne
add
movsl
pop
sbb
or
dec
pusha
dec
jns
mov
xlat
inc
add
ds
fs
or
add
dec
loopne
ljmp
pop
sub
sub
cmp
pop
jbe
jns
or
mov
rol
jl
in
in
add
xor
pop
xor
jb
lods
push
xchg
pop
xchg
dec
add
ret
js
dec
out
cmpb
addb
add
ss
xor
cmp
add
cmp
xchg
jae
cmp
je
xchg
add
cltd
sahf
adcb
mov
add
add
enter
and
push
daa
pop
in
call
lret
mov
push
daa
sbbl
adc
and
dec
rorl
xor
popa
lret
cmp
pop
and
add
hlt
cmc
aam
xchg
int3
and
mov
sbbb
push
imul
push
shl
dec
xchg
nop
cs
mov
fsub
push
add
push
incb
or
dec
add
sub
sbb
xchg
outsb
rolb
and
in
and
enter
push
dec
mov
and
lods
cld
push
inc
ret
mov
inc
mov
jb
mov
movsl
in
add
mov
leave
jne
mov
or
pop
incl
pop
sbb
call
pop
jb
cltd
leavew
hlt
aas
dec
cmp
popl
mov
pushf
scas
xchg
mov
sbbl
rorb
in
enter
and
xchg
or
add
daa
pop
pop
js
xor
ds
pop
pushf
mov
je
lods
pop
cmp
add
js
inc
sbbl
push
push
sub
loopne
psllq
out
add
in
pop
dec
fs
addb
in
pop
mov
loopne
jo
add
adc
out
dec
sbb
mov
cmp
inc
lahf
xchg
pop
add
cli
mov
mov
test
rclb
pop
xchg
ret
or
ds
jo
fadds
mov
lret
add
int3
adc
xor
and
in
insb
incl
dec
cmc
sub
sub
adc
dec
jnp
fmuls
nop
or
or
das
loopne
or
fadds
jb
xchg
in
dec
push
mov
pusha
lahf
mov
subb
pop
mov
push
pop
and
add
fsubrs
or
ret
js
push
fdivrp
inc
mov
add
push
pusha
inc
xchg
add
dec
je
dec
aam
or
mov
mov
xor
mov
adc
imul
fidivrs
cltd
add
repz
sti
add
add
daa
cmpsb
xchg
cld
lods
ret
es
ficoms
imul
xchg
add
mov
negb
adc
mov
rorl
cmp
or
cmp
add
movsb
lea
dec
faddl
ja
jp
aam
das
push
out
jl
and
push
sbb
inc
stos
test
daa
into
add
add
ss
lock
push
iret
loopne
mov
lods
clc
outsb
add
mov
outsw
add
adc
xchg
or
sub
add
adc
icebp
rolb
or
enter
add
in
adc
jle
add
inc
lods
dec
sub
pushf
and
mov
mov
int3
sarb
jl
call
rcrb
aam
enter
mov
mov
or
lahf
pop
push
mov
ret
mov
inc
add
add
xchg
inc
clc
test
add
pop
loopne
ss
mov
bound
inc
lea
jo
push
dec
xlat
ret
jle
add
or
idivb
jno
add
and
adc
dec
rcl
mov
dec
clc
ret
add
pop
sarb
loop
test
and
xor
arpl
xchg
xchg
bound
mov
jge
push
orb
and
mov
cmpl
mov
aas
mov
mov
int3
pop
xor
test
or
dec
sub
cmp
xlat
mov
pop
pushf
pop
mov
in
lret
fs
xchg
arpl
push
adc
cli
and
fwait
push
xchg
movl
mov
jp
into
mov
mov
pop
xchg
js
daa
movsl
xchg
xchg
enter
pop
jle
lock
add
in
xchg
test
mov
cmp
ret
lock
mov
lods
push
pop
mov
lock
mov
cmp
mov
or
xchg
clc
cld
jno
rcll
add
sahf
das
mov
cs
push
add
and
inc
das
movb
cmp
sub
lock
ljmp
test
push
add
add
jg
and
dec
push
enter
icebp
shlb
inc
add
adc
sbbb
or
dec
leave
pop
sub
and
dec
pop
xor
add
aas
inc
xchg
je
pushf
jbe
push
pusha
mov
add
leave
lock
loop
add
sub
dec
clc
mov
push
pop
adc
pusha
sub
xor
cmp
jns
cld
xchg
cmp
inc
mov
mov
dec
dec
or
jle
sbbb
mov
mov
jg
sbb
push
in
in
nop
icebp
and
push
dec
xchg
test
loopne
push
mov
adc
roll
add
notb
mov
sbb
out
or
lods
pushf
add
sub
repnz
dec
cltd
sub
fadd
add
es
dec
add
cwtl
leave
rcr
sub
rolb
aam
adc
adc
add
and
or
mov
add
cmp
cmp
fs
push
xchg
add
nop
incl
and
xchg
daa
popf
lock
cld
mov
flds
mov
mov
sub
daa
dec
xchg
dec
mov
mov
inc
rcr
cwtl
je
add
xchg
add
stos
ret
sbbb
xchg
imul
lods
mov
bound
xor
xor
lcall
mov
cmp
cwtl
push
push
dec
fcomi
call
loope
ss
add
test
and
pop
repnz
adc
orb
jb
xor
add
mov
insb
dec
jl
and
pop
jecxz
add
rclb
hlt
and
cmc
mov
imul
pop
add
fists
xchg
cmp
lock
into
rolb
mov
pusha
in
cmp
das
fs
and
jg
fsubs
add
push
dec
add
cmp
cmp
add
in
scas
add
in
mov
xchg
sbb
dec
daa
fwait
inc
sub
lret
pop
fs
inc
jmp
mov
rcrl
xchg
popa
lock
in
add
xor
and
or
test
sahf
mov
and
movsb
mov
xchg
rcrl
setns
dec
push
outsb
rolb
sbb
cwtl
lret
cmp
and
imul
sbb
xchg
pop
cmp
and
mov
lods
xchg
inc
push
pusha
imull
adc
loopne
out
add
mov
jnp
aam
cld
add
and
stos
lret
add
inc
test
movsb
ljmp
add
cs
push
clc
inc
jo
pop
orb
hlt
pop
xchg
and
pop
inc
add
daa
mov
scas
dec
mov
in
mov
inc
adc
add
movsb
xor
jne
xchg
inc
add
das
push
mov
adc
xchg
test
add
push
insb
pop
jb
mov
loop
call
add
push
jb
dec
jae
sbb
jo
mov
in
ds
idivb
sbb
dec
imul
cwtl
dec
bound
sub
leave
sbb
mov
addb
ss
sub
lock
bound
mov
add
pop
and
add
aas
add
faddl
dec
insb
loopne
testb
sbbb
std
push
gs
call
sub
jle
add
enter
xchg
sar
and
lods
loop
push
push
loopne
sbb
out
cwtl
add
dec
test
add
mov
push
or
call
xchg
test
jecxz
xchg
add
rclb
cld
jb
xor
dec
and
add
xchg
cmc
je
repnz
cmp
lcall
dec
nop
or
enter
add
pop
hlt
mov
pusha
jo
pop
movsl
dec
dec
clc
mov
sti
pusha
jo
add
mov
loop
cld
add
cmp
mov
xchg
adc
jmp
push
xor
jl
sbb
xchg
push
ljmp
pop
iret
loopne
add
mov
sub
scas
cmp
add
cmp
pop
cmp
data16
sbb
test
rorb
mov
adc
sub
cmp
mov
into
imul
pop
shl
add
fs
xchg
imul
xchg
add
pop
test
sub
pop
mov
je
roll
fiadds
in
jb
add
jp
into
add
cmp
rolb
xchg
mov
push
dec
push
pop
jmp
ret
sbb
movsl
xchg
cmp
pop
mov
icebp
inc
lods
sub
cmp
dec
iret
call
das
add
repnz
mov
cmp
icebp
add
push
into
adc
lock
push
add
and
and
sub
or
mov
adc
add
cmp
mov
cmp
jle
add
dec
dec
pop
andb
or
add
arpl
fmuls
add
sbb
jne
cmp
push
test
adc
out
sbb
inc
cwtl
rolb
xlat
adc
xchg
cmp
mov
test
add
mov
fcompl
add
ret
xchg
movsb
addl
jecxz
jmp
or
and
xchg
clc
pop
pusha
mov
and
pop
gs
dec
push
sbbb
add
jp
cmp
xor
mov
and
lods
out
mov
sub
jo
test
cwtl
stos
jnp
and
enter
dec
xor
data16
ret
add
in
xchg
jo
fcoml
les
inc
orb
xchg
mov
dec
add
mov
ds
pusha
cmpsb
gs
add
je
hlt
out
add
jne
and
es
dec
mov
push
push
add
pop
js
addr16
outsb
xchg
jb
add
jp
jle
inc
xchg
mov
lock
hlt
lcall
inc
stos
mov
jmp
repnz
ret
xchg
lret
shl
jo
fidivl
add
loop
adc
imul
cmp
scas
or
mov
push
in
push
pop
and
jo
in
add
or
jle
add
push
insb
orb
cmp
in
add
movsb
adc
mov
pop
rolb
add
clc
das
push
inc
shlb
push
adc
jle
adc
pop
mov
cmp
add
faddl
dec
orb
add
adc
and
and
mov
push
mov
mov
add
stos
dec
out
or
inc
pop
pusha
punpcklbw
out
or
jle
pusha
cmp
mov
mov
aam
cmp
mov
sub
sarb
mov
or
pop
adc
dec
pop
call
pop
xchg
mov
shll
push
add
sub
js
fimuls
xchg
add
cmpsl
daa
stos
enter
into
mov
sub
cmp
jne
push
dec
subl
add
mov
push
push
sub
add
popa
data16
andl
lds
sbb
aaa
add
pop
jg
sub
je
ljmp
rolb
rorb
sbb
xchg
inc
add
pop
lock
mov
lret
add
adc
call
push
xchg
cwtl
jbe
shlb
mov
sbb
shlb
jo
xchg
pusha
or
add
repz
cwtl
fcomps
imull
fcomi
jo
add
fisubrl
mov
pop
inc
dec
outsl
lret
stos
and
mov
push
enter
xchg
push
push
imul
xor
pop
in
cltd
xchg
pop
inc
cmp
push
mov
or
mov
sbb
cwtl
add
add
jnp
test
pop
adc
shlb
iret
add
cs
les
or
lcall
pop
jo
jb
dec
mov
inc
or
cmp
xor
dec
inc
adc
add
out
dec
cwtl
cmp
nop
cmp
xor
push
inc
pop
cli
adc
popa
add
shrb
add
jo
xor
xchg
lcall
popf
pop
add
out
lods
add
je
jne
mov
xchg
xlat
popf
js
xor
pop
flds
xchg
mov
pushf
jge
stos
add
push
cwtl
and
sahf
or
add
sbb
pop
mov
aam
pushl
sbbb
xchg
roll
push
jne
lcall
and
jbe
icebp
sbb
cmp
loopne
sub
nop
jle
add
xor
arpl
iret
add
insl
ror
add
lahf
test
jae
jae
add
rcll
push
dec
add
mov
loopne
lock
and
mov
leave
inc
push
negb
movsl
bnd
rorb
adc
cmp
xchg
popf
push
add
mov
aaa
mov
loopne
gs
popf
shr
add
mov
xchg
jns
mov
jbe
mov
rolb
test
push
aas
es
xchg
add
test
data16
sbb
mov
rcrl
fs
loopne
mov
or
jb
mov
f2xm1
pusha
jmp
sbb
pop
insl
adc
mov
daa
pop
stc
or
push
sbb
add
leave
push
das
or
jle
adc
cld
mov
and
push
mov
mov
rcrb
jo
dec
add
cmp
aam
fdivrs
xchg
xchg
in
ss
sbb
repnz
add
inc
sub
js
add
pop
mov
dec
mov
daa
mov
rol
roll
mov
xor
add
sahf
into
pop
cmp
pop
sbb
call
inc
or
xchg
add
ljmp
fiadds
xchg
add
sub
testl
jbe
clc
mov
add
jns,pt
test
add
xchg
add
dec
inc
push
int3
add
adc
dec
xor
or
xchg
add
testl
repnz
lahf
mov
aaa
pop
inc
pusha
leave
mov
shrb
add
bnd
sbbb
dec
or
enter
daa
add
add
add
xor
fs
pop
mov
dec
aas
rcr
cmp
or
es
add
xchg
cli
or
hlt
add
mov
cmp
jb
mov
inc
iret
mov
adcb
lock
ret
add
xchg
insb
into
in
fldl
dec
mov
add
mov
popa
cmp
mov
mov
mov
lods
inc
add
adcb
dec
sbb
add
rcrl
jle
popf
stc
js
jmp
loopne
and
enter
rcrb
outsl
call
or
add
add
rcrb
add
dec
and
sbb
in
popf
mov
sahf
in
jae
scas
test
mov
fisubl
fldcw
leave
sbb
jo
push
cmpb
jl
popa
lcall
fadds
push
or
leave
inc
add
mov
jo
add
xchg
movsl
testl
shl
inc
sub
mov
sahf
push
inc
cmp
pop
and
add
jb
dec
pop
xchg
orb
mov
bsr
lret
pop
pushf
jle
fimuls
repnz
ret
addb
sub
pop
push
loopne
jno
add
das
stos
clc
aas
pop
add
jne
add
xor
mov
shll
loopne
pop
or
pop
pusha
rorl
and
mov
rolb
fwait
adc
loop
js
xchg
push
insb
jb
mov
les
add
test
das
lcall
mov
push
sbb
imul
push
add
rorl
inc
loopne
lret
mov
fisubs
push
or
cmp
pushf
and
mov
call
inc
or
rclb
cwtl
mov
mov
and
jb
jecxz
and
xchg
add
pop
push
cmp
xor
loopne
pusha
add
seta
inc
leave
test
iret
mov
inc
dec
push
lock
daa
jns
jle
xchg
and
add
rolb
or
xor
mov
out
pop
pop
add
inc
add
mov
dec
jp
mov
and
aaa
cltd
sarl
lock
add
sub
movsb
cwtl
mov
negb
dec
inc
jb
mov
into
inc
cmp
pop
sbbb
inc
in
shl
pop
add
adcb
loopne
xlat
add
push
sbbl
lock
rcll
fidivrl
loop
push
push
pop
outsb
mov
sub
insb
ja
stos
sub
cmp
cmp
fsubrs
sbb
jle
add
cld
out
sbb
xchg
repz
xor
jle
pop
xchg
orb
jp
aad
mov
mov
xchg
into
sbb
sub
out
add
and
inc
mov
insl
rclb
push
add
lret
test
and
fsubs
lea
cmp
test
push
jmp
xchg
and
push
xchg
cs
sub
or
xor
pop
inc
loopne
mov
imul
jbe
inc
shlb
push
mov
js
push
mov
add
and
dec
mov
mov
popf
pop
pop
mov
mov
lret
and
ljmp
pop
add
add
jl
test
xlat
mov
ret
sub
clc
icebp
and
add
test
in
add
sahf
andb
cmpsb
test
push
leave
insb
dec
and
sub
pop
scas
mov
pop
ds
aas
stc
add
shll
add
sbb
xchg
xor
mov
push
mov
xchg
fsts
out
mov
cmp
mov
mulb
add
xchg
pop
test
and
xorb
ljmp
cmp
incb
movl
sbb
adc
in
inc
mov
xor
rcrb
lods
ljmp
jmp
add
fsubrl
jne
adc
adc
adc
std
in
mov
std
mov
xor
add
movl
aad
les
gs
nop
jl
loop
ret
ret
bound
sarb
in
add
shlb
fs
dec
add
lods
sub
xchg
leave
out
movb
add
sub
incb
xchg
out
dec
aam
dec
xchg
roll
test
fcom
sbb
add
push
jb
push
cmp
call
roll
pop
mov
leave
xor
push
cmp
mov
cmpb
add
aas
aad
mov
mov
cld
push
xor
add
into
cmp
cmp
int3
cmp
cmp
push
out
ret
add
jb
bound
insb
clc
push
shl
adc
jno
add
mov
sahf
mov
add
push
fiadds
test
roll
add
sarb
int3
and
mov
jne
xor
push
push
loope
or
popa
push
add
popf
test
xor
rorb
mov
jp
add
lcall
xor
mov
xchg
add
xor
add
leave
data16
add
and
call
add
pusha
lock
in
leave
or
sub
add
clc
xchg
or
sbb
add
cmp
sub
mov
cli
or
adc
add
adc
add
call
mov
mov
cmp
cld
xchg
pop
jge
add
test
in
sbb
nop
fucomi
nop
and
dec
sub
xorb
loope
movsl
ret
add
test
lret
rclb
test
sub
pop
mov
aas
arpl
mov
stos
xchg
mov
mov
lahf
repz
js
test
into
in
repnz
and
aas
pop
mov
pop
cmp
fldenv
ja
mov
or
adcb
das
push
add
inc
out
adc
xchg
push
dec
insb
ret
jmp
add
mov
stos
push
xchg
js
add
fs
faddl
push
aam
in
mov
into
xchg
movsb
out
lds
test
jmp
add
inc
pop
in
ss
add
add
mov
jl
dec
inc
popl
test
mov
add
clc
sub
push
loopne
xchg
inc
mul
stos
das
add
and
mov
ret
mov
rolb
add
pop
and
mov
notl
cmp
repnz
mov
lods
or
adc
lock
pop
loopne,pn
inc
inc
aam
add
xchg
loop
in
jle
push
shrb
xor
mov
xor
cmp
jmp
out
cs
inc
clc
inc
sub
cmp
xchg
es
pop
or
das
add
cwtl
mov
adcb
add
sub
mov
xchg
cltd
jp
cmp
xor
fbld
popf
pusha
insl
ljmp
divb
xor
mov
inc
jle
pop
add
cmp
mov
push
push
fdivl
xchg
sarb
add
sbb
rorb
adc
repnz
negb
test
popl
add
push
xchg
or
and
xchg
jnp
sbb
popa
add
inc
filds
clc
dec
push
jns
mov
lret
data16
xchg
das
outsb
jo
jb
enter
jle
scas
xchg
js
cli
xchg
add
loop
daa
mov
jle
add
mov
dec
xor
xor
sarb
adc
inc
nop
loop
mov
inc
sub
add
push
loopne
and
push
pop
sbb
xchg
pop
out
rorb
ficompl
jne
mov
sbb
dec
gs
orb
test
js
push
fwait
mov
scas
sarb
push
bound
dec
leave
popa
sub
and
mov
mov
int3
xchg
aas
fs
mov
fdivrs
jecxz
add
ljmp
cli
dec
cmp
mov
cs
cmp
inc
in
add
incb
dec
pop
dec
bound
insb
dec
push
add
aad
lock
ror
das
adcb
pop
add
adc
and
mov
and
inc
push
xor
cli
call
mov
xor
lock
inc
sbb
xchg
push
mov
lahf
and
sbb
mov
jle
sub
clc
rclb
sbb
bound
sub
loopne
daa
dec
imul
in
pop
jp
pop
out
pop
test
xor
dec
popf
cld
cmpsb
push
aad
inc
les
inc
pop
inc
das
mov
add
dec
and
dec
enter
lock
dec
push
add
shrb
gs
jl
mov
add
inc
pop
add
xor
les
je
shr
fldl
and
popf
add
rcrl
jb
push
addl
adc
fildll
dec
in
pop
rclb
cld
add
daa
sbb
addb
jl
mov
inc
js
dec
insb
jne
insl
jle
loope
add
cmp
sub
nop
imul
shr
clc
add
out
cmc
sti
aad
std
sahf
leave
mov
rcrb
add
xor
fisubl
test
mov
add
push
adc
fwait
shrb
pop
testl
roll
stos
enter
rorl
jbe
push
in
rol
nop
adc
xor
enter
loopne
sbbb
xchg
iret
xchg
clc
adc
lcall
push
popf
add
push
std
add
add
and
pop
daa
xchg
jbe
adc
ljmp
outsl
mov
mulb
add
push
in
pop
loop
daa
pop
push
ret
jmp
jne
xchg
add
mov
lock
lds
into
out
or
inc
movsl
mov
add
int3
pop
insb
cld
into
add
enter
in
xchg
testl
sub
cmp
pop
pop
cmpsl
dec
jae
push
andl
mov
jb
dec
add
in
sub
add
dec
xchg
add
pop
lret
lret
je
fs
sti
les
loopne
es
sub
xchg
inc
xchg
dec
data16
add
jp
mov
in
cli
je
mov
xchg
mov
inc
and
call
stos
call
dec
loopne
lods
add
pushf
scas
xchg
icebp
mov
insb
cmp
and
lcall
and
nop
dec
mov
or
ja
ss
pusha
xchg
seto
andl
xchg
ljmp
out
cmp
mov
add
stos
cmp
xlat
add
sbb
leave
push
mov
mov
lret
mov
pop
std
fcom
add
xor
xchg
loop
add
and
xor
outsb
sbb
test
xor
shrl
loop
das
inc
push
dec
xchg
ss
sub
inc
jmp
ljmp
jns
pop
into
dec
aas
in
mov
adc
shl
push
ret
jo
add
sbbb
jp
cmp
es
cli
mov
jbe
pop
jp
add
push
and
and
mov
lds
pop
mov
add
inc
loopne
je
adcb
scas
push
stos
cmovns
aad
and
test
mov
aam
xchg
inc
out
sbb
adc
cmp
test
subb
fsubs
sahf
imul
pushf
mov
pop
stc
mov
push
mov
movl
add
repz
dec
test
adc
xchg
jl
notl
insb
into
cmp
cmp
orb
aaa
jbe
xor
cmp
fdivrl
pop
ret
push
loope
lods
add
mov
data16
xchg
add
push
pop
dec
test
jbe
add
rolb
and
mov
push
stos
sub
aad
mov
loop
pusha
int
aas
sub
mov
leave
push
jg
add
cmp
js
add
jl
push
pop
mov
rolb
dec
mov
das
jbe
inc
add
or
pop
fldcw
add
decl
jne
add
std
test
adc
sub
add
add
sbb
inc
clc
cmp
jnp
lods
ret
ret
out
xchg
fwait
add
and
loope
add
leave
xor
div
cmp
and
sti
je
and
dec
subb
push
xor
mov
je
xchg
xchg
lcall
and
push
fcom
inc
jb
pop
mov
test
int
fnstenv
pusha
mov
das
sbb
test
mov
roll
pop
leave
test
insb
adcb
pop
les
and
outsb
dec
xor
sub
push
scas
add
bnd
sub
pop
add
mov
icebp
in
popf
shrb
xchg
jo
add
jl
add
les
daa
cmp
dec
or
cwtl
inc
mov
adc
sahf
jmp
jnp
ror
jb
dec
and
sbb
in
cmpb
rorl
fiadds
pop
test
call
add
xchg
mov
sbb
cmp
call
dec
movb
cmp
xchg
test
lods
pop
pop
das
sub
xchg
testb
in
aam
add
sub
cmp
or
call
sbb
test
and
and
and
in
add
loopne
xlat
xor
mov
xchg
das
orl
sub
or
ret
dec
xor
xchg
jb
mov
add
test
pop
pusha
or
dec
jns
test
cltd
xchg
sahf
cmp
ret
nop
sub
shr
leave
loop
in
dec
inc
aas
or
push
add
or
lea
jg
add
popf
andb
leave
rclb
fbstp
add
pop
lock
loope
out
adc
dec
clc
add
das
bound
ja
rolb
lahf
hlt
pop
test
in
mov
ficompl
or
dec
jle
add
je
mov
outsl
or
lcall
les
iret
jnp
and
add
or
cmp
hlt
shrb
je
cmpsl
sahf
adcb
mov
clc
sarb
cli
pmulhuw
inc
cmp
sbbl
fisttpll
add
lret
and
push
adc
mov
pop
push
pop
stos
jno
loopne
mov
loope
and
sbbb
loop
call
cwtl
add
pop
lahf
push
add
mov
cld
mov
sti
adc
out
mov
jno
aam
subb
adc
inc
call
pop
jg
loopne
cld
shlb
lcall
jbe
add
lahf
xchg
cmp
std
mov
les
adc
mov
dec
sarb
and
add
push
push
xchg
cmp
xchg
adc
dec
ret
out
outsb
push
jecxz
rclb
jmp
adc
cmp
outsb
mov
aam
addb
mov
pop
pop
push
push
in
cs
and
add
ljmp
jne
sbbl
add
inc
pop
fs
mov
dec
rclb
add
mov
mov
xor
pop
add
decb
sub
test
add
inc
sbb
mov
pop
push
mov
rclb
push
push
xor
outsl
loopne
mov
inc
ljmp
sti
add
pop
pop
loopne
xor
pop
inc
mov
ret
ds
mov
add
mov
fs
shl
addr16
jae
jns
add
adc
mov
leave
sarl
mov
adc
add
jo
jb
xor
add
or
add
popa
xor
and
or
loop
add
cs
dec
and
and
mov
push
sbb
pushf
fsubrp
add
adc
push
or
cmpb
add
inc
add
rorb
xor
mov
sub
sbb
pop
das
rcrl
push
call
mov
pop
cmpsb
dec
push
jle
add
push
add
loopne
sbb
push
mov
cld
dec
hlt
cmp
and
insl
in
and
xchg
stc
push
add
ret
push
dec
xchg
sub
rorb
into
pop
pushf
je
inc
mov
in
and
test
mov
pop
mov
xchg
lret
mov
out
xchg
push
inc
add
sub
jp
add
pop
aad
push
das
or
mov
sub
push
sub
shlb
shr
add
in
pop
imul
and
and
dec
pop
lock
pop
add
sub
inc
pop
shl
or
out
loopne
xlat
test
dec
pop
stos
or
inc
outsb
add
sub
xor
pop
sar
leave
scas
lret
add
into
jno
jnp
fs
sub
mov
or
ss
add
sub
clc
or
orb
jno
idivl
mov
loopne
ficoms
push
ret
push
xchg
cmp
jmp
loop
ficompl
call
syscall
loope
in
enter
pop
rclb
loopne
xlat
add
or
push
inc
inc
mov
add
mov
mov
cmp
pop
mov
insl
das
ret
add
adc
aas
mov
in
andb
es
add
sub
lret
dec
add
or
sti
rclb
rorb
out
push
dec
mov
cwtl
ret
jg
das
add
pop
mov
or
add
pop
js
and
mov
in
enter
mov
pushf
sbb
sbb
in
cli
xchg
mov
xchg
add
jne
hlt
dec
cmp
test
popa
mov
shrb
ror
pop
test
push
xchg
loop
das
in
add
leave
jnp
add
cmp
cmp
dec
outsb
imul
add
mov
lret
faddl
inc
add
dec
psraw
sub
add
sub
cmp
jl
das
push
loope
ja
cs
mov
add
cmp
and
dec
or
addb
add
aas
inc
xchg
add
jb
pop
mov
stc
ret
syscall
call
sbb
push
sub
or
enter
adc
xchg
mov
loope
dec
or
das
or
inc
and
jne
add
test
aam
add
imul
mov
shrl
add
adcl
dec
push
mov
sub
push
add
cmp
enter
jmp
jne
push
and
loopne
push
add
xchg
fxtract
pop
xchg
dec
add
andb
dec
jge
clc
jl
mov
lock
mov
xchg
in
ror
add
pop
in
cld
testb
rorb
pop
inc
add
inc
out
dec
sub
cmc
mov
clc
inc
mov
xchg
add
fadd
inc
or
sbb
pushf
scas
dec
mov
sti
cmp
cmp
mov
add
clc
orb
add
jmp
imul
push
jle
pop
push
push
sbb
xchg
dec
lret
add
xor
add
mov
pop
test
out
mov
xlat
stos
hlt
lcall
pushf
pop
xchg
and
lock
aas
in
lock
test
ret
int3
mov
mov
lock
dec
aaa
add
cld
int3
add
ret
xchg
sub
mov
inc
xchg
inc
rolb
dec
popa
inc
push
pop
leave
pop
sub
dec
orb
imul
push
jns
jge
cmp
daa
lea
xchg
nop
loop
jmp
test
mov
mov
rorb
ftst
outsb
add
lods
xchg
daa
pop
ret
loope
jle
nop
push
add
daa
push
pop
mov
xchg
dec
incl
pushf
loope
pop
filds
fadds
popf
shl
jg
or
jmp
add
ret
pop
add
shlb
mov
filds
jl
lods
push
daa
aas
loopne
sub
push
add
xchg
sub
xorb
enter
cld
call
cli
jb
and
repnz
add
and
imul
inc
loop
loop
add
mov
push
hlt
mov
and
in
out
cmp
jle
inc
sbb
sahf
add
cmp
xchg
rorb
dec
stos
mov
pop
add
ljmp
in
aas
adcb
cmp
lcall
mov
in
pop
xchg
movl
mov
pop
sarb
and
sbb
lods
popa
inc
or
sbb
in
mov
and
mov
es
ds
add
mov
mov
jb
je
mov
sub
dec
mov
xor
mov
push
sbb
inc
dec
stc
js
aam
push
sbb
cmpsb
pop
inc
subb
push
and
xchg
rclb
xor
add
mov
popa
clc
scas
sub
cli
loopne,pt
mov
in
lret
rclb
jb
dec
add
shlb
ret
xchg
or
in
loop
ds
adc
add
or
or
aam
mov
loopne
shlb
pop
shl
mov
add
cltd
and
jl
daa
test
dec
in
mov
orb
inc
cmpsl
cmp
and
mov
pop
daa
arpl
mov
jmp
rorl
std
jnp
jg
add
mov
push
jbe
dec
lds
int
call
push
loope
call
hlt
xchg
pop
pop
adc
sti
xor
push
or
add
xchg
add
and
adc
adc
lret
pop
xchg
cmp
pop
test
dec
xchg
add
icebp
cmp
xchg
jle
mov
test
xor
and
add
in
inc
ja
add
pop
dec
data16
test
xor
loope
cmp
xlat
andb
bswap
add
sti
lock
or
add
sbb
mov
inc
clc
or
jb
dec
add
mov
xchg
push
rclb
int3
mov
xor
addr16
xchg
pop
add
cmp
rol
sbb
cmc
dec
push
cld
es
test
cltd
mov
inc
lret
sar
dec
pop
or
xor
xchg
mov
aam
add
nop
in
daa
xor
xorb
push
paddq
sub
call
cmp
cltd
clc
xchg
dec
mov
repz
lahf
lcall
mov
add
cld
add
add
xor
sbb
call
jge
mov
aad
or
aam
mov
int3
dec
mov
dec
int
je
xchg
rorb
or
pop
mov
push
in
or
sbb
and
xor
xchg
push
gs
mov
addr16
cmpl
xchg
jo
xor
aaa
dec
mov
pop
sbb
xchg
shlb
sahf
in
adc
sti
call
loopne
inc
pop
fldl
andb
pop
shl
jbe
out
cs
test
mov
pop
mov
add
push
iret
dec
pop
add
or
gs
xchg
and
dec
push
lret
shl
add
sti
xchg
cmp
dec
sbb
or
dec
sub
test
or
and
outsb
arpl
aad
clc
cmp
xchg
mov
leave
add
and
sub
loope
adc
outsb
ret
sahf
pop
inc
add
xor
es
mov
popf
shl
add
adc
das
loopne
or
add
in
xchg
js
add
push
out
pop
dec
pusha
icebp
pop
adc
pop
les
pop
add
sub
push
dec
sbb
add
insb
jne
add
dec
ret
mov
or
and
jo
xlat
jb
pop
mov
jge
imul
shl
pop
inc
orl
xchg
jp
adcb
clc
add
outsl
or
into
or
pop
rorl
sub
popa
or
into
jmp
cld
test
mov
push
movsb
add
pop
jno
cwtl
mov
inc
in
ret
pop
fdivr
push
push
test
fcmovb
xorb
popa
ds
insl
test
ja
pop
pop
das
mov
sbbb
pop
sarb
in
aam
adc
xorb
in
mov
mov
repnz
shll
pop
add
in
sahf
call
add
aam
ret
sub
add
out
mov
adc
cmpsl
sahf
xchg
pop
or
jmp
pop
lret
pop
xchg
mov
mov
out
mov
sub
xchg
popf
addb
dec
add
cmp
inc
fdivrs
dec
mov
push
xor
push
insb
orl
mov
in
inc
cmp
jns
mov
das
testb
push
ljmp
ret
mov
inc
mov
pop
inc
dec
mov
into
add
mov
mov
xchg
or
insb
cmc
and
add
daa
pop
xchg
andb
scas
in
aad
sarb
dec
or
sub
sub
push
push
add
ds
xor
mov
jno
cs
les
mov
cmp
in
flds
pop
cltd
mov
les
or
cmp
mov
cmp
and
and
shlb
incb
clc
xchg
ja
sahf
stos
mov
lods
mov
cld
cmp
popf
test
stos
add
dec
pop
loope
jne
push
stos
in
inc
mov
in
pop
add
cld
mov
or
cmp
pusha
das
out
cmp
leave
adc
push
add
lahf
test
cli
add
xchg
mov
mov
pop
sbb
rolb
sub
shll
or
push
ror
dec
inc
add
fcompl
add
lock
add
xchg
stos
into
mov
test
jmp
lock
fdivrl
cs
rorb
add
adc
adcb
jmp
out
ds
rorb
jb
pop
out
ljmp
push
mov
dec
sahf
lods
subb
jo
add
jne
xchg
xchg
xchg
mov
lret
add
push
aas
sbb
xchg
push
icebp
add
sub
pop
inc
pop
push
or
mov
jb
add
fisubrl
outsb
and
adc
add
inc
push
adc
sahf
cld
sbb
popf
call
or
sbb
cmp
add
popa
notl
xchg
jg
xchg
cmpsb
add
rcr
clc
sub
push
call
pop
aam
lock
out
std
add
push
xchg
cmp
and
push
sbb
mov
add
push
outsb
sub
dec
movsl
int3
add
mov
ret
inc
sbb
dec
push
pusha
add
imul
pushf
xorl
xchg
jb
shlb
js
jb
add
ds
pushf
pop
xchg
stos
add
cmp
jne
test
xor
mov
cmp
pop
aad
mov
add
jg
and
daa
xor
jae
and
rolb
popa
and
leave
sti
sbb
and
test
add
dec
testb
jmp
push
jge
cs
pop
pop
add
pushf
insl
xchg
ja
xchg
mov
ret
adc
in
out
xchg
xorps
cld
push
imul
jb
xchg
pop
out
lcall
dec
lods
fistps
imul
jmp
adc
lods
add
and
push
xchg
sub
mov
add
outsb
mov
iret
outsl
add
inc
lahf
fdivrs
dec
inc
sbbb
inc
sbbb
lods
mov
pop
ds
jns
fs
in
cmp
shrb
cmp
aaa
cmp
cmpl
xchg
xchg
pop
add
cmpsl
push
out
mov
pop
push
mov
xchg
fwait
pop
add
add
fmuls
mov
insb
add
xchg
popa
pop
mov
in
sbb
push
or
pop
add
in
pop
lcall
outsb
xchg
push
add
les
xchg
cmp
xchg
adc
loopne
add
xchg
rcr
or
mov
mov
and
clc
mov
adc
loopne
sbb
xchg
add
push
insb
rcr
fs
add
dec
imul
jp
loop
ret
cwtl
jnp
push
dec
rorl
punpcklwd
shlb
je
dec
in
mov
fs
test
pop
pop
cli
mov
xchg
jb
dec
push
pop
in
jl
push
movsl
ret
mov
sarb
mov
scas
ret
jmp
add
jnp
into
lahf
mov
in
dec
add
or
divl
pop
pop
cmp
push
cmp
adc
add
ret
pushf
fstl
adc
pop
popf
mov
dec
mov
push
dec
add
push
hlt
sbb
std
xchg
or
repnz
jle
mov
mov
roll
push
add
loop
movl
pop
out
repz
jle
or
dec
dec
and
mov
movsb
pop
ss
push
jbe
lock
mov
pop
ficoml
arpl
jae
add
inc
push
cmp
aad
imul
mov
int
add
stc
fdivrl
daa
add
adc
dec
enter
nop
and
icebp
test
leave
lock
push
dec
pop
fcoml
mov
add
into
sub
enter
popf
jmp
add
add
add
and
out
and
mov
in
mov
add
cltd
outsl
or
add
shlb
dec
mov
enter
pop
sbb
jp
fsubrs
add
jbe
dec
or
cmp
push
lret
and
xchg
pop
xor
bound
lea
jb
mov
xor
pop
xchg
das
add
data16
xchg
enter
je
int3
push
cld
dec
decb
add
aas
ret
jo
js
lds
mov
sub
or
push
test
inc
fisttpll
leave
cmc
je
and
sbb
adc
jae
add
stc
popa
stos
sub
xor
add
outsl
xchg
add
add
jmp
mov
push
cli
jb
pop
pusha
sbb
popf
pop
xchg
add
daa
in
adc
mov
ljmp
pop
pop
rcll
je
leave
cmp
popa
ds
sbb
dec
and
or
jge
cmp
mov
scas
rclb
clc
push
pop
inc
sbb
pusha
popa
dec
lea
dec
sub
mov
xor
aad
cwtl
ds
push
add
test
jo
push
pop
lcall
pushf
es
jbe
add
shlb
and
xchg
jns
jl
mov
jle
adc
dec
push
jg
xchg
xor
push
inc
test
movsb
jnp
add
pop
loope
test
pusha
fadds
ret
dec
add
inc
or
inc
lock
popf
loopne
scas
jmp
enter
mov
and
and
arpl
nop
call
sbb
sbb
in
sahf
add
push
ja
add
jmp
sub
test
loope
mov
repnz
inc
hlt
xorb
lcall
pop
subb
add
mov
and
in
add
dec
hlt
js
adc
popa
xor
outsb
cmpb
xchg
jo
in
addb
and
jg
and
ss
pop
push
push
out
push
add
jecxz
lds
xor
push
dec
cld
je
mov
inc
adc
add
shlb
push
cmp
add
xchg
add
jb
dec
xchg
push
push
movsl
sub
dec
ljmp
in
add
stos
dec
ret
add
dec
fcmovnb
push
pop
add
cmpsb
sbb
xchg
adc
dec
pop
jae
jle
xchg
push
shlb
in
and
popa
ljmp
cld
and
mov
dec
out
adcb
dec
fadd
inc
pop
in
sbbb
add
pusha
test
cmp
loopne
leave
mov
popf
test
or
jb
sub
pop
sbb
pusha
inc
out
xlat
imul
lret
popa
rclb
sub
xchg
pop
lods
xor
das
dec
add
push
cs
pushf
jno
add
add
loopne
and
lock
inc
inc
cwtl
mov
add
jb
adc
lahf
add
arpl
add
cli
fsubrs
dec
leave
pusha
outsl
bnd
inc
mov
pusha
cwtl
mov
ret
dec
inc
int3
pusha
mov
jg
add
adc
dec
icebp
leave
stc
je
and
mov
inc
add
xchg
loope
sbb
sbb
sbb
jge
mov
pusha
pushf
add
xor
xchg
inc
fdivs
leave
call
mov
adc
mov
add
shrl
push
dec
adc
jge
cltd
mov
jo
js
psraw
pusha
mov
lods
mov
add
mov
and
add
mov
cmp
testb
dec
jge
js
xchg
ret
add
in
out
or
jg
dec
addl
jle
xchg
xchg
mov
jo
fisttps
lret
add
aam
jae
and
add
xchg
addl
cmp
mov
cmp
cmp
add
dec
push
wbinvd
xchg
and
add
call
stc
stos
jo
cwtl
add
mov
xor
and
add
cld
cmp
mov
out
push
xchg
adc
loopne
addr16
and
pop
daa
lahf
dec
fldl
and
popa
nop
mov
ljmp
mov
pop
push
or
out
inc
es
push
scas
addb
cmp
xor
rcrb
dec
mov
pop
lcall
pop
inc
xor
adc
add
adc
aad
xchg
nop
xor
xchg
pop
ficoms
push
ljmp
pop
add
out
mov
pop
and
push
jae
adc
sarl
xchg
cld
nop
getsec
or
cmc
stos
xchg
add
fstl
adc
dec
iret
jl
inc
aas
mov
add
imull
add
loop
cmp
das
ret
pop
test
add
lret
in
or
mov
sub
pop
mov
jns
or
loope
movsb
add
xorl
add
or
pop
outsb
jmp
mov
or
xchg
test
inc
mov
xchg
les
push
stos
shlb
leave
pop
leave
mov
repnz
addl
popa
inc
bound
add
daa
aas
or
call
es
jge
dec
xlat
nop
jmp
inc
jne
add
in
mov
pop
cs
add
lret
add
push
or
jmp
shlb
and
movsb
mov
mov
mov
faddl
sub
es
lods
stos
adc
es
sar
loope
aad
push
imul
jb
hlt
rclb
in
add
pop
jae
sbb
fmul
inc
jmp
test
add
mov
pop
addl
icebp
inc
fdivl
rcrb
add
push
orb
vmread
jb
dec
jle
lcall
jne
nop
inc
sbb
lods
jp
jbe
xorb
pop
push
lock
push
inc
fcomp
pop
jo
test
inc
in
mov
push
idiv
add
push
and
mov
pop
sub
or
add
es
cld
cmp
lcall
leave
mov
pop
pushf
inc
push
or
and
add
push
nop
jg
jb
jns
add
rcll
add
cmp
jmp
xor
sub
xchg
js
add
lods
dec
mov
adc
aam
sub
sub
cli
push
ret
loop
cwtl
cltd
add
outsb
lock
mov
xor
jg
pop
lea
jl
mov
mov
inc
or
hlt
adc
jne
shlb
mov
add
and
jne
inc
in
cmp
je
push
cmp
insb
add
test
test
stos
xchg
mov
sbb
push
xchg
mov
fld
pushf
pop
aam
adc
aas
or
push
call
add
add
add
popf
in
loopne
dec
sbb
dec
sbb
cli
push
sub
loopne
add
xor
mov
mov
rcrl
jb
add
or
testb
clc
cmpsb
dec
cltd
add
inc
mov
ret
mov
adc
rcll
and
pop
and
enter
mov
xchg
xchg
sahf
mov
stc
loop
jecxz
sbb
xchg
add
sbb
adc
mov
fisubrl
cs
push
add
inc
leave
dec
jp
jle
add
and
rclb
sub
aas
add
fsubrs
mov
dec
mov
or
subb
adc
push
add
sbb
cmpb
or
and
movsl
mov
loope
lock
pop
cli
add
mov
jle
cmp
xorb
dec
push
pop
mov
add
out
or
movsl
or
jg
data16
loope
shrb
inc
add
rol
dec
adc
cwtl
or
jne
dec
inc
andb
fs
enter
mov
cmp
or
cmp
lock
in
sbbl
std
cli
add
mov
fistps
jbe
xchg
test
adc
into
roll
loop
or
sbb
pop
aam
sbb
xchg
pop
and
ja
lahf
xchg
leave
jbe
orb
test
lock
push
je
adc
js
dec
dec
sbb
push
cwtl
jbe
ret
nop
push
enter
pop
out
pop
cmp
imul
call
popf
push
add
shll
add
gs
dec
push
je
add
or
sub
cmp
xchg
add
call
add
dec
jge
sub
push
aas
xchg
adc
jl
xor
inc
add
cmc
and
pop
push
push
hlt
cmp
cltd
add
xor
insl
pop
cwtl
pop
ret
lock
repz
in
dec
jge
cwtl
popl
and
inc
cli
push
push
cmpsb
dec
pop
ret
fmull
pop
rcrb
add
aas
dec
dec
ret
pop
add
rcr
or
sub
das
cmp
movsb
lock
mov
nop
add
and
add
insl
pushf
jge
hlt
cmpsb
add
jbe
fdivr
incb
jbe
pop
pop
loopne
in
sub
and
pop
push
and
cmp
pusha
fwait
add
loopne
or
mov
sarb
inc
lret
rcl
aas
sahf
and
pusha
fnstcw
sbb
mov
cmp
sbb
dec
xchg
pop
ja
call
lods
add
daa
sub
cmp
sub
adc
mov
inc
in
add
or
and
test
pop
loopne
add
nop
enter
add
add
cmp
or
add
lret
pop
scas
repnz
into
dec
add
mov
ret
add
repz
add
loop
dec
popa
loope
mov
jnp
sub
js
pop
roll
xor
lock
fildll
cmp
adcb
outsb
or
aas
push
ds
pop
mov
mov
mov
jge
add
sti
xchg
push
add
mov
and
repnz
fwait
xchg
add
sahf
sub
incb
xchg
pop
test
and
mov
add
inc
fucompp
mov
loopne
add
mov
call
push
pop
ss
and
mov
push
in
xorb
hlt
jnp
add
ja
xchg
aam
ljmp
pushf
repz
cmp
xchg
add
cld
sub
jp
rcll
add
lds
cmp
cli
dec
jo
insb
test
pop
xchg
les
push
pop
jb
test
inc
scas
sub
lret
add
das
cwtl
add
xchg
movl
cmp
pushf
add
dec
in
mov
mov
fcoml
inc
mov
xchg
popf
lcall
pop
add
mov
pop
xchg
jl
sbb
add
movl
push
dec
test
cmp
push
sar
or
xlat
test
negb
dec
add
lods
push
movsb
mov
out
jb
pop
scas
add
dec
repz
scas
mov
jp
inc
jge
and
jmp
pop
add
test
rolb
filds
loopne
repnz
mov
dec
mov
adc
xchg
push
add
cmp
and
sbb
dec
and
shlb
scas
adc
inc
imul
jp
add
and
rolb
outsb
dec
leave
or
pop
mov
into
pop
sbb
xchg
popf
in
inc
cmp
sub
outsl
sub
inc
stos
add
fiadds
shrb
adcb
mov
adc
pop
lcall
xchg
add
std
sub
ss
jge
add
es
inc
pop
jl
sahf
sbb
inc
cmpsl
xchg
jmp
out
out
sbb
adc
or
mov
fmulp
inc
ret
mov
add
mov
cs
sbb
add
je
pop
inc
jbe
cmpb
and
popf
loopne
mov
rorb
sti
dec
push
jne
rcrb
adc
arpl
repnz
xchg
add
jmp
sub
push
aad
mov
and
add
stc
insb
push
push
rolb
xchg
pop
mov
sub
aas
push
das
hlt
in
mov
out
add
jl
inc
xor
sbb
push
push
dec
bound
andb
test
push
cmp
and
in
xor
stos
ret
adc
and
adcb
les
in
cmp
test
lods
xlat
inc
lods
sbb
push
xchg
jmp
cmpsl
adc
lock
pop
mov
xor
cmpsl
push
pop
jo
and
pusha
lock
in
or
push
mov
and
inc
in
call
inc
stos
andl
xchg
data16
fcomps
sub
add
stos
push
les
lock
ret
mov
es
cwtl
stos
dec
cmp
mov
mov
test
cmp
add
out
inc
clc
aad
cmp
adc
xor
sbb
xchg
dec
add
fs
jo
xchg
js
fldt
into
mov
rorl
push
cmp
in
xchg
pop
mov
mov
inc
clc
pop
sahf
jb
or
sbbb
pop
pop
cwtl
fistpl
cltd
dec
mov
push
or
pusha
push
es
adc
xor
add
popa
or
mov
mov
push
add
loopne
clc
adc
inc
call
xlat
filds
adc
sub
cmp
in
pop
adc
test
add
call
ret
enter
cmp
pop
out
mov
and
call
rorb
add
mov
js
or
loop
outsb
aam
push
enter
push
scas
add
fwait
out
add
mov
mov
sub
cs
xchg
push
add
jg
hlt
js
mov
mov
outsb
xchg
shr
dec
fadds
jne
xor
out
dec
and
mov
movsb
das
and
mov
cmp
inc
add
shlb
clc
cwtl
loope
sub
jg
into
mov
push
and
jo
sbb
cmc
jmp
adc
andb
add
insb
adc
mov
cmpsl
repz
mov
cli
add
clc
mov
loope
or
push
sub
into
push
pop
cmp
xchg
cmpb
hlt
test
sbb
test
mov
jb
add
bound
hlt
add
loope
imul
pop
add
test
repnz
add
out
and
sahf
xor
xchg
push
mov
sar
pop
into
mov
add
repnz
in
dec
mov
mov
fcmovb
loope
mov
cmp
fs
mov
mov
mov
xlat
add
sub
jmp
jl
xchg
pop
add
hlt
lods
ja
jg
add
movsb
jo
jge
dec
mov
cmpb
in
xor
or
pop
xchg
loopne
sub
ret
not
and
into
push
negl
inc
inc
enter
dec
jno
je
in
mov
xchg
les
adc
xchg
add
adc
mov
out
rolb
adcl
sub
fs
mov
pop
adc
int3
lock
ret
sbb
add
insb
dec
lods
xchg
cmp
nop
jns
add
lock
retw
xor
and
inc
lods
lret
push
call
push
pop
or
cmp
adc
adc
fsubs
pop
loopne
adc
xor
cmp
insb
das
add
les
mov
rcl
lcall
test
repnz
movsb
pusha
in
jo
or
addl
lret
cmp
addb
daa
or
in
into
jno
dec
lock
sahf
and
adc
add
add
inc
dec
xchg
cmp
add
dec
mov
cmp
in
push
fadds
test
lock
push
fs
xchg
mov
xchg
pop
and
pop
pop
push
shlb
dec
movsb
jne
add
popa
push
hlt
ds
sbb
xchg
inc
adc
insb
pop
add
dec
xchg
or
popa
jo
jl
aam
test
pop
mov
pop
xchg
push
pop
cmp
cld
sahf
aam
sbbb
pop
add
sub
xchg
pushf
and
in
leave
outsb
adc
add
lods
add
andb
xchg
add
fsubr
mov
add
mov
add
push
xchg
nop
repnz
ds
or
and
add
and
dec
add
bound
add
enter
popa
pop
stc
scas
dec
iret
or
jnp
lcall
loopne
movsl
rolb
rol
in
jmp
or
cmp
dec
aam
ss
mov
adc
enter
lock
test
adc
inc
cmpsb
xchg
push
xlat
add
dec
int3
clc
mov
mov
push
inc
lock
add
sub
cmp
cmpsb
mov
pop
jo
adc
pop
add
xchg
add
inc
adc
cs
pusha
xor
ljmp
or
loop
ja
mov
push
fs
cmp
cmp
rolb
sub
push
push
sahf
mov
movsb
add
dec
int3
or
push
ja
ljmp
insb
cmp
daa
jae
cwtl
ja
loopne
add
pop
or
popf
shr
js
gs
cli
inc
adc
inc
mov
adc
ja
add
inc
ds
lret
test
es
sub
or
mov
mov
sbb
cmp
cmp
sub
xchg
movsb
dec
notb
rcrl
push
sbb
xor
inc
orb
loopne
add
in
add
adc
jo
lods
cwtl
mov
pusha
push
call
adc
push
cmp
xor
je
inc
rol
stos
adc
fiadds
loope
mov
and
mov
jo
jo
adc
ret
pusha
jae
pop
dec
jo
or
in
scas
enter
mov
add
rcrl
mov
lods
mov
nop
dec
jp
fstps
mov
shlb
sbb
adc
cmp
push
out
in
xchg
add
int3
mov
dec
add
mov
pop
jo
add
adc
mov
shll
ljmp
rcrl
stos
add
pop
xor
pop
mov
pusha
mov
movsb
fimull
out
jnp
push
test
lock
pop
cmpl
popf
nop
pop
fiadds
mov
in
test
stos
iret
push
lret
sbb
lret
scas
repnz
jp
add
mov
out
lret
rorl
cmp
int3
andb
ret
xor
jg
mov
sbb
idivl
lock
pop
dec
fists
pop
dec
nop
mov
lret
mov
xor
add
iret
aam
or
negl
subb
cmp
push
pop
dec
pop
inc
add
add
adc
lock
mov
mov
rclb
pop
sbb
add
xor
adc
dec
add
xchg
add
push
mov
add
fs
adc
add
jecxz
mov
xor
loopne
ds
inc
add
inc
add
adc
and
dec
js
pop
and
mov
sbb
fnstcw
enter
hlt
movq
icebp
inc
call
bnd
mov
add
xchg
hlt
and
inc
cmc
dec
add
idivl
cmp
test
cli
ffreep
aad
mov
decb
pop
adc
and
push
sub
push
adc
xchg
xorb
jg
cwtl
cltd
xlat
cli
shlb
dec
cld
incl
inc
std
inc
clc
decb
loope
sub
stos
xorb
test
sbb
js
pusha
bswap
jo
jle
xor
pop
nop
mov
in
aas
and
stc
loopne
sub
jle
pop
jecxz
adc
sbb
and
popa
inc
inc
push
repnz
add
addb
push
shrb
shl
loopne
lock
rorl
mov
xor
cld
push
inc
pusha
addb
addb
mov
nop
rclb
sti
orb
clc
cltd
add
cmp
pop
fwait
rorb
pusha
inc
pushf
adcl
xor
out
and
and
cmpsb
and
or
test
mov
push
stos
nop
test
js
sub
int3
clc
mov
mov
cwtl
add
or
add
insb
fs
and
movsl
mov
adc
mov
aam
add
cmp
sbb
ret
pop
in
or
mov
ret
push
cmp
cli
lock
sbb
je
xchg
mov
add
shrb
adc
pop
nop
icebp
sbb
add
xchg
push
and
add
push
je
les
or
xor
pop
and
andl
cmp
push
add
jo
xchg
inc
shll
inc
stc
fcompl
and
in
add
inc
int3
add
jo
push
and
xor
cmpsb
or
inc
sbb
and
fiadds
sbb
push
adc
xorb
dec
inc
inc
inc
dec
add
or
inc
xchg
adc
pop
jb
add
and
push
data16
cmp
lahf
dec
xor
es
into
xor
mov
push
add
pop
push
inc
adc
aaa
push
adc
int
fildl
pop
inc
clc
imul
add
cmpsl
ljmp
cmp
lea
add
add
add
xor
push
add
orb
cli
add
mov
cltd
pop
mov
sbbb
push
test
add
mov
add
cld
or
call
aas
inc
lock
and
inc
je
pop
les
adc
lock
popa
pcmpeqb
xchg
paddd
add
sarb
xor
cmpb
mov
test
or
lods
mov
addr16
rol
notb
mov
pcmpeqb
imul
push
ljmp
lahf
fwait
testb
and
cmp
cmp
rolb
add
loopne
ret
sbb
clc
bswap
cld
pop
sar
sbb
and
sbb
inc
movsl
sarb
push
bound
lock
add
dec
mov
lds
std
sub
add
cmp
lods
add
dec
aaa
jl
sbb
xchg
mov
jg
add
dec
adc
sbb
pusha
pop
mov
rolb
add
rcl
hlt
movsb
and
sub
and
adc
mov
inc
and
cmove
aas
mov
adc
mov
pop
and
dec
notl
add
or
add
cwtl
add
stos
adc
push
mov
push
ficomps
dec
xor
add
add
add
arpl
loopne
out
rcrb
add
pushf
sub
adc
movsl
and
xor
lcall
in
xor
stos
jo
rolb
loopne
insb
mov
lods
cmp
stos
pop
dec
test
add
lds
bound
mov
add
add
lods
sbb
in
mov
pop
inc
jg
add
and
movsl
pop
cmp
push
andl
sti
adc
cld
dec
add
add
fmull
pushf
push
push
fdiv
lcall
lahf
out
xchg
add
into
push
or
cmp
add
mov
inc
mov
rolb
subl
xor
and
adc
push
sub
popf
cli
int3
jnp
pushl
cmp
mov
roll
andl
clc
pusha
fsts
push
dec
adc
push
lods
add
or
je
cmp
xchg
or
shl
aas
mov
inc
jo
and
fdivs
add
sbb
push
in
in
mov
and
adc
cmpsl
and
add
and
fs
xor
ret
and
add
and
sbbl
cwtl
sbb
repz
cmp
dec
mov
and
jbe
push
cld
push
mov
data16
push
sarb
add
or
lods
sub
add
pop
sub
jns
jns
push
push
xor
push
stos
adc
jno
push
and
push
lcall
into
stos
fiadds
cld
ja
pop
sub
add
sub
mov
pushf
sub
loope
pop
adc
jg
push
inc
fldl
mov
push
xchg
sub
add
xchg
inc
jno
add
ret
repz
and
inc
push
xchg
cs
lods
add
sub
hlt
xchg
xor
and
out
dec
in
push
cmp
or
sbb
movsb
cs
repz
sbbb
mov
mov
sub
and
test
pusha
jg
xchg
xchg
movsb
pop
orb
mov
stos
aas
subl
add
cmp
push
mov
xchg
es
push
int3
add
and
and
aaa
mov
add
jmp
xchg
mov
adc
aaa
push
cmp
clc
ja
andb
mov
dec
rclb
sbb
add
dec
xchg
rcr
cmpsb
aas
pusha
repz
dec
daa
cmp
mov
hlt
push
push
adc
fcomps
add
push
mov
aad
xchg
fsubrl
mov
dec
leave
pop
sub
bound
push
les
in
xor
mov
add
add
pusha
arpl
xchg
xchg
add
lret
adc
cmp
cwtl
orl
sub
sub
cmp
call
call
inc
arpl
add
test
inc
pop
lret
mov
out
nop
clc
in
lods
sub
push
rolb
ss
popa
add
sub
push
dec
push
test
lret
sub
pop
pusha
test
lock
insw
push
in
bound
mov
cmp
ds
add
daa
mov
ja
add
jecxz
sub
pop
adc
and
lret
sub
imul
push
int3
sbb
push
add
movsb
dec
orb
push
aas
xorb
arpl
and
shll
out
rorb
hlt
data16
cld
bound
pop
lahf
sub
inc
push
inc
mov
or
pusha
hlt
xor
arpl
or
sbb
sbb
andl
pop
inc
push
loopne
ljmp
mov
and
mov
sub
stos
add
jmp
push
clc
inc
in
mov
lret
ja
jp
adc
push
aas
add
inc
and
push
xor
sahf
outsb
push
aas
xor
test
mov
inc
add
arpl
subb
cmp
seta
sub
xor
aas
adc
dec
or
sub
add
mov
and
sbb
adc
mov
lret
fs
aas
xor
pop
out
xor
xor
lock
mov
cmc
add
daa
xorb
or
sub
dec
clc
fldenv
sbb
xchg
xchg
add
adc
fwait
dec
movsl
pop
mov
jmp
aam
push
aas
daa
push
pop
push
jle
mov
cmp
pop
lock
xchg
mov
dec
clc
push
mov
sub
jl
in
sbb
mov
fdivr
daa
sbb
cltd
pusha
jle
jg
cmp
sahf
pushf
sub
rolb
mov
or
iret
inc
cld
mov
jbe
add
adc
sbb
lret
pop
xchg
sub
test
movsb
pop
mov
push
sahf
out
lcall
and
daa
sub
adc
mov
mov
je
cmp
push
jb
or
xorb
xchg
xchg
jecxz
sub
pop
es
insb
sub
test
sbb
lcall
in
sub
lods
add
outsb
lcall
repnz
xchg
cmp
mov
pop
add
xor
add
ret
xchg
add
pop
jne
ljmp
scas
add
dec
sbb
pop
add
imul
lea
sub
xor
mov
pop
and
in
stc
outsl
or
inc
mov
shl
xor
data16
fwait
lret
cwtl
or
stos
push
frstor
mov
aad
add
or
jecxz
aas
fbstp
push
shl
movsb
lcall
dec
addr16
paddb
pop
xor
and
jle
ss
jne
pop
push
pop
mov
loope
or
pusha
andb
stos
jge
out
jnp
add
sub
lea
add
sahf
adc
or
test
andl
push
push
push
sbb
dec
shrb
or
jae
add
pushf
or
outsb
adc
gs
jb
imul
int3
addb
add
mov
adcb
adc
push
push
into
sti
and
inc
in
arpl
imul
adcl
inc
add
int3
dec
insl
leave
or
sub
je
cmp
inc
sub
inc
imul
outsl
mov
jae
xchg
add
movsb
fnsave
adc
scas
add
mov
inc
jns
add
dec
mov
adc
insb
jne
and
loopne
inc
cmpsb
popf
add
into
adc
dec
add
fmuls
xchg
insb
or
je
lock
sub
cmp
addb
inc
cmp
je
mov
inc
rclb
mov
mov
ljmp
aas
lods
sub
and
add
mov
sub
lahf
loope
icebp
dec
lock
sbb
jno
arpl
icebp
mov
push
inc
fstpl
add
leave
cmp
or
dec
push
add
insb
add
mov
jne
loope
or
add
arpl
insl
jae
popa
lock
mov
add
xchg
sub
dec
mov
inc
fdivp
dec
les
adc
push
insb
test
push
xor
enter
loopne
and
xor
int
pusha
shlb
mov
lock
mov
test
mov
dec
add
sub
lret
adc
mov
add
or
dec
push
push
repnz
sub
push
xor
out
pop
push
dec
pop
pusha
fsts
push
pop
dec
sub
xchg
cmp
xchg
jmp
push
push
repnz
lock
xor
push
or
jb
popf
and
add
lcall
push
jp
movsl
dec
adc
mov
insb
add
lods
and
dec
je
jo
and
out
add
and
stos
xlat
sbb
add
mov
push
or
loopne
dec
sahf
std
fsubrs
push
sbb
inc
lcall
adc
jne
jo
dec
add
jbe
pop
push
sub
subb
cmp
add
push
push
je
sub
pop
cmpsb
stos
in
jo
cmp
dec
add
cmp
leave
hlt
inc
add
add
mov
sub
push
push
add
fsts
call
ss
imul
mov
jb
xor
js
loopne
and
test
mov
pop
mov
loope
xchg
data16
adc
or
fisubrs
xor
iret
bound
add
outsb
shlb
jl
cltd
push
add
sub
mov
inc
xchg
std
sbbb
mov
sub
add
insb
and
imul
call
xchg
data16
push
inc
in
cltd
or
xchg
popa
ja
mov
add
cwtl
frstor
pop
sbb
sbb
cmp
add
insl
cmp
mov
add
sbb
pushf
sbb
in
fldl
stos
and
xchg
cmp
sbb
movsb
pusha
pop
xchg
test
test
outsb
dec
insl
pop
and
add
loopne
mov
cltd
push
sbb
inc
shll
push
push
xor
jns
pop
cmp
cli
add
leave
es
sub
arpl
inc
dec
add
outsb
aam
into
or
or
ficoms
mov
int3
push
xchg
push
fldl
jbe
adc
push
mov
add
rcrb
push
xchg
mov
es
mov
add
push
and
stos
fdivs
andb
popf
add
and
add
sbb
jecxz
xor
je
data16
mov
in
push
adc
add
xchg
es
add
test
fmull
pop
push
push
xor
adc
add
jno
dec
andb
lds
cmp
aad
cld
add
cmp
mov
sub
sbb
push
outsb
add
lret
pop
xchg
shlb
jns
add
push
addr16
je
sbb
push
aad
push
xchg
jbe
bound
lods
lcall
push
dec
js
rclb
imul
jbe
xchg
ja
push
pop
pushf
lahf
add
inc
gs
iret
pusha
push
and
dec
adc
loopne
cmpsb
sub
jb
adc
cltd
add
mov
add
dec
mov
sub
xor
movsl
gs
arpl
sbb
subb
xorb
repnz
pushf
pop
inc
add
sahf
adc
jo
add
shlb
bound
ror
cmp
jo
rclb
add
inc
mov
pop
lock
es
sbb
add
xor
not
popf
fadds
add
xor
xchg
sbb
fcomps
xchg
add
add
push
dec
insb
gs
sub
inc
inc
push
les
fistps
mov
xchg
inc
xchg
adc
adc
hlt
inc
popa
sbb
push
xchg
cs
jl
sub
pushf
ljmp
sbb
enter
out
and
push
dec
jbe
xchg
shll
loop
in
stc
xor
adc
mov
cmp
lds
jno
pop
add
sbb
lock
int
mov
hlt
pop
in
cwtl
sub
mov
pop
into
jb
and
or
arpl
jp
add
les
inc
test
xchg
clc
in
add
push
cwtl
and
cltd
stos
sub
cli
jmp
adc
dec
push
mov
clc
sahf
xchg
pop
add
sub
sbb
roll
lods
es
sub
mov
jne
add
mov
push
xor
push
cmc
or
jb
cmp
add
mov
dec
or
je
add
popf
add
arpl
les
add
mov
sub
mov
popa
add
mov
or
mov
add
ficomps
cmovo
dec
inc
shlb
adc
xchg
lds
lcall
bound
mov
inc
xchg
andl
insl
cmp
std
mulps
inc
repnz
js
mov
lret
add
loopne
test
hlt
aad
add
into
jo
cmp
add
jb
cmp
push
dec
inc
add
adc
add
sub
jns
add
stos
xchg
lock
rcrb
add
cs
cli
lcall
sbb
jbe
and
add
pushf
xchg
mov
push
orb
gs
je
mov
jl
add
inc
push
jae
testl
and
cmp
adc
aad
mov
inc
sbb
push
shrb
adc
jle
jp
int3
movsl
push
mov
rorb
adc
jge
xor
inc
out
pop
or
out
dec
pop
mov
jb
ss
sub
xchg
sbb
jmp
sbb
out
mov
daa
add
inc
hlt
aam
popf
rorb
xor
in
pusha
mov
jle
inc
cmp
into
lea
push
fiaddl
arpl
leave
je
jle
jl
rcrb
mov
mov
imul
push
mov
out
adc
jne
cmp
add
lods
bound
pop
addb
dec
mov
ss
push
lahf
cmpsb
dec
ret
in
dec
mov
xchg
sahf
cmp
inc
fstl
ljmp
and
aam
rcrb
mov
mov
mulb
sbb
sbb
in
pop
add
cwtl
mov
cs
cmp
lahf
stos
xor
add
mov
imul
pushf
and
andb
add
dec
mov
jo
cwtl
lods
repnz
je
add
aam
xchg
movsb
jle
aas
scas
cmpsb
sahf
fildl
pop
insl
pop
or
add
xchg
mov
es
mov
add
sub
xchg
outsb
sahf
rcll
cltd
pop
fldt
xchg
adc
ds
adc
xor
clc
fidivrl
push
push
pop
dec
inc
jae
sub
pop
sub
add
adc
dec
bound
or
test
mov
jl
fs
jb
and
in
nop
incl
sbb
jae
adc
inc
pop
dec
add
jbe
or
inc
add
push
hlt
dec
inc
sete
add
loopne
sahf
loop
jle
inc
jbe
js
and
xor
dec
push
jo
fcoms
cmp
xor
in
sub
add
xchg
mov
pop
mov
sbb
test
add
push
inc
pop
je
icebp
out
add
mov
int3
mov
outsl
add
sub
cwtl
test
mov
xchg
cld
movsl
xchg
orb
dec
in
fsub
in
jl
mov
push
push
add
dec
sbb
ljmp
les
idivb
rolb
gs
sub
dec
inc
lock
popa
mov
incl
fsub
outsb
jne
cmp
adc
push
cmp
and
jl
repnz
into
mov
push
in
xchg
add
ss
insb
mov
stc
aaa
add
imul
test
add
inc
and
cmp
pop
cs
sub
pop
jo
cmovb
adc
mov
xchg
lcall
jb
push
cmp
add
or
leave
lods
add
push
shrl
nop
cmp
insb
rcpps
xchg
mov
loopne
mov
les
fnstsw
outsb
jo
jl
out
fwait
add
pop
push
les
mov
pop
sub
add
fsubrs
xchg
push
and
add
js
jmp
push
add
sub
pop
scas
xchg
nop
in
shll
jp
add
loop
dec
rclb
arpl
fdivr
jae
mov
lods
outsl
dec
add
xor
subb
add
popa
dec
cmp
xchg
call
outsb
dec
jne
in
jmp
je
movsl
pusha
in
insl
fimull
sub
test
xchg
dec
or
data16
jb
call
fwait
and
jl
adc
stos
aad
loop
inc
push
push
and
rclb
cmp
add
pop
push
outsb
rclb
pop
add
sub
xchg
mov
dec
addr16
push
pop
xchg
sahf
nop
xchg
push
ds
xchg
movsl
cmp
stos
pop
ficompl
cmp
sbbb
lret
jo
pop
dec
inc
es
imul
xchg
xchg
enter
mov
cmp
sahf
and
inc
inc
movsb
mov
jg
and
into
scas
add
push
sbb
add
adc
inc
int3
cwtl
out
movsb
jmp
arpl
adc
xor
xchg
lret
repnz
cmp
popa
xorb
inc
ss
or
sub
shl
pop
insb
cmp
cmpsb
je
mov
lods
add
icebp
jp
sub
jecxz
addb
pop
fs
pop
out
movsl
inc
stos
lret
notb
or
xchg
in
sub
add
pushf
xor
inc
mov
dec
add
ds
add
pop
dec
sub
pop
add
lods
adc
test
lret
ror
xchg
dec
sub
add
push
sub
mov
add
mov
inc
add
ljmp
xor
sub
xor
movsb
pushf
pop
push
cmpsl
inc
jns
js
movsl
cmp
or
sbb
das
scas
hlt
add
jns
pushf
push
adc
pop
adc
sub
push
sub
rclb
clc
outsb
xchg
loop
pop
int3
sub
or
xchg
push
sub
test
pop
mov
add
test
add
or
inc
xor
es
shlb
iret
sarb
in
add
xchg
les
jo
sub
jl
add
adc
loop
je
loopne
dec
and
cmpsb
add
jl
adc
mov
xchg
aam
jo
add
cmp
aaa
sarb
pop
fwait
cmp
addl
mov
add
jne
in
sbb
add
ja
dec
enter
add
mov
or
lret
leave
jp
sbb
add
cwtl
xchg
add
xchg
aaa
cmp
addb
lret
fdivrl
add
je
dec
adc
mov
mov
pop
or
xchg
aad
das
popa
inc
cmp
xor
popf
cmp
inc
outsl
outsb
fsts
sbb
inc
jmp
fsubl
arpl
adc
repnz
pop
inc
ss
adc
add
push
push
jg
push
cmp
adc
out
dec
adc
add
scas
inc
pop
call
fwait
sahf
sub
call
push
mov
pop
rclb
sub
add
jo
mov
pop
jmp
xchg
loopne
daa
and
test
pop
push
add
push
incb
add
mov
jp
mov
sub
inc
jb
movb
imul
call
popl
inc
or
and
jne
dec
out
pop
or
mov
mov
push
add
sbb
push
mulb
test
sub
fidivl
mov
jne
xchg
movsb
loope
push
test
int
jnp
hlt
sbb
push
outsb
add
sub
mov
lea
dec
adc
enter
adc
icebp
push
jnp
mov
aam
mov
xchg
cmp
add
dec
inc
fisttpl
clc
push
mov
add
push
adc
push
gs
xchg
leave
loopne
sub
add
out
push
push
add
stos
cmp
ret
sbb
data16
mov
and
xchg
inc
psraw
or
adc
nop
add
outsb
arpl
push
xor
inc
rcrb
add
xchg
rol
push
pusha
sub
mov
movsl
pop
cmp
add
inc
and
adc
mov
add
shll
dec
add
xchg
mov
pop
and
xchg
lcall
adc
mov
icebp
jecxz
add
es
mov
push
cltd
add
pop
adc
add
int3
xchg
jne
pop
add
lcall
push
pop
cmp
push
xor
mov
rclb
sarb
and
gs
cltd
sbb
add
sbb
out
and
push
movsb
sarl
xor
shlb
sub
cwtl
cmpps
pop
fisubrs
sbb
loop
fldl
movsb
call
rcll
pop
or
nop
or
in
je
cmpsb
push
push
out
shll
add
hlt
scas
mov
and
cmp
jae
add
pop
inc
or
and
mov
or
dec
xorb
lds
dec
es
in
pop
push
inc
stc
pop
jecxz
movsl
add
in
dec
or
adc
gs
or
push
jns
cmp
sub
or
xchg
ja
fstl
inc
add
rcrb
xlat
gs
mov
adc
repnz
sub
sub
nop
jg
jp
enter
fmuls
push
dec
pop
inc
ret
mov
sbb
loop
mulb
leave
inc
fsubl
mov
fcoms
nop
psllw
mov
arpl
pop
add
mov
push
fiadds
pop
insl
ss
cmp
mov
or
add
adc
pop
insl
add
arpl
sub
jo
data16
test
fwait
sbb
je
arpl
push
sub
sbb
movq
sub
push
fiaddl
ss
das
pop
fstpt
push
cmp
lea
and
push
cmpsb
pop
aam
std
add
ret
inc
cltd
push
bound
cmovp
mov
loop
out
leave
sub
ss
enter
jp
scas
sub
mov
loop
push
adc
fsubrs
or
cmp
jge
sbb
jl
mov
rcl
add
xor
shlb
nop
pop
sbb
jae
adc
add
and
jns
or
add
repz
test
cmp
pusha
call
in
push
fmuls
or
adc
xor
dec
pop
out
mov
fildl
add
sbb
or
cmp
or
add
daa
ljmp
cmpsl
lahf
jmp
dec
jb
in
jo
movsl
add
add
or
stc
ret
sbbb
add
sbb
aaa
pop
and
inc
inc
dec
or
add
sub
pop
add
rcll
int
inc
xor
test
nop
push
repnz
xchg
ds
jne
aam
fmull
in
insl
std
inc
cmp
cmp
lds
jnp
jmp
or
push
int
add
xchg
test
inc
in
into
rorb
les
xchg
dec
lods
in
dec
inc
leave
fstl
xchg
push
xor
jmp
lock
into
inc
xor
pop
ss
dec
push
in
cmovge
nop
dec
or
ret
adcl
mov
inc
jl
add
mov
lahf
jbe
push
bnd
xor
inc
pop
mov
xor
xor
cmpsl
dec
sbb
sub
fistl
adc
rorb
fs
aam
subb
add
call
add
jl
test
movq
sub
mov
mov
inc
jp
mov
jae
dec
movl
movsl
cld
xlat
cld
rol
push
inc
es
lea
lcall
in
rolb
pmaxub
ljmp
sbb
mov
jns
test
rcr
inc
pop
xchg
sub
and
cs
xchg
js
test
test
xchg
sarb
lahf
sub
sbb
cld
dec
push
sub
bound
les
inc
push
xor
jns
mov
inc
movl
loop
and
sarb
andb
xchg
mov
jl
dec
test
fnstsw
mov
sahf
xor
push
subb
rcr
stos
xchg
push
or
add
ds
roll
inc
sub
or
or
or
rorl
pop
pop
mov
cli
xor
fsubl
sbb
or
loopne
insb
pop
add
sbb
movsb
mov
inc
mov
fmuls
or
out
sbb
sti
push
adc
mov
fcoms
or
push
fists
lret
dec
clc
fsubs
mov
push
sbb
fsubs
cmpsb
fsubl
pop
sbb
dec
outsb
cwtl
inc
push
fnstenv
sbb
pop
sahf
mov
aas
fdivrl
adc
mov
xor
pop
inc
jno
push
fcompl
ljmp
add
adc
inc
push
lcall
mov
mov
inc
outsl
dec
pop
push
xchg
subb
pushf
pop
mov
fisubs
movsb
mov
pop
shl
fbstp
mov
movsl
mov
push
sbb
mov
xor
adc
and
push
or
and
imul
inc
and
mov
pop
push
cmpsl
leave
stos
dec
or
jo
sub
das
test
adc
jns
out
lock
test
in
xchg
leave
lahf
filds
jl
sub
xor
icebp
adc
adc
cmp
lock
jne
mov
adc
out
loopne
adc
mov
pusha
and
jbe
fbstp
lock
pop
and
adc
dec
in
enter
jo
sbb
or
stc
jecxz
xor
sub
push
scas
inc
jge
lock
notb
dec
jo
sbb
push
adc
sub
dec
cld
push
into
sub
pcmpeqd
inc
inc
dec
dec
lret
add
dec
dec
dec
push
mov
aaa
xor
fstp
push
pushf
mulps
push
sub
fildll
arpl
push
gs
push
push
push
jno
lds
pusha
sub
push
push
sbb
inc
int
sti
xchg
xchg
out
loopne
into
rorb
jb
imul
mov
or
xchg
add
test
ret
xchg
popa
outsl
dec
sub
rorb
add
fldcw
mov
jg
nop
inc
jo
loopne
psraw
ljmp
add
ljmp
xchg
jb
lock
fld
mov
stos
inc
push
add
dec
pop
add
js
mov
in
sbb
and
pusha
out
xchg
in
decl
addb
addr16
and
mov
jp
pop
push
lock
and
and
add
mov
sub
or
mov
or
inc
or
shl
or
jnp
add
xchg
and
jg
cmp
movsl
scas
pop
adc
adc
sbb
cmp
and
test
xchg
stos
pop
into
punpcklbw
inc
adcl
arpl
push
cli
data16
cmc
xabort
xor
mov
and
loopne
imul
int3
cmpsb
jo
rorb
dec
dec
mov
push
repz
stos
mov
pop
in
dec
xor
or
or
add
mov
add
adc
adc
add
add
xlat
lock
push
scas
dec
jg
test
loopne
xor
jl
jbe
lock
in
lea
arpl
adc
mov
test
aad
lret
mov
pop
xchg
incl
data16
dec
in
add
add
jns
es
add
dec
aam
push
sbb
cld
push
dec
add
mov
negb
sti
xor
add
add
mov
rolb
outsb
aad
and
movq
arpl
dec
popa
insl
out
lods
add
lret
test
in
mov
sub
push
push
ss
mov
daa
adc
and
or
xor
dec
int
fidivrl
add
push
pop
lock
sub
cmp
leave
adc
lea
rorl
pop
add
pop
jne
jns
and
fiaddl
aam
lea
push
dec
pop
add
pop
sbb
add
int
cmp
and
clc
and
stos
pop
adc
dec
sbb
add
les
push
mov
clc
repz
fcompl
aad
add
addl
pop
cmp
push
movb
pop
jo
test
inc
add
inc
adc
nop
pop
jecxz
pusha
adc
xchg
cmp
inc
xor
loopne
ja
add
inc
jp
out
aad
xlat
cmp
push
or
xor
fldl
roll
xor
add
xor
inc
sbb
cmp
fldl
pusha
pop
xor
jmp
jb
in
lret
mov
push
fildl
scas
dec
add
out
add
iret
cmpsl
ss
jge
add
jb
adc
lock
add
push
dec
ss
cmpl
inc
pop
ds
testb
pop
into
mov
inc
xchg
aas
loop
push
dec
push
xor
fldl
mov
pop
in
dec
push
pushf
add
dec
jl
pop
inc
cmp
and
push
pop
add
pop
xor
dec
dec
add
push
aaa
inc
dec
mov
inc
add
inc
xchg
dec
push
sbb
push
lahf
dec
mov
sub
cmpsb
jl
ror
inc
dec
cmp
pop
xor
pop
push
add
cmp
dec
addl
inc
xor
ds
dec
adc
lock
jno
mov
mov
test
rcpps
sbb
stc
leave
lock
xchg
mov
add
addb
add
cmc
les
jle
add
dec
xor
xor
dec
out
es
fdivl
hlt
call
inc
dec
inc
dec
xor
add
pop
cmc
test
mov
add
dec
dec
dec
dec
cmp
xor
shlb
push
dec
sahf
pop
push
inc
out
ja
pop
dec
mov
mov
add
xor
or
add
or
push
shlb
sbb
pop
inc
inc
and
pop
cmp
jle
add
mov
rorb
sbbb
addb
out
pop
nop
outsb
imul
gs
insb
outsl
jo
and
sbb
jp
call
cli
pusha
bound
add
jae
arpl
add
and
jno
aas
pop
nop
add
in
cmp
or
std
cmpsl
xchg
push
push
lcall
out
sbb
xchg
loopne
lods
jb
les
cmp
add
inc
iret
dec
sub
jmp
pushf
rcr
sbb
adc
cmpsb
cmc
bound
cltd
add
mov
xacquire
jle
pop
rorl
scas
add
mov
aas
add
loopne
loope
in
mov
add
aad
mov
rcrl
fcoms
sbb
in
das
sbb
cmp
mov
or
and
add
dec
jmp
or
jo
test
nop
rolb
mov
pop
and
xchg
iret
inc
das
int3
pop
push
and
adc
ja
xor
ret
sbb
orl
test
cmp
jno
add
cs
ficompl
mov
jbe
data16
add
pop
jae
and
jo
add
insb
stos
mov
and
xchg
lcall
add
pop
jmp
xor
cmpsl
push
cmp
add
arpl
push
push
sahf
stos
cs
sub
out
in
xor
jmp
add
dec
scas
mov
pop
pop
mov
sahf
or
sbbb
xchg
pop
or
stos
cmpsl
lret
shl
add
scas
and
push
xchg
pop
inc
shlb
movsl
faddp
rcl
pop
add
pop
call
lock
pop
xchg
punpcklwd
insb
imul
cmp
js
stc
and
mov
jnp
or
in
cmp
test
mov
mov
pop
dec
add
pusha
add
jb
out
push
xor
cs
inc
je
popa
out
push
sub
or
js
inc
jnp
dec
outsl
fs
outsb
push
ljmp
dec
sti
sti
cmp
jae
adc
inc
or
out
popa
je
std
fistl
iret
add
jne
inc
shlb
dec
dec
popa
addr16
inc
outsl
fs
fdivs
jae
sub
and
mov
loopne
cmpsb
and
test
popa
jne
xor
push
jns
movsb
xchg
out
je
imul
and
inc
cmp
out
cmp
in
lock
push
push
mov
arpl
jbe
mov
and
out
adc
popf
data16
add
arpl
insl
lcall
add
add
mov
add
add
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
jno
jne
outsb
outsb
outsb
adc
add
add
push
pop
dec
cmp
outsb
jge
add
sub
jno
jbe
andb
sub
rolb
pusha
pop
dec
gs
adc
call
push
out
add
add
jecxz
add
incl
pop
adc
cld
push
sub
push
das
or
sbb
in
pop
add
std
push
sbb
scas
jo
push
add
call
add
push
sub
push
fcoms
adc
sub
ljmp
jmp
add
push
sub
repz
sub
adc
add
add
mov
cs
xchg
adc
jle
add
ja
add
jp
add
jns
add
push
sub
into
fdivrs
mov
mov
ds
adcl
mov
call
bound
jmp
add
push
sub
dec
adc
in
pop
xchg
cwtl
jmp
fidivrl
push
incl
pop
add
mov
insl
add
cmpsl
fs
push
sub
add
icebp
mov
or
scas
lcall
fld
stos
call
enter
outsl
sbb
cltd
push
add
test
add
mov
mov
jmp
sub
jecxz
aaa
or
dec
xor
mov
and
add
add
or
mov
mov
in
fcmovnb
jmp
mov
dec
mov
lcall
jbe
inc
jge
inc
jge
inc
ja
call
or
pop
aaa
ud0
add
dec
add
xchg
sti
push
pandn
dec
add
push
mov
cmp
jecxz
in
jecxz
jmp
jmp
sarb
call
xchg
add
fstpl
add
hlt
mov
das
lcall
adc
or
jle
or
xchg
push
add
ljmp
pop
add
cltd
pop
add
jmp
push
or
pop
add
push
jecxz
or
xchg
xchg
int3
mov
jmp
mov
mov
insb
add
sarl
lds
dec
test
fstl
add
out
int
jmp
cmp
addl
mov
add
mov
insl
add
lds
inc
jo
inc
jae
dec
jp
dec
jge
cli
mov
push
add
pop
lret
pop
mov
sar
out
push
in
dec
xchg
dec
ljmp
jbe
inc
ja
dec
jg
call
test
jmp
nop
add
out
xchg
add
mov
cmp
inc
jbe
call
mov
ficomps
sbb
icebp
mov
cli
lret
cli
iret
and
stc
enter
fwait
or
xchg
fstpt
add
fs
cld
out
fcos
in
xlat
mov
lret
test
pushl
je
inc
ja
inc
jl
inc
jns
call
addb
jmp
cwtl
add
icebp
xchg
add
mov
stc
lret
roll
adc
cli
aam
clc
jmp
pop
out
fwait
adc
scas
jb
sbb
xchg
mov
sbb
shll
leave
jo
inc
jne
mov
jge
inc
jnp
mov
jnp
fimuls
add
lock
add
icebp
xchg
add
icebp
stos
add
in
mov
mov
or
lods
jo
aaa
movsb
popw
sbb
pop
add
add
pop
add
xchg
push
add
xchg
push
add
sub
pop
add
jne
call
jns
call
jle
call
jl
mov
xchg
cmp
ret
jg
pushl
add
aam
add
in
add
ljmp
jmp
mov
ficoml
push
lds
add
add
pop
push
adc
push
add
lahf
pop
push
or
pop
push
add
add
add
push
pop
add
push
pop
add
push
pop
pop
sub
pop
push
sub
pop
sbb
jl
push
xchg
add
fnstsw
fiadds
add
mov
mov
xor
mov
ja
fadds
jmp
popl
jmp
add
loopne
add
sarl
in
jo
or
add
add
push
pop
or
sub
pop
push
sub
cmp
and
jp
cld
jle
inc
decl
add
orl
faddl
add
mov
fwait
push
pushl
outsl
add
enter
xlat
addl
faddl
add
loopne
add
loop
add
sarb
jle
add
add
lcall
subl
repnz
mov
mov
lcall
add
mov
inc
add
test
jae
call
cmpsb
pushw
jno
inc
js
call
jg
call
addl
flds
add
ret
jo
or
add
add
clc
jp
clc
jp
clc
jp
clc
jp
clc
jp
clc
mov
mov
in
adc
ret
lcall
dec
add
mov
arpl
mov
ja
dec
popf
pop
ljmp
add
les
lret
jns
dec
jnp
dec
jns
dec
jbe
mov
add
add
push
pop
add
add
add
push
add
lea
mov
cmp
bound
push
pop
mov
push
or
test
sbb
addr16
mov
sub
enter
test
sub
scas
push
add
jne
inc
jae
inc
jb
imul
cltd
add
add
add
stos
add
xchg
pop
push
push
mov
jp
es
push
add
insb
sbb
lret
mov
sub
mov
jno
mov
jge
in
cmpsb
add
xchg
push
pop
adc
jns
add
arpl
movsl
add
mov
sbb
ret
ljmp
gs
mov
jno
pushl
xchg
add
sahf
pop
push
add
pop
push
add
les
xor
pop
add
cmpsl
imul
mov
pusha
sbb
mov
add
mov
imul
rorl
add
sahf
pop
push
or
pushf
pop
push
add
xchg
add
jns
es
push
add
add
add
mov
jno
sti
mov
addr16
cmpsb
pusha
pop
mov
inc
add
add
sahf
pop
push
add
push
push
or
add
add
cwtl
pop
push
sbb
pop
add
lahf
pop
push
or
jne
lret
mov
cmp
jmp
push
divl
and
sahf
pop
push
add
pop
push
add
add
add
add
add
pop
pop
sub
add
add
mov
out
stos
jae
ljmp
pop
pop
ljmp
add
sahf
pop
push
pop
sahf
pop
push
sldt
add
sahf
pop
push
add
dec
add
sarb
jb
cmc
cmpsl
push
decl
push
add
add
add
add
add
push
add
roll
cmc
xchg
pop
or
stc
push
jmp
incl
incl
incb
clc
add
push
pop
inc
pop
incl
add
cld
add
aas
cld
add
add
add
add
add
add
add
pop
clc
add
and
add
pop
addb
incl
add
incl
add
jg
add
jg
add
jg
loopne
aas
push
add
push
add
clc
adc
clc
rorb
cld
bound
jno
jl
incl
