jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
mov
push
call
ret
nop
push
mov
push
mov
and
push
mov
push
call
cmp
sbb
neg
and
pop
ret
push
push
mov
and
push
mov
push
call
ret
nop
test
je
call
or
je
ret
mov
jmp
ret
nop
test
je
call
or
jne
ret
mov
jmp
ret
nop
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
cmp
jge
jcxz
cmp
je
push
push
mov
mov
ja
lea
lea
std
rep
jmp
cmp
je
push
push
mov
mov
mov
ja
and
lea
lea
std
rep
sar
mov
mov
sub
sub
rep
cld
dec
sar
js
rep
and
mov
rep
pop
pop
ret
push
push
push
push
mov
mov
jmp
push
call
mov
mov
test
je
cmp
jbe
cmpb
jne
cmpb
jne
add
jmp
xor
mov
jmp
cmp
jne
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
cmp
ja
mov
mov
call
mov
mov
xor
jmp
cmp
jne
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
ja
mov
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
xor
push
push
pushl
mov
xor
call
lea
call
mov
lea
mov
call
mov
cmpl
je
inc
jmp
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
mov
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
pop
ret
mov
push
mov
add
lea
push
call
movzwl
imul
add
imul
xor
mov
add
imul
mov
add
mov
mov
pop
ret
mov
mov
fnclex
fldcw
ret
nop
push
fnstcw
pop
ret
nop
sub
fistpll
fwait
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
push
push
push
push
mov
mov
test
je
mov
mov
test
jle
dec
mov
mov
test
je
mov
call
test
jg
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmp
sete
cmp
jle
mov
inc
mov
test
je
call
test
je
mov
cmp
je
mov
mov
mov
call
jmp
cmp
jg
pop
pop
pop
pop
ret
mov
test
je
mov
xor
mov
xchg
call
ret
lea
movl
movl
mov
xor
mov
mov
mov
mov
movb
call
ret
nop
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
decl
jne
push
lea
call
pop
ret
mov
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
decl
jne
lea
call
add
dec
jne
pop
pop
ret
mov
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
lea
test
je
mov
inc
jle
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
push
push
push
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
mov
call
push
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
lea
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
incl
ret
mov
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
decl
jne
lea
call
mov
pop
mov
ret
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
xor
test
je
mov
jmp
ret
nop
test
je
ret
nop
add
mov
ret
mov
test
je
mov
shr
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
lea
ret
lea
mov
jmp
ret
mov
sub
jb
sub
je
call
ret
lea
mov
xor
movl
inc
cmp
jne
mov
mov
ret
nop
mov
jmp
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
ret
mov
mov
mov
ret
mov
push
push
mov
mov
test
je
mov
call
mov
test
jne
pop
pop
ret
lea
push
mov
mov
test
jne
xor
pop
ret
call
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
jne
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
subl
jae
call
mov
movl
movw
movw
movw
call
call
mov
ret
ljmp
add
add
jb
imul
jo
jb
addr16
sub
xor
cmp
sub
xor
xor
inc
jbe
outsb
addr16
bound
dec
push
inc
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
xor
call
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
push
push
push
push
sub
mov
cld
mov
mov
mov
mov
add
jb
mov
mov
add
jb
mov
or
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
jae
cmp
jae
mov
inc
mov
inc
add
jae
jne
cmp
jae
mov
inc
adc
jb
mov
add
jne
cmp
jae
mov
inc
adc
adc
js
add
jae
jne
cmp
jae
mov
inc
adc
jb
dec
add
jne
cmp
jae
mov
inc
adc
adc
js
jmp
cmp
ja
sub
jb
shl
cmp
jae
mov
inc
xor
je
jns
sar
mov
jae
add
jne
cmp
jae
mov
inc
adc
adc
jmp
add
jne
cmp
jae
mov
inc
adc
jb
inc
add
jne
cmp
jae
mov
inc
adc
jb
add
jne
cmp
jae
mov
inc
adc
adc
js
add
jae
jne
cmp
jae
mov
inc
adc
jae
add
cmp
adc
mov
add
jb
cmp
ja
mov
add
jae
cmp
jb
mov
inc
mov
inc
dec
jne
jmp
cmp
ja
cmp
jbe
mov
jmp
je
dec
mov
sub
mov
mov
add
pop
pop
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
or
jmp
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
mov
mov
cmpl
je
mov
sub
mov
mov
cmpl
jb
mov
mov
mov
cmpl
je
mov
mov
xor
call
push
lea
push
mov
mov
push
mov
sub
push
mov
add
push
call
add
test
jne
jmp
subl
mov
mov
xor
call
mov
mov
mov
add
mov
call
jmp
mov
call
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
mov
call
test
jle
mov
movl
cmpl
jne
mov
mov
lea
call
mov
mov
mov
movzbl
xor
mov
nop
incl
incl
decl
jne
pusha
rol
dec
rol
xor
nop
xor
ror
inc
sub
nop
xor
mov
dec
mov
add
xor
nop
mov
dec
mov
sub
dec
nop
xor
dec
popa
pusha
inc
mov
xor
inc
mov
inc
xor
nop
add
mov
sub
ror
popa
pusha
nop
mov
mov
inc
xor
mov
add
xor
nop
sub
nop
add
mov
mov
add
mov
rol
ror
xor
add
mov
popa
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
xor
push
push
pushl
mov
movl
mov
call
mov
cmpl
je
cmpl
je
jmp
cmpl
jl
decl
mov
mov
mov
cmp
jne
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
mov
pop
ret
push
mov
add
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
mov
call
inc
je
mov
push
mov
mov
call
inc
push
mov
call
mov
mov
pop
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
rep
mov
xor
mov
mov
mov
push
mov
call
mov
mov
mov
cmpl
jge
mov
incl
mov
mov
mov
mov
cmp
jne
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
pop
pop
pop
pop
pop
ret
mov
ret
lea
push
mov
add
push
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
mov
mov
mov
push
call
add
mov
movw
push
push
call
push
call
mov
push
push
movzwl
push
push
mov
push
call
mov
lea
push
movzwl
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
push
push
mov
push
call
mov
lea
push
mov
push
call
add
push
mov
push
mov
push
mov
push
call
mov
mov
push
push
push
push
mov
push
call
mov
lea
push
push
lea
push
mov
push
mov
push
call
push
push
mov
sub
push
push
mov
push
call
mov
lea
push
mov
sub
push
push
mov
push
mov
push
call
lea
push
push
mov
push
mov
push
push
push
mov
push
call
test
jbe
movb
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
call
add
add
pop
dec
pop
outsl
pop
push
das
xor
and
sub
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
imul
gs
xor
cs
insb
add
add
push
mov
mov
push
push
dec
jne
push
mov
mov
mov
call
xor
push
push
pushl
mov
lea
xor
call
mov
mov
call
je
lea
mov
call
cmpl
je
cmpl
je
lea
mov
call
mov
lea
call
lea
xor
call
mov
lea
call
mov
push
push
push
call
mov
mov
call
push
mov
call
mov
mov
pop
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
ret
push
mov
add
mov
mov
add
mov
movzwl
add
mov
mov
pop
pop
pop
ret
mov
push
mov
add
mov
mov
shr
mov
mov
mov
pop
pop
pop
ret
push
mov
add
push
xor
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
lea
xor
mov
call
lea
xor
mov
call
movl
cmpb
jne
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
call
test
je
movb
xor
push
push
pushl
mov
pusha
add
sub
xor
inc
ror
nop
dec
inc
rol
nop
add
popa
pusha
ror
xor
sub
nop
xor
mov
sub
nop
xor
xor
mov
add
nop
xor
popa
pusha
inc
sub
dec
xor
rol
dec
xor
nop
xor
xor
dec
add
nop
dec
dec
mov
mov
xor
ror
inc
sub
mov
xor
rol
nop
mov
xor
ror
nop
xor
sub
sub
mov
inc
nop
add
xor
add
mov
popa
movl
lea
push
mov
push
call
test
je
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
push
mov
push
call
test
jl
cmpl
je
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
lea
push
mov
lea
mov
mov
push
mov
lea
mov
mov
add
push
mov
lea
mov
mov
add
push
mov
push
call
test
je
lea
push
mov
lea
mov
mov
call
push
mov
lea
mov
mov
push
mov
lea
mov
mov
add
push
mov
push
call
incl
decl
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
cmpb
jne
push
mov
push
call
jmp
mov
mov
call
mov
push
call
mov
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
call
add
insl
dec
insb
push
push
pop
dec
push
and
and
and
add
add
call
add
add
dec
dec
dec
pop
push
outsb
dec
das
xor
add
add
push
mov
add
mov
mov
mov
xor
divl
test
jne
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
divl
test
jne
mov
mov
mov
jmp
mov
mov
xor
divl
inc
imull
mov
jmp
andb
xadd
stc
jb
add
mov
mov
rdtsc
sub
not
cmp
jl
jmp
not
stc
jb
add
dec
lds
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jg
stc
jb
add
gs
push
pop
stc
stc
jb
add
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
not
stc
stc
jb
add
loope
dec
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
not
stc
jb
add
fsubs
bound
stc
jb
add
in
sbb
jmp
fs
pop
cld
or
enter
enter
stc
add
add
jl
jmp
jmp
or
stc
stc
jb
add
pushf
inc
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
call
inc
sub
inc
add
add
add
add
add
or
jb
add
jmp
lret
cld
je
push
pop
stc
stc
jb
add
ret
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
push
add
stc
stc
jb
add
mov
mov
rdtsc
sub
not
cmp
jl
jmp
call
xchg
mov
and
pop
xadd
not
stc
jb
add
jmp
test
not
stc
jb
add
in
rorb
xor
enter
stc
add
add
jl
jmp
jmp
je
sar
jmp
xchg
stc
jb
add
dec
inc
insl
pop
jmp
adc
in
mov
rdtsc
sub
not
cmp
jl
jmp
push
push
rdtsc
xor
pop
xor
pop
push
pop
stc
stc
jb
add
not
stc
stc
jb
add
mov
xor
enter
stc
add
add
jl
jmp
not
stc
jb
add
jo
stos
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
push
add
rol
ror
stc
stc
jb
add
not
not
stc
jb
add
ja
push
or
rdtsc
sub
not
cmp
jl
jmp
push
pop
stc
jb
add
js
pop
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
jmp
test
add
add
stc
jb
add
jb
sbb
mov
add
mov
movzwl
add
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
xor
divl
test
jne
mov
lea
mov
mov
add
jmp
mov
lea
mov
mov
xor
divl
inc
imull
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
movb
mov
mov
add
mov
mov
call
mov
mov
call
mov
xor
push
push
pushl
mov
mov
mov
mov
mov
mov
pusha
inc
inc
mov
xor
inc
nop
nop
nop
sub
ror
xor
ror
mov
mov
add
xor
inc
nop
xor
xor
mov
xor
rol
mov
xor
nop
popa
pusha
xor
mov
nop
ror
ror
mov
inc
sub
mov
xor
add
xor
sub
nop
mov
nop
add
rol
nop
ror
nop
nop
mov
xor
add
nop
nop
nop
sub
dec
sub
nop
nop
xor
xor
ror
mov
rol
nop
nop
xor
inc
ror
popa
pusha
rol
nop
rol
add
dec
nop
xor
add
dec
dec
add
sub
ror
xor
sub
mov
xor
add
nop
nop
nop
mov
xor
add
nop
nop
inc
xor
nop
mov
rol
nop
mov
inc
popa
mov
add
mov
movzwl
add
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
call
mov
mov
mov
mov
call
add
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
cmpl
jbe
mov
lea
mov
mov
mov
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
mov
lea
mov
mov
add
mov
mov
call
mov
lea
mov
mov
mov
mov
call
add
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
mov
call
add
mov
incl
decl
jne
lea
mov
call
lea
mov
call
cmpb
jne
movl
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
call
test
je
movb
movl
lea
push
mov
push
call
lea
push
push
lea
push
mov
add
push
mov
push
call
push
push
mov
push
mov
mov
push
mov
push
call
lea
push
mov
push
mov
push
mov
mov
push
mov
push
call
lea
push
push
mov
add
push
mov
add
push
mov
push
call
mov
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
mov
push
call
pop
cmpb
jne
push
mov
push
call
jmp
mov
mov
call
mov
push
call
mov
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
cmpl
je
mov
mov
mov
cmpb
jb
cmpb
ja
addb
mov
mov
mov
incl
incl
decl
cmpl
jne
mov
pop
ret
lea
push
mov
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
call
lea
push
push
push
lea
mov
mov
call
mov
call
push
push
call
test
jne
lea
push
push
lea
push
push
push
mov
push
call
test
jne
mov
call
mov
lea
push
mov
push
lea
push
push
push
mov
push
call
test
jne
mov
mov
call
mov
mov
cmpb
jne
mov
push
lea
mov
mov
call
mov
mov
call
mov
inc
mov
mov
mov
call
jmp
mov
push
lea
mov
mov
call
mov
mov
call
mov
add
mov
mov
mov
call
mov
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
call
add
add
insl
push
dec
push
pop
push
sub
sub
and
and
sub
sub
add
add
incl
add
add
add
in
add
sidtl
mov
sub
je
sub
jne
movb
jmp
movb
mov
pop
pop
pop
ret
mov
sub
sidtl
mov
add
ret
nop
push
mov
push
movb
call
cmp
je
call
cmp
je
call
cmp
jne
movb
mov
pop
pop
ret
mov
push
mov
mov
push
push
dec
jne
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
add
mov
mov
dec
add
mov
sub
nop
ror
dec
nop
rol
nop
xor
nop
nop
popa
pusha
mov
sub
nop
xor
add
mov
xor
xor
ror
xor
add
mov
mov
dec
ror
xor
sub
dec
xor
add
nop
nop
dec
nop
mov
inc
nop
dec
mov
inc
popa
pusha
sub
ror
nop
rol
nop
nop
xor
xor
xor
xor
rol
mov
mov
dec
nop
dec
dec
nop
nop
sub
nop
add
inc
mov
dec
ror
dec
nop
xor
inc
rol
xor
dec
mov
sub
add
dec
ror
mov
rol
nop
mov
xor
ror
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
call
mov
push
call
pusha
mov
sub
add
xor
sub
add
mov
xor
ror
mov
xor
xor
mov
dec
xor
dec
mov
rol
xor
add
add
mov
xor
rol
dec
xor
ror
inc
xor
ror
mov
xor
inc
rol
nop
mov
mov
xor
inc
mov
inc
rol
mov
sub
mov
dec
rol
rol
add
popa
pusha
xor
ror
dec
mov
xor
add
nop
nop
add
nop
dec
xor
sub
nop
rol
add
nop
nop
mov
add
dec
inc
xor
sub
mov
nop
inc
sub
dec
xor
rol
dec
xor
mov
xor
mov
sub
dec
inc
mov
xor
ror
xor
xor
sub
ror
popa
pusha
nop
nop
ror
inc
nop
mov
inc
xor
sub
nop
nop
xor
mov
sub
inc
inc
sub
dec
add
mov
inc
dec
ror
ror
dec
sub
xor
inc
nop
xor
add
rol
nop
mov
sub
popa
call
mov
push
call
call
mov
pusha
rol
add
mov
nop
ror
mov
sub
nop
nop
mov
nop
sub
add
inc
ror
mov
xor
xor
mov
dec
sub
dec
xor
mov
add
inc
xor
mov
xor
rol
nop
mov
xor
add
dec
ror
nop
xor
popa
pusha
rol
xor
xor
xor
xor
xor
xor
dec
rol
rol
nop
mov
add
mov
xor
rol
dec
ror
nop
sub
inc
mov
add
dec
rol
ror
dec
xor
sub
popa
pusha
xor
mov
xor
sub
ror
nop
xor
sub
xor
nop
sub
nop
rol
nop
xor
rol
inc
nop
rol
add
nop
inc
rol
rol
add
dec
rol
sub
mov
xor
xor
nop
mov
mov
mov
add
nop
inc
mov
rol
add
mov
xor
sub
popa
mov
sub
cmp
jge
mov
sub
cmp
jge
movb
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
decl
add
pop
pop
dec
push
pop
push
push
or
and
add
add
decl
add
add
pop
push
push
adc
push
add
add
decl
add
push
pop
dec
pop
dec
push
push
or
and
add
add
decl
add
add
js
jb
pop
push
push
add
add
decl
add
add
pop
dec
or
adc
sub
add
decl
add
add
push
push
movups
sub
decl
add
add
dec
push
push
pop
jg
and
daa
xor
add
decl
add
jo
dec
outsb
push
pop
push
jge
xor
add
incl
push
pop
pop
dec
add
add
decl
add
add
pop
dec
pop
insl
dec
push
and
xor
call
add
add
dec
outsb
push
dec
pop
pop
pop
add
sub
and
add
call
add
add
pop
pop
imul
pop
xor
sub
xor
add
add
call
add
add
push
dec
pop
insb
dec
push
pop
and
sub
xor
call
add
add
outsb
push
dec
pop
pop
pop
add
sub
and
add
decl
add
gs
dec
dec
push
pop
imul
add
add
decl
add
add
dec
dec
dec
pop
push
jg
sub
and
cmp
add
decl
add
add
dec
pop
je
push
pop
sub
add
lcall
add
add
pop
dec
pop
imul
xor
je
sub
cmp
cmp
add
add
decl
add
add
pop
push
imul
pop
xor
add
decl
add
add
push
pop
pop
dec
dec
or
xor
add
decl
dec
push
pop
pop
dec
dec
or
aaa
add
add
call
add
jo
dec
ja
pop
dec
push
pop
push
sub
or
and
add
call
add
add
dec
jns
dec
dec
pop
push
xor
xor
and
decl
add
add
push
dec
imul
pop
xor
add
decl
pop
pop
jne
pop
push
jne
cmp
add
add
call
add
add
pop
imul
inc
imul
cmp
add
decl
add
add
pop
jns
push
dec
pop
je
cmp
call
add
add
dec
push
push
push
pop
dec
pop
adc
sub
add
add
decl
add
add
pop
dec
pop
push
push
and
xor
push
mov
add
xor
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
call
push
call
mov
cmpl
je
testb
jne
xor
jmp
mov
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
mov
pop
ret
add
call
add
add
dec
jl
push
pop
jg
xor
sub
xor
and
add
push
mov
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
movb
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
call
mov
movl
lea
push
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
mov
call
mov
call
test
je
lea
mov
mov
call
mov
mov
call
jne
movb
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
decl
add
jo
dec
outsl
dec
pop
dec
jo
sub
add
decl
add
add
dec
push
dec
dec
dec
push
sub
add
incl
add
push
push
pop
inc
add
add
push
mov
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
nop
rol
rol
ror
ror
mov
nop
mov
mov
nop
xor
popa
pusha
ror
xor
add
xor
xor
xor
rol
nop
nop
ror
nop
add
nop
nop
inc
nop
mov
xor
add
xor
sub
dec
nop
sub
add
inc
nop
sub
nop
inc
inc
dec
nop
ror
mov
mov
xor
nop
xor
nop
xor
xor
sub
mov
inc
add
dec
ror
popa
pusha
sub
xor
mov
ror
inc
sub
nop
inc
nop
mov
inc
add
dec
inc
rol
xor
ror
dec
nop
sub
dec
xor
dec
ror
xor
ror
nop
mov
inc
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
call
push
push
call
mov
cmpl
je
movl
lea
push
mov
push
call
test
je
jmp
lea
lea
mov
call
mov
push
lea
mov
mov
call
mov
pop
call
jne
movb
jmp
lea
push
mov
push
call
test
jne
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
decl
push
pop
dec
push
pop
push
or
sub
xor
add
add
decl
add
jp
pop
dec
push
pop
push
or
and
add
decl
add
add
pop
jg
push
adc
sub
add
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
push
push
call
mov
cmpl
je
movl
lea
push
mov
push
call
test
je
call
mov
mov
cmp
jne
lea
push
lea
push
lea
push
lea
push
call
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
cmpl
je
lea
push
lea
push
lea
push
lea
push
mov
push
call
test
je
lea
push
lea
push
call
test
setl
lea
mov
call
push
mov
call
push
push
mov
push
call
mov
call
mov
lea
call
mov
push
call
jmp
lea
push
mov
push
call
test
jne
mov
push
call
cmpb
je
mov
mov
call
jmp
mov
call
pusha
ror
mov
inc
nop
rol
rol
dec
mov
sub
ror
mov
popa
pusha
sub
nop
mov
nop
mov
dec
mov
dec
nop
inc
xor
mov
xor
mov
add
inc
mov
dec
mov
dec
ror
rol
dec
rol
mov
popa
pusha
xor
ror
mov
ror
sub
nop
mov
xor
xor
rol
mov
xor
dec
ror
xor
inc
nop
dec
mov
dec
mov
popa
cmpb
jne
mov
cmpl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
ret
decl
add
add
dec
push
push
pop
pop
dec
xor
add
call
add
add
dec
jns
dec
dec
pop
push
xor
xor
and
decl
add
add
dec
pop
dec
pop
js
sub
push
sub
and
incl
add
add
add
add
in
add
xor
mov
mov
xor
push
push
pushl
mov
movb
lea
mov
mov
call
mov
call
push
call
mov
cmpl
je
lea
mov
mov
call
mov
call
push
mov
push
call
mov
cmpl
je
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
decl
add
pop
pop
dec
push
pop
push
push
or
and
add
add
call
add
add
jge
pop
dec
pop
pop
pop
xor
xor
aaa
and
xor
add
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
push
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
mov
push
mov
push
call
mov
mov
push
call
mov
cmpl
je
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
add
decl
push
push
pop
imul
daa
add
add
decl
add
add
pop
push
pop
outsl
pop
dec
das
xor
and
add
decl
add
jnp
pop
pop
imul
daa
add
add
decl
add
jnp
pop
push
imul
daa
add
add
decl
add
jno
pop
pop
imul
daa
add
add
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
push
push
call
mov
cmpl
je
movl
lea
push
mov
push
call
test
je
jmp
lea
lea
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
push
push
push
call
mov
pusha
nop
mov
xor
inc
dec
ror
inc
ror
nop
sub
inc
xor
nop
ror
sub
nop
inc
add
add
mov
inc
nop
ror
inc
rol
mov
rol
nop
sub
xor
xor
xor
mov
add
nop
inc
add
sub
nop
inc
mov
dec
popa
pusha
add
xor
xor
add
mov
xor
ror
dec
xor
inc
nop
mov
xor
ror
mov
sub
ror
xor
xor
dec
ror
sub
nop
nop
nop
add
popa
pusha
inc
xor
sub
inc
dec
ror
mov
mov
add
inc
nop
ror
dec
nop
rol
dec
ror
nop
nop
rol
mov
ror
nop
ror
dec
xor
add
mov
inc
dec
add
nop
nop
inc
xor
rol
dec
sub
nop
ror
xor
add
dec
mov
nop
nop
dec
nop
mov
popa
cmpl
je
xor
push
push
pushl
mov
lea
mov
call
push
mov
call
push
push
mov
push
call
test
jbe
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
cmpl
jne
lea
push
mov
push
call
test
jne
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
call
ret
jmp
jmp
mov
pop
ret
nop
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
movb
lea
push
lea
push
push
push
push
push
push
lea
mov
mov
call
mov
call
push
push
call
test
jne
movl
lea
push
lea
push
lea
push
push
mov
call
push
mov
push
call
test
jne
lea
lea
call
mov
mov
call
jne
movb
mov
push
call
jmp
mov
call
push
mov
call
push
push
push
mov
call
push
mov
push
call
test
jne
movb
mov
push
call
cmpb
jne
lea
push
lea
push
push
push
push
push
push
lea
mov
mov
call
mov
call
push
push
call
test
jne
movl
lea
push
lea
push
lea
push
push
mov
call
push
mov
push
call
test
jne
lea
lea
call
mov
mov
call
jne
movb
mov
push
call
jmp
mov
call
push
mov
call
push
push
push
mov
call
push
mov
push
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
mov
pop
ret
add
add
decl
add
add
pop
jns
pop
pop
dec
pop
or
push
cmp
add
decl
add
add
pop
imul
and
cmp
call
add
add
outsb
insb
jge
jnp
adc
sub
addr16
and
push
mov
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
sub
je
sub
jne
mov
and
cmp
jne
push
push
mov
push
call
push
push
push
mov
push
call
jmp
push
call
mov
push
mov
push
mov
push
mov
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
decl
add
add
dec
insl
push
push
pop
push
dec
adc
cmp
add
decl
add
addr16
dec
dec
jbe
dec
dec
pop
daa
and
add
add
decl
add
add
dec
dec
push
push
dec
jb
xor
and
and
decl
add
add
pop
insl
push
push
pop
push
dec
adc
sub
push
mov
add
mov
mov
mov
call
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
call
mov
mov
pop
ret
lea
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
xor
xor
rol
xor
dec
mov
rol
sub
xor
mov
mov
inc
sub
sub
nop
inc
add
ror
popa
pusha
sub
mov
dec
ror
ror
nop
inc
add
add
mov
xor
nop
mov
xor
xor
popa
pusha
mov
rol
sub
ror
nop
sub
inc
mov
nop
rol
inc
add
mov
sub
mov
mov
mov
add
inc
mov
mov
rol
dec
xor
sub
mov
rol
ror
ror
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
push
call
sub
mov
fildl
fdivs
call
mov
push
call
sub
mov
fildl
fdivs
call
mov
xor
mov
movl
xor
mov
xor
mov
mov
mov
push
push
call
mov
movl
xor
mov
mov
mov
push
call
mov
push
mov
push
push
push
push
push
mov
push
push
mov
mov
mov
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
mov
push
call
push
push
push
push
push
push
push
mov
push
push
mov
push
push
mov
mov
mov
call
push
call
jmp
push
call
push
call
push
push
push
push
call
test
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
call
add
add
dec
imul
and
xor
add
decl
add
add
pop
push
dec
dec
pop
dec
jl
and
xor
decl
add
fs
push
pop
jbe
dec
dec
pop
daa
and
add
add
decl
add
add
dec
ja
dec
dec
pop
pop
and
call
add
add
pop
push
dec
push
pop
dec
pop
or
and
add
add
call
add
add
dec
dec
pop
dec
pop
push
jb
xor
and
and
add
add
decl
add
add
pop
pop
js
dec
dec
push
xor
add
add
inc
push
inc
xor
push
insb
gs
jae
and
je
jb
je
and
jb
arpl
popa
jae
ja
jb
and
outsl
jo
outsb
and
and
insb
add
add
add
inc
inc
dec
push
add
add
dec
dec
add
inc
push
push
push
dec
dec
add
push
mov
add
mov
mov
call
xor
push
push
pushl
mov
movl
movl
call
cmpl
je
mov
mov
call
je
mov
call
test
jle
mov
movl
mov
mov
mov
and
xor
add
adc
incl
decl
jne
jmp
push
push
mov
mov
call
mov
mov
cmpl
jne
cmpl
jb
jmp
jl
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
mov
mov
pop
ret
add
add
incl
add
add
add
add
in
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
pop
add
add
pop
add
add
add
cwtl
sbb
add
je
add
inc
pop
add
fcompl
add
lods
pop
add
loopne
add
mov
add
mov
add
andb
adc
add
add
add
push
mov
mov
push
push
dec
jne
mov
call
xor
push
push
pushl
mov
call
test
je
push
call
call
test
je
push
call
call
test
je
push
call
lea
call
cmpl
jne
push
call
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
mov
call
mov
cmpl
jne
push
call
mov
mov
mov
call
lea
mov
mov
call
cmpl
je
call
lea
mov
mov
call
mov
push
lea
mov
mov
call
mov
lea
mov
call
mov
pop
call
je
push
push
lea
mov
mov
call
mov
call
push
push
call
push
call
movb
cmpb
je
cmpb
je
cmpb
jne
lea
mov
mov
call
mov
call
test
je
movb
jmp
movb
cmpb
jne
call
cmp
je
call
cmp
je
call
cmp
jne
mov
add
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
push
call
pusha
add
ror
mov
inc
xor
nop
inc
nop
mov
xor
nop
nop
nop
dec
inc
mov
add
xor
nop
xor
xor
mov
nop
xor
nop
mov
rol
inc
inc
mov
inc
rol
inc
xor
add
inc
nop
nop
mov
mov
popa
pusha
xor
add
dec
mov
add
xor
dec
add
xor
xor
add
nop
xor
rol
inc
xor
mov
rol
add
mov
nop
mov
mov
ror
inc
mov
add
inc
mov
mov
xor
nop
rol
nop
dec
dec
add
xor
ror
dec
xor
popa
pusha
ror
rol
add
add
ror
nop
sub
mov
mov
xor
nop
sub
xor
ror
inc
inc
rol
mov
inc
rol
ror
mov
rol
ror
nop
nop
xor
xor
nop
mov
dec
add
nop
dec
mov
popa
cmpb
jne
call
test
jne
call
test
jne
call
test
jne
cmpb
jne
mov
add
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
push
call
jmp
cmpb
je
mov
add
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
push
call
call
cmp
jne
cmpb
jne
push
call
call
cmp
jne
cmpb
jne
push
call
call
cmp
jne
cmpb
jne
push
call
cmpl
jne
cmpl
je
cmpb
jne
cmpb
je
imul
push
call
jmp
imul
push
call
movb
cmpb
je
push
call
jmp
fiaddl
insl
aam
xor
enter
stc
add
add
jg
not
stc
stc
jb
add
adcl
sub
not
cmp
jl
jmp
jmp
sub
pop
stc
stc
jb
add
clc
cmc
pop
jmp
mov
jb
add
xor
enter
stc
add
add
jg
jmp
sbb
xorb
add
add
das
cmp
lcall
sub
not
cmp
jl
jmp
push
push
rdtsc
xor
pop
xor
pop
not
stc
jb
add
in
out
add
in
lock
stc
jb
add
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
xadd
imul
stc
jb
add
inc
sarb
jmp
jno
mov
addr16
jmp
enter
add
mov
add
inc
cmpsb
mov
outsb
enter
xor
enter
stc
add
add
jg
jmp
loop
mov
into
adc
push
push
rdtsc
xor
pop
xor
pop
jmp
fcompl
fst
bswap
bswap
mov
jmp
scas
mov
mov
add
mov
inc
jmp
sub
inc
shr
or
test
mov
add
add
inc
add
add
jmp
or
ret
andb
xchg
push
push
rdtsc
xor
pop
xor
pop
jmp
outsb
jmp
sub
add
rdtsc
mov
rdtsc
sub
not
cmp
jg
mov
jmp
gs
mov
push
hlt
pop
add
rolb
add
jmp
dec
inc
jmp
mov
mov
xor
rolb
add
add
movsb
rorb
iret
bswap
jmp
or
jmp
xor
mov
lods
xchg
test
mov
decl
fwait
mov
mov
or
adc
rolb
add
add
fdivrp
inc
xchg
mov
xchg
pop
xlat
aad
xor
enter
stc
add
add
jg
jmp
imul
addr16
add
jmp
addb
push
jmp
cmp
lods
mov
inc
push
pop
jmp
fs
xchg
shr
add
and
push
mov
lcall
stc
test
call
cmpsb
cmp
inc
add
add
add
pop
jmp
add
incl
mov
pop
mov
or
add
pop
cmp
cmp
add
pop
jmp
jo
mov
adc
and
xor
enter
stc
add
add
jg
mov
jmp
jb
mov
mov
push
add
add
mov
ss
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
stc
stc
jb
add
jl,pt
sub
add
stc
stc
jb
add
in
insb
xor
rdtsc
sub
not
cmp
jl
jmp
jmp
outsl
stc
jb
add
std
imull
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
not
stc
jb
add
mov
shl
sar
jb
add
clc
cmp
xor
enter
stc
add
add
jl
jmp
jmp
or
jb
add
xor
ja
xor
enter
stc
add
add
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
push
pop
stc
jb
add
shlb
adc
add
call
movw
movw
movw
push
call
test
je
movb
push
call
mov
call
call
test
jle
mov
movl
pushl
push
lea
mov
call
pushl
mov
mov
call
incl
decl
jne
call
test
jne
lea
mov
mov
call
cmpl
je
mov
mov
call
lea
mov
mov
call
mov
lea
mov
call
mov
mov
call
mov
call
cmpb
je
lea
mov
mov
call
cmpl
je
lea
mov
mov
call
mov
lea
mov
call
mov
lea
call
cmpl
je
lea
mov
mov
call
mov
lea
mov
call
mov
lea
call
mov
mov
call
jmp
lea
call
cmpl
je
lea
call
mov
mov
call
cmpl
jne
mov
xor
call
jmp
mov
xor
call
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
call
lea
mov
mov
call
cmpl
jne
cmpb
je
lea
mov
mov
call
mov
lea
call
mov
mov
call
jmp
lea
mov
mov
call
mov
mov
call
jmp
cmpb
je
lea
mov
mov
call
mov
lea
mov
call
mov
call
mov
lea
mov
call
mov
lea
call
mov
mov
call
jmp
lea
mov
mov
call
mov
lea
mov
call
mov
call
mov
lea
mov
call
mov
mov
call
cmpb
je
mov
push
mov
call
mov
mov
call
test
jne
mov
push
lea
xor
call
mov
push
mov
call
mov
pop
call
jmp
mov
push
mov
call
mov
mov
call
test
jne
mov
push
lea
xor
call
mov
push
mov
call
mov
pop
call
cmpb
jne
cmpb
jne
push
call
cmpb
jne
cmpb
jne
push
call
push
push
lea
mov
mov
call
pushl
lea
xor
call
pushl
push
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
call
push
push
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
call
decl
push
pop
push
push
jns
pop
pop
xor
add
decl
pop
dec
imul
sub
add
add
decl
pop
dec
imul
sub
add
add
decl
add
add
dec
dec
pop
pop
pop
jl
cmp
add
inc
inc
inc
add
add
jb
jb
add
aas
add
add
pop
sbb
dec
pop
dec
and
ss
imul
cmp
cmp
daa
xor
ja
sysenter
cmp
adc
add
adc
add
sbb
sbb
add
incl
add
add
add
add
push
add
add
jmp
add
sbb
pop
push
dec
sbb
sub
arpl
sub
cmp
imul
and
jb
xor
xor
js
add
add
incl
add
add
add
add
incl
add
add
adc
inc
pop
add
inc
dec
add
add
push
adc
cmp
add
add
add
add
add
add
add
addb
add
add
add
mov
add
xchg
add
andb
addb
add
add
add
push
add
add
push
add
add
add
js
add
nop
sgdtl
pusha
sub
add
inc
add
inc
add
add
add
inc
add
add
aaa
sbb
cmp
jno
scas
aas
inc
inc
xchg
inc
inc
mov
dec
or
dec
jmp
dec
out
pop
push
cmpsb
in
push
xchg
jge
pop
adc
push
inc
cwtl
sbb
add
dec
adc
sbb
sbb
adc
pop
xchg
lret
cmpsb
ljmp
addl
push
lret
add
lcall
fsubrs
pop
sti
int
xchg
rcr
mov
hlt
call
mov
sbb
and
daa
enter
int
enter
lret
mov
aam
ficompl
fs
into
loopne
or
out
out
ljmp
loope
cld
inc
clc
inc
testb
adc
std
mov
test
add
orb
in
jne
and
repnz
pop
cmp
sbb
subb
daa
sub
lea
add
push
sbb
mov
ds
imul
adc
lcall
pop
mov
jle
in
insl
and
pop
test
lock
push
or
sub
push
mov
in
shrl
loop,pt
cmovge
cltd
mov
jo
repz
push
or
or
clc
push
jo
and
test
lret
enter
add
lods
jge
rcll
xchg
les
xchg
mov
loop
mov
inc
lods
xchg
cmp
xor
cwtl
lds
fisttpl
dec
sub
push
es
outsl
cmpsl
pop
mov
xchg
push
xor
aam
mov
arpl
aam
lock
sarl
push
mov
push
xor
hlt
ret
sti
dec
pop
pop
inc
add
pusha
jb
insb
dec
jae
sbb
or
les
cwtl
ficoml
and
sub
push
imul
idiv
enter
ret
add
jnp
adc
outsl
std
sub
pop
adc
lods
xor
sub
cmp
push
jle
add
ljmp
xchg
jmp
add
mov
mov
dec
cmp
xor
shlb
inc
loope
xor
adc
xchg
out
subl
jl
push
and
enter
mov
pop
push
movsb
jle
xor
jb
out
sbb
in
dec
filds
cwtl
lahf
push
add
adc
sbb
dec
leave
fidivl
xor
scas
andl
fsubs
lods
sbb
in
pop
xor
cmp
xchg
js
icebp
xor
in
stos
js
andb
push
jae
mov
repz
inc
cmp
fmuls
mov
aaa
cmp
and
sbb
push
iretw
dec
jmp
out
mov
add
ret
cmp
mov
sbb
mov
inc
mov
repnz
cli
mov
lods
push
stos
mov
sub
pop
mov
sahf
in
lea
adc
push
sbb
add
addb
int
cmp
lds
shll
mov
mov
jne
into
adc
add
xchg
insb
test
les
lods
pop
sti
push
ljmp
fadd
test
mov
loopne
loopne
xor
test
test
inc
mov
outsl
repz
xchg
sarb
sub
in
es
andl
mov
jmp
pusha
out
les
adc
sub
ret
mov
ljmp
std
add
inc
hlt
out
loop
mov
hlt
adc
aas
xor
push
sub
scas
enter
fstl
popf
loop
jmp
pop
scas
mov
jle
in
stos
in
jbe
shlb
xor
aas
or
xchg
cwtl
mov
cmp
add
pop
lahf
and
mov
inc
cmp
pop
cmpsl
push
push
out
dec
push
ss
mov
push
fwait
mov
jp
add
movsb
or
addb
in
inc
arpl
mov
popf
jo
lea
addr16
inc
call
sub
mov
mov
mov
dec
jg
cmp
jecxz
addr16
imul
mov
popf
scas
push
rorb
aaa
lret
or
ds
je
mov
xchg
xchg
add
xlat
mov
pop
aad
cs
fcoms
or
xor
pop
sti
cli
imul
sbb
pop
mov
mov
and
iret
scas
cmp
pop
mov
push
shll
fimull
imul
int3
mov
cmp
inc
mov
ss
and
xor
jp
repnz
lcall
pop
std
sub
pop
movsb
or
shrb
fwait
scas
in
mov
sbb
popf
in
movsl
inc
adc
and
inc
je
jg
inc
je
dec
add
jp
pop
sub
mov
cli
adc
adc
adcl
or
cmc
pop
pop
shlb
push
dec
mov
jle
lds
xorb
inc
and
inc
dec
aad
mov
adc
sub
int
pop
xor
xchg
ret
xchg
dec
fnstsw
sbb
lods
or
sbb
jg
pslld
xlat
mov
outsb
push
je
xor
xchg
movsb
add
cmp
jmp
mov
inc
xchg
and
add
mov
fcmovu
push
or
aad
sbb
outsl
int3
outsb
push
ret
sbb
cmpl
ret
sbb
xchg
dec
enter
iret
out
sbb
scas
pop
xor
sbb
mov
pop
pushfw
je
adc
rcrb
xchg
lea
mov
mov
jbe
daa
xchg
bound
jnp
xchg
mov
xchg
mov
loop
jbe
xchg
mov
rcl
cli
jns
pusha
mov
stos
pop
push
xlat
std
daa
sti
enter
dec
test
push
pop
dec
mov
or
sarl
mov
pop
mov
aam
cmpsb
and
mov
add
lods
int3
xchg
imul
fiadds
add
cld
cmpsb
test
mov
es
shll
add
jne
sub
add
sbbl
into
sub
sbb
cwtl
xor
loop
pop
mov
faddp
or
iret
push
insl
jno
adc
hlt
lret
iret
fs
jbe
lret
add
cs
dec
push
mov
pop
lds
adc
and
xorl
popf
mov
out
xor
sbb
in
adc
cwtl
add
cmpb
aaa
test
xchg
js
insl
or
cwtl
pop
movsl
inc
jmp
scas
mov
mov
test
and
add
sub
in
push
dec
sahf
pushf
push
stc
xor
mov
mov
inc
cmp
ret
jbe
je
sbb
jp
and
xor
xchg
into
les
push
dec
sahf
jmp
lock
call
xor
dec
enter
or
dec
lcall
data16
cld
xor
push
pop
arpl
enter
dec
mov
jecxz
xor
loopne
mov
cld
xchg
xlat
lds
cmp
push
cmpsl
sbb
sbb
incl
xor
pop
cmp
and
mov
mov
sbb
jmp
movsl
pusha
push
pushl
adc
jno
mov
push
adc
movsl
push
mov
dec
std
jmp
fstpt
push
adc
daa
andb
xchg
lods
mov
push
and
ss
incl
iret
mov
pop
mov
lods
bound
mov
and
or
enter
cmp
mov
std
xor
mov
loopne
sub
scas
dec
and
ret
inc
push
mov
pop
std
in
cmpsb
xorl
push
dec
mov
add
inc
adc
sbb
fnstcw
and
add
enter
jne
icebp
int
or
out
jb
xchg
subl
pop
fidivrs
stos
sub
xor
movsl
xchg
xchg
sahf
int3
mov
fldl2e
xor
push
jns
push
xchg
mov
jo
sbb
mov
scas
pop
shlb
lcall
push
dec
add
xor
jg
pop
mov
adc
inc
out
mov
das
lahf
pop
or
cmp
inc
jnp
pushf
pop
xor
jb
fwait
add
out
outsl
adc
sub
pop
pop
xor
adc
fmul
into
sbb
push
in
aaa
roll
dec
fcmovnbe
fsubr
popl
jp
in
push
test
mov
clc
add
xor
aad
mov
ljmp
out
push
fsubr
shl
or
push
mov
jmp
hlt
or
jmp
test
loope
movb
ljmp
idivl
dec
xchg
out
outsb
fadd
loopne
or
xor
or
inc
data16
inc
sub
cmp
sub
loope
mov
pop
movl
adc
mov
mov
and
push
adc
mov
mov
lret
or
xchg
cmp
cmp
call
mov
adc
aam
mov
fcomi
push
and
cld
jae
adc
cmpsb
mov
cld
pop
cmp
std
push
notl
ss
mov
rcrb
jo
cmp
imul
xchg
dec
loopne
out
xchg
in
out
push
das
inc
push
lret
jo
dec
fdivl
add
rclb
pushf
test
inc
and
rcll
sbb
adc
xlat
imul
push
adc
icebp
leave
mov
jbe
or
cld
les
mov
icebp
mov
icebp
pop
cli
gs
pop
sbb
inc
fmull
out
add
inc
cmp
fst
scas
sbb
push
xlat
adc
shll
gs
push
mov
daa
addr16
outsl
mov
pop
lahf
je
mov
adc
jecxz
push
jo
mov
add
out
fwait
mov
xchg
and
add
mov
popf
xor
adc
jnp
ds
lcall
cmp
fstl
subl
dec
inc
into
mov
pop
sub
pop
mov
and
test
dec
cmp
cmp
testl
cmpsl
lret
sub
mov
aas
xor
pop
adc
push
inc
mov
clc
and
lods
dec
int3
push
sbb
sbb
pop
pushf
jae
mov
inc
adc
dec
out
sub
cmc
fdivrl
clc
outsb
xchg
gs
mov
xlat
mov
repnz
adc
sbb
and
ja
out
and
and
lret
rorb
shrb
mov
cs
rolb
clc
inc
mov
int3
mov
push
or
adc
jbe
dec
repz
and
lods
int
jp
ret
pushf
mov
and
les
mov
xchg
arpl
stos
or
jl
jle
add
cltd
jne
mov
or
mov
cmp
xor
mov
test
push
pushf
jecxz
jae
mov
xchg
add
sahf
jae
xchg
dec
push
movl
and
lret
insl
dec
pop
sub
add
pusha
mov
inc
xchg
lahf
mov
adc
jecxz
stc
shlb
cmc
push
std
and
and
or
dec
pop
inc
test
stc
or
xor
std
dec
pusha
in
call
push
clc
and
sbb
sbb
rcrl
in
mov
and
scas
xor
adc
stos
add
fstps
push
insl
outsb
scas
add
fsubl
and
mov
push
in
xor
mov
sub
hlt
fcmovbe
stos
mov
or
push
cmp
jg
sbb
movsb
cmc
pop
xorb
test
or
mov
fs
pushf
stos
mov
mov
enter
and
scas
lahf
sub
les
cmp
mov
cwtl
cmp
icebp
mov
add
jp
sub
icebp
mov
sbb
mov
ret
or
iret
cmp
enter
xchg
adc
mov
mov
andl
fs
clc
xor
test
out
sub
sbb
cld
sarl
sbb
test
dec
sbb
mov
xchg
adc
xor
in
push
lret
pop
mov
cwtl
lcall
sti
fidivs
jl
shl
pop
mov
mov
and
movswl
stos
xchg
mov
cli
js
mov
dec
mov
jnp
jae
and
cmc
mov
xchg
jbe
mov
jne
xchg
fwait
inc
ljmp
adc
xchg
jae
or
lods
push
fwait
mov
xchg
push
sub
in
repnz
adc
ffreep
xchg
call
ja
mov
leave
mov
add
lods
lods
ds
sbb
pop
pop
out
sub
sti
sti
and
or
outsb
cmc
jp
pop
shrb
and
sar
insl
bound
aam
sbb
pushf
repz
xchg
adc
ret
inc
push
loop
inc
repz
faddl
dec
jmp
cld
jbe
int3
or
sbb
pusha
stc
daa
sub
inc
push
adc
mov
lret
mov
sub
cmp
mov
clc
rorb
push
sub
dec
xlat
dec
ss
dec
adc
dec
dec
mov
stos
in
xor
push
add
sub
mov
xchg
xor
test
lcall
jb
popa
sub
cld
jb
add
dec
push
mov
mov
cwtl
mov
lods
push
ret
mov
outsb
sub
cli
scas
mov
pop
cmp
test
xor
sbb
dec
sbb
pop
imul
pop
ss
movsl
out
ret
xchg
push
into
jb
outsl
ja
xor
lret
lret
mov
subb
push
fsubs
aaa
int3
inc
add
sbb
repnz
sqrtps
sar
mov
add
loop
lock
push
sub
pop
mov
psllw
jb
aaa
call
fsubr
push
fucomip
jg
adc
sub
fwait
jno
cmpsb
adc
and
mov
inc
insl
jnp
cmp
sub
cs
fiadds
mov
cmp
ficoms
inc
add
ja
cmpsb
inc
jmp
ficomps
sti
jle
ja
inc
lcall
insl
daa
xchg
adc
xchg
mov
push
data16
jnp
cmp
test
fdivrl
divl
jns
xchg
fsubrl
pop
jae
ja
out
lea
aad
push
adc
inc
pop
xchg
sbb
or
nop
pop
movsb
test
test
jmp
out
les
fs
dec
sbb
jg
je
mov
cmp
icebp
cmc
jne
dec
sub
mov
sbb
xor
cwtl
pusha
ficompl
sub
xor
or
ret
pop
sbb
testl
xchg
lea
or
jge
sahf
mov
push
cmp
out
leave
inc
adc
jno
or
jmp
nop
adc
xlat
loopne
bound
mov
and
testl
int3
lret
dec
push
movsl
sub
lahf
adc
ret
mov
adc
inc
pop
sub
dec
mov
cmp
or
jecxz
cmp
rcl
int
ds
xchg
jno
and
mov
mov
or
sbb
or
jge
mov
fs
pop
stc
out
lock
sub
push
popf
inc
cmp
fidivl
or
push
sbb
cmpsl
pop
push
push
dec
mov
mov
stos
push
cmp
shrb
int
mov
lods
add
xchg
pop
out
insl
test
mov
jge
pop
dec
adc
mov
jnp
mov
nop
jno
or
dec
sub
cli
xchg
cld
xor
push
push
add
dec
jge
mov
mov
cmp
lock
sbb
add
push
mov
rcrl
leave
pop
sbb
pop
insb
or
shrb
fstpt
xchg
loop
and
pop
xchg
stos
push
out
add
popf
pop
jg
icebp
inc
dec
push
sub
test
jns
add
nop
movl
inc
jge
push
test
mov
jecxz
jnp
dec
pop
mov
jb
cli
mov
cld
sub
imul
cmpsb
in
lret
dec
gs
sub
dec
loope
insl
out
rcrl
inc
popl
outsb
andb
mov
loope
fildll
insb
mov
xor
sub
push
mov
imulb
or
and
sub
fcomps
pop
ficoms
mov
hlt
inc
cmpsl
ret
shlb
push
ret
or
mov
std
cmpsb
sbb
mov
in
gs
push
dec
mov
mov
pop
xor
add
mov
jno
jl
push
repnz
cmp
stos
aas
leave
adc
dec
mov
dec
mov
int3
inc
stos
inc
enter
mov
daa
xor
test
cmp
pop
or
or
xchg
xchg
inc
adc
lret
imul
dec
es
ret
int3
mov
mov
test
rclb
jo
push
fbstp
xchg
mov
leave
sub
push
cld
int
sbbl
pop
outsl
jmp
xchg
mov
loope
xchg
mov
mov
sub
jg
pop
and
ret
aaa
add
mov
sbb
fstl
or
rcll
fidivrs
fsubrs
xchg
jmp
ja
jle
jmp
cmpsl
fiadds
fnstenv
cltd
scas
ljmp
neg
adcl
or
jns
js
fldlg2
jo
or
sub
arpl
aas
dec
sti
stos
mov
out
sub
mov
stos
add
enter
mov
test
dec
xchg
mov
mov
xchg
faddl
fcmovbe
lods
cs
pop
xlat
movsb
das
fisubs
bound
mov
xor
mov
stos
cwtl
mov
addr16
pop
in
xor
mov
push
cmpsb
icebp
dec
jle
mov
jo
mov
mov
jge
call
add
or
jmp
ljmp
push
adc
mov
xlat
mov
bound
outsb
shlb
lods
xchg
aaa
shlb
leave
cmp
repz
std
mov
nop
into
lret
out
aad
orl
or
xlat
jecxz
dec
adc
pop
cmp
mov
test
push
mov
scas
popf
adc
push
mov
push
mov
sub
loop
mov
pusha
jne
xchg
mov
cltd
das
lahf
cmp
xor
jg
outsb
faddl
adc
lock
sbb
sbb
into
or
jge
xchg
push
sbb
stos
inc
dec
sahf
sti
arpl
sub
push
ds
rol
imul
jl
daa
orl
push
outsl
imul
test
adc
jno
push
jno
je
mov
push
test
xor
jns
notl
cld
decl
mov
inc
mov
push
add
pop
cli
enter
cmp
inc
enter
into
iret
cs
xchg
and
mov
mov
jmp
stc
push
mov
hlt
mul
stc
jmp
jl
jno
leave
cwtl
xchg
popa
ja
mov
mov
push
rcr
int
fcom
out
sbbl
fsubp
std
mov
jmp
cmp
int3
int3
push
fsubr
hlt
sbb
loopne
in
jb
insl
cltd
mov
adcb
jbe
lods
nop
dec
test
jmp
addl
mov
mov
mov
pusha
popf
adc
movsb
pop
popf
mov
jg
ljmp
dec
inc
push
dec
inc
cmpsb
lea
pop
push
pop
jle
imul
inc
inc
push
addr16
pop
lret
jne
pop
jne
inc
jne
pop
jno
dec
movsb
push
jp
jb
mov
inc
mov
sub
cmp
cmp
and
jnp
aaa
adc
popf
movsb
clc
adc
pop
es
std
cmp
fildl
or
rcl
aam
inc
adc
pop
lds
push
add
or
jmp
xor
cmp
fnsave
mov
movsl
dec
xchg
sbb
lods
enter
rcr
or
add
push
aas
hlt
pop
xchg
mov
sar
fyl2x
insl
lcall
out
call
dec
sti
cs
out
out
or
mov
jmp
ljmp
or
pop
mov
xchg
xor
mov
popf
mov
add
sub
and
js
lods
jb
subl
jns
pop
loopne
jp
xchg
sbb
jae
push
inc
shr
inc
cli
insb
or
sub
pop
pop
inc
pop
push
rcrl
addr16
push
sub
add
gs
jbe
hlt
or
jb
int
add
outsl
cmpsl
repnz
lods
or
xor
and
or
lock
idiv
divb
adc
pusha
xchg
mov
pop
orl
loop
and
mov
int3
shr
sti
or
cmc
addr16
aad
push
jl
push
out
sbb
fiadds
adc
insl
repnz
fstpl
dec
push
inc
or
push
xor
mov
enter
sub
fmuls
jne
pop
and
in
mov
leave
ret
in
insb
xchg
test
inc
push
sub
cmp
adc
push
dec
and
xchg
rcr
ret
lock
clc
ds
out
push
dec
mov
movsb
sarb
mull
addr16
gs
out
stc
mov
mov
lahf
nop
mull
out
in
repz
fsubrl
dec
dec
mov
aad
lock
jmp
in
repz
mov
out
and
bnd
ret
mov
xchg
movsb
out
popf
cwtl
mov
fsubp
pushf
sbb
lcall
add
jne
add
jb
bound
jp
jnp
repz
arpl
movsl
test
js
jb
cmp
loope
iret
xor
ror
and
rol
rorb
or
xor
sub
pop
xor
or
shll
shlb
stos
adc
xchg
loopne
test
ds
mov
lds
pop
jmp
or
lcall
daa
push
mov
clc
stos
lods
mov
add
clc
stos
out
mov
std
in
in
ljmp
call
sub
sar
mov
jmp
imul
add
in
pop
push
pop
push
sub
ss
xor
mov
sub
and
mov
sub
cmp
jb
pop
push
pop
push
sbb
adc
dec
mov
and
inc
imul
cmp
pop
mov
sbb
nopl
imul
arpl
flds
inc
xchg
cwtl
das
in
adcl
lock
cli
out
clc
adc
xchg
je
loopne
cmpsl
push
stc
loop
push
mov
cmc
rorl
cmpsb
cmp
lret
sub
shrl
mov
xor
les
scas
test
frstor
cmpsb
xor
mov
xchg
lods
sbb
sbb
cli
jmp
fiadds
xor
inc
dec
pop
lea
xor
jmp
stos
lahf
data16
pop
or
pop
xor
mov
popa
ds
pop
loopne
xor
xor
sbb
in
or
fs
pop
adc
mov
sub
mov
fs
mov
lds
xchg
inc
push
cmc
or
cltd
aas
cmp
or
and
xor
or
aaa
pop
or
pop
incb
adc
flds
int
mov
fdivrp
les
jp
out
ror
lods
loopne
jae
adc
jg
imul
push
push
dec
std
pop
shll
cs
lret
inc
inc
pop
pop
push
pop
push
push
ret
lods
adcb
mov
mov
loop
mov
mov
jge
cmp
xor
push
data16
aaa
jns
push
fwait
adc
jae
cld
loope
sub
mov
mov
mov
popf
xchg
andl
jno
out
jge
js
adc
mov
outsl
popf
xchg
cltd
inc
mov
mov
dec
xchg
pushf
in
xchg
sub
shr
imul
mov
xchg
jns
mov
fisubs
xchg
push
cmc
or
pushf
outsb
pop
mov
mul
les
pause
popa
or
mov
ret
ss
dec
sahf
mov
hlt
in
xchg
outsl
mov
arpl
pop
jp
imul
and
inc
pusha
fs
pop
test
lcall
sub
jnp
jae
lods
ljmp
inc
dec
jl
jns
xor
xchg
dec
xor
inc
and
inc
xor
sub
mov
and
mov
sti
xor
mov
jl
mov
cmp
cmpsl
cmp
icebp
and
mov
add
fcompl
push
aaa
lods
arpl
andl
icebp
mov
in
stc
jecxz
iret
out
call
xchg
fdiv
push
push
cmc
repz
pop
cli
int
rcl
cmp
std
push
push
fcmovne
pushf
icebp
fcomps
dec
push
int
out
mov
mov
jo
sub
cmp
adcl
mov
lcall
push
das
jns
mov
push
test
jecxz
adc
cmp
xchg
jmp
pusha
cmp
and
sti
jbe
xor
inc
xchg
inc
cmp
cmp
cmp
loop
arpl
cmp
in
sbb
shlb
or
inc
rorl
sub
in
dec
out
pop
jne
adc
push
stc
xor
dec
outsb
add
lock
dec
pop
outsb
scas
sbbb
dec
xor
in
push
sbb
push
or
sub
aaa
mov
out
arpl
cwtl
loopne
sub
in
outsl
icebp
popf
mov
xchg
movsb
ret
rcrb
inc
out
lcall
cli
outsb
je
inc
or
push
dec
jne
in
sbb
fs
mov
roll
xor
xor
inc
mov
xor
push
cmp
int3
dec
movl
das
inc
pop
sub
push
adc
push
ficomps
and
pop
ss
adc
sub
bts
mov
or
push
rolb
jnp
fisttps
sbb
jp
ljmp
mov
stc
out
add
lret
leave
daa
bnd
in
pusha
sbb
sbb
clts
pop
fsubrs
addr16
cmpsb
test
cs
cs
arpl
fistl
enter
sub
jp
lret
mov
out
bound
fsts
nop
mov
or
add
push
out
dec
lcall
mov
outsl
aas
cmp
inc
mov
notb
stc
sbb
add
push
shrb
frstpm(287
or
jns
or
mov
jge
imul
push
aaa
sbb
mov
popf
and
or
mov
loope
inc
cmpl
inc
add
or
cli
xchg
jge
div
call
lret
lea
das
lret
mov
mov
mov
cli
cmpsb
xchg
mov
enter
mov
xchg
rolb
jecxz
mov
flds
arpl
lcall
cmovb
mov
paddd
cmp
cmp
push
pop
jg
mov
pop
arpl
add
add
xor
cmp
add
jle
fstl
out
test
imul
pop
and
enter
insl
loopne
push
mul
cld
mov
lods
xorl
lods
fnsave
mov
mov
or
dec
adc
cltd
sub
aam
mov
sub
out
loop
mov
adc
jnp
add
insb
inc
xchg
or
cwtl
subl
mov
les
add
ds
fwait
add
lds
add
ss
jecxz
jmp
and
jecxz
pusha
sub
lcall
xchg
add
ss
lds
mov
and
ret
and
pop
outsl
mov
xor
pop
xor
adc
xchg
fs
mov
sbb
int3
cli
rorl
pusha
push
dec
mov
fildl
int
pop
push
jecxz
mov
xchg
add
fbstp
cmp
test
addr16
jae
sub
xchg
mov
mov
cmp
jmp
dec
lods
fdivrp
mov
test
sub
mov
add
push
lds
push
out
inc
xor
xor
dec
jle
push
xchg
mov
shrl
inc
bound
enter
inc
bound
xor
rolb
inc
in
cmp
mov
and
mov
inc
and
outsb
add
xor
sti
pop
inc
jo
push
gs
in
mov
enter
aad
ret
sbb
out
fcmovnbe
jp
add
sbb
cmpb
xor
push
adc
fists
lds
call
push
incl
out
fisttpl
ds
popa
cmp
out
and
mov
out
fwait
mov
cmc
loope
mov
mov
into
inc
push
adc
shl
inc
dec
cmp
cmpl
cmpsl
pusha
int
fs
pop
fldcw
insl
js
inc
push
ljmp
xor
outsl
je
sub
or
sub
cmp
and
sbb
rcll
push
fsubrs
and
mov
leave
sbb
xchg
in
aaa
lea
sbb
xlat
loopne
mov
shll
and
inc
and
popf
xchg
lock
jmp
push
fcomp
addr16
xor
int
or
cld
int3
lcall
ja
lods
pop
jmp
push
arpl
sbb
mov
mov
stos
popa
lret
sub
pop
jno
jbe
xor
mov
sub
push
inc
shll
notl
jne
adc
lock
test
es
in
sahf
test
insl
and
jle
cmp
lret
push
mov
sub
sbb
sbb
jge
or
fisttpll
xor
xor
mov
sub
ljmp
std
pop
mov
cmp
inc
in
inc
inc
mov
and
es
sbb
ja
adc
ljmp
adc
andb
mov
push
xchg
mov
sbb
xor
sbb
pushf
in
add
push
or
shrb
mov
xchg
lods
cs
cmpsb
cmp
pop
lds
aas
scas
lahf
hlt
sbb
mov
jmp
inc
ja
test
pop
xlat
ret
sbb
cmc
dec
xor
test
xor
pusha
shrb
movsl
dec
mov
cmp
xchg
and
push
fldt
dec
xor
leave
rep
xchg
sbb
sbb
outsl
cmc
add
lahf
pusha
int3
icebp
pop
xchg
or
sub
push
push
jecxz
ret
clc
mov
call
mov
jmp
mov
fstpl
bound
and
mov
mov
xchg
cmp
pop
add
xlat
or
xchg
fdivl
ljmp
pusha
fsts
jp
in
ds
pop
sbb
adc
ret
sub
aaa
nop
lcall
adc
push
cmp
inc
jg
or
xchg
inc
mov
jmp
gs
and
fdivl
in
aaa
pop
cltd
mov
xchg
inc
sub
and
dec
aas
sub
rorl
test
xchg
je
sub
lock
dec
mov
int3
xor
js
pop
clc
jbe
icebp
mov
rcrb
sarl
pop
test
popf
sbb
lds
icebp
cli
adc
jp
add
pop
mov
or
lds
push
iret
loope
mov
mov
inc
dec
jmp
push
call
push
lcall
fbstp
and
jno
push
stos
repnz
repz
push
xor
ror
sbb
add
cmp
jp
add
int3
pop
lcall
imul
sbb
cld
in
sub
mov
lahf
adc
inc
fs
pop
or
aam
cmc
iret
adc
pop
adc
shrb
ret
sub
sbb
jl
cmpsl
popf
mov
mov
test
inc
lahf
insb
int3
jbe
fisttpl
std
jle
push
sbb
je
inc
clc
jne
shl
mov
leave
or
cmp
cli
mov
aas
xchg
cmp
inc
in
imul
mov
sbb
test
hlt
sub
inc
push
push
sbb
add
sbb
mov
jns
cmpsl
xchg
jbe
cmc
ljmp
and
cmpsl
and
xchg
jo
fadds
dec
mov
stc
clc
or
and
push
mov
push
subb
fistl
sub
test
sahf
pop
mov
push
std
jecxz
or
push
sub
or
popf
lods
sbb
mov
and
fists
xlat
push
add
adc
icebp
mov
jecxz
xlat
nop
gs
lret
sub
movsl
fldt
fwait
in
shrl
xor
fnstcw
lock
lods
inc
loope
insb
dec
aaa
shlb
pop
jmp
mov
pop
dec
dec
loop
fisttpl
call
mov
cwtl
pop
movb
je
stos
imul
notl
insl
pop
clc
add
push
iret
sub
les
pushf
pushf
dec
daa
dec
jnp
add
push
add
aam
mov
xchg
inc
jno
push
or
jnp
loopne
imul
mov
sbb
insb
pop
hlt
sub
jae
inc
or
fnstsw
xchg
les
inc
cmpsl
sub
adc
sbb
cmpsl
gs
pushl
push
fdivrp
outsb
pop
mov
adc
pop
das
inc
scas
and
push
lahf
out
add
mov
fnstsw
pop
shll
add
jmp
mov
sub
mov
xor
jns
add
sahf
fmul
imul
adc
loopne
fdivr
push
add
pop
fnstcw
bound
jg
mov
mov
sbb
dec
adc
xchg
cmp
and
dec
cmp
sbb
push
pop
jp
jl
inc
add
dec
loope
dec
in
xchg
add
mov
sbb
movsb
and
inc
mov
sahf
pop
mov
cld
sbb
ja
xchg
mov
ds
repz
adc
xor
cmc
outsl
orb
jmp
or
sub
dec
dec
fadds
out
les
add
and
inc
movsl
pop
xor
popf
inc
mov
xchg
mov
xor
hlt
xor
mov
xchg
push
mov
add
cmc
pop
push
push
jo
cs
mov
jp
adc
aad
in
cmpsb
out
jbe
loopne
aas
or
add
aas
pushf
pop
xchg
mov
sbb
call
mov
clc
rcrb
das
inc
leave
inc
ljmp
dec
in
enter
sbbl
sbb
push
outsb
mov
dec
jo
ljmp
sub
ss
jnp
sub
scas
data16
loope
mov
lods
and
sbbl
clc
and
pop
push
cmp
in
scas
stc
cmp
jecxz
push
pop
stos
add
fcomps
xor
adc
pop
fnstcw
cs
testb
in
js
test
pop
ljmp
mov
add
xlat
lock
cmpsb
push
inc
adc
xchg
push
and
jg
xchg
push
xor
and
aad
push
or
test
fwait
mov
testb
das
pop
inc
in
xor
push
mov
aas
sbb
out
pop
sbb
pusha
or
repz
inc
test
stos
andps
pop
sti
subb
movsl
imul
cmc
push
mov
push
or
mov
sbb
cs
dec
lds
or
cli
jo
sti
cmpsl
add
mov
dec
pop
jbe
mov
lods
push
stos
add
popf
addr16
jo
or
testb
cvtpi2ps
and
dec
mov
loope
sbb
int3
aas
cmp
fnstenv
inc
test
jno
test
sbb
cs
cmp
sbb
je
lret
roll
insb
into
and
orl
push
std
xor
lahf
xchg
push
jp
adc
jo
and
xchg
or
mov
fadds
dec
mov
fidivrs
addl
sbb
int
movl
faddp
imul
or
jae
ret
xchg
je
cmp
pop
and
push
push
adcl
rorb
in
hlt
clc
pop
mov
sub
sbb
inc
pop
out
dec
fsubr
mov
xchg
mov
imul
xor
jns
call
mov
xor
scas
mov
mov
in
and
cmp
pop
addl
xchg
sbbb
dec
jo
adc
ds
pop
or
in
insb
iret
xchg
push
xor
fs
sti
arpl
iret
pop
dec
pop
cmpsb
filds
inc
add
mov
mov
xchg
fwait
mov
stc
arpl
sub
iret
shrb
mov
lock
xor
sbb
jg
or
bound
sub
pop
jae
lcall
out
mov
fidivs
sbb
jg
popf
in
adc
dec
les
clc
cmp
push
mov
scas
mov
mov
mov
adc
xchg
xchg
adc
cmp
lcall
adcl
movsb
add
lods
addl
dec
push
dec
les
js
xchg
call
pop
sbb
jl
fsts
inc
xchg
insl
fisubl
xor
dec
pushf
fdivl
popf
hlt
pop
sbb
push
sub
movsl
addr16
sti
xor
sub
push
push
sbb
popf
or
leave
repz
xchg
xor
cli
lock
ds
pop
jecxz
xchg
int3
and
mov
cmp
xchg
int
addr16
shll
mov
and
jle
inc
fsubl
pop
push
inc
push
scas
jg
jmp
inc
sub
loop
into
dec
icebp
mov
lret
or
sub
adc
retw
test
add
pop
in
insb
fldcw
xlat
xchg
andl
pushl
add
add
push
jne
loop
jnp
mov
gs
jae
cltd
insl
push
mov
stos
rol
outsb
xor
jmp
sbb
push
jge
dec
lcall
xchg
xor
mov
push
fwait
pop
mov
dec
xchg
mov
daa
in
test
dec
mov
mov
repnz
outsl
sarl
pop
repz
jb
iret
cld
mov
sub
cmpl
movsb
jg
loopne
lcall
adc
mov
in
test
rorl
or
pop
cmpsl
jns
pop
js
pop
flds
inc
je
aad
stos
out
outsb
inc
stc
arpl
sub
cmp
add
fs
notb
pop
int3
jb
mov
jns
bound
sub
pop
add
mov
cltd
aad
js
sti
pushf
inc
sbb
xchg
call
mov
pop
push
dec
sub
je
jno
cwtl
fldl
push
cmpsb
push
inc
or
mov
outsb
aaa
cltd
mov
mov
outsl
inc
inc
add
dec
add
mov
mov
sarb
sar
hlt
xchg
mov
hlt
adc
je
pop
sub
stc
adc
push
xlat
scas
adc
stos
mov
push
fimull
lahf
inc
and
rcll
jbe
insl
cmp
push
xlat
loopne
xlat
xchg
pop
test
mov
cld
cmp
movl
push
leave
dec
sub
mov
lock
and
sub
xchg
loop
jl
sbb
sarl
jge
dec
cld
or
or
inc
mov
fisubrs
rorb
aaa
idiv
stos
repnz
dec
nop
divb
dec
les
jbe
bound
mov
lret
dec
movsb
fadd
fs
icebp
xchg
xchg
push
test
cwtl
push
sbb
test
jge
xor
mov
repnz
icebp
decl
sub
mov
test
mov
push
cmc
sub
jne
addl
imul
push
loope
add
push
or
outsb
nop
jmp
mov
fs
xchg
fisttpl
sub
into
sub
insb
insb
jl
push
fsubrs
or
push
es
fdivr
and
ficomps
inc
addr16
add
and
mov
outsb
je
and
cmp
icebp
ds
stos
clc
or
xchg
ficomps
mov
jae,pn
mov
test
push
lcall
mov
mov
shll
xchg
idivl
cmp
xor
movlps
fxch
aad
inc
xchg
adc
stc
and
sub
add
and
in
inc
nop
mov
enter
jnp
cmp
jns
xor
mov
test
mov
nop
jne
ret
sub
fisubl
cli
pop
cli
jb
cmpsl
cwtl
mov
popf
jmp
fimull
je
data16
cld
xchg
push
jp
mov
outsb
aaa
cmp
std
call
xor
pop
pop
xor
int
push
ret
stos
xchg
aas
pop
int
jne
or
push
cmp
mov
gs
mov
jnp
cmp
sbb
aaa
xor
popf
or
aas
pop
inc
dec
cmc
xor
jo
int
mov
push
out
xchg
cmp
xor
inc
cmp
xor
jns
add
sub
std
loop
js
inc
outsb
out
roll
jp
mov
add
or
mov
daa
faddl
std
lea
idivb
sub
icebp
enter
cs
jmp
pushf
ret
pop
mov
cltd
pop
cmp
and
jecxz
or
pushf
adc
mov
dec
insl
shlb
scas
mov
cmp
fwait
mov
shrl
out
dec
push
cwtl
in
jl
xchg
dec
inc
repnz
jp
divl
xchg
sahf
sbb
cmpsb
lods
adc
inc
ljmp
in
mov
inc
push
cli
adc
pop
mov
jp
imul
ss
mov
fs
sbbl
push
repz
jl
push
leave
cmp
jo
mov
mov
push
jb
mov
shrb
popa
push
rcrl
lods
rclb
sti
or
call
mov
enter
push
lcall
mov
je
pop
fdivrl
mov
or
xchg
adc
mov
pusha
push
xchg
hlt
mov
shl
xor
push
mov
pop
bound
push
negb
in
outsl
push
idivb
sbb
fs
push
mov
inc
mov
and
in
repz
test
stos
nop
xor
jae
mov
in
dec
xchg
fisttpll
xor
sbb
mov
jge
xchg
pop
lods
sar
aad
ds
in
gs
stos
test
inc
cmp
ret
in
fsubl
jg
add
adc
push
xor
std
out
cmp
xchg
jmp
fldt
sahf
dec
jp
rcll
inc
jg
mov
addb
fldt
es
or
push
leave
fmull
sbb
outsl
orb
push
add
nop
xor
and
sbb
lods
mov
mov
stc
divl
inc
inc
test
nop
iret
int3
mov
jge
cmpsb
sub
and
inc
lret
dec
loopne
insl
cwtl
push
push
mov
mov
pop
in
xor
daa
mov
out
add
enter
fildll
fidivl
mov
outsl
aaa
jno
scas
mov
xchg
mov
faddl
mov
stos
add
repz
and
aaa
sbb
int
sbb
xchg
xchg
inc
aaa
pop
imul
nop
mov
xchg
fwait
sbb
shrl
int
xor
mov
data16
mov
bndstx
dec
in
js
pop
les
insb
pop
clc
xor
imul
cltd
xchg
out
sarl
fstpl
push
adc
loope
add
add
lcall
and
push
inc
ret
lods
mov
in
mov
lock
mov
cmp
mov
enter
std
dec
add
test
mov
ja
cmp
inc
je
inc
jmp
xchg
cltd
repnz
aam
dec
int3
jns
jecxz
xchg
dec
cs
iret
push
jno
or
je
in
mov
out
add
and
cli
test
pop
pop
xlat
std
es
sti
ds
or
push
adc
inc
adc
inc
repz
push
dec
push
daa
scas
mov
lock
pop
popa
sub
popa
jecxz
add
pmulhw
add
icebp
cmp
call
cs
stc
pop
push
mov
jge
enter
pop
int3
sub
xor
mov
popf
fsubrp
xchg
ss
out
bound
cmp
in
cmc
bnd
iret
mov
mov
movsb
and
xchg
sub
xchg
sahf
pop
inc
sbb
mov
add
cmpsl
call
push
add
cmc
mov
dec
mov
sub
or
mov
cmp
dec
pop
jns
add
ret
stc
mov
sub
in
fwait
lcall
scas
jg
aaa
mov
adc
fmull
sub
sbb
sub
add
js
ret
dec
sbbb
fs
push
xchg
and
cmpsl
cmpsb
mov
repz
stc
in
sbb
sbb
aad
mov
lahf
imulb
adc
lahf
xchg
mov
or
cs
mov
mov
outsl
xor
lock
stc
add
pushf
sbb
aas
xlat
or
pop
rcll
pop
mov
or
int
mov
mov
lods
out
fcoms
ja
xchg
cmc
clc
lods
incb
add
cltd
fisttpl
sti
stc
loopne
shll
js
ljmp
jno
imul
rcl
mov
pop
cmp
fnop
jne
push
xor
mov
hlt
outsl
imul
shll
push
mov
repnz
sbb
mov
add
xchg
shll
xlat
push
push
inc
in
icebp
fldl
loopne
in
mov
iret
dec
subb
adc
mov
pop
leave
inc
mov
xchg
icebp
adc
inc
push
jg
lcall
sbb
roll
xchg
pop
dec
sbb
adc
add
in
popf
fisubs
in
dec
jnp
push
scas
mov
pop
pop
test
add
cmp
sahf
mov
pop
adc
mov
mov
into
or
jge
out
imul
jo
xchg
pop
stos
daa
and
in
rcll
in
push
iret
cmp
leave
js
xchg
inc
mov
pusha
push
add
mov
cld
sbb
leave
and
ja
adc
xor
lret
shll
mov
inc
movsl
dec
jmp
xchg
pop
push
mov
sbb
addb
mov
adc
jle
popf
test
cli
adc
test
iret
push
or
and
mov
ret
cmp
sbb
cmpsb
iret
mov
push
lods
movsl
sbb
dec
daa
cltd
ret
repnz
dec
mov
cmpsb
imul
and
inc
hlt
ror
movsb
sahf
outsl
popa
jne
aam
aaa
out
lahf
icebp
mov
dec
or
add
faddl
mov
push
cwtl
inc
and
xlat
xor
fisubrl
push
out
or
sbb
mov
push
fisttpl
fxch
je
xor
lret
cmp
andl
nop
lret
pop
inc
mov
ror
pop
xchg
mov
dec
outsb
jmp
ja
add
jbe
push
inc
repnz
ror
xor
aas
xor
fs
or
punpckhdq
pop
sub
sbb
mull
inc
int
pop
pop
fcoms
insb
mov
cwtl
add
shrb
outsl
ds
gs
pop
mov
mov
shll
test
sbb
cwtl
negl
pop
mov
js
cltd
push
push
mov
loope
lret
fsubl
imul
dec
push
ret
fwait
clc
inc
pop
adc
into
pop
mov
inc
lods
call
jl
cmc
pop
mov
xchg
fsubl
arpl
dec
test
outsl
inc
inc
jecxz
ss
pop
dec
aaa
out
int
aad
xor
popa
pop
pop
addb
jecxz
xchg
adc
int
push
lret
mov
mov
loop
enter
push
scas
out
sub
sub
push
dec
sub
sahf
gs
and
xchg
addr16
movsb
and
int3
pusha
gs
fwait
ja
fdivl
mov
in
lcall
je
push
hlt
pop
arpl
pusha
outsb
jmp
mov
out
lods
or
addr16
pushf
adc
pop
test
or
mov
popf
lds
adc
xor
nop
imul
ret
aas
sti
lods
cmp
add
and
mov
dec
pushf
ret
test
out
mov
shll
xlat
dec
cmpsb
out
mov
cli
xchg
and
enter
push
test
test
cld
jbe
add
xchg
jo
fisubl
or
xor
jmp
cwtl
inc
and
mov
inc
loope
add
jge
cli
mov
fstpt
push
and
cmp
mov
je
mov
call
mov
sub
imul
sbb
insl
test
dec
clc
adc
aas
jp
rcrl
xchg
jl
push
leave
cmp
jno
xchg
push
das
imull
inc
adc
xchg
pop
mov
pop
mov
cmpsl
arpl
push
dec
sti
lods
in
adc
xor
rclb
xchg
mov
fdivr
les
dec
call
cmp
pop
inc
pop
cltd
lock
movsl
sarl
push
xor
in
out
pop
jns
jae
push
mov
mov
imull
pop
mov
cwtl
push
mov
dec
insb
dec
subl
in
out
fisubs
or
jecxz
cwtl
sbb
loop
push
hlt
or
hlt
fstpt
pop
jmp
ret
pop
cmp
in
dec
ja
adc
jecxz
jg,pn
and
iret
call
jo
xchg
test
cmp
sbb
cmp
xor
and
orl
xchg
xor
shrl
inc
outsl
nop
int3
fsts
in
ret
iret
mov
add
lcall
xlat
xchg
pop
inc
sbb
lock
cli
xchg
jb
push
jg
cwtl
movsb
out
cmp
cld
iret
and
or
or
push
push
comiss
cmp
arpl
cld
add
sub
test
das
nop
jo
sbb
ret
xor
std
push
hlt
js
popf
popf
loop
in
movsb
jns
inc
or
push
lret
push
inc
das
scas
mov
and
and
jle
fnsave
mov
add
sub
add
dec
jno
outsb
lret
rcrb
jae
pop
pop
stos
mov
sub
mov
sub
fiaddl
aad
aas
cmp
das
mov
insl
mov
int
mov
nop
adc
add
pop
push
jl
stos
test
jg
daa
or
push
fisttpl
fxch
je
fs
lock
xor
inc
mov
xchg
fidivrl
push
adc
clc
adcl
add
sub
push
fstpt
dec
repnz
in
test
repz
mov
mov
popa
das
out
push
sub
lods
dec
es
aaa
cmp
cmp
jecxz
jp
je
les
gs
pushl
pop
in
and
idivb
int3
outsb
jp
iret
cmp
sbb
add
adcl
and
xor
in
repnz
mov
jmp
dec
push
pusha
lret
repz
jle
or
test
gs
sbb
dec
jmp
cmpl
lock
mov
pop
cwtl
push
jecxz
xchg
xor
out
std
pop
fldl
cmp
mov
inc
jmp
push
cwtl
das
dec
fdivrl
push
or
or
pusha
ret
push
mov
dec
cmovp
sahf
xchg
in
mov
mov
jns
lock
into
aaa
xor
rcrb
out
leave
into
jno
into
hlt
xchg
cmpsb
inc
sub
ds
or
and
mov
imul
and
add
dec
mov
sbb
sbb
testb
test
sbb
pop
xor
repnz
push
or
enter
negb
mov
aaa
cmp
add
out
fmul
in
test
sti
pushf
xorl
pushf
push
push
je
mov
loop
rorb
insl
lock
aad
jmp
out
in
call
aaa
or
cmpl
movsb
lods
xchg
mov
mov
dec
add
xorb
push
les
outsl
pop
inc
or
xchg
fcmovu
mov
sar
sarb
mov
mov
lock
xor
stos
push
leave
and
insl
jg
addl
cltd
andl
shl
call
fdivrl
jl
fistpl
loopne
xlat
ds
sub
jae
xchg
call
push
lea
pop
ficomps
mov
adc
push
shl
pop
or
and
loopne
push
adc
imul
pop
in
cmc
addl
test
mov
incl
imul
add
jnp
rcrb
rorb
adc
imul
sbb
aas
or
out
xor
mov
inc
sbb
xor
imull
jb
inc
push
sub
inc
inc
lret
or
arpl
cltd
cmp
pop
fcompp
inc
pop
aam
lret
bound
cltd
out
addr16
mov
movsb
jb
nop
sub
fnstsw
popa
data16
cmp
adc
cwtl
lahf
xor
jecxz
push
rolb
