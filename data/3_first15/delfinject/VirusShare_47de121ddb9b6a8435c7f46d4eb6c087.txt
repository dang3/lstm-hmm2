test
cmc
das
cmp
push
dec
popa
outsb
out
fimuls
or
mov
test
push
mov
test
lahf
repnz
xchg
std
shll
mov
or
jge
enter
out
sub
ds
fwait
repnz
outsb
jp
rorl
pusha
or
jae
in
push
incl
pop
push
jmp
sbb
pop
adc
and
scas
mov
stc
mov
bound
xchg
xchg
in
cwtl
movsl
in
lea
mov
mov
mov
outsl
into
ljmp
xchg
jns
je
inc
mov
pop
test
imul
test
loop
dec
jecxz
aas
imul
sub
sar
sub
jmp
pop
mov
mov
loope
nop
mov
daa
mov
aas
movsl
fbstp
mov
js
shll
loope
jecxz
outsb
or
or
xchg
dec
sahf
pop
mov
icebp
lahf
shrb
mov
lods
sbb
mov
out
pop
or
mov
test
fs
test
in
mov
cmpl
adc
push
mov
movb
xchg
inc
test
stos
das
pusha
add
das
xchg
scas
push
scas
bnd
jp
push
xchg
mov
jmp
mov
aaa
xor
ret
adc
xchg
hlt
cmp
mov
push
jo
push
xchg
jl
stos
push
lock
mov
mov
lods
loopne
mov
movsb
add
mov
in
daa
into
daa
ret
negl
lahf
sbb
mov
test
dec
mov
mov
loope
pop
jecxz
jns
aaa
int3
stos
movl
jge
cmp
mov
or
mov
sub
pop
dec
enter
pop
arpl
mov
cmc
cmp
xchg
outsl
ret
adc
inc
ljmp
movsb
sahf
test
jb
mov
clc
sbb
ss
sbb
jg
ja
push
movsl
mov
outsb
out
andl
pushf
les
and
or
fisubl
popa
mov
jne
add
fs
je
jo
fnsave
pop
mov
out
lea
test
sub
in
test
and
cmc
inc
cld
loope
fnstsw
iret
test
jg
fsubl
or
lret
stos
imul
lea
jge
pop
scas
out
gs
icebp
repnz
xchg
lret
shlb
and
or
mov
clc
xor
xchg
sub
mov
or
or
ror
or
adcb
mov
or
lock
mov
les
stos
push
jecxz
inc
icebp
fs
les
mulb
or
push
maskmovq
notl
fisttps
fcomp
lds
xor
sub
push
pop
icebp
pop
cmp
pop
mov
mov
insl
popa
es
or
fimull
shl
fimull
ss
test
mov
aam
dec
pushf
mov
sbb
aas
pusha
not
rol
xchg
dec
or
out
sub
shrl
les
xlat
sub
pushf
sahf
dec
insb
jb
pop
xor
jg
addl
andl
in
fnstsw
test
push
incl
fwait
arpl
scas
pop
dec
test
ds
sbb
jmp
jg
fs
or
mov
sub
jg
push
scas
cmc
dec
jge
or
lret
add
add
inc
in
add
fs
add
jne
stos
stos
outsb
jg
call
push
lcall
mov
mov
or
fadd
dec
arpl
jmp
adc
jns
pop
into
jns
test
mov
loop
jg
das
out
test
jo
mov
popf
cmpsl
xchg
mov
and
jecxz
pop
adcl
vmaxss
jge
arpl
xor
ret
out
ljmp
je
cmp
lcall
cmp
adcb
scas
push
dec
pop
add
int
loopne
mov
push
xchg
dec
mov
xchg
enter
mov
sbb
xchg
shll
out
test
sti
lcall
cmp
popf
xor
cld
test
push
mov
and
pop
pop
ja,pn
fs
pusha
mov
leave
popf
pop
mov
fildl
insl
cmpb
xchg
xchg
lock
lea
mov
jl
inc
aad
js
pop
lods
sbbl
mov
enter
push
fimull
nop
ficompl
sub
fdiv
add
in
sbb
xchg
push
mov
orl
mov
popa
faddl
loop
inc
hlt
in
sub
xorb
punpckhdq
popa
out
mov
idiv
jl
push
test
mov
jae
test
jg
enter
push
mov
scas
xor
bound
mov
test
mov
test
in
jae
dec
xor
and
daa
lock
xchg
iret
mov
lds
mov
outsl
mov
hlt
ficomps
jb
out
shll
cli
xlat
stos
stc
daa
pop
dec
push
pop
fstpl
mov
jp
xchg
ja
movsl
mov
lea
out
lahf
andb
push
adc
cmp
jl
cmp
xchg
push
loop
add
sbb
or
hlt
mov
rcrb
and
stos
enter
inc
xchg
imul
imull
in
cmp
outsb
shlb
icebp
leave
dec
ret
jns
shr
and
shlb
xlat
out
es
aad
xchg
adc
aam
lds
mov
mov
sbb
inc
cmc
push
enter
ja
mov
int3
jbe
stos
xor
mov
xchg
divl
add
or
sti
and
addl
test
popa
in
or
mov
xchg
jmp
xlat
leave
or
cmp
or
shll
in
mov
jmp
es
daa
aas
in
pop
dec
xchg
xor
and
fsubl
in
ss
lea
add
test
divb
stc
cltd
outsb
lock
enterw
scas
or
faddl
jecxz
xor
dec
hlt
push
mov
fcompl
outsl
enter
roll
clflush
arpl
ret
jecxz
ds
jno
mov
mov
stos
loopne
cmc
lret
incl
in
mov
addl
mov
cmp
add
in
ss
xor
jmp
pop
mov
xchg
aas
xchg
aaa
out
fcmovnbe
push
adc
push
movsl
or
mov
xchg
mov
loopne
add
flds
pop
pop
jge
or
mov
jne
xor
cmpsb
lcall
rcrb
adc
pushf
call
mov
pushl
adc
adc
mov
test
pop
adcb
movsb
test
pop
mov
xchg
mov
scas
sbb
xchg
push
and
push
js
push
mov
subl
pop
adc
dec
stos
pop
andb
arpl
arpl
roll
daa
into
inc
mov
pop
cltd
jg
and
gs
stos
add
pop
imul
xchg
jl
lods
push
outsb
movl
insb
push
pop
das
or
pusha
cwtl
cmp
shrl
and
enter
je
mov
cmp
adc
std
test
xor
mov
mov
je
popa
cmp
orl
sub
hlt
mov
pusha
push
push
mov
xchg
lahf
call
xrelease
and
out
loopne
jg
and
test
mov
mov
or
loope
js
pop
rcr
inc
push
jb
popf
push
popf
arpl
out
clc
dec
ljmp
add
subl
stos
or
xchg
out
and
pop
cmp
mov
icebp
push
fwait
add
addr16
shl
jnp
pop
ds
mov
mov
push
sti
mov
out
mov
gs
sub
popa
outsb
fwait
xchg
inc
sbb
cmp
xchg
cmp
test
jo
jno
insl
out
pop
xor
imulb
and
out
inc
fimuls
in
mov
lock
inc
lcall
pop
mov
sbb
mov
sbb
clc
mov
movb
loopne
push
rcll
xacquire
out
mov
rcrb
dec
xchg
scas
mov
rcrb
push
das
pop
xor
jns
arpl
and
pop
lret
cmp
xor
pop
pop
mov
lods
push
inc
mov
imul
lret
dec
jge
ret
dec
jl
lock
push
mov
out
or
call
fs
sub
inc
cmp
cltd
jmp
add
repnz
stos
call
popf
cmc
jg
imull
xor
sbb
sbb
mov
lahf
lcall
and
mov
xor
out
and
dec
js
dec
cli
cli
fidivrs
ficoms
jecxz
shrb
mov
mov
lds
cltd
cld
js
mov
sub
movsl
scas
int3
mov
dec
xor
jb
imul
sub
xchg
lahf
fld
and
xor
call
jle
xlat
popf
sub
xchg
out
movsb
out
xchg
nop
ds
pop
int
xor
mov
cmp
pop
in
int3
in
push
cmp
mov
je
cmp
into
inc
shlb
decl
rorb
insb
daa
mov
adc
and
inc
lret
pop
shlb
clc
cmpl
stc
inc
out
insb
iret
fdivrp
jle
stc
loope
add
imul
sub
jle
pop
dec
adc
lea
lock
mov
cltd
imull
hlt
jg
cmp
in
xchg
cltd
popf
jno
movsl
imul
and
inc
lahf
mov
loopne
jmp
add
lock
pop
shlb
jmp
leave
jns
add
push
cmp
lret
jle
in
aas
fsubr
jl
imul
in
dec
or
ja
xchg
cmpb
push
jno
bound
dec
sbb
shlb
inc
lods
pop
mov
sbb
fs
lahf
lea
movsl
dec
inc
out
iret
pop
mov
cmp
mov
dec
xlat
mov
ljmp
xchg
xchg
imul
gs
in
imul
inc
xchg
mov
pop
or
fstl
xchg
fucomip
lcall
mov
in
or
fimull
or
ja
lcall
sbb
lcall
aad
dec
jecxz
test
mov
push
mov
leave
push
cmc
pop
into
fidivrs
sbb
or
out
out
lock
int3
icebp
push
out
movsb
lea
cmp
out
jge
jge
fcmovu
sub
adc
pop
inc
push
retw
jnp
sub
xchg
data16
test
jae
stc
in
arpl
call
sbb
pop
mov
pop
sub
js
lret
push
push
mov
test
test
std
hlt
insb
lods
jmp
ret
xchg
sbb
mov
or
pop
xchg
shrl
js
mov
arpl
sub
add
into
pop
ret
popa
scas
rorl
test
pushf
hlt
test
pushf
dec
jnp
mov
iret
inc
inc
int3
push
div
outsb
jmp
lods
ja
push
gs
fildll
push
add
mov
cltd
push
lret
sbb
jecxz
andl
enter
xor
ret
sbb
cmpsl
arpl
icebp
cs
mov
movsl
or
or
adc
fsubrl
insl
push
push
jae
insb
jne
mov
loopne
add
ja
das
iret
inc
repz
sbb
aad
adc
xor
jle
mov
sbb
and
jno
mov
std
pushf
mov
jns
arpl
aam
rclb
push
push
mov
clc
rcrl
insl
inc
arpl
dec
lds
dec
jg
cli
sub
sbb
mov
das
insl
shrb
lahf
dec
mov
xor
mov
test
test
push
cmp
cli
pop
sub
out
mov
and
adc
int
or
stos
sub
and
rorl
shlb
inc
shr
cmp
cli
imul
iret
dec
dec
jo
movsl
dec
pusha
sub
lock
jecxz
mov
lret
sbb
xchg
cld
je
xor
ror
jae
imulb
into
push
loopne
xor
movsl
push
aam
imul
push
jnp
das
aad
je
xor
lock
das
dec
xor
pop
jb
mov
xchg
cmp
jbe
das
mov
cs
sbb
daa
jno
in
jo
fs
mov
mov
test
lods
dec
outsl
sbb
jecxz
mov
add
data16
dec
popa
inc
lds
pusha
jg
test
jle
cli
inc
xchg
sbb
stos
dec
nop
pusha
sub
mov
loop
push
jecxz
inc
rclb
scas
pop
xlat
iret
testl
sbb
jo
adc
ja
mov
arpl
adc
popa
inc
mov
cmp
stc
xor
fnstsw
mov
ljmp
sbb
je
adc
sbb
aam
push
sti
ds
xchg
inc
or
outsl
xchg
sbb
inc
negb
pushf
ret
cli
popa
cmp
add
xor
adc
sub
je
xor
roll
popa
loopne
sbb
mov
mov
sbb
arpl
daa
jg
dec
cmp
and
leave
in
pop
inc
mov
pushf
call
nop
push
cmp
sbb
test
stos
sub
mov
xchg
lahf
dec
push
sbb
sahf
push
mov
gs
xchg
rorb
leave
mov
mov
xor
xorb
inc
jno
jae
je
mov
or
jb
test
cltd
sub
xorb
sub
mov
movsl
jl
push
and
movsl
sub
test
pop
aas
subb
lds
test
movsl
or
mov
stos
ds
rorb
dec
les
cmpsl
in
mov
mov
mov
sarb
xsavec
jno
imul
call
sti
push
int
leave
fidivl
push
in
xor
jl
dec
hlt
lahf
inc
int3
mov
sub
inc
inc
dec
and
mov
pop
xchg
add
sbb
test
jbe
movb
mov
das
push
sub
mov
fnstcw
pusha
sub
rorb
jg
xchg
dec
popf
add
movsl
mov
outsl
clc
addl
sub
mov
test
orb
test
add
iret
jo
mov
adc
sub
xchg
arpl
dec
jnp
jbe
outsl
pop
or
data16
loope
jge
jl
mov
push
ja
mov
push
cmp
or
imul
addb
push
dec
mov
pushf
sahf
mov
lcall
jns
insb
jle
mov
jne
push
andl
jmp
mov
push
mov
popa
and
adc
enter
push
pop
xor
mov
out
push
xchg
lds
stc
cmp
mov
jle
scas
dec
sub
lret
cmp
in
jmp
in
mov
mov
pop
sub
jns
clc
push
mov
je
or
lods
rep
mov
lock
dec
imul
repnz
or
push
mov
or
sti
out
movsl
mov
cmp
cmp
mov
mov
mov
pop
enter
cmc
ss
insb
out
jmp
outsb
mov
xchg
jnp
cwtl
cmp
or
loopne
mov
pop
xor
scas
in
mov
dec
loopne
jb
sbb
jmp
jge
sbb
mov
lods
lods
fs
pushf
add
jge
aam
or
loopne
loop
or
jno
or
and
sub
in
in
adc
movsl
sbb
sbb
int
out
outsl
mov
cmp
mov
or
repnz
aaa
pop
mov
sub
test
dec
jno
in
cwtl
cmp
test
lret
repz
xor
mov
xlat
or
fsubrs
mov
test
pusha
mov
jle
sbb
das
je
imulb
jo
push
fwait
jbe
popl
xor
jae
cmp
jns
jmp
in
pop
or
in
inc
push
ret
data16
sub
xor
jno
aam
mov
cwtl
jge
dec
outsb
mov
add
enter
test
lock
call
inc
mov
stos
fmul
jbe
scas
cmpsl
fwait
add
ljmp
out
mov
sbb
jge
xchg
push
lcall
pushf
inc
into
aas
movsl
mov
orl
rcrb
jg
dec
iret
adc
dec
xor
push
es
outsb
repnz
fnsave
jae
cmc
mov
jmp
int3
mov
inc
test
shlb
std
mov
push
rol
adc
mov
enter
xchg
push
add
jae
insl
scas
inc
testb
out
or
or
ljmp
mov
add
test
mov
add
xchg
fcoms
sub
outsb
int
jge
stc
ljmp
pop
jmp
sub
sbb
imul
jmp
pop
rorb
sbb
jnp
jmp
jp
dec
xchg
xor
aam
int
roll
xchg
jp
shll
clc
in
scas
fidivs
fs
push
fld
cmpb
out
mov
addr16
in
pop
movsb
push
movsl
scas
ud2
xor
sub
data16
mov
mov
int3
hlt
lea
dec
mov
lods
xchg
pusha
leave
mov
shll
mov
xchg
jle
subb
test
lcall
pop
scas
lcall
dec
jb
out
add
cwtl
and
clc
sbb
mov
in
jno
xor
push
xchg
les
jb
mov
test
mov
jle
popa
xchg
mov
ret
mov
and
adc
clc
push
jae
or
mov
and
sub
lahf
jbe
xlat
fs
sub
xor
popf
and
xor
cwtl
mov
xchg
negl
xchg
sbbl
inc
push
sub
mov
int
loope
iret
cmp
call
lret
mov
rcrb
jbe
mov
shll
call
mov
and
adc
xlat
sbb
clc
imul
aam
sbb
mov
sti
test
cltd
ss
mov
rorl
mov
mov
jge
mov
loope
inc
jae
mov
test
mov
mov
jg
mov
notb
push
fcmovnb
in
sub
rolb
insl
lret
or
loop
lret
mov
sarb
loop
insl
adc
cmp
jns
dec
jno
nop
inc
jmp
push
pop
jmp
lea
add
out
mov
dec
movsl
sbb
imul
or
mov
int
sub
sbb
es
cli
iret
cmp
insl
imul
stos
int
jle
dec
dec
scas
mov
dec
movsl
mov
push
mov
adc
xorl
sbb
push
mov
xchg
std
mov
jg
mov
lret
xchg
lea
adc
sahf
mov
aaa
mov
mov
call
es
lods
and
lock
fsubs
push
xor
repnz
loopne
xchg
std
cltd
pop
pop
xchg
insl
push
push
cmp
int3
js
scas
repz
push
jle
jo
ja
lock
out
sbb
imull
push
aad
out
int3
imul
sub
mov
mov
clc
mov
mov
xchg
js
jecxz
dec
das
or
imul
fsub
lahf
jae
and
daa
jae
cmc
movl
in
in
sbb
lds
repnz
jle
mov
add
xchg
pusha
lock
add
sub
movsl
int
mov
or
mov
negb
jl
test
gs
and
jbe
cmp
out
mov
ss
xlat
mov
push
dec
popa
sbb
repnz
scas
pop
shll
loop
xchg
cmpsl
xchg
cmp
sbbb
adc
stos
out
repnz
subl
jl
addr16
loop
mov
js
cmp
enter
xor
xchg
call
aas
xchg
repnz
push
insl
inc
ja
out
inc
in
jg
fsubrs
insl
dec
cwtl
imul
or
xor
jnp
divb
cmpsl
andl
xchg
mov
scas
in
cmc
mov
cli
sbb
push
andl
lods
dec
clc
int3
and
test
push
sti
insl
imull
test
xlat
int
cltd
repnz
jo
xchg
pop
sub
outsl
ret
out
adc
loop
in
pop
ljmp
std
jecxz
icebp
mov
sarl
icebp
mov
fmul
xchg
dec
fldenv
popf
rcr
xchg
jae
push
dec
push
int3
mov
sbb
sub
inc
xchg
in
jg
mov
hlt
int
cmp
and
mov
test
shlb
adc
lds
mov
push
mov
std
jp
scas
cmc
in
scas
cmpsl
cmc
outsb
xchg
dec
call
aad
cmpl
cmp
xor
mov
cltd
cli
aad
mov
xor
shlb
pop
adc
adc
movsl
bound
test
fisubs
popf
xor
xor
call
cmpsl
out
shl
mov
inc
adc
dec
ds
add
mov
scas
dec
sbb
jae
fldl
or
das
in
mov
js
push
xchg
jno
lea
insb
into
xchg
mov
sub
mov
mov
insb
pop
fbstp
nop
pushf
enter
ja
es
addr16
jmpw
sub
sbb
rcrb
scas
outsl
test
adc
fmul
ljmp
dec
mov
mov
mov
shll
into
xchg
out
aad
jle
xor
jb
enter
lea
imul
into
lret
out
lods
loop
scas
jo
push
fwait
mov
out
test
sarb
icebp
int3
sbb
cmp
cmpsl
repnz
dec
fldpi
aad
xchg
mov
insl
mov
mov
jle
popf
mov
repnz
sbb
jns
xor
icebp
sub
gs
gs
xchg
repz
addr16
adcl
add
and
sub
jnp
gs
adc
inc
sub
mov
arpl
cltd
loopne
sbb
out
stc
in
push
xlat
sbb
pop
test
mov
mov
out
sti
addr16
insb
mov
adc
fdiv
bound
popf
in
int3
inc
xchg
jmp
dec
incl
jae
scas
xor
or
adc
jl
movsl
push
inc
ljmp
jecxz
dec
fnsave
jmp
fsubrs
cmp
xor
push
pusha
jae
and
lods
sub
mov
pop
repz
pop
aad
and
fnstsw
ja
cmp
mov
in
sbb
dec
in
or
stc
xorl
pop
lods
pop
push
lcall
cmp
or
xchg
jae
mov
clc
out
add
loop
sub
xchg
sub
adcl
ljmp
xchg
mov
mov
xchg
js
faddl
nop
dec
or
cmp
xor
enter
and
xchg
in
push
outsl
xchg
test
sub
cmpsl
lods
dec
mov
jp
es
jb
push
andb
pop
push
sub
dec
lea
and
pop
movsl
or
mov
ja
shrb
cmc
mov
fistpl
inc
repz
push
lea
lock
dec
iret
test
jecxz
cwtl
int
iret
cmp
pushf
or
daa
adc
aam
pop
popf
out
or
in
or
or
ror
dec
lret
fildll
pop
adc
jge
and
scas
dec
dec
pop
mov
cmp
jg
xorl
jo
hlt
imul
sub
sub
js
and
addl
jl
jmp
xchg
xor
mov
cmp
in
arpl
shrl
jmp
or
pop
into
add
cltd
or
xchg
testl
dec
test
lods
insl
pop
xor
push
lods
xor
int
push
lods
pop
lea
pop
pop
mov
jle
mov
sub
outsl
add
loop
sbb
mov
test
mov
test
mov
mov
mov
repnz
pusha
loop
pushf
sahf
dec
adc
mov
jg
fldenv
mov
outsb
cs
sti
repnz
sub
les
enter
shrl
ss
mov
push
xchg
jbe
pushf
inc
pop
dec
cltd
add
cmp
pop
shl
mov
dec
imul
popf
pop
lock
sbb
fsts
pop
stos
xchg
je
or
jnp
push
jo
cvttps2pi
movsl
popf
adc
lock
mov
ret
rcl
push
pop
cltd
rorl
mov
inc
lcall
insb
cmp
out
test
jmp
sub
push
jge
sahf
lcall
ret
push
pushf
cmc
mov
pop
imull
inc
jecxz
lcall
ds
out
ljmp
sub
repnz
or
cmpsl
iret
sbb
lock
test
xchg
and
addr16
in
aaa
flds
jno
xchg
test
hlt
lods
xor
data16
xor
xor
jnp
pop
mov
lcall
call
push
pusha
dec
jle
sub
movq
xor
mov
cmc
loop
outsl
icebp
sbb
jecxz
daa
repnz
outsl
scas
add
sub
in
imulb
add
loop
es
fstl
mov
out
xor
add
dec
xchg
jl
xchg
ret
mov
sbbl
out
xchg
cmp
xchg
jmp
popa
pop
fwait
push
mov
sbbb
mov
push
cmp
popf
call
hlt
or
mov
into
out
cmp
pushf
jg
scas
or
sub
mov
xor
insb
xchg
sahf
sub
dec
push
fs
shrl
test
loopne
pop
icebp
test
and
repz
cltd
cs
xchg
movsl
sahf
dec
fwait
or
frstor
mov
daa
sub
and
test
loop
mov
pop
inc
subl
push
cmpsl
in
pop
or
out
mov
dec
xchg
stc
fbld
pop
ljmp
cmp
fcmovbe
fisttpll
stos
lods
jae
adc
shr
divb
aas
mov
xchg
add
adc
mov
cmp
cmp
data16
notb
dec
out
pop
js
test
sub
mov
cmpsb
cltd
mov
fldln2
xchg
sbb
rorl
sbb
vmread
or
or
es
out
mov
in
jecxz
arpl
or
xchg
rcrb
adc
mov
mov
jle
daa
ljmp
sbb
inc
fsub
xchg
ret
or
pusha
call
std
mov
sbb
mov
jmp
ficoms
popf
insl
pop
sbbb
mov
jecxz
mov
into
or
mov
in
mov
enter
leave
testl
dec
mov
jle
test
pop
adc
mov
mov
lret
stos
call
popf
icebp
xor
mov
push
cmp
insl
movsbl
vpcomd
jg
rcrb
inc
insl
pop
shlb
xlat
repz
lods
jno
jmp
aam
scas
rorb
jae
mov
mov
push
pop
add
sbb
fisttpl
cmp
int3
xchg
sbb
fbstp
leave
sbb
or
mov
popl
repnz
notl
push
jmp
lahf
push
iret
mov
aam
mov
in
sub
mov
jnp
nop
int
in
sti
out
test
aas
jmp
ret
jns
fisttpl
rcrl
jge
mov
pop
dec
add
popf
sbbb
xchg
adc
push
inc
in
shlb
xorl
in
mov
mov
mov
push
jne
ret
inc
cli
in
cmpsb
pushf
bound
stos
inc
and
fisttpll
inc
pusha
out
pop
mov
mov
xchg
arpl
jg
lods
stc
std
mov
sbb
aas
int
lods
jmp
xor
fisubs
xor
cld
cmc
mov
ja
and
and
out
mov
inc
pop
xchg
mov
sbb
mov
lods
gs
lock
outsb
test
mov
jb
sbb
daa
jg
out
test
jle
push
and
lods
cmpsl
or
test
jp
stos
fs
push
sbb
int3
call
movsl
in
call
pop
push
add
out
xorb
mov
in
pop
in
lahf
pop
adcl
mov
arpl
push
scas
cwtl
arpl
push
cmpsl
movsl
orl
subb
repz
mov
ljmp
adc
mov
outsb
mov
js
dec
insl
je
and
cltd
adc
scas
inc
stos
xchg
jl
insl
rcl
push
xor
data16
and
cmp
sub
mov
push
ds
inc
inc
push
movsb
inc
fs
roll
test
faddl
shll
outsl
or
sbb
sub
stc
adc
or
push
sbb
loopne
inc
gs
int3
stos
stos
je
or
sti
adc
das
lret
loopne
shll
andb
in
xchg
outsb
test
lahf
jmp
aas
lahf
push
bound
add
xchg
clc
or
lahf
scas
pop
leave
lds
rclb
iret
inc
out
pop
clc
mov
gs
xor
inc
mov
imul
imulb
xor
mov
xor
pop
sbbb
pop
lcall
sbb
ret
xor
sub
adc
pop
test
push
test
sbb
outsb
cwtl
push
repnz
lret
sbb
adc
hlt
idivb
sbb
scas
fcmovu
push
into
shll
push
addr16
mov
iret
arpl
mov
scas
stos
out
and
ljmp
scas
jle
mov
movsl
ljmp
out
lret
imul
lea
insl
cmpl
leave
pop
stos
sub
cmp
xor
lea
sbb
pusha
cmp
jae
jb
lret
mov
lods
mov
insb
in
inc
mov
xchg
ret
adc
movsb
fisubs
jbe
in
xor
jno
je
jo
je
jo
je
jo
je
jo
inc
pop
dec
stos
lret
lods
andb
mov
sahf
push
push
jb
int3
cmpsl
outsb
lods
push
dec
add
xor
aas
lret
sub
sahf
andb
cltd
dec
adc
mov
xor
xchg
add
ja
aad
stos
add
lcall
daa
xchg
iret
cwtl
lret
xor
ficomps
cmp
push
mov
and
test
shrb
mov
pop
insl
sbb
inc
sbb
shrl
dec
in
dec
push
dec
mov
mov
jno
xchg
mov
jg
aaa
xchg
repz
aam
enter
dec
loope
mov
enter
lcall
and
xor
bound
adc
xor
sub
push
xchg
ss
ret
and
out
not
sahf
adc
lcall
mov
mov
mov
cwtl
dec
mov
test
jno
rolb
cs
fcmovu
inc
sbb
hlt
push
mov
mov
add
aad
mov
jp
pop
or
fcomp
xor
mov
sarb
mov
xchg
adc
int3
add
out
inc
dec
xor
bound
pop
add
les
out
xlat
jmp
or
arpl
adc
adc
stos
loope
out
mov
xchg
add
jbe
xchg
lods
clc
xchg
into
data16
mov
outsl
sbb
loope
jae
cmp
mov
cltd
mov
add
ja
pusha
cmp
adc
int
mov
push
hlt
fmuls
into
sbb
mov
and
push
and
xchg
mov
mov
add
or
cltd
icebp
data16
cmp
add
insl
bound
dec
iret
mov
daa
push
xchg
or
arpl
clc
aam
cltd
or
fs
test
xor
jecxz
cmp
push
pop
scas
in
ss
dec
xlat
int3
popa
nop
mov
add
add
aas
fists
pop
lods
jge
mov
adc
jle
lds
add
xor
shr
inc
dec
lods
lahf
test
mov
sub
add
insb
adc
adc
dec
out
mov
dec
sahf
mov
inc
adc
test
and
sub
cmpl
or
mov
lcall
andl
xchg
jo
mov
hlt
add
mov
call
ds
push
sbb
mov
movsl
js
aas
jbe
and
push
cld
or
fcomps
sub
adc
std
out
sub
sar
push
inc
ljmp
or
pop
call
mov
fsubrp
cmp
adc
jnp
les
sub
test
ret
aaa
mov
ret
scas
mov
inc
cmp
xchg
out
hlt
out
adcl
pop
add
cmpsl
push
loop
add
mov
fidivl
popf
jns
inc
loopne
push
mov
mov
frstor
aam
arpl
mov
jmp
pop
push
xchg
pop
movsl
test
es
or
push
jmp
out
pop
pop
shll
mov
imul
stos
data16
pop
add
in
ret
jno
dec
out
xor
enter
mov
lds
cs
mov
pop
sbb
test
int3
aam
mov
test
inc
stos
xchg
inc
mov
mov
out
mull
stos
or
adc
mov
dec
gs
icebp
imul
data16
inc
or
cltd
inc
adc
dec
dec
out
jno
fwait
outsl
js
leave
pop
or
out
jle
ljmp
xor
sti
in
mov
mov
dec
mov
mov
std
mov
inc
dec
pusha
leave
fsts
popf
ret
mov
in
mov
mov
push
inc
jnp
xchg
sbb
pop
pop
push
in
inc
and
or
rcll
adc
fisubrl
xchg
sbb
sbb
int
mov
lahf
pushf
leave
ficomps
jae
out
sahf
pusha
inc
repnz
push
shlb
cmpsb
sbb
lock
ja
scas
mov
jno
xchg
cs
or
insl
sbb
shlb
leave
add
js
andb
jbe
out
js
iret
cs
hlt
test
xchg
faddl
jmp
jmp
and
movsl
and
inc
mov
fists
call
cmpsl
lea
scas
test
ja
push
jl
ffreep
std
or
scas
rcrb
push
dec
xchg
enter
lret
scas
sub
in
out
leave
out
mov
aaa
cmp
sti
inc
jno
dec
out
fbstp
lahf
add
call
ds
pop
jle
lahf
popf
test
mov
stos
add
or
aad
and
mov
mov
xor
ja
test
jmp
stos
loope
jae
notb
call
imul
pushf
or
jnp
push
call
jbe
repnz
aas
push
shrb
movsl
cwtl
test
fcmove
leave
test
call
xchg
loopne
pop
mov
xlat
jg
push
inc
scas
fdivl
out
adc
mov
lahf
mov
sahf
sub
scas
or
mov
cli
jmp
jns
fs
sub
daa
aad
mov
mov
push
add
fs
jl
sbb
icebp
or
fs
aad
pushf
popa
mov
mov
mov
ret
xchg
mov
rorb
out
nop
outsb
or
mov
rcrl
ds
xor
mov
sbb
mov
pop
pusha
in
repz
ss
jmp
lods
sub
mov
push
and
test
pop
enter
sysexit
xor
mov
pop
lds
int
and
sub
mov
jae
movsl
push
shl
cltd
enter
adcl
jno
pop
mov
stos
ss
out
fidivl
mov
push
or
inc
repnz
icebp
aam
subl
mov
fcoml
or
movsl
fisubs
mov
mov
pop
add
mov
push
lret
addr16
inc
test
fxam
push
or
mov
arpl
cmp
jb
int
xchg
dec
nop
gs
shll
cmp
cltd
cmp
mov
inc
movsl
fwait
sbbl
scas
xchg
cmpsl
xchg
xor
mov
fistpll
pop
hlt
ret
cli
outsl
sar
lahf
jbe
jmp
repz
cld
pop
mov
gs
dec
lods
push
cli
and
inc
test
lahf
ja
in
pop
jno
les
xchg
imull
jp
inc
int3
stos
mov
mov
leave
aaa
popf
push
inc
mov
sbb
or
icebp
sub
mov
push
in
dec
incl
push
mov
pusha
shlb
cli
push
add
movl
test
fbstp
and
dec
inc
or
and
inc
mov
mov
jecxz
inc
lcall
cmp
out
xchg
in
dec
push
cmc
rcrb
and
movsl
mov
ret
lea
sub
inc
mov
aas
test
in
jmp
outsl
shlb
iret
jne
iret
into
cltd
dec
aam
cmp
mov
popf
xorb
jmp
sbb
push
xchg
enter
dec
rolb
mov
dec
mov
test
jae
test
rclb
pop
out
push
mov
mov
xor
gs
cmpsb
mov
rcrb
popa
xor
mov
mov
adc
in
pop
push
push
mov
pop
out
and
stos
mov
scas
xchg
cmp
iret
jg
into
cmc
pop
daa
cmpsl
adc
sub
movsb
dec
cmpxchg
pop
add
loopne
jmp
aas
sub
out
test
and
cli
jns
inc
or
leave
cmp
pop
sbb
gs
cmp
xor
and
scas
mov
fsubl
mov
push
int
mov
imul
daa
rorl
fisttps
add
adc
leave
cmc
mov
jmp
and
lds
enter
jo
popf
fwait
rcrb
or
inc
dec
addl
jmp
xchg
sub
mov
insl
shr
push
in
icebp
fstl
out
mov
push
lret
fstps
or
movsl
xor
mov
push
adc
pop
mov
sbb
call
pop
scas
jo
or
lock
pop
add
sub
pop
or
adc
iret
sub
mov
add
js
fnstsw
test
mov
pop
xchg
mov
in
ffree
inc
pop
sbb
push
es
mov
xor
imulb
mov
inc
pop
lock
adc
add
push
xchg
icebp
lahf
or
inc
inc
push
adc
jecxz
and
mov
lds
jnp
dec
dec
sarl
sub
push
mov
dec
movsb
test
pop
fs
sbb
sub
pop
cwtl
cwtl
mov
pop
dec
push
iret
repnz
cli
mov
adc
push
pop
add
jmp
or
xor
cmc
lahf
or
repz
test
rcll
sbb
insl
jge
lret
out
push
cld
inc
add
adc
repnz
pop
jno
sbb
test
cmp
xchg
and
orb
jge
xlat
jnp
xchg
xor
push
mov
mov
cltd
clc
xchg
or
cmpb
mov
sbb
fimuls
orl
sub
inc
add
and
mov
xor
xchg
inc
dec
mov
sub
int3
mov
xchg
popf
test
cs
test
adc
mov
cltd
lahf
not
call
cmc
mov
sub
xor
int
mov
lods
ljmp
push
sarb
pop
dec
sbb
outsl
into
pushw
inc
ljmp
enter
out
xor
out
fsub
mov
mov
icebp
mov
adc
add
stos
into
cmc
inc
sub
insl
mov
insl
jae
outsb
sub
pop
movsb
jle
test
lret
mov
xchg
xchg
mov
imul
jmp
xorl
lods
fsubrs
ret
xchg
dec
adc
sub
jl
sub
pop
lods
rol
mov
jp
cmp
shll
inc
jge
test
and
popa
clc
imulb
mov
les
mov
jl
sahf
mov
fimull
loope
or
mov
xor
fwait
enter
and
lods
cld
mov
and
in
xchg
insl
lock
sub
jmp
int
in
mov
leave
mov
test
mov
mov
stc
mov
sub
cmpsl
cli
mov
cmc
lcall
repnz
and
add
cmp
cli
or
add
jae
addb
sub
out
popf
add
cmp
mov
lock
out
pop
test
shlb
es
subl
outsb
mov
cmpl
mov
mov
sub
or
call
add
dec
pop
vxorpd
cltd
pushf
dec
fnsave
lahf
imul
cmpsb
pop
push
fisubrs
push
mov
pop
bound
xchg
stos
mov
and
ja
nop
stos
call
into
xor
movsl
xchg
mov
inc
fdivs
fistpl
mov
xchg
lcall
xor
xchg
lcall
in
ljmp
and
aaa
lret
inc
inc
jne
mulb
loopne
wbinvd
pop
les
and
test
sub
cmc
sbb
in
rorb
repnz
std
adcb
fldcw
dec
fdivl
movsl
rorb
lret
in
cld
and
out
mov
mov
cmp
dec
out
in
and
pop
ret
movsl
push
mov
fnstcw
lret
hlt
out
or
cmp
sub
inc
sub
jmp
push
mov
fdivs
cmpb
mov
clc
stos
hlt
adc
sarb
xchg
xchg
push
stos
fcmovu
mov
mov
pop
fistpl
fidivrl
sbb
jmp
aas
andl
fmul
jmp
push
mov
in
je
pop
int3
in
jecxz
imul
xorb
xchg
in
aas
icebp
jg
in
hlt
push
aam
fstpt
mov
pop
pop
pushf
cmpsl
mov
dec
aas
inc
out
cltd
test
add
mov
movsl
movsl
or
mov
js
call
rcrb
mov
jl
ret
xlat
pop
test
inc
and
dec
dec
les
data16
jnp
sahf
mov
mov
cmpsb
lods
out
test
out
pop
cld
call
sbb
jmp
sbb
jns
sub
cmpsl
int
in
in
inc
adc
in
jg
and
test
xchg
mov
push
xchg
loop
adc
out
repnz
mov
stos
mov
lret
ffreep
lods
out
sbb
push
or
leave
push
mov
test
movsl
fs
fsub
xor
cmp
cmp
mov
adc
addr16
add
test
iret
sub
dec
ljmp
pop
jno
sbb
xchg
push
sub
movhlps
sub
mov
lods
mov
cmp
jnp
add
in
jo
arpl
es
mov
out
ret
xchg
xor
movl
inc
sbb
rcr
dec
xor
adc
dec
in
adc
sub
outsb
or
rorl
sbb
test
push
lret
push
push
mov
addl
ficomps
insb
or
push
icebp
jno
shlb
sbb
loope
out
cmc
es
loope
sahf
test
scas
incb
push
sub
jbe
sub
mov
ljmp
sbb
loop
inc
mov
aam
lret
fstpt
out
sti
push
test
lea
mov
cmc
mov
mov
test
fnstsw
daa
mov
arpl
xor
pop
iret
fcoml
jp
dec
dec
cmc
mov
lods
mov
rorl
sbb
aam
dec
aaa
mov
popf
inc
jl
pop
pop
mov
push
lds
push
push
sbb
mov
sbb
imul
outsl
daa
lods
inc
add
jg
push
push
leave
adc
faddl
fstps
push
hlt
xchg
add
inc
arpl
pop
cmpsl
cs
dec
dec
testb
jp
leave
jne
incl
sbb
cmp
movsb
adc
sub
mov
or
fidivs
cmp
insb
cmpsl
mov
mov
lret
rcrb
out
push
lcall
adc
popa
insb
or
jnp
pop
mov
mov
jae,pn
adc
out
test
sub
xchg
out
mov
icebp
jnp
lret
imul
sbb
cs
push
sub
dec
lds
cwtl
test
and
push
imul
clc
stc
pop
lcall
mov
idiv
pmulhuw
icebp
rcr
push
lock
aas
loope
jae
dec
adc
lods
push
sub
rolb
push
cmp
out
shrl
cs
push
je
test
stos
or
cmpsl
int3
stos
cmpsl
cwtl
mov
leave
fsubrs
push
imul
mov
clc
std
lret
test
mov
daa
and
mov
cmpl
sarl
loope
adcl
sub
jg
or
pop
push
rorl
pop
insl
pop
dec
fildll
sahf
jb
das
add
sub
out
sbbb
lahf
pushf
stc
lret
xchg
cmc
push
dec
jge
cmp
mov
jmp
leave
mov
insl
cmp
add
addl
jo
inc
mov
cs
adc
in
push
jge
push
notb
ret
scas
xor
inc
lcall
inc
mov
and
push
and
mov
lret
sahf
out
xor
fcmovu
inc
jmp
cmp
cmp
xchg
fsts
add
push
testl
inc
pop
dec
or
in
jp
leave
push
adc
out
sbb
fldl
pop
rcrb
jne
call
into
mov
lock
and
test
adc
mov
adc
mov
repz
add
mov
fnstcw
lret
ds
scas
cltd
xchg
jl
jnp
pop
inc
loopne
xchg
add
lock
test
sbb
incl
adcl
popf
call
leave
or
mov
outsb
repz
les
fsubrl
scas
addb
xchg
test
sub
aaa
sub
addr16
dec
xlat
jne
loope
pop
lret
movsl
sbb
xchg
enter
movsb
gs
cmc
jae
mov
stc
js
in
xorl
and
mov
hlt
lods
je
lahf
adcb
or
xchg
xor
gs
test
sahf
mov
das
push
push
push
mov
cmp
mov
out
xor
jle
sbb
and
push
cmp
and
push
or
jmp
adc
mov
sbbb
test
jmp
movsl
fdivrs
jle
pop
lea
add
in
xchg
push
fsts
ret
mov
add
add
lea
jle
xor
dec
repnz
sbbb
inc
jmp
xlat
xor
out
add
jo
aad
mov
cmp
jb
mov
push
cmpsb
arpl
mov
fidivs
lahf
dec
rcr
cmpsb
clc
xchg
loope
mov
xchg
insl
ret
mov
xchg
out
adc
mov
out
dec
mov
pop
movsb
or
imul
stos
fwait
sbbb
into
repnz
mov
aad
mov
mov
xor
daa
or
jle
mov
pop
mov
roll
push
sbb
inc
lea
popf
push
lret
mov
pop
out
cmpsl
ljmp
pop
out
aad
sub
test
into
mov
cmpsl
jb
or
or
cmc
outsl
lock
mov
lods
cwtl
ret
xchg
mov
xor
jno
lret
fnstenv
cmpsb
cmp
mov
fnsave
faddp
ds
cmp
aas
das
out
iret
sub
mov
or
test
or
clc
cmpsl
ja
add
sbb
adc
cmpsl
in
cltd
dec
mov
ljmp
cwtl
insb
idiv
stc
in
cmp
fwait
icebp
pop
js
xchg
lods
xor
loopne
les
fs
inc
scas
out
adc
insb
xchg
cmp
push
iret
lahf
or
pop
ret
icebp
outsb
jmp
icebp
xchg
add
cmpsb
in
ret
in
scas
aaa
bound
arpl
aas
add
int3
and
lds
lds
dec
ret
jnp
or
out
imul
sbb
xor
sub
loop
and
in
push
repnz
test
xchg
stos
popf
icebp
or
stos
in
sbb
test
loope
dec
in
sub
mov
imul
mov
int
jl
shrl
repnz
sarl
add
mov
lret
or
mov
pushf
and
test
stos
dec
dec
mov
fsubrs
bound
sub
jle
fcoml
outsb
mov
repnz
out
nop
js
pop
dec
pop
es
lods
mov
push
stc
subb
imul
or
adc
or
out
lcall
lock
in
xor
lret
inc
sub
outsl
inc
xor
mov
and
in
push
lahf
test
test
fwait
jmp
ret
cmpb
jge
push
xchg
enter
inc
iret
push
mov
out
int3
je
test
repz
enterw
mov
sahf
push
ret
mov
cmp
outsl
test
mov
js
push
cli
imul
or
aam
pusha
mov
mov
nop
imul
mov
jnp
pop
push
ljmp
add
sub
dec
idivl
call
cmp
mov
nop
or
faddl
in
sbb
cmpsl
jne
pushf
adc
and
xchg
dec
push
movsl
ja
stos
cmp
jg
pusha
imul
lds
inc
xchg
iret
sahf
repz
fistps
fucomp
jo
sbb
int
sarb
dec
jae
jg
mov
ret
jno
mov
sub
out
jmp
dec
bound
out
decl
scas
xchg
mov
push
clc
pop
sub
mov
outsl
addr16
sub
cmpsb
pushf
mov
into
pop
cmp
xor
test
ds
xchg
xor
sub
adcb
lea
cltd
aam
out
in
adc
call
jmp
int
push
mov
mov
mov
xchg
adc
stos
cld
mov
pop
jle
dec
lcall
dec
xchg
pop
data16
popf
push
adc
repnz
and
repnz
aaa
push
ret
pop
and
repnz
sti
pushf
or
push
mov
sar
daa
jge
dec
adc
mov
shl
pop
push
popa
jg
mov
repz
stc
push
or
sahf
or
lods
cmc
inc
mov
xor
push
mov
add
orl
push
lret
popa
mov
hlt
test
std
mov
xchg
lods
lds
lcall
sub
ja
pusha
xorl
dec
dec
inc
cmp
call
imul
cmpl
mov
cmp
orl
movsl
xor
sub
push
addr16
cmp
xchg
sub
inc
lds
jno
jle
mov
clc
bound
pop
dec
in
popa
push
add
dec
add
jp
outsb
mov
push
add
subb
jae
sub
mov
int3
movsb
les
or
data16
cmc
sbb
popa
sbb
not
jae
ljmp
mov
push
loope
jns
adc
ds
lods
add
sbb
cmp
dec
cmp
icebp
pushf
adc
ret
jl
mov
ficompl
pop
cmpsb
adc
imul
scas
fistps
and
jg
cmp
jmp
pop
rorb
jb
imul
mov
xchg
jno
cmpsl
lret
icebp
test
mov
lock
jno
outsb
popa
enter
das
xchg
repz
add
fadd
xor
lret
mov
dec
mov
dec
imul
in
or
ljmp
mov
or
inc
lahf
or
push
xchg
nop
sbb
sub
ja
cmp
scas
fimuls
test
mov
inc
fidivs
mov
sbbb
movsb
stos
cmp
mov
and
dec
jecxz
xchg
sub
add
cmpsb
icebp
push
push
pop
ss
push
add
adc
xorl
sahf
jecxz
dec
cld
data16
leave
popa
cli
jbe
fcomi
and
leave
mov
stc
movsb
mov
cld
jle
mov
jle
mov
mov
mov
inc
mov
jmp
mov
and
ret
mov
add
cltd
push
fidivs
lcall
fistl
roll
sbb
mov
mov
mov
inc
stos
in
out
jg
lret
adc
xchg
les
loop
or
fmul
das
mov
jge
aaa
clc
xchg
and
sarl
leave
cmp
jbe
fidivl
repz
jle
mov
mov
mov
dec
inc
in
adc
and
dec
sub
aas
xchg
test
jmp
adc
xor
cmp
loopne
divb
js
jns
addr16
pop
cmpsl
fwait
negl
imul
orb
sbb
mov
mov
push
aas
cltd
mov
jae
out
cmpl
imul
aaa
int3
mov
sub
ds
push
repnz
sahf
mov
jge
cmp
adc
sub
xor
xchg
jne
movd
push
mov
pop
popf
jno
sbb
mov
xchg
xchg
xchg
sub
ret
and
push
push
ss
iret
stos
xchg
test
lea
adc
xchg
pusha
push
push
in
in
cmp
mov
popa
cmp
lea
stc
mov
ja
stos
gs
lods
out
dec
dec
lods
lret
xchg
add
or
pop
adc
xchg
dec
cmp
inc
fmull
repnz
jb
fistpll
jb
sub
dec
xchg
jnp
jno
pop
lock
test
mov
push
insb
add
push
cmp
pop
jns
inc
dec
insl
and
iret
xor
cli
sub
xlat
push
loopne
movsb
jb
jle
dec
pop
push
pop
ss
iret
jecxz
aad
aas
sarl
xchg
push
xor
adc
es
push
mov
dec
dec
repz
je
int3
adc
pop
in
popa
out
and
add
ss
sbb
inc
movsb
adc
fidivs
and
adc
mov
push
out
gs
pusha
cmp
std
stos
push
in
push
adc
push
sbb
popf
dec
xchg
cmpb
test
addr16
push
pop
add
push
mov
inc
idivb
adc
xor
push
cwtl
insl
imul
sub
adc
in
sbb
addr16
add
ss
mov
loopne
frstor
lcall
jl
leave
pop
int
sub
insl
or
mov
int3
fimuls
pop
jle
jge
scas
sbb
pop
stc
adc
cmpsl
xchg
xor
push
dec
test
loop
mov
pop
sbbl
orl
mov
gs
popf
inc
insb
lahf
push
xchg
or
pop
outsl
mov
push
scas
xchg
or
fnstsw
jbe
ds
iret
dec
and
add
rolb
push
dec
jnp
add
lods
outsb
test
movsl
inc
not
dec
loope
in
xchg
arpl
int
pop
sub
sahf
dec
push
mov
iret
imul
scas
test
repnz
inc
jp
mov
jne
in
add
faddl
es
dec
sub
imul
jle
push
xchg
ret
scas
mov
pop
sbb
ds
xor
add
xchg
and
push
inc
xchg
imul
and
mov
sbb
out
popf
out
jmp
jne
bound
pop
push
ljmp
test
icebp
mov
insb
mov
shl
xchg
and
xorb
into
sarl
sti
sub
inc
pop
sbb
jns
test
and
jo
dec
mov
sar
sbb
sti
leave
lods
xor
xchg
adc
jmp
jecxz
lret
dec
mov
std
jg
shlb
pop
lret
adc
arpl
pop
pusha
stc
mov
les
es
cltd
push
cmpsl
xchg
stc
iret
fs
sahf
notb
lods
andb
lret
sbb
lret
ja
stos
cmc
pushf
mov
mov
scas
fs
sbb
pop
dec
sub
lds
popf
mov
dec
scas
leave
sbb
ds
mov
sub
jecxz
mov
sub
xchg
sub
mov
or
in
arpl
scas
or
out
loop
sbb
pop
ds
sbb
mov
mov
imul
pushf
or
push
imul
and
mov
dec
repnz
mulb
or
stos
xor
and
mov
pop
mov
jle
inc
pop
movsl
jecxz
aam
shl
jecxz
repnz
movsl
pushf
iret
cmp
add
jl
and
ret
sbb
loop
cli
in
sti
sbb
pop
jo
pop
push
mov
pop
inc
adcl
mov
xchg
xchg
fcoms
push
fcoml
xchg
mov
in
imul
cwtl
mov
in
dec
jb
and
stos
sub
mov
hlt
stos
jno
mov
nop
sub
cmpsb
adc
adc
mov
mov
les
cmp
dec
jg
out
rcrb
or
test
jmp
ret
imul
mov
xlat
nop
shr
ret
test
xchg
dec
cmp
popa
cmp
dec
mov
out
push
jne
test
xor
in
jne
jmp
sub
test
xchg
mov
arpl
lea
pop
sub
ret
out
sub
ja
push
push
and
add
xchg
lds
pop
fisubrs
mov
scas
cmp
and
test
leave
scas
testb
mov
pop
inc
xchg
fwait
adc
dec
aam
pop
inc
adc
push
push
pop
jp
mov
xor
pop
int3
into
add
clc
out
hlt
jmp
lods
add
movb
jmp
frstor
xorl
repnz
rorb
in
scas
fs
movsl
fistl
faddl
aad
add
lea
push
in
dec
cld
xor
pop
inc
push
jl
ljmp
scas
jo
in
les
in
movsl
push
mov
or
test
mov
pop
dec
loop
scas
push
and
jbe
xor
xchg
or
sbb
push
mov
lahf
sub
inc
push
cmp
cmpsl
cmp
pusha
fs
push
sub
data16
sub
call
pop
sarb
sbb
mov
fldt
cs
loop
fcompl
stos
insl
jg
cmpsl
popf
dec
pop
rcr
jle
lret
in
fcomps
jecxz
mov
out
xor
ret
jmp
outsb
mov
js
mov
lret
clc
ljmp
sbb
jnp
cwtl
fcompl
test
pop
ret
outsb
js
movsl
cmpsl
lret
test
cmp
adc
dec
jnp
inc
and
cmp
xchg
push
dec
movsb
push
add
or
xor
cmpsl
mov
rorb
and
xchg
xor
jg
mov
jns
xchg
repz
cmpsl
rorb
push
iret
int
lods
xchg
xchg
dec
push
sub
xchg
inc
scas
cmc
add
fwait
cmp
or
jns
xchg
mov
fnsave
inc
imulb
cmpsl
jg
xorl
aas
pushf
jae
cmc
xlat
push
insb
out
jecxz
imull
divb
dec
lods
andl
lret
xorb
testb
push
in
sbb
or
ss
mov
aad
or
sbb
in
adc
stos
out
sub
jns
in
fidivs
ljmp
cmc
insb
sbb
repnz
roll
test
push
jle
mov
inc
jmp
fisubrl
es
jae
xor
push
cmc
mov
je
scas
push
stos
enter
xor
lods
cmpsb
mov
arpl
inc
or
mov
jl
xor
aad
shl
ja
add
mov
test
jo
cmp
push
insl
inc
push
shl
or
xor
jo
xor
inc
movsl
cmc
add
sbb
jge
jne
scas
or
cltd
test
sbb
lcall
xor
in
pop
sub
mov
or
xchg
mov
dec
ret
in
xchg
loopne
addr16
int
mov
test
cmc
lahf
and
inc
jnp
push
jmp
push
mov
ror
or
fdivrs
adc
dec
repnz
cli
imul
push
leave
in
je
imul
inc
aaa
stos
and
mov
jmp
lret
inc
and
fcoml
push
cmp
mov
inc
xor
inc
pop
lret
jg
mov
sahf
cmp
divl
and
fnstenv
out
fistpll
cmp
pop
jge
out
imul
xchg
jge
jg
mov
movb
mulb
out
popa
lcall
cmpsb
fisubl
push
mov
and
xor
popf
inc
jbe
leave
adc
sahf
outsb
ret
iret
repz
jecxz
push
arpl
push
packssdw
les
cmpsl
je
das
ljmp
stc
xabort
out
cmpsl
in
jnp
sub
add
lods
lcall
lds
es
inc
test
mov
aaa
into
sahf
ret
sbb
xor
inc
aas
mov
mov
inc
stc
cmp
fisttpll
mov
movsl
jle
xchg
lret
test
out
data16
xchg
xchg
or
xor
cli
sahf
cmp
and
sbb
inc
adc
xchg
orl
jns
leave
mov
scas
out
ds
sub
sub
std
jnp
aad
stos
test
out
hlt
iret
mov
dec
jmp
fidivrs
pop
sti
add
iret
loop
ficompl
aas
xor
into
fsubr
fcomps
mov
ret
or
cmpsb
jge
or
pop
iret
cld
add
add
cld
out
xor
mov
cld
xchg
push
sub
mov
cmp
stc
mov
outsl
cmp
pushf
movsl
sub
pop
pop
andl
jne
xor
jp
add
fisubrl
xor
ja
lahf
test
mov
jne
jecxz
mov
cmpsl
mov
jae
adc
xor
pop
imul
mov
xor
clc
push
xchg
push
dec
ljmp
push
or
mov
mov
imul
sub
jp
mov
jno
xchg
jle
dec
mov
pop
add
mov
scas
and
inc
cmovne
insb
pop
loope
add
dec
push
add
outsb
jb
hlt
inc
stos
int
jmp
mov
pop
testl
test
cmp
mov
js
jle
insl
arpl
dec
mulw
xchg
xor
mov
pop
dec
roll
popf
jg
sbb
mov
jmp
nop
imulb
mov
test
fstps
sahf
gs
cmp
testl
es
loope
add
fnstsw
pop
into
and
mov
cmpsl
pop
daa
aas
repz
test
xchg
decl
imulb
ljmp
dec
xor
out
sub
cmc
dec
lds
push
xchg
call
imul
sub
je
movsl
vandps
push
dec
and
aam
scas
add
aaa
sub
ja
jb
cltd
lea
lret
mov
xor
std
add
mov
pusha
pusha
rcr
ficomps
loopne
sbb
in
jle
adc
outsb
loopne
fwait
fs
sub
les
dec
add
divb
enter
lret
js
fnstsw
push
mov
lcall
mov
and
cltd
sub
lds
jno
test
fists
aaa
das
add
pushf
cmp
stos
ror
test
add
cmpsb
dec
and
sahf
push
fistps
or
inc
test
repnz
or
mov
xchg
add
or
fnstenv
cmpsb
in
pusha
push
xchg
mov
flds
std
rcrb
mov
aam
roll
mov
pop
ret
outsl
sbb
cs
mov
mov
icebp
mov
mov
and
inc
lahf
or
pop
mov
mov
cwtl
mov
out
sbb
in
lds
xchg
sbb
sub
mov
stos
push
fisubrl
and
xor
cmpsb
lods
aas
popf
xchg
sar
jb
popf
pop
scas
pop
mov
out
xchg
aam
jb
fsubp
pusha
fiaddl
push
inc
cwtl
sti
pop
pusha
cld
pop
push
or
insl
dec
mov
xchg
xchg
sbb
dec
out
xchg
jmp
jae
adc
fucomp
sub
jno
loop
push
mov
popa
aaa
fldenv
adcl
test
fsubrs
iret
fmull
js
inc
ficompl
sub
shrl
bound
cltd
and
out
cs
adc
loope
fldenv
rclb
cltd
iret
mov
je
lock
pushf
jb
fisttpl
loopne
daa
in
dec
dec
leave
mov
jnp
mov
and
ljmp
cld
add
cltd
fwait
mov
mov
mov
scas
jmp
data16
loopne
lret
dec
cld
cwtl
jb
sbb
jmp
xor
aas
mov
mov
ret
fldcw
push
arpl
add
dec
xor
pcmpgtd
lods
out
iret
and
xchg
jbe
rorl
bnd
lds
loop
lock
mov
cmp
popf
mov
mov
mov
cmpsb
cmpsb
arpl
pop
fs
sub
cmpsl
pop
dec
stos
mov
lods
mov
or
scas
scas
sub
sbb
lahf
mov
push
call
push
stc
imul
dec
out
push
mov
div
test
or
dec
ret
inc
xor
add
jmp
icebp
push
out
and
fstps
push
cwtl
loope
push
xchg
dec
adcl
push
fwait
stos
add
in
xlat
out
adc
stos
repz
sub
cwtl
xor
xlat
hlt
ret
test
or
out
sub
fs
xchg
aaa
js
xchg
jmp
ret
sarl
xchg
lret
lret
aam
or
popf
xchg
fwait
mov
mov
icebp
pop
fsubl
xor
lcall
mov
fsubl
xor
cmp
sbb
fisubrl
cltd
cmp
or
insb
jne
out
xchg
out
test
imul
mov
mov
clc
adc
sub
pop
int3
subb
scas
push
pushf
adc
push
mov
mull
mov
sbb
push
cwtl
cmc
mov
xlat
test
pushf
ja
dec
add
mov
or
mov
repz
fwait
mov
scas
cli
mov
mov
dec
rorl
push
xchg
cmc
xor
dec
aaa
xlat
test
mov
loopne
mov
dec
rorl
jle
fwait
jl
jns
sbb
enter
lcall
xchg
and
rcl
push
cld
push
mov
cli
dec
jge
pop
push
insb
mov
push
cmpsl
xchg
icebp
stc
faddp
fnstsw
addr16
mov
andl
adc
es
cmp
mov
xchg
movsb
aad
in
movsb
dec
xchg
cmp
insb
fcmovnbe
and
push
mov
sahf
loopne
adc
dec
xor
enter
adc
ror
data16
out
es
sbbl
cmp
adc
les
and
roll
dec
je
lret
scas
or
repnz
cmp
adc
fisttpll
xchg
dec
xor
sbb
xchg
into
inc
lock
xchg
or
les
insb
cwtl
ret
push
stos
lahf
jmp
sbb
test
sti
sahf
xor
mov
cmp
push
pop
bound
cwtl
ljmp
and
mov
out
mov
dec
fiaddl
leave
scas
mov
adcb
dec
fwait
add
test
dec
jl,pn
in
cmpsl
cltd
or
pop
pop
sub
popa
stos
ficoms
cltd
icebp
sub
jbe
loopne
cld
cmc
std
cs
ja
mov
sub
mov
inc
int3
repz
mov
push
rcll
mov
arpl
and
sub
mov
daa
add
xor
aas
dec
mov
sub
lret
andl
adc
out
jg
fsts
sub
push
scas
jne
mov
jo
sbb
mov
out
xor
imul
mov
ficomps
adcl
inc
pop
pop
lds
adc
mov
fiadds
and
jge
shll
pop
pop
or
adc
mov
ret
int3
inc
in
test
int
push
ljmp
xlat
xchg
jge
mov
ja
pushf
xchg
inc
cmp
pop
cmpsb
in
psrld
adc
idivb
test
rcr
pop
mov
repnz
pop
inc
dec
test
test
jg
sbb
dec
mov
shl
pop
in
sub
mov
cmpsl
inc
push
and
xor
pop
leave
arpl
mov
inc
push
adc
jle
lret
xchg
fwait
in
insl
jle
imul
stos
enter
push
xchg
mov
int3
cmpsl
add
mov
sbb
xorb
jg
add
fstp
xchg
out
ja
outsl
sahf
cwtl
and
cmovnp
xchg
fs
or
outsb
imulb
cmp
dec
fildll
push
std
inc
lea
cmp
bound
jmp
test
int3
mov
cli
cld
fistl
in
out
jge
addr16
repz
jno
fdivrp
in
in
inc
sbb
adc
test
cli
test
test
sbb
dec
mov
sbb
sub
add
push
ret
out
call
cmp
xchg
mov
mov
loop
loopne
movsl
scas
xchg
mov
lahf
add
xor
in
mov
mov
cmp
shll
movsl
cmc
or
lcall
outsl
aam
jle
mov
hlt
aad
shlb
bound
mov
inc
pop
ljmp
xor
pop
in
ret
sub
lcall
add
push
je
lahf
fwait
pop
test
out
push
jbe
enter
into
xlat
popf
adcl
or
push
into
dec
popl
orl
fcmove
fs
push
xchg
ret
pop
mov
ds
jns
jbe
add
mov
pop
or
and
cli
xchg
loope
bound
in
lret
and
into
movsl
mov
push
test
adc
or
orl
pop
pop
test
fdivrp
pusha
push
scas
or
inc
mov
push
sub
cld
xor
sar
adc
jae
mov
inc
lcall
cmc
dec
pop
inc
sbb
out
xchg
lds
sub
mov
sbb
out
mov
shl
inc
cmp
stos
lret
shll
mov
jl
les
mulb
jecxz
int3
scas
ret
scas
push
shlb
mov
and
testl
mov
mov
rolb
shrl
jge
sarb
dec
jo
inc
sub
das
incl
cltd
pop
pop
cwtl
das
mov
mov
push
xor
addl
inc
rolb
popf
sbb
xchg
mov
shlb
or
out
pop
shl
fs
das
add
mov
ljmp
aas
sbb
in
mov
bnd
ljmp
jle
leave
jg
gs
sub
or
ds
stc
and
sbbl
pushl
inc
dec
jmp
mov
xchg
popa
dec
pushf
cltd
outsb
push
mov
or
or
fdivl
adc
out
mov
movsl
std
mov
popa
test
rcl
jb
aad
shll
scas
ja
es
jl
gs
ja
popa
pop
scas
lret
into
out
xchg
std
mov
repz
pushf
sub
movsl
mov
insb
dec
jmp
outsl
inc
push
and
shll
push
mov
xchg
divb
jb
xchg
aad
lcall
mov
cmpsb
gs
out
clc
setl
adc
rcll
out
pop
fldenv
add
out
mull
xchg
jmp
and
cmpsb
sbb
daa
mulb
std
shlb
dec
aaa
das
fsub
negl
test
scas
cmpsb
sub
lcall
mulb
fsts
pushl
or
rol
xchg
int
inc
sub
add
sbb
mov
lods
mov
aad
in
out
stos
popf
jbe
push
outsl
cmc
sub
nop
pop
bnd
es
andl
add
mov
ss
xor
movsb
inc
pop
aad
repnz
in
das
sub
push
pop
sub
leave
cltd
addr16
inc
icebp
popa
pushf
addr16
jno
cmpsb
andb
popf
sbb
mov
test
jns
or
and
clc
lock
mov
scas
mov
fldenv
loop
test
xor
ret
cmp
jmp
xchg
push
xor
scas
sub
xorb
mov
mov
outsb
mov
sbb
jecxz
xchg
bound
movsl
adc
jmp
les
and
pop
pop
sbb
lods
xchg
shl
push
das
insl
mov
js
mov
push
test
pusha
mov
hlt
nop
bound
nop
call
dec
jecxz
mov
xor
add
pop
mov
cs
mov
aad
xchg
sbb
lcall
xchg
movl
divl
fisubs
mov
mov
cwtl
xlat
dec
arpl
inc
icebp
cwtl
imul
jecxz
lahf
or
xchg
jmp
dec
ret
fwait
fwait
pushl
filds
lahf
enter
pop
inc
fldt
xchg
shl
dec
add
and
xor
mulb
lret
lahf
sbb
andb
jno
sbb
test
mov
call
repnz
test
es
mov
add
fwait
xchg
xchg
mov
scas
mov
dec
out
fdivs
xchg
cli
je
hlt
or
xchg
imull
scas
add
jmp
mov
inc
ficoms
mov
inc
fndisi(8087
out
sti
inc
sub
dec
sar
push
mov
xchg
into
das
push
test
jnp
xchg
push
push
adc
loopne
fdivs
mov
mov
int3
jle
arpl
fwait
icebp
mov
jne
cbtw
dec
test
lods
dec
test
outsb
repz
stos
in
lods
pop
add
addr16
inc
pop
daa
xor
mov
mov
cmp
jle
nop
scas
xor
mov
push
cmpsl
jp
in
or
and
or
fsubr
dec
pop
loopne
fwait
pop
iret
jge
mov
mov
and
scas
cmpsl
sbb
popl
xor
inc
or
test
lods
cmpsb
ret
into
imul
or
cli
xlat
xor
imul
sub
mov
dec
and
into
outsb
cmpsb
ds
add
sbb
cmp
mov
or
cmpsl
imul
add
pop
repnz
or
sahf
push
test
xchg
cmpsb
xchg
daa
fisubs
jle
xchg
int
fldl
in
or
xor
mov
into
sub
arpl
pusha
scas
inc
shr
enter
jmp
sub
icebp
ror
rol
stos
mov
jecxz
flds
in
cli
mov
stos
es
dec
pop
ja
push
lcall
out
imul
xchg
lcall
sub
sti
add
arpl
imul
int
nop
cmpsl
cld
jge
lret
mov
mov
sub
in
rcll
iret
int
jle
fnsave
testl
shll
xchg
insb
in
xchg
pop
daa
mov
lret
cmp
dec
xor
add
add
jbe
sbb
xor
fimull
out
sbbb
mov
pop
hlt
das
xchg
jmp
gs
mov
mov
adc
mov
loop
cltd
call
inc
fwait
xor
in
gs
mov
sbb
insb
shlb
stc
push
adc
outsl
mov
test
xor
scas
xchg
push
movsb
leave
mov
inc
mov
push
or
adc
idivl
fstps
jle
subl
jns
movsb
fisubrl
ret
test
pusha
jg
push
push
lea
imul
sub
mov
andl
ljmp
mov
enter
inc
outsl
xchg
iret
movsl
outsb
cmp
test
mov
mov
and
outsb
flds
ss
cmp
lods
jns
in
cmp
adc
lahf
ss
sahf
xchg
icebp
scas
fwait
ret
repnz
insb
add
cmpsl
inc
scas
xchg
stos
fsubs
movsl
fwait
sbb
adc
inc
fistpll
sbb
das
mov
int
pop
sub
sarl
std
mov
dec
push
sbb
out
stos
push
pop
add
mov
out
push
add
jle
xchg
and
mov
test
adc
outsb
cmp
or
adc
dec
lret
adc
xor
movsb
test
fbstp
test
pop
inc
fwait
ss
or
lea
lahf
pop
pop
xorl
es
sti
sub
push
mov
scas
sbb
cmp
mov
flds
mov
repz
jp
test
fsubrl
dec
sub
bnd
mov
pop
dec
jbe
int3
xchg
jb
push
push
movsl
fisttpl
test
jb
test
lret
loope
jnp
notb
xor
adc
icebp
pushw
sbb
int3
gs
imul
das
gs
pushf
sub
pop
add
mov
ret
ss
fisubrl
ds
stos
std
push
mov
mov
dec
int3
xor
loope,pn
repnz
push
or
lds
xchg
mov
dec
scas
adcb
xor
push
sub
pop
leave
push
push
cmp
add
les
test
sti
insb
out
cmpsl
sub
add
add
lcall
out
xchg
test
std
ret
sub
outsl
jecxz
daa
mov
mov
scas
sarb
into
ljmp
gs
jnp
ret
sahf
insb
jecxz
mov
jbe
jno
pop
test
mov
loop
out
xchg
call
xchg
inc
aam
ds
enter
loopne
lods
test
jmp
dec
popa
inc
stos
pop
pop
push
sub
rcr
cld
daa
fisttpll
lea
jnp
xor
pop
das
hlt
mov
jg
fcmovnb
jno
or
sub
popa
lcall
jg
stc
or
pop
cs
ficompl
xchg
jno
and
icebp
sub
scas
loopne
add
push
inc
nop
pop
push
mov
mov
sub
xchg
dec
cltd
pop
cmp
xor
int3
out
and
xchg
or
fwait
stc
sub
hlt
loop
inc
fst
mov
xchg
pushf
aam
fcmovbe
xchg
ret
and
outsl
inc
int3
sub
out
pop
push
gs
adc
adc
xor
movsb
lcall
sahf
aam
inc
xchg
jl
push
int3
scas
and
popf
mov
sbb
cltd
sbb
jns
outsb
scas
inc
inc
aaa
clc
jecxz
pusha
mov
loopne
push
popl
or
pop
cmpsl
cmp
scas
mov
push
das
mov
test
stc
xlat
fisubrl
cmp
mov
ret
add
xchg
jbe
lods
jle
mov
not
xchg
mov
add
jg
sbbl
shrl
mov
pop
jle
ret
mov
xchg
mov
mov
sbb
lds
mov
xor
in
sarb
test
pop
mov
mov
cmpsb
stc
sub
std
scas
adc
cmpsl
and
stc
mov
add
add
cmpsl
dec
and
ljmp
or
les
repnz
mov
cmpsb
pop
jae
mov
das
shll
inc
mov
test
xlat
push
jecxz
inc
dec
mov
sub
lock
mov
push
lret
cs
inc
out
arpl
loope
lret
lret
daa
add
xchg
and
aad
cmp
int
scas
xor
xor
insb
js
int3
lods
fs
addr16
pop
ds
aaa
and
scas
out
dec
into
stc
enter
add
mov
mov
inc
rcr
leave
lds
jecxz
xchg
jmp
test
cmc
xlat
adc
icebp
lahf
mov
lds
jbe
int
cmpsb
or
lret
inc
mov
outsb
test
push
sub
cmc
jns
mov
or
adc
jo
mov
fwait
gs
icebp
into
xchg
xchg
mov
inc
loop
outsl
and
cmp
je
xchg
mov
xorl
jne
in
lds
inc
clc
addr16
out
test
fsubrl
lods
shrl
jo
push
bnd
push
sub
inc
jp
fdivp
cmp
xchg
cli
insb
pandn
and
jnp
imul
les
sub
pop
movsb
into
jno
jae
inc
xchg
rcr
in
inc
shl
enter
cli
cmc
xor
lret
jp
dec
stos
mov
cmp
push
test
push
testl
or
in
negb
dec
pusha
movsl
pop
mov
lahf
push
cli
mov
mov
rcll
mov
orb
jae
dec
ljmp
xchg
mov
inc
mov
jge
sub
add
sub
inc
xchg
mov
or
xor
out
xchg
push
pop
stos
lock
test
ljmp
enter
dec
aas
sub
enter
movsb
leave
adc
lods
test
add
enter
lea
sub
lea
jg
mov
mov
leave
repz
test
pop
scas
mov
movl
mov
mov
fistps
shlb
mov
dec
or
dec
iret
out
push
ret
xor
test
das
flds
pop
adc
addr16
mov
xor
aad
pop
scas
pusha
test
call
xlat
adc
shrb
rolb
data16
xchg
in
mov
push
or
pushf
pop
ret
xchg
insl
aaa
std
dec
hlt
add
jo
cmp
mov
xchg
je
sub
jge
jbe
stc
sub
movsb
repnz
hlt
incb
bswap
adc
outsl
cltd
idiv
fbld
popf
ljmp
imul
lea
pop
pop
cli
outsl
and
testl
gs
fidivrs
je
ss
cmp
popf
ljmp
int3
or
mov
push
fcoml
sbb
test
daa
jmp
adcb
xchg
ss
inc
jne
xchg
xor
test
and
cmp
ret
shll
sub
pop
setp
xchg
and
aad
nop
add
xlat
mov
movsl
adc
into
std
cmp
jecxz
popf
fbld
mov
mov
dec
sti
sarb
test
das
xor
inc
les
jmp
mov
jl
dec
or
lret
pushf
jb
fmuls
shr
lahf
mov
imulb
scas
and
adc
xlat
iret
pop
cs
mov
pusha
jmp
sub
xor
test
fdivrl
test
fisubl
ss
leave
mov
shll
mov
fldl
cwtl
adcb
ret
icebp
mov
out
mov
iret
mov
lea
cs
mov
fbld
fldt
cmpsb
xchg
iret
int
pop
cmp
lea
and
mov
jmp
sti
inc
bound
jmp
sub
or
mov
or
xchg
repnz
mov
test
decb
lcall
xchg
fistpl
outsl
mov
loope
loope
sbb
dec
leave
mov
push
shlb
sbb
and
popf
pop
lock
aam
mov
roll
sbb
mov
and
movsl
bound
sti
lret
sbb
fsubl
call
pop
out
sub
mov
cmpsl
pop
shll
dec
cwtl
test
push
ffree
adcl
popf
aam
out
faddl
inc
mov
xor
pop
out
push
or
pop
jge
jl
xchg
mov
imul
sahf
leave
fstp
mov
xchg
fwait
nop
cmp
sti
fnstcw
ja
subb
fcompl
lods
mov
mov
pusha
cmc
mov
xorb
inc
and
popf
add
and
mov
mov
dec
and
mov
fstpt
and
fcmovb
or
inc
jmp
or
in
jb
adc
adc
lahf
fnstcw
mov
clc
repz
stos
cmc
jnp
mov
mov
bound
lcall
in
and
cmp
movb
fwait
jae
int3
jg
lahf
stos
sbb
mov
subb
cmp
rolb
push
cli
mov
js
pop
inc
ss
fiaddl
mov
push
fisttps
xchg
and
xor
jmp
inc
push
push
push
sbb
sub
xchg
fcom
mov
fldt
sbb
xor
cmovae
jne
sub
inc
cmp
ficompl
ret
cmp
negl
or
call
lret
std
adc
and
push
pushf
jbe
mov
pop
cltd
rcll
xchg
in
cmp
subl
imul
xchg
adc
or
cs
test
fs
enter
js
lcall
and
jmp
jns
les
sub
addr16
mov
adc
cmc
jg
or
pop
fs
push
js
xor
and
xor
nop
mov
pop
shrl
xorb
and
daa
mov
popa
lock
dec
repz
out
mov
sbb
or
xor
pop
ja
xchg
negb
or
jnp
and
xchg
inc
cwtl
call
std
leave
or
into
data16
jg
int3
mov
jge
lea
mov
cltd
ss
cmp
inc
cmp
movsb
aaa
jmp
ficomps
testl
jno
xor
popf
in
mov
icebp
mov
mov
ret
dec
aad
xchg
jl
les
int
fbstp
mov
sbb
ss
inc
jmp
pop
loop
idiv
lahf
add
jge
icebp
jns
add
mov
push
sahf
lret
inc
test
cmp
pop
in
mulb
adc
mov
pop
push
loope
xorl
cld
jp
mov
pop
in
test
dec
fnop
das
jno
dec
imul
mov
out
mov
or
xor
pop
notb
addr16
xchg
arpl
jbe
sub
dec
ljmp
cmp
dec
sarb
and
pop
aam
push
xchg
addr16
pop
xlat
mov
xor
push
sub
rcr
loope
std
sub
xchg
ds
or
test
cmpl
mov
leave
ret
call
orb
cltd
ljmp
cmpl
jno
in
mov
xchg
sbbb
sahf
cmc
sbb
das
jne
aaa
test
and
hlt
std
jnp
cmpsl
idiv
outsl
sub
aas
notl
lock
push
cmpsb
xchg
adc
push
xor
sbb
mov
sbb
cmp
jg
mov
test
sbbb
lods
subb
pop
cmp
aam
jnp
jo
sub
mov
call
fstpt
cltd
cltd
test
imul
cltd
data16
test
mov
addl
and
jle
iret
js
fcomps
or
add
add
dec
mov
sbb
and
jno
inc
mov
shrb
sbb
ss
jne
lahf
scas
daa
and
mov
jp
pop
test
mov
mov
mov
xchg
xchg
xchg
addl
push
add
hlt
ljmp
mov
jle
fs
test
dec
or
inc
cs
sti
xchg
lcall
fsubrs
xchg
dec
lret
stos
xor
jmp
test
cmpb
mov
movsb
in
or
lret
fwait
arpl
mov
repnz
int
into
out
cmc
es
adc
sahf
inc
into
in
or
loope
push
adc
testb
test
cmpl
cmp
adc
pop
repz
inc
adc
ds
cs
adc
arpl
in
jp
cmp
out
jnp
movsb
or
stc
iret
in
lahf
add
pushf
cmp
cmpsb
dec
or
jbe
fldenv
in
adc
scas
test
xchg
testl
mov
dec
jle
sbb
loopne
fstl
pop
leave
loopne
or
push
fwait
push
outsb
imul
jne
inc
mov
clc
push
pop
sbbb
fwait
mov
lea
mov
scas
bound
sbb
sub
loop
out
jl
dec
and
inc
test
push
jnp
iret
adc
mov
ss
jl
xlat
scas
mov
fnsave
xor
iret
jle
cmpsb
clc
fsubrl
ja
pop
and
pop
fdivl
call
divl
es
inc
xchg
or
into
mov
popf
push
stc
cmp
cs
cmp
es
fmuls
shll
shrb
mov
cmpsl
mov
xchg
dec
dec
sbb
aad
sbbl
add
test
adc
fmull
and
push
and
leave
sbb
mov
add
je
lods
insl
or
mov
jecxz
and
rclb
cmpl
mov
sbb
outsb
in
mov
ljmp
fstl
test
je
call
mov
xorl
test
sub
push
fsubl
call
les
inc
mov
dec
subl
cmpsl
xlat
pop
mov
dec
call
lds
icebp
repz
inc
xchg
push
cmpsb
push
out
repnz
sahf
mov
js
xor
add
insl
mov
gs
in
jge
cld
cmp
push
aam
lahf
pop
sub
ljmp
dec
sti
inc
inc
loop
popa
pushf
xor
inc
mov
lock
mov
sbb
js
sbb
mov
cmp
cmc
adc
in
ficompl
test
mov
gs
int3
pop
inc
dec
movsb
and
shll
mov
jp
pop
and
xchg
inc
aam
aas
cmp
xorl
dec
in
dec
lods
jl
stos
in
nop
xchg
outsb
xor
cli
push
out
jo
scas
stos
xorl
mov
les
add
push
shr
rclb
ficompl
mov
pop
jbe
sbb
jns
fmuls
lea
xchg
push
cmp
push
fiadds
cld
out
lret
and
mov
iret
mov
xor
insb
inc
lds
pop
in
push
test
fsubrp
push
imul
push
pop
jo
nop
or
dec
cmp
inc
or
out
mov
addr16
mov
push
movsb
cmp
cmp
dec
imulb
push
sbb
sbb
inc
jbe
jmp
dec
push
jbe
in
or
sub
xchg
mov
data16
ljmp
roll
mov
dec
insl
movsl
add
mov
fadd
orl
mov
jb
ljmp
fwait
cwtl
cmpsl
in
pop
xchg
dec
xlat
repnz
cltd
imul
cs
orb
ret
jmp
mov
jmp
jb
push
out
or
push
lods
jae
mov
xchg
lods
fidivrl
xchg
cmp
add
xor
xchg
push
mov
fs
inc
lods
movsb
sub
mov
mov
push
js
into
test
adc
mov
mov
std
std
lods
imul
inc
fiaddl
test
or
and
test
popl
mov
shlb
push
mov
mov
jmp
std
cs
and
push
fwait
adc
rep
lahf
mov
rol
and
in
jne
in
ljmp
movsb
mov
daa
lret
jmp
std
lods
and
stos
lods
xchg
int
mov
pop
lods
or
cmp
inc
es
decb
sub
in
add
sub
adc
out
dec
cmp
mov
push
or
shr
cmp
adc
sub
aad
or
cmpsb
mov
out
pop
mov
ljmp
test
call
xchg
out
daa
adc
fidivrl
xor
xorl
test
sbb
cmpsb
mov
dec
in
push
neg
mov
sbb
mov
push
lock
sahf
sahf
jo
aaa
mov
mov
jmp
js
xchg
xor
mov
bound
xchg
sub
xchg
push
aam
dec
sbb
enter
rorb
or
aam
mov
cld
inc
pcmpeqb
and
ret
in
xchg
insl
repnz
mov
xchg
pop
jnp
mov
in
sbb
aas
ficompl
sbb
lret
adc
jns
adc
int3
idivb
inc
dec
dec
mov
pop
insb
sub
inc
sbb
xchg
or
lahf
xchg
and
scas
and
movsb
aad
mov
out
jg
shr
aam
push
sub
out
stos
jno
ss
fwait
pushf
arpl
mov
enter
or
jmp
leave
jmp
mov
jecxz
sbb
hlt
fs
stos
inc
insb
popf
mov
pop
sbb
or
loopne
into
daa
stos
jo
fidivrl
popf
push
cwtl
lcall
ror
sub
mov
adc
sub
or
jmp
adc
dec
sub
mov
mov
pop
xor
rcrl
nop
adc
or
hlt
pop
out
adc
pop
jmp
test
pusha
jg
enter
inc
lods
pushf
lods
mov
and
leave
leave
cmp
andb
out
and
xchg
and
mov
stc
push
cli
sub
shll
repnz
insl
rcll
xchg
ds
mov
xor
gs
mov
sub
push
xchg
cmp
popa
dec
push
fisubs
inc
std
sbb
xor
pop
cmpsb
xchg
pop
xchg
insb
adc
inc
inc
lods
dec
mov
shll
cs
test
push
sahf
pop
jbe
jbe
jmp
lods
mov
xor
jge
jmp
leave
xchg
jle
mov
stos
mov
jmp
mov
in
mov
out
test
loopne
add
adc
or
xchg
push
push
push
jbe
mov
clc
push
sub
sub
dec
sbb
cmp
adc
or
fdivrs
int
sbb
dec
dec
pop
incl
icebp
fistpll
push
push
sbb
daa
fisubs
mov
cmp
sti
pop
sbb
xchg
mov
push
mov
or
pop
push
sbb
dec
xchg
sbb
lods
fadds
fwait
cmp
test
jecxz
xchg
ss
ja
shl
movsl
loop
push
orl
mov
fmull
ds
jbe
xor
inc
cmp
addl
mov
shlb
sbb
sbb
push
pop
lret
dec
push
leave
add
orb
dec
js
sbb
pop
push
and
add
addl
inc
ja
jle
cltd
add
mov
add
roll
sbb
movsl
add
sbbb
dec
popa
gs
lock
mov
loopne
push
mov
cmpsl
jge
or
into
push
idivl
mov
lret
scas
jb
in
add
mul
scas
loopne
cwtl
push
lods
push
bound
inc
add
cld
or
xchg
lret
addr16
or
test
cmpsl
adc
push
imul
sub
xchg
adc
jp
lds
popf
sahf
mov
xchg
sbb
sbb
in
out
sub
and
sub
int3
sbb
arpl
pop
mov
aas
push
fmuls
loope
nop
sbb
and
sub
mov
sub
and
test
adc
push
xchg
mov
lret
mov
jns
movsb
outsl
xchg
pop
insb
movsl
into
mov
adc
add
sub
mov
outsl
push
lods
rcll
and
mov
and
mov
inc
outsb
pushf
fs
rcll
iret
pushf
repz
cmp
push
fdivrl
push
in
or
aaa
jecxz
push
fisubrs
fisubs
out
add
mov
imul
xchg
fisubrs
lret
lock
aad
jg
enter
adc
ss
mov
enter
fdivs
mov
jmp
and
lahf
pop
sahf
inc
fidivl
pop
mov
sarl
mov
fcomps
jl
stos
or
out
push
cltd
jp
adc
leave
mov
es
adc
mov
imul
cld
sbb
xor
testl
lea
push
rclb
faddl
ss
dec
mov
push
rorl
add
mov
out
adc
jmp
movsb
insl
sbb
sub
mov
pop
sub
cltd
cmc
xor
mov
add
jno
push
sbb
insl
jle
inc
lods
stos
adc
aas
xchg
fisubs
in
mul
mov
mov
jmp
jo
andl
jno
into
jg
lea
add
in
jle
scas
mov
out
mov
in
and
in
xorl
pop
scas
mov
dec
push
cld
ret
add
fstpl
cmpsl
inc
jge
jge
es
scas
mov
js
das
pop
push
xor
mov
pushf
xor
lret
push
xchg
sbb
repnz
cmp
fnstsw
sbb
ljmp
mov
mov
in
enter
xchg
pop
ret
aaa
movsb
cs
xchg
imul
bnd
jns
icebp
test
ret
popf
push
jmp
sub
stos
mov
imulb
jp
push
loop
xchg
mov
enter
test
push
xlat
sbb
fadds
lods
stos
in
test
add
sub
or
test
xor
in
pop
out
cmpsb
cmc
mov
loope
aam
jo
es
mov
cmp
sub
push
xor
div
adc
xor
mov
repnz
push
rep
aad
jg
xor
sbb
adc
scas
xor
xlat
outsl
addl
pop
dec
add
andb
sbb
push
enter
dec
cmp
int
cmp
mov
iret
out
ds
daa
fwait
scas
cmp
js
lahf
lahf
movsl
lahf
xchg
frstor
into
addr16
das
pushf
mov
scas
mov
mov
sub
add
add
dec
into
xor
lahf
js
push
cli
popf
inc
dec
push
cmp
scas
iret
mov
push
pop
mov
insb
ljmp
ljmp
pop
xchg
cmpsb
adc
adc
or
and
jae
shl
lret
and
sbb
add
mov
xorb
mov
jno
outsl
mov
in
xor
aad
das
sub
pop
iret
fwait
sbb
and
xchg
inc
rclb
popf
cmpsb
out
sbb
rcll
mov
mov
jl
cmp
std
sti
pushf
fistps
add
and
mov
cwtl
stos
xor
imul
icebp
fcmovu
cmp
enter
mov
jnp
cmp
fwait
cmpl
rcrb
or
lret
inc
jle
lea
shll
push
out
insl
lea
jecxz
push
cltd
call
fcompl
bound
adc
je
jbe
inc
aas
or
vpcmpgtb
mov
roll
gs
sbb
aad
jae
and
pop
push
test
sbb
movb
stos
pop
or
lock
test
sub
mov
jp
movsl
add
dec
dec
in
pop
push
outsl
imul
inc
mov
popf
ret
fwait
lret
jg
cmpl
cs
mulb
shlb
cmp
cmp
mov
int3
xchg
fs
sarb
das
mov
jae
or
dec
icebp
and
iret
lcall
mov
xchg
aas
lcall
mov
xchg
inc
js
lahf
lds
test
jnp
jl
enter
jecxz
imul
ror
stos
mov
mov
dec
in
outsb
mov
in
popf
call
mov
mov
stos
push
subb
adc
jle
repnz
xor
les
repz
adc
in
mov
push
jno
lds
repz
imul
daa
cmp
insl
mov
push
rolb
sub
subl
repz
push
push
jno
dec
xor
cmp
lret
call
mov
jmp
js
scas
xor
or
dec
xchg
dec
std
js
cmp
cltd
clc
data16
jmp
repnz
mov
xchg
xor
push
xor
nop
xchg
jbe
bound
sub
jnp
rcrb
push
add
das
shl
rcl
fildll
lods
mov
cwtl
cmp
mov
dec
int3
push
add
iret
mov
fstpt
xlat
icebp
add
sub
jle
addl
fbld
imul
push
aad
cs
xorb
fsubs
lahf
mov
roll
movsl
fldl
and
insl
pop
push
mov
mov
mov
dec
or
mov
popa
push
xchg
mov
js
xor
add
loop
jnp
ss
scas
or
pop
andb
xchg
fists
insl
mov
fstpl
iret
sub
subb
xor
inc
shr
push
or
pop
out
xor
mul
divl
and
jne
mov
push
iret
jmp
pop
mov
sahf
lret
enter
movsb
in
das
dec
pop
out
jge
adc
lahf
push
in
imul
pop
outsl
mov
in
hlt
fldl
xchg
mov
xchg
loope
data16
int
outsl
stos
xchg
fcompl
shr
xchg
loopne
arpl
popa
imul
pop
imul
sub
gs
mov
xlat
sarl
ret
out
or
push
int3
rcll
cmp
gs
sti
out
mov
scas
xor
ficomps
inc
add
js
xor
jecxz
rcll
xor
mov
leave
stc
movsl
sub
pop
mov
dec
mov
arpl
data16
sahf
sbb
test
and
sbb
jbe
aas
cmp
in
adc
fmuls
pop
sub
repnz
jnp
push
mov
shrb
cmp
pop
insl
lret
aam
sub
test
push
sub
add
lcall
dec
ljmp
xlat
xchg
push
inc
fsincos
jmp
test
sub
adcb
or
pop
popa
xchg
jns
push
popa
rolb
pusha
jno
jnp
jge
out
fcoml
push
stc
sub
lahf
jecxz
pop
mov
dec
jle
add
insb
or
cld
in
fs
out
daa
xor
sbb
in
xor
jmp
add
shl
ja
in
push
jo
repz
fidivrs
call
push
jmp
sub
xchg
cmpsl
lahf
je
ljmp
repz
and
jae
mov
jl
cmc
or
add
dec
cmp
fbstp
xor
out
push
pop
pop
push
arpl
popa
sbb
mov
mov
mov
push
cmp
lahf
ret
imul
hlt
jp
push
inc
push
shrb
mov
and
scas
push
pushf
dec
xor
mov
repnz
or
add
mov
repz
fisttps
cmp
mov
jno
inc
fldcw
mov
lret
gs
fimuls
sbb
imul
cmp
idiv
sub
pop
imul
lahf
push
inc
hlt
orb
ja
push
test
mov
in
ljmp
push
jecxz
iret
shll
mov
jo
push
hlt
out
cli
sbb
mov
out
and
loope
adc
stos
dec
lcall
bound
bound
or
mov
jle
push
mov
push
fwait
lods
mov
cmp
fldenv
xor
loopne
push
mov
lret
dec
mov
xor
push
lahf
push
fsubrl
lock
notb
pop
ljmp
and
jg
mov
jg
adcl
xor
fwait
cmp
push
mov
mov
inc
jl
push
imul
pop
arpl
dec
mov
cmpb
scas
mov
andl
jne
add
repnz
or
xchg
inc
jb
adc
lods
pop
adc
loop
mov
or
jmp
jp
cwtl
sbb
sti
pop
jle
push
div
shl
fmull
pop
jl
nop
mov
sub
mov
inc
insl
mov
enter
adc
push
mov
std
mov
jp
pop
cli
cld
fstpl
out
inc
or
xchg
adc
mov
mov
mov
es
test
imul
xchg
imul
jge
imul
pop
test
jle
ret
sub
loopne
xchg
push
subb
aad
push
rol
fnstsw
leave
jno
lret
jno
dec
movl
or
je
gs
inc
push
pop
lods
ret
cs
stos
jns
lret
dec
jp
stos
and
clc
xor
fstpl
adc
push
test
ljmp
fwait
nop
sub
rorl
cmp
fsubl
or
xchg
aaa
mov
xchg
aad
jne
mov
xor
fdivrp
loopne
mov
arpl
mov
push
mov
push
andb
cmp
jle
mov
cmp
scas
mov
add
jns
pop
mov
test
rorb
push
arpl
jne
scas
negb
sub
fwait
pushf
sbb
mov
test
in
fsubs
scas
pop
stc
jo
jns
lods
test
js
clc
add
rol
xor
mov
iret
and
iret
aad
or
test
ss
mov
test
out
ljmp
int
xchg
pusha
xchg
jno
xor
loop
ret
dec
popa
jle
jbe
mov
icebp
negb
lret
fsubrl
mov
mov
dec
das
out
fs
pop
cs
inc
int3
jg
jo,pn
out
insl
mov
jnp
mov
jmp
inc
push
testl
movsl
je
push
fcomps
ljmp
test
or
repz
mov
popa
iret
and
xchg
fwait
sti
jmp
cwtl
gs
mov
cmp
enter
push
negl
xchg
getsec
cld
mov
sbb
ljmp
into
lds
dec
mov
mov
mov
loope
std
lahf
inc
cmp
sub
and
stc
pushf
xchg
cmpsl
fld
daa
pusha
popa
sub
mov
cmc
add
mov
mov
sbb
movl
daa
sub
into
mov
pushf
jg
aam
and
push
fldcw
ljmp
test
jg
xchg
call
or
xor
cld
fildll
push
cmc
sub
into
loope
imul
inc
mov
mov
loope
xchg
xor
pop
push
push
shr
mov
clc
add
cmpsl
and
jg
jbe
addb
fwait
mov
dec
jg
mov
jg
pop
sub
dec
mov
test
cmc
out
jl
pop
pop
mov
inc
mov
xor
mov
pushf
inc
out
addr16
pushf
add
mov
xchg
and
pop
sub
lahf
adc
sub
inc
fucomip
lods
fistps
pushl
or
jg
jne
mov
cmp
or
pop
dec
push
shlb
imul
hlt
pop
fiaddl
sub
jb
daa
imul
inc
sub
sbb
pop
mov
sbb
in
xchg
pushf
movl
mov
mov
mov
xor
add
push
fdivp
push
lods
ret
clc
rclb
loop
add
iret
rcrl
jmp
jno
out
shll
sbb
xchg
imul
adc
or
xor
lahf
adc
addr16
pop
mov
dec
jp
in
inc
out
dec
aaa
mov
sbb
push
rorb
std
dec
push
dec
daa
sar
jg
push
enter
lret
mov
sub
jge,pt
aad
push
iret
inc
and
in
dec
and
out
dec
es
xchg
gs
sahf
or
inc
xor
dec
push
mov
test
push
mov
and
ret
xorl
dec
loopne
cmp
push
mov
inc
jo
cmpsl
mov
daa
cli
sahf
sub
pusha
js
test
push
dec
addl
es
outsl
adc
andb
adc
lea
aad
lods
into
jecxz
stos
mov
movsb
shlb
ret
jne
adc
sub
jne
and
roll
push
rcrb
mov
push
and
fstpl
push
iret
mov
inc
imul
das
movsl
sbb
lahf
push
fistpll
sahf
les
sbb
into
sbb
inc
call
sub
jg
cld
mov
lahf
insl
rcrb
lret
lcall
ret
outsl
fadds
mov
sub
mov
xchg
push
mov
or
and
lea
in
pop
push
cltd
incb
push
fs
shrb
cmp
jle
div
lahf
call
pop
daa
xchg
mov
int
push
sbb
dec
movsl
mov
jp
push
into
xchg
pop
or
mov
stc
testl
xchg
popa
pop
scas
cmp
cmp
jp
jle
ljmp
push
and
loopne
cmp
fcoml
inc
jbe
push
aas
mov
sarb
cli
int
cmpsb
out
mov
cmpsb
loope
mov
lret
sbb
jnp
scas
lahf
jecxz
in
add
or
lea
dec
test
fldl
dec
push
ja
sbb
aam
fiadds
pushf
dec
push
jbe
ss
nop
je
test
cwtl
popf
mov
inc
ss
out
sub
mov
add
cmp
dec
jl
mov
lock
push
xor
xchg
xchg
pusha
fildll
ja
dec
into
mov
and
cmp
pop
inc
fdivrp
fcomps
dec
and
jmp
movsl
jle
mov
xor
test
add
es
push
icebp
leave
ss
mov
ds
lcall
push
loope
mov
mov
nop
repz
cmp
fcmovnbe
mov
popf
fidivrs
mov
daa
ffreep
popf
pop
fdivrl
mov
ret
cmpl
imul
xor
dec
int
xchg
sbb
lret
sarl
imul
or
mov
fadd
icebp
ja
jg,pt
lcall
aas
jne,pt
xor
sub
mov
mov
pop
je
xchg
xor
lcall
mov
and
lahf
stc
and
dec
cmpl
loope
mov
mov
andb
movb
or
in
push
mov
mov
mov
fs
push
lcall
lret
lahf
inc
and
in
lods
jg
push
sbb
jno,pt
xchg
or
outsb
je
jb
and
popa
in
mov
cmp
xchg
stc
adc
mov
add
cmp
dec
das
inc
mov
adc
cmp
and
mov
cmpl
shlb
leave
lahf
adc
cs
fidivl
fisubrs
subl
sbbl
sbb
adc
das
scas
sbb
mov
stos
insl
mov
mov
pusha
mov
out
xor
lea
test
dec
les
bound
dec
pop
push
testb
testl
or
mov
das
scas
lock
loop
adc
aad
sbb
inc
ja
lahf
fs
imul
mov
outsl
fisttps
xchg
nop
xlat
loope
mov
sbb
mov
es
mov
pop
jno
negb
adc
call
movsl
sahf
xchg
jle
iret
dec
mov
cmpb
test
sti
pop
cmp
sub
push
cmpl
in
dec
fwait
icebp
mov
mov
out
xor
ret
dec
mov
std
cmpsb
sbb
jo
outsl
xchg
jno
sbb
or
mov
push
std
mov
xchg
sbb
dec
repnz
mov
inc
shll
scas
insb
push
sub
lcall
jg
test
shrb
xchg
ss
inc
sti
outsl
imul
sub
and
dec
imul
push
test
dec
mov
mov
fcomps
sub
add
shr
mov
movsb
push
xchg
stc
insl
xchg
inc
insb
add
mov
rorb
mov
or
push
xor
inc
popa
xchg
push
flds
mov
mov
jae
xor
mov
lock
lea
dec
sbb
jle
add
jno
xchg
adc
mov
call
xor
movsl
stos
xchg
add
and
adc
jecxz
pop
jmp
jle
add
push
cmp
xor
push
dec
pop
jnp
movsl
ret
or
loop
or
mov
lds
push
sbb
test
dec
lock
out
cwtl
sbb
xchg
fnstenv
rorl
outsb
mov
pop
or
out
lock
jbe
nop
push
fistpll
cmp
mov
and
cmpxchg
push
inc
not
mov
adc
es
mov
fcomps
out
data16
mov
stc
xlat
dec
orl
bnd
jbe
ljmp
jl
shlb
pop
repnz
test
fistl
movb
bound
inc
bswap
out
mov
inc
pop
pop
push
mov
out
mov
mov
push
iret
addr16
sub
shlb
lahf
shl
test
insl
mov
pop
push
scas
cmc
sub
sbb
and
andl
dec
push
movb
inc
pop
test
xchg
iret
push
mov
mov
in
jecxz
call
rorl
mov
shlb
rcll
sub
xlat
mov
xor
dec
jmp
idivl
sub
stos
jbe
push
pop
cmp
sti
mov
rorl
xchg
pop
sub
ror
cltd
sbb
inc
into
cs
movsl
jbe
jmp
sub
imul
jle
dec
cmp
sbb
mov
lret
ret
or
fnstcw
xor
jl
xchg
inc
ss
cmp
mov
dec
push
lret
cmp
mov
pop
flds
out
leave
sub
mov
xor
leave
imul
rorb
movsl
pop
imul
test
idivb
outsl
pop
jb
or
push
ror
add
rolb
fidivl
push
mov
push
imul
fisttpl
sahf
mov
iret
jge
test
lods
stos
sbbl
jb
xor
sbb
mov
loope
dec
sbb
xor
mov
mov
insb
out
pusha
out
bound
repz
cltd
aam
insb
xorl
loop
mov
repz
jbe
roll
xchg
repnz
leave
xor
rclb
mov
das
xchg
jge
xor
fcmovne
jnp
popa
mov
and
mov
add
adcl
mov
rcrl
lcall
insl
repnz
or
mov
or
lds
je
inc
cmc
movsb
clc
lret
lret
icebp
push
mov
fldenv
sbb
mov
jmp
push
xchg
aas
aam
xchg
mov
les
mov
test
mov
xor
shrl
inc
popl
cmpsl
push
shrl
std
cmp
inc
or
xchg
adc
popf
stc
cld
inc
jo
inc
in
movsl
mov
outsl
das
into
dec
or
sub
pop
jp
xchg
mov
and
inc
movsl
add
cmpsl
or
mov
pop
mov
sbb
push
out
js
mov
in
iret
sub
roll
data16
cmp
mov
xchg
dec
neg
fnstcw
jle
xchg
test
in
add
adc
in
cmp
lock
ljmp
mov
je
in
inc
in
or
notl
xchg
inc
scas
lcall
or
fidivrs
pop
in
negl
xor
test
mov
cmp
imul
xchg
adcl
mov
xchg
dec
hlt
cwtl
ficoml
dec
lea
test
pop
movsb
cmp
inc
das
mov
xchg
ljmp
lds
shll
inc
imul
dec
imul
inc
dec
pop
int
imul
push
cmpb
out
cmp
mov
fisubrs
fsubs
arpl
add
inc
rcl
popa
or
add
cmp
into
fucomip
inc
int
pop
push
cltd
xchg
xchg
pop
push
push
adc
mov
inc
pop
sbb
imulb
push
ret
inc
lods
cmpsl
imul
sbb
cs
mov
pop
xchg
lea
outsl
int3
cmc
dec
icebp
lcall
out
xchg
orb
fnstsw
enter
jbe
adc
sbb
push
mov
addr16
mov
mov
sub
into
mov
and
pop
xorb
dec
pop
stos
push
xor
faddl
mov
pop
xchg
sbb
cli
xor
and
sub
cwtl
mov
sub
ss
jle
pop
mov
push
ja
cmp
pop
sub
or
mov
adc
xchg
sahf
orb
insl
test
icebp
add
mov
push
shll
push
arpl
xchg
and
push
mov
loop
xor
inc
lods
adcb
dec
ds
jne
or
lods
ficompl
mov
out
lock
pusha
pop
jmp
ljmp
jo
inc
test
push
daa
inc
es
test
lods
mov
int
stos
xchg
and
divl
call
sub
ds
clc
cwtl
call
ss
addr16
and
jno
fucomi
lret
out
pop
in
pop
jno
dec
mov
push
test
jle
popa
mov
fistl
or
xlat
dec
test
lahf
cwtl
xchg
sahf
or
int3
cli
out
decb
lret
pop
ficompl
pop
push
fists
xchg
jb
test
clc
mov
dec
repz
insb
insl
mov
jne
jmp
cltd
sub
popa
push
bound
jmp
mulb
call
outsw
xchg
inc
test
and
push
stos
mov
cmp
adc
jbe
leave
iret
pop
ret
mov
and
leave
shrl
aad
insb
sub
test
imul
mov
mov
scas
cmp
pop
add
rol
in
sahf
and
repz
jbe
out
inc
andl
lcall
xchg
out
popa
loopne
xchg
mov
xchg
mov
cmpsb
in
mov
xchg
test
lahf
lock
cmp
fmul
mov
inc
xor
cmp
jmp
add
loop
or
fmuls
in
adc
sub
imul
dec
inc
and
pushf
or
xchg
jge
fsubrl
adc
shrb
test
mov
cmp
loopne
dec
out
sarl
push
push
cwtl
ljmp
pop
jmp
jecxz
mov
fld
ror
mov
js
jecxz
in
or
nopl
nop
clc
std
cmp
sbb
xchg
out
repnz
inc
lods
std
enter
pop
adc
in
pop
push
push
in
jg
ljmp
adc
sub
jns
xchg
in
dec
out
mov
jno
xor
mov
leave
xchg
out
ficoms
push
mov
iret
adc
adcb
jp
shrl
test
pop
push
insl
xor
jb
aam
mov
xchg
mov
mov
sbb
std
and
sub
pop
les
jo
push
mov
stos
dec
mov
push
ret
pop
sub
sarl
xor
pop
sbb
lods
pop
pop
jo
repz
cli
testb
imul
scas
outsl
jg
in
in
movsb
inc
mov
xchg
mov
jo
das
imull
push
mov
out
xchg
xorl
fwait
scas
std
lods
ret
gs
in
lock
sub
out
fcomps
jg
lahf
or
inc
test
test
call
cmp
dec
enter
sbb
fidivl
ja
sbb
sub
cmp
xchg
cmc
shll
push
les
cmp
cmp
das
xlat
pushf
xor
test
outsl
mov
es
mulb
std
mov
test
out
and
xchg
testb
insl
fistps
stos
cwtl
ret
mov
inc
pop
jbe
mov
hlt
jb
adc
daa
xlat
fcompl
or
loop
lea
add
sti
subl
cmovge
out
sub
lret
pop
popl
dec
jp
gs
sub
fstpl
jmp
shlb
sbb
shlb
dec
pop
xchg
adc
aas
jg
fisubrs
cmpsb
pop
jne
std
cmp
loop
xchg
imul
or
push
test
mov
inc
mov
rclb
sub
sub
cmpsl
test
rcl
nop
push
xor
fimuls
sbb
dec
sbbb
testl
push
push
jbe
mov
out
mov
pop
xchg
notl
iret
sub
negb
adc
ds
adc
inc
mov
push
lcall
popf
push
sbb
imul
mov
outsl
scas
rcrb
adc
fisttpll
pop
jne
mov
lret
mov
out
pop
mov
test
es
shlb
mov
mov
outsb
ror
icebp
xchg
inc
int
sbb
push
jg
pop
out
lods
ret
shrb
shlb
sub
sbb
rcl
sub
into
insb
test
xchg
lods
sub
dec
dec
sub
ljmp
cmp
into
fcompl
mov
arpl
pop
jp
arpl
dec
xchg
rcll
mov
rolb
xchg
adc
fstp
pop
call
jp
js
ljmp
adc
push
xor
rclb
or
mov
mov
leave
jns
cmpsb
adc
shrb
mov
xor
in
shll
add
cmpsb
ja
jnp
shrl
push
js
mov
shr
jmp
js
mov
rcr
in
or
fnstsw
sbb
jp
aaa
pop
pop
rcll
add
xlat
mov
jnp
out
lods
es
cmc
ja
lea
rcl
xchg
repnz
outsl
shrb
mov
or
lahf
test
scas
cmp
popf
lods
xchg
or
jne
push
mov
call
out
and
shr
jmp
pop
les
shrb
pushl
ss
imul
shll
sub
xor
jg
inc
mov
xor
bound
leave
dec
shlb
outsl
bound
jns
shll
jo
cmp
rorl
mov
rorb
mov
rorb
mov
adc
rcrb
imul
sbbb
mov
lods
mov
test
and
int
sahf
fmul
cmc
lcall
jns
mov
xlat
push
out
jae
jle
mov
push
pop
xchg
xchg
xchg
outsb
sti
xchg
cli
movsb
cmpsb
rorl
and
stos
jb
aam
sbb
call
dec
stos
rorb
pop
push
stos
ljmp
movsl
sti
ja
pop
jp
mov
sbb
es
xorl
cmp
xchg
push
jl
and
mov
mov
push
inc
cmpl
mov
jg
aam
adc
or
mov
pusha
xor
sbbl
aad
ljmp
mov
rolb
loopne
xchg
jmp
lret
pop
shl
pusha
pop
mov
outsl
lret
inc
in
inc
and
fstl
out
or
in
loopne
xchg
stc
les
cmp
dec
imul
mov
rorl
aas
popf
mov
push
inc
push
jae
inc
popa
bound
cltd
mov
adc
stc
jg,pn
dec
subl
cmp
nop
pop
stos
dec
mov
int
insl
and
jle
imull
lea
ret
push
imul
gs
mov
gs
pop
fs
sub
out
lods
into
inc
mov
cmp
dec
push
mov
xchg
repz
jge
cmpsb
test
and
dec
movsl
mov
jle
addb
popa
pusha
mov
jne
repz
xchg
test
mov
test
ljmp
lret
cltd
mov
dec
jb
repz
fnstenv
sti
cmp
sbb
aad
sbb
divb
rcr
ja
nop
push
cmp
iret
imul
sti
aad
shlb
add
repnz
sahf
lea
mov
mov
push
les
addl
test
jle
sub
xor
pop
jmp
pushf
sbb
stc
insb
sub
scas
fmuls
insb
ficomps
test
mov
pcmpeqb
stc
lods
movsb
dec
cwtl
mov
test
lods
ret
imul
adc
test
stc
lret
jl
lahf
cld
cli
in
push
pop
outsb
sub
test
xor
test
orb
push
fidivs
into
and
inc
outsb
xor
insl
vpunpckhqdq
test
lea
sbb
sub
ret
repz
jno
inc
add
and
mov
mov
loopne
mov
dec
push
je
rorl
dec
fidivrs
fwait
mov
stc
popf
je
das
popa
mov
push
mov
out
mov
scas
stos
push
mov
std
cmpsl
daa
pop
push
int3
dec
call
repnz
cs
jno
mov
jp
jnp
scas
pop
adc
xor
fdivl
xor
fisubs
popf
pop
ja
outsb
dec
out
pop
mov
jb
movsl
js
xchg
out
dec
shlb
fwait
cs
push
fisubl
pop
ret
jae
pusha
mov
fisubrs
imul
sbb
lods
mov
popa
pop
lret
popf
sub
or
test
mov
enter
mov
fs
dec
inc
cmpb
std
test
repnz
fsubs
pusha
scas
lret
fs
adc
test
sbb
dec
jb
cltd
xchg
fidivrs
dec
add
or
outsb
jno
outsl
mov
sub
cmp
xor
lock
jno
int3
iret
pushf
dec
rclb
cmp
and
int3
cltd
rcrl
sub
adc
cmpl
mov
addr16
mov
dec
loop
fcoms
loop
xor
out
cmp
mov
outsl
sarb
push
jmp
lods
leave
mov
push
stos
mov
das
xchg
pop
xor
in
pop
adc
pushf
mov
or
cmpsl
lret
add
cmp
mov
test
xchg
inc
out
js
sbb
ret
xchg
sub
iret
out
xacquire
stos
jo
xchg
test
mov
cwtl
dec
aas
stos
xchg
xchg
fistpll
imul
add
dec
cmp
ret
mov
stos
lea
add
jne
pop
lahf
in
ret
and
lret
or
adc
sub
fs
arpl
xchg
sub
xchg
scas
inc
test
lret
add
dec
out
rclb
fdivs
mov
and
jmp
icebp
outsl
mov
cmc
outsb
test
fsts
ret
add
push
iret
push
orl
adc
mov
mull
sbb
test
add
dec
xor
sub
sub
lret
inc
mov
jge
aaa
sbb
rcll
ss
leave
pop
pusha
push
jbe
ficoml
dec
jle
add
sub
jae
sub
mov
mov
dec
in
adc
push
cmpsl
arpl
jnp
jae
sbb
out
mov
xchg
jae
jg
cmc
and
rcrl
popa
cmpsb
sbb
jp
repnz
pop
xchg
jbe
jo
ret
inc
mulb
popf
add
movsb
outsb
mov
lea
mov
jmp
jle
cmpsl
cmc
xor
xchg
xchg
dec
xor
iret
jae
sbb
imul
sub
enter
fimuls
push
lahf
cmpxchg
xlat
or
mov
jg
push
cmpl
movsb
idiv
scas
xchg
orl
adc
mov
mov
movsl
jg
rolb
dec
rolb
jecxz
fwait
lock
lock
fmuls
and
insl
sarb
mov
aad
es
imul
xchg
jae
mov
or
mov
mov
fwait
out
cli
ljmp
push
cmp
xor
imull
add
jecxz
mov
inc
je
add
cld
stos
sbb
and
loopne
push
out
daa
inc
fsubrs
adc
push
loopne
sbb
popa
std
mov
jmp
jnp
xor
pop
sbbb
cs
call
push
mov
sbb
push
hlt
loop
add
cmc
repz
pop
into
jg
jns
mov
cmp
cmp
sti
jl
cmp
fisttpll
fildll
jl
rcrb
out
pushf
xchg
scas
lret
push
ss
pop
dec
call
cltd
inc
push
add
std
jae
mov
push
xchg
in
shlb
push
jno
mov
cmpsb
adc
ljmp
imull
repnz
fldt
mulb
or
icebp
popa
and
push
add
sub
popa
sbb
cmpl
push
jmp
cmpsb
popf
stos
repz
sahf
xor
out
push
or
rcl
movsl
inc
and
mov
in
jp
gs
fistpll
addl
cld
ret
mov
xor
ljmp
dec
add
les
into
cmpsb
les
lds
call
jae
ds
enter
or
and
adc
fisubs
jecxz
pop
and
sub
cmp
inc
cmp
inc
std
lea
xchg
cmp
push
xor
pop
test
mov
lret
push
test
fadd
cmc
gs
xchg
lcall
fildl
testl
mov
mov
jno
mov
shl
aam
adcb
dec
pop
cli
jg
push
mov
rep
mov
inc
cwtl
ret
addr16
mul
mov
movsb
dec
jnp
lds
loop
aam
dec
bound
stos
adc
sbb
negb
cmp
push
fcompl
dec
push
jp
outsb
lahf
in
mov
jle
in
mov
sarl
mov
lds
shr
lods
and
outsl
mov
pop
aam
js
push
cmp
sub
aaa
jle
idiv
lds
das
fstpl
add
inc
js
imul
xlat
test
push
xchg
xor
fcoml
xor
add
jl
push
call
sub
dec
movsl
push
lret
enter
shlb
inc
mov
adc
jb
popa
test
mov
lea
mov
mov
push
fcompl
or
cmpsl
pop
leave
sub
fisttpll
iret
iret
imul
or
fsubrp
shll
out
xor
jae
pushf
pushf
pop
sub
mov
pop
mov
jo
sbb
cli
xchg
mov
fnstcw
xor
xchg
ss
addb
loopne
and
mov
mov
jbe
xchg
subb
data16
sbb
pop
or
xchg
sbb
mov
pop
mov
in
daa
and
ljmp
or
ja
push
je,pn
cmpsl
fisubrl
add
xchg
sub
sbb
sahf
ja
cwtl
mov
call
rorb
pop
fmuls
in
fbld
pop
bnd
or
es
mov
cmp
fimull
sub
and
and
dec
push
jp
xchg
repz
sub
clc
inc
dec
xchg
fsubrp
jae
jg
jmp
pop
xchg
push
mov
dec
mov
out
or
clc
inc
inc
loope
inc
fcomip
cltd
and
in
negb
xchg
push
out
mov
pop
push
lods
mov
insl
inc
orb
or
jae
jns
mov
xchg
add
sbb
addr16
enter
shl
imul
pop
punpcklwd
cwtl
addr16
xor
cmp
push
xchg
andb
pop
int
cs
daa
or
jge
xchg
inc
pop
popa
jae
fwait
dec
aam
sbb
sbb
sti
daa
sbb
icebp
gs
mov
test
cmp
psrlq
pushf
int3
arpl
mov
push
mov
inc
or
ss
insl
pop
jns
jbe
scas
stos
lods
cmp
dec
hlt
imul
imul
mov
mov
mov
popa
stos
pushf
or
mulb
mov
adc
sbb
xchg
arpl
or
sub
cld
int3
sti
mov
outsb
sub
in
adc
cmp
push
hlt
das
xchg
add
jmp
test
or
js
xchg
mov
outsb
repnz
js
mov
push
scas
in
fcmovne
dec
inc
scas
mov
dec
and
dec
push
jne
insb
stos
cld
subb
mov
mov
jae
xchg
add
loope
leave
jge
out
cmp
pop
mov
fsubl
sub
add
pop
insb
add
leave
pop
dec
jecxz
sub
pop
std
movsb
ljmp
mov
push
imul
xchg
jg
pop
pop
repnz
into
cmc
je
out
scas
lods
sub
jno
xchg
loop
sub
push
test
mov
cmpsl
sbbl
out
sub
push
mov
adc
bound
out
shl
fnsave
add
push
arpl
inc
mov
adc
pop
fists
mov
jge
pop
stc
pop
in
stc
ss
imul
fnstenv
jb
jo
ja
scas
enter
arpl
or
dec
popf
xor
pop
int3
imul
test
loop
aaa
jle
insb
lret
push
xlat
mov
mov
cmpsb
cmp
mov
stos
push
mov
shll
cmpsb
outsb
and
push
mov
shld
sbb
mov
stos
pop
shrl
dec
imulb
pop
mov
adc
ds
mov
mov
daa
mov
and
xchg
es
mov
imul
pop
pop
fdivp
inc
scas
testb
and
leave
inc
lock
jmp
leave
int
jl
test
dec
mov
lea
cmp
xchg
ret
lahf
loope
adcl
das
js
ret
mov
adc
pushf
int3
mov
inc
subl
xor
xchg
and
rorl
std
jno
fidivs
inc
cli
imul
pop
jne
lea
nop
adc
out
add
jo
scas
xorb
fcmovnu
jecxz
xor
inc
or
cmp
jno
add
dec
scas
imul
fistpl
mov
adc
push
insb
mov
add
cwtl
adc
sbb
in
pop
cli
fdivr
fst
andl
insb
jl
popa
jle
cmp
pop
cmpsb
mov
shrl
dec
xchg
pusha
loopne
fsubs
fstps
jge
sbb
dec
negl
adc
jae
pop
mov
gs
mov
into
mov
cmpsb
xchg
and
add
or
orl
sub
sub
dec
icebp
rcrl
pushf
inc
mov
orb
dec
arpl
outsl
and
mov
push
adcb
pop
arpl
mov
outsl
xlat
mov
sahf
push
outsb
out
dec
mov
in
stc
lock
adc
aas
jp
fsubs
enter
mov
adc
jae
jb
sbb
imul
push
sbb
cmpsb
nop
bound
sbb
pop
lea
jns
cltd
je
daa
xchg
dec
fidivl
orl
int
cmpsb
lret
inc
int3
fs
shl
xor
mov
lcall
test
or
dec
test
cmp
pop
adc
dec
into
gs
cmpsb
ss
lret
cmpsl
cmc
sub
or
sub
dec
lock
mov
mov
test
mov
mov
imul
loope
jne
push
addr16
xchg
dec
cmpsb
mov
shll
imul
jmp
push
cmpsl
fsubl
repnz
and
pop
bound
out
dec
pop
and
and
mov
sbb
int3
xchg
add
xchg
sbb
loopne
add
xor
sbb
inc
or
add
test
mov
in
or
gs
insb
es
push
mov
mov
outsl
fbstp
add
dec
out
ljmp
cld
in
mov
sub
inc
cs
notb
or
js
add
adc
dec
dec
stos
std
mov
fstpl
orl
cwtl
and
xchg
into
sub
rcll
sub
std
stos
and
bswap
jnp
in
xor
out
stos
stc
fldenv
faddp
and
inc
jl
mov
hlt
iret
roll
movsl
sbb
and
cli
xlat
sbbl
xchg
daa
cmpps
popl
das
xchg
xchg
repnz
dec
inc
sbb
pop
int
icebp
xor
je
out
and
roll
into
popf
insb
ret
pop
dec
sar
xchg
movsb
cli
nop
lods
and
movb
mov
xchg
bound
dec
sbb
jg
enter
mov
in
dec
lea
imul
sbb
rcr
add
dec
idivb
inc
pop
cmc
dec
pop
and
mov
mov
out
out
hlt
faddl
enter
adc
add
inc
in
xchg
scas
sub
ja
lahf
xchg
stc
sbb
xor
movsl
fxch
mov
in
jnp
outsb
push
push
sbb
xchg
arpl
cmp
push
pop
ffreep
push
xchg
out
push
mov
lods
in
popa
xchg
lods
popf
call
outsb
pusha
mov
pop
cwtl
mov
cmpsl
cmpsb
dec
frstor
imull
or
outsb
dec
scas
add
jmp
or
test
sub
add
jnp
cld
sti
or
xchg
push
and
cmp
fstpt
lahf
outsb
orl
lahf
popa
or
push
gs
adc
xchg
ret
push
mov
fwait
mov
out
jbe
fisubrl
mov
rorb
in
add
pop
dec
insl
mov
fwait
xchg
arpl
push
push
xchg
sbb
movsb
imul
inc
out
inc
shlb
jmp
mov
inc
push
xchg
cmpsb
inc
mov
push
pop
rorb
push
mov
iretw
or
pop
lods
dec
dec
mov
pop
mov
aam
jo
fs
jb
movl
inc
cltd
or
sahf
ds
lcall
imul
add
dec
popl
fiaddl
xchg
sbb
pop
ja
test
outsl
push
sbb
xchg
mov
es
adc
popf
adc
cmc
jns
xor
jge
xor
jge
sub
jge
dec
std
into
dec
mov
xor
movsb
cmpsb
rolb
js
pop
lock
ret
add
fdivrl
in
mov
loope
cmpsl
add
in
adcb
rorl
and
jb
sbb
repnz
mov
call
outsb
fdivp
sbb
rorl
enter
cltd
hlt
xchg
rcr
shll
mov
sbb
add
xor
subb
adcb
mov
mov
cs
push
gs
pusha
sbb
cld
shll
shlb
and
data16
mov
pop
xchg
lret
aas
iret
loope
and
inc
sub
sub
jb
arpl
outsw
dec
mov
push
pusha
ja
dec
out
mov
xor
dec
xchg
pushl
mov
inc
xchg
stc
pop
mov
sbbb
or
arpl
bound
mov
jle
test
xchg
dec
sub
addr16
push
bound
pop
mov
sub
pop
negl
aas
pusha
arpl
sbb
xlat
ror
sarb
out
cmpsb
adc
insl
xchg
nop
sahf
test
jle
repnz
js
inc
cmp
mov
jl
lock
iret
and
popf
rclb
push
xchg
repz
mov
push
loopne
cmp
jnp
in
cmp
out
cmp
pop
pop
les
imulb
ficoml
int3
dec
jecxz
out
repnz
xor
cmp
insb
dec
fadd
xchg
xchg
hlt
fs
inc
adc
je
mov
jge
lahf
repz
jmp
loope
pop
popa
iret
aas
test
popf
sbb
movlps
mov
mov
out
loope
ljmp
push
pop
push
in
int
fcmovnb
lea
aam
adc
fnstsw
adc
ds
insl
fwait
in
push
cltd
xchg
mov
or
xlat
addr16
xchg
mov
dec
popf
adc
test
inc
lcall
mov
add
xlat
pop
inc
mov
int3
mov
mov
dec
stos
push
push
sbb
dec
mov
mov
xchg
xlat
sub
adc
dec
push
mov
mov
inc
dec
mov
les
sahf
into
divb
in
pop
testb
fsubrl
or
jmp
or
and
mov
and
lcall
inc
adc
jl
or
mov
rol
push
pop
xor
inc
jns
xchg
lret
int
cmp
stc
sbb
or
pop
pop
add
sub
fld
push
jmp
jnp
jns
out
int
or
fsts
clc
add
pop
push
daa
hlt
mov
mov
ret
xor
arpl
movsl
imul
jg
xchg
or
inc
mov
xchg
pushf
and
mov
cli
jg
imul
cwtl
xor
cmc
and
mov
pushf
cmpsl
sub
int
addl
jl
lods
xor
cmp
dec
movsl
pop
les
and
mov
cmp
cltd
dec
jno
aas
test
addr16
cmp
lcall
pop
inc
cmp
aad
xchg
cmp
fs
pop
testb
ficoml
lahf
jmp
stos
fists
xor
pop
or
sti
xchg
popf
dec
repz
pop
inc
mov
xchg
bound
ficoms
xchg
ss
adc
xor
xchg
repz
loope
mov
gs
or
mov
lret
out
jmp
into
in
lods
out
fsubl
std
inc
jg
jae
lock
insb
mov
add
into
push
xchg
loope
movsb
fsubrl
mov
enter
scas
xchg
les
aad
cli
lcall
inc
ja
fistpl
sub
adc
mov
jmp
lahf
add
fsubrl
dec
and
xchg
lahf
sti
or
dec
adc
insb
xor
jno
ret
fwait
out
ljmp
adc
icebp
inc
lcall
cmpsb
cmc
sub
xchg
call
jae
sahf
jno
subl
cmovne
imulb
into
aas
paddsw
push
and
pop
push
and
aad
movsl
xchg
in
push
ret
push
lds
push
add
pop
sbb
js
repz
mov
mov
push
lret
out
in
mov
and
xor
addl
xor
rcl
mov
std
cmp
std
es
into
movsl
sub
inc
xchg
push
dec
or
std
xchg
orb
lcall
mov
sbb
stos
jb
mov
and
dec
adc
call
push
fldenv
sub
or
add
mov
push
and
fmull
in
cwtl
test
xchg
xchg
lret
scas
cmp
lods
pop
fmuls
cmp
leave
test
sub
sbb
jl
or
adc
imul
leave
dec
insl
pop
ss
in
pop
push
insl
mov
scas
das
dec
cwtl
std
iret
fiadds
sub
loope
sbb
in
std
mov
mov
sbb
in
jecxz
stos
stc
fistpll
test
push
ljmp
aas
fs
out
pop
mov
mov
scas
fmull
outsl
sbb
outsl
dec
fcomps
adc
inc
dec
loope
adc
repz
add
push
cmp
pop
enter
push
rcll
sti
xchg
insl
lods
sub
test
out
bound
cmp
push
add
lcall
test
daa
fdivp
in
sarb
dec
lock
xlat
in
jo
mov
sub
xor
jmp
int
pop
aad
in
test
xor
cmpsl
ljmp
xchg
and
scas
mov
repz
nop
dec
push
cltd
dec
rorl
mov
fwait
out
out
aas
jl
mov
addb
aad
mov
mov
lcall
cmp
and
in
or
sti
push
loop
and
hlt
inc
cmp
push
pop
sbb
stos
outsl
or
push
aaa
and
in
sub
movsb
ja
mov
pushf
sbb
dec
addr16
adc
lock
test
imul
jbe
iret
xchg
lea
and
mov
std
push
pop
fwait
push
iret
inc
jnp
imul
mov
jnp
hlt
cli
jb
sbb
cmp
std
dec
push
xchg
cli
js
arpl
sbbb
lock
iret
pop
mov
out
pop
stc
aam
push
push
pop
fwait
dec
out
mov
test
imul
ret
gs
js
mov
push
add
jge
test
pop
roll
push
or
push
sbb
into
cld
cmc
mull
push
pop
xchg
lcall
sbb
jbe
dec
ds
adc
repz
mov
xor
mov
cmp
mov
cwtl
iret
pushf
mov
repnz
test
fdivrs
push
inc
xor
divl
mov
dec
sbbl
insl
adc
sbb
fisttps
push
lcall
lret
jne
jg
sbb
sbb
dec
gs
movhps
jno
inc
or
mov
mov
mov
sub
stc
fwait
jno
orb
cmpl
loopne
scas
mov
scas
test
enter
adc
lods
mov
xchg
inc
repz
clc
iret
mov
imul
lods
ror
pop
mov
cmpsb
pop
std
cld
test
and
mov
dec
sbb
xor
or
or
mov
xor
sar
mov
jb
lea
push
into
aam
mov
xchg
sub
sti
and
mov
sbb
shrl
shll
stos
jle
push
mov
mov
sub
in
fstps
cmp
les
sub
push
add
ljmp
pop
outsl
mov
mov
push
push
xchg
call
cmpl
sub
and
fucomp
lret
mov
sti
push
mov
push
fbld
aas
mov
hlt
sub
adc
stos
nop
pop
scas
fbstp
ljmp
in
sbb
push
jno
daa
dec
lds
sub
mov
ret
cmc
jae
dec
movsb
push
aas
mov
or
mov
push
stos
or
imul
out
xchg
fbld
mov
jno
push
ss
outsl
adc
es
and
std
inc
sbbl
insl
bnd
xor
mov
push
dec
ds
mov
jg
lret
fs
flds
add
push
and
sub
mov
ljmp
xor
dec
notl
gs
xorl
cmpsb
into
out
addl
and
test
pushf
sub
and
pop
loope
test
pop
scas
scas
pop
or
cltd
fisttps
mov
push
or
test
rcrl
and
pop
dec
stos
jns
pop
xchg
lret
or
cltd
ret
inc
pushf
clc
mov
sub
fldt
jp
les
lds
mov
push
sbbb
mov
jns
sub
dec
mov
lahf
stos
pop
xchg
enter
xlat
mov
sub
mov
stos
push
cmpsb
divb
or
fstl
xchg
addr16
lahf
push
adc
sbb
fsubl
jne
js
add
repnz
mov
into
out
in
or
cmpsb
or
imul
std
cmpsl
lret
ja
pop
jnp
pop
int
sahf
cmp
ret
inc
ja
mov
negl
jae
dec
test
scas
jle
ret
mov
mov
scas
pop
cmovle
jg
xchg
shr
mov
inc
mov
scas
pop
cmc
mov
mov
adc
rcrb
das
mov
pusha
mov
mov
dec
cld
out
push
mov
ds
or
xor
dec
fs
ja
fsubl
out
popf
push
or
push
push
mov
les
sub
lds
inc
loope
pop
cs
aaa
repnz
sub
mov
imul
out
mov
jmp
dec
pop
hlt
sahf
fwait
lahf
mov
xor
adc
dec
sub
in
das
jo
shl
xor
test
std
fiaddl
out
and
cltd
pop
iret
jb
xchg
into
xorb
rcrb
es
cmc
insl
or
pop
pop
loope
mov
sbb
cmc
pop
fst
out
inc
mov
mov
mov
mov
pusha
jae
jo
nop
cmpsb
mov
mov
setl
mov
mov
into
cmpsl
stos
mov
sub
mov
pop
into
pushl
jle
xor
pop
icebp
je
rcl
adc
icebp
mov
jae
sti
stos
sbb
mov
insb
scas
cmc
outsb
push
mov
jns
pushf
cmpl
and
jecxz
lret
fwait
nop
clc
push
pop
lcall
in
xor
jge
adcb
sbb
or
jecxz
xor
in
clc
sbb
outsb
enter
and
orl
sub
cld
pop
in
jg
mov
fstpl
mov
out
pop
fcmovne
fldenv
daa
movsl
roll
test
sub
fwait
jle
es
cs
xchg
pop
jno
not
xlat
icebp
sbbl
lahf
and
icebp
fmull
lock
mov
dec
mov
push
push
add
leave
mov
orb
clc
rol
outsl
sbb
pop
sub
sbb
leave
pop
xchg
and
or
inc
shll
push
rcll
xor
orl
out
fdivs
jmp
xchg
faddp
scas
jg
out
shrl
xchg
xchg
roll
pop
sub
call
negl
dec
out
mov
inc
enter
dec
call
lds
mov
aad
push
or
pop
mov
das
es
fwait
int3
imul
loop
mov
sub
xchg
rclb
in
das
mov
push
mov
cmp
jae
test
nop
mov
xchg
lcall
push
hlt
outsl
je
pushf
mov
pushf
mov
pop
jae
pop
mov
in
xor
shlb
jae
adc
mov
jle
std
cmc
ljmpw
pop
pop
ret
ss
xor
pop
cltd
repnz
sbb
ds
jo
je
xchg
sub
mov
mov
add
pop
fldt
mov
pop
mov
jmp
push
cmp
xchg
ss
shlb
adc
popf
je
or
mov
and
dec
shrl
dec
push
cmp
pushf
xchg
push
in
add
xchg
or
aad
inc
mov
mov
scas
jno
fscale
jg
popa
mov
pushf
insl
mov
gs
add
lods
adc
sub
push
and
xor
rcr
cmpl
leave
sarl
movsl
push
push
adc
pop
pop
aad
aam
mov
inc
into
mov
std
add
ffreep
pop
shrb
inc
sub
push
loope
imul
jo
popf
push
adc
add
jle
iret
adc
cs
jne
jmp
out
mov
add
ss
cmove
adcb
sub
inc
aas
dec
pextrw
or
mov
rclb
inc
cli
and
jae
lcall
mov
push
sub
sahf
cli
aad
test
inc
pusha
addr16
adc
pop
sbb
dec
popa
lea
cli
cltd
sbb
mov
pop
mov
dec
je
data16
fsubrl
inc
mov
mov
nop
js
adc
leave
std
mulb
lahf
or
sbb
outsl
inc
cld
dec
lahf
jecxz
das
cmp
nop
jg
cmpsl
outsb
pop
nop
mov
add
sub
cmp
inc
mov
adc
scas
add
iret
cmc
dec
pushf
fsubs
inc
std
test
repnz
insl
push
cmp
xabort
bswap
mov
loope
lret
repz
icebp
jns
jns
jmp
test
cmc
xchg
xor
imul
fiadds
cld
fidivrs
adcb
insb
fldl
popf
outsl
mov
sbb
daa
push
push
icebp
imulb
sub
bts
imul
push
cmp
push
daa
mov
xchg
outsl
sti
iret
js
jae
mov
js
add
ret
cwtl
or
mov
dec
popf
add
push
xor
lahf
mov
dec
xchg
and
adc
adc
sbb
lahf
loopne
jns
pusha
sbbl
imul
push
aas
sbb
cld
fisttpl
movsb
stos
lods
outsb
adcl
sub
ror
int3
jo
pushf
sub
sub
mov
jg
dec
stc
les
loopne
stc
cmpsl
and
in
in
sbb
xor
mov
in
jp
mov
fmuls
out
jns
pop
cmp
ds
jmp
loope
xor
fidivrl
je
cmp
lds
mov
rol
iret
pop
mov
xor
mov
cmp
fcompl
mov
cmpsb
dec
push
cwtl
mov
xchg
mov
mov
or
mov
ret
mov
mov
scas
ss
xor
shll
or
jo
jecxz
or
mov
mov
cmpsb
or
loop
mulb
aaa
out
arpl
mov
jne
xchg
push
sahf
flds
adcl
cs
fwait
push
cltd
in
clc
mov
in
push
pop
mov
and
mov
lea
adc
xchg
inc
cwtl
cmpsb
popa
test
inc
fadds
dec
push
test
shll
jp
dec
mov
test
jno
mov
cmp
and
clc
pop
xchg
aad
outsl
lods
jo
sub
pop
jo
outsl
and
cmp
mov
mov
testb
dec
pop
sbb
in
adc
cmp
xor
cmp
fbstp
fmull
jbe
pop
xchg
pop
or
adc
xchg
sbb
pop
fimuls
and
test
cltd
imul
lock
xchg
jno
bound
rcrb
adc
scas
cmp
jmp
jbe
rcrl
and
sbb
in
sbb
lods
mov
fyl2x
stos
decl
xchg
mov
fdiv
popf
lret
cmpsb
test
sub
dec
popa
data16
jns
xor
or
mov
sub
sub
cwtl
xchg
pop
bound
popa
dec
outsb
mov
rclb
push
jb
xlat
icebp
mov
pop
xor
outsl
add
jle
and
test
add
mov
call
data16
shrb
ss
hlt
jecxz
push
cmpsl
in
cmp
or
in
in
or
mov
cwtl
cmp
fistl
push
loopne
icebp
arpl
call
or
inc
outsl
outsl
xor
cmp
sahf
dec
cmp
dec
je
mov
push
jns
test
divl
xor
popf
pushf
xchg
or
jl
push
jo
lods
js
sub
and
fiadds
push
xchg
insb
xchg
loopne
xchg
test
aam
ret
sub
ja
pushf
popf
inc
jb
mov
xchg
mov
leave
jbe
fmuls
shlb
fcmovne
aam
arpl
xchg
mov
adc
inc
jmp
mov
loop
sti
xor
pop
ret
scas
loop
dec
popa
les
jns
lods
cli
bswap
les
cmpsl
push
into
loope
dec
ret
scas
rolb
lods
lahf
dec
repnz
dec
push
repz
or
pop
fwait
jle
repnz
ljmp
shrb
int3
push
mov
sbb
dec
aam
daa
cmp
outsl
out
stc
mov
or
lea
inc
or
push
lock
into
lcall
adc
gs
inc
or
inc
cmp
xor
jae
add
push
fsubrl
call
and
lock
mov
mov
sub
jg
std
outsl
dec
lcall
fldcw
rcrb
add
mov
and
pop
xchg
int3
or
cwtl
aam
mov
adc
and
repz
out
push
pop
or
fcmovnb
sub
inc
fildl
mov
xchg
xchg
cmp
xchg
scas
stc
les
out
insl
es
and
add
jbe
ds
dec
shll
xchg
and
bswap
stos
xor
and
imul
sub
mov
fidivl
fidivs
test
pop
stc
pop
jg
inc
mov
add
mov
fs
pop
sub
clc
push
cmpsb
mov
roll
push
fadds
jmp
test
stc
scas
in
and
inc
inc
or
add
icebp
fnstenv
ds
test
cltd
cmp
rorl
adc
scas
sub
push
aad
fisttpl
dec
push
lea
outsb
xor
mov
jle
adc
push
push
out
mov
lahf
pop
xchg
jg
dec
xor
pusha
fisubs
lods
mov
and
inc
push
fst
sbb
daa
cmp
xor
sarb
mov
iret
jecxz
cmovne
add
dec
lock
iret
add
sahf
sub
clc
test
loope
fmuls
mov
jb
fildl
and
cmp
pop
leave
icebp
pushf
mov
mov
inc
icebp
dec
aaa
gs
xor
pop
arpl
movsl
xchg
cli
jbe
and
dec
mov
fistl
inc
lcall
jnp
out
add
dec
xchg
idiv
push
scas
stos
in
jnp
jmp
lods
lds
and
xlat
jae
rcr
pop
and
mov
pop
mov
adc
sub
inc
mov
lahf
push
and
push
add
arpl
xlat
xor
jp
loop
inc
xor
scas
cmp
and
jl
mov
mov
arpl
mov
out
add
out
fxch
iret
mov
cltd
shrb
mov
or
push
lods
add
dec
and
mov
xchg
int
inc
fmuls
add
mov
ja
xor
push
sbb
clc
stc
cmp
push
rol
cmpsb
mov
pop
out
xchg
scas
out
ja
jmp
ret
cmpsl
call
ffree
fisubrs
mov
shlb
cli
add
sbb
add
test
adc
cmpsl
cli
in
sar
cmc
add
popf
push
repnz
lods
arpl
jne
jne
jno
sbb
cmpsl
jge
arpl
and
jne
mov
jmp
or
rcll
dec
fsubrp
jo
lcall
and
jbe
pop
adcb
popf
aam
adc
pushf
adc
sahf
sahf
aaa
vdivps
out
pop
jp
inc
xchg
testb
outsb
test
adc
push
add
shll
sub
sahf
filds
jge
cmpsl
mov
ffree
jae
das
je
neg
xchg
jbe
xlat
pop
pushf
adc
push
xchg
sub
insb
repz
loopne
rol
bound
out
fs
test
test
mull
xchg
in
cld
push
cs
divb
mov
icebp
lahf
pop
cltd
mov
ljmp
push
jns
pop
inc
inc
jmp
lret
incl
cmp
xlat
leave
jge
adc
andb
dec
scas
push
cmp
fsubrl
ret
add
cmp
push
pop
mov
cmpsb
cmc
pop
dec
iret
movsl
pushf
loop
out
sub
or
or
sarl
pushf
mov
sub
jg
int
clc
mov
inc
xchg
mov
xor
dec
jne
loop
jo
arpl
xchg
subb
cmp
push
jmp
or
sbb
mov
push
inc
popl
lea
mov
xchg
mov
inc
cltd
pop
mov
ret
inc
push
out
pop
jae
xchg
pop
push
repz
jmp
and
cmp
xchg
test
mov
cmc
inc
fistpll
adc
sbb
or
pop
xor
iret
pop
aam
incl
jae
sarl
decb
cmp
andl
int
cmp
std
stos
sub
ret
mov
push
cs
sahf
daa
mov
jo
adc
add
dec
sbb
add
into
js
mov
popf
or
fs
imul
ret
imul
rol
cmp
leave
outsl
in
cmp
cmp
rcrb
mov
nop
mov
jo
or
sub
cwtl
fcmovnu
movsb
ret
xorb
out
pop
and
adc
sbb
pop
sub
sbb
xor
insl
loope
rorb
lods
enter
sbb
pop
mov
jl
xorb
jo
das
xor
inc
cmp
aad
leave
sbb
movsb
cmp
insl
ja
mov
es
adc
sbb
insb
xchg
in
cmpsl
jbe
xor
repz
add
mov
pop
fnsave
cmpsl
rcr
xchg
mov
jno
add
mov
jbe
sbbl
and
sahf
adc
mov
xchg
idivl
lds
mov
aaa
jle
and
leave
fdivs
sub
mov
or
insl
cs
and
jnp
jb
mov
or
mov
fadds
out
sbb
fmuls
jae
test
out
out
fs
repnz
out
movsb
mov
movsl
movsb
out
loop
sbb
cmp
sbb
mov
arpl
sbb
cwtl
xor
xor
je
push
jge
out
jecxz
sub
test
mov
test
fs
jno
ljmp
cmpsb
inc
inc
mov
pop
jo
sub
xchg
mov
pop
or
push
jnp
arpl
cmpsl
and
mov
out
aad
rolb
push
pop
das
les
mov
fbstp
mov
fldenv
dec
inc
popf
or
push
insl
cmpsb
andl
sub
dec
pop
ret
arpl
icebp
xchg
sbb
inc
and
inc
fimull
sub
pop
es
rcrl
fstl
inc
sub
jae
sub
pushf
cld
jb
pop
push
inc
testl
int3
rolb
fwait
movsb
xchg
mov
xor
jae
and
nop
pusha
adc
cmp
push
push
mov
jnp
adc
adc
out
dec
test
andl
dec
gs
into
jecxz
add
xor
popf
jl
fdivrs
sarl
mov
mov
lret
sub
mov
mov
or
or
ret
mov
and
pop
or
push
xor
xchg
shrl
jl
mov
test
leave
rcll
adc
mov
mov
or
mov
pop
jbe
stos
in
mov
sbb
out
xchg
sub
xchg
dec
je
idivb
cmp
inc
fnstenv
outsl
sbb
jg
or
mov
scas
fxch
mov
pop
xchg
and
mov
nop
cmc
sbb
ljmp
mov
and
fcoml
insl
ret
dec
popa
mov
pop
mov
mov
ds
cmp
dec
lock
mull
xchg
xchg
cmpsl
mov
cmc
cld
mov
mov
or
lret
xchg
imul
daa
lods
decl
jmp
dec
lret
push
into
cmp
jne
notl
xchg
out
jl
test
sarl
ror
in
ret
shl
jns
aad
lahf
das
or
inc
mov
repnz
repnz
test
ret
jno
or
shrl
shlb
sub
fwait
in
inc
test
inc
jl
pop
jl
xchg
inc
daa
lret
int3
pand
mov
jo
sar
mov
ja
dec
fildl
scas
adc
sub
xchg
popf
inc
cmp
and
fmull
int3
fbstp
sbb
mov
and
outsl
mov
add
xchg
repz
ret
pop
shlb
dec
dec
shrb
leave
sub
xor
push
inc
sbb
mov
fstpl
dec
call
mov
shlb
lea
mov
into
add
xor
test
ret
xorl
fmull
frstor
loope
addr16
mov
popa
push
cli
add
ret
sahf
es
inc
imul
dec
xchg
inc
mov
mull
sarb
or
push
push
xchg
dec
ja
fwait
test
daa
jge
lret
ret
orl
sbb
jns
mov
sub
in
ja
pusha
cmp
jmp
gs
jg
dec
pusha
bnd
sub
pushf
std
pop
daa
xor
out
sub
shrb
cwtl
push
in
sbb
pop
lea
loope
add
add
xor
push
mov
cmp
js
cmovp
int
sbb
cmp
lods
mov
pop
repz
pop
mov
arpl
push
mov
outsl
ja
mov
lcall
loopne
xchg
add
xchg
adc
inc
push
inc
cmp
fcom
orl
mov
pusha
test
cmc
loopne
mov
dec
adc
inc
push
mov
and
scas
jo
add
stos
dec
aas
push
xchg
shrb
test
lds
pop
mov
push
push
pushf
gs
xor
pop
adc
fwait
mov
jbe
int3
loop
mov
fs
dec
inc
xor
dec
jno
mov
in
sbb
dec
xor
nopl
outsb
mov
ficoml
fdivrs
add
vsqrtpd
scas
dec
or
arpl
outsb
xchg
jp
mov
lcall
and
popa
arpl
call
add
fsubrl
arpl
mov
xchg
out
sahf
jmp
or
xor
loop
sub
fstpl
fistpll
fldt
nop
mov
sbb
pop
mov
mov
pop
pop
cmp
sub
xchg
lret
add
xor
fnstenv
scas
shll
loop
dec
pop
jge
lds
scas
jbe
rcr
mov
mov
and
insl
xor
mov
push
lcall
pop
dec
in
mov
leave
xor
add
out
xor
mov
repnz
jl
aam
jnp
int3
test
and
lret
mov
sbb
hlt
fnstsw
dec
jnp
mov
ret
das
scas
add
sbb
dec
mov
mov
pop
test
push
cmc
data16
outsb
xor
cmp
jo
aad
lea
cmc
test
and
leave
shrl
test
mov
loope
mov
in
in
loope
inc
arpl
pop
cmp
mov
add
vmread
and
and
dec
rclb
out
insl
lock
lods
mov
push
pop
inc
stos
fcmovnb
stc
ljmp
movsb
sub
add
mov
add
movsl
inc
das
test
aas
pop
sti
xchg
stos
cmpsb
loop
cmp
ror
dec
or
or
test
insb
aam
mov
jbe
push
pop
inc
cmp
push
fwait
out
mov
movsb
push
nop
or
and
xor
in
notl
mov
inc
les
arpl
xchg
xchg
pusha
or
mov
sub
jb
rclb
shll
in
pop
xchg
inc
stc
add
sbb
rorb
out
rcrb
jmp
mov
lods
std
mov
mov
mov
loop
jle
cmpsb
inc
sbb
inc
test
jge
lds
jb
flds
mov
jb
movsl
push
jo
dec
outsb
cmc
pop
popa
out
jnp
jmp
in
mov
jg
sar
or
in
repnz
test
test
xchg
out
xlat
call
lcall
hlt
mov
mov
ds
mov
dec
sub
out
pop
leave
pushf
loop
rclb
mov
mov
push
mov
pop
xchg
pop
sub
inc
xchg
sbb
sub
push
push
push
and
jmp
add
dec
dec
mov
insl
cmpsl
inc
das
imul
roll
iret
mov
fldcw
sub
mov
push
xorb
mov
adc
push
scas
ret
sbb
jae
out
jge
jb
mov
jmp
mov
ss
aas
cmc
fbld
add
xorb
xor
push
imul
sbb
fs
or
adc
pop
add
paddw
and
loopne
add
xlat
sub
adc
lds
sar
push
dec
pop
std
mov
mov
adc
push
cmp
repz
lock
cmp
jbe
dec
mov
inc
int
arpl
jbe
or
sar
and
sbb
jno
adc
xor
sub
mov
leave
adc
adcl
aam
push
add
daa
adcb
movsl
icebp
cmpsb
or
jecxz
int
shll
push
xchg
pop
fsubrl
cmp
int3
or
repz
mov
outsl
pop
sub
cmp
mov
ret
pop
movsb
data16
jmp
movsl
or
jl
stc
int
sub
das
mov
or
sub
add
jbe
or
addr16
jge
mov
in
fdivs
pop
mov
xor
jle
xchg
pop
jmp
enter
jno
mov
idivl
or
jmp
out
xchg
hlt
out
pop
mov
cs
cmp
aad
shrb
inc
jbe
mov
jp
xchg
sbb
pop
jle
push
sahf
int
mov
iret
lds
inc
popf
test
inc
inc
movsl
imul
cs
pop
and
jnp
and
inc
mov
rol
sbbl
imul
mov
mov
mov
jb
jns
mov
shr
mov
lods
pop
pop
and
and
lods
int3
push
add
dec
cwtl
pop
pop
pop
pushf
push
inc
mov
aas
lea
lods
fstl
dec
and
leave
add
repnz
idiv
xor
mov
fistps
jge
or
xchg
cmpsb
xchg
mov
inc
pop
pop
mov
ret
adc
int
clc
jae
mov
mov
lret
push
jle
mov
mov
push
fxsave
fistpll
jmp
popf
mov
adc
cmp
or
jecxz
enter
mov
jno
and
add
pop
jnp
pusha
in
cwtl
mov
mov
mov
mov
je
inc
sahf
mov
fldl
hlt
add
push
sub
inc
mov
dec
jne
push
ljmp
hlt
popa
cmpb
mov
or
mov
cmc
pop
mov
mov
and
mov
mov
lds
imul
out
sub
sahf
inc
mov
and
fimuls
dec
cmp
dec
lds
sbb
movsl
sub
aas
cmpsl
cmpl
test
movsb
or
lods
loop
repnz
fstpl
adcl
mov
in
mov
and
pop
gs
dec
inc
dec
aam
or
ss
jl
pop
xchg
arpl
iret
dec
mov
adc
popa
cmp
movsl
repnz
xchg
jge
add
jae
aam
mov
sbb
mov
mov
adc
insb
xor
mov
adc
dec
imull
out
lea
pop
xchg
add
mov
stc
bswap
lret
inc
aad
xor
mov
mov
and
sub
sbb
iret
sbb
and
push
ret
ss
arpl
push
push
inc
into
gs
dec
fidivrs
inc
pop
lahf
cmp
add
aad
jl
cltd
loope
xor
cmp
mov
cld
sub
pop
dec
cmp
and
stos
pop
leave
dec
push
test
sub
ja
inc
loop
push
mov
pop
add
sbb
shrb
or
pop
mov
xchg
cltd
mov
clc
add
dec
ret
lods
push
sbb
mov
ja
rolb
cli
loope
push
or
aad
adc
hlt
sbb
mov
ljmp
sbb
pusha
jge
dec
xchg
jne
fnstenv
adc
adc
xor
insb
push
enter
mov
xor
mov
or
pop
sbb
xchg
adc
mov
xchg
leave
cmp
cmp
bound
les
xchg
nop
or
sub
js
xchg
repnz
hlt
insl
mov
ror
in
jns
push
or
orb
xchg
pushf
sub
cmp
imul
das
xor
sbb
pop
mov
xchg
call
notl
mov
sbb
inc
pop
rorb
sahf
jmp
jb
shrb
sahf
mov
mov
or
push
push
adc
stos
iret
adc
fmul
inc
lds
ret
in
shll
punpcklwd
lret
fldl
jmp
sub
repz
jmp
or
inc
loop
inc
int
cmp
aad
dec
push
mov
out
cwtl
cmp
push
lea
mov
pop
add
outsb
mov
stos
dec
stos
mov
lods
mov
jbe
pop
sti
dec
push
fmull
and
inc
insl
rcrl
jbe
push
pop
sub
fsubr
js
xor
jo
out
leave
dec
xchg
fdivs
xchg
test
iret
adc
call
push
repz
cmp
ss
push
jbe
filds
fldt
stc
and
push
cltd
and
sub
inc
imul
sub
in
out
mov
sbb
test
xchg
sarl
insl
mov
sub
call
mov
movsb
dec
dec
dec
xor
pusha
call
andb
xor
push
test
jl
fadd
mov
mov
xlat
jno
aam
ljmp
adc
jno
fcomi
repnz
in
dec
mov
and
adc
push
pop
rolb
xor
dec
loopne
sub
jmp
push
movsl
insl
mov
outsl
test
aad
xchg
push
or
pusha
cmc
rcl
ds
xchg
loop
push
inc
xchg
add
hlt
dec
outsl
jno
pop
adcb
ds
mov
dec
lahf
out
das
je
loope
daa
dec
dec
inc
cmpsb
mov
daa
mov
shrb
pop
loop
push
enter
add
aaa
sub
loopne
push
lahf
mov
lods
inc
insb
lret
pop
sbb
jno
loope
dec
sar
add
int
mov
repz
jecxz
jecxz
mov
and
mov
and
test
inc
jns
push
hlt
sbb
dec
lods
mov
push
push
xchg
out
pusha
int
fists
mov
mov
and
push
testb
mov
mov
repnz
jnp
jo
subb
stc
push
aaa
pushf
inc
jl
push
stos
pop
and
fiaddl
or
cmp
dec
stos
es
push
mov
mov
dec
push
call
popf
and
loop
test
test
mov
cmp
dec
repnz
aad
in
jae
push
mov
stos
imul
inc
cmp
mov
popf
xchg
fisubrs
lcall
insb
rcrb
push
addr16
outsb
repnz
mov
ja
mov
repnz
orl
test
in
jl
xchg
jne
dec
and
sub
das
movsl
mov
dec
imul
inc
fstps
mov
xlat
aad
jle
js
push
jmp
and
mov
into
test
pop
stc
and
jne
sub
sti
js
cmc
jae
test
cltd
inc
loop
mov
adc
in
sbb
pop
in
adc
repz
lods
mov
lahf
pop
clc
mov
dec
and
jo
pusha
sbbl
aad
mov
cs
cmc
int
inc
sahf
cmc
inc
sbb
jne
push
jns
and
insl
testb
movb
popa
aas
and
roll
inc
enter
loop
movsb
in
add
pop
cmc
pop
outsl
dec
in
in
sbb
fnsave
jmp
xor
nop
popf
lahf
stos
lret
shl
jo
push
inc
ja
in
dec
pop
cli
cwtl
fbld
in
es
fstpt
cwtl
pop
sbb
push
sbb
mov
sub
cltd
addb
jle
mov
inc
push
push
fistps
inc
int
mov
dec
cltd
fistpl
loop
lods
sar
or
or
dec
pop
mov
dec
cltd
into
loope
hlt
enter
mov
xchg
mov
mov
xor
outsl
push
xor
pushf
adc
cmp
icebp
jnp
movsl
dec
cld
mov
sub
popa
add
stos
inc
cs
das
les
mov
loop
aaa
mov
sti
or
cmp
std
pop
lahf
clc
dec
adc
mov
imull
jmp
cmp
pushf
js
cwtl
sbb
mov
icebp
rcll
push
je
jno
es
pop
dec
bound
jp
mov
test
jg
inc
mov
int3
pop
fwait
ljmp
mov
cmp
cli
mov
and
inc
inc
ja
xchg
push
pusha
push
inc
adc
ljmp
loope
mov
push
repnz
insb
xor
jno
mov
rcrl
pop
lock
xor
and
add
mov
ficoml
push
mov
mov
in
scas
jae
loopne
out
out
jmp
pop
pusha
out
andl
es
mov
adc
adc
in
and
iret
in
lea
xchg
sub
jp
addr16
mov
xchg
int
cld
pop
data16
ret
arpl
les
insb
fistps
dec
mov
mov
cmc
rolb
cmp
fs
sahf
adc
testb
pusha
das
xchg
inc
cmp
pminub
fildl
mov
adcl
hlt
out
mov
mov
push
sbb
lea
arpl
sbb
lret
scas
hlt
loop
mov
negb
stos
push
jle
add
in
push
andb
sbb
enter
push
push
mov
call
inc
lcall
sbb
xchg
int
imul
aad
sahf
pop
sub
jmp
adc
pusha
adc
or
inc
dec
adcb
push
pop
dec
cld
ret
jne
xchg
aam
stos
xchg
shrl
adc
mov
and
inc
movsl
dec
jae
dec
out
xchg
jae
xchg
outsb
arpl
xchg
xor
cmpsb
shrb
cld
xchg
xchg
das
orb
test
mov
shrl
lahf
imul
cmpsl
cli
push
lods
adc
mov
xchg
sub
or
rcrl
popa
imul
jp
jp
sbb
sbb
mov
cmp
and
ret
mov
mov
sbb
jmp
mov
adc
cmp
int
push
icebp
cmpb
lret
mov
cmp
sarl
and
test
popf
sbb
adc
push
push
das
and
ja
cld
popw
sub
adc
xor
sarl
fmul
jno
mov
add
icebp
mov
push
sbb
sbb
mov
cwtl
ljmp
push
pop
pop
hlt
or
jno
aad
mov
inc
ret
sarb
das
mov
insl
xor
outsl
adcl
sbb
out
pop
pop
or
cltd
jmp
cli
mov
push
pop
bound
test
jmp
sub
mov
movsb
test
xchg
push
cmp
hlt
sbb
xchg
or
push
pop
cmc
cmp
jl
mov
xlat
dec
sbb
sub
fldl
sahf
push
lock
sbb
dec
dec
fwait
jg
inc
fwait
cmc
lods
popf
fisttpll
and
clc
dec
inc
fcomps
out
fcmovne
jmp
out
nop
dec
xchg
and
mov
mov
pslld
pop
mov
int3
ret
dec
sbb
jmp
inc
xchg
mov
mov
lea
mov
dec
int
or
push
ja
mov
aad
in
or
sbb
test
add
inc
push
test
adc
into
cmpsb
aaa
cmp
adc
pop
movsb
ds
inc
or
inc
add
sbb
int
mov
imul
and
out
clc
adc
push
jp
cmpsl
andb
jb
test
cmp
dec
jmp
jg
in
xchg
push
dec
call
sub
lret
ret
push
rcr
or
movsl
in
das
rol
es
sbb
sbb
aad
fsubs
lds
push
lss
mulb
push
sbb
adc
sub
jae
in
inc
cld
aad
and
add
and
sbb
lds
and
js
and
lds
sti
rolb
pusha
jle
or
lock
and
xchg
xor
ret
mov
mov
xchg
out
fdivp
cltd
repnz
sub
fwait
aaa
mov
hlt
mov
lahf
mov
jg
stos
enter
test
pop
adc
int3
pop
xorl
mov
xchg
fucomi
mov
test
pop
outsl
lock
sub
sbb
push
rcl
pop
iret
mov
or
inc
pop
ret
inc
mov
adc
das
mov
dec
ljmp
stos
push
push
mov
and
add
dec
xchg
mov
cmpsl
in
xlat
push
js
pop
xchg
xchg
xchg
lret
pop
sub
inc
ret
popf
fsubs
fisubs
pop
mov
adc
data16
je
aad
loop
jo
lods
rcrb
xor
out
jmp
pop
jmp
std
inc
loop
jge
sbb
scas
negl
or
mov
lret
sbb
mov
test
and
mov
xor
or
addr16
xor
jp
dec
pop
push
mov
push
mov
pushf
imul
iret
stos
inc
jb
mov
xchg
pop
sbb
enter
dec
les
mov
mov
iret
orl
mov
les
sbb
push
test
mov
jg
cmpxchg
mov
cs
addr16
pop
jb
popf
loop
test
lock
xor
call
repz
scas
in
mov
movsl
mov
xchg
xchg
roll
scas
dec
xchg
cmc
cmp
movsl
movsl
int3
ror
mov
cmpsb
popf
int3
addr16
add
dec
jp
fs
test
dec
mov
mov
and
movsl
orb
dec
ror
cmpsl
ret
lock
and
xor
stc
fistps
mov
sub
and
mov
dec
outsl
scas
fsub
pop
lods
adc
sub
jge
int3
loop
popa
pop
arpl
cmp
stos
jecxz
enter
pop
stos
mov
xor
test
les
cwtl
xchg
int3
cmc
pushl
push
leave
scas
inc
mov
adc
mov
jle
mov
jg
fisttpl
loope
sub
into
mov
ror
subl
clc
test
xlat
sbb
cmpsl
sbb
pusha
mov
lret
ja
cmp
sub
jnp
mov
insl
lahf
repnz
push
out
fcomip
dec
jp
sbb
cmp
aad
movsbl
lahf
sarl
stc
cltd
mov
ret
pop
or
aaa
jno
arpl
loopne
cli
je
sub
fsubrs
mov
xor
push
filds
mov
notb
data16
inc
sahf
ret
jmp
pop
test
adc
mov
gs
mov
out
xor
jle
aam
sbb
negb
aaa
int3
dec
test
testl
inc
cltd
mov
adc
add
loop
fs
add
push
ljmp
cmp
cmp
pop
push
mov
jne
push
jnp
push
adc
mov
ror
pop
das
push
out
inc
xor
xor
lahf
push
ficoms
sar
cmp
xor
je
test
mov
mov
jae
iret
inc
sbb
aas
jp
jmp
add
push
das
sbb
inc
dec
mov
cltd
imul
mov
test
test
xor
das
and
pop
and
xor
das
dec
clc
jecxz
out
es
pusha
and
dec
cmpsl
movb
cmp
add
sbb
popa
mov
pop
and
jb
mov
ja
adc
dec
dec
xor
scas
mov
mov
xchg
mov
imul
ljmp
cmp
adc
stc
inc
pushf
lahf
xlat
out
mov
popf
cmp
push
mov
popa
movsb
push
pop
mov
aas
adc
xchg
sahf
cmc
fadds
or
mov
scas
cmpsb
dec
pop
fisttpll
lods
mov
ja
int
mov
hlt
and
pop
jg
gs
int
mov
rol
cmpsl
dec
nop
push
repnz
in
es
dec
adc
clc
lock
test
xor
and
ja
push
jae
and
jne
add
scas
mov
and
imul
test
mov
mov
push
or
aam
cld
pop
xchg
lods
mov
fmull
push
jb
mov
xor
xor
movb
int3
out
insl
push
xchg
inc
test
adc
sub
std
in
mov
in
mov
mov
andl
inc
hlt
das
sub
loope
ret
cmpsl
inc
and
sbb
cmp
mov
sub
fdivrs
imul
xchg
add
and
cmc
mov
js
stos
int
mov
rorl
inc
jge
lock
jp
fs
or
mov
mov
dec
nop
jns
inc
mov
divb
push
mov
jg
cmp
sbb
sub
push
dec
dec
xor
int
negb
pop
cmp
arpl
push
pop
sub
cmp
ds
nop
mov
mov
sbb
ret
push
lods
pcmpeqb
sahf
lcall
cmpsl
adc
outsb
dec
sub
sub
jno
push
and
iret
test
aaa
push
fsubrp
idiv
pop
xchg
pusha
orb
iret
roll
fs
ja
lahf
sub
xchg
repnz
bound
jmp
jno
popf
rorl
sbb
inc
or
enter
xchg
push
jo
mov
bound
or
nop
imul
hlt
sub
adc
dec
mov
cmc
dec
loop
lret
mov
lret
aam
inc
test
nop
iret
xor
fadd
stos
pop
mov
movsb
lret
dec
ss
dec
test
mov
push
jne
es
push
mov
scas
stos
loopne
scas
add
out
dec
enter
out
dec
cmp
jns
repnz
jle
imul
or
out
ja
xchg
inc
mov
imul
fsubrs
mov
fistpl
push
xor
lods
fstpl
fists
pop
dec
leave
and
rol
jg
cmp
outsl
jno
xlat
add
and
jg
pop
sub
das
xor
stos
std
lock
test
sahf
xchg
mov
sbb
int
ljmp
or
rorl
adc
sbb
cli
aam
inc
jmp
lret
fisubs
jle
mov
outsb
sbb
inc
ret
shrb
cli
sbb
outsl
inc
lods
fnstsw
in
call
cmc
dec
adc
or
leave
cmp
das
push
mov
and
adc
mov
std
sbb
cmp
inc
arpl
pop
es
scas
cmpsb
push
bound
pop
push
inc
jbe
bound
xchg
sahf
cmp
stos
cwtl
jmp
cli
inc
jne
sbb
arpl
imul
pop
ds
scas
imul
ja
push
mov
aam
stc
loop
adc
inc
push
test
push
sub
inc
mov
and
ss
shrb
pop
int
xor
sub
ss
sbb
sbb
mov
mov
pusha
mov
xchg
mov
lahf
dec
addr16
lahf
cli
push
mov
stos
iret
fmul
mov
push
loopne
out
push
loope
repnz
pusha
pminub
pop
jle
and
movsl
push
xor
mov
stos
loopne
jne
cmpsl
sahf
xchg
in
push
cmp
lret
addb
add
mov
xchg
sub
xor
pop
outsb
add
je
int3
jge
adc
add
xchg
push
dec
sub
das
jecxz
cs
jmp
jp
test
jecxz
xchg
lds
outsb
cli
inc
test
fidivrl
add
pop
vmovss
xchg
testl
inc
sub
into
push
mov
arpl
mov
mov
popf
ret
rcll
in
cmp
mov
or
mov
into
popl
cmp
jecxz
std
lahf
push
insb
mov
stc
and
rorb
cmpb
rolb
leave
test
adc
mov
into
scas
test
jno
mov
mov
cmpsb
inc
add
or
push
xchg
cmp
mov
push
cmp
in
dec
jb
iret
sarb
pop
inc
push
jb,pt
push
mov
shlb
fdivrl
cmp
lea
pop
dec
cld
test
push
inc
popf
mov
mov
rorb
mov
div
push
sti
dec
mov
jecxz
into
or
stos
filds
lea
cmp
jb
jp
fidivs
push
jmp
lock
int3
inc
stos
jl
out
pushf
out
sbb
or
sahf
jns
xor
xor
aam
rorb
sub
mov
fwait
dec
dec
lret
clc
dec
mov
pop
movsl
sahf
jno
int3
pop
testb
nop
sahf
out
adc
jns,pn
hlt
test
push
jp
call
js
fbstp
or
popf
and
adc
mov
sbb
pop
lods
js
repz
into
cmp
out
ret
xchg
and
pop
test
pop
pop
nop
inc
and
add
or
stos
add
adc
xlat
xor
lock
stos
aam
sub
jb
repz
jp
lock
sbb
jbe
out
aad
nop
lea
xchg
cmp
xchg
push
push
rcrl
xor
popf
cli
andl
aaa
imul
in
xor
inc
sbb
pop
mov
subl
xor
pop
test
jno
pop
or
push
or
jo
push
add
or
int
gs
cmp
inc
dec
daa
std
dec
add
in
xchg
push
jmp
int3
lcall
scas
test
mov
into
cmpsb
adc
shrb
xor
lds
into
push
sahf
mov
filds
add
xchg
mov
lds
in
xlat
cmp
mull
dec
mov
rorb
shlb
sub
leave
cmpsl
add
gs
sbb
call
dec
cmp
ds
xchg
imul
loope
ret
jno
xchg
test
test
xor
or
add
sub
test
movsl
sbb
mov
mov
rcrb
ss
push
scas
or
div
loopne
xchg
mov
outsl
xor
sbb
outsl
or
add
sub
jno
sub
ror
adc
mov
lcall
in
xor
add
push
and
mov
and
cmc
stc
mov
stos
cmpsl
inc
out
inc
xchg
jle
cmp
mov
repz
fcom
stos
jge
clc
adc
nop
sbb
inc
leave
lds
mov
pop
xchg
xor
roll
cs
jbe
loopne
fistps
lcall
adc
cmpb
idivl
jmp
and
inc
inc
jns
xor
out
icebp
int3
shrl
fsubs
dec
ljmp
push
cmp
dec
lcall
arpl
pop
mov
xchg
or
aaa
xchg
pop
test
inc
sub
or
je
leave
dec
iret
insl
push
mull
fiaddl
sbb
out
test
lock
push
jbe
hlt
xor
xor
repnz
dec
lss
jnp
divl
pop
xor
dec
cwtl
loopne
jno
loop
inc
mov
xchg
mov
leave
sbb
add
popf
test
inc
mov
test
inc
arpl
lock
orb
adc
push
stc
xchg
pinsrw
or
pop
jne
pop
in
int3
cmc
sub
mov
adc
popf
jb
icebp
dec
sti
pop
xor
mov
shrl
inc
out
incl
sarb
es
arpl
cltd
sub
int3
or
jl
inc
sbb
adc
xchg
jae
scas
fsubrl
push
inc
mov
xchg
rclb
add
sbb
ljmp
out
lret
adc
mov
push
mov
push
aaa
out
ljmp
sub
or
push
or
jne
data16
jp
cli
mov
roll
sub
bound
arpl
into
mov
in
jmp
sub
movsb
inc
push
mov
add
pop
cli
jl
dec
stos
daa
or
pushf
adc
mov
push
pop
dec
or
fwait
pop
roll
fidivs
mov
mov
bound
push
adc
dec
mov
xchg
inc
or
das
pushf
sub
outsb
shlb
mov
mov
fisttps
enter
fistpll
dec
dec
or
bound
outsl
shl
popa
dec
sahf
pop
and
inc
test
jg
mov
repnz
lea
sahf
enter
lcall
cmp
jg
add
and
iret
in
popf
cld
fdivrl
outsb
bound
push
fwait
pop
push
aam
mov
hlt
lret
ds
pop
xlat
cltd
jne
adc
outsl
mov
lods
push
mov
jno
sub
xchg
cmp
shrb
aas
sti
ficompl
add
sbb
pop
nop
pop
shl
sbb
fnstsw
mov
push
cmpsb
repnz
sub
repnz
aaa
loopne
jns
stos
sbb
les
inc
fsubrs
popf
xlat
jno
dec
mov
mov
scas
or
and
sbb
fildll
push
das
mov
scas
mov
sbb
jl
and
mov
mov
mov
and
scas
cmp
sbb
and
testl
adc
and
lds
mov
add
test
ja
loopne
in
fstps
mov
into
push
std
jmp
int3
lods
insb
mov
jle
xor
mov
xchg
jb
stos
fsubrl
mov
cltd
loopne,pt
cwtl
repnz
dec
in
jbe
out
cmpsb
ljmp
push
add
es
sbb
xor
and
push
arpl
repnz
mov
dec
and
jl
xorb
jae
into
xchg
fs
push
cld
inc
push
xchg
jp
out
insb
into
popf
pop
mov
adc
sub
in
and
imul
xchg
jo
pop
mov
mov
mov
test
mov
or
add
cli
outsl
xchg
fs
scas
sub
mov
cmpsb
or
fistpll
nop
bound
lds
inc
loop
mov
fsub
sub
out
sbb
outsl
mov
rcrb
add
push
sub
lds
roll
loope
ss
lock
fimull
mov
and
hlt
lds
jge
iret
stos
maskmovq
negl
subb
cmp
out
arpl
mov
iret
pop
insl
mov
push
fsubl
dec
pop
icebp
pop
add
testl
pop
sub
in
jge
inc
adc
insb
xchg
pop
ds
pop
lods
push
out
mov
jg
dec
and
popf
mov
and
ret
pop
adc
sub
mov
push
jle
lods
ret
sahf
test
sti
jns
mov
outsl
sbbl
add
int3
fisttpll
rcrb
test
jns
sub
adc
mov
and
roll
push
shlb
jno
add
sub
subl
push
mov
icebp
inc
dec
fwait
fs
inc
add
cwtl
shrl
push
pop
sbb
hlt
lds
xchg
sub
jmp
popa
adc
push
jo
insl
outsl
out
lds
ss
sbb
lock
push
pop
jecxz
xchg
lahf
outsb
fsubrs
shl
push
mov
repz
lahf
mov
roll
and
xor
mov
ds
pop
addr16
hlt
shlb
add
popa
ja
xchg
in
and
add
fs
sbb
xor
loope
gs
in
sbb
das
sub
jmp
ja
jbe
addr16
lock
mov
loope
mov
dec
dec
xchg
xchg
mov
in
mov
cmp
adc
fdivrp
orb
cld
aad
jl
stos
pop
inc
nop
ret
adcl
inc
add
mov
insl
xlat
push
pop
rclb
mov
jno
push
repz
stos
mov
lcall
fyl2xp1
out
mov
cli
jae
gs
sub
or
mov
add
jg
das
adc
arpl
clc
iret
cs
lahf
cmpb
test
es
adc
cmpsb
cmc
mov
je
fdivrs
jge
fs
ret
lds
mov
pusha
pop
out
dec
in
addr16
sbb
cltd
and
xchg
jnp
jmp
fcmovbe
das
add
cmp
jmp
mov
out
das
xchg
daa
pop
and
sub
outsl
dec
push
std
push
subb
popf
bound
sbb
cli
adc
sbbl
enter
fstps
and
mul
mov
mov
icebp
push
out
ret
lcall
leave
mov
adc
cld
adc
jp
adc
mov
push
cmp
icebp
test
mov
mov
pop
stos
and
fwait
adc
sti
pusha
lods
fisubs
mov
xchg
push
loop,pn
inc
addl
divb
jb
ret
pop
inc
test
and
sbb
cwtl
mov
orb
fstps
test
js
add
inc
jmp
ja
test
adc
jle
push
dec
push
pusha
icebp
inc
push
xchg
xlat
xor
popf
sub
add
out
mov
mov
jnp
mov
stos
rcl
lcall
jp
inc
pop
popf
popf
and
inc
cmpsl
std
cs
pop
xchg
xor
pop
add
jae
sub
cmp
fs
negb
sbb
iret
push
pop
mov
dec
aad
add
lret
xchg
sub
jo
aaa
push
insl
stos
cmpsb
call
stos
imul
mov
int
test
movsb
cwtl
fisubrl
mov
add
xchg
rorb
sbb
stos
fistpl
jmp
cmp
aad
jne
mov
mov
cli
xchg
in
pop
pop
sarb
test
xchg
testb
dec
into
xchg
xorb
mov
pop
cwtl
movsb
into
jae
repnz
push
icebp
ds
jo
lds
fnstcw
xchg
rclb
mov
push
popf
dec
xchg
fnsave
sub
cs
popaw
jne
ljmp
push
iret
add
pop
push
daa
iret
xchg
push
cmp
xor
inc
or
scas
stos
push
inc
adc
push
sub
jns
pusha
mov
mov
mov
mov
xchg
in
xchg
dec
mull
testl
mov
cltd
xor
pop
mov
repz
adc
test
jp
cli
pop
int
xor
out
or
call
fisubrl
iret
je
jo
jl
jnp
je
and
ret
int3
popf
popa
and
or
cld
mov
repnz
insb
pusha
xchg
mov
imul
mov
cmp
ja
mov
iret
fstps
or
jmp
stc
push
jae
xlat
xchg
xorb
sahf
fstl
or
lock
dec
pop
adc
xor
out
testb
mov
enter
imul
pop
pop
ss
shl
loop
sub
aad
mov
jmp
arpl
cmpsb
rorb
rcrl
lock
into
ljmp
sbb
fdivrp
adc
addr16
jne
movsl
negb
mov
ret
lahf
out
sbbl
mov
sub
push
xchg
fs
push
jg
add
dec
and
xchg
xchg
lods
outsb
shrl
dec
xchg
fdivrs
push
jnp
test
push
inc
test
repnz
pop
pop
or
sbb
scas
xor
xor
rorb
movsl
xor
pop
int3
int
out
mov
dec
xlat
rorl
jmp
pusha
lock
aad
mov
gs
insb
xor
and
lcall
iret
stc
push
leave
pop
mov
ret
fcmovu
enter
jecxz
lock
sbb
stos
les
sarb
cs
daa
mov
ss
orb
movsb
xor
xor
addr16
sbb
inc
push
pop
mov
or
dec
sbb
stos
pop
mov
mov
push
mov
fcmovu
push
sbb
lods
mov
popf
dec
cld
and
mov
mov
test
popf
fwait
sub
pop
xchg
insl
and
insl
jl
pop
and
jmp
jno
inc
aad
add
add
add
lods
push
push
mov
lret
shlb
int3
in
out
std
enter
aad
mov
cli
adc
cli
add
cmp
sbb
xchg
mov
jmp
add
subl
xchg
enter
idivl
lret
xchg
lods
fldenv
xchg
in
lods
xchg
test
in
cmp
mov
or
ss
fbstp
sub
jge
outsl
cmpsb
cli
and
dec
mov
test
dec
dec
jge
and
mov
lods
mov
leave
daa
and
mov
mov
push
mov
or
cltd
in
inc
lcall
dec
sub
xor
movsl
mov
pop
inc
test
pushf
repz
xchg
popf
pop
call
addr16
adc
jp
pusha
into
mov
sub
lahf
aaa
jl
dec
cmp
inc
mov
or
mov
mov
dec
idiv
dec
mov
test
rclb
pop
xchg
je
push
data16
pop
repnz
mov
mov
insl
inc
mov
pop
mov
iret
out
push
sti
shrl
push
pop
aam
imul
inc
cmc
and
inc
fimull
int3
cli
pusha
loopne
loope
test
push
jg
mov
sub
aas
mov
mov
dec
mov
in
leave
mov
mov
out
xlat
sub
inc
std
jle
mov
fdivrl
xor
call
cmovb
jp
inc
inc
inc
sar
pop
pop
mov
bound
xor
cmp
mov
fldcw
outsb
inc
test
sbb
xchg
mov
lods
js
imul
icebp
push
push
xchg
aad
sbbl
cmpsl
pop
lock
push
subl
xchg
mov
insl
dec
push
sti
pop
imul
and
ficoms
jns
dec
adc
xor
add
sahf
fsubrs
in
out
testl
gs
fsubrp
adc
xchg
setl
lret
and
lcall
clc
mov
jbe
lea
filds
fcoms
mov
mov
lock
es
clc
lret
push
scas
insl
dec
mov
and
stc
adc
add
out
stc
std
popa
insb
jl
adc
rcrb
test
or
dec
jg
sub
lahf
scas
pop
or
pop
aas
adc
flds
sub
push
sahf
fistps
fisttpll
popf
push
jecxz
cs
jne
sahf
jo
lahf
daa
dec
inc
and
dec
dec
or
popa
es
mov
sub
jp
ja
add
mov
mov
mov
out
hlt
mov
ret
daa
xchg
enter
out
pop
fs
or
push
xchg
jg
sbb
xchg
stos
sbb
jl
jae
lds
cmpsl
lods
daa
call
imul
sbb
mov
or
idiv
jne
mov
sub
aam
rorb
jmp
pop
jo
cmp
fisttpll
cmp
xor
fwait
out
sub
into
test
clc
cmp
jmp
aaa
das
pop
adc
mov
pop
push
mov
inc
ds
or
mov
dec
ret
out
xlat
mov
popf
movsl
mov
clc
mov
fdivrs
or
inc
addr16
xchg
sbb
imul
into
dec
mov
scas
xchg
popf
lods
jo
cmp
icebp
insl
push
sarb
mov
iret
push
das
sub
je
mov
lea
cmp
and
mov
dec
sahf
inc
jno
cmp
inc
loop
mov
mov
out
scas
fs
sub
imul
pop
mov
fdivs
inc
imul
dec
mov
dec
or
divl
sbbl
dec
push
lret
mov
jmp
or
jno
jnp
iret
adc
shr
jb
incb
std
call
adc
add
push
cmpb
lahf
lods
in
mov
sub
xor
push
lret
scas
push
pusha
inc
jnp
jno
sbb
call
out
sti
mov
xor
push
leave
mov
mov
xchg
pop
lock
xlat
fnstsw
stos
xchg
in
mov
test
pop
or
xchg
jmp
push
ja
gs
cld
shr
dec
leave
sub
arpl
inc
mov
mov
jge
push
nop
mov
cmp
dec
cmp
andl
les
repnz
sahf
pop
ljmp
pop
dec
rcrb
xor
imul
cs
push
shl
mov
fsubp
adc
xchg
pop
dec
add
in
fmul
and
jb
xchg
int3
imul
aam
add
jb
loop
xchg
push
iret
mov
test
sahf
leave
popf
jnp
xor
sahf
mov
dec
mov
lds
cmpsl
push
icebp
scas
jmp
test
sbb
jne
sbb
lea
iret
outsl
cs
outsb
fsubl
jecxz
mov
daa
lcall
popf
mov
scas
test
fmuls
ja
push
mov
sti
push
mov
mov
test
adc
imul
repz
lods
ror
dec
cmpsl
test
scas
and
or
jmp
in
in
cwtl
stc
jnp
loopne
leave
push
xchg
add
subl
fistpll
push
inc
or
call
repnz
push
lahf
push
pop
in
fisubrs
mov
and
xchg
mov
ret
or
int
mov
pop
sahf
jb
adc
in
test
int
xor
arpl
mov
fstpl
scas
inc
or
daa
repz
cld
push
loop
sub
test
push
les
testl
inc
add
mov
dec
pushf
out
mov
inc
pop
in
out
cwtl
dec
lcall
stos
xchg
jno
mov
mov
fnstsw
test
es
pop
mov
fcmovu
mov
aaa
out
les
sbb
repz
popf
mov
xor
stc
loop
pop
nop
add
in
add
dec
dec
mov
aam
cmp
lret
push
lahf
out
fldz
jmp
arpl
cmp
cmp
xor
mov
rcr
jl
nop
or
pop
xchg
add
cmp
cmp
pop
mov
out
push
es
lahf
mov
xor
movsl
pushf
cmpsb
mov
sbb
cli
sbb
xor
fcmove
adc
lret
icebp
pop
jmp
arpl
iret
sub
push
push
cmp
std
les
aas
mov
and
add
jl
je
stos
aas
testb
cmpsb
xchg
dec
jle
and
aas
cwtl
test
jb
and
loope
cwtl
fbstp
and
fnsave
icebp
shlb
or
test
lcall
or
dec
xor
int
nop
rcl
xchg
mov
xor
mov
xor
xchg
bound
lret
ljmp
cmp
mov
ljmp
xorl
mov
dec
call
sbb
lret
aaa
scas
sub
and
lcall
or
sub
jnp
sahf
mov
rcrl
fiaddl
leave
xchg
jnp
in
ss
pop
jae
aaa
out
daa
movsl
dec
sub
and
sub
mull
stc
mov
es
movsb
or
sbb
mov
pop
pop
push
fldl
and
cmp
into
jnp
sbb
icebp
std
sbbl
fadds
mov
iret
arpl
inc
and
mov
leave
dec
fs
and
push
sub
arpl
xor
push
jl
outsl
and
imul
inc
mov
or
call
popf
mov
push
fcomps
loope
sarb
cmp
rcrl
ljmp
pop
jb
mov
mov
imul
ds
cltd
fcmovne
ret
dec
cmp
jge
enter
lret
scas
push
xchg
fcoms
mov
add
sub
call
jbe
sbb
fidivs
push
iret
sarb
icebp
mov
imul
sub
mov
nop
inc
xchg
mov
cmp
jmp
sarb
imul
xchg
test
jae
repz
test
xchg
cvtdq2ps
xchg
pop
jle
pop
push
inc
repz
ljmp
stc
dec
out
imul
mov
xor
or
xchg
mov
in
pause
shll
cmpsl
fcmovne
xchg
insb
mov
mov
jp
dec
jno
push
push
sahf
cmp
mov
or
sbbl
mov
lods
cmp
push
and
push
js
in
loope
cwtl
outsb
cmpsl
ja
loop
mov
pushf
pop
pop
mov
cld
in
cmp
lea
in
xchg
popa
bound
jno
jb
adc
xchg
out
push
or
out
lea
roll
cmp
mov
sbb
mov
scas
or
into
mov
imul
outsb
jo
aad
in
add
daa
jl
inc
dec
sbb
xor
out
imul
mov
push
mov
mov
movsl
subb
push
rcr
fwait
dec
fsubs
mov
or
sbb
push
in
dec
jmp
pop
dec
into
adc
pusha
cwtl
shrl
sub
cmp
sub
bound
adc
arpl
mov
mov
test
jbe
das
in
push
xorb
xor
jae
mov
insl
inc
arpl
xchg
mov
and
push
fbld
out
inc
mov
add
test
lock
push
xchg
outsb
xor
mov
insl
dec
jns
movsb
notl
insl
dec
scas
addr16
pop
dec
sub
lods
in
cmc
sub
dec
add
pop
jmp
arpl
mov
scas
cmp
idivb
adc
or
fistl
xchg
hlt
adc
in
inc
adc
and
stc
enter
call
and
cmp
mov
add
cmpsb
aaa
out
insl
stc
rorb
imul
pop
fwait
dec
push
pop
lahf
adc
stos
xchg
gs
xchg
mov
xor
mov
imul
lret
jle
cmc
jbe
mov
xchg
dec
dec
mov
push
mov
cmp
jae
xor
pushf
pop
shll
js
das
ret
pop
add
hlt
dec
mov
cmp
jecxz
in
fbld
mov
lfs
mov
jnp
cmpsl
fucomp
jmp
mov
fs
adc
xor
inc
out
mov
fstps
mov
ret
jle
xor
xchg
jnp
cmp
and
xchg
popf
inc
xchg
adc
in
std
adcl
rcrb
xor
lds
xor
inc
jae
lock
dec
cmp
mov
leave
jp
push
sbb
pop
enter
jbe
mov
int
call
icebp
xchg
xor
mov
mov
in
in
mov
shr
xor
out
push
push
and
fmulp
addr16
loopne
cli
sbbl
xchg
xchg
xor
add
mov
ret
iret
dec
and
stos
pop
popf
mov
mov
add
adc
out
ret
xor
xlat
stos
pop
popf
cmp
cmp
inc
or
add
sahf
dec
xlat
fs
sti
xchg
dec
xor
mov
lcall
mov
mov
add
in
iret
leave
pop
cwtl
pop
jns
and
outsb
xchg
inc
pop
and
cmpsl
pop
inc
or
test
mov
push
iret
sbb
cmp
push
or
popl
dec
mov
cmp
test
adc
mov
loopne
fnstsw
sti
push
imul
xorl
pushl
iret
roll
jb
sub
mov
cltd
mov
dec
cs
adc
das
ja
pop
jp
adc
imul
fisubrl
daa
ret
jmp
lret
lods
icebp
dec
adc
clc
sahf
call
lea
or
inc
xchg
adc
into
pop
xchg
das
xor
insl
inc
mov
hlt
sbb
sbb
repz
sbb
shl
cmc
xchg
dec
mov
jno
adc
lock
pushf
sbb
out
lahf
cmp
sti
push
rol
jge
xor
push
shrb
mov
test
insb
ja
vfrczsd
cmp
push
dec
mov
mov
fprem1
push
fwait
mov
add
mov
xor
iret
jecxz
outsl
mov
mov
pop
cltd
push
sbb
es
movsl
and
push
push
add
push
pop
rorl
fisubs
push
fmuls
cmp
imul
dec
enter
ret
aas
daa
scas
sahf
pop
pop
mov
and
test
leave
jnp
aaa
dec
lds
sub
mov
jbe
sarl
shll
popf
cltd
mov
sub
xchg
jmp
or
addr16
mov
mov
jge
pusha
lret
xor
and
adc
das
aas
mov
mov
push
mov
or
ret
add
gs
rcr
sbb
test
fbstp
pusha
mov
xor
lret
inc
add
shlb
ljmp
andb
xor
and
popf
shrb
inc
lgs
mov
idiv
movsl
mov
mov
mov
mov
jbe
mov
test
xchg
xorl
in
icebp
movl
adc
data16
leave
and
or
into
add
adc
stc
mov
inc
fbstp
dec
test
and
aaa
aam
lret
push
popf
adc
notl
and
test
push
repnz
cld
mov
xchg
fimull
pusha
and
aam
or
je
adc
rclb
lods
jns
or
subb
in
stc
xchg
andl
pop
sub
divb
inc
ret
add
aam
std
insl
lds
mov
sub
mov
outsl
add
stos
inc
jmp
mov
pop
nop
fistpl
movsb
dec
mov
enter
mov
outsl
adc
sbb
dec
in
rorb
ret
clc
out
cmc
sub
and
inc
sbb
dec
pop
stos
mov
add
pushf
enter
popf
rcr
mov
test
sbb
out
paddq
js
dec
sub
mov
jl
mov
fldcw
xchg
cld
pop
push
jmp
fiaddl
inc
psllw
mov
mov
mov
add
inc
das
orb
std
inc
mov
fbstp
ljmp
lds
push
call
push
out
adc
cmp
nop
xor
jbe
inc
arpl
and
mov
cmp
inc
loope
popf
incl
mov
sbb
orl
dec
inc
mov
into
push
mov
cli
sub
aaa
push
aas
nop/reserved
dec
mov
cmpsb
add
push
gs
push
enter
dec
ss
push
call
leave
and
push
clc
pop
clc
inc
daa
fsubrs
stos
adc
lods
xchg
int
int3
outsb
roll
mov
shr
aad
mov
mov
add
std
outsb
shrb
mov
sahf
int3
push
es
out
test
std
lds
mov
pushl
inc
sbb
mov
inc
jle
pop
dec
pop
mov
ljmp
sbb
orl
sub
push
cmp
sub
mov
jmp
cmp
dec
add
in
and
push
cmp
pop
dec
sahf
test
push
mov
and
cmp
addr16
adc
arpl
mov
jmp
push
sub
movsl
in
mov
fdivl
jo
mov
mov
push
sbb
xchg
out
adc
pop
xor
popf
or
xchg
xor
mov
inc
cld
inc
popf
clc
call
lods
or
lret
adc
xchg
pop
and
call
jns
dec
fisubl
cwtl
popa
mov
mov
mov
mov
mov
jmp
jge
xor
xchg
mov
pusha
pop
dec
push
aad
shr
jl
and
rorb
cmp
call
call
ret
dec
ret
mov
push
adc
mov
sub
xor
nop
lret
xchg
push
out
mov
mov
fimuls
sarb
fwait
mov
shl
push
pop
mov
and
clc
ja
fbld
dec
pop
xchg
movsl
or
mov
pop
cmp
aam
lock
mov
sbb
ja
mov
and
mov
push
pop
jmp
scas
xor
test
and
mov
fsub
icebp
push
jb
xchg
pop
imul
inc
leave
adc
pushf
sbb
repz
movsl
lea
and
xchg
sbb
cmp
cmp
jnp
inc
dec
xchg
rcrb
out
jae
mov
test
jecxz
jns
out
or
pop
push
les
insl
iret
aas
fwait
sbb
les
xor
outsl
dec
popa
dec
cli
popl
neg
mov
jmp
fs
push
jns
or
lds
push
cwtl
pop
clc
pop
outsb
cld
jge
push
jno
mov
movsl
insb
stos
mov
mov
pop
push
jl
dec
jle
dec
mov
scas
insl
jae
pusha
pop
mov
stos
outsl
pop
dec
loopne
cltd
in
mov
adc
fldl
mov
pop
test
adc
jns
or
sub
and
fs
or
lods
adc
sbb
das
imul
stos
call
jbe
and
pop
lock
jbe
lds
push
jnp
mov
add
test
mov
mov
test
add
into
rcll
sub
ss
imul
in
xor
ljmp
out
subl
jmp
fs
mov
xor
cli
cmp
jmp
mov
sahf
punpcklwd
xchg
mov
jnp
pusha
fidivrl
arpl
adc
jno
jb
xchg
inc
scas
jmp
pop
lahf
ret
sbb
inc
pop
lds
mov
push
arpl
rcll
add
pop
testl
subb
stos
fidivs
mov
rcr
mov
and
adcl
cmpsl
xchg
repnz
popa
lock
in
inc
loopne
cmp
das
imul
scas
pop
pop
mov
js
lods
xor
jbe
jo
test
ljmp
outsl
dec
adc
cmpsl
cmp
jp
pop
add
adc
imul
orb
push
xchg
scas
and
test
or
out
loop
mov
jl
add
mov
in
pop
jp
mov
pushf
mov
mov
mov
mov
roll
jge
sub
adcl
sub
sbb
popa
add
ja
cmp
cmc
das
dec
punpcklbw
cmp
sub
jbe
fidivl
js
xor
jp
xor
jge
sub
sahf
rorl
mov
mov
or
outsb
adc
aas
push
dec
and
inc
lret
insb
mov
insl
aaa
pop
xchg
arpl
push
push
pop
ss
pop
pusha
adc
and
into
push
add
jg
mov
mov
mov
sub
dec
adc
aas
dec
cmpsl
and
xchg
inc
dec
and
arpl
mov
jg
mov
cmp
mov
pusha
aaa
jbe
fidivl
and
into
jb
mov
jg
mov
mov
mov
rcrl
fs
jns
daa
idivb
arpl
cmc
cmpsb
into
push
int3
mov
sahf
cmp
mov
in
add
sub
jle
lahf
dec
orb
mov
addr16
xor
dec
or
jp
inc
imul
cmpsl
enter
mov
aas
cmpsb
sbb
sub
imulb
scas
ret
or
scas
mov
aaa
mov
cmc
fwait
jb
scas
add
repnz
dec
dec
repnz
xchg
ljmp
adc
xchg
adc
test
inc
dec
insb
aad
subl
int3
cld
insb
or
in
sti
dec
cltd
jp
dec
scas
and
dec
lcall
push
stos
sbb
add
insl
out
fs
icebp
fisttpll
lcall
mov
push
jecxz
addr16
daa
dec
loopne
mov
jmp
xor
es
es
sbb
push
lcall
mov
lret
stos
cli
insl
pushl
push
mov
mov
push
mov
pop
push
out
pop
loopne
mov
pop
cli
insl
movsl
mov
dec
mov
mov
out
sub
int
jns
lods
or
xlat
jae
mov
popf
push
lea
adc
pop
int3
test
js
adc
filds
in
inc
jae
jg
subb
sub
jb
cmp
jp
call
arpl
add
fwait
rorb
mov
dec
and
lahf
cmp
adc
cmp
cmp
dec
pop
jo
idivl
stc
jbe
sbb
rep
in
scas
push
fmull
push
int
and
mov
xchg
sbb
xchg
rol
shll
dec
mov
mov
or
addr16
mov
sahf
push
mov
sahf
sub
iret
fldenv
add
movsl
repnz
hlt
jp
cmp
jg
mov
xor
lahf
inc
add
xchg
js
mov
fadds
cli
loope
mov
pop
mov
pop
cs
adc
jbe
sbb
sbb
push
cld
mov
call
test
pop
xor
dec
loopne
mov
xor
callw
adc
ss
adc
xor
mov
std
mov
inc
jno
and
scas
sbb
mov
hlt
jb
movsb
lods
push
xor
add
jmp
xchg
xchg
push
mov
xchg
lods
jo
out
mov
imul
adc
lret
ficomps
xchg
cmp
pop
insb
lret
idivl
arpl
mov
jnp
loop
xchg
dec
cmp
rol
scas
mov
bound
imul
nop
repz
sub
rcrl
push
jge
jge
cmp
das
insl
sbb
xchg
ja
xorl
xor
push
mov
cmp
mov
sbb
fwait
movsb
mov
cmp
xchg
lahf
gs
xor
lods
push
cltd
out
xor
xchg
in
or
or
out
dec
and
xchg
mov
mov
xchg
dec
xchg
add
outsb
in
push
pop
lock
pop
outsb
jle
cmpsb
add
psraw
or
int3
and
sub
or
push
or
shlb
popf
dec
or
arpl
lea
enter
mov
out
sbb
add
push
mov
mov
imul
cmpsl
cmp
jae
movsb
pop
xchg
cs
fchs
popf
add
nop
popa
in
lret
sub
fwait
push
push
sub
rcr
inc
push
enter
push
insb
lods
mov
or
push
imul
addr16
adc
sub
mov
js
dec
dec
aam
mov
dec
cmpsl
mov
and
cmp
loope
and
mov
popl
andb
push
mov
jg
xchg
sub
out
fnstcw
pop
stos
sub
mov
fisttpll
lret
dec
jl
aaa
scas
jo
stc
test
bound
or
or
lret
mov
jg
fsubrl
loope
arpl
or
xorb
cmc
fldt
adc
jp
in
call
stos
data16
imul
jne
add
mov
pushf
or
adc
inc
orb
into
sti
sbb
imul
push
inc
fs
dec
loopne
inc
xor
xchg
fwait
mov
aas
es
iret
sbbl
and
add
std
ja
pop
xchg
mov
lret
mov
shrb
out
or
mov
in
in
popf
lcall
adc
sti
loop
data16
xchg
jecxz
xor
pop
xor
movsb
fisubs
scas
mov
and
js
xor
iret
dec
mov
in
sarb
jg
dec
mov
mov
push
outsb
lret
arpl
pop
dec
data16
das
inc
mov
out
fldcw
into
and
mov
ret
mov
push
out
sbb
cmpsb
je
adc
xchg
dec
add
fdivs
test
ficoms
mov
repnz
loopne
fbstp
dec
mov
dec
cmpsl
les
jne
xchg
fwait
lcall
jmp
push
sbb
lahf
loope
movsl
cltd
pop
mov
out
int3
in
das
test
xchg
sub
lea
jns
popl
inc
lcall
aad
repz
int3
sub
push
hlt
cs
add
xchg
decb
fimuls
xchg
icebp
js
fistl
rcrl
pop
outsl
outsb
ficoml
test
and
cmpsb
or
mov
inc
addr16
xor
mov
sbb
inc
jecxz
arpl
rolb
xor
jmpw
clc
mov
fcoms
repz
stos
mov
xlat
push
lock
loope
cwtl
in
decb
jne
pop
popa
dec
mov
pmaxub
push
cmp
insl
xchg
sub
jecxz
bound
loope
popa
push
jo
data16
xlat
cmpb
mov
jge
cmpsb
sub
loope
icebp
negb
cmp
sub
and
insb
push
aas
mov
std
ror
stos
pop
repz
outsb
aas
ljmp
sub
repz
sub
in
fistl
jge
mov
pop
cmc
sub
insb
es
icebp
and
push
subl
mov
out
rolb
pop
lods
pop
outsb
cmpb
repnz
call
icebp
test
rolb
jb
jmp
push
mov
enter
or
test
mov
inc
xchg
lock
fsubp
cmp
cmpsb
fadd
outsb
xlat
pop
ss
pop
mov
fmuls
popa
lcall
cmpsb
test
lea
in
push
cmpsl
sbb
xor
inc
push
stos
mov
cmp
popf
pushf
outsb
sbb
xchg
call
mov
data16
repnz
xchg
notb
shrb
ror
cmc
push
cmc
fnstenv
jae
adc
jb
xchg
push
rcll
insb
cmp
inc
mov
inc
pop
jbe
mov
inc
scas
arpl
pop
jmp
pop
xchg
out
lods
and
mov
xchg
lahf
fs
sub
movsl
xchg
cmp
fwait
out
cs
imul
divl
jae
js
sbb
dec
xchg
scas
in
add
xchg
call
dec
fnstenv
or
xchg
loopne
dec
imul
jae
nop
jp
fidivrs
lahf
pop
sub
mov
call
sub
or
pushf
nop
pop
and
in
xchg
into
popa
mov
scas
gs
cmp
and
iret
and
dec
cli
lret
in
insl
inc
or
mov
das
inc
lods
xor
inc
imul
xchg
push
lahf
test
cmp
rolb
pop
pop
cmpsb
fsubrl
sar
cmc
les
lcall
imul
mov
popf
push
outsl
cmp
mov
dec
stos
imul
cs
fcmovnu
push
das
sbb
dec
mov
jno
movlps
dec
jno
mov
push
jo
and
pop
aas
sahf
fdivl
roll
jns
jns
fbld
xchg
movsl
xor
imul
or
iret
sub
enter
jbe
and
notl
repz
jl
jge
xchg
aad
enter
xchg
inc
test
pop
or
data16
insl
add
pop
fcmovbe
sbb
dec
fdivr
psrld
daa
dec
out
mov
popa
pop
pop
adc
fwait
pop
popf
sahf
les
pop
rcrb
mov
push
push
xchg
jp
mov
scas
lea
sub
ss
sbb
rsm
inc
sub
xchg
stos
ja
cmp
mov
int
in
mulb
mov
cmpsb
int
loopne
mov
ret
outsb
scas
je
and
dec
jbe
mov
out
mov
repz
jno
nop
rorb
cmp
add
aad
in
ret
jle
xchg
lods
mov
mov
js
and
out
dec
or
adc
jl
iret
xchg
fidivs
mov
jbe
mov
xchg
adc
add
fdivs
mov
dec
aam
divb
hlt
inc
stc
pop
movsl
pop
std
fnstcw
sahf
cli
inc
outsl
xchg
mov
adc
nop
jmp
jo
rcll
insb
push
iret
scas
xchg
xchg
ss
dec
mov
ds
scas
xchg
popf
call
mov
js
xchg
sub
mov
inc
pop
inc
popf
fdivrp
lret
enter
sbb
lods
test
movsb
mov
fstpl
je
xchg
push
and
test
pop
out
adc
sahf
xchg
repnz
movb
fsts
xlat
rcrl
bound
sub
std
cmp
push
add
adc
mov
push
jmp
cmp
sbb
or
stos
nop
divb
arpl
xchg
fnstcw
mov
arpl
mov
mov
clc
cmp
sbb
fistpll
xchg
mov
test
mov
in
add
sbb
sbb
pop
push
add
and
mov
into
leave
xor
sub
aad
adc
push
repz
push
jae
aam
faddl
and
mov
aad
mov
sub
cli
xchg
es
fmull
hlt
arpl
es
repz
cmp
out
mov
shlb
sub
xchg
insl
leave
lds
insl
outsl
fwait
push
mov
icebp
repnz
loop
js
pushw
lea
arpl
cld
mov
decb
xorb
lock
push
jmp
daa
pop
jmp
cmpsl
movsl
ja
fistps
jg
test
adc
jo
inc
inc
mov
add
xchg
cs
add
cmp
xchg
mov
nop
pop
dec
add
mov
and
pop
cmp
adc
test
dec
sub
adc
les
adc
flds
notl
mov
jbe
fwait
or
sahf
gs
ja
test
out
push
jnp
push
adc
shll
or
lahf
rcrl
inc
aas
add
movsb
gs
jge
data16
lds
outsb
test
popf
pop
lea
sarb
insb
inc
lahf
mov
pop
mov
pop
or
jl
pop
lods
shrl
fstl
sub
add
sub
jns
lret
jne
dec
mov
popa
push
or
mov
sbb
dec
pushf
xchg
pop
cmpsb
shll
dec
mov
lahf
fbstp
and
fdivrl
test
pop
popa
xor
out
mov
mov
test
pusha
rcrb
xor
mov
add
cmpsb
xchg
push
lahf
movsb
push
subl
es
pop
inc
cmpsl
outsl
scas
sub
dec
and
outsl
jg
sub
bound
mov
dec
leave
les
mov
mov
and
je
sbb
dec
andl
xchg
jnp
adc
jg
inc
fidivs
sti
push
into
push
dec
into
out
jp
xchg
add
xor
test
jno
sbb
ja
inc
rcrb
xchg
jne
dec
fcomps
stos
test
imul
test
adc
roll
sub
test
lea
pushf
pop
in
lea
adc
sbb
into
pusha
cltd
and
pop
arpl
mov
ss
adc
lds
stos
flds
insl
out
ja
aam
test
ja
repnz
cmpsl
mov
inc
mov
add
dec
into
into
popa
cs
out
scas
jmp
sub
inc
int
sbb
add
push
mov
push
push
mov
ret
pop
in
sub
dec
out
sub
mov
pop
xchg
mov
add
xchg
outsl
inc
andb
pop
scas
dec
bound
into
outsb
gs
mov
sub
push
int3
shll
fs
mov
jns
int3
popa
addr16
shrb
or
mov
js
or
push
je
inc
mov
cmp
sub
adc
and
pop
mov
sbb
sbb
xchg
outsb
xchg
mov
pop
pop
mov
push
dec
mov
sub
cli
test
outsl
pop
testb
xchg
mov
in
cmp
in
mov
dec
xchg
inc
mov
mov
push
shl
sbb
aaa
jmp
mov
push
dec
jg
or
cs
push
pop
pop
lock
jno
push
andl
ja
sarl
les
xor
iret
mov
xorl
js
inc
arpl
scas
or
aam
scas
les
movsl
jg
pop
stos
cltd
jbe
mov
je
rclb
mov
ret
pop
pop
enter
mov
xchg
mov
jl
movsb
push
jle
loope
adc
in
rcrb
pop
out
es
std
rcpps
xchg
insl
andb
push
into
in
jg
push
pop
call
or
jmp
adc
mov
jb
ficomps
ja
mov
daa
in
lahf
cmpb
fs
fmulp
lret
add
inc
test
fcomps
ret
lods
insl
jae
aaa
shlb
cmp
or
stos
or
cmpsb
add
or
mov
jae
arpl
notl
popa
aam
mov
adc
dec
andb
test
popf
xchg
jp
mov
sbb
dec
pop
test
test
push
cwtl
and
daa
jp
mov
adc
mov
xor
cmp
in
lea
addr16
hlt
cmp
ror
or
div
cltd
clc
icebp
repz
cmp
stc
in
push
pop
mov
pop
mov
mov
test
ja
xorb
addr16
lea
add
cmp
pushf
test
xor
jmp
cmpsl
imul
nop
cld
sub
jne
mov
fdiv
mov
mov
adc
mov
sbb
mov
out
repnz
dec
sub
loopne
test
fcmovnb
jb
shll
repnz
mov
push
push
xor
lea
fdivs
popf
fucomi
cmp
repnz
aaa
lock
flds
jecxz
rcrl
or
mov
out
jo
test
lret
std
pop
xor
in
out
mov
inc
jno
dec
mov
arpl
in
push
sub
adc
loop
inc
jecxz
pop
push
mov
popf
and
add
fstl
add
stc
xor
xchg
les
fidivs
idivb
fdivr
dec
xchg
and
dec
xchg
sbb
movsl
mov
jp
adc
sub
mov
cmp
movsl
fimull
loop
fsubs
fdivl
mov
mov
out
in
rolb
xchg
sub
inc
les
movsb
mov
cld
mov
cld
sbb
jg
add
rcrl
lahf
xorb
iret
mov
push
sub
mov
mov
ret
jne
fists
lea
or
xor
and
jo
adc
pop
sbb
cs
hlt
pushf
pop
cli
sub
roll
pusha
fmull
test
sbb
dec
pop
add
das
push
fdivl
test
lea
jmp
xchg
scas
mov
pop
sbb
lret
xorl
cmp
pop
cmp
pop
stos
dec
dec
lcall
lods
jne
push
pop
loope
cli
aad
add
fildll
mov
cmpsl
pop
lods
add
mov
cmpsl
fisubrs
loope
mov
jns
jo
cs
cmc
in
cld
inc
jbe
sahf
shrl
pop
xchg
cmp
out
pop
cmpsl
mov
bound
aad
stos
or
push
shl
mov
inc
iret
xor
jmp
adc
cmpsb
notb
orl
adc
mov
mov
repz
xor
xchg
test
scas
inc
loop
mov
inc
xor
scas
int3
arpl
xchg
test
dec
lahf
rcl
mov
stc
pop
pop
jg
test
int3
daa
jns
mov
nop
loopne
arpl
cmp
lahf
lret
mov
int3
jns
dec
mov
adc
movsb
movsb
sbb
jns
repz
push
mov
jecxz
sarb
ss
fidivrs
iret
pop
inc
push
out
gs
ja
stc
rcr
call
cmpsb
lcall
ljmp
lret
cmpsl
sub
push
outsb
xchg
ss
stos
pop
push
jp
ret
out
dec
mov
dec
mov
mov
daa
push
es
sub
push
lcall
insb
mov
and
fcmovb
int3
mov
adc
leave
dec
mov
push
pusha
xchg
rcrl
mov
adc
mov
mov
inc
leave
xor
mov
mov
jmp
loope
mov
loope
lods
movsl
add
outsb
push
fs
sbb
cmp
stc
sub
loope
sbb
in
js
xchg
xchg
int3
and
add
insb
push
pop
je
mov
loope
lds
xorb
jne
fisttpll
sbb
rcr
enter
mov
test
jae
mov
dec
inc
faddl
jp
sub
mov
and
cltd
add
or
jmp
cmp
push
sbb
cmp
pop
rcll
dec
mov
xchg
shll
mov
xchg
jae
xchg
mov
xchg
xchg
and
push
mov
push
xchg
add
jo
xorl
inc
mov
push
scas
outsb
daa
xchg
imul
inc
push
cmp
cld
adc
bound
ds
sub
mov
rolb
je
sahf
fisubs
push
adc
or
out
push
fwait
cmp
cmp
shl
or
outsl
pop
mov
mov
mov
pop
mov
xlat
fistps
div
filds
imulb
xchg
mov
pop
mov
mov
rol
mov
dec
cmpsb
dec
shlb
mov
loope
add
adc
movsl
imul
test
sub
les
negl
xchg
into
aad
push
dec
fldt
test
int3
je
int
xchg
and
insb
jo
das
mov
clc
xchg
mov
sbb
xor
xor
lret
imulb
fcomp
sbb
fsts
push
lods
incl
scas
adc
dec
out
xchg
out
mov
in
mov
insl
cmp
pop
je
sbb
outsb
dec
pop
daa
mov
push
xor
dec
fistl
in
shrl
or
ficomps
int
lret
or
movsl
out
loope
mov
mov
pop
mov
hlt
pop
fldl
aaa
imul
decl
lods
sbb
xor
incb
xchg
jbe
mov
in
jae
jle
mov
xor
stc
arpl
push
mov
adc
outsl
out
mov
lea
inc
sbb
ljmp
mov
les
out
and
in
rclb
aaa
cltd
test
and
repnz
call
test
in
pop
imul
pop
xor
fisttpll
jecxz
mov
clc
imul
dec
out
inc
mov
lahf
mov
pusha
mov
adc
fsubs
and
roll
inc
push
dec
pop
inc
cmp
test
loope
mov
mov
push
xchg
aaa
mov
test
mov
mov
pushf
mov
sbb
mov
push
std
fsts
int
sbb
xchg
adc
hlt
push
ret
popf
mov
mov
sub
sbb
aad
shrl
xchg
addr16
sahf
adc
int3
aaa
dec
xor
jb
pop
stc
jp
xor
push
or
out
cs
mov
push
movsl
popa
in
push
xor
loope
jb
dec
jo
lret
jo
pop
out
sbb
cmp
mov
lds
fldcw
adc
inc
rclb
inc
adc
fists
in
push
mov
and
cwtl
mov
cwtl
push
repz
and
addl
sub
rcl
mov
mov
mov
rorl
jnp
repz
and
fsubrs
xor
cmc
das
into
cmpsb
int3
inc
xchg
bound
imul
dec
mov
and
lret
nop
pop
aaa
dec
mov
adc
das
pop
lret
sub
leave
ja
sub
outsl
loop
stos
cli
rolb
mov
lret
and
mov
insl
loop
dec
test
shrb
sbb
cmpb
in
pop
mov
or
bound
enter
in
rcl
dec
jle
jae
mov
mov
inc
cltd
ret
push
sti
mov
sub
icebp
icebp
scas
stos
test
fistpl
aad
mov
inc
cmpsl
sbb
fs
pop
stos
sbb
out
arpl
cltd
test
inc
lret
push
jecxz
inc
mov
test
int
fldl
call
push
sub
push
push
xchg
add
test
sahf
cmc
pop
dec
in
add
stos
shrl
mov
xchg
cs
clc
daa
stos
pop
scas
lret
stc
add
push
jnp
gs
lea
movsb
pop
and
xor
xchg
adc
push
jecxz
hlt
gs
sbb
dec
popa
div
incl
xchg
mov
jge
push
and
add
xchg
insb
in
pop
stos
xchg
int
push
imul
inc
inc
cltd
lcall
imul
and
and
ljmp
pop
mov
mov
sbb
fmul
pop
sbb
xor
jo
push
pop
cli
sub
mov
insl
ja
push
mov
and
hlt
fisttps
mov
dec
stos
cmp
dec
jl
clc
xchg
mov
mov
push
ficoml
ret
test
pop
cmpl
jl
push
sub
hlt
fdecstp
mov
pusha
fwait
mov
or
shl
mov
hlt
push
popa
insl
icebp
sub
mov
test
test
xorb
fisubl
lods
push
push
clc
mov
ss
xor
dec
xchg
inc
out
mov
cmp
dec
mov
cmp
orb
loopne
sub
and
mov
sahf
test
movsl
lods
lret
out
orl
jp
popa
stc
add
or
das
pop
mov
aam
jl
out
adc
adc
jl
pop
mov
pop
sbbb
sbb
xchg
imul
push
inc
pop
cld
int3
fsts
popf
cs
xchg
js
fstpl
pop
nop
sbb
test
test
add
add
adc
mov
add
shr
push
fmulp
push
out
aas
arpl
adc
int
loope
sub
dec
mov
ret
test
xor
inc
fcom
xor
sub
fcmovnu
cli
fisubrs
cld
mov
jmp
in
aam
and
lahf
push
cmp
jmp
xorl
addl
in
and
fmuls
jg
jmp
mov
mov
sub
test
addb
inc
loope
gs
and
jnp
imul
into
mov
int3
push
mov
std
gs
or
add
sbb
lock
in
pop
xor
mov
lock
nop
out
lret
inc
xchg
rcr
stos
stos
mov
cltd
sub
or
in
cltd
push
lret
mov
xor
jb
lods
out
or
mov
stos
jb
out
stos
vdivsd
adc
rcll
dec
into
inc
cltd
out
mov
xchg
xchg
and
lea
push
push
sbb
shll
addr16
ret
enter
js
lahf
dec
loopne
or
cmp
shrl
icebp
rorb
rclb
repnz
cwtl
enter
nop
add
mov
sbb
test
mov
inc
push
mov
test
mov
gs
call
jg
mov
mov
xchg
push
dec
rclb
sub
jb
mov
xor
mov
xor
push
aaa
or
inc
fsubs
les
or
divb
jbe
das
cwtl
inc
arpl
xchg
cmp
cmpsl
movsl
into
push
push
pop
fsts
add
movsb
lds
in
repz
mov
stos
fwait
mov
in
xchg
loope
pop
jns
sub
xor
jno
jnp
mov
xor
pushf
enter
mov
data16
ljmp
cmpsl
gs
adc
popf
adc
rclb
pop
addl
imul
fsubrl
inc
lock
bound
fldenv
mov
outsl
call
lods
inc
cmpb
orl
fwait
mov
pop
movsl
inc
mov
or
scas
xor
int3
mov
das
popa
xlat
ret
scas
sub
inc
mov
iret
loop
inc
jge
sub
pop
sbb
mov
lret
pop
push
rcrb
cltd
push
xchg
push
ret
mov
cmc
xor
js
push
mov
cmp
cmp
and
out
push
ja
lds
movsl
leave
das
ret
xor
pushf
mov
lahf
gs
mov
push
lock
in
and
scas
clc
cmc
inc
sub
out
je
pusha
out
hlt
enter
dec
test
mov
dec
sub
out
mov
test
push
pop
out
repnz
dec
hlt
sub
scas
iret
lcall
jae
pop
cli
icebp
daa
jno
sub
out
cld
jne
xchg
pop
xchg
jge
ss
imul
mov
fsubl
jne
gs
or
lret
add
xchg
sub
sub
push
cmp
push
push
rcll
sbbb
movsb
out
jmp
jl
enter
out
push
dec
clc
or
jns
fldl
cmpsb
jmp
pop
testb
sub
addb
jmp
and
and
ss
xchg
out
push
jbe
pop
das
push
sbb
inc
xor
dec
add
and
std
fs
jge
movsl
xor
imul
mov
mov
xchg
or
fsubs
loopne
fs
cmp
xchg
mov
jbe
push
in
ds
fiaddl
push
out
pop
ljmp
pop
push
clc
clc
idivb
test
sbb
into
les
lock
mov
fsubr
push
ja
dec
aas
sbb
gs
mov
cld
out
cli
add
lock
sub
pop
int3
dec
stc
pop
add
cmpsb
leave
mov
movsb
cltd
lods
push
mov
ja
mov
hlt
mov
aas
xor
into
push
movsl
and
fwait
sbb
insb
test
faddl
loopne
mov
cwtl
stos
das
push
cli
rcll
pop
arpl
mov
pop
jge
mov
js
xchg
hlt
lea
repnz
jg
mul
mov
jnp
int
mov
mov
add
shll
push
js
xor
cmpsb
jnp
out
sub
jae
xor
sbb
xchg
xchg
mov
sbb
sbb
mov
cmpsl
or
add
scas
mov
mov
adc
test
cvtps2pd
lret
xor
mov
xchg
push
insl
cmpsl
sub
mov
xchg
ficomps
daa
mov
movsb
imul
or
xchg
cmp
rol
mov
mov
xor
adc
outsb
int
sbbl
jnp
add
pop
mov
or
cltd
in
inc
mov
sub
out
insl
mov
lock
fmulp
mov
clc
inc
enter
sahf
xor
in
rcll
das
outsl
or
jle
das
test
jo
pop
inc
shlb
lahf
xchg
scas
and
pop
lods
lds
hlt
fs
mov
pop
notb
sbb
stos
inc
cs
xchg
ffreep
mov
lods
daa
dec
fmulp
lods
xchg
cltd
fimuls
and
inc
xchg
xor
test
into
mov
jmp
cltd
cltd
mov
and
mov
inc
outsb
inc
xor
bound
out
add
rclb
rolb
and
push
out
mov
imul
mov
push
xor
ret
test
sub
mov
fidivs
ret
fisttpl
loope
pop
sub
test
mov
inc
test
sahf
pop
movsl
jae
xchg
out
pop
inc
clc
test
push
ror
test
xchg
pop
cltd
mov
rcr
arpl
pop
frstor
pop
ret
int
or
mov
into
mov
in
fcoml
pusha
lods
add
cmpsl
addb
std
lds
sub
inc
push
movsb
mov
xor
or
mov
jno
imul
out
ss
hlt
or
aam
gs
mov
fidivrs
jmp
lock
mov
pop
insl
ja
aad
mov
jo
mov
bound
push
dec
jmp
mov
vunpckhps
jl
out
ficomps
leave
outsl
mov
xchg
insl
and
das
in
sahf
jmp
mov
movsl
movsb
mov
es
mov
inc
dec
dec
in
popf
xchg
cli
inc
pop
into
adc
hlt
aad
mov
mov
leave
cmp
aas
mov
jecxz
movsl
mov
inc
cld
pop
movsb
xchg
mov
pop
cmc
jmp
pusha
inc
ret
jp,pt
lret
incb
mov
divl
iret
inc
and
pop
and
adc
movsb
jno
mov
pop
arpl
jbe
loopne
outsb
imul
add
cmp
xchg
lret
push
mov
push
mov
jge
insl
push
clc
enter
sbb
xor
cmpsl
sub
fildll
test
jge
xlat
fsts
es
pop
xor
shrl
pop
pop
call
xor
rorl
jbe
mov
sub
dec
sahf
rorb
jno
icebp
daa
jle
inc
adc
jmp
sbb
test
push
and
push
or
ja
sbb
adc
xchg
sub
popf
xchg
xor
rorl
outsb
scas
sti
mov
fistpl
outsl
pop
jb
scas
xor
aaa
test
push
inc
pop
test
jp
ja
sbb
mov
daa
nop
dec
int
sbb
leavew
adc
nop
mov
stos
clc
mov
mov
leave
lea
add
aam
pusha
cli
out
cmp
adc
test
mov
mov
fcompl
test
dec
cld
add
xor
arpl
push
out
into
add
xchg
dec
mov
xchg
dec
jmp
repnz
daa
dec
frstor
out
lods
fwait
jae
aas
xor
aas
sub
dec
pop
and
sub
or
mov
xor
cmpsl
lret
test
inc
and
shrb
andb
popf
push
fldenv
loop
int
insb
nop
stos
pop
enter
push
loope
lret
jmp
jmp
scas
mov
les
adc
fstl
pushf
fbld
cmp
adc
loopne
pushf
xchg
sub
xorl
sti
aad
ret
shlb
dec
shlb
sbbl
push
aad
mov
or
dec
ret
jmp
test
pop
mov
movb
fwait
cltd
nop
inc
mov
pop
mov
jns
into
pop
aaa
sub
cmp
outsl
pop
push
outsl
mov
pop
mov
movsl
push
inc
xchg
fwait
pushf
and
in
dec
mov
rorb
mov
jo
arpl
aaa
jge
loope
sbb
cli
mov
ljmp
loope
popf
mov
mov
push
pop
push
mov
outsb
sub
daa
aad
movsb
xchg
loop
cld
jecxz
jmp
jnp
movsb
sahf
rcrb
xor
sbbl
push
icebp
ljmp
fstpt
and
mov
or
test
jne
stos
push
inc
cmp
pop
push
daa
test
lret
mov
imul
fsubl
sbb
xchg
lret
mov
scas
lods
int3
arpl
loope
pop
xchg
dec
movsl
mov
loop
lds
sbb
xor
or
std
scas
fidivs
lahf
xchg
out
ret
lret
xchg
sbb
push
fiaddl
lock
into
adc
cli
push
repnz
aaa
mov
pop
in
es
add
add
shll
fwait
xor
imul
add
aad
mov
sbb
popa
test
adc
into
addps
pop
cmc
daa
int3
pop
aam
out
dec
cmp
imul
push
mov
mov
rcrl
pushf
sbb
mov
aam
shll
adc
and
out
daa
andb
outsl
pop
inc
aas
mov
call
nop
mov
and
es
je
idivl
xchg
push
adc
xchg
out
cmp
dec
cmp
xchg
test
incb
mov
xor
gs
imul
nop
jmp
nop
xchg
ss
and
in
xchg
mov
jne
andl
leave
loope
std
pop
rcrl
or
int
add
mov
insl
mov
jp
in
enter
fiadds
es
inc
not
imul
shr
adc
adc
cwtl
xor
mov
xor
mov
cmp
bound
inc
sbb
jle
sarb
mov
loopne
in
in
incb
add
scas
pop
mov
cmpsb
jle
mov
pop
into
repz
or
push
js
divl
add
stos
mov
outsl
push
push
ficoms
imul
or
or
jbe
lods
out
mov
mov
jecxz
ljmp
jb
cltd
bound
and
js
mov
dec
xor
pop
mov
enter
sub
adc
icebp
scas
pop
pop
repz
sbb
xchg
jge
pusha
les
outsl
out
xchg
xchg
lret
push
pop
jns
mov
mov
pushf
adcb
outsb
imul
push
and
jbe
xchg
dec
lock
data16
xchg
inc
inc
out
arpl
popa
mov
test
popf
aaa
xor
cmpsl
mov
out
ret
movsb
out
cmp
les
nop
pop
jnp
arpl
pop
jmp
inc
movl
arpl
add
mov
xor
daa
sub
movsb
mov
icebp
lods
add
or
mov
cmp
enter
daa
pop
arpl
push
outsb
lret
into
rorl
ss
cmp
icebp
out
sub
mov
lahf
push
loopne
sti
mov
aad
pop
mov
and
xchg
lds
sbb
and
jg
xchg
push
movsb
jbe
dec
jbe
mov
xlat
jns
fsts
sub
arpl
cmpb
shrl
mov
cli
sar
adc
cltd
lahf
xor
movsl
insb
into
iret
xchg
xchg
cli
call
psrlw
stos
inc
xchg
lea
iret
fisttpl
pop
xchg
dec
push
cmp
fstpl
aad
or
jno
pop
inc
lcall
popa
fwait
or
mov
mov
je
or
pop
mov
or
mov
mov
mov
ret
mov
bound
imul
or
push
jmp
sbb
loope
add
sti
sbb
lahf
shrl
xor
fsubrp
aad
jg
mov
popf
outsl
xchg
test
dec
pop
xchg
xchg
mov
and
in
mov
xchg
test
xchg
mov
adcb
popa
pop
dec
lahf
pushf
adc
jmp
pusha
adc
lods
and
test
or
and
mov
outsl
call
sbbb
push
mov
inc
leave
or
sub
orl
pop
mov
sub
shlb
hlt
fcmovu
imul
leave
lret
xchg
repz
pusha
push
iret
sbb
shrb
mov
sarb
add
pop
add
into
sbb
popa
add
shll
jnp
int
stos
sub
mov
dec
xor
cmp
popl
mov
fs
xor
loopne
fcmovnu
leave
xchg
lret
test
sbbb
jp
mov
and
jbe
shrl
rcrl
xchg
jecxz
arpl
add
sahf
clc
sbb
in
icebp
in
mov
loopne
cmpsl
sbb
add
adc
xchg
shl
xor
mov
pop
push
or
mov
jae
jmp
out
xor
mov
jno
mov
push
jmp
loopne
das
sub
mov
ja
push
or
rcll
sub
mov
aaa
inc
ds
and
xchg
test
sarl
sbb
in
jmp
xchg
pop
adc
inc
sbb
and
test
test
ja
sarl
jbe
test
mov
xchg
fdiv
inc
ret
das
lods
call
aam
js
inc
lock
stos
pop
sub
cmpl
jmp
cmpsl
mov
imul
cmp
fnstcw
leave
jo
out
mov
dec
rorb
fidivrl
popf
testb
sbb
lret
dec
movl
scas
cmpsl
test
cmp
mov
or
rolb
icebp
stos
and
sbb
loop
in
xlat
ja
fistpll
mov
xchg
sub
popa
lahf
aad
popf
jbe
add
scas
dec
and
cmpsl
sub
cs
shl
lods
ret
mov
fdivl
pop
in
je
adc
mov
add
dec
cltd
clc
dec
jge
fdivrl
movsb
aad
pusha
sbb
jecxz
in
sbb
jbe
xchg
sbb
shr
lds
jg
sbbl
out
inc
cmp
int3
fwait
subl
push
sbb
push
jo
add
push
push
dec
xchg
pop
push
push
testl
jnp,pn
xor
daa
lret
cs
loopne
dec
sub
sar
and
xor
out
pop
or
loop
les
lods
mov
pop
push
cld
les
idivb
xchg
into
pushf
nop
pop
popa
xchg
lret
xchg
cld
push
jecxz
in
imul
loopne
dec
adcl
enter
sub
insl
scas
sbb
cmp
dec
js
jno,pn
xor
adc
test
sbb
push
xor
xor
push
mov
hlt
jns
mov
cmp
repz
mov
pop
fldt
ljmp
leave
and
add
and
mov
lods
jae
lods
lea
shrb
repz
loope
xor
in
or
push
or
or
adc
das
mov
xchg
cltd
inc
ss
lods
push
out
and
xchg
cltd
pop
out
sub
jns
xor
loope
pop
xor
cmc
movsb
xchg
mov
lea
stos
and
andl
dec
mov
mov
inc
lock
xchg
push
divb
lret
roll
mov
mov
mov
outsl
jno
sub
lret
xchg
pop
xchg
xchg
or
arpl
pusha
lret
xor
arpl
jbe
mov
sub
cmp
imul
stos
je
sub
mov
mov
cmp
mov
not
mov
fxch
mov
xchg
jmp
into
jae
mov
fisttpl
and
fbstp
or
dec
into
mov
mov
movb
and
pop
cli
push
in
mov
loopne
adc
sbb
pusha
lods
cld
test
push
xchg
and
jno
cs
mov
jb
jbe
xor
cwtl
clc
and
and
jp
aas
out
push
xorb
sub
repz
scas
inc
out
push
loope
xor
push
addr16
lods
and
popa
cmp
int
shrl
push
nop
mov
popa
int
stos
add
mov
cmp
nopl
lods
pop
cmpsb
das
mov
cmc
push
fstpt
jo
xchg
dec
mov
cltd
add
mov
icebp
pushf
mov
or
iret
mov
nop
pop
sub
cmp
inc
negb
shlb
out
jbe
lea
sbb
fincstp
jo
adc
xchg
imul
sub
inc
sbb
fsubrl
fistpll
xchg
mov
test
dec
pusha
in
cmc
inc
jns
xor
push
xor
movsl
test
clc
jae
iret
aas
mov
cmp
pop
or
lock
mov
iret
pop
or
pop
push
jle
xchg
sub
les
dec
scas
mov
or
ficoms
loopne
xchg
fcomps
notl
mov
sub
cmpsl
and
ret
xchg
add
fnsave
lods
daa
inc
rcll
push
push
clc
out
shlb
test
bound
fisttps
jecxz
jl
int3
fcomp
inc
mov
in
into
pop
movsl
sub
dec
repnz
test
ret
jge
out
mov
pop
out
les
push
test
xor
dec
test
ret
gs
push
ficoml
push
addr16
sub
jecxz
jae
rclb
push
jmp
movsb
call
mov
in
pop
adc
sbb
push
pop
push
es
stos
in
ljmp
pop
shl
mov
rorl
ljmp
add
pop
out
int
in
fdiv
dec
adc
or
lock
xor
sub
pop
addr16
mov
loope
shll
int
sub
jmp
mov
dec
mov
jne
inc
icebp
mov
add
in
imul
daa
and
pop
rcll
dec
fcompl
cmp
fmulp
loope
loopne
out
jbe
mov
cltd
subl
movsl
fwait
ret
cs
mov
xor
loopne
cmp
inc
dec
xor
fists
cli
mov
stos
mov
out
sti
outsl
xor
xchg
adc
fwait
fs
fwait
scas
aas
sub
mov
inc
lea
pop
pop
gs
stc
shll
mov
out
test
into
idivl
inc
cltd
shl
xor
jg
iret
sub
and
xor
ja
xor
mov
adc
cli
cmp
enter
in
sbb
cmc
out
jp
out
mov
sbb
dec
mov
test
stc
lret
mov
xchg
test
and
cmp
mulb
and
mov
mulb
out
insl
cs
cmc
jg
jns
jb
imul
test
mov
pop
bound
push
andl
mov
fwait
cmc
push
int3
es
in
push
or
or
lock
dec
fidivrl
in
push
mov
and
cld
sub
mull
sbb
in
aas
es
pop
xor
mov
icebp
cltd
xchg
xor
mov
cmp
lock
and
xchg
adc
subb
aaa
jecxz
mov
sub
and
scas
pusha
adc
mov
movsl
out
cwtl
fnstenv
jp
xchg
add
and
inc
testl
cmp
adc
jmp
jmp
mov
jle
add
xchg
push
jno
das
cmp
pavgb
rcll
scas
imul
stc
cltd
lea
xor
mov
mov
cld
push
mov
incb
adc
imul
sub
push
cli
movsb
out
js
sbb
jl
sub
je
pop
inc
leave
push
cs
out
sub
jae
dec
mov
rclb
dec
jb
loop
subl
mov
arpl
out
cmc
les
mov
pop
push
push
mov
dec
lcall
fisubrl
movsl
and
xor
cmc
lds
xchg
cwtl
outsb
pushf
xchg
push
mov
dec
rcr
cmp
pop
repnz
push
lea
xchg
cmpsl
aad
es
mov
pop
dec
mov
les
dec
mov
jb
lods
in
sbb
ds
cmpsb
popf
fadds
push
icebp
push
cltd
inc
sbb
jge
mov
out
push
sarl
xlat
or
gs
call
jne
sarb
shrl
mov
addl
fucom
icebp
jp
pop
cwtl
test
in
pop
jmp
or
mov
ret
cmp
xor
xlat
inc
adc
and
cmpsl
cld
jne
cli
test
pusha
iret
adc
dec
or
xor
cwtl
dec
pop
push
xchg
daa
mov
fcomi
fsubs
aaa
mov
in
scas
push
or
leave
inc
push
jp
ljmp
pushf
dec
imul
push
loop
lahf
adc
idivl
std
pop
das
fdivs
mov
test
testl
mov
dec
popa
cmp
push
mov
push
aad
icebp
fistpll
imul
xor
rclb
movsl
icebp
rorb
adc
aam
idivw
ss
cmc
dec
cmpsb
jns
sub
sarl
aam
stos
insb
fxch
gs
or
mov
mov
imul
mov
clc
outsb
lods
pop
add
js
sub
cmpsl
insl
aam
insb
sub
lods
aad
jb
and
out
fcoml
repnz
loop
cmp
dec
jmp
or
pop
ss
insl
test
adc
cltd
subl
mov
repz
jb
jo
ret
dec
out
mov
out
loopne
mov
ficomps
mov
or
jo
shrb
and
xchg
fisttps
cmp
lret
imul
xchg
fisttpl
popf
aam
fwait
lods
push
and
lret
iret
loope
xor
inc
ja
mov
sbb
push
outsb
ja
inc
clc
dec
les
xchg
lret
aam
lret
mov
addr16
add
test
mov
jb
xchg
or
nop
jns
repz
lods
xor
popa
ds
cmp
fnstsw
pop
insl
fsubr
sbb
xchg
push
pusha
arpl
push
imul
jp
scas
sahf
jns
nop
xchg
mov
mov
shll
xchg
insb
and
push
inc
sub
rolb
out
sti
iret
jns
fimull
outsb
es
sub
rcrl
cmp
shll
popf
push
stos
pop
push
inc
adc
adc
insb
shl
inc
mov
scas
or
lahf
testl
pop
pop
sahf
pop
jo
jp
cltd
movsl
arpl
or
mov
adc
adc
test
mov
popf
dec
ror
push
ret
addr16
cmp
xchg
out
jecxz
xchg
cmp
adc
pop
push
jo
daa
or
jno
fidivrl
pop
loope
mov
je
adcl
mov
lods
jg
fidivrs
movsb
xchg
mov
ds
fdecstp
scas
frstor
aam
leave
ljmp
xchg
scas
mov
fisubrl
push
fwait
mov
xor
fwait
out
std
daa
into
je
and
xor
sbb
fcoms
adcl
adc
stos
and
jae,pt
iret
push
pop
pushf
add
sbb
sahf
inc
push
in
add
pop
es
imul
ret
jl
hlt
je
aaa
enter
inc
sbbb
sub
xor
and
lcall
mov
lea
jns
add
xor
fistpl
test
enter
fidivl
push
sbb
mov
es
test
sub
outsl
movsb
adc
sarb
or
out
les
outsb
imul
mov
xchg
pop
adc
bound
and
pop
aam
dec
adc
sti
jbe
shll
push
dec
or
test
inc
lret
xor
add
enter
sub
pushf
sub
mov
inc
or
rolb
mov
mov
sbb
mov
sahf
mov
jmp
cmp
mov
add
arpl
neg
cwtl
dec
mov
push
scas
test
iret
add
outsl
sub
jmp
xchg
add
stos
add
mov
clc
ret
out
cmp
rorb
leave
clc
stos
lds
jne
mov
push
inc
jmp
and
call
fnop
leave
jb
jmp
inc
dec
mov
pop
push
pop
cmc
fldenv
fsubrs
dec
xchg
daa
in
jne
xor
adc
mov
mov
inc
shll
lahf
mov
repz
test
pop
outsb
mov
into
jae
xor
fsubrs
or
dec
test
inc
repz
xchg
sbbb
cmpsb
lcall
cli
rcl
xchg
xchg
lcall
es
lea
and
jl
pop
mov
je
out
movsl
data16
and
jbe
adc
xor
push
aas
push
fnstenv
data16
mov
push
jns
push
adc
push
push
mov
stos
add
orb
or
test
into
insb
js
sarb
inc
arpl
sti
inc
pop
mov
fsubrl
in
es
and
adc
clc
xlat
loopne
rorl
filds
mov
and
ljmp
int3
loop
mov
sub
cmp
cmp
addl
insl
mov
cltd
xor
and
jae
dec
scas
adc
sbb
cmp
jb
jbe
mov
dec
cmpsb
imul
stos
adc
pop
xchg
js
stos
xchg
push
mov
stos
or
or
int
mov
and
jmp
call
lahf
push
push
out
fwait
xlat
pop
add
sbb
rolb
out
std
neg
out
sbb
daa
fnstsw
out
add
pushl
dec
dec
popf
xorb
stos
lock
cli
dec
iret
fnsave
adc
idivb
inc
rclb
xchg
sbb
jns
rolb
or
cli
add
cmp
xor
mov
shrb
call
andl
popf
mov
mov
pop
sbb
cs
xchg
adc
sbb
test
arpl
xchg
jle
adc
cmp
mov
fs
aas
mov
xor
push
inc
xchg
loop
int
and
test
mov
testl
dec
ror
xchg
jecxz
push
xchg
lahf
pop
movsb
inc
ja
out
push
and
mov
adc
dec
jl
fdivrs
test
rcl
cmp
and
out
flds
call
rorb
mov
test
mov
xchg
mov
testb
or
mov
stc
jmp
test
movsl
push
mov
push
ja
sub
mov
xor
dec
xchg
pop
mov
into
fstl
mov
xchg
cwtl
je
popf
stos
push
mov
mov
popf
lods
shrb
xchg
cmovo
bnd
movsl
push
out
push
lea
xchg
incb
hlt
jae
out
jae
cmp
imul
xchg
xchg
mov
leave
inc
xchg
add
vpsrlw
aam
lea
scas
fstpl
inc
pop
rcll
cld
and
sbb
stos
fstpt
jnp
enter
icebp
mov
and
xchg
add
insl
xchg
cwtl
and
rcr
out
dec
inc
add
inc
loopne
push
stos
mov
lds
scas
icebp
rcr
mov
int
mov
popf
xor
mov
sub
pop
add
loopne
mov
jb
insb
enter
mov
mov
movsl
dec
dec
es
pop
fidivrs
mov
loop
jmp
cld
jbe
cltd
in
fldcw
push
and
sbb
stc
dec
mov
jl
xchg
jae
negl
cmpl
or
clc
jg
sahf
gs
enter
notb
adc
cltd
mov
inc
jno
fstps
add
jo
lea
flds
ret
and
mov
cltd
pushf
arpl
and
int
jge
repnz
in
pop
mov
call
in
or
or
add
test
xchg
in
xlat
jnp
in
cmp
push
dec
dec
mov
or
jle
mov
sub
mov
testl
adc
std
pop
adc
mov
shll
cmc
mov
or
cs
jno
shll
mov
popa
dec
das
cltd
ret
cli
outsb
jg
add
dec
fnsave
mov
addr16
fdivs
mov
mov
mov
dec
inc
ret
popf
insl
cmp
sbb
adcl
inc
sarb
sbb
xchg
xor
test
hlt
in
test
add
add
cmpsl
scas
mov
pop
or
idivl
out
mov
mov
xlat
insl
fadds
jno
sarl
mov
addr16
pop
cmp
repnz
adc
dec
in
lahf
inc
fwait
popl
jmp
call
aam
fldl
scas
enter
cmp
and
lret
rolb
ss
add
stos
shr
fistpl
addr16
scas
lret
sbb
xlat
pop
rorl
leave
fsubrs
jg
idivb
push
and
sub
dec
les
scas
jae
jmp
push
mov
les
mov
add
jno
bound
jns
out
mov
adc
push
mov
stos
repnz
push
arpl
mov
mov
inc
pop
lret
push
ret
shrb
dec
jle
pop
stos
in
mov
in
aam
mov
jno
mov
jle
mov
mov
adc
jp
imul
cmpsb
scas
in
pop
repz
inc
xchg
ficompl
test
inc
out
jnp
sbb
daa
push
in
fbstp
shll
mov
subb
call
sets
cmc
and
push
ja
mov
jecxz,pn
sarl
imul
xchg
std
ja
push
or
gs
fnstsw
mov
jecxz
add
ljmp
cmp
sbb
cmp
adc
lods
adc
popf
aas
out
shrb
jge
cmp
imul
mov
movsl
add
mov
lahf
inc
ret
int3
in
fsubs
pusha
loope
sub
jbe
repz
pop
insl
lea
shrb
xchg
mov
xchg
sbb
cmpsl
dec
jne
cmp
and
push
cli
pop
sahf
ret
adc
test
test
and
pusha
mov
loope
dec
stos
fmul
jbe
negb
pop
imul
bound
rcl
or
and
xor
aad
mov
dec
push
adc
ror
shlb
das
ret
dec
int3
sub
xor
mov
test
add
cmp
mov
mov
or
lret
or
outsb
ret
cmp
mov
lds
and
jae
sub
or
push
sub
pop
bound
stc
dec
das
movsb
in
xlat
orb
fstpl
dec
lret
cli
loop
jg
fadd
pushf
ret
das
out
into
out
jmp
sub
mov
dec
inc
mov
pop
testb
arpl
add
movsb
jmp
testb
mov
sbb
sbb
and
sbbl
add
test
xchg
mov
sbb
loope
je
in
cmp
lahf
test
ret
add
mov
fistl
xchg
cmp
mov
decl
add
insl
pop
cmp
or
fsubs
push
outsl
imulb
pop
int3
mov
adc
in
or
scas
mov
dec
mov
lea
xor
sub
out
pop
xchg
or
push
shlb
xchg
ds
std
cmp
pop
pop
leave
jmp
mov
orl
shlb
stc
mov
sub
lock
inc
push
jnp
xchg
outsb
sub
lahf
pop
loopne
sub
fadds
or
cli
ss
inc
dec
mov
les
push
push
movsb
xor
and
daa
sub
pop
mov
fs
fisubrl
cmp
lahf
shlb
add
loopne
push
push
nop
or
rcrb
repnz
pop
pop
jb
mov
jl
in
leave
bswap
xor
pop
mov
insb
and
pop
mov
cmp
icebp
jo
aam
out
outsl
xchg
jno
xchg
test
xor
mov
out
sub
fnstsw
pop
scas
push
loope
mov
loopne
pop
add
addb
aad
aas
aam
imul
lret
mov
and
test
mov
jmp
dec
lods
in
ds
test
cmp
es
fwait
outsl
pop
out
into
adc
xor
loop
dec
fs
sbb
mov
pushf
stos
popf
fisttpll
popf
outsl
cmp
scas
inc
mov
leave
sub
les
xor
inc
cmpsb
xchg
lock
xchg
nop
lock
xchg
lods
lock
pop
pop
xor
xor
push
mov
rolb
lret
adc
sar
jg
fucomip
sti
sub
popf
xor
insb
adc
addr16
jb
push
adc
jne
mov
lret
ja
xor
int3
mov
cmpsl
js
pop
cmpsb
or
inc
mov
int
jb
leave
ljmp
loope
xchg
fbld
pop
les
mov
inc
mov
fsubrs
test
ret
imul
adc
sbb
mov
jb
sbb
inc
mov
ss
fstl
cwtl
fcomp
rclb
cmc
lea
push
mov
push
mov
jne
in
aad
mov
js
and
and
mov
pop
cmp
add
push
repnz
ds
out
je
filds
push
ss
jg
nop
jl
sub
in
enter
xchg
call
pop
clc
sahf
in
iret
pop
outsb
leave
in
loope
or
jnp
add
repz
ss
adc
and
mov
cmp
pop
movsb
test
cmp
into
in
push
ljmp
in
mov
push
adc
xor
push
dec
arpl
jecxz
je
xchg
push
cmpsl
scas
subb
pop
jmp
ret
xor
enter
mov
loopne
dec
and
aam
jns
pop
push
int3
int3
outsl
stos
jmp
push
test
hlt
xchg
pop
pop
pusha
fildll
sbb
pop
das
mov
pop
in
pushf
test
sbb
movsl
inc
push
lds
in
pop
jo
daa
fsubl
or
mov
data16
pop
mov
mov
int3
pop
call
dec
push
inc
sub
daa
cmp
sub
fmul
and
adc
into
sub
jnp
test
xchg
in
mov
pop
pop
push
pop
mov
mov
jne
andl
popa
jecxz
adc
dec
data16
pushf
adc
pop
sbb
scas
ja
mov
rorb
repz
bound
pop
push
fildll
mov
mov
dec
arpl
or
sti
rcr
iret
decb
cli
in
shlb
stc
sbb
arpl
movsb
ret
fcoms
cmp
rclb
in
pop
sub
lcall
mov
test
fdivr
movsl
pop
fisubrl
iret
mov
popa
lods
add
imul
xor
into
and
inc
sahf
fcomip
addb
repnz
rcr
push
addr16
jle
and
or
cld
shufps
lcall
shll
mov
popa
xor
cli
call
cmp
into
mov
or
pop
jne
pop
punpckhwd
dec
jbe,pn
dec
cmpsb
or
fdivrs
lds
test
sbb
lods
in
cmpsl
and
pop
adc
rcrl
push
lret
jno
aaa
mov
cmpsl
or
xchg
aaa
cmpsb
dec
repnz
mov
and
mov
jo
lahf
int3
cmp
add
rcrl
repz
icebp
xor
cmp
test
mov
and
jp
sub
int
lahf
push
add
xchg
lcall
loopne
movsb
movd
out
xchg
call
mov
cmp
aad
movsb
xchg
loopne
or
aam
sbb
xor
sbb
mov
fisubs
test
int3
xor
popf
bound
rorl
pushf
jmp
cs
mov
out
lock
mov
mov
test
int
pop
pop
mov
lods
cmp
or
lret
test
imull
mov
nop
daa
dec
or
mov
or
adc
cmc
sbb
mov
outsl
push
es
cli
push
pop
pop
push
nop
cwtl
lock
cmp
xor
dec
popa
xor
rcr
shlb
mov
pop
lock
sbb
push
dec
cmc
stc
xor
ss
ret
flds
or
fsubs
negb
pop
and
out
sbb
test
pushf
lea
fidivl
cmp
mov
les
or
es
add
xchg
scas
fisubrs
xchg
push
xchg
test
pop
jp
lds
scas
inc
mov
mov
push
mov
cwtl
int3
clc
pop
inc
mov
xorl
iret
inc
hlt
pop
inc
int3
popf
ss
stos
fs
decl
outsl
adc
gs
xlat
pop
jp
sub
push
test
inc
and
aam
push
pop
adc
push
lret
cltd
mov
incl
test
pop
ret
cwtl
adc
iret
jmp
dec
movsb
fsubs
lret
and
push
int3
dec
inc
jmp
pop
adc
push
mov
sbb
xchg
shll
outsb
add
pop
fwait
mov
add
sub
outsb
jae
pop
sub
int3
inc
popf
test
cmp
in
jmp
sub
cmpsb
aas
fs
or
push
ret
cmc
lret
sub
out
mov
dec
psrad
dec
cld
scas
les
repz
inc
loop
mov
fisubrs
stos
or
sahf
lock
lcall
pop
mov
loope
push
pusha
and
mov
test
sbb
lahf
mov
pop
inc
sub
js
add
dec
pop
xchg
mov
imul
addr16
or
pop
inc
std
inc
cs
fstps
inc
imul
dec
call
cmp
sub
jmp
es
inc
jmp
adc
sti
call
call
das
je
lcall
dec
dec
inc
adc
ret
push
je
or
in
repz
mov
repnz
ret
aad
pop
sbbb
jbe
cli
dec
adc
jg
mov
int3
dec
test
cs
iret
push
inc
dec
cmp
pop
rcll
movsl
mov
cmc
mov
stos
mov
mov
lahf
mov
dec
nop
das
inc
lret
cmpsb
mov
inc
lahf
mov
cwtl
xchg
out
adc
aad
pop
cmp
mov
push
xchg
ds
cmpsl
clc
out
mov
mov
pop
or
adc
orb
stos
test
sub
cmpb
sahf
cmp
push
lret
fstpl
xorl
xor
xor
hlt
scas
xchg
pop
jns
outsl
outsl
mov
inc
jp
adc
adc
dec
mov
in
jle
ds
fcmovne
or
or
sub
imul
shll
cmpl
data16
ja
test
movsl
pushf
mov
jbe
aam
push
popf
lret
pop
dec
inc
push
xchg
pop
sub
push
call
adc
push
push
ret
lds
mov
xchg
jmp
shll
test
adc
or
push
inc
cmc
pop
inc
push
mov
dec
add
les
dec
ret
and
push
stos
and
adc
dec
test
pop
and
test
adc
and
movsl
add
int3
xchg
or
outsb
fwait
call
lahf
movsl
mov
xor
and
sti
push
mov
push
insl
pop
ss
mov
pop
lahf
and
and
adc
mov
add
cltd
cmpsb
jg
ret
imull
pusha
or
cltd
out
shrl
add
xchg
xchg
mov
jo
test
mov
pop
mov
idivl
pop
lret
adc
xchg
adcb
pop
and
inc
xchg
test
lahf
add
popf
mov
push
pop
dec
sub
mov
sub
xchg
jbe
aaa
popa
mov
bound
lea
push
push
or
repnz
or
fs
arpl
jecxz
jns
mov
push
fmulp
inc
cmc
ss
dec
mov
push
mov
hlt
adc
sbb
xlat
fmulp
add
fwait
mov
pop
loop
inc
lahf
jns
shll
lods
fisubl
loopne
iret
outsl
or
cld
iret
xorb
scas
or
dec
mov
femms
lea
lret
sub
repnz
pop
jne
jns
xchg
sbb
push
push
cs
jne
push
repz
in
daa
pop
fsubrl
mov
in
in
in
or
aaa
cmp
mov
push
mov
add
nop
mov
fs
rclb
push
lds
cmpsl
pop
sbb
notl
mov
jns
push
in
jbe
mov
sbb
xchg
push
les
rorl
pop
insl
inc
lret
cmp
leave
xor
sbb
bound
cltd
xchg
pop
bound
pop
sahf
mov
adcb
mov
int
test
lret
shr
or
filds
mov
jnp
sub
lret
std
sub
or
mov
mov
out
sbb
lret
bound
lock
xchg
xor
dec
jno
cmpsb
jg
sub
icebp
inc
loopne
or
int
sub
ret
arpl
pop
pop
call
cwtl
mov
movsb
xlat
push
lock
dec
inc
fwait
cmc
aam
sub
aad
je
adc
loop
popa
test
and
test
or
add
push
into
je
add
pop
popf
xor
stos
es
xchg
mov
dec
mov
jg
cs
test
fldl
xlat
push
hlt
push
sbb
clc
aam
add
in
int
daa
dec
outsl
cmp
ficomps
jae
mov
push
jecxz
push
popl
orl
lret
ja
push
or
lret
push
test
xchg
or
pop
mov
lds
clc
stc
sarb
shrb
leave
push
popf
cmp
mov
push
and
dec
mov
cld
mov
lahf
or
js
mov
repnz
xchg
adc
hlt
or
out
pop
in
mov
sbb
insb
ret
cmp
pop
out
xchg
pop
xor
mov
aad
in
mov
fstpl
push
dec
fstpl
int
mov
mov
int
adc
fsubrp
subl
push
push
stos
pop
pop
ss
push
pop
dec
cmp
sar
dec
addr16
fimull
dec
repnz
lds
mov
popf
inc
or
loopne
in
dec
in
cmp
push
sub
cmp
cltd
cmpsl
sbb
xchg
push
ja
xor
test
add
or
dec
test
sahf
decb
icebp
or
pop
xchg
or
cld
pop
out
dec
pop
out
pop
mov
mov
movsl
sbb
lds
mov
das
mov
popf
outsb
sahf
mov
loop
xor
xchg
or
push
jnp
leave
jle
insl
test
or
add
adc
mov
xor
sbb
test
lret
andb
mov
push
sub
jle
mov
dec
insl
je
stos
lret
push
jne
enter
cmp
cmp
sub
lahf
imul
mov
rcrl
outsl
sahf
xchg
xor
xchg
xchg
rolb
dec
mov
cmp
gs
xorl
test
in
jbe
loop
shlb
xchg
gs
outsb
push
fistl
mov
sub
loopne
xchg
pop
xchg
das
jbe
jmp
aas
mov
dec
cmp
dec
xor
in
or
add
aad
sbb
int
mov
mov
rolb
sti
mov
mov
and
into
popf
add
xchg
int3
fisttpl
lea
mov
mov
xor
dec
mov
sub
lods
mov
pop
or
dec
das
and
xor
pop
jl
adc
and
icebp
mov
rcll
xor
aas
repz
inc
dec
mov
movsb
test
pop
imul
lds
sbb
test
dec
imul
lahf
jge
dec
sub
iret
dec
mov
fcompl
daa
ror
jbe
idivb
stc
dec
mov
in
add
stos
sahf
decl
iret
in
cmpb
dec
xor
adc
lgs
and
rol
aas
adc
cltd
movsl
in
dec
cs
push
in
sub
jne
aam
rcll
lods
stos
pop
pop
or
sub
mov
xor
mov
push
popf
loopne
add
test
stc
sahf
jo
hlt
imul
fisttps
leave
jmp
call
xchg
das
push
sbb
bound
arpl
shl
jbe
neg
sub
aam
stos
pusha
adc
and
int3
lea
ror
push
mov
mov
mov
adc
in
scas
iret
and
rcl
cmpxchg
and
ds
sub
movsl
dec
jb
mov
dec
fsubl
into
inc
dec
jo
and
js
and
pop
or
xor
sbb
inc
daa
aaa
into
pop
mov
mov
mov
pop
xchg
call
pop
lock
dec
lods
imul
in
dec
push
cmp
mov
pusha
stos
scas
mov
sbb
addr16
shll
repz
and
xchg
fstpl
mov
cmp
das
sbbb
push
pusha
sub
add
push
scas
gs
jl
push
jl
pop
stc
cld
mov
inc
dec
sbb
ljmp
pop
cli
icebp
jo
inc
popa
out
or
enter
xchg
lock
xor
cmp
movl
std
lret
iret
pop
dec
jns
es
jnp
dec
dec
sti
mov
adc
lret
out
ficompl
out
adcl
push
sarb
push
in
bound
popf
jnp
sub
roll
fwait
xchg
xchg
sub
pop
subb
pop
pop
adc
pop
cmp
jno
fwait
push
nop/reserved
lahf
push
ss
fs
add
mov
clc
mov
ffree
dec
fmul
stos
lods
jecxz
dec
cmp
lret
pop
mov
rcll
mov
mov
insb
mov
fcomip
dec
dec
arpl
mov
stc
and
pop
cmp
insb
bound
jl
xchg
push
adc
dec
int
inc
lahf
shll
mov
dec
jle
cmp
or
xchg
cmp
or
inc
test
icebp
fsubrs
sbb
add
jbe
cmp
iret
push
dec
xor
sub
imul
jecxz
push
inc
push
pop
fwait
int3
jb
xor
in
add
fmull
mov
push
xchg
inc
test
movsl
jg
loop
push
sub
lds
sarb
es
xor
sub
xor
xor
bnd
imul
imul
lret
aas
push
cmp
cmp
dec
inc
cli
inc
std
orl
mov
je
dec
inc
cmp
mov
push
lods
push
sub
int3
frstor
pop
leave
pop
imul
call
sahf
test
inc
gs
leave
jno
add
sub
pop
add
lcall
jns
test
lods
ret
pop
leave
pop
lahf
aad
xor
mov
sahf
add
pusha
sub
and
popa
push
addr16
jp
sahf
jle
sbb
stos
hlt
imul
push
inc
shrl
rcll
cli
push
inc
jo
dec
dec
lahf
sbb
mov
xor
cli
les
xor
adc
aas
sub
outsb
movsl
jge
test
repz
inc
insb
test
xor
loope
loop
push
sti
mov
pop
and
popa
test
sub
jo
sub
or
dec
stos
shll
mov
adc
jo
add
inc
outsl
jl
les
cmp
out
pop
adc
scas
xor
mov
into
in
cli
iret
lods
aad
mov
xchg
or
push
test
sub
sub
inc
inc
iret
lds
testl
insb
xchg
sbb
sub
push
inc
rorl
xor
jmp
popf
loop,pn
mov
stos
jbe
xor
dec
pop
xchg
insl
cmpsb
sbb
scas
addb
dec
outsb
push
gs
repnz
sub
or
aaa
insl
sub
mov
fcompl
mov
sub
gs
jmp
jns
shl
jns
idivl
mov
add
fwait
xchg
mov
xchg
sub
jg
add
inc
mov
repnz
mov
lea
arpl
sbb
push
imul
sbb
xchg
icebp
or
ds
cmp
sahf
movsb
xchg
jle
push
lahf
into
xorw
jp
add
mov
xorb
push
les
faddp
and
jne
mov
dec
push
icebp
jns
cmp
popa
pop
test
mov
dec
rcr
movl
fldcw
push
and
gs
enter
mov
dec
ret
dec
jge
add
enter
xchg
loope
jl
nop
insl
sbb
mov
das
cltd
jbe
mov
ss
mov
rcr
and
add
xchg
cwtl
or
scas
xorl
sub
icebp
jmp
push
pop
jmp
adc
xchg
lahf
mov
cmp
inc
xchg
jne
push
xor
lock
dec
add
mov
xchg
xchg
or
outsb
dec
add
mov
sbb
xlat
pop
iretw
xlat
add
arpl
int3
bound
mov
hlt
pop
rorb
lods
fbld
movsb
mov
dec
nop
nop
jns
push
mov
gs
mov
sub
jae
ljmp
les
stc
xchg
push
or
dec
fxch
mov
fildll
jne
xchg
xchg
mov
adc
jmp
into
lcall
dec
pop
mov
jle
shrl
enter
sbb
testl
fsubrp
mov
or
fistps
pop
dec
icebp
stos
mov
or
cmpsb
sbb
aam
addr16
cmp
inc
mov
sub
icebp
ja
cmpsb
inc
insb
lods
sti
insb
imul
fisttps
fildll
cld
dec
aad
xor
inc
adc
mov
and
sbb
xchg
sub
rorl
cmp
push
dec
inc
mov
xchg
gs
ja
push
mov
push
jo
add
sahf
addr16
out
fs
enter
inc
gs
out
sbb
push
mov
jb
sub
push
mov
jge
subb
mov
pop
jne
sub
in
dec
pop
jge
enter
push
popa
or
lea
lret
cmpsl
mov
les
sub
mov
pusha
and
adc
adc
mov
scas
mov
sahf
pusha
dec
pop
jp
push
push
jns
push
hlt
popa
jns
mov
xchg
iret
xchg
or
pop
sarl
or
and
push
xchg
test
scas
aam
mov
sahf
adc
fdivl
fsubl
xor
sahf
inc
in
dec
ss
mov
mov
aad
pop
lret
xchg
lods
sahf
call
cmp
mov
adc
cs
add
out
mov
iret
jmp
addl
inc
mov
inc
ja
addr16
add
pusha
cmc
jnp
push
pop
cmp
popa
inc
lcall
push
sub
sub
jg
gs
pop
ss
xlat
xor
pop
loop
loop
inc
xor
push
dec
cmpsb
sub
into
xchg
cmpsb
dec
xchg
jmp
lret
xor
jbe
scas
or
mov
adc
outsl
adc
add
iret
push
jmp
xchg
int3
movsl
nop
dec
cmp
inc
cmpsl
call
repz
cmp
int
adc
jbe
test
je
cmc
dec
xchg
mov
adc
jmp
sub
xchg
or
mov
jecxz
push
push
jbe,pt
mov
cltd
ficompl
les
pop
adc
sub
inc
aaa
mov
push
insb
sub
mov
shlb
mov
jno
sub
shl
stos
andb
gs
lret
nop
xchg
cmpsb
push
pminsw
mov
stc
enter
aaa
out
mov
lcall
dec
push
xor
and
xor
jl
pop
mov
push
jbe
enter
pop
mov
pop
test
mov
aad
lds
pop
xchg
add
sub
or
inc
or
pop
in
pushl
lret
xor
popf
lock
pop
ss
out
xchg
and
inc
push
pop
or
jae
xlat
mov
pop
xchg
jle
fucom
mov
xchg
fcmovne
adc
dec
shl
xchg
fistpl
inc
lret
fidivrs
sbb
fildl
and
mov
sub
stos
xchg
test
mov
aad
fcom
imul
dec
dec
sbb
push
push
in
push
pop
scas
jo
mov
mov
sub
cmpsb
jbe
push
add
stc
xlat
out
ret
movsl
mov
clc
pop
dec
dec
clc
call
cmp
jnp
jns
iret
inc
popf
scas
cmpsb
inc
popa
fisttpll
gs
push
add
outsb
mov
test
cmp
dec
fisubl
lods
lods
movsb
test
iret
jl
mov
fadd
sub
sub
js
xchg
cmp
loope
jp
pop
cmp
inc
jl
inc
pusha
cmp
or
les
lea
rol
mov
jl
push
fstpt
es
push
aaa
daa
or
mov
push
xchg
ljmp
push
ja
and
rdtsc
or
loopne
inc
divps
stc
jae
xor
jge
pop
outsb
mov
xor
fdivs
aaa
sub
pop
adc
push
xlat
mov
xlat
iret
rcrb
insb
stc
test
insl
punpckldq
leave
fucomp
mov
nop
cmp
jle
pop
jb
icebp
js
jae
lods
sub
sbb
pop
adc
cmp
jge
mov
xor
ljmp
mov
sub
cmp
rolb
pop
or
sub
mov
pushf
jg
ror
add
mov
js
push
aaa
out
call
lret
mov
jb
inc
and
repz
out
dec
lea
add
push
sbb
push
aad
stc
rep
lds
hlt
or
sahf
push
adcl
into
pop
out
and
andb
cmpsb
insb
cltd
mov
sbb
daa
andb
arpl
scas
icebp
shrb
sub
filds
jle
sbb
cli
inc
jmp
or
jns
outsl
mul
lret
push
pop
mov
fs
pop
jmp
mov
leave
adc
and
pushw
stos
rorl
add
out
adc
std
sti
hlt
stc
add
adc
stos
add
ja
scas
sti
or
in
test
lahf
fcmovnu
xorb
push
loope
adc
jg
in
jnp
adcb
mov
leave
mov
daa
jmp
hlt
insb
loopne
mov
rcrl
xor
test
jmp
out
in
mov
and
push
sub
sbb
jmp
mov
mov
lods
out
mov
dec
scas
push
mov
mov
mov
mov
je
add
mov
mull
dec
mov
xchg
and
cmpb
mov
xchg
dec
mov
loop
cmpsl
bound
mov
loop
mov
push
mov
ss
mov
cld
imul
cmp
jge
inc
add
jl
arpl
idiv
nop
fs
mov
mov
js
out
ja
sahf
mov
lock
jbe
pop
adc
imulb
and
dec
inc
sub
test
dec
leave
add
mov
sti
clc
imul
movsl
cmpsb
andnps
hlt
adc
cmp
push
xor
les
mov
ret
sbb
in
incl
std
adc
int
jb
adc
pop
or
mov
pop
insb
jae
popf
xchg
pop
or
inc
out
sub
and
cmpl
orl
lods
loop
add
daa
cs
jbe
push
shr
or
cmp
arpl
outsl
fsubp
call
sub
mov
sbb
sbb
lret
sub
dec
nop
call
cmc
xlat
push
je
xor
aaa
cmp
in
or
cli
cltd
test
sti
cmp
loopne
xchg
sbb
inc
mov
add
lds
ret
loope
pushf
inc
aad
test
jae
lods
shl
pushf
shlb
xchg
mov
adc
xchg
popf
cmp
loopne
xchg
call
ror
dec
xchg
shlb
mov
ret
insb
mov
sbb
pop
hlt
lcall
out
pop
jne
mov
jle
xchg
roll
fstl
push
sbb
jne
jg
in
pop
xchg
or
int
or
xlat
inc
cmp
es
mov
push
adc
sti
push
sbb
and
in
mov
xchg
mov
outsb
xor
adc
jno
repz
jae
push
loope
popf
aaa
push
push
imul
add
daa
loopne
aaa
mov
sub
into
push
filds
mov
jge
std
push
movsl
add
mov
jp
outsb
fldl
xor
loopne
dec
mov
dec
sbb
ret
and
mov
mov
in
sub
pop
push
adc
clc
ja
les
ljmp
mov
sub
inc
cmpsl
mov
js
jnp
add
add
ds
loope
dec
imul
mov
ret
add
adc
adc
sbb
sbb
das
jb
add
mov
aaa
scas
repz
adc
lea
or
xor
cmp
repnz
insb
mov
std
loopne
xchg
mov
and
cli
add
imul
cmp
inc
outsl
push
jg
gs
mov
imulb
out
outsl
sub
adc
test
sbb
jg
cmp
subb
jl
and
addl
sub
or
imul
and
ss
sahf
mov
jae
add
ja
cltd
pop
mov
add
mov
stos
mov
js
popa
adc
imul
stos
sub
sti
mov
and
lds
aam
cmpsb
sti
movsb
push
hlt
addr16
icebp
fs
mov
jae
jo
rorb
lahf
fimull
pop
push
pop
lahf
pop
pop
or
loope
dec
pop
scas
nop
xchg
mov
inc
push
scas
xchg
mov
out
cli
xor
lea
or
push
dec
imul
cwtl
dec
jle
and
mov
cli
nop
ficompl
outsb
push
mov
rorb
sbb
int3
aad
adc
jae
ds
sbb
movsl
fs
cli
les
jbe
loope
cli
test
inc
pop
mov
in
das
lcall
pop
cltd
lcall
call
movsl
xor
xor
xor
pop
fwait
add
popf
cwtl
jmp
pop
ja
xchg
cwtl
loop
push
sti
sbb
mov
lret
orb
inc
lock
scas
cld
mov
inc
fisubs
rolb
out
xchg
jb
pop
xor
add
mov
out
or
dec
outsb
fadd
xchg
pop
loop
out
jle
or
cmp
pushf
and
jle
add
lahf
xor
lcall
cmp
or
mov
mov
sti
pop
xchg
das
mov
inc
jg
adc
push
xchg
dec
cmc
jns
mov
sbb
enter
leave
aam
in
cli
in
test
sub
fcmove
mov
jp
xor
subb
sbb
ja
cmp
lahf
pop
movl
mov
aad
push
sbb
mov
xorb
movl
aas
fdivl
mov
ljmp
jmp
pop
xchg
in
jecxz
sub
inc
mov
sub
xchg
lea
jmp
test
xor
xchg
adc
arpl
je
out
xchg
addr16
jmp
push
mov
jns
jae
outsb
lea
scas
lods
cmp
test
movsl
call
out
mov
sub
cmp
dec
push
dec
or
or
add
jle
pop
xlat
jmp
ret
jmp
outsb
sbb
lahf
pop
jne
dec
push
pop
push
mov
mov
push
loop
sbb
insl
dec
std
inc
xchg
mov
or
decb
xchg
push
or
xchg
aaa
lock
cmp
mov
dec
inc
mov
and
ljmp
jl
pop
scas
pop
xchg
adc
mov
insl
scas
and
or
imul
pop
fimuls
dec
movsl
xor
inc
mov
mov
loop
or
cltd
cmp
cmp
pop
mov
adc
sbb
xchg
imull
xchg
daa
loop
pop
or
inc
leave
sti
sub
adcl
lret
xchg
jae
xchg
fidivs
mov
jmp
data16
jns
repnz
mov
push
cwtl
lret
popf
xchg
bound
jnp
sahf
das
lds
ret
xchg
arpl
mov
mov
dec
imul
daa
fnsave
ret
aas
xchg
out
es
pop
ret
test
ficoml
gs
sbb
dec
ret
pop
and
mov
ret
popf
lods
js
jge
pop
clc
dec
cmp
xor
sub
cmpsl
call
lret
ss
in
jg
mov
xchg
xlat
sbb
cmpsb
jmp
sbb
mov
cs
or
and
mov
ds
sbb
fcoml
mov
mov
lea
push
mov
xor
dec
and
jge
arpl
cmpsl
adc
es
in
std
push
ds
test
ja
sub
icebp
push
ret
push
ljmp
pusha
shl
js
sbb
hlt
inc
lock
xor
idivb
cmp
sbb
pop
xchg
shld
jge
out
iret
setns
jmp
stos
inc
in
ret
mov
jns
lock
mov
cmp
jne
xor
cld
pushf
cmp
and
test
ja
xchg
andb
pop
xchg
movb
js,pn
xchg
mov
outsb
popa
bound
jle,pt
push
subb
cmpsb
pushl
pushf
fucomp
cmpsb
mov
int
scas
dec
xchg
add
jg
inc
shrl
test
pop
and
repnz
pop
lea
insb
add
arpl
je
les
movsl
imul
shlb
cli
pop
dec
leave
in
mov
aas
xlat
js
ds
test
mov
jge
xor
js
decb
jno
push
lea
mov
sbb
addl
loop
inc
adc
cmpsb
or
cltd
popf
mov
push
cmp
pop
and
xchg
jle
adc
pop
test
xchg
push
push
arpl
cmc
push
or
mov
xchg
sub
test
lahf
jg
inc
pop
push
xor
sub
inc
push
or
xchg
fisubs
cmp
adc
imul
push
cmpsl
xor
jle
imul
jge
mov
subb
hlt
int
cmp
inc
mov
mov
loopne
dec
mov
mov
jl
in
inc
and
das
into
pop
add
lcall
xchg
daa
movsb
or
pop
and
ret
dec
dec
test
cmpsl
xor
add
mov
ss
in
sbb
in
push
dec
inc
stos
leave
test
inc
push
pop
inc
jmp
pop
xor
mov
mov
adc
jnp
sarb
adcl
adc
lea
jl
popf
fisttpll
sub
inc
pop
js
fs
ss
aam
and
pop
sbbb
pop
pop
and
std
adc
es
dec
aad
xchg
pop
loop
stos
loopne
xchg
add
fmull
mov
cmp
and
xchg
lahf
jae
bound
pop
xchg
clc
stos
push
int3
gs
sub
jmp
out
or
xchg
faddl
mov
test
pushf
mov
mov
xchg
cmp
cmpsb
cwtl
or
pop
movsl
cmpl
cltd
cmp
and
lods
cmp
loope
shlb
xor
pop
jle
jmp
mov
dec
scas
push
cwtl
enter
rorb
imul
adc
mov
jb
stos
mov
pop
maxps
or
ret
lret
and
xor
frstor
data16
fisubs
mov
cmpsl
sbb
add
inc
leave
gs
movsw
adcb
lret
ret
mov
les
xchg
or
fwait
mov
jae
outsb
jns
lret
xchg
cmc
pop
test
add
xchg
sub
pop
jne
stos
sbb
fimuls
stos
pushf
sti
inc
sub
mov
and
jb
shlb
test
imul
adcb
dec
out
sbbb
inc
in
js
adc
dec
pop
dec
test
sbb
or
dec
and
mov
mov
imul
sbb
jo
addr16
cmp
push
leave
cwtl
imul
sbb
stc
push
cmp
mov
js
stc
out
pop
cmp
cmpsb
xchg
into
xchg
std
stc
jl
jge
inc
jle
fwait
jne
mov
mov
inc
or
test
xchg
lock
dec
subb
add
cmpsb
lock
and
jbe
add
gs
sub
xchg
popa
inc
mov
xchg
cmpsl
adc
push
lds
push
movsl
add
imul
cltd
jns
sub
mov
add
mov
pop
and
testb
jp
mov
fsub
insb
jae
and
out
xor
cs
aam
fwait
lods
pop
cmpsb
and
int3
add
lahf
push
add
fistps
jbe
ret
bound
out
dec
icebp
popf
sub
scas
xchg
test
loope
jo
lret
pop
sub
cld
movsb
jl
push
mov
dec
cmc
pop
shr
inc
jl
adc
lahf
push
int
insb
stos
subl
insl
repnz
shr
cmpsl
popf
sub
test
subb
sub
test
sbb
sub
mov
lahf
scas
mov
dec
and
mov
xor
xchg
mov
and
push
std
inc
cmp
mov
cli
xlat
sbb
sub
xchg
mov
test
mov
jne
pop
cmp
pop
loop
inc
push
push
push
xchg
cmovle
into
add
scas
mov
inc
gs
out
inc
adc
loopne
fwait
sbb
cmpsb
lea
or
jl
into
lds
loopne
xchg
insb
aad
adc
les
mov
stos
sub
ret
outsl
rcrb
stos
cwtl
jg
popf
push
scas
add
stc
iret
pop
adc
pop
ret
iret
mov
cmpsb
nop
bound
pop
ds
and
in
cmc
adc
inc
fsubrp
loopne
adc
shrb
lahf
push
mov
push
inc
or
pusha
pop
push
ja
and
inc
mov
nopl
fwait
test
out
jp
jg
lret
jnp
jge
push
fnstsw
ljmp
roll
and
dec
and
test
insl
adc
sub
aas
push
mov
adc
jmp
loopne
sbbb
dec
pop
mov
adc
mov
jne
push
push
test
dec
dec
push
ret
xchg
into
mov
xchg
push
sbb
pop
sti
mov
mov
cli
mov
or
in
push
mov
push
jns
ds
ficoml
imul
out
pop
mov
pop
dec
fistpl
test
decl
dec
out
fwait
mov
stos
outsb
test
scas
movsb
lcall
jecxz
mov
pop
daa
jne
lcall
mov
push
mov
or
inc
lea
mov
xchg
sarb
aas
xchg
jl
bound
or
scas
into
xchg
divl
mov
sar
mov
push
jo
jl
and
gs
jmp
jmp
es
and
mov
inc
mov
sbb
ss
jge
xchg
dec
ss
in
sub
cmpsb
mov
jmp
test
cmp
popf
sub
and
rol
in
push
dec
mov
jmp
arpl
mov
pusha
addl
outsb
mov
and
pop
iret
mov
xor
and
aad
jmp
push
and
add
repnz
sbb
iret
sarl
in
cltd
out
sub
out
pushf
lds
orb
push
pop
add
loop
dec
std
xchg
xor
ret
inc
cmp
inc
test
mov
dec
pop
add
xor
mov
in
test
inc
xor
arpl
jge
jbe
push
rcll
shll
insb
icebp
aas
lret
rcr
inc
mov
mov
idivb
ficomps
or
jb
out
in
stos
push
push
pushf
push
dec
mov
repnz
test
addb
les
filds
mov
call
push
pop
je
push
mov
fsubrs
cmc
arpl
outsb
ror
inc
xor
hlt
push
imul
test
sti
push
out
cmp
cmp
jbe
outsl
and
push
push
jo
inc
mov
mov
cmc
mov
fs
mov
out
out
rcrb
ud0
sbb
xchg
cmp
xchg
pop
lock
sub
and
dec
lea
mov
pop
dec
pop
jno
dec
or
sbb
ja
dec
mov
mov
outsl
cmp
ja
cmp
push
push
fdivrs
es
es
lea
dec
inc
push
movsl
lret
movsl
and
cmp
push
jge
jp
inc
add
cmp
jle
pop
jge
sbb
popf
xchg
push
inc
jo
xchg
out
jg
out
jbe
pushf
int
push
mov
out
mov
das
insl
jl
push
andb
pop
sub
cs
xchg
mov
fcomps
fsts
lds
adc
pop
mov
nop
xchg
pop
andl
jp
sub
scas
iret
inc
cmpsl
xor
push
lds
stc
fwait
xchg
inc
sarl
push
lods
fs
std
fnstcw
jle
in
xor
fistpl
xchg
ret
mov
das
lret
pop
arpl
xor
testb
scas
jle
cmpsb
int3
fsubs
dec
stos
pop
int3
fs
cmpsl
add
iret
inc
add
or
movsb
dec
xchg
aad
lahf
icebp
pusha
ds
mov
in
sub
cmp
fnstenv
jmp
pop
xchg
cmp
pop
ja
insl
xchg
stos
out
cmp
mov
ret
jge
std
decb
and
sbb
popf
jl
push
mov
mov
je
mov
imul
cmc
mov
divl
inc
inc
arpl
data16
push
adc
mov
enter
mov
stc
scas
fstps
lahf
rcrb
jge
cmp
icebp
ret
jle
pop
addr16
adcb
and
popf
outsb
sbb
popf
jmp
pop
stos
adc
pop
data16
and
and
adc
mov
jne
push
icebp
cwtl
inc
sub
jns
pusha
sub
dec
hlt
dec
loopne
mov
push
jne
push
xchg
inc
gs
xchg
aaa
dec
out
rorb
js
test
in
jmp
xchg
fbld
out
hlt
adc
decl
inc
rolb
mov
rorb
std
xchg
and
push
mov
mov
sub
jle
enter
xor
push
lea
xor
lds
test
pop
pop
mov
mov
fidivrs
xor
mov
dec
adc
mov
gs
cmp
jmp
dec
out
pusha
sarl
xchg
loope
pop
les
out
negl
loope
in
sbb
sahf
or
insl
js
dec
jmp
fcmove
in
das
cmp
rol
sbb
and
testl
xchg
adc
mov
cmc
add
popl
dec
fs
popa
jne
les
sub
mov
inc
test
int3
mov
leave
pop
dec
test
pop
aas
mov
pop
mov
add
pop
mov
adc
hlt
fstpl
gs
sub
in
fmuls
adc
sub
pushl
jg
jae
jge
addr16
bound
dec
inc
enter
scas
and
std
rclb
mov
inc
cmp
mov
cld
and
mov
mov
movsl
int3
push
addr16
xchg
push
rcrb
je
inc
inc
sbb
lds
pop
insb
cmc
fbstp
mov
jmp
and
fsts
pushw
fisttps
popa
lret
insl
jne
push
fbstp
sub
jne
shll
mov
pop
lds
adc
and
or
int3
stc
inc
lret
mov
dec
aam
mov
lock
ret
daa
insb
adc
pop
sub
push
dec
imul
xor
negl
cmc
xlat
mov
sub
pop
ljmp
and
and
adc
sbb
add
orl
pushf
notb
maskmovq
idivl
push
sub
addr16
clc
fdivrs
mov
scas
imul
xor
xchg
enter
xlat
bound
call
xchg
test
fildll
add
pushf
sub
test
adc
adc
ret
inc
ja
push
xchg
xor
and
faddp
cmpb
sbb
stos
and
and
stc
shrl
add
push
call
fcomip
push
rorb
ret
lret
fcoml
testl
gs
out
dec
jno
xchg
lea
pop
mov
sbb
ss
cli
test
out
xor
push
test
sbb
outsl
icebp
out
cmp
mov
mov
lds
dec
or
xadd
adc
sbb
mov
mov
aad
xor
lock
push
push
push
iret
mov
mulb
jno
sub
cmp
cmp
loop
loope
imul
sub
enter
mov
js
pusha
and
inc
int3
cmp
mov
and
pushf
incl
adc
push
loopne
jae
loopne
jge
jns
sbb
inc
sbb
orl
daa
inc
pop
xlat
mov
aas
xchg
out
imul
or
jp
push
filds
cmpsl
dec
sbb
dec
dec
dec
dec
xchg
xchg
pop
outsl
push
mov
sub
rcrl
inc
sub
insl
sbb
push
xlat
test
loope
ret
jmp
cmp
mov
ret
cwtl
mov
xlat
sub
pusha
push
outsb
push
jmp
into
mov
jno
sti
mov
nop
mov
repz
jae
xor
and
jl
or
fildl
clc
pop
dec
dec
pushf
sbb
inc
jae
mov
inc
inc
aad
lea
push
xor
and
add
push
dec
daa
fcomps
hlt
cltd
mov
or
mov
inc
jnp
or
xchg
mov
repnz
jnp
std
xchg
andb
sub
mov
fnstenv
lahf
out
xor
ljmp
imul
aas
push
jmp
dec
or
aam
pusha
pop
fisubl
arpl
arpl
in
add
sbb
les
loope
mov
or
sub
mov
movl
sub
stc
xor
test
call
out
pop
mov
clc
sub
mov
cs
push
fistl
das
scas
testb
das
lds
iret
das
lret
adc
repz
sbb
sti
mov
cmp
jecxz
or
incl
dec
out
out
imul
cld
repnz
mov
add
in
cmp
cld
and
jecxz
xchg
cmp
inc
pop
mov
fnsave
mov
and
int
pop
mov
push
or
push
addb
leave
dec
push
mov
lods
aaa
mov
mov
insb
or
outsl
dec
pushf
sub
lea
mov
dec
in
jae
ret
outsl
stc
lea
fsubrs
ds
insl
iret
aaa
movsb
lcall
fstp
lods
push
mov
jl
cmp
push
xor
adc
cs
dec
in
or
mov
cwtl
cltd
push
in
fxch
daa
movsl
clc
fsubrl
mov
sbb
and
mov
xor
cmp
outsl
lret
cmp
lock
outsb
cld
fiaddl
inc
mov
add
sbb
mov
addl
ja
pop
scas
aam
push
xchg
shrl
imul
lahf
cmpsl
movsl
pop
pop
into
movsl
jo
fmull
push
in
sarb
adc
sbb
xchg
dec
test
stc
lcall
xchg
dec
cmpsb
and
fnstsw
cmc
cmp
js
adc
popf
mov
cld
cmp
loope
cmp
ret
cld
inc
repnz
jmp
xor
jae
add
mov
test
push
ja
mov
mov
pop
sahf
and
or
and
push
fwait
stc
pop
out
divl
push
bound
adc
ret
data16
xchg
sbb
mov
out
push
mov
cs
stos
sbb
xor
leave
xchg
repz
mov
in
inc
cmp
movsb
or
mov
cmp
jge
test
pop
inc
icebp
pop
xor
stos
xor
mov
ret
lcall
mov
pop
push
mov
inc
lcall
pop
or
xchg
sbb
outsb
std
js
rolb
pop
fsubl
xlat
ss
mov
push
stos
adc
cmp
inc
sar
or
dec
dec
fstps
icebp
or
rorb
sbb
repz
cmova
pop
add
adc
daa
jae
int3
aas
or
jo
mov
std
outsl
push
cli
pop
pop
movsl
add
aas
sbb
test
pop
mov
adc
pop
sub
lds
mov
cmpsb
cmp
inc
add
outsb
sbb
fsubrp
cmp
mov
movsl
xchg
aaa
sbb
popf
sahf
sub
in
test
mov
loop,pn
imul
fimull
rolb
repnz
jl
sub
ljmp
loope
fldl
mov
xchg
add
mov
stos
aam
mov
xor
inc
lahf
xchg
push
daa
xchg
and
fldl
insl
dec
sub
pop
movsb
stos
mov
pop
dec
mov
mov
bound
das
outsb
inc
push
rcr
mov
imul
ret
push
mov
fnstenv
les
mov
fiaddl
pop
orb
shlb
mov
lcall
inc
aam
sbbl
mov
aaa
mov
and
xchg
pop
lahf
fs
and
fcoml
ret
push
lods
lcall
or
jnp
or
call
cmp
out
xlat
and
fadd
add
shll
scas
sbb
mov
sahf
or
push
dec
movsb
mov
xorb
sub
fcomip
clc
psllq
jg
dec
mov
das
fwait
inc
xchg
int3
or
add
mov
xlat
repnz
sti
mov
jmp
scas
lcall
push
aad
jo
aam
in
aam
and
test
mov
mov
hlt
mov
loop
or
adc
rorl
das
fs
sub
dec
or
or
aas
shl
aaa
push
mov
adc
jno
add
cmp
mov
ds
lret
cmp
jle
cmp
or
mov
fstps
fsubl
ljmp
xor
rcrb
mov
or
insl
fcmove
js
cltd
add
and
aam
sbb
insl
or
fisubl
movsl
int
mov
push
in
dec
pop
cmpl
sub
sub
mov
ds
jecxz
or
xchg
xor
xchg
das
out
sar
in
mov
cltd
repz
pop
pop
out
mov
aam
pop
stos
mov
jecxz
divb
jno
mov
mov
push
inc
lret
mov
repnz
movsl
pushf
dec
sbb
cmp
movsl
call
mov
sbb
push
imul
fwait
jo
xlat
mov
int
push
lock
mov
pop
mov
pop
fdivrs
shrb
lret
push
mov
aas
cmp
jns
sub
jmp
fisubrs
inc
test
nop
jo
push
fwait
lret
into
xchg
rolb
test
lahf
or
pusha
jo
out
cli
shrl
lret
pop
mov
push
repz
addl
nop
lods
je
inc
repz
or
scas
test
pushf
mov
sub
dec
push
test
ficomps
int3
mov
out
dec
popf
test
fwait
mov
push
mov
and
insl
hlt
cmp
leave
aad
ja
test
insb
scas
int
xchg
pop
or
into
insl
inc
cmpl
add
push
mov
sub
sub
ret
push
jb
and
subl
inc
negl
insl
test
pop
mov
inc
sbb
out
test
loope
mov
scas
scas
fistpl
adc
out
sti
mov
mov
in
mov
mov
aaa
in
fisttpl
lahf
or
lea
pop
setns
cld
mov
pop
int3
adc
lds
imull
pop
cmp
mov
dec
ret
outsb
idivb
test
adc
popf
inc
repz
mov
aaa
das
movsl
cmp
mov
int3
gs
mov
repz
mov
ljmp
pop
sbb
aad
cwtl
xchg
inc
mov
sub
push
pop
mov
xor
fwait
cmc
xlat
scas
ds
inc
push
push
loop
mov
sbb
adc
mov
arpl
std
outsl
jnp
lds
les
out
sbb
inc
xor
pop
iret
adc
in
loop
rcll
out
sub
inc
fwait
scas
push
mov
lahf
push
rorb
enter
scas
jns
into
mov
mov
xor
dec
jecxz
sbb
push
loop
mov
mov
inc
mov
mov
in
cmp
rorb
lods
sub
lea
mov
add
aaa
and
lods
bound
das
sahf
pushf
fs
fstl
mov
push
jmp
mov
add
rcr
mov
add
fstps
aaa
fcomps
pop
push
xor
xor
icebp
mov
xchg
xchg
lea
pop
ljmp
addr16
addr16
cmpsb
jae
cmc
pop
inc
out
jae
repnz
in
addr16
outsb
fmull
scas
dec
out
xor
inc
mov
sub
aaa
and
popf
mov
ret
outsl
aaa
sbb
jg
jecxz
sub
rcll
xchg
xor
aam
lahf
movsl
lock
or
sub
repnz
add
dec
mov
mov
mov
pop
enter
and
out
jbe
push
mov
cmp
insb
xor
xor
in
int3
inc
jo
xor
dec
mov
jle
xchg
push
push
and
inc
adc
cmp
cli
popf
fs
ret
sahf
rolb
les
mov
movsb
mov
or
js
inc
mov
sub
push
ror
in
stos
sub
daa
lret
xchg
call
mov
cmpsb
lahf
icebp
mov
mov
pusha
arpl
mov
scas
mov
test
dec
or
shl
stc
in
out
or
cmp
or
rorl
lcall
lahf
les
les
cltd
or
movsl
in
inc
movsl
push
xor
dec
cltd
call
adc
dec
jg
gs
lock
lods
sbb
or
in
mov
lea
ret
xchg
fldcw
adc
loop
in
inc
arpl
sub
mov
mov
addr16
jmp
outsl
clc
shrl
les
test
or
jle
mov
xorl
outsl
lods
ss
adc
mov
ja
pushf
pop
movsl
dec
jne
rolb
mov
push
test
sbb
sbb
fisubrl
test
or
ret
add
test
std
call
push
jge
push
adc
mov
orb
adc
popf
mov
stc
inc
dec
cs
repnz
cmpsb
shl
insb
jmp
test
and
stos
sbb
cmpl
or
jne
rcrl
nop
mov
mov
mov
insb
and
add
add
cmp
arpl
mov
test
in
flds
cmp
ror
add
and
pop
mov
mov
rolb
fcmovu
xchg
adc
inc
push
cltd
xchg
out
pop
jle
shrb
sbb
in
xlat
mov
in
sub
sbb
das
lret
notl
dec
cmp
adc
and
or
mov
test
fdivrl
cmpsl
xchg
fisubrs
mov
movsb
mov
ret
mov
sbb
cmc
aaa
sbbb
cmc
adc
divb
test
mov
jnp
leave
psubusw
push
jmp
dec
fisubl
mov
pop
out
lcall
xchg
fldl
jle
adc
addr16
or
mov
ret
xor
iret
andl
jb
stc
loope
inc
mov
cmc
in
jo
lds
bound
dec
adc
cmp
or
repnz
jae
inc
jl
dec
ficoms
mov
mov
dec
ss
adc
out
jg
xor
fildll
sub
inc
mov
mov
mov
fcomps
and
xlat
cld
cmp
fldt
in
mov
nop
out
and
mov
jo
loopne
push
mov
push
and
out
mov
push
mov
cmpsl
push
jbe
imul
mulb
cltd
sbbb
cmp
pop
loopne
mov
inc
rcrb
stos
push
loop
push
popa
imul
jl
mov
jecxz
test
test
loope
clc
je
mov
xchg
add
jle
leave
je
div
sbb
dec
or
rorb
arpl
aad
insb
push
jle
pushf
mov
xor
mov
mov
dec
in
addr16
negb
push
ret
mov
dec
add
stos
add
xlat
fstpt
insl
inc
cmc
push
fcomps
xchg
adc
and
rcrb
cmp
stc
movsl
sahf
ret
nop
int3
xchg
inc
test
and
adc
jl
pusha
in
test
cmp
mov
xchg
loope
cmp
jmp
mov
scas
sbb
cmpsl
dec
cld
xor
pusha
pop
lret
add
sbb
mov
stos
or
daa
adc
push
cli
fstpl
push
cmpsl
andl
nop
jge
dec
ja
negb
insl
jo
nop
adc
ja
test
mov
xor
repz
cmpsb
movsl
mov
or
push
mov
or
xor
pop
push
es
aaa
xchg
lahf
fidivrs
pop
mov
mov
sbb
mov
and
addr16
js
sub
cmpsb
lcall
subb
and
outsb
fbld
adc
xor
pop
xor
mov
xor
push
mov
and
and
loope
in
lods
sbb
lock
es
jnp
into
movsl
inc
call
mov
lods
addb
cmpb
pop
xchg
and
push
mov
aad
sbb
dec
mov
and
fldcw
dec
fistpl
adc
or
imul
push
movsb
daa
mov
mov
sti
insb
in
scas
inc
shrl
in
stos
out
insb
push
mov
out
cmpb
cwtl
sarl
mov
shl
shrl
xor
sbb
lds
aad
cmpsb
outsb
mov
xor
xchg
sub
mov
les
pushf
push
pusha
lds
dec
out
xchg
cmpsb
or
add
sbb
insb
test
mov
lods
pop
inc
xchg
fs
pop
ss
sub
iret
sbb
push
testb
dec
cs
xor
cmc
lea
int3
and
mov
push
lcall
cmp
out
pusha
fildll
jbe
negb
mov
fwait
sbb
sbb
sbb
test
icebp
lea
mov
inc
cmp
mov
lods
jo,pt
mov
xchg
test
mov
pushl
push
test
fdivl
sbb
sbb
pop
fs
mov
in
sbb
push
mov
repnz
xchg
pop
pop
fistps
inc
mov
in
mov
cs
das
movsl
jno
xor
jle
mov
dec
test
dec
and
fsts
cmpsl
jl
in
insl
fcomps
xor
jns
lods
mov
test
testb
lods
cmpsl
flds
pop
shl
inc
loopne
cmpsb
sub
mov
and
ja
cmpsl
dec
insl
dec
or
and
scas
data16
dec
sub
fs
mov
pop
jge
repnz
into
add
imul
sub
mov
inc
dec
test
fs
sub
iret
shrb
lahf
or
dec
movsb
sub
or
sbb
insb
cltd
pusha
icebp
xchg
adc
and
fs
out
cwtl
data16
jns
mov
test
data16
popf
cmp
cmp
loop
add
punpcklbw
adc
push
pop
bound
inc
mov
fimuls
dec
insb
adc
adc
cld
aaa
xchg
mov
dec
rolb
insb
lds
mov
aam
mov
cmp
lret
add
cs
js
pop
inc
xor
ja
dec
lahf
mov
in
push
jns
xor
xchg
lret
pop
in
out
test
lock
push
inc
das
je
xor
lretw
ret
lods
xchg
sbb
xchg
mov
hlt
mov
cwtl
js
mov
xor
or
jp
jmp
push
sahf
sub
push
cltd
mov
mov
daa
stos
test
dec
sub
push
ja
mov
insb
mov
stos
movsb
stos
dec
lcall
stos
cwtl
repnz
movl
cmp
jmp
cmpsb
call
fildll
mov
jne
popl
out
jb
enter
cltd
xor
cmpsb
icebp
push
sahf
adcl
out
adc
adc
xchg
mov
pushf
pop
js
js
adc
pop
mov
jge
push
mov
mov
cmp
insl
imul
sbb
pushf
inc
fimull
and
add
mov
pop
je
test
dec
mov
ficompl
xchg
sub
sbb
pop
shlb
pop
pop
jne
pop
mov
add
jae
sbb
and
fsub
lcall
stos
inc
ret
fsub
adc
push
jmp
xchg
or
mov
scas
adc
out
hlt
push
adc
popa
jnp
mov
fwait
dec
jb
int
xor
add
loopne
test
das
dec
push
movsb
orl
data16
fmul
xchg
dec
xor
fisubrs
ljmp
std
cwtl
test
sbb
loopne
mov
inc
mov
mov
add
je
imull
jno
les
dec
inc
call
mov
mov
loopne
mov
sahf
push
pop
push
pushf
jmp
imul
dec
dec
inc
lods
int
lods
sub
rcr
jae
adc
ret
xor
inc
mov
adc
inc
push
inc
sbb
xor
in
test
repz
loop
or
mov
dec
inc
pop
ds
pop
jle
mov
in
jne
scas
sub
dec
mov
lods
dec
mov
inc
mov
inc
sbbb
pop
repz
pop
xchg
js
jg
xor
add
out
rcrb
xchg
jp
cli
aam
jg
call
sub
xchg
mov
lock
push
lea
cmp
jmp
arpl
cs
lret
into
cs
out
es
dec
pop
mov
add
push
out
popa
jecxz
or
inc
in
mov
leave
adc
lcall
insl
repnz
mov
xor
cmp
cmp
enter
imul
jle
inc
repnz
pop
mov
outsl
push
adc
or
stos
call
sbb
incb
sbb
shlb
push
icebp
imul
call
test
adc
insb
bound
mov
out
cmp
jecxz
lret
xor
dec
xlat
movb
sub
fisttpll
addl
push
daa
ljmp
pop
adc
or
mov
mov
iret
push
mov
lahf
cmc
mov
push
inc
outsl
aad
popw
ljmp
in
pushf
mov
mov
mov
popl
pop
xchg
jo
scas
test
mov
dec
jecxz
xchg
into
int
outsb
imul
inc
sbb
adc
mov
aas
lds
xor
mov
push
jge
jb
xchg
cmp
dec
shlb
cmpsb
mov
mov
lods
mov
jb
xchg
cwtl
loopne
mov
cld
mov
stos
pop
cwtl
mov
stc
movsl
cmp
sub
inc
sub
pop
jb
add
mov
lock
mov
insl
mov
mov
sarb
xor
lcall
pop
aad
lahf
adc
jecxz
add
lahf
mov
lret
jmp
test
inc
stos
mov
fcomps
iret
add
and
and
das
jl
xor
mov
in
mov
loopne
popf
ret
ja
cli
scas
lds
loopne
jbe
pop
imul
addr16
movsb
cmp
and
xchg
outsb
jg
jge
jmp
inc
cltd
imul
xchg
sarb
sbb
ss
icebp
out
insb
rcrb
mov
adc
push
inc
negb
pop
cs
xchg
pusha
pop
ficoml
cli
inc
and
rcll
out
dec
inc
ljmp
sbb
mov
jmp
sbb
xor
mov
ljmp
xchg
popf
lret
gs
xchg
mov
push
push
cmpsl
ljmp
or
fsubs
fsubrl
shrb
mov
inc
mov
movsb
ljmp
mov
inc
lret
insl
mov
fwait
stos
mov
fstl
inc
mov
pushf
inc
test
scas
add
imul
push
out
fdivp
mov
in
xchg
mov
pop
mov
arpl
insb
repz
imul
sub
fwait
ja
jmp
jb
add
mov
adc
out
jae
in
xor
cmp
xchg
std
sub
mov
test
xchg
call
jne
mov
in
repnz
xchg
icebp
mov
xchg
aad
lods
xor
popf
mov
cmpl
mov
ljmp
add
pop
popf
mov
repz
fcomps
mov
ficompl
add
xchg
xor
fiaddl
jae
mov
jns
push
fld
iret
sti
icebp
loopne
imulb
repnz
cmp
or
out
hlt
mov
imul
scas
mov
pop
cmc
adc
ljmp
add
jg
scas
sub
mov
jbe
cmp
add
popf
mov
sbb
add
jnp
fsubrl
int
sbb
loopne
push
inc
dec
fmul
cmp
cmp
dec
ror
or
add
push
jmp
mov
scas
xor
mov
sub
sub
xlat
mov
das
rcrl
dec
mov
fsubs
xchg
popa
data16
dec
add
adc
xchg
fdiv
icebp
inc
sahf
cmc
leave
insl
and
cmp
ds
jle
push
adc
and
not
jbe
mov
int
jl
jmp
sub
dec
fsubl
leave
lea
imul
inc
int3
popf
test
xchg
xchg
push
sahf
sub
xor
xchg
dec
cmpsb
loopne
or
adc
or
clc
dec
push
dec
mov
or
dec
mov
dec
mov
dec
xchg
cmp
in
sahf
jnp
mov
dec
arpl
lret
pop
lahf
add
push
fldenv
shll
scas
mov
dec
in
cmpl
cld
cmc
sbb
mov
mov
int
pushf
insl
dec
scas
pop
cwtl
ljmp
cmp
push
xor
test
mov
andl
xchg
mov
cmpsb
jle
fiadds
insb
inc
jo
mov
lods
stos
and
adc
fiadds
mov
jmp
fs
or
pop
dec
push
xorl
sahf
or
pop
pop
imul
out
mull
mov
sub
repz
adc
rolb
pop
ljmp
mov
mov
pop
pop
int3
adc
push
mov
cmpsl
mov
xchg
jo
xor
arpl
mov
mov
movsl
aaa
push
mov
fwait
stos
adc
mov
ss
int
dec
outsl
cmpsb
cmp
mov
repz
push
push
pop
pop
pop
and
xor
xor
testl
jb
jle
inc
rcll
outsb
test
xchg
dec
nop
push
hlt
test
fmul
sub
mov
mov
fstl
stos
jl
insl
rcl
js
es
data16
or
and
jnp
stos
cmpsl
sub
xchg
xchg
inc
in
popf
lea
lea
stos
add
clc
sub
ret
pop
lcall
hlt
jae
popf
sbb
shlb
loope
push
ds
dec
andb
jmp
lods
cmc
xlat
inc
scas
in
xchg
cmp
jg
push
mov
push
dec
leave
rcrl
movsl
and
cmp
popl
pop
fwait
add
lret
fldcw
jne
rclb
mov
mov
mov
aaa
cwtl
aam
sub
roll
cmp
sbb
or
and
cmp
sub
inc
pop
push
mov
push
rcr
popf
xchg
jae
ljmp
xor
notl
test
ljmp
add
adc
rclb
daa
or
stos
cli
das
scas
shlb
xchg
ret
cs
data16
xchg
xor
fistl
mov
addl
notb
dec
popf
mov
mov
shr
or
inc
pushf
inc
cmp
mov
dec
inc
sub
mov
adc
das
pop
push
idiv
popf
test
push
push
out
je
bswap
out
pop
nop
or
leave
in
lds
adc
hlt
jl
mov
push
inc
cli
aam
fimull
in
jmp
push
sub
sub
fs
xor
ljmp
ret
xchg
in
add
jle
fsub
push
dec
les
lret
push
push
lea
mov
mov
mov
das
clc
test
stos
jecxz
addr16
scas
lock
mov
aad
jmp
mov
les
xor
jmp
enter
arpl
enter
push
pushf
mov
sub
out
sub
pop
shr
sbb
dec
mov
xorb
adc
pop
int
xor
pop
add
nop
or
inc
jnp
test
dec
dec
xchg
or
and
into
sub
dec
mov
or
adc
leave
push
and
mov
push
test
cmp
aas
fmull
inc
xchg
jb
jae
das
lret
pop
shrl
mov
loope
enter
aam
hlt
adc
mov
lcall
sub
cltd
rcrb
push
popf
lcall
aad
cld
sbb
jo
repnz
ret
leave
xor
dec
insb
ja
mov
dec
ret
mov
xchg
xchg
pop
inc
xchg
jbe
push
arpl
sub
mov
fsubl
xor
add
and
out
stos
enter
rorb
xchg
into
fwait
jns
pop
sub
test
xchg
popf
adc
adc
jl
mov
push
xlat
push
orb
xor
out
fs
xor
mov
dec
pop
adc
mov
fcom
lods
gs
jmp
stc
and
mov
xchg
sti
enter
add
jmp
test
push
ja
mov
mov
jbe
fcompl
jmp
movsb
idiv
jae
lds
fcomi
test
sbb
sub
lea
out
imul
leave
dec
jno
lds
std
xor
lahf
mov
hlt
mov
jmp
insl
lret
mov
pop
stos
fwait
jle
ja
fldt
cwtl
js
push
mov
ror
test
push
sar
mov
mov
jg
icebp
inc
outsl
into
jmp
int3
into
xchg
jmp
rcl
lret
insl
dec
lock
pop
or
ret
dec
sub
push
ss
test
cltd
out
cmpsl
es
mov
cli
or
ret
frstor
stos
arpl
inc
iret
sahf
sbb
shrb
inc
push
jbe
push
in
out
shll
sarl
fildll
stos
pop
mov
mov
out
aad
loop
js
mov
outsb
cmc
sbb
fstps
or
lds
inc
test
dec
jecxz
rclb
mov
jbe
mov
repz
pop
repz
std
in
or
dec
and
call
out
sbb
aam
fildll
sbb
leave
dec
pop
sti
test
push
inc
mov
and
mov
push
and
push
aad
mov
pslld
mov
cld
jg
push
lock
in
lods
imul
adc
xchg
sbb
adc
xchg
cli
aaa
iret
leave
repnz
sub
pop
dec
outsb
in
imulb
xchg
mov
mov
mov
int3
sbbb
aam
stos
dec
int3
adc
rcr
xchg
sub
mov
not
into
sbb
push
sub
ljmp
in
imul
jns
add
push
pop
pusha
neg
outsl
mov
leave
enter
scas
mov
inc
xchg
add
in
out
jno
xlat
mov
iret
pusha
push
mov
int3
push
dec
mul
cmp
in
adc
pushf
in
in
arpl
sbb
or
mov
xchg
test
nop
out
loop
xchg
fwait
cmc
xchg
ret
xchg
shlb
push
in
loope
pop
push
sti
cmpsb
mov
notb
sbb
dec
int
xchg
mov
pop
hlt
mov
adc
jmp
bound
jge
mov
loope
jecxz
lcall
insb
add
jmp
push
ret
add
push
das
mov
ds
fiadds
adc
adcb
lahf
xchg
fildll
dec
mov
aaa
lcall
sbb
sub
mov
dec
test
fadd
mov
jmp
mov
cmp
dec
mov
fs
or
ret
jg
scas
negb
jle
push
dec
or
cwtl
outsb
xor
call
dec
xchg
iret
push
jle
pop
ljmp
pop
out
fxch
jns
push
jb
xor
mov
shr
adc
xchg
mov
xchg
lods
mov
out
sub
sti
jle
arpl
jo
mov
cltd
xchg
mov
add
sub
into
adc
iret
fcompl
jne
xchg
sahf
xorl
inc
icebp
loope
dec
inc
push
enter
movsl
mov
xchg
fisttpll
orb
rorb
mov
lock
clc
jmp
xchg
or
sbb
cmpsb
lcall
into
mov
cmp
mov
imul
sahf
mov
dec
scas
mov
andl
jbe
cwtl
int
sub
cmpsl
add
or
cmpl
xchg
call
xchg
adc
jge
jns
sub
dec
jb
popa
add
mov
imul
outsl
xorl
lret
jb
xor
test
jp
shlb
pop
xlat
int3
hlt
data16
jge
mov
add
mov
ret
jo
mov
leave
in
or
movntps
enter
out
push
push
adc
test
dec
test
ud2
cmpl
push
xchg
mov
fnstsw
or
mov
adc
xchg
test
in
sub
stos
cs
enter
mov
into
push
push
inc
in
adc
ss
and
or
fcompl
lea
rorl
nop
sti
push
insl
inc
push
mov
and
dec
sub
stos
and
jbe
fisttpll
jae
dec
cmpb
js
ljmp
xchg
xchg
dec
jmp
add
mov
push
and
mov
lea
mov
stc
cmpsl
les
inc
mov
out
xchg
push
scas
inc
int3
mov
and
dec
mov
pop
dec
sub
dec
mov
adc
lret
mov
pop
ja
jmp
mov
adc
test
in
fs
jg
scas
call
out
int3
dec
cmp
test
sahf
mov
jns
jb
cmp
pop
mov
push
into
lds
pop
popl
sub
cld
pop
dec
aad
pop
xor
lret
cmp
cld
mull
or
jno
dec
fwait
ds
sbb
mov
and
jl
shrb
dec
out
pop
subl
xor
mov
pop
pop
outsb
ss
std
add
nop
mov
btc
aam
sahf
pop
aad
xchg
inc
lret
cmpsb
int3
mov
cmp
sbb
jecxz
test
pop
and
mov
loop
cmp
fcomps
cmpsb
mov
dec
adc
xor
adc
xlat
leave
test
in
dec
and
cs
test
pop
cmp
cmc
xchg
pop
sub
jmp
cwtl
aam
aad
sbb
sub
push
daa
pop
aas
jb
xchg
test
ljmp
mov
mov
push
inc
loopne
sbb
into
mov
lock
dec
adc
incl
sbb
imul
das
dec
rcrl
add
xor
fsub
outsl
daa
hlt
shll
sti
inc
pop
fidivs
and
mov
fsts
je
popa
repz
jle
pop
cld
push
addr16
dec
test
sbb
sahf
lea
mul
and
pusha
movsl
mov
ficoms
add
dec
cltd
negb
cmpsb
and
sub
mov
adc
mov
lock
std
mov
dec
loop
mov
inc
testb
jg
insl
aad
stc
push
es
cmpsl
xor
mov
cmp
repnz
jbe
mov
inc
pop
lea
insl
mov
mov
jo
sub
pop
push
pusha
mov
stc
cmp
jmp
mov
mov
rorb
jmp
dec
jae
sti
scas
shlb
repnz
xchg
xor
inc
dec
xchg
inc
lcall
shrl
fsubl
mov
xchg
cmp
imul
std
test
dec
hlt
mov
jno
adc
pop
dec
push
addb
int
mov
pusha
rorl
popf
dec
data16
insl
sub
in
leave
outsl
out
mov
cmp
ss
adc
loope
pop
lock
inc
cmp
xor
test
cmp
leave
and
bound
mov
scas
popf
sub
out
stos
aaa
lods
out
inc
mov
repnz
sbb
push
jmp
imul
out
jl
popa
test
xor
lods
arpl
add
stos
cwtl
les
sub
push
cmp
sub
mov
out
shrl
sbb
lods
lahf
mov
xchg
stos
jbe
mov
mov
int3
pop
mov
es
repnz
jmp
das
push
cmc
sti
inc
add
inc
out
das
jno
jp
mov
add
pop
fstpt
rorl
inc
sub
scas
inc
cwtl
and
int
fistpl
lds
sbb
inc
fdivr
add
fst
lahf
cmp
fsub
ds
cli
daa
out
aad
inc
icebp
push
fs
cmc
dec
aaa
cwtl
fwait
lds
cmp
pop
push
stos
jecxz
mov
xchg
mov
pop
sub
adc
iret
fiadds
dec
dec
hlt
lods
push
cmpsl
push
dec
ds
repnz
in
fbstp
mov
mov
adc
or
cltd
sub
lds
sub
push
pop
jns
xor
es
add
cs
mov
xor
sbb
dec
jbe
sar
mov
out
dec
push
pusha
out
fidivs
popa
xchg
xchg
lods
jmp
test
popf
pop
or
inc
push
outsl
mov
adc
fcompl
push
mov
pop
int
adc
push
ss
jecxz
cmp
ficoms
push
adc
mov
inc
inc
icebp
pop
clc
sub
sbb
mov
jge
cmp
das
cmp
in
stc
daa
add
mov
hlt
je
jle
jg
ja
cltd
push
mov
pop
mov
rcrl
push
pusha
int
or
xchg
outsb
lds
push
xor
mov
xor
mov
pop
xchg
xor
out
cmp
int
cmpsb
movsl
mov
sub
fmull
inc
xchg
cwtl
imul
fs
mov
dec
inc
inc
incl
stos
data16
push
divb
lret
sahf
xlat
inc
lea
bound
rclb
ret
in
mov
cld
in
jmp
mov
ret
mov
add
imul
in
mov
jbe
popf
scas
adc
fistps
cltd
add
popf
xor
xor
adcb
popf
scas
pusha
ja
ret
sarl
jo
mov
sub
in
jmp
dec
in
mov
aam
loop
jp
and
imul
lahf
imul
scas
popf
sub
cmpsl
fmul
lahf
mov
into
mov
xchg
loop
fwait
int3
rclb
pop
popa
cltd
mov
and
push
pop
out
inc
mov
in
imul
daa
xor
movsl
loop
cld
in
mov
inc
mov
sub
add
cs
dec
xor
test
jle
subb
add
lret
sbb
aaa
sub
lock
jae
fildll
in
test
lret
out
adc
pop
les
mov
setp
push
sbb
xor
and
rorl
cmp
insb
ret
mov
mov
stos
and
popa
pop
outsb
pop
aas
in
jecxz
inc
mov
cvtps2pd
pop
mov
pop
stc
mov
push
xor
jp
es
ljmp
aaa
lods
imul
xchg
add
mov
adc
cmp
inc
mov
sub
sub
sbb
mov
sbb
outsl
sub
ret
and
int
push
fs
dec
jg
roll
xor
repz
xor
test
sub
shl
jp
mov
pop
pop
aas
or
sub
insb
imul
fisttpll
sbb
jnp
inc
data16
xchg
push
mov
cmc
add
and
pop
enter
adc
jno
daa
sbb
int
jb
arpl
sar
jb
cli
cmp
mov
sbb
pusha
mov
lock
push
test
aam
jle
xchg
push
mov
jnp
adc
fnsave
cmpsl
xchg
adcl
mov
mov
popf
push
hlt
icebp
rcll
iret
cmp
nop
mov
mov
in
push
jmp
fsubp
ljmp
jge
mov
cmp
fstps
jo
jnp
fldt
in
test
mov
adc
insb
cmp
pop
mov
xor
rcr
and
inc
ds
iret
jo
int3
xor
ror
add
ljmp
mov
fnstenv
jg
cli
popa
cmpsl
jge
mov
mov
dec
in
mov
adc
pop
cmp
adc
cmp
lea
xchg
aas
mov
sar
and
fidivrs
push
sbb
rolb
lret
out
cli
les
mov
loope
scas
insb
jmp
xchg
or
xlat
xlat
mov
adc
imul
inc
push
pop
dec
jnp
hlt
ss
mov
push
add
and
jl
and
rcrb
ror
or
andb
fcomip
inc
cli
je
dec
out
xchg
aas
ljmp
mov
stos
sahf
mov
js
sti
dec
decb
jae
mov
xor
insl
pop
sbbl
stos
xchg
xchg
leave
sbbb
cs
and
or
fisubrl
ja
cmp
push
xor
and
push
lock
sub
xchg
test
je
aad
xchg
sbb
aam
jo
sarl
outsb
or
clc
lods
fimuls
rep
out
test
cmp
pop
data16
das
xor
scas
test
adc
cli
jno
fisubs
xchg
imul
jbe
or
sub
sti
mov
xchg
push
pop
in
jmp
sarl
arpl
mov
dec
dec
dec
test
outsb
sbb
dec
push
ret
fists
iret
and
bound
pushf
mov
fstl
jl
push
cmpsl
sbb
arpl
or
loopne
lds
adc
xor
mov
scas
mov
pusha
mov
popf
pop
xor
nop
mov
jae
or
sti
mov
inc
push
jo
jbe
push
mov
int
bound
imul
fwait
insb
cmc
inc
push
mov
jmp
xlat
dec
out
rep
jle
xchg
inc
sti
rcr
mov
negl
mov
sahf
pop
dec
out
xchg
mov
aad
aam
pushf
mov
sahf
xchg
leave
inc
lahf
add
shlb
js
pop
inc
and
xchg
dec
mov
and
push
shlb
xchg
push
stos
movsl
jno
pushf
pop
lret
mov
jg
xor
cltd
cmp
pop
inc
lods
neg
dec
xchg
std
mov
ds
cmovnp
mov
int
pop
pop
adc
sbb
cmp
adc
mov
pop
push
frstor
rcll
in
mov
or
fs
pop
sub
sbb
dec
ss
nop
call
loop
or
sbb
dec
cmpsb
fs
bound
sti
xchg
jl
fldl
add
pop
pop
test
jecxz
adc
or
test
adc
fadd
jp,pn
push
mov
and
xchg
add
xchg
jbe
pop
push
or
inc
test
lods
lret
adc
add
ljmp
cmp
pop
jbe
data16
mov
in
cmpsb
mov
loopne
outsl
push
adc
cltd
ljmp
mov
push
lret
jle
ljmp
mov
push
sub
jmp
jg
cmpsl
clc
jge
add
aad
int
lock
jno
insl
mov
dec
cmpsb
rcrb
dec
lds
fwait
sbb
or
xchg
mov
mov
sub
sub
sbb
fnstcw
add
add
stc
lock
inc
inc
xchg
add
jno
nop
sbb
mov
jbe
dec
push
cwtl
testb
scas
dec
gs
ret
xchg
movsl
xchg
push
xchg
loopne
ja
fnstsw
les
xor
mov
jo
imul
fstl
ja
adc
fcmovb
cmp
outsb
lahf
mov
inc
lds
js
add
in
lds
mov
push
dec
mov
mul
mov
dec
mov
or
mov
mov
xor
push
sub
fisubrs
fistpl
mov
out
outsl
mov
scas
mov
mov
out
jmp
movb
jo
in
ss
icebp
jb
mov
into
xchg
sbb
lds
dec
out
push
xor
lods
lock
out
sub
mov
push
lds
cmp
mov
lahf
rcr
aaa
out
loopnew
lods
imull
pusha
jle
jae
andb
dec
addr16
mov
jmp
jno
ret
pop
int3
sub
mov
sub
inc
add
mov
mov
cltd
test
lret
aam
xchg
ja
cmp
loopne
or
mov
push
and
movsl
mov
sub
scas
jns
sub
sub
or
mov
and
add
lock
jno
int3
divl
sbb
jle
cmp
movsl
ja
repz
loopne
mov
jbe
push
mov
pop
ret
fimuls
xorl
mov
inc
adc
pop
jecxz
jg
ret
adc
pop
mov
es
mov
jb
popl
pop
movhps
orb
mov
xorb
fstps
lret
adc
out
lahf
insl
in
inc
out
outsl
jecxz
in
mov
or
test
jg
jb
cmp
adc
stos
fs
jo
sub
minps
dec
pop
pushf
xor
std
scas
sahf
xchg
outsl
sub
repnz
xchg
xchg
pop
scas
testb
out
or
xchg
sbb
add
pusha
push
inc
xchg
push
xchg
sub
rcrl
pop
cmp
fcmovu
outsb
jle
loopne
mov
movb
dec
das
dec
pop
fisttpl
dec
cmp
or
adc
mov
jns
jl
sti
jecxz
lds
and
repz
out
or
dec
pop
fwait
inc
into
shll
flds
mov
push
cmp
mov
inc
jb
jne
cmpb
xlat
cmp
jmp
pop
cld
shll
gs
sti
adc
cltd
jo
movsl
sub
jnp
shl
inc
add
inc
dec
mov
fstl
mov
inc
xlat
xor
jge
andl
adc
lock
test
popa
test
fsubl
push
adc
xor
pop
jmp
nop
popa
neg
push
cltd
in
pop
rcrl
ret
test
decl
les
fnstenv
push
and
insb
lret
pop
das
movsl
insl
jecxz
prefetch
and
out
push
mov
xchg
inc
leave
mov
pop
imul
imul
xchg
or
in
dec
mov
adc
cmp
das
ljmp
mov
cmpsl
or
fs
shlb
imul
and
imul
fists
mulb
dec
orl
add
clc
xor
ja
mov
out
nop
push
jecxz
or
adc
jno
inc
dec
or
jp
adc
call
dec
pop
scas
or
xrelease
push
xchg
fcomps
mov
dec
adc
fnstsw
ret
jno
loope
mov
int3
jbe
dec
push
mov
and
fldl
stc
addl
emms
push
addr16
in
call
mov
or
loopne
mov
ret
sbb
pop
dec
mov
xchg
mov
leave
cmp
lcall
movsl
mov
lea
cmpsl
lret
lds
mov
ja
pop
or
mov
shlb
popf
repnz
ss
mov
addr16
cmp
and
mov
iret
test
cld
sbb
inc
pop
lea
shl
test
adc
lods
scas
hlt
jno
ss
clc
fisubs
push
ret
dec
rcrl
in
inc
sub
mov
inc
push
and
pop
popa
pop
push
mov
ret
xor
ret
fcompl
subb
dec
mov
mov
scas
std
mov
xor
stc
push
jge
xor
les
imul
loope
sbb
jecxz
mov
scas
out
xchg
shlb
jmp
dec
popf
insl
lds
xor
bswap
lret
in
pop
out
ja
xchg
int
addr16
adc
or
fildll
dec
movsb
cmp
dec
push
insb
aas
incb
jbe
xchg
stos
jo
xor
imul
xchg
aad
enter
mov
mov
ss
dec
repnz
fwait
enter
jle
push
negl
movsl
in
rcll
and
push
lcall
fistps
xor
out
ja
sub
push
lahf
push
mov
shrl
pop
mov
or
cmc
test
or
dec
sbbb
enter
add
rcrb
mov
cmp
mov
jle
rorl
adc
lret
lds
std
movsb
fildl
movsl
pop
xchg
pop
mov
and
into
repnz
or
inc
dec
cmp
insb
fildl
mov
jle
mov
and
dec
and
cmp
rorl
fucomi
jmp
cmc
dec
push
test
mov
push
mov
adc
daa
jnp
pop
shl
call
sahf
sub
xchg
pop
xchg
jne
fidivs
mov
xchg
sub
mov
xchg
adc
sahf
popf
sbb
movsl
mov
mov
lds
cmp
sbb
rclb
dec
cltd
push
orb
mov
je
inc
rolb
pop
leave
in
lods
sbb
cwtl
push
int3
mov
jp
fisubs
inc
daa
cmp
ds
in
adcl
popf
sbb
call
sbb
rcrl
mov
cmp
int3
or
sub
sub
mov
jmp
movsl
out
imul
outsl
mov
lret
lahf
dec
xorb
out
in
dec
add
inc
dec
hlt
sub
dec
mov
mov
fisubl
mov
mov
mov
ret
test
std
inc
or
repz
xchg
lret
mov
imull
pop
ss
fists
les
fcompl
fisubs
adc
sbb
sbb
stos
lods
lahf
jmp
add
das
outsl
jmp
dec
cmp
cwtl
aaa
dec
xchg
and
lahf
jae
pop
cmpsb
dec
xchg
cmp
cmpsb
jl
faddl
xchg
test
notl
mov
mov
out
mov
cwtl
and
cmp
das
dec
mov
push
mov
xchg
fdivrp
movsb
out
jmp
mov
xchg
or
inc
hlt
mov
and
das
lcall
add
int3
add
aad
outsl
scas
pop
data16
mov
xchg
and
push
mov
cmp
mov
in
add
out
mov
cmp
mov
rorl
out
add
xchg
fcomip
dec
rolb
push
mov
aas
and
xchg
add
xchg
out
lock
dec
adc
dec
jae
lcall
inc
inc
jl
insl
cltd
in
sub
in
in
mov
jmp
fmul
out
ljmp
data16
in
sub
in
ret
push
icebp
jno
dec
xchg
movsl
or
mov
mov
enter
add
int3
mov
into
test
inc
adc
sub
repnz
outsb
fwait
jno
dec
test
cmpsb
scas
sub
jge
ljmp
mov
cmp
push
jmp
enter
aas
mov
arpl
scas
scas
loop
out
inc
or
clc
add
lret
inc
shrb
dec
mov
jmp
xchg
pop
push
inc
popa
ret
sahf
push
inc
push
mov
sbb
sbb
data16
mov
popf
add
daa
or
int3
sub
movsl
mov
or
test
cmp
or
or
xchg
xchg
je
jmp
cmp
movsb
mov
adc
lods
push
mov
sahf
nop
jmp
jmp
xchg
cld
sbb
out
adc
out
adc
movsl
in
bound
out
xor
sub
shl
or
rolb
ficomps
or
loop
mov
jmp
clc
push
inc
fists
push
nop
push
subl
das
outsb
nop
jae
fldl
imulb
mov
xor
in
loopne
gs
xchg
and
cmc
xchg
or
cmpb
inc
and
scas
jb
sub
lea
andl
fcmovnb
or
cld
xor
out
and
cmpsl
sbb
adc
push
xchg
das
xor
mov
js
lret
jne
and
push
test
cmp
jle
sbb
mov
cmc
mov
in
out
mov
add
add
mov
pop
pushf
mov
inc
xor
test
inc
mov
jns
fucom
mov
xor
test
jge
outsw
jmp
mov
jmp
xchg
cs
int3
fs
sbb
pushf
pop
add
mov
sub
movsl
ljmp
pop
jo
dec
jae
insb
aas
jecxz
std
ss
mov
xchg
sti
cs
les
cmp
fisubrl
idivb
add
es
imul
fildll
xchg
mov
outsl
xchg
cwtl
or
popa
jb
cli
mov
das
mov
lods
cmp
fstl
pxor
test
xchg
push
sbbl
push
cmpsl
cmp
cltd
int3
js
add
fldl
xor
xchg
sbb
lds
insl
stos
aad
lahf
pop
stos
xchg
push
test
adc
push
or
and
rorl
mov
xchg
add
test
cmpsb
cwtl
jmp
mov
jl
stc
pop
fistps
pop
mov
cmp
stc
sub
add
int
jbe
mov
jmp
cmpsl
sub
repnz
xlat
xor
jmp
daa
in
jecxz
jae
fwait
mov
and
add
add
iret
sbb
cwtl
mov
pop
in
mov
sbb
adc
lcall
jmp
jecxz
mov
push
push
fwait
mov
add
jecxz
cmp
xlat
pop
cmp
mov
imul
das
mov
pop
inc
call
jns
in
and
iret
aad
leave
pop
mov
enter
jle
mov
dec
dec
fildll
mov
insb
lock
jmp
jo
pop
fldcw
add
add
jmp
in
jnp
loopne
in
outsb
xor
test
lret
clc
shrd
or
push
aas
stos
and
sbb
and
mov
lock
xchg
stos
addr16
addr16
clc
pusha
fcoms
sbb
rolb
bnd
jmp
mov
xor
mov
iret
sahf
push
mov
push
call
mov
lea
xor
pop
mov
dec
sub
cmp
dec
scas
jmp
cmp
push
rorl
adc
xor
xchg
daa
and
mov
btr
push
mov
test
or
lea
cmc
outsl
add
jg
push
inc
repz
pop
rcrb
fistps
rorb
lds
loope
testb
sbb
imul
loope
in
pop
lock
inc
mov
adc
pop
mov
cmp
push
pop
mov
sbb
mov
movsb
in
and
subl
scas
popa
adc
mov
fcompl
arpl
es
outsl
fnstsw
cmc
sbb
fildll
jb
insl
jl
pop
enter
mov
or
mov
inc
fwait
mov
lods
icebp
mov
js
pop
fwait
enter
loopne
jg
call
lret
std
ss
clc
lcall
pop
push
scas
cmpsb
push
sbb
out
push
fucomip
mov
sub
xchg
fiaddl
xor
dec
mov
fnstsw
pop
jle
repz
mov
lcall
sbb
outsl
in
lods
dec
sbb
repnz
vpsubsw
psrlq
jg
icebp
cli
adc
iret
js
pushf
cmp
fidivs
inc
adc
xchg
cld
and
lds
ret
icebp
jnp
xchg
mov
pop
and
call
pop
sbb
push
cvtps2pd
enter
mov
push
cmp
xchg
xor
jne
hlt
xchg
lods
push
cwtl
xchg
loop
rcl
out
ljmp
into
or
mov
mov
pop
lock
les
and
icebp
xor
xchg
xor
rolb
fists
movsb
pusha
rcrb
sub
outsb
rcll
jge
jp
insl
xlat
rep
outsb
mov
mov
movsb
ljmp
hlt
arpl
cmp
and
rcll
data16
icebp
pop
or
jle
xor
rcr
pushl
test
lahf
xchg
push
dec
mov
out
imul
scas
clc
cld
icebp
sbbl
shll
in
movb
push
imul
int
mov
jns
cli
add
insb
xchg
lret
mov
loopne
shlb
jne
ret
pop
dec
jmp
stos
test
ret
sbb
popf
orl
or
mulb
pop
daa
push
mov
or
sub
pop
shl
cs
pop
or
cs
out
nop
ret
ja
arpl
in
lods
or
or
and
std
dec
mov
dec
mov
nop
loope
dec
mov
xchg
mov
jne
test
test
jp
clc
mov
loop
mov
clc
enter
xchg
pusha
adc
das
movsb
div
fcomip
sti
shlb
movsb
xor
mov
aas
pushl
mov
inc
or
mov
add
lds
mov
pop
sub
or
xor
in
xchg
mov
loope
or
ljmp
aam
jb
fwait
cmc
aas
add
xchg
or
movsb
orl
addl
push
mov
add
xchg
sub
shrl
and
xchg
aaa
shll
mov
sub
and
pusha
lds
add
pop
and
addr16
popw
add
pop
jb
cld
js
push
jnp
sbbb
pop
mov
mov
xor
test
mov
in
idivb
fimuls
aad
sbb
push
sbbl
mov
movsl
mov
push
iret
inc
sub
ja
jne
jp
add
mov
rcrl
pusha
aaa
and
mov
push
inc
lret
inc
leave
mov
js
cmp
mov
push
scas
pop
mov
cmc
scas
xchg
inc
xchg
xchg
fdivrs
lds
sub
xchg
xchg
xchg
mov
in
test
push
aad
pop
cli
sarb
adc
push
xchg
fsubl
rcrb
fisttpll
sub
test
mov
xor
mov
add
gs
cmc
adc
lds
jle
int3
iret
sahf
mov
push
scas
mov
cs
iret
out
xor
cwtl
jl
sbb
pop
clc
lock
out
pop
shrl
push
mov
or
xchg
mov
jle
in
sti
cmpsb
inc
and
outsl
stos
es
rcrl
popa
in
push
add
scas
dec
sub
sbb
jne
cli
push
aaa
icebp
pop
cmpb
jb
cmc
shlb
adc
pop
les
loopne
loope
shr
adc
inc
sub
dec
je
cld
push
jge
stc
sub
popf
push
jg
fdivrl
jnp
cli
scas
test
lds
aam
std
fwait
mov
mov
rcrl
xor
pop
ljmp
lret
scas
push
pop
xchg
push
mov
arpl
cmp
or
sub
test
cmpsl
mov
push
js
jge
repz
lods
dec
mov
ret
lds
ret
xlat
popf
add
test
movsb
mov
mulb
mov
das
cs
ja
mov
inc
in
je
xchg
mov
push
sub
mov
out
lock
stos
mov
andb
movsl
movsb
mov
jmp
fs
jp
stos
mov
lods
shr
push
jle
stos
mov
mov
xor
test
add
sub
dec
shr
xchg
inc
push
dec
inc
jbe
lret
popa
sbb
loopne
jbe
in
inc
test
or
and
lret
mov
movb
sahf
lcall
testl
cvtss2si
adc
dec
popa
js
and
outsb
cmp
xor
sti
jae
add
xor
and
mov
inc
cmpsl
or
rolb
sahf
ror
mov
loopne
out
mov
bound
mov
jecxz
insb
movsl
outsb
fildll
cwtl
sbb
ficoml
lcall
adc
xchg
and
mov
or
lds
aaa
scas
popf
out
pop
out
nop
push
out
test
mov
inc
sbb
and
ficomps
bound
and
inc
dec
pop
in
outsb
xor
rcrl
mov
in
sub
out
xchg
jno
sub
inc
dec
inc
lcall
gs
iret
xor
push
fildll
fwait
ss
cmpsl
mov
dec
aas
lcall
mov
add
inc
jge
adc
aam
xor
repz
aad
std
fidivrs
dec
jne
mov
inc
fnstcw
cli
lock
mov
add
ss
sahf
cmpsl
enter
push
lods
jbe
cld
cwtl
xor
adc
test
xor
xchg
ss
jno
jg
push
repz
sarl
andb
repnz
mov
fs
test
imul
push
xor
popf
loopne
scas
mov
notb
pop
add
stos
jge
in
dec
cmp
add
pop
push
add
cmc
xor
mov
insl
pusha
jg
insl
or
int
jo
mov
out
mov
sbb
lods
push
xchg
lahf
bound
xor
pushf
rolb
xchg
push
repnz
and
int
mov
call
sbb
fsubrs
js
shr
add
fwait
cmp
jmp
push
das
in
call
cli
imul
in
push
jo
push
scas
mov
js
jg
fnsave
stc
or
sarb
imul
rolb
gs
lahf
imul
repz
and
cmp
sbb
jae
incb
add
push
cmpsl
mov
ficompl
push
jne
and
in
dec
lahf
fcomi
orl
mov
lods
sub
pop
push
mov
and
mov
cli
sub
ret
adc
mov
mov
fbld
lahf
arpl
dec
adc
pop
fldcw
inc
leave
push
push
test
sub
lret
loope
sti
outsl
das
scas
mov
pop
pop
mov
cmp
cmp
jecxz
iret
mov
sub
or
inc
mov
push
jecxz
mov
iret
jle
jno
mov
pop
pop
sbb
pop
fcmovbe
scas
in
stc
jae
sbb
imul
sti
ficomps
push
mov
insl
sub
jae
imul
fwait
pushf
jns
xor
pop
ja
and
mov
xchg
sbb
xchg
testb
fisttpl
pop
mov
lock
sbb
jg
gs
xchg
xchg
push
mov
stos
pop
testl
out
xor
scas
in
pop
xor
dec
ljmp
jge
jmp
adc
stos
shl
es
xchg
std
sbb
shrl
sub
das
sarl
int3
outsb
or
mov
pushf
std
mov
daa
xchg
inc
add
and
jl,pt
into
xor
sbb
pop
mov
cwtl
daa
pop
mov
lahf
int3
cmp
out
sub
shrb
cmp
xorl
adc
mov
pop
loop
mov
rorl
ljmp
jnp
inc
in
test
ss
sbbb
mov
jg
jae
add
icebp
fxch
loope
stc
dec
sar
sub
aam
pop
mov
loope
outsl
in
ret
push
inc
divb
movsl
mov
filds
jle
lds
neg
jmp
idivb
mov
dec
loope
mov
cli
adc
lock
fsubrl
inc
loop
mov
pusha
imul
mov
movl
adc
lcall
fwait
stc
cmp
mov
notl
xchg
jo
or
add
stos
jmp
das
scas
xor
pusha
cmp
into
stos
dec
pop
enter
in
es
iret
push
cmpl
loope
push
mov
push
jmp
push
xchg
jo
xor
in
inc
or
inc
cmp
xchg
sarb
cmc
loopne
inc
addr16
aaa
push
xchg
loopne
dec
flds
shlb
mov
lret
scas
cmp
mov
les
enter
repz
fs
xchg
in
mov
jb
test
xor
and
mov
repz
sub
in
pusha
mov
fisubrs
adc
pop
outsb
jbe
cmpsl
mov
push
dec
ss
cltd
cmp
lods
mov
mov
dec
imul
pop
sbbl
pushf
push
jb
jns
das
mov
and
jmp
push
int3
add
dec
in
ffree
xchg
jmp
pop
add
call
lds
sbb
aad
cmp
mov
jae
sub
icebp
push
push
pop
lds
cmp
mov
daa
push
cli
mov
in
cmp
inc
add
imul
in
movsl
repz
xorl
jmp
xor
pop
xchg
cli
aam
mov
jle
push
and
mov
and
shlb
insb
incl
xor
mov
arpl
test
movsb
in
insb
sbb
push
pop
stc
in
pushf
in
jmp
icebp
push
and
xor
pop
pop
scas
cmp
pusha
stos
js
daa
jne
in
scas
stos
dec
pop
dec
pop
xchg
jle
adc
aam
inc
sbb
lret
add
dec
or
out
xor
dec
shlb
xchg
fcompl
cmc
inc
mov
loop
push
ds
xchg
mov
jl
sub
icebp
xlat
popa
sub
aad
pop
repnz
imul
scas
pop
xchg
cmpsl
and
aaa
ss
scas
insl
js
mov
sub
mov
jb
mov
outsb
in
push
fcmove
icebp
lock
dec
ret
stos
mov
jo
adc
push
jmp
in
rorl
test
lret
mov
int
or
movsb
xor
adc
push
xor
dec
data16
add
js
pop
inc
adc
sub
cmp
aaa
jbe
mov
xchg
das
xchg
sub
jae
mov
adc
jns
pop
ss
mov
mov
xor
dec
sahf
mov
sahf
std
fwait
dec
pop
dec
add
adc
jns
int
flds
daa
fdivrl
mov
inc
in
add
sub
push
dec
ljmp
sbb
mov
in
icebp
xchg
and
aad
jle
movsl
fcompl
sahf
rol
mov
dec
xchg
push
jb
ds
ds
mov
gs
xorb
fsubrs
data16
fstpt
mov
cmp
adc
stos
gs
or
dec
dec
dec
in
gs
ja
lahf
pop
xor
test
sub
lock
test
jmp
pop
in
addr16
jl
out
jo
mov
jo
sub
lahf
mov
push
adc
test
xorb
mov
adc
out
mov
mov
stc
push
notl
stos
xchg
sbb
repnz
test
or
mov
fistps
inc
push
mov
adc
push
ja
out
lds
daa
into
movsl
sub
jns
fsubs
ljmp
enter
mov
ret
pop
fadds
testb
fcom
lds
repz
adc
mov
and
ror
dec
and
rcrb
test
cmpsb
sahf
repz
popa
or
jmp
mov
mov
add
movb
test
xchg
dec
out
gs
push
cmp
daa
mov
fadd
mov
rcrb
xor
jno
pop
cli
and
into
dec
cmp
cmc
lahf
jae
push
dec
pop
push
add
popa
lret
lcall
cld
repnz
push
push
imul
outsb
pop
ret
or
jne
mov
dec
dec
push
out
xor
pop
pop
ds
or
out
xor
shll
jo
addb
outsb
adc
pop
xchg
movsl
pop
fmull
addb
shll
pop
mov
repnz
xor
fisttpl
or
ljmp
imul
lahf
dec
ljmp
push
into
iret
inc
inc
sub
mov
xor
and
popf
sub
outsl
out
into
add
ffree
cmc
add
pop
int3
stos
jb
push
and
mov
push
loopne
or
push
loopne
xchg
sarb
shlb
stos
imul
mov
xorl
popa
das
movsl
jmp
addr16
pop
stc
inc
int3
cmp
andl
stc
add
je
push
in
xorl
pop
pushf
dec
adc
xchg
mov
lods
insb
mov
imul
out
inc
outsl
mov
mov
pop
rcr
xchg
int
pusha
jbe
pop
or
sbb
ss
jle
testb
and
cmp
dec
mov
popa
imul
jno
enter
ret
xchg
add
aam
fistps
sub
cltd
xchg
sarl
cs
fsubrl
outsb
mov
cmp
imul
enter
jle
negb
sbb
add
mov
cli
imul
sub
push
mov
sbb
repz
push
mov
jae
outsb
aad
imul
lds
repnz
out
pop
in
push
test
imul
sub
sbb
fwait
sbb
call
cltd
xchg
faddp
mov
xchg
out
push
repnz
xchg
enter
dec
outsl
sub
push
es
mov
negl
mov
dec
fwait
pop
inc
lods
mov
sub
or
call
repnz
scas
lret
dec
xchg
frstor
adc
cs
enter
add
je
xchg
adc
gs
mov
icebp
jmp
out
xchg
and
addr16
push
adc
mov
arpl
mov
mov
outsb
test
mov
jo
and
pushf
jo
icebp
out
mov
movsl
movsb
xor
push
mov
mov
and
ds
leave
lea
mov
lea
bnd
adc
dec
sbb
ljmp
in
ss
aam
mov
lahf
inc
pop
mov
sbb
cmp
xchg
adc
sub
ret
sub
adc
mul
test
in
repz
pop
push
and
arpl
xchg
jns
and
add
pop
inc
cwtl
and
push
inc
aam
push
cmp
push
push
out
data16
hlt
mov
leave
push
sbb
scas
sarl
in
ja
pop
sbb
loopne
jle
inc
mov
sbb
dec
cmc
dec
fldenv
loope
adc
popa
ljmp
xor
ret
xor
sbb
repnz
dec
gs
and
scas
mov
xchg
jg
iret
xor
inc
mov
mov
hlt
push
adc
mov
arpl
add
add
xchg
and
add
or
imul
xor
push
and
lds
jle
scas
xchg
sub
sub
ss
ja
add
rcll
inc
repnz
les
ud2
add
arpl
push
sub
and
add
daa
cs
scas
fsts
outsl
sbb
fs
stc
add
add
mov
and
js
or
sbb
in
stos
pop
mov
pushl
lcall
pop
dec
imul
mov
divb
repnz
cmpsl
push
frstor
test
out
std
cld
loop
jle
shl
out
mov
scas
sahf
lretw
or
jle
push
les
jle
mov
stc
adc
and
ljmp
sub
scas
bound
xchg
pop
sbb
cmpsb
push
popa
pop
aaa
dec
push
scas
mov
daa
gs
popf
add
push
sti
cmp
ficoml
data16
jnp
sub
dec
rcll
push
mov
fildll
push
dec
cs
imul
repz
inc
adc
or
xchg
pop
and
adc
xchg
jne
pop
sub
cltd
push
fs
outsb
in
outsl
jo
neg
or
jge
ret
ljmp
sbb
dec
adc
dec
xchg
lds
mov
shlb
xor
insl
ss
jg
dec
out
push
enter
push
dec
icebp
xor
into
mov
out
push
xor
xor
mov
adc
mov
pop
lods
mov
out
testb
xchg
rcll
adc
shll
mov
mov
sub
mov
leave
mov
jmp
mov
mov
shl
cld
call
lock
notl
leave
notl
lock
notl
lock
push
lock
sbb
shl
sbb
xlat
negl
lock
push
lock
add
fincstp
add
fcomip
add
push
lock
or
lock
or
jmp
pop
movsl
es
enter
ljmp
mov
jne
mov
add
gs
xor
add
xchg
in
or
in
jo
out
pop
shl
xchg
ljmp
xchg
jb
in
scas
cli
sub
mov
xchg
jl
or
pop
fiaddl
jle
icebp
aad
cli
lock
gs
out
loopne
pushf
cltd
jmp
and
ljmp
test
icebp
or
sar
icebp
sbb
dec
roll
out
daa
aad
aad
xor
jecxz
in
pop
ljmp
cmp
scas
add
out
jne
cmc
jge
xchg
or
cmpsb
nop
mov
test
lret
aas
in
orb
rorb
out
inc
test
sbb
mov
pop
jmp
stos
cltd
frstor
sbb
dec
dec
adc
es
sub
xchg
xchg
inc
add
stos
shlb
sub
lods
sbb
xchg
dec
dec
pushf
mov
mov
popa
xor
xchg
mov
xchg
movsl
daa
mov
call
cs
inc
xchg
sbb
repz
les
mov
movsb
cs
mov
dec
icebp
or
loope
xor
cmp
addb
adc
dec
enter
inc
imul
mov
inc
ds
jns
sub
repz
xlat
inc
add
lret
inc
xchg
jne
outsl
cmp
mov
pop
mov
test
sub
cmpsl
push
rcrb
add
lcall
xchg
or
js
jg
push
rcr
aad
cmp
add
pushf
sbb
in
xchg
add
dec
jne
lret
pop
les
test
cmp
mov
int
cs
or
push
decl
sub
test
sbb
jne
xchg
in
fildl
or
dec
inc
dec
fbstp
icebp
pop
faddl
ss
scas
sarb
aas
stc
sub
cwtl
out
sub
repnz
adc
pusha
movsl
sbb
adc
repnz
cld
sbb
jmp
aam
ds
fwait
les
pop
test
mov
jecxz
push
pop
leave
cs
pop
imul
pop
cmc
sub
mov
cmp
iret
dec
mov
insl
lea
or
lods
rorl
mov
add
stos
dec
push
push
dec
insb
fisubs
das
xchg
sbbb
arpl
outsb
jl
mov
xor
dec
pop
xlat
cs
push
test
repz
pushf
xorb
push
xchg
push
imul
push
jp
sahf
sbb
faddl
scas
int3
jge
xchg
movsl
mov
mov
orl
faddl
or
push
mov
aam
test
pushl
scas
mov
xor
mov
ss
cmpsb
lret
push
fidivs
push
ljmp
int3
ss
lret
stos
les
adc
pop
mov
cmp
lock
lock
daa
push
sbb
mov
sub
clc
mov
dec
enter
and
mov
jmp
mov
pop
enter
movsl
cmp
js
xorb
insl
inc
fisubl
pop
jg
sahf
and
adc
dec
xchg
mov
enter
rorl
cmp
push
xchg
call
xchg
push
cs
lea
jecxz
test
mov
xchg
sub
mov
pop
in
lods
ss
push
ficoml
out
sbb
test
rcr
push
imul
idiv
enter
out
xlat
mov
fisttps
enter
dec
xor
jb
insb
cmp
addr16
pop
pop
arpl
inc
mov
adc
lret
pop
fbld
inc
je
push
and
pop
inc
or
or
orl
or
in
mov
filds
popa
lea
jp
mov
xor
test
repnz
mov
or
bound
fldl
movsl
fldl
sbb
jg
test
cwtl
lret
dec
idivl
lret
jae
pushl
and
test
negl
repnz
hlt
sub
fbstp
ja
sbb
cmpl
adcb
out
push
pop
xchg
xorb
adcb
push
sahf
loopne
scas
xor
add
xlat
fstp
testl
and
daa
cs
dec
ja
and
cmpsl
jecxz
cmp
in
fimull
pop
and
scas
adc
add
xchg
in
scas
push
outsl
and
fistps
jo
push
sub
lock
mov
test
sbb
popf
cs
outsl
adc
cmpsb
fs
inc
mov
adc
pop
cmc
and
daa
test
xchg
in
ret
fbstp
sbb
adc
mov
dec
push
icebp
imul
loope
xor
adc
mov
bound
imul
and
repnz
call
dec
fdivs
subb
mov
mov
or
inc
and
sub
enter
sbb
cmp
mov
mov
mov
test
mov
xchg
mov
daa
mov
jne
movsl
stc
jns
ja
jmp
movsl
sbb
lock
int
or
scas
pop
push
adc
and
dec
sbb
jge
xchg
pop
aam
xchg
pop
mov
out
jmp
stos
je
int
das
mov
cmpsb
sub
mov
test
lock
or
sub
and
sbb
pop
dec
fdiv
and
push
adc
cmp
insl
jo
mov
in
ljmp
ljmp
ret
pop
push
rcrb
pop
cmp
push
mov
idiv
es
dec
fldcw
sub
push
rorl
sub
sbb
scas
mov
add
cmpsb
dec
cmpsb
js
or
loope
lahf
xchg
mov
stos
xchg
fbld
cmc
iret
lret
loop
or
stos
das
test
sub
push
mov
mov
jle
jmp
movsl
adc
stos
mov
daa
add
xor
inc
jmp
in
mov
sbb
jmp
inc
xor
call
cmp
jo
and
popa
dec
lahf
push
inc
mov
pop
jbe
mov
outsb
lcall
int3
mov
pop
xor
lret
cmp
inc
insl
lock
rcrb
mov
mov
push
shlb
jmp
cwtl
popf
test
test
jb
inc
push
stos
push
and
add
test
loope
mov
data16
repz
jns
dec
mov
xchg
add
jb
push
sbb
inc
pop
dec
sahf
pop
push
sbb
push
shlb
push
xor
test
mov
mov
insl
jne
outsb
mov
jl,pt
fsubrl
dec
mov
dec
data16
hlt
inc
sub
mov
clc
pop
jae
cmpxchg8b
adc
pusha
sub
push
adc
sub
add
xor
mov
jbe
stos
daa
push
and
adc
adc
arpl
fs
sbb
sbbb
pop
xchg
jbe
mov
push
rcrl
xchg
sub
or
xor
sbb
icebp
es
mov
iret
int3
icebp
xchg
add
add
xor
lcall
inc
aaa
adc
std
imul
inc
adc
jmp
outsl
xor
lods
ss
adc
lods
mov
icebp
inc
mov
loopne
cmp
sbb
jns
lds
movsb
and
and
loope
jge
popa
or
sti
xor
jg
jl
int3
shrb
or
lret
ret
lahf
dec
outsl
imul
fwait
test
cwtl
push
and
fstps
pop
loope
lcall
ret
sahf
imul
jo
scas
js
adc
test
int
lret
sub
stos
mov
lds
jno
sub
cmp
cltd
mov
inc
and
outsl
lcall
cmp
fisttpll
cli
mov
mov
xchg
mov
std
push
cmp
lret
mov
stc
and
nop
ret
pop
xchg
dec
cmpl
cltd
arpl
mov
call
or
adc
scas
add
mov
mov
mov
addb
jecxz
push
movsb
xor
shrb
or
mov
dec
and
popa
jbe
dec
sbb
lahf
adc
es
xchg
rcll
and
add
pop
mov
push
sbb
xor
or
xor
pusha
and
sbb
in
sarb
mov
loopne
fdiv
adc
or
dec
cmp
sbb
xlat
clc
sub
inc
sbb
cmp
mov
cmp
xchg
inc
mov
pusha
xchg
cld
and
imul
scas
cmp
jnp
cmp
mov
ss
mov
cmp
mov
sub
enter
adc
pop
stos
jnp
push
jl
pushf
add
stos
push
pop
out
pop
xor
sub
or
ds
pop
not
jbe
outsb
adc
jno
movsl
mov
mov
popf
mov
adc
ja
mov
push
call
jmp
imul
mov
pop
popf
fisubrs
push
shlb
pop
sbb
aas
les
dec
jp
adc
into
jle
and
xor
fwait
bound
or
fsts
stc
loopne
push
enter
aad
negl
sub
test
loop
or
and
pop
inc
sub
popf
add
fldl
mul
lds
loopne
roll
cmp
lea
rcr
pop
pop
adc
jo
mov
xor
push
roll
into
cwtl
push
mov
xor
call
repz
js
mov
adc
icebp
and
sahf
je
cmp
jns
fdivr
adc
enter
mov
pop
pop
jae
xor
in
shlb
lret
xlat
jbe
mov
dec
cmc
xor
jl
movb
pop
push
mov
dec
mov
test
mov
sbb
decb
jmp
pop
add
mov
dec
jbe
xor
paddb
pop
inc
pop
mov
loop
sbb
dec
test
add
das
mov
sub
adc
shll
cmp
std
push
sar
mov
sub
ja
dec
testl
cmc
jge
arpl
jae
testb
popl
andl
push
repnz
push
sbb
rcr
inc
loopne
shrb
or
jecxz
adc
cmp
insl
pusha
push
lret
mov
pop
popa
mov
inc
repz
dec
lret
cmp
jl
pop
push
int3
push
dec
mov
dec
ja
roll
mov
lahf
fmuls
jge
and
push
sarb
mov
jp
repz
push
imul
sbbl
xor
out
jno
mov
jle
jae
inc
icebp
nop
lods
and
cmpsl
adc
or
les
fnstcw
addl
in
xchg
xor
outsb
mov
arpl
sbb
in
in
and
das
and
mov
test
lods
xchg
es
cmp
lds
lcall
test
jg
mov
jo
jnp
data16
popa
xor
or
pushf
repnz
test
fnstenv
filds
fisubrs
loop
imul
lods
sub
pop
gs
mov
outsl
cmp
xor
push
js
dec
and
pushl
scas
lea
push
cmp
jp
sbb
jb
fdivrl
idivb
fwait
das
or
jg
mov
gs
imul
dec
lea
sbb
cmp
mov
push
xor
stos
inc
lret
and
ja
mov
xor
out
dec
leave
mov
scas
in
clc
jg
out
or
out
mov
loop
ret
aaa
repz
rcrl
mov
add
test
jle
push
mov
call
lds
and
inc
jae
or
dec
mov
cmc
jns
push
pop
pop
sarb
lahf
dec
sbb
or
cmpsb
imul
stos
sbb
mov
leave
in
dec
xchg
push
sbb
into
jns
sub
repz
popl
cmc
push
inc
push
cmp
adc
stos
std
inc
dec
cmp
cwtl
xchg
mov
pop
scas
les
pop
adcl
push
mov
iret
cld
dec
outsb
sbb
inc
dec
xor
adc
jne
pop
lahf
jg
sub
inc
dec
or
ret
aad
adc
insb
sub
andl
mov
js
lcall
cmpsb
call
popf
sub
mov
dec
lret
or
sbb
xchg
adc
movsb
and
outsl
push
leave
mov
out
leave
xor
es
lahf
mov
cwtl
jge
clc
enter
out
les
and
mov
nop
ljmp
lods
lock
jae
cmpsl
dec
sub
std
jns
cmp
outsb
cltd
push
leave
or
loope
xorl
outsl
jge
jle
xlat
fdivs
dec
ljmp
call
and
outsl
inc
arpl
pop
ds
aad
sti
mov
push
inc
mov
enter
into
insl
aaa
in
xor
lea
pop
sub
and
popl
mov
imul
cmpsl
jbe
dec
xchg
dec
and
ficomps
add
popa
imul
jb
in
push
aad
icebp
lahf
jl
jl
jle
push
mov
popa
sub
sub
into
pop
fsts
subl
js
and
dec
or
gs
psrlq
mov
rorl
pushf
xor
cmp
and
mov
inc
lea
xchg
mov
mov
lret
std
sub
or
hlt
scas
adcl
pop
inc
scas
lods
mov
pop
test
nop
test
and
pop
lock
fistpll
mov
ss
shrl
adc
jno
xchg
jecxz
gs
lahf
scas
xchg
xor
mov
push
loop
pop
imull
test
cmp
push
cmp
sarl
mov
push
xchg
lret
inc
ljmp
sub
lds
stos
push
cmp
test
jmp
les
xlat
jae
int3
stos
jnp
jmp
loopne
sbb
ret
or
cmp
add
rorb
inc
cmpsl
imul
scas
aaa
adc
pop
cli
roll
cmp
sbb
aaa
jp
pusha
push
aas
in
repnz
shrl
jno
mov
xchg
rorb
or
int
outsb
adc
inc
aaa
pop
jo
sub
cmp
test
outsb
sub
jecxz
dec
repz
imul
loope
push
rorb
cmp
lret
mov
xchg
dec
loope
pop
adcb
fistps
mov
dec
inc
adc
cs
mov
fwait
adc
fistpl
hlt
jmp
or
lods
mov
mov
adc
lret
addr16
insl
lea
das
inc
and
fs
dec
nop
call
scas
mov
mov
repnz
fldenv
into
cmp
mov
pop
jbe
es
movsl
mov
out
js
loope
les
xor
sahf
mov
lahf
into
dec
pop
cmp
or
add
xchg
test
add
cmp
js
inc
dec
fcomp
outsb
test
gs
dec
stc
xor
adc
test
xor
jnp
std
lea
inc
popf
in
data16
insl
repnz
inc
loop
imul
gs
jle
xor
out
test
sahf
mov
scas
mov
lds
dec
into
mov
mov
add
into
out
or
and
in
push
add
mov
cmp
mov
ficoml
rsqrtps
xchg
in
pop
cmp
repnz
je
in
cmpl
testl
xchg
sbb
adc
push
mov
cmpsb
daa
inc
sub
and
mov
mov
xchg
aad
nop
gs
sahf
testb
mov
outsl
xor
cld
out
pop
test
dec
cmpsb
inc
leave
ret
push
lods
fidivl
shlb
mov
xchg
leave
mov
and
bound
ja
fs
cmp
and
inc
sbb
mov
add
and
cmpsb
test
test
mov
jge
sbb
xchg
rorl
ja
xchg
out
xor
mov
popa
sbb
pop
xorl
cmp
clc
mov
and
mov
add
sar
sbb
test
cmp
stos
movsb
mov
jmp
xor
fcomps
movsl
and
lcall
outsb
push
dec
xor
pusha
mov
lcall
cmpsb
je
lahf
mov
in
cltd
inc
aas
mov
jle
push
dec
int
enter
shrb
gs
es
cmpl
dec
sub
cli
lcall
xor
shrb
push
aad
jmp
dec
stos
insl
in
clc
xor
pop
iret
or
jg
cmp
inc
jne
jg
add
sbb
pop
push
aad
lcall
pop
mov
rorb
lock
in
mov
lcall
and
add
xlat
ret
mov
jge
jge
sub
ret
mov
or
into
cmpsb
add
scas
rcr
mov
aas
mov
pop
and
mov
xor
inc
aam
popa
addl
push
xchg
int
cli
cmp
dec
cmp
push
inc
cmp
movsl
ljmp
jae
jne
mov
and
pop
jl
rcrl
dec
mov
jb
mov
in
xor
movsl
or
adc
fistps
cltd
jb
jno
pushl
sbb
sbb
xor
fcom
aad
cmpl
orl
rclb
fcmovu
push
imul
mov
pop
jg
out
andl
lds
cmp
test
std
and
pop
imul
in
test
movl
dec
or
aam
into
mov
adc
jb
fisttpl
or
cmpsb
out
pushf
shrd
iret
aas
popa
mov
pop
dec
cmp
jns
pushf
inc
movb
popf
jle
xchg
rcrl
mov
fs
loopne
loope
pushf
loope
sahf
popf
fmull
pushf
jmp
and
hlt
jo
rcrb
fmuls
ja
dec
fdivs
pop
lock
int3
cli
jg
push
or
jne
xchg
mov
add
inc
push
shl
mov
push
insl
ss
stos
inc
push
out
dec
loope
cld
ljmp
push
jl
jmp
loope
ljmp
inc
mov
rclb
sub
rorb
ss
std
pop
icebp
pop
xchg
jg
ret
xlat
addr16
inc
fsubl
push
in
cs
std
inc
fldt
inc
dec
add
fistpll
test
outsb
out
sbbl
xor
jmp
xor
add
pop
or
movb
in
lret
test
fidivs
cmpsb
cmpsl
jl
stos
mov
cs
iret
clc
sub
lahf
ss
dec
loopne
loope
icebp
mov
lods
insb
movsl
and
ljmp
outsb
test
ds
pop
test
cmp
xchg
fnstcw
test
cmc
and
add
mov
sbb
cs
lret
mov
fsubrl
cmp
mov
rorl
adc
lcall
dec
test
cmc
lock
sbb
push
cmp
adc
inc
insb
push
fisttps
out
dec
sbb
outsl
ss
and
mov
xor
aam
sbb
mov
scas
lea
sbb
and
mov
cmpb
inc
push
outsb
mov
iret
push
das
or
push
movsb
into
cmp
sahf
mov
scas
pop
fs
ss
int3
push
test
shll
pushl
jo
jle
cmp
cmp
fsub
pop
mov
xor
call
jnp
xchg
lds
enter
mov
imul
lcall
jl
lods
out
inc
loop
mov
pop
pop
sub
add
xchg
xor
pusha
push
jbe
inc
inc
aas
int3
sbb
mov
inc
icebp
lret
shlb
fmull
inc
icebp
mov
cmp
fdivl
enter
cmp
xlat
lea
jmp
jl
lret
dec
stos
cmp
lret
hlt
enter
icebp
cs
testl
enter
add
addr16
adc
add
orl
push
push
mov
dec
and
sarl
mov
lret
push
idiv
sarb
lods
and
xchg
ret
push
jg
addr16
sbb
mov
into
push
test
cli
push
enter
mov
sbb
jns
cmc
mov
add
sbb
xor
imul
imul
pop
dec
sahf
or
mov
lea
fidivs
and
insb
pusha
pop
inc
dec
push
in
cmpsb
dec
lds
fs
xorb
aas
add
inc
push
test
test
mov
stc
sbb
xchg
adc
mov
sbb
add
lahf
or
mov
xchg
popa
clc
popf
mov
push
ljmp
lods
inc
test
popa
inc
loop
stos
push
jmp
in
bound
sub
out
pusha
fwait
es
inc
fwait
add
xor
bound
pushf
pop
inc
cs
das
jg
imul
cmc
cltd
out
nop
jns
sub
mov
mov
es
push
pop
jge
rcll
das
xchg
push
push
popf
enter
scas
xchg
pop
loop
fists
fsubrs
jmp
mov
fistps
test
out
call
jns
mov
xchg
cmpsb
dec
fimuls
mov
pop
pop
fldt
cmp
dec
jp
or
inc
push
stos
aad
push
test
sub
xchg
xor
push
adc
divl
sbb
inc
cmp
imul
fimuls
fiadds
push
jbe
adc
lds
dec
shlb
repnz
andl
in
rcll
test
in
push
adc
and
rclb
fmuls
jb
nop
test
out
icebp
cmpsl
out
fdivl
sbb
ret
inc
pop
testl
push
notl
pop
insl
xchg
sahf
lahf
push
ret
add
lcall
lahf
ss
fnstsw
lahf
les
jle
ror
jns
and
pop
jge
push
mov
xorb
mov
imul
int3
insb
dec
mov
pop
dec
into
push
mov
or
xchg
pop
sbb
xor
xchg
cmpl
and
mov
fildll
or
nop
xchg
test
popf
repz
mov
lcall
xchg
aad
jns
and
mov
add
gs
scas
test
or
es
mov
pop
cmp
ss
jae
imul
push
mov
cmp
das
daa
out
jg
add
pop
jle
xor
push
jnp
push
xor
js
das
cs
mov
fwait
pusha
mov
push
inc
dec
popf
testl
js
imul
xchg
insl
insb
mov
ja
jge
push
xchg
call
xchg
bound
jg
push
mov
mov
mov
cmp
mov
sbb
xchg
jp
icebp
jg
das
mov
jmp
mov
adcb
outsl
aas
inc
into
cli
mov
in
pusha
out
xchg
rolb
in
scas
sahf
js
xchg
hlt
int3
into
mov
arpl
outsl
mov
mov
out
sub
sub
push
xchg
push
push
lds
sub
inc
inc
mov
adc
fcoml
inc
fwait
mov
and
dec
add
add
mov
aas
jae
jg
sub
adcb
jg
cmpsl
test
rcl
js
lock
or
loope
jb
in
jbe
fsubrl
ror
mov
popa
and
nop
jp
sarl
jmp
rcrl
loope
mov
andb
loope
sarl
lret
pop
sbb
inc
inc
push
pop
fisubrs
sub
adc
js
push
shlb
mov
sub
mov
sbb
stos
inc
es
cmp
or
and
jo
out
cmp
scas
aam
lret
imul
jp
jbe
out
mov
les
sbb
scas
mov
pop
cmpsl
cmp
and
sub
je
xchg
out
cltd
and
out
xlat
imul
mov
jbe
dec
mov
sub
jb
sbb
fcoms
pop
xorb
xor
add
fs
jmp
int3
arpl
dec
test
sub
cmp
mov
fwait
bnd
gs
out
and
les
mov
inc
sbb
pop
lcall
pusha
into
jne
stc
push
insl
cltd
enter
xchg
add
shl
rcrb
adc
sahf
test
pop
in
outsl
add
orl
inc
or
pop
repz
shl
cwtl
sub
adc
dec
fdivrs
test
sahf
pop
stos
pop
ss
xchg
fnstenv
imul
in
fisttpll
and
push
rcrl
inc
pop
fisubs
cmpsb
jno
je
cmp
ffreep
cmpl
sub
dec
mov
pop
jno
mov
dec
jge
ss
subb
dec
and
mov
sahf
pop
aam
push
push
je
fisubrs
orb
call
je
jp
xor
data16
xchg
ret
cld
cmp
mov
cmp
loope
test
or
movsb
cld
ds
inc
inc
fidivs
mov
push
inc
and
fnstsw
cmp
je
dec
or
test
pop
adc
popa
sub
jge
sbb
icebp
cwtl
lret
iret
mov
test
hlt
int3
lahf
push
lret
xor
int3
dec
and
repnz
pop
in
outsl
sbb
xchg
loope
enter
aam
aaa
stos
call
push
sahf
fsubl
icebp
test
scas
push
sub
shll
loopne
inc
adcl
fs
and
or
dec
add
pop
mov
stos
mov
fidivrs
adcb
jg
inc
repnz
arpl
inc
sbb
stos
sarb
in
mov
jno
dec
jge
mov
cmpl
imull
dec
mov
mov
loop
cmp
es
fisubrl
mov
mov
jo
sub
fs
idiv
xchg
call
and
hlt
mov
test
sbb
and
cmp
cmp
mov
dec
imul
test
pop
xor
mov
jno
sub
cmc
js
pop
dec
sub
inc
into
repnz
lds
hlt
ret
bt
mov
adc
dec
shll
pop
pushf
rol
cmp
roll
shrb
sub
jmp
xchg
test
xor
jl
lock
inc
cmpb
subb
cltd
fadds
addr16
adc
jmp
pop
dec
sahf
xor
ds
cmp
inc
push
pushf
lods
push
imul
mov
out
data16
or
jae
xor
into
xchg
push
insl
imul
xchg
mov
ds
pop
sub
cltd
inc
mov
and
sub
imul
and
cld
jg
sahf
xchg
loop
outsb
test
das
mov
or
fdivl
out
das
sti
fcomi
inc
push
lds
in
mov
scas
scas
xchg
jb
or
stos
mov
in
push
mov
ret
insb
js
imul
repz
std
pop
sbb
adc
or
mov
rol
and
jg
fildll
mov
jge
stos
xlat
or
lcall
or
mov
adc
pop
or
pop
std
icebp
call
test
xor
xor
inc
jecxz
mov
das
mov
cmp
js
addr16
jge
inc
mov
repnz
fadds
mov
and
into
jg
repnz
push
mov
jmp
cwtl
ljmp
or
mov
sbb
gs
lret
cltd
icebp
lock
mov
mov
adc
mov
shlb
or
shll
mov
sbb
iret
mov
lock
fucomp
lret
pmuludq
lret
test
les
mov
mov
sub
ret
or
sbb
push
adc
dec
add
cltd
cmp
movsb
data16
rorl
in
mov
mov
adc
shl
fisubl
dec
push
sbb
adc
dec
test
jo
cmc
bound
xchg
add
mov
dec
sub
sub
stos
outsl
addr16
imul
push
lds
add
sub
out
cld
arpl
imull
jmp
sbb
scas
cmc
sti
and
dec
cmpxchg
pop
xchg
ret
jns
push
mov
ret
test
push
jle
in
xchg
lret
ret
ja
jmp
dec
and
scas
addb
xor
imul
movsb
pop
lea
fdivrs
mov
mov
inc
mov
xchg
add
add
cmp
mov
daa
jle
ret
cs
pop
mov
ja
mov
xor
sub
sbb
lds
outsl
gs
lds
lds
and
out
jecxz
loopne
fcompl
xor
into
enter
repnz
push
jo
adc
pop
inc
js
aaa
popf
lahf
mov
sub
aaa
inc
mov
dec
cs
jmp
sbb
stos
daa
jne,pt
lods
aas
mov
popa
jmp
imul
xchg
fldt
lods
cwtl
inc
pop
or
mov
int
inc
jno
pop
or
cmpsb
dec
mov
jle
sbb
push
out
and
and
adcb
popf
mov
test
mov
into
stos
add
mov
ret
pop
add
and
and
xchg
or
cs
mov
xchg
lods
mov
popa
mov
lock
push
mov
nop
ss
stos
dec
jbe
lret
fwait
ja
movsl
sbb
cmp
out
mov
sbb
pop
or
pop
and
out
in
jge
negl
adc
testl
icebp
mov
cmp
lret
test
sti
fs
jae
jo
xchg
mov
adc
movsl
gs
lret
movd
dec
xor
push
adc
jmp
push
aas
gs
add
cmp
jecxz
sahf
enter
insl
xor
jp
das
dec
xchg
and
cld
faddp
dec
push
dec
inc
test
jge
xchg
shl
mov
loop
into
repz
pop
sbb
xchg
out
inc
aaa
inc
pop
jb
int3
pop
or
ja
or
das
fnstenv
shll
adc
cmpsb
lret
or
cmp
ja
push
add
bound
xorl
pop
mov
inc
mov
sbb
aam
mov
or
inc
clc
ja
lea
mov
inc
leave
leave
test
jmp
xchg
aaa
pop
cmp
sahf
or
dec
xor
and
sahf
xchg
xchg
push
pop
pop
lret
loopne
pop
frstor
adc
cli
out
imul
lods
inc
fcompl
and
add
shll
jae
ljmp
das
sub
jmp
pop
roll
in
lahf
imul
test
movsb
mov
insl
fldt
stos
loopne
idivl
push
test
pusha
pusha
repnz
jmp
dec
hlt
call
pop
sbb
ret
fwait
sbb
pop
mov
inc
pop
fisubl
push
pop
push
mov
es
rcrb
xor
je
sbb
shlb
lahf
call
sbbb
xchg
xor
inc
jmp
sub
nop
test
sbbl
popf
ja
jmp
mov
inc
mov
inc
lock
or
sarb
dec
or
xchg
mov
pop
cmp
cs
mov
push
push
jg
outsb
add
loop
roll
daa
cmpsb
jp
adc
dec
push
pop
inc
ss
and
mov
and
push
jae
pushf
push
jg
insb
mov
nop
mul
mov
leave
jmp
std
dec
cltd
cmpsl
adc
jnp
into
mov
xchg
testb
in
movsb
add
mov
cli
fcompl
lret
rclb
jo
jnp
dec
mov
mov
dec
scas
add
sbb
imul
xlat
mov
pop
out
idiv
jo
lcall
in
fs
add
cmpsb
xchg
xchg
data16
and
inc
das
jg
pop
inc
inc
xor
andb
jg
xchg
jle
insb
push
pop
pop
stos
cmp
je
add
dec
movsb
sub
mov
jmp
xor
lcall
in
push
inc
or
shlb
fidivl
in
xchg
addr16
lods
loopne
jmp
and
push
out
pop
cli
mov
cs
xchg
sbbl
test
push
scas
push
fst
cmpsb
call
push
and
fimuls
leave
xchg
jo
and
lods
bound
test
aad
stos
icebp
aaa
insl
cmpsl
test
popa
xchg
mov
and
lahf
data16
adc
pop
mov
cmp
in
lea
mov
cmp
or
inc
pop
pop
daa
and
mov
jl
inc
cli
push
fmuls
xchg
test
out
mov
in
incl
inc
scas
fcmovnb
add
jmp
out
iret
scas
or
sti
pop
push
sub
mov
fisubl
cmp
or
addb
pop
xor
dec
dec
dec
mov
es
jb
mov
ljmp
jbe
outsl
cmp
pop
hlt
mov
sub
lahf
sbb
adc
fs
jnp
xor
push
xchg
xchg
repz
scas
or
lds
js
sbb
dec
mov
cmpsl
fmull
addr16
xor
lcall
lods
mov
shll
repz
loope
fisubl
fdivr
cld
jb
pop
push
pop
dec
xor
or
jnp
push
jmp
push
mov
insl
rclb
adc
jbe
daa
lahf
cmp
loopne
pop
testl
add
test
pop
repnz
pop
insb
xor
mov
add
sub
sub
mov
sbb
mov
jl
push
jle
pop
sbbb
sub
nop
imul
loope
cmp
xchg
push
rcrb
mov
push
shl
xchg
enter
pushf
dec
std
loope
lock
inc
cmp
push
sti
pop
loope
and
pop
inc
pop
shlb
cs
cltd
sbb
mov
mov
xor
cmp
dec
or
ret
scas
pushf
mov
xor
inc
into
andl
lods
pop
test
stos
fiadds
push
xchg
push
cmp
mov
stos
daa
add
mov
sbb
outsl
stos
push
dec
xchg
pop
jmp
pop
mov
mov
jecxz
jle
sbbb
in
inc
jne
clc
cmp
data16
push
mov
pop
add
cmp
negb
lahf
xchg
xchg
scas
into
xchg
and
notb
jo
sub
add
fcomp
addr16
mov
mov
xchg
shl
jae
mov
xchg
insb
add
fsubl
xchg
fsubr
mov
and
test
sbb
sbb
xchg
imul
dec
cmpsl
nop
mov
popa
xor
sbb
sub
into
mov
jl
sub
lret
and
inc
out
testl
int3
movsb
push
or
js
mov
sub
lret
xor
add
pop
xchg
into
fcomi
adc
iret
cltd
dec
lcall
or
push
lds
jecxz
dec
out
das
fistps
jge
fisubl
lea
dec
sbb
out
and
mov
xchg
adc
arpl
sub
das
ds
pop
or
and
fsubrp
inc
sahf
mov
pop
ljmp
mov
pushf
or
dec
cmp
adc
and
iret
fs
xchg
jge
push
inc
clc
mov
sub
notb
sbb
dec
repz
mov
add
hlt
mov
popf
inc
insl
mov
xor
data16
into
fidivrl
lcall
cs
lods
pop
fcmovu
pop
mov
or
insl
xor
jnp
adc
or
int3
mov
cmpsl
pop
movsb
sub
pop
subl
pop
sbb
push
inc
sub
jo
push
shr
fisttpl
cwtl
dec
mov
sti
addr16
push
lds
adc
cltd
movsldup
insb
sub
mov
addr16
rcl
js
pop
test
push
fildll
xchg
and
mov
xor
sahf
sub
mov
pop
je
ds
sahf
aad
xchg
dec
mov
xlat
std
pushf
pushf
xor
insb
hlt
ljmp
pop
aam
mov
shrb
popa
stos
sahf
cmp
pop
aas
cs
lea
lahf
inc
stos
popa
imul
mov
mov
lahf
cmp
loope
jl
in
push
fwait
pop
xor
lock
js
movsb
xor
call
pop
out
test
aam
and
stos
stos
insb
jns
inc
xchg
call
enter
adc
jecxz
sub
arpl
test
dec
scas
pop
lahf
loopne
gs
cs
shl
ss
xchg
cwtl
das
das
rol
push
xor
fwait
adc
std
mov
cmp
push
adcl
das
mov
sbb
outsb
dec
jecxz
dec
out
add
ficomps
js
xchg
rorb
dec
sbb
cmp
push
movsb
mov
test
in
orl
jb
scas
ret
pop
or
in
xchg
call
test
and
dec
push
insl
int3
push
stos
sbb
shll
mov
shll
fsubs
lea
xchg
loopne
inc
add
lea
mov
xchg
mov
out
pop
push
and
les
sub
xor
xor
mov
push
sub
repnz
mov
fiaddl
sbb
jb
repz
lea
ret
test
fnstcw
shlb
sub
jb
hlt
es
push
mov
push
jmp
subl
pop
mov
sub
add
sub
push
push
stos
js
jle
shlb
jo
add
cli
pop
xlat
les
mov
movsb
fsts
sbb
and
call
xorb
scas
das
pop
popa
cld
lods
enter
mov
xchg
outsl
xchg
push
jmp
pop
sub
out
aad
push
xchg
push
add
loopne
push
push
pop
jns
ret
xchg
xchg
xor
push
popf
pop
scas
andb
jbe
push
dec
mov
cmc
push
lcall
fdivr
iret
mov
imul
std
je
stc
mov
push
lcall
out
and
pusha
xor
mov
pmuludq
inc
addr16
faddl
ret
test
dec
cmc
sub
js
addr16
add
xchg
nop
adc
fildll
push
lcall
pop
mov
adc
sbb
xor
sahf
cwtl
std
or
mov
pop
mov
cmpsb
fists
xor
bound
icebp
mov
roll
fistpll
and
fidivrl
and
push
add
mov
mov
pop
out
cmp
cltd
andb
xor
repz
push
sbb
xchg
test
divb
push
xor
mov
inc
or
cmp
lret
pop
mov
cmp
nop
sti
mov
cmc
shrb
jo
pop
aaa
test
mov
push
or
pop
clc
es
or
fs
mov
cs
pop
add
icebp
push
mov
ss
and
in
xchg
stos
add
sub
or
call
mov
pop
add
lahf
imull
jns
je
arpl
lds
hlt
cltd
mov
in
dec
xchg
mulb
xchg
aaa
mov
and
fucom
pusha
and
xor
icebp
pop
pop
xor
pop
test
orl
jnp
into
addr16
xchg
add
rcrb
xor
shr
xor
lds
mov
mov
enter
adc
leave
pusha
xchg
push
xor
xchg
stos
lods
leave
xor
pop
scas
ret
sbb
lret
xchg
enter
jmp
insl
test
pop
out
pop
adcb
cmp
into
lods
dec
cmp
mov
push
das
pop
mov
ss
sub
dec
icebp
loope
popf
iret
inc
into
adcl
xor
or
ja
fucompp
mov
das
and
xchg
imul
add
xor
scas
insb
stos
mov
sub
jno
repnz
push
outsb
das
pushf
lea
aaa
aad
int
jg
shlb
scas
inc
and
call
sub
scas
sbb
push
stos
bound
jae
ds
jmp
and
int
das
repnz
sti
cmpsl
adc
push
cli
repz
adc
cmpsl
nop
out
mov
out
repz
mov
ss
std
in
dec
and
movsb
pop
push
out
scas
jae
mov
das
mov
mov
pop
aaa
das
push
popf
mov
fsts
int3
mov
imul
lcall
sub
lcall
sbb
repnz
cmp
cltd
into
mov
mov
pop
sbb
push
imul
cli
jecxz
lock
jbe
iret
pop
inc
hlt
dec
mov
es
mov
push
xchg
mov
jns
pop
ds
ror
mov
jmp
adc
out
mov
ds
outsb
add
inc
inc
addr16
pop
and
adc
shr
lds
stc
cmp
mov
lock
mov
mov
xchg
test
sub
jno
loop
icebp
in
jne
mov
or
js
fcmove
fwait
push
inc
lret
imul
outsl
lea
and
jmp
mov
rorl
fsubrl
sub
clc
das
push
mov
jl
aad
dec
fiadds
mulb
into
movsb
jge
adc
mov
inc
sbb
fidivrl
inc
push
inc
push
sbbb
xor
popf
xchg
insl
test
test
xchg
mov
loopne
inc
mov
test
clc
addr16
sbb
test
pop
pop
data16
add
pushf
fisubl
scas
inc
jmp
mov
mov
inc
fdivrs
mov
dec
push
jbe
adc
sbb
addb
cwtl
dec
inc
mov
cmp
xchg
jge
lods
mov
push
mov
inc
test
movl
adc
and
mov
mov
fstps
jecxz
xchg
cmp
pop
cmpsl
jg
mov
pop
sahf
divb
mov
testb
ljmp
push
xchg
outsl
jnp
xchg
sub
rcll
lret
dec
shrb
cmp
xor
insl
pop
scas
push
int3
adc
cmc
popa
lahf
iret
sbb
push
and
aaa
mov
xchg
lods
fldcw
gs
imul
rcll
mov
inc
aaa
pop
mov
int3
xchg
add
pop
in
jae
push
cmp
mov
pop
xchg
jae
jbe
gs
sbb
js
pusha
xchg
sti
int
push
mov
dec
and
mov
add
push
jmp
notl
inc
fwait
outsl
and
movsb
sahf
hlt
pop
sbb
sti
jae
sub
mov
out
imul
mov
fmul
sahf
mov
xchg
mov
ljmp
inc
out
das
out
cmpb
xor
and
jns
push
push
jne
cmpsb
sub
lret
ja
or
add
mov
out
pop
divl
sarb
adc
sub
xchg
hlt
lea
sbb
sub
insb
lea
xor
lods
rdpmc
mov
xchg
fcomps
icebp
shll
loop
mov
mov
or
xor
jno
or
xchg
fmuls
fadds
cmpb
or
popf
in
shll
mov
push
fmuls
mov
shlb
movb
sbb
cli
and
ja
cs
dec
and
add
enter
idivb
imul
cmp
outsl
neg
popa
xchg
jl
xchg
dec
in
or
icebp
arpl
push
pop
xchg
aas
jno
in
mov
mov
mov
mov
das
inc
cmp
dec
scas
test
daa
lret
sbb
ds
mov
mov
and
fildl
stc
stos
cli
mov
xor
int3
es
add
push
pop
sub
popa
andl
mov
dec
fistpl
add
leave
and
hlt
filds
out
lcall
mov
cmp
es
shl
ret
pusha
pushl
mov
fcomip
lret
jecxz
mov
movsb
ss
scas
iret
loope
ljmp
imul
stc
xor
test
push
or
js
daa
repz
mov
lret
loop
mov
push
xchg
cmp
aaa
jb
inc
mov
push
fcmovnbe
xchg
stos
or
mov
imul
shr
push
sub
stos
push
cmp
add
js
cli
dec
xchg
insl
fucom
sbb
sub
pop
stos
in
mov
xor
xor
loopne
jg
sub
sbb
cwtl
mov
xchg
rcrb
fmul
dec
je
jmp
inc
mov
imul
mov
xor
or
loop
jge
into
fsubl
das
ret
lds
mov
imul
fistps
fsubl
outsl
push
mov
and
cmp
xchg
jns
popl
pop
lahf
mov
imul
imul
xchg
pop
cmp
cld
pop
and
xor
xor
mov
das
imul
mov
cmpsl
or
call
loope
je
fldt
jmp
sti
ljmp
stos
aam
or
cmpsb
sbb
xor
loopne
cwtl
scas
sti
and
mov
into
dec
or
jmp
mov
rolb
push
orl
cli
mov
repz
imul
cmp
lret
ficomps
pop
lcall
les
mov
lret
add
mov
adc
les
cmp
cmp
jmp
or
lret
loope
out
cmpsb
mov
fs
test
decl
xor
stos
jbe
jb
xchg
and
test
mov
pushf
cwtl
and
popf
hlt
jge
or
jp
jo
outsb
js
test
int
pop
jmp
or
ja
push
dec
mov
xor
imulb
push
xor
movsb
mov
movsl
call
jmp
mov
rcr
test
divl
inc
push
sahf
lret
push
push
sbb
lahf
push
xchg
mov
in
cltd
push
dec
lds
adc
arpl
push
jb
dec
mov
mov
shrb
lods
ret
pop
repnz
imul
mov
jle
pop
xchg
and
mov
orb
test
pop
lock
push
xlat
mov
push
jge
mov
cli
push
aad
xor
mov
cmp
shlb
jae
xor
dec
pop
scas
mov
sub
popl
mov
lret
lahf
sbb
rsqrtps
add
xor
scas
push
fldcw
pop
les
test
or
mov
push
setg
xchg
ret
or
iret
mov
inc
testb
mov
adc
push
jns
addr16
mov
sub
inc
mov
jecxz
sbb
into
sub
inc
push
xorb
cmc
out
movsl
test
or
cwtl
inc
xchg
lds
add
iret
or
lret
sbb
and
or
inc
mov
mov
mov
movsb
in
icebp
cmc
subl
adc
inc
mov
pop
cmp
pusha
cmp
dec
fimull
div
mov
dec
stc
lret
dec
sub
sbb
dec
inc
movswl
icebp
mov
xchg
and
pop
test
and
push
dec
sbb
cld
fistpll
push
pop
rcr
cmp
out
cmpsl
push
and
inc
dec
sbb
mov
mov
es
xchg
sub
sbbb
dec
aam
add
adc
jge
jecxz
push
aad
jle
nop
idivl
xor
test
fsts
jno
xchg
mov
leave
sbb
lahf
loopne
jo
jmp
mov
mov
sbb
cld
jp
cmp
ret
xlat
cwtl
pop
je
adc
test
jbe
jnp
xor
push
mov
xchg
fucom
xorb
andb
lds
xor
or
repz
sub
shlb
xor
cli
push
push
add
cmp
addr16
add
imul
pop
and
je
mov
add
jge
out
cmpsb
ret
mov
popa
pop
loop
or
mov
imul
jmp
mov
popf
jl
dec
bound
fiaddl
mov
add
dec
out
push
adc
lret
pusha
pop
pop
ljmp
data16
cmpsb
jmp
jo
sti
or
mov
rcrb
out
iret
dec
int3
mov
xchg
sbb
fwait
xchg
cmp
icebp
dec
ds
xchg
xchg
xchg
fcomps
int
popa
stos
xchg
mov
arpl
adc
and
or
out
push
jnp
std
aas
adc
jb
test
jmp
xor
jp
leave
in
je
or
xchg
je
aam
mov
fildll
in
es
dec
dec
cld
rolb
mov
rclb
push
cmp
popf
xor
mov
lock
and
cmp
pusha
mov
xchg
xchg
jg
repz
call
or
adc
cli
aam
mov
pushf
ret
mov
enter
add
imul
cs
pop
mov
int3
subl
cmp
xchg
test
mov
stos
in
out
repz
push
test
or
pop
xor
add
xchg
mov
movsb
cmp
sub
fidivs
mov
in
mov
and
nop
add
or
push
sbb
inc
loop
xchg
lods
cli
mov
bnd
ss
lret
push
loop
add
ret
in
fs
out
push
lcall
or
xor
push
cmc
inc
pop
test
daa
mov
sti
push
iret
ljmp
je
pushf
sbb
das
mov
movsl
pop
xlat
repz
dec
lods
arpl
inc
inc
dec
dec
mov
sub
out
icebp
bound
cmpl
mov
add
out
sub
popa
jae
sysenter
pop
mov
aam
mov
dec
push
test
push
mov
mov
data16
xchg
mov
mov
add
mov
mov
gs
lret
cmpsb
in
jp
in
sub
and
ret
cwtl
add
xchg
ret
inc
jns
cmp
push
sub
cmc
and
loopne
adc
int3
push
das
ret
sub
pop
sub
testb
push
loop
adc
subl
inc
sub
and
inc
pop
ret
movsb
cs
pop
pop
adc
out
movsl
push
mov
push
lahf
outsl
jmp
test
ds
sub
insb
bnd
jnp
adc
ja
jmp
into
pop
pop
mov
xor
into
cmp
and
imul
into
adc
jae,pn
mov
and
jno
jnp
mov
sub
dec
data16
or
xor
jmp
arpl
fcoml
or
mov
or
js
dec
jl
add
jo
sbb
paddd
fnstcw
hlt
jg
jb
lea
popa
lea
sub
add
daa
sti
or
cmp
and
ret
lds
fs
aad
mov
ja
push
lds
add
ss
scas
mov
jle
jo
inc
imul
ljmp
lret
imul
or
jo
stc
cltd
add
imul
jg
imul
fisttpll
jge
pop
hlt
pusha
out
out
xchg
lret
das
xlat
call
push
nop
rolb
inc
enter
in
or
cmp
je
sti
je
mov
call
cwtl
rcrb
push
inc
call
rolb
shlb
pop
jp
pop
inc
fs
sbb
dec
add
cwtl
push
adc
lods
cwtl
inc
arpl
and
adc
popf
push
mov
movsl
clc
mov
dec
repnz
sar
out
mov
pop
ret
cltd
int
sbb
push
shrl
cmp
nop
stos
sub
mov
sub
or
add
mov
pusha
adc
and
inc
test
cmpsb
shl
cmp
movsb
fimuls
pushf
dec
out
push
jne
mov
mov
rclb
add
dec
and
movsb
jecxz
addr16
outsl
scas
sub
movsl
div
xor
or
pop
lds
sub
lcall
iret
lds
mov
cmp
leave
daa
int
jo
mov
aam
test
aas
jbe
loope
call
dec
in
push
ss
int3
jge
shrl
jmp
daa
mov
add
insl
mov
movsb
das
mov
jae
fdivrs
mov
jp
xchg
dec
insl
js
pop
push
daa
sub
push
sbb
lods
shlb
lock
add
sti
inc
inc
leave
cmpsl
jno
lods
and
fwait
inc
add
push
aas
dec
pushf
or
clc
movsl
pop
or
pop
cmp
std
mov
sahf
cmp
into
or
cltd
sbb
adc
mov
push
daa
movsl
in
inc
mov
stos
ja
movsl
or
dec
out
dec
call
and
dec
loope
pop
in
sbbl
fdivs
jmp
in
imul
out
jbe
mov
inc
push
sbb
xchg
push
jge
cmp
scas
pop
sub
push
aad
jecxz
pop
std
dec
ljmp
push
lret
mov
jno
outsl
sbb
sbb
cmp
push
jmp
hlt
rol
out
scas
add
dec
cmp
pop
xchg
js
lods
pop
int
jo
sub
aas
pop
stos
sbb
repnz
jg
pop
ja
imul
xchg
mov
push
ljmp
cs
push
pop
filds
dec
jle
das
lea
mov
ret
xchg
lcall
push
je
jg
or
add
testl
push
push
sahf
or
neg
out
pop
xchg
pop
xor
movsb
scas
mov
add
shl
rorb
push
stos
mov
pop
lret
popl
pop
stos
jp
sbbb
or
mov
sub
mov
sub
jmp
in
sub
es
rorb
mov
push
scas
push
and
stos
sbb
aaa
ss
jo
rorb
cmpsb
sbb
insl
dec
sub
hlt
sbb
rcrl
cmp
adc
lods
pop
icebp
mov
out
lret
jnp
mov
movsb
in
aad
pop
mov
test
ficoms
rorl
test
pop
add
lds
xchg
test
ror
out
jecxz
adc
cwtl
or
movsl
lods
fisubrl
loop
dec
xor
push
adc
cwtl
and
fcomp
and
jecxz
push
push
andb
sub
lret
xchg
jno
lds
test
div
outsb
lret
stos
aam
movsl
es
cmp
movsb
cmpsl
out
std
and
and
inc
xor
sub
cmc
jmp
sbb
jg
push
andb
popf
push
push
cltd
lods
push
out
mov
add
pop
sbb
xchg
pushf
adc
xchg
xchg
sbb
adc
lahf
xchg
icebp
and
pop
lds
cmp
shrl
test
sbb
pop
movlps
lock
inc
pusha
inc
jg
push
enter
lcall
cli
cmpsl
or
mov
and
bound
pop
mov
hlt
hlt
inc
daa
jecxz
lea
cwtl
dec
repnz
pop
mov
inc
and
lds
int
enter
test
add
mov
test
loopne
mov
sub
test
out
cs
andl
xor
test
js
jmp
stos
pop
dec
mov
xor
ficoms
pushf
jl
cmp
push
xchg
xchg
pop
sahf
divl
cmc
enter
mov
inc
test
sub
xchg
test
sarb
mov
jo
xor
scas
dec
lret
sti
nop
and
xchg
in
fwait
pop
in
loopne
pop
xor
aaa
and
neg
sub
or
mov
sbb
lods
lock
and
addb
popa
push
fidivs
cs
icebp
outsl
leave
ja
mov
mov
add
icebp
push
in
jle
movsb
aas
xor
sbb
test
imul
cld
in
mov
adc
jo
push
jno
insb
leave
push
andb
xlat
lahf
int3
lea
js
movb
pop
mov
and
add
adc
loop
out
lock
cmpsl
mov
adc
leave
or
insl
sbb
pop
lahf
add
dec
dec
push
push
popa
pop
stos
xor
mov
mov
addr16
push
pop
or
mov
call
test
lretw
nop
mov
scas
mov
fs
leave
daa
dec
lods
int3
jg
imull
fdivs
mov
ss
sbb
sbbl
xchg
jnp
mov
push
cmp
mov
and
lea
std
fnstcw
push
movsb
imul
outsb
cltd
inc
sbb
repnz
mov
pop
dec
stos
addb
lahf
rorl
inc
jle
les
enter
scas
sti
cmp
push
loopne
push
ret
sbb
pop
popa
push
popf
fwait
das
decl
je
push
roll
mov
xor
or
and
outsb
mov
jo
clc
jnp
scas
orb
push
mov
adc
push
dec
or
insl
lods
fnstenv
out
sub
push
adc
push
rcrl
outsl
fldl
xor
in
shl
jmp
cmpxchg
cwtl
sbb
loopne
xlat
pop
fldcw
dec
mov
pop
cmpsl
adc
dec
inc
mov
in
adc
aam
daa
inc
in
mov
mov
loope
imul
imul
shlb
rorb
mov
nop
inc
ret
mov
mov
cwtl
push
cmpsl
cmp
or
cmp
pop
ja
mov
sub
push
test
les
sti
mov
out
cli
push
fwait
dec
inc
xchg
movsl
loop
and
test
mov
mov
loopne
hlt
adc
into
lcall
sub
add
adc
xlat
add
cmp
js
xchg
lcall
rorb
push
in
push
enter
arpl
or
sarb
jg
repz
imul
cmp
pop
imul
icebp
cltd
outsl
outsl
xchg
pop
je
sub
ret
cmc
pusha
sub
xor
lret
int3
shlb
xchg
popf
or
adc
test
aam
mov
pop
or
ret
cmp
jmp
cmc
and
cltd
ja
mov
mov
add
xor
bound
mov
xchg
rorb
fdivrl
fldt
in
mov
add
fists
jns
fbstp
add
add
aam
mov
cs
fadd
mov
lret
sahf
ja
lahf
dec
add
jle
addl
sub
outsl
add
cmp
fsubs
mov
sub
iret
dec
push
fwait
jno,pn
xchg
orl
cmp
je
test
lock
add
xchg
and
in
jae
mov
adc
lods
and
sahf
mov
ror
mov
into
add
loop
aaa
mov
cli
popf
sub
decb
jmp
adc
pop
add
leave
ret
mov
cltd
lahf
mov
scas
js
movsb
shrb
fnstcw
insb
or
pop
outsl
not
fnsave
mov
mov
nop
jmp
roll
push
sbb
inc
out
dec
xor
sub
fs
sbb
imul
out
mov
mov
std
loope
mov
cmp
cld
loopne
lock
pop
xor
loop
add
mov
imul
add
inc
lahf
aas
push
scas
push
cmc
jp
jns
mov
pop
pop
jecxz
popa
ds
pushf
add
fst
insl
pop
push
int3
jge
movsb
popa
mov
sti
mov
shll
jle
mov
popf
in
in
pusha
push
loope
fnstcw
mov
and
shrb
cmpb
mov
xlat
nop
sahf
dec
mov
xor
mov
or
mov
ficoms
icebp
outsb
cld
mov
xor
and
xchg
add
or
testl
cld
fldl
aad
clc
lret
dec
aam
mov
mov
and
fnsave
pop
repnz
fisubrl
int
sahf
insb
push
rclb
stos
mov
insl
repz
fidivrl
sbb
popf
test
out
xchg
pop
fldcw
inc
mov
iret
xchg
aaa
jg
sub
lock
or
mov
jl
rolb
jb
mov
aas
mov
into
ret
mull
mov
loopne
mov
lds
pop
jg
mov
or
jmp
or
stos
stos
gs
lock
xchg
pop
ret
out
or
roll
xchg
mov
add
mov
cmpsb
mov
adc
push
in
mov
xor
scas
mov
int
mov
mov
leave
xchg
and
mov
ds
ds
loope
pusha
fwait
adcb
jnp
or
inc
cmpsb
adc
push
cmpsl
stos
jg
paddsb
push
xor
jp
or
or
mov
and
xchg
fs
scas
faddl
stos
imul
mov
jns
leave
pop
icebp
clc
xchg
in
mov
aaa
rorb
jmp
dec
xor
inc
mov
loop
or
outsl
mov
imul
jne
inc
cmp
cs
add
aam
popa
adc
scas
sub
pop
es
rorb
shlb
stos
add
jno
cmp
jge
hlt
rorl
jmp
sbbb
lds
sub
test
pop
inc
pop
pop
inc
aam
adc
cmpsb
dec
into
fldenv
fwait
ret
testb
lahf
jbe
mov
dec
dec
push
ret
push
mov
mov
ja
outsl
sbb
pop
sbb
sub
pop
xor
dec
xchg
xlat
ss
and
ds
sti
sbb
fnstenv
mov
push
leave
push
sbb
inc
pop
ljmp
jae
jge
lcall
enter
jmp
mov
mov
add
sbb
pop
push
test
mov
fiadds
pop
int
aam
dec
or
andb
subl
jg
add
imull
jl
mov
jo
sub
push
cwtl
sbb
loope
shr
outsb
daa
mov
iret
les
les
xchg
popf
icebp
icebp
loope
cld
cmp
and
add
pop
test
test
jnp
jb
lcall
mov
outsb
popa
pop
inc
popa
jge
mov
cmpsb
add
cwtl
aaa
xor
es
gs
jnp
or
je
lds
outsl
push
cmpsl
pop
orl
add
mov
push
arpl
int
das
roll
xchg
negb
jmp
pop
jb
fiaddl
enter
adc
push
and
push
sbb
lahf
pop
sub
fnsave
pop
jne
push
movsb
pop
lods
mov
leave
jns
lahf
std
imul
lcall
push
cmp
jns
mov
inc
dec
and
cltd
cmp
fisttpl
fmull
psraw
pop
cmp
sub
test
repz
add
push
jae
xchg
xchg
lods
pusha
lds
xorb
xlat
clc
and
popf
int3
into
aam
aad
push
leave
sub
dec
mov
test
test
mov
mov
push
sahf
lock
mov
cmp
popf
divl
repz
testl
pusha
xorl
scas
push
add
std
or
jmp
rcll
pusha
jb
sub
sti
mov
loop
enter
ljmp
test
inc
inc
je
adcl
addl
clc
xchg
inc
shl
in
fcmovb
andb
out
out
push
les
dec
andl
and
gs
cmp
jge
shrb
sub
cmp
xchg
adc
leave
iretw
sub
jmp
xor
loopne
fistpll
mov
cmp
fxam
mov
lock
cmc
push
fmull
inc
rorb
fcompl
xchg
ret
addb
mov
inc
movsl
leave
sub
pop
mov
mov
enter
sub
cmp
sbbb
or
push
jno
sbb
sub
jg
sbb
mov
jge
cli
push
add
push
fsubs
adc
lahf
mov
test
repnz
imul
sub
fildl
push
mov
sbb
test
pop
dec
shr
jno
mov
cmp
aaa
push
jo
in
cmpsb
lods
je
int3
mov
xchg
lret
ljmp
xchg
sahf
popf
adcb
test
fldl
pushf
stc
cmp
dec
stos
gs
lods
jo
mov
arpl
data16
iret
incl
push
pop
std
iret
sub
xchg
sub
movsl
cmp
in
std
mov
fisubrl
into
stos
mov
stos
daa
sbb
dec
add
les
add
stos
jnp
lods
scas
lahf
mov
rcll
leave
into
fstpl
add
out
cmp
mov
xor
test
lret
fstl
mov
push
movsl
stc
push
lds
mov
data16
sub
inc
sub
inc
inc
mov
jae
jge
inc
dec
jp
or
ja
pop
lret
inc
outsb
xor
push
sub
push
mov
int3
jmp
fdiv
rcl
ret
dec
mov
mov
lds
jno
pop
cs
dec
fadd
pop
mov
or
fidivrs
shlb
mov
add
adc
pushf
lcall
cmp
pop
std
stc
fstps
loope
jl
add
movsb
bound
cmpsb
cltd
sbb
mov
xor
repnz
mov
inc
std
data16
jae
roll
sub
jbe
xchg
push
aas
fdiv
int3
in
xchg
jbe
lret
icebp
js
int3
mov
sbb
cmpsb
andl
mov
dec
xchg
mov
add
or
das
fs
sbb
dec
aaa
pushf
mov
cld
scas
lcall
mov
hlt
sbb
gs
loope
mov
jmp
mov
push
and
fsts
lcall
cld
js
mov
sbb
sbb
or
xchg
fbld
mov
and
lock
jo
dec
xor
pop
add
andl
sub
aam
lods
ss
mull
xacquire
xor
jnp
jp
andb
add
movsb
insl
addr16
adc
sbb
xor
mov
cmp
in
or
data16
dec
add
leave
pop
int3
sbb
xchg
jno
and
jmp
fmul
cwtl
mov
leave
mov
dec
jp
inc
ret
adc
inc
gs
dec
sbbl
outsl
neg
xchg
inc
dec
sbb
mov
cmpsb
cmpsb
ja
call
das
jge
and
mov
movsl
fldcw
adcl
int3
dec
rcr
cmpsl
repnz
jo
push
in
test
cmpsl
mov
mov
test
test
sub
mov
loopne
repnz
mov
fimull
ror
loop
call
sti
ret
idivb
cmp
mov
lods
adc
pushf
test
sbb
les
adcb
inc
sub
mov
call
dec
out
cltd
sub
mov
push
inc
cmp
fwait
mov
in
sub
out
dec
cmp
sub
or
xchg
jl
sub
jae
jnp
cmp
lea
cmc
cmc
outsb
mov
jae
pop
mov
sahf
fucomip
out
mov
in
adc
jb
and
jb
pop
aam
jg
xor
jno
mov
iret
or
scas
movsl
mov
cs
pop
jne
mov
dec
sub
and
packssdw
pop
mov
enter
push
iret
and
jmp
outsl
mov
xor
repz
jmp
ret
mov
cmp
mov
ja
dec
jo
inc
sbb
call
push
jecxz
int3
fimuls
adc
lcall
mov
pusha
and
scas
ja
lock
cmp
mov
xor
scas
push
cmovge
pop
mov
cli
push
loope
test
pushf
jg
fisubs
sbb
stos
lds
aas
sahf
mov
mov
pop
sub
mul
leave
dec
in
fld
mov
test
sub
push
mov
or
bsf
in
outsl
mov
leave
jg
scas
push
or
dec
pop
jge
push
xor
xchg
mov
scas
test
xor
pop
fwait
pusha
sub
fisubl
test
lea
pop
sti
pop
push
and
in
outsl
xor
js
cmpsl
xor
popl
push
lahf
pop
in
fucomi
ljmp
lock
push
mov
sub
sahf
inc
xor
jo
rcr
xchg
fsubrs
adc
dec
test
fnstcw
cwtl
push
add
notb
lds
inc
cmp
iret
xchg
sbb
leave
xchg
lds
pusha
test
test
es
jb
cmp
sub
fmull
int3
xchg
adc
push
lds
sbb
jge
out
mov
fs
hlt
pusha
addr16
mov
in
dec
push
out
out
lods
add
mov
cmc
jmp
mov
mov
popa
loope
mov
mov
pop
xlat
int
jge
pop
mov
jne
mov
rorl
sub
xlat
test
addl
pop
push
movsl
mov
inc
jae
xchg
lods
repnz
imul
mov
mov
subb
aas
cmpsb
jg
xchg
mov
inc
push
mov
gs
mov
repnz
mov
mov
repz
orb
mov
movb
mov
enter
es
cmp
cmpsl
aam
scas
pop
xchg
jnp,pt
es
cs
adc
jecxz
inc
push
and
pusha
loopne
add
jmp
inc
stc
mov
insb
in
cmp
mov
inc
add
xor
int
ljmp
jns
mov
mov
lcall
scas
mov
ss
cli
icebp
mov
adc
xchg
fnsave
cld
insl
icebp
sbb
mov
loop
movnti
cmc
sarl
mov
lcall
out
stos
xchg
aam
jb
js
pop
mov
fs
mov
sbb
insb
out
sbb
fidivl
cmp
rclb
mov
sti
icebp
das
push
and
push
les
mov
adc
orb
lahf
jg
xorl
int3
aam
out
nop
lds
mov
sub
xor
mov
cmp
adc
sub
cltd
dec
or
shrb
inc
pop
sbbb
loopne
xchg
arpl
adcb
js
fbstp
out
out
rorl
iret
jl
xchg
icebp
ret
cwtl
jp
mov
lea
adc
or
dec
mov
sub
dec
push
push
adc
jb
pop
xorl
cmp
jge
xrelease
enter
or
dec
stc
lock
xchg
popf
pop
add
fiaddl
add
and
sahf
sahf
inc
xor
fisubrs
pusha
cs
cmp
scas
lcall
adc
popa
pusha
inc
aam
cmp
aaa
adc
push
lods
mov
xor
fwait
shlb
mov
xlat
loope
int3
andb
jg
aad
lahf
stos
call
push
inc
pop
adc
popf
inc
repnz
aam
inc
jl
loop
cmp
mov
sub
push
bound
subl
jae
cmp
stc
dec
test
xor
or
cmpsb
push
pop
mov
push
push
imul
mov
fcom
adc
cli
mov
aaa
stc
push
movsl
out
fldl
das
adc
jp
sub
daa
or
mov
mov
jno
xor
cli
push
push
add
mov
shll
imul
jmp
cmp
ret
ja
cld
fistpl
inc
pop
cmp
shr
imul
imul
stc
push
pop
gs
shlb
pminub
les
mov
arpl
es
cld
dec
push
xchg
pop
mov
xchg
std
test
mov
mov
sub
mov
daa
mov
adc
mov
fs
leave
sub
loop
in
mov
pop
popf
inc
jne
xchg
jmp
push
pop
add
add
mov
mov
mov
aam
push
xchg
notb
cmpsl
mov
lods
and
mov
adc
cltd
add
cli
sti
ret
out
mov
outsb
push
shrl
arpl
mov
jbe
fs
ss
mov
insl
ljmp
inc
mov
imul
sub
fbstp
cmp
aad
aaa
dec
pusha
pop
mov
ss
cmpsb
mov
xchg
mov
in
leave
or
aad
repnz
nop
cmp
adc
sbb
roll
mov
mov
out
in
test
shl
mov
dec
or
adcl
int3
aam
push
outsl
dec
sti
arpl
lock
or
dec
xchg
jno
push
push
dec
das
test
imul
inc
xorb
push
sbb
das
push
cmp
sarl
push
jae
pushl
mov
sbbl
fimuls
sbb
les
xchg
xor
les
push
into
movsl
fnsave
mov
mov
jbe
mov
push
sbbl
mulb
fsincos
xor
pop
ja
add
xchg
jbe
or
xor
mov
lock
xchg
in
leave
dec
in
dec
cmp
cmpsl
out
xchg
push
dec
stos
pushf
cmp
push
mov
movsb
sub
mov
mov
aam
das
loopne
test
push
mov
inc
mov
add
inc
loop
rclb
ret
out
shrb
xor
cmp
lcall
int
adc
mov
cli
dec
stos
loopne
ficoms
int
js
out
ret
int
imul
mov
cmpsl
mov
lods
mov
insb
mov
sbb
xor
data16
pop
mov
rcl
arpl
cmpsl
lods
push
outsl
shlb
test
aaa
mov
arpl
aaa
icebp
aas
jae
mov
out
push
cmc
sbb
cmpsb
or
add
and
gs
fildll
imul
test
sub
push
ficoml
mov
aaa
or
stc
clc
repz
stos
loopne
sub
les
cltd
push
lds
mov
mov
xchg
lds
decb
push
sub
icebp
xchg
dec
sbb
xchg
int
pop
xorb
outsl
in
sbb
jecxz
sbb
lcall
inc
add
dec
mov
mov
in
mov
mov
mov
shrb
push
test
lds
mov
in
cmp
stos
mov
incl
ret
mov
aam
inc
mov
ret
adc
rep
and
addr16
fimuls
cld
hlt
je
shrl
or
cmp
mov
into
scas
test
movsb
test
iret
sbb
sub
cli
rol
and
pop
enter
and
inc
mov
shl
sahf
pushf
push
scas
mov
ret
decl
cmp
push
mov
outsb
xchg
or
fsub
lods
adc
push
lods
js
jb
sub
cli
dec
test
xor
rorb
lret
pop
movsl
mov
xor
dec
sub
cli
outsb
push
test
repnz
shrl
scas
rolb
dec
xchg
rcl
jbe
rcl
cmp
in
cmp
dec
cmpsl
jmp
or
lds
mov
shll
inc
sub
lea
loop
xchg
int3
iret
cli
mov
jg
rorl
fsubr
ljmp
add
lahf
rorb
into
pushf
std
mov
xlat
jae
xchg
enter
lock
ror
pop
inc
adc
es
ss
jbe
fwait
xchg
icebp
inc
jmp
stos
pop
mov
rclb
roll
push
xchg
lcall
lods
gs
outsl
sti
mov
shrb
clc
fadds
push
sbb
imul
fsubs
inc
ret
xorl
sub
out
pusha
hlt
push
fisubs
movl
imul
lds
aaa
in
shlb
cltd
popa
pushl
scas
adc
xchg
mov
fs
mov
loopne
mov
sub
test
sahf
icebp
ret
jp
call
jne
imul
test
jne
sbb
or
sbb
dec
out
pop
xor
fisubrl
rorb
cs
xchg
jns
or
pop
xor
mov
pop
mov
jl
lret
mov
test
ret
mov
sub
scas
lds
jl
and
add
push
sub
popf
pop
ret
cs
aad
and
and
jne
xlat
pop
xchg
and
ror
push
cmc
iret
and
mov
adc
pop
aam
es
call
xor
stos
inc
and
enter
les
lods
and
inc
jnp
lods
scas
in
call
scas
mov
push
test
mov
and
insl
cs
mov
enter
insb
sub
mov
mov
and
jg
jbe
push
into
push
fisttpl
xor
movsb
jp
xchg
or
repz
jle
out
aad
test
xchg
stc
mov
lea
add
loope
dec
pop
clc
inc
sbb
hlt
adc
mov
cmpb
aad
jns
icebp
pop
jb
lock
bound
jno
jns
push
lret
and
xor
push
inc
addl
mov
xchg
inc
stos
push
ficomps
imul
rep
int3
cmp
cmp
inc
fildl
iret
jno
dec
cmc
dec
iret
and
inc
std
xchg
shll
mov
mov
pushl
cld
pop
fdivp
inc
divl
mov
cmp
adc
dec
sub
mov
loop
mov
xor
push
inc
push
or
dec
nop
inc
mov
lcall
fadds
pop
mov
sarl
or
mov
jl,pn
loopne
aas
incb
fdivl
pop
out
test
fidivs
mov
adc
xchg
cld
insl
bound
sahf
orb
pop
inc
fmul
out
dec
push
push
ret
pop
xchg
sub
call
stos
add
stos
or
lods
lock
inc
test
xchg
inc
inc
out
iret
int
xchg
pushf
test
mov
bound
push
call
adcl
add
xor
fildll
mov
sbb
insb
mov
push
sub
cld
pop
shll
add
loope
add
mov
fbld
and
jno
jnp
or
ljmp
sahf
cwtl
add
test
sbb
ret
xchg
sbb
test
fimuls
lods
lret
jge
jmp
fldt
minps
lods
pop
lea
stc
lods
xor
mov
mov
pop
jnp
inc
mov
movsl
dec
push
test
rolb
arpl
test
sbb
icebp
mov
dec
loop
pop
fcmove
lock
call
fidivs
aad
pop
jo
adc
fildl
popf
mov
loope
test
mov
jns
mov
xchg
sub
cltd
xchg
mov
xchg
sbb
push
mov
rorl
sub
outsb
fs
mov
pop
inc
lock
js
subl
in
cli
lret
mov
and
or
fisubs
mov
xor
mov
je
sbb
test
inc
call
movsb
inc
xlat
in
jbe
cmp
rcr
loopne
cmpsl
imul
mov
sub
and
jae
mov
cmp
outsl
jmp
pop
into
cli
leave
and
push
sarl
cwtl
pop
movsb
jno
hlt
and
stos
push
lock
dec
sub
mov
mov
sti
dec
lcall
push
arpl
push
jg
mov
mov
or
push
fsubr
xchg
lahf
fisubrs
cmpsl
inc
lods
sub
inc
mov
cwtl
xchg
sbb
enter
lahf
push
stos
lret
aad
mov
ss
test
or
pusha
push
icebp
pusha
gs
mov
in
leave
hlt
inc
arpl
aad
adc
jl
imul
cmpsl
testb
scas
add
cmp
scas
mov
xchg
xlat
xchg
jge
adc
lret
pop
push
cmp
clc
repnz
lock
ljmp
jo
mov
inc
imul
decb
scas
xchg
sbb
movsb
ds
popf
cltd
pop
icebp
aaa
mov
inc
sbbl
rorb
jbe
inc
mov
push
adc
xchg
pop
test
or
mov
movsl
xor
jb
xor
lahf
divl
xchg
out
movl
leave
xchg
out
xchg
pop
stos
pop
cs
rclb
pop
pop
mov
or
xchg
push
xorb
repnz
lret
retw
or
cmove
xchg
popf
lahf
data16
fwait
mov
movsb
outsl
sti
or
dec
movsl
mov
and
fnstenv
fidivs
xor
cmp
jbe
in
inc
ss
in
mov
stos
lret
hlt
pop
and
xchg
or
xlat
and
testl
mov
jo
aad
mov
outsb
mov
sbb
aad
push
dec
es
mov
xlat
outsl
enter
fwait
movsb
jno
insl
addr16
xchg
adc
aas
sbb
push
add
xor
repnz
mov
xchg
jg
enter
in
jl
sbb
fdivl
insb
xchg
cli
fnsave
mov
jnp
inc
idivl
sbb
ss
dec
shrl
movsb
push
mov
popf
cltd
inc
push
cltd
lcall
out
outsb
hlt
mov
jns
mov
push
mov
adc
in
xchg
push
filds
lret
popa
call
jne
lret
ja
mov
aad
loope
ficompl
push
int3
cmp
dec
leave
pop
cmp
test
dec
dec
sub
xor
in
mov
xchg
ss
fisubl
xchg
int3
test
sbbb
adc
inc
fidivrl
sub
int3
xor
xchg
arpl
mov
loop
add
ja
jp
jg
dec
lret
sbbl
cld
shlb
inc
fs
fnstsw
xchg
jo
imul
scas
xchg
mov
pop
jnp
mov
mov
lods
repnz
movsl
jbe
iret
cmpsb
sbb
daa
dec
lret
mov
add
repnz
test
mov
in
pop
push
jecxz
repz
std
les
mulb
add
inc
mov
daa
daa
mov
and
test
mov
inc
ss
mov
xchg
xor
fwait
sub
jg
les
aam
cs
int
mov
cs
out
pop
notb
pop
enter
scas
int
xor
cs
dec
es
mov
mov
or
mov
aaa
ja
push
cltd
dec
dec
add
js
imulb
andb
fcoml
cli
insl
fs
lret
mov
xchg
setae
jae
mov
sbb
cmp
pop
idivb
or
in
in
push
jp
cwtl
addl
mov
push
es
sbb
test
inc
inc
stc
outsl
push
std
mov
out
fisttps
adc
and
cmp
pop
pop
xor
les
sar
adc
mov
adc
movsl
dec
inc
adc
mov
repz
xchg
les
cs
add
mov
or
addr16
scas
push
sahf
pop
cwtl
aas
mov
and
xor
and
jge
jns
addr16
aaa
into
mov
outsl
xchg
stc
popf
bound
jns
sub
lret
fwait
mov
popa
add
fcompl
out
int3
rorb
gs
xchg
aam
sbb
pop
clc
or
out
dec
jo
pop
cmp
aaa
aas
xchg
inc
mul
and
adc
cmpsb
jle
into
shlb
push
mov
movsb
scas
jl
xchg
jge
adc
movsl
push
out
mov
leave
adc
andl
in
out
fs
cld
scas
mov
js
pop
ja
ljmp
jne
and
addb
pop
lcall
sub
xor
add
jle
cmp
jge
lock
rorl
jecxz
mov
fidivl
movsl
inc
adc
outsl
daa
ret
test
mov
push
out
dec
add
xlat
addb
mov
insb
into
es
lods
xchg
call
xor
sub
jns
mov
ss
inc
rorb
inc
andl
cmpl
stc
mov
dec
repnz
mov
fnstenv
jl
inc
filds
ljmp
fst
shrb
add
popf
cld
ret
sbb
loopne
jnp
xor
mov
into
pop
pushf
sarl
pop
push
rolb
xchg
daa
into
ret
lret
inc
xchg
pop
xchg
xchg
xor
cmp
mov
add
leave
sbb
push
insl
pop
jl
cmpsl
sysexit
dec
jmp
pushf
mul
mov
rcrb
arpl
and
les
stc
and
pop
mov
into
mov
aas
aaa
stos
mov
pusha
test
imul
iret
out
mov
cmp
out
inc
push
sbb
sub
pop
mov
lret
dec
pop
lea
pop
ds
and
out
mov
dec
psubd
stos
cli
popf
mov
repnz
mov
or
or
inc
mov
insb
stos
lds
ret
xchg
push
adc
xchg
rol
insl
rcrb
adcl
adc
dec
xchg
scas
cmp
pushf
repnz
ljmp
pop
iret
mov
jg
jmp
push
out
lods
jecxz
adc
mov
pop
mov
js
fdivs
pop
repz
scas
int
xchg
aam
test
sub
call
pusha
cmpsl
adc
push
adc
js
inc
popa
lods
repnz
inc
popf
xchg
pop
cltd
loopne
mov
test
and
mov
xchg
jo
mov
mov
das
scas
orb
es
mov
cli
dec
int
push
mov
insl
cmp
into
mov
loop
inc
mov
jmp
ud0
std
or
call
lahf
aaa
xlat
lea
and
mov
mov
packssdw
lahf
rclb
push
int3
popa
mov
add
ja
adc
cmp
dec
movsb
cltd
arpl
push
cmp
cs
adc
jnp
stos
jmp
mov
sub
in
mov
sub
cs
inc
stos
mov
arpl
pop
fdivrl
push
dec
dec
es
push
push
es
rcll
xchg
pop
pop
jecxz
cwtl
test
enter
negb
inc
lret
imul
cmpsb
sbb
les
mov
popf
cltd
push
sub
jo
push
scas
lcall
pushf
jno
sub
test
jnp
int3
jg
adc
cmc
mov
rcl
mov
and
mov
lret
jnp
and
sbb
jge
mov
lock
inc
scas
rcrb
adc
inc
sahf
push
xor
pop
sbb
sub
cmp
movsl
dec
fbstp
in
dec
cli
pop
cmp
pushf
sti
push
or
ret
push
ljmp
jo
lret
lret
sbb
inc
xor
cmpb
das
pushf
push
fsub
jno
sbb
xor
pop
mov
cmc
repz
dec
arpl
xchg
mov
inc
imul
pop
push
cmp
xchg
enter
cmpsl
adcl
push
pop
daa
idivb
imul
sbbb
lods
cli
or
sbbl
add
xchg
mov
add
xchg
dec
dec
inc
cmp
sbb
lds
mov
mov
out
or
cmp
xchg
imul
jae
jp
adc
xor
ret
adc
lret
leave
and
xor
push
jg
jg
enter
mov
mov
push
lcall
mov
mov
mov
and
fcmovnu
int
scas
mov
in
lds
push
lret
jle
test
cld
daa
push
inc
add
add
daa
lds
inc
ljmp
jmp
loop
mov
jmp
mov
xlat
push
cmp
mov
cmpsb
decl
out
andb
adc
test
lock
adc
cs
cmc
iret
inc
and
fisubl
push
mov
mov
mov
mov
ror
sbb
or
popa
mov
aad
in
inc
jmp
outsb
fistpll
fdivrs
lcall
in
cli
scas
sti
xchg
mov
jo
xchg
push
and
xchg
or
ret
add
push
mov
cmpl
fwait
outsb
or
and
icebp
add
test
movsb
or
dec
mov
adc
mov
ja
test
mov
mov
dec
dec
outsb
icebp
mov
std
jne
push
inc
inc
movsl
dec
aad
movsb
leave
inc
push
adc
inc
mov
cmp
cltd
sub
pop
das
mov
loope
sub
ss
lahf
ja
lret
xor
cmp
pop
pop
inc
lcall
xchg
jbe
cwtl
into
jg
out
xlat
fldl
lds
mov
mov
daa
dec
hlt
push
sub
push
pop
sbb
cli
andl
mov
xor
mov
dec
je
mov
jecxz
adc
ljmp
ficompl
aas
xchg
dec
inc
mov
loopne
push
inc
out
cmp
leave
int3
arpl
cmpsl
push
add
outsl
mov
fisttpll
or
and
sarb
movsb
subl
scas
xchg
repz
stc
jmp
rorb
pop
xchg
mov
mov
mov
cmp
in
cs
xchg
sbb
outsb
mov
xchg
outsb
bound
xor
xor
imul
inc
xchg
cmp
test
mov
rorl
dec
pushf
aad
daa
lds
adc
and
sub
popa
dec
stos
iret
pop
mov
je
mov
xchg
stos
retw
xchg
or
xchg
bound
lret
and
call
int3
rcrl
in
daa
xchg
adc
sbb
add
or
and
pop
dec
add
cmp
aam
sub
lret
sub
out
loop
dec
ja
mov
jle
push
fsubl
das
cmp
jne
mov
xchg
and
cmp
pop
push
and
out
rcr
mov
dec
jbe
mov
clc
mov
jge
stc
lods
xor
fcompl
jmp
sub
dec
pop
xchg
or
mov
add
xor
cmp
sub
xchg
cmp
dec
mov
aas
stos
testl
inc
fcom
mov
push
divb
mov
movsl
inc
int3
pusha
sbb
pop
test
cmp
pop
mov
cmp
fucomp
fisttpl
sbb
add
rep
lret
stos
cmc
jge
popa
pop
aam
cmpsb
sub
pop
cmpsb
jge
pop
mov
add
out
loop
ret
xor
lea
sub
push
inc
adc
add
sub
outsl
pop
mov
push
adc
aam
neg
mov
dec
inc
loopne
jnp
mov
mov
js
movsl
cmp
into
in
ds
inc
dec
andb
rolb
lahf
lahf
mov
popf
add
lahf
xchg
xchg
pop
sub
mull
je
fadds
dec
mov
mov
add
push
mov
shlb
fsubs
mov
xlat
rclb
mov
mov
ja
rorb
mov
dec
push
movsb
jp
mov
jmp
mov
jl
jnp
mov
jns
mov
fucomp
push
jbe
in
sbb
xor
repz
aaa
popf
ror
cmpps
xchg
sbb
mov
cs
push
dec
cmpsb
pop
das
cmc
loop
and
scas
push
jo
and
sahf
pop
repnz
mov
xchg
rorl
test
aam
or
scas
push
adc
mov
add
ds
or
jo
insb
lds
fwait
jle
mov
out
cmp
out
cmpsb
vmovd
jne
jns
cmpsl
loop
sarl
fildll
mov
out
cmc
xchg
shl
test
test
fstp
or
sub
in
std
out
xchg
mov
or
out
mov
jns
push
push
adc
xor
cmc
xchg
int3
scas
out
test
push
pop
movsl
cmp
and
mov
repz
ja
mov
lea
ljmp
xor
jns
mov
and
rcll
mov
mov
lods
fisttpll
cmpsb
xlat
fldl
mov
mov
and
out
add
call
pop
in
inc
and
jae
jmp
mov
decl
shll
dec
imul
movsb
int3
cs
and
fildl
dec
fsubs
xor
jns
mov
insb
in
xchg
lods
call
fisubs
sti
push
mov
pop
xchg
cmp
xchg
loop
push
into
jno
inc
xchg
adc
orl
push
imul
sti
jp
mov
sbb
jecxz
les
imul
rcrb
adc
mov
andl
pop
insl
movsl
and
repz
pop
icebp
inc
push
and
out
mov
sub
xor
ss
pushf
fimuls
jg
ljmp
aam
mov
xor
movsl
cs
fsub
mov
dec
idivb
xorl
and
lret
lcall
mov
repnz
mulb
mov
xchg
sbb
pop
mov
ss
fisubrs
iret
aaa
pop
stc
call
sub
out
xor
loope
arpl
outsb
sub
cli
fists
sahf
in
outsb
test
mov
icebp
scas
push
xlat
push
sub
sub
mov
mov
cwtl
push
out
mov
sti
xlat
dec
clc
dec
sbb
mov
ret
rorb
or
xchg
dec
jbe
decl
test
sub
ljmp
shll
nop
push
cmpsl
fisubl
mov
sbb
inc
add
push
stos
jle
test
pushf
cltd
sub
xchg
ror
adc
pop
sbb
movsl
mov
pop
lret
push
cli
jge
pop
rcl
mov
sub
out
or
clc
push
sarl
icebp
les
cwtl
repnz
pop
rcr
shrb
aam
pusha
jle
pop
subl
jno
sahf
testl
out
repz
sub
leave
movsb
and
push
jmp
and
xchg
sarl
and
jo
inc
lahf
cmpl
das
push
jmp
sbb
shrb
and
test
call
out
jno
loop
shll
sbb
push
and
stc
ror
outsb
repz
cmc
ror
pop
cmpsb
mov
repnz
pop
push
mov
lock
mov
pop
inc
out
pop
fwait
sbb
ja
push
xchg
inc
dec
and
in
cmpb
mov
pushf
mov
mov
fmul
and
fs
xor
sbb
sbb
jle
lods
out
iret
pop
out
or
or
mov
idiv
adc
or
ja
fcomps
popf
dec
in
cld
sub
sti
fxch
add
lcall
jmp
xchg
jle
or
lret
push
jecxz
sahf
push
pop
lcall
mov
or
dec
cmc
sub
fstps
jnp
or
repnz
cltd
sbbl
mov
outsl
push
jo
cwtl
jmp
inc
mov
int
adc
xchg
lock
mov
fisttpll
mov
test
add
popf
jb
mov
xor
test
inc
xor
cmp
mov
lahf
das
inc
xchg
add
outsb
dec
faddl
mov
mov
into
xchg
decl
int
movsl
dec
push
pop
or
mov
or
iret
adc
lock
pop
or
iret
xchg
xchg
shlb
and
push
xchg
pushf
inc
dec
mov
xchg
shll
inc
inc
add
inc
mov
xlat
inc
xchg
push
hlt
cwtl
sub
repz
push
sub
int
mov
jmp
pushl
iret
fst
mov
or
nop
shr
aas
clc
lods
jecxz
leave
testb
mov
ja
lret
mov
pop
xor
popa
mov
movsl
stos
inc
mov
xchg
xchg
and
js
addl
xchg
popa
js
fisttps
mov
jb
cld
mov
les
loop
popf
mov
hlt
lret
es
jae
pop
test
jne
adc
xor
xor
fsts
cmp
imul
popa
dec
xchg
xor
sub
xor
leave
pop
cmp
jg
sbbl
bound
pop
jmp
push
lock
hlt
inc
rorb
push
call
push
dec
lds
add
mov
test
jge
arpl
lcall
fs
subl
add
sahf
popa
jmp
cwtl
cmc
pushf
out
in
and
mov
in
jmp
je
xlat
mov
push
ret
jp
fs
push
push
sbb
sti
pop
popa
push
push
push
aas
jno
mov
mov
jecxz
stc
bswap
push
and
pop
cmp
lret
test
push
outsb
mov
stos
or
cmp
shll
and
in
sbb
dec
outsl
lds
imul
push
les
icebp
addr16
adc
adc
xchg
ficompl
enter
dec
mov
and
jo
ljmp
push
push
push
ljmp
or
divb
shll
fdivrp
stos
add
cwtl
into
shl
clc
xchg
rcl
mov
call
sbb
mov
pushf
adc
into
pop
fnstcw
mov
arpl
fsubs
fisttps
imul
out
cmpsb
pop
pop
mov
in
fidivrs
lret
loope
lods
leave
cmc
stos
data16
xchg
push
pop
mov
shrb
dec
pop
mov
cmpsl
int3
sti
push
pop
push
or
mov
mov
jbe
xchg
out
das
jb
das
imul
sub
sbb
push
push
std
xchg
pop
mov
shl
pop
ret
clc
add
lret
das
mov
push
mov
out
xor
push
pusha
ja
jge
xor
mov
push
xor
push
bound
mov
lds
jle
or
push
ret
adcl
sti
mov
adc
popf
out
xlat
pop
push
mov
cli
bound
ds
imul
cmpsl
mov
mov
scas
pop
jb
and
pop
xchg
adcb
sbb
mov
shrb
sub
enter
shll
iret
addb
adc
xor
pushf
pop
ret
push
or
insb
sub
inc
inc
jae
mov
push
mov
mov
xor
call
pusha
cld
dec
xchg
add
out
in
jg
xchg
jg
mov
jnp
push
mov
jecxz
add
ret
lret
xchg
ljmp
add
dec
lods
push
sahf
fdivr
in
je
cli
aas
daa
xor
jne
sbb
ret
out
adc
jae
ret
pop
push
adc
sub
mov
pop
scas
iret
push
adc
or
add
pusha
push
ljmp
push
icebp
push
movsl
cld
shrl
pop
jae
sbb
jo
lret
daa
shll
xor
pop
scas
xchg
daa
mov
push
movb
lds
sarb
push
mov
push
jl
cld
cmpsl
fnstsw
pop
andb
xor
loopne
dec
repnz
fsts
mov
test
aas
cmp
sahf
mov
jbe
inc
in
or
in
or
in
daa
or
jg
push
xor
jle
sub
adc
jp
jno
xchg
pop
sub
cld
test
cmpsl
jg
jb
sub
mov
xchg
push
lds
dec
lcall
fucom
xor
jmp
cmc
ja
lahf
and
cmpsl
jmp
push
cmc
jo
mov
hlt
rcr
aad
sbb
imul
dec
repnz
inc
bts
mov
or
or
frstor
inc
push
cmpsl
fdivr
loopne
loope
inc
add
mov
push
outsl
jle
les
cwtl
fbstp
fmull
mov
push
andb
mov
test
push
popf
xchg
dec
icebp
sub
fstp
popa
mov
insl
inc
dec
sbb
stc
jl
nop
cmpsl
sti
pop
mov
mov
scas
add
test
dec
fsubrs
ja
insb
iret
arpl
pop
xorb
xchg
fs
sbb
cltd
loop
push
addl
stc
xchg
xor
cmpsb
out
iret
cmp
sbb
insl
int3
rep
jo
insl
lea
fldcw
xchg
loop
mov
lds
xor
out
sub
adcb
sbb
push
aad
lods
call
pop
nop
scas
je
in
popf
sub
jnp
sub
jge
cwtl
lods
orb
js
out
xchg
dec
outsl
insb
adc
inc
sahf
adc
cwtl
jge
lds
std
divl
dec
jne
pop
mov
or
inc
xchg
pusha
push
into
rclb
dec
push
sahf
jmp
sbb
nop
inc
loop
xor
cmpsl
pushf
movsl
xchg
rcl
sbb
lds
pop
fwait
sbb
mov
mov
fdivrl
cs
lret
pop
cmc
dec
mov
or
pop
arpl
loopne
hlt
xchg
sbb
push
std
lods
or
mul
scas
jno
mov
cmpsb
mov
lods
mov
movsl
mov
sbb
test
enter
dec
fwait
pop
mov
rcr
mov
xlat
nop
dec
les
sti
mov
maxps
mov
xor
rorb
xchg
insl
jmp
adc
test
in
data16
fnstenv
leave
jl
push
mov
dec
inc
jnp
daa
xchg
sub
dec
adc
cmc
jecxz
adcl
fildl
jecxz
insb
xchg
clc
stos
xlat
shrb
cmpsl
popf
in
inc
xor
dec
push
cmp
outsb
push
lds
aam
test
test
nop
mov
cmpsb
andb
lds
jb
lods
leave
stc
and
lds
dec
mov
add
int
mov
inc
jmp
jno
cmpl
inc
xor
hlt
das
daa
cmp
push
push
arpl
std
push
jl
jae
dec
dec
push
sbb
and
loope
jne
addr16
lea
mov
and
jg
xor
sbb
mov
adc
sbb
add
push
jb
in
mov
inc
pusha
mov
xchg
es
aaa
arpl
lods
and
push
jp
loope
mov
inc
cmc
xor
test
dec
test
inc
ja
xchg
xor
stos
out
mov
xlat
xchg
cmp
sarl
pop
adc
in
dec
cli
call
stos
decl
xor
pop
icebp
mov
pop
push
mov
cmp
out
dec
bound
xchg
sbb
outsl
out
dec
das
and
ficoms
mov
movsb
pop
rol
leave
outsb
sub
or
nop
mov
jp
lds
xor
sti
dec
mov
hlt
sarb
cld
fwait
mov
scas
xorb
jmp
add
mov
and
int
lods
into
in
xor
mov
repz
icebp
mov
sub
sbb
daa
es
rcl
and
xchg
mov
int
pop
and
aad
xchg
ret
push
test
and
aam
or
roll
outsl
cmp
jbe
test
jmp
xchg
mov
push
adc
cmpl
outsl
outsl
adc
xchg
js
stc
pop
cmpsb
add
out
and
mov
je
jno
mov
push
pushf
mov
jb
dec
into
js
sti
cmp
test
int3
cli
cmpsl
inc
lret
sub
cld
mov
jmp
stos
pop
test
mov
popf
sbb
loope
sbb
xor
add
lods
dec
sbb
sub
int3
jnp
cmpl
test
dec
int3
fucomip
cmp
leave
xchg
jmp
imul
and
outsl
enter
and
and
xor
sbb
fldt
inc
xchg
leave
jg
cltd
mov
sarl
jmp
and
inc
add
push
fiaddl
mov
mov
cmp
aad
idivb
pop
xchg
dec
out
int3
adc
mov
ljmp
add
sub
and
sbb
popa
fdivrs
dec
jnp
lahf
jl
sub
cld
out
gs
sbb
mov
fldl
jno
cmpsl
loop
adc
rolb
cmpsl
pop
xchg
loope
or
fistps
outsb
dec
add
adc
pushf
xchg
pop
cld
movsb
loopne
mov
ljmp
jne
ja,pt
xchg
shrb
in
or
test
iret
lods
and
xchg
sub
cld
lock
jo
mov
push
out
pop
jg
mov
sub
sahf
rolb
xor
dec
mov
andb
js
dec
stc
ss
test
push
mov
fs
enter
loopne
xchg
sahf
enter
popf
sub
out
rorb
jmp
push
icebp
cmp
push
ljmp
sti
test
outsl
popa
movsl
sbb
push
mov
pop
xchg
or
daa
jmp
push
sub
test
jb
sub
mov
and
gs
sub
xchg
mov
jge
pop
mov
stc
jns
mov
cmpsb
mov
mov
push
dec
add
mov
jnp
mov
mov
inc
lcall
xor
pop
add
in
adc
cmpsb
outsb
fdivrs
pushw
iret
aam
mov
cmp
cmp
jns
loop
and
dec
dec
movsl
pop
jmp
pop
pop
and
pop
add
jbe
or
push
or
int
and
or
mov
push
fdivr
pop
cltd
xchg
lock
fimuls
lahf
subl
movsl
xchg
jmp
lret
pop
pop
mov
xor
xor
mov
stos
into
fdivrs
xchg
or
ds
subb
jns
arpl
sub
mov
scas
jmp
jmp
lcall
outsb
movsb
add
test
hlt
testb
lds
push
cltd
inc
ljmp
cwtl
std
fldcw
pop
push
add
pop
loope
add
mov
cmc
mov
bound
xchg
movsl
sub
fwait
inc
dec
sbbb
xchg
out
mov
fsubl
cmp
loope
hlt
imul
shrl
jnp
cmp
mov
pop
cwtl
push
jae
pushf
jp
daa
push
ret
aas
push
fdivs
lcall
xchg
mov
inc
and
loope
pop
sahf
sub
inc
sahf
orl
fwait
add
aas
sbb
push
xchg
daa
jmp
lds
lcall
mov
sub
fwait
fwait
xor
nop
mov
js
or
out
test
mov
out
cmc
lds
mov
lret
fisttpll
pop
inc
push
cli
mov
dec
mov
push
repz
push
stos
push
cmpl
sub
fnsave
fadds
mov
jge
lret
outsl
mov
jle
lods
fdivrl
push
mov
dec
pop
lret
mov
sbb
xlat
loopne
push
mov
loope
or
push
std
dec
and
inc
mov
cltd
test
jo
jne
sub
outsb
out
outsl
pushf
call
push
cmp
push
sub
mov
adc
jno
test
sbb
push
xchg
xchg
je
scas
rcrb
aas
xchg
clc
adc
fisubs
lret
cmp
jno
mov
fnstenv
add
dec
pop
repz
bound
int3
inc
cld
cmp
pop
push
xor
outsb
fidivs
push
out
push
push
add
pop
ffreep
mov
outsl
push
inc
fidivl
into
test
or
arpl
loop
add
xor
loope
xchg
loope
not
jge
fbstp
test
arpl
dec
stos
dec
repnz
mov
out
pop
push
pop
and
in
add
imul
sbb
sub
push
outsl
inc
fsubr
xchg
jle
pop
into
scas
shrb
test
test
or
lods
aad
and
add
in
xchg
js
xchg
cmpl
imul
xlat
jns
fldcw
arpl
mov
sub
sbb
jmp
test
lds
jno
ljmp
jnp
mov
lock
lret
fs
jae
xchg
push
lahf
xchg
aaa
in
jae
or
leave
mov
jmp
shll
pop
and
jp
xchg
out
sub
int3
pop
pop
cmp
or
ret
and
aam
push
jl
rcrl
cmp
sbbb
sbb
fcmovbe
ret
mov
imulb
cmp
mov
stos
adc
xchg
jmp
mov
xchg
nop
xor
scas
stos
call
iret
leave
jnp
mov
ja
jg
shlb
loope
and
and
mov
adc
dec
fs
cld
xor
and
addr16
mov
dec
into
fisubs
sbbl
cmpsb
fsubrs
stc
and
mov
sub
es
xor
mov
push
pop
rcrb
jbe
aas
scas
mov
mov
loop
jecxz
adc
or
mul
inc
inc
inc
push
in
out
jne
adc
mov
xlat
mov
push
mov
out
pop
add
adc
dec
xchg
mov
xlat
xchg
loope
mov
mov
insl
inc
pop
iret
cmp
pop
outsl
jmp
or
sub
loope
test
xchg
imul
je
bound
shl
gs
shrb
adc
xor
mov
ds
stos
pop
cmp
test
xchg
sbb
daa
in
xchg
push
push
jbe
icebp
mov
xorl
sub
sbb
test
adc
rolb
and
sub
imul
cmpsb
ja
push
xchg
dec
lods
test
insb
adc
mov
adc
mov
aad
jmp
xchg
dec
inc
cmp
add
pop
mov
les
cwtl
jmp
and
scas
int
or
in
and
jnp
adcl
out
xchg
fwait
sbb
shr
jecxz
mov
jnp
push
ja
xor
adc
add
jne
lds
push
cmp
getsec
js
test
jmp
mov
sbb
lods
cmpsl
stos
pop
pop
dec
push
cld
fsubrs
imul
jge
sub
fimuls
xor
pop
xorl
addr16
call
in
sub
push
and
imul
fwait
sub
push
adc
rolb
shrl
adc
ds
leave
bnd
mov
movsb
adc
pusha
adc
stos
and
cmpsb
mov
sahf
cmpsb
jle
loop
mov
shlb
cwtl
or
jo
shll
imulb
rclb
scas
lahf
test
xchg
je
jecxz
xchg
aad
push
jbe
sub
cmp
mov
push
fwait
icebp
cmc
test
push
stos
dec
xchg
scas
xchg
mov
add
add
movsl
dec
dec
rcll
pop
pop
xor
pop
cmp
ljmp
repz
inc
neg
or
mov
arpl
ret
fwait
mov
mov
or
sbb
pop
jnp
scas
repnz
les
xor
xchg
add
fcmove
push
sbb
lock
callw
ja
add
mov
jb
ds
jge
xor
inc
sub
popf
dec
pop
dec
mov
cmpl
mov
jno
cltd
lock
cmp
data16
lock
test
cmp
xlat
addr16
lcall
adc
lods
inc
xchg
aas
cmp
mov
std
xor
push
xlat
pop
fxch
and
push
es
cwtl
jno
sub
out
pop
mov
movsl
xor
pop
aad
add
mov
addr16
out
lds
mov
ret
xchg
push
jns
pop
mov
insl
bnd
out
adc
js
ljmp
cltd
mov
adc
jmp
cld
jg
xchg
jmp
jp
and
xchg
fwait
clc
scas
add
push
add
xor
add
inc
das
jmp
push
test
and
mov
fs
stc
orb
cwtl
adc
jbe,pn
mov
or
jecxz
push
xor
fbld
imul
icebp
sbb
jle
out
xchg
pop
mov
repnz
cmp
or
fdivl
jb
lods
pop
jno
cmp
cltd
ljmp
pop
cmp
push
push
into
xchg
or
cmp
cmp
das
int
inc
mov
dec
push
iret
popf
in
adc
pop
filds
mov
xchg
and
xchg
cwtl
cmp
sbb
push
popf
mov
dec
sub
and
lds
mov
mov
enter
das
fwait
dec
imul
sbb
or
jae
lea
push
xor
push
mov
pop
mov
mov
push
data16
mov
vcvtps2dq
mov
call
mov
aad
out
mov
std
out
pusha
pop
orl
pop
in
int3
lea
mov
fisttpll
int
xor
mov
leave
sarl
xor
out
pop
sti
push
outsl
dec
in
outsl
adc
lea
adc
in
pop
lahf
xchg
mov
mov
ljmp
cmp
pop
fdivrs
sbb
cmpb
pop
jp
xor
push
lret
lret
inc
loopne
sbb
mov
cmpsb
cmp
test
xchg
ds
mov
leave
aam
lods
sub
lret
loopne
pop
xchg
lret
cs
inc
fstpt
and
call
and
mov
das
pop
sbb
mov
lcall
jb
in
scas
mov
test
int
push
push
add
scas
rcr
inc
pop
dec
jl
out
leave
sub
cmp
repnz
mov
mov
jb
jo
insl
cmp
dec
aas
stos
and
nop
scas
push
dec
xchg
dec
sbb
mov
ret
add
cmpsb
pop
mov
loopne
into
mov
repnz
imul
mov
sub
mov
and
cs
into
negl
ret
xchg
aam
cmp
jg
int
aam
notb
orb
testb
and
add
fchs
dec
rcll
adc
leave
loop
test
sbb
and
rorl
xchg
fistl
push
out
movsb
cli
fs
mov
push
popf
dec
arpl
mov
xchg
stc
fisttpl
rcl
lret
mov
mov
test
cmp
in
adc
dec
test
xchg
xor
cmpsl
imul
jmp
mov
outsb
mov
push
pop
orl
shlb
mov
fwait
push
lods
imul
lret
xor
and
push
mov
arpl
sbb
shrl
sub
mov
in
sbb
imul
movsl
or
sub
stos
ss
dec
pushf
shr
add
inc
insl
inc
jmp
sub
cmpsb
cmp
or
ret
stos
mov
push
pop
aam
movsl
and
cmp
mov
and
movsb
les
sbb
sub
insb
cltd
cmp
subb
adc
sub
pop
and
stos
jne
mov
xor
sbb
arpl
cli
mov
imul
xorb
bound
aas
adc
inc
cs
stos
xchg
ds
mov
lahf
enter
jmp
xchg
inc
andl
xor
orb
push
popf
xor
cld
push
fs
sbb
sub
sbb
and
int3
aad
ficoms
xlat
cwtl
cmp
dec
mov
mov
add
push
arpl
mov
repz
mov
jmp
jle
inc
mov
mov
outsl
lret
mov
imull
xchg
jmp
lahf
mov
in
addr16
jecxz
cltd
cs
push
jo
cmp
ret
js
mov
lret
nop
test
scas
movsl
mov
test
cs
insl
inc
adc
mov
dec
push
mov
fwait
pop
mov
ds
test
pop
les
in
ss
jno
into
sbb
and
mov
mov
mov
test
jge
arpl
scas
sahf
jnp
rorb
jmp
mov
xor
lock
repnz
push
push
add
mov
add
out
sbb
inc
mov
pminub
cwtl
or
inc
jp
pop
inc
pop
sbb
or
test
pop
xchg
out
jne
ja
dec
shll
in
or
sbb
adc
mov
jnp
popa
out
mov
jo
mov
jmp
addl
lds
cmpsb
js
mov
pop
lahf
inc
adc
jl
push
push
add
ja
jmp
movsb
pop
mov
imul
jo
jo
cli
roll
mov
xor
icebp
xchg
scas
sbb
imul
sbb
fimull
iret
cmpsb
or
and
mov
aas
popa
xchg
int3
mov
mov
sti
scas
push
fistpll
or
fnstenv
insb
push
lcall
pop
mov
leave
xorb
pop
mov
out
and
mov
fiaddl
pop
jo
rol
bound
push
into
inc
fadds
int
test
out
popf
pushf
out
ja
shlb
repz
into
aad
aaa
push
push
pop
sbb
xchg
in
jne
jnp
pop
out
movsb
jmp
inc
cmp
pop
pop
rcrb
stos
sub
mov
shll
jnp
jno
jle
ja
cs
mov
jno
call
popa
mov
enter
aaa
mov
pushf
adc
jbe
test
int
mov
xchg
imul
xchg
sbb
mov
mov
jnp
push
int
mov
fucomip
mov
or
xor
pop
and
cmp
mov
das
xlat
pushf
in
mov
or
mov
pop
push
mov
int3
xchg
adcb
lret
dec
xlat
clc
and
test
nop
inc
js
pop
mov
push
sahf
ja
mov
leave
xchg
aad
sbb
scas
push
sub
std
idivl
mov
lds
movsb
ret
push
jmp
movhps
jg
movsl
pop
js
mov
push
adc
or
outsl
push
mov
cmpb
addb
aam
push
loop
daa
shlb
fldenv
pop
fcomi
jmp
mov
icebp
movsl
js
sbb
das
repnz
enter
push
pushf
popf
add
lret
sub
xchg
roll
lds
nop
out
fs
dec
cld
dec
int3
sub
fdivs
into
jmp
push
pop
lret
sub
hlt
xlat
mov
mov
xchg
push
fadd
mov
sub
inc
push
pop
jl
ret
jae
test
push
dec
mov
xchg
ljmp
rolb
xor
xor
pop
notb
jo
add
pusha
jmp
stc
push
adc
loopne
sbb
inc
push
jbe
push
xchg
into
je
xchg
jl
lret
push
and
insl
cld
inc
cwtl
andb
setb
popf
out
jne
mov
leave
lret
movl
push
lcall
ljmp
pop
inc
fsubr
outsl
mov
nop
inc
les
push
mov
out
lea
lods
in
dec
jmp
loope
sbb
in
leave
xchg
mov
xor
jno
and
xor
cltd
ss
pop
repz
lds
push
lcall
ljmp
pop
fldenv
adc
adc
in
in
and
out
adc
sbb
jne
push
mov
push
mov
out
movsl
push
push
and
and
cmpsl
adc
imul
and
jo
shrb
push
xchg
out
nop
jne
arpl
sub
mov
sbb
push
shlb
enter
add
mov
test
dec
pop
jbe
and
adc
dec
adc
mov
or
or
imul
movsb
sarb
fildl
mov
pop
stc
cmp
pop
lds
jg
inc
cmp
and
xor
and
push
or
fbld
push
pop
cmp
push
arpl
iret
inc
and
mov
cld
shll
xchg
js
rclb
jo
fimuls
sbbl
or
test
adc
test
out
jno
or
dec
lahf
neg
decb
not
repz
sbb
cmp
pop
popa
in
negb
inc
scas
xchg
lods
insb
and
mov
add
sub
scas
pop
ss
fstpl
adc
inc
ja
xor
mov
cmp
pusha
push
lock
stos
cmpb
jecxz
stos
mov
scas
loopne
jns
imul
repz
sbb
mov
xchg
sbb
push
pop
mov
jns
jbe
test
xor
stc
mov
and
sbb
lea
lds
in
jmp
fldcw
jne
and
ljmp
xchg
rcr
outsl
cmp
push
out
lret
andl
mov
imul
cwtl
pushf
fnstenv
adc
test
mov
lods
outsl
lods
int3
inc
rolb
fs
push
cmp
jo
jge
push
enter
call
das
sbb
inc
sbb
fldcw
sbb
xchg
dec
pop
mov
mov
out
pop
sbb
rcrb
outsl
sbb
pushf
rolb
xor
jmp
or
sbb
mov
sbb
in
xchg
into
fcmovb
adc
sbb
call
rcrl
sbb
test
into
test
mov
ss
pop
jnp
pop
inc
in
hlt
arpl
cmp
sub
mov
lahf
rcl
call
arpl
xchg
int3
pop
iret
sbb
dec
mov
aas
in
pusha
add
pop
aam
stos
insb
jno
jns
pop
fcom
pop
xor
xchg
fs
hlt
or
dec
cmp
mov
cld
jle
cmc
jl
nop
cli
mov
xlat
lea
xchg
mov
call
add
and
inc
sahf
mov
sbb
in
inc
adcb
in
mov
mov
jl
dec
jb
test
push
push
js
outsb
xchg
std
xchg
shlb
leave
adc
stos
adc
cmp
popf
cmpb
lret
ret
sbb
or
movl
addr16
data16
enter
leave
out
cmp
cmc
into
iret
xchg
gs
cmpsb
cmp
jmp
stos
icebp
pop
sahf
or
or
xchg
mov
ficompl
aaa
push
or
test
into
xchg
mov
add
xchg
and
shlb
out
or
pop
dec
push
cmpsl
dec
xchg
lcall
in
subl
xchg
adc
fisubrl
scas
movsl
js
adc
pop
mov
dec
andb
inc
ficomps
movsl
shr
js
jg
sbb
xchg
inc
pusha
in
xchg
jecxz
adc
fsubr
test
cs
inc
xchg
or
je
and
insl
fnstsw
pandn
fcoms
test
mov
dec
pop
repz
out
addr16
xlat
faddl
pop
fbstp
enter
sbb
addr16
cmp
xor
xchg
ja
mov
lds
lock
pop
push
push
hlt
push
push
mov
adc
pop
xor
jne
mov
xchg
fcoml
cmp
lcall
leave
inc
hlt
stos
and
xor
add
lret
outsb
repnz
movsl
xchg
aad
in
test
shrb
stos
lea
mov
cmp
inc
add
jmp
fisubrs
fistpll
js
jbe
cmp
sbb
mov
and
out
xor
mov
or
iret
dec
in
xchg
scas
pop
cli
shlb
mov
adc
pop
bound
shll
call
adc
push
pop
ret
psllq
enter
cltd
xchg
pop
imul
push
adc
gs
pop
pushf
lret
push
inc
mov
insb
lods
jb
xchg
jmp
scas
mov
and
lods
mov
shl
adc
dec
mov
loop
stos
adc
test
popf
mov
aas
jo
arpl
xchg
jl
inc
loopne
jmp
push
stc
out
jo
arpl
pop
sub
mov
or
daa
adc
jmp
clc
ficoml
cs
call
dec
mov
dec
push
dec
mov
test
jae
in
dec
cmpsb
dec
call
pop
mov
sub
inc
jge
adc
sarb
xchg
pushf
mov
and
xchg
push
mov
or
popf
jns
mov
jl
mov
cwtl
cmp
imul
lds
mov
lods
loope
fcmovne
jne
jmp
mov
imul
mov
cmpsb
insl
cmpsl
cli
lock
fisttpl
push
rcrl
scas
lahf
or
sub
repz
in
sbb
jmp
popf
sahf
testb
mov
insb
mov
hlt
and
imul
test
rorl
faddp
js
xchg
sub
icebp
pop
stos
repz
sti
push
mov
dec
cs
lods
imull
pop
push
vpmaxub
xor
sub
mov
jb
cld
rcrl
hlt
leave
aad
int3
lds
inc
repnz
ja
scas
aad
add
jae
sahf
dec
pop
fs
adc
xchg
movsl
jbe
bound
in
shrb
cmp
xchg
jo
aas
fsubrs
and
loopne
ljmp
xchg
sti
jle
les
aam
cmp
push
xchg
orb
sub
outsl
inc
mov
lds
into
fdivrl
jbe
clc
in
or
out
pusha
sahf
xor
mov
mov
repnz
pop
mov
outsl
pop
jp
sub
jno
pop
inc
jmp
cmp
mov
iret
push
mov
cmc
xchg
jle
xchg
push
cmp
shr
sub
inc
push
push
xor
popf
mov
lock
mov
cmc
mov
cld
outsb
xor
addl
test
out
mov
stos
lea
pop
jb
push
sbb
dec
into
repz
cmp
add
ds
mov
loop
push
aaa
imul
std
rcrb
mov
add
iret
cmp
adc
daa
aam
mov
hlt
mov
jnp
insl
mov
scas
add
add
rcr
gs
jmp
mov
inc
aaa
and
dec
aaa
mov
movsb
mov
push
shrl
stos
pop
test
lcall
mov
orb
jmp
in
in
mov
lahf
xor
mov
xchg
rcl
mov
and
popa
lahf
std
add
lret
mov
lock
in
fistpll
xchg
sbb
add
ret
jae
mov
cmp
loop
outsb
lock
mov
repz
in
push
or
lock
sub
int
xchg
inc
xchg
cli
cmp
imul
xchg
fldt
inc
ljmp
hlt
pop
xor
sti
mov
push
fbld
cmp
test
sub
shrb
jae
sbb
inc
sub
mov
jecxz
xchg
xchg
sub
adc
push
mov
ss
idivl
dec
les
xchg
inc
outsl
cwtl
lds
lret
sbb
push
mov
cld
lahf
push
mov
inc
insb
mov
mov
gs
mov
push
fdivrp
jl
dec
imul
mov
sub
daa
rcr
xchg
and
es
sbb
sbb
inc
or
fisttps
jo
arpl
xor
shld
popf
stos
add
add
and
lea
cwtl
adc
xor
lods
cmp
cmpsl
mov
aad
mov
sub
shrb
jns
pushf
push
sub
sub
aam
enter
test
cmp
push
rclb
xlat
inc
fwait
ss
xchg
aas
pushf
not
data16
das
repnz
jge
cmp
loope
pop
fdivrl
inc
scas
dec
xchg
out
dec
imul
sbb
test
mov
lds
sub
orb
pop
ret
gs
dec
inc
into
dec
xchg
mov
mov
into
jno
arpl
push
movsl
sbb
fcoml
pop
sub
das
fildll
sahf
fmul
int3
xchg
subb
mov
nopl
push
aas
mov
cmc
push
jo
clc
hlt
sar
sub
lock
cmpb
or
sbb
les
xchg
mov
addr16
mov
inc
xchg
lods
ret
xor
push
dec
sub
and
neg
pop
decb
dec
jl
fdivrs
jge
pop
filds
loope
xchg
cmp
ss
arpl
sahf
cmp
in
cmpsl
cwtl
dec
sub
and
lahf
xchg
or
sbb
xchg
inc
insl
sub
jp
fcompl
mov
pop
sti
nop
ret
dec
xor
mov
dec
or
or
inc
ret
lds
lcall
pop
xorl
dec
inc
xchg
xchg
movsl
and
lahf
sub
test
or
sbb
in
scas
mov
add
sbb
mov
mov
mov
adc
out
cmp
push
push
push
adc
and
pop
push
mov
add
aad
jmp
xchg
jp
xlat
addb
mov
adc
mov
insb
dec
push
clc
dec
mov
mov
fbld
xor
cmc
inc
fcmovu
lahf
add
ret
data16
cmp
xchg
dec
into
test
or
sub
rcrb
or
xor
jecxz
imul
loop
push
mov
aas
cmc
cmpsl
mov
fisubrs
sbbb
add
or
loopne
or
inc
cwtl
repnz
stos
lea
out
or
inc
inc
cmp
jae
sub
orl
leave
xor
sahf
inc
enter
and
push
cltd
into
inc
rol
xor
ljmp
xchg
lods
push
lock
xor
pop
push
pop
loopw,pn
movsb
push
jbe
loopne
movsl
adc
sub
pop
push
pop
les
xchg
subb
sub
sbb
push
cmp
inc
mov
or
scas
gs
sbb
pop
movsb
daa
sub
sbb
out
add
lcall
les
cmp
mov
or
xor
call
sub
xor
sti
mov
push
lods
outsb
add
scas
lods
enter
pop
in
ret
sbb
rcrl
stos
cmpsb
sub
popa
test
in
cmpsl
xchg
inc
ret
cwtl
jmp
jae
ret
cmp
xchg
cmc
aam
adc
jno
imul
mov
pop
iret
pop
mov
loope
lods
push
sub
xlat
cmc
lahf
cmc
ss
sub
pop
mov
lea
xchg
mov
lahf
divl
shl
xlat
test
dec
iret
xor
ss
inc
pop
jg
fs
stc
stc
in
ret
fld
mulb
out
addb
jg
ret
mov
aad
stos
daa
jbe
stos
mov
add
mov
scas
sub
pop
mov
xchg
and
das
int
mov
stos
testb
xlat
push
xchg
rcll
dec
rcr
enter
push
or
jbe
loop
xor
sub
aaa
in
push
dec
mov
dec
sbb
xchg
hlt
pushf
cmp
daa
int3
fcomps
mov
or
out
sbb
test
sub
lods
scas
inc
pop
jg
sub
test
push
adc
mov
lds
mov
ficoml
or
testl
jmp
ret
mov
mov
imul
inc
xlat
cmpsl
xchg
iret
pusha
mov
gs
adcb
cmpsl
mov
imull
insl
xchg
int3
mov
and
int
jne
test
mov
movsl
enter
push
mov
imul
push
mov
lahf
lods
jg
in
fdiv
sub
pushf
and
neg
jl
loope
or
mov
popf
sbb
sub
mov
xor
mov
test
sub
enter
ret
xlat
jno
and
sbb
pop
leave
pop
inc
sbb
push
out
jns
faddl
scas
mov
fwait
negb
cld
or
cmpsb
or
and
pop
push
jle
jle
push
pusha
jl
pop
loope
ret
nop
pusha
orl
mov
stos
jmp
cmc
mov
inc
mov
add
les
jns
popa
repz
xchg
outsb
inc
outsb
loope
pop
lret
xor
sbb
outsl
xchg
iret
inc
bswap
cmpsl
test
push
aas
lcall
inc
cmpsl
ret
lahf
hlt
in
inc
outsb
xchg
jle
jns
faddl
sahf
adc
xchg
push
push
pop
xchg
xchg
cltd
cmp
jnp
scas
orl
cmp
cltd
fldt
push
xor
fwait
out
sbb
push
xchg
sbb
js
ret
int
dec
mov
enter
adc
test
int
into
sub
and
or
fwait
ret
sub
pop
imul
push
inc
xchg
pop
ja
dec
popf
and
inc
and
mov
int3
lods
adcl
fimuls
or
mov
mov
sub
pop
out
outsl
dec
sbbl
pusha
outsl
clc
lds
out
pop
pop
aaa
inc
scas
sub
mov
xor
int3
call
inc
shl
mov
imul
adc
andb
sbb
or
test
lret
dec
js
inc
cltd
jg
loope
pusha
popa
add
fdivrs
push
rorl
mov
mov
jg
mov
jns
gs
and
xor
mov
inc
hlt
mov
jno
sub
lea
cltd
ret
xchg
adc
sub
and
jecxz
incb
lret
jno
loopne
es
or
mov
sub
push
inc
jo
add
push
add
sbb
mov
push
arpl
push
jg
or
fisttps
rclb
aaa
mov
adc
cmp
lods
cli
jo
inc
test
or
fisubrl
inc
sahf
jne
ds
fs
mov
shlb
mov
test
pop
lds
and
test
inc
cbtw
lods
gs
push
dec
lret
lods
push
and
and
out
push
and
inc
push
nop
inc
int3
out
leave
lock
aam
cli
scas
ret
mov
ffree
xchg
xor
sub
xchg
lahf
frstor
xchg
push
out
fcomip
fisttpll
fwait
and
out
jae
push
andb
mov
out
jecxz
ret
push
int
scas
repnz
loope
or
fcompl
pop
rcrb
and
insb
stos
icebp
imul
iret
into
sub
and
or
sub
cltd
pop
push
inc
push
jne
and
in
std
mov
adc
ljmp
lods
out
test
loopne
adc
fs
add
cltd
dec
ret
pop
fwait
xchg
lds
xchg
fwait
ja
lahf
xchg
rcl
insl
xchg
lea
rorl
loope
inc
fiadds
add
into
rorl
insl
fisubs
mov
pop
cmp
ja
lahf
lret
rcll
js
aas
rorb
inc
ja
lahf
pusha
shlb
pop
dec
push
jmp
js
pop
mov
fadds
mov
push
subl
roll
lods
jno
movb
imul
insl
neg
fwait
mov
pusha
outsl
mov
aad
enter
xchg
sarb
sub
iret
mov
iret
int3
iret
lea
mov
mov
loop
stos
mov
dec
or
movsl
inc
dec
cs
xchg
scas
fsubrl
shrb
lods
lods
cmp
mov
fstps
sahf
shrb
fwait
mov
ficompl
fwait
shlb
push
push
fdivrs
mov
mov
sub
push
or
xchg
lcall
push
jmp
iret
dec
adcb
push
or
in
lss
mov
or
sub
popf
outsb
push
enter
int3
mov
cltd
mov
jns
sub
sti
pop
xchg
mov
daa
js
mov
or
test
sub
addr16
aam
fdivs
lret
shrl
lahf
mov
mov
pop
scas
sbbb
pop
and
adc
push
int
je
leave
push
movsb
dec
sub
lock
pop
scas
call
out
test
cltd
in
fcomps
outsl
fyl2x
sar
cld
cmp
jecxz
out
mov
lds
cmp
data16
cltd
sbb
inc
imul
in
jle
adc
mov
shl
aas
push
mov
pusha
and
test
iret
jns
dec
pop
lret
inc
rcrb
fwait
test
pop
sbb
mov
jecxz
cmpsl
or
inc
sub
scas
aas
cmpsb
jo
in
mov
dec
jle
xor
out
push
hlt
sbb
lcall
outsb
stc
mov
js
cwtl
push
pop
mov
inc
hlt
in
je
aas
xchg
dec
out
fsubrs
ss
sub
icebp
mov
out
or
push
dec
add
pushf
mov
dec
dec
out
sub
enter
jo
jmp
lcall
pushf
sub
popa
or
jnp
loopne
fs
icebp
jnp
in
call
pop
in
sahf
test
add
or
insb
scas
xchg
mov
xor
jmp
push
cmp
leave
mov
out
cmpsb
filds
stos
in
rcrl
jo
clc
sbbb
orl
in
adc
shlb
xor
xor
fadds
adc
sbb
dec
lods
mov
cmpb
fs
and
and
daa
in
pop
xchg
ljmp
pop
dec
scas
mov
pop
nop
scas
xor
inc
pop
jle
dec
cs
jle
jl
jle
hlt
xchg
or
cmp
sub
sub
test
lea
imul
loop
inc
in
mov
cmp
add
icebp
hlt
test
mov
mov
iret
ret
cli
inc
jle
sbb
es
and
push
dec
insl
les
xchg
subps
mov
mov
ficompl
xorb
out
push
add
loopne
inc
incl
mov
inc
adc
addr16
fwait
je
xor
ljmp
and
icebp
mov
pushf
push
sbb
enter
in
sbb
mov
popa
lret
xchg
out
test
xor
mov
jecxz
mov
jle
add
sti
xchg
aas
adc
aad
sti
fsts
cmp
xor
mov
sbb
lds
jmp
test
sub
mov
inc
or
or
fistps
pop
out
xchg
cmpl
mov
es
mov
cmpb
dec
fs
shlb
xchg
and
dec
jmp
les
push
xchg
adc
cmp
mov
rcll
xchg
mov
mov
mov
inc
in
sub
inc
xorb
mov
cmp
sbb
shlb
pop
cmp
addr16
add
ds
gs
mov
das
mov
mov
in
xchg
stos
ss
add
mov
pop
in
ficompl
mov
flds
scas
inc
mov
sbb
cmp
jl
push
add
adc
cmpsb
cld
enter
jmp
pop
push
push
sub
mov
or
and
inc
xchg
mov
push
lods
mov
dec
mov
and
ja
push
cs
or
inc
jbe
jno
or
and
pop
or
in
cmc
enter
fnstsw
ja
in
mov
idivl
in
pushf
dec
arpl
adc
dec
lahf
inc
into
js
movsb
jge
or
fildll
ljmp
jle
arpl
mov
jnp
cmp
or
sub
sbb
cs
jae
roll
jb
rcl
fwait
out
in
rcpps
adc
cmp
lret
push
loopne
loop
inc
outsb
xchg
pop
mov
rcrb
mov
or
aas
ret
adc
inc
xor
stc
lds
in
ds
ds
xchg
xchg
add
out
pop
sub
mov
enter
rcll
in
sub
icebp
dec
fistl
pop
jo
rcrb
sbb
arpl
cld
cld
sahf
xchg
imul
inc
fisttps
mov
push
or
jecxz
add
dec
jbe
jns
xor
mov
lock
push
push
cli
cmp
sub
and
lods
es
in
std
xchg
mov
cmp
jp
xor
mov
mov
mov
inc
insl
sub
data16
mov
jl
jmp
lea
ja
adc
jmp
inc
lret
imull
xor
mov
rorl
xor
addb
xchg
xchg
scas
lods
pop
ljmp
rcll
stc
cli
xchg
aad
jns
fists
scas
aam
lods
mov
lds
jns
mov
fwait
addr16
xchg
cmp
sbb
rclb
dec
and
xor
std
stos
mov
inc
or
sbb
mov
mov
test
lds
das
sbb
cmp
pushf
mov
or
adcl
ret
scas
cmpsl
xchg
int
dec
pop
push
mov
sbb
sub
xor
cltd
push
mov
mov
popf
or
adc
xchg
loop
inc
dec
in
inc
js
imul
jg
in
xor
mov
cs
xor
xchg
popf
mov
xor
push
push
push
push
std
push
dec
cmpsb
shrb
xchg
inc
and
cmc
sbb
cld
push
cmpsb
jbe
mov
gs
test
rcl
test
je
fs
mov
mov
bound
mov
xlat
popa
sub
rcrb
iret
mov
sbb
and
loopne
and
pushf
out
cmpsl
test
mov
adc
jnp
mov
nop
jbe
pop
nop
mov
les
jb
insl
mov
icebp
jmp
gs
or
adc
push
sub
arpl
push
and
push
test
clc
jl
cli
xchg
into
popa
out
ret
lret
push
jecxz
negb
call
ret
cmp
ficoms
movsl
inc
sahf
das
int
movsb
into
xlat
les
xchg
bound
push
dec
dec
ss
ds
lret
fst
sti
sahf
mov
pushf
mov
pop
in
cmpsb
popa
insl
jle
les
inc
int3
fimuls
push
dec
scas
jnp
mov
dec
iret
ljmp
add
popf
lcall
mov
lods
mov
mov
fistl
fneni(8087
rclb
pushf
xchg
fmuls
aas
mov
loopne
test
cmpsl
dec
mov
shl
cli
dec
mov
stos
or
mov
mov
cmc
cmp
and
loop
shl
leave
lods
cltd
scas
push
jmp
in
xor
xchg
imul
gs
and
jae
pop
test
insb
mov
stos
push
clc
imul
xchg
xor
cs
xchg
cmc
popa
or
mov
mov
inc
xchg
xor
add
xchg
adc
movsl
inc
aad
out
scas
push
xchg
iret
js
cmp
addr16
sbb
repz
mov
xchg
ds
dec
xchg
dec
pop
push
pusha
clc
test
movsb
aad
outsb
mov
sub
jae
popa
xor
mov
cld
clc
aad
dec
stc
lret
dec
fadds
lcall
inc
arpl
fucomip
jo
push
mov
sbb
in
and
mov
in
push
xchg
jg
pop
repnz
mov
or
js
mov
gs
jl
dec
fidivl
test
mov
fistps
rol
xor
jle
jb
sbbl
sbb
jmp
sub
stc
and
push
mov
mov
cmp
mov
cmc
clc
cwtl
mov
cwtl
mov
jns
stc
mov
sub
pop
jmp
arpl
insb
add
cs
pushl
mov
push
push
add
sub
fistl
call
and
jmp
cmc
jb
lds
cmpsl
sarb
frstor
insb
movsb
sbb
xchg
inc
push
cmpsb
xchg
fistps
lret
aam
inc
lahf
lods
sbb
sbb
jns
sarb
push
push
dec
aam
xchg
add
xor
mov
std
cmp
ljmp
push
pop
push
jnp
cmp
and
call
and
shll
addl
mov
ret
mov
sub
inc
jg
add
in
pusha
mov
sbb
cmp
repnz
dec
adc
test
sbb
add
dec
mov
sahf
add
mov
insb
popf
call
mov
sbb
xchg
push
inc
dec
test
test
push
es
xor
enter
shll
lods
gs
addl
lock
scas
sub
enter
lahf
mov
test
jns
pop
jnp
jmp
push
xchg
sahf
adc
outsl
movsl
ffreep
push
mov
mov
addl
cmovle
subb
sub
inc
xchg
xchg
inc
mov
fstpl
inc
mov
out
push
pusha
sub
imul
add
push
cwtl
inc
ljmp
jecxz
sub
int
lret
sahf
mov
dec
rol
shrl
xchg
shlb
push
adc
mov
fildll
scas
push
jle
adc
cmp
aad
aaa
lods
mov
fisubrl
mov
mov
loopne
push
push
in
and
nop
pushf
add
into
dec
div
jecxz
jmp
sbb
fsubs
scas
add
jecxz
mov
mov
dec
xchg
dec
out
dec
loope
dec
sub
mov
cvtdq2ps
std
sub
mov
mov
ss
or
cs
out
pop
shl
cmc
push
into
jge
cld
mov
das
dec
icebp
js
jae
std
scas
cmp
into
fwait
in
clc
lds
dec
in
insl
movsl
pop
in
and
sbb
bound
dec
or
and
dec
fsub
fdiv
xchg
lret
xchg
mov
out
mov
inc
inc
dec
imul
rorb
or
add
pop
lods
data16
icebp
mov
jne
jno
mov
pop
lcall
add
cmp
enter
push
adc
in
and
sbbl
iret
rorl
cmc
cmp
out
jmp
rcrl
xchg
loope
inc
dec
push
jno
add
inc
insb
cmpsb
cmc
mov
pop
mov
cld
clc
mov
loope
cmc
jno
add
dec
loope
in
das
or
sub
aas
movsb
xchg
xchg
xchg
or
pop
ret
insb
mov
mov
fidivs
cmp
jmp
arpl
jae
pop
mov
push
ja
loop
mov
jno
test
and
push
dec
jle
enter
adc
fistpll
mov
mov
out
jbe
dec
mov
test
xchg
scas
and
xchg
push
in
jecxz
sti
push
test
cmp
filds
pop
xchg
loop
fstpl
push
push
mov
test
push
dec
adc
sub
repz
ljmp
mov
out
int3
adc
jae
dec
data16
lods
mov
adc
pop
cmp
jmp
dec
insb
pusha
pop
loop
insl
fmul
movsl
xchg
leave
mov
xchg
js
and
cmc
mov
ret
xchg
sti
test
test
pop
test
adc
lret
adc
das
imul
inc
xlat
fldl
mov
and
mov
dec
fucomi
subb
or
sub
loope
shll
mov
mov
test
cmp
cmp
lcall
mov
sbb
fs
subb
mov
movsb
fwait
push
xchg
push
mov
mov
data16
push
xor
shll
dec
pusha
jg
mov
xor
and
and
xchg
test
or
mov
and
scas
es
and
mov
xchg
push
movsl
adc
sub
cli
or
fdiv
xchg
movsl
jp
into
rolb
mov
xchg
sahf
sub
daa
xchg
or
jmp
cmp
clc
inc
sbbl
jne
sub
sub
cmp
jnp
fsubs
jne
xchg
add
int3
js
roll
popa
lea
push
addb
mov
or
or
in
mov
popf
popf
jnp
jno
jmp
loope
jb
in
jbe
dec
jl
jl
int
pop
insb
lcall
pop
bound
orl
dec
out
mov
sbb
fisubs
pushw
mov
jno
mov
xchg
cmp
aam
adcl
cwtl
clc
push
lods
les
and
mov
ret
out
loope
xor
lret
cmpsb
xchg
fstps
negb
mov
push
and
lcall
mov
es
add
sahf
or
popf
push
and
imul
sbb
mull
in
sub
pop
iret
or
mov
push
out
std
incl
arpl
sub
in
rorb
int3
mov
or
repnz
lret
stc
stos
sub
ljmp
mov
fs
cmpsb
jno
imul
pop
mov
mov
inc
pusha
fstpl
push
lret
push
ret
xchg
jmp
push
ret
jge
sahf
inc
or
xchg
mov
add
les
aaa
mov
mov
jo
push
lock
mov
movsb
iret
mov
adc
into
xor
mov
fwait
pop
mov
push
mov
jp
pusha
cmpsl
imul
add
mov
leave
cmpsb
roll
jg
stc
jmp
aaa
lret
hlt
inc
test
and
xorl
scas
stc
sahf
jg
loop
stc
dec
cmpl
mov
mov
loop
aad
in
mov
mov
cmp
xchg
test
cmc
repz
dec
adc
loopne
dec
push
repnz
jecxz
sub
loopne
and
mov
sub
jmp
mov
movsb
jmp
pop
rep
inc
push
je
popf
dec
push
hlt
fldt
es
lds
jae
sbb
xor
sbb
ds
xlat
pop
loop
in
add
movsb
sbb
cltd
popa
notl
fmuls
out
enter
push
mov
xor
pop
inc
push
inc
jb
mov
adc
inc
cli
outsl
es
into
xchg
divl
cmp
mov
fldenv
imul
adc
rorb
test
addb
push
sahf
or
movsl
fstpl
xor
inc
es
loope
push
inc
inc
mov
popa
hlt
js
xchg
mov
popl
fwait
push
orl
push
fists
ljmp
push
lret
xchg
popa
lret
int
daa
out
cmpsl
sub
sub
inc
stc
jnp
aad
mov
xchg
dec
jg
repnz
cmp
ds
mov
push
mov
stos
add
jp
sub
negl
mov
in
fbld
das
mov
cltd
mov
xchg
lods
inc
sub
insb
mov
xchg
js
or
call
fildl
dec
andb
sub
mov
dec
iret
pop
mov
jb
call
das
jl
jge
mov
outsb
rcrb
ret
mov
cmp
aam
cmpb
jb
push
outsb
xor
adc
sub
mov
js
jp
loop
enter
fisubl
dec
push
test
cltd
mov
clc
push
push
call
xorl
leave
and
dec
adc
push
testb
movsb
call
mov
mov
cmp
scas
stc
inc
cmp
and
lods
imul
jle
mov
mov
stos
dec
push
inc
mov
mov
dec
mov
aaa
jne
aas
inc
in
sbb
rcr
jmp
jp
loope
add
repz
sub
push
sub
call
das
inc
lods
arpl
daa
xchg
repnz
pop
mov
ja
scas
and
lcall
popf
push
and
outsl
push
test
mov
dec
adc
leave
cli
fs
fsubs
inc
push
xorl
mov
es
stos
mov
leavew
pushf
sub
push
mov
bnd
pop
and
push
nop
dec
rclb
cld
idivb
adc
or
adc
mov
mov
adc
cli
shl
cmp
ljmp
shrb
or
sti
lret
fisttps
push
das
jno
sbb
jg
dec
test
xchg
stos
xchg
sbb
call
sub
scas
ljmp
dec
sub
dec
and
scas
lods
jl
daa
mov
sub
mov
push
fldl
popa
test
stc
mov
jnp
add
and
out
mov
cmp
adc
pop
popa
xchg
in
xor
mov
rcr
inc
fimuls
xor
movsb
xlat
xchg
lods
push
inc
xor
xlat
mov
inc
jle
movsl
jl
cmp
lahf
xchg
pop
inc
mov
testl
iret
fwait
std
cmp
nop
hlt
jl
mov
mov
insl
jae
xchg
shll
cmp
jecxz
jmp
push
dec
roll
push
sbb
cmp
in
add
and
ret
push
adc
test
insb
loope
jle
ficomps
cmpsb
xor
mov
std
and
or
dec
push
stos
lods
frstor
or
mov
sbb
stos
mov
pop
mov
bound
test
subb
add
inc
cli
fisttps
lcall
dec
cli
add
data16
mov
pushf
add
jo
bound
insb
jno
fsubl
and
cwtl
nop
arpl
xor
jo
mov
pop
or
ja
imul
sub
andb
xchg
outsb
and
push
push
bound
push
es
and
lcall
add
es
mov
mov
insl
outsb
test
xchg
mov
iret
or
nop
mov
xor
add
mov
mov
cld
hlt
js
cmp
mov
or
ret
shrb
xor
ljmp
sbb
in
scas
cmp
pop
or
test
xchg
sub
sahf
pop
clc
mov
sbb
in
jo
push
pop
mov
dec
inc
jno
popa
xlat
xchg
lock
push
sub
add
add
test
mov
rorl
pop
add
imul
mov
cmp
push
add
sti
outsl
div
dec
negb
jnp
hlt
iret
lods
pop
fs
outsl
jmp
adc
stos
loop
repnz
repz
push
test
inc
in
inc
aam
or
pop
cwtl
sbb
sub
dec
lahf
sub
push
xlat
cwtl
loope
lods
aad
xor
jmp
adc
andl
mov
or
push
or
negb
repz
test
mov
cltd
mov
mov
jg
dec
lahf
shll
inc
jmp
sub
mov
xorb
jg
fmuls
outsb
mov
cmpsb
jge
push
mov
mov
int3
sub
cmpl
jmp
mov
add
jns
push
cli
icebp
imul
idivb
or
enter
fdivl
mov
out
push
mov
mov
lret
mov
dec
fdivl
push
enter
arpl
pop
xchg
insb
lock
sti
in
in
xor
insb
mov
jecxz
fmuls
call
andl
ret
dec
fdivrp
imul
hlt
aas
jb
add
sub
xchg
jo
fcoml
pop
push
imul
test
sub
mov
add
inc
clc
xchg
imul
dec
mov
mov
cltd
mov
mov
push
inc
pusha
adc
imul
mov
add
imul
add
add
stc
cmpsl
lea
push
push
jmp
cmp
adcb
cmpb
mov
test
in
dec
fucomip
dec
mov
lock
push
cltd
pop
sahf
lea
jns
sbb
leave
fbld
mov
out
xchg
loope
push
cmpsw
jg
mov
pusha
out
sbb
pop
popf
outsb
xchg
xor
ja
jmp
inc
lods
sub
fstps
lret
adc
adcb
jge
cmp
mov
mov
sub
lods
dec
pop
shll
popf
mov
dec
adc
loope
ret
mov
pop
mov
clc
mov
addb
shlb
cs
dec
xor
aad
insb
negb
dec
dec
pop
fwait
cmp
test
scas
out
rep
mov
jg
push
mov
sbb
jle
ret
xlat
iret
pop
dec
movsl
popf
lcall
insl
mov
fstpl
aad
dec
or
iret
dec
mov
mov
insb
or
stos
mov
jne
clc
mov
imul
lret
push
lret
lret
int3
mov
inc
frstor
mov
test
decl
dec
xchg
dec
faddl
or
xlat
mov
jmp
repz
pop
dec
lea
lods
repz
scas
sbb
fucom
pop
dec
sbb
or
mov
jge
lahf
fsubl
xchg
test
es
outsl
push
jp
or
inc
cmpsb
dec
dec
lahf
xchg
cmpsl
clc
paddd
mov
or
xor
leave
push
scas
dec
mov
inc
push
or
test
push
decb
push
insl
shrb
pop
lret
clc
mov
adc
mov
pop
int
pop
stos
je
out
int
bound
cmpsl
inc
fcomps
imul
dec
pop
lock
stos
test
daa
jl
and
add
cmp
cmp
pushf
dec
xchg
pop
movsb
mov
insl
pop
dec
adc
mov
or
inc
andl
fisttps
lods
into
mov
adc
popf
stos
sub
sbb
aad
sub
mov
popa
push
lea
into
mov
push
cmp
adc
sbb
push
mov
adc
lahf
mov
bound
pop
jge
enter
out
cwtl
popf
loope
fs
cmp
push
push
xchg
mov
mov
adc
mov
cwtl
sbb
dec
or
dec
dec
mov
daa
aam
lea
sbb
add
gs
imul
xlat
inc
pusha
jmp
push
push
mov
and
mov
into
mov
sti
cmc
and
subb
xlat
inc
or
in
add
sbb
jge
dec
data16
aam
mov
push
dec
dec
add
stc
jge
das
sahf
icebp
and
push
mov
ss
cmc
pop
add
lds
push
mov
into
jne
jmp
mov
rolb
popf
jmp
clc
dec
sbb
add
test
xchg
xchg
aaa
add
push
mov
aam
mov
icebp
popl
out
dec
lods
sub
add
std
leave
lahf
mov
push
mov
adc
mov
mov
sub
lock
mov
lds
mov
inc
mov
sbbl
mov
and
mov
cmp
movsl
je
imul
fmull
mov
sub
push
sub
inc
test
inc
mov
pop
mov
es
mov
sub
xchg
jmp
popa
test
addr16
mov
cmp
js
xchg
adc
jg
stc
mov
cltd
aad
push
pop
mov
lret
mov
jle
mov
popf
dec
mov
and
repnz
pushf
je
into
cmp
dec
daa
iret
cmp
icebp
mov
cmpsb
xor
cs
repnz
sbb
in
filds
sbb
repnz
pop
push
jne
xchg
outsb
sub
ds
xchg
lds
pusha
mov
sahf
out
mov
out
mov
out
mov
out
mov
out
mov
mov
add
sub
mov
push
popf
add
push
cmpsl
fstpl
fmulp
loope
out
or
arpl
mov
mov
xor
shl
mov
push
mov
insl
imul
repz
imul
rcrb
sahf
nop
jb
adc
repnz
imul
rcll
and
subb
mov
cwtl
nop
insb
pop
popf
pop
enter
fs
mov
add
stos
dec
iret
sub
and
xor
lcall
mov
iret
aam
cmpxchg
sub
pop
xchg
pop
xchg
push
mov
adc
lea
mov
cmp
mov
xor
mov
or
dec
cmc
xor
mov
mov
cmp
fcomi
rcll
xchg
nop
sub
insb
lods
push
out
clc
inc
xchg
xor
cltd
gs
or
stc
xorl
into
mov
sbb
mov
pop
dec
mov
and
push
std
decb
cmp
dec
add
push
mov
inc
rcrb
js
and
jge
inc
lret
cmp
add
lcall
cmp
or
inc
loopne
cmpsl
mov
add
jle
pop
ss
mov
ret
xchg
pushf
sarl
stc
subb
sete
lea
insl
in
add
inc
fdivrs
bound
aas
mov
mov
mov
imul
mov
icebp
cmp
and
movsl
scas
stos
jne
pushf
mov
test
call
sub
insb
aam
cli
insl
aas
out
mov
ja
int
fcmove
adc
dec
xor
aaa
jg
xlat
mov
or
mov
sbb
hlt
mov
xor
scas
add
aam
out
aam
push
jge
sbb
rcll
decl
dec
lahf
jge
cmp
push
into
iret
mov
in
cmp
fistps
dec
sub
dec
scas
mov
cltd
popa
sub
call
jle
stos
mov
pop
mov
aas
add
sbb
push
push
push
loopne
outsl
out
mov
lds
lock
into
nop
popf
lods
mov
push
add
add
bnd
mov
out
mov
inc
dec
dec
mov
shrb
fcmove
scas
xchg
add
inc
jmp
je
jo,pn
push
pop
les
pop
adc
push
es
aad
fwait
andl
imulb
adc
insl
dec
and
inc
pop
dec
fwait
data16
jg
xchg
mov
pop
sbbl
xchg
xchg
js
cs
pop
les
jmp
jno
sbb
push
xchg
mulb
mov
jbe
jmp
std
stos
cmp
js
stc
mov
fcompl
adc
push
shl
insl
fsubl
mov
out
sahf
pop
dec
out
ret
jecxz
imul
pop
mov
mov
and
ds
data16
or
sbb
mov
mov
xlat
cld
stos
scas
stc
jnp
sbb
stos
jns
pop
cmpsb
sub
or
cmp
mov
xchg
stos
pop
inc
lret
dec
dec
stos
and
pushf
jne
mov
testb
xor
jle
pop
addr16
cs
loopne
lret
iret
inc
jne,pt
dec
inc
in
xor
orb
jb
and
push
imul
ret
idivl
jp
xchg
inc
daa
pop
addb
push
sahf
pop
jmp
lret
test
jne
inc
popa
sbb
xchg
outsl
inc
fisubrl
daa
lcall
sbb
cld
push
lea
xor
scas
push
mov
pop
shlb
leave
pushf
adc
add
shlb
sbb
bound
pop
dec
pop
arpl
pop
movsb
mov
dec
lret
es
and
gs
in
mov
xor
push
fld
stc
int
jl
jecxz
icebp
lea
loope
and
ds
xor
lods
add
rclb
and
and
mov
dec
lahf
xchg
mov
adc
adc
mov
inc
pop
orl
xor
sarl
stos
stos
xchg
adc
dec
imul
gs
dec
mov
or
test
out
dec
add
push
mov
mov
scas
call
pop
push
bound
mov
push
adc
int3
fimuls
lret
mov
jbe
sub
lahf
cmc
and
adc
xchg
sbbl
imul
shrl
sub
cwtl
mov
fs
rolb
add
push
movsl
mov
push
gs
push
adcl
adc
sbb
dec
cli
movsl
xor
sub
fstl
sbb
outsl
and
es
iret
imul
sub
inc
outsl
pusha
outsb
push
cmp
mov
lds
adc
std
mov
mov
sahf
iret
fistpl
int
call
jge
jne
or
push
scas
lea
shrb
xchg
fcompl
aad
int
xor
popl
inc
jl
addr16
dec
and
jg
pop
pop
das
enter
pop
hlt
push
inc
sbb
jle
or
aas
or
adc
sbb
outsb
mov
pop
add
push
shrb
mov
cmc
cmp
inc
sbb
sbb
lahf
sti
dec
sbbl
test
aam
sbb
in
dec
mov
pop
dec
dec
les
subl
or
test
cmpsl
das
cmc
das
cmp
dec
push
push
xor
pop
arpl
jns
xchg
stos
adc
dec
jecxz
dec
sbb
jge
cmc
lods
movsl
mov
jo
pop
movsl
rcrb
cmpsl
mov
dec
es
push
or
mov
cmp
dec
inc
xor
sbb
in
push
jo
push
and
cmp
pop
pushf
xchg
dec
out
out
mov
in
lds
inc
jg
push
les
imul
jg
lea
outsl
addr16
sub
jo
pop
cwtl
mov
dec
xor
xlat
sbbl
push
dec
xor
pop
stos
sti
push
jbe
lods
mov
and
int3
jo
insl
imul
in
js
in
inc
test
push
dec
shl
inc
mov
push
call
ja
or
inc
aad
addr16
mov
rcrb
ret
inc
add
lods
add
stos
out
popf
dec
sub
cmp
inc
mov
insl
push
push
insb
mov
lea
mov
aaa
lods
xor
mov
xchg
pop
addr16
mov
dec
push
fisubrs
insl
push
cs
xchg
aaa
aaa
pushf
jne
sbb
cmc
je
dec
sub
lret
rorl
cmpb
mov
mov
mov
in
pop
cmp
jmp
pop
lds
aam
sbb
es
ret
mov
cmp
sbb
pop
inc
jns
js
dec
push
dec
push
pusha
and
dec
inc
pop
aad
jbe
push
add
add
or
in
adc
subl
daa
sbb
addl
mov
lret
out
stc
lahf
xchg
fsts
shrl
add
lea
movsb
shl
jno
dec
xchg
inc
fcompl
negb
and
js
cmp
fsubl
fnstsw
filds
pop
icebp
stos
cmc
faddp
shrl
lea
dec
stos
adc
fwait
ss
pop
shrb
push
cmp
popa
imul
cmc
dec
sahf
nop
addr16
inc
cmc
cmc
rolb
adcl
dec
repnz
clc
cmp
sub
mov
push
stos
cmpsl
mov
inc
out
mov
or
out
jg
pop
clc
and
xchg
nop
xchg
out
aas
jo
outsl
pusha
test
out
xchg
sub
mov
pop
jb
jns
imul
dec
mov
arpl
sub
sub
in
int3
out
iret
cwtl
notb
mov
or
stos
push
in
jo
cmp
mov
and
aad
xorl
js
xchg
rolb
cli
pop
movsl
mov
inc
daa
mov
cmp
mov
fildl
in
enter
stos
xor
pushf
paddb
mov
jmp
pop
sbb
cli
ret
sub
dec
in
js
enter
popa
out
push
push
setle
cs
test
xchg
mov
daa
loopne,pn
dec
lods
arpl
jo
pushf
xor
mov
pop
stos
mov
dec
ror
jmp
sbb
sub
mov
mov
mov
loop
scas
xchg
cmp
lods
mov
out
and
push
divb
xchg
sub
adc
lds
into
xchg
stos
pop
cltd
push
ja
rcrb
fistpl
cmp
adc
fmul
mov
pop
cltd
cmp
pop
and
fnstcw
notl
cmc
ja
stc
or
inc
xchg
into
mov
sub
leave
hlt
mov
mov
fsubrl
cmp
jmp
dec
pop
lret
dec
mov
mov
lods
scas
fcmovb
dec
mov
shlb
cmp
dec
inc
loop
emms
or
mov
xchg
adc
repz
shll
lds
push
pop
push
adc
je
pop
shl
xchg
test
pushf
pop
shrb
mov
mov
fidivrs
pop
mov
addr16
xchg
notl
scas
and
imul
insl
into
jno
div
insl
lods
mov
aad
or
in
xorb
std
outsl
hlt
frstor
sub
mov
xchg
sub
sbb
enter
not
call
mov
repnz
cmp
push
push
or
cli
xchg
loope
xchg
addr16
mov
int3
sub
shl
repz
pop
jge
cmp
stc
mov
mov
dec
stos
xchg
ret
xchg
jg
fdivrl
fimuls
dec
inc
movsl
repz
aas
pop
es
aaa
add
inc
out
and
popl
mov
push
int
and
dec
jmp
or
jmp
outsl
daa
and
dec
xlat
outsl
stos
and
iret
fwait
loop
fcomi
test
rcrl
rcrl
lods
pusha
xor
mov
nop
xchg
shl
adc
mov
cs
xor
int
sbb
into
sbb
fcom
insb
push
imul
aam
lock
mov
into
ret
sbb
call
and
xor
pop
test
pop
not
popl
aam
scas
test
cmp
jl
xchg
dec
and
popf
pop
jle
dec
popf
iret
aas
test
mov
aas
movsl
orl
lea
sbb
call
dec
add
mov
in
mov
pop
dec
icebp
dec
sbb
scas
push
int
or
mov
push
ljmpw
jns
mov
pop
insl
xchg
fcoms
fbld
cmp
adc
out
int
test
gs
xorl
repz
inc
fisubs
jecxz
iret
and
int3
mov
pop
cmp
fbstp
ss
rcrl
sub
lret
xchg
pop
leave
push
inc
jp
int3
pop
imul
dec
imul
mov
xchg
xchg
movsb
mov
pop
jp
mov
aad
aad
sahf
outsb
fmulp
mov
ds
inc
sbb
jnp
ret
data16
sbb
jae
mov
dec
cmp
out
add
sbb
test
mov
fildll
jbe
xor
xchg
repz
jecxz
xchg
lds
repz
in
cmpsb
fs
call
mov
push
repnz
sub
stc
sub
lcall
imul
adc
into
fsubs
xchg
gs
jo
pop
add
pop
cmp
jp
inc
sub
pop
rclb
iret
arpl
dec
mov
out
and
mov
pop
test
enter
or
ljmp
dec
out
cmp
mov
shrb
mov
fldt
push
sarb
push
dec
mov
ds
lret
mov
out
xor
jo
push
jo
cwtl
inc
shll
icebp
push
mov
lds
pushf
xor
lret
lret
or
out
aas
insb
pop
rorb
pushf
sub
pop
fdivl
inc
mov
jle
xchg
ja
lods
lcall
inc
xchg
cmpsb
cwtl
stos
add
mov
sbb
scas
hlt
mov
mov
and
dec
cltd
or
outsl
add
cmc
dec
call
fcomps
cltd
add
fsts
icebp
aaa
pop
stos
and
insl
xchg
scas
popf
cwtl
call
dec
out
mov
out
movsb
xchg
repz
jae
push
xchg
vsubpd
out
movsb
adc
into
and
cmc
add
xor
jmp
into
mov
xor
push
imul
push
push
es
add
cmc
orl
stos
test
add
sub
enter
dec
inc
in
lock
xchg
shlb
jl
jl
fdiv
into
xor
and
pop
and
popf
lock
push
scas
mov
insl
inc
push
pop
pop
rorb
push
push
pop
or
cs
orl
sahf
cmpsb
adc
daa
movsl
pop
cmp
scas
rclb
out
jmp
dec
daa
and
pop
push
push
in
inc
mov
pop
lcall
xchg
jmp
outsl
mov
sub
aaa
into
cmp
mov
pop
inc
andl
adc
mov
js
mov
push
stc
dec
add
ljmp
add
fiadds
and
fsub
pop
mov
scas
outsb
xchg
push
xlat
mov
push
xchg
mov
mov
in
inc
mov
in
shll
or
outsl
hlt
mov
cmp
aas
andl
inc
ljmp
mov
loope
cmp
aas
imul
mov
lahf
movsl
xor
push
jecxz
out
es
ljmp
jl
fisubrl
mov
sbb
xor
je
mov
lea
push
mov
fsub
inc
sub
pop
pop
pop
pop
mov
fs
jecxz
enter
xchg
scas
push
iret
jns
mov
inc
sub
fnstsw
jns
fldt
push
stos
test
popf
cmp
cmp
fidivrs
enter
adc
imul
sub
mov
and
push
lahf
in
dec
orl
inc
xchg
icebp
imul
test
sub
mov
xchg
gs
xor
push
iret
sbb
lea
pop
sub
insb
xor
jno
sbb
xchg
test
mov
add
mov
cmp
iret
fwait
sub
pop
loopne
xor
jns
jnp
sub
sub
cmpb
xchg
pop
sbb
push
shl
mov
jecxz
inc
xor
xchg
jo
sarl
mov
lds
fwait
pop
call
andl
xchg
dec
pushl
pop
cmp
adc
cmp
imul
shll
stos
xlat
cmp
out
out
mov
aad
push
mov
mov
xchg
inc
in
cmp
jbe
insb
iret
in
push
pusha
lods
mov
cmp
xor
jns
push
jbe
popf
movsl
push
pop
mov
in
aaa
shl
faddl
lds
into
loope
xchg
ljmp
mov
es
incb
jle
stos
in
std
adc
in
push
sub
mov
jnp
xor
mov
xchg
push
rcrl
sbb
mov
in
test
jge
jne
jne
dec
dec
lea
xor
mov
mov
aad
inc
cmp
out
mov
sub
jl
and
xchg
mov
pushf
jmp
cmpsb
sub
call
mov
je
sub
pop
cmpb
imulb
mov
dec
mov
mov
aad
jmp
mov
sub
xchg
shrl
cmc
xchg
xlat
jb
scas
movsl
frstor
sub
int3
jne
mov
sahf
in
fs
add
aad
into
jno
xor
rcr
adcl
arpl
in
fldl
sub
and
jmp
push
rcr
imul
lock
rol
test
test
call
les
add
xchg
or
sbb
xchg
mov
ficomps
ret
pop
into
int
ds
arpl
mov
pop
loope
loope
std
dec
ljmp
push
loopne
ffree
adc
ds
out
xor
push
sub
lret
mov
sbb
orl
cs
xor
xor
lret
and
xchg
fs
in
sub
push
aam
mov
stos
xchg
lods
xor
jmp
mov
stos
xor
ret
lret
rcrl
pop
fisttpl
cmp
push
daa
fwait
xchg
rcrl
xor
adc
jmp
pop
sar
lds
xor
imul
mov
add
lcall
jge
mov
iret
sbbl
xchg
leave
mov
daa
push
das
jno
repnz
mov
cmp
pop
inc
mov
cld
fs
mov
sbb
nop
fidivrs
in
cli
fwait
or
les
icebp
jae
int
lcall
idivl
cmp
fsts
aam
cli
xchg
das
adc
aas
cwtl
cli
cmpsl
xchg
sbb
xchg
icebp
adc
ja
push
inc
clc
lock
mov
dec
enter
jecxz
and
pop
cmc
ljmp
fistpll
je
clc
ds
or
mov
lret
inc
movsb
dec
fistl
scas
lock
pop
test
cmp
pop
fsubs
mov
push
test
rolb
mov
dec
sub
addb
test
mov
mov
push
hlt
push
ja
push
push
add
adc
in
loop
lret
das
pop
lods
sbb
test
repz
lock
rorb
cmp
mov
cs
das
fs
mov
inc
mov
or
nop
ljmp
iret
sub
test
stc
stc
outsb
or
dec
push
flds
mov
sbb
mov
outsl
sub
pop
das
out
sbb
dec
sbb
and
sbb
mov
fwait
sub
pop
ret
or
dec
popa
cmp
mov
sbb
sti
jecxz
ffree
sbb
mov
rcr
mov
jns
popa
mov
push
addr16
mov
clc
cwtl
adc
sbb
push
push
ret
xchg
std
sbb
jnp
test
inc
mov
test
and
xchg
lods
inc
leave
loope
sub
movsb
xchg
mov
push
mov
icebp
in
pushf
xor
movsl
imul
in
outsl
mov
into
dec
jbe
inc
es
movsl
mov
jae
lret
fcoml
and
fsubrl
shll
sub
jecxz
popa
mov
pop
leave
int3
inc
xorb
jnp
mov
mov
dec
pop
fdivr
pop
fwait
mov
test
push
ss
jnp
in
ret
sbb
lods
mov
adc
icebp
iret
dec
inc
out
and
lret
cmp
fsub
cltd
pop
test
push
daa
push
inc
jo
loopne
or
mov
cs
clc
xlat
jp
andl
int
mov
aad
scas
lods
hlt
mov
lahf
test
outsl
cmp
add
aas
dec
dec
lds
daa
ja
push
test
and
adc
imul
imul
dec
mov
push
ja
pop
jb
sub
pop
push
shrb
and
in
data16
adc
or
sub
and
int3
clc
jmp
pop
aas
mov
xor
dec
push
fincstp
sub
push
add
dec
mov
je
dec
lret
loopne
xchg
xchg
mov
xor
pop
lods
or
or
xchg
cmp
pop
cmpl
push
inc
push
jns
sbb
pop
dec
jl
mov
clc
adc
pop
or
xchg
mov
cmp
adc
cmpsl
cwtl
cli
in
test
nop
dec
test
xchg
sahf
pop
sbb
jmp
mov
push
repnz
push
mov
outsl
xor
adc
mov
imul
jb
shlb
add
cmp
or
test
inc
sub
lds
aas
fcomps
jmp
sbb
cltd
cs
push
loop
cmpl
cmpsb
clc
decl
scas
pop
dec
sub
fsubrl
mov
pop
fbld
ret
in
cmpsl
fstps
pop
lds
in
inc
lods
fadd
repnz
jo
repz
add
push
popf
in
push
sub
insl
jae
adc
adc
cwtl
adc
shlb
adc
mull
jecxz
sub
imulb
popf
into
xchg
mov
jmp
push
lret
inc
es
icebp
enter
fucomp
call
pop
jmp
inc
lret
pusha
and
jb
repz
test
out
insl
cmc
ja
push
jae
aas
popa
leave
mov
icebp
je
add
daa
out
and
ficoms
je
jg
popf
pushf
add
cmp
push
sahf
fprem1
stc
outsb
dec
ja
jb
sub
je
or
dec
xchg
nop
fimuls
sub
call
cltd
sarl
mov
inc
out
adcb
push
aaa
test
repz
or
imul
sbbb
jae
les
repz
fcoml
cmpsb
sbb
inc
dec
popa
popf
push
in
jecxz
loope
mov
sub
xchg
fldt
test
cwtl
nop
sahf
sub
inc
mov
adc
cltd
push
fxch
or
aaa
leave
add
xchg
jge
iret
test
stc
stos
sub
iret
adc
add
push
jae
xchg
scas
mov
xorl
mov
je
mov
popa
sahf
add
xlat
fldcw
and
jle
xchg
fldcw
jg
cmp
or
lock
and
repnz
mov
dec
imul
fisubrs
and
dec
test
pop
shrb
lret
in
lahf
push
cwtl
push
mov
push
mov
push
push
mov
inc
xchg
dec
mov
wbinvd
cmc
out
test
scas
movsl
movsl
aaa
out
outsl
mov
or
lret
adc
imul
xchg
xchg
imul
dec
popf
jno
lock
push
std
push
outsb
or
sbb
cmp
fisubs
inc
ss
push
cmp
push
push
pop
in
popf
ss
lcall
jg
loope
sub
jno
loop
mov
push
daa
ds
mov
mov
pusha
mov
shr
shrb
mov
test
sub
jbe
ja
int3
cs
iret
jp
jbe
imul
mov
pushf
dec
loopne
xchg
mov
sbb
xor
pop
filds
movsb
scas
dec
sub
cmp
push
adc
pop
negb
push
les
mov
add
fnstsw
adc
add
jge
nop
xchg
inc
and
xchg
push
ret
inc
repnz
vpacksswb
mov
xor
cwtl
cmp
les
imul
out
dec
je
aam
mov
jb
rcl
mov
lds
shll
loop
ja
gs
ljmp
clc
push
jae
xchg
aas
or
jmp
inc
aam
mov
test
lcall
mov
and
addr16
mov
stc
xchg
rcr
mov
mov
adc
scas
lcall
mov
jl
popl
arpl
push
add
mov
nop
rolb
arpl
cmpsl
or
sbb
xor
or
cmp
das
jne
push
jmp
test
ljmp
xchg
and
fimull
mov
pop
orb
jne
lods
inc
pop
jecxz
ja
mov
aam
nop
xor
sub
testl
xchg
arpl
addl
push
mov
das
xchg
movsb
imull
cmpsb
stos
sub
inc
cmp
sbb
cmp
iret
cmc
jecxz
push
mov
sbb
popf
jle
mov
icebp
mov
and
stc
sbb
mov
add
push
imul
sub
dec
adc
outsl
jb
cmp
mov
inc
mov
push
jg
mov
jge
scas
lret
loopne
lock
dec
jno
jle
push
mov
ja
cmpsl
test
fisttpll
lock
addr16
out
outsl
and
mov
lods
lahf
jbe
lock
xlat
icebp
lods
mov
cmp
out
adcl
pop
mov
aaa
cmp
stc
or
int3
cmp
sub
push
fsubrs
dec
imul
mov
cmpsl
and
test
adc
xchg
cs
fimull
cmp
aaa
mov
gs
mov
in
cmp
xor
fyl2xp1
xchg
fisttps
inc
fcomip
jecxz
nop
into
xchg
cmp
les
imul
pop
lock
pop
pushf
imul
outsb
push
cmpsb
nop
lock
imul
push
lret
adc
inc
ficomps
enter
sbb
xor
aad
add
in
or
leave
sbb
in
add
pop
mov
sub
sub
dec
fucomip
push
mov
sub
fbstp
fmull
xchg
into
xchg
imul
roll
arpl
loop
xchg
loop
and
call
repz
cmp
xchg
test
dec
aam
call
xor
aas
daa
sar
lahf
jl
in
loope
aas
lret
push
and
add
fildll
cld
sti
jne
in
mov
add
mov
pop
adc
shlb
js
outsb
mov
push
lret
xor
loopne
fstpt
pop
aas
aad
out
ss
fcompl
pop
or
mov
push
test
ss
fistpl
dec
cmp
ss
adc
pop
pop
push
scas
dec
push
negb
mov
loope
cmpsb
stos
push
repnz
inc
and
insl
je
out
es
mov
sub
sti
pop
fs
inc
xchg
sti
pop
push
mull
arpl
add
xchg
test
int
iret
fwait
ror
divl
push
fdivl
idivl
sbb
leave
shrb
push
imul
pop
les
fwait
dec
jecxz
cld
in
jmp
mov
mov
lods
sbb
pop
push
mov
mov
xchg
ficompl
cmp
imulb
aad
test
sarb
scas
sbb
mov
sbb
insb
in
cli
push
dec
fstps
mov
xchg
cvtps2pd
mov
inc
pop
fnstcw
rorl
mov
pop
jmp
jmp
repnz
insl
xor
icebp
iret
inc
sbb
fmuls
or
and
dec
stos
cwtl
fnstcw
scas
pop
ds
arpl
dec
mov
push
or
out
andl
mov
sahf
std
ret
lods
filds
out
lds
outsb
adc
push
cli
cmc
push
adc
into
xchg
shr
and
mov
into
and
mov
call
lea
leave
and
pop
loopne
fwait
mov
or
cmp
mov
fsub
shlb
dec
pop
sbb
mov
cltd
in
rorb
movsb
repnz
lahf
int3
sub
mov
jmp
pop
rorb
enter
xchg
xchg
and
mov
ret
loope
std
cmp
xchg
lret
test
sbb
outsl
mov
loopne
negl
insl
mov
push
pop
mov
cmp
push
in
fwait
jno
lcall
lods
cwtl
mov
cmp
js
pandn
mov
mov
data16
popf
fnsave
push
mov
jno
xor
fs
repz
test
inc
mov
mov
pop
mov
jmp
xchg
dec
adc
sub
mov
cmpsl
aas
test
xor
ret
sub
mov
aam
out
jecxz
xor
movsl
ss
lret
mov
fisttpll
mov
xchg
pusha
mov
int3
fwait
dec
dec
mov
and
ret
xlat
jge
js
fsts
shlb
mov
shll
inc
inc
sbb
vprotb
xchg
gs
mov
jns
sub
into
stc
addl
bswap
in
sub
push
sbb
aaa
into
sub
in
mov
dec
div
add
lods
loope
mov
adc
xchg
cs
cltd
cwtl
loopne
and
add
test
jns
in
cmp
daa
mov
lea
aad
cmc
fistpl
imul
jp
or
and
in
test
movb
add
divl
jo
into
imul
outsl
rcrb
or
lods
imul
imul
shlb
jg
js
test
or
out
jmp
push
add
in
andb
outsb
inc
imul
movsl
mov
hlt
mov
push
add
xchg
add
fsts
push
daa
imul
adc
xor
insb
mov
mov
jns
or
mov
in
loop
ds
arpl
jle
mov
lcall
push
movsb
jg
iret
and
mov
lea
sub
lds
mov
or
sub
out
adc
inc
movsb
leave
sarb
jl
xor
ds
stos
aas
xchg
sbbl
inc
outsb
and
fbld
pop
mov
daa
pop
mov
gs
das
xchg
xchg
push
cmp
je
insl
jb
inc
sbb
dec
insb
rcll
push
adc
test
dec
nop
jbe
daa
js
inc
jnp
mov
mov
stos
rcrb
lret
dec
repz
js
gs
push
mov
das
cmp
vpminub
push
and
pop
out
dec
xchg
popa
add
mov
fnstenv
cmp
out
jl
mov
shl
or
ret
and
es
mov
dec
mov
fbstp
adc
nop
nop
outsb
add
add
sub
neg
jo
sahf
cld
hlt
pop
test
push
inc
stos
std
add
sti
rcr
insb
icebp
cmc
jmp
outsl
js
mov
scas
jmp
mov
std
mov
dec
xchg
outsb
shr
jb
mov
pushf
pop
add
sar
jae
push
xor
jo
cwtl
dec
xchg
pushf
mov
xchg
sbb
dec
xor
outsl
mov
cmpsl
and
popf
mov
lret
aaa
scas
jmp
mov
lock
add
ds
into
xor
testb
mov
lds
xchg
das
inc
shlb
mov
loop
inc
into
mov
pop
test
sbb
xchg
xor
xchg
test
stc
lds
dec
fs
iret
lret
sbb
imul
sahf
pop
lods
and
lds
add
xor
and
or
push
sbb
sbb
dec
ds
rcrl
xchg
pop
pop
into
sbb
sti
ja
lea
and
call
ja
test
pop
lcall
dec
dec
loope
rorl
insl
inc
mov
pop
ficoms
pop
call
sub
icebp
pusha
imul
xchg
out
dec
xor
pop
push
sbb
ret
cmpsl
jno
call
mov
or
pop
movsb
xchg
ret
or
lods
adc
sub
repz
addl
rorl
pop
sbb
xor
imul
pop
cmp
cmp
enter
xchg
lods
push
add
sub
repz
aas
cmc
mov
or
pusha
jecxz
adcl
test
ja
mov
mov
out
imull
loopne
jmp
cmp
fiadds
es
sbb
sub
pop
fists
movsl
pop
sar
xchg
fsubrl
popa
push
push
cmp
cmp
xchg
adc
outsl
push
cld
pop
mov
fsts
leave
inc
les
sbb
sbb
enter
sub
in
jl
mov
mov
jg
push
fildl
lods
in
jae
mov
or
gs
mov
pop
rolb
or
inc
bnd
sahf
inc
mov
pop
movsl
test
imul
outsb
fisttps
lds
repz
lret
das
lcall
mov
fldt
cmpsl
pop
enter
sub
pusha
bound
repnz
push
ja
sbb
aas
lret
clc
outsb
xchg
adc
or
loopne
push
mov
xor
and
mov
and
sub
cli
out
addr16
mov
push
mov
cmp
mov
call
pop
or
adc
pushf
dec
push
jb
movsl
or
ret
fwait
orl
out
and
outsb
adc
orb
stos
mov
mov
fldcw
scas
rcr
add
xchg
push
inc
jns
xchg
jb
dec
mov
sub
dec
ret
lods
mov
loope
lods
cmp
cltd
push
movsl
sbb
or
cmp
fwait
or
inc
dec
pop
stos
cli
mov
lret
cwtl
and
ret
ret
xor
ljmp
and
push
les
cli
mov
pushf
mov
add
shlb
jg
xlat
jmp
enter
pop
sbb
popa
cmp
iret
pmullw
pop
dec
jge
and
movsl
stos
mov
pop
mov
pop
andl
inc
sub
pop
dec
call
ret
push
xchg
inc
les
imul
inc
lret
rol
and
test
test
push
out
cmpsb
inc
out
and
popa
pop
iret
xchg
pushf
ret
push
push
or
test
test
jg
add
sbbb
fwait
mov
cwtl
pop
mov
xchg
shrb
stc
xor
xchg
ss
aaa
outsb
addr16
popf
lea
adc
mov
mov
movsb
icebp
mov
lea
jl
mov
pusha
ja
popf
xchg
xor
xchg
in
lret
cltd
xchg
add
sub
fs
popl
push
xchg
mov
xchg
ja
mov
call
cmp
jg
push
call
inc
push
or
mov
je
adc
push
sub
ja
sbb
adc
sub
push
or
jl
xor
bnd
or
cmp
lcall
lret
js
andb
movsl
movsb
shrb
nop
negl
iret
inc
mov
pop
lcall
popa
mov
inc
scas
clc
push
testb
pop
jae
in
fists
add
or
sub
xchg
lcall
loopne
add
inc
xchg
aas
cmp
mov
cmp
mov
pop
and
add
in
mov
jg
xrelease
enter
lods
fwait
or
je
and
mov
pop
inc
xchg
push
rcl
cmp
cmp
mov
mov
sub
xor
cmp
mov
orb
lret
xchg
mov
fs
int
sub
sbb
push
cwtl
mov
sub
lds
push
loopne
mov
shrb
dec
jle
xchg
dec
jecxz
pop
in
std
test
jmp
push
fcom
fildll
fucomip
inc
ficoml
lods
xchg
jge
ja
mov
mov
adc
insl
in
pop
insl
cmp
mov
fmuls
push
loope
pop
xchg
ss
ja
sub
fucomi
inc
dec
fs
shlb
inc
ret
sbb
pop
rol
popf
sbb
push
iret
rcr
sub
enter
adc
test
pop
rclb
cltd
and
sub
lret
jp
outsl
xor
mov
rorb
xor
adc
push
dec
das
movsl
repnz
push
or
lock
jl
mov
sahf
arpl
icebp
clc
cmp
push
xchg
push
aaa
loopne
repnz
je
aad
dec
dec
mov
ja
adc
xchg
mov
repnz
icebp
sbb
daa
xchg
push
jnp
and
adc
repnz
add
or
rcrb
jae
ror
ficoms
jo
enter
sub
cmpsl
repnz
gs
imul
sbb
cmp
fsub
test
test
test
fsub
mov
shl
push
and
xor
push
sbb
pop
inc
xchg
adc
stos
jno
jno
jg
fcomps
imul
xchg
or
fmull
iret
adc
mov
mov
push
sbb
xor
add
cltd
faddp
gs
cs
leave
dec
and
fwait
out
sub
adc
mov
fistpll
gs
mov
and
jb
dec
or
xor
dec
repz
cmc
and
or
or
loope
lea
std
andl
faddl
jmp
scas
popf
mov
fdivr
pop
or
cmp
loop
les
cltd
mov
jo
callw
iret
fsubrl
ja
sbbl
int
pop
jb
pop
jno
lcall
iret
cs
fisubl
dec
push
sbb
push
dec
iret
cmp
mov
dec
aas
push
cwtl
cmp
cmpsl
rolb
sub
jns
int
cmp
add
inc
jne
insb
sbbb
cmp
mov
sahf
out
cli
cwtl
cmp
fistps
push
iret
sahf
and
sbb
test
lret
pusha
inc
pushf
mov
idivl
pushf
pop
or
xchg
lret
inc
cmpsl
pop
loope
mov
rcrl
lock
mov
xor
icebp
jns
pop
in
mov
sub
es
or
xlat
xorb
daa
jmp
gs
push
cmpsb
roll
inc
sub
jae
imul
sbb
sti
adc
popa
int
fwait
or
scas
fwait
xchg
mov
sbb
cmp
xchg
gs
xchg
mov
lret
cltd
cmp
mov
int3
xchg
outsb
loope
lcall
outsb
cmc
mov
outsb
out
dec
sbb
or
push
mov
add
inc
lods
cmpsl
dec
test
cwtl
shlb
mov
pop
xchg
cmp
sbb
iret
xlat
test
adc
cltd
aad
dec
inc
call
aas
imul
aaa
icebp
repz
or
scas
stos
fsubs
sub
lds
fwait
pop
cmp
imul
sti
add
popa
push
xlat
or
pop
mov
lret
data16
fbstp
adc
sarl
ret
cwtl
push
js
mov
clc
sahf
clc
pushw
loopne
les
or
loopne
and
xor
shlb
push
lock
jne
jle
dec
pop
mov
push
scas
jmp
add
std
shl
push
ja
sbb
or
arpl
lret
jne
lret
sub
cmp
faddp
mov
stos
dec
frstor
push
pop
mull
cmpsl
aam
cmpl
call
inc
sbb
div
imul
shrl
subb
in
xor
cmp
or
movsb
loopne
xchg
movsb
sub
in
xlat
mov
loopne
add
jae
inc
imul
mov
cmpsl
test
inc
cmp
cmc
push
add
mov
fisttpl
rcr
push
pop
mov
stos
int
sahf
jbe
std
pop
sahf
jmp
pusha
in
adc
in
enter
mov
cld
jle
mov
xchg
mov
jmp
cmp
xchg
mov
jno
and
hlt
push
inc
xlat
jecxz
add
insb
pushf
or
in
xor
mov
call
xor
test
bound
sbb
cmp
pop
popf
xorb
xchg
mov
test
pop
testb
repz
mov
fcomps
fdivl
pop
divb
jns
fs
cmpsl
cmp
or
out
or
push
out
outsl
lret
mov
leave
rcrb
hlt
push
mov
xor
push
dec
dec
mov
fdivrl
inc
jno
scas
das
lahf
or
xchg
mov
aas
pop
out
pop
inc
adc
mov
addr16
dec
test
out
pop
stos
cmp
movsb
out
or
or
mov
in
popl
cltd
mov
stos
mov
xchg
inc
cld
pop
call
test
rol
adc
push
xchg
jl
mov
push
dec
lea
jne
jnp
jns
or
scas
sub
cld
sub
cmc
mov
daa
loop
imul
jb
add
jp
loope
add
pop
outsb
jecxz
mov
jl
fldl
sub
fildll
pop
sbb
fwait
test
test
xchg
and
jb
ja
iret
jmp
je
pop
cmpsl
inc
mov
cmp
aad
imul
jae
lcall
adc
mov
jno
in
inc
dec
popa
add
in
jecxz
lds
addl
xor
cmp
sarl
addr16
sbb
popa
mov
aas
popf
add
mov
push
mov
je
pop
mov
stos
xchg
jl
testb
mov
sub
dec
lock
mov
pop
mov
or
pop
outsl
xor
jb
repz
pop
subb
push
ss
pop
xchg
or
lea
jnp
or
mov
fdivrp
jnp
popf
repnz
dec
xor
lods
hlt
sub
int3
cli
sub
mov
rcll
mov
push
cs
pop
lcall
movsb
test
cmp
movsl
adcb
ljmp
das
push
arpl
dec
sbb
fildll
das
jge
leave
adc
jns
mull
int3
ror
mov
dec
fstpt
inc
loopne
movntq
push
pop
mov
fimuls
inc
dec
arpl
push
sub
dec
ret
cmpsl
test
int
sub
gs
dec
arpl
pop
mov
sbb
jge
mov
les
mov
pop
lss
mov
add
and
dec
adc
add
pop
dec
sub
sbb
cmp
neg
xor
xchg
shll
rorl
cmp
aaa
daa
mov
in
repnz
push
test
cmp
lcall
pop
pusha
adc
push
test
ret
jmp
enter
test
ret
inc
out
dec
and
lea
jmp
in
cmp
push
lahf
xor
fistl
push
idivb
dec
push
imul
jl
push
inc
mov
xchg
ret
fstpl
adc
mov
inc
fcompl
pop
lcall
mov
xchg
pop
xchg
enter
xor
sbb
sub
test
es
fiaddl
dec
xor
cwtl
inc
repnz
lcall
and
xchg
cmpsb
jb
mov
cs
cmp
popf
movsl
push
jge
notb
lahf
movsl
pop
int
mull
xchg
loop
mov
call
cmp
aad
lock
aad
jb
mov
stos
data16
test
add
lock
jnp
xchg
mov
imul
jecxz
xchg
stos
xlat
data16
or
int
call
lret
loope
jle
sub
xor
call
mov
fcoml
loopne
lds
das
xchg
mov
scas
cmp
ljmp
icebp
dec
jb
add
mov
sub
jnp
movsl
mov
repnz
ljmp
mov
adc
mov
xor
iret
sbb
lahf
jo
jns
aam
fwait
mov
push
adc
repnz
movsb
xchg
test
or
mov
hlt
nop
sub
dec
insl
out
outsl
out
ret
jne
imul
outsl
pop
shrb
fisubs
stos
jae
pushf
and
add
leave
mov
mov
dec
scas
cli
sti
xchg
inc
in
push
jns
jmp
insl
mov
or
shlb
xor
mov
aaa
fidivrs
adc
out
shl
inc
repnz
aam
test
pop
inc
stc
sub
subl
lods
dec
ss
inc
movsl
fldl
int3
inc
faddl
lahf
aad
dec
and
fmulp
cmp
fistpll
dec
int
sbb
cmp
ret
popa
outsl
fwait
lea
cmp
cmp
mov
xor
adc
xor
stos
sbb
adc
jmp
imul
xchg
test
jb
loopne
movsb
cmc
sahf
dec
mov
and
nop
mov
testl
cmpsb
mov
jae
sahf
das
cmpl
or
push
add
sbb
pop
xchg
fld
jp
jp
js
mov
fildll
push
push
subl
mov
cmp
test
loope
cmpsb
mov
or
mov
mov
sgdtl
js
aas
jbe
ja
or
fstpl
xor
mov
cmpsl
push
stos
xchg
xor
inc
jg
mov
imul
dec
popf
jno
nop
fisubrs
imull
aaa
mov
add
mov
jb
add
lds
lock
lods
ja,pt
push
negl
dec
dec
xchg
inc
mov
and
cmp
pop
movsb
xlat
aaa
iret
cld
xchg
daa
pop
js
jl
mov
push
pop
mov
jmp
data16
lahf
mov
pop
subb
mov
sbb
lret
xor
jmp
xor
dec
cmp
loope
fsts
roll
stc
push
icebp
imul
pop
pop
jbe
lret
cltd
jo
mov
add
cltd
or
inc
sub
inc
sub
mov
test
lock
andl
sub
into
mov
jb
out
in
add
cltd
test
pop
test
dec
dec
lock
rcll
push
sbb
xor
lods
pusha
outsl
inc
ja
push
dec
out
cmpsl
rcrb
clc
push
fsubp
lds
lock
test
mov
cmc
insl
xchg
cli
push
and
push
inc
out
pop
cld
repnz
mov
pushf
jle
sbb
loopne
aam
ss
imulb
outsl
push
inc
out
mov
inc
sub
in
int3
loopne
rcll
cs
jge
cmp
sahf
cs
ret
add
mov
dec
incl
cmc
lret
mov
cmp
call
les
mov
lea
pushf
pop
and
sti
mov
inc
mov
test
int
cli
sarb
daa
dec
xor
xlat
icebp
mov
push
ljmp
lret
adc
add
sub
dec
pop
cmpsb
fidivs
dec
cltd
xchg
adc
enter
cmp
xor
test
fmull
adc
imul
lret
dec
int3
add
inc
mov
fbstp
daa
cld
mov
stc
test
test
cmp
pop
push
mov
mov
cwtl
into
jns
mov
xchg
int3
jg
out
lahf
stos
jne
pop
in
repnz
outsl
hlt
inc
stc
ds
fmull
xor
pop
cmp
push
fistpl
es
dec
pop
dec
lret
sub
rcll
ss
adc
loope
push
and
jge
xor
pusha
jbe
cmp
mov
dec
mov
iret
add
fisttpl
lods
cmp
loope
test
sbb
movsl
add
neg
or
inc
aad
or
mov
cmp
jl
nop
push
insl
and
cs
jp
imul
call
sti
repz
fcomp
adc
jle
repnz
jmp
ja
cltd
or
xchg
dec
ss
scas
out
decl
mov
dec
adc
out
arpl
mov
aaa
or
jp
ds
shll
repz
jo
cli
cwtl
mov
push
out
inc
in
fxch
fistpll
ljmp
leave
jmp
sbb
negl
pushf
in
push
lahf
sbb
out
jbe
xor
or
aas
jbe
cmpsl
and
dec
jbe
cmpsl
sub
clc
aaa
push
inc
cmc
jne
add
adc
icebp
dec
mov
call
sbb
mov
inc
inc
cmp
mov
jno
fistpl
adc
fildl
out
std
pop
push
adc
pop
jns
inc
mov
imul
jns
xchg
pop
or
inc
pop
cmp
push
aam
or
fs
stos
or
and
xchg
cwtl
jb
jl
movsb
dec
sahf
stos
push
sbb
bswap
outsl
and
les
xchg
jns
movsl
or
data16
addr16
imul
fwait
icebp
popf
cs
cmp
cmp
clc
cld
fwait
scas
nop
push
mov
std
andb
pop
iret
adc
call
mov
iret
cli
pushf
arpl
ret
jle
shl
mov
cmpsl
mov
ret
inc
outsl
das
push
xor
mov
cmp
jo
jns
outsb
rcrb
std
xlat
jns
imull
xor
pop
inc
xor
add
jae
std
dec
push
imul
das
inc
lcall
into
pop
pop
push
iret
push
jecxz
shll
mov
repnz
mov
add
cmp
and
repnz
movsl
sahf
test
sub
out
addl
mov
pop
std
dec
pop
mov
jns
add
mov
add
mov
and
pop
shll
ss
hlt
push
faddl
or
jbe
push
sub
pusha
xorb
ret
sbb
imul
mov
rcll
pop
xor
fistpl
sarl
xchg
lds
movsl
xchg
mov
lods
scas
cmc
lds
cwtl
xorb
jmp
push
xor
stos
and
xchg
pop
push
jp
mov
leave
sbb
je
movsl
jb
popf
xor
daa
pop
inc
cmp
ficoms
mov
hlt
mov
jo
jle
jl
ds
sbb
je
stos
jbe
xorb
fisttpl
out
and
pushf
mov
inc
insb
ret
pop
out
mov
add
jg
mov
or
cmp
sbb
mov
ret
call
mov
inc
ret
mov
jae
inc
fcompl
nop
bound
cmc
popf
rclb
dec
lret
inc
add
lock
js
ffreep
bnd
push
adc
mov
cmp
repnz
dec
in
shll
out
ss
in
and
jmp
shll
idivl
shlb
sbb
pop
lock
loope
xor
jb
push
fisubl
push
movsb
test
xchg
loop
mov
sub
mov
or
outsb
jg
mov
and
fistpll
xchg
imul
lds
movsl
xchg
ret
xchg
cwtl
pop
orl
xor
repnz
and
scas
inc
mov
mov
xchg
sbb
aam
insl
dec
mov
sti
leave
xchg
rorb
pop
test
pushl
mov
andb
cwtl
sub
cmp
or
jo
jmp
lret
cwtl
cli
outsl
cli
sti
imul
pop
dec
loopne
ret
outsl
cwtl
jne
in
and
jo
fstpt
or
jge
adc
cmp
inc
sbb
adc
pusha
testb
lret
out
outsb
cmp
and
fdiv
sbb
inc
repz
xorb
scas
fsubrl
aaa
int
mov
or
call
loope
pop
jecxz
cmpsl
mov
sbb
mov
pop
stos
adc
das
cmp
add
xchg
sub
mov
ja
sub
push
js
pop
movsb
insl
popf
push
fs
add
test
jbe
call
imul
or
and
int
call
xchg
xor
out
pop
jmp
scas
mov
cmp
repz
addr16
cmpsb
outsb
leave
adc
leave
jge
mov
imul
jno
push
add
sbbl
sub
dec
mov
ja
and
addr16
leave
mov
sub
call
call
les
inc
mov
dec
idivb
sub
add
and
cmp
dec
cmp
cld
jmp
mov
sbb
iret
out
popf
sbb
bound
shrl
loope
sbb
mov
mov
ljmp
loopne
push
fcomps
rcrb
inc
loope
cmp
and
outsl
int
pushf
iret
sti
sub
movl
mov
gs
scas
lds
cmp
inc
aas
jmp
inc
mov
insl
cmc
jno
jmp
push
cmp
aad
mov
xchg
xchg
ja
mov
and
jmp
jnp
stos
push
sub
dec
inc
sbb
add
es
lods
jbe
add
xor
sub
add
ljmp
jmp
mov
mov
call
movl
mov
ds
loopne
imul
mov
mov
push
lcall
lods
xor
xchg
test
pop
xchg
ss
hlt
ja
iret
mov
std
lock
cmp
push
ds
jns
sbbb
sahf
repz
aaa
jmp
jmp
mov
pop
test
dec
or
fcmovb
repnz
imul
jmp
xor
jae
lcall
xorl
sub
mov
outsl
jle
jmp
mov
pop
iret
xchg
or
inc
push
lock
xchg
dec
jecxz
xchg
das
jmp
in
push
daa
enter
inc
in
cmc
js
sbb
les
iret
es
dec
mov
mov
sbb
data16
inc
sarl
mov
mov
mov
ds
or
pop
and
mov
loopne
mov
repnz
sub
jns
jo
push
sub
push
fwait
xchg
mov
lods
add
xorl
mov
add
test
dec
mov
or
fincstp
cmp
std
das
push
fs
rorb
fsts
aas
and
sbb
and
inc
inc
mov
cmp
jnp
xchg
ficomps
in
cmp
inc
out
sub
out
rcrb
js
xchg
insb
aaa
mov
sbb
dec
jbe
and
push
in
stos
dec
loop
scas
leave
pop
test
ret
cmpsb
xor
push
std
push
sub
popa
add
mov
imul
xor
fistps
sub
clc
icebp
lods
pop
dec
sub
les
mov
lods
leave
call
mov
mov
pop
inc
dec
pushf
outsb
and
cli
pop
inc
scas
dec
out
je
push
mov
mov
sbb
and
push
add
cmp
lods
mov
shrl
xlat
stc
adc
incl
sub
xchg
pop
in
rcll
cltd
fdivrs
jne
iretw
lcall
movsl
mov
movsl
lcall
cld
cmc
push
lds
fsubl
imulb
lods
mov
ljmp
pop
add
popf
iret
mov
movsl
popf
dec
ret
aas
ret
mov
inc
adc
sti
test
add
xchg
dec
sarb
leave
push
inc
sbb
pusha
and
jne
lea
pop
adc
add
lret
xchg
mov
iret
push
shll
mov
rorb
loop
cltd
lcall
scas
cmp
outsl
adc
leave
and
and
dec
mov
mov
hlt
dec
fldpi
fsts
and
stos
sbb
cmc
cli
jb
fiadds
push
mov
sbb
xchg
leave
test
std
data16
jno
cmpsl
jp
and
mov
sub
test
lcall
dec
cmp
and
int3
movsl
sbb
outsl
xchg
jl
fsts
fdivs
ja
ss
vcvtdq2pd
jg
sbb
or
or
or
push
sbb
mov
lods
idivb
sbb
ljmp
ljmp
stos
mov
cwtl
inc
mov
add
loopne
cmp
das
cltd
dec
les
lods
stos
adc
jmp
decl
gs
xor
sub
push
aas
inc
sub
ljmp
imul
dec
cltd
cs
daa
pop
mov
and
insl
and
xor
or
xlat
cmpsb
push
dec
xor
fwait
into
jge
mov
loope
int
insb
pop
addr16
leave
fimuls
jo
stos
xlat
loope
bound
cli
mov
js
xor
test
mov
dec
or
popl
js
mov
addl
orl
or
out
dec
add
pusha
into
mov
sbb
lret
testl
lcall
in
lds
jle
jmp
loopne
mov
jp
push
cmc
sahf
cmp
lahf
enter
stos
stos
pop
pushf
sub
cs
js
dec
out
cmp
dec
jae
mov
ljmp
cmp
dec
cld
jmp
lahf
mov
add
imul
sub
sub
test
in
dec
ret
xchg
test
frstor
mov
and
jbe
pop
dec
ficoms
pop
xbegin
cltd
inc
dec
mov
inc
xchg
and
test
aas
shr
mov
repnz
outsl
jo
sbb
sahf
out
addr16
sti
mov
testb
dec
sub
icebp
sahf
cmpl
aas
or
shlb
mov
adc
dec
lret
mov
jge
add
add
push
insl
fistpll
pop
loope
jecxz
mov
aam
push
out
xor
insl
jns
cltd
test
sbb
xor
mov
pop
imul
xor
mov
jl
dec
aam
lds
popa
inc
dec
lret
das
push
add
xor
rclb
and
movsb
shrb
push
jle
test
loop
ss
int
ja
pop
xchg
addr16
mov
cltd
mov
loopne
cmc
sarl
cwtl
cli
or
cmc
minps
add
add
pop
or
mov
mov
inc
or
popa
je
and
into
sti
adc
push
cmp
insl
mov
insl
jb
cwtl
les
hlt
push
lret
cmp
push
popf
mov
test
fwait
test
xchg
sub
int3
adc
lds
sbb
out
popf
cmp
aam
andl
sbb
int3
es
mov
mov
adc
push
dec
sbb
ret
cmp
into
mov
jmp
lahf
leave
xor
inc
subb
adc
fwait
imull
cmp
jb
dec
mov
in
add
pop
push
inc
loope
popf
jb
roll
shl
lcall
mov
mov
test
push
push
sbb
mov
mov
pushf
test
jbe
sahf
out
jg
imul
push
cmp
adc
inc
push
push
fs
clc
lds
test
lahf
adc
lea
lods
inc
scas
pop
inc
jp
ds
ret
loop
jp
cmp
ds
test
adc
mov
bound
popf
sbb
mov
xlat
sub
imul
inc
pop
sbb
add
and
ret
jge
pushf
jmp
daa
orb
adc
stos
pop
mov
int3
jae
fs
mov
sub
xchg
sub
pusha
mov
int3
sbb
add
popf
shlb
pop
jb
scas
mov
cli
jnp
insb
add
xchg
rol
sbb
ret
xchg
mov
cmp
inc
mov
int3
fnstcw
icebp
lds
fstpt
pop
inc
pop
scas
cmc
ficoms
fdivr
cmpsl
movsl
xor
mov
inc
sbb
mov
jl
pop
shrb
scas
stos
and
ljmp
inc
int
test
sbb
fisttpl
xor
xor
mov
cmp
push
daa
push
cmpsb
add
push
adc
mov
push
xor
popa
jbe
mov
and
cmp
call
shlb
cmc
push
fstl
xlat
das
sbb
scas
shrb
jno
push
xchg
pop
mov
nop
in
pop
cmpl
xor
pop
add
cmc
xchg
lods
cmp
lds
ffree
and
pop
ret
cld
ret
adc
imul
adc
mov
pop
cli
sub
movsl
pop
imul
leave
mov
out
mov
jmp
jo
aaa
fimuls
mov
pusha
xor
sub
mov
inc
mov
out
in
iret
out
push
push
mov
mov
gs
cs
sti
inc
rol
mov
or
add
mov
bound
dec
fdivs
jle
jmp
in
lock
testb
fisubrl
out
popf
and
cmp
adc
inc
fstl
sarl
xor
sbbl
in
inc
pop
adc
xchg
jl
add
mov
pop
push
dec
pop
mov
ljmp
fldenv
shlb
and
jnp
and
dec
bts
sbb
dec
cltd
movsl
outsl
outsl
lcall
sbb
mov
push
and
jle
push
add
hlt
lods
jns
cmp
jns
and
out
jecxz
shll
fwait
xchg
stos
mov
sbb
and
rol
insb
aaa
xchg
fwait
shr
mov
mov
jmp
jge
xor
push
mov
rol
repnz
nop
inc
xchg
pop
rclb
adc
lds
fdiv
sbb
insl
xor
and
shl
adc
icebp
jbe
mov
test
xor
fildll
push
push
xor
stos
add
mov
outsl
out
inc
sbb
andl
stos
or
loop
icebp
clc
ja
test
jg
mov
sbb
addr16
mov
sbb
inc
lcall
lret
cmp
mov
lahf
cld
std
ds
jge
fcoml
dec
ljmp
and
das
hlt
fistpll
insl
es
or
push
inc
bound
hlt
xchg
fcmovnbe
mov
dec
mov
add
mov
rcll
cltd
mov
cwtl
outsb
sub
lret
inc
fwait
jle
fidivl
notl
and
aaa
sub
sub
popf
add
jne
int
add
enter
popa
stos
jnp
pop
sbb
xchg
adc
scas
pop
popf
loopne
cmpsl
lret
mov
jb
aad
mov
adc
js
sbb
in
cmp
jne
rcl
icebp
sub
decb
mov
testl
call
cmp
rcrl
inc
es
das
out
sub
xchg
lahf
dec
adc
inc
leave
sub
std
push
pop
xchg
cmc
insl
aad
in
push
lods
into
lods
inc
xor
mov
jl
enter
in
and
inc
sub
push
xchg
js
xchg
sbb
sbb
adc
or
fistpll
mov
push
sub
cmp
pushf
into
mov
inc
test
sbb
test
cmpsl
adc
push
lret
and
push
mov
xchg
push
cltd
repz
pop
sahf
and
rclb
dec
icebp
test
andb
xchg
jbe
mov
mov
mov
dec
add
les
inc
sti
out
xchg
cmpsb
and
jmp
out
jmp
push
pop
mov
jecxz
and
int
aam
leave
cmpl
pop
popf
imul
lods
stc
xchg
mov
cld
cmpsb
je
xchg
stos
std
iret
mov
in
dec
jae
xchg
insb
lcall
ret
lds
nop
pop
and
sub
repz
aam
or
xchg
es
jb
fadds
insb
pop
xchg
loop
push
jbe
mov
loop
hlt
popa
lds
in
mov
lret
fcomi
xchg
mov
sbb
rol
cmc
add
sub
mov
inc
lea
fwait
mov
and
inc
mov
sahf
ja
ret
jb
sbb
arpl
insl
xchg
addl
pop
mov
push
and
testl
ja
mov
jno
push
cmp
outsb
arpl
fnstenv
push
inc
pop
lock
jbe
adc
and
stc
vpsubw
in
add
inc
push
les
jg
add
pop
adc
stos
fstpl
test
imul
hlt
popa
cli
or
inc
xchg
cltd
cld
popf
or
xchg
scas
pop
xchg
call
dec
pop
push
cli
dec
repnz
lret
push
jle
mov
xor
sub
mov
cmp
mov
leave
jl
cld
pushl
cld
stos
pop
mov
negb
pusha
dec
pushf
mov
push
fwait
shrb
stos
das
scas
mov
xorb
push
mov
jnp
jbe
dec
test
repnz
push
mov
bound
fs
pushf
loopne
fdivrs
ja
punpckhbw
rcr
add
add
sbb
push
mov
cwtl
in
cmc
ffreep
lock
popf
mov
push
in
popf
mov
pop
std
cld
stc
aam
int3
jns
or
das
jl
cmpsl
jmp
pop
stc
lods
ret
daa
aad
xor
rolb
lods
mov
or
sub
push
lock
push
imul
imul
into
push
xor
fisubrs
jle
and
lods
ret
fucomp
lret
pop
dec
mov
js
push
pop
pop
ja
add
sub
push
mov
lods
dec
push
dec
fdivs
lret
or
adc
pop
adc
push
mov
call
imul
leave
movsl
and
dec
lods
sbb
cmc
popa
add
cmp
pop
pop
cmp
cltd
fadds
xor
add
pop
xchg
jle
scas
sbbb
in
imul
hlt
sahf
cmpsb
in
mov
lds
inc
adc
pop
daa
in
and
out
sub
shl
sub
mul
popf
dec
mov
pop
lods
mov
sbb
mov
pop
cmp
push
mov
or
outsl
cld
xor
and
mov
ret
cmp
lret
sub
adc
mov
mov
negb
jg
xor
adc
stc
aas
or
jp
dec
pusha
push
cmp
pop
cmc
fsts
popf
cmp
jmp
in
out
pop
ljmp
stos
push
es
jp
mov
fistl
or
cmp
adc
test
mov
loopne
sti
or
aad
fwait
jae
in
pop
mov
nop
icebp
int
aas
dec
mov
call
adc
je
movsl
jo
sub
adc
movsl
aas
jne
daa
lcall
dec
rol
pop
dec
xchg
call
pusha
cltd
xchg
lret
xchg
lea
xor
mov
es
xor
scas
cmpl
movsl
call
ljmp
or
out
mov
sub
outsl
xchg
xchg
inc
push
shrl
mov
stos
hlt
dec
lods
pop
and
pop
push
pop
stos
pop
or
dec
fists
aas
mov
jge
dec
and
cwtl
jg
sub
pushf
xchg
lret
xchg
mov
push
test
lret
fcomp
xor
subl
mov
or
cli
pop
in
mov
insb
lret
and
cmpsb
mov
jbe
and
xor
push
push
iret
pusha
sub
pusha
and
cwtl
inc
cmp
xor
mov
icebp
fcoml
test
int3
pmaddwd
push
int
es
bound
cbtw
pop
push
mov
pop
xor
push
and
js
mov
inc
fwait
and
test
das
and
dec
std
sub
sbb
out
push
jmp
dec
stos
ret
lahf
idiv
jbe
popf
jl
test
lahf
ret
shll
lcall
nop
xchg
dec
inc
push
test
pop
pusha
test
dec
jecxz
imul
sbb
fiadds
das
lock
push
cmpsb
mov
pop
mov
sub
movsl
insl
inc
dec
cmpsb
in
adc
sbb
loop
cmp
fisubrs
daa
and
mov
loopne
test
mov
dec
addr16
es
out
fs
mov
mov
fs
lods
mov
or
sub
ret
xor
cli
inc
xchg
mov
sbb
icebp
into
jge
adc
popaw
jb
mov
dec
test
aaa
test
in
test
out
addr16
pop
lds
popa
or
adc
movsl
fildll
scas
jl
rclb
xchg
sub
push
sub
xchg
fstl
pop
sub
and
fisttpll
dec
fwait
dec
or
pusha
and
fs
cmp
cmp
shlb
mov
jns
jo
nop
pop
jle
cli
mov
stos
or
lahf
or
fistl
jg
push
pop
ret
sbb
push
aas
in
adcl
loopne
rcll
mov
and
lret
ja
xor
jbe
dec
pop
adc
jecxz
xchg
push
pop
imul
add
xchg
fwait
cmp
sub
cld
xor
pop
mov
lods
ja
out
out
mov
adc
sub
addl
sbb
inc
dec
leave
ss
cmc
and
lahf
mov
ss
and
xor
hlt
and
sub
cmc
stos
inc
fstpl
aam
push
inc
xor
xchg
out
pop
gs
es
inc
in
sbb
push
in
cmp
inc
fcmovnbe
ljmp
lret
fsubs
or
ret
test
jb
dec
and
int3
xor
adc
icebp
lds
inc
aad
scas
or
jnp
and
sbb
mov
gs
pop
pop
xlat
negb
out
pop
sub
leave
mov
enter
mov
and
lcall
cmp
imul
push
lcall
adc
xor
fcoms
dec
frstor
orb
xchg
push
mov
iret
xchg
enter
add
mov
sub
pop
popf
xor
or
sbb
lock
movsb
cmc
loop
mov
mov
nop
imul
sub
test
adc
xchg
mov
je
sub
inc
xchg
mov
xchg
cmp
leave
imul
and
std
pop
or
push
mov
jo
mov
inc
rolb
mov
cmp
cmpsb
cmp
cs
in
lds
xlat
lods
out
or
lcall
dec
aad
pusha
aas
or
sbb
fwait
inc
aad
mov
mov
jl
decl
pusha
xchg
and
inc
mov
mov
das
mov
mov
sbb
ljmp
scas
pop
push
pop
jbe
dec
push
hlt
pop
ss
xor
cmp
ret
push
xlat
int3
mov
js
cmpsl
mov
push
mov
int
push
cmp
mov
inc
gs
jmp
imul
icebp
pushf
in
push
pop
dec
popf
push
dec
pop
mov
xchg
in
and
popl
jne
jo
cmp
test
jmp
aaa
push
jne
mov
fisubl
push
mov
add
xchg
fcoml
xor
enter
imul
imul
decb
jbe
fisttpll
mov
lock
lods
repz
out
jo
mov
stc
xor
mov
and
mov
or
mov
or
call
out
jmp
movsb
push
rcrb
mov
inc
xor
inc
arpl
add
mov
lahf
andb
push
or
xor
adc
rorl
cmp
inc
pop
mov
mov
fwait
fs
jae
add
test
stos
mov
mov
xor
in
repz
arpl
cmpl
data16
cld
and
jo
push
push
jb
push
ret
test
shll
dec
and
or
clc
inc
fsqrt
cmp
fiaddl
push
sub
xchg
push
cmp
sub
mov
sub
jl
mov
sub
scas
push
cmp
inc
cmp
xchg
cmpsb
loope
in
jbe
mov
jge
push
das
ja
jmp
push
jecxz
mov
jecxz
stos
sub
sub
lds
mov
xchg
stos
or
mov
jp
clc
push
inc
adc
mov
scas
std
mov
add
js
sahf
pop
push
cmp
fcmovnb
mov
mov
out
cmp
sbb
test
arpl
and
pop
mov
es
cltd
out
jbe
xlat
pop
out
ret
push
inc
xor
cmp
jae
repnz
push
inc
mov
pop
pop
test
filds
xchg
loopne
adc
testb
popa
ret
cmp
arpl
std
cmp
lods
test
mov
push
leave
add
lahf
dec
dec
xchg
mov
cmp
enter
jl
sub
int
test
cld
stos
mov
mov
lds
rclb
jg
mov
aaa
jnp
into
fnstcw
mov
cmp
jo
mov
or
mov
mov
pushf
push
cmp
in
mov
sub
dec
lcall
dec
repz
sbb
add
push
arpl
decl
addr16
fdivs
cmp
jb
or
loopne
jecxz
or
sub
cmpsb
mov
bound
mov
mov
in
fistl
and
adc
push
out
pop
cmovbe
xchg
stos
push
popa
push
fwait
sub
sbb
lods
fists
lea
inc
jo
cwtl
cmpl
lret
mov
and
mov
adcl
gs
push
fstl
adc
xchg
push
ror
test
jns
sahf
cmpsl
idivl
pop
xor
mov
xlat
pop
cs
fsubl
xor
pop
sbb
add
mov
stos
fwait
and
int3
in
insl
pop
and
lcall
pop
lret
stos
nop
and
test
cmpsb
push
inc
xchg
insl
mov
cmp
jg
lret
dec
jbe
and
aas
aaa
mov
inc
shlb
xchg
jae
in
cmp
sub
or
inc
mov
mov
rorb
dec
scas
add
gs
jmp
cmp
xchg
inc
mov
lea
mov
fists
lret
sti
sub
stos
test
jg
test
and
jae
xor
cmpsl
incl
test
shrb
icebp
sbb
push
pop
xchg
sbbb
dec
push
mov
dec
adc
mov
dec
loope
xchg
mov
aaa
or
adc
fsubl
inc
pop
outsb
xchg
jo
lea
popf
test
fs
leave
jb
ret
lret
dec
pop
and
sbb
mov
test
inc
test
lret
sub
js
cmc
sbb
mov
sti
out
sbb
stc
inc
mov
ficompl
adcl
loop
push
int3
mov
sub
lods
jg
mov
mov
lret
dec
or
orl
fsubs
xchg
mov
addr16
sbb
jae
mov
xchg
loop
imul
add
outsl
movsb
cmp
out
mov
call
sbb
shl
dec
mov
adc
and
sub
sahf
jo
das
mov
and
push
test
loope
sub
lret
pusha
jp
jnp
cmc
mov
sub
pushf
fcomip
dec
into
sub
pinsrw
xor
lea
jo
lret
leave
test
mov
insl
mov
rcll
out
cmp
loop
lock
lds
dec
cld
dec
inc
in
add
inc
jg
dec
fadd
pop
lret
aam
fadds
adcl
mov
es
inc
sbbb
mov
stc
movsb
mov
sti
shr
iret
inc
mov
stc
xor
mov
lret
daa
inc
pop
mov
daa
or
mov
in
mov
dec
lcall
pop
adc
pop
dec
repz
repnz
dec
sbb
lds
shr
hlt
cmpsl
cmp
jecxz
rcll
sbb
outsb
movsb
mov
sbb
add
inc
add
shr
jl
or
stc
xchg
jno
test
insb
es
pop
mov
mov
adcl
xor
xchg
popf
mov
shrl
mov
lock
and
sub
bound
pop
lahf
pop
add
pop
in
cmpsb
stc
pop
push
dec
cmp
into
ffree
push
jbe
orl
test
mov
adc
pop
lds
jne
aam
pop
clc
mov
fiadds
dec
inc
pop
push
outsb
cmc
lock
sbb
adc
test
outsl
hlt
addl
jae
sahf
sti
adc
jl
mov
push
pop
push
lret
inc
mov
add
mov
mov
jp
inc
xor
out
idivb
jns
add
iret
sbb
loop
mov
jb
pusha
mov
adc
jb
jg
fdivp
xor
cltd
xlat
dec
into
out
pusha
xorb
sub
ljmp
leave
and
cmpsl
sbb
inc
rcll
cmp
mov
outsb
mov
out
pop
repnz
test
fwait
js
or
std
testl
into
xor
fstpt
jb
adc
in
fwait
aam
add
mov
pop
insl
adc
jg
xchg
dec
adc
mov
jge
fcomip
inc
and
ljmp
ds
je
or
cmp
adcb
loop
jmp
ret
shr
xchg
pop
mov
xchg
outsl
add
push
mov
mov
adc
bnd
sub
mov
call
inc
jnp
popa
xchg
int3
out
pop
cmp
cs
in
movsl
subb
es
test
mov
adc
hlt
adc
push
mov
cmp
mov
mov
jbe
mov
cmpsb
add
cmpsb
test
daa
dec
andb
movsb
jb
lods
nop
pop
sbb
xor
cwtl
orb
add
cmp
movsb
sbb
fdivrl
std
or
std
scas
pop
in
data16
cli
jno
or
xor
test
jecxz
sbbb
andb
scas
and
jne
push
inc
sub
stc
xchg
add
out
pop
jbe
aam
je
aad
ljmp
sub
arpl
rclb
mov
jo
fldcw
daa
imul
push
mov
je
rol
ds
sti
repnz
mov
fcomp
sbb
test
out
inc
xchg
adcb
mov
mov
hlt
test
push
jae
dec
int3
xchg
stos
push
fnstenv
sub
out
lahf
dec
xor
adc
stos
test
mov
mov
push
push
fwait
lret
andl
ret
insl
xchg
jl
pop
cmpsb
test
push
pop
scas
xchg
cmp
shl
lret
dec
out
movsb
xchg
fxtract
das
cs
mov
push
aas
lret
pop
jb
sub
daa
mov
jne
out
jmp
inc
add
sub
imul
call
fnstsw
mov
pop
loop
pop
mov
cltd
sbb
mov
out
jmp
adc
loope
or
jne
in
mov
ffreep
mov
or
sahf
jb
in
fcom
inc
rcr
push
mov
ficoml
clc
sub
mov
and
lcall
aas
lods
add
in
or
divb
dec
mov
add
pop
fstpl
and
in
or
repz
inc
xchg
jo
ficompl
fistps
mov
sub
loopne
movsb
pop
fistpll
mov
adc
hlt
xchg
mov
or
in
or
ss
and
jg
pop
fsubr
dec
dec
ss
cs
xchg
leave
in
dec
mov
sti
cltd
imul
loopne
mov
into
aaa
mov
cmp
mov
or
mulb
rorb
add
in
inc
lods
cs
or
add
test
ja
pop
push
pop
enter
pop
emms
or
jge
ljmp
notb
jae
push
mov
aaa
shrb
mov
xchg
addb
mov
add
pop
xchg
cwtl
cmc
dec
inc
mov
mov
pusha
jp
pop
loope
cmpsb
ss
rcl
negl
scas
ficomps
mov
and
loope
add
fcomi
jl
dec
testb
sub
mov
lret
popf
xchg
repz
push
fbstp
orl
pushf
push
test
cmp
lods
jae
ds
popl
mov
data16
imul
fsubs
test
inc
jbe
lock
push
es
out
loopne
cwtl
popa
lods
jns
or
mov
fildl
mov
ss
push
xchg
sbb
sub
sahf
clc
cmp
pop
ret
sub
shlb
lahf
or
sti
pop
inc
test
dec
arpl
sub
mov
mov
mov
roll
cmc
pop
pop
xchg
or
cmp
mov
inc
std
int
loop
cmc
add
sahf
add
fs
fucomp
fldenv
shl
ret
cld
insl
rcrb
push
test
mov
push
out
fldlg2
xor
inc
jl
pop
aam
mov
movsl
jl
xor
data16
aad
xchg
pop
cmp
mov
push
dec
aad
rcll
pop
cmp
jp
add
ja
es
ja
dec
das
xor
sarb
adc
mov
cmpsl
xor
xor
les
cltd
mov
cwtl
dec
popf
pop
jb
add
rorl
jmp
pop
pavgw
jns
imul
fwait
mov
push
imull
and
mov
jl
leave
gs
push
jmp
enter
rorb
pop
pop
jle
cmp
arpl
call
add
xor
outsl
xchg
int
fists
inc
xor
push
fsin
in
mov
enter
inc
mulb
pop
stc
repz
in
lods
dec
cmp
in
xchg
mov
mov
sbb
mov
and
insl
rolb
xor
pop
outsl
sbb
inc
cmp
insb
loopne
pop
nop
iret
std
popa
xchg
adcb
xchg
jle
adc
add
or
lea
scas
je
out
mov
xchg
shl
jne
imulb
rol
test
pop
das
fcompl
add
fldcw
jno
decl
or
sbb
and
sub
jbe
fcmovnu
sub
mov
cltd
fnstsw
cmp
sub
xchg
das
shrl
jg
mov
mov
div
inc
movl
stos
push
cmp
repz
cmp
sbb
scas
and
popa
popa
pop
icebp
push
pusha
fcmove
aam
push
scas
cmp
dec
outsl
jp
inc
lods
fwait
les
or
xorb
push
mov
scas
hlt
or
sbb
sub
fs
mov
mov
jns
mov
inc
stos
das
xor
sbbb
nop
cmp
shrl
push
pop
or
push
push
dec
pop
mov
and
ret
add
sbb
movsl
dec
jp
jecxz
xchg
add
inc
adcl
or
adc
xor
ds
adc
sbb
cmp
cmp
ficomps
jmp
mov
inc
push
jno
xlat
cmp
insl
push
scas
mov
in
rorb
subb
jne
push
push
adc
jns
add
xorl
push
mov
ret
mov
sub
add
pusha
mov
ss
int3
sub
setge
ds
lds
rolb
jbe
mov
adc
idivb
inc
mov
inc
cld
dec
mov
scas
or
or
mov
add
shrl
mov
mov
sbb
and
add
aad
pop
lods
push
pop
sahf
jmp
ljmp
lock
test
mov
inc
xlat
mov
mov
outsb
mov
mov
mov
fcmovu
fistpl
sub
pushf
pop
call
pop
jae
pop
pop
ja
repz
mov
sahf
lea
fcmovne
or
dec
inc
popa
or
fdivl
xchg
rcrl
pop
icebp
rcrl
icebp
leave
leave
sub
dec
rorl
neg
call
stos
sbb
pushf
cs
sub
jb
sub
lahf
dec
popf
int
jl
push
enter
daa
lcall
stos
inc
cmpl
inc
in
insl
pop
xor
sbb
clc
je
mov
cmpsl
pop
sarb
js
lods
dec
rcll
stos
or
fcomps
sahf
stos
mov
pop
rcl
fadds
ljmpw
jbe
mov
push
mov
lea
jmp
add
cmc
lods
jo
xchg
jmp
call
and
mov
sahf
add
sub
and
les
adc
arpl
ljmp
outsb
imul
add
push
es
ja
and
popf
mov
test
daa
push
jo
iret
pop
jmp
loopne
dec
imul
mov
fsubrs
test
in
pop
or
sahf
arpl
dec
pop
pop
jl
or
add
test
mov
pushf
add
push
aad
or
mov
out
xor
adc
jne
push
ret
test
push
into
in
mov
mov
adc
jne
lret
sub
and
mov
test
push
std
push
sar
and
pop
lods
mov
adc
xchg
pop
jbe
bound
ret
pop
ret
push
outsb
push
call
in
pop
adc
xor
pop
arpl
pop
sahf
test
pusha
lds
xor
iret
stos
adc
popf
fsubr
jbe
mov
cltd
adc
cmp
adc
push
sub
inc
es
lret
mulps
xchg
pop
imul
lea
xchg
sub
sub
mov
movsb
xchg
jbe
and
lods
fldl
sbb
adc
push
mov
in
ljmp
cli
dec
mov
inc
sub
mov
jp
cli
cmp
mov
aaa
scas
push
inc
jae
or
mov
shlb
punpckhwd
jbe
pop
push
push
fildll
jp
xlat
xlat
jmp
push
insb
xchg
push
popf
lods
and
and
arpl
mov
push
mov
inc
cld
mov
dec
daa
andl
and
divb
pop
lock
daa
icebp
jl
inc
xchg
dec
pop
inc
cmp
inc
sahf
fiaddl
jmp
pop
mov
sub
cwtl
mov
fmul
mov
add
dec
scas
pop
lds
fcmove
mov
and
jp
repnz
rorb
outsl
iret
ret
mov
icebp
mov
inc
jmp
inc
or
mov
test
ret
iret
sbb
outsb
rolb
mov
sahf
ret
xchg
xchg
movsl
out
addb
scas
je
sbb
hlt
shr
mov
lock
lcall
cmpsl
bound
xor
pop
movsb
adc
rcrl
add
push
mov
sbb
outsb
daa
pop
pop
ja
adc
icebp
xor
jmp
loopne
iret
aaa
out
inc
sbb
xor
bound
mov
hlt
adcb
pushf
push
mov
outsl
and
jns
push
in
lret
push
mov
repz
gs
mov
xor
insb
das
and
jmp
adc
lret
popa
adc
ljmp
ret
fnstsw
inc
mov
mov
mov
mov
mov
shrb
pop
lods
movsl
inc
jbe
cld
mov
pop
jns
stc
data16
aas
fiadds
testb
test
xor
mov
inc
xchg
mov
jb
add
jno
lods
inc
repnz
sahf
dec
jnp
stos
aad
stos
xchg
pop
lcall
dec
outsb
sbb
imul
repz
mov
xor
mov
outsl
sbb
xchg
dec
lcall
daa
xchg
dec
mov
sbb
mov
xlat
out
mov
bnd
rep
xor
fnsave
cmp
lods
and
cltd
lahf
dec
sub
push
seta
dec
popf
ja
xchg
and
xchg
int3
cmp
cmp
sub
sbb
test
outsl
xchg
mov
pop
scas
rorb
imul
out
jb
faddl
ss
in
push
repz
in
or
dec
in
mov
xchg
jae
rolb
test
mov
cmp
mov
cmc
lret
cmp
shrl
pushf
popf
lods
pop
sub
push
shlw
cmpsb
xor
xchg
inc
push
mov
mov
loop
movsb
pushf
mov
mov
fsubl
mov
sub
std
rolb
jnp
and
xlat
jo
dec
push
lods
jnp
das
adc
xor
rclb
lret
repz
cmp
les
jbe
test
repnz
push
ja
sub
insl
frstor
or
movsl
jb
daa
rcll
shll
ret
and
popa
imul
mov
loopne
les
xchg
mov
fnstcw
repz
pop
jl
pop
fmuls
clc
lds
mov
xchg
subl
dec
ljmp
pushf
nop
pusha
pusha
clc
data16
mov
xchg
xor
ss
mov
pop
xchg
dec
stos
jg
into
xor
xor
cld
and
sub
popf
xchg
hlt
rorb
bound
dec
mov
inc
ret
inc
adc
test
inc
cs
or
mov
jge
xor
pusha
jno
dec
pop
fs
sahf
fincstp
mov
pop
lods
inc
mov
mov
mov
mov
xor
fldenv
ds
lds
pop
movsb
pushf
stos
idiv
fisttpll
xchg
in
lret
xchg
pop
jb
in
adc
sbb
mov
pop
push
xor
mov
ret
ret
inc
xor
in
in
mov
mov
fmuls
cltd
testb
sbb
test
jge
lahf
xchg
push
pop
jno
mov
push
shlb
inc
lret
ffree
lods
sbb
in
push
lods
xchg
add
adc
xchg
or
mov
lds
mov
cmp
mov
fists
jmp
in
repnz
xor
std
adc
pop
shlb
decb
enter
dec
lret
std
call
jae
inc
cmp
push
shll
andb
push
sub
add
mov
adc
jmp
xchg
frstor
rcl
cmpsl
sbb
inc
pop
cld
nop
pushf
int3
push
add
test
out
xchg
test
and
cwtl
inc
shll
into
ss
jle
mov
mov
xlat
jl
jb
pop
jae
lret
into
sbb
lea
lds
dec
pop
jne
cmp
and
orl
mov
mov
dec
out
cld
add
std
pop
daa
ret
arpl
inc
in
cmp
popf
scas
int
pop
mov
sahf
add
rol
bnd
xchg
xlat
data16
lds
out
in
pop
cmpsl
mov
je
bound
les
fwait
sub
in
js
pop
insl
outsl
push
mov
mov
repnz
clc
stos
mov
xchg
fwait
and
jb
inc
shl
pusha
lcall
or
jmp
imul
inc
xchg
or
mov
ss
cmp
ss
popa
pop
jmp
inc
dec
fisttpll
into
iret
in
stos
cmpsl
jg
cmp
icebp
jle
enter
cmp
inc
mov
movl
scas
faddl
mov
xor
dec
ret
adc
add
sub
fldz
cmp
jl
lret
push
mov
mov
aas
jecxz
xor
push
lret
sub
fnstcw
or
push
adc
cli
jmp
xchg
and
outsb
cmp
push
adc
mov
in
xchg
pop
adc
mov
xchg
scas
out
enter
inc
scas
cmp
arpl
push
pop
movsl
jl
pop
ret
aaa
pushf
cltd
or
mov
jo
dec
jg
sub
sbb
aad
enter
movsb
pop
sar
sarb
jp
scas
int3
pusha
sbb
imul
call
xor
dec
sub
push
mov
jno
push
andl
ret
or
sti
iret
cmc
cs
adcb
fstpt
or
pop
sbb
mov
or
flds
scas
mov
xchg
ss
in
pushf
sbb
int3
xchg
shrb
sbb
mov
or
lret
pop
test
add
out
cmc
inc
fisttpll
int
pushf
inc
cmp
iret
xchg
dec
shlb
xor
jl
fsubrs
sub
lret
or
sub
mov
stos
shll
outsb
js
int3
sbb
lods
push
cli
pop
mov
push
and
lret
mov
stos
jne
std
andb
movsl
push
nop
sbb
cmpsb
sbb
mov
dec
and
lret
out
push
inc
mov
cmpl
iret
mov
dec
mov
test
movsb
mov
test
fucomp
lock
aam
mov
mov
roll
and
inc
xor
jae
mov
repz
dec
cmp
cmp
pop
mov
cmc
orb
push
mov
leave
mov
vpcmpeqd
jmp
pop
ljmp
jmp
mov
sub
je
adc
xlat
mov
jmp
push
dec
xchg
fs
bound
je
jo
sbb
insl
rcr
insl
outsb
jecxz
sub
push
fcomps
or
neg
or
jo
iret
subb
mov
sahf
shrl
mov
lods
lcall
jnp
mov
lock
or
lea
dec
inc
mov
cwtl
aas
ffree
mov
jle
mov
pushf
data16
ror
sbb
rorb
mov
xchg
jo
rolb
mov
jp
mov
push
mov
ss
hlt
je
mov
mov
push
divb
pop
das
sub
and
mov
hlt
pop
daa
fwait
sub
mov
pop
arpl
cmp
adc
lds
mov
mov
arpl
call
les
hlt
into
push
add
mov
or
push
inc
jmp
jl
xchg
dec
inc
mov
mov
jo
jbe
cwtl
mov
daa
stc
inc
and
outsl
xchg
lock
rcr
inc
pushf
and
lods
pop
inc
mov
xchg
and
jmp
and
jge
out
sbb
jae
imull
repz
push
jb
test
or
mov
lcall
ret
sub
imul
pop
popf
mov
iret
testl
das
pop
jecxz
leave
daa
lds
testl
rol
test
xchg
clc
mov
shlb
pushf
les
xchg
push
push
shrl
jmp
push
jmp
mov
fidivrs
xchg
dec
dec
inc
lahf
push
cs
std
ret
mov
cltd
rorl
popf
ja
jno
mov
and
loopne
daa
jl
aad
inc
dec
inc
sbb
call
je
push
mov
testb
adc
cli
xlat
pop
lea
inc
mov
pop
cmpsl
jmp
or
scas
lods
je
sahf
loopne
pop
cwtl
cs
xlat
xchg
insb
dec
adc
sbb
jmp
loop
sbb
popa
mov
scas
icebp
push
pop
inc
iret
loope
lds
adc
pop
xchg
in
pusha
pop
out
lea
push
ss
pop
popf
push
or
mov
xor
icebp
fs
add
or
sbb
lods
inc
xchg
cltd
mov
icebp
in
jmp
or
push
mov
xlat
xchg
xchg
addl
adc
cmp
stc
fisttps
pop
xchg
fdivrl
push
pop
ret
aam
jno
xor
xor
js
adc
ret
xchg
loop
ja
add
mov
pop
arpl
push
mov
mov
test
dec
aam
pop
or
mov
pop
jmp
jae
sub
pop
jg
mov
fdivl
xchg
arpl
inc
fiaddl
dec
pop
mov
sbb
dec
pop
lock
fldt
test
repz
std
shr
inc
insl
and
gs
cmc
push
sub
fstps
movsb
ret
lds
mov
sub
fisttps
sbb
or
sub
mov
xlat
test
cmc
popf
aad
jl
cmc
xchg
jnp
sbb
pop
jne
outsl
cmpsb
aam
add
addl
inc
leave
and
addr16
stos
adcb
push
fcompl
jo
ljmp
lcall
push
scas
lret
pop
fcomps
jbe
adc
xchg
xchg
loope
in
xchg
movsl
fs
pop
inc
lock
jp
inc
lret
mov
ljmp
mov
rcrb
call
shll
cmpsb
sbb
sbb
pop
push
aas
cli
insl
mov
pop
fstpt
sub
mov
mov
mov
mov
movsl
inc
in
fnstsw
lahf
frstpm(287
xchg
jl
mov
loopne
insl
jb
lods
push
cld
mov
mov
mov
nop
and
mov
pusha
or
sbb
mov
repz
sbb
fwait
pop
mov
pusha
movsb
jl
popa
mov
dec
mov
add
mov
dec
push
or
test
ficomps
into
js
adc
insb
mov
jmp
mov
pushf
cmp
mov
popa
out
shl
add
lcall
cmp
cwtl
cmpsl
ja
sarl
mov
imul
aad
sbb
jmp
or
jno
pop
push
mov
dec
arpl
movsb
push
stc
out
cmpsb
xchg
dec
xchg
or
mov
add
jno
dec
enter
mov
jg
pushf
add
daa
imul
cmpl
mov
sti
push
lds
ret
mov
jbe
push
dec
mov
and
dec
lods
pop
pop
les
daa
scas
xchg
mov
or
out
popa
push
insl
push
ja
fldt
xchg
fisubs
xchg
mov
sbb
stos
sub
aas
and
mov
pusha
add
popf
adc
insb
sub
adc
sahf
hlt
sti
imul
jp
xor
nop
movsb
adc
mov
ret
and
inc
rolb
call
fiaddl
dec
pusha
shlb
rorb
repz
dec
xchg
jnp
or
out
cltd
lret
adc
xchg
in
bound
push
rcll
aam
in
adc
leave
mov
fwait
sbb
xor
lahf
fiadds
loopne
jnp,pt
cltd
mov
js
inc
push
mov
push
into
inc
xlat
sub
add
and
xchg
imul
pop
jno
pop
push
xchg
je
sub
aaa
getsec
jmp
xchg
and
imul
inc
aam
fidivrs
ljmp
and
inc
subl
jle
loope
sbb
mov
xchg
repz
lea
hlt
shll
cmc
push
aam
leave
popf
insl
sbb
xor
and
inc
std
xchg
icebp
push
mov
push
jnp
push
popf
outsl
bound
js
xchg
loopne
mov
cmp
mov
inc
scas
sub
arpl
xor
adc
fstp
pop
and
aas
testb
xchg
inc
sti
scas
jo
pop
loop
adc
in
cwtl
and
or
fildl
out
leave
js
xchg
jmp
lahf
jo
mov
popf
test
test
in
mov
scas
add
out
daa
push
dec
iret
nop
jge
gs
test
insb
ja
push
lods
sbb
jmp
sub
mov
loopne
cltd
pushf
das
jl
sbb
jmp
clc
lock
repnz
cmpsl
pop
pop
std
mov
dec
mov
test
xchg
jo
test
cltd
icebp
jnp
mov
mul
or
jmp
adc
loope
popf
cmp
rcrl
or
mov
outsl
ljmp
out
mov
test
les
fwait
or
daa
lahf
imul
mov
test
sti
mov
mov
test
mov
test
mov
dec
pop
enter
ret
dec
cs
xchg
fisttpl
nop
mov
jmp
lods
bound
das
and
sahf
jg
clc
lcall
xchg
insl
negl
fwait
mov
stos
insl
pop
in
add
push
fidivrl
mov
dec
push
add
dec
dec
aam
int
test
dec
mov
jae
xchg
imul
and
insl
pushf
mov
push
rorb
push
imul
push
pop
scas
xorb
les
lcall
movsb
cld
push
mov
fists
cmpsb
sub
ret
out
loope
or
pop
jmp
dec
ret
adc
jns
dec
push
xor
popf
xor
jl
mov
inc
iret
push
je
xchg
mulb
clc
sbb
inc
push
outsb
jmp
pop
sbb
inc
adc
lret
int3
inc
xor
inc
shlb
scas
data16
and
mov
add
adc
push
push
outsb
sbb
or
mov
cmpl
mov
fs
testl
xor
out
das
dec
jo
mull
lds
addl
imull
je
xchg
cmpsl
sahf
xlat
or
xor
icebp
inc
fwait
rol
movsl
sbb
push
cmp
addr16
jnp
or
and
dec
scas
fbstp
add
notl
pop
inc
push
lods
adc
flds
negl
cmp
in
lods
sbb
lods
push
adc
rorb
mov
clc
rorl
out
in
push
stos
and
stos
adc
jae
mov
ret
pop
sbb
inc
daa
aad
shrl
dec
adc
or
bound
pop
ds
dec
sub
in
roll
push
push
fwait
loopne
test
xor
xchg
pop
out
ror
mov
inc
popl
cld
pop
mov
mov
lcall
lea
jnp
and
arpl
xchg
shlb
int3
jo
stos
js
in
sti
mov
cmp
xor
lock
cmpsb
mov
mov
pop
pop
jge
popf
cmpsb
mov
push
rcrb
int
sti
arpl
call
lods
in
mov
addr16
and
mov
test
test
or
stos
mov
pop
ds
and
cmp
dec
sbb
movl
sub
lock
push
sub
clc
out
nop
test
mov
addb
mov
dec
cwtl
xchg
cld
rcr
mov
mov
xor
add
adc
xor
or
jge
rcrl
or
jnp
out
push
jg
insb
push
dec
cmp
ret
sahf
pop
mov
aas
xor
or
fucomp
inc
dec
mov
orl
repnz
inc
mov
test
hlt
push
out
jne
imull
clc
dec
bound
mov
testl
stc
stc
daa
sbb
cmpsb
inc
xchg
es
jl
pop
sub
xlat
push
xchg
mov
out
les
rorb
cmpsl
push
pop
mov
dec
jno
jne
fistps
jg
rorl
les
mov
jle
jge
jbe
scas
xor
pop
pop
xor
in
mov
push
cmp
xchg
jle
cld
std
inc
psubq
bound
adc
cs
and
dec
push
xchg
loopne
sbb
out
jge
push
jg
push
mov
inc
cmp
shl
adc
add
adc
jle
js
fmuls
and
inc
sub
test
in
das
adc
scas
inc
cmpsb
ret
shll
inc
and
aaa
icebp
dec
lcall
xor
ret
ror
aam
loope
pop
inc
xor
movsl
xchg
xor
dec
mov
test
movsb
cltd
ret
jbe
pop
pusha
dec
sub
pop
fstl
popa
lods
and
push
es
sub
out
jb
fstpl
sbb
loopne
jg
lret
fs
xor
out
xor
loop
sahf
in
mov
push
mov
in
mov
loopne
in
enter
or
popa
mov
cli
ret
cwtl
and
push
fbstp
xchg
popa
jg
mov
push
rclb
addr16
fsts
push
xorb
dec
mov
push
jl
pusha
cld
in
inc
dec
mov
out
xor
lods
adc
push
out
aam
sub
mov
pop
mov
lahf
fildll
pop
stos
mov
pop
xchg
adc
sahf
sbb
loopne
insb
add
test
ror
andl
test
dec
sbb
lahf
lea
idivb
icebp
mov
fs
mov
mov
pop
inc
iret
mov
stos
jbe
or
xor
cli
seto
xor
pushf
ljmp
and
test
lods
scas
icebp
shll
or
aam
fwait
test
in
xchg
enter
pop
ss
lds
movsl
xor
pop
test
jae
mov
add
lds
dec
mov
cli
enter
or
aam
sub
xchg
add
mov
in
aas
popl
dec
mov
lret
sahf
mov
pop
outsb
xlat
shl
or
pop
popf
movsb
adc
nop
jmp
xor
pushl
lods
pop
int
test
add
rcrl
mov
fistl
pop
mov
lahf
pop
cmp
sbb
mov
bound
mov
cmp
test
or
sub
test
pop
dec
js
in
dec
mul
arpl
mov
roll
cld
sarb
jg
mov
mov
fwait
test
cwtl
cmp
pusha
xor
fldl
adc
test
inc
stos
mov
scas
cwtl
in
mov
ret
mov
aad
mov
lahf
mov
sahf
xorb
xchg
mov
jnp
ret
mov
jg
fsubs
out
push
add
or
iret
cwtl
or
xchg
das
xchg
addr16
bound
inc
mov
sbbb
xchg
and
arpl
pop
fs
or
mov
jo
mov
xchg
fucomip
fsubl
xchg
popf
and
adc
sbb
add
sbb
cmc
gs
and
xchg
idiv
stos
add
push
pop
jmp
cld
jle
ds
test
mov
xchg
rclb
xlat
push
adc
pop
mov
in
dec
into
shrl
jge
adc
fstpl
jbe
and
inc
push
loopne
fisttpl
sub
jl
loop
mov
sub
inc
inc
pop
push
jmp
dec
sbb
sub
test
xor
shlb
repz
sbb
pusha
or
push
xchg
in
and
push
inc
clc
sbb
inc
mov
inc
jp
nop
roll
push
mov
adc
cmpsl
fsubp
mov
or
jg
add
adc
gs
jg
xchg
and
fs
xor
gs
mov
cli
shlb
pop
shll
add
out
xchg
or
mov
mov
mov
sarl
mov
scas
and
jns
lahf
ja
or
fsts
mov
and
ret
jnp
sbb
mov
push
arpl
call
stos
rorb
outsb
hlt
dec
aas
push
inc
fisubs
xchg
fbld
inc
jnp
aad
iret
std
lods
out
outsb
mov
cld
pop
arpl
lahf
outsl
mov
cltd
outsb
fs
mov
xchg
dec
jmp
sbb
imul
push
sub
sbb
pop
iret
pop
cmp
jno
in
std
lea
cmpsb
dec
insl
and
cmp
movsb
mov
stos
or
push
add
mov
loope
mov
loope
insl
fisubrs
cmp
lret
push
js
popa
pusha
notl
fmull
jmp
mov
or
pop
mov
cli
lods
ficompl
jge
jmp
loop
xchg
dec
mov
fsubrl
cmp
leave
adc
negb
fwait
dec
mov
cmc
fidivrs
andl
popa
shll
bound
loop
mov
sti
ja
adc
repz
fs
mov
adc
cmpsl
push
lods
imul
pop
xchg
jg
mov
jno
mov
aad
imul
call
dec
fisubrs
pop
push
test
call
cmp
lret
cmp
sbb
call
xor
lods
inc
in
dec
jo
outsb
xor
sub
push
js
sbb
inc
sub
mov
cmp
mov
sub
jnp
xor
inc
or
or
loope
xorl
hlt
or
jecxz
mov
mov
nop
mov
or
ja
inc
xchg
mov
jae
sbb
mov
lods
outsl
fsubrl
test
lods
int
in
bound
arpl
ret
push
mov
repnz
mov
ss
out
mov
popf
adc
aam
sti
leave
mov
aaa
adc
outsb
pop
lods
repnz
scas
es
pop
jmp
sbb
enter
mov
inc
cmpsb
jns
xor
sub
aaa
add
xlat
push
leave
and
fcmove
xchg
inc
inc
sahf
push
mov
aaa
dec
ja
es
mov
stos
push
es
sub
js
rolb
iret
cmp
int3
cmp
dec
data16
aam
test
movsl
mov
loopne
add
inc
cltd
shlb
data16
mov
push
dec
lock
jmp
aam
lret
in
int3
in
mov
sar
dec
and
sbb
shl
pop
mov
arpl
and
mov
out
cmpsl
gs
mov
nop
je
sahf
sub
int3
dec
icebp
mov
jbe
sbbb
jmp
std
adc
je
lds
test
insb
imull
mov
or
xchg
push
ljmp
test
sahf
sub
imulb
inc
jle
insl
aad
sahf
je
int
mov
lock
push
mov
pop
insl
popa
push
jecxz
sbb
or
mov
push
sub
sbb
xor
cli
jbe
rorb
sbb
xor
cmpl
push
mov
mov
sub
inc
orl
jb
aas
and
mov
insb
ficomps
jno
dec
pusha
adc
mov
cmp
and
outsl
mov
adc
enter
cmpsl
lahf
xor
sarb
push
dec
sbb
push
cmp
test
scas
inc
dec
or
int3
dec
dec
sbb
push
mov
iret
imul
negl
rcrb
imul
mov
call
out
mov
fisttps
and
sbb
dec
cmp
flds
loope
stc
mov
loope
or
mull
div
pop
test
mov
jb
aas
xchg
fmul
mov
sbb
stos
dec
push
cwtl
enter
push
hlt
cmp
mov
int
ss
popf
xor
cwtl
dec
mov
test
in
push
out
push
jmp
inc
sub
cld
fisubrs
mov
cmp
dec
mov
and
pop
push
mov
inc
addr16
add
sbb
insb
pop
sbb
cmpl
pop
xor
iret
jae
sbb
scas
loopne
mov
mov
xor
dec
test
sbb
in
xchg
out
and
mov
inc
stos
inc
or
add
ljmp
andb
out
xchg
lcall
test
icebp
imul
mov
pmaddwd
out
fists
in
pusha
mov
sub
xchg
insb
jnp
xor
xchg
mov
gs
and
out
pop
jge
mov
fldl
pop
or
pop
mov
data16
jmp
ficompl
int3
mov
mov
fmuls
sbb
test
loopne
test
push
xor
cmp
push
or
in
dec
adc
add
sbb
jbe
out
mov
out
push
out
cli
fnsave
mov
fistps
mov
int3
test
popf
and
mov
out
in
fisttps
test
leave
ja
dec
dec
sbb
popf
xchg
outsl
cli
adc
call
in
scas
fdivrs
fidivrl
jmp
or
aaa
mov
mov
bswap
xchg
adc
xor
lods
ja
adc
mov
test
fwait
add
or
mov
adc
adc
pop
ret
cmp
ss
outsl
test
imul
dec
mov
xor
std
xchg
pop
xlat
gs
gs
in
xchg
sbb
push
push
lods
int
movsl
fnstcw
mov
rclb
shlb
xchg
dec
test
pop
bound
les
stc
aad
pushf
int3
int
sarl
cmpsl
sbb
add
sbb
notl
or
xchg
mov
arpl
sbb
or
pop
push
jge
ret
jp
iret
repz
xchg
in
fwait
cmp
xor
rcr
add
jecxz
mov
jmp
pop
test
push
add
push
mov
pop
imul
into
in
inc
pop
adc
mov
and
pop
mov
mov
push
scas
sub
cmpsl
sub
lods
mov
les
pop
xchg
loopne
sbb
ret
xchg
or
fildll
daa
jge
xchg
sub
cld
mov
pop
push
popf
ret
test
enter
dec
mov
push
repz
pop
inc
fstps
push
lret
dec
addr16
lahf
sbbb
dec
add
mov
mov
and
roll
imul
add
xor
scas
in
das
movsl
enter
xor
mov
ja
dec
inc
cmp
cli
pop
stos
sbb
fdivr
cmp
lds
push
loopne
adc
sarb
mov
in
or
sbb
fs
adc
repz
leave
mov
push
mov
stos
lock
xchg
xor
mov
shll
sahf
int
stos
aas
xlat
int3
fsubrs
xor
test
iret
mov
mov
imul
out
adc
iret
mov
aad
shrb
cli
pop
hlt
pop
pop
dec
lock
test
rcr
pop
fisubrs
movsl
and
aas
icebp
test
pop
adc
sbb
pop
lcall
ret
jb
push
insb
fxch
rcrb
ds
inc
repnz
and
and
xchg
jmp
xor
test
sub
pop
cld
push
mov
daa
sub
daa
sbb
cli
imul
or
ret
jl
mov
and
mov
pop
xchg
std
movsl
inc
jns
mov
outsb
or
push
cmpsb
add
icebp
sub
or
es
repz
and
pop
xlat
pushf
bound
sbb
test
sti
enter
sarl
ret
fstl
roll
jmp
dec
loopne
scas
add
inc
mov
push
mov
sbb
movsb
xchg
enter
xchg
sub
loope
outsb
mov
mov
inc
fnstcw
lds
add
xor
sar
or
imul
mov
sub
mov
cmp
andb
jno
push
iret
sub
dec
lock
sbb
into
mov
cli
sbb
pusha
sub
mov
ss
jb
outsb
mov
mov
jae
andb
or
jp
xchg
jns
xchg
jecxz
jno
fcom
movntq
repnz
imul
adc
aas
and
in
dec
das
cltd
jg
lods
dec
sbb
jo
loopne
jnp
dec
out
pop
testb
lea
rcll
mov
xchg
dec
test
cmp
fldt
div
es
call
je
push
fsubrl
icebp
rcrb
outsl
push
arpl
not
test
add
fmull
or
mov
rclb
data16
sahf
sbb
imul
rcrb
add
cs
dec
dec
jno
dec
adcb
cmp
outsb
mov
cwtl
hlt
test
test
push
mov
push
int
and
pushf
mov
iret
jno
mov
sbb
or
xchg
insl
addr16
icebp
popa
std
mov
daa
hlt
insl
pop
stos
cmp
cmc
shr
pop
test
cmp
mov
xlat
jns
xchg
pop
sub
mov
in
icebp
repz
out
xchg
jb
xchg
jle
ljmp
push
daa
cwtl
in
out
in
ds
xlat
ja
mov
aaa
pusha
je
into
sbb
xor
lahf
push
repnz
mov
into
stos
insb
cmp
dec
aas
out
outsl
mov
stos
push
aad
jnp
xchg
pop
data16
inc
int3
adc
sbb
jmp
fsubl
inc
add
out
push
mov
add
inc
dec
dec
scas
jmp
jl
clc
out
imul
les
fisubl
mov
cld
mov
out
scas
scas
and
leave
stos
jne
je
dec
js
andl
not
and
jae
dec
lret
enter
les
cmpsl
ror
fcmovnb
bnd
pop
popa
into
cld
dec
lahf
xor
jns
push
mov
loopne
nop
or
into
mov
leave
pop
push
int
pop
jecxz
leave
andb
mov
pop
in
gs
lcall
push
cmp
shlb
xchg
mov
sbb
repnz
insl
dec
mov
repz
mov
test
push
jecxz
inc
test
rcll
mov
push
test
loopne
insb
dec
pop
push
shlb
enter
or
and
into
loop
fld
call
cld
jbe
xchg
dec
aad
or
je
mov
cld
sahf
or
shl
idivl
lret
mov
dec
mov
bound
pop
shl
and
pop
aam
cld
xchg
mov
rcrl
add
xchg
xchg
xor
inc
je
cld
rorb
notl
xor
lods
outsb
pop
cmc
or
push
jns
icebp
sbb
pushf
ret
cmp
test
lds
mov
es
insb
test
dec
imul
fbstp
mov
inc
filds
outsb
fsubrs
popf
shl
bound
iret
push
inc
mov
push
out
mov
push
bound
xchg
jnp
mov
les
dec
mov
cmpsl
dec
cmc
xchg
es
adc
ds
inc
cli
gs
int
push
out
sbb
mov
nop
in
adc
adc
cmp
mov
jmp
or
push
sbb
mov
cmp
xchg
flds
mov
jmp
fwait
mov
out
jl
push
test
clc
xchg
movsl
insb
mov
cmpsl
sbb
inc
sbb
ud2
jmp
push
pusha
mov
mov
ret
pop
outsb
mov
aas
sub
bnd
imul
mov
imul
mov
or
dec
mov
xchg
xchg
fcmovu
add
lea
aad
xor
jb
adc
rcr
lahf
jbe
cmovno
inc
lret
popa
pop
fsubrl
aaa
sbb
dec
addl
mov
add
imul
sbb
dec
cmpsl
jae
jmp
inc
cmpb
sub
bound
ja
adc
ljmp
push
pop
mov
lea
cmp
stc
div
jns
sbb
dec
ss
imul
out
sahf
jle
pop
mov
shll
fwait
add
mov
mov
stos
test
scas
pop
pop
and
mov
cmpsb
jo
gs
xchg
sahf
xchg
scas
aam
mov
jp
pop
pusha
adc
int
or
test
mov
jnp
pop
lahf
mov
adc
pop
shl
sbb
sbb
scas
sub
test
popa
mov
aam
loopne
sub
mov
pop
add
xchg
shl
fwait
jnp
outsb
movsb
sbb
hlt
jnp
xchg
or
cmp
and
call
push
inc
add
scas
mov
popa
mov
out
outsl
xlat
xchg
mov
sti
sbb
and
mov
icebp
mov
insb
lret
das
pop
popa
shr
push
orl
test
orb
iret
test
rclb
xchg
or
insb
sub
sub
int3
mov
loopne
cmpsb
hlt
and
lods
push
cmpsb
xchg
popf
jmp
xchg
aas
loopne
cmp
and
xchg
and
mov
inc
adc
fwait
out
stc
add
dec
pop
jno
addb
sbb
mov
mov
sub
addr16
xlat
les
mov
insl
dec
aam
test
fs
mov
and
mov
les
cmpsb
scas
mov
arpl
movsb
ss
scas
inc
mov
in
mov
aaa
xchg
aas
movsb
data16
or
push
notb
test
call
orb
add
mov
arpl
add
aad
and
cli
inc
fidivrs
mov
pusha
xlat
lret
pop
mov
test
in
shrl
or
push
dec
xor
lock
inc
cld
loop
push
js
enter
mov
pop
cld
and
test
adc
cmp
push
sbb
sub
in
inc
add
cltd
repz
nop
out
mov
inc
shrb
lahf
lods
outsb
mov
jo
xchg
rol
fsubrl
xchg
cli
js
dec
lock
xor
fs
mov
fldt
es
add
push
in
enter
out
pop
and
adc
xchg
popf
inc
ds
dec
jne
scas
cwtl
inc
sub
gs
mov
push
jl
jmp
sbb
xor
mov
lcall
push
mov
add
adcb
push
sbb
sahf
cltd
jnp
bound
xchg
test
add
cmp
loopne
sub
roll
imul
int
rorl
and
loop
xor
mov
arpl
sub
fwait
add
cmpsl
outsl
repnz
data16
enter
mov
fisubl
xchg
rolb
adc
mov
stos
and
andl
mov
sbb
mov
in
mov
out
or
mov
orl
test
mov
dec
stc
imul
mov
test
add
mov
inc
xchg
rcll
popf
scas
leave
scas
sarb
inc
repz
hlt
cmp
out
and
pop
lret
pushf
jno
mov
cmpsb
rcr
jo
vshufps
inc
dec
fcoml
mov
into
incl
xor
ret
imul
cli
pop
movntq
and
push
in
mov
repnz
fs
dec
stos
push
mov
lahf
xor
mov
lret
popl
ja
mov
xor
nop
test
mov
cmpsl
push
mov
lods
push
dec
pushf
add
push
xchg
mov
out
push
test
jecxz
mov
repz
mov
in
fisubrs
and
xor
xchg
icebp
adc
sbb
jmp
mov
inc
loope
lret
test
stos
and
dec
imull
push
loopne
add
lret
mov
add
xchg
lahf
notb
outsb
xchg
sti
shrl
mov
sub
bnd
outsl
dec
xchg
popf
add
sub
xorl
pop
repnz
fwait
mov
test
mov
lcall
dec
loop
jnp
push
outsb
ror
lds
push
aam
xchg
testb
out
scas
sbb
loope
fcoml
out
lock
sub
jnp
aas
dec
inc
data16
shl
xchg
or
repnz
insl
out
push
mov
lcall
xchg
lret
mov
jp
push
inc
sbb
ss
add
xorb
mov
sbb
test
sbb
clc
repnz
pop
rorl
dec
lds
pop
lods
sub
fisttps
test
pop
sub
mov
mov
imul
andb
mov
adc
cmp
sahf
loope
sbb
dec
ljmp
rclb
cltd
enter
lcall
mov
mov
out
lock
out
push
mov
cs
lods
out
add
add
test
xchg
mov
addb
xlat
dec
add
aam
hlt
mov
cld
and
sub
in
inc
call
stos
jo
out
out
cwtl
jmp
inc
and
pop
int3
aad
outsb
sbb
iret
sahf
std
jle
ret
in
arpl
add
sbb
and
cmpsb
adc
push
imul
stos
std
mov
out
jg
fldt
pop
fcoms
rorl
js
or
test
jne
pop
stos
inc
sub
or
fildll
xchg
mov
pop
int
and
scas
arpl
aam
jbe
es
je
sahf
ret
mov
jle
into
fwait
cmp
mov
add
push
pop
xchg
inc
mov
mull
pusha
mov
out
scas
mov
push
inc
negl
cmc
lcall
xchg
inc
pop
aaa
and
loop
les
xchg
movsb
pop
fwait
jecxz
sbb
fsubrl
xchg
outsl
orb
nop
enter
int
data16
jmp
in
fnsave
inc
fs
iret
fstpl
pop
ror
sahf
pop
mov
out
out
sbb
scas
mov
xchg
fcomps
outsl
lret
push
sub
pop
lods
and
add
push
jmp
mov
pop
mov
cmp
or
adc
ds
push
shrb
repnz
data16
es
in
pop
loope
or
mov
out
and
test
push
dec
and
push
mov
sahf
sbb
jnp
and
pop
jnp
jb
push
cmp
pop
ljmp
les
loopne
ja
enter
movsb
mov
sbb
addl
inc
aam
mov
xchg
add
xorl
cmpsb
and
cmpl
or
sub
xor
mov
jl
idivb
pop
inc
nop
pop
test
add
out
xor
sahf
icebp
add
scas
or
stc
fstps
ja
cs
mov
cltd
cltd
jg
inc
aas
negb
adc
jmp
jno
lret
lds
add
cmpsl
xor
lea
stos
jmp
xchg
setns
hlt
mov
aad
xchg
movsb
jmp
sub
ds
push
loopne
inc
inc
sbb
add
pusha
xchg
inc
insb
sub
add
fiaddl
mov
cmp
jmp
dec
pop
pop
test
loop
xchg
lds
lods
cmp
test
cmp
in
jl
push
lea
mov
jbe
scas
mov
pop
icebp
int
dec
notl
dec
mov
lock
dec
mov
sti
test
stc
add
aad
outsb
inc
cmp
adcb
inc
cwtl
mov
in
jmp
mov
adc
rcr
mov
rcrb
ret
out
lcall
std
inc
stc
cmpsb
loopne
cmpsb
cmp
lret
add
iret
or
mov
push
jno
and
into
inc
mov
mov
jno
mov
fdivrl
push
dec
xchg
aas
sbb
fdivl
std
shrb
xor
dec
fists
dec
orl
repnz
dec
xchg
les
in
insl
mov
dec
inc
mov
movsb
pop
loop
clc
sbb
mov
mov
sbb
mov
cmpsl
dec
out
test
movsl
pop
mov
pushf
push
loopne
fnsave
sub
and
pushf
repnz
pop
jle
scas
mov
xchg
sub
xor
push
inc
fnsave
sbb
lods
or
sub
inc
fwait
movl
adc
ja
xchg
fwait
mov
or
mov
adc
lcall
sub
icebp
mov
daa
cli
jns
mov
adc
pop
imul
fisubs
inc
cli
fs
sub
cmp
mov
sub
xchg
push
dec
sbb
pop
push
inc
or
ljmp
das
dec
xorb
inc
mov
pop
outsl
push
mov
mov
or
pop
daa
mov
rcrl
xchg
fisttps
loopne
movsl
int3
int
mov
fisubrl
sub
push
into
jmp
scas
aas
sub
ds
int3
cmpsb
add
aaa
push
pushf
cmpsl
jo
clc
sub
ficomps
or
add
mov
jg
in
popf
jle
add
pop
dec
or
loop
pop
mov
loop
scas
mov
pmulhw
push
daa
ret
fidivs
add
jp
jne
ffreep
enter
sbb
jmp
xchg
out
fst
repnz
pop
mov
dec
cmc
add
in
repnz
sbb
ss
jl
movsb
jo
xchg
dec
jno
dec
sub
sub
push
imul
es
sub
iret
and
inc
xor
sbb
and
push
leave
add
adc
popa
mov
pop
repnz
dec
insl
inc
push
mov
fsubrl
and
sbb
add
adcb
push
js
loop
andb
mov
jmp
enter
int3
negb
xor
jl
xor
mov
xchg
mov
shrb
movsb
sbbl
xchg
add
adc
dec
into
jbe
xchg
shll
stos
jp
out
jl
enter
movsb
jge
mov
outsl
jmp
push
rcrl
stos
ljmp
pop
mov
xchg
mov
add
lret
cmp
fmull
pushf
cmp
subb
and
jl
mov
push
push
test
fst
pop
dec
in
sbb
dec
lods
popf
stc
aaa
subl
andl
hlt
pop
addb
stos
in
inc
and
mov
mov
mov
inc
clc
movsb
mov
and
test
daa
insb
add
mov
test
arpl
xadd
movsl
repnz
jb
cmpsl
inc
sub
imul
in
sub
pop
in
shll
mov
sub
inc
mov
subl
add
dec
stos
mov
pop
dec
enter
add
sahf
aam
xchg
imul
popf
int
stos
dec
int3
mov
cmp
sub
lods
jns
daa
push
add
jne
je
sahf
jmp
mov
inc
fdivp
loope
incl
rolb
dec
out
sub
divb
cmp
ret
and
mov
jecxz
aas
mov
jge
rolb
inc
into
cmc
in
rol
dec
inc
int
stos
scas
mov
jge
push
in
rcl
into
mov
jns
mov
push
mov
jp
adc
mov
mov
insl
push
jns
inc
lret
out
cs
xchg
jnp
jbe
jmp
lret
cmc
xor
ficoml
shl
repnz
cmpsl
xchg
xchg
xchg
repnz
out
push
orb
xchg
aas
hlt
mov
in
aad
test
xchg
pusha
xacquire
imull
mov
dec
lock
jp
test
out
outsb
lds
xor
loope
stos
xchg
cmp
pop
cmc
dec
and
jns
sub
icebp
psubb
shll
fsubp
lds
fistpll
repz
inc
add
repz
inc
lods
ljmp
pop
push
pop
jns
mov
cmpsb
out
xchg
sbb
fs
mov
pop
mul
addl
cmove
xchg
insl
xlat
jb
cltd
cwtl
popa
xlat
lods
and
data16
mov
movsl
test
mov
call
in
jl
movsb
out
loop
pop
push
jmp
repz
sti
pop
lret
mov
aad
shr
popf
call
arpl
or
call
and
inc
and
jb
fcompl
xchg
mov
mov
cmpsb
loope
sbb
nop
shl
lods
xchg
mov
outsl
pushf
stos
popa
rclb
mov
imul
or
out
lret
mov
dec
push
ja
into
iret
fcoml
dec
sub
dec
cmp
lods
xor
sbb
jg
pmovmskb
jo
test
xchg
pop
jns
jbe
mov
and
out
or
mov
pmullw
mov
mov
mov
lahf
fsubrs
mov
gs
add
cmpsb
or
int3
cmpsb
decb
and
inc
add
out
shrb
push
int
jns
mov
jnp
cmpsb
xlat
lds
mov
lahf
out
fwait
pop
push
loope
insl
sub
jecxz
pop
rorb
ljmp
xchg
scas
sub
jbe
pop
es
ljmp
ja
pop
mov
lds
jnp
scas
dec
mov
cmpsl
fistps
mov
xchg
add
push
loopne
xchg
sarl
or
xchg
xor
sub
mov
mov
pop
adc
cmpsl
dec
mov
sbb
clc
outsb
jg
int
movsb
xchg
pusha
popa
fldl
dec
fstpt
call
fidivrs
mov
sti
out
leave
movsl
test
int
insl
enter
test
arpl
leave
movsl
mov
push
test
enter
jecxz
cmp
fs
lock
xor
clc
inc
loopne
das
mov
inc
pushf
int3
enter
jl
pop
jae
lea
xor
and
xchg
je
call
sbb
mov
xor
pop
shrb
out
mov
stos
andl
pop
test
ss
stos
call
push
inc
cmp
push
adc
push
outsb
or
outsl
inc
push
test
push
jmp
addl
std
mov
js
addr16
jne
sti
push
sub
sahf
push
stos
push
test
pop
xchg
js
in
aaa
fidivs
cmp
testb
push
daa
movsb
ret
fisttpl
xchg
lret
and
xchg
jmp
loop
addr16
movsb
stos
fmulp
sbb
jno
scas
mov
jbe
stos
mov
js
in
lock
xor
jns
mov
movsl
jmp
and
mov
aas
test
loope
xchg
cmp
lret
ret
sbb
rclb
sub
aaa
fistpl
sti
jne
and
inc
or
scas
fwait
sarb
inc
in
push
push
xchg
jecxz
insb
arpl
outsb
aad
mov
movb
mov
xchg
fcmovnu
and
sbb
lock
push
cmpsl
mov
jns
pushf
loopne
roll
test
push
pop
lahf
daa
fiaddl
dec
jge
shlb
xor
push
mov
mov
dec
push
mov
sahf
clc
mov
lds
mov
gs
jmp
xchg
test
mov
stos
js
xchg
pop
xor
into
rclb
ficomps
xor
daa
ret
and
push
pop
adc
ret
mov
jl
std
sub
rcrb
movsl
mov
jge
xchg
inc
or
dec
stos
test
push
int
sbb
xor
fstps
mov
adc
addl
sbb
repnz
mov
and
dec
ja
dec
cltd
mov
mov
push
mov
sub
pop
dec
xchg
movsl
loope
test
mov
rorb
scas
aaa
mov
rorl
mov
test
push
testb
dec
imul
packuswb
das
add
fbld
sub
ljmp
or
cmp
add
jg
inc
mov
xchg
xchg
fcomps
dec
enter
sub
xchg
mov
add
data16
rolb
mov
fisubrl
filds
leave
int3
popa
xorl
cmovle
and
lret
dec
sub
dec
daa
rol
lcall
out
mov
mov
in
xchg
jnp
aaa
out
mov
jae
jg
mov
or
fwait
mov
iret
inc
inc
mov
and
mov
xlat
sbb
mov
je
ljmp
insl
lret
lret
test
iret
push
sahf
into
sub
inc
iret
cmpsl
or
push
sub
dec
imul
or
cmpsb
sub
cwtl
je
push
out
mov
sbb
dec
mov
mov
imul
bound
jbe
push
daa
test
dec
shl
mov
cmovae
das
roll
iret
mov
pop
les
adcl
push
sbb
add
inc
pop
mov
icebp
ret
testb
rclb
sbb
xorl
test
fdivs
mov
out
pushf
test
popa
xor
xor
xor
pusha
out
mov
test
sub
shr
inc
testb
lods
aaa
mov
jl
xlat
popf
fcoml
into
inc
sub
jmp
xchg
rcr
testl
lret
and
jbe
repnz
mov
jae
mov
int3
jl
rcrb
test
iret
lcall
imul
mov
popf
cmc
iret
bound
bound
ret
mov
pop
loopne
sbb
mov
sbb
in
mov
or
faddl
rorb
pop
in
fistps
xchg
imul
lret
sti
jae
inc
mov
pop
movsl
mov
adc
outsl
pop
fs
outsb
xchg
fnsave
add
xchg
cmpsb
push
cmp
adc
gs
or
addl
outsl
lret
int3
test
daa
repnz
sbb
mov
dec
jbe
or
dec
sub
jmp
cmpxchg
and
rol
mov
xchg
jb
or
lret
push
sub
mov
sub
add
das
sub
mov
mov
inc
jbe
or
xor
pusha
or
lret
test
ret
push
xchg
out
adcl
lock
punpcklwd
inc
cmpsl
loope
push
bound
pop
add
jae
jmp
dec
popa
lret
outsb
nop
shll
jg
mov
shl
mov
addb
enter
loop
out
pop
xchg
jge
inc
xchg
das
cmp
lea
cmp
sub
popa
pushf
dec
jnp
js
push
mov
ret
adc
push
inc
andl
or
mov
push
dec
rorb
pop
stos
adc
cmp
aad
das
in
inc
insl
and
enter
imul
push
mov
cmc
adc
test
pusha
push
loopne
pop
arpl
sbbl
add
in
mov
dec
jg
add
outsl
cld
ja
xor
dec
push
imul
push
xlat
lods
inc
popf
filds
ret
test
rorb
ret
mov
fnstsw
repz
rcrb
orl
adc
mov
shlb
imul
imul
test
imul
into
int
jnp
das
int3
pop
into
inc
pop
xchg
adc
add
mov
mov
mov
enter
int3
psrlq
clc
punpckhdq
push
cmc
push
adc
mov
fcomp
mov
cmp
mov
xor
cmp
pop
xchg
and
xor
jge
mov
xlat
lahf
mov
mov
mov
mov
dec
dec
push
and
xor
cmp
fnstcw
in
lds
mov
sahf
add
xor
repnz
ds
or
cmc
sahf
xchg
scas
pusha
and
mov
out
icebp
cmp
cmp
jns
or
mov
mov
push
push
dec
sub
push
add
cmp
popf
cltd
and
daa
xchg
cmpsb
frstor
dec
gs
rclb
repnz
push
jge
and
dec
sbb
mov
aam
or
mov
popa
mov
mov
add
stos
push
cmp
add
and
mov
into
ret
mov
lds
shll
aaa
or
pop
mov
sbb
xor
sub
mov
mov
push
inc
xchg
negb
jecxz
ret
stc
cmova
shl
push
adc
add
out
lret
lods
pop
ja
mov
out
adc
jmp
aam
mov
arpl
sub
cmp
das
sbb
mov
mov
sbb
push
call
iret
outsl
aam
xor
mov
sbb
mov
sbb
cld
aas
mov
mov
sahf
enter
test
popf
jne
mov
in
cmp
aad
sbb
mov
push
ror
scas
cmp
xor
loopne
mov
mov
loope
xchg
sub
int3
mov
or
mov
sub
lods
dec
mov
add
fstpl
sbb
gs
shll
leave
adc
jge
push
xor
lret
lds
jge
int
mov
pusha
fistpll
sbb
push
call
cmpsl
stos
es
fisubrl
fs
dec
sahf
in
pop
mov
lahf
lods
lcall
mov
das
dec
cld
ss
sahf
xchg
push
xor
sub
aad
sbb
cmpsb
mov
xchg
lcall
fdivrs
arpl
aaa
mov
add
movsl
cwtl
in
ret
jg
mov
mov
mov
adc
aas
xchg
cmpsl
rcll
repz
and
test
cmc
xor
xchg
mull
test
out
xchg
jecxz
andl
fs
lcall
cld
push
leave
push
aaa
cli
leave
clc
popa
hlt
jbe
fcomi
and
leave
mov
sti
enter
int
adc
mov
mov
mov
inc
test
jmp
xchg
in
xchg
lods
in
pop
mov
dec
cmp
loope
mov
sbb
popa
pop
mov
sub
jne
sbb
pop
and
dec
lret
daa
sbb
or
fwait
loope
bound
out
add
and
outsl
not
iretw
xchg
ret
pop
sub
push
add
dec
mov
dec
nop
add
cmp
ljmp
pushf
jmp
cltd
cmpsl
sbb
or
or
or
fadds
es
lods
mov
cmpsl
sbb
or
ret
mov
aaa
sbb
daa
sub
cmp
cld
scas
cli
dec
addr16
cmpsb
add
sub
mov
dec
ret
mov
inc
leave
roll
insl
in
fldt
cli
in
sbb
test
pop
mov
out
in
popf
aas
mov
push
push
pop
push
or
xchg
test
mov
and
mov
inc
loop
call
pushf
mov
dec
mov
or
and
push
pop
test
insl
lret
cmc
insl
iret
or
test
into
movsb
shr
mov
xchg
movsl
and
mull
mov
lahf
addr16
lcall
xchg
inc
cs
divl
out
mov
xorb
dec
inc
imul
lret
lret
hlt
test
cmovg
scas
mov
jmp
mov
test
es
adc
mov
cld
mov
cmpsl
ror
aas
aam
pushf
jg,pt
out
adc
ljmp
adc
push
jne
inc
pop
push
sub
jmp
das
adc
push
or
cs
inc
sub
sub
in
inc
mov
mov
jmp
mov
mov
or
jmp
jmp
dec
in
cli
insb
movsl
sbb
and
push
mov
rorl
sti
mov
mov
jb
testb
test
rorb
shrb
dec
mov
cli
dec
ficomps
lret
cmc
cmp
mov
popf
cmp
cmc
adc
fldz
cmp
bound
pop
jg
mov
push
sbb
fldt
xchg
dec
inc
iret
iret
push
iret
movsb
and
mov
daa
cmp
push
mov
xchg
cwtl
mov
stos
sbb
sub
stc
into
mov
inc
jge
addb
push
popf
divl
mov
loope
cmp
int3
cmp
mov
aad
push
stc
loope
cmp
pop
xchg
cmp
pop
cmp
scas
mov
pop
test
xchg
inc
int
xor
mov
xor
mov
push
sbb
shlb
dec
test
ljmp
push
jae
xchg
out
lcall
in
or
stos
gs
dec
fcomps
cmp
push
cs
push
adc
mov
mov
out
or
jle
pop
outsb
jp
loopne
ja
popf
jns
cwtl
jnp
rcrl
gs
inc
pop
gs
outsb
cmpb
push
test
inc
mov
lahf
test
add
les
divb
lea
out
mov
test
repnz
xchg
repnz
int3
loopne
ret
lods
js
addl
cs
popf
push
stc
lea
arpl
sbb
sub
push
test
add
fistps
add
inc
addb
or
je
out
test
push
cmpsl
insl
xchg
sbb
lahf
sub
xchg
or
pop
mov
addr16
in
jmp
dec
es
inc
xorb
xchg
jmp
sahf
xchg
jnp
dec
sbb
add
dec
and
xchg
and
dec
pop
insl
mov
scas
insb
test
fidivrs
ljmp
testl
insb
adc
mov
xchg
ds
mov
pop
cmp
mov
jnp
repz
fisubl
int
ss
xor
ret
jmp
jae
or
enter
jnp
icebp
jns
pop
and
imull
lahf
mov
and
xor
addb
mov
jp
mov
cmpsb
adc
dec
add
xlat
jne
rclb
faddp
incb
test
dec
rclb
loop
inc
dec
ljmp
mov
push
jmp
or
lret
dec
ret
pop
mov
daa
push
hlt
sub
jecxz
out
sub
iret
adc
or
sbb
push
shlb
lds
addb
pop
lods
or
push
sbb
adc
sbb
fisubrs
mov
xchg
pop
call
push
imul
and
pop
bound
ret
mov
pop
xor
inc
cmc
sarl
mov
lcall
loopne
mov
fstpt
ret
jl
cli
out
fs
mov
inc
and
enter
push
aaa
fmull
jmp
ret
into
test
data16
sbb
push
jle
jecxz
mov
test
mov
adc
mov
fsubrs
pusha
push
int
mov
test
test
xor
fwait
lock
addl
inc
imul
add
repnz
in
in
dec
sub
xlat
gs
shll
xor
je
cmpsl
adc
jb
daa
push
mov
dec
andl
pop
pop
ficomps
pop
insb
push
mov
testb
cmp
std
jp
insl
inc
sti
mov
test
pop
add
subl
and
sub
outsb
int
inc
loopne
xchg
mov
stos
jle
loop
jae
lods
bnd
lret
jo
push
lds
cmp
sub
loope
jns
ds
add
in
rsqrtps
pop
out
cli
out
cwtl
add
fidivs
arpl
mov
aas
ss
mov
hlt
push
lahf
xorb
cmp
divl
std
movsb
sbb
xlat
sub
cmp
xorl
mov
lret
scas
xchg
xor
es
fcomip
adc
jno
add
xchg
sub
inc
sub
cld
ja
jno,pt
push
and
inc
cmp
movsl
shrl
arpl
and
movb
repz
filds
jo
lea
dec
shlb
jmp
and
shll
rolb
mov
inc
cmp
movhps
push
mov
push
push
push
jb
cli
add
pop
faddl
sub
mov
xor
scas
jo
aaa
cmp
cmp
mov
dec
push
loopne
lods
ror
or
push
rcll
jl
mov
daa
sub
scas
or
bound
shl
lods
xchg
or
pop
ljmp
stos
mov
aas
stos
movsl
lods
daa
add
pusha
xchg
push
xchg
dec
inc
mov
xchg
dec
sarb
stc
fsub
in
cltd
pop
sub
bound
inc
leave
js
push
inc
sub
repz
loop
and
outsb
icebp
push
adc
mov
push
lret
adc
cmp
and
xchg
xor
movsl
sub
mov
mov
sub
push
jle
es
xor
loop
mov
sbb
lock
pushf
mov
in
out
pop
bound
mov
jge
push
mov
push
daa
test
inc
sub
sbb
push
mov
sub
aad
bound
mov
stos
cmp
leave
outsl
jg
mov
mov
and
jmp
pop
jl
xor
imul
xor
jbe
or
sub
inc
repnz
sbb
lcall
sub
std
mov
lret
or
jecxz
jge
sub
mov
scas
xchg
cmp
sub
pop
cmp
cld
push
iret
loop
test
mov
arpl
adc
fisubrl
pop
lds
push
push
pushf
xchg
ljmp
loopne
sti
scas
push
pop
xor
rcll
mov
push
push
imul
mov
xchg
add
cmp
ja
adc
adc
pop
push
add
loopne
pushf
cwtl
aas
mov
xchg
cwtd
out
into
xor
xchg
es
xchg
rcrl
push
mov
xchg
sbb
daa
sbb
push
das
adcl
int3
fcmovne
or
iret
pushl
sub
sbb
jb
push
cld
adc
emms
aas
mov
cmp
mov
sub
cli
enter
jmp
pop
lret
sub
lret
xchg
fs
cli
aad
cmc
shlb
mov
bound
clc
jecxz
xchg
or
adc
ret
mov
xchg
ret
push
or
mov
in
int
inc
pop
adc
dec
xor
cmpsl
stc
jge
sbb
pop
scas
stc
loopne
dec
shlb
in
out
mov
into
inc
mov
insl
gs
sub
jne,pn
dec
lret
pop
in
mov
adc
and
jbe
outsb
cwtl
lods
or
incb
mov
xor
lret
xchg
subl
popa
mov
repnz
jb
mov
rorb
adc
lds
jmp
sbbb
xchg
fs
cmpl
pop
adc
jne
xor
and
fldcw
xchg
adc
rcrl
xor
int3
mov
test
ret
sub
rorl
jo
add
adc
out
push
sub
ret
xchg
loop
xchg
loop
push
popf
mov
jp
jbe
test
icebp
pop
dec
cmpsb
daa
sahf
jmp
pop
jmp
jns
int3
das
adc
pop
addr16
pop
shrb
imull
clc
test
sbb
scas
sbb
xor
insb
insb
orb
add
cmpsl
cwtl
mov
mov
sahf
pop
xchg
and
mov
stc
xchg
xlat
divb
pop
push
movsl
shrb
inc
aaa
ret
cmpsb
sbb
inc
xor
addr16
std
testl
add
rclb
mov
fcompl
into
and
fisttpl
inc
insb
xchg
jp
das
aaa
jns
loopne
gs
and
cltd
mov
adc
dec
sub
or
mov
mov
icebp
mov
cmpsl
cltd
mov
and
push
shlb
enter
sub
adc
cmp
jmp
mov
xchg
lret
mov
sti
es
jecxz
lods
push
pusha
rcrl
inc
aaa
push
or
test
jnp
test
aaa
pop
jbe
in
cmc
xchg
nop
rolb
or
or
shll
ss
or
int3
or
mov
lcall
test
movsl
test
push
in
imul
sub
jb
pop
cld
dec
mov
fsubl
insb
shrb
sub
dec
ja
sbb
into
pop
sub
mov
clc
fsubrl
ret
popa
iret
pop
sbb
sbb
loop
test
out
fsubrl
mov
in
cmpxchg
aam
movsl
mov
gs
loopne
inc
dec
xchg
pop
jl
leave
fidivrl
inc
in
jnp
inc
shl
imul
xchg
sub
pusha
cli
sti
stos
push
push
neg
or
sbb
add
mov
jl
std
jecxz
test
movsb
xor
pop
inc
ja
mov
stc
insl
ss
scas
out
adc
jge
mov
out
xchg
xor
mov
leave
mov
cmpsb
pusha
mov
sub
fildll
rol
xchg
lahf
ret
outsb
data16
cmp
xchg
jns
outsb
je
popf
int3
fnstsw
ljmp
scas
scas
xchg
clc
jbe
orb
aas
out
adc
xchg
fildl
inc
cli
call
mov
rcl
push
stos
cwtl
sbb
or
cli
push
push
call
cmp
push
in
adc
or
fxch
xchg
add
repnz
add
pusha
mov
shlb
fwait
sbb
mov
mov
or
cmp
icebp
scas
xor
or
xor
xor
cmpsb
xor
dec
xchg
mov
cmpl
inc
insl
pusha
mov
push
dec
ja
cmpsb
jle
xchg
xchg
sub
sub
jb
lds
lea
cs
jae
sbb
jl
decb
cmc
out
mov
dec
and
mov
divl
mov
xchg
sub
pop
out
pushf
into
mov
push
pop
mov
mov
mov
adc
push
xlat
aad
mov
jno
xchg
xchg
movsl
push
insl
jl
push
sti
pop
jg
js
pop
scas
lds
mov
pop
in
iret
jbe
js
rorl
pop
das
std
fidivs
in
out
jns
pop
jne
mov
sub
in
cmp
xchg
xor
pop
into
mov
inc
xchg
jae
jl
lahf
out
popf
adc
adc
inc
fsubrs
mov
adc
inc
popa
and
repz
add
mov
cmc
pop
jne
pop
pop
sub
fsubr
pop
mov
add
cmp
push
das
inc
lds
inc
arpl
movsl
int3
sbb
dec
push
pop
loopne
bound
sub
std
push
inc
sbb
or
dec
mov
sub
pop
sbb
or
cmc
and
sbb
rcll
mov
lods
jb
loope
mov
icebp
dec
ret
ficompl
pop
orl
cmp
pushf
test
mov
xchg
push
lret
mov
lcall
pusha
ljmp
testb
popl
add
mov
jne
mov
jns
scas
and
mov
push
popa
test
sbb
dec
mov
ja
addr16
clc
mov
xor
mov
bound
ljmp
imul
lret
push
scas
jg
mov
arpl
lret
push
test
fs
or
dec
fwait
mov
push
dec
xor
lahf
mov
push
dec
daa
movsb
adc
mov
xchg
mov
call
lahf
fs
in
testb
sub
cmp
jl
add
notl
push
in
inc
bound
jns
outsb
into
inc
andb
rcrb
cmp
lds
vmwrite
or
sbb
les
inc
push
popl
mov
push
addr16
aaa
je
repz
movsl
inc
lahf
xor
jp
lea
sub
jmp
lcall
jge
pop
cmp
repnz
lods
jbe
jno
mov
sub
cmpsb
adc
dec
mov
dec
inc
insl
add
ja
loope
nop
loopne
dec
ja
adc
push
dec
adc
pop
and
testb
lods
xor
pop
sbb
iret
pop
daa
inc
mov
clc
push
gs
imul
aam
sar
int
sbb
test
jne
inc
xor
jle
out
pusha
gs
inc
pop
out
pusha
ror
xchg
bound
adc
in
xchg
andb
outsl
cli
push
dec
xchg
pop
lret
push
and
cmpsb
sub
pop
test
mov
inc
or
mov
xor
and
sub
rcrl
in
adc
test
fs
call
ret
js
mov
sub
mov
xchg
and
push
mov
stos
mov
push
mov
cmp
jl
js
jmp
or
daa
cmpsl
es
adcl
mov
iret
pop
pushl
fsubl
pushf
mov
mov
mov
add
pop
xor
pop
dec
xor
push
iret
rol
ds
inc
cmc
int3
fldt
mov
add
nop
int3
test
mov
mov
push
pop
sub
lcall
test
movsl
xchg
or
adc
mov
jb
cmp
jg
inc
jl
jp
iret
test
loopne
leave
aas
or
inc
fistl
xchg
push
orb
aaa
mov
jb
pop
and
fcmovnbe
jne
pop
xchg
sti
mov
sbb
shrl
mov
xor
cltd
cwtl
sbb
or
mov
sub
cltd
push
sbb
sarl
movsl
outsl
out
xlat
add
xor
pop
out
into
jo
cltd
mov
in
and
lcall
sbb
inc
aaa
outsl
xor
popf
lcall
inc
dec
pop
push
pushf
arpl
push
inc
jb
mov
xchg
and
and
les
dec
mov
imul
and
sub
xchg
pop
mov
add
add
add
mov
fmull
icebp
sub
mov
mov
xor
jns
add
inc
testb
add
cmpsl
out
push
mov
cld
int
call
sbb
xor
jns
add
outsl
xor
nop
cs
push
fbstp
cs
arpl
mov
push
das
or
int3
movsl
jle
rcrl
or
xchg
mov
sbbb
jg
iret
pop
movsl
push
jae
cltd
mov
aas
push
mov
sahf
gs
mov
sbb
mov
xchg
sahf
inc
enter
iret
jecxz
aaa
or
sbb
ficoml
js
out
xchg
frstor
dec
xorl
dec
faddp
and
lods
jo
imul
stc
pop
pop
insl
rol
das
mov
lcall
sbb
xor
arpl
fwait
jg
stos
fnstsw
jbe
mov
mov
xor
int
pusha
sbb
and
or
and
dec
es
in
lgs
andl
jle
mov
movsb
aam
pop
gs
sub
rcrb
jmp
pop
fbstp
popf
pop
jb
mov
mov
int3
daa
daa
sahf
dec
addr16
xchg
add
add
sub
fnsave
and
pusha
xchg
push
jno
test
or
dec
mov
aaa
scas
les
aaa
lret
lods
and
lea
mov
pop
mov
and
mov
add
mov
mov
std
mov
sub
xchg
inc
leave
adc
dec
mov
es
and
cmpxchg
insl
mov
mov
rolb
jns
mov
pop
cltd
bound
adc
sbb
sub
mov
or
iret
imull
popf
push
loopne
sbb
sbb
cmp
mov
iret
lret
fnstsw
imul
jns
imulb
inc
lret
cmp
loope
out
inc
popa
addr16
dec
sub
mov
popf
and
lret
enter
jbe
cltd
ja
xlat
jns
mov
gs
sti
and
xchg
jns
pusha
sarl
sbb
cmp
add
inc
pop
imulb
in
aaa
clc
adc
sbb
jp
stc
inc
iret
ja
ja
pop
push
xchg
int
ja
xchg
enter
xchg
iret
sbb
in
jmp
mov
dec
pop
pop
pop
sub
fsubl
push
sub
scas
mov
mov
push
and
adc
popa
popa
into
movsl
sbb
imul
sbb
out
dec
xor
jb
jl
and
add
push
mov
inc
sub
jge
dec
and
sbb
shll
ret
pop
adc
fwait
pop
push
mov
dec
adc
lea
or
aad
sub
das
rclb
push
int3
movsl
or
loop
lods
dec
inc
and
test
fisubrs
mov
stc
subl
xchg
jae
jmp
out
sub
xchg
add
and
jl
jl
or
popf
and
mov
test
xchg
push
dec
aas
mov
movsl
cmc
dec
push
lds
fnsave
sbb
mov
jb
inc
mov
sub
es
daa
and
push
insl
pop
mov
lods
sahf
pusha
mov
stc
jmp
mov
mov
iret
mov
popa
fs
lret
lds
int
ja
mov
sbb
xor
dec
in
outsl
xchg
push
add
inc
adc
dec
cmp
mov
xlat
out
fxch
loope
mov
mov
iret
pop
and
lods
sahf
sub
mov
mov
rolb
dec
mov
and
lods
in
icebp
pop
mov
mov
jae
rorl
jb
shld
leave
nop
test
or
pop
int
repnz
pop
or
lahf
xchg
sahf
in
cld
cli
jle
testl
mov
dec
pop
into
sub
aaa
aad
lahf
icebp
pop
movsb
inc
xchg
imul
and
mov
push
jns
out
push
jmp
jge
jns
jnp
mov
inc
mov
push
repz
bound
loope
lahf
mov
aad
mov
popf
push
and
or
sbb
or
adc
dec
xchg
iret
dec
dec
sub
inc
dec
sbb
inc
jle
imul
pushw
popf
sub
xor
into
add
or
mov
add
inc
lss
or
lcall
es
lret
jae
inc
es
mov
and
cmp
imul
sbb
iret
lret
das
lods
sub
or
cmp
add
lds
iret
xchg
mov
dec
mov
or
into
lds
rorl
xchg
fidivrl
cld
rorb
push
not
lea
push
aam
adc
jmp
lahf
sbb
loope
fcomp
fstpl
or
loopne
or
loopne
or
jns
dec
mov
outsl
jnp
cmp
push
xor
xor
xchg
xchg
pop
imul
ja
inc
dec
add
pop
dec
mov
pop
dec
clc
in
jbe
xor
and
sub
inc
mov
jns
aam
jne
mov
fistps
ss
sub
dec
or
pop
dec
inc
in
dec
hlt
in
jbe
sub
inc
and
outsl
pop
and
outsl
pop
sub
push
mov
mov
stc
popf
outsb
xlat
cmc
popf
xlat
icebp
popf
out
xlat
in
cmpb
mov
les
sub
mov
dec
or
xchg
out
psadbw
es
lret
jmp
xchg
movsb
jae
rcrl
mov
std
jl
xor
inc
call
popf
push
pop
ja
enter
adc
in
in
push
movsb
mov
test
scas
stos
xor
mov
rclb
cli
xor
aam
lahf
push
or
cmp
or
jle
push
dec
jae
cmovns
fstl
fwait
leave
sbb
xor
mov
es
ret
sbb
aaa
and
outsb
add
pop
inc
xor
sub
sti
push
mov
dec
sbbb
addb
add
cmp
popf
into
cmpsl
ds
dec
xor
les
pop
or
push
ds
mov
mov
or
cmp
dec
jge
jnp
cmp
jnp
popa
mov
loopne
mov
pop
call
pop
int
jecxz
sar
sub
bound
insl
sub
adc
insb
pop
xchg
xor
fdivr
test
cmpsb
sub
sahf
mov
xor
inc
ret
clc
mov
js
mov
outsl
xchg
shl
loop
xor
aad
into
idivl
inc
icebp
mov
popa
xor
pop
mov
stos
adc
shlb
jno
lea
leave
in
xchg
fsub
orl
nop
xor
cmp
lock
or
mov
sahf
insl
shll
fwait
test
push
cmp
into
in
jmp
pop
fistps
ret
hlt
lcall
pushf
or
ds
mov
into
cmpsb
inc
mov
pop
or
and
add
sub
jle
sbb
xor
shlb
sub
test
cli
repz
mov
lods
mov
mov
ret
int
cli
mov
xchg
loop
gs
adcb
mov
enter
das
lock
out
mov
rcl
dec
and
enter
leave
push
mov
jns
into
and
add
mov
fistpl
jbe
sbb
shrb
out
adc
or
rcr
xchg
data16
jle
lret
aas
daa
fcmovbe
cs
mov
push
push
cmpxchg
cmp
into
enter
push
sahf
or
xchg
mov
xor
mov
or
push
xorb
fldl
ss
aaa
das
mov
mov
jg
xchg
psubd
fdivrl
mov
xor
mov
std
jno
mov
ja
shrl
mul
sbb
arpl
xor
iret
or
mov
daa
or
test
leave
aaa
or
arpl
testl
pop
in
ficoml
jg
jg
push
hlt
or
leave
mov
add
arpl
pop
jns
inc
lahf
and
dec
pop
sub
push
mov
add
push
mov
int3
sbb
inc
adc
lcall
pop
add
and
or
inc
push
ret
jae
and
ja
shl
sbb
pop
int3
sbb
push
lock
cmp
sbb
inc
or
aad
jno
ffree
jmp
addb
sbb
pop
mov
jnp
xor
push
and
les
dec
jle
xor
pop
fidivl
in
loope
cwtl
int
lahf
hlt
pop
sbb
add
jnp
nop
mov
in
push
mov
cs
scas
shll
push
lds
icebp
insb
lds
mov
lock
jge
xchg
subl
xchg
repnz
fistpll
repz
testb
div
cmp
inc
insl
out
xchg
xchg
sbb
mov
pop
adc
lea
adcl
stos
enter
into
cmp
in
inc
xlat
std
test
das
mov
pusha
or
hlt
and
pop
and
inc
popf
fldpi
sub
and
dec
sbb
test
in
out
fdivrl
pop
cli
mov
push
iret
lock
ja
sbb
mov
pop
or
cmpsb
xchg
movhps
bound
fistpl
adc
mov
test
scas
stc
inc
daa
je
mov
xchg
mov
outsl
mov
sar
popf
sahf
loopne
xchg
repnz
int
inc
xchg
dec
xchg
test
test
cld
sahf
addr16
xor
mov
nop
outsl
jl
hlt
jl
mov
cmp
jmp
jmp
je
cmp
or
scas
inc
cmp
fwait
add
sub
mov
xchg
outsb
ss
jg
push
sti
pushf
pusha
dec
addr16
jp
add
xchg
push
cmpsl
in
stc
dec
loop
iret
out
xchg
inc
loop
into
mov
dec
orb
clc
ja
sub
ret
pop
ss
je
or
ret
or
in
sub
movsl
adc
sub
cmp
push
adc
rcrb
adc
sub
loop
test
fsubrs
scas
outsb
push
ret
sarl
and
pop
push
push
push
mov
shl
gs
xor
dec
sbb
outsl
mov
mov
pusha
repnz
cmpsl
mov
and
lea
mov
cmp
mov
sub
sbb
or
neg
out
add
push
pop
sbb
cmp
stc
and
dec
es
jp
jle
int
mov
insl
repnz
fiadds
pop
cwtl
roll
out
adc
mov
push
push
loopne
jle
loop
mov
adc
into
fcompl
sub
jmp
push
and
test
js
mov
mov
push
aaa
shlb
das
sbb
fsubl
dec
cmp
or
and
dec
cmp
mov
mov
jmp
mov
test
xchg
jle
mov
sahf
sub
pusha
jb
imul
rcr
bound
shrb
popl
shrl
jb
xchg
xchg
in
out
mov
mov
sahf
xchg
outsb
pop
clc
add
loop
sbb
shlb
lfs
cmp
iret
ljmp
or
or
imul
addr16
mov
insb
sub
mov
mov
loope
add
in
inc
mov
dec
pop
inc
fidivs
rcl
adc
movsl
repz
into
xchg
sbb
mov
sbb
shlb
mov
les
adc
sahf
aaa
scas
inc
outsl
js
pop
sahf
inc
jb
sbb
sub
insl
outsb
push
jge
inc
or
imul
add
push
iret
ja
insl
adc
sbb
sar
sbb
push
imul
gs
mov
lcall
mov
scas
rolb
jmp
iret
emms
jnp
pop
or
add
push
push
cli
xchg
xchg
fidivrl
mov
test
and
push
push
popa
dec
ficoms
push
movsb
mov
popf
push
mov
aas
jo
fwait
mov
es
stc
push
sbb
icebp
lds
sahf
sub
std
push
and
dec
out
dec
mov
stos
pop
imul
mov
xchg
jmp
jnp
inc
xchg
mov
dec
test
das
lds
iret
out
cmp
jl
push
sbb
mov
idivl
mov
sub
movsl
mov
test
outsl
mull
call
lret
add
jae
or
xchg
jle
add
data16
mov
out
lea
push
or
mov
fbstp
mov
das
in
adc
rorl
sub
lds
push
pop
adc
dec
or
cli
out
push
add
jle
mov
and
rcrb
cmp
cmpsl
ret
inc
clc
push
mov
mov
jae
jae
int3
push
inc
xchg
ds
pop
rolb
inc
fdivl
rol
lods
xorl
mov
jne
adc
rcll
inc
test
mov
push
out
mov
int
push
sti
pop
mov
leave
mov
in
push
pop
rclb
dec
sub
out
xchg
aaa
test
out
arpl
mov
mov
in
dec
mov
sub
xchg
pop
lcall
push
outsl
dec
outsb
das
mov
mov
out
sub
cmp
stc
popf
in
test
sbb
push
ficompl
xor
mov
ja
adc
movsb
addl
lahf
fwait
pop
adc
insl
popa
dec
call
jge
shr
jl
sub
popa
imul
push
add
fsubp
xchg
sahf
inc
dec
sub
movsl
clc
mov
dec
inc
iret
fstps
mov
mov
cli
je
incl
sbb
xchg
xor
fsubrs
push
rcl
imul
lea
scas
mov
push
dec
sub
das
inc
sarl
mov
scas
test
out
cmp
sub
js
xchg
int
mov
mov
add
addr16
xchg
sub
in
cmpsb
stos
mov
sti
jg
dec
cs
dec
mov
xor
mov
jbe
inc
add
shlb
push
xor
int
pop
into
popf
or
das
arpl
in
pop
xchg
fisubl
xchg
outsb
xchg
lea
cmp
mov
push
mov
test
inc
xchg
mov
mov
lds
inc
icebp
ja
adc
inc
cmpsb
mov
push
jge
dec
sub
out
aaa
test
hlt
sub
loope
aam
test
dec
pop
mov
pminub
sub
divl
std
dec
push
sti
mull
in
test
out
jb
lcall
sub
shrl
addb
xchg
jl
push
push
push
pop
inc
push
cmp
fimull
inc
push
xor
rcrl
inc
jle
ret
inc
pop
cwtl
sbb
movsb
loope
lea
ja
or
loop
imul
or
sbb
movsl
push
xchg
and
cmp
cmpsl
mov
loopne
or
test
jmp
xor
jp
mov
std
adc
push
xchg
pop
mov
flds
sbb
mov
mov
arpl
dec
pop
out
call
add
xchg
mov
jns
mov
pop
mov
gs
cld
xor
repnz
xchg
add
jmp
push
and
int
call
loop
mov
push
push
push
ret
pop
inc
ret
and
subb
jp
pop
pop
xor
mov
lock
iret
gs
sbb
out
insb
push
xorb
scas
sbb
push
pop
rcrb
sub
mov
inc
jno
jne
out
add
idivl
fsts
test
adc
out
push
enter
xchg
push
mov
mov
sbb
rep
jl
sarb
int
lret
dec
lock
cmc
lods
add
or
int3
pop
add
dec
jnp
ja
and
mov
dec
out
ss
jo
pop
daa
cmp
pop
cwtl
sbb
pop
sbb
jmp
add
and
or
call
sbb
sbb
adc
in
sub
cmpl
mov
adc
inc
dec
cmp
imul
outsl
clc
pop
push
cmovae
fdiv
xchg
inc
ret
sahf
mov
mov
data16
cltd
insl
cwtl
xlat
sbb
aaa
test
insl
adc
pop
inc
stos
dec
adc
arpl
sbb
movsl
xchg
inc
add
ret
dec
mov
adc
adc
dec
fdiv
test
mov
mov
mov
mov
dec
daa
mov
movsl
push
or
adc
or
and
mov
movsl
fsubs
out
sbb
fcoml
test
out
stc
rcll
mov
cmp
or
test
fldlg2
cmp
dec
xor
int
inc
dec
xchg
bound
pop
shrb
pop
call
fbld
mov
ljmp
sub
dec
fisubl
ljmp
pop
into
xchg
add
loope
pop
sub
ret
push
iret
cmp
mov
repnz
jbe
out
ret
jmp
add
movsl
negl
add
test
adc
daa
cltd
int
cld
cmp
pushf
mov
xor
inc
rcll
pop
pop
mov
jns
dec
call
mov
sub
cs
ja
scas
mov
movsl
outsl
pop
pop
pop
cmc
mov
push
push
popf
cli
push
decl
sub
frstor
or
jne
rcrb
fisttpll
movsl
adc
rcrb
fwait
aas
sbb
pop
jns
lahf
stc
mov
es
lret
pop
outsl
ljmp
mov
push
scas
and
clc
arpl
add
pusha
push
in
test
sbb
sahf
push
mov
jle
dec
cld
aaa
gs
int
inc
ret
cmp
mov
or
cltd
pop
cmpsb
scas
push
outsb
aad
insl
push
add
dec
cld
sbb
inc
out
movb
pop
dec
or
loope
dec
mov
fcomps
adc
xchg
push
nopl
shlb
fildll
dec
push
lret
les
push
push
dec
push
fisubs
test
out
cmpl
adc
js
dec
lock
push
gs
mov
pop
lahf
push
popa
movsl
fs
dec
xchg
idivl
xlat
sub
insl
movq
adc
fisttps
mov
jae
add
inc
mov
adc
sub
pop
loop
xor
xor
jbe
jle
push
inc
pop
inc
int
push
or
pop
inc
mov
push
xchg
jno
add
ret
xor
xchg
add
jno
popa
sbb
cmp
and
ds
adc
sub
adc
push
jecxz
out
mov
xor
into
dec
pop
pop
in
mov
popl
and
cmp
inc
mov
sbb
cmp
pop
mov
and
mov
popa
fwait
sbb
lods
out
out
mov
test
es
mov
pop
clc
cmp
adc
add
jbe
scas
mov
aad
iret
lret
into
xor
xchg
push
jge
sahf
sub
insl
cmc
cmp
jbe
jg
mov
mov
dec
cmpsb
int3
das
or
xchg
mov
jnp
sub
fdivl
ljmp
cmpsl
mov
xor
sbb
jb
aaa
inc
jae
inc
popa
push
adc
out
fsts
cmp
stc
neg
inc
call
in
mov
movsb
lret
rcl
dec
mov
out
scas
xlat
jbe
pop
out
mov
lock
scas
cli
in
pop
aaa
lret
and
xor
jno
iret
aam
adc
pop
inc
adc
and
into
mov
or
mov
add
xchg
idivb
inc
push
pop
mov
mov
add
adc
mov
mov
jno
sub
les
cmp
outsl
mov
lcall
xchg
and
call
leave
sbb
movsl
vsubpd
insl
lea
mov
scas
pop
add
aad
inc
mov
or
popa
or
scas
notb
add
punpckhwd
testb
pop
les
cmpsb
leave
repnz
sbbb
mov
test
sub
dec
sbb
and
jle
xchg
out
cs
movsb
xlat
scas
or
fistpll
test
test
push
cmp
leave
jne
add
test
mov
xor
subb
push
or
mov
subl
aas
xchg
cmp
pop
es
rcl
stos
into
mov
xchg
test
inc
das
sub
sahf
outsl
fadds
or
mov
test
mov
cs
xchg
xchg
mov
stc
sbbl
jecxz
popa
mov
inc
mov
pop
hlt
andl
pop
hlt
push
rcll
andl
incb
mov
cwtl
popf
xor
out
and
jg
mov
inc
push
xchg
xor
divb
or
mov
push
or
push
mov
add
push
pop
aas
pop
mov
fnstenv
mov
je
xchg
mov
nop
je
cli
shr
imul
lods
add
sbb
mov
or
push
jb
sahf
xor
push
add
imul
scas
fwait
jecxz
jg
loopne
inc
xchg
and
gs
and
push
adc
lds
cmc
sub
jl
sbb
xchg
mov
and
jmp
adc
push
lret
jb
movsb
push
mov
inc
and
xor
dec
fucom
rol
jbe
xchg
cmpsb
jge
fcmovu
scas
xor
mov
stos
js
xor
pushf
pop
or
loopne
lret
sbb
adcl
mov
mov
test
xor
data16
or
push
dec
dec
pop
les
sti
jecxz
sub
mov
jnp
jl
leave
xor
idivb
lds
adc
loopne
or
cld
arpl
push
imul
dec
lahf
pusha
adc
push
fwait
inc
test
jmp
test
pop
aad
mov
push
dec
cmpsb
adc
and
inc
cld
sub
and
fcomps
aaa
push
std
jg
rcrl
jmp
mov
testl
sub
cmpsb
jmp
lcall
or
dec
ljmp
data16
sub
inc
cltd
xchg
in
arpl
mov
dec
aas
es
mov
insl
sbb
lea
add
jp
popf
inc
test
js
idiv
mov
into
pop
inc
in
fistpll
push
clc
pop
in
pop
sbbb
sti
bound
or
icebp
cmp
add
cwtl
loopne
inc
scas
inc
or
loopne
inc
fisttpll
ds
orl
mov
pushf
cwtl
sub
stc
and
mov
sarl
or
jmp
sbb
xchg
jmp
cld
popf
xchg
icebp
cs
iret
dec
jl
xchg
stc
mov
lods
enter
int
popf
pop
and
aaa
jo
mov
rcrb
inc
jno
xorb
pop
dec
lea
push
sbb
dec
dec
mov
inc
cmc
dec
inc
jmp
insl
jmp
inc
mov
cmpsb
movsb
add
dec
or
jl
xchg
andb
push
lret
jge
xchg
jle
pop
mull
mov
data16
xor
jns
adc
imull
cltd
mov
fwait
mov
mov
ljmp
in
xorl
rorl
int3
scas
mov
sub
mov
addr16
imul
arpl
or
xchg
aas
push
imul
dec
mov
mov
and
lds
cmpsl
fdivs
push
inc
cmpsb
push
inc
xchg
icebp
dec
out
iret
stos
cmp
iret
mov
ljmp
mov
mov
ja
pop
arpl
add
pushf
and
pusha
nop
addb
fisttps
fbld
sbb
push
fxam
arpl
xor
push
or
xor
fiadds
or
scas
outsb
nop
ret
lods
sub
xchg
insl
push
pop
and
xor
test
rol
mov
pop
push
lcall
in
pop
add
in
scas
adc
inc
and
lods
out
mov
push
fcomp
sahf
xlat
jl,pn
aad
sub
mov
mov
sbb
call
mov
sub
mov
inc
adc
jno
push
inc
push
lahf
or
lret
push
dec
repz
jne
inc
iret
mov
ror
lods
stc
fldcw
mov
adc
mov
mov
fwait
push
testb
iret
jle
jg
std
jns
shl
lret
cmp
and
popl
js
jmp
cmp
clc
test
jge
int
test
sbb
adc
cwtl
mov
pushf
js
imull
out
dec
addl
ja
fidivl
dec
pushf
scas
pop
cltd
scas
cmp
test
lock
and
mov
push
filds
lock
les
hlt
or
enter
xchg
std
scas
dec
ficompl
add
or
loop
mov
or
lods
into
and
pop
adc
push
jb
pop
lret
nop
xor
ds
jno
push
mov
push
inc
sti
popf
sbb
ret
pop
pop
enter
ja
mov
mov
push
cmpsb
push
lea
test
mov
out
rcl
fs
daa
mov
jmp
sbb
jae
bound
adc
cmp
push
cmp
test
push
popa
rcll
aas
push
mov
sub
addb
ds
dec
fistps
mov
mov
movsb
jb
icebp
or
xor
push
jg
pop
lock
or
xor
loope
nop
push
push
into
stc
stos
outsl
jmp
xchg
test
sub
sub
imul
int3
adc
lea
inc
add
cmp
jl
out
mov
inc
dec
fcoms
mull
call
jno
clc
jne
push
clc
sub
mov
pop
pop
loop
jno
dec
mov
shrl
jg
gs
sbbb
icebp
jb
dec
xor
push
mov
outsb
leave
repz
mov
push
addb
mov
sub
leave
lcall
jae
pop
push
mov
mov
cmp
js
lret
leave
iret
and
lds
lds
pop
or
inc
mov
in
imulb
sub
test
mov
xchg
insl
test
movsb
stos
or
gs
mov
subl
loopne
in
js
test
mov
bnd
test
adc
add
fisttpll
aad
aaa
push
mov
or
or
push
loope
movsb
inc
es
ret
insl
dec
sub
xchg
inc
pop
xlat
cwtl
mov
scas
jecxz
push
mov
xorb
dec
xlat
jge
inc
outsb
sbb
js
mov
adc
stc
xor
jge
insl
cmpsb
sbb
test
dec
cltd
dec
cltd
unpckhps
aaa
mov
push
subl
sbb
sub
sbb
add
pop
mov
flds
and
test
push
out
push
fdivrl
jno
jle
mov
andb
add
fwait
pop
loop
sbb
aad
lahf
dec
jle
repz
sub
das
out
mov
movsl
or
add
lods
int
aam
inc
andl
inc
lea
int
jecxz
ljmp
inc
cmc
das
xchg
xchg
push
add
rorl
mov
out
push
add
mov
stos
test
jmp
scas
jg
into
int
mov
ds
shll
into
popf
lods
pop
js
in
xor
cld
insb
fiaddl
scas
or
cmpsb
aad
pushf
hlt
and
pop
fcmovnb
add
sub
sti
mov
cmc
pop
stc
test
jne
addl
or
rcr
loope
xlat
fiadds
in
xchg
mov
mov
jge
fs
add
out
orb
enter
push
lock
sbb
cmpsl
dec
xchg
mov
test
lret
int3
int3
jns
xchg
inc
hlt
adc
iret
test
aas
out
stc
repz
mov
mov
out
sbb
xchg
sub
pusha
mov
and
lods
fmul
pop
or
pop
stos
in
fisubl
jo
and
dec
sbb
out
in
movsb
push
cmp
daa
xlat
test
aaa
incl
int
inc
mov
and
adc
ds
mov
loopne
ja
jge
int
repnz
movsl
cmp
cmp
int3
dec
and
mov
cld
out
ja
test
jmp
cmpsb
add
lret
scas
pop
divb
and
lret
stc
dec
ffreep
xor
or
sar
loopne
pop
ret
rcl
mov
mov
sbb
and
add
jo
fwait
pusha
outsl
ja
call
mov
push
mov
push
cmp
push
fidivrl
in
inc
and
sbb
je
pop
xchg
fsub
je
inc
cmp
emms
jae
stc
push
lcall
and
adc
mov
or
sub
in
xor
or
ds
add
jns
pop
jecxz
ret
std
fbstp
mov
fildll
std
mov
out
clc
insl
mov
imul
int3
cmp
test
pop
jge
cli
call
mov
xor
push
xorl
imul
cmp
lret
inc
and
into
push
and
jb
movsb
xor
xchg
je
and
or
icebp
dec
cmpsb
cli
dec
mov
mov
sub
cli
in
inc
mov
adc
loope
jle
nop
int
sub
xchg
int3
jl
jbe
add
jo
les
push
je
cmp
rcll
outsb
outsb
jmp
push
cmp
test
add
jns
lods
fstpl
mov
int3
popf
out
hlt
adc
or
inc
add
jo
push
je
in
xchg
bound
mov
sub
cmp
mov
movsl
dec
mov
es
and
adc
xchg
lods
mov
into
pop
cmp
adc
test
xor
add
repnz
pop
call
xor
pop
jp
nop
mov
arpl
cld
and
repz
popf
jg
dec
sub
dec
out
ds
ja
ret
cmpb
jmp
xor
lahf
jmp
stc
or
dec
movsl
in
xchg
jno
inc
jbe
popf
adc
imul
mov
stos
mov
jnp
in
dec
lea
sub
push
sub
popa
dec
inc
mov
lret
rorb
leave
iret
push
testl
stos
repz
test
pushf
imul
mov
push
adc
mov
insb
or
pusha
daa
xor
xor
into
push
sbb
xchg
addr16
pop
imull
cmp
mov
out
push
lock
jecxz
and
mov
jno
dec
xor
repnz
es
jp
pop
movsl
and
pop
adc
mov
sub
sub
fimuls
leave
cs
in
push
pop
js
stc
out
mov
scas
push
pop
xor
rcll
cltd
mov
add
arpl
dec
lods
ret
stos
or
dec
pop
lret
add
enclu
mov
stc
in
xor
or
sbb
aas
fs
and
out
xchg
and
cmp
adc
pop
orb
push
ja
cmp
xchg
mov
push
adc
imul
jae
cmp
push
mov
sub
pop
xlat
push
inc
xchg
arpl
dec
les
lea
arpl
add
cmp
imul
das
xchg
insl
mov
cmp
add
sbb
jae
ja
arpl
popf
push
pop
insl
cltd
in
xchg
dec
mov
mov
lahf
mov
xor
mov
rorl
cmpb
nop
sbb
test
popf
cmp
pop
arpl
imul
jecxz
dec
lcall
mov
push
stos
xor
testl
js
or
es
scas
cmp
jge
mov
mov
ja
xchg
push
cmp
pop
ljmp
add
shl
or
adc
inc
lcall
xlat
push
push
dec
sbb
sahf
out
inc
int
int3
xor
cmp
xchg
in
push
cmp
or
xchg
mov
out
pop
or
js
and
pop
jns
lret
fldl
out
and
iret
push
xchg
adc
in
xchg
lea
outsb
xchg
mov
pop
pop
ret
mov
repz
fbld
or
aam
and
jl
es
ja
sub
shlb
popf
push
js
int
jo
and
fldcw
insl
fwait
xchg
inc
push
mov
dec
mov
jne
orl
push
sub
pop
das
pushf
cmp
iret
inc
bound
cmp
mov
int
jmp
pop
adcb
mov
mov
mov
fistpl
fdivl
jns
push
shrb
scas
xor
dec
mov
dec
jg
testb
dec
rorb
jg
rcr
aad
jg
repz
xchg
push
addr16
test
rcll
pusha
into
adc
outsb
ja
sub
icebp
jb
jb
cmpsl
inc
lahf
xor
adc
testb
push
mov
insl
movsl
jae
mov
mov
mov
out
fmul
fisttpl
into
and
std
push
arpl
jnp
cmpsb
outsl
in
lret
es
cltd
xor
jno
jle
dec
stc
arpl
mov
mov
xor
jge
cmovne
test
inc
cmp
cmp
dec
jg
adc
cmpsb
add
dec
out
xchg
jl
data16
sbb
sbbl
ret
adc
mov
cmp
dec
sub
test
add
jae
and
inc
xchg
ds
inc
mov
or
dec
cmpsl
leave
negl
xor
jb
xchg
pushf
andb
and
xchg
mov
xor
jge
lock
cltd
into
inc
out
test
fstps
inc
or
enter
ret
stos
test
fmul
cmpsl
mov
push
jne
jp
sbb
or
jmp
sarb
mov
xchg
cltd
std
dec
mull
xchg
or
inc
out
mov
cltd
xchg
imul
js
or
leave
fldl
addb
testl
cs
fdivrl
test
pop
into
movsl
sub
scas
jns
add
and
push
pop
inc
pop
fildll
mov
stc
sub
gs
adc
adc
fs
and
or
sbb
jecxz
add
mov
imul
cltd
jge
inc
dec
push
xchg
clc
cmpb
sbb
cmpb
pop
xchg
fldcw
xchg
fstpl
fst
gs
add
and
lcall
iret
and
mov
push
inc
sub
and
fbld
mov
inc
movsl
cmp
fildll
hlt
and
neg
mov
addr16
jns
int3
sahf
mov
rcr
std
push
mov
aas
xor
ss
mov
aad
inc
repnz
xor
stos
pop
jle
dec
push
mov
outsb
loopne
popa
push
ss
xchg
fnstsw
mov
push
es
cs
addr16
in
mov
xor
sub
xchg
test
repnz
mov
mov
mov
aad
hlt
sbb
dec
inc
fistpl
test
iret
jne
mov
xchg
clc
icebp
rorl
imulb
push
and
int
jle
and
rcrb
je
lcall
jnp
or
mov
sarl
test
les
fisttpl
vpextrw
lds
imul
xchg
movl
divl
popa
mov
cmp
rol
mov
push
roll
jns
jecxz
xchg
pop
mov
cmpsl
or
pushf
ffree
testb
adc
frstor
bound
test
jl
or
mov
aaa
hlt
or
test
enter
out
cmp
pop
add
push
cld
push
add
mov
mov
outsb
scas
test
js
incl
xchg
mov
xchg
inc
ss
ss
aas
stos
jns
leave
pop
mov
jecxz
push
sbb
or
inc
fstpl
in
enter
jl
mov
out
lahf
and
test
add
popf
add
mov
testb
imul
add
mov
jl
mov
dec
iret
out
sub
iret
cmpsl
enter
jl
pusha
mov
cmp
imul
and
xchg
jg
sbb
or
cmpb
orb
sahf
mov
out
lretw
roll
cmp
pop
cwtl
neg
xchg
outsl
mov
lret
dec
clc
and
filds
adc
sbb
push
push
pop
mov
dec
mov
aad
jg
jne
lods
arpl
shr
shlb
dec
push
dec
testl
imul
bound
sub
jb
dec
popf
cmp
dec
divl
jge
stos
ret
fwait
enter
ret
mov
repz
lds
inc
test
fcoml
ret
pusha
push
push
xor
loopne
xchg
in
and
sub
lcall
dec
jmp
vmwrite
xchg
fs
fs
ficoms
mov
ljmp
cmp
dec
sbb
fwait
xchg
push
enter
push
xor
or
out
ss
jg
fwait
dec
lcall
out
pop
std
into
sub
mov
mov
pop
shrl
jne
mov
mov
je
or
jbe
int3
dec
repnz
pop
andb
add
ss
lods
dec
int
inc
fs
jp
mov
pop
fldl
imul
adc
insl
shrl
mov
mov
or
fisttps
and
icebp
lds
jmp
loop
ss
pop
sub
ja
nop
and
ret
sahf
es
incb
push
fldenv
loop
xor
push
std
xchg
or
rclb
in
mov
fisubs
out
test
mov
jg
mov
pop
xlat
sub
fcoms
mov
out
xchg
lds
into
in
insl
adc
test
in
mov
push
iret
stos
push
xchg
xchg
mov
shlb
dec
fsubp
pusha
pop
cmp
sti
dec
inc
into
sbb
mov
sub
lcall
ret
fisttpll
jge
lret
cs
push
xchg
pop
pop
or
and
add
mov
jne
sar
xorb
push
imul
popf
out
iret
shrl
jne
cmpsb
hlt
repz
movsl
imul
sbb
out
xchg
lock
mov
jle
xchg
pop
leave
mov
addl
push
mov
push
xchg
cmp
jae
popa
xor
arpl
add
popfw
sub
xlat
insl
mov
stc
xchg
or
outsb
stos
insl
ret
mov
lcall
enter
xchg
imul
add
jmp
in
dec
sbb
andl
pusha
push
jno
mov
jle
cli
and
daa
fwait
rcr
adc
lods
pop
push
dec
iret
lds
test
jg
xchg
mov
push
icebp
sbb
mov
jns
lds
movsl
xor
pop
in
nop
scas
xchg
pusha
mov
or
push
sub
loope
sub
sbbb
pushf
jne
mov
jb
sbb
xor
xchg
xlat
jge
dec
mov
fistpl
or
int
clc
rclb
xor
shrl
iret
cs
pop
xor
ret
mov
jne
jb
jno
sbb
pop
repnz
and
popf
inc
or
popf
fistps
sub
std
inc
mov
je
sub
insb
repnz
and
push
aas
inc
icebp
inc
cwtd
addr16
int
push
popf
pop
sbb
mov
mov
dec
orl
fildll
xlat
push
inc
sbb
pushf
iret
loope
sar
inc
dec
fwait
es
popf
cmp
pop
outsb
loope
sub
hlt
negl
lret
ds
push
mov
lea
xchg
push
data16
jbe
btr
cmpsb
popf
and
xchg
or
cld
out
into
jp
out
and
push
add
dec
outsl
jae
mov
hlt
jnp
jns
pop
sbb
mov
lret
adc
imul
ja
push
and
scas
rcll
xor
jno
or
pop
std
iret
aaa
sub
lret
cmc
outsb
cmp
push
js
xchg
jbe
test
shlb
xchg
nop
subl
lods
lahf
adc
dec
lods
aam
pop
add
mov
push
pop
fcomps
xchg
pop
pop
int3
popa
sbb
cltd
pop
popf
jo
xlat
pop
sbbl
jge
mov
loop
movsl
pusha
scas
aam
xchg
nop
mov
inc
xchg
jg
or
mov
sbb
fnstenv
arpl
adc
push
enter
in
stos
iret
pop
pop
shlb
hlt
pop
fcompl
test
iret
lds
and
test
fwait
loope
pop
mov
pop
adc
cmp
xchg
fisttps
adc
enter
sub
out
and
lret
inc
push
fldenv
test
cltd
mov
mov
mov
pop
das
inc
or
in
bound
clc
repnz
pop
idivl
mov
sbb
scas
cmp
xchg
jecxz
shlb
jbe
orb
mov
gs
mov
pop
popf
mov
xor
mov
test
inc
mov
stos
mov
lcall
mov
int3
sbbb
xchg
pop
sar
das
in
push
test
ret
outsb
pusha
or
xchg
std
jle
popa
push
pop
lahf
xchg
sub
jmp
adc
mov
test
sbb
clc
sbb
mov
and
push
fsubs
dec
ja
cmp
xor
dec
sbbl
inc
or
jg
pushf
mov
mov
rcr
add
xchg
in
adc
xchg
aam
and
int3
lret
aas
mov
jge
aaa
call
into
shrb
push
lret
leave
les
jbe
std
add
jmp
adc
add
fists
xchg
movsl
push
lds
add
jns
loope
inc
dec
inc
das
ljmp
jmp
mov
or
call
push
sbb
stos
in
pop
outsb
outsb
add
add
outsl
out
jp
push
scas
test
push
mov
jmp
popf
imul
push
adc
aad
das
jnp
cmpsb
pop
daa
vpsubsb
dec
cmp
cltd
int
lock
insl
popf
je
sub
nop
out
fcomps
add
bound
xor
arpl
xchg
cs
dec
pop
pop
or
push
jle
mov
or
das
enter
lret
xor
imulb
lahf
cmpsb
push
arpl
outsl
or
pop
jae
push
in
xor
xchg
shr
ja
push
and
adc
lcall
iret
xor
fimull
xlat
mov
rcl
lcall
aad
push
sbb
pop
imul
jl
sarl
inc
aas
mov
xchg
js
pop
jns
jle
adc
in
jne
cmpsl
xor
push
add
movsl
insb
pushf
pop
iret
aam
std
adc
xor
lods
dec
mov
jmp
test
scas
out
and
les
inc
or
xchg
adc
in
and
add
fdiv
imul
pop
xor
adc
inc
cmpsl
fldl
dec
insl
pop
jnp
call
pop
insl
push
fildl
sbb
in
sbb
dec
push
jae
inc
push
jmp
arpl
rorl
aam
mov
sub
jmp
scas
mov
dec
in
test
and
stos
lcall
ljmp
insl
xchg
push
push
inc
fcompl
aam
cli
mov
mov
cmpsb
jl
ds
adc
push
push
cmpsb
mov
cmc
negl
pop
adc
pop
outsl
xlat
cltd
les
cmp
jg
xchg
dec
stos
pop
aaa
sub
xchg
inc
pop
jmp
jg
popf
or
cmc
icebp
inc
xchg
cmp
stos
sbb
mov
lea
cmp
add
out
cmc
orl
mov
push
loopne
dec
pop
or
mov
xchg
push
adc
pop
insl
sub
xchg
xor
xor
shrb
cmpsl
test
andb
jo
xchg
add
arpl
jo
add
ffreep
sbb
ss
daa
jo
add
stos
dec
lahf
loopne
scas
lea
repnz
xor
scas
leave
into
push
out
adc
or
push
out
imul
in
mov
imul
xor
mov
or
cmpl
sub
mov
add
inc
fwait
addb
les
out
dec
xorb
cmpl
mov
pop
xchg
int3
orb
sub
adc
jmp
aas
xchg
addr16
xor
aam
sub
loope
inc
jg
mov
aas
xorl
xchg
lds
xchg
and
jnp
sti
outsl
push
fld
outsl
pop
adc
sub
subl
mov
test
insb
xchg
cmpsl
imul
mov
jp
cmpsl
mov
push
mov
xchg
mov
mov
pop
xchg
mull
outsl
aaa
jmp
loopne
lds
mov
repz
int
fnstsw
dec
cli
jge
test
out
mov
es
rolb
sub
clc
fwait
push
js
pop
std
inc
shl
movsl
pusha
jb
pop
lods
cltd
sbb
imull
dec
sbb
stos
mov
cmc
xlat
xchg
nop
jmp
mov
sahf
mov
mov
fimull
pusha
fucomip
test
mov
enter
adc
shr
lahf
dec
data16
and
lock
or
shlb
jo
nop
jo
addr16
push
mov
pop
pop
mov
loope
insl
or
test
in
jg
fidivs
clc
pop
cli
and
in
xor
cmpb
push
pop
loop
out
inc
ljmp
andl
rol
pop
jp
mov
lahf
mov
fsubs
mov
dec
pop
mov
and
pop
popf
dec
cld
outsl
jo
inc
xchg
dec
add
add
ret
roll
pop
xchg
iret
push
out
cwtl
xchg
test
std
lds
inc
cltd
pushw
mov
adc
xor
subb
dec
add
mov
std
lret
xor
cmp
or
dec
inc
jae
popf
jge
lret
xor
cmp
cmpsb
jns
addr16
pushf
mov
mov
outsl
push
subl
scas
jmp
dec
pop
gs
lock
pusha
arpl
xchg
popf
mov
iret
cmp
fmull
inc
and
and
mov
push
sub
out
push
lahf
lret
dec
repnz
je
mov
jl
jns
jne
inc
cmp
std
push
sbb
cwtl
mov
pushf
mov
mov
xchg
jb
mov
xchg
adc
cmpsb
dec
adc
mov
loope
or
or
add
push
rcrl
jmp
xchg
loope
push
xorl
inc
inc
and
xlat
test
dec
xor
adc
das
jns
sbb
push
in
incl
es
ja
inc
ja
cmp
mov
fsubl
adc
push
gs
arpl
aaa
jb
jmp
fwait
jnp
mov
int3
or
sbb
sahf
shll
out
daa
fcoml
pop
sbb
popf
mov
subl
jg
test
jle
dec
fcompl
push
dec
loope
dec
pop
fldenv
push
or
frstor
sbb
mov
mov
xlat
mov
sub
ljmp
xchg
test
inc
lret
nop
repnz
push
popf
test
mov
les
les
xor
xchg
stos
scas
cmc
lcall
jb
out
daa
test
add
jns
mov
ss
ret
mov
cld
or
cmpsl
mov
and
cmpb
lock
xchg
stc
dec
nop
mov
lea
ret
or
lret
lcall
xchg
subb
in
in
sub
rolb
mov
dec
addr16
push
pop
rorl
mov
sbb
ds
add
mov
sub
and
sub
xor
push
int3
xchg
jg
add
jl
rcrl
outsb
jg
outsl
xor
mov
into
fs
jmp
push
and
sbb
adc
clc
add
lcall
push
lock
into
inc
imul
mov
icebp
push
arpl
bound
std
mov
sbb
jecxz
jae
cld
rorl
rclb
sbb
jge
imul
mov
mov
jo
in
mov
ret
add
and
or
movntq
push
mov
xchg
push
xchg
cmp
xlat
sub
data16
popa
adc
flds
mov
inc
fs
pop
sub
neg
pop
cmpsb
filds
stos
mov
or
cmp
insb
inc
sti
inc
insb
inc
dec
loop
mov
ret
mov
scas
fidivrs
sbb
mov
add
xorl
aas
push
lds
xor
imull
pop
das
ja
cltd
mov
sbb
out
test
cmpsb
test
int
mov
and
in
and
movsl
test
insl
dec
add
pop
std
jecxz
cmpsl
inc
insb
add
iret
and
mov
mov
test
and
push
jo
adc
test
ljmp
dec
cmp
cs
and
jb
xor
scas
mov
jge
lods
movsl
mov
stc
leave
push
dec
sub
inc
inc
inc
stos
pushf
roll
xor
pusha
andb
andb
in
adc
mov
stos
mov
ljmp
sbb
cmp
inc
shl
shll
pop
std
pusha
mov
sahf
xor
outsb
nop
subb
or
test
push
mov
pusha
add
xchg
popf
push
cmc
imul
in
imul
push
mov
sahf
ja
imull
aas
and
mov
mov
xor
sub
test
inc
es
sbb
mov
mov
cmp
lods
sti
cmp
jae
insl
scas
sub
add
add
popf
inc
pop
and
mov
ds
inc
stc
insl
sahf
popf
shrl
lds
jl
cs
aas
jne
pushf
pushf
stc
dec
sbb
sbbb
cli
adc
and
dec
adc
mov
fnstsw
popa
in
dec
push
jp
xchg
jge
or
pop
int
ljmp
out
in
or
int
lock
push
jb
mov
ja
movsl
add
dec
mov
ret
sbb
adc
mov
outsl
xchg
cmp
divb
pushf
cmp
jl
cmpsl
adc
pop
imull
pop
xor
inc
inc
mov
stos
pusha
sbb
push
outsb
inc
dec
add
push
lock
or
cmpsl
fisttps
push
jg
xor
fwait
mov
dec
push
ret
fs
cmp
adc
xor
daa
stos
popa
push
cli
or
sbb
sub
sti
push
sbb
fwait
orl
mov
stc
fstps
push
add
push
xchg
sti
push
test
mov
mov
mov
push
icebp
fmull
adc
loopne
or
dec
fdivr
xor
inc
lret
pop
insl
pop
xchg
clc
push
negl
sbb
push
test
cmp
ret
adc
xor
xchg
clc
sti
rolb
inc
movsb
push
add
call
popw
scas
sbb
mov
dec
pop
popa
add
js
fnstenv
push
add
sub
test
push
and
cmpsb
fcmove
jo
fistl
jmp
test
mov
dec
inc
inc
insl
or
imul
xor
shlb
adc
xor
lea
fwait
enter
inc
xor
dec
repz
mov
pop
xchg
push
pop
mov
inc
hlt
cmpsl
mov
sbb
lds
sub
insb
xchg
nop
out
jns
mov
jge
fs
pop
or
icebp
mov
sbb
mull
stos
adcl
lahf
xchg
cmc
jae
roll
inc
rolb
xchg
and
fildl
pop
push
mov
jo
mov
fwait
testb
dec
testb
mov
cmp
loop
mov
arpl
sub
xchg
ret
cmp
xchg
out
mov
jae
mov
push
dec
loop
and
inc
push
cmp
fwait
dec
shrl
xlat
and
adc
mov
mov
sub
lret
test
fs
popf
push
xchg
add
adc
stos
mov
add
or
push
pop
iret
sub
xchg
add
pop
xlat
inc
cmp
into
int3
mov
int
cmp
aad
fwait
mulb
sub
xchg
or
mov
sub
adc
mov
sub
iret
dec
cltd
imulb
sbb
or
out
imul
roll
and
stos
imulb
or
mov
ret
xchg
pop
mov
sub
add
mov
push
adc
rcl
mov
gs
push
sub
mov
cmp
fsubr
pop
jo
ja
inc
sarl
mov
testb
lods
cmp
mov
push
arpl
push
pop
lock
xchg
xlat
test
cwtl
das
jo
xchg
xor
sub
xchg
mov
lcall
xlat
inc
push
add
aam
mov
xchg
mov
pshufw
test
cmp
and
dec
loop
push
dec
pop
test
addr16
jnp
sub
inc
sti
in
es
inc
pushf
outsl
sub
aam
and
adc
xchg
xchg
iret
aaa
pushf
stc
mov
or
cmpb
pop
or
popa
out
ja
pushf
jp
pop
cmp
lods
lds
mov
push
or
sub
xor
jecxz
jmp
add
in
add
or
pop
jl
out
mov
cltd
test
je
enter
lret
jg
nop
mov
xchg
imul
rcll
ljmp
mov
subl
adc
cmp
js
pushf
push
push
mov
jno
in
jo
insl
cmpsb
mov
fstps
xchg
ljmp
notl
loope
xchg
push
outsl
ret
vdivpd
mov
mov
jae
jle
xor
push
cmp
pop
cmp
push
out
fldl
add
and
into
mov
dec
and
fs
mov
and
inc
popa
sub
sub
arpl
inc
mov
cmp
fbld
lret
push
icebp
mov
icebp
loop
xchg
js
ss
loope
and
outsb
shlb
mov
sub
mov
movsl
lds
cmpsl
loope
pop
pop
es
adc
jg
xor
imul
dec
and
mov
stos
cmp
outsb
xchg
cmpb
jno
add
shr
stc
cmpsl
imul
mov
adc
iret
sub
es
cltd
aad
mov
popf
stos
mov
xchg
sbb
das
mov
into
mov
bound
mov
push
lret
push
and
or
jb
push
lahf
inc
rol
inc
loopne
jg
cmp
shlb
sub
ret
scas
jmp
fildl
repnz
iret
push
seta
sub
loope
mov
jbe
mov
js
shlb
daa
jb
and
fwait
lahf
jmp
jecxz
mov
add
push
lahf
jg
loopne
int3
xchg
imul
pusha
lret
cmp
loop
ljmp
iretw
add
popf
pop
mov
or
pushf
cmc
mov
popf
imul
stos
fidivrl
push
jbe
bound
por
dec
xor
push
push
jmp
aas
dec
mov
mov
icebp
pushf
stos
xchg
mov
nop
or
sub
xchg
pop
pop
les
dec
mov
cmp
fs
jns
rolb
jp
mov
dec
push
push
out
mov
pusha
or
xchg
loope
dec
mov
bound
mov
sti
mov
imul
mov
fnstsw
and
ds
jecxz
loope
cmpsl
call
dec
mov
sub
cmc
jae
mov
clc
push
xorb
inc
rcll
enter
sub
mov
or
dec
mov
sub
cmc
out
push
ret
mov
sub
sub
mov
mov
jbe
bound
jg
cld
mov
cmp
cmp
scas
test
sub
fisttpl
mov
push
pop
dec
imul
lcall
lret
pop
cmp
dec
mov
lods
and
psrlq
cli
aad
xor
cli
mov
or
cmc
aas
mov
ja
pop
lock
fldenv
mov
pop
or
nop
rolb
outsl
push
sbbb
shll
fisubrs
movsb
mov
mov
mov
sub
into
and
fsubrl
test
sub
rolb
xorb
lods
ficomps
inc
loop
mov
sub
mov
xlat
pop
xchg
dec
dec
hlt
fbld
jmp
lcall
or
xlat
push
shrb
jmp
and
mov
inc
clc
jne
sarb
xor
dec
ljmp
scas
pop
or
dec
sub
cmp
mov
jo
sub
cltd
int3
repnz
jns
in
clc
pusha
cmpsl
mul
stc
js
adc
je
sub
and
pop
cmp
push
and
test
js
push
int
stos
repnz
pop
cwtl
lret
sbb
or
aad
mov
bound
imul
or
insb
test
les
cmpl
aaa
push
lret
lods
push
adc
dec
pushf
jns
shl
sub
stos
stos
iret
dec
popf
and
addr16
cli
push
sub
lahf
cmp
jle
std
dec
mov
xor
jmp
sub
xchg
jle
fistps
loopne
dec
fcmovne
popf
notl
jae
sbb
sub
test
jb
jne
dec
cmp
xchg
popf
les
pop
stos
dec
sub
mov
sbb
js
add
inc
cmc
mov
test
mov
int
pop
dec
sbb
jb
cmp
cmp
rorl
mov
sub
sub
xchg
popf
sub
push
sahf
shrb
mov
adc
inc
loopne
insl
xor
es
mov
scas
outsb
outsl
insb
in
pop
scas
test
pop
in
push
sbb
or
ret
pusha
mov
push
in
jecxz
ds
dec
arpl
jp
xor
or
loope
xchg
dec
jne
aaa
jbe,pt
inc
mov
aas
lahf
jl
push
in
clc
dec
jmp
xchg
js
out
push
loopne
mov
xchg
inc
dec
lods
xchg
and
xor
sub
pop
sub
mulb
popa
mov
add
cmpsl
dec
lods
mov
sbb
das
leave
push
mov
inc
dec
lea
cmpsl
fwait
jo
sub
jg
fstps
push
leave
pop
insb
push
pushf
ljmp
adc
ja
push
sbb
lret
bound
ret
pop
movsb
xor
test
mov
out
adc
dec
mov
rol
lret
mov
loope
cmp
stc
gs
iret
sub
ja
xor
mov
mov
ss
loopne
dec
fiaddl
fdivrs
popf
lock
gs
lods
fs
dec
rcr
sbb
shrb
dec
pop
jmp
pop
xchg
add
std
adc
aad
scas
xchg
in
dec
jg
push
into
cli
xlat
leave
adcl
popa
data16
fidivl
rclb
les
arpl
mov
fwait
lahf
ja
add
inc
push
and
xor
or
ds
scas
cltd
xor
push
dec
cmp
push
cwtl
or
inc
test
testl
scas
in
call
iret
xchg
jge
orl
sub
sbb
fwait
mov
jno
dec
jno
aaa
mov
jl
scas
outsl
xor
push
lret
jno
movsl
jae
pushw
or
push
gs
mov
sbb
mov
sahf
outsl
inc
cmpsl
adc
jmp
cltd
inc
lret
cmp
in
dec
mov
cmp
sbb
in
loope
ja
aas
mov
daa
xchg
xlat
sbb
mov
shll
add
add
jns
stos
and
and
mov
mov
xlat
adc
or
fs
icebp
ss
and
in
fcomps
xchg
aaa
jne
and
mov
adc
mov
loop
jl
xchg
xchg
push
fmuls
lds
cmp
dec
sub
leave
testb
movsl
ljmp
push
mov
dec
xchg
pop
mov
mov
fucomi
ret
aad
sub
fldt
jle
lods
in
inc
aam
cmp
clc
mov
add
repz
hlt
push
addr16
mulb
jecxz
mov
push
jae
push
xchg
cli
inc
psllw
cltd
fsubrl
cmp
xor
cmc
out
push
aas
sbb
test
divps
lds
inc
std
insb
in
adc
fs
sub
fcmovbe
fmul
test
jle
movzwl
or
in
xor
mov
gs
xchg
dec
je
push
hlt
lret
sbb
ret
and
mov
fmuls
mov
ljmp
inc
loop
mov
jle
test
dec
xchg
cmp
imul
lahf
mov
faddp
cmpsl
loope
neg
fisttpll
cmp
call
dec
add
jmp
mov
jo
ljmp
and
inc
cmp
xchg
notb
mov
jnp
lods
outsl
mov
sti
cltd
iret
mov
or
call
hlt
pushf
cmc
addr16
mov
mov
cmp
jl,pt
sbb
cmc
imul
ret
scas
aas
out
cmp
add
cld
leave
iret
mov
dec
movsb
test
xchg
xchg
push
sbb
into
fwait
mov
frstor
dec
repz
int3
movsl
and
call
pop
ret
xchg
or
imul
sub
mov
in
and
bound
mov
dec
cld
inc
xchg
aam
cmpsb
je
in
out
hlt
mov
xor
mov
xchg
addr16
sub
sub
out
push
pushf
jno
int
int
int
aas
dec
lods
scas
jae
pop
cmp
or
sub
call
cmpsb
outsb
lret
out
loop
mov
and
add
fcomps
pop
or
push
insb
aas
xor
iret
mov
sbb
outsb
sahf
neg
cmp
cmc
xor
insl
and
xorb
jae
lcall
lea
and
jle
mov
pop
pop
stos
and
dec
lods
xchg
dec
loopne
jmp
rcrl
pop
mov
mov
sti
inc
mov
lret
xchg
out
fldcw
inc
outsb
int3
imul
xor
cmpsl
xorl
lahf
push
rorl
jno
loopne
inc
lcall
or
inc
testl
repnz
lock
jl
mov
xor
fcmovb
jge
jl
inc
int3
fcoms
rorl
xchg
mov
arpl
and
sbb
iret
imul
icebp
in
xchg
xor
jle,pn
mov
pusha
xchg
sti
pop
arpl
xor
mov
pop
pop
iret
ret
mov
sub
aad
shlb
leave
xchg
adc
mov
out
mov
xor
sub
ret
ret
jnp
ds
data16
aaa
aaa
pushf
cmp
imul
cmp
iret
push
shlb
out
sbb
mov
or
adc
mov
adc
repnz
sahf
sahf
pushf
push
push
cmpsb
push
mov
sahf
lahf
xlat
ret
loopne
dec
fs
mov
popa
loop
mov
sub
mov
sub
dec
or
cli
js
mov
and
lcall
leave
fisubs
xchg
or
popf
mov
iret
aaa
aaa
cwtl
mov
ss
mov
mov
sbb
fwait
adc
fisttpll
xor
add
adc
test
and
arpl
lods
xchg
sti
cmpsb
mov
jge
movb
pop
pop
out
xchg
pushf
mov
loop
ds
out
mov
sub
cmp
mov
outsb
pop
cli
in
adcb
icebp
dec
fiaddl
insl
pop
dec
ja
sbb
dec
inc
xor
scas
outsb
pushf
test
test
out
ss
pop
cmp
xlat
xchg
test
test
mov
sub
adc
xchg
addb
fldl
adcb
movsl
mov
jle
mov
in
sbb
mov
cltd
jl
add
daa
frstor
loopne
out
pushl
mov
mov
test
pextrw
pop
incl
push
out
push
jne
pop
test
stos
call
jbe
push
adcb
xchg
test
gs
scas
int
dec
js
or
mov
cmpsl
cmpsl
jmp
xor
es
fdivr
fs
sbb
cli
cmp
popa
les
cmc
jb
add
gs
sub
and
daa
add
in
cmp
fcomip
pop
test
inc
leave
push
test
lods
nop
out
dec
adc
fs
out
imul
xlat
lods
pop
sahf
nop
ljmp
out
cmp
cmp
shl
imul
lret
cmp
xchg
bound
mov
repnz
and
mov
icebp
add
dec
mov
out
sub
add
dec
xor
and
and
outsl
mov
sbb
les
fdivrl
in
imul
pop
cmp
aam
push
xchg
cmp
xchg
icebp
arpl
mov
cmp
fs
inc
fadds
xchg
scas
adc
imul
sub
mov
sahf
cmp
loop
inc
test
jl
dec
mov
testl
pop
dec
leave
imul
xchg
jge
pusha
push
sbb
add
adc
sub
xchg
into
dec
push
push
test
adc
cld
lcall
stc
pop
mov
subb
test
movsb
xchg
fnstsw
jns
lret
xor
test
sbb
fisttps
mov
mov
mov
fisttps
inc
icebp
in
xor
xlat
ljmp
cmpsl
daa
scas
stos
enter
lock
adc
enter
js
cmp
and
iret
call
adc
vpsllw
adc
dec
cmpsb
icebp
jbe
pop
mov
hlt
xor
aad
pop
fadds
or
sub
sub
outsl
cmp
je
in
icebp
scas
jnp
bound
jo
mov
sub
cltd
jmp
mov
push
cld
hlt
pop
mov
xor
mov
sbbl
add
je
mov
jno
push
lahf
mov
mov
idivl
dec
jecxz
lret
cmpsl
popa
dec
and
mov
fdivl
jl
jg
roll
rorl
sti
pop
shll
insl
test
loop
mov
mov
adc
mov
shrl
lds
ds
jecxz
jmp
jle
orl
jno
pop
or
ja
sbbl
lcall
jne
fsts
mov
das
sub
scas
cltd
fcmovb
or
jae
mov
jno
test
hlt
loop
outsb
gs
cmp
loopne
mov
xchg
mov
and
iret
rol
inc
in
push
les
jp
aad
dec
add
mov
ficompl
sbb
sub
jae
rcll
jge
ds
popa
xor
pop
outsl
add
shlb
out
mov
xchg
pop
out
repz
popa
leave
shrb
jmp
sub
sub
mov
pop
aaa
xchg
sahf
adc
adc
inc
lea
inc
mov
and
out
push
sbb
out
sbbb
movsb
inc
fdivl
enter
dec
fwait
test
mov
sbb
bound
mov
out
pusha
jbe
repnz
dec
movb
mov
les
in
mov
dec
je
psrlq
fdivrl
jecxz
or
xchg
mov
jne
lods
and
pusha
test
lcall
mov
mov
and
jne
and
leave
sbb
mov
incb
xchg
xor
mov
pop
xchg
enter
lret
fcomps
and
aas
adc
xlat
xchg
xchg
jo
aas
xor
or
cmc
je
cmpsb
aaa
test
sub
icebp
add
fsubrl
pop
into
call
icebp
pop
ds
ret
adc
jns
in
cmpsl
mov
adc
les
dec
pop
test
and
pop
inc
dec
adc
lahf
loopne
cmp
push
std
addr16
dec
test
and
mov
inc
out
add
pop
gs
sbb
aad
mov
lds
sbb
gs
imul
fwait
cltd
sub
int3
mov
jl
subb
stc
xchg
push
ficompl
test
xchg
sbb
mov
jo
loopne
mov
stos
adc
pop
fisttps
push
inc
aad
ss
and
fs
shll
call
mov
iret
jb
xor
or
inc
ret
mov
subb
cmpsl
mov
arpl
iret
imul
add
xchg
mov
incb
movsl
out
push
dec
xchg
mov
aad
pop
cmp
outsb
mov
sub
push
jb
sub
ds
sub
out
cld
arpl
leave
fsubs
jl
into
add
movsl
push
sub
and
test
enter
push
mov
jp
cmp
inc
dec
dec
sub
or
adc
in
cwtl
mov
popf
test
cwtl
push
cwtl
fistps
or
cwtl
enter
mov
and
pop
data16
sbb
pop
push
dec
imul
call
jae
add
dec
sub
fs
outsb
push
push
pushf
and
xchg
xchg
adc
gs
mov
outsl
or
fxch
out
push
loopne
mov
loop
test
jmp
mov
cmp
mov
mov
xor
shrb
orb
mov
sbb
decl
push
in
dec
sub
insb
mov
out
xor
mov
nop
or
add
es
dec
xchg
mov
test
fistl
in
push
scas
xchg
inc
xor
cwtl
andb
push
jp
push
lcall
dec
adc
fdivrs
adc
pushf
sbb
pop
adc
or
dec
sbb
adc
mov
pop
in
xchg
inc
xlat
pop
jbe
in
lret
add
pop
arpl
rcll
jecxz
cli
rorb
lcall
or
test
pusha
and
sub
and
add
ds
xor
enter
xchg
dec
pop
popa
imul
or
lea
pop
fcmovne
ds
mov
imul
arpl
loope
in
enter
add
stos
add
imul
mov
into
std
ud0
outsl
fsts
or
lret
sub
shll
or
pop
xor
aas
push
xchg
movsb
jne
test
pop
cmc
mov
inc
push
dec
bound
imul
push
pop
dec
sahf
and
or
sbb
imul
addb
test
icebp
dec
cmpsl
cli
loope
mov
add
xor
pushf
jo
lahf
cmovg
fisubs
mov
mov
cmc
outsl
cmp
jo
xchg
pop
pop
and
sbb
xor
cmpsl
movsb
xor
loop
inc
mov
adc
pop
inc
cmpsb
cld
sbb
xor
push
sahf
cwtl
addr16
cld
outsb
in
mov
jae
outsb
testb
pop
add
lcall
fiadds
shll
or
push
insl
outsl
and
jl
xor
jmp
mov
mov
inc
repnz
std
in
sub
cwtl
or
outsb
data16
lea
and
leave
xchg
pop
adc
xchg
andl
fwait
push
dec
fmul
push
mov
add
pusha
gs
ss
scas
ds
cli
mov
loope
fcmove
or
pop
push
negb
xchg
xchg
loop
jl
icebp
cmpsb
lods
push
movsl
bound
fwait
hlt
cs
pushf
idivb
cld
jae
lea
addr16
mov
pop
mov
enter
call
data16
insb
sbbl
out
or
test
lods
scas
ror
fmul
lds
into
mov
lock
mov
outsb
lret
xchg
inc
mov
stos
scas
repz
mov
lods
cmc
push
or
loop
mov
cltd
leave
mov
mov
aad
repnz
loop
repnz
fldenv
jb
add
aaa
dec
scas
fstl
xor
xor
sbb
stos
in
je
inc
movsb
fists
ret
push
scas
enter
xchg
out
test
push
and
cmp
int3
sahf
popl
lret
daa
hlt
sub
mov
inc
mov
bound
mov
out
jge
shr
andb
xchg
or
lahf
mov
pop
xchg
xchg
push
jl
xchg
repnz
int
sarb
add
ficoml
adc
pop
lret
and
mov
jmp
pop
lret
dec
iret
xchg
ret
cmp
loop
xlat
pop
loope
sub
xchg
aam
and
and
mov
mov
jae
lods
sbb
adc
mov
jne
push
sub
lods
dec
sub
subl
mov
addl
dec
cmp
mov
hlt
repnz
mov
inc
cmc
pop
jp
pop
lret
in
repz
syscall
inc
adc
ss
daa
call
leave
inc
sbb
mov
cmp
nop
fstl
in
loope
sub
ret
or
icebp
jo
popf
stc
cmp
mov
xor
aaa
filds
sbbl
addr16
mov
in
shl
xor
jle
out
mov
or
xchg
jae
mov
mov
fists
xchg
mov
mov
xchg
mov
and
xor
push
jl
rolb
mov
shll
ror
into
pop
push
mov
cmc
loope
add
mov
lods
shll
repz
sbb
lea
adcl
aad
mov
sahf
mov
mov
int3
rcll
mov
jecxz
jge
mov
push
test
loopne
pop
out
xchg
shrl
adc
xor
ror
repz
ljmp
lods
mov
daa
dec
and
xchg
inc
push
hlt
in
fcmovu
pop
gs
neg
push
lods
in
inc
jns
clc
jmp
dec
push
int3
cmp
outsb
jno
loope
cmp
xor
cld
sti
scas
dec
test
sbbl
into
addr16
or
iret
cmp
sarb
nop
jle
fisttpl
scas
adcb
mov
std
push
lret
gs
pop
dec
test
mov
cmp
sub
pop
pop
rcll
gs
mov
or
add
faddl
sbb
int
mov
addl
push
sub
lds
dec
xor
mov
idiv
dec
cmp
xorl
cmpsb
add
and
lret
enter
pop
outsl
out
enter
push
out
pop
stc
repnz
mov
loop
xlat
mov
add
mov
fcoms
notl
dec
ljmp
mov
test
sahf
mov
je
cmp
cld
bound
int
divb
jb
test
jmp
push
es
jne
xor
push
loope
sub
hlt
push
cmc
iret
fildll
mov
jbe
shll
addr16
fwait
xor
hlt
aam
xor
mov
cs
cld
and
je
mov
jp
jge
fnstsw
or
addr16
mov
movsl
movsl
mov
fisubrs
mov
mov
mov
sbb
out
test
xchg
sarb
mov
jnp
or
mov
and
in
fs
lea
pushf
lret
mov
das
aam
repnz
shl
jg
mov
popf
int3
xchg
loope
iret
cmc
insl
pusha
dec
test
pushf
gs
dec
mov
mov
or
lods
push
shrl
sub
inc
adc
dec
jp
add
aad
bound
mov
andb
pop
movsb
push
or
ljmp
push
dec
mov
xchg
movsl
xor
cwtl
fstl
jo
add
jo
mov
xor
ljmp
mov
dec
cmp
cmp
sbb
cmp
mov
les
stos
loope
dec
xchg
or
popa
xor
and
fisubrl
popf
ret
jecxz
sub
movsl
inc
xchg
mov
mov
icebp
popl
push
xchg
jecxz
mov
std
sbb
adc
mov
mov
or
lret
icebp
inc
ret
das
cs
cmp
and
cmp
push
pusha
push
cwtl
ss
mov
lock
pop
lret
fdivl
or
mov
inc
jns
out
jg
insl
repz
repz
cmp
mov
insl
bnd
cmp
lcall
mov
and
out
int3
cmp
push
movsb
leave
test
psllw
cmp
mov
sahf
rclb
rol
sub
sub
jnp
sub
push
cs
aaa
mov
and
push
pop
mov
fcoms
xor
rol
pushf
cmp
andb
push
cmc
into
sbb
mov
cld
cs
push
fimuls
iret
std
cmpsb
push
outsl
movsl
push
push
cmp
inc
shrb
in
pop
or
mov
cmp
sahf
les
cs
shlb
xchg
lods
sub
shrb
sbb
and
inc
mov
into
xlat
xor
je
ss
jle
fsubrl
adcl
xchg
add
out
lods
imul
bound
xor
aaa
xchg
xor
gs
sub
xchg
out
dec
sub
pop
rclb
ja
fmuls
jns
xchg
insl
les
mov
add
movsb
cmp
mov
inc
jge
into
lea
aad
xchg
pop
scas
xchg
mov
adc
cli
xor
insl
dec
sbb
ja
scas
add
int
mov
lahf
loopne
xchg
sbb
imul
cmp
out
cmp
mov
mov
mov
out
push
xchg
xchg
setge
mov
js
out
movsl
rcr
stc
or
jbe
and
xor
dec
outsl
call
es
lret
scas
fistps
pushf
xor
xor
lahf
jmp
jno
adc
or
lods
in
bound
or
pushf
mov
sbb
inc
out
sbb
jae
stc
add
mov
aas
jg
dec
xchg
mov
adcb
clc
or
add
hlt
sbb
je
mov
pop
test
lret
xor
bound
leave
or
in
daa
lret
inc
push
in
dec
lahf
movsb
out
repnz
add
jbe
repz
or
jle
push
xor
or
sbb
mov
sub
aas
jb
in
dec
ljmp
inc
mov
inc
mov
aam
push
pop
add
mov
mov
cld
cmc
insb
out
mov
hlt
cmp
pusha
cmpsb
getsec
or
and
jl
add
pop
add
pushf
flds
pop
sbb
mov
loopne
pop
popl
roll
sbb
mov
mov
dec
and
testl
cmpsb
cmpl
xor
fsubrl
inc
cwtl
and
inc
divb
mov
sbb
stc
push
xorl
popf
xor
xor
loop
das
leave
pop
add
jp
pop
xchg
xor
fisttpll
mov
ljmp
fcompl
push
subl
pop
das
lods
lds
sub
pop
sbb
push
mov
and
repz
sbb
mov
movb
in
sbb
xchg
and
pop
out
aaa
test
xchg
out
xor
notl
cmc
sbb
repz
adcb
jle
test
pop
sub
ljmp
sbb
xlat
sub
clc
push
movsl
jmp
into
add
shll
test
gs
std
ds
sub
insl
test
push
lahf
inc
iret
mov
fidivs
int
mov
push
mov
mov
sbb
xchg
dec
lods
sub
mov
jge
or
xchg
stos
jb
and
jae
int3
or
add
mov
dec
lods
nop
iret
jno
mov
mov
push
je
dec
sub
xchg
push
fcoml
or
sub
pop
ja
mov
lods
into
mov
sub
pop
dec
das
imul
jns
mov
je
mov
in
test
adc
shll
lcall
dec
cmp
sbb
inc
push
jg
andl
push
fistpll
jecxz
in
mov
dec
cltd
test
mov
or
das
pop
xchg
mov
pop
push
xor
mov
test
sbb
sub
outsb
stos
loopne
call
jno
ljmp
jbe
movsb
mov
jae
outsb
mov
mov
or
iret
aam
jns
inc
xchg
xor
shll
gs
imulb
cmp
rcrb
leave
adc
repz
pusha
dec
mov
lret
cmc
dec
out
jne
dec
clc
adc
out
adc
imul
lea
cmpsb
inc
les
ja
rorl
mov
repnz
popf
lds
aad
adc
sub
cli
mov
sub
test
out
dec
mov
divl
daa
sbb
mov
stos
ds
cmc
lea
pop
out
jae
cltd
repnz
ret
std
and
icebp
pushf
inc
add
lds
mov
in
test
stos
push
pusha
mov
call
sbb
test
cltd
popf
sub
or
hlt
jl
push
sbb
data16
fs
out
mov
mov
dec
mov
es
mov
inc
jmp
and
daa
push
jecxz
data16
mov
leave
fldl
adc
lret
outsb
pop
in
adc
adc
pop
out
loopne
lock
mov
test
out
dec
lods
stc
repnz
movsl
popf
call
sbb
inc
xor
mov
inc
jle
rorb
ja
xchg
inc
mov
cmp
mov
jae
and
in
push
mov
sbb
xchg
or
mov
push
enter
mov
sar
pushf
jg
call
push
adc
aaa
adc
mov
sbb
data16
lock
xchg
sbb
fsubr
xchg
js
in
rcrl
stos
sbb
enter
cmp
cmp
or
jo
add
arpl
loope
add
fnstsw
and
dec
out
cltd
jg
iret
push
cli
loop
mov
repz
rolb
push
and
arpl
jno
aaa
je
test
jae
jmp
lods
lcall
lds
mov
lds
and
mul
mov
sbb
dec
jge
hlt
dec
sarl
pop
add
int
rcll
and
cmp
movsl
jecxz
mov
xchg
inc
clc
scas
pop
xor
insl
xor
dec
jge
pusha
ret
test
cmpsl
push
dec
inc
stc
push
lock
and
movl
push
push
shll
xchg
fbstp
aaa
push
dec
in
or
xor
mov
cli
ror
jno
push
inc
roll
push
js
std
push
sbb
fs
bound
adcb
cmp
into
jl
pop
icebp
fcoml
shrb
dec
sbb
cltd
and
xor
jg
int3
cmpb
cmpsl
sbb
das
xchg
xchg
jae
cltd
push
and
sahf
shrb
xor
cwtl
add
push
push
loopne
dec
mov
popf
cmp
mov
shr
aad
inc
inc
iret
mov
data16
or
maxps
cltd
jne
mov
hlt
shrl
sar
test
das
pop
inc
pop
lahf
inc
dec
xor
jecxz
xor
ret
test
cmp
or
sbbb
clc
cmp
insl
out
mov
out
ja
js
xchg
adc
call
imul
icebp
sahf
mov
popa
int
adc
xchg
or
test
sbb
sti
or
aam
sbbb
xor
mov
xlat
cmpsb
dec
test
and
jecxz
mov
in
push
pop
and
mov
mov
add
pop
std
jg
pop
mov
imul
aam
imul
dec
mov
dec
arpl
mov
adc
sti
lods
push
out
xchg
sti
cmp
sub
mov
mov
mov
sbb
push
in
and
mov
mov
xor
stc
mov
xor
testb
xor
push
sahf
out
jae
sbbb
jmp
mov
jp
mov
mov
loop
sub
inc
out
pop
pusha
xlat
inc
sahf
cmc
dec
sub
into
scas
imul
or
into
sbb
lods
es
rorl
mov
mulb
stc
aam
lss
andl
mov
adc
fwait
lds
push
test
ret
adc
lock
add
pushf
mov
sbb
rcll
popf
cwtl
jge
mov
pushf
mov
mov
lods
dec
push
arpl
pop
loopne
movl
mov
push
leave
push
lods
int3
pop
fisubl
imul
jle
sarb
lea
scas
out
in
test
repz
adc
mov
add
push
fisubrl
or
out
xor
xor
hlt
rcr
sub
mov
popl
movsb
cmpsb
or
out
ds
push
call
jecxz
fildll
out
iret
lahf
rcr
fnsave
ja
sub
cmp
mov
push
popa
pushl
gs
and
xor
cmp
sub
insb
sub
mov
aaa
push
cli
xchg
scas
lock
fsubs
popf
or
pop
and
movsb
mov
test
cmp
xchg
xorps
mov
ja
in
jo
sbb
inc
mov
sbbb
sbb
fisubrs
or
or
push
xchg
xlat
and
mov
fstpl
cwtl
loop
decl
negb
jne
sti
in
xor
lret
repz
scas
push
in
mov
add
addb
sbb
movaps
aad
cmp
mov
aam
inc
cmc
jl
pop
hlt
fbld
aam
orl
mov
popl
inc
jmp
movsb
cmp
jno
sbb
mov
stos
fmull
mov
mov
xchg
les
mov
lahf
cmc
xchg
sbb
mov
lock
lret
lcall
jmp
stc
call
xchg
insb
mov
mov
js
mov
pop
xchg
loopne
cld
test
sarb
fimull
ss
not
ret
iret
xchg
push
and
cmp
mov
ja
lods
xchg
push
je
xchg
lea
bound
jnp
and
xorl
mov
xor
hlt
xlat
and
pop
jns
movb
fdivrp
scas
out
cli
enter
inc
pop
pusha
or
dec
pushl
fistpll
and
cmp
cmp
divb
into
jecxz
test
cmc
cld
mov
push
fiadds
fnsave
add
imul
and
mov
loop
in
dec
sbb
push
fs
fsubrl
stos
adc
xchg
into
fwait
aaa
sub
popa
xchg
mov
dec
fldl
leave
dec
xlat
insl
les
mov
sti
or
aaa
mov
xchg
or
pop
or
add
into
mov
ret
add
sarl
mov
imul
mov
mov
xor
or
fmuls
outsb
mov
or
adc
mov
mov
fld
cli
mov
imul
loop
rol
fcoml
js
push
inc
mov
iret
testl
es
out
pop
out
add
dec
push
sbb
xchg
mov
pop
iret
cmp
jo
shrb
jmp
add
scas
mov
jne
push
sbb
fmul
push
sbb
xchg
cmp
ds
lret
inc
in
shlb
sbb
cmpsl
inc
lods
lret
loop
inc
lods
push
loope
sar
ljmp
shlb
mov
rol
lea
rcrb
mov
jl
lret
cmp
pop
fwait
push
pop
sbb
aad
movsb
arpl
enter
js
out
xorl
push
mov
aad
lahf
xchg
jecxz
jb
fdivr
sbb
inc
mov
mov
mov
push
lahf
scas
cmp
mov
aas
xchg
sub
ds
jnp
jl
xlat
xor
adc
aaa
test
lods
push
lea
insb
or
popa
outsl
dec
mov
stos
cmp
outsl
scas
aad
incl
outsl
nop
xchg
sub
xchg
sbb
leave
aam
sbb
jo
adc
test
inc
insb
lret
mov
test
pop
nop
push
sub
fsubs
sarb
loope
cmpsl
sahf
imul
xor
add
jbe
cwtl
les
nop
lcall
out
mov
xor
std
std
cld
repnz
test
cld
scas
xchg
sbb
inc
shl
adc
add
or
jnp
mov
xchg
inc
mov
or
test
clc
jae
scas
enter
popa
adc
or
aam
outsb
cmp
ficoms
push
fildll
xchg
mov
ss
lret
jmp
inc
in
mov
mov
loopne
inc
lods
loopne
jmp
and
rolb
add
subl
xchg
sbb
push
ret
xor
int
test
push
nop
sbb
sub
pop
cld
stc
shlb
dec
sti
fisttps
jae
into
mov
fcomip
xlat
test
inc
mov
insl
push
or
insl
pop
iret
imul
hlt
mov
cmp
mov
dec
sbb
es
lret
clc
xor
push
mov
rolb
into
fcomps
xor
jge
mov
int3
in
ja
data16
out
pop
out
sub
mov
fsub
add
xor
cwtl
loopne
inc
mov
jl
mov
aaa
repz
pushf
add
and
pop
das
fs
into
ret
jp
out
scas
arpl
add
and
fnstsw
xchg
add
jmp
das
sbb
jmp
cmpsl
movsb
mov
cmp
add
mov
push
scas
fnstcw
cmc
cmp
fsubrl
mov
mov
pop
imulb
cmp
mov
xor
rcrl
roll
out
mov
lret
mov
xor
insl
fsubs
push
in
out
inc
and
mov
adc
stos
rorb
mov
out
aaa
roll
sbb
dec
mov
or
lret
sbb
xor
leave
xor
outsl
cwtl
pop
add
inc
dec
xor
mov
dec
cmp
leave
jmp
mov
pushf
loope
fnstenv
mov
daa
adc
add
lahf
popa
ss
repz
out
xchg
sbb
aaa
iret
fldenv
lret
adc
hlt
lret
imul
add
in
repz
sbb
int3
push
xor
in
je
arpl
loop
push
push
rcll
repnz
xchg
xor
or
add
aad
fstl
test
add
push
enter
aam
lods
gs
sub
inc
sarb
jo
mov
pop
arpl
rcrb
loopne
ret
xor
pop
out
test
mov
and
xor
lea
mov
popf
insb
inc
jb
push
cmpsb
ja
cs
in
inc
push
xor
cli
xor
filds
mov
mov
shr
cmpsb
mov
ret
mov
mov
and
lea
inc
xor
cmpsb
int3
lock
popf
out
nop
push
xor
inc
cmp
lds
cmp
int
xchg
xchg
xchg
and
mov
xor
pop
cs
ljmp
jl
into
je
movsl
adc
or
addl
into
push
xchg
push
cmp
ja
cwtl
loope
add
out
ljmp
xchg
loopne
adc
or
mov
js
push
mov
call
test
call
or
stos
lret
out
lods
test
cwtl
push
cltd
lret
fstps
dec
pop
adc
dec
mov
jnp
jp
inc
push
dec
adc
shlb
cmp
iret
jo
pop
or
cltd
testb
stos
sbb
out
mov
push
ss
push
jns
out
cmp
sbb
sbb
into
sti
fadd
xchg
cwtl
imul
push
inc
xor
jmp
lahf
mov
in
sub
sbb
shlb
inc
popa
cmpsb
jg
cli
cld
lret
push
cmpsl
fadds
hlt
mov
xor
or
add
fadds
test
cmp
scas
jmp
cmp
fistl
lret
or
imul
nop
sub
aam
fstl
cld
in
movsb
push
mov
pop
cmp
aad
fcompl
jae
loopne
add
stos
add
js
fiadds
aas
test
fsubrs
je
in
jb
movsl
fabs
xchg
jmp
pshufw
or
notb
inc
out
cwtl
dec
xchg
mov
sbb
push
shll
jmp
stos
in
cmc
hlt
or
xlat
jbe
adc
sub
inc
clc
loope
sbb
cltd
xchg
les
inc
mov
mov
fcoml
ss
imul
ret
adc
enter
ss
sub
mov
movsl
mov
sbb
incb
jp
jmp
and
jnp
sub
xchg
jle
xor
addr16
aad
jp
movsl
cmp
cld
aad
jne
jns
fimuls
sahf
and
arpl
ret
cwtl
push
out
dec
mov
mov
imul
cmc
daa
nop
fcoml
add
stos
pop
xor
popa
sbb
mov
daa
fnsave
push
rolb
lds
or
jg
jg
mov
ljmp
mov
popf
add
xchg
adc
lret
mov
and
inc
subl
cmpsb
into
xchg
into
lea
aad
push
xchg
ret
loop
mov
inc
jge
mov
or
xor
mov
fwait
xchg
xchg
inc
adc
sbb
pop
push
dec
mov
jge
cmp
stos
pop
mov
and
loope
sub
sahf
or
rcr
int
mov
frstor
xchg
loope
jb
sub
mov
mov
dec
pop
push
inc
call
fcoml
inc
xchg
pushf
or
and
out
mov
es
pop
or
loopne
cltd
scas
outsb
xor
out
cmpsl
adc
inc
xchg
push
in
sahf
ret
adc
incb
jmp
dec
ljmp
xchg
push
jecxz
idivb
cli
cmp
push
pop
cmpsl
mov
jbe
shlb
imul
roll
clc
test
ss
out
lret
jg
pop
xchg
adc
xchg
push
lock
sbb
stc
iret
lods
mov
xadd
xor
xor
fdiv
pop
fucomip
inc
sub
jo
daa
add
dec
data16
add
flds
mov
fst
enter
or
les
call
rorb
lahf
aam
fstl
pushf
sarb
lahf
xor
fneni(8087
dec
pop
xor
scas
jno
push
xchg
es
into
fnsave
inc
xchg
xor
into
test
aam
cmp
lahf
jecxz
ret
mov
cmp
fsubr
or
adc
daa
pop
aas
cmp
imull
das
mov
mov
inc
cmp
inc
stos
sub
mov
mov
ljmp
in
or
aaa
out
dec
pop
mov
inc
mov
lret
stc
imul
loopne
dec
xor
ss
fmuls
dec
dec
push
xchg
mov
sbb
lret
imul
pop
pop
lock
mov
pop
mov
jns
dec
lahf
add
popf
out
pop
iret
ret
std
ljmp
sbb
mov
into
lods
pop
rorl
icebp
sub
dec
push
hlt
fiadds
cmp
nop
jecxz
inc
cmc
lds
lea
cmp
sahf
mov
test
jle
movsl
lahf
ret
dec
faddp
sbb
es
in
jge
mov
ret
daa
mov
pop
stos
pop
fwait
mov
es
mov
cmpsb
and
xor
add
icebp
or
mov
popa
jmp
int3
mov
sbb
xchg
push
mov
or
jnp
mov
and
mov
lods
mov
push
jmp
outsb
test
xor
or
pop
or
and
mov
or
mov
or
cmp
cmp
cs
sarb
in
cli
or
cmc
xchg
inc
or
stos
andb
sarl
add
fcoms
xor
or
shl
rol
lods
jb
dec
cli
scas
loop
ret
mov
mov
test
xor
roll
add
pop
gs
jge
in
or
mov
pop
xor
lcall
popa
imul
sahf
int
call
daa
mov
idivl
arpl
or
inc
jbe
or
dec
sbb
sahf
pop
and
sub
sbb
jg
shl
jns
lods
shll
xchg
loopne
and
jbe
ret
sahf
push
dec
pop
mov
mov
repnz
inc
pop
js
mov
mov
orb
dec
clc
imul
inc
aad
mov
lret
call
popa
add
cmc
add
test
cmp
xor
popf
imul
xchg
mov
inc
mov
and
das
inc
or
lret
in
aad
sub
fnsave
sbb
xor
jno
dec
test
and
movsb
mov
pop
mov
push
mov
xor
sti
sbb
aas
test
push
xor
and
jmp
mov
mov
test
loope
jp
outsb
testl
mov
lds
in
mov
inc
sbb
and
test
scas
cmp
push
jns
or
clc
and
xlat
xchg
rcrl
jbe
mov
into
imul
ud2
mov
push
cmp
popf
repz
jae
test
mov
pop
xor
add
push
dec
cmp
test
mov
fistpl
push
xor
pop
in
lret
les
icebp
ljmp
lret
repnz
or
xor
fs
push
ss
mov
int3
les
push
mov
int
xchg
mov
mov
and
dec
pushf
arpl
dec
pop
lods
sbb
pop
cmp
cmpxchg
mov
dec
xchg
cld
pop
jmp
aad
and
cmp
pop
ret
std
sahf
movsl
fadds
scas
jcxz
inc
aaa
aad
call
jb
and
stc
aas
add
xor
cs
cmp
cltd
ss
xchg
jge
lds
sbb
adc
rclb
ja
pop
faddp
scas
push
ficoms
pop
mov
mov
mov
mov
xchg
call
inc
pop
sub
xchg
push
sti
jle
mov
pcmpgtw
xor
stos
std
sbb
and
dec
dec
dec
mov
push
push
push
fwait
cmpb
dec
mov
xor
and
out
imul
fsubrl
fwait
dec
es
popa
pop
cld
sbb
jne
into
mov
adc
and
mov
mov
or
neg
lds
in
or
cmpb
pop
inc
and
mov
and
lds
mov
adcl
push
ret
es
push
pop
fidivl
ret
data16
mov
push
xchg
popa
adc
adc
imull
cwtl
pop
scas
xor
mov
mov
fs
sbb
mov
push
hlt
inc
adc
pushl
cmp
jle
push
fmuls
mov
lock
mov
rolb
mov
or
adc
scas
sbb
and
movsl
adc
scas
jbe
lret
pop
aas
shr
adc
dec
notb
rolb
sub
inc
jbe
loopne
add
inc
jmp
cmp
pop
nop
push
test
daa
rorw
mov
scas
fcmovb
mov
sbb
shlb
aam
mov
push
pop
add
out
lcall
xor
mov
jle
es
mov
mov
xor
lcall
test
and
xchg
mov
jno
adc
mov
mov
cmpsl
xor
cmp
lods
into
cltd
ret
lds
xor
pop
xchg
cmpsb
inc
adc
add
es
int3
add
mov
rolb
jo
pop
and
mov
pop
xchg
xchg
test
into
cmp
faddp
into
jp
jmp
lods
sbb
add
or
fucomp
or
and
pop
repnz
out
lea
and
xchg
dec
icebp
in
xchg
cmc
cmpsb
dec
push
cmpsl
mul
inc
inc
push
int
or
adc
sbb
shll
mov
dec
insl
aaa
daa
stos
lds
mov
ss
notl
add
jo
sbbl
mov
mov
add
sub
lcall
jmp
pop
inc
ds
lds
fidivs
push
icebp
sub
bound
negl
jbe
xchg
mov
inc
fnstsw
pop
repz
loope
or
jnp
arpl
pop
lret
xor
ror
cltd
dec
inc
sbb
adc
sahf
pushf
sub
adc
dec
dec
cmp
inc
sahf
mov
add
mov
inc
int
inc
insl
iret
sbb
add
mov
jbe
out
in
test
xchg
mov
and
loop
inc
mov
add
ret
lahf
mov
movsl
test
sbbl
mov
adc
shll
decl
xchg
or
into
into
lea
xchg
rcrl
pop
arpl
jbe
and
imul
xchg
pop
push
lcall
rorl
add
mov
push
jnp
xor
hlt
xchg
les
imul
adcl
cli
movsl
adc
in
mov
test
sbb
daa
mov
in
shlb
mov
lods
mov
test
mov
sub
cli
push
adc
xor
cld
shll
jg
xor
ss
add
pusha
clc
push
or
cs
les
cmp
push
adc
dec
rcrl
push
ror
sbb
jne
lea
bound
pop
sarl
jbe
insl
aad
insb
and
xchg
sbb
loope,pn
jge
mov
or
or
adc
and
es
fldcw
ja
imul
dec
push
das
push
mov
or
pop
stos
cmp
test
orl
lods
sbb
and
xor
call
sahf
mov
fistps
xor
push
into
out
cld
fisttps
mov
stos
inc
clc
call
jo
mov
ds
jecxz
mov
pop
jbe
loope
bound
fs
test
les
daa
mov
sub
jns
cmp
outsl
cli
sbb
sub
xor
or
pop
jo
mov
ds
pop
sbb
loope
and
adc
and
aam
dec
and
stos
std
rcll
pop
outsb
xorl
cltd
ffreep
cmpsl
pop
xchg
inc
rolb
sbb
es
sub
cld
and
es
cmp
daa
push
push
push
pushf
aad
sbbl
notl
fadds
jle
into
pop
repnz
ja
cmc
dec
lods
les
mov
fidivl
shll
inc
cmpsb
lea
out
cmc
lock
les
xor
mov
mov
movsb
jno
jns
sub
fstps
cmp
and
or
mov
dec
push
into
add
dec
pop
xchg
jg
mov
mov
push
mov
mov
sbb
adc
xchg
lahf
aam
rol
adc
jno
pop
sbb
add
push
sub
inc
popf
fisubs
addr16
ja
test
stos
cmp
in
aas
sarl
leave
cmp
xchg
adc
pop
add
cmc
movsl
xorb
mov
push
dec
fs
cmpsb
mov
xor
cmp
sub
mov
movsb
gs
or
stc
cmp
mov
mov
jmp
mov
imul
cmpsb
push
popa
cmp
out
jl
sub
mov
je
cmp
test
loope
pop
out
mov
ret
data16
fwait
fwait
scas
cld
gs
dec
add
or
push
sbb
mov
xor
aas
outsb
xchg
addb
imul
ss
test
cmp
outsb
dec
mov
fwait
inc
inc
divl
insl
js
sbbb
je
sbb
das
pop
push
mov
sbb
mov
mov
jmp
lods
imul
pop
popa
xchg
cmp
inc
jmp
add
dec
shll
pop
fidivl
es
mov
in
enter
sub
cltd
pop
mov
cld
outsl
mov
sub
es
push
insb
in
pushf
test
xor
scas
xlat
add
xchg
cmpsl
jg
cmpsl
stos
sbb
pushf
pop
arpl
cmp
mov
or
dec
push
loop
mov
sub
repz
or
inc
mov
scas
gs
xchg
push
sub
mov
jmp
sbb
inc
mov
rol
lds
pop
sub
xchg
imul
test
test
mov
andl
fidivrl
or
jge
add
dec
popa
inc
jl
inc
repnz
and
inc
xorb
in
les
dec
fimuls
gs
mov
push
dec
sahf
pop
add
andb
arpl
pushf
cltd
hlt
sub
or
inc
mov
cmp
mov
rcrb
fcmovb
fldenv
jle
int3
push
cmp
idivb
xor
sub
mov
sub
fs
test
mov
sbb
jns
stc
push
sub
lcall
xor
dec
andb
add
fisubrl
add
pop
les
gs
push
mov
iret
inc
ret
popf
movsb
mov
xchg
arpl
adc
mov
adcl
push
je
outsb
push
bound
mov
iret
push
movsl
rcrb
cmpsb
arpl
fdivs
lods
je
push
mov
pop
inc
pop
stos
daa
mov
fstps
and
mov
mov
cmc
xchg
xchg
bound
jle,pn
xchg
or
add
or
insb
mov
aas
push
xchg
mov
xchg
inc
inc
lods
arpl
pop
sar
sbb
sub
sbb
sub
xchg
pop
cli
outsb
ret
pop
je
shrl
shr
and
lret
add
leave
imul
add
out
push
add
mov
gs
shlb
scas
pop
fstpl
inc
out
cmp
jp
outsb
sub
mov
or
sub
popf
enter
leave
fisubrs
inc
roll
adc
jne
ljmp
xchg
popf
mov
mov
push
fyl2xp1
movsl
push
jg
mov
jne
scas
fistpl
test
jl
mov
add
daa
insl
add
rcll
dec
mov
outsl
pop
push
arpl
mov
cmp
jp
cmp
outsb
je
subl
cmp
in
pop
cltd
jmp
xchg
lret
cmpsl
push
adc
inc
push
test
popa
insl
cmpsl
dec
shll
out
pusha
pusha
jne
sub
aam
ja
sub
cmp
shrl
mov
ds
xor
imul
push
sub
mov
push
test
mov
pop
adc
lret
int
cmpsl
call
jne
sub
and
mov
xlat
leave
pop
mov
adc
inc
cmpb
mov
xor
pop
jbe
dec
popa
cltd
jle
and
inc
mov
xorl
push
sub
pop
fisubrs
je
mov
pop
ljmp
or
or
insb
rolb
xchg
jno
mov
ljmp
lds
popf
ds
ds
dec
inc
jae
arpl
mov
adcb
outsl
outsb
pop
mov
addr16
xor
mov
mov
add
pop
jbe
mov
mov
mov
inc
and
mov
push
punpckhdq
xor
jle
push
ljmp
add
sbb
and
loope
sbb
mov
jne
jg
int
in
loope
loop
pop
call
out
mov
loop
xor
lret
js
bound
or
cmp
call
ficoms
jnp
cltd
add
jns
xchg
dec
inc
mov
or
ja
xchg
inc
jae
or
movsb
mull
fcoml
push
mov
mov
mov
stos
mov
jne
push
or
or
xor
pop
outsb
or
mov
sahf
aaa
mov
ret
mov
xor
addl
rcrl
scas
push
sub
mov
and
pop
xchg
mov
jg
jecxz
mov
mov
popf
dec
cltd
push
cld
pop
je
jle
rorl
mov
pop
sbb
xor
cmpsb
repz
lret
cs
xchg
mov
das
sub
xchg
aas
jl
mov
aas
leave
mov
rcr
addl
pop
scas
sbb
xor
lahf
lods
xor
jne
test
bound
xor
addr16
out
mov
xor
mov
rcrb
push
mov
les
adc
jb
jns
push
sub
mov
shrl
mov
adc
mov
pop
andb
out
pop
mov
push
mov
das
jnp
movsb
dec
test
xchg
repz
dec
stc
ret
mov
cs
daa
js
mov
inc
push
sti
mov
mov
add
inc
jge
es
stos
mov
add
dec
fistpll
ss
lods
lret
pop
dec
shll
jge
adc
xor
pop
clc
pop
jg
mov
movsl
add
fwait
mov
je
movsb
pop
push
adc
push
mov
cmpsb
rcrb
jae
and
cmpsl
aas
imul
fmul
push
out
jne
bound
ljmp
xchg
cmpsl
mov
ja
xchg
xorl
aad
adc
in
mov
out
mov
jno
dec
insl
jb
xor
cli
gs
push
nop
dec
hlt
push
cmp
mov
fistl
mov
js
cmpsl
dec
lds
cmp
arpl
daa
pop
pop
popf
and
mov
mov
rcrb
mov
loope
ljmp
js
adc
ja
aad
mov
sbb
ja
test
daa
lcall
xchg
cld
lret
lahf
stos
add
adc
mov
and
dec
in
lret
mov
adc
popa
jl
das
enter
loopne
popf
and
sbb
pop
jo
mov
nop
mov
push
test
gs
cmpl
pop
popf
pop
push
add
pop
fisttpll
xchg
or
push
or
cmc
cmp
push
xor
cmp
jne
inc
test
or
cmp
insb
cmpsb
add
fsubrs
jp
dec
pop
push
pop
dec
cmp
pop
cltd
adc
insb
push
addb
imul
jp
and
fnsave
push
or
insl
mov
movsbl
ds
mov
cs
inc
decb
cmpsl
les
outsl
ds
dec
mov
loop
mov
pop
pop
out
xchg
mov
mov
sub
fnstcw
jp
lods
jns
cmp
lret
popa
dec
mov
das
push
imul
fdivr
daa
xchg
mov
or
stc
cmpsl
sub
dec
push
lret
mov
mov
adc
mov
mov
scas
sbb
fildll
out
mov
mov
mov
jg
cmp
aas
mov
test
adc
sarl
cmp
pop
arpl
sbb
mov
addr16
test
into
sub
jp
mov
add
mov
xchg
std
mov
sti
int
aaa
push
and
fwait
adcl
sbb
cmpsl
jns
dec
pushf
sub
scas
shr
xor
ret
arpl
rorb
lea
mov
cmpsb
jno
cmovs
fdivl
cs
add
out
dec
pop
xchg
or
imul
and
movsb
ds
or
pop
or
mov
loope
int3
mov
enter
or
add
outsl
pop
sub
cmpsb
mov
mov
dec
jl
xchg
jb
mov
jge
sub
and
push
push
lods
shll
enter
sub
jg
iret
cmp
mov
and
or
rclb
jecxz
cmovs
jmp
lock
pop
jne
addb
inc
fs
or
jmp
push
shrb
dec
fisubl
out
addb
mov
je
mov
cmp
mov
jmp
sub
cmp
iret
mov
push
pushf
mov
dec
fs
cmp
xchg
mov
sub
xor
lcall
pushf
lods
lods
sub
sbb
bound
add
movsb
repnz
cmp
cmp
sub
aaa
aas
push
push
sbbb
cmpsb
cmp
or
cmp
shr
jl
movsl
jns
test
popa
adc
xchg
inc
in
pop
jp
cmpsl
and
and
sti
xchg
mov
movb
or
leave
or
sbb
cmp
add
jecxz
mov
das
push
pusha
aas
lcall
sub
adc
cmp
cli
addr16
sbb
mov
or
inc
xchg
adc
xor
dec
push
das
cmp
out
lea
mov
inc
daa
test
mov
scas
pop
or
addr16
movsb
lcall
inc
nop
adc
xchg
cmpsl
or
bound
aaa
fistl
xchg
jno
lods
push
xor
jae
or
jg
add
inc
cmc
mov
sub
jnp
mov
push
xchg
xchg
jno
lods
push
mov
xor
cmp
adc
mov
xchg
push
dec
sbb
mov
xor
cld
pop
push
inc
aad
ficoms
dec
mov
js
sti
add
daa
mov
mov
dec
cmp
sti
sbb
xor
mov
test
call
sbb
test
vsubps
out
mov
out
mov
pop
sti
xchg
and
enter
pusha
pop
in
push
dec
cmp
jle
xor
test
jle
xchg
jb
sbb
inc
and
lcall
sahf
cmp
push
lahf
jne
mov
daa
mov
sbb
xchg
jo
aaa
lcall
shl
shll
jge
xchg
leave
jns
mov
rol
mov
mov
repnz
jecxz
jle
insl
cmpsl
cmp
sub
rorl
push
mov
mov
int
loope
sarb
pop
clc
out
mov
push
cmp
dec
cmp
xchg
mov
or
lods
add
mov
mov
les
xor
mov
inc
cltd
mov
leave
pop
fdivr
pop
xor
lahf
mov
scas
or
dec
mov
inc
in
push
adc
imul
xorl
jg
sbb
inc
movsl
xchg
xor
add
mov
mov
clc
fnstenv
pop
mov
movsb
ffree
mov
sbb
inc
das
adc
addr16
popa
xchg
pusha
pop
adc
ljmp
and
insb
sbb
push
inc
roll
out
arpl
ja
push
mov
add
das
popf
or
dec
inc
rolb
fdivl
pop
imul
and
sbb
mov
fisttpll
pop
inc
or
mov
test
fists
push
pop
mov
imul
cmpsb
xor
xchg
mov
pop
jae
mov
std
pop
sbb
aaa
jg
jae
sbbb
sarb
out
sbb
jbe
xchg
xlat
sbb
fistpl
iret
cltd
in
jmp
add
xchg
xlat
je,pt
mov
rclb
mov
cmpsb
loope
cmpb
xor
pop
dec
mov
aas
add
jb
fisubl
cmp
mov
xchg
and
mov
xlat
nop
xchg
and
out
mov
and
lcall
cmp
mov
xchg
xor
je
jb
aas
cmpsl
cmp
cmpsb
xchg
jne
jbe
dec
xchg
cmpsl
ss
inc
inc
jle
lret
and
and
xchg
add
push
es
adc
cmp
sub
push
or
mov
in
sbb
adc
aad
pop
cmp
cmpsl
mov
lret
xchg
push
pop
and
mov
jle
mov
and
sub
xlat
pop
sub
ror
dec
mov
int3
inc
sub
inc
dec
iret
je
frstor
mov
je
cltd
xchg
inc
cmc
cwtl
icebp
ss
outsl
sbb
mov
mov
rcr
jmp
push
push
dec
outsb
lcall
pop
pop
sahf
sbb
push
test
movsb
xchg
std
mov
das
pusha
addr16
xchg
jmp
or
sarb
push
xor
andl
dec
ljmp
inc
jb
sti
nop/reserved
fwait
fwait
inc
jl
pop
xchg
xlat
inc
imul
lahf
push
aad
add
pusha
push
insb
push
inc
data16
rcl
test
pop
cmpl
psubsb
or
ja
xchg
pop
pop
hlt
fnstcw
shl
mov
daa
push
or
subl
lds
dec
push
mov
dec
dec
test
rcrb
orb
lcallw
pop
add
sarl
clc
sub
ss
aaa
aaa
and
and
sub
shll
cmpsb
sub
sbb
inc
into
jp
and
aas
dec
flds
dec
inc
inc
push
or
mov
shll
dec
cmpsb
mov
imul
cmp
cmp
pop
xchg
mov
mov
mov
ret
ficomps
cmp
jp
imul
mov
cmpsb
jae
mov
js
mov
ucomiss
cmp
les
or
inc
dec
popl
push
add
rcrl
jns
jge
std
shlb
fcompl
imull
adc
test
or
mov
cmpl
js
test
mov
sub
pop
insl
mov
mov
fadds
pop
addr16
insl
insl
add
cmpsb
stos
dec
sbbb
add
filds
inc
inc
out
mov
sbb
sahf
std
xlat
dec
addl
lret
dec
push
stos
mov
mov
xchg
and
inc
dec
fisttpl
jnp
lea
cmp
cmpsb
ja
xchg
mov
andb
pop
rolb
cmp
lahf
bound
lahf
push
cwtl
lea
fcom
xchg
sbb
in
dec
push
pusha
aaa
cmp
ret
in
enter
xlat
js
outsl
into
fcomp
lods
push
iret
mov
iret
mov
xchg
incl
jl
pop
jns
arpl
fsubp
out
xor
inc
adc
xchg
push
scas
addl
cmpsb
jae
xorb
xor
xchg
jbe
cmp
cmpsl
lds
add
mov
dec
rol
test
jb
fnstcw
add
int3
mov
lea
in
cmp
lret
jle
call
push
test
cmp
cmp
pop
pop
pop
pusha
cmp
cltd
adc
or
xchg
loopne
push
dec
or
xchg
and
in
jge
adc
mov
out
sub
mov
dec
cmpsb
fisubrs
and
int3
outsb
arpl
cmp
push
inc
es
shlb
outsl
arpl
sbb
sarl
loopne
xchg
xchg
lods
add
repnz
je
push
js
pop
mul
mov
clc
and
shll
movl
fisubl
fdiv
dec
jo
addb
add
fisttpll
pop
cmpsl
incl
sub
push
pop
repnz
sbb
mov
insb
movb
in
xchg
int
sar
pusha
in
jno
inc
rorl
mov
cmp
dec
lret
clc
push
into
subl
in
sarl
sahf
adc
cmp
movsl
add
xchg
jmp
xor
out
lea
incb
sbb
mov
adc
jbe
addr16
mulps
and
sbb
nop
jno
cmc
test
roll
jbe
jns
hlt
inc
cmp
and
cmc
shlb
js
jne
mov
icebp
ljmp
in
mov
loope
cmp
sbb
or
cmp
lret
imul
test
and
fs
mov
nop
in
insb
leave
cmp
cwtl
inc
and
mov
sbb
test
jnp
mov
movsl
movsb
push
and
std
jo
lret
loop
ret
js
jg
ljmp
out
ja
inc
sbb
out
or
test
stos
and
lods
aad
test
lods
inc
andl
mov
or
les
test
pop
in
out
lods
cmc
inc
loope
test
jmp
incl
sbb
mov
es
xor
loop
imul
sub
and
fs
mov
retw
into
xchg
mov
mov
in
jle
outsb
jne
es
dec
ds
cs
push
out
pop
dec
sub
cmpb
push
stos
ror
xor
andl
pop
cmp
subl
sbb
pop
test
call
int
into
insl
inc
inc
and
in
pusha
xor
test
mov
lea
lds
and
cmpsb
mov
lret
ds
pop
push
mov
in
lcall
cmpsb
data16
int
repnz
push
xor
cmp
arpl
xchg
repz
push
dec
push
jo
movsl
outsb
ja
mov
inc
fs
popf
fldcw
jno
stos
ds
cltd
enter
mov
lret
dec
xchg
lods
inc
int
mov
jne
inc
pusha
cmp
ds
cld
sub
imul
fisubs
fcomp
mov
push
adc
in
pop
stc
xchg
sbb
iret
scas
rorl
rcrl
in
pop
int3
lods
cmp
jns
inc
pop
movsl
sarl
pop
ljmp
jb
inc
xor
sbb
xchg
arpl
inc
js
fcmovne
mov
sub
bound
jns
mov
cltd
inc
rcrl
test
xchg
mov
hlt
das
mov
stos
neg
and
mov
cmc
sub
adc
in
dec
xor
outsl
test
or
cmc
mov
in
cmpb
or
add
push
lock
lcall
jno
mov
stos
mov
and
addr16
iret
xchg
call
push
int
adc
lcall
hlt
test
jnp
xchg
lea
into
sbb
pop
int3
sub
lahf
mov
mov
dec
cwtl
ja
add
sub
rcrb
jo
je
into
inc
push
mov
arpl
push
fldl
sahf
or
adc
punpckhwd
sub
int3
add
mov
mov
das
inc
lods
cltd
jmp
cmp
and
outsb
jle
push
loope
pop
mov
mov
int3
and
outsl
pop
aaa
xor
jp
add
insl
mov
cmp
insl
mov
std
xchg
addr16
xchg
rcll
pop
cltd
test
ss
out
cltd
cmp
fmull
mov
pop
insb
movsb
fmuls
aas
cmpsb
jle,pt
mov
and
mov
movhps
cs
xor
cs
insl
fisubrl
cmpsl
scas
adc
and
cmp
notw
xor
cli
add
in
pop
fmull
leave
push
sti
fwait
sbb
pop
adc
dec
aad
sub
test
lods
pop
adc
cs
jo
jecxz
or
addr16
mov
xchg
mov
in
enter
cmp
mov
mov
pop
fistpll
pop
lcall
jne
popf
cmc
sbb
fidivrs
push
dec
imul
adc
sub
xchg
insb
stc
cmc
push
enter
dec
and
outsl
lret
les
mov
insl
cmp
mov
sub
cltd
into
stos
lock
ds
sbb
data16
and
mov
xchg
xor
in
xor
lds
imul
in
jnp
rep
cwtl
sbb
cld
idiv
fidivs
inc
int
lods
inc
xor
mov
imul
addl
pop
push
lock
jbe
jmp
in
sub
push
movl
push
je
mov
out
push
shr
and
push
sub
arpl
cmp
stos
mov
mov
sets
mov
push
rcll
es
mov
pushf
pop
sbbl
data16
std
jo
jnp
and
iret
mov
lds
orl
xor
test
jne
mov
int3
pop
sbb
add
add
or
lock
jns
sbb
jle
xor
mov
ljmp
rcl
andb
and
push
jmp
sarb
pop
int3
into
push
dec
add
pop
ja
int
jge
push
leave
add
pop
mov
mov
pop
test
gs
xchg
pop
dec
mov
pop
mov
jp
mov
adc
dec
popf
xor
inc
push
mov
fisttpll
ds
rcl
rcl
scas
loopne
mov
xor
pop
iret
xchg
or
dec
jnp
jl
cmp
imul
pusha
jne
mov
inc
dec
movsl
scas
lahf
jns
dec
mov
out
inc
mov
mov
inc
mov
mov
popf
pop
mov
std
inc
mov
sub
mov
add
insb
lcall
xchg
cmpsb
movsl
pop
push
lods
dec
rorl
fwait
add
iret
lds
push
xchg
jbe
testb
push
rolb
out
cmpsl
sub
jecxz
mov
leave
or
fsub
sub
mov
mov
mov
orb
aaa
xchg
xor
adc
mov
mov
mov
imul
pop
ret
push
pop
push
adc
sub
inc
mov
jp
roll
xchg
ret
stos
mov
pop
mov
test
push
mov
movsl
lcall
and
cmp
push
rorl
mov
test
shll
lock
xchg
out
imul
adc
lock
sti
push
fidivs
test
dec
rolb
mov
sti
leave
rclb
pushf
and
fmull
adc
mov
adc
rolb
loopne
scas
lahf
mov
mov
aam
lret
dec
dec
andl
dec
bound
addr16
dec
mulb
pushf
pusha
cs
push
and
lock
sbb
cmp
mov
popf
ljmp
fistpl
loope
fistpll
jb
fwait
cmp
scas
out
arpl
and
cwtl
mov
test
ud2
dec
adc
js
mov
jp
aam
jnp
imul
notb
imul
adcb
lods
testb
sbb
pop
fstl
push
pop
fimuls
subl
pop
testb
cmp
adc
push
popl
fsubs
jo
fwait
js
cs
xchg
xor
repnz
fcmovnb
push
loop
fdivl
adc
dec
and
inc
xchg
sbb
inc
pop
cmp
dec
adc
push
or
sub
inc
xchg
push
lret
pusha
push
int3
xor
test
dec
inc
push
and
es
fbld
adc
into
adc
mov
adc
in
xchg
pop
movsb
mov
inc
lret
xchg
negl
movsb
dec
int
pop
mov
or
push
ljmp
xchg
jmp
jo
sub
push
movsl
push
dec
lahf
pop
cmp
iret
leave
dec
xchg
les
xchg
imul
sahf
in
addl
pop
test
push
fadds
cmc
xchg
cmpsb
es
arpl
pop
clc
push
out
mov
or
xchg
mov
pushf
into
cmpsb
fdivrs
jo
lret
bound
bound
movsl
xchg
insl
dec
into
sub
pusha
mov
std
mov
sahf
leave
mov
mov
pop
rorb
out
mov
sbb
xchg
xchg
daa
add
into
dec
seto
push
mov
jg
rcl
repz
push
gs
push
sbb
mov
movsb
and
cmp
shlb
nop
xor
pop
mov
call
in
mov
mov
push
dec
push
scas
adc
adc
test
aaa
stos
adc
pusha
lea
sub
fs
xorb
test
cmovno
jbe
imul
lea
and
sub
dec
popa
fistpll
loopne
popf
sbb
mov
fcmove
xlat
push
dec
cmpsb
sbb
pop
outsl
cmp
jge
jmp
xor
xchg
aaa
lahf
pop
in
test
mov
testb
dec
fcmove
lea
shlb
movsb
testl
popf
cwtl
ljmp
mov
shll
iret
sti
mov
repz
nop
xor
les
icebp
push
xor
push
dec
push
cmp
repnz
lock
rol
js
jmp
jbe
popa
push
dec
int
imul
ljmp
in
and
mov
push
outsb
sbb
xchg
mov
aas
jmp
lods
adc
mov
cmpsl
mov
loope
inc
cltd
pop
idivb
xor
xor
jmp
pop
inc
in
ds
js
mov
add
mov
andl
xchg
fs
jno
mov
mov
push
xchg
or
into
xchg
xor
xlat
shr
loopne
loopne
push
stos
mov
jmp
stos
mov
cmp
pop
mov
mov
sub
push
outsb
jbe
push
dec
iret
mov
push
and
mov
push
mov
dec
xchg
outsl
mov
push
test
popf
mov
ret
dec
push
outsl
mov
into
dec
add
add
and
cmp
dec
je
fucomip
push
gs
jle
xchg
jecxz,pt
mov
inc
fwait
lahf
or
std
movsl
pop
xchg
mov
xchg
add
mov
jb
ret
push
das
pop
rcrl
dec
lcall
addr16
data16
fstl
mov
das
cs
add
push
imul
jnp
mov
flds
jmp
popa
add
test
pminsw
mov
cwtl
test
or
ja
dec
or
test
flds
pop
arpl
nop
inc
cmp
sbbb
mov
fs
loopne
lcall
ds
fimull
aam
sbb
pop
adc
sbb
add
addr16
sti
shrl
popa
jl
pop
jp
sub
adc
dec
in
jl
loopne
dec
stos
cmp
leave
or
insb
mov
pusha
inc
adc
cltd
fistpll
xlat
repnz
jnp
add
dec
add
dec
push
jle
push
popf
xor
push
push
sbb
sbb
sub
xor
jns
sub
push
lods
aas
add
xlat
insl
or
cli
dec
ja
adc
mov
xor
loopne
rcrl
and
push
filds
cmp
out
jno
xor
in
sahf
test
pop
std
jnp
fsubrl
sub
arpl
repz
in
dec
inc
shl
or
or
pop
insl
les
and
pushf
mov
pop
jle
iret
sub
jp
cli
jp
loope
jl
and
xchg
out
and
mov
mov
orb
stos
adc
push
add
addb
and
mov
push
pop
fcoml
je
jecxz
mov
mov
sti
lods
in
push
dec
cmpsl
movsl
lcall
or
mov
jle
pop
xorb
fisttps
xchg
push
lods
jne
movsb
das
push
xchg
pop
sbb
push
adc
mov
cltd
adc
sbb
lret
daa
mov
dec
iret
mov
mov
es
testb
gs
enter
pop
out
or
mov
mul
jmp
xchg
jns
stc
mov
scas
test
outsl
shl
xchg
push
mov
mov
scas
dec
fstpl
cltd
inc
push
xlat
ret
test
std
push
pop
inc
and
pusha
cs
test
cmp
dec
rcrb
mov
cmp
je
push
popf
enter
test
enter
mov
dec
push
lahf
ja
xchg
xorb
xchg
jae
jb
cmp
insb
cld
test
xor
push
test
shlb
jnp
push
sbb
insb
jae
loop
addr16
dec
sti
and
lds
pop
xchg
aaa
mov
push
sub
imul
jb
cmp
push
js
mov
idivl
xorb
scas
in
out
gs
shll
repnz
test
mov
cmp
out
int
arpl
js
enter
or
fnstsw
sub
mov
inc
jnp
or
sarl
sub
inc
outsl
add
mov
js
dec
mov
das
lds
sahf
xchg
int
jge
mov
inc
loop
movsb
popf
add
mov
outsb
xchg
jne
stc
sarb
and
adc
fsubs
daa
xor
mov
stos
call
push
xor
xchg
movsl
ja
leave
nop
in
into
xchg
adc
in
pop
mov
and
push
repz
jbe
xchg
cmp
ficompl
cwtl
cmp
mov
push
loop
jnp
cmpsl
out
push
jmp
pop
jb
add
push
aaa
lahf
inc
iret
lea
jecxz
sbb
pinsrw
test
sbb
insb
jecxz
lcall
jno
xor
jp
sub
mov
cli
lcall
sahf
inc
xor
aad
cltd
cld
sbb
mov
xor
pop
mov
out
incb
xor
fwait
mov
xchg
mov
pusha
push
and
dec
xchg
fcmovu
mov
sub
stos
adc
jge
or
pop
mov
gs
call
pop
movsb
outsb
insb
xchg
cmpsb
and
mov
outsl
dec
jo
and
xchg
call
neg
sbb
hlt
push
dec
cs
sti
pop
testb
jbe
mov
lock
ja
cmp
sbb
popa
jo
mov
xor
push
push
cmp
in
mov
fsubs
lock
mov
and
fdivp
imul
cmp
xchg
push
ret
add
and
stos
loopne
and
arpl
cmpsl
mov
inc
out
test
sub
mov
test
test
mov
das
cmp
push
std
or
mov
notb
or
mov
inc
fisubl
jle
mov
jne
inc
xchg
dec
div
mov
pop
mov
ret
xchg
jb
gs
sbb
test
adcl
lahf
xor
div
mov
iret
xor
cmp
mov
add
xor
clc
shlb
sub
fisttps
sti
mov
xor
inc
dec
mov
lds
jmp
mov
iret
mov
leave
cmp
iret
inc
xor
andl
cmpsb
jl
and
mov
jp
and
cmp
pop
push
jae
dec
fbld
cmp
adc
int
jb
iret
push
in
daa
lea
mov
cmp
dec
and
and
enter
rcr
pop
xor
cli
pop
out
inc
sub
insl
hlt
stos
int3
and
mov
dec
bound
push
stc
in
dec
mov
jb
repz
leave
js
cmpsl
lods
mov
xchg
xlat
insl
jbe
shll
daa
cmc
cmp
mov
mov
outsl
in
popa
rep
jo
xor
push
ret
test
call
inc
and
sub
in
mov
and
movsl
sub
aam
stos
pop
imul
setb
add
push
cmpsb
movsl
inc
adc
cli
or
xor
push
adc
gs
jl
icebp
mov
stos
in
jg
cld
mov
lret
xor
in
inc
mov
sbb
sbb
xchg
mull
dec
fsubl
xchg
cld
push
xor
xchg
push
popf
xchg
subb
rorl
sub
pop
mov
and
xchg
les
add
movsb
andl
or
movsb
sbb
popf
lock
fnsave
push
rorl
mov
movsb
imul
xchg
int3
and
ret
inc
mov
or
je
push
mov
sarb
mov
pop
sti
push
icebp
scas
push
mov
scas
test
arpl
jge
push
arpl
mov
xchg
or
mov
outsl
xor
insl
orl
lret
cmpsl
jge
mov
xchg
jl
add
ss
jne
push
fsubrs
in
movsl
cmp
scas
leave
mov
out
dec
add
cwtl
mov
mov
dec
int3
dec
xor
push
cltd
lock
imul
xchg
or
pop
jge
cmp
xchg
jmp
imul
push
loop
in
and
push
push
lea
jb
fs
jp
push
lea
stos
out
cmp
hlt
mov
ljmp
jo
jnp
add
and
jg
lahf
dec
mov
jp
in
jmp
std
cs
int3
test
das
jae
fbstp
mov
sub
cltd
xchg
cmpsl
in
insl
andb
mov
mull
jecxz
sbb
rcl
hlt
cmp
jecxz
out
and
inc
arpl
dec
pop
rorl
jbe
sbb
lahf
sub
xlat
lods
lods
lcall
jmp
push
sbb
insl
ret
mov
stc
repz
test
fistl
mov
out
xchg
fsts
mov
and
add
mov
mov
cmp
mov
std
mov
pop
fisubrl
push
fisubrl
gs
cmp
push
stos
pop
test
in
insb
jl
pushf
dec
add
popf
fucom
mov
loop
out
and
xor
mov
ljmp
popf
inc
cmc
mov
jbe
pushf
pop
iret
les
popf
jno
cmpsl
sbb
sti
rcrb
cltd
fnstcw
shl
jge
mov
sub
divb
fsubr
mov
divl
mov
iret
je
adc
fcomps
loopne
cmp
sub
pop
mov
push
imul
test
ljmp
mov
int3
adc
loope
cmc
call
inc
insl
gs
pop
insb
js
inc
in
dec
cmc
cmp
rcrl
sub
aam
or
mov
std
popa
sub
add
lret
in
pop
fcmovnb
stos
test
push
lock
adc
mov
shll
jbe
jg
dec
push
daa
shrb
in
fwait
push
es
sub
xchg
push
sbb
fldt
imull
xorb
mov
aam
ja
xchg
jb
es
in
stos
jmp
jnp
dec
jmp
je
xor
cmp
ljmp
jno
imul
push
mov
sbb
loope
cmp
xor
lods
pop
jb
jb
jmp
scas
fstl
push
popl
fnsave
lock
popf
enter
test
cmp
cmp
js
sbb
or
or
loop
loopne
adc
mov
stos
lds
cmp
pop
adc
ficomps
jne
shll
pop
mov
and
mov
jmp
cwtl
cli
sti
leave
dec
bound
mov
sbb
mov
add
movsl
inc
outsb
mov
repz
scas
andl
push
data16
add
imul
ret
pop
cwtl
shr
fdiv
xlat
ror
push
pop
inc
test
scas
outsl
pop
loopne
or
shlb
cmp
lea
nop
pop
lcall
orb
cmpb
out
xchg
out
scas
jbe
mov
repnz
sbb
dec
pop
dec
imul
ret
xchg
jp
dec
lods
push
pop
or
jnp
popf
xor
jae
mov
dec
cs
loop
out
out
mov
xor
out
and
mov
andb
repnz
dec
pop
and
inc
mov
jle
push
sub
cmc
push
pop
loope
fwait
mov
scas
xlat
or
daa
insb
sahf
dec
inc
jns
test
jle
pop
shrl
mov
in
xchg
rcll
inc
jbe
outsb
out
pop
mov
lods
popa
subl
fcmovnbe
imul
lret
mov
das
mov
push
pop
std
mov
cmp
test
and
pusha
testb
cmc
and
cmp
xor
xchg
stos
jmp
or
mov
mov
lods
scas
mov
shl
inc
inc
mov
icebp
nop
adc
push
rcpps
fists
gs
push
add
test
push
ret
out
test
hlt
xchg
cmp
inc
stos
or
les
loope
jg
cmpps
sbb
push
lret
cmp
les
lds
ja
xchg
cmp
xchg
scas
out
cmp
xchg
rolb
mov
lret
iret
adc
ret
iret
mov
lret
insb
lods
pop
and
inc
insl
pop
jnp
subb
repz
adc
mov
iret
stos
fidivrl
icebp
mov
ret
aad
popa
dec
ffree
mov
daa
mov
lea
sub
int3
xor
aad
mov
mov
or
jbe
out
push
mov
loopne
push
divb
test
sub
mov
mov
aam
xor
dec
mov
jb
push
dec
loope
mov
adc
mov
cmp
icebp
repz
mov
adc
or
push
dec
push
fsubr
push
ret
dec
in
mov
cmp
sub
std
cmp
mov
xor
cmp
aaa
lea
add
out
mov
mov
sbb
fnstenv
arpl
js
loop
push
insl
outsb
pushf
or
cmpsl
fimuls
xchg
insl
jnp
cmp
inc
mov
lds
xchg
pushf
sub
int3
pushf
fldl
sti
sbb
xorl
mov
or
inc
sbb
lcall
mov
mov
js
mov
addl
popf
dec
scas
and
pop
iret
add
cmc
cmp
and
sbb
or
mov
cmp
cltd
rcll
mov
dec
mov
addr16
scas
push
arpl
lea
pop
pop
negl
push
pop
cwtl
jmp
insb
lcall
fs
sbb
jge
js
jns
loope
jp
cmp
jae
cmp
movsl
out
mov
arpl
in
cmpsb
je
mov
aam
jge
repnz
dec
repnz
jo
xor
jns
call
add
rclb
xchg
mov
arpl
pop
cmp
mov
inc
lock
pop
push
into
pop
push
into
push
add
jecxz
sbb
imul
dec
in
test
imul
movsl
cwtl
inc
fisttps
mov
push
idivb
and
ljmp
mov
lret
aaa
fstps
inc
iret
arpl
fmul
mov
daa
or
xchg
dec
cwtl
xor
mov
cmpsb
lods
insl
enter
ss
imul
push
pop
or
cmc
mov
jne
loop
aas
fimuls
mov
mov
rol
and
push
cmp
andb
xor
jp
movsl
arpl
jno
addl
jo
sbb
jo
sbb
ret
rcr
sub
push
call
sub
inc
push
popa
dec
mov
lea
and
push
mov
cmp
jge
mov
adc
jg
nop
jno
bound
cmp
mov
je
movlps
jne
inc
and
jae
mov
cmp
mov
mov
test
test
sub
mov
cmp
loop
fldcw
in
cmpsb
mov
in
clc
orb
xchg
xchg
xchg
ffreep
mov
ret
xor
jecxz
xchg
jle
xchg
pushf
je
lds
xor
cmp
shll
add
sbb
add
iret
sbb
in
add
iret
and
mov
mov
lret
jl
or
cmp
lahf
sub
xor
mov
fs
or
or
jle
inc
xor
inc
push
push
cmp
xchg
pushf
mov
cmp
decb
jge
jl
mov
daa
mov
inc
xchg
je
mov
push
insl
push
inc
shrb
pop
jno
outsb
fsubl
xor
int
inc
addb
les
sub
iret
jne
mov
popa
popf
mov
push
stos
test
adc
mov
mov
jmp
push
adc
mov
sbb
out
inc
jle
sbb
lds
movsl
cmp
jg
xchg
out
mov
rcrb
mov
inc
and
icebp
nop
fbld
xchg
xor
jae
iret
dec
sub
ds
push
xor
dec
mov
in
test
test
mov
je
pop
sbb
add
fisubl
repnz
ljmp
pop
jo
jb
jl
pop
in
mov
sbb
rorl
fcmovne
mov
jmp
adc
mov
jne
rcl
jns
mov
adc
xchg
sbb
xchg
lea
sub
movsl
add
and
testl
xor
cmp
xlat
pop
es
int
mov
aam
mov
fs
ds
mov
fs
call
adc
sbb
stos
xchg
cld
inc
and
rorl
sbb
dec
into
jnp
cli
cmp
pop
les
dec
loopne
or
xchg
fs
mov
les
push
pop
xor
jne,pt
out
rcr
scas
jg
jg
xchg
das
fwait
lahf
cmp
gs
nop
jp
xchg
jae
dec
pop
addl
shr
pop
pop
inc
aam
push
push
aas
es
mov
sub
and
pop
insb
daa
mov
inc
repnz
and
stos
push
dec
out
cmp
outsb
push
lds
sbb
test
dec
scas
gs
xor
roll
sbb
or
or
bound
inc
lds
lds
imul
rcll
rcrl
push
imul
pop
xchg
mov
loope
insl
movsb
out
dec
xlat
mov
or
mov
out
fnstenv
push
stc
dec
int3
sub
xorb
jae
addr16
outsl
cmp
jo
insb
mov
fidivl
int
sti
mov
ret
outsl
pop
jmp
sbb
push
gs
xor
test
fsubs
mov
or
arpl
popa
movsb
outsl
aam
ret
push
in
pop
dec
sahf
jmp
xorb
xchg
outsb
dec
iret
aam
testl
in
jbe
mov
pop
pusha
cli
ljmp
pop
cvtps2pd
sbb
xchg
cwtl
push
mov
andl
enter
cmp
dec
into
xor
int3
jae
pop
cmpsl
push
sub
sarb
lds
and
lods
push
lret
sbb
inc
xchg
repz
testb
sbb
cld
pop
mov
or
out
fdivrs
xchg
test
stos
push
mov
int
iret
leave
movsb
scas
sub
shlb
add
lods
out
int3
subl
outsb
mov
and
jle
repnz
filds
data16
cltd
subb
cmpsb
int3
mov
push
xor
shll
popf
xchg
data16
mov
sub
push
movsl
cmc
imul
in
aaa
cmc
divb
jl
stos
mov
jnp
adc
fwait
les
cld
stos
inc
mov
xchg
xchg
add
cmp
push
mov
cmp
push
cld
adc
sbb
mov
push
xchg
pop
in
into
ret
stos
in
mov
cmpsl
pop
cmpsb
mov
cs
jnp
jg
cmpsl
fisubrl
sub
aaa
sub
push
daa
ror
mov
idivb
xchg
insl
cmpsl
stc
jl
xor
andl
pop
jns
add
or
mov
dec
xlat
xchg
pop
aas
mov
lock
fldln2
test
dec
divb
xchg
enter
mov
iret
mov
loope
pop
pushl
stos
lods
test
add
pusha
mov
shlb
cmp
sbb
imul
adc
shrl
mov
sti
pop
cmpsb
jmp
mov
pop
ds
and
cmpsb
push
inc
jae
cmp
mov
adc
pop
fadd
stos
pushf
sbb
mov
cld
inc
cmovs
test
ret
sbb
rcrb
fs
adc
pop
and
dec
fdiv
cmp
iret
ret
aas
or
mov
push
mov
lret
jl
pop
inc
jl
pop
iret
sub
call
mov
cmp
repz
addr16
inc
into
push
jmp
add
out
mov
gs
push
les
inc
stos
pop
insb
loop
adc
iret
mov
dec
mov
and
data16
ljmp
jl
or
xchg
sub
hlt
push
imulb
subl
fstpt
testl
mov
inc
dec
popa
pop
loopne
sub
mulb
and
or
leave
stos
sub
int3
mov
cli
push
out
cwtl
jo
mov
arpl
enter
pop
popf
out
int
addl
in
into
xchg
xchg
fdivrl
sub
icebp
jae
ljmp
cmp
pop
lds
mov
mov
pop
pop
out
iret
hlt
nop
adcb
mov
dec
icebp
cmpsl
jg
movsb
popa
mov
dec
pop
cmpsl
pushf
sub
push
cmc
push
test
ds
scas
or
loope
or
out
int3
and
jno
jl
jg
pop
lods
cmp
pushf
stc
fidivs
loop
movsb
xchg
outsl
scas
dec
sbb
adc
rcr
push
mov
std
inc
mov
lahf
jecxz
xchg
es
and
push
pop
cmp
add
mov
sbb
scas
fisttps
push
sti
shrl
pushf
popf
cmp
in
or
lcall
les
int3
in
mov
pusha
mov
mov
xor
mov
pop
sub
sbb
sbb
mov
push
sub
icebp
outsb
inc
sbb
sub
xchg
add
push
into
jle
outsl
xchg
scas
xor
in
xor
mov
scas
mov
pop
out
push
aas
adc
add
sbb
or
pop
dec
bound
mov
add
xor
jns
rorb
testl
xor
add
dec
rorl
daa
aad
sahf
cmp
rolb
repnz
ret
sub
iret
xchg
lret
xchg
xor
jg
pop
push
insb
shl
inc
add
pop
lds
inc
sub
es
aam
loope
mov
cmpsb
aas
fcmovnu
cmp
out
faddl
daa
cs
xchg
fs
and
inc
jp
pop
dec
mov
pop
mov
add
mov
lock
and
push
stos
aad
cltd
orb
roll
pushf
test
lea
mov
shr
icebp
xchg
adc
sub
xor
stos
les
call
scas
xlat
and
stc
adc
test
negl
insb
add
mov
cmpsb
jp
outsl
xor
sub
imul
lcall
pop
jmp
data16
mov
das
lahf
jno
lods
dec
lcall
daa
int3
int
int3
rcrl
in
inc
xchg
and
dec
or
xlat
fs
aaa
cwtl
bswap
popa
mov
cmpb
adc
bound
dec
mov
shll
cmp
lret
xchg
xchg
push
fisttpl
inc
xor
or
or
and
test
je
dec
mov
jns
std
stos
loop,pt
push
adcb
insl
jb
mov
int
pushf
jg
dec
sti
test
xlat
addr16
mov
push
xchg
xchg
cltd
movsl
pop
les
push
pop
lods
inc
mov
and
je
lret
pop
out
arpl
mov
imul
xor
xor
das
and
rcrb
out
jmp
enter
sbb
xor
mov
xchg
addr16
xchg
je
mov
in
call
pop
outsb
mov
cmp
fidivl
loope
icebp
mov
arpl
daa
mov
mov
sub
dec
int
js
imul
inc
rorb
pop
fisubrs
je
int
mov
dec
cmpb
rorb
cmp
jge
cmp
mov
imul
cmp
andl
int3
mov
sbb
sub
shlb
mov
dec
adc
push
mov
test
js
and
js
outsl
out
sar
aas
mov
push
mov
insb
cli
leave
pusha
iret
xlat
jg
jle
sbb
sub
pop
fnstenv
push
js
cmp
sti
sub
ret
das
mov
popf
push
lea
add
dec
cmp
pop
mov
aam
mov
mov
jo
test
xor
cmp
mov
xchg
jbe
hlt
test
aam
out
xchg
jg
inc
bnd
outsb
jno
push
dec
inc
and
jecxz
insb
xchg
sbb
adc
out
ja
mov
jns
dec
cmp
pushf
mov
inc
fnstenv
and
push
stc
shrb
psraw
xchg
rclb
popa
lds
cwtl
adc
add
dec
stos
test
xchg
push
sbb
pop
stos
or
fcompl
sbbl
inc
dec
xor
sbb
add
xor
cli
push
lea
cli
lahf
jle
jnp
lret
xchg
xor
test
xchg
xorl
mov
jle
mov
arpl
insl
mov
insl
testl
xor
ficompl
stc
mov
lods
pop
push
inc
mov
or
xchg
sbb
repz
push
pushf
setns
imul
and
push
and
mov
ss
imul
popa
inc
rolb
pop
sti
dec
mov
pop
dec
mov
aas
cmp
or
pushf
jmp
mov
in
popl
jl
fstp
insb
popf
push
gs
add
adc
or
rclb
imul
jae
lcall
test
xchg
mov
xor
lahf
jmp
mov
jecxz
stos
sub
fmull
mov
pusha
ja
adc
cld
imul
sbbb
or
test
mov
sub
icebp
cmp
mov
incl
mov
cltd
imul
gs
push
in
mov
pushf
cmp
std
sub
test
lds
or
jnp
sub
jne
hlt
movsl
ljmp
push
movsb
mov
push
out
fsts
sub
sarl
imul
fsubrl
rclb
push
test
mov
hlt
ret
sbb
xor
sbb
xor
inc
out
ja
sub
fstps
stos
aaa
mov
cmp
xor
xchg
mov
fmul
sahf
js
pusha
jo
push
sub
mov
imul
js
lods
inc
add
xchg
addr16
push
cmp
out
mov
mov
fnstsw
xor
sub
sub
cmpsb
pop
addr16
ret
enter
out
fwait
aam
sahf
pop
xchg
and
sbb
inc
mov
mov
sbbl
mov
lahf
loope
mov
mov
nop
sbb
xor
or
inc
sahf
das
gs
cmp
cmp
push
push
stos
mov
xorl
icebp
adc
insl
aas
mov
mov
shll
imulb
scas
xor
fisttpll
mov
sbb
int3
mov
and
ret
iret
dec
xlat
add
stos
shlb
cmp
movsl
rcr
jne
fdivrl
scas
aaa
mov
mov
sahf
pop
in
inc
xchg
jp
push
push
insl
fs
or
cmpsb
xchg
mov
ljmp
xor
jno
push
pop
mov
fsubrl
xchg
lret
aaa
pusha
imul
jbe
dec
push
xchg
lcall
scas
lea
rolb
test
es
filds
and
inc
mov
rolb
shlb
cmc
aam
cmp
fistpl
mov
xor
cmp
cmp
mov
fistpl
imull
sbb
pusha
addr16
pop
push
dec
repnz
into
fdivr
pop
lods
test
mov
repnz
xor
xlat
adc
push
xor
mov
cmpsl
test
adc
push
push
adc
mov
les
insb
aad
gs
lret
shl
or
lods
sbb
test
sub
mov
mov
int
cmp
inc
push
push
shl
loop
int
sub
push
mov
pop
cmp
enter
xchg
xchg
xchg
inc
cmp
sahf
dec
imul
inc
out
lcall
pop
sub
xchg
xchg
mov
xchg
sbb
sbb
jmp
shll
ret
jo
js
mov
out
fists
hlt
xor
or
lds
testl
jno
and
ror
push
jge
pop
fdivs
ja
repz
inc
jge
push
cwtl
sub
int3
scas
inc
pushf
or
and
not
outsl
aam
daa
push
cmp
or
jecxz
and
xchg
mov
or
sub
cld
test
push
fistpll
ljmp
mov
fsubl
mov
out
mov
mov
jno
mov
dec
pop
mov
scas
pop
add
cltd
aad
js
int3
iret
pop
cmpsl
rdpmc
mov
shlb
fnstenv
lret
mov
sbb
imul
out
jge
bound
dec
aas
cwtl
cmp
mov
xor
dec
inc
lods
clc
in
mov
fwait
xchg
fucom
lods
repnz
or
rcl
std
xchg
cmp
or
mov
push
leave
addr16
insb
je
pop
in
clc
add
jno
cwtl
dec
cld
mov
aam
or
xor
test
movsl
mov
clc
fld
push
jge
ficoms
sbb
fwait
cwtl
pop
call
or
push
jbe
mov
insb
pop
inc
xor
mov
testl
lret
cmp
lds
std
mov
dec
mov
fnstenv
mov
xor
fidivrs
adc
ficompl
jno
in
xchg
mov
sub
mull
adc
es
stos
or
cld
ret
clc
ja
push
cld
lret
lahf
and
jmp
nop
sbbl
xchg
das
test
sub
push
fwait
outsb
addr16
or
leave
sub
push
sahf
in
pusha
negl
dec
out
lret
and
outsl
sub
rcll
gs
pop
in
repnz
sub
out
sbb
stc
push
cld
mov
push
push
xchg
lds
fwait
mov
mov
dec
out
in
call
fcoml
cli
fs
mov
cli
jg
mov
mov
fmul
mov
faddl
mov
jmp
gs
stc
jb
imull
sti
lods
jge
jmp
jb
loope
cwtl
outsl
sub
ljmp
xor
adcl
in
int3
jmp
out
push
inc
and
xlat
into
mov
fmuls
xchg
fs
stc
and
bnd
push
sbb
imul
out
pop
lods
jmp
mov
cmp
mov
out
mov
mov
cmpps
pop
xchg
dec
in
scas
fwait
mov
int
in
into
fstps
pop
mov
int3
xchg
dec
divb
push
jle
out
mov
dec
ss
mov
jae
test
jle
add
cld
rcrb
sub
and
xchg
idivl
loope
iret
mov
mov
jmp
xor
xchg
gs
cli
scas
mov
fdivl
fdiv
out
insb
testl
jne
pop
outsb
lock
mov
je
addb
push
lcall
cmp
test
aas
adc
adc
aas
adc
orl
pop
iret
pop
lahf
xchg
push
ja
aad
add
or
mov
ret
mov
jne
das
icebp
jae
dec
mov
call
int
test
sbb
std
aas
or
sbb
daa
pop
repnz
ret
xorb
push
popf
add
repnz
shll
push
sub
pop
pop
test
in
addl
push
cmpsb
sub
sbb
lahf
sbb
inc
push
mov
cmpsl
jmp
fidivs
push
movsl
fwait
sahf
testl
in
daa
or
push
jb
dec
mov
mov
addr16
das
stc
cmc
sub
or
popf
mov
loopne
mov
cmpsb
xchg
popa
mov
fsubr
addr16
jns
sbb
stos
adc
es
jne
pop
lds
add
cmp
mov
sub
popa
ds
pop
push
cwtl
jg
jp
cs
iret
aam
xor
repz
push
enter
decl
into
iret
popa
or
scas
insb
xor
in
popa
pusha
adc
push
out
push
lret
sbb
fcmovb
push
mov
sub
shl
lock
ret
int3
scas
push
ffreep
aas
call
lods
adc
sahf
push
add
scas
mul
cmp
mulb
outsl
dec
into
loopne
clc
dec
enter
jl
pop
mov
incl
rcrl
bound
das
and
and
mov
mov
jns
out
repnz
in
push
lods
in
dec
pop
sbb
pushf
and
mov
push
sbb
testb
xchg
fsubs
add
pushf
popf
sbb
daa
inc
inc
rcrl
dec
bound
lret
push
xchg
add
dec
stc
das
dec
cmp
mov
dec
fwait
enter
ja
mov
mov
pop
adc
loop
inc
jae
ret
push
test
ret
mov
test
cmp
into
gs
push
lret
adc
addr16
pop
jmp
xchg
addb
test
into
les
jecxz
aas
clc
mov
jge
stos
xchg
popa
adc
mov
add
out
mov
sub
cmp
sub
adc
or
leave
and
lret
cmp
roll
inc
rorb
popf
cmpb
shlb
aaa
mov
sbb
mov
sub
loop
jbe
add
add
arpl
popa
bound
cmc
leave
pop
jge
rolb
dec
fimull
rcr
adc
jp
insl
dec
fidivrl
mov
cmp
sub
jge
or
adc
sbb
loopne
dec
cmc
mov
repz
data16
insl
sarl
mov
pop
in
subl
lret
lret
xchg
inc
stos
les
into
sbb
scas
and
scas
test
dec
pop
outsl
cmp
inc
repnz
sbb
mov
dec
sbb
pop
xor
or
mov
xor
iret
cmp
pop
jne
or
cltd
in
sahf
dec
orb
adc
cmpsl
jne
je
sbb
fsubrp
mov
pop
mov
mov
jmp
push
mov
mov
das
push
push
movsb
xchg
jecxz
cmpsl
enter
add
repnz
pop
pushf
popf
adc
call
pop
fistps
mov
popa
inc
adc
fwait
subl
int3
test
rorl
popf
xor
push
push
movsb
xlat
or
clc
outsb
pop
test
and
jno
cs
lcall
pusha
adc
stos
rorb
sub
cs
xchg
add
cmp
movsl
imul
and
fmull
movsb
xchg
pop
setns
test
sbbl
popf
mov
xchg
cs
mulb
divl
pusha
pop
loop
push
lcall
pusha
dec
jle
mov
inc
sahf
out
jmp
lea
cltd
pop
bnd
dec
jl
hlt
cmp
mov
in
jl
xor
mov
mov
xchg
test
js
inc
sbb
push
pop
xor
or
fcompl
imul
sbb
mov
or
inc
les
mov
out
cmp
cmp
add
and
dec
lds
add
xchg
rcl
sahf
js
test
movb
mov
int
repz
in
adc
ljmp
inc
out
or
cmpsl
sbb
mov
scas
or
cmc
test
dec
fldt
push
mov
sub
add
sbb
push
dec
int3
mov
xlat
mov
xorl
jne
cmp
loopne
xchg
push
das
repz
xchg
shlb
ror
mov
mov
outsb
dec
or
popa
xchg
push
das
pop
shl
xchg
shlb
ror
pop
ljmp
and
xor
test
xorl
testb
xlat
in
sbb
lds
mov
sarl
mov
gs
int3
rorl
jge
mov
fcoml
jb
in
or
push
sub
inc
scas
lret
jns
inc
bound
push
cmp
mov
mov
aaa
rclb
notl
fsubrs
fidivrl
fwait
xlat
in
and
push
mov
leave
xor
cld
pop
mov
xor
jge
stos
lahf
outsb
test
mov
push
andb
sahf
fnop
xorl
or
fistl
je
push
ret
lods
rorb
jo
inc
xchg
fidivrl
clc
sub
xor
xor
push
mov
in
sahf
mov
cld
in
repz
les
mov
xchg
test
outsl
lahf
dec
push
jae
and
sbb
pop
adc
pop
lea
inc
pop
stos
dec
addl
sarb
fwait
movsl
imul
fndisi(8087
xor
cmp
sbb
pop
cmp
xor
std
cmp
mov
mov
xchg
mov
add
out
add
movsb
mov
push
out
fdivl
aaa
sbb
fwait
push
cmp
cmp
je
sub
xor
sbb
sbb
cmp
pop
xchg
sbb
adc
jae
call
pop
mov
lret
stc
jp
push
jnp
mov
jecxz
xorl
cmpsl
ja
rcl
adc
test
cmpsb
arpl
jo
in
out
cmpsb
xchg
out
sub
xchg
dec
cmp
and
inc
push
sarb
aam
cmpl
aam
inc
lahf
lcall
or
fwait
push
dec
mov
inc
cmp
push
stos
jns
icebp
mov
lods
in
sub
cmp
cmp
push
inc
pop
les
aas
inc
les
clc
jecxz
pushf
testb
push
insl
les
das
sbb
xor
xor
sub
sbb
imull
into
fadds
jae
jmp
sar
testb
out
imul
inc
push
aaa
dec
in
jge
andl
hlt
sti
pop
jno
popl
imul
jnp
and
sbb
sbb
fwait
rorb
jp
fmulp
icebp
mov
popa
mov
mov
push
cmp
outsl
mov
jbe
cwtl
inc
out
shrd
or
sub
mov
out
jae
xchg
push
xlat
insl
je
xor
sub
xchg
call
adc
xchg
push
lods
stos
mov
popf
in
cs
andb
mov
das
loop
aaa
push
in
subb
cltd
mov
test
inc
push
add
push
mov
das
dec
fwait
lret
xchg
jno
pop
call
xchg
inc
lds
push
mov
fbstp
adc
xor
mov
neg
cmp
icebp
xor
flds
xchg
stos
jecxz
push
mov
aad
or
outsb
into
jg
cltd
dec
inc
xor
mov
and
popf
pop
dec
mov
outsl
call
mov
out
xor
and
add
mov
andl
cwtl
test
cmp
jmp
push
out
fadd
pop
xchg
test
addb
cmp
pop
jmp
xchg
test
in
adc
data16
add
mov
or
adc
aas
les
xor
cltd
popf
inc
cmp
in
lock
or
stc
sub
jae
sbb
cmp
add
popa
ret
popf
dec
sbb
test
jp
cmpl
fs
rolb
mov
dec
add
addr16
and
xor
insl
stos
loope
leave
adc
call
jp
aas
and
int3
sbb
ss
fsubrl
mov
cmp
lret
pop
xorb
mov
xchg
sbb
outsb
movaps
jp
imul
gs
xchg
imul
shl
dec
fsubs
sub
bnd
mov
cmp
lock
xchg
mov
dec
ljmp
dec
stc
imul
mov
mov
xor
xor
adc
sub
insl
push
aad
fidivrl
sbb
sub
loopne
scas
shlb
adc
clc
clc
sub
add
mov
mov
sub
xchg
mov
xchg
jb
cmpsb
data16
movsl
xchg
loopne
and
call
adc
sbb
inc
dec
daa
dec
fsubl
cmpsb
js
outsb
jl
rcr
add
aam
int
in
sbb
inc
mov
sti
aas
mov
sbb
add
les
sbb
into
subl
push
inc
ja
ret
mov
lods
ret
jno
and
mov
sub
mov
sbb
xchg
je
xor
mov
repz
sarl
je
mov
jg
fnstcw
repz
mov
push
icebp
mov
and
push
fs
push
xor
xor
pushl
xor
dec
std
push
mov
popf
mov
testb
mov
cmp
cwtl
push
sbb
pop
xor
mov
pop
mov
push
add
data16
pushf
fs
int
xchg
push
fisttps
idiv
push
dec
mov
faddp
icebp
dec
stos
jge
sub
lahf
mov
cli
or
stos
bound
jne
rclb
inc
and
cmpsb
dec
loop
js
mov
mov
inc
pushf
lods
in
cmp
mov
out
mov
mov
mov
loop,pn
std
jmp
xchg
out
rorl
xchg
pop
scas
pop
mov
xchg
pop
mov
fwait
jp
ret
loope
lods
cmp
inc
sbb
es
xchg
mov
jne
clc
mov
dec
nop
push
movsl
pop
dec
es
das
std
stos
and
push
mov
or
mov
jl
lea
fmul
mov
or
jnp
adc
outsl
shr
xlat
ss
pop
jl
into
xchg
mov
hlt
push
out
gs
sub
ja
popa
mull
pop
fsubs
xchg
mov
inc
ret
pushf
or
push
popa
das
push
je
push
movsl
es
and
jbe
popf
sbb
push
and
jns
mov
dec
stos
xchg
nop
je
push
popa
xor
pop
pusha
jnp
dec
dec
daa
dec
out
xor
add
inc
xor
xlat
inc
loopne
rclb
lcall
jl
cmp
and
add
fbstp
pop
mov
sbbb
lods
adcl
gs
or
or
pop
stos
or
xor
and
cmc
pop
fcmovne
int
add
fidivs
dec
daa
cmp
mov
int3
mov
sub
xor
icebp
ror
pop
sti
xlat
mov
jbe
into
jno
out
ds
and
daa
inc
iret
mov
jno
scas
and
jno
lahf
sbb
adcl
jle
sbb
hlt
fstpl
xchg
jb
or
xchg
mov
movb
mov
sub
sbb
mov
xor
pextrw
sub
inc
stc
xor
push
out
dec
ss
arpl
call
shr
push
aad
neg
mov
add
lea
adc
xchg
rorb
ret
or
punpcklbw
mov
and
pop
add
pop
mov
cld
mov
in
insl
inc
mov
cld
popf
mov
push
pop
mov
sbb
push
jns
in
loopne
fs
xor
mov
push
mov
sbb
add
out
nop
fwait
outsl
ss
insl
pop
daa
cmp
push
in
mov
pop
push
or
push
scas
in
xchg
add
psubb
in
sbb
aad
mov
and
cwtl
sub
dec
pop
xor
mov
and
dec
inc
scas
hlt
les
aaa
andl
fidivs
dec
dec
or
push
sahf
hlt
dec
mov
int
sbb
leave
or
arpl
mov
ficoml
mov
ret
aad
call
and
xchg
xchg
push
mov
inc
jo
call
and
loopne
fistpll
lods
mov
pushf
jp
cli
xor
mov
pop
sbbb
lret
push
pop
mov
pusha
arpl
push
jbe
adc
in
mov
insb
push
push
jb
jns
outsl
inc
add
testl
pop
lret
xchg
das
int3
adc
rolb
cmp
xchg
xchg
es
int3
or
push
sbb
les
inc
cmp
lret
call
cmp
push
hlt
les
ds
xchg
data16
int
push
dec
fadds
stos
mov
mov
bound
and
scas
test
scas
cmp
and
lret
rclb
inc
or
cmpsb
add
mov
popf
mov
dec
inc
pop
scas
pop
outsb
jns
cs
or
rorb
mov
ds
repnz
push
cmpsl
scas
cltd
cmp
xchg
test
jp
or
ret
push
add
imul
inc
lahf
lahf
inc
jae
mov
fdivs
mov
jbe
jne
ja
mov
xchg
cld
jp
js
test
dec
push
ja
pop
imul
mov
ss
iret
adc
and
xor
add
mov
fidivrs
sub
das
inc
and
scas
inc
ljmp
xor
mov
lods
cmp
rorl
mov
out
clc
inc
bound
int3
inc
inc
pop
jmp
icebp
xchg
jbe
movsb
cltd
and
add
pop
and
rclb
int3
test
outsl
pushf
imul
faddl
sahf
in
pusha
cmc
pop
fsub
daa
testl
push
add
pop
and
jnp
sub
mov
sub
jle
out
fiadds
sbb
fwait
xchg
cmc
push
xchg
fsubs
scas
or
mulb
outsl
mov
or
ret
inc
inc
adcl
mov
imul
jecxz
sbb
mov
sub
jno
cmp
xor
dec
push
mov
dec
jnp
daa
mov
nop
mov
clc
inc
jbe
add
in
cmpsl
mov
cmc
cltd
dec
and
push
out
sub
jbe
popa
ret
push
mov
cwtl
jmp
test
dec
xchg
cltd
mov
pushf
popf
lret
inc
mov
int
arpl
addl
and
dec
mov
push
jecxz
mov
push
aaa
or
cmc
fwait
out
pop
pop
mov
sbb
dec
inc
sbb
mov
mov
lahf
pop
or
icebp
add
cmp
inc
fistps
and
addl
fisubrs
sahf
xchg
cmp
pop
fstps
dec
fidivrl
jns
xchg
sbb
sub
xchg
sbb
ret
adc
adc
data16
fisubrl
testl
cli
outsb
fiaddl
nop
sub
jb
ja
inc
lock
popf
xorl
dec
inc
leave
movsb
rol
pop
sub
test
or
adc
pushf
xor
aad
sahf
mov
dec
inc
cmp
rorb
dec
push
ja
faddp
addr16
std
in
aaa
cwtl
cmp
mov
pop
sbb
rclb
inc
sbb
cmp
add
test
in
hlt
aas
sbbl
xchg
int3
cld
jae
rcl
out
inc
lods
insl
and
push
in
pushf
mov
out
and
insl
lods
or
and
jg
cmpsl
je
pop
push
lock
loopne
mov
mov
mov
es
jo
test
and
data16
mov
sbb
or
addb
cmove
fs
insl
or
les
pop
or
sub
and
fisubrs
popf
xor
lds
loop
pop
xor
xor
mov
add
jecxz
jl
out
xchg
xchg
je
inc
sahf
inc
stc
addr16
rolb
pop
sbb
push
mov
fsubrl
pusha
imul
cltd
mov
mov
xchg
subb
outsb
mov
out
pushf
add
jo
cmpsl
pushl
hlt
stos
sbb
lock
and
add
cmp
cmpsl
mov
fcomps
fiadds
add
pop
sahf
push
std
inc
sbb
adc
lcall
arpl
jmp
or
repz
lahf
loop
insl
in
xchg
fldt
and
or
sub
out
fmulp
push
out
jle
pop
add
xchg
faddl
pop
fwait
cltd
jo
scas
jle
xchg
mov
cmp
repnz
das
fcoml
and
test
mov
jns
push
sbb
call
cmp
sbb
andb
outsl
mov
bnd
ret
or
nop
push
out
ror
je
push
sub
push
iret
fadd
sbb
sti
ljmp
and
sbbl
roll
insl
out
or
vcvtps2dq
aam
flds
in
sub
je
xor
in
push
mov
mov
mov
xchg
imull
lods
scas
xor
jg
movsl
fisttpl
dec
and
pop
jnp
or
sbbb
imul
out
inc
or
lcall
push
cmp
add
ret
shlb
cwtl
call
lret
sbb
leave
push
in
push
mov
push
outsb
mov
jnp
jp
fmull
sbb
imul
xchg
pop
sbb
inc
dec
gs
sbb
jle
shrb
stc
xchg
int3
sub
mov
mov
dec
into
pop
cmpsb
test
sbb
mov
mov
push
aas
xchg
nop
adc
push
shll
jo
and
push
bound
mov
outsl
cmp
leave
ja
xchg
jb
cmp
push
cmpsb
jno
insl
adc
push
test
pop
add
push
scas
dec
jp
mov
js
loop
xchg
test
cmp
adc
mov
dec
aam
dec
mulb
ret
andb
mull
jmp
adc
sub
jo
jecxz
icebp
loop
in
adc
sub
and
or
cmc
push
inc
jo
adc
jmp
test
ljmp
jae
adc
cwtl
jno
movsl
push
adc
push
jb
sub
fimuls
lahf
push
nop
fdiv
inc
pusha
lods
sahf
mov
stc
cwtl
add
pop
mov
mov
js
test
sub
pop
fnstenv
adc
dec
adc
fwait
inc
xchg
fstpl
aad
les
loopne
fsubs
xor
repnz
std
nop
xchg
inc
clc
or
aam
sbb
les
jmp
or
scas
in
pushl
lds
shll
pop
pop
mov
push
jle
sub
into
out
nop
xchg
ja
pop
dec
nop
push
or
pop
insb
cltd
movsb
mov
sahf
lea
fdivrl
mov
ljmp
leave
mov
cltd
pop
ret
jb
fbstp
outsb
cmp
mov
leave
jge
add
int3
pop
sbb
mov
not
lds
daa
sbb
add
in
out
pop
pop
pop
cmpsl
fisttpll
out
in
cmp
out
sti
outsl
and
inc
push
mov
jmp
cmpps
loopne
ja
int3
fcomp
or
das
ret
out
adc
lock
iret
je
pushf
xor
mov
in
or
dec
lret
xchg
fmulp
int
pop
inc
mov
pmulhuw
mov
out
and
data16
pop
aaa
inc
out
add
dec
repnz
and
loop
jbe
inc
cli
cwtl
test
inc
test
aas
mov
insl
aad
icebp
jne
int3
cmp
inc
stos
mov
dec
fistl
inc
mov
lret
jb
outsl
jo
scas
pusha
push
fildl
rcll
sbb
jnp
mov
mov
adc
mov
dec
mov
push
inc
mov
jge
xor
stos
jg
stos
push
xlat
stos
jae
fsubrl
inc
xchg
imul
mov
aad
sub
add
add
sti
call
cmp
mov
mov
lcall
push
pop
mov
scas
cld
les
xchg
push
adcb
das
popf
push
xor
shr
xor
jl
out
mov
and
push
pop
fisubl
pop
dec
mov
sti
and
xor
xchg
cmpsb
cwtl
std
pop
mov
or
pop
test
mov
jb
enter
pop
rolb
push
adc
scas
jbe
and
adc
xchg
sbb
aad
ljmp
sahf
into
out
hlt
inc
sub
je
insb
lret
jno
sub
push
mov
scas
addl
test
sti
cmp
dec
jmp
xchg
jmp
fs
adc
in
shll
xchg
jnp
dec
scas
lret
jl
dec
xor
jmp
adc
dec
test
enter
sbbl
faddp
mov
mov
sbb
push
xchg
ja
arpl
adc
addl
pusha
mov
jno
xchg
add
pop
jo
sub
add
repnz
dec
push
ss
in
pop
es
inc
xor
popf
test
dec
fwait
cli
and
pushf
inc
dec
push
gs
lea
mov
cwtl
pop
cwtl
adc
cmp
fcomi
mov
sub
in
cmpsl
and
in
add
insl
mov
jg,pn
lahf
hlt
std
sub
loop
mov
insb
je
rcrl
outsb
mov
test
fnsave
pop
pop
ds
push
dec
mov
xchg
jle
je
dec
or
or
ljmp
mov
push
out
dec
test
inc
out
iret
mov
lahf
jbe
into
dec
sub
setns
rcl
mov
add
add
movsl
push
or
dec
jmp
call
pop
call
stos
dec
xchg
pushf
insl
rolb
inc
push
dec
add
or
shll
jge
mov
cs
dec
pop
xchg
enter
sub
or
or
shrb
sub
cli
mov
mov
xchg
mov
mov
jmp
outsl
out
xor
jo
shll
jge
mov
mov
mov
sahf
add
sbb
test
xor
ret
mov
push
popa
arpl
and
imul
cmpl
pop
fsubrs
xchg
pop
sahf
addr16
test
sarb
loopne
mov
mov
sub
pop
aam
dec
xchg
stos
outsl
cld
daa
cmp
sub
imul
adc
notb
jge
cmp
jmp
out
push
movsl
jle
push
jl
testl
in
mov
loopne
or
mov
decb
sub
in
out
fcmovu
cmp
jnp
mov
dec
add
iret
inc
sarb
dec
call
adc
mov
and
lahf
shl
rorl
imul
shrl
daa
jg
push
mov
dec
out
inc
lahf
in
jb
cltd
enter
mov
jbe
icebp
sahf
mov
inc
inc
sbb
hlt
into
inc
jg
jl
mov
fldcw
inc
aad
pop
fists
inc
lods
mov
pop
outsb
lods
mov
push
mov
sbb
in
mov
mov
add
xchg
xor
iret
int
pushf
xchg
fwait
ss
fisttps
pop
loop
int3
mov
push
cmpsl
fdivl
push
jnp
jnp
jl
push
adc
aas
or
subl
or
inc
mov
stos
jo
mov
dec
lods
xchg
and
jmp
fdivl
scas
int3
lds
leave
sbb
inc
sub
shll
push
mov
sbb
xchg
rclb
cmp
out
inc
outsl
xlat
std
mov
lock
outsb
jmp
icebp
in
inc
dec
movsb
jo
cmp
mov
dec
mov
add
or
push
jbe
lods
inc
lds
inc
fwait
into
cmp
and
mov
out
mov
xchg
into
lock
shll
mov
or
movsl
test
fs
arpl
xchg
movsl
shlb
mov
mov
sub
inc
jne
cmp
xchg
pop
sub
and
xchg
das
rolb
and
pop
or
xorl
cli
std
mov
dec
sub
je
aam
jge
push
inc
inc
pop
mov
test
xchg
dec
sbb
ljmp
popf
cmpsb
pop
imul
sbb
fdivrl
jae
gs
iret
push
pop
out
scas
addr16
push
xor
pop
xchg
push
lcall
sub
sbb
or
jno
and
in
add
jmp
iret
sarl
cltd
test
or
push
pop
mov
lahf
test
into
pushf
push
cmp
movsl
rcll
push
je
and
lods
scas
aad
popf
decb
cmp
outsb
into
inc
movsl
imul
pop
stos
imul
cltd
mov
mov
jnp
lcall
pop
cmp
xchg
ds
push
into
fisubs
movsb
aaa
mov
aas
inc
xchg
pop
daa
mov
xor
dec
fcmovbe
or
test
test
add
mov
cmc
lods
cmp
ja
dec
in
rcrb
call
jg
shlb
jae
shl
inc
sar
lahf
cmp
sti
in
fidivrs
sbb
push
adcl
cmp
or
add
mov
lret
into
aam
call
jbe
mov
loope
es
shll
push
push
cmp
inc
int3
test
lods
imul
mov
insl
jp
cli
stos
jmp
cmp
pop
cmp
mov
aas
jno
lea
dec
mov
inc
cmpsb
insl
jns
jae
and
mov
in
je
add
dec
pop
in
dec
cmp
push
ret
jmp
mov
test
jo
popa
popa
jb
or
dec
xor
pop
pusha
pop
sbb
adc
stos
jp
jb
mov
or
popa
movsb
imull
sahf
mov
into
fisttpll
dec
loopne
jno
fidivs
inc
add
into
fldl
mov
mov
xor
ret
movsb
dec
hlt
pop
cmp
jns
mov
lahf
mov
and
inc
loopne
pop
mov
gs
pusha
dec
pop
mov
cmp
jmp
and
jno
pop
mov
out
or
jmp
jns
mov
push
cmpsb
dec
push
sub
xlat
cmp
pop
testl
cltd
inc
mov
neg
ja
cmpsb
and
jno
adc
dec
add
out
lods
jbe
popf
repz
dec
sahf
clc
pop
xor
lcall
and
lahf
adc
or
xchg
or
cmpsl
and
push
les
pusha
cli
loopne
loopne
int3
dec
pop
loope
lret
pushf
andl
mov
or
cld
push
pop
inc
in
and
outsb
outsl
adc
loop
sub
jg
ja
mov
call
ljmp
xor
in
and
jge
jmp
cmpsl
or
int3
mov
sahf
jbe
jl
adc
shrb
int3
lret
bound
rolb
fistps
dec
mov
mov
push
push
js
repnz
push
cli
pop
push
sahf
mov
gs
dec
arpl
adcb
insl
mov
mov
jo
cltd
roll
and
adcb
xor
ret
cmpsl
xor
aas
xchg
dec
pushf
xchg
sahf
pop
rcrl
sbb
pop
fcmovb
test
es
jmp
xorl
or
cld
movsb
pop
leave
rol
rclb
cmp
pop
jnp
push
mov
testl
adc
lahf
push
cmpb
inc
scas
outsl
jg
nop
nop
sub
arpl
push
jbe
shll
orl
xor
gs
shrb
das
fiaddl
inc
lcall
or
jmp
inc
cmp
mov
fisttps
mov
jp
sbb
jmp
push
sub
sbb
ljmp
movsl
int3
bound
dec
mov
in
sbb
inc
dec
adc
xchg
pop
sahf
push
leave
shl
push
ss
lretw
mov
mov
dec
pop
fst
push
dec
dec
repnz
arpl
fisttpll
and
xchg
mov
bound
imull
push
mov
addr16
scas
mov
shrb
pusha
dec
inc
mov
inc
jb
gs
cmp
jl
int
test
jns
add
mov
jl
xchg
inc
ret
andb
cltd
mov
pop
pop
bound
push
lahf
mov
mov
push
cld
dec
cmp
sbbb
sub
bound
inc
gs
les
ds
dec
repnz
lods
dec
lcall
cmp
lcall
cmp
xor
cmp
das
adc
out
push
jbe
xor
xor
test
add
xchg
loope
jle
lock
dec
sbb
inc
sub
fsts
in
add
jg
test
movsl
pop
pop
andb
mov
jmp
jp
and
pushf
rolb
and
rcrb
outsl
inc
jl
mov
mov
call
pop
stos
and
das
shld
mov
int3
pop
sub
test
je
push
cmp
imulb
inc
pop
fisubs
push
add
xlat
mov
fwait
pop
sub
pushf
or
test
push
iret
in
pop
mov
in
test
sub
mov
or
pop
out
mov
add
test
sbb
frstor
xor
jmp
ljmp
mov
fbstp
mov
sub
push
cmp
xchg
add
mov
xor
mov
aaa
pop
data16
nop
ds
lret
push
sti
in
xchg
pop
sbb
xchg
ret
push
testb
sub
lds
mov
int3
push
pop
mov
jae
mov
sub
imul
sahf
add
out
in
filds
in
mov
jae
fadds
add
xchg
mov
ss
xor
aaa
mov
lock
loop
mov
mov
mov
pop
dec
mov
int
stos
sub
mov
test
sahf
mov
dec
mov
xor
xor
arpl
push
es
inc
clc
das
jns
dec
mov
sarb
sbb
stc
sub
scas
cmpsb
es
out
out
or
mov
mov
mov
mov
xchg
push
jp
arpl
dec
xor
repz
cmpsb
xchg
pop
dec
sub
popa
lret
lods
sub
adc
popa
iret
sbb
adc
mov
inc
inc
push
outsb
sub
ja
das
inc
nop
jmp
adc
push
jle
jno
add
inc
xor
mov
aam
dec
sub
mov
lods
push
popa
fisttps
dec
cmp
fwait
aad
and
cs
add
inc
popa
pushl
push
or
out
pop
mul
test
jg
sub
lahf
xlat
and
mov
test
add
push
dec
test
mov
sti
clc
and
pop
fwait
and
pushf
or
xchg
or
in
js
insl
or
dec
xor
sbb
pop
push
int
ja
push
je,pn
pop
cmc
mov
imull
sahf
xor
cmp
pop
sbb
xchg
inc
mov
inc
push
cs
mov
inc
sbb
xchg
jb
addl
mov
stos
popa
leave
mov
es
dec
clc
add
push
cmp
cmp
in
cmp
dec
vmaxsd
daa
fildl
cli
std
mov
imulb
popf
sbb
and
pop
and
pop
xor
out
sbb
push
add
mov
ret
xor
sub
add
or
sub
mov
jo
mov
and
sub
scas
std
leave
in
sbb
mov
std
sub
test
cli
pusha
shlb
push
rol
out
fiadds
movl
pop
lcall
hlt
dec
mov
ss
or
mov
push
lea
shlb
cli
add
push
stos
lods
data16
mov
repnz
loop
stos
sbb
adc
fsubrp
fistpll
push
js
mov
into
cmp
xchg
fcomps
frstor
push
leave
insb
xor
test
jno
sbb
test
sub
stos
mov
lds
iret
mov
lods
xor
sbb
fisubl
pop
sti
mov
inc
xlat
pop
push
sub
pop
mov
ljmp
sbbl
inc
or
sarb
mov
mov
cmp
dec
das
or
pop
jle
xchg
test
mov
mov
mov
sti
push
xchg
hlt
fistpl
sbb
sub
add
sub
add
mov
negb
pop
inc
cmc
mov
cli
rcrl
jg
jg
aam
outsl
test
repz
inc
pop
loope
mov
addr16
fs
test
push
sbb
clc
pop
adc
mov
sub
roll
in
fcoml
inc
test
fldenv
fdivrl
loop
dec
inc
js
xor
xlat
pop
xor
shrl
pop
imul
push
mov
mov
call
arpl
popa
xchg
or
dec
inc
jnp
dec
shrb
push
div
mov
aam
ja
scas
sbb
in
popa
lds
lret
lds
and
bound
add
pop
movl
fldcw
jnp
jmp
inc
stos
shlb
iret
outsb
xchg
movsb
jno
mov
scas
inc
inc
enter
pop
leave
pop
sbb
push
inc
mov
push
cmp
movsl
mov
push
cld
cs
mov
notl
jae
and
sub
stos
imulb
push
rolb
cmp
sarb
addl
notl
mov
insb
lea
test
divb
icebp
cmpsl
jno
adc
inc
ffree
test
mov
mov
scas
sbb
cld
sbb
out
sahf
jmp
add
pushf
aas
inc
ja
pop
inc
fucomi
sti
rcl
xchg
ffree
das
in
push
sub
enter
dec
lds
addr16
das
pop
in
sub
cmpsl
xchg
lock
push
call
addb
jns
or
popf
adc
sbb
or
cs
popf
mov
cld
sub
test
pop
push
pop
cmpsl
dec
pop
shll
test
addb
in
add
or
sbb
dec
insb
notl
pusha
adc
mov
movsl
shll
fbld
leave
rep
subb
xor
lods
popf
fidivl
call
mov
or
mov
push
add
shr
or
test
pushf
inc
dec
jae
mov
pop
xor
cmp
xorb
cmp
sbb
sahf
fildl
mov
je
fadd
jecxz
pop
movsl
cld
lds
loopne
stos
sti
ljmp
popf
mov
jns
mov
outsl
xchg
cwtl
dec
jo
xchg
cmpsb
sbb
xchg
scas
subb
cwtl
and
sub
nop
xor
fsubrs
std
mov
and
xchg
mov
icebp
ss
stc
std
fwait
dec
cs
in
cmpsb
stos
pop
cmc
mov
xchg
push
mov
lcall
sub
inc
imulb
gs
jmp
rcrb
or
iret
inc
dec
mov
jns
xchg
mov
adc
sbbb
mov
mov
in
insb
jno
fisubs
push
lahf
ja
mov
cmpsb
pop
dec
inc
testb
seto
or
push
in
fbld
xchg
mov
daa
mov
xor
cmp
cli
mov
daa
jae
popf
mov
and
lds
daa
mov
sub
loop
lahf
and
lock
cmp
fcoml
jecxz
movsb
mov
repz
ss
addl
add
movl
js
rcll
dec
lcall
mov
es
xorb
inc
push
hlt
or
push
mov
mov
xlat
cmpsb
sbb
push
jbe
enter
rcl
icebp
and
addr16
inc
clc
pop
add
sbb
mov
pop
je
cmp
cmp
fcom
mov
pop
add
test
stos
popf
xchg
fmull
sbb
stos
jbe
or
sub
mov
mov
xchg
repnz
jns
add
adc
rolb
int
jo
test
call
push
in
lahf
repnz
dec
mov
push
movsl
cwtl
xor
fwait
mov
xchg
icebp
dec
or
out
lds
push
sbb
dec
fsub
mov
sub
cmc
xchg
lret
hlt
sub
adc
movb
adc
xchg
sub
popa
rcrb
sbb
jno
or
fistpll
in
scas
xchg
mull
insl
testb
and
dec
pop
or
xor
icebp
outsl
cmp
mov
or
in
adc
or
mov
add
in
call
test
int3
xlat
xor
int
adc
mov
mov
kunpckwd
fdiv
xchg
push
hlt
inc
out
push
repz
dec
or
or
out
es
jecxz
lret
dec
scas
mov
stc
sub
cltd
pushf
cltd
scas
mov
jns
pusha
cmp
and
mov
daa
ss
xor
es
ret
xchg
push
push
loopne
mov
hlt
pusha
aam
cmp
loopne
mov
ret
push
mov
inc
leave
testl
cmpsl
jge
mov
mov
popa
mov
add
lahf
pop
inc
mov
repz
sub
test
idiv
xchg
sub
notl
insl
call
aas
mov
fwait
sbb
out
push
loopne
rol
addb
mov
mov
dec
ja
rcrb
fisttps
push
push
dec
aam
sub
sub
jbe
sub
lods
jb
call
jae
jl
push
dec
jo
mov
jge
lret
stos
cmpsl
push
rorl
dec
jne
pusha
movsb
cmp
push
dec
add
add
mov
lods
xchg
xor
je
dec
stos
test
or
push
push
jb
and
add
ljmp
psraw
aam
in
xor
or
mov
xor
mov
outsb
sub
mov
mov
jge
mov
sub
daa
mov
pop
gs
jae
dec
scas
xchg
scas
stc
loopne
add
dec
cwtl
fadd
xchg
add
aaa
rcll
jns
lods
mov
cs
jne
sub
int3
ror
lcall
aad
and
scas
xor
inc
sub
sarl
icebp
mov
xor
imul
jmp
mov
xchg
jb
mov
mov
setns
ret
pusha
movsb
mov
outsl
out
bswap
or
sti
xchg
in
rolb
ljmp
outsl
adc
and
sarl
clc
sbb
push
xlat
dec
outsl
mov
xor
aad
dec
or
mov
scas
cwtl
dec
cli
pcmpgtw
push
in
movb
lret
daa
jns
mov
lods
xor
or
imul
daa
adc
imul
nop
and
cmp
pop
repz
pop
stc
pushf
dec
adc
sub
mov
sub
xlat
popf
outsl
jmp
int
mov
push
sahf
and
adc
cli
xchg
and
inc
sub
lret
inc
and
fnstcw
and
pop
and
inc
push
inc
mov
pop
pusha
push
sbb
inc
and
lahf
shll
pop
sbb
int3
shlb
loop
jo
dec
jbe
add
sub
dec
mov
mov
sbb
aaa
sti
pop
repnz
std
repz
sbb
loope
dec
xor
orb
stos
push
popa
push
mov
stc
push
pop
pusha
aam
xor
ljmp
js
pop
push
std
fidivrl
cwtl
mov
imul
inc
call
into
dec
lea
and
sbb
mov
daa
stos
mov
xor
test
outsl
push
in
jns
xor
mulb
jo
cmp
jg
repnz
in
adcl
xchg
punpcklbw
xorb
lods
mov
push
sub
add
imul
fmuls
dec
shlb
inc
aad
xor
and
push
mull
or
les
sub
fsub
das
mov
sub
mov
sub
std
jmp
cmc
in
addr16
lret
iret
mov
xchg
pop
sub
xchg
dec
push
call
icebp
nop
mov
inc
aas
mov
adc
psllw
test
fisttpll
xchg
xchg
call
inc
hlt
jg
call
cmp
push
and
push
es
cwtl
push
js
movsb
test
int
loop
fists
jp
repnz
psubb
xchg
add
cmp
mov
dec
push
lock
and
stc
call
stos
in
mov
mov
out
es
mov
cmp
xchg
mov
push
test
test
inc
addb
in
push
movsb
aad
shll
std
sub
lret
xchg
lahf
xor
pop
out
es
out
rcll
ret
dec
leave
mov
fnstenv
push
jecxz
xchg
ds
sub
jmp
dec
push
mov
and
clc
mov
sub
rcll
xor
mov
fcmovnu
pusha
push
cli
cld
xorb
rorl
and
add
test
mov
incl
lfs
and
test
jb
xchg
add
cli
std
dec
dec
cmp
adc
xchg
mov
in
repnz
test
popa
mov
das
pop
xor
jecxz
sbb
and
jns
inc
scas
ss
cmc
shlb
lcall
jge
std
ss
xor
cs
mov
jo
cmp
mov
nop
inc
jno
lea
inc
cmp
inc
iret
clc
jns
mov
les
jp
push
push
mov
insl
ja
sub
xorb
xlat
mov
pusha
jecxz
jns
jl
inc
outsb
mov
push
pop
sub
in
sub
js
inc
mov
fists
movsb
xor
push
or
or
ficoml
xchg
fs
dec
push
jg
push
cmpsl
pusha
fidivs
int
jg
sub
mov
ss
xchg
nop
add
in
mov
xlat
jge
test
or
pop
mov
inc
mov
inc
mov
lahf
dec
push
adc
scas
mov
jbe
pop
xor
sbbb
nop
scas
fidivrl
lcall
cmpsb
rol
inc
nop
nop
dec
test
dec
rcrb
andl
mov
loope
jb
cmpl
jae
xor
je
push
mov
adc
jl
jg
cwtl
mov
js
dec
outsb
leave
xor
add
jg
pop
xor
xlat
jp
mov
mov
iret
pop
in
xchg
add
iret
mov
out
cltd
inc
outsl
je
or
lret
xchg
or
addr16
jge
cmp
fbstp
dec
push
mov
xorl
int3
pop
add
pop
test
sub
insl
outsl
pop
into
hlt
rclb
adc
sbb
ret
mov
sbb
jne
out
and
push
lock
cmp
arpl
cmp
add
inc
aam
and
jmp
subb
aad
test
dec
test
pop
xchg
xlat
cli
ret
test
or
mov
lret
xchg
je
sbb
leave
mov
mov
cmp
push
xchg
mov
xchg
push
mov
or
xchg
arpl
loop
sti
pop
pop
mov
imul
negb
rorb
lcall
mov
or
cs
out
pop
pushf
xor
mov
mov
pushf
aam
mov
ret
icebp
sbb
mov
cwtl
adc
lods
cmp
imul
sbb
dec
cmp
mov
mov
ds
xor
push
dec
fdiv
xchg
pop
filds
cmpb
int
imul
imulb
std
je
sub
jnp
sub
lret
push
fsub
or
mov
push
in
aas
xor
mov
or
add
dec
push
lcall
lock
adc
movsl
sbb
ret
popf
out
inc
arpl
sbb
aas
sbb
fadd
test
and
dec
jle
insl
dec
js
mov
or
inc
pop
nop
mov
mov
pushf
mov
and
or
mov
adc
gs
shlb
ret
xchg
xchg
mov
push
ror
lcall
sbb
push
xlat
fdivl
mov
fs
out
cmpsl
jl
mov
push
rcr
mov
and
dec
fisubrl
dec
sahf
int3
dec
subl
add
push
pushf
js
sbb
and
xchg
jp
lea
xor
imul
psubq
pop
insb
xchg
jne
push
mov
daa
xlat
popa
cli
push
add
hlt
aas
adc
stos
xchg
xor
dec
call
ret
push
mov
arpl
fisubrs
push
imul
sbb
cwtl
mov
ficompl
mov
mov
lcall
dec
jmp
jo
jnp
pop
mov
xchg
jmp
movsb
bound
cmc
ror
movsb
add
jnp
or
rol
dec
pop
pop
repz
fs
cmp
push
push
mov
push
mov
push
cmp
pop
imul
add
sub
add
inc
mov
or
mov
out
or
lret
jnp
dec
mov
lds
enter
js
pop
inc
xchg
adc
popa
or
inc
mul
movsl
jle
iret
xor
cmp
mov
cmp
sub
dec
push
pop
pop
ss
ficompl
sahf
hlt
mov
fs
pusha
cs
sahf
mov
lods
lahf
pushf
jb
lea
iret
imul
sbb
cld
or
jecxz
int
or
leave
loope
push
push
push
in
pop
xchg
push
add
mov
or
out
insl
je
int3
add
out
stc
sbb
cmp
xchg
negb
jmp
test
call
mov
adc
outsb
loope
pop
dec
arpl
popf
aad
imul
xchg
jecxz
push
inc
adc
mov
and
stc
not
push
sti
insl
test
mov
rcrb
xor
je
pushf
mov
imul
mov
psraw
mov
mov
mov
psubusb
aas
cmpsl
mov
xor
addr16
sub
test
ljmp
push
mov
or
jecxz
fwait
aad
fcomip
inc
test
mov
mov
sub
sub
pop
and
adc
outsl
subl
das
xchg
jge
and
mov
add
push
inc
mov
mov
adcl
push
dec
lods
imul
stos
subb
icebp
dec
ss
fsts
mov
test
outsb
daa
pop
sbb
mov
pop
roll
xchg
subl
and
stos
lock
sub
push
jmp
sub
pop
int
pop
pusha
aaa
testl
push
mov
mov
xor
mov
fadd
inc
pop
pop
cs
pusha
arpl
or
int
or
cmpsl
jmp
outsl
imul
sub
cs
mov
sub
sti
dec
jecxz
adc
fbld
xchg
sbb
repz
push
out
pop
xchg
jp
xorl
sub
adc
xchg
and
pop
xor
mov
jmp
pop
jp
aas
mov
xchg
xor
mov
lods
cld
mov
ljmp
fcmovbe
jno
mov
pop
adc
in
das
arpl
andb
int
imul
or
inc
lahf
test
push
sub
or
sbb
inc
dec
sbb
lds
hlt
and
insl
push
mov
dec
adc
out
ss
out
and
mov
imul
imul
mov
inc
or
jno
cmpb
andl
or
inc
inc
jge
mov
push
or
jecxz
xor
je
pop
fcomip
call
in
add
jno
rcrl
shll
cmp
or
mov
cs
xchg
mov
insb
dec
pusha
jbe
fcmovnb
imul
fists
sbb
fnstenv
sbb
mov
jnp,pt
jge
lret
fldcw
cs
rcrb
xchg
and
jns
push
xor
int3
mov
xchg
rcl
add
push
cmpsb
inc
cmp
mov
cmp
lahf
jbe
or
dec
ret
pop
imul
mov
dec
jg
and
pop
gs
push
cltd
mov
pop
dec
jge
push
popa
adc
in
push
pop
xchg
pop
sub
es
repnz
out
lret
cmp
and
xor
push
add
imul
popf
rclb
jno
jmp
jae
pop
mov
adc
ret
pop
mov
andb
pop
mov
cmp
pop
jmp
adc
jge
pop
add
xchg
int3
hlt
xchg
push
xchg
ljmp
fdivr
xchg
xchg
mov
xor
mov
xchg
aam
mov
psubw
leave
pop
fbld
int
mov
xchg
xchg
aam
mov
inc
in
fstps
mov
sti
xchg
sti
or
loopne
pop
mov
xor
mov
xchg
dec
sub
orl
push
dec
mov
cwtl
aam
call
rclb
mov
lods
sub
repz
sbb
dec
sub
fbld
cmp
or
cmp
mov
clc
lock
push
mov
aaa
add
icebp
dec
add
test
pop
idivb
pinsrw
es
cmpsb
add
jne
scas
dec
sbb
repz
sub
pop
xor
sbb
push
call
sub
aas
rclb
mov
test
mov
int3
cld
xchg
mov
mov
in
packssdw
push
pop
enter
fiaddl
or
jnp
mov
push
popf
fwait
and
pop
shll
push
jno
mov
jmp
dec
outsl
jae
pop
fdecstp
push
mov
sub
pop
sub
lods
dec
sbb
call
repnz
sbbb
divl
inc
jecxz
add
insl
jnp
cltd
sbb
dec
cwtl
dec
push
and
inc
addr16
aad
popa
test
inc
jbe
cmp
test
xor
outsl
aad
dec
inc
xchg
mov
inc
and
mov
inc
push
or
add
jmp
sub
addb
and
xor
mov
xchg
mov
push
pushf
push
daa
outsb
push
stos
in
push
xor
or
inc
or
cli
aaa
mov
cltd
push
or
arpl
push
cli
push
mov
cmpsl
cmpsl
adc
test
sbbl
mulb
test
cmpb
pop
cmp
stc
sub
out
sub
push
test
xlat
enter
lods
jbe
pop
sub
outsb
inc
mov
cli
inc
adc
ss
movsb
mov
cmp
jmp
pop
jecxz
jecxz
stos
jno
jmp
pop
ret
enter
ret
cmc
and
clc
xchg
fs
test
jmp
sti
adc
inc
out
mov
jne
cs
xchg
pop
mov
fcomps
flds
mov
jbe
or
or
lcall
jno
push
sub
or
clc
adcb
dec
adc
xlat
mov
cld
jmp
mov
xchg
and
gs
mov
push
mov
xor
mov
jne
je
jbe
je
mov
jb
ss
jb
jnp
mov
clc
lcall
pop
in
add
test
stos
loop
xchg
or
rorb
cmp
jmp
repnz
xchg
xlat
dec
outsl
pusha
sar
lods
int
jmp
sub
mov
dec
outsb
iret
cmpsl
lahf
or
lret
fwait
bound
and
jmp
insb
mov
pop
imul
push
call
sti
mov
push
fs
xor
sbb
loope
or
add
and
jmp
in
push
mov
cmp
enter
stc
fcmovnu
cmpsb
fstl
filds
stc
cmc
dec
mov
out
jle
test
pop
popf
lds
idiv
push
jnp
pop
test
sbb
add
popf
xor
dec
vshufpd
xor
je
std
xorb
jae
jmp
outsl
arpl
insl
inc
jecxz
jo
cld
mov
in
xor
loop
mov
jp
daa
outsb
mov
shrl
dec
cmp
ds
mov
dec
testl
or
fs
icebp
test
movsb
mov
bound
scas
arpl
sub
addr16
xchg
in
add
addl
ret
mov
or
sbbl
ds
inc
scas
xchg
jae
pfmul
aaa
popl
jo
dec
pusha
dec
mov
pop
push
cmp
jnp
jno
jl
pop
mov
jle
mov
lods
lret
fwait
push
add
andl
inc
push
js
add
fwait
push
jmp
popa
xor
sub
pop
inc
in
mov
push
sub
dec
mov
pop
push
sar
pop
fcmovne
inc
in
sub
int3
dec
inc
jle
test
jns
subl
outsl
in
insl
ljmp
loop
in
rolb
out
and
popf
add
mov
dec
nop
test
push
mov
cs
iret
xchg
jno
stc
fstpl
insb
sub
mov
jae
ss
mov
mov
xchg
xor
push
das
and
xor
daa
subb
and
or
xchg
lcall
lret
loope
or
add
mov
test
xchg
popf
xor
mov
les
fnstsw
outsb
sub
outsl
outsl
das
loop
subl
cmp
in
lret
scas
andnps
mov
in
xor
je
push
or
and
enter
and
fisubs
popa
movsb
xchg
int3
fdivrs
aad
ud2
xchg
ljmp
stc
iret
pop
popf
sub
sbb
in
sub
jns
and
mov
push
xchg
jbe
add
movsl
add
jns
stc
fsubr
xchg
jae
or
and
push
sub
mov
xor
div
or
fnstcw
ds
sahf
xor
xor
mov
xchg
inc
mov
pushf
in
push
pop
popf
xchg
addr16
orb
mov
mov
xchg
fadd
mov
cwtl
fsubl
xlat
fstpl
je
loope
cwtl
and
push
test
lods
and
mov
lcall
add
sbb
inc
jo
sbb
test
xchg
test
lahf
cmpb
add
lahf
push
and
sahf
adc
cmp
outsb
fcomip
dec
pop
enter
add
or
out
ljmp
dec
push
cmp
add
aam
out
imul
das
dec
sahf
mov
xchg
push
test
fisubrl
das
dec
push
test
push
outsl
jnp
movsl
jp
notl
push
dec
aam
enter
test
shrb
xor
xchg
shll
in
insl
fwait
inc
inc
popa
out
xor
lret
push
pop
add
aas
push
daa
push
and
adc
jns
xchg
push
or
jns
or
xchg
push
push
push
sbbl
and
cltd
cwtl
adc
push
push
ret
rcrl
int3
rclb
push
dec
imul
mov
adc
fbstp
or
dec
mov
stos
out
mov
jle
mov
pop
fs
hlt
lret
inc
xchg
xor
adc
roll
sbb
ficompl
ds
adc
adc
add
adc
iret
xchg
popf
ljmp
adc
xchg
dec
or
dec
push
stc
loopne
pop
stos
mov
repz
jae
and
jo
add
arpl
aaa
sub
std
adcb
pop
icebp
iret
mov
call
mov
ror
sbb
pop
imul
add
adc
jbe
out
movsl
test
popf
cmp
mov
push
pop
test
xor
pop
xor
insb
mov
popa
stos
shll
mov
mov
push
cmp
push
pop
inc
jg
iret
jnp
mov
dec
mov
add
rolb
push
outsl
dec
xchg
pusha
imul
aam
idiv
xchg
push
dec
add
add
daa
xchg
pusha
mov
lods
mov
adc
pop
popa
add
shrb
and
push
xor
loope
subb
pop
gs
es
call
mov
cmp
rcrl
outsl
mov
sti
xchg
mov
jnp
imul
fcomps
mov
cmp
mov
pop
test
in
repz
ror
popf
sub
nopl
xor
xchg
lahf
cld
and
or
fwait
movsbl
in
cmpsb
mov
mov
jmp
aad
ret
arpl
negl
xchg
pop
jg
insl
inc
xchg
movsl
cwtl
xchg
dec
das
hlt
negl
xchg
in
dec
pushf
lahf
mov
stos
mov
cmc
dec
cmpsb
icebp
call
jo
pop
pop
sti
ret
mov
mov
std
xchg
jns
and
dec
roll
xor
ficomps
nop
dec
push
mov
xor
sub
mul
sub
xor
xlat
jnp
sbb
in
pusha
lea
lcall
cmp
cwtl
fists
pop
ja
mov
inc
push
cli
xchg
cmp
hlt
negl
lret
ret
mov
adc
sub
lret
lods
and
sub
cmpsl
scas
stc
loopne
pop
cmpl
lods
push
imul
pusha
xchg
dec
daa
nop
jae
in
inc
jle
test
aad
jae
andb
xchg
xchg
dec
enter
and
lret
push
mov
subb
pop
mov
sahf
in
dec
mov
sub
lret
pop
and
rcrb
in
aad
sub
jns
pushf
ljmp
stc
iret
pop
sub
rcrl
inc
in
sub
in
jno
dec
test
aad
pushw
pop
and
mov
je
mov
adc
jb
adc
pop
ret
pop
and
jl
out
mov
add
outsl
xor
pop
pushf
ljmp
stc
fcoms
xchg
ds
sarl
xlat
pop
fwait
push
dec
jecxz
negl
inc
ror
xor
leave
popa
mov
sbb
ljmp
or
mov
je
jno
cld
or
push
setbe
cmpsb
push
push
xor
daa
fs
sub
add
insl
dec
mov
sub
lret
leave
and
xor
mov
mov
scas
cltd
pop
fcmovu
sub
rdmsr
and
mov
dec
inc
lahf
pop
popf
or
loope
in
mov
dec
test
test
stos
ret
shrl
push
add
xor
xor
cmp
ret
push
xor
dec
dec
sahf
add
jae
bound
das
arpl
movsb
sbb
addb
and
gs
jmp
or
inc
push
dec
lea
testl
cld
push
mov
pop
dec
xchg
mov
clts
shrb
xchg
pop
jnp
jb
lea
outsb
or
mov
add
mov
hlt
decl
inc
jbe
mov
or
and
push
sub
inc
xchg
xlat
adc
in
push
adc
fcomps
add
ret
mov
shlb
dec
inc
fdivrl
shll
lds
mov
sub
dec
xor
or
dec
add
and
dec
seto
pushf
movsb
sub
cmp
stc
loopne
pop
orl
subl
aas
adc
xchg
dec
addr16
in
mov
xlat
inc
lcall
xchg
or
sahf
popa
pop
mov
push
sub
lret
adc
jae
rcrb
popf
jns
nopl
or
xor
pop
iret
pushf
xor
mov
xchg
shl
dec
dec
sub
jbe
sub
xchg
popf
iret
push
nopl
movsb
jns
ficoms
cwtl
push
dec
cmp
cmpsl
popf
mov
ja
sbb
pushf
in
test
lret
leave
and
jle
lcall
xchg
add
mov
xchg
mov
cmpsb
jne
and
mov
xor
jl
imul
pop
movsl
or
and
sub
frstor
cmc
xchg
jne
pushf
in
xchg
imul
in
mov
jbe
sub
push
dec
adcb
aad
mov
jmp
dec
cwtl
in
nop
sub
in
int
inc
inc
popa
out
xchg
jle
test
and
mov
cmpsb
idiv
push
fsubrl
pop
or
aad
push
pusha
adcl
cmp
xchg
and
pushf
and
pop
dec
xchg
xchg
adc
inc
cs
push
fisubl
bound
arpl
stc
pop
pusha
jmp
jbe
sbb
shl
inc
lea
je
xchg
mov
or
stos
mov
leave
test
inc
and
xor
xlat
pop
add
push
dec
dec
sub
mov
aad
pop
push
mov
pop
xor
dec
pushf
lahf
pop
adc
lret
inc
scas
adc
cmpl
stc
loopne
pop
cmp
stc
fsubs
int3
sub
rcll
pop
and
pop
into
shrb
out
dec
orl
loopne
cwtl
cld
mov
test
or
sub
shrl
psllq
imull
jge
push
int
hlt
dec
out
movsl
mov
jb
mov
les
adc
shr
mov
imul
ret
lret
dec
into
stc
imul
jno
push
xor
popl
mov
add
fchs
call
fistpll
mov
mov
inc
jge
mov
dec
in
into
mov
sub
ret
call
and
sub
std
popf
fbstp
gs
shrw
pop
add
es
test
out
out
jg
fldcw
ljmp
fildll
xchg
xchg
imul
test
and
cmpsl
xchg
xor
and
push
mov
mov
dec
xor
push
rcrb
cmp
in
or
loopne
jge
sub
sbb
rorb
int3
jge
dec
mov
adc
jg
sarb
mov
mov
aaa
dec
fmul
orb
push
pop
fistpll
lock
or
jp
test
scas
dec
xchg
fs
nop
push
push
inc
dec
movsl
or
adc
cmc
inc
inc
pop
mov
sbb
inc
insb
sub
sub
xchg
jecxz
push
dec
mov
dec
add
pop
dec
sbb
int
rcll
push
insl
pushf
push
sbb
and
pop
dec
repz
push
pop
fistpll
pop
cmp
sub
xchg
mov
push
cld
mov
dec
xchg
mov
inc
outsl
push
nop
pop
outsl
sahf
jbe
outsl
pop
fistps
pop
fildll
sub
cs
sub
dec
or
adc
jae
outsl
movsb
into
add
daa
in
push
xlat
movaps
xchg
mov
movsl
mov
jmp
in
mov
decb
mov
sarl
leave
das
insl
and
cmpsl
int3
mov
addb
sub
mov
jmp
into
mov
mov
cmc
cmpsl
test
insl
std
xor
cmpsb
orb
addb
xor
mov
mov
inc
xchg
mov
mov
clc
mov
mov
add
das
insb
test
lds
jb,pn
pop
xor
sbb
add
mov
push
jae
lea
insl
and
xor
lds
fisttps
mov
dec
add
mov
popf
cltd
mov
mov
xor
sub
mov
jmp
test
fidivs
or
sub
mov
mov
clc
mov
insl
mov
lock
cld
pop
and
lret
mov
xor
and
into
sub
daa
mov
jo
cmp
cmpsl
aam
xor
sahf
mov
sub
or
mov
jne
push
xor
sbb
dec
xchg
jmp
jl
and
push
out
iret
pop
cmp
shrl
in
mov
xchg
ss
cmp
pop
dec
inc
xchg
or
adcb
stos
push
stos
loopne
lods
xchg
dec
lcall
nop
xchg
adc
mov
imul
add
pusha
xchg
dec
mov
es
mov
xchg
mov
xchg
stc
nop
and
mov
movsb
mov
inc
pop
clc
inc
lahf
mov
push
sahf
mov
push
xor
mov
inc
orb
mov
sbb
into
adc
dec
inc
sbbb
in
fdivrs
adc
pop
clc
aam
pop
stc
sub
daa
mov
sub
lods
push
shlb
cmp
and
movl
ret
fisttpll
mov
stc
cmpsb
mov
mov
push
sub
pusha
add
pop
subl
repz
xchg
add
mov
jmp
cmp
popf
mov
xchg
ljmp
es
push
cmpb
iret
push
push
mov
xchg
movsl
test
jmp
movsl
dec
testb
mov
daa
adc
cmove
iret
cmp
mov
idivb
fwait
ljmp
addr16
in
mov
jge,pn
mov
lods
popa
xchg
mov
and
jnp
add
xchg
enter
leave
fistpll
mov
int
xchg
out
insb
lea
repnz
fistl
pop
pop
cli
lret
int
add
pop
scas
dec
mov
mov
shll
add
add
add
lods
pop
xor
jg
and
xchg
inc
bound
push
push
adc
dec
leave
sub
orb
mov
sub
hlt
int3
inc
sub
call
and
stc
out
lret
dec
mov
leave
xchg
jns
arpl
cmp
add
rcrb
jo
out
lods
sub
or
es
jp
insl
jnp
call
mov
loopne
movsl
mov
cs
sub
push
popa
pop
fcoml
fwait
test
cmp
mov
sarl
dec
mov
cltd
mov
loop
fs
fcmove
arpl
loop
xor
dec
dec
loopne
and
or
mov
das
loope
dec
fs
push
fdivr
jge
loope
adc
popf
jmp
inc
outsb
xchg
out
mov
push
dec
pusha
loopne
xchg
mov
and
add
popl
lock
notb
stc
jge
loope
and
adc
and
xchg
xchg
imul
xchg
sbb
inc
nop
fstl
pop
out
push
stos
adc
pop
push
test
adc
xchg
test
mov
mov
aas
push
jle
mov
xchg
add
movsb
shll
push
dec
mov
adc
cmp
cmp
push
movsl
mov
jl
mov
loope
mov
and
aam
or
loop
push
popf
lods
movsl
cld
cmp
out
adc
js
repz
xor
outsb
jp
mov
popa
push
cltd
or
scas
sbb
jbe
es
int3
cmp
cld
mov
fcoms
mov
insl
push
xchg
outsb
mov
not
sub
imul
in
mov
xchg
jns
jge
ror
push
fs
add
int3
dec
pop
and
add
xchg
jnp
xchg
sbb
push
jl
mov
sub
sub
mov
aas
scas
mov
xchg
sbb
mov
jbe
into
jnp
loop
aaa
pushf
cmpb
pmuludq
sub
loopne
push
lea
mov
jmp
or
rclb
pop
fadds
lret
rclb
insb
leave
ja
fsub
mov
es
movsl
sar
jbe
push
adc
aam
xchg
cmpsl
xchg
jnp
fbstp
in
cmpb
ja
gs
xchg
out
xor
scas
insb
inc
roll
pushf
outsl
subb
hlt
mov
push
mov
sub
mov
out
dec
inc
mov
jb
insb
addr16
shr
pusha
and
sbb
push
lea
pop
aad
mov
jecxz
andb
jecxz
sub
or
cld
mov
inc
fsubp
push
clc
punpckldq
jne
add
jmp
mov
adc
add
mov
pop
jl
mov
aad
or
xor
js
push
add
dec
shrl
in
inc
mov
dec
daa
inc
and
push
out
fsubl
xchg
aas
cli
add
mov
stos
fcmovnbe
pandn
ret
fsubr
mov
aad
call
ret
je
jg
loope
in
repz
fistps
in
popa
pop
testl
cmp
xchg
loopne
jle
xchg
ja
mov
xchg
lods
out
sub
cmp
mov
mov
cmp
xchg
bound
fcmovne
and
dec
or
mov
jmp
jae
iret
mov
mov
jp
mov
in
stos
aas
les
xchg
gs
int3
imul
push
pop
adc
in
push
pop
dec
fstpt
aas
push
xor
and
adc
int
ret
or
adc
stc
aad
cwtl
push
pop
xor
inc
enter
enter
or
jmp
xor
push
repnz
fcom
into
cs
jmp
jmp
push
in
iret
push
stos
adc
sbb
fistpl
jae
jge
and
add
mov
jl
repz
mov
into
mov
fisubl
imul
stos
fmuls
in
shll
rorb
pop
cltd
ss
dec
mov
pop
fstpt
or
mov
dec
mov
sbb
pop
pop
xor
fistl
pushf
mul
sbb
mulb
adc
imull
dec
add
dec
push
stc
sti
dec
mov
fsub
dec
inc
and
aad
xor
push
imul
mov
roll
test
mov
push
les
inc
fwait
jg
ss
aad
cwtl
in
test
push
adc
mov
dec
jmp
dec
xchg
xor
dec
add
mov
repz
loop
ss
ret
call
jbe
test
insl
ljmp
mov
mov
and
lcall
mov
xor
push
sub
xor
inc
and
pushf
outsl
mov
repz
cmc
dec
jns
sahf
mov
test
cmp
test
cmp
mov
jl
xchg
popa
pop
push
loope
jge
in
dec
cmpsl
mov
fwait
jae
xor
push
mov
orl
test
bound
clc
sub
stc
xchg
jno
xchg
jmp
inc
add
add
xlat
ja
mov
dec
bnd
das
shl
jle
test
add
jl
stos
je
sub
fadds
inc
sahf
sub
cs
outsl
arpl
add
btr
jmp
adc
sub
outsl
stos
das
stos
xchg
sbb
pop
xlat
les
pushf
mov
popa
stos
push
jecxz
sbb
fdiv
add
mov
hlt
xor
mov
lahf
jbe
sbbb
jl
cmpsl
sbb
and
mov
push
dec
and
addb
pushf
jae
gs
push
pop
orl
lret
push
imul
popa
fcompl
sub
pop
punpckhbw
test
dec
or
das
jmp
test
popa
movsl
xchg
dec
adcb
subb
mov
sbb
and
jb
or
sub
lcall
mov
rcll
outsl
in
cmpsb
test
cld
cmpsb
xchg
orb
in
pushf
dec
mov
popf
mov
rorb
lahf
sahf
jp
sub
push
jbe
cs
ss
lret
fstpl
cmpsl
sub
orl
mov
addl
daa
sbb
dec
roll
and
mov
popf
pusha
je
test
push
dec
pusha
sub
mov
add
mov
test
int3
lret
cmp
orl
aaa
push
or
dec
sbb
sbb
dec
daa
sbb
and
scas
icebp
mov
ret
dec
movsl
stos
aad
mov
rcll
sbb
test
mov
leave
aaa
shl
popf
jmp
pop
mov
stc
dec
pop
jae
pushf
xor
fs
inc
inc
mov
fs
fsubrl
sbb
arpl
push
test
rol
popf
aad
lock
sarl
stos
xlat
rcr
pop
jae
lahf
enter
push
sbb
push
xchg
cmp
jno
dec
mov
enter
jb
seto
mov
fisttps
sub
lds
iret
mov
jge
mov
jl
iret
enter
mov
stos
jno
mov
addr16
sub
addb
enter
out
push
rol
popf
aas
fidivs
mov
jp
roll
inc
imul
cld
out
sbb
lods
jae
pop
scas
ret
gs
test
lods
xchg
mov
lods
jle
fiadds
rorl
inc
movsb
mov
cmpsl
dec
cwtl
in
gs
xchg
int3
adc
cmp
into
cmpb
jne
jbe
pop
jb
movsl
into
mov
mov
add
jb
loop
mov
out
sub
pop
jae
pushf
cli
out
fists
and
dec
mov
fwait
dec
ss
xchg
es
cmp
add
mov
pop
mov
jmp
out
mov
lret
scas
imul
je
flds
into
inc
sub
or
into
inc
cs
xchg
ret
gs
nop
xchg
lea
fucomip
mov
mov
lods
enter
push
push
sub
mov
add
push
dec
xchg
cmp
aad
jle
push
pop
mov
mov
fwait
es
dec
data16
lods
dec
jecxz
cmp
mov
loopne
repz
xchg
adc
in
out
faddp
popf
das
faddl
dec
fidivrs
nop
test
xchg
inc
inc
test
add
lahf
dec
push
mov
xlat
cmp
jne
gs
adc
push
or
cmp
adcb
fwait
dec
scas
fcmovu
nop
es
add
out
out
jne
popf
imul
mov
sbb
aad
xchg
movsl
mov
jmp
lcall
sub
fstpl
pop
psubsw
ljmp
hlt
lret
in
mov
ja
adc
imul
push
int
push
and
stos
fisttpl
sbb
inc
fnstcw
xchg
xlat
rcrl
dec
cltd
call
jae
lds
mov
fidivrl
push
push
cwtl
cs
push
nop
out
or
adc
jmp
pop
lods
jo
arpl
push
adc
and
das
xchg
and
shll
das
push
movsb
adc
popf
int3
or
pop
test
ret
pop
test
jb
lret
pop
stos
or
jge
push
pop
jb
xchg
test
xchg
scas
xchg
dec
push
jbe
jnp
jbe
pop
push
fimull
cmpsl
int3
imul
and
add
mov
out
pop
outsb
fldenv
xchg
aam
shr
xlat
movsb
loop
xchg
andl
movsl
movsb
fsubl
xchg
mov
inc
xor
je
iret
fstl
scas
adc
les
jbe
sub
mov
and
jb
sbb
mov
fnstenv
xchg
lahf
jbe
xchg
pop
fbld
sub
xlat
lcall
cmpb
sbb
out
dec
mov
imul
push
lahf
dec
pop
mov
shrb
jns
inc
out
sarl
mov
lcall
mov
je
jns
dec
mov
pop
fcmovne
das
xor
scas
jno
pop
jno
xchg
addr16
js
sub
fisubrl
fnstcw
inc
in
mov
lcall
imul
fsubs
or
test
or
mov
or
or
lods
adc
dec
inc
ficompl
push
xor
mov
sub
cwtl
out
or
xor
sbb
cltd
jae
sahf
cwtl
ret
adc
cs
in
mov
addb
int
push
push
jp
pop
sub
out
pushf
cmpsl
dec
test
push
xchg
es
push
les
inc
mov
fwait
pcmpeqd
sub
fistpl
mov
sbb
ret
fsubr
xchg
lds
jl
ret
gs
cltd
xchg
adc
mov
test
fmulp
or
inc
and
add
mov
cmp
ja
aam
pop
xchg
add
push
rol
push
push
movsl
aad
add
lret
and
jae
or
xor
or
push
inc
and
adc
les
dec
ret
cltd
leave
fildll
pop
stos
add
or
xchg
adc
jle
jne
sbb
dec
les
cltd
test
imul
or
aas
mov
pop
ja
sbb
inc
das
and
gs
cltd
test
negb
pop
cwtl
sahf
test
sti
jl
inc
fcoml
aaa
lds
inc
aaa
mov
jae
mov
popf
xchg
add
fdivrs
incl
sub
or
clc
scas
push
sbb
aas
sbb
xchg
sub
inc
or
pop
out
pop
xchg
xchg
out
ds
mov
dec
push
mov
aaa
lock
es
bndldx
in
cmp
sbb
sbbb
add
iret
out
rsm
mov
pop
lods
in
or
cmp
rclb
cmp
cltd
adc
cli
xor
lcall
pop
push
enter
add
sub
or
cmp
les
jbe
outsl
ds
cli
xchg
xor
dec
add
js
mov
xorl
jbe
sbb
xor
sub
stos
lahf
out
sbb
and
dec
sbbb
lock
cmc
aaa
loope
push
repnz
dec
add
push
jns
sub
mov
orl
jl
cmpsl
jb
sahf
xchg
inc
mov
jmp
dec
or
orl
or
jae
int
std
or
imul
jle
pop
jle
ljmp
rcrl
adc
mov
test
jg
cmp
sbbb
mov
and
rorl
leave
cmpsl
cltd
mov
xlat
int
jmp
rcrb
dec
xchg
repz
push
out
sbb
sbb
xchg
fisubrl
add
fwait
mov
pop
jmp
movsb
in
xor
scas
fildll
cltd
aas
iret
adc
ss
loopne
in
roll
adc
xchg
divb
xor
dec
inc
cmpsl
idiv
push
pop
fistps
fwait
test
lods
and
cs
lahf
pop
rcrb
subb
aaa
outsl
outsb
pop
inc
rcr
cmp
orb
into
pop
fldl
lret
jp
aas
inc
or
cwtl
aas
cmp
test
das
xor
sub
dec
dec
lahf
add
adc
push
sub
jno
loop
cld
stc
push
or
push
xor
dec
xlat
int3
add
dec
test
add
inc
inc
dec
xlat
leave
or
pop
outsb
and
ja
gs
xchg
add
aas
imul
imul
fcompl
mov
add
gs
push
dec
mov
ja
cli
ds
add
outsl
sub
mov
movsl
stos
into
jno
in
jae
out
test
mov
sbb
popf
mov
int3
and
mov
and
sbb
pop
ds
imul
jne
rcl
fdivl
add
push
mov
es
cli
jg
fisttpl
inc
movsb
cmp
pusha
enter
test
shrl
xchg
dec
out
mov
fldt
sbb
or
xchg
into
pop
dec
add
or
xchg
lcall
pavgw
push
into
push
cmp
sbbl
fsubs
test
adc
cli
pop
fistpl
and
pcmpeqd
pcmpgtw
pop
ret
in
test
int3
jmp
cmpsl
int3
gs
mov
out
test
lds
dec
jne
mov
cltd
fbld
dec
rcll
shll
xchg
mov
lods
mov
dec
shl
mov
cmpsb
das
movsl
or
outsl
mov
lret
ss
repnz
xlat
cmpsb
or
into
stc
movsl
pop
jb
sbb
jno
mov
and
push
iret
push
mov
dec
test
popf
mov
sub
je
movsl
or
int
aam
movsl
add
aaa
cli
cmpsb
mov
and
cltd
mov
xor
arpl
insb
cld
mov
outsb
jg
pop
inc
mov
in
mov
outsl
mov
pop
sbb
ror
aad
mov
inc
out
arpl
lea
mov
shlb
pop
ds
jb
in
dec
mov
sbb
rcr
clc
xor
jnp
mov
add
popa
xchg
mov
stos
inc
jge
add
jl
mov
pop
out
fcmovnbe
sbb
test
cli
test
loopne
xchg
dec
mov
cmp
cmp
les
ds
xchg
sub
popf
xor
sub
in
stos
add
add
cmpsb
repz
subb
pop
cmpb
dec
outsb
or
in
pop
dec
sbb
test
divb
sarl
cli
lds
mov
mov
bswap
xor
roll
push
ljmp
sbb
inc
pop
or
mov
push
pushf
lea
sbb
sbb
daa
insl
mov
jb
push
adc
je
stc
out
out
out
xchg
not
mov
testb
mov
xchg
jecxz
scas
jl
fmul
out
mov
sti
movsb
xchg
in
jmp
or
in
mov
out
inc
and
mov
mov
push
filds
xchg
xchg
or
les
cld
mov
push
scas
add
test
push
dec
in
enter
imulb
jecxz
shrb
leave
arpl
pop
xor
out
or
jle
in
mov
test
jp
xor
lea
roll
jno
xor
mov
aad
out
cs
mov
pop
test
and
cs
push
ljmp
stc
ds
inc
insb
movsl
pop
leave
jge
insl
sbb
dec
pop
out
pop
bound
popf
ss
pop
stos
mov
movsl
in
push
dec
sbb
divb
pop
fildll
sub
jmp
inc
mov
iret
inc
xchg
sar
jp
sti
testl
fistps
test
inc
loope
loope
jae
pop
sub
nop
push
mov
jge
mov
inc
das
popf
push
mov
push
pop
imul
inc
pop
mov
insl
jl
lcall
jmp
dec
std
icebp
fistpl
fcmovnb
pop
jecxz
sbb
push
dec
push
lahf
push
loope
cmp
cld
popf
cmp
shl
ret
cmp
je
sbb
adc
subb
loope
lret
xchg
stc
test
mov
and
mov
adc
rol
push
mov
test
xchg
xchg
jne
jae
adc
xor
fidivrs
enter
aaa
ds
or
adc
adc
lea
add
sub
mov
inc
mov
inc
imul
test
sub
sub
sub
adc
cs
pop
js
sub
les
rcrl
mov
into
ja
xchg
dec
pop
lds
and
loopne
and
cmpsl
jne
decb
jbe
mov
xor
icebp
pop
push
jl
cmpsb
test
dec
mov
insb
hlt
aam
dec
enter
fs
in
pop
sub
std
shrl
xchg
pop
mov
adc
mov
and
cmpsb
mov
push
pusha
or
les
inc
fmuls
fldt
mov
gs
push
cwtl
sbbb
pop
stc
int3
or
insl
and
insb
lds
pop
mov
dec
mov
and
and
std
sub
mov
add
test
test
jecxz
movsb
bound
ljmp
pop
mov
jns
add
dec
pushf
inc
js
and
xchg
shll
pop
cmp
cmpsl
rcr
mov
outsb
lds
bound
mov
push
lcall
mov
push
shl
adc
or
je
mov
xchg
lock
jnp
mov
cld
int
sti
lock
je
xorl
fsubr
push
aad
push
repnz
mov
cmp
mov
rclb
push
adc
ret
ror
pop
repnz
xchg
gs
pop
nop
jae
pop
lock
sar
cmpsl
add
inc
mov
cmpsb
lds
leave
ret
les
cmpsl
sbb
mov
shr
pop
xor
nop
rcll
mov
ret
lahf
mov
fidivs
add
outsl
inc
pop
rcrb
stos
cmp
outsb
push
stos
fdivs
cmp
iret
popf
lahf
fsubp
mov
fdivs
or
lret
fisubs
push
cmpsb
adc
and
push
adc
mov
out
subb
cmpxchg
add
jns
push
mov
jne
jno
arpl
sub
or
fsubl
mov
fistps
pop
fistpll
popf
sbb
imul
neg
sub
iret
mov
dec
sub
mov
lds
sahf
out
imull
jmp
iret
daa
xor
mov
shlb
adc
fs
shlb
sbb
lret
jbe
mov
mov
inc
dec
js
scas
in
sub
outsb
out
jns
into
shrl
insb
test
dec
repnz
fmull
lods
into
test
pusha
idivb
sbb
mov
xchg
out
push
xchg
or
scas
std
dec
into
sbb
dec
div
jecxz
jo
int3
mov
push
pop
popf
mov
inc
xchg
call
fidivs
lret
movd
sahf
push
mov
sub
xchg
pop
push
fldenv
lahf
test
mov
out
mov
rcr
jns
mov
std
imul
outsb
jecxz
popf
mov
iret
and
and
and
mov
adc
movsl
add
mov
jmp
mov
outsb
add
loope
jle
gs
lahf
sbb
pop
es
cli
add
call
rcl
xorb
mov
lahf
das
jo
add
sub
sub
and
addr16
sub
adc
jle
ds
jg
push
inc
xchg
into
dec
cmc
jg
aas
or
lret
jno
adc
aad
xor
or
mov
scas
adc
cmpl
leave
cmp
or
mov
fsts
jne
imul
outsb
adc
repz
std
push
mov
and
test
sub
push
mov
jns
cmp
mov
xor
scas
cmp
decb
cs
adc
jge
ds
sub
movsl
mov
dec
addr16
ret
dec
es
jp
cmpb
mov
loopne
cmp
adc
inc
jmp
out
mov
or
mov
loope
fldt
inc
sub
add
lea
adc
sarb
scas
popa
out
aam
cmp
push
pop
jp
lret
and
imul
xor
mov
test
int
lahf
neg
xor
cmp
insl
mov
lcall
andl
lea
mov
mov
mov
inc
jns
iret
cltd
adc
fistps
xchg
mov
outsb
cmp
lods
push
in
ljmp
adcl
aas
jbe
outsl
bound
loopne
test
lret
and
cs
jmp
in
fcomps
jno
cmc
std
in
sub
arpl
sub
add
scas
fstpl
inc
test
in
cmpsb
iret
into
imul
les
pop
jbe
sub
movsl
fisttpll
loope
hlt
fwait
nop
mov
dec
mov
shrb
divl
inc
push
sar
sbb
pop
addr16
fsubl
xchg
push
dec
push
inc
shl
sbb
pop
loopne
inc
fucom
popf
sbb
les
clc
pop
cmpsl
mov
sbb
lahf
xchg
mov
cmp
xchg
mov
imul
movsl
into
adc
mov
movsl
test
pop
push
or
mov
faddl
pop
out
adc
rorb
cwtl
dec
inc
sub
xor
jle
xchg
jns
aam
cmp
adc
jae
lret
in
jle
jns
dec
js
fwait
mov
xor
push
int3
and
pop
sub
movsl
into
popf
lds
adc
mov
cwtl
jb
add
fildll
pop
jge
fsubrl
xchg
sbb
xor
fistpll
or
inc
push
sub
cmc
insl
xchg
dec
lcall
dec
inc
adc
add
sbb
inc
imul
lcall
dec
jl
push
fidivrs
dec
xor
mov
out
pop
icebp
or
mov
mov
bswap
xchg
cltd
fwait
gs
jecxz
mov
lahf
sbb
mov
aad
cmpsl
mov
push
mov
dec
lds
into
frstor
lret
adc
testb
arpl
push
jg
jle
adcl
call
scas
bound
pushf
lret
aaa
and
mov
add
jne
mov
or
loop
rcll
les
jp
push
ret
xchg
shlb
dec
repz
std
mov
pop
sti
pop
or
jne
in
cmpsl
mov
jo
fisttps
jbe
sub
scas
dec
test
insb
sub
mov
push
push
fstpl
mov
mov
pop
jo
mov
jno
dec
hlt
cmpb
sbb
stos
pop
ret
mov
andl
push
jne
xchg
jmp
and
and
mov
mov
sub
outsl
cmp
pop
lea
mov
xchg
xor
aad
lods
mov
sub
daa
pop
mov
lret
subl
test
cltd
dec
bound
negl
sub
outsl
xor
ret
mov
sahf
xor
fdiv
in
mov
addl
out
sbb
mov
movsb
adc
in
testb
shl
std
out
ds
and
out
aaa
in
insb
inc
jle
stos
stos
loopne
stos
xchg
or
loope
add
ja
pushf
loop
dec
outsl
mov
mov
xor
sub
rcll
mov
ret
mov
adc
andl
pushf
sbb
pop
jle
imul
pop
aad
imul
dec
gs
pop
enter
cmp
lret
bound
cwtl
sub
adc
cmp
loope
das
std
mov
test
xchg
repnz
fsubrs
dec
decl
div
idivl
leave
mov
ja
jle
dec
xor
out
lock
push
repz
mov
repz
addl
into
test
jno
test
mov
mov
lds
shr
mov
mov
pop
cltd
jl
jl
dec
cmpsb
gs
fdivrs
cmpsl
push
inc
repnz
test
sub
repnz
cmp
jmp
sbbb
pop
add
mov
sub
arpl
xor
xchg
jb
fldl
nop
stos
mov
add
mov
shl
mov
mov
xchg
xor
repz
cwtl
pop
cmc
pop
sbbb
mov
jb
testb
cwtl
mov
lret
dec
sbb
mov
bnd
test
lea
cmp
inc
stos
int
inc
or
sbb
fcomps
push
andb
stos
mov
xchg
ja
lock
sub
mov
sub
bound
add
lret
les
nop
out
hlt
inc
dec
dec
stos
mov
lea
cmp
xor
mov
insb
push
out
leave
mov
pop
popf
orl
xchg
inc
out
push
inc
shll
into
je
pop
cli
aam
mov
pusha
cmp
bnd
add
mov
test
pushf
ret
pop
out
cltd
or
aad
loop
aam
lcall
dec
add
xor
inc
xchg
add
daa
repnz
lcall
int
push
mov
pop
leave
jnp
leave
sub
add
and
push
and
lods
sbb
mov
clc
cld
mov
shr
orl
jno
cmp
dec
icebp
mov
mov
negl
pop
iret
xor
sahf
mov
jl
out
pop
insl
mov
out
test
xor
ds
lea
std
mov
repz
jmp
mov
fsubl
lods
insb
or
mov
mov
mov
xchg
push
xlat
insl
xchg
shlb
rclb
mov
or
fdivl
mov
lds
xchg
rcl
pop
cmp
mov
sub
add
dec
lods
add
insb
js
xchg
int
xchg
into
inc
scas
mov
jns
mov
sbb
cmp
pop
ljmp
dec
mov
fninit
cmpsl
stos
fcmovnbe
aaa
mov
in
or
shlb
pop
inc
aam
push
jle
xorb
out
push
mov
xor
jns
add
jle
push
mov
stos
xchg
fisubrs
mov
mov
adc
insb
mov
into
cmpsb
or
fiadds
add
into
in
push
xchg
es
test
xchg
jnp
movsl
xorb
nop
rol
mov
mov
pop
scas
xchg
cmp
or
pop
mov
mov
add
dec
push
xchg
dec
mov
jo
jg
inc
in
xchg
inc
sub
lods
ljmp
inc
jb
movsl
dec
jae
inc
or
imul
mov
in
ret
pusha
je
fwait
dec
sub
mov
aad
xchg
jnp
jmp
and
pop
and
mov
fimuls
lods
mov
leave
push
mov
xchg
xor
cs
in
lods
push
sub
jecxz
or
lret
add
dec
lea
ljmp
stos
loopne
movsb
pop
dec
movsl
mov
pop
inc
mov
mov
aas
lret
push
jne
rorb
std
addr16
in
xchg
cmp
in
out
bound
insb
jns
mov
mov
cmp
and
push
mov
mov
int3
sahf
dec
out
sahf
test
fsubrl
mov
lcall
icebp
push
mov
subl
stc
xchg
and
jmp
and
iret
popf
call
out
or
out
int3
sti
scas
or
mov
cld
lds
or
dec
dec
iret
out
lahf
push
shl
gs
out
popl
mov
add
scas
into
and
lds
icebp
and
into
loope
fcoml
lods
push
mov
dec
inc
es
shl
xor
fisubrs
pushw
repnz
dec
call
pop
or
fisttps
cmc
and
mov
andl
dec
and
xchg
or
stos
rorb
lahf
cld
shl
imul
ret
mov
or
jae
mov
xorl
dec
je
es
and
push
sub
inc
lcall
testl
sub
decl
sahf
test
fisttpll
mov
inc
sbb
icebp
fsubrs
or
lds
dec
into
mov
orl
or
dec
call
inc
jmp
testl
xor
inc
lret
shll
mov
sub
rolb
mov
lcall
addl
popf
jp
xchg
mov
sti
xchg
pop
fdivl
adcl
mov
jne
sahf
arpl
outsl
dec
cmp
aam
es
popf
and
sar
jecxz
dec
sahf
jecxz
mov
jmp
sar
dec
ljmp
sub
jle
jmp
shll
lahf
sbb
mov
xlat
popa
sub
in
fdivrl
xor
std
xorb
add
sarb
or
or
mov
cwtl
sahf
fidivrl
sub
test
lahf
stc
pop
stc
xor
dec
sbb
shl
insl
mov
sub
adc
pop
push
iret
imull
test
sbb
and
ds
add
sahf
insl
mov
ja
sbb
or
movsl
add
xor
fnstcw
stos
pop
pop
aaa
cmp
mov
inc
push
inc
insl
mov
into
jmp
sahf
fistpl
test
inc
popf
fxch
mov
sahf
jmp
pop
sub
add
sub
cmpsl
test
lods
outsb
dec
or
xor
out
or
adc
jge
xor
add
scas
int
jge
neg
fcompl
fcmovne
cltd
aad
iret
ret
and
sub
lods
dec
lea
fcompl
subb
and
cld
cmp
scas
dec
sahf
sbb
ds
das
xor
xor
inc
sbb
pop
nop
fmull
dec
insb
movsl
fcomi
xor
bound
xchg
es
cwtl
enter
imul
outsb
filds
mov
mov
jb
jae
notl
add
enter
fmull
subl
int
push
or
subb
sub
ficomps
loopne
add
or
xor
dec
inc
fbld
sbb
sahf
dec
xchg
in
push
jle
iret
mov
mov
add
dec
pop
fmuls
add
pop
jecxz
fucom
ret
sahf
mov
push
gs
frstor
sarb
lahf
add
in
xlat
shlb
add
xor
movsl
and
rcll
adc
iret
inc
sbb
orb
xor
stos
lcall
pop
sbb
movsb
adc
mov
sbb
sahf
sbb
ja
pop
insb
xchg
fsubrl
movsb
mov
ret
or
movsl
jge
adc
sti
or
addb
push
adcb
lods
push
popa
xchg
shrb
iret
cli
scas
addl
insl
push
std
popf
or
sub
rcrb
aas
xchg
mov
sub
dec
das
fistpll
mov
scas
mov
lea
pop
enter
out
lods
ffree
scas
sbb
int
fcmovu
jl
fs
stos
adc
add
int
lahf
add
popf
fadds
cmp
mov
sub
xchg
dec
in
lock
scas
mov
shl
int
ljmp
subb
push
mov
imull
dec
popf
xchg
leave
cmp
lods
mov
mov
mov
in
xchg
fwait
cld
out
xchg
pop
jmp
sub
pop
or
lret
push
add
out
push
xchg
jge
dec
inc
inc
inc
add
jp
jae
movsl
int3
pusha
push
stos
cwtl
test
pop
pop
mov
lock
sbb
cmp
inc
out
call
fdivl
lret
dec
mov
mov
ret
mov
mov
in
cmp
xchg
dec
cli
pop
test
dec
and
clc
inc
js
mov
mov
scas
cs
add
into
mov
jmp
std
mov
mov
and
lods
shrb
ret
sbbb
dec
xchg
sbb
lods
adc
inc
enter
call
bound
mov
mov
dec
aas
into
inc
dec
ret
and
icebp
mov
icebp
jle
jg
fcmovnb
into
mov
into
idivl
and
mov
push
outsl
sarb
or
add
push
pop
leave
lods
out
test
or
and
and
mov
lea
test
int
pusha
out
push
dec
pushf
ret
xor
inc
xlat
neg
mov
test
adc
inc
cltd
cmpb
adc
jg
mov
test
sub
push
xor
sub
or
mov
dec
addr16
popf
jbe
mov
stc
pop
mov
sti
sub
mov
popa
or
shrb
mov
out
scas
lock
xchg
push
jge
cmpsl
cld
and
stc
push
cmp
mov
in
dec
push
mov
mov
mov
push
roll
jmp
mov
or
jo
mov
push
aam
and
pop
jp
jle
pushl
dec
out
aaa
outsb
pop
pop
jge
sbb
jg
add
sarb
andl
jae
cld
lea
out
shr
jo
jg
sbb
jb
ljmp
mov
test
loopne
orb
popf
mov
nop
or
fisttps
add
push
es
outsb
mov
shr
push
into
mov
scas
enter
xchg
shr
vcmpss
scas
std
mov
fcomps
scas
sub
ja
lahf
xor
pop
xchg
sti
cmp
repnz
test
lods
lret
add
iret
lea
es
cltd
mov
or
rorl
inc
sub
sbb
jg
mov
mov
in
inc
in
pop
push
das
fcompl
mov
xor
outsb
pop
fst
xchg
pop
jge
notl
xchg
sahf
arpl
dec
adc
fildll
rcrb
stos
xchg
xchg
fwait
rcrb
pop
mov
xor
lahf
andl
std
andl
dec
jbe
gs
inc
cld
sub
jge
lret
pop
addb
cmp
mov
xor
xchg
shlb
sub
lret
leave
mov
jbe
mov
adc
mov
mov
or
jge
xor
inc
into
loope
mov
pop
mov
ss
arpl
mov
mov
adc
xchg
xchg
dec
and
das
lret
mov
leave
js
mov
fdivs
xchg
mov
fs
aaa
push
fbstp
fxch
gs
jbe
and
leave
addr16
movsb
stos
in
test
lods
ds
cmc
dec
and
leave
jnp
or
mov
mov
mov
adc
inc
adc
xchg
adc
insb
cmpsl
jae
mov
and
inc
lret
lods
mov
jge
xor
xchg
mov
idiv
lcall
iret
cmp
fidivrl
dec
xor
mov
mov
mov
adc
aas
lcall
jbe
add
inc
xchg
xlat
arpl
bound
and
std
loope
jbe
rcrb
jle
cmp
jbe
fiaddl
dec
repz
sub
mov
cli
pushf
rcll
jbe
xor
aad
sub
stos
pop
test
mov
nop
mov
mov
dec
cmp
mov
rorl
push
shrl
dec
fisubs
push
lods
fstps
jp
jo
add
push
fs
pusha
loope
add
and
movsb
push
out
xor
sar
xchg
test
cmc
pop
and
mov
ret
ja
arpl
push
leave
jo
sub
cmp
lods
movsl
repz
into
jg
mov
repnz
xor
dec
sbb
adc
add
lahf
mov
and
fs
cmpsl
sbb
sub
jmp
push
mov
sbb
fs
imull
insl
mov
out
mov
inc
repnz
mov
mov
clc
inc
mov
in
repnz
loopne
insb
add
lock
out
mov
push
repnz
loope
insb
add
lock
add
stc
sub
or
fs
subl
mov
lods
stc
repnz
add
xchg
sub
and
popf
insb
add
dec
sub
sbb
in
and
cmp
pop
adc
jmp
inc
cltd
push
aas
xchg
sbb
mov
add
push
in
popf
test
push
adc
out
scas
pop
ror
gs
mov
movsl
inc
dec
out
pop
mov
in
adc
or
sub
dec
shld
dec
insl
test
mov
and
test
out
int
add
mul
jnp
mov
add
repz
jge
jge
or
int3
jbe
mov
outsb
bound
add
test
jle
jl
add
and
dec
data16
mov
push
inc
xor
mov
arpl
lret
shrb
popa
imul
lahf
pop
jl
dec
and
and
xchg
jb
out
outsb
aas
xchg
movl
pop
dec
push
repz
addb
mov
inc
enter
pop
lret
lret
push
lret
fisttps
int
pop
scas
inc
ljmp
push
aad
addr16
pushf
push
insb
jns
in
xchg
outsb
jp
mov
insb
cs
dec
jne
jo
add
push
xchg
xor
inc
mov
cld
mov
xlat
je
inc
repnz
out
cmp
test
aaa
mov
mov
out
sahf
iret
mov
mov
out
fwait
inc
mov
mov
jns
out
adcl
mov
jae
repz
sbb
dec
iret
in
rolb
dec
xchg
sub
sti
or
mov
mov
insl
or
mov
pop
es
add
pmulhuw
jno
fcomps
pop
stos
add
ret
cmp
orl
repnz
repnz
dec
adc
xchg
dec
pop
repnz
dec
sbb
popf
dec
pop
cmc
mov
stos
enter
mov
fsubl
in
pop
in
sbb
mov
lock
stos
test
sti
adc
jle
add
cmp
fadd
sti
pop
inc
add
add
pusha
test
jno
push
mov
es
lea
cld
lcall
sub
subb
in
cmp
out
insl
sbb
and
mov
pusha
sub
insl
jp,pt
or
sbb
jnp
dec
scas
ja
jae
ljmp
inc
mov
out
test
add
negl
rolb
mov
sub
push
incl
in
sub
add
adc
adc
insb
or
pushf
or
fsubrs
mov
inc
push
inc
sar
xor
nop
add
sahf
cltd
or
out
xchg
xor
outsb
neg
xor
mov
mov
dec
inc
and
xor
xor
jg
sbb
arpl
mov
and
push
cwtl
mov
out
roll
sub
xor
xchg
adcl
fildll
out
inc
into
shll
lret
leave
mov
in
negl
pop
fwait
pop
mov
or
negl
test
xchg
jg
cs
dec
testb
insl
pop
mov
or
mov
dec
lds
sub
pop
movsb
mov
test
outsb
fs
mov
adc
pop
movsb
fwait
push
pop
sub
pop
pop
scas
je
jmp
pop
push
push
fwait
shl
aas
lock
add
ss
test
in
add
xchg
jb
push
cmp
inc
jle
enter
aam
in
fsubl
fwait
xchg
rcrl
mov
adcl
push
mov
xchg
pushf
rorl
insl
sbb
arpl
ljmp
xor
shll
nop
adc
dec
movsl
loopne
fldl
pop
mov
pop
sbb
mov
pop
pop
and
add
jbe
dec
ret
jno
les
fstpl
pop
sbb
lahf
jge
mov
sub
mov
out
test
inc
frstor
bound
js
jl
add
mov
outsl
xchg
xor
imul
cmp
pop
cmc
in
shl
int
in
sbb
mov
out
add
je
xadd
adc
inc
push
aas
shrb
leave
popf
out
enter
sub
add
in
in
dec
cli
mov
in
push
in
subb
loopne
ret
xchg
decl
insl
lret
enter
shrb
adc
addr16
dec
out
mov
pop
mov
jge
mov
push
scas
bound
dec
or
fcmove
jge
mov
sub
cmp
mov
popf
test
lea
outsl
shlb
mov
push
and
test
das
sbb
fldenv
dec
cmp
add
and
add
into
lock
subb
cmp
ja
lahf
call
pop
scas
in
mov
push
lods
xchg
sub
cmp
movsl
roll
cmp
mov
mov
push
ja
pop
imul
push
into
test
cmpsl
dec
xor
inc
mov
xor
inc
fiadds
add
shrl
mov
and
add
cmc
dec
add
adc
mov
dec
lods
bound
sbb
fcom
std
imul
sub
ja
lahf
je
pop
gs
dec
mov
mov
lahf
sarb
inc
mov
push
jnp
popa
imul
sbb
mov
adc
rorl
jle
sbb
push
into
leave
dec
cli
fsubrl
shlb
mov
dec
dec
pop
and
dec
nop
lahf
loopne
in
fisubl
pop
dec
push
es
inc
mov
mov
push
fcmovu
or
shl
jno
mov
add
cmc
push
aaa
rclb
or
sarb
pop
dec
mov
out
sub
aad
movsb
mov
push
inc
rolb
imul
enter
mov
sub
fildll
mov
sbb
lret
rcrl
adcl
xchg
mov
je
add
dec
cmp
aam
test
push
movsl
cmpsb
inc
dec
or
fs
adc
scas
push
and
or
inc
sahf
nop
rol
imul
enter
pop
fldcw
mov
jns
mov
push
scas
outsb
and
add
std
dec
mov
inc
loope
ror
jne
mov
data16
adc
lahf
int3
rcrl
add
shll
rclb
add
inc
imul
testb
sarb
gs
dec
adc
or
fsubrp
scas
push
and
or
inc
sahf
cwtl
sarb
cmp
dec
cs
jmp
cmpl
popa
scas
xchg
and
add
xchg
es
jmp
push
ss
add
add
or
dec
mov
mov
push
fcmovnbe
std
jnp
and
cmpsb
dec
mov
jne
sbb
inc
push
xor
cltd
imul
ja
lahf
mov
sbb
dec
js
add
scas
ljmp
stos
shlb
xor
cs
in
lods
push
sub
pushl
cli
jb
fistpll
mov
push
add
sub
inc
es
shlb
xchg
and
mov
mov
sbb
dec
js
add
dec
icebp
or
faddp
scas
out
mov
mov
xchg
cmp
sub
lods
push
sub
pushl
cmc
fisubl
jns
mov
push
dec
xchg
pop
sub
aaa
ja
lahf
in
shl
imul
pop
insl
lods
mov
dec
jnp
pusha
lahf
adc
inc
gs
inc
xchg
popf
mov
enter
sub
jae
pop
imul
sbb
mov
cwtl
dec
les
or
sub
add
into
mov
lea
rorb
gs
pop
adc
fmulp
scas
ljmp
mov
and
sub
daa
shrb
out
icebp
jnp
cmp
cmpsb
dec
scas
xor
pop
rolb
sbb
inc
imul
ljmp
xchg
dec
rorb
push
xor
cs
icebp
dec
or
cmpsl
xchg
in
dec
mov
pop
lods
xchg
sub
add
lahf
and
movsl
xlat
inc
orb
fidivrs
mov
push
pop
imul
push
enter
scas
movsl
xchg
dec
rorb
jle
adc
add
into
mov
into
scas
imul
pop
pop
stc
lods
ss
jecxz
call
subl
dec
es
mov
and
xchg
cmpsb
sub
ja
lahf
je
popa
gs
dec
inc
xor
mov
test
mov
sbb
imul
push
enter
arpl
mov
enter
pop
icebp
lods
or
lds
stos
fbstp
xchg
sbb
ffreep
mov
xchg
sub
ja
lahf
je
popa
gs
dec
movsb
aam
andl
pop
mov
push
jnp
popa
imul
push
enter
fs
mov
sbb
sbb
or
aad
ljmp
mov
rorb
gs
pop
fisttpll
push
fists
push
shlb
movsl
sbb
mov
adc
cmp
cltd
imul
enter
rcrb
mov
push
sti
iret
lods
cmpsb
sub
ja
lahf
sub
mov
xlat
inc
lock
xchg
bswap
jno
mov
mov
mov
push
ret
rorl
fists
rolb
int
jno
dec
cli
enter
dec
sbb
push
mov
and
scas
push
and
adc
inc
popf
xchg
idivl
in
out
int
ljmp
or
filds
add
jge
ja
mov
dec
es
sbb
sbbl
lds
loop
iret
lret
mul
push
fwait
ror
lods
popf
mov
sub
ja
lahf
or
pop
gs
dec
inc
insl
repnz
inc
sbbl
xor
sbbb
rcrl
mov
mov
imul
pop
add
cmp
sub
dec
pop
daa
mov
mov
sbb
and
cmpsl
aad
mov
dec
aad
mov
loope
mov
loope
push
fbstp
hlt
push
push
xchg
movsl
or
mov
lcall
push
arpl
lds
dec
and
mov
pop
movsl
nop
push
xlat
mov
cmpsb
cs
lods
mov
neg
orb
sbb
mov
ss
cs
cmpsb
clc
rorb
adc
mov
daa
iret
frstor
xor
test
mov
push
popa
xorb
dec
jg
es
ror
xor
mull
xlat
xchg
inc
ds
cmpw
sbb
sbb
inc
mov
fcoms
gs
pop
jl
aam
mov
fisttps
lcall
jbe
pop
out
sbb
lds
repz
in
sub
dec
sbb
test
sbb
inc
xchg
xchg
xor
xchg
adc
or
pushf
cmp
filds
push
dec
inc
pusha
or
or
add
xor
out
lret
pop
fimull
imul
mov
rclb
jns
repnz
hlt
sbb
xlat
cltd
stos
xchg
mov
loope
add
jne
es
pop
out
aas
jbe
loopne
push
loope
scas
push
push
lods
loop
mov
mov
dec
icebp
outsl
mov
dec
cmpsl
scas
cmp
movsl
loope
test
mov
cmc
imul
fnstcw
mov
pop
or
lahf
mov
sub
push
sub
pop
pop
ficoml
or
push
dec
out
fdiv
pop
push
lret
mov
or
sub
xor
mov
sbb
ds
jmp
out
pop
imul
cmp
out
xchg
adc
jge
ljmp
xor
mov
outsb
push
out
sahf
int3
popl
dec
push
outsl
mov
or
xchg
ja
jmp
cmp
into
dec
or
push
or
sbb
fmuls
mov
aas
xchg
push
ds
stos
fildll
and
sbb
or
lret
in
xchg
push
into
mov
ds
int
and
xor
sub
iret
inc
xor
xchg
xchg
iret
push
dec
pop
mov
mov
jne
sub
push
sbb
fldl
inc
pop
aad
es
jbe
xlat
stos
cmpsb
outsb
fimuls
adc
hlt
jmp
fucom
test
lea
pop
mull
int
push
jmp
fwait
ja
push
dec
iretw
mov
fbstp
push
mov
or
inc
sub
add
mov
test
mov
mov
mov
ret
mov
cmp
push
mov
jmp
pop
or
push
mov
cmpsb
mov
push
mov
cmp
add
lock
sahf
and
xlat
aad
xor
out
fisubs
pcmpeqd
xchg
std
push
mov
xlat
dec
sub
inc
push
or
es
lret
dec
dec
cmpsb
ds
mov
mov
ljmp
rolb
jge
mov
nopl
lcall
inc
scas
test
or
std
aaa
sahf
jbe
js
mov
mov
inc
xchg
mov
fidivrs
mov
lea
add
xorl
adc
loop
push
out
ljmp
sub
or
jnp
out
lods
push
div
bound
ja
pop
or
xor
and
popl
scas
gs
push
inc
xor
fbld
in
inc
inc
sbb
imul
and
pop
mov
pop
adc
mov
mov
das
or
lods
xor
push
lcall
sub
dec
mov
aaa
cmpsl
jae
cmp
test
inc
leave
cmpsl
jae
pop
push
mov
insb
out
sub
jns
enter
sbb
cmpsl
jae
add
test
insb
cmpsl
jae
mov
jl
leave
and
jle
pop
jne
mov
sbb
daa
shl
dec
fs
inc
dec
sbb
mov
addl
mov
mov
inc
jb
mov
dec
sub
dec
jne
cli
test
push
les
out
in
lock
sarb
xor
mov
popf
jno
divb
mov
cmp
test
subb
jp
sbb
das
test
call
jmp
mov
call
repnz
fildl
mov
jg
sub
cs
stc
adc
dec
aad
sbb
adc
dec
lds
ljmp
inc
mov
push
scas
mov
fstpl
or
pop
push
or
sbb
outsb
or
pop
pop
or
pop
dec
or
pop
mov
or
pop
sahf
or
pop
mov
jbe
js
aad
fs
xchg
iret
and
sub
cs
pop
push
or
pop
push
add
and
mov
mov
fdivrs
aaa
fdiv
xchg
sub
adc
test
jecxz
jmp
fisubrs
pop
pop
mov
inc
cmpsb
sar
mov
test
sub
push
pop
movsl
lret
shl
mov
ficoml
call
cli
add
int3
cli
in
jae
pusha
adc
push
js
xor
jl
xor
jl
xor
fcmovnu
jb
pop
dec
xchg
cmp
cmc
jbe
jae
aad
fs
lea
int
sub
fisttpll
cmpb
in
rolb
int3
mov
adc
dec
idivb
lods
dec
mov
pop
addb
ss
loop
adc
mov
mov
mov
fnsave
mov
xor
jbe
inc
pop
or
das
xlat
ja
adc
bound
outsb
mov
ss
loop
mov
and
push
sbb
sbb
push
popf
pop
rorb
mov
mov
dec
bound
scas
inc
fsubl
daa
cld
push
stc
repz
push
dec
jb
ficoms
int3
xor
add
mov
out
jg
hlt
ds
popa
enter
mov
mov
pop
mov
ret
fisttpll
jle
push
and
push
test
notl
cmp
aaa
mov
mov
xlat
clc
mov
mov
out
dec
inc
insb
bound
rcrb
inc
cmp
mov
sbb
mov
std
adc
xchg
mov
dec
mov
dec
dec
add
js
inc
pop
and
call
enter
cwtl
adc
and
out
mov
mov
pop
sbbb
loop
icebp
xor
sub
rorl
sbb
cld
psubw
mov
mov
stc
inc
sti
jb
and
inc
lock
imulb
jae
xchg
int
push
push
nop
rolb
rcrb
push
push
mov
jo
mov
mov
push
subl
add
cmp
add
aaa
subb
bound
fisubs
jg
jl
jp
loope
jg
jg
jnp
jnp
ja
ja
shrb
xchg
mov
push
push
repz
xor
aas
add
nop
dec
fstpt
scas
mov
test
xlat
fisubs
and
sub
mov
mov
clc
sti
mov
scas
add
lods
pop
mov
out
push
mov
out
idivb
jp
jnp
jbe
ja
and
or
mov
jecxz
add
rcll
adc
ret
adc
dec
mov
hlt
xor
imul
mov
arpl
test
adc
xor
je
and
push
fsubrl
or
mov
leave
push
mov
fsubr
push
and
shlb
mov
xchg
mov
lods
test
mov
hlt
pop
cli
popf
into
shll
je
and
push
sub
or
pop
mov
or
pop
orb
repnz
rorl
inc
bnd
mov
pop
cld
popf
decb
insl
stc
cmp
jge
sub
dec
stc
sbb
pop
stc
or
sub
stc
jmp
or
stc
lret
cld
in
stc
mov
mov
fldl
jnp
pop
lock
icebp
pop
negl
lock
jge
sub
dec
lock
pop
lock
sub
lock
or
lock
imul
lock
jge
jns
jle
jne
jp
jno
jno
jae
jno
jae
jno
and
lods
jnp
pop
pop
testl
cli
cmp
neg
cli
sbb
idivl
mov
shlb
mov
mov
adc
insb
sub
sub
pop
sub
sti
mov
sub
in
sub
stos
mov
fsubl
add
mov
mov
pushf
mov
sarb
rorb
rcrb
shrb
jnp
push
lcall
adc
fldln2
jb
mov
scas
pop
ret
lock
mov
adc
cmp
jl
sub
pop
loopne
aad
add
and
test
call
adc
test
sahf
push
rol
test
adc
mov
pop
loope
mov
jns
jb
or
bound
jl
xor
xchg
mov
lret
mov
sub
mov
mov
fdivl
mov
mov
xor
pushf
xor
insb
sub
sub
pop
sub
sti
mov
sub
in
sarb
jbe
loope
jne
push
jl
jb
or
pop
sub
out
lods
mov
clc
pushf
mov
clc
mov
sti
cli
outsl
jo
aaa
fmull
fdivrp
test
scas
cmc
jne
mov
icebp
push
negl
adc
add
inc
insb
and
movsl
insb
ret
mov
test
cmc
addr16
notb
xchg
push
lea
cmpsb
push
insl
adc
push
dec
adc
dec
sub
sbb
dec
out
cs
cli
aas
mul
cli
maskmovq
cli
pop
test
hlt
jo
movsl
lret
iret
pushf
xchg
fcmovnu
mov
cli
mov
hlt
push
stos
insb
sub
xor
mov
sub
add
fistpl
cmc
xchg
mov
lds
inc
xor
mov
sub
dec
jl
xor
adc
arpl
sbb
adc
sub
and
cmp
out
jge
xor
mov
pushf
sbb
nop
cmpsb
mov
or
xchg
int3
into
mov
and
inc
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
lods
insb
aaa
mov
cltd
insb
mov
mov
or
aad
xchg
or
mov
cli
fwait
hlt
dec
cli
xchg
xor
cmp
mov
lret
stc
or
leave
xor
and
addr16
arpl
loop
inc
fisubs
rcl
adcl
add
addr16
mov
out
mov
out
mov
out
jne
mov
test
test
mov
aaa
rcr
xchg
pop
enter
shrl
insb
mov
mov
jne
ja
insl
insb
bsr
pop
mov
lods
insb
lret
mov
cltd
insb
fstpt
mov
cmc
sub
stos
ljmp
mov
pop
sbb
arpl
or
pop
insb
or
pop
fs
pop
pop
or
pop
push
or
inc
movsb
call
cld
sbb
int
adc
stc
mov
in
stos
test
pop
out
jne
mov
push
adc
dec
and
adc
adc
adc
add
adc
dec
lds
ljmp
adc
mov
mov
mov
outsb
testl
lods
xor
or
jg
pop
xor
jl
xor
mov
es
stc
shlb
icebp
rorb
mov
xlat
int
test
ror
cltd
inc
bound
rolb
dec
rclb
cmp
shrb
std
shlb
cmc
sarb
in
lret
in
clc
mov
jg
loope
orl
int
pop
xchg
ja
into
sub
hlt
inc
cli
imul
cli
arpl
xor
cli
jae
and
mov
sub
xor
push
xchg
xlat
push
mov
out
adc
rorl
xchg
stos
pop
jge
jge
scas
sub
add
jbe
push
fsubl
or
xchg
push
xchg
loop
imul
repnz
in
adcb
xchg
xor
fisttpl
jl
xor
insb
xor
jge
xor
jl
xor
jl
xor
jl
xor
jge
xchg
nop
mov
rcll
fdivrl
or
fstpl
or
pop
push
sub
pop
stc
or
jecxz
ss
mov
adc
sub
outsb
jl
ss
and
mov
fucom
xchg
bswap
mov
mov
fs
cmp
std
test
jnp
jnp
jbe
ja
jb
xchg
xlat
cmp
mov
adc
outsl
mov
aaa
jg
stos
push
cmp
sahf
int
and
aas
int
jmp
mov
add
cmc
mov
or
mov
mov
fnsave
leave
inc
outsb
push
das
idiv
imul
ljmp
sub
js
add
lret
jecxz
sahf
dec
xlat
fcoml
inc
test
mov
mov
pop
pop
mov
out
scas
mov
movsb
sahf
ret
fcoms
cmp
push
fists
xor
enter
xchg
jle
pop
imul
mov
ljmp
out
clc
test
or
jne
int
sti
mov
adc
mov
das
lea
lahf
fs
pop
iret
cmpsb
mov
add
pop
mov
xor
lahf
xor
xchg
rolb
js
jp
jae
jb
jb
xchg
pusha
sub
std
xor
push
outsl
subb
arpl
leave
or
mov
sub
sbb
mov
pop
sbb
enter
pusha
cmpsb
and
into
into
loopne
cltd
xorb
adc
ret
cmp
movsw
mov
dec
jge
pop
out
js
nop
mov
mov
ja
sbb
int
nop
call
popf
adcl
jecxz
mov
sti
sub
outsl
lret
or
rorb
jb
pop
jbe
jge
js
inc
push
fldl
dec
push
call
jge
inc
pop
or
inc
or
mov
adc
ret
fldenv
mov
jecxz
aas
mov
mov
jge
and
adc
sub
gs
push
cmc
iret
xchg
dec
pop
enter
lcall
fimuls
push
out
std
aaa
pushl
sbb
sub
loopne
add
int3
neg
mov
xchg
xchg
shlb
dec
rcl
adc
lret
es
fists
sub
xor
or
test
dec
pop
daa
test
mov
or
jp
das
adc
arpl
push
jno
add
and
stc
fdivr
sbb
into
cld
jmp
shrb
sbb
shll
dec
negl
cli
push
enter
sahf
mov
sti
mov
stc
pop
jp
dec
testb
int
xor
scas
mov
nop
mov
lods
roll
dec
dec
insl
pop
sub
sbb
push
pop
mov
je
inc
fldt
sbb
xor
jno
pop
scas
ret
jo
aad
movsb
pop
movsl
das
call
mov
cmp
push
dec
sub
cmp
xor
or
mov
adcl
add
mov
movsb
out
adc
xor
nop
rclb
dec
ljmp
xor
mov
fdivrl
cld
scas
scas
js
inc
xor
sbb
mov
and
and
fwait
xlat
insb
xchg
mov
shrl
mov
test
inc
cld
imul
inc
scas
jae
push
jp
rorl
or
pop
outsb
mov
les
ds
jno
jb
jno
jb
inc
push
outsb
in
sbbb
inc
lods
sbb
or
adc
mov
popa
inc
mov
push
faddl
jo
jae
orl
dec
push
outsl
outsl
push
aas
push
mov
xchg
insb
sarl
stc
insb
sti
outsl
es
insb
stos
inc
lret
add
frstor
pop
pop
jo
dec
xchg
adc
jge
pop
xor
adc
clc
in
pop
jle
fcoms
sbb
jecxz
cwtl
adc
pop
sbb
insb
ljmp
inc
mov
ret
xor
pop
out
std
idivl
lock
xchg
jecxz
imul
cmpsl
loop
jg
enter
jge
notl
dec
xlat
or
aaa
xchg
lods
mov
pop
or
out
call
mov
addr16
sti
mov
xchg
jle
and
leave
jmp
mov
sahf
aam
mov
push
das
xchg
mov
mov
pop
std
sahf
test
bound
idivl
and
inc
mov
xchg
pop
push
add
push
mov
ss
cltd
push
mov
ljmp
test
xchg
ljmp
mov
das
repz
fstpl
pop
xor
insb
sti
call
cld
ja
sbb
pop
hlt
xchg
jbe
sbb
fmul
push
cmpsb
push
xchg
push
and
jmp
idivl
andl
arpl
dec
test
rclb
int3
jae
shll
jnp
js
and
inc
loopne
xor
nop
inc
popf
adc
sub
inc
mov
out
jno
mov
int3
mov
rcr
push
not
mov
xor
sbb
dec
cli
xchg
hlt
inc
cli
imul
test
adc
jmp
stos
shl
mov
aad
lea
lds
ja
push
leave
shl
aam
mov
stc
sbb
call
sarb
icebp
test
add
add
mov
in
mov
xchg
icebp
loope
testb
daa
sbb
sbb
inc
shll
mov
loope
sub
mov
xchg
mov
dec
mov
enter
xchg
push
shlb
pushf
ret
or
cmp
jmp
xchg
hlt
ss
test
jno
pop
mov
mov
call
out
out
lahf
pop
inc
inc
xor
push
data16
enter
cmp
pop
aad
xchg
pushf
out
dec
inc
xor
int
jbe
sub
dec
or
jae
pavgw
inc
repz
mov
pushl
test
cmc
aam
jmp
mov
jp
jl
jae
xchg
mov
cmpsb
jae
push
sub
mov
and
mov
test
sub
push
fsubrs
test
and
push
adc
or
push
cli
dec
adc
push
jo
ds
pop
ljmp
js
xchg
mov
sti
in
mov
xor
xchg
data16
lds
nop
pop
push
jno
subb
pop
aaa
jbe
arpl
sub
cmpsl
inc
call
jns
inc
mov
jp
sbb
inc
jb
inc
xchg
outsb
mov
dec
scas
imul
test
in
cmp
lds
cltd
adc
sub
arpl
mov
add
js
imul
cmp
sarl
out
enter
aad
test
xchg
and
cmp
mov
sub
jg
clc
push
jns
int
adc
xor
jb
and
inc
dec
adc
or
jo
mov
mov
xor
ja
out
jmp
pop
aad
out
jne
lahf
push
fiaddl
ljmp
xchg
movsb
in
rol
mov
aaa
data16
jge
mov
jno
adc
daa
into
in
aam
test
in
cli
mov
sub
or
and
pop
push
push
xor
mov
rorb
fisubs
or
popl
sbb
pop
jnp
xor
inc
dec
outsb
icebp
pop
bound
sub
stc
aad
sbb
inc
adc
in
daa
int
pusha
int3
push
stos
int
jge
mov
xor
mov
gs
xor
scas
jb
push
pop
out
addb
mov
aad
push
sub
shll
lds
rcr
jno
mov
icebp
popa
cmp
inc
sbb
fildll
inc
movsb
lcall
daa
mov
mov
pop
movsl
inc
cmp
cmpsb
lods
mov
pop
cmp
mov
jae
pop
insb
daa
sarb
cmc
xor
mov
out
pop
inc
and
lret
inc
ret
xchg
test
lods
cs
sbbl
pop
sub
inc
push
inc
js
mov
xor
dec
popf
adc
cmp
loope
pusha
cwtl
push
sbb
ret
lret
or
adc
adc
cs
jno
jne
imul
xchg
std
fnstcw
mov
mov
sti
mov
jecxz
pop
adc
mov
int
lods
jb
andl
xchg
mov
fldcw
sarl
adc
pop
pushf
pop
fbstp
cmp
std
pop
sbb
or
lahf
cmp
mov
push
add
loopew
mov
jo
push
sbb
ret
shll
shll
sub
jae
adc
clc
mov
repnz
mov
out
outsl
pushf
mov
daa
pop
les
and
xor
adc
lret
add
es
enter
jae
sub
or
pop
sbb
pop
inc
adc
xor
frstor
pop
inc
pop
std
int
pop
or
lock
inc
mov
mov
jle
roll
adc
dec
add
or
int
ljmp
scas
fimull
mov
sbb
test
mov
test
jecxz
aas
mov
rcrl
push
cli
mov
or
adc
and
sbb
cmp
xchg
jmp
subb
fldt
pusha
rcrl
orb
and
pop
cltd
xor
inc
aad
scas
icebp
addr16
das
dec
jl
sarb
sbb
std
cmpsl
repnz
push
aaa
push
lea
inc
scas
movsl
sbb
dec
cs
push
mull
imul
js
daa
and
cmp
mov
aaa
inc
lods
std
cltd
ss
push
cli
loop
mov
pushf
cwtl
mov
or
sahf
pop
pop
loope
mov
addr16
jge
insb
dec
pop
jae
adc
adc
int3
icebp
mov
paddd
ljmp
sbb
fdivrl
inc
cli
adc
andb
cmp
sbb
xor
cltd
mov
std
cmc
xor
mov
stos
in
inc
mov
insb
fmull
int
pop
push
dec
pop
fsubrl
aaa
stos
push
jns
lea
icebp
out
mov
push
repnz
pusha
pop
mov
jnp
and
pop
dec
in
xor
inc
sub
mov
lods
push
pop
dec
clc
iret
movsl
aas
sub
sbb
mov
repnz
out
lds
push
adc
xchg
mov
xchg
pop
stc
stc
cld
xor
add
shr
xchg
lds
clc
fdivr
or
or
xchg
dec
fsubl
loopne
inc
mov
push
iret
mov
mov
pop
test
xchg
xchg
mov
pop
mov
mov
mov
xchg
or
jp
jnp
jecxz
xchg
call
mov
cmpsb
mov
and
leave
addb
cmpsb
mov
lret
out
adc
adc
inc
aad
stc
mov
pop
xlat
jmp
jb
leave
nop
ret
leave
cli
stc
imull
mov
add
sbb
jne
sti
call
xchg
imul
adc
neg
pop
jb
aad
jnp
popa
xor
xchg
clc
es
bound
out
push
mov
xor
outsb
addr16
push
lea
js
jns
push
sbb
fisttps
lret
push
xor
jle
mov
and
or
test
pop
xor
mov
push
sti
fsubrs
add
cltd
mov
add
sbb
call
popf
stos
aaa
cs
mull
aad
mov
out
int
inc
inc
xchg
xchg
mov
or
sbb
jnp
outsl
xor
jae
test
inc
sub
xor
mov
call
mov
xor
xchg
jns
enter
mov
xor
push
jae
push
jmp
jg
syscall
out
add
lcall
mov
orl
mov
dec
je
xor
insb
mov
xorb
imul
push
ret
js
or
sbb
imul
fucompp
js
inc
pop
dec
dec
mov
mov
sbb
mov
xor
lret
mov
fidivl
mov
push
cwtl
das
push
mov
inc
mov
mov
dec
imul
ds
mulb
mov
fisubl
inc
mov
pop
and
jb
ljmp
and
mov
xchg
inc
ret
hlt
enter
xor
jns
jae
xchg
and
cmpsb
push
out
jb
mov
stc
or
mov
sbb
and
mov
pop
jae
mov
push
xchg
jno
pop
int
pop
mov
test
scas
testb
test
sbb
shlb
sbb
jne
lcall
out
add
inc
lea
lock
sarl
lea
and
cwtl
xchg
and
add
push
jne
aaa
loopne
test
mov
xor
jl
jp
inc
imul
and
fcmovnbe
insb
push
inc
orl
push
push
ja
dec
dec
inc
das
gs
pop
popf
lock
and
mov
stos
pop
outsl
popf
insl
dec
popf
adc
mov
aaa
mov
pop
popa
jge
sbb
mov
jmp
jbe
or
push
sbb
jl
dec
in
test
fisubl
test
or
mov
arpl
ss
cmp
lods
and
inc
or
aad
dec
les
fs
into
leave
int
inc
in
lahf
movsb
mov
add
cmpsl
mov
adc
scas
rorb
fnsave
xchg
repnz
lods
test
ja
popf
lret
lods
stos
scas
sar
fdivl
or
sbb
mov
adc
push
jl
xor
add
xor
xor
jp
and
fisubrl
add
stos
setno
pop
push
orl
out
mov
push
adc
push
sub
jbe
mov
stos
push
cmp
dec
xor
mov
jbe
jno
or
cld
dec
and
lods
rcrb
sbb
lret
sub
int3
in
jo
mov
sub
mov
sub
cli
pop
add
test
sub
sbb
push
add
and
cwtl
cmpsb
int3
sbb
rorb
dec
ud0
add
push
xor
and
stc
adc
lret
fs
mov
jne
jl
and
cmpl
mov
ret
mov
out
or
addl
je
out
sbb
jbe
cmp
mov
sbb
and
js
pop
hlt
gs
testl
pop
dec
in
xor
test
lods
jb
mov
mov
in
hlt
enter
mov
xor
fcoml
roll
mov
pop
pusha
movsb
cltd
cmpsb
into
mov
push
jl
adc
pop
push
and
ds
jmp
out
inc
mov
push
cmp
push
mov
int3
pop
pusha
movhps
or
jnp
and
mov
pushf
daa
cmp
xchg
jl
lahf
inc
mov
mov
inc
fld
fstpt
adc
mov
test
pop
mov
adc
or
adc
scas
mov
push
dec
jo
popa
jno
rcrb
xchg
sbb
ficoms
daa
xor
adc
inc
mov
cmpsl
push
lret
test
ret
aad
fnsave
jae
jno
sbb
push
sbb
sbb
shlb
cwtl
xor
inc
fimull
movsb
sub
pop
enter
and
inc
pop
gs
mov
and
xlat
cmp
dec
bound
pop
sbb
mov
ret
mov
xor
repnz
imul
popa
xor
inc
mov
jmp
fs
sbb
push
push
mov
stos
outsl
lea
out
lcall
xchg
sbb
pop
pushl
movsb
in
ret
in
push
push
fistl
mov
sbb
icebp
and
sbb
jnp
lret
fistps
ljmp
outsl
or
rcrl
mov
sti
repz
sbb
ret
ret
test
pop
aad
pop
push
sahf
jb
mov
lcall
push
mov
jne
or
sub
enter
and
outsl
scas
and
adc
subb
xor
out
inc
mov
daa
xor
inc
or
and
repnz
mov
ss
mov
push
push
inc
jns
sbb
jb
in
jmp
lret
fstl
mov
mov
cmp
cwtl
loopne
test
ss
dec
adc
xor
jno
sub
cli
aad
jp
mov
enter
add
xor
xor
ja
mov
rcll
aad
leave
xchg
sbb
nop
push
pop
mov
js
pop
mov
xlat
inc
aad
lock
test
mov
add
js
cmpb
or
push
scas
popa
insb
fwait
mov
lea
or
stos
orb
jns
pop
and
adc
cs
and
test
loopne
pop
or
mov
popf
add
int3
sub
pop
movsb
and
outsb
inc
adc
dec
push
cltd
shlb
mov
mov
es
cli
aas
jo
sbb
lret
fists
push
nop
xor
or
adc
loopne
dec
xchg
mov
out
mov
movsb
add
cli
jl
xchg
sub
add
cs
stc
int
cmpsb
inc
lods
sbb
sub
sbb
mov
addr16
sahf
scas
std
jae
add
inc
ds
rolb
dec
ljmp
cmpsb
test
inc
lods
add
and
dec
sbb
adc
push
test
cld
mov
fiadds
loop
cld
mov
and
nop
jg
jl
sbb
jne
adc
jg
pop
mov
lods
fdivrs
out
or
aam
jbe
js
cmpsl
jmp
inc
int
adc
adc
cmp
adc
lahf
mov
fnsave
cmp
jno
sub
cli
add
inc
adc
fwait
ljmp
mov
pop
jge
sbb
inc
xchg
add
adc
inc
pop
rcrl
push
dec
sbb
or
fstl
lret
inc
mov
cwtl
ja
push
jno
sbb
pop
push
xor
jb
inc
ss
and
add
mov
daa
push
mov
push
out
loope
sti
xor
cs
movsb
movsl
mov
lock
arpl
pop
dec
sarb
dec
insb
das
roll
fisubrl
dec
roll
cmc
jecxz
mov
jl
mov
sub
mov
adc
call
insb
sbb
lods
aaa
outsl
push
inc
xchg
stos
sub
jle
aaa
xor
ret
adc
lahf
nop
lock
leave
mov
int
jle
mov
data16
inc
xchg
popf
push
fisubs
repz
icebp
cmp
push
mov
pop
jo
adc
mov
data16
xor
jb
lock
cmp
mov
stos
test
push
mov
mov
pop
jecxz
popf
inc
ds
lods
cmp
ja
repnz
and
push
cmc
mov
imull
stos
sbb
inc
dec
pop
lods
out
add
out
fcom
ljmp
fsubr
ficompl
inc
mov
pop
add
lahf
cmc
jno
or
adc
fcmove
adc
out
mov
mov
mov
xor
fistps
sbb
mov
xchg
bound
push
mov
jl
pop
rcl
fistps
pop
jp
insl
mov
mov
call
je
stc
xor
and
cmpsl
je
add
or
xchg
fcmovu
adc
fstpt
xchg
sarb
mov
pop
arpl
dec
sbb
mov
pop
pop
shlb
movsl
jp
or
mov
ss
push
pop
jns
pop
pop
jb
xchg
fidivrs
xchg
adc
xchg
jg
ss
imul
aaa
xor
sub
sbb
xor
mov
push
or
mov
and
cmpsb
movsb
add
mov
fnstenv
xchg
sbb
insb
mov
test
dec
js
push
push
outsb
mov
mov
pop
sbb
fisttpll
xor
xor
and
jecxz
cld
sbb
dec
filds
push
push
mov
pushf
push
das
jmp
sbb
aas
in
mov
pop
inc
jne
ss
xor
ja
movsb
movsb
xor
ja
je
inc
xchg
movb
or
xor
inc
push
cmpsb
push
mov
repnz
jg
stos
lret
cltd
inc
stos
std
aad
rclb
jne
adc
mov
inc
sub
cwtl
stos
sub
js
sti
jl
clc
rorl
and
and
test
cltd
sbb
sbb
lods
cmpsb
adc
roll
push
mov
pop
and
push
adc
add
int3
sub
mov
jmp
add
test
cmp
fisubrl
fdivr
add
aad
cs
sub
sarl
cmp
cs
or
js
xor
adc
ss
cmp
jo
jbe
mov
dec
popa
add
mov
jg
jo
adc
cmpsl
cmp
test
xchg
cmpsl
sahf
scas
cmp
js
aaa
mov
leave
dec
jne
push
js
sbb
sbb
dec
idiv
xor
lods
mov
das
mov
lds
mov
mov
push
or
sub
mov
fistl
cmpl
cmp
shll
mov
or
sub
mov
sahf
leave
mov
push
out
enter
xor
jnp
insl
mov
sbb
jmp
mov
inc
push
test
xchg
pop
push
xor
mov
outsl
and
nop
ljmp
lcall
add
scas
jg
xchg
jae
arpl
and
div
xor
inc
jae
fistl
push
mov
sub
lock
sub
mov
mov
mov
inc
cltd
mov
push
cmpxchg8b
cmpsb
dec
insb
sbb
push
test
repz
cld
adc
mov
or
xchg
mov
aad
into
inc
out
lahf
mov
mov
adc
out
outsb
push
sbb
and
stc
cmpsl
ficoms
or
cmp
cmp
adc
jnp
mov
nop
fwait
movsl
jae
sub
jge
ja
sbb
jns
enter
push
aad
mov
test
flds
fisttpl
lods
and
cmp
fisttps
pop
inc
inc
movsb
jno
jb
enter
lret
or
int
sbb
inc
out
and
pop
mov
cmp
jne
scas
adc
lds
daa
cmpsb
jnp
sti
add
cmpsb
std
mull
aas
mov
lock
cmp
mov
stos
popa
jbe
rcr
and
aad
jl
jl
sbb
sbb
movq
stc
inc
adc
shr
push
sahf
sub
pop
mov
dec
mov
sti
int3
stc
pop
shll
jmp
or
leave
out
mov
dec
and
push
scas
fiaddl
lea
out
or
inc
pop
adc
addr16
jno
inc
stos
pop
out
inc
pop
testl
adc
rcll
inc
in
mov
jbe
cmc
add
jl
push
bound
push
push
cld
sub
cli
std
cmp
dec
pushf
loopne
jmp
inc
shll
push
lret
daa
sub
sar
and
faddp
movsb
aas
mov
popf
xor
out
or
in
pop
mov
push
lret
jno
sub
sub
push
mov
sub
lret
mov
hlt
into
pushf
mov
adc
xchg
cmc
or
lcall
xchg
cld
rolb
jge
push
push
cmovne
mov
das
adc
lahf
xor
test
cmp
xor
clc
cmp
mov
xchg
repnz
movsl
hlt
insl
pop
cltd
dec
cltd
xor
stos
sbb
dec
inc
push
mov
shlb
pushf
mov
hlt
mov
adc
push
icebp
sbb
jecxz
xor
fxch
push
push
jl
cwtl
jno
mov
lea
add
es
cli
adc
lds
popf
mov
dec
ljmp
pop
int3
rcrb
add
outsb
dec
mov
rcrl
cmc
mov
jnp
mov
and
lret
aas
cli
clc
repz
mov
pop
mov
in
daa
mov
jb
mov
sbb
xor
jb
inc
adc
or
imul
ret
xchg
lods
xor
mov
int
les
xchg
stos
xor
dec
mov
sub
std
pop
sbb
hlt
std
rclb
push
std
popa
adc
push
lock
push
popf
divb
loop
insl
sub
mov
mov
inc
shll
fidivrs
lods
jp
daa
xchg
roll
mov
test
stc
mov
aaa
xor
and
jne
mov
pushf
xorb
test
push
adc
mov
mov
adcb
out
sub
lds
fsubrl
icebp
ret
imul
hlt
push
add
cltd
subb
lret
lds
insb
push
stos
je
cmp
push
add
jae
call
or
pop
inc
test
sbb
addr16
lods
sub
mov
sbb
push
lock
sbb
sub
stos
pop
pop
pop
ret
or
std
cmpsl
push
cmpsb
xor
cwtl
push
push
jmp
mov
repz
fisubrl
mov
roll
push
cwtl
negl
ja
arpl
pop
pop
dec
push
iret
xor
xchg
mov
imul
sub
pusha
outsb
out
xorl
sub
mov
jno
daa
into
xchg
in
mov
mov
push
push
mov
cmpsl
sub
fstpl
aam
ficomps
lods
insb
ss
stos
arpl
leave
add
insl
inc
push
sarl
mov
fmuls
jp
arpl
xorb
xor
dec
lret
dec
jnp
jb
push
lds
pop
pop
repnz
jg
xorl
lds
pop
adc
popf
xlat
push
cmp
lea
scas
dec
ja
or
cmp
out
psubusb
movsl
sbb
and
push
aad
cltd
add
mov
loope
adc
not
mov
add
mov
icebp
popf
lea
sub
jns
rcrb
mov
in
sbb
subl
outsl
cmp
ret
jno
test
push
jns
sub
pop
jl
pop
sub
jb
push
mov
sbb
mov
pop
add
cmp
dec
inc
and
xchg
or
fs
cltd
cli
iret
jmp
lahf
xorl
xchg
cmpsb
out
ja
xlat
inc
push
mov
das
ja
mov
or
inc
mov
fldl2t
fldl
icebp
xor
jb
out
std
shlb
aaa
inc
jp
push
push
sub
inc
mov
outsb
or
sti
push
je
mov
cmp
lret
mov
js
add
jge
divl
mov
call
pop
je
bound
in
or
les
mov
test
fmull
mov
out
xchg
sahf
or
xadd
ret
pop
sbb
stc
mov
aad
stos
mov
rcl
xchg
orl
pop
call
arpl
rorl
pop
movl
jp
int
out
rolb
das
popa
test
push
dec
out
insb
int
adc
jo
adc
pop
loope
and
sahf
mov
cmpsl
mov
orw
jnp
jbe
test
das
jne
in
or
popf
and
pop
dec
test
mov
cmp
lods
mov
out
test
xor
lahf
popa
ficomps
enter
sub
pushf
lock
sbb
loope
movsl
jp
and
jle
mov
mov
sub
inc
cli
or
cmpsl
in
adc
pop
adc
andb
in
inc
movsb
push
loopne
jno
popl
mov
fsubrl
js
sub
cltd
mov
jecxz
push
jle
dec
add
ss
xchg
rorl
xchg
sbb
xor
movb
mov
test
ffree
add
pop
push
stc
fwait
jae
push
mov
int
popa
jge
aaa
mov
mov
jbe
dec
cli
sti
sub
cltd
insb
xor
jnp
and
jge
sbb
mulb
mov
mov
jge
push
dec
aad
inc
lock
mov
inc
pop
add
sbb
pop
cld
and
adc
fcompl
cmp
inc
mov
mov
popf
stos
xor
mov
cmp
cmpsb
sarl
out
aaa
pop
lock
or
pusha
aaa
inc
imul
dec
call
pop
sbb
mov
xor
mov
cmp
rorb
or
jl
jb
call
mov
mov
jae
jo
lret
sub
cmp
enter
stc
fists
fiadds
imul
stos
mov
push
adc
mov
sbb
mov
push
scas
scas
mov
mov
jecxz
andl
notb
push
outsb
rolb
pop
call
jno
shl
pushf
test
aaa
pop
cmpsb
stos
pop
sub
mov
xor
xchg
divl
ret
ret
ret
jne
and
add
in
enter
popf
lret
ja
movsb
fdivl
adc
aad
and
enter
lret
je
pop
sbb
sbb
outsl
sbb
cmpsl
fucomp
mov
int3
mov
inc
jecxz
dec
mov
jno
rcll
ljmp
xor
outsl
push
loope
sub
sbb
lods
jmp
aad
out
pop
in
or
leave
inc
nop
pop
fdiv
inc
inc
pop
jp
push
mov
lret
rclb
pop
push
lods
scas
adc
jne
mov
sarb
mov
mov
imul
int
xchg
sub
xchg
dec
out
or
mov
dec
sbb
in
adc
jno
or
mov
loop
or
ret
fnstcw
in
and
sbb
cltd
push
lods
xchg
int
mov
cmp
imul
insb
dec
mov
push
inc
shrl
push
addl
mov
dec
daa
aaa
mul
mov
ss
aaa
call
jge
sbb
push
cs
pop
inc
cli
out
mov
in
inc
push
dec
mov
adc
aas
call
call
xchg
das
xchg
rcrl
pop
adc
insb
lret
xchg
xchg
andb
mov
mov
xchg
sub
mov
pop
or
jle
pop
shrl
mov
mov
sbb
imul
rolb
cmpsb
push
jb
popf
shlb
ret
cli
lods
sbb
or
ja
call
loopne
addl
push
jnp
lds
jbe
xor
int
jns
js
xorb
mov
jns
dec
fbld
sub
cltd
cmp
add
sahf
xchg
bound
adc
sbb
adc
cli
imul
jg
and
das
jp
arpl
cld
adc
popf
repz
daa
inc
mov
repnz
pop
shll
sub
cmp
in
push
jne
in
or
aad
cmp
test
outsl
cmpsb
shll
jle
pop
adc
cmc
mov
sbb
lea
popa
test
std
js
cld
cld
scas
mov
push
roll
dec
test
icebp
daa
bound
mov
push
sub
dec
hlt
test
pop
push
dec
dec
xchg
daa
push
adc
add
inc
push
mov
xchg
xchg
cld
fcmovnu
lret
in
outsb
or
mov
int
jle
mov
mov
xchg
xlat
sub
lods
sub
mov
les
mov
inc
pop
js
negl
jb
xchg
push
sub
sub
das
jb
jno
and
sub
popa
push
mov
scas
sbb
mov
inc
shll
je
js
cmpsb
ret
jmp
ret
mov
inc
int3
call
mov
shlb
mov
ret
fisubs
sbb
pop
dec
notl
push
lahf
and
call
mov
pushf
xlat
dec
adc
add
xchg
jae
jno
jb
inc
and
push
cltd
push
data16
fwait
mov
mov
xor
jnp
insl
mov
push
mov
popf
or
es
data16
push
mov
pop
sub
cmp
dec
pop
movsl
mov
cmpsl
fstps
ror
sbb
mov
cmp
rolb
dec
ljmp
push
cmp
mov
push
ret
pushf
pop
and
add
adc
jecxz
mov
hlt
push
test
out
sub
ret
divl
ret
or
cmp
insb
sarl
mov
out
loope
mov
mov
xor
test
shrb
fsubrs
mov
sub
jnp
xchg
xor
dec
adc
lock
push
les
stos
mov
mov
mov
adc
lret
shrl
xor
push
xchg
loope
fdivr
push
neg
icebp
xor
ja
inc
out
andl
xor
cmp
les
mov
out
jae
mov
aas
outsb
loopne
out
dec
ss
cmp
in
inc
in
aam
insl
cmpsl
jns
adc
jno
sbb
loopne
sbbb
push
out
jo
std
dec
mov
and
pusha
call
clc
lock
push
jmp
inc
push
lea
jo
jb
cld
jle
loop
pop
cmp
pop
gs
and
push
dec
in
test
pushf
pushf
mov
xchg
and
mov
sub
jns
adc
int3
dec
dec
iret
and
push
cmp
xor
sbb
inc
push
int3
test
jmp
test
sub
pop
or
adc
or
btc
arpl
cmp
aaa
jg
stos
push
pop
dec
popf
inc
or
gs
and
hlt
enter
inc
fidivrs
pop
test
andl
inc
pop
pop
nop
adc
testl
pop
popf
shrb
fwait
lods
pop
mov
xchg
in
pop
mov
jp
push
std
mov
cmp
call
adc
push
inc
add
xchg
idiv
das
imul
push
or
mov
in
push
adc
sub
pusha
ljmp
pop
inc
mov
jecxz
add
add
xchg
cs
jg
ret
stc
pop
push
jae
and
mov
pop
pop
mov
inc
xchg
icebp
sub
aad
pushf
les
mov
pop
push
in
jge
pop
rclb
sbb
dec
fnstsw
loopne
out
xchg
pop
or
dec
shr
jno
or
lea
mov
jb
inc
js
push
mov
out
pushf
and
inc
lock
idivl
lock
ss
addr16
add
adc
mov
out
or
cmp
int
cltd
aaa
sbb
lea
fdivl
push
push
cmp
mov
dec
std
xchg
jns
sahf
dec
sbb
push
mov
mov
outsl
dec
test
scas
push
loope
add
mov
lea
sarb
ss
rol
lret
rorl
lret
andb
and
popa
sbb
jo
es
cmp
scas
std
jnp
mov
mov
sbb
and
pop
or
cli
mov
fdivrs
imul
push
jne
mov
lods
push
popf
fcompl
stos
out
out
stc
inc
hlt
scas
pop
mov
insb
fwait
mov
adc
scas
leave
fs
ja
lret
pop
pushf
inc
mov
dec
pushf
adc
mov
xchg
scas
arpl
xor
cmp
mov
mov
mov
popa
xchg
mov
sahf
and
pop
pop
insb
cmpl
negb
lods
sarb
cmc
sti
dec
popf
and
add
cmpsl
jo,pt
test
jae
inc
sahf
xor
out
insb
aas
ret
test
dec
jns
cs
rorb
sbb
incb
sbb
scas
out
movsl
pop
fidivrl
adc
mov
movsl
enter
or
insl
test
call
mov
imul
sub
pop
xor
std
pop
scas
mov
or
mov
mov
nopl
into
int3
jg
push
pop
sub
pop
js
rolb
or
mov
cmc
cli
or
mov
repz
inc
and
scas
or
test
lea
pushf
rcl
repnz
ss
mov
jl
mov
push
mov
mov
mov
cmp
push
mov
mov
or
cmpsb
mov
std
cmp
fisttpll
mov
loope
push
outsb
adc
pop
rorl
negl
xchg
mov
out
clc
push
icebp
fdiv
or
out
cmpsb
sub
xchg
mov
nop
bnd
fidivrl
adc
les
test
pop
cmp
push
into
dec
cs
lods
inc
lcall
lds
push
out
xstore-rng
cmpsl
push
jmp
inc
subl
dec
mov
sub
xor
fimull
aas
lods
inc
push
movsl
cmp
add
xchg
jg
cmp
cwtl
cwtl
outsb
or
mov
cmpl
xor
cmp
loopne
xor
mov
imul
mov
testb
int
sbbb
mov
sbb
jns
aaa
xchg
mov
cld
iret
or
sub
fwait
adc
cmp
mov
sti
shrb
mov
andb
call
jg
dec
and
xchg
mov
push
xor
iret
xor
loop
pop
cmpsb
dec
imul
jle
inc
push
cmp
xor
mov
push
mov
out
imul
rcr
xchg
xor
push
cmpsb
sahf
jmp
js
mov
mov
fsubrl
jecxz
mov
arpl
pop
jmp
pop
scas
sub
int3
jg
ljmp
lahf
push
les
test
aad
jb
sbb
popf
sti
and
mov
out
jge
jbe
push
popf
xchg
inc
jo
pop
mov
lret
inc
inc
call
xlat
mov
out
jle
gs
enter
xchg
ja
cwtl
sbb
cmp
cwtl
enter
repz
ds
push
ja
cmpsb
out
cmpsb
into
aad
in
lahf
lahf
mov
incb
xor
cmp
or
insl
sbb
and
stos
cmp
ja
lds
pop
adc
lods
lds
pop
pop
pusha
int
xchg
fxch
in
test
repnz
xchg
mov
gs
jg
aad
fnstcw
ja
mov
fnstcw
mov
sbb
jnp
push
jp
mov
fdivs
push
jns
xlat
pop
movsb
inc
sub
mov
xor
imul
je
jle
call
inc
sbb
icebp
push
pop
add
enter
call
scas
inc
dec
je
scas
sbb
dec
es
push
ja
dec
decl
fidivl
ret
enter
jg,pn
and
mov
mov
pop
test
arpl
in
push
sbb
jns
sub
jb
sbb
mov
adc
daa
or
std
mov
xchg
push
fists
or
sahf
or
lods
aaa
xor
jp
test
insl
xor
js
xlat
das
push
mov
cmc
mov
cwtl
cmc
and
mov
pop
push
in
inc
int
jp
add
cltd
xor
xchg
sti
adc
pop
aas
imul
pop
xor
pop
pop
hlt
prefetchnta
inc
aad
dec
inc
or
cmpsb
inc
sbb
in
nop
in
test
mov
and
xor
sub
pusha
adc
cmp
insb
mov
ret
and
insb
icebp
push
fisttpll
xor
or
fisubl
cwtl
in
jle
aaa
aas
mov
ret
dec
mov
fcompl
icebp
jmp
xor
mov
incb
mov
or
and
stc
shl
jae
lock
xor
fstpl
inc
mov
xchg
ds
mov
es
pop
pop
add
outsl
xchg
jne
or
adc
idivb
jno
add
out
popa
sarl
aaa
sar
ret
ljmp
xor
loope
rorl
repz
fsubrl
jns
jne
jne
push
sti
int3
mov
jmp
sbb
ret
mov
cwtl
out
push
das
pop
stc
jl
push
scas
xlat
inc
and
mov
pushf
cwtl
mov
pushf
jmp
xchg
insl
sbb
out
jle
lods
mov
shrb
xchg
mov
dec
sbb
inc
jns
rcr
lcall
and
xchg
xor
cwtl
sbb
in
cmp
lea
pop
mov
es
jb
shll
sbb
loope
fcmovnb
neg
je
sarb
sub
and
lahf
inc
test
mov
gs
adc
or
cmp
and
mov
xchg
inc
rolb
inc
inc
cmp
insl
mov
aam
je
bnd
loope
xchg
test
iret
out
mov
pusha
int
decb
sbb
sahf
fstpt
add
mov
mov
gs
xor
js
aas
mov
pop
or
sub
or
cmp
in
lret
ret
test
inc
adc
mov
mov
fists
mov
shlb
add
jl
dec
leave
test
or
imul
lahf
fstpl
popf
mov
pop
xchg
jge
or
test
inc
lock
cmp
add
and
test
in
add
pop
insl
push
test
lock
sahf
xor
jle
jns
dec
sbb
sbb
leave
pop
mov
test
cmp
xor
sbb
scas
mov
out
mov
pop
or
sbbl
fcmovne
pop
inc
out
mov
sbb
xchg
mov
sarb
aad
es
ficomps
sub
fwait
hlt
adc
mov
jecxz
out
jbe
hlt
lret
push
je
push
xlat
test
popf
mov
mov
xor
out
scas
sub
test
dec
push
cmp
mov
push
pop
inc
pusha
popf
cmp
jns
xor
jno
sub
dec
cmpsl
and
pop
movsl
or
sub
sti
jecxz
mov
or
stos
or
inc
mov
xlat
decl
iret
adc
push
mov
fdivr
or
enter
dec
adc
fstpl
and
adc
loopne
in
or
mov
sti
xorl
lods
out
inc
outsb
cmpsb
xor
std
pop
push
push
into
fwait
cmp
shrl
movsl
std
pop
cmp
sarb
ds
leave
mov
imul
cmp
test
xlat
cmpsb
je
or
push
in
mov
mov
mov
inc
mov
test
ret
ret
test
xchg
pushw
mov
shrb
daa
mov
xorb
out
xchg
ja
stos
cmp
push
loopne
mov
hlt
mov
ret
mov
dec
repz
sub
cmc
xchg
mov
es
mov
sub
call
lods
in
daa
outsb
inc
push
ljmp
aas
popf
insb
mov
xor
popf
xchg
lea
sti
stc
or
shll
xchg
insl
clc
sub
inc
mov
mov
ds
lret
aad
mov
sbb
lret
push
stos
mov
mov
ret
push
mov
test
lods
inc
in
inc
jne
or
test
mov
call
jbe
push
dec
je
pop
fisttpll
mov
into
sbb
filds
test
jl
sub
and
push
loope
mov
mov
dec
les
adc
insb
mov
mov
fs
xor
sub
andb
fs
out
cmpsl
loopne
in
loop
nop
xor
mov
lods
int
mov
dec
lahf
pop
test
lds
out
cmpsb
mov
xchg
pop
push
push
dec
mov
cmp
xor
test
stos
mov
inc
mov
adc
popa
jmp
icebp
or
loope
sbb
loop
repnz
mov
sub
cmp
mov
imul
call
dec
imul
adc
or
mov
ja
test
ss
inc
rol
sbb
mov
mov
jo
cmc
shll
lods
adcb
or
andb
sub
jb
outsb
push
mov
test
mov
push
xchg
add
jge
jle
cmp
inc
pushf
pop
jecxz
jg
testb
std
xchg
jns
ficomps
xor
lock
add
fsubr
xchg
push
mov
gs
out
ror
sbb
mov
jns
inc
enter
popf
test
stc
adc
jbe
clc
shrb
ljmp
xchg
mov
push
sub
jae
push
cmp
hlt
sti
lea
fsubrp
xorl
sbb
add
push
hlt
sub
jae
or
into
cmp
pop
or
fiadds
test
sub
push
les
ds
dec
test
jl
cli
lret
or
xchg
mov
or
xlat
pop
push
fldenv
inc
cmp
xor
push
movsl
sarl
adc
xchg
inc
ja
aaa
das
inc
imul
ja
and
inc
inc
test
cmpl
mov
xor
lret
inc
push
dec
cmp
loope
adc
cmpsl
aas
dec
cmp
enter
out
sub
pushl
push
jns
outsb
add
or
xchg
movsl
inc
mov
dec
jbe
shl
ljmp
ja
roll
into
xchg
pop
xchg
mov
in
sarl
stos
scas
inc
shll
iret
xchg
mov
int3
enter
sbb
int3
xor
inc
and
rcrl
fwait
call
pop
push
pop
or
jle
add
dec
iret
cmp
sbb
movsb
aam
pop
push
int3
inc
jo
mov
stc
imulb
cli
push
and
cmc
push
inc
scas
add
call
outsl
inc
popf
xlat
jae
cwtl
xor
dec
std
decl
test
stos
cli
cmp
mov
call
push
or
fists
popa
mov
rcl
loop
int
fnsave
sbb
cmpsl
xchg
out
xchg
push
jge
inc
mov
mov
faddl
lahf
pop
and
out
aad
repnz
add
mov
add
test
sbb
cwtl
xchg
es
outsb
stos
push
xor
ret
les
sbb
mov
lret
inc
shrl
daa
mov
data16
bound
lret
or
imul
out
addb
add
test
sbb
lods
dec
pop
jl
outsb
mov
popf
inc
call
dec
xor
shll
mov
or
mov
loop
andl
movsl
lahf
lds
lock
mov
pop
xor
mov
mov
dec
sub
jecxz
mov
mov
xor
cmp
stos
pushf
xor
popf
mov
mov
fs
leave
rorl
sub
or
lock
scas
int
xor
dec
jp
cwtl
insb
add
out
push
inc
cmp
fs
aam
mov
mov
jns
cld
pop
xchg
pminsw
lahf
jb
push
jmp
lds
stos
mov
in
inc
xlat
push
pop
in
mov
mov
sbb
cltd
pop
xchg
mov
std
cmovp
outsl
dec
scas
sbb
icebp
adc
mov
cltd
sub
sub
test
pop
pusha
dec
fs
xor
pop
sbb
cli
push
push
lea
movsl
sti
jae
dec
fdivl
hlt
xor
into
insl
mov
icebp
adc
pop
jecxz
mov
mov
stc
out
nop
cwtl
es
mov
daa
add
push
mov
cmp
push
push
fimull
or
mov
mov
inc
xchg
out
push
das
mov
adc
out
mov
lds
mov
gs
mov
cmp
pushf
shlb
xchg
insl
fs
cli
push
hlt
out
adc
jno
daa
dec
out
imul
mov
scas
xchg
lds
sub
pextrw
sub
dec
jg
cmp
xor
nop
mov
inc
je
dec
xor
add
shl
pushf
pop
je
cmpsb
test
adc
cmp
movsl
testb
inc
mov
jmp
add
test
insb
mov
mov
insb
repnz
xchg
cmp
mov
das
sbb
addr16
fdivrs
jle
xor
call
nop
jb
mov
sti
pop
test
lahf
xchg
mov
jp
rcrw
and
movsb
inc
inc
and
xor
test
lcall
and
mov
push
cmc
pushf
int
subl
nop
test
fadds
or
les
int3
jb
mov
lods
stc
dec
dec
mov
cmp
cmp
prefetch
orb
loopne
adc
add
push
decl
mov
jl
xor
pushf
jl
mov
mov
jae
jno
add
mov
add
cmpsl
test
and
scas
jg
fs
push
dec
jl
and
adc
fwait
or
call
cmp
mov
stos
pavgw
loop
mov
popa
push
pop
pop
jg
mov
mov
out
jb
mov
lock
ljmp
lds
inc
push
insl
cld
std
push
inc
das
dec
and
loope
lret
cwtl
xchg
stos
adc
inc
pop
pusha
int
lods
pop
fldcw
aas
mov
push
dec
mov
push
pop
mov
sub
fisubs
shr
sti
imul
ss
outsb
jg
lahf
cmpl
imul
leave
scas
cld
cwtl
xlat
js
and
dec
test
sbb
or
test
xchg
leave
add
cmp
es
pusha
decb
ds
sub
scas
mov
or
fiadds
mov
sub
sbb
adc
pusha
addb
fcmovnbe
pop
xchg
jno
xchg
lods
jno
stos
stos
insb
rcrb
sbb
cltd
scas
test
cmp
leave
aaa
push
out
jae
jo
cmp
icebp
inc
jb
mov
insl
xchg
repz
jle
rcll
pushf
cwtl
cmp
fstpt
sbb
cli
mov
pop
push
xor
mov
xor
mov
loope
mov
xchg
pop
and
push
lcall
test
sbb
push
fnclex
in
fwait
icebp
scas
out
pop
mov
pop
ja
ljmp
pop
test
or
mov
fnstcw
fwait
mov
fs
test
call
or
cmovle
cmp
lock
outsb
adc
mov
xchg
cmp
add
inc
jno
daa
pop
leave
mov
xchg
out
sbb
imull
push
test
jbe
lea
cmp
add
out
jbe
stos
mov
cmp
cmc
out
dec
xchg
fldl
fs
jno
add
fstl
xor
cmp
mov
adc
sbb
leave
or
icebp
sarb
cmp
sti
pop
xor
test
push
test
inc
push
and
push
jp
lods
daa
cmp
popf
fildl
sub
daa
outsl
int3
aas
lock
clc
push
push
aaa
gs
shlb
jmp
ja
mov
mov
shlb
stos
insl
dec
jge
jmp
out
int3
fidivrs
int3
enter
cld
test
push
push
push
cmp
mov
div
das
cli
test
push
push
lret
cmp
mov
mov
mov
ja
sub
mov
out
or
hlt
outsb
int
lock
xor
xlat
addr16
lahf
or
sbb
iret
and
mov
or
pop
adc
idivb
xchg
cmp
mov
and
insl
dec
add
pop
shlb
test
imul
or
and
pop
lret
mov
inc
insl
ror
lahf
bound
inc
in
std
lock
mov
mov
mov
cltd
mov
enter
es
test
js
int
sub
aaa
test
dec
jg
out
adcl
mov
mov
lea
pop
jns
rcl
sbb
popl
lods
in
adcb
adc
std
out
adc
enter
mov
mov
out
mov
test
dec
imul
adc
repnz
ja
fbstp
inc
xchg
or
outsb
popa
mov
or
js
je
es
repnz
cmp
push
dec
adc
cwtl
test
cli
movsl
daa
mov
lods
mov
mov
sub
jle
pushf
mov
and
test
push
jb
loop
std
and
mov
push
pop
lret
fcomps
sub
pop
xor
jl
bound
fmulp
sarb
and
pop
rcll
dec
pop
hlt
push
mull
pop
fistps
xor
insl
sahf
push
lea
dec
pop
aaa
pop
shlb
fisttps
das
insl
addr16
movaps
aam
std
loope
jg
fiadds
and
into
std
mov
jb
mov
cmp
pop
loopne
cmp
test
cs
inc
adc
lods
mov
pop
idivb
push
mov
mov
pushf
lret
sbb
pop
bound
mov
shrl
jbe
mov
ret
or
jmp
push
add
std
adc
cmpsl
inc
mov
mov
and
mov
mov
out
mov
sbb
int3
inc
outsb
pop
inc
pushf
jne
or
fs
adc
lret
testl
mov
mov
xor
lret
mov
pop
pop
popf
inc
in
test
imul
adc
testl
push
jae
ret
xchg
out
test
enter
cltd
mov
cli
lods
push
ja
call
jnp
push
imul
push
fidivrs
xchg
xor
int
add
sbb
and
fisttps
lahf
imul
pop
cmpsl
fisubrs
add
int3
sub
xchg
not
insl
jg
fidivrs
jmp
vpsubq
es
or
fldl
pusha
cmp
negl
and
adc
pop
mov
xchg
or
fistl
xchg
mov
scas
xchg
pop
inc
int
insl
aam
int3
mov
jns
popl
cwtl
push
sub
subb
add
cli
jmp
mov
lea
cld
or
jmp
bound
or
icebp
mov
mov
jb
inc
mov
divl
es
sbb
inc
lea
jo
sub
and
mov
dec
int3
repz
xor
in
add
fistl
xchg
shll
jmp
lea
mov
movsl
shl
pushf
ret
inc
pop
fisubrs
xchg
adc
xor
loop
and
sub
sbb
push
sub
pop
lret
cwtl
adc
enter
decl
ret
lea
pop
mov
sub
push
sbb
neg
daa
mov
lcall
inc
and
pop
add
fimull
pop
gs
adc
xchg
enter
out
cli
mov
ficomps
jle
movzbl
insb
daa
fsts
filds
notl
mov
aad
push
adc
cmp
mov
sbb
cltd
pop
scas
shlb
sbbb
mov
arpl
aam
sbb
add
gs
daa
fbld
inc
lds
inc
popa
sbb
mov
dec
fs
adc
aam
ds
das
loopne
add
rcl
cmp
out
mov
mov
mov
xor
mov
ficoml
rol
test
mov
xor
or
pop
and
out
mov
aam
adc
add
mov
das
scas
pushl
pop
or
pop
lcall
sbb
stc
addr16
cs
xchg
cmc
scas
jg
lea
divb
push
jl
push
add
pop
or
loope
sub
js
jne
xchg
push
jmp
lock
pop
mov
mov
mov
fistps
adc
xor
mov
adc
jl
mov
mulb
inc
or
mov
inc
out
js
das
jne
jae
mov
pop
stc
mov
mov
push
and
jecxz
lods
pop
cmc
mov
scas
cs
inc
fisttpll
popa
inc
xor
cmp
sar
jge
mov
mov
sub
in
jo
adc
or
aam
adc
mov
pop
or
rcrl
jb
xchg
adc
sbb
jg
push
jecxz
es
aad
and
xchg
push
dec
js
dec
stos
pop
in
add
popf
inc
lret
push
aad
sbb
icebp
add
or
mov
mov
add
mov
mov
sub
cli
push
jl
pop
repnz
dec
mov
insl
test
out
push
jmp
das
push
jo
ficomps
fwait
inc
sub
adc
xor
xlat
pushf
mov
das
ja
loopne
cmp
fwait
pop
cmpsl
ss
rolb
adc
aad
int
call
inc
inc
shll
pop
xor
push
push
outsb
dec
mov
js
testl
jbe
adc
add
mov
imulb
fs
in
hlt
mov
outsb
and
or
mov
roll
icebp
ljmp
jb
mov
adc
fadds
xlat
nop
sub
ljmp
hlt
lret
and
ja
mov
cmp
cmp
mov
cmp
fimuls
mov
daa
push
loope
or
sub
lds
ja
js
pop
pop
shlb
xor
jecxz
jp
push
shrb
xor
insl
mov
lods
push
mov
inc
dec
push
fs
sbb
repnz
sub
cpuid
sahf
xor
push
repnz
arpl
xchg
xchg
pop
js
ja
xchg
pop
pop
sub
inc
push
pop
mov
sahf
and
ret
loop
hlt
dec
mov
sub
jmp
sub
xchg
or
jno
enter
mov
and
das
jecxz
mov
xor
out
js
pop
data16
pop
imull
ja
jo
loop
aam
dec
dec
add
outsb
xorl
outsl
jne
sbb
jmp
mov
aad
scas
jp
and
pop
xor
jb
push
icebp
xor
int3
mov
aas
fucom
fucomip
cs
imul
imul
xchg
pop
sbb
lea
dec
mov
mov
xchg
pop
decl
sbb
jns
ret
inc
lcall
aam
cli
outsl
cmp
push
aaa
nop
mov
push
and
pop
test
dec
mov
inc
fidivrs
test
and
stos
mov
xchg
jnp
jo
jb
gs
add
filds
cmp
gs
lock
and
insb
loope
rorl
jbe
inc
or
aas
mov
mov
clc
lcall
mov
inc
pop
jge
fidivs
xor
mov
xorl
pusha
rcrl
jge
jns
es
cmp
int
lock
scas
iret
pop
roll
add
push
inc
cmp
aad
add
jg,pt
inc
mov
xor
lret
cwtl
rorb
int
xchg
outsl
xor
mov
arpl
jg
cwtl
push
aad
mov
or
rorl
shll
mov
test
jne
leave
lock
data16
es
aaa
lret
les
inc
into
pop
mov
mov
sub
cmp
add
mov
sub
daa
ret
jp
push
pop
fdivs
mov
test
mov
sub
gs
jmp
insl
pusha
pop
jno
mov
sub
enter
lahf
std
outsl
insb
pushf
push
lds
cmp
mov
pop
add
sbb
inc
sbb
pop
xchg
mov
into
cmc
inc
stos
add
sbb
and
movsb
pop
mov
mov
out
mov
inc
mov
dec
cmc
jno
xor
pop
jne
cltd
pop
mov
add
xchg
mov
cmpsl
int
xor
lahf
push
push
js
xor
out
mov
mov
imull
std
gs
dec
std
jae
xchg
hlt
fisubrs
lds
ljmp
sbb
and
mov
pop
cmp
xlat
dec
icebp
std
sbb
mov
out
mov
inc
movsl
pop
dec
out
mov
inc
aad
adc
fnstsw
and
pop
xor
pop
bound
inc
pop
test
outsb
mov
scas
adc
sbb
mov
lock
xor
leave
das
and
push
addr16
jecxz
dec
test
out
sbb
cmp
push
popa
cld
and
std
das
pop
rol
sti
notl
addr16
pusha
xor
arpl
shrb
movsb
cmp
lds
dec
xor
push
xor
movsb
divl
mov
ss
mov
cmp
dec
arpl
push
mov
outsl
into
push
gs
insb
test
push
out
xor
ret
in
out
int
movsb
inc
ret
clc
rol
xor
dec
and
pop
loopne
pop
shl
dec
xorb
fldenv
jge
and
xchg
insb
cmc
xchg
and
call
nop
push
es
inc
ror
jecxz
sub
mov
sub
dec
ret
mov
push
sbb
cmp
hlt
mov
sbb
xlat
cmp
push
test
pop
sub
mov
add
mov
int
mov
jle
push
cmp
mov
pop
call
out
jg
or
scas
cmpsl
lea
jl
movsb
test
out
ret
jo
sub
rorl
outsl
jl
jg
cwtl
mov
movsb
retw
mov
push
xor
mov
and
mov
mov
pop
stos
mov
sarl
sahf
jge
pushf
xchg
dec
aaa
mov
sbb
movsb
sub
xlat
inc
jecxz
push
xchg
test
jmp
outsl
and
loopne
cmp
jbe
test
sarb
jbe
lcall
data16
ficompl
xor
into
data16
test
daa
mov
repz
xor
test
aaa
cwtl
inc
outsb
in
push
cmpsb
jmp
cli
aas
xor
xchg
ficoml
sahf
mov
loope
loop
adc
das
cwtl
int
inc
xor
jmp
add
shll
ret
arpl
pusha
push
dec
iret
xor
stos
pusha
lds
imul
or
cmp
pop
mov
mov
int3
cltd
xchg
mov
aam
push
cwtl
push
orl
fdiv
stc
fsts
rorb
lock
dec
clc
xchg
adc
shrl
das
cli
dec
cmp
and
pop
and
jnp
sub
add
ja
xchg
cmpsl
mov
or
or
dec
das
mov
mov
popf
fists
ficompl
iret
add
xchg
push
lret
scas
imul
sub
push
push
mov
rcll
dec
sbb
movsb
repnz
in
rcrb
and
jo
stos
add
sbb
cld
mov
adc
lds
ljmp
adc
fcmovbe
loop
push
scas
outsb
push
sbb
adc
test
sub
jno
cmp
cwtl
aam
out
lea
icebp
inc
mov
cmc
lahf
sarl
das
lahf
aam
sbb
jecxz
adc
aas
js
mov
nop
mov
lret
aam
negl
test
jo
add
cli
gs
xchg
sbb
add
push
rorb
mov
or
rcrl
popf
test
cmpl
push
std
test
pop
loope
cmp
cwtl
mov
imul
and
call
cmp
jle
cs
outsl
aam
mov
xchg
mov
ficomps
les
decl
adc
ss
jecxz
sarb
call
icebp
repnz
pop
add
and
ds
sbb
jecxz
cmp
ss
push
repnz
xor
pop
sbb
outsb
fsubrs
cli
ss
mov
hlt
gs
int
jns
addr16
adc
inc
mov
pop
ds
fisubs
add
pop
idiv
mov
or
xor
xchg
xor
lods
or
mov
inc
daa
dec
das
call
aad
imul
xchg
sbb
pop
popf
or
ja
pop
inc
int3
jae
mov
mov
fidivs
mov
xor
xor
inc
mov
jl
add
stc
insl
mov
movsb
mov
jno
fidivl
ja
or
dec
shll
dec
pop
subb
cmp
fimuls
popl
and
sub
lahf
lret
icebp
in
adc
jbe
out
lods
mov
xlat
xor
mov
inc
ja
cltd
mov
mov
cmp
jmp
lahf
sub
scas
mov
aad
lea
and
jb
enter
loop
ret
cmp
aas
cmc
push
mov
aaa
call
iret
lock
mov
lock
mov
pop
test
jmp
out
mov
nop
rcrl
mov
sub
out
addr16
test
pop
mov
sbb
xchg
adc
movsb
push
hlt
or
add
fadds
xchg
sub
or
aad
outsb
ret
test
mov
loop
xchg
push
repnz
adc
icebp
arpl
cmp
push
or
les
pop
addl
sysexit
mov
lods
pushf
sub
call
repnz
out
test
bound
inc
push
lahf
cmp
mov
inc
or
pushf
push
negl
test
out
add
in
or
inc
add
stos
bound
ds
scas
pushf
jp
outsb
test
orb
cltd
cmpsb
mov
loopne
mov
imul
repnz
cli
int
or
out
pop
lahf
mov
clc
sbb
cmp
arpl
adc
addr16
mov
fisttpll
lcall
fwait
std
loope
and
dec
inc
test
out
push
scas
jo
jge
jp
xchg
cli
inc
out
mov
dec
sbb
stos
xchg
push
fwait
sub
pop
test
dec
js
push
cs
or
test
cltd
jle
addr16
sbb
sbb
fwait
push
or
outsl
pop
lahf
rclb
push
pushf
mov
nop
push
lods
pusha
dec
or
dec
and
xchg
rolb
pop
mov
jne
jge
in
ficoml
cmpsb
or
cltd
sar
test
lret
fucom
pop
mov
aaa
mov
ja
mov
dec
xor
push
xor
inc
or
inc
xchg
int
int
sahf
mov
pop
ret
inc
movsbl
cmp
fisttps
cmc
xor
push
dec
push
out
push
ss
or
inc
mov
adc
dec
dec
cmpsb
out
and
sub
into
mov
mov
lock
xchg
inc
cmp
or
loopne
setl
xor
lret
fisubrs
outsl
add
push
es
enter
dec
faddp
sub
stos
pusha
adc
lea
inc
and
mov
and
push
divl
sub
test
clc
inc
sub
lret
loope
hlt
or
jne
jmp
adc
inc
cmpsb
jbe
lods
sbb
loop
jno
pop
in
std
loope
cmpsb
pop
daa
xchg
fidivrl
pop
pop
pop
add
mov
loopne
sbb
cltd
add
xor
shrb
or
jne,pt
aaa
sub
mov
dec
xchg
nop
mov
movsl
iret
sbb
push
and
clc
xorb
adc
sbb
cmp
imul
mov
insl
push
push
jl
lahf
cmpsl
xchg
out
sti
repnz
push
enter
lahf
push
je
xchg
outsl
sbb
dec
in
xor
and
lods
add
rcrb
sub
test
ss
xor
fdivrl
repz
inc
outsb
test
lret
push
sti
test
mov
inc
fs
call
test
ljmp
data16
jno
mov
movsl
ret
push
cmp
data16
jle
mov
int
cmp
xor
jg
leave
mov
cmovno
stos
xchg
adc
push
ljmp
ficoml
loope
movsl
cmc
insl
sbb
mov
pop
lea
pop
cmc
scas
into
fldenv
pushf
shr
jns
addr16
push
push
rdmsr
or
inc
mov
pop
add
leave
xchg
mov
icebp
popf
call
ficoms
fwait
inc
mov
sub
addps
in
stos
cli
loope
mov
lcall
push
sbb
mov
xor
dec
stos
aas
aaa
jle
or
adc
dec
sub
ljmp
adc
or
jp
pop
fxch
inc
adc
add
xchg
sbb
test
outsb
das
add
mov
xor
cmpsb
mov
sbb
insl
ret
mov
shl
mov
mov
jle
dec
mov
xor
adc
lahf
iret
out
xchg
mov
sahf
jl
jbe
xlat
adc
in
lods
ror
repz
add
ret
dec
cmp
in
xchg
negb
or
push
mov
popf
xor
daa
cmp
dec
lea
fnstsw
out
std
adc
sub
movsb
jno
ret
les
and
jp
mov
cld
hlt
push
mov
mov
mov
mov
test
divb
cmp
jp
push
adc
xchg
sarl
pop
ficoml
cmp
jecxz
jecxz
and
or
in
fstp
pop
sub
adc
popf
movsb
xor
leave
push
ss
pushf
rcll
fildl
lret
inc
xchg
std
outsl
jle
xor
jp
int
scas
push
lods
iret
in
pusha
mov
or
rol
pop
out
aaa
lods
xchg
arpl
jae
les
mov
pop
sarb
mov
mov
pop
shrb
loop
repnz
xor
jmp
adc
pusha
push
sub
xchg
dec
popf
and
fsubp
xlat
lods
mov
scas
aas
out
and
out
cmp
xor
test
xchg
lret
inc
cld
into
sbb
sbb
push
adcb
jns
inc
ror
jge
mov
std
mov
std
outsl
dec
adc
imul
mov
aam
mov
fsubrs
pusha
lea
and
adc
stos
pop
call
roll
fxch
add
add
icebp
ret
inc
andl
jecxz
roll
and
psubsb
out
js
sarl
sbb
or
inc
add
xchg
jno
push
mov
loope
jl
popf
pop
push
jp
flds
cmp
sarl
push
sub
adc
es
dec
cltd
out
xor
daa
xorb
push
push
cmp
in
xchg
in
fnstsw
push
or
test
sub
mov
pop
sbb
cmpsb
insb
in
ret
xor
cmpsb
inc
jne
cmc
mov
ljmp
xchg
mov
add
and
aaa
jg
pop
sbbb
xor
jg
iret
scas
push
test
scas
pop
imul
movsb
xor
mov
cmp
imul
cmp
push
inc
das
test
pop
mov
loopne
mov
push
inc
jle
mov
push
test
and
add
push
jmp
stos
mov
int
and
xchg
mov
mov
sub
inc
in
cmp
xchg
loope
lret
jp
mov
daa
fsubl
cltd
cmp
xor
mov
cmp
and
add
lea
cmc
and
popa
mov
cmp
fidivs
js
dec
xor
in
sarl
add
and
sub
pop
cmpsl
ds
pop
pop
mov
data16
xchg
sub
adcb
das
fucomi
sbb
scas
aam
popa
lods
out
idivb
lock
dec
lock
jo
stc
sbb
mov
daa
push
lock
xor
push
mov
push
lret
jmp
stos
and
jecxz
jle
push
cmpsb
icebp
jno
or
aam
mov
leave
jbe
mov
pop
rcll
mov
cmpb
cmp
jl
mov
ljmp
xorb
hlt
ja
fistps
imul
int3
pmaxub
push
fldt
icebp
ds
and
loop
add
in
push
push
cmp
ds
orb
fs
xor
xor
arpl
mov
out
shlb
jg
xchg
aas
sbbb
fsubr
push
clc
add
mov
jg
xchg
xchg
jnp,pt
xor
jno
das
lea
add
test
mov
cwtl
xor
ficompl
sarl
jle
or
pop
and
std
test
lods
sbb
imul
xor
lods
addr16
mov
fdiv
std
sbb
mov
xchg
xlat
ret
dec
ja
js
jae
dec
xor
test
arpl
or
cmp
adc
mov
xchg
dec
or
fstps
mov
jl
adc
jb
ss
mov
aas
push
lret
cmpsb
cmp
xchg
test
jnp
ja
scas
loopne
pop
mov
or
sub
pop
out
adcl
add
mov
stos
cmp
mov
arpl
jno
into
push
ret
fcoml
mov
mov
test
pop
imul
test
sbb
addr16
std
xchg
scas
add
out
push
ja
mov
lds
ja
shl
cmc
xchg
cmp
aaa
mov
xor
mov
imul
leave
push
movsl
pop
iret
and
scas
je
jmp
repz
mov
incl
push
sarb
cmp
ret
sub
jbe
shlb
dec
scas
popa
out
out
lods
addr16
lret
mov
int3
aam
adcl
mov
out
sub
adc
add
mov
sbb
sarl
pop
test
call
xchg
jmp
fwait
cmpsb
mov
adc
push
mov
mov
pushl
movsb
mov
int
jle
test
push
adc
pushf
inc
inc
cmpsl
repz
pop
mov
xchg
movsb
lret
push
sub
xchg
and
jb
push
xor
push
inc
cmp
mov
out
imul
push
std
les
dec
add
xchg
mov
mov
icebp
fnsave
adc
cltd
test
shl
xchg
dec
cli
loop
mov
mov
test
imul
cs
idiv
ss
sti
inc
into
test
or
in
add
inc
cltd
jb
ja,pt
fists
dec
subl
stos
lcall
ljmp
xchg
test
xor
mov
inc
pop
cld
test
push
std
lahf
sbb
cltd
mov
call
dec
cmp
or
inc
mov
jg
fnsetpm(287
int
lahf
pop
outsl
mov
popa
aad
arpl
out
mov
xor
int
xchg
or
cmp
addr16
mov
pop
xchg
jp
and
or
addr16
jne
push
jge
ss
sub
rorb
and
sub
xchg
xor
fnsave
fdivp
sub
movsb
sub
jge
jmp
inc
mov
and
test
sub
mov
and
repz
mov
pushf
inc
mov
mov
outsl
bound
push
cmp
and
repz
lods
lret
pop
xchg
xor
mov
das
sbb
jbe
xchg
sbb
sti
jne
jae
or
arpl
popa
push
neg
lahf
es
lea
mov
and
dec
cltd
outsl
scas
dec
add
xor
popf
inc
pushf
cld
xor
mov
das
mov
mov
jo
dec
xchg
cltd
cmp
lcall
jle
imull
addb
cmp
scas
stos
pop
aas
mov
cmpsb
cmp
mov
sti
pop
hlt
mov
push
pusha
mov
push
test
lret
cwtl
mov
std
xchg
mov
jge
jae
lea
sub
and
leave
pop
mov
sub
ss
add
push
sbb
jg
dec
jae
dec
inc
sub
scas
lds
dec
lods
mov
hlt
xchg
mov
add
fs
pop
sub
lahf
mov
leave
psubw
stc
mov
fnstsw
mov
push
dec
xchg
jmp
cld
dec
out
mov
xchg
push
mov
fdivr
clc
mov
divl
fbstp
pop
rcll
js
inc
subb
ja
cmp
das
or
adc
cs
fnstcw
cwtl
enter
and
test
and
mov
stc
stos
rcrb
sub
fildll
and
and
xor
mov
mov
stos
call
push
rcrb
subb
push
dec
nop
into
jmp
xlat
inc
loop
lahf
pop
insb
jp
add
mov
jns
repnz
fwait
mov
and
into
mov
xchg
push
int
pop
mov
cmpsb
inc
inc
lret
mov
cmpsb
insb
call
jp
lahf
xor
fs
add
test
ljmp
mov
mov
scas
imull
clc
rcrl
ja
ror
push
or
push
mov
out
stc
pop
dec
adc
out
mov
mul
push
xor
ljmp
jmp
adc
xchg
add
xor
pop
xchg
ja
pop
push
sub
mov
filds
movsl
pop
mov
into
punpckhdq
sbb
dec
jo
sbb
jle
gs
lods
rcrl
inc
out
cld
lods
rcl
mov
jo
jle
scas
pusha
jl
pop
adc
imul
mov
mov
ret
in
pop
cmpsb
sub
jmp
vrsqrtss
xlat
jae
mov
lds
or
fwait
jge
andb
inc
call
or
ret
dec
and
or
stos
mov
loop
in
data16
sbb
push
push
cli
or
mov
jo
out
imull
pushf
cmpsb
je
lcall
int3
aaa
mov
pop
inc
call
xor
rorb
mov
cli
cmp
ret
sysenter
push
fs
sbb
aas
xor
mov
xchg
pop
ficoms
lret
imul
out
pop
lock
nop
push
pop
stc
int
stos
xor
lret
out
lock
cltd
shl
test
std
push
loope
mov
pop
push
or
jo
and
adc
popf
lods
loop
xor
movsl
lods
add
mov
push
cmp
dec
push
rorb
lret
xor
lret
leave
data16
clc
xorl
mov
shlb
pop
add
pop
popf
and
mov
jge
out
cmpsb
jne
xchg
dec
aad
jb
data16
jns
inc
cmpsb
xor
scas
xchg
pop
dec
lret
adc
push
mov
pop
lods
outsl
into
pop
sar
dec
imull
mov
push
out
lcall
sub
inc
notb
push
cmovo
mov
and
xor
xor
pop
inc
ds
ja
push
stc
das
stos
leave
insb
aas
lods
mov
js
jno
push
rolb
fistpl
int
sub
push
push
cmovp
fwait
xchg
dec
jb
std
mov
ret
adc
and
daa
aam
loope
aaa
sub
lock
jmp
cmpsl
std
enter
sbb
shlb
fistpl
pop
jo
paddb
xor
jb
icebp
aaa
push
cmp
lret
xadd
cli
setb
add
mov
pop
pusha
dec
cmp
sub
cmp
insl
sahf
js
insl
out
icebp
pop
es
mov
icebp
mov
and
arpl
mov
leave
sub
data16
cmp
sub
dec
ja
push
faddp
aad
cli
sub
pand
adc
mov
and
popa
xchg
movsl
push
lcall
aaa
cwtl
push
cli
xchg
mov
stos
jno
orl
xchg
incb
pop
pop
imulb
dec
xorb
icebp
in
mov
fisttpl
push
and
adc
cmp
sbb
rcll
out
mov
out
je
xor
ljmp
stos
and
cs
and
lahf
mov
cltd
jns
xchg
cmp
cmpl
aaa
push
xor
push
sbb
sub
lods
nop
cmp
rcll
sahf
xchg
negb
arpl
data16
in
mov
sbb
ljmp
stc
and
mov
xchg
rolb
fnstsw
cld
sar
lock
stc
les
enter
or
cmp
mov
push
pop
fcoml
sbb
add
jb
push
add
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
jb
jo
mov
push
out
push
call
inc
cmp
push
sub
aas
add
mov
mov
adcl
lahf
xchg
mull
inc
out
aam
pop
add
mov
scas
and
and
data16
add
scas
enter
add
insl
imul
cwtl
pop
or
mov
adc
pop
push
jno
or
fists
ja
xor
or
mov
inc
aam
call
in
inc
add
mov
mov
add
test
sbb
shlb
call
jmp
inc
and
ds
sbb
mov
cmp
or
and
aad
jmp
call
add
pusha
out
pop
sub
mov
movl
inc
mov
cmpl
cmovo
incb
call
inc
jmp
lea
fsubl
ror
ret
inc
sbbl
cmp
adc
pop
adc
test
inc
push
lea
mov
inc
mov
mov
sub
daa
inc
lea
orb
add
rcl
cld
movnti
dec
jne
mov
ret
inc
push
inc
dec
inc
inc
sub
inc
sub
popa
mov
test
cmp
inc
jb
add
push
sub
mov
jmp
or
ret
pop
test
jne
mov
push
call
rorl
rclb
fcoml
popw
cmpsb
dec
sbb
push
push
push
xor
add
sti
cmp
and
mov
dec
sbb
sbb
inc
pop
test
cmpsb
addr16
mov
orb
jnp
inc
mov
mov
je
mov
mov
xchg
mov
pusha
ret
sub
cmp
shl
rorl
rcrl
ljmp
rclb
ljmp
cmp
je
adc
add
adc
movb
fwait
ds
jns
aaa
mov
popf
mov
je
lret
push
call
movsl
mov
push
jmp
mov
cmp
je
test
out
lea
inc
add
dec
inc
mov
into
pusha
fcmovb
add
out
cmp
jne
xor
lret
add
pop
je
test
jge
cmp
add
out
and
rolb
cmp
mov
imull
repz
pop
test
je
ja
pusha
xor
ret
ss
int3
push
add
pop
mov
pop
fmul
arpl
arpl
adc
into
adc
adc
jmp
cmpb
je
ret
jb
add
jbe
add
or
adc
inc
inc
inc
cmpsb
pop
insl
subl
clc
int
mov
cmp
out
ss
or
movsb
sub
lea
jg
clc
dec
pop
insl
adc
test
push
hlt
adc
arpl
pop
cmp
loopne
ret
xor
fisttpl
xor
or
cmp
shr
jns
and
addr16
push
cmc
hlt
ret
or
adc
sbb
arpl
and
add
lock
fsubr
movb
mov
int
jbe
fldcw
orl
cmpb
mov
stos
cmp
xor
jo
rcll
mov
cmova
cli
mov
add
sub
jbe
add
or
loopne
std
pop
jae
es
pop
adc
mov
mov
jl
sub
adc
pop
les
orb
sbb
inc
push
fsubs
sbb
jno
sub
lods
push
pop
ficompl
lock
subl
pop
sub
popa
mov
adc
add
jp
bound
cmp
jbe
adc
rorl
jne
or
mov
push
dec
in
in
gs
sub
add
scas
push
lock
sub
sub
push
or
divl
dec
adc
repz
popf
or
ror
or
mov
cmp
xor
dec
sbb
xorl
mov
adc
icebp
shlb
or
or
sub
movaps
jle
xor
roll
aas
sbb
xor
and
in
loop
push
jg
cld
inc
xchg
andb
mov
and
adc
adc
imul
jmp
mov
xchg
dec
inc
push
inc
xor
and
xor
xor
cwtl
popa
repnz
jne
or
push
fnstcw
andl
sbb
push
pushf
es
jecxz
sbb
jmp
jb
add
jne
addr16
testb
adc
push
xor
in
inc
jne
sbb
inc
push
les
add
push
lods
cmp
xchg
iret
mov
push
sub
adc
jns
loop
xor
decb
xor
mov
mov
push
pop
cmp
add
popl
mov
enter
pusha
les
push
dec
pop
les
adc
sti
inc
hlt
mov
pop
push
jmp
pop
lock
fisubrs
lds
push
in
push
inc
dec
pop
cmp
int3
or
push
pop
ss
mov
add
push
push
cmp
jecxz
sbb
sub
fsubr
pusha
adc
cmp
dec
xchg
outsb
into
pop
mov
cmp
xor
cmp
ret
xchg
pushf
faddp
gs
mov
lock
out
int
sahf
icebp
movsl
or
push
frstor
xchg
add
cmp
sarb
xor
cwtl
shl
out
movsl
or
cmp
cmp
repnz
push
loopne
xor
imul
pop
sub
inc
xchg
jmp
adc
inc
mov
xor
sub
xadd
fnstenv
mov
sbb
adcl
jnp
daa
add
jg
pop
dec
aas
add
lahf
mov
adc
add
stos
xor
sbb
call
sarb
loopne
xchg
ja
push
pop
dec
cmp
xor
push
xchg
jecxz
mov
add
fstpl
sbb
into
imul
stc
jecxz
repz
or
stos
ja
sbb
push
adc
lahf
add
iret
int
add
in
cmpsl
xor
and
negl
lock
xor
roll
add
add
mov
adc
xlat
and
out
pusha
push
stc
push
add
inc
add
cmp
and
pop
aaa
out
bound
mov
lcall
jmp
jl
mov
dec
mov
mov
push
mov
sub
jl
push
nop
movl
pop
dec
cmp
fiadds
sbb
sub
push
shrb
mov
push
add
and
pushf
test
rcll
or
addb
push
jmp
adc
jp
arpl
pop
fsubl
add
imul
cmp
jp
mov
cmp
and
inc
js
xor
ret
std
jne
dec
dec
push
mov
pop
and
jmp
jle
ror
push
sbb
jecxz
pusha
and
add
adc
add
mov
adc
in
fstl
pusha
xchg
jns
sar
jno
xchg
dec
arpl
mov
xchg
movnti
sbbb
shlb
orb
stos
js
mov
xor
adc
pop
aaa
dec
insb
popa
pusha
inc
lcall
int
shrb
add
push
jmp
insb
pop
add
inc
xchg
insl
enter
mov
pop
or
and
shll
insl
lret
xorl
ret
jns
cmp
mov
or
dec
and
mov
add
inc
add
test
mov
ss
rorb
push
jne
out
fdivs
mov
pusha
test
xchg
cmp
xchg
movsb
roll
gs
aam
clc
add
mov
cmpl
es
add
mov
ret
or
enter
lret
adc
pop
cwtl
mov
jno
aas
fnstenv
xor
dec
loopne
in
jle
imul
jb
jg
pop
jo
mov
fsubl
notb
add
adcl
and
ret
nop
push
outsl
clc
rcll
jnp
jae
push
mov
sub
leave
sbb
sbb
pop
sbb
lret
mov
leave
rclb
dec
mov
or
out
adc
andb
xchg
clc
pop
ja
mov
dec
imul
roll
jge
nop
push
adc
and
lods
shlb
xchg
xchg
inc
repnz
jle
out
mov
sbb
mov
jnp
mov
push
in
add
loopne
lcall
call
sub
push
cmc
and
rorb
mov
sub
lea
out
lahf
add
and
sub
stos
jns
test
jo
dec
inc
bound
test
test
xchg
arpl
sbb
mov
shll
test
sarl
sbb
add
lds
xchg
add
mov
dec
dec
call
pop
xor
pop
sti
jbe
cmpsl
sbb
insl
ret
xchg
mov
cwtl
add
outsb
mov
dec
cmp
xchg
subb
pop
lret
sub
popa
loop
divb
add
inc
cmc
aaa
add
push
xchg
data16
out
xor
mov
cld
fwait
add
repz
hlt
sub
mov
outsb
fs
xor
clc
adc
add
inc
add
and
pop
sub
jo
inc
xchg
inc
sub
clc
icebp
and
mov
xchg
test
aas
fiaddl
icebp
pusha
insb
and
add
adc
push
pop
shl
push
lea
sbb
jno
mov
adc
lock
xchg
sbb
push
adc
jno
lock
in
les
pop
shlb
adc
mov
in
arpl
out
adc
xchg
sub
icebp
inc
outsl
into
xor
inc
push
xchg
lods
andb
pop
pop
pop
andb
push
xlat
lock
cli
dec
clc
fstpt
mov
sbb
dec
in
orb
in
push
mov
out
fst
sub
cmp
loop
stc
add
sbb
rcl
dec
jne
cs
orl
dec
jo
xchg
sbb
dec
stc
stos
popa
sbbl
test
pop
push
xchg
mov
add
mov
je
fiadds
std
gs
pop
shlb
shl
push
flds
ljmp
and
ret
and
adc
mov
xor
test
enter
pop
or
sar
push
pop
pop
flds
call
xor
popa
and
inc
push
mov
insl
popa
adc
add
std
xor
dec
sbbb
iret
sbb
push
push
inc
pop
adc
in
add
and
addl
mov
or
out
popa
popa
in
jbe
mov
fcoms
sbb
dec
pop
faddl
fwait
cmp
bound
push
adc
loopne
mov
pop
in
jge
adc
aad
inc
pop
cmp
sbb
mov
jnp
xchg
enter
out
stos
xchg
pop
shl
inc
icebp
pop
fadds
rorl
mov
call
dec
push
ds
addb
push
das
mov
add
insl
mov
loopne
in
das
mov
jae
ja
or
sbb
mov
mov
dec
enter
cltd
addl
loopne
movsl
lret
outsb
add
imul
or
test
pop
pop
mov
insl
push
ret
pop
and
scas
out
add
mov
outsl
mov
jmp
push
dec
ret
push
call
repnz
sarl
and
stc
mov
xlat
mov
mov
add
pop
sar
sbb
xchg
push
sbb
add
add
jo
sub
les
andl
fs
sub
or
test
mov
nop
add
pop
gs
out
mov
stos
and
add
lods
imul
pusha
aad
pop
popf
lret
cmp
ret
jmp
outsb
lahf
aas
add
pop
rcrl
jecxz
xchg
push
push
fs
shl
andb
pop
jle
test
fsubp
out
test
stc
xor
int3
mov
adcb
jo
adc
cltd
sub
add
sub
sub
fdivrp
cltd
imul
insb
sub
pop
jle
gs
mov
adc
das
pop
push
xor
jl
jns
push
inc
ljmp
push
cmpsb
inc
xor
lods
pushf
or
adcl
repnz
mov
clc
add
cmpsl
in
pop
adc
add
out
push
and
xchg
nop
imul
or
stos
je
inc
or
mov
or
test
orb
inc
add
or
pop
pop
jp
fsub
pusha
mov
nop
dec
adc
inc
subb
pop
or
loope
xor
int
xchg
jp
and
inc
ret
out
mov
and
call
es
mov
add
add
loope
insl
test
in
repnz
inc
and
mov
mov
sub
cmc
mov
and
call
jecxz
mov
add
push
mov
cli
aad
std
daa
int
loopne
lret
in
inc
outsl
cmp
inc
pop
mov
mov
mov
add
sbb
inc
mov
shr
stos
ret
inc
sbb
dec
pusha
pop
xchg
cs
cmp
loopne
in
lahf
in
jae
pop
ja
sub
xchg
aam
and
pusha
pop
mov
out
mov
pusha
int3
cmp
cmp
fsubs
pusha
adc
dec
loopne
mov
test
xor
inc
xorl
mov
inc
js
dec
stos
dec
push
je
lds
clc
cli
inc
test
push
int
adc
mov
dec
test
out
push
or
add
lods
inc
fs
loopne
add
cli
inc
les
xchg
test
and
rcll
add
fwait
pop
push
xor
pushf
pop
sbbl
mov
pusha
stos
test
rcrb
lock
gs
daa
mov
test
out
pop
cmpsl
mov
fists
adc
jmp
adc
sbb
add
dec
pushf
cwtl
cwtl
lahf
roll
je
fcomip
add
adc
cwtl
jg
pushw
sub
sbb
add
mov
or
inc
les
push
dec
sysenter
sbbb
and
push
or
jae
cmp
fdivr
in
add
inc
movsb
stos
mov
cs
loopne
xchg
sub
add
sub
shrb
out
jge
mov
sarb
push
rcr
add
cld
jo
sub
inc
adc
roll
cmp
int3
dec
cli
outsl
push
jb
cmp
data16
bnd
sbb
or
push
or
push
add
pop
stos
clc
add
arpl
pop
cli
rolb
cs
dec
loop
adc
jnp
nop
insl
shll
push
xchg
add
ja
in
lcall
in
dec
jp
loope
int3
push
add
outsl
inc
mov
incb
mov
jle
stc
fs
popa
inc
xor
push
loope
pop
movsl
loopne
psubusw
outsl
mov
enter
xchg
and
cs
add
add
in
inc
dec
jno
inc
xor
xlat
outsl
rorb
adc
push
sbb
mov
inc
out
lock
test
xor
and
pop
sbb
je
fs
clc
daa
add
dec
and
dec
xchg
xchg
add
jbe
ja
clc
jmp
push
insl
inc
or
bound
add
in
int3
dec
add
mov
mov
sub
add
imul
xchg
clc
jb
add
in
lret
jo
mov
or
jbe
add
insl
test
std
xor
jnp
cmpb
jae
cmp
popf
sbb
jo
add
and
ja
xor
ljmp
xchg
stos
mov
sub
ja
push
pop
outsl
mov
mov
push
arpl
mov
fsub
loope
outsl
sub
mov
sbb
cltd
jp
shlb
out
xchg
push
add
cmp
ds
ret
pop
lods
and
add
jg
ljmp
jmp
mov
mov
cmpsl
xor
lret
jo
xor
add
scas
xor
xor
mov
sbb
xor
mov
xchg
subl
or
push
pop
movntq
or
adc
jle
mov
outsl
add
outsb
adc
out
sbb
ret
imul
insb
pop
adc
lahf
pusha
xchg
adc
call
outsb
cmp
pop
and
adc
aam
out
iret
out
call
daa
sti
sub
enter
inc
hlt
rorb
ss
fdivl
jae
xor
rorb
enter
ljmp
xchg
xor
and
mov
mov
push
and
lret
mov
pop
mov
add
push
cmp
push
mov
mov
std
and
and
mov
adc
or
add
sbb
lock
add
jo
in
inc
fldl
or
pop
cmp
mov
mov
shl
xchg
push
jno
sahf
sbb
xchg
js
add
inc
lods
call
fsts
fs
add
pop
push
and
fmuls
or
add
in
add
sar
int3
push
jle
inc
push
das
xlat
adc
adc
dec
cmp
sbb
push
sbb
pop
or
xor
out
adc
cmp
jmp
pop
divb
fisubl
pop
add
push
and
loopne
mov
mov
push
add
pop
lods
out
push
enter
movsl
adc
push
insb
mov
mov
xor
and
ret
jae
pushf
call
repnz
push
clc
fcmovnu
xor
push
mov
add
sub
xchg
outsb
mov
mov
mov
or
filds
test
mov
les
push
xor
in
sbb
mov
and
push
pop
push
sub
mov
aad
adc
std
xchg
shlb
les
rorl
inc
push
mov
sub
adc
and
pop
pusha
outsb
shll
inc
adc
ret
sbb
clc
inc
addb
pop
outsb
pusha
les
add
adc
sub
into
pop
pop
pop
mov
or
lret
sbb
test
sub
dec
fistpl
addb
pop
lahf
add
xchg
pop
rol
inc
movsb
scas
sbb
rol
inc
mov
push
xchg
add
mov
mov
ss
test
add
scas
adc
adc
in
sbb
sbb
sbb
mov
jbe
or
xor
aad
inc
out
adc
lcall
gs
fmuls
mov
stos
mov
subb
mov
iret
popa
xor
jl
sbb
pop
xchg
hlt
cmpsl
inc
or
loopne
nop
jo
mov
and
sbb
mov
cld
cmp
pop
das
repz
lods
in
add
fadds
mov
shlb
inc
jb
cwtl
daa
and
jl
in
cmp
mov
push
shl
sahf
iret
inc
and
add
fcoms
ja
jle
jne
mov
bound
addr16
xchg
sbb
jno
add
test
in
and
adc
test
sub
ss
push
mov
dec
add
pushf
lahf
adc
xchg
nop
dec
pop
or
mov
mov
lock
add
mov
dec
cmc
sub
clc
bnd
xchg
in
loopne
adcb
lahf
orl
mov
test
or
and
adc
stos
or
push
add
aaa
aas
push
mov
add
pop
mov
sub
push
sbbb
out
jl
jae
add
or
dec
dec
jo
sbb
adc
dec
ret
push
push
hlt
movsb
mov
mov
jns
cmp
addl
fisubl
in
rol
mov
jo
inc
in
push
and
daa
sbb
cwtl
rcr
and
jg
out
add
lcall
adc
mov
mov
mov
sti
xchg
ljmp
out
add
cmc
fsubrl
inc
mov
outsb
adc
adc
add
repz
fbld
mov
jae
hlt
jmp
pop
inc
je
add
out
fsubrs
in
pushf
cmp
fstpl
out
dec
dec
add
pusha
inc
addb
adc
test
dec
add
sub
inc
rcr
xor
test
ret
faddl
lods
scas
ret
outsb
pop
rclb
jno
lret
rcrb
xor
in
pop
add
jb
shrl
xor
pop
push
andb
cwtl
push
daa
dec
dec
enter
cmp
leave
add
inc
call
inc
mov
xchg
rolb
xor
jnp
adc
and
js
dec
cmp
test
sub
movsb
add
inc
pop
xchg
js
and
cld
jo
arpl
dec
mov
je
movsb
pop
imul
mov
mov
jge
mov
and
fdivs
or
jbe
imul
push
fidivrs
lock
and
icebp
insb
dec
jno
add
movsl
ret
push
stos
and
mov
fiadds
mov
aas
testl
add
sbb
cli
mov
sbb
gs
and
in
das
jl
push
xlat
and
xor
xchg
add
test
sbb
push
xchg
mov
stc
ret
add
add
add
daa
mov
and
daa
xor
mov
mov
pop
pusha
js
in
inc
jno
or
mov
adc
je
add
incb
hlt
in
cli
jmp
das
inc
dec
dec
pushf
popa
lods
add
adc
sub
adc
shrb
push
xchg
jae
cli
dec
pop
adc
push
sbb
and
sub
mov
repz
dec
movsl
nop
in
in
push
dec
xchg
test
imul
addb
push
lock
pushl
and
or
or
ljmp
pop
jg
lock
mov
nop
jnp
outsb
and
lret
hlt
or
dec
test
call
fsubl
cmp
adc
dec
inc
imul
in
push
add
sahf
inc
cld
in
popf
pushl
ret
mov
test
and
add
clc
mov
cwtl
sbb
loopne
lret
rolb
aam
movsl
rcrb
jmp
add
divl
scas
push
jle
arpl
loopne
and
rcrb
addl
nop
and
arpl
dec
adc
mov
or
hlt
outsb
iret
jb
bnd
fs
sbb
add
sarb
inc
jle
pop
dec
cwtl
pop
mov
cmpl
adc
jae,pn
xchg
inc
inc
xor
add
ror
call
das
adc
cwtl
mov
lock
or
enter
and
add
jge
mov
shlb
outsb
add
jmp
mov
pop
stos
xchg
cmpb
xchg
mov
xorl
cmp
add
fwait
in
sbb
es
add
sbb
out
pop
loopne
cltd
inc
xor
pop
inc
push
jmp
loopne
dec
jle
cld
pushf
pop
inc
sub
jp
dec
shlb
lods
inc
jns
add
adcb
xor
jecxz
and
in
pop
test
and
add
sarl
inc
les
lret
xchg
or
in
push
fldl
xchg
mov
test
std
jmp
insb
inc
int3
xor
ljmp
and
xchg
push
mov
aas
dec
xor
add
fiadds
push
mov
mov
out
jno
shll
pop
add
push
stc
icebp
mov
je
ss
addb
lock
mov
pop
nop
inc
add
call
push
nop
movsb
pusha
dec
cmc
subb
xor
jge
add
cmp
into
test
popa
repz
add
rol
cmp
repnz
mov
pusha
faddl
adc
push
ja
and
dec
int3
push
add
daa
xor
inc
jbe
sbb
hlt
out
sbb
dec
das
xor
test
call
in
mov
xor
mov
or
or
fldl
dec
inc
shl
push
inc
dec
sbb
out
addb
mov
aad
mov
les
cs
ds
rcrb
xchg
or
into
pop
adc
in
inc
cmpsl
and
cli
jle
pop
pop
loope
pushf
outsb
cmp
test
es
aas
and
and
mov
cmp
push
mov
mov
mov
or
scas
xchg
enter
add
in
lock
loopne
sbb
and
adc
xchg
jp
adc
in
call
sbb
mov
scas
pop
cmp
mov
shrb
sarb
xorb
or
subb
mov
or
out
imul
pop
rcrb
push
ljmp
mov
mov
dec
sbb
pop
mov
lret
out
mov
ljmp
ja
mov
or
mov
faddl
ret
add
lods
repnz
in
sub
fs
loopne
jns
add
sub
out
pusha
stc
mov
push
gs
aad
xor
out
mov
pop
and
add
shlb
xchg
in
sbb
jo
daa
sbb
xchg
mov
jo
push
lock
mov
add
mov
push
pop
mov
mov
add
fdiv
xchg
xchg
dec
js
js
add
lea
sbb
inc
add
imul
inc
push
movsl
pushf
ja
repz
sbb
sbb
call
adcb
dec
int3
jl
outsl
ss
outsb
xor
sbb
add
stc
out
insb
imul
dec
and
mov
lret
push
xcrypt-ofb
cmpsl
scas
test
mov
fsubrl
jp
add
xor
sub
les
mov
daa
add
push
adc
fimull
xchg
cmpsb
int3
ret
push
mov
jle
add
inc
jo
dec
xchg
shll
push
in
dec
push
enter
sub
mov
mov
cs
addl
dec
clc
cmp
js
or
in
inc
addr16
mov
ror
daa
mov
dec
mov
pop
ror
sbb
divb
jb
pop
in
mov
add
loopne
sub
dec
lret
loop
incb
mov
and
mov
lods
add
mov
nop
pushf
lock
jns
jl
jo
and
cmp
or
cmp
std
pop
push
stos
sub
fiaddl
and
push
loopne
add
lretw
add
fmuls
push
orb
lea
stos
ficompl
jb
out
jge
xchg
cmp
xor
xlat
adcl
adc
mov
hlt
inc
xor
addl
dec
xchg
or
js
dec
cmp
and
sbb
cmp
je
cwtl
dec
test
or
xchg
inc
mov
and
std
push
push
enter
pop
sbb
mov
outsb
cli
and
enter
push
push
sahf
pusha
clc
mov
out
xor
orb
pop
lret
mov
cmc
mov
dec
loope
or
loop
enter
mov
movsb
test
jno
stc
dec
std
sub
jg
mov
dec
dec
lock
das
adc
add
cwtl
clc
movsl
pop
rorb
cs
push
nop
xor
dec
inc
push
hlt
loop
xor
popa
jmp
fbld
es
and
pop
in
add
or
pop
loope
test
out
cmp
mov
movsb
sbb
xor
stc
dec
fsubrs
add
push
in
int3
adc
add
push
bound
push
fwait
shlb
std
and
sahf
enter
fs
dec
into
in
jl
or
cwtl
add
insl
mov
stc
cmp
adc
test
pop
mov
lea
pop
sbbl
test
pop
les
jo
sub
push
xchg
xor
adc
add
cmc
test
pop
test
pop
shrb
rolb
and
cmpl
enter
add
clc
enter
sbb
cltd
sub
in
pop
push
inc
xchg
clc
cmpl
or
cmp
repnz
dec
xchg
inc
mov
pop
xchg
icebp
pop
das
adc
or
in
pusha
dec
cwtl
rcrb
push
cmp
stos
push
loope
enter
dec
dec
push
mov
jne
xchg
mov
lock
les
lret
shrl
pop
jg
pop
mov
and
cmpsl
rcl
test
add
lods
hlt
dec
dec
faddl
dec
sbb
fs
nop
sbb
test
loopne
add
loopne
out
aaa
je
mov
add
loopne
push
movsb
call
inc
cmp
cmp
fistl
inc
in
jb
mov
cmpsl
or
adc
push
clc
in
into
cltd
or
aad
cwtl
mov
scas
fs
dec
xchg
jae
lret
pop
rcrb
call
fs
bound
shlb
mov
mov
sahf
les
inc
jb
add
stc
enter
and
and
add
sti
xchg
xor
shlb
clc
inc
jg
mov
pusha
pop
mov
xchg
fstpt
jmp
inc
and
cmpsl
jl
pop
nop
jae
lods
jbe
xchg
xor
icebp
clc
xlat
es
rolb
in
add
jge
add
scas
jle
pop
rorl
jnp
push
pop
cwtl
test
and
clc
lock
and
push
subb
and
stc
cs
inc
mov
hlt
or
dec
jne
test
mov
cmp
lock
sub
mulb
cmpsl
aad
insl
jno
or
jo
xor
jle
mov
mov
push
xorb
jge
pop
cmp
out
adc
je
push
add
sub
mov
lret
jae
dec
test
sbb
xor
push
popa
add
mov
mov
in
fs
mov
clc
and
test
inc
out
movsb
push
test
inc
cmp
pusha
xor
adcl
scas
je
pop
cmpsb
lods
add
mov
push
faddl
out
lcall
inc
jbe
push
lret
inc
lock
dec
xor
dec
sub
clc
adc
sub
inc
lds
in
mov
call
jl
int3
pop
inc
mov
dec
repz
orb
bound
les
mov
jbe
adc
mov
xchg
fildl
adc
mov
fdivrs
sbb
inc
adc
mov
sub
inc
jno
inc
xchg
cli
stc
je
into
xor
add
sub
dec
add
pop
mov
fsubr
ja
push
add
inc
rorl
mov
inc
mov
push
pusha
fcmovnb
test
dec
test
jecxz
add
adc
stos
ljmp
cmpb
xchg
and
mov
xor
and
adc
dec
fmull
daa
out
push
ja
adc
testb
repz
xorl
add
or
push
js
insl
data16
aam
adc
aam
inc
je
loop
fcoml
ret
rorl
sub
ljmp
stos
in
addb
jne
add
sbb
pusha
adc
ficompl
mov
lock
xor
in
and
andb
jne
and
jge
in
xor
adc
sbb
sti
xchg
mov
shlb
cmp
fldl
stc
inc
and
lret
fst
mov
mov
clc
mov
inc
je
sbb
push
loopne
iret
jl
mov
pushf
xchg
jno
arpl
dec
sti
add
inc
sub
fiadds
stc
dec
xchg
loop
cmp
scas
lods
add
mov
out
stos
loope
and
cs
in
sbb
inc
pop
xor
fadd
clc
add
jne
in
pop
jg
pop
cmpl
cmpsl
jns
bound
iret
stc
pushf
jno
sbb
test
inc
mov
and
mov
je
mov
test
ljmp
push
add
in
cmp
fdivr
add
fmuls
dec
ret
in
pusha
mov
xchg
cli
sub
add
adc
adc
in
cmpb
dec
je
push
mov
push
inc
in
lret
inc
enter
mov
dec
cwtl
and
pusha
push
insl
inc
aaa
add
dec
mov
adc
mov
out
stc
jmp
add
add
daa
sub
mov
int
adc
jge
add
mov
nop
xlat
xchg
test
in
mov
out
cmp
mov
push
cmp
xlat
out
add
adc
mov
insl
adc
popf
rolb
pop
adc
dec
fbld
or
sub
mov
push
insb
dec
and
cld
adc
push
aas
xlat
roll
fcmovnb
test
testl
andb
outsl
cmp
add
mov
xchg
jne
scas
shl
jl
pop
fcoml
mov
add
pop
jae
add
sub
fwait
mov
pop
data16
subl
and
push
xchg
mov
or
or
pop
shl
popa
cld
mov
push
daa
mov
in
int3
addb
daa
roll
pop
or
dec
inc
test
fdivrs
int3
adc
dec
gs
dec
mov
inc
push
pop
lds
xorb
rcrl
addr16
sbb
sbb
jno
pop
ror
loopne
dec
mov
cmp
sbb
push
sbb
jnp
and
mov
sar
addr16
jae
adc
outsb
ss
jno
xor
sbb
mov
xchg
stc
loopne
fldcw
sub
adc
xchg
rorb
adc
test
in
lahf
lods
lock
stos
test
subb
rclb
cwtl
pop
dec
cmc
jo
daa
jo
pop
mov
gs
lds
or
nop
jno
jns
sbb
pop
inc
adc
sarb
xchg
xchg
inc
adc
subb
pop
rcrl
pop
adc
cli
dec
mov
add
mov
lret
mov
xchg
xchg
jp
pusha
mov
sbb
insb
movsb
clc
jg
call
push
fists
iret
arpl
add
jno
or
test
bound
sub
mov
jle
test
mov
das
jecxz
mov
pusha
or
in
xchg
adc
inc
jmp
aam
or
popa
lock
add
jno
adc
ret
out
pushf
add
lcall
pop
mov
cmpsb
daa
cld
and
adc
mov
adc
mov
lea
add
loopnew
mov
jae
fisttps
lock
fs
jl
dec
cmpsl
in
fs
pusha
fmull
push
call
xchg
lock
shlb
mov
inc
pushf
pop
adc
sarl
xor
das
xor
lods
jmp
sub
int
das
mov
xchg
xor
icebp
dec
or
mov
repz
inc
add
andw
movsb
add
pop
xor
nop
adc
mov
les
pop
dec
hlt
inc
push
jo
shl
sub
lahf
sbb
arpl
jo
filds
mov
sub
aad
push
mov
mov
inc
leave
lea
cmp
out
in
pushf
mov
sbb
fwait
and
push
sub
pusha
shlb
sub
xchg
add
sti
ss
lds
mov
cmp
dec
sub
cmp
aam
loopne
repnz
xchg
sub
cmp
push
cmpsl
push
dec
push
je
push
xchg
mov
out
fsubr
add
ljmp
add
inc
sub
sbb
mov
pop
cmp
push
lds
orb
adc
loopne
mov
dec
in
nop
imul
test
push
push
loopne
jne
test
add
jo
jns
or
icebp
hlt
sbb
or
push
inc
pop
jno
loopne
mov
inc
push
or
pusha
out
mov
and
cmpb
inc
adc
and
add
sbb
call
cmp
pop
test
in
daa
nop
mov
arpl
and
push
lret
mov
mov
add
sbb
pop
gs
into
repnz
add
lock
pop
lock
mov
and
rorb
je
add
adc
ret
push
fmull
shlb
hlt
jl
pop
aam
mov
dec
cmpsl
cmp
lret
loop
inc
add
jo
int3
or
shlb
jmp
mov
sub
xor
out
mov
jns
shr
pop
cwtl
cmc
movsb
into
and
pop
out
repnz
in
out
call
mov
pop
inc
fiaddl
in
jl
mov
das
add
jl
inc
cld
data16
xor
sarb
push
fucomp
add
nop
cmc
xchg
push
adc
cmp
outsb
movsb
rclb
gs
inc
imul
ret
test
clc
mov
push
cli
repz
add
or
pop
jno
inc
mov
jecxz
mov
pop
lahf
xchg
inc
inc
fisttpll
mov
mov
mov
lock
sbb
aas
push
add
sbb
mov
mov
shlb
sbb
outsb
push
dec
testb
xchg
bound
out
lcall
mov
out
cli
jbe
mov
add
dec
aaa
shll
into
sti
nop
jo
rcll
jns
dec
test
or
rcrb
adc
loop
pop
ja
dec
xchg
dec
push
cmp
rclb
cltd
mov
inc
adc
out
enter
dec
std
push
shlb
repnz
add
mov
repz
xor
ja
mov
xor
sub
jno
add
fdivrl
outsb
enter
jbe
mov
in
sti
je
adc
ret
or
sbb
out
pop
and
test
das
enter
repnz
jne
add
xor
js
xchg
loopne
jle
adc
xchg
fs
adc
xor
jge
cmp
pop
xchg
jo
outsl
addb
ficoms
cmc
cli
movl
jle
jno
adc
sbb
jns
sbb
pusha
mov
lcall
js
add
xor
mov
out
out
aad
testl
and
sub
mov
pushf
add
je
jno
lret
fadds
add
lods
nop
in
push
test
jno
jnp
pop
xchg
aas
lock
adc
xchg
daa
sti
aaa
and
in
mov
roll
dec
cld
mov
popa
daa
and
inc
sbb
js
push
nop
orb
pop
mov
and
cmpb
adc
shll
loop
xor
add
and
xor
dec
add
call
pop
xor
mov
lods
jne
clc
repz
insl
sbb
cmc
add
dec
inc
in
jmp
xchg
out
pusha
stos
xchg
add
xchg
sub
inc
sti
add
loopne
jp
lods
mov
cld
cwtl
subb
rcrb
or
les
jbe
xchg
das
push
dec
push
cld
xchg
popa
jo
inc
jl
outsb
aam
roll
fstpt
js
clc
rclb
aam
mov
sub
push
mov
mov
sti
fs
sar
je
cltd
hlt
and
and
cltd
notl
inc
aas
mov
and
aam
cli
mov
xor
pop
mov
jge
fidivl
push
leave
les
subb
and
dec
inc
stc
in
inc
mov
daa
sub
sub
daa
gs
pusha
fbld
or
inc
lret
dec
sti
sbb
sarl
es
mov
push
adc
negb
xor
sarl
or
dec
cmp
and
outsb
adc
es
adc
inc
out
das
inc
dec
daa
or
les
out
decb
dec
mov
mov
sub
xchg
cmpl
mov
je
mov
stos
ljmp
cmp
jnp
imul
lahf
and
addl
mov
enter
lock
jbe
mov
lahf
insl
ja
movsl
int3
cltd
cld
in
add
add
es
inc
push
clc
sbb
xor
gs
popa
push
push
and
fs
push
mov
push
push
push
inc
push
orb
push
je
mov
jl
xchg
cmpb
repz
sub
addr16
adc
dec
mov
adc
push
and
add
push
mov
xor
add
loopne
jne
xchg
daa
test
daa
dec
movsb
js
cwtl
add
pop
call
inc
shlb
sbb
or
mov
dec
mov
push
dec
xor
iret
pop
push
sbb
cmp
jno
bound
pop
add
add
dec
dec
pop
adc
ret
inc
sub
cld
sar
xchg
or
dec
jo
xchg
sub
xor
in
pusha
cmp
add
std
and
dec
and
mov
and
push
mov
stc
jnp
adc
push
les
jmp
xor
daa
cld
stos
xor
loopne
mov
std
add
cmp
lret
dec
flds
in
xor
mov
addr16
notb
cwtl
enter
mov
add
dec
jle
inc
stc
sub
inc
cmp
sbb
ja
fnstenv
nop
repnz
cmp
push
and
cld
jnp
in
sbb
shrl
test
insb
xor
das
subb
pushf
repnz
test
nop
jns
mov
or
insl
xor
add
cs
popf
inc
ljmp
inc
mov
test
xchg
andb
sbb
pop
mov
loopne
scas
add
fcomi
movsl
sbb
mov
sbb
in
enter
or
and
lret
sar
cwtl
hlt
sbb
fsub
insb
cmp
in
ja
pop
icebp
in
int3
push
or
out
lcall
in
ljmp
les
add
sub
pushf
rcrb
xchg
stc
enter
in
lock
sbb
mov
clc
jl
js
pop
lock
jne
int3
nop
add
rorl
mov
fisubrl
arpl
xor
jecxz
hlt
cmp
sbb
jl
pop
or
push
cmc
jp
xchg
lods
add
lods
and
int3
test
imul
push
pushf
dec
adc
xorb
movsl
push
call
mov
pop
sarl
stos
andl
js
dec
pop
pop
add
mov
das
add
loopne
mov
pushf
and
int
dec
sbb
jp
mov
mov
adc
stos
and
or
mov
mov
test
nop
pushf
rol
movsb
sbb
fcompl
pop
inc
inc
mov
ds
popa
dec
sarb
xor
push
pop
push
adc
xchg
fsubl
sbb
pop
nop
daa
jns
add
loope
sahf
rcll
push
bound
and
jno
jge
int3
and
ljmp
inc
outsb
jae
jmp
cs
loop
dec
lret
call
and
jecxz
jmp
dec
outsl
xor
add
ds
add
in
movl
mov
and
cmc
pop
fidivrl
add
pop
mov
cltd
cmp
adc
mov
dec
dec
call
or
inc
adc
sahf
add
sti
jmp
test
mov
icebp
push
pop
fcomps
jnp
xor
adc
imul
pushf
mov
pand
mulb
jle
imul
sub
mov
pop
inc
flds
ljmp
bound
sahf
pop
mov
and
ss
stc
add
dec
sbb
pop
sbb
je
jo
adc
mov
cmp
das
push
and
cmpsb
or
dec
add
adc
lea
outsb
xchg
fs
fs
int3
mov
and
xchg
sbb
mov
pushf
jge
js
mov
or
or
adc
iret
insl
add
mov
sbb
xor
add
dec
popl
aam
push
vmread
push
jg
pop
sbb
adc
mov
dec
cwtl
adc
faddl
sbb
add
shr
lret
xchg
mov
add
lock
outsb
push
xchg
mov
add
test
mov
enter
or
add
jle
daa
aam
and
and
mov
add
out
stc
jmp
out
les
jae
nop
sbb
or
jle
mov
push
jnp
shlb
sbb
adc
jge
pop
mov
mov
and
es
pusha
gs
mov
cmc
in
fldenv
in
testb
mov
roll
jae
in
push
pushl
call
icebp
sub
or
mov
adc
repnz
int
aaa
inc
add
popa
dec
std
lods
fmull
and
test
sub
xor
jbe
cmp
pop
xor
roll
fildl
call
add
das
jp
xor
mov
aas
repnz
mov
mov
cmpl
jge
sub
xchg
sub
cs
adc
mov
and
loopne
jl
sbb
rcrl
cs
subb
adc
mov
mov
test
push
dec
mov
in
jmp
pop
sub
ljmp
scas
out
dec
pop
sbb
push
lock
mov
rclb
mov
adc
out
fadds
leave
mov
stos
fneni(8087
outsl
push
fsts
lock
pop
mov
stos
data16
jb
jo
sbb
dec
pop
mov
mov
jae
repz
hlt
rolb
aaa
dec
lock
lret
add
cld
shll
xor
or
and
adc
loopne
jmp
jbe
dec
jecxz
sbb
mov
jmp
xlat
mov
sub
adc
daa
adc
dec
jl
jno
pop
xorb
inc
fimull
or
int3
cmpsw
sub
outsb
sbb
stc
jp
mov
les
dec
addl
das
je
les
sbb
or
bound
sub
daa
dec
int3
inc
push
adc
pop
push
icebp
push
inc
movsb
nop
and
jmp
nop
sub
mov
int
arpl
adc
in
or
and
out
js
cltd
dec
fmuls
in
push
cmpsl
clc
mov
je
fs
and
mov
mov
mov
out
cmovnp
insl
pop
and
add
shl
jnp
and
push
mov
sub
mov
xor
pushf
xor
or
shrb
lock
sub
mov
shrl
or
mov
test
sub
pop
ljmp
sbb
loopne
and
jp
xchg
sbb
sbb
sbb
adc
or
add
xor
pop
sub
std
push
add
sbb
mulb
push
xchg
je
or
pop
imul
cmp
les
xor
add
mov
jb
sub
arpl
and
lds
mov
sub
arpl
or
jecxz
lcall
or
sbbb
sbb
pop
fmul
sbb
mov
add
addb
and
popa
shlb
adc
pop
sbb
push
pusha
sbb
les
bound
jo
adc
dec
jle
inc
data16
mov
adc
aad
ret
xor
or
xlat
xchg
or
sbb
in
cli
mov
call
mov
xor
mov
xor
sbb
insl
add
fstpl
lret
adc
xchg
and
push
pop
or
lahf
adc
cmpb
sbb
mov
negl
lods
mov
push
imul
leave
sbb
and
mov
and
inc
loope
mov
icebp
mov
js
xor
sub
pop
les
dec
test
sub
mov
or
mov
sahf
mov
rcrb
outsb
scas
sbb
in
add
dec
ror
inc
imul
or
sbb
test
push
xor
push
mov
dec
xorl
or
cmp
mov
mov
sbb
adc
and
mov
push
adc
jno
mul
sub
cld
adc
dec
sar
cmp
xor
xor
or
sbb
mov
xor
adc
movsb
and
push
jno
dec
adc
mov
sbb
addr16
sbb
loop
subl
lea
mov
nop
iret
pop
add
mov
and
sbb
pop
loop
add
aaa
out
pusha
fists
lahf
mov
inc
aad
stos
xchg
inc
int3
pop
push
add
int3
cmp
push
dec
in
mov
dec
push
movsb
lock
and
scas
pop
rorb
pusha
pop
mov
and
add
adc
add
xchg
mov
lods
jae
or
sbb
js
das
mov
and
sbb
pop
cmp
fcompl
lock
mov
pop
lcall
sbb
push
sbb
dec
inc
out
add
stos
movsl
rol
jo
test
mov
mov
inc
inc
shll
mov
jae
in
inc
pmuludq
xchg
xchg
lret
in
pop
dec
push
add
pop
adcl
push
into
jno
ret
dec
xchg
jne
aas
sbb
mov
cmp
pop
push
mov
xchg
pusha
cli
loopne
daa
add
and
or
jge
cli
js
inc
mov
jl
pop
into
ss
inc
add
mov
fists
das
and
and
stos
cld
push
push
cwtl
cmp
push
mov
pop
jbe
add
rorl
aad
in
jno
add
mov
mov
push
les
nop
add
std
xchg
xchg
xchg
nop
and
xor
inc
pop
inc
sbb
mov
jl
das
inc
arpl
sub
mov
testl
sbb
inc
dec
xchg
loop
xchg
inc
fs
adc
add
pop
mov
or
push
mov
sub
aaa
add
cmpsl
fdivl
clc
test
sbb
pop
call
fwait
or
jno
push
lods
or
xor
sbb
pop
mov
test
ja
add
stos
mov
push
xchg
shlb
pushf
cli
inc
pop
mov
cmp
and
ljmp
mov
mov
int3
mov
jl
pop
ss
push
addr16
shr
inc
xor
lock
sub
jo
sub
sub
lds
in
loopne
xor
adc
sbb
and
pop
out
mov
add
sub
sbb
stos
push
stos
add
pop
icebp
testb
inc
bound
inc
mov
pop
loopne
inc
sub
nop
adc
icebp
mov
test
clc
fnstenv
xor
mov
mov
test
test
ss
mov
adc
testl
sbb
inc
inc
pop
imul
in
or
pop
lret
daa
cmpxchg
clc
out
adc
add
sarb
add
pop
ret
mov
dec
lret
and
pop
mov
fdivrl
mov
pop
into
push
pop
xchg
cmp
rcrb
aas
add
lea
fidivs
jg
iret
cmp
addr16
sbb
in
cltd
mov
cmpsb
push
es
addr16
dec
mov
add
mov
mov
pop
rorb
add
jge
xor
sub
movsb
sbb
pop
dec
mov
in
dec
int3
mov
pop
mov
and
aad
popa
xchg
loope
das
push
in
cmpsl
lods
or
data16
bound
add
inc
push
and
addl
push
adc
jbe
in
inc
dec
dec
and
repnz
mov
rcrb
mov
push
cwtl
nop
sbb
fadd
mov
pop
loopne
adc
mov
add
add
out
addr16
ss
xor
or
ds
xor
loopne
add
dec
inc
mov
inc
cmp
lahf
pop
mov
xchg
dec
sbb
pop
ret
xchg
lds
pop
cli
or
rorl
jnp
push
lcall
push
mov
push
loopne
je
xchg
les
inc
pop
and
mov
aam
push
mov
es
sub
shlb
pop
imul
dec
inc
adc
int3
dec
mov
sbbl
add
mov
pop
push
rolb
add
mov
dec
arpl
sar
cmpsb
rclb
jo
mov
das
dec
popa
in
seto
movsb
mov
and
enter
lock
adcl
inc
sbb
mov
ret
mov
inc
lret
xchg
pop
mov
shll
popa
cmp
dec
loop
add
and
test
inc
test
fadd
adc
adc
mov
add
pop
lea
inc
xor
out
push
or
xchg
mov
daa
test
dec
iret
dec
jo
xchg
dec
xor
mov
and
inc
nop
pop
xor
stc
loope
insb
sub
bound
add
movsl
inc
adc
adc
inc
bound
aam
mov
cld
push
xor
loopne
jno
mov
adc
mov
or
xor
scas
rolb
lock
cmp
mov
add
pop
imul
lret
mov
das
dec
out
cwtl
jo
mov
cmpsl
inc
arpl
inc
pop
lods
lock
js
add
mov
gs
clc
xchg
cli
pop
add
lock
inc
mov
jb
push
inc
push
or
jp
add
stos
stos
sbb
pusha
mov
mov
mov
ljmp
movd
xchg
mov
nop
imul
adc
out
adcb
shl
pop
and
mov
dec
fs
xchg
and
inc
aam
xchg
xchg
push
rolb
add
leave
test
test
add
out
xchg
fwait
sub
packsswb
in
push
inc
jl
jl
cli
sub
addl
or
xor
and
xor
xorb
out
jp
enter
push
pop
shlb
scas
and
sub
ret
pop
jno
mov
insb
scas
sbb
les
insb
or
push
add
xchg
cmp
or
jmp
xor
ja
cmp
movb
inc
js
xor
mov
jne
add
mov
lret
jne
loopne
dec
fmul
sbb
cmp
lcall
pop
insb
sbb
xor
inc
mov
lret
pop
ret
test
xchg
int3
psllw
add
lcall
gs
fdivrs
rcll
add
xor
test
jo
pop
add
jnp
cmp
sub
vpshad
jbe
add
push
ret
cs
inc
adc
arpl
add
rol
mov
mov
insb
xor
push
mov
orb
insb
movsb
inc
add
gs
adc
sbb
xor
xchg
mov
dec
pop
mov
xchg
ret
loopne
mov
add
jno
dec
leave
xor
inc
addr16
loopne
mov
icebp
daa
jle
les
scas
jl
test
sub
mov
add
dec
fadds
es
test
scas
sbb
mov
sbb
mov
inc
mov
mov
dec
mov
mov
inc
cmp
mov
and
lds
stc
bound
xor
jg
sbb
je
sub
add
inc
cmp
pop
add
cmpsb
pop
lcall
sbb
jbe
clc
push
mov
call
push
inc
xchg
xchg
call
shll
in
add
ficomps
jl
cmpsb
mov
in
and
sub
test
add
push
pop
xchg
lock
mov
js
inc
pop
push
cmp
lret
or
ja
add
xorl
enter
call
jns
add
mov
ret
push
repz
mov
jmp
fs
insb
and
std
xchg
mov
cmc
shlb
nop
es
and
cmp
mov
adc
sub
and
ss
mov
insl
push
and
shll
dec
xchg
pusha
xor
std
xor
cmp
mov
mov
push
cmpsb
sub
mov
call
popa
test
fsubs
nop
shlb
aad
test
jae
dec
sub
jo
hlt
adc
es
dec
in
mov
push
pop
mov
sub
inc
pop
pop
or
cli
cltd
js
push
xchg
xor
stos
fcoml
pop
adc
sbb
nop
xor
out
int3
cmp
pop
pushf
dec
add
sub
xor
aam
cmp
cmp
dec
dec
loopne
stc
pop
mov
or
data16
sbb
inc
pushf
int3
mov
jno
add
cmp
mov
or
mov
cli
adc
add
mov
sub
enter
aaa
fs
jnp
imul
inc
insl
lock
mov
and
add
bound
and
or
xor
clc
dec
out
ja
pop
imul
xchg
cli
in
add
repz
fstpt
test
cwtl
pop
idivl
add
movsb
stos
fimuls
add
outsl
jmp
sub
lret
sub
fistpll
dec
mov
jb
dec
mov
test
outsb
cltd
jg
popa
push
js
cwtl
dec
xchg
add
pop
mov
mov
xlat
xor
ret
out
nop
push
pushf
mov
adc
adc
test
mov
ret
dec
mov
adc
push
scas
or
add
cmp
or
rclb
test
ret
ja
scas
in
jae
fdivrl
cmp
shll
adc
xchg
fisubs
sbb
add
repz
dec
iret
ret
adc
lock
dec
bound
mov
dec
or
shrb
cmp
jg
jo
in
sub
inc
pop
fucom
shrb
dec
pusha
push
mov
movsb
dec
enter
int
call
push
adcb
fcmovb
push
push
je
cmp
push
cmp
pop
shr
add
xchg
cld
adc
mov
test
dec
push
sub
mov
in
andb
pop
add
push
cltd
jo
mov
stos
roll
repz
inc
push
aam
int3
mov
dec
shrb
jge
rcrb
xor
inc
mov
pop
xor
sbb
mov
push
repz
pusha
shr
test
leave
outsl
cmp
dec
je
dec
adc
and
adc
add
adc
out
cmp
dec
dec
cltd
cwtl
fs
push
lods
xchg
and
test
mov
jle
or
int3
imul
je
inc
xor
adc
stos
mov
or
stos
pusha
adc
sbb
sub
test
adc
push
mov
pop
mov
add
adc
pop
mov
sbb
arpl
orb
sub
or
pop
adc
and
or
nop
clc
lret
mov
dec
pop
adcb
scas
stos
imul
sbb
cmp
jmp
xchg
or
xor
and
sub
pusha
adcb
xlat
fstpl
nop
jns
xor
mov
es
dec
fisubrl
js
les
ret
loope
inc
jl
into
add
in
inc
sarl
js
orb
xor
push
lock
int3
subb
lds
sbb
sbb
les
test
stos
in
leave
js
and
or
sbb
add
call
icebp
add
or
in
mov
ret
ljmp
push
loopne
adcb
sbb
jb
fdivl
loope
es
leave
add
inc
sbb
fdivrs
clc
inc
faddl
pop
dec
jl
je
mov
in
add
aaa
jg
and
lods
stos
sub
adc
enter
sub
aas
pop
mov
test
push
daa
lahf
stos
mov
mov
add
hlt
cmpsb
xchg
xor
leave
pop
shl
ljmp
push
xor
mov
pop
xchg
sbb
xor
data16
push
mov
movsb
lock
lcall
pop
je
stos
jb
sbb
sarb
js
test
insl
sub
andb
jg
adc
inc
pop
or
push
dec
cmp
xchg
or
je
pop
mov
out
sbb
sbb
jno
dec
in
bound
rolb
ss
sbb
dec
xchg
push
mov
out
adc
or
fists
iret
flds
jge
sub
fsubrs
push
dec
inc
jne
ret
push
loope
push
adc
jmp
dec
jbe
pop
inc
jo
adc
jo
add
cmc
outsl
loope
orb
mov
cmpsb
ret
inc
cmc
and
add
jg
jl
jge
lock
rclb
add
push
add
and
add
sub
sbb
xor
addb
xor
aam
movsl
popa
cmp
dec
mov
push
fnsave
adc
jns
ja
xor
enter
ss
push
adc
loope
jmp
add
mov
js
push
jo
xor
cwtl
sub
sbb
xor
add
adc
pop
aam
fcmovbe
pop
ja
add
push
xor
sahf
mov
out
icebp
sbb
lret
add
sub
dec
mov
mov
xchg
mov
scas
jno
add
fists
inc
xchg
fwait
sbb
aam
rorb
push
xorl
sti
lock
mov
add
sbb
add
push
in
or
add
sbb
fstpl
icebp
jne
dec
test
push
and
xor
mov
jecxz
or
inc
stc
jae
push
dec
mov
push
or
sti
add
iret
inc
mov
shrb
sub
outsb
rolb
jns
xor
mov
adc
or
dec
push
pushf
lar
jl
sub
mov
cld
inc
in
sub
mov
sbb
je
inc
inc
or
pop
mov
out
ret
adc
add
cmpb
or
pop
enter
or
or
outsl
push
cli
jnp
addb
test
nop
cmc
fildl
sbb
dec
shlb
test
inc
int
sarb
pop
fmuls
pop
cmp
adc
push
hlt
shlb
add
mov
or
nop
and
int3
pusha
cli
les
sbb
fcmovu
push
jp
loope
divl
fstl
push
sbb
shrl
cmpsl
int3
clc
push
sbb
rolb
adc
jmp
push
jge
mov
add
add
pop
loop
mov
or
fstl
xchg
mov
pop
pusha
stc
cmp
mov
sub
cmc
xor
pop
lahf
xchg
and
fisttps
add
fcmovnu
testb
jl
jmp
mov
and
mov
sbb
cmp
jmp
push
push
pushf
frndint
dec
filds
adc
jl
hlt
cmpsb
or
mov
cld
add
jno
aaa
movsl
js
adc
int3
pop
mov
dec
lret
dec
movsb
add
in
sub
sbb
inc
jne
clc
inc
mov
xor
adc
or
test
jo
ja
ljmp
inc
js
dec
cld
in
or
inc
mov
jmp
sub
adc
dec
adc
mov
add
and
jb
dec
test
cmp
adc
lock
fs
xchg
test
repnz
cwtl
pop
pop
int
pop
scas
cli
push
inc
lcall
mov
add
jecxz
mov
add
mov
pop
mov
inc
or
jl
mov
xchg
movsb
push
clc
sub
inc
sub
add
add
xchg
into
push
inc
cmc
push
fcoml
movsb
subb
lcall
outsb
ja
shlb
ds
or
dec
or
sbb
pop
je
and
addb
mov
ficoms
test
inc
adcb
add
cmc
pop
sbb
and
add
mov
mov
sbb
sbb
int3
and
adc
add
cmpsl
jb
lods
fbstp
pop
add
fildl
jmp
inc
jno
loopne
pushf
sub
mov
push
and
cmp
xchg
add
int
jo
pop
jp
pop
add
dec
movsb
adc
mov
lcall
clc
sub
cmp
subb
das
and
stc
xor
push
inc
out
sahf
mov
and
adc
test
hlt
lock
mov
cltd
adc
fcomp
sub
and
les
xchg
or
lock
mov
adc
or
add
or
add
rolb
adc
xchg
mov
out
mov
cmp
pop
jb
addl
add
dec
mov
mov
insl
dec
push
sbb
inc
je
mov
or
fldl
mov
xor
adc
stc
idiv
cmp
or
mov
andb
inc
les
aam
or
les
mov
inc
outsb
dec
jo
dec
add
sbb
pusha
xor
flds
hlt
loop
psraw
ljmp
xchg
rorb
pop
arpl
cld
call
leavew
mov
mov
outsl
dec
int3
and
outsb
adc
mov
les
pop
mov
lods
xchg
adc
movsb
jl
mov
and
cmp
add
jle
add
rorb
mov
xor
sub
outsl
arpl
inc
sbb
cli
pop
xchg
stos
test
mov
xchg
xchg
jl
and
lock
pop
int
xchg
int3
mov
mov
pop
ljmp
mov
mov
aaa
fstp
jg
mov
dec
fadds
fiaddl
adc
in
sbb
adcb
icebp
dec
push
sbb
push
mov
pusha
nop
cwtl
add
stos
adcl
out
insl
adc
dec
pop
fnsave
pop
cmc
js
and
fistps
lds
loope
lods
cmp
nop
adc
xchg
cwtl
dec
je
pop
xor
stc
aas
insl
icebp
les
xor
cmp
push
inc
inc
pop
addl
fldl
inc
adc
mov
xor
daa
insb
scas
out
sbbb
lock
lret
xchg
sbb
xor
sar
scas
daa
xlat
mulb
pusha
bound
clc
mov
jno
aaa
or
and
popa
sub
push
sub
sbb
test
ret
sbb
std
loopne
xchg
jo
pop
dec
das
add
bound
xorb
jnp
jge
ss
fnsave
push
add
icebp
inc
xchg
xor
mov
inc
or
jge
mov
test
cmpb
inc
xor
or
inc
dec
pop
inc
jmp
pop
mov
adc
les
pusha
inc
push
xlat
fcoms
mov
mov
outsb
add
adc
int
mov
fdiv
add
sbb
mov
rorb
call
movsb
jo
repnz
push
adc
jmp
adc
bound
shlb
jne
mov
test
sub
hlt
add
cltd
sub
push
insb
cmp
mov
adc
cmp
fisttps
ss
das
scas
insb
rorb
jno
jo
mov
mov
xor
and
sub
push
dec
push
inc
in
push
enter
cmp
pop
fistps
jge
add
in
xor
loope
adc
inc
or
jnp
pusha
cld
sbb
mov
push
sbb
addb
mov
mov
and
or
insl
clc
fistpll
shr
cwtl
or
push
mov
imul
inc
or
sbb
lds
mov
or
ljmp
cmp
imul
and
xor
xchg
mov
or
clc
xlat
xchg
test
inc
and
pop
imul
adc
add
addr16
cmp
sbb
xchg
js
mov
and
pop
push
andb
out
cmp
outsb
les
or
push
mov
stos
ret
mov
or
mov
out
sbb
divb
push
repnz
xchg
cmp
or
insb
and
test
push
mov
mov
adc
xor
sbb
ret
fldl
cli
cmpsl
jo
sbbl
pusha
mov
or
adc
xchg
mov
popa
add
sub
dec
and
out
add
push
add
xor
cltd
ficomps
xor
gs
rorl
lret
sub
sbb
fbld
dec
xchg
clc
gs
adc
lcall
cs
inc
push
aaa
mov
xchg
sub
pop
push
push
ljmp
lds
adc
sbb
inc
ljmp
xor
xchg
repz
xor
xor
cmp
push
or
inc
push
xor
push
int3
mov
inc
pop
addr16
dec
loopne
cmp
lcall
cmpl
adc
xor
xchg
jns
xchg
fistpl
out
xchg
mov
repz
or
mov
add
in
pop
ljmp
rcrl
xlat
pop
shlb
add
pusha
test
int
sbb
out
mov
jl
ja
cmp
pop
xor
pop
push
or
ljmp
xor
pop
add
cli
adc
sbb
dec
ss
jo
inc
enter
mov
inc
clc
pop
test
pop
fstp
sub
sbb
push
mov
pop
and
pop
add
cmp
jmp
mov
pop
subl
cmp
ljmp
nop
sub
pop
insb
adc
rol
add
rcll
add
push
push
mov
push
mov
ljmp
adc
ja
add
test
shlb
rol
jmp
adc
sbb
stc
out
xor
out
push
aaa
add
dec
inc
xchg
ljmp
shlb
add
fwait
mov
adcb
gs
add
sbb
sbb
jle
fisubl
mov
add
inc
in
add
xor
mov
dec
sub
inc
add
push
pop
cwtl
insl
ljmp
or
or
icebp
pop
pop
xchg
imul
dec
push
xor
das
add
imul
mov
sbb
sti
pop
and
xchg
adc
mov
pop
loope
pop
or
movsl
sub
in
pop
call
rcll
nop
outsb
jne
sbb
rcl
inc
dec
imul
pop
jb
pusha
sarb
xor
rorl
and
movsb
fists
inc
es
aad
xchg
mov
xor
pop
imul
repz
push
rcll
imul
out
or
arpl
insl
or
nop
adc
dec
outsl
inc
rcll
out
imul
jl
add
ljmp
push
loop
sub
xchg
inc
int3
xor
aad
xor
push
push
imul
ss
lahf
dec
mul
or
es
xor
gs
dec
loop
and
inc
icebp
add
xchg
in
pop
push
in
imul
adc
rorb
pop
dec
inc
add
subl
int
cmpsb
add
negb
mov
and
popa
ljmp
iret
hlt
or
xor
push
or
inc
in
adc
cwtl
insl
insb
inc
jnp
mov
mov
and
shrb
dec
jbe
cmp
call
mov
cmpsb
add
jmp
mov
lods
sub
push
imul
fisttpll
jne
inc
jbe
ret
inc
scas
push
xor
or
aam
clc
push
movsb
cmp
adcb
loopne
cld
mov
sbb
xor
pop
lods
pop
ficompl
xor
cwtl
arpl
add
das
or
dec
icebp
add
insb
xor
add
mov
ss
mov
xor
in
addr16
pop
je
mov
sub
rclb
sbb
outsl
pop
sub
in
add
ret
test
loopne
outsl
incl
leave
mov
and
repnz
cmp
in
call
or
dec
pop
in
xchg
rorb
not
addl
pop
shl
out
or
rorb
adc
push
add
xor
mov
sub
fwait
and
nop
cmp
add
add
pop
shlb
ljmp
nop
mov
cmp
stos
cmpsb
xchg
mov
aad
pusha
adc
frstor
or
enter
add
jl
push
cwtl
sbb
sbb
xchg
jle
shrl
sbbl
cld
xchg
sbb
add
push
test
mov
and
sub
push
mov
cmp
xor
enter
push
flds
shrl
cld
rcrb
and
fs
adc
or
dec
cld
cltd
clc
movsb
sub
and
sub
cmp
faddl
lret
pusha
rcl
ss
push
lock
fxch
pop
push
loopne
sahf
jo
mov
ljmp
inc
gs
sbb
jmp
out
inc
in
or
pop
mov
addb
cltd
sub
mov
add
jmp
jmp
adc
lret
int3
in
in
inc
sub
add
inc
xor
imul
add
xor
rorb
pop
aam
ret
fwait
mov
shlb
sub
add
fstpl
dec
loopne
dec
bound
movl
ret
popa
jge
push
pop
lock
push
push
add
xchg
aaa
les
mov
sbb
shlb
dec
pop
add
arpl
repnz
inc
xor
jb
sbb
jmp
pop
ljmp
popa
jnp
and
adc
sub
loopne
add
mov
out
int
xchg
lret
loope
sbb
inc
mov
or
loopne
add
jns
and
cmp
push
repnz
js
sbb
adc
les
pop
jge
pop
lods
push
mov
add
mov
fimull
cmp
jge
sbb
pop
ljmp
cs
lcall
ret
rcrb
push
scas
fisubs
adc
popa
inc
pushl
push
mov
pop
sbb
inc
inc
cltd
push
cltd
or
lds
cs
add
cmp
int
fldl
int3
loope
pop
std
stc
sub
mov
addb
in
xchg
lret
daa
jbe
mov
xchg
xchg
fnsave
mov
mov
fmull
shl
dec
shr
ljmp
dec
icebp
or
and
cmp
sbb
cmp
add
cmc
dec
sti
mov
dec
inc
ret
in
push
mov
push
daa
cmpsb
ljmp
add
and
lock
push
ljmp
sbb
jmp
lods
push
lret
adc
fildl
aaa
add
fwait
shlb
inc
dec
pop
add
ljmp
or
mov
add
push
mov
testb
int3
mov
cmp
jl
push
cld
xor
addr16
add
pop
sbb
mov
not
push
pusha
std
inc
sub
inc
add
testl
mov
mov
add
jmp
outsb
inc
adc
dec
iret
mov
sarl
jmp
or
push
sbb
xor
xor
pop
mov
jmp
out
lods
adc
sysenter
and
cmpl
sbb
push
sub
add
mov
adc
repz
pop
sub
mov
xorl
imul
push
orb
mov
cmp
jae
pop
data16
push
test
in
shll
hlt
adc
lods
aad
pop
sub
push
pushl
jmp
int3
sbb
push
push
in
push
mov
addr16
ja
popf
pop
in
rorl
rorb
insb
xor
or
dec
mov
je
xor
or
outsl
push
out
call
pop
jbe
adc
shl
cltd
jl
jge
add
jle
lea
add
pop
scas
test
jmp
add
lods
lret
pop
push
cld
or
inc
push
clc
sub
pop
sub
fidivl
jb
idivl
fisttpl
roll
ret
dec
nop
or
mov
hlt
sub
xor
fsubrs
pusha
push
loope
cmc
mov
pop
xor
pop
xor
xchg
roll
push
aam
les
fldenv
test
push
lcall
add
and
inc
dec
pop
xchg
pop
add
dec
mov
pop
shl
add
aad
xor
jge
pop
inc
jb
lea
dec
ljmp
xchg
or
sub
jmp
inc
xor
push
jae
and
fldcw
and
xor
or
ret
jmp
inc
xchg
inc
jge
repnz
push
lret
cmp
mov
push
cltd
push
cmpb
cld
lods
pusha
adc
sbb
pop
and
fisubl
xchg
not
or
or
pop
and
ss
movsb
xor
xor
ret
pop
pop
jmp
mov
dec
out
adc
es
pop
es
jmp
sbb
pushl
sub
or
rcll
sub
push
clc
das
sbb
adc
lds
and
dec
inc
jnp
xor
arpl
sub
and
xorb
addl
sarl
xlat
push
adc
std
ja
pop
add
push
lods
or
pop
adc
enter
mov
pop
inc
xchg
adc
out
inc
insb
add
imul
and
and
dec
sub
xchg
cmp
mov
mov
or
sub
and
lahf
popa
xor
mov
faddl
push
pop
xor
sbb
mov
and
jmp
sub
bound
shlb
pusha
push
pop
xorl
mov
add
shrb
test
or
or
mov
data16
push
xchg
push
adc
loop
data16
xor
dec
or
and
pop
pushf
cmp
popl
inc
pop
add
pop
jns
jbe
loope
push
add
in
fsubr
mov
sub
mov
xorl
ljmp
add
mov
rcll
out
add
fbstp
and
push
lret
and
popa
cmpb
sahf
arpl
push
sar
ds
aam
sub
xchg
subl
out
push
push
push
mov
enter
add
aaa
sbb
add
pop
mov
xchg
mov
aaa
nop
es
in
outsl
cmpb
pop
jmp
mov
dec
fs
rolb
pop
pop
pop
popa
call
and
sub
test
es
jmp
dec
shr
or
test
xor
jmp
pop
push
lret
mov
cmp
movsl
adc
push
sub
pop
xchg
push
test
adcl
jno
xor
push
in
xorb
lret
addl
insl
fiadds
or
sub
push
jecxz
out
imull
or
mov
outsb
add
xchg
orb
push
xlat
cmp
push
test
loop
loop
roll
jmp
lret
pusha
subl
push
push
mov
aad
insb
and
pop
fstp
cmpsb
pop
sti
dec
mov
fmuls
mov
or
pushf
ret
pop
and
andb
push
rolb
popf
adc
lods
jne
add
movsb
dec
mov
cmc
mov
inc
mov
dec
mov
xor
sbb
pop
mov
sbb
js
and
loop
mov
sub
push
mov
add
cwtl
mov
add
adc
inc
test
jmp
cmp
cwtl
aam
adc
adc
rorb
mov
ljmp
je
pushw
sahf
aad
cmpsl
decb
jo
push
lock
fstl
and
data16
pop
rcl
adc
pop
xor
add
and
pop
mov
fcmovb
xor
subb
nop
sub
in
shll
adc
ffree
cmp
pusha
repnz
add
rcrb
pushw
adc
cmpsl
iret
into
jno
push
lds
pop
adc
test
push
int
lock
mov
and
push
loopne
and
rcrl
adc
dec
neg
aas
or
dec
sub
xchg
jo
imul
adc
jp
inc
rol
out
jg
pop
mov
pop
stc
pusha
mov
inc
jmp
mov
jmp
push
shll
jb
xchg
pop
daa
mov
push
push
xchg
push
std
xchg
test
mov
dec
or
dec
into
xchg
movsb
push
je
into
cwtl
fdivs
cmp
jbe
or
push
scas
xlat
inc
fs
push
ror
fiadds
mov
and
add
mov
pop
mov
aaa
jbe
dec
push
ficompl
add
and
sbb
mov
pop
and
nop
jnp
push
add
and
bound
xor
inc
xor
outsl
inc
jl
stc
push
push
shl
enter
sub
dec
add
push
pop
jne
bound
lock
push
nop
mov
xchg
out
dec
mov
out
push
cwtl
push
orb
mov
es
or
arpl
sarl
gs
mov
pop
xor
pop
sub
add
cltd
push
call
mov
inc
sbb
xor
mov
adc
loop
jnp
add
pop
fs
aaa
mov
sbb
cmp
dec
bound
lret
ret
movsb
repnz
in
ret
out
clc
mov
add
imul
ljmp
add
jns
dec
pop
push
mov
sub
xchg
sub
out
popa
cmp
sub
in
repnz
in
mov
je
mov
sti
jmp
daa
or
jg
data16
or
and
shll
icebp
nop
or
ret
jo
xchg
lds
fcoms
adc
lock
dec
add
push
mov
dec
mov
push
cli
jle
inc
pop
aam
xor
cs
or
lods
jb
pop
adc
arpl
cld
push
mov
testl
mov
outsb
aad
mov
pop
lock
and
lds
adc
lret
lret
push
mov
iret
dec
mov
jmp
mov
mov
inc
jge
repz
pop
cmp
jmp
lahf
enter
push
loopne
adc
das
lock
pop
add
jmp
shr
cmp
je
push
jo
mov
js
push
neg
addl
sub
sbb
adcb
inc
xchg
add
xlat
push
movsb
xor
pop
cwtl
hlt
or
jp
push
or
or
jne
add
or
adc
sbb
xor
cltd
dec
or
jns
es
int3
fisttpll
inc
jb
orl
dec
mov
and
jbe
jl
sti
dec
mov
push
out
and
push
sbb
cli
push
dec
or
es
bound
ds
dec
enter
pop
cmp
out
data16
jae
fldcw
ret
push
and
cs
andb
rcr
add
push
mov
push
mov
cmp
into
dec
clc
roll
mul
int3
xchg
in
out
cld
shr
xor
lock
in
imul
pusha
out
leave
mov
dec
dec
insb
jno
add
push
dec
lret
dec
and
sar
ret
inc
pop
pop
mov
add
mov
inc
icebp
loope
data16
jmp
jne
or
inc
clc
xchg
lock
mov
pop
or
cmp
jmp
orb
popa
pop
push
push
add
jo
sub
data16
rcr
nop
cltd
add
out
inc
jl
cwtl
pop
adc
loopne
jp
push
jg
movb
mov
or
and
sub
adc
xor
dec
add
push
pop
sub
cmp
add
jmp
push
xor
or
jmp
sti
inc
mov
add
das
xchg
fdivl
adc
mov
pop
test
icebp
cltd
cld
add
lret
jle
push
inc
and
sub
add
in
adcl
sub
pop
sub
or
fildl
xlat
test
sbb
inc
rcrl
shl
inc
xchg
in
stos
sbb
shl
add
aaa
sub
pop
es
mov
sub
scas
test
mov
aaa
int3
repnz
cld
dec
pusha
lret
int3
neg
sbb
push
sbbb
lcall
xor
mov
mov
push
push
sub
sub
mov
or
sub
or
cwtl
in
lret
add
jo
orb
push
loopne
fiadds
lret
popa
stos
inc
xlat
mov
sbb
aas
push
push
std
addl
gs
sbb
daa
mov
fwait
bnd
sarl
add
push
jne
sub
mov
mov
push
push
jge
cmp
xor
iret
dec
and
pop
adc
inc
aaa
add
loopne
std
sub
xchg
cmpsl
and
xor
or
push
mov
mov
aas
sub
cwtl
and
push
pop
pop
pop
xor
or
test
ljmp
rcrl
and
dec
sub
jmp
xchg
mov
cmp
or
adcl
shr
push
sub
sub
or
jmp
fmulp
jns
mov
pop
sahf
or
or
pop
xchg
imul
fwait
aas
sub
ds
and
add
loope
mov
mov
imul
dec
add
pop
jbe
dec
and
hlt
aaa
pop
pop
rolb
int
push
mov
mov
push
xor
outsl
in
push
cli
inc
adc
push
pop
mov
dec
adc
test
pushf
leave
jbe
pop
scas
leave
pop
out
push
ficoml
jmp
ffree
hlt
jmp
mov
add
sub
pop
push
mov
push
or
les
push
mov
inc
out
or
hlt
jbe
sub
loope
add
ds
sbb
push
rolb
push
pop
mov
loopne
movsb
out
xchg
mov
sarl
mov
je
or
sub
and
sub
or
imul
or
jae
xor
adc
add
nop
or
daa
popa
or
jb
mov
pop
jo
lahf
xchg
stos
loope
js
mov
inc
orl
or
inc
mov
sub
sub
push
pop
xor
dec
adc
push
xchg
sub
inc
and
mov
push
or
lods
mov
xor
jmp
repnz
cld
jle
sub
sbb
push
add
imul
xchg
sub
sbb
pop
and
icebp
mov
popa
arpl
std
sbb
out
adc
add
pop
adc
push
orb
add
fmulp
inc
insl
add
xlat
inc
lea
cmp
pop
testl
iret
fwait
test
inc
addr16
push
mov
stos
xor
mov
repz
movsl
cld
ret
mov
xor
push
mov
pop
inc
shl
add
mov
lret
movsb
inc
movsl
or
sub
add
adc
pop
repnz
sub
lods
cltd
xchg
add
out
stc
arpl
add
stos
or
cmp
xor
pop
int3
and
adc
cmp
lods
ret
jmp
pop
xor
inc
mov
push
xor
push
jmp
bound
jns
sbbl
loope
sbb
xor
or
cmp
pop
inc
add
sub
subb
icebp
movsb
je
add
xor
loope
mov
pop
inc
orb
push
mov
dec
pop
popl
inc
hlt
push
inc
rclb
mov
sub
hlt
jecxz
popf
sbb
jp
jg
outsl
mov
pop
fwait
jmp
mov
popf
sub
inc
add
add
nop
filds
loope
sub
fidivrs
pop
cmp
mov
mov
pop
sub
jp
pusha
ds
cmc
sbb
pop
imul
add
scas
xchg
push
movsl
push
out
aad
dec
gs
adc
mov
push
nop
push
sbb
and
stos
and
lret
leave
int3
mov
test
shl
push
adcb
pop
jmp
and
sarb
push
das
or
mov
in
iret
xor
push
add
pop
jmp
xor
jns
inc
enter
sub
lret
lods
xor
fadd
sbb
outsl
push
jg
lds
aas
jmp
test
sub
ret
pop
in
add
movl
jo
dec
inc
mov
xchg
pop
lods
inc
cs
and
add
popf
ret
pop
dec
lods
add
mov
push
push
dec
not
dec
loopne
jno
dec
clc
test
push
sub
xchg
test
add
sub
adc
pop
push
push
sbb
ret
in
mov
jnp
and
xchg
dec
mov
rolb
pop
fsubl
add
insb
and
pop
push
mov
jmp
in
arpl
enter
xor
fdivrs
and
xor
fwait
pop
mov
xor
lcall
or
jb
push
sarb
xchg
insl
and
push
fldl
jns
add
push
fwait
inc
sub
and
repnz
outsl
mov
leave
mov
dec
lret
xor
mov
sbb
aaa
pop
divl
nop
add
add
pop
adc
clc
sub
lret
les
fsubl
fisubrs
cmp
jmp
mov
and
stc
and
addr16
jle
orb
or
lahf
add
icebp
dec
je
add
add
jmp
sub
imul
jbe
jp
xchg
aaa
or
cmp
jmp
nopl
dec
mov
sbb
cmp
add
mov
rolb
test
syscall
ds
mov
enter
pop
pop
shl
or
add
lahf
xor
rolb
jns
pop
jge
xor
pop
sub
ret
mov
push
xchg
pop
loopne
cltd
pop
adcb
push
and
es
add
sub
push
loopne
mov
dec
cwtl
pop
add
ret
divl
or
lds
or
addb
les
mov
insb
call
ficoml
jmp
lret
aaa
cmp
push
dec
out
lock
push
xor
or
fisubs
jmp
subl
sub
shl
shr
push
add
push
pop
or
rol
loop
mov
push
xor
jnp
adc
testl
add
pop
xor
xor
loopne
and
dec
pop
call
cmp
and
push
jnp
ljmp
sub
mov
push
lcall
loop
sbb
pop
cmpl
push
mov
and
inc
jae
aad
xorb
fstps
push
push
and
sbb
pause
dec
ljmp
jno
push
imul
pop
sub
or
inc
cmp
aaa
movsb
xchg
xchg
arpl
loope
mov
lcall
add
sub
rcrl
sbb
call
repnz
jno
add
nop
push
lock
and
icebp
inc
jp
roll
out
int
inc
lds
add
call
pop
mov
scas
pop
xor
mov
cmp
xor
popf
xor
insl
inc
clc
xchg
pusha
dec
adc
shlb
nop
clc
adc
jnp
ret
pop
mov
dec
sub
hlt
or
push
mov
imul
pop
and
mov
shrb
push
push
popa
push
push
mov
adc
push
xchg
in
test
push
test
rolb
xor
adc
mov
insb
pusha
pushf
dec
and
sub
push
mov
xchg
out
stos
or
push
mov
rcl
mov
sub
adc
je
sub
add
faddl
mov
inc
mov
pop
test
push
jo
hlt
push
pop
aas
aaa
jnp
imul
inc
add
xchg
cs
nop
std
or
int
inc
cmpb
xor
add
idivl
jae
rcrb
sbb
add
fiaddl
mov
xor
daa
cld
adc
fcoms
shrl
fldl
cmc
ror
xor
mov
cltd
js
pop
xchg
sbb
or
jne
mov
add
loope
cltd
jge
repz
dec
addb
int
pop
sub
mov
dec
rcll
xchg
xor
jnp
push
pop
leave
and
dec
push
ficoml
pop
mov
xor
add
sti
xadd
adc
jl
cmp
jbe
rolb
cli
insb
and
sub
nop
sub
adc
cld
nop
test
pop
push
mov
in
and
in
mov
mov
mov
subb
bnd
push
divl
inc
sahf
or
adc
mov
repz
adc
xchg
and
mov
push
and
add
es
adc
cmp
xor
xor
sub
or
ficomps
sub
pop
dec
bound
movsl
addb
lahf
mov
jmp
fstl
sub
pop
push
push
add
cwtl
jmp
xor
mov
add
ds
ljmp
add
pop
ficoml
or
enter
push
push
push
mov
add
and
shlb
imul
ficomps
mov
push
lds
inc
stc
xor
jo
psrlw
pusha
cli
shrb
clc
sub
nop
arpl
cmc
and
jns
das
ja
mov
pusha
xchg
stc
or
and
inc
or
push
mov
push
or
and
and
test
rclb
cmp
pop
repz
or
aas
outsl
sbb
cmp
and
push
xchg
sbb
adc
push
aaa
adc
jmp
add
outsl
xchg
mov
dec
daa
push
mov
and
cmpb
rolb
jo
popf
pop
and
push
mov
mov
adc
pop
in
nop
into
add
pop
pop
and
cmp
add
ret
mov
out
lret
aam
mov
out
int3
inc
scas
dec
ret
test
nop
test
xchg
and
loop
jbe
fisttpl
cmp
push
mov
rcll
lret
sbb
cld
pusha
or
shl
adc
and
or
sub
into
sbb
pop
test
rolb
xor
addl
push
cld
iret
repz
cmc
call
movsb
bound
pop
cmp
cmpxchg
dec
sbb
ret
add
xorl
outsb
lret
add
and
add
les
ffreep
ret
ficoms
idiv
add
sub
or
mov
pop
jo
push
lret
sub
jl
dec
pop
sub
pop
repnz
xchg
ret
shrl
int
xor
or
addr16
sbb
popl
mov
mov
xor
pop
mov
pop
sub
jmp
les
push
push
push
pop
add
sbb
jg
out
pop
dec
mov
dec
fmulp
mov
mov
jmp
ret
popa
daa
pop
js
movsl
test
call
push
mov
scas
push
mov
mov
sbb
shr
je
add
sbb
cwtl
add
sbb
mov
mov
push
and
sub
xor
or
test
das
adc
and
pop
mov
jmp
mov
mov
mov
fwait
adc
xchg
mov
dec
fiaddl
stc
das
sub
pop
nop
jae
or
jb
add
gs
jno
and
jae
ss
jmp
mov
adc
cltd
adc
push
push
cli
mov
rcrl
pop
fstpl
movsl
mov
sub
adc
fstpl
lret
repz
push
pop
in
mov
mov
sub
orl
lea
rep
in
pop
jns
push
xchg
xor
out
popa
cmp
inc
add
daa
cmc
movzbl
push
jl
cmp
cmp
sbb
psllw
sub
lret
sub
adc
andl
aas
cmpsl
dec
test
pop
mov
push
or
or
or
in
cltd
aam
lret
in
jbe
sbb
push
push
xchg
fcomps
xchg
nop
psubsw
pop
mov
aam
jmp
mov
rcll
mov
flds
inc
inc
jp
outsb
inc
xchg
mov
jo
xor
jnp
push
adc
shlb
repnz
das
shll
rcrb
into
pop
or
sub
sub
add
divb
addl
imul
jmp
into
cmp
mov
add
out
cmpsl
dec
loop
shrb
jae
std
inc
or
mov
jne
fisubl
jmp
aad
mov
call
ret
cmpsl
dec
inc
xorb
sub
ljmp
les
jl
pop
mov
pusha
push
push
xchg
sbb
sub
xor
push
mov
mov
push
xor
jg
jmp
pop
jl
test
adc
or
jl
push
mov
jno
loop
cs
popa
inc
mov
add
pusha
neg
xor
in
ficomps
push
sub
cmp
add
jmp
nop
aam
daa
xor
adc
inc
fsub
xchg
cmp
or
shr
and
aam
popa
into
data16
push
jno
ficoml
dec
les
sbb
call
pop
mov
ficomps
dec
push
add
jmp
rcll
fisttpl
pop
or
jnp
add
lcall
outsb
fsubrl
jmp
xor
push
xlat
xchg
push
mov
cld
sbb
jg
outsb
lds
add
add
jo
add
lahf
iret
in
push
cmp
fildl
mov
aaa
rol
adc
dec
mov
push
dec
lret
mov
dec
mov
push
dec
cmp
pop
push
mov
sub
mov
fstpl
loopne
repz
aam
adcl
mov
or
shrb
jns
mov
add
inc
neg
popa
xchg
dec
jle,pn
push
repz
jecxz
sbb
incb
lret
and
cmp
fdivr
xor
sub
add
insl
cmp
cmovs
leave
xor
push
sbb
and
out
adc
add
fsubrp
jg
add
push
push
scas
or
and
adc
xor
mov
cmpsb
or
fs
and
roll
or
add
xor
adc
pop
pop
enter
aas
mov
ss
orb
xchg
or
xlat
dec
xor
mov
add
test
adc
adc
ror
and
add
inc
mov
mov
xor
leave
shll
loop
jmp
jns
add
push
push
push
push
pop
mov
fcomip
xor
jb
and
push
mov
push
push
push
rolb
pop
adc
repz
adc
pusha
mov
jne
imul
ja
ret
mov
sbb
adc
roll
mov
inc
pop
cwtl
popf
xor
int
pusha
int
dec
dec
out
dec
fadds
decb
shrl
rcll
xchg
jecxz
or
fsubrl
stc
cmp
add
push
mov
call
int3
int3
cwtl
or
loope
movsl
mov
mov
xor
mov
lds
push
jp
sbb
in
shll
ss
pop
rcrb
dec
jmp
push
pop
or
cmp
ret
and
xor
push
das
jmp
movl
shl
int3
ljmp
int
ret
es
push
mov
xor
mov
shl
pop
or
jmp
stos
test
pop
test
sub
ljmp
push
popa
or
sahf
ret
in
dec
jg
subl
push
fildl
in
add
neg
js
dec
and
jb
jle
add
push
test
cmp
xlat
and
pop
xor
lret
push
loopne
add
xor
inc
movsb
pop
push
mov
mov
imul
pop
xchg
mov
outsl
push
outsb
out
and
ficoms
lods
sbbl
push
out
pop
pop
push
or
pop
push
and
not
dec
or
lahf
fdivl
cli
repnz
mov
pop
xor
pop
and
pusha
ja
sbb
loop
std
and
jg
in
and
lds
sub
adc
xor
sbb
sub
add
pop
sub
lret
and
pop
pop
aas
ret
stos
imul
negl
aas
pop
push
lock
ss
jnp
dec
mov
inc
push
jmp
repnz
jp
cmp
nop
or
outsb
and
add
mov
and
xorb
inc
js
add
pop
cmp
incl
dec
sub
lret
mov
lods
repz
cs
dec
bound
pop
out
push
mov
mov
sub
jno
xor
pusha
roll
mov
imul
cmp
or
add
inc
lods
sbb
sbb
inc
or
xchg
pop
dec
leave
add
movsl
outsb
and
movsl
inc
ficoml
cmp
sbbb
and
cs
adc
icebp
pop
mov
in
call
cmp
jge
and
dec
add
lcall
mull
dec
push
pop
mov
inc
xchg
sbb
rcrl
inc
xchg
adc
or
je
inc
icebp
jmp
ret
pop
xchg
xchg
mov
cld
pop
movsl
add
cmp
test
and
push
pop
or
shlb
das
or
sar
inc
jne
push
cmpsb
mov
fisubrs
lods
cltd
push
xor
popa
shrb
gs
fnstenv
arpl
mov
or
mov
jo
mov
mov
pop
jge
adc
lret
inc
dec
sbb
cs
mov
mov
mov
or
shrb
mov
inc
mov
pop
mov
push
mov
sub
cmp
push
pop
xor
pop
pusha
ret
pop
sub
loopne
fwait
test
jmp
xlat
push
mov
imul
das
push
bound
cld
addl
push
mov
add
sub
outsl
xor
in
mov
inc
mov
dec
int
inc
push
add
push
daa
mov
js
imul
push
cmpl
lret
push
push
mov
icebp
jbe
sub
xchg
sub
pop
sub
ret
jae
pop
add
icebp
cli
push
adc
loope
and
jmp
lock
sbb
jge
shlb
adc
inc
xor
sarl
mov
ds
fstps
adc
inc
pop
mov
push
dec
shll
std
or
or
or
and
cmpsl
pop
pop
dec
ja
mov
or
nop
pop
sbb
movsb
out
ret
pusha
aas
mov
push
push
adc
add
jmp
std
push
sarb
or
push
addb
negb
or
sub
ud1
in
loopne
loope
dec
push
or
dec
push
inc
shll
and
mov
js
out
cwtl
cmpsb
add
repnz
pop
xchg
xchg
push
mov
push
ret
add
pusha
xlat
or
loop
pop
add
mov
fstpt
push
mov
cmp
and
mov
pusha
inc
and
cmpsl
ljmp
pushf
mov
mov
mov
cwtl
shlb
out
dec
dec
mov
stc
cmp
sub
add
mov
cmc
sub
pop
xchg
mov
xchg
mov
inc
jmp
xor
lcall
sti
jns
cs
sub
ret
xor
or
cwtl
cmp
sub
adc
test
daa
dec
push
and
push
mov
and
dec
mov
xchg
add
dec
aaa
push
insb
xor
jg
popf
cmp
jno
lods
jo
leave
shrl
or
sbb
xor
pop
pusha
roll
and
sub
mov
xorl
push
repz
data16
sahf
or
ja
push
or
xor
insl
push
mov
dec
jmp
sub
repz
fdivrl
add
mov
into
addl
mov
mov
adc
orb
cltd
jle
push
cld
loopne
push
push
mov
pop
add
test
and
xor
sub
push
xchg
jns
ljmp
push
mov
ja
xor
in
rcll
and
or
cmc
add
pop
rcl
pusha
mov
push
or
es
add
sub
sub
jb
das
xchg
pop
insb
pop
adc
and
int3
xlat
add
adc
dec
mov
mov
add
stos
cli
je
or
pop
add
jle
push
and
mov
mov
push
add
mov
shll
jle
xor
cmp
jmp
sarb
sub
push
out
push
or
aaa
jmp
aad
inc
mov
adc
add
ss
fmul
test
or
add
out
add
jl
sahf
aas
add
pusha
jbe
sbbb
or
xchg
pop
hlt
mov
pop
pop
lret
lcall
fldcw
ds
lods
movsl
sub
sbb
or
dec
jmp
adc
sub
xchg
mov
xor
lea
shll
into
loop
push
iret
xchg
mov
jo
aaa
pusha
test
mov
ja
mov
jmp
jns
dec
and
push
pop
in
mov
cld
mov
mov
sub
fadds
addb
push
mov
mov
push
mov
mov
andl
mov
dec
jbe
xchg
mov
sub
sub
loop
dec
or
push
ljmp
cwtl
sbb
jp
das
out
testb
and
adc
outsb
mov
clc
pop
loop
test
lods
mov
std
out
clc
sub
sub
xor
outsb
add
mov
add
ds
push
cmp
adc
pop
mov
xor
add
sbb
jbe
into
out
sub
adc
lock
repnz
jmp
push
and
dec
adc
add
ja
loopne
add
mov
leave
ffree
or
pop
sub
out
add
mov
mov
add
push
mov
incb
ret
shl
xor
mov
or
lret
jmp
and
xor
or
jmp
jb
cmp
pop
cmpsb
lret
lea
pop
pop
jecxz
dec
xchg
and
mov
xor
shrl
mov
inc
lcall
negl
insb
pop
shl
push
push
push
add
les
fistpll
dec
shrb
push
jmp
shr
xchg
out
shlb
jae
dec
jge
adc
cltd
add
pop
cmp
cmp
pusha
es
jns
add
jg
jnp
test
add
dec
jmp
push
sbb
ss
jmp
clc
pop
cwtl
and
push
cmp
js
sbb
aas
inc
insl
into
insl
or
and
ret
mov
aas
or
inc
add
adc
and
xchg
pop
pop
scas
xchg
scas
subb
gs
and
add
dec
bound
add
rclb
sub
mov
add
adc
rolb
sbb
aas
je
push
or
pop
add
and
pop
inc
or
push
dec
add
ffree
pusha
in
mov
les
repz
mov
into
inc
inc
sub
add
push
push
into
cmp
repz
jno
in
mov
sub
cmp
cld
push
push
and
aaa
add
shlb
clc
mov
mov
mov
inc
mov
push
arpl
xor
ret
or
or
xor
in
xor
pop
pop
adcl
loopne
test
pop
jno
or
pusha
ds
movsb
cli
xor
aam
sub
lods
fidivl
and
jg
lods
add
aas
stos
mov
mov
and
js
pop
dec
dec
inc
loopne
cmp
jno
movsbl
push
hlt
jmp
pop
cmpsl
sbb
push
loop
out
and
and
scas
mov
adc
pop
repz
in
sbb
test
adc
dec
mov
sub
mov
adc
jl
pop
mov
mov
es
addb
sub
jns
sub
or
adcl
inc
lock
mov
sub
test
push
and
jns
aas
push
mov
pusha
and
mov
in
jl
jnp
xchg
jmp
pushf
les
push
lahf
inc
shrl
push
aam
and
cmp
pop
mov
push
sbb
cs
insl
cmpsl
inc
pop
add
jge
cmp
int3
fnstenv
icebp
jns
push
pusha
es
or
add
dec
jle
and
in
movsl
lea
mov
sbb
inc
adc
xor
or
jmp
les
push
push
dec
pop
int3
lahf
push
inc
popl
inc
add
leave
shlb
clc
jg
sub
pop
add
or
sahf
out
mov
sub
pop
jg
cmp
xor
or
std
xchg
jb
into
sub
cmp
je
or
add
cmp
lock
sub
outsb
jno
mov
push
cld
or
xlat
stc
mov
shlb
dec
mov
cmpb
out
inc
xor
mov
sub
or
fstpl
fwait
push
movsb
loopne
aam
xchg
scas
stos
push
test
orb
and
and
sbb
sub
inc
and
jge
scas
jecxz
mov
loopne
jg
inc
and
sbb
repz
scas
sbb
push
insb
sub
in
inc
mov
pop
hlt
pusha
ret
mov
or
jmp
or
cltd
add
roll
jns
test
lret
and
mov
pop
sahf
xor
call
pop
lock
nop
sub
pop
rcll
push
pop
sbb
lods
push
loop
xchg
dec
movsb
dec
aam
pop
scas
dec
shr
push
cld
pop
xchg
xchg
insb
fmull
shlb
imul
push
fwait
inc
andb
push
jl
fmul
mov
add
iret
pop
jle
add
fistpll
aas
rorb
pop
add
mov
sbb
pop
add
or
mov
pop
out
fs
ss
or
sub
push
daa
jmp
or
pop
pop
aas
shr
dec
jecxz
mov
push
push
xchg
not
xor
or
mov
sbb
xor
cmp
jmp
loopne
inc
scas
test
pop
mov
popf
addl
push
std
das
adc
aad
add
or
xchg
movsb
pop
xlat
addb
push
fs
jb
and
mov
jno
push
pop
inc
rorl
jmp
jnp
in
es
adc
push
push
pop
mov
xor
jmp
push
add
ja
push
cmp
xor
negb
inc
std
add
rcrl
push
dec
sub
xor
and
insl
xchg
lcall
and
adc
int
lods
or
pop
xor
and
jmp
dec
nop
or
dec
pusha
sub
sub
or
push
xorb
push
mov
dec
repz
hlt
xchg
and
jmp
mov
sub
dec
dec
sbb
cmpb
ret
inc
ret
clc
lods
adc
xchg
push
and
xchg
dec
pop
or
cmp
mov
add
sub
shl
inc
push
mov
jne
stc
jae
add
sub
out
pop
loop
bound
shlb
and
dec
sub
sub
push
stos
gs
sbb
into
jmp
push
pop
add
cmp
add
jmp
jmp
push
leave
test
sub
and
vmovntpd
lret
lret
pop
int3
insb
xchg
add
ret
xchg
lds
sub
cmp
dec
daa
nop
pop
lods
or
xor
pop
dec
shrl
sbb
fs
cltd
nop
add
push
aas
enter
and
adc
jae
repnz
sub
pop
mov
pop
int
std
pop
ret
ds
jmp
sbb
push
push
add
jmp
sarl
movsl
dec
rorl
pop
xchg
in
add
in
aad
dec
mov
xor
xor
push
and
fnstenv
and
jg
sbb
or
mov
pop
scas
int3
or
rolb
add
das
es
and
adc
and
xor
inc
mov
pop
sub
fcompl
lret
movsl
sub
adc
dec
bound
xchg
cmpb
xorl
lret
ljmp
out
dec
dec
in
lcall
leave
movl
insl
adc
out
shlb
rcl
push
inc
dec
cmp
pop
dec
ja
dec
push
or
adc
sbb
fcmovbe
xor
test
pop
sahf
inc
add
in
sbb
xchg
inc
pop
daa
fstps
dec
jmp
outsb
lret
and
mov
lods
push
add
dec
lret
scas
int
mov
addb
push
ds
pop
mov
sub
mov
fldt
pop
xchg
sbb
repnz
adc
xor
ljmp
lods
mov
cmc
sub
and
push
pop
ss
out
rolb
cmc
insb
sub
into
pop
out
jne
dec
or
xor
sbb
push
divb
add
movsl
sti
in
mov
cld
inc
rol
out
add
jge
outsl
stos
rcrb
push
das
jmp
movsb
in
or
inc
xchg
mov
or
adc
nop
xchg
and
dec
and
add
mov
sbb
sbb
lds
push
iret
sub
sub
push
imul
ret
and
clc
mov
sub
adc
push
jecxz
dec
stos
add
mov
call
and
jmp
outsb
sbb
jg
push
dec
mov
push
pop
iret
pop
add
pop
or
xchg
inc
int
rcrl
rol
push
fwait
adc
aas
mov
mov
lds
movsb
mov
or
cmpb
dec
dec
mov
enter
fwait
cmp
jo
push
sahf
les
loope
test
mov
adc
add
leave
xchg
lcall
add
xlat
inc
lahf
or
mov
push
insb
and
jl
jnp
xchg
mov
add
jecxz
sub
lahf
imul
adc
sahf
data16
xlat
dec
out
xchg
xor
xor
adc
xor
fs
cmp
stc
cltd
hlt
xor
xor
stc
les
pop
push
inc
shlb
pop
pop
mov
addr16
push
jb
pop
push
xor
dec
push
bnd
fs
cld
in
or
out
pop
neg
jmp
mov
cli
js
sbb
jmp
dec
or
sbb
mov
cltd
jb
sbb
pop
aad
fsubr
in
add
adc
pusha
push
les
or
add
shl
add
pop
mov
xchg
adc
nop
movsl
clc
pop
jmp
dec
dec
push
out
sbbl
sbb
jno
shrb
mov
int3
stc
pop
sub
pop
adc
jbe
leave
rcrl
leave
cmp
jmp
inc
repz
jmp
lcall
pop
sbb
add
ret
jne
and
add
cmpsl
ss
add
adc
loopne
jmp
pusha
scas
adc
push
or
daa
sub
negl
inc
daa
mov
or
outsl
or
inc
addl
push
mov
add
fldl
sub
xor
pop
push
mov
movsb
pushf
or
pop
bound
lcall
inc
push
pop
repz
bound
push
jmp
shl
add
jne
mov
add
adc
or
adc
dec
int3
xchg
stos
adc
mov
cmp
sub
pop
xadd
xchg
jmp
addb
sbb
add
sbb
not
ljmp
sub
jl
xor
test
xor
pop
adc
ds
mov
push
out
ljmp
mov
or
xchg
fsubr
jo
mov
and
insb
int
jb
xchg
jno
jmp
push
jle
and
js
add
sti
cs
je
repz
ja
stos
leave
ds
dec
add
pop
cmp
sub
mov
xchg
sub
aas
cmp
dec
addl
test
fwait
add
inc
jb
movsb
mov
andb
dec
inc
nop
cmp
pop
pop
inc
rorl
mov
inc
cmp
in
imul
outsb
cmp
ljmp
add
and
xor
or
dec
jmp
out
inc
and
mov
fwait
adc
int
xchg
push
popf
push
push
xchg
mov
cmpsb
or
outsl
and
xor
jo,pt
shl
andl
xor
jns
or
jnp
fcmovnu
sub
xchg
pop
push
xor
jmp
loope
cmp
aas
fs
sub
push
insl
sub
ja
mov
jge
test
daa
out
cmpsl
in
mov
hlt
or
push
aaa
shrb
movsb
adc
je
loop
push
shll
or
ljmp
sub
adc
xchg
cmp
shrl
jno
shr
push
xor
push
gs
aam
loop
adc
daa
popf
push
jle
mov
pop
xchg
mov
cmp
push
sub
mov
add
and
aam
add
rcrl
and
cmp
or
or
sub
and
add
xchg
mov
and
sti
sbb
or
mov
jge
addr16
pop
cltd
inc
pusha
lods
sbb
push
jno
and
inc
jmp
loopne
popf
insl
mov
shl
add
cs
enter
push
cmp
sub
pop
sub
dec
rol
mov
lods
push
inc
jo
repnz
insl
gs
nop
das
sub
orb
pop
js
ljmp
push
out
mov
imul
and
stc
mov
lahf
pop
push
push
rorl
mov
inc
mov
push
push
pop
xlat
movsb
fsts
or
jge
clc
dec
sbb
push
add
cld
sub
pop
add
xor
es
dec
aas
int3
ret
push
cmp
push
inc
lret
pop
hlt
in
pusha
cmpsb
jmp
sub
dec
sub
or
mov
add
popa
inc
jge
rclb
pop
pushf
aad
ja
pop
subb
adc
cltd
inc
lds
adc
daa
in
cmc
sbb
push
rcll
jnp
mov
cwtl
xor
in
and
dec
inc
sbb
inc
push
pop
fsubrl
push
add
pushf
sbb
icebp
add
dec
dec
mov
clc
push
jmp
and
pop
xor
xor
ljmp
lods
add
push
push
mov
sub
adc
mov
xor
inc
sub
pop
xor
cmpsl
add
adc
rolb
test
xchg
fistps
popa
ret
callw
jmp
cld
push
or
or
inc
add
xor
mov
imulb
mov
xchg
add
or
fs
xor
fs
mov
jmp
pop
push
sahf
mov
sub
arpl
lods
adc
add
ds
filds
lock
add
cli
inc
inc
and
scas
or
pop
push
push
add
neg
xor
xchg
or
push
and
and
rclb
push
pop
xchg
cs
and
in
or
sub
pop
in
mov
jl
mov
cwtl
mov
pushw
mov
cmp
xchg
mov
inc
xlat
lods
test
add
movaps
or
imull
push
into
insl
sub
les
lea
mov
ljmp
xor
cmc
dec
adc
adc
cmpb
add
pushf
sbb
jo
jno
adc
jl
pop
and
pop
push
jecxz
fidivs
add
mov
xor
cmp
lds
or
pop
cmc
adc
push
pusha
in
aad
and
imul
mov
jnp
adc
sbb
inc
jo
adc
sub
sub
aam
fs
inc
jge
add
rclb
add
mov
insl
adc
add
sbb
loop
push
call
dec
add
js
inc
les
push
cmpb
sub
addr16
insb
outsb
and
aaa
and
xchg
ja
pop
xor
dec
movsl
fdivrp
pop
arpl
loope
push
out
jl
movl
pop
mov
dec
lods
mov
mov
fimull
jmp
inc
xor
push
sub
out
xchg
daa
jmp
and
out
hlt
nop
push
ret
add
add
das
sti
xor
cmc
jmp
test
add
jno
push
clc
js
xor
cli
jno
flds
fadds
sub
xchg
xor
cmp
and
mov
sti
rol
clc
in
push
mov
loope
xor
movsl
ss
adc
lock
out
mov
and
inc
adc
fdivrl
js
add
jne
dec
cmp
pop
mov
scas
ja
xlat
icebp
jns
xchg
sbb
xor
cmp
js
pop
nop
add
add
or
enter
pop
xor
and
push
jmp
bound
push
out
gs
enter
ret
xor
mov
cmc
and
popa
jmp
add
adc
fistps
out
dec
mov
sbb
sub
xchg
inc
mov
xor
movsb
lock
jo
or
movsl
fcoms
sub
xlat
sbb
xchg
pop
mov
mov
add
or
pop
add
loop
push
and
aas
mov
dec
or
add
add
pop
scas
xor
ficomps
lock
scas
inc
mov
sbb
xlat
imul
mov
or
leave
add
icebp
or
dec
push
mov
inc
sub
dec
rolb
sub
push
add
mov
pop
daa
pop
xor
enter
sti
inc
cmpsl
add
add
iret
push
sbbl
mov
add
xchg
cld
or
dec
and
add
inc
test
cmpsl
into
sbb
pop
mov
insb
dec
sbb
add
jno
aaa
adc
jo
imul
das
test
pop
scas
xchg
mov
rorb
mov
push
scas
dec
imul
mov
inc
stos
sbb
repnz
dec
loope
add
fadds
data16
call
inc
fld
or
jb
fildl
outsb
addb
sbb
push
out
xor
inc
dec
xchg
ljmp
aam
xchg
repz
call
xor
pcmpgtd
mov
adc
rol
sbb
or
and
cmp
negl
sub
jmp
pusha
cmp
xor
test
lret
in
pop
adc
cmp
call
rcrb
add
mov
repz
lret
mov
mov
push
pop
mov
jmp
ret
nop
jne
push
push
cwtl
in
and
imull
sahf
stc
jno
push
lcall
cs
pop
in
movsl
cwtl
cmpsl
lea
pop
shl
test
push
push
enter
push
jbe
loopne
push
mov
add
pop
push
jns
lcall
dec
push
add
dec
pop
cwtl
stos
stc
add
jmp
sub
and
jge
daa
shrl
hlt
inc
dec
cmp
sti
pop
cmp
pop
and
outsl
and
jnp
mov
cmp
jmp
dec
pusha
mov
sbb
jno
jae
nop
push
cmp
sbb
inc
inc
jo
and
and
add
pop
add
sub
sarl
dec
or
rcrl
aas
inc
sub
idivl
jbe
cmp
or
jge
sub
push
out
and
lods
add
xor
add
pop
jne
jg
gs
adc
test
inc
pop
lcall
or
dec
lret
sti
adc
fsubrs
jmp
enter
dec
sbb
or
notb
xchg
mov
push
mov
adc
lret
int3
rorl
xchg
fisttpll
adc
push
dec
mov
pop
jp
sub
jne
add
dec
rorb
xchg
push
add
ficoms
or
pop
pusha
divb
adc
sub
fsubp
stc
ds
cltd
jno
mov
mov
sti
xchg
and
mov
adc
push
pop
xor
adc
sub
push
jmp
push
mov
dec
hlt
push
adcb
push
mov
xlat
lock
jno
jmp
sbb
mov
pop
neg
add
mov
sub
int3
mov
sub
add
pop
popf
sbb
imul
add
push
add
dec
add
jmp
push
mov
sbb
bnd
pop
cmpsb
pusha
xchg
cmp
xor
sub
push
dec
pop
lods
int
or
jmp
mov
loope
pop
cmpsl
pop
and
or
xchg
popa
dec
push
aas
inc
xor
or
xchg
es
and
pop
jns
dec
imul
push
pop
inc
add
add
push
lea
rclb
cld
ds
xchg
into
dec
push
out
inc
pop
mov
cmp
and
push
mov
add
mov
inc
xor
sbb
bound
icebp
push
loop
loope
lret
scas
fs
test
nop
push
neg
shll
add
call
push
stos
mov
mov
movsl
jp
das
icebp
outsb
inc
scas
or
sbb
mov
rcll
push
jmp
std
jle
push
mov
mov
sub
clc
sub
rclb
js
xor
push
inc
mov
fcom
push
xchg
cmpsl
add
mov
mov
out
and
js
dec
and
mov
xchg
dec
pusha
imul
xlat
adc
dec
out
jns,pt
jo
popf
dec
dec
xor
lcall
nop
popf
cmp
mov
imul
ja
in
xchg
outsb
out
lods
cmp
or
punpckldq
push
adc
scas
clc
adc
cmp
sbbb
sahf
pop
cs
das
push
or
adc
mov
pop
inc
add
push
stc
jnp
outsb
shlb
inc
movsl
aad
bound
leave
sub
jge
inc
cmp
fadds
xchg
and
and
push
mov
push
mov
or
inc
jmp
cmpsl
mov
repnz
xchg
fists
pop
inc
jp
lock
imul
iret
pop
inc
sub
inc
lea
sti
imul
jnp
fsts
test
loopne
pop
inc
pop
pop
dec
xchg
sbb
in
xchg
jns
in
mov
das
idivb
and
pop
in
fildl
insl
add
fistps
jecxz
dec
cmpsb
in
jp
testl
xchg
pop
and
imul
add
inc
pop
loop
movsl
sub
push
jmp
pusha
sub
neg
insb
test
shlb
punpcklbw
xchg
cltd
test
nop
mov
inc
add
jmp
mov
and
pop
or
inc
and
pop
push
imul
jp
sub
pop
lahf
pusha
and
xchg
std
out
fs
scas
xor
shll
mov
jns
imul
push
inc
sub
xchg
or
data16
shrb
mov
sbb
dec
or
jns
dec
leave
sub
sbb
lods
push
adc
stos
sti
movsb
subb
int
mov
mov
dec
inc
nop
mov
ljmp
rorl
fsubp
jl
and
or
jno
jae
lods
jmp
in
push
hlt
mov
mov
sbbb
push
dec
adc
adc
push
fimull
subb
and
or
test
adc
pop
inc
shll
xchg
push
addr16
icebp
adc
in
mov
in
cmpsl
push
mov
hlt
lds
cs
je
pop
push
leave
jae
adc
rcll
mov
or
outsl
ret
xlat
stc
adc
sub
enter
push
fcompl
jb
mov
clc
lret
cmp
push
test
jmp
lret
jnp
dec
mov
inc
xor
sbb
arpl
movsl
cmp
xchg
stos
test
jo
mov
pop
push
addr16
repz
aam
sub
cmp
cmc
adc
and
push
stos
fcomp
or
aam
xor
sarl
mov
and
sub
ret
xchg
fstps
cmp
push
imul
ja
in
mov
add
fcmovnu
iret
movsb
pop
out
sub
mov
cmp
jns
xor
or
or
das
sub
rcrl
xor
xchg
sbbl
sbb
dec
xor
add
divb
lock
push
imul
lcall
shll
push
jmp
sub
pop
gs
lds
loopne
test
push
psllq
adc
enter
and
push
jae
dec
push
js
jo
add
ret
pop
aam
or
mov
lret
rorb
aaa
pop
pusha
cltd
pop
push
push
shrl
mov
ret
adc
pop
sub
jo
dec
aas
adc
int3
sub
pop
repz
test
add
inc
andl
pop
daa
mov
fwait
adc
mov
adc
pop
loopne
repz
pop
inc
dec
mov
push
rcl
lcall
adc
call
ret
frstor
mov
loop,pn
mov
call
push
je
cld
mov
mov
adc
mov
pop
push
popa
jae
push
jmp
mov
or
inc
and
mov
inc
imul
aas
pop
in
jmp
adc
leave
mov
mov
push
sub
ret
jle
addb
in
xor
fimuls
dec
dec
call
nop
and
adc
in
jg
fmuls
testl
or
jo
mov
jp
and
and
imul
xchg
ljmp
roll
xchg
pop
sahf
sahf
dec
cmpsb
mov
mov
shr
jo
dec
pop
sbb
cwtl
adc
pop
pop
ja
shl
call
mov
hlt
aam
sub
pop
stos
ja
popf
or
fidivs
pop
push
push
xor
or
jb
pusha
fstl
loopne
out
aam
xor
add
es
aaa
jmp
test
push
lods
push
sbb
dec
out
mov
inc
pop
mov
fwait
push
sub
jle
push
aad
jg
or
jne
or
insb
push
in
cli
cmpsl
push
push
adc
pop
outsl
jg
pop
cmc
adc
lock
push
not
dec
add
out
jne
inc
rolb
and
jmp
loope
sub
inc
test
test
fisttps
mov
push
lea
adc
repnz
xchg
test
jmp
fwait
cmp
addr16
mov
push
add
jecxz
dec
push
mov
mov
mov
out
and
jp
mov
outsb
out
jns
jmp
repz
js
xchg
and
xchg
ret
rol
ret
xor
lret
add
pop
inc
not
dec
cmp
adc
nop
inc
addr16
insb
imul
inc
mov
hlt
cld
sub
mov
cmp
and
inc
dec
and
and
lods
push
subb
loopne
xchg
pusha
lods
pop
jae
nop
inc
ja
pop
xor
rolb
sub
sub
or
add
inc
inc
pop
and
jb
je
jecxz
and
or
add
push
sub
mov
nop
enter
sti
push
add
mov
jmp
fimuls
xor
xor
pop
push
aad
das
add
loope
inc
lcall
push
sbb
and
or
outsb
inc
or
inc
je
insl
sub
loop
add
sub
push
addr16
adc
push
push
fcompl
pop
gs
adc
call
les
lgs
mov
pop
push
cs
push
scas
jne
stos
sub
or
jecxz
sti
addb
push
xchg
je
std
jmp
or
cltd
xor
cmp
pop
sti
pop
dec
cmc
sub
sbbb
add
fwait
add
decb
xchg
les
ret
jl
inc
xchg
jle
aad
inc
test
test
push
imul
rcrl
and
fisubs
stc
push
in
mov
push
push
sahf
or
cwtl
leave
mov
xor
dec
aad
outsb
dec
push
adcb
test
pop
mov
sbbb
adcb
sbb
add
and
out
daa
hlt
lret
movsb
inc
xor
xchg
iret
pop
or
test
not
cld
dec
pop
xor
aam
mov
sub
ss
xor
cmc
inc
push
andl
movsl
xor
repz
dec
add
push
jmp
mov
sbbb
rcrl
dec
jp
and
and
shl
xor
adc
jnp
int3
and
mov
cs
ds
addb
movsb
dec
xor
enter
in
into
push
and
jl
pop
mov
dec
addr16
adc
sbb
cs
pop
into
fnsave
orb
mov
jo
and
rcrl
pop
mov
adc
ret
sbb
test
mov
cs
lret
clc
subl
pop
and
test
add
xchg
pop
mov
ficoml
and
xlat
mov
sub
mov
pop
jno
sahf
push
xchg
vzeroall
repz
or
inc
xchg
add
or
xchg
jo
mov
sbb
mov
int
dec
mov
popa
aam
lock
dec
xor
mov
hlt
cmp
and
iret
xor
sti
sub
das
inc
sub
shll
push
mov
inc
call
ja
into
int
sub
enter
push
dec
mov
mov
or
dec
aad
add
std
div
clc
push
call
stos
lahf
icebp
stos
or
sbb
push
iret
or
dec
or
pop
ds
aaa
xor
fstpl
pop
or
or
push
dec
and
xchg
pop
xchg
addl
daa
push
mov
pop
push
xor
sub
push
push
or
sub
xchg
xor
cmpsb
js
sbb
add
cmpb
ret
aas
dec
mov
out
pop
pop
pop
orb
icebp
inc
cmovs
xor
jb
fwait
xchg
or
enter
pop
sub
push
mov
dec
pop
rcll
or
imul
ss
push
movsl
pop
aas
mov
mov
or
sub
add
out
inc
or
into
mov
sub
cmpsb
pop
adc
dec
out
xchg
scas
sub
sub
loop
add
xchg
inc
into
mov
or
lret
xchg
stos
sub
rcl
push
loopne
jle
mov
orb
dec
mov
pop
push
inc
cmp
cmp
push
pop
aas
loop
shr
popa
inc
lret
pop
cmp
xchg
pop
mov
push
dec
fiaddl
inc
sbb
and
xor
scas
inc
jbe
rorl
jg
mov
xchg
clc
inc
xchg
mov
call
jmp
aad
pop
jbe
into
negb
push
jmp
or
leave
dec
pop
pop
sbb
cmpsb
xchg
mov
lahf
jno
adc
mov
cmp
xor
adc
lds
cmpsl
insl
mov
add
push
push
int3
dec
ret
mov
incl
in
dec
dec
rorb
push
cmc
xchg
outsb
fs
add
inc
add
push
adc
mov
insl
test
stos
daa
mov
pop
rclb
sbb
divb
add
sti
pop
xor
push
sub
jb
arpl
jne
int3
push
sub
pop
xlat
cmpsb
movsb
push
push
scas
jb
shlb
cmp
adc
and
daa
mov
call
push
xchg
sbb
ljmp
std
jnp
loop
push
sbb
and
adc
es
jns
or
enterw
lcall
clc
and
push
mov
mov
lret
cmc
cld
sahf
xor
fisubrl
push
in
insb
dec
loop
jns
xchg
outsl
inc
insl
ret
sub
les
sti
jno
rcll
add
pop
stos
iret
cmp
roll
mov
inc
adc
clc
add
sahf
das
inc
add
lods
add
pop
jmp
add
pusha
xor
and
dec
xchg
or
aas
mov
and
jmp
iret
push
mov
mov
addps
loope
push
mov
sbb
pop
sbb
clc
cmpsl
and
and
lock
pop
jl
push
lcall
or
pop
sbb
aaa
jmp
push
or
xor
push
outsl
sub
jmp
jo
cmp
sub
mov
test
sahf
roll
push
mov
fcoms
hlt
pop
divb
push
lahf
popa
sbb
shr
push
das
xchg
test
add
xchg
xchg
inc
add
outsb
push
push
leave
or
aaa
jmp
mov
icebp
stc
out
jle
mov
add
inc
adc
mov
and
nop
mov
sarl
out
and
cmc
xorb
add
mov
mov
xor
dec
xchg
cmp
shrb
pop
jmp
jmp
rcr
and
adc
jb
gs
and
jne
stos
popf
push
sub
mov
loopne
pop
cltd
fs
in
xor
lods
test
xor
sub
jo
xchg
xor
xchg
pop
sti
imul
lcall
mov
dec
das
nop
hlt
and
fs
dec
xchg
xchg
add
inc
pop
sub
push
sbb
out
mov
mov
js
push
loopne
inc
xchg
cmp
adc
mov
sub
pop
adc
ljmp
adc
je
jae
pop
addr16
mov
es
or
adc
loopne
dec
std
jmp
das
mov
in
xchg
add
jle
lods
pop
or
repz
rorb
out
dec
dec
push
xor
or
add
cld
or
fsubs
mov
mov
xor
or
fsts
xor
test
sbb
inc
fsub
pusha
xor
jmp
insl
xor
xchg
jb
nop
or
or
push
pop
or
daa
clc
push
xor
lcall
xchg
mov
mov
or
jno
clc
sbb
sbb
ljmp
adc
out
out
add
das
jmp
or
pop
incl
dec
jns
adc
push
enter
mov
xor
js
fildl
inc
je
add
sarb
jle
lahf
pop
inc
dec
cmp
inc
xor
pop
adc
push
and
mov
mov
stc
xchg
test
dec
cwtl
or
jns
subb
push
add
rorl
das
sub
mov
mov
dec
loope
sub
adc
jmp
hlt
inc
sbbb
ja
leave
negb
push
popa
shlb
or
mov
and
dec
pop
cmp
iret
pusha
push
xchg
not
sahf
or
sub
adc
pop
cmp
add
mov
add
or
cmp
out
adc
add
jg
add
xchg
repnz
test
adc
ficoml
enter
or
aam
add
xchg
out
cmp
push
and
das
mov
ds
aam
in
shll
pop
mov
cmp
cmp
movsl
inc
ffreep
cmp
xlat
or
adc
adc
add
xchg
xchg
or
call
xchg
adc
stos
dec
add
fs
sti
push
loopne
jmp
mov
xchg
icebp
sub
shr
adc
mov
pop
dec
xchg
mov
js
inc
notl
or
jmp
dec
push
xor
jmp
or
inc
or
test
or
pop
mov
mov
xchg
inc
pop
cs
inc
cmp
or
sbb
sbb
jmp
imul
adc
fists
jmp
fimull
in
push
loopne
push
wbinvd
ror
insl
test
or
ja
add
das
jmp
lahf
scas
push
lahf
mov
add
popf
inc
out
dec
int3
xorb
jg
sbb
mull
add
push
pop
testb
sarb
or
ficompl
or
imul
adc
mov
push
cmp
pop
adc
add
jmp
out
inc
imul
xor
lret
adc
push
cwtl
xor
add
lret
xor
test
pop
pop
nop
mov
or
rcll
dec
fs
xor
ljmp
lods
or
sarl
je
mov
sti
sub
sarb
jmp
or
push
or
iret
mov
lock
sub
mov
das
fnstcw
js
mov
pop
lahf
sbb
push
or
jmp
in
inc
mov
inc
add
mov
mov
xor
pusha
inc
out
xchg
call
sub
into
push
sub
loopne
mov
pop
push
mov
popf
bound
clc
adc
js
dec
push
mov
enter
mov
inc
or
stos
jmp
es
fcoml
add
mov
pop
test
mov
add
jl
cmp
pop
cs
add
mov
imul
inc
aas
dec
jecxz
les
insb
xor
aas
rcrl
cs
shlb
inc
add
sbbb
out
lret
xchg
pop
pop
xor
jmp
add
add
mov
es
fisubl
mov
adc
pop
or
fucompp
pop
imul
add
add
xor
xchg
clc
add
out
jmp
dec
rcrl
push
enter
sub
mov
xchg
jmp
call
add
add
insl
xchg
call
inc
xchg
pop
or
xchg
cmp
jecxz
inc
out
pop
call
icebp
in
pop
addb
push
fstpl
sbb
orb
sbb
fistps
xor
xchg
imul
xorl
arpl
fcompl
cmp
ljmp
or
adc
pop
add
jne
popa
cmp
test
imulb
outsb
aaa
popf
xchg
xlat
xchg
mov
cmp
adc
adc
das
pop
or
leave
cmp
push
sub
dec
ljmp
cli
mov
sbb
mov
push
add
or
mov
push
filds
fmull
cltd
outsb
xchg
mov
flds
aam
add
push
sbbb
or
and
andb
inc
jecxz
shr
inc
dec
pop
andb
cmp
call
mov
pushl
add
cltd
mov
movzwl
cld
std
and
xlat
adc
push
icebp
stos
jno
sub
imul
push
add
roll
in
dec
jp
mov
ret
mov
mov
add
cmpsb
mov
xor
inc
out
add
js
sub
jge
mov
bound
cmp
xchg
sub
cli
std
mov
push
or
pop
push
or
adc
cmp
adcb
dec
jl
cmp
pop
pop
pop
sbb
mov
sti
sub
push
sbb
ja
insb
adc
jge
xchg
add
lret
es
cmpsw
jns
shr
js
lock
iret
ljmp
xchg
clc
push
nop
dec
add
loop
mov
clc
cmc
jmp
movsb
sub
or
xchg
mov
mov
mov
jne
cs
jo
fnstsw
fsubr
push
xchg
mov
pop
cmp
std
fstps
sub
daa
flds
shl
pop
loope
and
and
or
mov
loope
cmp
js
shrl
lods
dec
and
and
push
xor
sub
push
sub
add
inc
mov
inc
push
cmpl
dec
pop
mov
add
pop
and
fnsave
mov
insl
pop
or
push
jmp
imul
sbb
xchg
jno
popa
push
pop
and
arpl
clc
xor
ja
cmp
je
fiadds
cmp
jp
ja
add
sub
pop
add
pop
movhps
mov
adc
sub
cwtl
aas
sbb
push
nop
mov
dec
cwtl
jmp
jle
or
xchg
aaa
pop
pop
test
push
jmp
cmovns
or
test
std
mov
or
loop
mov
and
rclb
jp
imul
pop
xor
pop
pop
ror
daa
add
and
add
or
xlat
sub
or
shlb
mov
jo
dec
xchg
xchg
cmp
adc
icebp
jl
mov
mov
push
fs
mov
fs
mov
imul
stos
mov
pop
mull
xor
pop
fs
sbb
lds
leave
push
xor
nop
sub
clc
fisttpll
movb
std
and
js
jg
shr
adc
lret
icebp
cmp
out
push
push
mov
or
xchg
mov
fcomps
decl
scas
pop
jo
mov
pop
not
mov
subb
sahf
mov
pop
push
jmp
or
cmp
add
pop
ljmp
pop
icebp
loope
lahf
loopne
pop
mov
fisttpll
out
aas
jmp
sbb
dec
xchg
repz
insl
jg
scas
mov
lock
and
adc
sbb
jb
push
in
xchg
sarb
aam
xlat
and
push
mov
in
mov
inc
or
cld
or
or
repnz
or
dec
sub
push
xor
not
movsl
or
mov
aas
int
jbe
sahf
cmp
xlat
jmp
enter
push
aam
mov
pop
or
xor
pop
roll
jno
shl
lds
dec
test
sbb
xor
filds
ds
inc
imul
popf
push
mov
repz
outsl
and
pop
outsl
jmp
and
aam
mov
push
loopne
imul
or
xchg
add
icebp
push
mov
test
or
pop
push
sub
or
push
push
push
jmp
dec
mov
daa
or
add
add
iret
sub
pop
lock
mov
and
lods
sub
and
or
sub
into
shlb
xchg
outsb
pop
and
mov
in
das
or
aam
push
ja
jmp
lds
xor
stos
add
sub
mov
int3
pop
rcrl
cs
roll
imul
scas
mov
jp
pop
frstor
or
sbb
imul
notl
shrl
sub
bound
jns
dec
jmp
into
arpl
push
adc
or
gs
jmp
mov
mov
shl
sbb
inc
pop
test
loopne
in
xor
add
push
mov
sub
sub
fsubl
add
ss
xorb
and
mov
jmp
pop
xchg
sub
mov
cli
mov
push
inc
mov
dec
mov
adc
cmp
lret
adc
add
fdivr
out
dec
fcoms
add
clc
push
sbb
movsl
pop
clc
xchg
push
mov
incb
popa
mov
call
pushl
movsb
addl
add
movl
cmp
aas
imul
xlat
adc
lahf
adc
xchg
in
mov
cmp
pop
mov
xor
xor
and
fcompl
jnp
int
clc
pop
jo
xor
fdivp
add
push
add
mov
pop
loopne
std
dec
test
push
mov
dec
xchg
insl
mov
test
add
mov
in
mov
pop
mov
adc
mov
ficomps
adc
sbb
cmp
cmp
adc
iret
lds
jmp
push
das
repnz
fsubrl
lods
pop
ljmp
dec
jmp
jns
js
pop
inc
or
inc
cmp
mov
xorb
sbb
and
push
repnz
cmp
pop
cvtps2pd
sub
lods
sub
cmp
jmp
cltd
push
mov
inc
xchg
mov
inc
sbb
adc
std
add
insl
or
mov
inc
addl
add
push
out
hlt
lds
mov
lret
pusha
cmp
lds
add
mov
adc
mulb
gs
cmp
orl
notb
nop
add
dec
add
sub
jo
cltd
jbe
adc
add
icebp
bound
and
stc
pop
push
cmp
out
jmp
mov
mov
mov
cmpl
push
das
orb
jp
dec
mov
dec
add
xchg
cmc
adc
jmp
out
adc
push
lods
fildl
mov
xchg
mov
movsb
sbb
add
aaa
and
lods
daa
rcr
ficomps
xlat
das
mov
scas
sbb
into
jae
cmp
call
sahf
test
int
inc
mov
inc
dec
fcom
lahf
lcall
sbb
pop
pop
notl
inc
mov
shr
insl
jle
ror
push
popa
cs
repnz
jne
jg
mov
repnz
lret
jle
dec
adc
cmp
and
cmc
loopne
call
nop
clc
jmp
push
fldcw
sbbb
mov
add
push
lret
int3
mov
pop
sbb
dec
jb
add
add
cmpsb
or
or
or
adc
mov
rcrb
aad
dec
mov
mov
out
xlat
jp
xchg
mov
push
gs
and
add
add
adcl
lock
sub
lahf
mov
cld
and
mov
lods
pop
dec
mov
xchg
and
add
jl
lods
add
jmp
push
jmp
or
jnp
or
fsubl
add
sub
jle
mov
push
pushf
xchg
xchg
repz
jae
push
push
jne
adc
fadds
in
or
pusha
dec
inc
loopne
dec
add
add
out
lret
jmp
popa
mov
sti
xorb
orl
mov
in
mov
mov
adc
sbb
xor
fbstp
xchg
add
sub
jno
inc
push
rep
sub
pop
lds
push
pop
jnp
vcvtps2dq
jb
or
ret
cmp
sbb
fmuls
sub
or
jns
and
and
sbb
sbb
mov
imul
sub
push
mov
jge
or
in
push
clc
mov
shrb
or
sahf
imul
jg
or
or
pop
jo
push
push
mov
mov
pop
or
testl
dec
mov
inc
je
fistpl
sub
mov
push
je
jmp
jae
and
repz
sub
in
mov
inc
inc
xchg
or
push
pop
mov
bound
mov
testb
and
clc
jb
or
pop
sbb
cmpsl
jno
loope
xor
aas
pop
cld
push
fdivs
push
or
fstl
bound
and
in
int
mov
push
out
add
xchg
dec
jp
mov
pop
pop
mov
pusha
ss
arpl
cli
xor
dec
push
sub
ja
movsb
sbb
shll
xlat
rorl
out
inc
lret
sti
inc
lods
dec
mov
into
xorb
mov
adc
das
sub
adc
pushf
pusha
sub
xchg
jbe
and
dec
pop
js
cmp
and
dec
xchg
push
mov
push
adc
loope
loopne
loope
push
jmp
pop
repnz
or
push
sub
sbb
push
jmp
sbb
jecxz
jnp
xor
lahf
jo
call
mov
lcall
idiv
xor
xor
jl
add
out
les
int
mov
pop
or
mov
inc
shll
mov
and
call
push
int
std
mov
mov
and
lret
jae
and
add
jmp
sub
and
or
xor
push
andl
adc
data16
adc
pop
addr16
cmp
jecxz
xchg
popa
push
pop
pop
pushf
mov
cmp
inc
nop
pop
mov
push
out
out
bnd
add
xchg
ret
pop
adc
push
mov
and
pop
pop
sub
rorb
jmp
xchg
mov
aam
fwait
out
rcl
or
aad
lret
mov
add
push
and
jp
shl
add
xor
pusha
mov
xchg
push
jns
xor
pop
scas
dec
mov
sar
lea
push
mov
aad
mov
divb
addr16
jmp
jmp
movsbw
shrb
pop
push
repnz
adc
clc
and
adcb
fsubr
cmp
int3
and
mov
add
sub
push
sub
pop
inc
xchg
cmpb
out
cwtl
rorl
test
in
cmp
jmp
test
shrb
fdivrs
pop
mov
ds
mov
repz
into
lahf
dec
mov
call
lock
shlb
push
das
xchg
lds
prefetch
or
jmp
imul
push
mov
push
sub
insb
inc
cmp
adc
or
out
mov
xor
jmp
sub
jae
push
cmp
pop
lods
test
sbb
scas
fidivrl
dec
inc
mov
popa
lret
inc
or
arpl
or
or
jo
dec
ss
xor
sarl
negb
scas
pop
pop
in
outsb
insb
add
pop
data16
sub
adc
push
add
pop
inc
mov
xchg
outsb
or
pop
clc
orl
push
adc
orb
ret
pop
and
stc
hlt
cmp
mov
movsl
idiv
loope
push
pop
add
sub
pop
mov
pop
popf
inc
cld
sbbl
test
in
push
popa
aad
in
lea
mov
pop
push
add
lds
or
jnp
in
jns
push
testb
lahf
adc
and
add
pusha
mov
xchg
subb
or
or
jns
daa
or
or
jno
xchg
push
inc
mov
or
sub
pop
icebp
test
push
pop
leave
insl
dec
enter
adc
sahf
rorb
pop
ret
jmp
jle
stc
dec
insb
mov
sub
mov
out
aam
dec
mov
pushf
fcos
loopne
sbb
daa
mov
rorl
adc
sti
rorb
insl
fidivl
or
push
inc
mov
inc
mov
pop
jmp
flds
out
xlat
mov
push
mov
icebp
and
jmp
pop
push
mov
jmp
push
clc
sti
add
imul
jmp
int
lods
ss
mov
inc
mov
push
or
adc
add
sbb
sub
cmp
or
or
negb
notb
inc
sub
pop
xchg
lret
jo
xor
scas
sub
mov
movsl
xchg
xor
loope
jno
cwtl
push
push
mov
dec
loope
fwait
sub
out
add
in
jb
repnz
outsb
shll
outsl
pop
sbb
pushf
in
in
mov
rcll
mov
popf
mov
mov
bound
dec
leave
pop
mov
pusha
jle
jns
add
mov
rolb
stos
ret
stos
pop
push
and
mov
add
insb
cmp
adc
cli
jno
nop
jne
sbb
in
repnz
xor
or
jns
and
cli
adc
jne
fistps
jb
add
inc
shr
jmp
mov
push
cmp
or
sub
loop
cmp
inc
mov
mov
inc
mov
inc
add
psubd
ljmp
cmpsb
jno
pop
inc
sub
sub
stos
cmp
repz
jae
jmp
add
jmp
test
dec
pop
stc
inc
test
mov
pop
sarl
jns
sbb
pop
mov
fstl
lods
xor
imul
dec
sbbl
shr
add
int
lds
outsl
mov
test
es
xor
dec
pop
aam
mov
add
cmp
mov
pop
mov
xlat
inc
xor
cmp
push
add
adc
test
and
cmp
hlt
cmp
test
jmp
dec
or
add
pop
push
jmp
popf
ret
scas
aam
out
dec
in
lret
jmp
andb
jo
add
mov
cmpb
jmp
into
shl
cltd
adc
inc
int
repz
pop
std
cmpl
mov
pop
and
test
jmp
cld
outsl
mov
push
xor
sti
jns
sub
mov
out
daa
lods
js
add
dec
dec
ret
push
xor
orb
adc
fsubrp
mov
mov
divl
notl
test
jmp
insb
hlt
dec
mov
push
mov
xor
pop
xchg
adc
xchg
and
pop
sbbl
jmp
testl
rcrl
sbb
in
sbb
adc
lahf
sbb
das
fimuls
jp
lret
jno
out
lahf
mov
push
imul
and
jno
xor
bswap
aas
add
orb
add
pop
xchg
scas
bound
jle
leave
aam
pop
stos
push
cmpb
jno
add
cvttps2pi
xor
add
jno
jg
push
sbb
rcr
jmp
pop
or
movlps
stos
jne
and
jp
or
or
lods
lock
or
loop
add
adc
cmpsl
sub
dec
push
mov
inc
es
ja
mov
out
jg
mov
pop
mov
xchg
pop
pop
xchg
jmp
pop
add
jle
mov
clc
push
or
xor
pop
testl
jne
fists
push
in
hlt
dec
wbinvd
push
and
ret
add
xor
pop
arpl
int
and
or
stos
adc
fisubl
push
push
cmp
mov
or
push
or
pop
pop
sti
adc
stos
push
nop
and
cmp
rcrl
outsb
out
xchg
in
mov
ficomps
mov
push
add
jmp
push
jnp
scas
add
data16
mov
in
lods
subl
lcall
sub
pop
add
push
push
jmp
ficoml
add
adc
cmp
insb
push
out
xchg
adc
mov
aad
cwtl
inc
push
ret
add
lods
sub
das
scas
xorl
adc
pop
inc
pop
push
std
sub
push
pop
xchg
je
pop
loope
arpl
xchg
mov
jne
clc
push
adc
mov
fwait
add
sbb
pop
push
addr16
pop
stos
scas
push
xor
pusha
adc
ja,pn
orb
or
aaa
fiaddl
jmp
cmc
sahf
in
in
test
mov
stc
push
xor
jl
dec
bound
cmp
push
sub
jmp
or
dec
loop
xchg
leave
pop
in
mov
xchg
inc
and
or
out
pop
jne
pop
add
icebp
jae
ja
leave
out
xchg
arpl
jne
out
enter
daa
mov
add
jmp
add
lcall
mov
flds
add
ja
les
xchg
cli
mov
push
mov
xor
stc
add
mov
adc
es
mov
or
outsl
pop
dec
ds
or
ja
cmc
jmp
lret
stos
push
dec
out
adc
pop
fimuls
mov
jg
rcl
add
jo
cs
lock
aas
lods
test
jmp
adc
rcll
mov
rorb
xchg
nop
sbb
popf
add
icebp
scas
sbb
dec
dec
rorl
dec
inc
enter
xchg
rorl
or
add
sahf
loope
jbe
daa
rcll
xchg
adc
push
outsb
imul
aaa
add
pop
or
inc
push
pop
nop
add
inc
pop
sbb
ret
or
jno
mov
mov
push
leave
mov
bound
cmp
loopne
sub
pop
dec
aam
out
xchg
push
loopne
mov
inc
mov
and
imul
out
outsb
jg
mov
jnp
jmp
pop
xchg
movsl
imul
or
push
mov
lahf
and
or
pop
cmp
sub
jae
and
jns
jg
mov
add
les
pop
mov
adc
xor
pop
push
or
int
and
out
dec
pop
mov
xchg
mov
and
in
cmp
xor
mov
ficoml
mov
pop
cmp
mov
push
adc
ret
xor
enter
push
dec
xchg
or
or
inc
outsl
mov
push
add
bound
sbb
testl
in
jg
cwtl
jo
sbb
push
push
in
push
sbb
xor
xchg
sub
or
xor
out
mov
clc
xlat
fcomps
push
mov
xchg
ret
mov
filds
lcall
add
lock
jle
sub
stc
xchg
jae
or
arpl
and
daa
push
out
int3
inc
sbb
xchg
push
leave
in
fdivs
add
and
cmp
push
mov
dec
pop
adc
sysret
jne
js
pop
pop
push
mov
push
jbe
lods
sub
pop
pop
push
push
add
lret
lock
ja
int3
call
jb
loop
sub
adc
lock
les
sub
inc
adc
and
lods
or
push
rorl
sbb
movsl
adc
test
or
xor
or
movsb
or
pop
jmp
push
dec
dec
add
ja
mov
jl
pop
jbe
imul
sbb
adc
adc
repnz
insb
push
lret
mov
lret
and
and
leave
mov
test
rclb
add
adc
andb
divb
int3
xorl
clc
enter
sub
xchg
mov
pop
mov
add
lods
ljmp
inc
rcr
cmpsl
jns
imul
and
scas
xchg
pop
cld
or
pop
or
imul
sbb
in
leave
jno
push
push
enter
js
mov
fs
call
push
pop
loope
adc
sub
fbstp
jl
sarl
pop
add
imul
enter
xchg
fisubrl
adc
ret
mov
or
lods
push
mov
hlt
cmp
pop
je
add
pop
inc
xor
pop
xchg
mov
mov
loop
ljmp
cld
xor
and
sti
lret
sub
sub
sbb
sar
negb
jmp
dec
pop
mov
lods
push
aam
cmpsl
pop
push
shlb
add
das
insb
xor
test
ret
pop
sub
jns
mov
loopne
mov
xor
xlat
inc
mov
xorl
pop
jnp
xchg
and
fdivrs
fs
and
mov
loop
add
mov
enter
les
enter
cs
mov
pop
or
push
inc
andl
xchg
repz
adc
or
add
test
pop
fsubs
rorb
or
jp
cmp
mov
out
inc
sbb
sbb
fsubl
mov
testb
mov
xor
ficompl
inc
add
jmp
insl
xchg
loope
push
ss
or
push
test
xor
or
cmc
xchg
sub
sbb
sub
jg
and
mov
or
ljmp
pop
push
mov
pusha
out
cmp
jbe
loope
popa
fadds
push
jmp
xor
inc
lret
ret
repz
dec
xor
xor
pusha
adc
or
cltd
fs
jp
sti
enter
sub
ret
lock
push
push
mov
xor
dec
sub
imul
jp
dec
lahf
mov
faddl
inc
adc
ss
cli
sbb
lods
lock
inc
xchg
sub
jge
add
jns
jbe
add
xchg
and
ud2
call
bound
cld
or
lods
jns
punpcklbw
cmpsl
imul
sub
js
lock
cwtl
or
test
movl
xchg
fbld
lods
mov
pop
pop
mov
call
aas
subb
jge
mov
daa
mov
pop
repz
pop
inc
in
dec
or
daa
fwait
mov
daa
push
mov
or
nop
cmpsb
in
andb
sbb
in
test
pop
add
incb
fistl
push
push
jmp
iret
or
fdivr
mov
pop
mov
mov
dec
sub
sbb
adc
inc
mov
subb
jecxz
mov
ds
dec
and
shlb
hlt
jg
inc
xchg
jmp
shrl
fs
mov
adc
rclb
addl
mov
paddd
test
scas
dec
lahf
mov
cmp
arpl
jmp
ficoml
inc
cmp
fs
pop
xor
and
pop
xchg
jmp
pop
mov
pop
sub
scas
add
sub
aaa
xor
jle
fadds
pop
jp
lahf
mov
sub
xchg
dec
popa
addr16
cmp
mov
leave
das
test
mov
jmp
mov
jmp
leave
sub
test
pop
cmp
mov
xor
push
mov
mov
jge
jg
mov
dec
pop
dec
jmp
jecxz
addr16
pushf
roll
push
inc
sub
lahf
pop
movsl
xchg
pop
inc
adc
stc
movsl
imul
sub
mov
adc
push
pop
mov
ds
jmp
rclb
addr16
or
loope
les
add
ljmp
mov
js
jmp
dec
out
and
sub
shr
and
xorb
add
adc
add
mov
mov
fmull
pop
out
pusha
pop
cli
push
pop
pop
jno
pop
jge
pop
add
cmc
loop
sysret
xchg
adc
dec
sub
add
push
lret
das
adc
je
mov
into
push
dec
mov
dec
mov
jmp
add
idiv
out
sub
adc
push
in
inc
rolb
mov
xchg
jo
dec
add
sbb
sbb
add
sbb
outsb
dec
loop
add
and
mov
call
jmp
ds
xchg
imul
add
enter
xchg
sub
pop
pop
inc
cltd
not
orb
fcoml
cmp
inc
rorb
mov
insl
and
push
ret
movsb
inc
mov
and
fs
pop
add
ss
sbb
test
mov
cs
fwait
loop
leave
cmp
stos
mov
or
or
adc
imul
sub
ljmp
inc
push
cmp
xchg
cmp
incl
xchg
jns
inc
mov
xor
movsb
je
add
mov
xorl
scas
inc
mov
and
push
fimuls
pop
loope
mov
cmc
cmpsb
iret
cli
mov
int3
pop
mov
mov
cli
arpl
push
pop
push
jmp
fsubs
pop
sub
jno
cld
push
mov
fs
add
je
pop
sbb
enter
or
daa
xchg
lock
test
cs
stc
mov
push
push
jne
mov
movsl
jecxz
test
push
icebp
nop
add
das
out
dec
jno
mov
dec
or
shr
and
jg
in
lret
or
pop
inc
adc
add
jmp
insb
cmc
fdivrs
loop
gs
pop
lods
cltd
test
in
xlat
mov
xor
adc
jno
mov
cmp
jns
dec
and
inc
sub
adc
pop
mov
mov
add
addl
or
lea
push
insl
stos
lods
mov
push
push
pop
dec
andb
dec
inc
es
das
aam
pop
or
decb
outsb
add
sti
push
cli
ljmp
mov
shr
add
hlt
xor
jecxz
lret
mov
push
pop
push
pop
insb
lret
add
out
pop
inc
xor
mov
bound
xlat
int
add
shrl
xchg
mov
out
mov
mov
lret
add
js
repnz
ret
mov
enter
xorb
testb
jns
pop
push
push
jmp
out
add
mov
dec
cld
jmp
adc
sti
and
pop
pop
xor
xchg
push
repnz
inc
and
ds
int3
and
xchg
sbb
les
jp
push
aam
add
lods
pop
push
push
push
dec
fs
and
ret
mov
pop
and
mov
bound
dec
xor
add
sbb
out
push
xor
dec
out
cmpsl
daa
hlt
imul
and
adc
in
mov
pop
cmpsl
add
xchg
rcl
cs
jmp
dec
xchg
push
or
nop
sub
push
test
xchg
add
cld
cmp
add
mov
call
push
je
in
sub
adc
pusha
or
mov
or
popf
inc
mov
jmp
cmpb
sbb
sub
enter
or
add
pop
mov
mov
fiaddl
mov
add
pop
xchg
pop
cs
push
arpl
jmp
adc
inc
pop
les
or
add
push
xlat
dec
call
dec
mov
sub
cmp
dec
in
lahf
pop
in
call
add
adcb
roll
or
inc
adc
popa
iret
push
push
jge
subb
add
imul
and
das
pop
mov
or
pop
aas
and
push
sub
repz
jae
insb
mov
dec
and
stos
add
jnp
jbe
nop
out
sahf
pop
lea
xor
push
repnz
js
andb
repz
cs
pop
mov
lea
push
jmp
push
jge
cmpsl
adc
add
outsb
loop
xchg
lock
cmp
arpl
push
xchg
xor
xor
push
lahf
je
xor
lock
movsb
es
fidivs
add
repnz
mov
leave
rcr
shrl
call
mov
cmovnp
ds
adc
dec
rcl
dec
sub
sub
add
pop
aaa
cmp
je
cmp
jnp
pushf
mov
mov
inc
divl
adc
fisttpll
aam
test
loopne
push
pop
fwait
jne
or
push
fimull
cmpsl
loop
ss
push
hlt
mov
shll
add
pop
std
jg
sti
mov
js
or
jbe
leave
push
pop
add
adc
movaps
pop
xchg
mov
lods
or
and
xlat
lods
sub
push
push
jmp
cltd
mov
cld
loop
xchg
pop
pop
outsb
mov
jmp
mov
or
jmp
dec
or
hlt
inc
sub
jmp
push
adc
push
sarl
mov
rcl
daa
adc
dec
and
int
push
addr16
pop
stos
push
and
mov
xor
in
mov
and
subb
push
adcb
mov
adc
mov
add
mov
pop
or
testb
push
fnsave
psubd
inc
lahf
rolb
jnp
repnz
stos
iret
cmp
fnstcw
sub
fisubrs
dec
dec
mov
in
mov
insl
xchg
xor
cmp
repnz
int
lahf
loop
rcl
add
inc
dec
lods
ja
adc
cmp
imul
pop
jmp
insl
pop
xor
or
mov
enter
or
push
add
mov
sub
ret
addr16
not
sub
push
jb,pn
pop
mov
inc
cmp
dec
inc
test
shl
xor
mov
ret
add
addr16
cmp
lret
shrb
add
jb
mov
adcb
mov
sub
insl
sahf
jmp
cmpsb
inc
cs
out
movsl
mulb
cs
xor
popa
cmp
aas
push
fwait
popf
cmp
mov
dec
cmpsl
adc
sahf
movsb
mov
into
and
push
mov
jne
fbld
das
ficoml
push
add
outsb
lock
xchg
sbb
or
je
and
xor
leave
lret
xchg
push
jp
push
push
xor
push
dec
ret
cmp
pop
sbb
or
pop
inc
xchg
or
pop
ja
sti
imul
insb
dec
jb
js
lcall
lret
jno
callw
push
mov
scas
insb
dec
hlt
cmp
xchg
ret
outsl
fadd
push
pop
push
pop
pop
lods
and
int
pop
ja
add
push
push
mov
out
fisubrl
cmpb
inc
mov
dec
ficomps
lret
repnz
mov
push
ds
scas
add
sahf
push
mov
xor
jae
or
jmp
mov
pusha
dec
and
or
adc
sarl
adc
pop
or
sub
fiadds
jecxz
cmp
dec
push
in
push
sub
pop
pop
jb
test
push
fsubs
fisttps
dec
mov
cmp
mov
scas
and
das
rolb
xor
imul
jbe
fdivs
dec
pop
jmp
sbb
add
adc
mov
pop
test
mov
fs
fnstenv
ljmp
or
inc
sub
out
pop
in
add
scas
pop
jl
incl
dec
cmp
and
jg
pusha
and
sbb
enter
inc
mov
les
cmpb
cmp
jns
nop
pop
stos
sbb
iret
inc
pop
pop
in
jle
mov
clc
and
push
adc
add
jg
fstp
mov
dec
sub
or
xchg
inc
push
and
aaa
mov
pop
pand
aas
dec
mov
lea
out
pusha
out
push
push
mov
dec
or
push
jge
repz
jge
add
pop
xchg
mov
cmp
scas
cmp
movsl
fisttpl
fs
or
pop
pop
dec
sbb
outsl
pusha
jg
push
jmp
sub
or
das
push
pop
xchg
dec
test
dec
mov
pop
lds
data16
insb
or
pop
cli
inc
sub
xchg
aad
mov
dec
inc
dec
psrlw
into
dec
stc
pop
addr16
or
inc
aaa
pop
cs
or
xchg
mov
pop
dec
andb
push
or
and
nop
popa
sahf
mov
pop
inc
push
cmp
jecxz
loop
in
cmpsl
dec
push
cmp
lods
adc
cmp
xchg
push
adc
sbb
jmp
inc
movsl
je
push
js
sub
or
mov
sub
adc
dec
call
filds
ficompl
cmp
mov
jmp
inc
in
inc
std
outsb
into
imull
add
outsb
push
push
mov
add
sub
pop
mov
adc
xchg
or
sbb
or
loopne
mov
imul
or
out
pop
cld
ret
fstpl
jg
mov
sub
pop
mov
pop
push
dec
loopne
jbe
incl
rcl
enter
subb
sbb
push
sti
xchg
lahf
test
movsb
sti
andb
mov
sbb
add
mov
xor
scas
inc
pop
mov
stos
cmp
jno
ds
imul
addr16
out
orb
add
pusha
add
mov
orb
mov
push
mov
fcoml
js
subb
mov
das
in
jmp
pop
popa
lea
int3
and
mov
dec
xor
aas
test
jmp
roll
ja
inc
outsb
movsb
mov
frstor
hlt
push
push
cmp
push
lock
out
or
xor
jg
sbb
sub
loop
or
je
pop
or
xchg
dec
orb
aas
pusha
popf
adc
sub
push
or
mov
pop
push
outsb
dec
out
rclb
mov
mov
dec
or
pop
or
push
mov
ds
or
scas
add
or
and
lock
divb
in
arpl
std
inc
jmp
rcrb
sub
hlt
push
sbbb
dec
push
xchg
jp
pop
imul
pop
aas
jmp
mov
mov
xrelease
pusha
stos
mov
addl
mov
cld
mov
aad
roll
and
add
mov
outsl
adc
stos
fs
ret
push
leave
or
mov
jmp
call
dec
pop
dec
cmp
mov
xchg
mov
dec
add
add
mov
sub
cld
outsb
cmp
adc
movsb
sbb
insl
and
inc
sub
sbb
mov
xchg
sbb
pusha
add
mov
lahf
pusha
mov
push
daa
jle
mov
sbb
cmp
inc
int3
out
addr16
sub
push
pop
push
push
aas
jmp
mov
fs
pop
add
ljmp
nop
cmp
jmp
mov
push
add
push
push
pop
sbb
pop
enter
or
sub
rcl
and
mov
call
sbb
mov
hlt
jbe
jmp
mov
not
sub
stos
and
aas
mov
pop
inc
call
jae
push
fldcw
inc
push
dec
pusha
leave
sbb
cmp
mov
das
or
pushw
das
jmp
popa
ret
sub
popf
push
fbld
cmp
jmp
pop
add
icebp
xor
xorl
pop
push
mov
jg
sbb
aaa
sub
sub
loope
repz
inc
stos
sub
dec
xor
dec
push
jp
lea
push
and
lahf
mov
mov
ret
push
xor
mov
cmpsb
loop
push
push
push
inc
push
cmp
jae
rorb
or
or
sbb
or
adc
jp
ret
mov
mov
add
lods
pop
push
pusha
or
daa
cmp
mov
test
push
cmc
jb
sub
jbe
inc
inc
ret
jl
ljmp
insb
mov
cmp
roll
add
stc
loopne
ljmp
shr
mov
push
xor
sbb
jmp
xchg
and
stc
or
push
push
jp
or
cmp
dec
hlt
ret
mov
fstl
clc
out
xchg
pop
aam
add
xchg
imul
pop
or
mov
add
and
in
jno
faddl
inc
neg
cmpb
addb
icebp
mov
jmp
cmp
jno
daa
aam
jmp
xor
std
cmp
mov
testb
push
fmuls
jmp
jg
fldt
dec
add
inc
push
inc
cmp
dec
mov
orb
cmc
pop
mov
mov
iret
loop
add
scas
adc
scas
jmp
jecxz
inc
popf
pop
xchg
and
cli
mov
lcall
inc
mov
lock
frstor
sbb
clc
fmulp
mov
mov
cmpsb
in
dec
pop
fdivl
pop
mov
fldl
xor
lds
pop
push
jns
inc
or
mov
pop
pop
fisttpll
lods
push
out
push
jb
xor
push
andb
dec
fsts
cmp
out
sbb
jmp
outsb
dec
into
or
pop
cmp
call
push
daa
pop
push
ss
xchg
cmpsb
xor
fcomi
push
loope
sbb
push
push
jle
popa
aam
insb
das
xor
jb
cmp
scas
add
enter
into
fsts
pop
mov
or
add
inc
sub
pop
testl
push
inc
addl
clc
mov
bound
out
adc
jns
add
mov
jg
sbb
sub
sub
div
mov
fstpl
movsb
notb
push
jmp
out
cwtl
fdivrs
add
mov
jmp
jns
or
cmp
mulb
inc
xchg
mov
jmp
bound
push
das
shl
push
mov
xchg
sub
mov
pop
stc
sub
test
add
adc
test
orb
add
dec
and
insl
dec
imul
fimull
sub
movsb
add
sbb
mov
icebp
inc
outsl
fsubl
inc
fs
cmp
cmp
push
orb
repz
or
orb
mov
cmc
xor
jmp
push
imul
pop
bound
and
mov
lret
inc
add
jne
dec
push
pop
pop
xchg
pop
inc
adc
sub
andb
rorl
filds
pop
pop
loopne
jmp
push
sub
cmpsl
in
clc
and
push
and
and
xor
pop
xchg
mov
cmp
sbb
cmp
repnz
pop
mov
adc
cmp
inc
xor
inc
inc
in
insl
sarl
pop
arpl
ret
add
orl
fsubrl
add
je
inc
push
pop
stos
xchg
jo
pop
jmp
mov
mov
xor
inc
js
add
xchg
test
dec
dec
mov
add
out
fnstsw
mov
xchg
push
and
push
inc
mov
flds
inc
repnz
cmp
in
pop
mov
mov
jecxz
mov
and
jno
and
jnp
stc
pop
fsubs
jle
dec
jbe
jbe
addr16
mov
and
mov
das
add
xchg
and
pop
xor
xor
adcb
outsb
mov
add
mov
mov
push
ds
mov
push
roll
xor
dec
mov
inc
leave
jno
or
sbbb
test
jbe
test
or
pop
testl
sahf
sub
cmp
pop
test
adc
daa
push
xchg
mov
out
jns
and
xlat
xor
cmp
add
jl
add
fidivrs
gs
int3
inc
mov
dec
add
das
movl
sbb
fldenv
pop
lds
cmp
jo
add
xor
add
push
sub
iret
pop
loop
ret
sbb
inc
enter
inc
pop
add
add
push
and
mov
mov
not
jge
or
sahf
cs
or
fwait
scas
sbb
sub
outsb
sbb
sub
adc
add
sbb
pop
jg
and
sub
daa
add
push
sub
inc
xor
std
pop
das
jecxz
iret
xchg
in
cmp
sub
adc
add
xor
scas
inc
js
or
mulb
aad
loop
add
dec
pop
repnz
pop
cmp
addb
jne
and
test
mov
adc
out
int3
out
sbb
xor
cwtl
repnz
pusha
dec
cmc
je
push
inc
scas
inc
pop
loope
add
mov
imul
insl
jae
lds
push
xor
adc
mov
les
push
lods
mov
or
jmp
jbe
xlat
ds
pop
mov
enter
cmpb
repz
in
movsb
and
pop
jmp
xchg
pusha
mov
or
mov
inc
popf
push
xchg
rcrb
jge
repnz
pusha
mov
and
push
pop
pop
xor
mov
push
sub
movb
adc
pop
add
mov
add
fisubrs
pop
adcb
inc
pop
and
push
cs
loopne
adc
sub
test
push
rol
jmp
sahf
pop
bt
loop
das
inc
xor
imul
push
or
fdivr
and
jmp
push
pop
ds
dec
cmpsb
lea
outsl
sbb
or
jmp
pop
cwtl
mov
lcall
ja
mov
cmp
cli
cltd
in
inc
enter
lods
jno
xor
cmp
adc
rclb
pop
outsb
cmpsb
popf
dec
push
lcall
outsl
popa
stc
add
imul
ret
inc
lea
testl
mov
mov
cli
or
adc
in
cs
xchg
inc
mov
sub
pop
mov
loope
mov
and
ficoml
and
inc
dec
push
out
mov
enter
xchg
dec
pop
pusha
mov
or
dec
stc
mov
mov
aas
sub
orl
lods
sbb
adc
pop
pop
cmp
pop
and
gs
stos
mov
lea
rol
ds
insl
push
cwtl
jno
mov
push
xchg
add
jmp
push
cmp
sub
ret
mov
mov
outsl
push
push
mov
inc
dec
add
inc
or
es
out
or
jnp
daa
rcrb
adcb
and
xor
jecxz
jle
mov
add
mov
or
push
sysenter
or
and
and
add
push
and
imul
loopne
cmp
add
dec
stc
loopne
scas
enter
and
jbe
daa
test
and
stc
jnp
inc
fidivrs
dec
add
push
mov
test
aad
scas
int
loopne
popa
stc
sub
xorl
dec
mov
sahf
xchg
imull
or
add
mov
add
or
add
or
and
dec
div
adc
data16
mov
adc
push
push
mov
mov
add
into
pop
shl
push
pusha
call
shll
mov
sbbl
mov
aaa
push
jmp
shl
nop
xor
stc
std
lods
sub
dec
out
pop
mov
repz
rcll
push
pop
pop
stos
add
stc
or
and
popf
push
loope
pop
in
orb
shrb
jmp
lret
push
add
add
test
push
call
or
test
sti
xorl
shll
push
push
dec
mov
out
inc
es
jmp
mov
lahf
add
cwtl
push
daa
or
mov
push
cmp
lds
or
dec
jmp
pop
push
add
add
lods
scas
rclb
push
aas
and
xor
pop
sti
test
push
stc
loop
hlt
mov
pop
cld
xchg
cmc
ljmp
sub
rcll
pop
sub
jae
cmp
push
sub
add
or
in
popa
rcl
xor
cmpb
adc
data16
mov
cmpsb
mov
cmpb
les
incl
enter
sbb
hlt
repz
inc
in
cwtl
roll
adc
xchg
loope
push
xor
int
popa
jno
or
push
das
add
lods
outsl
or
pop
pop
daa
mov
dec
and
sub
jb
cmp
ficoms
jg
dec
andl
dec
mov
mov
dec
inc
dec
adc
or
adc
in
inc
dec
xchg
test
add
add
sarb
or
add
dec
add
push
sub
nop
stos
jmp
push
push
ss
xor
lods
add
push
and
scas
jg
loop
adcb
daa
mov
sbbb
push
mov
pop
dec
not
push
cltd
push
movsb
jmp
or
outsb
push
push
cld
testl
aam
sbb
adcl
outsl
fsubrp
sahf
push
dec
push
mov
and
mov
lea
inc
pshufw
adc
loop
adc
sub
dec
dec
mov
add
xchg
out
sub
out
xchg
lret
jmp
rol
push
push
cmc
es
add
inc
or
imul
dec
lret
aad
or
mov
mov
pushf
nop
push
rorb
aas
xor
mov
and
mov
mov
scas
pop
dec
xchg
lods
adc
sub
push
adc
leave
jp
fsts
pop
xchg
and
sub
movsb
je
add
inc
or
jno
xor
cmp
out
pop
and
push
sub
retw
mov
xchg
mov
into
in
repnz
cmpsb
adc
mov
push
gs
and
cmp
imul
sarb
pop
aaa
mov
and
push
push
inc
xor
adc
movsl
iret
jmp
push
out
fucomp
lcall
fcompl
sub
xchg
mov
mov
sub
aaa
push
out
into
add
and
inc
push
pop
cmc
test
insl
push
jmp
pop
mov
in
mov
in
sbb
pop
and
divl
mov
dec
push
mov
add
imul
out
add
inc
ss
js
fdivs
sbbl
push
inc
add
repz
mov
add
add
pop
mov
push
adc
repz
in
adc
push
inc
jmp
cmc
mov
sti
add
push
add
xchg
mov
pop
mov
pop
pushw
inc
mov
xchg
lods
pop
dec
xchg
adc
mov
push
dec
mov
dec
lcall
and
mov
popf
sub
xor
inc
push
pop
pop
push
or
jecxz
out
mov
pop
neg
js
sbb
test
daa
pop
in
sub
popf
add
push
rorl
jo
jns
or
sub
push
xchg
mov
pusha
leave
push
pop
sub
jmp
leave
push
loop
fsub
cmp
jb
cmp
cld
adc
ret
cld
imul
jno
inc
or
add
jmp
ret
jno
jne
pusha
mov
sub
repz
jecxz
jmp
enter
add
lods
mov
cwtl
jns
mov
stos
aad
jb
addps
fcomps
add
jno
jmp
scas
dec
or
orb
jne
stc
push
cmpl
rclb
cmp
inc
or
push
leave
cmpsb
roll
cmp
mov
mov
mov
repz
dec
shr
insb
jno
jo
jne
pop
daa
dec
arpl
mov
jmp
mov
push
jle
inc
cmp
loopne
or
bound
and
pop
lcall
pushl
bound
cwtl
xchg
loope
add
scas
push
aad
into
ret
and
lods
xchg
scas
stos
push
cmp
lahf
dec
and
lret
pop
push
rorl
aas
imull
das
int
cld
fsubl
jmp
scas
xor
sub
mov
xor
imul
sub
subb
jmp
popf
pop
inc
popf
lock
mov
xchg
jno
or
xor
cmp
mov
loopne
loope
jp
jmp
push
lods
fisubrs
pop
add
stc
sub
fs
pop
pop
jle
imul
pusha
mul
push
mov
iret
and
xor
stos
sub
rcll
adc
insl
aas
insb
inc
xor
stc
lahf
lret
das
xchg
cmpsl
xchg
dec
test
cld
out
push
push
cwtl
gs
adc
mov
je
push
dec
vpmullw
push
push
push
pop
dec
inc
in
fisttps
ljmp
add
out
or
roll
lock
mov
mov
out
aam
aad
sti
and
add
sarb
pop
add
pusha
sbb
sbb
inc
and
jmp
test
push
mov
mov
mov
push
or
fmuls
outsb
inc
add
fidivrs
mov
sbb
popa
pop
jb
das
sbb
lock
loopne
xchg
ficompl
push
mov
ret
aad
and
mov
push
dec
mov
lds
dec
sub
sbb
jge
mov
mov
sbb
sub
xor
pop
xor
inc
filds
pushl
inc
lret
jne
lret
mov
in
cs
aad
xchg
push
push
xchg
dec
push
nop
mov
incl
push
popa
push
add
outsb
xor
lret
push
imul
push
pop
divb
lods
add
pop
xlat
int3
xchg
xor
pop
sub
push
mov
and
mov
jecxz
lock
leave
or
sbbb
push
mov
popa
adc
push
lret
mov
cli
xor
gs
or
add
adc
adc
xor
add
sbb
orl
adc
pop
aad
mov
repnz
jno
add
incl
outsb
xor
add
neg
dec
jmp
mov
scas
sbb
push
mov
push
outsb
lcall
or
rorb
and
test
sub
pop
lahf
les
out
inc
jne
add
pop
jmp
dec
stos
cmc
dec
icebp
mov
mov
adc
sub
inc
and
add
add
aas
cs
xor
mov
mov
outsl
ret
inc
inc
cwtl
mov
lods
pop
fidivs
out
mov
xchg
sub
push
xlat
mov
adc
mov
add
repnz
lcall
add
push
repz
cld
push
int3
dec
dec
addl
sub
push
push
cld
push
dec
cmp
lds
jns
pop
cmp
lea
loop
vpaddd
cmpl
cmp
sbbb
push
or
std
not
fiaddl
mov
pop
inc
jb
sub
movsl
orb
stc
or
ret
mov
lret
sbb
cmp
sti
mov
outsb
imul
in
pop
xor
and
in
add
push
mov
andb
push
dec
add
pop
and
add
loopne
scas
add
push
mov
xor
jecxz
fst
in
lds
aad
int3
add
je
mov
ret
jecxz
add
movsb
lea
enter
jmp
cmpb
cld
jne
call
sbb
icebp
lret
pop
orb
adc
dec
push
fisubrl
xchg
in
fimull
testb
data16
dec
shrl
jmp
lds
jns
loope
ficompl
or
mov
pop
cmpsb
push
and
mov
sub
jno
xchg
push
inc
mov
mov
pop
not
rorb
aad
xchg
ds
push
add
je
lret
dec
insl
popf
and
insb
mov
pop
inc
dec
inc
add
addl
imul
sub
xor
jmp
dec
aas
popf
sub
repz
and
addr16
hlt
push
mov
gs
faddl
mov
xor
in
ljmp
dec
rcrl
add
rorb
fs
jl
repnz
xchg
adc
sub
pop
add
push
add
sub
sub
pop
insl
mov
lahf
and
pop
push
push
add
and
cmovl
ja
out
or
hlt
js
cmp
xchg
addb
cmp
cmpsb
jp
mov
sub
sbb
and
shlb
bound
popa
mov
cwtl
in
dec
adc
cmpsl
pop
xlat
out
les
hlt
loope
add
js
neg
push
push
add
mov
in
inc
imul
movsb
inc
jl
cmp
sub
jp
add
xchg
sub
jge
pop
mov
add
jmp
or
jp
adc
push
xchg
sbb
jmp
ljmp
cs
or
sub
imul
inc
or
fistl
repz
mov
or
dec
jl
jo
dec
divb
dec
jge
daa
popf
xchg
jnp
push
xchg
sar
gs
xchg
lahf
clc
sub
incb
cwtl
adc
in
and
ljmp
dec
push
aaa
sbb
adc
imul
push
pusha
xor
push
dec
fstpt
dec
dec
mov
jl
jmp
add
jbe
add
inc
scas
pop
sub
mov
daa
in
inc
xchg
cmpb
sub
push
sub
and
sub
inc
pop
pop
stos
popa
jbe
stc
cmp
test
add
jae
mov
or
push
mov
or
hlt
jp
mov
int
cwtl
add
jb
mov
lea
add
daa
pop
rorl
cmc
mov
fistpll
add
test
push
hlt
or
and
jns
mov
rorl
insl
hlt
addr16
inc
pop
iret
mov
inc
fcmove
add
pop
shll
xor
sub
add
sbb
add
insb
imul
pop
or
mov
push
in
out
push
test
sbb
xor
add
out
movsb
std
cltd
jge
std
outsb
cmpsl
lods
push
insb
push
add
adc
sti
movb
cmc
xchg
sub
jg
mov
add
jbe
cmp
pop
inc
fcmove
jg
jb
mov
push
es
es
jno
mov
in
xchg
mov
fcoml
repnz
xchg
lret
sbb
mov
or
jge
mov
les
xor
aaa
xor
push
mov
pop
gs
cmpsl
loopne
push
push
add
sub
pop
jno
and
incb
pusha
xor
inc
dec
lds
fs
xchg
sub
cmc
push
loop
fistpl
shrb
leave
fcmovbe
imul
mov
or
dec
sbb
std
leave
mov
mov
incb
jo
add
cwtl
jnp
mov
dec
mov
jmp
mov
sub
daa
jbe
sub
mov
popf
or
loopne
sub
adc
push
loope
inc
xor
aaa
inc
dec
mov
imul
inc
cmp
pop
inc
mov
lea
fldt
push
add
push
and
clc
pop
xchg
orl
das
fiaddl
sarb
sub
and
dec
xorb
loope,pt
mov
fisttpll
jg
ficompl
stc
xchg
jo
adc
not
add
xor
inc
or
sbb
pop
adc
push
sti
dec
inc
notb
std
in
sub
cmp
pop
stos
xchg
push
add
aas
rcr
int
insl
sub
out
add
sysenter
ja
pop
jae
add
xchg
and
in
mov
push
ficoms
push
pop
inc
jg
pusha
adc
sti
jge
add
lods
inc
sbb
mov
sbb
pop
data16
jno
imul
mov
lods
mov
jo
in
clc
or
pop
pop
fs
sbb
call
test
lods
or
out
adc
stos
adcl
and
cmp
loope
jp
xor
sbb
pop
je
leave
jge
push
mov
loop
inc
sub
ds
jbe
rclb
mov
sbb
lock
ret
neg
test
push
shlb
es
inc
inc
add
sbb
mov
in
and
aas
add
add
xorb
cmp
jl
add
mov
add
outsb
lods
xor
xchg
in
sbb
and
sbb
and
repnz
xlat
adc
adc
pop
or
add
sub
inc
adc
and
ljmp
sub
fcoms
out
into
out
mov
stc
pop
add
sub
enter
stos
push
ja
jae
pop
mov
dec
gs
or
icebp
popa
push
mov
or
cld
sbb
in
pop
adc
mov
nop
pop
jmp
fnstcw
cwtl
out
ret
adc
ljmp
insl
and
shl
push
in
push
xor
jle
arpl
stos
or
adc
add
and
jbe
enter
xor
inc
cli
dec
mov
cs
xor
std
divl
pop
push
clc
out
jne
push
and
jno
std
int
repnz
mov
dec
pushf
cmp
lea
mov
inc
or
push
mov
test
pop
xchg
pop
pop
in
cmpsl
rorl
pop
int3
jnp
cmpsl
clc
dec
or
push
mov
pushf
repz
add
add
mov
inc
lds
jne
adc
popa
push
push
es
in
or
jmp
sbb
pushf
and
incb
push
addb
cmp
pop
and
push
jmp
andl
dec
nop
or
cmp
test
cmp
xor
and
pop
test
and
add
xchg
or
mov
les
in
sub
jmp
xchg
imul
pop
add
not
jge
inc
repnz
adc
cld
push
push
arpl
add
sub
inc
das
or
cmp
sub
jle
xchg
bound
sub
pop
dec
xlat
and
ljmp
mov
lock
jmp
outsl
add
push
xorl
sub
aad
dec
mov
cwtl
aam
cmp
adc
cmp
and
popa
frstor
add
mov
fisttpl
loop
sbb
xor
push
mov
pop
xchg
stos
fucom
nop
sub
pusha
add
xchg
dec
shl
pop
add
jg
ss
inc
sti
add
and
mov
inc
xchg
adc
pop
add
cmp
or
jp
push
test
mov
jmp
in
lock
imul
jmp
sar
add
mov
je
add
jg
pop
jp
push
mov
scas
fmull
sahf
out
add
stos
dec
jmp
push
fadds
daa
sub
in
xlat
cwtl
pop
or
daa
sbb
sti
push
dec
imul
jno
xchg
mov
jle
sahf
repnz
jmp
sar
popf
inc
adc
add
repz
shl
mov
cwtl
in
add
into
push
pop
dec
and
add
or
mov
adc
cltd
mov
pop
inc
cmp
mov
inc
jae
and
aam
adc
xor
xchg
sub
mov
pop
incb
jle
and
push
add
das
jno
andb
add
inc
in
rcl
pop
dec
mov
rclb
or
fsubs
insb
out
repz
mov
mov
repz
cmp
add
or
add
push
shl
lods
push
push
enter
fidivl
pop
adc
in
xchg
icebp
leave
jmp
lahf
dec
scas
push
jae
fsqrt
sub
add
jne
adc
inc
rolb
push
mov
xor
jmp
inc
repnz
xor
lahf
push
pusha
mov
sbb
push
mov
pop
mov
movzbl
mov
pop
jmp
or
add
scas
pop
sub
push
movsb
or
sti
jg
rorb
inc
add
mov
pop
jle
sti
scas
lcall
xor
push
mov
mov
sub
mov
enter
cmp
ds
paddb
lock
cmp
pop
pop
ret
es
or
jns
orl
mov
les
or
nop
cmp
add
out
mov
and
das
rcl
inc
cmc
add
push
adc
test
lds
nop
mov
pop
and
mov
iret
cmovbe
or
and
out
dec
adc
pop
repnz
push
jmp
out
out
dec
mov
cmpsb
jle
gs
sbb
test
jo
gs
jnp
xchg
add
xchg
bound
scas
xchg
lods
mov
addr16
push
fs
out
daa
add
arpl
jmp
aam
xchg
mov
sbb
xchg
pushf
cmp
sbb
and
add
mov
ss
sbb
xchg
jns
inc
shlb
or
jmp
cs
and
out
cld
xchg
das
pusha
or
ja
sub
dec
adc
idiv
insl
pop
sti
xchg
inc
jmp
addr16
jmp
add
mov
push
imul
adc
pop
xchg
insl
pop
not
pushf
sbbb
push
orl
xorl
sbb
xchg
push
daa
js
xchg
negb
dec
push
scas
jno
jmp
or
fdivrl
xchg
insl
mov
pop
add
jo
jbe
add
std
pop
neg
ja
mov
sbb
sub
mov
push
jmp
ret
and
loopne
jo
inc
mov
sub
dec
or
out
addl
inc
or
dec
add
repz
push
rclb
les
jmp
add
out
maxps
imul
cmp
adc
lcall
xor
mov
xchg
mov
clc
jmp
jle
rcrb
jge
mov
sub
push
jne
jmp
push
sub
cmp
sub
ret
dec
out
dec
push
xchg
sbb
sub
cmpsl
popa
pop
jmp
lret
add
sub
movsl
cmpsl
loope
sub
notb
fnstcw
pop
das
cmpsb
pop
mov
nop
xor
setbe
pop
andl
sbb
mov
aaa
arpl
adc
fs
enter
add
jnp
and
mov
cld
mov
lods
and
add
dec
shr
sbb
push
sub
out
add
mov
mov
shll
jl
mov
sub
das
push
mov
mov
mov
adc
dec
call
dec
test
repz
mov
sbb
and
jo
add
arpl
mov
shl
imul
les
xchg
faddl
je
adc
adc
push
or
insb
imul
and
and
cld
inc
outsl
out
dec
mov
push
scas
adc
push
sbb
xchg
out
mov
jg
addb
mov
or
jne
sub
jno
inc
or
and
jns
and
loopne
xchg
mov
je
mov
xor
mov
in
mov
push
xchg
out
pop
sbb
xor
fadds
fldcw
sbb
pop
shl
xor
mov
addr16
xor
fstl
pop
adc
mov
adc
mov
lods
push
popa
cld
adc
push
jo
lock
mov
and
dec
bound
push
push
mov
aas
loopne
mov
mov
dec
xor
lcall
imul
jmp
xor
in
mov
cmp
xchg
mov
daa
test
std
push
xchg
push
mov
in
mov
out
shrb
stc
and
xchg
and
lock
cmp
and
lds
xchg
cmp
sub
push
je
es
jne
and
add
adc
lods
mov
add
repnz
dec
testb
push
mov
mov
aaa
jecxz
imul
jg
mov
or
or
std
or
sbb
jge
icebp
imul
call
and
adc
mov
mov
push
ds
popa
mov
das
mov
mov
add
cmp
and
xor
push
and
adc
jp
sbb
repz
cmpsl
xchg
xor
jmp
push
filds
test
xor
fmuls
jecxz
pushf
cli
inc
mov
and
loope
jmp
lret
dec
inc
call
pop
mov
xor
in
mov
sub
mov
cmp
cs
add
cmpsb
pop
scas
and
inc
movsb
mov
jno
arpl
idiv
push
sbb
inc
add
mov
sbb
lahf
push
push
push
lret
add
dec
or
out
notl
stos
sbb
jge
and
jg
mov
or
push
or
push
xchg
divb
cld
adcl
jne
fwait
add
addl
add
insl
or
push
dec
jmp
jp
pop
jbe
add
dec
outsb
jp
lahf
add
ret
push
cli
pusha
inc
or
push
sub
sub
fucomp
movsb
push
xchg
into
sbb
push
pop
inc
mov
test
push
popf
loope
mov
mov
pop
shll
call
outsb
lods
addr16
jge
scas
or
not
or
sub
add
mov
lahf
push
sub
and
mov
inc
mov
and
loop
or
add
adc
fidivrs
popa
jb
pop
xor
ljmp
mov
lret
push
mov
cltd
das
dec
fstps
xchg
add
pop
cli
insl
mov
test
fsubrl
cs
cmp
push
jl
in
and
mov
mov
mov
xor
push
or
push
xor
push
fnstcw
les
iret
xor
mov
mov
add
mov
mov
lods
or
ret
les
sub
xchg
and
dec
sub
pop
pushf
add
inc
lods
movsb
aad
jmp
mov
add
fstpl
data16
cmc
lods
scas
mov
pusha
in
inc
pop
inc
pop
and
popf
add
filds
sub
frstor
push
sbb
mov
push
lods
pop
mov
mov
or
inc
les
mov
dec
xacquire
dec
add
xchg
clc
mov
loopne
lds
sub
push
cmp
mov
adc
dec
push
jmp
xor
aaa
js
sub
lcall
dec
jae
test
and
insb
xchg
scas
cs
mov
sub
push
jmp
pop
jmp
pop
or
xor
jge
jb
fwait
mov
push
sbb
adc
out
movsl
out
mov
repnz
test
push
push
test
std
and
adc
jns
pop
inc
dec
cld
sub
inc
mov
fisubs
enter
lods
add
and
insb
add
inc
jmp
add
mov
add
loope
sub
jne
add
inc
push
out
jmp
and
dec
fcom
shrl
daa
xlat
out
cs
mov
jmp
stc
pop
pop
and
loope
stc
lfs
push
push
mov
neg
cmp
add
sub
pop
mov
xor
es
xchg
sub
or
pop
movsb
mov
add
test
add
jae
mov
and
jmp
lret
push
mov
rcll
pop
or
or
push
jle
and
push
in
hlt
xchg
adc
clc
inc
adc
jo
mov
mov
jp
ds
sbbl
cmp
rcr
jmp
xchg
pop
in
shlb
add
lods
not
xchg
pop
adc
aaa
mov
xchg
or
mov
fbstp
and
pop
pushf
inc
loop
subb
imul
in
out
xor
adc
call
push
jg
push
roll
adc
jge
ret
ret
jle
not
push
mov
or
in
cmc
or
nop
shr
fnstenv
les
mov
imul
xor
mov
add
push
imul
add
ds
mov
ret
xchg
push
addr16
cmpsb
cmpl
das
test
jo
call
test
adc
push
cltd
or
aad
mov
sbb
add
stos
and
test
jae
or
leave
mov
xchg
sbb
dec
mov
fstl
lea
mov
cmp
push
cli
test
movsb
dec
add
pop
aam
sti
xor
jecxz
pop
lods
jmp
daa
sahf
movsb
cmpsl
mov
push
mov
dec
push
xchg
dec
mov
mov
movsl
icebp
movl
loope
cmp
pop
test
xchg
jbe
add
insb
mov
arpl
jnp
add
jl
and
aaa
ret
sbb
jg
xchg
mov
outsl
xor
push
inc
mov
notb
mov
add
js
jg
ljmp
pusha
cmc
cmp
ljmp
sub
mov
fadds
cmpsl
rcr
fld
loope
add
mov
imul
dec
dec
add
pushf
enter
push
test
aam
mov
mov
sbbb
sub
pop
not
jecxz
jle
sbb
mov
js
out
xchg
push
jl
or
popf
hlt
decb
add
jo
popf
hlt
or
push
push
jge
std
pop
ficomps
xlat
out
mov
mov
subb
push
jns
out
adc
mov
jmp
test
add
pop
add
mov
jp
adc
dec
pop
inc
pop
outsl
jmp
lock
and
push
orb
bnd
cld
enter
jecxz
fucomp
mov
jmp
clc
adc
and
jne
and
jl
cmpsl
jns
mov
sub
jecxz
xchg
lret
std
or
mov
cmp
aaa
inc
lods
cwtl
mov
xchg
push
xor
test
mov
jo
mov
push
jb
pop
aad
popf
xchg
es
sub
cmp
push
add
daa
or
repnz
or
jmp
leave
icebp
loop
inc
jecxz
xchg
dec
ja
jae
inc
xrstors
daa
add
gs
mov
mov
jmp
divb
imul
hlt
pop
jo
sbb
in
dec
sahf
fisttpll
cmp
adc
pop
lock
cmpsb
dec
mov
shr
and
or
in
jmp
mov
add
inc
xchg
push
and
dec
sbb
dec
sbb
addr16
xchg
inc
cs
sahf
sbb
andb
into
minps
mov
ljmp
sbb
dec
xor
and
and
cmc
movb
gs
inc
mull
and
jmp
rorl
nop
inc
push
dec
sub
in
mov
cmp
mov
cs
andl
adc
sub
pop
test
mov
xor
dec
repz
pop
mov
clc
mov
pop
add
push
sub
mov
jge
jnp
cmp
adc
or
cmp
sbb
stc
sub
mov
je
add
mov
push
sub
lds
cs
inc
push
sub
pop
pushf
add
dec
dec
andl
add
out
clc
dec
adc
dec
or
sub
jmp
int3
pop
sbb
mov
repnz
add
mov
insl
jmp
cwtl
adc
dec
lret
mov
jo
push
and
pop
test
dec
jo
xor
jmp
cmc
mov
inc
mov
fnstsw
xor
and
push
jno
test
add
pop
pop
jmp
add
fsts
cmpsb
push
and
daa
pop
sbb
cmp
fistl
add
addr16
xchg
cmc
and
and
into
mov
ret
stc
jno
jae
jmp
pop
jmp
sbb
sub
das
nop
bound
xlat
inc
jp
fcomps
dec
or
xchg
pop
xorb
jns
push
das
daa
and
repz
faddl
mov
or
xlat
enter
and
sbb
sub
push
xor
push
push
xchg
stos
cmc
movsb
clc
leave
ret
mov
and
orl
sbb
or
pop
xchg
and
jno
cmp
mov
mov
jp
ror
stos
sbb
pop
daa
dec
call
xor
pushaw
cs
jb
push
push
xchg
push
scas
pop
jmp
sub
out
adc
test
pop
stc
xchg
and
mov
daa
pop
push
loope
sub
sub
adc
push
lret
adc
push
movsl
je
outsl
dec
dec
pop
xlat
push
or
cmp
inc
cmp
inc
sbb
pop
and
fucomp
jp
negl
xor
not
mov
pinsrw
hlt
fs
imulb
push
inc
ss
jle
enter
mov
fstps
aas
gs
cwtl
jp
jle
push
das
lds
test
xchg
loopne
int3
outsb
xchg
cmp
mov
pusha
in
sti
mov
loope
push
das
jle
in
data16
or
dec
xchg
add
addl
push
and
mov
mov
jl
mov
cmp
mov
mov
sbb
testb
pop
and
dec
jae
push
icebp
push
jmp
fucomip
jbe
push
or
test
sub
xchg
and
push
stos
sub
jmp
pop
add
shl
jae
pop
call
daa
movb
jnp
fwait
push
adc
andl
adc
and
lock
cld
inc
dec
aaa
and
sahf
inc
push
cld
and
jb
pop
mov
jmp
mov
or
fisttpl
mov
pusha
push
push
push
inc
mov
cmpsl
jp
mov
pop
stc
xchg
or
in
lock
mov
jb
inc
ret
pop
add
adc
inc
adc
jp
call
pusha
test
xor
stos
das
fdivs
or
push
or
jl
mov
dec
or
add
das
jmp
xor
mov
xor
sub
mov
push
mov
ljmp
mov
add
in
fcomps
and
jle
repnz
adc
insl
mov
add
shr
push
jmp
pop
sub
dec
mov
lcall
push
lods
pop
mov
das
push
adc
or
inc
inc
jge
cli
out
sbb
push
mov
lds
and
sub
mov
jmp
xchg
daa
stc
mov
cmp
sub
clc
lods
pop
mov
cltd
cwtl
add
lahf
aas
jmp
rcll
popf
add
mov
imul
inc
jle
test
in
lret
jmp
push
lock
orl
dec
lods
add
push
test
loop
xchg
jmp
rorl
mov
and
mov
mov
js
xor
gs
insl
es
call
jmp
leave
pop
lods
jle
or
sbb
jl
nop
mov
dec
mov
push
insl
adc
xor
and
sbbl
fsubs
or
ljmp
xor
fisubl
arpl
jmp
mov
push
std
mov
push
jmp
flds
mov
movsl
cs
pushf
shlb
add
fsubrl
lods
jns
fs
push
pop
fsubs
xchg
add
mov
test
xor
pop
sti
lods
fs
adc
push
pop
call
ljmp
dec
pop
jae
test
jmp
push
xchg
shr
cmp
mov
pop
sub
xchg
add
jmp
mov
cmp
jo
rclb
push
es
inc
scas
andb
dec
add
rclb
add
shr
cli
jmp
xchg
add
add
push
lret
add
sti
jns
or
push
jl
push
fldt
jmp
popa
cltd
xchg
fcomip
mov
sub
mov
orb
mov
pushf
add
or
lea
pusha
lahf
movsl
hlt
cli
pop
xor
or
sub
mov
adc
and
lds
cmc
movsl
cmp
or
mov
cmpsb
jb
sub
stos
fists
pop
mov
inc
sub
xchg
inc
jl
outsl
loopne
negl
or
add
adc
dec
cmp
popf
mov
pop
add
pop
les
xor
pop
es
sub
inc
inc
jmp
xchg
mov
dec
pop
pop
inc
gs
jns
mov
mov
add
pop
jnp
lods
xchg
sub
mov
les
sub
and
cmc
add
mov
loopne
out
and
adc
fld
repz
or
adc
lds
mov
or
outsb
jmp
test
scas
gs
das
mov
jecxz
jl
pop
dec
and
mov
jge
flds
iret
leave
rolb
lretw
nop
std
sub
or
insl
sbb
dec
jmp
sub
mov
mov
cmp
sbb
add
cmp
mov
xchg
inc
stos
add
pop
xor
ret
xchg
lds
jo
jmp
leave
in
or
div
dec
jnp
or
push
mov
inc
push
or
lods
cmpsl
jg
jle
stos
repnz
sub
adc
adc
jnp
in
lahf
add
pop
mov
sub
ficoml
fstp
loop
jno
dec
icebp
or
xor
push
push
rolb
add
bound
imul
push
addb
or
bound
push
sarb
cmpb
add
mov
push
stos
adc
stos
pusha
mov
in
es
inc
mov
cmc
dec
and
cltd
and
daa
push
push
jmp
or
repz
cmc
xchg
stos
xchg
std
ds
mov
shll
push
pushl
add
adc
inc
pop
sbb
movsl
jne
sti
jno
inc
mov
push
ret
and
or
mov
enter
ret
out
imul
cmp
enter
push
mov
push
neg
push
pop
arpl
lock
cmp
enter
mov
push
mov
pop
repz
fstpl
cmp
push
inc
mov
ss
call
push
das
adc
cmp
or
sub
adc
adc
loopne
enter
add
popf
push
mov
fxch
adc
jecxz
xchg
adc
pop
test
sub
add
pop
mov
xchg
pop
daa
sub
xor
cmp
cwtl
dec
rclb
mov
loopne
pop
mov
sbb
adcl
adc
sub
xor
ret
inc
mov
loop
mov
cmp
push
repnz
sbbb
jp
test
cmc
mov
sti
push
lahf
jmp
lcall
push
std
or
inc
fstpt
or
and
jbe
andl
outsl
lods
jecxz
ljmp
add
lods
mov
clc
sub
aam
sti
and
clc
loope
pop
ljmp
not
xor
imul
dec
leave
fucomp
imull
jmp
inc
test
aaa
and
adc
lret
pop
insl
add
pusha
add
or
sub
mov
and
pop
sbb
add
push
push
mov
push
cwtl
leave
pop
int3
jbe
sub
pop
mov
or
aam
orb
test
jmp
lds
jns
aas
mov
or
pop
cmc
mov
lea
sub
xor
push
fistpll
dec
sub
aas
sahf
sub
mov
scas
mov
jge
mov
xorb
pop
shl
nop
test
xchg
inc
inc
inc
sub
loope
in
mov
xorb
shlb
test
jmp
or
and
push
aad
clc
sub
cmp
dec
inc
adc
sbb
pop
fcmovbe
shr
push
addr16
push
mov
and
rorb
fsubs
or
jp
orl
pop
ds
or
add
stos
mov
int3
adc
stos
loopne
dec
push
cmp
jge
and
test
jg
rcrb
aam
sti
les
test
imul
pop
or
jmp
pop
jle
gs
sub
repz
add
arpl
mov
out
or
pop
mov
sbb
loop
or
lea
enter
test
sti
std
dec
push
pop
mov
xorl
adc
push
es
gs
push
popf
push
add
add
xchg
add
hlt
cmp
or
jmp
dec
adc
test
pop
or
popf
mov
dec
add
repnz
ljmp
test
iret
mov
icebp
in
iret
popa
icebp
jb
sub
dec
sub
pop
imul
in
or
inc
out
mov
in
sbb
mov
mov
mov
jle
outsb
addl
xor
mov
cmp
divps
sub
das
jecxz
test
jmp
jo
jle
xchg
inc
mov
mov
adc
xor
sbb
outsb
mov
into
loop
std
xchg
fs
leave
mov
fsub
mov
cmp
lret
daa
mov
mov
in
pop
sbb
js
imul
loop
pusha
xor
or
add
stos
imul
adc
movsb
mov
or
cmc
lcall
subb
push
mov
add
rorl
repz
out
lds
cmc
inc
dec
jmp
cmpb
xlat
push
jo
cmc
adc
out
push
mov
ret
push
sub
mov
push
xchg
icebp
push
shrd
das
movsb
xor
jmp
sbb
jl
or
jns
push
repz
in
nop
inc
popf
mov
test
por
push
sbb
icebp
test
sbb
jp
lods
out
outsb
dec
out
sbb
imul
lds
inc
pop
mov
sub
mov
push
mov
add
dec
arpl
enter
mov
out
pop
cld
lea
lea
sub
in
xor
sbb
fstps
add
sub
ret
push
test
lret
clc
add
cmc
xor
je
in
jo
loopne
movsl
and
addr16
add
mov
xor
bound
ret
ss
add
push
in
mov
inc
sbb
lods
cmpl
je
or
adc
mov
push
sbb
cld
push
fsubp
in
inc
rcrl
stos
rorl
xor
xor
stos
add
in
inc
fidivrs
add
dec
jmp
jbe
jb
repz
add
into
mov
pop
dec
mov
jns
int3
clc
and
fldt
sbb
push
or
push
movsl
or
xor
sub
adc
sub
xor
pop
ffree
jns
out
sarb
shr
movsb
jnp
ljmp
push
in
or
pushl
mov
idiv
jb
dec
outsb
add
dec
les
pop
inc
pcmpgtw
in
jecxz
loop
movups
loopne
xor
aam
clc
or
pop
dec
inc
lock
int3
or
shl
adc
sar
js
mov
lock
add
lock
insb
xchg
aad
iret
pop
aam
inc
mov
cld
dec
add
jnp
xchg
pop
fiadds
cwtl
lret
xchg
loopne
mov
fnstsw
inc
or
mov
fsts
xor
in
movsl
loop
jne
fs
shrb
dec
sub
jg
push
into
sbb
xor
out
add
fs
push
mov
and
mov
mov
push
or
test
pop
es
test
adc
popf
dec
mov
test
inc
push
push
mov
add
jmp
lock
jns
filds
dec
stc
mov
adc
inc
push
movsl
and
jae
sbb
aad
insl
imul
pop
jp
fldcw
xchg
adc
adc
insl
aas
je
addb
lret
orl
dec
fadd
add
adc
pushf
repz
in
push
or
dec
ljmp
mov
pop
push
add
mov
aad
jle
inc
repz
mov
enter
pop
mov
fucom
gs
push
or
test
pop
xchg
jne
sbb
add
pop
cli
cmp
pop
pop
adc
push
aam
imul
in
push
mov
ret
or
xor
add
cmp
lahf
push
mov
mov
out
sub
inc
or
inc
push
pop
mov
pop
xor
cmp
mov
pusha
cmp
dec
lds
mov
mov
jo
inc
jmp
neg
xchg
add
sub
pushf
repnz
dec
mov
xchg
adc
addl
push
jbe
add
outsl
sub
pop
cli
leave
mov
fistl
sub
mov
lea
or
cld
mov
dec
sarb
add
movntq
fs
ret
in
push
jbe
outsb
andb
cmp
jecxz
push
notl
ljmp
je
test
into
lock
dec
popf
add
stos
sbb
jbe
or
and
and
jne
ret
pop
into
add
stos
xlat
jmp
mov
daa
jmp
fs
in
push
lcall
mov
lahf
jns
adc
xchg
adc
loop
les
push
movsb
cs
or
mov
dec
mov
xchg
xchg
xor
sahf
xchg
enter
int3
adcl
sub
je
lods
add
mov
mov
push
push
lcall
daa
sub
mov
inc
add
addl
scas
mov
js
xor
xlat
cmpl
and
sbbb
jg
pop
mov
sbb
stos
pop
and
outsl
sbb
sbb
es
cwtl
adc
xor
repnz
adcb
push
stos
xorb
sub
rorb
push
sub
add
jmp
dec
pop
jp
adc
cmp
sub
int
xor
adc
add
jne
test
push
pop
push
push
shll
fwait
sub
into
out
imul
pop
movsb
or
lods
std
fisubrl
mov
jmp
xor
lret
cld
nop
subl
clc
add
push
sbb
dec
loop
rcrl
test
cmp
pop
pop
lahf
jo
and
jmp
dec
and
inc
call
and
loopne
lock
sub
xor
enter
mov
sub
mov
pop
movsb
push
add
outsb
lret
push
cmp
jae
out
mov
jno
outsl
mov
inc
cmpsb
jns
mov
mov
in
bound
push
dec
sub
loop
shlb
out
lahf
inc
xchg
mov
push
test
fnsave
movsl
and
ret
fcomip
xor
dec
or
sarb
sbb
or
hlt
pop
fs
xchg
repz
call
fdivrs
mov
ja
loopne
mov
add
call
and
and
iret
sbb
lret
or
pop
shl
imul
test
imul
add
imul
sahf
shrb
pop
pop
f2xm1
in
xchg
jne
inc
add
adcb
cmp
jb
fldl
mov
mov
mov
les
mov
push
jge
mov
ja
sahf
arpl
add
ret
test
add
mov
adc
and
push
pop
adc
sbb
sub
repnz
mov
mov
in
jmp
mov
in
add
jg
sbb
test
gs
movsl
sub
add
push
fstps
fstpl
mov
jmp
push
sti
mov
in
dec
pop
cmpsb
popa
adc
dec
lods
in
lds
pop
push
push
dec
and
push
subl
adc
jmp
cmpsl
pop
imul
ja
sbb
adc
adc
and
lret
pop
pop
add
in
pop
ds
sti
add
add
add
inc
cli
sbb
or
adc
and
pop
mov
or
icebp
dec
inc
mov
sub
or
jmp
add
ja
icebp
dec
adc
inc
and
dec
lret
cmp
out
shll
xchg
int
data16
sub
sub
mov
vhaddpd
lods
add
jecxz
push
pop
mov
sub
and
inc
add
xor
test
or
or
icebp
xor
idivl
sub
aad
xchg
fdivrp
popa
lcall
push
pop
jns
imul
icebp
add
xorb
jae
jne
lods
repnz
cmp
push
ljmp
jmp
mov
popf
andl
pop
sbb
push
push
and
out
add
add
popa
sub
xchg
jmp
add
fbld
push
in
in
mov
dec
js
mov
cmpsb
xor
push
daa
bound
dec
pop
int
adc
in
mov
push
cmp
ret
xor
mov
cmp
pop
mov
test
roll
lcall
in
std
cmp
push
xor
fdiv
xchg
inc
mov
adc
cmp
xchg
jmp
push
adcl
add
add
jmp
repnz
leave
fildl
loope
mov
imul
mov
insl
in
movsl
xor
cltd
lock
shlb
lahf
mov
mov
ja
pop
shr
xchg
lds
into
mov
mov
addb
mov
fmull
sub
inc
sub
jo
rcll
add
or
push
mov
dec
mov
aaa
add
push
testl
shrl
dec
and
pop
add
jnp
lds
dec
rcl
inc
xor
or
ret
xor
scas
cmpl
shrb
xchg
cmp
adc
add
sbb
outsb
inc
repz
das
add
jno
pushw
or
stos
ret
push
and
push
mov
sysenter
inc
not
int3
enter
pop
rcrl
popf
mov
jmp
aad
dec
test
in
mov
sub
push
ret
out
dec
adc
movsl
xor
aam
mov
cmp
adc
fs
out
popf
mov
add
fdivp
mov
adc
loope
jmp
push
push
push
mov
shll
int3
hlt
arpl
fxch
sub
push
stc
lds
inc
push
mov
and
ret
push
push
sub
jl
pop
push
enter
test
insb
mov
and
es
ret
xor
loope
outsb
es
inc
xchg
mov
rcrl
sub
insl
and
jb
orb
outsb
sbb
or
sub
pop
clc
icebp
xchg
mov
icebp
lds
dec
push
movsb
mov
leave
add
ds
or
adc
and
jmp
or
popa
clc
add
lock
fcoml
add
jp
into
add
icebp
push
adc
jecxz
jmp
rolb
push
push
jmp
mov
xor
inc
pop
jo
mov
pop
push
sbb
dec
jns
ja
sbb
add
jno
data16
stc
inc
adc
push
adcl
dec
jnp
push
mov
pop
adc
aaa
loop
leave
pop
lret
cmpsl
fidivrs
fcmovnu
sti
and
popa
push
stc
test
xchg
pop
in
pop
notb
xor
xchg
mov
mov
inc
fidivrs
xchg
pop
jmp
shll
lods
shrl
sbb
add
dec
inc
cmp
and
inc
or
cmc
adc
mov
pop
mov
add
xchg
out
inc
inc
les
bound
in
pop
out
add
sub
loope
add
aaa
outsb
sub
pop
xchg
mov
xchg
ljmp
jl
ret
mov
fnsave
jp
push
sbb
add
mov
cmp
jbe
jmp
inc
or
sub
shrl
add
add
inc
int
enter
dec
incb
push
icebp
xchg
lret
andl
mov
sbb
mov
inc
mov
aaa
das
in
imull
jl
push
mov
call
push
add
jg
adc
mov
movsl
or
mov
jmp
faddl
push
xor
out
mov
or
dec
inc
jle
call
pop
jl
mov
orl
mov
lods
testl
xor
or
lret
push
fwait
inc
push
cmpl
add
faddl
or
out
push
and
adc
and
or
add
add
mov
xchg
out
add
cmpsb
mov
sahf
mov
fiaddl
test
xor
jne
and
and
xor
add
add
in
add
push
jp
adc
cmpsl
rorl
in
mov
dec
loopne
lock
add
or
jns
mov
enter
adc
shl
and
pushl
fdivl
out
mov
leave
pushf
or
mov
jecxz
repnz
mov
iret
sub
jnp
and
and
arpl
inc
out
out
add
sahf
adc
or
sbb
pop
shlb
in
adc
adc
pusha
sbb
mov
aad
push
mov
icebp
addb
cmpsl
xor
cmc
sub
inc
cmp
inc
movsb
xchg
sbb
mov
lods
mov
lcall
test
mov
push
push
inc
fcoms
lret
test
jnp
or
xor
adc
jo
add
imul
adc
mov
enter
fsub
adc
inc
dec
jle
or
mov
shrl
and
mov
sbb
xor
les
mov
and
and
xor
int
and
jns
add
pop
sub
and
or
mov
inc
fiadds
pop
inc
sbb
xchg
call
or
adc
add
mov
sub
adc
test
inc
test
xchg
aas
and
sbb
add
add
mov
repnz
lock
adc
and
mov
and
cltd
adc
mov
js
xorl
sbb
test
add
adc
in
inc
sbb
mov
mov
iret
xchg
sbbb
sbb
xor
or
and
cmp
pusha
pushf
cld
call
out
aam
push
mov
in
pusha
stos
adc
inc
sub
or
jmp
mov
mov
add
add
leave
jne
mov
sbb
add
pop
mov
orb
dec
xor
sub
push
mov
jbe
xor
adc
mov
movsb
movsb
adc
pop
xor
pop
or
pop
js
loop
xchg
mov
push
jmp
or
or
xchg
loopne
jmp
idiv
xchg
pop
pop
or
rcl
scas
and
gs
dec
pop
push
xchg
sar
mov
nop
and
dec
outsl
jno
ds
sar
sub
add
adc
bound
sbb
push
pop
nop
pop
jmp
push
mov
inc
inc
pop
and
shl
add
std
pop
jb
pusha
sub
and
call
loop
das
nop
sbb
fbld
ret
pop
imul
push
add
xchg
fucomp
js
adc
stos
fdiv
pop
mov
sarl
sub
jmp
add
mov
lods
insl
sbb
shll
cmp
jmp
push
pop
or
cli
add
clc
hlt
mov
add
in
repnz
in
or
pop
adc
xor
into
out
lea
or
adc
push
pop
scas
mov
cmp
and
push
mov
jmp
test
daa
das
mov
pop
add
add
test
xorl
mov
jo
push
pop
testb
mov
mov
jmp
fistl
gs
jmp
dec
aaa
test
add
sub
clc
mov
in
cwtl
pop
std
repnz
jne
adc
mov
push
mov
adc
pop
cmp
lods
add
insl
sub
gs
and
inc
push
sub
pop
xchg
idivb
sub
mov
sub
jne
das
mov
aaa
fucomi
not
push
pop
push
lods
call
mov
ja
scas
xor
lret
loope
scas
insb
mov
arpl
push
aam
push
cs
mov
or
add
sub
movl
push
jns
scas
popa
mov
aaa
rorl
loopne
mov
add
dec
sbb
xor
pop
ds
shlb
sbb
push
scas
add
cmp
subb
gs
dec
adc
inc
aaa
jmp
inc
mov
into
add
push
push
pushf
rorl
add
sbb
clc
aaa
les
cmp
jmp
pop
shl
repnz
jp
jno
xor
test
imul
or
aam
sbb
pop
fists
push
shl
xchg
xor
pop
decl
pop
pop
je
cmpsl
mov
inc
add
mov
shr
dec
adc
mov
ljmp
pop
add
mov
xchg
sub
jmp
jmp
cmp
add
loopne
add
pop
push
mov
fldl
mov
shl
mov
dec
dec
xlat
and
pop
pop
push
in
jno
sub
adc
push
pop
out
push
mov
xchg
pushf
pop
pop
les
divb
pop
cld
push
out
sbb
ljmp
popf
xor
adc
mov
push
inc
push
add
sbbl
mov
inc
or
adc
xchg
xchg
push
xchg
call
mov
xlat
shr
mov
jo
mov
and
or
imulb
mov
ficompl
jno
stc
and
add
test
or
psubsw
mov
push
mov
jmp
lret
mov
stos
sbb
cmp
cmp
scas
dec
jg
cmpsb
cmp
cs
sub
sub
lcall
ret
push
arpl
push
leave
pop
ljmp
add
shl
sbb
outsl
pop
add
out
cmpsl
pusha
fidivrl
pop
mov
movb
test
out
int3
mov
adc
mov
adc
and
or
in
jg
jg
mov
dec
push
icebp
push
scas
cmp
adc
leave
sub
test
push
jmp
ljmp
dec
mov
dec
mov
add
xor
jmp
jmp
jmp
or
nop
xchg
ret
or
out
xor
orb
and
addb
sub
or
lods
jne
rcrl
inc
test
repz
push
inc
add
or
push
aaa
push
fistps
add
and
clc
or
mov
arpl
mov
xlat
scas
pusha
and
and
nop
test
mov
fcoms
mov
hlt
add
ret
adc
adc
in
add
pop
dec
cmp
mov
xchg
push
fisubl
cmp
stos
test
adcb
pop
cmp
rol
or
std
pushf
jmp
push
in
aas
jmp
repz
xchg
sbb
ror
or
inc
in
xchg
sub
les
repz
jmp
add
imul
xchg
mov
sub
outsl
inc
xchg
cwtl
cmc
rorl
jmp
rorl
ss
adc
je
xor
out
rcr
mov
or
rorb
loopne
pop
sub
xor
inc
out
pop
pop
into
ds
hlt
hlt
inc
mov
call
cld
imul
sub
add
push
ret
pop
pop
push
roll
clc
xchg
cwtl
inc
push
stos
inc
pop
movsb
jecxz
ja
mov
sti
testb
lahf
in
imul
add
dec
pop
test
or
and
inc
jne
test
cli
inc
mov
int3
int3
inc
cmp
mov
es
adc
xchg
test
imul
or
sub
pop
out
pushf
add
push
fdivrs
cmc
hlt
sbb
pop
push
mov
inc
jae
mov
fdivrl
mov
push
sbb
or
out
int
add
fs
addl
outsb
je
push
dec
jne,pn
inc
insl
jl
data16
into
popf
xchg
testl
sub
jecxz
push
loopne
mov
mov
push
push
mov
mov
jmp
pop
mov
push
sbb
or
mov
clc
and
or
sbbb
std
inc
mov
cmpb
add
lea
test
jbe
pop
push
xor
jno
jl
inc
mov
test
or
mov
je
daa
jmp
fnsave
add
es
loop
push
jle
push
insb
pop
icebp
dec
or
mov
or
pusha
push
adc
jmp
pop
lea
mov
mov
jnp
outsl
outsb
push
loop
and
fs
pop
or
and
nop
out
push
aaa
int3
cld
pusha
mov
jb
popf
mov
in
pusha
frstor
pusha
add
adc
or
into
cmpsl
pop
push
push
mov
dec
gs
test
adc
and
xchg
or
and
adc
xor
fildl
in
imul
xor
push
or
pop
adc
sub
out
std
or
pop
sbb
cmp
dec
movsl
mov
or
mov
sahf
pop
cld
stos
and
sar
push
cs
outsl
mov
add
inc
push
in
add
push
aaa
fucomi
mov
sub
shr
adc
dec
lret
push
mov
push
mov
jmp
sahf
lods
inc
xchg
adc
sub
dec
sub
or
and
mov
push
outsb
in
popa
sub
and
push
inc
in
xchg
jns
aam
lret
dec
jle
mov
sub
daa
add
xchg
add
sar
xor
push
lock
push
ret
fldenv
mov
push
pop
inc
cwtl
sub
push
adc
xor
push
push
rcl
gs
inc
imul
cmc
jb
sub
pop
enter
pop
cs
pop
and
mov
pop
push
mov
aad
scas
push
stc
dec
pop
in
das
jbe
jb
inc
push
mov
pusha
jecxz
dec
or
adc
dec
aad
inc
pop
pop
add
mov
movsl
mov
adc
sub
call
stos
mov
hlt
mov
jge
lret
gs
sbb
jb
pop
lcall
out
bound
shlb
and
adc
nop
add
dec
daa
push
adc
mov
js
sbb
aam
popf
pop
jae
mov
sub
jmp
jp
bound
mov
outsl
xchg
mov
dec
daa
nop
in
jb
into
push
nop
dec
mov
jnp
adc
jg
mov
rorl
push
mov
cld
xchg
xor
dec
pushf
sar
push
addr16
or
pop
shr
xacquire
lods
outsb
hlt
in
test
inc
or
stc
stos
adc
and
add
add
call
and
xor
cmp
int3
mov
mov
loope
inc
xor
fidivs
aad
mov
push
push
sarb
dec
cmpsl
subb
subb
shlb
mov
and
pop
and
dec
aad
outsb
or
ss
push
or
adc
jne
sbb
add
jmp
or
and
xor
inc
push
jge
sbb
dec
lods
call
mov
sbb
ret
or
cmp
pop
shll
cs
cmpsl
or
or
jo
and
sub
pop
and
aaa
adc
leave
andb
push
pop
pop
popa
stos
xor
data16
stos
push
fs
xor
and
cmp
sub
call
aaa
ds
shrl
rcl
xor
and
enter
adc
jbe
push
add
sub
outsl
testl
and
imul
outsl
cmp
jne
mov
jle
ss
xor
rol
sub
jecxz
aas
adc
and
das
jp
cmp
imul
push
in
out
xor
or
jl
mov
mov
sbb
pop
cs
fsubl
inc
add
mov
pop
adc
add
add
loope
pop
flds
cmp
pushl
pusha
xsaveopt
add
xrelease
inc
cmpsl
sbb
jl
push
pop
inc
jmp
enter
jne
dec
dec
and
xchg
xor
and
push
dec
adc
pop
xchg
int3
xor
cltd
sub
sub
sub
pop
mov
leave
push
das
not
cwtl
lds
mov
sub
xchg
sbb
inc
das
sbb
fs
dec
cwtl
nop
negb
gs
jmp
jbe
or
int
adc
arpl
icebp
js
in
mov
xchg
rcrl
cwtl
movsb
cmpb
clc
xor
and
cld
cmp
daa
sub
fistpl
rclb
imul
pop
add
insb
bound
jmp
pop
and
sbb
das
lahf
aas
and
sahf
aas
or
cmp
push
dec
pop
test
mov
jmp
mov
push
mov
stos
in
add
add
and
leave
xchg
pop
sub
push
push
push
in
mov
xor
or
cmp
movsb
das
pop
gs
dec
jmp
mov
adc
lock
lods
out
jmp
jae
sahf
pop
jecxz
xor
jnp
test
pop
scas
xorb
push
mov
ret
popf
imul
test
push
mov
push
out
cs
loop
pop
out
xchg
push
or
adc
neg
leave
jne
jbe
enter
add
or
in
out
ret
jne
and
push
jl
add
or
dec
sbb
clc
in
pop
mov
sub
in
stos
xor
aas
pop
jne
push
test
es
sbb
out
sbb
rorl
sbb
ret
mov
adc
add
in
sbb
cs
pushf
dec
insl
and
pop
pop
xor
mov
inc
scas
push
js
adc
cmpl
mov
inc
jg
pop
mov
pusha
mov
mov
addl
or
and
push
pop
lods
loope
cmpsl
cmp
and
nop
cmpb
jg
call
and
mov
push
cld
and
add
push
cs
jl
jmp
addb
or
pop
add
cmpsl
pusha
add
out
and
push
enter
push
and
push
jmp
js
push
adcl
das
mov
adc
hlt
dec
mov
ret
add
stc
mov
push
pusha
jmp
push
jge
or
pop
dec
cmp
add
adc
dec
daa
aad
or
push
out
mov
xor
push
push
insl
aaa
jmp
cld
daa
movsb
stos
mov
xchg
roll
add
xlat
nop
cs
mov
cmpsb
sub
mov
inc
data16
pusha
xlat
into
aaa
and
imul
or
mov
push
mov
jno
jg
push
decb
aaa
jle
adc
pusha
stos
pop
inc
mov
adc
fstpl
mov
out
sub
mov
inc
jnp
xchg
fists
ret
jmp
shll
les
xor
xlat
push
push
and
jl
dec
add
repz
lds
es
ja
add
inc
repnz
pop
or
or
idivb
sbb
das
sub
push
loope
push
int
daa
je
movsl
int
das
pop
cwtl
push
or
xor
pop
push
jmp
lods
adc
hlt
fs
test
mov
rolb
ljmp
add
pop
push
mov
xlat
pusha
mov
in
ja
sub
pop
mov
loopne
lock
dec
add
pop
clc
js
jmp
sub
push
fsubl
or
mov
filds
push
add
not
rclb
mov
sbb
jmp
inc
popf
in
cmp
hlt
push
xchg
sahf
cmp
mov
push
jmp
out
dec
dec
add
out
imulb
movhps
push
shll
push
pop
sub
xor
nop
jle
dec
cwtl
and
cmp
or
pusha
test
mov
dec
test
adc
aad
sbb
js
mov
dec
fsubr
push
arpl
xor
xchg
cli
sbb
push
inc
mov
mov
in
pop
sbbl
movsb
push
inc
adc
fmuls
xchg
adc
not
jmp
mov
push
push
add
push
cwtl
xor
push
clc
loopne
and
arpl
push
cmp
stc
loop
dec
adc
clc
shr
push
add
adc
jnp
mov
xchg
xlat
or
mov
adcl
test
mov
ret
cltd
push
testl
mov
push
mov
jge
cmp
pop
mov
or
dec
sbb
adc
repnz
jecxz
jmp
jmp
push
cmpsb
push
pop
pop
jp
add
sti
in
mov
inc
sbb
pop
sub
push
imul
push
mov
xlat
xor
lret
mov
pop
sub
dec
or
mov
lahf
xor
idivb
mov
rorl
xor
push
lcall
fisubrs
sbb
and
xor
inc
jp
in
mov
jno
inc
out
push
push
or
or
sbb
and
xor
or
mov
aas
popl
rorl
clc
repz
pop
mov
roll
jl
jmp
dec
dec
mov
pop
inc
xchg
shr
not
pusha
mov
andb
push
nop
inc
hlt
lea
sbb
cmp
xchg
cli
add
dec
adc
seto
cwtl
xchg
stos
fcompl
jmp
js
or
test
ja
ret
aas
pop
push
jmp
fcomps
pop
jae
enter
loopne
ret
pop
movsl
flds
push
or
cmp
mov
fisttps
scas
pop
pop
faddp
adc
xor
jo
loopne
sub
imulb
jg
inc
and
nop
sub
mov
mov
fsubr
or
loopne
mov
orb
push
dec
dec
mov
test
or
adc
sbb
ficoms
mov
pop
mov
pop
adc
push
sub
out
add
pop
xor
in
imul
push
out
add
inc
nop
jecxz
loopne
push
add
out
xchg
inc
pop
pusha
xchg
or
lds
and
pop
xchg
rorb
mov
call
sub
and
shll
adc
or
aas
bound
test
mov
nop
or
mov
add
cwtl
gs
xchg
repz
fistpl
rclb
iret
push
jo,pt
jno
jmp
fnstenv
cmp
test
adc
daa
xchg
inc
sub
jmp
push
mov
add
mov
js
cmp
fstps
mov
sbbl
adc
push
out
mov
fidivrs
jne
cmp
pop
add
xor
pop
mov
mov
jl
jl
push
jne
cmp
jge
stos
dec
dec
push
scas
add
push
in
mov
xchg
lret
and
inc
int3
add
inc
dec
aam
xor
or
push
dec
mov
and
ljmp
in
mov
xor
jnp
push
push
in
mov
rolb
cmpb
test
not
jo
sub
push
loop
out
in
pushl
or
jmp
lret
xchg
push
sub
popf
pop
or
pop
adc
dec
rolb
idivb
aad
lahf
dec
xchg
call
dec
testl
loopne
inc
mov
pop
jbe
adc
test
addr16
repnz
in
sbb
add
lahf
ret
pop
pop
jmp
ljmp
rcrl
dec
add
adc
ret
xor
mov
cmp
mov
cmp
das
jecxz
adc
sub
sahf
push
xor
out
sub
loopne
xor
shlb
fadd
cmp
insl
loop
out
leave
or
in
sarb
rcl
dec
push
pop
xchg
push
fucomip
push
ret
or
in
jbe
cmp
dec
adc
dec
stos
sub
inc
loop
movsb
pop
add
dec
mov
test
aas
js
add
push
stos
sbb
mov
popf
pop
loopne
jmp
push
xor
mov
pop
cmpsl
dec
and
ss
sub
bound
pop
movsb
das
adc
mov
push
outsl
sub
xchg
call
add
pop
dec
adc
jmp
into
pop
das
sub
add
rclb
adc
mov
repz
or
jmp
leave
lods
addb
divb
cmp
mov
mov
ljmp
inc
mov
push
add
arpl
mov
daa
lods
lea
and
push
negl
add
xchg
push
jp
push
test
into
jb
push
psubsw
cmp
pop
xor
dec
add
pop
daa
push
jnp
add
and
xchg
loop
pop
pop
pop
pusha
sub
mov
pop
add
mov
add
pop
mov
loop
cld
daa
mov
pop
jl
jnp
and
cmp
adc
push
and
fists
push
add
add
in
sub
in
stos
mov
pop
jb
jmp
or
pop
in
cmpsl
xor
fiadds
call
add
mov
insb
dec
lods
mov
notb
subb
aam
pusha
std
ss
js
jmp
add
xchg
call
movsl
sti
jecxz
mov
and
lret
xor
dec
enter
imull
jmp
jb
in
scas
outsb
adcl
shrl
jno
push
mov
jmp
push
jnp
lcall
in
and
and
stc
mov
sqrtps
mov
nop
push
mov
roll
pop
push
sub
adc
sub
pop
add
cli
xchg
push
push
xchg
and
xlat
push
fwait
sub
scas
cwtl
dec
pusha
nop
pop
ret
shl
scas
lcall
cmp
adc
pop
pop
xor
adc
mov
divl
in
lock
or
out
inc
push
ror
push
add
xor
jo
es
fwait
or
xor
fisttpl
loopne
add
out
xchg
cmp
or
sahf
sti
dec
cmp
jae
lock
loopne
xchg
pusha
fs
pusha
std
sbb
call
imul
sbb
mov
and
orl
popf
shl
in
fbstp
dec
dec
sub
jmp
pop
mov
sub
xor
sub
sbb
pop
jmp
lock
push
ljmp
sub
jmp
mov
shlb
adc
dec
out
xor
mov
pop
push
sbb
push
shl
add
fsub
push
pop
out
inc
adc
pop
mov
fs
dec
movsl
jge
scas
fdivrs
dec
js
jne
dec
imulb
sub
push
repnz
imul
cmpb
mov
jge
xor
aad
insb
stos
mov
xor
js
repnz
int
mov
push
imul
stc
imul
insl
adc
cmc
or
fwait
or
pop
add
insb
push
mov
add
jmp
sbb
mov
add
test
lock
mov
jle
popa
sarl
rolb
push
hlt
or
adc
cmp
xor
xchg
add
push
shld
mov
or
mov
in
mov
lcall
add
xlat
adc
jge
leave
std
inc
iret
daa
pop
scas
pusha
mov
push
mov
das
cli
inc
je
daa
rcrb
jle
and
dec
dec
xor
cld
add
xor
jmp
cmpl
ret
jp
pop
adc
xor
push
inc
addb
and
push
sub
add
pop
cmp
add
push
push
mov
in
mov
jbe
add
push
pop
sbb
mov
pop
in
pusha
ja
or
mov
cld
fwait
jnp
scas
xchg
jmp
fisubrs
jecxz
mov
jbe
inc
stos
pop
pop
mov
daa
cltd
fcomi
inc
das
dec
and
sub
jmp
xchg
pop
or
jmp
xchg
push
ds
inc
pushf
sbb
fistps
pop
fidivs
dec
cltd
pop
push
push
mov
shll
mov
sub
jg
das
rclb
cmp
fcom
sbb
cs
xor
lret
ja
inc
cmp
dec
jbe
add
push
or
test
fsubl
and
out
add
push
leave
push
inc
mov
push
cs
xor
add
mov
push
stos
mov
lcall
test
xor
stos
icebp
pop
add
pop
shlb
adc
xor
enter
sbb
cmp
repz
or
pop
mov
jg
mov
xor
outsl
mov
test
in
or
pushf
adc
mov
pop
and
push
xor
sbb
xor
mov
shl
lea
std
pmaddwd
inc
jns
push
in
cmp
test
fiadds
lret
add
push
mov
xor
rolb
sub
dec
out
mov
mov
mov
dec
xor
xchg
pop
gs
sub
sub
jne
out
jae
fidivrs
sub
std
sub
out
shrl
ret
push
daa
pushf
lods
xorb
mov
sbb
jp
sahf
jno
movsb
sbb
in
loopne
pop
xchg
jge
and
sbb
in
movsl
outsb
rol
mov
sbb
xor
aam
add
lahf
xor
jmp
mov
jge
and
rcrb
add
clc
les
or
jb
insl
shr
push
lahf
icebp
add
jmp
xor
add
repz
pop
mov
push
cs
mov
and
push
je
das
jmp
xlat
pop
into
pop
lods
imul
push
out
pop
adc
into
mov
addb
inc
dec
jl
fbstp
jecxz
xchg
dec
test
and
lds
ret
add
jmp
add
xor
in
in
mulb
push
iret
add
inc
push
inc
test
add
in
fistps
push
jmp
push
imulb
das
fstpl
add
adc
out
adc
jle
subb
pop
mov
push
and
mov
orb
ja
add
psubsw
and
sub
dec
dec
daa
ret
aam
je
cmpsl
insl
fs
push
rcr
adc
jnp
sub
mov
or
ds
dec
xor
or
inc
mov
push
jl
testl
sbb
add
push
js
xchg
xor
jge
cmp
out
add
std
sub
jbe
sub
lds
repz
jmp
xchg
push
mov
sub
sub
and
mov
xlat
iret
mov
jo
out
mov
aaa
dec
xchg
js
mov
sbb
jl
cmp
adc
andb
sti
xchg
sbb
fcoml
outsb
or
push
or
and
and
mov
xor
push
dec
dec
mov
jmp
hlt
fdiv
xchg
xchg
cmp
enter
sahf
movsl
data16
aaa
add
repnz
cmp
jg
dec
push
lret
push
sub
sub
push
mov
pop
loope
xchg
int3
in
aas
push
shl
inc
cmc
ret
mov
jecxz
add
test
inc
nop
in
add
out
cmp
rorb
pop
mov
repnz
fmuls
pop
cld
and
adcl
pushf
int3
mov
jb
add
movsl
enter
setne
mov
arpl
jae
mov
mov
jno
cmp
notl
push
pop
hlt
lods
mov
dec
insl
xchg
shll
mov
sub
xchg
fmul
dec
addl
push
mov
xor
pop
xor
xor
or
ljmp
arpl
push
sub
lahf
lods
dec
xchg
out
inc
pop
mov
int3
sub
ljmp
mov
inc
sbb
testb
add
push
pop
mov
dec
hlt
mov
repnz
pop
repnz
cmp
add
call
xchg
mov
cmc
and
inc
xor
rcrb
pop
out
inc
push
popa
leave
sub
cmp
jmp
jae
add
das
inc
dec
mov
add
mov
xor
fstps
movd
pop
rol
mov
fs
inc
sub
jmp
cmp
sahf
inc
xor
cs
dec
push
pop
loopne
sub
pop
add
lods
and
cs
ret
sub
inc
add
jmp
mov
sub
or
add
jp
push
inc
push
arpl
jno
adc
push
mov
mov
pop
and
adc
sbb
jmp
nop
sub
jbe
je
outsb
dec
jle
jge
es
sub
mov
popa
adc
pop
add
loope
int
cli
fsubrl
and
xchg
add
ljmp
cmp
lds
jbe
push
or
push
movsb
fdivs
insl
je
push
dec
mov
scas
or
jle
jmp
xor
pop
stos
and
xlat
dec
push
icebp
movsl
push
pop
push
and
or
push
rcrb
jb
pop
bound
pop
jmp
sbbb
pop
push
ss
push
cld
mov
and
das
adcb
loope
pop
dec
jbe
add
jmp
jle
and
je
jecxz
int
jle
dec
daa
test
inc
or
push
dec
pusha
adc
rclb
dec
mov
shlb
cmp
sub
dec
in
or
push
outsl
cmc
es
lret
xor
rorl
inc
pop
mov
mov
popa
jl
or
pop
sub
sub
stos
lret
xor
stos
sub
or
cmp
movq
add
pop
and
stc
dec
cld
cmc
and
pop
push
jbe
jg
popf
jnp
cs
mov
xchg
das
pop
sub
jo
rclb
bsf
lret
push
lret
sbb
or
fcomps
inc
pop
dec
xchg
add
int
sbb
or
xchg
loopne
int3
push
cmp
sarb
mov
roll
push
adc
pop
mov
ret
jae
xlat
inc
add
mov
push
mov
jmp
jg
xchg
jp
push
sti
nop
mov
iret
insl
daa
cli
pusha
scas
pop
pop
pop
push
cli
add
jo
pop
dec
cmp
add
pop
sub
ds
cli
xor
lods
xor
dec
retw
adc
lds
pop
loopne
mov
mov
sub
jne
push
rcrl
pop
jmp
push
dec
lret
add
popa
xor
push
jmp
mov
sub
push
jle
adc
dec
clc
ljmp
hlt
fdiv
aam
ret
xor
xor
push
add
add
lea
push
movsb
xchg
lods
xor
sub
push
mov
xchg
call
add
shll
or
mov
outsb
mov
js
daa
jmp
mov
aaa
pop
addb
and
fsts
jno
ds
or
or
cld
sub
mov
adc
sar
outsb
add
add
dec
sub
pusha
clc
sahf
push
pop
jle
sub
xacquire
mov
and
xchg
inc
test
push
es
dec
pop
pop
sar
dec
xchg
pusha
cmp
jns
jb
cld
jno
movsl
fdivl
jmp
or
insl
and
and
out
push
push
jmp
xchg
pop
or
push
shrb
popa
dec
jmp
push
mov
push
xchg
sub
pop
and
adcb
lcall
inc
iret
jp
lahf
add
cli
fsubr
jmp
lret
jns
jge
pop
in
push
sbb
and
xor
pushf
stos
sub
mov
xor
xchg
fisttps
mov
or
cmp
pop
iret
mov
adc
dec
sarl
pop
fistl
mov
jmp
stc
xor
adc
jecxz
jp
add
imul
std
dec
xchg
repz
in
sbb
mov
arpl
and
mov
xor
add
sbb
sub
lock
stc
pushf
lea
jle
xor
jmp
xor
outsb
cmpb
xor
pop
mov
stc
outsl
xchg
insb
and
sbbb
dec
push
sub
pusha
sbb
push
dec
adc
mov
mov
test
add
clc
push
sbb
dec
sbb
aaa
jbe
popf
ret
in
push
and
out
lret
push
push
mov
jg
daa
sbb
add
stos
pop
adc
push
pop
dec
stos
sub
addb
cli
and
jmp
aad
mov
ja
movsb
dec
jo
add
cmpsl
jnp
ror
cmp
add
in
dec
not
in
in
lds
inc
imulb
xor
cld
or
into
das
notl
mov
xchg
adc
push
jg
clc
adc
push
cmpsl
stos
imul
mov
idivl
jb
or
dec
fwait
jp
pop
sub
sbb
rol
stos
out
mov
sub
cmpsb
orb
push
sarb
icebp
jb
neg
push
add
xor
pop
lods
xor
outsb
cmp
push
orb
xor
outsl
inc
and
add
scas
sti
xor
addr16
ds
lahf
idivb
pop
sub
je
add
jg
and
xor
aaa
adc
xchg
jg
xchg
add
and
int
ja
cmp
rclb
cmp
add
mov
dec
clc
int3
mov
daa
arpl
pop
out
mov
int
xor
push
rcrb
clc
sub
ret
add
mov
and
sub
cmp
sub
lret
idivb
jmp
mov
daa
data16
pushf
mov
cld
or
or
imul
rcrl
dec
lods
or
and
cs
push
das
stos
jne
lods
icebp
hlt
xorb
clc
fs
mov
push
cli
adc
mov
xchg
and
dec
fistl
rcr
jge
in
add
add
cmp
aas
push
pop
mov
jmp
inc
xor
es
fistps
mov
jge
push
xor
pop
xor
add
outsb
adc
jge
lcall
jae
push
fcomps
dec
in
add
aas
andl
push
sub
jmp
scas
ljmp
mov
rolb
xor
in
or
in
add
out
lods
xchg
les
cmp
cli
dec
dec
adc
jmp
repz
jae
mov
mov
jnp
int
push
adc
sbb
lret
lret
or
pop
clc
pop
dec
inc
lahf
or
sub
pusha
std
adc
adc
mov
lock
dec
sub
fstpl
rcll
loopne
dec
mov
pop
test
shll
into
sbb
and
popf
stc
aam
out
daa
ds
pop
inc
rclb
fcoms
sub
gs
xor
lahf
and
loope
xchg
aam
enter
and
sti
mov
es
pop
repz
push
push
sub
aam
or
jmp
es
mov
add
shlb
dec
or
xlat
or
dec
push
mov
adc
adc
pop
rolb
jb
subb
loopne
pop
add
xor
inc
loop
cmpsl
sti
or
inc
ss
and
jmp
mov
adc
sub
push
add
pop
cld
out
push
push
outsb
ds
pop
movb
mov
xor
or
xor
rol
test
dec
pop
push
out
cmp
lret
pop
in
int3
out
stos
test
sub
or
arpl
pop
xor
test
push
mov
mov
repz
pop
add
pop
sub
sub
add
add
sub
push
das
inc
stos
negl
lea
push
pop
das
add
pop
sub
cmc
subb
in
mov
aas
hlt
or
ja,pn
shlb
or
mov
add
sti
inc
dec
pop
cmp
add
xor
in
inc
jae
xor
jmp
or
and
aad
xchg
and
push
sub
fsubrl
jle
test
mov
lahf
mov
div
das
incl
leave
nop
fpatan
add
add
das
jle
adc
mov
or
jg
insb
jmp
jae
xchg
push
or
sub
jecxz
push
call
cli
pop
insb
ret
dec
aas
dec
outsb
push
emms
dec
pop
mov
cs
int3
xor
jl
fsubrl
push
mov
push
dec
inc
ret
add
inc
rclb
push
cmp
sub
mov
sub
lret
sbb
aad
sbb
pop
sbb
jg
lds
outsb
inc
push
daa
adc
shr
sub
gs
add
cmp
lods
sbb
imul
jno
data16
inc
fidivrl
add
jbe
mov
fstpt
jmp
push
sub
mov
pop
jle
fsts
push
mov
aam
subb
mov
add
sbb
call
nop
push
push
mov
nop
les
mov
sub
add
mov
outsl
xlat
test
jecxz
sti
test
or
pop
pop
inc
loope
out
mov
and
inc
sub
xor
das
inc
fiadds
add
sbb
pop
flds
push
pusha
insb
or
ljmp
adc
loope
sub
push
dec
in
lret
loop
clc
xor
jo
rolb
xor
mov
test
ljmp
fldcw
or
arpl
jmp
mov
pop
push
in
pushf
sub
sub
and
jl
pop
addb
add
adc
add
xor
mov
cmp
popf
add
rorb
jne
sub
jb
test
xor
dec
cmp
push
push
pop
push
lods
jo
lcall
jmp
mov
xor
icebp
rcr
loopne
mov
inc
ret
pop
cs
or
rclb
or
call
pop
sti
fsts
push
sahf
push
mov
push
stc
and
enter
push
js
dec
dec
pop
inc
or
add
inc
cld
push
jle
popf
jp
dec
sub
fnstenv
bound
stc
jg
pop
shlb
add
and
test
sbb
popf
xchg
imul
jno
cs
fistpll
pop
pop
mov
in
imul
add
jp
loopne
je
mov
pop
daa
hlt
mov
and
dec
xchg
iret
xchg
push
movsl
js
cmp
pop
gs
and
pop
push
fcomps
xor
push
inc
addr16
pop
jmp
ret
jns
sub
popf
shll
repz
cld
inc
inc
cltd
adc
add
inc
mov
xchg
pop
insb
ficoms
out
and
cld
pop
mov
xor
pusha
add
inc
or
mov
in
neg
addl
mov
shrl
in
stos
xor
fnstenv
jbe
jmp
iret
mov
mov
loope
jnp
cmp
xor
xorb
sbb
cli
and
or
cmp
add
mov
jmp
out
xchg
adc
pop
jno
pop
jmp
jmp
push
mov
xchg
sub
andl
push
xchg
es
xor
inc
hlt
in
or
call
pop
adc
inc
aam
aam
mov
bound
lret
mov
jle
icebp
pop
cs
mov
pop
cmpsl
push
or
mov
sub
scas
xor
jl
jns
mov
add
add
aas
std
incl
loopne
movsb
mov
push
dec
lds
sub
sbb
stos
xchg
dec
out
inc
mov
cli
adc
push
add
push
nop
jne
nop
sub
movsb
mov
fadds
xor
adc
dec
cwtl
adc
jb
pusha
sub
xchg
testl
mov
add
es
mov
add
and
xor
cmp
and
push
mov
add
xor
sub
cld
icebp
test
pop
lods
jge
push
sub
xchg
mov
sti
mov
push
pop
sar
lahf
lds
fwait
xchg
cs
clc
push
and
or
out
pop
cmpsb
inc
test
or
roll
pop
pushl
ret
pop
sub
les
pop
pop
sub
pop
xchg
push
aaa
or
cmp
lock
shrb
gs
imul
roll
icebp
iret
mov
adc
pushf
je
daa
mov
fwait
inc
add
out
add
ret
fcomip
xchg
mov
fwait
mov
mov
dec
outsl
or
arpl
xchg
iret
xor
mov
pop
inc
ficomps
pop
mov
imul
jge
jecxz
cmp
adc
call
sbb
mov
or
add
movb
std
jl
sub
cld
in
out
mov
sbb
sbb
xchg
add
and
insb
sbb
ljmp
imul
jmp
jae
sbbl
add
imul
inc
xchg
aaa
add
xor
inc
pop
jmp
inc
addl
je
mov
hlt
push
out
repnz
mov
in
xchg
pop
gs
mov
mov
xchg
push
mov
or
add
in
imul
pop
mov
inc
and
cmpsb
xor
dec
and
mov
inc
subb
jmp
push
mov
es
shll
bound
mov
dec
dec
xchg
lods
ss
mov
das
push
inc
pop
aaa
push
xchg
in
lcall
xorb
xorb
and
and
push
mov
jmp
lea
hlt
mov
dec
enter
lods
mov
sbb
jmp
in
sahf
cmp
sarb
mov
adc
mov
je,pn
aad
add
pop
sub
repnz
dec
xchg
or
inc
mov
sbb
stos
mulb
jbe
mov
fdivl
leave
in
ret
sub
rclb
rorl
or
pop
jmp
adc
movups
lods
inc
lahf
mov
jge
jns
push
pop
add
out
cmc
insl
jae
pusha
into
shrl
pusha
jmp
mov
out
sahf
jl
mov
push
adc
loopne
mov
add
inc
orb
test
int3
inc
jge
mov
mov
mov
or
testb
arpl
sbbb
pop
cs
ret
jb
mov
inc
and
xchg
lods
lahf
cli
inc
scas
inc
daa
sahf
out
xchg
add
or
push
daa
cmp
pop
rcll
pop
sub
popl
hlt
mov
xor
out
pusha
es
add
mov
faddp
inc
lret
fidivl
add
insb
stos
lret
sti
add
xchg
cmc
sbb
cmpsb
sbb
roll
cmp
rorl
shrl
lahf
sbb
mov
iret
inc
ret
loope
adc
fiaddl
daa
nop
xor
das
rol
add
imul
jmp
mov
popf
add
das
xor
cmp
push
sub
sub
sbbb
or
lret
cmpsl
and
mov
add
add
push
pop
lahf
call
push
push
and
and
pop
test
push
lret
ror
psubsb
movb
lods
xlat
push
xchg
fsubl
pop
and
pop
leave
sub
cmp
add
dec
add
insb
shr
mov
xchg
sbb
inc
mov
xor
sub
dec
pop
cmp
imul
pop
in
call
das
or
xchg
frstor
sub
sbb
mov
sub
sahf
xlat
or
repnz
xor
pop
mov
pop
in
sbb
jl
fisttpll
inc
pop
xchg
stos
inc
test
idivl
inc
push
lds
clc
push
leave
xchg
and
mov
and
out
adc
cmp
jl,pt
adc
push
sbb
pop
test
cwtl
jl
xchg
shrl
test
mull
mov
roll
adc
rorl
enter
mov
adc
test
dec
xor
push
add
cltd
pop
sub
scas
push
jmp
add
popa
add
sub
std
dec
sbb
add
cmp
cmp
cld
cmp
add
add
ret
adc
shr
xor
fst
push
sbb
pop
adc
add
das
mov
cs
sbb
or
jmp
mov
mov
stos
fldenv
xor
cmp
daa
cld
outsl
push
add
stc
insb
nop
push
add
shl
push
mov
mov
xchg
call
push
and
fldcw
cld
shrl
lds
jl
cmpb
dec
popa
xlat
ljmp
pop
jmp
cmp
aad
movsb
daa
sub
outsb
test
add
pusha
xor
push
mov
mov
and
call
call
pushf
add
cmp
jle
decl
mov
xchg
loopne
lret
pop
fisubs
inc
or
pop
jl
jp
xor
jne
je
jnp
jmp
push
hlt
cmpsb
pusha
and
xchg
pop
xor
inc
movsb
inc
pop
ja
pop
push
fwait
cld
dec
inc
inc
xor
pop
xor
add
adc
mov
in
push
mov
add
push
push
inc
mov
or
push
inc
cmpsl
movb
jne
aad
neg
jmp
jp
mov
or
push
push
xor
stos
loop
pop
jmp
jo
mov
push
pop
repz
data16
and
jg
insb
mov
xor
add
mov
sbb
pop
and
and
je
jbe
js
xor
sahf
les
arpl
add
and
js
int3
xchg
and
mov
pop
push
xor
or
or
je
sub
jle
jae
fisubl
lea
in
cmp
push
ret
pop
xchg
test
lahf
lret
mov
jns
mov
cmpsl
cmp
addr16
jns
mov
lea
cld
mov
push
lds
or
jg
pusha
iret
and
sub
popa
movsb
jmp
or
xchg
jno
sbb
jmp
xchg
pop
add
sbb
add
pusha
es
mov
lret
xor
mov
mov
ret
pop
mov
jb
dec
pop
int3
xlat
repnz
pop
pushf
mov
out
out
adc
and
push
and
pop
push
adc
mov
dec
mov
daa
pop
jge
xchg
xor
lahf
or
pop
add
in
add
scas
idiv
adc
pop
mov
mov
ffreep
inc
sub
pop
or
push
mov
add
daa
jo
pop
sub
mov
outsb
cwtl
ficomps
call
xchg
and
push
jno
gs
dec
push
andb
xchg
xor
push
add
pop
dec
shl
push
adc
mov
stos
sub
dec
and
lods
cmpl
pop
outsb
and
adc
stc
rcrb
lret
jg
sbb
or
pop
shr
andl
inc
push
push
and
cmp
or
fisubs
cli
repz
pop
xor
cmpb
dec
or
inc
add
ljmp
shr
call
incl
loopne
or
and
dec
xor
push
jno
pop
std
popa
in
and
cmp
sub
dec
lea
aam
adcb
ja
aad
inc
sbb
pop
pop
mov
call
adc
mov
push
daa
adc
sub
or
addl
das
unpckhps
inc
pop
add
jns
jmp
ja
jbe
pop
popf
mov
mul
mov
dec
sbb
js
lock
fmuls
shlb
add
sub
jp
adc
sbb
icebp
sbb
aam
or
adc
push
jns
add
xchg
dec
rolb
xchg
add
loopne
bound
notl
roll
add
xchg
mov
and
mov
inc
lahf
leave
cs
jb
xchg
insb
nop
mov
outsl
jl
inc
xchg
inc
cmp
inc
cmp
sub
test
add
mov
nop
xchg
mov
pop
js
xor
jmp
shl
pop
inc
push
or
or
xor
in
out
or
imul
popf
push
fistl
sahf
dec
stos
pop
dec
inc
test
xor
or
dec
xlat
sbb
xchg
lcall
sti
pop
jmp
ret
xor
pop
jmp
jp
repnz
pop
jae
jg
add
stos
lds
cmpb
or
push
xchg
ret
push
jle
xchg
push
mull
cmp
mov
add
inc
aad
mov
pop
cmp
jmp
mov
dec
fstps
jp
inc
push
xchg
cmpsb
add
jmp
popl
add
or
cmp
test
test
jne
cld
and
push
jns
inc
mov
push
iret
pop
mov
das
fcompl
or
pop
movsb
cmp
rolb
jns
filds
mov
mov
dec
enter
neg
pop
pop
mov
dec
cmp
mov
and
shr
pop
jmp
outsl
mov
sbb
idivb
fucompp
fnstenv
addr16
inc
add
pop
ja
rcrl
cmp
jno
out
aam
ret
push
popf
mulb
dec
movb
xor
scas
rol
idivb
adc
pop
or
movsl
pop
pop
pop
xchg
or
lret
inc
icebp
push
mov
or
sbb
lods
sub
dec
jg
jmp
pop
jge
pop
or
lea
lahf
inc
pop
stc
push
aas
clc
das
sbb
rcrl
jno
mov
call
pusha
inc
dec
push
xchg
sub
mov
stc
movb
cmc
xor
or
test
shl
std
repnz
lret
pop
push
lcall
sub
mov
fs
xor
cmp
pop
test
add
mov
inc
mov
testl
pop
jno
mov
pop
mov
mov
mov
mov
subl
test
test
loopne
pop
aaa
out
imul
adc
push
fs
pop
cld
or
dec
pop
jnp
lahf
jbe
jle
jno
mov
add
cltd
jns
sbb
and
cmpsl
pop
dec
jmp
jmp
cltd
or
popa
in
aad
and
and
decl
push
inc
mov
repnz
scas
call
cmp
cmp
aam
inc
pop
bound
cld
cmp
ret
sti
pop
dec
sub
inc
sbb
ds
out
or
popa
push
push
mull
test
pop
stc
dec
and
jnp
push
dec
push
das
stos
test
mov
or
jmp
mov
cmpsb
sub
xchg
lea
loope
push
and
push
add
or
push
mov
in
sbb
pop
mov
das
jmp
dec
push
mov
xor
shl
sti
enter
sub
pop
push
jmp
popf
int3
push
push
dec
pop
stos
xor
ror
pop
sbb
sbb
arpl
call
sahf
aam
jae
addr16
add
push
in
inc
cmp
xchg
scas
cmp
inc
or
ret
pop
sti
or
xor
adc
sub
sbb
and
push
mov
inc
and
loope
cmp
xchg
mov
adc
rclb
push
mov
imul
sarb
xor
cmp
push
pop
jp
pusha
inc
or
dec
lret
xor
dec
sbb
add
jge
xor
pusha
jno
in
fistpll
jae
or
xor
pop
or
sbb
cmp
cld
cmp
inc
jmp
shlb
push
loope
push
add
aad
int
inc
jp
shlb
inc
xor
cmovno
clc
shll
icebp
sub
cmp
and
jl
mov
push
push
push
adc
jbe
push
push
scas
lock
cmp
cli
lret
inc
cmp
out
or
dec
push
jbe
push
sub
mul
jo
loope
add
jp
dec
loop
sahf
mov
fisttpll
lods
jp
stos
vmovq
inc
movsb
test
lds
pop
adc
adc
sub
mov
test
xor
clc
jno
add
xlat
sub
or
shlb
xor
adc
mov
xchg
test
sub
inc
ret
pop
push
mov
adc
push
loope
shrl
jno
push
out
jno
test
fisubrl
and
movsl
stos
sub
push
or
movsl
xchg
adc
sbb
or
dec
into
mov
aaa
jb
adc
xchg
jmp
jne
movsl
push
test
and
ret
or
cmpl
in
xchg
adc
sub
mov
sub
xor
out
mov
test
dec
dec
or
jmp
pop
push
pushl
inc
imul
or
or
cmpsl
insl
lahf
je
pop
ljmp
cli
movsb
pop
cmpb
xchg
mov
popf
xorw
jne
dec
loopne
push
mov
add
cmp
out
mov
iret
pop
pop
push
mov
cmc
or
orb
pop
arpl
adc
mov
fisubrl
mov
add
inc
inc
shll
daa
sub
loop
and
lock
push
mov
push
pop
mov
pop
sbb
jp
lcall
repnz
jb
vpmaxsw
adc
dec
dec
mov
and
sbb
or
pop
cmpsl
cmc
or
or
xchg
jle
jmp
sub
loop
xor
repnz
lds
rclb
in
adc
mov
push
je
mov
sbb
adc
sub
xor
xor
pop
shl
or
pop
in
std
cmp
lcall
xchg
adc
or
cmp
test
loopne
ret
into
out
pop
movsb
jmp
ljmp
mov
rorl
ret
fistpll
pop
push
add
pop
out
mov
sbb
adc
push
add
les
inc
or
rorb
push
jp
pop
ja
adc
test
cwtl
stos
mov
add
shrb
call
adc
scas
and
sbb
cmp
or
rcll
bound
or
sbb
jae
add
mov
add
mov
std
lds
jmp
je
mov
xor
jmp
in
cs
adc
push
neg
pop
inc
mov
mov
or
pop
pop
push
add
jns
push
dec
ds
push
pop
mov
pop
jae
dec
arpl
mov
jo
inc
xchg
xor
or
pop
bound
shr
scas
int3
dec
int
jmp
imul
mov
or
mov
add
ds
mov
filds
inc
jg
test
gs
sub
cwtl
sbbl
int3
inc
and
testb
popa
bound
sbb
mov
push
xchg
sbb
add
je
cs
cli
stos
cmp
push
sub
add
cwtl
cli
fimuls
fsubrs
inc
jo
iret
push
and
and
sub
mov
dec
xchg
addr16
mov
pop
call
enter
xchg
pop
push
pushl
call
inc
pop
mov
imul
jnp
call
push
idivl
lock
loopne
cmp
push
sbbb
add
xchg
out
in
fistl
cmp
cmpsl
incl
sub
rorl
movsl
addr16
and
fptan
and
dec
or
jno
mov
test
cltd
pop
pop
out
sub
jmp
dec
jmp
jns
mov
and
dec
sub
rorl
jbe
dec
movsl
jp
or
pop
je
ret
jb
add
or
sbb
sub
jo
int
xchg
shlw
push
add
les
add
jb
inc
sbb
inc
add
pop
add
icebp
or
pop
mov
popf
sbbb
popa
pop
xor
notl
test
sbb
scas
lea
sub
pusha
push
pop
add
xor
add
sbb
mov
testb
popa
adc
in
dec
cmp
in
sub
mov
add
stc
jmp
jecxz
jnp
leave
pusha
sbb
mov
pop
push
sub
icebp
jns
xor
out
pop
push
dec
daa
cld
sbb
aam
pop
add
jg
aad
cltd
mov
rcrb
dec
mov
mov
or
jmp
icebp
cli
sahf
push
out
loope
push
ds
mov
lcall
jmp
mov
xchg
push
push
movsb
in
fistps
addr16
std
rorl
or
pop
push
sbbb
test
pop
loopne
adc
mov
sub
scas
adc
mov
and
or
jg
push
push
mov
test
adc
ret
ljmp
scas
add
hlt
or
mov
imul
pop
dec
in
push
cld
stos
add
mov
add
bound
or
xchg
inc
xor
xor
in
dec
pop
repz
pop
inc
das
call
repnz
xor
adc
sarl
push
pop
fs
scas
insb
stc
inc
pop
ljmp
add
aaa
jp
xor
cli
add
push
inc
mov
fmul
pop
dec
ljmp
xor
ds
orl
jle
rorl
adc
sub
cmpsb
sub
adc
scas
dec
repnz
test
xchg
xchg
jno
mov
push
ljmp
dec
sub
pop
sbb
mov
mov
sahf
pop
int3
xor
or
outsl
push
cwtl
lock
int
xorb
test
inc
stos
inc
flds
repnz
inc
nop
loope
lret
push
inc
clc
xchg
nop
sbb
push
add
push
mov
cld
lock
rorb
xor
inc
fcomps
in
push
adc
call
jge
aas
or
and
jo
and
les
add
dec
outsb
push
dec
dec
repnz
iret
inc
das
mov
shl
scas
aad
add
imul
jl
ja
jmp
les
incb
jmp
mov
lds
xchg
dec
xchg
xchg
pop
test
adcl
push
and
cltd
gs
sti
jne
pop
dec
jne
jns
pop
cmp
addr16
imul
rcll
stc
mov
mov
enter
push
lcall
push
test
add
xchg
cmp
pop
adc
mov
sbb
gs
lret
rcrb
cmp
sub
lret
rorl
jns
push
xor
adc
inc
xorb
xor
fadds
pop
dec
xor
jg
fs
lahf
pop
dec
das
sbb
fisubrl
pop
jae
adc
loop
jo
fildl
cmp
jecxz
or
test
mov
add
add
es
testl
das
inc
adc
push
add
jae
rcll
jmp
cli
imul
ret
das
add
addr16
jmp
nop
and
dec
jns
fisttps
inc
push
xchg
inc
daa
or
je
daa
jne
sahf
test
int
push
mov
in
push
outsb
pusha
sbbb
add
movsl
add
push
or
jmp
inc
push
inc
xchg
sub
cmp
or
jbe
leave
jge
and
push
jmp
xchg
dec
add
mulb
adc
add
or
push
pop
add
scas
pusha
push
ret
or
pop
pop
sub
pop
mov
int
imul
pop
dec
xchg
pop
mov
sub
pop
rcrb
lds
push
push
jmp
mov
sub
push
or
jmp
or
push
dec
add
fwait
lods
and
ret
fxam
cmp
lea
stc
mov
mov
outsb
rcl
lds
dec
or
mov
xor
popa
inc
out
int3
mov
and
cmp
jp
sbb
jmp
jmp
shlb
push
xchg
les
or
cmc
lea
lock
xchg
dec
xor
dec
pop
in
dec
test
jmp
jbe
shl
inc
inc
jg
pop
sub
inc
enter
movsb
icebp
xor
in
add
int
scas
jne
mov
fcom
clc
dec
aad
or
jo
out
mulb
add
jecxz
add
or
loopne
out
testb
out
outsb
mov
xchg
jle
inc
mov
pushf
cld
mov
jecxz
dec
loop
jne
mov
or
in
dec
jge
sbb
fcoml
pop
in
adc
lret
faddp
jp
xor
cltd
mov
cmp
mov
lock
inc
addb
push
leave
add
and
pusha
push
or
push
jecxz
rol
jle
gs
jno
push
sub
lahf
pop
cmpsl
jo
mov
cmpsb
loopne
add
push
mov
mov
stos
shlb
push
cs
cmp
dec
adc
mov
and
cmpsl
cmpl
sbb
out
out
xchg
inc
lods
lds
mov
lret
sti
mov
xchg
xor
jb
movlps
mov
cmpsb
add
inc
push
out
xchg
pop
push
pop
stos
and
push
xor
sub
repz
subl
adc
mov
cmp
ret
sub
cwtl
xchg
or
scas
in
push
add
pop
stc
push
cmpl
in
sub
dec
push
add
mov
fistpl
push
sbb
add
cmp
adc
jl
incl
imul
je
xor
push
xor
cmp
jecxz
mov
dec
in
hlt
daa
int3
dec
adc
xchg
fcomps
dec
add
jge
add
out
add
xchg
pop
cmp
vpsllq
jge
dec
xor
sub
mov
pop
enter
lahf
dec
jae
int3
ret
jg
jp
ljmp
loope
jp
fdivs
and
orl
lret
ljmp
icebp
ret
es
cmp
insb
adc
xor
add
xchg
xchg
pop
jecxz
mov
inc
loopne
loope
mov
sahf
xor
adc
xor
adcl
cli
jo
mov
xor
xlat
add
push
mov
sub
ja
mov
inc
es
mov
int3
cwtl
push
add
cwtl
inc
xor
and
rorb
hlt
sbb
jns
sbb
sub
jmp
incl
popa
and
push
data16
xorb
jmp
mov
das
shlb
jne
call
adc
mov
imull
mov
dec
test
rclb
inc
pop
pop
pop
push
push
dec
data16
clc
xchg
push
jmp
cmpsl
das
pop
sahf
cwtl
sub
mov
pop
push
in
das
rolb
cmp
iret
push
faddl
sbb
nop
xchg
ljmp
mov
jno
leave
jo
imul
cltd
jmp
mov
idiv
adc
cmp
pop
dec
repz
clc
xor
imul
pop
xor
adc
inc
or
or
push
es
out
mov
pop
dec
pusha
cltd
add
outsl
rorl
loope
bound
sbb
and
int
adc
add
fiadds
dec
in
ret
or
add
fadds
lea
pop
push
jg
enter
sbb
out
pusha
xchg
int3
pop
jnp
xor
sub
in
ja
pop
add
or
das
add
jmp
push
mov
mov
and
sub
or
mov
inc
notb
imul
adc
ja
scas
add
inc
and
imull
adc
inc
std
or
test
stc
xchg
rolb
lds
adc
movb
pop
orb
mov
pushf
jbe
push
jo
ja
cwtl
mov
notl
pushf
push
or
push
inc
or
add
outsb
dec
add
sti
add
lds
pop
sub
jmp
imul
inc
or
in
dec
fsqrt
and
jmp
in
jmp
in
inc
adcl
mov
jmp
xchg
jge
xchg
cmpsb
cltd
or
mov
dec
jge
out
imul
cmp
add
sub
and
jb
or
clc
mov
and
push
add
sub
inc
aad
add
mov
ss
test
addr16
xor
inc
cwtl
push
adc
inc
cmp
adc
add
or
repz
lret
and
xchg
test
jae
or
push
faddl
pop
ds
into
add
jge
stos
xor
jmp
mov
cli
sbb
loopne
inc
or
cmpb
outsb
jnp
cli
nop
arpl
ljmp
movsl
das
jno
js
lahf
negb
add
dec
std
mov
jg
mov
mov
dec
dec
dec
push
jne
outsb
outsl
mov
mov
repnz
push
sbb
rcl
xor
idivb
jb
inc
out
iret
add
movsl
mov
popf
loopne
aad
daa
pop
pop
mov
push
arpl
dec
pushf
xor
fbstp
jno
or
inc
sarb
movsl
fidivrl
cmp
fisubl
xor
sbb
inc
or
pop
jmp
dec
add
fs
sub
orb
aam
mov
mov
enter
nop
aaa
sbb
das
xchg
lods
inc
cwtl
push
push
lcall
rclb
fbld
jo
loopne
sahf
cwtl
cmpsb
aad
pop
push
push
popf
adc
add
enter
mov
shrl
psrlq
mov
rolb
mov
mov
and
or
xchg
cli
repnz
pop
sbb
shrb
mov
and
rolb
shll
scas
cmp
rorb
leave
or
or
rcrb
sub
cwtl
mov
mov
cs
push
jg
jl
add
mov
adc
sub
sub
enter
adc
movsb
sbb
cwtl
in
iret
xchg
mov
mov
scas
gs
into
js
mov
sub
aad
fwait
in
out
mov
insb
push
xchg
sub
out
add
enter
adc
lret
testb
sub
pop
mov
pop
and
and
lds
fstl
inc
push
push
mov
xchg
pop
movsl
daa
push
jle
loop
or
popf
add
ljmp
repnz
sub
mov
hlt
bound
pop
add
aam
pusha
addl
pop
xchg
add
sarb
add
add
dec
pop
bnd
push
jmp
cmc
adc
dec
xor
inc
int
cmp
xchg
lret
jb
jg
outsb
dec
outsl
test
sub
clc
jb
dec
clc
pop
push
loop
push
in
sbb
and
jmp
sub
pushf
cli
popa
or
cmp
dec
pop
and
lds
dec
imul
scas
movl
cmp
vaddsubpd
in
pop
or
rcrl
les
add
jmp
dec
or
mov
ret
ret
pop
push
xchg
roll
sub
sub
jne
orb
xor
push
jnp
mov
adc
fstpl
xchg
lock
fldenv
cmp
movsb
pop
addr16
pop
jno
das
pop
add
rolb
xchg
xchg
jp
or
mov
sbb
mov
mov
and
out
adc
out
inc
in
leave
cmpsl
ret
fs
ljmp
mov
xorb
pusha
popf
sbbl
sbb
push
hlt
leave
lock
addb
dec
inc
dec
daa
pop
imul
sub
or
not
mov
pop
xchg
bound
or
inc
mov
lock
xchg
mov
dec
dec
ret
add
mov
jmp
or
cmp
xchg
insl
loopne
jmp
xchg
cli
inc
sbb
pusha
xor
push
add
sub
loopne
lret
pusha
jnp
loopne
mov
xchg
sbb
ss
add
in
ds
add
inc
lret
enter
mov
dec
jge
mov
xchg
add
sub
cmp
dec
inc
adc
inc
push
pop
sub
stos
das
mov
int3
popa
outsb
pop
jg
adc
pop
repz
cltd
notl
adc
popa
call
add
pop
je
mov
jns
or
jno
inc
dec
test
mov
stos
testl
xor
fldenv
cs
sub
imul
mov
in
lock
and
cmp
rorb
insb
les
pop
negl
sti
inc
push
jne
cli
fdivrl
ret
dec
in
outsl
pop
xchg
stos
sub
hlt
addb
or
sub
fmulp
add
faddp
xlat
or
out
mov
call
shrb
outsl
sbb
or
pop
stc
jbe
mov
push
cmp
jle
es
add
imul
incb
pop
or
sbb
mov
push
pop
xchg
addr16
stos
popa
in
daa
adc
or
add
jle
imul
jmp
leave
adc
inc
pop
jecxz
shl
outsl
ja
xchg
test
pop
push
mov
testb
mov
cmp
lds
push
push
jmp
popa
jl
lahf
push
cmp
hlt
xor
call
dec
rcr
pusha
sub
or
and
mov
fiadds
pop
mov
mov
adcl
push
jle
add
mov
insl
sub
andb
add
pop
cmpsb
xchg
in
xor
cltd
rolb
or
cmp
mov
cmp
pusha
sub
push
push
xchg
insl
push
adc
mov
lods
pop
mov
jns
pop
icebp
pop
sub
xlat
ret
xlat
fiaddl
pop
pop
cmpsb
cmp
fsub
or
mov
jno
call
into
sbb
cs
jecxz
std
nop
fs
aaa
and
add
push
sbb
pop
dec
add
pop
mov
cmp
hlt
fildll
int
sub
dec
outsb
push
in
pop
add
ljmp
fisttps
sub
jge
dec
daa
jns
gs
add
not
rorl
in
jmp
aam
inc
mov
sub
stc
sbb
and
mov
cs
pop
mov
cmpsl
sbbl
jl
call
bound
xchg
out
inc
lods
enter
sbb
add
nop
or
ja
aad
or
or
mov
or
bound
test
xchg
dec
push
sub
fcmovnb
movb
jl
jbe
rcr
or
sub
mov
xor
push
in
cmpsl
pusha
movsl
cmp
dec
jae
pusha
outsb
or
jbe
or
mov
sbb
add
xor
out
les
shr
mov
sti
loop
stos
orb
scas
sub
fnstsw
js
jmp
das
push
jge
and
adc
sub
jne
ret
mov
push
xchg
les
or
ficoms
dec
mov
inc
adc
push
xchg
pop
inc
inc
xchg
and
in
adc
pop
mov
and
mov
sub
sbb
addl
and
adc
lahf
scas
adc
clc
test
add
sbb
pop
mov
mov
icebp
cmp
inc
call
fists
xchg
scas
decb
and
dec
jo
imul
inc
cld
xor
pop
inc
in
aaa
dec
rorb
in
inc
mov
mov
mov
jg
pop
js
and
or
cs
movsl
mov
lret
adc
jecxz
mov
push
cmp
adc
or
adc
jecxz
lods
inc
mov
dec
les
add
and
mov
push
push
and
popf
movsl
fildll
shlb
jl
daa
cmpb
and
mov
clc
sbb
or
push
push
xchg
xchg
mov
sub
push
add
sub
pop
neg
shr
add
cli
pop
lods
inc
mov
xchg
pop
inc
icebp
or
mov
add
push
fistps
addr16
cmp
fs
jo
xchg
push
add
jge
add
mov
lahf
enter
mov
popf
push
aaa
push
cld
mov
sub
mov
pop
insb
push
das
flds
loope
xchg
jge
aas
jmp
inc
imul
sbb
xchg
pusha
sbb
inc
pop
rcr
jecxz
addb
jbe
shl
inc
mov
xchg
out
stc
flds
inc
stos
cld
push
loop
push
push
lcall
sbb
jmp
inc
adc
pop
es
inc
pop
sub
xor
inc
repz
xor
add
inc
bnd
or
cmc
push
in
inc
int
in
cmp
jmp
jg
movsb
xchg
add
push
mov
loopne
jmp
pop
dec
mov
lret
sahf
push
out
outsl
jl
xor
pop
xlat
dec
pop
xlat
or
jmp
cld
and
in
div
add
ljmp
pop
jne
jle
mov
dec
mov
enter
pop
scas
lock
in
shll
cmp
imul
mov
lret
sub
jb
cmp
cmpb
fnsave
jg
leave
mov
fstps
jmp
test
inc
scas
test
mov
mov
dec
mov
pop
or
sbb
pop
inc
add
insl
inc
add
pop
jns
scas
push
jbe
mov
jmp
dec
loopne
jmp
das
pop
hlt
imul
stos
fildl
xor
adc
add
dec
and
nop
jno
lock
movsb
xor
adc
mov
insl
sbb
lret
gs
cmpsl
ret
pop
inc
push
bswap
out
push
add
xor
int3
inc
popf
dec
sarb
clc
sub
mov
push
xchg
aad
cmovp
cwtl
hlt
orb
mov
adc
sub
mov
pop
idiv
arpl
jns
push
xor
pop
adc
mov
lock
jmp
xchg
push
rcr
jmp
repnz
rol
push
mov
inc
jmp
sub
mov
in
sub
mov
insb
inc
or
jne
adcb
es
or
jne
nop
sub
das
or
sub
repz
xor
add
loopne
pop
jns
mov
and
push
adc
mov
push
add
and
rorl
add
inc
pop
xchg
jmp
xchg
and
popf
or
repnz
leave
pop
push
nop
notb
sbb
mov
jns
adc
gs
pop
pop
push
ret
jl
jb
pop
dec
fcmovnbe
mov
or
cmp
cmc
pop
lret
fstps
cmp
sarb
xchg
mov
lahf
jmp
and
mov
cmp
mov
adc
leave
cmp
push
jae
pop
loopne
sub
insb
ds
scas
add
mov
dec
or
ficompl
pop
pop
add
rorl
dec
mov
push
mov
xor
dec
jmp
xor
lret
mov
shrb
movsl
mov
push
clc
lock
hlt
pop
decb
mov
fcmovbe
jp
maskmovq
imull
adc
mov
mov
fmuls
shrl
jge
jae
ljmp
sbb
dec
stos
mov
xchg
cwtl
mov
mov
inc
pop
pop
push
jae
sub
add
rorl
pop
pop
xor
aad
mov
dec
imul
fucomip
stc
mov
ret
fnstsw
jmp
rcll
jl
and
adc
inc
mov
lcall
fistpll
sub
loopne
sub
addr16
sub
imul
shlb
dec
dec
aam
pop
dec
pop
jecxz
lock
int
add
pop
add
sub
imul
mov
push
imul
popf
dec
xor
inc
imul
pop
xchg
orb
pop
gs
into
or
mov
pushf
dec
mov
adc
ffree
mov
cld
mov
sahf
mov
cmp
ds
mov
jmp
js
xchg
jbe
call
cs
jmp
icebp
push
bound
jge
jb
and
std
and
xchg
add
inc
lahf
jmp
repnz
and
psubd
and
dec
mov
sub
testl
push
pop
pop
sbb
push
out
and
sub
adc
mov
and
popf
sbb
jo
sbb
ja
add
mov
je
and
mov
rcr
std
push
mov
pop
mulb
jmp
jmp
adc
push
cmp
ret
push
cmpb
cmp
rcrb
ret
ljmp
ljmp
xor
inc
addl
or
enter
shr
hlt
push
dec
mov
sbb
sub
or
sbb
shrb
cltd
cltd
sub
pop
push
jne
sbb
shl
push
scas
cmp
dec
scas
fneni(8087
pop
add
cmc
and
movsl
rorb
shl
push
std
and
ja
mov
ljmp
and
leave
jns
and
push
popf
xor
jmp
push
popf
loop
adc
inc
test
xor
test
sbb
out
xchg
xchg
jne
adc
cmp
lods
hlt
inc
or
xchg
add
shlb
std
fs
bound
mov
adc
pop
rclb
xchg
aam
and
pop
pop
push
xor
mov
pop
neg
orb
shl
sbb
adc
xor
or
fsub
ret
aas
inc
packuswb
insb
dec
mov
and
lods
sub
fdivs
test
popf
or
fildl
or
les
push
add
adc
mov
sbb
ja
push
mov
xchg
cld
test
cmp
jle
das
xor
lods
inc
lret
outsb
in
push
cmpsb
repz
add
out
mov
push
movsb
mov
and
pop
jmp
scas
imul
fs
in
test
into
lock
daa
or
jns
and
arpl
mov
jg
adc
push
lods
adc
mov
mov
repz
push
jno
sbbb
je
mov
in
movsl
jge
lcall
dec
daa
jno
sbbb
insl
inc
loop
mov
pop
add
mov
sub
mov
push
mov
imul
jbe
xor
dec
mov
push
outsb
jecxz,pt
adc
add
and
jmp
shrb
pusha
fdivs
jo
clc
dec
ljmp
stc
jmp
not
popf
pop
sub
sahf
sub
lret
pop
push
push
popa
or
xchg
sub
cmp
jno
jbe
mov
and
ret
ds
xchg
dec
mov
rcrl
adc
push
mov
mulb
mov
jl
rclb
outsb
and
sbb
ret
ja
inc
add
pop
icebp
dec
add
push
mov
cmc
mov
xor
cld
int
lcall
out
and
ja
lret
leave
dec
xchg
push
lret
mov
mov
ret
daa
je
das
jl
add
jmp
mov
pop
push
mov
jl
adc
and
int3
add
push
jmp
sbb
repz
xor
ret
mov
and
shlb
jge
ror
into
inc
adc
mov
dec
sbb
pop
test
lahf
std
xchg
push
stos
repz
xchg
fsubp
inc
ret
xchg
int
or
sbb
inc
ret
and
mov
sbb
jp
pop
repz
out
sar
int3
mov
into
stos
and
stos
mov
aam
cmp
or
leave
inc
cld
cmp
out
pop
mov
shr
dec
xchg
add
sub
mov
pop
in
mov
push
jo
out
adc
mov
lods
rolb
in
inc
jle
or
mov
pop
cli
pop
sbb
cli
loop
adc
sub
addl
xchg
xchg
js
xchg
repz
mov
sub
sub
push
pop
imul
pop
pop
xlat
dec
push
sti
cmp
insl
roll
sub
rorl
mov
pop
pop
xchg
jecxz
fnstenv
fisttpll
xor
and
scas
adc
lock
xor
pop
decb
cmp
add
add
xlat
mov
xchg
pusha
je
inc
push
pop
pop
not
shr
aaa
out
add
sub
lock
push
mov
adc
mov
fsts
push
mov
jge
xchg
and
loopne
or
jb
mov
dec
mov
push
cmc
mov
je
aam
adc
jle
lret
xor
icebp
jp
mov
push
popf
dec
inc
dec
or
jae
sub
and
addl
push
push
push
movsl
pop
adc
pusha
or
mov
push
adc
out
add
jnp
dec
imul
inc
push
xchg
inc
add
cmp
add
hlt
jns
in
aaa
adc
jmp
mov
mov
mov
xor
mov
mov
movl
out
xor
mov
mov
cld
fucomip
jae
pop
jbe
lcall
lcall
jecxz
pop
dec
xor
roll
lahf
fsubrl
add
data16
cs
mov
or
add
ja
sahf
ret
lods
pop
and
mov
mov
hlt
sti
add
push
jmp
loop
mov
vmwrite
gs
bound
inc
hlt
mov
dec
push
sub
fnstcw
aad
ficoml
nop
jge
lret
mov
xorl
mov
mov
out
sbb
les
fwait
mov
bound
test
jmp
or
adc
pop
out
test
loop
sub
xor
and
push
jmp
jno
cmpsl
push
adc
dec
in
xor
mov
push
mov
hlt
js
adc
mov
in
sbb
pop
mov
inc
daa
pop
fs
and
pop
scas
jl
test
cmc
sbb
mov
jbe
rcrl
and
pop
push
not
push
mov
inc
divw
sti
in
add
pop
mov
sahf
dec
dec
and
mov
push
add
jmp
xchg
ljmp
push
push
mov
sbbl
cmp
sub
jge
int3
pop
popl
mov
cs
mov
sub
stos
jecxz
insb
xchg
daa
mov
fstps
jne
xchg
jmp
sbb
jmp
sub
xlat
cmp
cmp
inc
jnp
sub
jmp
stos
push
add
pop
ljmp
bound
xchg
or
xor
sti
push
pop
adc
and
ss
lds
aam
add
sub
push
pop
push
dec
jb
inc
mov
mov
repz
orl
test
outsl
subl
jmp
ds
adc
xorl
sbb
sub
scas
adc
int3
xchg
std
loop
push
imul
cmpb
shl
lods
inc
cmpl
pop
into
jb
sub
sub
add
adc
pusha
divl
inc
sub
add
jb
xchg
daa
pusha
cld
lods
cmp
mov
pop
shrb
push
push
ss
sbb
jmp
fstpl
xor
pop
cmp
xor
push
or
sahf
movsl
das
cmp
daa
das
dec
push
inc
jb
dec
jmp
test
adc
push
jl
inc
push
push
aaa
lret
or
sbb
cmp
leave
dec
inc
stc
inc
dec
icebp
push
addb
jmp
xor
insb
inc
add
mov
adc
neg
add
or
sbb
into
add
addr16
mov
jmp
lds
push
adc
call
adcl
jo
cmp
jg
out
lret
arpl
jo
sub
movsb
or
add
pop
and
out
sbb
or
out
jg
sbb
in
enter
mov
jo
cmp
scas
lret
pop
pop
insl
orl
mov
hlt
mov
mov
push
outsl
pop
sub
mov
dec
mov
je
repnz
add
outsl
mov
andb
out
sub
jmp
push
popf
aad
inc
pop
out
jmp
int
outsb
mov
xchg
in
movsl
mov
pop
pop
repnz
or
ret
xchg
fwait
jle
mov
fstl
sbb
js
jbe
push
nop
push
jmp
in
add
add
pop
xorb
add
pusha
dec
sti
pop
or
and
jmp
and
and
jns
cld
fldenv
dec
jno
cmpsl
xlat
push
shr
adc
or
es
repz
jle
xor
bound
push
mov
inc
cmp
dec
mov
rclb
or
movsl
ja
sub
arpl
mov
inc
xchg
clc
or
cs
inc
or
outsb
les
or
add
push
add
jmp
movsb
fsubl
cli
jle
cli
jge
pop
int3
lock
push
out
jnp
push
hlt
jo
add
pop
scas
mov
add
les
dec
aaa
pop
push
and
orl
add
dec
test
roll
xor
sti
cmpsb
xchg
cmp
popf
add
mov
mov
js
pop
jg
icebp
push
dec
adc
mov
fcomps
xlat
jle
cmpsl
add
xchg
gs
test
dec
push
jl
push
mov
ret
jecxz
dec
inc
ljmp
pop
mov
push
pop
fadds
xchg
jbe
lret
add
jl
adc
dec
ja
popa
adc
dec
ljmp
sbb
or
sti
add
add
xchg
sarl
ret
ja
inc
xor
jp
adc
mov
push
les
add
pop
lret
add
pop
stos
outsl
jne
xchg
or
push
adc
jmp
ret
icebp
jge
mov
xchg
loope,pn
das
mov
push
mov
lcall
cs
sub
add
push
push
mov
mov
pop
pop
subb
mov
xchg
das
enter
dec
loop
add
sahf
ss
lock
hlt
mov
jns
push
aad
pop
cmpsb
xor
mov
les
aaa
push
mov
cmp
pop
xchg
notl
mov
shlb
sbb
sub
fldl
int
inc
and
jbe
mov
fcmovb
jo
inc
or
mov
jnp
xor
int
jno
mov
stc
outsl
mov
jg
sub
rolb
pop
cmpsb
mov
push
xchg
add
xor
xchg
inc
mov
push
xor
stc
cmp
mov
pop
test
mov
or
xchg
sub
mov
and
aas
lret
sahf
push
fwait
adc
dec
or
add
xchg
inc
add
mov
mov
push
cmp
ret
sbb
nop
dec
daa
adc
icebp
cmpsl
adcb
cmp
in
push
or
loope
inc
pop
mov
jno
push
int3
sbb
adc
mov
mov
or
rcll
ret
jmp
lahf
lock
out
pop
imul
push
add
sbb
mov
mov
pop
mov
dec
outsb
push
dec
mov
leave
rcrb
jb
aaa
das
sub
lds
fs
mov
pusha
push
out
dec
sbb
pop
pop
mov
jns
out
mov
daa
outsb
add
mov
data16
sub
jg
adc
cmp
sub
fyl2x
fldt
pop
xchg
out
xor
ja
mov
sub
or
shll
sub
jmp
pop
fcmovbe
mov
mov
push
adc
push
or
cmc
mov
mov
xchg
icebp
adc
das
fs
add
add
push
push
hlt
cmpsl
mov
mov
cmpsl
cmpsb
fwait
icebp
movl
xor
movsb
pcmpgtb
pusha
pop
cld
hlt
xor
lret
jp
leave
test
push
cs
lahf
enter
addl
add
mov
adc
push
popa
movsl
std
push
cwtl
or
jp
push
repnz
mov
stos
pushf
shr
xor
sbb
push
fsubr
jmp
mov
aas
in
ljmp
into
movsb
inc
sub
or
sub
add
hlt
pop
push
push
int
leave
cs
hlt
in
jmp
out
popf
in
xchg
cwtl
pop
daa
mov
stc
sbb
add
add
jae
pop
mov
inc
nop
xor
jns
pop
jmp
imul
test
adc
push
push
push
jmp
ret
insl
sarl
mov
dec
in
pop
imull
add
sub
sub
hlt
and
addr16
push
xlat
or
cmp
imulb
lahf
push
and
add
cltd
stc
out
or
jne
scas
xlat
ja
rcrl
lretw
pop
or
jb
mov
xor
xlat
jne
clc
sub
outsb
int
movsl
mov
dec
repz
xor
mov
iret
in
in
jae
dec
jmp
scas
mov
shlb
inc
idivl
mov
aas
mov
sbb
mov
loopne
or
adc
mov
add
lods
xchg
hlt
out
adc
jge
jne
loop
pop
jmp
ljmp
clc
or
inc
sub
pop
pop
ficoms
inc
jno
push
jg
addr16
popa
bound
add
or
sub
pop
cmpsb
and
ret
push
test
dec
ja
dec
add
and
adc
dec
mov
push
or
push
jmp
push
cltd
iret
xchg
lret
iret
mov
and
jb
mov
lods
pusha
xlat
nop
divps
lock
xchg
xchg
popa
sbbb
popf
in
loopne
sub
push
out
xor
and
xchg
sub
roll
push
insb
shlb
ss
or
jne
cmc
adc
xchg
pop
in
jbe
insl
mov
leave
cld
pop
in
icebp
and
ja
std
xchg
into
mov
in
jp
dec
pop
sub
push
mov
dec
mov
push
icebp
and
imul
jg
sbb
cli
jb
repz
or
and
add
and
fsubs
xchg
pop
arpl
add
ljmp
mov
mov
mov
push
add
jo
jp
push
adc
mov
or
inc
orb
add
in
xor
cmp
xchg
push
xchg
icebp
add
enter
adc
pop
insb
fiadds
sub
sub
push
mov
push
pop
mov
or
xchg
not
sbbb
sub
and
pop
jmp
add
adc
fs
sub
xor
shlb
inc
jae
jmp
push
mov
loopne
in
and
popf
xorb
add
or
mov
push
fsubl
pop
pop
mov
jb
in
and
add
inc
xchg
or
sbb
in
mov
add
mov
iret
bound
mov
jmp
aam
mov
idivb
push
cmp
sbb
push
mov
ljmp
adc
or
mov
sarl
pop
jbe
mov
icebp
cwtl
sub
outsl
push
rolb
fs
adc
inc
scas
bound
jmp
pop
rcr
in
lods
cld
inc
pusha
sbb
mov
push
aas
inc
jnp
mov
test
add
push
popf
jp
add
call
mul
in
mov
fnstsw
test
inc
sub
pop
cmpl
add
jl
fs
jmp
loopne
mov
cwtl
scas
xlat
or
test
mov
js
mov
adc
mov
add
xchg
repz
daa
scas
das
clc
cli
out
shll
and
and
jbe
ds
arpl
es
sub
idiv
sub
hlt
ljmp
shr
inc
xor
xchg
pop
dec
jno
test
daa
pop
fldcw
inc
jmp
push
adc
or
inc
les
adc
sub
xchg
fcmovnu
pop
xor
fs
ljmp
mov
pop
mov
je
mov
jmp
xchg
or
subb
in
and
push
jg
int3
je
or
jmp
mov
stc
lcall
pop
push
arpl
movsb
sti
cmpsb
mov
jp
or
cmp
faddl
inc
jecxz
push
dec
or
cwtl
gs
andb
xchg
xchg
sarb
int3
push
pop
ret
add
fsub
loopne
cmp
dec
dec
mov
or
dec
dec
test
sarl
xor
negl
pop
xchg
not
xor
ds
clc
inc
and
xlat
xchg
lods
cwtl
clc
add
test
or
test
sar
adc
add
loop
mov
inc
adc
jge
orl
fnsave
ljmp
daa
cli
lock
dec
lods
mov
les
movsb
add
push
jb
incl
out
sbb
xor
fidivrs
push
push
cmp
sbb
sbb
pusha
cs
push
sub
lret
pop
pusha
pop
pop
sub
lock
loope
mov
jl
sbb
aas
lea
inc
inc
push
sub
cmp
cmp
orl
or
xor
cmp
add
inc
jb
add
enter
outsb
imul
in
push
pop
js
imul
mov
mov
mov
shll
adc
lods
imul
in
imul
pusha
push
std
push
sub
sbb
pop
xchg
testb
sub
push
fisubrs
mov
inc
mov
and
xor
sub
repz
xor
and
stos
pop
dec
pop
adc
je
and
jmp
cmpsl
push
dec
hlt
mov
shrb
outsl
ljmp
aam
add
or
jp
nop
into
mov
nop
stos
mov
and
das
mov
xchg
inc
nop
out
ja
addb
cmp
xchg
xor
test
data16
jno
xor
mov
push
aas
sahf
or
outsl
xchg
push
add
jmp
scas
roll
jns,pt
add
das
inc
jg
or
xchg
dec
and
inc
ljmp
push
pop
jl
mov
push
fs
mov
pop
mov
sub
add
inc
jg
mov
sbbb
xor
out
push
cmp
lods
xchg
cld
dec
dec
mov
dec
push
cmp
in
push
jae
sbbl
in
push
pop
pop
mov
in
add
cmpb
in
repz
sub
fs
and
or
lret
inc
xlat
nop
mov
pushf
push
jmp
xchg
and
xchg
or
movl
jb
and
pop
subb
xchg
lret
push
or
jle
roll
out
pop
inc
pop
imul
out
inc
js
rol
leave
leave
pop
sar
jb
push
xor
lds
cmp
rcrl
or
jnp
push
dec
dec
jmp
or
adc
mov
pusha
out
adc
or
mov
sub
xchg
cli
in
pushf
add
pop
xchg
imul
and
sub
mov
es
inc
push
call
lds
or
jmp
xor
imul
pop
out
dec
jno
xor
loope
or
jmp
lods
xlat
loopne
fiaddl
jle
cmp
add
add
bound
push
push
test
inc
das
mov
notl
cmp
jns
and
pop
ja
sub
xor
or
cmpsl
orb
sbb
mov
aas
cmp
add
in
sub
cmp
jmp
inc
sbb
aam
or
enter
mov
cmp
cmp
cmpsl
mov
int3
dec
pop
mov
jnp
jmp
adc
xchg
scas
and
or
aam
jmp
test
mov
dec
or
jo
add
mov
jle
scas
pop
add
sarb
or
xlat
pop
push
imul
pop
scas
add
mov
or
add
stos
inc
sti
or
jecxz
fs
subb
push
mov
addl
pusha
adc
xor
cmp
mov
insl
push
ret
dec
push
out
cmp
mov
ja
adc
fcoml
push
outsb
daa
enter
push
or
inc
test
sub
dec
je
stc
sbb
and
dec
inc
jns
mov
push
or
push
bnd
out
idivb
fwait
jl
add
inc
adc
shr
cltd
dec
pop
int
outsl
adc
sub
lods
jo
into
pusha
test
rorb
mov
cmpb
sbb
movsl
enter
and
scas
icebp
mov
rorb
jb
dec
icebp
mov
cmpb
inc
add
xlat
stc
mov
xor
mov
out
gs
mov
mov
pop
mov
adc
stos
add
or
dec
cli
ret
arpl
cmp
push
aas
cmc
pop
sub
xor
push
and
push
sub
fwait
mov
pop
pop
jo
div
cmp
ror
cmpsb
test
and
sbb
inc
mov
or
dec
mov
pop
xor
push
sub
gs
roll
fs
pop
add
cmp
imul
or
out
clc
in
add
pop
aaa
jmp
das
test
and
out
je
jmp
add
bound
sbb
push
gs
pop
mov
fldl2t
daa
xor
jge
scas
add
and
sub
jmp
jmp
mov
stos
mov
jns
pop
push
es
lret
lret
jno
push
and
or
daa
stos
cmpb
sub
imul
inc
ja
cmpsl
cmp
pop
pop
pop
pop
scas
lret
mov
in
dec
icebp
jmp
js
pop
mov
ss
inc
mov
ret
and
jmp
out
fildll
xchg
jl
xor
scas
or
or
jmp
in
loop
dec
jl
mov
jmp
aam
pop
jns
sahf
jbe
aaa
xchg
mov
push
xchg
or
outsb
adc
mov
dec
cmp
sub
push
cmp
not
dec
push
hlt
lea
sub
push
and
pop
lcall
and
xor
test
test
cmpl
jo
push
lret
jmp
inc
mov
outsl
popa
jmp
xchg
xchg
repz
daa
mov
push
push
push
xchg
jb
add
outsb
mov
sbb
mov
pop
mov
xchg
fcoms
pop
out
out
popf
fisubl
cwtl
aaa
dec
jae
mov
aaa
pop
test
repz
mov
xchg
and
mov
cmpsb
test
sub
or
jle
inc
dec
adc
xor
mov
push
push
pop
inc
and
sbb
icebp
adc
popf
call
dec
sbb
pop
aas
push
mov
dec
lret
jo
jae
xchg
pop
shrl
pop
divl
or
out
push
or
call
decb
sub
push
pop
hlt
call
cli
leave
push
inc
inc
pop
sarl
mov
jns
or
pop
xchg
xor
jbe
daa
inc
xor
sarb
and
xor
push
mov
push
outsl
add
out
jle
je
sbb
adc
pop
mov
mov
push
or
addr16
das
xchg
mov
dec
xchg
pop
adc
push
and
imul
dec
mov
jg
imul
popa
shl
je
call
mov
test
fs
jmp
pop
dec
outsl
cmpb
jmp
hlt
pop
xor
rolb
push
shl
push
dec
cmp
adc
cmp
pop
insb
adc
adc
test
mov
aaa
lcall
ret
rcll
or
inc
orb
int
in
add
in
neg
enter
loopne
add
jle
orb
imul
pop
and
andb
add
sub
push
sub
neg
in
pop
rorl
popa
mov
out
mov
cmp
mov
gs
and
aas
sahf
loop
out
das
pusha
cltd
pop
outsl
cs
adc
jbe
call
inc
repz
pop
dec
push
add
push
jmp
pop
mov
mov
sahf
xchg
fwait
lods
std
push
jne
xorb
shlb
dec
xorb
sbb
imul
push
inc
dec
pop
jmp
push
mov
in
jne
or
pop
push
repz
mull
push
xchg
or
ret
pop
andb
pop
dec
out
das
fsubrs
insb
or
test
in
push
adc
out
or
es
sub
cmpsl
push
sub
sub
inc
sahf
cmpsb
inc
adc
sub
sti
aam
rcrb
inc
mov
sub
dec
loopne
add
jmp
jmp
popf
jb
dec
push
rclb
xchg
fstpl
lds
xchg
inc
shl
add
enter
cltd
ljmp
push
mov
imulb
lahf
cld
xor
je
inc
int
add
pop
mov
shr
inc
stos
mov
xorl
stc
or
js
ss
lock
inc
sbb
sti
leave
bswap
jmp
jo
pop
cmpsb
lahf
in
cwtl
mov
arpl
jl
mov
lret
add
mov
add
rcr
les
call
push
das
data16
nop
aam
inc
and
jge
or
xlat
popf
rolb
pop
jecxz
std
fcmovnb
push
push
push
push
pop
in
add
xchg
fmuls
sbb
iret
or
outsb
scas
je
jb
add
dec
fdivr
mov
hlt
dec
adc
sub
push
push
in
or
push
sub
xor
xor
jmp
or
insb
setb
dec
cmp
sub
dec
divb
push
rclb
jmp
xor
nop
faddp
out
gs
xor
cwtl
xchg
cmp
and
add
cmc
in
mov
xor
or
jg
inc
xor
pop
or
ret
push
adc
sbb
sarb
daa
aam
iret
mov
into
mov
pop
sub
ret
idivl
or
cmp
inc
jae
or
sub
xor
mov
mov
or
sub
subb
fstps
add
add
cmpl
jle
add
aaa
subb
ss
outsl
mov
outsl
inc
dec
in
xchg
push
xchg
push
mov
jne
xor
ret
inc
or
bound
jge
or
sub
cmp
sub
pop
aad
jle
push
dec
xchg
pusha
or
jmp
out
xor
dec
pop
dec
testl
rcrb
pop
sub
sub
cmp
insl
inc
les
mov
xchg
and
or
push
shll
cmc
sub
jle
inc
inc
cmpsl
out
mov
repz
shr
xchg
pop
push
pop
cmp
ror
sti
sub
cltd
sbb
fdiv
int3
jmp
repnz
rcr
jl
or
push
jns
add
mov
inc
pop
fildl
subb
jnp
push
fdivs
inc
mulb
push
cld
pmaxsw
js
or
pop
popf
cmpsb
mov
jl
adc
daa
sub
mov
incb
test
jbe
sbbb
sub
mov
adc
call
inc
mov
call
and
push
push
xor
adcl
lds
fs
inc
mov
cmp
addl
cs
add
arpl
mov
sbb
pop
cli
jno
pop
insl
cmpsl
jmp
push
ds
cli
lea
add
pop
cld
aam
sub
sub
push
pop
mov
sbb
jmp
xor
and
pop
loop
shll
jns
push
stos
pop
insl
push
loope
sub
inc
pushf
add
mov
or
inc
push
mov
sub
adcl
sbbb
sbb
cli
in
sbb
jo
jo
dec
int3
jnp
in
mov
mov
fsubrl
jle
int
sbb
or
jmp
inc
or
xor
sub
push
jle
aam
push
pop
push
push
hlt
scas
daa
pop
cvtdq2ps
pop
negb
pop
xchg
arpl
inc
cmp
pop
push
adc
stos
repz
adc
dec
cmp
mov
adc
mov
xor
sbb
dec
pop
jecxz
in
repnz
fstpt
inc
pop
scas
mov
xor
adc
xchg
notl
cmpsb
movsl
push
stc
arpl
push
hlt
outsl
in
add
popa
arpl
push
loop
sbb
push
or
popa
mov
aas
or
dec
ss
inc
pop
xchg
push
pop
aam
pop
adc
mov
sbb
pop
dec
test
andl
xor
add
adc
sbb
mov
cmp
cmp
xchg
lret
lods
push
pop
inc
sbb
jbe
dec
and
cmp
push
add
inc
push
xor
imul
jo
outsl
stos
icebp
aam
or
out
push
test
inc
push
sarb
ljmp
mov
loopne
cmc
cltd
test
ja
xchg
xor
insb
jo
inc
add
stos
nop
mov
fistl
cmp
cmp
mov
call
jmp
cld
mov
out
ja
xchg
loopne
push
or
mov
xchg
cmp
add
mov
xchg
xlat
mov
xchg
pop
inc
popf
xor
cmc
cli
or
add
push
xlat
inc
pop
or
out
pop
sbb
add
cwtl
jmp
mov
inc
mov
aas
shll
push
adc
mov
in
repnz
cs
or
or
sub
inc
push
pop
pop
cli
fcomps
dec
push
dec
push
sbb
icebp
cli
insb
repz
aaa
fidivl
out
sub
adc
rclb
jnp
mov
outsl
mov
lcall
xchg
in
xchg
das
add
movsl
imul
pop
inc
cmp
add
sub
idivb
or
enter
pop
cmp
mov
sbb
sub
or
pop
ret
jp
call
inc
mov
jbe
ret
inc
repnz
and
mov
stc
fsubs
or
or
add
out
push
roll
shl
jne
add
fimuls
adc
insb
imul
sbb
cltd
mov
xchg
aam
xchg
xchg
je
loope
jl
ror
cmp
push
shll
push
push
pop
xor
sbb
push
test
inc
add
mov
pop
jmp
pop
xchg
sub
into
jne
std
xor
call
hlt
rorb
xor
xchg
mov
pop
bound
add
in
or
rorl
jle
push
cmp
pop
clc
pop
fcoml
or
outsl
stos
ja
scas
jmp
add
shll
mov
lods
push
scas
dec
xor
push
or
and
shrl
test
cmp
mov
cmp
jle
dec
in
aas
xchg
lock
mov
movsb
cli
inc
xchg
in
or
mov
and
lock
mov
jge
dec
or
fcoml
dec
scas
pop
mov
sub
pop
adc
fistpll
mov
mov
jne
push
ljmp
pop
sub
testl
in
or
mov
dec
jo
xchg
and
xchg
push
mov
xor
repnz
test
push
pusha
loop
cld
stos
cmp
je
jp
jns
or
cs
mov
sub
push
xlat
jnp
hlt
cmp
fimull
adc
push
push
fisttpll
in
mov
daa
je
push
popf
loopne
sbb
cwtl
outsl
mov
xchg
lods
loope
enter
or
in
ret
jne
dec
fbstp
push
mov
mov
pop
popf
sbb
xor
jmp
ljmp
nop
pop
mov
fcmovu
daa
jp
xlat
popa
and
add
xchg
dec
push
mov
xor
cli
pop
shr
mov
inc
push
mov
cmpb
push
ds
pop
in
mov
fstpl
int
add
in
pop
xorl
popa
scas
jmp
shlb
in
pop
adc
xor
and
sbb
data16
sub
cmp
fwait
pop
xchg
in
jae
adc
inc
call
or
in
test
nop
and
mov
dec
mov
ja
xchg
ret
loopne
jle
xor
daa
jmp
movsb
mov
shr
inc
stos
in
jnp
scas
sub
int
add
into
jle
xor
and
imul
add
sub
gs
mov
sti
ret
ficompl
xchg
fbld
cmpsl
pop
jmp
data16
dec
les
rcll
dec
lcall
xchg
jns
or
add
sub
sub
jne
xor
cmp
adc
fildll
pop
and
add
cmp
out
in
jno
pop
inc
and
mov
out
push
and
push
rorl
imul
sahf
mov
adc
xor
scas
sbb
push
mov
sub
das
xchg
sub
push
xchg
push
mov
sub
in
mov
lds
pop
xchg
dec
or
push
cmp
rcll
cli
and
sub
lahf
push
ret
xor
loope
jp
sub
push
arpl
int
stos
nop
aaa
cmpxchg
daa
xlat
adc
sub
icebp
nop
dec
add
das
adc
cmpb
add
pop
pushf
je
xor
pop
out
mov
dec
mov
jnp
test
lret
xchg
movsl
repnz
vmptrst
adc
and
mov
call
jmp
subb
insl
jno
inc
outsl
jo
in
xchg
push
add
pop
cld
scas
sub
faddl
sti
arpl
sub
gs
lods
push
pop
out
sub
mov
cs
or
push
nop
dec
repnz
mov
std
shr
imul
loop
add
jmp
jmp
aas
andb
cltd
add
ljmp
mov
imul
add
sub
sbb
dec
pop
adc
xor
imul
fbstp
neg
push
ret
add
xor
aaa
push
mov
sub
xchg
and
sub
fs
dec
pop
and
fistpll
inc
jle
mov
lods
jge
mov
cli
jne
pop
pop
push
sub
pop
add
sub
add
das
mov
jno
int
sub
pop
in
aam
mov
movsb
xchg
pop
add
or
dec
mov
ret
xchg
pop
mov
and
dec
jg
mov
mov
xor
out
test
inc
mov
sub
lea
cmp
rcrl
cmp
dec
adc
dec
and
adc
mov
sub
push
sub
adc
pop
mov
cmc
call
and
testl
pop
out
pop
push
jle
aam
sub
pop
pop
xchg
mov
fucomp
pop
gs
repnz
cs
cmp
xchg
inc
ja
and
into
dec
mov
push
orl
cs
lds
push
push
lods
mov
jg
mov
push
shll
fisubrl
cld
pop
fsubr
call
mov
icebp
or
jae
dec
rorb
insl
js
push
or
add
mov
jne
mov
and
pop
insl
push
sbb
mov
or
out
loope
pop
out
lret
cmp
sub
stc
incb
dec
jle
testb
es
aas
jbe
inc
ficompl
cmp
sub
je
mov
ds
mov
inc
jmp
inc
ret
sub
add
xor
jno
scas
or
dec
and
dec
loopne
xchg
add
sbb
mov
pop
mov
in
and
add
sub
ret
pop
jg
fisubl
adc
faddl
shrl
cmp
pop
stos
push
and
jno
add
push
add
pop
cmp
inc
int3
fwait
or
mov
inc
repnz
mov
sbb
mov
or
xchg
lcall
add
pop
mov
or
xchg
jnp
cmp
cwtl
pop
xor
and
aaa
and
je
jmp
scas
xchg
into
mov
mov
cld
or
in
repnz
outsb
rcll
push
mov
lods
stc
mov
test
popf
push
out
jmp
push
or
push
pop
outsl
cmp
pop
popa
test
lret
filds
mov
scas
push
jmp
and
out
jecxz
cmp
loop
dec
cmpsb
clc
adc
aas
push
sbb
ret
ja
mov
pusha
add
fdivrs
pop
xchg
xlat
cld
or
dec
mov
mov
adc
or
stos
mov
or
adc
sub
sub
aaa
add
pop
pop
push
aad
push
sbb
dec
sbb
push
dec
pop
pop
adc
rcll
repz
add
or
or
jp
adc
nop
push
xor
mov
neg
and
adc
in
mov
jmp
push
add
mov
push
mov
or
out
jbe
jae
xchg
adc
inc
inc
cmp
add
in
int3
inc
addr16
fistl
inc
jmp
pop
pushf
adc
jl
stc
push
jmp
mov
ret
push
jne
insb
push
mov
fdivr
xor
in
add
mov
outsl
call
push
cmp
cwtl
jo
and
es
sbb
sub
popf
or
sbb
push
jmp
xor
into
imul
pop
ret
dec
inc
loope
or
clc
mov
push
mov
sub
arpl
push
or
push
std
xor
ja
xchg
inc
dec
jmp
xchg
pop
jo
jl
imul
jmp
push
out
and
clc
push
in
mov
jp
arpl
add
sub
test
jmp
pop
push
fdivr
inc
jno
mov
jb
xor
insl
jo
mov
lahf
bound
push
daa
sarb
lods
cmp
xor
fists
outsb
cmp
insl
add
in
xor
add
jl
mov
pop
rcrl
data16
stos
jae
arpl
or
ljmp
adc
jle
push
sbb
roll
push
shl
jecxz
mov
inc
mov
in
f2xm1
jmp
inc
ret
jae
ja
jo
shl
lock
jge
and
int3
lds
xchg
push
mov
or
push
je
jmp
xchg
sub
add
loopne
jl
cmp
inc
push
test
cmp
cs
out
sub
or
inc
arpl
pop
pop
xor
pop
pop
push
dec
dec
cmp
cmp
sub
push
cmp
and
mov
or
push
enter
xor
add
pop
xor
pop
xchg
cli
push
add
add
adc
sbbb
fwait
mov
and
scas
and
and
insb
pop
mov
popa
out
fidivs
jmp
test
cwtl
ret
pop
add
test
mov
push
jo
pop
jg
add
loopne
arpl
xor
push
xchg
dec
push
mov
cmp
cmc
sahf
mov
mov
rcrl
add
xor
push
mov
sbb
jmp
or
add
jmp
push
mov
outsb
push
jae
jmp
inc
pop
negb
jmp
inc
mov
add
or
adc
out
gs
out
mov
dec
bound
sbb
mov
push
push
cmp
and
mov
adc
xchg
pushl
stos
out
jnp
inc
lret
xorl
push
push
in
mov
push
aaa
icebp
push
stos
jmp
sub
ss
inc
add
decb
mov
mov
adc
dec
lock
or
mov
add
inc
ret
test
or
mov
mov
jno
jg
popf
jmp
mov
push
adc
dec
mov
fcomps
dec
sbb
sub
fs
aaa
add
mov
jmp
mov
or
jo
into
push
sub
pop
add
cmc
cmp
mov
dec
sub
ja
add
inc
loop
add
pushf
scas
cwtl
pop
adc
pop
add
mov
mov
mov
test
xchg
test
arpl
or
ret
mov
inc
mov
cmp
xor
push
std
push
inc
or
sub
inc
rclb
daa
lods
xor
inc
in
push
bound
or
jle
imul
and
jp,pt
shlb
push
in
call
test
cmp
imul
dec
add
add
inc
cmp
shl
icebp
cmp
sbb
sbb
add
pop
dec
loope
jle
pusha
mov
inc
push
int3
imul
ja
mov
xor
in
add
pop
ja
push
mov
push
test
shl
add
push
test
push
and
pop
dec
add
mov
stos
and
pop
jg
xor
sub
or
add
mov
rcrl
push
cli
or
pop
add
mov
mov
lahf
jne
popf
divb
out
scas
and
sbb
jmp
and
pop
lock
fs
inc
mov
pusha
nop
xor
mov
repnz
sbbl
push
add
rcrb
test
pop
pop
cmpsb
dec
add
icebp
enter
adc
sub
in
int
and
dec
xor
mov
sub
pop
mov
push
and
inc
jns
cmp
and
decl
outsl
pop
push
pop
pop
mov
dec
ficoms
mov
pushw
and
popf
inc
shrb
pop
data16
lret
add
insb
out
pop
cs
imul
fldcw
push
mov
mov
xor
cmp
mov
out
mov
jae
pop
xchg
mov
fists
mov
cmpsb
rolb
and
and
adc
push
and
add
hlt
loope
jg
pop
inc
add
jb
test
push
sub
add
adc
rcrb
pop
pop
jmp
jae
and
and
pop
shlb
out
or
push
mov
stc
dec
and
add
xchg
add
test
in
mov
ljmp
and
iret
push
clc
xchg
lds
adc
out
inc
fwait
gs
icebp
outsb
jmp
ljmp
jmp
pop
dec
cmp
test
pop
xchg
shl
dec
jb
shr
xor
into
jmp
mov
pop
jmp
inc
lods
les
xor
add
sub
rorb
cwtl
cmp
cmp
adc
mov
incb
xchg
sbb
pop
mov
test
ret
xchg
pop
jp
mov
orb
jnp
arpl
imul
cmp
dec
add
scas
pusha
cld
les
inc
push
xor
jp
loop
push
pop
mov
sub
mov
pop
jp
xrelease
mov
xchg
inc
jmp
inc
mov
inc
popw
inc
push
xor
aam
pop
es
nop
add
je
sbb
push
sub
xchg
mov
push
sub
sub
mov
pop
adc
xchg
jmp
xor
orb
out
pop
jl
or
movsb
push
jno
ffree
outsl
out
or
jg
movsl
push
jmp
movsl
mov
mov
adc
mov
xchg
lret
xor
inc
lahf
xor
xchg
testb
daa
jbe
adc
push
imul
cmp
pop
pop
jmp
pop
dec
cs
arpl
inc
jmp
xchg
mov
jmp
inc
adc
sbb
cs
add
push
add
ljmp
push
dec
stc
cmp
lods
enter
dec
aam
push
xchg
pop
xchg
fwait
jbe
push
mov
subb
sbb
daa
imul
clc
or
cmc
pop
pop
and
dec
push
mov
cwtl
test
dec
pusha
loope
or
jp
sbb
mov
pop
or
mulb
in
int3
mov
sub
cmc
daa
fldl
add
adc
jnp
mov
mov
pushf
jle
mov
jp
jmp
xchg
mov
push
cmpl
pushf
jle
aam
mov
frstor
pop
mov
jae
xchg
pop
mov
adc
add
jmp
adc
pop
cli
add
push
mov
rol
xor
loopne
call
mov
out
movsb
cld
pop
std
rorb
orb
hlt
pop
add
add
jmp
or
and
or
push
push
pop
inc
push
stos
dec
outsl
sarb
xor
dec
mov
dec
mov
cmp
and
lret
lret
add
xor
inc
xor
jmp
cli
mov
push
add
adc
xor
pop
cld
and
cmp
shr
xchg
shrb
enter
push
or
loopne
or
scas
cmp
in
lret
imul
pusha
hlt
or
and
rolb
dec
into
xor
mov
jns
xorb
mov
lahf
add
daa
dec
sub
sbb
hlt
mov
arpl
dec
rolb
sbb
jns
add
popf
push
subl
lock
xorl
jnp
std
pop
lret
mov
add
and
xor
test
sub
push
adc
sub
or
xchg
movsb
jo
mov
aas
push
mov
aad
hlt
add
sbb
sbb
das
mov
aad
gs
mov
repnz
popa
nop
mov
mov
mov
dec
negb
mov
xor
adc
and
and
ror
rcrl
xor
ret
inc
shl
lds
mov
push
out
sahf
jg
jle
addl
and
rolb
jae
xlat
sbb
xchg
cmp
ficoml
push
mov
negl
loope
sub
xchg
gs
cmp
xor
adc
popf
in
jmp
pop
mov
hlt
pop
xchg
lock
clts
je
and
pop
inc
shl
addr16
pop
add
mov
scas
jl
movsl
scas
cmpsb
mov
sarl
push
dec
movsb
xchg
push
lea
and
shl
idivl
xchg
popf
mov
inc
ss
dec
push
lcall
cmp
test
sbb
jmp
sub
sbb
in
add
outsl
inc
push
mov
add
inc
loopne
daa
pop
dec
fadds
or
or
pop
sbb
cmpsb
mov
je
imul
stos
adc
adc
xor
jne
dec
in
lcall
pop
sti
pop
mov
mov
xchg
lock
dec
and
pop
jmp
sub
mov
pop
inc
es
dec
leave
sbb
dec
repnz
or
orb
adc
mov
dec
ret
or
adc
int
loopne
sbb
add
jmp
test
dec
pop
je
xor
filds
adc
pop
xor
outsl
repz
filds
sub
test
sub
and
pop
aam
push
add
je
loopne
push
push
in
or
mov
dec
sub
xor
nop
arpl
daa
push
add
inc
dec
mov
push
mov
push
clc
mov
and
popa
mov
fiadds
pushf
test
cld
add
pop
mov
adc
add
adc
xchg
xlat
pusha
daa
arpl
inc
push
xor
dec
pop
out
add
stc
cli
inc
mov
mov
leave
pop
push
mov
cmp
mov
push
pop
mov
pop
mov
adc
or
push
or
and
pop
cmp
lahf
push
int3
add
roll
dec
sub
clc
andb
or
ret
pop
loop
pop
in
mov
push
or
lods
inc
adc
adc
xchg
inc
push
roll
mov
inc
fldcw
add
push
mov
xchg
adc
dec
add
inc
xchg
or
aas
stc
mov
mov
xchg
call
dec
out
sarl
mov
mov
fisubl
and
ret
std
rcl
stos
mov
pop
mov
push
test
jnp
lret
adc
ds
orl
mov
mov
jle
jle
add
fstps
jne
mov
daa
push
adc
push
push
push
mov
jns
cmc
and
ret
or
add
jnp
dec
ljmp
dec
cmc
push
add
sbb
jle
add
dec
incl
adc
mov
pop
mov
clc
cmp
pop
mov
je
push
mov
push
daa
sbb
shll
test
jecxz
cltd
out
js
mov
mov
mov
cmc
adcl
popa
ljmp
das
mov
test
imul
jle
aam
cld
jbe
pop
sub
adc
pop
test
or
mov
dec
mov
pop
pop
adc
mov
out
add
addr16
inc
test
mov
pop
xor
add
inc
dec
sub
cs
decb
shl
test
and
filds
sahf
xor
hlt
ja
or
in
and
dec
pop
and
std
data16
sub
xlat
inc
adc
inc
pop
push
dec
push
and
add
call
outsl
xor
adc
sbb
sub
orl
mov
jecxz
push
mov
mov
add
incb
xchg
jmp
add
cwtl
cmp
orb
mov
ret
cmpsl
add
sbb
xor
imul
xor
mov
or
xor
xchg
pop
pop
fdivs
fisubrl
mov
or
cmp
test
jbe
aas
rorb
dec
leave
cli
add
push
pop
mov
inc
iret
pop
imul
mov
xchg
outsl
xchg
call
sbb
pop
xor
out
pop
xor
pop
outsb
call
adc
pop
in
add
mov
daa
dec
lds
adc
shl
jmp
hlt
stc
pop
dec
mov
push
dec
add
or
out
pop
pop
rolb
xor
mov
inc
in
add
add
cmp
xchg
fdivs
lds
fs
sub
add
jae
inc
jmp
mov
out
jmp
or
jl
push
push
call
sbb
imul
xor
lock
dec
adc
fiadds
add
jg
mov
or
add
xchg
stos
jmp
enter
sahf
jg
lods
pop
mov
add
subb
out
and
mov
sub
push
sbb
sbb
mov
add
jg
ss
aaa
sbb
out
add
xor
repz
jg
call
and
jb
cmp
mov
das
jmp
jmp
mov
and
sub
jmp
push
cmp
jbe
add
lods
mov
push
pusha
xor
out
xchg
push
cli
add
les
cli
pop
adc
add
add
and
out
inc
gs
addr16
sub
cmpsb
push
std
adc
push
push
jmp
bound
ret
fdivs
pop
scas
shlb
and
push
mov
sub
mov
or
adc
repnz
movsb
into
jmp
addr16
xchg
cmp
adc
add
jle
ja
loope
inc
das
xor
sbb
pop
sbb
or
jmp
imulb
test
dec
xlat
add
outsb
jmp
jmp
inc
iret
fs
push
in
jle
rclb
add
insb
xchg
push
mov
iret
cld
inc
andb
sub
pop
inc
movsl
fdivl
test
jp
repnz
and
leave
aaa
pop
xorb
lret
out
adc
push
mov
out
jne
push
inc
ret
stos
mov
outsb
sub
aas
mov
add
ficomps
out
xchg
arpl
push
add
imul
push
ret
out
in
outsb
xchg
jmp
sub
int3
mov
aas
jno
lret
or
std
push
lock
call
iret
jne
sahf
pop
sub
lock
pop
inc
mov
adc
sbb
andb
popa
push
setge
pop
mov
xor
dec
popf
dec
or
jno
push
popa
test
mov
sbb
insb
gs
lods
repz
adc
out
hlt
insl
xchg
inc
xor
es
push
mov
neg
xor
xlat
loopne
enter
cwtl
subl
mov
sub
mov
shl
sbb
xlat
or
inc
sbb
add
inc
jne
cmp
out
insb
pop
imul
fmuls
and
ret
popf
add
adc
mov
aas
pop
cmp
in
lahf
mov
and
sbb
sbb
stos
or
xor
in
cwtl
xor
fiadds
xor
dec
jne
and
sarl
js
cmp
sub
cmp
popf
sbb
add
mov
lret
lahf
sub
pavgb
push
xor
pop
pop
clc
ret
dec
out
lret
sub
pushf
shr
jne
popf
enter
adc
jb
clc
add
and
lahf
cli
mov
int3
xchg
pop
and
jb
loope
mov
movsb
sbbb
mov
add
mov
lea
mov
and
bnd
inc
add
and
mov
mov
les
stos
lods
fldl
pop
jge
pop
add
test
popf
jl
je
hlt
sub
dec
push
jns
or
add
mov
xor
mov
fsubp
push
push
jp
mov
fwait
mov
adc
loope
mov
jae
and
hlt
mov
cmp
pop
sahf
inc
incb
test
aas
in
bound
es
cwtl
or
mov
sbb
out
pop
pop
push
dec
idivb
and
out
inc
js
dec
sub
popf
cmp
icebp
sar
mov
add
ret
mov
pop
fidivl
push
ds
or
roll
or
shrl
inc
push
or
lds
icebp
das
jmp
cmc
pop
sub
mov
inc
mov
fdivr
ja
hlt
inc
dec
cmpsb
lcall
add
fldl
movsb
aaa
xlat
jne
mov
adc
xor
cmp
sbb
mov
or
cmp
sbb
adc
das
fstl
sbb
aad
popf
push
adc
push
cmc
push
in
mov
mov
adc
std
or
out
sub
or
hlt
or
pop
fimull
add
mov
or
jmp
cmc
pusha
mov
jle
loope
out
or
ljmp
and
pop
sbbl
and
sub
fs
loope
in
sbb
pop
sbb
cs
or
and
imul
xor
int3
in
or
aad
adc
jmp
sub
push
call
pop
add
bnd
sbb
iret
push
inc
js
sub
aaa
add
loop
pop
hlt
int
add
inc
push
shr
lock
nop
lahf
xchg
lret
jb
les
inc
dec
xor
sub
inc
sbb
add
push
adc
push
pusha
or
and
pop
push
add
sub
scas
pushf
add
inc
in
rcrb
loope
add
mov
jmp
leave
dec
jge
lcall
lcall
push
jmp
xlat
lds
ret
xchg
inc
mov
jo
sub
aam
and
cvtdq2ps
dec
cmp
cwtl
xchg
dec
jl
leave
push
push
mov
cld
pop
dec
adc
cli
into
jns
fdivrs
pop
ret
imul
xor
cld
ror
fists
inc
inc
sbb
stc
inc
add
movsb
test
dec
test
les
js
xor
test
mov
mov
cmp
jecxz
pop
xor
jp
add
dec
ret
or
in
nop
movsb
inc
add
jns
add
push
push
sbb
xlat
jmp
xchg
push
add
mov
add
sub
rcrb
cmpsb
lock
add
arpl
cmp
or
inc
push
mov
es
mov
sbb
rcrl
xchg
cs
jne
iret
ja
and
outsl
lret
ret
sbb
pop
xor
sarb
shrb
inc
test
cld
and
cmp
dec
out
sarb
pop
popf
cmp
jle
daa
cmpsl
addr16
dec
pusha
adc
gs
dec
add
push
movb
dec
nop
xor
les
lret
mov
lods
inc
mov
movsb
jp
adc
jmp
inc
add
out
and
adc
cmp
or
inc
out
push
sbb
out
repnz
cmp
movsl
mov
scas
xor
dec
pop
aam
lods
out
mov
xor
leave
mov
and
and
cld
dec
pop
scas
pusha
sub
push
into
or
dec
mov
dec
pop
in
cltd
add
push
outsb
add
hlt
inc
xor
mov
or
xchg
dec
pop
cmc
rcrb
sbb
pop
pop
pop
push
adc
pusha
xor
jae
pop
inc
sbb
or
mov
cmc
daa
pop
les
out
call
mov
sub
mov
cld
bound
inc
shl
adc
xor
xchg
in
add
xchg
dec
cmp
aas
cld
or
out
sub
add
repnz
sti
rcll
gs
mov
sub
adc
enter
and
sub
push
sub
mov
stc
inc
insl
mov
sub
sahf
jp
and
push
fcmovne
lods
add
or
push
divb
sub
dec
pop
push
arpl
test
mov
xor
and
in
test
lds
mov
int3
add
mov
mov
stos
jg
push
das
mov
jno
test
mov
adc
pop
push
push
jmp
loopne
mov
dec
stos
push
push
loop
iret
les
lods
pop
mov
loopne
pop
and
pushf
pop
push
sub
stc
mov
sub
out
mov
dec
mov
scas
test
xchg
dec
lea
loopne
icebp
pop
pop
pop
imul
push
adc
out
mov
fmuls
stc
mov
insl
jecxz
std
mov
jmp
push
push
push
call
std
cmp
xchg
fisttpll
and
lock
pop
pop
xchg
sbb
mov
mov
fmuls
pop
add
sub
or
pop
jmp
mov
das
push
mov
pop
fwait
add
or
sbb
mov
pop
add
jmp
add
ljmp
rcl
pusha
pusha
pop
out
fisubrs
subl
ss
adc
mov
cmp
jne
sbb
sbb
sti
popf
xor
insb
mov
xchg
pop
ss
bound
and
jbe
dec
popa
ja
xchg
lahf
nop
xchg
pop
ljmp
in
and
shll
mov
inc
jo
in
push
cmp
call
add
not
in
adc
pop
mov
push
out
or
lds
mov
jmp
cmp
push
mov
inc
adc
sub
xlat
roll
push
std
inc
jb
jl
jg
xor
adc
pop
scas
and
mov
or
lcall
lret
cmp
pop
sbb
push
pop
cmc
mov
cmp
push
mov
daa
jecxz
pusha
icebp
push
out
mov
sub
int
das
out
sub
std
popf
add
sub
jae
pop
sbb
ret
cvttps2pi
xchg
push
mov
add
insl
and
pop
lahf
mov
xchg
loop
clc
pop
xchg
xor
sub
rcr
sbb
xor
imul
mov
and
push
jo
int
dec
inc
mov
pop
insb
jp
pop
or
add
push
subl
xchg
pop
sbb
and
sub
push
cmp
or
mov
cmp
lds
cmp
out
inc
dec
jge
rol
mov
in
adc
cli
in
add
sub
mov
add
aaa
popa
inc
jg
pop
lret
daa
push
adc
push
xor
push
add
into
jae
ja
lods
in
sub
das
mov
arpl
andb
dec
roll
movl
adc
push
shl
nop
xchg
imul
loopne
orb
outsl
in
movsb
lret
js
jp
jne
push
push
out
mov
dec
nop
cmpsl
mov
jmp
jo
cmp
daa
inc
cmpsb
lret
inc
aaa
and
nop
ficoml
adc
adc
enter
mov
inc
sub
stc
pop
fbstp
neg
shr
shrl
sti
xchg
int3
cmp
or
neg
or
xor
pop
add
add
fcoms
push
testb
mov
adc
mov
adc
movl
cmp
dec
decb
jge
pop
test
les
or
add
rol
ret
shll
imulb
imul
push
sbb
or
nop
mov
ja
test
inc
notb
or
and
add
dec
jns
jo
in
pop
xor
repnz
push
push
daa
or
movsb
pop
pop
aaa
xlat
ret
push
sub
aad
pop
repz
lock
dec
push
jbe
dec
insl
mov
cld
loop
test
ret
sbb
sbb
daa
lcall
mov
jp
les
sub
add
push
jmp
lahf
jno
push
xor
fisttpl
roll
stos
pop
pop
daa
xchg
imul
outsl
shld
arpl
add
sub
test
ret
pop
jmp
xchg
test
push
jae
in
rolb
mov
dec
into
mov
jmp
sbb
aam
xor
push
popa
xor
and
out
pop
push
mov
jp
dec
inc
jmp
je
mull
hlt
aas
push
push
je
and
popf
das
ret
or
lods
jno
and
js
sub
dec
mov
sbbb
xchg
xor
lods
outsl
pop
call
lock
or
fsubs
scas
pop
std
sbb
loope
cwtl
mov
xor
cmpb
xor
mov
jg
cli
jle
inc
dec
push
or
sbb
lea
dec
andl
add
push
xor
orb
lahf
or
mov
insl
sub
jp
repnz
push
jl
movsl
sbb
xchg
repnz
sub
or
jne
int
jmp
xor
jne
sub
mov
fistps
xor
cmp
repnz
sbb
imul
hlt
es
pop
mov
inc
push
scas
pop
adc
push
adc
jmp
sahf
sbbb
inc
cmp
xchg
sbbb
dec
and
test
or
sub
adc
inc
insb
jae
sbb
negb
mov
mov
add
cmp
mov
sub
fsts
pop
mov
xchg
popa
or
xchg
cli
add
daa
or
mov
jbe
bound
scas
jge
adc
push
xchg
lods
push
roll
inc
jmp
pop
push
jno
movsl
xchg
je
dec
push
mov
xor
xlat
mov
icebp
aas
or
sbb
pop
cmpb
mov
adc
lcall
xor
push
arpl
xchg
and
add
add
push
pop
dec
pop
scas
ror
push
bound
sbb
pop
sub
xor
dec
inc
adc
pop
mov
mov
ja
lods
add
pop
pusha
cmp
dec
sti
aad
pop
lahf
test
jmp
shrb
ret
pop
mov
push
pop
mov
sub
not
mov
pop
out
push
decb
lcall
je
imul
jmp
incb
add
add
das
pop
test
das
inc
add
ret
sub
push
dec
addl
push
orl
adc
push
pop
or
in
fbstp
sbb
xor
and
mov
aas
lods
aad
cld
xchg
add
mov
adc
fstpt
push
mov
mov
pop
ds
xchg
xor
loop
and
mov
jmp
mov
dec
pop
stos
push
jle
js
jmp
sti
mov
mov
push
ds
pop
mov
mov
pushf
fs
shrl
inc
lret
stos
mulb
xchg
out
add
dec
push
xor
xchg
and
jmp
testb
and
add
cmc
jmp
mov
jmp
pop
pop
in
inc
mov
ret
test
inc
pop
mov
jge
adc
push
cmp
push
enter
dec
jmp
sti
add
adc
push
out
ret
addr16
add
jmp
pop
dec
xchg
dec
and
or
pop
repnz
and
enter
stos
movsb
jo
dec
pop
mov
jo
and
jmp
lock
jecxz
push
mov
aas
adc
push
xor
leave
jge
push
sbbb
cwtl
sub
inc
pop
sbb
mov
mov
pop
inc
loop
jbe
and
mov
add
cmc
and
mov
xchg
daa
lock
mov
xor
imul
add
jne
enter
mov
test
xchg
in
push
js
push
sub
add
filds
pop
push
jmp
into
fstpl
adc
loop
and
les
dec
cltd
jmp
add
mov
lock
cmp
rcl
aas
or
adc
mov
mov
xor
cmp
pop
push
ret
and
mov
fistpll
add
rorl
or
dec
lds
sbb
daa
cmc
movsl
add
pop
fucom
je
push
mov
not
shl
cwtl
push
loop
idiv
rcr
xor
pop
jb
xchg
adc
mov
sub
xchg
push
jno
sbb
push
xchg
inc
cld
flds
mov
fnstsw
xchg
pop
push
stos
sub
mov
je
adc
add
adc
add
adc
in
ds
fnstcw
cmp
jle
push
sbb
or
in
repnz
rcrl
and
adc
sub
push
mov
push
inc
hlt
hlt
sbb
and
jg
add
repnz
add
dec
fs
xor
jge
ljmp
orb
dec
dec
scas
lds
jmp
sub
ret
sbb
add
in
pusha
xchg
test
pop
cli
clc
jmp
sub
jl
js
jl
pusha
jge
cmp
les
push
xchg
dec
push
jmp
mov
dec
dec
mov
pop
fcmovnbe
and
xor
push
sbb
and
mov
pop
loop
xchg
out
push
incb
addr16
bound
add
fisubl
loopne
mov
movsb
mov
push
xor
mov
jge
repnz
fs
push
jmp
test
pop
pop
scas
add
xor
adc
test
mov
push
add
outsb
in
xchg
xor
mov
mov
orb
cmp
mov
or
pop
inc
mov
repnz
je
sbbb
loopne
dec
or
sbb
or
adc
in
cmp
adcl
xor
push
mov
incb
icebp
cli
or
jmp
push
push
push
pop
pop
and
pop
and
cli
enter
add
fnstcw
and
adc
add
popf
shll
pop
push
fisubs
jno
out
loope
sub
mov
and
xchg
jge
shrb
jg
xor
jg
cltd
jne
test
push
rclb
sbb
or
test
movsl
push
rcrb
fxch
cmp
sub
mov
xchg
pop
push
sub
sbb
lahf
sbb
add
pop
and
xor
pop
sti
cmp
or
cld
mov
imul
leave
add
inc
inc
mov
pop
jne
mov
mov
xchg
neg
aas
scas
push
cld
shll
aam
lret
in
push
or
and
add
dec
insl
imul
cmp
xor
jmp
faddl
enter
aad
imul
pop
push
sahf
and
stc
push
mov
dec
test
loopne
push
lock
dec
movsl
out
fsubrs
addr16
sub
bound
stos
sbb
xchg
jecxz
loop
sti
pop
test
adc
mov
sbb
or
add
add
imul
clc
ljmp
pop
push
and
mov
cmp
pop
call
push
push
mov
cmp
leave
pop
or
insb
nopl
daa
out
xor
inc
or
jns
xlat
ljmp
icebp
ja
dec
nop
jne
popf
rcll
push
sub
mov
fcomip
xlat
push
add
cmc
cmp
dec
push
lods
in
mov
mov
lds
cmpsb
push
inc
sahf
ret
push
in
insl
icebp
xor
cmp
pop
call
sub
xor
push
pop
inc
fwait
inc
ljmpw
jo
stc
pextrw
pop
mov
dec
mov
ret
jle
addb
lret
ret
std
inc
xchg
test
add
or
push
add
mov
test
push
push
mov
xor
sub
push
jae
movsl
pop
lds
xchg
pop
push
and
popf
icebp
mov
rorw
jmp
lods
mov
cli
xchg
addl
pusha
or
or
xor
mov
adc
xlat
sbb
mov
jbe
not
rorb
out
push
mov
jmp
and
add
push
mov
cmp
into
add
out
jmp
and
jno
pusha
andps
add
push
xor
jmp
jle
scas
sbb
lcall
sbb
or
mov
cmp
fsts
sub
jmp
out
xorl
fstl
repz
pop
pop
jns
or
pop
mov
dec
xor
add
adc
push
dec
stc
xor
push
mov
and
inc
fsts
mov
add
pop
pop
shll
int3
push
push
mov
jo
or
pop
mov
add
inc
jmp
xor
add
iret
jmp
shlb
mov
or
mov
inc
pop
jecxz
cmpsb
sub
nop
cltd
add
iret
pop
outsb
adc
and
loopne
push
pop
push
fildl
xor
jg
pop
ja
test
xor
xlat
jae
cld
or
sub
pop
stos
inc
rol
xchg
fnsave
pop
and
jl
jmp
push
sbb
pop
or
and
jge
mov
fs
add
pop
gs
sub
jmp
ret
jge
lret
jo
das
shr
test
aad
leave
bound
pop
shr
inc
push
mov
pop
push
loope
push
jg
lds
jecxz
add
and
pop
pusha
mov
decl
xchg
or
pop
sub
adc
pusha
mov
mov
xchg
inc
push
scas
nop
cmpsb
pop
add
or
pop
nop
nop
pop
mov
sub
mov
mov
push
jb
adc
jno
loop
fsts
pushf
mov
out
fmul
mov
sub
inc
cmp
and
inc
sbb
enter
push
cwtl
add
popf
outsl
pop
icebp
xchg
call
mov
and
adc
andb
cwtl
xchg
jp
push
push
push
fmulp
add
push
cli
jl
cmovs
adcl
cmp
cmp
loop
jle
lds
addb
cltd
es
mov
or
daa
jo
adc
and
push
outsl
in
lahf
mov
push
add
or
jp
add
jmp
pop
or
rolb
push
push
xchg
movsl
outsb
bndldx
sbb
xchg
push
mov
add
sub
adc
or
stos
add
push
mov
test
push
and
sbb
dec
mov
gs
fsubrs
scas
mov
pop
nop
xchg
xchg
mov
sti
insl
scas
jnp
sahf
xchg
inc
mov
or
ss
cmp
not
push
shlb
add
ljmp
mov
mov
or
clc
data16
icebp
das
stc
jnp
mov
pop
and
cmp
jmp
das
cmp
jno
add
jo
test
dec
ljmp
push
mov
cltd
adc
movsb
xchg
adc
jge
mov
dec
dec
sbb
outsl
jmp
jp
popf
mov
je
pop
popa
out
loope
cmp
sub
add
cld
out
adc
adc
xor
repnz
xor
in
aas
fimull
lods
jae
cltd
sbb
add
xchg
push
mov
jne
aad
jmp
ffree
push
add
add
lock
cli
int3
mov
mov
lea
ror
setne
test
in
adc
mov
mov
les
aas
pop
push
xchg
jecxz
jmp
pop
pop
inc
pop
cmp
adc
call
and
add
dec
test
lods
sbb
sub
movb
jno
push
mov
mov
lret
fiadds
mov
jg
or
push
dec
stc
or
das
flds
sbb
xor
mov
inc
imul
sbb
retw
xor
and
or
push
ss
sahf
adc
push
pusha
outsl
inc
inc
mov
lock
dec
jbe
and
outsb
inc
push
push
out
ds
xor
sbb
out
lock
or
xchg
mov
jae
pop
loop
cmc
in
dec
scas
cmpsb
dec
sti
insb
dec
std
mov
scas
cmp
imul
push
inc
stc
ficoms
push
xor
out
mov
call
ljmp
orl
clc
out
add
mov
ret
jnp
popa
sahf
sub
iret
ret
xor
shl
pusha
cmpl
pop
xor
stc
sbb
xor
scas
push
idiv
call
mov
andl
loop
or
cmpl
cmp
lods
pushw
jmp
bound
pop
pop
cmp
loop
inc
xor
scas
add
pop
or
inc
push
sbb
ljmp
and
cmpsb
ret
or
jmp
outsl
daa
mov
mov
add
pusha
push
pop
sbb
jecxz
jne
add
pause
pop
dec
xlat
adc
filds
cmc
push
push
lret
sub
xchg
fadds
mov
cwtl
ret
cmc
mov
dec
push
or
lea
xchg
xor
and
push
jbe
mov
mov
fnsave
push
xchg
xchg
movsb
sbb
jmp
pushf
lret
push
cld
mov
push
push
jns
push
add
jmp
adc
insw
ss
sbb
push
mov
jnp
adc
scas
cmpl
insb
jp
push
mov
xor
in
cld
ss
or
dec
outsb
loopne
xchg
and
adc
pop
mov
adc
cwtl
mov
pop
add
lock
int3
sarb
repz
inc
std
mov
je
aas
xchg
mov
jmp
push
add
mov
sub
pop
xchg
xlat
mov
ja
test
pop
in
mov
xor
dec
jno
inc
mov
mov
into
pop
mov
mov
pop
out
in
mov
lcall
pop
mov
pop
sti
mov
cwtl
sub
lock
push
pop
int3
call
push
push
mov
pop
push
xchg
mov
add
pop
mov
pop
cmc
add
jne
xchg
dec
fstpl
ret
jle
rorl
bound
jbe
cmp
loopne
sbb
sub
mov
jns
arpl
dec
enter
fwait
jl
bound
aad
xchg
jno
pop
popa
sbb
or
cmp
scas
mov
stos
jmp
les
and
or
fwait
push
add
xor
cmp
loop
add
adc
jp
aam
cmpsl
push
add
sbb
ficompl
loopne
pop
pop
mov
mov
mov
or
push
xor
sub
sbbl
shr
mov
in
out
push
xchg
dec
sar
mov
pop
pop
rclb
aas
push
add
sbb
adc
inc
cwtl
lds
std
mov
orb
dec
je
out
push
jmp
sub
cwtl
out
adc
mov
pop
sub
sbb
int3
lods
lods
aaa
test
fcmovnb
inc
pop
rclb
fadd
aam
mov
cmp
add
int
jnp
mov
cmp
popl
out
add
in
jne
adc
sub
arpl
ficoms
push
lock
mov
cs
dec
icebp
movsl
add
stos
stc
fisubs
mov
dec
sti
push
pop
orb
mov
cmp
inc
xchg
sub
pop
jmp
pop
clc
mov
cwtl
push
subb
mov
das
xchg
add
int3
mov
add
mov
subb
cmp
push
push
mov
pop
jmp
and
pop
add
int3
mov
insl
pop
dec
jno
sub
hlt
cmc
pop
mov
xor
and
mov
shl
push
add
xchg
testb
pop
lock
lods
popf
add
push
push
pop
pop
push
dec
jo
push
call
out
and
iret
test
lahf
pop
mov
jecxz
rolb
js
lods
aas
inc
inc
std
dec
dec
mov
imul
pop
adc
fwait
inc
inc
outsb
and
pop
jae
out
dec
mov
fsubs
in
neg
inc
push
hlt
mov
add
in
push
xor
jmp
pop
bound
cld
add
sbb
stc
sbb
test
lret
mov
pop
popa
fimull
push
jmp
jno
adc
sahf
ds
out
enter
ljmp
fcomps
cltd
hlt
ds
cmp
jle
pop
add
push
sub
sub
inc
jmp
insb
adc
xchg
mov
pop
xor
xor
jmp
inc
cmp
sub
dec
lea
ds
jo
add
cmp
imul
repz
pop
inc
repnz
sbb
scas
push
out
lods
sbbb
jns
pop
arpl
sysret
inc
leave
jp
mul
out
dec
call
push
insl
das
fstpl
mov
jnp
mov
or
cmc
hlt
pop
ljmp
insb
aas
add
subb
lock
jmp
push
push
mov
ret
xor
nop
into
or
leave
jae
ljmp
test
mov
imul
and
out
sub
hlt
ja
out
pop
outsl
ret
rorl
jge
inc
insb
roll
dec
pop
inc
loopne
xor
stc
mov
jmp
push
fdiv
cmpsl
rclb
jb
push
mov
mov
faddl
loopne
movsl
jae
xor
out
add
jp
sbb
cmc
jno
add
pop
or
push
ja
jnp
add
jae
popf
push
mov
xchg
sub
nop
push
jmp
mov
inc
incl
adc
pop
popa
mov
shl
pop
push
les
out
dec
xor
insb
sbb
sbb
or
aas
pop
xor
not
add
inc
add
cmp
or
and
cmp
into
inc
inc
cmp
fdivrs
mov
dec
dec
jbe
imul
dec
ja
jne
xor
push
ss
jmp
sbb
cmp
cmpsl
fstl
xchg
lds
mov
sub
fimull
divl
adc
mov
add
cmp
outsb
jmp
in
push
mov
adc
xor
jmp
int
jmp
scas
or
addl
inc
jmp
add
dec
sub
nop
inc
dec
or
shrl
lcall
inc
inc
push
js
sub
js
rcll
imul
lods
imul
xor
sub
sahf
or
fadds
push
add
sub
push
inc
jmp
xor
je
iret
in
dec
push
adc
mov
bound
movsl
pop
xchg
or
dec
inc
sbb
fs
xor
fmuls
out
push
mov
ret
js
sbb
jne
rorb
push
fisubs
mov
or
add
mov
outsl
lds
dec
out
inc
mov
sub
mov
adc
jle
sub
iret
pop
je
popa
push
les
pop
dec
jb
das
fwait
test
add
cmp
push
push
mov
pusha
insb
push
mov
inc
movsb
or
pop
lcall
lcall
cmp
mov
push
lcall
mov
inc
xchg
inc
pop
xor
jmp
mov
or
pop
add
sub
ss
add
stos
sub
insl
add
push
aad
push
scas
test
cmp
popa
out
cmpsb
adc
push
xor
cmp
data16
push
adc
or
dec
call
push
ja
addr16
fidivrl
pop
pop
sub
out
imull
inc
push
jnp
sub
daa
mov
jge
ja
cmpsb
push
inc
dec
dec
cld
mov
pop
xor
add
inc
and
lock
mov
in
add
cld
sti
jmp
adc
cmp
push
aad
lret
xchg
xor
rcll
sbb
insb
jo
cmc
mov
mov
jmp
je
in
add
sbb
and
mov
outsb
jge
std
jns
mov
mov
mov
sub
pop
push
jl
shr
roll
mov
or
sarl
repnz
or
jle
xchg
mov
pusha
or
push
push
sti
mov
ret
mov
add
sbb
adc
lcall
in
or
sti
pop
xchg
push
xchg
call
sub
cmp
out
loopne
or
xchg
ljmp
das
sub
stc
and
add
cld
inc
or
push
dec
sub
das
push
cld
in
add
cmc
or
ret
or
jle
or
pop
xchg
lods
pushf
and
mov
add
js
shl
shr
imul
push
jmp
dec
loop
and
rorb
jne
dec
add
clc
push
xchg
jge
sub
and
and
bnd
mov
cmp
cmp
jnp
push
bound
push
mov
es
and
ja
dec
cmp
push
or
and
sti
mov
repz
sub
xchg
jnp
mov
std
rolb
add
jmp
shll
not
mov
insb
inc
enter
jmp
rcrb
sub
enter
mov
push
add
push
jmp
cmp
dec
jmp
lcall
add
sub
pop
pop
lock
andb
mov
adc
jo
pop
not
pop
test
add
lret
dec
xor
mov
loope
add
scas
icebp
xchg
xchg
loop
cli
mov
adc
and
and
pop
inc
loopne
mov
es
xor
stc
arpl
cltd
loopne
mov
ret
push
jmp
mov
repnz
rcrl
jne
lahf
pop
das
or
xor
sub
popa
xchg
add
fsubrs
mov
adc
pop
jl
jns
mov
pop
ret
add
push
push
push
push
push
mov
cltd
push
xchg
rclb
add
mov
addb
and
jmp
lds
push
mov
daa
out
outsl
pop
mov
pop
sbb
pop
jecxz
push
addb
xor
xchg
jl
push
pop
push
jecxz
incb
les
inc
in
lods
push
insb
adc
mov
or
xchg
sub
into
inc
ja
test
mov
out
or
adc
or
mov
xor
push
push
stc
mov
daa
jmp
loopne
mov
push
push
push
dec
mov
dec
push
jmp
push
mov
mov
push
xchg
repnz
repz
leave
fdivrl
adc
xlat
out
and
das
cli
insb
jp
xchg
call
adc
xlat
pop
and
inc
cld
mov
mov
jg
jb
cltd
add
sbb
cmc
push
add
pop
sub
jg
dec
or
scas
imul
das
mov
outsl
sbbl
jp
or
push
sub
pop
mov
cwtl
mov
clc
iret
adc
xchg
cmpb
jns
dec
adc
cld
cmpsl
cli
push
int3
cs
insl
arpl
shrl
mov
dec
cmpsb
add
fwait
adc
and
fstps
mov
xor
jo
pop
lahf
or
pop
sbb
add
pusha
and
rolb
dec
sbb
cmpsb
sub
jmp
in
mov
lods
addb
addr16
mov
mov
cmp
xchg
test
dec
frstor
dec
addr16
incb
bnd
adc
xor
mov
or
mov
mov
lret
push
clc
sti
adc
inc
mov
inc
mov
popl
sahf
arpl
mov
inc
lds
jo
popf
popa
xchg
jo
daa
sbb
mulb
jo
enter
xor
mov
adc
sub
test
or
sbb
ss
mov
out
rcll
cmp
adc
mov
or
inc
mov
lods
jge
cs
hlt
push
mov
push
xchg
neg
jb
mov
push
mov
push
jmp
and
mov
sub
jecxz
xchg
jo
divb
or
mov
xchg
rclb
mov
cmp
adcb
mov
push
inc
dec
daa
xchg
shr
xchg
movsl
lods
cmpsb
dec
jae
push
add
add
dec
std
retw
push
mov
lock
and
mov
jmp
xlat
pop
push
cltd
jne
mov
bound
xor
scas
and
sub
cs
xor
cli
loop
cmp
or
fucomp
xlat
pop
pop
ljmp
mov
mov
dec
out
arpl
cmp
fwait
and
add
and
sub
cmp
mov
fucomip
or
call
xor
daa
push
sbb
xor
or
dec
xchg
lods
pop
add
jae
imul
popf
dec
jmp
pop
lcall
das
aad
daa
push
pusha
out
aam
loope
sti
test
jle
mov
add
faddl
and
pop
pushf
jne
add
and
cld
or
add
lret
cs
add
pusha
or
mov
cmp
ss
dec
or
jle
mov
add
cmp
sahf
jecxz
mov
add
xlat
cld
add
add
shr
push
imul
add
imull
jnp
push
popa
jbe
daa
pop
xchg
pushf
aas
hlt
xor
fmull
cld
jp
adc
push
pop
repz
dec
repnz
pop
sbb
cmp
pop
insb
xor
shl
jb
jge
lock
mov
add
ret
jmp
mov
ja
cmp
adc
jmp
insl
or
pop
jge
xor
lds
push
or
pop
adc
adcb
pusha
push
pop
sbb
xchg
repnz
adc
pushl
push
adcl
ljmp
imul
cmp
add
sub
scas
or
push
repnz
sub
sbb
adc
jl
jmp
mov
jp
push
in
gs
pop
xchg
pop
push
stos
fisttpll
and
push
std
pusha
push
mov
in
std
mov
push
push
lahf
inc
cmp
push
sar
inc
push
pop
pop
fildl
xlat
mov
sub
pop
std
or
pop
jno
test
or
lahf
add
inc
scas
pushf
negb
mov
adc
addl
addr16
push
push
jle
rol
stos
je
dec
fs
adc
inc
inc
sbbl
fs
scas
and
shl
add
push
adc
xor
add
dec
mov
sbb
push
or
push
daa
add
pop
inc
or
jg
inc
sub
xchg
stc
dec
imul
lock
or
xchg
push
in
xor
mov
bound
mulps
in
repnz
std
out
inc
outsl
rorb
adc
dec
xchg
scas
mov
push
mov
gs
dec
xor
inc
idivl
add
inc
out
and
ret
movsl
incl
pop
mov
xchg
jnp
sub
aas
and
test
add
mov
sub
or
pop
xor
out
inc
sub
jmp
roll
mov
or
inc
push
mov
pop
cwtl
xchg
fimuls
pop
les
sbb
daa
pop
dec
and
daa
sub
loope
dec
loopne
bound
testb
push
sub
int
inc
setno
mov
sub
or
adc
jl
shll
outsb
mov
mov
jmp
sarl
dec
and
xor
jmp
call
pop
mov
cmc
add
mov
sub
sub
das
mov
addl
push
jle
aaa
and
jbe
pop
imul
sbb
jecxz
cmp
mov
xor
push
mov
jno
fnstcw
jb
push
repnz
daa
push
pop
add
jbe
mov
and
loope
outsl
jg
leave
test
shlb
jmp
test
sbb
inc
mov
dec
test
and
fs
out
les
and
mov
rorl
cli
mov
fcmove
clc
imul
jmp
js
es
pop
add
mov
test
test
sub
sbb
sti
pusha
or
adc
enter
mov
in
lret
or
and
mov
leave
js
pop
fisttpl
push
jmp
dec
jmp
iret
pop
dec
cld
push
into
mov
push
cli
pushf
pop
out
mov
nop
ficompl
mov
sbb
adc
and
or
add
adc
xchg
xor
cwtl
mov
xchg
adc
fimull
add
push
sub
pop
pop
pop
inc
or
xor
mov
jg
mov
and
pop
push
jmp
lods
push
or
mov
jp
fistps
xchg
outsl
add
and
mov
adc
jmp
pop
aas
mov
fimuls
test
pop
mov
and
jmp
pop
icebp
stos
rorb
push
mov
jo
xchg
cmpb
adc
repz
incl
dec
aam
int
xlat
adc
adc
movsl
std
push
outsb
sbb
adc
inc
jle
jge
icebp
add
mov
push
push
mov
pop
mov
pop
add
lock
push
adc
xchg
push
xchg
not
or
or
mov
xchg
shrl
and
out
jnp
cmc
push
js
jmp
aad
mov
cmc
sbb
pop
inc
rol
insl
pop
into
scas
pop
andb
sbb
mov
cmp
sub
bound
mov
dec
loopne
pop
sti
sub
leave
lods
sti
add
push
mov
mov
push
jl
sub
and
mov
cmp
and
xor
add
adc
sub
cmc
cmp
testl
fwait
and
sub
rcll
dec
mov
test
mov
cmc
loop
sbb
jl
sbb
addb
and
xchg
pop
jg
push
das
stos
push
xchg
mov
pop
repnz
mov
mov
push
loop
insl
in
mov
ds
pop
shl
lock
scas
out
clc
cmp
scas
lret
enter
flds
out
in
in
or
adc
sbb
jge
sub
and
dec
arpl
or
aad
imul
lods
enter
mov
add
les
mov
or
loope
test
mov
cltd
cltd
mov
xor
push
data16
mov
or
aaa
js
xorl
and
std
or
sub
pop
and
pop
je
les
cmpsl
jl
pushl
aaa
and
and
add
daa
xor
pop
jg
pop
ljmp
add
push
jnp
xor
sub
xor
jb
insl
pusha
xor
mov
pop
add
mov
push
pop
or
or
shrb
pop
add
out
jmp
xchg
jecxz
and
cld
cmpsl
test
xchg
cmp
hlt
fldenv
jl
and
add
push
shld
out
inc
repz
jmp
add
sbb
outsl
sub
das
add
xor
jg
loope
in
sub
xchg
sub
inc
xchg
sub
adc
rorb
dec
xor
pop
and
stc
orb
adc
jecxz
mov
ljmp
hlt
push
xchg
sbb
push
pop
das
sub
sub
or
push
push
icebp
daa
jge
inc
shll
imul
mov
xchg
jns
dec
add
push
negl
cmp
fnstcw
dec
or
add
jo
out
imul
popf
xchg
push
lret
testb
and
sarl
xchg
ficoml
sub
and
mov
pop
gs
mov
push
dec
jg
and
andb
sub
push
popf
add
mov
add
shr
fwait
mov
jmp
push
jmp
ror
fnstcw
fwait
push
int
sub
sub
bound
dec
sub
inc
daa
in
hlt
xchg
and
lahf
push
lfs
sarl
pop
add
pop
and
push
sub
jno
add
insl
and
into
jle
and
inc
sub
pop
call
pop
rorb
dec
cmp
out
push
cwtl
jo
push
push
jmp
cld
pop
mov
adc
dec
arpl
pop
pop
gs
sbb
jb
cmpsb
mov
mov
daa
mov
cld
outsb
sbb
pushf
arpl
outsb
jne
scas
out
mov
xor
xor
adc
stc
ds
es
aas
sbb
pop
push
sahf
add
jnp
or
push
pop
std
sub
mov
mov
sbb
pop
pop
lcall
out
loope
sbb
jmp
inc
cli
jmp
jge
cmp
adc
pushw
jge
insl
jmp
mov
push
xor
cmc
push
jmp
or
test
or
pop
test
sub
push
mov
pop
les
push
and
sub
aad
add
xchg
xor
sub
mov
xchg
rclb
rcll
pusha
xchg
push
and
adc
mov
pop
dec
daa
cs
mov
loop
xor
jmp
stos
xor
xor
push
push
mov
jbe
jns,pn
push
adc
shr
nop
add
sub
dec
pop
or
inc
in
mov
xor
stos
imul
out
lahf
xor
xchg
pop
pop
push
inc
mov
bound
arpl
lcall
and
jno
imul
xor
dec
push
sub
fs
cmp
pop
cmp
add
sarb
xor
inc
mov
xchg
mov
push
push
out
xchg
and
push
ljmp
add
jmp
std
stc
leave
cmp
sub
std
pop
sub
pop
xchg
jge
jmp
inc
pop
in
xchg
pop
inc
mov
int
cmp
or
push
jb
push
sub
push
shlb
cmpb
bound
cmp
pop
push
jmp
cmp
or
nop
mov
repz
cmp
sub
outsl
dec
enter
jle
push
mov
in
cmpl
or
movq
ret
das
jae
or
push
movaps
leave
popa
std
lods
xor
inc
movsl
cmpsl
xor
mov
xchg
xchg
fisubrs
sub
lcall
sub
data16
cmp
sahf
xchg
into
test
fs
xor
nop
popa
loop
jnp
mov
dec
div
sbb
in
xor
incb
push
iret
jg
ffree
jmp
ret
pop
movsl
dec
push
scas
fwait
es
push
inc
out
pop
cmc
mov
inc
das
pop
pop
jne
mov
add
jns
cwtl
dec
add
xor
add
pop
aad
or
pop
push
pusha
loope
inc
ljmp
repz
push
add
clc
push
mov
repnz
sbb
sub
lock
loopne
sub
das
xor
cmc
dec
mov
subb
stc
lea
cmc
mov
rolb
pop
sub
inc
es
mov
stc
hlt
inc
in
insb
jo
or
pop
jae
mov
stos
cmp
mov
out
mov
jmp
and
dec
mov
scas
cli
popf
fistps
mov
inc
add
push
dec
pop
jb
scas
dec
js
jne
xorb
in
push
inc
scas
and
dec
loopne
inc
or
sbb
outsl
mov
out
mov
hlt
inc
xchg
mov
add
jbe
mov
mov
cmp
or
mov
jnp
fnstenv
ljmp
test
or
repz
push
or
pop
mov
rorb
dec
ds
jns
add
mov
jp
movsl
clc
dec
sbb
push
push
inc
push
shrl
andb
add
dec
mov
xor
sub
jno
mov
cli
cwtl
dec
push
push
push
lds
sbb
push
mov
xor
les
push
ret
cmpl
push
pop
inc
out
pop
adc
fs
adc
sub
sti
lcall
mov
fwait
sub
sub
xchg
fldenv
jmp
pop
andb
jge
push
jbe
adc
dec
dec
mov
call
dec
dec
jmp
sbb
adc
rorl
adc
jbe
add
push
sahf
adcb
or
push
sbb
cmc
movsb
clc
sub
jle
nop
inc
in
ret
out
push
mov
jno
pop
lret
shr
sub
add
sub
pop
cmp
mov
outsb
out
jnp
call
jge
xlat
repnz
mov
sarl
mov
int3
cmp
pop
mov
lock
and
sub
lds
aas
inc
or
push
jno
shrb
out
xchg
pop
xor
gs
mov
mov
vpsraw
adc
sub
inc
dec
shll
in
sbb
mov
and
ds
add
mov
call
ret
inc
sbb
adc
lcall
adc
add
sub
mov
xor
leave
push
push
pop
movsl
add
loope
pop
scas
aaa
cwtl
jno
dec
add
or
mov
filds
cmpb
fsubrs
subb
int3
fwait
and
cmc
not
or
add
push
xchg
push
cmpb
cld
cltd
dec
mov
inc
mov
das
mov
add
pop
repnz
std
inc
or
icebp
div
add
nopl
mov
cs
aam
test
call
dec
ja
shlb
jl
push
sub
cltd
push
push
jmp
jp
in
loop
adc
out
rorb
fildll
imul
outsb
addr16
mov
ja
pop
mov
shr
cwtl
jl
adc
jne
push
aam
ds
imul
dec
cmpsb
fs
popa
push
pop
xchg
add
nop
adc
cmp
testl
mov
pop
ljmp
add
inc
adc
pop
setno
mov
hlt
pop
pop
adc
adc
cmp
xor
mov
lea
and
sbb
push
insb
or
add
stos
jp
jns
popf
push
inc
sbb
test
shll
fwait
add
cmp
mov
mov
xchg
inc
or
pop
lret
in
into
mov
xchg
inc
pop
pop
std
dec
pop
pop
cli
sub
stc
imul
pop
jne
sub
mov
insb
outsl
pop
test
out
cmpb
sbb
adc
jne
repnz
add
xchg
pusha
mov
lea
fs
mov
xchg
or
shll
bound
push
or
or
sbb
inc
imul
popa
dec
or
cmpsl
outsb
or
mov
or
mov
jge
adc
test
mov
sti
xor
loope
decb
scas
ret
jne
lahf
cmp
pop
or
push
add
adc
ftst
movsb
pop
adc
mov
lock
vcmpps
dec
cmp
push
lods
les
mov
xor
lcall
scas
lock
and
jno
loop
or
andb
dec
push
dec
and
or
push
iret
xor
push
inc
inc
xchg
sbb
add
faddl
or
rclb
sbb
or
fimull
jmp
mov
lock
jmp
sbb
sbb
mov
push
push
mov
aas
stc
rorl
sbb
cltd
cmp
cwtl
mov
dec
add
mov
mov
jl
sub
add
mov
scas
xchg
test
in
sub
and
sub
xchg
jae
pop
insb
jmp
xchg
push
cmp
nop
aad
mov
es
stos
pop
pop
pop
adc
mov
dec
mov
sub
mov
and
pop
pop
xor
mov
fadds
rcll
add
push
out
add
push
movsl
and
int3
sub
enter
xlat
fdivs
inc
lock
mov
cmovnp
test
jle
and
inc
push
stos
loope
imul
mov
pop
iret
leave
icebp
out
lock
push
out
lret
lds
cli
jmp
ret
mov
imul
mov
push
jnp
sub
sub
inc
adc
add
and
dec
pop
add
orb
inc
fldl2e
cmp
push
insb
gs
push
stc
and
xor
sbb
xor
shr
cwtl
push
es
pcmpgtd
cmpsb
add
cmc
add
int3
in
cli
lahf
pop
or
push
dec
push
pop
jg
testl
sbb
push
adc
inc
out
dec
pop
mov
xor
dec
pop
inc
fldl
mov
sbb
add
jbe
push
loope
cmp
sub
stos
adc
and
or
push
jmp
add
jecxz
enter
mul
ret
mov
sti
sbb
xchg
push
add
and
xor
aam
adc
add
cmp
dec
inc
dec
xor
ds
cld
pop
jmp
popa
jne
and
pop
mulb
ss
lahf
dec
out
xchg
inc
pop
jmp
lret
std
int
and
scas
imul
inc
add
sub
idiv
mov
stc
sbb
add
sub
push
adcb
or
or
sbb
xor
ret
ljmp
or
push
xchg
fldenv
xor
dec
cmpb
wbinvd
add
sub
ret
movsb
mov
or
xorb
xor
sbb
sub
lds
and
sbb
push
aaa
inc
mov
shll
push
push
sahf
mov
mov
push
fmul
dec
dec
push
fiadds
push
add
or
sbbb
fbstp
jnp
dec
push
mov
pop
xchg
jmp
jno
jecxz
sbb
push
push
xchg
mov
cmp
daa
daa
cltd
std
or
out
xchg
rorl
ret
xlat
sub
mov
cmc
mov
mov
mov
push
cmp
mov
push
mov
ret
pushf
sbbb
sub
andb
test
push
jb
popf
jmp
adc
lock
mov
adc
cmp
call
adc
push
push
daa
clc
outsl
pop
push
mov
lds
cmp
jbe
in
xor
and
jne
cli
push
jg
push
loop
sub
and
js
fisttpll
addr16
sbb
or
xor
scas
add
imul
cmp
xor
loop
push
jmp
jns
mov
xor
and
xor
jmp
pop
sub
mov
test
cli
ljmp
aaa
push
inc
sbb
cmpsb
adcb
xor
bound
movb
pop
dec
je
sbb
ret
sub
mov
mov
mov
add
aaa
push
loope
popa
push
inc
or
mov
gs
add
lea
xor
and
xchg
js
dec
cld
std
mov
bound
testl
push
dec
pop
push
adc
mov
aad
add
add
push
dec
xchg
dec
add
push
sbb
lcall
pop
xchg
or
repz
pop
das
push
pop
push
jp
jg
push
xor
pop
repnz
mov
fwait
push
jmp
insl
push
pop
pop
sub
jmp
xchg
mov
int
shr
and
inc
popa
pop
movsb
out
sub
and
mov
lods
shr
leave
das
ljmp
pop
stc
cltd
faddp
jge
dec
push
xor
mov
or
jmp
daa
jl
pop
add
xor
mov
dec
scas
sub
lock
adc
mov
push
mov
and
push
mov
ljmp
sbb
jo
push
or
cmc
addr16
sub
lahf
inc
or
mov
or
fldt
and
mov
or
mov
jmp
cld
jp
inc
push
jmp
lea
sub
repz
cmp
ds
add
sub
xor
mov
pop
push
in
add
ret
jbe
or
cmp
inc
push
add
in
pop
inc
jnp
mov
xchg
pop
sbb
mov
jmp
sub
cmp
jl
dec
addl
pop
clc
push
push
and
jmp
push
jmp
lods
sub
es
or
inc
add
fstpl
jb
stc
or
jbe
fildll
push
or
pop
stos
adc
sub
add
popa
xlat
xor
add
add
movsb
out
ljmp
mov
mov
jl
xchg
jmp
sbb
mov
outsl
test
divb
push
pop
rcrb
or
pushf
mov
fists
add
stos
das
fbstp
fidivrl
stos
cmp
xor
xor
jg
push
rcrl
sbb
adc
loope
ret
jo
jae
daa
xor
adc
xor
fstps
jge
sub
mov
pop
push
xor
xor
add
jb
outsb
or
push
cmp
fldt
lret
scas
repnz
xor
push
sub
and
add
jnp
mov
addr16
pop
mov
push
add
jge
add
and
sbb
xor
mov
inc
cwtl
aam
xor
test
cltd
and
in
add
mov
fs
loop
rorb
in
ficomps
mov
pusha
inc
fsubs
cltd
push
jle
rolb
je
das
xor
fisttpl
push
cmp
and
jecxz
or
gs
or
sbb
sub
fiadds
test
out
sub
jnp
and
popfw
pause
push
push
xor
push
aaa
add
leave
jl
fadd
adc
arpl
jmp
test
mov
sub
lcall
pop
sbb
pusha
dec
ret
pop
pop
xchg
stc
push
push
filds
xor
push
jl
push
rdpmc
test
flds
lods
test
mov
jg
xchg
loop
and
jbe
add
push
and
lods
nop
xchg
cwtl
movsl
rcrl
stos
or
mov
jg
cmp
sub
lock
lcall
adc
pop
pop
cmpsl
pop
out
ficompl
xchg
xchg
out
fldl
sub
mov
xchg
out
cltd
ret
and
iret
xchg
aam
jp
push
mov
sbb
xchg
mov
pop
fwait
adc
in
lahf
pushf
or
dec
and
pop
iret
icebp
jmp
jmp
lds
lock
dec
add
push
rorb
enter
xchg
lds
mov
hlt
daa
mov
xor
pop
shll
jmp
dec
add
mov
xor
lahf
cs
fistps
cmc
mov
mov
inc
pop
add
xor
cmp
mov
insb
cwtl
add
fmull
addb
mov
or
arpl
into
pop
shrd
push
xchg
mov
jl
imul
push
pop
lods
add
inc
pop
or
and
adc
ret
daa
sahf
out
out
unpcklps
lret
sbb
movsb
cmpsb
dec
or
sub
add
jmp
inc
adc
cmp
js
mov
cmp
outsl
out
pop
stos
fs
mov
jg
cmpsl
sub
push
cwtl
add
sar
jnp
jl
loopne
or
in
adc
dec
adc
add
pop
pop
pop
xchg
leave
push
ja
xor
dec
pop
add
mov
rol
stos
fldcw
inc
stos
adc
adc
xlat
pop
add
mov
icebp
push
mov
jmp
mov
and
and
add
sub
subb
pop
sub
sbb
and
orl
xor
lret
test
and
jmp
out
xor
push
adc
cmp
jno
test
mov
sbb
mov
add
mov
push
int3
sub
pop
adc
pop
scas
cmovge
push
lret
pop
jge
ja
fcompl
ss
pop
inc
or
test
jle
adc
cmpb
mov
in
pop
jecxz
jbe
inc
xchg
mov
ss
inc
adc
out
push
fldt
out
in
lock
add
jle
mov
mov
mov
sbb
add
jmp
mov
sub
xor
andb
sub
mov
int
daa
inc
dec
jge
mov
xorb
mov
sub
pop
jmp
frstor
dec
cmp
sbb
es
aam
popf
cmp
je
push
pop
lods
cmp
dec
adc
data16
pop
rcll
add
jmp
sbb
mov
pop
push
ret
loop
test
lock
pop
jo
cmpsb
and
cmp
pop
popa
pop
fwait
or
pop
int
jbe
mov
inc
mov
pop
and
or
mov
push
or
sbb
lock
loopne
and
push
dec
or
ljmp
mov
pusha
repz
or
adc
pop
cmp
daa
cmp
cmc
shll
push
roll
cmp
push
dec
in
nop
mov
popf
push
mov
lahf
inc
mulb
das
sub
cmc
frstpm(287
dec
pop
rclb
loope
loopne
ss
jle
inc
pop
xor
mov
pop
data16
jmp
jne
loop
or
mov
add
loopne
lock
mov
dec
lcall
pop
dec
xchg
rolb
mov
inc
aaa
movsl
inc
sub
mov
cs
enter
and
add
fldenv
aaa
dec
or
loope
push
add
sbb
sub
je
jecxz
cmpsl
scas
adc
mov
jecxz
shlb
inc
pop
xchg
xor
shr
mov
pop
neg
push
movsb
sub
add
ds
roll
rcl
call
or
pop
decl
dec
popf
add
jmp
add
clc
mov
push
clc
std
dec
xchg
mov
add
adc
iret
bnd
jmp
pop
push
cmp
popf
fcoml
gs
shll
adc
lahf
hlt
cwtl
ret
std
sub
mov
dec
lods
pop
jns
xchg
mov
or
test
clc
insb
mov
in
lods
das
pop
fdiv
imul
mov
sahf
push
cld
loopne
negb
add
xor
stos
xorl
mov
mov
int
dec
adcb
and
pop
insl
das
jmp
xor
and
xchg
dec
pop
fwait
sti
sbb
cli
jb
adc
andl
push
in
cli
test
or
xchg
or
xchg
int
cmp
int
enter
mov
fsubrs
push
dec
not
mov
add
in
inc
insl
stos
insb
or
test
jmp
testl
test
sbb
sub
xchg
jecxz
mov
fdivrl
rcrl
into
sub
pop
inc
mov
inc
push
add
adc
out
out
roll
inc
les
in
pop
add
jl
xchg
mov
lahf
jle
pop
jmp
loop
daa
pop
push
adc
sbbb
loope
mov
rsqrtps
mov
jno
jns
popa
jmp
xchg
add
cmpsb
mov
mov
sub
jo
clc
mov
jle
sbb
aam
inc
ret
mov
cltd
pusha
jae
es
in
or
imul
or
pusha
pop
in
lea
xchg
add
pop
sub
icebp
mov
shrb
and
mov
mov
movsl
or
add
in
int
cmp
dec
sbb
call
repnz
jae
add
add
xor
push
push
push
push
fucom
sub
loope
push
ds
xor
shlb
int
aas
sub
sbb
test
fcoms
insb
inc
in
dec
jmp
movsb
jno
cmpsl
cmpb
dec
add
pop
push
push
mov
or
xchg
sub
and
cli
xchg
jb
mov
mov
add
mov
xor
mov
push
adc
cmc
or
jge
cwtl
and
cwtl
xchg
and
add
pusha
inc
push
sarl
nop
add
adc
mov
cmp
pop
cltd
sti
lock
les
and
into
cwtl
mov
js
ret
add
pop
add
sub
clc
sub
fimuls
xor
std
pop
mov
jp
nop
add
sahf
and
lahf
pop
or
sub
into
incl
imul
xchg
xchg
data16
inc
popa
loop
cmp
flds
inc
mov
jp
int3
addr16
out
into
jae
lods
mov
mov
or
arpl
dec
push
pop
or
pop
fisubrs
mov
pusha
pop
jmp
bnd
pusha
out
hlt
mov
cltd
dec
fidivl
jno
stc
xor
jne
sub
outsb
sub
into
test
and
push
or
in
pop
loope
fists
scas
push
mov
jno
out
mov
jecxz
in
cmp
inc
jns
or
je
test
lods
addr16
adc
es
push
adc
fdivrs
add
xor
xor
xchg
push
addb
dec
fsubl
or
sub
mov
inc
mov
xor
int3
push
mov
movsb
iret
mov
pop
inc
or
pop
xor
xchg
jns
and
or
xor
and
sbb
inc
push
jmp
negb
sbb
or
outsb
fildll
add
cmpsb
aas
pop
xchg
test
shl
cmp
je
mov
dec
loop
pop
iret
insl
jne
out
and
or
mov
rcrb
pop
adc
lds
or
inc
and
mov
mov
inc
cmp
adc
int3
pushf
cli
lret
ds
jo
add
xchg
xor
pop
xor
fcompl
jb,pn
or
ljmp
or
push
dec
jne
std
cmc
xchg
scas
pop
adc
sahf
cli
cltd
jmp
jae
dec
aas
imull
and
fisttpll
loop
fcmovu
and
lahf
aam
adc
inc
xor
and
call
push
push
xor
bound
mov
xchg
out
or
mulb
cmp
pop
in
jns
xchg
or
stos
dec
ds
test
test
enter
mov
mov
add
roll
mov
and
neg
int3
or
push
xor
and
jg
mov
push
arpl
iret
das
pop
pop
jle
bound
mov
iret
lret
ret
fimull
fdivr
add
adc
inc
dec
movsb
bound
add
ds
jg
ds
xchg
int3
xchg
adcb
dec
bound
pop
xchg
dec
aas
add
sub
in
outsb
jecxz
pop
add
idivl
add
dec
dec
test
ds
or
arpl
bound
test
stc
int
or
sarl
or
cs
pop
je
sub
push
sbb
ljmp
xchg
sub
sub
and
push
lods
mov
sub
pop
clc
mov
xchg
cmpsb
or
mov
add
ret
xor
dec
xor
xlat
icebp
or
or
sub
enter
xchg
xchg
jmp
jb
inc
jecxz
mov
push
sub
mov
mov
or
sbb
and
sar
icebp
fucomi
fldenv
mov
push
pop
and
add
jmp
testl
icebp
add
cmp
or
mov
lret
dec
pop
or
push
mov
testl
xorb
cmpl
dec
pop
cli
pop
and
es
add
das
xor
iret
lret
fs
inc
and
push
roll
lods
cmp
jmp
push
pop
push
jl
jo
push
mov
pop
or
ss
jmp
mov
mov
xchg
add
inc
add
add
fwait
popa
jmp
jle
sti
cmp
push
add
jmp
sub
cld
movl
push
decb
in
cmp
sub
pusha
mov
cmpsl
xor
sarb
sbb
test
mov
dec
in
test
daa
mov
xor
pop
lret
add
or
dec
aaa
shlb
fs
jg
data16
pushf
push
orb
sti
add
sbb
or
mov
or
in
inc
je
les
insb
or
sbb
mov
xor
adc
sub
inc
inc
adc
inc
dec
inc
pop
cwtl
inc
xchg
mov
bound
xchg
mov
sbb
leave
pop
add
add
outsb
add
add
notl
js
jle
repz
adc
out
pop
int3
arpl
arpl
or
js
mov
adc
or
jae
adc
adc
xchg
std
sub
adc
pop
xchg
popl
xlat
cmp
aas
lcall
or
mov
and
or
in
in
push
push
inc
aam
sbb
mov
or
jae
neg
adc
sbb
loope
xchg
adc
test
adc
cmpsl
inc
push
in
arpl
jno
and
jnp
int
and
and
and
and
and
and
xor
xor
and
mov
jle
add
mov
ret
into
inc
and
subl
pop
andb
push
nop
push
lahf
add
add
and
mov
fadds
add
push
and
xor
addb
mov
sub
ss
pop
popa
pushw
fwait
sbb
imul
adc
aas
sbb
insl
inc
or
inc
test
pop
push
pop
shrb
into
mov
jge
dec
sbb
or
push
cmpl
cltd
push
pminsw
ja
xchg
push
test
push
add
add
add
hlt
mov
inc
sbbb
xchg
jl
cmpl
adc
push
data16
add
sbb
addr16
and
and
and
and
jns
cmp
xor
cwtl
mov
jmp
stc
sbb
sub
rcr
xchg
inc
shlb
stos
and
pop
rcrl
mov
add
cmp
inc
call
ss
mov
push
mov
icebp
push
pusha
and
clc
jmp
adc
ss
xchg
mov
inc
adc
add
sub
in
sub
xor
ret
neg
push
add
sti
push
mov
push
push
xlat
mov
lea
cmp
into
rcl
movsb
jno
inc
mov
call
enter
add
pop
push
mov
sub
pusha
pop
jmp
clc
addb
sub
push
or
push
jmp
pop
pop
push
push
lret
sahf
pop
pop
mov
inc
push
cwtl
arpl
push
sub
and
aas
xchg
add
ret
pop
cmp
inc
lcall
inc
adc
loopne
mov
js
xor
jle
dec
rol
gs
jmp
iret
pop
je
and
adc
stos
dec
scas
adc
scas
push
mov
pop
pop
pop
stc
sbbl
adc
arpl
jmp
in
push
push
xor
push
mov
pop
cwtl
adc
mov
jmp
sarl
add
insb
xchg
aam
mov
cs
test
push
fs
inc
mov
stos
mov
jae
pop
incb
movsb
sbb
or
and
loopne
and
fildl
out
xchg
mov
rclb
sub
add
jo
xchg
aad
stc
addl
das
iret
adc
lds
or
push
mov
push
mov
shlb
jmp
aad
pop
adc
call
daa
inc
jb
or
add
push
and
or
adc
insb
push
clc
cmc
or
dec
xlat
or
das
movl
mov
push
mov
jl
or
int
notl
add
in
push
jb
iret
adc
out
jae
sub
dec
pop
fadds
adc
add
jmp
movsl
icebp
jmp
or
mov
std
pop
mov
not
inc
fcos
enter
mov
daa
icebp
inc
gs
sub
neg
not
ljmp
outsl
sbb
pop
je
mov
cli
cmp
sbb
movsl
repnz
push
bound
jp
imul
imul
xchg
add
arpl
scas
addb
je
push
dec
insb
or
pop
adc
and
push
add
jg
sub
jle
adc
mov
add
xor
repnz
push
push
adc
and
add
or
mov
idivl
aas
dec
jo
push
jmp
pop
and
xchg
icebp
imul
out
adc
jecxz
jmp
pop
push
pop
push
ljmp
push
lcall
sbb
nop
divl
loopne
cmpsl
stos
push
jp
adc
mov
jns
lods
cmpsb
add
sti
add
mov
rorb
inc
jle
int3
pop
or
out
pusha
jg
dec
test
push
xorb
add
cld
in
cmc
dec
mov
repnz
push
jbe
xchg
lds
stos
add
cmp
mov
push
cmp
or
cli
dec
push
push
xchg
orl
or
outsl
loop
test
out
cmp
into
into
cwtl
sbb
repz
daa
jmp
testl
xor
push
and
inc
dec
cmpsl
jae
or
pop
push
mov
aas
add
nop
in
or
arpl
js
sbb
repnz
jmp
add
bound
cmpsl
inc
repnz
sbb
push
push
or
jnp
or
sbb
out
push
add
neg
mov
jmp
ljmp
test
addr16
maskmovq
testl
add
addr16
insb
sub
lret
sub
dec
mov
addr16
push
push
xor
pop
push
mov
xor
xor
or
sub
pop
pop
aas
pop
pop
push
ja
mov
xor
test
jns
pop
es
dec
sbb
ss
jp
scas
ja
mov
pop
mov
out
jl
je
outsb
add
imul
out
push
loope
insb
sti
outsb
mov
push
add
loop
pop
stos
lea
andl
push
pop
pop
jmp
mov
fnstcw
dec
pop
push
add
shll
mov
out
daa
cs
sbb
stc
pop
sub
cmpsl
arpl
ficompl
repz
call
out
adc
mov
adc
cmp
push
out
jle
adc
push
jmp
pop
add
pop
jmp
dec
xchg
aad
mov
daa
mov
cmp
dec
ja
cmp
add
mov
out
jmp
xchg
pop
xor
sub
jo
add
inc
imul
pusha
add
pop
xor
mov
add
fwait
cmp
js
mov
pop
sub
and
jno
xor
scas
add
xor
repnz
dec
inc
jg
adc
jmp
mov
jae
and
push
sidtl
and
or
ds
movl
mov
push
popa
clc
pop
pop
mov
or
cmc
push
push
push
pop
lret
xchg
jge
int
add
mov
push
shlb
loopne
pusha
sub
adc
add
inc
pop
or
jle
rclb
sub
bound
rorl
or
data16
push
jb
pop
mov
int
xor
das
mov
xchg
xchg
pop
rclb
inc
pop
sbb
imul
ljmp
and
add
je
das
sub
cmp
aad
adc
leave
mov
lods
pop
loopne
and
pop
or
aas
ja
cmp
dec
cmc
jo
xchg
lock
jmp
jbe
xchg
mov
inc
sub
mov
and
out
mov
mov
adc
inc
mov
ret
and
andb
and
pusha
imulb
mov
ljmp
lods
lock
leave
sub
push
jmp
sub
out
pop
pusha
push
dec
cwtl
das
data16
imul
mov
pop
pop
das
or
pop
or
push
clc
mov
jl
dec
push
mov
add
pop
push
inc
cmpsb
sbb
push
jle
fsubr
into
mov
je
bound
mov
adc
and
push
sub
stos
mov
or
sbb
ljmp
test
jno
mov
push
push
ds
test
add
outsb
xor
pop
jnp
lret
dec
pop
cli
cmp
pop
cmc
repnz
jne
decb
out
add
flds
inc
repz
push
lret
dec
int
cmp
pop
pop
cmc
cmpsl
xchg
or
or
mov
ljmp
das
pop
mov
hlt
mov
xor
xlat
sub
jg
je
sub
outsl
clc
pop
ljmp
cmp
lret
add
inc
push
lret
jmp
pop
sbb
inc
mov
gs
mov
xor
in
adc
call
pusha
jns
inc
xor
xchg
mov
xchg
fstpl
push
inc
and
pop
fpatan
inc
mov
jmp
lds
inc
sub
pop
gs
dec
stc
lea
lret
mov
pop
push
out
sub
inc
repz
pop
clc
sbb
fucomip
or
movsl
mov
xor
add
sbb
jo
jp
das
mov
iret
mov
ljmp
mov
idivb
xor
lret
add
scas
xor
xor
movsb
pop
insl
xlat
or
jb
xor
mov
add
into
xchg
xlat
call
je
roll
mov
mov
xchg
xlat
hlt
sti
fsubrs
push
movsb
jbe
pop
scas
mov
ret
ss
add
lods
push
mov
ret
nop
mov
rsqrtps
dec
inc
stc
decl
movsl
jge
jle
xchg
cmpsl
push
cld
adc
inc
stos
rolb
jl
sub
sbb
inc
fistpl
pusha
daa
dec
sbb
xor
push
sub
adc
movsl
lret
xor
xsha256
cmpsb
adc
or
inc
rdpmc
adc
ljmp
incb
ret
imul
sub
popf
call
insl
pop
lret
mov
testl
pop
mov
pop
adc
ror
xchg
mov
cmp
addr16
stos
cmp
push
ret
mov
sbb
jge
dec
xor
rcrl
es
in
push
jo
imul
clc
repnz
inc
jge
mov
not
and
das
push
icebp
sub
dec
mov
mov
es
inc
pop
sub
mov
repnz
outsb
sbb
or
adc
add
in
icebp
stos
push
push
daa
push
push
push
out
sub
pop
scas
rclb
shll
out
fcoml
push
jmp
push
add
int3
jnp
jle
fucom
je
xchg
jp
sub
sub
pop
adcl
push
and
addl
jmp
fsubs
push
ss
mov
pusha
cs
lahf
leave
pop
pop
int3
or
xor
jbe
mov
outsl
rcrb
jmp
mov
xchg
push
mov
inc
mov
push
jl
add
shlb
bound
sbb
shlb
xor
pop
pop
pop
mov
out
es
aad
loop
dec
sti
aaa
std
repz
sbb
push
mov
cmc
jmp
stc
or
mov
aad
ljmp
inc
and
dec
xchg
sahf
pop
inc
adc
dec
jmp
xchg
and
mov
imul
dec
test
test
dec
cmp
adc
addr16
or
jge
sub
xor
adc
dec
fs
sub
or
jmp
dec
cmp
jge
push
mov
pop
sbb
loope
ljmp
xchg
ja
xchg
xchg
stos
orb
mov
jo
dec
fnstsw
ret
dec
jnp
jmp
add
sub
data16
fstpt
addb
xor
dec
jmp
out
jnp
jg
xchg
iret
insl
lods
or
sbb
adc
pusha
add
test
xor
push
ds
imul
int3
push
jecxz
dec
pop
aam
jmp
add
pop
fs
sub
pop
push
loop
es
jo
shl
jl,pt
cmp
jmp
popf
jg
push
lret
cmp
mov
stc
jg
add
mov
and
leave
sub
xchg
test
push
mov
xchg
inc
mov
pop
xor
sub
xor
inc
pop
mov
xlat
pop
mov
imul
jmp
inc
imul
pop
pop
jmp
rol
repz
mov
sbb
imul
add
jnp
leave
sub
xor
add
jmp
mov
sub
push
add
xlat
xor
idivb
adc
sub
int3
xor
mov
not
rorb
xor
movsl
mov
adc
jl
loop
push
ss
xlat
cmp
ds
sbb
mov
or
rolb
fdivrl
add
pop
subb
dec
xor
mov
jmp
mull
xor
xchg
shlb
jbe
cmc
xorl
sbb
in
xchg
in
mov
cmp
xor
cmp
aam
and
outsb
add
push
int3
icebp
lds
mov
cmp
sti
cmpsb
jle
lahf
adc
dec
inc
mov
jns
jecxz
dec
xchg
mov
xchg
ja
jmp
ljmp
sbb
loopne
je
xchg
enter
imul
test
cmovle
mov
push
sub
lcall
notl
les
rorl
xchg
jmp
push
cvtps2pd
push
shrl
pop
ds
pop
movsb
stos
mov
adc
or
add
mov
leave
push
push
stos
repnz
gs
aad
xor
popa
cmp
mov
push
adcl
cmpsb
outsl
jmp
mov
decb
stc
mov
pop
mov
add
roll
add
movsb
jb
xchg
fcompl
cmpsl
inc
fcoml
lods
xor
lds
movsb
lret
pop
cwtl
dec
pop
pop
stc
sbb
adc
push
and
add
sub
or
sbb
in
xor
and
scas
call
pop
jle
mov
push
test
lock
scas
std
or
xor
movsb
cmp
addl
or
add
jne
add
cmc
fdivrs
cltd
push
in
push
sbb
or
sub
mov
sbb
and
in
in
stc
pop
mov
insl
test
push
push
add
jge
cmc
pusha
sub
popf
fcoms
fdivr
out
adc
inc
pop
or
jp
inc
xor
outsl
or
mov
pop
xchg
push
bound
xchg
cmp
push
and
inc
push
sub
or
imulb
add
popa
lcall
cmp
gs
jge
and
mov
divb
pop
fcomip
lock
fsub
push
jl
add
xor
fisubrs
mov
movb
movsb
aam
gs
idivl
dec
mov
and
sbb
pop
jo
adc
rdtsc
cli
pop
cmp
pop
and
push
mov
adc
gs
mov
insb
pop
xchg
add
loope
imul
jmp
je
push
push
mov
xor
push
mov
cmc
mulb
adc
repnz
clc
cwtl
add
ds
sahf
mov
sub
sub
lahf
sbb
mov
jae
push
pop
xlat
xor
dec
add
cmp
or
cmp
and
sbb
jb
and
jecxz
loop
mov
push
mov
jmp
repz
or
and
or
insl
mov
frstor
aaa
sbb
dec
adc
ret
push
or
jns
jmp
inc
adc
repnz
push
push
cmp
pop
stos
dec
push
push
imul
loope
jge
lea
les
mov
repz
loopne
pop
and
dec
push
push
out
jl
cmpb
and
xor
ja
jp
stos
sub
out
mov
push
cmp
and
inc
mov
ds
stos
mov
repnz
or
daa
cmp
add
test
cs
or
jmp
adc
mov
and
sub
xlat
lahf
bswap
or
bound
in
test
testb
jecxz
add
movsl
ds
sub
mov
into
pushf
orb
es
aas
pop
mov
push
bound
ret
rcrb
jmp
add
xor
out
or
adc
popf
xchg
mov
aam
inc
clc
out
add
inc
mov
adc
jmp
stos
cmpsb
mov
imul
movsb
mov
pop
jmp
and
scas
lret
jp
leave
jg
clc
in
mov
adc
test
or
ret
cld
sub
xor
push
jnp
sbb
es
sbb
ds
jmp
pop
jb
xchg
pop
sub
ljmp
cmp
jl
sbb
fldcw
or
in
pop
mov
jecxz
rcr
lock
ljmp
sti
sub
adc
gs
xchg
pop
cmp
jl
add
or
adc
fadds
xchg
xor
aam
sbb
out
shll
ds
popf
cmp
bound
lds
je
cltd
inc
xor
xor
je
sub
cld
loop
ja
hlt
mov
pop
fstpl
inc
mov
jo
push
push
pop
push
add
push
xchg
dec
ljmp
push
mov
or
neg
push
mov
jl
enter
lock
imul
pop
mov
inc
nop
mov
jnp
xchg
loop
sbbb
jb
rcrb
cs
fadds
inc
dec
jnp
repz
sbb
je
or
aaa
stc
das
jmp
mov
or
test
lock
popf
js
and
jae
or
or
lock
jb
cmp
push
mov
clc
mov
pushf
rcrl
jecxz
xchg
inc
jle
add
sti
xchg
sub
pop
std
sahf
inc
popf
gs
test
ret
test
aad
add
mov
mov
pop
aas
inc
sub
or
lahf
mull
dec
les
cmp
popf
or
cli
pop
mov
sbb
in
push
jb
add
or
imull
or
cmp
test
push
fwait
lds
movsl
ja
and
in
jge
pop
xorb
cmp
iret
fabs
inc
test
in
enter
adc
mov
cli
call
stc
cs
or
push
sub
pop
and
roll
add
imul
jecxz
adc
jmp
push
test
pop
adc
mov
dec
inc
pop
mov
mov
push
adc
mov
xlat
lock
add
nop
cmp
push
pop
cld
push
push
pop
jmp
pop
mov
xchg
mov
mov
or
out
mov
xchg
xchg
rorb
aam
fsubrs
lods
mov
call
scas
mov
mov
and
jp
sti
add
adc
or
inc
inc
xor
mov
retw
mov
cld
fbstp
xchg
add
xor
ror
pop
pop
call
sub
xchg
xchg
mov
push
aad
fadd
pop
push
fmull
adc
jns
cwtl
push
cmp
mov
ds
jg
and
inc
sahf
inc
sbbl
out
mov
cli
clc
xor
jmp
ret
adc
call
mov
push
mov
ds
cmp
lods
dec
xor
pop
xorl
cmpxchg
div
lock
jo
dec
das
jmp
cs
add
stc
leave
add
cmp
mov
jnp
cmc
scas
cmp
mov
sbbl
shll
push
cwtl
ret
pop
adc
inc
repnz
popf
mov
hlt
lret
add
scas
jno
imul
lock
dec
testl
mov
mull
add
jg
and
or
je
push
mov
int3
pop
adc
leave
push
pop
push
sub
adc
xor
lret
xchg
mov
js
sti
push
stos
push
xchg
mov
out
dec
mov
ljmp
or
shll
sbb
imul
in
dec
dec
push
xor
orb
sti
cs
pop
pop
mov
mov
into
jmp
scas
and
in
dec
jae
xlat
pop
add
xor
or
out
insb
cmc
test
sub
sub
or
pop
push
enter
add
pop
mov
jp
dec
iret
fists
sub
idiv
test
jae
jmp
mov
sub
outsb
pop
out
inc
add
mulb
inc
ds
cmp
push
cmp
ret
jbe
sub
xacquire
cmpsb
pop
out
jmp
sbb
inc
pop
outsb
cmp
adc
pop
ret
add
jmp
jg
dec
sbb
leave
sbb
aad
dec
add
pop
jmp
neg
or
mov
dec
pop
fwait
dec
cmp
rclb
loop
rclb
mov
data16
jmp
adc
in
mov
sub
cmp
aam
add
adc
jne
outsb
adc
xchg
dec
mov
sbb
out
shrl
sbb
int3
jmp
mov
shr
fcom
clc
pushf
dec
mov
add
movsl
push
dec
dec
cs
dec
xlat
or
std
fisubs
fists
dec
mov
test
negl
mov
adc
pop
mov
sub
add
cmp
dec
cmpsl
inc
aas
scas
fistpll
mov
adc
xchg
roll
sub
negl
cmp
mov
or
iret
push
push
test
test
shrl
push
sub
pop
adc
lcall
mov
mov
jmp
addl
pop
loope
sub
mov
add
lea
sub
sub
inc
pusha
cmpl
inc
cmp
mov
pop
cs
mov
dec
and
pop
jb
pop
mov
or
jmp
stos
std
inc
out
pop
mov
in
scas
sbb
xor
lahf
adc
pop
nop
cltd
adc
dec
jecxz
add
jl
rolb
push
inc
ret
test
lea
mov
add
into
sub
jmp
inc
test
xchg
cwtl
cmpl
jo
xor
dec
jg
push
es
jbe
jle
movsl
mov
stos
lahf
add
test
push
add
dec
je
xor
inc
xor
mov
and
out
push
xchg
push
or
fcmovu
mov
sti
in
cmpsl
scas
sbb
inc
add
lods
cmp
daa
push
add
lods
push
mov
adc
repz
stos
dec
jne
lock
mov
out
adc
shrb
or
xchg
in
sbb
movsb
imul
pop
dec
out
fadds
add
mov
and
mov
ds
out
fwait
add
sbb
cli
jbe
jb
jmp
call
adc
shrb
inc
insl
dec
sub
mov
rcll
push
mov
inc
mov
pop
mov
jle
sub
inc
and
add
imulb
cmp
out
or
and
popf
xlat
xchg
xor
pop
aad
push
mov
pop
lods
mov
sbb
add
mov
scas
push
xchg
fcoml
adc
dec
adcl
jl
xchg
stos
pop
imul
outsb
jb
push
dec
neg
arpl
mov
mov
cmc
aas
lock
mov
addr16
mov
adc
adc
int
cmpsb
test
xchg
sbb
push
rorb
and
and
sbb
repnz
pop
mov
add
sub
dec
jl
sti
inc
push
mov
add
inc
mov
out
ret
scas
dec
out
adc
arpl
sub
mov
rorb
sbb
pop
sbb
movl
jl
pop
out
mov
js
push
cmc
test
push
mov
xor
cmp
rolb
mov
inc
fistpl
loopne
bound
fsubrs
ljmp
and
mov
mov
mov
xchg
imul
push
adc
mov
sub
mov
std
cmp
sar
daa
aam
pop
popf
adc
cs
test
pop
cwtl
mov
jmp
enter
sub
aam
out
or
push
xchg
std
in
fimuls
inc
inc
scas
mov
or
orb
aaa
cmp
out
push
js
rol
stc
xchg
clc
lahf
mov
pop
jmp
icebp
push
push
out
mov
mov
in
mov
pop
xchg
notl
icebp
mov
sub
mov
inc
loope
leave
inc
popa
dec
int
sub
or
arpl
ret
mov
jno
xchg
fidivrl
adc
pop
push
arpl
pop
pop
pop
adc
pop
sbb
jmp
sub
dec
xchg
xchg
sti
fidivs
pop
dec
add
cmp
cmp
push
es
xor
or
pop
jbe
pop
xor
dec
in
cmc
add
lea
rorl
out
push
mov
dec
sarl
xchg
stc
pop
in
inc
adc
rcrl
ret
jmp
mov
xor
lahf
add
ret
cmpsb
sar
adc
add
insb
inc
jns
xchg
dec
mov
inc
sbb
lock
dec
push
lods
cs
outsl
cmp
xchg
popf
dec
inc
pop
pop
dec
and
push
xchg
jmp
fcoml
xchg
or
sbb
ficoml
add
aaa
xor
shl
in
jmp
and
fsubrl
adc
pop
xlat
in
mov
test
mov
test
call
js
call
aam
test
xchg
daa
mov
and
add
push
cmpb
push
or
stos
xchg
mov
test
adc
and
push
ljmp
push
dec
das
dec
push
xchg
xor
pop
and
sub
rolb
push
add
add
fucomi
inc
addr16
call
daa
jno
push
imul
xchg
cmpsl
inc
gs
in
sub
call
outsl
or
in
repz
sbb
int3
mov
iret
adc
scas
cmp
xchg
xlat
cmpsb
mov
mov
adc
push
cmpl
pop
shlb
jge
testl
bswap
cmp
test
jne
and
into
xlat
or
mov
mov
pop
and
dec
and
and
adc
test
int
popa
pop
cmp
push
push
push
mov
xor
lea
add
dec
add
mov
add
popa
mov
or
or
adc
stc
and
jo
std
mov
jmp
aam
mov
and
push
incb
jmp
aaa
xor
sub
jmp
sar
adc
xrelease
adc
in
push
jmp
inc
jmp
add
xor
inc
imul
lea
into
sbb
stc
jp
cld
jmp
orb
push
jmp
pop
clc
cmp
clc
xchg
pusha
add
lret
lahf
cwtl
jmp
add
inc
pop
xor
scas
mov
imul
enter
jl
out
movsl
fists
inc
pop
dec
scas
sub
adc
movsl
fstpl
sbb
divl
pop
mov
std
add
dec
and
jmp
insl
mov
iret
sub
mov
call
add
sub
jmp
sbb
or
xchg
in
test
cwtl
mov
inc
sub
add
cmp
mov
out
pop
sub
ljmp
dec
adcl
add
jo
adc
jmp
dec
pop
mov
adc
lret
mov
fiadds
cmp
push
stos
es
or
fldl2t
cwtl
sarb
cmc
shl
in
into
pop
push
lods
fwait
shufps
mov
arpl
fidivrs
cld
add
sbb
pop
inc
and
cmp
test
fisttpl
push
repnz
adc
clc
pop
adc
test
mov
xor
cwtl
popa
dec
mov
sub
fiadds
xor
test
adc
pusha
dec
test
and
push
push
jmp
loope
inc
cmp
dec
add
jle
mov
mov
and
or
jg
out
pop
xchg
xchg
mov
mov
rorl
test
test
adcl
mov
mov
sub
lock
xorb
movsl
inc
ds
frstor
shll
mov
adc
pop
add
add
jle
mov
cmp
aad
aam
push
mov
cmp
out
mov
mov
mov
pop
inc
daa
or
jno
push
inc
xchg
xchg
pop
rol
jbe
jecxz
xchg
cld
pop
or
mov
out
add
push
das
pop
xor
push
rcrb
in
pop
dec
mov
decb
lahf
jnp
daa
pop
in
and
leave
or
mov
ljmp
ror
std
dec
in
int
pushf
out
add
rol
xchg
pop
loop
cmp
inc
out
sub
dec
adc
notl
cmp
sub
xor
mov
inc
lcall
andb
outsb
lods
icebp
nop
lret
stc
shll
pop
rolb
cmp
sbb
neg
mov
jne
and
xchg
push
jmp
mov
jge
jns
cmp
pop
add
and
rcrb
loop
shrl
sub
pop
sub
int3
dec
pop
mov
lock
push
xor
aaa
adc
and
loop
mov
xchg
jb
sub
push
sar
out
xor
push
repnz
out
bound
notb
popf
sbbb
mov
add
and
mov
add
dec
pop
adc
inc
jl
lret
and
pop
mov
ds
das
adc
push
push
or
sbb
push
jmp
lock
and
movsl
fwait
scas
clc
lcall
cmp
push
jmp
mov
xor
int
pop
insb
mov
fs
cmp
sub
loope
inc
cmp
pop
adc
sbb
dec
aam
mov
push
das
mov
cld
scas
mov
int
bound
sahf
pop
pop
clc
mov
das
pop
xor
ja
jmp
cmp
add
lret
push
or
sbb
repnz
jmp
inc
mov
push
mov
add
jmp
and
push
pop
das
mov
addr16
xor
add
nop
dec
add
sbb
cmp
add
pusha
loope
mov
mov
iret
or
push
incb
fs
stos
icebp
inc
pop
lcall
sbb
mov
pop
cld
and
jo
bnd
lahf
movsb
xchg
push
mov
and
xchg
cmp
and
popf
orb
lret
add
push
mov
mov
inc
iret
dec
lds
dec
push
jmp
cmpl
test
mov
insl
adc
das
pop
mov
rorl
and
stos
fs
insl
orl
or
inc
sub
push
mov
sub
jns
mov
fcmovne
mov
insl
shll
das
jmp
icebp
adc
cmp
jg
jmp
in
testl
jnp
and
adc
add
sub
xchg
xor
adc
gs
xor
push
add
les
add
push
push
or
jmp
push
mov
add
jo
mov
and
loopne
mov
push
gs
push
push
sub
sbb
fs
mov
shr
mov
repnz
rolb
dec
pop
shl
xor
push
jmp
jmp
push
clc
aaa
ffree
inc
sub
mov
ffreep
repnz
inc
sub
outsl
mov
cmp
or
cmc
cwtl
adc
add
dec
and
repnz
sub
adc
addr16
sub
sbb
gs
adc
inc
push
and
xorb
imul
or
mov
loopne
push
push
jb
jns
xchg
gs
add
and
or
mov
out
push
adc
jmp
mov
inc
mov
pushl
push
xor
sub
xor
adc
sub
xchg
or
into
rcrl
in
push
push
and
jae
mov
inc
pop
sub
dec
nop
pop
inc
add
pusha
xor
add
shll
xor
andl
jno
add
push
inc
add
leave
and
rcrl
in
add
loopne
sub
cmp
ljmp
add
incl
add
push
test
push
je
sub
push
push
pop
push
neg
inc
aam
shlb
sbb
cmp
std
dec
xchg
roll
testl
enter
adc
ljmp
roll
pop
rol
pop
addb
xor
push
dec
pop
jl
fadds
lods
push
mov
adc
enter
jle
ret
mov
inc
push
and
loopne
push
mov
xorb
sub
jbe
addl
dec
sbb
inc
mov
mov
iret
dec
xor
mov
lcall
jle
jo
jbe
cmp
jg
pop
add
sbb
inc
fwait
ja
scas
push
lahf
pop
decb
or
adc
cmp
mov
jmp
push
out
mov
notl
cs
into
sbb
les
inc
add
jns
mov
push
dec
in
jle
inc
cwtl
popa
adc
mov
fucompp
xor
ljmp
or
pop
in
adc
loope
and
fists
and
push
jne
and
cwtl
ss
push
pop
rcrl
xchg
pop
push
or
cmpsl
sbb
inc
xchg
gs
inc
pushf
lahf
leave
sub
test
fbld
push
sub
mov
jo
push
xchg
push
into
fs
test
in
scas
pop
daa
fbstp
test
and
push
or
and
add
mov
add
xor
aaa
add
pop
jne
inc
jmp
pop
jbe
pop
and
lret
push
inc
test
enter
xchg
scas
push
je
pop
out
iret
das
dec
lods
jle
ljmp
mov
and
adc
push
sub
sub
mov
aad
pop
inc
shl
int3
pop
stos
ja
mov
lret
push
pop
push
call
pop
rcrb
mov
fsts
push
and
pop
decb
cmp
lods
inc
sahf
outsl
rorb
or
push
sub
or
sub
pop
jg
nop
cli
jnp
mov
pop
roll
and
shr
cmpsb
sub
mov
pop
in
push
and
inc
xor
pop
or
or
lret
dec
insb
sub
or
xor
imul
pop
loope
cli
jns
jle
test
add
testl
cwtl
aas
pop
push
inc
sbb
mov
pop
lock
mov
xchg
xchg
sbbl
pop
in
ljmp
jg
adc
sbb
fidivs
inc
cli
dec
jp
gs
pop
bound
mov
and
xor
push
clc
mov
add
loop
sub
popf
mov
push
jmp
push
dec
push
mov
loopne
or
pusha
inc
or
lds
fdivl
adc
mov
das
cmc
enter
mov
jbe
fs
test
pop
mov
test
jp
sub
mov
jae
pop
nop
sbb
cwtl
bound
mov
mov
dec
cltd
ret
pop
out
sbb
xor
in
aas
repnz
jmp
adc
add
or
fwait
repz
std
insl
das
jmp
jno
cs
int3
out
push
rorb
mov
xchg
push
pusha
push
sbb
rclb
popf
push
pop
decb
or
popa
sbb
int
jno
add
dec
lcall
aas
in
jns
mov
jmp
shl
out
or
sarb
in
mull
inc
pushf
stos
mov
fimull
addb
repnz
add
pusha
mov
mov
sbb
adc
fdivrp
inc
cmp
and
jg
push
sub
sbb
mov
cmovge
pop
cmp
stos
inc
jmp
pop
jns
lods
cltd
push
outsb
jb
inc
insl
push
cmc
mov
das
into
inc
xchg
push
ret
push
dec
dec
xchg
pop
mov
cmpsl
sbb
jne
and
inc
sbb
out
sbb
insl
pop
and
pop
push
loop
stos
ret
rcr
repz
cmp
es
repnz
jle
cmp
sbb
sub
push
jmp
cmp
dec
pop
adc
decl
cmp
add
pusha
shlb
add
jmp
je
loop
pop
ja
lret
shr
add
mov
push
or
mov
shr
and
out
jbe
and
pop
jle
lret
cmpb
push
out
or
adc
or
cmp
cmpsl
jp
cmpsl
js
inc
es
xchg
leave
dec
enter
cs
cli
add
mov
not
rcll
or
in
sub
or
fcomi
sub
adc
inc
outsl
std
jge
pop
add
jge
pusha
pop
sbbl
sub
test
mov
in
nop
sub
xor
mov
test
dec
jmp
out
sub
cmpsb
gs
out
add
dec
ret
push
lret
push
add
push
pusha
cmpb
das
enter
jmp
xlat
xchg
es
sbb
popw
xor
mov
imul
pop
in
imul
cmp
mov
pushf
inc
mov
mov
int
add
in
roll
imul
cmpsb
bound
subl
pop
mov
into
cwtl
adc
pop
je
sti
out
sub
dec
mov
in
mov
out
sub
sbb
mov
mov
insl
push
scas
mov
adc
int
iret
sbb
jp
cmc
or
mov
shrl
loop
jge
aas
imul
ss
std
xor
mov
and
pop
mov
jle
adc
fwait
test
dec
cmp
call
iret
popa
push
popa
outsb
fneni(8087
pushf
arpl
es
hlt
or
jns
mov
nop
mov
mov
ss
add
out
sub
shlb
add
lret
out
pop
fcompl
jl
das
inc
or
mov
cmp
les
test
mov
dec
push
and
js
stc
mov
sub
jg
push
xor
sub
push
or
push
adcb
nop
or
push
fwait
aaa
ror
sub
into
xor
and
push
pop
add
imul
xchg
push
xchg
ret
hlt
pop
push
mov
stc
mov
mov
inc
or
pop
stc
push
mov
push
fimuls
mov
mov
jmp
ds
cmp
test
popa
dec
add
mov
mov
xor
cwtl
mov
std
je
dec
scas
inc
dec
push
inc
rcrb
pop
not
push
lret
push
dec
sub
pusha
push
sbb
pop
fcoms
loopne
dec
pop
decb
jne
inc
xor
mov
cmp
test
icebp
pop
mov
xchg
xchg
out
jmp
sub
shl
out
pop
mov
outsl
mov
xor
sub
xchg
and
aas
mov
adc
das
push
ljmp
mov
pop
jecxz
dec
mov
pop
xchg
mov
sub
cmc
jnp
dec
cld
inc
and
add
xor
or
cli
fcomps
scas
push
dec
mov
or
pop
mov
addb
mov
inc
adc
sub
and
pop
mov
push
inc
into
inc
out
pop
out
icebp
and
pop
ds
xchg
add
insb
xor
pop
sbb
scas
jmp
pop
sub
pop
imulb
cs
cmpsl
lds
inc
ss
mov
xchg
nop
push
or
or
inc
push
push
lahf
inc
pop
inc
sarl
pushf
and
pop
sbb
adc
xor
xlat
and
insl
pop
push
rolb
decl
add
nop
add
inc
sub
inc
or
or
cmc
jne,pt
sti
pop
sub
adc
cmpsl
jnp,pt
cmp
insl
mov
add
loop
cwtl
repnz
jmp
mov
ret
or
cmp
push
test
fldenv
xchg
inc
push
jmp
push
pop
cltd
jae
xchg
aas
xor
xor
test
jmp
gs
mov
pop
push
in
mov
dec
jno
xchg
loop
mov
stos
jecxz
and
xchg
mov
pop
or
test
test
jnp
rol
push
cmpl
jmp
loope
andb
repz
and
cmpl
push
mov
xor
out
out
add
inc
fdivr
add
call
and
pop
subb
mov
add
pop
dec
push
cmc
hlt
andl
mov
sub
cmp
xor
mov
aad
insb
push
jmp
xchg
push
cmp
mov
mov
add
jg
ds
jecxz
adc
fisubrs
dec
aas
ficoml
icebp
mov
or
loop
ja
into
das
pop
push
mov
pushf
cld
cli
add
and
jle
call
mov
mov
cmp
push
mov
sbb
adcl
push
stos
sbb
lods
jp
push
imul
push
pop
jbe
and
sti
xor
aas
ret
scas
xchg
pop
shrd
cmp
pushf
leave
out
adc
out
enter
jo
and
insb
and
mov
mov
dec
roll
cmp
dec
jmp
add
int
rcll
sub
sub
cmp
sbb
xor
jmp
cs
jbe
cmp
xlat
stos
scas
loop
sub
es
dec
mov
or
push
jbe
jmp
out
lahf
push
mov
neg
lock
cld
incb
bound
or
xchg
inc
xor
orl
sub
push
int3
jo
mov
push
add
dec
std
sahf
mov
sub
jmp
shl
push
lock
into
push
ja
lds
int
jmp
mov
je
xchg
push
gs
lock
das
mov
push
loope
xchg
popf
xchg
sub
xchg
pop
xor
sbbb
cmp
push
dec
jmp
push
jns
push
orl
aas
movsb
movsb
clc
pop
pop
repz
cmp
loopne
bound
push
ret
push
pop
pop
notb
scas
iret
jbe
lods
add
push
xchg
lret
adc
fxch
inc
outsl
xchg
or
inc
add
hlt
in
jmp
sub
sub
adc
in
jle
jbe
lret
xchg
mov
pop
popf
push
data16
or
add
rorb
add
mov
xor
fnstsw
shrl
cmc
xchg
pop
cwtd
pop
mov
daa
fcoml
add
aas
push
mov
push
mov
pop
xor
jmp
test
jmp
add
sub
mov
push
or
adc
repnz
lock
loopne
and
jecxz
mov
push
inc
leave
push
pop
push
cmp
bound
es
jnp
gs
jnp
push
mov
xor
lret
test
inc
mov
sahf
sub
cmc
int3
jg
dec
sub
lahf
push
lock
jb
adc
pop
xor
mov
pop
pop
and
rclb
cli
sub
fs
call
adc
cmp
add
add
push
sub
loop
call
jbe
pop
adc
int3
call
addl
xchg
add
xor
adc
xchg
sbb
in
add
inc
inc
inc
xchg
das
test
jl
pop
push
or
xor
mov
push
test
ret
cmpsb
dec
dec
add
idiv
cmp
jl
out
push
mov
ds
and
inc
or
insl
or
andl
add
cs
dec
lret
and
inc
add
mov
ss
sub
pop
mov
inc
popa
lea
and
jmp
sbb
fidivrl
push
add
or
and
lds
imul
xor
jmp
ljmp
jns
or
xor
neg
cmpb
jle
cli
pop
sub
rolb
mov
ret
inc
insl
movsl
cld
gs
aam
rcrl
xchg
sti
or
adc
sub
fadd
in
add
hlt
and
out
push
popa
inc
aam
stc
cmp
mov
cmp
pop
adc
in
add
push
xchg
and
fsubl
shl
mov
adc
pop
mov
cmpsb
dec
scas
add
jmp
add
pusha
mov
pop
or
out
dec
enter
adcb
sbb
jmp
test
mov
pop
sub
dec
inc
xorl
cmp
dec
sar
add
mov
inc
enter
idivl
xchg
sbbb
out
testl
sahf
xchg
lds
repz
lcall
add
mov
mov
rorl
cltd
popa
rorl
outsl
mov
lea
xor
push
sbb
sbbb
insl
mov
xor
adc
add
mov
push
sbb
pop
push
and
test
pop
cld
jo
mov
add
sbb
in
jmp
cmpsl
clc
or
je
pop
cs
sbb
push
movsb
and
cmp
and
cld
loop
jecxz
and
outsb
adc
popa
push
mov
cmp
mov
fldcw
push
add
das
test
mov
adc
aas
push
pushl
rorb
jnp
jge
cmc
and
pop
hlt
lods
nop
lret
pop
sub
cli
lret
cmp
inc
cli
add
dec
jg
xchg
rol
and
sub
jno
xor
into
sbb
or
fucomip
jle
jb
cmpsb
mov
push
push
sbb
out
lea
imul
int
int3
mov
cld
mov
push
jg
pop
fcomi
lods
stc
cs
jp
fisubrs
adc
roll
cmc
arpl
aas
add
cld
cmpsl
and
jmp
out
mov
or
int
pop
push
inc
cmp
push
int3
sub
or
push
ja
divl
dec
pop
xchg
andb
insb
gs
loope
and
sub
adc
loope
jmp
pop
scas
cmp
jecxz
and
hlt
pop
sub
std
call
xchg
stos
nop
push
das
rcl
shll
add
neg
adc
mov
mov
jae
jb
fdivs
hlt
or
outsb
arpl
fstpl
test
sub
call
jmp
orl
xchg
inc
xlat
not
mov
and
imul
stc
sub
test
sub
dec
movsl
cld
jl
sbb
je
add
mov
out
or
mov
add
fisttpll
dec
and
pusha
mov
xchg
pop
mov
mov
lahf
push
stos
pop
shr
pop
sbb
or
mov
mov
in
mov
lods
or
xor
cmp
sbb
lahf
and
pop
mov
and
inc
xchg
xor
fsts
or
pop
hlt
mov
mov
inc
xor
mov
sub
test
dec
dec
lock
iret
sub
repnz
into
adc
sub
mov
sarl
je
cmpsb
mov
in
ret
loope
ret
xor
shr
andl
xchg
add
insl
sbbb
add
in
sub
lahf
adc
ret
sbb
rorl
out
jle
inc
lret
testl
out
adc
test
mov
test
cmp
add
add
les
hlt
pop
lods
xchg
mov
mov
xor
ja
jge
mov
or
push
push
movsl
adc
jp
nop
adc
iret
jae
aas
push
inc
adc
cmpsl
mov
iret
pop
rclb
pop
dec
adc
or
pop
inc
add
popf
jl
das
xor
and
sbb
fldl
aas
mov
mov
jo
notl
sti
popf
rcrl
shrb
into
add
pop
mov
ss
mov
and
sub
call
inc
pop
lods
adc
lock
ds
xor
jns
jle
repz
inc
xor
ds
dec
psrlw
jno
ds
lods
ret
push
fidivrl
lcall
les
sbb
fwait
aas
xchg
pop
adc
and
notb
pop
jmp
add
push
jo
or
pop
roll
xor
mov
mov
mov
add
js
mov
mov
jmp
loopne
divl
jnp
dec
or
lahf
cmp
push
ja
pop
sbb
inc
fs
and
inc
cltd
or
popa
ja
aam
mov
in
sub
cmp
xchg
sbb
mov
rorl
imul
dec
nop
aad
iret
daa
push
mov
xchg
adc
push
ja
add
jmp
inc
clc
enter
sbb
xchg
not
jmp
lret
ljmp
out
adc
cli
sub
xor
xor
hlt
loopne
in
into
lret
mov
lods
inc
in
pop
push
neg
shlb
inc
push
in
add
in
loopne
inc
adc
jp
xchg
sbb
loopne
mov
add
push
test
pop
std
and
jl
cmpb
add
sbb
xor
jl
jmp
ret
add
jb
or
sub
in
sbb
sbb
repnz
mov
call
inc
xor
fs
div
add
lea
lgs
push
ret
pop
mov
pop
jg
aad
jbe
cmp
sub
repz
adc
mov
mov
rcr
sbb
mov
dec
in
and
fldz
adc
pop
fdivs
ret
mov
cmp
dec
jbe
rcrb
and
cmp
shl
outsb
hlt
scas
jge
push
add
ret
pop
pop
dec
aad
repnz
mov
mov
jb
enter
jmp
or
outsb
pop
insl
stos
icebp
or
adc
add
xchg
jmp
dec
gs
rorl
imul
push
jb
and
shl
imul
push
mov
and
adc
mov
imul
sub
iret
and
mov
mov
push
push
in
add
loop
nop
movb
jp
fwait
xor
jge
adc
adc
mov
mov
add
jmp
xor
push
addb
inc
adc
sub
sbb
loop
jl
leave
jge
movsb
repz
mov
push
mov
inc
sbb
in
and
dec
neg
test
pop
andb
adc
sub
std
out
xchg
ljmp
jns
or
mov
subb
insl
mov
cld
lods
cmp
frndint
icebp
pop
mov
adc
scas
add
fs
add
adc
popa
sub
cmp
adcl
mov
sub
loopne
add
fmul
mov
sbb
cmp
lahf
xchg
scas
pop
sti
call
pop
push
mov
or
push
neg
mov
mov
shr
inc
or
sub
leave
lahf
jp
call
add
and
pop
pop
shl
decb
jno
inc
or
push
and
sub
dec
sbb
outsb
xchg
sbb
push
jmp
les
sbb
out
mov
movsb
out
cld
insb
test
pop
mov
or
and
mov
rorl
add
sbb
arpl
fstl
fdivrs
mov
test
mov
and
pop
lretw
adc
jmp
les
jbe
imul
adc
dec
cmp
push
int
pop
inc
dec
sub
add
fisubrs
lods
addr16
fwait
daa
cmpsb
pop
mov
mov
push
inc
mov
sti
add
mov
or
in
and
jl
add
lret
or
bnd
jno
inc
sub
push
cmp
jg
lock
aam
or
fisttpll
stos
pop
les
xchg
ret
aas
movsl
movb
and
lahf
aaa
subl
das
fidivrl
dec
mov
jmp
test
push
push
lret
add
sub
cli
jmp
xor
sarb
sahf
je
int3
pusha
push
jg
lea
dec
adc
xchg
jae
adcb
jg
js
dec
dec
add
lret
sub
adc
mov
adc
xchg
data16
add
cli
ljmp
push
pop
inc
jl
setge
notb
adcb
push
fnstenv
ljmp
jmp
or
pop
movl
or
inc
add
push
maxps
sub
lea
fidivl
loop
xor
sti
pop
adc
jg
call
jne
ja
inc
add
lret
add
nop
xor
ja
mov
mov
dec
stos
xor
inc
and
jle
nop
clc
sub
sbb
nop
and
pop
jmp
jne
in
sti
mov
xchg
cmpsb
xor
dec
or
lods
push
jae
movsl
fiadds
lock
push
sbb
mov
add
and
shrb
pop
das
mov
push
or
adc
push
jmp
jle
or
add
add
fdivp
icebp
mov
ljmp
adc
decl
cmp
xlat
mov
push
aas
cmp
stos
outsl
lock
sub
mov
inc
shr
dec
stos
icebp
jo
dec
cmp
or
dec
stc
into
xchg
call
fcompl
mov
xchg
dec
xchg
dec
scas
enter
int3
adc
mov
fs
dec
jmp
push
inc
call
sub
insl
sub
pop
pop
ljmp
sub
sti
inc
adc
push
testb
adc
movsb
es
in
clc
xchg
mov
jnp
cs
in
cmc
add
adc
andl
push
xchg
add
jmp
mov
or
insl
lea
stc
sti
push
adc
sbb
xchg
cld
push
sub
lock
popf
xor
rcll
add
add
xor
pop
dec
pop
in
rclb
pusha
xchg
leave
xor
mov
push
cmp
inc
push
adc
loope
or
ficoms
mov
cmovno
sbbb
cmp
xor
sbb
arpl
cmp
inc
mov
and
or
mov
pop
aad
jl
stos
xchg
jecxz
mov
insl
ret
adcl
or
stos
in
or
adc
inc
enter
imul
mov
or
pop
mov
cmp
cltd
ret
cmp
jl
or
mov
test
mov
gs
mov
bound
sbb
mov
test
movsl
ret
inc
cmp
into
pop
out
sub
imul
andl
jmp
cmp
mov
jmp
ljmp
mov
add
int
add
iret
add
sbb
cs
pop
es
movsl
rorb
pop
stos
xchg
push
fstpt
divb
fstpt
sub
or
aas
nop
sub
ljmp
into
mov
daa
repz
fists
inc
dec
lea
in
push
sbb
fmuls
jg
into
pop
and
loop
sbb
outsb
rolb
inc
mov
aam
mov
mov
bnd
cmp
cmp
pop
sub
sub
rcl
pusha
fucomi
or
aam
pop
push
rcll
dec
adcl
aad
add
adc
push
xchg
mov
pop
jo
lahf
aam
jo
es
test
cli
adc
push
pop
addl
shrb
jbe
add
mov
sub
sbb
mov
push
pop
dec
inc
add
hlt
jno
push
enter
pop
jbe
sub
lret
cmp
cmp
push
dec
pop
cmc
insb
stos
aaa
testl
cltd
xor
xor
push
incb
das
mov
outsl
clc
imul
jne
add
xlat
xchg
call
subl
sub
das
out
cmc
push
repz
lret
add
inc
js
dec
std
adcl
sub
in
mov
push
lcall
or
sub
cwtl
lock
mov
push
inc
push
or
xchg
and
jb
or
pushf
inc
mov
aam
ret
enter
js
cmpsb
pusha
sub
enter
cmp
push
push
subps
push
mov
mov
ror
sub
pop
clc
imul
pop
sbb
sub
divb
notl
sub
jmp
out
pop
push
repnz
xchg
out
xchg
xlat
sbb
xchg
jne
adc
movsl
add
popa
mov
add
dec
inc
push
xor
xor
cltd
and
jmp
adc
jl
mov
fisubs
push
pop
and
sub
xchg
inc
pop
insb
push
mov
clc
aad
inc
jno
fimuls
lfs
add
mov
push
lds
rcrb
pop
scas
fnsave
fs
neg
addb
ficomps
test
loop
or
add
inc
cmp
and
decb
scas
btr
pop
mov
movsb
adc
inc
push
sub
mov
push
pop
dec
pop
aam
dec
fisubrl
mov
test
dec
daa
push
mov
outsb
mov
outsb
xor
rcrb
inc
leave
or
sub
dec
adc
and
pusha
jle
xor
pop
dec
inc
jnp
inc
int3
scas
int3
lret
push
pop
push
pop
jmp
or
jmp
je
mov
push
jb
sub
sub
lcall
cmp
jmp
pop
inc
sbb
add
mov
movl
push
add
dec
sub
shrb
das
dec
push
pop
xorl
out
cmpl
ljmp
jo
xchg
cli
mov
or
dec
lods
jp
out
and
pop
dec
xor
jmp
roll
pop
fstpl
xchg
ror
into
dec
dec
sub
lcall
mov
shlb
mov
mov
in
mov
cmc
sbb
lahf
rcrl
add
pop
mov
or
push
das
ret
test
sub
lds
scas
sbb
or
pop
push
jne
mov
stos
inc
push
lods
fidivrs
mov
pop
jmp
mov
mov
cmp
push
movsl
sub
pop
testb
movsl
push
pop
jne
ss
add
or
in
mov
stos
cmp
pop
and
fbld
sub
xchg
pop
sahf
gs
inc
push
pop
cs
sti
fimuls
lret
aad
dec
int3
ret
lcall
fistpl
cmp
pop
ja
clc
xchg
jbe
dec
mov
jg
push
rorl
loopne
jne
mov
pop
outsb
mov
jns
stos
push
mov
into
push
lcall
pop
daa
in
out
or
loopne
sarb
movsb
sub
jp
pop
push
mov
aas
aam
pop
or
repnz
pop
xchg
repnz
sub
push
fdiv
cmp
inc
lahf
shrl
push
push
sub
test
ss
inc
mov
out
cmp
inc
adc
lods
sahf
push
pop
repnz
push
add
cmp
sbb
jg
mov
fsts
jbe
aaa
shl
sbb
hlt
repz
or
int3
aam
out
outsb
stc
push
in
add
sbb
sub
ret
fwait
mov
insl
cmp
aad
out
std
out
roll
cmp
lea
lahf
enter
cmp
ret
xchg
or
mov
jmp
shl
pusha
xor
and
pop
pop
mov
loop,pt
roll
nop
outsl
push
call
lea
mov
leave
addps
popf
xlat
pushf
mov
xlat
dec
mov
adc
mov
and
sbb
pop
inc
push
xchg
pushl
out
mov
les
shl
push
fs
push
scas
orb
mov
mov
insb
stos
jl
ss
sub
test
cmp
enter
es
pusha
adc
dec
sti
ret
jnp
xchg
jae
daa
inc
dec
and
mov
cmp
pusha
cmp
add
inc
test
xor
push
mov
aam
pop
cs
dec
pop
bnd
bswap
push
mull
jp
xchg
fldt
hlt
es
cmp
mov
pop
addl
sbb
add
sub
fdivrs
dec
adc
and
adc
pop
pop
mov
or
mov
cltd
or
add
idivb
jbe
jmp
push
adc
or
in
mov
gs
jl
dec
xor
add
sbb
add
push
and
ss
push
enter
sbb
mov
ret
push
mov
pusha
loopne
sub
gs
mov
pop
push
mov
std
xor
leave
movsl
push
pop
in
xchg
dec
mov
adc
add
mov
xor
mov
inc
sbb
scas
lods
sbb
add
fidivrs
mov
pushf
jmp
xor
mov
lcall
out
sub
out
pmuludq
call
ret
push
pop
cmpsb
jl
shlb
and
popf
jle
lds
jmp
dec
sub
pop
lods
pop
cltd
sbbb
inc
pusha
dec
aad
cmc
xor
fstps
mov
sbb
popa
adcb
fdivp
scas
lret
adc
jp
jae
dec
xchg
lea
adc
push
ret
lret
jbe
cli
jmp
pop
call
push
test
addl
add
jbe
out
jl
xchg
divb
mov
add
cwtl
mov
iret
lcall
hlt
scas
inc
xor
and
into
iret
popa
shr
jmp
cmpsb
mov
adc
icebp
mov
imul
sbb
loopne
add
sub
cmp
cs
sub
xchg
loope
adc
stc
xor
shlb
pop
mov
cmp
sbb
pop
ds
jg
call
or
popf
jo
or
mov
shlb
scas
mov
xchg
cli
xchg
into
and
push
les
pop
in
mov
test
xchg
add
sahf
pop
or
push
sbb
mov
pop
shl
dec
rorl
sbb
sbb
arpl
mov
or
jle
jmp
shrl
into
sub
adc
pop
stc
or
dec
shl
and
jmp
adc
or
imul
jnp
xor
push
add
sub
dec
lock
or
lds
mov
sub
orb
ja
shl
inc
push
sub
subb
cmpsb
sbb
add
add
dec
cltd
push
pop
loop
in
fdivrl
and
fwait
add
fadd
aas
in
lahf
cmp
ljmp
adc
mov
dec
or
in
test
xor
xchg
pop
mov
in
fsubrl
jno
dec
pop
push
add
and
dec
add
idivl
fildl
out
sub
push
jnp
jno
mov
shl
shr
inc
dec
or
movsl
jbe
movsb
add
jecxz
int3
push
mov
testb
lds
jmp
lock
sbb
sub
scas
sbb
xor
test
mov
jecxz
int
jmp
jne
lods
dec
sti
fcoms
sub
int3
mov
mov
xor
incb
iret
push
mov
not
push
sbb
mov
clc
mov
push
xchg
lods
sub
iret
pop
or
ss
add
xor
pop
and
outsb
sub
sarb
mov
cmp
xchg
and
add
or
add
jne
sub
push
lahf
lahf
or
push
xchg
lods
repnz
adc
push
sbb
pop
sahf
test
jmp
ret
icebp
sub
xlat
mov
and
push
push
dec
pop
push
sub
push
pop
das
xchg
push
adc
mov
pusha
xchg
or
push
shl
adcb
scas
sbb
iret
cltd
xor
lahf
shl
fidivs
imul
pop
mov
mov
xchg
jmp
mov
or
adc
call
lods
ret
or
add
sbb
int
sbb
in
pop
cmp
sbb
dec
xchg
add
pop
push
mov
jl
cmp
cwtl
dec
or
cmp
jg
cmp
or
lret
ljmp
push
xor
add
rcl
out
inc
lret
outsb
or
addb
adc
adc
sub
push
add
add
out
fwait
add
adc
les
mov
jo
ret
add
out
mov
add
mov
pushf
imul
jp
add
jnp
test
subb
and
push
sub
inc
mov
cmc
add
pushf
xor
lret
adc
inc
pop
add
pop
and
sub
pop
and
add
push
pop
lret
fdivrl
aad
sbb
jbe
mov
mov
mov
dec
lods
ret
pop
das
jbe
rorb
shrb
sti
xchg
push
clc
js
push
add
and
jmp
mov
sub
sub
dec
mov
jmp
mov
repnz
push
test
add
push
inc
add
mov
rolb
fld
add
mov
xor
add
pop
sub
sub
pop
jge
cld
mov
pop
es
sbb
lock
outsl
add
ret
sub
mov
sahf
xchg
mov
mov
shll
mov
insl
cmpsl
pop
dec
dec
jmp
or
pop
push
pop
cmp
inc
pop
adc
mov
push
dec
iret
ljmp
adc
jmp
xchg
rcl
add
fdivs
jmp
mov
pop
hlt
hlt
cmp
mov
jno
dec
pop
les
add
xor
xor
out
push
sub
mov
ljmp
adc
and
jmp
lods
and
dec
xchg
jno
pop
cs
lods
iret
push
dec
jmp
push
inc
push
lahf
sbb
xor
inc
and
dec
push
nop
xor
js
adc
push
call
mov
imul
cmp
out
adc
arpl
sbb
cli
aad
dec
test
test
das
push
lcall
sbb
jmp
or
cmp
pop
dec
jno
cmp
jg
lahf
jne
and
xchg
pop
mov
pop
dec
scas
push
inc
mov
xchg
push
xchg
mov
dec
rol
mov
adc
test
cli
sub
addr16
or
icebp
out
loop
imul
in
movsl
push
lcall
jnp
jo
sti
jg
fstpl
cli
xor
jmp
shl
movsl
push
adc
xlat
jnp
movsl
inc
jg
cli
pop
pop
cmp
mov
pusha
pop
fadds
lcall
mov
aas
js
jmp
inc
pop
cmpsb
inc
mov
jae
sbb
shl
outsb
lods
adc
fildll
sub
jo
je
jnp
dec
out
loopne
pop
pop
jmp
addr16
xchg
push
mov
leave
and
pop
hlt
gs
repnz
dec
cmp
shr
xor
add
aam
mov
mov
or
ret
lock
mov
mov
add
aam
mov
lock
cld
popf
jns
inc
push
push
jmp
inc
xchg
out
adc
xor
push
jmp
lods
stos
movsb
mov
jb
pop
jne
sbb
loopne
jmp
mov
mov
in
je
out
std
pop
cmp
push
lret
xor
loope
xchg
mov
push
jg
adc
fdivs
rcl
imul
pop
add
les
pop
jmp
push
rcll
rcr
cwtl
sbb
sub
sub
test
adc
shrb
fidivs
or
xor
cmp
jbe
lods
jae
or
sbb
add
sub
pop
push
movsb
ret
jp
es
addr16
pop
sub
cwtl
mov
clc
pop
dec
das
scas
push
enter
jmp
or
imul
loop
push
or
pop
aaa
shl
mov
repz
pop
xchg
push
add
xchg
and
jge
adc
mov
aad
insl
xchg
pushl
cs
cmpsl
add
or
icebp
outsl
sub
rorl
xor
ja
pop
xor
imul
addb
dec
orb
call
and
pop
mov
mov
fisubs
push
sbb
aad
addr16
rorb
mov
cmp
loopne
lret
mov
sbb
sub
mov
imul
mov
outsl
push
mov
js
or
mov
xchg
and
sbb
sub
sahf
fildl
fdivrs
or
lret
adc
stc
scas
or
xchg
insb
pop
add
lret
mov
jns
cvtdq2ps
push
daa
sub
mov
push
xchg
fisttpl
outsb
popa
push
into
lock
adcl
mov
pop
mov
sub
or
xor
or
pop
pop
mov
add
das
clc
mov
mov
loope
cmp
add
xlat
daa
add
imul
scas
inc
push
in
lret
daa
sbb
js
inc
ljmp
jle
loope
cld
rcl
mov
or
jmp
es
fiadds
nop
cmp
pop
pusha
xor
loop
add
pusha
cmp
aad
dec
add
inc
test
popf
pop
xchg
fsubrp
cli
jge
cmp
pop
push
je
dec
inc
ss
jge
sub
mov
insb
adc
shr
adc
cmp
sbb
cmc
movsb
add
mov
sbb
stos
mov
lods
push
pop
mov
int
push
dec
stos
repnz
jmp
jmp
mov
sbbb
ja
fstpl
lock
jecxz
shrb
enter
dec
mov
sbb
js
push
fstps
add
outsb
loopne
push
fistps
adc
and
das
pop
xlat
adc
add
xchg
mov
ja
pop
sub
idivl
popf
stos
jo
xchg
adc
mov
add
jmp
mov
rorb
cmp
sub
repnz
aaa
rcrb
cmp
adcb
push
pcmpgtb
stc
out
adcl
jg
loope
mul
das
or
mov
inc
and
push
test
jle
pop
orl
and
stc
jle
pop
push
stc
cmp
push
gs
and
leave
movsb
or
jb
mov
mov
call
mov
sub
xor
arpl
adc
mov
mov
neg
add
loop
dec
mov
inc
mov
or
add
jmp
decb
sarl
adc
xlat
popf
ljmp
dec
rolb
in
pop
or
inc
daa
and
dec
adc
pop
and
sbb
cmp
shl
xchg
cwtl
sub
inc
repnz
cmovs
dec
adc
or
popf
adc
leave
fbld
cmpb
mov
mov
dec
push
shl
or
test
pop
and
pop
mov
cmpsl
int3
adc
out
jne
mov
jmp
cli
jo
pushf
pop
rolb
inc
or
scas
adc
dec
insb
or
inc
inc
negl
mov
pop
push
loop
lds
mov
jae
test
out
add
adc
add
add
cwtl
fisubrs
pop
mov
dec
and
and
fdivrs
andb
stos
adc
add
adc
iret
rclb
fisubrl
sbb
add
pop
sub
jmp
ret
loopne
add
xchg
pop
dec
add
and
sub
movsb
je
xchg
or
adc
mov
ret
mov
jmp
mov
movsl
mov
mov
es
inc
pop
dec
aad
dec
sub
add
fisubrs
or
sbb
imul
fucomi
or
test
out
lret
pop
inc
ljmp
fcmovnb
mov
subb
fs
jle
push
fwait
movsb
pop
push
add
pusha
fcoms
pop
sbb
sar
insl
xchg
sub
mov
push
bound
xchg
and
in
pop
xchg
insb
xor
or
sub
popa
adc
xchg
out
inc
push
cmc
xor
add
pop
inc
fldl
xor
xchg
sbb
pushf
loop
lret
inc
and
or
jl
das
shrl
push
out
lea
inc
scas
dec
add
push
mov
ja
stc
mov
mov
add
sub
call
inc
mov
inc
leave
daa
pop
jae
imul
push
sub
dec
pop
lds
out
push
add
or
lea
sub
jl
dec
jne
cld
out
or
xlat
jmp
push
ja
les
xchg
rcll
cmpsl
lcall
push
movsb
dec
mov
add
sti
into
push
pop
inc
in
inc
rcl
repz
fs
leave
loopne
mov
into
minps
dec
push
addb
data16
push
and
adc
fdiv
loope
xorb
mov
add
pop
pop
fyl2x
jmp
loop
mov
popa
ds
fsubr
mov
sub
mov
and
shl
pop
enter
push
and
ret
add
loope
jmp
jmp
add
jmp
and
scas
cwtl
and
pop
pop
test
dec
mov
mull
adc
lret
mov
jmp
pop
lds
cli
movsb
push
jmp
repnz
and
jo
push
pop
jmp
cmc
rol
or
in
loope
or
push
mov
jmp
push
or
xlat
and
sbb
or
imul
push
cmp
pop
sub
or
aaa
mov
push
adc
in
pop
add
xor
cmc
cld
jge
lahf
jbe
pop
mov
jo
push
add
push
js
cli
mov
jns
jmp
outsb
jmp
je
push
fadd
jecxz
mov
test
push
add
push
cmp
and
adc
add
dec
jne
ljmp
push
mov
imul
cmp
ret
inc
mov
add
cwtl
jae
mov
cmp
sub
sub
lods
push
cmpsl
pop
imul
pop
jl
adc
movsl
lret
jae
push
mov
das
cmc
aam
xor
or
mov
and
add
or
pop
and
arpl
mov
mov
inc
decb
and
das
dec
xor
pop
or
adc
or
mov
in
add
lret
cmc
xchg
push
mov
push
incl
push
addl
loopne
incb
or
jmp
cld
in
bndstx
pop
leave
mov
push
in
fbstp
sub
subb
adc
in
mov
inc
jmp
or
je
into
mov
jbe
push
mul
mov
daa
inc
insb
push
les
jnp
adc
xchg
add
inc
and
les
es
and
ljmp
inc
lret
cs
cmp
sub
xor
jno
lret
mov
adc
shrb
jmp
mov
ljmp
sarl
sub
mov
push
xchg
sti
inc
cwtl
lods
sub
rcll
jle
push
or
shr
shlb
dec
pop
ret
and
pop
loop
hlt
adc
imul
movsl
pop
pop
jle
and
js
and
daa
add
loope
push
scas
jb
cmc
shl
push
test
xchg
xchg
xor
pop
fstl
outsl
and
loop
jmp
push
pop
push
outsl
popa
and
subb
stos
pop
je
add
jge
out
out
pop
or
or
cli
insl
cmp
dec
inc
add
inc
addr16
jne
mov
cld
gs
pop
mov
pop
call
mov
mov
xor
push
xchg
sarl
xor
sbb
sub
and
mov
jbe
sub
push
xchg
inc
mov
test
push
xchg
test
test
push
add
push
add
add
aas
cs
sub
and
lds
das
scas
add
imul
mov
notb
pop
push
add
pusha
pushf
repnz
insb
add
xchg
pop
pop
add
add
pop
dec
dec
or
imul
test
adc
xchg
pop
outsl
push
cmp
mov
xchg
add
shl
push
or
out
es
stos
mov
in
insb
xchg
and
xor
jo
push
and
loopne
negl
in
nop
ret
push
push
sub
lret
das
aam
and
mov
fstpl
popa
push
push
dec
aam
lds
mov
sub
insl
orl
popa
insl
adc
sub
or
or
test
xor
pop
xchg
pop
shll
inc
ror
pop
jb
addr16
dec
in
mov
mov
xorl
dec
mov
mov
pop
sti
xor
mov
push
mov
jp
adc
loope
push
xor
mov
push
dec
jg
jnp
add
jmp
inc
shl
or
dec
mov
and
out
pop
cmp
xchg
test
dec
cwtl
push
mov
dec
xor
or
aaa
add
mov
leave
cmp
jmp
dec
addl
in
aas
adcb
orl
je
stc
cld
and
aas
pop
pop
enter
push
data16
cmc
lds
mov
rcll
clc
stos
xor
mov
fwait
push
leave
leave
inc
loopne
xor
dec
pop
mov
add
push
rorb
jbe
or
xor
lret
xor
ret
mov
lretw
pop
int3
mov
daa
jmp
pop
pop
xchg
add
pop
dec
push
add
xor
jmp
push
pop
shl
sbb
insb
add
ss
daa
stos
ret
mov
and
cwtl
call
das
repz
lcall
sub
or
insb
cmp
std
inc
dec
push
stos
mov
imul
fs
or
push
rcll
adc
mov
xor
sub
fistpl
pop
ror
or
ret
mov
jmp
in
mov
xchg
call
jmp
es
nop
add
ljmp
pop
cwtl
xlat
sub
loope
mov
xor
sti
pop
lret
dec
enter
push
mov
jge
movb
aaa
pop
orb
or
iret
into
mov
mov
jle
into
or
and
or
and
pop
and
xchg
inc
jmp
mov
adc
adc
das
pop
and
insb
aad
or
push
bound
xchg
rcr
jae
or
cmp
pop
cmp
loop
inc
pop
movsb
jnp
add
faddl
mov
shl
outsb
xor
loop
add
jp
or
jecxz
xchg
push
mov
inc
xchg
gs
dec
popa
and
sub
ljmp
stos
xchg
fs
push
icebp
pop
jle
xchg
add
stos
sbb
addb
and
cmp
cmp
push
or
jmp
fstpt
inc
ja
pop
in
cmp
fnstsw
cmc
dec
cmpsb
or
mov
dec
push
lock
pop
lods
mov
mov
idiv
push
dec
fwait
adc
mov
push
dec
add
in
int
inc
pushf
xchg
das
sub
xchg
clc
lds
pop
adc
js
xchg
lahf
sbbb
xchg
cld
add
mov
xchg
std
shll
test
mov
sbbl
add
mov
cmovne
dec
aaa
out
jno
jmp
mov
jmp
xlat
pop
mov
push
sub
adc
pusha
pusha
ljmp
add
inc
push
mov
aad
dec
pop
mov
and
mov
lds
jb
push
stc
cmc
pop
or
xchg
ds
mov
sub
pusha
mov
cmp
sti
sub
addl
sub
inc
mov
mov
ljmp
push
into
je
sbb
rorb
jge
cmpsl
out
out
dec
adc
mov
loopne
ret
clc
pop
int
fistpll
loope
int
ss
loope
jg
sub
sarb
inc
dec
insl
clc
mov
ss
cs
add
xor
movsl
xlat
or
jl
cmpsb
addl
cmp
and
pop
pop
pusha
jbe
inc
lahf
inc
je
push
add
fstpl
cmp
pop
pop
mov
adc
cmp
or
jecxz
xchg
sbb
cmp
std
out
cmp
daa
test
and
flds
shll
lods
repnz
lret
inc
adc
lret
in
mov
mov
sbb
or
inc
jmp
and
pusha
push
adc
jb
add
push
add
ret
lahf
mov
inc
adc
dec
push
je
js
notl
inc
push
mov
lahf
cld
lds
rcrb
or
pop
xor
push
pop
ja
cmc
or
orb
sbb
rorl
push
xchg
rcrb
insb
push
push
xchg
ret
movsl
imul
dec
and
or
sub
mov
rolb
sub
sub
inc
mov
jmp
inc
imul
daa
push
loopne
ss
daa
mov
sub
xor
popf
adc
movsb
xor
mov
sbb
mov
lds
mulb
or
cmpsl
adc
cmp
xchg
out
sbb
xlat
icebp
sbb
std
sbb
push
mov
mov
mov
inc
or
and
mov
pushf
lods
fs
mov
imul
jmp
and
xlat
jmp
xchg
mov
jg
inc
add
icebp
andb
pop
push
dec
push
sbb
scas
adc
inc
cmc
scas
cmp
push
dec
int
jnp
lock
xor
pusha
lahf
push
mov
and
mov
jmp
lods
movsb
xchg
adc
addl
mov
pop
dec
and
xor
imul
popa
add
cmpsb
cmp
push
mov
inc
push
jno
ljmp
outsl
pop
push
inc
adc
out
xor
inc
sub
pop
jmp
stos
add
jb
rol
loop
add
ljmp
loope
mov
adc
push
cmp
sub
xor
sub
cmp
lods
mov
call
push
and
loope
jmp
push
jle
dec
lcall
dec
jmp
push
pop
repz
dec
mov
jmp
cld
mov
push
mov
sti
icebp
mov
pop
out
movl
test
mov
lock
andl
mov
cmp
pop
dec
cli
lcall
or
mov
divl
das
mov
negl
arpl
andl
add
insb
xchg
dec
aaa
adc
mov
frstor
or
cmp
sub
shr
and
or
lock
insb
xchg
idivb
mov
dec
cmp
cmpsl
roll
or
or
xor
sbb
clc
jg
jecxz
add
inc
mov
jle
add
fsubrs
pop
jb
dec
in
sar
sub
lret
scas
push
shrl
bound
inc
int3
or
sbbl
mov
mov
push
pop
or
notl
stos
repz
jl
test
inc
and
outsb
cmp
in
mov
fs
test
movsl
mov
mov
sub
dec
fidivrl
cli
push
push
jo
jmp
mov
dec
lret
adc
sti
adc
sub
sbb
adc
adc
cmpl
es
pop
jns
jl
mov
fimuls
adc
pop
cwtl
xchg
xchg
lds
mov
jl
sbb
or
jp
add
push
aaa
sbb
jl
and
mov
xchg
daa
jg,pn
bound
fildll
fdivs
pop
loope
out
je
push
add
int
lret
pop
dec
stos
adcl
stc
add
mov
hlt
push
repnz
jmp
mov
mov
adc
dec
xor
mov
jge
sub
sub
test
in
enter
lods
mov
sub
or
mov
pop
mov
or
or
jmp
or
jb
mov
nop
mov
hlt
mov
ja
sbb
jmp
sahf
xchg
mov
jmp
xor
jg
jle
jmpw
cld
popa
in
repnz
int3
mov
popa
push
pop
fisubrs
jmp
vcvtsd2ss
or
and
pop
mov
cs
add
ja
and
xor
add
or
xchg
sti
pop
stos
shrl
sub
popa
mov
shlb
inc
xchg
add
aam
adc
out
push
dec
dec
jb
sahf
jmp
add
mov
mov
inc
or
mov
fidivrs
loopne
not
mov
cmp
imulb
lret
dec
gs
xchg
cmp
add
push
pop
cmp
xor
xor
jge
inc
pop
mov
jb
lahf
je
jp
into
lret
jnp
shlb
or
out
jbe
clc
push
or
xor
jecxz
jbe
rolb
into
pop
pop
mov
sarb
cltd
pusha
test
push
adc
rorb
insl
lods
adc
daa
mov
inc
pushf
rcrb
jge
ja
sbb
xor
mov
test
lcall
or
mov
adc
or
out
add
repz
stc
pop
les
shlb
es
adc
sub
loopne
out
add
inc
jo
adc
inc
xlat
mov
jns
pop
push
pop
push
addb
test
xchg
aam
stos
int
in
add
fadds
fsubl
xor
add
not
jmp
in
inc
dec
push
lds
shr
push
enter
cld
and
push
push
or
jae
stc
or
jmp
js
shll
subb
pop
stos
sub
out
push
or
dec
sub
push
sarb
or
adc
fists
ja
lods
add
shl
stc
xchg
adc
cld
xor
lods
fisubs
push
pop
xchg
or
mov
push
sub
mov
pop
mov
push
xchg
int
add
or
repnz
cld
aad
aaa
in
lahf
adc
loop
jbe
clc
mov
cli
sub
in
pusha
jae
mov
sub
xor
andb
pop
stos
pusha
push
sbb
out
rorl
mov
xor
fiaddl
pop
inc
mov
outsb
ja
addl
bound
iret
jmp
xlat
cmp
cmp
shl
in
jg
lcall
mov
lret
lret
xlat
sarl
lds
imul
scas
daa
or
cli
xor
insl
dec
mov
scas
mov
pop
addr16
movsl
or
dec
sub
cli
jmp
mov
and
stc
xor
iret
mov
xchg
scas
dec
xor
jnp
jmp
or
pop
mov
dec
shr
mov
sub
or
ds
gs
adc
pop
dec
sbb
ljmp
jg
cmp
arpl
mov
pop
xchg
pop
call
jp
shlb
inc
stc
push
das
pop
push
insl
mov
test
inc
mov
out
adc
pop
movsb
pusha
ret
sbb
movb
das
jmp
dec
icebp
push
and
js
daa
lods
xchg
mov
lcall
xor
cmc
shrb
std
mov
push
in
and
mov
xchg
imull
in
add
cmpsb
enter
pushf
inc
lds
add
add
pop
ret
iret
pop
fnsave
sub
das
mov
out
icebp
xchg
mov
jnp
lock
pop
jne
jg
xor
sbb
or
roll
pop
jmp
ffreep
cmp
or
cmp
cmp
cltd
adc
xchg
jo
sbb
lret
add
pop
push
lret
movl
or
sti
push
sbb
les
inc
sub
dec
pop
xor
jle
lock
lahf
scas
and
arpl
inc
pop
pop
cmpsl
sub
mov
test
mull
hlt
pop
dec
jge
cmp
xor
pop
xor
jbe
pop
add
push
pop
fsubrl
or
jnp
sbb
xchg
mov
pop
rorb
movsl
mov
xorb
pop
sub
aad
fldcw
ret
popa
and
bound
movsl
adc
cli
mov
pop
and
inc
adc
xchg
dec
in
or
dec
cmp
add
pop
in
adc
xor
jo
jnp
and
das
lret
bound
jnp
cmc
int3
add
or
jns
push
pop
push
jge
dec
xchg
insb
xchg
lods
icebp
xchg
cmp
mov
add
sub
mov
inc
sti
push
ret
ljmp
or
adc
scas
repnz
mov
push
dec
inc
negl
lds
xchg
or
mov
decb
jg
imull
jecxz
sub
pop
adc
inc
test
iret
add
daa
cmp
lock
adc
jp
sub
push
or
gs
les
and
and
sub
lods
mov
mov
insb
push
xor
adc
sub
add
dec
xchg
loope
cmp
adc
je
cwtl
je
inc
jo
mov
sbb
fstps
jl
and
push
lds
mov
rcrb
mov
or
sub
fidivrs
pop
in
xlat
scas
popf
dec
outsb
mov
inc
rcrb
fsubrs
sarb
adc
mov
das
call
xchg
add
jmp
outsl
and
add
sbb
daa
and
sarb
inc
sbbl
shrb
mov
sbb
pop
cli
xchg
add
dec
pop
in
ret
or
shr
push
mov
xor
adc
ror
xor
add
sub
scas
ret
lret
push
loop
xchg
in
xorl
pop
mov
mov
adc
int
mov
jmp
push
inc
popf
pop
adc
popf
test
mov
hlt
cmp
inc
xchg
clc
fiaddl
lods
push
mov
push
mov
addr16
add
adc
dec
stos
or
adc
jno
loopne
inc
adc
in
lret
rolb
insl
jp
repnz
or
xor
cmpsb
lods
js
dec
adcb
mov
pop
mov
leave
and
fdivrl
inc
xor
call
fiadds
test
inc
jmp
push
sub
das
sub
mov
sarl
pop
ss
daa
outsb
psubsw
push
cmp
adc
jmp
mov
pusha
rcrb
xchg
cmpb
and
pop
cmc
clc
cmpsl
loope
pop
add
dec
movsb
xorb
popa
jmp
rcrb
andb
jmp
js
add
fs
shrl
js
loopne
add
mov
fisttpll
xlat
and
roll
add
pop
xor
inc
scas
sub
inc
dec
and
das
data16
das
daa
insb
cmc
mov
cld
cmp
data16
jp
or
ja
adc
jge
aas
imul
negl
ja
dec
sbb
mov
daa
fisttpl
mov
daa
aam
sub
mov
mov
sbb
sbb
pop
daa
sub
pop
adc
pop
mov
shl
inc
imul
pop
adc
ja
add
bound
sbb
xchg
cld
pop
cld
loope
lods
xor
out
repnz
lods
jp
int3
sbb
rolb
punpckldq
pop
jns
out
push
mov
sub
cs
jbe
sbb
sub
pop
shr
pop
mov
sahf
sub
cmp
adc
repz
fs
jmp
pop
in
outsl
pusha
out
js
jmp
mov
dec
not
and
sub
hlt
adc
lret
push
mov
push
sbb
jmp
pop
in
jle
lods
inc
test
jl
mov
lcall
dec
push
inc
xchg
fidivrl
stos
mov
setno
iret
jae
jmp
call
dec
loope
stos
add
cmpsl
add
data16
nop
rcll
push
push
fidivl
jle
cmp
popf
add
and
gs
adc
clc
and
and
enter
repnz
and
jnp
mov
sahf
mull
adc
std
adc
mov
sti
inc
cli
add
xlat
add
sbb
mov
or
add
xor
jo
pop
cwtl
scas
pop
int3
and
sti
push
jg
pop
mov
inc
sahf
repz
sbb
inc
xchg
xorl
dec
mov
fisubl
and
and
repz
adc
sub
call
iret
fisubrl
mov
pop
nop
mov
inc
jb
sub
shrb
adc
and
nop
pop
mov
test
roll
xor
popa
fstpt
mov
adc
mov
push
mov
jmp
stos
push
mov
push
cli
idivl
or
out
add
mov
adc
adc
inc
out
inc
sbb
loope
iret
rolb
dec
lahf
push
add
icebp
js
sar
or
jo
call
ret
adc
dec
ret
pop
ret
push
jne
nop
add
mov
mov
imul
int
mov
cwtl
push
add
mov
and
push
push
sub
inc
or
xor
push
rcr
and
sbbb
cwtl
sbb
mov
push
mov
arpl
stc
test
and
lret
outsl
add
loop
or
jne
aam
mov
push
adc
jg
pop
shl
xor
mov
hlt
add
outsb
xor
push
inc
jmp
ret
aad
ss
push
inc
jl
cwtl
lock
jno
cmc
movsl
mov
cmp
inc
repnz
adc
rcll
cmp
aaa
pop
or
mov
mov
push
imul
pop
bound
sub
xor
pop
adc
jp
push
sub
or
cs
xchg
mov
in
ss
xor
mov
jle
jmp
popa
xchg
jp
xchg
add
rcll
clc
push
dec
xchg
mov
xchg
stos
dec
add
pushf
sub
inc
dec
jmp
jnp
ds
sub
sahf
popf
fstpl
mov
push
dec
sahf
sub
rcl
leave
mov
test
aam
mov
jle
data16
mov
mov
adc
jp
iret
push
add
lahf
pop
mov
push
pop
pop
rcll
xchg
ljmp
pop
addr16
xchg
inc
imul
push
mov
xchg
cmp
hlt
cmc
mov
repnz
and
mov
jmp
mov
push
out
jno
jno
pop
ret
out
inc
cs
inc
mov
dec
sub
cmpsb
inc
loopne
cmp
mov
push
addb
add
fldl
jb
sub
lahf
in
xor
pusha
stos
cmpsb
gs
insb
cli
enter
mov
mov
mov
lahf
icebp
or
mov
add
sub
adc
mov
adc
adc
dec
jmp
jge
or
pusha
push
push
fs
jp
imul
cmp
sarb
aas
xor
not
mov
and
push
push
mov
popf
dec
dec
cmp
test
and
mov
mov
and
push
stos
test
loope
pop
aas
sub
stos
inc
leave
adc
lcall
and
or
sahf
inc
mov
fs
dec
inc
pop
dec
adc
dec
sbb
lret
push
jmp
icebp
add
add
ret
movsl
adc
lea
fsubs
mov
xor
pop
xchg
fdivl
daa
xorb
jp
mov
pop
adc
mov
inc
stos
adc
sub
sub
lods
push
mov
inc
mov
jl
sbb
mov
mov
out
add
and
xchg
sub
jmp
dec
or
jb
push
negl
and
push
int3
add
push
sub
or
xchg
inc
ljmp
arpl
sbb
mov
lds
cs
pop
jle
scas
xor
dec
add
or
push
daa
jecxz
les
dec
call
sub
inc
cmpl
and
roll
mov
mov
add
push
adc
inc
test
inc
inc
inc
out
add
jae
pushf
pusha
cwtl
mov
call
push
cltd
inc
scas
xchg
movsb
add
scas
xchg
je
xchg
pop
fs
decb
push
hlt
mov
and
mov
adc
mov
sub
push
dec
pusha
and
or
sbb
mov
sub
in
aam
test
mov
cmc
shll
jl
incb
arpl
add
neg
push
mov
stos
roll
mov
inc
sahf
bound
lcall
hlt
cmc
mov
addr16
test
dec
mov
jge
add
add
dec
popf
dec
push
jg
lods
or
add
push
lahf
hlt
sub
pop
nop
aam
cli
pop
cwtl
mov
sbb
jbe
add
neg
xchg
ja
rorl
lret
js
inc
jecxz
and
jbe
sub
outsb
ja
mov
pop
push
sub
jmp
fidivl
movzwl
adc
fwait
rcl
push
push
out
push
and
stos
adc
inc
add
neg
or
sub
daa
mov
fildl
ret
ja
outsb
jmp
mov
or
dec
out
out
imul
shr
fidivl
mov
sbb
nop
sub
push
cmp
insb
cmpb
jo
add
or
push
mov
adc
int
sbb
pushf
xor
into
ss
pop
mov
inc
and
stos
or
push
sbb
mov
cmc
loop
sub
xor
frstor
xchg
jl
imul
jnp
dec
ljmp
aam
out
mov
dec
imul
popa
adc
pop
jecxz
pop
aaa
mov
aas
add
jo
jbe
add
inc
daa
stos
and
sbb
add
jmp
mov
sahf
push
fldenv
pop
xor
enter
jb
push
pop
out
movsb
dec
ja
fsubrl
dec
out
pushf
dec
clc
gs
adc
scas
adc
lods
addr16
popf
jp
dec
or
mov
pusha
lds
pop
or
daa
inc
xlat
jns
add
or
and
dec
imul
push
mov
jle
and
into
jecxz
insb
out
or
aad
mov
jo
mov
dec
add
dec
mov
jecxz
xor
push
lcall
nop
or
pop
xchg
add
cmp
sbbl
cli
mov
pop
push
in
repnz
ja
mov
fnsave
mov
pop
xor
push
sub
cmp
cmp
xchg
mov
mov
sti
add
sbb
fstp
add
xor
jns
daa
inc
cmp
fdivs
add
rclb
lods
out
shll
dec
sbb
or
add
orb
fnsave
nop
les
add
rolb
and
cmp
dec
mov
repz
ficompl
insb
pop
fs
decb
scas
outsl
xor
add
xchg
or
pop
pop
xchg
arpl
or
dec
cmp
or
add
mov
xor
or
xchg
loop
pop
int3
out
lcall
sbb
jns
sub
push
jne
mov
pop
push
xchg
add
push
xor
push
sbb
and
sbb
aas
jecxz
push
lret
jno
push
mov
and
pop
daa
push
mov
and
cmc
in
sub
daa
jno
clc
pop
pop
das
mov
hlt
fs
cmp
cs
cmp
mov
adc
scas
adc
inc
sub
pop
std
pop
adc
roll
mov
sub
sbb
fimuls
dec
push
ret
fiadds
add
xor
jmp
dec
das
icebp
add
push
mov
aad
les
sbbb
push
xor
mov
lock
addb
sub
jmp
cmc
and
mov
push
pop
inc
test
mov
sub
movsl
cmp
push
or
xor
fistpl
movsl
sbb
mov
mov
cld
sbbb
out
push
sub
xor
lds
xor
xchg
rcrl
dec
mov
push
pop
jmp
pop
aas
cld
dec
mov
mov
cmc
push
test
cli
cmpsb
enter
icebp
and
pop
push
add
or
push
adc
jo
xorl
sbb
pop
add
aad
fstps
add
icebp
mov
push
roll
imul
adc
dec
xchg
add
cmp
mov
ljmp
ljmp
and
loopne
cs
jns
or
sub
add
jmp
add
loopne
jecxz
loope
pop
add
mov
pop
out
test
mov
jle
jo
lahf
push
in
sahf
or
es
add
xchg
insl
sub
popf
jg
ja
nop
movsl
xor
mov
mov
lock
sti
mov
js
or
pop
lcall
outsb
add
fistps
xchg
jnp
inc
or
add
sub
sub
push
push
push
enter
faddl
mov
jmp
ficomps
cmc
out
xor
enter
push
mov
sub
sbb
pop
popf
pop
adc
mov
jmp
xor
int
sub
add
jbe
out
push
aas
fiadds
ret
out
cs
dec
pop
icebp
add
cmc
movsb
nop
in
push
or
stc
hlt
in
shr
mov
scas
inc
jg
push
xor
adc
test
jmp
inc
dec
out
aam
mov
and
sub
int3
jmp
mov
shr
rcr
dec
clc
pop
fcmovne
or
sarl
rolb
stos
mov
mov
push
pop
push
loope
in
cmpsb
sub
gs
out
scas
add
loop
or
sbbl
inc
jg
jmp
flds
or
and
inc
mov
popa
outsl
andb
pusha
jecxz
sbb
add
adc
jmp
mov
cmpsl
icebp
dec
imul
xchg
and
mov
inc
ficoml
adc
lods
cmc
imul
push
sub
rorb
add
lret
pusha
push
sub
out
aam
xorl
pop
popf
jns
das
fsubrl
push
mov
into
mov
pusha
or
xorb
pop
push
lret
jmp
mul
lock
dec
jmp
dec
call
adc
lods
push
mov
stos
mov
push
pushf
xchg
pop
mov
push
pop
loop
push
pop
rolb
incl
push
push
les
cmc
inc
das
pop
xor
insl
push
push
jmp
add
clc
mov
mov
ret
add
faddl
test
ja
call
jmp
jmp
jecxz
push
test
out
int
mov
add
mov
and
rorb
xchg
es
dec
jmp
in
xor
loope
jecxz
xor
bound
xor
cld
jmp
add
pop
jle
dec
leave
add
bound
test
sbb
sbb
jae
imul
mov
push
jo
hlt
add
and
push
mov
adc
sbb
push
imul
jge
xor
out
or
and
fcoms
push
clc
aam
outsl
xchg
cltd
xor
sub
inc
push
xor
inc
push
imul
lods
leave
add
add
push
jmp
push
cli
into
cmc
dec
ljmp
push
out
addr16
data16
xchg
xor
pop
insb
add
jmp
pop
inc
adcb
cmp
clc
push
cmp
popf
and
ss
mov
mov
subl
sti
sbb
sbb
sub
enter
pop
xor
and
add
jp
pop
or
insb
jo
cmpsb
scas
inc
sbb
divb
sbb
jmp
shlb
lea
ljmp
mov
movsb
inc
jle
pop
movsl
std
and
mov
sahf
andl
mov
or
jb
jl
and
cmp
add
mov
dec
mov
inc
dec
dec
daa
pop
je
or
les
add
fidivrl
loop
xchg
mov
bound
jmp
fistps
add
subl
jg
dec
jnp
sub
div
push
inc
sbbl
add
mov
xchg
push
lcall
or
push
jo
mov
nop
enter
inc
add
adc
cs
insb
cs
ljmp
adc
ret
data16
and
add
ss
pop
stc
xchg
pop
pop
add
popa
xor
push
sub
icebp
xchg
sbbb
mov
lods
andl
mov
add
xor
mov
gs
out
aad
fsubl
ds
push
shll
icebp
ret
stos
add
and
mov
mov
in
out
cmp
cmp
jnp
add
jmp
add
add
cmp
xchg
push
push
loop
push
inc
aas
pop
hlt
mov
mov
into
leave
dec
ficoms
dec
imul
scas
notb
cmc
inc
mov
pushw
xor
adc
push
sub
or
insl
loopne
mov
jb
lods
and
addl
push
dec
add
push
inc
jne
push
jge
mov
inc
xchg
das
pop
idiv
inc
repnz
out
adc
add
rclb
add
pop
jmp
cmp
dec
mov
outsb
jecxz
sub
in
push
push
ja
ret
loop
fdivrl
pop
jecxz
dec
cli
fcmovnu
dec
lret
pusha
or
call
pop
xor
aam
jae
imul
inc
inc
addl
cmpl
jmp
xor
mov
pop
ret
not
dec
fiadds
fadd
xchg
push
out
xchg
sti
xchg
in
pop
test
loope
mov
mov
push
push
popa
clc
leave
cmp
outsl
mov
sbb
insl
or
loope
add
mov
outsl
and
sti
and
std
jle
sbbb
cmp
add
jmp
push
sahf
pop
push
push
fildl
cmpsb
mov
dec
jp
cwtl
inc
arpl
adc
cli
jge
push
jge
mov
daa
je
fbstp
popa
out
loop,pn
icebp
icebp
lods
lcall
sub
loopne
add
loope
sbb
inc
jmp
push
add
sub
jnp
and
ja
xchg
inc
repz
cld
add
mov
mov
mov
int
push
clc
jp
and
dec
fildl
mov
in
cs
sarl
aam
sub
push
mov
or
adc
jg
cli
push
nop
add
sbb
mov
jo
negl
out
add
pop
mov
lock
push
ret
jmp
pop
jge
sub
pop
push
push
jmp
xchg
push
add
cmp
dec
or
pop
inc
ds
jb
push
sahf
out
adc
mov
out
inc
sbb
addr16
push
lods
clc
pop
mov
cltd
inc
ds
in
xor
and
push
jne
pusha
mov
pop
dec
inc
jmp
adc
push
or
mov
sub
cwtl
lock
int
xor
out
jmp
jg
out
leave
add
test
jge
mov
pop
adcl
cmp
ret
mov
push
sahf
push
inc
sbb
cli
popf
cmp
stc
push
push
and
sbb
xor
cmpsl
std
jmp
outsb
and
cmc
or
cmpb
shll
pop
aad
outsl
lock
sub
fdiv
mov
jne
jl
pop
out
cmpsl
mov
enter
imulb
jle
xchg
xchg
stos
mov
jo
sbb
mov
jg
mov
not
push
push
popf
mov
repz
push
stc
out
jmp
inc
stc
cmp
test
mov
in
or
add
add
stc
insl
jns
jb
int3
push
lret
adc
outsb
add
push
mov
mov
out
lahf
cltd
dec
push
and
outsl
inc
pop
fwait
arpl
ficoml
cwtl
addl
lds
cli
and
sub
pop
inc
dec
ljmp
xor
jne
xor
and
add
icebp
sarb
mov
or
xor
dec
jbe
jle
or
loope
out
es
or
or
jno
xchg
cwtl
cld
stos
pop
into
cmp
push
pop
arpl
in
inc
test
cld
icebp
cltd
outsb
les
jb
jns
bound
pop
imul
mov
hlt
dec
xor
stos
repnz
cs
add
push
mov
push
mov
jmp
mov
push
jl
sbb
sbb
dec
or
insl
and
pop
cmp
add
rorb
sub
and
pop
call
test
cmp
xor
add
jmp
dec
scas
or
cwtl
jne
das
scas
bound
out
lret
es
mov
sub
cmp
push
push
cmpsl
test
jne
call
and
add
inc
mov
rcrb
pop
das
cmp
mov
adc
mov
push
loopne
ja
daa
pop
adc
and
ljmp
sub
cmp
sahf
faddl
jbe
or
add
xor
stos
jmp
in
cmp
and
inc
std
adc
in
arpl
cmp
pop
dec
ret
dec
and
or
pop
test
cmp
push
pop
mov
fwait
in
out
loop
mov
xor
dec
dec
adc
sbb
or
addr16
fcoml
repz
inc
sbb
fisttpll
out
mov
mov
outsb
out
subb
pop
jmp
lds
mov
inc
pop
popf
pop
or
jmp
xor
inc
push
ss
in
push
cwtl
xchg
add
or
outsl
xor
fsubr
dec
mov
mov
add
xor
pop
xor
fs
jmp
pusha
mov
daa
rcrl
int
gs
push
pop
in
loope
push
push
sub
mov
xchg
daa
ja
shl
and
cmp
and
adc
push
add
subl
icebp
mov
aad
pop
popa
into
pop
add
jg
cmp
test
xchg
stos
and
mov
aas
xor
mov
fwait
add
and
xchg
in
imul
xlat
and
icebp
mov
insl
dec
andl
sbb
add
das
rcrl
pop
and
mov
das
jmp
jle
js
dec
data16
fbld
dec
push
nop
xor
sub
push
fs
shrb
pop
xchg
daa
xchg
jns
inc
fs
pop
jp
test
andb
sub
add
out
pop
and
ja
sub
movl
xchg
push
push
mov
decb
lods
lods
add
inc
jmp
cmp
adc
stc
jbe
push
out
xlat
lock
in
outsb
cs
add
popa
shlb
fiaddl
xchg
js
xchg
push
mov
push
call
pop
fwait
les
pop
add
or
cmp
sub
dec
lock
fildl
xor
mov
jmp
add
shl
jle
push
lock
push
in
shll
cltd
push
mov
sub
iret
cli
das
hlt
scas
das
pop
sbb
sub
dec
outsl
pusha
sub
daa
push
mov
dec
inc
mov
xchg
in
pop
scas
jo
inc
xor
test
in
mov
out
loope
pop
flds
jnp
stos
mov
xchg
nop
call
push
clc
fbld
sub
mov
dec
inc
orl
orps
daa
test
dec
cltd
jecxz
add
push
mov
inc
aas
lea
loopne
dec
mov
ret
push
mov
cmp
shlb
or
das
testb
cmp
jl
adc
cmp
mov
mov
dec
or
dec
xor
add
add
cmp
inc
into
sarl
push
xchg
in
add
mov
lcall
xchg
and
je
push
sahf
push
jmp
xor
pop
aam
jb
stos
stos
push
or
jg
push
inc
dec
jl
cmp
out
sar
and
rol
jnp
mov
xchg
mov
push
dec
insl
add
gs
xchg
adc
xor
mov
cmp
ja
xor
sub
in
sbbl
clc
frstpm(287
mov
rol
jnp
sbb
push
push
cmp
mov
popa
push
cs
push
jno
mov
jp
and
sbb
fsubl
or
std
xor
adc
xor
outsl
sub
cld
mov
xchg
mov
movsb
shll
imul
jmp
or
loop
add
mov
dec
enter
xor
or
push
test
pop
mov
incl
loop
push
and
cwtl
add
fs
and
lock
or
and
sbb
lahf
pop
fildll
mov
out
add
xor
push
dec
cld
data16
movsb
cmpsb
lock
cwtl
xor
push
aad
push
ret
lds
pop
jmp
push
fmuls
in
out
rclb
lods
out
adc
lods
jl
push
jmp
enter
push
xchg
xor
mull
inc
sbb
call
int3
lcall
aam
arpl
push
adc
movsl
xlat
scas
jns
push
loop
push
test
repnz
imul
push
inc
add
mov
outsl
mov
dec
mov
out
filds
stos
pop
lcall
mov
lret
daa
push
xchg
jg
daa
and
sbb
stc
fnsave
std
out
ds
movsb
sub
jl
jnp
xchg
clc
cmp
mov
push
push
loope
lds
jo
dec
addl
xchg
mov
stc
pop
mov
add
push
mov
and
daa
sbb
xlat
inc
inc
mov
xor
push
jne
inc
pop
push
ja
test
push
add
push
ljmp
and
xor
pop
hlt
shlb
outsb
cs
push
mov
pop
or
fbstp
sbb
cs
ljmp
sbb
pusha
out
pusha
and
test
xor
shlb
jmp
mov
inc
out
and
pushf
shl
add
cltd
jnp
mov
ret
leave
popa
dec
sbb
jmp
add
in
wrmsr
test
cld
jmp
scas
add
pop
out
notl
add
dec
xlat
je
adcl
add
call
add
loop
lahf
shl
add
push
jne
mov
mov
cmpb
sbb
ffreep
push
dec
adc
add
pop
lret
add
jge
xor
sub
push
add
sbb
adc
mov
inc
xlat
sub
adc
pop
and
pop
aas
bound
cmp
ret
xor
adc
leave
add
inc
sbb
mov
push
and
iret
imul
pop
movsb
or
xor
mov
lret
es
popf
dec
add
cmp
out
xlat
out
call
adc
add
sbb
in
sti
jbe
mov
jg
js
add
rclb
jae
int3
xor
inc
insl
push
add
mov
push
in
jp
ret
mov
das
cmp
xchg
rcrb
jnp
adc
sub
sub
lahf
ds
push
jae
int3
and
add
mov
sbb
aad
hlt
aas
decb
add
pop
or
into
ret
dec
add
mov
repnz
je
cwtl
pop
daa
mov
push
sub
push
cmp
jno
dec
sub
test
das
test
out
aas
cmp
dec
inc
add
or
sbb
push
add
sub
rorl
test
repz
adc
cli
outsl
incl
and
jno
sbb
std
test
mov
add
mov
dec
stos
mov
and
rcrb
jg
push
lret
pop
mov
rcrl
imul
add
mov
add
pop
lahf
sub
stos
mov
rcl
xchg
daa
inc
add
das
subb
hlt
or
xchg
mov
sub
mov
loopne
aad
sbb
cltd
or
testb
fs
xchg
out
addb
orl
add
add
push
fs
lods
add
mov
insb
pop
clc
sub
add
sbb
shl
xor
scas
ljmp
or
inc
mov
sti
sbb
in
orb
add
add
adcb
sub
push
jb
arpl
in
push
ficoml
add
add
nopl
arpl
cwtl
cmc
dec
sahf
fildl
dec
mov
sub
fiadds
sbbb
cmp
andb
in
sti
inc
shlb
stc
pop
loop
add
jno
icebp
pop
sub
mov
xchg
cmp
cmpb
sbb
push
fsubs
add
and
into
cmp
imul
jg
lret
pop
das
popf
ja
add
xchg
lret
dec
fadd
filds
ret
add
mov
setne
test
jo
dec
jge
fnstcw
mov
loope
sbb
shr
inc
add
mov
push
popa
lahf
jo
add
cmp
push
mov
add
mov
cwtl
adcl
or
add
mov
shrb
mov
inc
push
push
mov
add
sbb
nop
ljmp
je
add
arpl
push
add
lret
data16
jne
stos
and
pop
dec
mov
imull
or
dec
sbb
adc
test
jbe
addl
js
pop
add
out
shrl
fsub
add
inc
xchg
jb
cld
aaa
addb
inc
call
and
lcall
aad
mov
dec
sbb
enter
mov
add
aas
rolb
xchg
in
add
jle
or
mov
add
andb
enter
mov
or
mov
add
mov
mov
jle
pusha
inc
pop
mov
add
ret
ds
cmpsl
test
jne
add
push
cmp
xor
add
cmpsb
inc
js
pop
add
mov
xchg
mov
fisubs
into
lods
cmp
loope
mov
leave
imull
and
ret
pop
xor
and
clc
lds
lret
adcl
andb
push
xsaves
out
add
mov
adc
push
pop
movsb
mov
xcrypt-ctr
cmpsl
sbb
movsl
fmuls
loope
push
and
sub
mov
push
add
sar
repz
outsb
add
movsb
jb
and
fmuls
add
xor
aaa
cmp
popf
xchg
out
ret
adc
sbb
xchg
in
out
loop
jg
sbb
stos
pop
sbb
mov
xchg
push
dec
jnp
adc
mov
iret
loope
add
movsl
push
adcl
inc
push
call
mov
sarl
add
gs
dec
add
pop
adc
adc
rorb
mov
xor
andl
jl
loop
mov
out
stc
clc
jb
test
add
lock
mov
mov
add
loop
fmuls
mov
pop
mov
xchg
jb
setbe
pop
bound
add
jle
subl
fimuls
xchg
fucom
pop
xchg
push
gs
add
fcoml
xchg
cmp
inc
rol
int3
adc
add
xchg
cli
lods
add
fxch
pushf
pop
idivl
mov
add
movsb
and
out
mov
or
shlb
jmp
sbb
orb
mov
jno,pn
outsl
mov
push
push
lods
pop
push
xchg
push
push
push
xchg
jnp
mov
xor
dec
out
rcll
adc
or
lds
sbb
mov
add
inc
je
rorb
jb
test
sub
jmp
stc
cs
mov
push
add
xor
add
push
jns
add
insl
popf
test
pop
add
or
roll
jl
or
imul
push
pop
fildl
shl
sbb
mov
sub
sub
sbb
adc
std
fst
enter
cmc
cmp
stc
sub
icebp
in
adc
pop
js
mov
push
mov
push
addr16
imul
jnp
xor
icebp
xchg
nop
push
mov
lret
add
pushf
push
pop
cld
mov
pop
xor
lahf
clc
mov
xchg
mov
rcll
mov
int
cli
loopne
cmp
add
mov
outsl
pop
movsb
add
pop
ss
push
inc
cld
pop
test
jb
mov
lock
out
jge
add
loop
jl
cmp
notb
mov
pusha
sbb
mov
pop
out
out
sbb
inc
xor
mov
add
lea
add
pushf
jle
or
movsl
sbbb
pop
cwtl
ja
mov
mov
fiaddl
pusha
xor
popa
inc
and
jg
jl
add
inc
std
mov
ds
pshufw
ret
mov
jno
fwait
imul
pop
mov
pop
jno
inc
add
add
mov
out
add
cs
dec
shlb
setnp
je
or
ret
jmp
cmp
aam
mov
inc
inc
scas
rclb
mov
push
fiadds
int
mov
push
test
mov
mov
mov
jae
sarb
xor
scas
pop
dec
out
add
loopne
jp
orl
lret
dec
cmp
pop
mov
cmp
sti
jbe
adc
sbb
in
jmp
mov
dec
mov
mov
sbb
repz
pop
ja
or
sbb
cmpb
aad
int
test
ss
pop
cwtl
xor
fiaddl
and
jge
es
cmp
mov
lea
add
aaa
jl
sbb
jnp
push
jo
data16
push
dec
mov
dec
pop
cld
nop
jmp
pop
mov
xor
in
add
or
add
mov
sbb
add
fidivrl
xchg
sbb
int3
jnp
push
loopne
jo
jp
and
pop
add
adc
nop
push
add
xchg
mov
leave
add
pop
movb
movsb
dec
push
inc
and
dec
lock
lcall
lods
out
leave
mov
add
and
sahf
add
xchg
push
test
add
push
xor
scas
inc
push
jge
jo
pop
call
test
sahf
orb
jmp
adc
inc
add
sbb
push
dec
sbb
imul
mov
adc
dec
push
mov
mov
sub
jbe
shrl
ret
push
sahf
popa
testl
cmp
sbb
mov
cmp
push
add
adc
mov
test
sub
xor
add
nop
aam
test
sbb
and
sti
dec
add
mov
fstps
mov
add
pop
out
dec
aas
dec
enter
mov
inc
add
jle
add
out
hlt
sbb
push
cmp
xchg
add
xor
fwait
jno
loopne
add
dec
hlt
add
std
outsb
lret
sarb
add
xchg
or
add
xchg
pop
push
cmpl
push
push
sub
adc
and
and
lods
jmp
pop
dec
addr16
arpl
add
out
xlat
cltd
sbb
add
inc
fs
and
mov
mov
add
jecxz
push
cli
int
stc
nop
mov
and
imul
loopne
insl
sbb
movl
pop
jecxz
filds
adc
arpl
dec
pop
test
push
pop
add
dec
loopne
jge
adc
imul
ret
cmp
fcomps
std
leave
push
fisubrs
orl
mov
or
xlat
xor
int
es
xorl
rcrb
jns
dec
pop
jb
das
push
ret
les
sub
cmp
jle
lcall
or
es
hlt
pop
mov
pushf
adc
inc
push
add
xchg
xor
mov
je
mov
out
push
xor
jnp
mov
and
add
loope
sub
popa
jl
mov
push
push
stc
inc
push
adc
test
cmp
or
xor
maskmovq
test
and
mov
outsb
adc
dec
inc
int
or
dec
xor
insl
xchg
adc
add
mov
or
movb
out
mov
enter
cmc
sbb
xor
xor
inc
add
cmp
pmaxub
mov
jl
add
adc
cs
into
cmp
pop
jge
subl
lds
mov
add
pop
push
int
mov
xchg
jp
add
daa
out
das
loope
adc
lcall
adcb
enter
mov
add
scas
jno
ja
mov
aaa
js
call
sub
mov
addr16
pop
stos
xchg
hlt
call
and
je
add
or
add
cmpb
scas
inc
mov
lds
xor
mov
loopne
xlat
or
insl
imul
notb
repz
cmp
xor
push
call
mov
mov
in
inc
xor
test
dec
or
add
les
cmpl
mov
rorb
decl
je
ds
adc
pop
sub
popw
mov
lret
mov
jg
pusha
lcall
or
cmp
popa
ret
or
addb
add
fidivs
aam
mov
xlat
pop
dec
cwtl
ja
jge
mov
mov
and
mov
pop
jg
or
adc
mov
aas
clc
sbb
cltd
incb
fdivs
and
test
movsl
mov
sub
add
nop
inc
ds
insb
sub
xor
pop
push
inc
std
dec
lea
mov
sarl
inc
ficoms
ficoml
mov
add
leave
icebp
jno
outsb
or
imul
incl
push
iret
js
cmp
fstpl
and
clc
outsb
subl
inc
inc
fnstcw
xchg
add
movsl
add
sbb
nop
testl
scas
sub
call
popf
jp
loopne
or
icebp
mov
lret
test
rolb
sbb
add
aas
stos
mov
js
cmp
pop
aaa
imul
pop
adcb
or
lods
add
in
and
mov
add
mov
roll
pop
lods
push
clc
stos
ret
add
in
cltd
push
or
repnz
cmpsb
cmpb
inc
xchg
add
or
mov
lcall
lret
or
insl
inc
aaa
push
add
outsl
and
mov
int
sub
mov
mov
mov
cmp
push
cmp
mov
cltd
jg
andb
pop
cmc
loope
cmpsl
adc
add
les
sbb
int3
popa
flds
mov
pop
gs
addl
test
mov
popa
cmp
dec
imul
dec
dec
xchg
add
loope
lcall
call
jae
xchg
cmp
addb
test
add
lods
and
mov
jl
jns
js
movsb
add
rolb
jbe
fimull
das
push
pop
lcall
arpl
adc
fldt
pop
mov
sbb
call
dec
rep
adc
xchg
cmpb
ja
sub
and
in
lcall
pop
sbb
mov
nop
loopne
mov
pop
cwtl
pop
es
add
add
sar
cmp
jns
loope
and
icebp
inc
pop
shlb
rol
mov
pop
andb
adc
or
mov
push
mov
repz
push
inc
js
push
xchg
outsl
aaa
stos
xchg
push
cmp
cli
jno
jo
iret
mov
cmp
sarb
mov
mov
lret
xor
cmc
inc
dec
int
mov
add
enter
das
lods
mov
cmp
xchg
pop
push
leave
add
ret
add
subb
cmp
fimuls
addl
add
sub
push
jmp
and
dec
js
or
lret
and
cmp
stos
xchg
popa
cmp
adc
add
enter
xchg
mov
ror
cltd
sub
or
jne
xor
xchg
and
rorl
inc
jae
push
aam
js
push
mov
sub
rolb
push
xchg
cwtl
jnp
sbb
mov
xor
fstl
jl
pop
subl
mov
jnp
adc
cmp
mov
cwtl
pushf
rclb
clc
mov
mov
xchg
push
mov
nop
dec
xchg
inc
sbb
push
or
mov
movb
xchg
lret
cmp
push
shrl
stc
inc
nop
dec
xchg
mov
xor
adc
pop
cmp
popa
adc
enter
roll
js
mov
pusha
mov
push
popa
add
subl
adc
push
ror
push
loopne
pushf
pop
in
outsl
sub
psubusw
loope
or
adc
or
xchg
rolb
aam
sbb
push
faddl
cltd
push
bnd
pop
mov
mov
sub
dec
icebp
aam
push
mov
stos
call
sbb
cmpsb
jl
cmp
popf
je
sbb
or
pop
cmp
add
inc
stos
dec
add
in
test
or
test
in
push
sub
add
xor
push
sbb
mov
sti
jns
jge
fisttpl
in
insb
or
cmp
mov
or
push
rol
mov
ss
mov
push
lret
dec
cld
jbe
or
aas
data16
ds
sub
and
nop
in
adc
mov
xor
jle
pop
inc
js
push
jns
inc
mov
or
test
mov
mov
jge
pop
mov
test
ret
push
ja
pop
cmp
cmp
ja,pt
dec
xor
inc
int3
dec
sub
imulb
hlt
std
sbb
jl
jl
je
cmpb
pop
cmp
or
lds
inc
and
jecxz
xor
shr
movl
mov
aaa
pop
inc
pop
rorl
sub
ljmp
sub
or
and
mov
test
in
loop
test
inc
repz
jnp
mov
and
add
inc
cmp
into
aaa
cltd
mov
aas
mov
adc
mov
es
inc
jb
sub
dec
dec
cs
and
adc
aaa
mov
inc
push
fs
ret
mov
nop
xchg
adc
xchg
sub
ret
inc
sub
lcall
mov
and
jns
rorb
or
push
dec
or
inc
mov
and
adc
stos
push
sbb
adc
scas
mov
les
add
ja
xor
inc
out
sub
or
daa
xor
aaa
mov
mulb
mov
cmp
sub
sbbb
or
dec
mov
xchg
mov
pop
push
test
inc
cmp
repnz
sbb
mov
mov
out
mov
mov
test
and
sti
fcomp
and
adc
orl
pushl
or
lods
pop
inc
aam
xchg
and
andb
or
push
sub
add
std
and
stc
fidivs
loopne
mov
arpl
adc
mov
push
pop
and
nop
js
jge
sbb
es
lret
dec
cmp
subl
pusha
push
jo
and
xchg
pop
addb
aam
or
push
inc
push
add
testb
lcall
loop
sub
sub
xor
jbe
push
mov
sbb
cmp
add
xor
sub
popa
cwtl
daa
mov
inc
dec
jbe
jne
lret
adc
or
pop
add
shlb
out
and
jnp
fstps
add
or
inc
ja
mov
xchg
sub
jb
cltd
cmp
pop
dec
or
push
ret
hlt
divb
insb
testl
or
mov
sbb
mov
mov
sub
pop
cmp
push
and
push
add
out
xchg
ret
or
mov
or
jno
xor
shll
or
inc
cmp
xor
push
xchg
inc
add
or
in
or
add
out
push
out
inc
inc
adc
and
loopne
xchg
cmp
adc
lods
xchg
cld
add
add
mov
mov
fistpll
add
mov
fwait
pop
sub
les
pop
or
mov
repnz
dec
iret
loope
dec
and
xlat
clc
xchg
and
jle
add
jbe
sahf
jl
rolb
mov
cld
popf
push
aas
mov
inc
loope
pop
loopne
jno
adcl
insl
push
es
lea
mov
stos
fisubs
arpl
adc
xor
shl
adc
dec
dec
mov
leave
stc
or
outsb
enter
xchg
andb
dec
jno
or
add
cld
add
push
out
cmpsl
into
mov
fsubrs
adc
xchg
aad
rcr
sub
mov
mov
mov
mov
stc
pop
clc
inc
sub
push
out
mov
cwtl
mov
jo
or
pop
into
adc
loope
out
enter
pop
and
push
std
daa
cmp
call
push
mov
rolb
dec
aad
sti
test
scas
pop
movsl
push
rolb
ljmp
lods
loope
nop
inc
loope
inc
add
mov
stc
mov
loope
inc
orl
scas
test
jno
cmp
or
and
jbe
test
add
mov
inc
xlat
push
push
sbb
aam
mov
fcoms
pop
and
sub
insl
ljmp
inc
cmc
icebp
dec
dec
sbb
sbb
into
dec
sub
add
addr16
rdmsr
jb
or
test
std
adc
adc
aaa
push
cmpsb
or
cwtl
rcll
lret
add
push
cli
adc
aas
dec
clc
fidivl
fdivl
inc
push
in
or
and
fiaddl
xchg
add
inc
icebp
sbb
aam
jbe
pusha
aam
sbb
shl
mov
or
pop
mov
dec
in
mov
jmp
mov
stos
cs
cli
inc
popa
mov
ffreep
call
lock
pop
cli
cmpsb
add
lahf
adc
jl
or
add
cmp
inc
add
xchg
xor
inc
inc
push
sub
mov
lock
cmpsb
or
mov
pop
and
xlat
add
lahf
cmp
loop
add
stos
sti
insb
mov
push
fistl
and
cmp
xchg
data16
and
mov
sbb
aad
adc
and
push
sub
scas
add
add
mov
rcr
mov
mov
cld
sti
mov
mov
pop
mov
leave
push
jns
add
cwtl
and
push
pop
lcall
sub
mov
lds
cmp
sbb
sub
and
add
insl
mov
and
and
add
pop
repz
add
jnp
sbb
mov
inc
lods
pusha
xchg
adc
add
and
ret
mov
xchg
dec
add
push
sbb
jbe
fcoml
imull
or
sub
les
adc
jno
fs
sbb
inc
cmp
xor
dec
scas
addr16
adc
aas
adc
jno
mov
add
mov
adc
xchg
pusha
and
sahf
hlt
pusha
mov
lods
mov
icebp
sub
fadds
jb
fisubl
adc
and
js
push
sbbb
pop
mov
test
adc
cwtl
cmp
and
and
sbb
dec
pop
test
mov
inc
mov
sub
sarl
in
mov
or
ror
add
sub
lods
scas
dec
dec
pusha
add
mov
adc
add
into
push
and
or
jns
mov
js
js
dec
and
enter
xor
adc
and
add
flds
jne
fisubs
adc
das
loopne
dec
jle
cmp
sub
addr16
add
cmp
xchg
adc
push
je
adc
sub
in
cmpsb
js
add
push
cltd
pop
test
add
push
push
adc
xchg
pop
jle
faddp
cs
cmp
mov
pop
inc
icebp
dec
stc
and
cli
cmp
test
nop
add
das
in
dec
pop
loop
inc
cwtl
add
dec
cltd
add
lcall
push
imul
orb
push
enter
dec
add
imul
gs
inc
push
stos
mov
push
pushfw
pminsw
out
ret
rcrb
gs
mov
int
xchg
xor
add
mov
ds
inc
js
xlat
mov
xchg
inc
mov
aam
or
lds
sbb
fcompl
mov
cmpb
xorb
pop
stc
sbbb
push
fcoms
jb
arpl
mov
inc
mov
add
in
add
mov
arpl
pusha
bound
imul
pushf
xlat
and
cmp
jge
add
jae
xchg
ja
fadds
dec
pop
mov
or
lods
sbb
xchg
sub
mov
aam
push
jns
mov
push
sub
sbb
in
ss
insb
mov
pop
aam
aas
pop
divb
lret
mov
and
and
xchg
enter
stos
adc
push
rorb
and
imul
sub
push
inc
neg
lds
and
jge
push
stos
dec
mov
enter
cli
cmc
aad
loopne
imul
push
clc
jg
push
cltd
cmpsb
mov
data16
fildll
cld
adc
bound
and
loop
pop
mov
sub
xor
xor
push
in
nop
and
jp
cli
jo
or
test
test
enter
add
aas
rorl
jae
sbb
scas
jp
ljmp
jb
cld
adc
pop
add
mov
push
inc
mov
adc
and
cmp
adcl
push
hlt
fildl
sub
or
push
aam
cmp
dec
and
add
dec
mov
sub
sbb
mov
inc
xor
and
mov
lock
arpl
pop
in
push
fistpll
fisttps
sbb
add
mov
popf
out
dec
push
inc
pop
clc
adc
cmp
es
dec
add
into
clc
pop
adc
mov
and
insl
xor
leave
ljmp
lds
and
push
lods
aam
pop
cmpsb
mov
jnp
paddsb
popf
push
andb
mov
sub
out
ret
pusha
sbbb
enter
std
mov
and
jmp
sbb
mov
shr
lods
sbb
xor
push
filds
xchg
inc
lock
jge
push
int3
stos
scas
ds
adc
shrb
jg
frstor
js
jge
or
xchg
and
lock
mov
pop
xchg
loopne
scas
inc
mov
add
cmp
cmp
jle
xor
repz
cmpsb
fucom
in
mov
push
xor
dec
add
iret
dec
dec
cmp
add
int3
sub
adc
leave
sub
dec
rolb
ljmp
cmp
btr
out
mov
adcb
add
rolb
jmp
or
mov
xchg
sbb
ret
mov
sub
enter
xor
lea
pop
and
mov
add
popa
adc
movsb
push
mov
mov
mov
imul
mov
sbb
das
mov
mov
jmp
inc
inc
loope
imul
or
inc
fildl
test
sbb
fdivs
mov
dec
insl
lock
pop
lods
sbb
imul
js
pop
mov
clc
or
pop
cli
jle
xor
inc
loopne
jo
pushf
cmp
iret
sub
or
mov
les
sbb
xorb
push
or
jno
mov
and
jg
in
flds
loope
or
mov
stc
sub
xor
mov
jne
xor
popf
mov
add
dec
inc
xor
inc
dec
inc
rcll
arpl
dec
push
add
mov
add
aam
add
pop
adc
and
adcb
mov
push
cmp
shrb
pop
lret
lds
xor
add
pop
dec
repnz
or
aas
fists
iret
sub
sbb
mov
or
enter
cmp
push
xor
xor
jns
and
pop
shlb
or
adc
filds
or
es
mov
push
in
push
push
sub
or
cmp
dec
push
loopne
cmp
or
xchg
add
push
and
xchg
adc
subb
push
and
or
push
out
hlt
inc
inc
mov
mov
loope
or
inc
mov
mov
loope
lock
lock
add
das
mov
lods
insl
cmp
cmp
fs
inc
add
push
sub
adcb
lods
loope
daa
sub
std
stos
and
pop
push
movsb
fsubrs
sarb
mov
adc
inc
add
shlb
or
jge
ret
test
cmp
stos
lods
lods
add
xor
sbb
shl
mov
push
inc
cmp
jg
repz
inc
popa
sub
in
or
test
mov
jp
push
push
inc
sub
and
sbb
icebp
mov
and
sub
leave
popf
dec
add
fnstsw
das
xchg
cmp
out
and
or
sbb
mov
sti
out
cmp
sbb
roll
inc
call
xchg
pop
mov
add
out
sub
push
xchg
shrl
scas
pop
sub
loopne
inc
rolb
lret
mov
test
pop
xchg
add
icebp
inc
jge
pop
cmovp
inc
sti
mov
aaa
push
test
daa
enter
mov
mov
xchg
pop
jae
add
push
insb
push
xchg
fisubrl
push
sub
iret
stos
push
or
push
mov
and
out
dec
das
adc
add
mov
sub
repnz
idivb
xor
call
sub
gs
std
mov
pop
aaa
jbe
iret
popf
inc
sub
jne
and
sub
mov
in
movsl
pop
mov
add
in
jno
cmp
add
add
in
inc
rcrb
cmp
push
pop
iret
add
lods
shrb
add
mov
mov
mov
xchg
aad
cmpsl
sub
mov
mov
rolb
loope
mov
scas
xchg
add
inc
ret
xor
cmp
add
das
jp
js
rorl
mov
pop
shlb
inc
add
fbstp
sub
divps
mov
into
xchg
mov
iret
mov
sbb
push
push
mov
inc
or
sarb
inc
ss
sarl
mov
xchg
mov
mov
mov
add
mov
inc
cmc
outsb
jg
add
lret
mov
sub
int
cmp
and
cltd
cmpsl
add
aam
add
out
push
test
cltd
div
adc
mov
add
out
xor
lret
outsl
mov
pop
add
push
push
sbb
mov
xchg
xchg
push
mov
xor
dec
inc
aad
in
mov
sbb
pop
adc
add
pop
push
ds
pop
aad
mulb
mov
and
adc
imul
mov
nop
adc
daa
jo
add
jle
imul
frstor
aaa
subl
fcoms
ret
loope
into
add
loop
add
and
inc
adcb
adc
and
inc
sahf
pop
je
loopne
fdivr
add
test
mov
push
and
lds
or
aas
pop
gs
inc
out
sub
xchg
xlat
add
movsb
cmp
cwtl
js
mov
sub
movsl
or
test
push
push
cwtl
mov
lea
push
sub
dec
jae
adc
addr16
inc
push
mov
push
lea
fmul
xlat
int3
je
lods
cmpb
adc
add
test
adc
inc
pop
cmp
out
push
cmp
testl
add
imul
cmp
cltd
or
mov
scas
clc
or
and
icebp
sbb
xor
sub
xchg
repnz
mov
rcrl
call
enter
add
icebp
xchg
inc
cmp
andb
cmpsb
jp
aam
loope
xor
fisubrl
push
aam
push
sbb
push
sbb
pop
icebp
cmpb
add
xor
dec
in
or
sbb
inc
or
cwtl
mov
add
sahf
cmpsl
add
enter
add
dec
fnstcw
shl
jge
add
jb
test
dec
leave
and
xor
push
add
scas
sub
jmp
xor
popa
jbe
xchg
sti
pop
push
xchg
or
push
icebp
ja
dec
lret
jmp
cmp
add
jg
add
mov
cli
ret
mov
movsb
insl
iret
jnp
mov
dec
addb
into
pop
pop
in
cli
cli
out
dec
xor
and
sbb
out
mov
mov
jo
cli
loopne
icebp
add
lret
popf
jb
scas
or
mov
repz
cli
adc
fistpll
test
jecxz
add
in
or
push
add
rorb
mov
add
std
out
add
dec
ds
cltd
mov
lods
push
sub
xor
jg
pop
mov
les
push
lock
xor
mov
imul
lahf
call
mov
push
cld
nop
push
pusha
insl
xorb
aam
ds
add
jg
test
lahf
rol
das
sub
cmp
mov
xor
inc
or
call
popf
jecxz
xor
clc
inc
pop
mov
and
fwait
mov
add
iret
out
cmp
add
bound
add
jg
pop
mov
dec
add
sarb
add
sbb
adc
data16
popa
mov
js
les
addr16
sti
mov
stc
daa
stc
pop
fsubrp
rolb
xor
cld
js
xlat
fsubl
fstpt
orl
xchg
outsb
inc
mov
mov
jge
mov
dec
and
add
jp
or
jg
adc
mov
outsl
mov
add
sbb
pushf
movsl
xlat
fisubs
inc
cmp
fsubs
xor
add
frstor
ds
mov
orb
js
or
enter
outsb
add
inc
movsb
sbb
pop
fists
and
dec
jmp
sub
int
push
mov
push
pop
xor
mov
out
les
call
add
pop
push
adc
inc
std
sarb
je
and
pop
inc
pop
xchg
aad
pop
xchg
iret
repz
mov
ret
xchg
dec
adc
push
jmp
popa
test
mov
sti
stos
test
add
imul
add
arpl
push
cmp
inc
add
fnstenv
test
cld
testb
xor
lods
mov
adc
hlt
es
shrl
xchg
ficoms
fldenv
dec
arpl
mov
cmpsl
add
fadds
incb
out
push
xchg
js
add
cmpsl
xor
das
mull
daa
je
pop
clc
jae
dec
subl
add
pop
loopne
dec
pop
data16
mov
push
push
loop
xor
hlt
mov
shlb
ret
bound
xor
adc
add
jne
stc
shlb
xchg
or
inc
jo
lahf
dec
lods
inc
pop
ret
gs
ret
cmp
add
or
outsl
popa
iret
shll
lods
or
xor
jl
and
addr16
imul
dec
cmp
pop
xor
mov
cmp
ss
add
movsb
out
dec
aas
mov
lret
dec
inc
push
dec
jecxz
adc
fistpl
inc
inc
lods
out
ret
ss
push
pusha
enter
mov
rorb
loopne
in
mov
adc
xor
sbb
inc
cmp
dec
push
dec
cmp
fnstsw
dec
inc
in
xor
aas
pop
std
xchg
rolb
dec
cmp
inc
or
mov
addb
mov
pop
jecxz
dec
inc
adc
repz
push
xchg
mov
iret
int3
cmp
mov
stc
adc
loop
je
or
frstor
lock
inc
inc
adc
cld
movsb
inc
mov
out
cli
dec
scas
std
pusha
loopne
stos
je
arpl
and
lret
cli
jo
or
xchg
xor
shld
and
mov
leave
push
sbb
arpl
add
lret
imul
pop
into
call
pop
shlb
dec
dec
inc
adc
mov
sbb
xor
movb
lcall
stc
into
out
enter
dec
dec
mov
or
loope
xchg
mov
and
xchg
push
jp
xor
dec
and
add
mov
xor
lea
sub
xchg
cs
jmp
xor
ficoml
icebp
cmpsl
stos
push
lock
xor
outsb
sub
xor
inc
test
inc
and
add
jge
lock
and
pop
cli
inc
cmp
addr16
sbb
scas
lods
dec
mov
ss
jae
xchg
test
mov
pop
test
popa
mov
and
xchg
shrb
add
sub
and
lcall
push
mov
ljmp
test
cmpsl
and
sub
icebp
adc
push
inc
lea
push
adc
out
or
push
mov
js
call
movsl
loop
and
mov
mov
aas
lea
mov
cwtl
call
test
test
and
jmp
rclb
loopne
sbbl
clc
ret
stos
test
push
fcoml
add
xchg
xor
push
adc
mov
inc
sbb
inc
inc
insb
scas
or
cmpsb
sahf
fmuls
and
sbb
add
icebp
xchg
sub
imul
add
in
add
add
lcall
xor
sbb
xchg
or
cwtl
int3
sub
scas
cmp
dec
add
and
sbb
mov
jae
pushf
lods
jp
adc
jns
xchg
pop
daa
rcll
mov
pop
aas
cmp
aaa
pop
data16
cltd
movsl
das
mov
and
cmpsl
lea
cmp
ror
cli
cwtl
sbb
cmp
add
or
lea
add
enter
xchg
push
and
popa
into
xchg
daa
jecxz
push
shrl
sbb
push
das
leave
mov
inc
sbb
add
pop
mov
cltd
daa
push
push
add
in
imul
mov
push
ljmp
icebp
faddl
movsl
aas
pop
adc
imul
jmp
fcoml
add
enter
cmp
cmc
lahf
sub
push
xchg
dec
scas
aad
rclb
enter
add
xchg
lock
sbb
adc
pop
je
clc
dec
jg
xor
mov
loopne
dec
lahf
jae
push
pop
inc
loopne
mov
adc
enter
xchg
xor
lock
les
icebp
cmpsb
lahf
adc
mov
mov
es
push
and
inc
loop
sbbb
cmp
sub
mov
lcall
lahf
adc
push
les
add
and
shll
cmp
lret
add
xchg
cmp
push
push
adc
inc
rclb
lret
or
dec
xor
mov
aad
jecxz
lods
push
add
aas
mov
inc
cmp
inc
ss
add
pop
or
sbb
dec
mov
adc
or
scas
xor
add
push
sbb
loope
adc
xor
xchg
jecxz
rcll
dec
and
and
js
dec
dec
je
ficoml
sub
jg
in
inc
xor
inc
xchg
and
xor
and
add
xchg
or
lock
adc
in
add
inc
mov
mov
adc
dec
ja
adc
mov
fwait
pmuludq
lcall
out
andb
xchg
int3
mov
adc
bound
lods
jl
add
dec
lock
push
addr16
cmpsb
cwtl
mov
lcall
js
lcall
rolb
ja
adc
sub
inc
jmp
mov
and
fwait
insb
xchg
push
xlat
add
test
ficompl
cltd
rorb
cmp
mov
cmpsl
fists
cwtl
mov
nop
cmp
add
icebp
dec
loope
or
dec
test
hlt
mov
aam
fisttpl
andb
stos
add
test
dec
xchg
pop
fldl
or
and
xor
ficompl
mov
fistpl
movsb
or
or
mov
sbbb
call
lea
add
cwtl
or
sbb
fwait
or
mov
ret
add
or
pop
nop
dec
push
fmuls
and
dec
jb
nop
inc
in
sbb
fsubrp
xchg
out
sbb
ret
mov
xchg
dec
jge
loopne
jecxz
jo
jl
cld
or
sbb
cltd
mov
sub
inc
cmp
orb
sbb
pop
add
aam
fisubl
movsb
add
xor
sbb
loop
fwait
cmp
cmp
adc
clc
jp
add
cmp
sbb
loope
push
je
dec
cmpsl
sbb
js
enter
nop
and
sarb
hlt
push
loopne
cwtl
add
lea
nop
in
test
jnp
jo
loop,pn
adc
test
xorb
loopne
xor
fs
mov
and
aam
loopne
nop
pop
push
test
mov
cmc
fisubl
jle
cmp
add
outsb
xchg
cmc
rclb
andb
movsb
outsl
test
imul
mov
or
loop
xchg
jmp
xorl
or
scas
xchg
or
jl
fbld
fcmovbe
and
and
mov
cmc
in
je
stc
add
cmpsb
mov
and
je
push
or
dec
xor
nop
or
enter
pushf
ja
xchg
cmp
pop
pushf
test
mov
test
jl
xor
mov
fnstsw
call
inc
fcompl
and
loope
sbb
pop
xlat
jo
mov
sub
ret
int3
add
insb
sbb
cmpsl
push
or
sarb
nop
add
cwtl
sbb
jns
cmp
add
adc
mov
lock
out
fisubrl
rclb
or
or
jmp
pop
cwtl
lock
scas
xchg
je
xor
sbb
xchg
sbb
lea
dec
shld
xchg
js
fistpl
inc
cmp
and
cmp
push
jg
cmpsb
pop
sbb
call
dec
and
jmp
test
sbb
dec
fisttps
fimuls
xchg
icebp
jb
push
test
aam
and
fsubs
aam
scas
lods
push
add
in
mov
mov
jno
sub
rcll
xor
xorb
sub
rol
in
in
mov
push
cmc
imul
xchg
addl
sbb
sbb
movsl
imul
inc
lcall
stc
imul
adc
mov
addb
xchg
jmp
and
cmp
aas
enter
sbb
sbb
xchg
mov
out
or
inc
aad
pop
dec
shlb
dec
add
xor
jmp
xor
mov
pop
jmp
sbb
ljmp
xchg
sub
loopne
add
adc
dec
mov
les
cmpsl
and
xchg
sbb
gs
sbb
in
push
jle
leave
aas
pusha
mov
add
imull
adc
mov
or
enter
pop
shrl
add
xchg
leave
orb
out
inc
sbb
aaa
sub
pop
stos
cmp
sub
mov
repnz
adcb
add
add
push
add
inc
sbb
mov
mov
adc
add
pop
and
inc
push
and
sub
or
adc
arpl
adc
enter
sbb
mov
jecxz
add
lcall
pop
mov
xorb
ja
in
in
fcoms
cmp
ja
test
mov
ficoms
lods
inc
movsb
add
adc
pusha
jmp
idivb
xchg
sub
xor
xor
xchg
xor
or
mov
pop
fs
fisttps
ret
out
push
add
loop
lcall
sub
adc
das
in
and
in
sbb
push
insb
popl
xchg
mov
ds
inc
xchg
scas
cmp
inc
add
in
cmpsb
sbb
cmp
leave
mov
orb
mov
cmp
xor
or
push
lods
mov
push
incl
fisubrs
clc
mov
das
int3
or
pop
lds
and
popa
je
xor
imul
push
stos
adc
fisttpll
in
adc
lahf
rolb
paddb
aad
aas
pop
jne
sbb
push
dec
rorb
or
inc
pop
sub
sub
inc
xor
fwait
fs
push
jo
mov
mov
fsubrl
test
aad
mov
jb
mov
nop
inc
pop
loop
and
pop
test
test
or
cmp
roll
sub
add
push
das
sbb
inc
jecxz
fs
or
sub
or
icebp
inc
adc
and
inc
fisttpll
cmp
xor
xchg
mov
sub
jle
stos
add
adc
popa
dec
dec
xchg
hlt
push
adc
shrb
std
jns
jbe
fadds
jnp
mov
pop
cmp
cmc
ljmp
mov
fmuls
and
lock
rclb
test
jmp
scas
test
push
mov
pop
pushf
cmp
dec
xor
popa
in
imul
xchg
lods
inc
ljmp
xor
add
fwait
pop
stos
mov
mov
mov
or
mov
out
mov
lods
sub
pop
fiadds
mov
adc
nop
aam
out
insl
or
xchg
xor
sbb
or
mov
sbbb
test
and
outsb
mov
repz
das
jae
or
movsb
lds
idiv
dec
xchg
lea
add
jbe
mov
mov
repz
stos
jge
cmp
add
inc
pop
cmp
push
inc
pop
loope
and
shlb
xchg
and
push
dec
add
sub
jle
xchg
int3
add
outsb
push
jl
ja
pop
jge
aad
inc
ret
inc
adc
mov
mov
mov
addr16
inc
test
jp
loop
jnp
inc
inc
lods
xorl
or
jns
mov
jnp
inc
push
daa
ret
push
push
addb
add
mov
leave
push
shl
mov
jns
sbb
mov
mov
adc
inc
or
and
inc
mov
xor
loopne
xor
adc
mov
mov
subb
test
loopne
add
push
mov
xor
dec
mov
push
hlt
add
add
lea
pushf
jns
add
jp,pn
call
in
sbb
mov
xchg
inc
add
fadds
ror
dec
xorb
mov
cmp
popl
xor
jle
addr16
and
xchg
jl
stos
adc
inc
lock
cmc
or
dec
lock
sarb
mov
loope
xchg
insl
leave
out
repnz
add
scas
sarw
mov
push
sbb
movsl
cmp
testl
data16
adc
or
imulb
insb
sub
dec
je
adc
stc
mov
mov
jp
shrb
mov
pop
xchg
jnp
in
call
mov
jge
and
xor
lcall
aam
push
out
js
cwtl
mov
cwtl
cwtl
sub
fsubrs
daa
push
rclb
mov
inc
jg
pop
aas
or
jns
cmp
and
sbb
add
adc
xchg
sub
mov
fsubs
xor
cwtl
out
pushf
test
outsb
pop
pusha
inc
stc
sub
mov
outsl
test
mov
adc
shrl
nop
repnz
inc
icebp
movl
dec
outsb
push
sahf
lahf
lcall
es
mov
je
inc
add
clc
mov
dec
cmp
xor
enter
pusha
cwtl
inc
push
int
and
dec
clc
add
scas
mov
divb
jge
orb
add
mov
or
andl
mov
mov
jb
pop
test
cmp
test
xchg
lret
cmc
add
xchg
iret
push
stos
cvttps2pi
jle
arpl
int
push
inc
shlb
sub
pushf
mov
push
xchg
sahf
mov
inc
aaa
daa
test
dec
inc
xor
dec
stos
int
in
test
cmp
and
and
repnz
test
pop
sbb
xor
inc
repz
je
xchg
add
andl
add
bound
fsubrs
lock
cmp
outsl
test
xchg
mov
add
push
mov
mov
inc
pusha
repnz
jl
jne
pop
iret
fadd
in
sbbl
lea
dec
cmp
insb
shlb
sbb
add
test
ret
int3
sahf
add
dec
cmpsl
cmpsb
jle
cltd
sub
out
sbb
sbb
cmp
cld
movsb
pop
or
and
shll
inc
fnstsw
fimuls
dec
sbb
add
movsb
jae
add
testb
sbb
out
cmp
inc
mov
lcall
fiadds
sub
push
or
cmpsb
pusha
or
out
mov
push
adcl
test
insl
and
sarl
add
mul
pop
adc
jnp
inc
test
repnz
loopne
ds
adc
xchg
push
movsb
inc
push
add
frstor
mov
aaa
loop
push
jg
mov
push
nop
or
lahf
data16
sbb
xlat
test
popa
add
in
gs
pushf
mov
fimull
insb
ja
mov
orl
add
mov
add
int3
or
test
negb
cli
add
push
scas
cmp
movsl
cwtl
in
xor
pop
ljmp
lahf
pop
push
subb
lock
sbb
or
jb
add
xor
adc
fiadds
test
lret
adc
pop
pop
mov
sub
jo
call
adc
je
push
test
jge
sbb
jns
mov
std
cmpsl
and
sbb
pushf
aad
add
xor
stos
mov
sub
aaa
test
lods
loop
mov
mov
xor
xor
stos
hlt
test
std
pushf
cmp
xchg
sub
pop
push
test
sub
mov
lahf
sbb
xchg
sbb
mov
out
sbb
push
enter
xor
add
rol
lcall
mov
sub
pop
mov
fsubrs
loop
push
movsb
add
mov
or
add
into
pushaw
dec
pusha
mov
sbb
clc
cwtl
dec
pushf
add
shlb
push
pop
sbb
and
pop
sbb
icebp
inc
orb
in
ja
outsb
inc
pop
outsl
pop
or
xchg
pop
xor
xor
ss
sbb
andl
ficoms
test
pushf
ds
or
test
push
inc
or
sti
inc
xor
nop
sub
sbb
jae
je
data16
das
imul
add
lods
or
imul
aam
movl
xchg
sub
or
pop
sbb
jg
out
mov
imul
sarl
inc
subb
sbb
inc
jl
jno
sbb
and
popl
mov
movl
add
xor
push
dec
fsubrs
arpl
xor
xchg
jge
add
add
push
enter
add
scas
adc
add
and
cmc
mov
inc
and
and
mov
out
repnz
clc
out
out
cmc
cmpsb
add
or
push
movsb
inc
cmp
pop
add
xlat
rorb
sub
mov
mov
call
out
jb
cli
nopl
test
jno
sbb
test
add
cmc
add
shlb
in
ja
cmp
fs
adcl
xchg
inc
cmp
sbb
add
dec
jno
add
pop
inc
mov
push
and
sub
data16
jae
nop
rolb
dec
sbb
push
cmp
sbb
add
mov
inc
and
cmp
sahf
shlb
sub
xor
rol
loope
cmpsb
les
pusha
sbb
mov
aas
pusha
sbb
sbb
and
xor
subl
jne
push
mov
roll
sub
lret
inc
and
test
stos
ret
insb
cmp
mov
sbb
add
pop
jo
add
and
dec
cli
mov
adc
or
scas
push
mov
inc
out
addb
pusha
jne
jbe
ja
pusha
shlb
in
add
sbb
push
andl
pop
add
in
and
lods
adc
sbb
dec
sbb
and
xchg
mov
into
cli
sub
movsl
and
cwtl
cmc
add
jnp
scas
addb
pop
sub
push
dec
mov
popa
or
jg
fimuls
les
inc
pop
ja
js
add
mov
xchg
pusha
sbb
pop
pusha
lods
push
xchg
sahf
sub
mov
pop
jns
sub
dec
mov
aaa
or
dec
add
add
push
cmpsl
jno
ret
fs
cli
inc
nop
jl
sbb
jne
fmuls
add
mov
cmp
jo,pn
in
or
les
and
push
mov
push
or
sbb
nop
and
pop
aas
sub
je
xor
js
fsubr
xor
pop
mov
fildll
jg
add
push
dec
fsubrl
mov
neg
adc
pop
and
js
jns
mov
and
in
test
aad
adc
xor
adc
adc
cmp
jno
insb
xor
adc
cmp
pop
add
fcomps
or
test
movsb
scas
cld
sub
dec
aam
in
cs
add
lods
shld
xor
or
test
xorb
in
js
xchg
pop
jns
add
push
jecxz
test
loope
push
lcall
jecxz
and
cli
lret
fs
test
push
fisttpll
outsb
cmpsl
cmpsb
fscale
popa
pushf
fsubr
scas
into
xor
stos
or
clc
add
jne
shl
cltd
pusha
ss
and
xor
and
std
fdiv
jnp
cwtl
sub
adc
jecxz
repz
cli
and
mov
test
pop
mov
sub
pop
iret
push
clc
xor
xchg
sbb
cltd
sbb
cmp
inc
pushf
pop
dec
addb
test
sub
jl
mov
and
mov
faddl
mov
sub
jnp
lcall
add
pop
nop
or
add
les
add
outsl
sarb
popf
subl
in
xor
inc
jo
inc
xor
jbe
clc
lods
mov
xchg
mov
ja
xor
enter
in
vmovaps
push
popa
push
jmp
sbb
jg
pop
jmp
cs
or
jecxz
repnz
jbe
out
jnp
rcrb
sub
lds
aas
loopne
in
sub
cmpl
loope
inc
xor
pop
lret
jl
push
movsl
hlt
add
inc
je
pop
mov
push
fadds
mov
jae
adc
cwtl
or
and
add
pop
and
xchg
ds
add
cwtl
add
pop
jecxz
mov
adc
or
test
lods
dec
sbb
add
xchg
or
fwait
fs
pop
inc
dec
sbbl
adc
shll
imul
js
test
cmp
data16
je
xchg
adc
je
dec
stos
jmp
iret
sbb
rcll
cwtl
sbb
sbb
mov
and
jle
dec
mov
pop
jbe
fiadds
mov
cli
dec
and
aad
mov
cmp
shlb
sbb
cmp
orb
jnp
push
xchg
sub
jo
jb
dec
mov
fidivl
xchg
and
xchg
or
pop
add
pop
dec
sbb
lahf
sub
cltd
sbb
cmpsl
sti
je
loopne
push
jno
adc
mov
loop
pusha
sbb
divb
xchg
adc
test
fsubs
cs
daa
add
movsb
mov
aad
jno
insb
adc
and
add
test
addb
add
xchg
or
mov
add
adc
int
sti
push
pushf
mov
or
push
enter
orb
in
addb
mov
pop
scas
out
mov
iret
ficompl
jb
roll
inc
adc
and
and
in
je
les
cmp
js
fildl
loopne
push
je
fdivs
sub
out
mov
sahf
stos
adc
xor
xchg
xor
popa
insl
cmp
sbb
rclb
faddl
jbe
sbb
adc
and
bound
jno
and
xor
sbb
repz
mov
fistl
mov
jp
sti
pusha
pushf
jmp
or
mov
add
sub
loop
mov
shlb
jp
movsl
pop
loope
clc
jae
mov
xor
in
loope
test
mov
add
data16
or
xlat
dec
mov
shlb
and
mov
adc
xor
cmpb
xchg
ljmp
cltd
and
push
and
pop
sub
out
leave
pop
loope
lods
xchg
cmpsb
mov
insb
lock
inc
adc
subb
and
pop
out
shlb
or
sbb
sub
sub
adc
lds
and
loope
sbb
in
inc
movsb
incb
pop
leave
inc
sbb
jnp
xor
pushf
add
pop
xchg
add
push
int
mov
jae
gs
daa
sbb
xlat
test
and
and
cmp
movsb
push
enter
out
mov
xchg
and
test
aaa
fs
push
sbb
adc
sbb
aad
lock
ret
rcll
stc
mov
adc
daa
xor
movsl
cmp
mov
pop
or
push
nop
call
test
out
pop
xor
repz
jg
je
sub
mov
sbb
xor
pop
call
icebp
xor
and
js
inc
and
andb
add
fisubl
cmp
orl
hlt
shlb
stos
inc
pop
and
add
mov
adc
ja
das
ret
pop
mov
xchg
cmp
frstpm(287
sub
and
dec
icebp
bound
inc
add
test
jmp
hlt
sbb
pop
add
sub
sub
inc
xor
and
addb
push
push
rorb
jecxz
add
dec
aad
mov
lock
inc
stos
inc
mov
fsubr
dec
insb
mov
pushf
mov
mov
lods
or
push
pop
fmull
or
push
stos
repz
das
inc
cmp
jae
cs
je
add
cld
adc
ret
cmp
mov
jno
bnd
xchg
hlt
push
jecxz
pushf
stc
and
push
or
mov
repnz
cmp
pop
inc
xor
adc
jp
cltd
push
sub
and
imul
mov
in
adc
sahf
aaa
test
lahf
push
movsl
inc
std
and
movsb
and
add
xor
mov
mov
stc
ret
mov
and
cld
fcomps
aas
pop
iret
mov
mov
aaa
rcll
dec
dec
pop
lock
shlb
ja
pop
sub
add
repz
cld
pop
es
shlb
jnp
dec
das
sbb
pop
pop
movl
mov
pushf
ficompl
rolb
rcrb
hlt
js
push
inc
mov
popf
lock
movsb
loop
test
cmp
push
push
inc
sbb
mov
stos
outsl
les
inc
arpl
lods
loopne
dec
adc
and
push
pop
jnp
xlat
mov
add
pop
arpl
sub
xor
aad
pop
jns
iret
jmp
cmpsl
stc
insl
es
in
xchg
pusha
inc
lock
popa
xor
adc
hlt
cmp
cld
mov
jnp
fimuls
jne
adc
rcr
icebp
les
xchg
xchg
inc
dec
dec
mov
std
in
add
fwait
sub
xchg
cld
add
test
popf
cltd
mov
sub
lods
addb
je
add
cmp
pushf
rcrb
or
mov
scas
add
dec
jno
dec
and
cmpl
sub
nop
arpl
cltd
jg
stc
mov
mov
mov
add
outsl
repz
out
mov
push
adc
dec
sbb
sub
enter
dec
fsub
add
mov
sahf
lock
mov
fs
jns
in
ja
sbb
add
push
mov
subl
adc
mov
mov
xchg
sub
rorl
mov
adc
jle
or
mov
pop
je
add
jo
adc
push
std
dec
and
push
enter
push
push
lahf
loope
jae
inc
xchg
pusha
or
cltd
faddl
mov
jo
xor
mov
cmp
adc
mov
rcll
add
cmp
xorb
sub
xchg
sub
adc
faddl
jp
jns
pop
xchg
sub
push
xlat
or
dec
scas
dec
xchg
rcrb
inc
fcom
push
sub
lock
adc
rolb
mov
jl
lea
and
sub
sub
mov
shlb
and
push
adc
push
push
mov
mov
inc
jno,pn
xlat
inc
and
jb
sub
mov
dec
mov
dec
lahf
add
add
inc
add
fbld
sysexit
das
inc
fimuls
sarb
scas
pop
bound
sbb
cmpsl
jp
das
rclb
shrl
pop
rolb
movsb
cmp
add
mov
xchg
insb
mov
lods
fs
push
sub
jl
mov
arpl
jmp
inc
lods
test
lea
push
nop
and
outsl
jge
sti
imul
mov
mov
lods
add
int3
lock
insl
and
jl
mov
adc
in
fsubs
inc
adc
je
xor
push
or
hlt
in
jg
in
js
mov
pushf
frstor
mov
dec
jo
or
divl
mov
pop
dec
sub
cmpsb
add
mov
fsubs
xchg
jnp
mov
jno
sbb
popa
mov
pop
in
mov
adc
add
mov
fisttps
shlb
mov
in
daa
flds
cmp
dec
test
sarl
daa
cmp
pop
movsb
mov
xchg
mov
cmpsl
into
inc
or
adc
subb
mov
or
movsb
mov
sub
xor
aad
out
push
in
and
out
add
jnp
pop
scas
and
and
mov
rcrb
mov
sbb
enter
daa
xchg
call
mov
pop
and
xor
add
or
das
push
outsl
xlat
add
shl
jne
add
imul
mov
jae
dec
movaps
test
rorl
dec
aam
inc
andb
and
or
cmpsl
xor
dec
std
cs
mov
loopne
pop
cmp
inc
dec
jl
push
jns
push
and
sbb
movsl
inc
roll
push
push
ror
leave
pop
dec
jo
sub
add
and
je
dec
mov
out
and
dec
jae
push
adc
std
or
jns
sbb
in
icebp
push
add
add
subl
stos
mov
enter
or
out
lock
add
adc
in
jne
sub
xor
movsl
add
sbb
andb
xor
clc
out
movsb
push
in
mov
mov
lahf
or
adcb
pop
shlb
add
pop
imull
cmp
xor
push
pushf
pushf
mov
popa
add
push
rcrl
cmpsb
or
std
sahf
dec
stos
aam
hlt
in
pusha
mov
jbe
bound
ja
subb
int3
xchg
into
shlb
mov
xlat
and
loopne
fwait
loop
pop
test
stos
out
push
movsb
movsb
daa
sub
pusha
sub
xchg
or
fdivrl
sbb
or
and
add
lahf
mov
nop
push
and
and
mov
imul
sub
sbb
aas
push
popl
stos
mov
add
stos
mov
sbb
sbb
popa
sub
cmp
in
loopne
in
es
lcall
or
dec
and
mov
loopne
cld
or
fnstsw
bound
add
adc
pop
xor
in
xchg
xchg
xor
movsb
dec
inc
mov
lret
inc
xor
ds
sub
movsl
or
add
loope
adc
jle
and
sbb
or
pop
mov
inc
mov
and
mov
inc
add
xchg
pop
lea
xor
pop
pop
xchg
add
in
incl
test
add
xor
mov
mov
aam
cli
loopne
sub
push
push
in
scas
xchg
shrb
fidivl
pop
adc
jno
jns
sbb
add
insb
xchg
sub
jnp
sub
imul
or
outsb
cwtl
dec
xchg
push
ret
cmpsb
idivb
cli
fbstp
sub
ret
adc
sti
addl
lock
mov
imulb
in
dec
lret
imul
aaa
sbbb
dec
decl
mov
xor
pop
jbe
cmpb
hlt
clc
nop
sub
mov
lcall
shlb
fiadds
movsb
call
icebp
or
iret
sbb
mulb
inc
or
stc
dec
add
xchg
add
jbe
sbb
push
cwtl
jge
sbb
movaps
mov
pushf
sbb
subl
imulb
nop
cmp
and
pop
vpsubusb
jns
sbb
rorl
test
cmp
mov
sub
xor
aam
adc
pop
add
and
enter
pop
insl
mov
icebp
je
adc
sub
add
popl
inc
rcll
lahf
repnz
mov
cmpsl
cmp
or
sub
jbe
sbb
stc
cmp
popf
shrb
jp
addb
sbb
sub
das
dec
cmp
jg
adc
enter
popa
nop
mov
lods
mov
fldt
or
jbe
pop
test
jns
mov
sub
repz
in
das
add
mov
mov
movsl
and
subl
iret
sahf
jl
inc
xlat
jmp
cmpsb
lea
shld
leave
dec
xchg
adc
pop
or
mov
daa
mov
pop
pushf
dec
dec
or
ja
sbb
push
fdivs
addb
loopne
add
or
and
and
cs
sub
or
sbb
and
and
mov
jae
mov
xor
aad
sbb
jae
add
pop
inc
mov
sub
pop
pusha
mov
mov
sub
mov
adc
adc
or
mov
inc
aaa
mov
lahf
dec
inc
repz
popf
faddp
dec
fisubs
fsubs
loope
scas
push
push
and
ljmp
ljmp
and
test
mov
pop
dec
mov
lods
icebp
dec
jo
fsubs
sbb
mov
movsb
int3
mov
push
push
xchg
and
or
sub
pop
adc
cmp
test
jns
adc
mov
mov
sbb
pop
mov
or
dec
inc
mov
lret
popf
push
dec
cmpsl
cli
scas
xchg
loopne
push
push
fwait
add
or
stc
cmpsl
stos
dec
int
push
outsb
jmp
push
dec
ret
pop
enter
in
or
add
nop
inc
movsb
in
out
loopne
test
imul
jmp
int
add
xchg
icebp
fisubrl
jecxz
pop
cmp
dec
dec
sbb
and
in
inc
or
out
sbb
dec
fcoms
mov
or
dec
sbb
and
cmp
xor
in
xchg
inc
pop
sub
mov
xlat
loopne
jge
adc
jmp
rorb
sbb
add
dec
in
in
jae
adc
and
mov
aam
add
mov
test
push
mov
adc
and
out
loop
cmp
and
repnz
fldenv
lods
jmp
and
or
cmp
cmpb
mov
lods
xor
rclb
pushf
pushf
sbb
xor
mov
in
gs
cmc
je
in
mov
and
or
pop
and
aaa
lahf
sbb
pusha
add
push
mov
sub
loope
lods
cmp
lahf
fists
cmp
cmp
mov
add
in
xchg
dec
and
inc
and
mov
cmp
test
xor
jo
sbb
out
dec
jb
test
cmp
and
aaa
call
xorb
cli
orb
orb
mov
sub
xchg
and
push
inc
jle
and
cmp
cld
fs
mov
loopnew
push
insl
scas
mov
sbb
insb
or
push
mov
xor
loopne
dec
adc
and
fildl
std
loope
add
movsb
mov
lret
pusha
mov
insb
and
jnp
or
sti
pop
add
imul
xor
cmp
pop
fcomp
les
pop
iret
pusha
aam
ja
adc
dec
les
pop
pop
cmp
dec
mov
xchg
ja
or
es
test
xor
mov
cwtl
sub
pop
push
inc
call
or
fstl
movsl
pop
in
mov
push
jg,pn
xor
aam
sub
sbb
stos
sub
dec
or
pop
pop
and
lea
pop
data16
xor
pop
dec
inc
hlt
sub
push
jp
mov
sub
push
sub
icebp
sbb
jmp
add
jl
pop
cmp
int
and
mov
pop
ja
mov
mov
mov
lods
jo
scas
add
fbstp
xchg
or
cmpsl
mov
mov
fidivrs
out
mov
xchg
inc
movsb
std
shl
jno
addb
add
test
mov
mov
mov
add
inc
cmpsb
nop
add
xor
push
jle
and
and
jne
adc
test
dec
mov
dec
loope
and
cs
fwait
rolb
add
pop
xlat
ret
or
mov
jne
popa
dec
fsubrs
cmp
xchg
ds
and
push
data16
mov
push
mov
sub
and
inc
inc
inc
je
push
sbb
jbe
mov
outsl
cmpsl
loop
call
mov
mov
sub
cmp
mov
cltd
xorl
add
push
std
adc
repnz
sub
pop
pop
adc
adcl
pushf
add
sbb
xor
mov
xchg
mov
es
aam
sbb
loopne
mov
mov
inc
jnp
in
cmpsl
inc
lret
and
sbb
or
ss
dec
mov
add
adc
nop
cmp
mov
xchg
adc
xchg
mov
aas
pop
outsb
in
add
enter
cmove
es
dec
int
mov
xor
cld
repz
das
rcrb
sbb
scas
fdiv
cwtl
inc
sarl
jo
lods
inc
or
jecxz
fimull
push
movsb
adc
add
mov
pop
cmpl
cmpsb
sbb
ret
outsl
mov
ret
lea
and
mov
xorl
push
xchg
dec
or
cld
loopne
or
pop
lock
cmp
loopne
ss
lock
push
and
test
pusha
jo
jae
xchg
sbb
jle
testb
dec
sbb
sarb
nop
adcl
inc
lods
mov
and
shr
repnz
mov
push
pop
loopne
mov
loop
xor
dec
je
push
pop
dec
sar
lcall
jns
push
push
xor
sahf
sub
or
subl
popf
data16
push
mov
roll
cwtl
push
or
mov
and
and
jo
and
push
mov
shll
lahf
sub
sbb
or
mov
jl
adc
adc
mov
je
aaa
xor
pop
je
dec
test
call
js
outsb
out
loopne
mov
xlat
rcrb
roll
leave
sub
sub
xchg
imul
nop
lret
jp,pt
mov
inc
mov
adc
jg
dec
and
jl
cmp
mov
loopne
lfs
das
push
add
jge
inc
les
sub
jb
popl
sub
mov
pop
inc
cmp
in
in
pusha
cmp
outsb
xlat
orl
cld
xor
dec
jns
mov
std
push
mov
cmp
sbb
ja
pop
sub
inc
repnz
push
repz
xchg
inc
scas
mov
add
je
sub
test
mov
in
fistpl
std
pop
sub
push
test
sahf
mov
loope
dec
add
pop
mov
adc
mov
loop
xor
outsl
add
mov
inc
sahf
and
enter
push
adc
jmp
aam
insl
cmp
daa
mov
fwait
lds
and
sub
nop
repnz
or
xor
xor
pushf
fldt
sub
xchg
fs
mov
in
xorl
cmp
loop
loop
xor
add
sbb
and
aam
push
mov
dec
or
adc
out
add
lods
sar
or
xor
xor
sbb
aas
sti
xchg
fs
or
jno
into
and
and
dec
cmpsb
add
lret
add
std
fdiv
aam
sbb
jo
pop
test
add
add
cmpsl
aad
rclb
outsl
add
jnp
and
push
popf
jmp
inc
sub
jae
sub
xor
sbb
jnp
sub
pop
and
add
dec
test
scas
sbb
in
mov
mov
mov
nop
inc
insb
sub
xorb
and
test
sub
pop
out
mov
mov
dec
jg
jno
out
fsubr
dec
jp
roll
xchg
add
jle
jns
xchg
loop
push
orl
daa
cmpsl
push
pusha
mov
jae
test
mov
xor
popf
mov
shl
mov
lahf
add
xlat
test
shl
or
insb
insb
dec
nop
and
mov
xor
loopne
imul
fdiv
xchg
xorb
cmp
ds
jl
cli
lods
cltd
lds
pusha
daa
dec
andl
jb
mov
stc
xorb
mov
or
inc
adc
sub
cmp
loopne
pusha
adc
adc
scas
add
stc
fwait
mov
pop
dec
pop
test
sub
inc
jbe
adc
test
and
rorl
cmp
and
fidivl
mov
jne
js
cmp
add
push
rclb
out
rorl
imul
filds
adc
mov
adc
and
add
sub
fmull
xor
and
jno
sti
scas
mov
into
addb
jg
in
js
aam
sbb
int3
mov
hlt
hlt
adc
sbbl
stc
subl
mov
inc
mov
ljmp
mov
sub
jg
or
add
mov
insl
cs
inc
add
hlt
sub
cli
cld
or
int
push
in
ret
or
jp
add
ss
stos
cmp
int3
add
frstor
les
je
xor
or
mov
ret
into
movsl
cmp
mov
inc
in
and
add
movsb
jae
ds
int3
add
icebp
scas
mov
mov
arpl
or
and
insb
pop
jns
pop
cmpsb
call
jecxz
mov
xor
add
rclb
daa
sahf
fiaddl
lock
dec
xchg
and
aaa
add
sub
das
in
or
bound
out
sbb
add
and
lods
clc
xlat
dec
jbe
nop
mov
cwtl
and
xchg
xor
lahf
or
sbb
ljmp
hlt
pop
shlb
out
nop
mov
add
pusha
adc
xchg
jecxz
pop
es
pop
fwait
sbb
les
xchg
pop
sarl
add
cmc
ja
lods
and
insb
in
or
add
push
dec
push
dec
push
xchg
adc
add
lahf
aas
sub
shll
orl
sbbb
loop
push
cmp
push
inc
xchg
mov
or
jno
push
sbb
cmp
rclb
push
shll
jg
lret
loopne
xchg
add
cwtl
test
inc
arpl
sbbl
jg
push
jge
inc
testb
inc
jnp
mov
lcall
clc
es
cmp
in
add
mov
pop
jne
jecxz
cmp
xchg
xor
jecxz
je
vdivpd
cmpsl
add
mov
orb
mov
aam
inc
or
and
pop
call
push
inc
lret
mov
inc
outsb
inc
add
aas
test
mov
outsl
loope
call
mov
or
andb
adcl
xchg
push
cmp
pop
insl
jno
pop
iret
nop
mov
cld
test
push
mov
adc
test
xchg
sbb
nop
and
sahf
stos
mov
inc
sbb
pushf
add
sub
scas
aad
adc
or
cmp
cmpsb
popf
mov
imul
nop
push
shll
in
xor
iret
push
push
scas
inc
rol
mov
int3
pushf
inc
sub
in
pusha
ljmp
mov
mov
pop
js
lea
sahf
nop
pop
jnp
mov
test
je
jl
call
lahf
xchg
rorb
test
sub
pop
xchg
add
dec
lcall
aam
lods
lahf
xchg
shrb
mov
sbb
or
daa
add
les
movsb
fdivr
dec
xchg
xchg
sbb
adc
and
scas
dec
push
sbb
fucom
imul
sbb
cmpsb
mov
sub
repnz
into
sub
inc
cmc
push
subl
and
cmpsl
xor
pushf
in
jo
sub
test
fidivrs
movsl
and
adc
mov
mov
lods
push
ja
lahf
scas
mov
mov
push
add
inc
adc
jae
jno
ret
and
daa
inc
pushf
fidivs
cmpsl
sub
xchg
inc
xchg
xchg
enter
mov
or
xchg
and
scas
fsubp
xchg
sahf
dec
loope
pop
test
xchg
mov
xchg
and
push
pop
pop
enter
nop
clc
cwtl
and
loope
cmp
push
lods
jo
movsb
xor
cmp
psubusw
fcoms
adc
lods
mov
enter
movsl
adc
cmpsb
mov
out
bnd
sub
mov
pop
xchg
mov
insl
roll
sub
int3
bound
mov
rcrb
or
test
jb
or
scas
or
test
xor
and
add
call
sub
sbb
add
loop
push
bound
jp
xchg
loope
nop
std
sahf
lock
rcr
fcoml
mov
lods
fdivrs
add
sbb
loopne
sub
push
shlb
cmp
adc
pusha
mov
jg
inc
loopne
test
jae
cmp
pusha
cs
iret
cld
mov
push
adc
mov
mov
ds
xor
cmpl
dec
adc
or
xor
jnp
dec
push
enter
cmp
loopne
dec
lods
jl
faddl
mov
test
mov
mov
dec
sub
je
cmpsb
les
fsubrs
orb
xchg
mov
js
and
rcrb
daa
pop
nop
xchg
cmp
leave
scas
or
cmpl
scas
call
jle
cmp
and
jns
sbb
jl
mov
addb
adc
jp
cmp
adcl
out
mov
das
movsl
jmp
movsb
je
pop
inc
cmp
std
inc
jo
adc
ret
add
mov
scas
sub
lods
push
jl,pt
aaa
xor
test
sub
pushf
xlat
dec
pop
cmpb
fisubrs
push
push
cld
dec
adcb
in
dec
push
jp
xor
call
repz
outsb
cld
dec
fidivs
add
xchg
fiaddl
or
cmp
or
scas
shlb
cltd
mov
add
fdivrs
inc
add
std
dec
shlb
movsb
add
fxam
and
fwait
push
xor
lds
sbbb
loop
sarb
or
lea
mov
push
sbb
fwait
ljmp
push
pusha
sub
shlb
ja
fists
sbb
js
add
aad
jp
loopne
rcl
adc
clc
sub
or
cwtl
nop
xchg
mov
fmuls
sub
mov
adc
sbb
xor
mov
xor
ret
add
das
pushf
mov
dec
add
lock
daa
add
push
int
jmp
and
mov
pop
mov
xor
pusha
testb
subb
push
aam
imul
add
sbb
rolb
adc
decl
adc
jle
movsb
and
add
or
mov
imul
adc
inc
jecxz
sub
pop
rolb
push
sub
inc
andl
int3
es
mov
mov
add
lcall
ficompl
inc
aas
jae
shrb
pop
add
fwait
repnz
mov
cltd
mov
loope
mov
adc
sbb
in
enter
cmp
lahf
test
lock
cwtl
mov
ja
mov
pop
sbb
pop
pusha
sahf
fucom
push
xor
adc
or
add
push
int
dec
mov
imul
and
jl
push
mov
add
sub
pop
or
lods
movsl
add
cli
sbb
adc
dec
pop
imul
xlat
cmp
adc
dec
iret
sahf
dec
push
pop
or
call
sub
cli
xor
cmp
add
in
inc
push
mov
lods
sahf
sbb
adc
cmp
xlat
filds
sbb
push
int
loopne
pop
cwtl
adc
mov
iret
mov
add
aam
lcall
daa
xchg
aad
dec
jbe
add
shll
xor
add
push
fcmovnbe
xchg
popa
adc
and
sti
mov
push
mov
inc
mov
jp
jle
push
cld
sbbl
cmc
cmp
je
scas
dec
add
cld
dec
loopne
icebp
add
xchg
fldcw
inc
lahf
lds
iret
test
push
mov
add
movsl
push
xor
xor
dec
or
loopne
dec
jno
movl
shll
popf
and
sbb
cs
repnz
mov
inc
in
pushf
or
jno
pusha
mov
stc
mov
scas
sbb
add
lret
adc
cmp
adc
shll
sbb
mov
pop
mov
adc
mov
test
call
dec
loope
test
xor
mov
scas
popf
inc
mov
pop
or
lahf
popa
out
je
mov
xchg
mov
add
cmpsb
ror
subb
dec
out
and
xchg
jbe
inc
xlat
xchg
popf
add
imulb
fidivs
xchg
pop
cmp
loope
adcb
out
sti
jl
push
jo
sub
mov
mov
lods
pusha
adc
dec
mov
mov
cmp
or
sbb
adc
xchg
aad
and
shlb
add
inc
push
jmp
dec
xor
push
mov
rolb
mov
xor
sub
adc
fimull
push
repz
ss
add
nop
lds
int3
inc
pop
add
mov
inc
cltd
mov
and
cld
add
and
dec
sub
dec
pop
lock
shlb
add
pusha
into
pop
adc
cs
rclb
push
shlb
pusha
push
popa
pop
jno
lahf
jp
or
out
push
ret
cmp
push
mov
addr16
or
cwtl
or
inc
lods
dec
xor
lea
hlt
dec
test
and
push
xor
mov
push
or
out
cmp
subb
sets
rorb
outsl
call
mov
xor
mov
mov
lods
movl
push
push
xor
inc
and
out
jg
shll
and
test
dec
inc
sbb
cmpb
out
xchg
rcr
aad
inc
inc
cmp
xor
add
xchg
jge
les
xorb
cmpb
or
cmc
add
pop
jo
add
xor
xchg
cmp
mov
add
lock
repnz
mov
leave
bound
pop
filds
bound
add
dec
mov
add
dec
jecxz
dec
aas
add
mov
inc
xchg
sub
std
cmp
clc
add
jo
dec
outsl
loopne
lea
add
mov
out
je
xchg
mov
enter
dec
jge
and
add
in
or
insb
aaa
add
adc
and
or
loope
push
xchg
clc
das
sub
aaa
sti
adc
mov
in
jno
cmc
or
sub
out
and
inc
xchg
scas
cmp
sbb
push
mov
cmpsl
mov
add
out
decb
call
xchg
cmp
mov
or
orl
cmp
lret
stos
add
push
loopne
add
xor
bound
pop
fcmove
fs
pusha
pop
adc
sub
ljmp
cwtl
outsl
pop
dec
jae
mov
loop
xlat
push
push
xor
pop
push
jecxz
pusha
test
dec
test
push
hlt
into
mov
jge
cli
subb
int3
add
movsl
mov
jns
mov
bound
in
pop
jae
cmp
scas
and
out
movsl
lock
flds
sbb
in
shlb
and
xchg
inc
mov
cmp
in
fmull
pop
inc
add
aas
mov
add
cmpl
stos
jns
add
repnz
ljmp
add
ret
inc
cmp
and
daa
je
adc
popf
fwait
sub
test
xchg
iret
xchg
movsb
push
add
adc
pusha
push
or
pop
jne
inc
xchg
add
nop
sbb
rol
add
push
aaa
ja
push
pop
cmp
bnd
aad
xorb
jnp
jmp
sbb
or
inc
rcll
cld
rorb
jae
inc
mov
push
add
leave
in
xchg
in
add
call
mov
inc
xchg
add
cmpsl
cmp
repnz
out
mov
hlt
or
add
add
in
jmp
xchg
pop
xchg
lret
ljmp
jmp
cmp
mov
xor
and
xor
mov
jno
mov
xchg
adc
cli
ret
clc
dec
inc
add
les
fs
jle
je
inc
js
hlt
cmp
scas
jb
daa
lods
popf
nop
pop
lgs
lds
add
test
dec
pop
mov
cmp
mov
cltd
cmp
mov
gs
mov
dec
inc
orb
jne
dec
lock
mov
leave
mov
cmp
repz
add
pop
sti
push
or
add
lock
inc
add
mov
into
fldl
mov
add
cmp
scas
ss
ljmp
add
movsl
sbb
mov
mov
adc
fstps
fstl
pop
mov
outsb
push
sbb
push
dec
lods
cmpsl
xchg
out
inc
mov
and
jno
mov
pop
orps
fyl2x
add
push
ljmp
inc
das
daa
adc
adc
sub
mov
push
fiadds
dec
addr16
mov
dec
dec
lahf
sub
mov
mov
add
add
cli
sub
in
push
roll
mov
dec
mov
or
dec
mov
loopne
mov
add
fs
fsubrl
in
lret
in
stc
cld
sbb
pop
popf
sub
and
xor
ret
sub
fldlg2
jb
and
push
and
cmp
cmp
leave
sbb
fwait
inc
mull
orb
adc
ror
dec
ss
movsl
cld
out
add
xchg
mov
lret
outsb
jbe
push
ja
add
daa
fbld
pop
data16
movsb
repnz
js
adc
es
lret
pop
add
mov
mov
call
inc
les
inc
pop
pop
cmc
arpl
scas
in
lods
pushf
add
fstp
daa
add
lock
pop
gs
or
add
mov
scas
push
add
negb
in
sub
mov
push
or
push
mov
mov
add
sbb
push
sti
shrb
xor
sbbb
jne
dec
les
jge
xor
push
dec
ds
add
shlb
push
cmp
hlt
repnz
jae
pop
adc
cmp
int3
dec
repnz
add
test
push
adcl
ret
and
aad
or
andl
sbbb
adc
pusha
add
add
lds
adc
imul
jae
inc
mov
mov
sbb
mov
insb
les
mov
add
stos
popf
and
inc
sbb
movsl
inc
fistps
loopne
dec
dec
sbb
outsb
push
pop
aam
ja
loop
lods
out
dec
enter
add
push
xor
xchg
sub
jnp
idiv
adc
into
add
es
loopne
gs
mov
dec
sub
xchg
inc
fadds
sbbb
test
lods
mov
pop
dec
mov
mov
pop
or
dec
and
jnp
outsl
add
add
jno
cli
out
pop
add
or
xchg
dec
in
fcomps
addr16
ja
add
stc
mov
push
add
jae
cs
ds
add
jp
adc
or
xchg
and
jne
sub
negl
sbb
mov
aam
and
fcoms
aaa
mov
jo
sbb
add
sub
or
inc
and
mov
mov
loop
pop
roll
test
sbb
sub
jl
mov
cmp
add
dec
sbb
xor
xor
mov
int3
push
sbb
add
call
orb
pop
popa
push
jbe
int3
jg
cmp
jo
ds
mov
sub
rcl
andl
ds
add
push
pop
je
and
add
inc
pop
lret
and
jl
jo
rcrl
xorb
mov
add
mov
push
les
cli
push
add
push
mov
add
pop
xor
sbb
add
add
addr16
adc
pop
inc
add
jae
popf
mov
cmp
lock
loopne
adc
push
std
sub
andb
adc
bound
push
or
or
lods
stos
xor
jne
sbb
push
add
jno
xor
dec
xchg
add
aaa
addr16
sbb
cmovg
lods
jp
mov
jne,pt
and
xchg
xor
arpl
and
lret
pop
cs
scas
mov
mov
mov
inc
adc
sbb
sbb
cmpsl
mov
mov
bound
xor
ljmp
push
adc
mov
fsubrl
add
add
pop
or
mov
roll
loopne
lods
mov
or
aam
mov
mov
faddp
sub
fisttpl
insb
cmpb
mov
scas
jns
mov
ret
imul
das
in
mov
lret
or
rcrb
rolb
sbbb
mov
out
pop
add
sbb
mov
add
je
xor
jb
push
dec
add
xchg
mulps
lods
add
xor
mov
mov
aaa
pop
dec
pop
das
jp
xchg
add
push
dec
xchg
and
add
add
dec
insb
sarl
xchg
arpl
into
sbb
sub
cmpsb
cld
xor
push
jae
aad
pop
sbb
add
push
and
and
pop
les
cmp
ds
add
adc
push
sbb
in
sti
imul
into
ret
add
pop
ret
jmp
pop
pop
repz
and
sahf
add
xor
cs
and
adcb
shll
repz
nop
inc
enter
or
adc
ltr
jmp
bound
sbb
mov
imul
push
mov
inc
dec
cmc
icebp
lock
and
js
repnz
mov
push
bound
or
inc
icebp
fadd
sub
adc
pop
and
or
lret
xchg
push
add
jp
sub
or
dec
pop
pop
shrb
xor
fdivrs
xchg
pop
add
jbe
call
xchg
out
nop
push
add
mov
push
les
and
mov
mov
shrb
dec
outsl
mov
andb
cmp
or
mov
loope
cmc
call
adc
add
or
fnstcw
sbb
lock
loopne
stos
mov
and
mov
jle
and
clc
push
std
out
dec
add
imul
add
cmpsb
test
pop
mov
push
loope
mov
and
add
pop
dec
xor
mov
sbb
movl
inc
pop
sub
add
fildll
pop
and
sbb
add
int
push
js
outsb
cmp
dec
ds
ror
push
into
dec
jp
push
addb
frstor
mov
out
dec
lret
push
adc
in
mov
or
flds
mov
out
das
shl
xor
scas
sub
inc
or
movsl
aaa
aad
loopne
daa
in
push
xchg
insl
and
clc
enter
push
add
subb
loopne
lret
cmpsl
mov
cwtl
movsl
shrb
mov
rorb
push
lcall
jmp
inc
pop
xor
repnz
fidivs
pop
add
mov
cli
sahf
popw
jle
out
nop
inc
add
sub
outsb
repnz
fs
sbb
pop
or
push
add
orl
lods
jmp
sbb
clc
mov
in
or
mov
jo
inc
sub
mov
sbb
insb
dec
push
das
inc
shll
jnp
dec
pop
je
mov
aas
out
std
sbb
sub
add
sub
push
add
push
xchg
call
add
adc
push
rol
pusha
dec
jecxz
ja
push
inc
xchg
movsb
add
pop
mov
lret
dec
icebp
iret
sbb
daa
add
fwait
mov
dec
push
data16
popa
sbb
ljmp
adc
dec
lret
lods
das
pop
mov
hlt
push
adc
hlt
push
in
pop
add
xor
xchg
jno
and
and
adc
add
or
jb
mov
xchg
push
pop
xchg
mov
mov
popl
sbb
outsl
mov
out
sti
lahf
cwtl
mov
insb
clc
mov
pop
dec
adc
xrelease
add
push
testl
inc
mov
imul
and
mov
xchg
adc
adc
push
dec
loopne
sub
add
cmp
cwtl
xor
add
aam
or
repnz
stc
add
inc
or
cmpsl
cli
mov
jmp
cwtl
lods
pushf
and
clc
icebp
mov
insl
int
add
addb
inc
daa
out
and
ret
adc
xchg
cld
mov
pop
mov
and
cwtl
outsl
ljmp
into
dec
sbb
jne
dec
push
mov
add
iret
cmp
test
xchg
out
add
jne
cmp
add
cld
sti
jl
repnz
xchg
jg
fcomi
cs
add
xlat
pushf
push
mov
sbb
cwtl
pop
sub
adc
add
clc
sar
mov
stos
dec
sub
movsl
shll
add
imul
jbe
sub
inc
adc
add
and
inc
pop
fcmovb
cld
pop
jp
sbb
outsl
push
jl
lods
pop
add
jge
xor
dec
jle
ud2
lret
mov
and
outsl
add
mov
aas
add
mov
cmp
mov
add
xor
pop
test
push
cmp
sbbb
cs
pusha
es
pop
mov
mov
or
mov
pop
cmp
aad
xor
add
sbb
loope
mov
mov
mov
ss
iret
push
bound
mov
popl
lds
cld
sbb
sbb
add
pop
sub
jnp
xor
xor
lods
and
rcll
mov
pop
data16
lock
mov
sbb
cmpsb
sub
push
add
cld
out
test
dec
in
loopne
fdivrs
imul
add
pop
push
mov
in
sub
jl
dec
ret
icebp
fwait
cmc
movlps
adc
cld
pop
adc
cmc
xor
movsb
pop
mov
je
mov
stos
lret
fs
lods
addr16
sub
inc
mov
enter
sbb
lock
jb
add
xchg
movsl
call
xor
dec
aas
cmp
xor
or
loopne
dec
pop
mov
shrl
add
ret
in
and
sbb
lcall
loop
fimull
sbb
mov
sub
cli
add
xlat
mov
inc
cmpsl
insl
sbb
xchg
cmp
or
fsubl
mov
shl
xchg
xchg
or
jmp
lods
shlb
xor
mov
sub
push
pushf
adc
pop
dec
xor
xchg
add
stc
xor
cmpsb
add
mov
out
sub
fiadds
jns
fs
add
sbb
or
and
mov
addb
add
push
in
jae
adc
daa
lret
cmp
mov
or
xlat
and
pop
push
filds
pop
aam
add
std
pop
jle
lret
daa
xor
dec
sub
jb
cmpsl
sub
mov
add
inc
add
daa
ljmp
insb
dec
or
pop
mov
push
dec
push
jg
and
adc
add
das
lret
lods
sub
xorl
jne
jns
call
testb
xor
iret
in
adc
test
and
test
leave
dec
adcb
mov
sbb
sahf
pop
and
movsb
jns
pop
jg
push
jmp
cmpsl
add
fstps
add
js
sub
mov
add
in
iret
out
inc
movsl
sbb
shl
push
ret
or
mov
xor
sbbb
adc
lock
pusha
call
sub
jno
ficompl
shll
lods
adc
or
cli
push
pop
push
jmp
movsl
jmp
sub
push
cmp
es
push
sub
add
dec
repnz
loopne
lahf
jae
js
and
mov
scas
int3
icebp
jno
cltd
sub
add
xchg
subb
mov
popf
dec
movsb
xchg
sub
loopne
nop
lret
xchg
add
jne
scas
ret
add
jnp
mov
add
out
cltd
sub
xor
push
in
mov
jno
aad
dec
pop
fs
cmp
nop
icebp
movsl
push
hlt
mulb
aam
push
mov
cmp
rolb
dec
fsubs
popa
jge
mov
inc
neg
sti
push
pushf
mov
jb
add
push
stos
mov
sbb
sbb
dec
push
add
rorl
adc
arpl
nop
sti
dec
out
and
enter
push
mov
xor
notb
mov
test
add
xchg
decb
stos
std
sbbl
addb
push
mov
add
pop
leave
rorl
adcl
pusha
outsl
mov
push
rcrb
jae
lds
ficomps
pop
add
repz
cmp
or
sub
add
pop
cld
aad
adc
pop
cmpsb
pop
pop
add
cli
add
leave
add
pop
lret
push
mov
add
and
add
pop
mov
xchg
lea
inc
sbb
jle
lret
stos
jno
xchg
movsl
ret
or
xchg
add
bound
push
add
movsb
sbb
popf
sbb
mov
jmp
add
out
cmc
sbb
lret
dec
test
mov
pop
pop
add
add
lock
sbb
or
cmp
jg
adc
out
pop
pop
mov
xlat
lods
pop
loope
pop
sub
and
test
dec
cmp
notb
xor
xchg
pop
popl
push
mov
imul
mov
lock
pop
push
pop
bound
sahf
xlat
mov
lcall
mov
jge
pop
stc
icebp
add
sub
fwait
jmp
rorb
pop
mov
fs
pop
jb
push
push
add
repz
add
cmp
cwtl
int
cmp
insl
clc
aad
add
and
popa
mov
or
and
sbb
pusha
mov
pop
adc
add
cld
ret
and
pusha
mov
mov
add
test
cmpsb
loope
push
enter
add
mov
push
pop
adc
inc
aad
ffree
xchg
push
mov
push
add
leave
lock
scas
add
pop
push
outsl
and
push
xchg
enter
cmpsl
fimull
mov
into
mov
mov
sub
and
push
add
lds
pop
sti
mov
mov
mov
jb
add
fcmovnu
inc
sar
repnz
daa
shlb
pop
xchg
dec
fs
and
xor
mov
inc
dec
sbb
add
push
sti
add
std
and
adc
outsl
cmp
add
stc
mov
jg
or
fstps
dec
shll
mov
sub
and
push
push
outsl
push
mov
stos
mov
lock
add
pop
shrl
push
in
mov
xor
xchg
rorb
push
mov
std
popf
xchg
jnp
nop
arpl
lock
cmp
lahf
jns
mov
xchg
sbb
ret
sub
add
pop
mov
sub
cmc
jne
rclb
inc
bound
sbb
sub
mov
add
test
push
mov
push
les
das
or
jo
sbb
fcomps
popa
subb
lret
jp
cs
mov
push
or
out
adc
and
sar
fmull
mov
add
lcall
add
jg
and
data16
enter
add
add
fnsetpm(287
stos
push
push
push
pop
inc
pop
lods
lock
imul
cli
lods
pop
pop
cmp
mov
push
arpl
lret
rcrb
decb
dec
inc
enter
jl
pop
jge
add
xor
jmp
push
stos
add
mov
jo
pop
xlat
jb
sbb
popf
sbb
sbb
rcl
mov
clc
cmp
dec
push
adc
xchg
stos
add
lahf
or
rcl
shlb
pop
sub
cmp
fldt
jo
ss
bnd
sarb
lcall
mov
xor
lret
push
popf
lcall
add
mov
mov
sarl
xor
fwait
cmp
xchg
add
push
jb
add
cwtl
cmpsl
add
movsb
pop
inc
vpsrld
mov
and
inc
fcoml
sub
cmp
test
fdivr
mov
enter
mov
xlat
mov
sbb
dec
dec
arpl
push
and
and
lea
mov
dec
sbb
pop
mov
movl
test
out
add
adc
push
and
or
inc
fdivr
mov
dec
mov
fiaddl
inc
inc
and
out
test
push
out
rorl
pushf
enter
inc
push
add
std
or
rclb
dec
adc
xlat
and
and
and
and
sub
push
xchg
xor
sarb
cli
push
addl
outsl
insl
mov
mov
sbb
jmp
add
hlt
add
stos
inc
loop
cmp
push
xchg
jecxz
or
pop
int
aaa
in
push
les
cmp
push
xchg
dec
pop
sub
mov
jo
add
add
aas
xor
add
xchg
xor
pop
movsb
das
outsl
sbb
and
jo
push
std
test
and
stos
jno
or
bound
add
aam
jnp
add
add
mov
jp
push
ja
push
roll
pop
sahf
add
mov
mov
mov
adc
inc
dec
pushf
outsl
xchg
cmp
bndstx
push
popf
ret
iret
and
sub
lahf
mul
sbb
inc
jb
cmp
out
aam
inc
pop
xor
or
arpl
rcrb
add
aad
add
sbb
add
add
jg
and
ds
add
cmc
daa
in
sbb
and
loopne
insl
inc
mov
add
mov
push
fcompl
push
push
insb
and
aam
ja
lret
int3
push
inc
pop
xchg
inc
and
ret
dec
pop
add
test
sub
add
and
add
sbb
sub
pop
fidivl
and
sbb
dec
jmp
rclb
rolb
into
pusha
arpl
jl
cwtl
clc
fucom
js
add
lock
out
loop
push
cmpsb
or
cmp
cli
movsl
mov
add
xchg
daa
mov
xchg
inc
into
loopne
xor
out
fcompl
loope
fnstsw
push
add
jo
lret
add
popa
mov
add
sub
and
addb
dec
pop
and
stos
out
repz
je
xchg
mov
jle
or
add
sbb
mov
testb
jg
add
pop
and
sbb
push
jo
add
cwtl
xor
jmp
adc
or
outsb
add
push
test
or
out
push
cmp
fstpt
jne
out
addl
adc
scas
fbstp
push
add
sarb
sub
jge
cwtl
add
mov
jo
add
fucomip
cltd
ffree
jge
cli
pop
add
mov
push
adc
xchg
or
xchg
sbb
lods
xchg
repnz
push
test
ja
jo
mov
jecxz
aas
in
jnp,pn
dec
add
pop
inc
add
and
je
add
std
sahf
imull
js
es
in
and
dec
lods
in
mov
movsl
ja
inc
mov
add
cmp
xchg
mov
popa
mov
mov
mov
inc
mov
xchg
add
sub
or
cmp
push
adc
jbe
dec
inc
out
lds
jle
dec
push
imull
pop
mov
aas
jb
adc
shr
add
in
add
or
add
ret
pusha
add
outsl
hlt
daa
and
adc
movsb
fcoml
adc
pop
pushf
sub
inc
insl
jno
dec
jg
and
je
popa
xchg
adc
add
add
xor
xor
add
popa
es
dec
les
es
les
xor
xchg
lret
addb
pop
mov
cmp
mov
subl
insl
add
or
insb
fwait
add
adc
pop
adc
cmp
cmpl
jecxz
mov
sub
lret
or
xlat
cwtl
jl
inc
jmp
inc
fdivrl
mov
mov
in
arpl
add
xchg
cs
lods
jmp
fwait
mov
sub
sbb
jno
jge
xor
aas
roll
adc
fimull
jb
je
out
add
jo,pt
add
inc
mov
int
leave
jb
adc
cmp
pop
pushf
xchg
jmp
in
sahf
jbe
inc
mov
add
xor
mov
inc
or
jae
add
pop
mov
or
enter
pop
sbb
xor
add
mov
mov
fisubrs
xlat
push
jne
mov
clc
mov
fwait
or
push
inc
or
popf
lods
out
add
fstl
stc
and
pop
sahf
fildll
xchg
pop
pop
cmp
dec
loop
std
sti
or
push
dec
int3
add
push
in
out
test
push
in
lahf
aaa
addb
sbb
sbb
pop
pop
cmpb
pusha
jo
lret
add
ljmp
dec
sbb
gs
dec
sbb
add
jle
repz
enter
add
dec
adc
dec
imul
sub
add
mulb
mov
enter
push
and
xlat
sbb
adc
xor
nop
inc
lock
xchg
sahf
add
enter
loopne
dec
dec
add
mov
testl
into
sub
push
fildl
fnstenv
xchg
add
ficoms
daa
cmpsb
es
in
and
jecxz
or
pop
cmp
adc
das
es
bswap
cvttps2pi
pusha
push
ljmp
in
inc
cwtl
iret
rcrb
dec
push
outsl
sub
and
call
leave
roll
push
jg
cmp
mov
pop
pop
mov
dec
add
stc
push
inc
icebp
pop
sub
and
pop
popl
adc
loope
add
sbb
push
loopne
movsl
sbb
dec
inc
pop
add
jne
push
in
or
mov
out
add
cmp
or
and
orb
aam
mov
add
mov
or
fbld
inc
idivl
xchg
pop
add
sbb
ljmp
cltd
pop
pop
shll
xchg
xor
dec
fdivrs
repnz
add
loopne
lock
add
daa
sbb
call
pop
mov
xor
lahf
mov
add
inc
ret
scas
lret
cmp
enter
lea
jne
mov
jb
inc
jge
cwtl
add
nop
sub
addb
cli
fstl
scas
jl
inc
mov
or
add
out
mov
fs
mov
jl
add
mov
cli
rorl
mov
jne
xchg
iret
shlb
cwtl
or
cwtl
pcmpgtd
sbb
rcll
cli
jle
jge
add
test
ds
or
mov
sahf
add
add
hlt
out
add
mov
adc
sbb
jo
cmp
iret
subb
jp
in
cmp
push
push
lcall
dec
or
xor
fildl
xor
add
fidivl
sbb
sub
xorl
sub
lods
arpl
push
enter
xchg
dec
pop
mov
mov
jmp
add
adc
inc
xor
cwtl
adc
sbb
add
push
out
hlt
lods
add
xchg
lods
sub
jnp
add
aam
fcmove
cmovs
js
inc
cltd
leave
jnp
jne
nop
movsb
repnz
popf
dec
xor
adc
pop
xchg
insb
cmp
or
enter
adc
in
sub
push
addl
push
sub
and
mov
pop
lds
stc
or
mov
mov
mov
and
out
and
adc
xor
rolb
popf
jns
cmpb
cltd
shrb
mov
cld
sbb
cmp
std
xor
jno
push
or
jae
in
addb
dec
incl
add
add
popa
js
xor
push
clc
faddl
imul
shr
xchg
mov
sbb
adc
dec
imul
cmpb
add
adc
stc
cmp
inc
add
push
mov
outsl
leave
push
xchg
xor
out
add
mov
in
add
cmp
cmp
sub
cli
and
or
push
pop
aad
jne
repnz
call
test
mov
js
jge
push
add
push
add
mov
inc
sti
jmp
and
leave
loope
fdiv
mov
out
cltd
in
dec
and
sahf
shrb
aad
mov
xchg
pusha
inc
push
add
add
jle
adcl
mov
and
xchg
mov
fisubs
adc
push
pop
lcall
pop
add
sbb
mov
fistpll
std
jecxz
cmp
jp
jge
negb
dec
pop
xor
insb
pop
pop
cmpb
push
inc
lret
arpl
lock
lods
mov
cltd
inc
enter
movq
arpl
cld
sub
out
xor
inc
call
xor
testb
filds
add
or
jmp
inc
dec
sbb
lock
cmp
dec
test
add
sub
call
sub
pop
ret
or
sub
push
addb
mov
add
xor
jo
mov
cmp
jb
mov
cmc
add
add
add
sub
adcb
cmp
in
add
mov
cmp
cwtl
insl
add
pop
or
adc
add
adc
jne
add
pop
pop
aaa
outsb
dec
jno
idivb
dec
mov
fistps
mov
mov
repz
add
cmpsl
fistpl
mov
add
fildll
subb
add
rcrl
test
sub
popf
mov
xchg
test
imul
stos
add
add
nop
push
es
mov
push
inc
mov
filds
dec
in
pop
xchg
das
pop
scas
bound
rolb
adc
adc
mov
add
js
repnz
addb
xchg
xor
pushf
xchg
add
and
jne
dec
add
push
insb
loop
or
push
xorb
sub
lret
lahf
test
cmpsl
ds
mov
push
call
adcb
mov
add
lret
out
and
or
pop
add
and
mov
sub
cld
sub
and
cwtl
test
mov
out
je
fnsave
adc
and
ret
xor
jp
int3
mov
inc
ljmp
or
int3
loope
in
popa
in
pop
js
repnz
sbb
and
jne
lret
rolb
sbb
sahf
sbb
andb
test
add
out
lods
cmp
push
or
add
jmp
push
sbb
add
imul
xlat
and
out
xchg
sub
loop
add
xchg
or
pop
push
sbb
in
cmovg
and
clc
xchg
rcr
repnz
adc
add
xchg
adc
mov
add
and
gs
cmp
push
add
mov
pushf
jbe
jo
add
cmp
test
sub
fldl
lahf
mov
push
ror
out
add
sbb
imul
mov
sbb
movd
inc
adc
jp
push
lahf
fildll
cmp
inc
push
add
iret
pop
pop
sbb
push
pop
aas
hlt
sub
ret
adc
scas
pusha
add
add
into
mov
stc
test
in
dec
hlt
inc
add
std
push
cmp
mov
dec
pop
xchg
add
add
cwtl
or
call
jmp
push
les
ret
sahf
jp
or
pop
and
dec
cltd
imul
sbb
add
pop
es
outsl
jecxz
add
adc
cmpsl
xor
mov
jl
add
push
aad
push
rcr
mov
in
add
test
xchg
ja
lods
orb
outsl
adc
cli
add
mov
add
jmp
pusha
aas
nop
mov
aam
cmp
stos
xor
cld
rcrb
jl
or
add
lret
add
stos
xlat
cmpsb
add
adc
xor
mov
push
es
fsubrl
in
popf
push
add
cwtl
imul
lods
xor
jle
and
test
pushf
mov
push
dec
enter
xchg
add
loopne
loopne
fnstcw
lret
cmp
cmp
push
add
mov
rcr
mov
cmp
jbe
scas
inc
incb
sub
gs
add
pop
int
test
jge
pop
inc
xor
loop
mov
jne
test
jmp
add
mov
pop
test
adc
loop,pn
in
push
xchg
inc
sbb
and
roll
fsubr
dec
xchg
add
mov
xor
mov
sub
add
push
push
lahf
xchg
fdivrl
or
push
inc
jae
addl
and
jb
push
push
mov
mov
xchg
xor
fwait
iret
popa
inc
jns
aad
pop
and
mov
push
add
enter
fdivp
mov
cld
in
or
into
cmp
stos
inc
push
adcl
or
sub
jl
mov
add
in
lock
xchg
push
js
lahf
pop
lcall
xor
and
xor
dec
subb
add
sub
cmp
push
sub
push
stos
shrl
repnz
js
pop
xchg
leave
add
mov
incb
mov
jo
mov
enter
add
incb
jle
add
or
add
insb
stc
mull
xchg
push
test
popa
add
cmp
hlt
dec
push
add
pushf
cmp
arpl
sbbl
cmpsl
adc
cmpsb
adc
rcrb
mov
fwait
cmp
lea
pop
gs
sbb
mov
es
mov
scas
cmp
jp
jae
out
cld
in
cmp
or
roll
xor
str
xchg
test
enter
mov
insl
push
mov
dec
push
add
sahf
mov
add
fadds
sbb
pop
xor
adc
dec
mov
sahf
add
cmpsl
and
or
ss
xchg
inc
popl
sub
andb
stos
mov
sbb
adcl
subb
mov
rorb
xchg
jle
add
xchg
out
xlat
sbb
mov
mov
xor
in
sub
add
sub
inc
movsb
mov
add
or
jmp
pop
in
int
and
mov
and
push
jg
orl
inc
adc
and
add
add
jmp
aaa
cmp
add
xchg
movsl
or
test
pop
enter
mov
xchg
sub
mov
test
lahf
test
add
sbb
enter
pop
fiaddl
mov
lock
cmp
and
cmpsb
cmp
add
lahf
jmp
rolb
xchg
shr
push
call
aad
fcoms
sbb
or
or
xor
rcr
sbb
inc
fidivs
and
mov
inc
cmp
add
add
stos
inc
lds
nop
or
and
push
dec
add
cmc
mov
sbb
icebp
sub
pop
cmp
push
or
and
mov
push
stos
mov
jbe
jecxz
and
sub
sbbb
out
int3
inc
mov
int
cmp
cmp
mov
pop
in
insb
loopne
ss
push
add
mull
fldl
pop
add
rcrb
popa
dec
cld
adc
add
xor
frstor
and
mov
inc
es
int3
icebp
in
cmp
sti
or
mov
sbb
sub
cmp
fs
mov
aam
jg
xchg
add
xchg
je
add
mov
jnp
add
negl
aad
add
shrb
jle
fadds
cld
clc
out
or
popa
pop
xor
cmp
std
lahf
push
mov
imul
or
mov
inc
fdivrl
sbb
adc
adc
cmp
xchg
sub
and
adc
add
out
bound
push
dec
sbbl
mov
cmp
int3
adc
lods
pop
mov
sbb
cmp
rol
leave
or
insl
inc
push
cmp
add
movb
lcall
enter
popa
aad
push
push
jo
shl
sub
xchg
test
lcall
jns
inc
jg
test
pop
popf
add
lock
pop
jmp
and
rcrb
scas
jg
movsl
ds
fiaddl
mov
aaa
xor
imul
lods
inc
loopne
pop
mov
jmp
dec
cmp
sbb
outsb
in
idivb
dec
adc
loope
mov
mov
inc
lock
add
arpl
jb
in
inc
sub
xchg
insl
rclb
test
cmp
or
xlat
leave
add
jae
lret
sbb
aad
imul
shlb
add
dec
andb
add
push
mov
lcall
xor
popa
call
pusha
push
add
jl
ss
loopne
adc
inc
sbb
mov
push
inc
ret
mov
mov
es
add
or
push
and
out
add
cld
adc
div
insl
add
mov
jp
mov
pop
push
dec
cmpsb
and
inc
fwait
mov
cltd
and
enter
pop
int3
cwtl
cmpsl
add
mov
pusha
shrl
icebp
in
test
test
das
repz
pop
or
roll
add
pop
and
mov
jae
es
andb
cli
add
pop
mov
mov
jge
mov
data16
repz
add
add
lods
cmp
inc
sub
aaa
stos
mov
or
add
sub
cld
loope
add
ret
mov
roll
dec
mov
mov
add
add
addb
aaa
and
mov
add
pop
hlt
loopne
mov
inc
add
or
fcomip
loop
cltd
in
add
cmpsl
es
iret
or
sbb
aaa
sbb
and
int
shl
lahf
or
fimull
add
out
fnstsw
cmp
and
add
push
jle
mov
xor
add
std
test
fwait
mov
or
pop
sub
inc
jo
fs
sub
mov
sbb
call
out
mov
and
test
in
jae
repz
sbb
scas
mov
xchg
add
xor
mov
pop
xchg
mov
pop
adc
mov
sbb
adc
push
and
dec
nop
add
pop
call
push
into
dec
xor
xor
mov
xor
mov
adc
add
sub
les
add
add
flds
add
adcb
jl
test
jo
and
sub
fld
daa
test
add
inc
mov
mov
pop
sbb
pop
and
xor
cmpsl
cmp
call
xor
in
ja
pop
lcall
xchg
add
int3
call
stc
sbb
in
xchg
cld
jns
mov
push
dec
sbbb
jbe
jg
mov
mov
inc
loopne
js
add
mov
dec
jecxz
cwtl
lahf
lds
push
push
push
add
decl
test
sbb
add
adc
cwtl
jne
jae
iret
es
push
mov
shll
cwtl
adc
adc
rcl
outsl
xor
cmp
lret
jecxz
xchg
xor
leave
stos
icebp
mov
jne
sub
push
testb
mov
or
jle
es
shl
loopne
nop
movsb
pop
cld
dec
data16
jmp
shrl
add
shlb
js,pt
inc
jo
dec
or
popa
pop
ja
add
xchg
add
jae
jg
outsl
fbstp
adc
fiadds
mov
jae
pushf
pop
dec
pop
testb
add
sbb
fimuls
out
dec
imul
mov
xor
icebp
in
nop
sbb
sub
add
test
enter
add
push
popf
inc
push
xchg
push
insl
add
lods
xor
add
xchg
out
out
and
or
jg
xor
add
pop
or
cmpsl
cmp
pop
mov
mov
popf
add
mov
sbb
jne
fldl
mov
das
dec
lock
jmp
push
std
add
iret
and
scas
xchg
clc
pop
out
loop
xor
pushf
xor
xor
add
xor
jo
rolb
adc
add
xchg
mov
call
rcrb
adc
orl
and
fldl
data16
xchg
inc
mov
sub
lret
cmp
add
mov
jge
mov
stc
push
shll
repnz
or
test
cmpb
xor
lock
pop
into
test
imul
lods
lret
testl
add
jmp
xor
add
rsqrtps
sbb
pop
stc
stos
push
add
jbe
adc
cmp
das
sarb
cli
aam
push
insl
fwait
pop
and
lods
cmp
and
leave
dec
add
add
xor
mov
adc
xchg
jne
adc
fildl
dec
xlat
mov
add
rolb
and
mov
imul
aad
ret
pusha
mov
add
pop
lds
movsl
push
stos
add
pop
inc
dec
pushf
call
pop
jg
add
push
or
and
xchg
lods
sub
negb
pop
addl
in
mov
mov
sbb
mov
adc
sarb
mov
test
icebp
push
pushf
sahf
dec
cld
add
pop
mov
mov
add
adc
test
adc
loopne
dec
mov
inc
sbb
popa
scas
dec
ror
add
dec
add
mov
push
pop
lahf
cmp
add
sbb
dec
dec
fcoml
ucomiss
sahf
or
js
pop
daa
inc
xchg
push
and
or
lods
add
and
repnz
dec
js
movsl
add
mov
add
jae
clc
mov
mov
or
mov
mov
clc
js
jne
add
sbb
cmpsb
pop
fwait
sbb
call
int3
hlt
xlat
add
jmp
mov
mov
mov
add
mov
cld
mov
jl
add
ret
stc
fldt
sbb
mov
fmuls
fwait
inc
add
test
mov
clc
pop
cli
data16
and
fwait
add
cmp
enter
stc
mov
sbb
scas
fdivp
mov
cwtl
rcll
mov
jo
incb
dec
pop
jb
mov
lock
out
push
dec
fwait
cld
xor
jno
or
adc
mov
xor
lret
pusha
out
pop
add
fstpl
movb
cmp
and
add
ret
push
hlt
sub
enter
xor
sub
add
aad
hlt
lock
lret
mov
dec
push
idivb
add
popf
enter
pusha
or
leave
in
in
xor
test
add
dec
mov
add
push
inc
pushf
cwtl
movsb
inc
jae
add
test
insl
cli
mov
out
cmpsb
sar
dec
mov
or
pop
shrl
insl
push
mov
ss
fimuls
add
pop
jp
and
fisttpl
rcrl
push
mov
jno
add
cwtl
pop
jg
dec
daa
push
incb
push
into
ds
cmp
adc
ja
xchg
add
jnp
sete
jg
add
loopne
rcrl
add
and
add
and
add
jge
push
xchg
stos
pop
mov
pop
jbe
add
xor
aad
dec
or
jns
cmp
aam
mov
filds
rolb
inc
pushf
sbb
in
imul
popf
out
xor
sub
inc
outsl
ss
fistl
arpl
mov
add
and
test
push
ljmp
add
inc
popl
mov
stos
inc
mov
add
mov
fadd
call
je
add
hlt
fstps
sbb
mov
leave
jle
add
movsb
popl
dec
fildll
repnz
add
xchg
xor
pusha
bound
enter
fwait
lds
jbe
add
add
cmpsb
jb
add
lea
popf
adc
jbe
shrb
sub
lods
and
jnp
lret
mov
add
sub
jmp
add
scas
xchg
das
test
jge
pop
ss
and
cmc
in
fbstp
xchg
int
add
lcall
add
pop
into
insb
add
xlat
fbld
push
add
add
mov
stos
and
int
or
loope
int3
push
adc
sub
inc
dec
das
addb
bound
add
and
notb
add
outsl
out
pop
add
loopne
jbe
imul
add
dec
inc
dec
testl
xor
mov
or
add
add
imul
cmp
out
sub
cmpsl
nop
aam
jp
cmp
sub
out
cmpl
add
mov
in
mov
daa
ss
mov
pop
shl
sub
adc
inc
outsl
xchg
inc
test
or
push
mov
mov
call
xchg
leave
push
inc
xchg
inc
lea
mov
mov
fldenv
fcmovne
push
mov
cmovg
std
popa
mov
sub
nop
dec
mov
pop
xchg
loopne
ja
adcb
fmull
leave
js
addl
pop
test
sbb
subps
jge
ret
loop
add
adc
jb
jle
jne
or
jbe
icebp
add
loope
and
scas
jmp
cmp
xor
movb
xor
adc
pop
negl
adc
test
push
mov
pop
aaa
mov
cltd
inc
add
pop
mov
adc
mov
jl
xchg
jne
call
mov
jo
imul
sti
leave
inc
jmp
mov
or
xchg
add
dec
xorl
push
mov
xor
outsl
sti
or
scas
jae
hlt
inc
or
cli
test
mov
rolb
add
lret
inc
add
xchg
pop
mov
dec
fwait
add
imul
push
jle
add
test
cmpsb
lea
imul
push
add
xchg
aam
xorb
shll
mov
sbb
mov
dec
cmp
fisubrs
sti
mov
xor
lcall
jnp
sbb
cmp
jo
mov
add
fisttpll
add
outsl
jle
aas
jno
stos
add
lods
cmp
sbb
xchg
add
scas
push
and
or
cmp
sub
add
es
pop
shrb
add
inc
mov
xchg
pusha
decl
lods
add
ror
push
add
jb
mov
mov
jp
add
cmpsl
sahf
leave
xchg
lds
add
mov
mov
rorl
cmp
inc
sub
pop
mov
addb
shll
mov
aas
cwtl
inc
hlt
sub
movb
lea
sbb
xchg
loope
push
jle
xchg
lcall
pop
mov
sahf
orl
xor
mov
call
loope
mov
in
insb
fwait
sahf
cltd
xor
dec
add
faddl
shl
sti
and
pusha
push
mov
fstps
push
stos
roll
popf
icebp
es
shll
cmp
lods
xchg
xor
mov
inc
jo
jmp
add
push
test
lret
adc
inc
shrd
add
jo
adc
outsb
fadds
adc
sub
iret
les
add
pop
adc
push
addb
cmc
repz
nop
jmp
clc
das
ljmp
scas
xchg
jae
clc
add
fwait
mov
pusha
push
iret
getsec
mov
int3
faddl
inc
js
mov
cmp
cmpsl
fld
add
pusha
adc
xor
inc
jl
and
addr16
mov
cld
push
or
js
add
arpl
add
or
insl
call
add
add
or
notl
mov
movsb
sub
dec
insl
add
sbb
pusha
xorl
mov
dec
ret
iret
jo
add
push
mov
add
cmp
fwait
loope
add
pop
cwtl
js
sbb
arpl
add
mov
dec
mov
ja
inc
add
adc
xorb
jae
sahf
andl
loopne
sbb
cmpsl
add
or
test
add
mov
push
ret
jae
xchg
sub
fsubr
add
and
xchg
add
rcrl
mov
jnp
jecxz
add
dec
sub
and
sub
in
jp
js
xchg
faddl
mov
cmp
and
xchg
xchg
test
sbb
daa
subb
cmp
cmpsb
fistpl
lock
clc
loope
add
jns
push
jo
jnp
cwtl
aas
gs
xchg
sbb
outsb
dec
cmpsl
inc
cmp
test
push
or
xchg
add
lods
dec
sbb
push
in
xchg
push
mov
rclb
rorb
mov
test
stos
pop
rclb
xchg
jg
call
add
sbb
xchg
pop
xor
xlat
push
sub
sbb
add
aad
dec
lret
ret
js
std
mov
stos
imul
jecxz
pop
inc
or
setl
leave
add
sbb
fucom
repnz
adcl
pushf
mov
add
arpl
rorb
popa
add
adc
loopne
cmp
sub
jecxz
sub
outsb
add
jg
dec
fdivrl
lock
inc
fcompl
add
andb
jns
add
aad
aaa
insl
add
add
fnstcw
ljmp
cwtl
pop
je
add
dec
and
jge
mov
aam
in
dec
cmp
or
mov
xor
popf
js
mov
jb
add
and
or
rcll
mov
pop
or
pop
pop
scas
add
addl
push
jmp
push
adc
add
iret
outsb
xchg
ret
mov
jnp
testl
jae
das
dec
mov
into
and
aaa
fdivs
out
adc
mov
add
imul
orl
push
ficomps
pop
jle
jne
pop
cwtl
inc
add
xor
hlt
and
fidivl
cmpsl
pop
js
pop
std
ret
push
mov
les
inc
xchg
lock
jno
jo
jne
jp
add
and
or
movsb
mov
or
adc
pop
mov
pop
mov
insb
enter
pusha
lock
call
push
in
andb
jle
cmp
mov
fs
jo
inc
cmp
movsb
and
sar
cmp
ss
insb
mov
ret
lods
pop
sbb
add
je
fcmove
dec
rorb
fdivrp
orb
nop
or
xchg
pop
dec
unpcklps
and
inc
imul
pop
fdivp
add
pop
sub
cmp
lahf
or
dec
jmp
pusha
repz
cld
leave
push
outsb
or
test
imulb
add
inc
outsl
mov
add
pop
pop
str
leave
insl
out
pop
cmpsl
add
inc
repnz
enter
pop
add
ret
aam
inc
dec
adc
insl
cmp
pop
jg
sbb
pop
rclb
inc
add
dec
call
add
sub
loope
test
mov
and
cmp
repz
add
xchg
ds
sbb
jge
mov
inc
jb
das
sub
loopne
sub
outsl
jns
inc
xorl
punpckhwd
inc
add
enter
add
rolb
fucomi
and
sbb
shrl
ret
xor
xor
out
mov
push
jg
repz
mov
pop
inc
mov
pop
pusha
push
dec
add
mov
xlat
loop
mov
xchg
andl
ljmp
cmpsl
or
or
sarb
sub
cmp
mov
fsubr
xchg
out
enter
dec
cmpb
sahf
adc
sub
arpl
mov
mov
lcall
xorb
rclb
stc
xor
cmp
shrb
mov
jmp
pop
pop
jno
xchg
xlat
add
daa
sti
mov
inc
add
lods
adc
add
scas
int3
lea
in
out
cpuid
jecxz
jns
inc
leave
flds
into
lods
or
mov
inc
sbb
dec
cwtl
insb
add
inc
cwtl
pop
ja
ss
xor
aad
pop
sti
push
inc
mov
inc
js
outsl
add
xchg
or
add
pop
jmp
loop
fildl
popa
btr
and
movsb
jl
fdivs
adc
pop
test
xchg
jle
adc
and
and
subl
lods
into
cld
xchg
push
ret
add
stos
dec
or
fmul
push
adc
outsb
ss
call
sti
rorb
out
jns
sub
inc
dec
mov
add
and
in
das
aam
dec
cwtl
je
sub
xor
cmpsb
ss
add
insl
sbb
nop
dec
inc
mov
lahf
iret
push
push
add
cmp
loopne
jb
aad
fsubrl
in
add
std
stos
iret
icebp
mov
add
jg
les
xchg
pusha
hlt
add
adc
xor
ficoms
add
mov
pop
movsl
xchg
das
mov
add
and
push
add
xchg
incl
jb
sub
xchg
xor
cmp
enter
mov
cltd
push
add
inc
fbstp
pop
fs
add
push
adc
xor
incb
cwtl
js
flds
jb
dec
sbb
dec
add
int3
sub
add
inc
jb
nop
bound
push
xchg
cmp
jno
pop
aam
add
and
mov
and
lahf
lea
sub
dec
pop
ret
out
or
pushf
add
mov
jnp
rcrb
add
nop
lods
dec
test
xor
add
sarl
aaa
xor
xchg
add
adc
add
test
int
pop
out
mov
ret
cs
fwait
cmpsb
add
imulb
sub
aam
jns
aam
xor
sub
inc
mov
pop
mov
loope
xchg
ja
push
add
cltd
lock
add
mov
sbb
sub
push
out
inc
pushf
pop
xlat
lock
add
popf
and
sub
dec
pop
test
sti
test
inc
push
add
pop
imul
mov
add
lcall
and
or
dec
ljmp
daa
sbb
call
fnstcw
xchg
enter
sarb
or
add
mov
je
hlt
add
and
push
lret
pop
dec
cmp
inc
mov
inc
jae
jo
add
sahf
add
xor
xchg
and
bound
add
or
sbb
sub
sbb
out
or
lcall
push
stos
jns
push
add
popf
jge
aaa
lret
insb
sub
cld
pop
jno
fiaddl
popf
add
cmp
in
inc
dec
fmull
add
sub
shlb
adc
mov
in
call
outsb
dec
lods
add
dec
push
jg
mov
mov
xor
sahf
loopne
dec
in
enter
jg
test
inc
sbb
cwtl
fistps
xlat
jp
sub
rclb
aaa
fadds
sti
rol
repnz
xor
pop
int
mov
push
inc
xchg
das
pop
add
adcl
scas
rorl
add
gs
lcall
dec
loope
loopne
push
pop
or
xchg
mov
push
pushfw
xor
rclb
test
cmpsb
pop
movsl
rcrb
cmpsl
jbe
push
inc
in
add
and
mov
xor
xchg
add
push
subb
iret
xor
or
or
add
lods
pop
xor
or
or
mov
jp
lods
adc
bound
inc
xchg
jns
add
cld
push
dec
push
scas
pop
sbb
mov
rcr
in
jb
fs
movsb
push
js
jne
clc
addl
enter
mov
rolb
sbb
daa
sbb
rcl
inc
mov
sti
jecxz
adc
sbb
add
adc
int
or
mov
idiv
ficompl
mov
xor
jg
loopne
stos
push
faddl
les
je
add
cmpsb
nop
bound
add
out
aas
mov
or
xchg
xlat
add
inc
or
add
ds
jb
add
xchg
xchg
and
das
pop
movsb
add
mov
fmuls
les
sbb
cmp
pop
inc
shlb
orl
push
jne
add
pusha
pop
push
cmpsb
dec
pop
cmp
mov
mov
mov
push
xor
enter
add
lahf
dec
add
xacquire
test
add
push
mov
call
shll
aad
inc
insl
je
add
adc
push
imul
add
and
rclb
xchg
dec
pushf
fnstsw
xor
jmp
adc
jno
les
iret
sbbl
lods
jecxz
idivl
adc
fld
insb
jg
cmp
pop
orb
dec
hlt
popf
pop
xor
mov
jl
mulb
fstps
mov
cmp
jne
mov
jb
xor
in
mov
lret
add
daa
mov
jnp
dec
jmp
mov
mulb
pop
in
lret
fsubs
dec
ja
jmp
subb
inc
and
or
cmpsb
imul
mov
in
push
fwait
popl
popf
fdivrl
and
push
ss
rolb
pop
add
popa
outsl
push
pushf
sub
punpckhwd
mov
pop
lock
pop
jg
inc
mov
mov
aas
jnp
push
adc
cltd
push
loopne
inc
fmull
fiaddl
lahf
ret
and
jae
add
or
cs
mov
jl
xor
das
inc
jl
mov
xchg
or
inc
loop
shll
push
xchg
idivb
sbb
inc
imulb
or
pop
insl
push
in
or
sbb
cmp
mov
jno
in
les
mov
xor
mov
pop
sbb
cmp
cmpsb
lods
mov
sub
out
mov
sub
mov
test
mov
lcall
lods
andl
cmp
daa
mov
add
movsl
mov
fcomps
add
flds
sbb
cmp
sub
dec
cmp
add
clc
mov
push
test
imul
or
add
xor
rcl
push
pop
adc
mov
mov
ljmp
data16
ljmp
adcb
gs
ljmp
adc
mov
add
addl
adc
hlt
xor
mov
jo
mov
cmp
rclb
add
lcall
jl
add
jne
fs
test
add
sub
sti
pushf
hlt
xor
adc
xchg
pop
adc
cld
bound
xchg
loope
jle
add
xchg
in
sti
inc
cmc
adc
and
push
nop
aas
pop
imul
out
and
hlt
mov
or
or
hlt
ret
add
push
add
sti
int3
test
pop
clc
shrb
lahf
testl
and
aam
mov
mov
stos
add
dec
imull
lods
inc
jb
xorb
pop
dec
cmp
add
iret
jecxz
fstl
fs
pop
mov
loopne
adc
sbb
dec
fiadds
inc
push
xchg
xor
mov
push
and
jge
test
scas
jae
sahf
bound
push
mov
inc
mov
stos
push
aaa
xchg
sub
ljmp
inc
or
mov
xor
or
sarb
ffreep
outsb
push
push
jns
push
xchg
subb
pop
xchg
fwait
sahf
jne
fadds
std
cmp
enter
sub
test
pop
and
jnp
ss
mov
fisubs
dec
or
lods
popa
jae
jne
and
adcb
sub
gs
dec
shr
out
jg
push
aam
xor
or
test
add
sahf
sub
adc
clc
sarb
sahf
clc
jle
add
lock
ror
inc
jle
cwtl
add
mov
dec
mov
mov
data16
ja
hlt
movsl
shlb
ror
ds
lcall
cmp
dec
dec
add
cmp
fwait
pop
cld
jae
pusha
fldcw
jecxz
rcrl
sbb
mov
es
add
in
sub
lock
cmp
add
sub
lret
std
outsl
mov
aaa
or
leave
dec
imul
jae
pop
fwait
jge
fiaddl
in
mov
sub
jle
add
jnp
les
sbb
add
addb
test
fnstsw
out
iret
dec
subl
cmp
push
js,pn
xchg
sbbb
sub
push
and
fwait
inc
fdivs
insb
add
cltd
inc
sbb
xor
push
and
add
adc
jb
cmc
add
or
out
fwait
add
or
loop
push
or
cmp
arpl
ja
xor
xchg
loopne
pop
push
and
sbb
pop
jb
imul
cli
sub
jg
es
fiaddl
mov
push
shr
lods
add
pop
jge
scas
xor
add
out
xor
cmp
rcr
jne
xlat
aas
leave
push
popa
enter
into
fldcw
test
faddp
add
dec
or
pop
jno
sbb
inc
sub
and
lods
faddl
mov
jae
shrl
add
insl
cmpb
cli
fwait
gs
mov
das
pop
mov
out
push
inc
add
push
daa
aas
loop
mov
inc
das
inc
enter
shll
ret
and
xchg
xlat
jecxz
in
lock
or
pop
inc
pop
push
jbe
add
pop
mov
cli
add
int3
jnp
fwait
lds
mov
xlat
ror
and
lock
repz
and
jo
lahf
pop
rcrl
xor
add
sub
push
xchg
outsl
dec
popf
btr
and
shll
mov
test
lods
push
add
scas
repnz
inc
js
fidivs
inc
popa
cmp
lret
les
jns
std
push
js
sti
lods
lcall
fbld
iret
mov
mov
dec
testb
add
inc
cmp
int
faddl
mov
add
cli
addl
mov
pop
inc
add
lods
fcmove
addb
add
imul
pop
push
xchg
jmp
sub
mov
movsl
imul
add
in
jns
dec
mov
inc
dec
sti
cmp
push
mov
mov
gs
into
sti
and
add
inc
or
pusha
add
sarl
xorl
sbb
lods
push
je
push
and
adc
enter
jae
aam
xchg
add
and
fs
cmp
push
out
sahf
fsubrs
sahf
push
stc
inc
jg
adc
xor
add
mov
dec
lcall
sbb
sub
fsubs
add
cmc
mov
je
sahf
lcall
lods
mov
call
nop
jmp
sub
pop
jne
mov
hlt
add
push
add
jle
xchg
cwtl
add
adc
movsl
pop
sbb
add
scas
mov
call
mov
test
stos
cs
jbe
addb
cmp
jb
imul
cmp
add
lret
jne
adc
mov
jno
and
add
outsb
xor
pop
or
sub
add
or
add
movsb
mov
cmp
fdivrs
and
outsl
pusha
int3
mov
scas
pop
sbb
fwait
popl
movb
jae
sbb
outsl
push
xorb
inc
lea
adc
add
negl
dec
sub
hlt
mov
or
mov
add
shrb
popa
xchg
push
rclb
jl
mov
jo
push
xor
jb
lret
lcall
mov
cmp
or
stos
cmpb
movsb
imul
mov
push
fcmove
icebp
xchg
or
jns
dec
jo
pop
paddb
movsl
xchg
add
cwtl
addr16
outsl
cmp
cmp
sbb
faddl
icebp
gs
inc
fstl
stos
sub
fiadds
inc
mov
dec
xor
movsl
cs
loope
pop
sbbb
shll
test
add
sub
xchg
push
aaa
imul
movsb
rorb
xchg
cli
cmp
mov
push
sub
divl
stos
imul
gs
add
xor
xor
shrb
jbe
ja
inc
pop
mov
subb
dec
f2xm1
add
mov
inc
nop
adc
mov
adc
add
adc
pop
lods
mov
sbbb
add
not
insb
cmovno
daa
pop
cs
sub
shrb
clc
add
xor
lds
addr16
jno
or
mov
ds
div
sub
add
mov
sbb
scas
jmp
ret
xchg
test
mov
mov
cwtl
jecxz,pn
call
cmp
psubsw
jmp
es
push
call
or
push
call
lcall
adcb
adcb
addb
or
pop
dec
sbbb
add
scas
rorl
jmp
fldcw
lods
or
or
add
decl
out
clc
fstpt
adc
insb
in
cmc
popl
mov
adc
subb
daa
cmp
out
lods
push
adcl
and
add
ss
mov
dec
add
test
lcall
xchg
xor
xor
and
in
dec
adc
dec
movsb
jns
lahf
inc
pop
lea
insl
or
andb
mov
xchg
xor
add
sub
ljmp
test
sti
mov
and
scas
sahf
pop
popf
mov
xor
xor
dec
cmp
add
icebp
jp
and
add
mov
lods
lods
adc
push
out
popa
ds
adc
mov
int3
add
cmp
push
mov
adc
addr16
les
dec
jg
data16
add
adc
std
cmpb
mov
jge
shll
lahf
mov
test
cmpb
mov
out
add
repnz
lods
cmp
cmp
jno
mov
jge
mov
xchg
pushf
lahf
push
sub
das
xchg
mov
push
aam
pusha
xor
mov
lgs
push
mov
xchg
cwtl
addb
xor
jo
sub
pop
cld
movsb
and
movsl
hlt
jp
loopne
in
lea
or
and
xchg
dec
andl
loop
mov
cmp
jae
pop
std
aam
push
fdivl
lea
incb
roll
aam
lock
in
mov
adcl
xor
jno
iret
aas
subl
js
cmp
pop
es
push
sub
push
addb
sahf
subl
add
or
inc
stos
inc
negb
sbb
shll
dec
inc
bound
adc
pop
xor
loopne
shlb
mov
lahf
or
dec
and
out
sbb
add
mov
movsb
test
lcall
and
in
push
outsb
ret
daa
xchg
adc
insl
mov
out
loopne
daa
sbb
xchg
lods
or
mul
add
sbb
jno
pop
lock
and
sahf
add
lret
gs
sbb
add
test
sarb
add
sbbb
in
imul
dec
mov
dec
out
loopne
pushl
and
or
nop
inc
loop
sti
sub
clc
aas
add
jns
mov
sbb
inc
add
js
bound
add
and
sbb
add
ja
ret
add
iret
loope
pop
pop
push
gs
sub
in
cwtl
pop
in
ds
decl
jnp
cmp
cmp
dec
shll
add
pop
pop
or
jns
mov
pop
test
xor
lcall
pushf
arpl
xchg
shl
iret
loop
cmpl
jnp
fldl
out
std
cbtw
sbb
add
xchg
cmpsb
sbb
orl
in
popa
and
add
push
cmp
add
test
das
adc
ljmp
enter
out
add
es
loopne
add
sbb
and
movsl
add
aaa
mov
add
popf
cmpsl
mov
add
das
loopne
jo
rcrl
add
xorb
fisttpll
dec
stos
sar
lret
sbb
mov
add
xchg
jp
add
aad
dec
neg
out
jp
jns
pop
enter
dec
pop
dec
add
rorl
add
jbe
add
testl
mov
fldl
adc
insl
fwait
shl
pop
pop
xorb
jp
pop
and
lock
add
cs
sub
adc
ds
push
inc
gs
aaa
sarl
add
icebp
add
stc
pop
dec
add
leave
fistpll
mov
je
add
push
push
cli
and
fldenv
movsb
gs
cmp
lods
mov
or
das
and
pop
cmp
adc
test
cmp
cmpl
jmp
test
pusha
jp
out
cs
push
sub
cmp
rol
push
jb
mov
in
dec
adc
push
test
jp
sbb
add
cli
xor
aam
adc
sti
jb
lahf
pusha
and
push
add
inc
mov
add
mov
daa
pop
sarb
or
cmp
mov
sub
sub
and
xchg
dec
jb
dec
cmp
add
std
xor
pop
jo
leave
xchg
xor
cwtl
add
push
and
inc
mov
call
and
jo
add
pushf
imulb
loopne
add
or
xor
mov
inc
pop
enter
dec
jp
outsb
inc
dec
test
call
push
int3
mov
add
shll
or
and
jl
sub
mov
std
add
xlat
xor
add
test
push
dec
push
add
in
cmpb
dec
es
mov
pusha
add
daa
add
clc
jp
push
sarl
and
add
dec
lds
dec
push
subb
bound
push
add
loop
fadds
sub
xor
xchg
add
ret
fistl
push
or
add
fdivr
fbstp
pop
add
add
hlt
add
jo
mov
clc
sbb
sub
movsb
movsl
inc
sub
push
jns
or
lds
mov
add
jle
insb
xchg
add
adc
sub
push
xor
lock
sbb
mov
add
mov
push
jl
jecxz
dec
loopne
inc
add
mov
mov
das
lock
ss
icebp
add
scas
push
or
pop
add
cmpsl
cmp
add
pop
or
lock
push
and
flds
mov
pop
outsl
dec
andb
push
test
bound
xchg
in
stc
inc
movsb
fdivrl
rol
jne
lock
xor
subl
lods
add
clc
cwtl
test
pop
movsl
cltd
mov
dec
icebp
fdivr
cmp
aad
add
mov
or
push
mov
jge
repz
adc
std
in
test
bound
mov
push
push
fwait
das
pop
jp
push
dec
cmp
push
imul
pop
adc
push
fsubs
mov
add
jp
xor
cmp
stc
addb
add
jns
xor
push
add
dec
loopne
adc
add
nop
mov
add
add
fisubs
loop
xor
cmp
jae
shrd
mov
adc
mov
or
cmpsl
rcrb
push
rolb
jg
xchg
sub
pop
ficoms
cmc
and
in
pushf
add
pop
xlat
enter
xlat
dec
jl
add
idivb
pusha
movups
ja
inc
clc
push
lods
xchg
pop
push
mov
scas
add
bound
push
ja
loopne
pusha
pop
and
push
jge
xchg
adc
imul
test
shrl
cmp
shl
xchg
addr16
add
inc
pushw
and
dec
pop
fs
in
or
mov
fldt
repnz
pop
mov
and
cmp
adcb
out
add
leave
jno
fmuls
push
imulb
push
adc
sbb
add
push
mov
add
ror
jnp
add
std
cltd
adc
test
mov
fsubr
jg
fdiv
inc
add
adc
add
add
jo
xor
adc
pop
lret
js
aas
outsb
dec
add
fcoml
add
mov
mov
jmp
int
xor
pop
add
dec
or
repnz
add
cmc
aaa
fmuls
mov
sbb
add
shl
fs
add
loop
mov
ds
add
cmp
ror
divl
rcrl
mov
add
leave
sbb
sbb
push
jne
int3
sbb
mov
pop
cli
sub
daa
out
lret
push
pop
or
push
or
lock
mov
xor
and
sbb
jne
clc
in
jb
cmc
adc
test
cmp
pop
adc
xor
fldcw
sbb
inc
cmp
and
jg
loopne
cmp
add
jno
imulb
call
dec
outsb
jb
fdivrl
push
jg
sbbl
adc
fdivrl
std
sub
push
sub
inc
hlt
out
sarb
and
test
and
sbb
jecxz
add
add
xor
push
dec
test
cmp
inc
and
daa
push
sub
xchg
jp
test
dec
lock
sbb
das
std
sbb
test
lret
repnz
fwait
cmp
rcr
in
pop
add
pop
and
cmpsb
add
gs
sbb
sbb
pop
orl
imul
add
xchg
or
cmp
mov
std
mov
xor
leave
stos
jae
add
cli
adc
lds
sbb
lock
into
xchg
cmpb
leave
mov
sub
xchg
push
in
add
sub
call
add
enter
pop
push
lods
add
arpl
clc
add
loope
shrb
les
js
clc
inc
imul
sub
adc
addb
and
lcall
jnp
inc
test
xchg
movb
xchg
mov
popa
push
rolb
in
pusha
mov
adc
out
ljmp
xchg
and
and
sub
js
sldt
cmc
inc
adc
add
push
and
adc
insl
std
add
push
pop
inc
push
xchg
and
cld
xchg
std
mov
jne
pop
jp
add
and
inc
xchg
push
sbb
cmp
jo
cs
sahf
or
mov
lods
push
pop
fs
ret
mov
push
cld
verr
popf
orb
sbb
in
mov
mov
xchg
add
ret
int
lcall
add
or
adc
ret
cwtl
adc
mov
orb
shlb
push
lock
aad
or
add
adc
ljmp
push
stos
or
pop
add
mov
mov
testb
jne
je
pop
jns
dec
test
add
mov
sub
add
inc
fmull
repz
and
cmpsl
or
call
movsl
lret
jno
add
mov
pop
pushf
add
sub
push
test
mov
or
shlb
add
cmp
gs
or
cwtl
loope
fcomp
xor
mov
daa
inc
or
jmp
jle
hlt
faddl
pusha
sub
jae
adc
test
les
nop
sbb
imul
hlt
cmp
rdtsc
icebp
pop
inc
pusha
addr16
or
adc
xor
adc
repz
test
clc
push
and
and
adc
les
cltd
movb
or
inc
sbb
pop
les
xor
iret
cmp
add
mov
dec
xchg
add
xor
fcmovbe
add
inc
pusha
notb
subb
push
cmp
js
add
int3
inc
mov
or
pop
xor
push
nop
push
add
repz
pop
clc
popa
add
or
jle
inc
adc
sahf
xchg
inc
jge
aas
xchg
or
fcompl
shll
jle
loope,pt
push
add
iret
mov
stos
fdiv
ficomps
lahf
inc
inc
int
hlt
push
push
mov
xor
inc
add
push
add
rcll
add
dec
xchg
bndstx
fs
mov
dec
lods
jl
cmp
loopne
cmpb
mov
dec
mov
lcall
jmp
enter
nop
or
stos
lds
leave
loop
mov
xchg
in
repnz
push
push
iret
cmp
xlat
jle
pop
subl
mov
nop
inc
inc
pop
loopne
pusha
and
mov
cwtl
aas
and
jmp
ljmp
test
ret
pusha
push
dec
test
ret
movsb
sub
jo
subb
and
sti
jb
out
mov
cmc
add
lods
ret
rcrb
out
cld
add
add
add
pop
sub
cmp
and
push
xchg
fdiv
iret
int
mov
adc
mov
jmp
and
mov
fsubrs
jp
add
xchg
inc
push
cwtl
inc
inc
sbb
fiadds
jae
and
jbe
ja
lock
inc
es
xchg
pop
add
sbb
add
jg
sub
dec
in
divb
lea
lods
mov
push
repnz
jns
lret
mov
fisubs
mov
clc
mov
push
rcrl
mov
loopne
pop
daa
loopne
inc
daa
push
dec
add
std
add
adc
mov
mov
mov
mov
aam
cwtl
add
test
cld
pusha
cmp
mov
add
and
adc
sub
sbb
out
mov
jl
imulb
pop
int3
int
ds
faddl
fwait
bound
xor
pop
adc
cmp
rclb
push
xchg
std
add
push
popa
mov
repnz
out
jg
pop
mov
or
outsl
mov
popa
jne
repz
xchg
sbb
in
sbb
ss
dec
mov
les
add
movsb
sub
xchg
lods
sbb
cld
cmp
mov
or
sbb
inc
xlat
insl
addb
and
add
and
jb
cld
sti
dec
and
jnp
js
inc
push
add
xchg
lods
xchg
or
ljmp
adc
jl
xor
nop
pusha
pop
lock
lea
cmc
mov
pop
xchg
adc
and
mov
dec
and
push
mov
mov
xor
push
insb
push
pop
subb
xor
sub
idiv
add
dec
fwait
and
movsb
inc
cmp
bound
ret
xchg
xchg
mov
push
xchg
xor
shl
daa
mov
xchg
dec
add
push
xchg
rolb
mov
pop
xchg
addl
std
aad
jns
mov
pop
add
sub
lods
add
pop
sbb
mov
divb
les
fs
mov
imul
loopne
les
ss
mov
div
subl
mov
jp
or
mov
adc
mov
mov
sbb
inc
cltd
and
xchg
sub
xorb
shr
jg
jns
loopne
or
add
adc
cmpsl
pop
outsb
rolb
mov
loopne
mov
jg
rcr
clc
xchg
cwtl
ss
xor
lods
out
add
das
jecxz
push
stos
adc
in
and
xor
es
or
cwtl
je
add
lret
adc
mov
and
jle
pop
popf
mov
outsb
push
fidivl
dec
and
repz
add
mov
jg
cmpsl
cmp
mov
push
add
sbb
sar
adc
std
or
cmc
sub
add
and
add
call
pusha
lods
inc
dec
add
add
and
sbb
or
sub
sbb
call
push
dec
pop
stc
add
pop
fiaddl
sbb
mov
fmuls
pop
mov
xchg
shl
dec
push
sbbb
repnz
cwtl
call
jne
insb
mov
jecxz
sbb
out
shll
in
addl
out
xchg
cmpsl
push
inc
adc
pop
pop
or
fsubrs
fdivp
das
pop
rcl
mov
jmp
nop
aas
mov
add
sub
add
add
fs
xor
add
sbb
rcrl
pop
rcrl
mov
shlb
loopne
add
fcom
outsl
pop
leave
lds
arpl
or
mov
ret
mov
sbb
dec
sahf
fdivrl
pop
adc
sub
mov
sar
add
add
lcall
pop
pop
inc
jo
cs
jns
mov
addr16
xchg
shr
stc
pushf
adc
jg
das
pop
xor
jne
inc
xor
cmpsl
fisubl
add
pop
aad
pop
cld
scas
in
sub
push
iret
mov
mov
pop
jbe
clc
pop
pop
jnp
xchg
stos
push
test
adc
add
mov
add
or
in
lock
add
pop
pop
jge
add
ret
shlb
add
push
pop
jns
call
pusha
stos
iret
cmpsl
imul
cmp
jecxz
add
insb
xchg
shrb
aas
xchg
add
sub
scas
sar
mov
add
sti
loope
mov
movsb
inc
cli
leave
xchg
or
sub
je
cmp
loop
or
bound
mov
and
mov
cmp
in
clc
xchg
or
pop
and
push
pusha
pusha
xor
add
xchg
cmp
cmpl
sahf
inc
xadd
mov
rcll
fucompp
add
adcl
fs
arpl
mov
add
out
sbb
je
jle
fs
nop
xor
xchg
and
cmp
mov
mov
sbb
push
test
and
mov
jmp
sbb
je
inc
lock
jae
fs
inc
aaa
inc
mov
sbb
loopne
jo
add
or
push
add
std
push
stc
mov
mov
mov
add
pop
aaa
xchg
or
jg
setbe
mov
int3
imul
adcb
xor
test
in
popf
xchg
xchg
je
or
jbe
sbb
fiaddl
mov
inc
in
mov
add
call
sbb
jno
dec
add
push
adc
daa
or
xlat
sbb
insl
mov
and
push
dec
das
aas
pop
or
add
push
loopne
inc
or
lods
hlt
inc
mov
cmp
cmp
arpl
fsubl
in
sub
imul
sti
or
mov
add
inc
sub
xor
adc
aas
jb
fsubrl
and
jno
push
push
daa
orl
jb
dec
push
mov
mov
stos
ss
rorb
mov
xchg
psrad
dec
rorb
out
fs
xchg
in
add
mov
incb
adc
les
subl
dec
nop
add
pop
repz
imul
out
jbe
dec
ss
jecxz
lahf
sbb
pusha
adc
jge
adc
adc
jae
and
xor
fsubrp
and
pop
int
cmp
pop
test
roll
push
pop
imul
xchg
into
daa
nop
inc
rolb
sub
sub
or
add
jbe
stc
add
push
pop
or
cmp
pop
mov
enter
add
aaa
pop
loope
out
shrb
push
pop
sbb
xchg
rclb
mov
addl
dec
sub
addb
xor
inc
iret
cli
jnp
mov
aas
test
cmp
sbb
cmc
addr16
add
mov
add
or
pop
idivb
mov
add
mov
lahf
movsl
lock
jle
int
addb
rolb
ret
add
xchg
sbb
jle
dec
add
inc
add
add
mov
ja
add
fsubrs
push
lret
cwtl
push
pop
pop
mov
mov
rorb
divb
mov
lock
add
outsb
or
cli
rol
aam
fiaddl
mov
into
loopne
push
sub
xor
cmp
lods
shrb
into
out
cwtl
pop
xchg
and
test
jg
into
sub
fmul
je
adc
jmp
adc
clc
jne
mov
cmp
nop
pop
or
xchg
mov
cmp
cli
dec
lea
jns
sbb
push
xor
call
add
jg
sbb
jne
push
aaa
scas
mov
mov
inc
test
adc
jb
in
mov
insb
mov
pop
pop
cmc
iret
mov
scas
stos
pop
inc
jo
or
jbe
imul
add
testb
mov
xor
mov
out
adc
cmp
movsb
add
jmp
dec
jb
lods
add
jne
stos
push
jmp
out
xchg
es
ljmp
adc
xor
sbb
pop
stc
in
rorb
aad
jle
stc
and
adc
dec
incb
cmpsb
mov
shlb
stos
and
push
push
or
insb
push
add
jo
fldenv
pusha
daa
push
push
jecxz
adc
mov
clc
mov
jb
and
push
adc
leave
pop
mov
adc
mov
xchg
sbb
pushf
xchg
add
push
cmp
lock
sub
jle,pt
xor
lahf
dec
test
xchg
mov
add
mov
bound
or
sub
mov
jmp
and
ss
jle
dec
daa
sub
aas
mov
adc
cmc
aas
push
mov
loopne
int
add
mov
popa
arpl
outsb
sub
jl
add
movsl
sub
mov
clc
imul
mov
adcb
adcb
or
pop
mov
adc
sti
xor
cmpsl
add
sbb
pop
add
jbe
and
xor
xlat
mov
clc
adc
jnp
add
sbb
popa
les
or
lock
push
leave
add
out
je
pusha
ss
les
ror
div
jo
push
add
ja
das
jns
test
push
addr16
jecxz
or
inc
mov
mov
mov
mov
pop
add
jecxz
divb
lcall
clc
sub
push
or
movb
mov
ss
ret
lcall
add
hlt
mov
inc
mov
mov
adc
jae
add
mov
pop
or
arpl
stc
ret
insb
pushl
es
in
or
xchg
and
nop
adc
bound
and
ds
pcmpgtw
mov
das
pop
jecxz
pop
add
ss
sbb
push
add
scas
es
sub
xchg
push
add
push
roll
movsb
xchg
mov
mov
add
outsb
test
sbb
mov
dec
stos
add
cmp
or
call
cltd
psubd
adc
dec
jge
pop
add
setge
xchg
xor
sarb
cmp
sbb
adcb
xchg
fstps
call
adcb
mov
pop
dec
rcl
sbb
loop
mov
ja
jl
sub
push
sbb
arpl
xchg
ja
dec
rcrl
add
in
cltd
insl
idivl
sbb
idiv
cmp
mov
sbb
aas
xchg
mov
add
loope
adc
andl
movsl
sbb
adcb
push
push
enter
inc
and
movsl
pop
or
ret
in
inc
jbe
sub
xchg
add
imul
test
add
addl
sub
mov
dec
loope
jge
pop
out
ret
add
adc
cmp
xchg
enter
mov
adc
xchg
add
shl
xchg
int3
mov
aaa
lds
mov
sbb
or
pop
shrb
inc
dec
rorb
roll
push
popa
test
add
out
mov
xchg
add
mov
ja
clc
fisttpl
test
xchg
mov
mov
stc
xor
mov
mov
hlt
bound
pusha
ficompl
push
mov
jle
push
or
and
pushaw
ja
aad
std
or
cli
pop
mov
inc
sub
jnp
mull
push
outsb
es
mov
mov
and
add
push
das
inc
add
sbb
and
loopne
test
bound
sti
push
add
jp
sbb
jns
cmp
testl
sahf
xchg
nop
loope
or
and
out
cmp
inc
or
lods
xor
mov
add
and
fld
xchg
mov
cmc
scas
or
push
cmp
sbb
jns
inc
xchg
sub
xor
or
push
fsubs
in
sar
and
out
adc
mov
ss
ljmp
in
pop
cmp
fsubrs
cwtl
or
int3
push
xchg
inc
pop
lcall
int3
adc
add
push
and
imul
pop
pop
sbb
mov
sbb
pusha
js
aaa
push
pop
adc
inc
les
adc
out
jno
repnz
cwtl
or
cmp
sbb
push
push
outsl
mov
rcll
xchg
sub
mov
lds
repz
sbb
and
shlb
popa
sahf
pop
push
and
jb
or
lods
pop
and
jo
pop
xchg
adc
or
daa
aam
sbb
add
xchg
inc
pop
and
lret
test
add
push
imul
fmulp
push
pop
jno
xor
scas
add
cs
mov
addr16
rcrl
push
xor
add
xor
std
repnz
xchg
loope
mov
jo
inc
add
push
test
repz
jno
lss
je
movsl
mov
adc
push
sbb
jp
jo
jbe
sbb
and
sbb
sbb
jge
fisubl
pop
dec
mov
or
mov
nop
or
jmp
push
pop
ss
jnp
clc
pusha
scas
test
add
idivl
iret
mov
mov
lods
decl
push
lods
push
sbb
mov
loope
nop
and
inc
lock
push
or
rol
inc
aam
pusha
dec
and
xor
repnz
adc
icebp
sbb
repz
adc
movsb
in
aad
adc
xlat
popf
mov
test
or
imul
and
push
and
sub
pop
mov
ret
shlb
jg
add
dec
push
arpl
cltd
add
cmp
mov
inc
sbb
jne
lds
pop
sbb
loop
movsb
icebp
subb
jl
test
fs
mov
mov
mov
xchg
test
and
xchg
jno
mov
sti
jae
add
leave
xchg
insl
incb
inc
mov
rolb
adc
xchg
push
test
add
addb
pop
cmp
pop
clc
lods
push
sbb
sub
or
in
push
das
lret
in
outsl
aad
pop
xchg
push
in
pushf
add
mov
inc
mov
pop
inc
cmp
inc
call
jne
fdiv
pop
xchg
pusha
mov
xchg
enter
outsb
sub
mov
or
push
je
cmp
ss
xor
and
mov
shll
sbb
inc
jno
loopne
or
add
in
pop
repnz
enter
pop
sarl
and
movsb
loope
add
push
push
and
lret
add
fdivrl
loope
dec
fiadds
push
dec
out
repnz
pop
push
sub
fiaddl
or
jp
sub
in
push
xchg
or
pop
cmc
inc
pop
cwtl
loope
push
dec
pop
in
cmp
das
inc
lock
outsl
aas
ret
jo
push
xchg
je
test
mov
jnp
add
fsubrl
in
js
jns
add
pop
rcrb
mov
xor
mov
mov
sbb
xor
add
inc
adc
sub
mov
nop
int3
inc
std
jbe
outsl
add
loopne
xchg
movsl
jmp
inc
scas
inc
sbb
push
int3
xorb
mov
add
adc
xor
cld
add
dec
mov
out
add
push
insl
es
mov
loop
push
mov
cmp
cmp
sub
xor
adcl
and
arpl
loop
popa
xchg
fldt
xchg
jmp
pop
ret
or
push
insl
in
inc
les
add
inc
xor
std
bound
mov
leave
add
add
out
push
jmp
mulb
and
adc
sub
mov
lret
xchg
sub
xchg
pop
and
stc
imul
add
nop
leave
add
stos
mov
pop
mov
cmpsl
test
ljmp
and
and
add
pusha
or
add
and
ret
add
inc
loopne
adc
and
jmp
mov
ror
clc
cmp
and
add
cmp
out
mov
ds
add
jae
sahf
roll
sbb
lea
xchg
ljmp
mov
pop
movsb
pop
adc
std
mov
pop
inc
dec
ret
jnp
mov
xchg
test
arpl
shrb
sub
movsl
pop
xchg
icebp
int
mov
cld
imul
pop
add
rcl
pop
xor
push
inc
sub
loop
dec
rorb
sbb
clc
imul
push
or
inc
rcl
mov
mov
jmp
jecxz
dec
xchg
adc
addr16
mov
clc
lcall
and
aad
pusha
and
gs
fcmovne
add
dec
sbbl
sub
ficomps
and
jne
cmp
repz
push
addb
les
mov
xor
mov
pop
push
div
add
adc
add
int3
add
xchg
js
pop
adc
mov
add
jnp
ret
cmp
sub
add
pop
sbb
cmpsb
push
mov
inc
les
pop
cld
clc
int3
push
fdivrs
add
xlat
jmp
mov
out
add
mov
daa
js
jp
add
mov
and
mov
push
push
mov
femms
add
jnp
arpl
mov
adc
xor
insl
mov
and
cmp
loope
xor
cmp
cmp
mov
movsl
xchg
push
mov
ljmp
xor
push
stos
lods
add
nop
data16
imul
dec
clc
cmp
add
gs
add
pusha
mov
ret
pop
lea
and
cmp
outsl
dec
enter
mov
sub
and
pop
inc
mov
dec
mov
sub
jo
jb
call
loope
sub
jno
imul
aas
mov
clc
inc
fcmovbe
inc
cmp
popl
rcrb
fwait
mov
fstl
iret
test
xchg
or
inc
shl
outsb
mov
aaa
add
mov
xor
jl
mov
in
mov
stos
inc
out
add
insl
xchg
mov
add
xchg
test
lret
mov
repnz
fsubl
cwtl
mov
xchg
jae
inc
mov
out
mov
sbb
cltd
pop
aad
inc
call
loope
sub
fmuls
movhps
add
mov
into
jg
aad
nop
in
sar
add
faddl
mov
add
sbb
mov
sub
insb
jecxz
xor
pop
into
lret
aam
inc
sarb
nop
adc
and
jp
out
sarl
jbe
out
rolb
jg
ret
loope
xor
outsl
or
and
aam
cmovns
nop
dec
mov
dec
fdivr
pop
pushf
inc
mov
lea
cmp
push
sbb
mov
jg
loopne
add
mov
loop
inc
sbb
fs
add
jge
mov
loopne
xchg
andb
in
out
jp
les
cwtl
mov
shlb
or
pop
push
pop
adc
jp
cltd
xor
insl
cmp
and
xchg
out
and
adc
repnz
add
add
sarl
andb
pop
mov
lods
add
ret
out
mov
aas
adc
sub
and
sub
leave
pop
int
ljmp
mov
mov
cld
push
lret
pop
jle
out
jbe
pusha
lods
and
imul
mov
sbb
iret
cmp
adc
pop
jge
int3
scas
out
movsb
andl
mov
jae
jge
aaa
cmp
flds
add
sbb
push
push
testb
dec
adc
lea
js
in
pop
js
or
xchg
jb
shr
or
flds
sbb
mov
cmp
mov
aaa
out
push
ret
mov
shrl
xchg
cltd
add
leave
js
filds
nop
fwait
orb
fisubl
and
xchg
push
add
mov
stos
mov
pop
movsl
xor
xchg
mov
pop
ss
xlat
pushf
inc
mov
inc
icebp
mov
into
pop
jno
sarl
adc
lds
lea
inc
push
jecxz
push
push
cltd
and
adc
das
js
mov
imul
out
dec
cmpsl
xchg
adc
add
pop
xchg
mov
addb
pop
rorb
inc
fs
sbb
fwait
mov
andl
lock
imul
scas
addb
data16
stos
pop
sbb
mov
inc
mov
psllq
and
int3
sbb
in
add
and
clc
sub
pop
ficoml
mov
add
adc
add
mov
lcall
or
shlb
add
aaa
sti
adcl
imul
rcrl
mov
std
loope
roll
jl
call
ss
ja
movsl
inc
jbe
adc
jle
adc
xlat
enter
xchg
sar
mov
mov
jl
or
xchg
fs
addl
sbb
popf
or
mov
fadds
pop
aad
stc
insl
mov
arpl
mov
sub
loopne
stc
shl
inc
add
xor
adc
loope
mov
insl
cld
push
sbb
jb
add
sahf
shrb
icebp
add
mov
pop
mov
fadd
mov
fidivl
sbb
hlt
lcall
cld
nop
movsb
sbb
nop
repz
les
mov
fstl
dec
xchg
dec
add
lret
mov
and
shll
cmp
push
rolb
inc
orb
sbb
stos
add
pop
cld
dec
pop
inc
xchg
jle
cltd
das
xor
stc
or
dec
dec
jnp
sti
in
cmp
or
je
jl
rolb
dec
xlat
xchg
and
xor
out
scas
cmpb
mov
lahf
pop
cmpsb
dec
in
dec
cmp
inc
lods
jb
lcall
add
or
enter
dec
ss
pop
bound
pop
inc
xchg
fiadds
xchg
popf
pop
js
xchg
call
popa
loop
cs
cmpsb
sub
add
pop
daa
sbb
test
mov
loop
push
je
add
xchg
addb
push
mov
pop
xor
in
sbb
ljmp
add
lcall
and
daa
add
push
mov
push
xor
adc
loope
aaa
pop
dec
and
cmp
addl
lock
outsl
iret
add
pop
dec
lret
lods
mov
test
cmpb
insb
es
mov
fadds
cwtl
mov
mov
int
loopne
sbb
inc
test
movsl
rclb
imul
pop
jbe
cmpsl
adc
push
out
fwait
mov
xchg
xchg
add
push
add
in
or
cmp
mov
xchg
sbbb
cmpl
ss
fcoms
cld
pop
sbb
loopne
cld
ret
add
scas
fwait
sti
je
fmul
sar
push
stos
lods
adc
je
pop
rolb
add
add
push
ja
lods
repz
add
sub
clc
enter
jne
xor
add
xchg
push
xor
lods
or
mov
adc
icebp
cli
inc
das
in
ret
nop
fcomps
loopne
mov
jo
mov
sbb
and
xor
and
mov
popf
test
cmpl
push
andb
aaa
pop
dec
dec
dec
popf
nop
cld
int3
inc
add
arpl
jp
incb
fisubl
fsubs
sbb
out
adcl
mov
pop
mov
and
sub
fldcw
jb
pushf
nop
adc
adc
or
xchg
mov
xchg
xchg
call
les
testb
dec
push
sbb
cwtl
cld
sbb
sbb
sar
jo
add
jno
push
lret
cmp
cld
add
push
pop
inc
imul
cltd
xchg
mov
jbe
mov
add
pusha
add
inc
dec
fildll
mov
pop
ss
cwtl
and
push
int
pop
jb
leave
xorb
and
pop
je
aam
mov
stos
les
subb
adc
push
sub
addl
dec
xchg
sbb
scas
jns
add
jb
jo
pop
inc
popf
lock
push
iret
cltd
or
add
and
rclb
out
out
loopne
mov
add
out
cld
jo
ja
aas
add
mov
pusha
sbb
ret
mov
stc
mov
push
sub
cs
adc
dec
repz
sub
mov
cmp
or
xchg
imul
lea
adc
push
xor
pop
xchg
mov
add
inc
xor
and
or
mov
dec
mov
mov
xlat
enter
test
rolb
pop
mov
mov
jno
push
inc
mov
inc
enter
mov
add
jmp
jg
jns
lea
pop
int
mov
sbb
stos
mov
orb
dec
jo
clc
lock
or
mov
les
inc
jne
pop
and
movsb
in
or
xchg
mov
rcrb
or
lds
add
dec
mov
ds
push
pusha
fisubrs
addb
sub
ss
sti
dec
pushf
enter
inc
mov
or
adc
lahf
cs
lahf
or
mov
mov
or
adc
push
cmp
call
sub
or
outsl
mov
push
shll
sbb
and
sub
jns
mov
push
pop
negb
loopne
int
pop
stos
sbb
mov
lcall
xlat
loope
icebp
push
inc
hlt
push
orl
push
mov
adc
loop
loopne
adc
sbb
outsb
mov
mov
or
add
mov
add
mov
pop
int3
add
push
popa
mov
mov
call
pop
dec
sub
loope
push
fiadds
push
inc
mov
sbb
cmp
hlt
add
xor
imul
shlb
mov
lret
pusha
cmp
and
add
sub
ret
push
rclb
xchg
xchg
in
sbb
testb
das
push
and
daa
out
sub
and
je
push
dec
inc
enter
jl
sub
mov
add
outsb
jge
lahf
fs
or
pushf
in
and
adc
cld
into
mov
xchg
es
pusha
and
jmp
js
jae
shlb
insl
int
dec
xchg
clc
xorb
out
xor
pop
or
roll
add
push
dec
and
xlat
or
cmp
dec
push
mov
adc
inc
mov
pushf
sub
cmp
mov
rcrb
xor
cwtl
jo
jae
and
gs
mov
xchg
enter
add
sbb
dec
stos
or
xor
nop
pusha
rorl
or
lcall
dec
dec
call
bound
add
pushf
add
adc
add
xchg
xor
adc
lea
add
xor
imul
mov
fs
es
mov
xlat
mov
mov
xor
pop
aas
out
cmp
cmp
or
xchg
or
xor
mov
mov
inc
loopne
outsl
pop
and
or
scas
pusha
cmp
xor
test
in
shlb
mov
call
ret
and
mov
fwait
cltd
mov
adc
pop
and
or
sbb
pop
mov
nop
or
inc
inc
xor
int
addb
cld
pop
nop
mov
mov
addr16
scas
or
xor
mov
mov
movsb
push
bound
xor
pop
mov
test
pop
fstp
mov
jmp
in
jmp
mov
js
pop
mov
and
mov
and
mov
add
stos
movsb
lods
and
test
fsubrs
add
ja
fnstenv
xor
mov
pop
inc
inc
add
ja
ret
add
incb
pushaw
adc
push
add
mov
dec
ror
mov
scas
sbb
imul
inc
pop
daa
stos
mov
in
adc
inc
pop
and
sub
bound
adc
sbb
sahf
pop
lea
insb
and
dec
ficomps
mov
or
xchg
jl
cli
test
xor
lcall
shl
outsb
push
movsb
add
andb
loope
enter
test
cwtl
add
arpl
sbb
sbb
inc
sarb
add
add
lea
mov
hlt
adc
shrb
cmpb
fldl
sbb
and
adc
adc
mov
fildl
lcall
jp
and
cmpl
mov
aam
movsb
leave
sarb
shl
cmp
mov
popl
jmp
cmpsl
mov
add
lods
mov
jg
mov
mov
or
push
sbb
insl
xor
pop
das
sub
call
or
sahf
int3
pop
and
movsb
cmpb
jle
jp
mov
hlt
movsb
test
sahf
flds
out
inc
xor
shr
xchg
add
adc
mov
xchg
adc
pop
jmp
push
add
addr16
sub
rol
add
test
enter
clc
lret
int3
mov
add
adc
add
addr16
add
jecxz
cltd
mov
sti
loop
mov
stos
xor
jp
sti
mov
std
add
sub
inc
add
lods
mov
cmp
push
push
add
sub
sub
in
outsl
push
xor
mov
add
mov
fwait
loopne
push
stc
mov
mov
xor
mov
aas
adc
add
push
lcall
ror
dec
add
aaa
cmp
aas
xor
rol
and
ss
dec
pop
sbb
out
sbb
cmc
add
mov
out
pop
pop
adc
imul
pusha
mov
sbb
sbb
ss
xor
push
std
cli
xchg
popa
inc
push
andb
aaa
mov
rorw
jmp
add
push
push
xor
xor
jmp
popf
rolb
xchg
lret
xor
fcoms
outsl
leave
mov
inc
xchg
push
daa
loope
rclb
or
push
rolb
idiv
js
aaa
jae
aas
fdivrl
fildl
xchg
aaa
mov
cmp
gs
mov
dec
shl
cmp
cmp
inc
sub
add
pushf
dec
or
hlt
or
movsl
sub
cli
cmpl
add
and
push
movsl
cmpsl
movsb
mov
and
push
movsl
les
repz
bt
xor
sbb
xchg
add
jbe
cmp
insl
mulb
jno
js
push
sti
aas
push
mov
insl
mov
adc
mov
into
cmpl
lock
popa
cltd
and
lret
xor
mov
jmp
adc
test
add
int
stc
adc
jns
adc
sti
push
xchg
and
and
test
std
lea
gs
orb
in
mov
cmp
sub
push
jbe
lret
jecxz
adc
pusha
test
movsb
inc
and
xchg
inc
push
cmp
and
imul
lcall
push
call
leave
or
rolb
pusha
add
dec
cltd
add
out
xor
cmp
movsb
mov
push
stos
sbb
or
lods
rolb
add
enter
push
mov
inc
call
repnz
in
test
les
xor
rolb
lcall
or
add
imul
out
call
sbb
lea
aaa
cwtl
fs
add
fsubs
fisttpl
movsl
or
xchg
sarl
test
test
cwtl
roll
adc
sub
decl
sbbl
and
adc
or
jge
ror
addr16
cmp
xchg
xchg
rcl
popf
mov
jmp
clc
and
adc
cmp
or
lcall
std
mov
lahf
xor
outsb
or
lret
mov
movsl
movsb
cld
dec
sbb
adc
adc
mov
inc
xor
dec
or
aaa
xor
lret
inc
push
or
cmpsb
jno
lock
add
push
ljmp
popa
idivb
addb
lock
and
pop
inc
add
cmp
inc
movl
test
and
push
add
dec
call
sbb
nop
sbbl
xorb
nop
notb
pusha
stc
jno
rcrl
add
test
fstl
icebp
add
es
andb
cld
loop
xor
scas
adc
push
test
addl
inc
ljmp
mov
or
xchg
loop
shrb
ljmp
lcall
push
xchg
sbb
add
and
and
cmp
pop
rorb
dec
addb
mov
enter
cmp
aaa
inc
inc
and
add
xor
ja
mov
push
lds
add
out
roll
mov
sbb
mov
cwtl
add
pop
mov
lock
add
lahf
push
sub
xchg
cwtl
or
dec
xchg
xchg
inc
ja
push
jmp
adc
and
aas
push
call
or
sbb
aam
mov
loope
add
aam
subl
testl
add
lret
pop
enter
jmp
xlat
inc
mov
xor
add
cs
popf
add
lret
and
jmp
push
and
cmpsl
stos
test
fwait
andl
insl
lods
mov
inc
push
inc
sbb
inc
jecxz
movsb
rcrb
or
or
adc
cmp
push
mov
jl
add
cmp
ja
addr16
popa
loopne
lahf
adc
das
add
mov
adc
pop
je
aaa
sub
sub
aas
or
jp
mov
mov
rolb
or
cwtl
sub
test
fsubs
call
pusha
std
addl
add
push
pop
cmp
into
sbb
sbbl
add
pop
and
and
xchg
sbb
stc
pop
push
add
sahf
jle
add
cmp
clc
push
mov
leave
jno
sbb
mov
mov
mov
je
jl
mov
cmp
stc
loopne
push
testl
push
fistl
sub
inc
pop
add
sub
leave
xor
les
add
jbe
jae
aaa
inc
jb
pop
xor
subl
iret
push
push
adc
cmp
push
orb
add
cmc
mov
je
adc
pushf
add
and
push
ret
dec
cmp
in
mov
andl
sub
or
cmp
cld
pop
aas
insb
add
adc
in
pusha
jg
push
or
sub
inc
cld
addr16
inc
mov
xchg
xchg
jl,pn
adc
inc
xchg
aas
dec
andb
adc
rcrb
cmpb
int3
adc
dec
ss
pushf
addb
fs
sti
add
or
imul
inc
push
pop
test
add
cmpsl
sbb
fs
roll
rol
mov
ljmp
cmp
rcrb
popl
inc
dec
inc
mov
pusha
shr
push
mov
and
mov
jno
jb
repnz
push
icebp
push
fwait
inc
pop
sub
or
scas
ljmp
fimull
add
shll
push
mov
xor
sbb
pop
popf
cli
or
lcall
push
jns
outsl
xor
in
mov
inc
adc
faddl
adc
enter
shll
ja
or
ror
dec
fs
push
aaa
movsb
sbb
cmp
adc
daa
xchg
ret
xor
test
cs
hlt
mov
adc
das
xor
dec
mov
or
loope
mov
pop
xchg
pop
jns
enter
or
insb
mov
mov
jmp
inc
pushf
jnp
cmp
add
orb
jo
sbb
adc
push
in
add
rclb
imul
jo
mov
add
xor
inc
mov
add
push
xchg
pop
stc
fmuls
dec
iret
mov
test
adc
cmc
gs
call
mov
cs
call
subl
popa
cmp
nop
fwait
dec
or
mov
and
int3
js
scas
add
push
in
std
inc
loopne
loop
add
dec
mov
push
xchg
adc
add
inc
jecxz
adc
shlb
ja
rorl
leave
cmc
and
in
jbe
add
testl
pusha
add
aas
mov
dec
shrb
cwtl
rcl
push
pop
mov
test
push
fcomip
dec
add
scas
in
sbb
push
js
or
xlat
add
in
es
dec
add
fwait
xor
push
sbb
rcpps
fadd
xor
xor
inc
in
cmpb
push
jne
add
fs
inc
sbb
dec
insl
cmp
pop
cld
push
jmp
xchg
add
push
jno
leave
add
std
sub
add
imul
jno
loopne
aaa
adc
or
shrb
push
add
imul
test
jnp
mov
pop
in
sbb
test
pop
push
cmpb
daa
sar
add
flds
hlt
ds
push
adcb
xor
mov
scas
nop
xchg
andb
xchg
push
push
jl
mov
cwtl
sarb
sbbb
pusha
add
inc
outsl
inc
or
int3
add
fs
shr
ret
pusha
ret
pusha
rol
add
arpl
mov
jno
add
test
jecxz
cmp
subb
test
test
je
sbb
sub
mov
out
sub
sub
adc
lods
in
bound
pop
pop
aam
notb
push
int
cmpsl
xchg
test
test
add
jne
mulb
xchg
mov
leave
sub
xchg
orb
xor
mov
xchg
popa
add
add
xchg
cmpsb
inc
aam
xchg
or
inc
int
adc
push
mov
test
and
divl
jb
negb
xor
mov
jmp
in
sbbl
xchg
jl
add
and
insl
js
jge
adc
push
push
sub
pop
xchg
add
lret
jle
loop
push
add
gs
xor
lcall
fadds
pop
sarl
push
lret
dec
fs
in
sub
inc
mov
fiadds
mov
and
jle
rcrb
push
loopne
leave
push
jo
mov
sbb
xchg
cwtl
adc
loopne
int3
fiadds
cltd
sbb
lock
adc
int
push
mov
test
nop
or
xor
int
jae
and
mov
lods
sub
xor
mov
add
ja
test
mov
mov
popf
xor
or
insb
add
ret
outsb
inc
mov
add
std
inc
mov
adc
cmp
or
adc
jle
inc
mov
les
je
sbbl
sub
mov
pop
and
adc
jp
sub
mov
mov
mov
mov
mov
cmp
in
and
inc
sub
in
add
jnp
faddl
mov
pusha
sub
sbb
dec
roll
mov
mov
dec
cltd
adc
push
add
adc
popa
inc
push
test
andnps
mov
js
mov
mov
sub
sub
in
push
add
adc
dec
jo
lock
out
add
cmp
cld
je
sub
daa
cmp
repz
pop
and
jb
add
or
in
leave
jns
cmpb
in
movb
mov
test
mov
add
scas
leave
adc
fld1
xor
mov
popa
cltd
adc
wrmsr
mov
stos
pop
hlt
pop
add
mov
mov
add
les
lds
leave
pusha
jmp
cmpsl
add
push
push
dec
add
pusha
test
push
add
int
lea
repz
push
cld
sbb
mov
add
aam
out
out
push
push
sbb
inc
enter
in
dec
scas
aaa
add
loope
mov
hlt
mul
sbb
flds
xlat
sbb
clc
mov
push
jg
fistl
mov
jecxz
std
sub
stos
cmp
mov
xor
repz
mov
pusha
addr16
lods
iret
imul
mov
cmpsb
jge
jp
add
rorl
addr16
xor
inc
add
add
jle
sarb
cmp
mov
jnp
mov
add
pop
fnstenv
test
push
rorb
jge
shr
mov
in
and
popf
cwtl
fildl
lret
cmp
mov
xor
push
paddb
push
cmp
jns
add
test
pop
jg
cmp
cli
fmulp
pusha
xchg
push
repz
add
cmp
pusha
cld
and
cli
mov
mov
xor
aaa
xchg
loopne
pusha
fstpl
jae
es
fisubs
inc
sbb
dec
mov
mov
roll
rorb
mov
aam
test
mov
aas
cmc
add
ss
add
in
dec
test
hlt
shlb
jbe
add
fimull
mov
ss
cmpsl
enter
pop
mov
dec
add
dec
addb
mov
ret
pusha
cmp
sbb
add
mov
dec
add
loopne
push
xor
sbb
aas
mov
add
js
bound
inc
sti
sbb
stos
add
movsl
mov
sar
subl
pop
lret
adc
and
inc
adc
mov
add
pop
push
push
gs
xor
dec
call
push
mov
adc
add
mov
cmpsb
add
mov
loopne
in
rolb
jb
or
sbbb
pusha
call
rolb
add
jp
add
mov
and
ror
ja
loop
dec
adcl
fsubs
pusha
iret
pcmpgtd
xor
rcr
dec
sbb
enter
push
movsl
jno
fldcw
aam
xchg
push
xor
rorb
aad
insb
and
into
shrb
mov
lret
ljmp
add
movsl
std
clc
add
jecxz
lret
movsb
or
add
pop
rclb
insb
cltd
push
sbb
inc
scas
pushf
aas
or
aad
lahf
sub
popf
out
sbb
ds
jb
fcoms
lcall
mov
pusha
sub
add
mov
add
push
loopne
xchg
sub
sti
push
add
lcall
jb
imul
add
mov
icebp
sbb
xor
or
or
pop
adc
push
test
pop
aaa
push
mov
jb
roll
scas
pop
cmp
jne
cmp
cmp
sbb
js
test
pop
sbb
lcall
into
jl
std
xchg
sbb
nop
imul
lret
mov
in
js
add
into
push
inc
jmp
jp
add
add
lret
add
add
mov
add
shll
clc
mov
out
or
mov
dec
scas
cmp
stos
dec
pop
dec
clc
cmpsl
js
push
rclb
addr16
sbb
int
hlt
test
cmp
adc
sub
pop
into
xorb
jo
mov
push
sub
mov
dec
stc
jge
into
test
fcoms
clc
cmp
in
xor
and
adc
add
pop
adc
test
idivl
add
push
xchg
mov
aaa
nop
add
into
in
jbe
mov
jno
inc
cli
pop
pushf
xchg
sti
jg
mov
mov
iret
popf
add
out
add
test
mov
push
popf
faddp
pop
inc
push
xor
jle
incb
cmp
sbbl
jge
jge
xor
ret
and
rcr
lret
cmp
jns
push
leave
cmp
xchg
mov
mov
add
xlat
andl
pop
dec
push
fadds
push
mov
popl
push
ficomps
adc
sbb
mov
je
jnp
repnz
and
cwtl
popa
jb
add
pop
xlat
dec
sbb
fwait
nop
mov
mov
outsb
add
jno
dec
mov
xor
pusha
pushf
mov
and
sbbb
aas
sbb
adc
fwait
pop
mov
mov
mov
lret
clc
add
loopne
mov
jge
and
add
jb
push
enter
add
cmpl
clc
daa
icebp
cmc
setae
std
and
mov
pop
ljmp
xchg
dec
bound
lock
test
sub
scas
std
xor
mov
jno
pop
pushf
add
and
or
ja
add
xor
sub
jle
sub
mov
push
mov
xor
inc
cltd
fs
inc
mov
js
pop
or
addr16
xchg
rcpps
and
inc
mov
xchg
add
pop
nop
pop
ds
out
outsl
cld
xchg
test
and
sub
inc
mov
pushf
inc
mov
mov
fiaddl
jmp
imul
cli
and
test
dec
sbb
add
dec
pop
xchg
lret
add
lea
frstor
push
btr
cld
add
nop
sub
jmp
pop
or
ljmp
or
xchg
dec
xchg
mov
add
sti
add
dec
adc
mov
mov
add
cmpsl
sub
add
ss
dec
xchg
fldl
movsb
jno
mov
hlt
dec
lods
add
test
addr16
add
js
aas
imul
jbe
sbb
mov
jecxz
pop
adc
push
popa
test
mov
xchg
xlat
jo,pn
out
cmp
push
cmp
xchg
addb
and
in
add
int3
sbb
mov
xor
dec
imul
insb
cmp
mov
pop
imul
add
cld
lahf
jmp
pop
mov
pusha
dec
adc
sbb
add
mov
fcomp
rclb
or
mov
xchg
inc
add
dec
into
aas
loopne
cmpsl
sbb
test
add
rol
jecxz
aad
dec
les
sbb
ljmp
fs
sbb
xor
js
sbbb
scas
pop
add
cmp
je
sbbb
or
sbb
rolb
inc
fbld
data16
sbb
fnsave
push
test
dec
jo
mov
or
lret
inc
xchg
and
rcrb
cld
sub
push
dec
add
outsl
pop
inc
orl
das
add
roll
mov
xor
movzwl
add
stos
mov
mov
dec
or
xor
insb
sysexit
jl
push
mov
ret
xchg
stos
and
stc
add
sbbb
adc
push
sub
push
inc
movsl
push
push
inc
rorb
xchg
sti
adcl
sbb
and
cmpsl
cmp
dec
mov
add
shlb
shlb
adc
add
cld
idivb
std
fildl
fisubrl
arpl
push
sti
insb
push
sbb
test
mov
jle
fwait
rolb
dec
and
add
sbb
icebp
imul
je
jb
loope
adc
js
sub
dec
cmp
or
pop
fisttpl
add
inc
lock
in
sbb
mov
xor
sbb
xchg
or
outsb
add
sahf
loopne
add
mov
jne
mov
or
fwait
cmp
cmp
inc
sub
mov
in
add
and
inc
cmpb
fbstp
jg
outsl
xchg
or
adc
add
xchg
push
fcoms
jge
shl
mov
fimull
sub
repz
mov
cmp
rorl
cwtl
mov
hlt
je
and
sbb
arpl
inc
mov
repnz
xor
or
push
loopne
movsb
sbb
ljmp
add
sbb
in
mov
enter
push
jecxz
add
add
iret
add
hlt
data16
xchg
sub
and
outsl
scas
stos
jne
add
pop
cwtl
inc
add
and
add
or
pop
mov
jns
xchg
popf
loope
movb
call
sbb
mov
test
sarb
dec
cmp
jmp
sub
shl
and
xchg
in
lahf
scas
add
divl
roll
int3
push
sahf
cmpsb
arpl
sub
lds
in
add
adc
xchg
dec
out
jecxz
nop
mov
sbb
add
add
into
test
inc
jns
add
mov
repz
add
dec
xchg
inc
cwtl
shl
sbb
icebp
xchg
dec
pushf
and
lods
xor
add
inc
fists
jae
inc
faddl
test
mov
cmp
and
sub
loopne
inc
bound
sub
add
mov
rcrb
push
xor
inc
sbb
add
lods
jp
xchg
push
aad
add
stc
inc
pop
and
mov
mov
lock
cld
add
outsb
ja
aaa
fildl
add
fs
sbb
out
mov
clc
cmc
add
jns
rolb
ja
js
sbb
xchg
movsb
call
or
popf
jno
inc
and
aam
add
inc
repz
or
insb
pop
lds
pop
lahf
cld
sbb
fucomip
xor
adc
rol
sbb
cmpl
and
in
sub
cmp
pop
jae
sbb
fstp
sub
and
or
pop
push
jmp
pushf
and
jle
or
or
adc
popa
into
idivb
daa
rol
xchg
nop
mov
dec
out
pop
add
sbb
sahf
dec
add
scas
lods
mov
xchg
sbb
dec
add
bound
push
sbb
mov
dec
dec
inc
inc
mov
and
mov
arpl
nop
and
mull
enter
sub
lret
sarl
adc
je
add
ja
shrb
jo
daa
lret
decb
in
data16
add
pop
stos
mov
loop
andl
push
rolb
insl
pop
test
add
pop
je
in
idivb
add
popf
icebp
test
scas
xor
sbb
adc
ljmp
or
mov
negb
push
mov
xchg
pop
jl
sbb
arpl
das
push
iret
sub
and
lods
roll
mov
jg
mov
push
test
imul
icebp
aaa
std
sub
push
push
pop
xor
mov
jl
add
push
imul
test
sti
in
lret
sbbb
pop
pop
fidivl
dec
dec
stos
add
fbstp
cmc
jnp
dec
shrb
xchg
insl
mov
lcall
mov
and
fs
push
mov
enter
aad
repz
jae
popa
fnsave
iret
add
addr16
fwait
xchg
adc
jo
lcall
mov
or
scas
rcr
add
inc
mov
xorb
dec
xorl
push
jo
mov
mov
and
mov
cwtl
jl
jo
push
dec
mov
mov
insb
jbe
adc
mov
add
lcall
sbb
and
adc
add
add
aaa
xor
aad
rol
add
mov
mov
add
jne
and
pushf
in
outsb
shrb
nop
test
scas
shl
jp
call
sbb
cmp
pop
fs
psubsb
add
out
jbe
mov
lock
push
mov
cmc
and
and
pop
rorb
pusha
dec
adc
add
enter
sub
mov
dec
add
adc
inc
inc
scas
leave
pop
add
repnz
sbb
cmp
dec
popa
add
testl
hlt
sub
in
lret
mov
repz
inc
mov
push
add
shrb
in
in
or
cmc
enter
add
shll
in
add
xor
je
cmp
add
scas
frstor
rolb
push
add
sbb
adcl
mov
shll
pop
pop
and
iret
pop
push
lock
stc
js
add
sti
in
popa
dec
lock
shlb
mov
or
push
jno
lahf
pop
add
mov
std
and
xor
pop
stos
int
je
sbb
in
js
adc
add
jecxz
cwtl
mov
and
imul
cli
sub
mov
add
popa
add
loopne
pusha
add
fstpl
insb
sub
movl
add
cmpsb
jmp
out
loopne
add
adc
mov
sbb
cmp
in
lea
or
jae
push
jg
stos
shlb
mov
adc
aas
add
mov
call
imul
inc
mov
ds
add
iret
push
test
shlb
push
sbb
adc
pop
jbe
mov
and
sarb
ds
inc
cmpsb
orl
xchg
inc
adc
add
hlt
outsl
jge
aad
fmuls
scas
cmp
fldl
nop
pop
pushf
repz
sub
arpl
and
mov
sbb
cmp
cld
push
pop
mov
adc
cltd
sti
jne
inc
lret
dec
jns
cld
add
lcall
cmpsb
push
stos
inc
dec
add
dec
sbb
jge
add
sti
mov
xchg
mov
iret
nop
les
push
jo,pt
pop
xchg
push
add
inc
dec
lds
mov
es
sbb
inc
pop
or
mov
pushf
aad
mov
and
ds
dec
sbbl
pop
inc
call
pop
adc
push
xor
je
jae
mov
clc
filds
outsl
push
inc
inc
inc
gs
addl
xchg
mov
sbb
or
and
arpl
stc
add
movsl
fnsave
mov
sti
and
sarb
dec
dec
ficoms
jp
lahf
out
push
pop
hlt
cmp
add
inc
jecxz
vmwrite
xchg
shrb
or
mov
add
mov
lahf
lods
std
or
push
mov
sti
andl
das
arpl
sub
mov
and
cmp
roll
mov
jb
add
test
push
cli
add
repz
and
inc
mov
pusha
and
jbe
add
xor
mov
jl
dec
fildl
add
sti
xor
xor
add
jle
mov
inc
insb
push
jge
adcb
stos
jecxz
jbe
out
sbb
xor
add
sub
addb
outsl
pushl
xlat
push
sub
cmp
sbb
dec
sbb
testb
test
sti
add
in
jnp
in
shlb
jl
out
addb
negl
shrl
stos
xlat
ds
sbb
push
jb
ret
les
add
xchg
cmpsb
xchg
mov
inc
push
xor
movb
lret
and
add
je
faddl
adc
repnz
mov
adc
mov
sub
mov
leave
mov
add
fcom
ret
sub
out
sbb
mov
cld
test
jns
loopne
adc
add
mov
sarb
adc
stos
stos
xorb
das
pop
jl
cmp
inc
add
adc
dec
inc
add
jbe
inc
aaa
push
and
faddl
test
into
cs
add
ljmp
adcb
pop
imul
xor
daa
jl
add
and
jp
lock
push
lods
push
add
xor
int
add
cmp
stos
jae
add
lret
jb
add
jo
dec
pop
push
or
and
mov
pop
push
jmp
scas
jb
icebp
or
in
ja
xor
daa
mov
insb
cltd
and
mov
je
mov
sbb
mov
add
fistpl
xor
add
std
or
popl
popa
mov
push
lcall
aad
add
imul
lret
lock
or
add
dec
popf
adc
add
mov
mov
xchg
or
xchg
xchg
fadds
outsb
jmp
and
popf
daa
scas
xlat
add
push
cmc
inc
repz
add
inc
iret
mov
jb
pop
add
cld
fdivs
pop
nop
jo
test
aaa
icebp
jne
cmpsl
jecxz
cmpsl
fildll
call
jmp
fdivs
pop
mov
icebp
fidivrl
add
xchg
mov
add
int
sti
add
sarl
or
scas
cmc
test
sbbb
push
and
daa
cmp
mov
jns
mov
or
xchg
aaa
movsb
add
sbb
lret
ret
aad
nopl
or
add
add
daa
test
or
xchg
mov
push
adc
cmpsb
in
sbb
jne
and
ret
xchg
push
bound
rclb
or
rolb
enter
cmp
mov
fidivs
and
pop
repz
sbb
push
add
push
shll
jnp
frstor
pop
jl
leave
into
shlb
sarl
jne
mov
imul
mov
movsb
add
lods
mov
xchg
mov
dec
cli
sub
je
enter
mov
mov
mov
push
sbb
add
and
add
ficompl
aas
add
or
dec
pusha
push
push
or
inc
add
out
mov
add
rcll
push
mov
add
cli
add
xchg
test
cmp
add
jecxz
xchg
pop
mov
jbe
adc
orl
mov
and
xor
pop
cltd
lret
movups
jmp
dec
lahf
add
jl
inc
dec
rcll
fsubs
orl
xor
add
out
test
pop
fwait
sahf
add
lods
push
add
aaa
mov
je
push
lret
add
movsl
pop
es
fsubrl
inc
add
fs
sbb
fcomps
nop
loopne
stc
js
inc
mov
mov
add
fldcw
xchg
mov
add
mov
outsl
in
adc
test
mov
xchg
jg
add
sub
inc
add
testb
hlt
or
sub
pusha
addr16
sub
fcomps
inc
mov
jle
mov
xor
jbe
cmp
fwait
insl
jae
or
lds
add
jb
das
mov
aam
push
inc
or
cmp
dec
mov
and
imul
inc
add
xchg
push
jo
lock
insb
inc
add
add
cmp
mov
loop
stos
or
add
mov
add
fisubs
adc
cltd
jge
add
loop
testl
mov
mov
cmpb
dec
iret
in
push
add
cli
mov
mov
imul
loope
jnp
pop
scas
aas
add
fs
cld
pop
mov
dec
or
and
cmpsb
ret
xchg
jl
notl
loop
sub
repnz
out
movsl
add
test
dec
stos
pop
mov
lret
enter
add
insl
cld
jnp
stc
ljmp
test
fisttpll
push
add
mov
inc
cmp
mov
shl
xchg
add
cmc
pop
jp
add
add
mov
xor
or
pop
push
mov
add
mov
je
add
fucomp
js
data16
imul
sub
leave
cwtl
or
xor
lret
icebp
mov
add
xor
pop
jns
add
adc
cmp
mov
mov
xchg
mov
xchg
mov
add
lret
repnz
lahf
cli
add
cmp
adc
out
into
in
daa
pop
or
in
loopne
pop
xchg
add
dec
inc
jl,pn
add
pop
mov
add
rcrl
sub
popf
pop
cld
fsts
adc
dec
jecxz,pn
inc
sbb
popf
pop
lds
loopne
std
loopne
cltd
ret
and
lahf
cmp
jno
add
mov
add
cmp
and
scas
jno
or
sbb
out
andl
rolb
push
testb
xchg
mov
pop
int3
pop
or
and
push
mulb
test
ret
std
mov
repnz
cmp
shll
inc
or
repnz
fimull
pusha
jmp
pusha
jg
push
into
mov
and
cmp
lahf
popf
sub
mov
pop
lock
out
call
xchg
mov
sbb
dec
pop
xor
lahf
les
std
cwtl
fnstsw
pop
imul
test
or
or
in
pop
mov
sub
fcompl
mov
mov
in
shl
inc
or
subb
sbb
out
adc
push
out
sub
pop
cmp
xlat
sti
mov
bound
lahf
test
inc
addl
std
ja
push
mov
daa
lds
in
fisubs
and
inc
je
dec
push
paddb
movsl
orb
cmp
outsb
pop
test
sbb
or
aas
adc
out
lods
xor
add
sbb
cmpsl
and
in
inc
movsb
cld
movsl
sub
pop
lret
ret
nop
push
push
ds
arpl
sub
ds
sbbb
scas
jnp
pop
fnsave
fsubrl
cmpsl
fdivl
lcall
adc
repnz
fs
and
lds
jns
addr16
fsubrl
xorb
repz
idivb
xchg
dec
add
dec
loop
push
cmp
fbld
add
add
pop
add
sub
lods
inc
inc
scas
jecxz
dec
rcll
adc
daa
add
fiadds
and
outsl
enter
out
sub
cmp
cmp
xor
sbb
jo
lods
dec
pop
mov
pop
pavgw
mov
mov
es
mov
rcr
jb
sbbb
push
loopne
dec
xchg
push
mov
shlb
cmc
es
addl
insb
inc
add
sub
fimuls
add
cmp
stc
cmpl
jae
lret
scas
jp
pushf
mov
scas
bound
mov
mov
and
add
scas
cmp
push
sbb
je
sub
subl
xor
fs
adc
and
xlat
imul
lock
insl
add
popa
pop
inc
lret
stc
xor
sbb
rcl
sbb
add
mov
out
shrl
cmc
dec
es
mov
add
fbld
call
fsubrs
jno
sbb
inc
jg
mov
sbb
cmp
xchg
sbb
arpl
mov
mov
add
xor
and
out
mov
add
outsb
in
xchg
out
mov
or
cmc
pop
jecxz
testl
fs
push
lahf
and
lret
cmp
dec
mov
adc
inc
dec
or
bnd
mov
and
repnz
jns
xchg
jmp
addb
fsubl
mov
mov
mov
push
rol
mov
adc
lock
jb
repz
in
outsl
cmp
shrb
lea
ret
mov
add
lods
push
hlt
push
or
mov
add
cmp
or
pop
fadds
adc
sti
jp
sbb
clc
push
xchg
jge
xchg
lock
jmp
inc
loopne
xchg
add
or
push
scas
cmc
push
repz
adc
sbb
jb
xor
cli
repnz
pop
pop
gs
or
dec
jb
repnz
xor
pop
add
add
sbb
mov
add
scas
lods
dec
pushf
and
xchg
in
fadd
enter
mov
in
add
lods
jno
rcrb
mov
lea
movsl
orb
aam
fmul
lods
adc
addb
lock
mov
push
sti
cmp
stos
add
int3
lods
xchg
cmp
pop
xchg
sbb
dec
wbinvd
in
je
out
in
in
pusha
lods
adcl
js
stos
add
push
jne
dec
add
or
xchg
call
enter
jmp
enter
test
mov
or
push
fdivl
pushf
cmc
jecxz
lcall
sbb
xor
cltd
push
lods
push
es
or
and
movsb
leave
sarl
lahf
incl
push
pusha
shlb
lea
je
test
add
rorb
pop
cmp
cmp
cmpsb
lock
jge
add
lea
outsb
in
cmpsl
dec
lock
jae
fisttpll
cld
test
fildl
mov
in
push
nop
test
hlt
shrb
and
divb
je
pop
mov
test
mov
or
xchg
inc
xchg
hlt
sub
mov
cmpsb
jno
or
fld
repz
sub
and
add
jmp
movsb
test
xchg
and
adc
out
mov
and
xchg
ret
xchg
cmp
cwtl
add
in
mov
pop
cmpsb
insl
mov
cli
pushf
xor
iret
lock
loope
fsubrs
jns
insl
in
mov
loope
add
lock
rorb
jbe
cwtl
test
or
xchg
add
pop
stos
cmp
hlt
rcl
in
inc
inc
and
mov
out
loope
pop
and
in
les
popa
ss
cmp
lods
pop
add
aas
outsb
mov
testl
mov
movsb
xor
adc
adc
jecxz
fisubl
inc
repnz
sbb
fiadds
or
loop
mov
push
push
xchg
fidivrl
or
dec
dec
cwtl
cmp
nop
je
push
inc
pusha
add
fiadds
loopne
add
dec
sbb
cs
or
inc
add
jae
push
int3
loopne
add
daa
scas
das
xchg
push
movsl
aam
lds
mov
lcall
into
push
dec
movsb
pop
rolb
addl
in
mov
rolb
pushf
movsl
addr16
xor
jecxz
add
cmp
rclb
jne
push
dec
add
push
cli
mov
add
sub
mov
mov
push
xorb
add
in
inc
hlt
add
lea
lods
inc
xor
adc
add
xor
or
mov
mov
jle
jno
in
lret
cld
pusha
sbb
pop
mov
shr
int3
cmp
loope
mov
repnz
enter
lcall
or
shlb
adc
rcrl
scas
sub
cmp
pushf
add
sub
fisubs
in
les
xchg
sub
push
dec
jmp
adc
xor
scas
fistpll
jge
mov
or
xchg
and
loop
add
mov
mov
mov
pusha
out
dec
adc
icebp
mov
xchg
jl
sub
faddp
and
inc
add
lods
pop
hlt
stc
or
mov
out
push
mov
and
es
cmp
cltd
rep
aas
jl
testl
cmc
dec
mov
pop
mov
cmp
xor
insb
xchg
pusha
frstor
clc
stc
xchg
movsb
add
or
push
sub
mov
repz
stos
mov
jns
sbb
fstpt
aad
add
repz
hlt
add
adcb
out
push
xchg
adc
subl
filds
and
lods
mov
aaa
push
divl
adc
or
test
add
lods
lahf
je
in
sub
nop
je
insb
sbb
ljmp
xchg
in
cmp
jp
pusha
out
lods
scas
or
cmp
testl
and
add
lods
loope
sub
add
cmp
pop
push
mov
fmuls
mov
inc
push
sbb
pop
or
hlt
in
inc
movsb
or
pop
sub
imul
mov
cmpsl
popl
pop
mov
and
cli
add
dec
add
lods
jp
sub
out
ret
mov
movsb
add
or
sub
iret
dec
call
add
add
fs
popl
call
inc
stos
andps
mov
shll
shrl
mov
add
hlt
sbb
add
orb
adcb
inc
fcompl
or
mov
jne
add
jmp
lret
lret
mov
sarl
test
jg
cmpsl
inc
repz
lods
sub
add
add
test
fildll
loop
and
je
mov
dec
cltd
rclb
push
push
insb
add
arpl
inc
or
xchg
mov
add
orb
int3
add
imul
jne
insl
adc
loop
cmpsl
movsb
in
mov
aas
cs
inc
nop
xlat
add
stos
mov
push
add
pusha
or
test
lods
inc
jmp
test
jns
add
adc
nop
inc
xor
add
repz
or
and
xor
xchg
inc
sub
add
jecxz
aam
lods
push
jl
fimuls
sbb
ljmp
mov
push
pop
adc
and
add
xor
push
sbb
clc
add
cld
imul
aas
jg
cwtl
adc
add
push
lods
stc
shlb
test
xchg
mov
or
popf
inc
adc
iret
das
pusha
and
adcb
mov
and
popa
xchg
negb
fmull
rcrb
push
cmc
in
adc
sub
dec
fcompl
test
sahf
inc
add
ljmp
add
std
sbb
push
andb
xchg
fimuls
int
sbb
jbe
or
pop
popf
add
aas
movl
mov
cwtl
pop
lods
mov
pusha
sti
addl
adcb
mov
arpl
je
dec
sub
mov
sbb
aam
icebp
add
or
cwtl
cmp
in
fs
mov
add
and
and
ret
sub
int3
test
sahf
xchg
pushf
popf
cmp
arpl
adc
sub
test
pop
mov
mov
sbb
add
loopne
add
pop
dec
outsb
dec
add
mov
cwtl
and
mov
fcomps
daa
sbb
popa
je
cld
sub
adc
nop
cld
int3
mov
gs
xchg
xchg
addb
sti
hlt
sahf
pop
leave
add
dec
jmp
push
mov
mov
adc
inc
mov
orb
pop
pop
inc
cmpps
loopne
test
inc
inc
cmpsb
jle
mov
stos
dec
fmuls
add
pop
adc
push
pop
dec
jmp
and
nop
mov
in
sbb
in
imul
movsl
stos
ljmp
pop
push
repz
add
ds
dec
out
mov
push
flds
pop
and
dec
mov
inc
jl
jle
lods
mov
cmp
and
enter
xchg
out
orl
xor
or
inc
mov
lret
fldenv
orl
rcrl
fwait
mov
mov
pop
mov
and
jo
hlt
loopne
add
in
dec
cs
jno
cmc
lret
adc
cmp
xchg
insl
ljmp
clc
push
scas
mov
outsb
sbb
inc
mov
add
sub
cmp
or
add
mov
inc
fisubl
add
mov
dec
pop
jle,pn
fs
xor
add
hlt
arpl
lock
scas
add
insl
je
xchg
mov
cwtl
sbb
popa
in
loopne
adc
dec
repnz
dec
sub
outsb
shlb
sbbb
out
add
in
rolb
sbb
xchg
xchg
xor
sbb
pop
xor
frstor
and
repnz
sub
pop
adc
lds
dec
dec
pop
icebp
arpl
mov
lods
add
sbb
scas
ja
popa
ret
nop
adc
jno
scas
add
dec
inc
xchg
sbb
xor
mov
daa
lods
in
sub
jb
mov
jae
in
xor
pop
repnz
mov
dec
call
inc
in
ret
mov
cmpl
mov
xor
movsl
js
mov
or
push
filds
mov
mov
push
add
dec
xchg
bound
inc
stos
pusha
pop
jns
add
jmp
in
push
clc
cld
daa
imul
mov
shl
mov
in
sub
dec
sbb
iret
inc
fwait
jo
add
in
add
mov
push
cmpl
roll
cmp
and
inc
inc
mov
fdivrl
notl
xchg
pop
out
add
shrb
leave
sbb
out
add
jg
addl
adc
inc
jno
inc
lock
out
and
incb
hlt
sbb
mov
inc
sbb
push
or
fisubrs
mov
add
dec
mov
iret
jno
add
es
sub
or
and
mov
in
lods
cld
and
and
jo
adc
inc
xor
dec
push
jb
add
orb
das
jnp
jo
xor
notb
inc
push
sub
cmp
movsb
insl
int
mov
xor
push
sbb
or
pusha
fs
mov
inc
push
outsb
repz
sub
inc
call
push
scas
cmc
jne
mov
mov
inc
les
xchg
dec
sbb
jl
ljmp
add
push
sbb
jle
shrl
mov
adc
or
inc
cmp
pop
out
add
popa
neg
push
xchg
inc
in
test
jge,pn
out
jb
cwtl
mov
std
and
xor
into
adc
mov
cmc
mov
add
test
pop
lcall
xchg
dec
insl
add
loope
je
call
pop
or
popa
push
or
ds
dec
lret
and
out
repz
jne
dec
inc
je
jle
xchg
loope
add
jae,pn
std
loopne
call
les
or
and
xchg
enter
imul
sbb
xor
imul
js
mov
dec
fisttpl
cli
dec
cmpl
fadds
test
mov
pushf
jmp
out
add
jmp
sub
nop
nop
sub
xchg
cltd
sbb
test
aam
add
cld
jg
add
pop
pushf
cmpl
rcl
and
jmp
push
test
lods
cmp
loopne
popa
fwait
jl
or
mov
push
pop
cmp
sbb
or
fisttpl
adc
mov
push
nop
je
xor
ret
je
push
pop
fadds
ret
dec
push
adc
push
les
icebp
xor
add
sub
enter
dec
test
xchg
in
or
sub
je
lahf
pop
cmp
loope
test
inc
sbb
stos
nop
xlat
fsubl
icebp
fsub
jbe
adc
sahf
stc
inc
mov
mov
cmp
xchg
mov
aam
in
add
ds
sti
fldl
rolb
les
cwtl
pop
aam
and
and
sbb
movsb
cmp
out
push
adc
loop
repnz
xor
push
adc
add
dec
andl
cmp
fcoms
push
fcompl
into
lahf
data16
mov
or
jns
int3
push
movb
shr
mov
add
cmp
jle
pop
jmp
adc
inc
cmc
add
hlt
mov
lock
sub
add
push
xlat
push
ss
dec
and
sub
cld
and
xor
call
aam
sbb
ret
fisubs
pop
lahf
adc
bound
testb
loopne
imul
stc
push
add
xchg
sbb
mov
push
inc
ffreep
and
xor
mov
movsb
std
mov
pushf
sub
add
popf
pushf
cli
and
in
fadd
mov
pop
cmc
add
daa
mov
mov
mov
insb
subb
mov
push
mov
or
dec
les
loope
xchg
cmp
add
pop
cmp
dec
xor
fldenv
lret
add
push
dec
and
std
mov
ret
sarb
push
mov
lret
cs
hlt
add
or
les
pushf
aaa
lahf
int
jmp
add
jp
scas
dec
dec
pop
call
dec
and
sbb
xchg
dec
adc
mov
das
add
sbb
mov
sbb
clc
mov
adc
xchg
xor
xchg
xchg
mov
es
add
leave
test
add
clc
out
mov
sbb
xlat
xor
xorb
pop
xor
push
mov
adc
cltd
add
clc
into
dec
rcr
push
imul
add
arpl
add
mov
jno
insb
shll
push
jnp
nop
subl
mov
lahf
rolb
cmpsb
push
inc
jae
mov
cmp
add
js
movsb
mov
pop
shlb
cmp
mov
xor
imul
inc
pusha
ja
dec
mov
add
push
sub
stos
mov
xchg
icebp
je
das
cld
and
lods
cli
add
inc
mov
add
out
rorb
jecxz
icebp
add
xchg
and
pop
mov
hlt
addb
dec
add
scas
jbe
test
lahf
push
outsb
iret
std
or
mov
and
adc
test
jbe
mov
cmp
out
dec
inc
lods
stc
in
jns
sbb
add
jbe
sub
and
mov
xlat
mov
adc
dec
xchg
in
and
aad
add
push
xor
test
shll
xchg
test
mov
xor
movsb
cwtl
ret
and
aas
mov
inc
clc
insb
mov
fs
stos
rorb
jp
rol
inc
loop
jge
jae
or
add
cmpsb
lahf
fildll
xchg
sti
add
lods
push
or
enter
push
sub
sarb
cmp
sti
and
mov
and
hlt
neg
outsb
or
lods
cmp
jmp
xchg
and
add
sahf
fadd
jmp
nop
pop
jmp
pusha
jo
enter
mov
adc
inc
je
pop
push
add
sbb
sub
pop
mov
xor
dec
popf
push
adc
mov
lock
jbe
mov
cmp
jb
aaa
mov
imul
add
dec
add
fisubrs
mov
arpl
cmpxchg
das
push
shll
push
add
sub
cmp
pop
xor
or
cmpsl
addl
sbb
mov
mov
add
xchg
loop
das
inc
and
int
loopne
roll
out
jp
gs
jp
rorl
pop
mov
out
inc
jecxz
ret
insl
and
sbb
enter
das
hlt
pop
push
inc
fistpll
inc
fsub
jne
mov
out
xlat
mov
add
push
outsl
or
popa
scas
add
sbb
sub
sub
adc
xor
cmpsl
and
fisttpll
add
daa
sarl
mov
dec
fldenv
or
sub
mov
loope
dec
shlb
mov
js
jmp
lea
add
ret
clc
mov
jns
gs
hlt
call
jg
and
pop
jae
push
leave
fwait
push
mov
mov
mov
push
cli
and
add
inc
mov
sbb
add
mov
dec
mulb
mov
jl
mov
jmp
jg
nop
out
and
orb
mov
add
cmp
in
fadd
push
lret
add
xchg
es
xchg
int3
icebp
out
sbb
add
pop
adc
subb
mov
popl
mov
adc
adc
pop
gs
or
add
mov
and
inc
or
test
jns
sbb
aad
or
es
inc
add
pop
insl
lcall
xor
sub
xor
lret
xorb
test
push
pop
pop
gs
mov
lcall
adc
push
adc
dec
lcall
clc
repnz
addr16
fcoml
mov
arpl
arpl
and
adc
andl
es
pop
mov
lock
jg,pt
rorb
adc
add
jg
jle
mov
xchg
dec
mov
outsl
sbb
lahf
stos
add
leave
push
sub
sbb
add
xchg
push
pop
mov
push
or
fwait
mov
sbb
cmc
fcomps
insb
mov
loope
js
ljmp
cmpsl
mov
xor
pusha
clc
pop
add
or
mov
cmc
mov
cmpsl
and
add
inc
adc
scas
adc
add
in
cltd
inc
aaa
mov
movsl
movsb
mov
mov
addb
pop
add
inc
dec
inc
push
sub
imulb
pop
test
cli
push
out
mov
dec
xor
inc
inc
repz
xor
popf
pop
sbb
movsl
call
outsl
das
sbb
fwait
cs
fimull
or
sbb
clc
or
jno
or
pop
cs
mov
imul
xor
mov
push
cmp
faddp
adc
add
or
jae
mov
mov
pop
movl
push
and
stos
hlt
mov
or
mov
cli
pop
or
jmp
or
adc
sbb
jle
daa
mov
mov
and
add
add
or
cwtl
dec
sbb
lods
enter
testl
jmp
mov
xor
pop
rolb
cli
push
pop
jl
mov
bound
adc
pusha
jp
cmpsl
sub
sbb
inc
out
add
xor
add
sub
inc
cwtl
mov
inc
scas
pop
popa
stos
adc
rcrl
or
sar
inc
mov
add
or
sub
nop
punpckhbw
test
mov
pusha
lret
add
pusha
and
xchg
dec
repz
jp
loop
cmpb
mov
outsl
daa
add
jle
xor
or
aas
jb
adc
pushf
lods
jb
cmpsl
mov
jo
and
out
popl
das
pop
stos
inc
mov
mov
stos
pusha
sub
dec
ss
add
lcall
sub
or
sub
nop
inc
call
dec
repz
adc
gs
enter
push
repz
jae
add
out
int3
cmp
sub
add
xor
pop
popf
mov
imul
add
enter
nop
jns
mov
lock
mov
cmp
andl
sbb
jns
cwtl
cmpsl
ja
adc
or
pop
add
or
incb
decb
push
dec
aad
adc
sub
push
adc
call
popa
add
mov
adcl
or
dec
bound
int3
add
mov
sub
mov
mov
aaa
xor
xchg
sbb
mov
int
popa
dec
jge
mov
ret
cmp
sahf
mov
add
inc
jb
adc
cld
js
adc
adc
das
nop
and
mov
gs
cmp
adc
sub
mov
punpckldq
in
push
cli
orb
inc
mov
stos
scas
lods
test
inc
pusha
mov
cli
push
push
and
add
mov
pop
shll
gs
jp
pop
nop
jle
test
ljmp
clc
dec
dec
loopne
dec
aad
pop
or
sbb
mov
jl
cwtl
push
sub
xor
jle
frstpm(287
outsl
mov
in
jo
das
int3
bound
test
test
xchg
and
jnp
sub
hlt
imul
mov
orl
sub
xor
mov
sbb
push
addr16
or
pusha
loop
ljmp
sub
scas
in
pop
push
mov
outsb
sub
sbb
repz
mov
push
repz
aad
mulb
repnz
or
pushf
sti
imul
repz
and
scas
adc
pop
dec
push
mov
int
adc
inc
test
shll
mov
push
ret
cmp
mov
mov
push
add
rcll
mov
and
scas
pop
jno
mov
rolb
dec
fildll
sbb
fstpt
rcll
mov
dec
outsb
add
pop
cli
adc
sub
ds
test
rclb
pusha
rcl
je
std
mov
lahf
dec
mov
mov
into
orl
xchg
xchg
das
enter
push
xchg
mov
fsubrl
or
add
dec
ljmp
lcall
xchg
pop
cltd
js
add
ds
push
push
push
pop
loop
and
and
adc
sub
stos
and
lock
pushf
dec
push
cmp
inc
mov
addb
or
xchg
add
loopne
sbb
add
adcb
mov
sub
xchg
lock
pop
xchg
sub
int3
dec
and
adc
push
mov
outsb
es
dec
add
shll
add
mov
cli
add
les
jns
adc
aam
mov
and
fs
xor
cmp
mov
lock
add
cmpsl
lods
sbb
or
loopne
lret
mov
jl
cmp
jp
xor
test
cmp
outsb
cltd
stc
or
jb
repz
push
addl
mov
insb
xchg
push
sub
xchg
add
push
orl
mov
cmpsl
jb
jno
pop
push
cmpl
sbb
mov
push
add
stos
fidivrl
pop
mov
je
jg
daa
jmp
movsb
nop
mov
call
or
pop
inc
test
lods
lea
push
rcrb
add
pop
xchg
and
push
test
jno
je
sti
lods
push
mov
dec
xor
insl
cmpsb
jno
call
ss
push
mov
in
xchg
add
mov
nop
in
pusha
ret
popa
call
test
push
sbb
or
inc
and
data16
add
pop
lods
frstor
ds
sub
test
pop
sub
pop
push
or
iret
lcall
or
pop
jnp
je
sub
mov
nop
cwtl
add
cs
and
xorl
enter
mov
outsb
jge
add
popa
cmpsl
mov
pushf
mov
inc
xor
cmp
das
mov
push
adc
jl
mov
xor
mov
stos
stos
inc
jne
nop
adc
cmp
mov
lds
inc
addr16
jmp
inc
es
incb
and
add
fsubrp
repz
push
popf
mov
and
push
test
xchg
popf
add
sahf
xor
push
mov
adc
xchg
and
sub
inc
jp
cltd
cmp
cli
mov
sbb
movsb
test
and
xchg
pop
pop
xchg
cs
and
xor
sbb
sub
xor
fildl
cwtl
mov
add
test
les
jno
testl
insl
lods
fwait
add
inc
cltd
push
dec
or
xor
int3
push
aas
mov
and
inc
jge
sub
pop
mov
sbb
mov
adc
add
clc
cmp
or
fs
repz
cmpl
mov
movsb
mov
mov
int3
jns
add
mov
add
addr16
cmp
aad
test
mov
mov
inc
call
jo
pop
je
mov
mov
nop
jl
push
addr16
add
inc
mov
aad
sbb
add
dec
mov
stc
or
rolb
das
fwait
add
out
inc
sbb
insb
and
jbe
jmp
pop
pop
in
in
aaa
and
xchg
popa
sar
sti
sub
and
imul
add
xchg
mov
fwait
and
ficoms
xlat
or
dec
xchg
mov
test
mov
and
test
add
or
nop
pusha
mov
jbe
mov
lds
jno
outsb
mov
sub
sub
xchg
push
or
cli
out
add
mov
mov
mov
xchg
outsl
push
dec
das
test
mov
std
dec
faddl
fs
sbb
int3
loopne
nop
sub
mov
push
or
stos
lret
sub
out
xor
mov
jno
jg
stos
adc
inc
sub
roll
xor
or
in
in
pusha
pop
xor
lgs
cmp
lods
into
testb
dec
mov
adc
adc
pusha
jp
jle
imul
jbe
jne
cltd
adc
into
pusha
jae
cs
in
add
sub
push
cmpsb
nop
out
push
cs
xchg
call
das
fsub
test
stos
push
push
shll
and
pusha
or
or
lods
push
sub
sub
sti
pop
jne
jns
int3
insb
sub
and
cld
int
cmp
cli
imull
loope
push
mov
cld
out
cmp
mov
cmp
mov
leave
adc
mov
movlps
out
sahf
cld
push
rcr
loope
lods
rorb
inc
jl
mov
in
inc
push
mov
pop
add
fldl
sub
shrb
xchg
xor
subb
gs
sbb
into
adc
fistl
push
add
dec
sbb
frstor
int
inc
sbb
scas
leave
inc
lods
and
outsl
aad
inc
xorb
les
cmp
xchg
lock
inc
xchg
je
hlt
jnp
aas
repz
sar
mov
test
adc
xorb
xor
xor
je
aam
xor
stos
cs
jno
adc
mov
mov
pop
cmc
or
mov
mov
js
mov
pop
andb
shlb
rcll
mov
xor
sbb
adc
lea
xor
movsl
lcall
sub
pop
fadds
les
dec
pushf
sbb
xchg
inc
jns
popa
xchg
jnp
sbb
fiadds
xchg
or
mov
lahf
adc
pop
pusha
fadd
xor
or
or
xchg
pusha
inc
repz
jnp
mov
add
mov
xchg
xchg
sarl
adc
add
push
mov
call
xchg
jmp
dec
sbb
inc
jae
mov
pop
int3
push
rolb
add
or
ja
in
add
xchg
lods
cmpsb
add
dec
outsl
cmp
lods
mov
jle
xchg
mov
orb
test
xor
insb
adc
stos
mov
add
inc
pop
push
in
jbe
mov
push
pop
sub
mov
insb
pusha
adc
push
pop
xor
sub
icebp
int
xor
je
addr16
adc
inc
fs
mov
sbb
xchg
mov
mov
movsl
insl
mov
add
xchg
dec
sub
cmp
xchg
add
push
cwtl
push
hlt
rclb
out
or
jbe
lahf
outsl
aam
cld
jmp
xchg
add
jmp
push
aad
pop
rorl
add
xchg
dec
sbb
xchg
cmp
adc
or
cwtl
mov
dec
push
or
or
adc
fwait
lahf
push
repz
add
sbb
sbb
add
jecxz
cmpsl
xchg
cmp
xchg
popf
cs
nop
xchg
add
imul
pop
std
cmp
pop
add
cli
jne
mov
mov
into
xlat
dec
inc
pop
cli
adc
xor
cwtl
add
push
movsl
repz
int3
or
push
lods
inc
pushf
shr
adc
out
dec
pushf
add
mov
sbbb
test
xchg
mov
test
popf
xchg
mov
jo
test
and
or
int3
xchg
xor
and
mov
inc
fs
cld
xchg
test
push
in
adc
inc
xor
inc
add
lods
cmp
call
mov
jmp
clc
stos
cs
xor
sbb
testl
movsb
dec
stos
push
imul
jle
pop
shl
pushf
ret
cmp
out
insb
fwait
xchg
pusha
cwtl
add
inc
adc
aaa
or
lds
add
repz
jecxz
pop
rcrb
adc
jg
add
push
mov
and
mov
xlat
ja
push
dec
jno
imul
jae
mov
pushf
incl
lret
xorb
cli
inc
pop
in
add
mov
dec
nop
lock
mov
add
shl
sahf
push
popf
cld
sbb
jb
pop
je
jl
mov
mov
inc
roll
add
shll
adc
pop
and
lock
add
cmp
and
or
add
mov
adc
cltd
mov
jbe
cmp
push
add
movsb
and
pusha
cmpsl
rolb
movsl
gs
cmp
loopne
dec
sub
dec
jg
add
jno
add
adc
test
push
pop
and
xor
rcll
dec
stos
arpl
fwait
push
lcall
mov
jo
pop
dec
xor
xchg
ret
push
sbb
add
pusha
cmpsl
add
inc
lahf
fcoms
add
outsb
nop
mov
bound
xlat
out
sbb
rolb
ljmp
push
and
cmp
inc
jo
dec
out
arpl
xor
flds
enter
adc
xor
cmp
and
fwait
mov
fadds
cmp
inc
rorb
cmp
jbe
jbe
cmpsl
shl
or
out
pop
in
mov
mov
cmc
lret
mov
insb
roll
pop
push
dec
test
push
mov
fistl
and
jo
and
enter
mov
mov
mov
xchg
and
andb
mov
nop
mov
sbb
mov
push
testb
add
jnp
fbstp
or
movsb
ds
je
pusha
add
xchg
in
mov
mov
fs
sahf
jb
popf
adc
pop
andb
mov
mov
std
negl
push
test
add
lcall
pop
in
pop
add
cmpsb
repz
xor
das
pusha
push
dec
push
mov
popa
jecxz
clc
sbb
jbe
sub
mov
push
sbb
or
pop
mov
inc
cmp
ja
inc
or
or
cmp
add
add
inc
hlt
add
dec
mov
ret
jo
imul
add
outsl
ljmp
sbb
push
hlt
addb
lcall
or
out
mov
test
call
and
push
push
pop
sbb
pop
cmp
cwtl
cwtl
cmpsl
add
adc
out
dec
or
in
ss
test
push
and
rol
popf
rcrb
adc
and
fxch
mull
sbb
arpl
add
inc
mov
mov
or
pop
cli
pop
lcall
xor
lods
mov
ret
xchg
push
in
cltd
xor
or
cmp
push
or
nop
cmpsb
incb
or
jecxz
sbbb
add
inc
pop
imul
dec
pop
pop
inc
movsb
mov
adc
and
add
pushf
mov
clc
aad
clc
adc
fmull
cmc
xlat
mov
pop
pop
xchg
push
inc
in
dec
mov
repnz
add
cmc
shlb
push
fsubrs
sbb
mov
les
sub
adc
push
jno
pop
subl
mov
mull
sbb
lret
leave
add
adcb
xchg
movsb
insl
ja
lock
cmp
addl
xchg
ss
outsl
pusha
xchg
jo
shlb
out
into
sub
xchg
cltd
xlat
mov
add
rcrl
cmpsl
popa
inc
ljmp
or
mov
inc
fmuls
and
dec
lock
cwtl
mov
arpl
mov
popa
dec
pushf
mov
add
fdiv
adc
pop
dec
fadds
leave
int
test
and
add
jge
aas
add
test
shll
add
lods
xchg
jne
pop
pusha
and
sti
and
lret
add
stos
mov
mov
aad
add
mov
sbb
add
xor
lahf
call
pushf
and
pop
lret
sbb
rclb
pusha
push
adc
aas
pushf
add
js
pop
dec
inc
pop
cmovl
mov
sbb
pop
inc
lahf
sbb
adc
sahf
sarb
nop
frstor
loopne
shlb
pop
jae
popf
scas
xchg
adc
cmp
push
nop
push
dec
cltd
test
pop
mov
das
and
inc
pop
cwtl
mov
push
std
sarb
js
push
mov
sbb
insb
movsb
in
or
sbb
fcom
mov
test
lret
or
pop
cwtl
fildll
sbb
cmp
inc
ret
cmp
mov
mov
ja
push
push
stos
loope
fs
mov
sbb
jg
xchg
sbb
mov
movntq
out
sub
cld
cmp
clc
loopne
pop
adc
pusha
fs
pusha
loope
and
dec
fstps
push
sti
add
push
repz
pop
jne
sar
add
jno
adc
repz
test
xor
push
mov
shlb
jae
jno
or
mov
decl
faddl
insl
mov
lods
and
add
sbb
push
pop
pop
adc
je,pt
push
mov
loopne
or
test
addr16
adc
adc
iret
nop
xchg
sbb
call
int3
mov
ret
cmpb
dec
add
lret
pop
sahf
mov
and
mov
xchg
push
pop
xor
sbb
and
fidivrs
jae
sub
or
shrl
inc
push
rcr
push
cld
or
mov
push
rol
jne
dec
aam
jl
sub
inc
xchg
movsb
lcall
ss
sbb
cmp
jp
ret
sbb
mov
xchg
xor
addr16
add
and
mov
xor
ja
nop
adc
fidivrs
dec
das
sub
mov
push
outsb
push
or
subl
int
pop
lcall
inc
mov
nop
add
sbbb
insl
push
pusha
in
sub
add
fildl
or
lock
mov
push
inc
push
push
pop
adc
or
aad
in
rol
imul
add
xchg
enter
jmp
js
test
dec
lods
std
mov
in
add
loop
xchg
and
js
adc
out
inc
jl
aas
mov
fisttpl
adc
add
rclb
add
lods
aad
add
push
test
mov
cmpl
inc
fstpt
add
test
and
lret
das
xchg
and
addr16
sbb
in
rcl
mov
mov
addb
aaa
xor
add
orb
add
aas
pusha
cmpsb
mov
adc
add
jmp
cmp
mov
mov
or
sbb
add
lcall
add
dec
nop
sarl
lds
cmp
lods
jge
cmp
xchg
mov
test
stos
insl
jb
fs
iret
mov
fldt
lcall
cmc
and
call
adc
pusha
xor
fnstcw
and
and
repz
sbb
test
iret
subl
xchg
jp
mov
add
fs
fnsave
cmpsb
sub
dec
hlt
cmp
cwtl
xor
and
mov
pop
and
out
jle
sub
aad
add
test
stos
out
insb
bound
or
push
data16
js
pusha
cmpsb
lock
lret
sub
adc
adcb
push
add
and
and
daa
adc
mov
cmp
popl
lods
push
xchg
js
xor
adc
in
inc
mov
fimull
push
or
pop
lcall
or
and
inc
test
jno
or
inc
cmpb
mov
mov
lret
int
sbb
ds
rclb
push
and
add
push
mov
mov
nop
push
inc
xchg
add
cltd
fidivrs
adc
sbb
enter
push
out
test
mov
mov
test
sub
and
push
adc
or
add
fldl
push
insl
mov
sbb
and
pop
add
dec
adc
mov
loopne
jl
je
sbb
pop
pusha
pop
aad
adc
xchg
aaa
mov
mov
sti
lret
push
into
iret
jbe
aam
sbb
push
xchg
lret
jno
imul
mov
mov
mov
in
jns
xchg
fistl
sbb
add
or
dec
in
enter
inc
pop
jae
mov
mov
jbe
jmp
push
mov
add
ds
pop
jle
and
rclb
add
loopne
jne
dec
pop
inc
dec
fs
out
mov
mov
xchg
lods
addr16
leave
and
sbb
movsl
or
rcrb
out
mov
imul
push
cmp
shrb
mov
sbb
push
aas
jecxz
pop
adc
daa
mov
cmp
sbb
movsb
loopne
push
repnz
add
js
adc
sub
xorb
lea
rolb
insb
das
push
rcrl
sbb
or
xchg
and
repz
negb
lods
jo
jg
test
or
xchg
pop
scas
ljmp
aad
push
pop
jge
clc
loope
jns
add
or
pusha
loope,pt
das
insb
xchg
mov
data16
in
push
js
aaa
out
neg
jecxz
jp
sbb
cmpsl
sub
cmp
stos
mov
cltd
jns
add
jp
psubd
and
mov
jp
in
push
mov
cmp
or
in
ret
les
movsb
jmp
fs
das
inc
and
rol
dec
iret
add
lret
inc
mov
adcb
mov
cmpsl
mov
pop
sbb
aad
jp
jns
add
mov
mov
or
mov
dec
aaa
lock
stos
into
clc
movb
push
inc
push
stc
pop
jbe
daa
xorl
movsb
xorl
dec
sbb
js
out
mov
push
icebp
add
push
sbb
dec
xchg
add
adc
stos
add
dec
xchg
or
pop
add
cld
lcall
addb
and
adc
sahf
daa
xor
push
faddl
sahf
mov
push
push
cmp
fcomps
adcb
adc
out
mov
mov
stos
pushf
data16
jmp
hlt
mov
xchg
jp
push
ja
or
andl
lret
pop
icebp
test
cmp
sahf
xor
fucom
adc
stos
nop
inc
mov
pop
std
adc
loop
repnz
xor
add
add
and
les
cmp
mov
adc
out
inc
jp
xorl
movsb
add
xrelease
cmp
sbb
jmp
cmc
cmp
andb
xor
or
dec
mov
lret
push
sbb
jns
je
push
and
sub
push
mov
xlat
cmpsb
pop
push
fcomps
aaa
nop
pop
cmp
sbb
lea
mov
dec
call
or
add
inc
push
push
add
adc
out
pop
lock
jno
mov
je
sbb
bound
mov
ss
xor
jnp
movsl
or
push
pop
mov
fimuls
int3
dec
sbb
sub
cmp
xor
pop
in
pop
stc
stos
pop
and
mov
push
adc
je
pop
pusha
into
lock
jo
enter
push
filds
inc
mov
lahf
adc
and
add
mov
or
mov
movsb
add
ljmp
or
movsl
sbb
test
add
es
lock
addr16
sbb
shl
pop
cltd
rolb
dec
or
inc
dec
sbb
mov
mov
pop
mov
push
or
adc
adc
das
xor
lods
aam
mov
adc
pop
jecxz
fsub
icebp
mov
add
mov
sti
mov
nop
mov
movsl
dec
dec
xchg
and
out
adc
shrb
rorl
mov
and
dec
cltd
test
sbb
addl
adc
xor
andb
ficoml
add
mulb
in
dec
jl
mov
and
addr16
insb
jns
add
xchg
movsb
push
addr16
push
xchg
int
xor
das
xchg
mov
sbb
orb
or
dec
or
xor
imul
mov
mov
and
clc
adc
filds
rcr
punpckldq
je
jmp
or
std
aaa
test
add
insl
mov
sar
pop
dec
mov
inc
call
push
rcrb
jp
mov
jb
xchg
arpl
sar
jmp
add
roll
xchg
jae
fneni(8087
mov
out
or
insl
mov
rclb
aam
mov
xor
fwait
mov
fbstp
mov
pop
add
cli
icebp
aam
leave
ds
leave
xchg
jns
or
jns
mov
cwtl
cmp
add
inc
mov
cltd
test
sbb
pop
dec
sti
shlb
dec
dec
adc
adc
clc
mov
notb
and
mov
lods
lock
push
ja
inc
rorb
hlt
sarl
cmp
mov
les
movhps
add
pushf
mov
add
push
repnz
pop
insb
cmp
pmovmskb
jne
shlb
lods
nop
shr
lret
jno
sub
adc
cmp
adc
mov
pop
cmc
pop
jae
jmp
or
cli
pop
xor
int
add
scas
outsb
sbb
or
add
add
push
xor
xchg
adc
sbb
pop
add
and
lret
mov
cmp
push
movsb
leave
out
sub
fmull
rcrl
aam
inc
scas
cwtl
insl
aas
mov
xchg
adc
push
inc
rcl
pushf
jnp
add
mov
pop
mov
outsw
pop
out
mov
enter
mov
mov
mov
jmp
call
sub
or
incb
ret
pop
and
nop
mov
add
inc
or
andl
push
ret
mov
pop
and
jns
push
sbb
je
mov
in
std
pop
add
push
mov
xchg
xchg
cmc
adc
and
xor
sbb
xor
loopne
and
sub
popa
and
test
and
or
popa
lret
or
test
sti
ret
inc
mov
pop
gs
test
xor
add
ljmp
in
cmp
jae
mov
cmpl
stos
fucom
sbb
inc
sbb
dec
xchg
imul
lods
in
inc
xor
xchg
and
inc
push
ret
add
jbe
clc
jmp
inc
xor
mov
pop
dec
sub
push
push
dec
ds
sysret
or
mov
xor
add
xchg
push
sqrtps
cmpsb
in
lret
popa
inc
pop
ret
xchg
mov
add
ret
mov
in
popf
mov
push
andb
push
or
mov
data16
mov
add
and
ret
and
inc
push
ret
add
xor
stc
call
test
pusha
xchg
push
inc
dec
add
jb
cmc
js
pop
xchg
add
add
imul
clc
rdtsc
cmp
or
add
lds
or
rorb
push
pusha
stc
mov
cmc
xor
mov
add
cmp
jo
add
movzbl
out
fsubl
mov
popa
pop
ret
enter
inc
pop
inc
pop
push
ret
movsl
dec
sub
mov
inc
das
shll
cmp
add
pop
mov
popa
push
xor
add
loop
push
push
xchg
and
inc
push
ret
loope
pop
add
mov
mov
and
push
inc
add
push
pop
xchg
xor
adc
xchg
add
fsts
repnz
in
lods
add
sbb
adc
jns
inc
add
xchg
and
inc
mov
and
ret
ltr
int3
je
test
sbb
pusha
push
mov
mov
flds
dec
ss
sbb
es
xor
mov
xor
sub
sbb
or
mov
clts
mov
adc
std
addr16
adc
mov
lar
jns
dec
and
mov
xor
andb
cmp
xchg
addl
pop
mov
cmpsb
xchg
call
cltd
arpl
repnz
jnp
cmpsl
leave
mov
cmpsl
pop
inc
push
and
addb
mov
repnz
mov
out
dec
adcb
sbb
lods
rep
sub
adc
sahf
cwtl
cmp
push
xchg
cmpsb
rorb
push
jmp
clc
int3
push
ljmp
js
adc
sbbb
lahf
addl
jmp
sbb
pop
or
inc
or
push
addl
dec
mov
cmp
inc
dec
ret
repnz
xor
adc
xchg
flds
inc
jae
shrl
std
sbb
movsb
add
jge
lret
and
mov
call
mov
pop
or
movsl
xchg
test
pop
pop
mov
jge
push
cmp
xor
fucom
sbb
add
out
in
and
push
cmp
jmp
mov
shlb
out
and
or
sub
rcrl
push
sbb
or
inc
xchg
dec
or
sbb
dec
daa
push
dec
dec
jp
cld
test
pusha
sbbb
mov
ljmp
movsb
cmpps
pop
movsl
out
les
pusha
xor
push
adcb
mov
rorb
jp
or
pop
inc
push
push
jp
arpl
pop
push
sbb
repnz
popa
adc
pop
pusha
dec
xchg
sub
or
jmp
cmp
xor
adc
jl
scas
pop
lods
inc
into
cmpsb
jo
mov
pop
jmp
mov
adc
fmull
mov
call
add
lds
add
push
xlat
push
hlt
or
adc
or
mov
and
movswl
pop
dec
ret
mov
movsl
cwtl
popf
lea
dec
push
cwtl
add
cmp
daa
push
jbe
sbb
inc
outsl
shrb
xchg
shll
in
or
hlt
jnp
xchg
jp
jne
or
cltd
push
addr16
add
or
clc
inc
stc
push
mov
jge
andb
pop
mov
adc
inc
repz
jno
pop
xchg
sarl
and
cmp
add
ds
sbb
inc
pop
jg
mov
mov
and
sar
sub
pusha
cmp
dec
pop
cld
es
addb
mov
or
sbb
push
inc
xchg
add
iret
call
add
in
jmp
mov
push
add
mov
test
loop
inc
add
insl
arpl
inc
inc
sub
pop
dec
inc
call
pop
xor
sub
addr16
adc
popa
test
pop
xchg
add
jnp
rolb
add
mov
nop
push
jb
pushf
and
or
or
jmp
dec
gs
cmp
push
nop
and
nop
mov
pop
lret
sbb
shlb
add
popf
ja
adc
mov
dec
jl
adc
push
inc
mov
mov
inc
pusha
dec
push
inc
add
jo
or
leave
xchg
inc
repnz
int3
ss
add
lret
add
lock
inc
push
fidivrs
maxps
rorl
sarb
or
fcomip
pop
subl
aam
add
mov
insb
xchg
xor
cmp
gs
mov
popa
dec
int3
sbb
das
jae
into
pop
pop
nop
cmp
inc
mov
loope
xor
push
mov
mov
mov
les
sub
and
jl
cmp
push
insl
insl
and
mov
in
call
adc
cmpsb
cmpl
sub
jmp
out
fstpl
insb
mov
shll
aam
xchg
push
push
mov
add
out
mov
leave
push
push
ds
cmp
dec
ds
mov
outsl
inc
loope
mov
sbb
add
shlb
movsb
push
rolb
ficoms
sbb
call
mov
out
imul
dec
loope
sbb
jl
bound
dec
mov
stos
loop
nop
add
add
mov
push
push
mov
pop
dec
nop
inc
mov
sti
pop
ds
push
add
ja
mov
jo
xchg
test
add
or
add
data16
xorl
dec
in
addr16
inc
pop
pusha
arpl
add
ds
and
add
in
int3
mov
daa
popa
xchg
sub
pop
test
cmpsl
sbb
or
pop
mov
add
mov
leave
cmp
stc
icebp
mov
jno
add
insb
bound
sbb
fmuls
push
push
pusha
mov
cmp
dec
and
call
mov
adc
repz
ficompl
addl
ret
and
dec
mov
dec
rcrl
out
xor
in
loope
out
cli
mov
aad
fs
inc
push
xor
stos
and
pop
push
jmp
out
cmpsl
cmp
push
jb
orb
cmpl
ficoms
rclb
pop
mov
pushf
popf
jl
sbb
xchg
cs
popa
adc
cmp
mov
mov
mov
icebp
xchg
js
rolb
cmp
mov
adc
adc
fistpl
jo
add
adc
xchg
movsl
push
mov
xchg
call
add
gs
lret
jmp
push
mov
add
lock
add
popf
shl
add
aas
je
pop
add
sar
and
add
xor
popa
xchg
push
xor
into
clc
jnp
or
lea
imul
cmp
fwait
outsb
and
or
pop
adc
sub
xor
jbe
jbe
mov
les
add
and
add
std
stos
xchg
popa
in
add
push
ret
adc
subb
rcrb
int
jbe
mov
testl
and
in
mov
xor
addb
add
jno
push
adc
mov
cmp
int
push
and
testb
scas
and
add
shlb
sbbl
vscalefpd
mov
popa
xchg
pop
aad
pusha
push
pusha
push
iret
rcl
mov
inc
or
sbb
mov
rclb
add
pushl
and
jb
mov
mov
int3
mov
push
ficoml
xor
add
xchg
lods
mov
filds
pop
sub
nop
clc
and
pop
xor
mov
xorb
out
and
sub
push
popf
cmp
and
stos
arpl
inc
pop
lea
mov
adc
add
mov
scas
pop
imul
xchg
xor
mov
call
dec
add
mov
std
call
lock
pop
mov
dec
idivl
dec
and
test
xor
push
pop
add
mov
adc
mul
inc
push
clc
out
cli
and
out
data16
outsb
xor
loop
and
sbb
add
inc
dec
jl
pop
jno
loopne
std
inc
call
pushf
jmp
stc
pushf
cmp
cmpb
mov
xorps
arpl
incb
dec
push
dec
push
les
add
inc
or
xor
or
cmp
xchg
jae
add
insb
sub
shlb
xorl
xchg
fwait
dec
ret
movl
clc
sbb
mov
pushf
scas
popf
pop
mov
mov
jp
dec
sbb
arpl
adc
adc
enter
xchg
inc
loopne
push
xor
push
js
and
and
adc
jle
neg
xchg
fisttpll
jns
inc
xor
add
popa
testl
mov
mov
adc
add
xor
jge
fnsave
xchg
je
cmp
fmuls
add
mov
mov
adc
aam
loopne
inc
sub
mov
and
and
mov
test
addr16
rcl
insl
add
dec
outsb
add
and
mov
mov
int3
add
xorb
mov
push
xchg
lea
call
add
or
sbb
cmp
lcall
push
push
add
andl
add
adc
mov
test
xchg
xchg
ficoms
loopne
dec
add
pop
add
xchg
arpl
rorb
cmp
pusha
jae
mov
pop
jno
rcrl
mov
xchg
xlat
add
ljmp
add
out
cwtl
add
pop
daa
jge
pop
push
je
add
lret
push
jl
subb
mov
mov
jge,pn
les
cmc
sarb
push
pop
cmc
push
inc
movb
lods
pushf
nop
ret
xor
and
dec
mov
sbb
or
xor
dec
into
xor
stos
scas
ljmp
mov
inc
mov
add
repnz
fisttps
test
icebp
mov
lds
adc
test
mov
add
nop
and
es
or
cmp
enter
jle
xchg
dec
dec
xchg
push
add
mov
mov
pop
mov
add
push
mov
sub
les
divl
pop
sbb
repz
popf
cmp
add
mov
add
mov
adc
sbb
ret
jns
rcrl
xchg
repnz
add
in
pop
inc
cli
icebp
xchg
subb
mov
jns
jnp
xor
xor
movsl
cmpsl
jecxz
addr16
scas
mov
push
and
push
push
jno
push
and
push
data16
ss
insl
dec
and
jo
cmpsl
and
add
sbb
pushf
bound
pop
add
jne
imul
nop
sbb
in
add
adc
xor
popf
int
xor
jg
add
jmp
std
lahf
adc
icebp
mov
cmp
or
lret
sub
jbe,pn
sub
shlb
out
add
or
and
out
adc
xchg
into
into
clc
loopne
xchg
mov
sbbl
in
jb
adc
pop
mov
popf
mov
or
mov
faddp
xor
and
push
xchg
sar
xor
push
js
dec
out
stos
add
nop
mov
leave
cli
roll
stc
inc
jmp
pop
jle
inc
mov
inc
aas
repz
cmp
loopne
mov
mov
push
add
xchg
shr
ret
dec
shll
or
pusha
pushf
cmp
push
cmc
andb
rdtsc
shl
pop
aas
sbb
hlt
lock
mov
adc
jns
adc
pop
sbb
lods
lods
sub
mov
xor
popf
xchg
pop
dec
mov
cltd
mov
lods
dec
mov
pop
sbb
repnz
pop
cltd
addl
cmpsb
out
push
sbb
sub
xchg
clc
xor
or
adc
les
or
sbb
addb
adc
or
sub
mov
push
push
add
loopne
xor
pop
inc
jae
dec
mov
adc
addb
sbb
mov
push
add
loope
ret
xor
add
push
push
jb
add
push
fmuls
or
adcb
mov
test
and
push
fdivs
shl
inc
cmp
push
lret
cmp
mov
mov
add
test
add
mov
lea
mov
pop
mov
lret
outsb
pop
adc
pop
jns
loopne
dec
pop
in
sbb
in
inc
push
pop
fld
cmp
nop
push
and
icebp
add
mov
adc
or
repnz
lock
add
addr16
add
adc
stos
popa
test
std
inc
fistpl
mov
outsb
into
loop
ss
ljmp
sbb
add
mov
sbb
cs
incl
adc
add
jae
jecxz
inc
lock
add
jno
bound
lcall
lea
movsb
xor
shl
cwtl
es
in
sub
cmp
testb
lock
test
add
arpl
add
aaa
sbb
jmp
sbb
and
jbe
and
rol
adc
adc
mov
xchg
adc
add
addl
mov
test
sub
mov
fwait
xlat
lea
insl
into
je
aam
aad
add
cltd
mov
sahf
in
pop
dec
loop
mov
and
pop
and
add
aam
popa
push
pop
add
push
lcall
add
in
fistps
pop
adc
mov
je
pop
lret
pusha
clc
cli
js
sbb
jle
push
inc
push
sub
add
rclb
mov
jnp
fldpi
sub
adcb
adc
inc
es
push
shl
sub
pop
repnz
add
xorl
pop
or
mov
cwtl
xor
sbb
jmp
pop
subl
fldl
loope
xchg
stos
cmp
into
test
mov
pop
push
loope
jno
adc
leave
pop
push
xchg
outsl
sub
mov
jmp
in
test
sbb
ret
push
push
or
add
in
or
cli
xchg
sub
call
add
cmpsb
les
sub
add
mov
mov
data16
int3
push
cld
rclb
add
xchg
jae
cltd
pop
mov
pop
xchg
loope
sub
jecxz
pushf
add
xor
sbb
sub
pop
xchg
inc
fucom
gs
rorb
dec
loopne
adc
scas
add
int
xor
xor
and
xchg
imul
dec
xchg
xorb
add
pop
scas
inc
pop
dec
add
cli
push
dec
add
aas
stc
cwtl
lret
add
sub
je
js
and
adc
cmovnp
xchg
xor
cmp
notl
lock
xchg
or
sub
mov
out
mov
rolb
mov
mov
sti
jmp
add
adc
push
int3
jle
popaw
adcl
xchg
add
adc
fs
shll
xlat
arpl
mov
add
or
in
adc
bound
sbb
sahf
pop
int3
outsb
sub
jno
es
push
add
mov
xchg
test
jb
add
cmp
int
in
call
stos
subl
fcoms
sub
lods
push
aas
push
dec
outsb
xor
mov
popf
push
sahf
into
imul
in
xchg
dec
xchg
pop
test
pop
add
push
mov
fmulp
mov
rorb
push
pushf
loop
lods
inc
push
je
xchg
lret
sbb
mov
aas
push
dec
dec
insb
pop
add
and
xchg
add
push
dec
adc
lea
or
jb
push
and
lret
pop
adc
pop
add
cwtl
in
mov
data16
ljmp
push
fwait
mov
push
push
and
mov
cmpsb
bound
adc
in
xchg
std
and
sbb
out
out
xchg
cmc
add
or
cmp
jno
inc
pop
dec
inc
ficoms
jecxz
pop
push
xlat
mov
test
aas
cs
gs
stc
xor
push
int3
scas
adc
fwait
sbb
mov
jo
sub
in
xchg
xchg
rclb
popf
push
out
sti
cmc
pop
jl
sbb
arpl
xor
add
cs
lock
cvtps2pd
gs
xorl
ds
xor
and
add
cmpb
pop
out
pop
aas
and
in
xor
out
ss
in
mov
ljmp
and
cmp
adc
lret
add
xor
ret
inc
sbbl
cmpl
loope
insb
xchg
sub
cmpb
pop
dec
add
add
mov
and
pushf
mov
pop
or
fistl
add
inc
adc
push
sbb
jecxz
ret
pop
loopne
jbe
aas
xchg
pop
mov
in
lds
nop
in
jg
add
and
pop
sarl
add
sub
add
lds
in
daa
xchg
and
orl
test
pusha
push
sub
push
add
leave
pop
xorl
xlat
adc
notb
jno
es
pop
or
lds
jp
repz
movsl
dec
add
mov
cmp
cmpsb
jge
cmp
add
fstp
pop
in
insl
add
repnz
jb
popa
scas
enter
sub
addb
xchg
cmp
sbb
lahf
rolb
xchg
pop
notb
rclb
add
pop
xorb
bound
sbb
filds
ds
aad
add
dec
dec
and
sahf
push
or
sar
mov
add
lea
popa
push
pop
sub
rclb
mov
or
or
sbb
xchg
mov
outsl
adc
mov
sbb
or
xchg
movsbl
mov
nop
push
adc
aas
add
mov
cwtl
mov
jbe
pop
aaa
icebp
dec
xchg
les
pusha
mov
lock
enter
jl
mov
sarl
pop
sbb
mov
scas
popa
push
and
mov
add
jno
rorb
mov
nop
test
aaa
cmp
imul
jl
pop
je
ret
rcrl
push
mov
mov
cwtl
ds
sbb
mov
xchg
pop
jge
push
mov
out
pop
jmp
pop
mov
mov
stc
repz
enter
adc
and
xor
stos
movsl
int
inc
pusha
pop
outsb
inc
aad
sbb
mov
nop
dec
xchg
mov
sub
inc
jo
cmpsb
pop
enter
fldenv
mov
and
xorl
enter
fwait
jno
mov
and
sub
add
xchg
movsl
and
mull
pop
add
imul
bound
dec
sbb
into
push
adc
stc
fmull
out
sbb
pop
stos
inc
out
les
cmp
sub
in
adc
lods
call
lret
pop
movsb
sub
or
cmpsl
lahf
mov
popf
cmp
sbb
cmp
xor
and
mov
ds
ljmp
xor
cmp
xchg
sub
xchg
daa
lahf
test
inc
icebp
es
adc
lds
popf
or
nop
fwait
dec
js
mov
bnd
add
fdivl
add
clc
xor
inc
adc
add
or
dec
pop
movl
adc
push
and
inc
mov
push
call
push
call
ret
cltd
mov
sti
sbb
aad
and
adc
dec
add
mov
inc
sbb
call
aas
pop
pop
mov
out
cmp
and
mov
mov
or
cmp
pop
pop
jge
add
fimuls
push
or
mov
clc
aas
or
mov
xor
cmp
out
add
insb
loope
mov
xorb
mov
dec
add
fdivrs
inc
stos
dec
aam
and
je
adc
ja,pt
push
je
outsl
popf
mov
sub
pop
push
mov
add
mov
mov
cmpsb
repnz
data16
mov
notb
dec
call
sbb
or
and
mov
push
and
lret
daa
xchg
mov
mov
mov
sti
mov
xchg
stc
scas
and
push
lcall
lods
popa
lea
xchg
subl
sbb
icebp
sbb
imul
nop
add
sub
call
pop
xchg
clc
xchg
int3
adcb
xor
sub
dec
pop
movsl
dec
cmpl
outsb
add
fidivs
fildll
shlb
popa
pop
jecxz
cltd
dec
sti
and
es
adc
mov
sub
xor
test
sbb
mov
test
fwait
loop
shlb
sbb
pop
lds
test
inc
or
and
add
cmpsl
or
adc
popf
ror
lods
add
push
out
or
dec
add
push
lods
and
lods
insl
pop
inc
push
push
mov
add
bound
cmp
call
sbb
push
or
cmp
stc
fdivrl
test
mov
xor
ljmp
out
fstps
aad
xor
in
push
xchg
lods
aas
mov
dec
mov
pop
or
mov
xchg
adc
test
jecxz
cwtl
add
push
push
cmc
pop
in
mov
mov
jns
mov
mov
and
ret
sahf
push
fsubrl
inc
dec
push
cwtl
xor
bound
pop
jmp
call
add
mul
subb
faddl
dec
add
dec
andb
cwtl
aas
loop
xchg
or
pop
mov
add
fstl
sub
adc
test
movl
ret
aam
dec
sbb
and
rorl
mov
lcall
pusha
dec
add
and
sub
or
test
xchg
fsubrl
pop
iret
sub
adc
test
add
in
pushf
or
sub
das
nop
ds
inc
mov
mov
xchg
or
push
mov
pop
sub
rclb
mov
std
or
mov
and
add
xchg
test
mov
push
xor
loope
mov
test
mov
aam
dec
xchg
loop
pop
ret
adc
pop
fiaddl
jo
icebp
push
call
in
jle
add
in
ds
pop
test
xlat
idivb
adc
xor
fimull
mov
add
dec
lock
push
add
imul
fs
or
mov
daa
push
xor
inc
jmp
mov
or
rorl
gs
xchg
out
rcrb
daa
push
lock
jg
add
in
aad
inc
inc
popa
mov
inc
lcall
enter
mov
lock
add
adc
int
fwait
lods
adc
lret
fdivr
or
fstpl
das
pop
mov
dec
push
or
enter
in
loope
in
cmp
ltr
sub
adc
push
xor
push
xchg
add
int3
call
cmpsb
in
aad
pop
popa
push
movaps
add
test
mov
inc
out
movsb
or
das
pop
sub
pop
nop
das
fistl
cli
popa
or
push
xlat
fisubs
mov
inc
add
push
mov
inc
push
pop
push
outsb
sub
mov
mov
or
sub
jp
mov
cmp
pop
push
mov
mov
and
sti
xor
pushf
or
add
jo
or
cvtps2pd
mov
scas
jbe
sbb
daa
lock
adc
xchg
imulb
hlt
add
xchg
dec
data16
lret
jns
and
add
pop
pusha
fdivl
pop
mov
mov
clc
imul
sarl
dec
in
int3
pop
mov
pop
pop
out
or
popf
xchg
adc
adc
cmpb
sbb
fists
cmc
mov
mov
mov
fiadds
hlt
cmp
mov
adc
gs
cli
xor
clc
repnz
mov
fiadds
push
ja
lods
fisubs
jecxz
dec
loop
add
int3
jg
cmpl
push
adc
adc
and
jge
pop
ljmp
lea
cmp
call
push
mov
sbb
dec
sub
jmp
sbb
xor
sub
daa
bound
mov
addl
lea
imul
add
xor
insl
cwtl
mov
les
dec
pop
sub
sbb
movsl
mov
dec
test
push
pop
push
ljmp
int3
mov
adc
les
enter
addr16
push
cmp
dec
test
sti
push
loope
push
call
pop
xchg
push
inc
mov
sbb
jmp
sbb
imul
push
sub
mov
call
pop
cmp
xor
mov
dec
and
add
in
jge
mov
stos
rolb
xor
scas
dec
fcoml
add
scas
js
xchg
cli
in
push
scas
sarb
call
pop
cli
mov
fwait
sub
inc
mov
sbb
repz
mov
pop
mov
jbe
xchg
xor
insl
add
jae
imul
adc
mov
xchg
pusha
das
cmp
orl
mov
iret
xor
sysret
stos
xchg
insl
aad
enter
ret
xor
movsl
inc
xor
add
push
leave
dec
xor
or
add
ja,pt
scas
cltd
jae
stc
jmp
popf
cmpl
or
dec
lock
inc
pop
mov
push
xchg
inc
sbb
xchg
loopne
xchg
lret
ficoms
es
push
jns
and
stos
test
xchg
jle
mov
mov
sbb
cs
or
fs
xor
dec
inc
push
add
xor
mov
ss
test
sbb
sub
mov
in
xor
or
mov
and
stos
pop
xor
and
mov
jbe
cmc
add
out
and
sbb
or
outsl
mov
cmc
aad
loop,pt
dec
loop
add
cmp
popf
call
cmpsl
in
stos
sub
xchg
out
and
popf
ret
mov
inc
mov
push
push
inc
sub
mov
out
fildl
test
lods
test
dec
pop
outsl
or
mov
and
in
inc
push
mov
out
popa
sub
push
push
fsub
xchg
idivb
xor
sub
shlb
out
loope
pop
sub
cli
daa
sti
icebp
push
stos
lret
js
fdivrs
fs
std
inc
inc
arpl
xchg
test
mov
mov
adc
sbb
test
lock
leave
sub
pop
jl
pop
ja
fidivrl
mov
mov
bound
loopne
repz
mov
aam
nop
xlat
faddl
sub
add
out
pop
jae
or
dec
add
loope
int
and
add
fisubrl
add
sub
addr16
xor
fidivl
mov
lret
mov
repnz
xchg
mov
cmp
jg
jno
jno
sbbb
xchg
test
aam
adc
and
ret
xchg
ss
lcall
loopne
je
sub
sbb
add
ss
sahf
jmp
loop
add
sbb
add
jl
and
xchg
enter
sub
test
mov
xor
int
and
fs
cmp
dec
push
fwait
add
mov
mov
je,pn
hlt
pop
push
sbb
loop
popf
sbb
aad
jl
xlat
and
add
sbb
add
test
mov
ret
pop
xchg
or
test
add
roll
sbb
push
rcll
cmpsb
xchg
out
aad
mov
add
jnp
stc
cmp
icebp
jmp
outsl
or
and
scas
xor
or
daa
add
ljmp
outsb
loop
in
push
int3
push
pop
cmpsb
test
ficomps
xchg
mov
popa
xor
aam
and
orl
pop
mov
stos
movsl
dec
and
decb
out
add
xor
adc
and
pop
jge
icebp
int3
xchg
ljmp
call
inc
jmp
add
lods
add
int3
and
imul
add
adc
or
jmp
push
pop
xchg
sbb
js
dec
outsb
popa
add
inc
dec
jl
sub
add
xchg
and
adc
rcrb
adc
inc
jge
jo
pop
or
stos
nop
sub
mov
push
aad
jge
out
outsl
mov
or
cpuid
fiaddl
pop
push
iret
and
in
stos
inc
xor
shlb
adc
mov
sub
xchg
lock
sti
adc
adc
jae
mov
cmpsb
pushf
or
add
mov
mov
pop
or
popl
sub
mov
sub
adc
mov
insb
aaa
add
xor
test
mov
cmp
subb
xor
aam
into
inc
incb
xchg
pop
mov
dec
pushf
aas
inc
pop
push
jbe
pop
inc
add
jns
mov
dec
add
sbb
aad
mul
scas
aas
add
fcmovnu
pop
dec
mov
add
sub
fsubr
xchg
and
leave
lods
push
adc
jg
push
test
outsb
push
or
mov
rcrb
mov
mov
add
push
dec
or
and
xchg
mov
xor
xor
sbb
jo
add
ja
sub
add
pop
js
jae
xor
push
fucom
sbb
in
cmpsl
in
adcl
subb
xor
cmp
inc
add
idivl
add
mov
push
push
inc
xor
sbb
or
lods
inc
add
push
std
mov
clc
iret
xchg
into
pushw
jmp
daa
roll
test
mov
into
xor
es
cmp
xor
adc
cmp
lock
jge
adc
sub
fisttpl
push
test
out
and
adc
cltd
loope
repz
mov
pushl
jne
lea
iret
lret
pop
enter
or
add
rclb
xchg
pop
std
add
shll
inc
add
push
mov
push
aas
stc
sub
add
clc
popf
mov
dec
cmp
shr
in
aad
addl
dec
cmpsl
mov
cmpsb
jbe
add
jp
clc
cmp
lahf
cmp
mov
pusha
inc
inc
jg
add
mov
push
sub
inc
leave
int
or
inc
jae
inc
dec
adc
arpl
add
fistpl
jns
pop
jecxz
jg
cmp
loop
add
leave
ret
imul
xor
lock
pop
lcall
sub
or
and
xchg
adc
cmp
bound
fstps
adc
cmp
sbb
fsts
sbb
icebp
addb
add
sbb
mov
push
adc
mov
or
stos
int3
dec
push
pop
aad
and
inc
dec
add
mov
sub
imul
cmpb
fcoms
add
ljmp
sbb
repz
adc
stos
lods
das
add
and
mov
xchg
das
push
pop
and
lret
popa
jno
add
into
daa
data16
cmp
push
sbbb
lock
inc
jl
cmpsb
xchg
xchg
enter
dec
sbb
lock
jl
jg
xchg
dec
nop
add
mov
and
scas
pop
fwait
out
rcll
xor
subl
dec
sbb
and
je
bound
jl
aam
test
jae
mov
mov
lahf
push
popf
int
cmp
add
cld
push
mov
jno
push
bound
add
sahf
mov
out
pop
inc
add
pusha
dec
or
and
sbb
mov
jmp
xor
insb
jo
push
pop
push
test
jge
xlat
xor
orl
push
ljmp
inc
and
out
fldt
insl
xor
adc
mov
mov
or
sahf
push
ljmp
add
scas
cmp
fwait
test
test
pushf
xchg
add
jle
scas
ljmp
push
imul
mov
or
pop
jnp
and
xchg
insb
cmp
ror
out
add
ss
bound
add
cs
in
jno
loopne
sub
cmp
in
dec
xor
inc
xchg
adc
push
add
popa
enter
or
or
sub
jo
je
enter
fidivrl
cli
pusha
sbb
fs
and
out
add
jns
add
pop
stc
mov
pop
cmpb
adc
test
push
mull
sti
mov
xchg
ror
enter
sbb
loop
cs
das
pop
jno
inc
rcrb
xchg
sub
xchg
jle
jg
inc
jmp
xchg
xorb
test
cltd
daa
test
push
je
xor
add
xor
ds
addb
cmpb
adc
movsl
sub
es
add
jl
adc
scas
and
mov
add
fisubs
rcrl
sbb
push
sbb
pop
daa
pop
xor
mov
add
sbb
sar
push
daa
inc
inc
bound
sub
adc
xchg
mov
push
add
lret
arpl
jo
call
jmp
divps
je
jmp
ds
mov
jne
sub
push
mov
je
in
test
stos
out
mov
mov
or
dec
loop
push
and
lods
push
icebp
ja
add
xor
pushf
mov
add
and
fcomip
inc
test
arpl
icebp
cmp
mov
aam
test
jns
and
dec
push
add
xor
int3
lcall
pop
sbb
add
add
xor
pause
int3
in
in
das
enter
mov
shll
jge
out
incb
in
test
pop
orb
scas
jbe
ficoml
add
mov
lods
or
mov
xchg
sahf
and
or
push
movsb
popf
sub
lea
fildl
rcl
adc
lret
xchg
sbb
ja
add
xor
push
iret
test
std
xchg
shl
ljmp
jns
sbb
xorb
push
add
rorb
pop
add
xchg
subb
call
fiaddl
cmp
imul
sahf
ret
push
mov
and
cmp
mov
jne
insb
loopne
imul
in
add
push
clc
jo
mov
add
and
icebp
cs
pop
ficoml
div
push
std
mov
sti
sub
call
pop
jmp
movsl
and
add
in
mov
dec
adc
push
popf
add
lret
lods
add
faddl
lret
jae
sub
es
testl
add
dec
xchg
or
push
mov
mov
mov
add
mov
add
add
mov
lods
mov
add
leave
pop
adc
pop
repz
push
sub
jp
lret
movsl
add
mov
divl
orb
out
icebp
outsl
pop
sbb
sbb
clc
pusha
dec
loopne
sbb
daa
jl
push
fimull
xchg
and
incb
push
dec
inc
dec
bound
pmaxub
mov
shll
adc
push
sub
dec
add
dec
fsubrp
jge
incb
and
xor
imul
out
lahf
les
pop
mull
mov
pop
ficompl
lahf
inc
rolb
add
popf
pop
or
mov
jge
mov
mov
mov
sub
lock
jp
imul
mov
arpl
aaa
fidivs
xchg
in
push
out
test
inc
into
sbbl
cwtl
push
or
dec
repz
jo
mov
fistps
shll
add
bound
inc
adc
and
divps
cwtl
and
iret
xchg
xor
loope
addb
mov
andl
mov
std
pop
test
out
push
inc
dec
and
jp
call
stc
mov
sub
dec
adc
push
push
movsb
pop
shl
dec
xchg
cltd
pop
cmp
mov
loopne
jp
es
test
adc
jecxz
es
adc
test
mov
add
adcb
scas
or
out
inc
sub
lock
add
out
sbb
shl
and
cld
popl
es
sub
mov
push
dec
cltd
sbb
xchg
enter
inc
jl
pop
add
loopne
add
jae
call
pop
mov
out
test
sub
xchg
adc
and
inc
or
or
pop
mulb
int3
cltd
jb
xor
mov
je
add
fisttpll
pop
push
popl
or
test
xchg
lds
push
out
cli
fimuls
mov
test
fstpt
mov
sbb
lcall
jno
repz
sbb
mov
ds
or
push
and
pop
pop
jo
jbe
add
loopne
test
xchg
add
adc
xor
mov
test
dec
cmp
addl
pop
mov
add
jae
add
psadbw
ljmp
stos
sub
add
repz
sub
pop
add
mov
push
test
push
jo
iret
add
jle
stos
add
rol
ret
fldl
movl
cmp
jo
nop
or
jno
jns
sbb
jo
lds
adc
mov
jle
jmp
popa
popf
jmp
and
cs
add
in
js
and
adc
and
jp
stc
sub
push
aad
inc
je
scas
add
popf
push
movsb
add
outsb
imul
jne
pop
pusha
mov
test
add
xor
mov
adc
mov
xorl
and
mov
lea
and
or
xchg
sbbl
xor
imul
inc
fdivs
add
fbstp
lds
mov
xchg
sbb
push
add
add
shl
jmp
add
mov
es
lods
movsb
sbb
rcrb
ror
sbb
daa
mov
ror
pop
frstor
out
pop
cld
fcomip
addr16
mov
das
pop
mov
and
inc
nop
cmpl
mov
xchg
pop
xchg
adc
addb
aam
add
fwait
je
add
dec
push
or
mov
mov
ret
aaa
les
pusha
cmp
cmp
add
testb
pop
sarb
cltd
pop
xchg
lods
lcall
pusha
xor
push
add
out
or
addb
cmc
mov
cltd
mov
add
popf
jno
and
sub
add
popa
cltd
pusha
mov
xor
adc
popa
push
mov
cmp
pop
mov
leave
test
or
xchg
gs
push
or
push
test
xor
popa
jmp
sub
add
pop
inc
test
les
stc
cs
je
push
push
mov
mov
popf
mov
cmpb
mov
and
mov
leave
dec
popf
sub
add
mov
push
mov
dec
push
hlt
lea
fists
sub
mov
sub
pop
pop
or
ret
inc
add
dec
sbb
sahf
mov
and
mov
dec
shll
dec
and
test
add
add
pop
and
cmp
cs
lret
pop
stc
add
push
add
pop
add
push
xor
mov
sbb
inc
xchg
out
rol
je
sbbb
xor
xor
jo
mov
push
int
scas
subb
bound
adc
pop
sti
or
pop
aam
cmp
in
mov
adc
push
repnz
and
pushf
adc
sub
push
cmpsl
faddl
sub
jae
arpl
push
lret
and
fcmovbe
pop
add
movb
fs
test
aaa
cmpsl
clc
pop
push
mov
daa
and
insl
scas
push
outsb
outsb
test
sub
jle
mov
push
test
notb
pop
test
ja
push
pop
mov
mov
xchg
loopne
sbb
adcb
xor
xor
daa
ds
xor
dec
mov
cmp
jecxz
je
mov
jp
add
mov
adc
or
jbe
sbb
lret
xor
test
ljmp
int3
and
mov
test
int3
lds
in
mov
std
cli
push
sub
shr
xchg
scas
dec
push
test
pop
mov
and
adc
jo
pop
add
cmp
adc
stc
jge
add
push
out
mov
outsb
dec
scas
jne
out
dec
sarl
cli
je
fwait
mov
jno
xchg
popa
imul
fimuls
mov
xor
test
dec
test
sub
xor
jbe
adc
notl
pop
add
mov
jge
jne
inc
or
add
rep
mov
push
add
loopne
and
dec
stc
sub
out
sbb
nop
js
mov
loop
pusha
int3
add
test
xor
xor
adcl
xchg
pop
test
adc
inc
cmp
lcall
inc
jnp
aam
dec
dec
ds
and
or
orl
addr16
insb
mov
xchg
and
push
jl
inc
fs
pop
push
imul
and
add
mov
mov
xlat
add
add
into
xchg
cltd
test
xor
icebp
mov
mov
push
inc
pusha
inc
sub
adc
std
xchg
add
mov
mov
test
popa
add
xchg
and
cli
pop
add
xor
adc
sti
loop
xor
inc
add
jns
sub
cs
mov
mov
push
loopne
sarl
mov
lock
int
test
bound
repz
push
pop
cmp
ja
jb
and
fcomi
or
pop
repz
mov
jno
jmp
mov
adc
ds
cld
and
fwait
out
xor
pushf
movsb
out
jmp
xor
or
xlat
inc
aad
add
inc
adc
cmp
jge
lahf
add
dec
pop
loopne
shrb
inc
sbbb
and
int
jg
or
test
xchg
jg
dec
lods
popa
out
and
lret
lret
jecxz
inc
popf
xorl
pop
into
xor
dec
cmpsb
jb
inc
or
xchg
dec
jg
cmc
jnp
out
arpl
lods
pop
out
jge
xor
add
cwtl
sbb
arpl
dec
sub
clc
sub
pop
lea
jecxz
mov
nop
icebp
adc
das
or
imul
mov
add
xchg
out
xor
ret
push
add
sbb
pop
addb
mov
push
inc
mov
and
orb
daa
shlb
dec
cwtl
mov
mov
cmpb
loop
sub
mov
in
adc
push
movsl
dec
in
aad
jg
push
mov
push
loop
pusha
push
cmp
and
repnz
inc
add
inc
and
pop
jg
mov
out
sbb
inc
int
add
add
cmp
pop
xor
popa
adc
jo
add
mov
js
lahf
fidivs
and
and
in
psubusw
clc
mov
inc
les
sbb
addr16
aaa
inc
or
ds
leave
les
int3
inc
or
xor
sbb
arpl
dec
iret
pop
nop
fadds
enter
out
cli
mov
clc
add
pop
nop
push
adc
test
or
lds
shrl
mov
xchg
roll
jge
xlat
or
sbb
rol
adc
inc
fmul
je
shrb
xchg
dec
adc
push
lcall
lea
loopne
es
push
mov
add
push
pop
pop
lods
adc
jecxz
in
add
testb
std
lahf
enter
sbb
test
and
sub
out
add
jmp
cli
and
mov
add
test
sbb
jno
push
xor
sbb
nop
mulb
or
std
sub
shr
push
subb
mov
add
cli
add
jno
xor
test
mov
test
outsl
sub
lahf
push
ja
pop
aad
insb
clc
nop
xchg
scas
xchg
loop
mov
rorb
push
ja
add
inc
adc
xchg
das
ss
push
jbe
sub
adc
mov
bound
data16
iret
add
and
nop
jg
stos
jle
cmp
dec
add
push
push
scas
or
xchg
in
shrb
bound
mov
push
je
mov
mov
push
dec
jo
shl
add
cmp
add
test
dec
sub
lods
jp
mov
ja
xlat
mov
lds
outsb
jae
jo
test
jae
scas
pop
iret
fwait
aaa
inc
das
mov
andb
and
jmp
fistpl
xor
inc
push
jno
inc
loop
or
cld
mov
data16
popa
imul
mov
dec
insl
sub
sub
mov
icebp
stc
sbb
lea
movswl
mov
adc
push
push
nop
mov
sbb
aad
movups
fstl
sub
push
test
jg
mov
or
mov
adc
cs
pushf
add
sub
jle
or
jne
push
in
roll
jo
push
jae
outsl
and
mov
jl
test
xor
mov
push
add
ja
das
cmpb
cld
mov
mov
cmp
outsb
xor
mov
das
test
mov
add
sahf
into
sbb
test
push
mov
incb
movsl
push
and
inc
or
add
and
add
xor
mov
adc
push
outsl
adc
lock
fistl
cmp
nop
xchg
and
sub
fsubrs
xor
mov
jmp
xor
daa
mov
mov
xor
aad
cld
mov
add
xchg
fistl
sub
out
xchg
mov
push
sub
test
sub
add
arpl
mov
push
dec
cmp
ret
jb
lock
mov
push
mov
leave
aas
xchg
mov
mov
jl
sub
jle
das
inc
mov
mov
mov
sbb
popf
or
add
orb
flds
push
inc
jl
push
or
mov
sub
popa
ds
sub
adcb
mov
roll
cmp
mov
call
insl
sbb
pusha
popa
and
jne
adc
cld
cwtl
sbb
jmp
add
negl
sub
mov
jb
xor
add
and
lock
mov
add
sbb
add
iret
jnp
adc
and
call
test
sub
push
mov
test
es
in
adc
mov
and
mov
sbb
jmp
popf
push
insb
popa
adc
lock
mov
aam
subb
stc
jns
push
shl
sub
addl
pop
and
mov
shr
imul
jg
jecxz
ret
or
push
cltd
cmpsb
cmpb
add
cmp
mov
add
cmp
jg
cs
lcall
out
add
sti
mov
pop
nop
mov
mov
pop
outsb
add
adc
into
lea
or
push
lods
stc
or
pop
fiadds
fidivs
sub
mov
dec
pop
sub
lea
xor
and
ds
adc
sub
sub
rclb
jmp
clc
push
push
jae
mov
or
mov
jnp
mov
mov
mov
push
int
mov
cmpsb
in
int
and
lods
mov
inc
je
loope
mull
pop
faddl
test
pop
mov
add
or
pop
ds
cmpsl
add
jb
sbb
sbb
andb
test
jecxz
and
xor
cmp
imul
dec
lods
popf
push
push
add
xor
xchg
out
sarb
pop
mov
or
add
push
inc
xor
sbb
out
daa
push
stc
rcr
lret
push
pushl
xor
and
scas
sbb
sbbl
lcall
mov
pusha
adc
sub
lods
jecxz
ficompl
mov
mov
imul
xchg
mov
add
popa
adc
push
inc
je
pop
push
shrb
or
add
jo
lret
xor
add
int
and
add
lret
pushl
sub
pop
inc
sbb
js
cld
jge
outsl
enter
jae
or
mov
add
xor
daa
sub
ljmp
xchg
jecxz
add
enter
scas
add
js
mov
movsb
and
mov
inc
adc
push
push
pusha
mov
insl
dec
sub
shrb
mov
mov
or
pop
mov
mov
xor
dec
nop
outsb
mov
sub
push
int3
cmpsl
cmp
nop
xacquire
adc
and
adcb
push
mov
pop
nop
xlat
mov
xor
je
pop
pop
aas
int3
and
sub
jno
adc
sarb
test
push
pop
adcl
adc
dec
push
mov
fstl
test
lods
arpl
fiaddl
ss
enter
pop
mov
movsb
add
lcall
mov
test
pop
mov
popa
in
out
and
or
fildll
std
cmp
pop
xchg
xchg
add
sbb
jmp
cmp
adc
sub
cwtl
lahf
inc
jecxz
cmc
mov
test
or
sub
mov
dec
mov
mov
fwait
rolb
adc
pusha
ds
sub
add
repz
lock
daa
fisubs
leave
std
aam
rcrl
lock
ret
add
or
jg
les
or
dec
daa
int3
push
cltd
test
sbb
mov
cmp
mov
mov
cmp
rolb
jae
sub
fnstenv
jg
shlb
adc
sbb
inc
cmp
push
mov
mov
mov
jmp
sahf
dec
ret
or
shll
and
das
ja
xorl
movsb
sub
push
mov
push
mov
xchg
mov
or
ret
add
and
adc
add
shlb
push
jbe
mov
xor
rcll
pusha
mov
push
je
add
xchg
add
lods
and
and
mov
mov
daa
xchg
popf
and
mov
cmp
push
inc
mov
in
xchg
mov
sbb
dec
jae
decb
add
les
popf
outsb
jg
fadds
fld1
in
xlat
popf
pop
push
inc
dec
sbb
mov
inc
pusha
fistl
mov
jl
lahf
rolb
popf
fldenv
push
or
mov
mov
jno
lahf
lret
aaa
mov
xor
inc
test
cmp
popa
adc
sub
call
call
pop
shlb
mov
fcomps
cmp
lahf
ljmp
and
jbe
mov
jbe
mov
mov
add
lods
add
sub
sbb
sbb
jnp
rclb
cwtl
mov
xchg
idivb
std
add
push
sbb
pusha
dec
or
sub
or
leave
subb
arpl
sub
cmp
cmp
xchg
jl
divb
add
mov
ret
incl
test
mov
stos
or
dec
mov
dec
in
add
sbb
jae
call
imul
movsl
inc
pop
add
sub
popa
imulb
or
enter
inc
subl
jmp
mov
mov
adc
sbb
incl
call
mov
das
pop
push
jnp
shll
int3
fldenv
imull
repz
jecxz
enter
int
xchg
dec
push
add
and
mov
and
inc
push
push
ljmp
cmp
jle
jecxz
mov
inc
or
rcl
stc
pop
popa
and
ficoms
cli
mov
xor
out
data16
or
clc
call
shl
pusha
sub
mov
add
jmp
outsb
inc
push
test
sub
push
inc
test
out
or
xchg
mov
add
arpl
daa
subb
jae
fmuls
ja
outsb
ficomps
orb
sub
mov
test
pop
call
aad
mov
iret
jge
xlat
and
lahf
mov
mov
in
add
xor
push
in
leave
add
pusha
xchg
mov
loop
mov
lret
mov
mov
sarl
sbbl
insb
jle
idiv
sub
fstpl
subb
nop
mov
mov
faddl
sub
pop
testb
push
shll
mov
faddl
and
ja
repz
popf
frstpm(287
mov
push
pop
cmp
push
cmp
cmpsl
mov
bound
enter
aam
add
mov
ret
xabort
sub
popf
in
xor
lock
add
lahf
xchg
adc
popa
icebp
mov
arpl
cmpsb
xorb
add
push
sbb
movzwl
mov
inc
mov
push
enter
xchg
notb
or
inc
rol
jecxz
test
mov
lea
cmp
add
addr16
out
inc
jg
hlt
fs
push
les
xchg
pop
shll
mov
std
movsb
mov
lret
xchg
andl
in
push
pop
mov
arpl
push
stc
stos
jge
sub
sub
stos
cwtl
leave
js
jae
pop
jmp
sbb
xor
mov
insl
mov
mov
sbb
cmp
mov
sbb
mov
ret
mov
jecxz
add
cltd
pop
mov
lds
daa
dec
cmc
add
sbb
sbb
push
insl
add
sub
dec
fcmove
xorb
sbb
push
or
into
repnz
in
jne
es
cmc
repz
scas
inc
cli
movsb
or
fidivrl
mov
movl
jmp
in
aam
ds
push
ficoml
aad
xor
dec
cmpsb
dec
loopne
cwtl
push
ja
or
dec
inc
roll
and
inc
popa
punpckldq
cmp
adc
sbb
add
or
adc
jecxz
push
xor
mov
mov
add
xor
out
mov
negb
loopne
push
and
loop
xor
or
mov
ja
sbb
mov
push
stc
inc
js
and
das
fnstenv
or
xchg
or
mov
push
pop
test
popa
fwait
mov
mov
rclb
mov
push
pop
shr
loop
add
add
xor
inc
pop
add
xchg
dec
js
test
icebp
and
mov
test
test
rolb
int3
mov
test
nop
pusha
push
mov
cmp
lea
loopne
pop
test
outsb
mov
push
movsb
xor
inc
bound
inc
cld
cmpsl
push
aaa
inc
add
add
fs
fyl2xp1
add
cmp
pop
lret
pop
fcmovnu
subb
cltd
xor
jecxz
mov
aas
and
imul
fs
movsb
mov
dec
aam
sarb
test
outsb
sub
insl
add
iret
cmc
jmp
mov
push
sbb
mov
ret
jg
xor
xchg
mov
dec
xchg
addb
aam
mov
and
cmp
adc
pop
and
addr16
hlt
add
gs
pop
xor
std
mov
jmp
insb
xchg
hlt
push
shl
movsb
add
test
cmovp
or
dec
ret
xor
or
mov
and
mov
enter
mov
push
std
jmp
pop
aam
pusha
cwtl
inc
adc
cmp
out
enter
nop
push
push
adc
push
popa
test
jns
xchg
and
test
dec
sbb
push
dec
insb
mov
clc
fnstcw
das
fwait
adc
xor
mov
jge
mov
push
push
jmp
call
mov
sub
and
xchg
or
fistl
fmul
enter
sub
loopne
add
lret
pop
out
cmp
popf
rclb
pop
fdivp
or
mov
jl
add
jno
sub
pop
int3
and
enter
ret
cmp
sbb
mov
adc
xor
and
xor
mov
pop
push
push
aas
cmp
xchg
outsl
add
andb
adc
adc
sub
pop
adc
scas
daa
aam
sahf
mov
je
add
mov
inc
dec
sub
mov
cwtl
xchg
inc
push
add
repz
jecxz
aad
jge
jle
or
cwtl
mov
mov
lds
pop
nop
mov
xchg
adc
mov
lods
insl
or
cmp
mov
lret
inc
adc
pop
mov
add
cltd
mov
mov
imul
iret
mov
popa
adc
pop
dec
mov
or
aaa
shll
add
jbe
xchg
test
push
jmp
mov
and
dec
nop
push
jb
adc
cltd
jo
adc
pusha
loop
and
popa
mov
xchg
mov
test
stos
fidivrl
cmp
pop
dec
mov
cmp
pop
cwtl
add
outsb
sbb
call
xor
cmp
lea
jno
add
mov
imul
pmaxub
lds
ret
mov
mov
dec
and
mov
pop
mov
cmp
ret
xor
pop
add
mov
mov
stc
or
mov
push
inc
imul
decl
cld
ljmp
adc
subb
test
add
fisttpll
and
dec
pop
and
push
cwtl
inc
ja
mov
loope
das
xchg
xor
jp
sbb
rorl
dec
mov
lcall
cld
inc
xor
inc
adc
and
sahf
roll
test
popf
mov
pop
nop
sti
out
lahf
inc
and
or
adc
add
lea
push
mov
fldcw
adc
add
ds
int
adc
int3
imul
popa
add
xor
pop
add
pusha
sub
stos
stos
add
jne
shlb
dec
adc
pop
int
out
mov
or
leave
call
mov
and
add
or
xor
scas
sbb
push
psubq
dec
icebp
out
daa
push
dec
adc
sbb
leave
push
cmpsb
or
insb
dec
push
adc
insl
push
mov
pusha
mov
imulb
test
cld
add
mov
pop
aas
cmp
mov
cld
push
add
rorb
sub
push
and
jecxz
or
fbld
dec
call
dec
sbb
out
das
push
mov
cld
enter
cmp
xor
push
inc
roll
lods
pop
out
or
mov
jbe
inc
jge
add
or
iret
and
pop
mov
pop
pop
and
jb
leave
mov
pop
adc
push
or
pop
call
sub
jle
xorl
nop
test
sbb
cmp
lret
adc
fidivs
fcmovnu
xchg
lea
xchg
add
std
ret
out
add
mov
mov
xchg
lock
repnz
loop
inc
dec
aas
shlb
jns
int3
lds
paddd
in
lcall
adcl
pop
push
xchg
pop
xchg
xor
cmp
hlt
add
xchg
jecxz
sbb
add
sbb
push
push
jg,pn
pop
xchg
pusha
jg
or
pushf
adc
add
scas
push
push
ficoml
mov
int
or
adcb
fisubl
incb
fisubrs
fisttps
jbe
scas
dec
add
sbb
nop
pusha
bound
and
cld
and
adc
inc
and
jno
add
push
dec
and
scas
and
inc
repnz
es
cmpsb
xchg
add
arpl
cltd
xchg
jecxz
mov
fistpl
sub
push
insb
pop
dec
popa
mov
aad
lock
bound
es
pop
into
jl
fimuls
mov
xor
xchg
inc
xor
shr
cmc
test
data16
cwtl
mov
ss
sub
push
sub
and
add
sbb
mov
pop
push
shl
add
mul
loopne
test
mov
inc
pop
data16
test
add
iret
push
inc
add
repz
mov
sbb
idiv
sbb
push
pop
sub
not
ja
adc
or
mov
imul
mov
add
jmp
dec
stos
fsts
jg
pop
pop
aaa
and
icebp
add
push
jl
shlb
add
dec
stos
or
inc
movl
mov
icebp
xchg
add
pop
fsts
xor
add
nop
add
sub
lahf
data16
pop
pop
or
lea
bound
mov
or
or
or
mov
pop
sbb
jmp
jbe
xchg
mov
inc
stos
frstor
sbb
xchg
test
lret
mov
mov
add
rolb
jb
pushf
mov
dec
popa
es
mov
cmp
dec
sahf
cmp
lods
int3
aas
roll
sbb
xor
push
and
clc
in
xor
pop
xlat
mov
lock
push
mov
xchg
imul
sahf
xchg
mov
call
cmp
in
cmp
fldl
push
add
pop
mov
icebp
xchg
ret
push
mov
int3
mov
jle
aam
adc
add
dec
push
dec
cli
hlt
daa
or
hlt
popf
in
xor
sbb
daa
rcrl
xor
addr16
enter
xor
xor
stos
xorl
dec
dec
jg
xor
add
xchg
sub
stos
xlat
repz
or
and
lods
xor
mov
mov
add
rolb
addb
mov
inc
sti
arpl
adcb
cmpsb
je
out
mov
sub
jne
or
fsts
sub
or
cmp
pop
in
imul
and
pop
inc
enter
pop
repz
jno
test
js
and
jp
daa
inc
mov
mov
pop
inc
fldt
and
mov
cmp
push
pushf
pop
pop
andb
mov
or
jnp
jl
stos
subb
sbb
inc
push
inc
hlt
imul
test
mov
pop
movsb
aam
aad
clc
repz
cwtl
pop
cld
jg
popf
insl
add
iret
mov
sub
sub
movb
cmp
add
sbb
adc
jg
mov
xor
jg
fisttpll
sub
fisttpl
push
inc
lods
and
pop
call
cmp
mov
into
xchg
sbb
stos
pop
jne
imul
jnp
iret
pop
loope
std
inc
lcall
in
dec
clc
dec
add
scas
xchg
loopne
and
cltd
jge
mov
aad
mov
jbe
icebp
loopne
adc
scas
loop
sar
outsb
mov
test
cmc
xor
mov
loope
mov
cmp
add
jmp
out
push
out
adcb
lods
cmpsl
leave
xchg
orb
lods
nop
inc
mov
mov
imul
cmp
stos
adcl
sbb
or
jmp
add
in
inc
and
stos
shlb
stc
sbb
or
addr16
dec
in
push
shl
inc
popa
sbb
addb
addb
inc
mull
sbb
xor
mov
push
dec
dec
int3
dec
ljmp
dec
cli
mov
jns
pop
xchg
jo
pop
xchg
xor
stos
hlt
ds
mov
dec
stos
add
shrl
adc
popf
sbbl
xchg
inc
and
mov
sub
enter
push
inc
cltd
lock
adc
scas
pop
cli
bound
outsb
imul
mull
bnd
cmpsb
sbb
push
mov
pop
fst
sbb
pop
aaa
es
lahf
das
mov
mov
and
dec
add
and
ret
scas
mov
jns
xor
jo
dec
in
push
push
das
add
int3
and
out
xchg
into
xchg
jno
adc
in
icebp
sbb
push
jb
add
jge
push
fs
or
add
into
popa
add
adc
int3
add
adc
add
call
insb
sub
jo
cmp
loop
sti
mov
cmpb
je
sub
lahf
scas
ret
sub
inc
pop
add
sub
pop
repnz
or
lods
iret
pop
pop
sbb
and
mov
imul
scas
add
xchg
cmp
add
mov
inc
roll
fsubl
shll
push
ret
and
mov
add
xchg
dec
enter
push
cwtl
xchg
add
lea
fbstp
xchg
rcrb
push
scas
sub
ret
adc
sub
les
add
mov
mov
dec
sahf
mov
shlb
pop
popf
sbb
mov
jbe
inc
pop
popa
in
enter
and
and
roll
jge
xchg
mov
jno
mov
out
enter
push
inc
cmc
ret
outsl
adc
out
adcb
xor
stos
push
inc
jle
call
mov
mov
jae
test
popf
pop
push
std
cmp
or
cmp
adc
or
xchg
imul
setbe
fs
mov
fists
pushf
cwtl
les
add
mov
test
or
cwtl
sub
pop
pop
push
int3
mov
jl
adc
push
popf
rcrb
mov
ficomps
fsincos
and
outsb
bound
mov
icebp
in
repnz
nop
mov
and
xchg
in
cmp
xchg
push
dec
imul
sbb
aam
lds
dec
jle
push
or
sarl
mov
sub
adc
jmp
in
dec
cmp
sub
shrb
add
and
inc
stos
inc
cmp
xchg
cli
inc
scas
in
lock
enter
test
fidivs
add
and
inc
mov
add
pop
stos
sub
or
fdivp
add
fs
and
fsubl
inc
in
sub
std
push
les
repz
jge
daa
insl
lahf
mov
popa
shll
cmp
and
mov
lret
or
data16
cmp
cmp
cmp
leave
shr
ret
loope
xor
jg
inc
xlat
loopne
psllw
repz
add
jge
xor
in
adcb
repz
dec
adc
dec
imul
jle
int
pop
push
push
cmc
add
sbb
mov
xchg
inc
das
mov
jmp
add
orl
sub
std
sbb
xor
rcrb
mov
leave
sbb
into
push
jmp
pop
xor
imul
jmp
scas
nop
stos
popf
imul
enter
jo
sbb
bound
inc
cmpb
inc
mov
or
aam
rolb
jp
push
and
sub
loop
sbb
das
xchg
xor
push
and
pop
pop
add
lds
mov
sbb
add
and
push
mov
push
les
mov
inc
addl
mov
dec
adc
mov
fsubl
add
insl
add
enter
push
xor
jb
add
pusha
mov
adc
cld
mov
iret
lret
jg
adc
mov
or
and
test
xchg
cmpb
sbb
dec
negb
jns
or
push
mov
cltd
insb
adc
gs
scas
add
push
cmc
rcll
lahf
or
pop
in
call
mov
add
ja
adc
adc
rolb
jl
and
les
test
bound
sub
add
cld
jp
xchg
mov
inc
std
add
jne
add
sub
jl
mov
divl
dec
sub
cmp
sub
cmp
add
aaa
dec
xor
dec
dec
add
xchg
sar
cli
xchg
jbe
lock
or
sub
ja
push
inc
sti
shl
cltd
fistps
cli
mov
sub
ds
mov
cmp
addl
and
sub
test
and
xchg
scas
mov
or
stc
sti
sbb
jae
mov
psadbw
or
sbb
gs
daa
cmpsb
add
in
or
add
cmpb
mov
sub
fdivrl
in
add
pushf
imul
xor
push
xorb
add
sub
cmp
xchg
cmp
dec
fwait
mov
xor
ss
pop
sbb
dec
xchg
sbbb
jg
addb
and
mov
subb
sub
fs
repz
jg
enter
notl
mov
test
inc
rclb
icebp
add
xchg
push
mov
or
pop
mov
adc
mov
test
shl
je
or
jnp
stos
dec
mov
or
cmp
out
add
rcr
mov
pop
stc
add
pop
ret
add
xlat
jmp
rorb
mov
int
repz
out
add
xchg
fmull
add
in
cmp
lret
movsl
lods
arpl
inc
add
rclb
mov
out
out
sub
mov
and
mov
cld
sub
add
cmpsb
pusha
test
or
cmp
adcl
pop
sarb
lock
sub
lret
orb
fisttpll
std
dec
decb
xor
cltd
push
popa
add
pop
push
cmpsb
mov
outsl
push
out
lret
aas
into
imul
cmp
rorl
xstore-rng
cmpsl
lds
xchg
jne
push
mov
cld
pop
test
mov
mov
jbe
sbb
jne
and
or
ret
shl
scas
orb
cmpsl
jb
sub
ret
dec
cmp
adcl
pop
add
ds
jne
cmp
add
jb
xchg
outsb
mov
es
dec
add
lods
cwtl
adc
incb
lret
sbb
mov
iret
rclb
push
add
or
and
ficomps
andb
dec
int
add
imul
xor
call
add
fidivl
xor
dec
daa
arpl
cs
aas
xchg
shr
mov
out
push
fwait
add
fistps
cli
or
std
outsl
pop
mov
mov
push
nop
addb
pop
push
dec
aas
xchg
jnp
out
dec
adc
sub
dec
push
mov
dec
testl
or
rcll
adc
rolb
rcl
jmp
push
push
and
icebp
mov
pop
pop
sti
sub
dec
lcall
add
pop
pop
adc
mov
mov
call
lods
cli
call
out
and
add
sbb
push
inc
lea
xchg
fdivl
cmp
rcrb
jns
inc
add
aas
or
cmp
inc
add
ficoml
repz
add
and
aas
pop
ret
daa
inc
aam
dec
add
popa
inc
adc
fsubrl
imul
rcrb
mov
jge
push
sub
cmc
push
out
out
cmp
lahf
push
mov
push
nop
dec
adc
jne
mov
add
sub
pop
push
and
test
rcr
xchg
clc
rcrb
cmpsl
fdivr
out
mov
mov
fmuls
jno
sbb
popf
nop
insb
iret
inc
add
ret
stc
out
sbb
bound
fidivl
push
xlat
mov
lock
jo
sub
or
cmp
jae
repz
mov
nop
xchg
and
idivb
push
dec
and
and
test
out
loopne
mov
mov
pop
fnstsw
sahf
sub
rcr
xchg
decl
int3
test
cmp
lods
es
pop
push
in
ror
ret
popa
dec
imull
dec
psubusb
pop
loop
and
test
sti
outsb
mov
outsl
pavgb
jmp
add
sub
sub
in
add
imul
cmp
add
notl
stc
pop
popa
mov
in
aad
test
cli
pop
in
cmpl
cmpsl
mov
add
std
daa
orb
adcb
mov
adc
jmp
bound
je
mov
jl
aaa
adc
jnp
sbb
jno
addb
mov
xor
push
add
mov
adc
add
loopne
imul
add
jle
mov
push
aaa
test
sub
push
sbb
or
out
sbb
sub
jae
imul
fisubrs
push
popf
nop
out
pop
add
leave
lods
pop
pop
inc
outsb
jl
sub
pushl
dec
fldenv
loopne
inc
mov
arpl
fcompl
inc
ss
lock
pop
mov
out
add
in
aas
cwtl
mov
xchg
inc
add
mov
fs
clc
mov
fiadds
mov
xchg
pop
cmc
out
push
and
daa
jle
pushf
add
mov
enter
xor
pop
rcll
xchg
int
test
sub
sbb
sub
ret
je
out
bound
hlt
mov
stos
aam
pop
inc
cmp
mov
ret
add
sahf
adc
rorl
add
je
dec
sbb
jmp
jle
imulb
enter
push
push
add
mov
xchg
popf
jns
xorb
add
and
add
arpl
xchg
jbe
jle
mov
sub
or
aaa
andl
xor
xchg
movsb
xchg
sub
sub
mov
or
dec
test
ret
mov
mov
mov
sub
popl
out
aam
pusha
xor
into
shll
stos
add
cmp
inc
incl
mov
mov
dec
pop
rorl
loop
xchg
jno
add
fwait
pusha
mov
cmp
movsb
in
out
cs
adc
xor
stos
mov
in
enter
sahf
cmp
xor
ja
pop
rorb
sub
call
pusha
call
mov
in
push
imul
loope
daa
xchg
add
testb
ja
ret
jp
adc
lret
mov
mov
push
pop
fsubrl
js
es
mov
add
lods
pop
xchg
int
inc
cmpsb
mov
xor
in
dec
or
sti
inc
or
push
push
dec
out
mov
in
mov
inc
sbb
push
xchg
fdivs
movsb
js
inc
daa
mov
loope
test
jle
ror
add
pop
adc
mov
out
and
mov
jne
jns
xor
lods
add
bound
imul
loope
cmp
fidivs
test
add
cli
rolb
xchg
mov
push
repnz
sar
pop
imul
les
xchg
mov
mov
icebp
cmp
div
rcrb
pop
mov
sbb
stc
cli
aas
repz
std
cmp
lock
in
adc
repz
dec
idivb
icebp
and
xlat
pop
andb
shrl
data16
sub
xchg
out
jl
faddl
mov
xchg
shrb
and
jg
mov
jnp
or
mov
dec
push
xchg
push
mov
xor
mov
push
jnp
stos
popa
add
adc
mov
add
and
push
mov
xchg
shll
imul
add
adcl
dec
hlt
add
mov
ret
or
add
pop
mov
add
addr16
cmp
fwait
mov
into
int
cwtl
clc
cs
cld
pop
lea
xchg
sub
fwait
xchg
xchg
ljmp
rol
cs
fsubl
adc
mov
push
negl
icebp
cmp
sub
jmp
pop
or
push
pop
dec
push
test
lret
pop
lock
add
mov
fs
pop
lret
push
xchg
push
inc
faddl
sub
cld
inc
loopne
mov
mov
subb
push
mov
dec
pop
mov
pop
add
mov
mov
fiaddl
out
push
insl
loop
pop
push
iret
imul
sub
adc
and
xchg
es
add
jp
test
repnz
xchg
psubw
mov
fsubrl
sbb
pop
xor
jg
inc
add
pop
int3
insb
xchg
add
daa
outsb
std
mov
xchg
add
out
xchg
or
push
push
popf
xchg
fs
lahf
pop
nop
scas
loop
pop
cltd
push
sub
xor
sti
xchg
adc
repz
packsswb
cld
je
divl
movsl
add
fisttpll
cmpsl
int
sahf
js
inc
and
repz
jno
add
mov
mov
aad
shl
iret
aam
or
xor
frstor
mov
pop
and
pop
mov
fidivrs
lret
repnz
frstor
rol
push
or
aam
pusha
or
or
pop
mov
aas
add
movsl
stos
jne
mov
add
mov
adc
jl
clc
mov
test
ljmp
hlt
outsl
gs
leave
sbb
and
test
push
lods
cltd
add
pop
xchg
lods
add
sar
jb
ror
and
mov
stos
sub
push
add
lcall
jecxz
and
popf
xchg
pop
sub
xor
loop
add
dec
sbb
daa
paddsw
inc
mov
popf
aaa
orb
push
mov
mov
out
movsl
cld
sbb
lock
and
sub
push
gs
punpckldq
sar
daa
lret
popa
out
cmp
mov
dec
xchg
dec
cmpsb
add
jne
stos
mov
rol
loop
jl
sbb
sub
adc
cmpsb
add
notb
sub
or
rorl
orb
fsubrl
xchg
adc
push
add
pop
sub
ret
into
andb
inc
jmp
daa
test
outsl
addr16
call
mov
insb
dec
sub
stos
and
in
lods
sti
pop
push
mov
push
in
nop
pop
mov
in
add
xor
pop
lret
jmp
mov
rcl
lret
sub
mov
movsl
inc
fstpl
adc
sbb
das
add
push
sti
and
popf
jge
and
les
sbb
pop
cmp
loope
cmpb
mov
dec
ret
mov
arpl
loope
push
mov
mov
push
sbb
popf
pop
sub
mov
xchg
jmp
sti
cltd
sub
xchg
push
ljmp
in
stos
sub
lds
mov
les
jne
mov
pop
test
mov
cmpsl
mov
adc
add
outsb
inc
add
in
sbb
adc
push
xor
push
and
push
push
jno
enter
rorb
popf
xchg
inc
outsb
int
loop
mov
test
repnz
inc
out
stos
xor
push
xchg
jge
nop
inc
push
fcoms
add
xor
mov
sbb
int3
adc
or
pop
lea
and
jbe
pop
inc
mov
xor
cmc
mov
pop
imul
add
jns
and
in
xor
and
jp
fwait
or
mov
push
icebp
std
pop
push
fsubs
out
loopne
lods
mov
adc
pusha
xor
mov
popa
out
jne
mov
mov
nop
arpl
ficompl
pop
pop
popa
and
xchg
dec
sbb
xchg
sets
pop
dec
jne
sbbb
sub
xor
pop
adc
ds
add
jp
pushf
insb
mov
fwait
mov
dec
int3
jmp
call
lcall
dec
and
shrl
mov
pop
xor
dec
test
pop
outsl
out
shlb
pop
pop
sahf
xchg
popa
ret
nop
cmp
iret
shll
std
jle
shl
add
inc
add
outsb
in
cs
enter
mov
xlat
jbe
add
nop
push
pop
push
add
add
sbb
mov
inc
inc
popa
pop
inc
mov
jge
into
xchg
lock
movsl
mov
xchg
int
inc
lret
xor
mov
jle
cmp
shl
fidivrl
mov
add
lea
or
scas
jl
mov
or
or
rorb
ret
rorb
nop
push
xchg
sub
sub
into
loopne
sbb
in
lret
xor
dec
push
test
mov
fucompp
cmpsl
out
fistl
shl
or
addb
pop
or
ficomps
sub
mov
push
popf
adc
jge
jp
ds
rclb
pushf
das
inc
sub
lcall
push
aam
mov
add
adc
dec
loope
in
cld
pop
add
pushl
ljmp
out
cmp
jmp
pop
add
loopne
sbb
inc
mov
addr16
mov
test
sbb
add
pop
mov
jbe
jo
in
cmp
add
popf
sbb
xchg
mov
enter
pushf
add
loope
lahf
xchg
add
jge
mov
xor
xor
fdivrs
imul
cmc
xchg
fcoml
adc
and
enter
lret
stos
inc
sub
push
add
and
mov
loop
push
movsl
adc
dec
push
punpckhbw
scas
pop
hlt
stos
mov
js
outsb
je
inc
jmp
adc
std
sahf
sub
into
lret
in
dec
sub
xor
mov
xchg
mov
loopne
push
lcall
dec
sbb
das
xor
push
adc
push
adc
dec
add
call
pop
test
xchg
cmpl
rorb
and
inc
xchg
aaa
xchg
sbb
imul
in
into
out
push
js
jne
xchg
mov
gs
testb
ljmp
push
sub
pop
in
mov
mov
adc
add
pop
insb
cmp
daa
push
jg
pop
lahf
dec
sbb
xchg
add
incb
into
adc
dec
jl
arpl
cld
cmpsb
cmp
push
xor
mov
cld
pop
sub
sub
mov
and
lds
mov
jnp
adc
movsl
fiaddl
sub
cmpsb
repz
cmpsl
fucomip
je
or
std
loop
je
fdivr
daa
add
mov
mov
sub
popa
cmp
cmp
daa
data16
mov
in
or
imul
push
push
push
mov
xchg
add
test
mov
call
insl
and
js
inc
sub
adc
call
ja
hlt
dec
xchg
fnsave
sub
push
push
xchg
sbb
add
sub
aaa
cltd
add
ja
aam
lahf
add
out
inc
jl
cmp
push
repnz
bound
clc
add
pop
sub
stc
daa
lret
dec
push
mov
jg
lds
cwtl
xchg
mov
mov
mov
fistps
aad
jge
pop
push
addb
out
out
lret
push
filds
push
jo
rolb
std
push
mov
inc
out
push
and
sbb
mov
push
add
mov
jo
jo
dec
push
je
jmp
add
lcall
fdivs
sbb
or
xchg
or
fstps
mov
dec
xlat
repnz
push
daa
stos
test
xor
inc
cltd
sub
das
inc
xchg
push
pusha
jmp
jns
in
jmp
or
pop
test
movsb
fisubrs
ret
fmull
mov
or
dec
mov
adcl
outsb
repz
cwtl
ljmp
repnz
imul
stc
cmp
pop
mov
add
cmp
xor
addl
in
aad
mov
fwait
daa
lcall
loop
sub
push
pop
or
cmc
jmp
ja
movsb
add
cmp
test
mov
mov
and
into
rcl
int3
in
stos
dec
lods
repz
fldl
adc
out
pop
outsb
sbb
push
loope
repz
jne
mov
add
pop
mov
mov
je
inc
sub
arpl
dec
dec
dec
enter
mov
cmpsb
call
or
fiaddl
cmp
outsb
sar
jb
cmp
mov
and
mov
add
outsl
mov
aaa
adc
cmc
pushf
pop
mov
shrb
das
loopne
mov
aaa
mov
rcr
or
lods
fiadds
add
stos
arpl
and
mov
push
xor
aam
popa
add
lcall
int3
stos
addl
test
mov
inc
sbbl
mov
cwtl
clc
or
cmp
out
loopne
lea
out
fldl
mov
cmpsl
mov
lea
mov
or
and
mov
popa
jl
faddl
shrb
and
push
nop
inc
dec
or
mov
popf
popa
cs
movl
mov
and
or
dec
rcrl
jmp
mov
sbb
push
pop
add
mov
sbb
or
repz
mov
and
jmp
add
test
aas
add
fadds
mov
mov
in
add
mov
push
or
xor
jmp
aam
into
xchg
xchg
mov
add
and
inc
xchg
xchg
das
outsl
jmp
jle
fimuls
or
fldt
inc
roll
fiaddl
sub
stos
mov
rorb
add
pop
mov
add
and
jmp
fs
adc
int
sub
loop
rcrb
adc
lea
fnstenv
leave
bswap
push
lea
popa
lcall
add
int
testb
int3
push
pop
dec
push
and
popa
adc
repz
xchg
lock
leave
xchg
add
add
sub
andb
and
cmp
mov
lods
dec
add
pop
jbe
jmp
packssdw
rcrb
enter
jns
add
pop
adcl
adc
addr16
xchg
jp
adc
jno
cmpsl
testb
inc
add
inc
jmp
pushf
mov
adc
int3
xchg
mov
dec
pop
mov
dec
fimull
pop
lcall
jne
lcall
sbb
cmc
mov
sub
sbb
mov
rolb
lret
pop
inc
shrb
inc
mov
mov
repz
add
add
add
push
notl
mov
imul
ficomps
or
scas
mov
pop
andl
cmc
data16
iretw
rcrl
shlb
addr16
adc
mov
decl
dec
and
test
aaa
enter
fisttpl
xchg
dec
adcb
popf
orb
daa
dec
adc
popf
frstor
rol
sub
push
push
rcrl
mov
cmc
popf
push
mov
inc
add
ljmp
shll
and
sti
pop
adc
loop
pop
repnz
nop
jnp
test
mov
repnz
fbstp
sub
jo
sub
out
dec
mov
cmp
mov
jp
xor
nop
push
in
pop
dec
xor
popa
pop
ljmp
jne
inc
aad
addr16
mov
or
stos
dec
push
mov
sub
js
in
repz
cmpsl
fists
jge
test
cmc
adc
cs
adc
adc
or
imul
push
or
mov
cmp
sub
out
or
mov
add
les
inc
xor
mov
push
les
sbb
pusha
int3
pop
mov
cmpsb
or
out
push
fists
adc
mov
int
add
insl
movsb
xchg
in
jl
inc
enter
mov
jbe
clc
jnp
push
mov
cmp
test
data16
xor
add
cmc
jmp
mov
mov
jp
shl
sti
ret
loope
sub
push
popa
sbb
mov
and
jo
xor
lcall
into
jl
or
xchg
daa
shl
xchg
nop
mov
pop
mov
add
fsubs
aaa
lds
out
jbe
test
nop
dec
push
jmp
jb
jns
sarb
mov
push
pop
xchg
pop
pop
stc
add
dec
push
sahf
jge
ds
aas
mov
sbb
mov
stos
fs
inc
and
push
shlb
sub
subb
ljmp
xchg
cmp
mov
ja,pn
out
cmp
repz
notl
sub
aad
inc
sub
jno
xlat
adc
roll
adc
repz
sub
jl
ret
adc
mov
adc
out
pop
mov
enter
add
xor
scas
cmp
and
lea
repz
add
decl
pop
subl
fldl
and
xor
and
xchg
xchg
call
and
and
test
adc
popa
daa
jmp
enter
mov
pop
and
dec
fisubl
sbb
pop
fcomi
and
jle
fs
inc
sub
dec
push
in
sub
andl
mov
popf
add
int
push
lret
push
daa
dec
add
jp
mov
dec
das
mov
data16
xor
cltd
cmpsl
jne
sbb
pop
pop
mov
add
push
sub
pop
push
stc
ja
mov
adc
mov
ror
adc
test
mov
stc
movsb
test
push
into
cmp
mov
shlb
jne
movsl
test
xchg
dec
push
push
jnp
push
xor
sbb
out
cmp
stos
lods
jge
add
dec
js
rorb
sar
cmp
jl
push
pop
xcrypt-ecb
cmpsl
mov
rcrl
sbb
mov
mov
mov
and
imul
jo
ja
mov
cmp
shl
and
jnp
pop
push
sbb
cmp
in
aam
and
lret
rolb
mov
movsb
scas
mov
in
dec
sub
dec
lea
cs
cmp
jno
lea
jno
fsubrl
int
push
jb
xor
cld
add
hlt
fs
adc
cmp
imull
outsb
push
and
mov
fdivr
xchg
leave
fldcw
shl
hlt
iret
hlt
les
mov
lods
adc
ds
mov
adc
cld
bound
mov
fistl
jo
pop
xchg
jno
adc
aad
jno
push
sbb
adc
lcall
aas
push
mov
inc
jno
es
nop
jns
jnp
in
inc
jge
xchg
cmc
cmpsl
adc
lods
push
mov
pop
inc
push
dec
loopne
aas
cmp
pop
cmp
adc
add
aad
lods
ficompl
sbb
inc
push
mov
cmp
in
cs
adc
add
xor
jle
repz
cmp
mov
in
cmc
xchg
sbb
mov
lock
xchg
pop
stc
adc
cmp
mov
imul
or
mov
mov
jo
lahf
mov
and
xchg
js
xchg
xchg
adcb
adc
call
outsl
leave
fmull
adcl
mov
add
mov
xor
jmp
push
push
push
pop
dec
pop
addb
sub
mov
xorb
add
nop
je
add
xor
popa
add
jl
sub
xorl
jle
scas
les
cmp
in
jne
subb
mov
pushf
aad
sub
lea
inc
sbb
and
out
add
pop
pop
movsl
out
dec
testb
es
xor
outsl
fwait
add
add
push
xor
adc
mov
loopne
loop
pop
jo
je
leave
scas
cmp
dec
sub
sbbb
pop
in
in
push
int3
sub
cli
push
or
addb
push
xor
add
shll
pop
xor
mov
push
dec
push
xor
or
dec
les
pop
xor
shlb
pop
std
adc
jg
mov
sub
mov
add
mov
sub
lcall
mov
xchg
mov
dec
icebp
xor
cmp
sub
mov
rcr
repz
fwait
mov
jge
mov
xchg
sbb
insl
sarb
shrb
sub
adc
data16
test
cmpl
lock
dec
sub
ret
sub
popf
in
xchg
mov
adcb
jle
scas
jl
or
stos
mov
pop
repnz
push
cli
fsubrp
data16
sbb
aad
loopne
ficoms
cs
mov
pop
hlt
and
mov
add
jmp
lcall
mov
inc
xor
loopne
pop
dec
pop
or
shl
mov
test
jp
pop
in
rclb
popf
cmc
jns
push
fimuls
mov
inc
adc
popa
push
mov
inc
sbb
orb
jmp
xchg
flds
pop
or
aas
mov
add
scas
enter
shlb
mov
add
jge
mov
orl
jbe
or
cmc
loop
push
mov
sahf
push
pop
movsl
dec
mov
add
push
hlt
and
sbb
inc
clc
dec
sub
jl
cld
xchg
or
jmp
sub
loopne
mov
push
fnstsw
test
test
in
push
sbb
dec
xchg
test
and
clc
pusha
inc
dec
mov
repnz
inc
data16
add
cltd
ds
popa
pop
leave
stos
test
shll
or
mov
push
mov
loop
sbb
cmc
push
scas
mov
or
cltd
or
xchg
popa
shrb
int3
mov
inc
mov
je
call
je
sbb
push
mov
je
fsubl
daa
nop
enter
push
sahf
ja
insl
arpl
loopne
enter
and
mov
insl
test
push
jmp
sbb
push
popf
mov
add
fstpl
or
das
and
dec
xor
add
pusha
xchg
sti
int3
imul
and
jp
cmpsb
xchg
ror
test
dec
adc
es
jmp
imul
and
orb
xor
add
mov
test
lahf
sub
popf
jb
popf
mov
pop
mull
xchg
jne
dec
test
out
add
fidivrl
icebp
sbb
call
clc
aam
pop
inc
mov
cmc
adc
in
mov
pop
repz
or
push
mov
lock
inc
sub
mov
imul
pop
int3
js
mov
jno
mov
out
xchg
int
inc
jmp
imul
push
in
shlb
adc
popf
lods
dec
cwtl
push
loope
sahf
in
inc
mov
out
sbb
int3
clc
fs
subb
rcrb
flds
pop
inc
lret
mov
dec
xor
movsl
test
clc
adc
xor
loop
fists
adc
add
cmpsl
mov
xchg
shl
ret
loopne
xor
aas
mov
pusha
mov
mov
xor
xchg
mov
add
enter
pop
data16
lock
loope
sbb
sub
add
divl
les
popa
lcall
xor
popa
mov
mov
clc
add
jno
shll
add
dec
cmp
push
pop
and
xor
jo
mov
adcb
add
stos
xor
sbb
mov
jb
jno
dec
out
test
mov
dec
sub
cmp
cmp
insl
ds
je
xchg
sub
loope
dec
test
cmp
push
mov
xorl
push
insb
js
int
std
jle
or
in
in
sub
and
push
or
and
pavgw
mov
lock
or
and
sbb
lahf
cmc
sbb
sbb
pop
dec
push
xor
sub
adc
mov
gs
add
adc
mov
jns
subb
add
mov
pop
stc
push
adc
imul
decb
arpl
clc
adc
push
stos
jp
add
mov
jns
xchg
outsl
inc
fistpl
jle
xchg
and
pop
sbb
fiadds
sub
xlat
or
cmp
pop
sbb
jmp
and
ficomps
or
add
cmp
push
andb
movsb
cld
and
mov
jbe
sub
lods
rclb
mov
xor
adc
into
add
pop
js
fscale
push
addl
mov
push
xor
xor
or
sbb
jne
sbb
popf
icebp
xchg
subl
lds
and
pop
push
jns
sub
jmp
push
jne
and
xchg
in
lds
adc
inc
decl
ret
fistps
pop
dec
adc
fistl
rcr
adc
add
or
jle
rcrl
and
add
and
push
dec
inc
mov
and
movsl
in
insb
inc
xchg
mov
shr
jle
mov
or
loope
into
dec
outsb
mov
or
into
xor
sub
add
mov
mov
mov
movsl
jns
subb
xchg
shl
sti
or
mov
xchg
mov
dec
xchg
std
outsb
cwtl
ljmp
jae
mov
dec
jo
xor
lcall
push
lcall
sbb
je
incb
pop
sbb
cmp
lds
popa
add
nop
stos
or
cmp
dec
fs
push
outsl
mov
xlat
xchg
jo,pt
pushf
movsb
sarb
jns
dec
repnz
add
pop
pop
xchg
out
xchg
mov
push
jb
pop
subl
inc
mov
lods
mov
adc
and
add
xchg
ficoml
mov
mov
mov
xor
add
popa
add
inc
rclb
sub
int
das
xor
xchg
mul
add
lret
push
out
imul
mov
cmpsl
adc
fbstp
mov
pop
imulb
or
lods
dec
mov
xchg
test
or
lock
sbb
stos
adc
sbb
das
push
arpl
fiaddl
jl
pusha
je
jno
add
adc
mov
fisubl
xchg
and
push
aaa
loope
stc
int3
bound
mov
xor
outsb
clc
add
inc
outsb
xor
mov
sti
sub
mov
pop
ljmp
push
sub
pusha
ja
out
dec
das
dec
cli
adc
mov
cmp
jg
mov
roll
pop
pop
pop
mov
gs
imul
mov
out
add
ficomps
dec
jg
repnz
addl
cwtl
mov
mov
sub
popa
sbb
pop
mov
fsubrp
and
repz
pop
jg
inc
mov
aad
push
pop
sub
jno
and
lock
xchg
daa
movsl
add
sbb
dec
loopne
outsb
sub
sbb
mov
mov
popf
enter
xor
std
gs
push
fisttpl
pop
adc
dec
mov
repnz
aam
or
test
lret
repz
rolb
popf
xchg
mov
pop
lods
pop
add
mov
push
cmp
mov
cs
les
nop
mov
mov
out
xchg
cld
testb
mov
gs
int3
ds
add
pop
xchg
sti
inc
sub
dec
push
lret
jne
cmp
or
cmp
shll
inc
jo
mov
mov
das
outsl
mov
mov
loop
daa
cmpsb
aam
in
push
loopne
jae
in
jo
bound
mov
xor
out
inc
xlat
mov
aaa
aam
in
test
sub
js
std
pop
movq
pop
xor
add
in
sbb
shr
push
dec
jmp
das
or
mov
push
mov
cmp
and
aaa
cmp
loopne
lcall
pusha
or
xor
js
mov
inc
and
mov
stos
je
imulb
mov
pop
popa
jmp
cmovno
cmpl
incb
xchg
pop
pop
mov
imul
mov
sub
xor
xchg
mov
gs
ds
cmp
adc
xchg
xor
mov
xor
add
mov
testl
cli
pop
aas
adc
outsl
mov
add
cltd
rcl
jne
in
cmp
cs
mov
movsl
pop
in
push
dec
lods
movsl
in
pusha
push
cld
or
jo
popl
out
sub
pop
add
pop
les
sbb
mov
lods
mov
ds
ret
mov
rcr
xor
mov
pushf
push
shl
popf
push
gs
and
sub
adc
cmp
and
popf
pop
sbb
mov
js
mov
hlt
ret
int
push
cs
or
xchg
jns
dec
jmp
mov
shr
roll
or
cld
fwait
jbe
add
imul
in
fisubs
adc
cmp
mov
sub
nop
mov
aaa
call
lahf
add
vmovntdq
xorb
adc
inc
jp
and
or
ret
fldcw
in
xor
push
sub
fnstsw
sub
lcall
adc
and
xor
mov
stc
and
ret
in
aaa
mov
pop
aad
pop
push
das
fiadds
adc
or
or
jp
mov
sub
push
mov
leave
sbb
test
aad
add
or
add
xor
mov
cmp
add
stos
inc
mov
xchg
adc
pushf
dec
cmpsl
leave
xchg
repz
push
sbb
push
or
leave
jnp
jae
adc
pop
add
aam
adc
es
aas
test
push
push
imul
rclb
outsl
jp
popa
add
push
in
int
rcrb
in
sub
jno
and
outsl
pop
add
loopne
imul
shrl
mov
xlat
mov
xor
cmp
push
mov
xor
cmpsl
xchg
mov
xchg
bsr
pop
mov
negl
dec
push
add
adc
sub
js
mov
cmp
xchg
les
mov
xor
pcmpgtb
inc
sahf
mov
add
mov
in
adc
dec
das
in
xchg
dec
daa
js
mov
adc
pop
int3
adc
out
push
or
jno
pop
cmp
fs
mov
mov
cmp
and
mov
xor
push
sub
lret
icebp
flds
cltd
pop
loope
mov
mov
ljmp
pop
dec
inc
lcall
notl
int3
mov
pop
push
testb
mov
cld
sbb
outsl
sub
and
sub
jb
inc
pop
sbb
xor
dec
pop
popf
pop
lcall
stc
or
pop
in
fists
mov
movsl
pop
sub
inc
ret
xor
mov
lods
mov
nop
lods
sub
imul
andb
sbb
in
xlat
dec
mov
cmp
rcr
shlb
imul
add
jmp
or
cld
jbe
fsubrl
xlat
rorb
xor
jbe
imul
in
fs
sarl
dec
sub
pop
and
js
pop
push
add
das
and
xchg
aam
repz
mov
and
nop
push
arpl
loop
lcall
dec
pop
pop
jo
adc
aas
sub
imul
dec
mov
das
outsb
dec
and
add
cmp
stc
and
push
and
pop
adc
sub
mov
adc
dec
js
popa
add
push
mov
jo
add
and
push
into
xchg
adc
imul
test
inc
dec
addl
adc
dec
cmp
mov
jp
add
sub
mov
inc
stc
xor
cmp
push
mov
nop
mov
in
add
mov
cmp
jp
inc
andb
lea
pusha
add
mov
popa
add
popf
into
lods
add
arpl
scas
cmp
push
inc
fisubrl
push
mov
mov
or
int3
out
loope
cmp
addb
fldl
push
sub
popa
dec
mov
xchg
adc
jnp
bound
fnstenv
push
add
or
jle
ja
rcll
lahf
mov
cmp
sub
or
dec
in
jno
jg
adcl
push
push
pop
pop
mov
popa
push
outsl
and
mov
xor
xor
out
subb
push
aad
xlat
lds
add
jle
push
sub
xchg
add
cmp
add
pop
sarb
daa
cmp
leave
mov
mov
push
ljmp
mov
adc
mov
lods
mov
in
xchg
mov
adc
aad
lcall
dec
jp
dec
ljmp
xchg
sub
add
mov
cmp
jp
in
cld
ja
stos
enter
enter
mov
mov
icebp
adc
xchg
das
insl
addr16
mov
dec
call
add
push
xchg
xchg
daa
cltd
dec
push
jne
pop
aas
push
jge
mov
test
dec
or
add
sub
ljmp
bound
or
fmuls
mov
mov
xchg
push
xchg
ficompl
pop
sbb
lret
pop
jbe
les
inc
in
cmp
or
push
sub
xor
xchg
sti
das
insl
cmp
cmpl
and
jmp
mov
subb
adc
pop
push
dec
inc
mov
mov
out
cmpsb
outsl
lahf
fcoml
pop
aad
sbb
dec
xchg
lret
stc
nop
in
jae
mov
jno
add
shlb
insb
ret
mov
sarb
and
and
mov
test
add
push
stc
add
fwait
adc
add
in
das
xchg
push
cli
imul
js
sub
shrl
outsl
daa
popa
cld
inc
push
mov
mov
pcmpgtw
sub
pop
push
pop
ja
dec
shr
movsb
sbb
and
push
xlat
rcll
cmp
popf
out
pushf
imul
je
dec
lods
inc
lds
andl
out
mov
aas
popf
dec
iret
inc
cmp
jl
imul
xor
popf
sbb
inc
xor
je
ficoml
aam
push
arpl
stc
push
imul
out
or
inc
add
shlb
jae
ss
push
pop
cltd
lods
adc
and
xor
in
mov
shll
inc
sbb
fwait
dec
or
pop
enter
jge
mov
mov
add
sti
cmp
sub
add
into
inc
lcall
cs
mov
das
aaa
dec
mov
or
sbb
dec
aad
icebp
cmpb
imul
add
mov
push
adc
popf
insl
inc
outsl
mov
adc
sub
popa
ss
cmp
cwtl
mov
mov
pop
or
mov
push
dec
inc
push
push
adc
mov
xor
lock
sti
pop
lret
rorb
adc
daa
fs
sbb
insb
je
add
cmp
or
outsb
aam
mov
pop
pop
xchg
sub
ret
add
xchg
enter
add
mov
jo
idivl
add
imul
addr16
mov
outsb
mov
push
mov
jnp
add
cmp
call
sub
clc
and
mov
mov
adcb
mov
cmpsb
loopne
mov
and
shlb
pop
enter
mov
sub
pusha
mov
repz
scas
popf
cmpsl
jge
test
add
dec
fs
jmp
stc
je
lock
in
mov
je
mov
stos
xchg
add
call
jbe
xor
mov
lea
popa
adc
adc
inc
mov
mov
xor
or
cmp
ret
sbb
cmc
inc
fadds
aad
ret
inc
rcrb
sarl
daa
test
mov
pusha
aas
cmpsl
jbe
add
popf
sahf
dec
mov
aam
inc
sub
push
pop
inc
adc
int
out
faddp
add
adc
in
dec
inc
loopne
iret
arpl
rorl
pushf
fsubrl
or
out
jb
xchg
adc
xlat
or
pop
data16
add
test
arpl
mov
jb
out
in
cwtl
and
xchg
push
or
add
js
and
cmp
daa
fldt
js
out
mov
popf
nop
setne
pop
popf
cld
call
sub
frstor
roll
push
inc
mov
lret
cmpsb
sbb
xchg
cs
mov
and
push
sbb
les
or
out
mov
push
mov
push
inc
dec
sub
sti
jo
roll
jno
sbb
mov
mov
xlat
inc
xchg
js
lods
add
mov
push
into
ficoml
mov
cmpsl
dec
mov
and
jno
xchg
fs
scas
or
xor
int3
or
loope
stc
rcll
xor
icebp
fsubrl
push
ss
cmp
pop
int3
ret
cmp
cmpsb
cwtl
mov
loope
mov
xor
sti
xchg
mov
inc
dec
or
ret
add
or
xor
fistpl
shrl
push
jae
jo
adc
out
test
xchg
add
orb
aam
inc
and
mov
push
adc
add
das
inc
lahf
xor
rcrl
data16
xchg
test
xor
loope
xchg
repnz
push
mov
sub
fcom
scas
mov
popf
mov
adc
fwait
add
add
les
sbb
popf
add
cs
add
jl
pop
xchg
movsb
mov
push
adc
or
ds
add
out
out
inc
pop
pop
loopne
xchg
fimull
test
add
sub
in
cmp
jle
test
push
imul
mov
pop
and
leave
dec
mov
arpl
sbbb
sbb
push
adc
loope
pusha
rolb
pop
dec
push
aad
sbb
je
inc
xor
jmp
sub
movsl
sbb
push
sti
xor
add
mov
je
add
lcall
ljmp
out
fwait
sbb
or
add
jg
mov
pop
mov
push
jo
jbe
fidivs
add
push
je
imul
add
lret
cmc
cmp
repnz
clc
xchg
daa
xchg
sub
imul
test
sti
jp
dec
ljmp
addr16
or
sbbb
mov
int3
add
sbb
cld
jae
jo
repz
scas
mov
scas
and
aas
gs
outsb
rorl
sahf
test
mov
rclb
jo
jbe
mov
roll
sub
popl
dec
out
or
add
subb
test
adc
jo
fucomp
sub
add
shrb
sbb
cmc
mov
add
movsl
lea
add
test
push
or
jg
iret
pop
dec
rorl
push
mov
std
stc
dec
pop
ret
fsubr
das
and
sti
cmp
insb
mov
into
lret
inc
sbb
or
jae
rcr
enter
add
mov
or
in
fsubl
sbb
jp
mov
mov
stos
sub
mov
xorb
xchg
dec
rclb
out
add
clc
mov
loopne
andb
push
sbb
cmp
lock
movsl
add
or
psraw
add
mov
stos
sub
out
push
dec
push
test
cmp
call
mov
pusha
fwait
sbb
mov
or
xchg
mov
add
push
fmuls
lret
dec
stc
lds
jmp
push
int3
pop
pop
mov
push
mov
cmp
adc
pop
adc
adc
clc
sbb
add
gs
pop
dec
add
lods
pop
add
les
mov
dec
or
jg
push
jge
mov
fsub
or
push
gs
js
mov
sub
pusha
das
into
fsub
aas
bnd
ret
mov
jae
push
push
push
pop
or
fldenv
push
jae
cmp
add
push
push
sbb
push
addb
cmp
andb
dec
clc
int3
cs
aas
mov
inc
jmp
jbe
bound
fsubrl
adc
dec
repnz
add
and
add
adcb
js
call
adc
jb
popf
pop
fbstp
xchg
cmpsb
jmp
dec
lds
aas
sarb
xchg
mov
xor
add
xor
xchg
ja
jecxz
and
sar
lret
paddsb
xchg
jnp
fs
inc
movsb
outsb
pushf
cmp
stc
addb
xor
jae
jmp
mov
icebp
ret
xor
inc
pop
fsubr
push
pop
push
cli
jge
sub
daa
les
sbb
jns
mov
cwtl
sub
cmp
mov
imul
xchg
inc
sbb
ljmp
cmp
test
inc
mov
pop
mov
wbinvd
dec
xor
mov
popa
and
sub
cs
add
inc
push
xor
test
test
cmp
sbb
shl
filds
andl
jmp
jmp
or
popf
mov
add
xchg
hlt
lahf
fcmovbe
mov
mov
jnp
jns
sbb
add
mov
cmpl
push
bnd
fistpl
dec
add
insb
mov
orl
js
outsb
notl
pop
test
sub
in
mov
jecxz
inc
push
mov
xchg
shrb
rorb
loopne
fnstsw
add
ds
sub
mov
stc
sbb
mov
dec
xchg
pop
repz
add
xlat
xchg
fs
mov
lods
dec
xor
or
mov
out
dec
fisubs
mov
mov
aad
mov
scas
and
mov
sbb
mov
in
adc
mov
inc
cmpsl
sbb
xchg
mov
loope
pop
mov
stos
cmpsb
leave
or
lret
xchg
pop
fs
lahf
push
fldcw
stos
or
push
push
enter
cmp
jmp
je
pop
mov
ret
scas
leave
into
sbb
test
push
dec
faddl
ss
mov
inc
insb
add
mov
clc
xchg
dec
sbb
gs
mov
sarb
cmp
dec
mov
popf
dec
insl
shlb
int
lock
ret
gs
stos
sti
sub
movsl
insl
add
rcrb
and
push
mov
cmp
jl
or
add
mov
add
and
stos
jae
imulb
mov
jmp
mov
vsubsd
cmc
dec
inc
mov
int3
or
xchg
dec
xor
repz
mov
sub
sub
mov
pop
cmp
xchg
jmp
mov
mov
in
lock
jo
mov
dec
add
xchg
mov
jg
cs
sub
cmpsb
and
mov
insb
rcrb
pusha
test
fildll
in
cld
test
imul
call
fcomp
mov
xchg
inc
scas
sbb
push
addr16
ret
pop
push
xchg
lret
xor
out
inc
iret
fistps
inc
pop
cld
fnsave
pushf
into
clc
pop
sbb
call
aad
mov
add
das
pop
lcall
rcrl
jecxz
add
gs
inc
add
mov
dec
out
adc
sar
xchg
dec
cmpsb
andl
movsl
divl
push
mov
xor
or
push
jle
and
clc
imul
xor
dec
sahf
push
and
in
flds
xor
imul
shlb
lret
adc
test
jae
popa
mov
loope
jp
pop
out
inc
inc
pop
cltd
cmc
mov
lds
mov
lea
je
imul
or
in
out
cmp
add
adc
push
pusha
push
pop
pop
outsb
inc
pusha
mov
mov
and
adc
ret
mov
in
stc
sbb
out
in
or
jno
xor
imul
adc
dec
add
lods
pop
dec
sbb
out
popa
mov
pusha
pop
mov
sub
popf
fnstsw
insl
out
jecxz
jle
or
cmp
dec
nop
enter
jno
in
push
add
mov
mov
in
and
xchg
nop
sbb
add
divl
push
pusha
arpl
adc
dec
pop
stc
add
mov
add
add
test
shrl
mov
xchg
popf
inc
sub
cld
add
inc
jmp
aas
mov
adc
popf
jns
adc
pushl
popa
add
divl
adc
in
adc
ret
cmp
lea
bound
and
mov
dec
or
and
out
enter
jmp
in
adc
daa
xorl
push
xor
test
ja
adc
push
lea
adc
outsl
push
or
or
push
decl
imul
jge
push
pop
adc
add
popf
imul
fnstsw
xchg
adc
jno
imul
or
es
pop
add
mov
cltd
fcomi
lcall
and
push
or
out
or
js
pop
jne
push
pop
mov
cmp
test
ret
pop
jmp
jg
xor
push
or
and
clc
ja
sub
movsl
test
mov
sub
sub
addl
dec
xchg
xchg
adc
xchg
pop
xchg
inc
mov
cmp
mov
mov
cld
jecxz
outsb
xor
inc
mov
ja
dec
sarb
jmp
popa
int
ja
mov
push
pop
test
adc
xlat
in
fsubs
dec
adc
dec
in
fs
mov
in
cmpsb
negb
or
fs
fadd
sbb
mov
mov
ficoml
movsl
lds
adc
xchg
lret
add
imul
cli
push
jno
pop
adcl
jg
pop
popa
dec
pop
popf
dec
maxps
loop
cmp
shll
mov
add
dec
rorb
mov
mov
pop
add
pusha
imul
push
popa
push
mov
pop
sub
rorb
lret
sub
loop
test
add
mov
xchg
lcall
jl
jns
cmpl
inc
shll
call
pop
pop
pop
movsl
bound
xor
clc
pop
scas
es
ret
stos
pop
add
fidivrl
imul
mov
dec
inc
pop
mov
out
pop
cs
mov
and
orb
ret
movsb
aaa
add
xchg
inc
add
add
in
in
sbb
mov
adc
clc
sbb
jg
sbb
aaa
sub
jle
jg
cmp
ljmp
mov
mov
imul
and
jl
fiadds
mov
inc
sub
ret
notb
push
pop
pop
pop
adc
mov
push
aaa
sub
mov
stc
cmp
shll
push
jbe
or
repnz
dec
or
scas
lret
xor
and
jmp
cmpsl
faddl
sbb
out
and
int
fwait
mov
call
adc
xchg
add
mov
add
lea
pop
mov
sub
imulb
std
adc
jmp
pop
and
call
cmp
icebp
outsb
addr16
in
dec
or
testb
sub
jb
mov
loopne
add
pop
add
into
imul
or
pusha
push
adc
fiadds
xor
jbe
cwtl
mov
aas
mov
pusha
stc
scas
orb
pop
add
rorb
xchg
js
dec
dec
ja
lock
xchg
incb
pop
adc
imul
inc
cmp
pop
cmp
dec
mov
add
pop
mov
stos
cmpsb
add
sbb
movsl
jp
test
push
pop
lea
pop
ljmp
mov
cld
add
inc
or
push
sub
notb
adcl
push
data16
xchg
cmpsb
adc
test
loope
mov
inc
dec
nop
fisttpl
insl
dec
es
mov
xchg
add
lea
sbb
lock
aas
add
mov
aam
es
pop
aam
lods
andl
out
orb
popf
fisttpll
iret
iret
movaps
mov
mov
or
ljmp
into
jmp
std
sub
jle
shll
sbb
jne
add
call
cmp
clc
xor
leave
jb
xchg
int
lds
sub
cs
jg
cwtl
add
dec
inc
pop
fs
pop
xor
popf
adc
and
adc
or
jbe
daa
mov
scas
imul
fwait
add
and
push
test
sbb
adc
or
test
mov
lea
fstpl
sbb
jnp
stos
rcl
xchg
das
pop
test
int
add
lods
lret
in
xor
rolb
lods
fldl
dec
stc
das
push
fcos
jp
or
icebp
xchg
leave
jno
cmpsl
fadds
dec
fistl
or
out
nop
adc
sub
xor
inc
mov
mov
push
mov
push
add
push
sub
loopne
xchg
push
mov
jo
add
mov
faddl
sbb
loope
mov
and
rolb
push
jp
and
pop
mov
dec
mov
stos
enter
sub
mov
inc
in
push
pop
popa
mov
xchg
icebp
xchg
add
push
fs
call
iret
push
imul
les
in
das
jae
aaa
or
pop
mov
cmpsb
cmp
cs
adc
sbb
mov
sub
pop
xchg
insb
and
into
dec
and
adc
sub
rolb
fnsave
mov
xor
pop
les
push
add
fisttps
jmp
xor
mov
xchg
dec
scas
sub
dec
push
and
cld
movl
xchg
jle
addb
test
mov
jne
mov
dec
xchg
test
add
fsubl
fmul
sbb
jl
pop
cmpsl
and
out
mov
aad
add
cmp
adc
popa
mov
test
cmp
sahf
push
cmp
cmp
daa
xor
add
pusha
fs
xlat
in
push
sbb
loope
rorb
add
cmp
cmp
int
cld
inc
push
hlt
fildl
jae
mov
in
add
pop
cli
cwtl
jno
xlat
cli
negl
pop
pop
pushf
pushf
roll
or
cmpl
cmc
aad
pop
movsl
xor
push
aas
pusha
pop
fwait
xchg
stos
add
imul
hlt
or
or
nop
push
xchg
sbb
test
pusha
lcall
or
jnp
shlb
cmc
mov
fdivrl
sub
and
mov
ds
pop
daa
dec
sbb
add
inc
cli
mov
les
inc
fldenv
adc
sbb
dec
mov
ret
hlt
xor
mov
nop
sbb
insb
retw
jno
pop
mov
lods
mov
xor
mov
mov
mov
scas
xchg
sub
adc
daa
sahf
iret
mov
pop
sahf
scas
inc
std
call
mov
mov
cmc
call
push
xchg
cmc
test
push
loopne
pusha
popa
jb
lahf
or
dec
jae
add
pusha
or
aaa
mov
inc
popa
fcoml
jbe
jno
and
outsl
lds
mov
clc
jge
cmp
jp
add
test
push
outsb
cld
xchg
inc
ficompl
js
jle
mov
cmc
push
lods
dec
in
sub
fildl
xchg
xor
xor
pop
mov
jmp
out
fwait
sub
pusha
data16
and
mov
mov
testl
mov
dec
cltd
jl
ret
fnstsw
push
leave
push
cmp
xchg
and
and
rorl
outsl
enter
xor
ds
mov
or
popa
xor
add
cld
add
mov
jge
jo
outsb
jno
ret
lea
dec
insl
shll
in
call
mov
das
jb
mov
add
iret
lea
jno
pop
push
mov
lea
out
jg
jo
fs
mov
xchg
loopne
in
fwait
popa
mov
addb
and
movsl
add
cltd
dec
push
xor
inc
les
adc
sbb
adc
mov
mov
mov
ss
sub
add
arpl
call
sub
mov
mov
test
sub
test
adc
mov
sub
scas
pushf
push
add
mov
add
adc
xchg
popa
inc
adc
push
mov
pop
popf
xor
dec
mov
in
and
sahf
push
adc
pop
popa
pop
andl
or
dec
pop
xchg
in
sub
sbb
add
into
cmpb
pushf
inc
pop
cwtl
mov
cmp
fs
fwait
shlb
inc
pop
jns
insl
js
andb
out
mov
add
sub
sub
sbb
movsb
jbe
cmp
mov
mov
cmp
cli
xor
xor
cmp
outsb
jle
shrl
cmpsl
aas
fimuls
adc
mov
iret
add
addb
pop
mov
inc
repnz
sub
adc
imul
popa
mov
repz
adc
lds
inc
add
inc
dec
ror
push
imul
pushf
inc
popf
and
add
and
sub
notl
sub
mov
out
call
testl
fsincos
cs
inc
mov
add
mov
fstps
dec
cld
and
cmp
loope
gs
jmp
lea
stc
push
lods
sub
pop
fdiv
pop
add
xlat
push
xor
push
icebp
pushf
jmp
xchg
sarb
sbb
popf
adc
xchg
fmuls
repz
or
test
add
cmp
incb
cmp
daa
mov
gs
loopne
movsl
mov
xchg
pusha
jmp
cmp
adc
mov
sbb
xchg
maskmovq
testl
sub
sarl
lods
and
test
pusha
pop
jne
test
arpl
icebp
pop
out
lds
stos
aas
outsb
jno
mov
adc
hlt
loopne
add
xchg
pushf
xchg
mov
dec
sub
negl
push
add
mov
inc
push
ret
push
push
cmp
push
pop
pop
call
leave
pop
sahf
dec
stc
xor
movsl
imul
lcall
push
push
cmpl
cmp
or
sub
es
and
push
jnp
bsr
xor
aam
mov
dec
xchg
cmp
mov
lock
pop
andl
jle
and
or
into
add
fcoml
addl
insl
sub
jno
push
out
dec
je
pop
add
loopne
dec
add
mov
inc
sbb
push
adc
fstpl
test
inc
adc
addr16
mov
add
lock
fs
in
push
ja
emms
cld
adc
pop
out
add
mov
push
add
rcrb
mov
mov
stos
enter
stc
sbb
xchg
push
pop
pop
mov
add
outsl
xchg
and
in
test
cmovle
sub
push
push
or
stos
dec
ja
popf
std
push
movaps
lea
daa
jmp
mov
mov
jp
xor
sub
in
push
pop
and
loopne
enter
repnz
icebp
aas
into
add
and
jns,pn
lock
mov
sub
mov
lds
mov
add
sbb
pop
cmpsb
jo
add
jae
shrb
popf
mov
sahf
cmp
pusha
mov
or
lods
push
mov
cld
add
int
stos
sahf
add
mov
outsl
dec
pop
int
je,pn
out
push
add
sub
pusha
cwtl
adc
out
mov
xchg
and
movsl
dec
push
lds
or
xchg
ftst
and
outsb
fildl
lret
je
inc
call
outsb
or
jno
pop
push
cmp
dec
ljmp
pop
shlb
popf
cmpb
sahf
nop
pop
and
add
push
cwtl
imul
aam
lret
or
pop
add
lret
add
lahf
inc
rorb
dec
cmpsl
xlat
aaa
clc
add
sti
sbb
popa
out
fcoms
jno
outsl
adc
iret
shll
aaa
inc
es
dec
js
sub
sub
comiss
mov
in
clc
test
mov
cmp
inc
mov
mov
mov
mov
jge
outsl
push
lock
test
mov
clc
xchg
ja
fnsave
add
gs
dec
inc
sti
popa
lock
add
es
xor
mov
or
cmp
test
fsubrl
cmpsb
mov
mov
pop
mov
mov
xchg
mov
sbbb
stos
push
les
lds
push
push
das
ja
fnstcw
add
dec
mov
repz
aaa
jns
rcl
dec
adc
dec
mov
movsb
add
xor
mov
aas
push
sub
loopne
jnp
popa
jge
sbb
jne
cmp
xlat
add
mov
mov
jl
insl
cmp
fwait
std
les
es
inc
jle
pop
xor
fstpt
sbb
neg
mov
cwtl
and
dec
inc
sbb
jns
repnz
cmp
xchg
aad
mov
push
add
test
pop
dec
shll
push
mov
pop
mov
adc
das
shl
push
sub
or
jbe
add
jmp
xchg
pushf
out
call
xchg
and
sbb
mov
cmp
add
popf
int3
dec
cmc
test
pushf
loop
adc
scas
outsl
sub
jge
mov
add
xor
mov
stos
xor
rcrb
and
outsb
fwait
mov
jmp
or
sbb
pop
movsb
stc
fisttps
dec
mov
in
aad
inc
pop
shll
adc
sub
in
pop
adc
xor
push
pop
movsb
js
nop
mov
popa
xor
loope
inc
shll
xlat
dec
fmul
popa
sub
mov
push
mov
pop
push
fidivrl
mov
mov
inc
daa
testb
test
lea
xor
aas
arpl
outsl
popl
loop
int3
add
mov
icebp
add
sub
das
xchg
mov
and
cmpsl
in
test
adc
dec
movswl
pop
into
jmp
ficoms
andl
push
mov
and
mov
adc
lock
adc
outsl
testb
and
sarl
jp
xor
ret
icebp
pop
push
imul
loop
xchg
sbb
jo
pushl
xchg
add
or
add
pop
push
pop
jae
js
and
cmpsl
xor
cwtl
mov
std
adc
jbe
and
jo
in
push
daa
clc
pop
in
dec
hlt
shl
jbe
adc
cmp
sub
mov
cmp
adc
add
cmp
jno
stc
adc
sub
sbb
sbb
add
filds
movsb
mov
insb
mov
sub
fst
daa
mov
iret
add
cmp
mov
sub
sbb
dec
mov
mov
rcr
shl
xlat
adc
and
movsl
test
cli
jle
cmp
and
cld
jo
and
pusha
mov
or
mov
mov
lock
ljmp
xor
icebp
jmp
and
sbb
adc
add
mov
push
pop
xchg
test
jnp
adc
imul
jns
xchg
add
xchg
cli
add
cld
sbb
pop
das
ret
jg
shr
iret
add
jmp
xchg
scas
shrl
scas
andl
stos
test
sub
rolb
loop
int
mov
push
in
mov
cltd
call
push
dec
insb
int3
jns
add
or
ljmp
inc
sbb
mov
std
or
xchg
jge
repz
lock
jge
out
sbb
cmpsl
in
stos
lods
test
jns
out
jl
mov
in
and
cmpsb
and
popf
in
mov
cli
pusha
adcb
add
popa
fnsave
or
xor
xchg
gs
out
sub
add
daa
or
dec
popa
mov
and
out
sbb
les
pusha
lods
test
add
mov
imul
xor
xor
scas
push
dec
scas
xor
popf
xor
jns
test
or
jmp
xlat
jnp
add
in
mov
add
loopne
es
or
shlb
inc
cmpsl
push
mov
jbe
mov
xor
mov
xchg
lds
mov
and
popf
pop
jp
and
pop
aaa
adc
incl
into
aam
dec
fwait
xor
mov
ret
pop
out
lods
inc
fidivrl
scas
jmp
pop
push
xchg
push
mov
cmp
dec
adc
mov
pop
sbb
faddl
mov
sub
lods
and
addr16
mov
xchg
fidivrs
add
xchg
mov
inc
dec
inc
decl
jp
add
push
fmulp
dec
push
lcall
push
cmp
popf
stc
test
pusha
push
hlt
jp
inc
loop
dec
mov
insb
popf
icebp
aaa
movsl
jbe
iret
mov
mov
test
sbb
gs
insb
aam
outsb
shrl
sbb
inc
out
or
mov
cltd
clc
into
add
xchg
popf
mov
push
xchg
jg
jne
adc
adc
add
xchg
fsts
pusha
sub
popa
lods
add
jb
cs
mov
mov
and
dec
adc
dec
xor
ja
push
push
insb
test
adc
pushf
add
iret
fistl
sub
icebp
cmp
and
push
push
test
fildll
pop
inc
dec
stos
or
or
add
pop
in
cld
xchg
xchg
fcompl
dec
add
int3
inc
mov
jmp
out
dec
scas
xor
fmul
jo
cmp
add
and
jp
bnd
mov
sbb
pop
push
push
inc
lret
mov
mov
nop
daa
ja
sbb
and
or
shlb
mov
add
add
aad
sub
pop
pop
dec
je
pop
push
imul
cmp
idivb
in
mov
xchg
pop
movsb
loope
mov
insb
xchg
out
inc
daa
xor
push
pop
call
jne
sbb
mov
rcl
cmp
into
jno
pusha
xlat
daa
and
adc
adc
popa
sub
xorb
cs
sbb
push
xlat
pop
stos
outsl
pop
add
repnz
pusha
jl
cltd
das
mov
sbb
adc
imul
mov
inc
sub
and
int3
sbb
cwtl
jmp
sbb
add
push
aaa
pop
shll
setae
and
push
divb
xorl
cmp
shll
hlt
pop
dec
incb
les
daa
mov
jno
add
data16
inc
xor
fs
scas
in
adc
and
mov
or
sbb
and
inc
xor
sbb
popf
fldcw
jle
inc
dec
lcall
nop
xchg
addb
mov
fdivrs
mov
add
stos
nop
mov
add
leave
xlat
or
adc
jns
cmp
push
leave
push
lds
or
mov
fnop
sbb
push
xor
and
jmp
iret
add
clc
outsb
dec
pop
add
push
mov
leave
push
pop
add
or
push
sub
sti
outsb
lods
lcall
mov
inc
scas
fists
stc
jno
sbbl
fcmovu
sbb
test
push
lock
mov
lret
add
push
fucom
out
add
aaa
cld
push
mov
bound
cli
lret
shlb
sbb
mov
repz
mov
or
pop
xor
and
ret
xor
xchg
and
mov
adc
mov
repnz
gs
jne
mov
sub
test
movsb
scas
xor
leave
xchg
outsb
mov
sbb
mov
mov
mov
jl
sbbl
mov
into
fs
pop
mov
repnz
in
test
jmp
rol
flds
add
and
lcall
shr
mov
mov
pushf
pop
xchg
jns
imul
in
mov
mov
jge
aad
pop
nop
dec
mov
mov
shlb
loopne
or
push
or
faddp
push
lods
and
push
je
xchg
push
add
ljmp
mov
jge
mov
pusha
push
lods
mov
in
pusha
ljmp
insb
xchg
hlt
jno
jb,pt
sbb
fisubs
nop
shlb
popf
idivb
pop
mov
mov
fisubrs
daa
xchg
stos
fists
or
in
add
insb
jp
pop
sbb
orb
jno
pushf
cmpsl
mov
sub
push
pop
mov
shlb
pop
jmp
adc
cmp
xchg
pop
xlat
das
call
roll
call
ss
cmp
stos
sub
push
add
adc
push
in
jno
test
mov
pop
shll
dec
sub
paddd
push
adc
xor
hlt
shr
into
pop
adc
popa
mov
sbb
and
dec
rorl
adc
and
pop
stos
pusha
rcrb
push
jmp
add
in
je
push
inc
mov
nop
push
pusha
mov
and
sub
iret
movsl
ja
and
pop
in
adc
jecxz
fs
subl
mov
aam
test
lret
push
add
insl
rolb
xchg
in
jp
sbb
mov
sub
inc
and
out
sub
lods
dec
stc
inc
inc
cmp
push
imul
adc
bound
fisttpl
pushl
into
incl
les
call
mov
sbb
jle
pusha
xchg
popa
idivb
sub
out
stos
or
sbb
and
fisttps
lret
sub
mov
int3
jp
add
adc
sub
pop
inc
push
pop
or
or
addl
test
fdivs
subl
add
xchg
shll
push
pusha
or
cmovns
lret
jle
cmp
fimuls
ds
cltd
adc
xchg
loop
fstpl
stos
or
jmp
filds
cltd
enter
pushf
addr16
imul
mov
cs
outsl
add
test
jmp
clc
or
jnp
or
pop
dec
xchg
loopne
cli
into
std
add
int3
pop
sbb
push
sbb
addr16
test
xchg
lret
sbb
xchg
movsl
mov
add
outsb
insl
adc
push
cld
adc
ret
int3
es
adc
shlb
mov
pop
jnp
push
sub
adc
and
sbb
sub
repz
into
sbb
jb
les
jns
and
mov
mov
in
adc
sub
test
adc
insb
cmpsl
and
adc
pusha
leave
dec
xor
push
cmp
jns
lods
shr
add
dec
pop
aam
test
adc
into
jle
es
fistpl
xchg
sbb
pop
mov
jl
imul
jmp
inc
and
add
sbb
jno
popf
xor
dec
sbb
adc
and
mov
add
push
jae
daa
add
push
mov
pop
popa
std
inc
lods
jge
cmpb
cmc
enter
incb
sub
nop
xchg
mov
add
jmp
cmp
pusha
sti
leave
daa
cmp
jnp
or
jle
sbb
jecxz
popf
stos
adc
aaa
jmp
andb
add
enter
ja
cmp
mov
lds
push
js
fldcw
mov
popf
adc
pop
push
stos
xor
inc
sbb
imul
mov
and
fildl
cmpsl
imul
shlb
and
hlt
fldenv
mov
lahf
mov
add
jmp
repz
xchg
push
push
nop
push
das
ljmp
and
jne
mov
or
gs
jb
jne
loope
mov
jno
mov
xchg
xor
scas
loopne
or
lea
cmp
mov
imulb
cmp
xor
or
jle
xor
outsl
add
sub
pop
rcrl
add
cmp
mov
ss
adc
dec
mov
mov
in
xchg
popa
movsb
add
mov
das
mov
and
or
lods
into
scas
je
inc
or
inc
add
jge
mov
xchg
pop
lret
jp
mov
adc
out
loopne
ss
add
shll
test
sub
dec
cmpsb
jo
rcrb
shll
or
add
sbbb
movsl
sub
out
mov
add
add
add
insl
or
jmp
or
adc
jecxz
sbb
das
dec
add
sbb
jmp
pop
push
jecxz
fcomps
mov
push
test
mov
push
push
dec
outsl
in
add
shll
imul
xchg
cmp
rorb
psubusw
roll
mov
sti
mov
pop
and
in
inc
cmpsb
stos
addb
mov
sbb
xor
out
fadds
cmp
xorb
xlat
mov
dec
lahf
push
push
pop
mov
mov
push
mov
jg
mov
adc
pop
xlat
andl
add
jle
push
popa
cs
sbb
and
add
rcrl
pop
scas
fcmovnbe
fists
loope
or
add
inc
pusha
test
repnz
fwait
mov
in
and
and
push
or
inc
orl
popa
test
xorb
adc
add
outsl
jns
xlat
das
and
inc
mov
shl
pop
iret
movsl
dec
fs
insb
insl
bound
dec
lods
push
in
mov
push
test
sub
adc
push
xchg
pop
aam
sti
negb
dec
loopne
mov
outsl
dec
cltd
roll
loopne
leave
subl
test
push
loopne
pop
pop
mov
xchg
pop
ret
dec
push
mov
ds
sbb
lea
cltd
and
jnp
push
cwtl
jg
fwait
call
mov
negl
cmc
repz
dec
les
sbb
fmull
adc
arpl
lcall
xlat
ret
lds
out
dec
or
adc
popf
je
aam
cmp
pop
or
fcom
shrb
jmp
inc
add
xchg
pop
das
pop
popa
mov
xchg
sbb
fcoml
fwait
stos
or
das
les
add
in
xor
mov
shrl
inc
pop
movsl
and
add
pop
mov
jmp
in
loopne
pop
jbe
inc
xchg
cli
mov
insb
mov
push
lea
pop
aaa
push
xchg
pop
adcb
inc
stc
popf
sbb
mov
popf
lea
mov
insl
sbb
das
iret
adc
add
aaa
push
or
push
es
int3
mov
cmpsb
cld
adc
nop
pop
xchg
xchg
fmulp
cld
cli
add
adc
sbbl
lock
outsl
shlb
cmpsb
decb
mov
mov
lahf
sub
add
dec
adc
inc
in
jae
mov
inc
mov
sub
mov
scas
loop
and
inc
adc
out
push
pop
jmp
sarb
pop
or
adc
xchg
mov
inc
data16
daa
jmp
mov
and
int
and
jmp
sti
push
and
cld
es
fisubl
and
das
pop
ja
enter
pop
iret
nop
sbb
add
xor
mov
sub
xchg
fcmovnu
sub
sub
fs
inc
lods
and
test
pusha
adc
enter
jp
jae
or
jno
jle
mov
in
test
mul
xor
nop
jae
sub
jbe
out
xchg
and
sahf
inc
cmp
pop
js
add
xorl
jl
int3
xchg
xchg
mull
mov
cmp
mov
fisubrs
es
aad
into
pop
mov
cmpsb
xchg
dec
xchg
jp
outsl
insb
cmp
clc
push
push
pslld
jge
add
xor
jo
pop
test
fsubrl
mov
rcrl
pop
pusha
and
out
movsb
and
push
adc
add
in
xor
xor
cli
add
push
jmp
ds
mov
add
sbb
fstps
add
int3
mov
xchg
fld
les
cwtl
xor
pop
push
push
pop
aam
aaa
mov
sub
fsts
inc
icebp
xor
add
inc
jp
mov
scas
aad
jbe
adc
xchg
lret
inc
push
jnp
cmp
adc
push
sahf
cli
icebp
xor
fucom
sbb
sbb
icebp
cmp
cmp
jle
pop
xchg
gs
scas
mov
sahf
sti
xor
mov
xor
jo
inc
inc
faddl
je
jne
js
enter
add
jge
pop
outsl
pop
sbb
bound
push
xor
dec
mov
into
mov
cmp
push
jge
add
pop
or
dec
inc
data16
add
stos
mov
push
stc
xchg
andb
rorb
ret
nop
das
sbbb
and
inc
push
clc
ds
jae
idivb
ljmp
in
jg
adc
dec
and
ror
add
xchg
filds
movsb
ficoms
clc
mov
mov
cld
fs
or
xor
pop
fidivrl
pop
cli
and
inc
das
and
pusha
sub
sub
in
pop
cmc
jle
push
pop
jns
xchg
mov
jo
sbb
adc
push
pop
pop
adc
adc
xchg
lods
clc
mov
icebp
lods
push
adc
in
add
insl
pop
adc
je
xchg
pop
dec
ficoml
loop
fcomps
pop
aam
loope
rorb
push
dec
fs
and
sbb
arpl
ret
mov
fldt
cli
pop
sbb
daa
pop
dec
filds
add
or
mov
arpl
test
fwait
loope
jecxz
adc
aaa
mov
popl
or
cmp
imul
mov
pop
sub
or
dec
test
rolb
xor
loop
andb
shrb
mov
xlat
test
jnp
rep
add
sahf
fs
enter
mov
push
cld
or
es
call
repnz
test
imul
xor
cmp
aaa
ret
dec
push
jmp
pusha
movsl
rclb
push
add
add
movsb
lahf
xor
fdivs
loope
add
lock
fldenv
cvtps2pi
jne
xchg
out
and
mov
ret
dec
in
add
jg
jge
push
aad
stos
lcall
or
iret
bound
or
lock
fisubl
pop
aas
add
lock
xor
xchg
ret
addb
lahf
push
fwait
aas
and
sub
jmp
pushf
cmp
mov
or
pusha
sbb
add
psubb
inc
adc
xchg
push
sbb
xor
or
popf
mov
and
out
jmp
push
je
sub
jecxz
xor
dec
dec
in
notb
xor
mov
jae
dec
mov
and
jp
sbb
push
repnz
leave
push
call
sbb
imull
into
mov
roll
std
ljmp
add
or
and
outsb
mov
test
aaa
daa
fldl
inc
nop
xchg
xor
jnp
mov
fcoms
lea
arpl
cmpsl
addl
add
cltd
out
aaa
loopne
cs
lret
pop
and
rcrb
jo
adc
mov
nop
pop
repnz
dec
push
int
ror
push
add
cmp
cwtl
push
cltd
popa
aad
pop
push
js
cmp
roll
adc
add
jb
pop
cwtl
pusha
push
sbb
pop
lock
mov
and
lahf
je
ret
out
outsb
add
shll
inc
xor
jae
loop
add
pop
cmp
mov
aaa
test
cmp
mov
add
push
imul
or
add
pop
xchg
mov
les
cmp
add
test
popa
rclb
xor
aad
movsl
les
js
mov
pop
add
pop
cmc
imul
repnz
add
and
dec
mov
add
cmp
out
mov
mov
cmp
call
cmpsl
dec
fildl
xor
cmp
imul
daa
int
es
mov
test
pusha
test
xchg
add
jns
xchg
pop
das
push
push
fsqrt
dec
popf
or
mov
dec
sbb
push
jns
incl
jg
and
or
adc
adc
call
xchg
push
add
push
aaa
add
inc
data16
das
shl
add
mov
lahf
fcompl
add
jo
idivl
rcl
sub
leave
sbb
imull
notl
jbe
mov
sub
xchg
push
sbb
out
nop
loopne
push
aaa
pop
jnp
add
jecxz
and
lret
mov
and
add
adc
sub
push
inc
adc
loop
cvtpi2ps
push
inc
add
dec
mov
xor
jne
test
popa
pop
inc
ds
sub
test
pusha
jmp
movsb
mov
pslld
push
sahf
and
inc
lea
aas
jnp
fsts
jmp
dec
dec
pusha
dec
or
push
sbb
cmpsb
or
leave
out
add
lret
xchg
call
xor
mov
ds
outsb
cmpb
sbb
jmp
outsl
rcll
shlb
cwtl
bound
leave
stos
or
arpl
inc
add
pop
push
pop
lcall
mov
dec
or
cltd
testl
loopne
bound
xchg
test
aaa
add
or
mov
push
loope
pop
inc
in
pop
pop
fs
ret
push
xchg
sub
subb
push
add
shlb
add
cli
jecxz
and
xor
test
add
outsl
in
pop
mov
int
jmp
std
xchg
mov
mov
addr16
pop
stos
lods
scas
pusha
pop
push
cltd
enter
cli
mov
inc
or
enter
scas
filds
daa
mov
movsb
in
pop
add
lock
paddd
cmc
sub
inc
shl
add
sbb
cmp
test
xchg
mov
add
push
test
outsl
add
mov
out
sub
stc
sti
push
frstor
xor
add
bound
add
jo
jge
and
and
sub
mov
push
adc
mov
add
sbb
sbb
jp
aam
xchg
cmp
add
sub
jge
movl
add
inc
lret
in
add
jle
add
hlt
mov
jmp
dec
sbb
xchg
adc
add
sub
ficoml
jg
or
push
lret
movsl
jg
ljmp
movsl
pop
mov
push
dec
decb
cmp
test
xchg
jnp
int
aam
in
add
mov
nop
cs
cmp
pop
xorl
fsubrs
cld
add
mov
ja
andl
mov
orb
call
sbbl
add
dec
subl
rcll
sbb
ret
jg
pop
mov
sub
jecxz
ret
cmpsb
pop
and
js
jge
ss
loopne
mov
push
inc
mov
ljmp
push
cmp
sbb
loopne
iret
adc
push
and
gs
out
popa
jbe
or
or
ds
push
add
cmpsl
cmp
aad
cmc
add
out
pop
mov
pop
push
mov
mov
arpl
inc
pop
jmp
xor
xchg
stos
mov
sti
and
jge
jmp
mov
lahf
lods
mov
test
enter
add
pop
lret
sbb
add
mov
imul
xchg
mov
adc
adc
jp
add
xor
jb
cmp
jg
push
xchg
xchg
cmp
sub
add
jae
adc
cmp
cli
fadds
imul
xchg
add
adc
movsb
sbb
inc
inc
xchg
daa
subl
sub
push
sub
scas
and
pop
rolb
mov
dec
push
jns
cmpb
push
in
idiv
xor
cmp
pop
jl
xchg
xchg
es
and
daa
js
mov
ficomps
add
loop
popa
or
bound
push
mov
jns
mov
push
lahf
mov
or
popf
jge
fisubrl
in
nop
out
fistl
stos
hlt
mov
adc
xlat
cmpb
push
getsec
or
fs
sub
pop
dec
and
pop
cmc
shrb
imul
pop
xor
shll
loop
cwtl
add
andb
jne
int
aam
les
std
ds
add
inc
push
mov
add
pop
sub
rolb
lea
push
leave
stc
aad
xor
jne
ret
mov
jmp
dec
and
in
out
jnp
add
popf
nop
mov
lock
jae
pop
jns
jl
testl
add
jo
mov
xor
sub
push
jg
cld
frstor
daa
push
movsb
push
std
out
mov
idiv
mov
flds
sbb
aad
std
or
aam
mov
sub
test
jp
jnp
clc
xchg
lea
push
and
push
outsb
dec
or
stos
subb
sub
movsl
add
pop
xor
pop
or
mov
aaa
and
mov
push
pop
xchg
inc
push
push
lahf
iret
xchg
cmpb
shrl
sub
mov
popa
push
dec
fdivs
ficoms
stos
popf
push
inc
and
fisttpll
popa
push
incl
jbe
mov
movsl
jle
negl
daa
mov
rclb
mov
or
jo
cs
daa
cmc
test
mov
icebp
mov
repnz
pop
les
out
mov
lcall
and
lahf
ljmp
enter
scas
inc
cli
rorb
and
jle
int
jno
mov
cmp
xchg
dec
cwtl
aaa
and
jnp
pop
adc
mov
mov
dec
mov
add
lahf
mov
clc
fsubrl
jle
sbb
add
push
jno
pusha
cld
test
aas
lret
pop
and
faddl
mov
push
xchg
mov
aad
scas
cmp
pop
xchg
push
aaa
xchg
cld
repnz
daa
enter
lock
xor
or
insl
aad
mov
mov
or
cmpsl
test
imul
mov
fnsave
mov
imul
je
cwtl
pop
lahf
push
rcrb
inc
popa
sub
jmp
xchg
push
mov
lods
xchg
stc
xor
inc
xchg
pop
fnstenv
and
mov
mov
dec
popf
adcb
test
pop
das
flds
aaa
pusha
cmc
jl
pop
sub
pop
dec
cmpsl
jmp
clc
dec
popf
pop
insb
aam
test
outsb
add
dec
pop
daa
cs
adc
cmp
fsubl
dec
inc
push
fdivrl
mov
lods
lods
loope
notb
out
pop
mov
movsl
sbb
pop
xor
popf
add
jnp
mov
addr16
mov
jle
mov
xlat
and
outsl
sbb
add
std
xchg
push
and
out
movsb
das
int
rcrb
or
popf
popa
sub
lock
fcoml
out
jno
adc
addr16
xlat
rorl
xchg
data16
jp
add
mov
out
dec
lcall
sbb
push
insb
call
sub
lock
test
inc
and
fnstenv
bound
leave
stc
icebp
push
mov
pop
add
inc
rorl
mov
mov
fldenv
lret
push
in
pop
xor
add
mov
adc
or
sub
xchg
push
add
popa
cmpsl
pop
rorb
pop
js
adc
out
jo
aas
imul
cmp
rclb
mov
out
inc
sbb
shlb
loop
nop
push
xchg
mov
in
loop
dec
mov
icebp
loope
jle
or
mov
insb
mov
add
ljmp
and
ss
pop
popa
lods
add
push
pop
mov
arpl
sub
popa
adc
mov
mov
pop
cmp
pop
add
mov
or
xchg
pop
add
aas
sub
xchg
push
mov
data16
add
add
inc
cmp
sub
jg
lahf
out
add
adc
xor
mov
push
push
ffree
jnp
filds
fimull
inc
pop
add
xor
outsl
rorb
dec
pop
jo
mov
push
in
jl
add
arpl
mov
sbb
gs
imul
or
inc
mov
dec
jae
and
mov
and
mov
mov
pop
sub
bound
adc
jecxz
lret
push
cmpsb
jns
jle
shlb
push
mov
out
loopne
xchg
nop
daa
fs
out
xchg
cmpsb
fisttpl
sub
cli
mov
xor
adc
lret
mov
xor
testl
insl
add
add
push
sarb
fcoms
mov
insl
hlt
sub
cltd
pusha
mov
and
in
mov
add
jmp
xchg
and
gs
jp
add
mov
push
sub
out
pop
adc
jl
cmpsl
and
push
add
aaa
in
jno
mull
pushf
xchg
test
adc
scas
xor
cmpsl
enterw
add
in
imul
cmp
std
or
jnp
mov
and
stc
popa
sti
or
add
dec
fistps
cwtl
jae
add
xor
or
movsl
pop
popf
icebp
jecxz
in
inc
orb
and
sahf
dec
push
mov
add
adc
negb
call
sub
hlt
sbb
or
insb
dec
fldlg2
lods
push
es
fs
and
out
add
addl
test
mov
fwait
nop
xor
ret
mov
xchg
mov
xor
jp
bound
mov
scas
jnp
push
cmp
mov
pop
call
xlat
mov
add
aas
pushf
pop
add
or
pop
scas
adc
test
hlt
roll
nop
and
fbstp
push
aas
and
lahf
fisubl
stos
push
pop
rcr
jle
out
je
stos
lret
rorb
or
sub
clc
pusha
les
inc
mov
add
fs
sub
ljmp
mov
jno
mov
add
jns
add
decl
pop
loope
pop
int
jecxz
mov
test
jns
xchg
stos
push
rorb
repnz
fstpl
mov
pop
std
xchg
adc
mov
jge
cmc
stos
rol
out
es
shrl
insl
fdivl
add
rclb
xor
add
stos
xchg
adc
sub
mov
loop
and
push
out
mov
add
cld
lea
arpl
pop
das
pop
imul
out
xor
pop
jecxz
jmp
adc
push
xchg
iret
mov
add
int
mov
repnz
les
insl
cmpb
jp
jmp
icebp
mov
push
xlat
fildll
lods
sub
nop
jne
xor
jge
clc
mov
cmp
lock
ljmp
call
mov
xchg
loop
mov
adc
lock
je
lods
jg
dec
and
insl
add
mov
ljmp
jg
test
out
sub
xlat
add
sbb
nop
push
jle
stos
sub
dec
add
out
out
xchg
sbb
nop
inc
lock
cmpsl
jb,pn
mov
out
mov
jl
test
mov
rcll
cmpsb
jg
out
rcr
nop
ja
cwtl
add
andnps
popf
arpl
mov
inc
pop
pop
pushf
gs
mov
pop
inc
xchg
dec
xchg
bound
bound
fs
ds
add
mov
lahf
mov
pusha
pop
sub
lcall
or
jmp
push
mov
cmp
clc
push
stc
in
add
call
sub
jno
or
cmpsl
cmp
add
clc
pop
fcmovnb
adc
xor
addb
subb
mov
push
daa
jmp
icebp
int
out
inc
mov
sub
jecxz
lahf
lock
mulb
addb
rorl
shlb
jns
cmp
shll
scas
add
arpl
into
pop
sbb
sar
mov
mov
push
add
and
sbb
pop
fcoml
cs
jo
imull
lcall
mov
sbb
mov
sub
adc
jg
ss
ja
fs
mov
je
pop
sub
out
push
fwait
mov
xor
dec
mov
add
add
out
xor
dec
ret
bound
out
fsubrs
shlb
and
jg
cmovns
jg
aam
push
push
and
mov
pop
fistps
add
repnz
bound
bsf
add
add
es
repnz
jnp
inc
pop
or
cmp
or
sbb
cmp
mov
test
incb
push
int
ss
pushl
stc
pop
psraw
inc
out
add
mov
xlat
insl
sub
or
add
mov
les
mov
and
pop
fcomip
dec
or
or
das
xchg
test
mov
jne
inc
adc
imul
add
push
test
mov
rcrb
imul
cmpsl
ja
pop
inc
jmp
push
pushf
jo
push
repz
jne
jnp
jne
lods
mov
insb
fisubrl
mov
mov
xchg
or
push
xor
aas
fsubs
or
add
dec
sbb
in
mov
pop
in
adc
out
sahf
jg
int
pusha
mov
xchg
add
mov
andl
mov
push
mov
pop
mov
fidivrs
add
pop
inc
adc
iret
fisttpll
daa
lea
stc
imul
mov
pusha
mov
aad
adc
push
add
fildll
mov
stos
or
pop
push
out
dec
loope
push
add
cmp
cmp
add
stos
or
cmp
aad
iret
adc
push
lahf
shl
jl
or
jecxz
push
pop
add
je
jnp
in
adc
mov
ret
roll
lds
fwait
in
js
mov
and
insl
or
mov
jle
add
in
nop
clc
xchg
mov
cmp
fs
subl
and
xor
dec
lahf
inc
push
mov
pop
popf
je
imul
ficomps
es
repz
cmc
mov
mov
dec
push
int
pusha
cmp
xchg
pop
into
scas
sub
fadds
jne
loope
pop
dec
add
lock
mov
fisttps
add
repz
je
movsl
ficomps
imul
enter
je
add
out
xor
mov
xchg
ljmp
cvtdq2ps
popf
pop
es
add
fidivrs
sub
mov
insb
pop
xchg
mov
inc
jno
pop
or
or
je
sub
notl
cmp
mov
addr16
stc
inc
mov
push
inc
add
mov
gs
xor
or
das
in
leave
cmp
push
pop
pop
popa
aas
mov
dec
cmp
xor
mov
popf
gs
icebp
sub
dec
js
jb
es
daa
xor
lods
xor
adc
pop
xchg
push
outsl
inc
mov
sbb
lock
jmp
pop
scas
mov
int
in
add
xlat
roll
test
mov
clc
fwait
jno
jno
add
mov
or
jno
fwait
or
or
add
popa
mov
ds
dec
and
xor
or
mov
jb
insb
sbb
shll
mov
sub
sub
jmp
cwtl
fiadds
jbe
xor
lahf
cmp
rcll
sbb
movsb
rcrl
cmpsb
sti
loopne
pop
inc
add
jne
jae
pop
inc
cs
xor
sbb
pushw
movsb
pop
pop
popf
add
mov
cs
or
test
jns
test
pop
sbb
or
pop
dec
shll
aam
inc
faddp
ljmp
cmp
lds
xor
ret
add
in
dec
rorb
aaa
dec
mov
jle
in
stos
es
mov
or
ja
leave
in
adc
dec
enter
mov
in
ret
leave
arpl
mov
xchg
xchg
dec
cmpsb
push
mov
xor
fwait
daa
sti
xchg
imul
cmp
rcrb
out
xchg
aam
lods
aas
adc
dec
test
stos
and
sbb
int3
inc
sbb
xchg
inc
jbe
dec
adc
mov
mov
imul
push
dec
and
add
bound
push
push
fmuls
adc
add
and
add
into
push
push
fisttpll
lock
mov
and
call
inc
add
push
pusha
mov
call
sub
repnz
jp
sbb
insl
outsb
mov
xchg
sub
mov
rcrl
sub
stos
push
dec
pop
fmuls
rolb
popa
pop
add
push
stos
xor
xor
sub
jmp
push
xor
xchg
out
idivl
or
ficoms
cs
push
inc
addr16
cmp
rcr
enter
pop
dec
cmpsb
mov
dec
shl
scas
testb
rclb
add
lock
xlat
jl
addb
inc
sub
lahf
mov
xchg
sbb
pusha
dec
into
sarb
in
add
and
cmc
add
dec
add
mov
lods
repz
push
incb
lret
hlt
loopne
push
addb
adc
mov
add
push
xchg
mov
faddl
jg
sub
sub
xchg
fwait
lcall
cmp
ljmp
mov
pop
shrl
add
rcll
adc
push
xlat
test
sub
pop
mov
cmp
addr16
orb
push
pop
ss
in
push
sub
mov
ret
loope
nop
sub
cmp
fstpt
adc
inc
test
negb
jne
add
in
lret
inc
fstpl
enter
ja
push
pop
nop
pop
mov
cmpsb
add
adc
sub
push
or
fiaddl
cmp
daa
ret
incl
pop
cmpsb
jb
mov
lahf
icebp
outsl
scas
jge
xor
fwait
mov
jmp
pushf
and
fdivrp
daa
aaa
and
cmpsl
pop
ror
addb
sub
xchg
push
mov
fsts
lods
push
repnz
cmp
pop
add
test
mov
add
pop
out
push
cld
inc
sarb
add
rcll
sbb
pop
pop
cmpsb
inc
adc
mov
xor
movsb
out
fwait
jg
shlb
sti
or
and
test
mov
loopne
mov
fwait
dec
cmpsl
and
mov
nop
add
mov
lods
sub
roll
jle
pop
pop
lahf
pusha
pusha
xor
pop
cmp
loopne
dec
sbb
jmp
inc
mov
fidivrl
in
sbb
push
call
out
xor
and
and
cmp
or
xor
mov
adc
mov
add
je
out
cmp
jp
nop
repnz
mov
jno
inc
jmp
mov
push
out
lods
add
mov
adc
pop
add
in
cmpsb
lahf
mov
jno
inc
mov
in
popf
push
jmp
sub
scas
sbb
sti
and
cmp
dec
xor
dec
mov
sub
mov
xchg
sbb
jnp
mov
dec
int
pop
lock
jo
xor
adc
sub
rcrb
loop
pusha
sbb
xchg
add
sbb
mov
rolb
jo
and
jno
push
inc
daa
adc
sub
sub
aas
cmpsl
pop
sub
and
jns
xor
inc
js
into
mov
lret
jno
leave
add
sbb
jmp
sub
push
iret
sub
inc
inc
cld
sub
subl
mov
xor
and
mov
les
cmp
mov
jmp
dec
dec
add
pop
xor
test
icebp
lods
mov
rorl
ja
loop
cmp
icebp
mov
icebp
or
les
fbstp
dec
test
aas
and
daa
xor
sub
insb
sub
add
push
test
fwait
ror
dec
scas
js
mov
outsb
fistpll
je
fiadds
iret
daa
ljmp
mov
idivb
andb
fsubr
sub
add
shlb
lds
dec
or
jg
aas
outsb
test
cmc
sbb
outsb
jmp
push
div
add
in
inc
mov
push
jnp
or
pop
sub
orb
int
out
mov
adc
les
add
mov
das
add
or
and
dec
push
fs
popf
nop
insb
jns
ds
ljmp
add
xor
xor
je
int3
add
add
jp
pop
std
shrl
cmp
jns
jb
pop
xor
or
jge
xlat
push
cmpsb
jb
mov
mov
mov
mov
sub
push
cld
pop
xchg
inc
movsb
je
push
popa
adc
jno
dec
daa
xchg
mov
push
jmp
add
push
insb
mov
or
push
jmp
inc
xor
in
inc
mov
hlt
xchg
dec
insb
es
dec
cmp
daa
inc
xlat
xchg
cld
mov
addb
mov
lret
add
xchg
rorb
and
jnp
shll
xchg
sub
xchg
pop
push
push
in
mov
fnstsw
or
sub
cmp
xchg
mov
xor
xor
dec
jg
in
popf
and
sbb
aad
pop
sahf
rorl
inc
push
cld
arpl
out
push
jecxz
loope
dec
test
mov
stc
sbb
pop
add
xor
aas
jmp
pop
mov
jg
andl
jb
lcall
and
lea
or
cmp
loope
push
hlt
dec
add
xor
pop
imul
pop
push
xor
jo
push
dec
push
test
mov
sbb
xchg
stc
and
jne
pop
lock
jnp
xchg
rcrl
xchg
jmp
jmp
fnstenv
stos
pop
lods
mov
add
popf
sbb
pop
xchg
cmp
scas
sub
mov
cmp
test
adc
add
lods
xchg
popf
fstps
arpl
mov
divb
imul
vcomiss
ret
mov
xchg
push
xchg
pushf
sub
pop
mov
jg
movsl
cs
xchg
ficomps
and
loopne
mov
popf
jae
fcom
pushf
clc
cmp
loopne
and
add
mov
punpckhbw
cmc
xor
lahf
fsubrl
xchg
cmc
scas
incb
dec
adc
out
repnz
stc
cmp
sahf
addr16
mov
mov
push
adc
mov
cli
or
enter
nop
sbb
xchg
xor
add
subb
bound
popa
fwait
jl
test
imul
and
jp
xchg
pusha
enter
pop
mov
jg
mov
sahf
test
dec
pop
mov
sbbb
sbb
loop
pop
stos
and
xchg
mov
daa
and
mov
or
cmpsl
inc
mov
add
popa
pop
scas
jp
add
enter
mov
mov
xorb
add
mov
lock
fildl
push
mov
mov
inc
inc
or
jle
or
pop
sbb
jge
stc
or
sub
xchg
out
rcrb
flds
and
dec
push
je
sar
aas
clc
mov
jmp
jo
leave
sbb
cmpsl
imulb
fsubrs
scas
pop
pop
rcl
adc
jp
adc
sqrtps
rorb
sub
inc
pop
cmp
push
sub
jae
and
in
movsb
addr16
mov
in
cmp
sbb
pop
hlt
add
or
pop
mov
daa
dec
notl
mov
pop
push
sbb
out
mov
cmpsl
lock
dec
add
sub
out
mov
in
or
data16
inc
inc
and
int
fnstcw
cmc
dec
das
pushf
lods
mov
in
pop
jmp
loopne
ja
push
pop
and
fisubrs
pop
lods
lcall
mov
sbb
pushf
adcl
xlat
adc
arpl
jo
push
popa
pop
xchg
fistpl
jg
pop
dec
pusha
xor
xlat
cld
enter
adc
xchg
or
divb
mov
adc
add
stos
flds
sub
flds
stos
int3
mov
decb
repz
mov
push
pusha
mov
ss
jg
jo
add
js
lods
mov
mov
mov
hlt
out
loop
xchg
cmp
rorl
adc
jns
arpl
cmc
in
nop
imul
mov
xchg
pusha
xchg
mov
in
sub
cmp
jmp
loop
dec
sbb
sbb
outsb
xchg
iret
pop
pusha
mov
xor
push
lcall
xchg
push
cmc
shl
mov
dec
stc
xchg
call
fcmovu
pop
leave
jne
mov
or
inc
popf
jl
add
inc
sub
out
rclb
xor
ljmp
in
add
pusha
test
movsb
pop
movswl
dec
leave
mov
fdivrp
mov
add
jae
movb
inc
pop
mov
fbstp
inc
and
push
or
cmp
xchg
xchg
lret
mov
add
movb
mov
lcall
mov
divl
jne
push
add
fs
xchg
cmp
inc
xchg
mov
imul
dec
sub
aam
out
mov
xor
fnstcw
xor
jns
das
test
loop
idivb
insl
mov
call
addb
push
imul
push
fildl
and
inc
shrl
pop
xor
cltd
xor
les
or
loop
cmc
pop
add
aad
sub
leave
jns
adc
push
shr
repnz
xchg
xor
xchg
repnz
pop
mov
mov
fcoms
pop
sub
mov
xchg
nop
enter
mov
shll
ret
jae
or
leave
dec
ja
fldt
fnstcw
jmp
jns
lahf
cmp
sbb
inc
addr16
dec
clc
push
shrb
add
into
cmp
call
jnp,pt
xchg
mov
shrl
clc
dec
add
pop
sarb
mov
fs
lcall
out
outsb
and
jecxz
push
and
adc
or
fwait
pusha
mov
test
sub
in
cmp
sub
lahf
ja
xor
sbb
test
mov
mov
xor
xchg
pop
xchg
push
bound
xor
fdivrl
dec
pop
xlat
sbbl
and
xchg
push
mov
test
les
les
push
das
mov
lea
xchg
into
ja
ror
jns
mov
or
pop
rorb
sbb
adc
mov
movsl
dec
les
aas
cmpsl
pop
jno
test
or
add
jns
imul
nop
inc
mov
adc
stos
mov
int
sbb
call
icebp
add
mov
mov
sarb
pop
jnp
or
inc
jno
lret
das
notb
pop
pop
pop
jmp
add
ja
xlat
pop
pop
dec
adc
push
outsb
xor
es
shlb
imul
add
sbbl
dec
sbb
jp
dec
jo
mov
dec
and
inc
sbb
mov
das
lea
xor
jmp
mov
repz
jmp
mov
popf
adc
into
cmp
adc
mov
outsl
sub
test
sahf
sbb
xor
loope
cwtl
cmpsl
xchg
nop
loope
fildll
jbe
jnp
ja
decb
inc
push
jecxz
dec
mov
jns
icebp
dec
pop
mov
hlt
add
daa
es
int
mov
xorb
ret
mov
dec
clc
mov
popa
and
pop
xchg
daa
int3
or
stc
pop
cld
mov
xchg
movsl
jmp
mov
lea
xor
rclb
lock
jp
and
ja
mov
into
stc
sbb
cs
int3
ret
push
repz
mov
daa
sub
adc
xchg
nop
aam
out
pop
cwtl
fdivr
cli
adc
mov
mov
inc
xchg
scas
call
adc
addb
push
mov
stos
movl
add
mov
sbb
call
ret
cmp
mov
sbb
test
test
pop
movsl
inc
jo
and
sub
adc
xor
jnp
push
jb
pop
fcmovnb
or
imul
leave
stc
js,pt
dec
push
repz
pop
stc
xor
mov
cmpsb
jae
mov
call
cli
les
rclb
pop
int3
or
fcomip
sub
and
mov
pop
mov
aad
int
push
movsl
sarb
mov
xchg
insb
sub
call
jno
cmpsl
inc
mov
cmpsl
xchg
data16
cmpb
test
add
cmp
lea
sbb
shrb
jl
cmp
jo
xor
jns
inc
cmp
in
mov
cmc
insl
dec
sbb
fidivrl
xchg
imull
ss
imul
mov
in
dec
push
or
mov
mov
jp
push
mov
and
push
push
cmp
mov
out
xor
add
in
mov
jle
add
push
mov
or
lahf
jecxz
or
cmc
sub
ja
cld
loope
fisubl
push
roll
dec
mov
jns
push
in
xchg
cmc
popf
fstpl
fs
jp
dec
mov
mov
aaa
inc
sub
pop
sar
lret
add
mov
lcall
loop
mov
sub
lock
dec
jbe
sbb
mov
into
or
mov
add
pusha
fstpt
inc
add
pop
or
movsl
sub
adcb
pushf
pusha
add
into
bound
dec
call
xchg
test
scas
rcrl
or
dec
push
clc
hlt
sub
mov
and
mov
insb
outsl
sub
pop
fisubrl
out
adc
mov
pop
ljmp
inc
mov
cmp
outsl
test
xchg
scas
mov
pusha
sbb
popf
sbb
popa
nop
push
push
imul
pop
dec
pop
push
mov
sbb
pop
addr16
mov
lcall
sahf
ja
dec
mov
aaa
fiadds
lods
sbb
add
xchg
scas
mov
das
mov
repnz
add
std
imul
mov
and
push
dec
inc
test
mov
in
xchg
inc
bound
sti
repnz
icebp
dec
jp
pusha
into
cmp
daa
jge
push
push
dec
mov
pop
enter
pop
daa
fldl
nop
mov
pop
jecxz
dec
adc
jmp
cmc
out
pop
xchg
jbe
lods
testb
push
or
push
mov
add
js
test
lcall
mov
add
roll
jb
mov
adc
pop
lods
push
repz
pop
rcll
rolb
test
jb
das
mov
sbb
fucompp
inc
dec
jp
sbb
lea
jb
cmp
mov
nop
test
mov
and
addr16
and
xor
add
lods
and
ret
out
sub
add
and
jl
push
add
sbb
test
mov
ffreep
and
mov
cmpxchg
mov
dec
push
lea
loope
or
cmpsb
enter
or
rcrb
add
ret
mov
pushf
in
mov
fstl
or
sub
das
lock
mov
adc
and
ret
sti
or
xchg
gs
mov
popa
fdivp
icebp
jmp
xchg
in
cmp
cmp
dec
shl
push
add
mov
cmp
dec
bound
pop
idiv
dec
out
fnsave
pop
add
popa
int3
xor
and
xchg
jl
imul
aam
in
adc
xchg
xor
mov
jge
cwtl
aas
movsb
add
sarb
icebp
mov
xor
fisttpl
ficomps
sbb
pop
add
and
push
pop
sub
lret
sub
push
jle
ret
adc
and
daa
xchg
jnp
jns
sbb
insb
vphaddbw
mov
shll
pop
mov
mov
pop
and
ror
mov
mov
jne
xchg
stc
mov
pusha
mov
sti
insl
lock
popa
clc
mov
je
ret
popl
adc
mov
ret
fwait
sub
jno
fnstcw
mov
cmp
ds
push
lea
pop
sbb
lods
adc
push
cmpsb
mov
pop
xlat
push
sub
and
inc
pop
dec
xor
in
ficomps
or
loopne
lea
cltd
adc
call
xchg
sbb
pusha
cmp
add
adc
mov
shll
mov
pushf
add
mov
or
loop
scas
mull
sbb
cmc
arpl
repz
dec
push
sarb
test
xchg
test
lods
insl
addl
into
mov
push
xchg
mov
add
mov
fbstp
pop
add
lcall
fadd
mov
pusha
mov
test
in
das
data16
xor
xchg
pop
xchg
push
imul
hlt
sub
mov
lcall
cmp
aaa
outsb
cmpb
shrb
sbb
test
int
iret
out
lock
adc
loop
fildll
pusha
sbb
movsb
mov
mov
add
pop
cmp
xor
ret
and
sbb
jnp
dec
xor
mov
push
stc
subl
add
mov
sar
enter
pop
cmp
insb
add
jg
push
dec
ret
jbe
xchg
fisubrs
jg
or
xor
out
lcall
test
dec
and
or
mov
call
mov
adc
sub
lea
add
in
sub
out
mov
fnsave
popa
adc
stos
xchg
or
fistpl
push
ja
test
dec
pop
cmp
js
std
mov
mov
popf
xchg
popa
js
popf
push
dec
faddl
fisubrs
mov
xchg
add
or
pusha
ja
cld
and
in
and
dec
push
adc
imulb
mov
adc
adc
pop
rolb
mov
jge
xlat
aad
jg
xchg
add
imul
add
mov
adc
outsb
inc
or
enter
pop
pop
mov
inc
xchg
sbb
jl
and
pop
fnstsw
or
lock
inc
gs
xchg
out
pop
inc
mov
push
cld
shll
inc
dec
insb
lea
and
mov
sub
and
fpatan
mov
out
sbb
popf
cltd
das
in
popf
adc
fstpl
jo
add
mov
and
adc
mov
sti
cmp
lds
cltd
enter
pop
cmpsl
xchg
mov
push
inc
lcall
sbb
jge
aam
andb
jne
aad
fxch
xorb
and
and
popf
push
xor
lods
sub
out
pop
loopne
dec
popf
add
push
mov
icebp
clc
pop
jp
pop
mov
jnp
in
lret
jno
pop
jnp
inc
mov
popf
sbb
aaa
es
pop
popa
imul
loop
inc
sbb
les
xor
sbb
pop
mov
popf
xor
or
sub
andps
sub
loopne
pop
cs
popa
mov
jmp
adc
sbb
cwtl
or
ds
xchg
stc
xor
mov
add
jecxz
and
cli
lcall
lods
sub
push
push
mov
ja
icebp
rclb
ljmp
cmpb
mov
lcall
pop
cwtl
add
pop
and
or
xor
shrl
xchg
fiadds
orb
popa
fisubrs
pop
movsb
daa
or
xor
add
imul
sbb
rol
xor
xchg
icebp
scas
xor
sbb
sub
mov
popf
adc
add
mov
pushf
fwait
pop
adc
pop
ljmp
jg
push
scas
jmp
mov
iret
lea
repnz
sub
mov
add
or
orb
popf
sbb
push
sub
mov
ja
xlat
add
shl
jne
aad
pop
daa
add
cmp
mov
into
fnstenv
fistpll
dec
and
dec
into
mov
add
pop
mov
dec
imul
xchg
mov
sbb
into
and
xlat
push
sub
jl
fsubl
out
nopl
push
mov
mov
flds
mov
cld
add
sub
xchg
pop
add
fists
jae
push
push
das
mov
out
loopne
sahf
lock
mov
xchg
and
cli
sbb
andb
aaa
lcall
repz
iret
sub
leave
adc
cmp
dec
loope
dec
stos
fidivl
dec
xchg
fnstenv
pop
jae
lret
outsb
arpl
adc
xchg
icebp
nop
mov
add
pop
adc
inc
ret
mov
jge
push
in
cmp
cmpsl
push
sbb
lods
imul
mov
jg
cmp
lcall
cli
inc
xchg
inc
cmpsb
xchg
shr
xor
pusha
popa
xchg
dec
imul
push
jle
incb
mov
aam
or
mov
test
pop
xchg
jmp
popf
sub
mov
push
pop
pop
xor
inc
adc
lock
stc
and
out
pop
mov
popa
ss
sarb
pop
sub
pusha
mov
andb
dec
call
push
lods
test
jo
dec
xchg
stos
lret
out
mov
jns
icebp
or
lods
cmp
dec
test
cli
adc
jmp
insb
add
ljmp
flds
pop
push
je
daa
dec
pop
int3
inc
test
mov
add
cmp
lret
sub
insl
ja
imul
mov
and
mov
mov
ret
popa
push
inc
adc
movsl
jb
stos
fsubs
inc
adc
andb
push
aas
adc
mov
insl
cmp
jo
stos
cmp
adc
ret
push
addb
popa
dec
add
push
mov
clc
adcb
mov
mov
sti
xor
fs
jbe
das
adc
pop
xchg
xchg
popf
mov
mov
insl
pushl
sbb
or
add
push
sti
cmpb
sbb
sub
insl
cmpsb
fiadds
stos
loopne
jbe
je
out
aas
pop
cld
sti
cmpsl
scas
lock
add
fbld
mov
and
mov
sahf
int3
das
xor
jae
xor
in
sbb
sbb
test
adc
sar
out
push
lret
mov
inc
push
pusha
jmp
decl
push
mov
sbb
mov
jl
sub
jo
pop
pop
ljmp
lods
push
sbbl
stos
scas
fiadds
sarl
lahf
std
jmp
adc
jle
test
push
in
add
movsb
shl
pop
or
adc
enter
ret
adc
cltd
mov
jne
jne
testb
bnd
mov
repz
jno
scas
les
js
mov
cmpsl
mov
test
mov
addr16
or
sub
sarb
push
popa
mov
add
outsb
cmp
call
pop
fistpl
cmc
or
cmpb
dec
push
push
mov
inc
pop
scas
mov
movsl
stos
mov
xchg
jno
jl
push
popf
cmc
sbb
cmp
cmp
aad
cmpsl
pop
sahf
adc
lea
push
mov
aam
sbb
pop
inc
int3
xchg
xlat
sbb
and
arpl
cmp
cld
xchg
cmpsb
stos
loop
shl
gs
ds
cld
cmp
pop
in
daa
mov
mov
lcall
scas
movsl
scas
sbb
adc
mov
jns
xchg
mov
std
outsl
addr16
rcll
add
and
or
push
cld
cmpsl
popl
lcall
inc
sbb
ret
andl
sub
jge
pusha
inc
jge
and
mov
lret
cwtl
or
pop
in
loopne
rcll
xor
loopne
adcb
sbb
loope
xchg
cwtl
mov
pushf
pop
and
or
jo
aaa
and
mov
scas
sub
xor
add
mov
push
or
pop
gs
cmp
add
retw
test
pop
test
roll
stos
loop
add
ret
das
jge
ja
lods
cs
shll
xor
inc
mov
xchg
adc
shlb
pop
ljmp
pop
imul
mov
mov
add
cmc
mov
mov
stc
xor
mov
outsb
scas
cmp
mov
cs
scas
add
mov
pop
adcl
push
aaa
cmpsl
or
bound
push
pop
mov
loopne
popa
mov
mov
and
sbb
cmp
adc
bound
imul
cld
inc
add
mov
xchg
cmpsb
add
movsl
stos
add
hlt
stc
xchg
add
cmp
add
call
jae
int3
mov
pushf
jb
jno
in
mov
xlat
pop
mov
sbb
and
add
pop
cwtl
movsl
pop
sub
inc
mov
jo
flds
mov
mov
dec
cmpsl
test
cld
xchg
add
in
inc
xchg
int3
add
dec
addl
enter
orl
cli
xchg
mov
adc
test
sub
scas
in
loope
nop
mov
inc
jp
add
jecxz
aad
add
sbb
shll
jae
mov
pop
add
cmp
sbb
aam
cmp
sub
fidivrl
mov
adc
push
and
lock
lea
or
dec
xor
push
add
sbb
sbb
cmc
pop
add
jle
rolb
sti
cmp
push
mov
test
sub
call
roll
xor
cmp
nop
jle
scas
mov
cmp
flds
repnz
roll
loopne
xor
bound
adc
testl
mov
aad
mov
pushw
cwtl
sbb
dec
xor
add
pop
out
mov
ficoml
sub
jmp
jbe
aas
dec
xor
mov
and
sbb
mov
push
jp
leave
add
adc
pop
dec
loope
or
std
lock
gs
jp
add
push
imul
cld
mov
inc
add
push
add
pop
sbb
cld
lret
mulb
jb
add
and
pusha
std
add
rcl
jns
pushf
loopne
sbb
cmc
orb
push
pop
sub
mov
push
mov
xor
jb
dec
push
add
inc
mov
dec
outsb
or
jl
and
dec
orb
gs
sbb
hlt
es
mov
xor
cmpb
cwtl
popa
dec
test
lahf
lods
adcb
add
push
rolb
push
into
push
in
movsl
rorb
jnp
shrb
jbe
inc
add
outsb
std
inc
in
jle
add
imul
test
add
xlat
or
sti
pushf
aam
jb
movl
outsl
mov
jg
rolb
rsm
into
inc
add
inc
mov
mov
enter
add
and
fnstenv
add
inc
adc
out
xor
repnz
nop
xor
in
rclb
mov
ficomps
xchg
roll
jns
push
jp
data16
sub
cli
mov
add
std
and
call
data16
sbb
jg
cli
add
xor
add
ja,pt
jno
add
xor
pop
daa
pop
test
mov
stc
popa
mov
mov
aam
adc
cmp
je
iret
dec
enter
cmp
je
jp
cld
add
sti
push
mov
jae
push
push
hlt
stos
shrl
jge
pushf
pusha
test
cli
sbb
pop
fadd
jp
nop
xchg
rcr
add
fidivrl
pop
mull
cmp
mov
call
push
jne
imul
push
xchg
lret
add
sub
les
dec
add
fdivrl
pop
pop
shll
xor
ret
mov
sbb
sub
dec
addb
loopne
insb
dec
enter
jnp
out
sbb
clc
sbb
ja
mov
cwtl
push
shlb
add
cltd
cmpsb
pop
push
jne
js
idivl
xchg
clc
cmc
popf
push
mov
sarl
jge
pop
xchg
lret
jne
mov
jae
cwtl
xor
and
out
inc
rcrl
inc
xor
je
subl
fwait
inc
lret
xor
shrb
flds
sbb
add
mov
add
jno
int3
cmpsl
pop
adc
shrb
or
xchg
mov
sub
jae
lock
lods
pusha
in
test
jge
add
mov
push
or
frstor
cmc
cmp
cmp
sub
or
xchg
es
andb
movsl
add
loop
mov
lea
pop
fistl
scas
inc
cld
adcb
push
pushf
xchg
add
pop
hlt
pop
xor
ret
sahf
in
add
jbe
mov
mov
xor
push
pop
push
call
sbb
jge
out
inc
push
add
int3
push
hlt
and
push
push
jecxz
push
lods
cmpsb
dec
incb
xor
sahf
jns
ret
inc
add
sub
mov
pop
cmp
add
addl
fwait
inc
ja
out
lock
push
mov
jns,pn
pusha
add
or
cmc
cwtl
add
push
push
sub
cmp
addb
xchg
test
mov
cmp
lds
out
push
mov
xor
and
iret
das
xor
xorb
mov
test
push
in
push
ja
add
mov
jecxz
xchg
and
xchg
cmpsb
vmread
sub
pop
jno
mov
add
sti
xchg
std
sarb
xchg
inc
cli
data16
in
adc
mov
add
popf
push
jl
insb
xchg
mov
orb
stos
cmp
and
push
scas
dec
xchg
add
push
clc
sbb
adc
and
sub
and
xor
pop
xor
mov
ljmp
ret
push
arpl
out
in
push
xor
adc
lahf
cwtl
stos
xor
fistps
jno
or
dec
fsub
sets
testb
lds
sbb
and
pop
add
dec
test
mov
push
and
bound
sbb
rorl
cmp
test
adc
mov
add
and
jp
mov
and
inc
or
mov
cli
add
shrb
pop
mov
aas
push
ror
jno
les
insl
mov
icebp
and
push
cmp
or
cltd
add
sub
add
or
push
lcall
call
fldl
xchg
xor
adcb
jbe
mov
das
add
push
ds
mull
imul
inc
cltd
lcall
js
add
loopne
xor
add
xor
dec
out
in
cmp
ljmp
and
or
push
or
cmpsl
and
dec
jg
out
push
lods
adc
add
insl
mov
into
add
xor
sarb
sub
pop
mov
rcrb
dec
bound
or
cmp
jno
aam
inc
mov
push
mov
aad
in
lds
push
xchg
xor
xor
rorb
mov
into
sub
sbb
test
out
add
pop
test
add
push
dec
push
in
icebp
adc
rcrl
aam
iret
sub
jae
xor
lds
fbstp
andb
cmp
jle
push
mov
add
test
add
sub
cmpsb
hlt
add
mov
shlb
imul
punpcklqdq
mov
into
add
xor
js
add
mov
push
imul
jecxz
xor
subb
inc
clc
add
sbb
add
cwtl
test
les
loop
rclb
mov
test
add
adc
test
mov
pop
cmp
or
push
add
dec
xlat
out
mov
mov
add
pop
mov
dec
mov
xlat
mov
jge
cmp
add
test
add
hlt
jbe
outsb
cmpsl
sbbb
mov
sub
roll
sub
cmp
jno
enter
inc
dec
inc
mov
mov
pop
std
sub
test
pop
add
scas
push
add
pushf
add
rorl
fildl
and
js
scas
mov
loop
add
jbe
add
cmp
mov
cmp
std
shlb
jmp
inc
jbe
or
icebp
push
int3
mov
stos
add
pusha
and
inc
sub
or
cld
jl
cmp
dec
int3
xor
or
add
in
adc
xchg
add
call
loop
outsl
mov
push
insl
push
sti
adc
ljmp
popw
xor
jmp
and
rcrb
sarb
aas
inc
popf
add
loope
xchg
jns
inc
pop
mov
xor
or
add
pop
lds
dec
and
add
add
ficomps
inc
js
cltd
add
and
jo
cmpsl
add
mov
test
leave
add
test
stos
and
push
popl
xchg
out
inc
add
cs
add
out
xchg
or
scas
fiaddl
and
mov
js
add
xor
and
repz
ficompl
push
add
fs
pusha
lret
pop
int3
cs
inc
sbb
lcall
mov
pop
testb
xchg
dec
adc
xor
cmpsl
xchg
add
insb
movq
jnp
fisttps
stos
cld
add
pop
aam
adc
jbe
inc
mov
mov
sub
xor
loope
xchg
and
leave
into
in
clc
sub
xor
mov
pusha
clc
mov
das
xchg
adc
loope
lock
sbb
and
jo
je
pop
jle
sub
lds
cmc
or
inc
or
mov
into
pop
add
sbb
pop
enter
add
pop
mov
int3
add
loop
cld
pop
sarb
cmpb
fsubl
cmp
outsl
lret
cld
xchg
popa
and
xchg
dec
movsl
leave
pop
adc
mov
jne
add
and
push
sbb
in
cmp
adc
add
lea
adc
jecxz
add
outsb
popf
xor
adc
les
ljmp
popa
in
jl
lea
adc
ficoms
push
mov
add
jp
aaa
test
bound
cmp
fdivs
sub
add
arpl
lret
cmc
inc
add
nop
pop
mov
push
xor
or
pop
paddb
mov
add
mov
mov
add
aaa
nop
add
and
sbb
adc
jge
inc
sub
sbb
dec
mov
das
and
rorb
xor
jns
sub
cmp
adc
pusha
movsb
mov
icebp
xchg
lock
add
sbb
loope
push
call
dec
andl
push
add
fimull
xchg
adc
add
cmpsb
in
sbb
lahf
jne
shlb
fbstp
push
xor
pop
sbb
add
stos
imul
in
cmp
add
mov
dec
rcl
and
or
in
mov
cmp
imul
mov
fisubs
call
loopne
test
add
lock
aam
cwtl
xchg
jb
rorb
inc
insl
rolb
inc
pusha
dec
mov
dec
add
inc
pop
sbb
and
add
arpl
sarl
testl
ror
movsb
push
cmpsl
call
or
add
ljmp
out
jmp
or
mov
movsb
cmpsl
aas
xor
mov
xor
ret
cmpsb
push
loop
adc
ficoms
add
jae
mov
pop
mov
out
ljmp
pushf
sbb
adc
dec
loopne
lret
mov
jmp
cmp
outsb
sbb
xor
js
pusha
xor
movsb
out
cpuid
xchg
shr
or
loope
out
sub
cld
adc
aas
arpl
adc
ljmp
mov
and
clc
subb
mov
and
xchg
sub
test
adc
aaa
shrl
and
mov
sbb
mov
jecxz
shrl
jmp
sbb
shlb
mov
mov
and
push
and
inc
pusha
jno
push
and
mov
inc
icebp
mov
xor
adc
clc
pusha
in
insl
aas
add
loop
repz
bound
jge
mov
and
mov
xor
sub
fdivrs
xor
movsb
or
xchg
mov
adc
fbstp
andl
xchg
sub
andb
pusha
jmp
in
push
adc
test
sahf
mov
xor
movsb
subb
insb
inc
and
sbb
imul
dec
sbb
sub
and
and
mov
movsb
pop
sbb
nop
push
xor
sub
cmp
jle
mov
sahf
in
and
mov
mov
lea
gs
sbb
loop
or
and
push
jno
jp
mov
mov
mov
cmp
jbe
mov
nop
dec
add
faddl
jl
stos
test
xor
fs
subl
pusha
insb
sub
mov
sbb
push
out
jl
in
and
mov
mov
loopne
jg
jmp
loope
test
mov
ljmp
jae
xchg
call
rcrl
add
mov
add
insb
or
mov
and
in
sub
cmp
out
movsbl
cmc
pop
jae
addr16
push
and
add
in
insb
cltd
scas
dec
outsl
mov
cmp
insb
pushf
or
cmp
pop
andl
dec
lods
xchg
out
ret
call
sbb
push
loop
push
outsl
andb
out
xor
xchg
xchg
cmpsb
xchg
push
sbb
mov
dec
mov
int
or
mov
inc
mov
cld
scas
push
inc
mov
mov
jo
mov
push
inc
andb
lahf
dec
lock
pop
sbb
add
adcb
mov
sbb
push
daa
mov
fstpt
cmp
pop
jnp
pop
jno
xchg
or
lea
mov
lods
movsl
mov
push
divb
sbbl
dec
mov
pop
push
push
or
repz
iret
mov
dec
xor
sbb
rolb
std
lcall
mov
rorl
add
clc
test
cmp
cltd
sbb
hlt
mov
and
cltd
stos
je
sbbl
mov
popf
sub
es
add
pop
loop
xor
shll
out
leave
and
cmc
xor
sub
and
mov
roll
add
cltd
add
jo
cltd
testl
imul
cmp
mov
dec
mov
xor
push
sub
xor
fsubs
or
aas
fdivl
std
addl
mov
cltd
loop
ds
add
pop
subb
xor
stos
jle
or
jno
xchg
dec
xlat
in
and
pop
sub
lock
mov
fwait
add
inc
aas
fildl
jne
or
sub
in
int
aad
add
add
popa
stos
popf
lods
add
insl
lds
add
repz
mov
aad
inc
or
arpl
cmp
push
shrb
mov
pop
in
push
cmp
sbb
sub
mov
mov
out
sahf
and
into
sub
xor
addb
test
inc
sahf
and
sub
sub
adc
sub
stos
and
scas
test
inc
dec
pop
pop
rcrl
mov
sbb
jmp
sub
jbe
adc
fadds
ret
addr16
lcall
shl
add
sarl
sbb
push
out
jl
clc
sub
popa
out
mov
push
stc
cmp
mov
cmp
sbb
jne
imul
xchg
incb
sub
repnz
addr16
in
testl
push
js
xchg
add
or
mov
outsl
int3
xor
pusha
push
cmp
or
xchg
roll
fiaddl
mov
xor
sbb
enter
icebp
fadd
addr16
cli
mov
push
jp
or
divb
jb
mov
mov
adc
xor
add
lret
and
xorl
or
aas
sbb
or
or
int
xor
scas
adc
out
sbb
adc
and
xor
add
cltd
xchg
push
inc
lods
imul
sti
push
lds
adc
sbb
or
dec
test
aaa
inc
add
xchg
or
sub
repz
addr16
cld
jae
lods
sti
pop
fsubs
xchg
int3
test
out
subb
movsl
xchg
cli
popa
cmp
fsubs
xchg
pop
hlt
inc
fbld
dec
dec
into
or
inc
add
adc
loopne
div
test
add
gs
sbb
insl
sbb
pop
repnz
jecxz
in
cwtl
pop
xchg
shll
inc
lods
shll
or
shl
or
xor
add
nop
or
or
add
xchg
push
jns
clc
pop
xlat
shlb
add
sbb
sub
negl
das
sbb
or
fsubl
out
mov
add
in
mov
dec
dec
and
fsubs
dec
mov
faddl
sbb
lods
jmp
fsubrl
mov
les
sub
mov
inc
out
mov
mov
push
leave
xor
xchg
adc
rclb
bound
mov
sbb
cmpsl
xchg
xchg
lds
dec
fnsave
fstps
lcall
xor
pop
jns
testb
test
popf
push
arpl
mov
sar
shll
js
shl
fadds
inc
lock
jecxz
es
add
or
clc
test
xchg
int
scas
mov
out
push
push
xchg
nop
dec
push
call
enter
scas
pop
sub
mov
sbb
add
mov
mov
pusha
xchg
adcl
ja
mov
sbb
adcl
cwtl
mov
loope
jnp
add
lods
insb
dec
lahf
add
mov
imul
inc
add
jge
cwtl
sbb
sbb
xchg
aaa
xor
clc
lret
or
dec
xchg
outsb
adc
test
add
mov
pusha
clc
mov
test
mov
inc
outsl
sub
xorb
mov
jmp
in
xchg
int3
push
addr16
ret
mov
incb
mov
push
add
ja
enter
push
mov
addb
popa
sub
push
pop
imul
jmp
mov
dec
nop
jnp
push
sbb
ucomiss
mov
and
add
scas
dec
and
add
sub
pop
inc
or
mov
sbb
stos
add
or
add
dec
xor
int3
iret
in
lds
nop
rol
repz
add
fmull
mov
inc
jns
add
sbb
std
mov
add
add
lret
cmpsb
dec
ficoml
pop
mov
jb
imul
mov
inc
rcrb
pusha
hlt
mov
sahf
mov
xchg
push
xchg
cmpsb
jle
js
add
loopne
icebp
aam
in
jbe
add
scas
fs
lods
push
mov
pop
add
fisttpl
add
and
add
xor
loopne
sub
mov
add
jecxz
negb
fiadds
mov
or
pop
lock
and
pushf
sbb
cli
add
pop
xchg
xlat
add
test
mov
and
shll
mov
dec
jg
into
arpl
out
scas
inc
outsb
and
mov
jae
inc
daa
imul
xchg
movsl
mov
and
jmp
mov
sarb
lret
sub
in
inc
int3
or
and
jp
add
fldl
faddl
movsl
outsl
dec
int
mov
repnz
dec
jle
cmp
or
add
push
outsl
adc
mov
sbbb
add
xor
jmp
mov
cli
add
lret
dec
jg
and
add
and
inc
xchg
or
sbb
andl
nop
aam
adc
sub
fucomp
out
inc
push
nop
adc
add
jae
fcompl
cwtl
pop
or
jl
push
push
cmp
lock
add
lret
out
jb
data16
or
add
loope
mov
sub
inc
enter
pop
je
test
add
fcomp
push
xor
add
xchg
rcll
fstpt
mov
cmpsl
call
jns
lock
xor
and
sbb
inc
sub
mov
xor
mov
fcoml
data16
mov
xchg
fisubl
into
push
enter
sbb
inc
push
and
loop
lret
jns
pusha
mov
dec
add
fmuls
inc
pop
es
mov
fs
jno
enter
out
pop
push
subl
lods
adc
add
jb
mov
sbb
lret
fnsave
fs
pop
inc
rclb
xor
int
in
mov
xchg
pop
jle
test
sbb
mov
and
shlb
sub
and
cmp
in
sub
and
or
and
xchg
pusha
std
ret
xor
mov
incb
js
je
adc
sbb
clc
sbb
mov
xor
jbe
gs
rcll
mov
xor
inc
shll
add
dec
imul
into
xchg
add
jae
mov
sbb
pop
inc
lea
flds
mov
call
imul
adc
scas
mov
inc
mov
movsl
pushf
add
out
popa
dec
xorl
outsb
clc
pop
cs
jo
inc
sbbb
add
mov
mov
lds
pop
mov
mov
xorb
icebp
cmp
mov
mov
andb
and
mov
lods
xchg
shrb
cmp
or
test
inc
jo
sbbb
cld
pop
mov
addb
dec
jb
lods
jecxz
add
adc
mov
andl
add
sub
pusha
and
or
inc
pop
or
out
stos
mov
push
jno
adc
fnstsw
mov
adc
sbb
in
lds
ficoms
xor
xor
and
js
cmp
repz
out
mov
stc
ss
lret
out
sbb
mov
loop
lret
rcrl
pop
sti
test
adc
loopne
adc
dec
add
imul
and
dec
test
mov
les
and
jno
arpl
jle
loope
ds
sbb
or
push
fsubrl
test
dec
pop
push
enter
xor
sub
xchg
je
cmp
pusha
nop
ljmp
sub
int3
and
cmc
insl
pop
es
int3
or
add
outsb
pop
or
hlt
iret
roll
lock
and
imul
push
add
and
add
jbe
jns
je
loope
xchg
xor
sbb
xchg
xor
pop
shrl
inc
lods
pusha
imul
xorb
hlt
adc
push
icebp
xchg
push
mov
mov
loop
popa
pop
sub
adc
sbb
les
ret
add
pop
jno
lret
cmp
pusha
xor
sbb
pop
pop
ds
cmp
mov
jge
hlt
jns
adc
and
jno
sub
daa
mov
xchg
push
cmp
jmp
xor
inc
mov
cmp
mov
jp
xchg
and
lret
pop
aam
add
addb
jne
sahf
int3
xor
pop
sub
dec
jo
dec
adc
or
and
push
rolb
adc
cltd
xor
loope
fmulp
mov
dec
ret
add
xchg
lods
js
adc
into
pop
in
mov
jmp
scas
sub
adc
sbb
add
sub
jo
sbb
mov
test
xor
sbb
push
enter
and
mov
sbb
inc
cs
or
jp
add
imul
add
jns
xchg
in
fwait
mov
xchg
adcb
scas
nop
and
pop
sub
mov
adc
cmp
test
lods
inc
mov
xchg
sbb
arpl
aaa
stc
call
ljmp
fisubrs
push
fwait
pusha
cmpl
mov
push
mov
push
mov
rdtsc
sti
sbb
adcb
enter
and
mov
mov
xchg
and
outsb
sub
mov
mov
and
xor
xor
mov
and
sub
enter
xchg
jb
fs
cmp
pop
push
add
mov
mov
daa
push
pop
push
inc
dec
mov
add
sarb
fidivs
in
jmp
jp
cmp
ja
repz
ljmp
jbe
mov
jo
jg
imul
add
mov
add
pop
pop
int3
ja
add
and
shl
testb
and
cmp
das
dec
fadd
pop
sbb
add
sub
mov
sbb
lahf
dec
cmpsb
add
xor
ret
out
rclb
pop
add
mov
fbstp
cwtl
sbb
pop
aam
cmp
xor
stos
inc
mov
gs
inc
mov
imul
mov
dec
xchg
jae
cld
movsl
rolb
aam
push
xchg
aad
mov
adc
add
test
ret
mov
jle
adcl
rcr
adc
add
xchg
data16
sar
test
xorb
clc
rcl
sub
adc
roll
js
dec
and
push
push
ffreep
aas
movntq
mov
add
mov
rcr
add
lods
shlb
push
rolb
add
sub
inc
and
push
scas
ret
xor
xor
into
jae
pop
and
push
adc
push
push
and
push
sub
and
adc
roll
ja
dec
add
xorb
mov
addr16
stos
sbb
andl
sbb
pop
cltd
xlat
xchg
sub
cmp
dec
pop
sbb
xor
inc
fadds
jo
cmp
adc
sub
cmp
adc
movsb
pop
mov
and
lret
adc
shlb
sbb
and
loopne
or
cmp
sub
mov
aaa
sub
pop
mov
loope
stc
popa
adcb
loop
mov
pop
inc
mov
dec
add
push
scas
push
push
nop
sub
test
inc
pop
mov
xor
sub
aaa
and
js
out
sbb
xor
inc
ror
popa
add
ja
adc
mov
outsl
cmp
fsubrs
xchg
jno
and
aam
out
add
xchg
mov
out
cmc
sbb
aaa
add
mov
dec
add
enter
xor
bound
add
mov
in
std
lock
xchg
push
test
add
imull
lea
scas
sbb
xor
pop
mov
pop
jmp
cmp
dec
add
jg
in
ja
cmp
ret
inc
pop
or
or
inc
lret
iret
nop
imull
cmc
out
cmp
test
rcrb
test
add
lods
std
vphsubdq
pop
mov
push
sbb
add
mov
loopne
adc
movsb
subb
dec
push
add
rcrb
jge
rolb
stos
cltd
jg
shl
add
push
mov
push
mov
icebp
inc
scas
test
out
sub
adc
sti
outsb
mov
rolb
adc
dec
and
divl
and
add
mov
adc
inc
aam
mov
stc
mov
fsubp
add
sbb
cmp
das
scas
push
popa
add
push
inc
movsb
testb
rolb
jg
add
dec
lret
sbb
movsb
add
add
out
fildl
xchg
test
adc
sbb
lock
dec
sbb
into
rclb
push
add
ficomps
pop
inc
loop
adc
sbb
clc
movsb
orb
outsl
add
fs
add
mov
add
cmp
iret
add
shlw
out
and
lods
cmp
add
pop
stc
cmp
cs
lods
add
insb
xchg
clc
pop
icebp
add
repz
icebp
xchg
cltd
cmp
push
andb
stos
cmp
addr16
out
jbe
lcall
add
dec
dec
mov
insb
add
adc
cmpl
xchg
push
adc
add
cmpsb
add
jnp
sti
inc
or
pop
fldl
ds
sahf
push
rolb
mov
xlat
aas
push
add
imul
add
icebp
ret
repnz
sahf
cmp
add
xchg
xor
add
mov
fstps
and
jns
jle
aam
jae
xchg
xchg
loope
xchg
decb
fisttps
and
add
in
xchg
sbb
fdivrp
dec
clc
mov
cmpsb
fsubrs
cmp
and
popf
mov
dec
or
cmp
lahf
in
mov
inc
arpl
push
add
sub
inc
sarl
add
add
jl
sbb
pop
push
mov
stc
sub
insb
add
cmc
mov
addb
addb
shlb
xchg
xchg
mov
dec
aad
call
lods
cwtl
push
int
jb
add
imul
add
fdivrs
lods
and
enter
or
xchg
sub
and
dec
sbb
add
mov
js
add
inc
addb
lahf
add
iret
and
push
addb
pop
into
xchg
loopne
inc
sti
out
or
addb
fldt
lock
pop
add
lret
mov
sti
mov
add
jo
sub
pusha
xchg
setnp
push
mov
jbe
mov
nop
inc
pop
mov
adc
pop
aam
xchg
and
dec
add
repz
lea
sti
add
jg
in
out
cmpsb
add
dec
inc
sbbb
std
mov
dec
push
pop
add
insb
into
das
jge
out
add
jle
mov
mov
das
bound
inc
sub
rclb
mov
or
adc
jl
ss
add
mov
xchg
loop
cmp
mov
int3
std
cs
add
clc
push
aaa
fwait
mov
daa
push
adc
xlat
push
repnz
xor
mov
sub
cwtl
iret
add
mov
xlat
subl
pop
xor
add
push
mov
ds
xchg
or
ret
lods
aas
pop
mov
add
repnz
adc
xchg
and
repz
dec
xchg
int3
popa
aam
pop
pop
sti
mov
and
cs
out
testl
xchg
xchg
bound
fistpll
jae
xor
into
cmp
mov
out
sarb
jmp
fiaddl
hlt
es
pusha
jae
stos
xchg
jno
ret
lahf
push
mov
pop
pop
rolb
lock
and
xchg
and
push
in
jnp
push
inc
mov
pop
incb
mov
jl
jge
and
test
mov
scas
jns
mov
popa
and
adc
xchg
insl
pop
jmp
push
push
mov
xchg
int3
add
and
adc
add
clc
inc
jg
jne
add
and
enter
rolb
pusha
mov
add
loope
adc
shlb
add
jmp
in
mov
dec
filds
pop
pop
sub
or
int3
outsb
add
ljmp
mov
test
pusha
pop
add
add
mov
subl
cwtl
clc
pop
mov
xchg
cmp
mov
cltd
dec
subb
mov
test
add
lds
push
add
test
sahf
adc
dec
jg
lock
add
cmp
pop
int
loopne
adc
and
mov
cmc
push
aas
lcall
loopne
cltd
popf
add
bound
movb
jae
out
repz
adc
jns
cs
sub
fsubl
lcall
cld
pop
dec
mov
enter
xchg
dec
xor
inc
and
into
adc
add
insb
mov
xchg
dec
lret
mov
jb
push
ss
popa
cmpsl
add
pop
mov
insb
push
push
das
stos
dec
sahf
pusha
insl
add
xchg
push
rclb
add
mov
and
imul
shll
divl
cmp
pop
mov
dec
push
mov
push
inc
mov
test
not
insl
jo
jle
sub
fwait
sbb
dec
mov
add
xchg
in
cs
or
loopne
xchg
pop
test
sub
cmp
sbb
mov
adc
xchg
pop
arpl
adc
out
inc
cmpl
lock
pop
mov
es
cmp
int3
cmp
loopne
xor
hlt
add
ds
push
xor
std
add
xchg
cmp
jo
das
mov
cmpsl
call
sub
mov
add
push
lock
pop
sahf
mov
push
scas
fdivs
adc
pop
xor
xchg
adc
add
push
mov
mov
or
and
xchg
push
adcl
inc
sbb
loope
xchg
mov
lods
mov
adc
repnz
mov
and
jmp
add
push
ds
xchg
test
rclb
push
imul
mov
out
dec
jmp
imul
jmp
aad
xor
sub
sbb
or
xchg
pop
jle
pop
or
cmpsb
movups
adc
add
xchg
lds
fdivrs
pop
shrb
dec
incl
mulb
cmp
addb
xchg
mov
adc
shl
mov
sbb
sub
add
push
add
test
fs
xchg
addb
outsb
jle
xchg
jecxz
xchg
and
fwait
sub
aaa
pop
fs
icebp
movsl
xchg
leave
add
jmp
push
loopne
xor
push
push
fistps
push
add
adc
xchg
fs
or
adc
sbb
arpl
mov
pop
lods
mov
mov
data16
inc
xchg
in
ficompl
je
push
mov
es
mov
sahf
push
ret
mov
je
inc
jecxz
add
adcl
subb
dec
add
sbbb
jl
lock
pushf
add
ss
mov
in
add
push
xchg
test
flds
and
push
jp
call
pushf
js
mov
xlat
out
mov
jle
and
dec
sbb
push
sub
flds
stc
das
xor
xlat
sub
orb
cmp
dec
xchg
pop
scas
mov
daa
in
sbb
sbb
leave
addr16
mov
pop
xor
push
or
outsb
movsb
push
popf
xor
aas
sub
cmc
xchg
negb
push
ja
add
pop
jo
add
ret
xchg
icebp
push
subl
js
mov
loop
lods
dec
fs
xchg
daa
xchg
add
aaa
mov
rcrb
or
push
insl
in
xchg
push
xor
mov
adc
stos
sub
add
enter
clts
jmp
mov
loope
scas
loop
jo
test
push
jae
and
test
add
sbb
mov
ret
sbb
push
and
repnz
dec
xchg
das
cli
xor
add
pushf
pop
fsubrl
movl
xchg
je
jecxz
mov
ret
cli
ja
or
push
mov
pop
push
scas
add
or
mov
inc
sti
xchg
lret
popf
add
xor
add
mov
jnp
out
dec
aad
add
push
scas
nop
hlt
rorb
out
shl
mov
cmp
fisttpll
test
add
test
fcmovb
fldt
jno
pmuludq
loop
xor
jne
sbb
pop
add
mov
pop
add
mov
xor
mov
imul
push
fstps
pop
enter
sub
mov
add
jp
adc
rolb
add
inc
or
dec
sbb
pop
push
rcrb
xor
cmc
cmp
add
movsl
adc
les
xor
hlt
cs
wrmsr
jns
mov
aas
stos
jo
push
pop
je
add
scas
sbb
and
lcall
addr16
rcll
es
inc
out
faddl
lods
addl
loopne
mov
xchg
dec
or
sbb
jl
jo
loopne
jge
ds
add
and
add
and
icebp
or
roll
push
push
cmp
push
rol
fisubrl
and
pop
out
loopne
sub
addb
sub
fimuls
dec
mov
jno
add
daa
das
fldenv
call
js
dec
sbb
cs
cmp
icebp
pop
in
dec
loopne
mov
pusha
in
push
push
cmpsl
add
ja
inc
mov
mov
out
cmp
in
out
add
movsb
sub
add
mov
xor
pop
inc
add
lret
cltd
pop
outsb
or
add
cwtl
jmp
add
addr16
push
outsb
xor
add
ret
sub
and
incl
xchg
xor
test
in
dec
pop
mov
lods
sub
mov
call
stos
mov
ljmp
and
out
add
mov
roll
orl
les
out
mov
pop
filds
stos
sbb
mov
js
sti
xor
xchg
dec
imul
popl
mov
mov
roll
pop
fldcw
outsb
aam
ret
push
xchg
scas
sbb
cli
iret
mov
dec
mov
pop
xchg
push
pushf
pusha
add
push
cmp
xchg
fcomps
adc
dec
rorb
xchg
mov
pusha
or
add
cli
ds
jecxz
into
add
fwait
push
in
add
dec
add
mov
cltd
cld
out
xchg
add
test
cld
clc
pop
add
stos
stos
lods
sub
shlb
jns
std
fisttpl
sub
pop
js
jae
add
fldl
jmp
les
lods
push
xor
insl
add
mov
je
xchg
xchg
pusha
push
sahf
push
push
xchg
sti
scas
pop
test
adc
lds
push
mov
adc
shlb
push
xchg
pop
dec
sub
jb
add
int
xchg
test
xor
and
stos
or
adc
mov
mov
inc
adc
inc
jnp
add
lret
rorl
jo
cld
aad
mov
into
pop
imul
or
or
ljmp
pop
adc
scas
hlt
movb
nop
rclb
jge
pop
sbb
out
jecxz
adc
sbb
ljmp
lods
sub
add
inc
add
xchg
cmpsb
xchg
hlt
lret
jns
xchg
mov
in
cmpb
sarl
pop
jno
jmp
jbe
cmp
xchg
clc
scas
jmp
add
dec
cmp
mov
je
aaa
jecxz
in
std
sbbb
dec
add
int
jo
mov
scas
sub
cli
or
xchg
adc
and
ljmp
push
sarb
fdivs
and
sub
pop
imul
stos
cli
sbb
fucomp
adcb
jl
jne
add
test
lods
push
sbb
dec
xor
sub
push
shrb
sub
and
adc
ret
sub
int
jmp
lea
addr16
clc
cmp
fcomps
or
sbb
daa
lret
or
add
movsb
in
imul
ds
dec
pop
jl
pop
push
jns
ljmp
mov
add
mov
std
add
daa
mov
movsl
push
addr16
xchg
shrb
loopne
mov
cmp
jo,pn
adc
pop
movsl
loopne
lods
cmc
add
xor
jl
je
ljmp
dec
sub
jno
scas
in
sub
mov
data16
cmp
stos
and
dec
pusha
adc
sub
mov
sub
pusha
rol
setno
mov
cmpsl
or
push
outsl
pop
jbe
add
mov
dec
sub
in
rcrb
sbb
sub
lods
das
sti
add
js
inc
shlb
push
cld
jo
pushf
rcr
popf
insl
rolb
cli
rorb
rsqrtps
sbb
pusha
mov
dec
scas
andl
fstps
mul
add
and
add
mov
sahf
dec
add
inc
arpl
shl
lods
adc
call
dec
in
push
jo
pop
xchg
dec
nop
mov
orb
or
pusha
mov
or
ja
arpl
inc
mov
adc
jb
mov
andb
mov
aas
arpl
dec
jbe
cmpsl
pop
pop
out
int3
sbb
js
loopne
and
ja
addr16
xchg
fsub
add
push
movsl
je
js
iret
add
jo
pop
mov
divl
add
add
lret
xlat
lret
xchg
sarb
xor
jge
cmp
loope
or
mov
xchg
shrl
pop
nop
enter
xchg
mov
jg
mov
aad
inc
add
adc
mov
jp
shr
mov
add
test
lahf
and
nop
dec
repnz
jns
push
js
xchg
icebp
iret
fsts
addr16
shlb
test
lea
negl
sbb
scas
popa
xorl
nop
std
leave
cmp
mov
pop
xor
push
jno
imul
add
nop
loop
add
std
add
leave
cmp
pop
mov
dec
push
pushf
adc
xchg
mov
repnz
add
insb
mov
cmpsb
sub
ja
and
add
mov
loopne
pop
add
stos
pop
inc
add
pminsw
jnp
mov
repnz
sub
cld
lock
cmp
or
stos
pusha
mov
aam
and
sbb
sub
pop
int
dec
call
add
xchg
popf
pop
add
mov
les
nop
add
shrl
and
ds
cmp
xchg
adc
dec
stos
sti
mov
shl
add
xchg
xor
loopne
loopne
ljmp
cmp
ss
or
mov
mov
daa
mov
clc
mov
push
mov
leave
mov
add
adcb
adc
jl
das
stos
je
repnz
ss
ljmp
add
data16
daa
inc
xor
in
inc
dec
cmp
es
xchg
shrb
in
jb
add
adc
add
or
add
jecxz
sahf
shl
pusha
jle
add
inc
stos
mov
in
test
sbb
jbe
pop
imul
mov
push
jp
dec
outsl
das
inc
jbe
add
push
and
sub
adcb
xchg
and
push
call
mov
dec
lret
cli
andb
pop
jge
test
mov
cmp
adc
xchg
xor
lds
bound
rcll
cmpsl
je
leave
in
cmp
xchg
pop
loopne
mov
inc
loop
xor
and
mov
add
pop
aam
iret
aas
in
stos
sbb
aaa
inc
mov
pusha
cmp
add
adc
mov
jae
sbb
out
insb
add
jbe
xchg
jb
test
jl
add
cld
push
xor
clc
adc
push
add
sbb
mov
pusha
mov
shl
in
rcr
xchg
psubsb
adcb
roll
jns
sbb
pop
cli
iret
dec
add
dec
scas
pop
nop
xor
sbb
sub
stos
sbb
add
add
jmp
lea
sub
rcll
pop
cltd
fadds
pop
sub
mov
mov
inc
push
add
ja
je
aad
cmp
add
cmp
gs
push
add
lahf
js
sbb
push
push
mov
movsl
mov
sti
jecxz
or
clc
add
cs
test
cmc
in
add
sbb
fstps
mov
xlat
and
pop
inc
add
push
leave
lahf
cli
nop
mov
hlt
cmp
push
xchg
fadd
jne
add
and
pushf
add
int3
xor
add
lds
pop
push
jmp
cmp
lret
pushf
mov
les
or
fisubl
mov
sub
jno
shlb
and
jae
add
push
adc
mov
cmc
push
mov
ficoms
or
add
lret
pusha
scas
xchg
fadds
int
enter
pop
mov
jns
mov
jg
add
push
sahf
rcll
idivl
hlt
mov
mov
loope
dec
dec
adc
pop
stos
shrl
popf
inc
test
add
imul
daa
outsb
sbb
xchg
inc
in
mov
rcrl
inc
sbb
aam
push
outsl
add
add
sub
subl
into
test
lock
std
in
stos
dec
fadds
sti
leave
lcall
test
mov
sahf
mov
adc
push
xchg
add
insb
pop
inc
xor
xor
dec
ffreep
sub
aaa
orb
int
lret
add
repnz
mov
or
out
mov
je
mov
sbb
xchg
in
or
cs
sbb
mov
pusha
mov
push
push
cmp
ret
sti
nop
adc
sbb
mov
leave
and
mov
xor
pop
hlt
mov
mov
or
cmp
je
add
pop
sbb
clc
mov
cmpsl
push
addb
inc
aaa
cli
push
xor
cld
test
jns
jbe
outsb
add
jo
lahf
pop
cmp
enter
sbbl
nop
cltd
icebp
ja
out
jae
and
or
add
je
es
lock
mov
test
or
hlt
sbb
sub
loopne
test
push
pop
inc
sbbb
mov
testb
sbb
mov
les
inc
icebp
add
fwait
outsl
cmp
add
shlb
out
add
sub
pop
sti
es
jb
incb
inc
inc
gs
call
cmp
pop
and
rol
insb
jmp
jno
pop
ja
cmp
outsb
mov
sti
and
cwtl
inc
aad
mov
scas
mov
pushf
inc
imul
dec
push
mov
xchg
pop
xor
mov
pop
xor
mov
sbb
ss
sbb
std
mov
sub
fnstcw
imul
jno
dec
addr16
add
out
pop
je
hlt
fisubl
jmp
orb
in
add
sbb
outsb
or
pushf
pop
cmp
push
cmp
sarl
fadds
adc
and
cmc
pop
mov
loopne
sub
popa
add
dec
xor
push
jae
es
mov
dec
mov
pushf
pusha
mov
cs
jmp
adc
xchg
add
mov
les
aaa
mov
in
add
ret
rcl
adc
push
mov
data16
sub
in
add
mov
lcall
inc
jno
push
aad
or
pop
gs
ret
mov
das
aaa
adc
xchg
mov
aam
insb
ds
jle
mov
popa
ss
pusha
stos
inc
mov
push
scas
jns
xor
aas
xor
pop
mov
xchg
or
push
in
fldl
es
mov
dec
movsb
int
and
jbe
jns
pop
cltd
jmp
cli
fimull
push
adc
fs
mov
int3
iret
jne
icebp
cmc
popa
add
dec
mov
add
xor
ljmp
mov
dec
outsb
ret
pavgw
mov
sti
and
xor
cmp
or
xchg
cld
call
cli
pop
xchg
sbb
xor
cmp
mov
add
mov
imul
dec
sbb
int3
lock
mov
fildl
sub
jle
nop
xor
fiaddl
addl
xchg
push
insl
jmp
add
fsubl
popa
in
add
insl
lret
notl
cmp
leave
jle
jo
cmpb
mov
xor
lock
mov
and
enter
cwtl
std
push
push
test
mov
mov
stos
sub
icebp
ja
cmp
add
ret
mov
add
cwtl
push
pusha
inc
nop
lahf
push
ret
mov
enter
mov
xchg
adc
cmp
add
mov
imul
in
shr
mov
push
mov
pop
shl
inc
adcb
inc
repnz
mov
push
ret
sub
roll
out
mov
push
nop
and
lahf
add
pop
push
addb
add
out
fcmovnb
fildll
ret
lahf
in
xchg
cli
in
loopne
leave
cmp
xor
mov
jnp
ja
imul
loop
or
dec
mov
shrb
incb
jne
jo
pop
xchg
sbb
andl
mov
mov
fs
mov
mov
in
xchg
add
aas
xor
or
inc
xchg
push
add
push
push
mov
pop
and
imul
inc
subb
arpl
into
add
test
jle
fsubr
xchg
add
xchg
jmp
xchg
mov
or
add
add
addr16
add
je
jg
push
insl
std
push
mov
jl
sub
adc
fs
pop
add
cltd
rolb
jae
jl
inc
test
sbb
mov
in
sbb
xchg
cmpsb
add
pop
loop
filds
sub
add
cld
push
es
mov
or
sbb
popf
js
jle
adc
add
mov
loopne
pop
add
daa
add
mov
lahf
sub
push
fcomp
add
mov
sbbb
outsb
push
movzwl
pop
lods
mov
jb
in
add
push
jp
adc
or
lcall
adc
xor
aaa
scas
dec
das
mov
out
xchg
add
pop
mov
or
inc
popf
in
sub
mov
lods
jle
sahf
addl
dec
cmp
jne
cmp
ljmp
jbe
and
push
lahf
add
xchg
out
rolb
loop
sbb
jno
push
pop
loope
adcb
cltd
cmp
ficoms
xor
push
cmc
add
sbb
popl
dec
and
sbb
add
cli
sub
xor
push
xchg
popf
add
dec
fadds
cmp
mov
add
cmp
jo
icebp
daa
fcmovu
mov
ret
sbb
bound
shrl
mov
inc
popa
add
lds
or
xor
je
adc
aaa
sub
hlt
ds
fdivs
mov
xchg
iret
pop
cltd
mov
cmp
and
add
addb
notl
pop
pop
ds
ret
cltd
call
xor
sbb
add
inc
rcrl
cmpb
pushf
ret
mov
mov
mov
pop
lret
pop
adcl
add
adc
lret
test
inc
pushf
dec
sbb
xor
sbb
mov
jb
call
insb
movsb
xor
mov
cmpsl
xlat
mov
les
insb
fsubrs
stos
mov
imul
mov
pop
mov
ds
js,pn
getsec
stos
and
loopne
pop
test
or
add
lods
aaa
lret
ret
adc
mov
dec
repz
mov
add
fdivr
mov
pop
add
add
jp
sbb
push
add
pop
or
cmpsl
jno
cwtl
mov
loopne
cmp
mov
bound
add
in
add
outsl
or
call
mov
mov
pushf
add
mov
repnz
adc
fs
add
adc
outsb
or
push
lods
lcall
out
mov
in
inc
xchg
aam
lret
add
testb
in
mov
loopne
cli
es
xor
mov
pop
insb
out
and
mov
add
cli
and
xor
inc
sahf
push
adc
testl
and
pop
push
sub
pop
shlb
out
hlt
pop
add
or
mov
sbb
cvtpi2ps
enter
mov
nop
adc
add
add
adc
or
sbb
xor
mov
aas
int3
clc
stos
aam
and
add
adcb
sub
xor
sbb
inc
lds
ret
cs
call
add
movl
mov
sub
gs
popf
pop
dec
jmp
ficomps
mov
add
add
hlt
jg
xchg
nop
add
out
lods
call
imul
in
imul
test
pop
adc
dec
js
inc
arpl
add
loop
lcall
fistpll
add
mov
jg
cmc
pop
testb
pop
shl
in
mov
inc
repnz
gs
insb
lods
mov
shlb
cmp
inc
lcall
pushw
pop
add
jnp
pop
leave
sbb
dec
xchg
xchg
jecxz
insb
add
mov
push
std
xor
rcll
cmp
push
xor
inc
and
add
shlb
int3
mov
jo
dec
ja
push
push
ret
fadd
mov
cmc
xchg
xor
cmp
fadds
add
clc
pusha
pusha
cld
sub
rorl
adc
imul
xchg
icebp
sbb
test
lods
add
fwait
ret
sahf
mov
jp
icebp
pop
sbb
mov
push
adc
sbb
jl
dec
and
xchg
add
sahf
mov
pop
inc
xor
add
mov
imul
jp
adc
and
pop
aam
jge
outsl
inc
movsl
mov
lds
mov
xchg
xor
adc
xchg
pop
fimuls
push
andb
dec
cs
cmp
inc
sub
adc
add
jb
ret
cmpl
adc
sub
dec
push
popa
add
rcrb
pop
out
pop
or
sub
fmuls
lahf
pusha
gs
dec
adc
inc
adcl
xchg
mov
mov
pop
shlb
push
sti
cld
mov
mov
adcb
push
enter
shlb
dec
add
inc
gs
inc
adc
fildl
outsw
sbb
jae
add
mov
xchg
aaa
iret
pop
cmpsb
inc
add
lcall
arpl
outsb
pusha
push
dec
test
pushf
bound
push
fsubrl
inc
sbb
cwtl
push
xor
dec
insb
scas
cmp
sbb
cmp
push
pop
push
xor
sbb
cltd
pop
scas
xchg
push
push
add
outsb
xchg
sbb
add
test
pop
arpl
adc
mov
movsl
xchg
stos
pop
jb
test
std
mov
add
shll
andb
push
aas
dec
add
jbe
aaa
add
inc
lret
inc
leave
add
dec
jns
out
xor
sub
lods
push
push
add
dec
dec
rorl
ja
push
jmp
dec
movb
push
push
bound
inc
mov
jnp
sbb
jo
mov
fcmovb
loopne
jge
push
outsl
into
cs
orb
test
sti
dec
mov
cmpb
cmp
in
les
or
push
lods
out
or
insl
xor
cmp
in
test
dec
shrb
data16
fisubs
adc
and
sub
andl
mov
add
pop
cmpsb
and
mov
push
jl
mov
sub
pop
ret
jecxz
inc
fcom
xchg
sti
jle
add
je
enter
test
add
incb
pushf
inc
mov
std
add
outsl
jo
mov
adc
sub
sti
loope
xchg
roll
outsl
or
aas
xchg
loop
sar
push
inc
add
je
dec
pop
and
mov
out
inc
in
sbb
imul
push
pop
mov
mov
cli
out
add
out
mov
pop
xchg
aas
cmp
pop
nop
lahf
jne
sbb
sub
outsb
cmp
test
jmp
pop
jno
jae
add
push
das
sar
icebp
roll
lods
pop
jne
push
pusha
cs
cmp
decl
jmp
testl
and
mov
pop
ljmp
loope
adc
out
ret
add
sbb
xlat
inc
push
and
adc
mov
adc
jp
in
or
and
cmp
adc
mov
mov
das
loopne
wrmsr
push
push
adc
mov
pop
scas
mov
push
xor
je
nop
mov
cmp
push
cwtl
pop
dec
adc
popa
pop
pop
jno
jg
cltd
add
add
inc
loopne
das
and
pusha
popf
jmp
and
mov
dec
sysenter
mov
inc
push
xchg
movb
or
rcrb
loop
leave
or
ds
test
nop
add
ljmp
add
movsb
fidivs
mov
sbb
clc
xor
sub
add
imul
add
mov
negl
cwtl
add
push
call
lock
jns
aaa
xlat
fucomp
in
xchg
push
xchg
add
sbb
enter
or
sahf
inc
push
xchg
scas
adcb
popf
and
shlb
mov
mov
mov
loop
hlt
cmc
cwtl
add
fchs
sarb
adcb
cmpb
gs
mov
add
xchg
sbb
sub
cs
pop
push
and
fimull
cmp
dec
dec
add
test
lds
and
mov
inc
or
and
or
push
mov
pop
jmp
mov
cwtl
lret
adc
dec
lock
mov
mov
loopne
mov
fidivl
inc
xor
push
test
sbb
mov
and
dec
cwtl
jmp
add
inc
push
mov
in
add
xor
inc
fisttpll
andb
int3
xchg
adcb
cmc
test
ja
mov
cs
push
xchg
jp
adc
scas
pop
pop
out
mov
xlat
int3
add
lret
cmp
jge
add
out
gs
cmc
data16
or
jg
add
mov
push
mov
lahf
dec
rorb
or
cmpsl
lds
mov
adc
in
pop
ror
push
outsl
in
pop
pushf
jbe
dec
inc
shlb
loopne
jmp
dec
add
mov
add
jle
addr16
sbb
pop
int
insb
insl
cmpb
mov
mov
mov
jo
pop
lahf
jns
test
fstp
pusha
mov
or
sbb
push
fiaddl
cmp
iret
cmp
add
adc
test
inc
and
or
xchg
mov
push
and
or
xor
and
sbb
jl
mov
mov
in
add
inc
rclb
push
std
xor
mov
adc
pop
pop
js
adc
imul
sarl
andb
cs
ltr
loop
cmpsb
cmp
mov
addl
ret
or
in
cwtl
jle
jge
fwait
adc
daa
add
xchg
cmp
cltd
and
pop
cmp
leave
xor
dec
cmpsb
lock
mov
add
jae
aas
mov
sub
in
mov
in
sbb
shll
faddl
push
test
nop
lock
xor
dec
fwait
addl
mul
jmp
mov
push
movsb
add
data16
xchg
jns
push
sahf
push
cmpb
or
stos
mov
pushf
inc
mov
adc
xchg
cwtl
or
popf
add
fldt
xchg
sbb
lock
test
jge
add
or
cmpl
add
lret
mov
sbb
add
ret
inc
push
int
add
mov
mov
or
andb
mov
shrl
pop
xor
xchg
testb
mov
and
or
lret
pop
leave
roll
pop
addr16
shl
xchg
fnstsw
pop
rolb
and
sub
fcmove
insl
sti
cmp
or
ljmp
filds
movb
mov
inc
repnz
and
xor
jge
in
dec
dec
jl
fdivl
mov
add
jmp
add
ss
out
pop
nop
push
mov
add
push
ja
cmp
jge
lret
cmpsb
imul
in
mov
fbld
jb
scas
push
add
cmp
and
push
es
sahf
add
icebp
jmp
in
mov
aam
jae
scas
mov
dec
lret
add
sub
inc
enter
add
push
mov
in
xchg
push
rolb
or
js
inc
dec
dec
add
stos
lock
sbb
xchg
pop
mov
jnp
rolb
imul
add
scas
sbb
jl
addb
add
cltd
push
daa
inc
and
pop
xchg
inc
in
mov
cmpsl
add
jbe
cld
ja
or
inc
jns
pop
sub
dec
divb
andb
pop
in
cmp
test
hlt
add
out
xor
test
pop
push
add
push
add
pop
xchg
roll
dec
push
loop
fmuls
outsb
mov
sub
ds
movb
inc
push
jbe
adc
loope
xchg
mov
add
mov
add
or
and
pop
sbb
lods
out
fisttpll
add
aaa
add
ret
jb
mov
push
pop
ror
lret
add
sbbl
inc
roll
xor
sub
add
in
add
pusha
je
mov
inc
shrb
cld
jbe
ljmp
test
std
cmp
or
sbb
testb
stc
in
dec
sbb
stos
out
mov
adc
rolb
jecxz
aaa
mov
add
sarl
or
dec
test
dec
xchg
mov
sbb
pop
and
mov
xchg
addb
ret
cmc
jne
jle
jno
and
fucom
add
inc
xchg
and
jne
icebp
idivb
pop
sti
ja,pt
or
lahf
mov
cmp
popl
cmpsl
xchg
repz
fsubrs
hlt
leave
std
xor
cmp
scas
and
lcall
mov
push
push
fdivrs
cmp
lods
mov
std
jne
xchg
add
ja
loop
imul
addr16
mov
mov
push
or
adc
jno
ljmp
mov
roll
xor
sub
lret
jns
xchg
pop
clc
test
xor
sbb
jg
sti
sbb
xchg
inc
mov
ljmp
fadd
inc
faddl
and
movsb
setnp
fimuls
iret
jo
push
sub
addr16
test
idiv
in
cltd
push
lahf
add
pop
xor
inc
mov
out
xor
scas
je
enter
cmpsb
sbbb
dec
clc
mov
lods
es
inc
faddl
gs
movsl
and
movl
xlat
jo
adc
pop
push
push
xchg
inc
fs
cli
mov
xchg
lods
and
lret
pop
cmpsb
and
cmp
ss
sub
and
sti
fbstp
dec
shr
andb
mov
cmp
scas
rolb
add
dec
lock
sub
sarb
adc
add
dec
jecxz
repnz
sub
dec
dec
mov
and
out
loope
cld
add
sbb
xchg
add
mov
xor
das
stc
and
mov
and
pop
subl
mov
outsl
inc
fdivl
mov
cld
mov
xlat
push
pushf
pushf
adc
shlb
imul
cmp
jb
add
andps
jne
hlt
lret
mov
add
and
js
pusha
lods
test
daa
data16
sub
repz
hlt
jecxz
stos
cli
jns
xchg
mov
das
add
bound
std
loop
pop
push
loope
testb
in
pop
pop
lods
leave
cli
out
aas
fldlg2
andl
sbb
or
sbb
rcr
inc
and
and
lods
fidivs
and
cmpb
adc
mov
pop
loopne
jg
lret
add
xchg
mov
jno
cli
sub
adc
inc
jle
add
push
add
lds
arpl
nop
sarb
scas
and
aad
iret
push
sar
add
jecxz
mov
push
popa
arpl
pop
stos
sub
insl
addr16
push
add
gs
adc
js
jg
adc
and
pop
in
mov
faddl
mov
out
xor
in
cwtl
jl
push
addl
test
popa
in
mov
add
fimull
push
push
dec
stc
cmc
and
sbb
adc
xor
movsl
push
lods
mov
push
addb
fsubrl
adc
mov
pop
faddl
enter
add
je
arpl
repnz
add
pmulhuw
mov
xchg
pop
push
mov
add
pop
into
shlb
mov
test
fsubrs
gs
jg
add
sahf
cmp
add
add
mov
add
lret
aam
jnp
add
mov
mov
add
js
pop
pop
aam
add
dec
pop
shlb
add
test
shll
out
subb
lock
mov
es
mov
mov
int3
add
shll
xor
shrl
push
imul
cmpsb
fadds
add
push
inc
mov
or
movsb
pop
adc
xchg
adc
add
and
dec
popa
es
fs
cwtl
jb
push
stc
aad
test
into
push
or
inc
fld
unpcklps
add
mov
out
insb
repz
sbb
cs
push
cmp
out
and
ljmp
pop
xchg
xchg
push
pop
fldenv
inc
xor
mov
and
push
roll
push
cli
mov
push
dec
adc
jmp
cmp
cs
add
in
mov
icebp
xor
orb
cmp
sbb
cltd
push
sbb
add
in
leave
jo
add
xor
out
or
mov
sbb
call
les
pop
movb
in
rorb
scas
add
jnp
cmpsb
test
cmpl
pusha
mov
mov
sbb
xchg
out
cld
int
cmp
add
cmp
xchg
mov
repz
push
bound
sbb
add
orb
pop
mov
pop
pop
je
iret
popl
cld
fcom
cmc
cs
fisttpll
or
xchg
add
pop
lcall
adc
add
in
xlat
cli
or
loop
dec
mov
cmpsb
sti
dec
stos
lock
ret
push
mov
and
sbb
sub
add
iret
test
add
inc
cmp
jl
inc
js
sub
inc
cwtl
push
scas
push
incl
cmp
add
imul
mov
push
cmp
loopne
adc
lods
add
test
cs
lock
andb
fsubs
cs
and
test
pop
xor
xchg
test
xchg
and
push
popf
jns
imul
roll
and
pop
push
in
jae
aam
negl
dec
jle
adc
loopne
adc
test
shll
add
dec
adc
repnz
mov
test
xor
push
pushf
popf
cmp
mov
leave
add
dec
ret
loop
stos
push
aaa
push
push
jo
cmpl
clc
loopne
or
pop
aas
loopne
mov
pop
add
jne
std
add
push
inc
xchg
out
pop
cmpsb
into
mov
xlat
mov
inc
pop
add
push
or
add
aas
adc
nop
je
clc
or
mov
add
cmp
aas
cld
das
xorb
xchg
jbe
add
mov
add
xchg
add
adc
inc
add
cmp
dec
add
aas
add
inc
shl
or
outsb
pusha
add
jbe
mov
add
sarb
mov
imul
cltd
iret
stos
xor
lock
ret
ja
nop
sub
repnz
push
enter
add
and
jno
icebp
stos
add
insb
jne
sahf
daa
dec
clc
in
add
cld
sbb
notl
aad
sbb
push
lds
mov
jb
lret
xchg
out
mov
cltd
inc
sbb
pop
push
or
jl
mov
mov
add
shlb
xor
mov
inc
cmp
flds
mov
movsl
xchg
add
dec
adc
dec
sbb
add
cmpb
add
xchg
dec
add
test
push
hlt
mov
add
mov
push
mov
and
or
mov
pop
test
jmp
stos
adc
sbb
fmull
data16
scas
arpl
mov
lock
jno
pop
xor
mov
bswap
inc
and
sub
add
int
inc
in
jg
and
loopne
add
addr16
roll
ss
lods
movl
xor
dec
and
mov
xchg
jae
xlat
add
dec
popf
cmc
add
xchg
mov
xchg
mov
dec
fimull
pop
bound
dec
add
movsl
loopne
push
dec
push
push
sar
sbb
out
mov
sbb
mov
out
in
mov
inc
push
push
sbb
repz
pop
adc
jno
add
inc
rcrl
or
pop
data16
mov
xchg
test
and
adc
cmp
xor
push
xor
sbb
pop
pop
fsubr
push
out
and
add
or
dec
loop
add
or
cwtl
std
mov
adc
aas
rcrb
inc
jnp
fs
push
insl
adc
and
push
jp
inc
dec
jge
rolb
add
test
sti
ss
add
leave
cmc
enter
sahf
cld
call
test
shrl
sub
xchg
add
fdivrp
xor
inc
xchg
imull
adc
fcmovb
add
mov
add
push
out
xchg
mov
add
inc
pop
push
jno
sbb
mov
fldl
jle
or
add
aam
pop
cmp
sahf
add
add
stos
mov
cmpsb
jno
push
ret
push
push
xchg
inc
lods
mov
mov
lea
add
fnstcw
fisubl
clc
lds
and
mov
stc
or
movsb
inc
and
push
pop
cmp
sbb
mov
xchg
adc
or
pop
test
jne
imul
stos
jecxz
add
cmp
dec
mov
push
xchg
fwait
in
aaa
push
out
jl
data16
xchg
jge
jbe
xchg
mov
int
ss
dec
daa
inc
add
xchg
rol
cmpsl
sub
jge
mov
sbb
pop
lahf
add
sahf
and
mov
je
adc
dec
shll
add
int3
loope
dec
subb
sub
jp
outsl
roll
fstpl
or
jo
sbb
into
ret
inc
movsb
xlat
jo
pop
out
insb
in
lret
cs
sbbl
pop
push
in
call
jnp
add
or
jbe
sub
and
lds
cwtl
stos
add
imul
sti
xchg
adc
cmp
hlt
xorl
fstl
shlb
insl
add
jns
pop
int
sbb
lods
bound
dec
sbb
loope
pop
filds
jg
mov
lock
nop
icebp
rolb
out
xchg
sbb
jle
inc
test
test
movsb
jb
sub
pop
aam
inc
dec
add
iret
xor
scas
mov
ljmp
imul
jmp
xchg
rclb
sub
xchg
inc
sti
daa
cli
sbb
enter
add
fadds
loopne
ret
and
sbbb
dec
cmpsl
mov
push
fistl
cmp
push
loopne
sbbb
in
add
xchg
xor
or
in
pop
outsl
leave
push
push
out
and
rclb
pop
or
fcoms
pop
scas
loop
fstpt
insb
sbb
out
mov
add
mov
cwtl
inc
test
cmp
mov
xchg
sub
jl
and
imul
push
repnz
sbb
pop
push
sahf
sub
push
jbe
add
inc
negl
adc
cwtl
in
in
or
xor
pop
cmp
dec
and
es
das
cld
cmp
sub
imul
divl
loopne
lods
scas
xchg
sbb
add
lret
or
sbb
sub
add
int3
faddl
or
add
mov
sub
lods
xchg
popf
lock
cmp
push
mov
add
cltd
sub
stos
mov
mov
jno
sub
insb
add
push
and
xchg
fdiv
add
ss
pop
cmp
psubsb
out
into
loopne
mov
int
add
jae
push
fs
sub
xor
jo
test
lret
test
sarb
mov
lahf
add
loopne
xchg
or
pop
jno
sub
add
adc
xchg
adc
add
mov
jb
mov
add
add
into
add
mul
out
test
add
mov
sbb
es
repnz
add
inc
and
add
xlat
out
ret
add
add
pop
sbb
mov
add
jmp
sbb
pop
add
inc
add
into
rclb
pop
testb
xchg
mov
mov
in
inc
cmp
clc
gs
aad
lods
add
xor
sbb
mov
mov
jno
loopne
ljmp
mov
ret
arpl
sbb
fisubs
adc
cmpsb
dec
ljmp
in
ret
cld
nop
loop
push
add
loope
es
push
lret
inc
mov
data16
xchg
fistps
push
mov
jp
fwait
orb
xor
xor
lods
mov
add
popf
mov
pop
in
inc
and
insb
sbb
inc
push
mov
and
pop
lcall
idivb
les
loopne
cmpsb
add
decb
add
les
bound
sbb
mov
inc
sbb
pop
sahf
rolb
pop
mov
lea
add
enter
addl
dec
ja
andb
sbbb
xor
dec
sub
ffreep
sub
mov
fcompl
add
mov
mov
out
dec
sub
mov
and
sbb
add
xchg
and
mov
xor
lahf
sbb
and
add
mov
inc
pop
adc
cmp
dec
adc
test
stos
push
add
cmpsl
xor
add
cmp
fiaddl
and
sub
cs
inc
iret
mov
lcall
ret
pusha
adc
add
dec
testl
add
or
movsl
mov
or
pop
arpl
and
push
xchg
cli
pop
lock
jnp
inc
adc
jmp
mov
jbe
cmp
or
add
dec
cs
inc
outsl
cmc
pop
add
aad
shr
cli
push
jnp
add
int3
cmpsb
call
push
aam
push
lahf
jp
inc
pusha
nop
push
dec
adc
shl
leave
loope
into
add
push
mov
mov
jecxz
imul
mov
xor
jmp
add
ret
loopne
jb
add
mov
repz
cmp
cmp
in
push
xchg
pop
repnz
mov
sahf
stos
roll
mov
in
mov
add
push
mov
mov
inc
dec
sbb
ljmp
pop
shrl
movswl
pusha
mov
xchg
adc
clc
sti
jge
sub
fildll
mov
daa
popf
dec
dec
inc
shlb
test
adc
fmuls
push
cmpsl
push
pop
sar
jg
jns
add
and
fildll
inc
jl
or
add
movsl
push
jo
testb
xchg
mov
cwtl
shll
outsb
mov
sub
aas
adc
inc
and
cs
cmp
rclb
inc
dec
enter
lcall
jbe
adc
das
dec
push
call
dec
add
lods
lock
mov
or
ret
lods
fisttps
loop
inc
cmp
repz
push
sub
jg
adcb
xor
cmp
arpl
mov
enter
inc
je
shrb
jo
xchg
xchg
adc
push
pop
or
push
cmp
sti
add
ja
inc
scas
sub
and
pop
xchg
enter
lods
jb
add
or
movl
sbb
push
and
adc
xor
xchg
enter
dec
ret
divl
adc
cmp
add
insb
pop
rolb
mov
sub
mov
popa
add
xchg
int
xchg
mov
fidivs
add
mov
test
mov
jns
stc
fnstenv
sub
rcrb
subl
stos
mov
cld
fldl
add
loopne
xor
negl
sarb
add
js
test
pop
out
add
pop
in
jg
idivb
xor
stos
movsb
std
enter
test
outsl
sub
jmp
add
jg
mov
add
mov
aas
arpl
push
pop
pop
jmp
call
mov
repz
mov
or
test
pop
lret
out
fs
scas
pop
movb
mov
ljmp
and
into
pop
les
mov
out
or
adc
inc
xchg
cmp
cmp
lds
sbb
add
or
xchg
adc
adc
add
clc
leave
lock
test
out
add
shl
sub
pop
xlat
dec
pop
push
fsubl
je
xor
hlt
add
in
insl
pop
inc
pop
or
xchg
push
subb
in
mov
xchg
add
add
and
hlt
lret
inc
in
jo
and
cld
or
test
xorb
mov
mov
fistl
add
je
insb
or
dec
add
dec
mov
scas
inc
fnstenv
loopne
out
repnz
push
sti
mov
cmp
enter
jmp
dec
scas
imul
pop
repnz
cmp
jo
add
lcall
jecxz
xor
repnz
enter
mov
test
aas
mov
push
or
das
add
xchg
shr
jmp
das
push
pop
mov
pop
mov
xchg
bound
loopne
add
sub
stc
repnz
mov
iret
xor
mov
out
push
sbbb
push
sub
btr
mov
dec
sti
add
in
shrb
xor
insb
sarb
push
lea
inc
cmp
xor
fsts
in
std
lret
inc
inc
lods
nop
and
mov
out
mov
pusha
mov
fsubl
inc
sbb
popa
or
mov
lds
pop
jmp
dec
adc
insl
addr16
sub
mov
add
add
xchg
fnsave
int
inc
jae
jmp
pop
mov
sub
int
addr16
cmp
add
outsb
dec
inc
nop
into
add
loop
and
mov
adcl
jo
leave
jge
in
jae
mov
ffree
mov
lods
in
xor
scas
or
jmp
dec
arpl
test
test
adc
mov
mov
js
mov
aad
out
mov
or
lret
and
ret
and
fbld
inc
or
jo
rolb
repnz
ficoms
outsl
dec
ds
xor
cwtl
add
gs
lahf
leave
dec
cld
pushf
add
dec
aaa
cmpsb
loopne
repz
pop
fucomp
outsl
mov
adc
lods
sbb
pushf
or
or
mov
cli
pop
xor
push
dec
mov
addb
adc
inc
mov
je
push
inc
sbb
lods
lds
addl
add
add
sar
mov
call
add
cmp
loopne
outsl
and
insl
mov
xchg
inc
jle
out
inc
sahf
mov
popa
pop
mov
jle
insl
repnz
into
call
testl
ja
rol
xchg
pop
xor
loopne
dec
shrb
shrl
ret
cmp
aas
int
jnp
add
or
repnz
pop
sub
sbb
cs
adc
movsb
repnz
sahf
jmp
add
arpl
aas
cmc
lock
sub
add
aad
frstor
jge
outsb
fiadds
adc
in
test
mov
jl
and
fwait
data16
into
icebp
xor
add
mov
jle
test
imul
jb
adc
lds
cmpsl
arpl
repnz
and
loopne
scas
cmp
subl
mov
fldl2e
mov
loop
ljmp
add
ljmp
and
lcall
call
inc
movsb
data16
out
push
outsl
lcall
xorb
jg
xor
pusha
push
mov
lret
cli
mov
sbb
or
push
cmpsb
stc
outsl
add
adc
and
sub
addb
in
fcoms
je
jbe
adc
loop
sub
and
bound
repnz
popf
inc
cwtl
rorb
jge
jbe
mov
pop
int3
mov
add
pusha
mov
lcall
fwait
and
pop
sbb
add
xchg
fwait
andb
or
js
outsl
pop
xor
stc
inc
addl
sbbb
jmp
mov
aas
mov
paddb
push
negl
xor
call
add
or
cmp
iret
add
push
mov
jb
clc
insl
aaa
lret
nop
cltd
and
pop
insb
mov
cwtl
fwait
xchg
adc
add
adc
cmc
xchg
pop
xor
data16
add
adc
sbb
or
inc
pop
cmp
icebp
xchg
sbb
jp
add
jns
add
inc
lcall
and
mov
add
adc
out
xchg
sarl
sbb
int
div
sbb
pop
fwait
or
in
jns
es
arpl
add
aam
xor
repz
and
test
add
popf
add
push
addl
ret
aaa
push
pop
dec
xchg
mov
aad
mov
pop
sbb
and
popa
test
dec
ja
inc
subl
push
aad
cmp
inc
repnz
sub
or
jmp
inc
xchg
inc
add
cltd
dec
cmp
aaa
add
mov
add
stc
loop
fisubrl
cmp
and
jnp
mov
in
jecxz
and
sbb
jg
xchg
fcomip
xchg
cmp
add
icebp
mov
mov
orl
lret
lret
shl
testl
xchg
fistl
add
cmp
out
xor
sub
movsl
adc
das
fsubl
jnp
inc
cltd
pop
and
es
add
add
imul
test
aas
jo
and
mov
pusha
xor
in
xchg
dec
or
add
fldl
repz
jp
cmc
shll
testl
push
sub
add
rolb
call
add
test
push
loop
mov
dec
add
call
loop
add
add
shlb
sbb
mov
clc
mov
and
in
lea
enter
ret
cltd
and
lret
add
cmp
push
xor
es
lods
andl
add
push
inc
insb
lods
inc
mov
jl
cmp
sub
jge
sub
out
outsl
jp
mov
inc
dec
push
in
sub
cmp
movsb
add
dec
sub
pop
add
jp
mov
aaa
addl
loope
loopne
int3
lods
sbbb
xchg
add
mov
daa
sub
fadds
xchg
lods
push
jecxz
or
test
out
addb
fldl
adc
or
stos
arpl
push
or
add
dec
sbb
cmp
je
sub
push
xor
scas
inc
and
fiaddl
mov
out
add
xchg
xlat
es
pop
icebp
dec
adc
or
adc
or
push
lds
add
add
mov
call
outsl
push
mov
testb
xor
adc
mov
inc
push
inc
xor
sahf
adc
int
daa
add
add
pushf
and
in
push
out
repz
xchg
fadds
jns
adc
push
rcl
loopne
sbbl
inc
rcrb
loope
push
add
and
mov
xchg
repz
sub
imul
xchg
xchg
add
aas
lret
shlb
aam
hlt
imul
cmpb
dec
xor
jno
sbb
fldl
adc
adc
cmp
cmp
fiaddl
cmc
add
mov
leave
lret
mov
cmp
add
add
push
sbb
mull
lcall
ret
pop
mov
in
xor
add
xchg
sahf
mov
or
out
mov
mov
adc
or
sbbb
lods
testb
test
mov
cmp
xchg
iret
rclb
push
out
mov
hlt
bound
insb
xor
push
lock
adc
sub
testl
ret
leave
mov
mov
int3
push
call
sub
add
or
xor
pop
in
scas
xchg
jno
add
fcomps
out
lods
xor
fmuls
jo
outsl
stc
push
cmpsb
icebp
mov
stos
jno
in
add
popf
adc
pop
xor
lahf
xchg
sub
dec
jae
mov
repz
data16
push
xchg
dec
xchg
xchg
sbb
shrb
int3
push
dec
imul
movsb
sbb
or
mov
xor
adcl
adc
nop
mov
lock
in
mov
xorb
xchg
test
iret
jns
sbb
dec
add
mov
test
inc
mov
dec
and
inc
addb
push
outsb
call
pusha
push
cmp
push
cmp
ja
dec
jae
ds
stos
jo
push
addb
sbb
cmp
popa
insl
mov
cmp
mov
fcompl
cmp
adc
icebp
and
or
pop
or
test
cmp
lods
std
pop
pop
adc
mov
pop
test
adc
mov
outsb
sbb
shll
fmull
data16
imull
pop
push
test
cwtl
mov
das
cltd
fistps
sub
ficomps
pop
and
xor
xor
adc
pop
push
aas
push
push
orb
popa
inc
push
push
in
das
cltd
mov
or
sbb
flds
jmp
add
fs
sbb
out
and
adc
les
add
cmpsb
out
add
ficomps
dec
sbbl
sub
xchg
lods
add
cmpb
outsb
xchg
cmp
push
inc
or
or
inc
call
mov
adc
fwait
out
jmp
sbb
sub
add
dec
push
xchg
sbb
fsts
and
sbb
test
mov
outsl
add
push
js
push
rorl
movsl
in
in
pushf
fwait
add
pop
or
das
push
hlt
mov
cmpsb
loop
test
shl
mov
mov
gs
jbe
dec
int3
pop
add
fiadds
sub
jno
loop
adc
cld
push
xchg
ds
mov
mov
hlt
add
scas
cmpsb
cli
clc
out
outsb
ljmp
out
push
add
ret
scas
lock
sub
lcall
add
fimuls
jnp
cmp
cmp
loop
dec
faddl
adc
push
pop
test
or
inc
andl
in
lret
pop
or
outsl
and
scas
adcb
mov
clc
fstpt
add
xor
in
out
add
js
gs
add
cmpsl
or
push
les
push
xor
loop
mov
sub
cwtl
arpl
mov
int
xlat
add
sbb
enter
add
test
sbb
xlat
les
test
cmp
cwtl
push
or
cmp
mov
divb
pop
dec
fsubl
mov
add
pop
xchg
mov
push
add
jno
xlat
pop
call
into
out
movsb
and
imul
mov
xchg
loope
mov
inc
xchg
xchg
movsl
mov
sbb
orl
cmp
pusha
lds
push
xor
es
jae
lock
mov
pop
shrl
mov
mov
pushf
dec
fcmovne
repz
add
out
in
jmp
shlb
sti
cltd
adc
cmp
and
cmpsb
xor
mov
incl
sub
dec
xor
jno
push
pushf
cmp
add
mul
mov
int
aas
dec
sti
add
add
push
outsl
and
int3
mull
sbb
sbb
bound
add
xchg
push
std
cld
lret
lds
cmp
insl
lcall
ficompl
xor
push
sar
or
ror
mov
andb
jl
adc
inc
sbb
in
add
dec
add
icebp
int
pop
mov
or
cmpsl
xchg
mov
cwtl
pop
and
add
fcmove
mov
cli
sahf
add
mov
pop
rol
xor
loope
inc
stos
les
sub
mov
scas
gs
xchg
add
sbb
cmp
xchg
pushf
add
adc
lock
jns
lock
repz
pushf
inc
xchg
roll
jnp
ret
add
fsubr
xchg
pop
mov
lods
in
adc
lods
xchg
adc
pop
dec
add
lcall
add
cmp
sarb
sub
ds
clc
sub
flds
andl
jno
xor
add
pop
sub
insb
mov
rcr
mov
xor
add
sbb
hlt
in
or
lods
add
xor
jne
cmc
lret
add
cmp
sahf
scas
push
or
cmp
add
mov
in
test
add
shrl
jle
dec
xor
scas
mov
push
add
and
dec
adc
or
adc
stc
std
or
fildl
subb
sti
inc
dec
ret
sbb
loopne
ret
dec
push
imul
cmp
adc
xchg
xor
repnz
mov
mov
inc
xchg
mov
ss
and
and
add
mov
jae
or
mov
adc
dec
pop
aam
mov
aam
or
inc
xor
add
popf
cld
jmp
call
lods
or
pusha
imul
stc
and
inc
ret
adc
repz
sarb
push
iret
pop
adc
addb
bound
xor
fucom
dec
mov
aas
popa
or
shlb
stc
adc
mov
add
adc
xor
add
mov
adc
jp
cmpb
clc
sbb
roll
xor
movsb
adc
andl
push
mov
lahf
add
pop
mov
mov
shr
lret
bound
jae
cmp
pusha
stc
test
test
add
and
push
movsb
ljmp
loope
mov
shlb
cmp
das
test
loopne
push
mov
dec
or
mov
push
inc
adc
shrb
roll
jp
and
in
mov
add
fbld
sub
mov
adc
stc
in
add
pop
rol
adc
add
jecxz
insb
call
add
lea
pop
dec
movsb
sbb
cld
andl
and
flds
in
or
jl
sub
mov
lods
xchg
test
adc
in
or
sub
shl
lods
fadds
stos
push
pop
push
clc
mov
or
mov
frstor
dec
xor
mov
jae
ljmp
lock
mov
xor
mov
imul
adc
sbb
neg
mov
cmp
dec
mov
fcompl
sbb
pop
std
pop
scas
lret
faddp
lock
sti
adc
cmp
pusha
icebp
ds
cs
in
stc
addl
pop
adc
add
cs
fists
xchg
add
push
pop
or
push
mov
mul
movsb
insl
adc
add
inc
inc
std
outsb
pushf
loopne
sub
jg
add
js
scas
out
shlb
fiadds
sub
outsb
cmpb
add
adc
dec
jmp
outsb
inc
or
mov
and
or
mov
cmpsb
inc
adc
sbb
pusha
dec
imul
cld
loopne
stc
rcr
inc
mov
lds
in
jg
cltd
sub
pop
dec
or
aaa
fildll
add
pusha
sub
jo
daa
add
flds
cwtl
or
rcll
adc
mov
stos
jg
int3
bound
and
loopne
outsl
hlt
cmpsb
arpl
and
and
add
xchg
add
leave
push
adc
sub
mov
jge
gs
movsb
sbbl
rorl
cmp
mov
pop
push
xchg
add
gs
push
jl
daa
incl
or
mov
add
dec
sbb
aam
nop
popf
scas
popl
mov
repnz
xchg
push
mov
fdivl
jo
sub
adcb
mov
imul
pop
aaa
stos
sahf
push
and
int
add
std
mov
xor
popf
addr16
fmuls
lods
dec
orb
mov
in
sub
flds
mov
jecxz
mov
fsubrs
cwtl
sub
add
inc
addr16
jne
pop
sbb
inc
nop
jnp
push
sbb
push
mov
mov
xor
roll
push
pop
and
iret
lods
jle
push
mov
xchg
add
into
inc
dec
add
fisubrl
mov
add
shlb
js
lock
fildl
nop
jno
test
cmp
add
lods
inc
sbb
mov
xchg
icebp
addb
cli
adcl
xchg
adc
push
dec
dec
xchg
jo
movsb
mov
push
lret
shrb
aam
xchg
cmp
sbbb
jno
inc
loope
shll
adc
mov
xchg
movb
or
sbb
xor
push
add
iret
in
hlt
pop
cltd
sbb
ret
rorb
add
inc
cmpsl
lods
push
outsb
hlt
pop
add
jnp
cmp
dec
sub
scas
pop
xchg
push
xorb
aam
adc
sub
pop
inc
nop
add
jo
clc
push
mov
add
adc
cmp
mov
loopne
test
mov
lods
aad
out
mov
adc
jo
nop
aaa
add
arpl
xchg
cmpb
pushf
ja
cltd
loope
sub
mov
mov
add
inc
push
xchg
in
loop
fildl
jmp
add
cmp
cld
mov
inc
loope
les
aas
mov
icebp
rcll
or
cmpsb
push
and
lahf
mov
gs
xor
jnp
incb
jbe
aas
add
dec
xor
mov
out
mov
inc
pop
adc
mov
in
xor
and
rclb
mov
xor
cltd
push
add
sbb
sbb
xor
fsubl
mov
test
add
push
dec
shlb
xlat
incb
add
or
inc
mov
mov
std
leave
add
sub
sub
ss
push
jge
xchg
sahf
dec
nop
adc
outsl
pop
xchg
sub
sahf
pop
rol
pop
pop
mov
ljmp
inc
push
fisubrl
mov
stos
cmovg
rcll
clc
test
jo
pop
nop
ret
sahf
fdivrl
into
cmp
cmp
jbe
and
mov
int
fldenv
dec
psrlq
adc
mov
sbb
pushf
add
sbb
add
jnp
mov
adc
pop
in
xchg
test
outsb
xor
fists
add
mov
mov
repz
out
rolb
fisttps
or
lea
add
je
aaa
mov
dec
pusha
lea
cmp
fwait
adcl
nop
jp
aam
cmc
push
push
add
mov
clc
flds
cwtl
dec
sub
in
xor
fs
mov
sbb
aas
es
mov
ja
sbb
sahf
mov
add
mov
cmovle
and
adc
add
xor
jns
push
sbb
test
jg
test
ret
sub
stos
arpl
jmp
daa
paddusw
dec
roll
fmuls
mov
loopne
mov
pop
push
call
lret
lds
dec
cmpsb
ret
and
mov
rolb
mov
add
pop
xor
test
lahf
icebp
std
xchg
jp
nop
mov
adc
push
xchg
cltd
test
jmp
xor
pusha
stos
loope
out
xchg
xor
sub
cmp
dec
mov
stc
fidivl
xchg
in
jge
call
sahf
out
add
stos
and
push
mov
cwtl
add
push
mov
sub
jno
test
repz
jl
lock
mov
stos
cmp
mov
fwait
xchg
cltd
cmp
pusha
sub
jnp
movsb
jl
add
lret
test
fldenvs
mov
push
sarb
pop
dec
fwait
pop
cmp
flds
or
push
icebp
inc
mov
pop
jae
add
push
mov
hlt
pop
jle
push
sbb
add
push
ljmp
stc
push
pop
push
ds
jg
sarb
sbb
into
dec
ror
pop
cmp
inc
cmp
aad
add
cmp
ret
mov
or
or
push
pop
ja
movsb
call
and
push
mov
adc
inc
out
mov
call
out
into
xor
bound
and
shll
inc
dec
dec
pushf
outsl
fisubrl
cmpb
cmp
scas
or
jecxz
outsl
fcomps
mov
mov
xor
add
je
sbb
lret
stc
add
lods
pop
dec
and
testl
dec
xchg
sbb
pushf
xchg
jae
lea
jmp
sbb
cwtl
shlb
jnp
stos
loopne
inc
movsl
push
and
or
inc
jns
pop
rdmsr
xor
test
xorl
mov
xor
lods
rorl
hlt
cmpsl
in
sbbl
ret
int3
push
iret
cmp
add
shlb
mov
enter
pusha
mov
test
mov
ror
loope
sarl
dec
lock
push
mov
clc
jae
lret
ret
cmp
scas
loop
repnz
xchg
jo
cmp
ja
gs
adc
add
fistpl
lods
add
ljmp
in
mov
pop
xchg
pop
repnz
mov
add
sbb
jne
add
leave
dec
jecxz
fimuls
cmp
push
add
in
jns
add
dec
decl
sbb
in
rcrb
add
aaa
pop
dec
push
mov
popa
cmp
add
aam
loopne
stos
sub
add
and
pop
or
ret
xchg
cmp
cmp
push
add
mov
pop
add
jle
xchg
add
xor
cltd
add
adc
or
ret
pop
cld
jnp
scas
push
xor
aad
add
mov
icebp
addr16
push
fbld
jns
scas
rclb
ret
cmp
xorl
xchg
push
adc
xor
adc
inc
add
xor
push
out
push
cmp
pop
jne
mov
lock
or
inc
add
repnz
out
add
sahf
call
jle
xchg
icebp
push
pop
jmp
mov
iret
add
into
daa
sub
cwtl
aam
pop
xor
mov
xchg
pushf
roll
push
cmp
decb
loop
jne
and
xor
dec
movsb
movsl
popa
loope
sbbb
dec
cld
inc
add
gs
rolb
call
lods
fsubs
call
mov
add
xlat
mov
adc
cld
inc
add
pop
mov
pop
shll
enter
and
push
push
pop
or
mov
fidivl
add
and
repz
shl
movsl
aam
fadds
pop
xchg
cmp
jne
sub
jge
test
out
jmp
jb
xlat
dec
les
inc
adc
inc
add
mov
add
loope
or
movl
icebp
call
repz
or
test
cmpsb
and
pop
repnz
adc
mov
fisttpll
orl
mov
mov
inc
sub
pop
jl
add
mov
ja
jg
stc
cmpsb
inc
in
add
in
scas
xchg
jl
add
js
std
add
push
iret
leave
push
jne
sub
mov
mov
insl
addb
dec
dec
shrl
push
imul
pop
jle
stos
mov
imul
add
fst
or
ds
sarb
not
add
fwait
imul
adc
and
push
mov
lock
pop
or
adc
push
push
lret
mov
das
add
lahf
lods
mov
cmp
ljmp
icebp
ss
popa
cs
in
xor
push
mov
jb
mov
add
mov
pop
enter
mov
pop
int
pop
pop
sbb
shl
subb
fwait
mov
cmpsl
and
dec
lds
lods
and
daa
cwtl
imul
inc
mov
push
sbb
mov
popf
inc
mov
inc
mov
sub
test
sbb
je
testl
loopne
sbb
stc
pusha
push
cwtl
cmp
mov
and
add
or
add
mov
jae
pusha
jmp
fnsave
sbb
sub
add
call
jae
inc
lcall
dec
or
xor
lods
repnz
xor
pop
dec
adc
pushw
sub
and
add
mov
cmp
jge
arpl
cmp
sbb
inc
in
popa
sbb
test
pop
test
adc
mov
ja
in
cmpb
add
test
sbb
inc
xor
mov
dec
add
je
aaa
add
sti
and
xor
add
stc
mov
sbb
cmc
sahf
andb
add
sbb
adc
add
aam
xchg
iret
add
mov
push
fstpl
lds
or
lcall
jbe
in
loope
dec
pop
ret
inc
enter
push
push
popf
cli
add
jb
mov
or
sbb
xor
jl
fadd
xor
out
dec
xor
out
gs
or
pop
std
in
xor
test
addr16
lea
dec
pop
push
push
in
add
repnz
sbb
int3
xor
inc
arpl
add
movsb
sbb
nop
in
dec
xor
and
rcrb
mov
lods
lock
inc
arpl
push
xchg
loope
xchg
add
in
pop
sahf
mov
add
leave
add
roll
adc
lahf
jmp
hlt
xchg
add
xor
sbb
imul
jecxz
mov
or
add
cltd
mov
insl
xlat
pop
call
pusha
ljmp
movsb
add
inc
fisttps
cmp
add
dec
ss
fimuls
xchg
add
hlt
shrb
pusha
add
scas
ja
sub
sub
aad
inc
dec
cmp
sub
repnz
sbb
push
repz
sbb
pop
mov
movsb
xchg
lock
add
pop
test
in
std
js
cmp
cmp
and
lret
in
fsubrl
sbbb
sub
outsb
stos
setp
inc
dec
addb
jno
jg
fwait
cmp
andb
sub
sub
shr
rolb
sub
jl
ja
cmp
inc
mov
aas
arpl
and
xor
lahf
incb
cmp
jnp
push
hlt
pusha
lock
add
inc
fidivl
add
adc
sbb
jge
pop
add
aad
dec
in
mov
ljmp
add
leave
mov
loope
inc
push
repz
push
xor
adc
sbb
hlt
cmpsl
cmpsb
cmp
or
cmp
sub
add
pushf
mov
add
mov
inc
out
in
dec
repnz
xchg
insl
add
out
cwtl
int
pop
mov
lds
xor
jo
push
ret
jmp
div
mov
mov
inc
jp
push
inc
cmp
add
cs
fwait
out
add
or
lods
push
add
push
cmp
dec
fnclex
sub
rcl
cld
add
pop
in
xchg
mov
sahf
mov
pop
lahf
dec
dec
add
xor
sub
loope
add
test
sub
add
and
outsb
mov
ret
and
fistpll
add
pusha
scas
push
stos
mov
insl
rcrb
pop
mov
add
bound
shlb
add
divb
sub
dec
int
sbb
inc
and
mov
push
test
pop
test
adc
add
push
pop
rolb
pop
sbb
mov
jg
push
cmp
loop
sbb
mov
out
mov
stos
test
cmp
xchg
add
mov
sbb
and
stos
pop
clc
rol
cmp
shrb
add
jbe
add
mov
imul
out
dec
xor
out
sub
jl
push
fsubs
mov
ja
arpl
and
fdivrs
in
ljmp
arpl
dec
add
fs
add
or
out
test
mov
vpshufhw
and
jl
inc
cmc
dec
add
add
push
push
insl
and
add
scas
xchg
jg
std
xor
pop
mov
test
daa
mov
inc
rorb
scas
cltd
ret
lds
mov
cmc
mov
add
shl
rcr
mov
out
push
xorl
sar
mov
adc
imul
dec
pusha
in
add
lret
data16
cwtl
fsubs
or
cmp
aas
jecxz
xor
mov
add
movsb
dec
pop
ja
jl,pt
pop
sub
mov
mov
xchg
pusha
sub
push
pop
inc
jne
call
mov
mov
es
push
sti
ljmp
jg
icebp
add
hlt
jnp
dec
fdivrs
ss
out
out
xor
adc
cmpsl
fidivl
addl
xor
pop
add
repz
negl
neg
or
push
adc
test
and
mov
mov
pop
stos
sub
sub
and
xchg
cmp
and
jle
push
sbb
adc
pop
adc
add
add
mov
and
xchg
js
sbb
or
jmp
filds
stos
jle
inc
mov
inc
arpl
push
add
mov
push
rcll
rolb
add
nop
bound
insl
in
or
movsl
in
inc
mov
xor
add
ds
add
sbb
mov
push
clc
popf
dec
dec
add
shrl
adc
ret
div
add
adc
add
subl
pop
add
js
xlat
push
cwtl
hlt
call
sti
lock
sub
push
fiadds
adc
imul
jnp
lds
jecxz
movswl
aad
jle
jg
or
xchg
push
jl
add
cld
xor
fs
ljmp
inc
mov
shrb
fisubrs
lods
and
fwait
add
pop
aam
movsl
add
cmp
movsb
cld
sub
loope
data16
mov
pop
fsts
test
mov
adc
add
add
add
and
ljmp
xlat
add
push
sub
and
mov
lret
mov
sarb
add
pop
xchg
cmpsl
push
fmulp
notb
popa
int
push
cmp
addb
out
add
gs
xor
push
cmp
add
mov
dec
cltd
ja
mov
pop
into
pop
xor
jns
cmp
adcb
add
pop
loopne
add
sub
daa
rorl
xchg
and
cmp
add
call
push
addr16
les
call
cmp
daa
pop
fdivs
or
cld
cltd
subl
jne
push
adc
pop
push
adc
inc
adc
jbe
push
jle
add
sub
es
nop
push
jb
add
adc
sbb
ja
adcb
mov
sbb
xchg
xchg
shlb
fs
and
mov
add
cmp
add
xchg
mov
add
sbb
pop
jno
pop
adc
xor
insb
dec
cli
addr16
mov
push
xchg
lret
rolb
fcomi
lods
push
daa
jne
mov
sub
xchg
jno
in
sub
add
scas
lcall
adcb
inc
outsb
xor
bound
shr
sbb
insl
add
add
mov
call
ss
nop
cmpsl
hlt
add
cs
xchg
jmp
xchg
and
or
xor
mov
addr16
mov
add
outsl
jecxz
or
or
sbb
jb
fcmovnbe
mov
pop
add
fldl
loopne
add
inc
cmc
dec
adc
jns
lcall
lea
data16
cmp
push
outsl
add
mov
call
leave
sbb
xor
mov
and
add
pop
push
lcall
testb
and
imul
inc
loopne
jnp
add
nop
ret
rcll
xor
lcall
insb
add
xor
xchg
out
push
scas
add
rorb
iret
repnz
add
negb
inc
add
pop
insb
iret
mov
les
pusha
cmc
push
sbb
aas
jg
adc
dec
mov
movswl
sbb
bound
inc
clc
imul
jmp
arpl
ret
xor
mov
mov
sbb
xor
xor
fcmovnu
add
fiadds
xor
lods
sbb
out
push
sbb
mov
sbb
sub
push
movsb
popl
mov
push
adc
and
add
fwait
enter
psrlq
push
dec
stos
in
add
repnz
xor
sti
inc
mov
mov
mov
push
cmp
xor
jo
mov
stos
sub
add
sub
pop
movlps
scas
add
adc
int3
cmp
lock
inc
shrl
fcompl
ljmp
xchg
or
add
xchg
test
add
rorb
lods
sbb
in
sub
mov
cmp
add
and
data16
cmp
lahf
scas
xchg
pop
outsl
add
push
js
mov
lret
shlb
mov
icebp
add
jns
mov
cmp
addb
pop
fistps
lock
cmpxchg
in
sahf
inc
das
mov
mov
inc
sahf
fs
lret
add
push
pop
and
loopne
add
cmp
add
iret
jg
dec
push
dec
roll
jae
or
mov
or
test
or
sarl
jp
sub
jno
xchg
jge
sbb
cmp
xor
fdivrs
stc
add
sub
test
sub
xor
rolb
mov
mov
mov
fsubrs
stos
in
mov
pop
add
daa
mov
or
stos
cwtl
mov
push
push
pop
sarl
jnp
sbb
adc
fcomps
dec
fnstenv
sub
cltd
fimull
push
cmp
add
lahf
sub
pop
xchg
sub
jmp
enter
push
or
inc
fs
jb
mov
sbb
adc
xchg
xchg
dec
mov
repnz
loopne
test
scas
dec
jp
cli
sbb
test
in
out
push
adc
incl
mov
aam
enter
mov
roll
popa
in
sti
decb
and
push
add
xchg
lcall
testb
jle
adc
neg
add
pop
fsubrp
out
pusha
push
add
or
fdivl
push
mov
add
and
mov
ret
add
mov
jne
mov
lods
mov
adc
out
out
jnp
inc
sub
inc
or
mov
nop
xor
add
pushf
sbb
not
arpl
push
cmp
in
and
push
loop
xchg
add
xchg
mov
mov
lods
popf
cwtl
add
test
mov
adc
bound
adc
push
mov
mov
pop
mov
mov
inc
add
popa
ds
xchg
aas
pop
sub
or
dec
in
sub
jg
add
fiadds
popa
out
aam
test
cmp
aad
add
pop
in
sbb
imul
mov
mov
add
dec
add
or
mov
sbb
xchg
inc
sbb
sub
inc
jno
arpl
adc
pop
or
sbb
mov
jge
fidivrl
ljmp
imul
add
push
inc
aaa
pusha
mov
add
outsl
roll
jl
sbb
lock
mov
add
incb
dec
aam
in
test
pushf
push
movl
ss
popf
out
cmp
aad
imulb
add
dec
push
gs
cwtl
and
fcmovnb
data16
add
loop
aaa
test
sahf
push
sub
rorl
add
repnz
cld
popa
push
add
inc
in
or
sbb
pop
xchg
je
adc
movl
add
mov
sub
dec
push
xor
stos
pop
jp
lahf
lret
or
add
mov
dec
pop
mov
add
push
dec
jg
ljmp
sbb
add
repz
mov
aas
sub
push
fbld
add
mov
sbb
mov
shrb
popf
and
cli
sub
xchg
add
shr
mov
cmp
push
add
pop
adc
out
fsubrl
add
sbbb
or
into
leave
or
sbb
xchg
add
imul
iret
add
adc
fnstsw
test
mov
aad
test
add
xor
dec
add
testb
sbb
or
jge
cld
mov
mov
lahf
enter
mov
pop
add
movb
popa
mov
jecxz
add
or
and
insb
je
xchg
xlat
or
push
pop
or
imull
scas
addb
cld
adc
dec
das
pop
mov
xor
add
sub
rclb
mov
push
push
xchg
adc
jnp
pusha
mov
cmc
mov
test
int
mov
push
inc
add
xor
es
sbb
fiaddl
sbb
add
fwait
push
and
popa
subb
jnp
add
sbb
aas
pop
sbb
xchg
sub
push
and
movsl
add
jle
sti
xchg
mov
xchg
push
inc
pop
fildl
and
sub
imul
minps
add
mov
out
out
rorb
pop
jo
mov
enter
add
scas
lret
mov
add
or
adc
enter
mov
add
aas
and
testb
jns
je
int
loop
pop
sbb
sarw
sbb
hlt
pop
jmp
or
xor
cmp
push
das
js
push
imul
hlt
insb
mov
push
jle
adc
pusha
sbb
pushf
fidivrs
mov
jl
dec
adc
cmp
in
add
adc
mov
mov
frstor
pop
or
call
push
jp
test
sbb
push
adc
add
pop
and
pop
js
icebp
pop
stos
lods
add
int
in
sub
push
fildl
xlat
jo
cmp
xchg
jmp
dec
testb
jecxz
add
stc
jmp
ret
sahf
cmp
jecxz
movsb
es
int3
inc
cmp
jge
inc
mov
addr16
sbb
mov
rorb
add
inc
jbe
push
jne
mov
mov
cmp
movsb
xchg
add
std
xor
mov
cmp
testl
mov
sub
sbb
mov
cwtl
mov
ljmp
cltd
mov
add
xchg
mov
add
inc
mov
loopne
or
fildll
add
jmp
shlb
pop
add
pop
out
sbb
adc
sub
int3
test
loope
jle
mov
pushf
filds
jns
cmpsl
sub
mov
and
sbb
xchg
pop
or
cmp
dec
cmc
mov
call
pop
jecxz
loopne
test
add
lds
cmc
mov
dec
cmp
imul
adc
mov
in
ret
pop
push
rcrb
add
adc
xchg
dec
mov
adc
imul
in
adc
add
std
popa
clc
mov
add
xlat
adcb
movsb
pop
push
add
fldl
mov
dec
jno
popa
testb
xchg
ret
push
push
dec
cmp
subb
frstor
cmc
clc
enter
addr16
mov
cld
jecxz
int
dec
sarb
fs
test
shll
roll
andb
imul
dec
mov
dec
jns
sbb
xchg
xlat
pop
sbb
add
mov
data16
or
mov
jge
inc
fsubrs
push
dec
ss
jo
adc
push
test
mov
xchg
pop
loopne
lods
jl
and
rcrl
icebp
xor
mov
adc
or
push
add
add
fwait
leave
push
mov
adc
add
pop
and
leave
sbb
rorb
jae
ja
mov
loopne
pop
xor
sub
loopne
into
add
cmp
sets
push
dec
xorl
sbb
int
mov
mov
xchg
push
and
fsts
and
fwait
arpl
js
pop
mov
pop
sarb
sar
pop
cli
cmp
daa
mov
fdivrl
jmp
or
aas
cltd
fsubs
fldl
repnz
dec
imul
sbb
cld
add
jp
hlt
sub
fs
add
push
cmpl
inc
sbb
xor
mov
mov
xchg
and
add
mov
ds
dec
shlb
popf
cld
mov
movsb
lret
emms
in
add
pop
push
pop
mov
xchg
add
jne
mov
add
adc
jl
jb
xor
dec
add
add
dec
mov
pop
cld
test
mov
cmp
sbb
aad
adc
push
xchg
call
pushl
mov
dec
ficoml
pop
les
out
das
mov
cwtl
xorl
or
shrl
inc
mov
testl
hlt
push
inc
rorb
inc
pusha
add
adc
xor
fcoms
jbe
enter
xorb
outsl
nop
mov
cmp
sub
push
pop
ljmp
inc
sub
add
xchg
test
and
add
jmp
popf
bsf
ljmp
fmull
pop
xchg
addb
push
or
sub
or
add
pop
cwtl
cmp
xor
iret
filds
outsb
mov
xchg
sub
out
lret
mov
mov
pop
push
jns
add
in
outsb
movsb
repz
xchg
aaa
sbb
std
add
dec
add
sarl
popf
clc
mov
insl
mov
vmread
pusha
or
adc
mov
mov
fldl
add
cmp
aaa
inc
mov
pop
add
and
add
sub
shr
pusha
cmp
mov
xchg
mov
fsubrs
mov
sub
cwtl
ds
les
add
fadd
add
sbb
aad
roll
imul
jp
subb
lock
cmp
mov
loope
flds
sub
xchg
dec
sub
add
roll
or
add
dec
sti
out
call
js
add
lret
addr16
add
sbb
inc
int
aas
adc
cld
in
add
xchg
cld
mov
ljmp
dec
inc
or
sbb
mov
outsb
lret
les
and
and
inc
mov
sub
xor
add
shlb
dec
xor
fldt
fsubrp
push
add
aas
add
mov
into
mov
and
popa
adc
hlt
sbb
mov
mov
add
repz
out
dec
xor
pop
jmp
lret
and
push
outsb
pusha
pop
lods
sbb
pop
add
push
add
lds
and
icebp
rolb
mov
sub
shlb
push
sbb
dec
stc
imul
addr16
iret
ret
mov
jno
or
pop
push
cld
lods
sub
and
sbb
pop
xor
inc
pusha
clc
and
push
jno
inc
inc
nop
add
mov
dec
sub
sar
mov
xor
sub
adc
cmpb
into
xor
mov
pop
and
jp
out
mov
pop
add
aas
sbb
cmp
lds
mov
mov
ljmp
pop
adc
cmp
add
dec
pusha
cmp
mov
aas
or
and
inc
sub
mov
add
add
cld
sti
dec
hlt
rorl
inc
pop
pop
das
ja
fucomi
add
in
jns
push
out
xorb
add
mov
aam
mov
into
add
add
out
xor
add
fwait
add
bound
sub
xor
aas
dec
add
inc
add
pop
push
lods
call
pusha
sbb
test
stos
rolb
push
mov
aad
dec
mov
sub
mov
mov
sub
xor
stos
test
nop
movsl
sub
jge
add
out
inc
mov
dec
fisttps
mov
ss
sbb
imul
add
je
add
push
mov
sub
xlat
addl
lods
adc
add
lea
mov
add
es
add
outsb
adcb
add
mov
bound
xor
xchg
in
or
cmp
push
push
testl
ret
mov
mov
jbe
pop
pushw
dec
jmp
xchg
pop
jnp
cld
add
ret
jmp
cmp
es
mov
xor
outsl
sub
data16
mov
in
aam
loope
push
inc
movsb
les
add
imul
in
add
mov
sub
lds
pop
inc
add
and
jo
sub
pop
xorb
mov
adc
push
mov
push
add
xor
xor
cli
test
add
andb
jle
stos
data16
fimuls
adc
or
inc
cwtl
add
sti
jl
dec
xorl
push
rcrb
jmp
testb
xor
std
mov
jae
xor
lds
mov
mov
pop
subb
push
dec
sbb
mov
sti
add
dec
sbb
push
shl
test
xchg
add
mov
add
sbb
jl
add
mov
add
adc
mov
rorl
into
rcll
add
mov
mov
jmp
cmp
add
add
add
fld
scas
shll
mov
aaa
add
xor
mov
jo
punpcklwd
inc
orb
hlt
out
jbe
lret
push
lock
push
fidivrl
fldl
xchg
push
mov
mov
and
es
dec
clc
aaa
dec
pop
mulps
or
inc
xor
loop
push
int3
add
mov
add
aaa
dec
cmc
repz
sbb
lret
sbb
inc
add
push
mov
dec
jae
add
xchg
add
pop
cmp
cmpsl
mov
add
mov
lret
pushf
inc
stc
insl
add
les
jl
leave
ja
xor
mov
or
aad
psraw
add
hlt
out
sbb
repnz
add
inc
cmp
push
add
rcl
cmp
ucomiss
pop
test
xor
sbb
inc
pop
mov
push
jge
inc
adc
lock
imul
data16
stos
imul
rorb
sub
cmpsl
push
xor
nop
push
push
or
sbb
adc
pushf
js
outsb
jne
in
aaa
out
shll
jecxz
sbb
test
push
test
andb
sbb
movsb
and
push
ret
stc
aas
bound
push
jno
or
inc
lods
sub
stos
call
aam
leave
pusha
shlb
daa
clc
aam
call
jmp
fadds
movsb
out
test
dec
xchg
mov
dec
scas
xor
sub
mov
cmpsl
or
add
fisubrs
inc
mov
dec
outsb
sbbb
add
icebp
testb
sti
sbb
movsl
movsb
mov
add
xor
test
icebp
mov
dec
jno
pop
ss
add
mov
dec
mov
inc
or
test
push
cmp
mov
sub
int
fisubrs
add
jmp
sti
rcrl
xor
adc
xchg
cmp
testb
add
sbb
cmp
loopne
ljmp
adc
lret
loopne
ja
lock
sahf
jmp
jo
idiv
sbb
insl
mov
jnp
in
adc
or
mov
in
adc
pop
adc
adc
push
and
mov
popa
inc
stos
sbb
sub
cmp
jle
enter
push
popa
sbb
cmpb
in
sahf
sbb
aaa
sub
or
xchg
int3
adc
and
add
movsb
mov
mov
adc
add
jecxz
mov
pop
mov
fistpl
lock
sub
add
push
aad
or
ret
add
inc
lock
add
or
lea
sbb
jo
jg
add
lret
push
mov
mov
mov
popf
jb
mov
cld
cmp
dec
loopne
movb
inc
adc
stc
int
mov
iret
xor
and
add
out
and
data16
fnsave
xor
aam
ret
pop
scas
aas
sbb
cmp
insb
and
out
add
sarl
add
cmp
xchg
std
shl
xor
pusha
flds
xchg
pop
incb
jne
rcr
push
loope
stos
xchg
adc
lods
out
inc
add
jno
sarl
cmp
in
jae
lret
and
test
push
shll
andb
repnz
add
leave
mov
ficoms
dec
mov
add
dec
fs
add
icebp
add
out
mov
pop
in
sub
add
call
sahf
pop
lahf
sbbl
push
outsl
or
imul
inc
mov
mov
rolb
inc
inc
sub
outsb
clc
fdivs
xchg
jae
adc
int3
push
mov
jg
inc
xlat
sahf
arpl
test
mov
xor
je
nop
sub
in
hlt
or
lods
or
mov
rclb
out
adcl
cltd
std
pop
pop
inc
incb
jge
push
js
daa
mov
push
mov
out
adc
movsl
add
repnz
push
fcoml
add
push
dec
jns
xor
ret
add
shrl
mov
loopne
push
lock
jno
inc
jp
add
jne
add
mov
jg
add
and
xor
add
arpl
test
loopne
jge
sbb
add
fs
cmp
xchg
xor
dec
sub
add
inc
hlt
sahf
jecxz
or
cs
imul
or
inc
push
test
cmp
jnp
add
fistps
negl
mov
add
stos
sub
aam
add
push
inc
test
pop
xor
mov
ja
rcll
add
cmp
mov
stos
stos
insb
jecxz
test
das
pop
jg
dec
cmp
fwait
mov
or
dec
xor
sub
adc
mov
mov
xchg
push
xlat
mov
adc
pop
loopne
add
mov
sarb
lret
movsl
jl
add
add
stos
test
dec
push
repnz
dec
or
or
imul
je
lcall
cmp
loope
outsl
jne
mov
add
loop
cmc
pop
insb
dec
sbb
or
jns
jmp
call
mov
shlb
mov
xlat
or
pop
push
int3
add
xchg
sbb
lea
roll
xor
outsl
stc
repnz
xlat
xor
sbb
inc
nop
clc
sbb
into
flds
imull
and
xorb
sti
inc
dec
lock
push
add
mov
subb
cmp
and
inc
adc
pop
jmp
rclb
dec
and
fisttpll
icebp
lds
pushl
add
out
iret
push
mov
das
aad
or
sbb
mov
jb
jbe
addr16
dec
fwait
and
inc
pop
in
js
xchg
add
lcall
pusha
sti
cmp
jns
xlat
mov
and
fistpl
arpl
mov
dec
int3
dec
mov
cli
fdiv
mov
push
cs
incl
insl
sti
fld
xor
pop
cmp
add
jb
repz
ja
add
test
mov
mov
shlb
xor
mov
aas
push
aam
in
or
lock
aad
mov
add
testb
loopne
sub
inc
cmp
das
enter
lcall
lea
cmp
cli
xchg
sbb
add
jae
int
sar
adc
ficoml
sub
mov
push
cmp
add
stos
ja
mov
andl
out
leave
jno
sub
cli
shll
xor
or
in
push
adc
push
sbb
jno
lahf
clc
or
gs
or
insb
jle
pop
xchg
cmp
lock
aaa
outsb
jno
mov
add
mov
icebp
xchg
int3
sbb
in
add
pop
dec
pop
clc
pop
add
pushf
mov
adc
outsl
add
movsb
xchg
pop
sbb
pushf
mov
push
jne
or
cli
ret
scas
mov
mov
jno
shll
mov
pop
mov
int3
outsl
lock
mov
shl
mov
stos
and
sbb
shll
push
cmp
cmp
testb
add
cmpsl
cmc
arpl
pop
testl
lcall
aad
cld
outsb
sbb
popl
lcall
movsl
add
mov
call
ds
adc
add
shrb
rclb
repz
int
addb
ret
dec
stos
xchg
addb
sbb
mov
push
xchg
add
xchg
add
xor
pop
dec
push
or
in
lret
add
cld
xchg
das
je
fmull
jne
test
mov
adc
vpminsq
adc
lods
add
cmp
jl
cwtl
inc
add
mov
dec
addr16
push
inc
xor
and
mov
jle
push
add
mov
xchg
jae
add
lret
mov
add
push
xchg
add
cmp
pop
or
addb
movsb
mov
pop
jb
mov
push
into
inc
repnz
xor
sbb
inc
dec
add
sarl
pushf
sbb
mov
cmc
push
add
mov
push
or
mov
fwait
ss
rcrl
pop
lcall
mov
pop
xchg
icebp
cmpsl
lods
mov
add
sub
mov
mov
add
mov
orl
shlb
loop
std
rolb
cmp
or
and
clc
add
fstpl
movsl
jle
dec
mov
imul
jo
pushf
repnz
pop
mov
lret
cmp
aaa
mov
daa
repz
add
or
sub
cmpsb
pop
or
aam
add
rcl
add
dec
xchg
mov
cmp
call
aad
jge
xchg
mov
or
add
inc
test
lahf
add
mov
mov
add
dec
add
xchg
jp
add
adc
pop
pop
xchg
pop
mov
getsec
pop
cli
das
inc
mov
push
ljmp
jbe
add
adcb
mov
les
add
lahf
xchg
push
cmp
mov
bound
adc
in
loopne
jne
divb
inc
out
cmp
push
inc
sbb
cmp
add
jae
add
popa
xchg
jbe
outsl
adc
incl
mov
in
mov
rolb
xchg
add
pop
shlb
adc
mov
movsl
stos
hlt
inc
add
mov
inc
or
lock
pop
mov
int3
mov
pop
mov
jge
add
sub
mov
scas
fdivl
hlt
jmp
leave
jb
cld
fwait
loop
imul
nop
xor
add
jge
mov
push
add
or
mov
ds
fiaddl
testl
int3
inc
add
aam
push
out
call
jae
loope
fidivrl
rorl
out
mov
sbb
jno
les
daa
rclb
cmp
str
cmp
addl
arpl
push
add
sbb
cmp
das
xor
pop
mov
int
hlt
push
dec
push
dec
add
mov
pop
fimuls
jp
ret
sti
pop
mov
add
popa
out
jmp
in
add
subb
xchg
jo
addr16
pop
sub
scas
jmp
dec
out
add
fisubl
arpl
jno
adc
xchg
adc
add
sub
out
mov
cwtl
dec
add
sub
test
cmp
outsb
jns
jne
idivb
push
mov
js
adc
add
cli
loope
pushf
adc
xchg
add
addr16
add
xchg
idivb
add
sub
cmp
cwtl
add
cmp
dec
xor
add
setns
inc
and
in
lock
cli
add
mov
mov
cmp
call
js
jl
out
dec
add
push
roll
fisubl
test
or
push
adc
jecxz
das
imul
cmp
cld
setae
icebp
lcall
xchg
in
cmp
aam
jge
testl
fsts
mov
add
fcmovbe
sahf
mov
sub
sbb
aaa
enter
add
cmp
add
sub
dec
nop
add
push
mov
inc
cld
in
sub
xchg
xor
mov
lods
lock
aaa
in
jnp
mov
adc
mov
lcall
rcrb
shrb
xchg
or
insb
ficoml
test
dec
fcomps
into
or
in
push
add
dec
push
gs
pop
mov
aam
sub
or
or
cmpsb
push
push
xor
xor
fsubrs
cli
add
push
fsubl
pop
aad
xchg
adc
lcall
xor
push
pop
add
add
xor
lret
sbb
jns
and
mov
adc
sbb
ret
fldl2t
adcb
mov
jno
inc
or
mov
add
rcl
add
jp
adc
dec
xlat
stc
add
cmpsl
addr16
call
mov
lret
and
ficomps
and
movsl
push
addl
aad
inc
jle
mov
jle
cli
sbb
push
js
xchg
sbb
in
cmp
cwtl
rclb
inc
pcmpgtw
mov
add
add
aad
mov
dec
or
pop
imul
jmp
dec
nop
stos
je
add
lds
add
mov
sti
mov
add
scas
jmp
xchg
movsl
jge
sbb
mov
push
out
sub
cmp
mov
cmp
jecxz
xlat
mov
fldl
add
inc
lock
scas
inc
sahf
je
insl
or
mov
les
add
adc
lock
pop
movsl
add
ja
add
out
shl
cmp
aas
stc
jbe
inc
adc
add
repnz
pop
add
inc
jl
jp
insb
cld
add
and
pop
ljmp
sub
add
adc
clc
pop
movsl
cmp
js,pt
int
jae
add
negb
aas
add
adc
inc
lret
pop
aad
movsl
mov
sub
jecxz
movl
ljmp
adc
add
out
int3
sub
stos
push
push
jl
push
pusha
outsb
and
mov
push
mov
sub
mov
pusha
mov
push
inc
mov
xchg
mov
jne
mov
decl
xor
cmp
sbb
test
xor
xchg
fs
jb
sub
imul
adc
and
stc
out
cmp
sbb
adc
aad
hlt
repz
push
sbb
mov
mov
xlat
out
les
push
jae
push
fldenv
stc
lcall
shlb
add
pop
cmp
sbb
add
xor
dec
jno
sbb
mov
std
mov
movb
fsubrs
or
mov
scas
jns
in
jl
add
cli
add
mov
sub
gs
inc
lods
mov
fcmovb
scas
push
adc
sbb
xchg
inc
in
add
jp
xchg
add
cltd
aas
xchg
xchg
and
add
ss
sahf
nop
cmc
pushf
addb
dec
fstps
add
lock
pop
rolb
mov
nop
push
pop
and
or
loopne
sti
add
out
sbb
in
add
dec
mov
add
mov
fs
imul
dec
mov
adc
loope
xor
add
inc
lcall
cmp
fldl
mov
hlt
arpl
inc
lock
in
jne
movb
nop
jmp
sbbb
int3
jle
test
movsl
xchg
mov
icebp
into
fs
mov
mov
mov
mov
mov
add
js
mov
in
mov
stos
add
mov
xor
lret
push
popa
mov
cmp
xor
rorb
xchg
add
mov
lcall
das
push
sti
cld
dec
add
xor
xor
loopne
fidivs
dec
pop
xchg
les
mov
mov
xchg
mov
adc
aas
nop
rcrb
add
out
pop
sar
jl
add
jo
cltd
push
shl
add
lret
add
fcomps
add
jecxz
loopne
inc
add
or
pop
sti
test
std
sbb
add
cs
mov
pop
mov
sahf
mov
push
stos
add
loope
mov
cmp
jo
imul
and
mov
scas
cltd
cmc
cmp
mov
out
in
inc
add
cli
cmpsl
sbb
lret
add
ljmp
jp
rcrl
adc
add
and
bound
fmuls
xor
ljmp
loopne
aad
pop
add
adc
and
in
cld
add
mov
repnz
popa
lods
ja
xlat
or
lods
stc
xor
jp
sbb
ja
inc
sub
xchg
fldenv
clc
fucomp
dec
add
adc
add
jecxz
add
fcmovnb
fs
in
jbe
jge
adc
dec
inc
scas
add
es
int3
and
sti
dec
sarb
notl
mov
mov
xor
lock
imul
js
mov
inc
cmpb
push
pop
inc
lds
add
inc
mov
add
test
mov
add
and
pop
mov
test
add
popf
fsubs
pop
pop
or
pop
ret
fcmovb
and
xchg
mov
xlat
cmp
and
dec
add
or
repz
mov
scas
adcb
pop
aas
or
add
repz
push
adc
outsl
jg
or
push
adc
inc
test
imul
cmp
repz
in
jmp
fisubs
mov
cwtl
pop
test
imul
test
add
dec
aam
daa
std
cmp
sub
dec
push
push
lea
jge
pop
out
pop
xchg
dec
xchg
xor
insb
repnz
arpl
out
lock
ljmp
test
pop
mov
nop
cmpsl
inc
and
insl
sub
mov
add
addl
sub
cmp
loopne
lret
inc
mov
ljmp
addb
shrb
lea
inc
and
adc
inc
fincstp
adc
add
enter
jp
pop
inc
scas
and
bound
mov
add
mov
pusha
sub
std
leave
mov
lods
shl
ds
rorb
inc
iret
push
xorb
into
incl
add
jbe
in
add
test
addl
stc
add
sti
xchg
stos
pop
mov
pop
sub
jg
mul
shll
loopne
faddl
in
jo
out
mov
sarb
sub
popa
rcrb
mov
pop
pop
aas
idivb
mull
je
shll
scas
add
cltd
mov
or
cmpsl
cs
fimuls
leave
pop
or
add
mov
fcoml
sbb
addl
xchg
jecxz
outsb
mov
add
ja
add
mov
xchg
pop
loopne
inc
push
mov
cli
or
sbb
sbb
pop
add
push
fnstenv
scas
jmp
stos
sub
push
mov
incl
js
aam
out
add
add
xlat
lods
int
jo
mov
hlt
cmc
cmpsb
add
test
int
add
imul
add
outsb
cld
xor
iret
aas
jg
outsl
and
lock
add
test
addr16
pop
pop
jo
jnp
or
and
repnz
or
pop
mov
push
int3
add
ja
repnz
lds
mov
push
test
sbb
int
xor
cmp
and
test
in
adcl
jmp
xor
add
cmpl
insb
mov
in
xor
and
adc
push
leave
loopne
cmp
icebp
mov
cmc
movups
shrb
ja
add
inc
in
stos
xchg
loop
mov
mov
sub
push
push
mov
xor
lret
cmp
push
add
sti
scas
add
in
movsl
repnz
dec
add
dec
cmp
std
lea
movsb
inc
mov
call
and
pushf
rcll
les
jnp
sbb
add
push
xchg
stos
cmp
xchg
pop
fisubrl
mov
lcall
pop
nop
xor
pushf
ss
test
out
or
js
rcrb
leave
add
jb
negb
in
cld
pop
out
mov
bound
outsl
xchg
or
popa
mov
loope
or
iret
xchg
add
cmpsl
pop
arpl
mov
mov
testl
roll
pop
aam
and
loopne
outsb
mov
fistpl
pop
arpl
orb
jne
dec
pop
ss
popa
mov
rcrl
lods
popl
fistpl
in
mov
addr16
add
sub
movsl
out
adc
add
adc
pop
hlt
mov
mov
imul
les
or
xchg
sbb
and
pop
cli
jg
clc
jo
add
add
mov
fidivrs
mov
clc
add
add
or
jge
loopne
out
int3
pop
lahf
lods
mov
sub
add
dec
into
mov
pop
add
inc
mov
or
pop
test
adc
add
aas
outsb
loop
inc
mov
push
lret
iret
add
adc
pusha
imul
jb
xlat
cmpsl
shlb
xor
push
push
inc
pushf
lock
orl
xchg
shrl
add
and
pop
push
mov
mov
xchg
xchg
xchg
push
push
add
push
call
add
test
jno
aaa
sbb
icebp
mov
sbb
xor
push
pushf
add
inc
sub
inc
hlt
test
pop
push
xchg
xchg
outsl
in
jnp
pop
js
cld
movsl
fdiv
xchg
or
add
les
inc
stos
sbb
mov
add
jo
aas
lahf
mov
rolb
in
xchg
xchg
mov
sahf
dec
jle
add
mov
mov
add
sub
in
out
sbb
adc
mov
mull
lahf
or
aaa
jne
pushf
cmp
dec
add
loope
jge
cmpsb
inc
push
cs
adc
sub
lret
sbb
sarb
inc
xor
pop
add
mov
pop
and
cmp
ja
test
xor
mov
cmp
lahf
addb
cmpsl
and
movsl
xchg
loop
in
fisubrs
popa
cmp
lret
mov
rorb
add
inc
push
add
sbb
mov
or
cmp
add
push
das
shl
xchg
push
nop
cmpsl
scas
add
xchg
addl
fmul
sub
scas
xlat
add
int3
dec
clc
xor
iret
xor
cmp
pop
aad
subb
cmp
adc
adc
in
xor
mov
xor
ficoml
mov
ret
push
sti
cmp
cs
loopne
lock
push
push
jmp
pop
mov
pop
mov
addb
cmp
jl
jns
das
fwait
xor
mov
xchg
repz
rol
sbb
stos
cmp
add
dec
add
add
rcrw
int
jae
pop
into
test
dec
jno
rolb
loopne
jnp
mov
sti
xchg
mov
popa
adcl
pop
pusha
jno
pop
dec
lods
and
loop
xor
jmp
fbld
sub
daa
mov
fdivrl
icebp
dec
mov
call
ds
std
fs
test
sti
das
aas
sub
pop
rcrl
xchg
clc
shlb
mov
gs
stos
pop
jge
mov
push
push
stc
jecxz
adc
inc
lods
imul
scas
je
lods
add
mov
push
mov
dec
pushf
add
pop
sbbb
xor
xor
add
dec
aaa
xor
add
mov
fists
nop
imul
mov
fsubrl
push
call
psrad
sbb
loopne
adc
inc
fldl
or
je
es
aas
mov
cmc
popa
adc
lret
sub
lods
outsl
xor
pop
je
add
rcll
cld
cmp
add
les
add
xchg
or
cltd
push
sbb
insb
orb
mov
jns
pop
lock
imul
repnz
inc
nop
add
pop
cmp
jbe
sbb
fiaddl
or
je
fidivs
fstl
jge
pop
mov
inc
pushf
cmpsb
sbb
add
imul
push
adc
fwait
out
or
sbb
pop
subl
sub
mov
add
sub
loope
sldt
xor
adc
aaa
add
inc
and
mov
dec
adc
in
xor
leave
into
mov
cmp
shlb
mov
ds
mov
loop
mov
shld
outsb
stos
sbb
addr16
xor
adc
ja
add
test
ljmp
jmp
nop
shll
mov
push
nop
dec
addb
lret
jg
fstl
jg
sbb
dec
in
movsl
xchg
and
in
ljmp
loope
add
in
and
testl
arpl
in
pusha
shlb
fiadds
push
cltd
and
mov
sbb
add
mov
xchg
aas
std
pop
add
scas
enter
lods
jo
sub
shlb
push
sub
add
leave
xchg
inc
add
push
push
jle
enter
sbbl
xor
fdivr
shl
fld
add
imul
add
jb
add
dec
repnz
pusha
lea
dec
jmp
sbb
add
xor
aad
add
movq
into
insl
cli
call
and
clc
add
pop
jno
ret
repnz
out
smsw
sub
adc
sbb
movsl
add
aad
fcoms
mov
add
mov
xorb
mov
scas
addl
cmp
les
leave
mov
lcall
icebp
jo
push
add
mov
pop
icebp
and
sbb
ds
push
mov
cmp
pop
int
sti
pusha
adc
sbb
sbb
mov
mov
les
pushf
adc
lds
mov
enter
or
mov
mov
adcb
add
pop
test
jp
mov
mov
add
mov
xlat
jl
ljmp
jmp
mov
sbb
mov
lret
push
push
fadd
or
push
adc
sahf
add
jns
jge
out
pusha
pop
cld
inc
mov
pop
mov
sbb
or
xlat
int
jae
ljmp
fwait
adc
pop
xor
stc
gs
shll
mov
add
mov
inc
add
mov
jp
hlt
cmp
jbe
and
or
xchg
ss
mov
jg
add
clc
pop
in
repz
jg
lock
add
fdivrp
jb
xchg
xor
cmc
add
push
pop
mov
sub
xlat
jae
xchg
loope
or
movsb
and
pop
mov
xor
dec
pop
rolb
in
pop
or
loope
outsb
leave
mov
add
sub
xchg
insb
stc
add
pop
mov
dec
inc
int3
jecxz
mov
add
mov
jns
cmpsl
ret
mov
int3
lret
sbb
stos
add
ffreep
add
push
inc
aaa
add
int
dec
leave
js
mov
test
mov
clc
mov
adc
add
xchg
fcmovnu
cltd
jle
inc
roll
shll
add
inc
jge
in
jp
sub
and
push
hlt
jecxz
fnstcw
add
insl
add
xor
cmp
in
movb
sub
ret
xor
jmp
jg
cli
add
movsb
adc
pushf
xchg
sub
push
mov
jecxz
pop
mov
cmpb
leave
je
add
pop
popa
lock
sbb
sbb
cli
push
adc
sub
add
jns
fiaddl
pop
movsb
in
rolb
rorb
dec
add
cmpb
jno
push
mov
lds
pop
addr16
loop
add
ficoml
repz
shlb
sbb
insl
cmp
lds
loopne
jmp
sbb
push
stos
ret
push
jo
jno
lret
mov
fisubrs
and
mov
mov
sbb
jae
pop
aad
jns
dec
push
push
jb
js
enter
xchg
iret
lea
mov
roll
inc
adc
cmp
mov
out
jnp
inc
int3
push
addb
and
imul
or
stc
sub
jnp
cmp
sbb
xchg
outsl
sbb
dec
inc
jp
pop
hlt
sub
add
xchg
les
add
or
fbstp
push
dec
ds
stos
add
adc
dec
int
mov
movl
scas
ret
sbb
movsl
filds
and
add
add
add
cmp
add
fsubl
jp
xchg
add
std
mov
xchg
popl
adc
and
bound
jge
add
add
sbb
mov
data16
add
daa
sbb
or
xor
add
sbb
mov
cmp
xor
adc
or
ds
outsb
jge
movsb
shll
out
enter
hlt
sbb
popf
pop
xlat
js
push
add
enter
adc
mov
les
repz
jmp
xchg
shlb
sahf
cmpl
in
xchg
sbb
dec
clc
jo
and
xchg
movsb
sbb
filds
and
add
push
icebp
mull
sbb
sub
bnd
pop
cmpb
addr16
xor
lea
jmp
fsubrs
dec
push
xchg
sarl
imul
xchg
xor
xor
jno
fiaddl
das
and
ret
push
dec
and
int3
adc
inc
jnp
mov
mov
fcmovb
orb
test
jmp
add
aad
les
pusha
or
adcb
mov
movsb
filds
sbb
xchg
add
add
sbb
or
sub
imul
xchg
jae
mov
orb
xchg
pop
cli
or
std
mov
cmp
ret
clc
addl
jecxz
xor
rolb
lods
idivb
or
test
cltd
and
mov
push
pusha
or
jno
cltd
add
dec
jp
sbb
pop
mov
sbb
divb
out
loop
sbb
jo
mov
test
std
xor
fsts
or
mov
arpl
cs
rcrb
fdivs
inc
movsb
and
add
test
into
add
es
xor
idivb
push
cmp
out
inc
out
mov
repnz
mov
pop
pop
ljmp
mov
jle
add
pop
xor
int
mulb
loop
add
cmpsl
jns
sti
nop
cmp
in
inc
scas
dec
push
mulb
add
jno
jge
sub
add
lods
pop
sub
or
movsb
or
aas
or
mov
cltd
pop
add
mov
movsl
sub
cmp
push
inc
ja
add
loopne
sub
and
mov
gs
fwait
popa
pop
sbb
add
adc
inc
xchg
cmp
jg
mov
mov
test
xor
dec
add
in
add
adc
add
sbb
fimull
mov
cld
and
sti
pop
pop
enter
inc
pop
pop
loope
cli
add
repnz
mov
stc
popa
out
mov
add
fucom
lret
mov
inc
and
incl
mov
pop
gs
add
cmpsl
sbb
sti
sbb
enter
sub
sub
repnz
shrl
add
gs
lock
stos
mov
fcoms
add
movsb
adc
int
sub
xor
xor
add
inc
xor
inc
sub
sbb
xor
push
leave
or
inc
rol
pop
fdivrl
nop
add
push
sub
adc
xor
mov
adc
shrb
or
jae
add
cmpl
jmp
movsl
xchg
in
mov
or
cli
es
movsb
ret
and
out
add
adc
popa
jp
fisubs
add
mov
aam
hlt
in
push
adc
outsl
icebp
enter
cmp
repnz
js
bound
jg
lea
mov
mov
int
popa
sbb
es
in
into
add
fdivrs
out
rclb
dec
xchg
fidivrl
add
cld
sbb
in
jns
imul
cmc
aad
jle
add
outsl
cmpsb
xchg
cld
outsb
xor
push
add
enter
xchg
xchg
fsubrs
hlt
cli
mov
leave
mov
lock
jb
loope
add
xchg
xchg
jle
mov
rcll
add
xchg
lahf
mov
add
and
daa
inc
add
push
negb
add
add
hlt
movsl
lcall
jne
jnp
sub
inc
or
lret
lock
fadds
cmp
and
out
das
jo
add
test
push
aas
ds
add
xor
jae
rolb
adc
sbb
cmp
and
push
push
in
call
push
mov
imul
stos
jl
shl
fnsave
sti
scas
lcall
and
add
mov
lret
sbb
adc
dec
stc
sbb
mov
add
add
inc
orb
pusha
mov
cmp
sbb
enter
shll
add
repz
and
adc
xchg
jecxz
mov
jg
inc
iret
xor
add
les
jg
orb
mov
movsl
jg
sub
faddl
add
mov
push
mov
out
das
jnp
add
les
push
ds
lods
add
pop
or
xor
jle
add
cmp
aam
adc
leave
and
jl
jmp
mov
pop
dec
ret
pusha
xchg
fwait
and
test
ja
xchg
cmp
pushf
add
and
dec
xor
sub
ljmp
push
cwtl
js
xchg
ss
mov
xchg
cwtl
push
rclb
push
in
add
sbb
jnp
add
fbstp
add
shrl
fdivrs
test
and
xor
in
addr16
add
ret
cmp
add
jno
test
add
xor
xorb
mov
xorb
cmpb
pop
mov
into
lods
ja
sub
nop
xor
mov
aad
add
xor
jl
icebp
xchg
jle
scas
add
cld
sub
or
add
je
sbb
mov
pop
pop
sub
fidivrl
cmpsb
add
cli
push
and
loop
mov
push
sti
pop
lret
adc
lea
std
lret
int
mov
sbb
push
pop
dec
rorl
pusha
movsb
dec
outsb
cs
add
mov
cld
mov
add
push
or
xor
fwait
test
or
cmpsb
xchg
jge
mov
test
push
sub
inc
sub
cmp
dec
inc
pop
insl
stos
ret
stc
mov
lahf
out
repz
repz
ret
fdivp
shr
mov
jmp
lcall
stos
pushf
imul
int3
push
fstps
mov
popf
jecxz
lds
jp
xchg
filds
fdivr
and
add
nop
cmpsb
test
test
jge
out
or
jns
int3
cltd
sti
nop
rolb
jb
mov
ret
out
add
stos
dec
jb
cmpsl
and
hlt
fnsave
roll
clc
lcall
icebp
testl
jg
mov
cmp
dec
ss
pop
push
out
aam
mov
sbb
into
add
and
add
sbb
popa
dec
add
mov
jge
les
add
sbb
mov
pusha
or
push
mov
sub
mov
dec
pop
jo
ret
jno
lds
mov
lock
sti
or
jbe
stos
fwait
scas
xchg
test
enter
cli
add
into
inc
jmp
test
add
test
and
mov
xchg
imul
xchg
and
pop
addb
jecxz
imul
mov
shlb
aam
lods
pop
push
cs
call
ror
push
lock
cmc
aaa
scas
and
xchg
cmpsb
adc
add
adc
lods
or
jns
mov
aam
ret
sbb
dec
and
xchg
dec
psrlq
testl
or
rolb
mov
jnp
mov
xchg
pop
inc
mov
jg
shlb
lock
cwtl
add
out
rcl
in
add
xor
sbb
ret
icebp
or
imul
xchg
js
or
push
adc
inc
fsubl
dec
add
sahf
add
test
lret
xchg
test
adc
sbbl
les
popf
and
insl
jmp
xor
add
int3
xchg
aaa
pushf
sarb
lods
js
pop
add
adc
int
andb
jo
stos
mov
mov
dec
test
mov
testb
in
adc
jne
push
in
mov
sub
ds
push
or
imul
sarl
jg
mov
adc
jo
mov
in
xchg
mov
punpckhbw
imul
jno
and
add
and
rcrb
pop
inc
pop
jbe
pop
cld
pop
mov
inc
mov
jg
add
jg
mov
push
cmpsl
dec
sbb
xchg
xchg
mov
add
and
or
pop
mov
or
scas
push
push
mov
cmpsb
imul
mov
out
dec
xchg
or
sbb
rorl
lods
pop
lret
add
push
ds
or
add
adc
imul
mov
insb
outsb
int
fstps
jg
pop
inc
mov
cmpsb
pusha
sub
lds
add
in
cmp
cltd
xor
inc
add
xor
xchg
mov
xor
int
dec
mov
jb
pusha
cltd
xor
inc
mov
dec
add
inc
mov
xchg
sbb
iret
popa
add
mov
add
mov
jmp
xor
sbb
loop
cltd
movsb
pop
add
jo
test
add
neg
mov
adc
test
pusha
add
jnp
les
js
arpl
cmp
ja
lds
insl
dec
stc
xchg
adc
add
jae
clc
fwait
rorb
popf
out
hlt
adc
cmp
dec
test
xchg
ja
add
pushf
xor
insl
int
add
in
cld
dec
adc
push
test
mov
subl
push
add
push
add
mov
loop
test
int
sub
adc
mov
cmp
push
add
add
xor
mov
add
stc
loop
rcrl
adc
push
rcrl
dec
sbbb
inc
push
cmp
fucom
jge
cltd
xchg
out
rorb
movsl
cmpb
mov
add
sbb
adc
add
mov
cs
push
pop
push
loopne
and
adc
leave
inc
lods
inc
mov
call
out
fcoml
repz
sbb
jns
add
cmpsb
add
ja
add
clc
adc
add
dec
xchg
xchg
repnz
ljmp
jb
mov
dec
push
push
mov
pushf
add
jg
dec
cmpsl
es
jle
push
loopne
cmp
mov
push
andl
add
add
add
jb
mov
lahf
stc
cmp
js
push
int
mov
roll
sub
dec
jo
ret
dec
testl
jmp
mov
mov
inc
pop
test
mov
pop
mov
push
ljmp
or
fcmovb
push
dec
pushf
insb
cmovb
stos
mov
adc
sub
dec
lahf
adcb
or
jns
sub
xchg
xor
icebp
pop
movsb
sbb
insl
mov
add
out
loope
add
xchg
pop
pusha
cltd
xchg
test
repnz
mov
nop
adc
add
pop
dec
call
test
add
jl
orl
adcb
jno
pushf
scas
cmc
add
mov
mov
add
mov
push
mov
ret
mov
cmp
adc
jp
push
mov
add
push
add
pop
adc
pushf
ss
jne
btl
dec
cmp
mov
or
xchg
and
jp
ljmp
sbb
add
xor
fldt
pop
test
orb
enter
fs
and
pop
adc
dec
mov
jmp
sub
adc
adcl
adc
bound
mov
xchg
xor
test
inc
mov
pop
call
push
das
adc
and
or
or
iret
gs
mov
sbb
or
loop
jge
and
xchg
jnp
add
popa
add
cli
adc
inc
dec
mov
cmp
cmc
sbb
ret
cmp
add
xor
adc
or
ds
cmp
int3
shl
push
add
enter
faddp
add
shrb
xor
pop
xchg
fisttpll
jnp
xchg
add
cmp
sub
add
push
lahf
push
mov
movsb
shlb
push
push
setns
call
adc
gs
mov
mov
sub
repz
es
push
outsl
add
push
stos
or
sbb
add
cmp
subl
and
inc
or
rol
dec
stos
add
cmp
cltd
dec
repz
loopne
sbb
xor
push
enter
mov
ljmp
aaa
pop
add
mov
rsm
adc
sahf
sbbb
sbb
ljmp
and
add
add
cld
and
lds
cs
fsubp
andb
add
cmpsl
add
jle
mov
insb
add
mov
in
loopne
rorb
lahf
and
aas
pop
fldenv
pusha
xchg
imul
mov
push
adc
outsl
cli
ja
scas
and
pushf
mov
decb
pavgb
add
jle
inc
push
jns
cmpsl
xor
lods
scas
sbbl
add
sub
sti
or
cltd
aas
test
and
inc
xlat
add
scas
rol
mov
add
inc
testb
jmp
push
test
or
mov
pop
add
aad
sub
push
mov
and
ljmp
pop
sub
outsb
dec
jle
add
push
shr
push
aas
adc
sub
test
xor
and
repz
mov
sbb
pusha
pop
inc
push
sarl
mov
pushaw
add
cmpb
xchg
add
add
pop
icebp
add
or
ja
jecxz
popa
jns
je
inc
mov
xchg
rolb
inc
ja
pusha
sbbb
dec
pop
out
icebp
mov
cmp
mov
loop
add
out
adc
inc
cmp
fbstp
add
lock
or
mov
dec
outsb
xchg
adc
and
push
and
mov
icebp
iret
out
mov
dec
xor
cmc
xchg
test
loope
push
fmulp
and
inc
add
and
aas
dec
in
ret
lahf
pushf
xchg
mov
addr16
es
outsb
jl,pn
sbb
mov
loope
sub
xchg
jge
arpl
xor
mov
fimull
cwtl
mov
jb
rorb
andb
xor
outsb
mov
fists
out
add
subb
sbb
outsb
in
clc
cmp
jecxz
cmp
pop
jle
enter
or
sub
adc
stc
dec
jne
lock
andb
jb
mov
ret
test
js
add
sahf
nop
jne
mov
popa
mov
rolb
leave
sbb
repnz
sti
jle
push
inc
jmp
and
inc
int
xor
and
loope
push
subb
gs
lcall
lret
pop
pusha
mov
adc
out
mov
xorl
sub
mov
pop
addr16
stos
dec
cmpsb
adc
les
adc
adc
hlt
clc
cs
out
popf
outsb
out
lock
mov
add
inc
lret
mov
loop
sub
or
cmc
xor
xlat
femms
add
fistps
pop
insb
int3
in
mov
add
sbb
mov
add
inc
push
add
mov
pop
xchg
xchg
adc
add
dec
sub
pop
roll
and
mov
fistpl
push
insb
add
repz
hlt
pop
add
mov
rclb
or
adc
add
testl
test
cmp
sbb
cli
out
pop
pusha
cmp
xorl
movsl
lcall
xchg
cmp
push
imul
nop
loop
sub
inc
xchg
inc
xchg
push
jmp
pop
and
in
xchg
outsl
inc
mov
outsb
sti
mov
push
in
cmpsb
add
loop
pop
mov
jae
loop
adc
lret
add
add
testb
pushf
orb
int3
inc
andb
add
inc
xchg
packuswb
and
mov
insl
inc
jb
lock
or
pop
pusha
enter
shrl
lahf
adc
add
cmp
pop
dec
adc
mov
mov
rcl
jecxz
movb
into
push
pop
and
loopne
xor
mov
pusha
fs
pop
add
or
mov
dec
call
lcall
enter
fcoml
lea
verr
xlat
idivb
orl
mov
mov
in
and
js
adc
dec
ds
fwait
adcb
movsb
jbe
cmp
out
mov
sbb
adc
push
leave
lock
push
mov
aas
lret
cmp
and
or
ret
push
push
xchg
mov
stos
mov
imul
adc
mulb
mov
jg
psraw
dec
jb
lods
pusha
ret
dec
popl
out
in
adc
dec
hlt
cmp
idivl
mov
orl
out
jnp
or
mov
push
add
inc
imul
addb
adc
cltd
and
outsb
je
pop
ds
loopne
dec
xchg
add
stos
aad
loope
stos
dec
add
cmc
sub
add
push
jb
add
ss
loopne
mov
fcmovnbe
xor
sub
pusha
adc
mov
adc
leave
sbb
add
adc
lahf
das
mov
xor
fdivrp
add
andl
ss
sti
add
je
jnp
or
push
and
bound
in
fucom
pop
jge
pop
into
ja
add
lret
jns
mov
and
pop
mov
push
aaa
lea
sbb
mov
int
sahf
adc
std
add
xor
mov
add
cmpsl
sahf
fiaddl
add
push
lds
sub
mov
leave
sbb
add
je
xor
out
push
pop
dec
or
scas
add
movb
aam
add
dec
cmp
cmp
jg
add
popa
sub
or
stos
add
stc
sub
adc
xor
shlb
je
or
aad
jmp
data16
jmp
lock
cmp
jle
sbb
loop
cld
add
inc
repz
xchg
scas
xlat
pushf
and
clc
fmull
add
lods
push
sbb
or
jmp
fld
xchg
pop
in
lods
cmp
or
jne
add
loope
xchg
test
rolb
lret
std
stc
mov
add
cmp
nop
jmp
and
sub
sbb
inc
mov
sbb
in
insb
or
mov
sbb
pop
adc
iret
addl
lds
ds
push
test
cltd
int3
add
pop
dec
xlat
add
jle
lods
xor
ret
xchg
xlat
xchg
andl
iret
add
push
add
inc
jp
add
addr16
insb
mov
add
add
dec
add
jae
les
jge
add
pop
shrl
fmul
orl
and
das
loope
push
stc
jge
or
adc
mull
or
and
outsb
sub
push
lcall
ds
roll
dec
jp
out
hlt
mov
lea
mov
xbegin
mov
pop
mov
lahf
sahf
push
cmp
push
addr16
inc
push
sub
cwtl
add
jno
addr16
les
mov
mov
scas
rol
daa
mov
fdivrs
and
cli
jnp
jg
sub
pop
jno
inc
mov
pop
jbe
mov
rcrb
mov
mov
loop
testb
mov
rolb
pop
mov
jg
mov
dec
rolb
rorb
and
shl
add
jmp
fnstcw
jae
and
imul
lcall
int3
nop
pusha
cmpsl
dec
fisttpll
psrlq
ret
ds
pop
aad
push
ficomps
loopne
lock
mov
aas
lea
push
cwtl
pop
enter
js
orb
pop
dec
add
xchg
push
xlat
and
jae
add
mov
std
push
add
js
ljmp
fucomip
xor
sbb
je
push
ljmp
mov
add
push
mov
loopne
jle
sub
mov
lcall
shll
dec
add
notb
add
ljmp
sbb
mov
out
add
jns
push
stos
in
add
adc
mov
jl
fcmovne
jb
out
mov
pop
jle
add
lods
mov
ret
clc
and
ljmp
adc
enter
repnz
add
jb
or
mov
mov
andb
popf
add
mov
sub
or
sub
add
fs
pop
add
xor
jmp
jne
pcmpeqb
cmp
cmp
jmp
pop
stos
push
cmp
and
add
dec
mov
cwtl
add
dec
test
loope
add
lds
push
sbb
add
mov
idivb
or
push
movsl
inc
mov
mov
call
bound
push
divb
jl
popa
stos
add
inc
pusha
xor
push
pop
call
outsb
std
cmp
adc
fisttpll
add
clc
mov
add
dec
sbb
lcall
mov
sahf
cmp
pop
fcomi
inc
add
push
push
fistps
pop
add
mov
rorb
push
es
add
call
xor
aaa
enter
jle
mov
aas
or
jno
fdivl
jo
rclb
inc
xchg
add
add
js
sbb
sbb
in
fs
xchg
sahf
mov
add
ffreep
loope
or
arpl
fs
mov
mov
jne
jo
movhps
sub
sub
add
pop
leave
pop
popf
jbe
add
clc
mov
add
push
jns
jp
sbb
add
mov
dec
cmpsb
out
fnstsw
xchg
jg
ret
fidivs
sbb
bound
stos
fidivrl
and
imul
xor
cltd
pusha
cmp
add
js
sbb
add
jb
mov
repz
and
mov
add
daa
aam
ficomps
addl
dec
aam
and
negb
inc
notl
dec
lret
movsb
loop
add
cmpb
pushf
add
sbb
popf
xchg
fsubrs
lahf
jmp
adc
pop
sahf
cmc
sub
mov
es
orb
popa
adc
enter
sub
xchg
jge
pop
dec
mov
dec
mov
sbb
aas
and
in
mov
sbb
pop
add
dec
jl
cmp
loop
sbb
fwait
dec
ret
dec
xor
xchg
or
fdivrl
mov
xchg
push
add
cli
outsb
inc
andl
sub
dec
pusha
jb
testb
xchg
sahf
dec
and
test
pop
stos
add
add
insb
lret
ds
add
loop
out
mov
mov
pop
aas
arpl
add
ljmp
pushf
mov
negb
cli
mov
add
pop
adc
insb
xor
push
or
jmp
test
jmp
shl
and
icebp
and
cld
adc
jb
xor
cmp
add
jg
cmp
loop
das
cmc
sbb
xchg
lods
pop
shr
mov
jbe
les
popf
adc
testb
outsl
push
stc
cmpl
aas
insb
add
test
pop
movsb
dec
cltd
fmuls
pop
or
add
xor
dec
add
and
fisubs
add
jae
mov
and
jo
enter
arpl
js
mov
lcallw
inc
sbb
in
sub
xor
and
or
adc
loopne
rol
mov
add
adc
mov
mov
sahf
mov
add
pop
mov
add
jo
xchg
xchg
add
insb
dec
sbbb
add
mov
js
shll
outsb
shll
jp
aas
pushf
mov
mov
pop
imul
xor
xchg
and
add
xchg
cmp
inc
add
lret
add
xchg
rcrl
dec
popf
push
fsub
ret
push
mov
adc
and
pop
icebp
xchg
or
mov
add
mov
fimull
lock
repz
cmp
shlb
addb
int
or
in
enter
inc
cmp
add
nop
dec
pop
rorb
add
sbb
add
pop
sub
pop
xchg
mov
fisttpl
add
call
inc
into
stc
pop
adc
and
inc
mov
sbb
add
data16
add
jecxz
jb
adcb
jle
js
add
hlt
push
out
mov
cmp
dec
mov
and
push
mov
es
shll
in
xchg
pop
movb
sbb
cmc
xlat
pop
add
ror
mov
cwtl
call
loope
nop
and
mov
mov
lods
in
sti
add
xchg
cmp
fs
push
test
imul
dec
add
lds
js
sbb
stc
xor
add
test
add
out
add
into
mov
pavgw
ss
mov
sbb
mov
jbe
out
ja
xchg
in
inc
push
mov
xor
xor
stos
pop
push
dec
push
out
lock
mov
xchg
mov
xor
sahf
adc
adc
sbb
xorb
add
cmp
pusha
or
mov
xor
pop
repnz
int
movsb
stc
adc
sub
pop
jmp
mov
push
and
xor
inc
cli
push
inc
inc
aad
pushf
shlb
nop
xor
xor
nop
jo
add
adc
add
subb
gs
testl
aam
xchg
cld
add
dec
mov
add
pop
pusha
ss
xchg
out
mov
xor
daa
cmp
add
repz
sbb
inc
movsb
aaa
jae
add
stc
lahf
leave
push
lods
cltd
or
popa
cmpb
adc
xchg
je
add
jb
pop
stc
movsb
add
rolb
sub
fdivrs
mov
add
jge
outsb
add
jg
aam
cmp
repz
lds
or
jecxz
push
push
adcb
sbb
pusha
mov
mov
and
add
shrb
xchg
jg
add
mov
rcr
pop
or
frstpm(287
add
dec
aaa
add
outsb
mov
cmp
jne
aad
add
adc
pop
daa
add
test
add
mov
sbb
sbb
jbe
pop
cmp
xchg
add
ret
das
xor
vmovaps
cmc
cwtl
add
fidivs
cld
fisttpll
mov
pop
adc
add
mov
sub
add
jae
inc
push
cmp
sbb
and
adc
cmpsl
xor
sbb
cmpsl
push
add
arpl
or
repnz
add
frstor
sbb
rol
add
xchg
add
es
frstor
push
add
push
imul
add
cmpsb
mov
in
rsm
sub
shlb
and
add
imul
pop
pop
cmp
mov
adc
mov
jge
push
adc
aas
into
ss
add
cmc
int
cmp
push
addb
fcoms
dec
jp
mov
add
ja
jnp
cli
lods
pop
pop
rclb
daa
add
mov
into
mov
out
dec
adc
test
movsl
mov
sarl
fstpl
mov
rcrb
xchg
in
sbb
out
cld
fs
scas
xchg
or
and
and
push
out
sahf
add
pop
push
pop
imul
adc
gs
bound
push
pop
test
mov
or
loop
scas
add
push
mov
push
loopne
iret
mov
sub
mov
adc
aam
cmp
add
push
lcall
jae
push
xchg
lods
in
jmp
xor
pop
nop
jno
xor
dec
sbb
fidivrs
sarb
or
jno
pop
push
movl
mulb
pop
dec
dec
inc
adc
js
add
stos
lods
jo
fwait
add
inc
mov
jnp
aas
icebp
pop
add
stos
add
xor
jge
outsl
aas
arpl
add
dec
pop
ret
fimuls
jb
xor
icebp
stc
adc
add
add
sub
jo
add
xchg
mov
xchg
roll
mov
insb
shlb
cmp
add
in
pop
lods
lcall
dec
jmp
xchg
ret
test
aas
pop
mov
sub
pop
adc
std
add
jo
jbe
mov
emms
scas
lods
add
ss
orb
pop
xchg
add
fcoms
dec
xchg
sbbb
lret
and
jno
adc
cwtl
subb
pop
jno
add
push
xchg
lret
sbb
add
rcrl
mov
pop
adc
fld
shl
mov
add
clc
mov
add
dec
cld
sbb
aad
test
and
loop
xchg
inc
cli
daa
arpl
fsubrs
ds
out
in
add
out
adc
mov
sbbl
test
add
stc
xchg
mov
add
cld
push
andb
mov
mov
call
push
add
adc
loopne
out
lods
add
cmp
cmp
sbb
xor
add
int
insl
and
out
mov
sahf
into
adc
loopne
add
xchg
add
cmp
ds
out
ret
cld
int3
pop
inc
pop
fisttpl
adc
in
cmpsb
test
loopne
pop
les
xor
xorb
xor
mov
add
roll
and
cld
mov
jb
in
xchg
add
daa
aad
mov
sub
rcrb
leave
add
xchg
mov
sbb
arpl
mov
add
ficoml
and
sbb
inc
or
add
call
add
xor
movsb
push
cld
and
mov
mov
mov
scas
in
aas
add
ret
cmpsl
imul
rcrb
and
mov
xchg
push
and
iret
jmp
add
push
xchg
lahf
hlt
add
lea
ret
lret
sub
ljmp
shrb
sub
ja
adc
lret
repz
xchg
scas
sub
cmp
insb
or
loopne
pushf
movsl
unpckhps
jns
fs
popf
shrl
out
add
cmpsl
jmp
int3
xor
add
mov
add
dec
mov
fcomps
ret
adc
mov
fsubrp
add
pop
insb
and
cmpl
rcrb
stos
and
cmp
mov
add
sbb
rcrl
pop
add
out
ja
imul
xchg
subb
and
add
xchg
jnp
test
xor
mov
cmc
and
xchg
adc
and
push
push
add
lods
pop
xor
dec
pop
cltd
nop
fiaddl
cmpsl
and
sbb
xchg
add
sbb
add
lock
xchg
add
stos
pop
pop
add
push
pop
movsl
enter
add
or
pop
adc
xor
add
les
into
adc
mov
ja
js
pop
dec
xlat
shll
cs
xor
dec
cmp
dec
das
add
aas
dec
and
adc
mov
pop
mov
xor
fidivrl
hlt
mov
loop
out
cld
add
subl
gs
adc
sbb
stos
add
add
aad
out
and
or
repnz
ficomps
adc
mov
jnp
out
sbb
fbld
pop
sub
loop
jg
inc
int3
shlb
add
jp
pop
icebp
aam
mov
mov
jo
daa
int
gs
or
pop
xor
into
incl
daa
lea
xor
jecxz
scas
add
and
inc
add
int3
dec
dec
cltd
mov
cmp
xchg
bound
pusha
and
cmpsb
fisttpll
fadd
gs
xchg
clc
add
inc
lods
stc
jae
addb
add
test
mov
int3
xchg
sub
pop
les
xchg
lock
rsqrtps
orb
pop
ja
imul
or
add
jecxz
dec
push
inc
test
or
ficompl
fdivrl
movsl
in
adcl
aam
cmp
or
push
test
adc
jnp
scas
mov
xchg
or
and
xor
test
fadd
das
add
and
outsl
and
lret
mov
jmp
fwait
sbb
loopne
cmpb
jo
add
mov
sub
bound
popf
pop
pop
aaa
pop
repnz
and
cwtl
xor
cmpl
sbb
inc
cmp
shlb
sub
and
inc
scas
xor
xor
sub
adc
and
cmp
sub
in
addb
inc
xchg
incl
sub
int
sbb
add
scas
movb
add
sub
xor
mov
pop
cmp
arpl
test
cmpsb
lock
fimuls
pop
rolb
mov
mov
add
push
sub
dec
mov
scas
loope
out
push
sar
mov
and
imul
sahf
cld
mov
sub
in
flds
sbb
cltd
pop
xchg
ret
cmpsb
xor
mov
pop
cmp
and
jne
add
loope
pop
lea
add
sbb
sub
push
and
add
add
pop
pop
es
shrl
sub
pop
int
push
inc
mov
sahf
mov
loopne
nop
pop
add
into
movb
fadd
push
push
push
sub
dec
dec
xchg
daa
fildl
sbb
push
push
sbb
jmp
inc
mov
in
js
jo
incb
sub
mov
push
rclb
mov
inc
fwait
lock
jle
xchg
cmp
test
add
xor
xchg
subb
pushf
dec
adc
pop
rcrb
aaa
add
adc
out
xor
fsubrp
adc
push
out
inc
das
and
es
lods
pop
push
add
cmp
fs
sahf
xor
add
fwait
out
mov
adc
inc
inc
rclb
je
aaa
scas
or
add
lret
mov
loop
imul
addb
pop
jmp
mov
mov
xchg
jl
rcrb
mov
jbe
dec
mov
push
orb
push
inc
xchg
lahf
xor
or
push
push
xchg
dec
ret
mov
xor
add
pop
inc
xchg
and
push
add
xor
or
shll
repz
aaa
pushf
add
fiadds
adc
cmp
mov
add
dec
mov
dec
sti
mov
ja
add
aas
mov
inc
inc
sub
adc
mov
stos
lahf
jl
or
les
cld
cltd
add
pop
or
inc
adc
jns
and
out
sub
rorl
dec
add
push
daa
jge
and
test
jo
lods
xchg
test
adc
mov
call
add
mov
pop
mov
lea
test
add
pop
jb
push
mov
test
lret
fldl
test
mov
shll
cmp
mov
movb
std
stos
lahf
fbld
cmp
pop
sti
mov
nop
fstl
in
add
add
lock
cld
push
hlt
cmp
or
out
nop
popf
scas
pushf
cmp
repz
fwait
mov
stos
add
dec
pushf
jle
sbb
add
push
xor
jecxz
jmp
add
adc
lods
aam
mov
dec
jmp
fstpl
pusha
push
negb
lock
mov
rclb
mov
inc
sbb
call
hlt
cmpsb
mov
clc
adc
add
pop
lcall
fnstenv
pop
pusha
loopne
rclb
push
adc
jo
or
dec
push
xor
add
pusha
mov
pusha
add
mov
movsb
add
dec
test
mov
xchg
cmpsl
insl
decl
rclb
dec
popa
bound
adcb
and
hlt
sbb
clc
div
jl
push
add
lods
cmc
test
xor
sarl
and
jmp
pop
dec
xorl
push
sbb
lea
std
loope
in
cmp
pusha
popa
mov
push
nop
jb
add
loope
cmp
out
sub
add
inc
test
sub
rcrl
inc
sub
jnp
pop
leave
mov
lds
sbb
loopne
and
sub
pop
push
subb
add
xor
addr16
ljmp
pop
jo
and
clc
inc
cmp
pop
mov
pop
fs
dec
add
test
push
stos
push
out
pop
xchg
jno
andb
pusha
pop
xor
out
mov
add
jecxz
mov
sbb
cmp
pusha
rorl
add
adc
das
push
nop
add
lods
and
add
jae
pop
xchg
mov
add
fdivrl
lods
out
fsubr
popf
cwtl
mov
aaa
jbe
dec
arpl
data16
js
rorb
xor
or
jo
nop
pushf
jecxz
in
divl
mov
add
jnp
mov
dec
hlt
mov
mov
add
aad
or
add
jnp
mov
adc
add
rcrb
jns
fnstenv
shlb
pop
push
lea
popa
sbb
lahf
mov
cmpsl
add
pop
xor
inc
mov
addr16
xchg
sbb
adc
or
add
leave
cmp
and
ret
stc
push
add
add
cmp
add
mov
pop
xchg
jne
add
pop
es
push
fisttpl
jge
push
dec
xor
rep
mov
and
cmp
xchg
add
cmp
push
lret
test
sbb
pop
ss
add
adc
add
add
imul
push
jp
or
insb
add
stc
rolb
push
mov
adc
lahf
loopne
test
add
insl
out
xchg
or
add
enter
pop
xor
add
out
ljmp
jecxz
stos
rclb
into
add
pop
push
fimuls
xchg
add
mov
jp
es
setl
repnz
ds
in
cmpsb
adcl
mov
ljmp
add
pop
rorb
push
add
in
mov
add
lods
push
xor
pop
jno
adc
add
xchg
cmp
cld
mov
and
pop
jb
ja
inc
sar
mov
add
out
leave
and
sbb
rcll
push
jnp
xchg
clc
push
ds
sub
dec
push
sbb
and
add
aaa
pop
ljmp
mov
pop
jnp
adc
pushf
push
addl
jmp
scas
xor
mov
mov
icebp
inc
rclb
or
movsl
sbb
xor
out
mov
add
mov
jge
mov
add
mov
push
les
jmp
mov
mov
mov
test
mov
add
pop
imul
rcrb
test
xchg
dec
outsl
addr16
jne
movsl
xor
jle
add
mov
jno
mov
inc
sbb
in
mov
stc
pop
sbb
aaa
and
shlb
add
sub
sbb
leave
insl
add
or
and
lahf
add
stc
movsl
pop
popf
xor
mov
cld
repnz
adc
sub
pop
add
fisttpl
imul
out
xlat
icebp
test
aaa
mov
cmp
fmull
int3
repz
pop
add
mov
pop
or
sti
out
cmpsl
stos
sbb
inc
add
shll
and
js
aas
lret
add
adc
mulb
dec
mov
push
mov
jnp
add
andb
gs
mov
mov
aad
clc
stc
adc
cmp
jg
jbe
or
loopne
add
hlt
fisubs
push
push
int3
mov
adc
jne
std
or
into
cmp
add
xchg
jnp
xchg
add
inc
cli
aaa
xor
mov
mov
xchg
mov
add
in
pop
sbb
iret
push
xor
gs
mov
cmp
add
adc
push
adc
xor
sbb
ret
xor
fs
js
dec
lea
div
loop
ss
add
adcl
add
mov
sub
add
stc
inc
lds
movb
and
ds
andl
lds
mov
inc
inc
ljmp
out
add
add
inc
jno
lret
xlat
add
jecxz
ljmp
lcall
pop
icebp
push
fs
mov
add
outsl
pop
daa
or
or
sbb
sub
dec
lock
inc
xorb
je
xchg
es
xor
adc
and
stos
cmp
fmul
sbb
add
pop
add
mov
mov
pusha
insb
in
idiv
shll
mov
sti
scas
pusha
inc
add
and
adcb
call
scas
and
xchg
add
mov
sub
ret
nop
xchg
jbe
js
lods
scas
test
dec
mov
add
insb
ret
mov
add
aas
jmp
mov
pop
add
mov
xchg
sbb
outsl
pop
lods
and
jle
insb
adc
mov
add
inc
cmovl
sbb
stos
fwait
cmpsb
jno
add
ucomiss
out
xchg
add
addr16
add
lods
imul
jg
div
sub
pop
mov
or
loopne
fcmovu
je
add
push
or
dec
cmpb
mull
add
jno
rolb
loop
mov
aam
adcl
xchg
add
test
out
inc
mov
pop
adc
sahf
lock
mov
add
cmpsl
imul
push
push
fiadds
push
add
mov
lret
shlb
cmovs
lds
mov
add
orl
int3
xor
outsb
mov
adc
mov
xchg
mov
xorb
cmp
jae
stc
into
repz
mov
ja
add
add
add
pop
or
addb
cmc
push
xor
xor
or
pop
aam
and
fadd
inc
cs
mov
xchg
aad
pop
add
fidivrl
mov
inc
add
test
aam
add
mov
je
ret
cwtl
push
jp
nop
add
cmp
or
test
pop
mov
adc
jp
addr16
into
lahf
mov
in
in
pop
add
mov
adc
faddl
inc
mov
mov
add
pop
sahf
sbb
test
popa
inc
inc
pmuludq
mov
cmpb
ret
pop
xchg
ja
fs
inc
or
stos
movsb
add
mov
jbe
repz
pop
iret
frstor
fisubrl
jge
inc
imulb
aad
add
and
pop
pop
sub
push
cld
jo
ret
call
push
sub
sub
fdivrs
popa
and
outsb
std
mov
sarl
aaa
mov
sbb
test
outsb
mov
mov
jle
es
sti
add
sub
xor
or
aas
mov
cltd
inc
mov
sub
pop
pushf
add
call
add
fistpll
icebp
add
into
cmpsl
add
xor
add
clc
add
add
push
mov
add
shrb
mov
dec
loope
cmp
out
loop
jns
pusha
fnstenv
jp
sbb
mov
mov
dec
mov
cmpsb
or
pop
stc
and
fsubrl
adc
pop
popf
sbb
and
inc
mov
out
ja
inc
cmp
xor
jae
xlat
std
adc
enter
adc
cmp
clc
xor
dec
sub
add
mov
filds
jg
mov
stc
adc
add
mov
cmpsl
add
jne
and
pop
cmp
adc
orl
mov
subl
jmp
test
add
repnz
vmread
add
jecxz
cmpsb
add
and
das
add
push
neg
sbb
sahf
sbb
jle
or
xor
pusha
dec
into
push
add
jecxz
jg
clc
hlt
add
or
mov
lahf
add
push
pushw
arpl
xor
cltd
mov
inc
outsl
aam
xchg
in
movmskps
shll
push
sub
push
dec
sbb
test
inc
mov
jg
push
jmp
inc
or
mov
lds
leave
fstps
xchg
sar
ret
in
loopne
lret
xor
leave
pop
mov
les
rorb
fidivl
add
add
xlat
push
pop
jo
push
insl
push
or
cmp
sti
push
cmpsl
pusha
cli
push
cmp
and
enter
push
jno
fildll
aam
inc
or
fs
add
insb
idiv
cwtl
or
test
push
or
adc
sbb
jbe
add
mov
test
cmp
fbld
icebp
and
cltd
dec
mov
inc
add
dec
stos
xor
aaa
add
cmc
imul
and
out
cmp
xor
push
add
or
imul
xchg
add
sbb
or
push
jo
nop
mov
pop
loopne
ret
push
sub
mov
inc
out
cmp
ja
add
stc
inc
xor
scas
dec
push
sahf
jo
or
out
adc
push
and
or
enter
and
test
or
xor
pop
insl
and
aad
pop
xchg
add
pop
inc
arpl
cmp
sbb
sub
pop
das
js
stc
jg
push
or
sub
imul
jmp
fwait
and
int
dec
movsb
testl
movsl
out
mov
lret
in
pushf
cmp
dec
mov
xor
cmp
add
arpl
roll
fcmovnu
xor
mull
jne
xchg
imul
mov
mov
mov
xor
pusha
jo
pop
mov
xchg
ror
js
xchg
cmp
outsb
and
mov
out
jp
mov
scas
add
xchg
dec
or
shll
add
out
std
dec
jb
sub
scas
shrb
xchg
adc
mov
pop
lcall
cmc
lret
push
mov
ret
mov
add
or
fstpt
jp
xchg
clc
lret
jbe
jb
les
dec
adcb
std
out
shl
and
dec
test
popf
incl
jge
jle
lret
loopne
pop
sub
jmp
sar
in
fildll
iret
cmp
roll
loope
and
in
icebp
add
xchg
or
jge
pop
push
and
jb
add
xor
and
add
in
fistpl
and
js
add
mov
daa
fiaddl
dec
pop
repnz
mov
adc
jge
out
ror
push
xlat
xchg
sbb
cli
shr
loop
push
cwtl
stos
icebp
arpl
fmul
add
call
addr16
pop
push
jge
xorb
pop
test
les
jecxz
out
cs
das
push
hlt
rcrb
lret
add
push
or
stos
loop
loopne
adc
xchg
outsb
ret
jmp
add
mov
push
shl
out
lea
fcoml
push
inc
popl
test
pop
cmpsb
stc
and
in
divb
test
daa
enter
addps
dec
add
or
jp
rorb
pop
clc
xor
cmp
mov
inc
scas
jge
add
pop
mov
cltd
fistpll
mov
ret
mov
adc
add
jp
iret
and
jno
subb
lret
mov
mov
pop
mov
mov
js
in
sbbl
scas
mov
fwait
add
dec
dec
jno
je
mov
rclb
dec
add
test
xor
inc
mov
add
stos
xchg
mov
mulb
cmp
icebp
xorb
mov
insl
out
mov
add
mov
out
shlw
jb
add
xchg
test
popf
stos
mov
icebp
mov
and
sub
xor
cs
pop
push
or
add
outsb
arpl
scas
aas
dec
int
push
pop
pushf
sub
add
imull
add
je
out
pop
add
movsb
add
jo
adc
sub
push
stc
jne
int3
sbb
addr16
shll
iret
shr
inc
jmp
test
lods
adc
inc
clc
andb
and
js
jns
in
mov
popa
dec
cmp
addb
push
cmp
xlat
ja
xor
pop
roll
lock
sub
inc
or
push
loope
shrb
cli
sub
lea
mov
mov
add
sbb
pop
or
or
or
fcoml
and
out
sbb
shrb
repnz
loopne
lret
out
jb
scas
sbb
scas
pop
mov
pop
jg
cwtl
add
outsb
cmpsl
jecxz
pop
jp
sbb
sub
mov
add
lods
loop
les
outsl
in
dec
insl
movsl
pop
sub
lret
popa
add
fcmove
fdiv
addb
aam
cwtl
je
hlt
cmp
and
jge
pop
xor
loopne
add
shll
fs
lods
mov
outsb
aad
pop
loopne
add
clc
add
aaa
fwait
repz
add
hlt
sbb
pop
es
lods
outsb
mov
fnsave
mov
imull
sbb
cld
fidivs
dec
pop
dec
add
add
mov
inc
adc
mov
jle
xchg
in
and
push
sbb
mov
js
jle
cmc
inc
add
icebp
xlat
adc
mov
jo
ds
arpl
adc
push
hlt
add
cs
sub
loopne
add
xchg
fsubs
lea
subb
inc
cmp
dec
add
cwtl
mov
mov
mov
and
decl
jne
ret
neg
sub
popf
xor
out
add
jge
dec
add
js
shrb
adc
clc
cmp
mov
test
mov
cmpb
add
inc
out
adc
pop
add
neg
xor
cmp
dec
jg
cmp
adc
insl
jmp
imul
mov
mov
jno
jp
jbe
push
push
rcl
xchg
cli
cld
jl
cmc
das
fdivl
stos
jbe
pusha
popl
je
ja
add
sub
add
add
psrld
nop
jno
add
jo
jne
add
pop
add
jbe
repz
and
aaa
xchg
sub
out
je
mov
pusha
add
xchg
std
or
orl
push
sti
loope
jp
add
div
pop
test
push
mov
xor
ds
or
rclb
mov
lods
jnp
add
rolb
push
push
rorl
call
rol
and
insl
pop
pop
iret
dec
cmp
push
movsb
mov
lds
imul
loop
fs
cmp
cmc
add
arpl
mov
scas
in
clc
cmpl
test
adc
aad
fs
arpl
into
aaa
rorl
cmp
lds
sbb
repnz
andb
inc
fistpl
pop
pushf
xor
lea
mov
jg
cwtl
in
nopl
pop
arpl
int3
icebp
add
mov
sub
fdivrl
lds
inc
jbe
fstl
adc
cwtl
hlt
add
andb
mov
imul
or
mov
mov
bound
push
nop
pusha
aas
add
pop
fstl
sub
mov
xchg
add
out
repnz
hlt
jo
insl
fstpt
sbb
ret
sbb
aad
xlat
and
pop
inc
push
inc
sbb
and
xchg
inc
scas
adc
and
xor
push
dec
pop
inc
sbb
dec
dec
xor
lcall
pop
adc
mov
or
inc
inc
sbb
int3
jne
add
lret
imul
add
cmp
mov
push
adc
jle
stos
and
sbb
or
enter
lcall
aad
inc
loopne
xor
add
cs
pop
gs
mov
popa
mov
or
sbb
mov
repnz
add
mov
inc
add
rcrb
movsl
clc
add
out
add
add
lds
add
roll
add
mov
push
mov
mov
rcr
cmp
adc
xchg
ss
add
mov
mov
adc
fcomp
xorb
jnp
pop
add
jb
or
mov
ljmp
mov
inc
roll
inc
mov
dec
fucomp
add
in
fsubp
add
fistl
mov
pop
pop
xchg
jbe
push
jns
push
mov
in
fisubrl
pushf
xor
fnstsw
pop
cli
stos
sub
ret
pop
int
add
jl
ret
rcl
adc
add
adc
add
inc
adc
add
sbb
test
bound
add
std
pop
inc
push
andl
jmp
js
out
jb
add
add
pop
insl
mov
add
fst
pop
out
ss
shrb
inc
mov
imul
sbb
call
cmp
pop
pop
mov
in
outsl
add
cmc
cltd
xchg
xchg
in
dec
or
mov
xchg
add
das
outsl
cmpsb
testl
pop
cwtl
lds
arpl
add
scas
inc
ret
xchg
add
pusha
or
add
push
dec
push
add
shl
add
xor
fcomps
cmp
and
and
pop
nop
push
sub
push
sbb
pop
push
jecxz
mov
add
pop
jl
pop
sbb
add
adc
mov
cld
push
testl
test
fsubp
repz
pop
ficoml
imul
lret
mov
and
faddl
das
cmp
adc
flds
les
into
or
cwtl
xchg
add
jmp
mov
orl
mov
fldl
scas
dec
mov
add
repnz
add
scas
loopne
ret
cs
cmp
bound
xorb
call
sub
cmc
xor
mov
sbb
repnz
sar
xor
int
hlt
out
ret
ret
dec
and
cltd
into
imul
inc
ret
add
xchg
ret
push
fisubrl
mov
adc
test
and
add
data16
fldt
and
js
ljmp
mov
lcall
popf
mov
out
push
add
add
imul
adcb
orl
inc
inc
push
dec
inc
add
icebp
add
aas
mov
xor
mov
push
push
call
js
add
les
add
pop
mov
filds
aam
sub
lret
xor
xchg
pusha
adc
pop
push
pushf
lock
and
add
jmp
jne
xor
cld
je
aaa
aad
stos
dec
xor
dec
imul
mov
cmpsb
push
pop
ret
push
push
xor
lea
sbb
and
or
repz
sub
cmp
add
ss
cs
and
add
dec
adc
ret
jmp
jle
cmp
lods
mov
call
iret
aas
pop
adc
push
mov
in
and
add
xor
nop
adc
idivl
cs
clc
cmp
inc
and
or
add
imul
adc
pop
nop
adc
repz
test
fisttpl
sbb
fwait
lea
out
mov
mov
lcall
mov
popf
or
fmul
push
add
mov
mov
movsb
pop
shll
push
lahf
loopne
jecxz
pop
or
stos
daa
mov
ss
sbb
jno
es
fs
jns
push
adc
push
adc
cld
test
mov
adc
imul
push
mov
or
rcl
pop
fldenv
jbe
add
mov
lret
or
mov
push
add
loop
cwtl
push
or
dec
les
push
icebp
repnz
test
lcall
inc
das
aaa
loop,pt
sbb
scas
and
aas
cmpsb
mov
pop
int
mov
pop
push
in
arpl
rolb
fcompl
jmp
icebp
jo
out
int
add
sub
push
icebp
pop
dec
pusha
fdivrl
mov
cmp
or
dec
pop
and
mov
shll
sbb
js
jge
decl
repz
leave
cltd
pop
xchg
test
es
inc
repnz
hlt
or
jo
mov
mov
jmp
dec
lock
rorb
sub
sbb
dec
loopne
pop
add
and
sub
fwait
push
adc
add
mov
rcrb
push
int
repnz
out
lock
jb
adc
xchg
rcll
adc
cmp
ret
sahf
cmp
rcrb
imul
add
ds
fdivs
xor
mov
dec
pop
add
adc
xchg
pop
sub
add
les
push
pop
add
shrl
int3
pop
idiv
cmp
sub
pop
icebp
ja
shl
add
adcl
adc
dec
mov
cld
fs
mov
jo
sub
fildll
aas
push
fdivs
add
pop
ret
dec
pop
lock
lea
xchg
and
std
jle
fs
add
push
les
stc
and
sub
mov
test
in
mov
or
mov
sti
enter
mov
in
xor
pusha
jg
push
adc
lcall
mov
jl
decb
sbb
or
lods
push
xchg
subb
mov
sub
cmp
enter
fisttpll
ds
pop
pop
test
mov
add
pop
pop
xor
data16
mov
xor
add
sub
inc
cmp
add
jge
lods
xchg
out
mov
loope
add
push
add
sub
stos
sub
dec
clc
add
and
pushf
add
jb
ss
pop
inc
mov
add
ljmp
add
aad
es
and
mov
popf
or
sub
faddl
pop
aas
addr16
aam
dec
and
roll
push
xchg
sarl
test
add
dec
into
in
leave
xor
add
rcll
dec
sbb
sbb
xchg
aad
add
sbb
std
add
sbb
add
adc
popf
sub
sti
dec
inc
push
sarl
push
add
add
pop
enter
stos
xlat
ja
nop
movsb
pop
in
rcl
and
push
add
jnp
push
shl
xchg
stos
mov
add
mov
stos
inc
in
add
mov
pop
xlat
in
sbb
flds
andb
xor
incl
aaa
or
push
jecxz
pop
xor
push
jle
add
jbe
xchg
mov
adc
mov
jno
push
sahf
dec
fwait
rcrb
jecxz
add
push
in
push
fsubrs
mov
or
adc
repnz
aam
mov
jo
xor
pop
dec
xchg
adc
jmp
add
mov
xchg
or
fisttps
dec
fucom
pop
arpl
das
cmpsb
push
call
mov
test
cmp
inc
repnz
dec
push
fists
fsubl
pop
jg
push
xor
inc
mov
jge
pop
add
sbb
xor
fsubrs
sarb
dec
addr16
loopne
shr
scas
dec
add
in
popa
leave
add
push
xchg
sti
popaw
out
jg
dec
movsl
add
loope
mov
and
add
sbb
or
jle
sub
fdivrs
jmp
xor
inc
jb
cs
insb
add
stos
arpl
mov
or
aam
fwait
add
jbe
lahf
test
sub
es
add
cmp
repz
add
mov
dec
icebp
add
imul
add
inc
mov
ds
pop
movsb
cmc
stos
add
or
inc
nop
nop
lcall
mov
pusha
sub
mov
jmp
andb
faddl
mov
std
cmp
push
add
ds
or
or
fmuls
je
push
pushf
xchg
lock
jg
stc
inc
and
out
cld
mov
and
mov
push
std
out
cmp
or
shll
push
lock
xchg
jp
pop
lock
data16
inc
or
sar
hlt
xorb
cmp
add
sahf
push
lods
dec
in
ret
mov
sub
lods
or
imul
inc
add
aas
mov
mov
testl
push
mov
sub
sbb
or
shlb
call
cmp
inc
xor
or
fldenv
mov
sahf
mov
jae
aam
test
mov
mov
sub
push
repnz
add
lgs
add
orb
icebp
flds
movsl
cmp
mov
int
pop
jne
rorl
jge
rorb
es
lods
add
inc
sysexit
mov
adc
add
adc
inc
cmpsb
insl
flds
push
jecxz
ficoms
add
daa
sub
out
push
loopne
stos
add
push
xchg
add
pop
xchg
or
adc
rcrb
lea
icebp
hlt
jle
loope
pop
stos
ds
push
into
add
jno
lods
push
inc
icebp
adc
loope
add
daa
ljmp
xlat
lret
push
mov
add
fidivl
mov
fldl
or
lods
sub
and
icebp
movsb
xor
or
pop
mov
orl
and
push
push
jle
push
fucomp
xor
adc
xchg
or
adc
leave
sbb
mov
les
add
pop
or
adc
cmp
pop
call
push
aam
testb
jl
jg
pop
lds
pop
xchg
xchg
pop
add
imul
push
jmp
les
dec
in
fistpl
enter
or
test
adc
push
xchg
mov
add
test
loop
adcb
pop
iret
in
ficoms
sarb
leave
push
inc
sbb
lods
popa
xor
mov
add
or
mov
leave
cmc
sar
mov
je
stos
movsl
dec
add
shr
movsb
and
pop
enter
jne
ret
imul
stos
and
add
sbbl
orb
mov
pop
lahf
mov
inc
loop
lret
jp
inc
lods
hlt
add
pop
inc
add
xchg
cmpsb
push
mov
xor
push
fisttpl
loop
push
add
mov
mov
pusha
popf
or
bnd
lock
sub
xchg
xor
mov
sbb
mov
cwtl
add
jge
mov
movhps
repnz
xor
out
jg
add
mov
aam
les
scas
jbe
add
xchg
mov
sub
pop
addr16
adc
pushf
or
popa
inc
adc
push
add
ret
stos
mov
aaa
sub
pop
sub
sbb
js
push
mov
jle
push
outsb
sbb
mov
notl
faddl
movsb
add
sahf
jecxz
rolb
mov
scas
xchg
imul
jnp
or
pop
lock
mov
inc
js
or
xchg
les
jmp
inc
inc
push
xchg
roll
cmp
cmp
int
bswap
std
xchg
push
sti
ret
mov
add
stc
imul
push
loope
or
add
loopne
add
fdivrs
add
lret
pop
rol
pop
dec
and
sbb
add
mov
faddl
rorb
int3
nop
pop
add
xlat
outsl
testb
mov
add
sub
add
outsl
add
in
stos
and
fldenv
mov
lret
test
xor
sti
popa
testl
add
xchg
sub
arpl
gs
lods
mov
test
dec
jg
and
mov
or
pop
fdivs
dec
mov
mov
inc
lret
inc
mov
loope
ds
xor
mov
popf
jecxz
xorl
pusha
xchg
div
mov
out
mov
fcompl
or
orb
add
dec
out
xor
add
mov
inc
xor
test
push
cld
push
and
mov
cs
jg
add
call
cwtl
cs
cmovle
xor
test
push
outsl
add
mov
bound
loop
add
cmp
mov
adc
add
shl
add
shlb
in
push
in
or
xchg
xor
xlat
cwtl
lret
pop
ljmp
dec
cmpsb
enter
mov
loopne
icebp
add
bound
jecxz
fists
out
js
add
pusha
ret
sub
pop
dec
dec
scas
nop
sub
pop
and
cli
faddp
cwtl
movsl
add
icebp
sub
sub
mov
and
cmp
inc
push
mov
lock
jo
cmpsl
imul
ret
and
mov
push
add
or
out
rorl
mov
cmpsb
push
cwtl
jno
mov
test
dec
ds
mov
mov
mov
sub
sti
pop
push
dec
nop
pusha
jnp
aas
sub
add
xor
imul
mov
adc
rclb
hlt
mov
dec
mov
fsubl
jge
je
in
jp
add
mov
push
dec
out
add
xor
mov
loope
xchg
les
xor
push
xor
or
aam
dec
xor
imulb
outsb
or
xor
dec
or
add
aas
add
int3
dec
nop
xchg
and
in
add
cmc
cmp
ret
inc
inc
fidivrl
mov
cmp
das
into
jo
cmp
mov
aas
add
cmpsl
sub
pop
push
movsb
mov
es
pop
or
ret
movsl
rolb
inc
aam
jecxz
out
loope
lock
pop
xchg
xchg
popf
sub
xor
repnz
add
jbe
adc
cmp
pop
push
xchg
sbb
and
test
xchg
jl
mov
adcl
pop
or
shl
mov
pop
jae
lds
xor
adc
movsb
insb
add
cld
and
push
jl
and
jmp
movsl
jecxz
hlt
rcrb
in
rclb
mov
xchg
dec
or
mov
add
sub
ss
mov
sbb
cmpsb
inc
addl
sub
rolb
mov
ja
cld
sub
jmp
sti
dec
add
dec
js
cmp
testb
xor
jae
dec
jle
and
mov
pop
lret
sub
sahf
inc
addr16
add
jae
movl
xor
mov
and
leave
jns
in
rolb
xchg
or
cmp
xchg
mov
add
shll
add
add
jbe
and
data16
cli
pop
add
sbb
daa
add
mov
jge
andl
int3
push
aam
xchg
mov
ret
jg
jnp
rclb
nop
xor
xchg
inc
and
dec
xchg
xchg
and
mov
adc
jb
ljmp
pushf
pop
test
insl
test
cmc
aaa
leave
sarb
or
sub
mov
add
test
and
dec
aaa
enter
inc
stc
stos
pop
mov
in
sub
in
or
lcall
adc
sbb
test
pop
dec
adc
add
outsb
add
add
pop
and
jmp
pop
lods
pusha
mov
add
xchg
xor
jno
jmp
orl
cwtl
inc
add
or
cmc
rclb
aam
out
sbb
xor
outsl
sbb
sti
cmp
inc
jne
add
ret
outsb
addb
loop
mov
sbb
and
pop
mov
cmp
xchg
loop
in
add
arpl
add
push
push
nop
pop
cmp
add
dec
xor
sbb
push
setge
rcll
mov
jo
add
bound
call
mov
nop
adc
insl
pop
inc
addb
pop
add
int
add
push
call
push
jno
jl
push
sub
jp
ret
leave
call
sbb
mov
rcrl
sub
loop
fs
mov
push
mov
into
pop
mov
rorl
pop
dec
call
or
add
xor
sub
add
sbb
jecxz
ret
add
adc
cmp
add
or
rorl
jle
add
dec
test
daa
movsb
fidivl
int3
nop
rorb
les
subb
mov
mov
xorb
mov
jecxz
add
jns
ljmp
gs
mov
je
fsubl
add
addb
andl
imul
sbb
dec
repz
mov
loopne
jne
add
pop
push
jnp
mov
pop
push
nop
shll
fistps
sub
or
add
cld
in
fmul
add
dec
andl
dec
shr
out
adc
daa
mov
dec
test
or
add
dec
mov
fsubrl
ljmp
jno
dec
cmp
add
inc
jmp
push
inc
rolb
stos
sbb
jle
mov
lock
cwtl
cmp
jmp
add
fistpl
fisubl
pusha
ds
xchg
nop
mov
inc
loop
loopne
pop
inc
and
addl
notl
xor
out
pop
lret
add
loope
clc
cmpsl
add
push
fsts
out
dec
jp
and
pop
loop
xorb
add
fildll
add
dec
fnstenv
fwait
lods
adc
lcall
xchg
lock
inc
fs
sbb
mov
pop
adc
flds
movsl
mov
add
sub
push
add
inc
or
adc
jle
mov
movsl
push
sub
xor
rolb
les
xchg
vpshuflw
ret
in
fimull
jne
test
sbb
cli
cmp
lods
add
cli
add
mov
pop
sub
out
add
sub
pop
mov
sbb
pop
int3
xchg
mov
icebp
add
lea
jbe
mov
xor
push
dec
fs
jle
inc
xchg
push
sub
jae
sbb
push
pusha
sbb
negb
fisubl
out
in
inc
popa
lds
imul
or
shl
int3
mov
jo
mov
inc
in
ss
loopne
add
shrl
jo
loope
dec
negl
pop
dec
or
shl
xchg
cmp
add
shlb
mov
data16
pop
out
mov
pop
mov
int
push
xchg
mov
mov
jbe
add
lcall
push
insb
or
add
xor
xor
ficoml
in
mov
in
mov
add
cmp
jns
lods
push
roll
arpl
inc
ss
roll
or
cmp
and
mov
repz
add
sbb
add
aaa
dec
or
test
cmp
fmuls
add
pop
ljmp
jge
add
into
sbbb
outsb
push
xchg
mov
pop
add
fwait
hlt
inc
add
pop
ret
mov
push
xchg
std
inc
add
loope
loopne
sbb
cmc
sar
sbb
push
inc
pop
test
or
add
jl
popa
or
std
add
sti
mov
cltd
loopne
add
shl
add
inc
mov
add
xor
dec
add
xchg
adc
mov
pop
push
add
rolb
jno
xor
dec
add
push
xor
add
or
fistl
add
jnp
lock
mov
sbb
add
dec
cld
popf
or
add
mov
pop
adc
scas
in
testl
xchg
cmp
mov
add
push
add
adc
push
ret
push
add
rclb
lret
mov
mov
cltd
jecxz
add
add
ret
in
test
sub
push
and
lcall
and
mov
mov
inc
movl
and
mov
sbb
dec
pop
testl
adc
push
add
push
cmove
clc
aad
xchg
or
xchg
add
jmp
dec
mov
andb
pop
xor
dec
cmc
add
insb
repnz
mov
inc
xor
lds
in
jge
jle
sub
stc
hlt
push
orl
cmc
and
pushf
pop
cmp
daa
mov
mov
add
mov
cmp
std
aaa
xor
cmp
movsb
cli
dec
jb
push
push
loop
shrb
pusha
les
das
add
stos
dec
popa
push
push
cwtl
mov
out
sti
mov
int
push
add
ljmp
pop
jg
cwtl
sub
mov
add
xor
adc
bound
jb
add
mov
dec
jnp
mov
lods
mov
addl
ja
add
jae
test
jns
lret
and
jmp
add
lods
mov
xor
leave
stos
js
add
fwait
adc
push
add
scas
pop
sahf
sbb
test
sub
xchg
push
imul
lods
in
push
mov
pop
es
pusha
add
daa
insb
and
add
jmp
xlat
movsl
ljmp
add
add
add
inc
or
add
mov
fmuls
lods
mov
dec
xchg
jb
movsl
in
aas
outsb
push
jge
rorl
sar
jne
add
sar
inc
cmpsl
aad
adc
dec
scas
lock
mov
jno
jae
mov
xchg
cmp
movsl
add
xor
xor
jnp
sbb
fisttpll
cmp
adc
add
jmp
pop
aam
mov
je
and
sbb
jne
add
test
or
in
mov
dec
rorb
movl
stos
xchg
xor
add
fidivs
mov
lret
inc
jmp
sbb
out
mov
add
repnz
adc
lods
or
mov
push
mov
in
fildl
pop
xor
pop
clc
or
pop
inc
pop
pop
dec
in
push
lahf
ds
in
clc
flds
sbb
mov
adc
adc
dec
add
or
leave
ja
push
adc
les
shlb
cwtl
add
in
jnp
sub
testb
or
inc
lock
add
xchg
pushl
call
insl
inc
xor
andb
xor
mov
push
add
fstps
pusha
add
xchg
out
push
and
data16
jb
add
add
mov
enter
std
bswap
sti
int3
add
xlat
call
mov
xor
push
mov
or
mov
xchg
nop
push
test
or
jle
add
push
mov
jns
nop
adc
jb
jnp
das
sbb
add
stos
and
jmp
mov
test
gs
jl
and
decb
or
xchg
pop
sbb
fidivl
les
lods
pop
inc
add
push
pop
test
inc
or
adc
adcl
pop
adc
jnp
inc
in
mov
add
ds
pop
subl
add
mov
mov
pusha
mov
jp
mov
outsl
jmp
push
pop
in
sbb
arpl
gs
scas
jae
dec
rolb
or
push
in
jp
add
sarb
add
xchg
mov
lock
add
cli
lcall
mov
xchg
lret
addb
lock
or
loop
jg
adc
std
out
cltd
add
add
mov
sub
cmpl
mov
icebp
push
mov
pop
mov
pop
hlt
xor
add
test
ltr
mov
sbb
insb
sbb
pop
cmp
cmp
lea
sbb
sub
out
test
push
test
inc
jnp
faddl
lea
mov
mov
pop
xor
xchg
pop
push
ret
cwtl
cs
adc
or
mov
jmp
pop
ffree
rclb
add
lea
hlt
jp
mov
aas
cmpsl
ffree
fsubrs
cmp
in
add
orb
jbe
jnp
fstp
mov
xchg
cltd
pop
sub
bound
repnz
dec
pusha
push
dec
mov
data16
add
add
or
sbb
and
pop
sub
cwtl
jecxz
xchg
testb
negl
cmp
insb
add
or
xchg
add
xor
add
pop
fst
movsb
insl
push
lock
addb
xchg
pop
or
fists
loopne
jg
jle
movsb
mov
push
stc
xchg
cwtl
js
add
rcll
shl
sahf
outsl
push
movaps
add
subl
dec
mov
add
pop
push
in
in
add
mov
mov
inc
push
xchg
mov
add
fisttps
lds
mov
dec
xchg
mov
insb
push
sbb
xorb
adc
xorl
ja
cltd
sbb
imul
jle
je
add
push
addr16
hlt
sar
jae
pop
out
leave
add
xor
dec
ljmp
cmpb
stos
push
add
test
and
jns
jo
aas
pop
cwtl
rcr
mov
add
divl
lods
adc
push
pusha
add
ja
hlt
std
out
jp
jmp
mov
lcall
push
dec
jne
std
stc
icebp
dec
add
addr16
adc
xchg
jg
subl
cmp
or
mov
or
scas
iret
sbbb
lock
adcl
mov
cmp
pop
sbb
dec
xchg
andb
ret
adc
sub
sti
add
cmpsl
add
push
pop
test
xor
or
insl
stc
sbbb
xchg
xchg
loopne
addb
test
out
sbb
dec
add
mov
jecxz
call
push
dec
push
add
test
add
mov
adc
pushf
mov
xlat
adc
ja
add
jns
sub
jb
add
lods
divb
pop
add
cmp
cmp
push
mov
ret
subb
mov
mul
insl
add
out
add
dec
add
loop
outsb
mov
add
jge
mov
push
jmp
insl
rclb
loope
jne
fadd
fnstsw
addb
lcall
fcmovbe
mov
inc
lock
cmp
add
push
dec
sbb
cmp
pop
jb
jne
jp
xchg
pop
arpl
les
xor
or
fisubl
jo
lock
out
push
movsb
sub
cmpsb
add
test
add
stos
mov
movb
enter
or
cmpl
ljmp
loopne
clc
pop
sbb
dec
in
hlt
xor
or
into
mov
sub
cld
test
mov
fisttpll
fistpll
cmc
rcl
lcall
jnp
jecxz
leave
testl
add
dec
adc
jns
dec
cmp
mov
popa
pop
jmp
ret
inc
sbb
enter
int3
mov
adc
popa
or
nop
and
push
add
arpl
orl
addr16
and
je
cmp
mov
aam
sub
aam
push
add
push
ds
pop
mov
add
ret
xor
mov
in
mul
clc
movsl
rolb
mov
sub
sbb
pop
jb
add
loop
in
sub
inc
xchg
sbb
pop
add
js
lret
ret
das
nop
or
mov
orb
movsb
add
lock
addb
jge
lods
movsl
pop
mov
aam
mov
or
fnstcw
addr16
popf
lds
sbb
lcall
data16
add
pop
mov
sbb
jb
addr16
inc
push
imul
push
es
pusha
add
in
test
or
xor
cmp
mov
fidivl
jo
and
pop
add
push
add
in
aad
add
lods
into
subb
les
xorl
inc
mov
and
mov
mov
push
push
sbb
pop
xor
outsb
xchg
add
dec
lock
popf
pop
inc
testb
nop
dec
pop
push
sbb
or
ret
mov
and
sub
ficoml
mov
in
xchg
and
clc
in
sbb
aam
push
mov
jp
jno
mov
xchg
sub
jmp
inc
jne
xor
pop
outsl
xor
or
outsb
add
jge
jg
fdivrs
aas
add
xchg
lret
ss
cmpsl
add
jo
ds
ret
add
popf
rorb
add
aam
lds
pop
and
add
adc
push
pop
jl
dec
les
xchg
inc
jge
push
dec
stos
and
lahf
add
push
jno
adc
cmp
cmp
sbbl
add
sub
mov
mov
movsl
mov
add
mov
cmp
aas
add
jb
rcrl
adc
cmc
inc
pop
fwait
add
pop
mov
or
daa
inc
mov
test
sbb
add
push
fiaddl
into
sub
je
test
mov
ret
lret
xchg
push
or
ds
clc
add
enter
mov
addr16
adc
test
test
sub
sbb
jnp
add
ljmp
repz
cld
imul
movsl
mov
into
add
fstpt
push
icebp
add
sbb
jecxz
add
add
ljmp
psrld
in
cmpsb
inc
add
enter
dec
add
into
pop
outsl
and
jne
loopne
or
lret
ja
pop
loope
in
cmp
imul
insl
push
rcll
dec
movsl
xor
push
jle
add
int3
cmp
add
test
sbb
aad
addr16
sbb
das
push
out
sbb
lods
daa
push
xchg
dec
add
pushf
call
sub
xchg
test
push
not
ja
add
xchg
jo
jne
mov
add
pop
mov
cld
gs
mull
pop
loop
push
xchg
mov
ret
insl
add
push
ljmp
mov
out
pop
js
fmulp
filds
nop
cwtl
mov
xchg
or
and
pop
sbb
push
sbb
pop
mov
cmp
inc
pop
cmp
mov
out
mov
pop
add
xchg
sbb
cltd
lcall
xor
mov
sti
pop
dec
pop
popa
ret
push
add
lret
dec
add
popf
cmp
aas
push
or
mov
iret
xchg
inc
add
cmp
xchg
mov
lcall
add
frstor
sub
cld
leave
rorl
mov
add
not
mov
sub
inc
pop
mov
enter
ficompl
subb
fisubs
shll
rclb
loope
flds
sub
ret
jmp
sbb
adc
jo
xor
in
xor
in
arpl
out
jmp
ret
adc
xchg
fs
xchg
orb
jg
cmp
add
inc
jae
push
sub
or
sbb
in
pop
sbb
cltd
repz
add
xor
xchg
das
enter
mov
rclb
adc
cli
nop
shrb
popf
add
mov
rclb
mov
sbb
sbb
mov
add
or
into
pushf
push
dec
negb
fcoml
pop
outsl
push
and
and
int
out
sarb
xchg
stc
lock
add
ret
popa
dec
cmp
popl
ret
into
lock
sahf
imul
rolb
int
or
mov
stos
mov
xor
xor
fsubl
cltd
mov
add
adc
mov
cli
mov
bnd
add
pcmpgtd
add
push
and
enter
popa
adc
and
jno
push
xor
sahf
cli
xor
inc
xchg
push
aam
sbb
jmp
sbb
ja
shl
daa
push
adc
stc
jle
scas
aas
rclb
cmp
jnp
js
shll
dec
add
fistps
adc
lods
mov
lahf
cmp
ljmp
and
or
call
adc
addr16
adc
dec
fsubp
test
int3
sub
mov
out
xor
lock
repz
inc
jo
add
mov
sbb
test
xor
push
in
out
sub
divl
fadd
jnp
cmp
rolb
stos
in
pop
in
add
jo
inc
stc
adc
add
call
mov
xor
xchg
add
fisubrl
or
add
push
nop
dec
jb
jg
push
repnz
xor
andb
push
cli
xor
adc
dec
xchg
pusha
lods
cmp
inc
or
loop
dec
push
mov
lock
rcrl
mov
adc
lahf
mov
xchg
sbb
mov
mov
and
dec
mov
rorb
xchg
ljmp
inc
push
mov
sbb
lahf
sbb
stos
mov
pushf
test
enter
mov
in
mov
das
je
lods
popa
test
addr16
inc
pop
in
add
loope
xchg
dec
subl
faddl
sbb
jle
mov
insl
repnz
js
or
xchg
fistl
jmp
mov
and
cwtl
add
xor
cmp
xchg
enter
adc
cld
ss
dec
xor
std
add
jo
nop
cli
or
mov
add
sbb
popa
adc
add
xchg
adc
push
test
cmpsl
hlt
push
xor
mov
mov
shll
mov
sub
jns
and
add
and
xor
adc
and
add
cmpsb
ljmp
clc
add
test
loopne
jp
pop
sbb
mov
add
lahf
xchg
xchg
popf
imul
fisttpll
push
rcrl
push
add
rcr
popf
in
cmp
int3
dec
inc
adc
call
jns
jae
dec
clc
fs
add
jnp
mov
jbe
cmp
cwtl
sub
mov
dec
shlb
or
fldenv
mov
add
xchg
add
ljmp
test
fiaddl
cmp
sub
cwtl
ror
sbb
xor
sbb
sbb
insl
je
dec
mov
call
sbb
je
nop
outsl
in
inc
xchg
xor
nop
cmp
push
cmp
cs
sbbl
xchg
adc
and
add
inc
repnz
sbb
mov
rcrl
dec
dec
adc
add
mov
in
faddl
lcall
imul
iret
leave
jmp
rorl
pop
cltd
jne
xchg
outsb
in
sub
mov
out
shlb
add
dec
imul
pop
mov
xchg
jbe
xchg
rorl
sbb
pop
lret
mov
hlt
jge
lock
icebp
xchg
jns
cmp
add
rcrl
add
std
lcall
mov
cld
stos
jg
or
cli
movsb
add
sbb
mov
rol
cmp
out
std
or
or
sahf
push
xchg
adcb
dec
dec
add
pop
fsub
decl
repz
sarl
push
jle
mov
dec
frstor
add
std
aas
fadds
jge
xchg
add
cmp
pop
sbb
popa
repz
mov
xchg
dec
insb
jbe
sbb
pop
les
sar
lret
vaddsubpd
in
enter
loop
mov
inc
mov
add
insl
cs
add
push
inc
popl
loopne
fcom
xor
xor
add
cs
mov
aaa
cmp
xchg
or
fldcw
push
add
sbb
sub
sbb
sbb
testb
clc
adc
fsubrl
pusha
jne
add
jae
mov
push
testl
push
push
nop
ret
outsl
cltd
push
add
jp
jb
push
sub
jecxz
xchg
movsl
mov
lock
std
and
jge
test
int
test
cmp
cltd
int3
or
xchg
pop
popf
cmp
sbb
rcl
aam
mov
sub
xchg
int
ss
rclb
movsl
sbb
or
and
add
pop
cmp
push
fidivl
push
mov
xor
into
mov
popf
inc
push
lods
mov
pusha
les
xchg
stos
or
add
into
sub
loop
xor
sub
cmp
adc
les
test
add
pop
mov
push
add
int3
mov
cmp
sbbb
inc
add
sub
bound
rolb
push
aas
sbb
icebp
lret
mov
pop
ds
rcrb
js
add
push
inc
mov
and
cs
sti
add
adc
lcall
mov
add
loopne
and
mov
test
rcrl
mov
jl
sarl
pop
cmp
dec
ss
xchg
inc
add
gs
push
mov
mov
inc
pop
sub
push
pop
icebp
add
jne
stos
sbb
loopne
in
or
adc
cmpsl
adcb
jle
cmpsb
fcomps
mov
lods
in
inc
enter
add
sbb
adc
ficoml
hlt
ljmp
or
inc
mov
iret
pop
sahf
inc
or
pop
cltd
idiv
mov
pop
add
push
pop
sub
movq
adc
inc
inc
cld
hlt
push
xchg
add
xchg
shll
rorl
loope
sbb
add
push
lods
lahf
jns
cld
loop
je
sbb
rcrl
enter
loopne
js
andb
add
pop
pop
xor
mov
xor
mov
dec
add
sbb
mov
add
xchg
pop
or
sbb
rcrb
mov
movsl
testl
outsb
iret
add
push
das
push
dec
xchg
popa
add
imul
xor
mov
cmp
neg
push
icebp
xor
adc
sbb
xor
sub
mov
push
cmpsb
add
lea
add
mov
add
daa
mov
inc
lds
xor
xchg
sbb
add
xor
ljmp
cmpsb
into
or
sti
add
push
adc
add
adc
dec
push
in
xchg
add
add
mov
fdivs
cwtl
cld
loop
jns
popa
push
ror
iret
sbb
pusha
std
add
jg
and
addr16
mov
lock
cmp
cmp
or
pop
xchg
pop
jg
int
fbld
pop
mov
sub
mov
cld
xchg
sbb
add
test
rcrb
addr16
push
hlt
add
das
cs
add
mov
add
push
xorb
into
fdivl
pop
mov
jmp
add
ss
sub
push
cltd
cmp
icebp
ficomps
add
outsl
push
lods
adc
mov
pop
or
cmp
cmpsl
add
loope
inc
fs
xor
push
push
add
jmp
adc
inc
insl
xorb
sub
hlt
nop
out
add
daa
inc
decl
mov
sbb
pop
pop
mov
ret
xchg
sbb
push
fdivs
dec
add
aad
ficompl
adc
cmp
jns
imul
xor
nop
fldl
cld
sbb
sbb
nop
cmpsb
cmp
mov
mov
jae
push
test
xor
lock
sahf
mov
add
mov
aam
nop
add
pusha
nop
hlt
movsl
add
mov
sti
dec
pop
sahf
faddl
aas
in
cmpsl
in
mov
popa
add
push
dec
lcall
lret
mov
adc
ret
inc
arpl
aas
mov
inc
stc
fdivrl
fbstp
add
push
push
sub
inc
or
dec
sub
xor
and
xchg
sbb
adcb
mov
gs
adc
rorb
adcb
add
sub
add
aas
jae
push
mov
inc
shll
jno
inc
nop
mov
mov
fdivrs
stos
outsl
icebp
mov
fchs
adc
pop
aaa
sar
cli
adc
dec
add
mov
sbb
dec
test
inc
push
int
xchg
shlb
add
loope
cltd
cmp
ja
sub
add
js
mov
mov
adc
push
add
mov
je
cvtpi2ps
bound
mov
cwtl
push
test
testl
add
mov
xor
mov
test
sub
inc
and
je
cmp
out
lods
add
pop
jg
add
jge
add
in
aad
sbb
fldcw
jbe
adc
ror
les
movsb
andl
pop
in
add
add
loop
incb
out
dec
inc
aas
enter
cmp
sub
adc
rclb
pushf
push
out
sbbl
cld
push
and
popf
add
mov
cmp
lret
xorb
xchg
hlt
push
icebp
dec
mov
subl
ds
lret
sbb
jle
sahf
mov
daa
dec
in
pop
mov
xchg
mov
imul
mov
cwtl
sub
test
data16
sbbb
add
sub
fcomps
xchg
mov
mov
cmc
aas
add
pop
xor
inc
jbe
add
inc
fistpl
fisubrl
jnp
inc
add
xchg
add
xor
sti
xor
add
inc
ficomps
sub
push
mov
andl
leave
add
std
adc
pop
gs
mov
in
mov
push
mov
mov
and
and
add
pop
sbb
jl
pushf
xchg
jns
add
pop
xchg
cli
dec
jo
add
loop
jp
daa
stc
fs
mov
xor
cmp
fs
add
sub
pushf
inc
mov
push
xorb
incl
or
mov
mov
loop
nop
push
aam
adc
mov
pusha
and
xchg
push
add
jo
fmuls
arpl
push
xchg
mov
jmp
loopne
pusha
in
les
add
test
inc
add
fiaddl
add
nop
mov
fisttps
stos
add
or
xchg
inc
insb
cmp
jae
mov
add
xor
es
mov
popf
iret
pusha
add
pop
leave
push
xchg
add
or
xor
mov
je
sub
sbb
js
ss
lcall
cmp
pop
and
loopne
lock
insb
xor
pop
mov
loopne
rolb
push
mov
sub
in
cmp
sti
je
push
jb
add
sbb
mov
dec
xchg
xor
scas
add
pop
inc
cmp
jg
add
loop
add
dec
jmp
jne
dec
jnp
iret
lret
jb
inc
add
mov
cmp
sbbb
push
rorl
or
fcoms
jno
jge
pop
test
leave
add
sbb
push
and
mov
or
cmp
xchg
mov
aad
insb
push
xchg
mov
push
fwait
jno
mov
icebp
push
shrb
add
xor
rcrb
sarb
dec
xor
es
or
sbb
aad
enter
sub
add
das
pop
or
jbe
xor
into
test
emms
out
cmpsl
shlb
jle
leave
add
sub
add
outsl
and
sti
sbb
and
cmp
int3
or
lret
jg
add
test
pusha
inc
mov
add
xchg
inc
js
dec
mov
add
adc
xchg
repz
push
and
xchg
xor
stos
ljmp
cmp
xchg
add
sbb
and
inc
cmpsb
or
inc
adc
add
cmp
int3
out
add
cld
test
iret
xchg
addr16
fisttpll
mov
jnp
pop
push
jg
inc
cmc
pushf
xorl
dec
jp
push
mov
or
mov
xor
test
sbb
insb
or
repnz
enter
mov
mov
sub
sbb
inc
leave
sbb
sbb
mov
lret
es
lea
insb
fimull
sahf
call
and
out
sti
jns
add
ficompl
mov
inc
rolb
movsl
mov
in
dec
icebp
add
cmc
jl
xor
mov
ljmp
enter
add
add
aas
or
data16
mov
inc
add
lea
movsb
in
sbb
pop
cmp
fimull
or
aad
add
sub
arpl
push
mov
mov
inc
stc
inc
test
std
adc
add
pop
mov
cs
repnz
ret
mov
sarb
sub
addr16
dec
roll
sbb
loope
in
add
out
and
mov
sbb
fldl
push
inc
loopne
pop
xchg
xor
dec
shlb
mov
pop
add
fs
pusha
loopne
in
add
bsf
or
pusha
jmp
leave
test
in
sub
sarl
xchg
and
xor
js
mov
ss
mov
cmpsb
sbb
push
cmp
sub
push
pop
mov
mov
mov
aam
jle
add
and
int3
out
add
mov
in
popf
loopne
sbb
add
add
mov
imul
cmpb
ds
adc
add
int
mov
sbb
lods
aam
inc
pop
in
sub
adc
or
nop
xor
ret
insb
lods
push
stos
cmp
and
add
xchg
inc
cwtl
sarl
pushf
xorb
aad
lcall
cli
out
popf
icebp
dec
fadds
mov
jno
xor
pop
je
add
push
movsl
inc
in
jecxz
mov
rcr
test
shrb
mov
out
add
das
dec
ret
xor
add
dec
loopne
shlb
mov
insl
cld
push
adc
xchg
add
adc
xchg
and
or
sti
fildl
pusha
add
adc
lcall
adc
mov
fadds
xchg
loope
lcall
add
lock
cmpsb
add
xor
mov
mov
mov
call
add
syscall
dec
rcl
mov
pop
andl
xchg
fadd
mov
lock
mov
repnz
inc
pop
in
and
or
rorb
dec
mull
add
int
clc
push
mov
sbb
adc
in
jl
and
add
mov
push
lcall
jle
cmpb
inc
ret
jo
repnz
in
push
mov
out
mov
add
cmp
pop
add
jns
sbb
mov
pop
cmp
ljmp
push
sub
out
push
loopne
test
fs
add
loop
stc
sub
mov
mov
testb
sbb
and
mov
mov
add
mov
ja
aad
stc
in
add
inc
iret
sub
push
inc
out
sbb
das
inc
loopne
dec
aas
mov
add
sahf
fclex
pop
sub
jb,pt
xorb
int3
pop
adc
mov
dec
out
enter
cmp
clc
add
jno
push
test
std
addl
mov
in
pop
jge
cmp
repnz
jge
jl
add
inc
xor
pop
rorl
imul
clc
dec
add
mov
lret
sti
push
sbb
sbb
sbb
xor
cmp
adc
lcall
aas
mov
les
lahf
add
nop
push
or
mov
jl
shll
add
call
add
orb
sub
mov
movsl
dec
cmpsl
add
xor
mov
out
inc
enter
imul
dec
lock
rolb
inc
mov
mov
mov
ficoms
sbb
add
or
insb
popf
daa
adc
dec
fcompl
jae
xchg
clc
mov
nop
xor
and
in
pop
icebp
into
ja
push
jae
add
lea
add
inc
subb
inc
push
add
xor
dec
add
int
add
push
pushf
xor
inc
fcoml
jmp
nop
push
dec
mov
ficoms
popa
orl
push
repz
data16
push
ss
dec
ljmp
idivl
pop
outsb
add
add
push
add
fistpl
loopne
test
mov
mov
sub
mov
pop
push
imul
fs
add
dec
mov
add
dec
sub
pop
mov
add
lods
popa
add
add
ljmp
sahf
or
or
xor
dec
push
jl
xchg
add
popf
pop
or
mov
imul
sbb
add
inc
jo
sbb
push
daa
push
gs
add
jp
mov
add
push
out
or
and
fcom
adc
add
outsb
or
push
jl
pop
inc
xor
out
jg
push
push
insl
int
aam
fidivrl
push
lds
push
adc
orb
and
jb
or
or
fstp
mov
lods
sub
loope
sub
push
rcr
rol
pusha
fldcw
and
add
adc
iret
xchg
mov
movsl
data16
jecxz
jo
inc
faddl
or
js
jp
cmp
and
xchg
inc
xor
pusha
inc
mov
xor
js
sar
cmpsb
ljmp
xor
sarl
mov
andb
add
movsb
mov
clc
lahf
dec
in
fsubrs
xor
jmp
hlt
sar
shlb
add
sub
rolb
sti
adc
sbb
lock
dec
pop
int
sub
pavgb
je
add
cmp
mov
sub
sbbl
sub
push
sbb
shlb
mov
pop
push
sbb
sbb
loope
pop
add
and
ds
adcb
mov
add
mov
lret
inc
push
arpl
ds
loopne
dec
mov
pushf
loop
inc
popa
inc
push
ret
js
adc
test
shlb
fists
xchg
dec
rolb
clc
xchg
cmp
gs
adc
rcll
addr16
pop
lahf
sarb
stc
push
dec
pop
mov
xchg
add
and
fadds
dec
loope
add
cltd
call
fyl2x
sbb
std
xor
or
inc
adc
push
sub
jmp
aas
les
lds
and
test
ret
cmp
push
ss
jns
clc
cmp
sti
xor
adc
in
add
pop
dec
popf
and
inc
or
sub
sbb
pop
test
xor
inc
sub
mov
test
icebp
sub
mov
into
jbe
pushl
imul
mov
lret
das
add
je
add
or
add
push
cmpb
cld
pop
imul
out
addb
clc
shlb
lret
or
jae
ret
cmp
cld
notb
sbb
mov
add
jnp
mov
scas
sbb
dec
fcomps
rol
add
dec
xchg
movsl
addl
fsubr
adc
fcom
or
mov
insl
std
add
ret
jmp
pop
jp
add
lds
call
jl
mov
and
lret
fwait
dec
push
cmp
cmp
mov
cmc
add
je
add
out
pop
fidivrs
push
imul
inc
inc
pusha
cld
adc
movsb
daa
sbb
mov
loop
enter
add
xor
add
xchg
xchg
sub
sbb
push
mov
repnz
dec
add
in
outsl
fwait
cmp
aad
add
sub
xor
cmovp
imul
pop
add
inc
nop
lcall
mov
sub
push
or
insl
popf
adc
flds
faddp
jg
dec
clc
xor
add
add
add
jecxz
push
mov
mov
push
push
cmp
mov
int
call
xchg
or
pusha
shll
add
sbb
and
mov
test
pop
sbb
aaa
popf
mov
call
inc
faddl
sbb
movb
scas
mov
cs
pop
and
xchg
push
mov
fdivrl
add
clc
inc
les
jmp
divl
inc
mov
inc
cmp
mov
ret
cmp
sti
or
xchg
add
out
loope
dec
jge
filds
dec
pop
scas
fmul
cld
push
mov
push
mov
or
push
mov
adc
popf
xor
xchg
mov
mull
enter
pop
sbb
mov
jns
xchg
lret
shrb
xor
dec
pop
sbbb
flds
fadds
mov
mov
scas
pushf
loopne
out
lret
ja
add
xchg
test
add
xor
inc
popl
mov
mov
jmp
imul
dec
outsb
adc
and
push
cmp
pop
push
add
xchg
jl
inc
xchg
xchg
add
iret
xor
add
pop
test
repnz
jno
fs
xchg
ja
jae
xor
fs
pop
mov
fs
lcall
add
std
hlt
xor
dec
add
mov
fs
adc
push
jl
add
fadd
mov
out
enter
push
hlt
push
add
les
dec
mov
add
jmp
fucomi
test
incb
xor
out
sbb
mov
inc
xlat
iret
pusha
cmpsb
dec
ja
into
leave
clc
xor
addb
dec
addb
cmp
pop
dec
xor
cmpsl
xor
mov
cmp
cmp
add
fldl
rolb
pop
and
add
jbe
sub
fists
iret
or
ja
add
insl
test
fldenv
int
lds
pop
dec
data16
adc
andb
ja
in
cwtl
js
push
fwait
add
rorb
rclb
sbb
pop
sahf
or
lea
sarb
push
out
adc
pop
pop
sbb
scas
sbb
jmp
xor
das
add
cmp
fsts
or
inc
adc
cld
imul
leave
dec
cmpsl
addr16
adcl
in
adc
mov
pusha
fwait
testb
lret
cmp
loopne
push
pop
daa
pop
test
out
add
and
inc
jno
push
mov
aam
lahf
add
sbb
lods
sbb
pop
cmc
fwait
gs
push
aas
pop
pop
lock
dec
add
jge
jno
lds
ljmp
aad
jne
mov
in
push
mov
stc
add
str
mov
fsub
add
fwait
push
mov
out
leave
cmp
xor
icebp
pop
ret
cmpsl
sbb
mov
pop
add
cmpb
scas
out
push
clc
jle
notl
pop
push
jo
inc
cwtl
mov
inc
cmc
xor
dec
outsb
dec
sub
fistpl
pop
pop
adc
mov
adc
test
add
cltd
les
mov
dec
movsb
in
add
push
popa
inc
js
add
dec
fidivl
lcall
add
mov
add
into
out
mov
jp
es
and
mov
in
aam
enter
daa
inc
sbb
aas
jmp
sbb
dec
push
mov
adc
add
pop
test
lcall
stos
push
sbb
insl
lea
add
add
leave
or
gs
push
ret
rcll
rcrb
std
ffree
into
or
mov
or
loopne
inc
lods
sti
popa
sub
inc
pusha
pushf
leave
add
xor
add
fdiv
mov
add
pop
or
add
mov
sub
insb
rcll
xchg
frstor
addb
ds
inc
int3
jns
add
ret
es
add
test
fsubrs
push
loope
fmull
mov
add
mov
bound
loope
push
xorb
inc
inc
sub
xor
xor
add
sub
sub
sarb
sbb
add
loop
clc
stos
imul
testb
lahf
add
in
mov
xchg
ror
rcrb
push
mov
movsb
mov
push
cmp
aam
shrb
out
sahf
test
bts
pop
or
out
sti
jae
add
imul
sub
pop
jecxz
jl
inc
jg
or
pop
sti
and
sbb
add
mov
pop
addb
add
fdivrs
add
idiv
xchg
mov
popa
ss
daa
pop
dec
lock
or
xchg
mov
cmpsb
pop
jae
add
adc
sub
add
inc
test
ljmp
add
inc
pop
cmpb
sub
dec
gs
cmp
xchg
mov
mov
sub
int3
xor
mov
pushf
popa
mov
movsl
or
pusha
cld
in
xchg
mov
enter
jne
inc
cmp
roll
pop
mov
in
je
cli
sarb
stos
and
cwtl
pop
dec
clc
movsl
adc
mov
adc
inc
jbe
ljmp
xchg
test
inc
rep
push
jo
js,pn
mov
cwtl
add
sub
xchg
or
push
add
pop
sub
psubsb
dec
xor
fs
jecxz
add
outsl
stc
sbb
sub
add
loopne
cmc
fldcw
std
out
adc
xor
jle
cmpsl
cmp
jnp
pop
pop
mov
push
orl
inc
fistpll
xchg
dec
adc
incl
sbb
add
sti
pop
out
clc
shrl
je
push
into
test
dec
movsl
xchg
test
shrb
jmp
repnz
lock
sub
out
outsl
add
jecxz
fstl
push
add
out
xchg
jne
and
decb
sbb
dec
and
fldenv
clc
push
add
subb
sub
rcl
sub
add
loopne
inc
sbb
aad
ja
xorb
push
sub
arpl
add
pop
stos
sbb
call
dec
jo
or
outsb
bound
or
and
lods
add
push
fwait
es
add
shl
add
sbb
bound
add
int
add
test
fs
jle
enter
leave
mov
sbb
test
es
int3
femms
sahf
and
xor
inc
cmp
jg
mov
rorl
inc
ds
mov
lret
loop
and
push
xor
js
std
pop
mov
lds
adc
stos
pop
or
gs
push
jo
and
jo
add
sbb
pop
lea
jmp
fbld
jb
pop
ljmp
mov
cmp
fimuls
xchg
jmp
mov
mov
les
jnp
pushf
jno
add
pushf
imul
cltd
add
xchg
sarb
out
or
push
mov
add
loop
jae
inc
lcall
push
stc
daa
out
add
fisttpl
dec
cmp
roll
mov
ja
popa
jns
and
hlt
inc
push
sbb
cwtl
pusha
add
jp
imul
mov
and
push
fistps
dec
adc
stos
sbb
mov
addr16
subl
rclb
ljmp
lods
jb
add
lret
xchg
inc
add
stos
ja
or
mov
pop
xor
mov
ret
sub
fwait
add
push
dec
nop
dec
cli
pop
add
push
pop
dec
pop
lahf
and
je
xchg
rcr
xchg
xor
movnti
movsb
data16
pusha
or
mov
jae
shl
fdivrl
or
test
xchg
xchg
add
out
lcall
cwtl
cmpsb
sbb
insb
pop
repnz
push
xchg
inc
popf
add
call
mov
add
bnd
xchg
add
filds
xor
cs
xor
mov
push
add
push
xchg
add
lods
jb
and
cmp
mov
lcall
idivb
addb
pop
dec
jmp
hlt
fiaddl
cmp
cmpsl
stos
or
and
popl
jnp
in
in
mov
cmc
push
loop
add
aam
test
xchg
dec
fdivs
outsl
rorl
push
fcomps
leave
jge
pop
jne
push
mov
mov
add
or
decl
dec
nop
loopne
cld
daa
xor
cmp
sbb
cmp
jbe
in
cmpsw
das
xor
inc
push
les
and
xorb
lcall
add
pop
add
lods
int
xchg
push
jp
aaa
jge
add
cmpsl
hlt
outsl
mov
cmpsb
rorb
jp
adcb
mov
pushf
subb
les
sub
dec
add
cmp
cmp
movsb
jne
inc
andl
ljmp
clc
decb
test
adc
les
shl
arpl
rcrb
add
inc
xorl
jp
ret
add
in
enter
adc
and
jbe
or
sbb
cmpsl
enter
ds
xchg
inc
cs
jle
das
cmpsl
jnp
pusha
dec
or
jno
loope
dec
add
gs
mov
add
mov
call
mov
xchg
lea
cmp
sbb
push
js
call
cld
push
xlat
xchg
push
dec
rol
add
out
mov
mov
xorb
nop
call
adc
xor
xor
cmp
inc
add
dec
daa
xchg
call
test
cld
aad
pop
or
shrl
loopne
jecxz
daa
aaa
rolb
insl
adc
mov
pop
push
lock
nop
cmp
inc
or
sub
xor
dec
add
stos
inc
clc
add
mov
or
add
test
add
add
leave
clc
sub
rolb
jp
rclb
add
push
mov
jb
add
push
and
scas
add
lcall
in
aas
cwtl
xchg
ljmp
loopne
fnstcw
addb
mov
rclb
in
sub
nop
add
inc
lods
jo
sbb
add
pushf
pusha
add
nop
add
inc
sub
push
cwtl
sbb
mov
add
xchg
push
push
inc
sub
inc
inc
xchg
mov
fbstp
std
ret
cli
andb
repnz
dec
sbb
inc
push
lock
loop
addb
jae
repz
push
pop
mov
push
pop
xor
add
cmp
pusha
mov
testl
pop
pop
add
jae,pt
adc
aad
mov
popf
shlb
xor
xchg
push
add
dec
jle
push
adc
add
cmpb
mov
mov
mov
int
lods
add
testl
out
pop
cmpsl
jl
add
sub
inc
aam
fstpt
je
in
pop
mov
mov
add
push
or
loopne
stc
mov
lock
pop
clc
xorb
xor
and
fmuls
add
mov
add
decl
mov
add
inc
and
dec
push
xor
add
inc
jnp
add
jp
outsb
jle
xor
inc
dec
mov
add
jge
push
xor
out
adc
repz
add
faddl
lods
mov
or
rolb
negl
dec
mov
mov
dec
or
ja
mov
xor
incb
pop
jl
sub
add
pop
addr16
clc
out
add
subl
add
mov
and
mov
xchg
aas
pop
push
mov
subl
push
stc
sbb
loop
repnz
ljmp
inc
mov
mov
or
stos
add
test
out
jg
mov
je
inc
sbb
push
lock
xor
rclb
sub
insb
mov
lahf
push
dec
add
movsb
jo
inc
mov
add
push
jbe
adc
jle
pop
add
js
out
mov
mov
or
ss
cmp
pop
sahf
xlat
gs
inc
push
push
cmpb
clc
dec
sbb
pop
mov
add
addb
xor
es
push
andb
cmp
push
dec
std
add
mov
loop
jae
in
mov
je
add
out
or
add
push
xor
pop
add
sub
and
xor
adc
mov
iret
push
clc
xchg
add
ds
add
ret
dec
jnp
sbb
mov
hlt
add
push
ljmp
or
mov
xor
jne
xor
ja
jno
cmpl
sub
fimull
insb
mov
xor
popa
test
add
addb
xor
cmpsl
or
out
testb
inc
mov
enter
mov
scas
repnz
push
sbb
mov
xor
add
sti
dec
cmp
test
data16
mov
loopne
or
mov
cmp
jle
add
push
push
lea
jge
mov
cmp
test
push
outsb
or
push
rorb
fiaddl
lret
lea
clc
mov
fsub
mov
xor
mov
mov
dec
xor
and
int3
mov
adc
popf
pop
add
mov
xchg
lea
lcall
and
lods
add
xor
dec
sarb
add
mov
or
test
adc
lds
hlt
imul
add
pop
lahf
inc
enter
int3
xrelease
and
and
add
push
fdivs
xor
or
pop
jmp
fisttpl
add
mov
sub
psrlw
sub
cmp
out
inc
ljmp
mov
push
add
fiaddl
aaa
xchg
mov
clc
sub
cmp
adc
lock
add
mov
add
addl
aad
les
jns
xlat
notb
add
data16
gs
add
sbb
fldcw
pop
sbb
imul
icebp
stc
and
add
push
popa
push
ljmp
mov
sub
roll
xchg
push
bound
iret
das
cmc
inc
xchg
pop
lods
add
je
ret
sbb
icebp
pusha
xchg
mov
xchg
jo
mov
aaa
addr16
ljmp
sbb
lock
pop
mov
add
dec
aad
fstpt
add
cli
cmc
sub
cmp
andb
mov
add
add
mov
rclb
mov
sbb
xor
filds
mov
xchg
pop
pminub
add
lret
and
push
cs
fdivl
jbe
out
je
xchg
loopne
and
cmp
adc
add
jl
jle
mov
add
pop
popa
sub
inc
insb
or
ret
test
daa
incb
add
add
and
ljmp
incl
push
std
mov
or
jo
dec
add
add
mov
out
push
mov
daa
js
adc
pop
add
clc
js
test
sti
cwtl
inc
mov
and
add
push
dec
cmc
inc
cmp
sub
pop
ja
add
das
subl
cltd
ds
inc
in
mov
iret
pop
mov
push
sahf
popf
ja
add
enter
scas
sbb
inc
stos
les
push
sbb
out
das
mov
or
outsb
xor
mov
lock
pop
and
jle
bound
addb
mov
mov
sub
jle
test
mov
subl
cmpsl
out
nop
xorb
test
scas
push
jno
cwtl
mov
or
sbb
cmpl
add
add
push
push
lcall
cmp
jbe
add
dec
imulb
add
dec
in
stos
inc
pop
std
cmp
sbb
int3
inc
ja
dec
mov
mov
popa
adc
stos
das
add
add
mov
mov
out
out
aaa
mov
add
maskmovq
testl
push
cmpsb
lret
sahf
push
rclb
aaa
xor
add
adc
ffree
adcb
lock
cmpl
jo
pop
jecxz
ds
add
sbb
call
mov
mov
pop
rolb
xchg
fimuls
pop
insb
repz
jmp
add
and
xchg
and
call
sbb
adc
sbb
push
mov
jae
cmpsl
push
and
pop
daa
inc
int3
out
and
add
jmp
mov
call
sub
add
pop
jl
leave
cmpl
cmp
cmp
cmc
ljmp
divb
add
or
cltd
int3
dec
sub
roll
mov
das
dec
in
add
add
je
push
pushf
js
sahf
les
rorl
sub
mov
cmpsl
sbb
sub
nop
push
jne
add
into
pop
lds
in
xorb
flds
jne
in
inc
cmc
orb
mov
frstor
and
xor
sub
ret
xor
inc
dec
pop
cli
scas
add
lcall
sarl
mov
out
add
and
mov
lods
in
call
dec
inc
or
movswl
test
sbb
jle
add
sbb
int
pop
daa
add
sub
cmp
in
js
and
ljmp
pop
add
out
xor
xchg
add
push
ljmp
mov
out
xor
or
jae
aam
jmp
xor
mov
flds
lods
jne
insb
xlat
inc
cmc
adc
orb
add
add
and
sbb
insl
loopne
cltd
scas
jecxz
add
add
mov
add
cld
lods
icebp
pop
sarb
sarl
xchg
mov
mov
add
test
and
add
dec
xor
add
cmp
ss
jnp
loopw
dec
mov
xorb
mov
bound
imul
xlat
pop
int3
out
jae
or
sub
popf
cmpsl
rorb
add
sub
push
pop
loop
add
jo
aaa
scas
test
in
pop
inc
jl
mov
shll
fiaddl
sub
adc
js
mov
mov
fsubrl
adc
loopne
out
jl
pop
data16
stos
rcl
ret
sbbl
push
dec
cmp
out
ficoml
sub
orb
pop
add
stc
mov
mov
push
push
cwtl
add
fadd
cmp
adc
pop
sti
lret
add
imul
mov
repz
push
sub
std
jmp
daa
out
add
sbb
adc
out
add
rcrb
xor
inc
and
out
pop
test
rcrl
loop
xor
enter
sub
mov
out
add
idivl
jge
mov
xchg
mov
jno
jo
movsl
inc
ffree
in
cmp
mov
cmp
pop
fcmovnu
das
cmp
rorb
mov
push
lea
stc
mov
add
and
cmpsb
cmp
ret
and
ja
add
imul
add
cs
cmp
movsb
add
js
jne
popa
mov
in
add
jnp
inc
jecxz
xor
and
jbe
add
fadds
add
movq
dec
adcb
scas
sbbb
jl
mov
andb
imul
dec
jae
mov
adc
fimull
test
imul
iret
dec
pop
add
sub
mov
loopne
das
or
test
jecxz
orl
cltd
mov
inc
inc
lahf
pop
test
addr16
aad
je
shlb
shrl
sbb
fcmovb
mov
cmpsb
jmp
lcall
dec
jnp
pusha
pusha
fdivrs
xor
enter
and
data16
adc
push
int
add
pop
pop
loope
dec
fstpt
xchg
xchg
cmp
and
fisttps
sbb
xchg
xor
dec
mov
jge
add
pusha
stos
mov
loopne
pop
inc
mov
jp
add
cmp
addl
xchg
push
sbb
mov
test
add
jge
sarb
dec
hlt
add
testl
sbbl
das
insb
pop
xchg
sbb
testb
mov
daa
fdivs
add
mov
clc
and
add
push
in
or
jno
push
sbb
mov
cwtl
jae
pusha
test
pusha
imul
nop
or
cmp
cmp
arpl
adc
mov
test
jg
mov
fisubrl
mov
or
loop
mov
repz
xor
mov
pusha
mov
aad
call
dec
push
movntq
call
add
subb
lods
loopne
xchg
sub
mov
js
jnp
jmp
xor
pop
push
hlt
sbb
adc
add
in
fstl
adc
rcrb
add
push
in
push
fwait
or
test
test
lods
inc
fcoml
ljmp
imul
or
sub
mov
loope
scas
sbbb
mov
mov
movsb
mov
xchg
enter
pop
xchg
pop
imul
cltd
das
fs
inc
cli
aas
add
dec
pop
fwait
add
or
jnp
mov
jl
cmp
or
dec
cld
lds
and
adc
pushf
int
xor
add
and
aaa
push
mov
ret
or
cmc
movsb
rcl
add
dec
scas
loop
movsl
outsl
clc
shl
pop
inc
nop
xorb
dec
pushf
popa
add
inc
out
push
add
insl
xchg
mov
int
cwtl
add
or
cmp
addb
cld
outsb
cvtps2pi
or
xchg
sub
pop
add
dec
pop
hlt
lret
incb
fwait
pop
or
cmp
cmp
cwtl
sbb
mov
or
jmp
add
push
add
aas
push
mov
xor
add
pushf
add
ss
add
mov
cmp
mov
rcrb
shlb
rorb
jmp
fcoml
add
and
sub
adc
jne
or
dec
add
cltd
xor
inc
jno
mov
aas
add
and
ja
inc
ror
cmp
adc
mov
pusha
adc
jnp
icebp
or
mov
nop
or
testl
sub
loopne
dec
push
add
pusha
enter
orb
cmpsb
lods
xchg
jmp
sub
pushf
out
push
jmp
jle
xorb
stos
add
ja
lock
sbb
popf
cmp
in
jne
mov
add
push
inc
and
sbb
adc
into
sti
testb
in
pop
ds
jo
les
mov
pop
push
fwait
add
leave
arpl
push
and
add
add
insl
pop
jae
cmp
lahf
add
xor
add
add
mov
cmp
andl
mov
sahf
add
aam
shlb
jno
add
mov
add
sti
or
mov
xorl
aas
inc
jno
xchg
movsb
add
rcrb
sub
jbe
pop
add
jnp
sub
xor
adc
mov
sub
icebp
cmpb
inc
mov
and
mov
nop
add
rolb
inc
mov
mov
mov
fadds
popa
sarl
adc
dec
pop
lcall
repnz
add
in
xchg
fisubs
jne
add
lcall
addr16
xchg
sub
shlb
push
lods
mov
mov
inc
dec
pop
test
out
mov
add
lock
imul
add
mov
fists
cs
rolb
cmp
dec
jno
mov
dec
xadd
pop
leave
add
mov
inc
jle
xchg
add
andl
jbe
jl
mov
nop
xchg
fcmovnbe
ss
mov
std
dec
pop
pop
dec
sub
mov
cmp
sbb
outsl
pop
add
pop
adc
out
bound
test
insl
jge
push
testl
sbb
enter
ficoml
adc
pop
add
int3
shlb
xor
sbb
bound
sub
shrb
push
sbb
sti
insl
add
jge
xchg
daa
pop
dec
jmp
inc
dec
adc
push
sbb
adcb
push
nop
add
cmpsb
jp
jne
loop
xor
filds
gs
jbe
add
dec
jno
test
sub
pop
push
push
and
jns
and
add
mov
shll
mov
in
ss
leave
add
in
mov
fcom
and
jbe
ret
loop
mov
sbb
pop
jl
ja
sbb
enter
pop
add
aas
ffreep
gs
stc
mov
mov
push
jb
mov
sbb
test
push
inc
inc
cmp
and
mov
xchg
mov
sbb
test
pusha
stos
repnz
jns
add
mov
cwtl
lea
add
cli
add
pusha
addb
fldt
pop
add
xlat
rorl
mov
or
sbb
data16
jae
mov
jecxz
xchg
inc
cmp
mov
push
cmpsb
cltd
add
pusha
xor
push
jl
cmp
mov
pop
add
sbb
mov
inc
es
xor
mov
jb
and
pop
mov
pop
incl
or
hlt
pop
outsl
xor
pop
test
or
decl
lods
jmp
das
add
mov
insl
inc
je
cli
add
pop
mov
fdiv
mov
add
inc
ret
sbb
jnp
sub
adcl
add
daa
imul
mov
adc
test
lods
popf
push
jo
aad
xlat
repz
es
movsl
jno
add
rolb
jne
dec
rsqrtps
inc
cmp
movsb
pop
cltd
std
add
arpl
or
xchg
les
add
nop
test
test
imul
xlat
bound
pop
dec
aam
movsl
pop
xchg
mov
sti
xor
jno
cmp
lret
push
xchg
je
pop
jnp
mov
mov
add
xor
out
faddl
test
fwait
pop
xor
add
cwtl
popf
and
mov
fsubs
dec
decl
adc
repnz
lock
in
xor
sbb
ljmp
repnz
jne
or
inc
orb
testb
inc
jns
xchg
mov
pop
cli
push
cwtl
in
xchg
test
fnstenv
add
movsb
or
into
decb
or
ljmp
cmc
add
ret
mov
sbb
inc
icebp
rdpmc
outsl
mov
test
incl
sub
arpl
lock
jmp
leave
dec
pop
mov
stos
lahf
jb
xchg
jbe
loope
and
aas
cmp
push
ss
and
add
jp
fstpl
xchg
add
inc
add
inc
inc
enter
sbb
fisttpll
add
mov
xorb
arpl
andb
mov
jmp
xchg
or
call
mov
add
outsl
ss
xor
or
sbb
jns
cs
fiadds
jo
adc
xchg
in
scas
mov
cmp
mov
add
inc
test
loopne
ffreep
ljmp
jbe
sub
push
pusha
out
sbb
mov
mov
sub
orl
adc
out
lldt
or
mov
repnz
inc
mov
or
xlat
xor
jl
mov
adc
xor
test
in
xor
mov
adc
mov
cmp
mov
inc
jo
push
push
cld
adc
sahf
cmp
dec
adc
fxch
fildl
or
es
icebp
xchg
mov
sub
out
aas
iret
sub
and
out
and
lahf
push
or
mov
shll
imul
ljmp
mov
addr16
xchg
andl
dec
test
int3
cmp
jmp
out
xor
sbb
xchg
jo
cmp
ds
jb
pop
push
icebp
loope
movsb
add
mov
cmp
or
pop
mov
lret
jmp
es
cmp
and
lds
xchg
mov
std
lret
and
sub
mov
andb
pushf
int
aaa
dec
addl
and
add
push
fisttpll
fstps
in
inc
add
cmpsb
fsubrs
push
cmp
scas
jns
sahf
add
sbb
push
int
add
rorb
shl
lock
adc
xchg
jno
pop
cltd
cmp
je
mov
xchg
mov
add
pop
sbb
cmpsb
adc
sbb
lahf
add
push
push
and
pop
pushf
sub
cwtl
enter
iret
add
xchg
mov
dec
jge
mov
out
mov
cwtl
lock
mov
add
daa
mov
pop
add
out
xor
imul
aad
cmpl
sbb
idivw
pandn
cmp
or
add
jb
orb
aad
xchg
jae
sbb
daa
and
xchg
call
pop
bound
inc
add
mov
push
mov
xor
mov
lods
mov
mov
push
and
out
je
pop
jno
push
jo
add
cmp
dec
xor
inc
movsb
addb
mov
out
pop
push
lahf
jle
std
mov
add
mov
cwtl
xchg
add
shll
repnz
mov
popf
out
add
add
cmp
sub
and
inc
mov
daa
test
xchg
fucom
xor
pop
sar
inc
add
jg
xor
xor
pop
add
jo
cwtl
insl
aaa
cmp
jmp
loopne
fsubs
mov
pop
fldl
sbbl
test
dec
jl
cwtl
add
push
shll
int3
int
sbb
outsl
or
loopne
in
xor
les
aam
pop
cmp
add
and
into
xchg
jge
add
add
cmp
das
fildll
add
mov
nop
cwtl
add
pop
arpl
or
sbb
outsl
or
mov
add
dec
dec
push
shl
mov
das
cmp
nop
inc
adc
loope
lods
xchg
push
test
xchg
sahf
add
aam
ret
pop
add
mov
inc
les
sub
sbb
jg
imul
xchg
dec
pop
add
test
fs
pop
mov
and
mov
outsb
dec
imul
jg
fdivrs
add
dec
jbe
push
adc
sub
sbb
int3
xchg
in
mov
mov
and
xor
fwait
aad
unpcklps
rorb
push
mov
in
pop
push
xchg
lahf
fidivs
and
lods
sbb
outsb
inc
sbb
jno
decb
add
xorl
dec
mov
aaa
jge
imul
jb
xchg
aas
ljmp
imul
cld
pop
nop
adc
xlat
jne
push
xchg
stos
sbb
xchg
fstps
mov
outsb
into
fcomip
hlt
sub
pop
pop
push
lods
pop
mov
lds
xchg
in
lret
shlb
push
add
inc
xor
mov
inc
rclb
int
mov
dec
jl
or
xlat
dec
dec
pop
sbb
mov
xchg
insb
sahf
mov
addl
pop
out
and
cld
mov
ja
fwait
push
fiadds
xlat
mov
in
out
add
cmp
jb
push
inc
inc
push
xor
pop
add
sbb
mov
jns
dec
loope
push
mov
fdivr
in
aaa
adc
pop
ffreep
pop
xor
cmp
add
popf
xchg
push
add
jle
inc
pusha
xchg
pusha
test
jp
pop
cmpsl
mov
mov
cmp
fstl
add
loopne
inc
lret
xlat
add
popl
and
mov
in
inc
ja
push
sbb
pusha
mov
shll
aas
xor
test
dec
add
in
lods
mov
xor
sub
mov
test
xchg
adc
jns
inc
add
push
adc
or
sub
cltd
jno
pop
cmp
insb
cs
cmpsl
xchg
jne
pop
cli
jnp
cmovl
bound
lahf
lcall
les
jg
loope
lea
add
push
fdivp
lret
in
adcb
inc
nop
rclb
mov
shll
push
les
andb
jg
dec
scas
add
vcvtsi2sdl
push
add
xchg
js
repz
cld
inc
add
sbb
hlt
add
add
adc
pand
xor
subb
add
fdiv
push
add
loope
sbb
and
or
icebp
add
inc
scas
mov
add
dec
jge
js
mov
out
int
pop
add
push
lods
add
mov
mov
push
dec
pop
push
adc
jnp
out
mov
mov
inc
or
das
mov
sub
mov
aaa
dec
inc
out
iret
aad
xchg
xor
mov
pop
cmp
mov
repnz
fincstp
cvtpi2ps
and
dec
add
mov
aam
lds
inc
inc
adc
aad
lods
add
int3
das
je
in
cwtl
xchg
add
inc
out
lods
lds
fs
or
pop
add
jno
push
arpl
push
scas
mov
add
mull
imul
jge
fcmove
into
pop
shrb
mov
data16
lea
movsl
lret
fisubl
cmp
add
xchg
jmp
dec
ja
add
and
mov
sbb
inc
rolb
andb
push
shll
loopne
in
sbb
adc
mov
test
mov
and
add
xchg
xchg
adc
mov
lods
enter
jge
mov
pop
cmp
ja
cmp
mov
inc
fadds
push
clc
xor
jae
je
cltd
pushl
xchg
rolb
mov
sti
shrl
pop
test
push
push
or
add
fadds
add
sbb
push
cmp
jb
imul
mov
lret
xchg
add
aas
loop
sub
in
adc
movsl
shr
fcoms
or
out
cmp
scas
add
cmp
nop
add
or
xchg
xor
adc
aaa
push
push
cmp
mov
popl
mov
scas
aas
fidivs
pop
iret
xor
pusha
shrl
add
xchg
jp
jno,pt
cmp
in
arpl
dec
sub
mov
add
xor
or
or
add
pushf
xor
push
inc
cmp
add
and
sahf
add
stc
pop
xor
or
push
les
fidivl
cmp
mov
shl
push
push
stos
jns
ja
mov
pop
jo
and
pop
or
repnz
add
or
add
and
mov
inc
insl
pop
add
xor
nop
inc
clc
jo
xor
bound
leave
ret
negl
pop
mov
mov
add
xor
cmpsl
cmp
clc
dec
xchg
test
dec
pushf
or
push
mov
add
lock
xorb
cmc
dec
ret
inc
xor
js
std
add
pushf
mov
mov
add
fistps
cmpsb
add
sarl
xchg
pop
mov
cmovne
rolb
lock
imul
sbb
repz
ret
shll
lods
push
pop
or
adc
push
mov
out
rolb
xlat
fsubs
arpl
xorl
sub
test
incl
roll
push
icebp
sti
sahf
add
mov
mov
pusha
and
mov
filds
jnp
mov
std
nop
inc
lock
lret
sbb
push
add
dec
inc
sbb
xor
lret
jmp
pop
rcl
cmpsb
add
dec
ja
call
jo
pushf
push
inc
divl
repz
add
inc
stos
nop
pusha
add
fucomp
mov
subb
je
inc
jb
push
xchg
mov
fmulp
or
jns
adc
adc
pop
cmp
mov
pop
cmp
enter
rcrb
shufps
sub
clc
movl
inc
sahf
rclb
jmp
decb
sbb
pusha
enter
mov
push
push
cli
or
add
push
cmpb
icebp
dec
add
jmp
nop
ror
nop
push
cmp
outsl
das
or
inc
jg
dec
push
mov
jle
push
std
jns
rorl
inc
fs
and
scas
cmpsl
inc
in
dec
or
nop
bound
push
lods
int3
inc
xchg
xchg
add
lods
jns
sbb
jle
dec
cmp
mov
jno
add
xchg
popa
jmp
in
xchg
call
lock
icebp
repnz
aad
adc
xchg
rcll
outsl
loopw
pop
aaa
movsb
and
and
pop
ds
xchg
into
adc
notl
xor
adc
add
ret
mov
and
jae
ja
mov
lcall
sbb
inc
imul
insl
push
test
jmp
xor
push
or
inc
rcr
cmpsl
mov
add
inc
fistpl
scas
jbe
pop
mov
add
mov
fidivrl
std
jae
add
adc
leave
mov
fildl
add
sbb
jbe
mov
pop
sbb
insb
popf
push
push
and
ja
xchg
add
jbe
out
leave
or
addr16
shlb
xchg
sub
add
pop
aam
pcmpeqd
pop
jne
loope
push
nop
add
stos
test
divb
dec
lods
mov
push
adc
scas
add
mov
push
lods
push
jno,pn
push
jns
or
xor
test
cld
jp
mov
add
sub
add
pop
sbb
fstps
mov
scas
mov
js
lret
cs
fmull
xor
lea
push
sahf
out
and
xchg
movb
or
aad
ror
cs
sbb
jge
add
jp
loopne
mov
inc
clc
lcall
negl
jo
add
xchg
imul
mov
inc
pop
push
in
xlat
push
push
and
jns
scas
stos
xchg
add
mov
mov
push
scas
shll
arpl
aas
push
and
stc
jo
push
lock
mov
sahf
and
mov
mov
cld
loopne
lods
rcll
xchg
cmp
xchg
nop
mov
fisttpl
imul
leave
hlt
add
test
pop
scas
testb
lahf
lods
bound
sbb
stos
popa
jae
mov
push
test
adc
mov
testb
pop
add
mov
add
leave
xlat
imul
enter
inc
js
fistps
xchg
sti
iret
and
pop
add
push
mov
dec
jle
add
dec
ffree
mov
add
lea
shlb
add
rolb
std
loop
add
or
add
add
inc
imul
cmc
int3
cmc
decl
je
out
sbbb
jne
cmp
jmp
out
cmp
xor
roll
or
cld
mov
xor
shl
jne
lret
cmp
or
dec
scas
sub
dec
cwtl
add
repz
dec
adcb
push
xlat
rcrl
inc
fcmove
or
ds
adc
fwait
sbb
leave
push
arpl
dec
inc
add
lds
jmp
aas
sbb
lods
xor
and
dec
clc
add
frstor
pop
notl
fs
shll
inc
loopne
lahf
mov
mov
dec
or
add
scas
enter
mov
and
inc
lods
add
cmc
pop
jmp
lods
mov
mov
jp
add
push
nop
jecxz
lcall
lds
push
in
aaa
mov
xchg
and
cmp
push
sub
inc
jo
or
mov
je
fisttpl
add
cmp
and
js
add
adc
cmp
or
in
loopne
add
push
daa
in
hlt
push
mov
adc
jbe
or
cmp
sbb
cmpsl
lahf
cmp
jne
jp
push
in
cmpl
or
or
push
orb
xchg
mov
movsb
add
cmp
add
rclb
sub
out
sahf
or
add
addb
pusha
xchg
jno
adc
mov
push
xor
mov
add
lret
mov
pop
mov
add
pushf
or
cwtl
push
filds
fwait
and
and
jl
mov
or
jo
cmp
jo
popf
dec
jo
in
jl
sub
and
imul
add
and
dec
push
cmp
xchg
mov
pop
sbb
out
adc
dec
push
pop
pusha
test
test
sysenter
arpl
aas
sbb
sti
dec
push
les
jmp
out
les
into
fcomps
xor
in
enter
movsl
dec
xorl
jl
add
lret
mov
xchg
push
negl
pop
cld
xor
int
loopne
add
adc
inc
ret
aad
sahf
xor
pop
jo
sub
adc
call
es
and
lds
rcrl
repnz
or
jns
in
out
sbb
orl
adc
xchg
inc
add
mov
ror
mov
pop
insb
lock
sbbb
data16
dec
push
inc
xor
stos
add
repz
call
add
sbb
xchg
adc
push
push
movsb
jns
and
add
xchg
out
pop
insl
or
add
xchg
and
aaa
add
cmpl
xchg
negl
sbb
add
mov
les
jecxz
pop
repz
adc
sbb
ret
fistl
iret
aaa
inc
out
inc
sahf
rclb
xchg
mov
add
rcrb
std
xchg
add
fiadds
loop
scas
mov
arpl
shrb
loopne,pt
hlt
add
sbb
jo,pn
xchg
add
mov
cmpsb
imul
push
inc
add
repnz
mov
mov
dec
cmc
shlb
in
push
pop
adc
shl
or
mov
add
scas
stc
int
setno
repnz
add
dec
ret
mov
xchg
repnz
pop
cwtl
pusha
clc
pop
int
imul
xor
clc
cmp
cltd
push
in
add
xor
repz
sub
cltd
add
out
jle
add
out
add
cmp
add
add
cmp
or
xor
fdivs
xchg
mov
or
pop
mov
add
out
xchg
cld
mov
inc
jecxz
pop
sub
add
stos
fimull
push
push
mov
pop
xor
gs
mov
add
rcrb
imul
inc
sbb
dec
repz
cld
sahf
mov
cmp
fs
out
ret
dec
incb
dec
or
pop
jne
test
pop
aaa
sub
mov
shrb
testb
popf
mov
mov
lea
dec
imul
xor
std
and
enter
mov
inc
mov
test
and
pusha
ud1
cmp
push
insb
in
mov
leave
dec
and
out
add
cmp
inc
sbb
pusha
add
int
sub
ds
pop
adc
cmc
cmpsl
lods
test
cwtl
test
and
addl
mov
xchg
or
xor
loop
ja
add
sbbb
add
idivb
add
or
cmpsb
pop
xor
add
testl
jp
xchg
add
push
lds
pop
sub
subb
pop
ljmp
sbb
lock
mov
fadds
sbb
orl
add
mov
incb
movsl
imul
xchg
xchg
push
cld
cli
pop
cmp
adc
mov
subb
fbstp
inc
mov
mov
adc
and
jo
repnz
add
rcll
add
int
cmpsb
mov
fsin
jae
dec
mov
shrb
adc
lods
addl
popf
inc
push
loopne
and
sbbb
lods
push
andb
in
inc
arpl
dec
pop
xchg
mov
xchg
scas
push
sub
test
xor
dec
xor
sub
add
ja
and
push
fs
pop
jmp
add
scas
pop
cmpsl
cmp
and
aam
stos
xchg
pop
mov
fnstsw
aas
add
gs
out
out
add
out
push
xor
inc
fwait
sbbl
in
lcall
sbb
xor
mov
jmp
jl
push
push
xor
int3
add
push
add
sti
jb
nop
xorb
pop
sub
fwait
and
into
jo
dec
mov
or
cmp
movl
add
mov
mov
or
adc
add
sub
xor
jge
fcomps
add
xchg
and
jecxz
inc
call
pop
addr16
adc
add
mov
insb
lret
jp
int3
pop
xchg
gs
fmull
out
xchg
inc
lcall
movb
repz
jne
mov
mov
stos
out
fstp
and
xchg
movsl
sbb
adc
int3
dec
add
push
add
push
imul
pop
or
jmp
sub
inc
in
fdivs
sahf
cli
fcompl
jne
jnp
sbb
xchg
and
dec
sbb
xor
pop
jb
sub
imul
add
out
mov
or
sub
hlt
xchg
and
pop
push
dec
iret
mov
mov
test
loopne
jge
push
je
sub
ret
and
adcb
pop
xor
popf
dec
shrl
sub
sub
sub
das
add
test
pop
nop
pop
add
stc
lcall
xchg
mov
adc
test
cmp
xor
inc
popa
add
popl
cld
push
add
mov
test
stos
aad
hlt
jl
add
xlat
pushf
add
test
xchg
sbb
xor
and
in
movzwl
flds
xchg
xlat
js
aam
fiaddl
xchg
or
lock
adc
mov
mov
popf
rclb
xor
cmpsl
dec
sbb
xchg
add
mov
scas
jo
fildl
test
enter
les
add
loopne
xchg
mov
xor
sbb
sub
xor
pop
adc
repz
scas
mov
and
int3
subb
incl
add
lds
lock
dec
sub
loopne
jns
clc
stos
sbb
fldl
ret
loope
dec
xchg
addb
insl
xor
jp
pop
cmc
jae,pt
loopne
add
cmovp
mov
hlt
push
pop
js
or
cmc
cmp
add
outsb
flds
xor
and
cmpsb
jge
sbb
data16
cmp
adc
push
mov
jp
cmp
push
push
push
aaa
cmpsl
add
mov
xorb
ret
test
insb
in
inc
and
mov
shlb
xchg
push
in
loope
fstl
inc
insb
cmp
test
cld
inc
jne
dec
aad
add
in
push
loopne
adc
push
int
xchg
cwtl
hlt
pusha
js
xor
cmp
cli
cmpl
sbb
cs
inc
icebp
pop
aam
pop
sub
add
xchg
std
add
jmp
fldl
mov
in
mov
add
or
shlb
dec
mov
sbb
mov
repnz
or
insb
add
sub
cld
add
aam
push
or
pop
add
dec
inc
or
add
pop
pop
in
das
ljmp
inc
sti
push
adc
out
jbe
pop
push
test
add
sub
mov
add
cmpb
mov
push
bound
mov
inc
test
sub
cwtl
mov
xchg
mov
stos
imul
pop
add
popf
and
push
cmp
in
xchg
out
or
dec
cmovl
std
xchg
push
jb
and
idiv
inc
int
adc
inc
bound
loop
aad
faddl
ljmp
mov
mov
jmp
adc
dec
cmp
mull
arpl
sub
xor
ss
mov
add
out
icebp
shl
sbb
sbb
loopne
fs
popa
imul
and
ror
xchg
das
fwait
add
xchg
mov
cmp
roll
inc
mov
out
pop
mov
ljmp
mov
les
push
pop
fld
call
cmp
stc
addb
js
push
cmc
fisttps
les
xor
shlb
xchg
add
ret
out
adc
and
inc
das
mov
jle
stos
test
xchg
lock
add
fwait
repnz
scas
add
sti
pop
aas
in
lahf
notb
ds
int3
xor
insb
add
add
repz
stos
lods
and
mov
sti
xchg
sub
call
jae
cs
add
inc
cmpl
mov
add
out
xor
push
mov
mulb
repz
gs
and
add
sbb
inc
mov
jns
push
xor
loopne
add
pop
test
cwtl
pop
loopne
ds
loop
inc
jb
inc
and
pusha
test
mov
inc
es
fdivrl
addb
testb
add
push
or
cmp
jle
cmp
mov
sbbl
fwait
pop
lods
xor
fs
ret
mov
and
add
mov
mov
inc
and
js
inc
inc
adc
out
lret
mov
xor
inc
mov
xor
hlt
xor
ja
pop
jne
leave
lret
sbb
rolb
mov
add
popa
or
arpl
std
pop
add
lds
test
xor
pop
sbb
add
test
add
rcrb
in
push
das
push
inc
add
push
enter
loop
pop
idivb
cmpsb
push
adc
sbb
sbb
push
out
rep
fiadds
cmp
jle
movsb
cmp
btr
flds
mov
add
mov
add
mov
dec
push
scas
call
in
ret
xchg
cmpl
aam
pop
nop
adc
push
xchg
addl
mov
lret
xor
stos
add
push
aas
inc
int3
inc
icebp
pop
add
divb
inc
adc
sti
paddsw
das
push
cmpsl
pop
sbb
test
fists
hlt
imul
cwtl
pop
jb
shrb
jl
lock
test
mov
outsl
xchg
lock
dec
test
mov
jge
icebp
lods
xchg
roll
movsl
sub
cmpsl
lds
daa
push
bound
sahf
arpl
repnz
sar
push
rolb
clc
xor
lcall
sub
adc
cmp
outsb
jns
fsts
jmp
pop
add
adc
std
loopne
sbb
add
inc
insb
subl
push
cs
mov
lret
push
sub
push
aam
dec
repz
scas
add
je
jecxz
xchg
pop
adc
inc
cmpsb
andl
cmp
mov
xor
add
clc
outsl
add
mov
imul
sub
cmp
sub
jecxz
inc
lods
int
mov
popf
pop
sbb
js
cli
roll
in
mov
sbb
mov
decb
cmp
lods
fadds
sbb
cs
imul
cmp
add
pop
and
fiadds
test
bound
mov
or
in
push
addl
stos
ret
sbbb
dec
enter
xchg
add
pop
jmp
rolb
xor
jmp
ret
popa
adc
iret
cmp
repnz
ret
jmp
add
int3
rol
js
sahf
adc
insb
repz
jmp
cmp
cmpb
decb
js
daa
or
fldl
and
inc
cmp
add
repz
mov
pop
mov
pop
pop
scas
add
movsb
int
ss
aad
insl
dec
aaa
push
push
jge
cmp
xor
and
insl
jne
add
mov
jnp
lcall
cmp
add
cmp
mov
and
push
dec
insl
hlt
pop
mov
jge
test
insl
inc
jecxz
fstpt
xor
xor
push
push
add
scas
pop
and
dec
aaa
cmp
xor
mov
add
dec
bound
insl
call
leave
pusha
sub
adc
mov
ret
pop
clc
mov
sub
sbb
jae
rolb
lock
push
loope
sub
xchg
and
cmp
lods
push
sbb
ja
sarl
popf
sub
adc
cmp
fistpl
js
subb
imul
or
push
jae
imul
inc
jbe
push
add
inc
add
out
cmp
testl
std
adc
mov
ds
lahf
adc
movsb
mov
add
popf
mov
push
inc
in
mov
nop
out
mov
add
mov
mov
pusha
adc
cmp
fldl
subps
in
sub
sarb
shlb
hlt
cmp
inc
maskmovq
testl
insb
xchg
mov
adc
pop
or
into
pop
or
lea
mov
add
test
add
std
inc
fldcw
sbb
enter
sahf
mov
test
mov
mov
push
out
pop
add
and
or
pusha
pop
sbb
test
add
inc
fildl
jnp
push
aam
cmpsl
cmp
addb
into
mov
test
insl
lcall
inc
add
stos
cmpsb
daa
scas
notl
jo
cmp
add
or
mov
cmp
cmp
add
mov
in
add
xlat
push
cmp
out
pushf
jno
mov
nop
rolb
mov
adc
jge
xor
nop
sub
loope
stos
lods
and
and
data16
inc
mov
test
loopne
and
sahf
and
and
adc
sub
jns
adc
adc
xchg
jno
xor
sub
cmpb
and
shrb
mov
jae
mov
adc
lods
push
or
cmp
pusha
lock
inc
mov
sbb
imul
cmc
push
or
icebp
pusha
mov
push
push
mov
jb
cmp
iret
sbb
xor
out
pop
add
push
add
dec
dec
arpl
add
in
in
mov
push
rolb
lret
call
pop
std
inc
testb
fadds
jle
add
cmpsb
xor
inc
add
outsb
sub
xor
mov
add
test
mov
cmp
jb
pop
nop
imul
in
xchg
mov
xchg
mov
dec
and
sub
add
enter
in
sbb
or
add
repnz
jb
add
lods
cmc
mov
dec
outsb
add
ljmp
mov
and
sahf
xchg
mov
inc
jp
nop
dec
aas
imul
cmp
int
sbb
xor
movups
rcrb
or
cmc
add
ja
push
out
dec
stc
or
popf
jg
add
pop
enter
cltd
int
dec
adc
and
das
clc
mov
push
push
cwtl
es
loop
or
xlat
push
lods
xchg
rolb
imul
push
data16
aam
lahf
add
ret
xchg
mov
repz
add
outsl
nop
std
add
add
out
dec
push
in
stos
add
shlb
cmp
pusha
push
pop
pop
and
lret
out
insl
dec
jbe
cltd
cmp
cmc
subb
jp
xor
add
push
outsb
add
shl
pop
lret
out
sbb
js
adc
inc
inc
xor
cmp
push
or
push
or
add
xchg
out
andb
lahf
call
push
cmpb
pop
add
mov
xchg
enter
add
or
fstpt
movsl
push
add
icebp
aad
movl
in
daa
push
mov
mov
and
cli
add
xor
push
adc
pop
ss
add
iret
jbe
loopne
or
sub
sbb
xor
je
pop
int
push
addb
pop
and
add
lret
cmp
and
adc
inc
and
pop
and
outsl
clc
shr
aas
lock
mov
add
cmpsl
and
das
paddusb
cltd
xor
lods
add
lods
lcall
adc
mov
cmp
dec
pushf
call
lea
cmp
or
cmp
push
pop
sahf
ja
mov
cli
adc
pop
sbb
jne
ret
cmp
sbb
sub
ss
aad
jle
out
mov
pusha
mov
add
or
add
add
imul
xor
and
push
lahf
pop
mov
cmp
mov
fbld
push
sub
xor
pop
dec
arpl
ss
jb
add
xchg
and
or
pop
ds
mov
lcall
adc
lods
jg
add
inc
push
and
mov
xor
jbe
adc
sub
jo
mov
add
add
jecxz
mov
data16
in
loop
sub
jg
pop
jle
mov
dec
and
adc
or
push
jg
add
jmp
adc
fldl
fsubl
dec
shrb
mov
cmpsl
andb
pop
clc
divb
pop
dec
in
push
stc
add
aaa
mov
pop
xchg
add
loop
or
rorb
xchg
or
jle
rorb
jl
popf
mov
in
lods
divb
jle
add
or
pop
mov
sub
popa
add
addr16
jp
in
inc
add
jge
imul
inc
hlt
push
fidivs
cwtl
push
cmp
sbb
loope
and
lret
xor
aas
in
mov
adc
es
mov
insl
adc
shlb
jp
lcall
les
fildl
cmc
jecxz
add
int
sbb
les
sub
add
xchg
jp
push
mov
scas
pop
hlt
bnd
pusha
and
lret
sub
dec
imul
pop
es
push
ret
jnp
and
fwait
add
js
out
mov
xchg
das
in
in
push
mov
push
cmp
icebp
adcb
jle
mov
fldenv
add
daa
sub
or
sub
mov
mov
add
repnz
andb
in
scas
fcmovnbe
xchg
xchg
and
in
xor
mov
xor
inc
pop
add
mov
loopne
xchg
mov
rolb
faddl
adc
out
push
xchg
add
addr16
mov
into
xchg
adc
aam
pop
mov
add
sarl
xor
add
out
loopne
mov
mov
lods
push
add
mov
ds
mov
lods
in
pop
iret
es
push
mov
cmpsb
xor
je
push
sbb
add
pusha
or
or
inc
dec
cs
sbb
shll
or
fs
dec
xor
add
jp
mov
cmp
cmc
lret
add
push
mov
enter
lds
testb
pop
mov
jns
mov
jb
sub
add
shl
push
rcll
clc
inc
add
mov
add
push
jecxz
int
xchg
fbstp
in
mov
outsb
jae
cli
push
leave
std
cwtl
inc
pop
lcall
pusha
add
cmpb
adc
mov
pop
pop
das
add
rclb
add
inc
push
out
test
shr
or
xchg
jb
dec
add
jbe
add
mov
aad
enter
mov
jmp
push
pop
add
or
xchg
sahf
lods
add
add
push
and
int3
jp
push
rclb
inc
add
sarb
pop
mov
mov
sets
sbb
pop
add
add
ss
xchg
or
pop
mov
test
push
or
mov
pop
adc
jg
mov
mov
call
mov
add
inc
or
add
int
ret
popl
clc
xchg
adc
sub
adc
xchg
sub
je
fdivl
push
add
xor
testl
icebp
shl
sbb
mov
add
insb
loopne
sub
add
mov
mov
add
mov
cmp
sbb
cmc
add
pusha
cmp
sbb
cmp
jbe
mov
rcll
sahf
jecxz
add
push
xor
inc
mov
jle
inc
xchg
sbb
adc
iret
int
ss
add
and
push
push
nop
mov
repnz
rorb
mov
test
and
push
cmpsb
adc
or
hlt
push
popf
out
and
nop
push
aam
xchg
dec
cltd
inc
add
lret
ret
cmpsl
xor
fisttpl
jle
dec
adc
add
rcrb
rorb
pop
lret
cli
pop
icebp
scas
mov
push
dec
shr
adc
dec
cmc
sbb
sbb
sub
or
scas
popa
pcmpgtw
mov
and
pop
sbb
in
movsb
rolb
cmp
inc
add
xorb
iret
sti
mov
clc
mov
cltd
dec
pop
aam
cld
add
inc
out
jl
xchg
mov
add
jp
mov
imul
or
push
test
lds
test
pop
dec
inc
hlt
and
pop
dec
jo
int3
pop
add
std
jmp
sub
stc
add
adc
push
clc
mov
lar
cmpsl
inc
jbe
sub
addb
aas
mov
in
out
pop
stc
and
fisttpll
push
sbb
mov
js
jbe
xchg
in
cmp
sbbb
es
push
mov
mov
pop
inc
enter
inc
mov
push
lds
pop
jl
mov
mov
inc
and
cltd
sahf
mov
jmp
mov
sub
mov
xadd
sbb
jns
jb
mov
cmp
imul
xchg
pop
pusha
jo
mov
inc
mov
sbb
mov
and
sar
and
or
xlat
cld
in
aas
jmp
daa
add
mov
cmc
in
insl
fwait
add
dec
imul
xchg
xlat
in
add
adc
adc
sarb
xchg
addb
cmp
cld
add
fdivl
cmp
add
jns
xchg
push
add
mov
adc
pop
mov
test
xor
add
iret
lods
adc
push
fstpt
push
sub
add
mov
test
inc
jo
or
out
mov
add
fidivs
scas
and
xor
pop
push
pop
out
add
shll
adc
sbb
popf
and
and
rolb
repnz
jnp
orb
pop
lcall
data16
lods
xchg
mov
add
sbb
out
push
adc
fadd
push
jb
stos
add
sbb
call
and
jno
sbb
jae
pop
out
push
mov
jl
pop
cltd
xlat
adc
lock
jmp
jno
es
add
cmp
dec
xchg
stc
sub
sub
add
and
mov
fldcw
inc
jne
push
pusha
pop
pop
cmp
test
frstor
add
push
test
or
cmp
lcall
sbb
jg
add
call
add
aas
push
jg
add
push
xor
call
inc
iret
xchg
pop
dec
out
fsubrl
sub
adc
inc
mov
or
sbb
or
adc
inc
add
std
cmc
lahf
sub
jo
mov
or
sbb
xor
cs
push
fsubrl
adc
addr16
inc
outsl
add
xchg
push
inc
rorl
outsb
sub
sbb
mov
test
loope
mov
es
call
inc
push
imul
xchg
adc
inc
movsl
fcompl
and
dec
imul
xchg
ja
push
cld
xchg
add
sub
add
add
pop
cmp
inc
add
popf
add
mov
mov
scas
js
push
ja
pop
movsl
pop
push
mov
inc
mov
pop
arpl
mov
sahf
mov
rclb
lahf
es
cmp
jg
in
lret
add
mov
add
mov
and
jbe
add
loopne
mov
inc
roll
ror
cli
mov
ljmp
inc
lret
pop
fiadds
pop
stos
or
cmp
in
and
shlb
xor
sbbb
pushf
dec
adc
push
loopne
xchg
call
fstpt
mov
lcall
in
lret
enter
aaa
dec
movsb
jns
arpl
loope
movsl
lock
lock
shlb
jnp
cmp
cwtl
dec
mov
sub
xchg
add
cs
jo
mov
jne
stos
xor
inc
jo
jl
sub
fimuls
mov
fisttps
xor
fwait
push
pop
outsl
cmp
or
subb
out
fdivrs
jno
cmpsl
loopne
inc
pusha
outsl
add
sbb
add
mov
add
popl
adc
sar
add
cmc
mov
xchg
xor
jp
dec
je
jb
dec
push
xchg
sbb
add
add
iret
xchg
adc
popa
cmc
fdivr
xchg
cmovbe
xor
inc
and
add
add
pop
jbe
lea
inc
and
add
adc
jnp
imul
jl
add
push
pop
pushf
fidivs
hlt
mov
pop
adc
into
jg
clc
mov
xor
in
dec
in
inc
mov
cld
adc
fstpl
lfs
test
aaa
and
sub
subb
add
xor
or
jge
xchg
mov
jp
dec
push
sbb
andb
adc
add
es
in
jnp
add
lods
sub
bound
xchg
cli
es
dec
add
and
test
mov
adc
orl
add
notb
sbb
adc
jecxz,pn
int3
adc
je
pop
or
outsb
push
push
arpl
aas
jne
pop
pop
mov
and
push
xchg
movsb
loopne
push
add
fadds
mov
mov
mov
into
inc
andl
lcall
repnz
loop
add
or
pop
jae
sbb
mov
sub
jle
loopne
rcr
add
test
or
fs
sub
jae
test
add
xchg
mov
inc
mov
add
pusha
sbb
dec
pop
aaa
enter
outsl
add
pop
mul
nop
cmpsb
mov
add
imul
in
clc
lods
push
pop
push
outsl
or
xor
mov
out
pusha
pop
loopne
cmpsl
jno
in
enter
push
sbb
stos
dec
dec
notb
lea
test
lret
mov
arpl
push
aam
decb
xchg
les
cmc
sub
cmpl
loopne
sub
cmp
repnz
dec
test
push
daa
xor
decl
sub
psubq
and
jne
add
icebp
rcrb
mov
add
jne
xor
xchg
lods
push
add
pop
clc
mov
bnd
or
pop
xor
fnstsw
jo
jg
iret
add
pop
pusha
test
push
mov
js
lock
pop
lret
pop
mov
jp
add
cli
sarb
cmp
movsb
add
pushf
inc
pop
ret
xor
cmovnp
adc
jecxz
pop
push
call
pop
add
and
or
jecxz
loopne
fcoms
add
inc
cmc
pop
jl
add
pop
pop
adc
inc
imul
mov
dec
roll
cltd
cmpsl
push
cli
adc
dec
mov
fiaddl
xorb
cmp
lods
adcl
pop
add
xchg
fidivrl
movsb
out
and
add
jl
xor
shrl
mov
xchg
ret
and
cs
pusha
test
xlat
add
cmp
sbb
sub
xor
fs
or
xchg
js
fcoms
sub
mov
dec
add
xchg
out
jb
add
push
push
lret
std
test
push
nop
adc
mov
xor
add
sti
mov
shrb
scas
ret
jo
pushf
jmp
add
mov
jnp
or
xchg
pusha
mov
outsl
sub
push
and
jae
jno
pop
aad
movb
test
pop
push
std
add
insb
data16
pop
loope
pop
in
xchg
xchg
xor
aaa
mov
loopne
ret
lahf
add
mov
in
clc
daa
xchg
and
in
add
xchg
test
xor
add
int3
add
decl
outsb
jb
cwtl
push
add
dec
jns
add
adc
jle
add
in
aaa
ret
jbe
mov
push
inc
inc
add
imul
inc
cmp
ja
in
add
call
dec
push
lods
andb
dec
jno
aas
pop
jp
test
mov
or
in
add
stos
out
clc
aam
add
xchg
loope
shrb
add
pop
sbb
arpl
test
cmp
daa
push
jp
nop
mov
js
outsb
push
je
sbb
leave
mov
in
mov
cmp
add
loope
fucom
std
add
pop
and
cs
mov
mov
add
jno
xchg
in
fucomi
jg
mov
cwtl
sub
dec
popa
mov
std
mov
movsl
add
in
jbe
adc
call
pop
or
leave
mov
xlat
add
add
movsb
call
je
hlt
out
push
mov
aaa
and
adc
add
mov
stos
xor
fmul
test
ds
sti
mov
and
enter
add
stos
inc
in
adc
pop
insb
push
arpl
mov
cmp
mov
in
lret
add
outsl
fcomi
add
out
test
imul
dec
xor
mov
sub
pop
sbb
pop
sub
rcr
pusha
jle
dec
mov
jae
jb
and
lcall
xchg
add
inc
ds
ss
push
push
add
push
and
adc
pop
dec
cmp
sbb
jg
push
push
xchg
cmp
push
in
inc
jg
add
pop
andb
xchg
add
lcall
nop
pop
add
ret
fs
fldcw
addr16
insl
mov
or
jg
gs
pusha
je
es
push
or
cmpb
and
and
out
sti
scas
testl
jae
push
push
mov
add
sbbl
vpunpckldq
add
push
flds
hlt
inc
xchg
repnz
add
mov
cmc
pop
ds
sbb
mov
ljmp
ror
jge
mov
gs
inc
hlt
aam
fildl
cmpl
inc
and
pushf
xchg
leave
call
popa
lock
sti
push
mov
lret
push
mov
add
int
add
mov
in
jmp
add
dec
or
sbbb
stc
add
outsl
mov
mov
pop
dec
mov
js
inc
push
push
lds
sahf
add
lods
dec
aas
jmp
sbb
pusha
subb
pushf
lcall
push
das
andb
cmc
cli
fiaddl
out
mov
push
dec
pop
test
pop
imull
or
lock
add
adc
lcall
pushf
add
ss
loopne
sbb
add
dec
push
mov
xor
pshufw
jecxz
dec
in
mov
push
add
lahf
adc
or
fildl
and
and
or
jne
ficoms
push
je
add
dec
mov
popw
mov
mov
lock
cli
push
dec
sbb
jnp
sbb
add
test
cli
int3
jnp
lahf
pop
icebp
pop
mov
mov
push
outsl
mov
ja
ret
lock
icebp
fcompl
push
int3
les
jp
sbbb
insl
out
sbb
add
add
loopne
data16
push
dec
aad
lds
lret
addb
outsl
out
add
push
push
pop
add
and
cli
cmovnp
roll
mov
cmp
add
xor
shrb
push
aaa
inc
sub
div
jns
jns
movsb
inc
add
sahf
lahf
inc
inc
out
cmp
add
pop
xchg
test
negb
pop
sbb
jg
loopne
mov
in
add
adc
or
xor
sbb
or
inc
outsl
pusha
jb
adc
dec
adc
pop
mov
outsl
popf
adc
jae
jge
add
xlat
cmp
and
push
adc
add
or
jecxz
pop
js
hlt
subb
and
push
inc
lret
push
incl
jecxz
sbb
out
mov
xor
jmp
xor
dec
pop
divl
loopne
aad
jno
insb
pop
push
xor
jne
imul
sbb
sub
ret
andb
sarb
and
scas
insl
sbb
push
ret
scas
cwtl
mov
adcl
dec
insb
mov
xor
xor
addb
pop
jne
xor
pop
and
cs
ds
jg
and
lock
outsb
clc
cmp
ret
call
jp
sub
jbe
cli
push
aam
ds
pop
inc
movsb
pushl
add
je
xchg
scas
xor
js
add
shrb
into
inc
pusha
jle
iret
in
sub
add
outsb
jo
xchg
push
adc
add
or
add
pop
mov
add
lods
pushf
ret
jae
bound
loopne
frstor
out
add
push
ljmp
push
push
pusha
aad
pop
add
std
das
lret
pushf
adc
rcll
lods
mov
mov
xlat
add
sub
jae
mov
in
into
adc
pop
xchg
mov
xchg
jle
mov
dec
fadds
sub
stc
sbb
xor
dec
icebp
lret
push
hlt
pop
out
and
insb
aas
out
add
ljmp
cmpsb
inc
imul
pop
les
ljmp
js
add
xor
pop
cmp
fiadds
mov
cmpsb
std
jbe
mov
add
jle
shl
leave
arpl
mov
adcb
popa
cltd
inc
or
xor
jp
cli
dec
stos
sbb
mov
sahf
mov
fsub
xchg
mov
xor
and
mov
js
lock
cmp
inc
xchg
add
or
or
add
sbb
xchg
js
aaa
xchg
add
mov
add
mov
mov
xchg
jbe
mov
lods
xor
pop
mov
or
add
mov
push
add
cmp
sbbb
shrl
rcrl
mov
xor
push
pop
push
pop
push
sub
jbe
loop
cltd
push
sarl
int3
dec
or
or
mov
inc
maxps
bound
push
pop
mov
add
adc
dec
sti
jb
js
add
pop
or
mov
fnclex
or
ljmp
insl
daa
pop
pop
jle
sbbb
pop
add
js
adc
faddl
push
shrd
sub
jge
add
mov
push
xchg
or
ror
and
mov
in
and
sub
add
sar
lret
sub
sub
sbb
nop
cmp
add
cmp
sub
inc
sub
rolb
mov
add
ja
sahf
cwtl
inc
jg
add
cli
and
and
add
test
pop
adc
jnp
add
pushf
stos
lds
mov
enter
in
xor
arpl
add
push
mov
mov
ret
sbbb
fwait
stos
mov
nop
xchg
fsubl
or
mov
ret
mov
sbb
fcoms
jecxz
push
dec
movsb
das
add
cli
inc
jns
xor
mov
mov
arpl
ret
sub
add
pop
jg
mov
mov
fnstenv
cmp
pop
add
push
imul
push
gs
inc
add
fisubrs
add
jp
loop
and
sahf
sbb
add
daa
pop
imul
or
aaa
and
inc
mov
jge
cmp
enter
xor
inc
repnz
add
push
inc
mov
sbb
outsb
adc
je
sti
push
sub
pop
xor
add
mov
or
dec
pop
add
icebp
test
push
adc
aas
inc
and
idivb
mov
out
add
lret
js
dec
xor
mov
subb
add
push
loopne
ja
xchg
cli
arpl
and
xorb
adc
jmp
add
fidivrs
mulb
pop
sbb
fldl
rcrb
xlat
sti
add
sarb
add
subl
fistps
mov
or
sub
mov
push
pop
mov
in
rorl
jns
add
inc
jae
jns
add
and
xchg
or
push
das
insl
add
dec
mov
add
repnz
mov
jb
ss
mov
imul
jae
push
filds
sub
jle
test
dec
in
jmp
aam
sub
rolb
clc
dec
sbb
pop
push
test
sar
lcall
dec
mov
bound
jb
dec
add
and
leave
hlt
fcomp
push
inc
add
lret
lods
pop
iret
mov
pusha
add
push
mov
ja
pushf
fimuls
jl
out
sbb
xchg
sbbl
jb
xchg
adc
fildll
mov
mov
cmc
hlt
data16
add
out
es
sahf
pop
outsb
cmp
in
mov
enter
add
nop
sbb
xchg
das
roll
cmp
or
leave
daa
or
mov
push
lret
into
insb
pusha
xor
add
jmp
mov
push
pop
call
lods
add
jecxz
dec
add
cltd
cmp
aaa
test
add
add
mov
add
xchg
push
clc
push
movsb
call
stos
xchg
pop
dec
xchg
mov
and
pushf
test
pop
inc
aas
mov
ret
sub
mov
mov
fsubl
push
inc
fprem1
lcall
bnd
mov
insb
pusha
in
inc
xchg
js
add
xchg
data16
adc
add
roll
mov
xor
stos
lahf
adc
nop
add
xor
scas
push
sub
popf
sub
mov
mov
cmp
sub
lock
test
and
add
xlat
or
jp
out
outsl
in
fmuls
adc
push
xchg
loopne
insb
ljmp
in
imul
fwait
lock
or
int
jo
fldt
add
inc
jge
push
mov
pusha
inc
and
and
sbb
imul
dec
gs
aad
inc
stos
xchg
icebp
test
clc
mov
or
ljmp
jg
faddl
xchg
cmp
sbb
jl
add
cld
xor
and
mov
xor
dec
subb
cmpsb
mov
xchg
popa
rcrl
xchg
es
in
cmc
push
xchg
cld
dec
add
push
add
sub
leave
test
lock
ss
add
jo
jns
mov
xchg
add
mov
or
popa
sub
lret
stos
rcll
add
sbb
push
jae
jno
dec
adc
xor
lods
ljmp
inc
lds
stos
xor
jmp
movsb
mov
test
add
iret
arpl
push
or
jmp
dec
dec
pop
sub
xor
add
inc
shll
push
mov
or
imul
mov
xchg
add
mov
adc
xchg
jmp
fnsave
lock
push
in
cmp
loope
and
xor
adc
leave
and
lret
inc
loopne
sbb
and
cmpxchg
add
push
std
push
add
hlt
pushf
ja
dec
lahf
leave
pop
pusha
dec
shr
push
aas
test
add
int
in
fdivrs
lea
mov
mov
sbb
mov
scas
push
insb
sbbb
cmp
or
or
mov
rcll
das
xor
push
test
xor
insl
jmp
rcll
cmp
cli
cld
mov
push
push
inc
hlt
inc
xor
jg
test
in
dec
mov
add
lea
pop
add
xlat
and
jl
dec
mov
sbb
and
call
cmpsl
into
mov
mov
add
mov
sbb
fistpll
insl
loope
add
mov
and
rclb
mov
loop
push
cltd
leave
add
sbb
xchg
add
jae
jno
or
popa
add
cwtl
jnp
mov
scas
add
xlat
fwait
xchg
jge
cmp
add
add
mov
adc
dec
cmpb
jbe
bound
mov
and
jo
mov
mov
test
sub
jg
dec
or
pop
push
stos
xorb
push
push
aad
pop
lods
out
enter
negl
insb
jecxz
add
pop
pop
mov
pop
xchg
adc
jp
lods
mov
add
sbb
inc
pop
fwait
pushw
sbb
pop
add
sbb
push
cwtl
pusha
scas
pop
and
push
int3
into
andb
data16
dec
xor
pop
add
push
xchg
dec
inc
jl
add
je
add
mov
add
and
sub
ja
add
pop
gs
js
orb
and
inc
jns
scas
lcall
or
mov
movsb
mov
lods
cmp
cmp
add
cltd
cli
add
dec
out
shlb
and
or
adc
cmpsb
dec
clc
aas
cltd
cmp
testb
test
or
dec
lret
adc
sub
add
push
xorb
insl
adc
jl
add
negl
sbb
or
mov
adc
ja
add
dec
out
jb
movsl
mov
sub
stc
fwait
xchg
mov
xorl
mov
movsb
int
out
add
jb
or
pop
xor
cmp
jno
jae
mov
nop
pop
int3
lock
jbe
push
or
sub
dec
adc
das
add
pop
xor
daa
aas
adc
xorb
sub
mov
ret
test
sar
into
add
dec
std
in
dec
jg
inc
or
add
mov
popl
push
std
mov
adc
xchg
add
dec
addr16
repnz
mov
and
loopne
mov
jle
ret
cwtl
repnz
inc
cmp
mov
add
les
in
loope
sbb
add
dec
cmpb
mov
push
xorl
fimull
or
add
insb
sbb
and
lods
ret
mov
dec
cli
add
out
stos
stc
ja
sbb
adc
mov
lods
in
adc
popa
cmpsl
push
sti
mov
mov
lahf
mov
sbb
test
sbb
push
add
mov
loop
add
call
lcall
sahf
lods
sti
jmp
das
add
push
div
xor
gs
mov
subb
les
int
dec
and
bound
mov
aad
inc
dec
lock
add
fstl
ss
push
sti
mov
sub
sbb
mov
sub
jle
sahf
add
testl
adc
pop
mov
push
jl
add
push
sarl
sub
jnp
jl
rorl
or
mov
test
sbb
out
sti
pop
movsb
imul
mov
sub
mov
loop
dec
jae
stc
sbb
and
mov
enter
pop
loop
call
add
pop
jbe
pop
cmpsb
popf
jle
mov
sub
fcompl
xor
dec
mov
mov
stos
push
push
ds
adc
add
jle
and
loop
lret
or
mov
sub
mov
in
fcoms
jo
sbb
ss
shrb
sahf
pop
test
xor
es
xor
add
outsl
outsl
pusha
clc
inc
lea
cwtl
sti
shlb
or
add
fisttpl
pop
add
lock
les
insl
shlb
inc
aad
out
add
adc
andl
xor
loop
inc
dec
mov
add
lods
push
add
sbb
cwtl
int
jmp
mov
ret
xor
add
in
stc
mov
pop
inc
in
add
shlb
mov
iret
jb
pop
incl
in
pop
or
aaa
imul
in
add
outsb
add
in
lods
lea
loopne
sub
cmp
int
roll
cmpsl
aaa
mov
push
stos
jecxz
rorb
sahf
mov
in
cmp
jmp
adc
je
or
dec
xor
fisubrs
adc
out
outsb
clc
add
inc
dec
adc
push
add
mov
lidtl
sub
lods
jns
lods
pop
inc
and
sub
ret
add
jne,pn
xchg
adc
pop
jnp
sbb
and
xor
mov
add
popa
int3
push
xor
out
jo
sahf
imul
pop
sub
push
or
das
sysret
stc
es
repz
cmp
ret
push
mul
cwtl
mov
sbb
mov
cld
mulb
mov
lods
jae
pusha
mov
mov
add
jo
and
add
add
mov
adc
or
arpl
jbe
enter
mov
aaa
test
inc
out
xchg
push
mov
enter
pusha
or
push
dec
enter
push
shlb
adc
add
imul
mov
cmpb
pmaxub
push
cmp
out
push
sbb
lret
orb
xor
sbb
aam
mov
pop
mov
push
bound
imul
xchg
sub
pop
cmp
nop
add
dec
daa
sub
in
ja
sbb
ljmp
sub
adc
sarb
fdiv
and
jmp
filds
call
sbb
add
jne
pop
push
push
test
pop
xor
dec
movsb
icebp
xor
in
arpl
leave
clc
stos
out
int
sbb
repnz
and
lret
xchg
movsl
dec
aad
insl
jmp
mov
scas
nop
or
aaa
sbb
jbe
add
adc
cmp
xor
cld
add
mov
cltd
jno
arpl
fildl
jnp
into
sti
movsb
xchg
inc
repnz
stc
lret
push
or
push
push
rcl
or
cmpsb
push
addb
loopne
or
jle
pop
mov
or
orb
sbb
sbb
mov
ret
sarb
add
hlt
dec
or
inc
dec
dec
fstl
and
adc
movsb
cmp
sbb
lods
shll
push
sbb
inc
xchg
cmpb
and
inc
ds
lea
sti
push
in
pop
outsl
mov
mov
push
xor
mov
sub
js
sbb
xor
push
xor
xor
adc
fildll
insl
jae
popf
mov
push
or
data16
aas
and
or
add
testl
lahf
test
add
ss
and
mov
mov
mov
xchg
pusha
dec
jle
xor
sbb
loope
mov
mov
lds
iret
mov
cli
les
mov
scas
add
hlt
cmp
andl
mov
shr
out
lcall
shrb
jecxz
and
stos
out
call
les
ss
pop
jo
add
and
mov
mov
xor
push
add
adc
adc
loopne,pt
pop
add
mov
aaa
cmpsl
pop
cmp
mov
mov
add
imul
add
jmp
jnp
mov
insb
into
cmpb
push
shll
jmp
push
gs
shll
mov
aas
xorb
or
insb
sbb
sub
mov
cmpsb
or
mov
add
scas
jecxz
enter
cwtl
movsl
add
test
lea
loope
mov
push
icebp
jp
mov
subl
add
lods
mov
fwait
in
cli
xchg
pop
pop
cmp
dec
xchg
sbbb
shlb
clflush
loope
xchg
ss
js
in
out
repz
cld
add
popa
stos
pushf
mov
add
mov
push
mov
or
add
int3
add
push
mov
and
inc
cltd
add
insb
mov
sub
add
arpl
nop
clc
push
jo
mov
cld
cmp
orb
icebp
mov
rcrl
inc
imul
add
cmp
int3
push
sub
cwtl
push
add
js
fchs
scas
add
dec
notl
pusha
mov
xor
outsl
mov
shlb
fistl
clc
inc
cmp
cmpl
adc
nop
test
jge
arpl
sbb
ja
and
xor
jmp
mov
loopne
xchg
add
outsl
addr16
dec
sub
and
mov
add
or
iret
pop
mulb
dec
test
cs
movsb
adcb
inc
add
push
and
mov
push
outsb
jecxz
jmp
out
popa
add
lock
inc
movsb
lret
pop
sbb
inc
add
rorl
inc
add
push
daa
mov
and
add
les
cmpsb
ljmp
es
pop
jo
vmread
leave
mov
xchg
add
push
inc
mov
in
inc
add
sbb
add
jmp
call
add
loopne
pushf
dec
pop
xlat
add
mov
enter
fildll
and
pop
cmp
je
fcoms
dec
and
rolb
insb
pop
je
popa
and
jp
subl
fsubrs
adc
cmp
add
into
and
dec
je
pop
jnp
xor
out
inc
sbb
jmp
add
pop
cmc
add
test
aas
add
jge
mov
call
mov
cmpsl
test
pop
das
pop
dec
xchg
mov
in
fwait
mov
daa
sbb
cli
jecxz
ss
sub
mov
ret
rolb
or
loope
add
push
xor
jp
fcoms
shll
out
xor
sub
push
pop
mov
cmp
mov
rolb
fistpll
lea
xchg
sahf
dec
fiaddl
mov
hlt
cs
add
jns
mov
jo
mov
out
ja
call
jp
jns
push
int
sbb
sub
pop
cmp
add
outsb
loope
push
testl
fmul
dec
add
cmc
mov
mov
jae
ficomps
dec
ret
push
xor
leave
fsubrs
lock
test
jmp
cmp
int3
mov
shll
add
inc
arpl
xor
leave
out
push
dec
sahf
or
stc
dec
sub
clc
xchg
add
in
es
mov
dec
pop
bound
mov
pushf
jo
add
cmpl
mov
push
les
mov
mov
pushf
cwtl
add
insl
fidivs
out
loopne
loopne
add
mov
enter
cld
or
xor
push
mov
js
and
add
lock
jae
cmp
popl
cmp
loop
add
mov
jb
ret
jo
enter
add
xchg
pop
icebp
add
cmc
mov
mov
inc
lods
pusha
js
int
in
pop
enter
xlat
lret
add
pop
hlt
cmp
clc
add
loope
add
hlt
ss
add
dec
xchg
scas
add
mov
pop
add
das
push
inc
mov
push
rolb
call
inc
lea
cmpsl
xor
add
jbe
ret
push
add
insl
call
addr16
mov
inc
test
popf
add
arpl
andl
adc
lcall
and
inc
dec
adc
jp
mov
push
pushf
nop
daa
test
test
xchg
and
and
addr16
adcb
and
and
adc
adcb
and
and
adc
repz
call
dec
sub
mov
jmp
mov
adc
fsub
addb
test
push
cmpsl
add
jns
cmp
mov
pop
adc
add
stos
lret
popa
mov
imul
or
in
cmp
cmc
pop
pop
in
cmpsl
jnp
add
insb
rclb
add
push
dec
push
mov
jne
movsl
loop
rcl
jecxz
add
adc
mov
aad
add
ljmp
shlb
arpl
xchg
jle
insb
sbb
lret
test
jne
insl
sbb
into
int
adc
adc
and
arpl
cld
out
add
loop
hlt
mov
ret
xchg
icebp
dec
pop
mov
jl
lds
cmp
ja
add
push
scas
popa
add
mov
jmp
pop
pop
dec
iret
ja
shlb
add
icebp
xor
aam
add
xchg
shl
ror
jl
jp
add
out
ds
add
fisttpll
outsb
add
jnp
insl
es
dec
loopne
ds
dec
add
aad
loop
or
scas
cltd
mov
sbbb
movsl
fsubs
dec
ret
add
pop
cltd
mov
out
enter
int3
pop
mov
and
ret
or
jecxz
dec
dec
jl
shll
jns
sub
loope
add
iret
dec
outsb
je
add
mov
or
in
add
js
sbb
lds
xchg
lock
testb
inc
jb
jne
repnz
pushf
hlt
enter
jo
popf
je
mov
cmp
in
xlat
repnz
imul
movsb
int3
xor
xchg
fdivs
sahf
add
jg
or
cwtl
add
iret
cmp
dec
sub
mov
xchg
adc
inc
stc
int3
imul
add
push
iret
lret
cmpsl
add
mov
add
sub
inc
jne
or
loop
mov
insb
orl
add
sahf
pinsrw
or
pop
adc
aad
das
push
add
pusha
push
mov
adc
mov
int3
add
mov
mov
sub
orb
aaa
or
lahf
test
inc
std
pop
adc
ss
push
dec
cmp
lret
adcl
cmp
mov
aas
mov
push
movb
add
pop
rolb
out
push
add
jle
shrb
outsl
add
pop
ud2
push
push
xchg
add
insb
rorb
in
lock
aas
rorl
ja
movsl
mov
out
dec
add
inc
dec
push
sbb
xchg
jle
xchg
mov
dec
cmp
add
pop
mov
add
adc
and
lret
jo
lea
dec
adc
xlat
add
and
inc
popa
ds
movsb
mov
add
sub
movsl
ret
jg
inc
int3
cmp
dec
pop
rolb
inc
xchg
mov
pusha
movsl
fidivl
add
push
jae
imul
stos
xchg
push
in
xchg
call
sarb
sbb
and
bound
fimull
dec
inc
add
pop
dec
dec
das
or
incb
inc
or
fcmovnb
loopne
lods
sbb
outsb
push
jl
sarl
jge
cwtl
test
mov
add
aas
loopne
mov
lods
dec
lret
les
mov
mov
pusha
insl
jnp
xchg
repz
outsb
add
jbe
dec
adc
cmp
sbb
scas
pop
outsl
sub
cmp
xchg
sbb
add
inc
cmpsb
arpl
add
dec
sbb
or
in
mov
test
mov
or
inc
out
sbbl
aas
mov
in
push
adc
jmp
cmp
xchg
int3
fisubl
in
hlt
add
scas
sbb
add
cmp
loop
bound
inc
add
mov
mov
or
mov
mov
call
daa
add
jo
dec
jno
add
inc
repnz
mov
pop
cmp
mov
into
gs
mov
mov
add
es
test
adc
loop
cmpsl
cli
mov
push
fcoms
add
imul
cmp
xchg
and
add
sbb
leave
jmp
jno
fsubs
add
stos
sub
xchg
test
pop
add
jo
push
test
setno
xorb
leave
push
mov
and
aaa
add
incl
pop
adc
push
inc
pop
cmpsl
ja
cwtl
in
iret
cmp
shlb
pushf
sbb
xor
fdivs
inc
jbe
out
adc
xchg
pop
test
int3
xchg
pop
pop
test
and
test
mov
adc
rcll
adc
sbb
xlat
std
bound
loop
add
dec
and
mov
sbb
lods
and
inc
add
dec
fimuls
xchg
jle
nop
or
xor
sub
adc
imul
add
xchg
ret
cmpsl
out
pusha
loope
test
std
aam
xchg
jne
xor
fwait
add
lods
mov
push
fiadds
xor
xchg
mov
xchg
sbb
or
xor
jne
cmpsb
mov
fimull
jmp
pop
orl
add
fbstp
arpl
popa
andb
add
xchg
adc
imul
das
daa
mov
pop
sbb
mov
loop
push
mov
stc
addb
iret
int3
call
ss
sahf
roll
cmp
in
sub
pop
pushf
sti
loopne
pusha
out
rolb
fs
mov
mov
stos
cmp
sub
sub
add
aad
push
popa
and
jo
sarl
inc
or
sub
enter
xchg
in
hlt
je
les
dec
imul
adc
mov
xor
js
mov
add
xchg
inc
inc
mov
mov
xor
mov
jge
xchg
push
cmp
jge
jg
lods
cmp
imul
ret
add
add
jb
sahf
and
xchg
dec
or
jno
roll
repnz
push
add
add
sahf
data16
rclb
cmp
mov
shrb
movsb
cmp
in
iret
or
mov
xor
cmp
arpl
pop
sub
pop
cwtl
cmp
fs
sub
mull
into
inc
test
cmp
cltd
jnp
xorb
cmp
ljmp
lock
test
pusha
add
add
mov
lods
ret
xor
cli
xlat
jg
cmp
xchg
add
pop
daa
sub
xchg
push
mov
pop
enter
pop
lret
push
sbb
pop
add
push
pushf
pusha
cmp
pop
sub
movsb
subb
xlat
push
adc
out
mov
sub
loop
scas
jo
pusha
les
and
dec
movsb
mov
inc
jle
test
sbb
mov
add
dec
mov
pop
push
pop
test
les
imulb
jno
jne
int
mov
insl
pop
sbb
imul
cli
dec
fdiv
push
dec
packsswb
jmp
inc
andl
adc
ljmp
xchg
test
hlt
lahf
push
fwait
movsl
sbb
aas
jp
jnp
add
nop
bound
stos
xor
lock
sub
add
mov
out
xchg
sti
inc
lods
cli
ss
adcb
and
add
popf
mov
scas
jns
call
mov
push
sbb
shrl
xchg
cmp
mov
fiadds
mov
mov
cmpsb
js
cmpsl
sahf
xchg
pop
out
test
jo
ret
add
adc
in
add
lock
add
inc
aam
call
popa
jb
adc
nop
add
pushf
or
dec
and
mov
sub
outsb
adc
and
shr
fs
jg
jo
add
das
mov
movl
fists
xchg
add
cld
jo
and
insb
add
call
xor
push
sahf
xor
push
mov
push
lea
jo
lret
push
push
mov
subb
arpl
test
inc
jbe
inc
cmp
dec
inc
ffreep
add
push
xlat
leave
pop
outsl
shlb
rcll
adc
arpl
add
sbb
jg
lret
jb
pop
sbb
sahf
out
mov
insb
jl
dec
and
aad
out
pop
add
stc
push
xor
mov
cld
mov
icebp
add
ljmp
dec
cmp
pop
loopne
add
add
cltd
pop
in
lret
cmp
add
adc
or
cwtl
aaa
std
flds
cmp
jge
mov
andb
or
mov
or
es
dec
jbe
add
fisubs
mov
mov
jmp
sbb
in
or
fistps
fdiv
imul
sbb
fs
vpunpcklbw
std
jnp
jmp
mov
xorl
shrb
sahf
pop
in
xchg
add
or
shrb
mov
jo
lods
shrb
push
orl
andb
pop
js
inc
rcl
or
push
sti
test
mov
ja
add
or
sub
scas
or
nop
shl
ds
or
pop
add
add
inc
int
push
push
movb
jns
lods
adc
jle
sub
lret
shlb
mov
adcb
xchg
inc
jp
add
lds
xchg
dec
inc
movsb
fcmovne
xor
lahf
jo
out
sbbl
std
push
clc
daa
or
push
and
inc
shlb
aas
mov
add
jle
test
sbb
rorl
sahf
cmp
xchg
dec
xchg
push
addb
lods
or
fmuls
add
aam
mov
jecxz
add
hlt
cmc
and
cmp
fsubs
or
or
ss
mov
pop
mov
inc
sahf
mov
lret
insb
rol
cmp
dec
es
dec
push
push
fs
jl
popa
sbb
mov
push
test
jle
hlt
decb
jmp
or
pop
ret
inc
add
mov
mov
jmp
outsl
notb
inc
in
rcrb
add
mov
or
cmp
cs
xor
pop
pop
add
jle
push
mov
test
inc
add
fwait
test
sub
inc
fdivl
aas
xchg
inc
add
sti
add
testb
inc
adc
nop
adc
out
mov
add
push
push
ret
sbb
add
aas
dec
in
mov
add
pop
test
sub
lods
mov
add
pushf
mov
adc
push
add
test
sub
shrb
je
popf
mov
aad
pusha
icebp
mov
xchg
xchg
xor
lret
mov
pop
add
das
push
out
pop
rcrb
jno
and
int
push
xchg
pinsrw
add
ret
std
jb
in
ss
push
inc
clc
imul
pop
jl
daa
and
mov
or
movsl
jno
xchg
push
pushw
inc
dec
enter
jp
push
adc
add
mov
lret
pop
pop
xchg
or
xchg
icebp
sub
call
pushf
add
add
in
nop
sbb
cld
jnp
or
test
cmp
std
add
dec
insb
iret
mov
das
inc
or
dec
adc
inc
out
addb
addr16
nop
hlt
cs
add
mov
jnp
cwtl
jo
cltd
outsl
dec
add
sbb
rolb
adc
cmc
addl
mov
mov
cmpsb
es
sbb
mov
add
jecxz
nop
jb
lds
and
stc
and
push
xchg
mov
jmp
add
nop
cli
inc
repz
jo
mov
lret
mov
stos
in
mov
sti
in
mov
jmp
push
push
xor
push
or
mov
or
xchg
push
add
in
add
add
les
loope
sbb
sbbl
sahf
bound
and
inc
cmp
push
rolb
push
ja
outsl
pusha
dec
mov
push
or
out
out
dec
jmp
cmp
xchg
cmp
ffreep
cmp
inc
fs
sub
sub
das
test
pop
shll
mov
cmp
inc
push
mov
lea
shlb
dec
add
inc
or
jmp
iret
aas
lcall
xor
xchg
mov
das
mov
mov
xor
add
add
in
fstl
call
dec
insl
movsb
add
repz
inc
lods
push
mov
cmp
add
mov
xorb
cltd
add
add
sbb
add
enter
lods
pushf
xchg
clc
adc
jmp
addb
popf
push
mov
add
enter
repz
and
dec
cmp
lret
cmp
add
pop
cwtl
daa
add
push
decl
mov
add
loopne
roll
add
xor
cmp
xchg
add
sbb
int3
mov
add
and
jo
sub
scas
inc
cli
inc
aad
xchg
or
cmp
out
dec
or
mov
inc
cwtl
addb
cltd
mov
or
push
push
imul
enter
into
mov
push
rol
mov
or
jns
mov
mov
lret
xor
or
in
popf
push
je
lods
mov
pop
inc
arpl
adc
stos
pop
cmp
rolb
dec
out
lods
sarb
sbb
xchg
and
jo
sbb
inc
mov
pusha
ss
xor
dec
adc
add
lret
in
dec
jb
and
xchg
mov
pushf
hlt
add
add
decb
and
add
or
test
jg
push
arpl
add
das
sub
popf
out
bound
sahf
enter
or
push
add
xchg
out
dec
xchg
js
or
sub
es
aam
and
sbb
cmc
outsb
lods
add
shlb
sbb
fsubrs
out
add
sub
fnsave
add
inc
insl
outsl
xorl
rcll
fs
push
pop
sbb
rcr
and
sqrtps
dec
sub
dec
fiaddl
push
adc
pushf
add
and
clc
ret
sbb
add
sub
and
pop
or
mov
addl
add
adc
lret
push
iret
inc
dec
cli
cmp
cmp
xchg
add
ret
out
jecxz
stos
xchg
popa
push
add
jmp
xor
add
pop
rclb
add
outsl
sbb
mov
adc
xchg
gs
dec
cmpsl
les
mov
lock
insl
or
fcompl
and
movsl
stos
and
xor
mov
or
std
xor
fwait
push
pop
loopne
add
ljmp
dec
push
sub
mov
sub
pop
and
xchg
pusha
inc
lds
pop
xchg
pop
sub
ret
lahf
divb
pshufw
fwait
add
fadd
sbb
icebp
cmp
pop
sbb
mov
mov
pop
fsubl
and
mov
ret
in
dec
adc
addl
pop
or
add
movsb
push
nop
test
scas
loop
or
arpl
sub
push
pcmpeqd
inc
rclb
vmwrite
ja
mov
add
stos
cli
cmp
push
mov
es
xchg
sub
or
add
mov
mov
dec
sahf
ror
out
sub
vmovdqa
add
insb
inc
mov
leave
pop
test
jl
and
nop
dec
and
lahf
cmc
sub
add
mov
or
cmpsb
daa
loope
nop
add
add
jne
aam
sub
add
xchg
sbb
insl
movsb
jno
fiaddl
fs
add
mov
jp
xchg
xchg
add
pop
into
aad
add
lock
sub
cmp
cwtl
rolb
daa
sub
and
mov
pop
cmp
dec
iret
or
and
shrb
add
xchg
aas
aaa
cmp
addb
pop
jo
inc
inc
add
xor
pop
rorb
xor
inc
jmp
adc
mov
mov
test
aaa
mov
cmpsb
subb
xchg
add
push
fwait
js
sub
pusha
lods
mov
xor
outsl
pusha
test
call
inc
sbb
dec
or
mov
add
fwait
jle
mov
xor
sub
clc
dec
cmp
jb
xchg
add
add
xchg
inc
or
addb
flds
dec
ret
add
sub
enter
clc
gs
es
push
mov
add
leave
jmp
push
add
pop
push
aam
subl
pop
loopne
push
dec
daa
xlat
mov
and
push
lahf
adc
add
test
jmp
inc
fcoms
fsub
repnz
fldenv
mov
mov
add
loopne
movlps
mov
lock
dec
pop
sarl
lds
pop
add
pop
mov
mov
lods
and
lea
fwait
andl
test
cli
xor
mov
ds
cmp
rolb
mov
dec
add
mov
and
imul
into
jp
decl
sub
cmp
out
inc
inc
ds
add
lahf
adc
test
adc
xor
push
loop
add
aad
add
fnstsw
cmp
jb
stc
jge
jbe
out
call
pop
xlat
and
add
pop
js
add
or
xchg
add
pand
add
mov
sbb
imul
add
fdiv
xlat
leave
add
xor
hlt
push
jmp
inc
add
ljmp
inc
fs
lret
loopne
add
add
xor
xor
inc
ljmp
xchg
xor
dec
hlt
jecxz
cmp
int
rorl
mov
add
xchg
stos
sub
jge
cmp
andl
pusha
outsb
and
lods
ret
inc
push
adc
and
or
lahf
clc
ds
xchg
mov
nop
addb
das
push
adc
sti
jae
and
test
jns
loopne
cmp
mov
push
subb
repz
les
js
hlt
xor
mov
fistpll
or
orb
stc
inc
adc
movzbl
ja
xchg
hlt
fisubrl
jl
pop
mov
mov
add
xchg
pusha
cmc
sub
add
fistpll
cmp
sbb
into
notl
push
xlat
add
ret
out
rorb
std
dec
outsl
add
cltd
sahf
add
pop
xor
fcoms
test
xchg
test
xor
mov
sbb
inc
mov
shrb
sbb
cwtl
mov
shll
add
rcrb
xor
imul
pusha
and
jnp
lods
xchg
cwtl
loope
pop
ds
call
dec
add
mov
popa
add
mov
lcall
loopne
ret
push
in
inc
sub
inc
inc
xor
ja
scas
push
cmpsl
push
mov
lcall
insb
xor
addr16
dec
ud0
sub
cld
and
mov
mov
dec
mov
mov
leave
add
xchg
scas
stc
add
test
push
add
or
pop
add
int
xorl
push
xlat
add
and
aad
rorb
popf
ljmp
inc
jg
out
lahf
dec
push
dec
and
inc
pop
imul
mov
pop
mov
leave
ret
pop
dec
jo
adc
add
das
fstpt
mov
add
in
adc
in
inc
jge
scas
mov
push
aam
jecxz
pop
inc
jmp
add
es
push
sbb
mov
nop
add
int
or
cmpsl
clc
cld
jge
ds
fcomps
pop
mov
and
mov
subb
sbb
loope
push
add
jmp
ljmp
jae
add
mov
fimull
popa
sbb
mov
out
nop
andl
sbb
movsl
mov
aad
adc
adc
repnz
or
in
mov
ffreep
gs
xchg
and
shll
xchg
pop
sbb
dec
mov
arpl
inc
or
pop
insb
xchg
xchg
add
xchg
shrb
adc
add
xor
jae
add
sub
jp
cmp
jl
cwtl
ljmp
xchg
push
push
add
imul
dec
or
add
loope
mov
fsts
or
sar
imul
pop
inc
inc
push
repnz
add
sub
push
jnp
enter
or
sbb
add
lret
push
push
test
mov
loopne
pop
lahf
add
xor
xor
cmpl
orb
xchg
xor
sbb
test
mov
stc
jb
les
xchg
pusha
sbb
pop
inc
nop
or
dec
or
pusha
xor
adc
push
lods
aas
sub
les
pusha
or
int
aad
nop
jle
lock
fsubs
sahf
push
sub
call
pushf
daa
shl
mov
adc
hlt
stos
xchg
xor
insb
shl
into
push
cmp
cmp
lods
add
xor
or
adcl
push
xor
psubd
movsl
xor
add
aam
or
cmp
fstpt
stos
in
mov
cmp
fldenv
ljmp
pop
stos
popf
addb
inc
repnz
lds
mov
xchg
push
add
fwait
repnz
fs
int3
sahf
cltd
lds
inc
cld
stc
pop
jl
add
mov
pinsrw
cmpsb
xor
or
mov
pusha
js
mov
cs
int3
loopne
jmp
cmp
cmp
mov
add
stos
sbb
popf
add
cmp
push
add
cwtl
sbb
jnp
xchg
lahf
add
jmp
dec
jge
sub
or
inc
subb
iret
add
clc
xor
or
xor
sub
lock
add
in
pop
inc
push
inc
jmp
add
fisubl
cmc
add
cmp
pop
imul
insb
out
into
sbb
nop
subl
mov
add
or
adc
jecxz
xor
in
mov
push
and
arpl
repz
mov
and
xorb
mov
sbb
cwtl
jne
xor
cmp
mov
add
aam
femms
add
lret
add
aad
and
iret
mov
daa
pop
pusha
mov
jae
mov
rcrb
xor
aas
add
es
imul
mov
addl
addl
cmp
std
push
xlat
cld
hlt
add
adc
aad
dec
int3
add
test
cmpb
inc
and
mov
push
xchg
xchg
or
pop
sub
pop
into
lock
cwtl
mov
dec
lea
mov
add
stos
arpl
test
push
or
cli
jbe
lahf
mov
sbb
fdivrl
sbb
push
js
jo
add
adc
dec
enter
push
out
fwait
in
xchg
add
ficompl
add
arpl
daa
mov
adc
inc
cmc
jmp
mov
fadds
add
scas
pop
scas
adc
inc
cmpsl
jecxz
sbb
or
mov
dec
pusha
aam
imul
cmp
push
popa
loopne
sar
xchg
dec
ret
sbb
into
jmp
in
fistps
push
div
and
pop
jb
nop
clc
sub
cltd
cmp
scas
cmpsb
out
push
shrb
mov
adc
cmp
roll
sub
subb
xchg
stc
aaa
ret
add
loop
mov
xor
hlt
inc
jae
mov
xchg
mov
push
int
sbb
jle
dec
add
mov
push
xchg
loope
add
minps
cmp
jg
fsubrl
jnp
dec
and
jl
and
mov
pop
cs
jp
cli
lock
cmp
aaa
push
outsb
shlb
add
mov
dec
xor
dec
add
leave
lahf
cmp
movsl
int
js
add
mov
inc
ljmp
addb
cli
jb
sbb
add
mov
fwait
loop
insl
mov
sub
inc
loop
inc
add
ljmp
shrl
shrb
jle
sbb
jne
js
in
mov
loopne
rcl
add
stos
adc
add
jp
out
xorb
sti
jnp
add
xchg
xor
push
bound
dec
addr16
add
in
cwtl
xchg
mov
add
fs
cmpsl
and
xchg
push
sbb
test
subb
test
pop
add
and
add
or
add
ret
sub
incl
es
add
add
shll
fxch
dec
add
xchg
mov
movsb
in
xchg
cmc
mov
add
cmp
cmp
mov
dec
adc
pop
rolb
or
sbb
cmp
add
fdivrp
pop
add
xor
jle
mov
out
test
clc
shll
xchg
push
rclb
xchg
adc
add
scas
add
mov
or
mov
inc
or
andb
mov
sbb
jmp
into
pcmpeqw
insb
sbb
sti
andl
add
mov
into
add
insl
scas
data16
xchg
pusha
gs
mov
or
mov
xchg
xorb
push
popa
adc
rorb
sbb
lods
sbb
xchg
cmp
aam
sbb
outsl
add
imul
movsl
pop
into
rolb
enter
mov
sub
xchg
mov
add
mov
xchg
in
hlt
or
push
mov
push
or
xor
dec
cmp
mov
adc
orb
pop
scas
and
dec
mov
add
dec
stos
in
jb
fldl
and
repz
outsb
or
mov
sbb
push
mov
pop
sub
cmp
add
and
scas
add
movsb
mov
rolb
jbe
lret
lds
inc
int
pop
adc
aam
lods
lcall
jp
cmp
ret
xchg
jne
or
inc
pusha
andb
loopne
adc
mov
mov
push
mov
call
cli
into
add
xchg
das
in
adc
push
les
dec
mov
sub
and
xor
loopne
cmp
sbb
ja
xorb
fisubrs
loope
dec
xchg
pmullw
sti
lahf
in
mov
movsb
pop
aaa
inc
pop
in
add
loope
jge
mov
push
xor
popf
shlb
pop
rol
ja
add
push
inc
jns
lock
aam
mov
mov
add
mov
add
loopne
pop
psubusw
push
sub
and
push
adc
test
rcrl
outsb
mov
popa
add
mov
sub
push
pop
fsubl
stos
inc
dec
out
push
jecxz
neg
shrl
pop
pusha
add
fmul
je
xor
adc
sahf
or
sub
iret
in
subl
bound
and
xchg
rolb
add
mov
lods
cli
jmp
dec
jmp
andb
inc
cmp
ficomps
and
cmp
cs
push
mov
movsb
les
incl
repz
nop
fsts
pusha
add
fsubr
aam
test
pop
stos
and
sbb
mov
add
push
pop
sbb
adc
push
lods
shll
cld
jo
dec
dec
add
mov
xchg
add
push
mov
xchg
incb
sub
sub
xchg
xor
or
add
cmc
add
add
jge
addr16
fldcw
jae
push
sbb
ljmp
push
shrl
pop
xorb
xor
mov
or
fs
push
lock
imul
xchg
fdivl
icebp
add
inc
add
dec
sbb
mov
cld
and
lods
mov
popa
sbb
or
shrb
shll
mov
mov
xchg
shll
sbb
inc
pop
jmp
lret
jcxz
cmp
mov
addr16
cwtl
in
lock
pop
sub
sbbl
pop
int3
pop
xor
sbb
cmc
gs
pop
mov
int
cmp
leave
add
scas
jmp
and
ret
sub
add
or
add
xchg
lock
cltd
test
adc
add
loope
inc
lock
mov
jg
add
test
xchg
test
push
xchg
and
jbe
cmp
xchg
andb
ja
add
jl
pop
lea
jle
push
out
ret
lret
and
adc
gs
cwtl
rcll
inc
mov
xchg
sub
xor
mov
enter
sbb
mov
push
mov
ja
add
daa
mov
jbe
and
push
mov
std
iret
in
mov
adc
lods
cmpsl
xchg
add
cld
dec
pop
shrb
add
lret
add
incl
ds
les
mov
out
inc
sub
cli
jb
cmp
add
or
dec
cmc
push
sub
sbb
xchg
xchg
test
jno
xor
add
push
add
lcall
ret
out
jge
aam
sbb
cmc
and
cmp
adc
mov
push
mov
add
mov
roll
cmp
and
addr16
enter
loope
push
push
stos
xor
sbb
dec
out
repz
dec
jnp
shll
in
xor
fldt
test
ret
loope
mov
loopne
pop
mov
mov
push
add
jbe
dec
arpl
in
xorb
and
gs
dec
jbe
orl
adc
testb
popa
adc
mov
or
mov
xchg
adcb
fmull
xchg
enter
or
subb
pop
rorb
call
jg
lock
in
or
movsl
clc
in
fadd
pop
mov
push
hlt
sbb
std
xor
incb
mov
mov
andb
push
xchg
add
sbb
enter
add
jns
call
sub
mov
je
mov
add
popa
sbb
xchg
lock
push
push
sarl
xchg
out
lods
ret
cltd
outsl
icebp
and
and
hlt
repz
and
dec
imul
pop
in
add
add
in
outsb
jmp
xor
cmc
sub
add
and
shll
pop
mull
xor
xor
imul
jl
cmp
cmp
sbb
mov
add
mov
mov
test
icebp
lods
mov
je
add
add
ljmp
inc
mov
aas
pcmpgtw
imul
xor
or
loop
in
sub
push
in
add
cltd
movzwl
xor
clc
add
icebp
roll
cltd
fdivl
cs
push
xor
jnp
jmp
mov
mov
faddl
and
jecxz
das
xor
push
js
mov
addb
test
push
incb
lock
pop
lahf
sar
or
addb
push
push
cli
xor
dec
imul
and
pop
pop
and
adc
mov
add
in
and
mov
xchg
mulps
push
push
fldl
lcall
jnp
add
pop
arpl
add
inc
fsubr
dec
iret
je
mov
les
mov
sbb
push
pmaxsw
mov
add
mov
lea
testb
xor
fs
andb
test
cmp
jle
xor
jge
add
jp,pt
lret
test
xor
push
pushf
jle
sbb
mov
mov
pop
popf
xchg
push
mov
inc
adc
dec
ljmp
aam
mov
std
cmp
test
add
sbb
add
int
js
imul
jecxz
pusha
and
imul
xlat
jb
xchg
inc
gs
push
jo
add
rcr
or
inc
and
mov
adc
jmp
xor
mov
mov
pop
add
repz
push
sbb
rorb
push
ret
cmp
mov
pop
nop
sub
add
call
sbb
and
mov
add
faddp
negl
cmp
xchg
inc
dec
sub
inc
jmp
add
jge
push
inc
pusha
sbb
cmp
je
es
mov
mov
add
rcrb
out
or
test
jnp
inc
out
dec
adc
add
inc
andb
cmp
andps
loop
push
add
sbb
ud1
das
and
fdivl
out
sub
iret
fistps
dec
popa
sbbb
mov
lcall
sub
mov
jb
cmpb
ja
cmp
lock
mov
aas
inc
jbe
jle
rcrb
cmp
outsl
sub
bound
es
out
imul
mov
mov
adc
add
mov
or
neg
dec
add
or
lret
add
or
mov
imul
roll
pop
xchg
cmp
testl
inc
and
mov
das
dec
add
inc
add
dec
add
mov
cmp
jecxz
mov
jbe
mov
in
addr16
inc
jo
add
sti
lods
enter
jbe
mov
icebp
aad
or
das
xchg
pop
loope
lret
sarb
add
outsb
or
sub
xchg
nop
sarl
mov
add
xlat
daa
jmp
test
sbb
adc
jp
cmpsb
add
ss
adc
sub
add
push
add
add
xor
mov
or
enter
cli
loop
call
pop
lock
test
rcrb
stc
popa
push
addr16
ret
and
out
push
movl
and
addr16
xor
ret
test
pop
add
xor
sbb
sbb
jg
aaa
mov
aas
push
push
rcrb
lock
cmc
adcb
push
sahf
jp
add
mov
xor
outsb
in
add
sahf
cmp
cmpsb
push
loopne
test
mov
aad
xor
cwtl
push
mov
add
gs
bound
pop
out
inc
adcl
mov
adc
add
mov
push
fcompl
add
pop
arpl
filds
inc
lret
push
or
imul
push
push
add
push
pop
cs
cltd
jmp
add
aas
add
pop
lahf
jp
mov
fsub
cmp
mov
out
loopne
pop
add
push
in
adc
lret
adc
mov
aad
stc
call
sub
pop
loope
push
add
push
ror
push
push
cmp
or
out
add
mov
jne
add
inc
aad
dec
mov
push
inc
das
adc
fldl
cltd
mov
rorb
mov
enter
std
add
mov
add
pop
nop
int3
call
mov
xor
pop
pop
pop
mov
push
and
and
fdivrl
cmp
sub
in
sbb
dec
push
inc
xchg
xor
mov
adc
sbb
pmaxub
dec
cmpsb
clc
add
pop
out
pop
mov
cmp
pop
jne
aas
loop
add
sbb
push
add
add
dec
adc
inc
jmp
call
andb
push
pushf
cmc
shl
pop
add
mov
push
jo
mov
into
add
cmp
dec
sbbb
mov
adc
movq
outsb
lock
sbb
or
and
xchg
adc
cmp
inc
dec
roll
nop
pop
popl
and
sbb
dec
mov
push
dec
and
and
adc
dec
add
mov
cmp
add
mov
clc
or
imul
fcoms
jo
cs
sub
movsl
test
clc
je,pt
push
mov
add
mov
sub
sbb
jne
push
add
scas
dec
xchg
aad
repz
lret
mov
add
mov
xchg
inc
xor
scas
push
out
cltd
dec
or
js
sbb
sub
es
adc
xor
rorl
clc
pop
cmp
ret
sub
out
sbb
stos
push
mov
jno
add
add
jbe
jg
leave
fwait
add
pushf
es
outsl
and
daa
lcall
aad
add
push
jns
jnp
add
mov
xlat
in
or
push
and
fistps
fdivrp
outsl
or
nop
lods
and
jb
add
cmp
push
sbb
rcrb
es
add
cmovp
popf
pop
jle
push
movl
add
stc
xchg
pop
rorl
sbbb
pop
dec
pop
add
add
cld
push
mov
add
push
cmp
movsb
inc
add
mov
adc
xlat
sub
cmp
ja
add
push
or
lret
xor
in
pslld
test
add
xchg
int
add
enter
lahf
mov
jge
push
sar
cmpsb
mov
flds
inc
jp
sahf
popf
pop
xchg
inc
mov
inc
das
add
bound
inc
add
mov
jbe
ja
addl
sub
mov
pop
add
test
mov
pop
loopne
or
xchg
mov
cmp
fisubs
push
or
lea
out
xchg
mov
and
dec
add
xchg
loopne
mov
mov
test
mov
push
ret
je
sbb
test
dec
push
cmc
testl
add
inc
inc
mov
mov
adc
mov
roll
xor
repnz
cmp
mov
push
pop
decb
lahf
inc
jp
popa
cmp
jle
and
pop
orl
clc
add
mov
and
mov
cmc
sub
cmp
add
ja
add
fwait
ret
and
outsl
roll
cmp
add
notb
fisttpl
xor
mov
ss
mov
mov
adc
mov
aam
cmpsl
push
dec
stc
cwtl
fiadds
jg
shr
add
xchg
jb
sbb
add
ljmp
add
mov
pop
and
mov
mov
flds
imul
adc
jecxz
add
add
enter
rcrb
andb
addr16
xchg
inc
add
shll
push
mov
aaa
movsb
add
inc
testb
lds
xchg
out
daa
and
scas
data16
dec
je
cmpsl
cs
cmc
add
jns
ljmp
and
or
call
cmp
bound
pop
fldt
les
sbb
ljmp
add
mov
xchg
scas
add
push
dec
and
enter
arpl
xor
lock
sub
call
fiaddl
lahf
test
aaa
lret
scas
mov
in
xchg
add
test
cwtl
sti
out
je
jbe
add
cmpsl
mov
jp
push
adc
call
push
pop
movsb
add
test
add
mov
xor
push
movsb
mov
sub
fdivr
imul
dec
insl
jl
add
ret
loopne
movsb
sar
dec
push
movsb
cmpb
push
add
cmp
test
pop
notl
out
mov
dec
xor
add
pop
jmp
sbb
cmpsl
mov
and
aad
and
adc
mov
add
mov
cmc
out
add
arpl
jp
gs
sub
mov
mov
add
rolb
movsl
adc
xor
aas
lret
adc
mov
aad
iret
sbb
ror
add
inc
jmp
and
arpl
push
lods
in
add
sub
pop
cmc
outsb
add
pop
fidivrs
jo
add
out
pop
sub
fcompl
pop
xor
ret
ud1
mov
pop
cwtl
mov
icebp
add
lds
and
xor
mov
ljmp
test
add
rcrl
call
inc
pop
add
xlat
cmp
push
xor
and
add
push
mov
pop
shll
in
jl
add
jl
xchg
les
mov
push
inc
int
add
and
imul
push
clc
dec
cltd
pop
movsl
ljmp
adc
popa
sbb
fcomps
xchg
jae
in
push
or
mov
into
leave
insl
sbb
mov
or
jae
cltd
outsl
mov
cmp
test
jle
xor
ja
add
xchg
push
andb
cld
push
add
cmp
shl
loope
das
scas
add
pop
or
xchg
insl
jb
add
fistl
sub
stc
outsb
add
push
mov
cmpsb
dec
out
mov
pop
add
iret
push
int3
xchg
xchg
or
addb
push
in
stc
and
repnz
out
xchg
cltd
hlt
add
in
ret
fadds
pop
push
adc
jo
jne
adc
lahf
sbb
adc
push
push
adc
xchg
sub
ja
pop
int3
mov
repz
cmp
js
and
add
mov
and
adc
add
nop
test
sahf
adc
jo
insb
mov
jns
adc
rorb
or
dec
or
add
mov
mov
hlt
add
test
add
jbe
push
or
popa
int
mov
mov
frndint
icebp
add
jae
test
popa
add
sbb
xchg
lock
push
movsl
mov
sbb
rclb
pop
pop
lahf
add
pop
rcl
add
xchg
inc
jl
jg
xchg
call
xlat
aam
adc
pop
ds
je
sub
mov
add
icebp
ficompl
mov
fnstcw
sbb
cmp
push
cld
lods
or
pop
sbb
add
jp
fucompp
fndisi(8087
add
rorb
mov
rorl
fwait
cli
adc
mov
out
sbb
push
jge
xchg
aad
jae
mov
jo
add
adc
xchg
pop
test
add
push
cld
addb
insl
sbb
dec
stos
test
and
xchg
loope
push
cltd
jg
and
out
pusha
es
sub
push
aaa
jnp
mov
mov
xchg
iret
jo
imul
sbb
jge
lret
and
rorb
cmp
add
sti
sub
mov
add
mov
push
add
jno
push
dec
sahf
sbb
mov
cltd
lds
xor
sub
fiaddl
fdivrp
inc
xor
sub
mov
lahf
cmp
shlb
or
xchg
inc
xlat
sub
cld
add
push
sbb
ds
clc
pop
adc
fmul
and
aaa
cltd
jl
xchg
jno
cld
sbb
mov
jg
mov
mov
and
add
dec
imul
pop
jns
adc
add
enter
add
xor
insl
aaa
sti
imul
inc
pop
and
add
jmp
xchg
add
sahf
cmp
add
jb
pusha
adc
dec
jmp
pop
and
movsb
enter
mov
adcb
or
pop
or
cmp
xchg
add
push
jmp
xchg
add
add
jae
sub
aam
fildl
xchg
adc
jge
mov
stos
pop
xor
out
adc
ret
lcall
pop
jbe
xor
call
pcmpgtb
sbb
dec
cmpsb
shlb
jbe
push
cmpb
lcall
sbb
or
mov
add
loopne
mov
in
add
out
xchg
lahf
add
dec
cmp
adc
mov
out
xchg
push
mov
xor
add
jg
out
in
insl
or
xor
xchg
cmp
popa
jg
inc
mov
clc
mov
mov
add
shlb
out
in
test
fists
mov
cmp
int3
xchg
jo
add
or
test
adc
outsb
cmc
mov
push
inc
out
add
sbb
add
sahf
mov
pusha
les
push
fisttpl
push
pop
push
pusha
mov
inc
xchg
jo
push
movsl
add
cmpsl
pop
inc
jbe
cld
stc
push
fdivs
fcmovnb
in
ret
scas
fiadds
pop
jno
movsl
pop
ja
testb
cmc
sti
adc
js
push
mov
mov
jbe
add
jle
jmp
sti
sub
xor
add
sub
test
add
insl
jg
push
repnz
add
fbld
mov
or
lods
lss
adc
add
int
sbb
andb
push
cmpb
jp
push
std
ljmp
aas
clc
inc
add
or
lds
sbb
jg
add
ret
xor
mov
sbb
scas
jo
adc
mov
pop
fcoms
xor
pushf
inc
shrb
pop
pop
bound
pop
std
xchg
testl
and
sar
cld
xchg
add
sbb
jg
nop
and
std
pop
lcall
pop
outsl
out
pop
movsb
arpl
xorb
jnp
and
and
inc
bound
ret
repnz
popa
leave
cwtl
inc
rorb
cltd
add
mov
lea
or
inc
cmpsl
dec
movsb
icebp
and
add
jns
clc
add
fimull
insb
sub
pop
or
stos
sbb
ja
adcb
pop
data16
ds
or
in
repnz
push
add
dec
repnz
mov
mov
add
mov
xchg
lea
jo
loopne
and
inc
jo
xor
mov
pop
jb
pop
data16
fidivrl
bound
add
push
cmp
ffree
fcomps
xchg
push
mov
mov
popf
mov
push
pop
pop
jmp
ret
add
lock
lds
push
dec
push
aaa
sub
adc
adc
adc
sbbl
pop
push
pop
or
cmp
scas
and
add
mov
les
or
add
testb
ljmp
popl
jmp
push
mov
sarb
pop
or
add
bound
add
mov
sub
mov
in
imul
pusha
mov
push
incb
nop
idivl
jmp
rolb
jbe
add
xor
jle
sub
test
test
shl
outsl
jo
cmp
stc
mov
and
add
out
cmc
add
outsb
jno
pop
pop
movsl
cmpsl
dec
xchg
cmp
or
pop
cmp
inc
mov
pop
out
rol
arpl
loope
cmp
inc
push
fisttps
shrb
and
je
shrb
rcrb
push
rorl
mov
pop
movb
dec
sub
add
jecxz
ror
xchg
data16
cmp
jno
jbe
lret
mov
getsec
aam
xchg
add
fs
bound
addr16
dec
jl
mov
andb
add
ja
sbb
add
mov
lret
xchg
ljmp
xchg
sub
sbb
data16
mov
and
sub
popa
adc
add
cmp
add
js
jne
add
cmp
jge
pusha
stos
xor
popf
pusha
movsl
lds
lea
add
xor
add
xchg
bswap
add
push
fwait
lods
loopne
test
in
mov
jne
pop
pusha
dec
push
push
pop
add
pop
sbbl
pusha
jno
arpl
pop
daa
push
cmpsb
or
adc
movb
in
icebp
test
add
ja
or
push
dec
adc
add
xor
stos
jno
dec
test
leave
jb
add
cs
mov
cli
add
jae
ret
stos
int
sub
outsb
add
scas
icebp
mov
sbb
jne
xchg
imul
mov
jnp
add
movsl
ret
ja
lcall
roll
or
inc
sbb
adc
adcl
xchg
mov
add
jb
sti
xchg
mov
xchg
pop
sub
add
xor
xchg
inc
fstps
add
out
pop
mov
add
xchg
test
daa
mov
pushf
ret
add
fcoml
jae
pusha
inc
push
mov
js
aam
hlt
or
add
shrl
cmp
scas
inc
adc
in
add
or
cmp
data16
int3
cmp
in
jns
xorb
push
cs
push
in
stos
push
dec
xlat
sbb
add
mov
and
sub
dec
sbb
sbb
aad
push
add
mov
add
lods
inc
mov
out
jnp
mov
add
pusha
xchg
add
fiaddl
jge
rorb
pop
insb
mov
add
cmp
das
icebp
push
mov
movsb
pop
add
es
out
pop
pusha
cmp
cmp
xchg
aas
cmp
inc
mov
scas
mov
gs
ret
test
loopne
movsb
jne
ja
dec
lret
sub
jbe
adc
sbb
pushf
lods
or
push
pop
mov
mov
or
imul
ss
insb
add
cld
imulb
leave
jb
add
dec
pop
out
xchg
sbb
or
pop
add
pop
xor
mov
add
loop
xchg
pusha
jle
fisttps
sub
inc
out
adc
ss
mov
nop
add
cmp
les
loop
test
adc
inc
hlt
imul
lret
filds
fs
lock
pop
stos
mov
dec
dec
add
loopne
sbbb
cmpsb
aas
xchg
mov
push
cmp
idivl
jg
add
dec
test
adc
xchg
push
pop
push
lock
ret
mov
mov
bnd
pop
jg
jecxz
cmp
test
fstl
push
imul
add
add
stc
ss
pop
mov
xchg
sub
xor
add
sti
pop
shrb
nop
test
jl
test
add
jmp
add
jnp
lahf
jl
in
loop
enter
or
out
aas
aam
lods
mov
lret
mov
add
ror
add
shlb
iret
clc
pusha
push
adc
test
in
loope
fs
xchg
cld
mov
int3
call
jecxz
push
loopne
sbb
dec
inc
mov
cmp
inc
sub
push
lds
in
dec
add
mov
nop
lock
xor
adc
dec
adc
jle
dec
and
subb
ljmp
add
or
add
or
inc
loopne
loope
addb
add
xchg
iret
push
icebp
adc
int
adc
add
add
mov
dec
imul
pop
jnp
jmp
add
add
xor
call
sbb
das
ja
sbb
xor
mov
inc
push
inc
cmpsb
add
sbb
cmp
out
dec
xchg
sbb
mov
pusha
add
out
js
add
mov
sbb
ss
inc
lahf
lret
inc
cld
repz
stc
xor
call
jmp
xchg
adc
repz
mov
push
mov
mov
fucom
aas
add
cld
mov
and
cld
add
enter
lods
mov
out
jmp
pop
lret
aaa
cmp
scas
adc
cs
fistl
add
pusha
sub
add
in
aaa
sub
test
mov
add
loope
sti
sahf
sbb
push
and
fsubrp
pop
mov
push
pushf
cmc
rolb
add
fwait
cmp
xchg
xor
scas
pop
sbb
mov
add
xor
push
std
shrb
or
xchg
mov
push
adc
stos
sbb
ftst
sbb
vcvtss2sd
test
lea
jl
pop
mov
das
aam
add
and
out
mov
jl
test
dec
scas
adc
push
push
pop
lea
fsubrs
lds
je
push
sbb
mov
mov
addb
jle
popf
inc
hlt
jo
adc
push
xor
xor
loop
add
outsb
push
popf
add
int
inc
adc
push
jo
add
jl
or
add
lcall
and
and
or
or
out
mov
sbb
xorl
mov
repz
add
je
or
mov
movhlps
mov
inc
cld
sti
jle
add
push
out
mov
push
pusha
add
lcall
call
sub
mov
aam
add
adc
rclb
mov
aad
stos
and
add
das
aam
adc
lock
jecxz
add
ret
add
push
mov
add
pop
xchg
inc
add
scas
dec
add
lcall
xchg
pop
add
sti
xor
add
xchg
push
mov
add
dec
cmp
sub
sbb
mov
jp
mov
cwtl
xor
jnp
push
popf
adc
sbb
out
roll
cmpsl
jmp
push
xchg
lock
and
pause
jo
dec
out
mov
pop
sub
inc
add
and
clc
add
ljmp
in
sbb
scas
js
es
and
addb
jbe
jnp
leave
je
add
push
add
pop
lds
xchg
loop
leave
cmp
mov
iret
jnp
jmp
add
mov
shlb
xor
stc
loope
imul
icebp
sub
adc
mov
int
repz
outsl
add
pop
ret
xor
xchg
aam
repnz
cmc
xor
xchg
sbb
cmp
dec
sub
sbb
cmp
push
mov
adc
jl
test
sub
mov
cld
das
sbb
shrl
sbbb
lock
adc
test
mov
sbbb
dec
stos
out
mov
inc
scas
into
sub
int3
jl
jg
fadd
fdivrp
pop
fwait
popa
pop
mov
xchg
xchg
mov
icebp
cltd
aad
bnd
cmpsl
test
mov
outsb
repnz
pushf
mov
add
inc
call
xchg
or
sbb
add
xchg
das
dec
cmp
add
xor
add
add
push
dec
lret
sub
adc
xchg
or
loop
test
out
add
test
cwtl
roll
fisubl
test
mov
sub
mov
cmpsl
and
pop
cwtl
cmc
lahf
cmp
or
or
movsb
mov
jnp
adc
mov
adc
push
in
and
dec
and
jo
adc
pop
mov
jo
ret
test
mov
mov
outsb
fdivl
add
out
adc
aaa
adc
loopne
vpaddb
adc
sbb
xchg
xor
sub
test
xlat
cmp
out
add
in
jecxz
dec
roll
les
hlt
sarb
filds
movsb
pushf
mov
popa
mov
mov
mov
pop
jl
xor
pop
shl
insb
mov
fildl
cld
and
je
add
cld
lcall
repz
add
nop
mov
pop
arpl
movl
fwait
add
jmp
out
repz
pop
or
sub
push
fmul
fnstsw
dec
fidivrs
rcll
add
shrl
xor
outsb
mov
mov
in
inc
mov
add
push
sub
fadds
and
jecxz
aaa
add
cld
inc
pushl
xchg
outsl
repz
fcomps
xor
mov
or
fs
js
sbb
in
add
lret
test
cmp
aaa
mov
in
xchg
loope
adc
pop
inc
push
frstor
ficompl
jnp
faddl
mov
repz
popf
mov
fnstsw
xor
nop
int
xchg
push
add
xorb
sub
add
and
nop
pop
lock
loope
in
hlt
add
or
push
cmp
out
xchg
add
push
sbb
adc
cmp
into
nop
jns
imul
lret
add
add
stos
add
xor
lods
push
add
dec
xchg
mov
shrl
int3
orb
shrl
add
cld
add
xor
das
fwait
lds
add
or
fldcw
add
fimuls
dec
cld
sbb
mov
inc
loopne
or
inc
shll
push
jmp
movsl
sar
shr
cmpsl
pop
pop
imulb
mov
js
add
sbb
cmpsl
lcall
movsb
ret
jmp
bound
xor
push
inc
mov
cmpsl
xor
sub
rcll
es
aas
add
or
xor
mov
fs
iret
roll
xor
mov
out
or
dec
inc
fwait
pop
sbb
push
adc
repnz
cli
xchg
inc
mov
adc
lods
push
shrb
addb
jp
movsl
cmp
adc
and
cwtl
mov
insl
loop
in
repz
fsubrl
add
push
push
push
cmp
jp
mov
arpl
mov
hlt
loopne
dec
cmp
cmovo
sub
andb
icebp
mov
pcmpeqb
cwtl
cmpsb
ret
add
dec
xchg
add
push
addb
into
pusha
cmp
shr
fisubrl
sti
sbb
lahf
clc
add
test
xor
xor
or
popf
mov
jp
jne
or
xchg
add
push
cld
ret
sub
adc
mov
stc
shlb
add
test
pop
or
pop
dec
sub
add
sbb
jg
add
imul
je
cltd
out
in
mov
mov
add
lcall
add
inc
inc
adc
int3
jo
adc
jne
outsb
out
add
lret
push
pop
add
or
add
hlt
or
pusha
and
add
dec
inc
sbb
clc
ficoml
add
into
out
jno
iret
mov
js
je
nop
and
jns
mov
or
ret
sub
dec
and
jmp
cltd
add
push
mov
xor
inc
sub
arpl
in
pop
and
add
ds
orb
push
sti
adc
shr
and
mov
scas
lods
icebp
cmpb
xchg
mov
sbb
test
and
orl
add
dec
xor
mov
add
enter
pusha
lcall
add
mov
or
insl
sahf
cmp
add
inc
adc
iret
mov
add
cmp
fucomp
mov
pop
inc
adc
cmc
dec
cmp
add
dec
jb
and
jle
fidivrs
pop
add
jns
shlb
mov
sbb
add
jo
xor
adc
xor
jmp
es
mov
push
xchg
movsb
pop
out
jp
aad
or
je
mov
xlat
jns
cs
adc
add
xor
mov
jno
push
add
dec
mov
jle
xchg
enter
lea
mov
inc
push
pushw
and
movsl
clc
sub
xor
mov
adc
in
fwait
das
stc
adc
jmp
sbb
rcrl
or
push
and
add
lea
orl
and
push
je
add
sahf
add
rcrl
lds
fisubrs
push
gs
arpl
cs
jge
cmp
cmp
jo
pusha
xor
cwtl
mov
rorb
mov
xlat
or
mov
and
movsl
push
pop
rolb
cmp
movl
add
movsb
push
pop
adc
jnp
cmp
not
and
jno
adc
mov
adc
lret
and
dec
add
or
clc
pop
add
hlt
push
cmp
js
mov
sbb
loope
xor
arpl
out
add
es
cmpsl
mov
pop
mov
cli
insb
les
rcrl
sbb
xchg
pop
outsl
xor
pop
into
lahf
mov
inc
add
rcrl
out
jno
mov
adc
jbe
testb
fs
jp
icebp
add
jecxz
mov
sbb
add
test
sahf
sarl
and
inc
xchg
mov
push
or
add
ret
test
add
inc
xor
mov
fs
or
shrb
mov
cmp
xor
jo
jecxz
mov
dec
push
fildll
add
in
push
cmpsb
push
stos
add
jbe
mov
mov
addr16
sub
sbb
pop
jg
stc
and
mov
add
popa
or
add
inc
and
and
push
add
jp
out
js
adc
jb
cmp
mov
xchg
add
xor
pop
jle
jecxz
aad
enter
cmp
push
add
sti
mov
add
add
jmp
and
cmpsb
jno
and
loope
cld
test
cwtl
shl
sbb
je
cmp
scas
subb
push
adc
test
or
inc
inc
or
int
wrmsr
jns
jle
loop
push
test
pop
rclb
ror
cmpsl
pop
dec
inc
push
leave
jne
dec
stos
lds
sub
push
cmpl
add
subl
mov
ror
in
test
pop
pop
mov
nop
xor
sub
mov
roll
fmul
les
subl
std
push
movl
add
mov
shlb
jl
add
testl
add
pushf
push
stos
sub
sub
shlb
jo
xchg
sbb
cmpb
pop
fsubr
xchg
mov
add
add
pop
add
fsubp
cwtl
sub
mov
add
int
or
and
ja
and
xor
int
pop
jp
rorl
cwtl
bswap
loopne
call
psrlq
and
insl
or
dec
fisubrs
stc
rclb
pushf
pop
jo
jl
add
or
jg
sbb
xlat
sub
mul
xchg
sub
and
in
add
gs
dec
cmp
add
mov
adc
mov
mov
ror
jae
and
inc
jl
movl
pusha
or
adc
nop
push
test
test
mov
std
adc
inc
mov
test
outsb
inc
and
inc
movsl
adc
ja
xchg
mov
inc
adc
out
fadds
pop
and
and
push
adc
mov
lret
push
lahf
sbb
pop
add
stc
mov
andb
fdiv
movl
xchg
mov
outsb
lahf
sub
inc
sbb
aad
rcrb
add
popf
mov
fdivrl
pop
xchg
scas
add
sbb
orl
std
add
add
dec
add
bound
add
sahf
add
inc
jp
sub
jnp
fadds
xor
sti
add
fstpt
add
jecxz
mov
js
rorl
data16
and
add
mov
stos
loopne
add
mov
cltd
add
ret
jb
das
cmp
push
pop
outsl
imul
xor
out
and
daa
dec
movsl
add
aaa
pushf
ret
mov
adc
dec
in
lods
iret
xchg
add
push
test
arpl
sbb
add
mov
clc
push
lea
push
add
push
add
lret
sbb
ret
push
repnz
sub
cli
mov
ficompl
cld
js
mov
adc
outsl
js
aaa
roll
cmpsb
mov
out
mov
add
pop
mov
pusha
add
shlb
xchg
mov
mov
add
repz
push
mov
in
jbe
mov
lds
fidivrl
add
adc
lods
cmp
cmc
cmpb
stc
in
ret
stos
ficomps
shr
xchg
movsl
mov
pop
jne
add
jns
lods
shrb
cmp
ljmp
pop
add
xor
jns
add
hlt
or
add
notl
sbb
or
or
sbb
add
dec
jnp
adc
roll
dec
loopne
add
enter
sbb
push
jnp
add
movsb
xlat
ret
cwtl
jnp
pop
data16
dec
pop
sub
dec
pop
jg
pusha
xor
pop
adc
roll
stos
jo
bswap
mov
cmpsb
pusha
xor
dec
inc
nop
xor
pushf
nop
out
jecxz
or
mov
dec
jge
add
cs
mov
xchg
pop
sub
cmp
push
add
push
cmc
fistl
enter
jno
xchg
aas
cmp
or
mov
push
ljmp
subl
push
add
adc
push
adc
mov
data16
out
and
idiv
mov
lock
flds
int3
mov
icebp
sbb
add
imul
mov
xchg
add
std
sub
cs
add
nop
in
xorl
push
bound
dec
push
in
add
cs
cli
shrb
mov
mov
add
xchg
inc
xor
in
shll
adcb
imul
adc
loope
fisubl
fisttpll
aad
imul
in
inc
bound
nop
cwtl
add
leave
push
mov
shlb
mov
mov
loop
imul
out
push
cmp
add
icebp
pop
mov
sbb
dec
jle
jp
sub
dec
sub
adc
lock
mov
test
bswap
cltd
sarb
imul
dec
inc
imul
bound
cli
btr
shrb
fadds
or
or
fldl
insl
sub
add
add
ret
movzbl
mov
leave
nop
es
and
test
jl
mov
lret
stc
push
cmp
mov
or
stos
add
mov
add
sub
push
jo
xor
add
cmp
add
nop
jne
test
fcoml
fistps
inc
add
xor
xor
aad
lods
bound
xorl
ljmp
push
adc
add
mov
sbb
or
roll
cs
and
aaa
add
cmp
xchg
scas
pusha
push
out
sub
xchg
add
outsl
cmp
fiadds
push
adc
mov
sbb
or
push
pop
add
xor
bound
inc
add
jb
and
sbb
add
daa
pop
test
or
sbb
dec
stos
jmp
mov
jo
xlat
mov
add
test
dec
and
pop
xchg
add
xchg
fadd
jecxz
add
inc
xor
add
cli
sub
fiaddl
aam
mov
pushf
dec
lods
leave
mov
sub
push
jno
add
cmp
add
dec
in
or
outsl
push
dec
sahf
mov
out
add
icebp
int3
jmp
dec
gs
shl
nop
cwtl
add
mov
mov
pop
mov
jo
cli
dec
xchg
push
or
xor
lock
dec
add
add
outsl
pop
arpl
cmp
dec
cmpsb
or
add
cmpb
cmp
mov
fistpl
xlat
movsl
jecxz
outsl
and
repnz
fists
xchg
xor
popa
subl
test
sar
pop
shrl
dec
call
xchg
add
shl
and
mov
mov
xchg
jns
into
dec
movsl
add
xchg
sub
popf
jmp
imulb
sbb
mov
sbb
bound
add
ds
xor
je
ret
add
add
dec
popa
add
sbb
mov
fldt
leave
adc
inc
add
inc
jb
ss
lcall
sahf
adc
lret
mov
inc
mov
lcall
subb
sbb
and
mov
mov
xchg
lock
add
inc
jo
cli
and
mov
inc
push
mov
popa
in
aam
outsb
add
adcl
pushf
mov
pop
add
addr16
inc
add
xchg
inc
out
pop
dec
mov
or
push
mov
repnz
xchg
sub
rolb
inc
jnp
sbb
fwait
pop
cmp
add
mov
cmpsl
xchg
into
adc
rclb
ret
jge
fcmovne
lods
test
push
fwait
cmpb
mov
add
stos
fwait
pop
sahf
subl
jae
ja
add
fnstsw
or
arpl
mov
ret
popf
add
subb
jge
push
lods
fimull
mov
repnz
lret
dec
leave
pop
add
cwtl
dec
scas
sti
mov
insb
pop
or
iret
mov
test
scas
or
daa
or
push
push
add
shl
sahf
xor
sub
jl
pushaw
repz
pop
or
mov
mov
scas
ljmp
popf
adc
cmp
fldt
cmpsb
mov
arpl
dec
and
add
sub
add
jo
push
fisubrl
jmp
addl
in
lret
les
mov
cld
stos
sar
jl
jl
add
cmp
or
push
xor
xchg
mov
pop
add
xchg
int3
in
test
add
gs
icebp
mov
jl
add
cmp
xor
xchg
hlt
add
lods
ffree
imul
inc
int3
fimull
rclb
add
lret
push
leave
cs
adc
or
in
xor
js
add
jp
cmp
add
mov
fdivrs
out
es
rolb
sub
arpl
push
pusha
mov
cmc
in
cli
mov
push
mov
out
add
or
and
pop
cwtl
loopne
adc
jg
cmp
mov
pop
adc
xor
inc
jne
jl
pushf
ror
sti
loopne
adc
add
test
js
jnp
mov
mov
inc
add
push
test
cmp
adc
stos
or
xor
jmp
mov
mov
lret
pop
dec
push
pop
jns
lock
sbbb
xor
and
xor
lock
mov
cmpb
push
movsb
aad
in
std
jbe
dec
clc
or
cld
arpl
mov
stos
or
test
fadds
cwtl
sub
mov
repz
loope
out
cld
dec
cmp
adc
add
mov
or
mov
mov
inc
push
mov
addl
outsl
inc
pop
sti
cmp
loopne
or
fadds
bound
mov
push
pop
pop
in
inc
sbb
add
add
xor
push
mov
test
stos
adc
cwtl
cmc
insb
and
aad
and
mov
mov
clc
into
xchg
sbb
adc
add
xor
sub
and
outsb
cmp
sub
adc
fisttpll
sahf
rolb
daa
ds
xor
xor
repnz
insb
cli
add
sub
cmp
add
ficoml
mov
xor
sahf
add
stc
int
iret
xor
popf
out
mov
mov
add
or
mov
add
outsb
add
add
pushf
xor
or
cmpl
xrelease
aad
nop
adc
bound
mov
je
jp
inc
pop
out
sti
cli
inc
into
push
inc
aas
lock
add
sub
pop
loop
add
gs
aad
mov
jae
xor
je
push
dec
mov
push
or
pop
mov
sarb
sub
ficomps
in
fs
rcrb
adc
push
adc
push
scas
jne
filds
add
sbb
xlat
and
push
ret
adcb
mov
mov
jp
cltd
mov
hlt
cmp
add
cmpb
add
shl
and
add
shr
fdivr
sub
sub
sahf
sbb
gs
pop
jge
sub
aas
lock
inc
mov
inc
sub
push
data16
add
push
addb
frstor
cmp
incb
ret
add
inc
fbld
jmp
sbb
pop
js
mov
inc
aas
inc
in
sbbb
sarb
inc
mov
rclb
add
xchg
mov
cmc
cld
jge
jb
lock
stos
jg
mov
scas
mov
add
in
sub
mov
lret
dec
add
cmc
mov
loop
pop
dec
cmp
pusha
shlb
add
adcb
mov
add
dec
repnz
popf
negl
cmp
xor
je
add
dec
call
add
mov
pop
mov
jb
fs
adc
or
push
ret
add
pop
movsl
pushf
dec
sub
testb
jl
push
dec
mov
xchg
lds
jbe
scas
jle
pop
dec
sbb
subb
add
jns
pop
adc
mov
lods
push
filds
sub
dec
mov
pop
xor
and
add
dec
push
pop
sub
add
incl
shll
jmp
fbld
sahf
in
or
orb
dec
mov
jge
sub
add
xlat
mov
push
or
loop
sbbb
add
sub
add
inc
mov
clc
lods
cli
jbe
pop
add
cmpsb
add
xchg
out
add
in
aam
pop
mov
pop
je
clc
sub
scas
test
pop
sub
dec
xor
lods
jbe
pop
es
add
xchg
pop
push
add
pop
add
sbb
fdivrs
mov
xchg
pop
and
inc
xchg
xor
stc
ljmp
test
fdivl
bound
ret
mov
inc
fdivr
push
add
inc
pushf
mov
adc
xor
adc
rcrl
rorb
jp
je
add
or
jns
sub
jno
sub
andb
mov
xchg
loopne
and
mov
incl
loope
push
add
add
stos
bound
add
push
les
add
loopne
xchg
aas
call
gs
adc
lock
pop
cmp
jge
imull
sbb
dec
ret
mov
add
mov
xlat
cwtl
add
pop
mov
sahf
clc
ds
add
cmpsb
jae
mov
push
xor
pusha
sbb
pop
mov
rcr
or
lahf
call
test
fstps
test
sub
add
fistps
push
add
sub
mov
loopne
mov
sub
adcb
test
shr
inc
xor
sbb
scas
add
test
push
mov
jae
dec
mov
test
pop
sub
subb
jnp
pushf
mov
lldt
cs
fldl
mov
and
add
sbb
add
inc
call
dec
or
xor
jae
pop
push
add
add
icebp
adc
mov
cmp
adc
pop
bound
fiaddl
fcoms
xchg
fmull
outsl
or
test
jmp
jp
add
cld
js,pn
add
loope
add
mov
ljmp
mov
inc
nop
nop
int3
add
pop
push
pusha
sbb
jbe
cmp
jno
add
push
stos
arpl
xlat
mov
addr16
xor
imul
cli
and
pop
add
je
mov
mov
xchg
adc
sub
das
sarb
decb
push
or
testb
add
movsl
scas
cmp
fidivrl
mov
jmp
add
repnz
add
clc
in
nop
cmpxchg
jl
roll
lods
mov
add
aam
mov
clc
inc
pop
jb
push
subb
out
cmp
add
xor
add
cwtl
xchg
imul
add
into
pop
xchg
adc
loopne
inc
add
nop
xchg
arpl
in
psubb
mov
insl
cmp
adc
in
adc
xor
mov
fnstsw
inc
mov
rcll
cltd
fistpl
loopne
mov
cld
jo
sbb
ljmp
je
jl
btc
add
push
pop
xchg
mov
sub
push
adc
fidivs
xorb
es
xchg
in
jns
lds
cli
adc
cmp
insl
loope
jmp
subb
dec
sub
or
mov
lods
jae
call
cwtl
jae
nop
adc
repz
or
mov
inc
inc
inc
push
cmc
test
mov
add
push
lds
lock
enter
or
ret
jno
add
je
addl
subb
int3
jns
push
add
sub
add
adc
loopne
pop
dec
jecxz
mov
sub
jns
sbb
mov
add
cmp
gs
pop
add
loop
push
push
aam
mov
pop
pop
add
je
jne
sub
std
mov
out
add
xor
add
sbb
sbb
jne
js
les
add
push
jno
and
add
insb
adcl
push
cmp
inc
xor
or
cltd
and
call
cmp
add
push
int
fdivr
aas
add
cs
xchg
hlt
rclb
ss
movsl
dec
iret
or
push
int3
loop
add
loopne
imul
andb
jmp
push
xchg
pop
inc
in
lds
push
out
adcb
push
enter
xchg
stc
adc
xchg
insl
mov
jne
add
inc
adc
fidivrl
xor
add
xchg
arpl
repz
jne
out
jl
fwait
mov
call
jns
rcrb
add
pop
stos
jno
xor
push
cltd
repz
push
add
leave
cmpsl
dec
add
lock
call
test
mov
lahf
and
mov
xlat
pop
int3
xchg
and
iret
and
lds
pop
out
sbb
add
rcr
clc
fs
adc
test
push
popf
andb
lock
shll
xchg
clc
int3
jge
or
cli
add
add
mov
adc
cltd
stc
mov
aas
mov
sarb
add
movsb
push
pop
int3
stc
icebp
pop
add
ret
cmp
jl
js
fwait
cmp
testl
mov
dec
cmp
jne
cmp
mov
add
and
and
imul
xchg
addr16
push
jl
loop
inc
inc
sub
mov
and
add
jo
jb
dec
arpl
inc
add
sub
aam
jmp
jnp
aaa
cmp
pop
bnd
cmpsb
add
cli
and
adc
test
pop
iret
movsl
fldt
and
or
push
push
out
ret
xchg
push
es
jge
jnp
dec
adc
adc
dec
add
bound
sahf
out
push
add
or
ret
frstor
mov
push
or
iret
cmp
or
adc
pop
add
test
push
jns
loopne
mov
pop
xchg
scas
in
lret
out
jl
pop
jle
pop
out
hlt
cltd
pop
xchg
xor
jno
mov
xor
add
push
xor
pop
lds
push
in
sbb
inc
add
fnsave
add
cwtl
fsts
sbb
mov
sub
xor
and
test
cmp
add
mov
inc
mov
sbbb
push
mov
add
movsl
arpl
addb
jp
adc
xchg
add
sub
dec
mov
or
lcall
mov
int
hlt
pusha
cmp
add
movb
outsl
popf
xchg
inc
mov
ja
lods
divb
add
idivl
mov
adc
add
pop
cld
xorb
andl
cwtl
loopne
test
mov
fs
mov
lcall
dec
jle
pop
push
add
cmp
sbb
inc
sar
ds
mov
mov
push
mov
fdivs
mov
adc
xlat
xor
and
push
popa
xchg
bound
sbb
mov
mov
mov
push
add
rep
cmpl
pop
enter
push
xchg
mov
dec
fdivl
mov
enter
mov
sub
lcall
sbb
xor
or
ljmp
clc
pusha
mov
dec
lret
stos
and
add
cli
adc
jg
arpl
pop
jbe
rorb
or
mov
add
pop
xor
fwait
adc
in
add
adc
lds
loopne
les
mov
insl
pop
jo
fidivrl
push
jge
jns
add
cmp
xor
cli
and
in
lret
jb
mov
jae
inc
jp
mov
cmp
out
sub
stc
cmp
add
pop
xor
repnz
arpl
das
in
cmp
fadds
xchg
xchg
icebp
aaa
fisttpll
mov
inc
cmp
push
add
dec
cmp
out
mov
cld
add
push
lods
out
inc
stc
test
jae
add
subl
inc
pop
sbb
sarb
in
xchg
imul
imul
push
out
cld
dec
call
lock
push
enter
cmp
add
dec
or
out
pop
int3
sub
dec
add
test
fxch
lret
sbb
das
inc
int3
cmp
xchg
cmpsl
pop
pusha
ljmp
fs
jmp
int
mov
pushf
mov
ja
dec
cmp
jmp
pop
dec
loope
inc
cmp
clc
adcb
sub
add
adc
sti
cs
movsl
sbb
push
inc
add
dec
sbbl
push
add
push
movsb
add
add
lea
add
pop
jo
jnp
out
add
sub
sub
enter
add
out
daa
mov
add
sub
popa
jae
pushf
xchg
add
clc
mov
out
stos
mov
mov
xor
movsl
adcb
xchg
subb
xor
mov
add
addr16
add
xor
inc
mov
repz
hlt
stos
ret
pop
push
rorl
testl
mov
pusha
adc
jg
lret
bswap
or
test
add
stos
loope
sub
mov
imul
jbe
sub
xor
push
cmp
iret
add
rcr
lds
add
inc
call
rclb
out
xchg
fcompl
ja
add
sub
stc
popf
xchg
in
inc
popa
loop
xor
inc
fxtract
nop
dec
icebp
cmp
mov
cmp
movsb
out
popa
sub
inc
push
mov
xchg
add
cmp
sub
in
and
mov
lock
cltd
out
testb
in
daa
and
add
int3
inc
push
adcb
imul
jne
lea
aam
test
push
nop
add
mov
sbb
xorb
je
pop
cmp
aaa
push
sarb
mov
or
dec
xor
inc
cmpb
insl
icebp
sbb
inc
andnps
mov
rorl
fcompl
shlb
movsb
mov
idivl
enter
add
pop
hlt
dec
imul
popa
sbbb
sbb
mov
push
jbe
shlb
cwtl
adc
sahf
or
pop
and
sarb
fucomp
pusha
inc
dec
xchg
mov
add
jmp
mov
jecxz
mov
add
sub
dec
leave
pusha
les
and
mov
sbb
lret
inc
outsl
dec
add
test
dec
shll
ss
loopne
adc
ds
xor
sbb
push
pop
sbb
push
leave
push
popa
dec
dec
je
pop
cmp
push
mov
jmp
sbb
jb
add
shr
mov
int
or
dec
jne
add
add
faddl
arpl
pop
outsb
into
pop
inc
xor
xchg
add
push
xor
jns
sbb
xchg
sbb
dec
addr16
inc
shr
and
ffree
dec
and
lock
mov
loope
scas
repnz
jp
cmp
jb
orb
mov
adc
and
add
out
push
pop
push
jb
add
cmp
push
push
or
loopne
movsl
mov
add
push
add
cmp
in
mov
ja
icebp
and
adc
adc
sti
rolb
pop
inc
mov
jnp
out
add
push
ret
pop
pop
sahf
aam
xchg
out
xchg
mov
dec
adc
add
push
iret
lock
add
ss
cmpsb
inc
or
push
add
dec
stos
mov
push
push
mov
inc
lret
fcmovbe
cmpsb
adc
mov
rcll
dec
xor
les
out
push
mov
jbe
mov
fstl
cwtl
out
inc
mov
pop
leave
rcrb
cmpl
cmp
and
cmpsl
push
test
or
cmp
mov
lret
push
push
add
cs
xorl
pop
ret
add
inc
add
push
lock
lods
popa
or
push
mov
sbb
add
adc
nop
call
rcr
cmc
pusha
pop
lods
add
mov
pop
notb
adc
add
sbb
mov
add
push
int
addr16
scas
and
aam
icebp
add
xchg
sbbl
inc
xchg
mov
add
and
nop
pop
cmp
dec
fucomip
push
or
popf
inc
clc
cld
lds
insl
ror
xor
hlt
femms
jl
pop
dec
shlb
mov
dec
pop
cmp
mov
pusha
movsb
inc
push
js
dec
push
test
mov
dec
cmpsb
xchg
xchg
adc
mov
adc
push
into
js,pn
xor
dec
adc
loope
sub
in
cmp
test
pusha
push
pusha
das
in
add
repz
aas
sbb
sbb
dec
push
xor
add
aam
sbb
notb
push
loopne
hlt
rolb
cmpsb
shll
inc
xlat
scas
loope
add
push
inc
dec
pop
add
pop
cs
and
clc
into
and
out
cmp
pextrw
pusha
mov
mov
insb
inc
addr16
push
movsl
mov
lock
mov
cmp
lock
add
mov
xlat
lret
dec
add
mov
lods
mov
out
out
pop
cmp
xchg
rcr
ds
adc
inc
int3
xor
mov
xchg
bound
fldl
mov
add
movsb
jmp
adc
mov
mov
sub
stos
xor
add
inc
mov
mov
jne
sbb
cmp
sbb
hlt
lret
insl
pand
adc
sbb
addb
pop
fstpl
test
jecxz
cmpsl
mov
mov
add
mov
jg
xlat
ljmp
adc
pusha
adc
pop
add
loopne
inc
add
push
loop
lahf
fdivrs
cmp
xor
or
adc
pop
pop
and
add
ds
cmp
push
jp
pop
lods
addb
sbb
js
call
jo
fsubrl
cmp
fsubp
push
aas
sub
xor
adc
add
dec
push
sahf
and
lds
dec
xchg
outsb
sarb
fimuls
inc
mov
add
popf
sbb
cltd
je
and
outsb
hlt
dec
inc
push
or
pop
mov
add
lea
cwtl
push
addl
push
mov
sub
cmp
pusha
dec
and
xor
andl
or
add
pop
mov
leave
sub
sbb
call
xor
mov
xchg
dec
cmp
jg
and
mov
sub
inc
adc
in
add
sbb
push
mov
cld
add
fcom
xchg
test
int3
scas
lods
inc
orl
fwait
dec
pop
push
pusha
jbe
mov
inc
and
insl
dec
xor
dec
add
rol
push
jmp
xor
pusha
mov
aad
mov
add
nop
int3
push
dec
jg
add
inc
cmp
add
add
fisubl
add
jae
iret
xlat
in
outsb
or
ds
jnp
sbb
or
sub
das
fincstp
repnz
xchg
mov
pop
inc
sbb
cli
push
enter
pop
add
mov
jp
dec
dec
pusha
nop
faddl
lcall
out
cmp
pusha
sbb
add
dec
jnp
adc
pop
lock
test
mov
data16
stos
add
cld
push
loopne
mov
in
add
ja
aas
and
and
sbb
cmp
add
lcall
sub
add
xchg
add
cmpsl
mov
and
add
loope
sahf
rolb
or
sbb
add
addl
xchg
jg
movsl
xchg
iret
mov
aaa
nop
sub
fmul
in
orb
cmp
testl
sub
mov
push
popf
scas
jo
ljmp
sarl
mov
push
adc
ja
pop
flds
mov
loopne
pop
ret
mov
xor
into
test
fcoms
mov
dec
push
xchg
dec
xchg
xor
fiaddl
stc
out
dec
adc
rorl
imul
push
ljmp
xchg
add
shrl
out
jns
add
mov
mov
cli
adc
imul
cmp
xchg
add
adc
pop
and
cmpsl
dec
jge
adc
inc
push
cmp
mov
mov
cs
adc
xchg
add
jno
pop
adc
cwtl
cmp
sbb
outsl
mov
jg
pop
lods
out
test
repz
in
mov
mov
outsb
add
jle
shl
add
pop
inc
and
imul
and
add
add
and
dec
xor
ret
dec
or
sbb
cmp
sub
bound
leave
sar
lret
arpl
pusha
xchg
adc
ficomps
mov
ds
cli
lods
shrb
inc
std
inc
sub
jecxz
pop
repz
add
mov
xlat
adcb
add
lret
push
jmp
mov
repz
pop
sub
add
pushf
jl
add
je
out
or
mov
jbe
sbb
fs
ja
adcb
iret
loope
cli
sbb
andb
or
sub
cmp
rep
jg
dec
jp
add
out
cmp
or
ja
add
aaa
dec
pandn
add
jp
dec
push
add
mov
sbb
jbe
dec
xor
add
jl
mov
notl
fildll
push
movsb
loopne
stos
cmc
into
repz
or
push
sbb
or
jp
cwtl
push
nop
dec
add
leave
popa
popf
adc
dec
es
data16
scas
mov
mov
es
xchg
pop
rclb
and
push
push
add
enter
adc
add
mov
xchg
fnstenv
outsl
stos
fs
loopne
sub
sbbl
lods
fwait
mov
push
push
lahf
dec
fmuls
lret
lret
adcl
into
pusha
or
loopne
mov
xor
xchg
and
into
add
or
fldpi
ficoml
fidivrs
xor
rorb
sbb
and
pusha
test
ljmp
clc
sbb
inc
dec
add
jno
testl
sbb
addb
bound
scas
lods
addb
ret
in
lcall
movsb
testl
push
adc
jne
add
or
lods
mov
out
in
mov
mov
dec
add
xlat
mov
rorb
pop
sbb
mov
jb
rcrb
in
pop
call
out
movb
jb
jg
jle
inc
xor
fnstsw
adc
cli
incl
xor
scas
and
lods
testb
dec
dec
loopne
lret
or
push
in
or
addl
push
push
data16
or
sub
outsl
dec
dec
lret
shlb
ja
xor
xor
test
push
xor
mov
xor
int
adc
or
or
add
cld
sbb
cmpb
push
xor
pop
loope
and
xor
out
sub
subl
cmp
jge
or
call
scas
mul
inc
jge
mov
push
shlb
lods
xchg
adc
dec
aam
lret
push
in
add
inc
push
jno
mov
xchg
xchg
mov
pop
gs
mov
jno
push
sbbl
cmpsl
xchg
dec
and
pop
daa
mov
cmc
jg
xchg
sub
inc
aas
pop
stos
xorb
fidivl
loope
xchg
adc
or
jo
incl
and
push
test
lret
mov
out
jmp
cwtl
sahf
cltd
mov
pop
inc
or
add
dec
test
orl
cmp
xchg
in
sti
add
push
pusha
cmp
addb
ror
jns
sbb
sub
xor
ljmp
add
xchg
sysret
lock
imul
and
loop
add
into
leave
in
loopne
push
pop
cmpb
push
out
pusha
bound
lret
mov
jmp
pop
sbb
imul
sub
sbb
das
jle
mov
rorl
mov
je
int
testl
xchg
xchg
in
add
call
mov
outsl
add
adc
cs
sub
call
gs
loope
in
xchg
rcr
cmp
push
lret
in
lret
shl
sub
ja
add
pop
push
or
cmp
push
cmp
in
pusha
ds
add
and
jl,pt
mov
popf
in
andl
add
cmp
stc
add
js
loop
pop
add
mov
insb
pushf
xor
add
icebp
aaa
xorl
sub
sub
add
sbb
repnz
and
adc
dec
mov
mov
push
aas
dec
insl
pusha
jl
mov
das
add
jae
iret
addr16
add
test
cltd
jb
cmp
mov
xor
xor
jae
aad
jge
pop
cld
enter
add
jne
addr16
add
push
ret
data16
pushf
cmovns
dec
in
mov
cmpsl
imul
dec
or
push
jp
cld
push
xor
sbb
repz
repnz
std
pop
inc
inc
xchg
dec
xchg
xor
popf
xchg
out
xor
add
add
push
add
cmpsl
popa
test
stc
sti
mov
jp
mov
pop
cpuid
pop
mov
fwait
or
mov
imul
lea
sbb
rdtsc
xlat
add
inc
add
mov
test
mov
or
pop
fstps
in
mov
rcrb
jge
pusha
lcall
in
cmpsb
out
push
mov
mov
imul
add
repz
js
adc
adc
stos
testl
fnstcw
adc
pop
inc
or
movsl
pop
cmp
fs
shl
add
lcall
pop
push
mov
add
sub
dec
dec
add
ja
mov
cmp
rcrb
test
aas
sti
xchg
movsl
ret
mov
sub
or
cmpsl
mov
leave
loope
xchg
sbb
repnz
adc
out
lret
and
in
pop
mov
pop
push
stc
stos
aam
inc
dec
pop
loope
mov
pop
mov
add
or
cmpsb
pop
nop
test
mov
clc
cli
push
dec
ret
lds
adc
pop
sbb
push
mov
test
jecxz
dec
nop
aas
adc
mov
rcr
fsubs
fwait
imul
pop
dec
and
es
push
pusha
adc
or
rcl
outsb
mov
add
imul
push
mov
inc
pop
add
int
leave
jge
adc
cmp
or
lds
popf
in
jp
mov
and
imul
fidivl
add
mov
ror
inc
fimuls
dec
icebp
fiaddl
mov
bound
pop
lods
mov
cmp
adc
jae
add
pop
push
xchg
sbb
sub
mov
lret
cmp
or
adc
and
push
outsb
imul
or
push
scas
jecxz
jle
add
xlat
movb
sub
addb
rolb
sub
in
lds
cmp
out
push
aam
enter
repz
stc
sub
cmp
sub
jb
sarl
movsl
adc
add
jns
jp
mov
add
push
sbb
sahf
shr
stos
add
sub
test
jge
add
sub
fidivrl
js
icebp
sub
xchg
push
shlb
mov
mov
movsb
sub
rcl
push
and
sub
int3
lahf
add
ja,pt
push
adc
sbb
daa
outsl
jno
shlb
inc
adc
popa
arpl
mov
jge,pn
add
aad
and
lds
add
inc
jne
sbb
jle
cmpb
jns
xchg
add
in
movsl
in
sbb
test
and
xor
out
test
rcrl
aad
popf
flds
mov
into
adc
or
or
hlt
hlt
cli
mov
jecxz
test
dec
test
add
hlt
mov
fwait
addb
jbe
mov
lret
sub
and
push
add
or
or
inc
xor
jle
cwtl
xchg
sub
je
jp
ja
xor
sub
shll
xor
and
and
mov
sub
adcl
add
cmc
mov
push
subl
sub
sbb
in
addl
lcall
rorb
lods
mov
popa
subl
push
jecxz
scas
nop
push
or
call
cmovnp
and
mov
loop
xor
xchg
lods
scas
lods
test
push
les
loopne
push
popf
mov
xchg
movsb
xchg
arpl
lahf
roll
or
xorb
cmp
add
nop
mov
pop
push
in
and
loopne
cmp
sbbl
aad
adc
jne
jl
xor
mov
lret
ret
adc
inc
add
adc
fdivrl
shl
fists
mov
push
cwtl
out
jmp
pop
mov
sbb
pop
and
add
add
sub
in
in
mov
movsl
adc
hlt
or
or
pop
pop
push
inc
pop
sbb
sbb
add
push
push
test
sbb
daa
ret
jmp
dec
ret
nop
push
xchg
or
iret
dec
add
mov
cmp
add
adcb
add
mov
pop
mov
out
xlat
pop
cmp
mov
pop
inc
push
mov
mov
jo
jbe
js
mov
mov
add
xchg
add
xor
dec
push
mov
aam
in
outsl
nopl
pop
dec
insb
leave
xchg
push
mov
push
ret
shr
jmp
push
xchg
fsts
mov
aam
dec
dec
and
jmp
add
xor
pop
inc
mull
xchg
mov
xchg
cmpsb
xchg
push
pop
cwtl
dec
or
mov
mov
fiadds
xor
loop
dec
test
adcb
inc
arpl
mov
mulb
insl
ds
js
xchg
pop
add
loope
call
add
ficomps
push
rcll
js
pop
adc
push
addb
sub
shll
push
gs
or
leave
or
sbb
push
add
insl
lcall
adc
ficoml
out
xor
rcl
push
test
push
lret
sbb
xchg
test
out
std
fcoms
add
loop
fs
inc
gs
popa
add
jnp
adc
jge
xlat
jns
xorb
mov
mov
push
sbb
imul
hlt
nop
jo
hlt
or
fisttpll
inc
xchg
into
push
xchg
pop
mov
loopne
cmp
mov
js
dec
push
xchg
jp
mov
sub
and
lret
test
add
inc
or
es
sbb
lods
lods
fisubl
jmp
xchg
stos
sub
inc
arpl
mov
mov
aas
add
cmp
add
pop
pusha
push
mov
mov
aad
out
movsl
arpl
cmp
in
jg
sub
jbe
les
xchg
add
mov
sub
popf
pop
xchg
xchg
xor
cmpsl
out
xchg
cmp
xor
inc
aaa
mov
add
fists
dec
adc
xchg
rcrb
jecxz
lahf
out
cmp
addl
sub
pop
movsb
cmpsb
cmc
xchg
sub
dec
add
leave
mov
jo
dec
shll
sbb
push
xchg
repnz
jecxz
lcall
std
pop
adc
stc
xchg
int
xor
popa
add
aaa
dec
jmp
mov
jnp
add
lock
sbbb
pop
and
ss
or
sub
pop
in
xor
fs
cmp
push
repnz
add
nop
call
push
mov
into
roll
sub
pusha
push
scas
lds
imul
outsb
mov
call
inc
mov
cmp
jp,pt
sbb
xchg
in
mov
es
inc
aas
xor
test
pop
sbb
pop
test
test
sahf
inc
in
add
add
adc
das
dec
sbb
gs
mov
sub
pop
add
popl
cmp
mov
pop
xor
mov
jge
fsubl
and
sbbl
insb
jge
or
sub
jo
add
arpl
mov
xor
pop
fiadds
adc
rorl
add
lds
adc
adc
and
call
mov
inc
jno
mov
int
out
cmpb
lods
or
sarb
roll
in
std
inc
stos
fsubs
adc
inc
jbe
dec
add
aam
mov
jne
push
sbbb
sbb
fs
stc
rolb
rolb
in
xchg
add
mov
xor
sub
lahf
js
orb
push
insl
adc
popa
xor
or
push
addb
xchg
dec
xchg
iret
daa
out
pop
sbb
mov
adc
mov
push
push
shll
in
mov
push
adcb
add
lahf
mov
inc
mov
xchg
cmp
ret
clc
movsb
cwtl
or
xor
mov
sbb
sub
jnp
jp
stos
inc
jmp
fs
xor
pop
cmp
lods
hlt
mov
popf
stos
xorb
mov
add
xchg
fcmovnb
movsl
dec
push
ja
sbb
jecxz
gs
pusha
mov
ja
and
add
scas
xchg
mov
jae
jge
fwait
rolb
and
pop
mov
outsb
in
or
add
jae
les
add
cmp
mov
sub
xchg
inc
sets
xchg
mov
imul
lds
dec
insb
push
adc
jbe
hlt
lcall
xchg
push
gs
sbb
scas
fidivs
pop
ds
and
mov
cmp
stos
inc
mov
insb
mov
nop
rolb
adc
jp
shll
add
cmc
ret
sbb
adc
rolb
mov
js
mov
pop
repz
cli
mov
push
pop
ret
fsubr
pusha
lods
fucomi
sbb
or
sub
loopne
dec
add
mov
mov
pop
dec
xor
xor
add
adc
mov
inc
and
pop
add
and
sbb
add
jg
testl
test
inc
fisttpl
sbb
sbb
pop
addb
cwtl
pop
push
ja
sbb
pop
mov
out
fldpi
cmpl
int
enter
mov
addl
and
movsb
pop
add
in
lock
shr
sbb
xor
jmp
mov
ret
or
inc
xor
rcl
cmp
orb
mov
lret
add
shr
sti
sbb
jo
stc
xor
dec
arpl
add
ja
sbb
cmp
pop
or
std
add
sbb
add
or
rorl
cltd
pop
mov
stos
add
rcrb
fisubl
xor
xor
pop
add
cmp
add
xchg
ret
lahf
dec
icebp
sub
jp
or
roll
add
pop
inc
sbb
sub
inc
add
cmpsb
pop
cmp
cmp
fwait
dec
and
push
aas
imul
jb
je
sub
xchg
jnp
and
pusha
pop
xchg
test
add
add
outsl
adc
and
pop
int
adc
daa
arpl
and
or
inc
mov
cmp
inc
mov
les
std
lret
mov
mov
push
pop
add
and
movsl
cmp
loopne
sub
jo
push
pop
jg
mov
push
lock
pushf
jecxz
cmpsb
lcall
and
cmp
rcrl
movsl
xchg
pusha
mov
sbb
inc
pop
ljmp
testb
out
in
jecxz
add
jle
cltd
push
rorb
sbb
cmp
push
add
fadd
sbb
dec
out
sbb
xchg
inc
sbb
sar
xchg
test
repnz
incl
or
or
fsts
jp
mov
dec
add
pop
jb
or
inc
loop
out
movsb
pop
jmp
aaa
add
inc
pop
fmuls
xor
push
xchg
or
cmpsb
movd
and
inc
inc
mov
mov
out
dec
sub
loope
inc
adcb
leave
jg
cltd
add
orb
lret
das
int
push
fstpl
sub
push
cs
sbb
or
inc
and
test
dec
mov
aas
add
mov
jno
iret
cmp
mov
js
loopne
push
adc
push
jge
shrl
or
mov
adc
jmp
hlt
mov
xor
nop
dec
or
sbb
xchg
mov
insb
xchg
dec
sbb
and
cld
outsl
push
pop
mov
mov
rcl
add
xchg
xor
sti
mov
jmp
push
jp
andb
pop
jl
enter
jbe
xor
in
push
or
mov
icebp
ror
add
jmp
daa
add
lret
sub
leave
xor
add
jnp
dec
lock
pop
pop
push
mov
ljmp
jo
sbb
add
sarl
pop
arpl
dec
mov
sbb
add
leave
dec
jmp
or
aaa
jae
jge
in
adc
mov
nop
loope
jl
jge,pn
push
add
mov
fstpl
shrl
arpl
add
push
iret
je
mov
jecxz
pusha
jle
adc
push
add
dec
cmpsb
lret
rcl
or
ficomps
rcrb
pusha
lcall
notl
inc
clc
xchg
add
ljmp
lods
and
pop
inc
test
in
ret
mov
sbb
sbb
sub
outsl
sbb
pop
pusha
or
mov
fsts
dec
jg
rolb
sub
std
hlt
lods
cmc
add
push
out
sahf
xchg
inc
jae
cmpsl
cmpsl
mov
and
sub
bswap
adc
cmpl
out
cs
add
insb
cmp
push
cmpsb
loop
cli
fstpl
jl
shr
iret
mov
sbb
adc
push
xor
js
ds
adc
add
enter
push
inc
xchg
test
lods
stos
aas
repnz
xor
rolb
clc
inc
popl
push
cmp
cmp
stos
nop
pop
mov
into
in
adc
enter
xchg
popf
cwtl
mov
sahf
mov
add
push
out
sub
lods
outsl
push
mov
aam
jo
add
add
in
sbb
mov
mov
fwait
daa
jmp
insl
adc
call
repz
clc
mov
xchg
add
sub
in
mov
movsb
xchg
pop
test
js
cmpsb
sbb
add
scas
pusha
fstl
idiv
xchg
iret
dec
insl
fsubs
sub
inc
inc
cmpxchg
jg
add
xor
sbb
pushf
or
icebp
cli
loope
in
inc
push
lret
arpl
lahf
add
bound
pop
or
dec
mov
out
je
daa
pusha
inc
mov
cs
xchg
xchg
add
in
mov
xchg
pop
jecxz
dec
adc
pusha
sbb
test
cmpsl
stos
pop
inc
jecxz
dec
cmp
aad
or
stos
xchg
xor
xorb
iret
fdivrs
pusha
cltd
add
push
dec
add
les
mov
xor
adc
push
adc
or
dec
and
lret
cs
xor
rcrb
adc
mov
jno
cmp
es
inc
jno
xor
imul
adc
mulb
outsb
push
inc
loopne
adc
xchg
shrb
dec
mov
add
mov
xchg
or
test
xchg
cmp
mov
stos
dec
mov
getsec
cmp
ss
xchg
pop
push
cs
adc
push
pop
rorb
and
pop
mov
mov
lods
jmp
sbb
jae
lcall
cmpsb
or
out
or
aam
and
lahf
cltd
mov
shlb
pop
cmp
jp
bound
jmp
js
add
xor
rcl
mov
adc
arpl
lods
cmpb
jl
xchg
ror
ljmp
repnz
dec
outsl
pusha
mov
xchg
nop
out
or
adc
pop
aam
add
sub
sub
sbb
xor
mov
mov
dec
lahf
orb
pop
call
std
loopne
xchg
sbb
mov
fisubrl
sbb
cmc
insl
cmpsl
pop
shrl
dec
lock
jmp
insl
lahf
mov
in
mov
lock
jne
mov
xor
or
inc
orb
add
pop
jg
stc
addb
ficoml
hlt
adc
cwtl
jnp
dec
jb
mov
add
pop
hlt
mov
and
data16
iret
imul
pop
roll
out
adc
add
push
insl
pusha
xor
dec
add
daa
mov
lahf
pop
push
js
andl
shlb
add
pushl
and
fildl
test
into
mov
jecxz
in
mov
mov
loop
ss
push
inc
stos
pop
ret
add
out
add
loope
inc
and
cmp
push
mov
inc
filds
jge
roll
add
fnstcw
add
pop
pop
xchg
int3
iret
lret
mov
or
push
rolb
cmp
inc
clc
mov
add
insb
add
pushf
scas
popf
loop
pop
mov
clc
mov
xor
jne
adc
faddl
lret
sbbb
aaa
orb
pop
mov
cs
das
add
cwtl
pushf
fadd
inc
ret
out
push
in
add
xorb
cmp
xor
lret
add
and
or
adc
movsb
push
shll
lock
cmp
aam
mov
test
jbe
stos
add
call
lcall
add
outsl
pop
or
jle
add
sbb
dec
jne
or
or
add
outsb
jo
stc
xor
andl
mov
or
aam
and
out
mov
adc
outsl
xor
xchg
aam
add
mov
xor
add
mov
fs
adc
leave
mov
scas
sub
pop
mov
xchg
arpl
and
xlat
inc
xchg
test
cmc
pop
push
divb
daa
xlat
ja
mov
jnp
cmp
js
add
jecxz
xor
adc
add
cmp
jge
pop
adc
xor
call
mov
mov
adc
cmpsb
push
add
ss
add
in
movsb
and
xchg
mov
scas
addl
shll
add
fdivr
mov
cmpsb
add
mov
mov
ret
add
or
pop
add
mov
adc
sub
data16
add
add
mov
mov
rorb
sbb
out
cmp
xor
lret
pop
icebp
outsl
loopne
pusha
pushf
addr16
add
shll
daa
mov
cmp
sti
add
ret
mov
fdivrl
mov
rclb
lret
mov
stos
setl
add
lahf
pop
je
xor
mov
lock
test
inc
or
js
lds
mov
lock
dec
cwtl
xor
notb
xor
dec
jns
or
adc
addb
cmp
ret
imul
vmovaps
cltd
mov
enter
add
pop
shll
test
loopne
sub
xor
cld
lcall
dec
ret
test
sub
adc
scas
and
divl
sbb
test
pop
test
nop
and
test
lods
xlat
or
lods
and
add
sbb
clc
nop
shlb
mov
pop
lahf
call
mov
and
out
jae
int3
and
int
adc
push
fcomps
mov
mov
mov
dec
loopne
and
es
add
push
icebp
xchg
cmp
inc
sarl
nop
inc
jge
and
cmpsb
nop
fists
add
and
inc
add
jecxz
mov
in
adcb
pop
pop
popf
sti
in
scas
adc
add
sbb
jp
inc
je
pop
xchg
mulb
shlb
and
dec
lock
sahf
mov
push
pop
push
mov
jle
add
js
jle
enter
pushl
adcb
inc
add
inc
push
lret
mov
mov
push
es
inc
daa
adc
sbb
loop
adc
lock
rclb
cmpsl
outsb
xchg
loop
mov
stos
add
and
jecxz
push
xchg
or
in
mov
je
dec
in
test
imul
push
pop
divl
or
add
icebp
push
push
in
push
push
cwtl
ja
adc
add
in
movb
pop
js
lock
xchg
ljmp
add
mov
mov
outsb
mov
push
add
jne
ret
dec
lds
mov
cmp
pop
addr16
xchg
sahf
cmpsl
insb
inc
xchg
call
pop
sahf
jp
mov
sti
sub
pop
pop
sub
sub
outsb
sar
in
in
out
or
cld
xor
push
mov
call
push
push
push
cmp
dec
push
outsl
and
lea
lahf
lcall
push
in
jne
xchg
push
add
adc
sti
ljmp
mov
sbb
pop
rclb
mov
dec
xchg
and
fmull
jb
sub
add
xchg
jp
inc
shrb
jp
sbb
sbb
ret
jecxz
ret
add
lods
sub
xchg
push
lock
adcl
lds
xor
clc
repz
push
and
addl
push
mov
sub
push
jl
pop
popl
subl
out
push
and
adc
aas
xchg
testl
add
push
pop
movb
push
iret
pushl
sbb
rorb
or
push
push
shrl
push
sarl
mov
lods
mov
cmpl
xchg
pop
sbb
jmp
or
and
xchg
orps
xchg
sub
add
lock
ds
enter
adc
leave
test
jl
sbb
push
int3
and
pusha
pusha
pop
out
loopne
pop
and
insb
shlb
test
cmpsb
jo
add
mov
fstpt
jp
mov
mov
aas
xchg
ljmp
repz
addr16
inc
out
add
pushf
adc
jp
add
mov
cmp
push
shll
push
imul
rolb
fadds
bound
xor
and
mov
jl
add
mov
je
popf
faddl
push
dec
mov
pop
cmpsl
ja
sub
or
mov
jne
inc
insb
inc
push
call
fs
pop
push
add
and
ret
xor
pusha
jg
jl
loopne
das
mov
rorb
pusha
mov
cmc
mov
pop
popa
add
stc
ret
fmul
lock
je
or
add
xor
loope
and
addl
jbe
call
adc
xchg
jmp
out
gs
adc
add
and
mov
rcrb
outsb
sub
loope
xlat
addb
add
pop
xor
fstps
adc
and
ja
jbe
cmp
xchg
fildll
aas
xlat
push
cwtl
or
cltd
fs
add
add
add
ficoms
xorb
shl
inc
adc
loopne
sbb
inc
idivb
sbb
cmp
inc
xchg
bound
gs
out
jmp
add
fdivr
in
pop
orb
pop
aas
cwtl
adc
add
iret
les
or
enter
add
jmp
cltd
add
aad
sbb
ffree
dec
mov
js
jmp
mov
mov
sub
push
gs
shrl
js
lahf
cmp
cmpsb
jge
cmp
ja
ds
mov
lret
pop
pop
xor
and
cmp
xchg
add
pop
inc
pushf
or
or
push
call
shl
ds
xor
add
pop
xchg
add
jb
add
fwait
ret
add
lea
cld
bound
sbb
cmp
mov
jno
fdivr
movb
jmp
addl
mov
add
mov
add
in
adc
pop
and
push
push
out
rcl
rclb
pop
pop
scas
or
dec
into
cmpsl
add
sub
test
enter
push
shl
cltd
iret
adc
add
or
lods
movsb
inc
add
testl
sub
add
sub
scas
push
mov
add
add
mov
add
shr
leave
cmp
xor
sbb
std
lods
mov
push
cwtl
mov
add
jecxz
bound
js
shlb
enter
lds
es
add
mov
jmp
sarl
insl
add
shll
adc
mov
add
dec
add
add
or
pop
adc
xor
or
shrb
xchg
jl
add
jle
add
cmc
adc
cld
pop
sub
mov
add
rcr
mov
loope
incb
mov
xor
addb
rolb
jbe
scas
mov
dec
rolb
pushf
sahf
xor
jg
and
mov
data16
testb
cmpsb
stos
push
jno
add
push
mov
xor
fadds
add
idiv
ret
cmpsb
and
push
pop
aam
inc
pop
aas
rclb
mov
adc
or
xor
mov
sbb
test
or
out
cmp
mulb
popa
sbb
pop
add
aas
sub
out
cmp
jbe
push
ret
sti
add
loopne
add
idivb
add
adc
in
xchg
sub
add
icebp
cld
clc
mov
adc
bound
push
add
sbb
jge
pop
or
sti
hlt
sarb
push
jge
sbb
or
xor
xchg
jmp
rorl
es
sub
add
push
out
jmp
inc
loopne
cs
jg
test
and
loope
inc
pusha
test
mov
enter
lods
mov
xorl
xchg
test
push
mov
pop
stc
mov
sti
rolb
scas
or
stos
add
imul
loopne
inc
add
push
dec
sub
shrl
lds
xor
mov
or
add
int
mov
push
ret
mov
aas
loopne
and
push
adc
nop
adcl
pop
sub
dec
pusha
cltd
pop
mov
cmpxchg
js
dec
mov
or
xchg
push
in
call
mov
dec
daa
leave
add
adc
inc
add
sbb
add
lods
inc
mov
int3
loop,pn
add
sub
inc
fwait
sbb
add
mov
xor
cmpsb
ror
push
xchg
mov
sarl
fbld
shll
adc
adc
gs
outsb
test
jnp
mov
rorl
xchg
push
loop
mov
add
loopne
push
add
add
into
push
das
add
mov
loope
xor
sub
repnz
adc
inc
adc
jne
enter
mov
adc
test
cmp
rcr
sbb
inc
lods
leave
test
pop
push
xchg
cli
adc
sbb
sub
push
repnz
jns
je
jne
sub
in
add
pop
movsb
pop
lods
sbb
adc
mov
pop
jb
inc
jbe
add
mov
add
push
outsl
movsb
je
add
iret
sbb
jns
cmp
inc
cwtl
cmp
mov
xchg
mov
cmp
inc
out
mov
adc
pop
shlb
cmp
addr16
mov
pushf
div
mov
mov
add
jge
xchg
add
scas
call
shl
jge
pop
mov
add
add
pop
bound
pop
pop
into
inc
sub
add
fistpll
add
push
sub
add
or
pop
out
and
xchg
and
fidivs
and
sbb
daa
iret
jmp
inc
mov
adc
add
adc
lock
mov
jle
add
lcall
mov
pop
daa
test
mov
popf
pop
mov
cltd
adc
nop
cmc
ret
shlb
lret
pop
fcomps
in
js
jg
fmuls
and
add
adc
or
loop
sbb
in
insl
out
push
les
dec
data16
push
pop
or
jp
pop
popf
shl
mov
add
lcall
add
stc
push
movsb
add
mov
mov
mov
cmc
mov
inc
repz
aas
jp
pop
decb
adc
lock
push
push
xor
testl
pop
add
add
mov
sbb
loop
mov
or
rol
and
add
loop
mov
rcrl
cmpb
add
int
mov
test
add
xchg
out
aas
jl
add
aad
pushf
push
add
pusha
jne
imul
outsl
add
icebp
movsb
push
das
cmp
out
xchg
add
sbb
decb
cmc
push
cmpsb
lret
out
add
fstpl
mov
loop
lods
inc
and
add
push
lahf
fdivp
sti
shl
push
and
lcall
iret
inc
mov
stc
inc
sbb
push
push
leave
pop
cs
adcl
mov
inc
shlb
push
push
and
jge
add
or
sbb
push
add
imul
ds
cmp
fcoms
sbbb
sub
je
mov
nop
cmp
pop
popa
into
xchg
loope
and
fmuls
pop
pop
out
add
add
movsb
add
inc
inc
movsl
test
lock
mov
scas
cmc
ret
aad
add
inc
fs
jne
push
add
cmp
jle
ret
test
adc
add
pushw
lods
in
cld
sub
add
in
testb
add
insb
and
aam
add
inc
enter
mov
jmp
adc
scas
into
push
repz
aaa
ss
repz
insb
es
xchg
push
dec
lahf
nop
in
push
push
mov
or
sub
ret
pusha
push
xchg
lock
int3
pop
cmpsb
add
shrb
mov
in
add
sub
add
add
movsb
int
hlt
adcl
adc
cmpsb
addb
rorl
jo
lea
jg
push
adc
lods
mov
cmp
jne
loop
dec
cmp
scas
std
lds
inc
jmp
psrlq
sbb
insl
push
scas
imul
enter
add
ret
add
xor
int3
es
xchg
add
sbb
fwait
add
inc
mov
aam
dec
test
sub
jne
lock
add
pop
lret
rcrb
popa
rorl
pusha
shlb
stc
fs
mov
add
add
and
in
inc
fnstcw
int
cld
loope
add
jae
push
cmp
fwait
fs
dec
fsubrs
add
jne,pn
pushf
or
shlb
sub
sub
add
imul
pop
pop
xor
add
das
sub
and
loopne
jo
test
xorb
sbb
cbtw
js
push
jbe
es
jns,pn
cli
sub
mov
aam
and
cmp
cmp
push
xchg
mov
add
addb
mov
out
mov
adc
stos
sub
pop
xor
add
sti
pushf
push
shrb
mov
cld
add
push
bound
stos
das
call
repnz
mov
sub
es
or
dec
cmp
sti
and
lcall
testb
lock
add
lret
shll
cmp
hlt
mov
xchg
xchg
cmp
fsubr
cmc
dec
ret
outsb
or
dec
xchg
jp
mov
pop
push
arpl
orl
adc
outsl
sarb
imul
lds
psubsw
sahf
push
add
or
or
sbb
fsubrs
popf
divl
je
add
inc
push
mov
je
test
push
push
lock
add
shlb
filds
cs
inc
hlt
sbb
mov
data16
addb
add
mov
cmc
addl
or
add
bound
sub
add
mov
pushf
addb
and
rcrb
add
fdivrl
lahf
sbb
xor
sbb
mov
mov
sub
xor
outsb
sar
pusha
pushf
mov
pcmpgtb
ret
xor
cwtl
aas
xchg
push
inc
test
dec
imul
mov
add
sub
fistpl
cmp
test
sbb
inc
inc
cmc
int
lret
add
mov
xor
andb
sub
xor
or
mov
je
or
in
add
ror
mov
add
dec
incl
je
push
std
push
sbb
jae
mov
inc
jge
add
mov
and
mov
add
xor
dec
iret
stos
xor
xchg
cmpl
imul
xchg
pusha
pop
add
and
push
cmp
call
decl
lahf
add
mov
mov
in
push
cmp
dec
cld
mov
adc
add
xor
add
fistps
add
lds
add
shl
mov
out
shrb
xlat
and
sbb
jl
inc
test
dec
mov
in
lcall
in
adc
mov
test
add
incb
mov
pop
test
movsb
arpl
push
negl
dec
push
pop
pop
and
pop
call
enter
push
insb
jo
mov
pop
cmp
pop
sbbb
add
test
fildl
hlt
xchg
inc
scas
push
pop
ds
cmc
cltd
sub
or
aam
cmp
call
ret
push
adc
pop
stos
jne
inc
or
and
push
cmp
arpl
fstps
xchg
xor
pop
pop
jo
mov
xchg
repz
pop
insb
dec
xor
lcall
daa
sub
test
add
sbb
js
xor
sbb
jecxz
inc
enter
sbb
adc
es
add
xor
add
pop
mov
mov
add
sub
xchg
iret
pusha
pop
jge
mov
cltd
lods
push
lcall
cmpsl
out
clc
add
les
mov
add
ljmp
cltd
xor
jl
push
cmp
sti
add
icebp
out
mov
sub
loope
or
adc
aad
and
add
sub
divl
mov
ds
sti
jb
int
and
push
jne
add
pusha
or
fimull
cmpsb
sub
sub
pushf
outsl
add
out
in
movnti
insl
push
mov
out
mov
dec
sub
cmp
adc
mov
add
repnz
mov
subb
jmp
add
sbb
aad
mov
arpl
outsl
stos
push
outsb
pop
repz
cmp
mov
push
test
adc
out
and
ret
std
or
sub
leave
fldcw
lods
incl
lret
out
mov
imul
js
add
into
add
pop
dec
lods
xor
lock
sbb
xorb
in
add
dec
or
ficompl
pushf
sbb
int3
mov
pusha
ja
inc
lahf
mov
pop
or
ss
add
int
lds
inc
lcall
mov
mov
mov
and
xor
jae
out
stos
add
cmp
xchg
dec
shlb
push
fldpi
aaa
push
and
inc
xchg
add
pop
add
add
fldl
fadd
adc
xor
adcb
sbb
dec
stos
jge
sbb
std
pop
sbb
pop
adc
add
jnp
xor
cmpsb
dec
sub
jecxz
add
push
add
sub
sbb
ffree
in
in
dec
int3
imul
cmp
call
sbb
mov
in
lea
std
loopne
xchg
add
pop
pop
inc
push
lcall
jle
adc
adc
mov
mov
cltd
das
dec
sbb
mov
lock
pop
sbb
lods
movb
lret
inc
push
cmc
pop
mov
add
cli
cmpb
mov
imul
adc
add
cli
push
cs
add
jno
inc
lock
add
popf
addb
call
sub
sub
dec
push
das
outsb
mov
xchg
rolb
push
xor
xchg
aas
mov
mov
adc
insb
cwtl
add
psrlq
mov
popa
aaa
arpl
outsb
pop
mov
fdivr
fcmovnu
or
subl
pop
mov
je
or
in
neg
mov
daa
add
subb
cld
cmpsl
add
cmp
dec
jno
adc
scas
pop
jbe
add
jo,pt
popf
pop
add
jg
jns
lahf
fmull
xor
ret
cli
push
imul
fs
pop
sbb
ret
xor
dec
pop
rolb
and
shlb
push
popf
inc
add
inc
mov
arpl
shlb
xchg
cmp
lock
add
pop
jns
mov
aad
sbb
push
scas
mov
or
mov
and
pop
fadds
lods
sbb
jle
mov
adc
push
adc
add
jmp
push
cmp
enter
movsb
inc
inc
adc
inc
loope
rclb
xchg
loopne
add
xor
filds
dec
rolb
push
push
cmp
mov
mov
fwait
add
jb
jmp
add
mov
mov
std
mov
ret
sub
stos
notb
push
jecxz
cmpb
insb
orb
pop
mov
jns
add
loop
popa
jb
add
sub
add
es
xor
dec
add
pop
or
into
dec
mov
leave
inc
sahf
or
enter
outsb
jecxz
jb
repnz
cli
mov
or
fwait
xor
adc
sub
push
pop
in
outsl
and
rol
fs
aas
imul
add
mov
and
popa
push
out
loopne
in
cmc
add
sbb
sbb
adc
mov
inc
ret
into
jl
mov
mov
jg
add
popa
dec
testb
and
xchg
mov
pop
or
jmp
neg
or
adc
popf
push
pop
dec
sbb
xchg
adc
mov
sbb
hlt
jge
jg
push
inc
fcmove
push
fstp
jbe
pop
loope
or
and
test
out
inc
std
mov
add
and
rorb
add
in
push
out
fiadds
idiv
or
add
sub
leave
adc
add
and
pop
and
inc
stos
jmp
xor
movsl
decl
loop
sbb
inc
mov
orb
shll
cmp
mov
sbb
je
int
mov
aas
inc
loopne
cmc
leave
sbb
jmp
pop
add
xor
aam
daa
dec
and
inc
pop
fs
frstor
imul
add
dec
xor
in
inc
stc
test
imul
insb
outsb
add
inc
push
addl
mov
fadds
cmp
mov
push
add
add
mov
iret
sub
mov
js
roll
cltd
jecxz
test
sbb
inc
add
and
adcb
xchg
dec
push
jae
add
dec
jecxz
mov
insl
subb
sbb
imul
sbb
in
mov
addr16
movsb
cld
ds
add
or
mov
enter
xchg
mov
pop
add
mov
mov
mov
nop
cld
mov
into
jae
imul
push
cmc
push
mov
and
pop
lock
sub
dec
lret
insb
pop
cmp
clc
add
pop
mov
xchg
add
ds
inc
inc
aad
cs
push
push
shll
fistpll
loopne
add
or
jle
cmp
inc
cmp
dec
mov
popa
div
dec
lock
les
inc
fldl
add
bound
jl
imul
mov
in
or
dec
xor
sbb
inc
jmp
mov
jns
in
xor
inc
fstps
fnstsw
outsl
js
add
loop
inc
push
int
jg
adc
inc
arpl
dec
push
add
rolb
push
mov
imul
dec
push
sbbl
ror
mov
and
or
xchg
mov
xor
rclb
sbb
mov
inc
fisttpll
scas
sbb
mov
mov
push
sub
sbb
inc
sbb
mov
adc
xor
or
dec
mov
inc
inc
pop
and
lock
sub
jbe
mov
xor
subl
mov
stos
and
pop
pop
mov
add
addr16
fisttps
jl
push
mov
rcrb
add
adc
pop
fldl
fcoml
mov
cmp
popl
je
mov
rcll
gs
ret
stc
jbe
or
js
inc
stos
jge
je
add
gs
pop
pop
sbb
cwtl
dec
enter
mov
add
jle
mov
jae
jno
add
sbb
pop
inc
add
stc
mov
pop
xchg
into
push
jnp
popf
pop
stos
jge
pmulhuw
mov
dec
jge
roll
xchg
js
adc
sbb
push
pop
pop
aas
mov
jne
pop
fstps
cmpl
mov
sub
inc
mov
les
shll
mul
add
inc
xor
dec
inc
cmp
jns
dec
insl
dec
adc
aam
dec
add
nop
pop
dec
loop
insb
and
lea
scas
sub
out
outsb
mov
or
lret
and
aam
add
inc
mov
add
stos
push
dec
shlb
xchg
pop
psubw
test
xchg
in
jmp
stos
cmp
pop
add
add
pusha
out
out
int3
or
shl
cld
xor
mov
loope
test
lods
jle
fstpl
fs
push
add
xchg
fs
mov
jb
xchg
add
ret
lea
test
push
icebp
add
cmp
pop
or
mov
lds
movl
add
jbe
imul
int3
add
push
sub
sub
pop
sub
movsb
cmp
dec
dec
and
ja
add
mov
push
out
pushf
jmp
je
notb
lahf
test
lcall
dec
sbb
pop
imul
nop
add
xchg
inc
jne
xchg
sub
js
cmp
out
clc
gs
test
fstpt
cs
mov
xchg
subb
push
xchg
hlt
adcb
int
nop
cwtl
jle
dec
popa
call
mov
sub
loope
mov
cmp
add
add
jbe
dec
dec
mov
ds
cld
subl
rolb
arpl
lock
cmc
sub
andb
push
mov
sbb
cmpsl
dec
shlb
shlb
fnstsw
rol
push
iret
shlb
pusha
aam
push
call
push
push
into
cs
nop
in
cmpsb
shlb
data16
in
xchg
add
and
xor
shll
add
cmp
add
faddl
es
sub
pop
movsl
and
or
aaa
mov
sub
add
xor
mov
sub
leave
nop
cmp
jmp
rcr
cmp
mov
orb
xchg
xorb
cmpb
jne
setp
jo
loopne
and
inc
sbb
or
ja
add
add
jns
xor
int
sbb
adc
in
or
js
nop
add
xchg
cld
popa
dec
out
push
add
andl
add
push
push
fisttpl
imul
inc
mov
sarl
push
add
adc
add
call
aas
mov
inc
inc
insl
ds
mov
xor
loope
ficompl
and
cmp
out
or
int3
loopne
adc
xorb
jg
add
test
lret
addb
push
mov
loopne
mov
fld1
xchg
add
daa
or
pmaddwd
jbe
pusha
into
sub
sbb
pop
mov
inc
pusha
pop
iret
je
aam
scas
add
enter
imul
aas
ds
cmp
ret
dec
xor
cmp
xor
shl
adc
fsts
xor
add
data16
dec
push
insb
rcll
loopne
dec
shrb
cmp
leave
xor
cmp
pop
stc
outsl
int3
pop
orl
add
rorb
in
js
add
roll
inc
add
inc
lods
pop
inc
clc
jne
or
push
push
mov
cmp
inc
add
inc
cmp
mov
xor
push
push
xchg
imul
cmp
movsb
aas
test
add
dec
sbb
sub
inc
clc
inc
push
push
inc
lcall
loope
sub
fadds
cmp
hlt
mov
sub
xor
mov
inc
stos
fisubl
mov
add
inc
fbld
and
sbb
add
shll
pop
cmp
loope
fcmovbe
push
mov
js
enter
lret
sti
movsl
pop
and
inc
mov
dec
add
and
negb
ljmp
mov
dec
cmp
sbb
fisubrl
mov
mov
adc
andb
cmp
add
pop
pop
int
mov
rclb
mov
jp
mov
lods
aaa
pop
roll
movsb
push
in
daa
cs
outsl
jle
and
sarb
jbe
cmp
lret
inc
out
sbb
mov
xor
frstor
es
push
loopne
mov
pop
push
dec
fidivrs
jge
add
aad
or
stc
xorb
and
and
cmp
aas
ljmp
clc
push
mov
addb
inc
or
mov
xlat
aaa
cmpsl
out
faddl
add
mov
js
mov
xor
out
mov
mov
or
dec
int3
in
inc
xchg
jmp
add
stos
outsb
shr
test
shrb
pminub
ljmp
dec
xchg
or
sub
mov
dec
xor
add
and
add
jno
enter
pop
lret
add
mov
sub
or
imul
or
lea
imulb
add
rolb
fbld
adcb
mov
mov
mov
add
xlat
into
xchg
repnz
popaw
mov
cwtl
xchg
inc
aad
mov
into
ret
out
lock
call
cmp
outsb
mov
cmp
int
sub
and
mov
add
and
js
sbb
pop
push
xor
pop
scas
ds
push
lods
test
adcb
pop
sbb
mov
xor
inc
cld
clc
inc
or
push
push
push
test
jne
xor
mov
push
and
add
pop
fmul
out
pop
jae
or
jl
inc
aad
out
rclb
ret
mov
jne
xor
mov
add
mov
mov
add
lds
cmp
jge
and
xor
push
add
mov
test
cmp
out
mov
add
js
and
adc
shlb
xchg
jle
jge
testb
out
sbbb
stos
in
pop
cmp
jnp
jo
mov
cmp
lret
add
les
clc
dec
decl
inc
orl
loopne
hlt
shrb
loope
push
mov
rorb
pop
out
push
shrl
inc
mov
lcall
mov
lock
adc
sbb
cmp
enter
aas
or
adcb
icebp
mov
dec
mov
jo
rolb
push
loop
add
xchg
mov
xchg
add
les
loope
roll
mov
cmp
shl
sbb
pop
inc
jg
in
pop
pop
sbb
cld
std
adc
adc
fistl
dec
add
cmp
mov
adc
cmp
or
add
mov
sbb
cmp
jl
dec
xor
pop
push
cmp
fsts
mov
push
or
pop
ds
adc
sub
cmp
shr
mov
stc
popf
cwtl
inc
push
pop
inc
pop
cmp
jecxz
imul
sbb
xor
jb
test
and
fbld
add
push
divb
xor
sarl
add
sbb
fwait
das
inc
dec
push
aas
cmpb
add
jns
sub
xchg
adc
loope
jecxz
in
jae
mov
outsl
js
in
arpl
pop
xor
mov
jo
add
xchg
cmpsl
subl
inc
cmp
dec
pop
adc
cwtl
data16
imul
movsb
sub
pop
cmp
sub
aam
pop
lock
cmp
lea
test
cmp
rep
mov
lret
cmp
jno
sub
jae
add
mov
and
repnz
scas
push
xchg
fwait
cs
loope
cwtl
leave
jne
cmp
dec
mov
test
sbb
mov
pop
loopne
cmp
loop
add
inc
add
mov
push
iret
and
lock
icebp
add
mov
jno
push
popa
jo
std
cmp
adc
frstor
fsubr
pushf
inc
xor
cltd
pusha
push
test
mov
pop
in
sbb
jno
cs
mov
pusha
bound
mov
pop
inc
push
repnz
dec
add
enter
cmp
fimull
lods
mov
fstpl
sbb
jns
dec
adc
lahf
cld
enter
xor
std
add
stos
xchg
enter
faddl
in
push
imul
bnd
pushf
int
or
inc
loopne
movsb
inc
mov
add
or
mov
cld
mov
mov
int3
push
inc
pop
xchg
dec
push
in
icebp
mov
pop
push
call
jmp
add
mov
pop
fs
inc
mov
sbb
stos
test
adc
rorb
out
push
ds
add
cltd
js
push
and
outsl
jg
and
pusha
xor
and
outsl
les
inc
push
cmp
xchg
pop
gs
xor
int
stc
pop
stos
mov
inc
dec
add
stos
movsl
mov
push
sub
and
fisubl
pop
hlt
cmp
pop
cmp
roll
fidivl
imul
jae
stos
fld
mov
int3
push
adc
inc
cmp
sub
in
add
aam
mov
js
imul
cmp
pusha
push
jo
icebp
jle
or
sbb
add
loop
add
lods
xchg
push
cmp
mov
lret
scas
jmp
sub
pop
mov
sub
pop
inc
sbb
fistpll
cmc
dec
fsub
out
adc
popf
cmp
add
pop
nop
or
mov
int
dec
jg
cmpl
filds
mov
mov
sarl
fs
mov
and
int3
mov
cltd
or
ret
outsl
dec
in
sub
filds
dec
popa
or
sub
jmp
lock
dec
loope
jecxz
xor
mov
dec
fiadds
and
adc
fwait
call
test
pop
movsb
mov
pop
loope
inc
out
cltd
mov
push
add
test
push
bound
mov
in
inc
mov
sbb
imull
mov
fsubrs
stos
add
movsb
xchg
aam
and
jno
add
das
cltd
stos
jne
mov
xchg
adc
pop
cld
dec
call
dec
jne
dec
jne
xchg
daa
nop
clc
adc
loopne
dec
mov
call
pop
int3
add
arpl
pop
je
xchg
xor
pop
jae
testb
ficoms
insb
and
cmp
cmpsb
fsubr
or
orb
dec
fcoms
ja
fdivp
push
xor
ljmp
sbb
and
addr16
add
clc
jb
loopne
jo
test
mov
xchg
add
mov
xor
notl
pushf
mov
aam
movsl
inc
incb
inc
push
enter
ljmp
bound
cmp
mov
inc
push
add
in
cmp
out
addl
loopne
aaa
movl
rorb
sbb
and
push
sub
add
loop
rorb
das
sbb
push
mov
outsl
add
in
inc
faddl
mov
mov
jp
and
push
imul
cmp
cltd
mov
dec
sub
jb
inc
inc
xchg
and
popa
repz
rcrb
das
mov
test
repnz
add
fistps
and
inc
add
clc
sarb
ljmp
lret
mov
adc
dec
mov
push
in
xchg
lods
xchg
inc
sub
fs
mov
addb
push
push
xor
pop
sub
loopne
divb
movsb
rolb
fbstp
sbbb
push
testb
push
jp
movsb
cmp
std
inc
pusha
mov
insl
cmp
int3
in
movsl
adc
and
add
inc
out
sbb
push
pop
icebp
xchg
movsb
add
int3
and
mov
add
stc
in
mull
sahf
mov
add
add
ds
test
add
xor
sub
pop
int3
sub
pop
pop
repnz
je
fdivrp
sti
cmpl
rolb
iret
ljmp
cmp
cmpsl
push
mov
in
add
jmp
ss
add
pop
in
xorb
push
sub
push
mov
insb
stos
repnz
pop
jnp
ljmp
adc
movsl
andl
mov
pop
and
and
lods
loope
in
inc
pop
pop
add
pop
jae
insb
pop
lock
cmp
inc
mov
mov
es
je
cld
lret
mov
sarl
std
jnp
add
imul
cmp
test
adc
daa
adc
pop
dec
psllq
lahf
aam
lods
dec
in
or
mov
mov
dec
fwait
jo
rorl
and
std
adc
hlt
fstpt
insb
cld
add
inc
mov
pop
add
addr16
sub
loopne
cltd
int3
and
and
sbbb
jl
nop
das
stos
call
add
xor
test
jecxz
std
cmp
test
dec
ret
fimuls
or
xchg
shl
fsubs
les
daa
mov
adc
inc
and
push
inc
in
push
nop
push
pushf
in
subb
xchg
jo
es
push
mov
test
or
jne
push
adc
fnstenv
sub
cld
jnp
add
leave
cmp
orb
in
into
or
cmpsb
mov
xchg
mov
add
cmc
mov
in
xchg
arpl
add
scas
pop
add
jg
mov
nop
sbb
andl
das
outsb
cmp
enter
mov
popf
push
in
adc
movsl
sub
jl
scas
popa
test
pop
sar
sbb
adc
aam
jl
aam
mov
add
repz
lods
push
pusha
jge
add
enter
lahf
in
inc
jns
sbb
sub
and
pusha
and
in
push
add
pop
dec
pop
testb
mov
sbb
mov
movsl
push
mov
pop
sbb
add
push
jg
xchg
out
push
aam
mov
push
shl
xor
or
xchg
popa
sbb
pushf
mov
mov
fbstp
jecxz
dec
jl
xchg
sub
in
pusha
stc
test
add
test
lods
pushf
outsb
sub
int3
jns
std
enter
jge
jne
pop
mov
inc
lea
xchg
adc
lods
push
mov
cmp
and
adc
dec
dec
and
jl
mov
add
xchg
test
enter
inc
push
add
fidivrs
mov
mov
les
pop
mov
add
jno
andb
hlt
adc
mov
sbb
mov
loope
adc
jmp
or
cmp
test
addr16
add
rorb
cmpl
and
inc
dec
xchg
das
push
leave
sbb
cwtl
or
cmp
and
nop
add
add
jecxz
xchg
jne
pop
cld
xchg
and
shll
imul
inc
cmpb
cmp
xlat
xchg
inc
lods
ja
jp
adc
pop
fs
pushf
mov
pushf
and
dec
inc
loope
and
inc
jo
inc
cmp
mov
add
nop
push
sub
in
popa
insb
pop
pushf
ret
gs
xchg
mov
adc
movsl
sub
mov
or
cltd
and
push
and
sub
mov
sub
or
daa
xchg
cmp
cmp
fmuls
test
cmp
aad
sbb
and
mov
push
faddp
fstpt
fwait
sbb
cli
clc
ss
sbb
popa
mov
cmpb
adcb
pop
fwait
je
jb
loopne
bound
cmp
das
fsubl
ret
inc
mov
cmpsl
add
xor
add
cmp
test
jae
shll
inc
adc
test
or
add
cmp
sub
dec
and
push
scas
jnp
and
jno
cwtl
dec
add
sbb
std
dec
ret
pop
adc
je
cs
pop
xchg
push
ss
add
mov
test
iretw
into
adc
sbb
add
mov
sub
xor
call
in
sub
fildll
add
jge
jl
jnp
in
add
popf
push
dec
sbbb
xor
mov
scas
xchg
js
sub
and
lock
js
subb
dec
mov
pop
insb
mov
sub
mov
out
mov
dec
xor
cmp
pusha
or
pop
dec
ja
add
or
mov
push
test
mov
je
jns
and
adc
xor
hlt
dec
jl
xor
sahf
stos
bound
mov
pop
mov
in
add
fwait
cwtl
jbe
nop
mov
push
out
rcrl
shlb
mov
mov
popa
add
filds
add
outsb
icebp
js
and
insb
or
cmp
hlt
inc
insb
push
jne
mov
ljmp
stos
nop
xor
jns
mov
icebp
fstl
sbb
fistps
jb
and
mov
inc
clc
mov
sbb
xor
and
imul
mov
pop
cltd
add
xchg
cmp
mov
lds
mov
js
dec
cmpl
and
ficoms
es
adc
jo
xchg
cmc
add
lahf
stc
push
pushf
push
inc
add
push
add
inc
pusha
pop
pop
pop
das
dec
dec
jge
pusha
or
mov
and
push
inc
jle
push
or
cmp
or
dec
mov
xor
sub
push
lea
idivb
fbld
jl
nop
push
xchg
jp
scas
add
movsl
cmp
stos
lods
and
push
xor
push
dec
add
xchg
icebp
push
scas
push
dec
into
sub
mov
inc
inc
adc
add
data16
mov
pusha
cltd
inc
add
or
and
out
xchg
pop
add
out
sbb
nop
std
xchg
mov
enter
mov
movsb
loopne
xor
fisttpll
fisubs
add
sub
mov
cli
xchg
nop
orb
add
xchg
adc
xchg
xchg
push
mov
adc
leave
std
push
ror
aas
enter
test
jmp
xorb
and
add
jb
stos
mov
sub
test
arpl
pop
dec
loop
mov
or
sub
sub
test
dec
je
enter
mov
pop
fiadds
addr16
hlt
mov
ret
sub
jl
adc
insl
cmpb
stc
mov
sbb
int3
cmp
popa
fwait
mov
in
pop
xorb
jecxz
pop
lret
dec
dec
xchg
ror
adc
lock
cmp
sbb
ds
test
dec
loopne
adcb
mov
mov
cwtl
js
xor
push
push
in
movl
add
icebp
ljmp
rcr
je
mov
cmp
rolb
mov
mov
mov
and
dec
mov
add
jbe
dec
in
mov
mov
and
add
lods
pop
or
aad
cmp
imul
xchg
adc
mov
nop
xor
cld
iret
xchg
loopne
mov
inc
les
lods
jne
and
sbb
or
mov
ss
cmp
xlat
push
pushf
mov
in
mov
mov
repz
pop
mov
mov
push
in
xchg
insb
add
jo
bnd
fs
decb
dec
jmp
mov
mov
xor
jnp
fimuls
into
jae
adc
es
mov
sti
xor
sub
push
mov
mov
test
imul
xor
adc
pop
rcl
rorb
jae
add
in
sub
leave
xlat
inc
pop
inc
fisubl
adc
jp
in
aad
loop
fdivs
or
dec
mov
jbe
jnp
add
xor
je
inc
inc
xlat
adc
mov
sarl
cld
inc
pop
jp
sti
mov
test
mov
pop
test
mov
add
mov
xor
je
lock
and
jo
jge
push
cli
jp
mov
dec
pop
xor
aas
add
lret
jno
push
cmpsl
or
add
push
xor
into
repz
test
cmp
fsin
dec
xlat
push
jns
add
stos
sbb
jecxz
add
scas
pushf
mov
dec
push
out
idiv
and
fs
sbb
inc
mov
add
in
xor
inc
fwait
mov
mulb
ss
pop
stos
xorl
inc
xchg
divb
xor
mov
pusha
test
mov
pop
rolb
dec
lods
pop
mov
pop
adc
add
fmull
in
push
mov
inc
nop
movsb
and
add
popa
fidivrs
repnz
cmpl
in
jl
xor
dec
mov
sub
leave
roll
pop
imul
push
mov
cmovb
flds
push
std
sbb
add
notl
jo
mov
cltd
ret
xor
adc
out
inc
cmc
daa
loopne
loopne
sbb
lcall
cmp
add
je
out
rcll
ds
js
cmp
cmp
insl
or
fs
and
pop
sbb
loopne
ret
adc
and
mov
ljmp
and
and
inc
clc
cmp
adc
sbb
idivb
add
mov
dec
mov
xor
add
mov
add
mov
lods
and
xor
push
cmc
adc
mov
add
push
inc
in
int
sub
sbb
es
lret
test
sub
or
add
jno
aas
mov
nop
push
or
cmp
mov
pop
add
add
add
adc
scas
fcoms
inc
jp
in
lock
fwait
lock
pop
pop
jno
cmc
jge
dec
mov
mov
stc
inc
js
repz
add
cltd
sbb
push
rcr
or
sub
rolb
mov
lods
pop
aas
cld
fildl
xchg
and
mov
fdivrs
nop
add
inc
leave
xchg
call
sbb
adc
inc
cmp
mov
std
fldcw
loope
nop
cmp
scas
sub
adc
aas
and
shlb
lahf
loopne
add
loope
dec
jge
idivl
in
mov
add
scas
cmp
mov
out
fdiv
cld
xchg
and
mov
adc
mov
add
je
jb
sbb
imul
sarl
and
push
nop
and
push
inc
mov
loopne
pop
add
idiv
test
rcll
cmp
scas
adc
das
je
inc
add
movsl
cs
push
jno
push
dec
cmp
xor
sbb
js
pop
pop
or
lods
std
add
filds
push
loopne
mov
and
add
rorb
sub
fisttpll
jnp
mov
fistpll
dec
daa
out
and
pushf
fs
mov
push
out
jmp
fs
jo
dec
inc
mov
add
leave
inc
lock
je
sbb
sub
push
or
insl
stos
cmp
nop
xchg
mov
test
sbb
pusha
movsb
push
jnp
pusha
dec
adc
lret
add
mov
fistps
pop
sbbb
jecxz
adc
enter
sbb
cmp
inc
push
cmp
and
add
or
aaa
xor
and
add
test
add
nop
push
movsl
xor
push
adc
insb
ja
int
sahf
cmpsb
mov
or
in
aam
xor
cmp
mov
and
ja
xchg
nop
lock
or
out
dec
sarb
adc
cmp
mov
inc
dec
cld
cmp
push
bnd
xor
add
mov
movsb
add
sub
adc
lret
icebp
lods
or
mov
xor
out
jae
cld
push
pop
test
lret
xchg
cmp
adc
pop
mov
dec
daa
and
or
adc
mov
cmp
jg
mov
jle
loope
lahf
out
cwtl
ss
pop
mov
sub
pushf
mov
sahf
cld
movsb
loopne
cmp
mov
addr16
cmc
das
jmp
ss
jo
sub
cmp
dec
addr16
lods
nop
or
ljmp
dec
test
leave
int3
lahf
bound
lds
mov
fldl
push
or
lea
xchg
scas
add
int
mov
add
lock
loopne
push
mov
xor
pop
movsb
add
shrb
sub
adc
cmp
or
push
cwtl
xchg
cmp
xor
add
idiv
mov
notl
xchg
jo
mov
cli
dec
inc
jle
or
xor
add
loope
jl
adc
push
rolb
arpl
and
pop
add
cmp
mov
jl
and
lahf
or
jg
sbb
and
and
cmp
cmc
mull
rolb
jb
xchg
jecxz
mov
inc
sbb
pop
int3
ja
cli
pop
aad
xchg
xor
push
addb
jecxz
jne
push
add
test
or
pusha
aad
push
or
pop
popa
xchg
mov
cltd
mov
bound
sarb
std
xor
fsubl
insl
xchg
mov
fcomip
push
insb
push
or
pop
xor
ret
sbb
loopne
xchg
add
movsl
mov
popa
nop
scas
sub
adc
cwtl
lret
enter
xor
imul
ret
int
pop
neg
cmp
and
jae
cmp
cmp
in
push
or
pop
aas
rorl
ja
adc
bound
inc
lods
add
fdivrl
icebp
jle
aam
pop
jmp
test
fld
in
add
or
pusha
repnz
sbb
test
pop
mov
adc
cwtl
xchg
orl
mov
les
xchg
jno
shrb
lcall
mov
dec
push
mov
pop
adc
xlat
and
pop
jns
scas
add
hlt
fwait
xchg
test
mov
sub
sub
push
mov
push
sub
ja
xchg
movsb
adc
mov
lock
dec
cld
ds
aas
jge
andb
out
mov
mov
aas
or
ljmp
cmp
xchg
lcall
dec
int
cli
lahf
cmpb
xor
xor
cmc
idivb
dec
cmp
xorb
adc
aaa
or
rcrb
mov
repnz
and
adc
dec
or
in
int3
stc
jp
ja
push
nop
in
add
movsl
cli
andl
aaa
je
rol
push
cld
push
pop
movsb
cmp
cmp
push
insl
inc
pop
fcomps
rclb
lock
cmp
hlt
inc
dec
pop
or
dec
nop
std
test
rolb
inc
loop
or
adc
and
dec
or
fstpl
lahf
cld
add
in
aaa
cmp
call
adc
loop
and
fs
dec
int
aas
mov
lahf
and
cmp
mov
popa
push
nop
clc
int3
lcall
in
dec
add
test
and
xchg
sarb
xchg
xor
ds
bound
pop
mov
hlt
pop
fsubl
push
sti
in
ret
dec
add
ljmp
mov
orb
jns
pop
adc
push
ljmp
popa
jg,pt
in
adc
dec
xor
repnz
repz
cltd
testl
dec
sti
cmp
adc
imul
icebp
addr16
add
das
and
sub
popa
jg
add
std
sti
xchg
sbb
push
xchg
pop
lock
mov
add
sbb
mov
outsb
je
mov
gs
mov
je
inc
lods
cmp
les
xor
mov
mov
je
dec
adc
pop
or
pshufw
mov
inc
sbb
add
fists
call
movsb
fstpl
jp
icebp
push
fidivrs
push
lcall
mov
std
in
xchg
add
ret
ret
nop
adc
addb
or
rcrb
cmp
add
cld
std
cmp
add
sub
inc
mov
scas
mov
popa
pop
loop
and
dec
jl
or
movsb
sbb
inc
test
cli
sub
xor
add
loop
jmp
data16
or
mov
xor
inc
adc
aad
mov
int3
test
lds
xadd
mov
es
add
cmp
add
mov
sbb
push
in
int3
into
js
ficoms
loope
push
dec
cwtl
inc
pop
adc
mov
js
loope
pop
and
pop
xchg
push
add
les
adc
sbb
arpl
lcall
sub
dec
in
dec
push
shll
or
jl
pop
ret
enter
aaa
push
xor
add
mov
add
cmpsb
std
ja
xor
add
jge
add
xchg
ds
lds
jne
dec
inc
test
xor
xor
jl
xor
aas
pop
xchg
adc
in
arpl
in
dec
push
lods
sub
aam
lahf
pusha
xor
add
rol
push
jnp
xchg
bound
inc
lea
jecxz
mov
icebp
add
or
sbb
pop
std
fstp
cmpsl
test
jle
daa
sti
mov
dec
mov
pushf
add
sub
lret
pusha
add
fstenv
inc
ss
cmp
sysenter
dec
push
cmp
adc
jecxz
loop
add
test
loop
add
or
cmp
je
inc
sub
in
cmp
push
nop
or
mov
test
loopne
sahf
es
xor
mov
std
out
sub
loopne
and
hlt
out
test
pop
jle
or
faddl
add
dec
add
xchg
popa
cmc
mov
loopne
andb
push
ret
dec
mov
push
xlat
cmp
or
loop
aam
lahf
dec
and
lret
les
cmp
loopne
or
cmp
aas
dec
dec
add
inc
out
and
mov
pop
sti
mov
push
xor
imul
cli
dec
push
pop
jnp
sti
je
clc
roll
int
cld
ss
aam
xorb
stc
or
dec
cmp
add
sarb
jle
adc
fbstp
cmovb
mov
pop
xor
or
adc
mov
jmp
jge
or
repz
adc
popf
testl
mov
bound
lock
cld
add
inc
scas
fistpll
mov
push
mov
mov
nop
faddl
addb
sbb
xchg
pop
scas
jp
and
or
das
push
std
and
cli
pop
sbb
add
sub
add
cwtl
mov
mov
cmpsb
nop
pop
push
sti
mov
fistl
ja
dec
mov
cwtl
add
icebp
push
popa
call
xor
fs
push
and
push
inc
loope
xchg
lahf
lock
or
ds
mov
mov
loopne
cwtl
pop
dec
pop
pop
mov
sbb
xorb
add
jno,pn
jbe
test
lahf
jecxz
jl
mov
pushf
addr16
mov
fstps
sub
cmp
sub
sub
flds
je
and
subb
inc
add
rorb
pop
popf
sub
add
in
mov
xchg
subl
push
or
imul
add
dec
lret
or
adcb
ljmp
in
jp
test
fidivs
adc
xor
inc
jp
add
je
fs
adc
inc
ret
aas
jecxz
add
add
rolb
popf
pop
cwtl
pop
cmc
roll
test
fld
movsb
add
mov
mov
adc
cmp
lds
jb
jno
int3
bound
rolb
outsb
jl
mov
das
lret
pop
cmpsl
insb
enter
popf
outsl
add
into
cmp
add
cld
mov
jmp
add
nop
enter
and
adc
xchg
cmp
jmp
test
sbb
adc
add
push
movl
mov
pop
pushf
mov
pop
das
sbbl
and
or
sbb
pop
iret
mov
aaa
lds
call
out
int3
xchg
add
sub
xor
push
xor
add
scas
fdivrp
dec
sarl
cld
in
mov
add
fisubrl
xor
xor
and
dec
jne
das
mov
lock
jl
adc
add
lods
xchg
aas
idiv
and
andb
mov
repnz
mov
and
push
add
add
les
in
inc
lods
pop
mov
add
dec
data16
sub
gs
pop
jecxz
add
lds
mov
bsf
hlt
pop
mov
jge
jnp
outsb
jo
add
out
jecxz
xchg
xor
int
xor
inc
insb
mov
call
jbe
mov
lods
add
mov
sysexit
in
adc
dec
sbb
sahf
and
dec
xchg
add
sub
push
in
pushf
inc
sarb
pop
mov
jbe
add
mov
inc
es
pop
fnstsw
cmp
mov
adc
lret
ds
stos
nop
rolb
cli
or
jnp
mov
aaa
ljmp
test
sahf
add
inc
dec
jnp
cmpsl
jle
sbb
cmp
das
push
popa
in
mov
lcall
or
and
adc
jecxz
pop
or
in
add
sbb
inc
push
mov
adc
fcmovu
imul
xchg
adc
in
fs
fisttpll
push
inc
push
and
push
add
pop
push
ficoml
ffree
and
std
adc
sub
xchg
fsts
push
adc
pop
sbb
mov
jno
add
sbb
jle
push
lea
sbb
push
or
or
jp
std
and
push
aad
idiv
push
addb
loope
mov
dec
inc
std
xchg
sub
in
jns
dec
xchg
sub
push
mov
push
call
or
nop
sub
sbb
rolb
mov
pusha
call
int3
adc
dec
test
mov
ds
cmpsb
int
cld
mov
jl
loope
jne
sub
scas
daa
repnz
adc
mov
xlat
test
mov
push
inc
inc
stos
loopne
fdivs
dec
inc
mov
cmp
leave
out
push
add
hlt
push
cmp
cld
adc
adc
leave
pop
pop
popl
in
cmp
push
test
cmp
clc
pop
mov
cmp
je
and
push
push
add
add
fnstsw
insb
out
clc
xor
pusha
addb
test
dec
fcmovbe
mov
pushf
fildl
mov
addr16
add
xchg
jp
mov
xor
fnstcw
shrb
popf
arpl
in
sub
les
jecxz
fdivrs
xor
mov
imul
roll
mov
das
loope
popa
mov
cmp
orb
sahf
push
mov
std
adc
and
popf
or
mov
cmpb
push
adc
jg
cwtl
xchg
cmp
cmp
or
sub
repz
mov
stos
hlt
loop
add
push
test
lock
push
add
out
add
dec
jge
pop
jmp
jbe
add
sub
enter
xor
jp
imul
mov
jmp
add
loop
das
leave
jo
adc
and
and
add
subl
cwtl
filds
test
and
fildl
cmp
xchg
nop
pushf
cld
sub
or
add
add
cs
call
add
or
xchg
adc
xor
mov
les
les
mov
js
dec
cmp
paddusw
sbb
inc
movsb
shlb
outsb
roll
loope
push
pop
movsb
or
loopne
in
test
inc
aaa
sub
shlb
add
stc
mov
inc
and
mov
mov
push
dec
or
repz
testl
xchg
mov
sub
jb
icebp
gs
enter
cmp
hlt
push
frstor
mov
es
mov
mov
rcrb
jg
add
cli
ljmp
fbld
cltd
push
inc
mov
and
inc
addl
mov
setno
cld
mulb
jae
xor
cmp
test
pop
aam
adc
popa
or
in
mov
add
scas
ds
mov
cmp
jmp
ret
fcoml
js
cmp
lods
jl
movsl
sarb
mov
in
pushf
inc
nop
or
add
xor
sbbl
insb
mov
pushf
shlb
cmp
and
inc
loopne
mov
fsub
jno
into
inc
popa
orb
cmp
add
push
popf
xlat
and
popa
cltd
xor
in
sti
pop
xchg
or
pop
inc
out
mov
pop
fwait
jno
loopne
ds
in
jg
or
test
imul
push
mov
mov
adc
add
inc
xchg
mov
add
sahf
mov
xor
and
sub
mov
scas
push
fxch
sbb
mul
pushf
outsb
mov
loope
cmp
negl
inc
inc
xor
data16
mov
in
sub
push
pop
out
in
mov
shrb
pop
push
leave
inc
movsb
mov
cmpsb
add
out
popa
xor
mov
sub
sub
mov
mov
xchg
bound
cmpb
and
popa
jno
sbb
jo
icebp
and
inc
adc
add
addr16
mov
sub
cmp
xor
mov
xchg
shll
or
cmpsl
mov
cmp
mov
sahf
sbb
test
sub
xor
pop
pop
in
add
fucomi
sbb
xchg
push
sub
add
pushf
dec
xor
andl
nop
sub
sbb
nop
push
cmp
xchg
xlat
aaa
push
lret
orb
jo
orl
sub
je
mov
jno
or
or
popf
xchg
xor
mov
orb
jecxz
push
sub
inc
fmul
shl
fwait
sbb
pop
mov
mov
add
xchg
mov
and
addb
stc
mov
ret
jae
push
xchg
iret
sbb
xor
xchg
cmp
in
lcall
push
pop
or
xchg
mov
push
arpl
mov
add
xchg
int3
loopne
add
insl
adc
fimuls
mov
adc
sti
pop
cmp
mov
jg
sbbb
adc
aas
pop
push
adc
xchg
sbb
mov
push
pop
pop
lods
ja
cmc
jbe
pop
add
mov
push
js
lret
sbb
setge
rcrl
add
test
mov
pushl
int
repz
stos
mov
xor
lock
or
cmp
std
fnstsw
out
sub
mov
mov
mov
das
lock
cwtl
clc
pop
pop
add
scas
sbb
dec
dec
sbb
bound
int
test
jp
stos
inc
pop
std
shl
into
sbb
cmp
divl
and
jb
into
and
insb
xchg
or
add
or
inc
fbld
pushf
pop
inc
pop
in
gs
and
mov
popa
push
dec
push
aas
addr16
adc
fldl
jecxz
dec
mov
pop
push
add
cmc
mov
sub
mov
enter
cmpsb
lahf
sub
xchg
mov
mov
and
fmull
jo
push
repz
add
movsb
xchg
aam
call
pop
sbb
push
mov
aad
push
rcrl
push
adc
insb
add
add
in
or
loope
sbb
lods
mov
cld
sbb
lds
inc
add
xor
adc
add
shlb
leave
sti
and
adc
xchg
and
shrl
scas
in
add
loop
jb
pusha
push
xchg
cwtl
mov
ljmp
mov
flds
mov
mov
push
gs
ror
add
jp
add
subb
lods
xchg
add
adc
jbe
cmp
gs
jg
addr16
add
daa
and
and
aaa
cld
dec
xchg
bound
or
pushf
popf
cmp
outsl
and
cmp
or
sbb
insb
add
cmp
jb
arpl
fdivl
xchg
xchg
pop
xorb
inc
rolb
fisttpll
xchg
jmp
jae
push
fdivr
add
shll
lcall
lods
decb
sub
call
fs
xchg
outsl
cld
jg
lahf
push
pop
js
push
rcrl
dec
or
push
fiadds
outsl
hlt
incl
into
or
adc
scas
dec
push
mov
movsl
sahf
mov
inc
rorb
mov
popa
jno
int
cwtl
lock
pop
pushf
pop
roll
or
das
inc
xchg
imul
and
fstp
mov
bound
mov
inc
xchg
and
and
add
jno
mov
mov
add
mov
lea
and
sub
mov
mov
pop
cwtl
call
add
clc
sub
xchg
outsl
adc
pop
nop
clc
pop
mov
dec
pop
inc
enter
mov
popw
or
or
jmp
addb
mov
xchg
ds
xchg
push
out
add
push
shll
fnstcw
dec
cmpsl
mov
mov
ds
mov
rorb
pop
int3
xchg
aaa
xor
dec
clc
in
jnp
and
adc
fs
stc
test
addr16
inc
and
fisubl
nop
or
push
clc
sbb
inc
or
mov
add
mov
movsl
scas
sti
push
nop
inc
adc
cmp
in
lock
lods
ret
insb
push
sarb
sub
aas
adcb
and
xchg
pop
inc
push
jmp
popf
out
mov
notl
pop
pop
xchg
xchg
inc
sti
cmp
dec
js
or
fcmovb
insb
mov
aaa
adc
cmp
les
or
stos
xor
add
jge
sub
cmp
dec
jnp
or
sbb
jmp
or
cmp
add
fldt
sub
add
inc
call
xchg
add
push
test
jle
outsl
pop
outsl
push
mov
sub
stc
and
add
xor
inc
mov
das
shlb
adc
sbb
mov
add
push
divl
xor
sti
lock
push
repz
dec
mov
add
orl
pop
mov
pop
loopne
fsubp
cmp
das
in
or
loop
jnp
ficompl
aaa
pop
mov
shll
cmp
inc
pop
jg
and
inc
add
xchg
mov
mov
cmp
mov
add
fcmovne
add
mov
pop
lret
mov
pop
mov
pop
aas
enter
shll
jmp
pop
cmpsl
mov
inc
mov
jg
popa
pop
cwtl
inc
fwait
sub
mulb
aas
fcoml
jo
lock
mov
mov
xchg
mov
test
lock
int3
xchg
xchg
add
mov
or
pop
subl
sub
sbb
cmp
inc
je
jbe
dec
push
popf
and
sub
add
add
addb
mov
cld
stos
or
pusha
dec
sti
pop
insb
sub
mov
sahf
sub
ret
outsl
adc
push
cmpsl
sbb
sbb
mov
pusha
in
and
or
imulb
cmp
adc
dec
fcompl
sti
daa
mov
loop
aad
movsb
push
cmp
int3
pop
mov
idivb
dec
notb
loopne
shlb
or
or
punpckldq
mov
dec
outsb
sahf
repnz
mov
shll
js
pop
add
aam
pop
inc
jmp
inc
jg
jp
add
ror
repz
shlb
cmp
je
hlt
call
mov
dec
add
sbb
mov
inc
mov
mov
in
cld
and
push
cmpsb
add
popf
push
adc
sbbl
xor
cmp
subb
outsl
mov
jno
mov
sbb
iret
add
and
cmp
std
and
repz
xor
hlt
cld
push
pushf
sbb
push
cmp
repnz
adcb
je
add
aas
jbe
imul
adc
iret
cmp
in
call
test
inc
jo
int
mov
lock
jl
cmp
inc
movsl
mov
and
xchg
and
sbb
adc
fiadds
fs
cmp
add
fsubrl
fsubrp
pop
xchg
test
inc
sbb
fisubrs
setnp
in
mov
add
mov
adc
stos
cmp
fnstenv
mov
xchg
jo
outsb
or
dec
dec
jno
add
mov
popa
ficoml
cld
jo
xchg
addb
cmpl
and
sbb
loop
add
popf
add
fdivrp
mov
je
subb
in
fimuls
test
popf
or
bound
dec
mov
push
je
add
inc
pop
addr16
pusha
add
test
cs
sbb
cli
push
jle
pop
inc
and
aaa
jbe
leave
cmpsl
push
and
pop
push
out
sbb
jp
clc
sub
push
je
inc
pop
cmp
cltd
cld
test
and
cmp
and
sub
jg
add
ljmp
pop
jbe
or
dec
add
and
stos
pop
xchg
mov
mov
jge
aad
inc
jo
shl
sbb
add
add
sub
and
xchg
push
add
gs
dec
add
fucomi
movsl
cmp
fdivrs
and
popf
pop
notb
loop
ja
jnp
push
jmp
inc
xlat
repz
adc
test
xchg
sbb
mov
and
aaa
in
andb
mov
ret
jmp
and
loop
leave
sbb
sbb
mov
addr16
xor
adc
cmp
testl
jbe
add
and
mov
dec
or
push
mov
leave
pop
addr16
test
adc
into
add
imul
cmp
or
jmp
push
xchg
popf
daa
movl
jbe
loopne
push
xchg
jg
cmp
pop
enter
sbb
testl
les
jp
mov
jns
inc
push
and
xchg
clc
mov
movsl
fldenv
imul
push
cmp
cld
mov
add
aad
in
push
or
push
clc
dec
hlt
out
repnz
push
add
les
xor
cmp
jl
mov
mov
imul
aas
icebp
rolb
and
and
loop
add
jp
insb
popa
enter
mov
or
hlt
xchg
inc
cmp
pop
push
sti
mov
add
xor
add
test
leave
adc
mov
addl
rorb
mov
add
leave
add
pop
jmp
mov
pop
cmp
mov
mov
out
div
lods
mov
jae
imul
cmp
mov
ret
lods
rcll
jns
in
push
jmp
sub
mov
mov
scas
cmp
in
dec
movsl
bound
popf
push
pop
jle
sub
adc
mov
dec
aad
xchg
push
out
sti
rorb
and
mov
push
jno
nop
jecxz
cmp
jne
xor
clc
sbb
adc
xchg
lret
push
xchg
outsb
lods
and
jb
push
mov
ret
push
adc
loopne
orl
int3
test
xor
sbb
cmc
dec
loope
inc
idiv
add
cmp
dec
loopne
aaa
pop
inc
xchg
fcompl
testl
je
xchg
push
push
lods
mov
add
sarb
push
dec
movlps
je
adc
pop
nop
enter
inc
xor
add
les
cmp
inc
outsb
add
mov
push
cld
inc
add
or
xchg
xchg
cmp
mov
pop
mov
sbbb
cld
jg
mov
inc
add
mov
xchg
in
and
jg
insb
mov
fisttps
inc
inc
jb
shlb
sub
dec
or
test
jl
bound
sahf
jne
sub
in
xchg
add
or
enter
inc
jge
pop
gs
xlat
mov
adc
stos
xor
cmp
inc
cmc
adc
mov
mov
cld
add
orb
pop
test
sub
push
fdivs
mov
push
inc
loope
pop
enter
sub
push
cli
inc
lods
and
jl
jbe
gs
fisttpll
pop
lods
mov
dec
icebp
or
add
pop
inc
mov
repz
pop
int3
inc
mov
cmpl
scas
mov
xor
mov
dec
push
mov
cmp
push
faddl
sub
pop
insb
add
mov
add
enter
test
call
push
xchg
push
add
jl
cld
jne
dec
bound
jl
ss
add
sbb
xor
clc
lods
test
xchg
out
inc
jo
dec
adc
mov
inc
adc
xchg
faddl
and
mov
dec
jecxz
jmp
shlb
xor
mov
pop
scas
cmp
xchg
nop
mov
add
xchg
ss
adc
in
sub
mov
inc
cmp
xchg
jo
inc
dec
push
pop
cmp
sub
rorb
mov
or
or
mov
push
adc
pop
and
push
cld
mov
cs
insl
push
and
sub
or
and
cmp
stc
push
dec
add
movsl
cli
test
sub
xor
jnp
mov
xorb
popf
popl
push
adc
xor
nop
inc
and
cmpsb
mov
outsl
mov
ret
add
filds
or
ds
cld
dec
jne
pusha
and
in
ret
dec
fs
loop
jle
inc
cmp
or
cmc
dec
lret
xor
loope
addr16
add
or
add
aas
imul
cmp
bound
push
addl
fcmovne
call
jle
mov
fs
pop
mov
test
inc
and
xchg
mov
push
push
mov
mov
mov
sahf
rclb
add
stos
ss
nop
loop
or
xor
adc
sbb
cmpl
shr
push
dec
dec
cmp
test
mov
add
push
pusha
je
and
popa
add
jl
les
jae
cmpb
mov
pop
jge
xor
add
scas
mov
loopne
call
test
jns
cmp
sbb
xchg
fcoml
loope
pop
sub
cld
and
je
cmp
add
adc
je
push
add
add
in
ja
mov
adc
mov
fs
fwait
jno
movsl
lret
mov
pop
daa
mov
inc
add
mov
imul
lods
add
and
rcrb
mov
cmp
sbb
sti
mov
mov
lods
test
add
into
aam
and
addr16
pop
jns
hlt
mov
and
jo
pop
cmpsb
in
mov
jg
nop
push
addr16
pop
aaa
imul
pop
iret
iret
and
pop
pop
push
and
push
push
jo
xchg
jge
add
insl
out
int3
inc
and
jbe
add
pop
xor
rolb
std
pop
rcr
cmc
sbb
cmp
sub
loope
push
push
das
sbb
push
and
inc
aam
ja
add
xchg
je
push
dec
or
aaa
bound
iret
push
lds
ret
pusha
nop
mov
pavgw
add
cli
cmpb
sarb
cmp
std
cmp
movsl
lods
pop
sarb
dec
xchg
jge
xor
and
mov
pop
fbld
fyl2xp1
arpl
sub
dec
test
popf
adc
int3
in
mov
pushf
jge
dec
add
mov
mov
xor
das
fmul
and
testl
xor
popw
jl
nop
jle
push
decl
cmp
mov
cmpb
inc
push
pop
ror
and
add
fsubrs
jmp
xlat
mov
and
mov
data16
clc
cmp
and
mov
add
sbb
add
ret
push
mov
pop
jge
push
jg
test
jecxz
das
orl
mov
ljmp
sahf
pop
es
out
and
or
popa
xchg
fildl
fstpl
in
mov
hlt
arpl
add
ljmp
add
cmp
cld
dec
sbb
add
or
je
sub
xorl
lock
or
mov
add
xchg
cmp
in
mov
pusha
adc
clc
cmp
inc
cmpb
sbb
je
in
inc
out
adc
jle
test
adc
test
jp
test
mov
addb
lret
push
rorl
jo
pop
rorb
cmp
pop
lret
sub
and
fs
mov
pusha
jb
cmp
jl
push
cwtl
and
out
add
xor
push
psubsb
xchg
add
lods
jl
pop
mov
push
int
and
add
mov
adc
add
jns
push
xor
inc
xor
fmull
aaa
add
mov
xor
pop
cmp
add
mov
cmp
je
pop
adc
add
mov
ja
adc
dec
xchg
add
cli
test
loope
inc
out
pop
inc
add
mov
stc
test
testb
push
push
push
pop
and
in
push
pop
addb
push
daa
mov
loope
sub
adc
xlat
jg
orl
fnstcw
mov
xor
repz
add
mov
je
xor
inc
dec
mov
fisttps
mov
xchg
lock
cmp
xor
jo
jecxz
in
gs
xor
mov
or
aad
xchg
loope
sbb
adc
pop
and
pushf
jle
movsb
out
add
fisttpl
mov
add
dec
inc
aaa
jmp
cmp
adc
inc
popa
rorb
cltd
fs
dec
aaa
cmp
scas
add
pop
imulb
add
enter
mov
push
pop
repnz
loop
inc
fldl
test
sti
pusha
clc
push
stos
mov
pop
push
mov
loopne
sbb
pushf
imul
das
and
stos
sbb
ja
fdivr
add
add
push
jmp
hlt
int
add
mov
sbb
andb
cmovns
xor
sub
test
es
testl
fisubrs
bound
or
insl
jle
dec
or
cli
mov
mov
jg
sahf
in
lcall
sarl
mov
jge
and
roll
aad
bound
popa
mov
test
inc
jle
xchg
stos
sbb
loop
xchg
scas
pusha
mov
sbb
out
dec
xchg
add
aas
int3
add
pop
jb
mov
add
sbb
cmp
pop
pop
and
cltd
popa
loope
push
sub
orb
bound
orl
adc
push
cltd
lods
in
mov
notb
mov
or
pop
inc
repnz
repnz
neg
ja
js
sub
add
sub
lods
add
pop
sub
stos
mov
pop
pop
je
inc
cmc
jge
ret
lahf
sub
xor
adc
cltd
push
mov
push
inc
add
movsb
shll
xchg
js
dec
inc
add
lret
lds
jle
popa
xchg
push
jg
dec
mov
lock
outsb
fsubs
cltd
fs
mov
add
or
addl
test
test
rorb
sahf
cmp
jo
cmpsb
clc
adc
mov
and
int
movsb
or
and
negl
adcw
into
stc
xor
xchg
jl
jecxz
jp
inc
cmp
loopne
mov
cmp
ss
and
add
ret
push
jecxz
rcll
lods
aam
add
cli
mov
mov
jo
jge
addl
dec
pusha
dec
inc
cs
stc
add
adc
push
dec
movsb
add
jne,pt
nop
cmp
xor
mov
cmpsb
test
jne
sub
sub
mov
aaa
iret
mov
or
mov
clc
inc
insl
imul
arpl
sarl
in
aam
xchg
jno
and
int3
sahf
jecxz
mov
pop
daa
sub
fcompl
add
mov
fstpt
imul
aam
xchg
inc
cmpsb
scas
stos
rclb
pop
mov
add
leave
int3
push
pusha
aas
mov
mov
push
push
lret
loope
jno
jnp
adc
sbb
jg
das
repz
push
lods
cmpsl
jmp
jg
or
mov
jecxz,pt
arpl
lret
es
jns
sub
mov
add
cmp
leave
sbb
je
pop
push
add
jge
lds
dec
push
daa
je
rclb
add
cmp
pop
sarl
cmp
pop
xchg
cmpsl
loopne
jo
push
add
lods
leave
pop
jmp
sub
jmp
adc
add
test
push
pop
sbb
and
cmpb
sbb
cli
sbb
pop
push
loop
sbb
nop
xor
sub
xor
in
mov
cmp
push
xchg
add
xchg
pop
add
jnp
aaa
repz
xor
mov
test
ljmp
sub
repnz
and
add
fbld
cmp
lea
mov
and
aam
jmp
xchg
sub
adcb
jle
psraw
inc
mov
mov
cmp
pop
or
xchg
sbb
in
jno
xor
or
clc
icebp
pop
mov
cmp
cmc
pop
fwait
mov
jb
ds
pop
pop
clc
xor
cltd
movsl
adc
dec
add
ret
dec
fbld
and
cmp
loopne
pop
loop
pop
add
lea
sub
mov
leave
notb
scas
call
jl
pusha
in
pop
ss
in
add
leave
inc
jp
aam
nop
mov
add
sub
pop
xchg
rorb
daa
xor
clc
sbb
mov
insb
out
add
push
ljmp
dec
mov
pop
out
pop
add
lea
jns
mov
test
pop
bound
push
shrl
or
add
xor
cmc
sbb
int
iret
addl
adcl
arpl
outsb
mov
push
xchg
inc
add
int
jmp
add
or
inc
das
or
in
add
mov
jecxz
clc
icebp
andb
shlb
adc
shl
push
movsb
xor
iret
add
ds
lods
imul
jb
jge
jnp
add
pop
or
xchg
or
jg
out
nop
adcb
xchg
insl
lea
es
jge
and
fidivs
add
mov
pop
or
popa
mov
out
cli
xchg
sbb
or
mov
or
jb
adc
and
addr16
add
pop
pop
arpl
in
mov
cmp
popa
mov
add
out
dec
sahf
dec
add
push
cwtl
int3
inc
xchg
inc
sub
add
icebp
adc
fnstsw
insb
cmp
push
nop
fxch
lahf
or
hlt
subl
jns
pop
push
lahf
or
add
sub
aad
jbe
mov
xor
inc
in
sub
cmc
lds
sub
or
sbb
xor
adc
xchg
sbb
sarl
mov
add
or
jno
mov
andl
outsb
push
stos
push
xorb
jp
adc
sbb
fmull
add
inc
cmp
js
ss
jp
imulb
ret
xchg
das
stos
pop
or
inc
dec
jl
add
rcr
in
les
lds
and
test
add
frstor
cmp
gs
loopne
inc
push
sub
jle
xor
add
adc
push
pop
out
in
xor
sub
inc
shll
dec
sbb
pop
push
mov
xor
shrb
xor
cmc
add
sub
push
xchg
pusha
cmp
ss
mov
xchg
adcb
sub
mov
inc
add
or
add
and
lcall
rolb
xchg
nop
sbb
cld
iret
stc
fxch
fs
xor
arpl
cmp
shrl
inc
call
notl
outsl
mov
cmp
aam
shlb
cmp
insb
mov
add
cmp
jmp
daa
mov
sbb
dec
pop
add
adcl
or
gs
cmp
sbb
cmp
sub
or
sbb
in
and
push
out
pusha
and
hlt
add
adc
pop
mov
leave
loopne
in
nop
sarb
adc
sub
rcll
lcall
test
sbb
push
lock
cmp
pop
lret
add
or
lea
aaa
iret
and
jecxz
cmc
mov
jp
and
jne
movsb
push
mov
mov
adc
push
int3
cltd
nop
es
in
ljmp
inc
add
mov
fsubrl
add
enter
xlat
lock
xor
add
ja
adc
les
cmp
sub
jmp
js
dec
insl
je
mov
cwtl
xor
mov
in
adc
mov
test
fwait
sbb
cmp
ds
adc
push
out
cs
push
into
fsubl
add
pop
fmuls
pop
lods
cld
aaa
repz
test
mov
xchg
xorb
push
cltd
xchg
test
pusha
lea
sbb
add
add
pop
cmpsl
out
or
add
jge
push
inc
arpl
add
push
xlat
fwait
jecxz
cmpb
or
aas
mov
and
addr16
pop
mov
pop
cmp
add
cmp
mov
xchg
sbb
mov
fbstp
add
loop
imul
rcrb
ljmp
mov
add
cs
dec
and
mov
cmp
dec
mov
test
sub
xor
add
aaa
mov
rcrb
shl
bound
push
push
adc
movb
shll
xchg
add
pavgb
aam
popf
cmp
or
lock
sub
mov
or
mov
mov
xor
sub
mov
sub
shrl
and
enter
add
hlt
or
jne
sarl
out
dec
dec
adc
jns
sub
push
adc
js
iret
add
jmp
mov
mov
stos
lcall
in
xchg
xor
mov
dec
mov
pop
aas
sbb
dec
and
dec
rclb
cmp
shrb
das
add
enter
cmp
aam
mov
push
and
mov
pop
add
loope
push
aaa
inc
fwait
add
mov
dec
add
mov
divl
fldcw
idivb
dec
in
fcmovnbe
movsb
loopne
xchg
and
push
xchg
movsb
call
or
lods
dec
cltd
or
and
add
mov
push
js
pop
shl
rolb
leave
push
or
mov
loope
pop
add
xor
xor
push
add
sbb
jae
lcall
mov
jo
cmp
sbb
subb
fimuls
insb
add
and
add
divb
jns
add
cmp
adc
cmp
sub
or
mov
cltd
jl
les
add
inc
roll
xor
push
mov
movsb
aas
or
add
into
pop
mov
gs
or
stc
jne
fisubs
testb
jno
popa
or
pop
in
je
ret
orb
shr
add
pop
call
xor
or
jnp
sub
sbb
insb
les
out
add
mov
add
or
push
pop
xchg
xchg
cmp
mov
or
pusha
popf
add
or
mov
inc
or
cs
add
xor
mov
adc
rclb
cmp
fimuls
xchg
pop
jno
and
xchg
sbb
ret
and
jg
mov
mov
or
adc
and
xchg
inc
cmp
scas
movsl
pop
adc
and
addl
bound
faddl
add
adc
jno
pop
test
mov
adc
out
mov
add
ret
xchg
sub
das
sub
mov
lock
or
pop
sti
andl
jae
pop
xchg
callw
xor
inc
jnp
dec
sub
addb
push
loopne
lret
test
mov
mov
sbb
imul
std
jnp
cwtl
push
cmp
gs
rcl
sub
or
push
push
imul
xor
andb
in
add
jo
sbb
cwtl
mov
nop
mov
pop
in
psubsb
data16
fbstp
aad
lods
and
scas
ljmp
cmovne
push
or
push
cli
and
ds
push
inc
mov
inc
ficoms
pop
adc
dec
fists
xor
xchg
or
in
inc
mov
pop
nop
sub
fistpll
cmpl
mov
popa
mov
lret
add
ficoms
call
and
cmp
sub
or
dec
ja
pusha
fdivl
mov
aas
scas
or
lock
inc
pop
mov
pushf
dec
inc
icebp
inc
or
push
call
mov
and
mov
in
fadds
addr16
sub
ds
and
add
in
fwait
inc
inc
rclb
push
sbbb
mov
push
jae
xor
xchg
inc
dec
sbb
loope
add
or
aam
jmp
xor
jecxz
mov
popa
add
dec
dec
jecxz
int3
push
mov
cmc
sbb
leave
arpl
movsb
pop
inc
addr16
add
xchg
xor
or
push
cmc
and
cmp
add
mov
or
faddl
jo
push
mov
loop
pop
mov
fildll
add
xchg
imull
add
insb
rcr
imul
push
cli
add
scas
and
pop
clc
sub
or
outsb
sbb
xorb
imul
insb
jne
inc
mov
add
rolb
or
lahf
mov
jbe
loopne
rcrb
pop
je
aaa
jecxz
popl
sbb
mov
dec
lahf
pop
mov
inc
cmp
test
adc
fdivs
cmp
sbb
xor
add
mov
inc
cmp
and
roll
dec
rorb
fidivrs
mov
push
test
sub
xor
dec
into
or
xchg
mov
mov
testb
mov
mov
lods
ret
add
sub
ds
aaa
add
push
pop
and
test
dec
orb
mov
es
repz
jmp
cmpsb
push
jno
mov
jecxz
and
aam
popf
and
inc
out
pop
fmuls
xchg
add
or
sub
adc
adc
adc
push
sar
addr16
aam
jmp
lret
add
push
ja
into
jno
sub
push
fstpt
add
scas
dec
push
xchg
bound
imul
outsl
push
xorb
sbb
lds
test
sub
mov
jmp
outsl
mov
cmp
or
inc
xchg
clc
mov
dec
jle
mov
jmp
pusha
jno
dec
nop
or
int
add
pop
adcl
mov
add
push
hlt
cmpsb
shll
cmp
adc
out
xorl
loop
push
fcmovne
jno
xor
test
popa
jnp
dec
aam
dec
ret
test
outsl
jge
divb
insl
test
mov
das
adcb
mov
cmp
dec
mov
ja
add
insl
jae
jle
imul
loope
mov
jmp
orb
jns
dec
dec
mov
jp
test
add
ja
mov
cld
dec
add
xchg
or
mov
inc
notb
ret
push
add
iret
lods
adc
fs
imul
dec
mov
and
pop
lock
sub
aad
repnz
xlat
mov
pusha
lahf
cmpsl
out
sbb
cmp
push
cmpb
cmpl
xlat
jb
and
popa
sub
dec
repz
fstps
add
add
pop
jnp
push
pop
sbb
popa
dec
test
movsb
out
iret
mov
mov
pop
or
lea
dec
imul
or
xor
rcrb
add
pop
sub
mov
cld
cmp
xor
dec
jb,pt
jnp
rclb
sbb
push
int3
xchg
add
pop
leave
bound
das
iret
lret
ret
mov
in
stos
mov
cmp
sub
add
outsb
fmulp
pop
pop
test
add
push
subl
loopne
push
mov
test
dec
mov
jge
sub
xchg
mov
add
mov
inc
ret
insb
mov
or
lods
jb
pusha
mov
and
jge
add
xchg
xorl
xchg
mov
fwait
dec
hlt
fcoms
mov
add
sbb
or
mov
das
insl
pop
fsubrp
sti
in
popa
jmp
add
lods
dec
inc
sbb
aad
les
mov
inc
push
sub
adc
add
dec
pop
xchg
push
push
xor
scas
hlt
andb
std
mov
pusha
arpl
mov
xchg
jle
mov
lock
mov
fwait
push
and
cli
push
cmp
idivl
xorl
dec
sub
nop
sbb
pop
sbb
jp
negb
or
cli
jmp
dec
jl
push
cmp
xchg
jns
cmp
mov
sbb
insb
popa
add
test
inc
fsubr
mov
in
jle
sbb
mov
jg
adc
test
cmp
push
pmullw
rcr
cld
cltd
hlt
movsl
adc
dec
or
mov
and
sbb
push
adc
adc
test
cmp
pop
xor
rclb
add
pushf
ds
push
imul
clc
push
imul
sub
sbb
mov
inc
mov
push
loop
add
pop
test
jbe
js
cld
jne
popa
cmp
dec
add
xor
addb
mov
jo
dec
clc
movsb
add
xchg
jno
pop
add
xor
pop
add
add
push
ljmp
ds
roll
or
adc
jg
rdpmc
shl
dec
cli
outsb
minps
mov
xlat
test
jno,pt
mov
pop
popf
jbe
mov
test
sub
or
sbb
nop
add
sbb
scas
mov
fcoml
adc
add
loopne
mov
add
or
add
xor
add
mov
lahf
cltd
or
push
rorb
subl
push
cmpsl
mov
call
shrl
hlt
add
gs
sbb
imul
push
aas
pop
cmp
or
sti
in
pop
or
add
dec
pop
rol
push
das
mov
fcmovnbe
push
mov
cmp
add
adc
adc
push
cltd
negl
add
lret
and
lcall
lods
sub
pushf
add
xor
test
or
mov
pop
sub
push
shr
and
cwtl
mov
sbb
addr16
je
xchg
xchg
fistps
add
out
add
and
sub
ja
xor
pop
and
cmpb
adcb
mov
addb
pushf
test
jl
add
sub
fsubs
stos
cltd
pop
sub
enter
pop
mov
or
sub
mov
and
mov
fdivs
arpl
rorl
rolb
mov
inc
or
cmp
add
add
mov
mov
add
subl
xor
rcr
mov
shlb
daa
pop
push
stc
sub
out
push
int3
rcll
pusha
scas
leave
aam
jge
add
lea
pop
push
xchg
pop
ret
add
test
mov
jns
pusha
or
pop
stos
or
and
cli
add
iret
add
or
add
cmpsl
mov
lods
add
icebp
frndint
xchg
pusha
pusha
xor
pop
xchg
lcall
mov
or
jns
rcrl
mov
in
or
jno
stos
cmp
fwait
sbb
add
xchg
aaa
movsl
and
sub
sub
and
test
roll
or
dec
sub
mov
test
adc
pop
pop
xchg
pop
ret
rol
add
xor
mov
add
push
mov
and
mov
mov
add
lock
shrl
add
push
xlat
sub
or
mov
std
decb
pop
mov
jae
inc
add
std
push
push
mov
pusha
push
sub
xor
xor
sbb
addl
adcb
add
or
jge
add
outsl
cmp
inc
or
dec
ret
in
push
sahf
cmpsl
xor
cmp
inc
sbb
xor
imul
cmpsb
std
pusha
push
mov
xor
mov
xchg
jmpw
loope
jb
jns
cwtl
cmp
fmuls
fimuls
outsl
ljmp
cwtl
mov
aas
addl
dec
pop
pop
insl
add
das
data16
mov
adc
lret
mov
jle
push
add
xlat
sbbb
iret
orl
dec
add
sbb
inc
and
adc
scas
pusha
fs
mov
test
add
lods
jmp
and
in
mov
arpl
cld
insl
add
in
cwtl
mov
push
add
add
push
incl
in
cmp
jl
jne
pop
clc
shll
loope
bsf
cmp
mov
repz
add
jp
dec
pop
in
push
pusha
pusha
xor
test
stc
mov
ret
js
mov
or
repz
adc
pop
mov
aad
mov
cwtl
std
jno
pop
jmp
in
scas
mov
packssdw
movsb
dec
cmc
sbb
push
enter
cwtl
inc
add
imul
pop
orl
jne
out
out
incb
or
push
cmp
pop
jbe
inc
cmc
push
xchg
add
adc
in
iret
sbb
test
xchg
subl
or
pop
add
push
add
jbe
pop
inc
sarb
mov
rep
xchg
mov
or
pop
mov
xchg
pop
mov
sub
inc
add
in
pop
jle
lds
cmpl
pusha
addl
lock
mov
sahf
iret
out
cmp
andb
repnz
dec
data16
loop
add
push
pop
loope
repz
jl
adc
mov
or
jnp
xchg
xchg
add
lret
mov
push
int
stc
push
sar
popa
or
adc
pop
jns
push
cmp
cmovg
shlb
inc
add
iret
stos
call
faddl
sahf
add
add
add
or
xchg
mov
inc
xchg
out
push
add
out
pop
fcompp
arpl
or
outsw
push
cmp
pop
fwait
popa
add
xor
sbbb
cmp
mov
and
xor
add
mov
sub
mov
mov
fistpl
xorl
mov
orb
inc
repnz
sub
pop
push
std
psubusb
movsl
popa
mov
fildl
icebp
stc
adc
nop
jecxz
bound
jge
dec
jbe
iret
mov
dec
jge
add
fwait
roll
lock
inc
es
clc
repnz
ret
pop
dec
ja
or
add
sbb
rcl
in
das
push
test
pop
add
daa
xor
fmull
out
jp
test
insl
sbb
add
sub
imul
or
nop
push
sbb
pusha
ud2
mov
sub
pop
ja
add
loope
cltd
add
sbb
pop
xlat
fistps
lcall
cmc
pop
push
inc
push
add
fdivs
scas
out
push
jmp
inc
cmp
pop
hlt
add
out
popf
out
roll
sub
je
into
pop
xchg
add
pop
cmpl
mov
dec
pop
xor
add
movl
inc
movsb
ds
sarl
jge
out
popf
xchg
or
add
inc
add
js
or
arpl
insl
outsb
in
sbb
push
xor
fstpt
add
inc
insl
mov
add
popa
xchg
sbb
icebp
push
sarl
fcomps
and
test
loopne
js
cltd
mov
aaa
fiaddl
stos
lahf
add
icebp
sub
movsl
stos
loope
pop
add
push
verr
test
add
movsl
jne
loopne
xchg
add
inc
jmp
mov
enter
mov
mov
push
call
xchg
in
insb
out
pop
jbe
push
les
mov
push
nop
pop
jne
jae
jp
add
inc
add
pushf
ss
es
add
pop
loop
cmp
xor
inc
push
or
sbb
mov
mov
mov
jne
mov
repnz
in
or
je
pop
icebp
popf
or
dec
cs
cmc
adc
popl
xchg
lahf
add
cmp
ffreep
shlb
adc
adc
sti
fiadds
cmp
aaa
add
jecxz
jno
fstp
jmp
clc
pop
stos
andb
add
push
ds
pop
or
add
add
das
mov
add
xchg
push
pop
nop
or
sub
call
mov
xor
and
aam
xor
insl
cmp
imul
push
mov
lods
sbb
lret
stos
and
mov
jle
push
inc
add
lods
mov
pop
xor
fwait
mov
xor
fadd
mov
ret
sahf
and
jo
add
pop
pop
xchg
mov
pop
outsb
ret
in
outsb
cmp
test
adc
and
adc
insl
sbb
sbb
pop
add
inc
shr
add
or
cmc
lods
dec
int
push
pop
dec
pop
je
out
andb
xor
mov
loopne
jge
add
push
cmp
je
mov
jg
adc
lret
add
add
hlt
in
sub
mov
aas
in
ds
xor
notrack
pop
pusha
push
fnstenv
faddl
loope
test
add
arpl
dec
inc
mov
add
and
or
insb
sbb
js
addl
outsl
dec
add
in
sub
sti
test
aas
cmp
add
scas
add
lods
add
mov
rolb
sbb
xchg
sub
cwtl
fstpt
sbb
add
cmp
outsb
enter
in
jne
dec
hlt
add
shlb
mov
cmp
test
out
or
jb
cmc
shl
clc
lret
push
jo
fidivs
inc
sbb
pop
xor
dec
testl
loopne
inc
jg
add
cmp
or
and
scas
icebp
xchg
ror
xorl
in
cmp
pushf
addb
adc
sub
stos
test
mov
add
arpl
clc
insl
inc
pop
lret
sti
add
dec
jge
pop
add
and
xlat
add
cmp
cmp
or
hlt
icebp
sarl
xor
sbb
andl
mov
dec
adc
lcall
or
ficomps
loopne
add
rcrb
push
pop
xchg
js
mov
push
call
add
jnp
xorb
rorb
or
jmp
or
ret
inc
rcrl
outsb
or
pusha
int3
testl
push
jmp
adc
mov
movsb
loopne
and
sbb
add
leave
enter
stos
and
lcall
pop
adc
add
mov
popf
shll
fmuls
xchg
cmp
in
repz
push
add
mov
mov
add
imul
arpl
sbb
mov
pop
push
dec
dec
mov
push
imul
test
jmp
jne
jno
ss
push
adcl
add
jmp
jnp
rorb
add
paddq
jmp
xchg
mov
xor
lds
xor
sub
gs
repnz
cmp
inc
add
and
cs
add
adc
pop
ds
jno
or
or
inc
in
gs
stc
push
nop
inc
xchg
movsl
push
jl
push
xor
xchg
dec
dec
ss
pop
push
mov
mov
and
sarl
jl
enter
aam
xor
sub
lock
mov
bound
add
loope
xor
or
add
rorb
imul
add
ja
cmc
ljmp
sub
outsb
aas
in
andb
into
add
ja
pop
xchg
ljmp
aam
cmc
movsl
adc
iret
mov
nop
add
jmp
mov
sub
and
hlt
mov
mov
sub
push
add
daa
cmpl
mov
roll
inc
mov
out
bound
inc
cld
aas
fwait
sbb
add
aaa
xor
movsl
cltd
test
unpckhps
fcompl
sti
mov
ljmp
adc
dec
mov
add
clc
repnz
pop
lret
ds
sbb
cli
sahf
inc
popf
mov
xchg
add
xor
and
pop
or
xlat
jno
add
pop
pushf
int
loopne
stos
bound
js
dec
add
sub
or
push
aaa
sbb
mov
push
inc
xor
and
jg
stos
or
mov
fwait
add
mov
mov
xchg
test
mov
cmpsl
bound
roll
aas
add
mov
stos
and
mov
inc
adc
add
and
and
xor
xchg
inc
fwait
adc
push
mov
add
dec
loop
call
push
add
cmpsl
push
incb
inc
inc
shll
les
lcall
and
cmpsb
add
sbb
fwait
add
xchg
cld
cmpsl
sbb
call
mov
popl
adc
and
jbe
or
xor
mov
and
cmp
add
dec
subb
add
push
insl
fnsave
mov
cld
push
in
cmc
push
add
dec
jnp
pop
sub
sbb
cmc
add
rcl
lods
add
clc
loopne
testb
jb
sbb
jl
add
add
addb
fs
sahf
or
adc
dec
or
clc
cmp
adc
das
jb
mov
xor
ficoms
jg
lods
loope
jle
pusha
push
dec
jmp
cmp
mov
pusha
insb
jge
inc
adc
test
aas
sub
pushf
jecxz
pusha
or
in
testl
jnp
mov
ficomps
xor
lock
xor
out
add
cmp
out
pushf
push
repz
or
cmp
fst
add
popl
dec
add
insl
push
add
incl
jle
xchg
push
inc
add
inc
jecxz
adc
repz
cmp
pop
dec
pop
stos
test
aas
jne
loopne
outsl
add
ss
imul
add
arpl
sbb
inc
pop
add
push
jbe
mov
add
pop
push
xchg
jnp
mov
or
mov
fisubrl
and
add
xor
je
add
push
xchg
aas
gs
rcll
into
xor
movl
inc
and
add
mov
testl
popa
in
add
sub
jae
or
and
xchg
in
sbb
adc
mov
lret
das
test
fucomip
xor
add
cmp
arpl
aad
je
jbe
inc
add
sarl
cmp
xchg
int3
dec
add
outsb
leave
add
push
jno
add
cmp
testl
pop
testb
add
mov
and
jecxz
movb
nop
sbbb
add
mov
add
repz
push
das
mov
sub
add
in
inc
bound
out
lods
pmuludq
repnz
sarb
out
dec
add
jnp
mov
pop
jno
add
out
inc
cmp
in
add
cltd
xchg
xor
lods
out
add
sub
fisubs
or
repz
je
dec
inc
lods
sbb
roll
jae
inc
sub
subb
in
jp
add
leave
or
hlt
jb
mov
push
jns
lods
add
pop
je
test
push
mov
jae
add
leave
cmp
jb
arpl
cmp
mov
incl
outsb
adc
pop
std
ds
in
popf
pavgb
mov
or
out
mov
cli
insb
mov
imulb
add
sahf
cmp
popa
add
sub
lds
data16
addb
mov
mull
cmc
cmp
mov
ficoml
jecxz
cmpsb
je
push
lods
mov
add
inc
test
or
cmp
out
testl
repnz
add
xchg
pop
or
mov
add
jge
cs
sub
enter
ss
iret
add
and
xor
ja
add
jne
out
cltd
mov
lods
dec
jns
jg
nop
jno
mov
fdivrl
and
mov
xchg
sub
outsb
mov
cli
add
rcr
add
stos
iret
mov
lret
add
int
jmp
add
rolb
add
sbb
cwtl
and
lods
pop
mov
jbe
xlat
fsts
sti
sbb
in
repz
mov
in
pop
pusha
sub
push
out
jne
add
push
inc
inc
add
out
mov
ficomps
pop
sub
adcb
rclb
dec
rclb
dec
or
sbb
add
ret
add
pop
sub
or
add
rorb
ljmp
jmp
add
sub
addb
rorl
add
fs
dec
bound
add
push
outsl
loope
frndint
lock
hlt
pop
add
sbb
fwait
aad
bound
xlat
adc
test
out
cltd
jnp
xor
aas
inc
add
adc
cmc
and
sub
xchg
out
addl
push
cmc
ret
mov
and
or
stos
add
push
cmp
out
lahf
add
scas
add
dec
pop
bound
push
ljmp
push
mov
or
adcb
jle
mov
xor
lret
adcl
push
in
aad
lock
sete
repnz
addr16
sbb
add
out
and
sti
mov
add
sbb
inc
outsb
add
mov
xor
fs
mov
sub
sbbb
xchg
jle
gs
pop
scas
test
pop
mov
add
out
jmp
icebp
push
out
into
sub
inc
sub
mov
lds
cmp
movsb
or
cld
in
and
lods
paddq
xor
xor
push
push
sbb
add
sbb
cmpsb
push
lock
mov
punpcklbw
std
je
sahf
enter
add
mov
loope
pop
rolb
or
fcmovu
jle
add
jo
aas
sub
das
xchg
iret
pop
jno
and
cli
xchg
add
mov
fstpl
mov
roll
vmread
pusha
add
sti
mov
add
mov
mov
xchg
jns
and
std
or
xor
sbb
jno
add
cmp
jg
nop
in
or
push
repnz
into
jae
add
inc
ss
add
mov
pop
fsubrl
jns
add
xchg
sar
scas
rolb
mov
mov
out
test
hlt
xor
mov
test
ss
out
push
scas
lods
daa
pop
repnz
test
leave
or
test
jo
pop
fcompl
scas
fsubrl
jns
aad
loop
js
sub
cmp
mov
pop
add
dec
xor
lock
xchg
mov
test
out
add
insl
push
fucomp
sbb
add
jle
idivl
dec
addb
loope
stos
mov
pop
rcll
push
push
scas
daa
fdivrl
insb
jmp
imul
push
inc
addr16
inc
in
adc
push
xor
xchg
mov
jne
movsb
adc
jo
loop
or
fdivrl
lock
imul
add
stos
jns
push
xchg
adc
fiaddl
leave
pushf
fsubr
push
pop
loopne
lods
rorl
jno
add
dec
sbb
xor
push
and
fbld
sub
push
add
inc
add
fcompl
add
or
repnz
xchg
adc
add
sub
addb
in
cmpsl
sub
jb
add
sub
xor
dec
add
movsl
xor
je
fs
jmp
jne
aaa
or
ret
addb
add
lea
mov
push
cmc
pushf
pop
and
or
icebp
cmp
cmp
add
stos
std
dec
movsl
xchg
add
add
pop
test
mov
cltd
fidivrs
xchg
or
je
inc
in
pop
enter
push
add
jo
fs
jmp
sub
pushf
dec
xchg
inc
xchg
mov
xor
out
sbb
fsts
xchg
repz
fildl
or
out
jp
outsl
jno
add
adc
out
orb
insl
lods
inc
add
lret
call
mov
fs
shrl
or
mov
cwtl
jns
jne
frstor
insb
test
mov
addl
mov
clc
in
shlb
mov
mov
bound
or
xchg
adc
inc
enter
jmp
add
sar
pop
xchg
adc
movsb
xor
pop
bound
mov
sbb
xor
add
aaa
daa
inc
sub
adcb
add
xchg
out
pop
add
daa
pop
xchg
push
mov
scas
add
jno
cmp
adc
outsl
cmpsb
pop
mov
mov
stc
pop
pushf
xor
cwtl
xor
inc
dec
flds
add
mov
call
andb
adc
movsb
cmp
sub
xor
lahf
mov
inc
add
mov
push
andb
dec
xchg
jmp
cmpsl
cmp
add
cmp
sbb
sub
and
add
sbbb
fists
xor
fwait
cmovne
psubsb
add
xchg
inc
inc
sub
dec
xor
or
dec
or
cmc
push
pop
jl
adc
outsl
push
add
sbb
mov
sarb
jl
icebp
pop
fst
and
imul
jge
jg
add
test
xor
mov
sbb
mov
icebp
enter
mov
pop
outsl
ja
add
or
sbb
lods
pop
mov
mov
sarb
fadds
mov
pop
add
in
pusha
lret
adc
cmpsl
push
les
pop
aas
loopne
icebp
adc
das
data16
pusha
jnp
lahf
jle
pop
add
call
cmp
lret
mov
push
or
and
clc
and
lods
xchg
sub
sbb
pop
lock
icebp
popf
mov
add
ja
in
mov
xchg
adc
jo
push
pop
push
icebp
add
mov
or
adc
or
xchg
and
les
lock
popf
test
add
ljmp
mov
jb
cmp
pop
push
andb
sub
mov
pusha
mov
mov
fsubrs
enter
push
inc
dec
fildl
hlt
mov
nop
or
test
cmp
cld
pop
bswap
cwtl
repnz
stos
or
push
andb
or
add
mov
loope
add
and
pop
adc
fcomps
into
sbb
popf
xor
repz
add
push
mov
add
xchg
fisttps
pop
and
add
sub
das
add
or
cmp
lret
adc
cmp
jl
orb
lods
jns
add
in
xor
and
add
stos
adc
fwait
test
adc
add
dec
inc
adc
mov
push
and
adc
shlb
cld
cmp
xchg
pop
outsb
out
pop
clc
xor
mov
or
and
adc
cmp
mov
and
xchg
push
orb
ljmp
push
adc
cmp
fisttpll
rcrb
add
xchg
movsl
xchg
cli
movsb
push
mov
add
mov
push
ljmp
add
mov
les
mov
fcoml
clc
es
and
cmpsl
jae
add
mov
and
pusha
xor
pushf
jmp
fadds
add
sbb
sub
out
lods
out
xorl
aas
inc
int
adc
out
add
jo
roll
aaa
lds
cwtl
jp
leave
mov
mov
mov
and
and
std
cmp
mov
push
shrb
or
jae
pusha
add
dec
subb
add
cmp
add
push
sahf
add
lret
xor
in
xor
dec
jge
add
fsubrl
call
pop
mov
xchg
cwtl
add
jg
cmpb
cmp
sbb
testb
cmp
push
movups
cmpsb
add
add
mov
inc
push
xlat
mov
loopne
rcrb
sahf
ss
ret
inc
test
xchg
xchg
pop
arpl
dec
stos
test
jecxz
push
xchg
mov
movsb
cld
or
sbb
lret
jo
nop
imul
fwait
pop
enter
aaa
add
push
out
jbe
jo
add
lods
js
add
int3
pop
push
in
lock
lret
enter
xor
sub
or
add
pop
call
push
iret
stos
or
mov
and
and
subl
addr16
pop
fsubrs
nop
insb
push
test
add
mov
cmp
mov
hlt
call
push
punpckhwd
sub
add
loope
adc
mov
jl
push
cltd
popf
cmp
push
add
inc
shrl
or
adc
int3
icebp
pop
add
lods
movsl
lahf
adc
popl
test
negl
into
push
sub
sbb
add
adc
cmp
mov
das
jno
adc
add
sbb
push
lods
xchg
mov
jo
pop
add
push
subps
rcr
adc
hlt
add
and
inc
dec
xchg
sub
fidivs
xor
lods
dec
add
xchg
push
jo
adc
fsubrl
in
in
mov
std
orb
mov
xor
xchg
xchg
push
jo
out
aas
or
inc
xor
jns
es
aam
sub
movsb
sbb
addl
push
js
mov
hlt
jl
jg
add
pusha
in
xor
lds
outsl
jns
inc
into
mov
repnz
scas
adc
jg
mov
sub
push
sub
cmpsl
or
pop
push
push
pop
fistl
cmc
xor
in
pop
into
add
movsl
inc
mov
mov
add
rorb
outsl
in
fldl
pop
loope
lea
adc
sub
jle
add
dec
mov
add
or
mov
add
test
loopne
ljmp
xor
scas
jle
lret
jmp
add
push
push
fdiv
enter
jg
add
xor
pop
test
addr16
cmpsb
mov
push
outsb
add
pop
pop
adc
les
add
pcmpgtd
xchg
add
popf
jmp
cmp
std
xchg
mov
pop
push
xchg
sbb
inc
mov
add
jl
sbb
sub
xor
and
stc
cs
mov
notb
add
inc
nop
pop
mov
push
jb
repz
push
lcall
in
jg
push
mov
mov
mov
cmp
call
nop
adc
dec
fwait
sbb
mov
jmp
sahf
scas
jae
fmuls
das
fistps
rclb
mov
sahf
cwtl
sti
ja
cmp
cmpb
push
push
xchg
add
pop
push
sub
pusha
nop
cmp
mov
sub
and
imul
push
add
or
and
dec
stos
gs
pop
imul
xchg
fcoml
and
and
push
adc
pop
lcall
push
cmpsl
in
sub
pushf
add
pop
loop
pop
mov
aas
fcomps
push
add
xor
dec
xchg
faddl
inc
out
shl
fnstenv
jp
add
shlb
cmp
loope
mov
inc
or
mov
or
mov
add
mov
sub
cwtl
pop
pop
jmp
hlt
and
aas
and
push
sbbl
sti
pop
mov
je
in
aam
arpl
ret
add
out
into
lock
mov
cmp
and
xor
popa
push
cmp
shr
push
add
popf
and
cld
test
outsb
pmulhuw
adc
cmp
pop
into
pop
add
inc
xchg
les
mov
cs
dec
addl
mov
sub
lret
out
cli
rclb
bound
sbbl
pushf
cmp
inc
and
mov
loope
out
mov
mov
xchg
xchg
push
mov
ds
jecxz
pop
add
lret
mov
notb
fildll
add
popa
insl
cmp
sbb
mov
add
test
xchg
loop
clc
fists
sub
int3
bound
mov
aaa
stos
xchg
out
out
add
shlb
or
add
mov
loop
mov
inc
or
sar
daa
pop
aam
fxch
jns
push
sub
cld
inc
pushf
pop
add
pop
inc
lds
push
add
lcall
add
cmc
dec
dec
add
mov
adc
push
xchg
sahf
and
xchg
add
loope
lcall
rolb
jae
mov
cmp
or
call
loopne
add
mov
xorb
mov
pop
fiaddl
testb
mov
pop
jbe
arpl
jle
scas
xor
mov
fidivrs
jno
add
xchg
ss
pop
cltd
aaa
jbe
xlat
pusha
lea
or
subb
xchg
add
jno
ja
movsb
aam
cwtl
mov
sbb
dec
fsts
inc
enter
mov
pop
xor
add
fcmovne
or
fdivrl
hlt
ja
push
lcall
jae
add
dec
pushf
and
xor
push
xchg
leave
adc
cmpsl
fwait
adc
jmp
or
mov
or
sti
mov
ficoml
movsb
rcrb
add
lcall
or
add
fstpt
aam
loope
lock
mov
mov
pusha
mov
cld
dec
mov
mov
xchg
xor
data16
push
sarb
pop
mov
addb
lret
or
cmp
push
fadds
addr16
ds
sti
out
ljmp
mov
dec
jae
jl
sbb
and
int3
pusha
xlat
insb
add
jne
dec
add
lds
mov
fwait
add
clc
out
and
testl
xchg
xor
xor
andb
add
data16
mov
rcrl
ja
mov
push
fs
mov
aam
xor
and
cmp
cmpsb
cmp
lds
jo
pop
jno
mov
jmp
pop
sub
push
inc
insl
sub
stos
add
les
pop
mov
lock
dec
flds
cmp
hlt
mov
mov
aam
add
lret
pop
xchg
cmp
adcb
fldl2e
sbb
es
jmp
pop
mov
stos
pop
add
in
cli
add
leave
ja
dec
enter
lods
jmp
xor
incb
xchg
adc
inc
ds
lcall
loopne
and
unpcklps
shr
mov
or
add
push
push
sahf
in
add
cmp
jge
jno
in
call
add
test
xorl
das
ror
add
cmp
clc
je
clc
pusha
faddl
lock
pusha
jnp
dec
roll
add
dec
adcl
cmp
cmp
pop
xor
mov
push
test
data16
cmpsl
testl
adc
add
call
incl
pop
test
push
cmpl
add
or
loopne
flds
add
jle
mov
add
add
sbb
cmp
pandn
xor
decb
push
mov
movsl
or
mov
add
addr16
push
pushf
rcr
cmp
frstor
es
scas
sub
push
mov
insb
inc
inc
pop
mov
imul
xchg
or
sbb
adcb
pop
cmpsl
jo
ja
and
mov
test
fwait
imul
add
mov
add
push
aad
ret
pop
or
adc
xchg
imul
out
or
jae
leave
iret
hlt
xor
into
lock
dec
jecxz
ja
mov
add
sub
pushf
mov
movsb
ret
fildl
ror
pop
xchg
push
ja
int3
or
stos
sbb
sub
mov
aaa
or
insl
adc
push
sbb
mov
not
je
add
mov
loop
test
push
cmpsl
jmp
ret
in
sbb
bound
jle
push
cli
stos
mov
add
xchg
in
lcall
test
xor
mov
sub
punpcklbw
mov
or
ret
add
in
and
add
iret
push
mov
ret
stc
add
mov
or
pop
pop
sub
sbb
mov
jg
push
fldcw
jl
sbb
add
sar
ss
xchg
out
add
dec
fidivl
mulb
out
or
push
lret
out
rcrb
add
in
pop
mov
lods
imul
mov
mov
add
and
add
in
push
pushf
je
jnp
add
add
add
movsl
or
adc
imul
cld
out
shll
jno
cmpsb
dec
pop
fcomps
cmp
push
roll
into
push
pop
jge
and
mov
inc
add
sbb
adc
pusha
mov
cwtl
or
out
jno
out
rcll
jb
mov
add
or
dec
mov
jmp
xchg
lahf
or
adc
incb
dec
adc
xchg
inc
loopne
das
add
adcb
push
ja
push
dec
shlb
and
sbb
sti
jnp
and
add
mov
xchg
out
inc
js
pop
icebp
fmul
adc
jge
mov
or
add
xchg
xchg
test
leave
and
lock
mov
pop
push
jnp
xlat
dec
sbb
or
dec
and
lret
insl
jne
dec
cmp
lret
adc
rolb
sbb
jae
cwtl
inc
pop
push
ss
cmc
mov
sarl
inc
clc
add
jnp
aaa
test
shrb
sbb
mov
outsl
fsubl
bound
inc
int
adc
jmp
pop
pop
sub
scas
jo
xor
sbb
in
outsb
fs
cmp
jle
mov
mov
push
nop
sub
or
clc
imul
mov
mov
dec
xchg
pusha
das
add
add
out
sbb
clc
and
xor
dec
pop
loop
or
fld
mov
xchg
je
rcrb
ss
inc
aad
xchg
fsubrs
jle
add
and
inc
jns
jle
ja
sti
pusha
mov
or
mov
gs
test
je
hlt
jmp
sbb
jne
nop
sahf
fistpl
adc
popl
aaa
aas
movsb
cmp
add
xchg
jns
int3
ficoml
mov
push
inc
pop
and
cmp
push
aad
int
and
cmp
jnp
into
clc
jns
sbb
gs
add
push
mov
push
sbb
mov
adc
iret
imul
fiaddl
aaa
in
imul
pushf
cmp
jl
lcall
add
js
xchg
pop
ss
add
mov
push
cmc
cmp
inc
add
jge
dec
mov
dec
adc
adc
add
clc
xchg
sub
fadd
test
dec
adc
mov
lods
add
lahf
push
lret
out
pop
adc
aam
inc
or
fisubrl
or
jns
sti
inc
and
push
jne
shl
ja
in
mov
and
jp
dec
push
adc
aad
lret
fidivs
jo
shlb
dec
pop
test
add
pushf
cmp
in
push
inc
imul
add
icebp
xchg
dec
xor
outsl
testl
mov
cmp
nop
dec
mov
pop
jne
add
mov
cs
in
add
dec
add
pusha
jp
add
les
dec
add
outsl
repnz
and
push
mov
cmp
xor
push
mov
popl
arpl
jae
pop
sarl
std
out
push
jo
pushf
jmp
inc
xor
rolb
add
addr16
xor
loope
int3
in
inc
cwtl
xchg
cs
add
add
jmp
xchg
sub
outsl
cs
push
mov
mov
rolb
test
in
inc
xchg
adc
pop
jb
and
push
and
mov
mov
inc
adc
inc
adc
int
mov
mov
dec
add
in
sbbb
add
mov
push
mov
ss
cmpsb
incb
jo
loopne
sbb
add
out
cmp
or
mov
and
add
mov
inc
mov
add
cld
std
in
jns
pop
dec
sub
xchg
into
mov
int
shl
enter
sub
cmpsl
ja
aam
dec
xor
and
sub
rolb
popf
aad
ds
mov
pusha
pop
inc
test
mov
stos
sbb
in
sub
gs
aad
or
std
jb
mov
jnp
sub
fisttpl
push
stos
call
cmpsb
add
jns
icebp
stc
cwtl
adc
xor
xor
push
test
inc
add
ds
adc
fidivs
mov
sub
enter
push
add
lahf
jnp
add
lret
dec
mov
and
iret
add
das
insl
cltd
add
ja
dec
mov
notb
inc
push
je
xor
sbb
ficoml
lea
inc
sbb
lock
fcoml
add
mov
jecxz
push
cmpsb
add
inc
xchg
cmp
mov
or
sub
into
xchg
mov
add
repnz
test
inc
mov
pop
in
add
int3
rolb
push
add
enter
loopne
push
mov
movsl
lea
add
pop
shrb
sarl
cmpsl
push
arpl
sub
adc
insl
fdivr
pop
pop
pop
and
and
ss
add
lea
jecxz
jbe
add
push
adc
js
inc
add
iret
cld
adc
roll
mov
inc
add
jmp
jl
add
pop
popf
fisubl
jnp
dec
sub
test
or
rcrl
add
push
imul
inc
pop
outsl
xor
inc
xchg
lods
loop
cmp
add
jbe
fwait
mov
adc
jno
inc
mov
mov
xchg
push
add
ret
lahf
xlat
lods
addr16
push
add
add
movsl
mov
sti
sbb
jnp
rolb
or
mov
push
lods
fsubs
nop
sbb
inc
push
in
inc
jmp
in
push
add
cmc
movsb
repz
or
pop
scas
lock
or
jmp
add
or
mov
sbb
jge
add
rorb
mov
inc
mov
cmp
loope
push
add
push
cmpsb
mov
out
pop
xor
lret
iret
sub
addl
dec
pop
mov
lret
repz
test
add
bnd
fisubrl
add
sub
mov
aas
inc
stos
adc
mov
bound
lods
icebp
enter
js
adc
dec
scas
add
xchg
das
in
jecxz
add
pop
fdiv
mov
popl
es
cli
cwtl
dec
cmc
mov
mov
sub
lahf
add
cmp
lcall
and
cmp
mov
mov
and
jp
add
jmp
adc
mov
into
push
sbb
aam
push
fwait
sbb
xor
mov
adc
sub
push
inc
in
pop
filds
aaa
add
or
jb
cmp
adc
sar
das
loopne
mov
rcrl
rorl
mov
aaa
and
push
add
pop
inc
and
dec
adc
mov
adc
sahf
add
mov
jp
cmp
push
add
scas
repnz
pop
cli
add
ficomps
mov
xchg
cmp
add
xchg
insb
and
in
mov
lods
rorb
adc
or
mov
cmp
add
loop
mov
imul
jl
cmp
out
clc
std
push
out
pop
in
pop
lret
in
loopne
daa
add
push
in
cmp
insb
inc
nop
add
cs
loope
jb
decb
add
or
test
xor
pushf
mov
add
jbe
scas
add
ja
test
and
add
sti
cmp
cmp
push
pop
and
aad
popa
add
xlat
lods
mov
jmp
jbe
sbb
add
les
push
hlt
js
andb
inc
imul
push
insl
arpl
stos
or
enter
xchg
add
mov
pop
aaa
dec
xor
sub
pusha
pop
and
leave
dec
loop
movl
iret
mov
xchg
popa
fsubs
adc
xor
cmp
and
clc
add
mov
or
push
pop
add
test
es
sub
rcrb
shrb
enter
xor
adc
fcmovnu
add
push
cmp
xor
pop
in
add
les
jmp
jno
insb
fcomps
shlb
add
mov
fld1
stos
into
add
adc
gs
je
xchg
add
outsb
ret
shll
into
jecxz
sar
je
sub
fcom
das
movsl
sub
test
inc
or
adc
xor
loopne
call
ljmp
rcll
sbb
sub
dec
f2xm1
lahf
pop
decb
lea
pop
rolb
adc
push
pop
lret
add
xchg
aad
das
add
mov
lock
xlat
pop
inc
lods
cmp
int3
inc
mov
daa
fldcw
cmpsb
dec
or
mov
xchg
sbb
xchg
add
and
jns
adc
jnp
sysenter
push
jecxz
dec
shrb
pop
in
cmp
add
jns
shrl
and
jp
jl
xchg
mov
xor
les
insl
inc
add
or
leave
push
add
in
inc
mov
std
bound
xorl
dec
and
and
sub
into
cmp
stc
jne
adcb
loopne
xchg
jmp
jmp
loopne
out
or
hlt
cli
xorb
mov
jo
push
xchg
mov
sub
adcb
pusha
xor
aad
xor
in
mov
test
add
xor
scas
push
adc
rcl
insb
sti
dec
push
iret
sub
pusha
es
add
and
cmp
or
sub
adc
add
sbb
push
add
sub
mov
daa
cwtl
int3
add
ljmp
scas
adc
push
add
stos
out
jg
and
dec
sar
adc
add
or
mov
push
mov
push
shlb
mov
sub
push
in
int3
lock
sub
bound
pop
xchg
pusha
push
inc
in
pop
or
adc
nop
jne
push
cld
add
add
dec
add
jge
gs
or
and
xlat
add
mov
pop
repz
outsb
lods
enter
add
inc
sbbl
lahf
jns
nop
les
sahf
aaa
imul
inc
popl
out
pop
or
lock
fucomip
fnstenv
push
lock
mov
inc
psrad
add
pop
mov
test
pop
loop
push
jge
mov
lods
or
and
inc
cli
or
gs
add
push
loopne
icebp
dec
pushf
shl
dec
add
push
pop
shrl
mov
add
lods
arpl
xor
pop
pusha
jns
loope
lock
incb
push
andl
add
loope
rcrb
testb
pop
jo
cltd
push
test
inc
jo
aas
add
sahf
and
or
mov
inc
add
mov
and
push
pop
pop
mov
push
cmpsl
rcrb
out
cwtl
mov
mov
repnz
aam
and
add
cmp
inc
inc
xchg
iret
jbe
cwtl
push
les
repz
mov
vmovd
or
iret
and
add
test
pop
test
xor
cmp
sub
add
adc
cmp
sbb
test
and
mov
std
pop
mov
adc
jo
stos
cs
addr16
add
fnstcw
pop
into
mov
or
jmp
xchg
addr16
cltd
xchg
xor
xchg
sub
imulb
fdivrl
in
dec
adc
add
test
sahf
jg
add
setne
fmul
adc
in
jno
jg
clc
add
filds
out
ja
or
xor
pop
aam
mov
mov
pop
les
adc
pop
pop
or
adc
stc
movsl
fiadds
shrl
out
jns
in
pop
call
push
xchg
aas
and
lea
add
jns
pop
or
loopne
add
xor
adc
int
testb
jl
bnd
ror
push
xchg
mov
xchg
add
repnz
mov
sbb
adc
mov
mov
add
ja
dec
dec
or
jle
movnti
add
rorb
pop
mov
inc
fs
jp
mov
mov
fistpl
adc
insb
loop
cmp
fchs
push
out
out
adc
push
mov
adc
mov
inc
roll
loopne
adc
orb
filds
or
popa
jns
pop
add
mov
rcl
test
jmp
and
inc
dec
inc
add
cmc
mov
bound
mov
pop
hlt
das
add
out
add
iret
inc
movsb
push
or
push
cli
movaps
shlb
add
fisubrs
mov
add
bound
xor
in
pop
add
cmp
cmp
dec
xchg
shl
pop
data16
clc
cmpsl
sub
js
mov
or
and
loopne
push
xor
cmp
rcll
pushf
xchg
inc
je
cmp
add
ret
cmp
inc
mov
jl
add
leave
out
add
xor
xchg
fdivs
pop
stos
ljmp
ja
pop
daa
or
out
push
lock
add
push
or
jp
cmpsl
pop
aas
std
and
hlt
sub
xor
stos
mov
mov
dec
mov
lcall
xchg
pop
int3
or
fdivrl
mov
adcb
into
add
loop
int3
add
sbb
movsl
add
fisubs
js
add
pusha
sub
cwtl
xchg
jmp
jne
lret
dec
xchg
cmp
mov
loop
jo
push
mov
call
insb
add
sahf
js
sub
add
iret
cmc
outsb
pop
dec
rcrb
out
lahf
mov
jg
add
les
mov
stos
push
pop
daa
adc
push
cmp
test
pop
dec
ret
arpl
lock
pop
adc
mov
fsubl
mov
les
call
adc
roll
mov
inc
sti
jnp
loopne
lahf
push
push
addl
push
cmpsl
xchg
cltd
mov
outsl
add
mov
jg
xor
jno
ja
insl
jmp
xlat
pop
shll
sub
cwtl
call
jae
bound
lods
mov
jns
sub
sub
dec
lea
xor
dec
mov
xchg
bswap
mov
xor
mov
in
iret
mov
in
pop
dec
dec
lret
sbb
push
lcall
pop
add
mov
daa
sbb
subb
xor
adc
sbb
and
fiadds
divl
inc
or
aaa
fildll
sub
aas
test
les
lods
add
jnp
repnz
std
mov
aaa
bound
clc
xlat
scas
mov
stc
jmp
xor
test
push
pop
fwait
lock
add
mov
sub
test
std
popf
test
push
lcall
rolb
sarl
xchg
jnp
dec
adc
add
fldcw
int3
xchg
pop
xor
push
out
stos
cvtps2pd
mov
xchg
out
inc
rcrl
clc
cwtl
add
jmp
aad
ljmp
test
adc
add
clc
pushf
pop
adc
push
bound
dec
push
int3
loopne
movsb
adc
ljmp
jl
div
add
inc
nop
cmp
mov
fwait
dec
mov
les
sti
std
icebp
or
mov
rcrb
fsubrs
jae
loopne
mov
inc
lods
pop
mov
and
pop
mov
fildl
xchg
xor
leave
shrl
cmpsb
sbb
xor
out
add
ror
pop
sar
scas
push
jecxz
xorl
cmp
fidivs
adc
movl
jge
nop
pop
mov
jl
out
test
arpl
jmp
das
lret
xchg
rcll
lods
sbb
add
adc
scas
sbb
inc
repz
pop
popa
xchg
inc
fildl
pusha
test
xchg
mov
xchg
dec
cs
test
add
add
mov
sbb
fucom
mulb
dec
sahf
inc
repnz
into
add
inc
scas
jae
iret
pop
arpl
loopne
rolb
xchg
into
sub
nop
mov
in
jne
stc
call
mov
add
push
stos
dec
cmpsl
pop
push
and
cld
inc
in
push
loopne
fbld
pusha
dec
rorb
xor
mov
add
and
sub
add
mov
scas
add
mov
gs
loop
mov
adc
push
sar
sbb
sub
add
pop
sub
daa
pop
mov
pop
add
sbb
mov
add
int3
repz
loopne
cmp
dec
jmp
inc
inc
imul
xlat
pcmpgtb
stos
idivb
stc
push
mov
mov
and
outsb
adc
stos
xor
clc
add
or
cwtl
mov
sub
mov
fs
pop
mov
ret
and
test
dec
push
push
xor
pusha
add
jge
sub
or
dec
jp
add
xor
sbb
adc
imul
mov
pushf
xor
imul
push
sub
push
repnz
add
out
fists
aas
orl
cmp
sbb
adc
shrb
jp
and
mov
inc
push
sub
and
add
jg
inc
lods
cmp
mov
lret
adc
leave
pusha
mov
sbb
and
add
push
xor
push
cs
mov
es
ja
andb
jno
pop
sbb
jmp
add
dec
or
test
add
xchg
cmpsb
loop
std
xchg
push
pop
subl
mov
push
sub
rclb
inc
add
scas
cmp
cmp
js
mov
mov
cwtl
add
out
add
mov
cltd
lds
sbb
rclb
pop
xchg
pop
lods
loop
add
imul
fstpl
add
mov
loop
add
cld
xchg
add
shl
leave
data16
jne
jge
lods
subb
cmp
add
push
test
test
xchg
sub
repnz
nop
add
test
jecxz
and
add
andl
mov
add
sbb
dec
and
sbb
insb
cmpb
stos
add
pop
movsl
dec
add
mov
mov
scas
into
xacquire
inc
pop
dec
mov
je
andl
in
fnstcw
aas
lods
and
xor
adc
xchg
ds
pop
sbbb
cwtl
lret
dec
paddusw
adc
sub
nop
xchg
push
lods
jno
add
mov
cwtl
sub
mov
adc
add
sahf
or
in
in
dec
jns
push
sbb
inc
pushf
and
sbb
sub
add
jno
inc
pop
es
mov
inc
mov
cltd
lock
add
xchg
leave
rcrb
ds
dec
inc
sarb
rcrb
adc
enter
xchg
imul
inc
cmp
outsl
push
fstl
and
xchg
xor
fwait
jmp
push
lret
pop
repz
dec
mov
aam
std
rclb
or
sbbl
testl
or
inc
es
mov
xchg
setb
and
adc
lds
inc
add
sub
loopne
pop
aaa
jnp
add
adc
shll
daa
test
inc
mov
jle
add
mov
stos
mov
dec
je
sar
lret
imull
inc
rclb
mov
sbb
xor
xlat
mov
mov
inc
add
sub
jg
adcb
jno
pop
fisttps
insb
loop
dec
test
add
fwait
sbb
repnz
or
sahf
aas
inc
fs
add
bound
and
shrl
mov
cmpsl
aas
jbe,pn
adc
jnp
cmp
mov
test
mov
in
cmp
cmp
or
fdivr
cltd
add
xchg
jnp
sub
xchg
cmp
out
ret
inc
cmc
mov
sbb
or
out
xchg
or
jnp
or
add
xor
daa
xor
add
rorb
enter
mov
fildl
and
orb
pop
sbb
xchg
outsl
fwait
loope
jns
out
add
lcall
cmove
in
pop
mov
pop
test
add
pushf
fistps
orb
mov
push
pop
ja
insw
add
mov
aas
xchg
cmp
mov
dec
ljmp
pop
fmull
fs
xor
add
mov
push
add
jno
mov
movl
das
fisttps
add
and
xor
fwait
rclb
bound
add
mov
das
insl
push
dec
je
stos
cld
movsb
test
mov
add
xor
test
popa
fistpll
inc
andl
pop
cli
jo
add
outsb
or
clc
call
xor
push
lock
xchg
into
jg
gs
pop
adc
lds
cli
add
ror
adc
lods
xor
pop
mov
nop
dec
jne
sarl
xor
push
push
xchg
std
pop
and
pusha
sub
ljmp
dec
jl
add
push
pop
add
mov
popl
push
mov
rclb
repz
add
adc
xchg
pop
loopne
movsb
into
add
jnp
cld
push
js
call
cli
mulb
repz
inc
add
sahf
int3
or
pop
aas
and
inc
pop
cmp
jge
pop
cmp
nop
ja
and
stos
add
xor
mov
pusha
ret
sub
incb
mov
jne
adc
cltd
mov
ljmp
mov
mov
adc
mov
xchg
dec
cs
sbb
sbb
push
lret
and
mov
loope
add
sub
mov
mov
rcl
xor
nop
lods
and
gs
addl
idivb
dec
push
sbb
test
int3
xchg
push
gs
loopne
xor
call
insb
leave
pusha
lock
in
pop
aas
cltd
hlt
test
stos
cmp
and
pop
inc
jp
jl
cmc
add
and
adc
mov
mov
push
xchg
in
cs
into
test
sbb
outsl
mov
adc
mov
xor
nop
fcomps
iret
or
push
mov
mov
inc
xchg
push
jl
ds
sahf
adc
sar
pusha
insb
push
or
loope
cmpsb
push
mov
sbb
pop
dec
add
pop
movsb
aaa
sub
sub
inc
and
shl
push
pop
dec
pop
pop
insb
ret
rclb
bound
adc
fstpl
std
mov
out
jo
xor
xchg
add
ljmp
into
add
aaa
stc
mov
sbbl
imul
jo
es
fidivl
mov
xlat
add
lea
loop
dec
testb
fwait
jo
sbbl
test
pop
xor
add
adc
xorb
and
pop
pushf
pop
stos
push
mov
pushf
out
add
pop
dec
idivb
mov
sti
pop
cmp
jo
pcmpgtw
std
xchg
pop
aam
inc
xor
add
outsb
sbb
test
or
or
fsubrs
inc
sbb
popa
out
lods
or
pop
jns
or
into
idivb
ja
push
xchg
sbb
cld
test
dec
mov
enter
pop
movb
sbb
cmp
imul
cld
pop
daa
mov
cwtl
add
dec
out
cmp
leave
sbb
mov
inc
fldl
adc
add
outsb
jo
add
add
inc
shlb
mov
cli
out
add
scas
pop
fmull
xchg
bound
xor
xchg
cmp
test
lcall
sarl
xlat
loopne
outsb
inc
cmp
pop
sbb
std
adc
jnp
cmp
fmuls
popa
call
aas
mov
addr16
stc
push
loop
in
xlat
lock
sub
xchg
or
test
rolb
imul
or
loope
in
pushl
dec
add
push
xor
adc
cmpsl
xchg
cltd
push
sbb
push
popa
repz
ret
inc
sbb
lock
pop
or
or
xrelease
iret
mov
mov
push
mov
lahf
mov
cmp
mov
lcall
add
sub
dec
mov
leave
sub
sbbl
mov
mov
push
mov
hlt
loope
inc
adc
or
jo,pn
adc
add
jbe
loope
out
lret
imul
loop
sbb
push
test
jae
push
and
mov
aad
pop
push
sbb
add
pushf
xor
lds
loope
nop
push
lcall
fwait
sbb
lea
loopne
add
frstor
push
subb
scas
mov
adc
clc
mov
mov
iret
xchg
das
repz
outsl
dec
les
pop
nop
mov
loop
dec
sti
stos
xor
cmpb
add
iret
out
stos
push
xchg
and
adc
imul
stos
cld
fadds
pop
in
pop
nop
hlt
rcr
jmp
sbb
lock
cmp
iret
pop
mov
jmp
dec
aaa
stos
sub
jl
jb
dec
movsb
mov
pop
pop
cmpsl
hlt
jns
add
fwait
movsl
jecxz
js
test
xor
insl
aaa
popa
aas
mov
ss
add
sbb
loope
mov
shrl
dec
adc
sbb
lds
add
fldt
inc
pop
sub
push
test
mov
cmpsb
push
xchg
or
shr
dec
clc
movsb
xchg
add
adc
pop
int3
xchg
mov
sub
test
mov
icebp
mov
push
ds
nop
add
mov
fwait
add
cmc
xchg
push
add
dec
jmp
add
or
add
jbe
leave
jl
out
shrb
pop
push
daa
faddl
sar
lds
popa
pop
sub
sbb
and
sbb
or
mov
mov
cmp
inc
call
or
xor
mov
xor
push
add
cmpsl
push
mov
call
mov
pushf
movhps
lret
push
pusha
xchg
mov
mov
cmp
add
sti
inc
or
fcomi
or
add
in
popa
add
xchg
lret
jo
or
insb
pop
dec
xchg
xchg
loopne
rclb
xor
repnz
jge
push
call
mov
mov
xchg
js
xor
jbe
icebp
cld
test
add
xchg
pusha
mov
and
cmpsl
rclb
sub
or
clc
mov
sub
mov
pop
pop
mov
push
lock
sahf
inc
nop
push
inc
add
xchg
cmpsl
add
jnp
add
in
add
jbe
insb
sbb
dec
jmp
lcall
mov
mov
xchg
or
cmc
mov
lods
inc
adc
mov
push
stc
sbb
inc
pop
push
push
ja
lods
stos
jmp
jp
sub
add
mov
insl
or
stos
xchg
jns
xchg
ret
add
add
push
andl
push
fsubs
and
xchg
cmp
dec
cmp
adcb
bound
dec
add
xchg
lods
jge
movsb
xchg
push
lret
mov
push
inc
in
mov
cmp
ss
jbe
xchg
or
push
push
add
aad
add
xchg
xor
add
push
mov
repnz
js
lcall
shlb
leave
add
fs
mov
lahf
xchg
and
in
pop
data16
add
push
mov
mulb
push
inc
mov
cs
fisttps
add
lcall
add
push
cmpsb
cmp
cmc
add
push
lahf
in
mov
add
jae
ja
loopne
leave
mov
movsl
test
mov
in
int3
les
add
jl
fcoml
push
add
xchg
xor
add
fistpl
add
pop
add
xchg
aad
add
les
les
push
stos
xor
add
add
sub
push
add
insl
je
ret
cmp
jp
sbb
out
push
add
mov
vmptrst
leave
adc
pop
mov
sarb
dec
scas
jbe
add
xchg
xor
add
outsb
mov
daa
adc
clc
dec
mov
sbb
and
push
or
pushf
or
pop
push
arpl
sub
in
inc
icebp
mov
or
shlb
inc
bound
popf
jge
mov
push
or
fmull
fldcw
and
add
pop
cld
int3
push
shl
dec
pop
enter
dec
in
xlat
pop
movnti
cmp
repnz
call
cmp
outsl
lea
dec
cmp
xchg
inc
and
shl
repnz
fs
or
mov
and
push
push
ja
into
sbb
mov
std
sbb
add
sub
pop
mov
outsb
adc
pop
cli
test
and
xlat
cmpsw
test
insb
mov
out
out
ret
push
inc
sub
enter
push
or
pop
sbb
cs
inc
arpl
xor
addr16
add
cmp
loop
or
jmp
loopne
mov
outsb
push
enter
shll
add
sbb
xchg
push
sbb
add
inc
arpl
jle
fiadds
sub
push
clc
xor
js
jne
outsl
xor
pop
mov
popl
or
pusha
stc
stos
fdivrl
ja
test
outsl
jb
shrb
into
and
popa
repnz
xchg
popa
testb
add
and
call
dec
mov
es
aas
or
lock
jecxz
jg
sbb
incb
lcall
lahf
cmp
out
mov
or
cmp
dec
int3
enter
mov
and
fbld
shl
negb
pop
imul
pop
cmp
je
xor
xchg
dec
ret
and
dec
mov
gs
mov
leave
pop
mov
je
xchg
jmp
cmp
jecxz
cmp
adcb
shll
cmc
in
call
lahf
jns
cwtl
push
push
aam
inc
fdivr
iret
add
xchg
pop
mov
test
and
jbe
ficompl
jne
pop
test
adc
leave
lret
sarb
popa
add
jp
imul
add
dec
inc
xchg
gs
mov
add
das
cmp
sub
mov
call
add
test
cmp
insl
andb
arpl
ljmp
in
cmp
call
ret
xchg
stc
xchg
sub
pop
pop
arpl
or
add
mov
es
xchg
add
loop
mov
ljmp
sbb
add
pop
es
imul
pop
ljmp
dec
push
cmp
pop
jg
and
adc
mov
roll
adcb
sahf
psrld
push
insb
clc
out
arpl
jmp
cld
jle
sahf
mov
mov
push
loop
and
or
adc
popa
pusha
lahf
cmp
pop
clc
xor
mov
jg
push
add
mov
add
and
std
xor
xor
jle
test
mov
xchg
and
es
ds
dec
jle
adc
insb
jle
imul
outsb
scas
pop
push
pushf
inc
es
mov
dec
nop
rolb
clc
lods
push
testb
nop
xchg
adc
add
pusha
mov
mov
sub
and
add
fiadds
pop
inc
inc
inc
mov
jno
push
aad
repz
js
xchg
pop
sbb
in
sahf
pop
add
add
adc
cltd
inc
leave
fimuls
shrl
std
call
sbb
add
insb
add
adc
jo
movsl
call
loop
data16
jg
mov
stc
dec
negb
test
xor
xor
test
test
sarl
add
inc
bswap
pop
test
loope
add
sbb
fs
mov
mov
xor
dec
push
test
push
out
jmp
pusha
sub
push
push
push
xchg
sub
loop
sbb
sub
es
jl
cmc
add
das
or
xchg
jb
aam
or
faddl
fiaddl
dec
mov
int3
cmp
jge
xor
push
inc
and
add
mov
add
ret
dec
mov
pop
outsb
js
adc
xor
jb
add
les
cmpsb
push
add
js
add
xor
andb
inc
mov
or
cmp
aas
jle
add
into
mov
ja
xchg
fdivl
add
cmp
xchg
mov
jmp
jp
neg
in
jmp
add
jle
inc
xlat
add
sbb
les
adc
es
stos
xor
addb
add
sbbb
insl
ljmp
das
pop
jb
add
testb
test
cmp
enter
pusha
dec
inc
flds
sbb
jle
or
sbb
add
mov
sbb
or
add
enter
xor
or
xlat
cmp
out
icebp
out
pop
cmp
js
mov
add
lcall
add
shlb
adc
or
jo
mov
xor
pop
inc
aaa
cwtl
lcall
rol
push
add
arpl
icebp
outsb
mov
pop
and
cli
sub
mov
leave
sahf
js
ror
cmpsl
inc
test
add
test
outsb
loopne
and
or
pop
xchg
pop
add
in
ljmp
outsl
sub
inc
dec
add
cmpsl
mov
lods
test
jle
nop
es
add
xor
add
dec
clc
jmp
test
push
push
add
cmp
arpl
inc
xorb
cmp
or
mov
lcall
jmp
or
dec
out
pop
nop
lods
add
test
adc
mov
imul
add
je
mov
mov
cmp
and
out
mulb
pop
mov
add
or
xchg
movl
ja
es
cmp
insb
ss
dec
xchg
mov
add
xchg
add
enter
xlat
sbb
xchg
dec
push
cld
jo
cmp
pop
jle
repz
lods
pop
inc
lret
pop
adc
jne
push
or
cmp
into
dec
add
popa
xchg
push
sbb
stos
xor
fisubl
add
sbb
std
pop
int3
adc
sbb
aad
cmp
add
jp
xchg
repz
adc
test
mov
mov
mov
fs
pop
mov
test
jmp
add
in
call
hlt
roll
mov
mov
bound
push
sbb
xor
inc
jle
mov
cmp
cmpb
cltd
dec
mov
inc
add
stc
dec
lock
push
pop
add
call
lret
mov
out
jo
nop
xor
das
fwait
cmc
dec
sbb
dec
insb
xchg
lock
push
push
sbbl
xchg
add
movsl
jle
add
mov
andl
sbb
adc
shl
mov
push
mov
sub
mov
add
cli
pop
sti
add
lcall
pop
jge
lret
and
mov
xchg
fs
mov
add
jmp
mov
js
jp
jge
push
in
add
shl
push
in
rcll
outsl
jns
add
mov
add
andl
push
ret
test
sub
pop
xchg
add
and
lahf
orb
call
pop
or
ret
add
rclb
push
jbe
outsl
and
sbb
rorl
inc
jae
and
mov
add
les
clc
add
mov
icebp
xlat
in
pop
and
push
and
jmp
leave
cltd
insl
es
or
push
fwait
xor
nop
push
out
pusha
fnstsw
in
xchg
mov
fdivrp
add
sti
jl
push
in
decl
cwtl
cmp
mov
andl
mov
jmp
stc
push
jo
scas
pop
in
dec
push
pushf
add
sbb
lods
idiv
sbb
gs
xor
leave
xor
aas
daa
push
xorb
xchg
or
jbe
test
in
mov
or
dec
sub
xor
sbb
mov
inc
add
and
mov
add
sarb
fildll
push
es
mov
cld
faddl
jns
outsl
cmp
add
test
mov
sub
cmp
xchg
test
wrmsr
je
dec
leave
adc
dec
ja
outsl
sub
jp
add
test
fildl
push
div
and
fstpl
nop
insb
add
mov
sub
lock
lcall
pop
lret
add
pop
in
mov
jns
pop
mov
repnz
add
shlb
xor
jae
xchg
ljmp
pop
sarb
and
sub
leave
cwtl
add
movsl
pop
mov
lods
popf
pop
jae
pop
mov
add
int3
aaa
orb
pop
mov
mov
and
xchg
mov
add
sub
cld
ficoml
add
cmp
mov
cwtl
mov
ds
add
out
xchg
xor
add
clc
loopne
scas
imul
or
or
pusha
out
scas
fbstp
sbb
add
stos
mov
push
add
imul
sub
cmp
or
sbb
xchg
pusha
loopne
add
pop
fidivrl
add
stos
mov
add
dec
inc
test
xlat
mov
test
lock
adc
sub
pusha
sbb
jno
inc
cmp
ja
xor
add
mov
cmp
jl
mov
adc
add
cmpsb
insb
sbb
ret
ficoml
inc
cmp
subl
das
pusha
xchg
sbb
jb
add
push
bnd
cmpb
aas
mov
fildll
daa
stos
add
mov
add
xchg
lret
cmpsb
mov
cld
paddb
mov
sub
cmp
jge
cmp
rcr
mov
nop
mov
lock
add
sub
jge
rclb
dec
js
fsts
and
lret
into
repz
movsl
sbb
sbb
inc
mov
pop
jno
int
mov
xor
dec
popa
movsb
daa
jo
fstpl
or
into
xchg
das
out
push
adc
add
fiaddl
or
add
out
call
pusha
aam
mov
xchg
sub
sub
dec
rcrl
jnp
mov
mov
jne
cmp
call
add
mov
add
fstp
cmp
adc
mov
dec
xchg
push
cmp
adc
and
add
inc
shlb
and
cs
push
inc
wrmsr
cmc
xchg
add
lock
aad
mov
or
cmp
push
add
popa
mul
add
in
mov
dec
sbb
mov
imul
dec
push
xor
push
stos
add
jne
test
push
addb
repz
test
pop
and
in
iret
inc
add
mov
lock
cmp
pop
add
xchg
sub
inc
out
and
dec
mov
je
sbb
xchg
in
fstps
dec
add
jb
jmp
sbb
inc
cmp
leave
icebp
pop
test
sub
xchg
sarb
sti
jb
dec
and
int3
add
inc
push
outsl
fnsave
aam
into
add
adc
jnp
in
push
dec
outsl
sub
add
jo
cld
pop
mov
fldcw
jle
sub
ja
xor
popa
or
mov
add
mov
jo
arpl
cmpb
jle
jbe
lods
add
adc
or
add
or
or
xor
add
add
xchg
iret
sbb
push
scas
inc
mov
jns
xor
inc
decb
mov
add
test
inc
fcomi
jae
add
and
pushf
add
xchg
jnp
sub
add
jbe
gs
add
cld
out
movsl
jp
and
ljmp
stos
add
add
xlat
mov
lock
add
jae
std
push
pusha
mov
mov
ror
add
add
hlt
sbb
sub
xchg
mov
xrelease
xchg
inc
das
fwait
loope
aad
adc
or
sarl
iret
insb
ret
out
cli
jecxz
daa
adc
mov
scas
popf
decl
xor
aam
pusha
inc
mov
mov
jnp
push
popa
in
add
mov
mov
ret
xchg
mov
imull
shl
loopne
push
add
push
push
sub
sub
jns
sub
pop
dec
push
push
and
mov
xchg
clc
lds
cli
mov
insl
orb
cld
push
adc
cs
movsb
iret
or
bound
and
and
add
and
lret
orl
movsb
inc
fimuls
jle
adc
popa
nop
ljmp
push
cmp
sbb
nop
add
cs
add
xchg
andb
out
call
push
adcl
xchg
mov
lods
jbe
sbb
jae
mov
cmc
daa
mov
roll
cmp
xor
sub
push
xchg
inc
call
or
mov
ret
dec
push
adc
mov
lret
mov
mov
mov
inc
jnp
push
or
test
push
arpl
xchg
xorb
aad
jle
adc
sub
pop
add
add
mov
jmp
mulb
daa
jmp
test
mov
lods
stos
pop
dec
into
push
pop
push
lret
adc
mov
sub
lea
repnz
lods
push
push
in
ret
notb
and
and
pop
push
iret
orb
add
xchg
add
insl
lods
out
add
xor
lock
mov
push
xchg
mov
pop
cmpsb
xchg
cmp
xor
sbb
adc
add
push
push
andb
jl
xchg
push
cmc
dec
int3
adc
adc
cmp
addr16
data16
push
push
adcl
mov
add
or
sub
add
ja
xchg
cmc
das
or
xor
std
xchg
add
fwait
push
aaa
add
jmp
or
cmp
int3
or
loopne
or
and
shrl
addb
and
mov
shlb
insb
mov
js
rcll
and
push
in
les
sub
jge
jb
cmp
or
test
ret
and
mov
aad
inc
and
push
add
in
bound
xchg
movsl
add
mov
mov
sbb
inc
shl
imul
movsb
bound
add
jb
cli
mov
lcall
lret
jg
hlt
insl
outsl
je
add
pop
sbb
aad
mov
bound
add
push
outsb
cwtl
or
jb
adc
fsts
lds
add
daa
xchg
repnz
add
dec
xor
fst
pop
xorb
push
mov
push
or
jae
inc
push
ss
inc
jle
fst
inc
cmp
sub
push
aad
adc
pusha
cmp
insl
push
and
xor
rolb
add
fistl
and
and
push
iret
ss
add
cltd
jl
pop
mov
fsubrl
add
mov
call
inc
push
jl
jecxz
add
mov
pop
xor
or
add
mov
jmp
add
cmc
je
lret
sub
xor
inc
mov
test
arpl
push
push
and
mov
or
scas
inc
pop
mov
andl
pop
lret
test
add
push
stos
loop
frstor
adc
push
pop
cli
push
xchg
loopne
xlat
icebp
fwait
imul
xchg
push
sbb
insl
add
lds
in
xchg
out
adc
dec
add
insl
push
call
push
cmp
clc
cmp
inc
or
mov
sbb
insb
mov
dec
mov
sbb
sbb
mov
push
mov
or
subl
fwait
jne
and
adc
add
push
jbe
aam
jecxz
cmp
jae
add
in
out
add
lcall
imul
jae
add
jnp
icebp
scas
mov
mov
add
push
adc
xor
out
mov
add
adc
jno
ss
cmp
pop
sub
loopne
sbb
sbb
inc
add
xchg
add
stos
push
dec
adc
ljmp
sub
pop
out
fsubs
mov
sub
outsl
insl
mov
and
add
push
mov
popa
dec
mov
popf
int
jae
rclb
mov
xor
sub
pop
mov
insb
xchg
daa
sbb
mulb
imul
aad
mov
mov
sub
jo
add
in
cmpsl
cmp
test
xchg
iret
sahf
pop
push
mov
mov
mov
push
adc
sub
lods
sub
pop
int3
mov
add
add
add
cmp
and
push
sub
sbb
mov
pop
cs
adc
repz
movsl
js
push
clc
dec
and
stos
jns
pop
loopne
loop
push
arpl
int3
pop
outsb
jb
sub
push
xor
cmp
clc
insl
mov
sub
and
repz
mov
add
inc
dec
dec
mov
fcomps
shll
jo
pop
popa
adc
mov
adc
xor
dec
mov
andb
out
add
mov
lret
jne
pushf
ljmp
add
pop
mov
sti
mov
daa
add
xor
and
push
out
push
push
loopne
pop
add
loope
shl
daa
stos
aas
and
mov
push
lea
loopne
data16
hlt
mov
jae
add
sub
sbb
xchg
cmc
cwtl
pop
inc
push
cmp
or
and
das
add
push
xchg
cwtl
sub
adc
jbe
pop
add
aad
scas
pop
repz
cmp
lods
mov
nop
out
mov
adc
sar
movb
addr16
dec
dec
test
pop
xor
test
inc
fs
jg
scas
mov
movsb
push
add
test
pop
cmp
mov
mov
into
daa
ds
cmc
cmp
push
dec
in
dec
mov
inc
add
xor
out
mov
push
sub
scas
cld
and
shrl
fsubl
mov
ror
inc
fisubs
adc
add
loop
ret
loope
sub
pop
xchg
enter
pusha
arpl
xor
and
dec
outsb
sub
leave
mov
out
add
dec
stos
sbb
rolb
lods
scas
outsb
or
push
add
push
in
cmpb
add
out
dec
scas
pop
pop
in
adc
inc
push
jne
ja
stos
cmp
add
adc
add
test
ficomps
cmp
push
mov
dec
adc
sbb
jne
push
push
add
add
jae
fildll
rclb
sbb
jb
sub
mov
or
add
add
jmp
add
int3
rcrb
add
inc
dec
push
test
pop
and
xchg
notw
call
inc
jl
cmp
rcll
add
cmp
add
ret
insl
out
xor
jmp
cltd
pop
pop
fildl
orl
pandn
pop
leave
pop
fwait
add
mov
or
sub
push
lods
and
enter
add
movsl
mov
xchg
lods
or
jae
enter
clc
push
lods
leave
pop
mov
add
inc
out
add
out
daa
or
inc
add
cmp
push
add
outsb
adc
add
out
ljmp
xadd
cmp
mov
cwtl
xchg
push
imul
or
mov
lea
loope
sub
jbe
add
add
pop
in
enter
test
mov
mov
pop
sub
incb
cmp
adc
loop
out
sub
inc
add
mov
add
adc
inc
clc
aad
xchg
fnstsw
push
loopne
adc
add
push
xorb
loop
push
mov
loope
and
in
fdivl
and
test
sbb
push
mov
xor
add
push
lock
je
xor
mov
dec
dec
in
movsb
seto
pusha
mov
divb
add
cmpsl
fistl
and
mov
add
mov
or
dec
inc
lcall
pusha
xchg
inc
dec
add
or
lret
fimull
jge
xor
lret
mov
sub
cli
les
xor
pop
jge
js
rclb
mov
mov
jae
xor
push
and
add
mov
and
mov
rorl
or
fs
arpl
int
ljmp
lods
repnz
add
movsb
and
call
add
jg
imul
into
add
insb
cmp
out
sub
pop
push
popa
jno
pop
hlt
mov
pop
adc
jo
add
out
add
int
movsl
jp
push
aaa
popf
enter
add
sti
inc
loopne
xor
push
xchg
sbb
jecxz
mov
add
mov
push
add
imul
pop
push
loopne
inc
dec
nop
dec
push
int3
mov
push
lods
das
enter
dec
mov
add
pop
mov
jno
pop
add
mov
ja
add
cltd
inc
stc
imul
sub
jne
dec
lds
add
out
sbb
push
cmp
mov
inc
and
ja
add
repnz
add
xchg
hlt
and
add
sub
add
or
push
das
out
jg
adc
ret
fdivr
pop
mov
add
sub
loopne
js
arpl
push
loope
jp
insl
std
test
repz
cli
adc
jg
add
add
test
imulb
fldenv
sbb
pop
mov
mov
and
lea
cltd
cs
xchg
insl
add
mov
hlt
adc
cld
jne
repz
rcll
xchg
cmpb
arpl
cltd
fistpll
std
sahf
cs
dec
jmp
lret
jge
mov
mov
dec
bnd
jb
add
push
push
adc
andnps
mov
jne
pop
mov
mov
popf
lret
mov
loopnew
jl
add
pushf
mov
fstpt
test
jo
cld
sbb
es
add
mov
mov
dec
ljmp
ficoml
pop
jge
aaa
in
adc
dec
mov
fildl
or
or
adc
or
pop
out
fiadds
addr16
and
cmp
popa
ja
pop
mov
add
mov
push
and
repnz
mov
fucomip
pop
and
std
sbb
pop
enter
fidivl
loopne
sbb
insb
cmovle
jnp
lea
repnz
leave
mov
pusha
sbb
test
stos
jmp
in
mov
push
js
inc
std
repz
dec
stc
pop
xchg
mov
and
outsb
addr16
ds
or
mov
mov
and
add
jno
inc
mov
hlt
repz
pop
cli
jns
add
sub
pushf
sub
jbe
data16
fnstcw
add
jmp
xor
repz
push
mov
pop
fstp
shlb
fnsave
adc
push
lret
int3
push
sahf
rorb
mov
add
pusha
xor
pop
pop
cmp
out
add
cmp
movsb
add
les
add
add
mov
inc
call
ds
xor
push
adc
fsubrs
js
jl
mov
xor
dec
jg
ds
ja,pn
add
adc
pop
addb
out
xchg
jecxz
mov
inc
aaa
sarb
cmp
add
pusha
push
add
sbb
incb
in
or
add
test
ljmp
aam
call
jns
js
outsl
sub
cmc
adc
jl
add
fistpl
inc
mov
test
sbb
jns
cmp
add
xchg
inc
add
pop
and
add
into
xor
repz
and
jp
sbb
jle
add
jns
dec
shlb
mov
test
ja
add
sti
pop
gs
or
in
fmul
add
dec
cltd
daa
jle
jecxz
in
lock
ret
mov
add
int3
je
flds
jo
clc
sub
jg
das
xor
pusha
push
jnp
pop
push
shlb
xor
inc
xor
sub
scas
jl
xchg
movsb
out
adc
jo
push
jg
sub
lods
rolb
repnz
jno
mov
mov
xchg
and
add
xor
setnp
shrl
aad
sub
push
popf
pop
test
xor
in
dec
sbb
popa
pop
xor
mov
je
in
pop
xlat
add
push
push
fs
addl
xorl
jle
movlps
addr16
inc
rcr
sub
jl
xor
mov
push
pop
cmp
mov
enter
ret
lret
jle
clc
iret
add
fmuls
mov
adc
fdivrp
inc
xor
and
mov
iret
and
xchg
or
enter
lcall
cmp
das
lret
addb
push
cs
in
inc
loopne
loopew
pop
imul
test
jle
dec
out
lock
ret
add
inc
call
xchg
xchg
pop
lods
add
test
cmpsl
cwtl
sbb
and
push
and
nop
mov
test
push
mov
sbb
mov
ja
movsl
jmp
or
push
pop
xchg
mov
fstpt
jmp
movaps
hlt
arpl
jno
loopne
repnz
mov
fucomi
and
jp
mov
add
fcmovnbe
out
in
movsb
out
jmp
out
add
dec
adc
add
in
movsl
ds
sub
xchg
iret
mov
ss
je
mov
inc
add
in
imul
pushf
arpl
ss
adc
sub
mov
xor
clc
stos
pop
jns
icebp
pop
inc
and
jae
mov
push
push
rol
mov
stos
pop
out
js
outsl
dec
add
lret
cltd
inc
fildl
cmpsb
imul
xchg
xor
aad
or
icebp
cmp
cmpb
or
pop
inc
add
xchg
gs
pop
sbb
sahf
ja
dec
cli
call
pusha
enter
cmp
push
add
jo
mov
add
roll
scas
push
add
enter
aaa
add
cmp
mulb
fcomps
rcl
push
pop
cmpsb
cmp
mov
cmc
pop
add
inc
loope
mov
sub
pop
add
hlt
mov
mov
icebp
add
test
in
add
outsl
adc
add
and
ljmp
inc
pushf
add
mov
dec
jmp
cmp
mov
add
les
pop
or
cmp
add
shlb
add
roll
and
repnz
aam
jge
pop
dec
iret
sub
dec
andb
and
fistps
add
and
add
insl
fisttps
sbb
add
mov
pop
je
nop
add
out
push
xchg
add
xlat
cmp
not
fucomp
cmp
sbb
add
out
mov
es
cmc
add
out
pop
repz
out
out
and
sub
add
call
add
orl
mov
stos
loopne
sbb
ds
pop
idivb
aad
push
int
int3
add
stos
jmp
cmp
les
mov
adcb
push
sub
lods
dec
dec
inc
inc
aas
in
adcb
mov
push
xor
movsl
add
loopne
cmp
sahf
dec
xor
int3
repnz
lcall
mov
add
dec
popl
lods
scas
lea
mov
clc
orb
adc
xchg
hlt
repnz
xchg
test
jmp
idiv
ja
add
sub
out
pushf
ret
mov
mov
cmp
fnstenv
shrb
scas
and
mov
addr16
mov
jne
xchg
cmpsb
add
xchg
pusha
in
in
adc
loop
shll
cld
cmpsb
pop
mov
test
cmp
xchg
sahf
jno
dec
mov
insb
jns
and
add
sub
push
or
stos
mov
sub
mov
adc
dec
jbe
cld
dec
push
add
test
add
add
jbe
sbb
add
sti
jno
arpl
inc
pop
aad
dec
sbb
stc
sub
out
push
push
add
push
adc
mov
add
out
ret
lock
std
add
mov
fdivs
mov
fiadds
gs
sub
jmp
rcrl
pop
adc
sub
push
fcompl
lahf
sbb
iret
in
add
mov
cld
dec
daa
jp
inc
ljmp
test
jecxz
jbe
inc
push
rcrl
inc
test
pusha
jecxz
clc
loope
add
fwait
jo
add
sbb
add
sbb
add
test
aas
sub
sub
add
jl
push
xchg
sub
pop
add
dec
xor
add
pop
lahf
ds
popa
scas
add
testl
adc
fists
jmp
pop
add
dec
push
xchg
pop
rcl
mov
ss
ljmp
stos
mov
pop
jbe
or
rorb
rcrl
ja
orb
sbb
cmp
xchg
insl
imul
pusha
daa
mov
push
pop
xor
add
fldenv
mov
cmp
cmc
clc
ss
and
add
shr
daa
xor
xchg
out
rol
insb
adc
add
pusha
xor
and
sbb
add
inc
insl
pop
das
push
or
push
jg
int
cmp
sbb
add
cmpsb
jns
push
shrl
popf
cli
push
shl
mov
dec
xor
mov
filds
push
xchg
mov
les
sbb
fdiv
test
insl
in
ltr
xchg
dec
pop
cld
xor
cmc
mov
mov
pop
sbb
add
ret
cwtl
pusha
jae
jno
nop
and
ja
dec
xchg
dec
ret
fldenv
out
inc
or
lods
xchg
int3
out
jecxz
inc
push
mov
mov
lcall
shl
ret
adc
add
jg
shl
orb
aaa
or
les
outsb
js
lret
pop
sbb
mov
xor
pop
sbb
ja
jne
jl
cmp
mov
add
adc
jmp
add
jne
ret
lods
insl
add
xor
jno
dec
adc
inc
insl
out
cmp
jecxz
jmp
fimull
add
in
inc
and
rorb
lock
arpl
test
mov
test
mov
subb
pusha
adc
push
or
push
cltd
add
cmp
inc
dec
aad
mov
test
xor
lds
cmp
scas
and
xchg
insl
cwtl
rcll
or
mov
test
data16
jnp
cmp
cmpl
and
pop
inc
jbe
aas
mov
negl
rorl
mov
push
cmp
push
add
packuswb
sahf
pop
xor
push
mov
out
test
insb
or
lods
lock
add
or
xor
sbb
xchg
or
lret
mov
filds
or
je
dec
sbb
push
jnp
lret
ffree
push
imul
xlat
add
jle
sbb
or
inc
jg
call
fiaddl
adcl
rcrb
jge
or
aas
xchg
lock
out
rcll
arpl
lcall
js
lock
sub
push
sarl
mov
inc
or
or
inc
and
jnp
pusha
jo
pop
nop
adcb
fwait
nop
out
fsubs
out
mov
pcmpeqw
cmp
cld
sub
lret
mov
int3
lock
jg
hlt
stc
aaa
sbb
lods
or
outsb
nop
xlat
inc
loope
shrl
sub
ja
xor
lds
sbb
repz
aaa
mov
addr16
xchg
js
sahf
je
lock
dec
mov
dec
sub
push
jg
shlb
je
and
lods
sub
adc
orl
inc
xor
imull
adc
insb
dec
ds
aas
xor
out
jmp
mov
sub
sbb
fistpll
or
and
enter
add
jbe
ss
push
mov
jnp
ret
push
cwtl
or
idivl
icebp
sub
in
jne
jno
adc
xchg
sbb
xchg
push
push
loopne
mov
and
nop
cs
inc
mov
add
sbb
inc
xchg
out
jge
in
popa
addr16
cmp
sbb
mov
in
mov
add
mov
xchg
sar
cmp
mov
cmp
outsb
fcomi
insb
mov
shrb
inc
cs
cli
insb
arpl
add
cmp
jmp
add
adc
mov
pop
xor
pop
pop
push
insb
pop
adc
add
jno,pn
jne
xlat
push
int
add
nop
mov
add
cltd
movsl
dec
mov
inc
add
test
mov
pop
aam
je
inc
xchg
cmovno
pop
call
scas
mov
lock
cmp
in
lods
push
mov
sbb
or
jg
dec
and
hlt
cmp
jecxz
pop
dec
fbstp
nop
test
enter
inc
pop
xor
lret
fs
into
scas
ja
xchg
cmp
xor
mov
mov
iret
push
push
add
add
mov
adc
pusha
cmp
cmpsl
cmp
lret
inc
add
pop
mov
repz
mov
mov
rclb
jne
sbb
jge
sbb
cmp
test
repnz
add
jge
pop
and
add
dec
faddl
inc
das
pop
aad
mov
in
xchg
mov
imul
xchg
lret
xor
pushf
fwait
mov
pop
sub
gs
adc
fnstenv
orl
jp
add
and
loopne
pop
in
fwait
push
or
add
cmpsb
mov
je
mov
push
add
inc
fisubl
shlb
adc
sar
std
or
mov
scas
xorb
mov
inc
pop
mov
sbb
adc
push
xchg
pusha
call
add
vmread
pop
add
cmp
lods
cld
stos
pop
push
movsb
push
add
movsl
push
fdivs
add
mov
popa
jl
add
adc
mov
or
shrb
cmpsl
stc
in
push
sub
add
inc
imull
roll
es
fidivs
jbe,pn
out
aaa
dec
jecxz
insb
add
push
mov
add
pop
cmp
lock
icebp
add
fstps
mov
push
fldl
sub
pop
ret
cmc
pusha
jmp
adc
loopne
mov
pop
stos
sbb
mov
xor
push
inc
or
mov
add
test
dec
cmp
push
filds
repz
push
out
and
andb
mov
add
arpl
mov
fimull
bound
jnp
test
add
icebp
sbb
addl
sub
mov
ret
cmp
or
xor
pop
sbb
das
int3
pusha
sub
sbb
je
daa
add
int
movhps
mov
mov
or
mov
jbe
loop
call
push
ret
mov
mov
fs
bound
add
ss
dec
dec
hlt
add
mov
adc
into
ret
mov
jp
and
add
sub
insb
setge
mov
outsl
xchg
cs
sbb
dec
inc
jae
cltd
push
cmpsb
fcmovbe
or
daa
jmp
xlat
jecxz
js
mov
mov
into
xchg
add
pop
loopne
mov
add
ja
pop
ljmp
cld
add
les
or
outsl
into
insl
xchg
add
sysret
and
aad
in
add
xchg
pop
cli
pop
sub
mov
mov
out
push
fucom
xor
int
pop
into
pop
push
push
inc
sarb
add
cmpsb
mov
cmp
imul
xor
add
inc
out
lds
pop
arpl
imul
pop
mov
stos
adc
xorb
pop
add
mov
or
shlb
add
sub
add
popl
mov
fmull
add
xor
push
ds
je
mov
iret
dec
dec
scas
and
add
jmp
inc
add
movsl
xlat
xor
mov
aam
inc
mov
repz
dec
subb
push
data16
push
add
adc
sarl
and
or
add
mov
shl
add
add
aad
dec
incl
cmp
insb
add
mov
add
or
outsl
shll
add
jmp
fdivs
rclb
adc
jo
jno
mov
or
mov
addr16
add
fimull
sbb
sub
mov
enter
cmpb
cmp
mov
sbb
sbb
add
fadds
sbb
adc
addr16
xchg
add
negl
outsb
cmp
or
pusha
repnz
sub
mov
sbb
sub
lds
out
call
les
pop
arpl
movb
dec
jbe
cmpl
iret
fiadds
or
punpckhwd
lods
stc
loopne
mov
jbe
out
push
xchg
add
out
in
pop
cmpsl
in
add
or
mulb
push
push
pusha
cmp
xchg
movb
sub
xor
cmpl
in
add
fisubrs
sub
xchg
loopne
jmp
add
test
pushf
mov
aad
add
cltd
sbbb
shl
mov
ljmp
adcl
add
shl
clc
mov
fcoml
mov
scas
add
cs
dec
jne
stc
xchg
mov
js
lret
cltd
pop
mov
lods
push
add
add
pop
sub
inc
pop
roll
int3
xchg
xchg
xchg
jle
scas
loopne
sbb
inc
insb
arpl
outsl
js
inc
cmp
sbb
jbe
jp
add
ret
inc
imul
scas
add
pop
repnz
xor
cmpsb
add
adc
pusha
cmp
pop
sbb
or
cli
jbe
sbb
jge
pop
pop
out
in
lock
loopne
jg
sub
cltd
xor
cs
mov
lret
cmpsl
add
mov
stc
lcall
pop
xchg
lret
dec
push
sbb
xor
insb
lahf
inc
xchg
mov
mov
scas
adc
arpl
mov
and
movsl
jge
je
popf
jl
and
xchg
subb
pop
mov
add
lret
icebp
mov
and
addb
xor
inc
mov
fcompl
add
xor
stos
movsb
cmpsb
daa
sbb
cltd
add
loopne
adc
inc
mov
les
fucomip
cmp
jecxz
in
andb
cltd
movsl
mov
loop
sub
jnp
sar
icebp
jbe
out
into
xchg
pusha
or
xchg
add
mov
push
pop
adc
cltd
inc
mov
mov
aam
movsb
int
adc
pop
pop
dec
std
mov
in
add
xchg
jge
cmp
inc
inc
add
jae
mov
outsb
dec
fstpl
inc
add
lss
jo
rcl
adc
sbb
aad
fstpt
lret
imul
das
scas
add
scas
xchg
movsb
dec
sbb
and
int
je
popf
cwtl
mov
and
push
mov
add
cmc
or
add
lds
jg
add
test
or
int3
sbb
incb
add
fdivs
cmp
xchg
and
pusha
mov
push
mov
mov
add
mov
and
add
cmp
std
sahf
test
dec
repz
sbb
rclb
in
or
xchg
pusha
cli
push
cs
add
pop
pop
jecxz
or
mov
add
in
xchg
and
xlat
inc
or
add
scas
int3
insb
jae
test
outsb
sbb
or
add
ficompl
in
push
adc
sub
mov
sub
dec
out
repz
add
mov
and
inc
or
adc
adc
mov
test
xorl
xchg
or
jo
jecxz
cmp
sbbl
imul
sub
cwtl
add
push
dec
fldenv
pop
dec
roll
cmpb
mov
xlat
fcomps
mov
test
jae
mov
and
sbb
mov
daa
push
cmp
jmp
jl
cmp
jno
xor
jg
ja
js
ds
cs
jmp
mov
add
ret
pop
mov
filds
mov
lock
push
loopne
inc
outsl
push
xchg
or
mov
mov
mov
dec
lock
cwtl
cli
dec
sub
rolb
xor
int
mov
mov
push
hlt
lea
dec
or
loope
pop
dec
icebp
sbb
mov
leave
xor
adc
or
sbb
sbb
test
addl
mov
daa
xchg
movsb
imul
rorb
mov
dec
out
xor
add
mov
ds
xor
add
bnd
out
mov
pushw
or
inc
dec
sbb
jl
jb
and
cmpsl
neg
add
and
adc
push
je
push
repz
loopne
notb
add
sahf
mov
pusha
std
loopne
in
or
fs
cmp
mov
inc
jns
add
push
divps
push
add
mov
mov
xchg
sub
scas
arpl
sbb
aam
mov
in
push
push
mov
and
add
lds
jge
adc
adc
sub
sbb
aad
xor
mov
cmp
jb
adc
fcmovb
into
jbe
int3
sbb
pushf
add
lahf
lods
mov
loopne
add
clc
pop
jp
addl
cmpsl
add
cmpsb
fdivrs
push
es
sahf
cmp
push
fistl
xchg
add
pop
outsb
out
dec
rolb
testl
mov
add
cmc
addr16
or
fnstenv
call
sbb
xchg
iret
inc
andb
add
das
call
add
lods
pop
out
push
mov
mov
sahf
lret
out
sub
or
xorl
and
aaa
or
lea
mov
add
sub
aas
jp
mov
xor
xor
mov
lock
add
aad
mov
add
dec
sahf
frstor
jl
mov
adc
and
jmp
call
in
fwait
sbbl
add
dec
mov
add
mov
add
xchg
mov
aad
addl
add
mov
pusha
scas
sub
jo
add
adc
mov
dec
and
stos
jbe
add
xor
js
mov
es
and
insl
add
gs
hlt
addr16
add
xchg
adcl
addb
in
mov
inc
jnp
add
and
add
mov
push
fcmove
push
repnz
jmp
ss
mov
xor
stos
hlt
jnp
cmp
inc
mov
add
adc
add
and
cmp
cmp
lock
pop
xchg
inc
nop
add
addr16
adc
push
dec
add
popf
cmpsb
fsubrs
sub
rep
inc
cmp
sub
lret
into
pop
add
adc
test
dec
pop
insb
ja
sbb
and
jb
adc
arpl
addr16
add
mov
inc
push
in
mov
xchg
movsl
lcall
sub
mov
mov
pop
testl
cwtl
dec
add
push
sub
loopne
jo
add
lock
negb
dec
test
icebp
xchg
mov
int3
mov
fisttpll
orb
xor
subl
xor
shrl
rclb
hlt
add
jne
mov
add
test
xchg
push
cmpsl
pop
add
sbbb
push
shlb
add
or
testl
mov
jg
add
pop
pop
out
rorb
cmp
popl
mov
pop
xchg
add
lds
insb
ret
sbb
and
loope
scas
add
push
and
jmp
mov
add
add
jecxz
add
xchg
and
mov
in
out
insl
popa
adc
inc
add
xor
add
inc
mul
sbb
pop
jle
cltd
stos
test
jne
hlt
cwtl
inc
jae
out
call
fcom
arpl
insl
and
pop
sbb
aas
lret
mov
fadds
adc
aas
lret
ds
pusha
cld
movsb
mov
fucom
mov
mov
pushf
sub
cmp
jl
int3
dec
cwtl
pusha
and
nop
cmp
xchg
jne
add
arpl
cs
fdiv
pop
int
or
xchg
clc
ret
pop
sbb
or
xor
mov
ror
or
xchg
mov
es
mov
icebp
push
mov
rolb
mov
pop
cld
nop
xchg
mov
test
roll
ficoms
xor
or
ds
clc
mov
lahf
add
scas
fnstcw
add
call
ds
and
fscale
mov
add
outsl
and
sbb
and
icebp
add
add
dec
adc
testl
stos
jecxz
lods
add
lock
mov
fnstenv
add
xchg
les
sbb
push
and
add
in
and
add
sub
addr16
aaa
add
jbe
push
mov
push
repnz
cmp
out
les
lods
imul
repnz
sbb
mov
add
das
xchg
fsub
jp
inc
mov
mov
inc
jge
pop
adc
adc
mov
xor
leave
repnz
xchg
fiaddl
or
xlat
dec
mov
loope
jl
inc
lock
add
push
mov
pop
mov
out
adc
pop
adc
push
daa
or
inc
cld
adc
ljmp
fcmovne
in
dec
add
out
popa
dec
pop
add
fmull
fcomps
lcall
jno
sti
add
jmp
scas
mov
xchg
test
movb
and
std
inc
ret
mov
mov
lcall
orb
fldl
add
mov
add
mov
xor
cmp
andb
cmp
dec
mov
pusha
fdivl
sbb
stos
mov
mov
ret
push
push
test
pop
inc
dec
xchg
mov
push
or
add
xor
push
push
dec
jg
fldenv
out
jbe
add
add
sbb
cmpsb
and
adc
mov
add
in
cwtl
filds
add
push
leave
mov
add
jbe
scas
jo
scas
xorb
jg
sbb
cmp
js
repnz
jno
dec
lahf
jns
add
imulb
cmp
xor
insb
ficoml
xor
xchg
add
adc
lcall
dec
add
add
inc
mov
pop
pop
adc
mov
test
xor
pop
shr
add
rorl
outsb
add
mov
lods
inc
cld
xlat
add
xchg
loopne
mov
xchg
and
sarb
mov
sub
leave
test
mov
add
int
cmpsb
add
mov
popf
mov
lock
popa
cmp
push
or
andb
xchg
movsb
mov
mov
cli
sahf
adc
leave
enter
xchg
push
fwait
xor
sub
or
shll
sub
lods
inc
loop
xor
jmp
dec
sbb
mov
dec
outsb
xor
loopne
das
add
pop
pop
add
dec
push
xchg
pop
sub
fwait
mov
popa
mov
xlat
sbb
jg
or
int
loopne
xchg
push
es
sbb
lret
js
mov
mulb
ror
movsb
jno
mov
and
in
and
add
mov
cmp
sbb
and
mov
arpl
loope
mov
lods
stc
subb
sub
fdivl
dec
sbb
xor
dec
sbb
lret
call
xorb
out
cmp
add
jg
mov
leave
ret
mov
rolb
push
in
ret
shlb
add
and
sub
add
push
ss
push
and
in
mov
mov
sub
lahf
jae
adc
add
cmp
dec
popf
cmpsb
out
leave
fwait
xchg
push
jge
ficompl
inc
push
faddl
sbbb
jp
jno
shl
push
test
sub
jbe
mov
notb
add
add
add
xlat
call
mov
lcall
mov
je
pusha
jno
lret
shrb
xchg
cmp
xor
stc
loope
loopne
fadds
cli
cmc
inc
jge
jne
stos
add
stc
or
aad
ret
lock
and
inc
jmp
out
fwait
add
pop
test
push
aad
rolb
dec
fisttps
out
sbb
shr
ja
add
sahf
adc
fstl
mulps
psubusw
sbbb
xchg
add
mov
cs
add
imul
mull
jae
aas
enter
dec
push
push
dec
sbb
in
ror
pop
and
into
add
icebp
pop
pusha
add
call
leave
jo
data16
jno
lret
cmp
add
shlb
inc
btr
adc
sub
add
mov
pop
pushl
inc
cmp
stos
mov
clc
mov
in
jno
jge
push
add
pop
fisttps
add
adc
add
sub
icebp
xor
ficomps
aaa
fcoml
jmp
roll
sbb
hlt
test
test
roll
in
pop
arpl
jmp
movsb
push
xor
sub
pop
sbb
fildll
enter
mov
jno
or
and
leave
lahf
movsb
add
lret
gs
add
push
push
jl
push
cld
outsl
add
adc
je
bound
or
ljmp
jns
or
js
dec
lock
lods
mov
mov
jb
push
enter
sbb
jbe
pop
sub
pop
cmp
orb
test
jg
add
add
xor
push
in
xchg
push
into
jae
xlat
cmpl
in
jle
add
mov
push
arpl
lods
subb
push
jp
push
push
aas
and
clc
xchg
inc
xor
mov
fcoml
pop
cltd
lock
cmc
pop
jnp
pop
or
push
mov
mov
cmp
jae
mov
add
call
in
and
hlt
stc
lret
cs
cmpl
cmp
test
jp
jl
clc
add
or
sbbb
insb
cmp
xchg
adc
out
xor
push
dec
push
mov
inc
dec
cltd
jnp
push
xchg
and
jae
sub
or
sti
add
push
pusha
cs
add
in
arpl
xchg
push
insl
dec
cmpsb
push
cmp
dec
mov
xlat
add
inc
pop
mov
cmp
adcb
mov
add
clc
add
mov
jp
add
push
and
dec
sbb
jno
out
call
imul
lods
xchg
cmp
sub
mov
mov
sbb
and
inc
leave
add
pop
mov
aaa
adcb
add
pop
mov
add
cs
inc
adc
out
add
jne
ds
dec
pop
cmp
imul
repnz
xchg
outsb
sub
cli
sub
outsl
add
lods
iret
inc
add
sbb
add
add
out
sub
add
jmp
xor
repnz
lret
push
sub
into
mov
les
pusha
mov
xor
sbbb
mov
shll
or
and
add
sbb
mov
rorb
mov
cmpb
cs
idivb
sub
ret
mov
sbb
lret
scas
xor
gs
cmp
and
xchg
in
mov
addb
jnp
aas
xchg
xor
sub
xor
fldt
lahf
xchg
dec
xor
inc
add
sub
push
adc
and
mov
in
sub
mov
movsl
pushf
pop
cmp
add
jnp
ljmp
insl
les
imul
add
gs
add
mov
add
dec
or
cld
xor
lret
add
sbbl
inc
add
cmp
mov
pop
push
into
and
lock
fildl
ret
test
enter
adc
add
sbb
add
xor
sbb
cmp
pop
or
aad
mov
push
ljmp
add
or
jnp
sbb
add
js
pop
add
sbb
add
push
inc
out
mov
mov
mov
jno
repnz
mov
push
jbe
mov
imul
mov
mov
test
insb
and
inc
xor
sbb
out
mov
xchg
adcb
xchg
lock
fdecstp
sub
or
in
xchg
sti
and
add
cmp
push
mov
cmp
xlat
mov
cmp
test
jg
sahf
jmp
mov
js
cld
lret
dec
push
sub
sbb
testb
dec
mov
add
nop
xlat
jge
xor
shl
pop
or
mov
xor
xchg
jmp
jae
dec
pop
rcll
jmp
mov
mov
cmpb
in
xor
dec
and
int3
dec
hlt
out
pop
dec
pop
inc
push
cmp
dec
out
mov
mov
ds
loop
add
add
sbb
push
add
cmp
jne
test
in
or
cwtl
or
cwtl
add
rorl
jne
icebp
mov
add
enter
sub
sub
mov
xchg
add
mov
cld
xchg
add
into
rolb
mov
inc
lds
es
jp
xlat
add
out
pop
stc
pop
mov
or
pop
pop
lret
push
xchg
jmp
movb
jecxz
pop
les
sbb
movl
lods
xchg
mov
fldt
adc
cwtl
orb
lea
xor
fwait
dec
push
add
xor
cld
mulb
xchg
pop
push
cmc
fldt
add
je
xchg
movsl
cmp
and
in
int3
sbb
mov
xor
add
push
fcompl
les
movsl
scas
int3
dec
add
adc
xor
fs
adc
sub
add
or
sbb
pop
add
pop
out
pop
test
loopne
xchg
push
incb
shll
inc
adc
mov
pop
call
orl
adc
mov
lods
add
inc
lds
loopne
add
sbbb
cmp
outsl
ficomps
stos
pop
pop
mov
xchg
insb
jo
cmpsl
stos
cld
add
orb
add
jge
orl
rclb
push
lret
pop
loopne
scas
loop
add
mov
or
shlb
add
loope
and
xchg
and
xchg
push
mov
xor
sub
add
push
loop
add
sbb
cmp
pop
jns
push
mov
mov
or
xchg
fdivs
jp
push
aam
xchg
and
into
mov
add
lret
and
rcrb
call
push
pop
or
enter
sbbl
sbb
dec
hlt
pop
daa
cmp
push
fsubrs
jno
scas
hlt
fists
inc
xor
pop
std
mov
add
leave
cmp
aaa
lods
outsb
fdivr
mov
add
cs
mov
pop
repz
lock
js
xor
adc
push
cmpl
jnp
scas
mov
ficoml
enter
jb
in
mov
sti
dec
cmpsl
pop
add
mov
dec
pop
pop
inc
inc
xchg
inc
cmp
movsl
ja
xchg
mov
fisubs
xchg
cmp
subl
fucomip
cmpsb
mov
jge
or
add
lcall
mov
popf
outsb
incl
adc
dec
rclb
shl
push
lods
cmp
push
insl
into
push
sbb
push
lahf
leave
cmpsl
lea
inc
test
mov
sub
inc
jle
or
test
add
add
shrl
shlb
shlb
hlt
add
cli
push
fisubl
mov
test
sub
add
in
inc
fnstenv
jb
jo
push
fidivrl
addr16
stos
or
adc
push
rcr
std
loopne
aas
imul
dec
fmul
inc
adc
and
ja
xor
pop
jl
xchg
arpl
xor
pop
and
aam
xchg
mov
add
into
dec
les
xchg
xor
xchg
cmp
and
out
fs
loop
add
cmp
aaa
cmp
dec
mov
xor
lds
inc
les
push
jae
dec
test
mov
pushf
xor
lahf
or
push
add
je
mov
add
push
insb
out
cmpsb
lahf
jge
add
aaa
add
fwait
cmp
cmpsl
lfs
negl
jl
add
mov
fisttps
push
lods
mov
addb
adc
inc
enter
add
lahf
test
cmp
push
xchg
add
cmpsl
je
dec
jb
add
jnp
xchg
vmread
pushf
mov
rorb
pop
dec
add
out
sbb
loopne
cwtl
add
add
sub
inc
das
or
clc
push
xlat
rcrl
cmpsb
clc
hlt
sbb
pop
repnz
mov
sub
sbb
xchg
add
add
bound
outsb
add
push
imull
nop
pushf
add
dec
or
and
mov
cmpb
lret
cmp
fs
dec
int
jae
into
lods
jns
mov
xor
pop
out
in
aas
sub
call
cwtl
inc
fsubrs
aaa
push
cmp
adc
repz
pop
mov
loope
xchg
imul
dec
popa
arpl
xor
cs
or
es
in
adcb
and
xchg
add
clc
mov
incb
pop
roll
scas
insl
add
inc
pop
aas
push
addb
dec
in
mov
add
mov
add
insl
cmpb
in
cmp
in
cmpb
pusha
add
sti
xor
sbb
loopne
pop
cwtl
pop
cmp
stos
push
inc
pop
js
into
mov
mov
mov
sub
nop
lds
mov
adcb
add
or
lods
jno
popa
hlt
data16
or
mov
xchg
lock
lock
add
push
scas
ss
and
push
xchg
enter
adc
mov
jns
cmpsl
jp
pusha
jne
orl
or
mov
mov
lret
inc
inc
pop
sti
rclb
add
mov
mov
es
rolb
lret
sbb
mov
repnz
fisubl
inc
loope
jecxz
push
add
into
and
sbb
adc
cwtl
fstp
add
pop
int
lds
xor
jae
inc
fistl
lret
incl
movsl
shlb
pop
loop
add
xchg
scas
ret
mov
pop
repz
adc
or
xor
inc
ret
jge
ret
and
xor
sbb
add
adc
or
in
cli
add
mov
lahf
xchg
les
clc
dec
or
xchg
roll
and
and
pop
in
pop
push
dec
rclb
sbbb
aas
mov
lods
loopne
inc
fwait
add
out
les
fidivrs
shll
nop
pop
mov
pop
pop
stos
xchg
js
xor
repz
xchg
xchg
sub
call
je
cmc
xorl
jl
jecxz
mov
addr16
jbe
loop
sbb
push
insl
leave
icebp
movb
mov
and
xor
inc
sub
bound
negb
cwtl
sarb
cwtl
xor
stc
mov
xorb
mov
mov
js
xor
fwait
hlt
shlb
sub
nop
stos
push
dec
repnz
scas
add
mov
loope
push
xor
and
rcrl
cltd
add
jmp
hlt
or
in
mov
fucomip
mov
ja
sti
divb
push
dec
xor
xchg
pop
or
jp
push
add
push
cmc
xor
daa
inc
xor
insb
sub
ss
xchg
xor
mov
push
sbb
mov
in
sub
add
fs
out
push
add
daa
push
cltd
setne
aad
repz
ror
xchg
push
pop
sub
mov
cwtl
addr16
lds
fucom
add
movsb
mov
mov
imull
pop
loope
rclb
test
push
cld
pushf
shl
pop
add
push
adc
dec
test
sub
add
mov
add
xor
push
repnz
xor
ss
popf
pop
add
loopne
sub
lret
lret
inc
push
ret
cmp
mov
sub
xchg
add
sub
cltd
aas
das
add
notl
unpckhps
arpl
xchg
jle
xchg
xlat
pusha
es
mov
arpl
cs
adcl
xor
xchg
xor
mov
int
lahf
orl
pop
or
inc
daa
mov
add
add
lods
pop
push
out
push
test
cmp
mov
das
incl
mov
sbb
and
inc
push
orb
mov
add
loopne
sbb
inc
imull
in
in
sar
mov
ss
daa
loopne
and
insl
mov
cld
aaa
mov
xchg
pop
or
enter
push
or
imul
pushf
dec
aad
adc
pop
stos
and
xlat
pop
add
popf
cmpsb
daa
sti
cltd
xor
push
add
movsl
mov
pusha
js
add
leave
xchg
sbb
mov
add
adcb
pop
fdivrs
push
jae
das
add
scas
lret
stos
fmull
jmp
pop
dec
xchg
adc
adc
ljmp
pusha
insb
bound
test
add
sub
jecxz
xor
sbb
jae
mov
fisttpl
hlt
outsb
and
stc
mov
jge
or
test
xorb
pop
fldt
adc
and
icebp
cmp
pop
scas
or
mov
cltd
pop
or
push
test
lcall
aas
cmp
cmpsl
add
out
push
mov
aad
jmp
xlat
push
xor
insb
and
push
add
dec
pop
cmp
dec
inc
add
test
nop
cmp
ljmp
or
push
movsb
gs
xchg
clc
mov
push
push
or
sbb
sbb
stos
in
dec
ret
mov
ds
in
mov
cmp
fmul
mov
lds
and
pop
sahf
add
mov
or
js
cld
pop
adc
mov
orb
in
xchg
xchg
sbb
fwait
mov
je
push
pop
mov
andl
add
mov
sub
add
pop
sbb
inc
jl
xchg
pop
stos
jae
arpl
aaa
lea
call
ja
stc
add
pop
push
push
xor
push
mov
pop
int
cmp
or
jle
add
out
sbb
daa
dec
or
pusha
mov
fistpll
mov
adc
xor
cmp
aad
arpl
repz
adc
add
pop
sahf
fmuls
pop
xchg
gs
shlb
cmp
movb
dec
jg
push
jg
movsl
pop
jne
xor
jno
mov
add
movsl
push
sbb
inc
call
leave
imul
mov
mov
fidivrs
and
pop
dec
fs
fwait
dec
imul
xchg
pop
insl
das
mov
loopne
jb
outsl
cmp
sub
rclb
add
xchg
mov
inc
pop
inc
mov
out
cmp
cmp
ud1
sub
jp
adc
out
sub
cwtl
pusha
mov
add
in
sbb
lea
lcall
cmp
pusha
adc
mov
xchg
lods
push
pop
add
pusha
jg
dec
push
mov
or
or
ljmp
jae
jne
xchg
xor
lret
mov
jge
sub
repz
call
sarl
sar
or
add
popa
mov
pop
sbb
xchg
insl
jmp
push
xchg
cli
leave
xor
jmp
sbb
shrl
es
sbb
sbb
sub
and
xchg
mov
jb
imul
in
add
incb
push
fs
xor
lcall
jl
aaa
inc
mov
or
cmp
movsl
andb
dec
cmpsb
push
int
dec
sub
jns
add
and
xchg
out
pop
or
vdivps
aaa
add
test
dec
pop
xor
or
xchg
movb
movsl
sbbb
xor
lret
jbe
adc
int3
andl
mov
and
push
pop
scas
sbb
pop
lret
mov
in
fdivrl
fcoms
jle
stc
add
or
pop
push
clc
pop
adc
adc
das
sbb
arpl
and
add
cmp
xor
dec
xor
add
das
lea
inc
loope
pop
movsb
stos
fisttps
pop
call
jg
jle
add
mov
sbb
xor
mov
pop
out
js
pop
mov
pop
xor
inc
imul
mov
out
shl
xor
test
pusha
jge
sbb
xlat
popa
add
stos
add
in
mov
push
dec
mov
lea
lret
divb
hlt
sbb
enter
inc
pushf
ds
cmpsb
rol
add
xchg
cwtl
stc
popa
mov
adcl
in
into
pusha
dec
mov
cmp
movsl
add
fstps
test
fwait
xchg
rcrl
sbb
jge
push
out
push
outsl
cli
or
sbb
int3
pushf
or
pop
lcall
xchg
push
shr
lret
push
adc
scas
mov
mov
adc
add
fstl
jb
add
adc
sub
mov
add
pop
popf
lcall
mov
mov
daa
pop
mov
fmull
inc
shlb
mov
fisttpl
push
add
cmp
cld
inc
pop
fimull
mov
movb
ss
lcall
xlat
xor
jge
xchg
mov
push
popf
pop
push
adc
sub
jno
jecxz
arpl
add
rol
dec
test
jge
pop
add
pop
clc
cmpsl
inc
data16
add
jo
mov
sti
js
sar
xor
out
add
xchg
xor
cld
xchg
xor
xorl
push
jae
test
sub
add
testb
icebp
mov
sub
mov
subb
mov
xor
les
add
inc
add
mov
or
xchg
in
or
test
and
iret
add
adc
or
cmp
xor
cmp
cmp
cmpsb
clc
sub
rcrb
xchg
push
pop
prefetchnta
shll
lahf
sbb
sbb
cmp
or
sub
jecxz
dec
jl
push
mov
mov
mov
pop
popf
pop
subb
mov
loope
mov
cmc
ret
imul
addl
pop
and
mov
push
jae
out
add
nop
jb
loope
and
cmp
push
stc
ror
dec
roll
inc
add
test
dec
mov
lahf
mov
cmp
js,pt
subb
and
addb
sub
and
xchg
add
xchg
mov
rolb
sbb
mov
paddq
lods
fmuls
push
mov
jnp
sti
test
mov
xor
sbb
push
sub
mov
jnp
addb
add
loope
mov
imul
test
iret
mov
sub
lea
sub
das
mov
insb
inc
xor
adc
lcall
and
push
cmp
cmpsl
test
xchg
std
adc
nop
mov
pop
into
lret
ret
or
movsl
aas
push
inc
jge
pop
jno
or
cmp
inc
push
xchg
inc
jl
aad
inc
adc
jl
pop
add
adc
js
arpl
into
xor
outsb
xchg
cmpsb
addl
jns
pusha
shlb
push
sbb
dec
xor
sub
push
mov
cwtl
mov
cltd
and
mov
inc
mov
add
mov
mov
fld
call
andb
pop
roll
data16
mov
adc
and
int3
stos
ret
add
and
pusha
mov
and
fstl
data16
mov
adcl
inc
push
cmp
cli
mov
jo
dec
add
jo
lods
push
add
test
fxch
jg
bound
xorb
addb
add
ss
inc
sub
jle
lahf
bound
outsb
mov
pop
in
or
xchg
push
rcl
mov
fisttpl
ds
and
pop
pop
adc
mov
out
jb
bound
pop
mov
xor
mov
fstl
cmp
cwtl
inc
int
test
mov
push
fcomps
lods
cmpl
mov
cmp
clc
inc
inc
sub
mov
int
xchg
sbb
xor
jg
popa
fadds
sub
adc
push
xor
loopne
mov
mov
ret
jmp
adc
aas
xor
xchg
mov
add
popa
jecxz
loope
adc
adc
or
add
es
add
scas
js
sbb
cmc
in
pusha
cld
xchg
mov
add
push
daa
dec
pop
jmp
jo
add
clc
add
cmp
in
jp
cmp
stos
pushf
mov
insl
cmpsb
arpl
clc
je
cmp
pop
sbb
test
adc
adc
stc
shl
int
shrl
enter
test
and
adc
loopne
adc
js
sahf
adc
add
xchg
call
inc
adc
dec
in
xchg
subb
addl
loope
xor
test
lock
push
sub
mov
incb
push
dec
test
mov
xchg
pop
and
add
jp
mov
jne
popa
and
pop
enter
xchg
cmp
add
mov
andb
lret
push
shll
ret
jecxz
add
lret
mov
mov
add
add
pop
inc
loope
repnz
xor
add
data16
in
mov
cwtl
jp
mov
bswap
xchg
nop
mov
inc
cwtl
push
outsb
outsl
xor
in
rcl
push
inc
add
je
push
mov
jecxz
add
inc
arpl
clc
add
incl
call
jo
cmpsb
fisubrs
inc
pop
pop
mov
mov
inc
mov
stos
cmp
sub
or
and
test
int3
adc
xor
cmp
stos
mov
adc
stc
mov
jnp
jns
pop
out
xchg
nop
or
xor
mov
orb
es
xor
jmp
push
inc
rcrb
cmc
int3
push
add
inc
add
fcomps
mov
pop
mov
pop
rolb
pop
jmp
push
call
movsl
pop
addr16
lahf
mov
addl
or
notb
lea
int
xchg
xchg
popa
mov
sbb
add
xadd
insl
hlt
sub
in
fadds
es
xchg
add
xchg
dec
out
aas
dec
rol
pop
cmp
out
xchg
insb
incl
testl
cmc
scas
mov
mov
add
adc
aaa
pop
pop
nop
jge
insl
add
or
cmc
push
ret
add
push
aad
pop
cwtl
cmpsl
add
ficoms
lcall
sbb
mov
dec
add
adc
stos
cmc
pusha
jno
psubq
or
xor
inc
hlt
fadds
nop
jnp
cs
adc
pop
cmp
and
dec
add
nop
test
in
cmp
push
fcoml
lds
xchg
aad
and
mov
or
les
adc
push
stos
inc
js
push
leave
jbe
hlt
into
aad
cmpb
data16
loop
and
sbb
sbb
arpl
add
test
xor
lods
aas
mov
ja
hlt
push
sub
insb
nop
sbb
sbb
loopne
cmp
clc
scas
push
cmpsl
notl
test
incb
mov
pushl
push
cli
xor
hlt
or
movsb
add
cmpsb
in
add
push
inc
cwtl
sub
xor
mov
xchg
add
and
xchg
addb
ret
loopne
cmp
xchg
mov
out
mov
inc
push
notl
inc
cwtl
mov
adc
cmp
aad
push
imull
cltd
notl
xor
lret
xchg
xor
adcb
add
mov
or
xor
or
add
push
arpl
in
add
fsubrl
push
add
lds
mov
sub
stos
outsb
pop
add
xchg
js
sbb
out
sbb
sbb
je
addb
pop
mov
adc
dec
sub
into
stos
cld
stos
add
out
js
fcomps
jne
shl
jl
ror
add
xor
adc
mov
aaa
push
pop
mov
add
dec
std
xchg
inc
add
pusha
cld
repz
lahf
ljmp
cmc
mov
pop
nop
cltd
lret
inc
ret
insl
icebp
sti
add
das
scas
sbb
jl
add
xchg
cmp
jle
add
dec
fisubl
add
mov
add
loopne
adc
cmpsl
cmpl
test
decb
fstl
addl
sarb
loopne
xchg
xor
pop
call
xchg
pushf
add
popa
cmpsb
adc
mov
fbld
aam
jecxz
jns
mov
jp
add
test
icebp
add
fmulp
mov
push
notb
push
mov
outsl
and
xor
int
adc
test
repnz
inc
and
rdtsc
aad
adc
and
xchg
jmp
and
inc
xor
and
rcrl
mov
xor
mov
cmp
mov
or
test
rol
idivl
lods
add
popa
dec
int3
ja
add
xchg
push
push
out
add
adc
aaa
push
mov
sbbb
int3
or
aaa
sbb
mov
mov
mov
clc
sarb
popf
cwtl
test
add
inc
sbb
add
nop
push
xor
add
lods
mov
push
mov
push
xchg
dec
dec
push
movsb
or
jg
mov
test
add
push
ds
xor
int3
add
inc
mov
mov
repz
pop
pop
les
adc
out
rclb
insl
jl
adc
and
addb
mov
mov
sub
jae
dec
mov
mov
and
cmp
call
and
or
loop
test
add
adc
push
push
push
push
push
push
sbb
mov
loope
sub
cwtl
jno
cmpb
push
add
push
adc
jno
loopne
cli
out
ret
testb
jnp
sbb
inc
jbe
add
dec
jle
xor
and
dec
add
jecxz
add
inc
adc
int3
stos
popf
hlt
shrb
incl
data16
sub
or
mov
xchg
lret
out
pop
sbb
inc
sbb
ds
push
jo
pop
adc
je
ja
popa
xor
and
add
pop
nop
imul
push
lock
cli
hlt
pminsw
add
mov
dec
add
movsb
lahf
jns
sub
rolb
mov
add
pusha
push
push
add
mov
and
push
enter
nop
lock
pop
add
sbb
js
insl
dec
jge
outsl
mov
pop
data16
jae
sub
or
loop
xchg
mov
lret
add
lcall
adc
and
sbb
jo
adc
dec
xchg
pop
movl
in
mov
mov
aas
dec
and
jb
pop
mov
inc
add
test
xchg
adc
lock
stc
jp
mov
nop
shlb
adc
dec
push
jb
xlat
sub
cmp
inc
push
sub
push
and
test
pop
cmpsb
leave
ds
cmpsl
inc
rorb
jnp
add
mov
cmp
jb
xor
mulb
out
movb
ja
sub
cmp
frstor
add
enter
mov
add
sahf
imul
ds
std
add
fistps
int3
ja
add
das
pop
or
js
add
stos
data16
xchg
xor
fnsave
push
imul
add
jle
add
or
ret
add
sbb
jo
mov
and
jmp
lea
pop
pushf
addl
jns
add
sbb
sbbl
mov
and
fldl
or
scas
jo
fldt
cld
cmp
fmulp
fwait
cwtl
add
lock
xor
rcll
inc
sahf
add
cld
hlt
sub
add
outsl
xor
push
inc
add
jne
mov
add
test
call
imul
ficomps
pusha
clc
dec
push
push
scas
mov
outsb
jp
sbb
les
mov
xchg
xchg
add
or
ss
add
loop
push
jge
mov
mov
fmul
test
add
mov
lea
les
dec
push
test
inc
jno
jmp
mov
mov
mov
push
and
add
xchg
std
test
nop
adc
test
add
add
sbb
push
and
push
jns
test
add
push
cmp
ficomps
dec
xchg
sub
lcall
or
pop
xrelease
mov
in
aaa
mov
add
or
cwtl
adc
dec
or
subb
mov
lock
std
mov
inc
mov
inc
adcl
into
and
sub
test
daa
out
mov
popa
sub
insl
push
mov
xor
sub
xchg
add
mov
mov
jb
pop
adc
jo
addr16
push
adc
pop
or
add
xchg
cmc
push
shlb
add
cmp
dec
subb
push
xchg
in
lea
outsb
ja
divl
cwtl
add
mov
and
push
jl
stos
push
cmp
sub
das
pop
dec
dec
bnd
and
add
xchg
pop
iret
daa
cwtl
ljmpw
mov
add
inc
aas
inc
ss
mov
cmc
out
aad
rcrl
aaa
les
inc
movsl
aam
pop
add
in
push
jnp
rcrb
loop
je
mov
mov
shlb
std
push
push
int3
pop
sarb
add
mov
sub
scas
cmpsl
xor
std
cwtl
loopne
sbb
pop
bound
push
psubsw
js
and
test
and
dec
cmp
add
cmpl
movsl
pop
ret
add
pushf
sbbl
and
pop
cwtl
adc
int
arpl
mov
cmp
add
icebp
shl
outsb
add
mov
bound
stos
jnp
negl
aaa
clc
add
dec
cmp
pop
dec
inc
dec
xchg
loopne
int3
repnz
enter
popa
shr
sub
and
jp
fmull
or
fsubrs
out
jae
roll
popa
pop
loop
jne
jo
call
incl
mov
adc
subl
loope
pop
jae
sbb
inc
pop
nop
or
out
jne
mov
cmp
add
out
mov
pop
movsb
jp
pop
push
xorl
add
sub
aas
lock
arpl
sub
shlb
add
sbb
pop
sbb
mov
clc
negl
cs
xchg
push
add
xchg
inc
push
adc
aam
jecxz
es
inc
mov
fidivrl
add
negb
dec
cli
shr
add
mov
cmc
push
add
cmp
add
mov
push
or
stos
gs
shl
cmp
xor
adc
lds
loope
inc
cmp
push
std
add
outsb
fadds
aad
cmp
sbb
xor
in
aas
mov
lods
or
test
push
clc
mov
pop
hlt
jmp
xchg
jns
add
or
test
jg
daa
imul
in
stos
pusha
ret
cmp
ficoms
out
pop
or
fwait
pop
cmp
add
icebp
pusha
ja
enter
shll
mov
xchg
cmp
add
ja
pop
xchg
lcall
cmp
inc
push
clc
dec
flds
jnp
in
lahf
jl
jae
push
sub
jb
add
cmc
jae,pn
jle
add
xor
jl
aam
mov
sbb
cli
mov
or
mov
xorl
and
mov
cmp
sub
pop
mov
and
aas
add
imul
enter
add
mov
push
xor
ljmp
mov
popf
and
sbbl
mov
add
repz
inc
je
ja
add
in
sahf
in
mov
repz
cmp
testb
push
sbb
test
int
outsl
xchg
lock
cmp
test
add
nop
and
sbb
fistpll
in
rcrl
clc
mov
lcall
js
push
add
dec
sbb
xor
or
repz
push
mov
fsub
cmp
leave
jge
mov
pop
mov
push
inc
test
in
aam
lods
or
push
outsl
inc
jmp
int3
scas
jmp
je
mov
pop
add
pop
lock
inc
xchg
mov
mov
add
mov
hlt
and
mov
sbb
add
std
cmp
add
sub
sbb
popa
add
mov
pusha
incb
sub
in
jno
loopne
and
outsb
insl
test
push
add
xlat
sti
es
loopne
push
std
aad
inc
cmp
test
push
lahf
shl
faddl
pop
pop
xchg
std
push
ljmp
pop
mov
mov
add
inc
out
jmp
mov
cmp
int
aad
insl
sbb
add
inc
shlb
pop
add
adc
clc
mov
jecxz
cs
lock
lods
add
mov
repz
jbe
and
or
adc
lds
xor
mov
adc
fistpll
adc
ljmp
adc
jle
add
test
mov
adc
jbe
add
pusha
jge
sbb
das
mov
and
jmp
mov
out
sub
in
nop
push
js
fs
xchg
add
mov
add
dec
lea
mov
mov
mov
cmp
dec
das
fstpt
out
add
shlb
xor
xchg
add
in
in
and
adc
cli
data16
lret
cwtl
cmc
pushf
push
push
xor
rcll
pop
in
inc
std
and
mov
add
mov
cli
pop
xchg
sarl
enter
add
jnp
cld
dec
clc
add
sub
and
jbe
in
mov
pop
xor
enter
rolb
mov
test
pop
rol
jp
xchg
add
scas
hlt
mov
call
sbb
adc
daa
add
xor
mov
nop
cmp
jns
adc
into
push
adc
rcl
maskmovq
cmp
xchg
nop
add
scas
push
lret
jns
aam
push
add
adc
shlb
add
jns
gs
mov
in
inc
cmp
cmp
shll
mov
add
stc
or
xor
int3
ret
cmc
dec
dec
xor
rcll
sbb
popa
dec
iret
mov
jo
add
in
push
add
call
or
xchg
lds
jb
orb
add
pushf
sti
mov
mov
icebp
ret
pusha
rcrl
add
xchg
push
mov
lds
xchg
push
fisubl
test
cmc
stc
and
jg
xchg
mov
xchg
adcl
das
jmp
in
or
dec
lea
stos
push
ds
mov
mov
pushf
sbb
incl
inc
movsb
fldt
shl
in
mov
pop
mov
sub
and
jl
add
cwtl
mov
add
mov
xchg
add
fmuls
subl
adc
loope
or
add
pushf
in
push
dec
movsl
add
fs
pop
ljmp
lldt
push
pushf
sub
cmp
pop
inc
xor
push
add
pop
dec
push
add
sahf
call
inc
add
sub
cmp
subb
imul
adc
arpl
dec
add
int
and
stc
aam
roll
push
jno
mov
push
xchg
and
mov
pop
pop
push
movsl
aam
sub
addl
cltd
imul
ljmp
adc
inc
adc
and
mov
add
test
inc
push
xchg
dec
pop
ret
add
push
or
xchg
inc
add
jnp
and
shll
call
add
mov
inc
bound
in
cwtl
gs
lret
add
or
push
push
rolb
arpl
stos
je
movsb
add
dec
inc
fwait
add
stc
inc
pop
lock
add
scas
fimuls
pop
and
add
cmp
add
popa
sbb
push
add
lcall
sub
sti
or
add
aad
fidivs
fiaddl
popf
xor
pop
int3
add
test
pusha
and
loopne
into
mov
ds
fcoml
push
test
or
cmc
pop
jmp
loopne,pn
aaa
mov
es
in
pop
lcall
pusha
add
dec
adc
loop
mov
add
push
mov
mov
xchg
loopne
aaa
jl
jnp
dec
sub
mov
lods
inc
xadd
jmp
cmp
ds
js
push
push
mov
adcl
out
cmp
jne
rol
gs
dec
add
neg
int3
push
xchg
cmp
in
addl
dec
hlt
mov
loopne
xchg
sbb
sar
ds
outsb
adc
mov
fimuls
fmull
rorb
das
sti
inc
test
movsb
mov
sarb
sub
pop
dec
pushf
or
lret
add
sub
clc
dec
ja
ds
add
sarb
pop
and
stos
cltd
stc
inc
movsl
dec
ret
std
addr16
inc
pusha
and
in
xchg
aam
jmp
add
add
mulb
add
in
es
push
repz
inc
cmp
xchg
sub
mov
mov
jb
aas
insl
add
addr16
hlt
cmpsl
jecxz
add
pop
imul
add
cmp
pop
cltd
bound
ds
xor
test
add
iret
call
std
fstps
arpl
shlb
das
enter
int3
loopne
jg
xor
loop
or
sub
dec
pop
shlb
es
add
jns
push
mov
sbb
push
cmp
jmp
sub
js
in
ret
pop
dec
loope
add
xorb
jg
das
cmp
outsl
inc
add
stos
and
adc
add
mov
pop
in
push
mov
jmp
pop
test
lret
push
jbe
inc
inc
push
dec
add
adc
xchg
jle
add
sub
or
cmpsb
out
pop
add
jmp
mov
xchg
subl
add
outsb
test
add
cli
jnp
in
stos
in
add
dec
rep
add
push
pop
dec
fildl
stos
mov
jno
jl
insb
clc
pop
push
add
xor
decl
lret
pop
in
rorb
jg
xchg
pop
cmp
push
ret
aad
mov
mov
or
sbb
loop
pop
add
popa
into
push
call
or
pop
inc
cmpsl
xlat
push
push
int3
pop
jecxz
mov
add
sbb
mov
pandn
fwait
add
cmp
xlat
hlt
adc
int3
incl
out
sbbl
sub
add
add
nop
xchg
mov
push
or
add
ljmp
add
enter
loopne
ja
add
mov
movsl
mov
fs
mov
in
mov
mov
pop
scas
fdivrp
add
out
dec
ss
mov
repnz
lcall
dec
pop
mov
or
adc
xlat
cltd
sub
cmpsl
add
jnp
sbb
and
pop
xchg
test
test
loopne
notb
add
daa
xor
add
fnclex
and
notb
out
leave
nop
mov
xchg
add
inc
sahf
cltd
ljmp
inc
stc
fldl
sahf
pushf
mov
clc
repz
dec
fdiv
lock
inc
mov
add
mov
shl
xor
cmp
test
mov
cmp
mov
sbb
loop
jno
mov
pop
cmp
jmp
and
test
jae
adc
sti
and
int3
lock
int
add
mov
and
in
fcoml
sbb
movsl
jae
cmp
or
sbb
fsubp
jno
add
out
in
daa
fcmovbe
jmp
push
and
mov
mull
mov
rolb
xrelease
cs
pop
test
add
pop
imul
dec
call
sbb
test
je
push
movups
adc
adc
xor
ljmp
add
jmp
mov
and
jecxz
pop
and
mov
ret
mov
insl
mov
add
sti
lods
mov
cld
and
inc
jnp
mov
push
test
or
pop
pop
sub
sub
mov
mov
cmp
mov
mov
fisttpll
rcll
stc
jge
mov
sbb
cmp
lahf
mov
out
mov
mov
inc
clc
push
mov
data16
enter
mov
dec
pop
insl
cli
lahf
jle
xor
and
push
and
xorb
insb
pop
in
sbb
arpl
aas
inc
inc
push
jns
lret
fildl
std
sub
iret
cs
xchg
dec
lcall
xchg
jns
inc
xor
xor
pop
xchg
pop
add
js
add
dec
inc
lcall
xchg
fxch
mov
add
mov
adc
lock
jge
dec
cmp
jbe
push
add
fldenv
inc
cld
push
popf
sarb
ficompl
mov
mov
inc
cmpsl
mov
adc
test
inc
mov
outsl
shrl
jnp
mov
lcall
add
hlt
add
or
add
dec
enter
adc
mov
cmp
roll
into
je
or
shrb
scas
add
mov
push
add
jo
loopne
adc
fistpll
test
repz
dec
push
shl
add
hlt
stc
pop
sub
and
rcll
mov
shlb
adc
out
add
or
xchg
dec
dec
sarb
std
mov
jns
cmpsb
add
push
lahf
pop
lea
cmp
dec
or
lret
loopne
mov
push
or
imul
sub
and
xchg
jo
add
xchg
mov
pop
mov
add
inc
mov
add
stc
je
add
push
imul
movsb
inc
gs
add
mov
add
dec
mov
movl
andl
add
ffreep
xor
in
add
sbb
dec
add
inc
sub
jae
add
fwait
loop
sub
add
hlt
imul
mov
shr
sbb
pop
std
cld
push
into
dec
sarb
add
test
push
sti
adc
and
inc
lea
inc
sub
dec
add
test
dec
popa
shl
push
dec
in
add
rorb
inc
push
ja
mov
jbe
adc
or
push
in
int
cs
xorl
and
fcmovbe
jmp
loope
scas
jp
jae
and
jecxz
push
pop
pop
test
sbb
jl
fdivr
jmp
and
mov
jecxz
ret
push
push
or
cmp
add
andb
push
das
cld
scas
xor
xor
rolb
lea
aad
lds
add
sbb
test
pusha
movsl
or
or
fwait
add
inc
mov
add
mov
mov
popa
cmc
lock
les
jno
movsbl
sub
push
insl
xor
mov
ret
xlat
and
sarb
xchg
add
les
test
movsl
sbb
push
mov
cmpsl
loop
nop
cs
inc
sbb
in
sub
aas
cmp
add
pushf
cmc
pop
mov
pop
scas
data16
and
jmp
jb
mov
dec
fimull
or
add
les
jae
ja
xchg
out
add
jp
cmp
push
inc
pop
fadds
push
mov
lods
imul
pusha
cmpsl
jl
out
cmp
ficoml
and
in
aad
loopne
fnstsw
in
mov
inc
xlat
test
cs
loopne
in
dec
lods
leave
lret
rol
fldl
mov
mov
jo
jl
les
cmp
in
mov
xchg
imul
in
ljmp
and
cmp
push
mov
shrl
jae
push
lret
add
jns
sbb
loopne
stos
push
aad
xorb
inc
xlat
add
or
dec
jno
add
loope
push
add
mov
add
add
std
rolb
mov
xor
mov
dec
cli
pushf
hlt
fdivs
mov
in
pusha
call
add
dec
les
addr16
stos
and
in
in
add
mov
add
mov
ljmp
rorb
pop
push
addb
add
popf
mov
fdivrs
inc
ja
cmp
push
jno
push
xchg
add
js
sub
cmp
aad
cmp
jle
cmp
push
sbb
testl
cld
pusha
fdivl
pop
pusha
cmpsl
test
push
jle
ja
add
mov
les
dec
cmpsb
sbb
mov
aaa
inc
lock
icebp
add
cmp
add
mov
or
mov
or
addr16
paddsw
sbb
pop
fsubrs
inc
pop
test
addb
sub
mov
sub
xor
add
fsubs
add
dec
mov
sbbl
or
in
push
xchg
jb
rolb
into
fsub
adc
adc
sbb
ja
dec
add
pop
ljmp
rolb
or
mov
add
pop
dec
mov
test
mov
inc
push
jb
lahf
js
pop
mov
jae
sub
rcl
hlt
dec
cli
pop
add
push
mov
fisubl
shll
mov
jo
xchg
enter
dec
add
stos
cmpsb
outsl
adc
lahf
add
in
xchg
out
cmp
dec
jmp
loopne
jge
inc
cmp
jg
dec
lds
xor
mov
pop
mov
sbb
andb
data16
sbb
mov
lea
aas
mov
ljmp
pop
lods
sbb
xor
cwtl
add
or
pop
adc
rclb
or
inc
mov
push
jae
add
adc
arpl
lea
stos
push
dec
xchg
mov
push
xchg
fs
sahf
sarb
es
stos
pop
add
push
add
shlb
lret
clc
mov
add
out
mov
div
cmp
xor
pop
push
pop
int3
inc
mov
adc
dec
sbb
repnz
ret
push
movsb
push
mov
cmp
mulb
and
shrb
test
pop
jo
fsubr
mov
cs
pop
jl
mov
sti
cmp
repnz
pusha
mov
dec
sbb
lahf
inc
int
add
int3
mov
sbb
mov
ljmp
aas
pop
sbb
mov
mov
imul
push
inc
jb
pop
jle
and
jno
add
movl
stos
pop
shr
mov
mov
call
jp
jle
and
cltd
xor
repnz
xor
mov
mov
mov
dec
lret
stos
enter
add
jnp
ret
dec
in
jns
inc
and
gs
add
xchg
es
jo
das
ljmp
mov
cmp
add
or
pop
lret
negl
mov
add
pop
add
clc
mov
cmp
pop
dec
cld
push
cmp
out
xchg
add
stos
outsl
jl
mov
pop
in
cmp
add
cld
popf
leave
lcall
insb
fmul
push
add
hlt
ljmp
cmpsb
mov
rclb
push
pop
sahf
jg
testl
mov
sbb
add
out
inc
stos
nop
icebp
jp
xchg
mov
jno
sub
xchg
xor
add
popa
into
imul
inc
sbb
dec
jne
push
in
add
dec
mov
and
or
pop
jno
pop
sarl
sti
mov
out
test
add
xchg
call
jp
pop
cltd
cltd
scas
jo
and
add
add
inc
pop
mov
add
movsb
outsl
jns
stos
in
add
scas
stc
jnp
arpl
push
add
scas
xor
lret
add
aaa
sub
lds
popa
lea
add
mov
ror
sub
pop
add
add
repz
mov
mov
aas
xchg
pop
sbb
adc
inc
orb
add
add
adc
or
xor
fisttps
std
xchg
sti
add
dec
cmpsl
addl
push
pop
sub
orb
add
mov
loop
xchg
or
movsl
dec
adc
pop
aad
lock
add
lds
rclb
sahf
and
adc
and
sub
mov
jp
adc
jle
mov
mov
bound
lods
fsts
xchg
mov
push
jo
rcrb
ficomps
sub
and
xchg
ret
add
pop
mov
loop
in
xor
xchg
and
sbb
xchg
mov
insb
movsb
loope
inc
add
repz
add
xor
je
xor
fiaddl
mov
stos
hlt
inc
add
mov
incl
sub
andnps
movsl
aam
subb
mov
cmp
or
addr16
push
cld
or
add
hlt
shlb
rorb
sub
test
in
loopne
gs
cs
sub
xchg
push
mov
setl
aaa
mov
and
dec
rorl
in
daa
pop
or
pop
sub
cmpl
xchg
test
in
or
aaa
inc
roll
xchg
imul
add
cmp
push
xchg
xchg
sbb
cmovb
add
mov
fucomp
add
test
lods
add
popf
sbb
sbbl
add
mov
fucomp
adc
sub
sarl
negl
push
mov
outsl
in
lods
add
or
mov
fwait
das
or
iret
cmpsl
outsl
mov
push
cmp
test
jg
sahf
add
lret
sarl
mov
add
mov
clc
rcr
and
inc
add
sub
jg
mov
push
xchg
das
cld
jne
enter
stos
xchg
inc
fdivrs
test
jae
lea
dec
out
int
jecxz
lods
jle
mov
jb
inc
xchg
push
add
in
and
inc
adc
cmovg
sbb
das
ffree
fwait
push
push
rcr
push
add
movsb
mov
add
cmpl
mov
rcrb
add
ret
fcompl
js
inc
idivb
addr16
leave
je
orb
inc
out
jl
pop
in
fmull
or
popa
out
sbb
mov
push
push
sbb
clc
inc
sub
ficoms
add
or
sarl
pusha
pop
fmull
call
cwtl
outsb
xchg
push
int
insl
aam
or
mulb
fidivrs
fnstenv
ret
push
cmpsb
pop
push
das
imul
add
mov
dec
test
adc
loopne
arpl
add
mov
cmc
xchg
jnp
lock
push
fmull
jl
mov
fiadds
cli
and
xchg
cmp
cltd
enter
add
mov
jmp
add
jbe
loopne
add
std
lret
lds
ret
pop
adc
add
int3
and
pop
stos
aas
sbb
sub
xchg
sbb
loope
jnp
sub
test
jecxz
test
cmpsl
or
xchg
jecxz
mov
nop
add
test
popf
and
add
push
push
add
cmp
add
in
test
enter
jne
int3
xor
mov
hlt
andb
in
add
or
add
test
add
daa
cs
fildl
cmp
jg
test
add
dec
xor
add
add
in
fbstp
scas
cmp
add
shlb
and
add
pop
lcall
jne
mov
cltd
add
pusha
cli
fs
lret
enter
iret
js
out
aam
adc
jg
pop
arpl
roll
mov
jns
xchg
inc
jmp
pop
shr
and
sti
je
in
pop
out
ret
or
add
clc
mov
xchg
lods
sbb
imul
les
pop
idiv
cwtl
outsl
mov
cmp
sub
cld
mov
xor
outsl
call
xlat
pushf
aam
xor
aas
cltd
push
test
mov
add
addr16
mov
and
leave
sub
cwtl
pop
add
xchg
dec
iret
ljmp
add
jmp
add
and
roll
pop
je
movsl
addl
fistl
fsts
add
add
and
cwtl
jmp
cmp
lock
loopnew
outsl
mov
mov
dec
fnstcw
aam
dec
add
pop
popf
mov
and
xorl
lods
mov
mov
insl
xor
scas
xchg
ret
or
mov
xlat
cwtl
test
cmc
add
xor
lods
add
xchg
mov
adc
mov
ja
sarb
cld
add
in
ret
shl
mov
imul
inc
mov
add
dec
inc
dec
mov
popa
add
and
out
pop
call
in
sbb
inc
xor
sbb
pop
jmp
pop
dec
scas
ljmp
fwait
iret
xchg
data16
pop
mov
cld
rcrb
add
ret
test
add
dec
jb
int3
mov
pop
cltd
pop
andb
or
cmp
add
jl
inc
nopl
push
fimull
subb
mov
imul
or
daa
mov
cwtl
mov
mov
jae
out
mov
inc
xor
jb
cmp
std
cmp
jmp
xor
rcll
add
push
out
jl
mov
add
sti
pop
repz
es
fiaddl
xchg
out
cmp
adc
cld
lahf
and
shrl
in
dec
sbb
fistps
lcall
mov
jg
movsb
push
fldl
mov
adc
mov
add
ret
cmp
cld
dec
add
inc
sub
or
out
xchg
add
ret
das
and
add
mov
stc
roll
rclb
push
add
xor
int
lock
mov
icebp
enter
inc
ret
hlt
cmc
shlb
push
mov
lret
xchg
xchg
sahf
in
xor
repnz
rcr
lret
add
dec
jnp
pop
push
rolb
das
repz
daa
jle
add
push
mov
xor
icebp
add
add
mov
js
cli
insb
fnclex
add
inc
jnp
add
inc
lret
mov
mov
gs
aas
int
add
mov
xchg
shlb
nop
sub
and
xchg
popa
jo
mov
cmp
and
fsubrs
add
ljmp
mov
lret
mov
add
cmp
add
das
notb
scas
call
pusha
test
leave
and
lret
aaa
mov
pop
push
addr16
add
jne
and
test
xor
out
dec
mov
popa
dec
cwtl
jmp
pop
push
shlb
push
pop
insb
or
pop
pop
loope
xor
sbb
fisttpll
lret
jno
cmp
stos
pop
add
dec
mov
add
shrb
notb
lea
lods
out
loopne
loopne
add
sub
addb
sbb
shrl
mov
maskmovq
divl
pop
add
adc
nop
cmp
and
dec
or
add
and
test
mov
lret
les
mov
in
orl
ret
pop
push
fsts
add
pop
cmp
fisttpl
fdivs
into
call
jp
adc
js
in
add
push
pop
mov
and
pop
cli
out
mov
add
rcl
push
mov
ja
dec
fcomps
enter
push
and
pushf
add
insl
jg
xor
pop
xor
aaa
rorb
push
xor
inc
sbb
sub
fldt
stc
or
inc
loope
push
sbb
outsl
mov
xor
xor
and
or
jp
adc
xor
fadd
scas
or
leave
sbb
dec
and
xor
push
shrb
push
inc
mov
mov
lret
inc
cmp
mov
add
int
stos
jne
add
insl
lret
or
es
mov
dec
add
push
fwait
mov
shl
gs
loope
test
mov
inc
push
icebp
cwtl
popf
nop
fcoms
test
enter
fst
add
fdivs
sbb
push
lahf
sbb
movsb
adcl
add
cmpsb
clc
jb
push
nop
outsl
or
testl
mov
add
nop
cli
iret
pop
sti
add
insl
dec
add
mov
out
das
adcb
jnp
push
cs
ljmp
add
hlt
pop
pop
and
mov
mov
pop
adcb
repnz
add
or
scas
mov
cmp
callw
xor
mov
or
dec
lds
inc
aad
out
cmp
leave
dec
sbb
gs
or
add
aad
ret
sub
test
popa
mov
mov
pop
adc
xor
lods
add
ss
cmp
mov
nop
cmpsb
dec
sbb
adc
dec
rcl
add
maskmovq
notl
mov
or
bound
add
cmp
scas
push
push
pop
sbb
cmpsb
mov
lods
jecxz
jmp
pop
roll
pop
and
pop
add
movsb
or
push
pusha
mov
adcb
sub
pushf
lods
add
shl
fiadds
cmp
sbb
pop
ss
je
jbe
or
test
les
mov
mov
emms
mov
inc
cld
xchg
out
add
outsb
lods
xor
jne
mov
pop
mov
cmc
mov
push
add
adcl
push
add
je
jecxz
lods
data16
dec
xchg
test
inc
cltd
int
cmp
xchg
rorl
adc
into
and
mull
push
mov
add
lahf
push
dec
add
leave
movl
and
add
cmpsb
or
add
lahf
test
mov
stc
in
mov
lds
cmp
shlb
jne
data16
mov
add
stc
or
ljmp
push
mov
cmc
cli
push
sbb
cld
mov
lea
cmp
int
int3
jno
andl
adc
outsl
or
addl
jl
sub
inc
fidivs
lahf
xor
repz
dec
js
jle
or
cmp
movsb
aas
push
xor
pusha
mov
adc
rol
jne
repnz
xchg
and
cmp
roll
xor
das
inc
jmp
push
add
push
int
into
insb
cmp
jl
xchg
add
sbb
ds
sub
test
pop
scas
mov
cli
into
dec
add
jae
lahf
jnp
rcrb
daa
add
jge
add
xlat
fldl
je
inc
test
jne
and
inc
scas
jle
in
lea
clc
sahf
loopne
sub
push
lds
add
cmp
cmpl
sbb
rcrb
fnstcw
sub
scas
jns
dec
jb
lods
in
cmc
pop
sub
test
jae
cld
arpl
pop
js
and
pushf
pop
lsl
dec
addl
xor
lods
ja
testb
repnz
fisubs
sbb
sub
push
or
inc
xorb
jnp
add
outsb
test
push
aas
xchg
inc
add
dec
rcrb
ret
adc
mov
scas
cmp
and
loop
mov
inc
jmp
mov
or
push
mov
mov
inc
add
xchg
adc
inc
test
sbb
xchg
aam
in
xchg
sub
sbb
xor
mov
movsb
out
xorb
addl
adc
xor
adcb
add
mov
push
adc
pushw
cmpsb
add
test
out
ret
mov
lods
ljmp
and
fldl
je
negl
xchg
cmp
pop
std
idivb
or
add
cmp
push
jp
cld
mov
das
add
push
flds
sub
xor
fcoml
cmpsb
add
mov
push
clc
aam
mov
movsl
mov
addl
mov
add
or
les
mov
insb
mov
or
lahf
push
add
ljmp
les
mov
push
adc
mov
fdivr
add
adc
sbb
roll
dec
ret
lahf
insl
stos
add
mov
loope
orl
nop
clc
xor
mov
jno
xchg
mov
lret
adc
popf
pusha
add
pop
sub
add
and
insl
jecxz
cmp
enter
mov
out
sarb
push
fidivrl
push
jo
pop
in
dec
add
xor
pop
xchg
inc
mov
adc
push
scas
add
push
clc
repz
cmpsb
fdivr
add
lret
and
mov
mov
dec
rolb
pop
mov
ds
mov
ret
pushf
movsb
mov
sti
add
lret
push
or
testb
shll
add
pop
lea
ja
sahf
add
cmp
scas
xchg
add
fiadds
pop
pop
lahf
outsb
add
jae
idivb
pop
push
sbb
add
xor
repnz
jge
sub
cmpl
ja
add
add
xchg
sub
arpl
cld
mov
mov
stos
cmp
aas
add
inc
sub
pop
sub
add
jmp
push
cmc
jno
inc
jmp
dec
dec
shrb
or
add
hlt
mov
aad
jae
insl
mov
sahf
fdivrs
testl
pop
fcompl
insb
aas
mov
ljmp
add
fwait
cltd
mov
add
fs
jp
push
outsl
add
addr16
dec
out
pop
jge
cld
into
xchg
mov
sbb
add
movsb
test
dec
add
out
shl
jno
push
in
test
add
adc
dec
or
or
in
sbb
and
outsb
lcall
dec
mov
mov
cs
and
pop
sub
leave
xchg
movsb
popa
mov
push
ret
jnp
stc
clc
cmp
lcall
test
div
mov
pop
xor
addb
cli
popw
xchg
or
add
movsl
popf
mov
pop
mov
stos
mov
fadd
fldl
pop
xchg
cmp
shlb
cmp
inc
in
push
xchg
orl
inc
mov
xchg
pop
movb
sub
cmp
mov
mov
dec
push
mov
int
push
shlb
ds
inc
daa
fmul
sarl
cmp
jl
or
sbb
inc
gs
dec
add
cmpsb
sbb
aam
dec
outsb
add
sahf
mov
cmpb
xchg
dec
test
sub
add
xchg
and
ja
fsubl
push
push
jbe
imul
sbb
mov
call
aas
dec
cmpsl
in
add
popa
mov
lahf
add
enter
dec
das
sub
repnz
add
or
dec
enter
add
inc
cmpsl
xchg
sub
das
cmpsb
add
push
fisubl
mov
add
xchg
add
adc
lret
dec
add
add
lds
add
push
adc
xchg
loopne
mov
mov
shl
inc
mull
pop
xor
mov
pop
test
dec
push
and
insl
adcb
jg
mov
popa
sbb
pop
add
xor
movsb
aad
loopne
jmp
stos
dec
and
push
jle
test
dec
sub
add
sbb
sub
xchg
jg
sbb
inc
movsl
and
fildl
pop
jnp
adc
daa
je
add
mov
push
ljmp
bndldx
aad
les
dec
out
push
pop
add
push
pop
out
fstpl
pop
push
inc
lret
orb
pop
in
lods
jg
addb
gs
pop
scas
add
test
jo
cmp
inc
into
sbb
xchg
add
sub
lods
inc
sub
pusha
push
cli
or
idivb
jne
add
pushf
push
push
and
add
mov
dec
jge
cld
jb
outsb
inc
add
push
mov
insl
cwtl
into
ja
aas
or
movl
mov
dec
inc
push
les
lret
and
fwait
es
xchg
jge
add
sub
inc
adc
add
sub
or
pop
add
mov
cld
jbe
jae
add
shlb
ja
add
lcall
mov
pop
movl
sbb
mov
gs
add
loope
sub
and
jge
mov
add
push
popa
jo
xor
outsb
add
lock
test
loope
add
add
lods
ret
je
int3
jp
add
in
movsb
jge
sbb
or
insb
pop
jg
jae
jnp
jno
add
insl
cmp
fsub
loopne
push
sbb
in
mov
sbb
fcmovnu
sub
inc
lods
lds
pop
popa
js
es
arpl
add
inc
aaa
and
jno
or
pop
inc
enter
jbe
push
sbb
in
push
add
jl
arpl
and
testb
or
lret
xor
data16
dec
pusha
mov
add
jp
in
push
and
add
inc
mov
jo
mov
xchg
outsb
sub
sbb
aas
mov
jl
add
jne
mov
jge
add
mov
faddl
into
loope
and
mov
js
add
outsl
and
add
pop
sub
decl
mov
xchg
jbe
sbb
sbb
in
adc
pop
aam
and
loopne
add
xchg
clc
outsb
add
pop
sub
mov
mov
mov
pop
lret
and
orb
add
mov
adc
fiaddl
add
sbb
sti
pop
lret
add
xchg
pop
lods
sbb
jmp
icebp
sub
in
sub
loopne
dec
or
int3
clc
adcl
mov
adc
and
ret
cs
fs
push
sbb
inc
es
sbb
add
jle
jnp
dec
add
mov
add
add
pushl
pop
cli
mov
xor
sbb
mov
add
jbe
test
fwait
add
xor
ja
xor
push
and
sbb
pop
rcrb
adc
std
aam
lds
add
inc
lea
or
test
popf
lock
clc
sti
inc
mov
out
adc
mov
das
cmp
push
adcb
mov
leave
xor
shrb
sbb
out
sarb
and
xchg
aad
add
push
fiadds
push
inc
lahf
popaw
xor
loopne
lea
int
scas
aad
push
xchg
pusha
je
sbb
xor
and
jge
push
and
xchg
adc
sti
fadds
xchg
push
mov
and
bound
sub
call
icebp
push
pop
in
movsl
call
mov
stc
mov
add
ss
loop
sbb
cld
sbb
mov
dec
sar
ds
cmp
orb
cli
fcmovnb
dec
popa
in
nop
pop
inc
in
std
notl
mov
and
push
mov
roll
push
xlat
in
adc
addr16
call
imul
sbbb
jg
nop
inc
add
mov
xor
inc
ret
push
cmp
int
inc
mov
push
ror
icebp
dec
ret
dec
cmp
fcomi
cltd
fiadds
jb
mov
inc
dec
in
mov
push
push
push
ffreep
loop
pop
pop
sbb
iret
xchg
inc
sti
fs
jb
call
enter
pop
mov
cmp
sub
mov
in
and
nop
push
xlat
sub
and
add
movsb
dec
lahf
and
fcom
bsf
jecxz
std
leave
sti
movl
jl
adc
jle
lock
adc
shrb
and
add
ret
shll
dec
add
mov
in
sbb
aam
cld
push
sti
sbb
jle
ljmp
out
cmp
orb
dec
movsl
or
inc
sti
in
sbb
shll
sti
into
jbe
sbb
add
pop
add
arpl
sarl
add
cmp
jg
inc
movsl
adc
xchg
cmp
add
outsb
cmpsl
adc
out
or
dec
iret
nop
or
mov
jl
jno
test
cmpsb
dec
mov
adc
add
mov
cld
jg
add
jnp
and
cwtl
inc
mov
lcall
shlb
sbb
add
jle
mov
sarb
sbb
clc
mov
xchg
sub
insl
cmp
sbbb
outsb
roll
les
add
jae
cmp
imulb
cmp
cmp
jg
sbb
or
and
xchg
push
push
sti
int3
sarl
sbb
outsb
inc
stos
das
mov
cmp
xchg
mov
cmp
adc
pushf
cmp
sbb
mov
push
sbb
fwait
jge
divb
add
in
push
xlat
repnz
fidivs
aam
jp
and
inc
add
ret
sbb
mov
or
cmpb
pop
sbb
push
cmp
hlt
jmp
int3
jo
cmp
add
das
push
xor
js
cmp
add
rolb
pop
xchg
jmp
sbb
lahf
add
mov
cmpb
fs
jns
adcb
jp
jno
mov
sbb
in
and
clc
lock
mov
pop
mov
iret
sbb
mov
and
aaa
sub
test
jbe
sbb
mov
cmp
add
or
adc
fiadds
mov
push
sbb
xchg
sub
adc
dec
shrl
and
int
adc
test
and
subl
push
sti
mov
and
xor
xor
les
xchg
mov
out
xchg
popa
add
cli
pop
push
lret
xchg
adc
int
adc
adc
add
or
or
xor
xor
sub
jl
decl
adc
cmp
mov
pusha
lds
jg
sub
sbb
test
or
out
stos
and
inc
lods
push
int3
subl
mov
adc
rorl
mov
mov
pusha
pop
adc
and
mov
out
out
push
cmpsb
addl
sbb
notb
and
inc
push
data16
dec
adc
sbb
scas
nop
ss
dec
loopne
cmpl
dec
loopne
fstl
mov
pop
adc
popa
data16
mov
test
outsb
dec
and
andl
dec
lahf
mov
arpl
jbe
jo
sbb
inc
repnz
pop
mov
adc
in
lock
xchg
push
adc
adc
js
mulb
js
xchg
xor
bswap
ss
push
push
xor
cmpsb
in
sub
flds
test
push
xor
out
ret
mov
movsb
cmp
xchg
push
dec
fmul
es
jle
divb
mov
adc
mov
inc
out
add
sbb
push
idiv
jbe
out
in
cmpsb
inc
in
loop
pop
nop
inc
cld
push
xchg
out
test
mov
sbb
xchg
loope
out
jp
divb
mov
popf
js
xchg
xor
xchg
cmp
push
xor
adc
adc
sbb
inc
cmpsl
test
push
cmp
es
jle
mov
icebp
xchg
les
adc
out
clc
testb
xchg
out
out
adc
lcall
cmp
adc
xchg
adc
sbb
es
sbbl
movsb
rorl
adcb
scas
ds
jle
mov
add
and
push
adc
ds
push
adc
jecxz
dec
sub
scas
shl
insb
adc
inc
fsubrs
outsb
jb
ror
jae
or
pop
inc
and
push
je
cmp
nop
and
ret
sbb
arpl
lret
sub
cmpsl
enter
in
and
repnz
inc
cmpsb
lret
push
pop
cli
scas
lret
nop
js
enter
mov
pop
enter
jp
into
pop
or
ljmp
leave
movsl
pusha
add
pop
popa
test
mov
add
test
jb
mov
sbb
add
pusha
aam
jno
or
sbb
sbb
into
or
setle
sub
pop
movsl
push
mov
xor
cmp
sub
js,pt
and
jle
and
inc
test
jge
and
mov
and
mov
push
dec
cmp
pop
cli
sub
adc
add
icebp
lock
enter
leave
loope
repz
ret
nop
adc
repz
push
or
push
aad
sub
cli
int
sbb
pop
lret
adc
sbb
aam
cmp
mov
fs
ss
cmp
int3
mov
fs
inc
fmul
push
loope
or
sbb
adc
stc
dec
push
fmulp
sbb
push
mov
inc
lret
sbb
mov
ss
xor
aaa
rcr
xor
test
test
movsb
add
mov
mov
fisubs
lods
mov
xchg
push
xlat
stos
sub
mov
cmpsb
iret
inc
cmp
bound
adc
pop
cmpl
in
add
and
cmp
call
xor
adc
xchg
xor
sarl
cmpsb
outsb
popf
rclb
aam
cltd
imul
ror
movsl
lock
and
lahf
sbb
sarb
sbb
add
adcl
xor
sbb
and
add
imul
push
mov
sub
incb
dec
fincstp
or
lock
lret
cs
mov
add
fs
ljmp
dec
add
xchg
dec
add
enter
ja
lcall
addr16
dec
in
jnp
pop
rcrb
ret
dec
adc
subb
cmpb
push
add
cmc
mov
add
push
pop
jo
push
js
add
push
les
shlb
cld
loope
mov
test
dec
or
push
scas
shlb
cltd
add
movb
xchg
mov
mov
adc
xchg
jns
adc
sub
fistpll
add
fsubrl
ss
add
jnp
mov
mov
adc
add
cmp
rcrb
jns
cmp
add
fistps
scas
push
in
xor
sahf
in
inc
and
add
in
jge
add
repz
sub
test
xor
jo
mov
sbb
add
sub
pop
inc
dec
pop
jp
ret
mov
pop
xchg
mov
dec
pop
or
jae
and
or
sahf
flds
push
pop
rclb
and
add
push
insb
jg
data16
pop
ds
testl
andl
shl
ficomps
push
jmp
jecxz
mov
sub
jmp
sub
andb
mov
xor
ds
jecxz
leave
add
jnp
rolb
rclb
nop
push
cmpsb
lcall
mov
mov
add
mov
sahf
and
xchg
mov
pop
setle
pushf
and
inc
fldt
or
movsb
inc
addr16
ss
xlat
cmp
add
mov
nop
loop
cltd
sub
cwtl
inc
mov
aaa
adc
jl
or
mov
or
lods
rolb
xchg
divb
add
mov
repnz
mov
or
and
push
repz
pop
int3
jae
pushf
jno
xor
sarb
jl
mov
int
xor
dec
repnz
js
sub
test
call
inc
stos
scas
pusha
mov
jge
dec
xchg
push
out
xor
cwtl
ret
nop
clc
loop
jmp
roll
outsb
or
jmp
add
xchg
aas
add
dec
stos
insl
jae
or
push
lret
or
sub
push
outsl
movsl
add
pop
jg
mov
push
pop
ret
inc
repz
add
lods
stc
mov
lock
decb
dec
scas
ss
clc
pushf
add
cmpsb
mov
fmulp
icebp
adc
add
repnz
jg
inc
and
rclb
mov
shlb
inc
inc
xchg
pop
mov
sub
cmpsl
xchg
adc
and
and
and
pop
xchg
nop
loopne
lahf
add
int3
xor
inc
push
mov
pop
shrl
out
or
mov
cs
fadd
call
fdivr
outsb
fsubs
clc
pushf
push
cmpsl
nop
inc
sub
xchg
add
add
testb
push
lahf
sub
cmp
add
fwait
push
cmp
sbb
mov
cs
lock
push
pop
cmp
or
jge
lds
sbb
add
pop
lock
lret
fsts
scas
add
and
repz
or
jg
sti
pop
lock
incl
mov
ljmp
incb
jle
cmpsl
adc
shlb
adc
push
call
xchg
cmpl
adc
aas
adc
push
adc
and
add
test
add
es
aaa
adc
dec
icebp
es
mov
orl
xchg
add
and
jo
fldenv
add
mov
test
add
xchg
fildl
out
push
incb
xchg
jno
inc
or
out
roll
push
out
aad
jg
sbb
pusha
inc
jbe
out
mov
shl
mov
pop
arpl
add
mov
ret
mov
adc
add
lcall
push
pop
cmp
mov
mov
leave
std
rcll
fdivl
test
cmpsl
pop
stos
add
jg
shlb
pusha
lret
xor
inc
enter
xor
add
enter
lods
dec
pop
push
add
aam
mov
add
adc
ret
inc
leave
arpl
sbb
add
dec
lock
shrb
stos
mov
add
inc
inc
leave
clc
xlat
mov
in
cmp
test
mov
cmp
and
popf
cmp
repz
sar
add
jg
ret
fcomps
inc
leave
loope
icebp
xlat
add
cld
outsl
push
int3
adc
push
mov
mov
sub
idivl
sub
hlt
repz
mov
mov
rorl
push
add
movsl
xor
mov
out
cmp
pop
mov
xor
mov
loopne
pop
test
mov
pop
sub
xor
mov
aam
and
xchg
add
adc
xchg
push
pop
or
popa
out
adc
jmp
mov
mov
leave
adc
imul
and
test
test
or
jns
sti
inc
mov
mov
shr
cli
xor
shll
cmp
ds
jp
rclb
add
pop
in
mov
es
sbb
or
sbb
add
mov
add
push
testb
sub
and
mov
mov
xor
es
lock
popf
push
scas
inc
movsl
dec
pusha
mov
loope
pop
or
popf
mov
pop
pop
dec
mov
loopne
mov
adc
and
sbb
inc
divl
lods
hlt
pushf
inc
mov
mov
daa
add
cmp
mov
and
xor
les
ljmp
into
or
test
xchg
and
stos
sub
or
jle
xchg
push
adc
ja
and
bound
push
test
js
mov
jl
adc
cwtl
ss
xchg
sbb
inc
jmp
add
mov
pop
add
xchg
sbb
jecxz
dec
cld
add
or
mov
pop
shrl
xor
rolb
mov
xchg
inc
insl
mov
shr
adc
add
sti
xorb
mov
mov
adc
mov
test
pop
aas
or
and
int
mov
sbb
and
stc
or
or
pop
add
adc
lret
push
or
mov
or
sbb
loope
dec
mov
lock
pusha
ret
addb
mov
and
inc
pop
add
iret
inc
adc
lret
out
mov
mov
inc
pushf
mov
loop
sbb
scas
out
pusha
mov
mov
or
mov
ja
cmp
out
lods
mov
sbb
in
lock
inc
lret
inc
jne
popa
sbb
xchg
pop
rorb
pop
adc
xor
sbb
inc
push
movsl
jnp
call
clc
mov
pop
xor
cmc
xlat
ret
pusha
sbb
mov
fsts
inc
inc
popa
pop
dec
xor
mov
imull
mov
xchg
sbb
push
or
ret
mov
in
ret
push
fistps
and
pop
adc
loopne
sti
int
cltd
in
add
iret
movsl
sbb
jo
movsl
lret
jnp
sub
arpl
loope
xchg
sbb
subl
aas
adc
rcll
mov
push
mov
jl
xor
nop
mov
ret
and
fs
sub
rolb
inc
aas
lret
or
mov
ret
lcall
sub
nop
popf
shlb
or
inc
cmpb
mov
dec
add
pushf
add
and
xor
mov
movsb
iret
inc
dec
test
enter
or
insb
je
repz
mov
inc
push
cltd
loope
and
arpl
jmp
fldenv
sbb
xor
les
popf
adc
mov
push
fbstp
pushf
push
push
jp
dec
and
sbb
dec
mov
call
add
mov
aas
jge
add
xor
push
cmpsl
les
test
xchg
push
incb
push
pop
enter
sbb
mov
xchg
mov
js
sbb
and
pushf
sbbb
ds
adc
test
in
arpl
mov
inc
ja
dec
ret
push
cmpsl
arpl
or
test
fistpll
scas
aam
out
imul
frstor
test
outsb
shll
adc
out
roll
pop
push
test
push
xchg
clc
dec
testb
pop
sub
pop
inc
out
add
pop
cld
mov
jns
les
xor
jecxz
add
push
lret
test
cltd
pop
and
jp
test
push
xchg
bound
xor
arpl
es
pop
shrb
sti
adc
and
mov
lock
shlb
push
shll
adc
add
mov
or
xor
adc
sub
lods
mulb
in
nop
dec
jmp
in
es
ja
add
or
jno
mov
insb
shrl
add
les
shlb
push
mov
sub
jecxz
push
jnp
adcb
loopne
cmp
jecxz
adc
ds
in
mov
int
les
jmp
pop
mov
add
inc
cmp
mov
movsb
enter
lock
inc
inc
add
loopne
test
nop
cmp
aam
inc
mov
rclb
pop
mov
add
xchg
add
rorb
dec
push
xchg
mov
xchg
repz
sub
dec
add
cmp
and
xchg
push
mov
stc
add
add
movsl
fwait
add
loope
icebp
jbe
clc
pop
and
orb
cmp
call
xor
loopne
cs
dec
and
and
loopne
in
call
mov
add
dec
test
inc
fs
inc
or
push
xchg
dec
adc
mov
loop
dec
add
mov
and
mov
and
or
out
cmp
scas
shll
adc
fisttps
sarb
lret
sub
movsb
jecxz
adc
and
pop
test
lea
js
sbb
xor
sbb
pop
or
mov
loopne
pop
and
mov
pusha
outsl
popf
addb
andl
push
add
stos
loop
je
add
iret
rcl
rcll
inc
call
and
cld
jae
test
dec
push
loop
fiadds
outsb
mov
xchg
xor
enter
pop
aas
adc
and
pusha
clc
insl
mov
or
shr
and
cmp
add
sub
pusha
mov
fisubs
insl
scas
js
push
jle
dec
or
lea
repz
adc
sub
sub
pop
loope
jl
sbb
fs
push
in
sbb
popa
in
push
xchg
jo
push
je
ret
cmp
adc
adc
das
cmp
and
sub
sbb
mov
daa
insl
jp
fcoms
xor
aaa
popa
lea
pop
pusha
push
mov
lods
stos
xor
sub
jne
in
inc
cmp
sbb
add
repz
addb
push
or
adc
clc
add
xor
aaa
clc
rol
dec
imul
push
push
inc
jge
dec
push
sbb
jge
clc
and
xor
dec
xor
fistpl
sub
fldcw
loop
adc
mov
xor
push
push
nop
ret
jno
dec
test
or
cmc
mov
push
in
jl
pusha
cmp
out
sub
in
cmp
mov
sahf
enter
cmp
rcl
sbb
xor
and
mov
xchg
out
loopne
pushf
or
repnz
mov
and
jno
in
cmp
or
add
cmp
and
ja
add
cmp
lea
cwtl
pusha
sti
out
xchg
adc
loopne
pop
das
outsl
les
or
jo
xor
das
popa
in
push
cmp
push
mov
pop
add
mov
or
push
pop
sub
loop
pusha
or
cwtl
pop
xor
pop
pusha
shlb
lea
popl
xchg
rolb
mov
popa
testb
pusha
cmp
sti
ficoms
mov
fstpt
push
lock
xchg
mov
lods
or
pcmpgtw
jo
nop
or
out
cmp
sub
mov
rol
add
and
cmp
inc
inc
jo
in
jmp
js
sbb
outsb
xchg
fiaddl
mov
mov
add
shll
jmp
jl
add
into
daa
push
mov
sarb
xchg
int
insb
pusha
fsts
ja
dec
inc
push
insl
add
or
push
or
and
mov
sar
lock
and
movsb
pusha
pop
inc
push
mov
js
or
test
xor
icebp
xor
rorl
scas
mov
mov
jnp
test
insl
test
rcrl
push
xor
iret
mov
clc
adcb
pop
sub
xor
test
pop
jle
enter
cmp
shrb
sbb
jmp
xor
add
mov
inc
add
add
adc
data16
adc
lock
push
and
pusha
cmpb
add
dec
mov
movsl
cli
cmp
dec
push
fwait
rcrl
jl
aas
test
cs
add
adc
mov
adc
adc
lock
rorb
cmp
dec
xor
sbb
jne
mov
shrl
inc
subl
dec
pushf
dec
into
push
or
pop
lahf
insb
xor
sub
enter
popa
outsb
push
cmc
add
in
enter
xor
xchg
xor
out
inc
pusha
shlb
cmp
xchg
push
idiv
and
sbb
shrb
push
clc
xchg
fidivs
push
mov
pusha
add
call
nop
out
pusha
rclb
jbe
clc
stos
sar
jp
cmpb
fs
pop
xor
shlb
mov
movsb
rcl
dec
hlt
popf
adc
cmc
cmp
shl
imul
ds
imul
mov
xor
mov
rorl
rorl
pushf
add
fwait
sarl
jmp
scas
hlt
add
sarl
std
movsl
icebp
popa
outsb
fcompl
add
inc
iret
push
testl
enter
xchg
scas
push
frstor
pop
jae
movsl
mov
cmp
test
out
ret
pusha
pusha
pop
fdivrs
xchg
loopne
push
ret
pusha
pusha
xchg
mov
test
xchg
xchg
lds
nop
dec
mov
into
loopne
popa
outsb
cmc
pusha
mov
xchg
repz
aaa
add
mov
popl
sub
pop
jg
mov
xchg
cmpsb
dec
push
xchg
push
cmpsb
mov
inc
enter
je
xchg
sub
fdivs
jp
inc
xor
dec
add
sub
add
mov
sbb
int3
xor
adc
imul
fpatan
sub
into
lret
xor
and
test
sbb
jmp
popa
push
fildll
cld
cmpsl
dec
sub
cwtl
scas
test
in
adc
mov
mov
popa
outsb
lcall
push
xor
mov
scas
ret
out
cwtl
xchg
leave
xor
xchg
sbb
mov
aaa
jbe
out
icebp
pop
pusha
add
or
mov
rol
movsb
add
mov
mov
adc
fwait
push
cmpsl
and
dec
fstpl
js
mov
std
xor
lods
push
mov
or
subb
add
add
loopne
add
lds
sub
iret
cwtl
adc
xor
xchg
popa
push
lret
mov
add
lret
mov
cs
or
or
mov
clc
sbb
adc
xchg
mov
outsb
lock
cwtl
add
loopne
and
inc
mov
popl
mov
fistpll
add
popa
stc
pop
mov
fiaddl
and
out
mov
adc
pusha
or
int
dec
fprem
divb
pusha
jmp
outsb
rcrb
js
and
iret
and
inc
std
mov
push
jae
adc
mov
lock
inc
push
out
inc
mov
mov
push
popl
sub
cs
rcrb
dec
inc
ret
out
or
lahf
popa
outsb
push
ret
or
int
mov
andb
cwtl
adc
stc
mov
lret
loopne
push
push
pop
inc
mov
popl
mov
leave
ds
out
daa
int3
push
pusha
loopne
mov
dec
sub
test
jne
pusha
add
fistps
int
mov
jl
sbb
or
icebp
scas
int3
lods
pusha
sahf
test
pusha
mov
fcomip
int
out
mov
pusha
add
mov
jle
add
mov
ret
pop
pop
rclb
xchg
into
orb
ja
or
xor
pop
pusha
jle
andb
push
pusha
lock
bound
scas
mov
add
int3
outsb
in
iret
add
jl
sbb
in
xor
lds
dec
mov
pop
cmp
lret
mov
dec
xor
sub
xor
lods
pusha
xor
and
xchg
mov
push
mov
pusha
filds
insb
xor
je
lods
pusha
sub
add
iret
pop
add
and
iret
jl
or
ja
adc
test
int
dec
lret
mov
int3
adc
lock
in
dec
xchg
mov
mov
cmp
jo
aad
scas
mov
pusha
push
mov
sub
mov
pusha
push
xor
popl
enter
iret
popl
mov
fdivrs
cmp
xchg
outsb
sbb
leave
or
iret
lock
je
es
lret
sub
rolb
xchg
les
lock
cmpsl
scas
outsb
pop
popa
mov
loopne
movsl
add
adc
jae
xor
xchg
xchg
out
sub
in
es
push
sti
pop
rolb
push
fadd
lret
sub
lock
or
int
xchg
in
mov
popa
and
shlb
jae
mov
or
popf
jmp
das
add
mov
push
add
pop
addr16
ja
jl
push
inc
fistpll
stc
gs
pusha
sbb
bound
stos
faddl
shlb
push
outsb
dec
cmpb
mov
popa
pushf
test
dec
and
cld
decl
xor
add
xor
loop
cs
jae
in
push
adc
push
mov
dec
cld
clc
or
xor
lods
sti
inc
loopne
inc
xchg
shll
adc
adc
add
pop
push
arpl
popa
adc
push
pop
inc
fidivs
test
rdpmc
mov
add
pop
sbb
or
repnz
loopne
and
insb
sbb
adc
adc
mov
rcrb
push
jns
in
xchg
and
loopne
pusha
sbb
or
out
adc
jae
inc
in
cmpsl
jle
mov
insl
repz
movsb
rclb
stos
jb
push
xchg
inc
adc
or
pop
add
mov
add
nopl
or
push
popa
sub
or
xchg
ffreep
lret
inc
or
das
cmp
clc
or
xor
add
sbbl
lea
xor
stos
pop
pop
dec
or
je
and
fwait
and
loopne
sbb
rorb
outsl
mov
or
mov
and
add
shl
shrb
jmp
jl
or
sbb
push
push
mov
loopne
mov
add
icebp
adc
dec
pop
aam
or
inc
pop
insb
sbb
adc
popa
adc
inc
lock
andl
inc
loopne
nop
idivl
andl
jae
icebp
jmp
nop
push
inc
mov
loopne
aam
popa
les
stos
pop
jl
sbb
lods
sub
dec
push
lods
dec
xchg
jo
add
rclb
or
sub
into
popa
or
pop
cmp
adc
aad
mov
fadds
xor
pop
xchg
lret
push
pop
add
add
push
jl
adc
adc
jns
in
inc
push
ror
xchg
sbb
pusha
sahf
popa
cmp
pop
push
xor
into
mov
push
or
ds
mov
clc
adc
jno
mov
insb
popl
mov
outsb
clc
mov
adc
sbb
mov
pop
shll
xor
sahf
sti
fld
inc
pusha
jl
or
lock
hlt
adc
rcll
mov
outsb
loopne
out
imul
cmp
and
push
in
cmpsb
add
or
jecxz
fistpll
and
adc
xor
adc
mov
fidivs
jo
les
loope
mov
pop
arpl
pop
add
ja
ret
ss
aaa
jo
add
jp
add
mov
ret
inc
icebp
jne
jae
mov
mov
js
inc
and
stc
add
ds
jo
add
movsl
repz
ja
cmp
sub
lar
add
push
or
in
test
xchg
adc
out
addl
adc
cmp
rcl
imull
xor
test
pusha
daa
cmp
xchg
inc
int
mov
shlb
sub
xor
sahf
inc
add
enter
jle
add
sub
adc
mov
lds
adc
adc
push
mov
lea
jnp
and
mov
cwtl
push
les
int
lock
mov
call
dec
sbb
nop
or
dec
enter
mov
pusha
andb
mov
or
adc
popa
sub
mov
lods
dec
les
mov
inc
js
adc
mov
add
test
and
and
rclb
dec
lock
fneni(8087
fildll
push
les
stos
lahf
loopne
mov
or
loopne
adc
jnp
int3
ret
mov
mov
adc
mov
ficompl
insl
push
pusha
lock
cmp
movl
movb
mov
push
rcrb
xchg
inc
jno
sub
mov
pusha
add
jg
inc
lds
mov
pop
fstpt
pusha
fsubrs
lea
adc
cmp
aad
lds
adc
sbb
lds
rol
sbb
pop
add
aaa
adc
ret
icebp
adc
jmp
ja
add
jg
popl
iret
out
cltd
ret
ja
jl
mov
mov
lock
mov
sub
add
pusha
out
xchg
xor
sub
pusha
rolb
ret
test
in
jge
pusha
andb
xchg
push
xor
imul
pop
rcrb
in
icebp
cmp
dec
stos
xor
or
pop
dec
mov
gs
inc
or
lods
test
mov
cmp
inc
test
pop
and
popf
loopne
mov
add
imul
inc
movsb
xchg
add
mulb
cmpsb
sbb
call
test
add
pushf
xorl
dec
sbbl
inc
popf
add
mov
add
popf
insb
pusha
sbb
ret
xor
pushf
mov
jbe
and
cmc
scas
push
nop
inc
and
test
cmpsl
jae
inc
and
dec
jmp
xchg
sarb
into
xor
pop
pusha
push
mov
pop
dec
xchg
sub
pusha
out
push
imul
aad
pusha
mov
push
js
sbb
stos
lcall
add
outsb
popa
imul
and
rorx
xor
xor
xor
xor
sbb
jo
xor
rolb
jp
and
pusha
fadds
and
loopne
pop
dec
movsl
fbld
call
and
and
jmp
sahf
xor
stos
inc
and
test
and
inc
lret
pusha
lock
jae
xchg
mov
adc
scas
xor
pop
push
and
jl
adc
lahf
fistl
and
lock
push
cli
out
popf
ljmp
mov
insb
pusha
cmp
fbstp
fnsave
out
mov
xchg
adc
cmp
test
out
push
and
push
adc
mov
loope
call
sub
and
dec
shl
pop
lods
data16
lods
lret
cmp
dec
inc
fiadds
push
cmpl
dec
loopne
popf
mov
push
mov
pop
es
sahf
mov
rorl
and
mov
push
jns
mov
andl
lret
and
test
add
test
cwtl
pop
lea
jno
movsb
pop
sbb
inc
and
mov
inc
fnstenv
cmp
jmp
cld
dec
add
lea
stc
cwtl
les
mov
popl
xor
aas
cmpsl
dec
icebp
dec
mov
subl
adc
xchg
xor
shrl
push
and
mov
add
rclb
xor
sbb
mov
gs
and
scas
or
scas
jl
or
mov
push
inc
push
inc
pushf
and
sbb
push
xor
and
mov
add
into
rorl
dec
mov
notl
mov
or
pop
loopne
jp
pusha
xchg
adc
mov
test
xorb
inc
out
pop
insb
incl
mov
outsb
push
and
push
jnp
sub
testb
mov
orb
lods
or
xor
outsb
jo
mov
xchg
cwtl
xor
mov
loope
iret
clc
add
or
in
or
fadd
and
roll
stos
add
pop
lcall
adc
cmp
adc
sbb
sub
faddl
cmp
std
jne
push
sub
push
cmp
dec
subb
push
rcrb
stos
dec
add
scas
test
jecxz
mov
push
adc
pop
add
pop
pop
mov
cmp
lahf
maskmovq
testl
add
fildl
pop
push
inc
mov
mov
clc
inc
in
sub
inc
sub
data16
sbb
incl
das
cmp
inc
outsl
mov
xor
dec
out
add
adc
xchg
inc
xor
fcoms
and
push
push
add
out
jg
push
mov
shr
rcl
jg
int3
shll
aam
mov
push
orb
pop
divl
jle
cwtl
scas
sti
add
push
pusha
test
dec
ret
in
shll
out
xchg
dec
andb
jae
push
xorb
mov
pop
fistps
push
or
push
repz
add
lods
mov
imul
ret
lea
inc
jecxz
sbb
sbb
daa
inc
or
mov
fsubr
outsb
cli
sub
cmp
sbb
add
mov
jo
cmpsl
adc
in
ja
inc
out
mov
or
and
lret
mulb
sahf
ljmp
dec
test
js
sub
mov
sub
adc
xchg
inc
rol
adc
sbb
out
lahf
sarl
jge
cmp
mov
ror
andb
stc
loopne
and
inc
rcll
xor
repz
pop
xor
stos
xlat
push
enter
movsb
leave
lock
sbb
insb
adc
pop
outsl
or
addr16
and
add
pop
sbb
pop
mov
lret
insb
and
or
in
add
or
test
jle
inc
xchg
pop
jae
xchg
pop
push
stos
nop
lods
mov
and
test
popa
fsts
xchg
add
push
orl
test
push
dec
mov
push
and
mov
aam
or
test
inc
cmp
xchg
ds
repnz
popa
inc
push
xor
pusha
sahf
dec
and
jmp
add
aad
xchg
sub
in
shlb
in
add
or
gs
jnp
bound
out
add
sbb
div
sbb
mov
ds
andl
lret
hlt
adc
pop
adc
in
add
decb
push
sar
leave
mov
pushf
add
adc
mov
inc
sbb
push
repz
sbb
or
out
and
push
sbb
add
ds
jns
lcall
movsb
sbbl
call
adc
insb
orb
xchg
sarb
push
cmp
pop
mov
roll
cmp
arpl
lock
push
cwtl
cmc
and
pop
pusha
imul
add
sub
iret
inc
insb
and
and
push
pop
fldenv
pop
out
test
push
les
sbb
push
cmp
push
mov
jmp
add
add
cli
adc
inc
add
xor
lds
out
sub
movsb
in
andl
or
mov
rorb
add
bnd
mov
add
sbb
and
sbb
and
es
mov
arpl
xor
or
mov
adc
add
sub
in
or
iret
negb
sbb
fcmovnb
mov
stc
test
pusha
sbb
sbb
dec
add
aad
out
clc
div
xchg
add
testb
fs
enter
bound
into
pop
xchg
jbe
lret
or
imull
push
jns
stos
mov
into
jae
test
pop
cmpsl
sarb
add
lret
add
ret
lcall
push
push
push
hlt
mov
cmpsb
adc
inc
mov
and
push
or
pop
movsl
jno
add
ds
jns
int
out
and
add
filds
cmp
iret
out
mov
mov
push
addl
jmp
ret
sbb
adc
fbstp
mov
sbb
das
and
add
test
and
mov
daa
xor
adc
loopne
imul
add
pop
push
push
adc
inc
das
je
dec
add
xor
xchg
xor
sbb
dec
ficoml
cwtl
testl
push
test
pop
leave
cwtl
add
adc
lods
nopl
cwtl
inc
js
mov
es
xor
negl
inc
les
nop
sbb
inc
mov
aas
sub
rolb
cli
xor
sar
push
dec
lock
inc
xchg
add
mov
push
push
test
push
mov
loope
test
cmp
mov
and
in
mov
mov
pusha
sub
xchg
sbb
mov
invd
subl
sbb
dec
inc
sbb
pop
xor
dec
dec
mov
sub
leave
mov
xor
test
cs
and
xlat
or
mov
inc
mov
inc
or
pop
loope
mov
ret
out
jns
in
in
loop
enter
adc
insb
sbb
data16
add
filds
xchg
or
int3
sti
filds
in
mov
pop
pop
and
int
sub
stos
enter
inc
mov
add
aad
cmp
add
fwait
data16
adc
imul
add
xor
shrb
idiv
adc
jno
nop
sub
movsb
add
jae
add
sbb
adc
pop
push
push
and
push
insb
outsl
xchg
sbbb
jb
stos
push
mov
popf
jb
mov
int
loopne
iret
dec
sub
cltd
rclb
cmp
rcrl
add
jg
sbb
mov
scas
sbb
aam
and
enter
jmp
stos
sbbb
jnp
mov
mov
and
fs
mov
repz
data16
insl
fs
add
or
cmp
dec
adc
daa
inc
adc
mov
cmp
push
pop
sbb
shlb
cmp
sti
lahf
mov
aam
add
cmp
jmp
sbb
push
pop
lock
cs
adc
mov
mov
xor
xor
xorb
dec
sub
xchg
push
pusha
pop
pop
rolb
push
leave
loopne
outsl
popa
add
jmp
pop
cmc
or
jle
mov
negl
int3
add
cwtl
mov
inc
dec
mov
mov
addb
jmp
jne
and
pop
sysenter
repnz
sbb
movsb
adc
pop
inc
xchg
popa
add
bound
xchg
sti
sub
inc
add
aam
cmp
sbb
pop
pusha
imul
sbb
add
popf
or
test
insl
outsb
fsincos
and
mov
pop
pusha
push
dec
iret
inc
xor
cmp
add
sub
dec
cmpsl
mov
sbb
ja
push
roll
add
lock
add
clc
push
fbld
add
les
ja
cmp
add
pop
xor
mov
push
mov
and
cmc
in
test
inc
jnp
ret
mov
pop
xchg
es
cmp
pop
jmp
and
push
xor
lret
mov
decl
cmp
pop
jg
loopne
lock
or
mov
iret
adc
add
xchg
jp
pop
cmp
xor
shll
test
add
xchg
jle
clc
out
add
pop
out
cli
icebp
js
sbb
int3
sub
cltd
in
shlb
mov
push
xor
push
outsl
mov
add
sbb
jne
jno
add
out
js
add
inc
cmp
mov
jns
iret
jae
add
xchg
add
sbb
mov
loop
jo
add
das
aad
cltd
dec
cmc
jne
out
lret
xchg
int3
xchg
dec
or
inc
cltd
mov
pop
add
jo
test
std
dec
add
test
xchg
test
fnsave
inc
rorl
add
push
movsb
xor
add
add
out
mov
add
pop
xor
dec
xor
aaa
in
or
les
mov
enter
ret
cmp
xor
cmp
in
mov
shlb
inc
xchg
xor
add
cmc
mov
add
jmp
cmpsl
out
add
call
jns
mov
ljmp
int3
ljmp
adc
ja
xorb
sbb
repz
mov
call
gs
mov
loopne
inc
aas
sub
fcmovnb
sbb
insb
mov
cmp
fsub
les
lock
add
xchg
mov
sbb
inc
and
fs
icebp
or
test
inc
std
xorb
adc
add
aaa
dec
jl
fwait
add
ja
xor
mov
mov
loopne
sbb
mov
stc
pop
pusha
ffree
adc
fldz
mov
add
lods
cmp
daa
xlat
iret
push
int3
and
repz
add
mov
add
ret
add
sub
jns
xchg
add
pusha
sti
sub
cltd
push
add
lahf
ret
adc
outsb
xor
xchg
and
mov
sub
mov
pop
mov
lock
mov
add
hlt
fadds
sub
inc
rcrb
out
ss
pop
pop
lds
push
lahf
in
adc
xchg
icebp
cs
add
push
sar
imul
mov
stos
leave
mov
lahf
and
xchg
add
mov
mov
mov
sbb
ljmp
cld
and
add
push
fistpl
aaa
out
rcrl
scas
add
xchg
testl
jbe
mov
xlat
xor
push
mov
mov
add
push
sete
push
mov
fs
aaa
shlb
pop
push
push
orb
pop
dec
add
and
fnstsw
adc
sbbl
aam
add
cmc
sub
popa
cmc
lock
or
mov
xlat
add
cmp
lock
adc
scas
add
mov
sub
add
adc
out
das
add
pushf
gs
add
lds
lock
sbb
jmp
lret
pop
pop
xor
mov
sub
xlat
adc
push
lods
mov
dec
stc
add
jno
jle
fbld
add
pop
jecxz
jo
out
jle
pop
lods
in
nop
ljmp
add
stos
movsb
and
push
jg
fists
in
add
pop
sub
add
dec
mov
jo
add
mov
add
jno
xchg
pop
inc
aad
push
xchg
ret
ret
pop
push
int3
add
push
lret
mov
cmp
sub
inc
cltd
mov
incl
and
xchg
ja
sbb
shll
add
or
mov
sbb
cld
enter
dec
push
repz
add
loop
jge
int
add
stc
imul
mov
dec
mov
mov
insl
add
jno
stc
fs
add
rorl
lcall
out
inc
stos
adc
iret
add
inc
ja
add
sbb
nop
sub
bound
lds
add
jno
jge
xlat
pushf
pop
add
push
popf
call
test
jno
pop
add
repz
dec
pop
decl
sbb
int3
aad
mov
add
test
fcomps
cmp
xor
mov
push
add
adc
nop
sbb
call
cld
or
sub
dec
or
dec
xor
add
ret
bound
pop
nop
mov
lahf
add
xchg
pop
mov
fdivl
int3
ss
xchg
sbb
cmp
dec
ret
addr16
arpl
hlt
mov
mov
jp
add
inc
adc
add
lahf
ja
mov
xchg
mov
inc
out
cs
sbb
scas
sub
add
loop
sub
cmp
cmpsb
mov
jge
or
add
fcmovne
mov
mov
stos
cmc
xchg
aam
sbb
add
xlat
ret
xor
cmpsl
pop
xchg
dec
sbb
insb
add
popa
rorl
rorl
jo
or
adc
lods
adc
sub
add
scas
jge
inc
scas
sub
cmc
add
pop
leave
sub
aam
sub
dec
add
pushf
lahf
adc
call
rorb
popf
mov
add
sti
lret
xchg
dec
addb
pop
add
push
imul
pop
lret
jb
sub
pusha
dec
or
jge
pop
mov
dec
xchg
mov
or
mov
mov
add
xor
xor
xchg
inc
clc
test
push
stc
hlt
lock
mov
rcrb
push
scas
es
nop
cmp
out
xchg
pop
pop
jecxz
dec
cmp
xchg
repz
cwtl
mov
je
sahf
test
insb
fdivr
mov
sbb
es
push
into
xlat
add
add
sbb
jp
add
xchg
pop
push
cmp
inc
add
aam
insl
add
imul
mov
push
jecxz
pusha
test
loopne
mov
daa
or
dec
lret
jg
rolb
scas
setb
pop
sbb
mov
les
sub
jge
mov
testl
inc
fstps
test
bound
je
lods
filds
inc
fsubrl
xor
aad
sub
xchg
jge
adc
jb
mov
xchg
mov
pop
ret
jge
mov
jecxz
ficomps
xchg
mov
xchg
roll
cmp
jecxz
pop
add
mov
xorl
mov
shrb
add
and
clc
add
test
mov
data16
add
cli
add
fiaddl
stos
add
stos
daa
mov
pop
pop
or
mov
add
add
mov
jnp
shlb
divl
arpl
add
cmpsl
cli
sbb
and
mov
jge
pop
add
add
out
jl
fcoms
out
lcall
sbb
sub
dec
sub
add
data16
mov
je
mov
jb
aaa
lahf
andb
adc
repnz
mov
call
loopne
jb
in
jmp
push
add
jmp
rcrl
scas
sbb
xor
inc
and
nop
lods
in
add
and
movsb
push
dec
jge
xchg
and
icebp
and
mov
push
jns
inc
mov
pusha
add
les
add
mov
sub
xor
and
jno
add
push
test
ror
sbb
cmp
mov
sahf
out
and
pusha
ds
add
push
add
xorb
pushf
add
push
insb
dec
cmc
ja
gs
stc
xchg
es
add
push
or
cli
cmp
lods
mov
clc
add
jle
sbb
divl
jmp
mov
add
push
clc
xchg
cmp
pop
add
mov
inc
dec
add
daa
mov
inc
xchg
pop
jnp
push
mov
dec
sbbb
lahf
add
dec
scas
and
ja
insl
add
out
sbb
xchg
mov
ljmp
mov
mov
cwtl
xchg
cmp
call
mov
movsl
lret
lret
aas
movl
out
jns
add
or
add
mov
ds
ret
inc
rorb
pop
add
loop
sbb
cwtl
in
out
add
and
imul
daa
mov
cmpsb
add
aam
ret
or
pop
add
pop
or
rorl
int3
and
shl
adc
arpl
pop
add
push
cmpsl
lret
scas
jp
testl
mov
inc
rolb
cmp
call
mov
mov
push
add
jns
jae
outsb
add
or
bnd
leave
das
clc
inc
call
cs
mov
cld
shlb
dec
in
add
lcall
int3
or
cmpb
outsl
das
add
daa
ja
cli
mov
sub
and
cmp
outsl
aam
lret
sub
push
pop
add
jecxz
jle
pusha
les
or
add
outsb
dec
in
arpl
push
pop
fmulp
cmp
mov
je
cmp
jle
and
xor
movsb
jge
jo
add
mov
lcall
jl
pop
add
sbb
es
jnp
push
mov
add
mov
ds
aad
push
xlat
sub
fs
pop
bound
mov
sub
dec
xlat
mov
lahf
lods
arpl
jge
faddl
mov
dec
push
sub
dec
xlat
or
and
mov
adc
add
jl
pop
ljmp
jo
adc
sahf
sub
add
sub
inc
hlt
test
push
pop
dec
mov
xor
in
orb
add
xor
mov
jle
push
add
cwtl
cwtl
fnstsw
mov
add
mov
test
add
idiv
or
scas
add
cs
test
and
add
jmp
loopne
xchg
into
repnz
mov
and
ja
pusha
mov
icebp
push
lea
out
adc
mov
and
dec
fsubl
dec
add
cltd
nop
shrb
mov
sub
pop
lcall
mov
push
gs
in
adcb
lret
shll
cmp
add
inc
aad
pushl
ret
and
cmpsl
data16
add
lcall
pusha
mov
je
cs
pushf
sub
mov
cmovl
lcall
inc
push
dec
pop
add
movsl
mov
dec
add
repnz
dec
cmp
inc
add
gs
inc
jbe
subl
int
inc
arpl
ret
dec
sub
call
push
jmp
sbb
xor
mov
sbb
push
test
nop
sbb
push
mov
mov
xchg
ja
popf
mov
add
lds
mov
jb
in
push
fbld
orb
or
jne
dec
or
xor
in
xlat
lods
ret
mov
sub
add
leave
and
mov
ret
stos
aaa
add
ror
rolb
xchg
sub
lods
pop
ret
lods
ror
lcall
rcr
fadds
mov
or
adcb
out
push
nop
adc
cmp
lds
enter
jle
leave
jb
xchg
lock
jns
pusha
cmp
xchg
ret
mov
or
push
cmp
or
cmpsb
xchg
imul
stos
std
or
mov
dec
add
xchg
cmp
enter
scas
sbb
sahf
add
gs
cmp
xchg
jle
nop
push
hlt
addl
sbb
jp
dec
enter
add
lcall
adc
sbbb
cmp
sub
jle
hlt
jno
add
in
insb
add
addr16
subb
inc
cld
jmp
mov
inc
jle
xor
jnp
adc
jae
and
movsl
add
in
or
push
test
xchg
stc
mov
in
and
std
cmp
cld
outsl
inc
jo
scas
gs
mov
xchg
loope
mov
test
mov
enter
adc
mov
or
sbb
loopne
push
jnp
loope
lock
loopne
aad
xor
rolb
and
add
imul
fwait
add
test
pop
icebp
and
add
stc
and
sub
add
loopne
int3
push
jb
cmp
popa
mov
movsl
xor
or
mov
add
jecxz
mov
add
xchg
les
aas
nop
inc
or
push
lahf
insl
xchg
dec
es
dec
popa
pop
rcrl
jae
push
sub
divl
ficoml
or
mov
mulb
mov
mov
push
add
out
jp
add
rclb
rcrl
scas
xchg
sub
dec
jnp
jl
and
pop
jecxz
stos
rolb
test
or
add
mov
dec
dec
mov
sbb
mulb
xchg
mov
mov
cmp
push
loopne
xchg
maxps
add
inc
dec
mov
mov
add
and
add
adc
rcll
in
mov
jb
jmp
push
add
shrl
jns
cmpl
sbb
icebp
mov
mov
add
lret
xchg
roll
stos
out
mov
les
mov
int3
mov
arpl
cmpsb
ljmp
ss
scas
pop
inc
stos
pop
or
pop
and
push
mov
mov
mov
mov
and
psubsw
mov
add
stc
mov
add
xchg
lock
sbb
mov
add
repnz
cmp
scas
add
add
call
shld
add
add
xchg
mov
inc
adc
imul
aam
andl
push
dec
mov
push
mov
jge
shl
cmp
xchg
outsb
add
xchg
mov
insl
cld
sbb
xor
insb
lock
push
jo
in
and
add
lahf
push
movsl
and
mov
inc
cmp
inc
imul
cmp
sub
inc
fildl
sub
adc
add
arpl
xchg
jge
add
das
sub
jne
push
inc
mov
inc
les
sub
inc
xor
test
add
in
add
add
add
pop
pop
add
fisttpll
test
fistps
inc
in
add
leave
mov
jnp
adc
mov
js
cmp
sbb
dec
push
shrl
cwtl
cmp
inc
ret
cld
jecxz
lock
std
mov
movsl
aam
and
push
in
push
pop
pop
cli
push
fadds
lcall
or
sti
add
xorb
xor
test
add
xchg
stc
mov
sbb
add
pop
rcrb
mov
loopne
push
lock
add
pop
fmul
sub
xchg
add
mov
cmpsb
enter
stos
sub
adc
aad
add
lahf
pop
addr16
pop
add
cmpsb
push
pusha
and
pop
mov
fldenv
inc
loopne
and
lds
dec
lock
push
stos
nop
outsl
imul
fadd
add
mov
bound
in
adc
fwait
xor
sbb
sub
in
lea
int
xchg
out
sahf
add
cmc
push
mov
mov
mov
add
inc
hlt
popa
cltd
adc
add
mov
xchg
push
test
add
leave
xchg
inc
fwait
loopne
pop
in
js
sarb
pop
je
enter
aad
add
xor
out
dec
sbb
rolb
cs
add
das
fildl
dec
fwait
mov
jle
push
mov
subl
mov
jl
mov
or
add
push
sti
cmc
mov
test
mov
iret
adc
and
mov
divl
fs
pop
ja
inc
push
data16
add
mov
mov
mov
jnp
add
in
xchg
add
xor
addl
je
ret
lds
fcoml
push
adc
popf
hlt
mov
push
mov
sub
push
jo
add
mov
mov
mov
cmp
pop
mov
push
and
into
out
push
ja
lea
mov
jmp
aam
add
enter
stos
nop
xor
add
and
and
enter
dec
clc
incb
stos
dec
das
mov
cwtl
inc
push
push
rcll
cltd
add
sub
pop
add
movsl
pop
les
xchg
rcr
sti
lret
adc
sub
inc
aaa
add
les
mov
and
add
inc
movsl
clc
int3
xor
ja
fsts
cmp
sub
push
fwait
xor
negl
add
and
xchg
leave
sub
sub
and
cmp
orb
sbb
pushf
cmp
outsl
jno
push
add
dec
xchg
pop
je
or
lret
and
scas
dec
hlt
fidivl
loop
and
push
push
outsb
leave
add
aas
mov
sub
push
add
jns
out
aam
xor
mov
repnz
add
push
or
push
popl
jle
cmp
incl
dec
xchg
pop
xchg
ja
pop
add
rolb
out
jecxz
fwait
add
mov
test
dec
inc
test
xchg
add
pushl
and
push
xchg
add
mov
outsl
pusha
sub
mov
cmp
push
push
aas
add
or
lret
add
cmp
pop
add
das
fwait
cmpsb
add
mov
jbe
and
add
mov
jg
xchg
mov
add
scas
out
pop
stos
pop
jo
lret
subb
cmp
dec
adc
push
into
mov
lods
pop
push
xor
shrb
scas
jb
xchg
jg
cmp
xchg
inc
add
push
add
out
or
in
mov
cmc
push
jmp
in
adc
adc
push
xlat
add
mov
in
fadds
leave
jb
or
nop
mov
sbb
pop
lods
push
or
add
sub
je
lret
jo
rolb
ret
fcomp
ret
or
add
jnp
fiadds
test
sub
ret
dec
cmp
xchg
mov
add
cmp
ljmp
shlb
stos
lret
popf
fadds
imul
xor
sub
pop
add
inc
sbb
lcall
cs
lods
stos
loopne
mov
dec
scas
repnz
mov
lcall
xor
pop
add
jno
cli
adc
andb
test
mov
frstor
add
or
sbb
repz
push
jb
es
pusha
out
sbb
in
xor
xor
ficoms
roll
iret
dec
dec
lret
or
fbld
pop
mov
call
subb
fs
rcr
sti
adc
loopne
repnz
js
mov
mov
push
add
xor
add
daa
andb
xchg
inc
lret
mov
jo
sub
and
outsl
cmpsl
arpl
int
dec
pushf
repz
and
sbb
popf
xor
push
in
add
aam
js
mov
jae
adc
lds
xchg
mov
or
xor
jp
xchg
add
push
outsb
lret
pause
sub
stos
push
clc
sbb
subl
adc
jp
or
repz
push
jge
add
cmp
pop
jecxz
lock
bound
adc
mov
ror
add
pop
pop
pop
push
xlat
aad
add
jne
jge
mov
repz
and
scas
dec
inc
divb
add
jno
clc
jne
or
dec
or
xor
fadds
dec
sarb
pusha
sub
ljmp
add
loopne
or
cmpl
push
add
jbe
sbb
imul
fadd
ds
cmp
notb
rolb
cli
push
sub
fadds
sahf
push
lea
das
inc
add
xor
lds
push
sahf
and
lahf
js
cmp
mov
sbb
mov
cli
cmp
dec
add
outsb
dec
xchg
mov
mov
or
out
faddl
and
cmp
cld
jns
add
inc
and
add
dec
sub
call
cmp
and
sbb
sbb
daa
xchg
aas
pop
negl
add
or
arpl
outsb
xchg
in
aas
or
movsb
xchg
push
lret
mov
push
or
cld
mov
jmp
add
adc
je
adc
mov
or
mov
or
pop
push
sub
lock
adcl
add
jne
dec
sub
iret
shrb
enter
jnp
lret
fwait
mov
cmpb
push
int3
pop
lret
adc
cmp
mov
or
lcall
push
rcll
aas
add
fstl
dec
xor
push
jb
outsl
sub
sub
inc
aam
mov
push
add
xchg
faddl
movl
mov
jno
dec
in
rcl
sbb
aad
xor
test
add
stc
out
bound
outsb
inc
add
ret
hlt
pop
adc
aaa
xor
sub
in
mov
mov
mov
mov
scas
popl
enter
mov
outsl
icebp
sbb
and
addr16
jae
sub
jge
inc
decb
cmp
cs
loop
or
jmp
inc
push
cmp
jb
mov
test
bound
push
outsl
mov
jle
test
loopne
inc
xchg
push
mov
sbb
outsl
dec
xor
mov
je
add
dec
loope
mov
jp
sbb
xor
add
mov
xchg
add
imul
bound
sub
je
sar
xchg
fcomps
mov
jmp
mov
add
sbb
loopne
jmp
add
sahf
nop
aas
int
repnz
inc
xchg
test
std
je
jno
mov
add
push
sub
shl
xor
decl
sbb
sbb
outsb
or
pushf
push
ret
xchg
icebp
lret
pop
dec
add
and
js
add
sub
inc
pop
jbe,pt
call
and
mov
add
sub
fidivl
jg
pop
push
dec
xlat
aas
rolb
cmp
sbb
mov
push
cmp
or
pop
xchg
cmp
std
mov
stc
xor
out
pop
gs
or
test
or
push
pop
mov
push
jno
es
cmp
sub
js
lock
in
mov
xchg
dec
and
mov
sbb
loope
sub
inc
pop
mov
popf
mov
mov
add
pop
add
in
aad
sbb
ret
add
mov
icebp
sub
xor
pop
cmpsb
dec
aam
xchg
add
adc
insb
add
setb
insb
iret
es
or
inc
mov
dec
sbb
xor
xor
insl
mov
test
add
mov
out
sbbb
sub
push
mov
rcr
jae
add
jl
adc
pop
in
jno
cwtl
mov
and
inc
xchg
sub
adc
repz
jge
sbb
pop
fcmove
and
add
aad
pop
testb
mov
es
daa
sub
je
fdivp
leave
dec
clc
enter
push
sbb
jl
add
testb
data16
or
movb
mov
jge
or
mov
aam
loop
and
mov
fiadds
dec
pop
mov
rcll
pop
add
jg
add
xchg
sub
cwtl
dec
xorb
mov
jno
scas
cmpsl
mov
fimull
lret
mov
pop
mov
pop
pcmpeqd
test
imul
and
push
adc
add
int3
push
jbe
sub
mov
add
or
adc
mov
ja
bound
or
clc
into
push
push
shll
pop
push
ja
lret
push
pop
pop
add
cmpsb
push
add
divb
daa
ljmp
add
stos
shrb
es
inc
leave
xor
adc
out
xor
push
xchg
les
xchg
nop
int
mov
dec
loopne
enter
repz
xor
dec
mov
cld
push
or
xchg
popl
enter
ja
scas
pusha
subl
out
data16
jnp
fs
hlt
add
mov
jle
addl
and
out
orb
mov
jb
mov
push
push
lahf
pop
pop
add
sub
loope
add
repz
and
add
add
xchg
cmp
pop
mov
les
pop
loopne
movb
stc
xor
scas
mov
push
addr16
add
sbb
jl
push
push
in
and
test
jns
or
fwait
loope
add
lods
popa
xchg
jnp
std
pop
mov
pop
add
movsl
pop
dec
out
add
fdivrs
jge
dec
pop
mov
or
push
repz
pop
lret
andb
sub
mov
sbb
mov
cmpsl
xchg
mov
nop
loop
inc
dec
loop
add
clc
jg
or
repnz
cmp
push
dec
in
adc
add
les
bound
pop
outsb
insl
inc
pop
mov
loopne
add
imul
add
mov
inc
pop
add
call
insl
aas
pushl
mov
ret
sub
lods
or
add
sbb
sub
in
mov
xlat
pop
les
enter
mov
je
xor
addr16
or
loope
cmp
or
and
xchg
xchg
adcb
add
pop
push
in
adc
dec
inc
std
in
stos
pop
cmp
mov
test
jg
loope
or
cmp
pop
mov
pusha
mov
jns
ja
add
popa
dec
dec
ret
add
xchg
lock
je
add
push
aad
push
lcall
out
ss
add
sub
mov
mov
insb
inc
jp
stc
mov
repnz
push
lods
fldl
lea
jecxz
paddusb
clc
cs
shrb
inc
mov
les
sbb
xchg
push
xor
jb
jno
adc
push
dec
iret
add
cs
test
in
repz
nop
in
orb
mov
insl
rclb
and
imul
or
int3
not
out
pop
jmp
or
daa
and
adc
jo
sar
add
mov
lret
jge
dec
add
leave
add
adc
aas
cld
clc
push
xchg
adc
jmp
dec
lret
js
sbb
int
es
mov
pop
nop
fdivs
push
pop
movb
lods
loop
adc
insl
xchg
nop
mov
adc
mov
stos
pushf
push
push
loopne
loop
add
in
push
outsb
popf
xor
add
inc
fwait
pop
mov
mov
xor
subb
add
inc
js
xor
and
insb
or
inc
test
add
sub
cmpsb
insl
and
inc
test
mov
bound
add
or
adc
xor
outsl
add
lcall
rorb
xchg
dec
cltd
pop
cmp
add
dec
pop
pop
add
add
mov
leave
aam
fdivs
pop
jecxz
out
xchg
xor
shll
shrd
mov
enter
jmp
rorb
lret
dec
sub
pop
cwtl
push
adc
test
inc
inc
and
popf
lcall
pop
push
fstpl
or
in
bound
add
out
ficoml
add
sbb
ss
in
pop
sub
mov
xchg
lock
ficompl
xor
lret
lcall
or
add
add
sub
pop
test
push
add
fcoml
clc
dec
ror
imul
or
jo
dec
shl
inc
dec
xor
mov
pushf
test
sub
les
or
add
push
sub
mov
in
lock
lds
push
clc
xchg
inc
fidivrs
add
add
ficoml
push
sbb
cltd
daa
sub
movb
mov
enter
push
xchg
add
repz
mov
insl
in
mov
in
or
push
faddl
add
vcvtdq2ps
xorb
cmp
pop
mov
and
cs
fs
mov
fimull
mov
outsl
rorb
add
imul
adc
pop
adc
in
shl
sti
xor
cmp
testb
and
inc
lods
rcrb
and
mov
mov
dec
sbb
bound
aaa
cld
dec
add
sub
sub
mov
sub
add
push
adc
xor
dec
nop
inc
pop
ljmp
ret
pop
inc
icebp
stos
mov
or
fstpl
sub
orb
xor
cltd
les
cmc
jns
xchg
daa
pop
and
pop
adc
xor
adc
inc
add
loopne
push
add
push
notb
mov
push
push
and
add
rolb
enter
or
fisttps
and
ret
add
xchg
pusha
clc
cmp
mov
fwait
xchg
xchg
pusha
or
pusha
cmp
cmp
ret
pop
add
inc
lahf
push
jmp
add
mov
gs
clc
adc
in
shr
rcrb
xor
and
clc
pop
add
cmp
adc
insl
rorb
es
pop
or
aad
pop
and
pop
and
or
add
push
rcl
ftst
clc
dec
sahf
lods
add
jmp
js
push
push
dec
leave
mov
push
outsl
jnp
int3
mov
cmp
sub
mov
movsb
test
xor
sub
icebp
ds
push
fisubl
filds
jb
addr16
shlb
adc
aad
add
adcb
inc
cmp
adc
fildl
sbbb
jl
or
pop
je
add
test
jae
scas
jno
jbe
outsb
jle
pop
add
dec
and
rcrl
add
clc
mov
xor
icebp
add
pmuludq
cmp
aas
pop
shlb
xchg
mov
enter
dec
sub
out
or
es
subb
scas
dec
add
iret
mov
mov
arpl
outsb
cmp
fwait
loopne
je
jo
ljmp
and
cmp
loope
andb
scas
rorl
test
mov
add
data16
xchg
dec
push
pop
mov
pop
pop
nop
dec
xchg
in
sbb
add
or
add
iret
dec
loope
add
sbb
jle
test
mov
xchg
add
sti
add
es
ret
mov
sub
add
pop
fsubs
sbb
js
ds
shlb
adcb
int
xchg
push
xor
cmp
push
add
jge
add
or
xor
in
loop
pop
sub
cld
mov
adc
insl
addr16
aas
out
loopne
mov
cmpb
mov
out
aad
fdivr
pop
shlb
sub
fwait
or
lds
mov
sbb
mov
stc
je
pusha
test
inc
js
sub
scas
add
cmpsb
inc
cs
push
add
add
repz
sub
mov
call
xchg
mov
test
out
addl
add
lea
mov
ss
xor
push
add
cltd
push
call
add
fwait
or
xor
cmp
add
xchg
repnz
pop
push
or
std
popf
inc
xchg
lcall
sub
lods
in
aad
or
outsl
pop
xchg
rclb
jns
mov
mov
inc
lods
and
add
das
jo
add
cmp
xor
dec
cwtl
push
xchg
lret
jnp
cmp
mov
test
rcll
popf
movsb
inc
inc
mov
xchg
mov
ror
add
call
insb
and
nop
jo
pop
or
pusha
jge
add
std
dec
andb
mov
pusha
aaa
test
add
lcall
jae
add
mov
lea
arpl
les
mov
fdivrs
inc
out
movsl
pushf
pusha
test
mov
add
pop
sbb
mov
sbb
sahf
aad
or
mov
dec
push
lahf
cmpb
dec
insl
cs
lods
int
cmpsb
inc
dec
clc
add
std
mov
push
push
jae
rol
insb
push
lock
sbb
cltd
cmpsb
add
inc
push
lock
mov
push
faddl
push
sub
sbb
fiadds
mov
and
mov
push
add
push
loopne
rcr
add
daa
xchg
mov
or
xor
mov
aas
xchg
lcall
loopne
jns
jb
add
test
mov
push
adc
mov
push
insb
pop
cmp
jg
pcmpgtb
sub
jl
adc
push
andl
xchg
jne
sub
adc
add
clc
pop
aam
push
lds
mov
dec
add
adc
cmpsb
lret
jnp
shl
cwtl
cmc
enter
aas
test
cltd
mov
dec
repnz
ljmp
pushf
inc
add
in
mov
mov
xchg
rcl
shrb
mov
mov
pop
cmp
pusha
or
add
lods
sbb
in
insl
add
js
movsb
xchg
xchg
push
or
iret
imul
sbb
jmp
mov
out
mov
xor
pop
cwtl
cmp
adc
or
out
insl
or
js
clc
stos
out
add
and
and
rolb
or
mov
jbe
es
les
jo
sub
pusha
xor
outsb
out
stos
out
push
dec
pushf
pop
add
sahf
jp
stos
jbe
ffree
pop
mov
scas
xor
pop
out
pop
push
inc
inc
cmc
sbb
outsb
test
insl
cld
sub
push
sub
jo
xor
jns
int
sbb
mov
cmp
call
aad
xchg
fnstcw
enter
add
fcompl
xor
lret
jae
and
add
or
pushf
sub
or
movsl
insb
xor
leave
addr16
insb
pop
sub
dec
fistpl
adc
enter
xor
arpl
in
mov
bound
out
jle
test
adc
in
adc
or
xchg
jb
in
ds
cmpsl
and
adc
inc
or
shrl
dec
sbb
add
pop
test
xchg
sbb
push
xlat
cld
or
fwait
add
inc
dec
push
inc
ss
js
sbb
inc
dec
cmp
daa
stc
adc
sbb
push
add
ret
sub
mov
add
iret
xor
test
add
aas
and
add
mov
sti
leave
cmc
and
pop
ftst
xor
dec
xor
add
mov
add
stos
call
jae
mov
das
cmpsl
inc
xchg
ljmp
or
mov
jp
push
bound
push
mov
cmp
add
xchg
mov
adc
scas
shr
inc
hlt
sbb
in
adcb
shl
test
stc
inc
adc
clc
out
add
mov
int3
dec
lret
inc
pop
shrb
or
push
add
and
clc
into
push
cmpsl
out
inc
loop
jecxz
pop
nop
push
clc
jg
stos
adc
call
inc
push
add
lcall
or
add
jnp
sbb
mov
mov
lock
fs
test
out
dec
adc
dec
aam
add
out
dec
test
xchg
xchg
in
mov
jl
sub
pop
popa
dec
dec
add
nop
jmp
jl
add
xorl
enter
iret
inc
mov
sbb
sbb
sbb
dec
je
add
xchg
in
pop
lret
adc
add
and
or
addl
cmpsl
in
pop
or
xchg
in
sub
shlb
inc
cs
add
push
ds
xchg
adc
and
cli
rcrl
call
inc
sti
mov
dec
xor
add
cld
inc
out
jns
xchg
sub
adc
int
mov
mov
dec
pop
push
js
sub
mov
int3
pop
add
add
push
jg
call
lock
add
pop
adc
push
or
scas
in
jbe
sbb
js
aad
shrb
pop
push
hlt
cmp
std
ds
push
test
insl
push
loop
popa
add
fs
hlt
dec
test
cmp
rorb
pop
add
int3
aam
mov
cmp
xor
add
mov
xchg
xchg
sbb
loopne
loop
leave
rclb
bound
mov
or
data16
pop
cmc
xor
in
xchg
jbe
cmp
mov
daa
mov
mov
and
pop
cld
mov
shlb
dec
xlat
cmp
xor
mov
xchg
lret
int
xchg
xor
adc
stos
aad
jl
add
mov
fcoms
rcl
pusha
mov
imul
into
mov
adc
add
ss
pop
xor
add
mov
mov
sbb
adc
fdivs
dec
test
divl
add
or
mov
dec
cmp
clc
mov
sub
arpl
loop
int3
cltd
data16
cwtl
sub
jo
test
add
cmp
cmc
fcoms
les
cmp
inc
sbb
dec
jns
fs
decb
les
push
dec
cwtl
lret
shlb
inc
je
test
add
lds
mov
int
mov
jle
popa
push
and
adc
js
xor
add
stos
mov
enter
sbb
inc
loopne
dec
mov
inc
pop
mov
inc
divb
sbb
dec
cld
and
icebp
mov
nop
sbb
inc
int
adc
inc
lahf
shlb
add
mov
pop
sub
dec
inc
test
inc
sub
or
paddsw
xor
daa
nop
add
test
mov
shll
push
dec
out
mov
add
out
mov
mov
lahf
sahf
cmp
incl
xorl
sbb
sbb
or
aas
adc
popa
push
and
adc
add
xchg
cmc
scas
sub
pop
mov
inc
imul
enter
xorb
rorb
or
lcall
mov
add
jno
cmp
dec
rcl
adc
rclb
lods
jae
add
andb
sbb
push
xor
add
pop
lds
add
cmp
mov
mov
push
inc
dec
leave
faddl
bnd
lahf
jecxz,pn
enter
jae
pop
fbld
into
rcrb
adc
sbb
push
popa
repz
sbbb
pop
lods
push
jp
cmp
xacquire
sub
das
ret
scas
lcall
imul
jmp
idivb
add
cmpsl
popf
add
pusha
xor
shl
xor
jg
not
loopne
pop
xchg
and
jecxz
jae
mov
and
xor
outsb
add
jle
add
sub
add
aam
push
and
ja
out
clc
out
sti
jo
add
jns
and
cmpsb
inc
add
icebp
lahf
dec
filds
add
movsb
or
mov
xchg
cmp
xor
lods
roll
dec
dec
movsb
sarb
fiaddl
xor
push
cmc
je
adc
shl
popa
insl
jmp
xlat
pop
push
pusha
into
rorl
adc
pusha
clc
adc
mov
jg
loopne
iret
mulb
inc
add
nop
sub
test
test
fwait
mov
adc
mov
stos
mov
je
xor
sub
sub
daa
std
leave
pop
loop
add
jnp
jecxz
mov
add
ljmp
stc
aam
xor
mov
push
je
add
inc
sbb
pop
pop
pop
add
push
out
pop
test
add
jo
or
mov
sbb
inc
aas
pop
push
xorb
adc
inc
pop
in
adcl
sarl
sub
push
pop
or
iret
lods
mov
into
push
pop
je
push
sub
cmpsb
loope
sub
pop
sbb
push
mov
imull
cmp
negb
and
adc
ss
sbb
inc
xchg
dec
lret
mov
bound
mov
jl
sbb
into
stos
add
push
or
xchg
mov
scas
add
push
xchg
lret
add
ret
call
sub
repnz
add
xor
mov
lahf
pop
pop
mov
or
add
and
das
jb
cmp
orl
mov
and
arpl
dec
cmp
sahf
xchg
push
cmp
loope
ljmp
pop
fmuls
jnp
xchg
sub
iret
sub
dec
xor
sbb
cs
popf
inc
scas
adc
dec
push
mov
add
dec
adc
add
fucomi
mov
pop
das
mov
in
jae
daa
push
stc
xchg
jno
or
add
ret
dec
jbe
ror
pop
addb
or
lock
sbb
cmp
mov
add
add
adc
es
jne
aad
dec
jle
add
xor
add
and
hlt
or
arpl
ss
mov
or
jmp
aaa
cmp
mov
icebp
jge
and
add
pop
mov
inc
pop
aaa
in
add
out
push
jg
out
inc
and
add
popf
ret
add
pop
add
sbb
in
cmpsl
pop
imul
xor
add
push
and
inc
addb
mov
imul
adc
movb
andl
and
push
lods
sbb
outsl
jp
cmp
les
mov
xor
mov
shl
mov
pop
mov
cli
ja
pushf
jg
jb
and
dec
lods
add
sbb
lcall
aad
inc
add
mov
cmp
pop
add
cmp
loopne
push
mov
sub
mov
pusha
fidivrs
pop
jo
fldl
adc
cld
call
outsl
add
pop
xchg
push
sub
sti
lock
push
jbe
xlat
ficoml
dec
xchg
jle
dec
cmp
cmp
ret
pop
cli
xchg
lret
push
sub
mov
data16
push
popf
and
stos
cmpb
test
cs
xor
arpl
fsubl
add
dec
scas
ljmp
divl
adc
xchg
pop
daa
rcrl
push
and
cwtl
add
cmpsb
bound
dec
sbb
add
mov
xor
movb
call
push
add
adcl
daa
pop
pop
repnz
sub
sahf
adc
dec
xor
mov
add
es
add
mov
mov
adc
dec
mov
test
mov
xor
jae
scas
jp
fwait
cmovne
pop
cmpsl
push
sub
fcomps
and
out
ja
adc
push
outsl
xchg
mov
push
nop
and
fwait
stos
add
out
mov
cs
cmp
or
icebp
in
imul
mov
fiadds
cs
adcb
bound
in
cmp
or
pusha
jecxz
in
push
mov
out
sbb
add
fwait
or
push
inc
pusha
int3
cmp
mov
add
movsb
fsub
or
sbb
push
push
pusha
sub
adc
lret
int3
cmp
addr16
xor
sub
jg
jns
push
pop
mov
jne
sti
bound
add
push
shufps
adc
fmuls
and
int3
adc
mov
inc
add
cmp
out
pop
add
cmp
daa
dec
add
aaa
in
or
add
leave
dec
sbb
enter
xchg
fstpl
pop
femms
mov
rol
std
or
cmp
sbb
xor
ljmp
pusha
lods
pushf
push
adc
sbb
dec
jo
xchg
loope
call
mov
int
outsb
jmp
cld
int3
jecxz
xchg
stos
cmp
je
sbb
fdivrl
dec
sub
in
mov
push
cmp
add
pushl
sub
lret
add
add
sub
loopne
outsb
in
jg
add
cmp
pop
pop
add
jbe
and
insb
fstpl
test
vmwrite
pop
lret
clc
xor
ret
push
sbb
push
scas
ret
cvttps2pi
xorl
mov
es
cli
mov
pop
pop
in
add
inc
stos
jo
lds
stc
sub
ss
test
dec
in
clc
xor
stos
mov
and
dec
aam
or
lcall
sub
add
mov
or
lret
lea
cmp
pop
push
fisubrl
add
das
pop
in
lods
sbb
loope
inc
mov
jmp
xor
ds
sbb
movsb
inc
mov
ds
les
es
sub
pop
lock
mov
push
mov
ljmp
orb
ja
cli
std
sub
push
xor
sbb
xor
aas
addr16
add
outsb
daa
and
dec
enter
push
and
add
je
les
rorl
adc
mov
bound
movsl
or
fiaddl
dec
fwait
push
daa
nop
repnz
or
dec
mov
hlt
add
pop
fildll
in
sub
sbb
pop
jle
nop
jecxz
xor
mov
cmp
fnstsw
and
mov
inc
push
xchg
cli
jmp
outsb
shlb
bound
mov
jbe
and
add
inc
das
push
sbb
pop
jmp
pusha
and
scas
test
or
fcmove
shrb
mov
inc
mov
repz
xchg
jg
sub
inc
and
rcll
push
cmpsb
dec
lahf
jge
sbb
cld
daa
and
hlt
pop
or
inc
mov
mov
addr16
dec
pushf
sub
inc
push
imul
xlat
out
add
loope
add
xchg
jo
rorb
lds
insb
inc
jmp
inc
and
inc
add
cmp
pop
fldcw
jae
fistl
add
jg
jle
repnz
sbb
std
add
aad
ljmp
pop
sbb
loopne
stos
mov
inc
add
loopne
pop
push
push
mov
mov
int
mov
bts
inc
xchg
jo
dec
loope
add
lahf
fidivs
dec
mov
enter
mov
bound
fwait
add
call
inc
mov
add
sub
pop
ja
stos
lds
into
jge
mov
jae
add
jecxz
xor
pushf
cmp
fldl
cltd
repz
jmp
cmp
xchg
mov
jg
lret
orl
lcall
jl
cmp
inc
add
adc
pop
cmpsb
pop
pop
add
jno
dec
cmp
ljmp
mov
push
fildl
mov
jne
fists
shlb
add
fs
stos
sub
stos
add
gs
push
out
push
lods
cmp
add
lock
fs
sub
cmp
add
pop
sbb
addr16
mov
jl
dec
shlb
inc
adcb
jae
add
in
mov
inc
dec
add
fnstsw
or
pop
xor
outsb
loopne
cwtl
add
cmp
jl
scas
nop
orb
pop
push
stos
movsl
cwtl
and
sar
sbb
mov
mov
inc
sub
add
pop
mov
inc
xor
add
shlb
popl
adc
pop
xor
inc
pop
xlat
add
lock
add
popa
fsubrp
cmpsb
sti
repz
mov
push
dec
mov
sbb
int3
lods
in
scas
mov
lock
pop
add
jecxz
in
fbld
inc
sub
and
add
test
ds
hlt
add
add
je
nop
or
sub
test
add
movsb
and
cli
push
lahf
mov
sbb
ljmp
add
xor
loop
shlb
mov
add
loopne
je
xor
mov
and
out
repz
sub
cs
addr16
and
gs
xor
xchg
sti
cwtl
dec
sbb
out
inc
lods
enter
push
and
add
jle
add
jp
repz
add
or
in
mov
or
dec
xchg
outsb
sbb
aaa
mov
fs
rcll
rcr
adc
sbb
add
sti
mov
xchg
add
push
cmp
add
sbb
mov
sub
or
mov
and
inc
add
jecxz
sarb
add
jp
add
xchg
loopne
call
sbb
adc
xor
imul
clc
out
xor
adc
lds
divps
add
jae
jmp
add
adc
int3
mov
data16
fs
dec
dec
xchg
loopne
fadd
es
dec
cmpb
fsts
and
push
pop
les
shlb
fisubl
add
sbb
add
cmp
aaa
mov
daa
add
sarb
or
pop
call
jle
sti
or
cmp
xchg
outsl
mov
incb
into
shll
inc
mov
jmp
add
and
lods
jbe
xchg
jp
addr16
pop
repz
add
adc
sub
lock
add
xlat
xchg
pop
sub
push
add
dec
add
je
push
mov
stos
clc
push
sbb
test
pop
mov
jecxz
push
push
out
aas
cmp
push
pop
pop
pop
mov
mov
xchg
push
stos
add
inc
jne
add
or
xor
and
mov
add
add
pop
add
inc
enter
adc
and
push
rolb
out
sub
or
add
mov
fdivs
ret
int3
lods
imul
cmpsb
movsb
add
push
sti
int3
ja
pop
scas
inc
add
cmp
cmpsb
hlt
test
push
icebp
cmp
push
cmp
inc
mov
incl
ror
movsl
mov
add
inc
sub
push
mov
outsb
mov
adc
mov
add
cltd
pop
dec
adc
fisttpl
xchg
and
mov
mov
test
pop
sbb
adc
mov
dec
mov
mov
ret
mov
cmpsl
add
push
lds
outsb
cmc
push
addr16
aaa
xchg
repnz
jne
and
lahf
xchg
loopne
push
ss
add
add
or
cli
int
cmp
mov
add
cmp
scas
adc
scas
or
stc
sbbb
jmp
add
push
sub
movb
enter
mov
inc
and
jae
fstpt
add
or
fdivl
cmpl
int3
xor
test
xor
addb
loopne
daa
les
mov
adc
jo
in
inc
add
adc
xchg
cmp
jns
imull
sbb
imul
addr16
fwait
cli
dec
popf
andl
or
gs
aaa
js
xchg
repz
popa
xor
mov
inc
adc
test
push
jg
adc
add
sbb
mov
in
cmpsl
les
and
jg
nopl
fwait
push
fisttps
popf
arpl
xor
jl
xchg
sbb
mov
xchg
fsubr
sub
xor
push
push
popa
shrb
test
sbb
sub
add
imul
outsb
lahf
mov
dec
sahf
stos
adc
add
adc
jbe
mov
pusha
xchg
sub
in
ja
lea
mov
pop
add
repz
jmp
push
test
xor
adc
jae
or
clc
xchg
add
add
cmp
ficompl
std
mov
faddl
out
pusha
inc
jo
popa
dec
xchg
add
dec
mov
and
add
ljmp
out
and
jo
add
push
or
mov
rclb
frstor
mov
insl
sbb
jns
fnstenv
in
jnp
fs
or
dec
add
mov
fstl
jns
cmp
mov
daa
ror
dec
pop
sub
jo
mov
pop
outsb
ljmp
jns
add
mov
xor
jg
cld
lds
and
add
adc
push
or
mov
testb
add
sarl
cwtl
push
add
inc
ret
lods
mov
ror
leave
cmp
jnp
add
out
sub
loopne
mov
pop
push
enter
inc
test
xor
adc
pop
rorb
pop
lods
dec
pop
pop
icebp
xchg
add
pusha
decl
loopne
aaa
jmp
test
and
add
ja
movsl
ret
push
add
aaa
lcall
lea
xor
push
inc
add
jb
mov
fdivl
inc
jnp
sub
pop
cld
push
shrl
add
pusha
add
mov
jp
push
cmc
add
stos
in
push
mov
and
pop
ret
or
lahf
imul
and
xchg
cs
add
xlat
cmp
mov
push
insl
bound
popf
add
cld
int3
dec
jno
shrl
xor
push
add
aam
loopne
scas
add
mov
cmp
cmpsb
jmp
mov
dec
icebp
nop
arpl
adc
cld
hlt
popf
mov
xor
test
pop
aaa
cmp
or
loope
data16
cmp
mov
jo
dec
mov
add
cltd
mov
adc
inc
testb
mov
std
mov
push
cmp
add
mov
mov
adc
roll
pop
xchg
leave
aam
jle
mov
lahf
gs
mov
and
add
sub
cmp
std
xchg
xchg
jno
inc
fsubs
roll
or
stos
jb
add
xor
xchg
add
mov
sub
dec
je
cwtl
in
out
push
jg
add
les
inc
push
push
cmp
add
and
dec
or
fwait
pop
pop
in
jle
or
mov
sbb
leave
ljmp
add
jne
pop
xchg
mov
js
lahf
push
add
dec
xchg
cmpsb
pop
cmc
sub
cmp
in
pop
loopne
pop
dec
loop
sbb
mov
incl
cmp
call
jmp
dec
movsl
cmc
cmp
subl
bound
mov
out
adc
mov
add
arpl
jb
sub
mov
cmp
addr16
sbbb
mov
repnz
out
add
test
cmovbe
pop
and
je
cmp
insb
add
lret
test
inc
in
scas
cmpb
add
bound
mov
in
adc
sub
int
lds
mov
icebp
lods
adc
dec
sbbb
xor
jae
cmp
or
jns
daa
mov
mov
and
sub
xchg
andb
sbb
fcomip
xor
add
ds
xor
imul
pop
nop
les
out
lahf
imul
mov
aam
push
pop
mov
mov
mov
xchg
inc
pop
stos
iret
add
std
add
fs
mov
mov
test
add
cmp
and
mov
sbb
clc
insb
nop
cmpl
mov
inc
test
mov
popf
cmp
add
test
and
add
cmpsb
mov
pusha
add
push
pushf
mov
or
shlb
push
fstpl
jmp
in
enter
shlb
sbb
xchg
cwtl
test
push
xchg
mov
mov
fwait
inc
dec
sub
add
int
xchg
adc
dec
or
add
and
push
dec
aad
pop
sub
xor
or
cmpl
add
shr
mov
insb
fdiv
out
mov
icebp
test
add
and
mov
imul
mov
mov
cmpsb
and
jmp
out
movsl
lcall
mov
stc
mov
rclb
sti
jg
test
mov
and
or
sub
cld
aad
in
push
xchg
cli
jns
jb
fld
add
adc
int
pop
push
lahf
push
in
xorb
aad
dec
push
add
mov
jno
add
and
incb
mov
xor
mov
aas
je
fcoms
inc
xor
xchg
fstl
jecxz
mov
dec
ss
fistps
add
popa
pop
in
pop
pop
insb
roll
add
aam
call
jmp
add
or
in
jecxz
add
add
xchg
jl
add
sti
mov
fwait
cmp
sub
dec
dec
nop
add
cld
jbe
arpl
xlat
jo
push
mov
pop
nop
jg
mov
cltd
xchg
or
inc
and
lods
or
inc
xor
sbbb
inc
push
push
pusha
or
and
add
dec
es
aam
mov
les
and
pop
mov
je
cmp
arpl
sbb
jne
cmp
adc
shll
xorb
mov
and
repz
push
pop
adc
rorl
cli
sbb
icebp
add
mov
cwtl
adc
pop
xor
ret
sub
mov
mov
rcrl
fmul
xor
pusha
je
aas
sbb
std
fs
outsb
cmp
add
int
adcl
repnz
pop
insb
add
inc
test
xchg
xchg
dec
adc
stos
lret
inc
xchg
lret
fildll
stc
cmpsl
inc
cld
add
xchg
and
add
sub
adcb
xchg
add
jecxz
call
mov
inc
sbbl
mov
mov
in
movl
shlb
dec
sub
mov
xchg
mov
iret
pop
cwtl
pop
mov
rolb
orl
sub
inc
in
push
sbb
pop
add
out
adc
cltd
jecxz
add
push
mov
inc
and
or
scas
int
mov
stc
mov
add
pop
ret
insl
mov
xchg
xor
rclb
adc
and
repnz
add
sub
movsb
add
call
add
test
rclb
sub
imull
lods
lahf
ret
xchg
rolb
xchg
in
add
xchg
incl
test
sub
mov
sub
and
shrb
add
jmp
addb
aas
mov
xchg
dec
add
mov
iret
sti
or
ja
aad
cld
xor
add
inc
lock
cs
dec
mov
adc
stos
mov
fildl
and
sbb
cmp
clc
out
cld
pop
jns
inc
mov
testl
add
pusha
fcmovu
or
fcompl
adc
pop
jns
movsl
and
jp
add
call
lds
xchg
rorb
and
int3
ja
jnp
aaa
add
or
ret
xchg
mov
shll
aas
pop
mov
jae
and
mov
bound
dec
sbbl
call
add
pushf
mov
or
test
xorb
jae
popf
inc
push
test
add
mov
je
xlat
in
push
pop
push
lahf
inc
xchg
jbe
jns
mov
push
xchg
nop
shrb
add
or
stc
lock
loopne
pop
push
inc
fidivl
fdivr
inc
cvttps2pi
popf
xchg
jns
add
pop
jge
xorb
loope
push
in
stos
into
dec
bound
cwtl
pop
orl
cs
dec
sub
enter
in
or
cmpsl
xlat
inc
dec
jmp
add
ret
add
out
test
addb
repz
leave
repnz
cmp
sarl
dec
adc
jle
cmpsb
decb
test
or
loop
pusha
fcomps
jle
mov
je
add
pop
cwtl
inc
loopne
mov
es
clc
adc
cs
inc
inc
pop
data16
shl
ss
and
cmp
loopne
dec
dec
and
int
popa
sti
fistps
int3
and
add
js
cltd
ds
ret
enter
add
roll
adc
jp
cld
and
cmc
ficoml
and
cmp
insl
mov
les
pusha
cmp
ss
js
add
mov
cmp
les
cmpsl
hlt
pop
fnstcw
mov
mov
rcr
add
lds
jbe
dec
add
push
push
shrb
mov
and
add
rol
fidivrs
imul
rcrb
repz
pop
out
and
add
jo
mov
push
sbb
xchg
mov
test
inc
in
add
gs
inc
jg
adc
jb
int3
add
pop
xchg
lods
mov
inc
push
dec
sarb
arpl
add
pop
adc
and
sub
rol
cmp
mov
lret
push
nop
popf
xor
incb
jl
xchg
addr16
lahf
xchg
cmp
addb
es
dec
jnp
mov
loop
add
add
cli
out
scas
pop
sub
xchg
jg
add
jp
stc
outsl
out
fs
leave
add
or
out
or
cli
negl
xor
sub
notb
xchg
pop
add
cmpsb
xchg
mov
add
or
dec
je
add
fsubrl
or
jnp
or
sbbl
mov
and
out
cmpb
sub
dec
addb
add
adc
aad
pop
in
add
popa
adc
jns
add
pusha
push
ret
jo
jmp
enter
and
lret
inc
add
out
dec
cmpsl
addb
inc
sbb
inc
ja
xchg
xor
add
jle
sub
pusha
bound
add
and
mov
es
push
imul
aam
add
sub
add
rcrb
mov
ucomiss
jo
lcall
add
adc
adc
push
outsb
mov
add
pop
xlat
cmp
jno
mov
mov
ret
or
sbbl
clc
or
outsl
cmp
jbe
sarl
repnz
aas
xor
lret
addb
xchg
icebp
stos
xchg
scas
add
jp
jno
add
pop
add
lcall
and
push
shll
sbb
xchg
jb
cltd
adc
sar
xchg
js
in
aad
verr
mov
sub
xchg
adc
jg
bnd
add
xchg
and
add
jge
sbb
stos
cltd
fs
sub
pusha
pop
cmp
outsb
pop
movsb
out
popa
mov
pusha
clc
je
cmpsb
lahf
leave
jno
insb
and
std
xchg
push
add
jb
out
das
push
cmp
xor
cli
pop
cmp
imul
insb
mov
rolb
add
fwait
jecxz
loop
lret
adc
sub
cli
dec
call
mov
in
pop
add
push
das
dec
add
testb
adc
pop
int3
push
lahf
xor
outsb
mov
cmp
cmp
movsl
mov
jns
inc
jg
add
mov
movsb
cmp
push
mov
out
add
insl
push
push
pop
testl
shlb
xchg
push
and
clc
pop
mov
mov
inc
cmpsb
jb
xor
test
pop
jae
add
xchg
sarl
sbb
push
jg
imul
adc
cmp
iret
add
sub
cmp
inc
rolb
add
into
js
jb
aaa
cmpsl
loop
and
in
scas
sbb
push
cmp
mov
aas
aam
jle
adcb
mov
add
daa
lods
xchg
push
loopne
out
test
xchg
stos
sub
sbb
loope
ss
imul
ja
add
mov
sub
push
xchg
or
xor
mov
les
fldenv
nop
leave
outsl
mov
sbb
mov
daa
adc
adc
xchg
adc
int
add
mov
fistps
cmc
aad
cmp
add
push
jle
loopne
push
ret
lea
fidivrl
and
cltd
xchg
push
orb
mov
loopne
mov
insl
cmp
mov
dec
and
xor
push
add
push
push
add
sub
jae
idivb
push
pop
adc
mov
ja
scas
repnz
cmp
fnstsw
fsubr
stos
add
fistpl
arpl
repnz
adc
add
popf
xor
sub
int3
mov
inc
push
xchg
mov
das
mov
idivl
shr
sbb
add
repnz
mov
ret
xsaves
jnp
inc
jns
push
cmpsl
jge
add
fdivrl
xchg
loop
jb
aad
sbb
mulb
iret
cltd
ret
sbb
pop
sbb
dec
add
inc
and
or
aas
les
sub
shlb
fadd
sub
or
repnz
sbb
test
xchg
rcrb
mov
fcomp
sbb
xor
inc
addw
je
pop
add
outsb
pop
cld
jmp
sbb
cmc
arpl
add
ror
push
flds
pop
mov
and
shl
cmp
pop
mov
inc
push
lcall
inc
loopne
ds
sbb
cld
andb
popf
sbb
and
add
cmp
and
add
sbb
xchg
std
xorl
sahf
cmp
pop
sub
adc
xor
and
js
ret
jb
popf
or
das
mov
movsl
add
fisttps
cmp
pop
sarl
movsb
xchg
mov
cmpsl
mov
jp
outsb
pusha
and
cmp
loope
jo
cld
xor
add
mov
or
sbb
fisttpl
sarb
add
pop
dec
ds
mov
cmp
sub
negl
insb
pushf
mov
out
add
push
mov
xor
cmp
pop
aas
jmp
push
addb
add
mov
lock
mov
xchg
lock
popf
add
lods
add
orb
inc
sbb
add
rcrb
mov
cmp
pop
mov
dec
add
dec
das
pusha
mov
movsb
dec
jl
add
xchg
jne
jl
sti
push
add
imul
ffree
inc
cmpsl
add
or
jbe
xchg
add
push
jmp
clc
xchg
les
scas
dec
aam
jbe
xchg
jno
cmpl
cmpsl
and
orl
test
into
or
add
mov
jae
lock
cld
loopne
popa
mov
xchg
add
jno
add
pop
in
add
add
xchg
sub
iret
jl
adc
aaa
cmp
or
or
add
dec
push
mov
jg
mov
add
xchg
xor
jp
ror
popa
int
outsb
adc
cmp
add
incl
test
imul
add
inc
dec
push
xchg
mov
dec
ljmp
stc
dec
mov
mov
aas
imul
nop
enter
and
push
int
mov
push
mov
mov
jo
filds
mov
out
mov
fcoms
outsl
ss
mov
jno
jmp
shll
daa
push
cmp
pop
and
xor
addl
xor
rol
dec
jg
jg
test
mov
and
stos
cmpsb
out
rolb
mov
loop
and
ja
clc
jo
jle
movsl
and
mov
push
sbb
push
aas
and
in
jmp
inc
lds
add
add
dec
jns
adc
shlb
push
mov
in
add
incb
add
fcompl
jo
addb
adc
shl
cld
push
ds
arpl
aam
ljmp
clc
pop
xor
sub
mov
jne
icebp
or
lock
xchg
mov
mov
jg
jb
pmullw
adc
adc
adc
mov
and
test
inc
sub
mov
xor
push
xor
jl
ss
mov
inc
psrad
jb
adc
pop
dec
adc
xor
push
adc
rclb
jecxz
lods
lret
add
cmc
stc
ss
xor
push
cmp
test
enter
inc
dec
and
in
xchg
lret
push
test
add
mov
inc
jge
xchg
xchg
add
mov
and
dec
dec
jo
orl
loop
add
pop
scas
xchg
or
pop
inc
ljmp
nop
adc
lods
dec
or
xor
adc
jno
xor
int3
rorl
jl
fwait
aas
outsl
adcb
push
jnp
les
out
je
test
mov
mov
jp
ljmp
rorb
lods
adc
ret
movsb
lea
mov
pop
in
lea
imulb
sar
icebp
jbe
and
pop
pop
aas
and
xor
adc
dec
push
xchg
add
mov
les
mov
mov
xchg
jnp
loopne
sub
cmp
pop
dec
mov
inc
je
stc
fisubs
sub
js
in
add
pusha
shrb
mov
xchg
fcompl
jecxz
jg
sbb
mov
stos
or
cli
jge
jl
jne
mov
sbb
inc
cmp
cmp
inc
add
sub
adc
inc
sbb
mov
xchg
xchg
xorb
call
mov
outsl
push
ja
loope
dec
insl
cmp
inc
enter
push
nop
ret
mov
and
and
les
jl
add
shll
incb
outsb
fistpl
dec
mov
mov
mov
or
adc
adc
mov
add
aaa
sub
add
or
jno
add
fcmove
or
scas
add
jecxz
in
popa
popf
into
adc
arpl
fdivrl
inc
sub
xchg
setnp
mov
xor
push
sub
and
ret
pop
xchg
sbb
imul
dec
fcmovb
dec
jne
and
arpl
and
roll
shrl
add
inc
pop
and
pop
dec
arpl
push
cmp
sahf
add
sub
dec
inc
adc
clc
mov
inc
pushf
ljmp
stos
int3
bound
repz
push
sbb
or
or
mov
push
cmc
fistl
jl
adc
cmp
mov
imul
cmp
rcll
xchg
xor
pop
add
pop
aaa
outsb
push
jp
out
pop
dec
push
add
out
xchg
mov
add
adc
jmp
rcll
add
jb
cmp
rolb
das
rcll
xor
inc
andl
inc
lea
jne
fs
shlb
push
add
lcall
test
inc
adc
fidivrs
ror
add
out
xor
add
clc
mov
or
es
dec
lock
sbb
stos
bound
push
xchg
orb
imul
and
mov
jns
je
push
push
nop
pop
ss
push
ja
mov
add
xchg
mov
rclb
mov
xchg
sbb
or
fstps
mov
icebp
ficompl
xchg
and
push
sarb
movsb
add
push
fsts
pop
xchg
add
or
stc
popa
dec
fnstenv
pop
notb
pop
adc
mov
test
inc
push
pop
push
push
das
test
movsb
movsl
pop
add
test
cmp
inc
inc
and
pop
addb
fildl
scas
enter
sbb
sbb
add
adc
dec
xchg
adc
mov
pop
lock
mov
cld
mov
and
pop
mov
ficomps
xor
xchg
jle
insb
es
sbb
rolb
cli
cmpsl
stos
fdivl
es
outsl
add
pop
js
pop
sbb
test
jmp
add
pusha
sub
jbe
or
push
inc
push
bound
enter
test
movsl
faddp
adc
mov
push
cmpsl
sub
in
cltd
adc
xchg
leave
add
cli
xor
xchg
es
inc
mov
addr16
mov
sub
jl
lds
push
inc
or
movsb
mov
pop
sbb
jns
rorb
movsl
inc
xchg
je
xchg
mov
xchg
pusha
int3
lock
mov
jns
inc
lcall
push
ds
adc
hlt
mov
add
outsl
popf
cmpsb
push
jp
test
adc
sti
add
inc
add
add
mov
sub
cmc
add
sti
mov
adc
je
stc
add
loop
dec
sahf
adc
and
mov
push
push
lret
inc
rcl
mov
sbb
clc
xchg
push
or
push
loopne
inc
inc
lods
push
or
std
pusha
cmp
add
xorb
icebp
nopl
pop
add
cmp
aas
add
push
in
shlb
jle
sub
enter
loopne
inc
and
movsb
mov
sarl
decl
popa
gs
les
xlat
loope
inc
sub
xor
push
hlt
movsb
aaa
hlt
add
mov
and
add
loope
jecxz
jno
shll
aaa
push
cs
repz
or
dec
in
lret
xchg
test
fsubrl
mov
add
jb
pop
xor
loopne
roll
xor
fildl
xor
test
in
jne
aam
les
jg
mov
imul
cmp
je
insl
jp
lret
sub
push
testl
push
mov
add
pop
cltd
pop
add
push
into
mov
inc
and
and
aam
js
push
testl
pop
cmc
insl
inc
fadds
push
mov
outsl
in
dec
push
xor
adc
repnz
aam
stos
or
add
jl
xchg
xor
push
fdivs
les
shr
rorb
pop
jl
jl
jno
js
add
addl
pop
or
sbb
pop
adc
inc
fdivs
shrb
sbb
adc
insb
sbb
hlt
pop
sbb
xchg
fs
leave
icebp
mov
or
jns
xchg
je
sub
leave
jge
mov
dec
popf
outsl
pop
int
sub
pop
sub
mov
and
pop
fidivs
fwait
add
push
sub
jo
xchg
or
rorl
or
into
shlb
add
aad
sahf
xor
mov
lock
in
add
mov
pop
mov
mov
les
adc
lahf
out
mov
add
mov
les
mov
in
and
mov
fmull
rcr
mov
add
rolb
push
clc
loop
xchg
pop
pop
sbb
xorb
mov
add
mov
sbb
insl
ret
and
add
mov
sub
or
movsl
dec
mov
inc
add
push
je
mov
hlt
bound
dec
mov
pop
lret
pushf
rolb
dec
andb
ljmp
mov
push
jmp
cwtl
pop
push
cmpsl
lods
ret
insb
jl
stos
outsb
mov
or
or
xor
inc
inc
and
pop
dec
mov
add
fmull
lahf
sub
bound
push
push
mov
inc
std
enter
add
xchg
repnz
or
adc
cli
sub
sub
imul
and
jbe
out
movsb
pushf
add
pushf
cmp
sbb
inc
dec
and
fcomip
add
dec
roll
jb
add
in
ret
sub
pop
shl
mov
wbinvd
inc
xchg
test
jmp
cmp
jae
sub
add
mov
mov
and
xor
inc
sarl
sbb
jnp
lcall
outsl
aad
shll
repz
inc
test
aas
xchg
xor
cld
sbb
mov
bound
pop
in
popa
and
and
fldl
ljmp
xor
push
mov
pop
xchg
mov
add
sub
orb
fbstp
sbb
adc
inc
addr16
mov
into
pop
mov
sbb
jbe
fs
push
fldt
sub
in
inc
jo
inc
shll
mov
testb
xor
ret
jbe
pop
jmp
cwtl
cmp
add
push
xor
and
int3
xchg
add
dec
stc
pop
add
mov
les
cmpsl
xchg
push
inc
sbb
loopne
xorb
xor
insl
lret
jnp
cmpsl
or
cmp
addb
push
filds
sub
mov
mov
gs
dec
es
and
cmp
pop
xchg
mov
jmp
inc
sarl
dec
lea
pop
cmp
out
stc
sarb
pusha
sahf
or
mov
stos
cwtl
cmpsl
and
call
jle
mov
bound
rcll
les
push
in
test
inc
int3
add
fists
mov
lret
jge
adc
add
add
sahf
shlb
inc
and
inc
push
inc
test
add
jp
jae
jmp
add
in
negl
push
rorl
in
add
out
pusha
xlat
enter
add
inc
mov
adc
sub
aam
dec
inc
loopne
add
inc
xchg
sub
jne
nop
add
clc
testl
and
xchg
in
mov
subb
in
dec
adc
test
add
dec
inc
data16
int3
inc
sub
mov
dec
cmp
mov
inc
sbb
or
add
in
dec
les
lock
add
add
inc
mov
xchg
repnz
xlat
xchg
xor
mov
cmpsb
adc
dec
shlb
test
mov
repz
mov
out
js
fisubs
dec
cmp
push
and
cmp
rolb
jp
xor
cld
mov
pop
dec
decb
add
cmc
inc
inc
jmp
push
cld
xor
fisubs
dec
inc
pop
pushf
call
inc
adc
mov
jmp
xor
add
fisttpl
jge
pusha
in
test
and
and
sahf
mov
xor
inc
cltd
mov
pushf
or
ret
aaa
add
fcomps
in
and
add
push
mov
stos
hlt
and
lock
jmp
push
and
jns
cwtl
pushf
fsubr
cs
lock
jp
jl
fcoml
add
jl
mov
roll
ja
jne
xlat
mov
push
sbb
lea
xchg
das
ret
clc
sbb
mov
js
cwtl
sub
rep
mov
and
cmpsb
pusha
cld
adc
js
add
push
dec
aam
jbe
mov
ret
outsl
ds
dec
and
push
shl
xchg
mov
add
das
push
xor
push
sbb
xchg
loopne
cli
add
ja
and
fcomi
push
mov
flds
loope
addr16
lds
lods
adc
rolb
jg
ret
das
outsl
adc
jecxz
negl
push
mov
add
popa
sbb
mov
jo
cld
sbb
cmp
fs
jmp
sub
sbb
nop
cltd
inc
mov
addr16
xor
les
pop
and
dec
add
les
push
sub
mov
rol
orl
inc
lahf
stos
jge
sbb
xor
insb
sbbb
jmp
jmp
ss
cmpsb
outsl
notb
lods
add
jae
popa
add
sbb
push
out
xlat
inc
add
gs
dec
pop
cmc
sub
lds
lods
pusha
mov
add
ret
mov
test
fsubrs
cmpsb
faddl
sti
dec
loopne
adc
add
jg
xor
ret
pusha
mov
or
sbbb
iret
cmp
cmp
add
mov
insl
add
sar
adc
jno
or
rcrl
add
jle
cld
push
add
jns
add
push
shll
adcb
mov
cmp
insl
cli
test
in
adc
mov
inc
sarb
ds
dec
add
cmp
imul
inc
xchg
test
xchg
jo
xlat
stc
xchg
push
adc
fs
ja
test
push
mov
xchg
pop
repnz
dec
sarl
cmp
cmp
frstor
inc
cmpsb
jo
fcom
int
ljmp
int3
mov
cmp
popf
sbb
cmp
add
cmpsl
inc
int3
stc
xor
icebp
insb
mov
nop
push
inc
out
xor
out
imul
push
mov
xor
loop
popf
inc
jns
faddl
mov
lock
adc
imul
add
ficoms
ss
sti
cltd
add
jns
lock
in
adc
lret
lcall
or
adc
pop
dec
icebp
add
call
lahf
dec
roll
add
les
and
pop
scas
clc
lods
and
mov
sbb
out
inc
mov
push
cmp
cmpsb
add
les
stc
adc
cmp
cli
or
push
repz
lret
leave
add
inc
pop
clc
mov
cltd
mov
add
popf
out
adc
int3
test
xchg
cld
mov
xor
rorb
arpl
add
aad
incb
inc
ja
lea
jbe
mov
xchg
shl
hlt
into
and
add
hlt
push
push
jb
and
movsb
jb
mov
xchg
js
pusha
add
shl
sbb
jbe
cmp
stc
push
adc
add
testl
mov
pop
mov
add
fs
add
cmpsb
xchg
add
int3
mov
mov
push
ror
push
icebp
aaa
push
xchg
cmp
xchg
popa
rcrb
jno
sbb
js
adc
xchg
mov
sub
test
mov
and
movsb
test
adc
jo
add
add
mov
leave
cli
inc
inc
dec
lods
mov
out
jo
add
imul
test
addb
lock
dec
sbbb
and
sbb
stc
pusha
mov
mov
aad
call
push
and
lahf
popl
push
cmp
xchg
xor
fxch
rcrl
daa
lods
jge
mov
xor
push
push
add
insb
mov
pusha
stc
adc
das
mov
enter
mov
adcb
push
dec
cmp
mov
cmc
xor
or
mov
mov
fs
sti
mov
sahf
push
cmp
js
fistl
inc
scas
mov
add
mov
and
das
add
mov
sbbb
into
cmp
aam
pop
aaa
fldl
adc
add
push
push
xchg
mov
jp
mov
push
adc
lock
orb
sbb
sbb
icebp
adc
stos
insb
cmp
pop
test
mov
adc
adc
jo
mov
pop
nop
jo
jae
adc
movsl
xor
adc
jl
enter
ds
out
xor
andl
icebp
add
fstl
jecxz
fmull
call
xchg
xchg
add
pop
out
xchg
mov
inc
mov
out
fadd
repnz
inc
rcrb
pushf
or
add
xor
data16
push
ja
out
dec
add
icebp
cli
xor
adc
jge
or
push
fsts
add
jb
mul
push
cmpsl
sarb
sahf
and
mov
add
sub
addr16
add
xor
fmull
out
jns
xor
pop
push
mov
pop
loopne
xchg
cmp
mov
mov
in
sub
leave
add
and
adcl
clc
inc
mov
add
loope
push
add
fwait
mov
add
add
cmpsb
leave
xchg
mov
int
jb
mov
in
rorb
inc
pop
sbb
fs
cwtl
movsb
ja
jbe
mov
addb
popa
ja
xchg
in
jbe
mov
out
jecxz
pop
add
xchg
add
push
mov
pop
test
andl
inc
lea
add
cld
sarl
out
xchg
lock
cmp
pop
sub
sti
mov
dec
add
aaa
add
jb
rcr
ja
hlt
mov
fs
sbb
mov
fldcw
cmc
add
xchg
ficoml
stc
push
cmp
nop
pop
mov
push
mov
sbb
xor
test
mov
jbe
fwait
movb
mov
repz
cmp
cld
adc
dec
lea
repnz
fs
adc
mov
add
loope
mov
mov
in
cmp
cmpsl
add
push
scas
pop
and
add
sbb
mov
inc
pop
fwait
pop
push
push
out
dec
add
es
add
jbe
enter
cmpb
dec
pop
scas
sub
icebp
int3
push
outsl
push
out
sub
lahf
sbb
sbb
sbb
dec
mov
fs
push
pushf
add
jecxz
dec
rclb
fisubrs
clc
mov
jl
inc
mov
sbb
ret
sub
daa
sti
in
add
cmp
shl
repnz
add
into
xor
dec
addr16
fstps
rcrl
pop
rcll
gs
sbb
out
dec
inc
cmpsb
inc
jne
add
xchg
mov
cs
mov
fists
imul
adc
jb
aas
xchg
xor
sbb
lahf
ret
les
adc
push
xor
sti
mov
add
bound
aaa
or
aam
add
in
mov
data16
and
add
aam
fldcw
mov
add
sub
add
dec
lock
mov
pop
sbbl
pushf
les
int3
lea
xor
adc
dec
enter
cmc
xchg
mov
push
je
icebp
and
cmpb
aad
faddl
lds
jae
inc
test
mov
lea
dec
add
js
test
imul
enter
mov
loopne
xor
add
xor
das
cmp
pop
dec
sti
call
or
mov
push
push
outsl
aaa
icebp
sub
in
lock
insl
imul
sub
xchg
in
loopne
jmp
mov
in
jmp
cltd
aam
data16
push
out
jo
sarb
pop
fidivl
push
push
hlt
cwtl
inc
movsb
xor
push
add
test
jo
sahf
add
sub
roll
inc
xor
insl
sbb
jmp
xor
and
xchg
xorb
mov
pushf
add
cmp
in
mov
cli
les
dec
or
cmpsl
in
fiadds
ja
test
push
test
int3
fmuls
xor
rclb
add
inc
inc
cmp
jecxz
mov
adc
clc
jne
push
jge
dec
inc
shlb
mov
mov
lock
les
jno
cmp
pop
mov
inc
pop
or
aas
mov
pushf
inc
neg
in
dec
add
inc
cmp
test
cmpsb
cmp
or
sbb
dec
add
mov
mov
sub
xlat
jl
add
adc
or
mov
dec
xor
mov
adc
jo
add
out
adc
ja
enter
jne
sub
inc
add
jb
sbb
cwtl
mov
cli
xchg
test
xor
pop
sub
mov
test
mov
jo
fcompl
inc
add
scas
icebp
gs
dec
jge
pop
mov
cltd
mov
inc
push
cmp
ret
pop
jae
adc
test
cwtl
inc
xchg
sbb
add
mov
fidivl
scas
outsb
test
inc
cli
adc
xor
enter
arpl
adc
cmpsl
add
imul
and
lahf
imul
jo
jb
mov
ds
xchg
daa
add
loope
lock
cmp
cmp
mov
jg
adc
dec
xchg
fisubrs
insb
adc
fstl
and
add
aaa
pop
stc
loop
dec
faddl
add
aas
test
push
jne
add
adc
pop
dec
mov
icebp
adc
lds
jl
pusha
xor
mov
jns
add
fsubl
out
pop
movsl
out
jno
or
dec
sub
cld
sbb
imul
fstpl
add
out
stc
push
pop
mov
sbb
roll
lcall
add
clc
rcl
movsb
inc
rorb
adc
mov
jl
jae
insb
in
leave
sub
sbb
js
pop
repz
inc
test
mov
and
xchg
call
pop
pop
or
inc
sbb
add
mov
inc
push
ret
and
fucom
mov
mov
dec
pop
aam
ret
hlt
dec
jmp
pop
ss
inc
lahf
addr16
pop
cli
and
push
pop
fsubrl
addr16
imul
add
mov
xchg
dec
add
push
daa
push
loopne
push
or
xchg
add
pop
xor
cmp
sbb
ja
xorl
pop
lock
push
mov
shl
repnz
cld
ret
pop
adc
cs
in
push
daa
lock
ficoms
nop
mov
sub
popf
jo
fists
pop
sbb
mov
repnz
shlb
mov
call
xor
mov
jne
aas
ss
in
or
add
faddl
sub
jno
mov
push
or
pusha
aas
inc
faddl
scas
adc
xor
lock
cltd
add
cmpb
xor
push
shl
or
ret
maxps
push
mov
dec
mov
loopne
insb
lock
lret
repz
aad
add
inc
add
mov
jne
sbb
add
jmp
sub
jb
xor
push
cmp
mov
inc
sub
mov
add
into
mov
xorl
mov
cmp
shr
mov
jl
xor
mov
dec
adc
mov
call
lods
xor
cmp
mov
f2xm1
sti
inc
xchg
add
mov
mov
add
add
jge
mov
aaa
or
pop
jmp
or
arpl
adc
inc
xlat
aad
xchg
mov
mov
add
pop
jne
push
dec
push
cmc
sahf
lods
sbb
dec
test
cmp
inc
loope
mov
jb
rclb
xchg
xchg
cmp
aad
and
lcall
dec
and
sbb
jo
add
and
cmpsl
rclb
rcrb
push
aaa
lods
out
sbb
fadd
sub
inc
pop
ret
sub
in
xor
notb
sub
sub
lret
jmp
jp
jo
add
arpl
pop
cbtw
lret
pop
mov
dec
jecxz
pushf
dec
jbe
add
leave
mov
imul
xchg
dec
push
push
sbb
pushf
movl
js
push
pusha
mov
mov
jp
add
or
ds
add
mov
loope
nop
lds
je
ret
lods
xlat
xor
dec
mov
mov
sub
mov
or
xor
sbb
pop
jl
lods
push
adc
or
lock
sbb
inc
ret
insb
movsb
hlt
add
rcrl
mov
je
or
orb
fcomps
outsb
add
clc
mov
cmpb
xchg
sub
sub
jno
or
adc
int3
add
bound
push
mov
dec
xor
jg
dec
into
cmp
cmp
rcrb
add
stos
loope
mov
fists
mov
ss
je
pfadd
fadd
inc
outsl
pop
sbb
add
dec
push
cmp
call
mov
push
sbb
cmp
aam
pusha
mov
add
jl
push
pop
je
inc
das
add
dec
mov
out
push
pop
aam
dec
inc
call
movsb
mov
add
mov
mov
sahf
jmp
add
xchg
mov
sub
add
push
sub
xor
or
push
pop
jle
ds
add
sbbb
es
sub
popf
push
shr
stc
push
jle
inc
int3
es
add
leave
sub
les
or
incl
inc
std
jns
es
cmp
pop
mov
and
sbb
push
es
mov
add
mov
movb
inc
bound
pop
adc
or
sub
mov
pusha
enter
pop
sbb
sub
rcll
inc
test
lcall
clc
daa
xor
xchg
imul
pusha
sub
inc
inc
and
int3
popl
out
pop
int
andb
push
or
xor
inc
pop
xor
inc
sub
rclb
enter
inc
lret
sub
aaa
pop
pop
sbb
sub
daa
dec
add
mov
cmp
fcompl
add
xchg
mov
sub
add
or
pop
fidivs
ret
adc
pop
mov
jae
faddl
nop
push
mov
xchg
lods
sub
sarl
mov
mov
stos
and
test
pop
xchg
xor
cmpsl
lds
pop
sbb
add
jo
mov
shlb
aas
mov
sbb
jb
fsubs
stc
cmp
mov
insl
ljmp
and
dec
js
ss
les
fdivl
out
pop
nop
cmp
pop
bound
ds
mov
faddl
test
subb
jbe
iret
repnz
cmp
idivb
enter
movsb
jo
fsubr
enter
cmp
rol
pop
and
scas
xor
or
in
pop
cwtl
rclb
int
mov
les
sti
add
mov
out
jmp
pushf
jnp
rclb
inc
mov
add
fucomip
and
mov
jne
jo
adc
je
mov
xadd
xlat
sub
jno
in
inc
push
push
aad
scas
jnp
push
hlt
push
sub
popa
out
cld
push
sbb
cmp
cmp
lret
adc
into
push
and
pop
xchg
les
sbb
push
cli
out
dec
and
sub
sahf
sbb
aas
pop
jae
add
xchg
imul
inc
mov
or
imul
mov
jmp
xlat
push
cltd
pavgw
cld
rclb
pop
pop
or
inc
and
or
sub
dec
ss
or
cmp
cmpsb
mov
mov
add
mov
push
cmp
push
add
push
fldt
pop
rcrb
dec
test
xchg
in
dec
insl
jb,pt
bswap
iret
dec
sbb
into
clc
lcall
jg
adc
push
jl
mov
ror
mov
dec
cmp
mov
mov
mov
push
mov
rolb
mov
stc
je
inc
add
cmp
mov
adc
sti
fwait
jbe
add
pop
jnp
pop
add
and
and
loope
jg
movsb
mov
or
out
in
push
xorl
add
mov
sub
push
loopne
pop
aad
pop
and
sbb
pop
push
push
sahf
cmpsb
orl
adc
dec
inc
fdivl
dec
in
xchg
or
mov
pusha
xor
pushf
pop
icebp
push
xor
aad
mov
add
and
mov
js
roll
fnsaves
sbb
inc
add
xchg
les
cmpsl
and
fwait
lock
xchg
mov
inc
int
fcoms
mov
aam
jo
scas
in
icebp
mov
push
loope
cvtpi2ps
inc
sub
in
and
adc
sbb
mov
jp
adc
push
into
std
jg
cwtl
push
fnstsw
cs
push
jno
icebp
sbb
xchg
sub
jns
loopne
adc
std
in
and
add
push
xor
push
xchg
xchg
mov
pop
jge
shlb
add
enter
jmp
and
scas
or
and
xor
xor
fmulp
or
ds
loopne
push
andb
insb
mov
jle
aas
subb
mov
cli
xor
xor
pop
add
lock
out
adc
ljmp
insl
jb
add
dec
sbb
cmp
daa
dec
push
pop
add
leave
scas
out
lret
dec
or
dec
fst
loope
adc
out
push
sbb
in
push
push
negb
cmp
dec
xchg
dec
shrl
xchg
movsb
add
arpl
push
shlb
fists
adc
dec
movsb
mov
or
mov
adc
leave
cltd
push
add
insb
push
out
cmp
mov
out
inc
cmp
push
dec
lock
stos
fimuls
and
pushf
jo
add
pop
mov
pslld
int3
shrl
pusha
add
sbbl
ss
pop
fmuls
jmp
insb
int
pop
imul
xor
sahf
adc
adc
jle
add
mov
or
xor
dec
lret
xor
add
inc
lret
cmp
pusha
jb
lods
pop
sarl
nop
loopne
adc
mov
ja
or
add
xchg
movb
jbe
imul
leave
mov
pusha
popf
xor
xchg
push
mov
mov
call
out
xchg
xchg
data16
scas
into
mov
push
add
sub
push
mov
insl
stc
incb
adc
std
inc
hlt
addb
lcall
or
pop
shrb
xor
and
test
pop
jl
xchg
mov
sub
lcall
imul
dec
fistps
scas
lret
xor
lcall
aas
leave
mov
mov
mov
adc
sbb
stos
es
or
imul
push
mov
mov
cli
enter
jo
jne
mov
or
mov
pop
xchg
std
lods
dec
out
inc
cmp
mov
jne
or
and
mov
dec
jbe
aaa
inc
push
sbb
pop
or
stc
fwait
sbb
cmp
and
sbbb
add
mov
and
jb
scas
xor
adc
gs
ret
or
lds
and
scas
fldt
push
jb
xchg
je
sub
pop
loop
sarl
pop
cli
sbb
cs
push
add
test
int
cmc
xchg
or
shlb
fmull
or
lock
inc
lods
mov
cmp
rcrb
mov
fs
movsb
mov
pushf
sub
loop
daa
cs
pusha
arpl
cmc
mov
les
sub
inc
stos
mov
and
sub
cld
cmp
add
xchg
push
lods
push
add
dec
into
cmc
xor
test
in
or
add
js
int
xorl
cwtl
fcoms
xor
arpl
pop
rcrb
ror
mov
add
jb
push
adc
xchg
inc
push
clc
or
sub
cwtl
test
in
xchg
mov
fisttps
fwait
mov
popf
adc
insb
add
cmp
and
cmp
mov
leave
push
and
imul
data16
ret
or
iret
dec
clc
dec
call
pop
xchg
pushf
mov
les
shrb
pop
or
cmp
dec
and
xchg
test
bswap
adc
and
pusha
sahf
jno
mov
cmp
cmpsb
in
jge
jg
jno
push
addb
pop
inc
or
and
in
add
test
lods
shlb
ret
lahf
dec
mov
fimuls
imul
es
and
mov
sub
clc
add
enter
lods
mov
adc
inc
adc
andb
in
sarb
cwtl
inc
pop
loop
add
imul
mov
notb
clc
cmp
into
xor
cmp
loope
dec
push
inc
cmp
movsb
fs
fsubl
mov
test
mov
xchg
add
rcrl
loopne
mov
jg
push
lock
add
jle
mov
js
sbbb
adc
xor
dec
pop
cmpb
enter
sarb
and
add
je,pt
adc
loopne
out
xor
in
and
push
push
pop
push
add
xchg
sahf
add
lods
sbb
sbb
jnp
sbb
or
test
add
xchg
cmpsl
hlt
imul
pop
fsubrl
xchg
push
in
mov
xchg
frstor
popa
orb
jmp
cwtl
push
add
aad
push
jl
sbbl
pop
movsl
pop
inc
xor
hlt
adc
dec
testl
clc
and
or
leave
and
add
sub
data16
dec
sub
add
in
arpl
push
ficomps
xlat
ljmp
fidivrl
xor
sbb
mov
dec
lret
push
xor
inc
pop
jae
pop
pusha
outsb
pop
cmp
nop
add
cmp
or
adc
fs
jecxz
push
add
add
xlat
add
insb
mov
popf
xor
add
lock
add
in
dec
mov
loopne
jmp
rol
inc
imul
out
sbbl
gs
jmp
push
sub
in
add
cmp
les
scas
faddl
fsubs
add
jae
mov
pusha
and
xchg
add
cmpb
add
scas
movsb
imul
xchg
in
sbb
repz
mov
das
mov
enter
push
in
arpl
add
push
int3
mov
je
dec
cld
fbstp
xor
cli
mov
sub
stc
and
adc
smsw
cmp
push
sub
pushf
xchg
or
sub
push
shll
nop
xor
pop
int
adc
mov
xchg
cmp
in
adcl
sub
add
mov
iret
sub
sbb
dec
dec
inc
pop
jp
imul
mov
xchg
and
and
and
sbbb
roll
add
dec
pushf
hlt
or
inc
sub
loop
mov
pop
add
pop
adcb
pop
or
sbb
iret
insb
movsl
sar
mov
sbb
add
into
pop
mov
mov
add
sbb
sarl
out
xlat
mov
bound
add
stc
rcrl
nop
pop
or
mov
ljmp
jno
rolb
pop
adcl
push
mov
stos
ucomiss
dec
sahf
jl
jb
adc
movsl
shrb
mov
shrb
push
and
sub
mov
jp
test
outsl
insl
call
xchg
add
psrld
jns
or
or
inc
push
cmc
divb
xchg
add
adc
mov
jge
test
add
push
cmp
dec
stc
and
push
insl
bound
mov
sahf
loopne
add
push
dec
and
mov
inc
cmpsl
pop
inc
adc
dec
out
scas
fcomps
or
iret
push
or
mov
je
mov
inc
or
sub
pop
hlt
dec
xor
pushf
dec
inc
out
cmc
cmp
aad
or
add
inc
cli
xor
and
sbb
pusha
mov
shl
add
rcll
gs
pop
jmp
jno
xor
aaa
repz
lods
movsl
cwtl
inc
mov
add
fsubs
and
cmp
xlat
pop
mov
movsb
shl
cwtl
in
sti
icebp
sub
inc
lods
dec
xchg
push
add
gs
jle
inc
xchg
jbe
dec
iret
pop
mov
in
push
add
cld
aas
nop
and
or
add
lret
imul
add
and
xchg
imul
fadds
cmpb
jbe
xchg
cwtl
inc
push
fdivrp
cmp
cwtl
xchg
mov
inc
sub
orps
fwait
rol
or
push
iret
add
inc
pop
fcmovnu
and
xchg
mov
mov
cmp
pusha
push
lods
mov
scas
jmp
mov
loope
dec
jns
dec
ror
cmp
add
fs
adc
movsl
cs
dec
jl
pushl
inc
fs
pop
push
stc
sbb
mov
add
aam
movsl
rcrb
pop
add
add
mov
icebp
jp
add
pushf
pop
loop
aaa
inc
mov
add
push
xor
int3
out
enter
cs
icebp
push
repz
loopne
js
ficompl
adc
inc
nop
popf
into
push
mov
je
mov
int3
dec
sub
sub
inc
shl
add
push
arpl
nop
cli
mov
es
test
ret
sarb
push
push
call
jmp
std
sahf
or
nop
out
add
jl
add
outsb
pop
outsl
rolb
pop
arpl
inc
xchg
adc
ljmp
push
xchg
nop
outsb
fistl
jmp
test
sub
psllq
aam
es
and
stos
jmp
adc
insl
jo
lret
call
add
cmp
xlat
in
cltd
jb
sub
jge
xor
mov
mov
xchg
adc
movl
mov
jne
insl
and
adc
and
orb
aam
std
shl
sub
xchg
inc
pop
cltd
cmp
mov
sbb
or
das
inc
inc
in
add
inc
cs
js
andb
les
addr16
rcl
sub
str
cmpsl
test
add
pop
out
pop
push
or
or
dec
cmp
cmpsl
pop
xor
addr16
divb
dec
mov
dec
lahf
es
aas
stc
test
mov
jb
repnz
add
les
out
sbb
push
adc
fmull
inc
cwtl
jmp
nop
or
aaa
in
jle
inc
dec
cs
or
sub
enter
pop
and
inc
sbb
out
add
int
sbbb
cli
in
dec
pop
inc
aad
push
dec
jns
add
jb
add
sbb
loopne
jmp
mov
mov
addb
xor
dec
in
sbb
mov
mov
sub
mov
adc
mov
cmpsl
lret
in
flds
in
ljmp
dec
inc
add
xchg
mov
inc
pop
nop
jo
mov
lea
js
pushf
iret
pop
ret
push
cs
repnz
adc
and
fsubp
xor
inc
jg
dec
sub
push
stos
mov
repnz
xchg
inc
in
inc
stc
hlt
mov
leave
adc
mov
les
addl
add
and
jge
mov
dec
mov
pushf
shlb
in
fs
jp
adc
pop
xor
out
pop
iret
pop
in
add
mov
in
js
daa
adc
out
push
popf
push
xchg
or
sti
sub
inc
pushf
cs
mov
movsb
pop
nop
seta
and
loope
repz
inc
add
pushf
add
idiv
outsb
xorb
xchg
jo
jp
enter
jecxz
xor
adc
cltd
add
into
out
orb
xlat
dec
loopne
outsl
cmp
les
and
andb
cmp
push
push
cmpsb
or
sbb
loope
loopne
popa
push
rorb
hlt
js
arpl
sub
xor
xchg
fs
repnz
sbb
push
sbb
hlt
cmp
pop
mov
sbb
cli
xchg
lock
in
int3
add
test
xor
sub
icebp
or
add
jmp
sub
lods
dec
shlb
into
dec
mov
out
mov
add
mov
sub
fwait
mov
push
add
loopne
fnop
add
add
out
pop
sub
and
cld
test
fistps
cmp
js
out
imul
hlt
lcall
inc
rorl
mov
mov
ret
enter
push
popf
orb
xorb
shrb
mov
mov
movsl
dec
sbbb
cli
push
adc
mov
pop
pop
stc
dec
rcrb
fucom
insl
and
into
mov
in
test
cltd
add
cmp
fmuls
inc
dec
add
adc
mov
cmp
pusha
repnz
dec
mov
mov
inc
xchg
inc
xchg
mov
jl
sti
loope
out
fmuls
popl
adc
loope
add
addl
add
mov
lahf
inc
loope
pop
nop
les
push
lret
iret
fwait
cmp
movsl
inc
add
lods
xchg
int
dec
and
sub
and
push
cmp
cmp
xchg
andb
xlat
insl
jl
sbbb
mov
jae
lods
pop
das
xchg
test
mov
in
and
add
das
mov
add
sub
orb
inc
lret
scas
lods
pop
adcb
push
ds
lods
cmp
push
add
adc
cmp
std
dec
adc
lret
sub
imul
aad
repnz
out
sbb
into
adc
cmp
shl
insl
inc
les
dec
das
sub
and
ds
nop
sbb
imul
loope
pop
pop
mov
addb
pop
bound
ret
xchg
test
jmp
pop
inc
insb
pop
cmp
adc
test
xor
sarb
sbb
dec
stc
and
adc
add
sti
rcrb
scas
adc
dec
and
and
inc
aad
call
test
ljmp
jbe
fildl
dec
out
push
gs
dec
fstpl
mov
loopne
test
loop
mov
scas
loop
jmp
test
push
fstpl
cmpsl
jg
pop
cmp
andb
push
movsb
add
xor
cwtl
jne,pt
mov
add
and
adc
xchg
inc
cmp
lock
movsl
sarl
mov
add
xor
inc
dec
fistpl
pushf
dec
inc
pop
push
hlt
cs
mov
faddl
cld
pop
popl
sbb
lret
ror
inc
xor
inc
push
mov
enter
cmp
add
fcompl
dec
jl
xchg
xor
xor
xor
inc
nop
pop
lcall
jno
fdivrl
clc
dec
movsl
sbb
mov
or
hlt
and
push
sub
cmp
cmp
add
pop
hlt
mov
shr
jb
test
push
and
add
mov
sarb
jle
les
std
dec
cmp
adc
aas
add
lock
sub
stos
mov
enter
sbb
jecxz
fsubl
pushf
and
adc
test
sahf
cli
scas
imul
add
mov
adc
jo
adc
and
mov
cli
std
andb
aam
inc
mov
push
stos
pop
sbb
call
adc
or
cmc
xchg
jo
pop
adc
inc
out
test
adc
sbb
lock
les
inc
mov
pop
or
mov
dec
insl
nop
cwtl
sbb
mov
mov
add
ret
and
pop
int
nop
fwait
sbb
and
repz
cmpsb
add
mov
popf
push
xchg
mov
jg
int3
mov
jle
add
adc
mov
adc
add
fsubrl
pushf
add
inc
out
xchg
dec
lods
adc
in
and
xchg
rcl
inc
addr16
xorl
es
roll
pop
clc
dec
mov
sbb
jmp
aam
and
dec
call
pushf
and
pop
stc
sbb
jne
cwtl
sbb
add
or
mov
mov
jecxz
xchg
or
and
mov
add
pop
lret
mov
je
cmp
out
mov
js
or
test
dec
mov
dec
mov
aaa
daa
dec
scas
pusha
add
fildl
add
clc
and
test
inc
mov
fcoml
add
inc
mov
pop
pushf
cli
pop
rcr
jmp
aam
add
loope
push
push
cmp
add
cs
je
ret
mov
mov
jbe
inc
or
call
and
lods
pop
cli
ds
out
in
jbe
jo
adc
dec
fimuls
outsl
arpl
sbbl
imul
lods
add
jne
inc
or
mov
rcrl
movsb
into
and
cmp
pusha
test
pusha
std
sbb
shrl
xor
and
inc
test
repz
adc
mov
or
loope
push
mov
pop
sbb
int3
subb
out
add
pop
and
in
jbe
in
out
cmp
lods
mov
loop
movlps
ss
jo
movsl
jbe
sub
xchg
lods
and
aas
add
inc
push
test
dec
pusha
int3
or
sub
cwtl
add
jne
popf
mov
add
jns
out
sar
bound
jne
fs
das
add
push
arpl
ds
sub
insb
mov
aaa
xchg
xchg
iret
enter
dec
andl
add
mov
dec
mov
mov
shlb
mov
adc
add
jae
in
fidivrl
les
lock
or
pop
cmp
mov
inc
or
hlt
add
sahf
movsb
push
xor
inc
popa
sub
icebp
pusha
aad
dec
pop
mov
mov
jle
and
cmpsl
pop
bound
sub
mov
xchg
and
sbb
test
fs
jb
test
dec
imul
enter
sbb
dec
jo
sub
or
stos
fldenv
dec
and
movsl
jb
add
inc
and
sahf
xchg
inc
aaa
add
push
mov
inc
cmpsb
push
hlt
das
loope
sub
scas
mov
cmp
pop
xchg
xchg
in
inc
add
ja
inc
pop
leave
sub
fs
leave
nop
hlt
loopne
mov
out
insl
call
add
test
mov
js
adc
pop
lahf
and
stos
or
xchg
cli
repnz
mov
add
pop
mov
add
and
int
sub
aam
add
mov
nop
scas
enter
inc
imul
add
dec
mov
jb
fdivs
lods
add
mov
mov
adc
orl
xchg
jecxz
sbb
inc
cltd
jnp
add
dec
push
mov
loope
jg
sub
pop
js
inc
xchg
out
add
jne
add
mov
xorl
pop
and
or
adc
shlb
je
pop
js
xlat
jb
sbb
loope
fldt
leave
movsl
or
and
inc
movsb
in
mov
add
inc
jnp
add
out
and
popf
jmp
cmp
loope
addb
arpl
js
jp
or
cmp
andl
shlb
pop
shrb
pop
je
pop
outsl
inc
arpl
in
cltd
pop
adc
iret
and
loope
fistps
scas
pop
movsb
pop
or
mov
add
mov
popa
push
inc
aaa
and
subl
mov
cmp
popa
pop
stos
cwtl
lods
or
and
jns
pusha
add
mov
cmp
push
or
das
pop
mov
lock
xor
in
add
add
scas
inc
call
lds
mov
and
les
xchg
mov
add
xor
dec
push
sub
pop
popa
lret
add
adc
nop
push
jl
add
int
xchg
test
xor
jae
rclb
mov
popa
nop
push
push
mulb
adc
add
jmp
js
push
push
pusha
inc
sub
pusha
adc
test
pop
mov
cmp
shlb
adc
popa
out
cmc
int
or
pop
fbld
jmp
cmpsl
add
ds
ret
out
aas
pop
pop
ja
or
adc
jl
xchg
inc
cld
pusha
orl
cmp
mov
fisttpll
js
xchg
pop
add
jbe
iret
out
icebp
out
pop
inc
lock
adc
arpl
pop
mov
int
dec
sahf
ljmp
popa
test
shlb
xor
js
in
pop
and
andb
in
jb
dec
adc
or
lods
dec
xor
lds
movsl
sbb
and
mov
add
sbb
pop
mov
mov
push
test
sub
jecxz
pop
hlt
bound
or
mov
movsl
push
mov
add
test
add
data16
push
lcall
loopne
fstl
adc
mov
add
shrb
dec
pop
inc
je
cld
push
cmp
pop
imul
loopne
mov
scas
jecxz
and
loop
adc
push
or
fs
bound
and
pop
das
jb
pop
or
add
pop
rol
testb
or
push
mov
test
aaa
test
xchg
dec
rcrb
dec
cmp
sarl
loopne
movsl
mov
into
xor
push
inc
inc
and
mov
lock
xchg
mov
mov
jle
loope
and
flds
xchg
push
xchg
mov
jo
add
mov
ds
test
adc
xlat
lea
push
divl
push
sub
scas
nop
lahf
aad
popf
add
push
and
xor
rolb
mov
dec
mov
add
test
scas
ds
js
imul
clc
push
repnz
leave
push
or
pop
loopne
dec
add
mov
stos
cltd
nop
mov
mov
iret
pop
jo
and
mov
testb
dec
in
add
and
popa
cwtl
out
mov
aam
les
nop
enter
and
mov
xor
into
add
std
jbe
mov
bound
xchg
sahf
and
js
addb
and
mov
negl
mov
adc
and
pop
mov
in
insb
and
xlat
int3
hlt
test
ds
and
loopne
loop
test
test
orb
cmp
or
xor
and
hlt
sbb
add
fucom
dec
sub
mov
aam
ljmp
pushf
outsb
shl
out
xor
dec
jg
add
inc
lret
add
and
addb
cmp
sbb
out
jl
daa
dec
lods
adc
inc
ret
in
add
add
dec
xchg
push
inc
and
xchg
nop
inc
inc
in
add
add
les
clc
dec
and
sarb
xor
leave
fcomps
leave
loopne
into
std
add
mull
test
testb
sti
scas
roll
adc
dec
lods
pop
add
out
sbb
incb
xchg
cmp
leave
pusha
jb
adc
out
sbb
push
jnp
enter
sub
roll
shlb
jo
mov
sub
sbb
daa
and
stc
cmp
xchg
push
xchg
xor
rcll
pop
mov
pop
movsb
cmpb
in
and
mov
xchg
jle
ret
mov
or
setnp
ljmp
and
arpl
jns
adc
scas
inc
pushf
push
jno
pop
lods
inc
mov
clc
stos
sub
cltd
dec
and
mov
cltd
push
xchg
mov
push
mov
pop
jb
insb
cmp
add
aaa
sbb
sub
and
add
xor
and
jno
add
nop
sbb
mov
jb
clc
add
ret
hlt
xlat
sbb
adc
or
add
insb
mov
mov
inc
clc
iret
xchg
movsb
sub
add
xchg
shll
inc
dec
shll
cli
xlat
push
xor
test
sbb
out
sbb
inc
gs
and
sub
pop
push
es
sub
hlt
enter
shlb
pop
cmp
mov
inc
jae
gs
mov
mov
inc
push
jl
adc
sub
xchg
dec
mov
outsb
push
mov
add
jb
pop
test
push
mov
call
cmpb
sbb
outsb
sub
xor
stos
cs
adc
push
daa
sub
push
xor
inc
fimuls
and
adc
in
imul
add
rcrb
adc
cmp
or
pop
in
xchg
jns
adc
lret
stos
add
xorl
loope
das
arpl
mov
inc
movsb
mov
push
adc
dec
mov
pop
or
pop
fisttpll
in
leave
adc
or
xor
movsb
mov
inc
cmp
insl
push
shl
jb
jo
mov
mov
lcall
sub
jecxz
xchg
add
or
inc
dec
jmp
test
mov
loopne
rorb
sarb
pop
mov
les
pop
mov
call
into
scas
xchg
push
cmp
mov
loopne
or
pushf
call
dec
add
data16
pop
clc
shl
jo
mov
ljmp
add
mov
and
jns
or
fcom
sbb
xor
sub
cwtl
jmp
repnz
mov
inc
lahf
jecxz
add
xor
mov
pop
bound
mov
add
dec
fsubr
lea
pop
cmpsb
lods
add
push
add
inc
andb
pop
adc
and
pop
stc
nop
je
int
sub
hlt
clc
add
jno
sub
pushf
xchg
jl
add
cmpsl
add
adc
andb
mov
dec
cltd
cmp
xchg
icebp
inc
inc
es
inc
lret
inc
mov
adc
in
push
dec
loop
xorb
movsb
hlt
add
xchg
ret
add
loopne
push
xchg
enter
pop
mov
test
test
jno
jl
inc
addr16
les
bound
jns
test
inc
add
shrb
adc
adc
or
fdivs
mov
jl
inc
push
mov
xchg
insl
xlat
or
jge
pushf
add
out
mov
xor
scas
xor
iret
xchg
in
dec
pop
push
mov
add
rcrb
loopne
cld
pop
lds
outsb
rcrb
mov
push
out
fbstp
cmc
or
pop
mov
adc
sbb
leave
push
aad
pop
inc
dec
and
sar
add
lods
hlt
stos
add
or
jecxz
push
xchg
nop
or
rolb
inc
cmp
mov
dec
and
sub
in
xchg
pop
aas
clc
faddp
and
jbe
sbb
lea
sbb
push
and
iret
dec
mov
mov
in
lret
out
mov
push
shrb
lock
push
sbb
cpuid
adc
add
xchg
pushf
rcr
push
or
inc
inc
add
lahf
push
dec
or
jg
ror
filds
dec
sbb
mov
pusha
push
dec
cmp
adc
push
daa
mov
pop
add
pop
jno
and
pop
repnz
jne
loope
mov
hlt
inc
xor
movsl
mov
and
cmpb
add
push
stc
hlt
xorb
pop
test
insb
mov
adc
pop
jne
add
fdivrl
or
loop
pop
adc
adc
inc
adc
ja
cmp
mov
sub
xor
fists
sub
inc
mov
ficompl
xchg
push
add
pop
dec
and
sub
pusha
je
xchg
push
inc
movsl
cmpsb
sarb
pop
pop
ja
or
iret
test
xchg
sub
push
icebp
popa
fisubrl
scas
jb
adc
mov
lret
nop
orb
add
dec
jp
or
rcl
adc
and
add
xor
push
add
mov
movsl
ficoml
and
and
mov
mov
cmp
sbb
stc
adc
xchg
aam
and
rclb
sbb
pop
push
push
imul
adc
mov
mov
out
sbb
sub
pop
aad
bound
add
pop
in
push
add
push
insl
adc
orl
fisubrl
dec
shlb
loope
nop
test
cli
push
stc
cwtl
ss
aaa
insb
imul
mov
rcrb
adc
repnz
lock
aam
add
add
insl
jge
push
sahf
rcrb
push
sbb
bound
lods
mov
fs
fldt
addr16
mov
jge
sub
cltd
nop
mov
ja
clc
lods
out
adc
lds
inc
or
xchg
add
enter
push
inc
mov
clc
dec
push
jecxz
cs
in
add
pop
sbb
xor
mov
test
inc
ret
mov
enter
mov
jecxz
and
les
sbb
mul
pusha
sub
add
pop
pop
and
pop
jo
xchg
mov
les
inc
inc
mov
or
jl
mov
dec
std
mov
and
ljmp
mov
fbld
lock
add
xlat
cmpsb
mov
dec
or
les
ljmp
sub
das
ret
mov
clc
into
pop
mov
ds
dec
inc
pop
imul
mov
fs
jle
adc
pushf
out
cmp
clc
dec
enter
je
sbb
cmp
xlat
cmp
mov
dec
xchg
pop
int
outsb
mov
stc
movsb
sub
fadds
fld
add
lock
loope
pushf
scas
hlt
or
gs
xchg
dec
mov
jecxz
sbb
adc
aaa
pop
outsb
xor
nop
mov
or
mov
leave
mov
adc
js
int3
adc
popf
xchg
sub
icebp
inc
stc
aas
test
das
lea
push
cmp
sub
fcmovne
es
add
ds
cmp
inc
sub
mov
and
or
das
lock
mov
pop
xchg
mov
mov
dec
cmp
xor
adc
dec
clc
xor
cmp
rol
adc
popa
mov
arpl
dec
mov
jnp
insb
je
add
negl
out
arpl
aaa
les
adc
sub
testb
mov
inc
cmpsb
mov
rolb
inc
sub
aas
aam
sub
test
inc
add
push
jmp
jl
add
pop
cs
into
mov
sub
sub
dec
daa
xchg
orb
inc
fsubl
hlt
dec
dec
add
pop
rorl
xlat
pop
es
les
cld
rcrb
fwait
scas
add
aaa
jp
das
outsl
jecxz
add
sahf
pop
inc
and
into
or
sub
dec
mov
inc
xchg
add
mov
push
dec
frstor
or
cld
mov
pusha
inc
adc
lea
cmp
mov
xchg
loopne
cmp
lret
mov
bnd
nop
adc
sbb
test
sub
orb
adc
cmp
mov
pop
pop
lret
cmc
sbb
dec
imul
cwtl
adc
pusha
and
dec
push
loopne
into
mov
pop
xchg
scas
fisttpl
adc
insl
in
dec
dec
faddp
stc
adc
enter
sub
sub
test
dec
jg
mov
cmpb
and
adc
jecxz
lock
add
sbb
or
lds
rol
sub
add
add
aas
or
cmp
pop
add
into
xor
cmp
xor
jnp,pt
push
push
sbb
add
out
or
xchg
into
and
ret
cmp
cmp
add
inc
repz
adc
jmp
push
pushf
mov
jge,pn
xchg
lcall
add
loop
pop
mov
loope
movsl
or
daa
inc
les
jbe
adc
dec
ror
push
mov
cmp
in
inc
add
mov
pop
cmpsl
fmul
mov
clc
sub
test
and
inc
hlt
cs
or
loop
mov
les
out
and
pusha
adc
ret
pop
jae
add
cld
cmpsb
hlt
or
fcoms
sub
dec
in
daa
std
pop
push
test
daa
int3
adc
js
dec
lahf
out
dec
test
cmp
addr16
repnz
fnsave
xlat
rolb
push
xor
in
andb
adc
inc
subl
pop
das
sahf
fs
push
xor
ss
pusha
add
inc
std
clc
call
loope
cmp
into
lret
xor
movsb
add
insb
arpl
repnz
pop
js
add
test
xor
cmp
sub
lret
cmp
lods
mov
pushf
addb
fucomi
inc
in
jb
xorb
inc
or
jnp
inc
and
cmp
std
and
cmp
or
into
inc
aad
hlt
mov
or
fstpt
cmc
negb
xchg
in
pop
andl
jne
out
mov
adcl
or
mov
dec
mov
inc
or
inc
sbb
pop
das
clc
shl
hlt
inc
push
insl
and
sbb
cmp
jmp
mov
mov
mov
je
stos
das
fisubrl
testl
into
push
add
add
or
cs
xchg
jg
es
arpl
outsl
ret
bound
dec
loopne
xchg
adc
jns
fwait
mov
outsl
push
mov
imul
sbb
into
call
inc
in
stos
pushf
call
jbe
out
and
sub
addr16
shl
out
cli
mov
xor
xor
push
sti
add
outsl
push
xchg
cwtl
popf
call
and
dec
rcrl
adcb
sbb
mov
lss
add
jae
repnz
add
call
shl
lds
in
add
jno
lock
add
ljmp
push
sbb
cmp
hlt
scas
jmp
je
adcb
mov
sbb
scas
xor
loop
push
popf
push
pop
or
cmp
cmpsl
test
lods
negl
cwtl
inc
add
jl
sbbb
js
sar
jnp
cli
mov
pop
inc
pop
mov
add
jno
aas
sub
mov
xchg
add
rclb
inc
enter
jae
sbb
aas
js
bound
out
or
enter
mov
add
in
aaa
xor
ret
xor
shl
pop
inc
inc
pop
pop
pusha
andl
movsl
add
scas
push
cli
icebp
dec
in
push
sub
cwtl
xchg
pusha
adc
xor
sbb
out
pop
int3
jb
cltd
loopne
lret
lods
sub
fs
adc
rcrb
xchg
ds
mov
pop
inc
or
fwait
adc
cld
loope
js
jbe
sub
add
mov
xchg
ljmp
mov
xchg
pop
add
lock
je
rcrb
xchg
add
add
push
pop
div
rolb
test
dec
repnz
clc
mov
pop
xor
dec
or
sbb
call
mov
mov
ficoms
xor
push
jno
cmp
cmp
mov
mov
mov
into
sub
in
add
les
mov
mov
add
mov
outsb
mov
jne
adc
adc
and
sbb
xchg
test
jg
dec
jge
sbb
or
xchg
push
add
sub
jmp
sbb
xchg
in
dec
ss
or
adc
pop
loopw
xchg
and
lock
pusha
cwtl
push
and
sub
js
lods
out
sub
sahf
add
leave
nop
dec
insb
stc
dec
xchg
xchg
cmp
adc
mov
add
xchg
aaa
and
and
lock
leave
pop
push
lock
xor
lea
hlt
stc
inc
cmp
inc
lock
loopne
mov
std
jmp
xchg
test
cli
add
xor
fs
stc
rolb
add
aad
or
add
pop
or
pop
aas
xchg
lea
or
xor
mov
movsb
or
push
xor
aaa
mov
and
pop
ss
lds
sub
xor
addr16
add
ds
mov
aaa
mov
xchg
std
int
jmp
pusha
stos
bound
pusha
xchg
xor
lret
add
rcr
es
ja
sysenter
inc
cmpl
lahf
cmp
push
aam
inc
rcrb
add
jno
cmpsb
and
lds
sub
inc
jecxz
add
test
iret
push
pop
mov
inc
or
test
sbb
mov
cmp
inc
or
orb
xchg
aam
jno
pop
popa
fiadds
out
imul
jno
mov
cld
pushf
cmp
mov
sti
shll
bound
loopne
repnz
add
pop
push
sub
cwtl
jbe
cwtl
sub
xchg
xchg
mov
enter
pusha
ja
pop
das
inc
or
mov
and
mov
subb
mov
jge
sub
and
lahf
xor
ucomiss
cmc
or
stc
push
dec
mov
test
jecxz
movl
stc
fmul
into
fldl
or
cwtl
sub
add
andnps
pusha
pop
stos
es
pop
out
aam
xor
icebp
es
loopne
ficomps
push
push
xchg
lea
mov
test
jne
push
out
cmc
mov
fisttpl
shll
push
dec
lds
add
js
rclb
mov
inc
fcomp
loop
mov
dec
insl
out
cmp
imul
das
scas
loope
add
xchg
aas
mov
ss
mov
loope
xor
add
or
cmp
mov
adc
arpl
sbb
xchg
and
mov
sub
or
jb
push
jbe
xor
cltd
fbld
pushf
add
cmpsl
pusha
or
icebp
fnstenv
dec
add
pop
mov
sub
inc
lcall
add
enter
out
add
mov
pop
inc
ret
mov
add
lea
add
xlat
mov
jae
es
sub
xchg
sub
movsl
fcoml
testl
mov
ss
jb
dec
jno
cmpsb
and
mov
mov
adc
test
xor
mov
adc
mov
push
pop
call
arpl
ud1
das
adc
adc
inc
or
in
pop
pop
inc
add
cwtl
mov
sub
rorl
adc
movsl
je
pop
pop
repz
fwait
jae
repnz
push
jle
mov
into
stos
mov
xorl
fwait
jns
shlb
dec
outsb
push
add
lods
xor
out
jmp
in
xor
ret
add
pop
pushf
push
push
mov
add
cld
outsb
cmp
in
add
xor
sbb
or
out
add
and
hlt
sbb
jmp
mov
push
nop
test
fucomp
hlt
or
outsb
add
pop
pop
cmp
shll
sbbl
sub
fisttps
cmp
hlt
xchg
jne
cmp
popa
cmpb
sub
adc
jnp
add
scas
xchg
dec
mov
inc
cmp
cmp
clc
mov
inc
fisttpll
add
pop
push
dec
sub
xor
pop
mov
mov
mov
nop
push
jno
call
mov
add
add
test
sub
jnp
aaa
cwtl
repz
mov
xor
sbb
pusha
addl
ret
ds
xor
xor
pop
popa
or
cmpsl
adc
add
in
add
adc
cmp
hlt
testl
inc
outsl
or
adc
mov
pop
pusha
stos
dec
xor
fmul
push
pusha
pop
xchg
and
es
pusha
lock
popa
stos
xchg
mov
jns
add
loope
push
cld
xor
pop
mov
add
jbe
lea
rol
ss
loop
cmpsb
add
insl
dec
ljmp
inc
imul
lahf
xor
mov
mov
jmp
cmpsb
and
add
add
stos
in
sub
xchg
cmpb
mov
lods
xchg
mov
push
dec
mov
movb
push
pop
mov
or
adc
or
imul
iret
xchg
rcrb
mov
loopne
mov
add
popf
incb
adc
mov
cmc
pop
push
mov
push
jnp
pop
mov
outsl
inc
bound
add
push
into
xchg
pusha
in
or
arpl
cmpsb
imul
insl
shll
test
mov
add
sub
ja
roll
in
std
adc
negl
js
aas
xlat
lods
add
add
pusha
mov
movb
inc
andl
jle
pusha
adcb
push
add
dec
cmp
int3
dec
rcrl
add
test
add
xor
add
jg
out
and
add
repz
mov
xchg
es
cmp
pop
sub
into
cmp
mov
outsb
dec
inc
xchg
xor
cltd
sbb
setle
pop
sub
push
jb
aam
inc
inc
sbb
xor
cmp
jae
adc
adc
jecxz
enter
addl
out
aas
jg
mov
sub
hlt
mov
roll
pop
or
mov
cld
mov
jae
scas
and
jl
sti
add
inc
or
nop
pushf
add
jnp
movsb
xor
add
rorl
adc
cmpsl
dec
aam
mov
inc
add
xchg
into
fwait
cmp
roll
aam
fiadds
mov
lds
dec
pop
mov
popa
rolb
mov
inc
pop
das
fldenv
jo
sbb
fsubs
jmp
add
jns
sbb
adc
outsb
shll
add
and
sbb
js
adc
xchg
and
daa
jmp
sbb
and
insl
shll
xor
jno
mov
mov
loope
ja
out
sbb
xchg
xorl
xchg
test
dec
jbe
mov
out
add
xchg
pop
cwtl
rcpps
rcrb
in
sbb
cmp
aam
loopne
pop
dec
xor
aaa
and
nop
cmpsl
jno
test
jbe
push
mov
dec
ja
mov
adc
cmp
xor
ljmp
imul
fisttps
mov
or
jno
sub
mov
push
clc
pop
adc
add
or
add
sbb
adcb
pop
cli
mov
cmc
pusha
fstp
inc
out
add
movsl
fwait
jo
stos
mov
mov
in
dec
and
cmp
popa
cmp
adc
fsub
stos
adc
mov
and
jo
mov
sbb
in
or
xchg
mov
inc
push
out
add
mov
pop
pop
fistpl
and
push
leave
aam
movsb
fadds
es
inc
inc
loope
add
add
fwait
dec
insl
mov
inc
cmp
mov
push
or
and
adc
mov
or
inc
xchg
cmp
inc
add
cld
adc
xor
push
xor
mov
dec
loopne
xor
je
shlb
ja
fcmovnb
adc
lock
cmpsl
add
mov
fimull
stos
mov
mov
and
mov
or
mov
add
ja
into
clc
sbb
insl
out
stos
pusha
xor
inc
sbb
add
xchg
addr16
add
jmp
test
inc
lahf
rclb
imul
cmpsl
mov
icebp
repnz
jle
add
adc
pop
repnz
nop
pushf
cmpsb
cwtl
mov
push
push
mov
test
xor
subl
add
hlt
pop
mov
mov
or
push
aad
push
xchg
add
popa
out
xor
jae
mov
pop
pop
adc
and
xchg
js
and
add
xchg
add
enter
mov
pop
out
sbbb
test
mov
and
ret
cwtl
add
inc
push
adc
or
cmp
add
mov
js
lock
loop
mov
loopne
dec
mov
adc
lods
inc
mov
xchg
mov
mov
inc
pop
push
mov
xchg
xchg
pushf
out
inc
add
mov
enter
in
sbb
orl
stos
mov
mov
ret
imul
mov
mov
dec
pop
mov
call
movsl
jecxz
ds
add
ljmp
sbb
lock
add
insb
cwtl
mov
mov
test
bswap
pop
cmp
ljmp
out
xor
in
mov
andl
stc
or
push
push
mov
add
adcb
add
imul
les
add
inc
xor
loopne
cli
lea
adc
add
xchg
js
sub
pop
int3
inc
repnz
cs
pop
add
xchg
jp
sub
in
add
shr
jno
aas
imul
inc
add
push
enter
cld
adc
inc
adc
in
test
ja
repnz
mov
inc
jmp
imul
inc
pop
add
sub
adc
xchg
mov
lret
push
sub
daa
cs
xchg
lock
cmpsl
sub
dec
les
inc
ljmp
pushf
pop
repnz
arpl
fsubl
js
jne
movsl
dec
pusha
pop
mov
inc
add
nop
stc
adc
mov
mov
pusha
inc
fsubl
jno
mov
ja
lock
add
cltd
cmp
or
xor
sbb
dec
mov
cmp
dec
lods
fldl
push
sti
jbe
jb
adcb
mov
out
add
xchg
mov
in
mov
push
jbe
add
jb
push
aas
xorl
inc
inc
aas
add
pop
ljmp
xor
cmp
movsb
dec
roll
pusha
pop
add
mov
inc
sub
add
rolb
cmp
ret
aaa
push
in
add
loope
xor
jne
and
std
ljmp
dec
jbe
inc
fiaddl
sarl
aas
add
int3
aaa
cwtl
pop
ss
xor
lock
fwait
js
push
rorl
mov
add
rorl
andl
adc
pop
lds
cmpsb
shrb
shll
xchg
xor
in
dec
jmp
add
ret
jecxz
test
out
xor
xor
dec
push
adc
mov
das
or
test
adc
jecxz
add
ret
pop
add
adc
test
pop
xor
faddl
test
jmp
inc
std
and
add
cmp
adc
sbb
outsb
sub
and
cmp
lods
jmp
mov
and
std
mov
mov
mov
loopne
inc
sbb
lret
dec
dec
push
mov
pushf
mov
mov
test
lahf
add
jmp
jl
add
imull
jmp
push
cmp
mov
dec
add
fcmovnbe
mov
nop
pop
stos
mov
ja
mov
add
mov
xchg
and
mov
ret
and
fldt
push
sub
cld
add
mov
dec
call
sub
add
xchg
lods
outsl
icebp
adc
std
lret
addl
lea
add
or
dec
outsb
daa
fldt
aad
imull
pusha
insl
add
popf
xchg
lea
arpl
add
adc
int
add
mov
cld
repnz
or
jle
loopne
xor
mov
inc
idivb
std
jnp
add
mov
cmpsl
xor
or
mov
add
cmp
xorb
mov
sarl
mov
loopne
inc
mov
in
inc
int
dec
sbb
aad
ret
es
pop
dec
or
mov
xchg
add
mov
dec
push
mov
scas
xchg
test
adc
inc
add
das
pop
mov
adc
add
leave
xor
pop
push
inc
rorb
and
add
or
add
into
std
sbb
sahf
fdivrs
adc
fistpll
fiaddl
add
dec
pop
leave
xchg
cmp
jl
xchg
xchg
jo
cmp
add
jbe
add
push
sub
shll
cmc
add
cmp
movsl
in
mov
sub
sub
call
in
dec
loope
add
mov
pop
add
mov
pop
add
daa
mov
cmpsl
add
jb
inc
jmp
stos
sbb
xchg
and
cld
in
loope
or
sbb
xchg
cltd
and
mov
lret
jno
or
mov
xor
lods
lea
pop
sub
push
sbb
xchg
adc
adc
push
dec
cwtl
add
jbe
ss
and
cmp
mov
test
xor
and
or
mov
or
cmpl
and
push
idivl
add
test
dec
xchg
cmp
lock
xlat
or
mov
mov
stos
roll
and
test
bound
idivb
dec
aam
xorl
mov
adc
pop
add
cwtl
mov
das
adcl
add
mov
jnp
and
or
adc
mov
cmpsb
mov
mov
dec
subb
daa
es
add
leave
or
pop
sub
pusha
mov
add
pushw
lods
mov
jge
xchg
dec
sbb
jle
push
or
dec
adc
add
mov
movsl
data16
or
mov
add
xchg
adc
cwtl
fwait
in
add
nop
dec
push
jp
call
or
repnz
inc
pusha
cmp
test
stos
cwtl
pusha
test
or
movsb
scas
adc
fs
xor
lea
mov
push
movsb
in
pop
inc
fwait
out
pop
ljmp
ret
inc
add
sbb
hlt
or
xor
je
push
mov
cmp
sub
and
stos
nop
inc
or
fcoml
and
push
add
cwtl
inc
cmp
aam
testb
dec
inc
rorl
and
je
rcrb
loopne
lock
je
adc
mov
insb
js
jns
scas
dec
outsb
mov
in
xchg
add
cli
xchg
imul
jbe
ret
pop
test
pop
das
aam
xor
popa
mov
movsb
cmp
cwtl
push
mov
test
or
pop
ss
and
add
dec
daa
push
push
movsb
orb
clc
and
dec
in
mov
sahf
and
fdivr
push
and
mov
test
mov
stc
pop
cmpsb
outsl
in
fwait
addb
dec
jbe
mull
movsb
insl
sbb
cwtl
cwtl
mov
pop
add
aam
not
add
or
pop
pushf
leave
ficomps
add
rcrl
pop
xor
jnp
or
flds
and
incb
add
or
mov
shll
xchg
pop
xlat
cmp
out
stos
fidivs
xchg
aas
notb
into
cmp
add
mov
enter
pop
les
xor
jno
test
testb
arpl
add
pop
inc
in
adc
test
or
xor
nop
popa
add
pop
aam
lods
fnstenv
xor
jecxz
xchg
in
mov
lds
scas
rclb
lea
sti
popa
add
mov
pop
mov
mov
dec
push
mov
clc
xor
rcl
and
pop
cmp
inc
or
cmpl
ret
jo
test
jl
add
adc
add
and
jo
pop
add
movsb
inc
mov
std
mov
push
sbb
push
addb
inc
add
xchg
mov
add
cmc
xchg
test
ss
xor
add
repz
sbb
sbb
in
pusha
test
or
add
pop
jp
add
ret
scas
insl
sub
inc
push
ror
or
sub
inc
cs
fsubrl
jnp
xor
js
fs
lret
add
jno
jo
inc
imul
ret
jb
mov
cli
mov
daa
sub
adc
arpl
sbb
or
sbb
or
sub
pop
inc
test
clc
xchg
pop
lock
aaa
lret
xor
mov
cmp
or
fs
out
subb
movsb
hlt
sbb
in
add
push
mov
insl
or
cs
lret
add
stc
out
add
out
inc
ljmp
ds
push
subl
or
mov
cwtl
psrad
ficompl
icebp
push
cmp
mov
inc
bound
sub
imul
sub
push
call
jg
add
sbb
jmp
add
or
in
std
test
fadds
add
loope
push
cmpsb
dec
pop
test
outsl
jo
scas
das
mov
sub
sub
sbb
push
dec
imul
stos
jge
xchg
inc
int3
aad
add
or
subl
pop
sarb
leave
adc
jg
scas
add
divb
movb
andl
enter
aaa
js
out
out
cmp
sub
mov
add
jl
fimull
stos
je
push
outsl
jbe
add
sub
push
mov
jns,pn
enter
inc
wrmsr
or
dec
jno
add
push
rclb
xor
add
mov
and
faddp
aas
push
jo
push
daa
push
add
or
andb
pop
in
and
mov
dec
loope
add
adc
or
inc
jb
add
cmp
sbb
jne
dec
or
call
add
fsubrl
jp
add
and
in
dec
or
jne
or
xor
add
pop
loope
sub
and
cmp
push
enter
or
and
push
add
pop
mov
fistl
pop
and
inc
sbb
popa
push
and
sahf
sub
cmpsb
sbbb
pushf
inc
add
jge
push
cwtl
xor
push
adc
sub
adc
shlb
sub
outsl
mov
pop
nop
call
cld
jns
mov
push
nop
lock
inc
xchg
pop
push
ss
and
push
add
inc
cmp
pop
mov
dec
add
nop
out
aaa
mov
xchg
sbb
pop
lock
inc
dec
and
inc
and
test
sarl
add
into
mov
call
adc
push
push
popa
add
jg
sub
and
or
adc
mov
in
inc
adc
outsb
aam
or
fadds
hlt
enter
or
adc
add
sbb
pop
cltd
adc
movl
daa
rorl
jne
sbb
jmp
es
adc
aad
rolb
jge
jb
mov
scas
adc
xchg
add
cli
lods
push
mov
lahf
repz
nop
lock
test
mov
mov
pusha
mov
xor
jae
inc
and
movntps
xor
lods
mov
xchg
add
inc
sub
and
mov
and
adc
push
sbb
cmp
jl
xchg
out
popf
push
dec
xor
stc
xchg
xchg
jo
mov
inc
xchg
jne
xlat
fs
sbb
xchg
std
sarl
out
push
call
stos
out
xor
add
cmc
xor
lock
xchg
cmp
xchg
pushf
or
or
cmp
imul
sbb
and
cmp
pop
mov
add
cltd
adc
pop
je
insb
scas
or
shl
dec
shlb
jae
add
lcall
mov
rolb
sti
cltd
mov
push
dec
xchg
mov
xchg
test
dec
sub
cmpsl
add
inc
xchg
ja
aad
adc
or
test
mov
pop
jl
adc
lahf
jmp
or
xchg
sbb
cmp
out
js
mov
mov
enter
jecxz
popa
xor
das
sarl
jle
or
repz
mov
add
out
mov
ret
sbb
dec
pop
rolb
scas
pusha
pop
cmp
cmp
into
add
xor
push
xchg
lods
dec
sub
cmc
in
add
loopne
loop
rolb
add
fnsave
outsb
pop
jns
add
stos
push
dec
push
cmc
and
scas
sbb
outsl
or
mov
pushf
sub
sub
sub
push
rorl
hlt
jae
movsb
lods
sbb
mov
cmp
xchg
pop
add
mov
add
or
lcall
fmul
cmpsl
or
mov
push
fs
xor
cltd
icebp
stos
aam
xorb
mov
sti
lret
sarb
add
jae
mov
or
or
xor
pop
imulb
add
es
add
daa
sbb
rcl
xor
mov
ds
ss
or
lea
sahf
xchg
add
leave
mov
je
or
fcompl
outsb
dec
sahf
fs
xchg
push
popf
or
sbb
xor
and
or
std
cmp
ret
addb
adc
jg
add
mov
lea
arpl
add
das
fildll
aaa
or
cpuid
add
ret
imul
add
mov
push
adc
lea
pushf
inc
push
lds
dec
ret
add
pushf
and
inc
lock
mov
gs
mov
add
jno
arpl
fldl
int
dec
aas
mov
sahf
out
divl
aaa
sub
sub
enter
or
insl
sbb
mov
sub
test
xorb
and
mov
repnz
jb
add
icebp
pop
and
xor
sbb
repz
sub
adc
out
mov
sahf
jmp
dec
xchg
in
cs
inc
push
and
lock
imul
dec
lock
test
and
xor
addb
pop
jp
stos
cltd
add
out
fs
cld
cld
add
adc
pushf
add
pop
jno
movsb
mov
aad
jns
sti
nop
dec
mov
pop
adc
bound
outsb
loopne,pn
mov
scas
jl
cmp
pop
pop
aaa
repnz
add
sub
add
stc
jb
inc
mov
add
cli
pop
daa
dec
or
mov
add
fimuls
adc
sbb
movsb
mov
scas
jbe
jmp
adc
lock
sbb
sbb
adc
shrb
lcall
rol
pop
or
add
je
out
pop
loopne
movsb
int3
adc
jge
push
aam
add
int3
pop
pop
div
test
add
cwtl
pop
mov
movsl
test
mov
enter
add
push
push
mov
mov
or
xchg
mov
in
lds
bound
mov
cmp
test
inc
sbb
shll
daa
enter
xchg
push
mov
icebp
mov
jle
adc
pop
jns
mov
sbb
hlt
mov
testl
pusha
push
cmp
add
or
mov
or
sbb
popa
pop
loopne
cmp
adc
add
adc
dec
cmp
and
dec
push
inc
popa
scas
and
add
out
and
imul
jge
and
addl
mov
nop
movlps
hlt
loop
cvtdq2pd
psubusb
ss
out
clc
xor
mov
or
cmc
repnz
add
inc
inc
push
rcrb
cmp
rclb
movsl
pop
sbb
ficompl
sub
pushf
push
xor
xchg
mov
add
xchg
sbb
push
pop
lahf
pop
mov
add
mov
push
push
mov
call
test
out
fldl
adc
clc
into
push
jno
jbe
xchg
call
push
dec
jae
nop
lds
mov
stc
mov
mov
addr16
pop
loope
rclb
nop
mov
in
pop
dec
decb
rcl
daa
ja
pop
mov
sub
adc
in
add
scas
push
mov
mov
cld
pop
cmp
nop
add
test
sub
unpcklps
mov
inc
add
addr16
loopne
rorb
lock
and
fucom
jns
popa
push
adc
nop
xchg
scas
test
dec
mov
insb
xor
rorb
xor
fsubp
push
jns
adc
add
iret
xor
pop
jae
sbb
shlb
push
or
pop
shrb
movsb
and
jnp
ror
cwtl
sbb
cmp
xchg
inc
add
test
xlat
xor
cmpsb
sbb
mov
out
cmp
sbb
lods
test
out
cvtps2pd
mov
jo
dec
jno
sbb
sub
sub
sub
icebp
enter
enter
lea
push
jae
mov
mov
add
mov
push
inc
jl
jp
jmp
out
scas
jge
add
test
lock
cmovg
push
xor
lcall
sub
add
adc
mov
fcompl
dec
enter
add
fiaddl
inc
clc
and
push
adc
notl
jge
add
cmp
leave
aam
enter
jmp
xor
lock
xor
lret
fildll
in
mov
xchg
mov
mov
and
sbb
lds
data16
jo
xchg
sbb
and
fnstcw
rolb
jmp
int
sub
add
rclb
shrl
outsl
adc
scas
or
xchg
adc
pusha
cmp
test
ror
dec
xor
aas
popf
lahf
fs
inc
loopne
mov
insb
jno
cs
push
inc
pop
ss
lds
nop
add
push
dec
lods
rolb
mov
loopne
xchg
add
add
frstor
es
add
pop
sub
or
add
imul
push
ljmp
inc
xchg
movq
push
dec
or
sti
push
loope
pushl
adcb
inc
sub
add
mov
pop
aas
ja
std
xor
mov
xor
fistl
in
mov
test
push
add
pop
loope
xchg
xchg
pop
test
aam
cmp
imul
jp
mov
jl
add
in
inc
mov
js
cli
je
jg
sbb
loope
in
add
or
xor
loop
mov
push
jecxz
call
xlat
push
xor
aam
add
mov
je
push
adc
mov
lds
xor
outsl
pop
inc
enter
repnz
fcoms
xchg
ret
outsb
and
fwait
rolb
xchg
xlat
test
clc
lahf
add
arpl
shll
leave
cld
mov
mov
mov
in
jnp
jg
xchg
adc
inc
xchg
sbb
dec
cmp
movsl
icebp
sbbb
ror
push
add
stos
adc
mov
add
xor
xor
fs
pop
lcall
ret
mov
repnz
push
cwtl
and
test
jo
callw
jno
jge
test
adc
add
jp
inc
lahf
js
cmc
ffree
sbb
imul
inc
call
lods
dec
fnstenv
inc
mov
push
fbstp
shrl
add
pop
ret
jge
shl
out
sub
cmp
arpl
fcoml
ja
inc
pop
shlb
loope
adc
insl
pop
or
xor
lock
xor
test
or
outsb
ret
pop
sub
xchg
sbb
dec
push
cmp
fwait
addb
dec
clc
and
pushf
mov
adc
add
sub
fcmovnbe
mov
loopne
int3
pusha
push
jne
add
sub
pop
or
adc
push
nop
or
js
mov
dec
mov
pop
mov
ljmp
rcrl
mov
outsb
out
xchg
sub
or
sbb
cmp
push
jmp
es
in
cmp
add
jno
xchg
or
fsubr
mov
add
fdivl
gs
rolb
mov
fcompl
sahf
xor
cmp
outsl
xor
shlb
into
cwtl
bnd
sub
push
adc
or
add
das
movsb
push
xor
dec
lds
sub
data16
adc
loopne
sbb
test
mov
out
xchg
out
into
xchg
add
loope
jecxz
ds
push
pop
inc
rol
enter
pusha
nop
add
xlat
sbbb
sub
jl
add
inc
rclb
add
xchg
inc
stos
push
xor
mov
aas
sbb
loope
loopne
and
out
xchg
mov
xchg
add
stos
in
mov
int3
nop
fidivrs
pop
into
pop
aas
dec
pop
ret
add
xor
jmp
sub
in
roll
and
pusha
repnz
pop
ret
fcomi
loopne
push
adc
scas
mov
xchg
pusha
xor
add
dec
in
or
clc
push
mov
fstpl
push
dec
push
shll
jmp
lods
fsub
mov
cwtl
nop
nop
inc
sub
and
sbb
add
xor
pop
mov
stc
andl
in
and
or
cmp
out
test
lret
mov
lods
mov
mov
arpl
adcl
pop
adc
xchg
mov
pusha
dec
xchg
outsb
adc
arpl
push
add
fnstsw
outsl
loope
push
sahf
rorl
fistl
adc
push
push
int3
insb
pop
loopne
add
test
aaa
daa
add
inc
cmp
mov
pusha
lods
dec
fcoms
mov
and
or
mov
add
out
cld
xchg
mov
aas
pop
add
mov
lahf
lcall
cmpb
es
mov
and
movsb
stos
fidivrl
cmp
add
or
pop
mov
sarb
push
mov
ret
xor
and
into
rclb
scas
fistpll
dec
mov
in
pop
es
mov
andb
lods
sub
sub
mov
sbb
adc
push
fadds
adc
add
cmp
fs
bound
mov
iret
adc
movsl
sbb
xchg
xchg
and
and
stc
mov
lds
cwtl
adc
out
nop
jl
pop
clc
xor
push
lahf
add
and
cmp
and
mov
add
int3
xchg
test
jo
mov
movsb
xchg
sti
xchg
jo
sarb
and
push
xchg
pop
add
arpl
ja
xor
pop
cld
scas
mov
and
mov
aam
add
jno
or
daa
ror
in
mov
push
add
xchg
add
out
jo
mov
add
repnz
pop
cmp
loopne
jne
mov
inc
jo
cmpsb
mov
sbb
push
loope
push
ljmp
dec
shll
cmp
dec
sub
jne
xchg
add
sbb
jo
dec
test
es
fcompl
or
fnsave
cmovae
push
and
pop
mov
add
arpl
inc
loopne
loopne
jg
push
call
in
or
out
inc
fbstp
les
adc
add
ret
ss
add
or
cmp
sbb
fcmovbe
mov
inc
cmpsb
dec
data16
lahf
es
out
pop
mov
or
sbb
outsb
push
or
orb
dec
adc
jo
fists
arpl
cmp
lods
mov
repz
jg
mov
pop
mov
test
inc
mov
cmp
sub
aad
bound
mov
push
add
fnstsw
or
jns
das
call
mov
sbb
mov
inc
xchg
lods
sub
pusha
stc
mov
sub
aam
or
scas
add
inc
ret
xor
mov
and
rclb
sbb
movsb
lea
add
mov
pushf
es
inc
add
dec
xor
mov
and
jne
add
mov
dec
sbb
popl
loopne
mov
push
add
je
mov
shlb
enter
push
fcompl
stc
movsb
aam
cmp
mulb
xor
ret
dec
insb
lds
mov
sbb
mov
inc
and
cmp
adc
adc
ret
or
xchg
fcompl
xor
push
sbb
clc
aaa
add
pop
mov
stos
in
push
add
cmp
cltd
or
xor
cmpb
stc
inc
xor
int
push
pusha
and
add
mov
sti
shl
adcl
dec
out
fs
pusha
sub
xchg
ficomps
outsl
or
xchg
lds
push
dec
int
mov
cmp
add
bound
pop
and
adc
inc
lret
and
mov
imul
mov
popa
xchg
mov
insb
mov
inc
add
into
mov
cmp
xor
jmp
negl
es
js
repz
jp
push
out
mov
push
cmp
int3
bound
popa
inc
pop
into
scas
nop
add
shlb
mov
add
push
push
jno
pop
sar
lods
and
xchg
push
or
add
out
add
mov
ret
mov
hlt
mov
add
push
add
dec
mov
into
dec
inc
shll
fldl
test
lock
ja
sub
push
sbb
inc
fs
into
ja
add
jbe
es
xchg
add
aas
push
jo
inc
mov
ja
mov
hlt
and
push
cmp
in
add
xor
push
test
inc
add
in
clc
xor
aaa
es
jecxz
inc
jl
pop
add
bound
aas
or
mov
test
mov
es
push
inc
add
add
mov
cmc
sahf
ret
mov
inc
mov
add
pusha
cmp
adc
or
dec
lret
aam
jmp
jno
mov
gs
dec
or
cmp
inc
or
nop
inc
jl
mov
xor
lds
shll
hlt
add
outsl
mov
adc
xchg
gs
add
addb
and
shl
inc
xor
mov
lahf
xor
dec
adc
and
add
xchg
mov
jmp
push
jecxz
add
sub
into
pop
pop
and
push
xor
inc
push
std
stc
enter
push
cmp
test
fldenv
pop
repnz
push
orl
pusha
and
cmc
pop
fnstsw
add
sbb
adc
es
add
sbb
mov
pop
into
xor
jecxz
test
aam
or
or
mov
mov
sbb
add
xchg
dec
xchg
mov
inc
adc
cmp
push
fs
in
add
and
xor
bound
enter
or
mull
pop
pop
mov
xchg
ja
xchg
ljmp
sub
cli
xor
fbstp
cmpl
jb
popf
mov
mov
rorb
call
jo
lret
or
jno
inc
pop
pop
das
or
mov
mov
add
push
fnstsw
inc
shlb
jge
add
dec
out
mov
add
xchg
mov
loopne
inc
les
inc
sarl
push
dec
les
insb
dec
inc
rorb
hlt
loopne
ds
cld
add
clc
xor
loope
int3
mov
lods
inc
lret
lea
shlb
mov
loop
push
push
cltd
jb
mov
shlb
dec
cwtl
data16
call
pop
fstp
mov
pushf
mov
mov
ss
jbe
cli
sub
mov
testl
fcoml
out
adc
and
pop
cmp
xchg
cld
addl
in
ret
cmpsb
je
cmp
enter
popa
push
or
add
enter
test
popa
loopne
push
aas
xchg
outsl
movsb
int3
push
pop
lea
xor
cwtl
or
dec
cmc
std
adc
pop
in
out
jmp
in
mov
les
ret
outsl
ret
cmp
enter
lock
in
pop
stos
jl
mov
inc
loope
jl
mov
add
cmpsl
mov
movsl
adcl
add
sbb
xchg
mul
add
pop
adc
jmp
lods
xchg
in
das
xchg
push
pop
dec
lds
loop
pop
aam
inc
test
mov
add
cmp
test
movaps
lcall
adc
fcom
mov
sbbb
test
add
popf
and
aas
add
orl
ss
mov
dec
adc
sbb
xchg
andb
loopne
sub
jne
push
dec
mov
push
mov
dec
sbb
adc
cs
mov
andb
imul
xchg
bound
loopne
or
aas
mov
xchg
jl
call
cmp
popa
mov
xor
imul
xor
adc
aas
pop
imul
sub
test
jno
inc
outsb
ret
lea
lock
call
and
push
nop
fs
int
add
loope
mov
jo
inc
push
aas
push
jo
incb
lock
and
add
cmpsb
adcb
ss
cmp
imul
or
inc
mull
lock
inc
add
repnz
nop
sub
and
push
fs
push
mov
ret
pop
adc
xchg
or
cmpsb
inc
cld
or
clc
les
sbb
inc
into
mov
mov
nop
jmp
inc
push
enter
push
push
push
ret
add
sub
push
sub
into
rorb
pushf
dec
repnz
loop
add
arpl
aas
mov
jno
dec
clc
sbb
dec
sti
xchg
jo
arpl
adcb
data16
test
into
and
add
jl
xorl
cmpsb
cmp
mov
pusha
out
or
test
into
push
inc
pop
cli
and
cmp
push
nop
mov
in
inc
popa
imul
iret
addr16
push
pusha
movsb
insl
mov
cmp
jg
shlb
into
xchg
out
mov
pop
ret
popa
inc
mov
push
add
lahf
loopne
add
inc
fwait
mov
lcall
je
push
xor
call
lock
mov
xor
xchg
and
faddl
add
add
repz
aaa
sahf
xchg
dec
adc
add
adc
pop
mov
cmovno
shlb
jns
hlt
mov
mov
and
or
cmp
lods
cmp
add
or
add
xchg
jbe
jg
rorb
sub
iret
pushf
cmc
jnp
add
cmp
mov
jecxz
out
out
test
push
int3
shrb
mov
mov
push
rolb
jecxz
push
fdivrs
mov
xor
sbb
out
pop
xorb
test
inc
adc
insl
cmp
xor
cwtl
xchg
adc
dec
sub
aam
in
cwtl
test
dec
outsb
repnz
mov
adc
cmp
pop
add
and
xor
inc
mov
cmp
sub
mov
inc
pusha
adc
sub
push
pop
insl
mov
xor
add
daa
jno
adc
test
rclb
lds
add
jne
outsl
ss
adc
lock
push
add
outsb
or
aas
or
pop
loopne
nop
sbbb
inc
inc
and
je
sub
fcoms
add
cmp
add
fmuls
cs
xchg
push
mov
add
fmuls
lea
xor
test
sti
jne
hlt
add
leave
aad
jno
sbb
add
icebp
sub
inc
ret
outsl
mov
push
mov
mov
ja
addl
xchg
loope
js
sub
lcall
rcrl
loopne
xchg
inc
and
shll
les
xor
vmread
or
dec
cmp
pop
lret
sub
insb
adc
cmc
cltd
into
es
mov
dec
push
add
sbb
add
test
out
and
sbb
sub
into
lock
adc
inc
push
mov
add
or
push
jle
fcomps
dec
arpl
cmp
pop
lods
add
mov
xchg
lock
insl
loop
cs
cltd
push
mov
int3
dec
fisttpll
test
mov
mov
lock
bnd
int3
in
das
adc
addb
flds
xchg
mov
ret
sub
lock
adc
add
lret
imul
inc
dec
or
iret
sbb
jno
es
subb
adc
adc
lock
das
mov
ds
int3
jae
stos
mov
in
add
and
ret
dec
jle
lahf
scas
mov
enter
and
nop
push
je
cltd
pop
cmpsl
stos
into
add
jnp
push
das
std
cmp
pusha
fsubl
pusha
ss
out
add
pusha
xchg
loope
fadd
dec
add
jo
scas
test
into
mov
jmp
sbb
xchg
cwtl
enter
stos
loopne
bndldx
repz
imul
dec
xchg
push
and
fldl
imul
nop
aas
inc
fs
mov
mov
and
cmp
mov
jg
add
cltd
or
pushw
add
jg
test
mov
arpl
cmp
sbb
adc
adc
push
bound
nop
dec
rorb
jge
push
cli
bound
daa
jmp
xor
push
add
mov
hlt
aam
dec
adc
inc
sbb
es
outsl
add
mov
das
xlat
into
add
rcr
pusha
div
fsubr
sbb
ret
nop
dec
clc
cmp
insb
pop
xchg
xor
test
mov
cld
add
inc
fs
test
movsb
in
xchg
arpl
mov
inc
cmp
dec
mov
mov
test
clc
inc
fisttps
stos
js
add
fxch
shlb
testb
mov
cwtl
andb
cmc
adc
jmp
fwait
into
jo
add
and
jae
int3
orb
xor
lock
mov
push
mov
ja
add
xchg
imul
in
mov
cmpsl
push
dec
lds
inc
pop
stos
sub
pop
mov
jae
push
jg,pt
out
sub
push
loopne
inc
xor
in
sbb
cmp
pop
ljmp
or
inc
outsl
pop
push
push
cmp
loope
jmp
inc
sbbb
or
dec
add
add
popa
mov
sbb
xchg
add
dec
jmp
mov
lcall
adc
jbe
adc
mov
inc
inc
repz
hlt
pusha
push
add
cmpsb
sub
or
add
jbe
pop
xor
arpl
imul
cwtl
movsb
lock
jl
mov
or
les
imul
jo
push
dec
add
mov
ret
mov
icebp
inc
into
addr16
je
or
add
test
xor
std
jns
pop
xchg
orl
add
sub
add
test
add
add
cs
jbe
push
pop
out
ret
mov
inc
cmp
lahf
sbb
in
jno
mov
repz
adc
sbb
test
fcoml
loopne
nop
sbb
pop
arpl
or
in
inc
rorb
push
and
cmp
dec
pusha
xchg
test
add
dec
sub
pop
push
mov
fisubrs
xor
negb
or
xor
ret
aas
mov
mov
cmp
xchg
leave
dec
and
frstor
call
cwtl
call
movsl
mov
or
dec
sbb
popf
aaa
add
push
lret
and
dec
cmpl
push
inc
out
mov
xor
mov
mov
mov
inc
mov
imul
js
add
xchg
and
add
loopne
cmp
mov
mov
push
add
cmp
mov
fcompl
xchg
sbb
cmpsl
cltd
mov
add
sub
xchg
add
and
and
gs
xchg
pop
jg
dec
fsubl
push
inc
fstl
adc
lods
xchg
sub
in
mov
insb
sets
das
push
pop
add
loopne
call
cmpb
sub
adcl
cmp
sbb
lcall
pop
les
xor
lea
add
bound
mov
fdivrl
int3
insb
stc
mov
call
pop
adc
pop
mov
gs
cwtl
mov
pop
nop
inc
iret
out
dec
mov
arpl
gs
and
call
sbb
loop
hlt
ret
fcoml
loope
ja,pt
shlb
jbe
lahf
jl
mov
add
aaa
int3
and
enter
push
push
cmpsb
and
iret
inc
mov
pop
mov
lcall
pop
jne
inc
sub
repz
adc
mov
hlt
mov
jnp
jne
mov
inc
adc
fcom
mov
mov
std
or
xor
andl
jecxz
gs
jo
cmp
mov
cmp
xor
cmp
out
xchg
xchg
pop
lret
pop
cmp
add
shlb
add
fsub
dec
push
out
add
add
inc
add
mov
add
call
inc
in
data16
outsb
cli
icebp
aas
adc
sbb
xchg
adc
mov
jo
pop
mov
fsts
mov
in
mov
loop
data16
mov
and
push
and
add
insb
push
xchg
mov
pop
ja
cmp
push
ffree
xchg
mov
dec
cltd
rclb
xchg
add
sbb
hlt
clc
cmp
mov
lahf
pop
aam
inc
ja,pt
add
jae
sahf
inc
data16
lret
adc
roll
adc
add
sbb
jmp
imul
dec
jns
sbb
dec
loope
inc
mov
std
push
mov
fs
rcrl
inc
xor
mov
bound
push
lea
out
fiaddl
push
and
pop
aam
stos
push
add
mov
jg
outsb
push
loopne
mov
icebp
xchg
push
inc
lds
stos
push
sub
sbb
hlt
inc
loope
dec
adcb
hlt
fcompl
add
out
cwtl
loopne
mov
push
pusha
mov
pusha
ja
dec
out
or
xchg
mov
pushf
shr
dec
add
cmp
shll
add
addr16
negb
push
pop
adc
dec
jmp
arpl
jnp
cs
mov
adc
mov
add
lods
and
nop
test
add
mov
fisttps
rclb
addr16
add
cli
outsl
xchg
push
push
mov
inc
or
xchg
xor
gs
aam
loopne
xor
fs
and
jmp
lods
subl
jne
dec
jno
pop
rolb
mov
loopne
add
adc
add
push
add
stc
jo
in
adc
jmp
cmp
add
jb
jne
mov
stos
sub
bound
dec
mov
mov
popa
or
xchg
cmp
add
mov
cmpsl
sub
mov
jl
jo
aam
mov
inc
fsub
inc
xchg
daa
test
mov
xor
fucomip
lcall
xor
jnp
add
iret
mov
and
mov
cmc
cld
xlat
add
sbb
inc
repnz
arpl
mov
xchg
push
mov
ret
loop
js
je
pusha
sahf
adc
stc
mov
ret
popf
cmp
or
pop
xor
rcl
fs
cmp
mov
mov
sbb
mov
cltd
outsl
cld
mov
jae
clc
stc
jnp
rorb
faddl
ss
ljmp
into
mov
adc
pop
fs
push
mov
jge
ret
or
mov
pop
cmp
es
lock
sub
cmp
mov
and
or
pop
nop
add
loope
add
pop
or
inc
fadds
cmp
or
shlb
ljmp
mov
ret
sub
and
cld
adc
adc
cmp
push
cld
imul
dec
scas
leave
pop
xchg
inc
in
add
xchg
popa
sbb
fisttps
pop
inc
pusha
je
xchg
xchg
push
or
ret
push
aam
daa
js
insb
jb
pop
push
popl
test
mov
inc
mov
loope
in
add
push
cmp
out
mov
loopw
mov
sarb
inc
scas
fcompl
mov
mov
or
sub
fisttps
push
mov
push
and
lret
daa
adc
add
out
and
add
cmc
mov
mov
fiadds
lds
pop
test
andb
insb
pop
mov
rorb
sbb
mov
movsb
mov
mov
mov
inc
ror
aad
lock
outsl
fwait
and
cmp
popf
nop
hlt
push
inc
add
pop
sub
push
fmulp
outsb
inc
push
jns
mov
jmp
sub
push
mov
sbb
push
negb
rolb
les
repnz
je
xchg
inc
add
and
adc
andb
fwait
add
mov
sub
mov
or
jg
ja
rorb
fisubrl
or
push
xor
in
dec
xor
outsl
dec
or
add
xchg
jmp
and
or
cmp
popf
adc
dec
and
jb
add
fwait
out
xchg
rorb
mov
mov
sbb
add
add
shrb
dec
fdiv
push
mov
fs
test
pop
dec
sbb
ja
flds
add
push
popa
repnz
cmp
mov
jo
add
mov
mov
push
xchg
xchg
jo
jnp
enter
add
cmpsl
push
ljmp
push
mov
mov
and
in
loopne
cmp
cmp
mov
adc
add
adc
mov
fisubs
push
xor
xchg
pusha
and
nop
test
jbe
stc
lret
cmc
mov
orl
lods
add
push
inc
push
fmuls
xor
pop
jg
sbb
mov
imul
gs
adc
sub
test
addb
std
inc
or
cmpb
call
jp
nop
xchg
fidivrs
lret
out
daa
add
add
and
pop
lods
lcall
sub
shl
mov
pop
cmp
ret
call
lret
inc
mov
sbb
add
cmp
add
and
mov
mov
hlt
pushf
dec
add
bound
add
fmuls
gs
imul
lods
sbb
push
js
inc
mov
dec
out
into
faddl
nop
shl
dec
loopne
ret
inc
mov
mov
push
sbb
mov
mov
in
ljmp
add
mov
daa
and
ret
mov
jns
sbb
sahf
and
sub
loopne
mov
lahf
inc
je
das
lds
adc
js
sub
mov
add
movsl
dec
cmc
stos
fst
xor
test
loopne
loope
popa
mov
bnd
stos
push
mov
leave
add
adc
cmp
dec
pop
mov
arpl
cld
stos
xchg
cmp
add
or
push
clc
jne
and
xor
pop
mov
cmp
xchg
enter
nop
xchg
adc
pop
mov
std
ja
inc
add
xchg
je
xchg
mov
add
xor
push
nop
push
daa
loop
loop
push
pop
add
mov
in
inc
inc
outsb
sbbb
out
imul
add
fnsave
jg
push
mov
lea
add
jb
loop
stos
add
dec
sub
sub
ds
js
pusha
push
sbb
xchg
mov
add
xchg
ret
test
cmp
mov
add
add
cmp
sbb
xlat
or
in
or
in
clc
popa
jle
xchg
xor
inc
pop
pause
lcall
addr16
adc
mov
out
fisubl
mov
into
je
lds
subb
and
popa
mov
push
jmp
mov
adc
xchg
enter
pop
fs
push
mov
enter
push
out
ret
xchg
dec
jecxz
and
lock
stos
int3
inc
ret
mov
sub
sti
pop
faddp
push
fisubs
cmp
push
jne
or
in
lods
add
inc
sbb
cmpb
push
mov
loopne
and
ret
mov
add
push
fs
jecxz
cltd
pop
add
repnz
aam
decb
and
cmp
inc
in
add
nop
fiadds
lahf
cwtl
gs
pusha
nop
insb
pushf
pop
sbb
jae
adc
scas
rcll
mov
ror
aad
mov
loopne
movsb
add
adc
inc
mov
andb
dec
jle
and
sbb
ja
lret
push
lock
cmpsl
pop
fsubl
loope
in
push
sub
and
pop
mov
mov
cmp
test
xorl
or
mov
clc
sarb
sbb
xchg
mov
xchg
push
leave
lret
pop
pop
or
lods
ret
ret
dec
push
push
ja
out
mov
leave
push
repnz
ljmp
add
fsubs
repnz
or
sarb
js
jle
ret
outsb
cmp
arpl
inc
fsts
scas
push
fadd
xor
fnsave
clc
data16
dec
dec
pop
add
or
loopne
outsl
cmp
addr16
pushf
pusha
addb
iret
scas
xor
xchg
pop
and
and
adc
or
jle
insb
inc
mov
xchg
popa
adc
mov
xchg
sbb
fbstp
test
adc
push
shll
fidivrl
fdivl
in
sub
movsb
xor
xor
hlt
adc
les
add
outsb
and
gs
jne
shrl
pop
dec
inc
shl
sbb
sbb
add
mov
aam
loope
jecxz
ret
inc
rol
add
pop
mov
test
sti
xchg
dec
mov
mov
stos
scas
ret
aam
int3
pop
arpl
in
sahf
add
and
add
hlt
popa
push
lods
and
or
popa
in
mov
cwtl
push
cmp
shlb
mov
or
inc
jge
dec
dec
rclb
add
testl
outsb
xchg
ljmp
mov
or
lods
call
add
add
adc
roll
es
inc
add
movsb
loopne
mov
jne
test
xor
add
loopne
add
xor
mov
imulb
jg
jb
add
sbb
test
sbb
sbb
push
pop
sahf
data16
mov
xor
add
dec
push
cld
pop
sbb
aad
lea
adc
sbb
imul
mov
scas
mov
and
mov
testl
mov
mov
add
iret
lods
jge
nop
aam
add
inc
cltd
lea
push
inc
lods
shrb
pop
loop
add
mov
pop
or
jbe
enter
sahf
push
sbb
and
inc
les
mov
loope
repnz
test
sub
add
xchg
push
ds
stos
out
xchg
inc
pop
inc
ror
incl
arpl
fiadds
das
outsl
dec
add
iret
add
jb
cmp
shlb
and
cltd
ds
movl
or
and
fildll
lods
and
add
adc
sbb
jne
xchg
negl
add
test
push
cvtps2pi
bound
jo
sarb
movsb
push
ljmp
jmp
scas
cmp
mul
push
mov
mov
roll
sub
sbb
cltd
xor
dec
sbb
subl
jg
leave
cmp
mov
push
pusha
sbb
add
out
inc
mov
cs
sbb
inc
popf
mov
paddusb
nop
and
xor
add
pop
pop
pop
inc
movsl
inc
dec
and
push
adc
cmp
add
jl
mov
add
push
in
push
xlat
je
inc
movsl
xchg
popa
push
dec
scas
jo
add
mov
push
mov
je
xor
mov
rcll
jmp
sub
aaa
mov
add
mov
xchg
fildll
dec
cs
mov
add
into
push
or
fildl
dec
out
jbe
loop
and
lcall
arpl
cli
mov
lock
scas
aaa
in
roll
add
adc
inc
adc
cltd
xchg
cmp
xorb
pop
or
xchg
ja
mov
mov
sbb
mov
sub
cwtl
dec
cmp
aaa
dec
push
jg
orb
sbb
in
jl,pn
add
mov
push
xchg
imul
sahf
rcll
add
lods
dec
lods
add
in
insb
jns
mov
jno
add
adc
lea
xchg
adc
lret
rcr
xchg
cld
sub
add
rolb
xor
xorl
inc
adcb
sub
mov
and
rorb
in
inc
ret
xchg
sbb
mov
cs
dec
add
loope
add
dec
xor
mov
add
push
sbb
mov
cwtl
sbb
or
outsb
outsb
mov
cmp
sbb
loopne
scas
loopne
sbb
clc
lret
paddq
rclb
jecxz
push
fdivr
add
pop
int
sub
add
push
adc
stc
scas
cs
les
xlat
mov
ret
push
lcall
in
mov
push
andb
adc
or
push
movl
sahf
mov
xor
add
addr16
add
mov
add
testl
cld
lods
cmp
push
repnz
fs
adc
xor
loop
jp
adc
inc
add
add
lods
ret
stos
ljmp
outsl
popl
add
inc
cmp
xchg
ljmp
mov
clc
dec
push
imull
mov
mov
pop
lock
fs
add
sbb
mov
enter
imul
pop
inc
cwtl
dec
fbstp
inc
and
add
push
add
sub
sahf
ljmp
fcomi
pop
add
or
push
loopne
jb
pusha
mov
jmp
ficompl
mov
or
ret
test
sbb
push
imul
push
jmp
fdiv
in
ja
add
scas
sbb
imul
fistpl
mov
add
or
sbb
popa
pop
cmp
sbb
fmul
add
movl
pop
std
pusha
movsb
lahf
fstps
sbb
cmc
xchg
push
iret
jg
mov
ljmp
jge
push
cmp
and
aam
xor
rcrl
sub
daa
scas
mov
and
inc
inc
ss
xchg
sub
sub
lret
mov
hlt
xor
cmp
add
or
dec
subb
xchg
add
inc
xor
mov
mov
jno
nop
jb
add
sbb
mov
ss
scas
cmp
mov
add
loop
in
outsl
data16
jecxz
pop
jl
jo
add
out
loop
add
stos
or
add
xchg
jnp
loopne
and
fcomps
xchg
add
ljmp
push
jae
aam
adc
push
jno
and
pop
insl
sbb
cld
sub
popl
pop
in
push
pop
ret
jecxz
inc
inc
loopne
add
out
xor
ljmp
in
jb
sub
dec
sbb
mov
add
movsl
hlt
and
leave
inc
add
movsb
sub
lods
dec
shlb
mov
das
add
sbb
add
dec
addr16
xchg
adc
sub
je
mov
adc
rol
std
inc
ljmp
repz
addl
ret
pop
adc
loope
jns
jecxz
fwait
ds
xchg
push
sahf
sbb
add
fildl
lock
je
add
pop
repz
cmp
pusha
jne
popa
stos
add
jo
sbb
add
jg
test
inc
fsubp
out
sbb
xlat
insb
jle
enter
pusha
and
pop
mov
adcb
pmulhw
outsb
inc
popa
jl
fs
jne
cmp
sti
add
pop
sub
push
mov
cmp
lea
sahf
push
add
jp
inc
jmp
lods
xchg
push
sbb
lcall
mov
dec
pop
add
int3
add
leave
push
mov
cwtl
sti
inc
repz
cmpsb
sub
add
ja
push
push
jnp
add
cli
jns
and
mov
or
pop
fcompl
test
pop
and
dec
pop
adc
mov
js
add
imul
mov
add
popf
inc
jmp
adc
enter
jl
sub
aaa
lock
jmp
and
lds
fstpl
lret
mov
push
test
jb
hlt
add
mov
add
or
cmova
js
int
fidivrl
mov
add
inc
das
pop
test
or
jns
nop
push
enter
add
xchg
lock
sub
sbbb
scas
inc
divl
xchg
das
push
mov
in
loope
sbb
xor
add
ror
or
bound
mov
adc
adc
push
dec
into
rcrb
scas
jbe
pop
inc
aam
sbb
lret
lcall
mov
les
lods
xchg
mov
cmp
or
mov
outsl
ds
fisttpll
xchg
jge
sub
mov
addr16
add
lret
ds
sub
pusha
jl
or
sbb
mov
cs
add
orb
pop
int3
loopne
adc
movsb
fdivrl
sub
add
pop
cmp
popf
push
test
enter
inc
inc
jnp
cmp
out
orb
jae
stc
push
hlt
sbb
sub
push
mov
pop
sbb
in
clc
push
push
pop
pushf
cmpsl
mov
mov
jp
inc
add
and
add
xor
or
add
pop
pop
addl
sub
ds
lods
add
push
out
add
fwait
mov
jae
shrb
jns
jno
lcall
mov
pushl
rolb
jge
roll
dec
and
push
loop
shr
mov
add
xchg
aaa
add
sti
andb
lret
mov
add
nop
rclb
mov
push
test
cmpl
out
leave
xchg
sbb
sub
sub
mov
pop
shrb
lods
hlt
mov
dec
xchg
and
adc
lds
dec
sbb
faddl
cltd
lcall
pop
out
adc
repnz
ss
sti
add
cltd
into
mov
add
fs
and
fiadds
shl
aaa
mov
ss
movsl
add
gs
in
lods
jne
add
sahf
push
loopne
pop
lea
mov
scas
xlat
les
jg
mov
loopne
test
cs
add
test
add
mov
push
adc
jnp
dec
lret
loope
cmp
into
add
sbb
pop
adc
push
sti
mov
add
xorl
add
push
cli
mov
push
fs
in
add
sahf
test
test
mov
les
repnz
dec
aam
mov
cld
add
les
aas
adc
pop
or
clc
sbb
push
mov
sub
loopne
sub
mov
jno
sbb
fstps
and
push
addb
test
pop
push
adc
mov
sbb
add
sbb
rcr
xchg
jo
mov
sub
xchg
rol
add
add
add
or
nop
mov
xchg
cmp
movsl
pop
xchg
pop
add
xchg
xchg
xor
fidivrl
add
shrl
mov
nop
jle
push
push
mov
xchg
sbb
mov
stos
sbb
mov
cmp
pusha
sti
inc
add
loop
jae
ret
and
push
imul
not
mov
cmpsl
lret
cmpb
lcall
add
jnp
cwtl
mov
add
roll
imul
xor
lds
mov
add
pop
inc
or
in
subl
aam
mov
sub
fmulp
or
and
add
xchg
inc
stc
pop
pop
test
lock
daa
xor
xor
push
int
stos
pop
jg
add
mov
fistps
cwtl
test
mov
cmpl
pop
mov
pusha
rcr
fstpt
add
xlat
xchg
pop
adc
xchg
sbb
mov
pop
addl
fistps
lret
ljmp
adc
sbb
push
lcall
cmp
add
and
adc
outsl
mov
cmp
enter
mov
or
adc
pop
mov
dec
test
pop
dec
xchg
lret
mov
roll
inc
dec
pop
rcll
mov
cmp
mov
add
inc
call
jno
xchg
or
cmp
mov
mov
mov
xor
cmp
stos
add
adcb
jp
daa
mov
fisttpll
mov
cmpsl
add
leave
fadd
ds
enter
jmp
ds
and
or
add
add
mov
mov
pop
sub
ret
jbe
push
hlt
add
adc
push
rclb
mov
pop
mov
push
sbb
popf
sub
mov
imul
test
push
cmpl
mov
lock
ljmp
sub
inc
cmpsb
mov
sub
inc
movsb
lock
and
scas
subl
leave
ds
xor
adc
shll
xchg
add
rcll
adc
out
add
mov
cmp
add
xor
mov
push
mov
test
and
jno
les
jnp
xor
repnz
jmp
fnsetpm(287
scas
jge
sbb
dec
cmpsl
dec
into
test
dec
mov
sub
rorb
sahf
adc
andb
out
lods
aas
daa
mov
jb
movl
add
cmp
lods
mov
sub
mov
pop
xor
mov
push
or
loop
xchg
adc
mov
je
mov
jne
cmpsl
jo
or
add
fldt
push
in
and
dec
xchg
in
inc
adc
lods
pop
dec
push
xor
lahf
daa
jl
fiaddl
dec
dec
mov
inc
add
push
or
mov
hlt
rcrb
out
icebp
mov
pop
push
add
and
fmull
stos
pop
and
jg
sti
or
inc
in
add
sub
icebp
xchg
fldenv
cwtl
mov
xor
lods
cmp
mov
jbe
jne
out
push
add
xor
add
push
jae
ds
mov
dec
shlb
ds
mov
popf
sbb
push
arpl
sbb
pop
xchg
dec
xchg
mov
mov
enter
inc
inc
call
xchg
std
jg
push
add
out
lods
add
push
pop
push
or
shl
loop
dec
pop
jnp
call
dec
push
jno
imul
fs
jae
mov
push
sahf
jb
jno
add
and
int
hlt
gs
decb
ds
int3
test
test
xor
stc
enter
pushf
mov
pop
cmp
xor
and
les
inc
pop
out
ret
pusha
lcall
xchg
or
jns
dec
or
in
enter
stc
addb
mov
jb
add
or
lock
add
into
mov
popa
decb
js
push
pusha
xor
pop
xor
pop
xor
cmpsl
add
mov
je
sub
cmp
xlat
adc
and
sbb
mov
nop
push
pusha
dec
sbb
cld
stc
sbb
je
pop
testb
shlb
and
movsb
add
call
stos
xchg
add
rcrb
ds
xlat
add
lret
cmp
push
cli
pusha
add
mov
fidivrl
clc
jg
dec
out
cmp
sbb
jnp
add
nop
adc
call
cmc
add
inc
push
dec
and
add
mov
andl
inc
or
decb
mulb
jge
sti
lock
inc
xchg
popa
pushf
cwtl
add
dec
fcmovnbe
outsl
pop
mov
popf
mov
sub
or
mov
add
mov
mov
jne
pop
in
inc
add
inc
fists
lods
cmp
mov
rorb
add
pushf
and
mov
mov
add
adcb
iret
rcrb
add
stos
sub
scas
mov
mov
cwtl
stos
sub
fildll
mov
add
add
xor
sub
clc
fiadds
pop
jnp
icebp
ret
cmpsl
lds
jg
add
stos
xor
movsb
jbe
enter
jmp
or
js
adc
mul
xchg
rclb
scas
test
jnp
clc
pop
cs
aas
sbb
mov
shlb
add
push
sub
rcll
add
in
dec
je
inc
sub
xchg
insb
sahf
setnp
fmuls
cld
sysenter
xor
push
repnz
or
lret
cmp
add
fisttpll
jg
clc
ret
adc
adc
mov
and
add
mov
add
cmp
shr
js
mov
add
les
ret
add
mov
rorb
xor
ret
adc
fwait
outsb
nop
inc
or
cltd
push
inc
xor
cmp
push
add
es
jle
sub
xchg
pop
jmp
inc
scas
add
push
aas
dec
add
je
and
enter
dec
sub
cmp
nop
cmpl
add
mov
ja
mov
add
adc
inc
inc
cmp
sub
add
push
mov
insl
sub
sub
icebp
mov
add
mov
mov
aam
and
and
aaa
dec
push
and
sbb
idivb
movl
push
adc
push
xor
push
cmp
lods
jmp
and
nop
rorb
enter
in
cmc
ret
add
inc
dec
pop
inc
arpl
cltd
into
jne
je
add
mov
rcrb
jmp
cli
mov
cmp
mov
lea
and
mov
cmp
cmp
sysenter
pop
pop
sbb
jb
cwtl
stos
addr16
add
data16
out
xchg
add
add
stos
cmp
mov
aam
xor
ret
push
xorb
shl
push
pop
mov
and
mov
push
push
add
mov
outsb
push
xor
add
cmp
push
loope
add
sbb
scas
out
xchg
lcall
adc
cltd
push
jns
aas
inc
mov
cmp
dec
test
dec
cmpsb
inc
aaa
cwtl
sub
jl
xor
xor
mov
mov
add
jne
add
xchg
insb
pop
nop
andps
popf
mov
pusha
xor
dec
fmuls
add
orl
sub
and
fiadds
out
xor
std
lock
add
sbb
mov
cli
ss
or
mov
aad
xor
fldl
pop
es
cmp
loopne
add
and
hlt
sub
push
push
cmp
and
xchg
add
flds
push
push
inc
insl
shlb
push
sbb
jp
stc
mov
into
pop
orb
or
mov
push
cwtl
add
mov
push
add
ret
mov
xchg
out
inc
and
add
push
jle
mov
add
or
or
mov
push
fstl
push
cmp
les
stos
pop
sub
xor
xchg
push
add
pop
insl
sbb
add
cwtl
mov
loopne
in
lds
inc
test
rclb
cs
cmp
aaa
cli
into
add
jle
cmpsb
mov
sti
add
inc
bound
jnp
dec
xchg
xor
push
sub
mov
or
test
iret
cmpb
add
dec
xor
mov
add
cmp
inc
add
not
add
xchg
aaa
jbe
add
test
mov
ret
mov
xchg
rcrl
cmp
call
inc
adc
mov
out
push
fwait
dec
ficoml
test
lock
rolb
out
or
sbbl
stc
mov
sub
addr16
shll
in
and
aad
add
stos
lock
mov
push
popa
adc
inc
xchg
arpl
lock
repnz
push
mov
add
decb
arpl
xor
mov
mov
test
add
dec
pop
push
mov
xor
ljmp
add
lock
pop
les
cmp
js
pusha
adc
pushf
hlt
or
notb
enter
and
dec
xchg
add
ret
lock
std
in
mov
push
pop
cmp
add
push
sub
out
push
pop
push
lea
push
test
pop
mov
cmpsl
loope
enter
subl
add
out
ret
inc
push
add
xchg
pop
nop
aaa
cld
add
mov
push
or
repnz
add
pusha
jnp
xchg
add
push
dec
add
and
aam
pop
inc
mov
inc
cwtl
mov
dec
sbb
movsb
or
nop
es
pop
imul
out
loopne
sbb
or
jmp
stos
inc
sahf
push
or
in
setg
pushf
xchg
subb
mov
inc
lret
sbb
push
push
pop
add
repz
add
dec
roll
sub
mov
pop
js
add
fildl
test
cmp
push
and
sti
add
mov
mov
mov
adcl
push
xchg
stc
lock
inc
in
and
ss
std
add
add
push
mov
ret
in
sar
jmp
dec
cmpsl
in
mov
int
in
xchg
clc
dec
fwait
pop
das
xor
xor
mov
stos
fnstcw
pusha
sarb
and
int
adc
adc
ret
and
and
sbb
cmp
in
hlt
push
test
jne
sbb
xor
daa
push
and
loopne
pop
orb
push
sub
movsl
mov
idiv
jmp
icebp
xor
dec
xchg
cs
jo
and
shrl
push
add
loope
aam
scas
push
add
add
shlb
add
or
jecxz
sbb
inc
mov
or
add
pop
fidivrl
cld
fistl
add
sub
mov
add
sub
lret
add
mov
mov
jl
xchg
mov
and
fisttpl
sbb
pop
push
mov
pop
sahf
add
int
or
add
lock
xchg
out
xchg
mov
sbb
cmp
out
inc
in
pop
mov
mov
lods
xor
xlat
jne
push
pusha
dec
out
iret
mov
mov
insb
add
xor
pushf
and
js
ds
loopne
mov
mov
test
loop
lret
idivl
test
mov
inc
fiaddl
pop
ret
enter
mov
add
fcoml
add
insl
pop
jl
pop
and
push
adc
dec
ss
inc
mov
roll
mov
add
add
pushf
cmp
popa
pop
dec
fdivl
stc
movsl
lods
mov
loop
cmp
add
dec
push
sarl
inc
outsl
pop
add
es
xchg
sbb
fs
aad
push
mov
add
sub
sarl
orb
loopne
jae
add
call
adc
mov
adcb
cmp
aad
imul
das
pop
xor
add
or
cmp
test
int
dec
inc
les
lock
adc
stc
ds
jle
rclb
jecxz
xor
out
fldt
rcrb
test
mov
or
or
loop
cs
mov
mov
inc
clc
stc
cmp
imulb
adc
mov
jo
mov
arpl
iret
dec
jno
mov
das
mov
mov
mov
mov
sub
iret
add
push
inc
or
add
push
or
cwtl
test
jmp
in
pusha
in
xor
lock
add
jp
mov
add
pop
xchg
jge
mov
push
mov
add
xor
jbe
add
addr16
in
mov
lods
ja
leave
sub
add
dec
sbb
out
push
iret
inc
add
mov
sub
daa
loopne
call
adc
add
test
dec
sbb
jb
popa
stc
call
pop
daa
mov
jae
addr16
in
xor
subl
daa
push
push
inc
clc
mov
fcomps
mov
sbb
arpl
add
leave
pop
aad
into
inc
nop
mov
jge
lret
add
add
leave
mov
push
notb
cmp
inc
sub
cmpsb
sbb
cmc
add
out
cli
and
rolb
push
clc
mov
xor
sub
add
pop
inc
mov
daa
jecxz
push
xchg
sbb
sbb
cmp
hlt
sub
jbe
add
hlt
in
gs
push
scas
sbb
cmp
add
or
xlat
push
test
push
add
aam
ljmp
das
xlat
in
add
cmp
xchg
fiaddl
or
mov
jnp
jne
add
pop
rolb
mov
add
aam
mov
lock
dec
sub
cmpsb
push
add
inc
mov
sub
mov
insb
movsl
loop
inc
jge
lcall
stos
add
enter
imul
cmp
icebp
xor
add
mov
or
enter
in
cld
leave
rcrb
mov
movsb
add
adc
sub
or
dec
sbb
add
popf
pusha
stos
outsl
insb
push
out
scas
mov
fstl
cmpsb
inc
addb
xchg
pop
pop
push
int
dec
fisttpl
push
add
pop
mov
jnp
test
je
mov
mov
add
jl
test
cltd
add
lds
add
sbb
push
jne
les
bound
dec
mov
pop
mov
mov
mov
fcompl
jb
scas
mov
xchg
mov
push
push
mov
inc
xor
xlat
clc
faddl
jg
stos
pop
repnz
cmp
dec
xchg
insb
or
data16
andb
mov
add
pop
in
cmp
cmp
test
add
ja
inc
in
fildl
jb
dec
push
or
jae
add
pop
mov
out
negl
dec
aaa
jne
incb
out
mov
imul
ror
sti
inc
daa
jecxz
mov
je
add
loope
add
adc
adc
cmp
adc
sti
sbb
adc
pushf
int
and
jl
insl
cmpsb
sbb
test
ficompl
sub
xchg
addb
or
sbb
in
mov
push
inc
popf
pop
push
mov
dec
shl
pop
out
pushl
addr16
xorb
inc
icebp
mov
add
popf
sbb
in
sub
sbb
sarl
leave
jp
aas
in
jmp
incb
shlb
icebp
cwtl
xor
out
es
lods
loopne
cmp
and
or
dec
jmp
imul
pop
add
pmuludq
inc
lahf
add
jp
mov
mov
aas
sbb
lret
in
xor
cmp
add
and
mov
js
mov
loopne
xchg
adc
shlb
cmp
or
cli
mov
push
and
jmp
add
mov
xchg
test
pushf
push
bound
and
sbb
stos
push
dec
mov
dec
out
call
mov
inc
add
mov
push
jmp
dec
jge
push
sar
xlat
rclb
pop
mov
push
inc
scas
add
ds
clc
sti
push
add
dec
lock
push
mov
cmp
jnp
mov
add
jp
jbe
xor
fiaddl
pop
xor
rcrl
push
mov
les
rorb
add
lcall
push
jns
std
add
adc
or
and
xor
out
sbb
into
sarl
cmp
adc
push
je
in
fwait
roll
pop
jg
push
ss
in
call
add
sub
out
fildl
sbb
decl
sbb
jp
add
mov
stos
add
cmpsb
mov
cmp
aaa
mov
enter
out
mull
jge
es
sub
scas
std
stos
std
fcompl
lds
push
mov
mov
imulb
xchg
ds
jge
cmp
popa
cltd
add
mov
add
jne
outsl
mov
aaa
and
jge
add
pop
xor
iret
jae
andb
pop
rorl
add
adc
push
call
subb
add
and
je
cld
arpl
addr16
into
test
push
sbb
fwait
or
call
inc
jmp
and
xlat
jmp
push
sub
fcoml
cmp
inc
or
rep
in
cmc
pusha
fucom
or
add
cmp
popl
inc
scas
loop
push
insl
test
imul
and
sbb
mov
insb
call
addb
addr16
jno
or
adcb
cmp
xchg
adc
lock
addb
mov
inc
add
movsl
scas
mov
add
push
fcomps
arpl
inc
inc
sahf
lods
cld
test
addl
push
pop
adc
dec
sbb
popf
add
push
pop
cld
sbb
aad
orb
add
mov
mov
pop
aad
and
add
or
mov
mov
pop
mov
sub
dec
push
xor
add
ja
cmp
pop
xchg
nop
mov
add
or
mov
into
sbb
popa
xchg
xor
dec
add
ds
xlat
jg
pop
movsl
push
sar
icebp
inc
pusha
sahf
bound
fadds
es
mov
add
ljmp
add
mov
call
sub
loop
insl
aad
out
xor
or
pushf
jns
fsubs
dec
aad
fidivrl
lahf
add
test
arpl
mov
jo
es
inc
rclb
add
pop
hlt
jno
xor
add
stc
pop
adc
fsub
and
popf
xor
int3
jb
sbb
and
mov
popa
daa
push
jle
out
lock
ltr
inc
call
push
out
pop
pop
add
pop
sbb
mov
cmp
inc
cwtl
pop
inc
mov
cmp
aaa
iret
cld
sbb
mov
rorb
cmp
sbb
shll
sti
jns
pop
fstl
mov
xor
push
or
fs
mov
pop
push
and
add
mov
add
add
ja
pop
xchg
addl
das
jb
mov
js
out
or
repz
sbb
dec
add
add
ss
add
shrl
dec
or
fstpt
push
push
add
pop
mov
repz
pop
push
imul
adc
lcall
mov
loopne
mov
test
punpckhdq
xchg
dec
xchg
lock
mov
push
mov
shrl
push
jp
loopne
testl
fadd
sahf
sahf
sub
rcll
dec
mov
mov
insb
mov
and
decl
fsubrs
and
out
test
scas
fiadds
je
fisttpll
addr16
sbb
enter
add
mov
dec
out
lods
sbb
and
sub
jl
add
dec
push
or
lds
js
or
add
jno
inc
xchg
jns
mov
mov
test
jge
push
ds
adc
cmp
jb
mov
push
ljmp
stc
hlt
lods
cmp
cmp
push
lock
push
aad
lods
or
jno
not
sub
inc
gs
dec
mov
or
mov
push
rcrb
nop
xchg
lock
movsb
test
xor
cmp
sub
sti
rcrl
mov
test
add
xchg
mov
add
adc
pop
pop
mov
add
es
shrb
adc
add
mov
adc
cmp
std
jo
ficompl
or
lea
andb
imull
stc
or
movsb
mov
add
popf
pop
lds
mov
and
jnp
out
cli
data16
inc
mov
add
ja
add
pusha
lcall
je
add
xchg
mov
data16
scas
sbb
xchg
inc
mov
jbe
mov
aas
cwtl
or
ljmp
aaa
pop
mov
aam
adc
adc
add
js
test
lea
sub
roll
xchg
jnp
in
das
shrb
cmp
roll
add
imul
call
and
pop
add
test
and
mov
jg
inc
repnz
daa
add
xchg
adc
enter
pop
mov
cmp
aad
lock
sub
inc
xchg
lahf
cwtl
xchg
push
and
cmpsl
xchg
test
into
test
cmp
mov
in
add
in
ror
adcb
dec
push
and
mov
mov
xlat
jb
pop
mov
push
out
and
jge
sub
and
mov
pop
cmp
adc
xor
cmpsb
daa
stos
inc
push
xor
decb
test
lahf
rclb
xchg
insb
sbb
and
ss
sub
add
jns
addr16
call
mov
sub
inc
pop
nop
xchg
dec
int3
cmpsl
mov
cmp
sub
push
arpl
xrelease
sbbb
push
inc
loop
and
add
push
dec
imul
pop
add
mov
fwait
stc
add
out
in
sbb
je
lret
push
xchg
test
xor
pop
add
xor
testl
cwtl
add
scas
push
xchg
add
pop
in
jae
call
inc
nop
scas
call
sub
cmc
pop
xor
sub
leave
cltd
sahf
das
pop
shrb
addr16
nop
andl
mov
or
iret
mov
test
xchg
test
daa
test
xchg
cmpb
mov
inc
jno
push
loopne
xchg
adc
mov
add
div
loopne
jo
and
add
das
adc
faddl
add
xchg
call
rclb
dec
das
test
mov
xchg
xchg
repnz
flds
negb
repz
sahf
mov
push
add
pop
int3
add
adc
mov
rolb
call
pop
sub
cmc
subb
or
pusha
les
pop
aaa
inc
adc
push
mov
cli
mov
mov
push
sbb
in
mov
in
mov
xor
mov
fwait
movsl
cs
jecxz
clc
sbb
arpl
cmp
add
dec
and
mov
xorb
enter
jns
pop
repnz
cwtl
adc
push
pop
outsl
lret
xorb
xchg
hlt
adc
mov
addb
into
dec
mov
add
inc
rol
cmp
add
rcrb
fwait
xor
pop
jl
sub
and
addr16
or
movsb
pop
push
xchg
sbb
adc
add
icebp
pop
pop
cmp
add
xchg
jle
push
pushf
xchg
add
iret
ja
xor
jp
push
sub
fwait
add
add
add
xchg
mov
add
mov
pop
arpl
stos
push
roll
push
pushf
jb
adc
mov
test
adc
jl
out
ds
out
notl
fs
popf
xor
mov
out
repz
or
pop
sbb
cmpsb
test
fdivrp
add
je
pop
mov
jecxz
xor
pop
cmpsl
add
js
push
dec
mov
add
mov
hlt
shll
gs
sub
pushf
inc
sbbb
push
mov
stos
mov
mov
aam
es
mov
adc
sub
pushf
push
or
leave
addb
decb
aad
dec
mov
cltd
xchg
jbe
in
shl
mov
inc
mov
xor
les
cmpsb
xchg
fwait
push
mov
clc
jg
jl
lcall
xchg
lods
jnp
add
or
xchg
sub
xor
and
and
test
or
repz
jmp
pop
adc
jl
xchg
movsl
xor
nop
hlt
loopne
sub
sub
mov
js
pop
popa
pusha
cmp
mov
and
or
add
xchg
inc
xor
lock
fisttpl
adc
push
mov
dec
jo
and
pusha
dec
fwait
int3
dec
or
stos
push
inc
in
cwtl
add
cmc
loopne
cmpsl
xchg
test
ret
mov
mov
push
cmp
loope
in
jge
jle
add
sahf
fcmove
adc
sar
dec
cmc
aam
es
mov
jecxz
mov
cwtl
xor
outsb
sbb
iret
adc
fmull
mov
inc
push
outsb
push
cwtl
sti
adc
mov
add
cmp
or
add
and
or
mov
aam
cld
cmp
dec
das
xor
or
cmc
fnstsw
cmp
adc
movhps
mov
imul
out
xor
adc
add
jg
mov
lods
jne
lcall
pop
sub
mov
in
xor
pop
push
add
push
outsb
aas
outsl
push
icebp
xchg
cmp
dec
fstpt
sbb
not
ds
fcompp
adc
sbb
xor
xchg
jp
add
dec
lods
mov
punpckhwd
popa
push
mov
add
fnstenv
mov
repz
mov
xor
xchg
inc
add
jmp
push
mov
add
pop
repnz
lea
or
pusha
lock
add
pop
repnz
jb
inc
add
mov
push
add
sarl
add
jmp
inc
adc
add
sbb
or
loop
jmp
mov
mov
test
add
and
bound
add
pusha
data16
or
xchg
sbb
add
jno
pop
dec
divl
shlb
xchg
push
pop
mov
fadds
mov
mov
mov
loop
cmp
jg
ja
add
test
and
xlat
scas
inc
mov
shrl
mov
push
fucomi
cmp
and
adc
lahf
repz
sub
push
cmc
sub
pop
jnp
je
hlt
fistps
fs
mov
cmp
adc
sbb
ds
pop
xlat
loopne
cwtl
adc
push
mov
xchg
dec
adc
inc
std
lahf
sbb
inc
ss
jne
fadds
push
lds
incb
and
mov
xor
add
or
jnp
pop
sti
add
mov
xchg
sbb
mov
inc
add
xor
popf
push
pop
repz
add
sbb
flds
or
pop
data16
int3
adc
or
mov
and
or
add
insb
fcmovbe
or
push
sbb
dec
jnp
push
add
push
loopne
sub
mov
jo
pop
add
inc
cmp
dec
adc
hlt
sti
push
loopne
push
pop
pusha
test
scas
push
pop
inc
xchg
mov
jnp
add
push
jle
scas
fsts
pop
add
cli
jns
addl
sbb
or
mov
fdivp
pushaw
stos
cmp
adc
aam
clc
or
or
test
stc
testb
adc
inc
popa
shrb
add
xchg
cmpsb
jmp
jecxz
pop
lret
and
movsb
loopne
sub
shll
push
test
add
stos
jge
jnp
xor
arpl
movsl
mov
mov
mov
insl
jbe
gs
orl
roll
jno
jle
inc
gs
adc
inc
loopne
cs
call
mov
add
pop
and
sub
data16
sbb
fiadds
sbb
dec
sub
cwtl
testl
mov
cmp
adc
dec
or
shrb
test
ret
aam
pop
add
out
mov
sbb
add
jle
xchg
xor
shlb
fldcw
lock
mov
sbbl
add
shrl
pop
aaa
fbld
lods
ret
leave
call
mov
ds
adc
jl
hlt
add
aad
sub
mov
mov
add
ret
add
movsl
movl
xchg
nop
fcoms
push
pop
outsb
mov
out
xor
pusha
test
or
das
mov
add
cmc
sub
jle
fists
add
or
cmp
dec
aad
int3
std
dec
sub
push
dec
sub
xchg
sbb
cmp
sub
nop
jmp
lods
and
push
inc
pop
adc
cmpsb
dec
es
add
mov
mov
sar
sbb
lret
fmuls
cmp
sbb
pusha
xor
push
mov
inc
cmp
enter
outsb
mov
lds
mov
loop
test
xchg
dec
xor
inc
adc
add
les
dec
add
call
cmp
test
add
sbb
cs
push
mov
insl
jmp
jo
es
inc
xor
inc
nop
inc
add
fmul
jmp
dec
sub
clc
add
lods
ss
pop
push
add
jae
add
aaa
push
push
mov
and
dec
xor
pushf
call
and
push
scas
mov
int3
or
inc
cmpsb
or
pop
mov
and
push
test
pop
sbb
push
in
iret
add
in
cltd
or
int
rcll
jno
mov
mov
add
jl
cmpsb
loopne
and
sub
add
sbb
mov
leave
dec
adc
xchg
pusha
and
add
cmp
fcompl
pop
loopne
mov
and
ss
push
dec
jnp
push
xor
xchg
sub
repnz
add
movl
jb
inc
push
xchg
gs
mov
faddp
or
fs
mov
pusha
pop
div
gs
add
adc
clc
add
xchg
push
sbb
xorb
gs
xor
cmp
xchg
mov
ljmp
jge
xlat
test
add
sbb
loopne
xor
stc
nop
daa
add
scas
or
pop
gs
ds
push
mov
or
icebp
adcb
mov
xor
daa
add
add
pop
push
cmp
add
inc
pop
add
dec
inc
rorl
add
orl
lods
mov
and
adc
jnp
jo
or
add
rcrb
ljmp
cmp
int
cmp
dec
add
shll
mov
testb
mov
testl
rorl
sbb
inc
push
and
cmp
jnp
adc
add
pop
dec
lret
rol
pop
pop
push
dec
inc
jge
inc
sub
out
add
xor
in
in
in
add
mov
push
sarb
rorl
pop
das
add
std
jecxz
or
sti
lret
lock
cltd
aaa
fidivrs
testb
push
sbb
into
mov
jb
jmp
lock
mov
add
inc
pop
and
pop
add
or
mov
std
sbb
mov
das
int3
mov
mov
jge
sahf
adc
sub
mov
inc
dec
pop
push
push
xchg
dec
xchg
and
mov
push
cmp
test
add
fdivl
push
int3
loop
sbb
push
dec
add
mov
lods
js
mov
mov
sbb
lods
daa
shll
adc
add
mov
add
es
fcmove
imul
or
cmp
sbb
fcom
test
add
adcb
mov
pop
loopne
add
push
popa
pushf
daa
push
add
nop
cli
roll
inc
sub
js
lds
int
xor
in
xor
popa
xchg
mov
pop
aas
ret
lods
lret
adc
or
xchg
jecxz
outsl
scas
ret
sarb
dec
sub
clc
repnz
pcmpgtd
sbb
xchg
imulb
add
jmp
dec
adc
outsb
fcomps
or
cli
hlt
inc
or
mov
add
arpl
in
sahf
jo
jecxz
out
dec
out
add
sbb
insb
repz
fstpl
cwtl
add
jge
jg
bound
push
data16
and
sub
addr16
mov
add
arpl
or
dec
cmpsb
nop
adc
push
negb
add
lret
pop
pushl
add
pop
sbb
rclb
xadd
add
enter
js
mov
or
add
scas
mov
cmpsl
ja
sbb
mov
and
sbb
xor
push
add
adc
cmp
add
sub
cmp
icebp
inc
push
inc
roll
pop
sub
or
mov
cwtl
and
sbb
pop
enter
push
or
xchg
aaa
push
and
jns
lock
aas
out
push
ret
xchg
lods
mov
xchg
add
cmc
pop
add
fs
inc
ret
and
mov
push
rorb
add
xor
bnd
mov
mov
mov
mov
jecxz
jp
add
jmp
add
daa
pop
add
xor
adcl
nop
add
decb
cwtl
mov
sbb
outsl
movsb
inc
ret
or
add
ja
xchg
ds
sbb
ret
and
test
add
adc
add
nop
sub
imul
or
and
adc
rcrb
clc
pusha
inc
xchg
cmpsl
aaa
jns
push
xchg
fisubs
and
xchg
lret
mov
or
and
add
inc
loop
add
icebp
fiadds
cmp
push
loope
fnstcw
mov
inc
enter
add
add
jbe
mov
inc
add
lcall
cmpl
outsb
mov
pop
sahf
cltd
xchg
or
or
sahf
push
testb
push
jne
sbb
clc
lret
loopne
adcb
push
arpl
push
add
xor
jnp
pop
insl
and
mov
inc
jns
mov
mov
and
xchg
jbe
add
loopne
fsubrl
cmp
shrb
mov
pop
pop
sub
xchg
add
add
jo
stos
vmread
mov
adc
inc
ds
iret
cmp
add
sbb
fstps
ror
fs
mov
popf
pop
mov
cld
sub
or
jnp
sbb
xchg
add
push
mov
sbb
cld
lea
sbb
loope
lock
das
jo
out
movsl
xor
push
add
int
mov
enter
xchg
or
jnp
leave
orb
mov
or
add
movsb
popa
add
shl
push
pop
rcrb
sbb
pusha
and
ret
push
inc
inc
mov
add
pusha
sub
movsb
jp
jno
clc
mov
xor
and
pusha
shrb
fchs
subb
dec
scas
cmpsb
inc
add
fmul
repz
xchg
lea
js
pop
add
sub
or
loopne
jmp
add
mov
pop
lret
das
add
mov
cmp
and
pop
xlat
fistpll
pop
jmp
popf
inc
pop
sub
lea
in
mov
push
xchg
lock
gs
jo
dec
pop
mov
dec
push
scas
subb
fidivrl
in
cmp
into
mov
pop
add
icebp
movsl
xor
xor
and
rolb
bound
cli
jb
jo
add
movsl
sbb
test
xchg
cmp
inc
jae
sub
inc
add
pop
adc
lret
cmovae
shlb
push
mov
clc
int
jle
cmpsb
fs
mov
loopne
xchg
mov
lea
xchg
movsb
mov
dec
add
xor
stos
andb
cli
mov
sub
or
push
jle
lahf
sbb
ficompl
test
pop
xchg
fimuls
pop
gs
xchg
and
jmp
push
dec
les
lsl
cld
outsb
inc
jae
sbb
add
push
or
add
push
add
or
faddl
add
xor
add
out
or
cld
js
push
adc
add
loop
inc
xor
mov
adc
sahf
sub
xchg
add
les
mov
popa
insb
enter
clc
xchg
inc
adc
and
xchg
or
fdecstp
xchg
xor
not
scas
xchg
inc
lods
or
imul
xchg
xchg
xor
shl
mov
es
shrl
enter
xchg
and
mov
cmc
push
mov
mov
jge
icebp
xor
and
mov
popf
pop
dec
jp
xchg
xchg
add
sbb
pop
cmp
pop
push
push
xor
xor
lret
sarl
cli
dec
pusha
loope
push
mov
jno
movl
add
jp
mov
push
ljmp
add
mov
rorb
add
lods
adc
inc
fs
jmp
xor
adc
out
test
das
fsubr
loopne
inc
jecxz
fidivrl
or
mov
sbb
mov
in
sub
fistpll
and
in
iret
add
xor
rolb
add
cld
inc
fsub
in
pop
and
cmp
pop
ljmp
popf
rcr
pop
lahf
popa
dec
in
sub
and
pop
xor
xor
push
add
cmc
cmp
insb
adc
fistps
mov
inc
adc
add
orb
push
jbe
or
jae
inc
call
xorl
add
cmpsl
in
sub
fs
cmp
and
mov
mov
push
stc
cmp
inc
push
test
jg
jns
mov
jmp
bsf
add
dec
mov
mov
add
and
sbb
js
or
jmp
xchg
inc
in
dec
cmp
mov
bound
mov
jl
subb
push
in
inc
out
add
jg
fldl
dec
cltd
outsb
rcrb
sbb
add
loop
into
push
xchg
jo
add
xor
imul
push
andb
push
sbbb
sbb
sub
movsl
xchg
jp
or
push
les
lahf
adc
add
sbb
andb
jne
lret
and
repnz
faddl
or
mov
cmpsl
in
je
std
cs
mov
add
jo
ret
popf
aas
mov
xchg
or
pop
cs
inc
sub
lds
movsl
pop
out
pop
sbb
fmul
repnz
xor
fwait
mov
mov
adc
cwtl
xor
movzwl
flds
js
push
insb
xchg
add
test
mov
mov
sbb
pop
inc
jb,pt
xchg
addb
popa
sbb
je
ror
ja
int3
push
add
data16
mov
jp
sbb
jb
pop
mov
sbb
add
mov
jge
pop
aam
ja
das
sub
sbb
cmp
in
dec
adc
loop
fmuls
pop
aaa
outsb
mov
rcl
pusha
push
shrl
adc
xchg
cmp
je
arpl
inc
int3
mov
sbb
dec
sub
fildl
jns
fstpl
add
aam
je
inc
pop
pop
shlb
fisttps
movsl
popf
loopne
adc
add
inc
movsb
addr16
les
popf
or
sbb
out
jp
add
mov
jmp
pusha
fisubs
mov
sub
rolb
shlb
cmpsb
sub
mov
xor
dec
dec
inc
add
dec
sbb
pusha
loopne
andl
cld
rcrb
add
xchg
cli
out
sbb
xchg
add
jecxz
out
aam
adc
cli
xor
aas
std
movl
scas
pop
jecxz
jno
jge
add
add
add
jae
adc
push
or
fsubs
or
pop
adc
jae
sub
scas
ljmp
dec
or
adcl
aam
add
or
jb
mov
insb
add
mov
mov
cmp
outsb
lods
adc
ret
mov
or
xlat
jbe
movb
add
ror
mov
out
pop
sbb
ja
rorb
sar
cmp
pop
push
sbb
add
repz
xor
es
jmp
aad
mov
add
inc
fiadds
inc
out
incl
pop
xor
adc
adc
sbb
mov
movsb
pop
loopne
xor
fisubs
fcompl
popa
aaa
ds
xchg
subb
stos
add
dec
popf
faddl
jo
mov
push
loop
clc
pop
cmp
arpl
bound
andb
sub
push
cmp
adcb
add
popa
mov
cmp
ds
add
mov
inc
or
cli
mov
add
mov
shll
ss
and
imul
sbb
data16
mov
js
fcompl
outsb
out
jmp
mov
dec
mov
push
into
cmp
pop
in
js
or
add
push
cmp
add
sarb
xor
sub
inc
or
jg
popf
mov
dec
push
or
mov
out
in
fistl
mov
dec
pop
je
fidivrl
mov
inc
dec
sub
xchg
sbb
addr16
aas
test
dec
sbbb
add
mov
xor
nop
addb
les
xor
arpl
je
aam
add
mov
sub
mov
call
mov
xor
mov
lahf
cmp
incb
add
sti
das
insl
and
mov
imul
sbb
pop
stc
add
gs
insl
sarb
add
push
mov
lahf
pop
lods
and
fmuls
lcall
mov
jecxz
jecxz
movsb
add
or
mov
aaa
loopne
xchg
add
jo
out
pushf
jne
outsb
nopl
cld
test
push
cmpsb
push
lock
cmp
or
pop
or
or
cli
negl
mov
push
xchg
enter
xor
mov
leave
cli
xlat
add
jecxz
mov
jae
xchg
imul
leave
add
sti
ja
add
insl
outsl
mov
add
int
pop
or
rcll
dec
add
jo
gs
test
add
lcall
andl
inc
jns
shlb
sbb
imul
dec
pop
in
xor
cmp
mov
mov
sub
push
in
add
ljmp
pop
or
xchg
xchg
xorb
and
cld
jns
ror
cltd
nop
or
mov
add
fldcw
add
adcb
pop
mov
jno
or
stc
pop
cld
in
and
jbe
pop
les
jle
or
cmc
call
cmp
repnz
cmpsl
mov
mov
roll
inc
mov
mov
popa
popa
fisubl
lcall
addr16
cwtl
dec
add
jns
int3
pop
inc
or
jo
jo
fwait
inc
sbb
cmp
mov
fldenv
sar
inc
pop
lcall
and
cld
mov
and
stc
xchg
cmp
cmpsl
jbe
dec
call
mov
push
ret
add
loope
in
test
add
scas
lods
sbb
jb
xor
lods
push
jbe
or
add
dec
push
xchg
adc
mov
pop
ljmp
jae
cmp
xchg
cli
push
add
rcll
xor
cmpsb
les
add
stos
aad
mov
add
fildll
inc
lret
lea
mov
xor
mov
jb
ja
xor
mov
inc
mov
sahf
or
imul
rclb
and
movsb
mov
inc
add
adc
inc
inc
push
mov
imul
xchg
dec
mov
sub
repnz
sbb
add
mov
mov
cmp
push
icebp
lds
pop
jg
inc
inc
cwtl
adc
inc
mov
xor
rol
fucomi
xor
andl
ss
adc
pusha
mov
jns
cmp
rorl
subb
adc
or
mov
scas
sarl
add
xor
mov
mov
mov
add
daa
jg
or
pop
js
pusha
orb
int3
and
andl
fsubrs
add
jmp
xlat
rclb
add
fs
or
mov
push
cli
inc
sbb
sbbb
int3
add
pop
mov
add
roll
es
shll
xor
push
popf
stos
add
mov
je
adc
jp
add
mov
and
add
shrl
mov
mov
lret
sbb
cmc
int
call
inc
jp
cwtl
mov
xor
cmp
jo
dec
pop
aad
adc
dec
inc
push
lods
ret
popf
sbb
test
std
jl
add
pop
clc
mov
stos
or
xchg
out
sub
or
lret
popf
aad
mov
pusha
test
cltd
add
cs
aas
fwait
lods
sahf
add
test
or
cmp
push
inc
stos
mov
add
test
mov
sarb
pop
push
insl
dec
cmp
daa
push
dec
xor
shl
push
shlb
add
fs
test
lock
or
jo
or
sbb
xlat
xor
cmp
add
mov
cwtl
push
mov
lret
cwtl
inc
add
and
arpl
das
push
push
ds
insl
int3
mov
pop
subl
xlat
cmp
movsl
xor
cmp
jae
fadds
dec
xor
jge
cmp
int
add
hlt
shlb
loope
cmp
dec
je
repz
mov
int3
and
pop
xor
cmp
xchg
sub
ret
push
push
divl
jmp
jge
outsb
or
mov
test
incl
addr16
mov
arpl
nop
cwtl
dec
push
add
movl
out
mov
dec
es
shlb
stos
std
test
mov
mov
xchg
jg
sahf
push
add
pop
pop
cmpsb
shll
mov
cs
je
sbb
lock
pusha
push
and
cwtl
push
hlt
add
xchg
imul
adc
je
pop
shll
dec
push
cwtl
and
pop
xor
jle
adc
popf
xadd
xchg
and
mov
add
test
sub
inc
test
out
xchg
incb
fwait
cmpsl
in
repz
or
push
sti
mov
pusha
mov
push
and
into
lret
imul
cmc
popf
aam
cli
in
mov
shll
xchg
push
pop
or
test
adc
mov
rol
jns
test
scas
fadds
enter
and
hlt
add
jo
jge
push
push
sbb
sbb
xchg
xchg
dec
arpl
jno
in
sbb
mov
mov
test
add
iret
sbb
mov
add
frstor
sbb
call
push
sbb
adc
lea
sub
mov
popa
jae
cmovs
push
stos
iret
mov
lret
ror
push
or
add
aam
daa
or
cmpsl
shlb
inc
dec
push
inc
jb
js
mov
shr
mov
mov
add
jl
dec
cmp
xchg
inc
je
ficompl
add
fprem
cld
cmp
or
pop
push
pop
add
dec
jo
lds
mov
das
add
movsl
push
repnz
xchg
push
push
jmp
or
pop
mov
xchg
sub
inc
popa
or
sbb
push
lret
test
or
add
mov
inc
pushf
mov
pop
add
and
lods
add
ss
push
pop
dec
sbb
orb
xorb
inc
dec
add
sti
or
push
ds
inc
movsl
arpl
cmc
dec
pop
jl
push
orl
mov
aas
push
mov
adc
fwait
or
pop
add
mov
lock
jno
or
inc
add
fwait
push
push
jge
popa
dec
adc
icebp
or
xchg
push
loope
lds
leave
pop
sbb
shrb
pop
and
insb
je
or
in
fcoml
dec
dec
hlt
jle
pusha
fldenv
shll
insl
adc
imul
enter
das
sub
addb
lahf
roll
or
enter
ja
mov
scas
cltd
inc
sbb
adc
daa
cld
and
call
cmpsl
cmp
xchg
std
fldenv
test
imul
test
nop
mov
roll
xlat
lods
aam
test
jmp
sub
xor
adc
sub
jl
sbb
shll
cwtl
fdivrs
and
clc
lods
arpl
mov
mov
mov
dec
push
cmp
ljmp
sub
imul
mov
pusha
jo
addr16
xchg
arpl
adc
fisttpll
jne
ja
rorl
js
xchg
mov
mov
add
in
fs
mov
dec
and
dec
dec
lret
js
jge
shlb
jnp
mov
negl
pusha
mov
ljmp
mov
pop
cltd
push
inc
stc
and
add
dec
mov
insl
push
lods
jns
add
push
cmc
int
bound
xchg
andb
push
fwait
cmp
dec
jbe
mov
adc
int
mov
cltd
xchg
push
mov
out
lcall
call
dec
out
adc
dec
and
std
aaa
mov
jne
lock
pop
sub
shr
dec
shll
jae
mov
mov
inc
ror
arpl
and
and
xor
add
or
loop
and
lock
test
and
andl
mov
add
out
sahf
pop
mov
mov
mov
mov
cmpb
push
std
nop
mov
enter
add
pop
cwtl
push
icebp
bound
xor
mov
nop
aaa
mov
push
hlt
and
stos
push
mov
insl
sti
dec
clc
cmp
in
or
lret
jb
or
lret
data16
xchg
lahf
or
mov
les
xchg
scas
inc
fdivrs
out
or
dec
xor
inc
push
cltd
pop
outsl
mov
mov
pop
xchg
imul
shrb
xchg
cwtl
test
arpl
bnd
mov
add
mov
xorb
insl
and
xorl
push
sti
and
fmull
pop
popa
or
sbb
fwait
sarl
stos
enter
mov
xor
lcall
outsl
xorb
cmpsb
icebp
pop
jne
clc
push
add
mov
cwtl
adc
mov
cmpsl
add
fidivs
push
mov
jb
enter
nop
and
dec
sub
add
sub
addb
xchg
test
push
hlt
sub
pop
lea
mov
or
mov
jo
cmp
sbb
mov
push
dec
mov
insb
bound
sub
outsb
jno
sbbl
sub
add
jge
push
inc
rorl
call
add
mov
jne
idivb
add
and
sub
lea
es
xor
jne
lret
ja
push
loop
test
cs
add
test
and
or
dec
sub
sub
mov
sbb
ds
shlb
into
pusha
jecxz
fdivp
push
or
ds
ret
imul
ret
imul
mov
mov
lret
cmp
mov
cli
lods
fadds
cmp
js
je
cwtl
inc
sub
loope
or
xor
mov
jb
add
insl
inc
enter
pop
sub
add
pop
inc
xchg
jb
lock
mov
push
lret
mov
xchg
in
mov
enter
ret
mov
in
int
jo
loopne
and
inc
or
inc
jo
js
jne
movsb
int3
xor
or
mov
add
and
push
lret
or
push
sbb
jp
inc
bound
mov
inc
push
mov
je
or
loopne
pop
movsl
pop
cmp
xor
push
push
jle
push
pusha
mov
pop
dec
cmp
push
fs
out
add
xor
adc
jp
shll
or
cmp
sub
adc
dec
cmp
test
inc
sub
xor
in
and
pop
roll
xor
mov
mov
add
push
inc
mov
rorl
dec
cmc
cmp
je
push
pop
sbb
test
out
inc
xchg
and
lock
pusha
inc
jns
and
xchg
add
ja
out
mov
add
lods
jmp
and
dec
mov
pop
mov
add
pop
pop
pop
push
je
push
sbb
jge
mov
sbb
or
and
aam
mov
xchg
adc
popa
outsl
inc
inc
into
pop
adc
pop
lea
inc
and
loopne
sub
dec
mov
push
pop
loopne
iret
xchg
or
mov
sub
push
je
sahf
clc
or
cmp
inc
add
pusha
jno
mov
or
jns
and
or
mov
dec
push
xchg
cmp
ss
out
xlat
add
mov
jmp
mov
mov
push
push
cmp
pop
sbb
adc
xchg
push
jp
aaa
mov
scas
mov
cwtl
add
mov
jle
imull
adc
fisttpll
fildll
xor
xchg
iret
xchg
and
lock
pusha
mov
rcrb
xor
ds
fsubr
mov
int
add
cltd
sub
mov
xchg
add
mov
xor
and
lock
xor
jbe
inc
mul
cmpsb
std
aas
xchg
mov
out
push
mov
inc
insb
push
aas
cmp
or
add
sub
inc
or
roll
fwait
out
push
inc
mov
outsl
mov
xchg
icebp
movl
out
mov
add
je
cmp
mov
shlb
xchg
lea
push
inc
mul
cwtl
cli
arpl
mov
out
add
movsl
push
xor
push
pop
sub
cmp
cwtl
rcrl
outsb
cmpsl
enter
inc
add
add
cwtl
leave
loop
test
lcall
and
pop
and
add
mov
mov
add
test
cwtl
push
clc
std
dec
cmp
mov
and
mov
pop
push
push
sub
and
push
adc
test
mov
dec
dec
adcb
test
mov
iret
push
mov
sbb
xchg
pushf
mov
sub
cmp
pusha
cmpsl
cli
les
mov
pop
mov
ja
fwait
jbe
sbb
pop
push
hlt
mov
dec
rcll
pop
push
pusha
loopne
andb
push
shrb
imul
adc
mov
subb
xchg
cmp
mov
clc
push
fs
enter
inc
cmp
inc
sbb
mov
and
xor
les
mov
rcrb
lock
push
clc
add
loope
outsl
in
fidivrs
lock
push
outsb
aaa
pop
cmp
neg
and
loope
mov
and
add
popa
dec
in
sub
nop
fldl
jns
xchg
jl
addr16
add
adc
popf
shlb
mov
mov
std
xchg
mov
hlt
clc
popf
outsb
add
xor
mov
push
jnp
je
add
mov
add
push
pop
les
xor
mov
inc
pusha
xchg
fisttps
mov
jg
in
inc
inc
sbb
insb
cmpsl
adc
add
or
add
xchg
ja
push
aaa
int3
jns
and
adc
push
imul
out
loope
clc
add
ja
orl
dec
pop
lret
inc
popf
dec
dec
dec
int
sti
shl
lret
jge
int3
pop
cs
dec
mov
aaa
add
cmc
pop
inc
mov
mov
in
mov
jns
or
inc
in
stc
in
lea
ret
adc
out
jno
int3
jmp
fcoml
scas
jo
and
push
dec
and
cmpsl
push
adc
ret
xor
or
cmc
push
shll
ficompl
add
test
out
mov
fcompl
in
pop
pop
adc
fstps
sbb
into
or
and
stos
jg
add
fisubs
jge
inc
cmp
cld
fucomi
add
mov
mulb
sbb
sbbb
rorl
jno
add
pop
shl
add
sahf
xlat
jno
shll
fcomps
aad
adc
mov
negl
shll
test
nop
sbb
mov
dec
add
jmp
push
aas
fsubr
add
adc
xchg
test
add
or
lahf
js
add
lock
je
jmp
mov
mov
shl
add
mov
mov
add
pop
mov
rorb
add
orb
insl
out
add
or
add
pop
rolb
sbb
jecxz
add
int3
mov
cmc
ret
jp
aas
notl
mov
aaa
cld
cmp
cmc
cmpb
stos
jle
xor
sbb
mov
add
pop
movsb
push
push
xchg
xchg
add
and
sub
mov
loope
and
pop
lret
mov
adc
mov
jns
xchg
add
mov
jo
add
sbb
xor
adc
popl
push
test
pop
repnz
rcrb
inc
add
insb
fs
add
pusha
fbstp
xlat
adc
mov
add
adc
push
mov
pop
shrb
movsl
rcrl
add
pop
adc
hlt
sti
add
sbb
testb
sub
inc
lret
pop
pop
mov
add
pop
scas
lcall
push
lods
push
sti
aad
sbb
out
mov
jp
in
ficoml
jns
dec
pop
loop
mov
push
pop
mov
lret
mov
sub
jge
dec
inc
pusha
ss
shlb
add
sahf
push
out
fsubrl
lods
jmp
add
xchg
sbb
test
push
jg
add
mov
mov
cmp
andl
cwtl
inc
pusha
loopne
movsb
mov
xchg
ret
or
and
push
inc
je
and
sub
mov
int3
pop
divl
enter
cmp
cmp
mov
add
insl
jmp
lock
add
mov
pusha
xchg
lcall
xchg
mov
add
imul
lods
arpl
push
jmp
call
adc
and
repnz
sbbl
fs
mov
sti
jns
cmpb
sarl
cwtl
cwtl
sbb
pop
loopne
pop
inc
add
inc
pmaxsw
insl
rorb
movsb
sub
pop
add
into
add
cli
clc
jmp
add
imul
mov
ds
add
sub
mov
daa
sbb
jae
ja
mov
call
mov
nop
repz
cltd
xchg
add
add
lret
inc
mov
fsubs
and
daa
mov
jno
pop
mov
fsubrs
add
test
jg
rcll
rcrb
bound
add
aam
cld
enter
cltd
andb
aaa
daa
jmp
push
and
in
sbb
add
or
xchg
pop
cld
das
pop
xor
loop
popa
jp
xorb
pushf
add
in
jg
xchg
fwait
dec
aaa
mov
pop
xor
or
mov
insl
dec
mov
mov
add
ret
dec
mov
pop
xor
cmp
cmp
cwtl
andb
lods
pop
push
push
mov
cmp
add
jbe
test
inc
lahf
add
adc
cmp
push
push
lods
pop
and
jp
fisubrs
push
push
inc
ret
push
loopne
inc
sbb
out
mov
insb
addl
pop
jg
lahf
inc
mov
sbb
push
xchg
xor
mov
mov
push
sub
out
stos
inc
pop
mov
outsl
negl
shlb
jge
xorb
mov
pushf
stc
push
ss
icebp
adc
dec
into
ret
cli
cwtl
jo
leave
push
xchg
push
out
cmp
add
mov
add
xor
cmp
pop
adc
cmp
subb
mov
lret
sub
std
pop
add
outsb
leave
rorb
xor
jbe
aad
lcall
daa
xor
loopne
add
add
sub
cld
adc
jae
int
shlb
outsl
push
aaa
inc
sub
pop
lods
mov
sbb
dec
sbb
incb
test
add
or
dec
adc
fldcw
movsl
add
add
pusha
sbbb
out
js
add
in
or
inc
cwtl
stc
pop
outsb
sbbb
arpl
sub
nop
enter
fmuls
hlt
mov
jbe
jge
mov
leave
inc
jo
inc
add
insl
push
cmpsb
flds
and
sti
hlt
adc
movsl
loope
cmp
pop
jne
cmp
inc
addr16
push
rcl
testb
gs
loop
int
pop
jbe
fidivrl
scas
pop
jge
sbb
cmp
dec
and
ror
popf
pop
les
mov
scas
imul
adc
xchg
mov
pop
add
xchg
inc
movsl
lods
add
adc
imul
and
pusha
push
sarl
push
daa
add
sbb
ss
hlt
adc
pushf
or
cmp
push
add
sbb
inc
sbb
call
mov
cmp
pop
jno
adc
cld
inc
adc
cmp
add
jne
cmp
add
hlt
test
sub
in
pop
loopne
cltd
add
fcmovb
sub
fmull
pop
mov
add
ret
mov
cmp
les
rolb
scas
push
push
add
jecxz
mov
lods
add
mov
xor
repnz
mov
lret
xchg
xchg
or
adc
sub
fadds
push
sbbb
test
add
dec
or
add
mov
lods
aas
lock
pop
sbb
je
cld
mov
enter
aad
lods
jne
add
cltd
mov
lds
adc
shr
stos
pop
cs
add
movsl
adc
in
imul
rcrl
out
push
cltd
dec
scas
iret
mov
addl
sub
int3
xor
adc
mov
sbb
pop
jae
imul
xchg
ret
les
sbb
cld
mov
sti
adc
mov
insl
cmpsl
or
push
clc
js
add
and
xchg
or
andl
fisttpl
add
mov
loope
inc
push
add
sub
or
push
mov
call
sbb
inc
push
out
cmc
sub
inc
push
add
ljmp
imul
xor
cmp
mov
jns
or
repnz
adc
enter
leave
and
outsl
adc
stc
or
dec
pop
jmp
xchg
sub
dec
add
jge
popf
inc
outsb
adc
cmp
roll
jp
mov
push
mov
sbb
mov
xchg
outsl
orl
fmull
or
jae
pop
cmp
add
jmp
pop
mov
jno
movsl
mov
add
dec
and
dec
mov
rolb
add
xchg
sub
fstpt
inc
movsb
xor
add
mov
ret
hlt
xchg
aas
xchg
js
lea
fmuls
push
sbb
sahf
jns
leave
pop
cmp
add
inc
out
adc
das
stos
xchg
jo
add
in
data16
adc
add
xlat
push
add
imul
lahf
test
cli
dec
jmp
add
lods
stos
pop
fstpl
dec
test
loopne
push
cli
ja
pop
mov
dec
pushf
sub
and
pop
cmpb
pop
cmp
popa
sub
inc
xchg
dec
lock
dec
jp
push
jmp
ret
jl
or
adc
cs
mov
pusha
sti
xlat
test
outsb
hlt
push
cwtl
and
cwtl
dec
push
testb
adc
or
dec
xor
jbe
addl
dec
call
jb
push
add
je
sbb
sub
aaa
rolb
push
mov
lods
lcall
loopne
xor
add
jmp
cli
sub
or
dec
lcall
shl
xchg
mov
xor
insb
add
and
addb
dec
inc
addr16
push
dec
ds
cmpb
lcall
dec
or
shl
out
add
cltd
insl
mov
add
notl
scas
out
pop
enter
dec
movsl
in
cmp
push
inc
sbb
imul
ret
loope
outsb
lods
jo
jecxz
cld
adc
add
rclb
sbb
cmp
nop
mov
test
cmp
loop
add
cli
push
out
add
jl
pop
and
cmp
add
mov
mov
and
imul
xorl
lods
sbb
push
add
fcmovne
add
ret
push
adc
subb
std
mov
pop
xchg
testb
loopne
cmp
push
iret
fmuls
pop
outsb
ret
inc
std
mov
push
iret
sbb
leave
les
jae
cmp
push
or
add
mov
xchg
enter
mov
adc
dec
add
das
mov
scas
fisubl
xchg
mov
add
leave
cmp
pminsw
xchg
cmp
sar
inc
es
stos
and
add
mov
inc
jno
incb
les
and
in
pop
add
pushf
jo
sub
jns
fstpl
cmpsb
mov
out
pop
sbb
jo
xorb
lds
addl
imul
mov
sub
mov
adc
test
ficoms
inc
bound
in
mov
add
icebp
inc
test
sbb
fildll
pop
inc
andb
stc
push
fldt
lret
xchg
push
adc
add
adc
mov
add
and
xlat
jbe
andl
inc
dec
shl
mov
push
shrl
cmp
xlat
test
popa
cmc
add
sarl
mov
adc
mov
test
icebp
nop
call
cmp
lret
pop
addb
incl
fcoms
test
jnp
int3
cmpsl
add
mov
jl
mov
dec
pop
sub
shlb
lcall
cmc
inc
call
push
dec
ljmp
insl
dec
add
ds
movsl
lret
pop
inc
scas
push
pop
or
sbb
fnstenv
push
fcom
jno
push
sbb
lds
es
jle
cli
pop
mov
insb
shlb
cld
stc
mov
cmp
roll
gs
pop
ficoms
rolb
rolb
mov
mov
arpl
mov
lcall
mov
imul
dec
cmp
pop
js
loope
ss
inc
jo
lea
call
popa
mov
mov
dec
je
xchg
mov
add
add
aaa
lods
aas
repz
inc
jle
stc
add
sarb
mov
mov
pop
movsl
sbb
mov
jo
xor
jbe
pop
jmp
enter
add
dec
decb
push
jnp
add
sbb
dec
subb
lods
ret
pop
inc
cmpb
xchg
cmpsl
scas
or
jne
or
add
jnp
fildl
add
add
aad
ret
cmp
cmp
pop
es
flds
shr
lods
add
movsb
scas
cmp
sub
jbe
adc
push
sub
cmp
out
call
scas
loopne
xor
cmpl
outsl
enter
stos
add
repz
mov
mov
rcrl
jns
xor
push
lcall
lods
mov
mov
inc
or
or
sub
add
inc
test
out
pushf
cmp
sbb
inc
into
adc
xor
fistpll
pushl
adc
sub
stc
xor
rorl
cld
cli
imul
cmpsl
lock
add
add
pop
movsb
jnp
jle
or
or
mov
loope
xor
imulb
lahf
mov
int3
jp
shrb
enter
js
xor
ds
pop
sbb
lods
push
mov
or
popf
sbb
icebp
outsb
add
mov
je
movsb
mov
xor
xor
dec
ss
lahf
push
lock
sbb
aad
fwait
test
sbb
inc
and
add
out
dec
pop
push
cwtl
pop
jbe
mov
inc
inc
sbb
leave
xor
xor
mov
movsb
enter
adc
mov
shr
aam
pusha
sbb
add
mov
ret
outsl
lea
movb
pushf
adc
add
pop
out
push
adc
jne
pushf
ret
cltd
xor
addb
dec
fildl
jne
add
pop
jl
andb
orb
sbb
loopne
add
shrb
xchg
inc
sub
mov
xchg
jge
cmpsb
inc
leave
lahf
ljmp
and
je
addr16
nop
sbb
push
sbb
mov
add
ret
xor
mov
inc
and
rol
xchg
ljmp
outsl
jae
add
jecxz
pop
imul
xor
mov
incl
dec
xchg
mov
aam
jbe
sbb
sbb
int3
sub
jb
add
add
inc
mov
bnd
es
inc
adc
add
insl
repz
push
jae
enter
or
jecxz
mov
mov
or
les
sti
aad
add
in
mov
mov
add
fwait
scas
out
sarl
xchg
and
aam
push
sub
jo
cmp
mov
pop
js
add
pop
add
or
inc
or
mov
in
push
mov
add
adc
test
mov
mov
sub
add
pcmpeqb
das
fs
pop
jmp
aaa
pop
ret
mov
or
sbb
test
pop
cmp
xor
sub
clc
pushf
inc
inc
push
fcmovne
repz
cmpb
sub
pusha
icebp
and
mov
lret
or
outsl
or
outsb
fsubs
and
add
jae
pop
cmpb
lahf
adc
mov
mov
sbb
rclb
addr16
out
pop
inc
add
mov
mov
out
out
adc
lock
pusha
dec
dec
rcl
push
push
jns
xchg
xchg
add
add
sub
sbb
in
insl
or
push
or
xor
push
pop
dec
jge
push
mov
push
xchg
or
xor
xchg
imul
add
push
in
xchg
sbb
dec
add
mov
add
sub
inc
push
cmp
pop
orb
out
insl
push
or
mov
lsl
xchg
sbb
fdivl
ret
mov
sarb
add
add
test
xchg
or
arpl
dec
clc
iret
add
fldcw
mov
sbbl
popa
and
pop
dec
outsb
daa
rclb
stos
negl
mov
push
icebp
mov
push
mov
push
xor
or
jecxz
stos
in
cmp
jno
add
dec
xorb
pop
add
xchg
lret
insb
sbb
jle
movsb
push
add
loopne
mov
sti
adc
adc
aam
or
ficomps
jns
sub
add
pusha
call
sbb
dec
in
lret
fldl
add
iret
cs
into
push
in
ror
xchg
xchg
add
or
mulb
xchg
scas
pop
dec
orb
mov
jg
mov
mov
add
jne
cwtl
hlt
sbb
jno
adc
pop
rolb
js
pop
pop
or
adcb
imul
and
and
wbinvd
insl
sbb
je
add
lds
dec
test
cmp
cmpsb
jae
subb
mov
lock
cmpb
cmpsb
sub
push
jp
and
leave
dec
leave
loopne
mov
sbb
sub
stc
clc
add
pop
sbb
repz
daa
cmc
cmp
dec
mov
add
mov
cltd
lret
cmpsb
add
jmp
std
and
mov
adc
add
or
inc
mov
push
cmp
add
pop
push
inc
mov
subb
add
loope
mov
enter
jo
scas
mov
dec
lods
add
xchg
mov
mov
cmpl
aas
test
xor
loop
xor
dec
out
add
enter
fadds
pop
jno
xor
xor
call
add
ret
inc
jb
or
add
jge
loopne
adc
out
sub
and
mov
sahf
jae
pop
pop
call
insb
add
adc
les
js
adc
flds
or
cmpb
mov
pop
lods
lcall
xor
sub
add
enter
subb
bound
jbe
cmp
xchg
pop
cs
shl
inc
sti
test
pop
or
adc
inc
out
inc
xor
add
addr16
jb
icebp
out
adc
dec
sti
and
jg
or
or
or
mov
push
sub
loop
add
test
testl
sbb
or
add
xchg
inc
shl
cvtpi2ps
add
fcmovnu
mov
sbb
pop
mov
jg
mov
add
push
ret
les
insb
or
and
pop
orb
xor
shll
jle
add
mov
or
mov
or
fiaddl
mov
fldcw
push
mov
add
adc
push
jnp
add
sub
scas
xor
cltd
rcl
popa
jmp
mov
ja
lds
lock
arpl
in
lods
and
sub
add
xchg
cmp
daa
and
pop
push
lock
aas
icebp
xor
clc
cmc
add
out
fimuls
cltd
dec
or
mov
and
mov
push
add
jp
push
cmp
cmc
xor
inc
or
ret
mov
dec
jns
mov
jg
or
andl
jae
add
insb
dec
enter
imul
mov
pusha
xchg
cmpb
ja
into
add
inc
jl
inc
ljmp
and
mov
and
cmp
mov
xorl
push
pop
mov
mov
add
sub
sub
and
sti
push
aad
sub
sbb
push
clc
cmp
jae
sub
xchg
add
xchg
sbb
add
sbb
mov
outsl
popf
in
orb
dec
mov
stos
inc
shrl
or
inc
adc
push
ret
push
lea
daa
and
jge
sti
adc
dec
or
sub
cmp
cs
jp
pop
adc
shlb
push
sub
insl
divl
cli
xchg
loopne
sbb
mov
es
add
lcall
jne
add
lods
lock
js
daa
outsb
mov
loopne
ficoms
pop
jg
jae
in
dec
enter
sbb
fidivs
or
xchg
loope
add
ret
mov
add
xor
ljmp
jl
adc
adc
jbe
shrw
cmp
in
xchg
in
incb
lods
mov
inc
sbb
push
pop
dec
adcl
insb
pusha
mov
xchg
or
cmp
out
adc
and
popa
jno
cmp
mov
movsb
mov
xchg
shlb
pop
pop
lock
add
push
push
les
roll
cmc
aas
je
add
inc
xchg
jge
inc
mov
jle
jbe
sub
cmpsb
push
sbb
lods
pop
and
inc
push
mov
or
xor
push
icebp
cmpsl
lret
add
adc
movsl
adc
mov
inc
enter
dec
add
sti
addb
in
xchg
add
dec
adc
stos
lods
mov
add
fwait
mov
movups
pop
pop
pop
cs
popf
mov
jg
bnd
push
xor
add
or
imul
adc
popa
sub
or
js
pop
mov
pop
bound
inc
das
enter
cmp
push
in
xchg
shlb
les
or
add
and
push
rolb
or
inc
daa
insl
in
add
cld
sbb
das
std
mov
add
jae
add
push
fbld
les
add
adc
pop
mov
adc
jne
dec
mov
hlt
je
push
sub
dec
cmpl
fsubs
call
sub
or
and
insb
mov
sbb
fcmovbe
enter
add
in
jno
and
pshufw
ljmp
ret
pop
str
mov
aas
dec
icebp
sub
push
inc
pushf
mov
adc
in
mov
and
pusha
push
push
data16
mov
push
andl
add
mov
aad
cmc
andb
js
add
flds
xchg
rorb
lock
and
out
test
jne
sbb
lock
sub
adc
add
in
gs
jmp
or
jo
dec
sar
mov
shl
dec
jg
cld
adc
adc
lea
movsb
cli
xchg
add
push
or
mov
ror
and
mov
or
push
scas
cmpb
gs
shrl
js
aad
nop
cmpsb
lods
dec
dec
pushf
xor
enter
sbb
dec
dec
lock
dec
and
in
mov
icebp
out
pop
cli
add
les
jb
gs
mov
fs
std
int3
mov
sahf
inc
jl
je
pop
or
shlb
cli
jl
mov
iret
mov
dec
fisubl
push
mov
and
in
cld
sub
inc
aad
bnd
add
mov
loope
shlb
inc
push
mov
jns
mov
popf
clc
sbb
out
cld
gs
jae
mov
aaa
push
inc
xchg
and
hlt
cmpsb
pop
push
sbb
push
add
sub
incb
imul
xor
jns
imul
mov
xchg
out
inc
dec
push
sti
lcall
push
adc
add
xlat
fisubs
push
jbe
sti
int3
lcall
inc
rclb
adc
aad
fs
push
cmpb
int
orl
std
mov
int3
inc
in
mov
popa
sbb
in
lods
dec
xchg
and
pop
mov
clc
adc
inc
insb
xchg
push
test
add
or
nop
sub
in
add
jecxz
and
ss
imul
lods
sarb
enter
aad
shlb
sbb
pop
push
nop
mov
dec
pop
and
das
adc
fs
popf
in
lock
cmp
jns,pn
add
loop
outsb
xorl
ret
sbbl
test
jp
dec
mov
and
adc
push
mov
ret
mov
cli
pop
scas
daa
js
out
jno
shrl
xchg
sbb
add
cmp
add
cwtl
xchg
adc
loopne
xchg
mov
inc
add
add
call
sub
adc
rol
mov
xchg
or
sub
fdivrs
xchg
inc
jbe
cld
inc
xchg
push
arpl
pop
pop
inc
mov
lret
std
mov
nop
cli
sahf
push
add
sbb
add
xor
enter
mov
add
cmpsb
add
fnstenv
push
subb
and
cld
xlat
add
mov
add
mov
push
pop
and
ja
or
insb
sbb
or
dec
mov
test
fidivl
pusha
adc
jbe
imul
inc
push
jp
jb
sbb
xor
lret
les
loope
jg
call
pop
mov
jno
add
dec
mov
adc
sahf
add
aad
sub
inc
rcl
add
inc
mov
dec
leave
cltd
scas
pop
sbb
rorl
imul
dec
xor
sete
addr16
lea
jo
or
ret
sbb
jns
ror
sub
add
fwait
mov
mov
das
push
add
jecxz
jmp
push
lcall
jl
fmull
sarl
cwtl
in
dec
add
test
lcall
imul
cmp
ljmp
dec
sub
aad
xor
shr
mov
arpl
aaa
or
jg
or
rorl
nop
jl
xchg
add
loop
push
add
testb
iret
jmp
dec
inc
inc
sub
or
xchg
dec
in
add
fldt
add
and
bound
les
jns
fdivrl
xchg
xlat
sahf
inc
xor
xor
into
ror
and
xchg
mov
or
mov
cs
add
add
sar
inc
add
dec
sbb
or
push
adc
or
sbb
push
sti
and
add
sbb
pop
add
push
adc
add
inc
sub
cmp
or
scas
mov
mov
dec
xor
aad
in
mov
imul
data16
outsl
push
xor
pop
push
xor
or
sahf
pop
shlb
adc
cmp
inc
faddl
fcomip
sarb
sbb
add
imul
mov
inc
mov
mov
xor
aas
fnstenv
cs
add
les
sub
pusha
outsl
mov
push
nop
and
xlat
sub
subl
mov
mov
cli
xchg
nop
mov
sbb
dec
jnp
add
insl
ja
inc
inc
sbb
jbe
push
add
clc
orl
mov
add
lret
outsl
mov
add
jge
fldt
mov
sbbb
cwtl
push
cmp
jae
popa
cli
pop
add
sbb
sub
inc
mov
mov
inc
jb
lahf
gs
test
popa
scas
inc
in
mov
mov
cld
leave
je
lret
mov
add
jl
inc
cmp
jmp
pop
mov
js
movsb
setp
andb
lcall
fsubrs
test
add
push
push
mov
cmp
fildl
movl
adc
inc
enter
xchg
jne
xor
pop
shrb
test
sbb
hlt
dec
lods
sub
out
push
mov
fwait
pop
imul
inc
ss
inc
es
lret
jnp
or
andb
pop
add
mov
xlat
pusha
lods
xor
sti
ret
test
sbb
xchg
les
mov
jmp
cmpb
or
dec
mov
call
add
outsb
cmp
pop
add
or
pusha
in
sbb
adc
jecxz
repz
jae
sub
mov
out
outsl
xorb
xchg
mov
stos
or
sub
jo
push
inc
dec
movsl
rolb
sub
mov
pop
shll
outsl
adc
mov
aad
mov
sub
inc
adc
dec
shrl
fadds
test
mov
shrb
add
or
cmp
jae
add
jg
xchg
xchg
adc
fisubl
inc
inc
inc
movsb
stc
inc
lret
mov
movsb
pushf
push
cmc
popa
inc
lds
xor
das
inc
pop
sti
movsl
frstor
pushf
pop
xlat
jo
inc
xchg
leave
lcall
cld
sbb
loop
out
xchg
mov
xor
add
mov
mov
mov
dec
add
push
xchg
je
sbb
loopne
cs
dec
xchg
outsb
mov
jmp
pop
cmc
iret
xchg
bound
orb
dec
jp
or
mov
add
jge
jne
add
std
cmp
mov
add
out
cmp
and
jl
add
pop
adc
sbb
mov
xchg
push
leave
add
and
push
pushf
divl
push
cmp
adc
sbb
rcl
jno
fsubrs
std
dec
aaa
andb
dec
aad
enter
dec
insl
testl
jae
add
idivb
mov
mov
lds
stos
outsl
cltd
add
rcrb
sub
push
jmp
mov
loop
mov
add
inc
jne
jns
add
in
dec
cs
jge
add
std
sub
xchg
sbb
jnp
sub
dec
jle
loopne
inc
insl
js
nop
movups
dec
add
pop
dec
dec
clc
and
cmp
pusha
call
adc
movsb
mov
mov
inc
pop
or
add
push
clc
xorl
sub
xchg
pushf
sub
push
lds
lahf
add
inc
push
mov
pop
pop
push
jbe
jmp
pushf
mov
dec
and
mov
clc
add
movsb
sbb
cli
inc
push
add
mov
mov
add
push
inc
les
in
scas
addb
mov
add
jecxz
cmp
aad
jbe
inc
pop
mov
cmp
icebp
sub
mov
jbe
push
add
cli
leave
cs
imul
outsb
add
cld
xchg
stos
loopne
inc
rolb
xchg
idivl
imul
mov
aad
les
pop
cs
andb
test
and
or
xchg
dec
xchg
nop
pop
addb
push
or
sbb
inc
mov
mov
popf
mov
sbb
out
in
ret
aaa
adc
add
js
sbb
add
xor
adc
sbb
add
cmp
movsb
mov
insb
inc
inc
add
cmpl
popf
mov
jo
cwtl
cmp
adc
inc
mov
inc
adc
sbb
cmp
xor
adc
add
and
inc
sub
or
xchg
or
sub
sub
xlat
jnp
and
inc
and
loop
pushf
mov
arpl
pusha
repz
mov
jns
add
inc
in
int3
push
shll
add
and
push
adc
add
push
jmp
add
or
jns
mov
pop
nop
push
sub
sbb
lret
shlb
inc
sbb
sub
test
inc
mov
test
and
sbb
mov
testl
test
add
je
int3
movsb
leave
add
fdivp
iret
dec
xchg
movsb
pop
mov
imul
mov
or
sbb
cmp
adcl
mov
push
sbb
aam
and
push
mov
adc
add
cli
and
mov
lea
xor
shr
add
cmp
and
daa
cmp
je
shlb
pop
movsb
mov
pop
xor
dec
shll
cmp
outsl
insb
push
or
int
mov
sarb
inc
mov
and
enter
dec
sarl
scas
pop
in
mov
incl
cmp
test
int
leave
cwtl
lock
push
pusha
hlt
subl
and
leave
std
loopne
in
inc
lock
jmp
sub
cmp
mov
or
add
pcmpgtd
inc
daa
mov
xchg
cmp
testb
pop
gs
mov
subb
and
jge
cld
inc
add
xchg
leave
add
push
rclb
xor
inc
ja
adc
or
sbb
push
sbb
cmp
rcrb
push
ss
xchg
and
mov
lahf
cmpb
inc
test
add
inc
mov
cwtl
pop
dec
rorl
sub
add
jo
sbb
add
or
add
or
lcall
enter
mov
lret
add
movl
pushf
add
and
dec
add
test
sar
cmp
ret
mov
push
pushf
pop
testb
dec
imul
clc
inc
arpl
push
add
insl
adc
xor
and
and
jle
push
les
enter
cs
inc
pushf
es
jno
arpl
pop
mov
jg
add
aad
jno
shlb
aam
add
ret
sub
inc
cmp
sub
dec
inc
xor
nop
mov
ret
cmp
cmp
and
sahf
jmp
cld
cmp
dec
push
add
inc
fsubrl
dec
mov
sub
xchg
add
in
xor
mov
xchg
out
pop
lods
or
xchg
or
rolb
stos
mov
adc
xchg
xor
fstps
dec
mov
add
aad
pop
mov
mov
or
inc
loopne
xlat
cmp
sub
mov
jge,pt
addb
mov
dec
and
std
mov
push
xor
cmpsb
mov
cltd
sub
fimuls
xchg
repnz
pop
add
push
sbb
xor
push
cmp
lret
sbb
ljmp
cli
in
add
shll
test
dec
cmc
hlt
add
adc
jge
jbe
mov
push
mov
push
cmpl
addb
leave
scas
mov
or
cmp
orb
sub
test
lret
inc
cmp
push
sbb
cmp
mov
shrb
mov
pop
sbb
dec
test
fcomi
jb
sub
popa
add
enter
mov
add
sahf
lock
sbb
jb
xor
push
sub
fsubr
xor
scas
jbe
fcomps
push
jp
inc
push
cld
xchg
mov
xchg
popf
dec
scas
shlb
jb
or
dec
add
push
mov
das
cltd
sub
orb
add
jp
pusha
filds
sbb
add
aas
xlat
mov
dec
xor
add
mov
nop
pop
ja
ss
shrl
add
add
arpl
rolb
adc
add
in
or
insb
and
jp
mov
or
fsubr
add
andb
pop
fmul
std
mov
push
adc
xchg
adc
arpl
pop
xor
cmp
pushw
adc
xor
ror
das
sbb
xchg
inc
add
push
ret
xchg
xor
pop
add
sbb
jge
dec
stos
lgs
add
sbb
and
fistpll
push
cmp
cmp
mov
xchg
pop
fwait
insl
add
and
je
push
js
dec
data16
mov
inc
clc
mov
xor
pushf
mov
sbb
lock
mov
mov
xchg
mov
push
pushf
push
pop
fidivs
push
pop
push
loop
adc
jo
jmp
outsl
outsb
call
in
lahf
inc
test
mov
or
out
push
and
stos
xchg
mov
daa
push
popa
jp
xchg
and
add
daa
mov
push
mov
xchg
xor
push
and
mov
add
cmp
inc
dec
les
jge
pop
jns
jnp
pop
push
icebp
jo
das
add
out
in
shrb
mov
mov
add
ljmp
stos
pop
std
and
mov
subl
orb
sbb
xchg
or
orb
in
jge
stc
cmp
sbb
add
add
mov
inc
jns,pt
in
dec
inc
stos
cli
jmp
cld
jg
fildll
call
dec
stos
in
fldt
pop
xchg
add
sarb
dec
test
aas
loope
mov
pop
cwtl
xchg
aad
cmp
pusha
int3
mov
cmp
xchg
fdivl
bswap
or
mov
inc
xchg
mov
sbb
push
std
mov
push
js
add
xchg
movsb
std
mov
sub
dec
xchg
add
sub
xchg
ret
int
jp
jle
jecxz
out
sub
cmp
and
mov
sbb
or
stc
xchg
cmpl
loop
cmp
sub
and
push
aaa
nop
cmp
push
add
and
sbb
ja
push
je
mov
mov
gs
pop
repnz
add
les
add
dec
fs
add
push
daa
pop
mov
cwtl
in
testl
pop
sbb
xor
xchg
inc
and
in
inc
ja
cli
scas
add
and
enter
stos
ret
push
and
push
jge
inc
pop
test
ss
or
adc
dec
xor
aad
xorl
xor
xchg
hlt
lock
add
inc
sbb
xor
add
sub
je
in
orb
mov
xor
cmpsb
rolb
adc
sub
push
adc
pop
arpl
iret
mov
pop
xor
pop
call
or
sub
out
orb
int
dec
push
in
jle
jle
xor
add
add
mov
jle
pop
add
pop
int3
sub
mov
push
adc
inc
and
test
addb
pushf
iret
fldcw
js
iret
mov
in
add
sarb
adc
sbb
mov
es
clc
pop
xor
mov
sbb
push
mov
jns
ljmp
xor
cld
xor
add
xor
or
inc
dec
bswap
or
std
scas
add
jle
fmulp
inc
pop
jecxz
test
add
adc
mov
pop
xorl
add
rorl
call
mov
dec
xor
inc
jg
jp
insl
pop
stos
pop
in
sbb
loope
mov
cmp
push
xchg
lret
add
inc
enter
dec
add
es
add
mov
divb
stos
icebp
pop
or
xor
cmpsb
pop
jnp
aam
push
add
fistpll
add
jge
mov
sub
sbb
dec
addl
sbb
out
sub
cmp
add
mov
or
inc
es
xor
xlat
cs
test
sahf
add
or
rorb
sbb
int3
es
test
ret
mov
pusha
repnz
dec
fbstp
lcall
ljmp
xor
push
mov
fdiv
or
or
mov
nop
xchg
jge
and
inc
cwtl
xlat
xchg
inc
or
test
inc
add
sbb
lock
adc
sbb
inc
xor
jmp
cmp
sub
add
jo
out
int3
pop
push
cwtl
cmp
pop
fcoms
test
cmovo
inc
dec
in
push
add
mov
xor
cs
or
or
or
imul
pop
inc
push
push
pop
pushf
pop
add
lcall
in
push
fwait
enter
mov
js
mov
test
lcall
lods
add
leave
push
push
xchg
mov
jae
inc
sub
enter
in
sbb
xchg
icebp
lds
inc
add
sbb
clc
lods
pop
add
ret
fisubs
xor
out
cwtl
dec
sbb
mov
sarl
jmp
es
mov
pop
test
sbb
or
in
data16
nop
mov
dec
fisubrs
scas
mov
pushf
jp
add
in
pop
or
mov
enter
insl
push
sub
and
mov
sti
in
iret
push
das
inc
daa
xchg
and
add
push
pop
adc
inc
xchg
xor
mov
sahf
add
cmp
adc
inc
dec
pop
pusha
subb
or
sub
mov
jb
imul
xchg
dec
xchg
sti
movsl
es
js
popf
int3
and
stos
xor
or
jno
mov
dec
and
pop
push
adc
mov
xchg
sbb
mov
dec
pushf
jb
cli
js
jbe
or
mov
rorb
cmp
addb
aad
out
mov
sub
or
test
lret
xor
add
xchg
mov
add
scas
pushf
mov
aas
icebp
aad
pop
adc
jmp
mov
add
add
sbb
and
mov
sub
fistpll
add
and
sbb
fadds
ret
stos
movsb
rclb
mov
in
cmpsl
mov
push
dec
cld
sbb
push
add
lods
imul
lret
frstor
sbbl
pop
into
test
pop
fstpt
jb
daa
fistps
cmp
repnz
gs
ja
sbb
mov
loopne
pop
pusha
jns
sbb
add
data16
iret
out
mov
adc
add
jnp
cmp
loopne
js
popl
mov
lret
js
cwtl
sub
in
sub
push
incl
jg
push
xchg
into
ds
xchg
iret
pop
and
arpl
nop
in
or
pop
inc
add
mov
pop
subb
xchg
mov
add
xchg
loop
add
sbb
popf
push
in
orb
pop
mov
aas
add
imulb
mov
wrmsr
xchg
sbb
aas
push
rcrb
add
or
jno
mov
fisttpll
jo
test
or
sub
add
or
sub
inc
push
rolb
xor
lahf
cmp
jge
cmp
sbb
add
shl
dec
movsl
add
lds
loopne
imul
sbb
mov
xchg
mov
and
adc
es
data16
add
push
push
push
pop
enter
cwtl
enter
mov
push
add
mov
addr16
outsl
loopne
mov
sub
cltd
cld
add
ret
pop
adc
test
addb
dec
out
mov
adc
xorb
les
xor
inc
test
std
cmp
sar
add
jo
adc
sub
rclb
pop
xchg
jno
add
mov
in
dec
inc
jl
adc
push
shl
add
addr16
sbb
mov
pop
adc
shlb
xchg
pop
movl
push
xor
subb
mov
push
ljmp
aad
testb
fwait
lods
or
mov
xchg
xchg
pushf
adc
add
cmp
and
xchg
fbstp
in
or
sbb
sub
push
std
fstl
or
xor
adc
mov
fisttpl
xor
mov
rcr
pop
mov
lret
shrb
add
fnstcw
or
pusha
push
xchg
push
fsubrs
xor
popf
mov
or
cmp
and
lods
push
mov
or
addb
cmp
rorb
les
dec
and
nop
pop
add
icebp
or
xchg
and
jecxz
pop
pop
insl
popf
rcrb
enter
xor
adc
adc
call
subb
add
add
dec
sbbb
and
jecxz
movsl
movl
pop
rcrb
mov
data16
pusha
cs
adc
cmp
add
pop
pop
les
add
enter
rclb
mov
fistps
and
pop
ret
or
xchg
xchg
adcb
cwtl
or
call
clc
aam
cmp
xor
mov
jno
jecxz
icebp
cmpsl
adc
mov
pop
inc
add
push
add
sbb
insl
sbb
pop
les
ds
mov
inc
pop
mov
ret
pop
cmc
or
pop
push
mov
in
inc
fdivrl
sbb
mov
xchg
adc
push
shl
fnstsw
pop
lods
mov
mov
insl
mov
add
pop
xor
lds
scas
je
jbe
xchg
jmp
xor
sub
aas
sub
add
xchg
shl
and
adc
jbe
les
cmpsl
lods
adc
outsb
jg
aam
cld
stos
add
push
sub
add
sub
in
and
leave
add
iret
and
add
or
movsb
cld
add
xor
orb
into
xlat
inc
pop
jmp
xchg
cmp
add
dec
pop
mov
loopne
mov
lea
inc
push
cmp
out
xchg
xor
test
jns
add
popf
or
xor
mov
arpl
push
in
or
loopne
adc
xor
fsubr
fidivrl
jge
sub
jae
aad
jle
add
or
mov
popa
adc
loop
add
es
mov
xchg
push
mov
mov
xor
lahf
xchg
movsb
cmp
hlt
push
icebp
pushf
lock
test
add
xchg
xor
out
push
sbb
jp
nop
lock
add
in
push
call
adc
rcrb
loope
test
mov
fs
cltd
pop
xchg
in
add
xlat
daa
push
adc
mov
add
cmp
popa
ja
dec
test
fs
xor
leave
stos
add
sbb
or
insl
inc
adc
jbe
xchg
add
inc
dec
and
enter
rolb
mov
addl
push
adc
mov
or
imulb
in
subb
outsl
mov
pop
xchg
add
in
add
pop
out
out
or
xchg
inc
mov
ja
repnz
mov
stos
lcall
or
and
cvtpi2ps
xchg
sbbb
push
fwait
xor
cmp
dec
je
imul
outsl
add
or
repz
sbb
xor
adc
xor
stos
mov
add
jl
push
inc
dec
add
enter
sahf
add
add
je
cmpsb
push
dec
dec
add
add
mov
mov
xchg
cmp
hlt
mov
sbb
pop
shlb
add
in
add
clc
and
add
dec
inc
and
mov
pop
xchg
iret
cmp
in
and
sub
sub
int3
rclb
pop
je
jae
sub
inc
in
add
dec
sbb
pop
pushf
xchg
lods
sbb
ja
dec
jno
cmpb
jg
out
mov
loope
sbb
add
pushf
aaa
pop
das
shl
push
mov
mov
or
ret
mov
mov
jecxz
add
sub
outsb
test
subl
roll
push
mov
fs
mov
iret
adc
enter
push
sti
jl
adc
cmp
daa
xor
aas
test
insl
sti
mov
addl
or
or
fcoml
sbb
xor
insb
jno
loopne
mov
add
loopne
pop
xor
test
daa
addb
daa
test
pop
pop
add
sub
cmc
and
mov
add
jl
dec
fsubs
xchg
mov
add
push
add
pop
shll
push
pop
in
dec
and
sbb
call
xchg
add
ret
lock
jge
out
mov
outsb
mov
adc
mov
jns
mov
fistpl
lret
add
sbb
dec
push
or
xor
lock
jecxz
pop
add
mov
jne
lods
xchg
adcb
mov
add
outsl
jmp
sarb
ror
es
add
push
or
dec
fisubl
mov
jae
stos
dec
popf
pop
add
cmp
add
je
pop
xchg
inc
inc
loopne
cmp
adc
fidivrs
in
inc
add
jnp
cmpsb
cmc
les
cs
or
push
push
test
add
sahf
bound
mov
fwait
inc
dec
aas
sbb
adc
cld
xchg
fdivrl
and
das
stos
fcoms
lods
sti
pop
je
or
mov
test
adcb
or
pop
insl
je
daa
mov
add
xor
stos
loopne
sarb
or
pop
cwtl
add
lods
dec
fisttps
rol
jp
das
inc
pushf
add
jns
cmpsl
adc
cli
add
syscall
repnz
sub
shll
js
add
sub
and
fmul
xchg
inc
push
mul
xor
jo
inc
or
inc
mov
mov
fwait
cmp
push
add
pop
jbe
mov
sbb
rolb
inc
xor
shl
mov
enter
mov
ret
cmp
dec
andb
xchg
out
xor
and
test
adc
insl
cs
add
add
sti
mov
pusha
add
sub
sub
inc
loopne
mov
repz
add
or
cmp
out
call
sbb
ret
mov
xchg
add
dec
dec
push
das
leave
jno
xchg
inc
add
js
dec
cmp
sbb
sahf
in
cmp
divl
mov
movsb
ja
push
icebp
in
xor
add
loopew
movsl
jecxz
mov
mov
sahf
push
push
adc
xor
add
addb
pop
cmp
fwait
dec
mov
adc
dec
sbb
jnp
in
repnz
cwtl
mov
fisttps
xor
loopne
jb
sbb
mov
jbe
pop
xchg
cltd
mov
lret
outsb
add
xchg
dec
or
xor
push
sbb
inc
pop
jge
inc
add
push
rorb
add
or
pop
ljmp
scas
das
daa
outsb
pusha
les
mov
movsb
out
pop
sahf
push
add
and
push
add
test
push
ljmp
int3
push
pop
stos
mov
je
cmpsl
jnp
mov
sti
sub
mov
pop
or
add
jmp
push
add
nop
adcl
or
ds
clc
js
mov
cmp
xchg
mov
dec
test
add
or
aad
lock
je
or
xchg
adc
cmpsl
jbe
lret
add
or
es
mov
push
bound
inc
sub
inc
call
std
rcr
movsb
add
outsl
mulb
pusha
add
stc
and
push
jp
inc
and
into
rcl
add
out
jo
test
mov
or
js
clc
add
ret
fadds
and
rolb
cmc
push
sbb
and
daa
push
mov
sub
pop
xor
sbbb
add
sub
ljmp
sarl
and
jl
lcall
or
popf
push
stc
lahf
mov
xchg
adc
ja
call
clc
and
pop
shlb
popa
insb
sub
xor
adc
pushl
mov
jmp
cmc
stos
orb
in
dec
jae
xor
xchg
inc
pop
push
sub
movsb
lods
repnz
sbb
mov
cltd
pop
push
cltd
in
outsl
push
iret
rcl
prefetch
div
pushf
std
xor
inc
orb
push
push
std
rcrl
add
out
mov
das
test
stos
and
adc
loop
imul
mov
aam
inc
in
js
add
push
pop
mov
add
xor
jmp
jp
fldenv
xor
pusha
push
inc
stc
inc
ja
lods
or
outsb
sub
cmp
aas
and
add
xchg
adc
xchg
xor
pop
jns
cld
cmp
cmpsb
loopne
dec
add
outsb
mov
repz
push
adc
ret
ja
aaa
lea
push
and
into
hlt
push
mov
push
bound
adc
xchg
lds
lea
shlb
aad
pop
ss
cwtl
push
lods
loopne
add
out
jecxz
cli
mov
xor
push
xchg
or
jmp
mov
mov
inc
in
in
add
or
xchg
lods
sub
add
push
and
dec
xchg
add
adcb
dec
test
or
mov
and
loope
loopne
add
cwtl
jo
clc
and
add
add
cmp
pop
push
inc
fsubrs
xor
bound
insl
mov
out
icebp
sub
stc
and
fimull
mov
cmp
and
add
dec
mov
lods
push
cwtl
or
dec
lret
xchg
sbb
les
aaa
add
jmp
and
fs
add
dec
sub
out
jg
mov
dec
fistl
shrb
mov
pop
mov
sar
cs
and
outsl
add
stos
cwtl
sbb
ja
std
stc
movsb
mov
stos
push
cmp
xchg
shll
sbb
adc
arpl
jmp
add
xchg
cmp
adc
dec
and
mov
in
pop
jmp
sarl
les
stos
mov
lods
mov
cld
push
shlb
push
xorl
sub
pop
sbb
cmpsb
jno
jle
jno
add
mov
inc
aam
in
inc
lahf
sbb
ljmp
mov
dec
sub
sbb
add
fsubr
or
loopne
jo
in
push
and
sub
and
andl
pop
add
jl
sub
push
mov
pop
and
pushf
inc
inc
aad
cltd
inc
add
roll
ljmp
jp
cld
cltd
add
repz
out
dec
mov
daa
jp
lcall
or
pop
add
push
sub
mov
js
repz
adc
dec
cmp
mov
mov
and
and
icebp
pop
add
cmpsb
leave
add
test
or
pop
fadds
aam
imul
cmpsl
orb
xchg
fwait
and
add
dec
inc
and
adc
sbb
sub
jns
and
mov
sbb
int3
and
repnz
xchg
std
xor
stos
addb
pusha
push
rcrl
pop
enter
adc
or
loop
cmp
add
xor
sub
add
mov
or
cmpsb
or
test
push
push
sbb
dec
inc
out
and
add
xor
inc
sahf
mov
mov
sub
je
adc
xor
jb
out
mov
sub
xor
inc
add
int3
dec
fdiv
sub
dec
sub
outsl
add
or
lods
or
inc
inc
mov
jl
scas
aaa
push
test
loopne
add
cmp
orb
iret
sbb
sub
jp
outsl
and
lds
cwtl
adc
pop
adc
pop
nop
inc
int3
inc
fstp
mov
ret
adc
inc
push
hlt
add
jle
cmp
or
sbb
aam
mov
cmpsl
cld
repz
add
enter
jle
testl
adc
xor
jmp
xor
mov
jne
shl
cld
cmp
insl
add
subb
cwtl
hlt
paddw
add
fmulp
insb
or
sub
sbb
and
cmpsl
call
fs
xor
aad
insb
inc
push
outsl
mov
or
sahf
mov
jl
jns
ljmp
mov
push
push
xor
mov
testb
fprem1
lock
fcmove
dec
orb
dec
add
cmp
rorb
call
add
sub
pusha
mov
add
jmp
and
push
outsb
shlb
rclb
gs
add
jge
add
andb
mov
rcrb
add
adc
nop
movsb
xlat
sub
mov
push
sub
and
je
xor
rcrb
jae
mov
add
pushf
add
inc
push
and
sbb
pop
loope
add
arpl
pop
add
stos
mov
xor
lahf
xchg
rolb
je
das
dec
subb
addb
mov
pop
add
dec
cltd
xchg
dec
sub
push
out
jg
popf
add
add
xor
xchg
add
mov
aad
ret
cmc
and
add
fdivs
dec
push
jmp
jae
pop
sbb
or
test
sub
xchg
push
and
mov
divb
inc
loopne
pop
lea
pop
xchg
mov
lcall
pop
add
nop
imul
add
out
or
arpl
pop
sahf
bound
add
int3
ds
mov
pop
frstor
add
sub
adc
inc
or
es
add
aas
lret
or
or
fmul
dec
movsb
dec
pop
cmp
dec
sarb
add
nop
loopne
and
pushf
enter
iret
cmpsl
add
daa
mov
add
ret
orl
je
call
push
inc
xchg
mov
sbb
dec
mov
add
or
fdivrl
jo
popf
mov
mov
and
push
xor
add
adc
flds
add
and
cwtl
lds
add
and
cmp
mov
fldl
mov
jmp
sub
and
test
fs
sub
jecxz
mov
mov
xchg
or
sub
inc
and
push
dec
or
fwait
mov
and
inc
stos
lds
ret
sti
es
push
nop
and
sbb
lea
je
cmp
in
push
adc
mov
jg
popf
push
inc
pop
add
xchg
dec
mov
rcl
fmul
xchg
fadd
mov
popf
mov
nop
mov
cwtl
nop
pop
call
xchg
pop
shrl
push
adc
pushf
lods
imul
add
je
push
xor
jno
xor
lret
mov
stc
call
js
outsl
mov
jle
das
add
xchg
ljmp
cmp
out
mov
or
mov
add
roll
arpl
jo
ss
lret
add
popl
sub
add
cli
les
mov
add
jbe
jge
or
js
int3
and
daa
nop
xor
inc
push
inc
ljmp
add
out
adc
lods
jb
insl
push
ja
es
icebp
test
ret
cwtl
adc
add
outsl
pop
int3
ds
lcall
cs
sub
dec
shrb
into
popa
call
nop
ficoms
movsl
adcl
addb
test
out
int3
cmc
fsubrs
out
add
mov
sbb
sub
add
mov
lock
pop
js
add
sbb
scas
aad
sbb
lret
std
sahf
add
jns
dec
jle
out
adc
shll
loop
add
adc
out
sub
shl
sub
cs
and
dec
arpl
div
call
xor
jmp
mov
pop
or
mov
sarb
movsl
test
push
jbe
push
add
and
adc
imul
lahf
add
daa
jecxz
pop
int3
xchg
pusha
fcoms
pushf
push
mov
mov
sub
xor
or
imul
add
xchg
jno
push
jge
add
inc
outsb
popf
inc
adc
rcrl
les
je
push
insl
pop
mov
inc
add
or
out
or
xchg
push
pop
fsubrs
inc
movsb
jnp
test
arpl
add
jmp
cltd
inc
add
mov
xchg
ret
loopne
jb
and
lock
js
push
jns
add
repnz
insb
inc
xchg
jge
jl
push
jp
jnp
lock
add
sub
sub
dec
je
dec
int
sahf
jge
inc
push
xor
aas
sbb
and
add
mov
js
or
nop
mov
add
fs
cmp
sub
or
test
pop
shll
push
cli
mov
sahf
clc
mov
inc
stc
sbb
and
and
xchg
js
mov
outsl
add
add
push
sbb
add
mov
and
je
shlb
sahf
es
cld
sahf
sbbl
dec
xchg
add
shlb
stos
add
mov
push
outsb
sbb
pusha
pop
loop
add
inc
push
lods
scas
mov
sbb
sub
and
pop
enter
stc
enter
std
rorb
cmp
je
in
repnz
push
enter
lret
fadd
sahf
sub
pusha
add
subb
aas
je
add
loope
cmp
dec
add
push
fidivl
imul
mov
addl
mov
add
insb
out
mov
les
nop
cwtl
add
aaa
mov
sahf
pop
or
pop
and
cmp
mov
add
xchg
frstor
loopne
dec
out
add
push
je
dec
stos
pop
pusha
rolb
add
js
sub
push
inc
in
aaa
shll
mov
mov
jmp
in
adc
add
aas
xlat
cmp
stc
mov
test
push
pop
test
jg
fsubs
add
cwtl
aas
mov
aam
sahf
push
negb
sbbb
cli
mov
sbb
push
in
test
int3
xchg
add
fildl
add
xor
cmp
dec
add
dec
