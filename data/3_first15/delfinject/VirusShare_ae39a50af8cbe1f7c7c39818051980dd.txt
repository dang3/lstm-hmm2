jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
mov
push
call
ret
nop
push
mov
push
mov
and
push
mov
push
call
cmp
sbb
neg
and
pop
ret
push
push
mov
and
push
mov
push
call
ret
nop
test
je
call
or
je
ret
mov
jmp
ret
nop
test
je
call
or
jne
ret
mov
jmp
ret
nop
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
cmp
jge
jcxz
cmp
je
push
push
mov
mov
ja
lea
lea
std
rep
jmp
cmp
je
push
push
mov
mov
mov
ja
and
lea
lea
std
rep
sar
mov
mov
sub
sub
rep
cld
dec
sar
js
rep
and
mov
rep
pop
pop
ret
push
push
push
push
mov
mov
jmp
push
call
mov
mov
test
je
cmp
jbe
cmpb
jne
cmpb
jne
add
jmp
xor
mov
jmp
cmp
jne
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
cmp
ja
mov
mov
call
mov
mov
xor
jmp
cmp
jne
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
ja
mov
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
xor
push
push
pushl
mov
xor
call
lea
call
mov
lea
mov
call
mov
cmpl
je
inc
jmp
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
mov
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
pop
ret
mov
push
mov
add
lea
push
call
movzwl
imul
add
imul
xor
mov
add
imul
mov
add
mov
mov
pop
ret
mov
mov
fnclex
fldcw
ret
nop
push
fnstcw
pop
ret
nop
sub
fistpll
fwait
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
push
push
push
push
mov
mov
test
je
mov
mov
test
jle
dec
mov
mov
test
je
mov
call
test
jg
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmp
sete
cmp
jle
mov
inc
mov
test
je
call
test
je
mov
cmp
je
mov
mov
mov
call
jmp
cmp
jg
pop
pop
pop
pop
ret
mov
test
je
mov
xor
mov
xchg
call
ret
lea
movl
movl
mov
xor
mov
mov
mov
mov
movb
call
ret
nop
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
decl
jne
push
lea
call
pop
ret
mov
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
decl
jne
lea
call
add
dec
jne
pop
pop
ret
mov
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
lea
test
je
mov
inc
jle
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
push
push
push
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
mov
call
push
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
lea
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
incl
ret
mov
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
decl
jne
lea
call
mov
pop
mov
ret
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
xor
test
je
mov
jmp
ret
nop
test
je
ret
nop
add
mov
ret
mov
test
je
mov
shr
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
lea
ret
lea
mov
jmp
ret
mov
sub
jb
sub
je
call
ret
lea
mov
xor
movl
inc
cmp
jne
mov
mov
ret
nop
mov
jmp
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
ret
mov
mov
mov
ret
mov
push
push
mov
mov
test
je
mov
call
mov
test
jne
pop
pop
ret
lea
push
mov
mov
test
jne
xor
pop
ret
call
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
jne
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
subl
jae
call
mov
movl
movw
movw
movw
call
call
mov
ret
ljmp
add
add
jb
imul
jo
jb
addr16
sub
xor
cmp
sub
xor
xor
inc
jbe
outsb
addr16
bound
dec
push
inc
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
xor
call
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
push
push
push
push
sub
mov
cld
mov
mov
mov
mov
add
jb
mov
mov
add
jb
mov
or
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
jae
cmp
jae
mov
inc
mov
inc
add
jae
jne
cmp
jae
mov
inc
adc
jb
mov
add
jne
cmp
jae
mov
inc
adc
adc
js
add
jae
jne
cmp
jae
mov
inc
adc
jb
dec
add
jne
cmp
jae
mov
inc
adc
adc
js
jmp
cmp
ja
sub
jb
shl
cmp
jae
mov
inc
xor
je
jns
sar
mov
jae
add
jne
cmp
jae
mov
inc
adc
adc
jmp
add
jne
cmp
jae
mov
inc
adc
jb
inc
add
jne
cmp
jae
mov
inc
adc
jb
add
jne
cmp
jae
mov
inc
adc
adc
js
add
jae
jne
cmp
jae
mov
inc
adc
jae
add
cmp
adc
mov
add
jb
cmp
ja
mov
add
jae
cmp
jb
mov
inc
mov
inc
dec
jne
jmp
cmp
ja
cmp
jbe
mov
jmp
je
dec
mov
sub
mov
mov
add
pop
pop
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
or
jmp
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
mov
mov
cmpl
je
mov
sub
mov
mov
cmpl
jb
mov
mov
mov
cmpl
je
mov
mov
xor
call
push
lea
push
mov
mov
push
mov
sub
push
mov
add
push
call
add
test
jne
jmp
subl
mov
mov
xor
call
mov
mov
mov
add
mov
call
jmp
mov
call
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
movl
mov
call
test
jle
mov
movl
cmpl
jne
movl
lea
call
mov
mov
mov
movzbl
xor
mov
incl
incl
decl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
mov
pop
ret
push
mov
add
mov
mov
mov
call
xor
push
push
pushl
mov
movl
mov
call
mov
cmpl
je
cmpl
je
jmp
cmpl
jl
decl
mov
mov
mov
cmp
jne
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
mov
pop
ret
push
mov
add
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
mov
call
inc
je
mov
push
mov
mov
call
inc
push
mov
call
mov
mov
pop
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
rep
mov
xor
mov
mov
mov
push
mov
call
mov
mov
mov
cmpl
jge
mov
incl
mov
mov
mov
mov
cmp
jne
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
pop
pop
pop
pop
pop
ret
mov
ret
lea
push
mov
add
push
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
mov
mov
mov
push
call
add
mov
movw
push
push
call
push
call
mov
push
push
movzwl
push
push
mov
push
call
mov
lea
push
movzwl
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
push
push
mov
push
call
mov
lea
push
mov
push
call
add
push
mov
push
mov
push
mov
push
call
mov
mov
push
push
push
push
mov
push
call
mov
lea
push
push
lea
push
mov
push
mov
push
call
push
push
mov
sub
push
push
mov
push
call
mov
lea
push
mov
sub
push
push
mov
push
mov
push
call
lea
push
push
mov
push
mov
push
push
push
mov
push
call
test
jbe
movb
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
call
add
add
loop
repz
repz
imul
dec
hlt
out
sti
inc
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
imul
gs
xor
cs
insb
add
add
push
mov
mov
push
push
dec
jne
push
mov
mov
mov
call
xor
push
push
pushl
mov
lea
xor
call
mov
mov
call
je
lea
mov
call
cmpl
je
cmpl
je
lea
mov
call
mov
lea
call
lea
xor
call
mov
lea
call
mov
push
push
push
call
mov
mov
call
push
mov
call
mov
mov
pop
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
ret
push
mov
add
mov
mov
add
mov
movzwl
add
mov
mov
pop
pop
pop
ret
mov
push
mov
add
mov
mov
shr
mov
mov
mov
pop
pop
pop
ret
push
mov
add
push
xor
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
lea
xor
mov
call
lea
xor
mov
call
movl
cmpb
jne
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
call
test
je
movb
xor
push
push
pushl
mov
movl
lea
push
mov
push
call
test
je
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
push
mov
push
call
test
jl
cmpl
je
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
lea
push
mov
lea
mov
mov
push
mov
lea
mov
mov
add
push
mov
lea
mov
mov
add
push
mov
push
call
test
je
lea
push
mov
lea
mov
mov
call
push
mov
lea
mov
mov
push
mov
lea
mov
mov
add
push
mov
push
call
incl
decl
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
cmpb
jne
push
mov
push
call
jmp
mov
mov
call
mov
push
call
mov
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
add
call
add
aad
cld
cmc
in
std
out
aad
iret
clc
std
jmp
into
int3
add
add
call
add
add
stc
jecxz
out
stc
in
in
clc
call
add
push
mov
add
mov
mov
mov
xor
divl
test
jne
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
divl
test
jne
mov
mov
mov
jmp
mov
mov
xor
divl
inc
imull
mov
mov
add
mov
movzwl
add
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
xor
divl
test
jne
mov
lea
mov
mov
add
jmp
mov
lea
mov
mov
xor
divl
inc
imull
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
movb
mov
mov
add
mov
mov
call
mov
mov
call
mov
xor
push
push
pushl
mov
mov
mov
mov
mov
mov
mov
add
mov
movzwl
add
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
call
mov
mov
mov
mov
call
add
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
cmpl
jbe
mov
lea
mov
mov
mov
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
mov
lea
mov
mov
add
mov
mov
call
mov
lea
mov
mov
mov
mov
call
add
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
mov
call
add
mov
incl
decl
jne
lea
mov
call
lea
mov
call
cmpb
jne
movl
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
call
test
je
movb
movl
lea
push
mov
push
call
lea
push
push
lea
push
mov
add
push
mov
push
call
push
push
mov
push
mov
mov
push
mov
push
call
lea
push
mov
push
mov
push
mov
mov
push
mov
push
call
lea
push
push
mov
add
push
mov
add
push
mov
push
call
mov
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
mov
push
call
pop
cmpb
jne
push
mov
push
call
jmp
mov
mov
call
mov
push
call
mov
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
push
mov
add
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
cmpl
je
mov
mov
mov
cmpb
jb
cmpb
ja
addb
mov
mov
mov
incl
incl
decl
cmpl
jne
mov
pop
ret
lea
push
mov
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
call
lea
push
push
push
lea
mov
mov
call
mov
call
push
push
call
test
jne
lea
push
push
lea
push
push
push
mov
push
call
test
jne
mov
call
mov
lea
push
mov
push
lea
push
push
push
mov
push
call
test
jne
mov
mov
call
mov
mov
cmpb
jne
mov
push
lea
mov
mov
call
mov
mov
call
mov
inc
mov
mov
mov
call
jmp
mov
push
lea
mov
mov
call
mov
mov
call
mov
add
mov
mov
mov
call
mov
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
call
add
add
out
repz
hlt
vpor
repz
int3
iret
ret
add
add
add
incl
add
add
add
in
add
sidtl
mov
sub
je
sub
jne
movb
jmp
movb
mov
pop
pop
pop
ret
mov
sub
sidtl
mov
add
ret
nop
push
mov
push
movb
call
cmp
je
call
cmp
je
call
cmp
jne
movb
mov
pop
pop
ret
mov
push
mov
mov
push
push
dec
jne
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
call
mov
push
call
call
mov
push
call
call
mov
mov
sub
cmp
jge
mov
sub
cmp
jge
movb
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
decl
add
in
jecxz
idiv
cmpsb
movsb
mov
add
add
decl
add
add
in
mov
add
decl
add
out
hlt
out
jecxz
cmpsb
movsb
mov
add
add
decl
add
add
ret
rol
fidivrl
add
decl
add
add
jecxz
loopne
cmpsb
mov
add
decl
add
add
clc
hlt
jmp
cmc
add
decl
add
add
cmc
in
loope
not
repz
jmp
call
decl
add
enter
cli
idiv
aad
in
imul
add
add
incl
cld
hlt
mul
add
add
decl
add
add
loop
repz
sti
cld
jmp
call
add
add
cmc
in
sti
out
div
fcomi
hlt
out
stc
in
add
add
call
add
add
cmc
lock
cli
cmc
bnd
xlat
icebp
repnz
out
add
call
add
add
loop
out
out
hlt
std
ljmp
flds
add
call
add
add
cmc
in
sti
out
div
fcomi
hlt
out
stc
in
add
add
decl
add
loop
icebp
sar
std
clc
incb
add
add
decl
add
add
stc
jecxz
out
stc
xlat
sti
hlt
idiv
fsubp
add
decl
add
add
cld
loope
fdiv
clc
repz
cld
add
lcall
add
add
loop
repz
sar
hlt
icebp
push
in
scas
lods
int3
into
rcl
int3
lret
add
add
decl
add
add
loopne
cld
ret
out
cmc
bnd
add
decl
add
add
loop
icebp
mul
out
movsl
fdivp
call
decl
loop
icebp
mul
out
movsl
cld
loop
add
add
call
add
enter
cld
lock
repnz
idiv
sar
repz
in
jecxz
add
add
call
add
add
cmc
in
out
out
stc
in
leave
call
in
jmp
decl
add
add
call
cli
cmc
bnd
add
decl
cmc
neg
jecxz
sti
loope
loop
add
add
call
add
add
cmc
test
icebp
out
sar
out
fxam
filds
add
add
decl
add
add
cmc
not
sti
out
fdivr
loopne
call
add
add
cmc
jecxz
cli
cli
hlt
loop
enter
stc
out
in
add
add
decl
add
add
loop
repz
ret
cld
imul
fsubp
faddl
push
mov
add
xor
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
call
push
call
mov
cmpl
je
testb
jne
xor
jmp
mov
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
mov
pop
ret
add
call
add
add
cmc
in
cli
clc
lock
jecxz
jmp
stc
jmp
add
push
mov
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
movb
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
call
mov
movl
lea
push
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
mov
call
mov
call
test
je
lea
mov
mov
call
mov
mov
call
jne
movb
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
decl
add
enter
loopne
out
div
cld
fildl
add
add
decl
add
add
stos
int
cld
in
out
icebp
cmc
idiv
out
add
incl
add
out
cmc
jmp
add
add
in
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
jmp
icebp
std
pop
pushf
mov
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jg
stc
stc
jb
add
push
fs
xchg
outsb
not
stc
jb
add
aaa
xchg
sub
xor
enter
stc
add
add
jl
jmp
rol
ror
stc
stc
jb
add
cmpsl
shrl
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jg
not
stc
jb
add
dec
dec
popf
adc
or
mov
addb
add
jb
add
int3
lret
jbe
xor
enter
stc
add
add
jl
jmp
push
add
stc
jb
add
inc
out
mov
xor
enter
stc
add
add
jl
jmp
call
lret
cld
mov
add
add
pop
jmp
gs
stc
jb
add
fs
pop
jmp
insl
out
lods
pop
or
pop
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
call
sub
add
add
pop
stc
stc
jb
add
xchg
mov
fdivr
jb
add
call
imul
pop
imul
stc
jb
add
popf
repnz
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jg
stc
stc
jb
add
pop
ss
not
not
stc
stc
jb
add
rdtsc
mov
rdtsc
sub
not
cmp
jg
imul
stc
jb
add
cli
sbb
xor
enter
stc
add
add
jl
jmp
push
push
rdtsc
xor
pop
xor
pop
push
push
rdtsc
xor
pop
xor
pop
stc
jb
add
sub
pop
nop
call
push
push
call
mov
cmpl
je
movl
lea
push
mov
push
call
test
je
jmp
lea
lea
mov
call
mov
push
lea
mov
mov
call
mov
pop
call
jne
movb
jmp
lea
push
mov
push
call
test
jne
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
decl
push
out
icebp
cmpsb
movsb
shl
jmp
out
add
add
decl
add
ret
out
icebp
cmpsb
movsb
fscale
loope
add
add
decl
add
add
repnz
not
clc
stc
mov
push
mov
mov
push
push
pushl
mov
mov
mov
pop
or
mov
mov
add
test
sete
lea
mov
mov
add
ret
mov
movl
addl
xor
ret
ret
nop
push
mov
add
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
push
push
call
mov
cmpl
je
movl
lea
push
mov
push
call
test
je
call
mov
mov
cmp
jne
lea
push
lea
push
lea
push
lea
push
call
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
cmpl
je
lea
push
lea
push
lea
push
lea
push
mov
push
call
test
je
jmp
das
or
pop
jb
add
add
mov
add
add
in
addl
addl
ret
and
les
sub
sbb
iret
mov
mov
add
add
push
call
inc
addl
addl
ret
shr
int3
and
insb
movsb
enter
add
add
iret
bswap
jmp
push
add
call
lods
scas
pop
sbb
pop
cmp
push
push
rdtsc
xor
pop
xor
pop
repz
call
mov
cltd
dec
call
mov
add
add
xchg
addl
addl
ret
push
repz
call
dec
push
sbb
add
add
dec
call
in
inc
and
adc
fs
mov
add
inc
and
adc
fadds
or
add
push
sbb
loop
mov
jl
add
add
jmp
rolb
les
aad
add
inc
inc
push
sbb
aad
pop
call
xor
add
add
xor
inc
and
adc
mov
pop
add
call
lds
and
call
sub
je
inc
and
adc
test
add
add
in
add
add
les
addl
ret
shl
add
call
call
mov
add
add
add
add
add
pop
push
pop
add
call
sbb
push
sbb
add
add
call
js
inc
and
adc
cwtl
jmp
jb
les
pop
or
add
and
add
dec
call
mov
adc
add
add
add
jbe
add
add
js
inc
and
adc
xor
add
call
repnz
push
sbb
fs
hlt
push
push
rdtsc
xor
pop
xor
pop
rol
ror
jmp
and
add
call
xchg
inc
push
sbb
imul
add
add
add
lock
addl
ret
jo
xchg
clc
add
add
push
pop
add
call
xchg
mov
xchg
pop
call
add
int3
addl
addl
ret
insb
call
call
mov
adc
push
les
xchg
add
add
push
lahf
cmp
or
add
aas
mov
rol
addb
add
iret
bswap
add
call
jl
push
sbb
sti
xchg
call
pop
call
sub
inc
and
adc
call
xor
pop
xor
pop
repz
call
cmp
sbb
les
out
push
add
xor
push
sbb
sahf
mov
or
add
les
xchg
mov
testb
pop
jmp
inc
shl
add
call
xor
sbb
pop
mov
add
add
add
lock
addl
ret
adcb
xor
enter
pop
push
pop
add
call
inc
das
pop
sbb
or
add
add
call
cwtl
sub
test
bound
add
add
call
rolb
addl
ret
push
add
call
push
mov
xor
add
add
call
je
inc
and
adc
lock
mov
inc
inc
addb
call
in
pop
push
sbb
jo
add
add
xchg
cmp
sbb
add
add
sub
add
add
lock
addl
ret
subb
push
pop
push
pop
add
call
mov
push
sbb
inc
fucomp
add
add
inc
call
inc
addl
addl
ret
sbb
or
mov
add
add
add
add
call
cmp
push
shrl
add
add
repz
call
add
dec
mov
add
add
add
xor
inc
and
adc
add
ja
add
add
add
call
nop
pop
pop
sbb
push
stos
call
xlat
call
insb
addl
addl
ret
mov
or
enter
inc
inc
rolb
push
pop
push
pop
add
call
mov
add
pop
push
push
rdtsc
xor
pop
xor
pop
add
call
pop
pop
sbb
or
add
add
jae
add
add
sbb
inc
and
adc
sbb
iret
bswap
jmp
xchg
mov
add
call
adc
push
sbb
data16
call
mov
add
inc
and
adc
mov
xor
enter
stc
add
add
jg
jmp
adc
les
mov
jmp
fs
scas
push
push
rdtsc
xor
pop
xor
pop
repz
call
fcomps
sbb
stc
dec
call
jno
add
add
xor
inc
and
adc
and
rdtsc
xor
pop
xor
pop
push
pop
repz
xchg
sub
push
pop
into
insl
call
and
add
add
push
adc
pusha
call
je
add
add
xchg
addl
addl
ret
push
add
call
sbb
push
sbb
pop
daa
cmp
or
add
icebp
xor
js
rolb
inc
add
add
call
mov
push
loope
call
mov
add
addl
addl
ret
lock
push
rdtsc
xor
pop
xor
pop
repz
call
mov
mov
add
into
call
pop
addl
addl
ret
enter
add
and
add
add
addb
add
or
xor
les
jp
add
jnp
pop
sbb
icebp
enter
add
add
sbb
lock
inc
addb
les
mov
inc
out
sbb
add
add
imul
xchg
addl
addl
ret
les
xor
enter
stc
add
add
jg
add
call
add
push
cltd
jae
add
add
icebp
call
xor
inc
and
adc
mov
add
call
and
addl
ret
adcb
les
push
add
add
aas
push
sbb
lahf
add
or
add
add
add
rol
ror
repz
call
cmpsl
and
shr
xchg
call
out
add
add
cmp
addl
ret
enter
enter
enter
stc
add
add
jg
repz
call
push
mov
pop
jae
add
pusha
repz
call
adc
push
sbb
xchg
or
mov
add
add
jmp
fcmove
loopne
bswap
bswap
push
pop
add
call
xor
push
sbb
add
add
call
sbb
addl
ret
fsubr
or
add
lods
fs
js
inc
add
add
pop
jmp
cli
add
call
popl
sbb
add
pop
repz
call
iret
leave
push
sbb
into
das
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
repz
call
jns
pop
sbb
jecxz
mov
add
add
xchg
call
insb
addl
addl
ret
orb
mov
rdtsc
sub
not
cmp
jg
push
pop
repz
call
or
in
les
pop
jmp
repz
call
mov
gs
push
call
cltd
call
push
addl
addl
ret
in
add
inc
rolb
add
add
add
call
cmc
call
add
inc
and
adc
enter
enter
enter
stc
add
add
jg
jmp
sub
add
call
das
mov
push
mov
add
push
adc
pop
add
call
or
pushf
je
add
add
std
call
movsb
addl
addl
ret
js
add
sbb
add
roll
add
xor
push
sbb
pop
push
in
pop
add
call
cmp
jecxz
push
add
repz
call
add
stos
iret
mov
add
add
loopne
add
add
addb
add
or
sub
or
add
call
jae
pop
sbb
add
pop
add
adc
push
sbb
es
push
rdtsc
xor
pop
xor
pop
add
call
sbb
sbb
inc
fucomi
add
add
xchg
call
clc
addl
addl
ret
xor
je
add
les
push
jmp
mov
mov
add
call
adc
das
jg
jmp
mov
xor
push
pop
push
add
repz
call
sub
push
in
call
mov
add
add
in
addl
addl
ret
test
movsb
add
add
push
pop
add
call
pop
gs
sbb
mov
add
and
add
call
aas
adc
popf
arpl
or
loopne
inc
rolb
add
jmp
test
or
add
pop
sbb
xchg
add
add
in
call
lock
addl
ret
shr
add
add
xor
loopne
addb
les
and
lcall
out
sbb
jmp
bswap
push
pop
add
call
xchg
movsl
pop
sbb
pop
xchg
shr
ficomps
inc
addb
add
add
add
adc
add
add
push
sbb
jg
call
xchg
call
clc
addl
addl
ret
push
call
xchg
mov
lock
pop
repz
call
cli
nop
pop
sbb
insb
ss
scas
shr
aam
add
call
add
mov
call
and
add
add
add
scas
rolb
dec
fistl
cmp
add
add
add
addl
addl
ret
cmp
xor
enter
stc
add
add
jg
repz
call
pop
in
push
sbb
cwtl
jmp
bound
pop
add
add
add
add
add
call
movsb
jbe
sbb
rdtsc
xor
pop
xor
pop
push
push
rdtsc
xor
pop
xor
pop
repz
call
cltd
je
sbb
and
add
je
add
add
xchg
addl
addl
ret
int
xor
enter
stc
add
add
jg
push
pop
add
call
sbbl
dec
jmp
jle
inc
rolb
add
add
hlt
decl
int3
push
sbb
jne
sub
add
add
call
push
adc
pop
jmp
fs
repz
call
popl
sbb
add
add
psubsb
add
add
addl
addl
ret
in
jmp
add
adc
inc
jmp
pop
enter
les
lods
std
fucomi
push
sbb
inc
mov
loopne
inc
addb
add
add
mov
call
ljmp
shr
add
add
xor
add
add
xchg
addl
addl
ret
xor
add
push
pop
repz
call
loope
push
sbb
in
aaa
repz
call
mov
push
sbb
data16
adc
or
pusha
and
mov
adcb
les
dec
add
add
lcall
call
imul
add
add
and
adc
pop
jmp
xor
pop
repz
call
rcl
pop
sbb
push
mov
add
dec
lcall
sbb
sbb
xor
enter
stc
add
add
jg
add
call
sbb
push
sbb
add
add
push
call
test
addl
ret
rorb
bswap
jmp
cmp
add
call
jecxz
push
sbb
add
les
stos
add
add
dec
push
sbb
add
add
leave
call
adc
inc
and
adc
lods
push
pop
add
call
insl
or
sbb
lea
call
aam
add
add
adc
addl
ret
loopne
xchg
adc
add
les
inc
add
add
add
push
jle
xor
iret
bswap
add
call
ret
sbb
mov
add
add
add
addl
addl
ret
rorb
rolb
jmp
fcoms
into
jl
dec
call
push
add
addl
addl
ret
shr
push
adc
add
add
push
pop
repz
call
pop
adc
call
add
add
js
incl
gs
call
jecxz
add
add
faddl
addl
ret
test
iret
bswap
add
call
ljmp
cmp
add
add
pop
call
enter
add
addl
ret
sub
or
add
and
inc
add
add
add
call
js
push
sbb
into
ss
jmp
jo
push
pop
add
call
repnz
push
sbb
xlat
add
call
shr
add
add
pushf
addl
addl
ret
inc
push
pop
push
pop
add
call
mov
push
sbb
add
add
push
call
pop
addl
addl
ret
pop
jmp
dec
cld
test
push
add
jmp
mov
add
call
pusha
es
sbb
rcrl
repz
push
pop
push
pop
add
call
nop
ss
sbb
lret
call
mov
add
add
rolb
add
or
orb
bswap
push
pop
add
call
iret
and
sub
add
add
movsb
call
push
addl
addl
ret
loopne
xor
enter
stc
add
add
jg
repz
call
in
pop
sbb
jnp
or
clc
addb
add
add
add
add
call
int
push
sbb
add
add
mov
add
add
cld
addl
addl
ret
test
or
sbb
add
add
add
add
add
add
push
sbb
iret
imul
add
add
mov
add
inc
and
adc
pusha
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
xchg
sbb
or
pop
mov
add
add
push
pop
add
call
bound
sbb
loopne
call
adc
add
add
adc
addl
ret
add
lock
add
bswap
bswap
push
pop
add
call
test
push
sbb
xor
mov
or
xor
jmp
bswap
hlt
loopne
mov
add
add
add
call
jg
pop
sbb
ret
aaa
int3
call
inc
call
je
inc
and
adc
pushf
jmp
adc
add
add
call
std
mov
sbb
mov
les
in
add
lret
sbb
or
add
xchg
sub
add
add
add
add
les
mov
lahf
push
sbb
add
add
in
call
lock
addl
ret
add
or
add
add
add
jmp
clc
add
call
mov
movsb
pop
add
call
push
cmp
jp
out
cmp
add
call
and
addl
ret
inc
repz
call
lods
ficomps
je
scas
shr
add
add
out
add
add
lods
addl
addl
ret
xchg
jmp
mov
push
pop
add
call
push
adc
jns
xchg
add
les
dec
std
call
sub
sbb
add
add
test
add
addl
ret
insb
push
pop
add
call
insb
push
sbb
add
add
call
push
addl
addl
ret
xchg
call
add
add
add
add
addl
ret
add
add
call
arpl
dec
rcrb
iret
bswap
add
call
jb
push
sbb
add
add
cmp
add
add
mov
adc
push
xadd
add
call
daa
lods
pop
sbb
sahf
arpl
add
add
imul
xchg
addl
addl
ret
call
add
call
clc
addl
addl
ret
pusha
push
pop
add
call
cmc
sbb
inc
inc
mov
push
pop
repz
call
dec
inc
pop
sbb
popa
sbb
call
sbb
add
add
loopne
inc
and
adc
shr
sub
add
call
subb
xorb
pop
call
pop
call
sub
inc
and
adc
sbb
add
add
jge
add
add
movsb
addl
addl
ret
cmp
scas
rolb
push
iret
push
sbb
popa
loop
xlat
insb
add
add
imul
repz
call
sub
push
sbb
outsb
pop
cmp
add
add
sbb
add
add
mov
inc
and
adc
mov
mov
les
incl
inc
xor
push
mov
cmpsb
sub
rdtsc
xor
pop
xor
pop
stc
jb
add
popa
clc
sbbb
xor
enter
stc
add
add
jl
jmp
push
pop
stc
jb
add
test
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
not
stc
jb
add
push
push
rdtsc
xor
pop
xor
pop
stc
stc
jb
add
xor
enter
stc
add
add
jl
jmp
push
push
rdtsc
xor
pop
xor
pop
stc
jb
add
or
lret
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
xadd
stc
jb
add
push
push
rdtsc
xor
pop
xor
pop
not
stc
jb
add
lea
push
lea
push
call
test
setl
lea
mov
call
push
mov
call
push
push
mov
push
call
mov
call
mov
lea
call
jmp
dec
ficompl
pop
aam
push
std
jmp
jb
add
adc
rdtsc
mov
rdtsc
sub
not
cmp
jg
stc
stc
jb
add
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
jmp
xor
add
add
add
add
rol
jb
add
dec
into
jmp
or
incl
jbe
int3
fisttpl
xor
enter
stc
add
add
jl
jmp
imul
stc
jb
add
arpl
mov
rdtsc
sub
not
cmp
jl
jmp
call
aaa
in
test
xchg
and
add
add
pop
not
stc
jb
add
sbb
pop
not
stc
jb
add
inc
test
or
add
test
sbb
aas
stos
call
add
add
add
je
inc
and
adc
push
repz
call
lods
xchg
mov
je
and
add
add
inc
and
adc
call
add
add
inc
and
adc
push
add
call
bound
xor
jb
jmp
dec
mov
rolb
add
adc
mov
jne
mov
call
cli
call
dec
addl
addl
ret
sbb
add
je
scas
shl
les
push
add
add
mov
lods
fcmove
and
add
add
call
add
addl
addl
ret
inc
call
cmp
add
add
dec
addl
addl
ret
pusha
repz
call
inc
test
ror
popf
push
add
push
pop
add
call
popf
cld
xchg
pop
in
bound
add
add
pop
call
sub
inc
and
adc
mov
sub
add
les
inc
or
add
add
add
add
int
add
push
test
and
fadds
add
rolb
add
scas
inc
mov
jns
inc
or
add
add
cmp
add
addl
ret
or
pop
insb
add
add
push
pop
add
call
cmc
addl
push
pop
push
pop
add
call
mov
lea
fcmovb
push
lahf
push
add
jmp
or
call
sub
xor
add
add
jae
add
add
sbb
inc
and
adc
mov
or
jmp
gs
pop
add
call
fidivl
mov
push
inc
movb
iret
bswap
push
pop
add
call
push
aam
xor
mov
rdtsc
sub
not
cmp
jg
repz
call
mov
mov
add
add
call
sub
inc
and
adc
sbb
rdtsc
xor
pop
xor
pop
push
pop
add
call
or
dec
xchg
bswap
bswap
jmp
repnz
call
pop
out
xchg
inc
dec
pusha
xlat
jmp
or
mov
and
addb
jmp
dec
jo
add
call
and
push
cmp
add
add
call
add
addl
addl
ret
orb
mov
rdtsc
sub
not
cmp
jg
repz
call
cmp
cld
scas
jmp
inc
sub
lock
pop
add
jmp
pop
decl
or
or
rol
inc
inc
add
add
jmp
inc
add
add
call
push
pop
loop
call
push
call
cwtl
addl
addl
ret
or
or
add
imul
pop
push
pop
repz
call
sti
lock
dec
xor
add
add
repz
call
cltd
mov
adc
rdtsc
sub
not
cmp
jg
push
pop
repz
call
int
mov
stos
leave
adc
call
dec
call
mov
adc
pusha
jmp
mov
jmp
in
lock
pop
add
call
inc
xchg
outsb
sbb
ret
jmp
in
xchg
rolb
rol
rolb
les
cmp
ljmp
mov
bound
das
mov
add
add
add
or
inc
and
adc
xor
or
add
mov
xchg
daa
daa
shr
add
add
dec
call
adc
inc
and
adc
cwtl
rdtsc
mov
rdtsc
sub
not
cmp
jg
bswap
bswap
add
call
mov
mov
dec
stos
jmp
lahf
or
hlt
mov
add
push
pop
repz
call
mov
test
fimull
add
add
add
add
cmp
addl
ret
call
jmp
adc
les
jecxz
add
subl
test
pop
xchg
add
add
adc
add
add
adc
addl
ret
sub
add
add
add
adc
rolb
add
add
mov
jge
pop
fsubrp
or
add
out
dec
xor
inc
addb
repz
call
cmp
xchg
fs
push
call
or
add
addl
addl
ret
pusha
push
add
add
call
das
out
lea
stc
lea
int
add
add
call
ss
lea
pop
lcall
rdtsc
sub
not
cmp
jg
repz
call
add
xor
add
add
jnp
add
add
mov
adc
add
add
and
xor
repz
call
pop
ret
test
dec
shrl
add
call
mov
and
imulb
sbb
add
jmp
repz
bswap
add
call
push
sbb
daa
call
mov
add
add
in
addl
addl
ret
hlt
push
push
rdtsc
xor
pop
xor
pop
add
call
jbe
mov
sbb
pop
repz
call
mov
xchg
pusha
nop
imul
add
add
add
addl
addl
ret
js
scas
shl
les
cmp
add
movsb
or
aad
add
add
jge
add
add
movsb
addl
addl
ret
and
push
rdtsc
xor
pop
xor
pop
repz
call
sub
mov
popf
push
pop
jmp
cmp
test
add
xchg
or
add
or
aad
add
add
add
add
add
rolb
addl
ret
mov
add
push
pop
add
call
pusha
js
xor
add
add
cmpsb
call
cmp
addl
ret
add
or
loopne
add
add
add
add
repz
call
mov
xchg
insl
inc
jae
iret
bswap
xadd
add
call
cmp
setns
add
add
call
rolb
addl
ret
mov
add
les
mov
jmp
xlat
mov
sbb
add
add
add
add
in
addl
addl
ret
mov
push
rdtsc
xor
pop
xor
pop
push
add
repz
call
movsb
lret
mov
add
mov
rol
add
call
xor
inc
mov
add
add
add
add
je
inc
and
adc
je
add
scas
shl
les
mov
in
xchg
shr
jne
add
add
mov
add
add
sbb
inc
and
adc
push
jmp
addb
add
bswap
bswap
repz
call
xor
ss
jmp
jp
test
inc
addb
add
push
add
sbb
test
test
or
call
mov
add
add
js
inc
and
adc
lock
sbb
pop
add
call
mov
or
add
add
out
add
add
cmp
addl
ret
mov
pop
jo
adc
je
jmp
shrl
push
pop
add
call
fiaddl
xor
mov
add
or
add
add
call
jnp
mov
int
add
call
shr
add
add
inc
addl
addl
ret
shr
xchg
clc
addb
add
call
mov
test
out
adc
call
call
mov
adc
loopne
add
add
push
call
mov
adc
push
push
pop
call
cltd
and
fsubr
or
add
or
addb
add
call
pop
lea
shl
lods
fsubr
add
add
cmp
add
add
pusha
addl
addl
ret
and
or
sbb
test
xor
les
sub
ljmp
mov
add
call
loope
test
ja
lods
sub
or
add
mov
add
add
add
pop
repz
call
sbb
xchg
mov
call
mov
add
addl
ret
xchg
jmp
aad
or
rcl
mov
add
push
pop
add
call
lcall
int
pop
repz
call
sti
jnp
sbb
xor
enter
stc
add
add
jg
repz
call
cs
mov
mov
add
add
pop
call
or
inc
and
adc
sbb
xor
enter
stc
add
add
jg
add
call
out
jnp
xor
xchg
push
shr
frstor
les
test
add
test
cmc
in
call
out
call
dec
addl
addl
ret
mov
add
les
xchg
decl
pop
mov
sbb
stos
xlat
call
and
add
add
push
adc
push
rdtsc
sub
not
cmp
jg
repz
call
in
test
shll
xor
add
repz
call
mov
mov
add
add
add
inc
and
adc
loopne
add
fs
call
inc
xchg
and
enter
add
add
add
and
adc
mov
add
add
aad
add
add
test
addl
ret
rorb
rolb
add
pop
bound
mov
iret
bswap
push
pop
add
call
inc
movsb
test
outsb
sbb
add
dec
call
cld
addl
addl
ret
jo
sub
les
pushf
pop
add
sbb
mov
test
add
mov
aas
lea
imul
iret
push
pop
repz
call
push
scas
lea
xor
add
add
mov
add
addl
ret
mov
ret
add
les
mov
add
sub
push
repz
call
divb
stc
loop
push
rdtsc
xor
pop
xor
pop
jmp
add
add
call
inc
fimuls
popa
call
in
call
lock
addl
ret
shr
addr16
pop
repz
call
or
jp
push
pop
add
call
push
jno
xor
inc
out
jmp
pop
push
addb
add
add
add
push
pop
add
call
in
cmp
add
add
add
inc
and
adc
movsb
jmp
dec
mov
add
add
add
add
call
arpl
xor
mov
call
pop
jl
xor
jnp
imul
or
inc
inc
inc
addb
add
bt
add
call
cmp
pop
mov
add
call
cld
addl
addl
ret
adc
push
rdtsc
xor
pop
xor
pop
bswap
bswap
repz
call
repz
mov
xchg
pusha
adc
add
add
call
lods
inc
mov
je
jmp
push
add
jmp
popf
and
orb
rolb
fsubrs
push
add
add
out
add
add
lods
addl
addl
ret
sbb
or
push
addb
es
call
inc
stc
mov
pop
fnstcw
fs
pop
jmp
ds
call
pushf
rorb
call
dec
cld
js
addb
pop
repz
call
movb
dec
cmp
sub
add
add
in
add
add
les
addl
ret
call
sbb
and
bswap
bswap
add
call
test
mov
xor
leave
cltd
push
push
rdtsc
xor
pop
xor
pop
push
pop
add
call
jae
xchg
adc
add
add
pop
call
mov
inc
and
adc
add
add
call
lahf
adc
xor
pop
jmp
add
xchg
call
clc
addl
addl
ret
push
push
push
rdtsc
xor
pop
xor
pop
push
add
add
call
cli
rorb
bswap
bswap
push
pop
rol
ror
repz
call
mov
test
sbbl
add
iret
call
int3
addl
addl
ret
sbb
add
les
data16
add
mov
xor
sub
add
psubsb
add
add
addl
addl
ret
pop
call
push
add
add
or
addl
ret
mov
add
in
std
call
mov
clc
pusha
loopne
pusha
and
add
add
add
call
jge
mov
jnp
js
call
push
call
pop
addl
addl
ret
clc
bt
repz
call
lods
mov
insl
xor
add
add
out
add
add
lods
addl
addl
ret
jo
add
add
cmp
add
add
aam
inc
and
adc
cmp
rol
les
shl
ljmp
mov
jl
jmp
add
dec
rolb
add
add
add
add
repz
lcall
sub
add
add
add
inc
and
adc
movsb
jmp
fdivl
call
cmp
xor
les
div
jmp
test
push
adcb
add
je
sbb
call
add
iret
bswap
repz
call
imul
iret
call
sub
add
add
addl
addl
ret
add
add
pop
repz
call
lds
mov
add
mov
dec
xchg
or
shr
add
add
outsb
call
fadds
addl
ret
push
cwtl
add
add
mov
int3
aaa
jnp
call
insl
call
addl
addl
ret
lods
push
push
rdtsc
xor
pop
xor
pop
xadd
add
call
sbb
xor
fwait
rcll
les
sahf
out
incl
sub
fsubr
add
add
cmpsl
call
lods
addl
addl
ret
inc
repz
call
scas
rorl
call
jnp
add
add
mov
adc
mov
pusha
pusha
mov
add
repz
call
xchg
mov
mov
add
call
aam
xchg
or
mov
call
lcall
addl
addl
ret
add
add
call
pop
dec
xchg
repnz
insl
cli
call
add
add
and
adc
mov
or
sub
add
add
add
call
mov
dec
iret
popa
push
add
push
pop
add
call
cmp
call
mov
add
addl
ret
sbb
pop
repz
call
cmp
xor
push
inc
call
cmp
add
addl
ret
js
or
inc
repz
call
out
mov
sub
mov
xor
enter
pop
repz
call
out
sub
out
add
add
call
add
addl
addl
ret
loopne
add
mov
add
add
les
pop
hlt
call
mov
cmp
jo
call
adc
add
add
inc
addl
addl
ret
sub
add
add
mov
jo
rolb
add
call
fcmovu
mov
push
pop
or
jmp
mov
add
dec
lods
add
out
call
sahf
cmp
add
add
addr16
lods
addl
addl
ret
mov
add
rolb
decl
out
adc
add
add
add
add
add
rolb
addl
ret
sub
add
add
add
add
clc
addl
addl
ret
mov
add
call
cmc
and
jnp
push
rdtsc
xor
pop
xor
pop
push
pop
add
call
stc
mov
lahf
icebp
mov
call
test
add
add
inc
addl
addl
ret
in
push
add
bswap
bswap
add
call
cmp
xor
inc
lock
call
jmp
icebp
std
pop
pushf
mov
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jg
stc
stc
jb
add
push
fs
xchg
outsb
not
stc
jb
add
aaa
xchg
sub
xor
enter
stc
add
add
jl
jmp
rol
ror
stc
stc
jb
add
cmpsl
shrl
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jg
not
stc
jb
add
dec
dec
popf
adc
or
mov
addb
add
jb
add
int3
lret
jbe
xor
enter
stc
add
add
jl
jmp
push
add
stc
jb
add
inc
out
mov
xor
enter
stc
add
add
jl
jmp
call
lret
cld
mov
add
add
pop
jmp
gs
stc
jb
add
fs
pop
jmp
cmp
popa
pop
or
pop
stc
jb
add
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
not
stc
jb
add
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
xadd
jmp
inc
not
jmp
pop
and
mov
add
add
rolb
call
stc
jb
add
dec
sub
std
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
push
pop
stc
jb
add
mov
mov
rdtsc
sub
not
cmp
jl
jmp
push
push
rdtsc
xor
pop
xor
pop
jmp
xchg
sbb
jb
add
or
jp
rol
ror
jmp
dec
adc
stc
jb
add
push
ljmp
call
inc
clc
push
call
test
jne
mov
push
call
cmpb
je
mov
mov
call
jmp
mov
call
cmpb
jne
mov
cmpl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
ret
add
decl
add
add
cmc
in
loope
div
in
int
idiv
out
add
call
add
add
cmc
in
out
out
stc
in
leave
call
in
add
add
decl
add
add
cld
loop
out
sar
hlt
cld
into
repnz
clc
add
incl
add
add
add
add
in
add
xor
mov
mov
xor
push
push
pushl
mov
movb
lea
mov
mov
call
mov
call
push
call
mov
cmpl
je
lea
mov
mov
call
mov
call
push
mov
push
call
mov
cmpl
je
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
decl
add
in
jecxz
idiv
cmpsb
movsb
mov
add
add
call
add
add
jecxz
div
loope
icebp
repnz
jmp
add
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
push
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
mov
push
mov
push
call
mov
mov
push
call
mov
cmpl
je
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
add
decl
stc
push
shl
stc
loop
cli
fiaddl
add
decl
add
add
stc
jmp
cld
repnz
repz
in
call
decl
add
ret
push
test
out
loop
cli
incl
add
add
decl
add
ret
push
stc
shl
stc
loop
cli
incl
add
add
decl
add
leave
loop
test
ljmp
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
push
push
call
mov
cmpl
je
movl
lea
push
mov
push
call
test
je
jmp
lea
lea
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
push
push
push
call
mov
cmpl
je
xor
push
push
pushl
mov
lea
mov
call
push
mov
call
push
push
mov
push
call
test
jbe
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
mov
push
call
jmp
stos
sbb
adc
movsl
push
call
aas
call
mov
addl
ret
cld
jmp
in
loopne
rolb
add
add
adc
add
scas
das
adc
pop
add
call
xorl
ret
add
add
call
jl
inc
and
adc
mov
add
call
mov
mov
aas
call
sub
add
add
xchg
addl
addl
ret
sub
or
mov
add
add
repz
call
fiadds
sub
jb
fdivs
ret
add
es
add
call
pslld
mov
add
add
psubsb
add
add
addl
addl
ret
mov
pop
add
call
dec
push
xor
aam
pushf
lret
add
add
add
addl
ret
fs
push
inc
rolb
add
add
add
push
pop
add
call
sahf
lds
adc
pop
push
pop
bswap
bswap
push
pop
add
call
imul
call
add
call
xor
inc
and
adc
aam
add
addb
jmp
insb
add
call
lods
push
adc
xchg
das
pop
call
mov
add
add
jo
inc
and
adc
add
or
push
xchg
sbb
pop
push
pop
repz
call
sbbl
call
add
add
cmp
add
sub
adc
add
add
mov
add
addl
ret
js
push
rdtsc
xor
pop
xor
pop
add
call
es
xor
ljmp
add
imul
add
add
in
addl
addl
ret
pushf
call
inc
call
add
addl
ret
add
or
add
push
adc
xchg
xor
enter
pop
push
pop
add
call
stos
xor
sbb
add
add
enter
add
mov
adc
and
mov
add
add
les
inc
or
add
mov
pop
call
leave
call
adc
inc
and
adc
sub
add
add
sbb
add
add
cmp
inc
and
adc
lock
call
icebp
mov
cld
pop
jmp
scas
fdivs
and
addb
les
stos
add
add
pusha
bound
add
add
add
rolb
addl
ret
pusha
jmp
mov
add
addb
add
call
sub
aaa
cli
mov
add
add
mov
add
inc
and
adc
inc
call
call
sub
inc
and
adc
cmp
add
call
icebp
ljmp
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
jne
sub
ret
xor
add
add
push
addl
addl
ret
adc
aam
add
bswap
repz
call
mov
xor
call
push
call
pop
addl
addl
ret
sbb
add
add
pusha
call
addb
add
or
sub
and
pop
add
and
adc
ret
lods
pop
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
xor
xor
push
faddp
xchg
call
push
call
adc
addl
ret
inc
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
and
sub
loopne
and
lea
add
xchg
sbb
adc
aam
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
push
pop
add
call
mov
adc
cmpsb
xchg
mov
add
add
pop
call
insb
addl
addl
ret
fsubr
or
add
xorl
add
add
iret
bswap
add
call
movsb
jns
adc
les
jle
pushl
rorb
add
add
and
add
add
push
adc
cmp
or
add
stc
xor
and
add
add
cwtl
call
loopne
inc
and
adc
mov
rdtsc
sub
not
cmp
jg
bswap
bswap
add
call
inc
mov
adc
mov
clc
add
add
add
call
push
pop
mov
call
sub
add
add
and
addl
ret
mov
call
adc
das
adc
add
call
jbe
add
add
js
inc
and
adc
sub
add
add
add
addl
ret
pop
add
call
cmp
xor
fs
adc
push
add
repz
call
xchg
adc
jmp
call
mov
add
addl
ret
hlt
push
add
add
call
pop
adc
inc
adc
add
add
adc
add
add
inc
addl
addl
ret
shr
add
add
add
add
push
adc
test
add
call
cli
mov
and
push
add
push
pop
add
call
xchg
cld
xor
cmc
orl
add
es
cmp
addl
ret
add
push
add
add
call
or
jl
mov
add
call
or
das
adc
xchg
stos
push
push
rdtsc
xor
pop
xor
pop
repz
call
mov
das
adc
dec
mov
add
in
add
add
push
addl
addl
ret
mov
add
add
call
jg
adc
mov
stos
bswap
bswap
repz
call
loop
xor
into
and
xchg
add
xor
add
bswap
bswap
add
call
push
inc
sub
jp
mov
call
arpl
add
add
faddl
addl
ret
mov
xor
pop
xor
pop
repz
call
push
jb
adc
cs
jl
add
call
jl
xor
and
mov
enter
enter
stc
add
add
jg
repz
call
inc
sub
test
add
add
sub
add
add
and
addl
ret
mov
add
lock
add
mov
mov
iret
push
pop
repz
call
and
xor
cmp
push
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
aad
sub
arpl
xor
call
mov
add
inc
and
adc
mov
rdtsc
sub
not
cmp
jg
repz
call
mov
mov
insb
add
add
add
call
cld
pop
sub
movsb
mov
adc
or
addb
add
jmp
je
inc
incl
cli
incl
add
add
pop
call
mov
inc
and
adc
xchg
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
add
add
push
pushf
add
add
repz
call
cs
xor
mov
xor
enter
stc
add
add
jg
jmp
mov
add
call
xchg
sub
test
add
add
insl
call
addl
addl
ret
xor
xor
enter
stc
add
add
jg
push
pop
repz
jmp
aaa
insl
xor
mov
sub
push
add
push
add
add
call
inc
call
pop
lret
call
xor
add
add
sbb
inc
and
adc
xchg
add
call
push
mov
inc
pop
call
sbb
add
add
cmp
inc
and
adc
insb
jmp
fs
xor
add
scas
shr
int3
repz
call
loopne
das
adc
or
fcoms
loopne
addb
add
add
push
pop
add
call
mov
cli
push
add
add
aaa
call
in
addl
addl
ret
xchg
jmp
outsl
dec
rolb
push
push
xor
adc
mov
call
xor
add
add
rolb
add
or
sub
add
add
add
addl
addl
ret
and
in
fsubrs
adc
xor
enter
stc
add
add
jg
add
call
push
inc
xor
mov
fadd
call
add
add
and
adc
push
add
add
pop
idiv
fiaddl
adc
mov
pop
add
call
and
sub
in
jbe
call
cmc
add
pusha
mov
inc
add
pop
add
call
rcrl
rcrl
call
stos
call
or
addl
ret
sbb
ret
add
add
les
sbb
mov
push
aad
rol
add
call
mov
xor
enter
enter
stc
add
add
jg
push
pop
add
call
pop
xchg
cs
ja
xor
add
add
dec
call
int3
addl
addl
ret
insb
rol
ror
jmp
push
repz
call
aas
imul
stos
push
pop
push
pop
add
call
pop
jp
adc
mov
add
add
add
add
cmp
inc
and
adc
and
add
repz
call
mov
sub
daa
mov
add
add
add
add
dec
addl
addl
ret
or
mov
add
add
add
call
out
sub
sub
in
jmp
pop
or
push
mov
add
adc
sub
jo
push
das
call
call
rolb
addl
ret
jo
add
call
push
xor
push
test
add
add
call
push
addl
addl
ret
shr
or
add
imul
movsb
push
add
add
add
add
add
call
or
adc
add
inc
cmp
repz
call
dec
jns
adc
add
add
ret
add
add
addl
addl
ret
rol
add
les
outsl
cli
incl
inc
mov
add
callw
add
cmp
addl
ret
push
call
mov
lock
inc
add
add
pop
add
call
aam
sub
or
or
add
add
lods
add
add
subb
icebp
push
lods
call
mov
add
add
test
inc
and
adc
pusha
push
pop
repz
repz
call
fwait
test
adc
add
add
fwait
call
cmp
inc
and
adc
dec
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
add
xor
add
and
or
push
addb
add
jl
sub
and
daa
call
dec
call
pop
addl
addl
ret
mov
scas
rclb
les
cmpsb
add
sub
test
add
add
adc
orb
mov
rdtsc
sub
not
cmp
jg
imul
add
call
cld
mov
shr
or
mov
rolb
add
add
repz
call
xor
imul
add
add
sub
inc
and
adc
insb
jmp
in
cmp
add
add
add
add
add
add
xor
orb
or
add
add
in
call
addl
addl
ret
adc
or
and
pusha
inc
rolb
add
pop
imul
repz
call
mov
adc
or
mov
rolb
add
add
push
pop
add
call
jnp
sub
int
jge
call
xchg
call
sub
addl
ret
inc
call
xor
mov
add
add
pop
push
pop
call
and
adc
dec
xchg
dec
push
pop
add
call
pop
xor
aas
inc
sbb
xor
enter
stc
add
add
jg
add
call
xlat
xor
adc
fwait
mov
add
call
clc
addl
addl
ret
push
jmp
scas
fsubrs
inc
add
add
call
and
dec
shr
lret
add
push
idiv
jmp
xor
stos
xor
mov
rdtsc
sub
not
cmp
jg
repz
call
push
dec
sub
xchg
jg
call
add
add
add
call
adc
mov
add
fcomi
bswap
bswap
push
pop
add
call
jp
xor
jbe
mov
repz
call
adc
xor
int3
sub
add
add
cli
call
dec
addl
addl
ret
push
les
push
add
add
callw
add
add
popa
call
hlt
addl
addl
ret
cmp
or
add
loope
mov
mov
add
pop
push
pop
add
call
jno
sub
adc
iret
bswap
repz
call
xchg
cmp
adc
stos
call
sub
je
inc
and
adc
inc
bswap
bswap
add
call
lret
ret
std
mov
add
add
call
call
adc
pop
call
es
cmp
addl
ret
clc
push
pop
add
call
ljmp
jle
add
mov
les
push
dec
sub
push
fists
test
add
add
pop
call
insb
addl
addl
ret
call
pop
add
call
or
out
add
call
adc
adc
add
add
call
nop
dec
sub
lock
add
add
add
add
addl
addl
ret
adc
ret
add
les
sub
jg
adc
xchg
aas
inc
repz
call
fdivrp
das
adc
cld
jle
or
lods
adc
pusha
loopne
add
add
repz
call
sbb
adc
adc
pop
call
call
mov
addl
ret
add
add
add
call
lds
jp
pop
add
call
add
and
jmp
aaa
in
push
mov
add
add
add
call
inc
loopne
adc
xor
xor
add
call
or
inc
and
adc
jo
iret
bswap
jmp
rolb
scas
shrb
add
call
jb
xor
mov
pop
repz
call
adc
push
rdtsc
xor
pop
xor
pop
bswap
bswap
push
pop
add
call
cmp
sub
lods
call
bnd
test
inc
and
adc
shr
or
addb
add
add
add
add
call
addr16
adc
pop
push
pop
add
call
xchg
in
adc
int3
in
or
add
mov
rol
rol
add
add
les
das
idiv
pushl
xchg
adc
mov
add
add
call
enter
add
addl
ret
or
or
test
and
add
add
call
sub
cmc
push
push
rdtsc
xor
pop
xor
pop
repz
call
pop
pop
sub
xchg
popa
dec
pop
call
sahf
cwtl
lock
addb
repz
call
inc
cwtl
sub
lds
je
call
shr
add
add
pushf
addl
addl
ret
sub
or
jl
insb
and
rol
addb
bswap
bswap
add
call
ss
adc
xchg
push
push
rdtsc
xor
pop
xor
pop
push
pop
add
call
xchg
jbe
adc
xlat
push
call
fucomp
add
add
and
inc
and
adc
mov
add
std
jmp
sub
adc
dec
mov
add
dec
call
in
inc
and
adc
and
or
add
jb
js
cmp
rolb
add
add
call
xchg
repz
push
add
jmp
mov
push
ret
jle
mov
iret
bswap
mov
jmp
mov
push
ret
fimull
push
rdtsc
mov
rdtsc
sub
not
cmp
jg
jmp
sub
movsb
jmp
ret
mov
jmp
loopne
push
ret
and
mov
or
add
aad
cmp
sbb
rol
addb
jmp
cmpsb
sahf
push
ret
push
divl
add
and
add
iret
lea
dec
pushf
call
xor
pop
xor
pop
mov
jmp
std
mov
mov
add
add
jmp
fdivl
add
xor
enter
stc
add
add
jg
mov
jmp
call
enter
add
or
add
clc
mov
pop
ret
mov
rdtsc
sub
not
cmp
jg
inc
jmp
js
push
ret
enter
push
push
rdtsc
xor
pop
xor
pop
inc
jmp
sbb
mov
push
add
jmp
in
pop
jmp
sbb
mov
mov
jmp
mov
push
ret
aad
cli
imul
or
movsb
pop
in
mov
sub
lock
lret
add
and
fnstsw
jae
jmp
mov
call
ret
mov
nop
lods
jmp
and
jo
mov
add
add
mov
jmp
xchg
xchg
push
ret
mov
add
mov
jmp
or
int
jmp
call
inc
jmp
mov
ret
dec
inc
into
mov
add
cld
je
mov
jmp
in
push
add
mov
push
push
rdtsc
xor
pop
xor
pop
jmp
shrb
fwait
push
jmp
jmp
mov
cmpl
jne
lea
push
mov
push
call
test
jne
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
call
ret
jmp
jmp
mov
pop
ret
mov
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
movb
lea
push
lea
push
push
push
push
push
push
lea
mov
mov
call
mov
call
push
push
call
test
jne
movl
lea
push
lea
push
lea
push
push
mov
call
push
mov
push
call
test
jne
lea
lea
call
mov
mov
call
jne
movb
mov
push
call
jmp
mov
call
push
mov
call
push
push
push
mov
call
push
mov
push
call
test
jne
movb
mov
push
call
cmpb
jne
lea
push
lea
push
push
push
push
push
push
lea
mov
mov
call
mov
call
push
push
call
test
jne
movl
lea
push
lea
push
lea
push
push
mov
call
push
mov
push
call
test
jne
lea
lea
call
mov
mov
call
jne
movb
mov
push
call
jmp
mov
call
push
mov
call
push
push
push
mov
call
push
mov
push
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
mov
pop
ret
add
add
decl
add
add
cmc
not
loope
hlt
loop
sar
jecxz
in
add
decl
add
add
cmc
test
loopne
idiv
in
cld
fldl
add
call
add
add
mov
ror
enter
out
cld
repz
aam
add
in
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
jmp
xor
and
call
daa
call
lods
addl
addl
ret
sbb
lahf
or
add
rolb
add
addb
addb
iret
push
pop
add
call
imul
jmp
push
bswap
bswap
bswap
bswap
repz
call
push
push
mov
fiadds
add
add
call
lods
addl
addl
ret
xchg
push
add
xadd
repz
call
bound
mov
mov
les
in
add
push
mov
and
or
push
mov
rolb
add
add
jmp
xchg
mov
add
call
add
mov
add
add
add
stc
call
aam
inc
and
adc
enter
cmp
add
add
add
call
or
mov
xor
or
add
add
jno
add
in
lds
ret
mov
rdtsc
sub
not
cmp
jg
xadd
add
call
in
in
mov
pop
call
mov
add
add
xchg
addl
addl
ret
pop
jmp
adc
js
pop
call
jmp
aas
push
pop
add
call
adc
mov
ds
add
repz
call
lods
test
ja
call
sti
mov
add
add
add
mov
les
jmp
or
cmpsl
icebp
call
enter
add
mov
adc
and
or
add
sbb
addb
add
add
add
add
call
out
mov
sbbl
pop
xor
pop
add
call
ret
and
call
imul
add
add
js
inc
and
adc
sub
incl
mov
call
sub
add
add
lock
addl
ret
and
xor
enter
stc
add
add
jg
bswap
bswap
add
call
add
mov
enter
insb
fmuls
push
pop
add
call
inc
dec
mov
outsb
call
ret
call
pop
addl
addl
ret
fdiv
add
call
in
mov
call
pop
call
cmp
inc
and
adc
or
add
add
mov
add
addl
ret
rolb
add
and
cltd
outsl
jno
or
xor
rolb
add
add
imul
add
call
mov
mov
call
inc
call
inc
addl
addl
ret
inc
push
add
add
call
or
mov
scas
call
mov
add
adc
sub
add
add
call
xchg
addl
addl
ret
xor
add
call
orl
orb
mov
rdtsc
sub
not
cmp
jg
repz
call
data16
call
push
call
test
addl
ret
les
jo
add
les
decb
add
mov
push
pop
repz
call
test
mov
imul
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
gs
and
call
dec
call
adc
inc
and
adc
test
push
rdtsc
xor
pop
xor
pop
add
call
idivl
push
mov
pop
push
pop
add
call
fsubr
or
add
cmp
add
add
pop
push
pop
push
pop
add
call
and
inc
sub
add
add
das
call
dec
addl
addl
ret
pop
jmp
jmp
pop
xchg
bswap
bswap
repz
call
xchg
mov
mov
bswap
push
pop
add
call
lea
lret
add
add
or
add
add
mov
addl
ret
mov
repz
call
push
pop
mov
or
mov
call
psubsb
add
add
addl
addl
ret
mov
rdtsc
xor
pop
xor
pop
push
pop
add
call
sbb
mov
jg
into
inc
jmp
movsl
fdivrl
add
call
data16
mov
cwtl
call
imul
xchg
addl
addl
ret
or
add
inc
push
pop
add
call
test
fsub
cmp
call
popf
call
and
inc
and
adc
mov
xor
enter
stc
add
add
jg
repz
call
imull
and
jmp
shlb
push
push
pop
add
call
push
pop
mov
jp
jo
call
dec
call
mov
addl
ret
mov
clc
lock
call
frstor
out
call
daa
call
lods
addl
addl
ret
in
or
add
imul
pop
bt
add
call
fdivrs
and
jmp
xor
pusha
jmp
sub
mov
mov
ss
or
add
add
jo
inc
and
adc
orb
bswap
jmp
test
add
call
mov
mov
add
add
add
or
inc
and
adc
js
or
add
sbb
mov
add
add
add
adc
std
fprem1
mov
or
or
addb
add
add
add
jmp
xchg
add
call
scas
pop
mov
jl
add
add
inc
call
call
adc
or
adc
add
rolb
lock
add
pop
mov
mov
add
add
ds
sbb
addl
ret
push
rdtsc
mov
rdtsc
sub
not
cmp
jg
jmp
lods
lock
call
push
mov
and
jmp
mov
mov
and
inc
inc
inc
adcb
les
stos
or
add
and
call
inc
call
inc
addl
addl
ret
lods
jmp
clc
pusha
rolb
add
add
repz
call
mov
and
call
addr16
lods
addl
addl
ret
pushf
call
sahf
call
cwtl
addl
addl
ret
test
les
mov
iret
and
or
add
inc
je
mov
rolb
repz
call
push
sbb
fucomi
add
add
jmp
add
add
jl
inc
and
adc
sub
in
lock
rolb
add
add
rol
add
call
leave
pop
mov
dec
shll
jmp
aam
les
hlt
std
call
mov
in
rdtsc
mov
rdtsc
sub
not
cmp
jg
repz
call
cmp
mov
lret
add
add
call
and
inc
and
adc
lods
call
mov
xchg
mov
xor
add
add
call
shr
mov
sbb
iret
bswap
add
call
jmp
fldt
push
push
push
rdtsc
xor
pop
xor
pop
push
push
rdtsc
xor
pop
xor
pop
add
call
adc
mov
jo
test
call
sub
add
add
jl
inc
and
adc
shr
mov
inc
inc
add
add
add
imul
repz
call
mov
xchg
repz
call
jo
mov
callw
add
hlt
call
xchg
addl
addl
ret
insl
jmp
xchg
repz
call
xor
mov
lods
sub
call
es
cmp
addl
ret
test
xor
enter
stc
add
add
jg
push
pop
add
call
dec
repnz
jmp
mov
les
mov
jmp
mov
jecxz
add
add
mov
add
addl
addl
ret
hlt
jmp
pop
push
pop
add
call
mov
mov
mov
add
add
cld
test
add
repz
call
pushf
mov
jne
call
add
add
and
adc
dec
jmp
arpl
js
add
call
out
mov
sub
les
pop
idiv
incl
mov
push
ret
add
pop
add
call
loope
mov
ja
cmpsl
push
call
aas
call
mov
addl
ret
jo
add
jo
rol
les
inc
pop
add
xchg
nop
mov
cmc
int
mov
add
call
and
mov
sbb
push
inc
inc
inc
inc
addb
les
mov
add
sub
mov
popf
addr16
dec
call
daa
call
lods
addl
addl
ret
clc
jmp
repnz
push
push
pop
add
call
inc
sarb
push
pop
add
call
adc
push
cmc
add
lock
xor
mov
add
call
int
mov
scas
call
and
add
add
push
addl
addl
ret
and
or
push
mov
fsubs
inc
adcb
les
xchg
jmp
mov
dec
lret
jmp
lods
fs
call
mov
ljmp
add
add
add
call
repnz
addr16
jmp
add
addl
ret
cmp
push
rdtsc
xor
pop
xor
pop
jmp
mov
les
cmp
pushl
mov
jecxz
rol
pop
add
call
sub
and
jmp
jl
lock
add
add
add
daa
hlt
decl
mov
lods
call
call
sub
inc
and
adc
inc
jmp
adc
rol
inc
inc
addb
pop
add
call
and
mov
mov
lods
rclb
rdtsc
xor
pop
xor
pop
push
pop
add
call
test
stc
das
rdtsc
mov
rdtsc
sub
not
cmp
jg
repz
jmp
add
sub
add
add
add
sbb
addl
ret
xchg
rdtsc
mov
rdtsc
sub
not
cmp
jg
add
call
or
sbb
add
ret
add
add
call
pop
adc
call
imul
xchg
addl
addl
ret
sub
rol
les
je
ljmp
fidivrs
sub
xlat
call
insb
addl
addl
ret
insb
call
test
adc
inc
rolb
addb
push
pop
add
call
mov
mov
dec
push
push
rdtsc
xor
pop
xor
pop
bt
repz
call
scas
inc
mov
stos
call
imul
add
add
in
addl
addl
ret
fsubr
add
repz
call
xchg
jecxz
and
call
int3
call
jo
inc
and
adc
mov
add
call
pop
addl
addl
ret
pusha
jmp
sti
add
call
rcrb
mov
pop
pop
cltd
inc
jmp
aas
mov
mov
add
push
pop
add
call
aaa
push
mov
mov
outsb
cmp
add
add
icebp
call
xor
inc
and
adc
mov
pop
add
call
jle
mov
sahf
add
call
xchg
adc
xor
push
add
push
add
add
call
addr16
mov
add
add
add
add
add
pop
addl
addl
ret
adc
add
in
pushf
cmp
les
jecxz
ljmp
imul
lcall
mov
add
xchg
add
add
sub
inc
and
adc
call
ds
add
mov
or
or
add
call
fadds
addl
ret
enter
call
les
jne
incl
mov
lcall
xchg
icebp
incl
subl
add
add
adc
xor
les
sbb
divb
ret
call
or
add
add
adc
inc
and
adc
pop
jmp
jle
test
shlb
addb
add
mov
push
mov
fsubr
add
add
call
pop
fidivrl
sub
add
add
xchg
add
add
mov
adc
cmp
add
call
and
mov
in
in
call
dec
call
adc
inc
and
adc
jl
or
add
std
lcall
in
enter
shl
les
arpl
cmp
and
call
fld1
add
add
push
addl
addl
ret
cwtl
push
pop
add
call
ret
xor
loop
add
add
jnp
add
add
mov
adc
mov
scas
rclb
add
add
call
gs
and
push
push
rdtsc
xor
pop
xor
pop
repz
call
push
xchg
mov
cmp
add
add
call
xchg
addl
addl
ret
and
aad
repz
call
ja
mov
jno
add
call
je
add
add
xchg
addl
addl
ret
jb
or
add
in
mov
push
and
add
call
sarl
mov
mov
pop
bound
iret
bswap
jmp
cmp
bswap
bswap
add
call
dec
cmp
jge
call
fucomi
add
add
cmp
inc
and
adc
add
add
repz
outsl
push
pop
add
call
insb
cmp
cmp
add
add
pop
call
enter
add
addl
ret
clc
call
insl
fs
inc
xor
loopne
add
add
add
call
fldcw
and
jmp
sub
jo
add
add
add
add
call
subb
sub
add
add
jo
add
add
rolb
add
or
adcb
xor
enter
pop
push
pop
add
call
push
std
mov
jecxz
xlat
jmp
add
add
shr
add
add
inc
addl
addl
ret
add
add
add
pop
call
sub
inc
and
adc
clc
push
pop
add
call
pushf
outsl
mov
push
or
dec
enter
inc
add
add
repz
call
mov
mov
or
add
add
out
call
dec
addl
addl
ret
dec
jmp
cmp
addb
les
ljmp
and
call
call
in
inc
and
adc
or
add
add
cli
call
dec
addl
addl
ret
sub
repz
call
push
imul
mov
cwtl
sub
loopne
pusha
add
call
push
mov
cld
lock
enter
add
mov
adc
and
rdtsc
xor
pop
xor
pop
jmp
dec
in
les
mov
jno
and
add
call
dec
pop
mov
push
call
jl
pusha
mov
rolb
push
pop
add
call
fistpll
mov
inc
call
mov
add
add
xor
inc
and
adc
xor
or
sub
call
add
add
call
add
in
jg
add
call
add
and
call
insl
call
addl
addl
ret
pop
add
call
inc
add
mov
add
add
mov
add
add
add
inc
and
adc
je
or
add
mov
adc
mov
inc
addb
add
iret
bswap
repz
call
cltd
test
jmp
adc
in
mov
xor
enter
stc
add
add
jg
mov
jmp
adc
daa
mov
push
push
rdtsc
xor
pop
xor
pop
mov
jmp
sub
mov
popf
or
inc
add
add
jmp
aad
mov
arpl
mov
jmp
fdivl
or
add
leave
mov
dec
shlb
mov
inc
jmp
dec
lret
sub
push
rolb
add
add
add
mov
jmp
sahf
shll
call
sub
jo
pusha
and
dec
mov
inc
jmp
mov
add
mov
xor
pop
xor
pop
mov
mov
jmp
mov
mov
xor
dec
rol
ror
jmp
add
cli
fldpi
or
aam
inc
cmp
xor
clc
mov
mov
mov
jmp
mov
out
in
or
add
test
add
add
add
pop
jmp
mov
mov
xor
aaa
rdtsc
mov
rdtsc
sub
not
cmp
jg
mov
jmp
cmpsb
shll
add
or
addb
add
add
add
inc
jmp
cmp
cmp
add
add
jmp
imul
shlb
dec
adc
add
push
pop
inc
jmp
popf
mov
ret
insb
cmp
add
add
mov
or
enter
enter
stc
add
add
jg
inc
jmp
loopne
mov
and
jge
or
add
sti
mov
fsubr
mov
pop
mov
jmp
cs
ret
pause
jmp
dec
mov
add
add
add
push
pushl
or
mov
jnp
push
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
sub
je
sub
jne
mov
and
cmp
jne
push
push
mov
push
call
push
push
push
mov
push
call
jmp
push
call
mov
push
mov
push
mov
push
mov
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
decl
add
add
cmc
in
cli
cli
icebp
stc
loopne
cld
loop
fldl
add
decl
add
loop
fdivp
out
idiv
cld
fildl
add
add
decl
add
add
jmp
out
loope
loop
std
ljmp
decl
add
add
cmc
test
loopne
jmp
clc
fldl
add
in
add
mov
mov
mov
call
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
call
mov
mov
pop
ret
lea
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
push
call
sub
mov
fildl
fdivs
call
mov
push
call
sub
mov
fildl
fdivs
call
mov
xor
mov
movl
xor
mov
xor
mov
mov
mov
push
push
call
mov
movl
xor
mov
mov
mov
push
call
mov
push
mov
push
push
push
push
push
mov
push
push
mov
mov
mov
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
mov
push
call
push
push
push
push
push
push
push
mov
push
push
mov
push
push
mov
mov
mov
call
push
call
jmp
push
call
push
call
push
push
push
push
call
test
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
call
add
add
cmc
in
ljmp
out
jmp
add
add
decl
add
add
cmc
idiv
loopne
lock
hlt
clc
jmp
decl
add
fdiv
push
fdivp
out
idiv
cld
fildl
add
add
decl
add
add
cmc
in
mul
out
lock
fadds
call
add
add
loop
cld
loopne
hlt
loop
aad
jmp
add
add
call
add
add
stc
loop
repnz
ljmp
add
add
decl
add
add
push
not
loope
in
ljmp
push
inc
xor
push
insb
gs
jae
and
je
jb
je
and
jb
arpl
popa
jae
ja
jb
and
outsl
jo
outsb
and
and
insb
add
add
add
inc
inc
dec
push
add
add
dec
dec
add
inc
push
push
push
dec
dec
add
push
mov
add
mov
mov
call
xor
push
push
pushl
mov
movl
movl
call
cmpl
je
mov
mov
call
je
mov
call
test
jle
mov
movl
mov
mov
mov
and
xor
add
adc
incl
decl
jne
jmp
push
push
mov
mov
call
mov
mov
cmpl
jne
cmpl
jb
jmp
jl
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
mov
mov
pop
ret
add
add
incl
add
add
add
add
in
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
pop
add
add
add
add
add
cwtl
sbb
add
je
add
inc
pop
add
fcompl
add
lods
pop
add
loopne
add
mov
add
mov
add
andb
adc
add
add
adc
in
mov
push
push
dec
jne
mov
call
xor
push
push
pushl
mov
call
test
je
push
call
call
test
je
push
call
call
test
je
push
call
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
mov
call
mov
cmpl
jne
push
call
mov
mov
mov
call
lea
mov
mov
call
cmpl
je
call
lea
mov
mov
call
mov
push
lea
mov
mov
call
mov
lea
mov
call
mov
pop
call
je
push
push
lea
mov
mov
call
mov
call
push
push
call
push
call
movb
cmpb
je
cmpb
je
cmpb
jne
lea
mov
mov
call
mov
call
test
je
movb
jmp
movb
cmpb
jne
call
cmp
je
call
cmp
je
call
cmp
je
call
cmp
jne
mov
add
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
push
call
cmpb
jne
call
test
jne
call
test
jne
call
test
jne
call
test
jne
cmpb
jne
mov
add
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
push
call
jmp
cmpb
je
mov
add
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
push
call
call
cmp
jne
cmpb
jne
push
call
call
cmp
jne
cmpb
jne
push
call
call
cmp
jne
cmpb
jne
push
call
call
cmp
jne
cmpb
jne
push
call
lea
call
cmpl
jne
cmpb
jne
push
call
cmpl
jne
cmpl
je
cmpb
jne
cmpb
je
imul
push
call
jmp
imul
push
call
movb
cmpb
je
push
call
mov
xor
mov
call
movw
movw
movw
push
call
test
je
movb
push
call
mov
call
call
test
jle
mov
movl
pushl
push
lea
mov
call
pushl
mov
mov
call
incl
decl
jne
call
test
jne
lea
mov
mov
call
cmpl
je
mov
mov
call
lea
mov
mov
call
mov
lea
mov
call
mov
mov
call
mov
call
cmpb
je
lea
mov
mov
call
cmpl
je
lea
mov
mov
call
mov
lea
mov
call
mov
lea
call
cmpl
je
lea
mov
mov
call
mov
lea
mov
call
mov
lea
call
mov
mov
call
jmp
lea
call
cmpl
je
lea
call
mov
mov
call
cmpl
jne
mov
xor
call
jmp
mov
xor
call
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
call
lea
mov
mov
call
cmpl
jne
cmpb
je
lea
mov
mov
call
mov
lea
call
mov
mov
call
jmp
lea
mov
mov
call
mov
mov
call
jmp
cmpb
je
lea
mov
mov
call
mov
lea
mov
call
mov
call
mov
lea
mov
call
mov
lea
call
mov
mov
call
jmp
lea
mov
mov
call
mov
lea
mov
call
mov
call
mov
lea
mov
call
mov
mov
call
cmpb
je
mov
push
mov
call
mov
mov
call
test
jne
mov
push
lea
xor
call
mov
push
mov
call
mov
pop
call
jmp
mov
push
mov
call
mov
mov
call
test
jne
mov
push
lea
xor
call
mov
push
mov
call
mov
pop
call
cmpb
jne
cmpb
jne
push
call
cmpb
jne
cmpb
jne
push
call
push
push
lea
mov
mov
call
pushl
lea
xor
call
pushl
push
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
call
push
push
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
call
add
add
decl
clc
hlt
call
in
repz
in
in
fiaddl
add
decl
cmc
in
ljmp
idiv
add
add
decl
cmc
in
ljmp
idiv
add
add
decl
add
add
cmc
loop
repnz
loopne
add
push
inc
add
add
inc
jb
outsl
jb
add
aas
add
add
clc
hlt
mov
cli
loope
in
std
mov
call
rol
aad
rol
lret
int3
les
xchg
lret
leave
fst
sahf
enter
jecxz
stos
mov
stos
movsl
movsl
mov
incl
add
add
add
add
dec
inc
dec
add
add
jmp
add
mov
out
mov
mov
mov
rolb
rcr
lea
xchg
nop
add
add
incl
add
add
add
add
incl
add
add
std
cmc
mov
dec
push
inc
dec
