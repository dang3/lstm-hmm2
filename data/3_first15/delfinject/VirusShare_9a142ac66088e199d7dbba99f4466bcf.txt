push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
cmp
inc
data16
dec
inc
cmp
xor
gs
mov
bound
arpl
pop
or
fs
das
incl
push
jns
je
insl
jmp
mov
pop
dec
mov
push
sbb
pop
inc
push
sbb
xor
sbb
sub
sbb
pusha
sbb
fs
inc
push
sbb
nop
inc
push
sbb
add
sahf
sbb
add
jo
jo
jo
nop
xchg
daa
lock
pop
jno
orl
in
pushf
cmp
enter
push
and
lahf
orl
jo
add
mov
fists
call
testb
je
movzwl
mov
sbb
inc
dec
sahf
cld
arpl
jo
jo
jb
in
les
jo
jo
in
xchg
hlt
mov
cmp
jne
push
jl
push
loopne
or
mov
rorb
adc
adc
mov
or
mov
add
mov
push
roll
push
and
mov
imul
testl
adc
clc
fs
mov
dec
adc
fstpt
pop
push
mov
lds
fucomi
mov
adc
lret
push
push
push
clc
mov
mov
jg
mov
outsl
add
xor
add
cmp
jbe
inc
addl
lea
and
push
pop
add
push
mov
jle
insl
imul
pop
adc
sub
add
ds
lea
dec
add
loopne
push
xor
in
mov
aaa
mov
mov
mov
inc
xor
jns
mov
das
add
cmp
jne
sbb
jge
fstpt
add
jmp
add
shlb
idivl
xchg
push
pop
mov
scas
mov
mov
testl
shl
pop
pop
pop
pop
lea
lcall
xchg
push
das
cmp
faddl
pop
outsl
jb
ds
mov
stc
add
fbstp
xchg
cmpsl
mov
add
loope
mov
sub
cmpl
push
pop
xchg
dec
xor
or
jmp
in
sti
xor
pop
fnstsw
mov
add
sub
mov
ja
or
enter
lea
push
lods
insl
rcrl
sbb
adc
adc
mov
cmp
test
add
mov
test
nop
ret
mov
inc
cmp
pop
mov
sti
jmp
add
sub
mov
push
push
pusha
or
je
mov
test
int3
jo
pushl
mov
and
ffreep
arpl
clc
sub
sbb
inc
call
jle
push
dec
push
fwait
sbb
jne
js
and
leave
adc
or
fistpl
call
call
insb
cld
stc
leave
mov
stos
adc
sub
mov
mov
es
mov
loope
rcrl
jb
int
fstl
jns
cmp
inc
adc
jae
fldt
push
insb
dec
jbe
xchg
adc
es
outsl
lcall
or
push
divl
cmp
jne
stos
pop
dec
xor
aad
mov
sbb
or
mov
mov
lea
lea
or
and
rcrb
ret
cmp
adc
or
aad
sub
jmp
arpl
movsb
pop
push
push
add
inc
lahf
sti
lcall
xor
adc
jbe
mov
sbb
adc
xchg
mov
adc
lock
jae
jge
shr
pop
faddl
jne
sarb
pop
ljmp
mov
ret
insb
mov
add
pop
sbb
mov
mov
adc
testb
and
and
fcomps
add
imul
imul
xchg
xchg
aas
rorb
inc
aas
jbe
cmp
jg
mov
cwtl
mov
pusha
push
sub
pop
mov
pop
add
in
pop
ja
xchg
inc
inc
mov
js,pt
das
jne
into
shr
add
cmp
lea
mov
xchg
adc
inc
ss
mov
jae
or
mov
mov
inc
addr16
fs
out
push
push
pushf
pop
ss
je,pn
jmp
pop
pop
pop
jecxz
lcall
sub
jnp
jne
int
add
jns
fwait
in
js
in
scas
xor
insl
or
mov
lret
outsb
or
sarb
inc
push
add
pusha
movsl
push
inc
xor
test
jmp
out
fadds
cmp
jne
scas
jg
and
mov
and
loopne,pn
test
imul
or
fs
imul
movsb
cmpsl
lea
mov
dec
add
xchg
shlb
into
jo
cmp
pop
jmp
je
out
sub
fstl
imulb
je
mov
mull
xor
fabs
adc
cmp
jmp
fildll
jo
xchg
xlat
cmp
push
movsb
push
push
sbb
pushl
mov
push
leave
mov
cmp
or
or
inc
jbe
movsb
dec
or
mov
loop
clc
cmovbe
add
inc
inc
mov
and
jne
addl
inc
cld
add
mov
mov
fucomp
into
dec
mov
adc
movb
loope
pop
pop
pop
pushf
adc
cmpsl
xchg
ret
pop
adc
add
cld
jmp
mov
test
dec
mov
repz
out
faddl
sbb
and
jnp
rcr
add
mov
call
clc
jmp
xchg
add
adc
fsubl
mov
mov
pop
mov
cld
add
cltd
mov
add
je
and
xchg
cmp
sbb
cmp
and
sbb
pop
call
sarb
ret
cmp
adc
orl
or
insb
jne
test
adc
sarb
ret
cli
add
dec
lock
mov
pop
mov
cmp
pop
movsb
mov
pop
jmp
sbb
push
fprem
sub
push
mov
add
mov
adc
sbb
sahf
sbb
push
or
sbb
adc
sbb
cmp
cmp
inc
lret
jle
sub
popl
movl
fisubs
mov
push
push
aam
pop
add
minps
jne
mov
mov
shl
ret
add
ljmp
jnp
fnstsw
add
pop
cmp
fldt
jl
or
mov
add
or
sub
andl
ret
sqrtps
shl
sbb
cmp
scas
mov
jecxz
sub
xor
test
int
pop
add
inc
cwtl
aam
dec
mov
bound
inc
push
add
dec
mov
add
loop
ja
xor
call
test
pusha
add
add
imul
adc
cltd
mov
clc
sbb
sbb
push
mov
xchg
hlt
sub
fistl
or
scas
mov
movsb
icebp
daa
jb
mov
add
aas
xlat
rorb
movsl
outsb
outsl
or
sub
xor
push
pusha
in
or
push
sub
enter
or
dec
or
or
add
mov
lret
cmp
aad
sahf
jp
outsb
fcoms
dec
pop
push
aas
insb
pushl
add
shlb
lea
aam
push
mov
testl
in
fldcw
data16
push
call
movsl
mov
jns
rolb
insl
clc
add
outsb
pop
jne
jbe
in
adc
inc
mov
into
xchg
or
lds
mov
dec
pop
mov
jl
fs
dec
cmp
push
sbb
inc
mov
sub
int3
push
clc
mov
add
aaa
inc
adc
inc
or
sbb
jns
pop
hlt
dec
push
jp
out
sub
sbb
push
jae
xor
push
and
push
inc
lea
sub
jno
bswap
cmp
pusha
mov
ja
push
jp
jae
dec
pusha
sub
add
mov
sub
add
mov
jae
jno
xchg
fcoms
cmp
jne
mov
ss
loope
jmp
orl
fistps
xchg
mov
lods
pop
popf
xchg
fimull
mov
inc
adc
sbb
addb
add
nop
fnsave
push
ret
xor
push
mov
push
pop
int3
or
cmp
xchg
jg
iret
dec
xor
sbb
cmp
or
cld
bound
and
or
js
mov
into
xor
aad
nop
fadds
lcall
fnstcw
pusha
pop
mov
or
jg
pop
mov
xor
je
int3
jbe
push
mov
adc
or
les
cmp
push
sub
hlt
mov
mov
pop
sub
ds
and
push
add
add
xor
stc
ds
xchg
fucomp
imul
aam
ret
jl
jge
xchg
outsl
cmp
xor
push
push
movsb
jne
iret
inc
adcb
lods
mov
pop
out
mov
inc
jp
scas
sub
jbe
es
inc
xchg
jmp
pop
je
clc
mov
jmp
cld
and
cld
bound
test
popf
pop
mov
fisttpl
sti
dec
sbb
das
or
fimull
lods
hlt
push
clc
cmp
mov
jbe
aad
or
adc
pop
lret
data16
xchg
and
or
mov
push
mov
or
fwait
jmp
inc
xlat
add
push
loopne
hlt
sub
mov
in
xor
pop
adc
test
inc
push
inc
cld
ret
call
cmp
pop
rcrb
add
test
pop
pushf
lret
loope
jmp
jb
jb
push
cmp
das
sub
inc
incb
cld
pop
mov
lock
and
mov
iret
nop
cmp
jne
jae
mov
push
and
or
and
pop
xchg
push
sub
sbb
ret
jnp
mov
cmpsl
cmovl
inc
into
decl
fidivrl
aad
sbb
sub
push
cmp
popa
nop
rcrl
mov
test
or
ret
int
int3
or
push
push
insb
push
sbb
popa
adc
xchg
lock
push
sbb
pop
and
mov
cwtl
adc
jle
and
icebp
icebp
clc
or
mov
add
negl
xchg
or
orl
jmp
add
cltd
int
jns
sbb
pop
push
into
test
inc
or
or
dec
xor
sbb
lods
lods
and
mov
add
es
sub
and
xchg
jo
jp
jge
xor
in
repz
fistl
sbb
or
push
loope
iret
nop
out
sub
idivl
adc
xor
rorl
outsl
xchg
fs
add
sub
inc
pop
cmp
lahf
or
call
std
fdivl
int
int
sub
sbb
mov
jo
mov
sub
mov
inc
jp
jg
sub
add
adc
movsb
xor
stos
adc
and
pop
or
pop
sbb
mull
and
fstpl
mov
push
std
movl
cli
and
std
adc
out
aam
in
adc
adc
gs
add
in
mov
adc
iret
sub
xlat
sbb
adc
push
mov
pop
jmp
ret
lea
xor
or
or
movsb
xlat
adc
sbb
lret
leave
sub
mov
popa
push
or
arpl
test
mov
cmp
rorl
add
je
insb
lret
xchg
sub
jl
ret
popa
ljmp
inc
leave
shrb
aad
jbe
mov
fcomps
adc
mov
jmp
jne
mov
sbb
jmp
insl
mov
loope
xlat
jae
stos
jbe
addr16
sub
sub
pop
jne
add
ret
push
jmp
leave
je
jmp
sbb
enter
or
sbb
sub
lahf
pop
fldcw
sbb
jne
adc
dec
adc
test
out
mov
add
mov
jecxz
call
or
inc
xor
loope
mov
inc
loopne
cwtl
add
jo
icebp
mov
mov
dec
inc
or
rorl
jg
loopne
adc
ret
push
push
push
cmp
call
pop
jne
xor
enter
xchg
repz
mov
pop
pop
mov
push
adc
cld
or
mov
adc
or
je
loope
jle
cmp
jg
sub
inc
push
jl
cmp
jg
add
mov
inc
rep
jmp
outsl
lock
adc
leave
jmp
shr
mov
dec
mov
vcmpss
or
mov
in
or
pop
arpl
mov
cmp
ja
je
sar
js
rep
inc
and
sti
std
pop
imul
je
cld
lea
sbb
std
sbb
movb
pop
cld
and
add
test
mov
loopne
xor
iret
mov
or
add
or
inc
or
adc
jns
add
push
repnz
insl
inc
int
out
xchg
add
cli
mov
jae
test
sub
shlb
push
push
inc
aam
bound
fistl
push
jnp
jne
cmc
cli
out
sete
pcmpgtd
mov
cmp
sbb
pop
sub
jno
push
xor
outsl
push
mov
xlat
aam
dec
je
pushf
out
mov
add
iret
sbb
mov
add
sbb
sub
dec
enter
sbb
rcrb
pop
aaa
inc
jbe
and
and
cmpb
std
fisttpll
push
push
push
lea
and
or
sbb
imul
jg
cmpl
ret
and
decl
daa
pushl
and
inc
and
adc
mov
int
push
sbb
lret
loop
insb
lahf
jne
pusha
lea
lods
pop
dec
push
test
dec
ss
jae
cmpb
jmp
push
dec
std
in
add
or
out
imulb
lea
iret
clc
mov
test
je
imul
push
cmp
test
ljmp
cmp
into
ss
into
mov
pop
push
mov
imul
sbb
mov
sbb
loope
rorl
inc
jmp
imul
divl
push
rolb
mov
popa
ret
pop
mov
orl
adc
ror
fcmovbe
je
xor
test
or
push
pop
xor
in
fldcw
add
ja
lea
or
mov
mov
dec
data16
inc
jecxz
jmp
sarl
sbb
pop
ss
bound
jmp
xchg
pop
ret
addr16
dec
xchg
ret
sbb
adc
xorb
sbbl
mov
xor
movzwl
and
cmp
jne
sub
imul
push
push
pop
push
sbb
in
sbb
xor
cmp
imul
sub
or
adc
or
xchg
insl
sub
jne
in
push
or
add
adc
jo
or
mov
std
js
or
hlt
push
fs
pop
pop
add
xchg
or
mov
and
add
and
out
or
jne
call
mov
cmpsb
in
push
lahf
xor
and
sbb
jmp
pop
pop
dec
cld
dec
sbb
push
cmpsl
lds
insb
lock
popf
jle
cmp
mov
jbe
daa
push
in
rcr
and
les
cmp
les
or
pop
test
jmp
addr16
xlat
call
dec
push
dec
xor
xchg
lea
adc
rorb
mov
shl
add
mov
xor
rep
mov
stos
pop
mov
push
popa
pop
insb
xor
jnp
pop
mov
mov
xor
adc
mov
data16
sub
cli
bound
xchg
jnp
testb
xchg
pop
and
das
dec
inc
sbb
mov
and
xor
mov
icebp
and
shr
xchg
or
cmc
arpl
and
mov
stos
or
xchg
or
inc
cli
jae
cmc
je
int3
xor
cmp
in
jmp
jmp
mov
imull
mov
or
ret
adc
mov
and
out
negl
clc
ret
sti
push
fisubrs
fstpt
xchg
clc
or
push
inc
pop
and
xor
sub
xchg
lahf
in
je
and
je
pop
je
xor
cmpsl
jnp
or
test
outsl
insl
mull
jmp
add
or
cmp
ja
lea
add
jne
out
rolb
sub
imul
push
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
and
pushf
mov
ljmp
jb
jmp
das
pop
adc
or
in
test
repnz
aad
add
and
mov
out
dec
in
cmpsb
mov
mov
cmp
in
push
mov
lcall
mov
mov
lea
fldt
mov
call
pcmpeqb
shll
jge
fsubl
add
popa
xlat
adc
xor
push
cmp
jbe
jge
jge
inc
stc
xor
and
xchg
stc
sbb
mov
fstp
fldt
fldz
lods
rcrl
inc
and
pop
cltd
aas
mov
push
in
push
cli
or
or
ret
setg
in
and
adc
mov
xchg
sbb
imul
stc
add
loopne
in
mov
daa
pop
mov
sub
test
mov
or
repz
mov
lds
mov
cld
int
cld
jbe
imul
cmp
mov
mov
bound
das
jmp
mov
xlat
fadds
outsb
xor
xchg
push
or
jg
aas
push
push
int3
into
sbb
rorl
mov
push
pop
test
enter
call
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
incl
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
popf
imul
pop
js
inc
int3
fwait
lds
stos
mov
cmp
inc
loopne
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
inc
dec
cmp
call
mov
push
inc
mov
push
mov
inc
jbe
int3
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
jmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
cmp
xchg
push
cmpsb
scas
mov
pop
or
addl
cli
call
mov
push
in
cmp
xchg
pop
cmpsb
lock
mov
popa
mov
and
addr16
repz
mov
subb
and
add
les
outsb
bound
xor
fistl
push
bound
pop
and
inc
mov
jne
mov
and
mov
fdivrl
dec
sbb
push
xor
hlt
add
and
jmp
xchg
mov
test
les
pop
jne
gs
hlt
lret
push
xor
xor
mov
fsubs
adc
inc
cmp
data16
and
dec
pop
mulb
aas
or
mov
sub
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
std
repz
pushl
imul
push
dec
popa
jae
push
popa
insb
jne
fninit
fldcw
cmp
pop
data16
jo
push
das
lea
fildl
addr16
cmp
bound
aaa
or
adc
sub
test
popa
add
pop
xlat
sub
ss
or
push
cld
inc
ret
push
mov
roll
pop
inc
push
rcrl
mov
test
stc
adc
add
fcoml
in
jmp
cmp
je
pop
mov
add
jae
mov
mov
sbb
xor
nopl
sbb
jecxz
add
lods
pop
push
jns
mov
mov
cmp
adc
loope
and
roll
jb
ja
outsl
xchg
and
loope
add
mov
addl
jb
jmp
push
call
popa
fptan
lock
xchg
aaa
in
xlat
pop
test
subb
push
inc
adc
aam
call
and
mov
mov
dec
sbb
cli
cmp
jo
ret
mov
jae,pt
ret
dec
ret
xchg
mov
and
and
lahf
sbb
cld
outsl
pop
outsb
mov
test
pop
mov
test
pop
ret
cmp
pop
pop
mov
jb
cmp
jne
pop
or
jne
or
xchg
fnstenv
sub
pop
mov
mov
aam
mov
sbb
dec
xchg
xchg
mov
sbb
push
jle
fs
out
sqrtps
scas
sbb
imulb
icebp
sbb
pop
mov
enter
inc
xchg
cmp
pushf
sub
inc
fdivr
repz
mov
orb
xchg
push
data16
or
pop
data16
adc
mov
call
adc
icebp
pop
xchg
pop
cs
lock
jno
jl
cmp
push
sbb
test
xchg
cmp
inc
or
or
fadds
add
sub
dec
inc
and
push
mov
push
jno
lcall
xlat
or
push
clc
mov
imul
shlb
adc
pop
pop
ja
popf
outsb
jp
cmp
adc
fisttpl
jae
push
call
mov
out
push
jnp
in
add
ja
pop
addr16
add
fdivp
popa
xchg
add
pop
push
push
mov
adc
sbb
jmp
or
mov
rolb
add
xor
cwtl
sub
loope
in
xorl
cwtl
fwait
pop
ficompl
stos
cmp
pop
pop
arpl
testl
adc
test
lock
xchg
outsb
cld
mov
rcrb
imul
rorl
and
xorl
out
push
je
jb
and
push
call
pop
jle
sarl
cmp
pop
stos
dec
dec
mov
jnp
shlb
cmp
add
adc
imul
push
cmp
je
addl
insb
jmp
mov
push
sbb
sub
lods
insb
sbb
sbb
pop
inc
pushl
mov
cli
push
lret
std
pop
add
inc
add
sub
sub
jmp
cmp
jnp
adc
mov
inc
or
es
pop
sub
and
pop
mov
xchg
and
inc
add
cmp
mov
cmpsb
clc
xor
and
fwait
sub
mov
push
xchg
icebp
icebp
push
push
push
push
inc
pop
lahf
insb
imul
insb
mov
pusha
pop
mov
outsb
stos
dec
lea
js
dec
clc
or
pusha
add
lahf
mov
mov
loopne
addr16
adc
jbe
add
jp
dec
or
pop
mov
jne
jnp
loop
pop
mov
jmp
ret
xor
lret
xor
outsb
fwait
sbb
leave
ret
pop
out
aaa
cmc
mov
add
je
cmp
fwait
stc
adc
cvtps2pi
dec
jmp
add
dec
stc
aas
sub
jb
je
jmp
cmp
cmp
mov
and
add
cmp
cmp
jmp
jmp
mov
jmp
mov
sbb
jmp
mov
jmp
jmp
cmpsl
jmp
mov
jmp
mov
sti
stos
dec
fucomp
mov
fidivs
cmp
mov
mov
dec
push
or
inc
or
xchg
sbb
xchg
cmpsl
arpl
jnp
jno
aad
or
pop
int3
cmp
push
pop
inc
orl
inc
sbb
mov
out
mov
and
lret
or
fs
sub
fstps
mov
pop
xor
xor
jo
stc
mov
xlat
push
outsb
in
je
push
fdivs
mov
mov
cmp
or
jns
cmp
or
idivb
add
adc
lahf
inc
ja
call
or
push
mov
pop
sbb
cmp
iret
sbb
sbb
fmuls
sbb
push
sub
push
cmp
outsb
or
jb
adc
mov
or
sub
xorl
lret
dec
pushf
xor
scas
hlt
jle
repz
insb
pop
imul
or
rorl
nop
dec
cmp
jg
movl
sbb
mov
adc
out
shlb
sub
inc
cmp
add
xor
pop
mov
lea
sbb
push
mov
add
dec
add
pushl
or
jmp
pop
fbld
gs
stos
jo
dec
xchg
es
pop
ds
in
mov
push
sbb
daa
fdivrs
daa
fistl
call
rorl
negl
rolb
dec
mov
mov
fst
rcl
mov
fldcw
pop
xor
aad
iret
dec
sbb
mov
lock
neg
sbb
inc
pop
pop
sbb
ljmp
sbb
and
movsl
out
daa
insl
sub
jg
jl
pusha
or
jno
push
cmp
les
jle
cmpl
addr16
ret
js
push
push
add
jg
lods
roll
push
pop
out
cmp
sub
shlb
or
add
lret
sbb
out
xchg
imul
mov
inc
xchg
adcb
aam
jnp
ss
cmpl
push
and
mov
cld
jle
adc
mov
cs
insl
ja
jo
js
adc
add
add
sbb
pop
fwait
mov
jbe
xor
loope
inc
sbb
inc
lods
mov
test
cmp
mov
push
and
ss
jne
xchg
mov
pop
jne
mov
cmc
or
mov
add
lret
lea
cmp
mov
and
pop
sub
shll
mov
push
dec
jl
lock
fistl
test
or
out
push
mov
movl
push
or
aad
jne
inc
inc
daa
and
sbb
call
fcmovb
pop
or
pop
mov
jmp
cmp
xchg
cmpb
dec
inc
or
sub
jle
aas
push
mov
loopne
push
fstpl
movl
adc
pop
mov
lcall
mov
mov
lock
stc
mov
jne
lahf
clc
mov
pushf
push
and
shll
shrl
xor
int
sahf
mov
xorl
sbb
inc
add
shr
mov
lcall
clc
insb
mov
out
jo
or
arpl
pop
lea
cmp
icebp
sarb
push
imul
pop
xor
jl
dec
sarl
out
mov
scas
in
push
mov
add
push
rcll
mov
mov
jnp
das
jge
xor
jl
lea
idiv
push
nop
mov
add
sti
nop
xor
push
and
repnz
js
or
cmp
lret
add
je
sti
fcmovnu
movb
cmpl
rcrl
shr
cs
mov
arpl
sub
and
pop
add
xor
jmp
add
xlat
bound
cmp
pop
pop
cs
mov
inc
dec
nop
push
sub
data16
mov
mov
pop
sbb
lret
push
pop
add
loopne
out
int
cld
ret
sbb
jnp
adcl
mov
push
test
hlt
push
cld
add
cmpsb
mov
mov
mov
adc
repz
out
imul
add
iret
inc
popa
inc
push
cmp
fidivrl
or
in
mov
push
jno
mov
arpl
or
cld
xor
push
sahf
mov
pop
dec
mov
cli
bound
push
mov
pop
pinsrw
notl
jo
lret
mov
les
push
xor
mov
mov
jns
cld
dec
fmull
mov
add
cmp
pop
push
pusha
sub
es
mov
jg
stos
mov
and
aaa
add
dec
jmp
xchg
pop
hlt
sbb
push
pop
inc
pushf
sbb
push
insl
dec
mov
jmp
insb
outsb
or
xchg
dec
pop
xchg
pop
lea
loopne
sbb
les
pop
into
mov
push
imul
mov
mov
push
call
pop
mov
mov
es
cmp
jne
dec
je
je
mov
in
add
or
sbbw
or
add
gs
sbb
sub
sub
inc
push
cwtl
jp
pop
cmp
jne
push
adc
ja
mov
cmp
add
jmp
pusha
jmp
push
mov
pop
xor
sub
shr
or
push
imul
clc
inc
xrelease
daa
sub
jl
js
inc
inc
sub
push
lods
or
fists
push
pop
leave
jae
cmp
and
int3
mov
lea
pop
mov
or
out
pop
sub
es
jl
cmp
jge
sub
push
or
rolb
mov
or
jmp
mov
jmp
mov
cmpsb
mov
xor
mov
sub
sub
sarl
sbb
sub
add
lea
fwait
daa
dec
push
scas
cmp
or
lahf
rolb
test
fwait
mov
push
rorb
sbb
aaa
pop
inc
jle
and
mov
sbb
int
push
jb
mov
mov
enter
mov
icebp
xchg
sti
popl
dec
lea
adc
js
jne
xchg
xchg
xor
pop
sub
sbb
sub
jmp
adc
xor
inc
cmp
jl
icebp
pop
sub
lret
push
mov
and
lret
in
andl
push
pop
movsb
xorps
push
or
xchg
pushw
rorl
sbb
into
loopne
dec
push
sbb
pop
out
mov
mov
push
or
jno
das
adc
pop
aaa
push
jmp
cmpl
nop
addl
inc
jmp
pop
cmp
arpl
and
xchg
rcrb
push
movsl
pop
int3
jo
mov
xor
adc
aas
xchg
jnp
dec
cmp
add
sub
or
inc
call
std
notl
adc
mov
sti
add
out
jo
jnp
dec
cmp
mov
decl
xor
testb
cmpps
test
xchg
imulb
pop
cs
lods
fwait
push
inc
xchg
add
pop
shlb
and
pop
push
adc
fadds
add
clc
fsubl
sub
popf
add
jmp
mov
cmp
mov
adc
mov
popa
jo
mov
pushf
push
shrl
jg
gs
shll
xchg
out
push
pop
or
mov
call
push
sub
movsl
and
xchg
pop
mov
cmp
notb
clc
jg
cmp
je
cmp
je
cmp
sarl
je
cmp
sub
add
pop
mov
cmp
lds
jg
into
adc
lahf
stc
and
pop
xor
push
aaa
insb
jmp
adc
in
cmp
aad
push
or
insl
mov
std
dec
rclb
sbb
call
sub
sbbl
mov
inc
add
inc
sbb
push
mov
ds
icebp
jmp
popf
and
or
or
add
adc
pop
clc
movsl
and
sahf
inc
add
cld
loopne
or
add
sarl
push
pop
pop
add
inc
outsl
or
cmp
xor
je
sub
das
das
or
dec
or
jo
sub
imul
sub
push
enter
cmpsb
ret
ds
cmp
cmp
in
aaa
nop
insb
lea
mov
push
call
fadds
imul
and
mov
leave
sbb
cmp
sbb
ret
fcmove
ret
pop
inc
dec
adc
adc
add
jbe
push
scas
jmp
pop
jmp
mov
cmpsl
imul
push
mov
mov
testb
jns
push
popa
jge
pushf
and
rolb
cmc
mov
loopne
jne
push
cmp
aaa
nop
mov
loope
jmp
adc
fiadds
loop
cwtl
cmp
sbb
mov
push
xchg
or
add
add
mov
out
lods
mov
pop
xchg
lods
les
sub
add
add
in
gs
dec
cmp
lock
xor
adc
cld
sarl
adc
xchg
ret
mull
mov
sub
mov
cmp
lret
out
xchg
push
sub
dec
cmp
dec
sub
or
mov
sub
in
dec
xchg
push
loopne
test
add
mov
arpl
or
and
pop
mov
addb
cmp
incl
aas
jmp
roll
clc
movzbl
rcrb
add
shll
push
push
iret
push
rcrb
adc
mov
imul
push
in
mov
testb
cmp
je
adcl
push
or
cmp
cmp
sub
adc
dec
lock
jle
xchg
pop
sar
and
add
cmp
lea
push
clc
and
or
arpl
decl
sbb
dec
jge
cmp
jge
add
sub
cltd
sub
inc
push
xor
lods
insl
adc
xlat
pop
push
push
in
inc
insb
mov
push
or
mov
mov
mov
es
and
arpl
fcoms
fidivrl
shrl
xlat
pop
add
add
cvtps2pd
hlt
add
pop
or
imul
test
sbb
xor
dec
aaa
xor
mov
inc
push
mov
dec
nopl
push
sub
and
fwait
xor
adc
push
decb
mov
jp
xchg
mov
orb
sbb
scas
andl
aas
sbb
movsl
bound
push
in
js
adc
addl
sbb
push
testb
clc
and
sarb
jle
sbb
lahf
adc
mov
test
in
insl
inc
mov
push
addb
sub
ds
scas
mov
in
je
stc
xor
subb
push
or
dec
inc
stc
or
or
adc
jg
inc
jo
pusha
sti
ret
pop
std
ret
movsl
stos
inc
cmp
in
pusha
pop
hlt
add
fsubl
sbb
cmc
or
pop
push
or
data16
mov
andb
shrl
push
loopne
or
add
mov
sbb
xorb
xor
test
movsl
cmp
push
sti
add
push
adc
stos
jge
scas
mov
pop
js
mov
daa
aas
or
add
mov
in
f2xm1
inc
pop
cmc
adc
xor
mov
add
fwait
xchg
pop
ss
inc
inc
jge
jle
inc
lea
xlat
sub
inc
cmp
jnp
sub
sbb
outsb
mov
inc
stos
adc
jle
xchg
hlt
pop
std
fildll
lea
ret
pop
movb
pop
mov
sub
lret
xchg
pop
aas
inc
loope
lret
lcall
inc
xor
add
loope
ljmp
add
imul
gs
xor
cs
insb
add
gs
je
outsl
outsb
addr16
popa
mov
inc
adc
sbb
cmp
shrb
lahf
shll
adc
sbb
mov
add
add
add
xor
sbbl
xchg
xchg
add
adc
push
sbb
pxor
test
call
and
mov
stc
data16
addr16
add
fiadds
repnz
lcall
fstps
repnz
push
push
repz
mov
add
adc
cmpb
add
stc
jge
push
or
out
psubsw
mov
ret
jmp
movsl
in
jbe
mov
in
je
and
or
pop
or
jmp
mov
jle
dec
dec
in
shlb
ret
or
jae
xchg
mov
ss
jge
dec
pop
jne
xchg
cmp
or
inc
repz
sub
add
addr16
outsl
data16
popa
jb
addr16
negl
arpl
gs
sbb
add
push
andl
pop
cmp
rcll
cmp
jg
lds
push
add
jbe
inc
out
sub
cmp
inc
add
jne
sbb
mov
mov
add
pop
sub
add
ud1
inc
inc
xor
add
cmp
add
xor
fwait
in
jns
and
cmp
and
outsb
in
jne
jmp
nop
or
push
arpl
fs
xchg
fstpt
add
push
or
inc
sbb
pop
nop
adc
insb
mov
push
and
jbe
cmp
je
push
dec
call
mov
cmpl
mov
sub
mov
mov
inc
jo
test
and
cld
mov
jbe
repz
es
xchg
sbb
adc
mov
mov
ss
push
lea
push
loop
inc
jne
xchg
pop
push
lock
sbb
xor
and
pushf
adcb
icebp
lods
pushf
fwait
test
dec
xor
and
inc
ret
inc
jae
jge
pop
lea
popf
jne
mov
dec
iret
push
mov
or
loopne
add
add
jg
sbb
push
clc
scas
subl
xor
movb
in
push
sbb
add
mov
push
xor
add
and
dec
mov
or
ret
cmp
sbb
arpl
or
cmp
push
jne
mov
mov
outsb
sbb
sub
mov
inc
mov
pop
lds
and
int3
mov
mov
femms
lods
mov
imul
xchg
ret
nop
pop
mov
mov
lds
dec
mov
negl
cmpl
fs
js
sbbl
mov
push
mov
mov
mov
aad
lea
sub
arpl
sub
mov
leave
sbb
mov
ret
mov
arpl
inc
pushf
ret
cmc
xor
mov
push
pop
lahf
popf
jne
les
push
int3
xor
and
ds
pusha
jmp
leave
jo
sbb
pop
fs
or
pop
pop
sub
lods
cwtl
aaa
shrl
sub
fsubrs
es
lret
jb
add
jno
hlt
lock
in
call
and
xor
and
and
and
mov
or
enter
movsb
push
xor
and
nop
inc
dec
xor
and
inc
push
sbb
sbb
adcl
fs
lahf
cmp
in
pop
jo
pop
xor
jb
jno
je
xor
enter
lock
pop
icebp
repnz
cmc
orl
div
clc
stc
or
enter
cld
xor
and
and
and
in
or
enter
jmp
ljmp
in
out
out
enter
rcl
shlb
orl
aam
orl
xlat
fcomp
or
enter
fdivl
enter
enter
rol
and
lds
enter
enter
int3
xor
and
and
and
mov
or
enter
mov
mov
and
and
and
movsl
sbb
xor
cmpsb
cmpsl
imull
and
xchg
js
pop
rolb
add
add
adc
or
push
repnz
inc
push
xor
add
call
and
gs
imul
xor
pop
adc
jl
sub
testb
jo
nop
mov
incl
inc
push
in
inc
dec
jne
dec
dec
gs
in
sbb
inc
imul
sti
mov
lods
xchg
sub
sti
or
outsb
pop
inc
jb
pop
inc
pop
mov
sbb
or
cmpsl
or
cwtl
xchg
orl
or
adc
pop
ret
inc
enter
cmovne
lds
push
repnz
pusha
lods
pop
or
imul
cld
pop
gs
nop
test
fs
jle
mov
add
outsb
lods
inc
pop
add
dec
outsb
test
jb
insb
outsl
ja
pop
mov
add
pop
arpl
dec
or
dec
stos
mov
mov
mov
scas
xchg
adcl
or
mov
fistps
imul
or
sbb
test
sub
fs
test
pusha
imul
pop
push
jns
cmc
fldcw
pop
nop
adc
xchg
hlt
inc
mov
outsl
imul
jo
pop
or
jne
mov
or
inc
popa
jae
outsl
int3
cmp
int3
or
fs
fs
cli
adc
adc
arpl
jae
push
mov
sub
and
fs
jb
fldenv
jecxz
loopne
loopne
or
je
arpl
dec
loopne
adcb
pop
push
push
inc
or
xchg
sub
dec
pusha
loope
push
popa
or
lahf
add
xchg
rcll
les
roll
and
shrb
push
pop
push
retw
add
jb
inc
fnstenv
lods
cmpsl
push
adc
push
and
xchg
or
inc
and
arpl
and
or
or
adc
cs
xor
push
dec
pop
or
insl
push
mov
fwait
inc
and
cmp
or
xchg
sub
shr
div
cmc
mov
add
add
adc
cmp
pop
lret
mov
mov
nop
mov
push
push
and
xor
pop
aam
shll
or
push
add
repz
inc
pop
stos
and
mov
inc
push
cmp
ja
sub
jb
or
call
pop
test
fistps
dec
add
rorb
pop
add
push
inc
cmc
shl
ret
rdpmc
inc
dec
push
ret
out
lods
push
jl
push
call
sbb
dec
pop
xchg
rcrb
mov
in
aas
add
inc
cmp
jl
cmpb
jbe
or
push
icebp
jge
mov
push
pop
dec
adc
adc
fidivl
lret
inc
leave
cmp
or
or
jne
or
jns
mull
xchg
jg
add
push
ret
mov
shl
icebp
dec
pop
mov
cli
cmp
mov
fsubrs
icebp
sub
jbe
add
mov
sub
jmp
sti
out
incb
mov
dec
jne
xor
in
adc
leave
push
aaa
mov
insl
adc
mov
shrl
bound
or
ljmp
and
xor
sub
movb
dec
inc
outsl
push
push
clc
jg
fnstcw
fnstcw
orw
sub
mov
mov
fld1
inc
daa
andl
jg
add
fildll
fildll
ret
adc
outsl
mov
filds
rorl
fildll
stc
mov
xor
mov
sarl
fstsw
sahf
jae
fnstenv
ffree
ffree
mov
repnz
ffree
pop
ljmp
pop
push
out
and
add
mov
or
pop
outsb
mov
add
add
or
push
mov
and
and
adc
insb
cltd
push
ja
cmp
fists
aam
adc
sbb
mov
push
or
call
test
cmp
sub
mov
push
jae
mov
sub
or
adc
push
mov
enter
cmp
aam
movsb
and
jb
push
sub
syscall
cmp
adc
add
inc
movb
repnz
jl
inc
and
sub
rcr
jl
test
push
out
push
mov
loop
mov
imul
sbb
add
fcmove
lea
or
add
xor
sar
test
outsl
je
fldt
fcomps
leave
out
mov
dec
sbb
push
jmp
es
fadds
xor
and
mov
cmpsl
xchg
push
lcall
sub
stos
pop
push
xor
dec
adc
or
mov
sbb
and
mov
xlat
xchg
mov
fcoms
push
jbe
out
int3
xor
dec
fstp
adc
jle
mov
pop
sbb
cmp
pop
or
xlat
pop
jne
cs
dec
cmp
jne
dec
dec
sub
testb
mov
dec
mov
push
lea
mov
xchg
imulb
rcrl
sub
cmp
sahf
inc
pushf
lock
nop
test
adc
jo
inc
lret
insl
clc
aam
push
imul
pcmpgtw
loope
mov
mov
sub
adc
mov
push
adcb
mov
inc
inc
mov
incb
sbb
mov
iret
push
or
or
dec
adc
daa
sti
das
adc
mov
push
add
lret
mov
mov
inc
dec
add
fnstenv
mov
push
xor
lret
xlat
mov
xor
or
xor
adc
pop
loopne
mov
cmpsb
mov
cmc
or
or
and
sti
lret
jp
ljmp
lahf
cmp
adc
test
mov
dec
hlt
cmp
jne
adc
xchg
mov
mov
adc
negl
mov
je
mov
mov
cmovne
inc
jnp
mov
mov
mov
int3
push
cld
dec
les
inc
std
mov
adc
xchg
clc
testb
incb
mov
std
insb
cmp
cld
decl
sub
dec
mov
pavgb
movb
push
mov
sbb
add
add
shlb
mov
mov
push
push
mov
xchg
out
lods
add
mov
rcrl
test
sub
adc
lods
add
ss
push
sub
or
and
iret
js
lcall
clc
or
pop
std
or
jae
lods
cmp
movsb
stos
sbb
repz
sub
frstor
push
bnd
insl
jnp
clc
incb
mov
cmp
jne
adc
or
gs
out
jne
pop
hlt
adc
lods
jmp
movsb
imul
or
mov
and
adc
dec
pusha
cs
mov
in
dec
add
jge
dec
outsb
sub
or
movsb
xchg
jnp
test
mov
rep
or
repnz
hlt
or
push
stos
pop
clc
pop
testl
pop
sub
cmp
jb
cmp
ja
imul
sub
movzbl
add
xchg
add
pop
jnp
push
lock
jecxz,pt
jg
incl
adc
dec
mov
mov
test
ret
and
mov
aas
lret
pop
mov
or
push
mov
mov
dec
push
xchg
and
pop
jo
ljmp
and
add
lcall
add
out
jmp
pop
mov
pop
sub
ret
bound
dec
fsubrs
shll
std
sarl
mov
fsubrl
inc
cld
icebp
sub
je
add
insl
xchg
or
in
push
je
mov
cmpsl
jb
insb
int
aaa
adc
nop
pop
loopne
rorb
jg
cltd
cmp
jne
lcall
jbe
js
adc
lret
add
jmp
popa
leave
pushf
xchg
push
and
lods
adc
enter
sub
imul
in
sbb
mov
and
insb
aad
xchg
mov
test
or
add
push
mov
cmp
ja
iret
pop
stos
inc
add
lods
scas
in
jge
jecxz
dec
mov
cs
lods
push
jo
cmpsl
push
leave
mov
data16
repz
add
add
mov
inc
je
mov
push
jne
pop
jle
je
mov
inc
je
mov
dec
je
dec
jl
jnp
mov
sub
ret
mov
cmp
incb
or
or
mov
je
clc
adc
jo
ret
xchg
jecxz
iret
movsb
arpl
shll
push
ljmp
add
rcrb
iret
lahf
adc
or
or
xchg
addl
sub
shrb
add
into
adcb
jno
lcall
jns
lods
orb
sahf
test
xchg
test
fcompl
or
dec
clc
enter
add
je
jle
cmp
ja
and
dec
pushf
dec
xchg
test
out
push
mov
loopne
xchg
jg
or
jnp
pop
xlat
ds
cwtl
dec
cmp
jl
jmp
add
mov
add
movsb
lcall
scas
fadds
dec
cmp
das
test
jge
sub
arpl
imulb
mov
jge
mov
in
sbb
loopne
xchg
push
mov
mov
mov
xchg
mov
mov
cld
jg
jmp
cmp
jne
pop
pop
sbb
fidivs
fcompl
sub
sti
mov
movl
hlt
mov
jecxz
test
repnz
mov
pop
xor
add
xor
add
ss
or
dec
adc
cmp
aas
push
js
stc
fbld
mov
movzwl
sbb
inc
shrb
sub
jmp
lea
push
mov
roll
xlat
inc
mov
ja
pop
adc
je
add
or
mov
icebp
jge
jle
mov
cs
dec
sbb
js
inc
jmp
fs
sbb
add
jne
dec
inc
push
dec
lods
or
add
cs
in
dec
ret
cltd
mov
push
mov
aam
pop
or
sbb
lods
loope
jl
sub
lea
jmp
sbb
jmp
cmc
in
mov
pop
stos
loop
pop
adc
or
fdivp
or
and
daa
push
fwait
ret
push
ret
add
mov
fwait
arpl
jmp
dec
or
imul
negb
leave
mov
mov
mov
movsb
lock
inc
xor
add
out
push
lahf
xchg
add
dec
adc
push
xlat
dec
dec
scas
imulb
div
mov
inc
push
js
dec
jne
cli
into
jne
sbb
jmp
mov
testl
dec
add
stc
adc
aaa
scas
test
mov
or
cmp
xchg
mov
icebp
push
pushf
fwait
push
jbe
mov
mov
push
mov
mov
inc
or
lods
push
jmp
mov
lcall
test
sub
push
ret
sub
popf
or
and
jle
mov
adc
inc
sub
sub
out
imul
or
sub
divl
or
lods
outsb
rcrl
sub
sub
sub
inc
xchg
mov
add
xlat
data16
insb
add
jmp
pop
fildll
mov
push
je
mov
cmp
testl
push
adc
cmpl
add
movb
addr16
mulb
in
fldt
mov
dec
add
outsb
loop
stos
shlb
out
clc
mov
and
pop
frndint
jmp
fcomp
cmpsl
pop
jl
fstsw
fwait
pop
inc
testb
sub
mov
sbb
std
mov
fbstp
lea
mov
inc
sub
dec
adc
add
in
add
sub
inc
shrb
jns
dec
jge
cmp
aaa
sarl
dec
add
call
jae
lea
add
mov
js
incb
adc
fcomip
dec
iret
in
jmp
data16
mov
fs
mov
shll
xor
push
or
fcmovnb
ljmp
dec
out
inc
cmp
in
mov
dec
and
or
mov
inc
rolb
fisubrl
cli
push
addb
jg
loope
mov
pop
mov
cmpsl
sbb
addl
and
addr16
scas
bound
fildll
cli
lret
push
fidivl
fwait
push
push
sbb
push
mov
cmc
pop
dec
jne
into
and
jne
dec
adc
cmp
ret
pop
adc
push
mov
ljmp
movb
xor
fdivl
aas
jecxz
mov
fildl
or
dec
popf
aam
push
pop
sub
bound
add
pop
mov
das
js
fnclex
fldcw
shrl
mov
andb
add
add
xor
stos
jle
xor
inc
pop
push
mov
push
cmp
je
adc
cmp
sub
out
inc
mov
pop
add
aas
dec
mov
xor
inc
and
sub
fchs
sbb
cs
inc
mov
aas
pushf
fstpt
mov
jbe
test
mov
mov
jmp
data16
and
ret
sub
add
jae
fimull
add
sbb
sbb
scas
stc
xchg
sub
inc
fidivl
or
jb
sbb
mov
cwtl
push
adc
popa
inc
jns
and
mov
dec
ret
aam
mov
push
shlb
pop
jns
fs
outsl
das
add
add
xlat
push
ret
pop
push
out
push
jle
add
aam
fldt
fstpl
fwait
or
sub
jb
cmp
mov
mov
es
mov
xchg
in
or
jmp
sub
faddl
or
sbbb
aas
add
mov
pop
inc
clc
repz
mov
sbb
add
push
sub
stc
inc
push
dec
outsl
loopne
cmp
shlb
out
add
shrb
mov
ljmp
mov
add
dec
fildl
fdivs
mov
sbb
push
and
aad
lret
movsb
dec
pop
or
data16
mov
pushl
in
mov
mov
lea
mov
dec
insb
or
jo
cmp
pop
mov
adc
call
mov
sub
sbb
and
sbb
or
ss
adc
test
jne
push
mov
xchg
add
mov
dec
xchg
fisttps
add
dec
jg
add
das
inc
and
pop
incb
pinsrw
orb
xorl
jb
add
sti
sti
dec
add
jno
or
pop
inc
ja
or
mov
jg
mov
or
incb
push
shll
idiv
imul
jnp
xchg
addb
sub
pop
mov
stc
add
das
or
sub
push
adc
push
dec
sti
cli
aam
inc
push
call
popa
jg
dec
xchg
fchs
mov
into
pop
hlt
add
sub
je
insl
mov
dec
mov
sti
inc
fisttps
mov
xor
pop
insl
iret
fcmovb
or
mov
repnz
or
mov
pop
or
add
decw
sbbl
imul
add
sub
xor
add
push
sbb
loopne
sbb
mov
adc
loope
ret
shl
ret
int
push
andb
enter
pop
jae
dec
dec
mov
pop
jb
int
lret
out
or
int
xor
adc
addb
fwait
lods
adc
hlt
mov
pop
sub
stos
sbb
pop
lock
add
incb
jecxz
push
insl
or
lret
jo
push
or
clc
lret
movsl
cwtl
mov
aaa
stc
dec
inc
add
jge
insb
mov
data16
mov
dec
push
dec
lds
rcrl
fiaddl
aam
dec
mov
xchg
adc
adc
mov
add
xor
daa
adc
adc
icebp
fwait
in
pop
dec
and
mov
aas
loopne
in
call
push
insl
mov
leave
mov
cmpsb
inc
mov
jo
inc
cwtl
inc
or
sub
xor
in
fisttpll
adc
sti
je
dec
pop
mov
outsb
cld
inc
mov
xorb
mov
js
adc
dec
mov
idivb
rorb
add
in
fnsave
repnz
in
add
aaa
fsubrs
sub
push
ds
int
enter
imul
add
in
mov
lea
add
xor
push
jno
jo
subl
sarb
or
ljmp
lods
mov
push
nop
call
mov
cli
pop
fildll
jne
movsl
push
mov
xchg
sub
fdivr
dec
jne
addr16
adc
add
jne
ret
push
jg
sarb
or
andl
and
jle
push
loop
mov
mov
inc
push
cwtl
or
insb
xchg
dec
sub
scas
mov
adc
mov
push
mov
ret
mov
notl
in
and
mov
addr16
xor
sub
add
add
nop
sysret
stc
push
sub
jns
cmpb
mov
inc
mov
xchg
daa
shl
adc
cmpb
jne
push
inc
enter
nop
mov
outsb
clc
sbb
leave
lock
add
add
ret
sbb
aas
aam
rcl
push
mov
add
pcmpeqw
add
sub
aaa
push
pop
pop
mov
xchg
icebp
dec
ud0
stos
pop
outsb
add
add
loope
jns
or
adc
ficoms
movsl
dec
jg
rorb
add
sub
dec
cmc
push
outsl
xchg
or
adc
dec
adc
mov
ljmp
sub
sahf
or
mov
cmpb
dec
dec
mov
pusha
arpl
push
mov
pop
cmp
mov
subb
jmp
aad
setnp
or
stos
mov
add
add
jle
sahf
pop
or
or
mov
inc
fnstenv
pusha
repnz
test
int
mov
jecxz
xchg
imul
mov
push
ret
mov
fs
push
xchg
pop
jbe
add
outsl
and
and
test
insl
shrb
pop
sti
push
mov
andl
add
dec
fstps
lea
daa
add
scas
fsubrs
clc
aam
adc
lcall
pop
jb
out
jmp
mov
sub
dec
mov
push
jb
xor
rorb
mov
fs
inc
dec
xchg
outsl
je
add
jg
push
shlb
add
mov
into
fistps
rcrb
mov
adc
xchg
mov
mov
int3
pop
xchg
fsubrs
sbb
fwait
xor
movsl
xchg
aad
adc
insb
xchg
lahf
orb
dec
jg
adc
and
xchg
mov
add
je
sbb
bound
pop
je
cmpsb
outsl
lea
enter
mov
in
add
dec
pop
les
sub
inc
and
pop
repnz
add
outsb
cmp
jl
pop
mov
pop
fildl
sbb
dec
or
mov
push
test
mov
pop
xchg
pop
add
add
or
jle
test
push
test
mov
mov
xchg
mov
das
inc
xchg
sbb
xor
subl
xchg
lahf
add
pushf
mov
movsb
add
in
andb
je
fcoms
or
adcl
jbe
inc
push
mov
jbe
addl
push
jb
add
add
xor
dec
rcr
jae
in
xchg
inc
jmp
adc
dec
add
and
and
cmp
inc
push
add
jmp
insb
sti
testl
inc
orb
fstl
push
call
and
and
mov
and
test
xor
jge
xchg
mov
je
sbb
nop
jmp
in
pop
and
loopne
sbb
call
negl
and
push
sub
fistpl
fsubl
push
sub
adc
mov
lods
sbb
inc
js
adc
mov
xor
xor
xor
iret
jmp
inc
cld
pop
popf
inc
dec
das
push
dec
add
adc
dec
or
add
inc
into
ret
mov
test
or
and
cmp
or
mov
adc
hlt
and
lea
push
push
or
pop
cmp
push
jp
sbb
add
or
add
fdivrs
push
jmp
je
push
mov
in
mov
addr16
or
push
ss
mov
lods
das
xlat
push
dec
enter
xor
ret
add
scas
call
pop
out
ljmp
inc
mov
adc
sub
jae
in
push
ljmp
jle
xlat
cmpsb
push
jg
adc
ret
add
shr
sbb
mull
mov
lahf
sahf
inc
xchg
and
mov
push
sbb
dec
cmpb
cwtl
mov
mov
sbb
sub
ret
mov
pusha
and
push
mov
mov
and
enter
cld
mov
test
push
mov
out
add
outsb
dec
pop
add
pop
repnz
cmp
xor
or
incl
inc
xchg
fistl
and
and
mov
call
hlt
fildll
je
dec
je
sub
sarl
je
adc
push
sub
ds
lods
nop
cmp
push
inc
pop
clc
jle
outsb
xchg
cmp
dec
outsl
add
or
packssdw
int3
mov
add
add
dec
push
aam
mov
mov
inc
dec
add
mov
loopne
sub
sub
lods
popf
add
pop
add
add
loopne
jmp
or
adc
call
add
xor
aaa
pop
push
inc
adc
cmp
jg
dec
mov
xor
cltd
xor
sub
add
call
add
fs
mov
cld
add
dec
or
je
jb
cld
xor
ret
outsl
fadds
fcomps
lret
mov
fsub
in
prefetch
dec
jle
cmpsl
nop
mov
or
sub
mov
push
inc
js
scas
popf
push
and
mov
addr16
ja
push
ja
jl
mov
lock
fwait
inc
adc
dec
mov
loop
std
mov
adc
and
pop
cwtl
or
sub
hlt
push
jp
test
jae
adc
push
dec
dec
mov
sbb
ljmp
into
add
lock
lods
fwait
shll
jb
and
fstpt
push
lock
imul
popw
jo
xor
push
pop
xor
orl
sbb
hlt
sbb
pop
mov
hlt
jmp
out
pop
cmp
cli
scas
push
jg
jge
pop
outsb
aam
test
ja
lret
inc
lds
out
xor
sub
pusha
or
call
and
mov
inc
cmp
jle
adc
fs
cmp
insb
mov
adc
sbb
mov
adc
fs
loopnew
or
fwait
int3
ss
bound
aas
fwait
mov
insl
dec
ret
adc
repz
jb
cmp
and
pop
mov
pusha
sbb
sbb
sub
ljmp
mov
sbb
insb
fcoml
outsl
je
sub
lods
popa
adc
cwtl
fcoms
cltd
scas
adc
pusha
test
dec
stc
xor
push
out
movsl
insb
cmp
bnd
nop
fdivrs
sub
add
sub
add
loopne
sub
ret
iret
jmp
cmp
imul
ficoms
adc
je
dec
jmp
dec
enter
cwtl
rolb
add
push
adc
int3
push
pop
adc
pushf
pushf
insl
sbb
push
or
gs
sti
xor
mov
inc
or
add
add
sub
nop
xchg
adc
add
sbb
test
jo
push
sbb
js
fsubs
or
jne,pt
and
scas
jns
add
push
cmp
inc
adc
mov
push
lods
adc
imul
add
inc
and
cwtl
add
inc
mov
mov
mov
movsl
leave
into
cmp
idivb
or
or
leave
sbb
mov
jo
repnz
scas
push
call
out
cmp
mov
int3
inc
outsb
xchg
fwait
dec
jge
sbb
pop
mov
adc
or
loop
outsl
sub
fucomp
fcomps
fdivs
jb
push
fcoml
pop
fwait
jmp
or
test
and
cmp
arpl
out
fisubrl
cmpsl
movsb
outsl
imul
xor
mov
push
dec
and
or
xchg
mov
and
add
shlb
hlt
push
in
sub
addr16
sub
sar
push
shll
lea
inc
inc
test
push
dec
push
inc
adc
arpl
in
mov
inc
daa
mov
and
das
or
insb
sub
push
inc
add
and
adc
ret
insb
rcrb
sbb
dec
je
adc
push
or
or
inc
mov
jo
mov
es
or
sarl
jecxz
xchg
dec
test
mov
movsb
lods
aam
push
push
pop
or
mov
inc
inc
dec
fsubl
inc
pop
pop
mov
dec
push
pop
and
mov
inc
or
lock
inc
iret
loopne
or
and
lods
inc
shll
xor
loopne
dec
push
xor
and
leave
popa
add
fnstsw
pop
pop
or
jmp
xchg
pop
mov
add
mov
mov
stc
push
ds
je
cmp
mov
dec
cmp
add
lahf
mov
lods
je
xor
loopne
push
sbb
shll
inc
xchg
dec
xor
jmp
inc
scas
pop
pop
je
cmp
mov
push
pop
ljmp
jne
shll
push
xchg
mov
out
mov
sarl
adc
sbb
pushf
push
insl
icebp
movsl
mov
addl
add
rcrb
movsb
and
jge
cwtl
mov
in
pop
push
dec
jne
push
sub
test
negb
xchg
push
mov
in
lods
inc
mov
mov
dec
imul
in
xor
addr16
inc
add
cmc
mov
rorl
sbb
inc
push
jb
mov
sub
push
xlat
loope
dec
lret
subb
lods
int3
jle
mov
nop
stos
or
daa
dec
cs
nop
popf
lock
and
mov
push
pop
not
push
in
movsb
mov
or
outsb
femms
sti
cltd
mov
sub
add
enter
or
xchg
push
mov
cltd
out
repnz
hlt
pop
je
jne
sbb
movsb
loope
sub
add
in
ret
dec
jle
leave
sub
cwtl
in
push
xchg
push
sub
int
outsl
or
outsl
sbb
dec
add
mov
js
imul
cmpsl
sbb
sub
and
in
sti
lcall
out
inc
mov
mov
mov
cmp
ljmp
shlb
pop
sbb
sbb
in
adc
dec
sbb
out
add
sahf
sub
push
mov
cwtl
popf
xor
sub
call
sbb
lcall
adc
xlat
adc
jno
stos
push
inc
sub
je
and
ds
mov
je,pn
mov
cmp
xchg
cld
mov
inc
inc
add
nop
pop
cmp
xor
sti
fisubl
add
sub
repnz
mov
out
xchg
lods
hlt
lfs
fcmovne
enter
pinsrw
insl
lahf
cmp
push
lea
or
push
mov
sbb
add
popa
lods
dec
inc
cmp
ret
pop
mov
mov
inc
push
add
mov
mov
dec
dec
rolb
pop
mov
jnp
sbb
mov
jb
fwait
sub
enter
imul
or
push
pop
push
nop
fstpt
adc
adc
xchg
nop
sub
scas
xchg
into
rcll
orb
and
push
iret
fimull
fucomp
sub
jno
add
cld
add
dec
pusha
dec
mov
xchg
xor
ss
push
movb
bound
sub
cmp
fdivrs
insb
xchg
cltd
mov
enter
repz
cmp
enter
xchg
xchg
mov
clc
int
sub
mov
aas
test
test
cmpsb
cmp
or
gs
push
adc
arpl
js
adcb
jp
pop
pop
mov
pushw
jg
cmp
mov
lock
sbb
icebp
or
sbb
iret
add
mov
test
push
cld
outsl
push
add
push
mov
cmc
sbb
stos
pop
pop
mov
add
test
push
sub
push
lret
adc
push
jb
insl
pop
xchg
sub
adc
pop
mov
and
cmp
cmp
bound
test
jmp
cmp
push
inc
ret
pop
jo
loopne
fwait
loopne
cld
leave
mov
sahf
pusha
aad
sub
sbb
test
cld
insl
insl
inc
and
or
in
cmpsb
xchg
mov
lock
clc
in
mov
and
sub
mov
movsb
gs
sahf
loopne
sbb
call
add
mov
or
mov
jge
test
cmp
rcrb
addr16
add
push
call
push
sub
cld
xchg
push
cmp
je
jmp
xor
inc
mov
mov
and
sbb
ret
mov
add
xchg
or
or
push
push
lahf
rorb
test
mov
xor
or
and
or
mov
jnp
daa
or
fdivrs
xchg
mov
sub
loopne
inc
sbb
lock
and
les
pusha
push
add
sbb
xlat
inc
loopne
imul
mov
lods
sbb
lea
dec
pop
dec
add
mov
sarl
cmp
sbb
les
enter
cmp
pop
int3
shlb
scas
adc
mov
mov
lea
cmp
arpl
pop
cwtl
enter
nop
ds
pop
cwtl
jb
xor
pushf
mov
iret
xor
mov
xor
or
jp
mov
adc
pop
push
gs
pop
add
hlt
xorb
add
jbe
outsb
push
ljmp
jae
mov
icebp
cmp
lods
pop
or
xor
and
in
add
mov
dec
pop
ret
and
pop
push
sub
inc
or
mov
enter
push
cmp
mov
inc
dec
inc
push
mov
ljmp
mov
jp
aam
or
pop
cwtl
pusha
lds
nop
pop
cwtl
mov
pushf
or
aaa
sbb
aad
mov
push
mov
inc
jno
nop
sbb
lods
add
push
or
inc
ds
and
or
or
mov
inc
push
cmp
pushf
in
popa
repnz
mov
jmp
pop
mov
gs
dec
jno
mov
mov
add
mov
call
jnp
pop
add
pop
stc
fsubrs
mov
or
add
sub
adcb
and
add
mov
bound
cmp
pusha
or
inc
sub
jp
mov
mov
dec
pushf
dec
mov
mov
sbbl
pop
or
loop
mov
in
jns
dec
or
inc
dec
fdivrs
lret
add
add
adc
pushf
add
mov
int3
mov
adc
sub
sbb
leave
sbb
mov
and
stos
push
sbb
jle
lock
addr16
adc
xor
or
push
jnp,pt
clc
jbe
ret
pop
xor
mov
mov
or
insb
dec
cltd
inc
and
ficoml
sbb
xor
inc
cmp
sub
mov
and
pop
xchg
test
xchg
cmp
jge
add
notb
push
xor
testl
inc
mov
dec
aad
pop
sub
aas
xor
bnd
test
xchg
or
dec
inc
fsubrl
jg
out
dec
adc
lret
mov
dec
arpl
pusha
xor
insb
or
mov
xchg
push
jnp
pop
jge
or
fnstcw
push
cli
enter
insb
adc
mov
out
pop
sub
jnp
and
loop
popa
inc
dec
inc
adc
js
test
repz
mov
mov
mov
leave
inc
adc
inc
add
fidivl
imulb
arpl
sbbl
adc
stos
sub
sub
ret
mov
dec
call
je
test
cmp
mov
adc
arpl
jo
arpl
in
xlat
adc
add
inc
inc
push
scas
in
or
inc
sti
add
push
add
inc
clc
sbb
or
push
inc
in
movb
adc
lds
negb
adc
sarb
bnd
mov
fnstcw
mov
cwtl
dec
sahf
pop
pop
inc
push
sbb
pop
push
andb
stos
call
mov
add
and
fst
pop
xor
daa
mov
sub
aam
push
mov
add
jmp
or
adc
hlt
hlt
cld
test
push
add
dec
mov
adc
hlt
sbb
pop
bound
sub
and
leave
mov
andb
mov
in
push
arpl
enter
cwtl
xchg
dec
xor
pushl
xlat
aaa
push
mov
sub
jb
inc
mov
mov
mov
inc
aam
decb
dec
jne
add
cmp
or
xchg
fistpll
sub
icebp
xlat
mov
clc
pop
ja
add
push
cld
adcb
xchg
inc
inc
fs
cmp
loope
movl
daa
repz
push
jbe
lods
sti
mov
or
in
frstor
js
mov
xor
mov
jge
call
fsubrl
or
popf
shll
sub
push
mov
push
dec
adc
rcll
or
push
cli
mov
mov
and
setne
mov
adc
xor
shrb
inc
cmp
lods
jne
add
sbb
addr16
push
or
js
adc
fistpl
cmpw
xchg
rorl
sbb
jmp
leave
jle
pop
imul
push
adc
pop
mov
andb
add
jbe
cmp
insb
dec
jne
push
jge
lods
popa
xor
ret
xor
insb
cmp
push
adcl
add
add
mov
test
push
mov
inc
jb
push
or
out
fmull
and
xor
push
mov
nop
add
sbb
adcl
test
mov
push
inc
push
sbb
orl
adc
cmp
in
das
mov
xor
fsubr
pop
mov
mov
xchg
mov
xchg
aam
clc
and
jle
subl
mov
push
int
shrb
adc
or
sarb
pop
repnz
xchg
mov
in
push
and
pop
js
sub
xor
les
inc
mov
push
les
popa
shl
or
add
inc
push
push
push
jns
aaa
testl
sysret
hlt
mov
xchg
stos
xor
sbb
imul
xchg
into
cwtl
adc
adc
icebp
gs
or
push
insl
das
fs
sarb
insl
add
fs
mov
add
or
add
add
push
pop
and
paddsw
subb
xchg
cmp
stos
mov
jae
scas
mov
jo
imul
fs
push
jnp
or
xor
dec
push
mov
fldt
xor
fstpt
cmc
push
add
insb
sbb
or
adc
inc
sbbb
imul
push
jo
arpl
js
xchg
push
push
jbe
in
andb
lcall
cld
dec
sbb
mov
lcall
sub
je
xlat
je
cmp
pop
push
aam
adc
dec
xlat
int3
pop
rol
mov
aam
call
dec
xlat
xor
pushf
aas
jl
pop
test
jmp
test
adc
dec
ja
cld
je
insb
xchg
cmpsb
jmp
ja
push
mov
inc
xchg
pop
cmp
shll
xor
cmp
adc
out
leave
xor
js
mov
adc
daa
mov
or
or
fstps
add
movsb
sbb
pusha
sbb
mov
fwait
xchg
int
or
lock
push
in
dec
xorl
dec
push
in
imul
fmull
pushf
insb
mov
cmp
or
sbb
rolb
int3
jae
sbb
out
xor
rolb
fcoms
push
mov
push
cmp
enter
or
pushf
mov
push
dec
jae
cmp
leave
out
xor
push
xorl
nop
push
or
ss
test
push
xorb
fstps
pop
cmp
and
xchg
push
mov
jmp
test
and
sahf
clc
add
xchg
in
roll
push
aad
push
push
mov
jge
sub
pop
sbb
dec
xor
push
add
adc
xor
or
pop
les
daa
sbb
addr16
ds
push
mov
adc
aam
sbb
inc
rorb
and
popf
sbb
cwtl
xchg
dec
xor
xchg
mov
and
push
fdivl
push
mov
popa
adc
pop
mov
sbb
cmpb
add
mov
mov
adc
pop
xor
xchg
pop
add
fdivs
sahf
or
jb
clc
lret
jno
and
mov
ss
pop
cli
push
fs
dec
dec
ja
adc
cmp
pop
and
mov
sbb
adc
mov
mov
das
es
pop
data16
or
insl
enter
imulb
xchg
xchg
or
and
js
sti
xor
xchg
xchg
cmpl
sbb
or
lods
mov
out
dec
sahf
mov
pop
push
mov
push
mov
movsb
xor
add
jb
js
in
fcoms
out
xlat
xor
and
xchg
add
inc
shrb
mov
enter
icebp
sub
and
jno
sub
out
clc
lea
pop
mov
mov
push
xchg
cmc
sbb
mov
add
movsl
fs
jmp
pop
inc
mov
push
pushf
push
in
lahf
test
sbb
cld
sub
and
or
mov
in
push
mov
xor
dec
mov
add
adc
xor
jbe
loopne
add
dec
jmp
test
adc
mov
lods
nop
arpl
rclb
push
cmp
adc
jns
cmc
push
push
aas
inc
mov
cli
push
fisubrl
add
push
or
or
cld
filds
lods
andb
pushf
aas
dec
imul
xchg
addr16
mov
cmp
test
lods
cs
shlb
mov
cs
cs
leave
addr16
inc
add
xor
sarb
aam
mov
mov
xchg
cmp
mov
add
mov
in
push
call
popa
jns,pn
int3
mov
les
insb
gs
jne
stos
outsb
test
push
std
inc
push
enter
lods
adc
add
outsl
je
cmp
inc
fs
jne
dec
jne
inc
into
jle
enter
or
outsl
fs
outsb
jns
xchg
dec
dec
jb
pop
outsl
jb
insl
jo
fidivs
insl
push
je
rsqrtps
and
inc
popa
je
adc
jns
inc
outsl
outsl
insb
pop
inc
jle
je
inc
jns
inc
cmp
faddp
getsec
mov
add
xor
hlt
add
pop
mov
adcl
jmp
or
ror
or
flds
add
add
fnsave
inc
cli
pop
or
int3
insl
mov
je
or
add
shlb
add
xor
jb
loope
movsb
test
mov
mov
insb
loopne
pop
sbb
pop
ja
adc
adc
aas
adcb
and
sbb
xorb
sbb
fildl
xchg
mov
aaa
inc
mov
jbe
push
inc
pop
fstps
adc
xchg
fwait
movsb
arpl
adc
inc
adc
xchg
or
arpl
mov
sub
test
sub
jb
shlb
bound
or
arpl
sub
push
loope
add
js
cwtl
sbb
sbb
arpl
push
inc
pop
popa
jns
imul
sub
bound
sbb
jge
repnz
inc
jb
mov
sbb
push
sbb
jb
insb
lret
int3
int3
mov
mov
das
xor
xor
arpl
test
test
push
outsb
sti
pop
arpl
pop
sub
cwtl
arpl
arpl
jo
arpl
and
arpl
sbb
rorl
or
fmull
es
push
pop
mov
int3
leave
add
shlb
pmulhuw
push
test
add
in
jno
iret
andb
in
mov
mov
enter
or
call
sub
call
mov
xchg
in
adc
jb
mov
lret
in
add
mov
out
ljmp
hlt
mov
icebp
add
xor
scas
and
pop
repnz
mov
fcmovb
shlb
and
mov
daa
and
sub
gs
jg
add
or
outsb
mov
sub
sub
mov
pop
add
mov
sub
cmp
je
dec
je
push
or
mov
or
dec
adc
dec
cmp
add
stc
jge
std
flds
out
das
std
mov
clc
mov
adc
das
push
sub
stc
hlt
mov
inc
ss
and
in
mov
imul
insb
push
call
sub
andb
lret
lcall
and
mov
nop
mov
negb
dec
ror
jge
or
insb
mov
rol
lcall
mov
fmul
push
shlb
push
rcrb
lds
sbb
movsl
inc
or
fsubp
add
add
lea
jmp
js
outsb
sub
fld
mov
mov
add
adc
lock
cmp
ret
nop
adc
or
movb
mov
add
das
and
adc
lea
xchg
xorl
lahf
ret
add
jge
scas
mov
add
xor
test
cmp
dec
jne
pushf
xchg
inc
mov
test
pop
jmp
jbe
in
bound
mov
in
sub
mov
addl
incl
mov
add
stos
push
push
cmp
ss
xor
xor
cmova
cli
xchg
das
lcall
adc
add
dec
mov
dec
clc
jmp
adc
push
ljmp
add
popf
add
push
imul
lea
mov
aaa
push
lea
fisubs
ss
test
nop
lea
insb
enter
inc
xchg
and
add
ret
add
seto
mov
mov
jne
inc
inc
inc
inc
shlb
arpl
push
jb
repz
and
lock
pop
subl
nop
add
jbe
push
es
into
out
or
jne
add
add
testl
mov
or
mov
add
test
inc
or
xchg
outsb
sub
inc
adc
les
outsl
or
data16
idiv
inc
jge
loopne
je
mov
jmp
pop
adc
rorb
cmpsl
add
cmpsb
or
and
or
mov
mov
jne
fadd
out
push
push
cmp
mov
pop
lahf
mov
fmull
inc
dec
enter
add
xchg
or
or
xor
xchg
faddl
call
call
shlb
dec
std
jl
jmp
insl
fisttps
cmp
in
outsb
mov
cwtl
or
cld
or
jg
insl
mov
sub
xchg
out
mov
insb
sub
call
sbb
in
cmp
mov
call
jmp
push
push
push
fs
add
nop
fwait
sbb
jnp
add
subb
xchg
xor
gs
sbb
decl
push
sbb
jb
call
add
or
ss
cmpsl
pop
xchg
incl
adc
cmp
pushf
addl
inc
icebp
data16
adc
mov
hlt
jmp
xor
lea
push
je
jmp
jp
add
inc
mov
jg
cmp
je
lods
jne
mov
movb
add
pop
jnp
dec
inc
add
addb
jo
push
add
add
xor
or
push
les
and
pop
mov
loopne
int
push
and
mov
pop
test
push
mov
mov
dec
or
or
push
and
inc
andl
cld
cld
fstcw
push
jae
cld
ret
lcall
pop
es
lods
hlt
xchg
call
or
lcall
xchg
psubsb
arpl
fcoml
mov
push
fsts
mov
pop
sbb
mov
clc
lcall
inc
mov
mov
inc
lret
popa
mov
pop
jns
into
mov
jle
lret
jb
aaa
insb
jnp
adc
dec
ret
iret
xchg
rcrl
fs
ret
test
mov
iret
jb
scas
xchg
das
aas
and
dec
in
and
push
adc
subb
fs
mov
fistl
in
inc
and
lret
ljmp
sbb
ret
pop
in
lods
mov
push
es
pop
out
pusha
sub
rorl
jle
aam
pop
rorb
movd
enter
aad
repnz
dec
shll
inc
rolb
push
jp
scas
ror
fnstenvs
push
shrl
or
and
add
xor
imul
xor
mov
mov
aaa
stos
cli
mov
adc
sti
cmp
pop
arpl
scas
mov
pop
xchg
fcoms
mov
daa
fmuls
mov
pop
cmp
sbb
sbb
fiaddl
push
push
mov
add
cmp
and
fucomp
add
lock
add
xchg
sbb
mov
add
mov
cmp
xchg
fs
in
shll
das
fs
cmp
loopne
movsbl
xchg
jne
fsubl
mov
fcomps
lds
aam
or
push
xchg
int
pop
and
int3
sbb
inc
enter
pop
repz
or
mov
rolb
ljmp
dec
jmp
jne
or
add
aaa
int3
add
pop
mov
idivb
ja
and
repnz
clc
mov
add
add
int
iret
shr
or
sub
ja
cmpsb
insl
mov
and
data16
mov
cmp
cs
fsts
in
pop
enter
mov
test
or
flds
cmp
nop
or
frstor
mov
and
xchg
xor
sbb
lods
pusha
lods
push
push
sti
ds
mov
adc
test
shll
dec
test
cmp
mov
mov
sbb
mov
in
pushf
sbb
push
jbe
sarl
cmp
and
dec
push
insb
xchg
lea
jmp
dec
nop
nop
and
je
cmp
daa
daa
ret
xor
adc
mov
in
aam
mov
les
xchg
add
inc
scas
add
dec
lds
sub
pop
out
add
and
in
in
add
jns
aad
aad
sbb
add
in
cmp
test
les
and
xor
ja
add
jb
add
aam
enter
loopne
sbb
loopne
andl
enter
daa
fs
cmp
push
sub
in
and
and
in
xor
iret
loopne
dec
and
nop
pop
push
xchg
daa
add
push
fsubrl
adc
imul
pop
ss
adc
sub
lcall
fsts
jge
add
jmp
fcomps
aaa
sub
and
add
mov
mov
adc
sbb
sbb
adc
and
adc
and
pop
dec
int3
pop
aaa
nop
sbb
sbb
lods
and
push
sbb
adc
in
mov
loopne
jecxz
mov
cmp
adc
mov
fcomps
adc
ss
cs
mov
lea
mov
shll
jb
int3
insb
test
inc
adc
enter
enter
and
lea
push
add
sub
in
fsin
sbb
cmp
dec
jg
fisubl
scas
or
int
adc
jmp
ret
mov
fistl
les
pop
adc
rclb
sbb
in
bound
mov
mov
fnsave
sbb
mov
test
xor
es
mov
push
adc
push
lods
adc
test
test
mov
or
mov
and
cs
orb
adc
and
sub
adc
aam
dec
in
adc
aaa
push
and
nop
sub
cmc
and
ljmp
add
fs
adc
enter
out
in
aaa
mov
or
cmpsw
mov
js
in
andb
loop
xchg
add
inc
insl
jo
jns
test
and
invd
push
test
aaa
push
insl
popa
adc
and
dec
push
dec
mov
push
pop
insb
add
cmp
repnz
outsl
jne
inc
inc
jne
jb
outsb
arpl
adc
ret
dec
push
inc
mov
jg
adcb
rorb
lret
pop
xchg
outsb
cmovnp
fs
mov
push
outsb
imul
sti
xor
testl
xor
push
cwtl
fldt
push
inc
jns
in
dec
sbb
jb
faddp
dec
add
and
inc
ss
iret
add
mov
push
ret
push
sti
mov
out
call
push
inc
fcoms
pusha
and
xchg
and
sub
test
and
jmp
cwtd
xor
in
ss
add
les
nop
cld
jmp
lea
and
lret
push
xchg
cld
movsb
add
jl
std
mul
or
lar
sbb
and
sub
xor
mov
popf
xchg
push
arpl
fs
and
fsts
xlat
adc
in
and
nop
inc
mov
inc
sbb
add
jp
fiadds
shlb
sub
dec
in
and
fwait
inc
outsb
jns
xchg
adc
and
cmovbe
out
xlat
mov
in
or
mov
add
filds
or
add
xor
mov
mov
leave
jbe
mov
sbb
clc
add
fists
mov
sti
cli
cmp
insb
dec
sbbl
decb
sbb
ja
ret
fsubl
pushl
repz
dec
add
fmuls
repnz
fdivl
aad
out
rcll
daa
inc
in
data16
pop
adc
push
xchg
xlat
push
mov
mov
clc
cltd
push
out
pop
cmp
cmp
je
jl
testb
adc
into
xor
add
cmp
add
pop
adc
push
xor
ja
inc
movsb
lea
add
or
inc
xor
mov
pushf
int3
pop
mov
xor
xlat
xchg
jge
adc
or
adc
adc
xor
mov
dec
repnz
push
sbb
lcall
push
mov
pop
mov
or
sub
xchg
or
mov
loop
add
sbb
jle
or
mov
lret
inc
xchg
jmp
imul
add
or
sbb
int3
cmp
test
jge
or
push
sbb
cwtl
sub
pusha
adc
sub
or
xchg
push
lret
clc
data16
test
inc
add
jecxz
adc
dec
dec
mov
in
aad
mov
es
push
mov
mov
dec
fmuls
sbbb
sbb
nop
pop
jle
loop
cmp
mov
test
dec
cmp
cmp
fmuls
lahf
cmp
and
lea
in
and
popa
fnstenv
jo
loop
inc
mov
xchg
daa
sub
jecxz
sub
dec
lahf
pop
nop
cmp
movsb
lock
test
nop
fists
xor
xchg
mov
insb
jmp
addr16
repnz
and
fucom
aad
imul
jns
iret
xor
js
jmp
or
mov
mov
sbb
pushf
sbb
leave
xchg
out
cmpsl
or
or
daa
iret
xchg
iret
mov
and
mov
and
mov
es
sbb
xor
mov
sbb
and
fildl
out
xor
stc
aas
in
aam
xchg
jl
xor
outsl
jmp
xchg
dec
test
fsubp
pusha
jp
push
mov
mov
xor
sarl
xchg
cmp
int3
xchg
in
pop
xchg
inc
fsubs
pop
xchg
sbb
test
in
dec
mov
mov
enter
add
fwait
push
in
dec
rcr
push
in
sti
add
popa
lret
fmul
cmpb
or
push
addl
fimull
add
loopne
push
mov
insl
jbe
dec
sbb
inc
shrb
loopne
daa
inc
inc
xchg
popa
push
and
sbb
sbb
jns
jp
out
cmp
inc
stos
or
cmc
or
bound
sbb
jp
or
adc
xor
xor
mov
cmpsb
or
add
or
dec
or
repnz
push
out
std
add
and
sbb
pop
push
subl
or
lds
pop
adc
dec
xchg
sbb
dec
mov
mov
jmp
mov
lds
lcall
test
icebp
and
fisttpll
pop
adc
lock
outsl
out
cs
or
cli
jb
call
push
sbbb
inc
sub
mov
in
mov
xchg
mov
insl
push
dec
in
sti
sbb
orb
push
mov
sbb
test
jmp
push
push
inc
push
sub
dec
add
out
loopne
push
stos
cmp
in
inc
or
cmp
or
fcomps
and
cli
or
pusha
andl
repnz
or
rcll
ljmp
inc
pop
sub
add
mov
sbb
pop
push
sub
dec
rcll
or
pusha
dec
sahf
or
sti
ja
inc
jno
xchg
jle
inc
or
mov
inc
jecxz
movsb
mov
je
cwtl
push
inc
fcompl
jl
je
adc
fdivrl
and
out
imul
cmp
les
add
testl
xor
pop
or
inc
aas
push
pop
push
inc
daa
add
inc
push
das
std
dec
les
lret
pop
mov
mov
xchg
or
leave
in
hlt
mov
pop
mul
push
dec
mov
or
test
jl
push
cli
sti
dec
or
xlat
push
or
push
or
and
sub
mov
ds
or
cli
push
lock
les
jl
inc
adc
es
leave
and
pop
subl
add
inc
test
inc
mov
sbb
aas
inc
push
adc
and
xor
pop
add
add
lcall
push
sub
sarb
and
mull
sub
add
scas
movsb
xor
loopne
jne
or
inc
outsl
and
je
fdivl
jg
add
call
out
and
mov
push
icebp
pop
testl
mov
add
pop
cmpb
or
cmc
insb
push
fidivrs
mov
xchg
fwait
mov
dec
vpcomuq
jo
insb
push
cmpl
or
out
cltd
mov
insl
mov
adc
or
nop
pop
cmpb
inc
pop
dec
push
fs
sbb
and
xor
add
fdivrs
adc
and
push
enter
inc
pusha
sub
pusha
add
insb
sbb
push
mov
mov
xor
daa
insb
sub
adc
or
mov
dec
mov
add
add
jp
sub
jo
mov
add
mov
out
push
add
cmpsb
fsubs
mov
mov
or
adc
add
add
inc
dec
jne
ljmp
mov
cmpsb
int3
cltd
push
insb
in
jl
add
fiadds
inc
shll
pop
mov
cmovb
fstps
lcall
adc
xor
or
push
pop
add
push
sub
inc
inc
fcmove
pushf
inc
add
jmp
adc
adc
ret
mov
aam
aam
mov
es
xor
inc
shrb
loop
cmp
incl
test
xlat
insb
incb
pop
jle
lods
jmp
movl
add
inc
mov
lock
mov
arpl
add
push
mov
add
ja
xor
adc
data16
lmsw
enter
cwtl
std
into
xchg
sub
mov
mov
rolb
loopne
das
les
sub
or
mov
jbe
enter
add
shlb
add
test
fnstcw
or
pushf
js
aaa
out
sti
inc
sub
movsb
mov
iret
add
jo
lea
decl
mov
scas
push
rcr
inc
sbb
mov
push
dec
jge
daa
xchg
jl
mov
aam
add
rorl
mov
inc
push
lds
mov
push
or
int
xchg
xchg
mov
in
or
nop
push
pop
mov
mov
fidivl
les
cmp
lret
cmc
push
in
int
in
push
dec
fbld
lret
and
insb
inc
mov
mov
sti
mov
or
add
addr16
or
pop
mov
mov
pop
leave
and
sbb
in
adc
mov
ss
xorl
fwait
in
stos
lods
mov
pop
pop
dec
inc
je
nop
pushf
xchg
dec
push
das
sub
jb
test
mov
test
in
ret
xchg
adc
mov
mov
movsb
cwtl
xor
orl
add
mov
push
fstpt
into
aaa
push
arpl
jo
outsl
arpl
adc
cwtl
jae
add
push
or
sub
xor
xor
fs
push
xor
ss
lods
mov
cmp
outsl
out
scas
and
push
jne
gs
inc
jne
inc
jns
jbe
pop
pop
inc
jae
push
insl
push
stc
pushl
gs
inc
inc
inc
fs
jae
data16
imul
adc
outsb
mulb
xor
push
add
insl
adc
ljmp
xchg
je
icebp
sub
cs
imulb
mov
push
fnstcw
mov
add
gs
popa
push
je
fucomi
scas
push
or
das
arpl
jae
add
mov
inc
in
push
sub
jne
push
inc
sub
outsb
adc
test
push
arpl
arpl
or
test
outsl
and
jl
arpl
jae
insl
mov
sbb
jns
mov
nop
out
cmpsb
add
push
das
outsb
das
insl
and
jo
imul
dec
add
push
or
xor
cltd
adc
outsb
push
xchg
xor
sub
adc
jne
insb
loop
insb
adc
arpl
inc
js
pop
gs
stos
jbe
mov
ret
imul
dec
pop
add
and
cmp
daa
imul
or
inc
inc
jae
or
push
shrb
xorl
mov
inc
jg
movsl
adc
out
outsb
and
pop
push
or
sub
dec
leave
pop
addr16
or
pop
adc
je
push
push
addr16
outsb
mov
js
mov
mov
or
push
sbb
add
mov
addb
inc
sbb
adc
fsubs
mov
add
add
mov
mov
and
sub
int3
enter
enter
fcomp
fxch
andb
loopne
jecxz
in
das
add
movsb
imul
arpl
out
sti
fbld
jg
push
jne
je
insl
and
and
mov
and
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
ficomps
jp
dec
pop
add
pusha
adc
flds
push
or
dec
add
pop
or
gs
add
cmpsb
popa
dec
push
adc
dec
aas
in
jg
inc
roll
pop
es
adc
and
add
xor
inc
imul
imul
imul
cmpsb
imul
shrl
cmpsb
hlt
cld
add
or
dec
shll
cmp
sbb
stos
add
add
sub
enter
pop
test
popa
and
pop
cmp
cmp
mov
mov
leave
xchg
cmpl
sbb
and
cwtl
pop
lods
add
daa
dec
or
push
pop
and
pop
fbstp
faddl
push
xor
rcrl
imul
cmpsb
imul
lcall
and
cltd
bound
arpl
addb
nop
mov
dec
aaa
dec
imull
add
inc
mov
or
pop
add
arpl
xchg
fcompl
adc
and
jo
mov
pop
mov
sbb
sub
mov
je
mov
pop
iret
pop
test
jnp
cmp
arpl
xor
bound
das
test
add
fucomp
mov
and
sub
push
xchg
icebp
mov
dec
pcmpeqb
pushf
pop
mov
or
xchg
pop
lods
adc
or
mov
pop
mov
pop
xlat
jne
hlt
add
pop
xchg
outsl
pop
pop
int3
scas
cmp
cld
pop
xor
jnp
fwait
lods
pop
cmpsb
jmp
jmp
insb
pop
inc
or
lods
sahf
fsubl
mov
das
arpl
fucomp
adc
jae
or
pushf
or
shrl
pop
ret
pop
jmp
aas
xor
imul
int3
pop
fisttps
xlat
xor
aas
sbb
or
add
pop
fs
pop
lods
add
adc
mov
adc
or
and
add
mov
adc
sub
pop
subb
add
add
add
dec
add
add
mov
push
pop
or
mov
dec
add
dec
dec
dec
inc
dec
dec
dec
sti
data16
inc
dec
dec
sub
add
pop
inc
enter
add
jmp
movsb
jnp
push
addb
rolb
pop
pop
adc
add
call
mov
add
and
inc
and
add
aaa
fnsave
incl
push
add
je
push
jne
outsb
add
dec
add
jbe
and
add
add
or
push
scas
mov
pop
adc
and
xchg
jne
xchg
jb
inc
or
in
int
and
add
test
arpl
push
jo
mov
lea
mov
jns
dec
mov
movb
or
or
mov
je
push
aaa
je
insl
add
jmp
bound
dec
push
adc
pop
mov
jmp
dec
or
adc
sti
fisubs
pusha
adc
mov
add
pmaxsw
or
std
add
add
cmpsl
or
mov
lret
and
jb
pop
xlat
jne
outsl
add
sbb
and
mov
jne
imul
adc
out
jnp
add
and
mov
sub
or
daa
sbb
cs
in
test
dec
add
pop
ret
test
pop
test
add
cltd
jge
lock
aaa
aaa
push
inc
imul
or
pop
pop
pop
jne
popf
cmp
jb
jge
cmp
add
jne
imul
int
jae
out
jne
lock
fstps
sarb
mov
dec
aaa
jbe
insb
jmp
in
lock
jo
lock
sbb
and
xor
xchg
popf
jg
aas
outsl
cmp
xorb
fwait
xchg
sub
sub
or
xor
outsl
jae
outsb
or
fcoms
fldlg2
xor
sub
sub
adc
cmp
lret
fdivl
add
gs
adc
pop
dec
addr16
out
popa
enter
push
or
insl
daa
xor
mov
fcoml
jmp
xchg
push
jo
outsl
out
test
cli
sbb
push
jg
xor
dec
rolb
and
lea
jb
xchg
sbb
ljmp
inc
xchg
mov
sbb
jns
pop
and
neg
dec
pop
inc
scas
shlb
outsl
sbb
imul
push
out
pop
arpl
shll
movb
xchg
sub
cmpsb
loope
aaa
outsl
test
dec
pop
xor
add
adc
adc
pop
mov
nop
sub
sbb
and
adc
or
add
imul
mov
jb
sub
mov
je
push
xor
push
fbld
and
xchg
sub
pop
and
adc
insb
ss
in
or
out
add
adc
das
imul
cltd
xor
pop
insl
pop
push
jae
lcall
insl
push
xor
fcomps
repz
scas
sbb
sti
push
andw
adcl
dec
jae
dec
push
fbstp
icebp
loopne
sti
add
pop
out
or
add
and
andl
adc
adc
test
daa
mov
dec
bound
sbb
xchg
jp
dec
cmp
sbb
imul
imul
mov
jmp
lret
inc
mov
ja
fcoms
flds
inc
fbld
pop
outsl
outsl
mov
jns
outsb
sub
imul
outsb
fcoml
pop
std
gs
in
int
mov
arpl
mov
adc
dec
sti
adc
sbb
sub
jnp
loop
aas
cmc
ja
pushf
and
jp
xlat
adc
push
test
adc
adc
xor
dec
sbb
mov
pop
adc
adc
sub
pop
aas
xor
pop
sub
pop
aas
mov
push
and
aas
lret
cmp
aaa
mov
pop
fwait
cmp
andb
daa
insb
outsl
popa
add
add
xchg
and
push
adc
mov
imul
or
or
imul
sub
sbb
add
or
xchg
sub
sbb
inc
mulb
add
sub
cwtl
jnp
popa
add
sbb
push
gs
or
std
push
inc
dec
ljmp
lods
push
or
cmc
jne
gs
push
fs
mov
jbe
je
sub
push
je
xlat
push
cmpsb
inc
mov
push
imul
cmp
jns
adc
push
jle
jle
in
imul
gs
jbe
inc
push
inc
fwait
jmp
imul
int
adc
jp
add
mov
cltd
dec
jae
in
jae
or
push
push
push
adc
and
sbb
adc
push
jb
add
inc
fs
jae
adc
adc
mov
sbb
pusha
cltd
outsw
andps
push
fld
or
mov
insl
adc
cmovae
or
pop
sbb
outsl
ja
test
xor
add
je
cmovae
pusha
int
int
inc
outsb
jne
inc
jge
xor
int
pop
jb
jge
mov
lahf
pop
xor
outsl
insl
mov
sbb
lock
popa
lahf
xor
mov
add
popa
mov
mov
adcb
and
gs
sbb
es
ljmp
out
dec
imul
pushw
outsl
dec
lods
fs
xchg
cmp
adc
sbb
or
out
jo
or
sbb
jo
cmp
js
pop
cwtl
fcomps
cs
xchg
adc
fadds
rorb
outsb
push
shlb
adc
xor
mov
pop
xlat
cmovne
dec
data16
push
xor
cmp
or
add
jbe
imul
mov
jbe
arpl
pusha
inc
nop
insl
mov
push
in
cmp
adcb
cmp
dec
gs
insb
ss
sbb
mov
bound
adc
push
enter
mov
adcb
inc
outsl
jne
mov
sbb
adc
mov
push
sbb
mov
pop
or
fsubs
push
into
bound
adc
mov
sub
sarl
mov
in
in
or
inc
insb
addr16
jmp
and
arpl
mov
in
adc
arpl
jae
data16
mov
xor
push
lods
jno
bound
dec
sub
dec
scas
mov
dec
aaa
inc
adcl
jnp
cmp
jb
add
test
mov
dec
add
add
pop
inc
sub
popl
mov
dec
adc
jbe
jnp
or
adc
pop
add
push
xor
adc
xor
or
or
mov
imulb
pop
adc
das
inc
pop
mov
pop
rclb
and
mov
mov
add
sbb
inc
inc
xlat
inc
aaa
movsb
and
aaa
fsub
pusha
inc
inc
push
inc
mov
adc
daa
aam
nop
out
jae
push
push
icebp
or
pusha
inc
daa
jbe
cmc
sub
popa
add
jmp
daa
or
sbbl
dec
dec
repz
or
jb
daa
nop
subl
and
ret
daa
adc
rcrl
es
daa
sub
pop
dec
bound
pop
jb
add
add
inc
out
add
dec
add
incl
add
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lock
inc
add
push
inc
add
add
add
add
add
pop
add
add
add
add
mov
add
enter
or
add
clc
add
orb
add
push
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
pop
ret
add
call
add
add
add
add
add
xor
add
mov
add
add
add
add
add
add
add
add
add
mov
adc
add
add
add
add
add
push
add
sldt
or
add
xor
add
pop
add
cmp
add
addb
cmp
add
test
add
rolb
add
add
add
add
add
add
add
add
add
and
add
call
add
add
add
add
add
add
add
add
add
dec
add
add
add
in
add
add
add
add
add
add
add
jo
add
pusha
fadds
add
add
in
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
call
loopne
add
add
add
add
add
add
sub
add
add
addb
addb
add
add
add
add
add
add
add
add
add
xor
add
jo
add
adc
add
in
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
dec
add
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
and
add
add
in
add
add
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
add
add
fadds
add
and
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
and
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
xor
xor
inc
dec
dec
inc
enter
add
add
add
add
add
add
or
sub
add
xchg
add
jge
add
sbbb
andb
and
mov
add
xchg
mov
xor
mov
add
lahf
mov
add
xchg
movb
xchg
rolb
xchg
ret
add
xchg
leave
add
lcall
or
into
add
popf
roll
daa
pushf
lds
cmp
mov
aam
or
rolb
adc
flds
sbb
movb
cmpsb
movl
and
fiadds
sub
roll
aas
scas
roll
cmp
aad
and
fldl
xor
faddl
cmp
mov
loope
daa
mov
add
loope
xor
loope
cmp
loope
aas
mov
out
inc
stos
lret
lods
lret
stos
into
add
into
add
rolb
inc
mov
add
fadds
inc
mov
add
add
fldl
dec
mov
rolb
push
mov
add
fiadds
outsl
mov
jecxz
inc
mov
loope
dec
mov
ljmp
mov
out
pop
mov
in
cmp
loope
jl
flds
inc
out
dec
ret
dec
iret
out
dec
out
add
ljmp
shl
push
shl
pop
shl
pop
iret
out
push
ret
jmp
push
shr
push
jmp
pop
ret
jmp
push
leave
call
add
call
add
in
add
in
add
repnz
repnz
add
testl
fs
in
imul
add
out
arpl
in
add
ljmp
enter
lret
outsb
int3
out
add
in
je
out
jp
out
jno
in
add
ljmp
fucomi
add
in
add
in
add
repnz
repz
hlt
add
incl
pusha
shl
add
icebp
add
lock
add
sti
add
stc
add
incl
imul
std
add
add
add
incb
jbe
repnz
lock
add
lock
repnz
cli
add
incl
jb
incb
je
std
add
std
add
add
incl
jg
cld
add
cmc
add
cli
add
add
incb
jns
cli
add
incb
jl
incb
jl
std
add
incb
jns
std
add
incl
jle
cli
add
shr
add
fldln2
add
out
add
fdiv
add
fdiv
add
add
loopne
add
out
add
std
add
call
incl
test
incb
mov
incb
mov
incb
pushf
in
add
in
add
in
incb
lcall
add
out
incl
xchg
incl
mov
incb
mov
incb
mov
incb
mov
incb
nop
repnz
xchg
repnz
nop
idiv
add
repz
xchg
clc
incb
xchg
stc
incb
xchg
cld
incl
xchg
cld
incl
fwait
std
incl
mov
in
add
sti
add
jmp
repz
ljmp
mov
cld
add
icebp
incl
mov
std
incb
mov
sti
add
std
incb
mov
jmp
add
in
std
add
out
incl
ret
hlt
std
add
lock
int3
icebp
incl
leave
idiv
add
std
incb
enter
shl
incb
std
add
incl
fdivr
incl
out
incl
out
idiv
add
std
incb
ljmp
add
incl
incl
add
add
add
add
or
add
add
add
das
sub
sbb
push
add
add
add
push
push
push
adc
add
add
add
mov
insb
pop
dec
cmp
add
adc
xchg
lahf
lahf
mov
xchg
and
add
adc
mov
mov
mov
andl
or
add
xor
mov
mov
lret
movsb
mov
mov
mov
inc
sub
and
sbb
out
enter
lret
lret
lret
int3
int3
int3
lret
sarb
mov
andl
adc
int3
int3
int3
int
int
int
int
lret
sarb
mov
lea
adc
int3
into
rcl
aam
aad
aam
int3
int3
lret
lret
lret
rol
sarb
dec
add
add
adc
int3
int
aam
aad
aad
aam
int
int3
int3
int3
lret
int3
lret
rol
lret
rol
adcb
add
sbb
xor
aam
aad
aam
into
into
ror
int
int
int
int3
lret
int3
int3
lret
int
adcb
add
sbb
es
call
aam
aam
ror
aam
rcl
rcl
int
int
int
rcl
rcl
mov
add
sbb
daa
jmp
aad
aad
rcl
rcl
aam
aam
aam
aam
into
rcl
aam
int
sub
add
adc
xlat
fcom
xlat
xlat
aad
rcl
aam
xlat
aad
aad
xlat
xlat
into
roll
adc
fsub
fcom
fcom
xlat
aad
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
fcom
xlat
xlat
aad
cmpb
add
fcomp
xlat
fcom
xlat
fcom
fcom
xlat
fcom
fcomp
fcomp
fcomp
fcomp
fcomp
xlat
aad
cmpb
add
adc
out
out
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fsub
fcomp
fcomp
fmul
mov
sbb
pop
ljmp
fsub
out
fsub
out
out
out
out
out
out
iret
lds
add
add
popa
jae
ret
out
out
out
out
out
out
out
out
out
out
out
out
enter
add
jae
shl
ljmp
out
out
out
out
out
out
out
ljmp
add
je
stos
out
hlt
jmp
jmp
jmp
repz
ljmp
jmp
jmp
jmp
jmp
mov
adc
adc
stos
std
std
cld
sti
clc
div
hlt
repz
repz
repz
les
add
add
add
sbb
ss
loop
std
std
cld
repz
repz
repz
repz
hlt
hlt
hlt
div
hlt
repz
fldt
add
adc
aad
popf
pop
xor
sbb
pop
in
cld
div
div
div
div
hlt
div
div
imul
cmp
add
add
xlat
xlat
fcomp
xlat
fcom
movsl
arpl
in
cld
clc
clc
sti
sti
sti
sti
clc
clc
sti
sti
clc
clc
clc
jmp
add
add
add
fcomp
fsub
out
out
fcoms
std
std
std
cld
cld
sti
cld
cld
cld
cld
cld
cld
out
jecxz
std
adc
add
fsub
fcomp
out
out
xlat
fcoms
ss
push
sti
cld
std
cmc
lock
sbb
adc
out
fsub
out
fcomp
out
fsubs
adc
lods
mov
ljmp
add
add
add
fcomp
fsub
fcomp
fsub
repz
jmp
fcom
movsl
jl
xor
jle
insl
pop
pop
pop
add
adc
fcomp
fcomp
fsub
jmp
lods
test
idiv
clc
div
jmp
mov
fs
add
ljmp
lods
insl
dec
add
adc
outsb
jp
loopne
cld
clc
pop
add
sbb
jmp
ja
adc
adc
add
test
test
add
cs
inc
pop
adc
incl
incl
incl
incl
incl
incl
incl
incl
incb
jg
incl
incb
pop
incl
incb
add
incl
incb
add
incl
incb
add
jg
add
incb
add
pop
incl
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
incl
cld
add
add
incl
cld
add
add
incl
cld
add
add
incl
cld
add
add
incl
cld
add
add
jg
xchg
cld
add
add
jg
xchg
cld
add
add
jg
xchg
cld
add
add
jg
xchg
cld
add
add
jg
xchg
cld
add
add
jg
xchg
cld
add
add
jg
xchg
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
incb
add
add
add
incb
add
add
add
incl
pop
clc
pop
incl
incl
ud0
incl
inc
pop
incl
incl
incl
incl
incl
incl
incl
hlt
jecxz
add
add
add
add
xor
add
add
add
add
in
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sub
add
add
xor
xor
xor
xor
xor
xor
inc
add
add
adc
add
add
jb
je
add
jae
add
add
mov
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
or
and
insl
gs
outsl
push
outsl
data16
popa
jb
cs
imul
insb
insb
cs
outsl
outsb
je
arpl
or
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
ds
jae
jb
jo
imul
outsl
ja
and
gs
insb
cmp
fs
jb
jo
imul
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outsb
fs
je
jae
gs
bound
or
gs
outsb
fs
arpl
or
jae
gs
bound
or
add
or
add
aam
add
adc
and
add
and
add
clc
and
add
das
add
add
add
cmp
add
dec
add
pop
add
push
add
test
add
add
add
xchg
add
add
add
mov
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
popa
jb
popa
outsb
je
outsl
jo
add
add
popa
jb
gs
inc
add
add
das
adc
inc
sub
dec
cmp
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
ljmp
xchg
pop
movsl
dec
adc
or
mov
adc
inc
push
loopne
lcall
inc
popa
fcomps
test
loope
pop
repz
sub
xor
push
std
mov
mov
out
adc
ja
es
xchg
jge
outsl
sbb
sahf
jbe
pop
out
mov
pusha
pop
imul
mov
lret
sub
dec
xchg
adc
add
xor
sub
dec
add
ret
xor
fwait
sbb
lcall
sbb
xor
sub
mov
dec
ret
fwait
lcall
and
and
fwait
jecxz
sub
sub
mov
sub
lcall
mov
fwait
and
lcall
lcall
out
sub
sub
fwait
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
and
adc
ret
std
cmp
inc
mov
lret
sub
sub
fwait
xor
bound
cmp
add
ret
lret
sub
sub
or
xor
fwait
xor
adc
inc
sub
mov
sub
sbbb
and
and
lcall
lcall
ret
or
or
lods
jb
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
add
dec
mov
dec
stc
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lods
mov
fdivrs
inc
pop
iret
sub
add
fmuls
mov
cltd
mov
hlt
fwait
mov
xor
push
dec
push
inc
mov
push
mov
mov
add
mov
jb
dec
add
mov
cmp
leave
mov
add
sbbl
add
xchg
pop
test
jmp
mov
mov
add
stc
shrl
daa
mov
jns
sbb
aad
mov
mov
stos
xor
mov
fdivl
pop
cmp
inc
loope
xchg
pop
test
lock
xor
cmp
mov
leave
mov
push
mov
mov
add
cmc
jo
pop
mov
add
cmp
fdiv
sbb
imul
adc
mov
mov
mov
sub
mov
lret
sub
sub
fwait
xor
adc
fcmove
inc
push
and
ret
cltd
lcall
and
cmp
fwait
sbb
stos
dec
ret
inc
sub
cmp
fstps
lret
sub
dec
jb
and
lret
cltd
xor
lret
xor
repz
cwtl
cmp
mov
ret
in
xor
sub
bound
or
arpl
xor
sub
mov
lret
sub
sub
fistpll
stos
adc
sub
xchg
ret
ljmp
sub
fwait
xor
adc
inc
sub
cmpl
daa
stos
ror
mov
fwait
fwait
and
fwait
xor
adc
inc
pop
stos
cmp
lret
inc
mov
push
jmp
sub
mov
fwait
fwait
sub
fwait
add
adc
imul
lcall
shlb
mov
sub
fwait
xor
adc
imul
cmp
lock
enter
lahf
sbb
mov
xor
mov
sbb
xor
push
stos
inc
sub
dec
inc
mov
jecxz
mov
fwait
gs
sbb
lcall
or
sbb
sub
inc
enter
cmp
cwtl
fwait
add
and
fdivl
xorb
sub
dec
inc
mov
jecxz
mov
fwait
gs
sbb
lcall
or
sbb
sub
inc
enter
pop
sbb
mov
xor
mov
sbb
xor
aaa
stos
inc
sub
dec
inc
mov
jecxz
mov
fwait
gs
sbb
lcall
or
imul
adc
ret
pop
sbb
mov
xor
mov
sbb
xor
xor
mov
dec
inc
mov
jecxz
mov
fwait
gs
sbb
lcall
or
imul
cwtl
cmp
roll
ret
mov
add
mov
xor
mov
sbb
xor
xlat
stos
inc
sub
dec
inc
mov
jecxz
mov
fwait
gs
sbb
lcall
or
imul
cmp
jb
enter
jle
cwtl
fmuls
or
jne
fs
and
lcall
lcall
ret
mov
adc
jae
nop
sarl
xor
and
mov
lret
mov
cmp
and
lcall
inc
cmp
jnp
ret
lret
sub
imul
xor
xor
scas
adc
ret
sub
lcall
fsubl
and
sbb
adc
add
inc
mov
push
xor
fwait
lcall
and
and
cltd
and
lcall
lcall
ret
xor
lcall
fwait
and
lcall
lcall
ret
fwait
sarb
or
mov
cltd
xor
xchg
stos
inc
sub
mov
ret
ret
sub
sub
fwait
add
xor
adc
subl
inc
mov
lret
jbe
lcall
and
and
lcall
mov
push
mov
adc
jno
cmp
mov
stos
hlt
fwait
inc
sub
push
ror
sbb
fildl
or
xorb
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
inc
xor
cmp
fwait
fs
cmc
and
and
orl
cmpsl
punpckhwd
popa
subb
jp
xchg
lcall
xor
fwait
xor
adc
inc
sub
sti
jecxz
ret
fwait
lcall
and
add
xor
xor
lcall
ret
fwait
sahf
and
and
and
lcall
lcall
jmp
loope
mov
cmp
jnp
and
roll
or
lret
inc
mov
lret
mov
mov
sbb
xor
fimuls
mov
int3
shrl
stos
lcall
ret
add
mov
and
fwait
out
or
lods
lcall
js
pop
mov
mov
fwait
out
and
and
cltd
xor
mov
inc
sub
mov
movl
cmp
mov
fwait
negb
xchg
aam
sub
mov
mov
push
dec
add
lcall
or
cmp
loopne
adc
imul
repnz
ret
cltd
lcall
and
and
lcall
ret
push
dec
les
pop
lahf
or
xor
and
lcall
pop
adc
call
xor
ficompl
fwait
lahf
jmp
or
xor
fwait
xor
and
lcall
lcall
les
pop
pop
sub
fwait
int3
sbb
adc
inc
jmp
lcall
ret
xchg
lcall
sub
mov
xor
sub
lcall
mov
lcall
icebp
and
lcall
icebp
cmp
ret
ljmp
or
xor
fwait
xchg
fwait
and
mov
rcrb
mov
jmp
lcall
xor
xorb
and
rclb
mov
mov
jo
loope
xor
fwait
lcall
dec
xor
dec
fwait
mov
sub
push
mov
lret
sub
push
and
xor
and
lcall
lcall
ret
stos
lcall
add
and
jecxz
or
inc
sub
lcall
mov
lcall
adc
mov
clc
and
lcall
dec
aas
mov
mov
mov
push
adc
mov
int3
dec
punpcklwd
jp
adc
add
inc
sub
push
cmp
movsl
jnp
lret
sub
out
je
popl
data16
and
inc
pop
stos
mov
or
ret
lret
sub
lcall
mov
fwait
dec
xor
sub
mov
lret
sub
mov
cmc
fcoml
test
repnz
lret
push
mov
sub
cmpl
stc
dec
lcall
mov
add
cmpb
dec
mov
inc
mov
lret
cltd
mov
or
xor
orb
add
rol
mov
fwait
popa
shrl
sbb
sbb
xorb
stos
lcall
mov
cmp
lcall
or
adc
xor
lcall
sarl
add
cmp
or
or
xor
popa
orb
add
sub
mov
dec
sub
pusha
dec
sub
and
and
fldcw
and
push
lcall
inc
cwtl
mov
and
mov
mov
or
enter
test
nop
add
sub
mov
popa
lock
mov
add
mov
leave
sub
cmp
and
lcall
ret
cltd
lcall
sub
and
lcall
nop
test
loope
xor
fwait
pusha
pusha
sub
sbb
xor
and
mov
sub
sub
or
mov
sub
mov
cwtl
pop
popa
mov
add
and
and
sub
cmp
subb
sarb
pop
loope
test
lock
or
xor
popa
orb
and
sub
mov
dec
sub
test
cltd
mov
lcall
cmp
mov
stos
adc
inc
rclb
sub
cmp
jmp
fwait
lcall
and
and
gs
in
aam
sub
mov
lret
sub
sub
fwait
xor
jne
or
lods
and
push
dec
std
cld
xor
cld
aaa
std
lret
mov
xor
adc
cmp
inc
jbe
lret
insl
jo
gs
sbb
xor
sub
mov
lret
add
fwait
fwait
adc
and
pop
sub
sub
cmpb
inc
data16
or
xor
cmp
cwtl
fwait
fs
and
sbb
xor
sub
jmp
fwait
dec
ficoml
sub
mov
fisubs
int3
jb
stos
lcall
add
fwait
movsb
mov
mov
adc
cltd
xor
mov
stos
in
addl
test
repz
lret
add
sbb
or
shll
fwait
and
cwtl
arpl
sub
xor
testb
or
fwait
fwait
adc
and
mov
dec
sub
jle
repnz
inc
jle
dec
shlb
xor
sbb
inc
xor
fwait
or
stos
adc
inc
sub
mov
pop
add
sub
sub
addr16
fwait
or
stos
adc
cmp
call
lcall
xor
xchg
sbb
stos
adc
inc
rcrl
xor
lret
mov
lcall
outsb
movsl
negl
fcompl
cs
insl
gs
int3
ret
mov
hlt
call
lcall
xor
aad
jg
cmp
adc
rcl
add
inc
cmpsb
test
aad
sbb
cltd
fwait
push
dec
mov
sbb
pop
and
sub
sbb
dec
shlb
mov
adc
test
and
or
sub
lret
ret
xchg
inc
pop
inc
pop
xor
mov
icebp
test
add
cmpsl
sub
lds
jl
sub
mov
mov
xchg
ja
lret
cmp
sbb
dec
shlb
sbb
sbbl
xor
mov
and
or
sub
xchg
fildl
scas
mov
sbb
xchg
and
and
lcall
xor
dec
inc
mov
xor
lcall
mov
mov
stos
jg
in
lock
inc
add
ror
ret
pop
xor
aad
fwait
xor
adc
inc
jbe
jl
bound
ror
int3
sbbb
mulb
int
sbb
jnp
adc
cs
or
and
lock
xor
or
or
jl
fwait
and
movsb
xorl
out
stos
mov
sub
xor
movsb
pop
dec
pop
int3
xor
sub
sub
fucomip
or
je
mov
mov
or
stos
adc
stos
lcall
xchg
pop
inc
pop
xor
pop
lds
mov
inc
inc
or
repnz
inc
mov
cmp
outsl
add
std
dec
cld
insb
mov
xchg
orl
adc
dec
sub
ljmp
lcall
int
sub
xorl
dec
inc
mov
lret
lea
add
and
and
lcall
sbb
lret
jge
and
ret
fcomp
sbbb
int
xor
sbb
xor
stos
add
cmp
xchg
std
xchg
sti
xchg
and
and
sti
fadds
cwtl
stos
push
dec
mov
stos
gs
movnti
dec
add
mov
inc
stos
and
jns
subb
adcl
cmp
addr16
fldenv
xchg
sub
cmpl
cltd
lcall
or
and
sbb
mov
sbb
cmpsb
out
dec
xchg
call
pop
inc
mov
iret
ds
fmuls
icebp
inc
jbe
jg
xchg
jmp
jb
cltd
lcall
or
and
push
test
sub
lret
ret
xchg
inc
pop
inc
pop
xor
popa
mov
cltd
xor
sbb
sarl
inc
int3
sbb
cwtl
fwait
xlat
add
pop
and
pop
js
jns
je
dec
cmp
jecxz
sub
inc
lock
test
mov
enter
into
xchg
sub
lea
push
mov
inc
xor
fsubrs
cltd
fwait
je
data16
pop
xor
js
aad
mov
dec
scas
pop
lods
xor
adc
pop
and
jg
and
lcall
jo
lods
jmp
xchg
imul
es
mov
xor
mov
and
and
jmp
fwait
add
mov
jg
lds
insl
pop
addb
mov
push
enter
pop
stos
cwtl
or
fwait
inc
add
fwait
mov
inc
imul
sbb
dec
shlb
xor
add
and
out
fwait
and
lret
dec
mov
jl
pop
aam
xchg
and
jb
lock
rorl
adc
or
jg
inc
das
std
sub
xchg
stos
lcall
mov
or
adc
xor
fsubl
repnz
xor
pushf
inc
imul
dec
push
cmp
icebp
xor
xorl
sbb
sub
int
jg
cltd
and
lea
gs
stos
ret
mov
cmpsb
test
aad
sbb
cltd
fwait
js
push
dec
mov
adc
int3
sub
mov
clc
xchg
imul
cmp
lcall
and
aas
mov
fistpl
fnstcw
fildl
cmp
data16
fwait
leave
xchg
divl
sub
dec
and
fwait
int3
xor
and
lret
add
fcmovne
ret
cmp
gs
jb
sbb
and
popf
enter
mov
shl
mov
lret
shl
insl
cmp
xor
cltd
mov
pop
icebp
lods
xchg
sub
add
mov
rol
xor
xor
sub
sbb
xor
mov
stos
dec
lods
push
pop
xor
pop
icebp
dec
dec
sub
push
popf
jno
enter
fisubl
xor
mov
stos
jg
test
add
imul
sub
xchg
sbbl
aam
xor
and
test
aam
or
sub
cmp
inc
mov
fwait
divb
cmc
mov
dec
pop
popf
and
mov
lret
pop
out
test
fwait
lcall
or
mov
scas
das
push
mov
lods
add
or
lcall
fwait
and
lcall
repnz
xor
sub
mov
insl
movsl
mov
sbb
or
sbb
sub
cmpl
loopne
and
fwait
lcall
and
sbb
xor
sub
mov
add
sub
cltd
xor
movsl
pop
lock
test
dec
imul
sub
sub
fbld
sub
sub
xor
push
xor
fs
mov
aam
sub
lahf
outsl
pop
jl
cmp
push
stos
lcall
cld
sbb
enter
add
fdivl
rcrb
and
movsb
xorl
adc
push
mov
lret
inc
icebp
ds
xor
or
mov
mov
sbb
adc
and
ret
fwait
sbb
popf
stos
cwtl
or
mov
test
rcrl
xor
lret
adc
xor
mov
add
sub
repnz
adc
jecxz
les
xor
or
pop
dec
mov
or
cmp
xchg
imul
ret
in
xor
lock
xor
or
sub
mov
dec
xor
out
sub
stos
pusha
enter
sub
loop
dec
std
cld
cld
std
std
dec
cld
insb
inc
push
inc
std
outsl
xlat
incl
push
lds
dec
pop
sti
ret
sbb
lcall
fwait
and
lcall
scas
or
inc
push
repnz
sbb
sub
xor
fwait
and
lcall
mov
ret
lret
sub
js
or
rcrl
xor
sbb
lcall
lcall
sti
xor
dec
mov
lcall
fisubl
xor
adc
jecxz
stos
lcall
ret
ficompl
sahf
mov
jb
and
mov
stos
iret
jnp
inc
xchg
ror
out
fwait
lcall
and
je
xor
and
sub
cmp
adc
ret
lret
sub
sub
or
pop
xor
sahf
fcomps
inc
leave
loop
cmp
mov
sub
lcall
jnp
fwait
shlb
xor
stos
lcall
jo
cwtl
icebp
sub
ljmp
and
sub
cmp
mov
stos
lcall
pop
xor
fwait
lcall
mov
fwait
and
pusha
push
mov
push
push
mov
cwtl
ret
lret
shlb
mov
nop
cmp
leave
pusha
sbb
and
xorb
push
popa
xor
fwait
lcall
add
popa
pop
sub
and
push
test
dec
lret
shlb
mov
sub
flds
loope
pusha
add
pop
mov
pusha
popa
sub
xchg
dec
mov
mov
jo
mov
push
push
jns
lcall
cmp
or
sub
add
fldcw
and
cmp
cltd
lret
inc
mov
xor
cmpb
mov
sarb
test
and
xchg
shll
sarl
inc
mov
xor
and
mov
add
enter
popa
adc
rcrl
jmp
lcall
xchg
leave
sbb
inc
adc
leave
subl
inc
sub
mov
dec
test
jno
lcall
adc
mov
clc
pop
test
stos
adc
inc
rclb
sub
rcrl
mov
inc
add
add
imul
push
dec
and
stos
lcall
jmp
or
or
and
leave
push
and
cmp
inc
dec
flds
lcall
sub
loopne
sbb
xorb
xor
mov
mov
test
xor
pusha
xorl
popa
sub
leave
push
and
cmp
inc
dec
enter
sbb
inc
sub
leave
popa
nop
and
xor
rol
ret
popa
sub
test
xor
jo
jns
stos
lcall
call
loopne
mov
test
fwait
xor
sbb
or
loopne
loopne
mov
lret
cltd
mov
lcall
nop
xchg
cmp
cmp
lcall
icebp
adc
pusha
icebp
add
pusha
lcall
enter
loopne
mov
jno
inc
mov
xor
and
cmp
and
xor
popa
leave
sub
cmp
mov
clc
jno
loopne
ret
lret
and
pusha
sub
xor
xor
sbb
mov
lret
cltd
mov
or
and
and
sub
cmp
or
add
inc
mov
xor
jns
cmp
pusha
lock
and
add
adcb
inc
sub
pop
test
sbb
adc
lcall
pop
mov
sarl
pop
push
xor
fwait
lcall
mov
or
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
sub
lcall
lcall
mov
sub
stos
lcall
fwait
and
lcall
lcall
ret
push
lcall
xor
lahf
or
adc
add
stos
lcall
ret
xchg
lcall
and
and
lcall
lret
inc
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
and
jmp
and
lcall
xchg
cmp
lret
fwait
lcall
add
and
rorb
stos
lcall
ret
fwait
lcall
add
and
cmp
adc
inc
sub
mov
ret
or
sub
fwait
xor
adc
dec
sub
mov
ret
lret
sub
or
xchg
xor
sbb
inc
sub
mov
ljmp
fwait
fwait
sub
fwait
xor
adc
bound
stos
lcall
ret
xchg
lcall
cmpsl
and
mov
lcall
fcmovne
lret
inc
xchg
jecxz
ret
fwait
lcall
xor
add
xor
xchg
in
push
stos
iret
sub
fs
ret
lret
sub
sub
fwait
xor
add
outsl
fistpl
ret
lret
sub
fwait
cmp
lcall
fwait
and
cli
and
daa
sub
mov
lret
sbb
mov
test
dec
and
xor
adc
inc
sub
dec
cmp
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
ljmp
xchg
pop
movsl
dec
adc
or
mov
adc
inc
push
loopne
lcall
inc
popa
fcomps
test
loope
pop
repz
sub
sub
push
push
push
jg
in
sahf
pop
shll
out
xchg
into
ficomps
sbb
in
mov
iret
out
andl
popl
ret
lret
sub
dec
xchg
adc
outsb
add
xor
sub
dec
add
shlb
fwait
cltd
lcall
mov
fwait
xor
and
lcall
lcall
ret
fwait
lcall
and
and
pop
mov
stos
mov
ret
lret
sub
lcall
mov
fwait
and
lcall
lcall
in
cmp
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fisubl
fwait
and
lcall
jns
lret
inc
mov
lret
sub
sub
fwait
xor
bound
cmp
and
lret
sub
sub
or
xor
fwait
xor
adc
inc
sub
mov
sub
test
and
lcall
lcall
ret
or
or
add
and
sbb
stos
lcall
ret
fwait
lcall
xor
fwait
xor
adc
inc
sub
add
dec
mov
dec
stc
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
int
pop
fcoms
sbb
jb
loope
lods
xchg
add
xor
cmp
xchg
rolb
gs
add
or
add
sbb
push
jne
add
pop
fstps
adc
mov
mov
mov
mov
or
push
sbb
in
test
mov
add
mov
inc
test
mov
test
mov
lahf
xchg
test
fdivr
add
adc
cwtl
push
or
movsl
lea
ds
jg
shlb
int
push
aad
test
test
adc
mov
mov
cmpsl
xor
test
mov
push
jno
mov
adc
add
or
jns
pop
test
fcoms
add
mov
inc
test
nop
adc
int
push
add
mov
rorl
xor
pop
dec
pop
in
loope
pop
xor
mov
mov
test
or
mov
xchg
inc
push
loop
push
push
out
cmp
adc
leave
mov
mov
add
sbb
xchg
mov
pop
call
xchg
mov
mov
xor
mov
mov
leave
and
mov
sbb
add
js
add
mov
mulb
ret
notb
add
dec
pop
mov
and
mov
sub
test
jge
sbb
pop
sbb
mov
push
in
aad
add
push
cmpb
cli
dec
add
cmp
enter
lods
xchg
and
dec
mov
and
add
adc
inc
enter
imul
mov
dec
test
sbb
add
inc
test
mov
stos
rorw
mov
mov
mov
inc
or
dec
int
mov
mov
mov
xor
jo
mov
xor
push
ret
add
leave
sbb
push
inc
sbb
add
test
mov
mov
dec
mov
clc
sbb
adc
sbb
mov
mov
mov
dec
sub
cmp
inc
mov
lret
pop
fwait
cmp
lock
xchg
stc
cltd
and
lcall
lret
inc
popa
enter
cltd
lcall
and
mov
xor
and
inc
sub
jns
lret
sub
sbb
fwait
xor
fnstenv
lcall
lcall
ret
imul
jb
cwtl
or
and
pop
jno
sub
test
mov
xor
xor
fwait
lcall
and
and
and
inc
sub
xchg
ret
lret
rcrb
sub
cwtl
xor
xchg
inc
sub
mov
lret
adc
ror
sub
fwait
imul
cltd
xor
and
inc
lahf
cwtl
cwtl
cmp
mov
faddl
cwtl
fwait
dec
js
or
popa
and
or
jno
lcall
shlb
clc
cwtl
lcall
xor
mov
and
icebp
test
stos
mov
inc
mov
pop
cltd
lcall
and
and
cmp
stos
lcall
ret
fwait
sbb
cltd
fwait
stos
lcall
mov
xor
jl
cwtl
cmp
inc
xor
jns
cwtl
fwait
loopne
cwtl
or
and
mov
adc
movsb
test
inc
mov
dec
shlb
adc
lcall
fwait
and
lcall
lcall
ret
cltd
lcall
and
sbb
cwtl
stos
cmp
inc
sub
cmp
andl
lret
sub
push
or
and
mov
xor
or
ret
mov
xor
or
sub
xor
xchg
test
mov
or
xor
pop
cwtl
lcall
xor
clc
cltd
and
test
stos
lcall
ret
cltd
lcall
and
scas
inc
xor
or
sub
jno
lret
xor
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
fwait
mov
lcall
pusha
and
cmp
sub
test
mov
lret
sub
mov
fwait
xor
adc
inc
sub
sbb
lret
cs
lcall
and
std
lahf
xor
dec
daa
inc
sub
mov
sub
stos
mov
and
aas
xor
add
mov
out
xor
addr16
cwtl
or
push
and
lcall
lcall
ret
xlat
cwtl
lcall
xor
ficomps
stos
adc
sub
sbb
enter
cltd
lcall
and
mov
xor
out
outsl
inc
sub
inc
lret
sub
sbb
fwait
xor
xor
sub
mov
xor
insl
cwtl
fwait
sub
cwtl
or
and
cmp
adc
jecxz
test
mov
xchg
shlb
cwtl
lcall
xor
stos
push
cltd
and
test
stos
cmp
cmpsl
enter
cltd
lcall
and
jnp
xor
adc
inc
sub
mov
lret
sub
sahf
or
xor
fwait
xor
xchg
xor
ffreep
cwtl
cmp
das
mov
insb
scas
xor
in
negb
or
inc
and
adc
dec
scas
test
mov
inc
shlb
pop
cwtl
lcall
xor
shrl
test
stos
pop
sahf
leave
inc
test
sahf
cltd
lcall
and
push
das
xor
adc
inc
sub
mov
lret
sub
sub
cltd
xor
and
lcall
cwtl
cmp
pushl
sub
xchg
cwtl
or
mulb
fwait
jb
and
lcall
lcall
ret
dec
cwtl
lcall
xor
mov
push
test
stos
mov
bswap
ret
cltd
lcall
and
and
lcall
lcall
sbb
fwait
lcall
and
fwait
xor
divl
lcall
cwtl
cmp
cmpsl
mov
mov
xor
mov
cwtl
fwait
out
iret
cwtl
or
and
dec
dec
adc
jge
test
mov
shlb
ja
lcall
xor
fwait
xor
adc
inc
sub
push
mov
fwait
lcall
and
push
ja
fwait
mov
cwtl
stos
xor
outsb
cmp
loope
ror
sub
outsb
outsb
or
push
xlat
cltd
xor
xor
push
push
cwtl
cmp
xor
arpl
cwtl
or
aaa
and
test
mov
mov
lcall
xor
mov
pop
sub
test
enter
cltd
lcall
and
pop
mov
cwtl
stos
mov
inc
sub
mov
lret
push
sahf
ror
push
sub
mov
or
mov
cltd
xor
push
xor
xchg
cwtl
cmp
pushl
sub
outsb
cwtl
or
ja
fwait
sbb
and
add
addr16
mov
xchg
xor
sub
adc
and
iret
test
stos
inc
outsl
leave
inc
call
cltd
lcall
and
fld
xor
sbb
cmp
xchg
ror
push
sub
xor
or
jae
cltd
xor
push
xor
out
cwtl
cmp
ds
jmp
out
fwait
fwait
sub
fwait
add
adc
cmp
test
mov
lret
jmp
cwtl
lcall
xor
repnz
test
stos
sahf
mov
inc
push
dec
enter
cltd
lcall
and
and
lcall
lcall
jb
sub
das
push
or
mov
xchg
lcall
cwtl
cmp
out
ret
hlt
xor
pop
aas
cwtl
fwait
sbb
and
pop
push
adc
lds
inc
mov
jg
xor
cs
lcall
xor
in
xchg
adc
inc
sub
mov
lret
xlat
cltd
lcall
and
fs
xor
gs
inc
sub
push
ror
imulb
fwait
sbb
fwait
outsb
push
or
cmp
cltd
xor
divb
lcall
cwtl
cmp
xchg
mov
mov
xor
push
inc
cwtl
fwait
pop
negb
fwait
fs
and
mov
test
mov
daa
shlb
jbe
lcall
xor
mov
outsl
test
stos
nop
iret
leave
inc
call
fistps
sub
outsb
xor
cmp
inc
sub
mov
lret
sub
sub
fwait
xor
adc
cmp
mov
lret
aam
sub
sti
cwtl
or
and
pop
push
adc
inc
xlat
test
mov
aaa
shlb
popf
cwtl
lcall
xor
sysexit
cltd
and
pushf
test
stos
mov
leave
inc
and
enter
cltd
lcall
and
inc
xchg
xor
lods
and
cmp
andl
fwait
lcall
and
and
lcall
lcall
ret
outsb
mov
or
and
lcall
lcall
shlb
mov
lcall
xor
stos
xor
and
lcall
xchg
inc
leave
inc
mov
lret
repnz
lcall
and
or
cwtl
stos
fcomps
cmp
test
ror
sub
adc
or
cmp
xor
xor
out
cmc
cwtl
cmp
lods
xor
mov
cwtl
fwait
jns
cwtl
or
inc
and
or
adc
mov
lock
mov
lret
pop
fwait
cmp
cmp
and
lcall
loop
lret
inc
roll
cltd
lods
cltd
lcall
and
push
sbb
cwtl
stos
icebp
movsl
inc
sub
adc
lret
idivb
sub
adc
and
test
lcall
lcall
ret
fwait
lcall
lahf
hlt
and
cwtl
dec
adc
ljmp
mov
shlb
xor
sub
cli
test
adc
hlt
sub
dec
jne
ret
cltd
lcall
and
push
cmc
cwtl
stos
push
inc
sub
pop
cmp
lcall
fwait
mov
push
pop
or
xor
fwait
xor
adc
cmp
inc
mov
pop
or
sub
lret
cwtl
or
xor
fwait
inc
push
and
xor
sub
test
mov
add
xor
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
orb
xlat
in
stos
dec
std
inc
sub
lret
mov
in
sub
sub
test
xor
lds
lcall
cwtl
cmp
inc
mov
mov
lcall
scas
int3
and
fadds
sub
stos
lcall
shlb
jne
lcall
xor
cmp
cltd
and
test
stos
lcall
ret
fwait
lcall
and
and
cwtl
stos
mov
popf
cmp
push
mov
lret
sub
hlt
popf
or
mov
xor
sub
lcall
cwtl
cmp
push
mov
jmp
xor
cwtl
lea
or
and
and
fdivrl
lcall
shlb
test
lcall
cltd
and
mov
adc
adc
enter
cltd
lcall
and
data16
xor
xor
movsl
cmp
cmp
fwait
aas
movsl
cltd
fwait
lods
movsl
or
fsubs
and
inc
pop
sub
in
cmp
mov
mov
xor
push
aad
fwait
cmp
push
and
cld
adc
add
movsb
inc
mov
movsl
shlb
hlt
cwtl
lcall
xor
mov
lcall
fwait
inc
leave
inc
mov
lret
ficompl
sub
and
or
xor
dec
pop
inc
sub
in
cmp
lods
dec
sub
jecxz
or
cli
pop
cltd
xor
adc
cmp
inc
mov
orl
fstp
cwtl
or
and
ss
sub
test
mov
dec
shlb
sbb
lcall
xor
ret
and
adc
sub
mov
lret
lea
sub
arpl
fwait
inc
xor
sub
and
lret
sub
sbb
cltd
xor
mov
lcall
cwtl
cmp
in
ret
and
sub
sub
or
xor
fwait
sbb
sub
lahf
pop
sbb
inc
sub
mov
lret
pop
cmp
lcall
xor
insb
xchg
cltd
and
test
stos
loope
leave
inc
push
insb
enter
cltd
lcall
and
andl
cmp
sub
je
lret
sub
lcall
xor
in
xor
cmp
mov
mov
cli
sbb
cwtl
fwait
or
or
aad
fwait
mov
pop
adc
aam
test
mov
cmp
cwtl
lcall
cmp
cmp
xchg
and
mov
stos
fistpll
inc
inc
mov
ret
xchg
lcall
sub
out
cmp
cmp
sbb
lret
lret
lret
and
xchg
adc
and
stos
xchg
xor
cmp
mov
nop
cmp
pop
cmp
mov
nop
fwait
adc
sub
pop
sbb
sub
lcall
std
jb
xor
pop
and
mov
xchg
and
mov
stos
lods
ljmp
pop
repnz
lcall
sub
mov
fwait
jle
nop
stos
cmp
jb
lret
pop
pop
leave
lret
and
out
push
and
and
lcall
lcall
fstpt
sub
sub
fwait
inc
arpl
xor
shlb
mov
xor
xor
lcall
divb
xchg
and
mov
stos
jecxz
roll
rol
and
sub
mov
fwait
xchg
and
sub
xor
push
stos
leave
lret
and
fiadds
xchg
xor
adc
inc
sbb
mov
daa
mov
sub
jmp
fwait
fwait
sub
fwait
or
sbb
out
or
mov
jmp
xor
mov
lcall
cmp
push
sbb
adc
and
data16
adc
sub
fidivrl
fwait
data16
stos
test
sub
shll
lret
clc
cli
leave
lret
and
jge
add
ret
jb
xor
jb
lcall
nop
cmp
sbb
sub
sti
nop
fwait
clc
dec
nop
or
cli
sub
pop
ret
mov
mov
enter
nop
lcall
xor
fwait
xor
adc
inc
sub
scas
push
rol
sub
sub
and
push
loop
fwait
mov
stos
xor
sub
xor
jle
leave
lret
and
xor
add
xor
cmp
imull
nop
cmp
mov
sub
adc
or
mov
sub
dec
and
sub
mov
dec
mov
inc
enter
nop
lcall
cmp
call
or
stos
lcall
ret
fwait
lcall
sub
and
cwtl
stos
mov
add
lret
ljmp
fwait
mov
xchg
fwait
addb
and
xchg
xor
mov
inc
mov
nop
cmp
mov
sub
cmp
or
sub
or
sbb
adc
dec
mov
arpl
xor
xor
lcall
fwait
and
lcall
iret
repz
rol
sub
sub
or
xor
sub
fwait
stos
adcb
or
xor
xor
leave
lret
and
add
lcall
dec
shlb
inc
mov
cmpb
pop
push
nop
fwait
sbb
nop
or
xor
fwait
adc
adc
inc
sub
mov
lret
outsb
sbbb
cli
repz
mov
xchg
and
stos
and
inc
xor
ret
xchg
lcall
and
add
lcall
mov
lret
inc
mov
lret
sub
and
ficoml
lcall
nop
cmp
inc
mov
sub
mov
or
xor
fwait
xor
mov
inc
sub
mov
clc
enter
lcall
and
and
sub
adc
pop
and
in
rol
xor
sub
sub
xor
mov
nop
stos
out
dec
sub
mov
lret
roll
and
js
add
xor
fwait
xor
adc
inc
sub
nop
cmp
or
sub
mov
lcall
mov
sbb
icebp
adc
mov
lock
nop
lcall
cmp
inc
jno
and
lcall
lcall
ret
xchg
lcall
and
sub
nop
stos
out
dec
sub
shlb
lret
imul
lret
and
iret
enter
jno
xor
jno
lcall
nop
cmp
mov
sub
rclb
sub
fwait
mov
sub
add
inc
mov
mov
mov
nop
lcall
cmp
std
pop
xchg
and
xor
stos
dec
dec
roll
rol
pop
xchg
lcall
sub
jmp
xor
sub
mov
lret
sub
sub
cltd
xor
and
lcall
nop
cmp
sarl
mov
adcl
xor
sub
lcall
ret
fwait
lcall
or
and
sub
stos
mov
jno
ret
xchg
lcall
and
adc
lcall
and
lret
inc
mov
lret
sub
add
sbb
xchg
cmp
loop
nop
cmp
xor
stos
lcall
lods
clc
sub
lcall
lcall
enter
nop
lcall
cmp
mov
xchg
and
push
mov
stos
lock
rol
sub
sub
fwait
xor
and
dec
sub
add
mov
dec
xchg
fwait
orl
xor
cmp
xchg
cmp
sbb
sub
nop
fwait
or
nop
or
sub
jle
sbb
sub
mov
mov
lret
sub
mov
mov
xchg
and
mov
sub
loop
lret
fcoms
sub
sub
xchg
imul
stos
inc
rorl
test
xor
test
leave
lret
and
sbbl
xor
and
lcall
nop
cmp
ret
and
cmp
arpl
nop
or
nop
sub
xchg
mov
mov
mov
fxch
xor
mov
lcall
xchg
and
andl
inc
ljmp
lcall
sub
add
nop
stos
divl
dec
sub
mov
leave
lret
and
sub
mov
popf
xorl
jae
lock
lret
cmp
sub
or
xor
fwait
xor
sbb
inc
sub
mov
lret
pop
mov
lcall
cmp
mov
lcall
lcall
ret
xchg
lcall
and
jnp
xor
cmp
test
leave
lret
and
jno
add
xor
xor
cmp
jb
nop
cmp
inc
mov
lret
sub
sub
fwait
sbb
sub
lcall
lcall
enter
nop
lcall
cmp
scas
pusha
xchg
and
mov
stos
lds
inc
inc
cwtl
rol
inc
xchg
lcall
sub
pop
lock
cmp
sub
xor
mov
leave
lret
and
sub
add
in
xchg
xor
andb
xor
nop
cmp
popa
cmp
je
nop
fwait
testl
sub
testb
sub
mov
mov
jns
xor
and
ljmp
adc
icebp
roll
lret
imul
call
pop
cmp
call
xor
sbb
leave
lret
and
sub
cmp
fwait
and
lcall
nop
cmp
inc
mov
dec
mov
sub
lcall
or
sub
enter
stc
mov
mov
adc
xor
inc
nop
lcall
cmp
psubsb
adc
inc
sub
mov
lret
sub
sub
shlb
fwait
arpl
lcall
jns
lret
popa
push
leave
lret
and
fnstcw
and
xchg
xor
cmp
sbb
mov
aad
cmp
dec
xchg
nop
fwait
fwait
sub
fwait
arpl
sbb
lods
leave
mov
mov
and
xor
jo
lcall
cmp
lret
and
xchg
mov
stos
lcall
ret
fwait
lcall
sub
and
cwtl
stos
and
inc
sub
xor
push
daa
and
push
xchg
and
xor
adc
cmp
out
mov
sub
jp
or
xor
fwait
sarl
sub
push
mov
mov
out
enter
nop
lcall
cmp
pusha
pop
xchg
and
mov
stos
femms
roll
rol
push
xchg
lcall
sub
or
cmp
jns
dec
sub
into
xor
das
out
lret
and
and
dec
cmp
adc
nop
cmp
aas
mov
sub
nop
fwait
subb
fwait
dec
pop
sub
sub
cmpsb
mov
mov
inc
enter
nop
lcall
cmp
add
mov
stos
icebp
scas
roll
rol
mov
xchg
sub
sahf
sub
adc
cmp
mov
sub
das
leave
lret
and
push
add
inc
xchg
xor
cmp
sub
adc
lret
sub
nop
fwait
jno
nop
or
xor
fwait
mov
and
dec
stos
adc
mov
mov
mov
jle
xor
das
nop
lcall
cmp
cmp
mov
stos
mov
xadd
out
lcall
sub
adc
fwait
adc
nop
stos
adc
dec
sub
inc
xor
inc
outsl
leave
lret
and
mov
add
lock
xchg
xor
iret
cmp
sbbb
lret
inc
mov
jmp
xchg
sub
sub
fwait
xor
adc
jp
stos
lcall
enter
nop
lcall
cmp
out
xchg
and
inc
sub
xchg
ret
push
xor
fwait
lcall
sub
and
cwtl
stos
xor
inc
sub
lahf
xor
in
mov
lret
and
sub
cmp
fwait
and
lcall
nop
cmp
inc
mov
mov
lcall
daa
sub
sarl
mov
mov
xor
nop
lcall
cmp
sbb
xchg
and
mov
stos
insb
xadd
test
mov
xchg
lcall
sub
jb
cmp
pusha
outsb
dec
sub
xor
mov
jle
fwait
cld
xlat
xchg
fwait
scas
iret
add
xchg
jle
xor
cmp
inc
into
nop
cmp
mov
sub
out
nop
fwait
xchg
pop
nop
or
dec
sub
xchg
sbb
pushf
scas
mov
mov
inc
enter
lcall
and
and
out
and
mov
stos
fstpl
inc
lret
ret
xchg
lcall
sub
push
push
cmp
ret
mov
sub
xor
ucomiss
lret
and
xchg
aas
add
mov
cmp
mov
nop
cmp
outsl
cmp
outsb
aaa
nop
fwait
hlt
sahf
nop
or
sub
dec
push
sbb
loope
mov
mov
ja
xor
and
popf
mov
adc
xchg
stos
inc
inc
aad
rol
out
xchg
lcall
sub
adc
fwait
popa
nop
stos
shl
dec
sub
xor
cmpl
fwait
jle
xchg
fwait
outsb
push
add
out
xchg
xor
idivb
lcall
lcall
ret
fwait
lcall
add
xor
adc
jnp
stos
lcall
enter
nop
lcall
cmp
pop
xchg
and
mov
stos
in
roll
rol
and
lcall
sub
hlt
mov
fcompl
dec
sub
xor
mov
jne
fwait
in
fcoml
and
insl
xchg
xor
cmp
jbe
nop
cmp
or
cmp
in
nop
fwait
inc
gs
or
sub
mov
jl
lcall
enter
nop
lcall
cmp
jp
xchg
and
lcall
sti
cmp
mov
lret
sub
sub
ljmp
fs
sub
xor
arpl
leave
lret
and
cmp
add
test
xor
dec
cmp
sub
nop
cmp
xor
cmp
ljmp
or
inc
sub
fstp
sbb
mov
mov
mov
dec
enter
nop
lcall
cmp
adc
mov
stos
lcall
ret
fwait
lcall
xor
and
cwtl
stos
into
sub
pop
sbb
lret
insl
xor
and
ficoml
and
lods
xchg
xor
cmp
jge
nop
cmp
fnstsw
sub
cmp
fwait
sub
pushf
sub
stos
sbb
mov
mov
je
xor
pop
and
pop
std
xchg
and
push
mov
stos
iret
in
roll
rol
hlt
xchg
lcall
sub
enter
sub
nop
stos
aas
lds
push
je
lret
jl
leave
lret
and
loop
add
xchg
xor
adc
inc
pusha
movsb
nop
cmp
aad
sub
lea
or
sub
sub
xchg
mov
sub
in
mov
in
xor
lods
nop
lcall
cmp
and
and
movsl
mov
stos
xorb
lcall
sub
dec
int3
cmp
xor
dec
sub
lds
lret
and
leave
lret
and
push
std
add
jae
xchg
xor
dec
cmp
fcmovnu
nop
cmp
xor
ret
clc
mov
nop
fwait
cmp
fwait
xor
sub
mov
movsl
mov
mov
pop
enter
nop
lcall
cmp
imul
add
and
fstpt
mov
pop
xchg
sub
sub
lret
push
cmp
lahf
in
sub
xor
push
fs
lret
and
or
and
cld
cmp
dec
dec
nop
cmp
movsb
mov
sub
jne
fwait
dec
les
fwait
and
pop
sbb
jae
mov
mov
xor
mov
mov
and
cmp
mov
stos
stos
and
inc
out
fadd
xchg
xor
sub
xor
mov
fwait
add
mov
mov
adc
ret
or
fwait
lock
sbb
lds
mov
inc
arpl
lcall
mov
testb
ret
insb
mov
sub
jnp
or
ret
xor
jp
add
inc
dec
mov
mov
mov
mov
stos
pop
and
pop
dec
mov
and
mov
stos
mov
inc
fadd
fwait
mov
mov
mov
and
fs
sub
out
ror
lahf
stos
cmp
mov
sbb
call
andl
popf
mov
inc
insl
or
ret
fldcw
sub
mov
add
xor
out
add
cmp
sub
scas
sub
xor
jnp
lcall
and
fwait
xor
adc
inc
mov
dec
fcmovu
ret
mov
fwait
fwait
and
mov
ret
mov
stos
bound
lret
sub
lret
cmp
in
sbb
push
and
lcall
mov
add
ret
xor
and
lock
or
xor
stos
stos
mov
inc
sub
mov
jnp
xor
fwait
lcall
and
and
mov
sbb
cmp
xchg
loop
ret
mov
xor
xor
or
sub
loop
lret
cmp
mov
sbb
es
and
pop
rorb
ret
xchg
sub
mov
xor
pop
xor
sub
mov
mov
jnp
xor
mov
or
xor
and
sbb
bound
adc
cmp
mov
enter
fwait
lcall
and
adc
fwait
and
lcall
jae
lret
inc
mov
lret
cmp
xor
and
lcall
cwtl
cmp
inc
mov
in
and
std
jae
fwait
inc
ret
mov
and
and
mov
mov
rcl
outsb
add
lcall
fwait
and
inc
sub
mov
lret
add
cwtl
fwait
fs
andb
fdivl
xorb
mov
jecxz
mov
jns
sub
cltd
xor
sbb
and
dec
enter
mov
add
and
fdivl
adcb
cli
dec
inc
mov
jecxz
mov
cmp
sub
cltd
xor
adc
sub
dec
enter
pop
or
lcall
and
xorb
inc
sub
pop
inc
mov
jecxz
mov
jnp
sub
cltd
xor
sbb
sub
dec
enter
jge
cwtl
fwait
add
mov
adc
xor
push
mov
pop
dec
inc
mov
jecxz
mov
lahf
sbb
lcall
or
imul
cwtl
cmp
push
inc
enter
sbb
cwtl
fwait
add
mov
adc
xor
push
mov
jge
inc
mov
jecxz
mov
cld
adc
lcall
or
imul
cmp
mov
enter
cwtl
or
andb
fdivl
xorb
mov
jecxz
mov
fwait
gs
adc
lcall
or
imul
cwtl
cmp
adc
ret
cmp
cwtl
fwait
add
and
fdivl
adcb
fcomps
mov
jecxz
mov
fwait
gs
adc
lcall
or
or
and
inc
enter
sbb
cwtl
fwait
add
mov
adc
xor
adc
cwtl
dec
inc
mov
jecxz
mov
fstps
sub
cltd
xor
adc
cmp
dec
enter
sbb
add
mov
adc
xor
mov
cmp
mov
jecxz
mov
fwait
gs
sbb
lcall
fs
adc
and
dec
enter
sbb
cwtl
fwait
fs
mov
xor
mov
sbb
xor
push
stos
inc
sub
pop
inc
mov
jecxz
mov
fwait
sbb
lcall
fs
sbb
sub
inc
enter
ficompl
cwtl
fwait
add
mov
xor
mov
sbb
xor
xlat
mov
jnp
inc
mov
jecxz
mov
fwait
gs
adc
lcall
or
test
sub
dec
enter
mov
add
and
fdivl
adcb
push
mov
inc
inc
mov
jecxz
mov
fwait
gs
or
lcall
or
test
cmp
inc
enter
lcall
mov
xor
mov
adc
xor
rep
inc
sub
inc
inc
mov
jecxz
mov
adc
lcall
or
or
sub
dec
enter
cmp
cwtl
fwait
add
mov
sbb
xor
jbe
inc
sub
dec
inc
mov
jecxz
mov
ficomps
sub
cltd
xor
sbb
and
push
enter
pop
adc
mov
xor
mov
adc
xor
xor
sti
leave
inc
hlt
inc
xor
lcall
and
and
lcall
loope
xlat
ja
mov
fwait
lcall
and
dec
xorl
mov
loop
sub
push
inc
sub
sub
mov
mov
stos
leave
inc
mov
lret
aad
gs
or
xor
push
fwait
arpl
inc
sub
cmp
dec
mov
lret
sub
dec
and
and
sub
lcall
dec
int3
jge
and
shrb
sub
fwait
xor
adc
dec
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
rol
lret
cmp
xchg
sub
and
and
lcall
lcall
ret
fwait
sarb
or
xor
xchg
xor
xchg
mov
sub
mov
ret
ret
sub
sub
fwait
push
and
xor
sub
mov
lret
push
fwait
lcall
and
and
lcall
mov
jp
or
fwait
cmp
xchg
mov
mov
xor
adc
inc
sub
mov
sub
push
add
and
mov
xor
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
and
mov
lret
sub
add
cmc
and
and
sbb
add
inc
sub
mov
lret
sub
sub
xchg
xor
adc
inc
sub
mov
repz
lcall
and
or
cwtl
stos
xor
jmp
call
push
ror
cmpl
fwait
in
sub
jae
cltd
xor
xor
mov
mov
fcmovb
sub
fwait
lcall
popa
shll
fwait
mov
pop
adc
adc
push
sub
mov
lret
dec
jmp
xor
fwait
xor
adc
mov
leave
inc
stos
ret
rol
xor
adc
fdivrs
xor
fwait
sub
adc
inc
sub
jae
lret
rclb
mov
lcall
xor
fwait
xor
inc
xor
sub
mov
mov
xor
pop
jp
mov
add
cmp
mov
jo
lcall
ret
fwait
lcall
ret
std
pop
cltd
and
gs
in
enter
lret
leave
inc
pop
xor
ret
cltd
lcall
and
mov
mov
sub
and
lret
loopne
ror
xor
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
inc
cwtl
lcall
xor
mov
test
stos
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
mov
and
xor
xchg
test
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
sub
lret
and
lcall
sub
stos
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
sbb
leave
inc
push
jp
ret
cltd
lcall
and
and
lcall
lcall
push
ret
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
mov
sub
je
cmp
xchg
push
mov
adc
mov
xchg
cmp
ret
xor
dec
mov
fwait
jl
and
lcall
mov
mov
mov
xor
lcall
push
pop
push
orb
mov
lret
push
mov
lret
int
cwtl
lcall
xor
fwait
xor
adc
sub
mov
lret
sub
sub
inc
mov
cwtl
stos
xchg
test
sub
and
lret
sub
push
or
cmp
xchg
xor
lret
aad
lds
sbb
sub
sub
fwait
adc
adc
mov
iret
dec
mov
lret
adc
fneni(8087
stc
les
jo
inc
adc
and
cmp
inc
cmpl
xchg
cmp
cwtl
xchg
inc
and
lcall
lcall
pop
xor
fwait
mov
and
lcall
lcall
ret
adc
or
xchg
xor
xor
pop
sub
sub
lcall
ret
fwait
sbb
or
xor
sti
xor
adc
mov
jmp
ret
lret
sub
sub
fwait
adc
adc
inc
sub
mov
lret
sub
dec
lcall
mov
adc
inc
stos
stos
lcall
ret
cmp
adc
and
and
dec
stos
sub
add
adc
push
imul
fwait
sbb
mov
xor
adc
cmp
inc
test
sub
lcall
pop
xor
fwait
or
adc
inc
sub
lcall
push
lcall
xor
fwait
xor
and
lcall
mov
nop
inc
and
jns
inc
sub
sub
fwait
sbb
subb
sub
mov
lret
sbb
sbbl
xor
sub
jb
imul
sub
lcall
xorl
fwait
cwtl
fwait
and
lcall
lcall
mov
lcall
push
and
xor
adc
bound
popf
cmp
inc
mov
int
adc
sti
lcall
in
add
lcall
mov
ret
lret
scas
xchg
mov
fwait
mov
cmp
adc
dec
es
fisubl
xchg
inc
mov
xor
fwait
mov
jp
add
sbb
sub
jecxz
ret
fwait
mov
lcall
mov
adc
sub
mov
stos
ret
fwait
lcall
xorb
fwait
xor
xor
sub
mov
lret
sub
or
fwait
xor
mov
inc
jp
lcall
ret
mov
sub
fwait
xor
adc
bound
sub
lret
lret
or
cmp
jmp
xor
mov
sti
mov
cmp
stos
mov
stos
inc
mov
sub
lcall
mov
fwait
sub
mov
test
mov
lret
mov
cmp
mov
lcall
lcall
mov
fwait
fwait
xchg
sub
or
xor
fwait
cmp
mov
dec
sub
sub
pop
pop
mov
fwait
fwait
xor
call
or
or
cmp
push
mov
lret
sub
sub
or
xor
fwait
cmp
mov
lods
fstps
mov
dec
arpl
sub
pushf
fwait
sub
mov
lcall
mov
lret
inc
sbb
lret
sub
sub
fwait
xor
popa
sub
mov
mov
lret
sub
jmp
or
cmp
rdpmc
xchg
and
lcall
lcall
ret
pop
lcall
sub
and
lcall
lcall
ret
fwait
lcall
and
fwait
xor
adc
stos
stos
lcall
ret
fwait
lcall
and
xor
lcall
lcall
ret
fwait
lcall
fnstsw
and
lcall
lcall
ret
fwait
xchg
lcall
jl
sahf
pusha
mov
push
sub
mov
aaa
sub
pushf
push
adc
xorl
or
xor
fsubl
sbb
sub
sub
xor
jmp
xor
mov
sub
fwait
xor
adc
inc
sub
lcall
dec
xor
ficompl
sub
xor
mov
lcall
lcall
ret
aad
lcall
xor
fwait
jb
sub
sti
stos
sbb
ret
sub
mov
lret
lret
fwait
xchg
lcall
cmp
fnstenv
xchg
and
mov
stos
cmp
ret
inc
jno
ret
sub
sub
or
xor
xor
sub
mov
lret
outsb
fwait
xchg
lcall
cmp
aas
xor
adc
inc
and
xchg
ret
ret
sub
sub
or
xor
xor
sub
mov
lret
and
lea
xchg
xor
cmp
or
inc
mov
sub
xchg
fwait
cmp
xchg
or
xor
fwait
aam
sub
lcall
lcall
mov
xchg
xchg
fwait
mov
xchg
xor
cmp
or
mov
sub
xchg
xchg
fwait
cmp
xchg
or
cmp
fwait
xor
adc
inc
sub
mov
lret
and
sub
fwait
cmp
adc
xor
inc
push
lret
ret
and
sub
add
xor
cmp
mov
dec
sub
xor
mov
cmp
fwait
mov
xchg
add
push
sub
lcall
xchg
cmp
dec
mov
sub
and
fwait
mov
sub
aas
mov
mov
mov
ret
insb
xchg
xchg
lcall
cmp
cmp
xchg
mov
stos
popf
xor
inc
xchg
lret
ret
and
sub
xchg
cmp
jae
dec
sub
mov
lret
jecxz
lret
lret
and
sub
xchg
xor
xor
lcall
xchg
cmp
mov
sub
cmp
fwait
push
mov
xor
mov
mov
mov
fcmove
xor
mov
lcall
xchg
and
push
and
push
shl
lret
fwait
lcall
xorl
pop
and
sub
mov
lret
xchg
and
push
mov
and
xchg
xor
xor
lcall
xchg
cmp
push
mov
mov
test
lcall
fwait
xchg
xor
sub
mov
lret
sub
sub
xchg
xor
adc
inc
sub
mov
lret
sub
sub
fwait
xor
adc
inc
sub
mov
lret
stos
fwait
add
stos
and
and
inc
mov
or
mov
ret
cmp
cmp
mov
fwait
dec
xor
stos
mov
jmp
sbb
test
ret
xor
fwait
mov
mov
xor
adc
cmp
add
arpl
mov
xor
fwait
or
xor
fwait
xor
adc
inc
sub
mov
lret
sub
and
fwait
xor
or
inc
sub
mov
and
xor
mov
lcall
fwait
and
mov
stos
lcall
ret
fwait
lcall
and
and
xor
adc
cmp
inc
mov
sub
sub
fwait
xor
mov
inc
sub
mov
lret
sub
sub
fwait
xor
and
stos
adc
inc
sub
mov
dec
fwait
lcall
sub
inc
xor
mov
or
call
jno
and
or
nop
or
lcall
nop
mov
add
cmp
sarb
jmp
fwait
lcall
or
add
stos
jmp
test
or
adc
mov
xor
and
fldcw
and
pusha
mov
push
sub
shl
push
push
imul
mov
xchg
dec
cmp
add
sub
popa
or
jmp
or
mov
mov
add
mov
sarb
mov
mov
fwait
fwait
sub
nop
nop
and
adc
leave
adc
inc
sub
mov
dec
sub
mov
sub
adc
add
stos
adc
inc
rclb
sub
jno
call
fwait
lcall
sub
mov
xor
sub
xor
push
mov
mov
xor
and
xchg
or
add
and
pusha
sbb
and
add
or
lret
inc
hlt
fxch
ret
mov
xchg
xor
xchg
pop
and
mov
lcall
add
lret
cltd
mov
jmp
sub
nop
mov
sbb
mov
sub
jmp
xor
popa
pusha
sub
sub
nop
and
cwtl
addb
xor
and
xchg
or
nop
mov
mov
sbb
add
lock
nop
dec
call
sarl
cwtl
nop
or
loopne
sub
xchg
and
or
mov
cmp
cmp
mov
mov
and
lcall
nop
adc
inc
rclb
sub
dec
and
test
sub
lcall
sub
push
sbb
xor
sub
rcl
test
fwait
lcall
nop
cmp
lock
rcrb
or
stos
pusha
sarb
leave
pop
or
rcrb
sub
cmp
imul
and
enter
xor
fwait
pusha
pusha
sub
subb
xor
orb
or
ret
xor
cmpb
nop
or
push
sbb
and
and
xchg
cltd
nop
xor
test
inc
mov
xor
and
sub
nop
adcl
stos
pusha
sarb
inc
popa
popa
xchg
sub
mov
cmp
sti
xor
and
add
jmp
sbb
lret
cltd
mov
add
xor
orb
mov
inc
push
push
cmpb
mov
lcall
sub
mov
mov
stc
rcrb
inc
ret
fwait
sbb
or
xor
popa
leave
sub
cmp
cmp
inc
sub
mov
push
sbb
pusha
lock
and
sub
or
cmp
stos
jmp
xor
or
ret
lret
sub
sbb
fwait
xor
push
xor
leave
sbb
ret
lret
sub
inc
fwait
fwait
sub
mov
test
adc
mov
push
loopne
mov
xor
popa
sub
and
add
cltd
push
sub
mov
mov
fwait
sub
xchg
and
sub
or
lcall
mov
and
enter
dec
clc
lcall
xor
mov
mov
inc
rclb
sub
fsts
push
clc
mov
mov
or
xchg
out
add
mov
and
test
mov
rcrb
mov
stc
rcrb
sub
cwtl
mov
mov
or
sub
mov
popa
call
fwait
lcall
andl
jmp
mov
pop
cmp
mov
clc
loope
fwait
fwait
xor
popa
dec
cmp
mov
push
jmp
or
jmp
imul
fwait
popa
shrl
sbb
add
mov
mov
push
loopne
jno
push
sub
push
lcall
inc
mov
leave
pusha
sbb
and
mov
xorb
inc
xchg
mov
xor
fwait
lcall
and
fldenv
mov
sbb
mov
push
pusha
mov
dec
mov
mov
mov
loopne
pop
mov
loopne
fwait
and
lcall
xchg
test
lret
sub
sub
imul
and
mov
or
fcoms
ret
lret
sbb
or
fwait
fwait
sub
nop
test
sbb
sub
stos
pusha
sarb
mov
loopne
lcall
and
xchg
mov
xor
or
lret
xchg
into
test
jbe
inc
dec
mov
mov
mul
mov
push
fisubs
mov
loope
push
lods
add
jge
lcall
push
push
je
xchg
out
lods
mov
mov
iret
fwait
cwtl
mov
adc
dec
nop
inc
mov
adc
cmc
dec
dec
aas
mov
mov
mov
push
adc
orb
or
mov
push
inc
or
cmp
mov
js
test
nop
stc
fwait
add
cmpb
cli
pop
roll
cmp
ficomps
icebp
dec
mov
fwait
sub
xorl
fwait
test
stos
pop
sub
sub
lcall
mov
sbb
add
add
cmp
sbb
cmp
test
imul
or
sub
nop
fwait
cmp
cmp
subl
jo
mov
mov
lcall
xchg
and
xor
adc
inc
jns
xchg
cmp
mov
sub
mov
fwait
sub
fwait
rcrl
mov
lcall
mov
or
sub
push
add
stos
mov
stos
inc
sub
aaa
mov
ret
mov
shrl
fwait
lcall
mov
fwait
mov
sub
sub
lcall
nop
xor
fwait
sub
sbb
jns
call
lcall
cmpl
pop
ret
ljmp
or
fwait
xorb
stos
sbb
jns
mov
mov
lret
lret
lcall
cmp
lcall
adc
inc
xor
and
add
xor
fwait
lcall
imul
cmp
cmp
pusha
lcall
mov
sub
mov
mov
lcall
mov
ret
mov
xor
leave
lcall
and
and
push
cwtl
insl
mov
cmp
add
ret
fwait
xchg
lcall
jns
clc
xor
adc
inc
mov
xchg
ret
lret
sub
loop
popa
sub
xchg
cmp
enter
or
sub
push
pusha
mov
dec
cltd
add
sbbl
mov
or
imul
mov
mov
sar
add
mov
loope
pusha
add
sbb
mov
mov
adcb
xor
popa
leave
sub
cmp
and
lcall
sarl
cwtl
nop
or
mov
cltd
xchg
cltd
and
fdivr
mov
jg
popf
popa
mov
mov
out
xchg
stc
or
or
jbe
cld
loopne
inc
inc
add
dec
divl
fistps
cmp
push
cli
cmp
ret
fwait
lcall
and
and
lcall
lcall
ret
mov
lcall
sbb
test
lcall
or
shl
enter
push
popa
add
lcall
sub
test
cmp
stos
lcall
inc
mov
xchg
lcall
xchg
xor
fwait
jb
and
sbb
stos
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
lahf
lcall
xor
lahf
xor
adc
lcall
ret
fwait
gs
int
fwait
xor
lcall
lcall
ret
mov
or
fs
fcoml
rcll
cmp
pop
xor
gs
jo
lea
dec
push
push
in
mov
aad
loopne
xor
dec
cmp
gs
andb
loop
mov
mov
int3
cmp
int3
gs
in
aam
int
pop
lods
and
push
dec
std
cld
cld
std
std
sub
fwait
xor
lcall
lcall
ret
fwait
lcall
and
and
lcall
lcall
ret
fwait
lcall
fnsave
and
or
mov
lcall
lret
xchg
cli
lcall
int
fwait
add
adc
dec
push
addb
mov
or
pop
subl
cli
mov
mov
or
inc
mov
mov
sub
icebp
xchg
call
sub
and
imul
mov
dec
cmp
adc
sub
pusha
or
xor
jae
dec
sub
lret
inc
mov
cli
ret
shrb
mov
fwait
stos
mov
inc
arpl
imul
stos
lds
negb
ret
fwait
lcall
and
and
lcall
lds
mov
lret
sub
out
add
and
and
lcall
cwtl
cmp
inc
mov
lret
sub
sub
fwait
xor
adc
mov
lret
inc
mov
push
shlb
fwait
lcall
and
and
fdivl
lcall
fmuls
inc
mov
fadd
aam
cltd
lcall
xor
push
cwtl
stos
push
cltd
push
sub
lret
mov
cmpl
aam
cld
insb
inc
push
inc
std
push
std
inc
push
cld
add
pop
dec
imul
push
inc
mov
mov
mov
or
mull
fs
in
mov
nop
out
jge
imul
adc
sbb
movsb
and
movsl
or
xchg
stos
adc
adc
inc
fucomip
int3
inc
int3
cmpb
cwtl
fwait
movsl
add
and
and
int3
mov
push
lret
jo
out
or
div
pop
aam
cmc
test
mov
cltd
and
inc
sub
mov
call
cltd
lcall
mov
mov
xor
fcompl
push
lods
lock
enter
cmp
adc
lcall
xor
mov
ljmp
fildll
or
mov
outsl
sbb
mov
sbb
arpl
mov
icebp
lahf
xor
jno
xorl
sub
sub
lods
lock
mov
enter
mov
sub
pop
int3
xor
mov
ljmp
fildll
or
orb
int
pop
mov
and
jns
mov
lret
shl
rol
xor
xor
cltd
fwait
ja
dec
push
fdivl
xor
and
sbb
xor
inc
sub
dec
inc
mov
dec
scas
pop
outsb
xor
pop
adc
mov
mov
jns
mov
lret
rorl
xor
sbb
icebp
lahf
aam
or
rcr
fwait
aas
and
sub
lods
neg
xor
dec
cmp
shlb
pop
stos
cwtl
or
dec
div
fs
add
mov
pop
xor
push
dec
enter
div
cmp
mov
mov
mov
sbb
sbb
xor
dec
imul
xor
sbb
mov
xor
movsl
negl
fmul
gs
mov
sbb
arpl
mov
neg
gs
or
cli
cmp
lcall
mov
xor
or
cmc
mov
movsl
pop
imulb
add
cmp
add
div
leave
gs
mov
or
inc
aad
pop
mov
cmpsb
scas
icebp
aad
gs
jno
xorl
sub
sub
lods
negb
shlb
cmpl
and
jg
pop
mull
addl
lcall
ret
div
pop
xor
or
and
sbb
fsubl
mov
or
enter
or
pop
cltd
cmc
mov
int3
and
add
push
gs
outsl
sarb
sbb
mov
fsubl
gs
in
test
lds
fildll
push
pop
add
mov
dec
mov
sbb
and
xchg
das
fld
inc
scas
cltd
wbinvd
divb
outsl
test
mov
mov
clc
ret
aam
lods
and
std
loopne
sbb
fwait
lcall
jno
dec
notl
fmul
adc
xchg
push
lds
cmp
lret
lret
mov
or
xor
int3
mov
dec
lds
lahf
mov
aad
fdivrs
xchg
and
push
push
push
fsubl
and
in
in
andl
add
ret
fwait
xchg
ja
fs
add
xor
add
lfs
in
sub
stos
lds
jmp
dec
enter
sbb
gs
fs
adc
fwait
pop
and
sub
push
or
xor
lahf
mov
fwait
lcall
stc
int3
fs
xchg
stos
adc
sbb
xchg
xor
xor
cli
sbb
cmpl
xor
int3
lcall
lds
mov
lret
lret
gs
testl
fwait
xor
adc
push
inc
leave
lds
stc
mov
jnp
cwtl
fwait
testl
mov
cmp
in
add
test
int3
aad
leave
lcall
or
jl
fwait
and
fldcw
stos
gs
lret
ret
and
push
aad
movsb
mov
adc
cltd
pop
cltd
jo
add
inc
sub
pop
xor
dec
std
loopne
jae
fwait
lcall
and
mov
jbe
in
aam
adc
jge
lret
inc
mov
loopne
jg
mov
pop
jnp
stos
lcall
jg
mov
stos
mov
xor
enter
jp
gs
mov
mov
mov
jns
mov
lret
shl
rol
xor
gs
adc
lcall
xchg
and
sbb
aas
dec
mov
arpl
and
lret
inc
icebp
pop
xor
int
cli
mov
jns
mov
lret
das
flds
scas
cltd
xor
sti
out
fcoms
incb
stos
adc
jecxz
les
xor
or
pop
dec
sbb
fdivrl
mov
or
enter
adc
xchg
negl
mov
jg
add
push
gs
out
sarb
sbb
fs
fsubl
lock
in
mov
lds
fildll
mov
test
dec
xor
sub
xchg
das
cltd
dec
scas
pop
movups
xor
or
outsl
mov
testl
cwtl
cmp
shrb
fs
fwait
sbbl
xor
fwait
stc
cmp
sub
inc
lods
push
imul
fs
fwait
aam
into
mov
pop
fcompl
pop
jbe
pop
mov
ret
fwait
pusha
push
adc
lcall
std
mov
jmp
pop
xor
ret
lret
or
mov
fwait
fwait
sub
and
and
fistps
int3
add
test
mov
shll
sub
mov
mov
xchg
and
lcall
gs
mov
mov
xchg
push
gs
mov
les
gs
mov
movsb
adc
mov
lret
das
sbb
mov
or
stos
adc
movaps
cmp
test
jl
sub
jo
testb
sahf
jp
inc
dec
imul
xor
xchg
pusha
out
or
sub
xchg
ja
sub
aam
mov
mov
sub
cwtl
cli
sbb
xor
xor
pop
cmp
fwait
sub
sbb
ret
lret
sbbb
lcall
xchg
add
lods
dec
sub
xor
gs
sub
mov
hlt
call
lcall
xor
mov
dec
xor
inc
jae
cmp
arpl
test
sbb
xor
cwtl
or
addr16
xor
add
inc
sub
xor
xchg
imul
xchg
xchg
or
and
and
sub
fcompl
jl
push
mov
lret
test
fwait
sub
fs
dec
xor
inc
jae
cmp
arpl
test
sbb
xor
cwtl
or
pusha
fs
fidivl
lcall
gs
inc
mov
ror
fs
mov
push
add
cmp
lods
dec
sub
xor
gs
sub
mov
hlt
out
icebp
aad
gs
int
and
xchg
aam
aad
lock
jae
ret
lret
mov
sub
gs
jnp
xor
aad
pop
mov
inc
out
mov
cwtl
fs
or
xor
xor
movb
lcall
sahf
sbb
cwtl
cli
sbb
xor
mov
pop
push
in
aam
push
sub
xor
mov
lret
stos
fs
mov
push
dec
and
and
jno
sub
sub
jl
jmp
inc
enter
popf
adc
xor
xchg
insl
test
and
je
jl
lcall
gs
int3
ret
mov
hlt
call
lcall
popa
and
cltd
popf
mov
sbb
pop
imul
xor
inc
inc
mov
in
and
mov
add
adc
xor
negl
xor
popf
sbb
mov
std
sbb
mov
and
adcl
cmp
das
sbb
xchg
call
lcall
adc
xor
in
in
andl
xchg
add
mov
mov
and
xor
mov
div
cmp
or
fisttpl
lcall
xor
xor
add
mov
mov
and
sub
adc
jnp
cltd
and
or
cwtl
cmp
cmp
gs
or
mov
sbb
repnz
loopne
outsl
sub
sbb
xor
sbb
and
fmul
fcoml
lcall
gs
mov
cmpsb
outsb
xor
fs
icebp
popf
out
mov
and
jp
xchg
xchg
and
mov
ja
dec
mov
lds
xor
lret
sub
mov
sbb
insl
test
and
je
je
lcall
gs
int3
ret
mov
hlt
call
lcall
popa
and
sbb
pop
imul
xor
inc
inc
mov
in
and
mov
add
adc
xor
negl
xor
add
imul
sbb
mov
xor
or
sub
cmp
mov
pushf
sbb
lcall
repz
cltd
pushf
cmp
mov
lret
pop
fildll
or
mov
pop
icebp
test
xor
subl
inc
rcrl
faddl
jbe
cld
icebp
pushf
or
bound
xor
fwait
leave
imul
stos
inc
dec
int
pop
popa
pop
aam
lods
add
add
lcall
fwait
and
lcall
hlt
movsb
xor
sub
mov
insl
movsl
mov
fildl
sub
fwait
xor
adc
inc
adc
jge
lret
inc
mov
loopne
and
fwait
lcall
and
sbb
xor
jns
leave
cmp
cmp
sahf
fistpl
mov
ret
or
mov
cmc
outsl
jae
xor
lcall
jle
bound
fs
and
jnp
mov
sub
jp
cltd
sub
xor
push
xchg
mov
lret
das
pop
xorl
jbe
or
xor
xchg
xchg
sub
movb
cwtl
pop
roll
xor
div
aam
push
mov
mov
adc
mov
in
lcall
cmp
gs
cmc
mov
mov
push
in
addr16
jmp
mov
hlt
out
ja
fs
and
sbb
fwait
xor
and
clc
sbb
inc
xchg
test
xor
fwait
lcall
ds
negl
outsl
pop
fwait
adc
aam
push
imul
lret
ljmp
and
ret
sub
push
aad
cmp
movsl
mov
fwait
div
fbld
gs
out
xor
in
aam
push
jmp
lds
mov
lret
push
gs
mov
and
fwait
xor
sbb
push
push
ljmp
rolb
fwait
testl
fwait
jl
and
cmp
mov
cmpsb
scas
jb
fs
fwait
aam
or
sbb
lcall
gs
inc
push
mov
out
mov
ficompl
dec
xor
fwait
pop
aaa
jecxz
gs
addl
dec
mov
xor
stc
and
mov
outsl
sbb
mov
notb
cld
dec
cmp
push
stos
cltd
lcall
and
enter
pusha
lcall
or
add
sbbb
jp
or
mov
and
int3
movsb
xchg
xchg
mov
lret
das
pop
add
int3
jbe
push
sub
dec
jb
push
in
ja
dec
mov
lds
xor
lret
outsb
and
or
andb
outsl
mov
and
int3
movsb
xchg
mov
lret
das
pop
xorl
jbe
or
xor
xchg
xchg
sub
movb
cwtl
pop
roll
xor
div
aam
push
mov
xor
cs
mov
pushf
lcall
cmp
gs
cmc
mov
into
mov
push
in
sub
push
inc
ret
jge
and
ret
divl
jmp
aam
dec
and
and
cwtl
stos
dec
lods
cs
dec
gs
leave
shll
bound
into
and
jecxz
gs
push
sub
clc
lcall
cmp
stc
and
aam
cmc
mov
and
inc
dec
and
imul
xor
sbb
clc
sbb
lcall
xor
mov
mov
arpl
and
lret
dec
and
gs
sbb
and
jl
fwait
and
movb
addr16
stos
adc
vmovdqa
jl
cmp
movsb
mov
xchg
gs
jecxz
xor
gs
push
sub
mov
je
dec
inc
cmpsb
scas
push
xchg
fs
sbb
and
pop
jg
movsb
test
sub
gs
inc
mov
out
mov
fs
mov
int
fwait
and
insb
movsb
aam
test
negb
mov
nop
stos
cltd
lcall
mov
pop
clc
pushf
int3
sub
cs
dec
and
imul
xor
sbb
xchg
divl
insb
sub
mov
and
int3
sbb
adc
lret
adc
lds
sbb
inc
shlb
divl
sti
and
aam
cmc
mov
cltd
xor
fcompl
jno
xchg
sub
aad
div
jns
aam
orb
and
fs
mov
lods
aam
test
mov
ror
adc
mov
insb
dec
pop
das
jnp
and
inc
sub
lcall
scas
lahf
imul
push
bound
and
stos
xor
push
ljmp
dec
push
and
adc
xor
push
add
xor
lgs
imul
lds
pop
and
rorl
xchg
fs
jecxz
dec
shrb
lret
lcall
xchg
cmp
divb
fisubl
gs
jno
pusha
lahf
jae
and
xor
lea
out
or
xor
movsb
mov
and
adc
xor
negl
idivl
push
aad
add
adc
vmovdqu
fisubl
cli
adc
jnp
cltd
and
mov
cmc
outsl
repz
cmp
divb
fistl
and
fs
lcall
popf
sbb
cmp
fsubl
sbb
and
pop
mov
ss
lods
aam
adc
pop
lea
stos
ror
pop
xchg
movl
out
mov
fwait
and
or
fildl
stos
fidivl
xor
sbb
popf
int
adc
and
mov
sbb
sub
gs
push
cmc
fnstsw
and
cwtl
stos
dec
xchg
popf
push
gs
add
xor
fwait
xchg
fwait
push
mov
movsl
sbb
lcall
xchg
imul
cmp
fstps
mov
stos
cltd
xor
xor
push
sub
gs
push
lret
mov
xchg
xor
pop
xchg
gs
cmp
and
gs
dec
pop
add
sbb
arpl
int
jbe
push
je
xor
sbb
xor
push
xchg
mov
into
leave
mov
mov
inc
cmp
or
movsl
sub
fs
pop
fistl
aam
jns
gs
int3
ret
mov
xchg
outsb
mov
fs
aaa
lahf
xchg
gs
sbb
and
clc
sbb
jns
notb
mov
dec
cmp
xchg
mov
lahf
ficompl
andb
aas
mov
and
sub
jl
cmp
divb
pop
xchg
gs
jle
bound
fs
and
jnp
mov
sub
std
sbb
mov
and
xchg
mov
je
dec
fcmovne
ret
aaa
fisubl
dec
popf
int
push
cmp
mov
dec
or
mov
je
dec
lahf
enter
xor
cltd
sub
data16
mov
mov
and
int3
lret
push
sbb
inc
xor
sbb
sbb
lds
and
leave
fwait
enter
jno
dec
mov
and
int3
sbb
xchg
push
lds
cmp
lret
lret
sahf
and
aam
data16
mov
mov
or
inc
sub
ss
mov
mov
fs
ret
xchg
add
mov
cwtl
lret
or
or
cmp
jge
ret
int3
or
mov
cmc
fnsave
fwait
xor
and
stos
adc
cs
imul
test
xor
adc
lcall
sbb
jns
in
aam
aad
jle
leave
inc
xor
pop
mov
fwait
and
gs
cmc
xchg
fs
andl
lcall
push
mov
dec
cmp
lret
fwait
ret
fdivrs
xchg
and
push
push
jae
fs
and
in
in
andl
add
xor
adc
xorb
mov
xor
xchg
idivb
mov
int3
sbbb
mov
mov
dec
shlb
dec
cmp
jl
cmp
cwtl
fwait
movsl
add
and
and
mov
adc
jge
lret
inc
mov
lret
jns
leave
lcall
mov
sbb
arpl
lcall
xchg
das
flds
fs
mov
xchg
gs
cmp
and
gs
dec
pop
add
sbb
arpl
int
jbe
push
je
xor
xor
shll
vmovdqa
jl
cmp
divb
fistl
and
fs
cmp
mov
bnd
cmp
fsubl
sbb
and
sbb
int3
test
push
gs
jmp
dec
enter
fwait
and
pop
mov
xor
in
aam
push
ljmp
lret
push
movl
jg
push
andl
dec
xchg
sub
xchg
ret
lret
push
fsubrl
lcall
fs
fistl
aam
xor
adc
int
outsl
inc
fisubl
cli
adc
jnp
cltd
and
mov
cmc
outsl
jne
xor
lcall
jle
bound
fs
adc
mov
bnd
cmp
fsubl
sbb
and
fimull
push
mov
sbb
ljmp
and
xorb
xor
and
movsb
xor
xchg
dec
inc
lret
out
lret
movsl
mov
xor
popa
add
cmp
and
ljmp
jns
add
mov
jnp
mov
outsb
push
and
fs
aam
sub
or
xor
gs
xor
pushf
int3
negl
pop
insb
push
xor
inc
mov
pusha
inc
jg
sbb
fidivl
xor
in
aam
push
ljmp
lret
push
movl
jg
push
andl
int3
xchg
sub
xchg
mov
jl
dec
scas
pop
mov
pop
andb
outsl
mov
and
int3
movsb
xchg
pushf
mov
lret
das
pop
add
cmp
and
or
xor
xchg
xchg
sub
movb
cwtl
pop
roll
xor
movsl
mov
sub
aam
or
xor
int3
mov
in
sub
xorb
out
sbbl
add
adc
jb
fmul
loope
xor
inc
out
int
int3
aad
lcall
xor
pop
sbb
aam
push
ljmp
lret
push
movl
jg
push
andl
dec
xchg
sub
fildl
bound
xchg
mov
gs
int
xor
dec
jb
push
in
mov
cmp
loopne
mov
fwait
lcall
and
jg
pop
test
addl
lcall
ret
js
gs
and
sbb
xor
sub
lcall
sub
insb
sub
movsl
mov
push
or
xor
aaa
shll
pusha
lcall
je
hlt
dec
cmp
call
lcall
popa
and
lahf
ficompl
add
jmp
cmp
mov
enter
jnp
mov
xlat
pop
fwait
mov
int
mov
and
int3
subb
and
xorb
mov
ret
nop
cmp
jae
fs
imul
stos
test
or
xor
mov
xorb
test
xor
pop
push
xchg
mov
xor
mov
enter
jl
lcall
popa
sub
xor
and
stos
call
dec
imul
xor
xchg
and
jecxz
gs
or
inc
sub
ss
je
dec
lahf
out
mov
fs
ret
xchg
add
mov
cwtl
lret
or
or
cmp
das
filds
xor
adc
mov
int3
in
lcall
gs
inc
dec
imul
xor
movsl
mov
jae
sub
fs
or
fwait
sti
and
sub
inc
enter
mov
xor
jge
fwait
fwait
sub
or
mov
sbb
sbb
vpunpckhwd
ret
fwait
leave
lcall
jae
fs
sbb
fldcw
add
in
scas
pop
insb
xlat
negb
es
fsubl
and
testb
xchg
mov
je
dec
pop
test
mov
cmc
sti
sub
fcompl
cs
ljmp
or
sbb
in
and
gs
cltd
js
aad
popf
mov
push
cmp
sbbl
xor
pusha
fwait
dec
lahf
fistl
aam
jns
fnstcw
mov
cmp
sarb
testl
pushf
fs
movsl
psllq
sub
dec
cmp
scas
jb
fs
and
and
int3
loope
xor
inc
fildll
jge
aad
xchg
fists
mov
sbb
adc
cmpsb
dec
stos
adc
imul
lds
mov
jo
dec
js
fs
xor
subl
inc
xchg
test
xor
fs
aaa
stc
xchg
gs
mov
vmwrite
jo
mov
xor
xor
ret
pop
divb
fisubl
gs
jno
fdivl
negl
and
test
jns
mov
lret
das
fldenv
xor
lcall
mov
and
pop
fcompl
pop
jbe
popf
sbb
ret
inc
mov
test
insb
inc
push
inc
std
push
std
inc
push
xor
je
and
leave
inc
nop
into
lret
sub
mov
lcall
fmul
adc
clc
data16
loope
jbe
enter
sbb
lcall
xor
fwait
or
stos
adc
cmp
adc
inc
mov
fwait
movsb
mov
subl
or
out
xor
add
inc
sub
mov
dec
das
fld
inc
cmp
lcall
mov
enter
mov
test
xchg
mov
jmp
mov
xchg
test
les
test
add
les
adc
mov
lds
out
iret
and
mov
movsl
xlat
lahf
sbb
int3
gs
test
aad
je
mov
les
int
in
dec
push
int
cmc
gs
repnz
pusha
dec
sub
mov
lret
sub
cwtl
leave
fwait
sbbl
and
int
ja
or
stos
stos
adc
lods
add
rorb
jecxz
ret
xor
test
xor
movsl
mov
mov
icebp
cmc
xlat
dec
mov
add
addr16
mov
ret
xchg
call
jl
jne
pop
hlt
and
sti
sub
lcall
lcall
ret
push
mov
dec
mov
negl
push
sub
sbbl
sbbb
cwtl
fwait
xchg
or
and
je
aad
stos
ljmp
in
popa
ret
adc
jge
fwait
fwait
sub
mov
aad
int
pop
push
adc
sub
data16
inc
in
popf
hlt
call
lcall
xor
xor
inc
push
adc
cmp
pop
cltd
add
icebp
jl
icebp
jg
mov
or
and
lock
in
andl
js
ror
or
sbb
or
push
dec
popf
int3
xor
mov
stos
jg
inc
test
lock
bound
sub
xor
or
mov
add
sub
nop
push
jbe
fcmovb
icebp
pushf
or
bound
xor
fwait
leave
imul
stos
inc
sub
lods
push
pop
fsubrs
aas
and
adcb
inc
sub
cmp
inc
hlt
sub
sub
mov
adc
and
lcall
lcall
ret
movsl
mov
mov
int
push
mov
and
inc
sub
mov
hlt
call
mov
sbb
cs
shr
fwait
adc
dec
sub
lcall
mov
jecxz
pop
fprem1
outsl
mov
fs
mov
aam
aad
aad
xchg
xor
gs
fs
and
lahf
sbb
int3
gs
xor
jne
sbb
sbb
aam
push
xor
mov
dec
xchg
add
mov
xchg
mov
mov
cmpsb
test
aad
stc
or
sbb
and
xchg
stos
and
or
outsl
push
cmp
cmp
mov
fs
add
pop
or
xchg
stos
dec
lods
cs
or
mov
dec
scas
pop
cs
call
mov
movsl
fs
cltd
mov
lcall
lcall
push
mov
aaa
enter
mov
and
jns
mov
lret
rorl
xor
sbb
icebp
mov
xor
sbb
loopne
gs
xchg
insb
xchg
sbb
fld
xor
lcall
and
negl
fcompl
cs
lods
adc
and
icebp
cld
adc
xor
mov
mov
test
in
push
inc
jmp
fwait
test
lcall
test
pop
jns
in
aam
sub
dec
cmp
ret
mov
gs
faddl
sub
sub
add
scas
pusha
mov
fwait
lods
mulb
int
cltd
mov
add
stos
inc
sub
sbb
mov
push
xor
sbb
mov
fs
mov
add
lock
in
addl
lcall
ret
div
mov
or
mov
div
fs
adc
mov
sbb
mov
push
xor
sbb
pop
sbb
lcall
xor
mov
out
mov
pop
add
fcmovnb
ret
div
pop
xor
or
and
and
sub
add
jmp
jle
divb
popf
mov
dec
icebp
jne
dec
cltd
cld
cmp
les
adc
cmp
inc
mov
mov
and
jl
fwait
and
movsb
adcl
mov
lret
outsl
or
mov
sbb
xor
and
pop
pop
test
js
aad
sbb
stos
cld
sbb
sti
lcall
and
and
lcall
lock
sbb
xor
divl
int
sbb
lret
sub
lcall
ret
mov
mov
fcoml
pop
push
in
aam
sub
lock
inc
add
rol
ret
div
cmp
xor
or
and
fs
mov
inc
rcrl
inc
int3
sbbb
fwait
lods
mulb
int
cltd
mov
xchg
aam
aad
fstl
dec
scas
pop
insb
xor
cmc
mov
mov
pop
lock
in
addl
lcall
cmp
lcall
int
cltd
mov
add
stos
inc
sub
sbb
mov
push
xor
divl
pushf
or
add
pop
xor
testb
adc
mov
xor
mov
sub
fwait
xor
adc
aad
fidivrl
test
mov
sbb
int
sti
mov
and
jns
mov
lret
rorl
xor
div
cmp
xor
or
or
jl
fwait
and
test
sub
mov
hlt
out
rcl
fs
fwait
test
mov
fmull
cmp
dec
sub
xor
pop
add
lret
ret
lods
div
cmp
xor
or
and
fs
les
sbb
arpl
ror
int3
sbbb
fwait
lods
mulb
int
cltd
mov
lock
aad
fstpl
dec
mov
dec
scas
pop
insb
xor
cmc
mov
mov
pop
lock
in
addl
lcall
cmp
lcall
int
cltd
mov
add
stos
inc
sub
sbb
mov
push
xor
sbb
mov
fs
mov
sub
lock
in
addl
lcall
ret
div
pop
xor
or
and
pop
mov
cmp
mov
jmp
push
test
lock
testl
and
xchg
stos
lcall
ret
mov
xchg
fwait
test
mov
sub
adc
mov
push
mov
hlt
out
nop
aad
gs
fwait
testl
and
lock
test
mov
lea
sbb
icebp
lods
mov
mov
mov
sbb
sar
arpl
ror
pop
xchg
gs
sub
jg
pop
icebp
gs
xor
push
xor
dec
inc
mov
dec
scas
pop
or
xor
pushw
icebp
fsubl
fs
les
pushf
lds
and
lret
sbbb
fwait
lods
mulb
int
cltd
mov
mov
mov
lret
dec
mov
dec
scas
pop
out
xor
cmc
mov
mov
pop
lock
in
addl
lcall
daa
mov
icebp
pushf
adc
xor
mov
pop
xor
sub
jp
jmp
dec
enter
mov
sub
mov
mov
mov
movsb
sbb
lret
push
fwait
lcall
and
negl
fcompl
rcl
fnstcw
insb
cmp
lcall
sbb
and
fwait
and
out
adc
cmp
add
jl
sub
mov
mov
sbb
jno
xchg
xor
mov
jmp
fwait
sbb
cmp
push
sarb
cmpsl
sub
sub
mov
and
mov
dec
mov
add
mov
xchg
or
mov
xchg
inc
pop
inc
std
xor
dec
sahf
shlb
je
push
adc
push
lods
lock
jmp
push
enter
xor
cltd
fwait
ja
dec
adc
xor
or
xor
aas
call
jge
inc
mov
xchg
inc
pop
inc
popf
xor
fstpl
jg
test
aam
sub
cwtl
cmp
fbld
cmp
insl
fwait
fwait
ja
dec
neg
xor
or
xor
push
mov
mov
shlb
or
out
mov
testl
cld
mov
jmp
xchg
test
fisubl
sbb
cwtl
or
adc
movsl
sbb
lcall
lcall
ret
xor
ficoms
inc
xor
mov
mov
mov
outsl
xchg
inc
sub
leave
sub
xor
ret
sti
movsb
mov
dec
sub
mov
mov
mov
arpl
lret
lcall
xor
xor
inc
rcrl
jmp
inc
enter
pop
or
mov
test
mov
adc
stos
sub
xchg
lret
lret
add
pop
jns
sub
gs
in
cmp
xchg
mov
xor
dec
lret
lret
push
adc
xchg
mov
test
mov
lcall
out
aad
inc
out
inc
cmpsb
test
aad
cwtl
or
loope
and
cld
push
mov
sbb
mov
je
je
lcall
lcall
xor
sub
sub
sbb
pop
shlb
div
pop
fs
dec
jo
and
pushf
push
mov
sbb
arpl
mov
icebp
jg
xor
pop
cmp
fsubl
inc
jbe
notb
mov
xor
cltd
sub
mov
in
fwait
cltd
mov
lcall
jg
cmpsl
jmp
adc
adc
cmp
sbb
test
lds
bound
sub
sub
or
lcall
stc
push
in
aam
add
lret
inc
loopne
xor
lcall
mov
mov
xor
fcompl
cs
or
mov
test
mov
xchg
sub
mov
mov
or
jno
xchg
xor
mov
mov
fwait
ja
dec
xchg
fdivl
xor
and
sbb
cmp
shrb
cmp
pop
xor
sbbb
xor
mov
testl
inc
sub
notb
mov
jmp
fwait
lcall
mov
mov
xor
fcompl
push
lods
lock
xor
mov
enter
fisttpll
divb
movsb
mov
jo
add
lcall
sbb
sbbb
sub
adc
test
aad
xchg
cmp
jge
add
divb
aad
xor
pop
icebp
test
xor
lock
add
sub
ret
div
sbb
xor
or
and
and
sub
add
scas
and
aad
or
adc
push
movsb
pop
dec
xor
mov
ljmp
fildll
or
pop
cmc
mov
xor
sub
add
cmp
add
div
in
mov
pop
icebp
and
mov
push
mov
inc
mov
enter
lea
jnp
mov
push
lret
jo
jmp
movsl
mov
sbbl
fsubl
adc
mov
out
dec
cmp
lret
icebp
mov
lcall
mov
or
scas
or
mov
pop
inc
sbb
sub
sbb
fwait
jg
test
aam
sub
cwtl
cmp
lahf
and
decb
fwait
ja
dec
je
xor
or
xor
push
mov
mov
shlb
pop
aam
cmc
test
mov
xor
adc
cwtl
cmp
sbb
dec
shlb
sbb
sbbl
lahf
cmp
int3
cmp
sub
jbe
shlb
pop
stos
cwtl
or
dec
icebp
cmc
mov
or
sub
push
cs
fildll
push
pop
add
mov
dec
mov
sbb
cmp
inc
imul
pop
xchg
loop
sub
or
sbbl
pop
pop
push
mov
notb
push
rcr
das
dec
pop
sbbb
mulb
mov
dec
sbb
jg
in
clc
fcmovb
arpl
cmp
lret
or
xor
testl
fdivl
mov
and
xchg
sbbl
ret
fwait
pusha
push
adc
mov
and
mov
adc
adc
test
mov
or
xor
dec
cwtl
lcall
xor
jmp
cltd
and
int
dec
and
int
nop
xchg
and
movsb
or
mov
or
fwait
and
pop
dec
adc
inc
insl
inc
aas
lds
add
jmp
popf
cmp
xor
fwait
xor
adc
jl
dec
xchg
cmp
inc
jmp
fwait
leave
gs
or
and
movb
jl
loope
xchg
ret
lret
sub
or
enter
in
jo
jo
arpl
lcall
xchg
pop
cltd
mov
mov
sbbb
outsb
dec
pop
stos
popf
jp
cmp
insl
jo
pop
cmc
cmp
movsl
mov
fwait
movsb
mov
fwait
sub
mov
fwait
and
outsb
dec
add
sbb
arpl
int
jbe
pop
cltd
sti
xor
cmc
mov
mov
aad
rcll
cmp
das
sbb
mov
cmp
and
in
in
andl
inc
mov
lret
add
lcall
pop
in
sub
mov
inc
or
lock
xchg
or
fisttpl
lcall
mov
dec
adc
mov
in
cmp
ret
pushf
sbb
or
insl
dec
negl
pop
mov
out
ret
test
sub
fwait
lcall
xor
and
cltd
movl
sub
mov
dec
loope
add
out
lcall
fs
insb
jl
int3
pop
xchg
leave
inc
jmp
fwait
movsb
mov
fwait
sub
xchg
xor
add
inc
sub
lds
xor
lret
int
lcall
or
and
lcall
lcall
cmpsl
mov
cltd
fwait
inc
mov
mov
cltd
and
idivl
mov
lret
das
fldenv
cltd
lcall
and
enter
pusha
lcall
fnstcw
mov
cmp
sarb
movl
and
adcl
sbb
popf
ret
nop
cmp
idivb
push
andl
dec
xchg
sub
add
movb
inc
fcoml
mov
and
outsl
mov
fs
testb
mov
cmp
out
int3
aad
mov
movsl
add
and
and
sub
sbb
sarl
inc
and
lret
sbb
cwtl
fwait
testl
cltd
xor
adc
jl
push
mov
jmp
fwait
leave
lcall
mov
fildll
iret
rolb
mov
push
dec
imul
sub
int3
mov
jo
fwait
mov
movsb
xor
movsb
adc
mov
lret
dec
mov
mulb
xlat
sbb
fwait
pop
cmp
sub
inc
dec
adc
and
sbb
movsb
and
jp
fwait
xor
and
subb
sbb
lret
lods
pop
and
jge
fwait
fwait
sub
int3
aam
sub
dec
stos
lcall
lret
divl
bound
and
stos
xor
inc
sub
cmp
lret
scas
movsl
mov
sbbl
jg
testl
sbb
pop
leavew
and
stos
cltd
lcall
sbb
loopne
int3
cmp
lcall
gs
jle
lret
jae
cmp
jle
inc
xorl
push
sbb
push
lds
mov
hlt
out
jo
fs
popa
int
outsl
icebp
out
mov
or
xchg
mov
frstor
jnp
sub
xchg
jno
xor
sbb
jnp
enter
jge
jne
ret
cmpsb
push
xor
repz
sbb
inc
sub
mov
cmpsb
call
jle
fs
and
dec
xor
or
ljmp
inc
cmp
lret
pop
xchg
mov
fwait
lcall
sub
negl
test
imul
xor
inc
inc
mov
in
and
fisttpll
xor
cwtl
or
cmpsl
movsl
sbb
cmp
lcall
pop
mov
int
jbe
pop
cltd
sti
xor
cmc
mov
mov
aad
rcll
outsb
jmp
inc
mov
cmpsb
outsb
lock
gs
mov
out
or
xor
xchg
xchg
sub
movb
fadd
arpl
ror
pop
test
fwait
sub
fs
mov
xor
aad
push
jbe
push
cmp
push
push
xor
mov
stos
jg
xchg
inc
xor
fwait
adc
and
divb
xor
test
rcrl
cmp
mov
sbb
icebp
into
mov
mov
mov
test
push
xor
inc
mov
loopne
mov
fwait
lcall
and
and
jbe
cs
dec
adc
arpl
cmp
lret
into
or
mov
sbb
cmc
mov
add
mov
cmp
inc
mov
lret
stos
sbb
gs
fisttpll
jl
fwait
and
leave
stos
inc
cmp
and
lcall
xorl
xor
adc
negl
outsb
fwait
sub
sbbl
ret
lret
sbb
mov
add
dec
cmpb
outsl
mov
outsl
cwtl
lret
or
orb
lret
das
flds
mov
gs
pop
int3
fsubrl
outsl
fisubs
inc
sub
mov
jbe
cli
sbb
cmp
and
dec
icebp
in
dec
mov
push
in
adc
mov
cmpsb
outsb
jo
fs
mov
out
or
xor
xchg
xchg
sub
movb
fadd
arpl
ror
pop
out
adc
xor
adc
lcall
sbb
stos
adc
out
and
cmp
mov
enter
jl
lcall
cwtl
inc
inc
jo
rdtsc
lcall
xor
inc
mov
loopne
mov
icebp
call
enter
mov
sti
dec
cltd
pop
cmp
mov
lret
pop
lods
lahf
loopne
outsl
inc
pushf
mov
lcall
jno
adc
dec
imul
push
inc
mov
mov
mov
or
mul
fwait
xor
in
mov
nop
out
jge
imul
adc
sbb
movsb
and
movsl
or
xchg
stos
adc
adc
inc
fucomip
in
inc
int3
cmpb
cwtl
fwait
movsl
add
and
and
int3
mov
push
lret
adc
jns
div
aas
adc
dec
es
fwait
int3
xor
mov
mov
lret
inc
mov
loopne
sub
fwait
lcall
mov
xchg
sub
movb
fadd
arpl
pop
sub
fwait
fwait
sub
fs
xchg
xor
lcall
gs
mov
xchg
mov
cwtl
fwait
xlat
pop
fcomi
jg
mov
dec
xor
in
mov
cmp
setg
xor
cmp
xor
cmp
fsubrl
pmaxub
inc
sub
mov
jbe
cli
sbb
cmpl
xor
jae
dec
push
gs
in
adc
mov
cmpsb
outsb
adc
fs
mov
out
or
xor
xchg
xchg
sub
movb
fadd
arpl
ror
or
fs
sub
data16
fs
adc
push
vmovdqa
cmp
cmp
divb
cmp
gs
jle
xchg
fwait
and
ret
jmp
divl
fisttpl
lcall
mov
mov
or
xor
mov
movsl
lcall
ret
pushf
sbb
sub
xor
fmuls
add
inc
sub
sbb
mov
push
xor
sbb
stc
sbb
lcall
or
xor
stos
fnstcw
int
mov
lret
dec
sbb
gs
fisttpll
jl
fwait
and
fldcw
stos
gs
lret
ret
and
adc
fs
mov
adc
mov
mov
fwait
sub
mov
xchg
cmp
cmp
gs
lcall
adc
fwait
clc
cmp
sub
lods
lock
mov
enter
jp
cwtl
fwait
enter
inc
mov
sub
sbbl
ss
xor
dec
push
xor
lcall
mov
mov
xor
fcompl
push
lods
lock
mov
enter
pop
sbb
icebp
jle
leave
sbb
lcall
cli
xchg
cmp
add
stos
lcall
ret
lcall
cmc
sbb
xor
sub
mov
and
xor
or
add
fstpl
dec
pop
pop
and
pop
mov
shll
lret
dec
movsl
mov
lret
fwait
sub
fwait
xor
adc
inc
jns
notb
mov
fildll
pop
or
cwtl
dec
sbb
pusha
mov
fwait
sbb
adc
pop
or
inc
jns
cmpxchg
xchg
lock
inc
sbb
xchg
mov
dec
pop
lds
mov
lcall
jg
cwtl
push
dec
imul
sub
out
adc
ja
enter
mov
test
mov
dec
adc
sub
imulb
int
negl
cmp
mov
lret
pop
out
jmp
mov
sub
mov
lea
xor
xor
cld
pop
lods
and
push
dec
std
cld
cld
xor
dec
xchg
jno
add
fwait
add
lcall
mov
lret
inc
mov
das
ret
fdivl
fs
mov
sbb
cld
and
cwtl
stos
sub
lcall
ret
mov
xchg
fwait
fwait
sub
andb
cltd
xor
or
lret
movsb
adc
mov
lret
aad
pop
sbb
cmp
and
imulb
pop
cwtl
lds
ljmp
cmp
xchg
test
xor
adc
cmp
adc
jns
divb
dec
es
fwait
int3
xor
mov
mov
mov
fidivl
sub
add
xchg
insb
imul
xchg
add
cmovg
and
in
gs
lods
ret
mov
pop
lret
fwait
xchg
xchg
xlat
inc
mov
jbe
fs
lcall
mov
xor
dec
ret
lret
jne
xor
push
adc
fs
mov
mov
push
lret
mov
xchg
rcl
fs
mov
aam
cmc
cmp
and
gs
dec
add
out
lcall
int
jbe
ds
cltd
sti
xor
cmc
mov
mov
push
gs
in
sub
stos
movsb
push
call
ret
divl
mov
pusha
xchg
xor
cmp
shufps
cmc
cmp
and
jns
aam
or
xor
movsl
pop
cmp
int3
gs
pop
cmp
xor
out
jmp
fwait
lcall
jle
xchg
xor
cmp
add
stos
inc
sub
lock
inc
pop
sbb
shlb
mov
fwait
test
and
pop
sbb
int3
gs
jns
enter
xchg
int3
ret
mov
xchg
outsb
mov
fs
xor
mov
sbb
and
lcall
lcall
scas
pop
out
adc
fistl
sub
negl
fisubs
test
sbb
jge
and
ret
fcomps
lcall
jne
jno
push
in
adc
cmp
add
sub
sbb
int
fs
stos
adc
test
mov
ret
hlt
call
lcall
xor
xor
or
xor
aam
aad
mov
stos
inc
mov
hlt
call
lcall
xor
jbe
dec
cltd
pop
cmp
and
test
xor
mov
sbb
sub
mov
repz
lcall
lcall
sub
push
mov
ljmp
xlat
mov
push
in
inc
outsb
test
lds
out
sub
sub
pusha
push
mov
fcompl
push
add
push
mov
push
mov
cltd
fwait
inc
mov
mov
cltd
and
jns
mov
lret
das
flds
inc
test
lcall
mov
and
cltd
pop
mov
mov
xchg
js
aad
sbb
stos
cld
sbb
sbb
jg
add
and
and
or
in
aam
imul
scas
mov
or
orb
or
fcompl
pop
or
notb
outsl
shl
xor
lcall
inc
mov
add
aam
inc
pop
sbb
xor
and
sbb
popf
sub
and
inc
idivl
push
push
cld
pop
lods
and
push
dec
std
cld
cld
std
std
add
fadds
add
xor
sub
mov
ret
lret
sub
aam
nop
nop
mov
je
or
adc
jl
sub
cmp
inc
jmp
fwait
movsb
mov
xchg
sub
mov
fwait
and
push
mov
movsb
adc
mov
lret
cs
sbbl
aam
fmul
movsb
xor
test
cmp
mov
sbb
mov
dec
push
inc
fs
mov
aam
mov
inc
orb
xor
js
cmc
mov
movsl
pop
lock
test
jo
enter
div
sbb
xor
or
and
fmul
sbb
fsubrl
inc
sub
sbb
mov
push
xor
sbb
pop
sbb
lcall
xor
mov
mov
arpl
mov
icebp
mov
cwtl
or
fcompl
push
lods
lock
mov
enter
mov
mov
dec
icebp
mov
dec
cltd
cmp
inc
add
lret
pop
xchg
add
call
lcall
xor
xor
and
je
hlt
fdivrl
sti
inc
mov
stc
cld
pop
dec
fs
sbb
and
in
aam
inc
sbb
xor
cmp
addr16
aaa
or
jge
testl
add
xchg
insb
cmp
lcall
xor
pop
icebp
test
sarl
cld
sbb
mov
cmpl
sbb
fwait
pop
sub
sub
lods
lock
xor
mov
enter
mov
sbbl
xor
pop
icebp
test
sarl
cld
sbb
fistpl
jl
dec
rcr
fs
movsl
setno
in
imul
fsincos
pop
push
mov
pusha
addr16
mov
sbb
and
stc
int3
fmull
mov
xchg
sub
inc
jp
gs
pop
cmp
arpl
sti
push
in
aam
xor
dec
cmp
xorb
fwait
movsb
mov
fs
cmp
and
gs
sub
pop
cmp
xor
and
icebp
mov
adc
and
fmul
or
cmp
mov
inc
xor
fs
xor
mov
movlps
in
test
lds
dec
imul
xor
sbb
cmp
cwtl
dec
push
add
mov
sub
push
xor
dec
inc
mov
dec
scas
pop
int3
xor
add
fsubl
nop
gs
in
mov
push
mov
out
inc
mov
sbb
stos
aam
mov
jnp
sbb
adc
inc
sbb
dec
jmp
icebp
or
mov
mulb
int
fs
push
in
mov
cmp
loop
aad
lock
inc
ss
int
or
cmp
mov
pop
inc
mov
xor
lcall
mov
mov
xor
dec
xchg
add
inc
sub
mov
stc
cld
pop
dec
fs
sbb
and
in
aam
inc
sbb
xor
cmp
addr16
aaa
or
jge
testl
add
xchg
insb
cmp
lcall
xor
pop
icebp
test
sarl
cld
sbb
ret
lcall
and
and
lcall
mov
dec
mov
xor
mov
or
int
sbb
lret
sub
lcall
ret
mov
mov
xchg
fcompl
orb
nop
fidivrl
lcall
pop
and
adc
mov
or
arpl
sbb
mov
fistpl
mov
fwait
mov
dec
pop
adc
push
xor
sbbb
cmp
dec
sbb
xor
aad
mov
out
push
lcall
dec
cwtl
xchg
pop
mov
mov
add
mov
push
imul
mov
fstpl
jg
test
aam
sub
cwtl
cmp
mov
mov
sbb
scas
test
mov
mov
clc
xor
ljmp
adc
loopne
inc
sub
dec
gs
fstpl
and
gs
add
cs
lret
lds
fildll
cmp
lods
repz
sub
mull
btc
fsubrl
dec
cltd
inc
out
or
pop
add
mov
ret
div
cmp
xor
or
and
and
sub
add
test
or
loop
and
jg
aad
psrlw
in
adc
lds
fs
adc
and
adc
sub
lds
mov
data16
divb
mov
fwait
adc
leave
in
aam
adc
mov
ret
lret
push
jp
gs
push
andb
xor
aad
gs
jmp
push
test
xor
dec
adc
fs
adc
ds
andl
lcall
cmp
adc
adc
and
and
sub
add
imul
sbb
icebp
mov
mov
mov
or
mov
hlt
out
push
aad
gs
test
mov
fmull
gs
in
test
lds
hlt
fildll
sbb
aaa
mov
sbb
sbb
add
gs
cltd
insb
xchg
inc
mov
fldenv
push
mov
xor
sbb
and
negl
fcompl
cs
or
mov
hlt
call
lcall
int
fs
push
push
sub
call
fucomip
outsl
inc
je
arpl
gs
fstl
cmp
gs
in
imul
notb
mov
cltd
mov
stos
xor
sbb
add
gs
cltd
inc
call
out
lret
mov
dec
cmp
lcall
lcall
sub
addr16
lahf
pop
adc
sub
add
and
and
gs
cmp
jno
xchg
lds
mov
aad
gs
imull
ljmp
and
sub
push
gs
xor
fs
xchg
and
cmp
cwtl
stos
xchg
aam
jmp
sub
fwait
sub
cwtl
lcall
mov
les
jl
lret
lds
mov
hlt
out
mov
fs
testl
fmul
sub
and
dec
cmp
sahf
pop
int3
adc
jle
cltd
sub
loope
and
cmp
mov
sbb
add
push
je
push
lcall
fstpl
mov
sub
sub
sbb
pop
shlb
fdivrs
cltd
fwait
aam
leave
mov
testl
inc
sub
fstps
roll
cmp
add
div
int
mov
pop
mov
mov
shll
subb
nop
ljmp
xchg
xchg
and
cli
push
in
aam
sub
dec
cmp
ret
sti
gs
mov
int
or
cmp
push
mov
xor
fldenv
fs
call
movsl
negl
fcompl
rcl
pop
mov
cmpsb
test
aad
cwtl
or
fstpl
sbb
sub
lcall
shlb
sbb
sbbl
fisubl
lea
lret
jge
and
ret
xor
in
mov
out
fadd
cwtl
stos
dec
leave
push
add
cmp
subb
or
mov
dec
sbb
sub
les
adc
sub
pop
mov
negl
fmul
and
mov
sahf
dec
das
inc
scas
cltd
xor
add
aad
add
inc
sub
fld
jmp
lcall
enter
push
xchg
sahf
mov
inc
or
xor
xchg
xor
fwait
lcall
dec
fsubl
cltd
jg
in
sub
cwtl
cmp
imul
mov
lcall
cmp
fwait
xor
adc
adc
push
xor
loopne
sub
fwait
lcall
sbb
les
mov
sbb
inc
sub
mov
cmpsb
test
mov
cmpl
and
dec
mov
sbb
mov
subb
cmp
pop
xchg
mov
fwait
lcall
mov
testl
inc
sub
gs
test
test
aad
stc
or
adc
and
lcall
mov
shlb
stc
stos
cwtl
or
test
mov
lcall
lcall
xchg
xor
pop
or
sbb
dec
and
fdivl
xor
and
xchg
out
jg
imul
icebp
push
mov
push
sub
dec
mov
loope
xor
inc
fildll
mov
sbbl
jg
mov
sub
lcall
mov
shrl
sbb
outsb
pop
movsl
sbb
jg
inc
jbe
pop
neg
inc
mov
xchg
adcb
push
ja
push
je
xor
xor
shll
vmovdqa
cmp
cmp
divb
sbb
gs
jle
cmpsb
push
sub
mov
dec
or
mov
xchg
inc
rcr
mov
lcall
adc
adc
mov
cs
cmp
leave
fwait
sbbl
push
fs
add
push
subb
gs
lcall
add
jo
int3
xor
or
test
inc
dec
imul
xor
test
or
xor
dec
add
cmp
lcall
add
add
lcall
fwait
and
lcall
repnz
xor
sub
mov
insl
movsl
mov
pop
and
lcall
fwait
sbb
sub
cmpl
loopne
and
fwait
lcall
and
sbb
xor
add
adc
mov
lret
lods
lds
fcompl
and
and
xor
dec
jne
mov
fidivs
cmovo
fstl
leave
mov
mov
xor
mov
mov
adc
add
stos
lcall
ret
div
pop
xor
or
and
and
test
aam
dec
cmp
repz
adc
sbb
fwait
fwait
sub
xor
and
in
addl
lret
mov
cmpsb
test
mov
enter
mov
mov
adc
sbb
xor
rclb
ret
pop
sbb
icebp
frstor
mov
adc
push
call
ret
imul
or
std
push
std
inc
cltd
int3
cmovl
lret
pusha
mov
test
mov
fwait
sub
fwait
je
out
xor
movsb
adc
sbb
movsl
add
movsl
sbb
lcall
lcall
inc
xor
movsl
mov
sbbl
cmp
cmp
and
outsb
xchg
js
imul
xor
mov
cmp
cltd
xor
or
inc
sub
flds
push
les
cmp
push
push
xor
mov
stos
sub
lcall
ret
xor
mov
out
or
xor
xchg
xchg
sub
movb
fadd
arpl
sbb
movsl
add
sbb
xor
negl
outsb
add
inc
sub
nop
lcall
outsl
pusha
sti
sbb
xor
sbb
and
lahf
xor
rcl
mov
lret
das
pop
add
pop
push
sbbl
sub
test
jae
add
add
leave
inc
fildll
mov
xor
mov
xor
xchg
lock
mov
lds
cmp
or
adc
jge
adc
inc
jbe
mov
imul
and
xor
mov
add
cmp
movsb
xorl
adc
dec
int3
sbbb
jg
dec
sbb
pusha
mov
fwait
sbb
adc
pop
or
movsb
adc
mov
lret
xchg
fs
sbb
mov
mov
xor
dec
aad
in
iret
add
sub
lock
rclb
ret
jl
lcall
and
xchg
adc
cmp
or
stos
lcall
push
ds
add
std
cmc
fisttpll
jl
fwait
and
fstps
adc
inc
aad
cli
mov
cmpsb
test
aad
cwtl
or
arpl
enter
adc
jge
lret
inc
mov
lret
sub
lcall
int3
fiadds
int3
fs
sub
stos
cwtl
or
adc
sub
aam
inc
add
fdivs
bound
inc
dec
gs
test
mov
cmpsb
test
mov
enter
mov
mov
xchg
js
aad
pop
mov
xchg
test
or
repnz
outsb
or
sub
int
dec
and
int
pop
lods
jmp
repz
xor
xor
sub
dec
pop
js
jg
fsubl
or
movsb
fwait
xor
adc
inc
sub
mov
hlt
call
lcall
xor
movsl
sbb
lcall
gs
inc
mov
out
int3
aad
mov
mov
int
sbb
and
gs
cltd
aam
mov
cwtl
cmp
cmp
gs
mov
adc
bound
stos
lcall
fdivl
sub
aam
sbb
xor
negl
fmul
and
inc
aad
gs
jmp
inc
enter
cltd
gs
mov
int
adc
fcompl
pop
or
movsb
adc
mov
lret
sbb
mov
xlat
inc
and
lcall
cli
mov
cmpsb
scas
xor
fs
int
pop
mov
test
aam
aad
stc
stos
leave
inc
jmp
fwait
movsb
mov
ret
sub
fwait
and
jmp
imul
sarl
inc
cmp
lret
aad
fwait
xchg
fwait
fwait
aam
dec
stos
xor
movsl
sbb
lcall
fwait
mov
inc
xor
inc
mov
mov
push
xchg
fsubl
cmp
lcall
fidivrl
lret
inc
fildll
cmp
sbb
mov
pop
aaa
mov
ja
or
dec
mov
xor
div
sahf
sbbl
mov
fmul
gs
stos
inc
sub
mov
xchg
test
aad
fwait
adc
daa
mov
inc
mov
movsl
jb
lcall
inc
xor
sbb
negl
lcall
xor
xchg
sub
cltd
lds
dec
imul
jge
fwait
sub
fs
sub
xor
aad
mov
lret
inc
fildll
cmp
mov
fs
mov
lcall
cwtl
push
in
aam
inc
pop
sbb
xor
and
sbb
movsb
and
pop
and
add
mov
xchg
or
mov
hlt
call
lcall
int
fnstenv
push
mov
test
cmp
scas
pop
push
gs
lret
and
negl
fcompl
jl
dec
loop
lret
inc
loopne
cltd
cmp
fimuls
xchg
scas
sbb
and
fcompl
push
lods
lock
xor
mov
enter
jl
lcall
int
push
mov
and
mov
cwtl
inc
loopne
cmpsb
outsb
push
aad
gs
mov
gs
fnsave
and
test
aam
aad
gs
jmp
inc
pop
inc
jle
xor
dec
mov
fs
fs
sbb
and
xchg
movsb
mov
aam
cmc
bound
and
testb
notb
mov
fwait
mov
cwtl
lcall
mov
and
sub
push
lds
and
lret
test
gs
sbb
and
jl
fwait
and
leave
stos
inc
aam
and
mov
xor
dec
inc
xchg
test
mov
sbbl
xor
pop
icebp
es
xor
cmpl
dec
cmp
sub
lock
xor
and
jl
fwait
and
movb
sbb
lret
pop
cmc
cmp
ret
mov
mov
aam
cmc
dec
pop
arpl
test
sub
lods
lock
xor
mov
enter
jl
lcall
int
sbb
cltd
and
mov
cmpsl
out
sarb
gs
xor
pusha
cltd
dec
lahf
sbb
rolb
cwtl
lds
xor
mov
div
cltd
fs
sbb
add
xor
xchg
aam
sub
cwtl
cmp
cmp
gs
mov
adc
repnz
enter
int3
cmpb
fwait
jne
jge
sbb
xor
sub
lcall
sub
int
gs
mov
pop
or
xor
pop
xlat
dec
xchg
gs
in
adc
lds
ret
divl
sti
fs
pushw
mov
fs
sbb
fwait
and
sub
inc
sub
xor
dec
imul
xor
sbb
icebp
ds
or
sbb
int3
gs
mov
movsb
adc
mov
lret
aad
cli
sbb
dec
xor
fs
mov
or
call
ffreep
xor
stc
or
repnz
fwait
jo
and
lcall
mov
xor
or
dec
mov
cwtl
fmul
gs
mov
movsb
adc
mov
lret
jns
leave
xchg
xor
or
mov
pop
sahf
test
sub
sub
sbb
pop
shlb
mov
jp
fwait
sub
or
jo
outsl
xor
test
lds
cmp
lret
inc
icebp
lahf
xor
sbb
jae
fwait
and
test
jmp
cmc
cmp
ret
mov
mov
aam
cmc
dec
sahf
arpl
mov
pop
icebp
adc
push
lods
lock
xor
mov
enter
jl
lcall
int
jp
cltd
and
mov
cmpsl
out
sarb
gs
xor
pusha
cltd
dec
pop
sbb
rolb
lds
cmp
mov
divb
cltd
fs
cwtl
fstpl
jg
test
aam
sub
cwtl
cmp
cmp
gs
mov
adc
mov
popa
xchg
outsl
imul
fs
or
xor
pusha
cltd
dec
pop
sti
push
in
aam
inc
sbb
xor
cmp
mov
divb
sbb
cwtl
fstpl
jg
test
aam
sub
cwtl
cmp
cmp
cwtl
fwait
movsl
add
and
and
xor
fsubl
idivl
out
shrb
cmp
pop
fld
inc
cmp
lcall
lcall
jge
adc
inc
jns
leave
lds
push
outsl
add
sbb
icebp
sahf
mov
and
lahf
push
mov
movsb
adc
mov
lret
call
fwait
sub
fs
mov
xor
aad
or
inc
dec
cmp
inc
int3
cmp
cwtl
fwait
testl
negl
cmp
mov
lret
pop
xchg
mov
fwait
lcall
fstl
fwait
xor
in
cmp
stos
notb
dec
mov
pop
sub
adc
mov
xor
xor
or
aas
test
imul
shlb
mov
or
cltd
xor
adc
push
insb
push
xor
inc
inc
mov
xchg
jae
fs
fcmovnbe
gs
test
pop
leave
xor
cmc
aam
sub
cwtl
cmp
imul
cmp
fs
or
or
cli
int3
fdivl
stos
adc
dec
push
lds
cmp
cwtl
fwait
enter
dec
sahf
mov
pop
mov
in
aam
test
xor
cmpsb
ror
adc
mov
mov
icebp
xor
test
push
lds
lahf
inc
xor
mov
sbb
inc
movsl
sbb
lcall
cmp
xor
out
stos
cmp
lcall
sahf
inc
fs
fs
mov
in
aam
test
xor
cmpsb
inc
int3
aad
adc
.byte
stos
cwtl
push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
cmp
inc
data16
dec
inc
cmp
xor
gs
mov
bound
arpl
pop
or
fs
das
incl
push
jns
je
insl
jmp
mov
pop
dec
mov
push
sbb
pop
inc
push
sbb
xor
sbb
sub
sbb
pusha
sbb
fs
inc
push
sbb
nop
inc
push
sbb
add
sahf
sbb
add
jo
jo
jo
nop
xchg
daa
lock
pop
jno
orl
in
pushf
cmp
enter
push
and
lahf
orl
jo
add
mov
fists
call
testb
je
movzwl
mov
sbb
inc
dec
sahf
cld
arpl
jo
jo
jb
in
les
jo
jo
in
xchg
hlt
mov
cmp
jne
push
jl
push
loopne
or
mov
rorb
adc
adc
mov
or
mov
add
mov
push
roll
push
and
mov
imul
testl
adc
clc
fs
mov
dec
adc
fstpt
pop
push
mov
lds
fucomi
mov
adc
lret
push
push
push
clc
mov
mov
jg
mov
outsl
add
xor
add
cmp
jbe
inc
addl
lea
and
push
pop
add
push
mov
jle
insl
imul
pop
adc
sub
add
ds
lea
dec
add
loopne
push
xor
in
mov
aaa
mov
mov
mov
inc
xor
jns
mov
das
add
cmp
jne
sbb
jge
fstpt
add
jmp
add
shlb
idivl
xchg
push
pop
mov
scas
mov
mov
testl
shl
pop
pop
pop
pop
lea
lcall
xchg
push
das
cmp
faddl
pop
outsl
jb
ds
mov
stc
add
fbstp
xchg
cmpsl
mov
add
loope
mov
sub
cmpl
push
pop
xchg
dec
xor
or
jmp
in
sti
xor
pop
fnstsw
mov
add
sub
mov
ja
or
enter
lea
push
lods
insl
rcrl
sbb
adc
adc
mov
cmp
test
add
mov
test
nop
ret
mov
inc
cmp
pop
mov
sti
jmp
add
sub
mov
push
push
pusha
or
je
mov
test
int3
jo
pushl
mov
and
ffreep
arpl
clc
sub
sbb
inc
call
jle
push
dec
push
fwait
sbb
jne
js
and
leave
adc
or
fistpl
call
call
insb
cld
stc
leave
mov
stos
adc
sub
mov
mov
es
mov
loope
rcrl
jb
int
fstl
jns
cmp
inc
adc
jae
fldt
push
insb
dec
jbe
xchg
adc
es
outsl
lcall
or
push
divl
cmp
jne
stos
pop
dec
xor
aad
mov
sbb
or
mov
mov
lea
lea
or
and
rcrb
ret
cmp
adc
or
aad
sub
jmp
arpl
movsb
pop
push
push
add
inc
lahf
sti
lcall
xor
adc
jbe
mov
sbb
adc
xchg
mov
adc
lock
jae
jge
shr
pop
faddl
jne
sarb
pop
ljmp
mov
ret
insb
mov
add
pop
sbb
mov
mov
adc
testb
and
and
fcomps
add
imul
imul
xchg
xchg
aas
rorb
inc
aas
jbe
cmp
jg
mov
cwtl
mov
pusha
push
sub
pop
mov
pop
add
in
pop
ja
xchg
inc
inc
mov
js,pt
das
jne
into
shr
add
cmp
lea
mov
xchg
adc
inc
ss
mov
jae
or
mov
mov
inc
addr16
fs
out
push
push
pushf
pop
ss
je,pn
jmp
pop
pop
pop
jecxz
lcall
sub
jnp
jne
int
add
jns
fwait
in
js
in
scas
xor
insl
or
mov
lret
outsb
or
sarb
inc
push
add
pusha
movsl
push
inc
xor
test
jmp
out
fadds
cmp
jne
scas
jg
and
mov
and
loopne,pn
test
imul
or
fs
imul
movsb
cmpsl
lea
mov
dec
add
xchg
shlb
into
jo
cmp
pop
jmp
je
out
sub
fstl
imulb
je
mov
mull
xor
fabs
adc
cmp
jmp
fildll
jo
xchg
xlat
cmp
push
movsb
push
push
sbb
pushl
mov
push
leave
mov
cmp
or
or
inc
jbe
movsb
dec
or
mov
loop
clc
cmovbe
add
inc
inc
mov
and
jne
addl
inc
cld
add
mov
mov
fucomp
into
dec
mov
adc
movb
loope
pop
pop
pop
pushf
adc
cmpsl
xchg
ret
pop
adc
add
cld
jmp
mov
test
dec
mov
repz
out
faddl
sbb
and
jnp
rcr
add
mov
call
clc
jmp
xchg
add
adc
fsubl
mov
mov
pop
mov
cld
add
cltd
mov
add
je
and
xchg
cmp
sbb
cmp
and
sbb
pop
call
sarb
ret
cmp
adc
orl
or
insb
jne
test
adc
sarb
ret
cli
add
dec
lock
mov
pop
mov
cmp
pop
movsb
mov
pop
jmp
sbb
push
fprem
sub
push
mov
add
mov
adc
sbb
sahf
sbb
push
or
sbb
adc
sbb
cmp
cmp
inc
lret
jle
sub
popl
movl
fisubs
mov
push
push
aam
pop
add
minps
jne
mov
mov
shl
ret
add
ljmp
jnp
fnstsw
add
pop
cmp
fldt
jl
or
mov
add
or
sub
andl
ret
sqrtps
shl
sbb
cmp
scas
mov
jecxz
sub
xor
test
int
pop
add
inc
cwtl
aam
dec
mov
bound
inc
push
add
dec
mov
add
loop
ja
xor
call
test
pusha
add
add
imul
adc
cltd
mov
clc
sbb
sbb
push
mov
xchg
hlt
sub
fistl
or
scas
mov
movsb
icebp
daa
jb
mov
add
aas
xlat
rorb
movsl
outsb
outsl
or
sub
xor
push
pusha
in
or
push
sub
enter
or
dec
or
or
add
mov
lret
cmp
aad
sahf
jp
outsb
fcoms
dec
pop
push
aas
insb
pushl
add
shlb
lea
aam
push
mov
testl
in
fldcw
data16
push
call
movsl
mov
jns
rolb
insl
clc
add
outsb
pop
jne
jbe
in
adc
inc
mov
into
xchg
or
lds
mov
dec
pop
mov
jl
fs
dec
cmp
push
sbb
inc
mov
sub
int3
push
clc
mov
add
aaa
inc
adc
inc
or
sbb
jns
pop
hlt
dec
push
jp
out
sub
sbb
push
jae
xor
push
and
push
inc
lea
sub
jno
bswap
cmp
pusha
mov
ja
push
jp
jae
dec
pusha
sub
add
mov
sub
add
mov
jae
jno
xchg
fcoms
cmp
jne
mov
ss
loope
jmp
orl
fistps
xchg
mov
lods
pop
popf
xchg
fimull
mov
inc
adc
sbb
addb
add
nop
fnsave
push
ret
xor
push
mov
push
pop
int3
or
cmp
xchg
jg
iret
dec
xor
sbb
cmp
or
cld
bound
and
or
js
mov
into
xor
aad
nop
fadds
lcall
fnstcw
pusha
pop
mov
or
jg
pop
mov
xor
je
int3
jbe
push
mov
adc
or
les
cmp
push
sub
hlt
mov
mov
pop
sub
ds
and
push
add
add
xor
stc
ds
xchg
fucomp
imul
aam
ret
jl
jge
xchg
outsl
cmp
xor
push
push
movsb
jne
iret
inc
adcb
lods
mov
pop
out
mov
inc
jp
scas
sub
jbe
es
inc
xchg
jmp
pop
je
clc
mov
jmp
cld
and
cld
bound
test
popf
pop
mov
fisttpl
sti
dec
sbb
das
or
fimull
lods
hlt
push
clc
cmp
mov
jbe
aad
or
adc
pop
lret
data16
xchg
and
or
mov
push
mov
or
fwait
jmp
inc
xlat
add
push
loopne
hlt
sub
mov
in
xor
pop
adc
test
inc
push
inc
cld
ret
call
cmp
pop
rcrb
add
test
pop
pushf
lret
loope
jmp
jb
jb
push
cmp
das
sub
inc
incb
cld
pop
mov
lock
and
mov
iret
nop
cmp
jne
jae
mov
push
and
or
and
pop
xchg
push
sub
sbb
ret
jnp
mov
cmpsl
cmovl
inc
into
decl
fidivrl
aad
sbb
sub
push
cmp
popa
nop
rcrl
mov
test
or
ret
int
int3
or
push
push
insb
push
sbb
popa
adc
xchg
lock
push
sbb
pop
and
mov
cwtl
adc
jle
and
icebp
icebp
clc
or
mov
add
negl
xchg
or
orl
jmp
add
cltd
int
jns
sbb
pop
push
into
test
inc
or
or
dec
xor
sbb
lods
lods
and
mov
add
es
sub
and
xchg
jo
jp
jge
xor
in
repz
fistl
sbb
or
push
loope
iret
nop
out
sub
idivl
adc
xor
rorl
outsl
xchg
fs
add
sub
inc
pop
cmp
lahf
or
call
std
fdivl
int
int
sub
sbb
mov
jo
mov
sub
mov
inc
jp
jg
sub
add
adc
movsb
xor
stos
adc
and
pop
or
pop
sbb
mull
and
fstpl
mov
push
std
movl
cli
and
std
adc
out
aam
in
adc
adc
gs
add
in
mov
adc
iret
sub
xlat
sbb
adc
push
mov
pop
jmp
ret
lea
xor
or
or
movsb
xlat
adc
sbb
lret
leave
sub
mov
popa
push
or
arpl
test
mov
cmp
rorl
add
je
insb
lret
xchg
sub
jl
ret
popa
ljmp
inc
leave
shrb
aad
jbe
mov
fcomps
adc
mov
jmp
jne
mov
sbb
jmp
insl
mov
loope
xlat
jae
stos
jbe
addr16
sub
sub
pop
jne
add
ret
push
jmp
leave
je
jmp
sbb
enter
or
sbb
sub
lahf
pop
fldcw
sbb
jne
adc
dec
adc
test
out
mov
add
mov
jecxz
call
or
inc
xor
loope
mov
inc
loopne
cwtl
add
jo
icebp
mov
mov
dec
inc
or
rorl
jg
loopne
adc
ret
push
push
push
cmp
call
pop
jne
xor
enter
xchg
repz
mov
pop
pop
mov
push
adc
cld
or
mov
adc
or
je
loope
jle
cmp
jg
sub
inc
push
jl
cmp
jg
add
mov
inc
rep
jmp
outsl
lock
adc
leave
jmp
shr
mov
dec
mov
vcmpss
or
mov
in
or
pop
arpl
mov
cmp
ja
je
sar
js
rep
inc
and
sti
std
pop
imul
je
cld
lea
sbb
std
sbb
movb
pop
cld
and
add
test
mov
loopne
xor
iret
mov
or
add
or
inc
or
adc
jns
add
push
repnz
insl
inc
int
out
xchg
add
cli
mov
jae
test
sub
shlb
push
push
inc
aam
bound
fistl
push
jnp
jne
cmc
cli
out
sete
pcmpgtd
mov
cmp
sbb
pop
sub
jno
push
xor
outsl
push
mov
xlat
aam
dec
je
pushf
out
mov
add
iret
sbb
mov
add
sbb
sub
dec
enter
sbb
rcrb
pop
aaa
inc
jbe
and
and
cmpb
std
fisttpll
push
push
push
lea
and
or
sbb
imul
jg
cmpl
ret
and
decl
daa
pushl
and
inc
and
adc
mov
int
push
sbb
lret
loop
insb
lahf
jne
pusha
lea
lods
pop
dec
push
test
dec
ss
jae
cmpb
jmp
push
dec
std
in
add
or
out
imulb
lea
iret
clc
mov
test
je
imul
push
cmp
test
ljmp
cmp
into
ss
into
mov
pop
push
mov
imul
sbb
mov
sbb
loope
rorl
inc
jmp
imul
divl
push
rolb
mov
popa
ret
pop
mov
orl
adc
ror
fcmovbe
je
xor
test
or
push
pop
xor
in
fldcw
add
ja
lea
or
mov
mov
dec
data16
inc
jecxz
jmp
sarl
sbb
pop
ss
bound
jmp
xchg
pop
ret
addr16
dec
xchg
ret
sbb
adc
xorb
sbbl
mov
xor
movzwl
and
cmp
jne
sub
imul
push
push
pop
push
sbb
in
sbb
xor
cmp
imul
sub
or
adc
or
xchg
insl
sub
jne
in
push
or
add
adc
jo
or
mov
std
js
or
hlt
push
fs
pop
pop
add
xchg
or
mov
and
add
and
out
or
jne
call
mov
cmpsb
in
push
lahf
xor
and
sbb
jmp
pop
pop
dec
cld
dec
sbb
push
cmpsl
lds
insb
lock
popf
jle
cmp
mov
jbe
daa
push
in
rcr
and
les
cmp
les
or
pop
test
jmp
addr16
xlat
call
dec
push
dec
xor
xchg
lea
adc
rorb
mov
shl
add
mov
xor
rep
mov
stos
pop
mov
push
popa
pop
insb
xor
jnp
pop
mov
mov
xor
adc
mov
data16
sub
cli
bound
xchg
jnp
testb
xchg
pop
and
das
dec
inc
sbb
mov
and
xor
mov
icebp
and
shr
xchg
or
cmc
arpl
and
mov
stos
or
xchg
or
inc
cli
jae
cmc
je
int3
xor
cmp
in
jmp
jmp
mov
imull
mov
or
ret
adc
mov
and
out
negl
clc
ret
sti
push
fisubrs
fstpt
xchg
clc
or
push
inc
pop
and
xor
sub
xchg
lahf
in
je
and
je
pop
je
xor
cmpsl
jnp
or
test
outsl
insl
mull
jmp
add
or
cmp
ja
lea
add
jne
out
rolb
sub
imul
push
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
and
pushf
mov
ljmp
jb
jmp
das
pop
adc
or
in
test
repnz
aad
add
and
mov
out
dec
in
cmpsb
mov
mov
cmp
in
push
mov
lcall
mov
mov
lea
fldt
mov
call
pcmpeqb
shll
jge
fsubl
add
popa
xlat
adc
xor
push
cmp
jbe
jge
jge
inc
stc
xor
and
xchg
stc
sbb
mov
fstp
fldt
fldz
lods
rcrl
inc
and
pop
cltd
aas
mov
push
in
push
cli
or
or
ret
setg
in
and
adc
mov
xchg
sbb
imul
stc
add
loopne
in
mov
daa
pop
mov
sub
test
mov
or
repz
mov
lds
mov
cld
int
cld
jbe
imul
cmp
mov
mov
bound
das
jmp
mov
xlat
fadds
outsb
xor
xchg
push
or
jg
aas
push
push
int3
into
sbb
rorl
mov
push
pop
test
enter
call
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
incl
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
popf
imul
pop
js
inc
int3
fwait
lds
stos
mov
cmp
inc
loopne
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
inc
dec
cmp
call
mov
push
inc
mov
push
mov
inc
jbe
int3
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
jmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
cmp
xchg
push
cmpsb
scas
mov
pop
or
addl
cli
call
mov
push
in
cmp
xchg
pop
cmpsb
lock
mov
popa
mov
and
addr16
repz
mov
subb
and
add
les
outsb
bound
xor
fistl
push
bound
pop
and
inc
mov
jne
mov
and
mov
fdivrl
dec
sbb
push
xor
hlt
add
and
jmp
xchg
mov
test
les
pop
jne
gs
hlt
lret
push
xor
xor
mov
fsubs
adc
inc
cmp
data16
and
dec
pop
mulb
aas
or
mov
sub
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
std
repz
pushl
imul
push
dec
popa
jae
push
popa
insb
jne
fninit
fldcw
cmp
pop
data16
jo
push
das
lea
fildl
addr16
cmp
bound
aaa
or
adc
sub
test
popa
add
pop
xlat
sub
ss
or
push
cld
inc
ret
push
mov
roll
pop
inc
push
rcrl
mov
test
stc
adc
add
fcoml
in
jmp
cmp
je
pop
mov
add
jae
mov
mov
sbb
xor
nopl
sbb
jecxz
add
lods
pop
push
jns
mov
mov
cmp
adc
loope
and
roll
jb
ja
outsl
xchg
and
loope
add
mov
addl
jb
jmp
push
call
popa
fptan
lock
xchg
aaa
in
xlat
pop
test
subb
push
inc
adc
aam
call
and
mov
mov
dec
sbb
cli
cmp
jo
ret
mov
jae,pt
ret
dec
ret
xchg
mov
and
and
lahf
sbb
cld
outsl
pop
outsb
mov
test
pop
mov
test
pop
ret
cmp
pop
pop
mov
jb
cmp
jne
pop
or
jne
or
xchg
fnstenv
sub
pop
mov
mov
aam
mov
sbb
dec
xchg
xchg
mov
sbb
push
jle
fs
out
sqrtps
scas
sbb
imulb
icebp
sbb
pop
mov
enter
inc
xchg
cmp
pushf
sub
inc
fdivr
repz
mov
orb
xchg
push
data16
or
pop
data16
adc
mov
call
adc
icebp
pop
xchg
pop
cs
lock
jno
jl
cmp
push
sbb
test
xchg
cmp
inc
or
or
fadds
add
sub
dec
inc
and
push
mov
push
jno
lcall
xlat
or
push
clc
mov
imul
shlb
adc
pop
pop
ja
popf
outsb
jp
cmp
adc
fisttpl
jae
push
call
mov
out
push
jnp
in
add
ja
pop
addr16
add
fdivp
popa
xchg
add
pop
push
push
mov
adc
sbb
jmp
or
mov
rolb
add
xor
cwtl
sub
loope
in
xorl
cwtl
fwait
pop
ficompl
stos
cmp
pop
pop
arpl
testl
adc
test
lock
xchg
outsb
cld
mov
rcrb
imul
rorl
and
xorl
out
push
je
jb
and
push
call
pop
jle
sarl
cmp
pop
stos
dec
dec
mov
jnp
shlb
cmp
add
adc
imul
push
cmp
je
addl
insb
jmp
mov
push
sbb
sub
lods
insb
sbb
sbb
pop
inc
pushl
mov
cli
push
lret
std
pop
add
inc
add
sub
sub
jmp
cmp
jnp
adc
mov
inc
or
es
pop
sub
and
pop
mov
xchg
and
inc
add
cmp
mov
cmpsb
clc
xor
and
fwait
sub
mov
push
xchg
icebp
icebp
push
push
push
push
inc
pop
lahf
insb
imul
insb
mov
pusha
pop
mov
outsb
stos
dec
lea
js
dec
clc
or
pusha
add
lahf
mov
mov
loopne
addr16
adc
jbe
add
jp
dec
or
pop
mov
jne
jnp
loop
pop
mov
jmp
ret
xor
lret
xor
outsb
fwait
sbb
leave
ret
pop
out
aaa
cmc
mov
add
je
cmp
fwait
stc
adc
cvtps2pi
dec
jmp
add
dec
stc
aas
sub
jb
je
jmp
cmp
cmp
mov
and
add
cmp
cmp
jmp
jmp
mov
jmp
mov
sbb
jmp
mov
jmp
jmp
cmpsl
jmp
mov
jmp
mov
sti
stos
dec
fucomp
mov
fidivs
cmp
mov
mov
dec
push
or
inc
or
xchg
sbb
xchg
cmpsl
arpl
jnp
jno
aad
or
pop
int3
cmp
push
pop
inc
orl
inc
sbb
mov
out
mov
and
lret
or
fs
sub
fstps
mov
pop
xor
xor
jo
stc
mov
xlat
push
outsb
in
je
push
fdivs
mov
mov
cmp
or
jns
cmp
or
idivb
add
adc
lahf
inc
ja
call
or
push
mov
pop
sbb
cmp
iret
sbb
sbb
fmuls
sbb
push
sub
push
cmp
outsb
or
jb
adc
mov
or
sub
xorl
lret
dec
pushf
xor
scas
hlt
jle
repz
insb
pop
imul
or
rorl
nop
dec
cmp
jg
movl
sbb
mov
adc
out
shlb
sub
inc
cmp
add
xor
pop
mov
lea
sbb
push
mov
add
dec
add
pushl
or
jmp
pop
fbld
gs
stos
jo
dec
xchg
es
pop
ds
in
mov
push
sbb
daa
fdivrs
daa
fistl
call
rorl
negl
rolb
dec
mov
mov
fst
rcl
mov
fldcw
pop
xor
aad
iret
dec
sbb
mov
lock
neg
sbb
inc
pop
pop
sbb
ljmp
sbb
and
movsl
out
daa
insl
sub
jg
jl
pusha
or
jno
push
cmp
les
jle
cmpl
addr16
ret
js
push
push
add
jg
lods
roll
push
pop
out
cmp
sub
shlb
or
add
lret
sbb
out
xchg
imul
mov
inc
xchg
adcb
aam
jnp
ss
cmpl
push
and
mov
cld
jle
adc
mov
cs
insl
ja
jo
js
adc
add
add
sbb
pop
fwait
mov
jbe
xor
loope
inc
sbb
inc
lods
mov
test
cmp
mov
push
and
ss
jne
xchg
mov
pop
jne
mov
cmc
or
mov
add
lret
lea
cmp
mov
and
pop
sub
shll
mov
push
dec
jl
lock
fistl
test
or
out
push
mov
movl
push
or
aad
jne
inc
inc
daa
and
sbb
call
fcmovb
pop
or
pop
mov
jmp
cmp
xchg
cmpb
dec
inc
or
sub
jle
aas
push
mov
loopne
push
fstpl
movl
adc
pop
mov
lcall
mov
mov
lock
stc
mov
jne
lahf
clc
mov
pushf
push
and
shll
shrl
xor
int
sahf
mov
xorl
sbb
inc
add
shr
mov
lcall
clc
insb
mov
out
jo
or
arpl
pop
lea
cmp
icebp
sarb
push
imul
pop
xor
jl
dec
sarl
out
mov
scas
in
push
mov
add
push
rcll
mov
mov
jnp
das
jge
xor
jl
lea
idiv
push
nop
mov
add
sti
nop
xor
push
and
repnz
js
or
cmp
lret
add
je
sti
fcmovnu
movb
cmpl
rcrl
shr
cs
mov
arpl
sub
and
pop
add
xor
jmp
add
xlat
bound
cmp
pop
pop
cs
mov
inc
dec
nop
push
sub
data16
mov
mov
pop
sbb
lret
push
pop
add
loopne
out
int
cld
ret
sbb
jnp
adcl
mov
push
test
hlt
push
cld
add
cmpsb
mov
mov
mov
adc
repz
out
imul
add
iret
inc
popa
inc
push
cmp
fidivrl
or
in
mov
push
jno
mov
arpl
or
cld
xor
push
sahf
mov
pop
dec
mov
cli
bound
push
mov
pop
pinsrw
notl
jo
lret
mov
les
push
xor
mov
mov
jns
cld
dec
fmull
mov
add
cmp
pop
push
pusha
sub
es
mov
jg
stos
mov
and
aaa
add
dec
jmp
xchg
pop
hlt
sbb
push
pop
inc
pushf
sbb
push
insl
dec
mov
jmp
insb
outsb
or
xchg
dec
pop
xchg
pop
lea
loopne
sbb
les
pop
into
mov
push
imul
mov
mov
push
call
pop
mov
mov
es
cmp
jne
dec
je
je
mov
in
add
or
sbbw
or
add
gs
sbb
sub
sub
inc
push
cwtl
jp
pop
cmp
jne
push
adc
ja
mov
cmp
add
jmp
pusha
jmp
push
mov
pop
xor
sub
shr
or
push
imul
clc
inc
xrelease
daa
sub
jl
js
inc
inc
sub
push
lods
or
fists
push
pop
leave
jae
cmp
and
int3
mov
lea
pop
mov
or
out
pop
sub
es
jl
cmp
jge
sub
push
or
rolb
mov
or
jmp
mov
jmp
mov
cmpsb
mov
xor
mov
sub
sub
sarl
sbb
sub
add
lea
fwait
daa
dec
push
scas
cmp
or
lahf
rolb
test
fwait
mov
push
rorb
sbb
aaa
pop
inc
jle
and
mov
sbb
int
push
jb
mov
mov
enter
mov
icebp
xchg
sti
popl
dec
lea
adc
js
jne
xchg
xchg
xor
pop
sub
sbb
sub
jmp
adc
xor
inc
cmp
jl
icebp
pop
sub
lret
push
mov
and
lret
in
andl
push
pop
movsb
xorps
push
or
xchg
pushw
rorl
sbb
into
loopne
dec
push
sbb
pop
out
mov
mov
push
or
jno
das
adc
pop
aaa
push
jmp
cmpl
nop
addl
inc
jmp
pop
cmp
arpl
and
xchg
rcrb
push
movsl
pop
int3
jo
mov
xor
adc
aas
xchg
jnp
dec
cmp
add
sub
or
inc
call
std
notl
adc
mov
sti
add
out
jo
jnp
dec
cmp
mov
decl
xor
testb
cmpps
test
xchg
imulb
pop
cs
lods
fwait
push
inc
xchg
add
pop
shlb
and
pop
push
adc
fadds
add
clc
fsubl
sub
popf
add
jmp
mov
cmp
mov
adc
mov
popa
jo
mov
pushf
push
shrl
jg
gs
shll
xchg
out
push
pop
or
mov
call
push
sub
movsl
and
xchg
pop
mov
cmp
notb
clc
jg
cmp
je
cmp
je
cmp
sarl
je
cmp
sub
add
pop
mov
cmp
lds
jg
into
adc
lahf
stc
and
pop
xor
push
aaa
insb
jmp
adc
in
cmp
aad
push
or
insl
mov
std
dec
rclb
sbb
call
sub
sbbl
mov
inc
add
inc
sbb
push
mov
ds
icebp
jmp
popf
and
or
or
add
adc
pop
clc
movsl
and
sahf
inc
add
cld
loopne
or
add
sarl
push
pop
pop
add
inc
outsl
or
cmp
xor
je
sub
das
das
or
dec
or
jo
sub
imul
sub
push
enter
cmpsb
ret
ds
cmp
cmp
in
aaa
nop
insb
lea
mov
push
call
fadds
imul
and
mov
leave
sbb
cmp
sbb
ret
fcmove
ret
pop
inc
dec
adc
adc
add
jbe
push
scas
jmp
pop
jmp
mov
cmpsl
imul
push
mov
mov
testb
jns
push
popa
jge
pushf
and
rolb
cmc
mov
loopne
jne
push
cmp
aaa
nop
mov
loope
jmp
adc
fiadds
loop
cwtl
cmp
sbb
mov
push
xchg
or
add
add
mov
out
lods
mov
pop
xchg
lods
les
sub
add
add
in
gs
dec
cmp
lock
xor
adc
cld
sarl
adc
xchg
ret
mull
mov
sub
mov
cmp
lret
out
xchg
push
sub
dec
cmp
dec
sub
or
mov
sub
in
dec
xchg
push
loopne
test
add
mov
arpl
or
and
pop
mov
addb
cmp
incl
aas
jmp
roll
clc
movzbl
rcrb
add
shll
push
push
iret
push
rcrb
adc
mov
imul
push
in
mov
testb
cmp
je
adcl
push
or
cmp
cmp
sub
adc
dec
lock
jle
xchg
pop
sar
and
add
cmp
lea
push
clc
and
or
arpl
decl
sbb
dec
jge
cmp
jge
add
sub
cltd
sub
inc
push
xor
lods
insl
adc
xlat
pop
push
push
in
inc
insb
mov
push
or
mov
mov
mov
es
and
arpl
fcoms
fidivrl
shrl
xlat
pop
add
add
cvtps2pd
hlt
add
pop
or
imul
test
sbb
xor
dec
aaa
xor
mov
inc
push
mov
dec
nopl
push
sub
and
fwait
xor
adc
push
decb
mov
jp
xchg
mov
orb
sbb
scas
andl
aas
sbb
movsl
bound
push
in
js
adc
addl
sbb
push
testb
clc
and
sarb
jle
sbb
lahf
adc
mov
test
in
insl
inc
mov
push
addb
sub
ds
scas
mov
in
je
stc
xor
subb
push
or
dec
inc
stc
or
or
adc
jg
inc
jo
pusha
sti
ret
pop
std
ret
movsl
stos
inc
cmp
in
pusha
pop
hlt
add
fsubl
sbb
cmc
or
pop
push
or
data16
mov
andb
shrl
push
loopne
or
add
mov
sbb
xorb
xor
test
movsl
cmp
push
sti
add
push
adc
stos
jge
scas
mov
pop
js
mov
daa
aas
or
add
mov
in
f2xm1
inc
pop
cmc
adc
xor
mov
add
fwait
xchg
pop
ss
inc
inc
jge
jle
inc
lea
xlat
sub
inc
cmp
jnp
sub
sbb
outsb
mov
inc
stos
adc
jle
xchg
hlt
pop
std
fildll
lea
ret
pop
movb
pop
mov
sub
lret
xchg
pop
aas
inc
loope
lret
lcall
inc
xor
add
loope
ljmp
add
imul
gs
xor
cs
insb
add
gs
je
outsl
outsb
addr16
popa
mov
inc
adc
sbb
cmp
shrb
lahf
shll
adc
sbb
mov
add
add
add
xor
sbbl
xchg
xchg
add
adc
push
sbb
pxor
test
call
and
mov
stc
data16
addr16
add
fiadds
repnz
lcall
fstps
repnz
push
push
repz
mov
add
adc
cmpb
add
stc
jge
push
or
out
psubsw
mov
ret
jmp
movsl
in
jbe
mov
in
je
and
or
pop
or
jmp
mov
jle
dec
dec
in
shlb
ret
or
jae
xchg
mov
ss
jge
dec
pop
jne
xchg
cmp
or
inc
repz
sub
add
addr16
outsl
data16
popa
jb
addr16
negl
arpl
gs
sbb
add
push
andl
pop
cmp
rcll
cmp
jg
lds
push
add
jbe
inc
out
sub
cmp
inc
add
jne
sbb
mov
mov
add
pop
sub
add
ud1
inc
inc
xor
add
cmp
add
xor
fwait
in
jns
and
cmp
and
outsb
in
jne
jmp
nop
or
push
arpl
fs
xchg
fstpt
add
push
or
inc
sbb
pop
nop
adc
insb
mov
push
and
jbe
cmp
je
push
dec
call
mov
cmpl
mov
sub
mov
mov
inc
jo
test
and
cld
mov
jbe
repz
es
xchg
sbb
adc
mov
mov
ss
push
lea
push
loop
inc
jne
xchg
pop
push
lock
sbb
xor
and
pushf
adcb
icebp
lods
pushf
fwait
test
dec
xor
and
inc
ret
inc
jae
jge
pop
lea
popf
jne
mov
dec
iret
push
mov
or
loopne
add
add
jg
sbb
push
clc
scas
subl
xor
movb
in
push
sbb
add
mov
push
xor
add
and
dec
mov
or
ret
cmp
sbb
arpl
or
cmp
push
jne
mov
mov
outsb
sbb
sub
mov
inc
mov
pop
lds
and
int3
mov
mov
femms
lods
mov
imul
xchg
ret
nop
pop
mov
mov
lds
dec
mov
negl
cmpl
fs
js
sbbl
mov
push
mov
mov
mov
aad
lea
sub
arpl
sub
mov
leave
sbb
mov
ret
mov
arpl
inc
pushf
ret
cmc
xor
mov
push
pop
lahf
popf
jne
les
push
int3
xor
and
ds
pusha
jmp
leave
jo
sbb
pop
fs
or
pop
pop
sub
lods
cwtl
aaa
shrl
sub
fsubrs
es
lret
jb
add
jno
hlt
lock
in
call
and
xor
and
and
and
mov
or
enter
movsb
push
xor
and
nop
inc
dec
xor
and
inc
push
sbb
sbb
adcl
fs
lahf
cmp
in
pop
jo
pop
xor
jb
jno
je
xor
enter
lock
pop
icebp
repnz
cmc
orl
div
clc
stc
or
enter
cld
xor
and
and
and
in
or
enter
jmp
ljmp
in
out
out
enter
rcl
shlb
orl
aam
orl
xlat
fcomp
or
enter
fdivl
enter
enter
rol
and
lds
enter
enter
int3
xor
and
and
and
mov
or
enter
mov
mov
and
and
and
movsl
sbb
xor
cmpsb
cmpsl
imull
and
xchg
js
pop
rolb
add
add
adc
or
push
repnz
inc
push
xor
add
call
and
gs
imul
xor
pop
adc
jl
sub
testb
jo
nop
mov
incl
inc
push
in
inc
dec
jne
dec
dec
gs
in
sbb
inc
imul
sti
mov
lods
xchg
sub
sti
or
outsb
pop
inc
jb
pop
inc
pop
mov
sbb
or
cmpsl
or
cwtl
xchg
orl
or
adc
pop
ret
inc
enter
cmovne
lds
push
repnz
pusha
lods
pop
or
imul
cld
pop
gs
nop
test
fs
jle
mov
add
outsb
lods
inc
pop
add
dec
outsb
test
jb
insb
outsl
ja
pop
mov
add
pop
arpl
dec
or
dec
stos
mov
mov
mov
scas
xchg
adcl
or
mov
fistps
imul
or
sbb
test
sub
fs
test
pusha
imul
pop
push
jns
cmc
fldcw
pop
nop
adc
xchg
hlt
inc
mov
outsl
imul
jo
pop
or
jne
mov
or
inc
popa
jae
outsl
int3
cmp
int3
or
fs
fs
cli
adc
adc
arpl
jae
push
mov
sub
and
fs
jb
fldenv
jecxz
loopne
loopne
or
je
arpl
dec
loopne
adcb
pop
push
push
inc
or
xchg
sub
dec
pusha
loope
push
popa
or
lahf
add
xchg
rcll
les
roll
and
shrb
push
pop
push
retw
add
jb
inc
fnstenv
lods
cmpsl
push
adc
push
and
xchg
or
inc
and
arpl
and
or
or
adc
cs
xor
push
dec
pop
or
insl
push
mov
fwait
inc
and
cmp
or
xchg
sub
shr
div
cmc
mov
add
add
adc
cmp
pop
lret
mov
mov
nop
mov
push
push
and
xor
pop
aam
shll
or
push
add
repz
inc
pop
stos
and
mov
inc
push
cmp
ja
sub
jb
or
call
pop
test
fistps
dec
add
rorb
pop
add
push
inc
cmc
shl
ret
rdpmc
inc
dec
push
ret
out
lods
push
jl
push
call
sbb
dec
pop
xchg
rcrb
mov
in
aas
add
inc
cmp
jl
cmpb
jbe
or
push
icebp
jge
mov
push
pop
dec
adc
adc
fidivl
lret
inc
leave
cmp
or
or
jne
or
jns
mull
xchg
jg
add
push
ret
mov
shl
icebp
dec
pop
mov
cli
cmp
mov
fsubrs
icebp
sub
jbe
add
mov
sub
jmp
sti
out
incb
mov
dec
jne
xor
in
adc
leave
push
aaa
mov
insl
adc
mov
shrl
bound
or
ljmp
and
xor
sub
movb
dec
inc
outsl
push
push
clc
jg
fnstcw
fnstcw
orw
sub
mov
mov
fld1
inc
daa
andl
jg
add
fildll
fildll
ret
adc
outsl
mov
filds
rorl
fildll
stc
mov
xor
mov
sarl
fstsw
sahf
jae
fnstenv
ffree
ffree
mov
repnz
ffree
pop
ljmp
pop
push
out
and
add
mov
or
pop
outsb
mov
add
add
or
push
mov
and
and
adc
insb
cltd
push
ja
cmp
fists
aam
adc
sbb
mov
push
or
call
test
cmp
sub
mov
push
jae
mov
sub
or
adc
push
mov
enter
cmp
aam
movsb
and
jb
push
sub
syscall
cmp
adc
add
inc
movb
repnz
jl
inc
and
sub
rcr
jl
test
push
out
push
mov
loop
mov
imul
sbb
add
fcmove
lea
or
add
xor
sar
test
outsl
je
fldt
fcomps
leave
out
mov
dec
sbb
push
jmp
es
fadds
xor
and
mov
cmpsl
xchg
push
lcall
sub
stos
pop
push
xor
dec
adc
or
mov
sbb
and
mov
xlat
xchg
mov
fcoms
push
jbe
out
int3
xor
dec
fstp
adc
jle
mov
pop
sbb
cmp
pop
or
xlat
pop
jne
cs
dec
cmp
jne
dec
dec
sub
testb
mov
dec
mov
push
lea
mov
xchg
imulb
rcrl
sub
cmp
sahf
inc
pushf
lock
nop
test
adc
jo
inc
lret
insl
clc
aam
push
imul
pcmpgtw
loope
mov
mov
sub
adc
mov
push
adcb
mov
inc
inc
mov
incb
sbb
mov
iret
push
or
or
dec
adc
daa
sti
das
adc
mov
push
add
lret
mov
mov
inc
dec
add
fnstenv
mov
push
xor
lret
xlat
mov
xor
or
xor
adc
pop
loopne
mov
cmpsb
mov
cmc
or
or
and
sti
lret
jp
ljmp
lahf
cmp
adc
test
mov
dec
hlt
cmp
jne
adc
xchg
mov
mov
adc
negl
mov
je
mov
mov
cmovne
inc
jnp
mov
mov
mov
int3
push
cld
dec
les
inc
std
mov
adc
xchg
clc
testb
incb
mov
std
insb
cmp
cld
decl
sub
dec
mov
pavgb
movb
push
mov
sbb
add
add
shlb
mov
mov
push
push
mov
xchg
out
lods
add
mov
rcrl
test
sub
adc
lods
add
ss
push
sub
or
and
iret
js
lcall
clc
or
pop
std
or
jae
lods
cmp
movsb
stos
sbb
repz
sub
frstor
push
bnd
insl
jnp
clc
incb
mov
cmp
jne
adc
or
gs
out
jne
pop
hlt
adc
lods
jmp
movsb
imul
or
mov
and
adc
dec
pusha
cs
mov
in
dec
add
jge
dec
outsb
sub
or
movsb
xchg
jnp
test
mov
rep
or
repnz
hlt
or
push
stos
pop
clc
pop
testl
pop
sub
cmp
jb
cmp
ja
imul
sub
movzbl
add
xchg
add
pop
jnp
push
lock
jecxz,pt
jg
incl
adc
dec
mov
mov
test
ret
and
mov
aas
lret
pop
mov
or
push
mov
mov
dec
push
xchg
and
pop
jo
ljmp
and
add
lcall
add
out
jmp
pop
mov
pop
sub
ret
bound
dec
fsubrs
shll
std
sarl
mov
fsubrl
inc
cld
icebp
sub
je
add
insl
xchg
or
in
push
je
mov
cmpsl
jb
insb
int
aaa
adc
nop
pop
loopne
rorb
jg
cltd
cmp
jne
lcall
jbe
js
adc
lret
add
jmp
popa
leave
pushf
xchg
push
and
lods
adc
enter
sub
imul
in
sbb
mov
and
insb
aad
xchg
mov
test
or
add
push
mov
cmp
ja
iret
pop
stos
inc
add
lods
scas
in
jge
jecxz
dec
mov
cs
lods
push
jo
cmpsl
push
leave
mov
data16
repz
add
add
mov
inc
je
mov
push
jne
pop
jle
je
mov
inc
je
mov
dec
je
dec
jl
jnp
mov
sub
ret
mov
cmp
incb
or
or
mov
je
clc
adc
jo
ret
xchg
jecxz
iret
movsb
arpl
shll
push
ljmp
add
rcrb
iret
lahf
adc
or
or
xchg
addl
sub
shrb
add
into
adcb
jno
lcall
jns
lods
orb
sahf
test
xchg
test
fcompl
or
dec
clc
enter
add
je
jle
cmp
ja
and
dec
pushf
dec
xchg
test
out
push
mov
loopne
xchg
jg
or
jnp
pop
xlat
ds
cwtl
dec
cmp
jl
jmp
add
mov
add
movsb
lcall
scas
fadds
dec
cmp
das
test
jge
sub
arpl
imulb
mov
jge
mov
in
sbb
loopne
xchg
push
mov
mov
mov
xchg
mov
mov
cld
jg
jmp
cmp
jne
pop
pop
sbb
fidivs
fcompl
sub
sti
mov
movl
hlt
mov
jecxz
test
repnz
mov
pop
xor
add
xor
add
ss
or
dec
adc
cmp
aas
push
js
stc
fbld
mov
movzwl
sbb
inc
shrb
sub
jmp
lea
push
mov
roll
xlat
inc
mov
ja
pop
adc
je
add
or
mov
icebp
jge
jle
mov
cs
dec
sbb
js
inc
jmp
fs
sbb
add
jne
dec
inc
push
dec
lods
or
add
cs
in
dec
ret
cltd
mov
push
mov
aam
pop
or
sbb
lods
loope
jl
sub
lea
jmp
sbb
jmp
cmc
in
mov
pop
stos
loop
pop
adc
or
fdivp
or
and
daa
push
fwait
ret
push
ret
add
mov
fwait
arpl
jmp
dec
or
imul
negb
leave
mov
mov
mov
movsb
lock
inc
xor
add
out
push
lahf
xchg
add
dec
adc
push
xlat
dec
dec
scas
imulb
div
mov
inc
push
js
dec
jne
cli
into
jne
sbb
jmp
mov
testl
dec
add
stc
adc
aaa
scas
test
mov
or
cmp
xchg
mov
icebp
push
pushf
fwait
push
jbe
mov
mov
push
mov
mov
inc
or
lods
push
jmp
mov
lcall
test
sub
push
ret
sub
popf
or
and
jle
mov
adc
inc
sub
sub
out
imul
or
sub
divl
or
lods
outsb
rcrl
sub
sub
sub
inc
xchg
mov
add
xlat
data16
insb
add
jmp
pop
fildll
mov
push
je
mov
cmp
testl
push
adc
cmpl
add
movb
addr16
mulb
in
fldt
mov
dec
add
outsb
loop
stos
shlb
out
clc
mov
and
pop
frndint
jmp
fcomp
cmpsl
pop
jl
fstsw
fwait
pop
inc
testb
sub
mov
sbb
std
mov
fbstp
lea
mov
inc
sub
dec
adc
add
in
add
sub
inc
shrb
jns
dec
jge
cmp
aaa
sarl
dec
add
call
jae
lea
add
mov
js
incb
adc
fcomip
dec
iret
in
jmp
data16
mov
fs
mov
shll
xor
push
or
fcmovnb
ljmp
dec
out
inc
cmp
in
mov
dec
and
or
mov
inc
rolb
fisubrl
cli
push
addb
jg
loope
mov
pop
mov
cmpsl
sbb
addl
and
addr16
scas
bound
fildll
cli
lret
push
fidivl
fwait
push
push
sbb
push
mov
cmc
pop
dec
jne
into
and
jne
dec
adc
cmp
ret
pop
adc
push
mov
ljmp
movb
xor
fdivl
aas
jecxz
mov
fildl
or
dec
popf
aam
push
pop
sub
bound
add
pop
mov
das
js
fnclex
fldcw
shrl
mov
andb
add
add
xor
stos
jle
xor
inc
pop
push
mov
push
cmp
je
adc
cmp
sub
out
inc
mov
pop
add
aas
dec
mov
xor
inc
and
sub
fchs
sbb
cs
inc
mov
aas
pushf
fstpt
mov
jbe
test
mov
mov
jmp
data16
and
ret
sub
add
jae
fimull
add
sbb
sbb
scas
stc
xchg
sub
inc
fidivl
or
jb
sbb
mov
cwtl
push
adc
popa
inc
jns
and
mov
dec
ret
aam
mov
push
shlb
pop
jns
fs
outsl
das
add
add
xlat
push
ret
pop
push
out
push
jle
add
aam
fldt
fstpl
fwait
or
sub
jb
cmp
mov
mov
es
mov
xchg
in
or
jmp
sub
faddl
or
sbbb
aas
add
mov
pop
inc
clc
repz
mov
sbb
add
push
sub
stc
inc
push
dec
outsl
loopne
cmp
shlb
out
add
shrb
mov
ljmp
mov
add
dec
fildl
fdivs
mov
sbb
push
and
aad
lret
movsb
dec
pop
or
data16
mov
pushl
in
mov
mov
lea
mov
dec
insb
or
jo
cmp
pop
mov
adc
call
mov
sub
sbb
and
sbb
or
ss
adc
test
jne
push
mov
xchg
add
mov
dec
xchg
fisttps
add
dec
jg
add
das
inc
and
pop
incb
pinsrw
orb
xorl
jb
add
sti
sti
dec
add
jno
or
pop
inc
ja
or
mov
jg
mov
or
incb
push
shll
idiv
imul
jnp
xchg
addb
sub
pop
mov
stc
add
das
or
sub
push
adc
push
dec
sti
cli
aam
inc
push
call
popa
jg
dec
xchg
fchs
mov
into
pop
hlt
add
sub
je
insl
mov
dec
mov
sti
inc
fisttps
mov
xor
pop
insl
iret
fcmovb
or
mov
repnz
or
mov
pop
or
add
decw
sbbl
imul
add
sub
xor
add
push
sbb
loopne
sbb
mov
adc
loope
ret
shl
ret
int
push
andb
enter
pop
jae
dec
dec
mov
pop
jb
int
lret
out
or
int
xor
adc
addb
fwait
lods
adc
hlt
mov
pop
sub
stos
sbb
pop
lock
add
incb
jecxz
push
insl
or
lret
jo
push
or
clc
lret
movsl
cwtl
mov
aaa
stc
dec
inc
add
jge
insb
mov
data16
mov
dec
push
dec
lds
rcrl
fiaddl
aam
dec
mov
xchg
adc
adc
mov
add
xor
daa
adc
adc
icebp
fwait
in
pop
dec
and
mov
aas
loopne
in
call
push
insl
mov
leave
mov
cmpsb
inc
mov
jo
inc
cwtl
inc
or
sub
xor
in
fisttpll
adc
sti
je
dec
pop
mov
outsb
cld
inc
mov
xorb
mov
js
adc
dec
mov
idivb
rorb
add
in
fnsave
repnz
in
add
aaa
fsubrs
sub
push
ds
int
enter
imul
add
in
mov
lea
add
xor
push
jno
jo
subl
sarb
or
ljmp
lods
mov
push
nop
call
mov
cli
pop
fildll
jne
movsl
push
mov
xchg
sub
fdivr
dec
jne
addr16
adc
add
jne
ret
push
jg
sarb
or
andl
and
jle
push
loop
mov
mov
inc
push
cwtl
or
insb
xchg
dec
sub
scas
mov
adc
mov
push
mov
ret
mov
notl
in
and
mov
addr16
xor
sub
add
add
nop
sysret
stc
push
sub
jns
cmpb
mov
inc
mov
xchg
daa
shl
adc
cmpb
jne
push
inc
enter
nop
mov
outsb
clc
sbb
leave
lock
add
add
ret
sbb
aas
aam
rcl
push
mov
add
pcmpeqw
add
sub
aaa
push
pop
pop
mov
xchg
icebp
dec
ud0
stos
pop
outsb
add
add
loope
jns
or
adc
ficoms
movsl
dec
jg
rorb
add
sub
dec
cmc
push
outsl
xchg
or
adc
dec
adc
mov
ljmp
sub
sahf
or
mov
cmpb
dec
dec
mov
pusha
arpl
push
mov
pop
cmp
mov
subb
jmp
aad
setnp
or
stos
mov
add
add
jle
sahf
pop
or
or
mov
inc
fnstenv
pusha
repnz
test
int
mov
jecxz
xchg
imul
mov
push
ret
mov
fs
push
xchg
pop
jbe
add
outsl
and
and
test
insl
shrb
pop
sti
push
mov
andl
add
dec
fstps
lea
daa
add
scas
fsubrs
clc
aam
adc
lcall
pop
jb
out
jmp
mov
sub
dec
mov
push
jb
xor
rorb
mov
fs
inc
dec
xchg
outsl
je
add
jg
push
shlb
add
mov
into
fistps
rcrb
mov
adc
xchg
mov
mov
int3
pop
xchg
fsubrs
sbb
fwait
xor
movsl
xchg
aad
adc
insb
xchg
lahf
orb
dec
jg
adc
and
xchg
mov
add
je
sbb
bound
pop
je
cmpsb
outsl
lea
enter
mov
in
add
dec
pop
les
sub
inc
and
pop
repnz
add
outsb
cmp
jl
pop
mov
pop
fildl
sbb
dec
or
mov
push
test
mov
pop
xchg
pop
add
add
or
jle
test
push
test
mov
mov
xchg
mov
das
inc
xchg
sbb
xor
subl
xchg
lahf
add
pushf
mov
movsb
add
in
andb
je
fcoms
or
adcl
jbe
inc
push
mov
jbe
addl
push
jb
add
add
xor
dec
rcr
jae
in
xchg
inc
jmp
adc
dec
add
and
and
cmp
inc
push
add
jmp
insb
sti
testl
inc
orb
fstl
push
call
and
and
mov
and
test
xor
jge
xchg
mov
je
sbb
nop
jmp
in
pop
and
loopne
sbb
call
negl
and
push
sub
fistpl
fsubl
push
sub
adc
mov
lods
sbb
inc
js
adc
mov
xor
xor
xor
iret
jmp
inc
cld
pop
popf
inc
dec
das
push
dec
add
adc
dec
or
add
inc
into
ret
mov
test
or
and
cmp
or
mov
adc
hlt
and
lea
push
push
or
pop
cmp
push
jp
sbb
add
or
add
fdivrs
push
jmp
je
push
mov
in
mov
addr16
or
push
ss
mov
lods
das
xlat
push
dec
enter
xor
ret
add
scas
call
pop
out
ljmp
inc
mov
adc
sub
jae
in
push
ljmp
jle
xlat
cmpsb
push
jg
adc
ret
add
shr
sbb
mull
mov
lahf
sahf
inc
xchg
and
mov
push
sbb
dec
cmpb
cwtl
mov
mov
sbb
sub
ret
mov
pusha
and
push
mov
mov
and
enter
cld
mov
test
push
mov
out
add
outsb
dec
pop
add
pop
repnz
cmp
xor
or
incl
inc
xchg
fistl
and
and
mov
call
hlt
fildll
je
dec
je
sub
sarl
je
adc
push
sub
ds
lods
nop
cmp
push
inc
pop
clc
jle
outsb
xchg
cmp
dec
outsl
add
or
packssdw
int3
mov
add
add
dec
push
aam
mov
mov
inc
dec
add
mov
loopne
sub
sub
lods
popf
add
pop
add
add
loopne
jmp
or
adc
call
add
xor
aaa
pop
push
inc
adc
cmp
jg
dec
mov
xor
cltd
xor
sub
add
call
add
fs
mov
cld
add
dec
or
je
jb
cld
xor
ret
outsl
fadds
fcomps
lret
mov
fsub
in
prefetch
dec
jle
cmpsl
nop
mov
or
sub
mov
push
inc
js
scas
popf
push
and
mov
addr16
ja
push
ja
jl
mov
lock
fwait
inc
adc
dec
mov
loop
std
mov
adc
and
pop
cwtl
or
sub
hlt
push
jp
test
jae
adc
push
dec
dec
mov
sbb
ljmp
into
add
lock
lods
fwait
shll
jb
and
fstpt
push
lock
imul
popw
jo
xor
push
pop
xor
orl
sbb
hlt
sbb
pop
mov
hlt
jmp
out
pop
cmp
cli
scas
push
jg
jge
pop
outsb
aam
test
ja
lret
inc
lds
out
xor
sub
pusha
or
call
and
mov
inc
cmp
jle
adc
fs
cmp
insb
mov
adc
sbb
mov
adc
fs
loopnew
or
fwait
int3
ss
bound
aas
fwait
mov
insl
dec
ret
adc
repz
jb
cmp
and
pop
mov
pusha
sbb
sbb
sub
ljmp
mov
sbb
insb
fcoml
outsl
je
sub
lods
popa
adc
cwtl
fcoms
cltd
scas
adc
pusha
test
dec
stc
xor
push
out
movsl
insb
cmp
bnd
nop
fdivrs
sub
add
sub
add
loopne
sub
ret
iret
jmp
cmp
imul
ficoms
adc
je
dec
jmp
dec
enter
cwtl
rolb
add
push
adc
int3
push
pop
adc
pushf
pushf
insl
sbb
push
or
gs
sti
xor
mov
inc
or
add
add
sub
nop
xchg
adc
add
sbb
test
jo
push
sbb
js
fsubs
or
jne,pt
and
scas
jns
add
push
cmp
inc
adc
mov
push
lods
adc
imul
add
inc
and
cwtl
add
inc
mov
mov
mov
movsl
leave
into
cmp
idivb
or
or
leave
sbb
mov
jo
repnz
scas
push
call
out
cmp
mov
int3
inc
outsb
xchg
fwait
dec
jge
sbb
pop
mov
adc
or
loop
outsl
sub
fucomp
fcomps
fdivs
jb
push
fcoml
pop
fwait
jmp
or
test
and
cmp
arpl
out
fisubrl
cmpsl
movsb
outsl
imul
xor
mov
push
dec
and
or
xchg
mov
and
add
shlb
hlt
push
in
sub
addr16
sub
sar
push
shll
lea
inc
inc
test
push
dec
push
inc
adc
arpl
in
mov
inc
daa
mov
and
das
or
insb
sub
push
inc
add
and
adc
ret
insb
rcrb
sbb
dec
je
adc
push
or
or
inc
mov
jo
mov
es
or
sarl
jecxz
xchg
dec
test
mov
movsb
lods
aam
push
push
pop
or
mov
inc
inc
dec
fsubl
inc
pop
pop
mov
dec
push
pop
and
mov
inc
or
lock
inc
iret
loopne
or
and
lods
inc
shll
xor
loopne
dec
push
xor
and
leave
popa
add
fnstsw
pop
pop
or
jmp
xchg
pop
mov
add
mov
mov
stc
push
ds
je
cmp
mov
dec
cmp
add
lahf
mov
lods
je
xor
loopne
push
sbb
shll
inc
xchg
dec
xor
jmp
inc
scas
pop
pop
je
cmp
mov
push
pop
ljmp
jne
shll
push
xchg
mov
out
mov
sarl
adc
sbb
pushf
push
insl
icebp
movsl
mov
addl
add
rcrb
movsb
and
jge
cwtl
mov
in
pop
push
dec
jne
push
sub
test
negb
xchg
push
mov
in
lods
inc
mov
mov
dec
imul
in
xor
addr16
inc
add
cmc
mov
rorl
sbb
inc
push
jb
mov
sub
push
xlat
loope
dec
lret
subb
lods
int3
jle
mov
nop
stos
or
daa
dec
cs
nop
popf
lock
and
mov
push
pop
not
push
in
movsb
mov
or
outsb
femms
sti
cltd
mov
sub
add
enter
or
xchg
push
mov
cltd
out
repnz
hlt
pop
je
jne
sbb
movsb
loope
sub
add
in
ret
dec
jle
leave
sub
cwtl
in
push
xchg
push
sub
int
outsl
or
outsl
sbb
dec
add
mov
js
imul
cmpsl
sbb
sub
and
in
sti
lcall
out
inc
mov
mov
mov
cmp
ljmp
shlb
pop
sbb
sbb
in
adc
dec
sbb
out
add
sahf
sub
push
mov
cwtl
popf
xor
sub
call
sbb
lcall
adc
xlat
adc
jno
stos
push
inc
sub
je
and
ds
mov
je,pn
mov
cmp
xchg
cld
mov
inc
inc
add
nop
pop
cmp
xor
sti
fisubl
add
sub
repnz
mov
out
xchg
lods
hlt
lfs
fcmovne
enter
pinsrw
insl
lahf
cmp
push
lea
or
push
mov
sbb
add
popa
lods
dec
inc
cmp
ret
pop
mov
mov
inc
push
add
mov
mov
dec
dec
rolb
pop
mov
jnp
sbb
mov
jb
fwait
sub
enter
imul
or
push
pop
push
nop
fstpt
adc
adc
xchg
nop
sub
scas
xchg
into
rcll
orb
and
push
iret
fimull
fucomp
sub
jno
add
cld
add
dec
pusha
dec
mov
xchg
xor
ss
push
movb
bound
sub
cmp
fdivrs
insb
xchg
cltd
mov
enter
repz
cmp
enter
xchg
xchg
mov
clc
int
sub
mov
aas
test
test
cmpsb
cmp
or
gs
push
adc
arpl
js
adcb
jp
pop
pop
mov
pushw
jg
cmp
mov
lock
sbb
icebp
or
sbb
iret
add
mov
test
push
cld
outsl
push
add
push
mov
cmc
sbb
stos
pop
pop
mov
add
test
push
sub
push
lret
adc
push
jb
insl
pop
xchg
sub
adc
pop
mov
and
cmp
cmp
bound
test
jmp
cmp
push
inc
ret
pop
jo
loopne
fwait
loopne
cld
leave
mov
sahf
pusha
aad
sub
sbb
test
cld
insl
insl
inc
and
or
in
cmpsb
xchg
mov
lock
clc
in
mov
and
sub
mov
movsb
gs
sahf
loopne
sbb
call
add
mov
or
mov
jge
test
cmp
rcrb
addr16
add
push
call
push
sub
cld
xchg
push
cmp
je
jmp
xor
inc
mov
mov
and
sbb
ret
mov
add
xchg
or
or
push
push
lahf
rorb
test
mov
xor
or
and
or
mov
jnp
daa
or
fdivrs
xchg
mov
sub
loopne
inc
sbb
lock
and
les
pusha
push
add
sbb
xlat
inc
loopne
imul
mov
lods
sbb
lea
dec
pop
dec
add
mov
sarl
cmp
sbb
les
enter
cmp
pop
int3
shlb
scas
adc
mov
mov
lea
cmp
arpl
pop
cwtl
enter
nop
ds
pop
cwtl
jb
xor
pushf
mov
iret
xor
mov
xor
or
jp
mov
adc
pop
push
gs
pop
add
hlt
xorb
add
jbe
outsb
push
ljmp
jae
mov
icebp
cmp
lods
pop
or
xor
and
in
add
mov
dec
pop
ret
and
pop
push
sub
inc
or
mov
enter
push
cmp
mov
inc
dec
inc
push
mov
ljmp
mov
jp
aam
or
pop
cwtl
pusha
lds
nop
pop
cwtl
mov
pushf
or
aaa
sbb
aad
mov
push
mov
inc
jno
nop
sbb
lods
add
push
or
inc
ds
and
or
or
mov
inc
push
cmp
pushf
in
popa
repnz
mov
jmp
pop
mov
gs
dec
jno
mov
mov
add
mov
call
jnp
pop
add
pop
stc
fsubrs
mov
or
add
sub
adcb
and
add
mov
bound
cmp
pusha
or
inc
sub
jp
mov
mov
dec
pushf
dec
mov
mov
sbbl
pop
or
loop
mov
in
jns
dec
or
inc
dec
fdivrs
lret
add
add
adc
pushf
add
mov
int3
mov
adc
sub
sbb
leave
sbb
mov
and
stos
push
sbb
jle
lock
addr16
adc
xor
or
push
jnp,pt
clc
jbe
ret
pop
xor
mov
mov
or
insb
dec
cltd
inc
and
ficoml
sbb
xor
inc
cmp
sub
mov
and
pop
xchg
test
xchg
cmp
jge
add
notb
push
xor
testl
inc
mov
dec
aad
pop
sub
aas
xor
bnd
test
xchg
or
dec
inc
fsubrl
jg
out
dec
adc
lret
mov
dec
arpl
pusha
xor
insb
or
mov
xchg
push
jnp
pop
jge
or
fnstcw
push
cli
enter
insb
adc
mov
out
pop
sub
jnp
and
loop
popa
inc
dec
inc
adc
js
test
repz
mov
mov
mov
leave
inc
adc
inc
add
fidivl
imulb
arpl
sbbl
adc
stos
sub
sub
ret
mov
dec
call
je
test
cmp
mov
adc
arpl
jo
arpl
in
xlat
adc
add
inc
inc
push
scas
in
or
inc
sti
add
push
add
inc
clc
sbb
or
push
inc
in
movb
adc
lds
negb
adc
sarb
bnd
mov
fnstcw
mov
cwtl
dec
sahf
pop
pop
inc
push
sbb
pop
push
andb
stos
call
mov
add
and
fst
pop
xor
daa
mov
sub
aam
push
mov
add
jmp
or
adc
hlt
hlt
cld
test
push
add
dec
mov
adc
hlt
sbb
pop
bound
sub
and
leave
mov
andb
mov
in
push
arpl
enter
cwtl
xchg
dec
xor
pushl
xlat
aaa
push
mov
sub
jb
inc
mov
mov
mov
inc
aam
decb
dec
jne
add
cmp
or
xchg
fistpll
sub
icebp
xlat
mov
clc
pop
ja
add
push
cld
adcb
xchg
inc
inc
fs
cmp
loope
movl
daa
repz
push
jbe
lods
sti
mov
or
in
frstor
js
mov
xor
mov
jge
call
fsubrl
or
popf
shll
sub
push
mov
push
dec
adc
rcll
or
push
cli
mov
mov
and
setne
mov
adc
xor
shrb
inc
cmp
lods
jne
add
sbb
addr16
push
or
js
adc
fistpl
cmpw
xchg
rorl
sbb
jmp
leave
jle
pop
imul
push
adc
pop
mov
andb
add
jbe
cmp
insb
dec
jne
push
jge
lods
popa
xor
ret
xor
insb
cmp
push
adcl
add
add
mov
test
push
mov
inc
jb
push
or
out
fmull
and
xor
push
mov
nop
add
sbb
adcl
test
mov
push
inc
push
sbb
orl
adc
cmp
in
das
mov
xor
fsubr
pop
mov
mov
xchg
mov
xchg
aam
clc
and
jle
subl
mov
push
int
shrb
adc
or
sarb
pop
repnz
xchg
mov
in
push
and
pop
js
sub
xor
les
inc
mov
push
les
popa
shl
or
add
inc
push
push
push
jns
aaa
testl
sysret
hlt
mov
xchg
stos
xor
sbb
imul
xchg
into
cwtl
adc
adc
icebp
gs
or
push
insl
das
fs
sarb
insl
add
fs
mov
add
or
add
add
push
pop
and
paddsw
subb
xchg
cmp
stos
mov
jae
scas
mov
jo
imul
fs
push
jnp
or
xor
dec
push
mov
fldt
xor
fstpt
cmc
push
add
insb
sbb
or
adc
inc
sbbb
imul
push
jo
arpl
js
xchg
push
push
jbe
in
andb
lcall
cld
dec
sbb
mov
lcall
sub
je
xlat
je
cmp
pop
push
aam
adc
dec
xlat
int3
pop
rol
mov
aam
call
dec
xlat
xor
pushf
aas
jl
pop
test
jmp
test
adc
dec
ja
cld
je
insb
xchg
cmpsb
jmp
ja
push
mov
inc
xchg
pop
cmp
shll
xor
cmp
adc
out
leave
xor
js
mov
adc
daa
mov
or
or
fstps
add
movsb
sbb
pusha
sbb
mov
fwait
xchg
int
or
lock
push
in
dec
xorl
dec
push
in
imul
fmull
pushf
insb
mov
cmp
or
sbb
rolb
int3
jae
sbb
out
xor
rolb
fcoms
push
mov
push
cmp
enter
or
pushf
mov
push
dec
jae
cmp
leave
out
xor
push
xorl
nop
push
or
ss
test
push
xorb
fstps
pop
cmp
and
xchg
push
mov
jmp
test
and
sahf
clc
add
xchg
in
roll
push
aad
push
push
mov
jge
sub
pop
sbb
dec
xor
push
add
adc
xor
or
pop
les
daa
sbb
addr16
ds
push
mov
adc
aam
sbb
inc
rorb
and
popf
sbb
cwtl
xchg
dec
xor
xchg
mov
and
push
fdivl
push
mov
popa
adc
pop
mov
sbb
cmpb
add
mov
mov
adc
pop
xor
xchg
pop
add
fdivs
sahf
or
jb
clc
lret
jno
and
mov
ss
pop
cli
push
fs
dec
dec
ja
adc
cmp
pop
and
mov
sbb
adc
mov
mov
das
es
pop
data16
or
insl
enter
imulb
xchg
xchg
or
and
js
sti
xor
xchg
xchg
cmpl
sbb
or
lods
mov
out
dec
sahf
mov
pop
push
mov
push
mov
movsb
xor
add
jb
js
in
fcoms
out
xlat
xor
and
xchg
add
inc
shrb
mov
enter
icebp
sub
and
jno
sub
out
clc
lea
pop
mov
mov
push
xchg
cmc
sbb
mov
add
movsl
fs
jmp
pop
inc
mov
push
pushf
push
in
lahf
test
sbb
cld
sub
and
or
mov
in
push
mov
xor
dec
mov
add
adc
xor
jbe
loopne
add
dec
jmp
test
adc
mov
lods
nop
arpl
rclb
push
cmp
adc
jns
cmc
push
push
aas
inc
mov
cli
push
fisubrl
add
push
or
or
cld
filds
lods
andb
pushf
aas
dec
imul
xchg
addr16
mov
cmp
test
lods
cs
shlb
mov
cs
cs
leave
addr16
inc
add
xor
sarb
aam
mov
mov
xchg
cmp
mov
add
mov
in
push
call
popa
jns,pn
int3
mov
les
insb
gs
jne
stos
outsb
test
push
std
inc
push
enter
lods
adc
add
outsl
je
cmp
inc
fs
jne
dec
jne
inc
into
jle
enter
or
outsl
fs
outsb
jns
xchg
dec
dec
jb
pop
outsl
jb
insl
jo
fidivs
insl
push
je
rsqrtps
and
inc
popa
je
adc
jns
inc
outsl
outsl
insb
pop
inc
jle
je
inc
jns
inc
cmp
faddp
getsec
mov
add
xor
hlt
add
pop
mov
adcl
jmp
or
ror
or
flds
add
add
fnsave
inc
cli
pop
or
int3
insl
mov
je
or
add
shlb
add
xor
jb
loope
movsb
test
mov
mov
insb
loopne
pop
sbb
pop
ja
adc
adc
aas
adcb
and
sbb
xorb
sbb
fildl
xchg
mov
aaa
inc
mov
jbe
push
inc
pop
fstps
adc
xchg
fwait
movsb
arpl
adc
inc
adc
xchg
or
arpl
mov
sub
test
sub
jb
shlb
bound
or
arpl
sub
push
loope
add
js
cwtl
sbb
sbb
arpl
push
inc
pop
popa
jns
imul
sub
bound
sbb
jge
repnz
inc
jb
mov
sbb
push
sbb
jb
insb
lret
int3
int3
mov
mov
das
xor
xor
arpl
test
test
push
outsb
sti
pop
arpl
pop
sub
cwtl
arpl
arpl
jo
arpl
and
arpl
sbb
rorl
or
fmull
es
push
pop
mov
int3
leave
add
shlb
pmulhuw
push
test
add
in
jno
iret
andb
in
mov
mov
enter
or
call
sub
call
mov
xchg
in
adc
jb
mov
lret
in
add
mov
out
ljmp
hlt
mov
icebp
add
xor
scas
and
pop
repnz
mov
fcmovb
shlb
and
mov
daa
and
sub
gs
jg
add
or
outsb
mov
sub
sub
mov
pop
add
mov
sub
cmp
je
dec
je
push
or
mov
or
dec
adc
dec
cmp
add
stc
jge
std
flds
out
das
std
mov
clc
mov
adc
das
push
sub
stc
hlt
mov
inc
ss
and
in
mov
imul
insb
push
call
sub
andb
lret
lcall
and
mov
nop
mov
negb
dec
ror
jge
or
insb
mov
rol
lcall
mov
fmul
push
shlb
push
rcrb
lds
sbb
movsl
inc
or
fsubp
add
add
lea
jmp
js
outsb
sub
fld
mov
mov
add
adc
lock
cmp
ret
nop
adc
or
movb
mov
add
das
and
adc
lea
xchg
xorl
lahf
ret
add
jge
scas
mov
add
xor
test
cmp
dec
jne
pushf
xchg
inc
mov
test
pop
jmp
jbe
in
bound
mov
in
sub
mov
addl
incl
mov
add
stos
push
push
cmp
ss
xor
xor
cmova
cli
xchg
das
lcall
adc
add
dec
mov
dec
clc
jmp
adc
push
ljmp
add
popf
add
push
imul
lea
mov
aaa
push
lea
fisubs
ss
test
nop
lea
insb
enter
inc
xchg
and
add
ret
add
seto
mov
mov
jne
inc
inc
inc
inc
shlb
arpl
push
jb
repz
and
lock
pop
subl
nop
add
jbe
push
es
into
out
or
jne
add
add
testl
mov
or
mov
add
test
inc
or
xchg
outsb
sub
inc
adc
les
outsl
or
data16
idiv
inc
jge
loopne
je
mov
jmp
pop
adc
rorb
cmpsl
add
cmpsb
or
and
or
mov
mov
jne
fadd
out
push
push
cmp
mov
pop
lahf
mov
fmull
inc
dec
enter
add
xchg
or
or
xor
xchg
faddl
call
call
shlb
dec
std
jl
jmp
insl
fisttps
cmp
in
outsb
mov
cwtl
or
cld
or
jg
insl
mov
sub
xchg
out
mov
insb
sub
call
sbb
in
cmp
mov
call
jmp
push
push
push
fs
add
nop
fwait
sbb
jnp
add
subb
xchg
xor
gs
sbb
decl
push
sbb
jb
call
add
or
ss
cmpsl
pop
xchg
incl
adc
cmp
pushf
addl
inc
icebp
data16
adc
mov
hlt
jmp
xor
lea
push
je
jmp
jp
add
inc
mov
jg
cmp
je
lods
jne
mov
movb
add
pop
jnp
dec
inc
add
addb
jo
push
add
add
xor
or
push
les
and
pop
mov
loopne
int
push
and
mov
pop
test
push
mov
mov
dec
or
or
push
and
inc
andl
cld
cld
fstcw
push
jae
cld
ret
lcall
pop
es
lods
hlt
xchg
call
or
lcall
xchg
psubsb
arpl
fcoml
mov
push
fsts
mov
pop
sbb
mov
clc
lcall
inc
mov
mov
inc
lret
popa
mov
pop
jns
into
mov
jle
lret
jb
aaa
insb
jnp
adc
dec
ret
iret
xchg
rcrl
fs
ret
test
mov
iret
jb
scas
xchg
das
aas
and
dec
in
and
push
adc
subb
fs
mov
fistl
in
inc
and
lret
ljmp
sbb
ret
pop
in
lods
mov
push
es
pop
out
pusha
sub
rorl
jle
aam
pop
rorb
movd
enter
aad
repnz
dec
shll
inc
rolb
push
jp
scas
ror
fnstenvs
push
shrl
or
and
add
xor
imul
xor
mov
mov
aaa
stos
cli
mov
adc
sti
cmp
pop
arpl
scas
mov
pop
xchg
fcoms
mov
daa
fmuls
mov
pop
cmp
sbb
sbb
fiaddl
push
push
mov
add
cmp
and
fucomp
add
lock
add
xchg
sbb
mov
add
mov
cmp
xchg
fs
in
shll
das
fs
cmp
loopne
movsbl
xchg
jne
fsubl
mov
fcomps
lds
aam
or
push
xchg
int
pop
and
int3
sbb
inc
enter
pop
repz
or
mov
rolb
ljmp
dec
jmp
jne
or
add
aaa
int3
add
pop
mov
idivb
ja
and
repnz
clc
mov
add
add
int
iret
shr
or
sub
ja
cmpsb
insl
mov
and
data16
mov
cmp
cs
fsts
in
pop
enter
mov
test
or
flds
cmp
nop
or
frstor
mov
and
xchg
xor
sbb
lods
pusha
lods
push
push
sti
ds
mov
adc
test
shll
dec
test
cmp
mov
mov
sbb
mov
in
pushf
sbb
push
jbe
sarl
cmp
and
dec
push
insb
xchg
lea
jmp
dec
nop
nop
and
je
cmp
daa
daa
ret
xor
adc
mov
in
aam
mov
les
xchg
add
inc
scas
add
dec
lds
sub
pop
out
add
and
in
in
add
jns
aad
aad
sbb
add
in
cmp
test
les
and
xor
ja
add
jb
add
aam
enter
loopne
sbb
loopne
andl
enter
daa
fs
cmp
push
sub
in
and
and
in
xor
iret
loopne
dec
and
nop
pop
push
xchg
daa
add
push
fsubrl
adc
imul
pop
ss
adc
sub
lcall
fsts
jge
add
jmp
fcomps
aaa
sub
and
add
mov
mov
adc
sbb
sbb
adc
and
adc
and
pop
dec
int3
pop
aaa
nop
sbb
sbb
lods
and
push
sbb
adc
in
mov
loopne
jecxz
mov
cmp
adc
mov
fcomps
adc
ss
cs
mov
lea
mov
shll
jb
int3
insb
test
inc
adc
enter
enter
and
lea
push
add
sub
in
fsin
sbb
cmp
dec
jg
fisubl
scas
or
int
adc
jmp
ret
mov
fistl
les
pop
adc
rclb
sbb
in
bound
mov
mov
fnsave
sbb
mov
test
xor
es
mov
push
adc
push
lods
adc
test
test
mov
or
mov
and
cs
orb
adc
and
sub
adc
aam
dec
in
adc
aaa
push
and
nop
sub
cmc
and
ljmp
add
fs
adc
enter
out
in
aaa
mov
or
cmpsw
mov
js
in
andb
loop
xchg
add
inc
insl
jo
jns
test
and
invd
push
test
aaa
push
insl
popa
adc
and
dec
push
dec
mov
push
pop
insb
add
cmp
repnz
outsl
jne
inc
inc
jne
jb
outsb
arpl
adc
ret
dec
push
inc
mov
jg
adcb
rorb
lret
pop
xchg
outsb
cmovnp
fs
mov
push
outsb
imul
sti
xor
testl
xor
push
cwtl
fldt
push
inc
jns
in
dec
sbb
jb
faddp
dec
add
and
inc
ss
iret
add
mov
push
ret
push
sti
mov
out
call
push
inc
fcoms
pusha
and
xchg
and
sub
test
and
jmp
cwtd
xor
in
ss
add
les
nop
cld
jmp
lea
and
lret
push
xchg
cld
movsb
add
jl
std
mul
or
lar
sbb
and
sub
xor
mov
popf
xchg
push
arpl
fs
and
fsts
xlat
adc
in
and
nop
inc
mov
inc
sbb
add
jp
fiadds
shlb
sub
dec
in
and
fwait
inc
outsb
jns
xchg
adc
and
cmovbe
out
xlat
mov
in
or
mov
add
filds
or
add
xor
mov
mov
leave
jbe
mov
sbb
clc
add
fists
mov
sti
cli
cmp
insb
dec
sbbl
decb
sbb
ja
ret
fsubl
pushl
repz
dec
add
fmuls
repnz
fdivl
aad
out
rcll
daa
inc
in
data16
pop
adc
push
xchg
xlat
push
mov
mov
clc
cltd
push
out
pop
cmp
cmp
je
jl
testb
adc
into
xor
add
cmp
add
pop
adc
push
xor
ja
inc
movsb
lea
add
or
inc
xor
mov
pushf
int3
pop
mov
xor
xlat
xchg
jge
adc
or
adc
adc
xor
mov
dec
repnz
push
sbb
lcall
push
mov
pop
mov
or
sub
xchg
or
mov
loop
add
sbb
jle
or
mov
lret
inc
xchg
jmp
imul
add
or
sbb
int3
cmp
test
jge
or
push
sbb
cwtl
sub
pusha
adc
sub
or
xchg
push
lret
clc
data16
test
inc
add
jecxz
adc
dec
dec
mov
in
aad
mov
es
push
mov
mov
dec
fmuls
sbbb
sbb
nop
pop
jle
loop
cmp
mov
test
dec
cmp
cmp
fmuls
lahf
cmp
and
lea
in
and
popa
fnstenv
jo
loop
inc
mov
xchg
daa
sub
jecxz
sub
dec
lahf
pop
nop
cmp
movsb
lock
test
nop
fists
xor
xchg
mov
insb
jmp
addr16
repnz
and
fucom
aad
imul
jns
iret
xor
js
jmp
or
mov
mov
sbb
pushf
sbb
leave
xchg
out
cmpsl
or
or
daa
iret
xchg
iret
mov
and
mov
and
mov
es
sbb
xor
mov
sbb
and
fildl
out
xor
stc
aas
in
aam
xchg
jl
xor
outsl
jmp
xchg
dec
test
fsubp
pusha
jp
push
mov
mov
xor
sarl
xchg
cmp
int3
xchg
in
pop
xchg
inc
fsubs
pop
xchg
sbb
test
in
dec
mov
mov
enter
add
fwait
push
in
dec
rcr
push
in
sti
add
popa
lret
fmul
cmpb
or
push
addl
fimull
add
loopne
push
mov
insl
jbe
dec
sbb
inc
shrb
loopne
daa
inc
inc
xchg
popa
push
and
sbb
sbb
jns
jp
out
cmp
inc
stos
or
cmc
or
bound
sbb
jp
or
adc
xor
xor
mov
cmpsb
or
add
or
dec
or
repnz
push
out
std
add
and
sbb
pop
push
subl
or
lds
pop
adc
dec
xchg
sbb
dec
mov
mov
jmp
mov
lds
lcall
test
icebp
and
fisttpll
pop
adc
lock
outsl
out
cs
or
cli
jb
call
push
sbbb
inc
sub
mov
in
mov
xchg
mov
insl
push
dec
in
sti
sbb
orb
push
mov
sbb
test
jmp
push
push
inc
push
sub
dec
add
out
loopne
push
stos
cmp
in
inc
or
cmp
or
fcomps
and
cli
or
pusha
andl
repnz
or
rcll
ljmp
inc
pop
sub
add
mov
sbb
pop
push
sub
dec
rcll
or
pusha
dec
sahf
or
sti
ja
inc
jno
xchg
jle
inc
or
mov
inc
jecxz
movsb
mov
je
cwtl
push
inc
fcompl
jl
je
adc
fdivrl
and
out
imul
cmp
les
add
testl
xor
pop
or
inc
aas
push
pop
push
inc
daa
add
inc
push
das
std
dec
les
lret
pop
mov
mov
xchg
or
leave
in
hlt
mov
pop
mul
push
dec
mov
or
test
jl
push
cli
sti
dec
or
xlat
push
or
push
or
and
sub
mov
ds
or
cli
push
lock
les
jl
inc
adc
es
leave
and
pop
subl
add
inc
test
inc
mov
sbb
aas
inc
push
adc
and
xor
pop
add
add
lcall
push
sub
sarb
and
mull
sub
add
scas
movsb
xor
loopne
jne
or
inc
outsl
and
je
fdivl
jg
add
call
out
and
mov
push
icebp
pop
testl
mov
add
pop
cmpb
or
cmc
insb
push
fidivrs
mov
xchg
fwait
mov
dec
vpcomuq
jo
insb
push
cmpl
or
out
cltd
mov
insl
mov
adc
or
nop
pop
cmpb
inc
pop
dec
push
fs
sbb
and
xor
add
fdivrs
adc
and
push
enter
inc
pusha
sub
pusha
add
insb
sbb
push
mov
mov
xor
daa
insb
sub
adc
or
mov
dec
mov
add
add
jp
sub
jo
mov
add
mov
out
push
add
cmpsb
fsubs
mov
mov
or
adc
add
add
inc
dec
jne
ljmp
mov
cmpsb
int3
cltd
push
insb
in
jl
add
fiadds
inc
shll
pop
mov
cmovb
fstps
lcall
adc
xor
or
push
pop
add
push
sub
inc
inc
fcmove
pushf
inc
add
jmp
adc
adc
ret
mov
aam
aam
mov
es
xor
inc
shrb
loop
cmp
incl
test
xlat
insb
incb
pop
jle
lods
jmp
movl
add
inc
mov
lock
mov
arpl
add
push
mov
add
ja
xor
adc
data16
lmsw
enter
cwtl
std
into
xchg
sub
mov
mov
rolb
loopne
das
les
sub
or
mov
jbe
enter
add
shlb
add
test
fnstcw
or
pushf
js
aaa
out
sti
inc
sub
movsb
mov
iret
add
jo
lea
decl
mov
scas
push
rcr
inc
sbb
mov
push
dec
jge
daa
xchg
jl
mov
aam
add
rorl
mov
inc
push
lds
mov
push
or
int
xchg
xchg
mov
in
or
nop
push
pop
mov
mov
fidivl
les
cmp
lret
cmc
push
in
int
in
push
dec
fbld
lret
and
insb
inc
mov
mov
sti
mov
or
add
addr16
or
pop
mov
mov
pop
leave
and
sbb
in
adc
mov
ss
xorl
fwait
in
stos
lods
mov
pop
pop
dec
inc
je
nop
pushf
xchg
dec
push
das
sub
jb
test
mov
test
in
ret
xchg
adc
mov
mov
movsb
cwtl
xor
orl
add
mov
push
fstpt
into
aaa
push
arpl
jo
outsl
arpl
adc
cwtl
jae
add
push
or
sub
xor
xor
fs
push
xor
ss
lods
mov
cmp
outsl
out
scas
and
push
jne
gs
inc
jne
inc
jns
jbe
pop
pop
inc
jae
push
insl
push
stc
pushl
gs
inc
inc
inc
fs
jae
data16
imul
adc
outsb
mulb
xor
push
add
insl
adc
ljmp
xchg
je
icebp
sub
cs
imulb
mov
push
fnstcw
mov
add
gs
popa
push
je
fucomi
scas
push
or
das
arpl
jae
add
mov
inc
in
push
sub
jne
push
inc
sub
outsb
adc
test
push
arpl
arpl
or
test
outsl
and
jl
arpl
jae
insl
mov
sbb
jns
mov
nop
out
cmpsb
add
push
das
outsb
das
insl
and
jo
imul
dec
add
push
or
xor
cltd
adc
outsb
push
xchg
xor
sub
adc
jne
insb
loop
insb
adc
arpl
inc
js
pop
gs
stos
jbe
mov
ret
imul
dec
pop
add
and
cmp
daa
imul
or
inc
inc
jae
or
push
shrb
xorl
mov
inc
jg
movsl
adc
out
outsb
and
pop
push
or
sub
dec
leave
pop
addr16
or
pop
adc
je
push
push
addr16
outsb
mov
js
mov
mov
or
push
sbb
add
mov
addb
inc
sbb
adc
fsubs
mov
add
add
mov
mov
and
sub
int3
enter
enter
fcomp
fxch
andb
loopne
jecxz
in
das
add
movsb
imul
arpl
out
sti
fbld
jg
push
jne
je
insl
and
and
mov
and
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
ficomps
jp
dec
pop
add
pusha
adc
flds
push
or
dec
add
pop
or
gs
add
cmpsb
popa
dec
push
adc
dec
aas
in
jg
inc
roll
pop
es
adc
and
add
xor
inc
imul
imul
imul
cmpsb
imul
shrl
cmpsb
hlt
cld
add
or
dec
shll
cmp
sbb
stos
add
add
sub
enter
pop
test
popa
and
pop
cmp
cmp
mov
mov
leave
xchg
cmpl
sbb
and
cwtl
pop
lods
add
daa
dec
or
push
pop
and
pop
fbstp
faddl
push
xor
rcrl
imul
cmpsb
imul
lcall
and
cltd
bound
arpl
addb
nop
mov
dec
aaa
dec
imull
add
inc
mov
or
pop
add
arpl
xchg
fcompl
adc
and
jo
mov
pop
mov
sbb
sub
mov
je
mov
pop
iret
pop
test
jnp
cmp
arpl
xor
bound
das
test
add
fucomp
mov
and
sub
push
xchg
icebp
mov
dec
pcmpeqb
pushf
pop
mov
or
xchg
pop
lods
adc
or
mov
pop
mov
pop
xlat
jne
hlt
add
pop
xchg
outsl
pop
pop
int3
scas
cmp
cld
pop
xor
jnp
fwait
lods
pop
cmpsb
jmp
jmp
insb
pop
inc
or
lods
sahf
fsubl
mov
das
arpl
fucomp
adc
jae
or
pushf
or
shrl
pop
ret
pop
jmp
aas
xor
imul
int3
pop
fisttps
xlat
xor
aas
sbb
or
add
pop
fs
pop
lods
add
adc
mov
adc
or
and
add
mov
adc
sub
pop
subb
add
add
add
dec
add
add
mov
push
pop
or
mov
dec
add
dec
dec
dec
inc
dec
dec
dec
sti
data16
inc
dec
dec
sub
add
pop
inc
enter
add
jmp
movsb
jnp
push
addb
rolb
pop
pop
adc
add
call
mov
add
and
inc
and
add
aaa
fnsave
incl
push
add
je
push
jne
outsb
add
dec
add
jbe
and
add
add
or
push
scas
mov
pop
adc
and
xchg
jne
xchg
jb
inc
or
in
int
and
add
test
arpl
push
jo
mov
lea
mov
jns
dec
mov
movb
or
or
mov
je
push
aaa
je
insl
add
jmp
bound
dec
push
adc
pop
mov
jmp
dec
or
adc
sti
fisubs
pusha
adc
mov
add
pmaxsw
or
std
add
add
cmpsl
or
mov
lret
and
jb
pop
xlat
jne
outsl
add
sbb
and
mov
jne
imul
adc
out
jnp
add
and
mov
sub
or
daa
sbb
cs
in
test
dec
add
pop
ret
test
pop
test
add
cltd
jge
lock
aaa
aaa
push
inc
imul
or
pop
pop
pop
jne
popf
cmp
jb
jge
cmp
add
jne
imul
int
jae
out
jne
lock
fstps
sarb
mov
dec
aaa
jbe
insb
jmp
in
lock
jo
lock
sbb
and
xor
xchg
popf
jg
aas
outsl
cmp
xorb
fwait
xchg
sub
sub
or
xor
outsl
jae
outsb
or
fcoms
fldlg2
xor
sub
sub
adc
cmp
lret
fdivl
add
gs
adc
pop
dec
addr16
out
popa
enter
push
or
insl
daa
xor
mov
fcoml
jmp
xchg
push
jo
outsl
out
test
cli
sbb
push
jg
xor
dec
rolb
and
lea
jb
xchg
sbb
ljmp
inc
xchg
mov
sbb
jns
pop
and
neg
dec
pop
inc
scas
shlb
outsl
sbb
imul
push
out
pop
arpl
shll
movb
xchg
sub
cmpsb
loope
aaa
outsl
test
dec
pop
xor
add
adc
adc
pop
mov
nop
sub
sbb
and
adc
or
add
imul
mov
jb
sub
mov
je
push
xor
push
fbld
and
xchg
sub
pop
and
adc
insb
ss
in
or
out
add
adc
das
imul
cltd
xor
pop
insl
pop
push
jae
lcall
insl
push
xor
fcomps
repz
scas
sbb
sti
push
andw
adcl
dec
jae
dec
push
fbstp
icebp
loopne
sti
add
pop
out
or
add
and
andl
adc
adc
test
daa
mov
dec
bound
sbb
xchg
jp
dec
cmp
sbb
imul
imul
mov
jmp
lret
inc
mov
ja
fcoms
flds
inc
fbld
pop
outsl
outsl
mov
jns
outsb
sub
imul
outsb
fcoml
pop
std
gs
in
int
mov
arpl
mov
adc
dec
sti
adc
sbb
sub
jnp
loop
aas
cmc
ja
pushf
and
jp
xlat
adc
push
test
adc
adc
xor
dec
sbb
mov
pop
adc
adc
sub
pop
aas
xor
pop
sub
pop
aas
mov
push
and
aas
lret
cmp
aaa
mov
pop
fwait
cmp
andb
daa
insb
outsl
popa
add
add
xchg
and
push
adc
mov
imul
or
or
imul
sub
sbb
add
or
xchg
sub
sbb
inc
mulb
add
sub
cwtl
jnp
popa
add
sbb
push
gs
or
std
push
inc
dec
ljmp
lods
push
or
cmc
jne
gs
push
fs
mov
jbe
je
sub
push
je
xlat
push
cmpsb
inc
mov
push
imul
cmp
jns
adc
push
jle
jle
in
imul
gs
jbe
inc
push
inc
fwait
jmp
imul
int
adc
jp
add
mov
cltd
dec
jae
in
jae
or
push
push
push
adc
and
sbb
adc
push
jb
add
inc
fs
jae
adc
adc
mov
sbb
pusha
cltd
outsw
andps
push
fld
or
mov
insl
adc
cmovae
or
pop
sbb
outsl
ja
test
xor
add
je
cmovae
pusha
int
int
inc
outsb
jne
inc
jge
xor
int
pop
jb
jge
mov
lahf
pop
xor
outsl
insl
mov
sbb
lock
popa
lahf
xor
mov
add
popa
mov
mov
adcb
and
gs
sbb
es
ljmp
out
dec
imul
pushw
outsl
dec
lods
fs
xchg
cmp
adc
sbb
or
out
jo
or
sbb
jo
cmp
js
pop
cwtl
fcomps
cs
xchg
adc
fadds
rorb
outsb
push
shlb
adc
xor
mov
pop
xlat
cmovne
dec
data16
push
xor
cmp
or
add
jbe
imul
mov
jbe
arpl
pusha
inc
nop
insl
mov
push
in
cmp
adcb
cmp
dec
gs
insb
ss
sbb
mov
bound
adc
push
enter
mov
adcb
inc
outsl
jne
mov
sbb
adc
mov
push
sbb
mov
pop
or
fsubs
push
into
bound
adc
mov
sub
sarl
mov
in
in
or
inc
insb
addr16
jmp
and
arpl
mov
in
adc
arpl
jae
data16
mov
xor
push
lods
jno
bound
dec
sub
dec
scas
mov
dec
aaa
inc
adcl
jnp
cmp
jb
add
test
mov
dec
add
add
pop
inc
sub
popl
mov
dec
adc
jbe
jnp
or
adc
pop
add
push
xor
adc
xor
or
or
mov
imulb
pop
adc
das
inc
pop
mov
pop
rclb
and
mov
mov
add
sbb
inc
inc
xlat
inc
aaa
movsb
and
aaa
fsub
pusha
inc
inc
push
inc
mov
adc
daa
aam
nop
out
jae
push
push
icebp
or
pusha
inc
daa
jbe
cmc
sub
popa
add
jmp
daa
or
sbbl
dec
dec
repz
or
jb
daa
nop
subl
and
ret
daa
adc
rcrl
es
daa
sub
pop
dec
bound
pop
jb
add
add
inc
out
add
dec
add
incl
add
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lock
inc
add
push
inc
add
