cmp
pushf
push
sub
jmp
call
jmp
add
inc
jb
popa
je
inc
imul
push
gs
arpl
jae
add
mov
cmp
test
mov
push
call
push
call
call
push
call
gs
cmpb
mov
lea
je
push
lea
jmp
add
inc
outsb
jne
push
imul
pusha
mov
bsf
not
mov
stc
cmp
pusha
call
add
inc
jb
popa
je
push
imul
gs
gs
imul
cmpl
pushf
jmp
cmp
xchg
sub
mov
xchg
push
xor
inc
push
mov
sbb
add
call
inc
xor
leave
dec
cwtl
cmp
pop
and
sarb
push
cmp
xchg
dec
pop
test
paddsb
xor
inc
repz
adc
mov
mov
xchg
lea
add
mov
enter
sub
dec
sbb
mov
mov
adc
into
frstor
hlt
leave
insb
addr16
pop
imul
loopne
jl
mov
xor
pop
lock
and
dec
imul
sbb
xchg
clc
xor
or
push
mov
add
ss
out
repnz
xchg
push
cmp
push
push
or
sbb
out
mov
inc
pushf
push
rorb
jecxz
jle
lret
dec
sbb
loope
mov
mov
dec
jnp
lods
iret
dec
neg
dec
add
dec
pushl
xor
jecxz
push
pusha
inc
xor
dec
xlat
jecxz
cmp
xchg
mov
jne
cmp
jb
inc
out
mov
jge
pop
push
mov
stc
cld
data16
xor
pop
and
fsts
push
int3
jo
xor
aam
enter
sbb
pop
jl
adc
rcl
shl
adc
add
adc
test
push
push
mov
clc
jmp
push
call
jnp
jle
pushf
stc
add
inc
xlat
dec
lcall
sbb
dec
push
xlat
mov
add
adc
insl
jecxz
sbb
sbbl
ja
test
rcl
sub
ror
setge
sub
add
pusha
mov
rol
and
add
and
mov
test
repnz
pusha
mov
lea
ja
jne
jmp
mov
mov
xor
out
shll
cmp
cmp
testb
repnz
dec
adc
into
dec
mov
pop
dec
fwait
push
idivl
clc
ficoms
push
fimuls
xor
in
mov
das
xchg
sbb
pushf
inc
add
inc
jb
gs
imul
add
push
gs
gs
jae
dec
jne
gs
add
push
jne
jb
push
gs
imul
imul
outsb
fs
gs
popa
addr16
add
cltd
or
call
out
push
lea
jno
adc
pushf
movb
pushf
lea
jmp
add
inc
imul
je
imul
gs
push
push
jb
outsl
jb
je
add
inc
push
add
add
dec
jae
push
jo
popa
dec
jne
gs
arpl
add
inc
gs
inc
push
add
mov
pusha
push
pushf
cmc
add
cmp
add
push
pushf
pushf
lea
jmp
add
inc
jb
popa
je
push
gs
imul
fs
ja
call
jmp
lods
stos
stc
mov
pushf
sbbb
pusha
xchg
stos
inc
mov
call
adc
push
mov
xchg
push
push
out
arpl
into
pushf
pushf
push
adc
mov
movb
call
pushf
movb
lea
je
test
pushf
sub
pusha
pushf
push
movb
lea
jmp
call
add
inc
imul
dec
gs
popa
addr16
add
mov
dec
bsf
pop
bt
mov
pusha
add
cmp
push
pushl
mov
cmc
bt
stc
test
call
push
call
mov
iret
add
add
imul
jae
dec
gs
outsl
jb
add
ret
mov
sti
incl
add
je
bound
arpl
call
add
push
gs
imul
bound
gs
add
shr
pushf
pushf
push
push
lea
je
push
call
pushf
mov
push
pushf
pushl
ret
jmp
add
push
popa
imul
insb
gs
bound
arpl
inc
inc
sbb
outsl
dec
popf
arpl
xchg
js
sub
cli
xor
add
xor
sub
movsb
sub
int3
jbe
fiadds
popa
xchg
test
push
arpl
stos
pop
decl
cltd
mov
add
lcall
lret
mov
addr16
fldenv
adc
fmull
jne
xor
xchg
push
clc
nop
andl
jge
cmp
push
mov
dec
popf
fldl
inc
psubusw
push
push
popa
lret
lret
mov
je
in
jmp
mov
and
or
jbe
sahf
data16
dec
lods
out
mov
xchg
push
movsl
lret
in
les
enter
push
fbld
cmp
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
gs
je
inc
outsl
outsb
je
add
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
push
push
jb
outsl
jb
je
add
and
je
push
movb
pusha
lea
je
not
dec
xor
btr
mov
test
mov
rol
neg
sub
shrd
shr
shl
sar
rol
mov
inc
not
cmp
shr
add
stc
sbb
add
btr
mov
jmp
push
movb
lea
je
cmc
cmp
pushf
pushf
pusha
jmp
mov
mov
push
mov
pop
mov
cmc
and
xchg
scas
mov
cmp
add
or
fildl
or
movsb
pop
mov
ja
imul
push
inc
fcoml
push
push
pop
in
loopne
cld
cmp
and
stos
xchg
add
decb
xchg
add
jmp
push
lea
call
cmc
pushf
sub
jmp
push
call
leave
lahf
je
push
call
sub
cltd
mov
call
push
call
call
mov
jmp
add
inc
insb
outsl
bound
dec
outsl
arpl
je
cmp
movsl
sbb
and
popf
jno
jg
insl
mov
and
dec
test
mov
and
in
shll
pop
push
call
in
sbb
lea
jne
stc
btc
xor
rol
mov
neg
shr
dec
add
xor
bt
sub
mov
call
jns
push
not
not
neg
sub
push
shld
mov
inc
bswap
xor
mov
bt
clc
cmp
cmpsb
pusha
call
push
call
mov
js
dec
cmp
add
jne
movsl
xor
jle
adc
mov
clc
aas
aam
notb
dec
jno
mov
fwait
aaa
or
lret
aad
sbb
push
cs
mov
adc
call
xor
bound
gs
mov
push
aam
xchg
or
sub
ret
clc
mov
lea
dec
stos
inc
rclb
xchg
addr16
in
xchg
mov
mov
add
neg
clc
not
clc
bt
bt
stc
rol
movb
mov
mov
inc
push
call
push
call
cwtl
xor
add
push
insb
jae
gs
popa
insb
jne
add
lea
jae
call
jae
call
adc
pushl
call
pusha
jmp
call
call
add
inc
imul
add
add
jb
jne
insb
push
jb
je
arpl
mov
loope
andl
mov
push
mov
sahf
inc
jl
or
sbb
stos
and
movsl
loopne
popf
cld
movsb
push
lcall
inc
adc
mov
popa
cwtl
mov
test
or
cld
call
mov
add
outsl
outsb
jae
jmp
mov
mov
pop
push
fisubs
enter
jg
inc
loopne
mov
dec
sti
mov
lcall
sbb
push
jle
mov
mov
cmpsl
dec
es
repnz
rcrl
mov
pop
iret
sti
pop
out
stos
push
push
js
push
popa
cltd
int3
pop
add
repz
mov
fs
popa
loop
frstor
or
ljmp
lods
movsb
xor
and
mov
cs
sub
and
das
and
out
rorb
pop
imulb
ret
ret
cld
and
test
cwtl
js
loopne
adc
in
xchg
xor
test
sgdtl
pusha
mov
lea
not
mov
push
lea
jne
test
jmp
add
sbb
daa
mov
fcompl
fisttpll
shrb
sbb
push
lea
movsl
popf
lahf
mov
test
mov
lret
int
rorl
aad
sub
xchg
lock
mov
call
dec
pusha
sub
lods
push
into
pop
hlt
lcall
jb
jbe
js
jl
mov
cwtl
or
adc
mov
sub
push
dec
je
xchg
test
loop
leave
pop
add
aas
pop
xchg
push
movsl
xor
das
in
cmc
xchg
push
adc
mov
inc
push
push
pushf
fs
je
test
les
in
hlt
push
add
xor
pushf
gs
jne
test
lds
adc
adc
push
inc
aam
lcall
std
xchg
lods
les
sbb
inc
or
cmp
sub
enter
cmp
shrb
lcall
or
cmp
mov
xchg
insl
insb
sbb
dec
mov
push
adc
out
sub
cmp
sub
sub
std
gs
int
enter
ds
jo
dec
test
mov
sbb
and
add
push
push
mov
neg
add
and
fmull
jmp
dec
cmpsb
xchg
push
mov
dec
das
push
insb
push
test
pop
movsl
xor
das
std
sub
rcll
inc
adc
push
xor
in
movsl
adc
push
and
jmp
push
iret
lcall
pop
pop
and
in
adc
add
cmp
and
or
faddl
out
pop
adc
js
ds
sub
outsb
push
aam
fsub
inc
scas
add
ljmp
fdiv
inc
dec
jle
jbe
jo
ror
mov
in
xchg
in
test
outsl
les
call
dec
push
adc
push
pop
inc
aam
mov
cld
xchg
sbb
lcall
and
and
and
es
dec
push
aad
inc
sbb
jo
and
pushf
fs
gs
in
in
pop
inc
xor
push
lds
xchg
push
adc
adc
nop
push
xchg
pushf
push
das
push
push
rclb
mov
mov
jo
jno
lock
icebp
and
and
mov
das
popa
push
loopne
loope
pop
inc
xor
push
rcrl
add
pop
sbb
cwtl
push
cltd
pushf
pop
das
pop
push
fcoms
mov
das
jns
clc
xchg
stc
sub
sub
test
test
push
call
dec
xor
push
leave
pushf
mov
mov
xchg
or
pop
wrmsr
mov
dec
das
dec
push
into
xchg
iret
cs
das
xor
das
outsl
push
out
xchg
out
push
pop
pop
xor
das
pop
push
ficoms
mov
das
jg
xchg
call
pop
pop
xor
das
push
push
xchg
xlat
ss
aaa
xor
das
ja
notb
cmpsb
push
cmpsl
pushf
data16
addr16
out
out
pop
inc
xor
push
pushf
xchg
xchg
xchg
or
arpl
xor
pop
mov
pushf
das
jb
pop
jae
pushf
das
repnz
pop
repz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
dec
int3
pop
sub
lods
push
insb
pushf
in
das
sbb
pushf
xchg
pop
fcompl
cmp
mov
das
adc
xchg
xchg
push
aam
xor
mov
je
hlt
aas
adc
adc
push
xchg
push
xchg
xchg
push
push
pop
shlb
rcr
stc
xor
inc
jg
jno
jo
push
and
inc
pushf
adc
xor
xchg
inc
sbb
cmp
sub
push
das
cs
push
xchg
adc
ss
push
es
inc
adc
xor
and
sbb
push
and
jl
sbb
cld
pop
sub
pop
inc
jle
sbb
jl
lods
push
int3
xor
push
or
push
int
push
sbb
xor
in
and
cmp
les
int3
movsb
movsb
lea
inc
mov
aaa
aas
sbb
decb
push
sub
aas
fwait
dec
in
mov
sub
aad
xor
test
push
sub
sub
push
and
adc
adc
adc
push
jg
stc
repz
and
push
adc
lcall
and
mov
sub
sub
pop
shll
shll
popf
cmp
cmp
sub
inc
push
inc
sub
inc
or
loopne
xor
push
icebp
push
leave
pop
jne
les
push
das
cs
xor
xor
xor
lcall
push
cmp
ds
mov
or
inc
jae
pop
and
in
sub
mov
fadds
push
aam
ds
mov
dec
push
xchg
fs
xchg
imull
mov
push
mov
pop
aam
mov
test
jne
cmp
jnp
xchg
jg
movsl
pop
push
xor
test
push
xchg
fadds
mov
hlt
outsb
fs
cld
in
ds
sarl
add
aaa
cs
sub
xor
xor
jbe
cmc
std
adc
cs
hlt
push
xor
mov
fbstp
push
fsub
hlt
les
aas
insb
xor
mov
aas
hlt
je,pt
shlb
lahf
in
or
inc
inc
push
fdivrs
aad
add
cli
mov
push
push
lds
ds
xor
in
fmulp
mov
aam
outsb
jne
mov
push
xor
aam
xor
adc
test
jne
mov
pop
movsl
les
fcoms
dec
js
jnp
cs
frstor
cli
insb
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
push
gs
imul
gs
clc
cmp
jmp
pushf
lea
je
pusha
jmp
add
inc
gs
jns
je
insl
dec
outsb
jne
add
outsb
je
push
inc
gs
jne
jb
outsb
je
jb
arpl
jae
movl
jmp
add
push
popa
imul
jo
imul
add
lea
jae
push
jmp
call
add
inc
gs
popa
jae
inc
jb
outsl
jb
lea
jae
test
or
cmp
mov
pushf
xor
sbb
mov
mov
pusha
or
cmp
mov
call
inc
push
push
imul
fimuls
dec
fcmovb
cmpsb
fisttpll
dec
in
outsb
icebp
mov
jbe
jnp
aam
mov
lods
aad
div
rorb
fnstcw
mov
xchg
addr16
sbb
sbb
clc
pop
and
mov
lret
push
data16
inc
push
lcall
daa
sub
mov
decl
faddl
fcoms
repnz
sub
movsl
xor
jns
push
and
lea
call
pushf
jmp
push
sub
movl
lea
jmp
cmp
call
add
inc
insb
outsl
jae
push
gs
imul
insb
add
test
add
ror
mov
sbb
add
bswap
sub
cmp
shr
cmp
or
ror
mov
shrd
seto
add
bsr
bsf
stc
sbb
add
cmc
btc
pusha
mov
bt
call
add
push
gs
jo
outsb
dec
gs
js
add
test
out
add
mov
shr
sub
lahf
mov
stc
mov
sbb
sar
add
rol
pusha
mov
cmc
push
test
mov
pushf
jmp
lea
je
pushf
call
add
dec
outsl
arpl
inc
jb
add
add
je
push
inc
outsl
outsb
je
js
add
movsl
lret
movzbw
clc
sub
setp
shr
rcl
sbb
mov
shld
add
sar
pusha
add
sub
pushf
or
mov
pushf
lea
jg
pusha
shr
pushl
mov
clc
cmp
movl
jmp
pusha
pushf
jmp
pusha
jmp
mov
stc
sub
jmp
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
inc
gs
je
arpl
bound
arpl
test
sub
add
fsubs
dec
lea
shl
ror
clc
adc
mov
pushf
movw
jmp
pop
sahf
lods
into
or
jp
inc
push
hlt
mov
mov
fs
mov
push
cmp
mov
int
testb
out
lods
and
jle
push
jmpw
stos
xchg
push
cli
addr16
sbb
hlt
mov
ss
sbb
xor
add
sbb
push
xchg
stos
mov
jl
add
fs
je
pushf
pushl
pushf
mov
lea
jmp
add
push
dec
inc
imul
je
outsl
outsb
inc
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
dec
inc
push
gs
outsl
insl
jo
gs
inc
jb
insl
gs
je
jb
add
jne
decl
and
movb
movb
pushf
pushl
ret
mov
das
lods
in
jno
in
test
jo
jnp
insb
shll
push
ret
les
mov
shll
mov
fdivrl
in
gs
int3
std
mov
loopne
in
sub
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
stos
mov
pusha
pushf
push
lea
jmp
add
inc
gs
inc
add
sub
orb
nop
hlt
call
push
sub
sbb
scas
ds
jg
dec
adc
jl
movsl
cmp
push
pushf
pop
movsb
cmp
and
popf
sbb
or
loopne
push
shl
or
je
mov
insb
aad
lock
jle
inc
pushf
sub
inc
popf
cmp
xor
sub
and
sbb
lcall
cs
popf
cmc
aad
lock
mov
pop
mov
popf
lods
xlat
int
dec
aam
int3
inc
lds
mov
sbb
adc
xchg
test
fisttpll
int3
or
stc
xchg
push
adc
hlt
push
sub
lea
lret
jl
ret
mov
je
lods
sbb
movsl
popf
popf
aad
cli
jge
test
jge
mov
cmp
int
xor
mov
mulb
fcoml
int3
pop
ret
and
push
jb
enter
lds
mov
mov
push
xchg
adc
int
pop
lock
sbb
in
fldt
cmp
mov
mov
mov
add
sahf
and
cmp
lods
sbb
mov
add
movsl
sarb
insl
push
sbb
or
and
scas
sub
pop
das
mov
mov
or
push
cli
loopne
jecxz
sub
sbb
fldenv
xchg
push
divb
and
jnp
cwtl
xchg
sub
mov
cwtl
adc
fcoms
and
jle
inc
sub
dec
lret
and
dec
sarl
bound
fadd
lret
in
dec
ret
sbbl
jo
sub
test
lods
cmpsl
cli
rcrb
jge
push
jl
es
push
adc
test
xchg
jle
jecxz
sarb
push
add
mov
pusha
fldenv
pop
pop
push
test
cmp
dec
stc
add
jno
mov
sbb
sbb
addb
inc
mov
xor
in
inc
inc
sub
pop
sbb
cltd
call
push
jl
adc
jl
fdivl
cmp
pushf
std
or
pop
pop
adcb
hlt
cld
push
xor
fucom
push
aam
push
mov
adc
xchg
mov
xchg
adc
into
loopne
imul
dec
test
xlat
ds
mov
adcb
cli
notl
cmp
pop
in
in
movsb
dec
cs
fwait
int3
rcrl
mov
dec
fmul
mov
and
icebp
jmp
adc
inc
adc
repnz
xor
xor
jbe
lret
shl
sbb
pop
es
xchg
mov
adc
fucomp
push
movsl
sbb
sbbb
push
clc
and
dec
mov
int3
adc
sub
faddl
sub
dec
adc
push
ss
cmp
inc
xor
gs
pop
cmc
jge
and
adc
jp
adc
xchg
hlt
sub
dec
rcrl
std
jne
dec
movsb
inc
pop
es
bound
movsb
stos
test
enter
and
add
das
clc
add
std
fldl
test
xchg
sub
into
mov
and
jecxz
js
sub
addl
fs
xchg
adc
xor
adc
std
jo
sub
xchg
inc
push
bnd
and
jmp
pop
daa
or
adc
setp
adc
xor
cmpsb
lea
daa
mov
xchg
and
cmc
jp
ss
or
sbb
test
push
push
or
mov
inc
xor
mov
lods
gs
cmpsb
call
in
push
jbe
and
add
pop
sti
push
push
dec
cmp
xchg
adc
nop
and
mov
sub
les
mov
xor
lods
adc
hlt
hlt
push
cmp
push
mov
push
sub
cmp
sahf
daa
rorl
pushf
mov
inc
jnp
adc
jp
inc
mov
adc
push
sbb
cmp
xor
adc
out
fistpll
fnsave
cmp
push
sub
fcomps
mov
cmp
push
cmove
testb
mov
in
adc
leave
cs
je
mov
mov
sub
inc
add
je
xor
push
and
cmp
mov
in
stc
or
bnd
and
bound
movsl
pop
jge
stos
daa
add
les
dec
pop
ret
hlt
dec
cmp
xchg
insl
mov
jle
xchg
lcall
xchg
xor
icebp
push
test
push
jecxz
add
popa
sub
daa
pmulhw
ds
mov
dec
pop
push
mov
pop
sub
lcall
or
mov
push
nop
ss
pop
adc
push
dec
jns
cld
fcoml
sub
movsl
vmovlpd
xor
adc
jge
jo
pop
sub
lea
adc
mov
and
ficomps
mov
push
sub
ss
push
test
dec
dec
sarb
dec
popa
cmp
xchg
fbld
cmp
push
jecxz
dec
push
mov
repz
sub
dec
or
mov
push
dec
dec
das
lods
fnsave
flds
test
test
mov
push
xor
jae
ja
xor
sbb
std
scas
or
xor
divb
aam
cmp
push
jo
cmp
or
neg
rcl
inc
ss
mov
and
nop
ret
ret
mov
lds
mov
xor
jg
push
or
cmp
sbb
mov
lods
cmpsl
sbb
cmp
fs
ljmp
negb
aaa
pushf
sbb
dec
xor
push
ja
or
adc
and
sub
xchg
xor
add
cmp
fucom
pop
xchg
adc
sahf
xchg
testb
adc
adc
inc
push
mov
sub
or
dec
fildll
pop
adc
and
nop
setg
inc
popw
sbb
and
push
int3
gs
adc
aam
arpl
mov
or
cmp
ss
in
xchg
repz
mov
and
sub
dec
adc
mov
xor
dec
or
nop
iret
scas
push
adc
hlt
mov
sub
and
sbb
aam
bound
jb
cs
xchg
or
dec
mov
testl
bound
dec
sbb
frstor
and
adc
and
movsb
jb
inc
adc
ficompl
rolb
or
divb
mov
lret
mov
adc
xor
push
cmpsb
cmp
xchg
jg
pop
adc
aaa
mov
sub
scas
push
or
sub
notl
xor
leave
push
notb
test
mov
ss
xor
arpl
cwtl
mov
pop
outsl
in
pop
out
ret
int
aam
fwait
rcrb
cmp
pop
repnz
into
xor
lods
fldl
jbe
xor
xor
std
adcl
mov
push
adc
adc
fcomp
lods
jp
pop
cmpsb
mov
dec
xchg
cmpsb
add
cmp
sub
push
es
les
pop
ret
inc
jecxz
je
xchg
mov
ror
fs
or
loope
xor
jb
cmpsl
mov
mov
or
pop
push
xlat
pop
inc
push
sbb
bound
xor
popf
adc
ss
sub
sbb
fwait
sbb
sub
pop
scas
sub
aad
inc
test
pop
push
fisttpll
jecxz
int
fdivs
sub
sbb
and
mov
sbb
movsb
pop
rorb
lcall
pop
hlt
push
dec
mov
fucomp
jb
cmp
cs
out
adcb
ljmp
mov
ds
push
or
int3
cmp
out
fstl
sub
xchg
arpl
adc
mov
jae
ror
movsl
daa
in
loopne
jae
test
push
pop
sahf
and
pusha
push
filds
std
adc
cmp
adc
mov
sbb
clc
mov
mov
push
mov
nop
xchg
ficomps
int3
sub
sub
sbb
mov
fstpl
cmp
hlt
cli
fucom
cmpsb
sarb
lahf
es
lock
or
mov
imulb
sbb
fistps
pushf
push
pop
pop
and
pop
pop
fwait
sub
sub
xor
push
jbe
pop
fs
push
jmp
nop
jecxz
push
notl
lahf
int
fwait
adc
xchg
push
mov
sub
xor
fnsave
icebp
push
and
xchg
cmpsl
addr16
ds
sub
aaa
mov
test
and
fldl
fistl
push
or
and
mov
add
mov
movsl
dec
jne
outsb
cmovle
dec
icebp
sub
xchg
sbb
inc
fdivs
andl
sbb
sub
xor
pop
lods
hlt
xor
imul
push
mov
pusha
dec
es
pop
add
push
mov
and
mov
and
cmpsb
sub
test
jns
mov
test
inc
and
push
xor
xor
dec
mov
inc
push
fbld
or
lods
adc
inc
inc
sbb
push
jo
push
jne
mov
mov
and
jp
jbe,pn
mov
jo
mov
scas
xor
int
aaa
cmovp
fdivr
push
xlat
cmp
std
push
sbb
dec
lock
aas
shl
push
dec
inc
sbb
shrb
decl
stc
xchg
adc
mov
xchg
push
push
outsb
fcomip
and
fs
inc
xchg
push
lods
insb
mov
hlt
xchg
les
out
inc
sahf
lods
sbb
sbb
rcr
loope
mov
sbb
and
pushf
bound
push
dec
mov
cmp
push
rcr
std
addb
and
mov
jno
int
or
pop
fnsave
lret
push
in
loopne
ds
pop
xor
popf
stc
xchg
adc
inc
insb
push
add
push
xchg
and
sbb
push
inc
pop
and
and
pop
rcrb
cmp
dec
push
mov
xchg
push
sub
popf
push
nop
xchg
xchg
scas
das
pop
add
dec
and
lods
push
pop
sarb
sbb
and
cltd
out
fsts
fstl
aam
leave
sub
out
xchg
xchg
adc
insl
ljmp
push
filds
ja
adc
ret
fst
adc
idivb
push
lock
enter
jb
sbb
in
cmp
pop
inc
popf
sti
fbstp
ds
loope
push
std
dec
fstp
or
sub
adc
mov
orb
fildll
lahf
jne
fwait
mov
mov
push
add
fsub
ss
jb
lret
pusha
pop
adc
push
add
push
cmpsl
jp
pop
adc
popf
pop
and
mulb
rclb
fisttpll
lret
pushf
outsl
cmpsb
xor
rclb
enter
pop
sub
add
xlat
jecxz
fisttpll
mov
scas
push
sub
dec
call
xchg
test
mov
push
dec
and
mov
push
push
adc
fbld
jg
pop
jmp
xor
sub
sub
jecxz
dec
outsb
sbb
test
cs
mov
out
sub
adc
push
pop
movb
cmpsb
js
push
sub
cmp
call
ficoms
jl
push
mov
das
fstl
push
aad
dec
repz
pop
pop
dec
in
cmp
pop
sarb
sub
and
push
dec
mov
lea
ss
je
pushf
push
adc
jmp
mov
lcall
sub
adc
pop
lahf
hlt
jo
cmp
popf
lods
test
mov
movsb
push
xchg
mov
xchg
sbb
movsb
insb
mul
jecxz
fldt
in
aam
sub
lods
mull
push
push
inc
fstpl
xor
or
sbb
movsl
pop
pusha
fmuls
es
stos
mov
or
dec
mov
cmp
xor
jle
xchg
inc
cmp
fstpl
push
adc
or
fistps
dec
sub
adc
xchg
push
sarb
mov
loope
cmc
mov
cmpl
loope
mov
sbb
mov
rcrl
xchg
jl
cmp
pusha
sub
ds
and
fmuls
xchg
cmpsb
mov
xor
pop
pop
cltd
push
mov
cli
xor
hlt
push
das
cld
pusha
repz
adc
daa
insb
hlt
hlt
outsb
push
fldl
or
insl
jb
sbb
test
lock
fs
cmp
lret
jecxz
inc
mov
pop
push
inc
push
sbb
dec
push
push
jge
push
mov
sub
sub
mov
sbb
outsl
mov
cld
adc
or
mov
push
jecxz
xchg
jno
hlt
sbb
adc
inc
push
sbb
pop
xlat
lea
test
mov
je
inc
xor
inc
push
mov
jno
adc
and
mov
add
negb
testb
scas
in
pop
stc
pushf
and
hlt
inc
lods
cmp
ss
pushf
pop
lods
lahf
jge
loopne
xor
cltd
push
std
and
test
fwait
scas
mov
bswap
popf
gs
push
fwait
or
test
pop
outsb
call
mov
xor
xlat
inc
jl
jne
inc
xchg
inc
test
shl
sbb
enter
hlt
js
sbb
andb
insb
mov
icebp
pushf
add
repnz
sbb
adc
stc
inc
sub
jl
sub
or
and
cli
jecxz
sub
sub
cmpsl
or
fsubs
jbe
arpl
dec
addr16
lret
outsb
ret
ficomps
sbb
sub
adc
and
shll
mov
mov
outsb
lods
pop
xor
ror
int3
xchg
mov
out
add
sbb
cmp
dec
xor
dec
push
cltd
adc
xchg
sbb
mov
out
and
push
jg
sub
push
insl
dec
rorl
inc
dec
sbb
stc
adc
and
lods
daa
in
movsl
lods
aam
in
lods
cmp
mov
dec
cwtl
push
adc
ja
sub
data16
and
lret
lcall
mov
insb
cs
pop
aam
pushf
push
xchg
xchg
movsb
popf
dec
jecxz
stos
data16
inc
push
jle
sbb
adc
push
lea
mov
cmpsl
hlt
push
sub
aad
add
mov
dec
ret
sbb
inc
aas
fnstenv
sub
hlt
lret
adc
xor
and
cs
mov
lods
aas
xchg
and
dec
mov
mov
hlt
inc
push
mov
cmpsb
pop
xor
push
repz
rolb
pop
fists
adc
add
add
test
and
daa
jge
rorl
push
xor
test
jae
enter
fstl
hlt
sub
sub
and
nop
jg
insb
adc
mov
mov
fs
jecxz
push
push
sahf
bound
cwtl
xchg
xchg
call
cmp
sbb
dec
sub
mov
cwtl
xchg
xor
mov
je
or
or
push
mov
popf
push
and
add
popf
inc
and
lods
xchg
sub
cmc
xor
or
dec
test
adc
inc
jo
push
aaa
dec
arpl
std
jnp
adcl
pusha
fildl
or
data16
adc
pop
lret
dec
adc
lahf
sub
sub
push
jp
clc
addb
leave
push
push
fstpl
adc
fwait
and
sbb
cld
mov
or
mov
sub
sbb
pushf
or
mov
fcompl
add
movsl
test
test
dec
adc
mov
sub
sub
mov
subb
cmc
pop
sub
mov
push
xor
mov
les
sub
sub
mov
test
adc
jle
icebp
xchg
sbb
push
setbe
add
dec
add
bound
xchg
inc
fimuls
mov
pop
stos
or
dec
cld
add
push
xor
xchg
cmp
jmp
xchg
lahf
lcall
cmp
or
add
jns
nop
loop
pop
jle
daa
sti
in
int
dec
insb
lahf
test
sbb
mov
fistl
or
add
popa
scas
xchg
and
ds
pop
mov
dec
clc
shll
adc
and
dec
jnp
cmp
imul
add
inc
insl
fcomip
sbb
and
aam
mov
sti
jecxz
iret
mov
rclb
sbb
mov
cwtl
fwait
das
sub
imul
and
pslld
add
lahf
pushf
cmpsb
aad
xor
xorb
out
xlat
jle
xchg
add
and
rcrb
dec
adc
into
sti
test
pop
incl
ret
repz
mov
stc
movl
dec
and
mov
int3
xchg
push
imul
mov
adc
mov
test
mov
mov
and
in
adc
std
sbb
inc
rorl
rcl
push
push
loope
mov
push
hlt
sbb
push
pop
pop
push
sub
sub
inc
sbb
std
daa
flds
in
loopne
fcompl
dec
lret
fstpl
call
lods
mov
fcmovb
data16
insb
insb
pop
dec
fwait
xchg
call
subl
dec
outsb
and
fisttpll
dec
mov
cmp
pop
ljmp
subb
lea
and
mov
and
and
stos
dec
cwtl
mov
add
lock
into
call
out
in
push
mov
in
movsb
add
repnz
fucom
dec
not
push
ret
roll
xchg
cmpb
pop
jl,pn
std
in
mov
outsb
lahf
and
mov
pusha
xchg
pop
cmpsl
adc
repnz
sarb
test
lods
inc
les
ret
pop
add
jb
xchg
lea
hlt
sbb
mov
ds
icebp
divb
sub
sbb
arpl
jo
add
outsl
in
rcrl
jno
loop
xor
push
aad
pop
jecxz
cmp
mov
scas
fists
sahf
repz
mov
lods
pop
shll
sbb
push
scas
adc
or
inc
jecxz
jle
sbb
push
and
xchg
xor
adc
int
xor
insb
je
dec
inc
sahf
test
cmp
fildl
fisubrl
sbb
xor
je
add
cmp
fnsave
push
pop
mov
xchg
xchg
arpl
es
adc
mov
pop
insl
push
cwtl
mov
cmp
adc
or
lods
push
push
sub
mov
mov
imul
mov
stc
mov
lea
sbb
lcall
jle
xor
mov
div
das
pmulhw
es
adc
mov
jo
push
xchg
cmpl
test
lods
call
mov
enter
inc
and
push
scas
mov
sub
outsb
test
pop
push
sub
and
ds
ficomps
fwait
mov
push
inc
and
mov
rclb
push
cmp
and
hlt
sub
enter
loop
pop
pop
adc
insb
in
or
pushf
std
movsl
push
and
aad
clc
pop
lea
push
jne
dec
xor
xchg
clc
loopne,pn
cmp
out
or
xor
out
inc
insb
jb
into
lods
shlb
ja
in
mov
data16
cmp
adc
mov
jno
aaa
lret
add
and
in
and
and
imulb
sub
cld
loopne
push
push
mov
cmp
inc
jns
inc
stos
loop
push
enter
mov
mov
xchg
shll
ret
outsb
dec
sub
jae
pop
jns
popf
test
sub
mov
push
call
mov
xchg
inc
and
call
scas
stos
ss
into
sahf
sbb
adc
ds
xor
xor
or
or
add
jmp
hlt
jp
rorl
xchg
imul
pop
inc
push
out
mov
push
mov
cmp
mov
and
dec
arpl
movsb
jo
sbb
or
fs
xchg
pushf
aad
iret
xchg
bound
xor
cmp
scas
inc
sbb
fcoml
mov
lods
cmp
push
mov
dec
arpl
fcomps
sbb
ljmp
inc
int
mov
movsb
xor
rcr
ljmp
nop
sbb
sub
fbld
arpl
sbb
insb
mov
dec
jae
inc
nop
iret
jl
or
shl
sbb
sbb
pusha
scas
ret
jl
adc
sarl
add
mov
mov
xchg
sbb
jge
sub
outsb
xchg
insb
fwait
cmp
test
and
and
int3
adc
pop
dec
cmpsb
orl
sbb
dec
add
jge
out
insl
mov
sub
inc
xor
cs
repnz
hlt
imulb
js
out
xor
fnstsw
push
rcll
in
das
movsl
je
sbb
push
xor
xor
adc
or
pusha
sub
dec
ss
mov
sbbl
jnp
xchg
out
push
cmp
js
insb
std
mov
lods
cmp
xchg
jl
xor
push
push
jecxz
add
sbb
push
or
insl
popf
inc
pusha
dec
lahf
xchg
add
stos
fimull
inc
fwait
mov
fwait
xor
rcrl
xchg
mov
xchg
fnsave
add
xchg
adc
jns
in
pop
adc
jbe
mov
out
pop
dec
mov
mov
jb
les
andb
xchg
cmp
inc
inc
add
add
or
in
xchg
push
dec
outsl
inc
sbb
adc
and
jge
sub
adc
fistpll
mov
add
cltd
xchg
cmc
dec
push
and
mov
ljmp
cmc
push
ret
dec
push
dec
dec
and
pop
xchg
inc
cmpsb
xor
testb
push
add
adc
arpl
dec
jle
div
inc
push
pop
imul
insb
aam
aam
lret
mov
adc
inc
lods
je
pop
ret
or
xchg
leave
adc
sahf
inc
shrb
adc
jecxz
fists
arpl
and
and
sbb
jl
and
and
enter
lods
xor
or
das
xchg
inc
xor
or
int3
outsl
push
add
lods
cs
sbb
pop
pop
fwait
push
sub
cmp
push
push
jl
mov
test
pop
mov
mov
fstl
sti
cmp
std
movsb
mov
and
and
pop
std
push
dec
rcr
insl
nop
adc
jecxz
lret
lods
pop
gs
sbb
pop
aam
test
sbb
pushf
fists
outsl
sub
xchg
push
clc
cs
xchg
mov
lods
xchg
std
lea
and
cwtl
addl
mov
dec
adc
enter
and
adc
mov
lods
nop
cmp
adc
adc
movsb
imul
or
inc
mov
dec
xor
cmc
push
repz
push
rcrb
push
xchg
insl
cmp
push
cmp
scas
mov
sub
jge
mov
push
es
scas
call
or
fnsave
mov
sub
fcoml
ds
rclb
divb
movsb
les
mov
out
adc
ret
es
cmpsl
sbbl
mov
clc
cmp
lods
mov
jnp
or
mov
imul
mov
sub
arpl
pop
jo
std
fcoml
js
adc
add
int3
test
pop
enter
or
mov
inc
mov
dec
mov
mov
hlt
and
dec
jnp
cmp
notb
cmp
push
fisttpll
cmpsl
adc
push
xchg
push
outsb
and
idivl
in
loope
test
ss
test
loopne
push
stos
pop
fisttpll
or
inc
mov
fmull
xor
push
fldl
push
int
repnz
sahf
adc
mov
xchg
inc
fwait
pusha
pop
dec
mov
in
fmull
mov
mov
push
add
aad
cmp
and
mov
fwait
nop
adc
pop
add
xor
les
xchg
mov
inc
int
nop
push
jns
mov
xchg
mov
cmp
add
js
adc
call
imul
mov
xor
in
lea
push
lods
adc
mov
punpckldq
fcomps
js
sbb
pop
push
std
lahf
jb
imul
xchg
or
imul
fwait
into
call
in
fldl
mov
xor
sub
xchg
cmp
xor
aaa
xchg
out
push
cs
mov
xchg
mov
adc
adc
std
and
push
std
and
call
std
mov
mov
push
popf
mov
das
push
in
mov
jecxz
mov
ds
dec
mov
sub
pushf
out
pop
sbb
inc
in
insb
into
pop
adc
dec
ljmp
add
jg
sbb
cmp
outsb
lahf
mov
mov
and
ds
and
or
adc
rcr
hlt
push
sbb
fstl
rcrb
in
bound
fadds
ret
es
sub
sbb
and
adc
in
test
and
sub
pop
mov
cld
jg
scas
mov
fists
sbb
and
push
out
xchg
sub
mov
adc
jle,pn
add
adc
xor
out
jecxz
popa
cltd
mov
pop
je
rorb
xor
in
mov
clc
jg
push
add
adc
mov
sbb
xor
and
push
pop
jecxz
cmc
push
xchg
into
sbb
mov
les
sbb
pop
sbb
sbb
mov
jle
push
test
adc
jbe
push
dec
sbb
mov
adc
mov
mov
pushf
or
stos
cmp
out
dec
pop
mov
sub
mov
pop
outsb
adc
add
and
sbb
sbb
rorl
pop
dec
cmp
je
notb
int
in
fidivrs
out
cli
movsl
sbb
in
jp
adc
jecxz
ret
cmpsl
adc
and
inc
and
mov
mov
mov
cld
aaa
and
adc
out
sbb
shlb
mov
int
sub
dec
xor
push
adc
add
mov
call
cli
adc
push
xchg
mov
loope
lcall
mov
mov
fwait
xchg
mov
rorb
push
mov
cmp
sub
psrlq
movsb
in
push
sbb
repnz
push
jecxz
imul
sbb
rorb
in
add
push
pop
adcl
clc
adc
jge
pop
test
jl
inc
sbb
pop
add
lret
sahf
rcll
rorb
loop
xor
test
sbb
ret
std
fs
jnp
inc
test
in
stos
xchg
data16
add
dec
pop
mov
xor
ds
orl
divb
mov
scas
xlat
outsb
push
shll
and
push
adc
mov
or
push
push
mov
test
pusha
adc
pop
pop
or
pushf
out
sar
adc
daa
adc
pop
pop
xor
pop
xor
pop
push
pop
pop
dec
add
mov
and
mov
xor
lcall
mov
fisttps
notb
mov
aad
ss
xor
jmp
loope
mov
aam
popa
or
dec
xor
outsb
inc
add
and
mov
sbb
addr16
pop
mov
sub
sarb
xchg
dec
mov
xor
lea
dec
cmp
inc
or
adc
std
push
xor
data16
rcrb
insb
cmp
fstpt
and
push
cltd
int3
jnp
pop
sub
add
jo
xlat
xchg
insl
jle
cmp
nop
fstpl
inc
insl
jg
lcall
jge
jbe
pop
shl
sub
frstor
outsl
and
mov
lods
popa
pop
mov
adc
and
and
sub
push
das
scas
daa
out
pop
dec
lock
pop
in
ja
mov
pop
pushf
test
or
jl
sub
push
hlt
sbb
sbb
xchg
insl
out
fstl
ds
and
mov
data16
lock
sub
sub
and
sub
sub
sub
daa
sub
cltd
push
cs
sbb
xchg
inc
push
test
std
aaa
enter
mov
seto
jg
sbb
jecxz
jbe
sti
push
call
adc
sti
adc
push
repz
or
push
les
inc
movsb
mov
scas
xor
shrb
rol
jecxz
nop
xchg
jp
iret
mov
in
push
bound
xchg
adc
lods
add
inc
dec
test
cs
sbb
push
lods
pop
push
cli
push
lods
push
xor
mov
repnz
cld
xchg
test
push
daa
push
add
push
dec
lret
stos
std
scas
nopl
pop
push
ret
scas
xor
outsb
hlt
test
cmp
and
or
and
xchg
push
ficompl
xor
jbe
and
push
rcrl
mov
push
movsl
cmp
mov
and
insb
pop
xor
xor
add
jecxz
pushf
sbb
jb
push
pushf
sub
ret
xchg
out
cmp
push
push
cmp
push
out
push
push
push
into
and
outsl
outsb
adc
fs
ret
sbb
mov
push
mov
cmpsb
sub
xor
mov
adc
frstor
stos
push
jne
in
mov
and
sti
aam
push
mov
into
sbb
sbb
inc
aad
mov
jbe
lea
cmpsb
imul
je
sub
test
pushf
add
adc
ss
push
stos
aas
and
inc
pop
xor
and
shlb
adc
jp
loope
jecxz
cmp
pushl
jb
xchg
xchg
lcall
hlt
jno
adc
xchg
push
fmuls
xor
in
shlb
imul
xor
adc
nop
pop
mov
and
cld
xor
scas
push
mov
lahf
shlb
pop
xor
out
push
inc
lahf
negb
push
mov
hlt
ret
int3
mov
rcl
pop
mov
cltd
stos
push
je
inc
mov
xchg
rdmsr
cmpsl
jg
ret
sub
mov
mov
jmp
and
push
pop
dec
add
outsl
test
imul
push
pop
test
pop
add
mov
test
in
fists
or
out
pop
loop
jp
xchg
jb
ja
data16
xor
xor
and
pop
insb
fucomip
xchg
xchg
or
into
mov
mov
insl
mov
push
dec
xchg
jecxz
dec
bound
jae
adc
hlt
pop
adc
fcmovnb
xor
test
and
rcll
adc
push
inc
outsb
mov
lods
insl
xchg
sbb
and
aam
sub
sub
sbb
sub
pop
inc
or
fstpt
dec
inc
adc
insb
idivl
es
xchg
mov
mov
cltd
lock
lcall
add
adc
insb
or
and
arpl
xor
push
and
cmc
lods
adc
xor
sbb
mov
jb
ret
sbb
jmp
and
ja
and
stos
mov
mov
pusha
sbb
jnp
daa
and
shrb
js
xchg
sahf
xchg
adc
in
sbb
out
cmp
jmp
fstl
arpl
movsb
cmp
mov
xor
push
notb
inc
sbb
insb
sub
lea
insl
xorb
jb
aaa
jmp
mov
stos
icebp
lods
das
shlb
mov
push
cmp
push
add
sbb
movsl
data16
test
fmul
cmp
mov
xchg
push
jno
sbb
xchg
add
or
inc
sbb
sbb
sbb
int
and
pusha
dec
and
mov
mov
pop
and
jns
cs
inc
and
adc
int
mov
lahf
and
xchg
aas
push
test
iret
pushf
stc
inc
and
out
test
lds
xlat
iret
movb
outsl
lret
sbb
push
loopne
xor
add
cli
int
pop
in
inc
adc
xchg
sbb
cmp
pop
xchg
and
das
subb
xchg
int
mov
jno
leave
gs
jecxz
enter
loope
sub
mov
in
dec
add
js
sub
pusha
mov
jb
lahf
pop
loopne
movsl
es
push
shrb
pop
cmp
mov
push
sbb
jmp
jnp
pop
andb
sub
lods
xchg
js
shll
pop
cmp
std
push
pop
or
mov
pushf
mov
add
in
and
cltd
cmp
dec
stos
neg
lahf
mov
push
xlat
inc
nop
mov
nop
cmpsl
adc
loopne
push
mov
jecxz
fnstenv
std
negb
pop
xor
add
mov
xor
sti
orl
xlat
xor
mov
addr16
cmp
gs
mov
adc
sub
lahf
fstl
inc
mov
mov
xchg
std
pop
jbe
adc
dec
adc
fcoml
pop
mov
insb
negl
icebp
sub
mov
ljmp
and
cld
fcomps
enter
hlt
fs
push
dec
hlt
inc
enter
sbb
push
mov
mov
inc
xor
enter
arpl
sub
pop
add
or
aas
dec
jo
insl
mov
stos
pop
std
xor
popa
xor
push
fsub
sahf
pop
jg
add
push
lock
std
fmul
push
dec
mov
pop
xchg
mov
aas
outsl
cli
lods
sbb
jb
xor
mull
rcr
into
fists
mov
or
sbb
push
repz
scas
es
ss
or
fstpl
fsubrs
mov
sti
pop
daa
xchg
and
scas
xor
mov
in
mov
xchg
push
dec
fsubl
fstl
aam
dec
jle
cmp
xlat
and
adc
pop
sbb
sub
xor
lods
mov
loopne
fwait
adc
or
and
fwait
hlt
adc
cltd
pop
fistps
gs
mov
adc
xchg
adc
lods
jge
bound
pushf
sbb
xor
fucomp
push
mov
in
mov
pop
shl
pop
xchg
nop
xor
negb
lock
jo
aam
pop
or
movsb
ljmp
fsubrl
xor
jge
int
mov
shr
test
lods
sbbl
push
stos
fdivrl
enter
mov
fucom
imul
sbb
and
test
outsl
jbe
leave
mov
mov
pop
xor
sub
aad
sub
mov
pushf
dec
fisttpll
mov
dec
xchg
faddl
and
sbb
push
mov
lods
inc
mov
xchg
data16
adc
jmp
or
lods
movsb
into
xchg
and
push
test
adc
test
dec
jb
or
mov
lret
repz
fstl
jmp
xchg
jns
push
mov
mov
mov
in
xor
int
bound
lods
xchg
mov
call
jg
test
push
cmpsb
loopne
hlt
aam
cmp
jl
repz
sub
and
xchg
dec
js
lcall
mov
ljmp
mov
rorb
shl
ss
push
mov
dec
push
call
das
call
cmp
jle
sbb
movsb
mov
std
push
and
jnp
pop
sbb
filds
sti
xlat
inc
sti
inc
into
jle
fwait
mov
lea
mov
xor
stos
fsubr
lods
cmpsb
pop
jbe
mov
scas
mov
cmpsb
sbb
jle
mulb
jb
xchg
jecxz
dec
pop
xor
add
mov
push
negb
lahf
call
data16
cmp
mov
lea
pushf
adc
ds
mov
adc
sub
testb
cmpsl
scas
pop
xchg
out
data16
hlt
sbb
mov
inc
fsts
enter
ja
mov
sbb
cmp
imul
or
cmp
xchg
aas
adc
aas
lcall
sbb
dec
xchg
popf
or
pop
cltd
jno
loope
lods
jp
ljmp
lret
cmpb
jbe
hlt
add
adc
sub
sbb
daa
out
divl
inc
aas
xchg
outsl
xor
in
push
jg
das
nop
xor
push
xor
rcrl
mov
xor
fldl
out
cs
rcrl
fisttps
leave
test
imulb
jne
cmp
push
jge
insl
sbb
jno
xor
cs
push
pop
or
aam
insl
push
push
std
and
adc
sub
sub
xchg
dec
adc
jp
cmc
insl
enter
lods
lds
jg
push
fnstsw
movl
or
stos
add
movsb
and
xor
xchg
aad
dec
fisttpll
test
cmp
adc
push
sarl
push
hlt
les
loop
mov
std
adc
and
add
std
jecxz
jle
sbb
decb
ss
out
fcoms
imul
xor
mov
cld
pusha
jns
pop
hlt
sbb
in
popf
in
push
pop
mov
jge
cmpb
cwtl
hlt
push
js
xchg
dec
shll
jmp
xor
dec
jecxz
lods
dec
pusha
subb
inc
les
push
xor
faddl
add
jo
call
mov
pop
inc
push
cs
mov
xor
push
in
cmp
and
xchg
ror
sbb
inc
data16
fisttpll
lahf
adcl
aad
insb
fists
mov
mov
iret
ds
xor
pop
fmull
scas
and
jl
pop
scas
adc
in
adc
in
xchg
aas
fdivrl
in
lcall
lock
lods
inc
movsl
sub
inc
test
lcall
pop
jle
shlb
lods
adc
and
inc
loope
or
leave
out
xchg
xor
cmp
lods
dec
pop
insb
mov
sbb
cmp
aad
lock
sub
hlt
popf
in
aad
lock
inc
int3
sub
mov
lods
aad
lock
jle
inc
mov
lcall
insb
aad
lock
jle
inc
dec
sub
xor
sub
and
sbb
adc
xchg
jl
xchg
and
das
in
popf
in
aad
int
lds
lcall
movsl
aad
lock
add
test
inc
jne
lcall
push
aad
lock
jle
inc
xor
sbb
aad
lock
jle
inc
in
sub
aam
int3
aad
lock
sub
xchg
popf
mov
test
jl
je
insb
sub
push
popf
inc
aad
lock
sub
and
lcall
push
xchg
sbb
in
jle
inc
lcall
mov
jle
inc
popf
sub
test
das
jne
insl
aad
lock
jle
inc
dec
sub
xor
lock
sbb
out
in
inc
sub
mov
in
sbb
sti
sbb
out
das
icebp
popf
repz
lock
inc
sti
sub
add
or
inc
or
inc
iret
sub
aad
xlat
aad
lock
inc
fildll
lcall
out
jmp
inc
scas
sub
mov
mov
mov
inc
mov
ret
das
lds
lret
jle
inc
vprotw
das
xchg
popf
xchg
aad
lock
jle
inc
lahf
sub
movsl
popf
cmpsl
aad
lock
jle
inc
outsl
sub
jne
ja
out
popf
jnp
jge
jg
addl
das
mov
cs
cmp
adc
sbb
mov
stos
sub
and
dec
sub
add
and
jo
sahf
xor
pop
addb
xchg
cld
rcl
in
hlt
adc
ljmp
lods
dec
push
sub
push
fcoml
jl
pushf
ss
into
in
ret
je
xchg
sbb
rclb
stos
div
adc
lods
or
sub
dec
dec
and
test
enter
cli
pop
fmuls
hlt
adcb
in
mov
cs
adc
xor
inc
in
dec
int3
jno
inc
aad
aaa
sub
sub
test
xchg
fdivrp
nop
inc
mov
les
add
sbb
inc
aad
sbb
imul
in
cli
xchg
hlt
adc
or
mov
cli
pop
and
cmpsb
adc
enter
fstpt
dec
jne
clc
ds
stos
in
sub
jne
pop
aam
jnp
cld
jne
and
mov
lock
in
into
sub
jno
inc
loope
push
mov
aam
mov
popf
test
cmp
inc
lods
ljmp
fists
dec
and
insb
jmp
les
in
hlt
imul
hlt
orb
subl
les
das
movsl
mov
sub
mov
sbb
pop
in
lock
mov
fs
pop
lods
lock
and
adc
sub
sbb
mov
into
shl
aas
seto
aad
push
push
in
xchg
hlt
adc
in
pmulhuw
popf
nop
mov
push
dec
and
xchg
push
xchg
adc
aam
popf
std
enter
cli
sub
xor
xacquire
sub
dec
mov
cmc
jge
mov
push
insl
ljmp
icebp
xor
pop
into
fadd
xchg
mov
and
adc
je
pop
mov
sbb
repnz
cwtl
in
inc
xor
push
sbb
adc
inc
push
push
push
mov
cmp
push
cmpsb
ucomiss
aam
fnstsw
cmp
and
int3
sbb
idivb
push
insl
sub
xor
fstpl
fwait
or
sbb
xchg
jno
sub
mov
flds
cmp
lock
sbb
loope
sarb
add
insl
insb
cmc
mov
adc
mov
aas
insb
scas
cmp
pushf
push
or
in
test
inc
push
jle
mov
pop
and
and
dec
dec
cltd
cwtl
push
or
test
mov
dec
in
mov
hlt
test
jns
sub
xor
sub
fstl
aam
clc
ret
bound
fcoml
mov
lret
in
sbb
sarb
sub
add
adc
sub
and
insb
test
jge
xor
insb
sbb
mov
sbb
int
repnz
gs
xchg
enter
xor
mov
sub
stos
xchg
mov
mov
pop
mov
push
setne
xchg
adcl
data16
and
cs
and
inc
pop
insl
cli
inc
lds
adc
mov
mov
adc
pop
and
mov
or
mov
xchg
fucom
ret
push
outsb
mov
popf
adc
stos
repnz
or
fwait
leave
add
mov
dec
stos
inc
pop
gs
in
mov
jg
or
sbb
les
mov
cld
sub
in
mov
xchg
cmc
std
pop
push
sbbb
push
sti
out
call
mov
int
cmc
mov
jl
testl
pop
push
add
inc
mov
ja
push
xchg
sti
adc
pop
cmp
sbb
popf
pop
mov
and
fnsave
xchg
fnstsw
ljmp
mov
cmp
mov
pop
or
sti
loopne
pop
adcl
adc
push
mov
gs
and
enter
mov
lea
fsubrl
je
mov
pop
std
dec
and
ljmp
sbb
and
xchg
loope
pop
xor
hlt
ret
xchg
enter
ja
add
sbb
scas
mov
test
dec
pop
mov
std
adc
clc
push
adcl
xor
inc
mov
mov
fs
je
mov
leave
or
negb
sbb
mov
std
adc
push
ja
jmp
fldl
rcr
push
xchg
pop
das
sub
es
pusha
icebp
jle
mov
and
inc
or
pop
insb
lods
cld
data16
mov
adc
xchg
and
sub
cmp
fucomip
stos
insl
mov
xor
xchg
fadds
std
sub
cmc
mov
test
in
pop
es
jl
gs
test
xor
mov
pop
std
bound
sbb
push
icebp
pop
cmp
enter
sbb
push
lds
or
pop
or
push
and
gs
xor
pushf
andl
push
fs
jge
shlb
testb
mov
aaa
inc
shlb
pushf
faddl
repnz
or
and
andb
and
pop
push
sbb
stos
pop
sub
je
pop
in
push
repz
xchg
mov
lcall
push
mov
int
cli
aad
or
cmp
adc
jns
push
xchg
pop
or
xor
mov
adc
xor
insl
sub
and
add
inc
loope
popa
pop
inc
mov
enter
out
mov
adc
dec
mulb
xorb
inc
mov
push
push
fadd
xchg
push
ficomps
xor
push
cli
lret
shrl
ret
push
or
jp
or
xorl
cmpsb
mov
push
mov
int3
jnp
lds
add
aaa
insb
jle
adc
in
stc
insb
test
mov
arpl
add
and
mov
popf
in
jns
in
nop
sub
js
daa
das
int3
jno
push
filds
lret
pushl
xor
iret
ss
sub
sbb
adc
jno
xchg
xchg
loop
mov
dec
push
adc
mov
mov
push
mov
popf
jecxz
xchg
adcl
in
adc
push
pop
dec
dec
push
push
cli
out
mov
add
icebp
or
push
inc
push
mov
jno
jb
andb
and
adc
dec
cltd
test
roll
pop
out
lret
lods
push
lahf
enter
je
xchg
cmc
fbld
lcall
push
jnp
jecxz
test
in
jae
ret
iret
lcall
xchg
or
cwtl
push
xor
adc
test
dec
sti
cmpsb
int3
and
jae
jge
mov
data16
clc
push
adc
inc
sub
xor
faddl
adc
sti
int3
insl
jge
sub
cmp
icebp
cwtl
stos
das
push
xor
lret
popl
cmp
xor
imul
push
jae
and
cmp
shlb
int3
pop
fists
outsb
add
xchg
inc
ret
or
test
fnstsw
adc
mov
sub
sbb
mov
lret
test
test
in
xorl
dec
adc
int
push
xchg
mov
pop
dec
sub
in
cmpsb
push
daa
pop
jg
and
enter
xchg
sbb
arpl
fs
add
insb
pusha
adc
pop
jp
movsl
popw
pop
xlat
cmp
mov
pop
adc
cmp
dec
push
sub
pop
push
push
xor
cmp
sub
scas
aaa
faddl
das
fldl
inc
cmp
decl
pop
popa
sbb
std
pop
mov
push
pop
sbb
sti
shl
sbb
int3
push
sbb
lods
pop
rcll
jo
jns
das
mov
lods
orl
push
adc
dec
lahf
or
adc
ror
std
mov
xor
dec
or
jnp
sub
or
add
ss
scas
dec
add
pop
push
sbb
fwait
nop
arpl
ret
xor
loop
scas
pusha
cmovge
adc
adc
jmp
clc
and
pop
sub
adc
adc
xor
cmpsb
in
pop
push
insb
sub
data16
dec
outsb
adc
movsb
inc
sbb
xor
in
jo
mov
push
dec
mov
in
hlt
xchg
and
push
repz
jns
adc
enter
cs
insb
test
and
push
push
cmp
ret
jp
out
popa
xchg
sahf
test
xor
and
mov
mov
cmp
xor
popa
cmp
jns
mov
jbe
mov
push
decl
add
test
popa
or
sub
mov
inc
cltd
rcl
nop
daa
hlt
cmp
sar
mov
sbb
arpl
sbb
push
inc
or
dec
jge
aaa
mov
daa
and
sahf
fs
pop
jne
cmp
adc
loop
insl
xor
and
in
mov
cmpb
fmul
sahf
or
lea
subl
xor
pop
jmp
and
popf
pushf
add
repz
push
mov
sahf
hlt
sub
add
js
mov
pop
inc
arpl
dec
push
popa
sarl
mov
idiv
cmpsl
test
sti
xchg
cmp
lock
fcomps
or
dec
sub
jl
cmp
adc
inc
inc
es
mov
test
jno
pop
in
data16
outsb
inc
test
mov
mov
pop
push
addl
pusha
call
and
cmp
mov
pop
scas
inc
sti
ja
push
mov
pop
pushf
dec
pop
pop
lods
inc
push
or
pop
cwtl
jl
rorl
fidivl
jb
pop
pop
jbe
in
xor
ss
addr16
push
push
pop
dec
pop
insl
push
jge
xchg
loopne
cltd
push
cmc
stc
lahf
dec
fadd
psubw
xchg
push
jo
mov
push
es
cwtl
sbb
or
add
jns
rclb
mov
inc
cltd
xchg
out
in
dec
ret
push
sbb
lea
and
std
push
mov
adc
mov
fstpl
cmpsb
loope
ret
imul
mov
stc
pop
jge
xchg
iret
std
hlt
push
sarl
or
add
neg
daa
add
sbbl
xchg
pusha
fstpt
adc
aad
fcoms
out
insb
cmp
jo
lea
std
adc
test
stos
into
and
fs
and
std
xor
repnz
or
cltd
push
cltd
xchg
sub
stos
inc
cld
or
add
jle
out
xor
fcomps
stc
xor
mov
push
pop
ds
xor
hlt
out
push
cmp
loope
pop
jge
cmp
jmp
push
fstl
sbb
pop
fs
dec
push
scas
inc
sub
jge
hlt
adc
push
or
pop
xchg
and
adc
dec
mov
pop
xadd
jae
int
repnz
sahf
push
pop
sub
into
mov
lret
out
and
jge
pop
adc
shll
jae
bound
inc
pop
push
xor
push
es
pop
xchg
testb
push
sub
dec
les
lahf
popf
adc
mov
push
dec
jno
xchg
loope
push
daa
movsb
adc
adc
cltd
sbb
fisttpll
lods
test
xor
lods
add
sbb
push
push
push
insb
cmp
xchg
test
pop
mov
int3
mov
ret
mov
sub
hlt
mov
or
sub
xor
and
adc
ss
jecxz
xor
push
call
mov
push
loopne
adc
cmp
dec
fldl
sti
push
pop
gs
mov
cltd
ret
or
sub
cmp
lahf
pop
loop
mov
inc
adc
jge
jb
pusha
mov
test
addr16
sbb
xchg
repnz
pop
fucom
cmp
pop
popf
jecxz
jns
lods
and
enter
das
mov
xchg
pushf
jg
cmp
inc
popa
test
dec
xchg
xchg
jl
mov
cmp
lcall
int3
add
imulb
into
int
pop
inc
jno
enter
inc
aas
sti
stos
decl
sub
cwtl
hlt
sahf
int3
push
adc
and
sbb
cwtl
in
xchg
jle
mov
pusha
fst
or
out
das
xor
mov
jmp
cli
add
adc
jecxz
cli
jno
mov
jb
cmp
or
hlt
dec
and
test
arpl
ss
daa
adc
into
test
mov
hlt
bound
pop
pop
mov
movsb
aad
push
int3
push
or
push
mov
mov
inc
out
push
pop
adc
dec
lods
mov
push
into
cmp
xchg
mov
dec
clc
mov
xchg
cli
xchg
pop
jne
sbb
cmc
lret
sbb
pop
andl
or
pop
push
pop
in
in
out
outsb
pop
test
or
sbb
test
adc
clc
xor
xor
dec
leave
cmp
aam
xor
adc
mov
loopne
mov
sub
popa
aam
lock
jo
pop
pop
lods
jg
adc
sbb
in
adcl
pop
fwait
call
fs
fwait
jg
test
pop
push
cs
cmp
and
adc
xchg
push
dec
test
inc
adc
hlt
and
repz
lock
in
xor
push
push
std
dec
or
lcall
jbe
or
dec
xor
push
xchg
push
push
mov
out
push
insb
je
xchg
arpl
icebp
cmc
fnstcw
dec
push
push
adc
push
push
movsl
gs
push
and
jno
push
sbb
inc
sub
pop
adc
movb
push
ljmp
and
dec
frstor
out
push
mov
cltd
movsb
andl
mov
sbb
in
aam
pushf
int
and
jecxz
or
dec
test
test
aam
push
aam
insb
movsb
idivl
imulb
jp
clc
pushf
sahf
xor
pushf
adc
rol
xchg
xor
xchg
outsb
xchg
rorb
dec
sub
and
fisttpl
xor
insl
mov
xchg
adc
aad
ficompl
and
inc
adc
jp
adc
push
das
pop
popf
inc
push
int
push
data16
ja
jl
setne
roll
rorl
lods
xchg
and
mov
dec
push
ja
pop
testb
jmp
mov
push
lds
dec
push
test
mov
ret
inc
and
jecxz
bound
jb
fistps
jno
fstl
je
lods
rclb
cmp
push
sub
jmp
subl
push
xchg
dec
or
xor
push
cmp
sub
ret
xchg
shrl
add
adc
xor
xchg
adc
fldl
xor
inc
scas
outsl
adc
aaa
push
cmc
insl
leave
insl
aam
inc
pop
push
pop
fisubl
cltd
cltd
gs
insl
jo
push
sbb
inc
dec
xchg
jge
test
push
pusha
inc
lea
xchg
xchg
sbb
xchg
daa
mov
mov
sbb
sub
enter
jo
xor
les
pop
push
push
xor
insb
xchg
or
in
dec
std
pop
inc
std
xor
fstpl
mov
outsl
xchg
lock
lods
and
and
movsb
fnsave
sub
and
stos
or
push
add
dec
in
lds
stos
xchg
cld
mov
mov
jecxz
js
mov
dec
pop
adc
push
or
dec
inc
pusha
push
adc
mov
add
jno
mov
pop
in
push
lcall
mov
jmp
lcall
fwait
dec
sbb
cmp
jae
sub
pop
rcrb
adc
cmpsb
sbb
mov
out
pop
mov
hlt
mov
mov
or
and
sub
jg
or
insl
mov
cmp
and
daa
mov
mov
addr16
mov
rclb
mov
loope
mov
lahf
arpl
dec
std
xor
adc
mov
rcrb
cmp
imul
fbstp
shlb
or
ret
fstl
gs
mov
push
xchg
push
add
adc
push
xorb
sub
sub
and
insl
rorb
lret
push
in
imul
mov
or
es
push
dec
loope,pn
pop
in
and
lahf
cmp
add
push
gs
sub
pop
cmp
push
sub
push
or
jecxz
int3
add
cmp
test
sub
cs
fs
or
das
adc
mov
test
pop
lods
jecxz
mov
sub
enter
xor
icebp
inc
out
cmp
push
rcl
mov
sub
add
jg
and
jb
xchg
es
iret
dec
int
call
mov
movsb
cwtl
cli
jo
in
in
adc
cmc
adc
xor
mov
pushf
ljmp
into
xor
cmp
int
jne
lods
mov
mov
insb
aad
movsl
xchg
xor
filds
outsb
test
fldl
pop
adc
scas
rcr
outsl
dec
lea
and
and
imul
xor
mov
mov
test
add
dec
jp
lcall
push
jecxz
sub
sub
dec
insl
adc
push
dec
sbb
and
sbb
sub
mov
addr16
or
out
sahf
pop
and
or
or
notl
call
jne
sbb
aas
push
or
pop
test
mov
into
or
push
aaa
movsb
dec
xor
scas
pop
push
movsl
adc
repnz
jno
data16
in
les
sysret
in
fsubrl
pop
mov
sbb
adc
aad
xchg
cltd
mov
aas
xor
sahf
push
jno
push
jge
sub
sbbl
jg
fnsave
xchg
jo
jne
fstpl
pop
js
xlat
lea
pusha
push
popf
pushf
sub
stos
push
ja
mov
aam
lods
xchg
popf
sbb
test
mov
push
add
pop
jecxz
cmp
les
push
jo
outsb
xor
sbb
adc
sub
xor
and
push
mov
ds
pop
jg
fwait
mov
nop
mov
push
mov
pop
imul
sbb
cli
or
adc
loope
lock
sub
repnz
dec
xorl
mov
ret
mov
loope
call
xor
mov
dec
nop
and
xchg
shrb
lods
inc
sub
stos
imul
mov
fistl
negb
aas
movsl
sbb
loop
mulb
xchg
out
std
loope
fbld
movsb
xchg
mov
mov
lahf
or
in
enter
sub
lahf
cmp
dec
dec
and
pop
adc
shll
or
les
dec
or
pop
jae,pn
lea
pop
adc
dec
xor
in
jnp
inc
lods
dec
sbb
mov
push
test
repz
cwtl
sub
push
fucom
imul
lods
xchg
inc
and
adc
sub
push
movsb
xor
lea
in
push
fwait
adc
xor
shlb
push
jge
dec
pushl
dec
sbb
lea
imulb
cwtl
cld
push
xchg
push
pop
jecxz
sub
and
mov
outsb
jg
arpl
cmpsl
leave
add
in
mov
fmuls
int3
or
shll
movsb
add
outsb
sub
test
decl
and
pop
bswap
dec
sub
or
aam
pop
push
add
cmp
push
adc
adc
xor
mov
adc
and
jne
and
arpl
and
push
adcl
and
lahf
dec
sbb
fnsave
add
add
loop
mov
enter
xchg
cld
popw
pushf
mov
cs
or
int
pop
lret
add
adc
paddusb
push
adc
push
movsb
xor
push
push
cs
jmp
sub
xchg
pushf
and
leave
das
mov
mov
adc
cltd
testl
push
xchg
jne
sub
stc
fnsave
mov
xorb
xorl
movsl
imul
repz
mov
and
fmul
xor
add
sarl
cmp
rcll
xor
push
pop
push
fwait
inc
div
fisttps
pop
jns
jecxz
arpl
rcrl
mov
xchg
arpl
sub
adc
out
test
ret
ror
dec
cmc
add
or
ljmp
push
jnp
or
cmc
jo
adc
mov
in
xchg
and
mov
and
fistpll
imul
out
arpl
insb
push
cmpsb
loope
dec
inc
nop
sub
stc
jecxz
pop
inc
inc
jp
inc
les
sbb
lock
xchg
dec
sbb
pop
popf
arpl
or
mov
mov
and
push
push
negb
insb
test
dec
cli
sahf
sbb
fisttpll
sbb
jl
adc
push
dec
and
mov
cmp
scas
stos
outsb
sbb
fcomps
xlat
jmp
xor
jnp
pusha
outsb
insb
xor
push
jo
mov
adc
jg
fisubl
repz
insb
push
adc
pop
pop
pop
movsb
push
out
sub
xor
and
xchg
adc
mov
in
inc
push
jmp
and
fisttpll
push
andps
aaa
xchg
sbb
add
loop
das
and
daa
aaa
pop
je
adc
div
daa
pop
jb,pn
loopne
inc
jno
iret
cmp
daa
mov
adc
js
dec
fcoms
orb
push
mov
adc
js
xchg
in
insl
push
mov
sbb
dec
inc
loopne
pop
fstl
sbb
mov
or
mov
cmpsb
ss
adc
idiv
mov
mov
fiadds
fs
out
stc
out
pop
scas
cmpsl
cmc
movsl
sahf
in
sbb
xor
mov
mov
enter
fbstp
pop
pop
std
jno
sahf
mov
addl
pusha
mov
add
push
inc
and
ja
pop
sbb
sub
mov
or
sbb
subl
push
mov
xchg
loope
xchg
aad
adc
addl
pushf
jp
sub
sbb
lds
out
cld
dec
jge
sub
popf
mov
push
sbb
data16
mov
jge
dec
ljmp
outsb
addb
push
and
xor
xor
sbb
movsb
lods
sub
movsl
nop
dec
push
pop
sbb
fisttps
push
sbb
std
mov
sbb
mov
std
push
and
popf
xor
push
pop
into
cwtl
push
andl
lods
sub
cmp
dec
sub
xchg
push
je
mov
pop
push
dec
push
sub
loop
lea
rclb
gs
add
lds
push
js
aam
sub
cmc
jge
lahf
mov
jae
push
in
sub
ljmp
and
xchg
fists
addr16
sub
data16
insl
sub
and
in
sbb
aam
call
sbb
dec
aam
jle
je
adc
in
sub
movsb
fsubl
push
sbb
lods
in
push
sub
sub
dec
inc
cmp
ret
mov
std
loope
test
add
adc
lods
pop
xor
aam
cmp
gs
ror
mov
mov
add
dec
mov
pop
xchg
push
push
in
icebp
ljmp
push
xchg
jo
data16
sbb
repnz
lock
in
into
sar
xchg
cld
mov
pop
arpl
lea
ss
add
and
sahf
sbb
das
cs
push
fcoml
mov
lods
adc
push
mov
xchg
insb
cmp
dec
cs
test
xchg
jge
pop
pop
das
cs
xchg
outsb
sbb
fs
das
mov
cs
dec
fnsave
dec
push
cs
inc
outsb
mov
lods
cs
das
dec
popf
jo
lea
outsb
fbstp
xor
into
insl
xchg
aam
or
and
ds
rorb
mov
xchg
aas
cmp
cmp
sub
and
sbb
adc
or
pushf
cmc
aad
mov
pushf
test
in
pushf
lods
aad
pushf
test
fsubl
pushf
aad
int3
pushf
and
aad
pushf
or
aad
pushf
sbb
and
pushf
mov
pushf
hlt
aad
xchg
push
dec
rolb
push
inc
jo
je
cmp
and
push
popf
jo
fs
xor
xor
xor
xor
xor
xor
lcall
and
movsb
in
dec
scas
daa
xchg
sbb
mov
outsb
jge
cmp
decl
push
xor
or
jg
cli
cmp
ss
lea
bound
sbb
xor
sub
sub
xchg
sub
xchg
jno
and
adc
shlb
xchg
orl
xchg
sbbl
ss
adc
sbb
jns
and
or
dec
dec
dec
fisubrs
inc
add
and
adc
push
sbb
sbb
adc
sbb
sub
nop
shrb
insl
dec
xchg
jl
mov
fbstp
or
adc
sbb
repnz
rorl
pop
lods
std
and
or
xchg
add
out
jno
loope
shr
and
icebp
push
jmp
push
mov
push
repnz
test
and
xchg
leave
jge
cmp
iret
sub
sub
jnp
cmp
sbb
xchg
push
adc
sub
mov
xchg
add
jl
or
xor
movsb
fdivp
hlt
lods
lods
add
mov
int3
mov
mov
xchg
lock
into
aam
rcrb
mov
iret
inc
xor
aad
and
push
sbb
jecxz
mov
lds
inc
xchg
in
outsb
push
shrl
pop
xchg
idivb
decb
sbb
sub
xor
pushf
sub
cld
outsb
popf
lahf
je
mov
and
mov
xor
sbb
inc
dec
or
scas
lds
cltd
cmc
sub
adc
fucom
ljmp
or
mov
ja
cmp
aam
insl
sub
and
mov
lret
call
int3
jb
cmp
xor
dec
push
jl
mov
repz
je
jl
out
nop
inc
sbb
xchg
and
ljmp
add
and
bound
adc
fwait
daa
xor
sbb
xchg
and
outsl
adc
pop
repz
push
pop
mov
inc
and
mov
scas
lcall
adc
dec
or
cmp
cs
sbb
mov
push
icebp
pop
cmp
mov
mov
adc
push
mov
dec
adc
xor
div
movl
push
test
push
xchg
mov
cmc
out
mov
xchg
pop
sub
and
inc
data16
outsb
and
push
adc
inc
pop
push
or
movsl
gs
mov
push
pushf
mov
mov
jno
and
or
lahf
mov
push
adc
jl
int
push
push
xor
movsb
cmp
mov
insb
or
or
ficoml
and
rcrb
mov
jne
inc
pop
shll
inc
push
daa
cwtl
pusha
in
mov
popf
pushf
push
xchg
sub
adc
cmpsl
dec
xchg
ret
or
cltd
mov
fstp
stos
sbbb
icebp
mov
mov
sub
movsl
outsb
and
and
or
icebp
cmpsl
scas
mov
mov
fnsave
das
xchg
cmc
mov
jle
dec
aad
pop
add
or
adc
scas
cld
lods
sbb
lcall
cld
shl
orl
in
xchg
sahf
pop
ds
mulb
sub
push
xor
push
dec
pop
in
ret
lea
push
sub
adc
sub
mov
jle
sbb
int3
cmp
push
lock
stos
gs
sbb
dec
stos
xchg
scas
xor
jne
jnp
or
ficoms
sbbb
adc
es
pop
mov
adc
adc
and
mov
lea
cmpsl
and
loop
dec
or
mov
pop
sbb
mov
or
andb
out
dec
lods
outsb
out
xor
dec
mov
lahf
aad
mov
pop
cmpsb
loope
mov
jecxz
add
xchg
mov
sub
out
mov
or
mov
xor
das
fs
orl
pop
shl
pop
jl
jb
adc
outsb
cmp
out
movsb
dec
insb
loope
xchg
ja
inc
test
popf
popa
in
ficomps
jo
test
lcall
and
ss
outsl
stos
dec
or
pop
push
loop
mov
mov
cli
mov
push
or
and
mov
inc
add
xor
popf
mov
iret
xor
dec
pop
inc
cmp
push
cmpsl
or
subb
jb
adc
sub
xorb
cmp
cmp
lock
hlt
and
or
lahf
and
sub
dec
and
push
push
sbb
rorl
pinsrw
inc
pop
sub
cld
xor
cmp
mov
mov
mov
xor
sub
push
pop
mov
sqrtps
test
sahf
cmp
pushf
sub
or
xchg
dec
mov
xchg
pop
repnz
sti
pop
es
xor
jns
loopne
pop
mov
frstor
sub
aad
enter
insb
sub
setno
sub
test
add
mov
cvttps2pi
mov
imulb
sub
fsts
pop
pop
inc
lods
aam
mov
daa
mov
or
mov
dec
xor
pop
mov
mov
cmp
mov
push
std
adc
or
fs
addb
mov
push
data16
daa
pop
iret
push
adc
and
sub
fs
pop
icebp
and
nop
jle
scas
pop
aam
fmull
roll
cmp
mov
movsl
cmp
sbb
repnz
enter
pop
in
mov
add
nop
fdivp
out
in
into
sahf
sbb
daa
aaa
sahf
cmp
cmp
pop
adc
pop
and
push
dec
mov
test
fsub
mov
push
mov
push
std
icebp
sbbl
gs
int3
sbb
aaa
adc
orl
push
pop
mov
fnstsw
mov
sbb
cmp
push
push
cmp
das
pop
xchg
in
scas
mov
data16
xorb
jge
sbb
orb
adc
push
pushf
es
pop
xor
sti
cmp
fistpll
in
jne
je,pn
push
push
test
fistpll
pop
push
and
cld
pop
cmpsl
pop
add
cmp
cs
xchg
pop
adc
setl
and
and
hlt
jp
pop
sub
xor
and
test
dec
sub
je
or
mov
and
aaa
js
mov
mov
sub
dec
push
pop
sub
adc
pop
pop
or
negl
cmp
rorl
sub
mov
and
inc
fisttpll
int3
inc
and
add
xor
aas
jl
sbb
push
hlt
lea
into
sub
jne
adcb
sub
aaa
aad
inc
mov
jb
xchg
scas
jg
adc
popf
fnstsw
icebp
ffreep
std
mov
xor
jle
sub
xchg
mov
pop
inc
push
fildll
aaa
in
jno
cmp
push
mov
xchg
jg
and
out
push
daa
lcall
scas
xchg
add
xlat
daa
lock
xor
dec
leave
cmp
shlb
pcmpgtw
xor
cmp
push
fsubrl
repnz
sub
adc
mov
pop
lock
daa
hlt
push
inc
adcl
dec
scas
jb
lahf
popf
mov
fcomps
hlt
int3
aam
sbb
cmc
loope
xor
and
pushf
and
lahf
or
ss
dec
xchg
cmc
add
sbb
push
sub
xor
or
and
xor
ret
jb
and
cltd
push
dec
adcb
repnz
mov
dec
sub
jnp
sub
or
or
sub
xchg
bound
imul
mov
push
add
xchg
rcrl
push
call
xchg
fldenv
dec
std
mov
stc
sti
fstpl
push
and
es
xor
dec
xchg
mov
in
lods
lds
adc
aas
add
lds
push
inc
ret
push
repz
mov
cmp
fs
and
orb
scas
notb
xor
and
icebp
mov
cmp
xchg
and
int
enter
ss
cmc
lods
lret
mov
sbb
popf
ja
fnsave
or
shll
je
pop
push
mov
jecxz
and
jmp
xchg
adc
xchg
imul
push
add
xor
divb
sub
adcb
pusha
or
mov
mov
dec
jecxz
jns
mull
lods
fcoms
xchg
andb
imul
leave
jecxz
xor
inc
xor
lret
xor
in
iret
pop
dec
cmp
mov
sbb
shll
mov
dec
popf
pop
das
xchg
xchg
cltd
add
in
cwtl
dec
xchg
pop
fisttpll
mov
insb
je
or
xchg
sarl
add
outsb
outsb
inc
in
sbb
and
dec
and
jecxz
xchg
fidivs
lods
loope
pop
xchg
sub
push
lcall
push
insb
pop
mov
xor
int
shl
dec
push
sbb
jle
xchg
adc
fisttpll
xchg
xchg
xchg
xchg
sub
cltd
adc
pop
lods
push
push
sub
loopne
or
dec
cmp
ja
les
leave
cmp
jmp
fs
outsl
fwait
sub
sub
sub
movsb
sub
xor
sub
sahf
xchg
jne
and
fadds
mov
test
inc
sub
inc
bound
icebp
aas
stc
nop
pop
into
xchg
nop
dec
dec
in
fs
sbb
pop
sub
sub
cmp
into
sub
push
in
inc
sbb
dec
divb
test
or
inc
dec
jnp
and
sub
pop
cmpsb
cmc
pop
scas
shll
cmp
cs
pop
inc
and
dec
pop
adc
aam
not
adc
out
aad
stos
int
rolb
mov
daa
pop
paddsb
pop
jecxz
data16
gs
stc
pop
notl
or
sub
push
popf
in
pop
repnz
mull
cmp
sub
nop
xor
es
testb
jns
mov
mov
xor
pop
lcall
daa
inc
push
fdivs
pusha
jge
arpl
cwtl
push
loope
jp
and
popa
push
push
and
loopne
mov
das
sub
addps
mov
lds
test
cmp
add
ds
inc
lods
lea
nop
adc
and
and
pop
mov
fwait
in
gs
xrstors
jb
and
in
sahf
sbb
pop
jge,pn
mov
test
fbstp
lods
cmp
jbe
mov
mov
cmc
mov
dec
and
inc
lret
cmp
in
sub
int3
hlt
dec
das
mov
loopne
mov
jo
dec
into
jl
push
nop
xor
in
out
jnp
pop
cmpsb
inc
and
push
adcb
movsb
imul
hlt
push
sub
sub
cbtw
xchg
rorb
frstor
and
inc
push
mov
sbb
mov
xor
adc
xchg
mov
enter
jns
xor
mov
add
aaa
stos
dec
or
clc
mov
jne
loop
push
sbb
sub
xchg
fbld
adc
xchg
cmpsb
push
es
fmull
xor
cmpsb
dec
test
and
cwtl
adc
sub
push
sub
nop
movsl
mov
and
xchg
rcrb
andb
nop
mov
enter
add
test
xor
pop
jb
rclb
shl
insl
add
dec
iret
leave
ljmp
mov
stc
sbb
pop
insl
xchg
int
in
pop
shrb
adc
mov
inc
push
xchg
xchg
push
cmp
cs
fcoml
or
sbb
rcrb
xor
das
and
cs
mov
sar
push
adc
mov
shlb
jmp
dec
shll
xchg
xor
pusha
insb
push
sarl
xchg
push
push
add
inc
into
stos
mov
scas
and
jp
mov
stos
mov
shlb
subps
cmp
inc
jo
in
pop
adc
gs
pop
int3
imul
movsb
dec
std
xor
stc
xchg
into
cwtl
mov
sbb
xchg
je
push
cli
adc
xchg
cmp
mov
fisubrl
jbe
xor
mov
rcrb
pop
xchg
aas
pop
mov
pop
je
sbb
cmp
jl
cli
mov
sub
pop
jg
xchg
mov
pop
fs
xchg
adc
nop
loopne
divb
icebp
sbb
xor
pop
movsl
xor
push
mull
in
sysret
icebp
scas
push
mov
stos
mov
scas
or
push
xorb
xchg
push
repnz
jecxz
pop
mov
aad
lods
inc
cmp
mov
cmp
mov
imul
cld
jecxz
pop
lea
test
sbb
mov
jmp
and
lret
xor
movsl
std
dec
aas
xchg
mov
xor
cs
inc
jo
neg
xchg
mov
lahf
aam
arpl
pop
cmp
stos
xchg
mov
and
mov
idivb
outsl
push
xorb
insb
add
push
scas
push
inc
sbb
cmp
mov
and
mov
test
ja
mov
push
test
pusha
xchg
daa
lods
cmp
nop
outsb
sub
pop
inc
ljmp
pop
sub
or
xchg
mov
or
pop
xchg
sub
shll
mov
sbb
jo
jl
mov
scas
adc
insb
or
sub
fisttpll
lock
sub
insl
iret
rsm
add
imulb
push
mull
pushf
pusha
jle
cld
fildl
sbb
xor
adc
adc
xchg
cmp
in
pushf
shl
mov
gs
dec
enter
pop
cltd
pushf
pop
test
pop
jg
mov
push
loopne
jmp
nop
dec
pop
fwait
jle
rol
jecxz
or
popf
mov
jle
mov
mov
bnd
xchg
xchg
in
inc
adc
add
in
lds
adc
and
jno
sub
mov
xor
pop
sub
frstor
sub
test
adc
add
cmc
xor
iret
sbb
xchg
popf
cld
or
jle
clc
testl
cmp
aaa
repz
xchg
pushf
arpl
pop
inc
enter
insb
ja
cltd
xchg
fmull
sbb
je
std
int3
sarl
aas
aam
xchg
adc
pop
pop
push
mov
sbb
sbb
sub
xor
add
cmp
outsb
push
push
fs
xor
xor
dec
pop
nop
mov
outsb
sbb
cmpl
xchg
fdivl
in
mov
movsl
dec
sbb
insb
not
cli
fcomp
nop
inc
enter
lods
mov
popf
outsl
or
mov
pop
imul
adc
jg
mov
lahf
in
and
dec
test
sbb
or
dec
and
adc
nop
add
add
insl
xchg
inc
push
and
and
sbbl
sub
sbb
rcl
pop
daa
lcall
mov
add
push
mov
cmp
pop
ret
daa
cli
cmp
push
hlt
je
pop
iret
xchg
push
ds
and
sub
fs
mov
dec
fsubs
and
pop
or
sub
mov
mov
subb
mov
sub
dec
cmc
enter
cmp
hlt
push
orl
or
sbb
pop
inc
pop
inc
sbb
dec
mov
mov
and
adcl
out
bound
and
pop
xchg
jmp
dec
dec
cltd
jle
push
xchg
pop
push
mov
scas
into
cmp
pop
jg
pop
ljmp
aaa
dec
mov
fwait
mov
arpl
outsl
jae
cmp
fcomps
lea
xor
dec
and
fsubs
jno
xor
sbb
or
fs
cwtl
dec
push
rorb
mov
xorb
xor
push
cwtl
jecxz
pop
stos
adc
adc
jp
jmp
sbb
das
test
fmuls
lods
cmpsb
data16
or
test
or
add
push
and
pusha
inc
mov
xchg
xchg
push
icebp
adc
inc
jl
nop
mov
add
sbb
loope
fmuls
push
sbb
mov
fisubs
mov
out
or
mov
sub
das
dec
test
cmp
inc
rcrl
mov
sbb
in
fimuls
iret
cmp
mov
lods
and
add
pop
xchg
inc
push
sbb
std
mov
je
or
push
sub
sbb
popf
sti
jb
mov
push
in
pop
aas
enter
in
jecxz
dec
out
fmuls
xlat
fwait
subb
inc
push
lret
jo
xor
jecxz
fsts
push
jae
push
mov
pop
cld
xchg
cmp
out
pusha
sbb
jmp
pop
add
adc
rcrb
daa
mov
or
cmp
sub
ss
sbb
jl
mov
fnstcw
in
pop
es
pop
jne
imul
mov
push
fs
ds
inc
mov
daa
addr16
dec
xchg
cltd
xchg
fcomp
cmpsb
aaa
add
imul
push
or
scas
aad
xor
and
test
pop
push
pop
or
rclb
test
jb
cmpsl
xlat
inc
dec
ficoml
adc
repnz
fwait
ss
clc
sub
std
push
std
adc
es
cld
adc
jle
push
lret
shrl
inc
xor
test
mov
xchg
adc
mov
jecxz
fisubrs
inc
mov
push
push
sbb
and
xchg
enter
mov
push
xor
jno
mov
push
dec
jmp
addr16
adc
mov
mov
xchg
mov
icebp
mov
or
out
pushf
xor
iret
mov
mov
call
or
js
jb
cmp
or
adc
xor
pop
ficomps
sbb
aad
cmp
fsts
and
insb
and
subb
fsubrl
sbb
pop
jb
jmp
dec
rorb
pop
loopne
lret
ss
push
xor
rorl
scas
dec
xor
sbb
icebp
mov
dec
es
test
inc
jae
gs
std
xchg
ret
jl
in
gs
mov
or
adc
cmp
and
lahf
sbb
jecxz
test
pusha
jp
std
in
bound
mov
lret
dec
add
loopne
fnstcw
sbb
pop
and
or
shl
push
sti
or
push
or
mov
push
into
sbb
fsts
add
mov
dec
pop
cmp
or
cmp
mov
mov
sbb
mov
cmp
xchg
aas
stos
call
jae
jg
lock
pusha
movsb
adc
inc
push
das
pusha
fmuls
sub
jb
aam
add
jnp
and
mov
xchg
adc
cmp
nop
loop
inc
daa
push
cmc
xor
mov
mov
mov
sbb
lea
testb
and
ret
je
sbb
pop
add
sbb
mov
jg
add
xor
or
cmpsb
std
and
mov
subl
mov
sub
lods
and
jo
add
mov
movsl
sbb
xlat
inc
mov
imul
pop
sub
or
push
mov
add
popl
cmp
pop
ljmp
jae
loopne
pop
pop
mov
jmp
mov
push
shll
dec
push
push
push
pop
dec
ret
sub
mov
je
fstpt
cmp
push
xchg
or
xor
imulb
sub
loopne
pop
in
jp
mov
andb
jne
in
push
jb
bound
outsb
cs
repnz
push
xchg
xor
dec
sbb
xchg
mov
cmp
je
or
shl
fiaddl
cld
iret
jne
push
std
scas
mov
or
inc
fwait
pop
xor
nop
jns
adc
jle
push
jns
mov
fcompl
push
pop
adc
mov
enter
xchg
adc
pop
and
lods
les
mull
fisubrl
sbb
dec
dec
stos
adc
cmc
test
jecxz
fildll
xchg
push
fcoml
cs
jnp
inc
add
xor
sbb
or
mov
or
rcrl
scas
test
push
sbb
out
sbbb
dec
imul
lds
test
dec
and
sub
in
push
pop
or
ja
pop
sbb
filds
in
cmpsl
xchg
add
nop
and
add
aaa
jbe
js
sub
unpckhps
mov
cmpsb
stos
test
xchg
ret
test
jo
push
push
mov
insb
sbb
jb
jae
sub
jle
addr16
dec
lds
sti
xor
mov
cmp
xchg
insb
js
sub
je
sbb
ficoml
dec
xchg
inc
pop
xor
pop
nop
xchg
jb
jo
inc
call
adc
pop
mov
pop
inc
nop
jo
cmovns
or
jp
cmp
cltd
mov
mov
jp
xchg
inc
mov
gs
mov
xor
lods
insl
fimuls
adc
jge
fdiv
or
xor
lds
jge
pop
pop
cltd
addr16
bound
mov
fmuls
cmpsl
in
popf
dec
and
sub
fadds
mov
hlt
clc
adc
jb
push
popa
push
xchg
bound
dec
pop
icebp
and
cld
pop
adc
andb
and
enter
adc
das
push
and
pop
or
lea
lods
cmovns
sbb
dec
pushf
out
xchg
xor
fisttps
test
or
mov
insb
xor
sbb
sbb
mov
push
insl
in
dec
mov
push
into
into
fisttpll
pop
inc
sbb
ss
nop
sbb
mov
cmp
daa
and
adc
mov
inc
movsl
xchg
ss
popa
sbb
in
sbb
push
jb,pn
xchg
sbb
sbb
xchg
jl
movsb
dec
pop
out
jbe
in
jle
jo
ret
jge
es
push
push
push
inc
or
jg
sbb
mov
jne
inc
pop
in
flds
out
push
cmp
sub
xchg
adc
push
inc
dec
stc
fdivrp
icebp
adc
mov
push
in
adc
lods
mov
mov
ljmp
mov
cwtl
sub
lret
cmove
dec
cmp
bound
pop
jnp
nop
dec
es
subl
mov
xchg
jge
je
dec
mov
dec
ret
lods
xchg
and
jle
inc
test
lcall
fs
lock
jle
inc
inc
sub
mov
xlat
test
daa
sub
popf
dec
and
xchg
mov
mov
xlat
push
xchg
loop
mov
dec
add
fdivp
aam
xchg
lods
and
pop
cmp
int
psrlw
adc
adc
pop
fstl
loop
jbe
and
dec
push
std
pop
shr
in
jae
push
or
sub
sub
push
sub
adc
test
xchg
pop
mov
or
test
cmc
shll
push
test
ljmp
sbb
and
lods
bswap
clc
les
pop
xchg
or
leave
xchg
mov
dec
sbb
dec
dec
sub
pushf
push
mov
inc
sbb
enter
imul
mov
or
jo
and
adcl
xchg
adcl
popf
push
and
jo
test
shl
cmpsb
push
lahf
dec
sub
xor
mov
xlat
mov
mov
sub
pop
ds
std
sarb
add
les
mov
xchg
loopne
sar
scas
fdivl
mov
dec
dec
scas
xchg
xor
stos
and
loope
out
iret
inc
push
xor
sbb
out
xchg
cltd
outsb
adc
or
jp
clc
fwait
and
or
in
clc
inc
adc
test
stos
nop
mov
out
and
or
pushf
push
lock
sub
push
popf
rolb
out
sbb
push
aaa
xchg
sbb
fiadds
addr16
sub
mov
outsl
add
adc
and
bound
push
shll
and
mov
lods
xor
pop
mov
std
add
orb
loopne
icebp
adc
xchg
cs
add
fwait
xor
sub
mov
setle
cmovle
push
add
or
sbb
adc
ljmp
pop
jle
jae
lds
push
mov
inc
mov
out
ds
jmp
mov
xor
adc
cli
lahf
add
add
pop
cmp
or
or
inc
mov
lcall
or
mov
test
andb
cmpsb
mov
movsb
adc
and
pop
iret
cld
add
fwait
sbb
push
clc
lock
dec
mov
mov
pop
jge
cmp
ja
test
divb
test
ffree
jb
cmp
js
push
pusha
movsl
mov
das
insb
push
pop
push
scas
dec
sub
rolb
xchg
mov
pop
inc
gs
fdivs
cld
pop
adc
shll
push
in
sahf
jl
sti
add
push
sbb
in
pop
mov
ret
shrb
xor
cmc
das
mov
enter
adc
scas
bound
mov
jg
mov
cs
pop
pop
adc
aad
xchg
stc
adc
fstpl
addb
test
psubsb
aad
xor
sbb
mov
movsb
dec
xchg
xchg
xchg
int
mov
mov
lret
push
xor
data16
push
loope
stc
cld
int
movsb
xchg
pushf
push
push
or
aam
cmc
cmpsl
testb
aam
aad
sub
xor
nop
mov
xchg
ret
repz
sub
clc
adc
mov
imul
xchg
inc
in
pop
cwtl
sub
fs
lds
push
sub
cmp
aad
sbb
jno
lcall
dec
pop
sbb
mov
push
fstl
pop
mov
arpl
incl
out
mov
out
popa
pop
adc
sub
ret
pop
dec
sub
or
mov
mov
pop
push
outsl
inc
loop
xor
std
fs
sub
fistpll
insb
divb
bound
add
and
push
out
xor
ds
imul
xor
sbb
addb
sahf
stc
add
sub
pop
push
in
dec
test
lods
push
inc
dec
push
push
clc
insb
pop
cwtl
test
inc
xchg
fsub
shll
jecxz
mov
mov
jbe
and
jo
lods
xchg
jecxz
xchg
sub
pop
hlt
ss
stos
xchg
xor
adc
repz
cmp
pop
adc
xor
ss
xchg
mov
push
es
inc
push
es
dec
hlt
popf
es
nop
call
pop
movsl
xor
mov
cmp
sbb
push
push
lods
add
inc
mov
loope
stos
push
or
jbe
aam
loop
psubusw
push
mov
xchg
mov
sbb
loope
sub
mov
and
jb
xor
sub
jmp
ret
jo
aas
mulb
mov
push
ljmp
mov
data16
ds
dec
add
imul
push
xchg
xchg
cmp
sub
and
or
cmc
outsl
bound
cld
popa
stos
popf
mov
stc
jbe
insl
aam
negb
push
add
adc
or
lock
sbb
push
and
push
repz
imul
pop
cmp
out
ret
clc
sahf
inc
mov
xor
pop
mov
adc
test
add
adc
xlat
jecxz
jl
aad
xchg
push
in
mov
test
pop
push
and
test
xchg
into
xchg
dec
mov
xlat
dec
push
vxorps
das
dec
inc
xor
pop
fisubl
xlat
js
sbb
adc
es
mov
mov
or
repnz
or
aad
xchg
push
add
sbb
cmp
ja
inc
aas
ljmp
sbb
dec
roll
cli
mov
push
pop
push
cltd
movsl
sarb
dec
pop
pop
xor
sbbb
je
and
call
sub
ds
rclb
or
es
xor
xchg
aas
mov
mov
push
pushf
jl
ja
sahf
aad
int
lea
in
sbb
cltd
in
cmp
sbb
loop
cmp
sbb
inc
jno,pn
insl
aad
push
aas
cmc
push
fcomp
repz
push
gs
pop
fstp
adc
inc
fwait
push
adc
fistl
sbb
push
jbe
push
xor
es
and
inc
add
int3
jg
popf
in
mov
out
cmp
stc
push
mov
hlt
out
fldt
dec
movsl
jmp
and
sbb
fisttps
dec
cmc
in
push
jecxz
add
mov
add
sahf
dec
jecxz
xchg
inc
xor
mov
cwtl
xor
push
jl
je
gs
pushf
pushf
and
adc
inc
dec
xchg
mov
jecxz
cmpsb
cmp
xchg
push
mov
push
dec
je
insb
mov
jo
fsubrl
lcall
outsb
mov
pop
fcoml
jl
adc
xor
jp
mov
pop
xor
mov
jge
dec
mov
xchg
push
ds
pop
sbb
inc
sub
and
cmp
sub
sbb
xor
lret
jo
in
js
adc
pusha
cmp
sub
aas
adc
dec
mov
sbb
push
ds
int
inc
mov
mov
push
orb
pop
or
and
lock
sbb
popf
push
inc
and
sub
push
adc
push
push
pop
xchg
pusha
dec
pop
adc
and
xchg
js
pop
push
push
lret
scas
xchg
sub
or
nop
or
nop
or
push
push
nop
sbb
push
stos
les
cmp
loop
sahf
and
sub
mov
frstor
aaa
sbb
lea
ss
pop
dec
loopne
mov
es
scas
std
outsb
xor
pop
add
cmc
dec
push
lcall
cmp
insl
add
adc
adc
inc
and
cmc
lret
out
mov
cwtl
in
xor
jo
jmp
mov
pop
insb
shlb
mov
xor
jge
push
mov
cmp
movsb
mov
cltd
fcomps
mov
rolb
push
dec
xor
jo
inc
mov
cmp
jl
push
pop
arpl
xchg
cwtl
adc
mov
jns
pop
int
rcll
sub
lea
cld
dec
inc
mov
movsl
imulb
pop
lods
sbb
sbb
push
inc
iret
xchg
xchg
in
and
dec
mov
cmpsl
rcr
addr16
cmp
sub
xchg
shll
jne
out
in
test
fldl
loopne
sbb
mov
push
shlb
lret
cmpsb
loopne
sbb
cltd
lods
xchg
sbb
lea
adc
xchg
fimuls
sbb
jmp
push
and
pop
and
xor
jecxz
jo
ret
and
adc
lcall
xchg
aas
in
xchg
pop
xor
xor
or
sbb
test
sbb
jne
mov
aam
and
jo
not
mov
lret
outsb
jae
pusha
and
fadds
pop
subl
fisttps
push
in
lds
and
icebp
rolb
sub
push
jnp
and
sbb
notb
ret
xchg
or
jno
into
pushf
xor
lock
push
decl
lds
fbld
dec
jb
mov
arpl
and
jns
push
sub
fcoms
imul
fdivrl
cli
rorb
sub
ficomps
cmpsl
or
das
push
dec
push
pop
xchg
outsb
sbbb
xor
addr16
fistpll
xlat
push
cmp
icebp
push
xchg
adc
scas
loope
push
pop
iret
fwait
enter
pop
mov
cmc
rcrb
push
sbb
pop
or
shrl
mov
test
cmp
outsb
mov
js
or
mulb
inc
scas
in
dec
push
loope
mov
xor
jge
sbb
fbld
movhps
xchg
and
pop
iret
sbb
dec
mov
cmp
dec
push
xchg
pusha
and
ss
push
test
and
adc
scas
out
mov
push
test
andl
and
cli
lea
push
adc
adc
jl
sbb
and
xchg
xchg
push
dec
lods
xchg
bound
push
adc
jb
xor
and
cmp
subl
xchg
test
push
push
lock
cmp
mov
jmp
push
cmp
mov
mov
xchg
test
dec
rcrl
add
cwtl
lea
mov
rolb
mov
cwtl
xor
gs
mov
pop
lsl
aam
jns
inc
iret
pusha
pushf
cmp
mov
cld
scas
cli
pushf
and
es
fcoms
push
xchg
pop
mov
pushf
daa
das
dec
push
imul
sbb
cmp
dec
lods
sbb
fiaddl
in
out
adc
insb
push
mov
adc
sub
xor
cs
sbb
sub
cmp
scas
sti
dec
xor
jecxz
sub
ficompl
mov
adc
sub
sbb
dec
xchg
bound
xor
adc
adc
sub
sbb
inc
and
int3
xor
cmp
pop
pusha
adc
adc
or
add
mov
cmp
jbe
aaa
inc
fsubrl
test
daa
aaa
aad
imul
ja
xor
mov
mov
cwtl
clc
dec
call
int
aam
xchg
aas
rcll
push
shlb
pusha
das
or
aaa
xchg
sub
add
jecxz
xchg
or
pop
pop
add
fistpll
icebp
hlt
push
in
sub
mov
add
xor
mov
ret
jge
ret
mov
nop
fisttps
and
pop
insb
xchg
or
in
sbb
repnz
jg
sbb
lods
mov
lock
and
xchg
ljmp
aam
pushf
ljmp
dec
add
fsave
push
mov
cmp
sahf
call
xor
hlt
mov
leave
pop
pop
stc
mov
cli
test
push
mov
insl
mov
rcrl
xchg
andb
popf
lods
cmp
jae
mov
sub
push
adc
int3
pop
les
push
jb
sti
repz
mov
bound
bound
xor
push
lock
jg
loope
sub
fdivrp
or
xchg
negb
jl
mov
pop
xor
fildll
pusha
loop
cmc
fcoml
sbb
push
mov
in
js
sub
rcrb
xor
adc
in
xchg
inc
adc
test
jnp
mov
xchg
push
mov
push
loop
mov
pop
add
push
fnsave
dec
lds
insb
std
push
add
sub
cmc
push
dec
mov
fwait
aam
or
sub
ljmp
or
test
push
fsubp
adc
mov
sub
mov
les
mov
sbb
loope
and
sbb
shl
pushf
insb
dec
fsubl
adc
adc
das
xor
or
sub
lret
xor
mov
dec
test
xchg
cld
rcr
lods
loopne
and
inc
outsb
mov
or
outsb
testb
and
push
fcompl
jnp
ljmp
cld
xchg
mov
test
adc
imul
pop
jbe
jae
push
xor
sbb
push
rorb
sub
push
push
lods
ret
cmpsb
and
cmp
mov
fadd
mov
fwait
push
xchg
lods
mov
pop
lds
adc
int
or
adc
idiv
test
fildll
out
mov
ret
xchg
push
mov
jo
div
aam
lahf
andl
test
lock
insb
and
pop
ljmp
and
pusha
dec
in
dec
stos
aad
cmp
aam
rclb
pop
dec
jge
pop
mov
adc
fisubrs
add
inc
pop
cs
pop
pushf
out
mov
loopne
mov
movsb
scas
pop
orb
ljmp
mov
sub
xor
not
pushf
and
fsubr
sbb
std
sub
cwtl
in
stos
jl
hlt
test
popa
repnz
or
sbb
jne
hlt
inc
mov
mov
in
imul
icebp
jge
dec
xor
mov
push
insl
jg
outsb
stos
push
mov
xor
dec
adc
clc
push
sub
fs
sbb
jno
lea
sbb
dec
xchg
sub
out
loope
xor
xor
dec
mov
jge
dec
mov
mov
xorl
flds
add
pop
movsb
lea
mov
divb
call
inc
pop
xchg
push
adc
int
pop
lds
adc
outsl
pop
fcoms
insl
add
cmc
sbb
call
xchg
add
sub
in
push
repnz
cs
scas
sbb
fadd
fiaddl
mov
sub
pop
aam
push
and
repnz
shlb
out
ret
inc
inc
rclb
mov
rcl
out
leave
loopne
rcrb
or
fnstsw
push
or
fstp
shlb
or
and
sub
negl
inc
mov
jo
fs
movsb
sbb
push
loopne
jg
sarl
outsb
push
test
mov
enter
pushf
idiv
and
insb
mov
push
icebp
pop
or
cltd
xor
inc
in
ret
lods
push
or
mov
scas
aaa
fildll
jge
jl
jg
or
or
adc
pop
xor
rep
jle
and
imull
pop
gs
fst
push
aas
call
bound
je
xor
cltd
xchg
cmp
inc
and
xchg
mov
ror
sbbb
xor
pop
cmp
or
add
mov
cmp
loop
mov
nop
ss
mov
rolb
jmp
xchg
fisttps
fldt
adc
pushf
push
push
xor
insb
mov
adc
pop
lock
sbb
adc
jmp
push
xchg
sub
and
push
repz
out
clc
add
sub
ret
pop
mov
and
adc
cwtl
in
adc
cmpsl
adc
jmp
cwtl
mov
test
clc
adc
or
adc
adc
and
fadd
push
cmpsb
dec
push
pusha
test
xlat
mov
adc
adc
push
scas
sbb
dec
sbb
and
xor
and
es
sub
dec
sub
adc
scas
loopne
sbb
mov
js
pop
out
adc
movnti
cmp
aas
jo
cs
adc
mov
sbb
mov
scas
jp
popf
sbb
pushf
mov
dec
jp
xchg
es
sub
sub
das
mov
dec
cli
mov
imul
mov
js
adc
hlt
xchg
lret
cmp
jnp
dec
mov
imul
imul
iret
mov
loope
adc
mov
psrlw
sub
push
push
adc
push
push
pop
seta
sbb
mov
sub
or
fsubrl
inc
inc
ljmp
mov
sub
sbb
lret
push
dec
enter
xor
test
and
sbb
icebp
sub
adc
mulb
mov
jl
or
xchg
push
test
mov
ja
pop
mov
mov
je
jg
nopl
dec
sbb
mov
ds
mov
cmp
push
add
or
and
push
add
or
std
sbb
push
mov
sub
xchg
push
std
xor
sub
cmp
mov
xchg
mov
push
push
jg
cmp
mov
or
mov
rolb
xchg
pop
pop
jle
inc
addr16
or
call
outsb
mov
push
pop
mov
lahf
xor
sbb
ds
sbb
cmpsb
imul
js
pushf
push
scas
pushl
mov
loop
cwtl
je
sets
sub
adc
or
pop
loopne
imul
sub
xor
push
sbb
loope
push
xchg
and
popf
mov
sbb
ljmp
xchg
jnp
insb
sub
test
fistl
scas
loope
lock
xchg
cltd
dec
test
je
add
and
adc
adc
frstor
pop
cltd
shrb
mov
and
sbb
mov
movsb
fstl
lret
das
std
or
push
in
adc
adc
inc
out
ja
out
xchg
lcall
adc
fwait
and
pusha
jle
outsl
mov
lret
push
popf
sub
xchg
insb
into
daa
mov
shrb
adc
clc
dec
xor
push
sbb
sub
push
movsl
xor
fnstsw
mov
add
sbb
insl
jle
pushf
push
pop
js
jle
pushf
mov
sub
jns
int
xchg
push
xchg
lods
mov
ret
bound
sbb
lea
push
adc
or
jl
cmp
and
scas
sub
popf
lods
xor
int3
jge
movsl
lods
mov
cltd
xor
mov
push
adcb
jp
xor
dec
or
dec
push
mov
sbb
sahf
ja
pop
sbb
xor
sahf
sbb
fidivrs
adc
fs
jmp
xor
pusha
test
mov
inc
push
sti
mov
sbb
pusha
lcall
nop
adc
pop
adc
pop
cwtl
insb
lahf
jp
pusha
scas
adc
outsl
sub
rcrb
jb
jae
add
mov
inc
dec
mov
mov
or
lcall
je
mov
jne
ja
jne
lock
nop
push
dec
in
inc
mov
subl
fs
mov
stos
mov
jecxz
and
jo
push
daa
fs
inc
push
pop
movsb
cli
mov
and
sbb
loope
movsl
xchg
pushf
es
xor
dec
je
hlt
jl
sbb
sub
addr16
jb
js
cmp
xchg
xchg
in
sbb
sbb
dec
test
movsl
mov
popf
pop
lea
adc
in
sub
mov
cmp
and
adc
jecxz
lea
mov
adc
sbb
aaa
mov
sahf
adc
ja
outsl
daa
inc
fs
sbbb
hlt
adc
push
inc
sbb
pushf
mov
mov
mov
ret
ss
test
movb
pop
xchg
pop
xor
icebp
add
jp
mov
pusha
and
lahf
xor
adc
dec
sti
push
xchg
sub
mov
fwait
nop
sub
repnz
stos
mov
mov
cli
push
adc
sbb
arpl
xor
jo
sub
push
push
cmp
xlat
or
pop
test
dec
aaa
adc
hlt
ds
mov
and
lsl
into
inc
push
je
into
jb
sbb
jb
jge
data16
xchg
fistps
push
imul
sub
pushf
lods
sbb
iret
adc
inc
es
xchg
sbbl
xlat
or
mov
testb
shl
cs
notb
mov
int
and
mov
push
lahf
dec
fdivs
scas
adc
push
jge
sbb
inc
xchg
rcrl
scas
fstl
addr16
push
fstpt
test
in
xchg
pop
es
xchg
sbb
xor
inc
cltd
fucom
pop
xlat
jo
push
push
std
cmp
push
dec
insb
dec
inc
sub
add
mov
xchg
sahf
xchg
push
push
and
inc
rcl
and
adc
es
inc
xor
xor
xchg
daa
xor
mov
add
pop
mov
int3
push
adc
cltd
cmpsl
inc
xchg
imul
divb
jae
inc
mov
test
and
scas
cmp
xchg
inc
xor
ds
jg
xchg
or
inc
push
jo
pushf
cli
adc
mov
add
lea
cs
pop
mov
and
jecxz
push
sbb
movsb
aad
sahf
or
push
add
xchg
jecxz
sub
and
and
xor
lcall
mov
jg
test
lock
ds
hlt
pop
and
mov
sbb
cmc
inc
sub
fnsave
dec
out
stos
sub
icebp
pop
dec
shll
xor
xchg
pop
or
push
pop
xor
je
mov
mov
scas
pop
inc
xor
cmpsl
xor
push
in
cld
dec
shll
jo
es
or
out
adc
scas
test
fmull
fs
add
inc
loopne
orl
jo
icebp
fidivl
xchg
fcoml
push
mov
jo
hlt
fstpt
and
jecxz,pn
fstpl
loop
test
call
or
gs
les
mov
and
add
out
inc
push
dec
cmp
test
bswap
and
das
mov
push
and
popf
pop
sbb
mov
mov
sahf
subb
mov
xor
scas
fists
lahf
mov
push
push
pop
arpl
mov
xchg
adc
pop
into
xor
pop
push
shlb
and
fs
aaa
sahf
movsb
push
in
or
mov
loop
insb
cltd
push
push
sub
add
sahf
dec
mov
insb
fldl
out
repnz
push
cmp
int3
jae
push
sbb
enter
stc
mov
push
jmp
ljmp
js
or
popf
cwtl
nop
xchg
add
xchg
pop
and
xchg
xor
lock
push
mov
pushf
xor
pop
sbb
aam
jo
mov
popf
push
adc
in
adcl
fdiv
sbb
dec
stos
aam
sub
sub
xchg
out
jmp
je
hlt
sub
mov
jae
push
hlt
mov
cwtl
adc
inc
loope
fs
mov
or
subb
je
les
fadds
jl
cmp
inc
inc
setno
insb
inc
ds
cmpb
in
adc
add
push
loop
xchg
je
cmp
int3
mov
xorb
sub
cmp
adc
adc
dec
aaa
add
mov
or
test
je
fs
push
sub
and
repz
bound
cmp
xor
and
add
inc
insl
cmp
add
push
outsb
push
mov
mov
movsl
jmp
push
add
adc
sub
add
stos
and
and
sbb
pop
xor
sbb
mov
add
pusha
notl
cmp
lar
lcall
adc
iret
movsl
mov
xlat
xchg
call
mov
incl
jmp
adc
lret
pop
lods
in
pop
pop
push
repnz
imul
or
mov
adc
bound
push
sbb
jecxz
mov
dec
xor
mov
or
cmp
in
cmp
stos
inc
ficoml
xchg
in
iret
imul
jmp
fs
push
into
pop
repnz
sbb
and
mov
pop
mov
adc
push
sbb
cli
push
fmul
xchg
lods
bound
push
pop
and
pop
test
icebp
adc
in
lods
jns
pop
ljmp
in
push
push
or
pop
lock
xor
jns
enter
lahf
int
fldl
shll
fistpl
movsb
repnz
pop
adc
gs
lock
sbb
sbb
dec
enter
adc
or
jns
leave
lret
clc
mov
inc
dec
push
push
push
sub
in
ja
push
sbb
or
xchg
insb
or
mov
xchg
cli
sbb
pop
orb
fdiv
dec
sbb
ret
es
stos
syscall
sbb
push
dec
mov
xchg
insl
inc
pop
sbb
pop
dec
dec
add
idivl
das
fdivrs
enter
xor
mov
adc
mov
inc
mov
enter
adc
pusha
out
sbb
fisttps
and
xchg
bound
mov
mov
xor
xchg
pop
xor
inc
adc
scas
mov
adc
jb
xor
aam
imul
and
in
xchg
mov
adc
mov
lret
push
mov
push
fdivl
dec
pop
mov
jle
adc
inc
test
mov
scas
mov
jbe
jp
pop
and
lods
xor
push
bound
adc
hlt
test
xchg
lahf
add
and
jecxz
fsubrs
adc
cmp
jge
mov
dec
dec
xchg
push
mov
test
xor
sub
xor
adc
addl
and
or
sub
sub
xorb
outsl
mov
fcoms
mov
lods
fmuls
jl
add
pop
pop
and
pop
popf
and
rolb
jl
and
lea
sub
mov
push
jle
xchg
sahf
xorb
push
push
arpl
pop
outsb
fcompl
add
subb
mov
or
hlt
dec
mov
cmpsb
cmp
movsb
outsb
jno
ja
cwtl
inc
insb
xorb
fsts
dec
fdivrl
test
das
fistps
fucomip
push
xor
xor
cmpsb
mov
xchg
jle
and
jecxz
rorb
xchg
dec
mov
inc
mov
xor
orl
cs
das
fistpll
out
repz
cmp
fisttps
sub
mov
sbb
inc
mov
and
icebp
inc
adc
hlt
or
into
add
lcall
loop
push
or
adc
and
add
popf
cwtl
adc
push
hlt
dec
inc
in
inc
int3
fwait
cmp
ja
inc
push
xchg
sete
hlt
jp
repnz
bound
fidivrl
sti
std
xor
push
cli
push
push
adc
hlt
xor
dec
mov
jnp
adc
je
hlt
mov
pop
popf
xor
test
test
lea
jae
pop
lock
sbb
hlt
sti
xchg
hlt
mov
adcl
test
cli
nop
push
dec
repnz
jno
mov
sbb
push
bnd
ficomps
out
shl
dec
hlt
mulb
fdivp
aam
cmp
loope
movsl
push
dec
in
cmp
pop
jmp
xchg
xor
movsb
mov
ds
aam
fs
push
and
jecxz
push
cmpsl
test
pop
rcrl
lods
jecxz
sbb
mov
lret
dec
ds
aam
insb
mov
sbbl
jnp
pop
mull
adc
cltd
bound
xchg
jmp
mov
insl
repnz
frstor
pop
daa
xor
xlat
icebp
fwait
dec
and
cs
cmp
mov
dec
mov
lea
push
dec
and
xchg
je
and
std
repnz
jno
mov
notl
mov
xchg
sbb
cmp
add
and
push
add
add
and
xor
inc
inc
or
mov
jns
mov
sbb
xchg
rcl
cmc
out
je
pop
and
mov
dec
je
adc
daa
and
xor
xor
and
fisttps
jge
pop
stos
sub
fcmovb
test
cmpb
andb
lock
hlt
push
testb
xlat
cmp
movb
push
cwtl
mov
insb
pop
ds
mov
xchg
dec
imulb
adcl
push
popa
cmp
inc
cmp
sub
jnp
and
add
fs
mov
nop
push
fnstenv
xor
cmpsl
imul
sub
sub
testl
jl
sub
dec
adc
or
into
mov
xor
lods
fistl
das
insb
imul
nop
adc
push
cmp
jbe,pt
push
cld
sub
mov
and
nop
adcb
or
les
bound
in
dec
pop
cs
jb
cmp
push
sbb
and
mov
pop
in
xchg
fadds
dec
jb
inc
fadds
adc
cmp
imul
push
push
addl
dec
adc
adc
imul
pop
jbe
jge
pop
adc
mov
and
inc
dec
push
out
push
sub
lods
cmc
xchg
scas
jl
jecxz
cltd
mov
jle
stc
adc
cmp
and
adc
push
sbb
dec
popa
dec
adc
or
xor
pop
mov
lods
xor
push
hlt
enter
dec
sub
sbb
daa
adc
insb
orb
lea
sub
sub
xor
and
mov
loope
jmp
test
xchg
jmp
pop
push
out
loope
test
mov
dec
arpl
leave
mov
push
and
pop
mov
or
jb
popa
pop
dec
pusha
mov
sub
sarl
sbb
mov
mov
daa
mov
pop
lret
mov
inc
xchg
mov
shl
push
lea
int3
out
cmp
cli
xchg
or
lcall
iret
jg
mov
in
in
icebp
lods
lods
ror
and
lret
push
les
test
in
xor
push
pop
stos
rcll
out
cmp
push
and
jge
daa
aaa
mov
jl
inc
repnz
lods
mov
inc
fcompl
test
jne
outsb
and
sbb
jo
cwtl
int3
pop
lea
jecxz
decb
and
pop
and
and
clc
sbb
mov
aaa
xor
xchg
cltd
xlat
adcb
and
orb
adc
adc
push
aas
out
pop
pop
mov
mov
movsl
mov
mov
add
cmc
nop
xor
test
pushf
pop
pop
sahf
sbb
push
add
jae
dec
loope
stos
lods
xor
pop
xor
push
pushf
mov
cltd
ffree
out
lods
les
fisubrs
aas
fdivs
roll
push
jp
adc
pop
mov
sub
ja
mov
adc
xor
jb
push
pusha
and
pop
mov
sbb
inc
mov
pop
iret
mov
pop
cmp
lcall
xor
jmp
adc
les
and
ja
inc
inc
mov
daa
sarl
mov
mov
dec
in
hlt
das
jmp
mov
and
xor
test
and
xor
cmp
jb
xchg
inc
xor
enter
xor
popa
sbb
bound
cwtl
cmp
subb
adc
or
es
in
fmuls
jne
cmp
jecxz
sti
loope
push
jae
das
push
cld
and
xchg
mov
inc
inc
pop
mov
jne
push
lea
xchg
scas
testb
es
mov
and
xor
dec
sbb
add
sub
xor
inc
sahf
adc
sub
mov
scas
lock
repnz
adc
sbb
xor
xor
sbb
pusha
sbb
sbb
int3
xchg
call
hlt
sub
icebp
hlt
filds
push
sbb
push
adc
sub
sub
sbbb
inc
push
and
mov
inc
jae
xlat
out
push
pop
jle
enter
sub
movsb
es
scas
and
or
cmpsb
addr16
jne
lcall
sbb
adc
mov
rcl
push
lods
adc
iret
adc
cmp
sbb
pop
adc
ss
dec
push
mov
iret
sub
adc
arpl
int
xor
xor
pop
mov
inc
out
xor
sarl
cmpl
inc
outsb
cmpl
inc
popf
inc
dec
pop
jecxz
rorb
xor
xchg
or
xor
ret
mov
adc
sbb
fmuls
in
or
pop
dec
rcll
mov
add
and
rorb
sahf
xor
loop
push
test
inc
into
lret
cs
in
daa
xchg
adc
add
rcrb
dec
push
mov
popf
lds
imul
out
jecxz
push
int3
negl
shll
mov
mov
icebp
lock
sub
sbb
xor
and
dec
fstsw
in
pop
push
sbb
es
stc
adc
cmc
lcall
outsl
and
fcoms
test
mov
pushf
mov
loope
movsl
test
xchg
cs
xor
pusha
xchg
int3
pop
mov
aas
lods
pushl
mov
lock
js
xchg
loop
out
jle
adc
stos
lahf
mov
repnz
and
scas
enter
loop
mov
mov
or
fiadds
je
fsubl
cmp
push
mov
ret
push
adc
sub
sub
fcomp
test
mov
pusha
push
mov
sbbb
std
mov
fstpt
nop
adc
ljmp
lret
xchg
sbb
push
pop
loop
mov
andb
repnz
adc
jbe
pop
test
inc
cwtl
mov
inc
push
pop
push
and
pop
das
add
scas
lret
xchg
sub
xor
pop
mov
xchg
jae
sbb
dec
sub
ljmp
cli
rorl
push
push
nop
mov
mov
pcmpgtb
js
push
std
cs
mov
stos
push
std
push
or
ja
negb
add
mov
mov
std
mov
dec
cmp
cs
fcmovnb
cmp
lock
mov
adc
sub
call
scas
fsts
insl
inc
pop
cmp
add
cmp
int
add
imul
pop
jge
lret
inc
lahf
sahf
enter
jo
jmp
fdivs
or
jo
mov
dec
xchg
sub
push
repnz
jge
gs
and
mov
sahf
inc
clc
xchg
mov
insl
test
dec
bound
cmp
inc
add
mov
push
inc
inc
or
movsb
push
lock
mov
adc
push
cs
pop
movsb
mov
rcl
xchg
or
dec
rcrb
jg
cmp
cmp
mov
jmp
jae
iret
mov
mov
pop
push
xor
push
pop
aam
mov
xor
xchg
jp
jne
dec
and
fwait
mov
xchg
xor
push
clc
mov
and
lea
adc
mov
inc
lock
and
jecxz
daa
mov
push
adc
lock
movsl
lret
mov
pop
aam
jge
lret
ret
adc
hlt
sbb
sub
pusha
xor
xorb
adc
daa
mov
fidivrs
cs
inc
jbe
adc
dec
jg
jo
cmp
fsubs
add
imul
xor
push
pop
movsl
mov
xor
sti
and
push
mov
es
fbstp
out
sub
mov
outsb
xchg
loop
jns
dec
test
xor
sub
or
mov
leave
inc
pop
dec
mov
lcall
sbb
jecxz
nop
xchg
mov
push
int
cmp
jne
xor
daa
ffree
pop
push
sbb
loopne
subl
jno
sbb
fsubrp
xchg
mov
lahf
cmp
loope
dec
lahf
xchg
adc
xchg
dec
mov
je
inc
nop
xor
mov
inc
flds
mov
movsb
xor
ret
notl
or
adc
insl
dec
xchg
fists
xlat
xorps
inc
pop
push
mov
and
cmp
and
cltd
dec
adc
fcompl
sbb
fdivrs
hlt
nop
and
and
and
fildll
jecxz,pt
cmc
gs
shr
jne
pushw
insb
int3
and
data16
xor
shrb
xlat
pop
inc
xor
mov
mulb
push
icebp
or
xor
xchg
fistl
movsl
jl
pop
imul
insb
and
test
sub
cmp
cmp
and
aas
adc
pop
aas
ret
mull
and
aaa
ss
pusha
and
xor
fldl
cmpsl
xchg
push
subb
lcall
lods
sbb
jae
lods
mov
jno
fsubrs
push
repz
mov
cmp
cmp
push
mov
adc
nop
pop
push
in
jl
jno
inc
imul
ja
hlt
mov
push
xor
sub
movsl
cmp
cmp
lcall
add
inc
loope
add
test
adc
shr
shlb
fs
stc
lahf
stc
mov
scas
frstor
mov
pop
mov
in
and
push
adc
into
sub
mov
dec
and
inc
imul
popl
js
popf
enter
cmp
dec
and
nop
lcall
adc
push
mov
xchg
test
mov
js
push
or
add
and
pop
push
shrb
xchg
fidivrs
dec
lret
popf
mov
cmpsb
xor
data16
lods
lret
mov
pop
push
xor
cmpsb
fdivr
scas
pop
mov
and
jecxz
out
and
aas
dec
cwtl
jge
mov
push
leave
add
push
lret
std
fildl
jns
inc
popf
pop
xchg
lods
mov
mov
lahf
hlt
sbb
popf
add
mov
mov
lahf
cmpsb
fucom
mov
push
aam
not
jo
fdivl
stc
add
jbe
test
jp
aam
add
sbb
je
cmp
idiv
xor
ss
adc
cmp
mov
jle
test
and
xchg
push
loopne
push
fstpl
loope
adc
adc
fs
sahf
dec
ss
in
jg
mov
adc
inc
scas
or
adc
mov
adc
outsl
fs
sbb
sti
out
inc
jge
mov
js
xchg
mov
jmp
int3
enter
outsb
xchg
scas
mov
in
daa
pop
lods
or
sub
or
push
push
adc
sbb
adcb
inc
cmpsb
loopne
sarl
shlb
adc
mov
shlb
int
mov
push
push
inc
cmp
add
sti
sbb
xchg
mov
les
cmp
and
mov
pusha
insl
adcl
push
pop
dec
adc
aas
xor
fsubrl
call
xor
mov
push
push
pop
fildll
pop
mov
push
add
popf
sub
out
popf
lods
xchg
sarb
mov
nop
pushf
movsl
push
outsl
jp
fdivl
sbb
inc
xchg
adc
das
sub
push
push
or
dec
lods
call
push
xor
fdivl
cmp
jl
pushf
dec
cmp
jmp
movsb
add
icebp
je
xchg
jb
xor
adc
and
idiv
push
adc
cmp
clc
std
xor
lods
mov
nop
hlt
out
mov
mov
adc
cwtl
cmp
cmp
or
pop
icebp
dec
jo
lcall
lods
jns
xchg
cmp
pop
std
frstor
mov
cmp
adc
cmp
pop
xchg
xchg
into
fucomp
push
push
stos
jp
sahf
shrl
push
cmp
lds
dec
sub
cmp
in
dec
push
or
shl
cmc
pop
adc
push
daa
push
xchg
loopne
sbb
inc
mov
xor
adc
add
add
push
push
nop
cmp
aad
push
mov
push
ja
or
mov
jns
or
adc
popa
push
add
bound
pushf
adc
insb
pusha
cmp
sarb
push
fwait
dec
or
mov
sbb
push
jo
push
ds
push
dec
pop
adc
iret
push
xor
cltd
das
push
clc
lret
mov
mov
xor
arpl
aaa
push
xchg
mulb
sarb
cmp
xchg
sbb
pop
xor
or
or
cmp
jecxz
dec
mov
push
xor
inc
sub
and
mov
popa
dec
fdivrl
sub
sub
and
cltd
lea
pop
dec
jp
cmp
xchg
inc
and
imul
xor
jecxz
nop
and
jno
adc
loop
mov
mov
or
fwait
cwtl
pop
addr16
cmp
cmpsb
inc
pop
pop
pushf
dec
subl
pop
mov
jmp
inc
push
or
mov
add
cmp
aad
test
dec
sub
inc
mov
xor
xchg
sbb
lret
orb
dec
in
fldenv
xchg
jo
xor
rcll
movsl
and
cwtl
push
inc
scas
add
mov
pop
nop
xor
jge
mov
sbb
pop
cli
inc
hlt
inc
xchg
adc
adc
sbb
dec
xchg
ret
mov
test
cli
xchg
out
dec
and
nop
inc
or
xor
fucomp
shll
dec
cmc
jg
movsl
inc
in
mov
pop
adc
out
setne
loope
aam
sbb
push
mov
sbb
adc
iret
fstps
adc
jl
jecxz
mov
pop
scas
or
clc
pop
loopne
mov
lcall
fisttpll
push
outsb
dec
sbb
sti
jbe
jg
fists
add
mov
in
jmp
cmc
sub
mov
cmc
sbb
les
movsl
ja
jecxz
jp
neg
sbb
mov
sub
lret
into
pushf
jle
adc
pusha
outsb
mov
pop
movsl
xchg
dec
mov
mov
xor
lahf
push
in
mov
mov
inc
mov
pop
pushf
inc
inc
xor
sbb
mov
js
test
ss
das
imull
hlt
movsb
sub
fs
in
cli
sbb
sub
xor
cwtl
push
cmp
or
adc
pop
sub
dec
les
adc
jb
jmp
lods
je
stos
jb
cmpsb
loope
inc
pop
sub
ss
popf
xchg
aad
jle
call
mov
pushf
and
sub
inc
int3
in
outsb
push
mov
mov
sub
adc
decb
jno
and
xor
cmp
adc
and
jle
leave
ret
insb
sub
mov
jns
fists
movsl
cmp
push
aaa
push
and
gs
dec
jo
bound
insl
flds
sbb
es
fisubrl
aaa
sub
cli
fs
push
sbb
ljmp
mov
dec
add
push
sbb
jae
aam
test
in
dec
mov
inc
adc
sahf
jb
and
outsb
sub
push
adc
add
jne
push
adc
nop
lods
fnsave
ds
push
insb
cmp
test
or
dec
dec
adc
fucomp
inc
and
dec
frstor
mov
nop
add
notl
hlt
lcall
or
lret
push
outsl
gs
scas
jp
imul
cwtl
shrb
cmp
sar
fsubl
cmp
into
addb
test
or
insb
sbb
cwtl
sub
fcoml
and
and
cmp
fimull
stc
lods
mov
adc
mov
test
push
add
int3
sub
dec
pushf
mov
outsb
popa
pop
in
cmp
xchg
sub
push
sbb
scas
push
iret
adc
sub
push
adc
cwtl
sbbl
sbb
jle
inc
xor
and
xlat
or
mov
int
xchg
pusha
popf
sbb
insl
lock
pushf
lods
jge
adc
in
inc
push
inc
icebp
repz
loop
lea
xchg
pushf
sbb
movsl
push
js
sub
push
pop
sbb
fstpl
mov
sbb
out
xchg
sub
sub
push
pushf
mov
and
setle
cs
in
iret
mov
xor
les
sub
mov
mov
decb
leave
fucomip
push
ja
rcrl
mov
lds
xor
push
aaa
add
pop
sub
jl
xor
std
xor
pop
lret
ss
mov
pop
aad
inc
xor
inc
and
sub
adc
fstpl
sbb
gs
outsl
and
push
sbb
pop
int
pop
imul
jns
pop
es
cmp
cmp
add
mov
sub
out
in
xor
push
popf
inc
clc
nop
adc
dec
cmp
pop
xchg
push
mov
mov
push
adc
pop
fs
aaa
sub
dec
loop
and
in
sahf
xchg
out
xchg
jno
cmp
mov
and
pop
sbb
cmp
push
fs
arpl
push
frstor
jb
push
test
ss
pop
sub
pop
lods
push
sub
aam
les
xchg
jp
push
adc
jb
jno
vpshuflw
pop
xchg
push
push
sub
cmp
nop
push
or
dec
jbe
sub
out
add
xchg
std
inc
dec
inc
cli
lcall
lods
stos
out
lahf
mov
jnp
mov
sub
jb
mov
nop
dec
std
ss
and
adc
adc
inc
adc
sub
movsb
dec
mov
sub
inc
fs
add
push
xchg
xor
or
in
dec
rcrb
loope
imul
ds
insb
sub
jge
je
sbb
dec
cmc
push
or
cld
ss
adc
cmp
push
sbb
xchg
and
xchg
test
icebp
add
push
lods
and
mov
inc
dec
xchg
jno
loope
inc
sbb
lods
xor
mov
test
bound
push
xchg
outsb
sub
push
ss
imul
repnz
sahf
stos
push
nop
xchg
pop
xchg
stc
and
std
adc
sbb
inc
mov
in
movsl
inc
push
insb
pop
loop
bound
repnz
loopne
aas
mov
fisttps
xor
testb
insb
jecxz
push
xor
jbe
and
dec
and
cmp
mov
push
sub
push
test
popa
out
loopne
fmull
mov
xchg
pop
adc
insl
xor
sbb
push
sub
xor
and
pop
sub
adc
sub
test
lock
sub
popf
and
jecxz
jp
or
sbb
jo
ds
push
ljmp
cmp
jl
dec
mov
adcb
sbb
shlb
mov
jl
rcr
mov
frstor
xor
lods
or
mov
int
mov
stos
pusha
shlb
cs
push
push
fs
pop
pop
hlt
sbbl
mov
pushf
sub
sub
test
cltd
cmpl
shld
aad
int
lahf
mov
fs
jns
es
jns
test
fistps
mov
push
push
es
adc
cmp
cmc
jge
mov
pop
add
sti
push
aam
pop
dec
and
dec
mov
mov
jae
push
fstps
aas
or
in
cmc
mov
mov
push
or
pop
aad
push
es
scas
mov
cvtpi2ps
fsubrl
lea
cmpsb
xor
scas
inc
pop
mov
xor
mov
cmp
cmp
add
popf
jbe
repz
jo
mov
in
imulb
cmpsl
aam
shrl
jl
xchg
pop
mov
mov
aad
rcll
adc
cltd
fs
arpl
int3
dec
adc
mov
bound
cmc
jecxz
push
cmpsb
pop
add
and
push
mov
test
popa
sbb
faddl
mov
and
out
sahf
or
inc
dec
int
ss
inc
and
popa
mov
int
adc
movsl
repnz
pop
fcoml
fistl
adc
icebp
inc
pop
fwait
std
xor
jae
cmc
cmc
dec
xor
pop
sahf
mov
xor
loop
sbb
sar
lcall
lahf
push
aas
and
and
push
push
leave
add
cld
test
hlt
mov
jb
pop
pop
in
xchg
xor
add
jns
test
ja
sub
xchg
lcall
je
sbb
pop
xchg
gs
stos
pop
xor
les
pop
sub
outsb
enter
dec
test
dec
pop
icebp
xchg
xchg
dec
iret
adc
cmp
sub
sbb
data16
fidivl
sub
adc
xchg
mov
and
mov
cmp
fs
mov
xchg
sub
std
sbb
mov
or
shrl
rclb
xor
adc
insb
aaa
stc
lcall
xor
movsb
dec
mov
jns
jae
or
push
enter
adc
dec
mov
hlt
lds
dec
hlt
sub
inc
cmc
jg
adc
push
xor
test
pop
adcb
sti
inc
jns
outsl
or
mov
int3
lods
adc
jecxz
daa
xor
mov
or
nop
and
ret
mov
popf
sahf
jb
push
mov
sub
mov
orl
mov
jno
or
in
bound
subb
sbb
lret
daa
test
sahf
popf
ret
fnstenv
fldcw
es
jne
inc
jl
cwtl
jbe
scas
fucomip
push
jbe
pop
mov
aam
xor
and
test
es
and
movsb
aam
push
jle
xchg
insb
push
adc
jno
je
xor
mov
in
nop
adc
out
mov
in
test
pop
arpl
sub
jb
data16
adc
repnz
gs
test
add
faddl
adc
push
or
dec
xchg
sub
xor
lahf
sbb
leave
lcall
xchg
pop
test
adc
push
push
cs
rcrb
xchg
adc
ss
and
push
mov
sbb
cltd
fldl
movsl
pushf
fcoml
aad
fdivl
outsb
mov
mov
and
sbb
adc
cmp
and
rol
xchg
lock
pop
outsb
fisubrs
iret
adc
loopne
xor
cmp
daa
pop
mov
scas
fistps
push
mov
sbb
xchg
pop
testb
cmp
inc
sub
xchg
pusha
jmp
inc
mov
sub
hlt
mov
movb
or
aam
xchg
xchg
cld
jo
data16
sbb
mov
fsub
pop
aaa
push
pushf
jo
pop
adc
mov
test
ja
xchg
pop
addl
bnd
xchg
mov
pop
ss
push
push
jo
push
sbb
mulb
or
or
push
sbb
push
push
and
insb
jge
jo
cs
jne
sbb
dec
or
aam
je
xchg
sbb
adc
push
add
pushf
sbb
push
pop
lods
push
jbe
lcall
pop
cmc
mov
xor
adc
adc
xchg
adc
punpckldq
sub
cmpsb
xchg
lret
aas
addr16
sub
dec
xor
xor
push
cmp
push
sbb
cmc
or
and
jmp
fidivrs
aaa
insb
mov
pushf
sbb
xor
ss
and
jecxz
cmp
jae
pushf
or
mov
xchg
loop
xchg
pop
lahf
fsub
pop
js
in
aad
push
sarb
mov
pop
and
xor
pop
cli
xor
fadds
lods
mov
enter
mov
jl
sub
mov
daa
loopne
sub
xor
jp
push
xchg
xlat
cmp
icebp
loopne
sbb
mov
sbb
sbb
add
jb
hlt
sbb
mov
lods
ja
fildl
push
sub
inc
sbb
mov
jbe
into
or
xchg
and
sub
adc
or
fstps
bound
push
out
push
lret
push
cmp
sbb
sub
aam
push
jmp
hlt
fidivs
cs
in
jbe
inc
dec
push
or
xor
popf
cwtl
outsb
push
mov
push
outsb
rcrl
or
test
mov
inc
out
mov
sarb
sub
in
imul
hlt
jo
outsb
push
shl
std
mov
pop
negb
or
jmp
lock
jmp
pushf
decl
adc
iret
xchg
sub
cmp
and
out
push
jns
xchg
fsubr
pusha
mov
cmpb
sbb
cmp
sub
lea
pop
aam
jne
or
cli
rcrl
push
rorb
pop
cmp
mov
pop
lds
sahf
sub
mov
les
pop
int
sub
dec
popf
lock
adc
or
mov
xchg
fmuls
jno
divb
call
testb
inc
imul
movsb
xchg
aas
fnsave
repz
mov
sbb
imul
and
or
jp
scas
daa
and
or
add
dec
sbb
jns
test
jecxz
pop
hlt
push
imul
dec
enter
pushf
pop
adc
sbb
adc
pop
sbb
cli
mov
dec
arpl
mov
jno
dec
std
subl
jmp
outsl
mov
cmp
cs
out
push
mov
xor
dec
mov
xchg
mov
mov
adc
ljmp
das
popa
int
adc
nop
mov
adc
nop
adc
push
and
adc
and
test
push
in
jle
cltd
or
and
push
ds
xor
aas
pop
inc
sahf
mov
in
push
sahf
pop
daa
sub
sbb
rclb
mov
adc
je
popf
enter
cmp
push
adc
sbb
mov
insl
or
push
and
and
jecxz
and
jbe
stos
arpl
or
pop
mov
loopne
dec
xchg
inc
popf
jno
hlt
addr16
cmpsl
rep
and
gs
aaa
loopne
sub
inc
cmpsb
or
pop
push
insb
xor
dec
cmc
aas
sub
sub
jo
jo
jns
jmp
push
sub
incl
aaa
pop
insl
jg
icebp
mov
outsl
ja
xor
inc
mov
inc
push
outsb
jle
cmpb
dec
testb
test
xor
cmp
hlt
dec
sub
pusha
pop
push
out
dec
and
and
and
loope
orb
je
jo
cmp
xor
out
repz
xchg
inc
sub
adc
sbb
call
lods
adc
jo
xor
sti
sti
icebp
aam
sbb
pushf
xchg
rorb
stos
pop
lret
push
cld
movl
sti
imul
iret
xchg
aas
pop
adc
cs
xchg
sbb
popf
mov
and
xor
ficoml
cmp
or
dec
roll
mov
sub
mov
cld
incl
jnp
push
mov
sub
add
sarl
pop
pop
outsb
cwtl
call
test
pop
dec
idiv
sub
xchg
mov
xor
sbb
repz
fcomp
aaa
cld
loopne
mov
in
dec
testl
xchg
lahf
push
mov
xchg
lods
sub
sbb
mov
les
inc
adc
pop
stos
or
mov
aam
or
popa
cmp
aam
pop
int3
adc
add
push
add
adc
push
adc
sub
xor
cmpsl
in
add
aam
test
xor
repz
jno
aam
mov
xchg
out
sbb
aas
movsl
xchg
mov
pop
xchg
xor
xchg
ret
cmp
orps
mov
mov
jmp
in
lods
mov
out
jle
addl
loopne
cmp
daa
adc
call
cmp
je
pushf
fnsave
adc
outsb
pop
sub
sbb
aas
cltd
sub
pop
push
mov
jbe
mov
mov
mull
shll
push
popf
xor
push
adc
mov
jge
test
lods
inc
mov
mov
push
pand
mov
pop
out
sub
pop
inc
mov
adc
sarb
mov
data16
sub
pop
outsb
sbb
pop
fisubs
loopne
stos
xlat
fyl2xp1
fstpl
cmp
pushf
insl
add
out
pop
push
sub
xchg
in
in
cmpsb
mov
fwait
push
pusha
cmp
xchg
inc
jmp
fwait
adc
cmp
and
sub
mov
ja
icebp
call
mov
pushf
cld
sbb
push
mov
pop
sub
jb
outsl
adc
cwtl
sub
cmc
xor
dec
xor
bound
xlat
nop
lar
sahf
push
enter
popf
in
mov
or
sbb
inc
dec
sbb
push
std
loope
adc
sub
mov
cld
mov
dec
jo
addr16
push
push
xor
cs
outsl
clc
rclb
lret
cmp
push
pop
call
jecxz
or
push
in
push
test
add
add
pop
inc
jl
shlb
sub
dec
mov
jecxz
xor
push
scas
add
nop
adc
fldl
outsb
mov
pop
scas
cs
ret
insl
fstl
test
cmp
xchg
adc
stos
cltd
divl
les
or
pop
mov
dec
jmp
add
cmp
xchg
sub
insl
sub
xchg
frstor
subb
inc
out
xchg
ds
sub
mov
ljmp
push
xor
mov
sub
jg
nop
xchg
inc
addl
inc
aaa
in
lcall
call
pushf
cmp
out
add
sub
cltd
lods
fsubl
jb
push
mov
inc
pop
js
fsubl
cmp
mov
ret
mov
or
sbb
sub
or
mov
xor
popf
xchg
in
mov
cwtl
rclb
jno
jo,pt
cmp
loop
mov
int3
aam
inc
mov
sbb
xchg
loope
ljmp
xor
cmp
inc
in
add
sbb
fwait
arpl
inc
scas
mov
mov
push
mov
jb
lahf
ljmp
xor
sub
xchg
leave
shrl
test
outsl
xchg
sbb
adc
jmp
cltd
sub
and
push
popf
dec
push
mov
mov
sahf
push
push
mov
ljmp
add
enter
dec
dec
sub
cmp
mov
mov
xor
sbb
lea
stc
pop
fstp
les
mov
mov
adc
mov
dec
xor
in
xor
pop
cld
push
dec
or
push
std
xchg
ljmp
int
and
pushf
cmp
jno
addl
out
jle
pusha
lds
lock
ljmp
in
jmp
sbb
adc
ljmp
or
mov
in
loopne
out
mov
pop
pushf
adc
push
hlt
and
mov
fistpll
iret
daa
lcall
shll
or
sub
mov
loopne
outsl
jbe
mov
inc
dec
addr16
clc
dec
rclb
push
pushf
and
fiaddl
loop
and
fisttpll
andb
pop
add
in
pop
and
push
mov
nop
fs
mov
xchg
bound
lcall
xchg
js
mov
gs
inc
xchg
ss
int3
inc
aam
jl
insl
sub
aam
insb
mov
sub
inc
mov
in
dec
adc
iret
jmp
pusha
imul
arpl
lret
or
divb
aad
push
aaa
cmp
movsl
test
scas
push
xlat
sti
nop
out
adc
push
shrl
es
pop
xchg
xor
iret
aad
sti
push
push
testl
nop
or
push
int
fbstp
test
dec
cs
mov
imul
lods
jp
nop
mov
push
lcall
pop
fiaddl
dec
fists
push
or
dec
testb
ret
mov
enter
mov
push
shlb
hlt
es
and
sub
lds
std
fisubs
xchg
loope
mov
or
aad
inc
mov
sahf
pop
test
xchg
sub
push
add
sub
notb
pop
or
loopne
pop
xor
call
pop
and
mov
mov
stos
adcl
mov
mov
fsubl
pop
frstor
push
inc
addr16
movsl
cld
stos
pop
xor
inc
adc
jno
aas
inc
divl
dec
repnz
cmp
shlb
mov
dec
dec
add
nop
adc
int3
loop
stos
push
andnps
or
inc
and
sbb
loope
cmp
sub
bound
or
pop
xchg
fwait
jne
xchg
aad
repnz
rcrb
ret
iret
je
xchg
lods
adc
dec
jmp
cmp
and
or
stc
mov
cltd
xor
xchg
fldt
xchg
adc
push
mov
nop
and
pop
pop
add
iret
sahf
dec
fucomp
add
lods
stc
fstps
scas
add
mov
pop
popf
cmpsl
xchg
pop
lods
lods
pop
hlt
in
lahf
jb
adc
or
mov
popa
jno
dec
or
xchg
sti
inc
pop
or
xor
negb
mov
pop
dec
outsl
in
ret
jo
mov
jnp
ja,pt
xchg
popf
cmp
repz
pop
xchg
std
mov
pop
cmpsb
or
add
outsb
add
mov
sar
mov
ret
push
clc
pop
mov
or
lret
enter
pop
dec
stos
cltd
inc
sbb
sbb
adc
daa
lds
push
daa
xor
cld
rcrl
jg
adc
push
int
dec
jb
clc
mov
adc
shrb
xlat
push
fcmovnbe
cmc
das
dec
into
adc
xor
ret
icebp
xor
inc
add
mov
popf
pop
shlb
mov
les
outsl
int
loop
and
sbb
lea
push
mov
ljmp
repnz
aas
pop
shl
shll
fadds
fidivrs
lcall
aad
adc
fstl
mov
inc
push
orb
push
sbb
iret
andb
push
rorl
ss
and
sbb
push
pop
movsb
mov
push
xchg
mov
je
in
cmpsb
pop
test
sbb
lret
rorb
xchg
pushf
and
sub
lods
sbb
or
or
lahf
inc
roll
or
xor
and
fldl
cli
xor
adc
mov
leave
frstor
sbb
sbb
push
xchg
aad
shll
fstps
dec
cs
xor
test
stos
aad
test
loop
fsubrl
sbb
sahf
orb
adc
and
push
inc
cmp
adc
out
mov
shlb
inc
jge
in
cs
ljmp
add
dec
inc
xchg
dec
sub
adc
xchg
pop
testb
push
sub
inc
push
cwtl
jecxz
cs
test
dec
xchg
xor
pop
xor
js
out
cmpsb
stos
mov
das
fs
push
daa
or
ss
sub
mov
insl
mov
sub
xchg
cld
push
sbb
dec
adc
ss
insb
mov
adc
fs
inc
xor
lods
xchg
stos
xchg
es
lcall
das
inc
cmp
push
negb
nop
mov
les
sub
popf
mov
mov
cwtl
or
jno
fs
sub
xor
jl
int
push
cmp
pop
xchg
cmp
pop
popf
sub
mov
pop
test
fidivrs
fistl
jg
cmpsb
and
outsb
scas
jecxz
mov
xchg
xor
xor
jecxz
loopne
fsubl
nop
mov
add
outsl
lods
dec
ds
adc
sub
in
mov
mov
mov
imul
and
stos
imul
cli
mov
dec
add
movsb
mov
popf
jl
test
nop
jl
mov
fbstp
pop
mov
xor
mov
or
movsb
cld
pushf
cli
jnp
jmp
mov
repz
xchg
fdivrl
pop
push
sbb
shr
lock
cltd
fldt
fucom
lock
aad
stos
sub
cmp
push
adc
mov
rcll
mov
in
xor
aas
es
push
scas
in
inc
and
fmul
push
call
jl
jle
dec
jl
inc
out
jnp
or
mov
cmpsl
js
or
mov
sarl
pop
and
inc
jl
xchg
dec
fs
out
out
sub
daa
sbb
mov
cmp
inc
cwtl
insb
fcoms
and
outsb
push
jno
out
mov
call
lea
sarb
repnz
cmc
mov
cmp
div
insb
jno
mov
xchg
inc
cld
in
in
push
lret
jo
scas
push
dec
cwtl
repz
jbe
hlt
push
inc
add
repnz
out
out
ljmp
jb
adc
cmpsb
xchg
push
pop
ret
ret
hlt
stos
leave
add
mov
stos
imul
pop
sahf
call
or
push
xchg
or
add
add
xchg
adc
jbe
jb
jg
cwtl
fwait
imul
xchg
icebp
js
inc
and
cli
sbb
je
jo
mov
aas
mov
shlb
sub
dec
push
and
cld
xchg
pop
sahf
outsb
and
jo
fs
lods
push
push
daa
nop
rorb
call
xor
mov
push
cmp
add
lcall
mov
cmp
lret
push
aas
mov
hlt
cmc
data16
cmpb
inc
fldl
cmp
mov
jecxz
cmp
pop
int3
fistl
movsl
aas
daa
jg
pop
dec
fst
scas
jle
or
jb
xchg
cwtl
xchg
pop
xchg
xchg
in
js
xchg
sbb
push
rcr
inc
jle
xchg
pop
pop
pop
mov
iret
lret
faddl
rcll
dec
mov
and
clc
ret
inc
add
iret
sub
mov
sub
loop
cmpsl
int
sbb
pop
mov
adc
mov
push
insl
sub
mov
and
je
frstor
push
in
fistpll
cmpsb
mov
mov
sbb
pop
mov
xor
fbstp
aaa
sbb
mov
xchg
fsubrl
stos
cmp
repnz
xchg
xchg
dec
dec
std
sub
outsl
outsl
adc
mov
jno
push
xor
idivb
icebp
dec
push
cs
stc
std
pop
and
pusha
stc
cmpb
adc
inc
mov
out
jecxz
mov
jb
jno
push
and
cli
push
mov
sarl
xchg
inc
sub
inc
dec
cltd
imul
out
rclb
out
in
inc
xor
and
aad
jp
or
insb
mov
mov
in
jecxz
cmp
mov
sub
daa
adc
fnstcw
jg
sub
js
cmc
call
sbb
push
insb
mov
sub
push
and
xchg
xor
movsb
rcl
mov
inc
mov
in
xchg
add
cwtl
push
push
pushf
push
jns
add
mov
loopne
sti
ljmp
xchg
jne
cmp
add
outsl
dec
jb
push
inc
rol
mov
jbe
je
xor
in
jecxz
xor
cmp
xchg
bound
sub
dec
fisttps
sbb
inc
mov
and
dec
ds
push
leave
cmp
in
cwtl
fs
mov
push
adc
mov
out
iret
xchg
mov
sub
inc
inc
push
jno
fcomps
and
jge
jne
insl
adc
push
sbb
sub
fs
push
jmp
ret
int3
fstl
jmp
orl
adc
xor
push
sbb
jecxz,pn
and
frstor
cld
cld
imulb
popf
or
push
push
stos
sbb
sub
ret
cmp
sub
sub
sub
mov
je
sbb
adc
pop
mov
mov
push
mov
adc
push
mov
stos
movsl
loope
pop
inc
dec
lcall
inc
mov
cmovne
sub
lcall
sbb
cld
lods
dec
dec
jge
subl
add
push
pop
dec
xor
push
and
push
xor
and
mov
shll
arpl
or
add
enter
pushf
mov
push
aam
cmp
addr16
ja
inc
lahf
add
sub
insb
inc
mov
dec
sub
pop
cmp
daa
mov
scas
sti
xor
cld
jmp
fadd
and
and
or
mov
fsubrs
movsl
out
xchg
mov
les
mov
fcoml
in
sub
mov
push
sbb
fisubrl
sub
sbb
xchg
push
in
xchg
mov
nop
mov
call
hlt
mov
sbb
repz
ficoml
pop
pop
cld
adc
bound
je
inc
pop
enter
les
in
and
daa
push
int3
pop
dec
rol
sub
push
pop
pushf
cmpl
pusha
inc
pop
ficoms
arpl
xor
mov
nop
adc
and
adc
idivb
sub
dec
mov
lods
fmull
cmp
js
cmpsl
mov
pop
bound
out
jmp
lcall
lds
ss
data16
pop
es
and
decb
xor
xor
sub
enter
jno
cs
adc
fsubs
imul
popa
out
or
hlt
or
decb
and
mov
cs
jp
push
aad
sbb
sbb
sub
into
push
leave
push
lcall
aam
inc
mov
lea
and
lar
add
roll
pop
jns
dec
dec
cltd
nop
pop
std
cmp
dec
mov
scas
push
fnsave
pop
enter
mov
hlt
jbe
fadd
cs
adc
mov
idivb
sahf
xchg
bound
dec
mov
and
push
push
movb
shlb
xor
fadd
loop
pop
mov
dec
bound
add
push
sar
lret
pusha
popf
sahf
mov
push
stc
pop
push
push
mov
xor
in
inc
test
stc
lds
nop
aad
inc
dec
xor
cmpsb
mov
cltd
stos
mov
sbb
cmpsl
mov
adc
les
lock
aaa
cwtl
ds
mov
push
repz
inc
mov
mov
pop
subb
and
jg
ds
push
or
call
lds
push
sub
dec
int
cmp
xor
push
xlat
nop
mov
popa
and
inc
int3
data16
inc
cmpsl
mov
push
pop
pop
push
add
cwtl
es
and
xchg
xor
pushf
dec
cmpsb
aad
mov
leave
ret
mov
xchg
psllw
cmpsb
jl
adcb
ret
cs
es
inc
in
jne
shlb
mov
movsl
jmp
iret
fwait
push
dec
loope
inc
xor
ficoms
ds
cmp
sbb
das
ret
sub
or
add
inc
pop
pusha
bound
push
sbb
push
sarb
xchg
sub
mov
jl
imulb
mov
movsl
sti
sbb
mov
enter
push
repz
dec
pop
and
cmp
xchg
int3
lods
pushf
adc
pop
adc
or
fs
sbb
sbb
cmpsb
sarb
mov
sub
jmp
sbb
pop
sbb
cwtl
cmp
cmp
ss
push
pushf
sub
adc
mov
rcll
push
sbb
ret
push
xor
sub
jecxz
pop
sbb
mov
and
mov
jns
push
out
dec
stos
jnp
addr16
cmp
mov
inc
jnp
mov
and
push
add
adc
adc
xchg
cmpsb
sub
push
jns
sub
xchg
inc
fstpl
mov
cmp
fsubrp
scas
and
push
out
cmp
ficoms
cmp
add
adc
push
push
inc
xchg
popa
jg
xchg
xor
sbb
push
push
xchg
outsb
daa
push
lods
mov
pushf
popf
mov
imul
xor
sbb
out
movsb
xchg
lea
lret
lcall
cwtl
cmp
jg
test
sub
aad
push
dec
cmp
jb
cs
mov
ss
adc
sbb
lcall
sbb
fisubrs
ret
roll
mov
inc
mov
hlt
pop
fists
dec
daa
cli
popa
add
push
xor
sub
or
add
lret
dec
mov
sub
bound
popf
sub
test
add
pop
cmp
mov
cmp
loop
mov
cmp
adc
xorb
das
mov
aam
dec
lea
pop
pop
enter
cmp
pop
arpl
aam
xor
aas
push
xchg
pop
sub
xchg
lahf
fisubl
push
pop
mov
bound
mov
pop
mov
and
nop
test
jnp
movsl
imul
hlt
cmp
inc
stc
mov
push
sbb
mov
mov
sbb
lea
push
cld
push
and
sub
sbb
aaa
lahf
mov
jns
push
fnsave
jmp
inc
adc
adc
adcb
push
xor
push
jmp
fildll
rcrb
stc
mov
sbb
jecxz
test
popf
push
lahf
fistps
fstpl
dec
inc
mov
push
int3
inc
xlat
add
cmp
mov
push
mov
in
push
xchg
xchg
pop
mov
pop
adc
push
les
sub
stos
sbb
ds
mov
pop
dec
dec
sbb
and
mov
divl
xchg
and
push
fmull
out
push
and
adc
lods
outsb
bound
cs
cs
cs
sub
cmpsl
sbb
sbb
sub
mov
adc
addr16
xchg
pop
sbb
inc
inc
pop
nop
sbb
xchg
xchg
out
xchg
out
movsl
xchg
sub
adc
jecxz
dec
sub
cltd
sar
mov
pop
push
cmp
adc
rcrb
cmp
adc
pop
cwtl
xor
icebp
cmpsl
cs
dec
pop
shr
shlb
sbb
sub
and
test
lods
xchg
and
ficomps
dec
sbb
aaa
test
andb
and
adc
or
sbb
sbb
mov
push
jno
iret
xchg
push
adc
and
fbstp
sbb
xlat
cwtl
sub
sub
sub
mov
jae
jb
cs
pop
push
lods
sub
adc
negl
sub
fisubrl
fnstsw
mov
push
fmuls
adc
adc
pop
fstp
movsl
mov
int
add
popf
popf
and
sub
lcall
shrb
push
mov
daa
test
sub
inc
scas
aad
or
adc
fistpll
mov
xchg
je
xor
jb
jl
es
dec
inc
inc
rclb
je
and
push
jge
mov
fildll
es
add
lods
mov
shrl
xchg
adc
xor
dec
and
xor
neg
xor
cmpsl
cld
mov
lea
hlt
push
or
fisttps
outsb
dec
stos
and
or
dec
push
outsb
lods
gs
fisubrs
mov
mov
cld
inc
sub
mov
mov
clc
xchg
xchg
cs
sbb
and
hlt
cmp
mov
fs
insb
xor
jae
push
fisttpll
mov
dec
mov
or
pop
jo
add
xchg
dec
mov
cmc
inc
mov
aad
fistl
and
push
push
dec
xor
sbb
in
nop
aam
push
pop
dec
cwtl
mov
sarl
loopne
loopne
adc
mov
into
cs
sub
lds
in
dec
iret
mov
pushf
jmp
cmp
shll
lea
sbb
dec
push
pop
psubd
shrb
xchg
mov
jmp
adc
xchg
fmull
pop
xchg
fdivrs
shll
pop
rcl
movsb
cmp
cmp
pop
pop
mov
loopne
push
sbb
jge
cs
mov
pop
adc
jmp
inc
loop
ljmp
inc
nop
lahf
dec
aam
jl
xchg
cld
rcrl
pop
aam
mov
push
hlt
mov
lret
jge
aad
mov
push
jb
and
dec
lahf
pusha
adc
stc
fcoml
sub
lods
outsb
mov
adc
loopne
mov
push
fnsave
xchg
push
push
jo
and
xchg
mov
sbb
dec
into
sbb
xchg
adc
xchg
push
ret
ja
jbe
imul
les
aad
out
mov
nop
rolb
sbb
adc
mov
arpl
shll
jge
push
inc
lds
xor
movsb
cs
es
sbb
fnsave
adc
xchg
xchg
lods
jbe
gs
adc
and
rorl
sub
lods
dec
dec
lcall
cltd
adc
fwait
mov
sub
rcll
xchg
mov
addr16
xchg
cmp
jl
insb
and
test
pop
insb
inc
xchg
fs
outsl
fstpl
mov
fs
test
sub
clc
cmp
jo
jl
xchg
push
dec
xchg
rcr
test
jl
and
mov
hlt
aam
push
sbb
xchg
jge
pop
lods
xor
push
adc
adc
pushf
pop
das
lcall
ja
pop
cmp
iret
and
jo
ljmp
into
inc
loop
add
lret
jns
ds
mov
jne
dec
and
push
rcrl
push
and
and
ficoms
popf
adc
pop
adc
xor
jbe
sub
or
mov
movl
adc
xor
sub
sbb
cmpsb
aad
pop
fxch
push
inc
std
lret
sub
mov
mov
xor
in
lds
arpl
scas
mov
popa
sbb
xor
mov
repnz
inc
push
je
push
popfw
ljmp
push
fwait
js
rcrl
jne
xchg
cltd
push
fwait
add
push
and
xor
xchg
nop
neg
imul
dec
rorb
adc
mov
push
movsb
cmp
mov
xchg
dec
xchg
xor
sub
enter
rclb
nop
lret
mov
mov
sbb
dec
inc
aam
jo
sub
xchg
adc
jle
or
jge
jg
jl
xorl
mov
dec
dec
xchg
mov
cli
pop
push
ss
xor
jge
fdivrl
sub
nop
xchg
dec
cmpsb
xor
out
xchg
xchg
and
mov
adc
insl
xchg
test
cmp
jno
add
sub
xchg
pop
xor
lea
lods
inc
dec
cmp
roll
xchg
testl
pop
xchg
imul
pushf
sub
popa
xchg
lds
in
call
adc
mov
fwait
fmul
push
in
push
es
adc
mov
int3
sub
into
orb
xchg
aam
pop
nop
fisubrs
sarb
sbb
mov
push
sub
lahf
iret
aam
mov
dec
and
adc
fdiv
pop
leave
xchg
jmp
test
test
rolb
pop
and
mov
adc
and
fdivr
jns
dec
hlt
nop
nop
mov
mov
adc
and
shlb
dec
daa
and
pop
mov
dec
das
sub
push
call
ret
neg
aad
dec
lods
inc
mov
fbld
aad
push
pop
js
pop
xchg
jmp
gs
dec
mov
cmovb
adc
jle
rcrl
cmp
xchg
or
xor
and
fsubl
hlt
dec
pushf
cmpsl
mov
mov
push
and
fldl
dec
je
dec
pop
xchg
cmpsb
push
dec
adc
mov
xor
enter
pop
jl
adc
cli
sbb
iret
xor
scas
adc
and
pop
das
adc
cs
mov
in
dec
mov
push
cmpsb
lret
jbe
sub
pop
lret
nop
inc
cmpsl
add
inc
outsl
sub
pushf
ja
xlat
jns
dec
popf
cwtl
mov
cld
aaa
lahf
hlt
mov
dec
das
dec
xchg
push
push
test
fbld
int
xor
pop
add
push
xchg
es
push
cwtl
or
push
imul
mov
sbb
adc
pop
jb
xor
or
int
fnstsw
rcrl
imul
lret
push
dec
mov
inc
xchg
cs
fdivl
sbb
push
dec
les
push
mov
test
insb
cmc
xor
mov
mov
push
std
mov
in
test
imull
fdivrs
fcomps
test
enter
adc
cld
neg
inc
adc
mov
xlat
in
mov
repnz
xor
pop
adc
and
in
scas
push
xor
je
hlt
mov
dec
jg
into
add
nop
div
call
pop
cmp
into
data16
scas
pop
pop
cld
mov
les
xor
pop
ficoms
cmp
in
mov
jo
fmuls
mov
xchg
insl
clc
cmp
pop
repnz
dec
push
jle
mov
xor
aaa
or
add
and
cmp
mov
dec
andb
arpl
push
inc
adc
jge
int
fnstsw
cmpsb
mov
add
dec
dec
push
and
inc
cltd
push
sub
jecxz,pn
lcall
and
shll
mov
arpl
or
mov
sbb
xchg
jg
bound
inc
xchg
xchg
aad
je
js
outsb
sub
xor
push
and
pop
xor
push
pop
adc
aas
out
into
or
fdivl
fstpl
dec
das
pop
jno
loope
subb
jo
and
das
sub
xchg
or
pop
pop
adc
sub
add
fidivrl
cltd
mov
icebp
hlt
subb
inc
xchg
or
xor
mov
xor
mov
adc
fnsave
repnz
sti
dec
inc
pop
mov
in
rcrb
ds
fidivrl
pop
pop
pop
adc
jp
pusha
cmp
add
fcompl
stos
fsqrt
sub
adc
jge
dec
inc
fldl
pop
mov
jg
xor
popf
mov
imul
sub
cmpsb
jecxz
cld
cmp
scas
outsb
pusha
cmp
inc
and
mov
std
adc
fldenv
cmc
jns
in
ss
or
daa
jge
pop
test
sbb
sbb
jo
push
in
push
pop
xchg
imul
push
and
popf
lds
dec
push
adc
xchg
test
mov
jge
adc
mov
mov
das
cmp
cs
xor
imul
and
popa
ljmp
xchg
xor
das
gs
mov
lea
push
jge
sub
ja
sbb
and
mov
stos
push
insl
fwait
inc
mov
negl
sbb
inc
fistl
icebp
sti
push
dec
cli
mov
into
cs
mov
lcall
gs
adc
test
push
sub
and
sbbb
push
mov
adc
xor
daa
test
das
cmp
push
aad
jo
push
cmp
icebp
dec
insl
sbb
pop
adc
push
hlt
and
mov
nop
out
jne
xor
xchg
inc
push
gs
cmpsl
jne
pop
popf
xchg
ljmp
pop
fs
push
mov
lods
lods
addr16
pop
adc
adc
in
sub
ret
add
cmp
int
nop
adc
das
lea
xlat
ret
mov
adcb
aad
mov
sub
jge
lcall
mov
mov
jmp
cmp
cmp
jo
sahf
dec
mov
test
xorb
fwait
shll
adc
sub
push
pop
or
bound
lret
dec
call
sahf
mov
mov
int3
fldl
xchg
ss
pushf
out
xchg
pop
push
fldt
push
sbb
adc
sub
sbb
mov
sub
sbb
sbb
push
cmp
je
ss
push
and
lods
cwtl
and
sub
and
lods
dec
and
scas
sbb
in
xchg
aam
xor
mov
imul
stos
es
sbb
add
lds
xor
and
cmc
lods
mov
push
scas
outsb
push
dec
aam
adc
inc
mov
les
mov
mov
xor
push
adc
sub
adcl
jne
mov
mov
movsl
fstl
mov
adc
les
fs
aad
jne
jo
sahf
pop
adc
sbb
xchg
xchg
xchg
or
xor
and
mov
popf
push
add
xchg
int
clc
adc
mov
push
int3
cltd
push
std
movb
jg
add
xchg
ja
sti
leave
fsubrs
adc
iret
and
cltd
cwtl
arpl
test
or
in
cmp
enter
push
jl
mov
inc
xchg
mov
rorb
std
and
or
cltd
dec
sbb
scas
sub
sub
movsl
mov
dec
int
lea
dec
adc
in
cwtl
pop
and
std
stc
lods
add
cmp
test
sbb
popf
xor
int3
and
sub
mov
aam
xchg
filds
outsl
fldt
sub
arpl
jp
cmp
push
fcomip
sbb
lcall
negl
jae
jmp
loope
out
sbb
jg
mov
mov
arpl
and
lods
jmp
cwtl
or
sub
push
jmp
push
or
or
lods
jno
dec
pusha
movsl
or
call
pop
pop
fstps
adc
and
xchg
jne
xor
cmp
push
push
and
pop
test
into
ffree
addr16
iret
ret
push
inc
or
insb
fildll
fs
shl
out
mov
xor
stc
xor
sub
dec
pop
xor
push
xchg
and
or
add
test
dec
xchg
clc
imul
shrl
jmp
mov
sbb
cmp
out
flds
dec
xor
ljmp
imul
mov
xchg
sti
mov
pusha
imul
xor
ss
outsb
mov
fldcw
adc
call
cltd
lret
xchg
and
daa
sub
sub
jecxz
ljmp
push
rorl
nop
mov
inc
pop
stos
aam
rclb
inc
pushf
popf
fstps
jnp
add
call
xchg
ss
jmp
mov
cmp
daa
push
leave
fistps
mov
push
push
fstl
out
iret
in
push
cmpxchg
dec
aaa
dec
enter
pushf
push
inc
xor
mov
dec
aam
js
xor
xchg
pop
adc
xchg
mov
sub
ss
mov
sub
aam
fnsave
lds
cmp
lods
or
xchg
ljmp
sub
stos
mov
inc
daa
cmpsb
jge
les
pop
inc
fists
ret
push
add
add
rolb
add
pusha
lea
jae
push
lea
jne
call
lea
je
jmp
pushw
popfw
movb
inc
pushf
adc
lea
push
pushl
ret
shl
btc
add
clc
mov
push
cmpb
push
jmp
xchg
mov
sub
adc
and
dec
cwtl
rorb
cs
ljmp
jno
xor
pop
enter
inc
mov
push
cmp
pop
pop
cmpsl
add
lock
pop
repz
push
fdiv
rcrl
popa
lcall
add
ja
push
shl
and
mov
cmc
cmp
test
cmpb
pushf
lea
jb
pusha
pushf
lea
jne
clc
sub
lahf
and
inc
bts
mov
jmp
push
cmc
test
pushf
jmp
add
inc
fs
jae
push
outsl
imul
jb
jbe
insb
gs
push
call
cmpsb
lea
jge
stc
bt
imul
push
mov
cmp
bt
add
pusha
movb
lea
jmp
push
enter
mov
cli
inc
data16
leave
int3
arpl
jae
push
shrb
inc
mov
mov
fcoms
outsb
lods
jnp
or
sbb
or
and
mov
rolb
mov
or
push
or
fisttpl
inc
cmp
mov
mov
xchg
loop
hlt
or
add
or
inc
sbb
stc
jb
mov
and
fcmove
fisttpl
movsl
and
bnd
cmp
test
mov
add
add
push
gs
insl
gs
push
add
add
mov
add
pusha
mov
movl
pusha
movb
pushf
jmp
ror
add
mov
clc
stc
cmc
clc
and
cmp
clc
push
add
movb
pushf
lea
jmp
test
pusha
pushf
lea
je
test
test
cmp
cmp
add
push
cmc
bt
cmp
movb
lea
jb
push
bt
cmp
pusha
lea
jae
xadd
mov
shrd
movzbw
lea
mov
neg
not
mov
test
call
cmpb
push
lea
jne
call
and
add
out
in
fs
adcl
out
cltd
sub
hlt
negb
push
fadd
sub
cs
daa
rcrl
iret
lret
test
popf
xor
add
scas
and
test
cmp
ror
mov
test
ja
lahf
jg
dec
enter
xor
mov
inc
into
cmp
dec
lret
add
pop
inc
fwait
jns
sbb
mov
jg
push
mov
inc
test
sbb
and
fs
je
jmp
call
add
dec
outsl
arpl
gs
jne
arpl
pushf
lea
jne
not
call
clc
pushf
mov
pusha
stc
and
pushf
cmc
call
stos
call
fwait
cmp
les
sbb
lcall
jne
lahf
and
out
pop
adc
inc
loope
mov
int
daa
mov
mov
xchg
hlt
cmp
ja
pop
xchg
pushl
lea
je
cmp
push
pusha
sub
pusha
pushf
pushf
lea
jmp
add
inc
gs
imul
js
inc
add
cmp
fs
je
btc
bts
mov
bt
pushf
call
lea
call
jmp
pusha
call
pusha
jmp
mov
inc
shlb
ja
mov
cmp
stos
inc
inc
cs
pop
dec
fmull
jbe
in
pop
iret
andl
fisttpll
mov
lea
cmp
sbb
or
outsb
and
adc
stos
test
subl
shll
or
out
repnz
leave
pop
lahf
test
es
add
popa
outsb
addr16
gs
imul
imul
dec
outsl
fs
xor
inc
imul
push
lods
lret
popa
inc
add
xchg
loope
lret
out
hlt
das
lods
push
ret
js
mov
jno
xchg
movsb
es
test
es
mov
test
pop
test
mov
mov
mov
cli
pop
test
lods
jb
ljmp
ss
pusha
movb
lea
ja
cmc
sub
clc
rol
sar
add
stc
mov
and
xor
sar
mov
bt
push
repnz
pushf
call
lea
jb
pusha
pusha
cmc
call
push
call
out
je
or
in
jo
add
lods
sar
mov
pushl
ret
add
inc
push
js
inc
add
or
add
jmp
inc
lahf
lret
mov
inc
ret
mov
orb
mov
mov
mov
inc
ficoml
aas
pop
in
test
and
mov
es
ljmp
mov
ljmp
push
insl
call
movl
jmp
push
test
shr
clc
stc
call
push
call
fbstp
outsb
dec
jne
gs
add
test
fstpl
movsbw
bswap
push
pop
pop
lea
push
mov
call
push
pusha
mov
call
mov
seto
dec
not
jmp
push
call
mov
jb
add
outsb
push
inc
dec
popa
outsb
popa
addr16
add
add
jae
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
gs
inc
inc
add
dec
insl
pop
mov
push
jp
in
mov
and
inc
pop
xchg
cmp
fucomi
adc
pop
loopne
sti
lds
sub
mov
add
andl
jecxz
cmp
out
or
ss
cmp
je
in
ret
sbb
lea
xchg
js
clc
mov
fisttpl
sub
movsl
jo
or
cltd
jle
mov
out
inc
jo
mov
pop
loope
push
je
pop
cld
lcall
pop
lret
and
push
loope
sbb
add
je
jae
outsb
arpl
jns
je
je
add
add
gs
je
inc
imul
jns
add
add
add
cmp
repz
bt
clc
stc
add
push
mov
push
setl
pushf
lea
pushf
mov
movl
call
lea
ja
jo
or
rol
sub
neg
not
add
sar
adc
mov
mov
not
ror
shl
mov
pusha
repnz
call
add
inc
insb
outsl
arpl
outsb
jo
je
add
inc
gs
dec
inc
imul
lea
call
add
dec
inc
push
gs
outsl
insl
jo
gs
inc
jb
insl
add
enter
sub
add
outsl
hlt
inc
movl
call
not
sbb
mov
cmc
jmp
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
neg
mov
sbb
neg
not
mov
stc
movb
repnz
call
pushf
pushl
inc
bt
stc
ror
jmp
pushf
pusha
lea
call
call
mov
and
movsbl
mov
jmp
add
push
gs
jo
outsb
dec
gs
add
out
movsl
je
shr
push
add
or
jmp
add
push
imul
insb
insb
outsl
arpl
pushf
pusha
mov
pushf
pushl
ret
dec
push
push
inc
push
xor
cs
dec
dec
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
lcall
add
jnp
push
mov
aaa
popl
pushl
cmp
lea
jns
pushf
movl
pusha
lea
ja
sar
shl
shl
shr
sub
cmc
add
not
mov
or
cmc
clc
mov
pushf
cmp
stc
repnz
call
clc
mov
pushf
jmp
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
gs
jne
xor
cs
insb
add
bswap
lea
call
not
inc
lea
push
pushf
inc
add
adc
mov
sub
xchg
bsr
pushf
mov
pushf
mov
lea
test
push
rcr
neg
btr
mov
pusha
mov
bt
sub
pusha
call
pop
popf
loopne
leave
push
cmc
push
inc
jbe
push
mov
imul
or
int
ret
and
xor
mov
cmc
jmp
mov
jnp
jle
inc
fidivl
fdiv
int
jl
ss
call
bound
xchg
nop
das
xchg
test
jne
in
add
hlt
add
out
pusha
fcomi
addb
insb
jae
jb
outsb
inc
add
fs
jne
clc
call
add
inc
outsb
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
popa
loopne
jmp
ljmp
inc
push
repz
pop
sti
cmp
push
out
ret
ljmp
pusha
jae
cwtl
in
push
testb
ret
sbb
jbe
mov
pop
aad
clc
bnd
push
adc
or
arpl
push
call
bound
fs
jb
jmp
lea
je
stc
cmp
pushf
pusha
sub
lea
jmp
push
call
inc
call
push
add
jae
insb
ja
jo
cs
insb
add
push
clc
xchg
or
test
push
pusha
mov
fcoms
lret
and
lods
jp
jp
xorl
gs
jnp
scas
adc
sbb
ja
mov
lret
loopne
les
fdivs
mov
jo
fdivr
orb
sub
add
push
inc
mov
mov
rorb
cmc
xor
cmp
mov
xchg
mov
inc
add
jno
lock
push
movsl
xor
cld
lods
jl
jge
sbb
cltd
mov
rclb
xchg
pop
add
sub
dec
xlat
stc
add
lret
and
mov
jo
loop
mov
xchg
repz
sti
add
movb
push
mov
test
add
and
aaa
test
rclb
pop
pop
mov
xchg
xor
fs
cmpsl
and
sysenter
mull
int3
jae
sbb
pop
fnstsw
loopne
cltd
lcall
and
adc
xchg
pop
jae
sbb
in
shl
hlt
insb
icebp
test
adc
ja
sti
data16
daa
sarl
sub
imul
imul
mov
xchg
dec
xchg
mov
sbb
push
cwtl
dec
mov
xchg
xchg
adc
xor
and
cltd
cmp
and
jae
xor
stc
and
rcl
mov
shrd
shrd
mov
lea
dec
test
stc
mov
cmp
bt
cmp
jmp
add
imul
arpl
je
add
jae
arpl
je
jmp
imul
gs
xor
cs
insb
add
shl
xlat
cwtl
test
test
out
repnz
push
lea
jne
xor
sbb
xadd
mov
btr
adc
or
sub
not
mov
clc
cmc
sub
pushf
clc
jmp
test
push
push
lea
je
bsr
shld
shld
add
not
btr
ror
mov
jmp
mov
xlat
cmpl
mov
orb
and
dec
cmp
mov
cmpsb
neg
fisubs
and
adc
mov
xorl
test
cmp
jp
and
leave
fisubs
add
inc
mov
cmp
js
add
sbb
mov
xor
push
movsb
call
mov
aaa
rcl
cmp
inc
pand
xchg
xor
push
add
push
inc
pushf
loopne,pn
aad
pop
add
mov
push
test
cmp
repnz
fwait
in
hlt
in
push
or
fidivrs
cltd
add
pop
and
sbb
jg
jne
jns
repnz
pushf
mov
shl
je
cmc
jae
insb
fbstp
loop
movsb
sbb
or
fiaddl
leave
push
xchg
sbb
jp
and
test
push
das
push
mov
aas
adc
lods
or
inc
fisubs
cmpsl
inc
cmp
ljmp
xchg
ljmp
inc
stos
cmc
bound
test
mov
add
xlat
out
inc
das
jle
fcoms
pop
orl
add
test
adc
add
pusha
push
test
cmpb
pushf
call
pushf
lea
je
test
call
lea
je
cmc
stc
pusha
movw
sub
clc
mov
cmp
call
mov
push
cmc
pushf
test
push
mov
lea
je
pushf
bt
jmp
call
mov
jmp
adc
iret
outsl
add
pop
dec
out
fsts
mov
sbb
in
loop
sbb
jl
fs
in
idiv
js
and
movsb
or
add
add
lea
jmp
push
call
imulb
fs
call
call
mov
movsbw
mov
bts
mov
cmc
sub
stc
clc
repnz
call
clc
ror
pushl
lea
call
test
jmp
mov
mov
pusha
lea
jge
pushf
lea
call
jmp
add
dec
inc
dec
jo
outsb
add
xchg
adc
add
add
gs
popa
fs
pushf
call
xadd
mov
cmp
shld
add
shl
sbb
mov
cmc
clc
push
add
pushl
sub
pusha
mov
cmp
jmp
pushl
call
call
add
dec
jo
outsb
inc
insb
imul
add
add
cmp
incb
fisttps
adc
push
push
loop
cmp
jg
xchg
mov
insl
add
sbb
incl
jecxz
mov
mov
push
pusha
push
cmpb
jmp
add
imul
fs
gs
outsb
je
add
stc
test
stc
add
pushf
mov
mov
lea
movzbw
pushl
bswap
setb
jmp
pushf
pusha
lea
jne
pusha
mov
shl
neg
bsr
sub
shrd
lea
cmp
pusha
sub
push
test
cmp
pushl
popl
cmp
cmp
pushf
pushf
jmp
add
push
jne
jb
push
gs
imul
imul
bsr
mov
pusha
sub
mov
adc
stc
xor
setne
push
mov
push
lods
pushl
stc
rol
and
sub
pushf
shl
neg
rcr
not
rol
push
rol
jmp
add
push
gs
imul
jb
popa
fs
scas
jp
add
test
sbb
cmp
cmp
pushf
pushl
call
mov
push
pushf
mov
pushl
ret
mov
pushf
pushl
ret
clc
jmp
mov
push
lea
jmp
gs
pushf
out
in
aas
aas
xor
add
mov
mov
pop
call
jp
dec
ja
nop
rorb
mov
pushl
stc
push
test
jmp
not
mov
jmp
mov
clc
xchg
shl
xor
mov
neg
mov
adc
call
mov
pushf
lea
jae
inc
add
and
test
mov
bts
mov
bswap
mov
cmc
pushf
sub
clc
stc
cmc
repnz
call
fwait
add
pop
mov
mov
lahf
mov
or
xchg
mov
mov
adc
dec
sub
jbe
push
fimuls
addl
das
push
movsl
lret
insb
push
mov
or
out
push
aam
mov
and
cmp
leave
xor
pop
mov
adc
xchg
filds
repz
les
outsl
scas
add
movl
jg
aaa
mov
adc
and
mov
int3
push
setno
aad
xor
push
call
mov
imul
or
into
adc
pop
pop
aam
ljmp
mov
sbb
fdivs
out
add
dec
popf
pop
cmpsl
jae
hlt
aas
push
popf
lods
cs
mov
adcl
push
lds
fidivs
xchg
add
mov
sbb
mov
cmpsb
pop
hlt
pop
mov
inc
aas
stos
xchg
stos
lret
push
dec
sbb
mov
jmp
sbb
dec
clc
cmp
lahf
xchg
iret
or
jne
push
call
punpckhbw
and
add
rolb
movzwl
sar
movzbl
mov
cmp
test
bt
add
pusha
call
jo
andl
mov
push
call
aas
ss
incb
xchg
mov
sub
pop
cli
fisubs
dec
inc
subl
ljmp
aas
rdmsr
test
dec
rorb
pop
popa
mov
add
popa
fs
imul
add
addl
jmp
loopne
mov
sub
pop
rol
inc
lea
outsl
stc
rep
xchg
adc
out
js
mov
repnz
aaa
ret
test
jns
sbb
popf
xor
jle
jne
adc
pusha
xlat
mov
test
out
xor
sbb
push
fwait
aam
sub
push
decl
fs
jne
not
movb
movzbl
push
lahf
movsbw
not
lea
jmp
dec
inc
mov
rol
ror
call
push
call
lcall
rcrb
mov
ja
jmp
mov
test
sub
pop
push
sub
outsl
and
sahf
ss
icebp
rcll
pushf
faddl
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
sbbl
adc
mov
mov
test
adc
btr
jmp
push
call
adc
sub
test
adc
pop
jl
cltd
loopne
adc
daa
mov
data16
xchg
stos
inc
inc
xlat
jle
idiv
cmp
adc
pushf
pusha
mov
adc
mov
mov
adc
xchg
xor
push
jbe
rol
sbb
inc
sahf
or
mov
mov
dec
push
cmc
adc
shll
testb
and
mov
repnz
repnz
stc
addb
push
aam
cmp
popa
sahf
adc
xchg
jmp
lock
gs
divb
or
repnz
iret
stc
enter
imul
ss
test
xchg
in
dec
insl
lcall
lret
push
add
sti
adc
dec
arpl
cld
imul
out
stos
adc
adcl
rdpmc
out
fsubs
in
inc
cmp
pop
sbb
js
push
mov
test
jmp
aam
mov
fs
sub
mov
inc
sbb
xor
mov
sbb
jbe
movsl
addl
cwtl
leave
pop
imul
xor
int
dec
and
cmp
sbb
add
gs
je
inc
imul
movl
add
fdivrs
mov
pusha
push
movw
jmp
add
push
push
inc
inc
gs
popa
jae
inc
jb
outsl
jb
repnz
push
and
lcall
push
lahf
push
sub
and
mov
dec
jae
leave
xor
cli
rcrb
insb
xchg
push
call
mov
push
call
iret
leave
nop
stos
push
lea
jmp
pushl
lea
ja
push
pushl
pusha
lea
jmp
std
aas
add
nop
or
lea
add
add
stc
and
or
add
pop
mov
repz
cmp
lea
add
adc
fs
cltd
cmp
lea
add
adc
cmc
sti
xchg
push
lea
adc
add
ljmp
xor
add
aas
add
nop
inc
and
lea
add
push
xchg
jnp
add
jmp
dec
lock
add
adc
sar
sub
add
sub
add
lock
pop
icebp
add
add
push
adc
aad
add
loopne
mov
xchg
add
or
mov
lea
add
nop
ret
pop
mov
lea
mov
add
rorb
pushf
hlt
cmp
add
adc
dec
lock
add
mov
cmp
lea
add
push
iret
cwtl
cmc
pop
aas
add
rolb
add
rorb
stc
mov
add
jo
fcomip
pop
das
add
adc
lea
add
add
cmp
lea
add
nop
add
add
mov
aas
add
adc
add
sub
decb
add
adc
clc
hlt
imul
add
rcrb
clc
sbb
add
add
inc
fwait
sti
fwait
mov
add
nop
repz
dec
popl
lea
add
sub
add
stos
pop
loope
cwtl
mov
add
dec
stos
jp
pushf
add
adc
adc
and
add
fwait
mov
add
mov
inc
incb
in
lea
add
fldt
cli
jo
add
push
and
mov
add
adc
sti
push
mov
lea
add
add
push
lea
into
add
jnp
cwtl
testb
add
addb
movsl
aas
add
nop
or
sti
ret
lea
add
add
mov
lea
inc
cmp
lcall
add
cmpsb
in
shll
add
and
jle
adc
add
rolb
jp
mov
cltd
xchg
add
adc
movsb
add
dec
outsl
popa
fs
imul
add
cmpsb
loope
push
pushl
popl
bt
stc
test
cmp
pushf
jmp
xchg
not
not
pop
movsbl
pushf
mov
pop
jmp
cmpb
pusha
pushf
pushf
pushf
lea
jne
push
xor
ror
rcr
sub
lea
mov
add
add
push
sar
sar
add
inc
jmp
jmp
test
add
stc
stc
test
cmp
jmp
add
dec
inc
inc
insb
outsl
jae
add
xchg
stos
push
fisubl
mov
data16
cs
fnstenv
inc
jge
jg
lcall
add
push
push
push
inc
adc
or
je
mov
out
mov
test
pop
and
sbb
rcl
les
rcrl
shl
loop
push
push
and
dec
fsts
jl
hlt
test
js
adcb
adc
mov
xor
dec
xor
push
movsb
mov
cs
mov
xor
aad
push
test
jp
jmp
ljmp
push
aam
clc
jp
pop
clc
les
clc
lcall
test
pop
loope
xor
cwtl
dec
popf
dec
mov
mov
out
mov
fucomp
xchg
call
jne
in
inc
test
js
imul
push
gs
scas
outsl
pusha
repnz
outsb
test
imul
jp
xchg
lea
lahf
add
xchg
jle
mov
mov
pop
mov
xchg
aas
je
ljmp
ss
dec
pop
mov
outsb
cmp
xchg
ss
pop
imul
lods
jmp
mov
ljmp
movw
call
cmp
jmp
stc
cmp
pushf
add
call
call
jne
pop
sub
xor
sub
das
in
sbb
jge
sbb
xchg
sar
mov
cmp
icebp
pop
lahf
out
ret
xor
mov
mov
aam
dec
ljmp
push
inc
dec
sarb
pop
shrb
or
lds
stc
add
cwtl
out
popa
lcall
cs
sbb
ljmp
lods
lret
clc
call
push
call
mov
add
push
gs
dec
jne
inc
add
lcall
add
out
mov
pushf
pushf
mov
call
lea
je
ror
call
push
lea
je
xadd
shrd
sar
movsbw
mov
cmc
pusha
add
push
stc
shld
mov
mov
clc
push
lea
jno
jmp
lea
je
bt
pusha
call
push
call
push
xchg
jbe
jo
xor
cs
insb
add
aam
aas
and
test
jmp
xor
lahf
pushf
mov
test
add
pushf
mov
pushf
lea
jmp
add
push
gs
outsb
jne
dec
gs
js
add
add
je
je
imul
inc
js
add
and
cmp
jmp
fsubrs
cmpb
gs
inc
test
lds
lcall
push
imul
sub
or
dec
pop
cmp
call
pushf
movl
movb
push
jmp
add
push
gs
gs
jae
inc
inc
add
xor
mov
pushf
mov
mov
pushl
ret
cmp
shr
cmp
cmp
jmp
push
call
jp
mov
add
push
gs
gs
gs
dec
gs
add
mov
not
mov
rol
movb
pushf
lea
ja
inc
bt
pushf
push
ror
cmc
pushf
pushf
shr
push
pusha
lea
je
pushf
call
or
xchg
inc
aas
cmpsl
or
or
inc
xlat
xor
das
xor
insb
pop
int
mov
pop
repnz
call
inc
cmpsb
call
scas
cld
push
mov
sub
repnz
daa
insl
sbb
sub
add
lret
dec
movsb
add
inc
gs
jns
je
insl
dec
gs
imul
push
inc
add
pop
mov
pop
pop
call
mov
mov
cmp
fsubl
sbb
adc
pop
adc
cltd
loop
inc
dec
stos
loopne
pusha
repnz
mov
ret
js
jo
xor
flds
and
fimull
mov
fs
lock
xchg
add
mov
int3
es
push
pop
jbe
xlat
add
or
mov
cmpl
inc
aas
test
out
xchg
add
aaa
and
xor
daa
xchg
stos
mov
aas
or
mov
sbb
fwait
or
sbb
add
shl
cli
pop
fisubs
roll
cmp
add
jmp
cmp
addb
nopl
outsb
stos
movsl
xchg
ror
mov
jle
jbe
leave
pop
pusha
lods
and
add
mov
les
pop
shlb
leave
jbe
jg
mov
addl
pop
into
int3
jmp
add
into
popa
cmp
insb
test
mov
ss
enter
push
xchg
add
push
bt
rol
stc
neg
pusha
push
clc
clc
not
bt
jmp
cmp
test
cmp
fstpl
xor
ret
dec
mov
js
mov
icebp
std
pop
pop
dec
vpmaddwd
hlt
push
push
mov
scas
or
ret
pop
mov
out
cwtl
cmp
dec
cwtl
shlb
xchg
cmp
daa
call
cltd
sti
add
repz
add
xchg
pop
pop
mov
and
call
je
cmc
pop
data16
int3
pop
lret
or
fs
out
jns
imul
bound
mov
adc
ror
fisubrl
divl
movsb
cltd
in
insl
sub
xorb
dec
and
cwtl
push
adc
pop
stos
mov
out
daa
pop
and
push
inc
mull
int3
xchg
sarb
cmp
stos
scas
add
gs
movsl
sub
mov
push
jle
pop
inc
daa
pop
in
sbb
daa
js,pn
ljmp
test
sub
cmp
imul
pop
repnz
leave
cli
jno
inc
js
xchg
xchg
test
andl
pop
lea
je
not
mov
test
add
stc
push
bsr
shld
push
bts
shld
cmp
mov
rol
rcl
mov
bt
jmp
cmc
call
add
push
push
js
arpl
gs
add
cmp
add
setg
pushf
seta
inc
mov
inc
inc
inc
push
mov
call
add
push
je
jb
push
gs
imul
fs
jae
call
pushf
mov
push
pushf
movzbw
mov
pusha
mov
pushf
pushl
ret
pushl
jmp
add
dec
jo
outsb
push
gs
imul
test
jmp
add
inc
gs
gs
push
gs
imul
imul
cmp
pushf
movb
call
mov
mov
lahf
mov
lahf
not
lea
mov
pushf
movl
pushl
call
mov
cld
mov
push
shll
inc
lods
repnz
mov
mov
inc
outsl
and
les
or
lods
cltd
or
xor
add
inc
gs
imul
push
jo
arpl
add
xor
fldt
loope
adc
xchg
xchg
lods
inc
adc
scas
jae
mov
popa
fwait
xchg
lods
sbb
lods
das
xchg
push
xor
pop
xchg
imul
cli
jl
or
fistpl
pop
dec
mov
cld
jp
movsl
and
inc
std
cs
adc
mov
jmp
add
addr16
outsl
jae
bound
popa
insl
add
repz
ror
jmp
lea
jne
bswap
xchg
bswap
pop
jmp
lea
jae
push
lea
jne
call
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
mov
jmp
push
or
push
bound
subb
push
xchg
or
clc
inc
push
cmpsl
mov
inc
aam
cmpsb
imul
sahf
iret
push
push
nop
aas
push
mov
fistpll
test
mov
cmpsb
or
xchg
or
mov
loope
jl
push
inc
mov
inc
roll
dec
cmp
sbb
adc
cmc
pop
fbstp
sarl
dec
pop
xchg
push
add
fistpll
add
add
pop
add
repz
add
inc
addl
mov
add
add
add
cmp
add
push
add
enter
or
add
pop
test
jno
add
xor
addl
add
cmp
add
adc
add
add
dec
add
or
add
add
add
jle
add
fs
add
add
add
add
popf
inc
add
mov
add
pop
jno
add
adc
add
add
add
outsb
add
js
add
inc
addl
add
add
xchg
pop
add
add
dec
add
mov
pusha
add
add
add
sub
add
jp
add
pop
xor
add
sub
add
pop
add
jmp
mov
add
xor
add
test
push
add
add
sub
add
xchg
test
arpl
add
adcb
aam
add
push
push
add
add
mov
stos
push
add
xchg
add
jl
add
add
jne
add
lcall
cs
add
add
add
jg
add
jnp
add
or
add
adc
add
push
add
add
jg
add
fwait
add
mov
jg
add
xor
add
add
addb
or
jg
add
push
add
add
add
mov
add
outsb
inc
add
sbb
add
or
add
add
add
out
add
ljmp
add
add
pop
push
add
and
add
fs
add
push
and
repnz
add
insl
add
adc
add
xor
add
decl
add
cmp
add
inc
sbb
adc
add
and
add
outsb
add
mov
pop
add
add
cmp
add
inc
dec
add
loop
add
mov
ds
movsl
xor
add
push
add
incl
add
add
jno
add
movsl
xchg
add
or
add
jb
add
pop
test
jno
add
insb
jno
add
test
push
add
cld
outsl
add
out
add
mov
inc
add
lcall
jl
add
add
xor
add
dec
add
xchg
xor
add
cmp
add
pop
add
add
addl
xchg
push
add
out
add
scas
xor
add
xchg
add
lahf
and
add
lahf
lcall
add
add
mov
xchg
add
popf
inc
add
sbb
add
adc
sub
add
sub
add
add
inc
add
sahf
pop
add
add
add
add
add
push
add
add
inc
add
add
add
and
add
mov
add
xor
ret
sbb
mov
dec
add
mov
add
sbbb
outsb
outsl
add
loope
add
mov
add
negb
add
push
add
xor
add
leave
cmp
add
add
add
inc
push
add
add
add
add
add
lahf
inc
add
add
add
adc
add
insb
push
add
add
add
add
xor
dec
xor
add
xor
out
add
jne
add
add
cld
xor
add
add
add
add
add
and
sti
adc
add
add
je
add
notb
xchg
add
sub
fistpl
add
add
add
xchg
inc
inc
add
add
add
fsubrs
add
int3
cmp
add
test
fcompl
add
add
add
fs
add
add
pop
push
add
and
mov
mov
or
scas
jne
out
mov
mov
inc
das
adc
lods
push
daa
jo,pn
bound
pop
cwtl
or
mov
sub
outsb
divb
leave
adc
shrb
mov
adc
test
test
clc
clc
jmp
call
lea
je
movsbw
mov
bts
stc
rcl
sub
adc
shr
shl
neg
rcr
mov
bsr
cmp
pushf
add
or
btc
add
btr
bsf
rcr
mov
mov
cmp
pusha
shr
call
cmp
call
test
pusha
push
movb
lea
je
cmp
clc
sub
push
push
push
pushf
lea
jmp
sbb
cmp
out
std
rcll
xor
inc
adc
adc
mov
daa
scas
test
fsubrp
lods
xor
mov
cmp
rorl
xor
sbb
ss
ficoms
inc
jno
popa
out
je
adc
hlt
jbe
dec
xchg
inc
pop
pop
mov
popa
ret
repnz
inc
gs
jns
je
insl
dec
outsb
outsw
add
in
idiv
jmp
pop
stos
dec
push
negl
and
scas
sbbl
shlb
pop
push
arpl
xchg
jb
clc
pop
pop
cmpl
testl
imul
add
fistpl
inc
inc
call
xor
adc
insl
xchg
mov
gs
mov
shl
mov
push
call
lock
pop
sub
fisttpll
into
xchg
push
lds
inc
adc
xchg
js
cwtl
adc
mov
icebp
push
mov
adc
mov
mov
movb
mov
lea
jmp
add
push
imul
jb
je
arpl
add
mov
clc
pushl
add
cmp
movl
jmp
pusha
lea
call
pusha
call
push
call
xchg
mov
pusha
leave
xchg
int3
and
push
push
cltd
jp
jge
out
stos
inc
jno
int3
push
in
pop
cmc
fildll
xchg
shrb
inc
ds
ret
insl
mov
mov
dec
mov
push
sbb
das
push
xor
dec
leave
pop
fstps
stc
or
push
test
mov
mov
mov
ja
push
imul
adcb
fwait
lret
sub
hlt
jo
xor
outsl
cmp
xor
mov
cli
push
sbb
mov
bswap
mov
movsbw
lea
pushf
movb
pushf
jmp
pusha
mov
movzbw
pushf
lea
mov
pushf
pushf
pushl
ret
not
bts
pushf
mov
or
add
stc
cmc
mov
lea
lea
aas
xor
mov
test
bt
cmp
test
push
call
test
xor
fsts
dec
dec
out
cs
cltd
addr16
inc
jae
inc
imul
mov
adc
add
lods
dec
xchg
idivb
and
fcmove
js
cltd
pop
rorw
jo
loope
sysexit
mov
push
cmp
test
aad
call
and
jmp
call
pushl
jmp
jmp
push
jmp
push
call
dec
inc
jae
testb
ficompl
jge
addl
jo
mov
repz
in
lods
jmp
add
fldenv
xchg
fisttpll
add
int
inc
adc
xor
sahf
adc
jge
test
sub
ja
inc
add
jge
add
or
sahf
jo
or
call
nop
mov
adc
js
sarl
sbb
scas
pop
inc
in
mov
add
int
das
mov
jmp
add
fnstsw
insb
out
fstl
inc
dec
sub
dec
jae
arpl
popf
jae
cmpsl
fcompl
dec
mov
mov
mov
mov
push
movb
pushl
ret
add
dec
outsl
popa
fs
imul
js
add
stc
call
lea
je
cmc
sub
pushf
lea
jmp
jmp
mov
mov
bt
mov
call
ret
and
pop
inc
int
adc
mov
imul
mov
shlb
adc
in
push
cld
xor
lcall
sbb
and
pushf
clc
push
cmp
test
or
gs
rcl
sub
out
cmpsl
rorb
mov
rolb
fisubs
leave
bound
in
xor
pushf
or
or
pusha
mov
clc
or
dec
rol
add
sar
mov
test
push
movb
clc
test
jmp
cmp
pushf
lea
je
pusha
pushl
pusha
pushf
lea
jmp
mov
lea
call
add
arpl
outsb
arpl
sub
call
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
fs
jne
pusha
lea
pushf
movsbw
movb
cwtl
jmp
pusha
lea
jae
cmp
sub
call
push
call
cmp
repnz
iret
cmp
bts
and
mov
push
cmp
cmp
and
jmp
push
shl
sub
setne
sub
add
test
mov
push
cmp
inc
ror
mov
test
stc
bt
repnz
call
push
call
flds
add
je
imul
je
add
insb
jae
jb
jo
outsb
inc
add
xchg
jmp
fs
jmp
scas
repnz
cmpl
das
sbbl
mov
stos
ljmp
sub
push
xchg
ds
xchg
jns
inc
enter
mov
sbb
sti
pop
fs
das
lret
imul
sar
xchg
push
ja
pushf
jp
lods
push
sbb
test
inc
sbb
and
xchg
jb
sahf
sub
sahf
dec
push
and
push
test
arpl
mov
adc
jp
add
addl
loop
je,pt
test
fsubrl
push
mov
cmp
jle
and
sbb
jbe
aas
cmpsb
mov
jp
fwait
inc
or
or
sub
adc
mov
xor
subl
pop
idivl
ja
inc
lock
lret
loopne
leave
mov
mov
pop
fsubrs
mov
mov
cmpsl
in
imul
pop
mov
in
xor
mov
mov
inc
stos
scas
into
je
mov
jae
inc
xor
xchg
ja
cmpsb
mov
inc
fildl
pmaxsw
cld
jg
gs
xor
cmp
inc
pop
jo
test
adc
subb
push
subl
cmpsl
mov
xchg
out
cli
jnp
cs
out
dec
ljmp
fcmovu
in
dec
cld
imul
jns
in
dec
xor
ret
dec
andb
pop
out
nop
jmp
mov
int
aas
lods
dec
xor
insb
or
sbb
outsb
sbb
adc
and
mov
jmp
jmp
pusha
pushf
mov
movzbw
pop
push
push
pushl
ret
push
call
popf
and
cwtl
add
inc
gs
outsl
jb
addr16
jne
fs
imul
test
push
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
in
dec
mov
sbb
adc
dec
adc
or
repz
repz
mov
les
movsl
into
popa
mov
and
test
fwait
in
xor
mov
ficomps
std
and
add
in
or
repz
fdivrs
out
stc
sub
aas
js
xor
bswap
test
push
out
fdivr
mov
mov
jge
mov
iret
jbe
push
xchg
or
idiv
jge
test
ljmp
push
mov
inc
mov
pop
sbb
or
mov
test
or
mov
aas
push
sti
xor
mov
jne
xchg
fadd
imul
imul
xor
cmp
sbb
mov
es
adc
xchg
and
outsb
and
inc
or
arpl
sub
jle
inc
lods
mov
lret
fisubs
mov
das
mov
aam
xor
mov
fimull
add
xor
mov
pop
ficompl
fs
loopne
jecxz
xor
ss
pop
int
push
nop
imul
inc
and
aam
jbe
out
push
loopne
add
push
out
or
daa
sarl
xorb
jmp
loope
movsl
jecxz
xor
sahf
mov
mov
loope
aaa
in
pushf
mov
push
mov
sbb
xor
lock
and
cmpsb
das
mov
fstp
mov
cmpsb
inc
xchg
xor
aad
sti
sbb
dec
or
add
cmp
shll
sbb
fwait
lods
or
aaa
inc
mov
push
gs
arpl
push
arpl
add
and
pop
inc
addr16
sub
pop
mov
repnz
push
jmp
cmp
jecxz
pop
jnp
jecxz
add
das
cmp
int3
out
mov
jbe
dec
cmp
aad
xor
adc
in
mov
dec
lret
pop
repnz
divl
divb
je
div
shll
gs
stos
cltd
mov
dec
std
inc
nop
mov
iret
nop
inc
shr
push
test
loope
and
scas
loope
pusha
enter
jg
out
xor
pop
dec
mov
jle
mov
xchg
mov
push
push
loopne
jnp
fistps
lahf
aaa
out
push
mov
xchg
and
mov
scas
mov
ljmp
out
and
lds
repz
loopne
mov
stos
adc
dec
xlat
mov
mov
nop
int3
pop
pop
push
mov
jbe
movsl
mov
push
dec
icebp
sub
mov
push
pushf
xchg
call
outsb
jle
push
mov
push
out
insb
pop
lea
mov
loopne
jmp
or
mov
shrb
pop
add
add
out
test
push
pop
mov
add
cmovns
hlt
loop
push
sarb
mov
movb
lea
je
neg
or
mov
or
shr
mov
mov
pusha
pusha
xor
pushf
shr
add
pushf
pushf
test
test
cmpl
pushl
lea
je
sbb
call
mov
sub
int3
pop
pop
jg
lds
movsl
jae
shrl
pop
jnp
or
vphsubdq
pop
dec
and
push
inc
and
insl
or
popa
adc
outsb
fmuls
xchg
rclb
xchg
adc
fnstenv
gs
add
lcall
mov
arpl
std
pop
out
inc
inc
xlat
xor
inc
sub
push
insb
movsl
es
mov
out
mov
dec
cmp
movsb
ss
or
aad
pushf
xchg
shl
out
scas
add
scas
test
jg
or
and
add
repz
fisubl
leave
mov
das
popl
dec
mov
xchg
repz
pushf
ret
pop
xlat
loopne
test
pop
or
les
push
push
es
pop
cmp
fwait
and
and
or
cmp
or
sub
mov
roll
repz
inc
adc
dec
js
loopne
push
add
jbe
daa
sbb
lods
xlat
jns
scas
faddl
push
xchg
nop
imul
aam
dec
push
dec
out
xchg
mov
sbb
cmpsl
add
sti
mov
int3
or
add
mov
insb
mov
hlt
inc
popf
lret
mov
push
int
jmp
mov
inc
sbb
sbb
mov
inc
push
stos
add
in
out
iret
movsb
rcrl
jmp
daa
lahf
sbb
scas
out
hlt
sbb
or
mov
insl
adc
mov
sub
add
arpl
inc
gs
jb
jbe
jb
gs
jb
jo
imul
clc
test
cmpb
pushl
pusha
lea
jne
setnp
not
shl
inc
xor
xor
lahf
sub
cmp
mov
sbb
add
jmp
jmp
add
inc
gs
imul
push
jo
arpl
js
add
add
mov
dec
push
inc
add
add
icebp
mov
pushf
pushf
pushl
pushl
ret
lea
je
call
jmp
call
xor
inc
fwait
scas
fdivrl
aam
and
pop
out
push
or
out
lods
dec
push
filds
pop
pop
sub
xor
scas
xor
mov
xchg
lcall
mov
stc
or
pop
mov
lret
in
ret
mov
pop
cs
daa
mov
sub
xchg
add
or
fabs
fimull
jg
out
inc
loopne
pop
xchg
pop
mov
adc
movsb
ja
popa
jne
xchg
jnp
jp
xchg
dec
out
pop
jbe
xorl
das
dec
enter
and
rolb
popf
filds
inc
jp
xlat
xor
sub
insb
push
sbb
or
jg
js
int
mov
lea
jne
pusha
pushf
lea
jmp
out
cmpsb
mov
sti
scas
dec
test
fwait
shll
shl
in
out
loop
lahf
adc
mov
cmp
push
push
xchg
push
shrl
pusha
push
call
add
lcall
fcompl
adc
subb
add
scas
adc
cli
mov
dec
in
and
cmp
push
add
mov
lds
and
in
inc
lahf
and
adc
add
pop
sbb
jb
xor
pop
add
mov
fisttpl
stos
jno
mov
add
loopne
xchg
xor
add
mov
adc
in
ja
xchg
rcrl
pop
mov
push
gs
push
incl
lahf
hlt
cmpl
fstpt
adc
arpl
push
insb
shrb
or
inc
mov
dec
loopne
mov
loope
jecxz
loope
shrl
fwait
andb
popf
icebp
insb
xor
or
loopne
lds
push
out
add
dec
movsl
pop
jns
enter
mov
adcb
in
stc
aaa
cmp
jno
xlat
push
fstps
das
leave
and
ds
mov
shr
scas
adc
xchg
dec
sarb
xchg
fldl
jecxz
ret
hlt
loop
jno
js
mov
cmp
cs
movl
ss
clc
push
mov
shrb
push
call
add
call
lea
jne
pusha
stos
mov
pusha
push
pushf
lea
jmp
add
push
gs
gs
popa
insb
jne
inc
js
add
insl
adc
pushf
push
lea
jb
stc
bt
jmp
add
arpl
gs
arpl
je
add
jae
je
outsl
arpl
jo
add
fs
jne
pusha
movsbw
lahf
jmp
push
call
repz
sti
add
push
gs
imul
add
fs
pushf
sbb
sub
dec
cmp
mov
daa
mov
in
xchg
xchg
xchg
cmc
lret
clc
mov
adc
xchg
pop
fs
mov
mov
pop
data16
jbe
dec
jmp
lock
loopne
popf
push
add
cltd
js
ds
push
lds
outsb
imul
in
inc
repz
cli
xchg
adc
add
scas
cmc
loop
icebp
fs
xchg
or
outsl
arpl
xor
fs
insb
add
add
test
cmc
add
jb
push
cmc
test
sar
push
not
rcr
mov
mov
shl
shr
inc
mov
clc
cmpsb
pusha
pusha
lea
jp
pushf
lea
jne
cmc
pusha
cmp
mov
cmpb
movw
jmp
push
call
xor
imul
insb
add
sti
sub
movl
call
not
movzbw
movzbw
lea
jmp
add
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
xchg
push
fs
mov
fsubs
mov
mov
mov
fisttpll
and
fcomip
or
and
cmp
movsl
pop
jmp
inc
outsl
stc
loop
sub
dec
clc
pop
mov
pusha
pop
xchg
dec
inc
push
pushf
xchg
insb
in
dec
mov
inc
std
cs
lea
pop
pop
mov
out
repnz
rcll
lods
bswap
cmpsl
lods
scas
adc
popl
mov
xchg
mov
jmp
addr16
stc
jo
push
inc
arpl
mov
cmp
in
filds
imul
pop
push
js
ja
adc
dec
xchg
pop
inc
jge
jnp
add
adc
in
xchg
das
jmp
sbb
inc
leave
sub
or
scas
sbb
lds
cltd
jo
pusha
or
jnp
js
shlb
or
mov
mov
cld
es
imul
or
inc
and
dec
fistpl
mov
push
push
jl
lret
dec
mov
cmp
xchg
and
arpl
sbb
adc
es
inc
std
dec
scas
mov
lcall
jne
jo
jo
add
or
lret
out
push
cld
mov
xchg
out
jmp
xor
into
incl
add
insb
push
outsb
ja
outsb
add
add
outsb
fs
gs
inc
imul
call
lea
jne
stc
sub
dec
and
rcr
mov
or
shl
sar
add
push
neg
sub
mov
mov
pushl
test
push
jmp
add
push
gs
outsb
jne
push
popa
insb
jne
inc
add
sub
call
add
inc
push
dec
gs
inc
add
add
outsb
jae
popa
je
dec
gs
popa
add
inc
aad
mov
ljmp
mov
insl
add
xchg
popf
mov
mov
jl
mov
push
pusha
jmp
ja
ljmp
mov
xchg
add
mov
mov
sbb
sahf
cmp
and
sti
test
in
movsl
add
sub
enter
stos
mov
mov
xchg
jg
daa
add
mov
stc
sbb
push
jg
cltd
mov
cmp
sub
popf
sbb
and
xchg
adc
adc
nop
xchg
in
aam
dec
loop
outsb
call
lods
imul
jge
xchg
add
sbb
daa
xor
in
fwait
cmp
sub
leave
pop
pop
xchg
nop
sub
insl
pusha
hlt
add
int
cmp
ja
jge
enter
lcall
sub
xor
setae
push
sbb
lock
arpl
lahf
aad
inc
es
rcl
popa
cmp
cmp
add
loope
cmp
add
inc
in
ret
sbb
loope
outsl
inc
mov
or
addr16
les
mov
loopne
test
mov
clc
not
mov
rol
push
push
pusha
movw
inc
jmp
mov
lea
je
push
mov
add
rcr
btc
cmp
test
mov
pushf
bt
stc
cmp
test
jmp
add
inc
gs
jne
jae
jb
outsl
jae
mov
mov
lea
jne
call
pusha
add
das
mov
arpl
repnz
icebp
push
inc
adc
lock
js
mov
inc
and
cmp
popa
test
sbb
fimuls
xor
ja
dec
mov
fmull
fcomps
jo
fisttps
jno
push
sbb
aad
js
mov
jno
jp
xor
jmp
icebp
sbb
inc
xchg
jge
repz
mov
add
outsb
mov
insb
jb
cmc
loop
cmp
pop
loopne
imul
add
xor
inc
insb
pop
repnz
int
daa
cmp
push
add
ds
sbb
mov
dec
jbe
daa
adc
outsb
enter
add
mov
inc
sti
mov
fnstsw
dec
jo
js
fs
mov
pop
add
lahf
in
or
into
adc
cmpsb
shr
pushf
cmp
cmc
cmp
push
pushf
call
add
call
add
inc
imul
outsl
ja
js
add
mov
add
pusha
lea
jmp
and
pusha
movl
pushl
lea
jmp
aad
lret
repz
cmp
jne
out
daa
jmp
jne
sbb
test
xadd
fidivl
ret
inc
lea
xchg
lock
loope
mov
mov
mov
es
push
jne
orl
lahf
dec
out
add
add
inc
js
je
imul
js
add
jae
jne
outsl
ja
add
inc
add
ja
pushl
xorl
je
sbb
aas
cmp
push
mov
clc
xchg
loope
insl
pop
mov
repnz
rep
mov
xor
test
pop
lret
js
repz
lods
subl
mov
jmp
mov
hlt
add
call
add
inc
gs
push
dec
outsl
arpl
add
pop
and
mov
pushf
jmp
lea
mov
movb
call
pusha
push
lea
jb
push
mov
push
pushl
ret
mov
mov
lea
je
cmp
pusha
jmp
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
adc
testb
and
lea
jmp
pusha
call
cmp
call
push
call
pop
pushf
lea
je
clc
sub
pusha
movb
mov
lea
jmp
push
call
out
mov
push
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
jb
jne
insb
push
jne
jb
add
add
outsl
jae
dec
popa
outsb
fs
add
lcall
add
sahf
shrl
lds
or
adc
addr16
mov
inc
lret
push
out
push
sub
lock
adc
cs
sbb
mov
lahf
aam
dec
lods
xchg
push
dec
inc
jmp
mov
cwtl
pop
jmp
or
xchg
xchg
sbb
fmull
xor
and
mov
jle
imul
out
dec
movsb
mov
and
leave
dec
push
shrl
shll
and
jbe
cmc
sbb
adc
xchg
lcall
lret
aas
or
cld
sbb
push
dec
mov
fistpll
mov
ds
loopne
aas
jmp
iret
in
insl
psrad
cmc
inc
popa
int3
jl
xchg
push
sub
fdivs
addr16
adc
add
xchg
sbb
daa
aam
xchg
or
lret
pop
pop
sub
sub
filds
cltd
hlt
dec
hlt
femms
jae
jmp
sbb
insb
mov
ficompl
rclb
jns
scas
inc
adc
lock
rcr
and
adc
fsubl
sti
jns
push
imulb
pop
lds
mov
and
int3
insb
inc
xor
popf
sbb
sbb
fildll
adc
pop
lods
mov
adc
push
stos
pop
adc
aam
sbb
cmpsb
xchg
mov
sbb
sbb
push
xchg
popf
xor
insb
popf
mov
std
pop
shll
test
mov
lret
jg
insl
and
pop
scas
mov
enter
xchg
or
inc
or
fwait
sub
or
pop
ljmp
das
push
pop
dec
cltd
mov
pop
jmp
addr16
jb
lods
je
mov
push
sbb
lods
and
jno
or
push
lods
faddl
adc
fsts
adc
inc
push
dec
xor
push
jnp
imul
fistpll
cmp
bswap
adc
lcall
loope
sahf
and
int3
rclb
frstor
lods
xor
sbb
int3
mov
fists
adc
lods
shr
int3
push
cmp
jge
pop
sub
adc
push
out
xchg
scas
adc
insb
fists
and
sbb
xchg
pop
hlt
or
jp
dec
sarl
xchg
fwait
cltd
sbb
icebp
and
cltd
mov
adc
adc
sbb
scas
lahf
xchg
js
lods
fnsave
cmp
mov
lods
inc
sbb
or
lods
int3
adc
fsts
mov
inc
and
adc
fbstp
push
ret
mov
adc
fst
sub
and
sub
pop
sbb
divl
xor
ds
decb
inc
mov
or
pop
fistl
lahf
inc
xorb
push
xchg
sbb
sbb
sub
mov
xchg
jp
in
shrb
jbe
push
push
lea
adc
fcmovbe
add
jl
std
sub
stc
lods
incb
dec
xchg
dec
movsb
pop
mov
push
loopne
mov
daa
mov
cltd
mov
mov
mov
pop
in
jecxz
dec
sub
pushf
xor
imull
pop
std
jmp
jo
outsl
add
and
cmpsb
inc
js
mov
mov
jae
stc
adc
mov
test
fsubs
mov
sbb
and
or
fdiv
pop
push
loope
test
add
mov
std
adc
xor
xor
notb
and
xchg
adc
aaa
mov
inc
sub
xchg
in
mov
pop
jmp
rolb
xchg
repz
std
aas
clc
adc
adc
pushf
lahf
fmull
adc
xchg
sahf
int3
adc
popf
rclb
adc
or
inc
sub
adc
cmp
inc
aam
jle
adc
push
sbb
filds
mov
rcl
cld
xchg
mov
fstl
popf
dec
and
lea
fcomps
dec
adc
xor
popa
adc
fs
jmp
dec
add
sub
jmp
inc
mov
pushf
cmp
js
out
xchg
adc
sbb
int3
pop
frstor
jg
jecxz
aaa
jbe
jmp
outsl
dec
push
or
or
fstl
fwait
sub
mov
dec
imul
call
gs
cwtl
sub
push
and
pop
push
fdivr
ret
mov
inc
lods
ss
xchg
fcomps
sti
mov
sub
jbe
sbb
mov
mov
fdivl
jmp
pop
rorl
cwtl
or
shll
mov
int
insb
mov
and
or
cmp
insl
inc
push
loope
cmpsb
mov
sbb
test
je
xor
cmc
shr
arpl
cmpsl
lea
int
test
fldcw
xchg
adc
add
outsb
and
sbb
push
gs
and
or
inc
push
dec
pop
sbb
fbld
lahf
or
pop
sarb
fucom
mov
repnz
add
mov
inc
enter
pop
pop
daa
jno
xchg
xchg
ljmp
and
neg
push
push
sar
mov
xchg
mov
or
sub
loopne
test
fsubrl
or
imul
fisttps
mov
adc
dec
sbb
mov
daa
sbb
adc
lods
in
dec
loopne
insb
xor
divb
test
push
xchg
fst
rolb
xchg
xchg
cmp
xchg
paddusb
lds
fst
lcall
and
xor
mov
push
inc
inc
pop
subl
fistpll
cmp
out
push
inc
xchg
mov
dec
xor
orl
xor
and
inc
inc
pop
inc
sbb
sub
cs
adc
xchg
xor
mov
dec
pop
adc
rclb
in
hlt
pushf
pop
fists
mov
fldl
adc
lret
aad
sub
stc
int
sbb
movsb
cltd
xor
sbb
daa
mov
add
movsl
scas
daa
inc
add
sub
fadd
orl
push
into
adc
insl
mov
ljmp
sar
pusha
pushf
cmp
rcrl
sarb
scas
lcall
enter
cmp
fwait
dec
xor
pushf
popl
leave
push
pusha
xor
lret
sub
shlb
fbstp
xor
inc
mov
xchg
xchg
sahf
jmp
repz
jno
push
frstor
ficomps
adc
lods
test
and
adc
dec
dec
in
cmc
je
loop
mov
outsb
mov
lods
pop
sahf
xor
je
add
mov
fsubrl
popa
aas
dec
sub
out
add
push
cmp
dec
pop
fs
js
or
dec
push
shrl
clc
fs
add
adc
lods
lods
mov
mov
rcrl
sti
mov
dec
add
mov
lods
daa
and
lea
sub
mov
cmp
xor
mov
push
xchg
xchg
fidivs
aam
std
clc
sti
push
jns
fldcw
lcall
fistps
lods
test
scas
mov
adc
fmul
out
inc
push
rcrl
xorb
mov
push
ja
dec
lret
push
mov
les
fbstp
mov
scas
mov
or
push
jno
clc
mov
mov
sbb
orl
enter
jg
enter
mov
dec
mov
add
test
dec
outsl
pop
lret
nop
push
cmpsb
add
insl
inc
xchg
imul
xor
dec
pop
mov
push
mov
sbb
mov
pop
arpl
dec
mov
sub
in
lods
daa
je
aaa
adc
jl
inc
mov
fists
test
dec
es
xchg
outsl
cli
std
hlt
push
push
jle
push
xor
push
dec
sub
stc
fwait
pushf
push
andb
sub
push
popf
or
xchg
pop
adc
mov
iret
pop
sub
fbld
inc
sahf
sbb
stc
aaa
pop
test
mov
fmuls
aam
cmc
xchg
filds
jbe
pop
std
loope
cld
and
repnz
imull
shlb
mov
dec
out
mov
pop
mov
mov
xorl
adc
jae
jecxz
jbe
stc
lock
lods
xchg
sub
push
inc
nop
mov
xor
push
adc
cwtl
add
test
data16
push
pop
mov
sbb
inc
rcll
and
cmpb
jmp
jl
es
or
arpl
push
jb
adc
sub
xchg
sbb
xor
stc
pop
shr
add
hlt
xor
cmp
out
dec
xor
pop
scas
inc
xchg
repnz
jle
jo
rcrb
push
mov
sub
and
outsl
adc
neg
lds
push
jp
cwtl
pop
mov
adc
xchg
dec
fmull
jle
lahf
loop
sbb
lods
pop
or
pop
or
pushf
rcr
popa
xor
stc
pop
jge,pt
and
push
fcompl
push
xchg
mov
jp
mov
faddl
cli
sbb
dec
jmp
pop
inc
xor
and
push
inc
ret
and
pop
jl
ds
xchg
inc
nop
je
xor
jo
push
fdivrl
push
sbb
insl
mov
fildll
xchg
mov
dec
sub
pop
sub
push
xchg
jnp
mov
sbb
mov
movsb
aas
loopne
sbb
xchg
and
push
mov
leave
push
pop
addl
fistps
sbb
jmp
ror
test
pop
sbbb
loop
adc
mov
into
push
jl
filds
dec
xchg
gs
xchg
inc
push
js
addr16
xchg
nop
and
inc
fistpll
add
xlat
pop
aad
arpl
fs
dec
fwait
push
cmp
push
les
jl
sub
push
out
popf
xchg
int3
repnz
pop
push
std
lock
or
cmp
fs
lret
xor
inc
xor
xchg
mov
push
adc
sub
je
ret
fistl
push
cmp
pop
int3
mov
popf
mov
push
and
xor
adc
inc
outsl
jp
lods
xor
daa
movsb
xchg
aad
xorb
mov
movsl
push
cmpsb
rclb
in
add
in
dec
fs
fstpl
jbe
and
sbbb
lea
je
das
fldcw
rcll
scas
dec
lods
and
cmp
idivb
mov
xchg
cmpsb
mov
ds
xor
inc
setne
sub
lret
cmp
add
iret
sub
lods
and
fstpl
cld
movsl
jno
xor
sbb
adcl
jno
push
push
addl
in
orb
dec
insb
sbb
jl
out
pop
mov
cltd
je
mov
std
std
push
cwtl
insb
push
std
or
add
fstpl
into
sti
xchg
push
hlt
dec
stos
loopne
cmc
jg
jno
xor
scas
push
pop
aaa
push
cwtl
pop
movsb
lods
dec
xchg
jge
add
push
std
mov
arpl
and
sti
icebp
aam
xchg
adc
fistps
xor
enter
ss
out
fs
mov
cltd
adc
adc
lea
mov
xor
inc
mov
sti
in
insb
cltd
add
lods
popf
stc
mov
mov
cmp
pop
std
lods
sbb
pushf
xor
push
nop
sub
pop
pushl
jl
dec
hlt
xor
aam
stos
sti
test
cmp
test
std
cwtl
or
ret
addr16
aas
fldl
out
cmpsb
adc
adc
jae
ret
nop
out
cwtl
cltd
movsb
icebp
push
sub
xchg
add
std
sub
call
cli
fdivl
fs
cmpsb
pop
jl
sub
lods
xor
sti
out
jae
or
nop
sub
xchg
fsubl
jge
data16
out
daa
clc
mov
xchg
pop
add
in
into
inc
mov
lcall
std
repz
mov
lods
cmp
outsb
dec
jg
inc
push
stos
push
inc
jge
mov
xchg
xor
dec
sbb
push
jg
push
int3
notl
shr
je
cmp
cmp
cmp
fsubl
jns
adc
mov
pushf
xor
cmpsb
adc
mov
adc
adc
mov
cld
mov
movsb
sub
les
fdivl
xchg
fistpll
or
int3
daa
adc
fimull
mov
pop
and
ret
cli
stos
xor
mov
shl
and
lock
clc
lahf
ds
pusha
or
push
jmp
adc
mov
cmp
ret
sbb
imul
jecxz
into
dec
cld
sub
ror
xchg
push
or
jecxz
loop
cmp
loop
add
push
inc
mov
push
into
xchg
lods
fistpll
fmull
jecxz
sbb
aam
lock
pop
mov
dec
mov
fidivrs
sub
cmp
jne
movsb
lcall
test
xchg
data16
dec
icebp
cmp
icebp
pusha
aam
jae
pusha
out
loope
cmp
adc
lods
loop
cmp
push
fmull
adc
adc
std
test
test
xor
jne
dec
popl
push
and
and
mov
push
or
sahf
mov
in
xor
jbe
inc
out
xchg
jge
std
rorl
test
mov
mov
int
pushf
lea
sbb
mov
loope
inc
sub
jne
loopne
sub
xor
sub
stos
cmp
cmp
push
xchg
cmc
dec
addr16
das
bsf
push
sub
test
adc
popf
adc
arpl
or
out
mov
fs
xor
roll
inc
cmp
mov
int
imul
and
cmovs
test
leave
divl
jmp
jecxz
add
push
mov
lods
psllw
adc
test
xor
xor
adc
nopl
les
push
fistps
lahf
xor
std
cmp
in
daa
inc
icebp
add
jmp
push
dec
cmp
jo
jmp
int3
scas
mov
jge
jne
adc
subb
fsubl
lcall
xchg
push
scas
adc
xor
adc
rcr
aam
xchg
push
cmp
fmuls
aaa
pop
mov
mov
scas
ja
push
add
pop
ficoml
mulb
adc
push
fstp
push
dec
sub
mov
sub
sub
imul
fadds
lods
mov
stc
movsl
ud2
mov
pop
bndstx
adc
sbbl
sbb
xchg
cmp
aam
adcb
mov
mov
xlat
sub
fwait
pcmpgtd
lea
mov
inc
xchg
pop
int3
aam
pop
icebp
mov
push
jl
jb
lods
daa
and
in
xchg
jns
adc
loopne
mov
lock
aam
push
psrlw
sbb
mov
mov
mov
jmp
sti
sub
mov
mov
mov
scas
ja
mov
cmp
jmp
jl
roll
test
popa
cs
arpl
adc
cmpl
dec
in
inc
inc
orl
mov
or
cld
push
cmpsb
jl
push
cmp
into
sahf
nop
mov
movsb
sub
bound
and
lods
jl
fadds
cmp
lahf
setl
push
es
sbb
xchg
sbb
dec
xchg
idiv
push
inc
loope
testl
push
push
push
nop
sbb
notl
inc
aaa
mov
mov
sbb
mov
and
and
cmp
jmp
fcompl
or
fwait
or
xor
rolb
push
add
sbb
loopne
sbb
addb
inc
fdivrl
xchg
mov
push
adc
cmc
pop
mov
cs
daa
jae
ficoml
aaa
outsl
adc
inc
je
int3
fsubl
and
lret
jb
test
ret
jp
push
loope
fs
jae
roll
call
cmp
adc
in
icebp
daa
xor
sbb
shll
ret
fisttpll
clc
sub
pop
mov
stc
xchg
in
fs
mov
aas
insb
dec
stos
mov
scas
mov
popa
or
adc
dec
sbb
nop
sub
mov
xchg
or
dec
sbb
iret
or
ja
je
and
outsl
incb
fmull
out
xor
out
jecxz
fsubrs
mov
out
fstpl
xor
outsb
xchg
dec
jp
mov
sti
les
mov
mov
lahf
sti
das
dec
lods
in
sbb
xchg
ret
enter
pop
pop
fnstsw
in
inc
adc
sub
or
jne
sbb
xor
xor
es
movsb
cs
loope
aaa
sub
sbb
inc
cmp
mov
xchg
push
inc
xor
ss
mov
push
mov
inc
outsl
inc
xor
fldl
mov
xor
sub
enter
rcr
mov
lret
mov
cmc
inc
pop
mov
pushf
ficompl
lds
int3
test
in
mov
mov
xor
mov
and
xor
cmp
jno
xchg
adc
and
inc
shl
xchg
cmp
pop
scas
rcl
in
cmpsb
mov
pop
test
flds
pusha
pop
testl
negb
lret
xor
pop
cltd
cmp
int3
dec
pop
jnp
std
ffree
lret
and
test
incl
xchg
clc
fildll
sub
rcrl
xor
stos
mov
sbb
xchg
out
or
inc
lods
xor
sub
mov
test
push
push
insl
call
push
std
cmp
pop
jg
xor
pop
sbb
out
push
sbb
sbb
cmp
adc
mov
lcall
adc
pushf
sub
cltd
cmp
scas
inc
push
frstor
push
cmp
push
xor
pop
mov
movsb
pop
popf
adc
imull
movsb
lret
insl
pop
js
sub
mov
xor
adc
imul
int3
sub
mov
push
mov
cmp
pop
cli
ds
pop
xor
fists
mov
sub
and
sbb
pushl
frstor
outsl
or
mov
adc
xor
insl
xchg
fnstsw
jle
pop
dec
mov
sbb
repz
fsts
inc
push
in
sbb
int
cmp
mov
test
and
aas
push
sbbb
mov
push
imul
pusha
std
jnp
popf
or
push
out
icebp
xchg
cmp
xchg
mov
xchg
rcr
sti
add
lock
stos
lods
mov
mov
fstl
outsb
lock
sbb
add
in
sarb
ficomps
mov
filds
sub
push
jle
push
lods
push
xchg
lea
stos
std
loope
hlt
jne
adc
adc
jmp
imul
jge
enter
xor
sbb
jg
push
mov
mov
push
jnp
aad
popf
xor
loop
pop
adc
test
cwtl
gs
adc
sub
outsb
mov
testb
mov
repz
xlat
je
cmp
sarl
pop
das
movsb
adc
movsl
fsubrl
sbb
lods
lods
sbb
push
popf
dec
sbb
mov
rcl
nop
fnstsw
loope
es
dec
fildll
sti
imull
jle
cmp
cltd
mov
fldl
sub
pop
mov
jl
mov
test
movsb
pusha
or
xor
or
pop
mov
xchg
ja
outsl
in
jl
add
fdivl
dec
push
aas
lods
popf
or
xchg
or
jl
jmp
and
mov
push
or
and
mov
movzbw
inc
push
btc
rcr
add
xor
mov
cmc
dec
not
sar
mov
pusha
cmpsb
push
pusha
call
mov
popa
mov
insb
fildll
pop
adc
mov
inc
in
xchg
mov
dec
inc
lods
mov
dec
sbb
sbb
popa
push
cmpsl
popf
sti
xchg
mov
sbb
sbb
or
cmpsl
push
mov
inc
sbb
jmp
sub
jge
sbb
stc
dec
jns
add
enter
mov
je
jmp
jp
scas
scas
sbb
dec
mov
jg
sbb
insb
fwait
addr16
mov
add
dec
lret
iret
push
pusha
dec
fsubrl
mov
cld
jle
movsb
dec
sbb
or
pop
jo
cmpsb
inc
in
es
sbb
adc
cmp
sbb
scas
add
fildl
inc
test
cmp
inc
adc
in
popf
pop
fldenv
inc
das
dec
push
add
sbb
pop
jne
stos
jp
insl
in
push
or
dec
mov
cli
push
in
dec
imul
bound
xchg
les
nop
stos
bound
and
loope
leave
sbb
push
lcall
fadd
lret
mov
outsb
pop
push
and
outsl
sbb
cmp
dec
shl
test
inc
xlat
ficoml
pushf
ret
cmp
inc
mov
stos
adcl
scas
pushl
push
call
add
inc
imul
push
gs
jb
outsl
jb
outsl
fs
jno
ljmp
cltd
mov
scas
dec
add
xchg
pusha
pushf
lea
jae
clc
stc
xor
push
pusha
lea
jnp
push
lea
call
pushf
call
push
call
pop
adc
dec
aas
xchg
dec
and
cwtl
sub
pop
jge
xor
add
mov
inc
push
cmp
push
call
sbb
aam
aaa
or
xchg
mov
push
push
mov
stos
in
filds
mov
movb
ja
xchg
cmpsl
jecxz
out
xchg
sub
lret
cmp
sahf
inc
sahf
cmp
aam
add
dec
aad
aaa
lods
into
cmp
xchg
insl
mov
and
enterw
dec
xchg
mov
fs
shl
bound
jle
or
sub
inc
adc
push
mov
mov
or
rclb
repnz
add
xchg
jbe
stc
outsl
mov
inc
pop
mov
nop
mov
lret
cltd
cmp
call
push
seto
mov
mov
mov
bnd
pushf
mov
push
mov
xchg
mov
imul
xor
mov
mov
in
mov
adc
movb
inc
jmp
imul
int
cmp
or
sbb
pop
je
xchg
push
test
mov
and
int
sub
sbb
xor
sbbb
jge
add
mov
fsts
rcrb
rolb
lds
fidivrs
sub
pushf
notl
or
scas
push
pop
aam
loop
xorl
fadds
shrb
gs
js
shrl
stos
test
xor
adc
in
adc
andl
jg
ds
mov
mov
fsts
pop
rcrb
fimuls
roll
scas
sub
dec
adc
push
xchg
push
daa
pop
aaa
mov
imul
gs
sub
add
fnsave
fstpt
loop
ss
pop
pop
divb
sub
out
scas
clc
cli
clc
fdivrl
out
das
and
and
cmpsl
out
and
cli
sbb
mov
xor
cmp
pushf
push
mov
push
lea
je
push
cmp
jmp
insb
and
adc
ss
out
bound
mov
into
push
sub
jl
mov
jge
movsb
mov
into
cmpsb
mov
fimull
gs
mov
cld
in
xchg
add
jns
cmp
or
nop
lahf
in
xor
pop
inc
roll
or
cltd
or
add
shll
lea
jne
pusha
movsbw
not
pop
mov
pop
mov
pushf
lea
jne
stc
bt
bt
movzwl
sbb
call
clc
cmp
xor
clc
cmc
repnz
jmp
test
pushf
call
mov
call
lahf
mov
movb
push
pop
push
lahf
jmp
jmp
add
dec
jae
imul
jae
bound
pushf
call
call
add
push
gs
push
inc
outsl
outsb
je
js
add
push
pushf
push
pushl
ret
lea
jne
pusha
cwtl
lahf
cwtl
movb
push
bswap
bswap
mov
cwtl
lea
pushl
jmp
pushf
jmp
bt
pushf
mov
test
pusha
push
push
call
cmp
pushf
call
xor
test
clc
repnz
push
lea
jne
btc
cmp
adc
inc
mov
shl
ror
sub
clc
bswap
mov
pushf
sub
jmp
pusha
mov
pushf
dec
cmp
cmp
movb
bt
shl
pushf
call
add
dec
outsl
jbe
inc
imul
adc
pop
and
bswap
pushf
pushf
mov
pushf
not
jmp
push
call
jo
aaa
mov
jae
gs
popa
insb
jne
add
xchg
mov
popf
je
xchg
sti
stos
jmp
shlb
jl
pop
jbe
cmc
je
out
in
cwtl
jb
insb
stos
jl
movl
or
or
aam
js
jmp
nop
lret
int3
sti
js
jo
dec
fxch
jbe
lret
popa
incb
inc
or
popa
fs
insb
cmc
nop
adc
popf
ret
mov
js
xchg
in
sarl
sub
mov
add
jb
arpl
call
add
push
gs
jne
jae
jb
outsl
jae
ljmp
dec
and
or
add
or
adc
outsb
repz
pusha
or
scas
lahf
das
pop
xor
aas
dec
ficoml
std
test
and
adc
pop
dec
mov
pop
adc
dec
xchg
add
add
xlat
xor
mov
js
cmp
aad
pop
data16
adc
pusha
lea
jmp
add
inc
gs
jb
jbe
push
jns
gs
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
lea
je
btr
sbb
inc
add
shl
btc
ror
mov
bswap
shr
shrd
pushf
mov
sar
mov
call
lea
jne
push
cmpb
pushf
pusha
push
lea
jne
movsbw
lea
jmp
pushf
lea
call
pushf
mov
push
pushf
pushf
lea
jmp
loopne
mov
push
jne
pop
out
xor
jbe
xlat
js
mov
xor
arpl
dec
fsubs
and
loopne
and
repz
mov
rcr
add
pop
mov
xchg
xor
les
mov
push
popa
inc
sub
jp
fadd
fidivrl
rorb
cmp
leave
adc
int
push
call
ret
ja
movb
lea
call
push
lea
jbe
pushf
pushf
lea
jb
pusha
pushf
pushl
ret
cmp
clc
movw
test
jmp
add
push
jns
inc
jb
gs
je
imul
gs
imul
cmp
cmp
cmp
call
call
bt
clc
cmpsb
call
add
push
outsb
push
gs
js
gs
imul
gs
push
jmp
add
inc
gs
gs
outsl
popa
jb
push
jns
add
mov
and
jne
dec
cmp
bt
sub
rol
mov
ror
add
ror
add
sub
stc
shl
mov
cmp
pusha
movw
movw
test
jmp
lea
jne
push
not
movb
call
jns
test
sub
movsl
jg
cmp
aad
std
fs
jecxz
stos
outsb
mov
loop
mov
ljmp
int
jmp
and
rorb
push
adc
orb
mov
fbld
or
xlat
out
jmp
adc
into
adc
xor
inc
adc
lcall
inc
popf
dec
cmc
fists
pusha
sub
fdivr
ljmp
cs
mov
movl
push
pushf
call
lods
stc
jmp
add
inc
imul
outsl
push
jns
je
insl
push
imul
lea
jp
pushf
lea
je
mov
cmc
mov
not
test
shld
mov
test
call
lcall
int
cmpsb
rcrl
cltd
loop
sbbl
ja
push
add
lds
jb
scas
or
je
jno
sub
ret
xchg
lods
mov
divl
dec
pop
xor
jnp
mov
push
aad
jecxz
pop
out
cmpl
aaa
daa
int3
and
jmp
lcall
cmp
in
ja
or
add
sete
pop
mov
int3
bound
sub
je
xor
sub
adc
mov
stos
mov
movb
dec
cmc
sub
pop
test
mov
sahf
jmp
insb
rorb
inc
in
pop
movsl
cmp
dec
and
xor
movaps
jge
imul
mov
dec
fstpl
dec
cld
cmp
xchg
push
negl
cmp
sbb
outsl
or
add
sahf
push
fsubr
inc
dec
enter
pushf
fdivl
bound
and
sub
and
pop
aam
adc
adc
mov
push
and
int3
sub
dec
or
fistpll
mov
int
test
rcrb
xchg
in
fldt
test
jbe
shrl
faddl
add
je
imul
std
decl
gs
dec
rorb
push
sarl
aad
add
xchg
add
xor
stos
sub
popf
scas
out
fldenv
and
stos
std
or
inc
cmp
aas
xchg
testl
popa
out
sub
sbb
repz
inc
mov
pop
faddl
and
sbb
mov
std
es
enter
push
call
ret
pop
pushf
sub
bt
cmp
pushf
pushl
lea
jae
pusha
lea
jmp
pusha
xchg
test
sbb
not
lea
pushl
mov
clc
push
pusha
clc
mov
call
add
inc
outsl
jo
inc
imul
add
mov
lea
call
call
call
cmp
push
movb
lea
ja
cmp
xor
shl
sets
sub
movzbw
lea
jmp
add
inc
insb
outsl
jae
inc
insb
imul
add
cmc
cmp
shr
movb
call
test
pusha
call
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
add
jne
push
gs
imul
je
jae
add
add
add
add
add
add
add
add
add
jbe
add
jbe
add
add
add
add
jbe
add
imul
mov
inc
leave
pushf
pop
outsl
xchg
pop
mov
je
fsub
stos
arpl
or
daa
mov
jle
mov
jle
imul
jns
movsb
jbe
fists
xlat
push
mov
jg
inc
add
inc
jae
arpl
test
aas
pop
daa
pop
cmp
scas
call
inc
fstpl
fisubs
stos
push
out
jbe
lods
dec
enter
movsb
dec
test
add
pop
sub
ja
in
arpl
xlat
ja
sbb
jmp
insb
popf
fs
fidivrs
rorl
and
sbb
add
add
cmpsb
jbe
std
clc
jmp
aaa
jge
pop
mulb
mov
dec
xor
daa
ja
rcrb
int
jno
pop
je
cmpsb
call
pop
in
dec
xchg
int3
stc
cmp
fisubl
fdivs
gs
mov
ret
int3
je
in
popf
cwtl
pop
pop
cmp
sub
adc
add
inc
mov
and
out
fucomip
adc
loop
jle
cwtl
data16
mov
les
add
shll
jecxz
lods
outsl
stos
shrl
inc
and
lret
imul
or
aaa
pop
xor
sbb
cmp
lods
sub
cmp
addl
es
jo
mov
movsl
in
cs
xchg
rcrb
out
push
mov
mov
mov
movl
mov
and
dec
jns
sub
and
in
or
mov
shr
lea
sbb
xor
lods
ds
inc
pop
addl
push
ret
cmp
inc
xchg
cmp
test
aas
xchg
data16
adc
or
mov
adc
pop
dec
xor
dec
push
mov
and
ret
movsb
add
sahf
in
push
imul
fstl
sbb
xor
sub
lahf
das
pusha
mov
shl
xchg
pusha
inc
fiaddl
jb
out
jbe
out
insl
iret
sub
jge
outsl
mov
cmc
mov
mov
adc
cmp
dec
jae
push
movsl
fnstcw
imul
cmp
idivl
or
xchg
inc
inc
les
inc
adc
lea
enter
cmp
nop
mov
mov
std
adc
orb
inc
push
sbb
loop
jg
jp
mov
adc
pop
cmpsb
push
add
mov
inc
insb
push
test
sub
fdivr
jnp
pusha
jecxz
cld
test
popa
dec
out
mov
lods
inc
or
test
std
pop
testl
jns
push
cmpsl
push
jbe
stos
push
dec
out
sbb
inc
fimull
sub
and
imul
out
stos
xor
pop
pusha
dec
sub
out
adc
mov
push
das
rorl
sbb
hlt
scas
shlb
ficompl
xorl
sub
xlat
mov
mov
mov
fwait
decl
push
loopne
rorb
stos
sbb
std
jmp
jnp
push
sub
and
cwtl
dec
cmp
xchg
insb
xchg
or
sub
iret
movl
add
je
fidivrl
dec
xor
icebp
enter
mov
jle
in
ret
loop
scas
dec
cwtl
inc
mov
test
mov
adc
jbe
jmp
int
cld
xchg
jbe
aaa
imull
stos
popa
scas
push
jo
pop
repz
inc
adc
push
call
sub
adc
in
aaa
dec
xor
mov
ljmp
aam
lock
and
sbb
ss
int3
sub
mov
test
mov
test
mov
mov
out
sub
and
xchg
in
or
int
dec
mov
mov
xor
jp
xor
adc
lock
pop
lret
outsb
mov
rolb
cli
lahf
pop
xlat
xchg
adc
inc
xchg
inc
enter
das
ret
dec
call
in
jne
push
lea
mov
pop
and
std
gs
or
out
mov
lret
not
jp
cli
into
inc
sahf
mov
adcl
mov
mov
xchg
pop
xchg
pop
leave
cmp
cwtl
lock
addr16
ljmp
das
or
push
in
cmp
clc
loop
scas
in
into
enter
fldl
dec
es
dec
fmul
and
sub
pop
fwait
movsb
outsb
test
out
into
stos
xor
xor
push
clc
jbe
mov
adc
andb
and
das
mov
sarb
or
cmp
sub
push
mov
loopne
ja
or
movl
mov
inc
pmaxub
scas
mov
push
or
xor
mov
or
dec
mov
stos
lret
cmc
mov
mul
lods
arpl
mov
push
inc
adc
out
in
jecxz
movsl
psubsb
xchg
push
inc
cmp
xor
mov
sbb
adc
jns
sbb
repnz
sbb
pop
das
out
fsubrs
arpl
idiv
mov
outsb
and
call
xor
inc
inc
jmp
lods
inc
mov
sbb
or
ret
stc
or
lret
dec
dec
mov
aam
push
mov
insb
adcb
sbb
mov
iret
mov
and
mov
stos
cmp
jmp
dec
mov
scas
aam
push
sbb
pop
ds
pop
mov
add
fcom
add
adc
push
cltd
or
clc
mov
dec
and
sti
inc
push
bound
stos
push
dec
out
sub
sub
inc
push
out
pop
jbe
sbb
add
in
icebp
out
cmp
xchg
adc
in
aas
jmp
adc
rcll
sub
sbb
jle
xor
jmp
rolb
xorb
mov
scas
cmp
icebp
insl
add
sub
addr16
cmpl
in
mov
push
out
inc
icebp
or
lea
mov
mov
cmp
jl
sbb
and
addb
or
sti
mov
cs
xlat
cs
ret
xor
xor
jb
xchg
imul
sti
mov
inc
sti
mov
movsb
sti
aad
push
inc
adc
cmp
mov
pop
xor
add
mov
leave
shll
adc
xorl
jp
sbb
hlt
cmp
sub
pop
fcmovnu
fwait
lret
cs
sub
mov
dec
sub
sti
fnsave
pushaw
das
add
in
fildl
jp
sub
jge
shrl
push
movsl
inc
icebp
lea
adc
in
jo
or
loopne
mov
dec
pop
fisubl
arpl
pop
or
push
cmp
cwtl
movsb
pop
inc
lahf
xchg
fnstsw
int3
xchg
lahf
jbe
insl
and
xlat
pop
test
cld
push
clc
fbld
lods
dec
lahf
jmp
adc
push
mov
insb
cmp
sub
mov
xchg
arpl
or
rorb
jbe
add
pop
push
push
mov
inc
xchg
fadds
call
add
or
xchg
jp
loope
pushf
in
shlb
xchg
cltd
dec
nop
popf
push
outsb
notl
xor
clc
xchg
cmpsb
scas
fwait
movsl
out
repnz
inc
int
dec
cmp
in
sbb
xlat
ja
push
xor
or
icebp
adc
jbe
cwtl
int
mov
in
xor
xor
lods
mov
mov
and
pop
scas
mov
arpl
orb
mov
push
movsl
inc
add
outsl
inc
jl
dec
mov
pusha
push
jb
gs
and
sti
aam
scas
std
push
xor
mov
je
mov
into
nop
stos
jge
push
cmp
dec
gs
adc
lret
fs
xor
jnp
rcl
subps
or
sahf
add
ss
movsb
fisubs
jno
mov
in
shlb
int3
int
test
push
popa
lods
fcmovnbe
adc
ja
jbe
xchg
mov
iret
push
sbb
push
aaa
fisubrs
rorl
lock
mull
jbe
movsl
ret
aam
movsb
rorl
cwtl
sahf
lahf
jns
cli
out
lds
fmulp
repnz
dec
jne
ljmp
cwtl
mov
push
idivb
xchg
lods
adc
adc
mov
out
dec
and
xchg
mov
pop
sub
jnp
inc
inc
cli
mov
sbb
outsl
aaa
xlat
in
repnz
mov
retw
push
cwtl
scas
neg
sub
fst
mov
ficompl
arpl
inc
int3
cmp
mov
mov
sarb
ja
jo
push
mov
adc
lods
jp
inc
loope
dec
mov
mov
mov
pusha
cmpsb
clc
pusha
es
xlat
rorl
cmp
lods
dec
and
fadd
xor
mov
xchg
das
sbb
mov
int3
adc
data16
mov
and
cmpsb
or
lods
out
std
outsl
daa
les
mov
or
popf
jnp
loop
call
or
sub
mov
stos
or
jns
bound
js
fbld
in
jmp
inc
xlat
imul
ret
cmp
dec
stos
out
sbb
aas
and
jge
hlt
push
dec
push
mov
push
dec
insl
mov
mov
fcmovne
cmp
fmulp
xor
mov
or
adc
std
sub
mov
ja
jge
cs
mov
cmp
lahf
shl
ja
cmp
imul
pop
add
pop
call
out
mov
dec
adc
jle
cmp
push
mov
jge
dec
ret
pop
cmp
jbe
arpl
and
mov
fnsave
ljmp
add
repz
mov
inc
daa
mov
icebp
mov
pop
imul
call
push
xchg
jp
clc
pop
adc
inc
adc
cmp
jnp
sti
mov
sbb
pop
mov
addr16
pop
add
movsb
mov
push
in
push
jecxz
loopne
jmp
stos
movsl
pop
test
adc
push
mov
lds
or
ja
cmp
xor
inc
mov
insb
adc
fwait
push
mov
mov
mov
jnp
gs
icebp
lock
mov
adc
mov
sub
cmp
shll
pop
mov
push
xor
lahf
xchg
add
mov
sub
arpl
sbb
add
sub
imul
mov
jl
ftst
mov
jle
mov
add
jmp
gs
hlt
mov
lcall
mov
pop
adc
pusha
inc
mov
icebp
jmp
ret
adc
bnd
test
in
or
arpl
andb
aam
pop
mov
mov
clc
je
je
outsl
clc
adc
cmp
dec
mov
add
cwtl
sub
insb
hlt
iret
repz
shl
sbb
into
add
mov
push
adc
cmp
lods
fimuls
jg
cmp
pusha
inc
dec
pop
cmpsl
in
xor
es
cmp
lret
mov
shll
in
push
jmp
pop
xchg
jne
sbb
cmp
jne
ljmp
lods
pop
mov
aas
in
xor
pop
push
dec
nop
scas
jmp
iret
xor
and
cmpl
fadds
mov
mov
hlt
push
leave
pop
cmp
push
adcl
fstl
mov
sbb
cmp
xchg
sub
jge
inc
xchg
sbb
push
jecxz
les
mov
hlt
dec
test
cltd
adc
loope
divl
or
in
pop
fwait
xchg
ficoml
in
rcll
daa
push
mov
cmc
or
mov
andb
dec
out
stos
test
add
push
gs
imul
js
inc
add
insl
mov
xchg
and
lret
nop
ret
cltd
xchg
jnp
shll
insl
enter
aad
enter
arpl
lock
out
add
inc
jb
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
adc
scas
jl
cmp
ds
jp
scas
adc
xchg
jne
js
inc
and
inc
out
out
bswap
mov
adc
cmc
hlt
or
lea
sbb
movsb
in
xchg
inc
into
ds
push
daa
cmp
adc
mov
cmc
test
in
nop
inc
adc
mov
push
lret
gs
sarb
out
lcall
je
js
je
outsl
fs
jb
arpl
jae
mov
xor
les
adc
push
aaa
fdivp
je
clc
inc
pusha
inc
sbb
sbb
add
stc
mov
not
pop
sub
adc
and
jg
lret
data16
mov
filds
or
mov
add
push
jmp
push
call
jo
rcrb
dec
gs
popa
addr16
add
mov
ret
jb
bt
cmp
pushf
jmp
jmp
inc
clc
ror
bt
call
add
inc
gs
gs
inc
imul
incl
add
inc
push
jo
popa
inc
add
cltd
or
call
xor
dec
add
lea
jne
pushf
mov
movb
jmp
add
inc
gs
outsl
fs
gs
imul
add
cmp
rorl
cmp
cmp
mov
cmp
push
pop
ljmp
sti
icebp
xchg
mov
gs
mov
shl
sub
dec
fistl
add
rcr
in
stos
lea
test
xor
cmp
int
jns
xor
xor
mov
jmp
fisttpll
pop
rorb
and
call
pusha
pushf
call
test
cmp
jmp
add
push
ja
jo
outsl
jne
gs
jne
je
outsb
add
pop
sub
pushf
or
lds
cmp
mov
dec
and
in
cmpsb
sbb
in
inc
gs
mov
clc
mov
dec
xor
mov
gs
pop
pop
les
mov
jp
sub
or
sub
sbb
int
jp
jl
mov
insl
insb
test
loopne
int3
in
sub
mov
add
jb
jnp
mov
fucomi
or
pop
out
push
mov
dec
mov
ds
push
push
sbb
mov
out
ds
cmpsb
sbb
je
icebp
jp
mov
sbb
dec
push
jmp
jg
inc
enter
xchg
jmp
enter
stos
sbb
ret
dec
push
add
aad
outsl
sub
or
add
icebp
repz
jle
loopne
iret
dec
pop
out
pop
adc
xor
sbb
xchg
mov
stos
push
test
sub
add
scas
jbe
add
repnz
adc
cs
pop
cmp
mov
arpl
dec
dec
mov
aad
outsl
test
mov
inc
mov
fcmovnu
aad
std
mov
lods
fs
jbe
add
cmp
rcrb
cld
cmpl
dec
dec
test
xor
test
xchg
movsb
jbe
mov
xor
lods
push
ljmp
xor
mov
pop
adc
xchg
add
scas
rclb
add
aad
sub
push
xor
push
scas
ljmp
mov
mov
loope
sti
inc
aam
fdivs
sub
ja
addr16
sub
test
pop
cwtl
xchg
add
pop
gs
pop
push
and
sbbb
add
sarl
insb
daa
pop
and
mov
jne
pop
dec
lods
nop
push
lret
inc
sti
dec
pi2fw
cwtl
jns
mov
push
ja
ret
enter
add
sub
lds
out
inc
adc
xchg
js
sub
jns
cmp
test
shlb
xchg
jne
gs
xor
fs
insb
add
cltd
mov
call
lea
jne
call
add
inc
imul
outsl
ja
add
sar
scas
pusha
pusha
lea
jne
adc
stc
bts
stc
mov
clc
xor
sub
shld
mov
pusha
sub
movw
pushl
popl
pushf
pushf
bt
cmp
call
lea
jae
inc
setl
mov
jmp
addl
pushl
pushf
pushl
push
lea
jmp
xchg
cmp
push
aam
shrb
cmc
cmp
mov
inc
pop
sub
inc
jmp
lcall
clc
pusha
iret
mov
inc
adc
push
push
js
sub
cld
jle
fidivl
jmp
mov
stc
cmp
pusha
call
pusha
movb
pushf
mov
ror
bt
lea
movb
stc
mov
jmp
lea
jae
shld
sbb
mov
pusha
and
cmc
neg
mov
jmp
mov
movsl
xchg
inc
pop
adc
insb
popa
mov
addl
adc
xor
mov
aad
inc
or
pop
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
incl
add
addr16
insb
outsl
jae
dec
gs
pushf
test
add
pusha
pushf
mov
push
test
call
mov
push
ljmp
add
mov
lcall
fildl
cmc
sbb
sbb
movb
mov
scas
and
mov
adc
lods
js
sub
test
pusha
loope
mov
test
cmp
jmp
stos
pushf
mov
push
pusha
lea
jmp
lea
jne
cmp
push
cmpb
call
xchg
jno
dec
cs
dec
and
mov
cwtl
rcrb
lock
pop
mov
mov
negb
xor
sbbb
in
jg
inc
mov
int
push
or
into
daa
fildll
ror
ljmp
pop
clc
into
int3
std
jg
dec
dec
add
adc
in
add
mov
inc
inc
inc
sub
fwait
push
jp
ret
int
movsb
inc
pop
and
mov
pop
jns
mov
push
pusha
jb
sti
inc
loope
sub
mov
xchg
sub
and
and
or
rorb
dec
xchg
int
ljmp
outsl
in
cmp
pop
and
sbb
sti
ret
hlt
scas
in
cmp
outsb
xor
fldcw
mov
push
loop
rcrl
xchg
aad
sbb
xor
mov
and
sahf
sbb
cs
cmpsb
hlt
addr16
pop
sbb
xor
out
sub
or
cmp
sub
pop
repnz
test
call
pop
pop
sbb
out
cmp
mov
lock
inc
out
nop
xor
sbb
push
add
outsl
xor
sub
in
lea
je
test
jmp
add
pushl
mov
jmp
mov
loop
jg
xchg
xor
add
cs
or
fstpt
lods
jo
into
hlt
xchg
int3
inc
lods
test
test
xor
nop
or
pop
fwait
xchg
stc
in
inc
xchg
jns
dec
lods
push
les
ja
int3
push
xchg
lds
mov
dec
dec
add
scas
repz
popa
movsl
push
lret
cmpl
add
lcall
adc
mov
dec
cmp
pushf
pop
sbb
stc
into
mov
popf
pop
xchg
lret
loop
mov
orl
in
push
xchg
in
lods
pop
push
add
fdivl
xchg
filds
push
popa
aas
pop
cmp
cli
inc
data16
jns
and
xchg
cmp
add
loopne
add
inc
add
add
jb
jne
insb
inc
jb
gs
mov
jge
ss
enter
loope
scas
xchg
lods
iret
fs
adc
mov
jl
mov
rolb
enter
stc
jno
jnp
stc
add
movsb
mov
pushf
mov
and
andl
xchg
pop
mov
cli
sub
xchg
mov
sti
mov
xchg
test
notb
fidivrs
stos
imul
and
mov
shrb
adc
mov
or
lahf
lea
jne
push
jmp
lea
jae
push
pusha
cmc
cmp
mov
mov
jmp
call
mov
in
ret
pushf
pop
stos
xchg
dec
cmc
imul
inc
jp
or
loopne
rcrb
stos
popf
xchg
and
loopne
add
or
aam
mov
fldcw
out
sub
mov
adc
arpl
mov
pop
inc
stos
leave
test
xchg
adc
cld
inc
ja
push
xor
adc
or
push
pop
cmp
pop
sbb
in
lret
ret
and
xchg
leave
sbb
pop
ret
mov
jg
adc
jns
inc
and
lock
in
xchg
mov
orl
jg
lret
or
lret
push
and
enter
xor
sbb
in
dec
aam
push
push
cli
push
inc
adc
icebp
js
sub
jmp
stos
ret
adcb
xor
rorb
push
cmp
aas
sti
jmp
lods
lret
pusha
inc
mov
clc
cmc
pusha
bt
cmpb
jmp
inc
fsub
xor
mov
ret
or
sbb
push
mov
fdiv
stos
push
loopne
cs
int
or
pop
push
push
ffreep
leave
test
push
rcl
lods
xor
xlat
and
cmp
sub
pop
sbb
pop
mull
add
xchg
cwtl
ficoms
cli
pop
bnd
fcompp
jmp
jge
xchg
ret
icebp
sbb
sbb
xchg
mov
test
push
push
pop
xchg
jb
xor
std
icebp
adcb
mov
add
jge
mov
fldt
ja
fisubl
aas
clc
mov
jae
cltd
out
push
lods
jae
inc
xor
hlt
dec
leave
adc
push
int
or
pop
lcall
and
push
scas
inc
loop
sub
sbb
test
ret
sbb
jb
xor
adc
js
sbb
mov
icebp
xor
sub
cmpsl
pusha
shlb
adc
xor
push
aam
push
sti
loopne
mov
test
xchg
mov
cwtl
adc
clc
cmc
sbbl
and
imul
lods
aaa
lret
dec
mov
pop
out
xchg
push
gs
push
jle
test
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
push
push
add
jmp
dec
xor
jns
mov
jne
jp
ret
adc
mov
fistpll
cmp
pop
adc
sub
jne
adc
mov
inc
out
rol
add
adc
cmp
mov
mov
mov
loop
sbb
xchg
icebp
xlat
and
insb
push
mov
ja
xchg
xor
notb
sahf
xor
ss
sub
and
imul
pop
test
pusha
xorb
lret
insb
lods
fiadds
or
jl
insl
gs
dec
cmp
jno
add
jmp
rorl
push
push
add
jnp
inc
dec
jns
cld
outsb
mov
push
or
in
leave
xlat
pop
out
es
mov
int
sarb
enter
imul
sbb
push
lock
cmpsl
orps
lret
mov
cmp
mov
jg
jle
jg
cmp
pop
xchg
loopne
jge
jl
mov
mov
inc
inc
adc
jg
mov
or
xchg
jnp,pn
pop
sub
add
lcall
cmp
inc
jbe
call
mov
outsb
mov
in
mov
xchg
sub
mov
jmp
jp
pop
jg
cltd
insb
pop
shrl
jbe
xorl
xchg
sbb
mov
inc
fistps
leave
lahf
dec
or
pop
cmp
pusha
jmp
movl
mov
lea
js
movsbl
pushf
lea
mov
push
lea
jne
test
call
add
inc
jb
popa
je
dec
jne
gs
add
cmp
aas
test
mov
scas
mov
pmaxsw
xlat
push
cli
lock
mov
std
lods
outsl
bound
les
inc
and
pushf
cmp
pushf
lea
ja
ror
cmp
sub
bts
sar
add
bts
lea
or
xor
mov
clc
add
mov
pushf
push
repnz
pushf
jmp
add
inc
gs
gs
je
je
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
sub
pop
cwtl
lcall
stc
movsb
loopne
idivl
pop
insl
pop
xlat
cld
sub
shlb
adc
sarb
int
insl
push
xlat
pop
sub
jno
scas
pop
out
xor
sarl
loop
aam
jnp
dec
push
lahf
mov
lds
sarl
add
dec
out
out
fistpl
xor
jmp
hlt
aad
add
shrb
dec
mov
cmp
dec
lret
and
aaa
pushf
mov
pusha
stos
cli
jns
rorb
mov
pop
ja
lock
imul
mov
scas
ret
adc
xchg
or
test
cs
pop
arpl
aad
jbe
push
mov
aaa
jbe
mov
out
sbbl
xchg
fwait
cmpsb
mov
jmp
push
inc
mov
inc
stc
and
add
cmpsl
cmp
pop
add
cs
cltd
add
pushl
dec
rcrl
adc
aas
dec
mov
jge
adc
rorb
push
or
and
mov
xchg
subl
push
push
mov
sub
sbb
idivl
and
daa
sub
pop
sub
xchg
mov
or
xchg
add
jb
das
mov
pop
dec
andb
enter
addr16
adc
enter
inc
imul
daa
xchg
jnp
aam
cli
sbb
cmc
pop
inc
lcall
rorb
lock
stos
out
gs
jns
mov
out
cmc
mov
int
sarb
mov
fcmovu
jns
shll
push
cmp
sub
add
mov
aam
imul
fs
insb
add
add
gs
je
inc
dec
inc
push
arpl
outsb
add
gs
insb
xor
cs
insb
add
add
je
gs
je
jo
imul
add
outsb
fs
gs
jne
arpl
add
add
je
je
dec
popa
outsb
fs
add
add
outsb
add
jecxz
inc
loope
aaa
jecxz
xchg
out
dec
jl
loop
aas
dec
lock
out
shlb
mov
or
ret
mov
pop
push
dec
mov
or
inc
enter
sub
push
cld
fwait
xchg
pop
cli
mov
sbb
or
mov
jecxz
inc
ror
or
cmp
fisubrl
js
out
push
mov
and
into
pop
jp
pushl
fcompl
sub
push
mov
mov
xchg
jnp
jg
outsb
stc
jo
ret
adc
mov
stc
rol
call
add
add
pusha
jmp
mov
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
pushf
push
call
lods
xchg
push
add
fistpll
add
add
pop
add
repz
add
inc
addl
mov
add
add
add
cmp
add
push
add
enter
or
add
pop
test
jno
add
xor
addl
add
cmp
add
adc
add
add
dec
add
or
add
add
add
jle
add
fs
add
add
add
add
popf
inc
add
mov
add
pop
jno
add
adc
add
add
add
outsb
add
js
add
inc
addl
add
add
xchg
pop
add
add
dec
add
mov
pusha
add
add
add
sub
add
jp
add
pop
xor
add
sub
add
pop
add
jmp
mov
add
xor
add
test
push
add
add
sub
add
xchg
test
arpl
add
adcb
aam
add
push
push
add
add
mov
stos
push
add
xchg
add
jl
add
add
jne
add
lcall
cs
add
add
add
jg
add
jnp
add
or
add
adc
add
push
add
add
jg
add
fwait
add
mov
jg
add
xor
add
add
addb
or
jg
add
push
add
add
add
mov
add
outsb
inc
add
sbb
add
or
add
add
add
out
add
ljmp
add
add
pop
push
add
and
add
fs
add
push
and
repnz
add
insl
add
adc
add
xor
add
decl
add
cmp
add
inc
sbb
adc
add
and
add
outsb
add
mov
pop
add
add
cmp
add
inc
dec
add
loop
add
mov
ds
movsl
xor
add
push
add
incl
add
add
jno
add
movsl
xchg
add
or
add
jb
add
pop
test
jno
add
insb
jno
add
test
push
add
cld
outsl
add
out
add
mov
inc
add
lcall
jl
add
add
xor
add
dec
add
xchg
xor
add
cmp
add
pop
add
add
addl
xchg
push
add
out
add
scas
xor
add
xchg
add
lahf
and
add
lahf
lcall
add
add
mov
xchg
add
popf
inc
add
sbb
add
adc
sub
add
sub
add
add
inc
add
sahf
pop
add
add
add
add
add
push
add
add
inc
add
add
add
and
add
mov
add
xor
ret
sbb
mov
dec
add
mov
add
sbbb
outsb
outsl
add
loope
add
mov
add
negb
add
push
add
xor
add
leave
cmp
add
add
add
inc
push
add
add
add
add
add
lahf
inc
add
add
add
adc
add
insb
push
add
add
add
add
xor
dec
xor
add
xor
out
add
jne
add
add
cld
xor
add
add
add
add
add
and
sti
adc
add
add
je
add
notb
xchg
add
sub
fistpl
add
add
add
xchg
inc
inc
add
add
add
fsubrs
add
int3
cmp
add
test
fcompl
add
add
add
fs
add
test
mov
fsubr
push
xchg
incl
and
add
push
pusha
lea
jmp
sbb
out
jne
push
aad
test
negb
adc
nop
jecxz
mov
sbb
cld
addr16
cmp
and
cwtl
test
jp
dec
cmp
aaa
inc
rclb
ljmp
sub
imul
mov
mov
mov
adc
mov
rorl
mov
mov
push
sbb
jg
or
pop
inc
xlat
add
in
mov
in
int
adc
mov
shl
lea
call
push
lea
jmp
push
call
int3
andl
outsl
insl
jo
jb
push
je
imul
movb
lea
jne
cmc
inc
shr
mov
shrd
sub
and
rol
jmp
add
inc
gs
jae
jb
popa
insl
gs
add
aaa
sar
incl
add
imul
jb
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
insb
je
push
push
xchg
call
shlb
add
sbb
mov
add
add
xchg
add
pop
xor
add
sub
add
xchg
add
push
add
add
add
add
add
xor
add
rcrl
add
ds
add
mov
add
xchg
add
xor
add
adc
add
xchg
add
pushf
xor
add
add
add
rcrl
add
xchg
add
les
add
and
add
aaa
add
rcrl
add
lret
add
aaa
add
jbe
add
rcrb
add
lcall
add
ficomps
add
cltd
dec
add
out
add
pusha
aaa
add
push
xchg
add
sub
add
add
cltd
add
jo
add
rcrl
add
cmp
add
rcrl
add
inc
cltd
add
mov
add
and
add
add
mov
add
and
add
add
shlb
add
add
mov
add
xchg
jg
add
aaa
add
rcrl
add
mov
add
cld
aaa
add
add
cltd
add
add
inc
gs
jb
arpl
fs
jae
add
sub
test
adc
rorl
sub
sbb
bound
adc
add
xchg
dec
adc
sub
jge
fsubrs
outsb
je
jp
dec
cmp
insl
sti
ljmp
out
test
pop
jl
mov
fstpl
fdivl
push
das
xchg
sub
xchg
sbb
scas
sub
in
aad
imul
je
dec
test
adc
je
adc
and
rolb
repz
les
test
dec
jp
pushf
insl
pushf
gs
insb
dec
fcoml
sbb
cmc
xor
mov
fs
and
lods
cmp
xchg
insl
cmp
test
das
push
mov
sub
dec
das
movsb
dec
test
mov
sub
lahf
add
ret
pop
fsts
ds
pop
sub
push
add
sub
nop
cli
dec
aad
aas
lods
dec
dec
inc
adc
test
cmpsb
hlt
sbb
push
sahf
stos
push
sub
popf
in
gs
lods
dec
xor
and
pop
jbe
repnz
sahf
das
ffree
push
cld
and
and
mov
movsb
scas
mov
push
adc
inc
in
pop
push
jl
cmpsl
jl
or
xor
sahf
push
adc
das
lods
pushf
pop
pushf
mov
cltd
xchg
les
and
jno
xor
dec
gs
aad
lds
int
insb
mov
frstor
xor
nop
aam
in
nop
mov
nop
std
pushf
add
movsb
jl
pushf
sub
jl
pop
sahf
xor
test
mov
movsb
xchg
mov
push
push
push
hlt
mov
push
dec
sub
push
adc
pop
xchg
lea
push
jb
aam
out
stos
mov
and
in
push
fsubrs
dec
sbb
pop
and
int3
fstpt
les
inc
fisttpll
cltd
add
xchg
stc
lods
cltd
pushf
jae
sbb
jns
fs
fstl
lea
fstps
or
mov
adc
clc
je
sub
insb
into
xchg
stos
mov
leave
adc
cmp
lea
and
js
loope
es
adc
jl
repz
sti
mov
sub
cltd
or
adc
push
je
xchg
or
test
pop
pop
xor
sub
inc
sbb
xor
add
divl
or
push
loope
in
push
int
inc
xchg
push
or
lret
mov
dec
and
xor
cli
inc
cltd
and
push
pop
rcrb
xor
sub
pop
cltd
dec
inc
cmp
mov
fs
cwtl
test
fs
frstor
push
or
nop
daa
mov
je
sbb
push
dec
adc
push
and
ret
mov
sbb
mov
cld
sbb
sbb
sti
mov
out
fists
fstpl
adc
sub
xor
repz
pushf
lret
add
mov
icebp
mov
sub
and
push
xchg
jo,pn
sbb
add
gs
push
lods
jbe
mov
mov
scas
int3
jo
adc
push
scas
cmp
popf
lea
aad
xor
mov
test
out
rcl
or
sub
je
push
mov
sbb
mov
notl
jae
add
inc
in
adc
adc
sbb
sahf
cltd
adc
lahf
cmp
adc
jnp
fbstp
out
adc
inc
dec
lahf
fstps
sbb
push
add
nop
cmpsb
ljmp
and
cmpsb
sti
cs
fnstsw
cs
imul
mov
push
flds
rorl
fildll
sub
std
xchg
mov
add
sub
and
xchg
fcomps
adc
enter
lods
sbb
push
adc
cld
mov
inc
insb
lds
adc
in
fstl
adc
movsb
push
lods
sbb
cwtl
cmp
cs
sub
sbb
frstor
xor
push
jmp
insb
add
inc
or
sbb
pop
lahf
insl
test
sti
leave
loopne
and
xchg
stc
mov
ja
inc
sbb
adc
mov
test
scas
mull
rcl
push
add
dec
push
leave
sahf
cmp
in
rolw
push
jo
out
xor
int3
mov
mov
aad
sbb
dec
xor
leave
fs
mov
pop
loopne
in
sbb
xor
pop
in
pushf
fistps
leave
push
push
xchg
mov
push
cs
incl
mov
and
adc
sub
xor
and
jmp
loope
test
fsubrl
mov
jbe
lea
xchg
pushf
jns
movq
ret
out
xor
sti
loope
jecxz
aad
push
jle
es
call
repz
push
xchg
adc
fsubrl
out
mov
sbb
insb
mov
aam
mov
repz
dec
mov
mov
test
cmp
sub
and
push
nop
mov
je
shr
push
sbb
sub
pop
dec
mov
adc
dec
mov
xor
xchg
cmpxchg
pop
pusha
outsl
jle
mov
cmp
inc
iret
lcall
jns
push
loop
pop
movsb
pop
outsb
mov
jecxz
pushf
sub
mov
neg
int3
sub
mov
stc
add
aas
inc
add
shlb
dec
dec
push
loope
rcrl
inc
cmp
test
cmp
scas
or
or
sbb
sbb
lret
push
mov
std
and
rorb
mov
in
aas
jnp
cmp
cmp
mov
add
js
and
mov
sub
rcrl
pop
pushf
xor
xchg
and
jecxz
xor
jae
push
fistps
shll
sahf
pop
fs
negl
add
inc
testb
fisttps
cmpsb
loope
cmp
fs
cmpsb
outsb
test
lock
in
mov
pop
adc
xchg
xchg
mov
adc
decl
mov
and
xor
jmp
mov
enter
ficompl
push
test
int3
pushl
pop
std
or
or
push
outsb
test
daa
xchg
pop
bound
insb
ret
xchg
int3
call
pop
sarl
scas
and
xchg
pop
cmp
imul
fs
frstor
jle
mov
fbld
adc
mov
cli
fnsave
fadds
xchg
dec
mov
sbb
adc
popa
inc
cmp
mov
xor
jnp
adc
icebp
xor
and
pop
nop
fistpll
pop
jge
fisubl
icebp
mov
cld
xor
jle
call
divl
mov
sub
mov
mov
pop
call
jmp
jb
arpl
lahf
sub
pop
xchg
pop
or
mov
arpl
int
xchg
xchg
mov
test
adc
adc
mov
sub
int
pop
mov
xor
push
dec
data16
testl
xchg
fisttps
sbb
push
add
dec
adc
adc
sbb
sbb
mov
adc
daa
inc
jg
mov
sahf
repnz
std
aas
mov
adc
pop
hlt
popf
cltd
movsl
ja
sub
add
inc
cmpsl
push
dec
insb
out
xchg
xchg
iret
in
or
xchg
sbb
push
sbb
clc
movsl
xor
adc
lods
lahf
mov
mov
adc
xor
or
int
arpl
push
adc
adc
test
cmp
sbb
lods
frstor
cmc
in
stc
sub
xor
push
ffree
hlt
idiv
or
mov
mov
sub
jge
xchg
or
mov
cs
and
stc
xor
push
call
cs
lods
sub
xchg
test
aad
stc
mov
mov
lea
sbb
xor
inc
notl
dec
sub
cmp
cmp
fstpl
xlat
and
fbld
lahf
inc
mov
jge
and
aaa
iret
push
push
divb
mov
xchg
pop
adc
leave
and
adc
fdivl
popa
xchg
adc
mov
rcll
inc
rcrl
mov
fsubrs
ss
mov
adc
push
std
in
in
pop
push
stc
mov
fs
rclb
adc
cmp
push
lahf
int3
adc
fisttps
dec
sbb
scas
in
mov
popa
mov
fnsave
xlat
jl
dec
xor
test
dec
pop
inc
inc
inc
mov
cmp
pop
dec
push
jl
lods
or
push
dec
push
insb
pop
in
dec
fnsave
mov
outsb
push
stos
mov
push
fisubl
scas
frstor
inc
sbb
pushf
xor
pushf
fdiv
arpl
sbb
xchg
test
int
mov
pop
cmp
xchg
push
sbb
mov
outsl
inc
lret
xor
and
mov
das
loop
push
or
mov
decb
jg
enter
mul
jae
push
xor
mov
jg
push
paddq
jp
incb
fiadds
cmp
or
leave
std
fmull
xchg
or
sub
mov
ds
repz
nop
or
and
cmp
mov
int3
jp
int3
in
push
sti
ret
sub
lods
push
add
test
or
cmp
fdiv
ja
daa
sbb
pushl
add
ret
lods
push
push
test
bound
xor
ret
pop
stc
mov
add
xchg
and
and
cmp
movsb
add
sbb
sbb
xor
dec
pop
inc
lea
or
pop
cmc
movsb
adc
inc
cmp
outsl
inc
cs
sub
pop
jmp
in
mov
push
mov
pop
sbb
or
pop
sbb
or
sub
incb
fs
mov
add
pop
add
xor
mov
jle
xchg
jnp
push
gs
loop
sub
or
std
icebp
int3
mov
rorb
nop
hlt
sub
repnz
or
mov
lret
stc
xchg
inc
ret
aas
jmp
push
mov
les
lret
das
int3
push
comiss
sub
in
int3
out
jp
push
sub
int3
push
push
push
or
push
into
dec
idivb
loop
cmpps
xor
jmp
sbb
or
sahf
repnz
sbb
xor
into
and
sahf
std
sbb
cmp
cmc
pop
lock
or
aam
iret
xor
cmp
adc
add
ret
xor
test
stc
mov
pushf
repz
and
or
xor
dec
xchg
cmp
push
sbb
rclb
cmpb
rcr
or
int3
sbb
pop
mov
int3
and
jge
ret
sbb
mov
das
add
rclb
mov
add
and
fcomi
xlat
mov
adc
add
std
adc
dec
mov
sub
add
lret
or
icebp
mov
dec
das
pusha
outsl
xchg
add
in
xor
popf
mov
stc
xor
int3
lods
sbb
in
jo
pushf
loope
incb
add
push
rcpps
inc
out
push
pop
push
add
sbb
jl
scas
int3
fwait
push
adc
ret
gs
in
pop
add
rorl
or
inc
or
clc
or
pop
shrb
sbb
xor
imul
jb
int3
add
sub
aam
insl
push
repz
inc
push
inc
xchg
sar
scas
aaa
add
int3
ret
into
out
in
int3
or
loopne
int3
xor
ret
xchg
test
xor
hlt
cmp
add
scas
xor
jno
popf
cmp
idivb
out
mov
xor
int
add
jns
int3
pop
mov
cmp
sti
jg
cmc
push
or
add
test
sbb
sbb
xor
shlb
dec
fldcw
fwait
mov
decb
cmpsl
adc
ret
cmp
xor
push
fwait
mov
adc
lds
aas
and
or
jecxz
sub
jp
push
dec
lea
in
nop
cmpsl
push
and
adc
loop
sub
inc
and
push
sub
dec
fistps
pop
popa
sub
and
xor
les
iret
add
fs
push
inc
lods
push
sbb
inc
mov
push
jmp
xor
in
adc
dec
xchg
jnp
adc
dec
or
mov
dec
cmp
cmp
les
sub
daa
imul
push
mov
dec
mov
in
jae
dec
dec
add
add
lcall
cltd
mov
xorl
push
sarb
sub
stos
test
lods
jbe
jns
sub
test
sbb
repz
int3
add
dec
push
push
incl
inc
dec
push
and
xor
mov
cmp
add
sub
cmpsb
dec
mov
lret
mov
jge
mov
fistps
jns
pop
inc
lahf
or
fdivs
dec
or
mov
mov
into
pop
push
clc
cmc
fnstenv
add
cmp
iret
add
fdivr
daa
sub
repz
push
add
lret
add
mov
enter
pop
test
sbb
pop
sbb
ljmp
stos
fisttps
jns
int3
xchg
adc
xor
add
inc
mov
cmp
ret
xchg
lret
cmc
scas
adc
inc
xor
test
pop
iret
add
mov
mov
mov
add
inc
shrl
xchg
nop
lods
bound
adc
aas
pop
data16
stos
xor
mov
jns
fdivl
mov
testl
gs
dec
popa
add
imul
push
dec
add
iret
xor
xchg
stc
addl
add
test
pop
pop
xor
mov
lret
mov
subb
nop
sub
adc
mov
cmp
sahf
enter
jns
add
cld
mov
inc
test
xor
push
cmp
push
jae
gs
sbb
add
xchg
jbe
xchg
out
mov
xor
push
lea
ja
fistl
xor
sub
or
fdivrl
dec
popa
je
jp
push
loop
stc
fisttps
mov
add
cmpsl
movb
shl
lret
fnstenv
adc
xchg
dec
aad
add
lods
mov
xchg
lds
adc
cmp
or
sbb
push
pop
inc
negl
shrb
pop
roll
jne
fidivrs
mov
fistpl
sub
mov
xor
pop
lods
jp
pop
fiadds
sahf
inc
or
push
test
sti
push
mov
mov
insl
bound
adc
add
lock
mov
mov
nop
jp
jg
pop
add
cmp
add
push
fwait
data16
jmp
popf
dec
testb
das
enter
xchg
arpl
movq
pop
imul
mov
in
jmp
xor
inc
es
es
pushf
mov
in
jecxz
adc
add
push
fildl
jno
adc
lahf
loope
mov
loop
repz
pop
cmp
loopne
verr
int
push
in
cld
sarb
out
pop
xchg
mov
in
test
or
xor
mov
adc
adcl
and
pop
mov
push
arpl
lods
mov
daa
xchg
lock
das
xor
sbb
ljmp
idivl
aaa
cmp
in
xor
fwait
jg
ds
and
icebp
cwtl
add
dec
inc
cmpsw
xor
dec
add
mov
adc
mov
dec
mov
cli
shl
pop
in
sbb
repz
outsl
jb
sbb
fldl
movsl
or
pop
xchg
jbe
stc
mov
or
add
sub
stos
in
cli
lcall
push
mov
xor
repnz
inc
mov
push
or
sub
adc
dec
pushf
data16
add
pop
test
jg
outsb
adc
stos
push
ss
int
mov
neg
insb
mov
xchg
cmpsl
add
ss
sahf
cmp
adc
sub
nop
push
clc
dec
xor
push
lret
insb
stos
mov
mov
aaa
fwait
mov
inc
or
in
dec
movsb
xor
loope
jle
lods
or
dec
push
add
mov
roll
clc
fistl
mov
aad
add
test
sbb
mov
ret
stos
xlat
adc
add
out
xchg
adc
mov
push
dec
pop
xor
mov
mov
push
addb
jb
mov
outsl
push
add
rorb
inc
mov
inc
add
out
sub
ret
jl
cmp
sahf
sub
sub
mov
lahf
inc
mov
pop
mov
leave
pop
scas
aaa
jbe
or
mov
cmpsb
mov
mov
movsl
pop
in
mov
dec
or
loope
add
jb
dec
xlat
and
jns
fstps
add
into
dec
xchg
or
in
pusha
sub
movlps
add
push
pop
add
push
je
lea
xor
out
stos
sbb
sub
iret
daa
add
and
lods
cmp
sbb
mov
ret
sbb
insl
cmp
sbb
fcoml
sub
adc
or
test
out
dec
add
jle
lods
insl
nop
pop
add
sbb
ds
push
dec
xchg
repz
xchg
lahf
movsb
andb
mov
pop
jae
imul
cli
sbb
std
sarb
insb
sbb
movl
lea
push
xor
mov
sbb
and
mov
stc
adc
rorb
clc
mov
icebp
add
sub
jbe
pushf
or
negl
cs
and
cmc
add
repz
imul
test
pop
pop
in
ja
adc
jle
add
push
push
jl
lret
bound
dec
jb
mov
xor
je
jge
out
cmp
add
mov
cld
dec
dec
fwait
sti
jns
in
sub
mov
inc
jle
testl
jne
sub
sbb
push
jl
aad
and
js
in
or
mov
fldl
sub
pop
jmp
xor
jg
push
add
adc
movsl
stc
bound
sub
xor
sub
jae
fs
data16
lcall
scas
sub
sub
sub
mov
xlat
in
cmpsl
aas
sbb
addr16
daa
lds
ja,pt
sbbb
and
push
pop
push
cmp
sbb
adc
mov
and
jnp
aam
dec
sub
sbb
pop
dec
int3
jne
lods
lea
sbb
stos
jl
shr
add
push
popf
xchg
add
sarb
sahf
and
sub
mov
fs
xchg
repnz
clc
add
xchg
push
and
fisttps
push
inc
sub
fstpl
dec
jno
add
daa
dec
add
cmc
mov
dec
add
jne
call
push
pop
xchg
add
cli
jae
adc
adcl
je
dec
xchg
mov
test
shll
scas
lea
push
lahf
pushf
in
mov
lea
icebp
inc
xchg
lods
add
and
mov
hlt
dec
add
mov
fdivr
adc
ja
stos
fyl2x
mov
ds
xor
out
in
incl
ja
mov
jae
mov
popf
add
mov
movb
hlt
repz
inc
push
push
jg
jno
xor
add
xchg
stos
lds
test
insb
pop
mov
jns
adc
sbbb
lods
ja
xor
sub
cmp
shlb
dec
cmp
pushf
and
movsl
jno
sbb
subb
ret
add
loopne
jo
hlt
cmpsl
add
jl
sub
cmp
sti
dec
and
lret
sbb
shl
jmp
xor
or
prefetchwt1
adc
aas
ret
ja
pop
sub
out
outsb
scas
or
dec
mov
int
movsl
add
add
xor
jg
sbb
jo
int
push
push
popf
test
add
loopne
insb
dec
sub
stc
bound
inc
jb
enter
outsl
sti
and
add
add
add
in
aaa
mov
out
push
int3
cmp
pushf
sub
nop
scas
inc
lret
and
xchg
mov
outsl
pop
or
out
mov
fstl
xlat
push
in
lret
push
pop
nop
and
shlb
add
pop
xchg
mul
push
jae
scas
dec
sub
pop
fmuls
inc
cmp
icebp
push
loope
imul
jl
or
repnz
sbb
out
mov
ds
cmc
int
pop
aas
daa
out
rclb
ljmp
test
insb
adc
hlt
pop
lea
add
pushf
fcmovnb
outsb
lods
dec
xor
push
xor
mov
in
and
sub
movsb
mov
cmp
push
xchg
jp
stc
fiaddl
push
inc
cmp
inc
in
push
ds
movsb
aam
rep
lcall
xlat
pop
push
dec
sub
adc
xchg
stc
xchg
pop
push
aad
mov
jns
dec
or
pushf
sbb
xchg
push
add
les
scas
hlt
push
mov
push
mov
inc
add
into
mov
xor
xchg
fwait
out
rol
add
xchg
ljmp
lea
pop
or
test
add
ljmp
add
mov
dec
rolb
cmp
push
leave
jns
xor
mov
aas
adc
shl
adcb
add
push
sub
pop
cwtl
into
mov
mov
cmc
mov
mov
pop
das
adc
mov
mov
mov
mov
add
push
mov
decl
adc
cs
cmp
call
sub
sbb
hlt
or
aam
mov
sahf
xor
pop
xchg
je
cmpsb
adc
sarb
sbb
jg
dec
jge
dec
mov
add
sbb
out
push
jns
or
dec
or
sub
mov
mov
push
stc
add
sub
push
cmp
cmp
shl
pop
jo
daa
push
repz
pop
pop
sub
mov
xor
fcoml
add
ja
cli
add
insb
mov
cmp
mov
mov
cmovs
xchg
add
inc
push
xlat
adc
int3
pop
mov
divb
test
call
jnp
jmp
cmpsl
dec
sub
sbb
inc
mov
pusha
sahf
add
or
les
mov
xchg
lea
aam
rcrl
mov
push
imul
cmp
lods
xor
jg
data16
ret
pushf
aaa
sbb
xchg
cs
jne
adc
jl
test
cld
pop
add
imul
add
adc
jmp
inc
dec
addb
insl
or
add
sbb
dec
aad
or
dec
data16
mov
sti
jge
add
cmc
and
sti
lods
push
inc
or
jne
mov
xor
pop
andl
adc
mov
in
xchg
sub
in
dec
add
loope
adc
push
stc
js
xor
cmp
notl
lock
iret
pop
and
mov
mov
add
int
lock
leave
je
sub
mov
sbb
das
cwtl
sub
filds
sahf
movsl
daa
testb
inc
dec
je
adc
rcll
inc
xchg
ja
sub
out
add
addr16
push
or
add
pushf
jecxz
adc
push
dec
in
or
cli
add
imul
push
mov
adc
nop
cmp
xor
add
jg
mov
or
xchg
or
into
adc
cmp
add
fstl
insb
lods
cmp
loop
mov
dec
cmp
xor
xchg
fdivrl
add
scas
out
mov
cwtl
jae
inc
jmp
xor
cld
mov
jo
sub
repnz
xchg
adc
add
add
or
jns
rcll
out
xchg
push
inc
testb
mov
movsb
sahf
pushl
pop
aam
mov
or
push
push
fnstenv
sti
push
push
xor
rcrb
insl
push
cmp
aam
mov
arpl
push
lret
loope
out
mov
and
or
ret
lret
cmp
dec
js
repnz
add
or
in
stc
or
adc
mov
add
in
push
mov
xor
add
test
in
cmp
sahf
push
jge
xor
or
add
imulb
push
pop
into
add
jge
or
cli
jnp
push
pushf
push
xor
fistpll
mov
fdivs
jns
pop
mov
add
scas
push
push
xchg
add
cmp
nop
jge
and
sbb
aad
add
int
rorl
lods
fnsave
mov
cmp
vmread
or
rcll
or
movsb
loopne
jbe
sahf
cmp
add
push
loop
push
push
faddp
loope
mulb
and
jmp
ret
dec
cmp
std
hlt
inc
inc
fildll
in
or
outsb
xchg
add
loopne
dec
jns
imul
bound
lock
add
popf
xchg
mov
std
int3
xor
push
scas
outsb
int3
add
and
movsb
or
mov
xchg
dec
push
pop
or
leave
mov
sbbb
nop
lods
mov
adc
adc
mov
in
mov
bnd
push
mov
jnp
xor
loop
inc
push
or
movsl
lcall
push
pusha
sbb
add
mov
push
shrb
mov
loop
cmp
dec
dec
stc
adc
xchg
ljmp
mov
int3
and
jo
sbb
std
jns,pt
ret
dec
push
pop
sbb
inc
lods
mov
sub
sahf
push
mov
loop
adc
dec
int
jmp
flds
mov
js
outsb
cmp
dec
mov
lahf
add
mov
sub
lret
mov
cmp
enter
adc
push
imul
sub
fistps
or
push
out
pop
loop
sub
repz
mov
pop
shll
cwtl
or
push
push
cmp
dec
add
std
sbb
sub
adc
push
fst
push
mov
xchg
mov
lock
aaa
repnz
rcrl
dec
ljmp
insb
and
and
jecxz
stc
or
shl
pushf
adc
sti
shll
mov
mov
push
sbb
mov
push
insl
xchg
mov
adc
push
dec
xor
inc
mov
test
dec
mov
in
mov
sbbb
test
sbb
pop
aas
in
xor
bound
mov
sbb
cmpsl
sbb
dec
movsl
scas
mov
xchg
lock
pusha
or
in
pop
pushf
nop
and
in
addl
sti
ja
icebp
cld
cltd
adc
xchg
ljmp
pushf
cs
adc
adc
cmp
push
les
push
mov
jge
dec
faddl
sbb
pop
in
cld
in
mov
lea
nopl
add
xor
adc
cs
xor
lret
add
std
push
leave
mov
sub
or
adc
mov
sbb
lods
les
inc
or
add
mov
stc
clc
pop
pop
pop
adc
cmp
pop
push
int3
xchg
pushf
iret
xor
mov
lods
out
dec
dec
pop
lods
push
jge
sub
push
mov
mov
cmc
sbb
shr
push
add
cmp
ficoml
pop
inc
in
mov
lahf
cmp
cmp
aam
jo
pushf
inc
dec
stos
xchg
and
mov
movsl
pushf
sbb
in
jmp
cs
adc
insb
jle
in
mov
jp
sbb
xchg
out
pop
push
nopl
aad
adc
mov
insb
nop
cmp
adc
lds
add
add
sub
inc
in
or
and
xchg
jg
mov
xchg
cmp
and
push
incl
cld
mov
jl
fldl
add
neg
mov
sbb
mov
movsl
and
test
sbb
inc
or
sti
mov
xor
pop
push
xchg
insb
sbb
lea
std
loop
pop
mov
in
scas
sti
cs
mov
adc
dec
sbb
jl
cmp
dec
stc
adc
xchg
pop
in
add
inc
int3
push
pop
adc
cltd
add
sahf
stos
std
or
dec
aam
insb
loop
adc
push
setbe
lods
cli
in
xlat
loop
sbb
mov
adc
dec
mov
repz
xchg
repnz
xor
testl
pusha
dec
lahf
and
out
push
xchg
ret
rcrl
mov
mov
sub
cmp
js
and
add
dec
mov
pop
and
inc
xchg
orb
mov
in
cmp
push
movsl
inc
in
movsb
out
cmp
sbb
out
in
aaa
pushf
xchg
fmul
jl
das
push
sarl
in
adc
mov
cmp
stc
icebp
ds
xor
minps
push
cwtl
insl
fbld
adc
mov
adc
xchg
push
stc
mov
insl
in
clc
repnz
jmp
pop
in
or
neg
addl
fwait
dec
repz
stc
and
dec
punpckldq
xor
adc
sub
int3
push
mov
push
andl
jle
stc
jae
cmp
adc
cmp
cmc
mov
iret
jb
insb
xor
ds
push
fs
cld
jge
js
repz
xchg
cmpsb
xchg
or
mov
mov
out
fimull
in
jl
lea
je
push
cmc
jb
cli
test
inc
or
sbb
cmpsl
or
sub
or
add
bswap
cmp
ss
movsl
adc
clc
pop
dec
sub
adc
or
cmp
sbb
icebp
or
adc
insb
dec
push
cmp
fs
push
sub
or
push
cmc
jne
jl
xor
das
and
adc
ret
clc
jne
or
in
push
inc
mov
dec
adc
or
test
lods
push
mov
ljmp
in
cmpsl
fdivrs
cmp
pop
sub
orb
je
cmp
lret
mov
add
add
mov
in
mov
sub
xor
cltd
adc
lods
sub
push
dec
push
xor
mov
loop
xchg
ds
or
mov
movsl
sarl
inc
xor
adc
mov
push
je
add
push
gs
mov
mov
fwait
push
cli
ss
and
ds
push
jmp
movsb
les
fcmovbe
ljmp
mov
xor
xor
cs
xchg
push
mov
sub
in
mov
fdivrs
mov
test
jl
notl
shlb
test
mov
sbb
mov
insl
lods
mov
int
dec
decb
xchg
ds
dec
or
add
mov
mov
and
mov
int3
dec
or
scas
add
mov
cld
push
jecxz
imul
mov
xchg
push
dec
mov
sbb
sti
or
pop
xor
and
mul
fs
sbb
push
add
fsubl
int3
xor
jne
and
push
mov
movsb
push
adc
push
fmuls
sbb
jl
lea
xchg
repz
clc
adc
pushf
shlb
pop
rcll
xchg
mov
adc
cmp
repz
ret
mov
sbb
dec
adc
orb
or
sub
adc
dec
repz
add
fmulp
xchg
ss
adc
push
add
inc
sarl
out
xor
fsubs
add
inc
das
cmp
push
lods
mov
fs
lea
rcl
cmp
mov
repz
adc
test
cmpsl
stos
and
mov
out
call
movsb
enter
inc
std
push
or
insl
das
outsb
push
cmp
pop
testl
cmp
and
push
aam
pop
in
int
xor
inc
xor
out
mov
sub
xor
icebp
cmp
push
ljmp
fs
jecxz
hlt
or
mov
fldt
stc
xchg
movsb
adc
adc
dec
dec
dec
xchg
mov
jnp
xor
fsub
int3
lds
sahf
adc
add
mov
sbb
mov
stos
sbb
push
out
insl
xchg
pop
fistpl
dec
ret
push
add
push
push
pop
sub
add
in
jo
mov
push
push
or
and
loopne
xor
xchg
stos
mov
lea
in
iret
repz
pop
hlt
push
cmp
outsb
stc
xor
jbe
sub
jo
inc
cmp
dec
pop
aad
add
out
lea
pop
sub
cmp
cmova
daa
lods
xor
fs
or
push
mov
push
push
cmp
repz
pushf
int3
pushf
lods
cld
adc
sbb
sti
mov
cs
cld
icebp
fmuls
frstor
push
cmp
in
and
imull
mov
int
jmp
push
test
insb
std
mov
xchg
or
ds
mov
ljmp
int3
shr
or
cmp
cmpsb
adc
mov
repz
ja
sti
push
mov
mov
inc
push
sbb
pop
add
stos
pop
sub
popl
or
ret
or
push
adcl
stos
dec
repz
mov
push
cld
testl
cmp
popf
stc
xchg
cmp
in
lea
fdivrl
mov
mov
iret
mov
lea
sbb
jl
add
clc
insl
push
cmp
out
in
ljmp
or
cmp
dec
pop
push
mov
in
mov
and
pushf
icebp
xor
or
test
and
adc
sarl
into
adc
xchg
cmp
sbb
add
dec
fadd
xchg
lahf
jnp
mov
insb
and
insb
lea
dec
xor
or
xor
pop
inc
xor
popf
int
cmp
pusha
jl
or
inc
nop
or
cli
js
cmp
mov
pop
in
lret
lea
mov
sub
fmull
aam
pop
adc
dec
push
test
push
adc
xchg
movsb
dec
pushf
sub
and
insb
mov
jle
repnz
sbb
or
cltd
pop
je
sub
test
iret
dec
lods
pop
hlt
inc
mov
cmp
mov
xlat
in
popa
in
gs
cmp
cmp
mov
stos
outsb
inc
push
ret
fisubl
jge
and
and
inc
add
jle
or
and
faddl
mov
and
mov
int3
fcmovbe
add
add
mov
fcoml
jmp
lods
add
fcmovnu
call
inc
adc
cld
add
adc
inc
int
mov
inc
dec
test
out
or
popa
push
push
dec
std
dec
movsl
mov
sub
div
cmp
inc
sub
xchg
pusha
in
pop
add
cmp
and
int
mov
ret
rcll
bound
movsl
lods
sub
aas
out
xor
sub
adc
add
or
lds
push
mov
push
push
cmc
push
dec
dec
inc
inc
aam
insl
rcll
push
dec
arpl
mov
sub
mov
daa
push
sub
insb
insl
inc
or
xchg
dec
xchg
mov
adc
fcompl
fcoms
std
bound
movsl
pop
pop
cmovne
mov
and
imull
mov
rcl
popa
mov
in
dec
pop
xchg
test
push
ss
mov
mov
cld
aam
lea
aaa
addr16
or
cmpsb
sahf
cli
insl
or
fadd
mov
iret
mov
adc
pop
pop
icebp
sarl
scas
aad
je
push
int3
push
sbb
or
mov
cmp
or
fsubrs
popf
push
leave
repz
cmp
addb
and
xor
psubd
cld
push
xor
or
data16
cmp
sbb
sbb
push
mov
push
cli
dec
xor
test
xor
jge
sbb
mov
movsl
in
xor
pop
std
mov
in
in
dec
or
lahf
mov
xor
inc
adc
xor
and
movsl
add
mov
push
xor
xor
xor
ret
cmp
or
loopne
inc
adc
add
scas
mov
mov
xor
xor
fs
sti
das
insb
orb
mov
test
adc
je
fmull
push
jo
in
cli
lock
or
fimuls
sbb
mov
pushf
ret
cmc
add
and
pop
cmp
pop
jmp
std
push
in
push
outsb
inc
int
lods
jmp
mov
pop
js
pushf
sbb
sti
push
cld
push
cltd
hlt
xor
inc
and
sbb
int3
ds
jo
lds
sub
mov
push
rcrb
repz
sbb
and
les
fidivl
pop
addl
add
push
inc
outsb
xor
icebp
add
int3
into
out
pop
test
dec
mov
icebp
mov
dec
lcall
push
cld
push
loop
fisttpll
les
sbb
fisubrs
inc
jns
add
inc
and
push
imul
scas
cmp
adc
gs
out
xchg
add
mov
inc
je
ljmp
in
or
cmc
clc
jl
lea
mov
cmp
adc
sbb
adc
std
inc
jle
les
jne
jae
minps
adc
stc
popf
mov
and
jns
dec
repz
ja
mov
insb
sub
sbb
jne
jl
push
cmc
stc
jecxz
adc
fisttpll
ljmp
mov
int3
or
or
sahf
pushf
adc
ror
pop
imul
jge
xchg
pop
pop
sahf
xchg
push
jne
ror
sbb
in
xor
in
xchg
jb
fwait
enter
pushf
nop
test
jl
out
push
push
jl
sub
xor
push
and
cmpl
insb
outsl
movsl
shlb
mov
mov
call
je
cld
arpl
inc
mov
add
adc
sbb
insl
lds
xor
add
cld
sbb
out
mov
and
je
mov
mov
scas
sub
mov
cmp
push
add
out
test
add
push
lret
call
push
add
jno
out
lods
and
je
or
jge
lock
and
cmc
sub
shlb
mov
movsb
int3
mov
add
ss
out
loopne
pop
lret
das
aam
int3
icebp
loop
mov
jae
add
xchg
clc
or
negl
pop
int
mov
pop
mov
mov
test
inc
inc
adc
mov
push
cmp
test
iret
mov
outsl
fisubrs
lea
push
cltd
jno
popf
push
xchg
out
push
in
push
jb
enter
mov
push
inc
cmc
stos
icebp
sbb
scas
paddb
jmp
or
imul
repz
dec
push
mov
mov
cld
fsubl
xchg
aaa
xor
jle
int3
jne
sbb
push
inc
push
insb
pop
add
insl
int3
pop
xlat
xor
mov
dec
xor
std
xchg
mov
out
inc
mov
push
js
push
cmp
lret
mov
sti
jo
ret
outsl
sub
insl
xor
pop
iret
rol
in
adc
inc
xor
or
lods
in
or
pop
xor
scas
out
mov
push
hlt
or
inc
cmpsb
dec
xor
sti
push
das
xchg
sarl
jbe
sbb
mov
cmp
and
dec
inc
lea
push
pushf
adc
shr
sbb
sbb
sub
out
imul
dec
or
out
dec
movsb
int3
pop
xchg
addr16
int3
and
cmp
out
bts
mov
jl
sub
pop
int3
sbb
je
mov
pop
and
sbb
adc
mov
jnp
xorl
lds
xor
cmp
int3
je
divb
push
or
out
sti
cld
push
fs
add
out
xor
or
orb
ds
cmp
int
mov
or
cmp
mov
pmaddwd
in
fstpl
mov
mov
dec
cmp
cltd
in
outsl
mov
std
loope
sbb
mov
sub
sub
adc
mov
adc
arpl
xchg
repz
outsl
movsb
dec
mov
mov
dec
movsl
xor
dec
std
xor
je
loopne
xor
mov
outsl
hlt
sbb
in
jle
xor
stos
ljmp
icebp
sbb
adc
int
gs
push
ret
testl
pop
iret
call
or
fadds
jb
adc
push
stos
enter
outsb
pushf
cmp
lahf
into
mov
sbb
lret
xor
and
and
in
mov
rorl
mov
xlat
js
mov
test
insb
call
out
call
sub
fnstenv
xchg
rcrb
jnp
cli
dec
and
idiv
mov
aaa
insb
dec
add
inc
test
push
xchg
inc
xor
pop
push
push
mov
push
adc
pop
insb
jo
jmp
pop
cmp
add
xor
or
jne
pushf
cli
pushf
cld
mov
xchg
dec
insl
push
lods
rcr
insl
adc
ljmp
pushf
mov
dec
fcmove
jne
xchg
aam
insb
sbb
ljmp
sbb
or
lea
in
les
out
enter
outsl
data16
fstps
cwtl
scas
xchg
minps
in
xchg
sbb
sub
mov
lea
mov
mov
and
aaa
in
pushf
pushf
jo
cmc
cmp
xchg
inc
aas
mov
insl
adc
cmp
imul
std
adc
push
cmc
cmp
inc
int3
out
lea
mov
mov
mov
loop
add
ss
je
pushf
push
in
shr
mov
pop
insb
xchg
stos
mov
incl
jo
xchg
cmp
dec
das
add
push
cmc
push
mov
xchg
lea
cmp
std
add
sub
sbb
into
mov
sub
and
minps
add
mov
add
mov
add
test
xchg
inc
in
stc
dec
int3
stc
lcall
je
lret
sti
imul
pop
insb
nop
xor
clc
push
into
jno
jmp
and
jno
fisubrs
and
out
cmp
movsl
int3
cmp
shll
in
xor
xchg
mov
in
jo
inc
jne
jne
sbb
add
imull
outsl
xchg
in
gs
mov
adc
sub
negl
dec
adc
div
or
in
adc
xor
in
movb
popf
jle
sbb
stc
mov
and
cmp
sbb
fdiv
loope
repnz
dec
adc
gs
aad
add
pop
sbb
adc
inc
fdivl
sub
mov
lods
cmp
push
fldl
add
in
and
mov
add
pop
dec
mov
lret
sbb
dec
outsl
or
xor
shlb
mov
fs
cld
push
repnz
jo
ljmp
xor
add
cmp
js
cmp
shr
test
fisttps
xchg
clc
pushf
mov
out
cwtl
out
test
fcmovnb
xor
shll
mov
mov
mov
ficompl
fs
push
mov
aad
add
lea
enter
cmp
and
notl
mov
jbe
rorb
hlt
lea
cmpsb
out
in
lea
ja
fs
mov
dec
dec
pop
adc
in
xlat
add
sub
sbb
sub
pop
addr16
cmp
xor
add
leave
in
test
insb
test
popa
dec
push
fcmovne
push
fmull
scas
inc
mov
std
inc
pushf
sbb
iret
imul
jo
cmp
mov
fs
les
add
cwtl
and
cmp
cltd
push
adc
mov
clc
lret
and
cwtl
lea
std
add
outsb
push
push
lods
imul
movsl
insl
mov
xor
adc
test
jl
mov
and
mov
dec
xchg
test
mov
sbb
inc
sub
pushf
sub
lock
add
xor
jne
and
fstl
push
mov
cmp
mov
subl
pushf
dec
mov
lods
and
adc
movups
int3
outsl
and
jns
movsl
adc
in
or
lcall
int
sub
mov
rolb
cld
inc
xor
jg
push
or
lret
push
sti
adc
ret
pusha
and
push
push
repz
jg
jo
cmp
sbb
add
clc
jg
icebp
add
stc
cltd
test
jb
push
jne
mov
or
lea
pop
dec
in
push
ds
cmp
mov
sarb
mov
and
push
dec
push
mov
push
test
andb
sub
movsl
dec
in
popf
test
xor
adc
pop
dec
inc
mov
pop
or
fs
movsb
clc
inc
data16
les
int
adc
or
adc
sahf
out
and
add
pop
mov
add
orl
aam
inc
mov
out
in
or
std
dec
movsl
out
jnp
les
cmp
cld
add
jb
notl
vmovdqu
sub
bswap
mov
mov
or
mov
add
add
jae
xor
and
movsl
sub
lcall
push
cmp
out
sbb
aam
cld
add
mov
push
mov
push
icebp
and
in
ja
call
adc
cmc
push
insb
aad
daa
xor
sti
movsb
adc
roll
std
out
sub
mov
inc
push
dec
jmp
lret
dec
cmp
inc
cmp
pop
pop
and
int3
xor
je
and
xchg
xchg
and
fcom
and
fbstp
or
pushf
xchg
mov
jno
xchg
push
lock
ja
mov
int3
adc
inc
paddsb
out
je
test
adc
push
or
pop
push
push
ret
sti
cmp
pop
repnz
fdivs
sub
and
jle
gs
fdivl
lock
in
aad
sbb
sub
testb
imul
in
xchg
aam
and
push
cli
adc
shll
in
sub
stc
pop
out
pop
inc
jl
mov
xor
lret
dec
xchg
adc
loope
push
int
fstpl
repz
jge
int3
or
jb
testl
roll
cmc
lea
cltd
out
mov
cmp
push
adc
je
sbb
in
adc
decl
clc
inc
mov
sbb
test
jge
aaa
in
adc
movsb
dec
int
jl
add
ret
mov
cmpsb
jge
sarb
std
orb
sub
std
push
out
sarl
jp
decl
or
test
in
sub
push
lods
pop
pop
pop
pop
xchg
dec
mov
dec
adc
cmpb
lds
shrl
or
out
push
stos
cmp
mov
repz
xchg
sbb
lea
or
les
xor
aad
in
xchg
add
ret
adc
pusha
jb
mov
xor
or
add
cltd
imul
or
push
out
call
pop
cmp
sbb
out
fimull
in
mov
icebp
or
jno
lahf
insb
cld
fs
push
adc
or
add
repz
xor
lahf
lcall
and
xor
and
pop
stc
mov
xchg
xchg
lret
sbb
dec
mov
stos
jne
aam
sub
push
mov
pop
enter
std
lcall
push
loop
repz
imul
adc
jno
insb
test
mov
stc
icebp
mov
insb
pop
cmp
subl
mov
sub
inc
jne
xor
mov
in
mov
cld
lea
out
outsb
mov
loope
add
mov
xchg
lods
or
xchg
push
xchg
out
sbb
sbb
test
jnp
cmc
int
inc
out
mov
clc
call
in
or
das
in
lret
add
repnz
cmp
add
insb
in
inc
sarb
jb
cwtl
in
rorl
aad
mov
and
and
ficompl
dec
insl
lods
mov
mov
add
mov
cmp
cld
pop
xchg
inc
push
in
xchg
push
into
mov
jbe
stc
fs
int3
xchg
sbb
fsub
pop
sti
lds
jl
les
inc
sbb
in
or
dec
std
out
jecxz
adc
test
jae
push
add
fdivp
mov
fdivs
popf
cmp
jge
in
icebp
ss
std
nop
inc
decl
clc
push
xchg
lahf
pop
xor
push
cmp
push
test
cmp
aaa
lcall
or
in
and
lods
mov
xchg
lods
in
sbb
adc
fcmovbe
pusha
repnz
or
pushf
mov
fiaddl
jae
and
xor
stc
push
int3
movd
mov
int3
rcrb
in
pop
xchg
mov
mov
insb
push
dec
pop
sub
std
cmp
cmp
stos
or
sbb
dec
pop
sar
sub
popf
mov
mov
popf
cmp
or
lods
fidivrl
lods
xchg
negl
out
add
or
and
je
dec
push
or
lea
mov
dec
sub
sbb
inc
inc
cmp
lods
and
sbb
popf
push
push
rcl
cmc
call
push
push
insl
mov
pop
and
mov
adc
mov
int3
in
add
or
je
sub
add
mov
mov
or
outsl
ja
mov
imul
inc
pop
in
jno
jecxz
je
mov
or
dec
mov
and
jge
lcall
add
in
mov
push
jecxz
push
mov
int
adc
inc
or
mov
lods
jge
mov
add
adc
enter
imul
add
repz
push
jns
in
push
bound
lods
cmpsl
pop
add
lea
pop
cmp
aam
test
testl
ret
push
sbb
or
insl
insb
scas
xor
enter
adc
lods
and
push
xchg
mov
hlt
ror
inc
movsb
insl
jl
jo
sti
push
sbb
int3
test
adc
mov
push
add
cmp
in
mov
insb
int3
insb
repnz
call
hlt
xchg
cmp
das
icebp
movsb
add
aas
fucomp
push
lcall
dec
das
out
and
adc
add
mov
mov
scas
xor
movsl
sbb
xor
pop
xor
clc
cmpsl
sbb
imul
fcomip
loope
adc
xor
aam
ljmp
pushf
mov
pop
rcrl
xchg
mov
pop
adc
inc
in
sbb
jno
xchg
pmulhuw
inc
xor
cmp
or
daa
pushf
imul
jno
ficoml
lods
jmp
or
test
decb
mov
and
gs
inc
push
je
icebp
pop
int
ds
or
jl
pop
adc
std
inc
lcall
nop
jg
in
adc
ret
sti
das
lret
dec
in
xchg
int3
and
dec
out
mov
sbb
push
adc
add
sub
out
push
roll
in
das
cmova
push
mov
ds
xchg
pop
iret
popa
call
movsb
push
int
or
push
std
or
les
jl
pushf
pop
inc
jl
fdivp
mov
testb
jns
mov
jo
in
mov
mov
xchg
mov
es
insb
mov
xor
push
and
jge
xchg
dec
divl
pushf
mov
pop
outsb
test
bnd
rolb
loop
jge
int
int3
xor
dec
out
je
dec
test
pop
fnsave
or
mov
insb
aad
and
lock
gs
sbb
idiv
jmp
xor
add
push
outsb
jl
sbb
xchg
iret
iret
subb
fnsave
in
cmc
stos
mov
popf
xor
out
mov
push
in
sbb
loop
fidivl
mov
out
dec
in
ljmp
inc
dec
in
adc
xor
sub
stc
mov
dec
repnz
sub
push
sub
in
decl
clc
mov
xchg
in
arpl
int3
cmp
push
jae
lret
lods
cmp
xor
lahf
jle
aad
ret
out
icebp
mov
cmpsb
mov
shll
xchg
fs
cmp
jo
mov
inc
sbb
and
sub
cmp
mov
popf
cmp
in
stc
leave
fldt
sti
ret
fnsave
push
idivb
add
inc
gs
xchg
pop
lods
and
or
call
out
sbb
std
mov
insb
int
push
fyl2xp1
lret
cld
outsl
sub
cmp
test
cmp
adc
cltd
repz
movsl
add
mov
sub
xchg
push
mov
mov
dec
mov
popa
stos
fdivl
push
arpl
outsl
sub
cmp
loop
add
repz
cld
fcoms
cmc
add
test
push
adc
xchg
in
adc
mov
std
xchg
repz
adc
pushf
cmp
mov
cmp
outsb
call
dec
in
adc
push
ret
sub
add
inc
push
daa
enter
in
xchg
xchg
jle
movsb
scas
fucomp
jecxz
icebp
or
dec
enter
std
mov
dec
add
movsb
mov
aaa
add
aad
out
mov
mov
jbe
xchg
add
adc
rcrl
or
mov
std
xchg
push
jb
pop
ljmp
in
shll
int3
add
enter
xor
es
cmp
call
mov
clc
movsl
rcrb
inc
inc
sub
sahf
and
mov
jge
pop
mov
push
inc
inc
sbb
inc
fs
in
xor
lds
aaa
in
xchg
dec
daa
mov
ljmp
popa
movb
fists
xchg
cmp
insl
adc
jae
rcl
pop
rcrb
jmp
out
movsl
pop
add
adc
lahf
sub
xchg
jge
cwtl
mov
in
adc
or
push
lock
jg
in
int3
or
or
pushf
mov
cmp
mov
and
xchg
fs
std
and
fdivrs
int3
arpl
mov
icebp
pop
lcall
int3
xor
test
mov
fmull
and
ljmp
jb
inc
fldl
faddl
push
aam
aaa
cmp
xchg
pop
dec
add
push
or
data16
cmp
add
jns
int3
lods
add
fwait
ja
cmc
std
push
jns
repz
imul
pop
mov
sbb
inc
gs
out
push
add
ret
gs
pop
jae
outsl
rorb
pushf
dec
cmp
loopne
insl
lcall
adc
pop
sub
movsb
lods
cmp
cmp
stos
jae
sub
int3
sbb
mov
adc
sbb
dec
xor
mov
cmp
ret
mov
mov
jl
or
cmp
push
mov
jb
sbb
inc
add
bnd
in
push
fcmovnu
repz
jg
daa
pop
push
push
mov
popf
leave
imul
imul
out
mov
stos
insb
and
stc
call
data16
add
jl
sbb
cmp
lret
sbb
insl
sbb
or
pushf
insb
pop
bsf
mov
mov
sub
bound
mov
jp
mov
aad
xchg
sahf
xor
fwait
sti
push
mov
clc
in
adc
mov
xchg
inc
lcall
jl
and
push
cld
out
inc
repnz
and
stos
xchg
pop
loope
stc
lods
out
jmp
xchg
mov
push
xchg
fidivrs
adc
push
int
push
add
inc
lods
mov
sahf
pop
hlt
adc
push
add
adc
adc
inc
cs
pushf
mov
iret
pop
cmc
inc
pusha
out
dec
jb
in
xor
inc
xchg
add
clc
ja
pop
push
outsl
testl
xchg
push
fimull
inc
stos
inc
and
mov
or
in
and
or
mov
add
and
jecxz
test
int3
cmp
dec
js
sub
xor
cmp
addb
out
aad
loope
and
in
sub
mov
test
pop
xchg
int
in
fcomp
or
pushf
movsb
or
pop
dec
inc
xchg
push
mov
mov
scas
xchg
call
push
sarb
add
outsb
insb
sbb
repz
xlat
sahf
outsl
lods
jge
push
jmp
and
stc
mov
std
or
mov
push
or
and
xchg
push
sub
imul
push
mov
sti
xor
lods
out
jo
cmp
mov
roll
in
pop
jmp
push
mov
pop
mov
pop
clc
or
add
jmp
fstpl
adc
push
adc
mov
out
in
dec
cmp
lahf
sub
mov
dec
xlat
push
and
jne
addl
pushf
xor
add
in
repz
rep
adc
lods
setbe
insb
jl
lea
jo
or
cmc
xor
push
inc
fsubrl
lea
pop
lds
clc
lcall
sar
pop
prefetch
and
movsb
push
cmp
adc
or
sub
and
lods
stc
mov
adc
fsubs
jl
push
aad
inc
or
in
mov
ds
imul
mov
add
test
and
cmpsl
push
popf
in
les
inc
xor
nop
mov
mov
repz
shrb
sbb
mov
repz
and
and
or
mov
rolb
cmp
cmp
pop
inc
cmp
or
push
out
dec
outsl
cmp
push
ret
and
mov
cmp
sbb
inc
ret
or
cli
repz
fcompl
cld
push
mov
mov
cmp
insb
insb
jne
inc
test
inc
fsubrs
in
push
jo
gs
daa
push
movsl
mov
cld
lods
test
sti
add
pop
jp
fnstenv
out
push
adc
mov
pop
ret
cmp
icebp
push
dec
adc
rcrl
xor
cmp
enter
push
push
pop
pop
aad
push
cld
faddl
stc
enter
outsl
pop
xor
jae
sbb
mov
push
repnz
sti
inc
in
cmp
out
xlat
mov
ret
stos
adc
lea
movsl
daa
cltd
cmc
insb
xchg
push
jb
dec
jno
test
rclb
add
lret
push
push
in
mov
jns
inc
jae
sub
lods
ss
testb
addb
les
sbb
mov
dec
out
les
cmc
icebp
mov
ds
mov
popf
outsl
cmp
mull
dec
push
test
jl
fwait
test
push
and
out
ljmp
dec
icebp
rclb
sub
pop
push
mov
cmp
aam
gs
cmp
add
repz
or
in
mov
loop
xchg
or
xor
push
ljmp
fs
scas
les
mov
movsb
cld
mov
sbb
data16
lock
mov
int3
mov
and
ret
negb
incl
mov
int3
int
cs
inc
jmp
mov
sub
ror
push
loop
sub
jl
cmp
and
stc
xchg
lcall
cmp
inc
fsubs
repz
add
test
test
test
jge
mov
in
mov
aaa
scas
in
mov
mov
out
icebp
call
push
sti
mov
repnz
sub
mov
pop
xor
adc
insb
inc
data16
add
les
lret
push
sbb
push
inc
stc
andb
push
sub
cwtl
inc
and
incb
pop
push
les
cs
pushf
sarb
xor
into
lds
push
out
faddp
scas
dec
or
cmc
aam
fdivrl
adc
push
stc
outsb
pop
sub
test
pushf
cmp
push
sahf
dec
add
nop
repnz
mov
mov
mov
dec
xchg
fsubrs
and
nop
insl
jmp
jbe
mov
cwtl
fs
mov
push
cmp
push
mov
pop
movsl
iret
push
int
sub
enter
cmp
adc
in
sbb
cmc
dec
int3
gs
ljmp
sub
pop
or
mov
setge
sub
fistpll
jb
std
lods
or
sahf
rol
or
jmp
in
test
lahf
jnp
mov
mov
mov
and
pop
lds
mov
pop
int
das
hlt
jle
scas
xchg
xor
push
insb
stos
in
and
sti
in
pop
cmc
in
out
xchg
std
pop
outsb
aaa
mov
idivl
lods
in
cltd
cmp
mov
mov
ljmp
in
jl
int3
adc
imul
jmp
or
call
sub
mov
inc
js
jo
sahf
jns
jne
pop
rcr
add
or
cmp
scas
cmc
aam
int3
dec
ljmp
insb
and
in
movsl
adc
xchg
in
xlat
mov
sub
and
dec
stc
nop
scas
jge
outsl
sbb
js
adc
sub
mov
pop
add
movsb
cmc
cwtl
xor
mov
mov
mov
cmp
pushf
sbb
data16
in
inc
fdivrl
adc
jecxz
mov
int3
jl
cmp
or
int
jl
outsb
mov
in
cmp
xchg
cmc
mov
inc
mov
sub
in
mov
test
sub
dec
cmpsb
add
or
repz
in
fsubrs
or
ret
int
out
adc
pushf
xchg
jae
movsl
arpl
cmp
in
stc
sti
pop
and
loope
push
aad
and
rcrl
insb
sub
int3
xor
cltd
pop
pop
out
pop
xchg
das
xchg
adc
xor
sbb
into
push
add
in
leave
stos
mov
add
mov
std
xchg
shrb
sub
mov
jge
pop
cmc
pop
mov
shrl
int3
setns
and
pop
cmp
fdivp
lods
xchg
jmp
mov
adc
test
mov
lock
inc
push
sbb
xchg
mov
push
mov
gs
mov
sahf
xlat
push
movsb
scas
movl
sub
test
imul
cmp
sbb
or
jne
cmp
mov
imull
push
int3
jmp
xchg
push
inc
sub
push
adc
icebp
xor
insb
insb
jmp
lgs
mov
stos
mov
add
xchg
push
mov
in
pop
in
in
xchg
dec
pop
inc
cmp
insl
movsb
cld
cli
data16
repz
sbb
pusha
push
js
mov
insb
push
push
push
cmp
push
fdivrs
sbb
in
test
mov
insl
lods
pop
push
and
out
or
movsl
pop
adc
ss
cmp
std
mov
das
ds
cld
inc
out
bound
les
dec
loopne
test
mov
lods
push
fdivr
adc
insb
movsl
in
pushf
dec
and
leave
out
xchg
cmp
xor
jne
idivb
xor
add
insb
xchg
fsubrs
int3
push
in
sbb
loop
push
inc
insb
sbb
jl
and
sbb
incl
adc
push
loopne
in
ret
cmp
les
add
bound
movsl
sub
in
lret
push
cmp
sbb
sti
adc
cmc
test
clc
and
and
cmp
sub
adc
insl
push
push
int
out
add
xor
sbb
in
ret
addl
mov
xchg
inc
xor
stc
into
add
and
adc
cmp
fs
mov
dec
mov
fs
mov
idivl
pushf
out
push
pop
jge
les
sbb
sahf
push
shll
lea
jo
adc
mov
or
dec
test
insb
dec
ljmp
mov
sbb
cmove
push
jnp
add
cmp
jmp
xchg
jo
xor
imul
lea
in
je
or
out
rolb
imull
sbb
xchg
repz
jl
dec
fwait
inc
or
enter
mov
and
sbb
stos
mov
inc
add
adc
cmpb
dec
insb
sbb
icebp
lret
jl
mov
std
mov
xchg
xor
pushf
mov
testl
dec
in
pop
in
sbb
sti
push
sub
test
mov
pop
inc
int3
inc
mov
hlt
mov
pop
xor
fcmove
adc
push
insb
imul
mov
jne
inc
fimull
sbb
mov
xchg
popf
in
or
lods
ljmp
and
adc
mov
or
and
rorb
dec
and
mov
lret
dec
addr16
leave
sub
cmp
pop
push
or
or
sbb
fstl
sti
cmp
aad
push
sub
insb
mov
inc
ret
hlt
cmp
mov
js
sti
xor
outsl
dec
sub
or
mov
in
add
leave
or
push
pushf
mov
lds
and
popf
jge
jge
mov
sub
lea
lret
push
movsb
mov
jno
out
gs
xchg
fsubs
leave
in
outsl
adc
jns
mov
cmp
or
or
ss
mov
movsl
pop
dec
and
push
dec
dec
xchg
mov
pop
enter
xor
mov
test
push
das
test
dec
inc
outsl
lea
pop
jno
in
sbb
sbb
std
gs
mov
stos
pushl
add
cld
insb
jb
push
repz
lcall
push
data16
fdiv
or
jae
and
cmc
mov
adc
in
xchg
mov
lea
jno
mov
and
fdiv
jmp
sahf
bound
pop
je
mov
xor
pushf
sub
sbb
xor
testl
insl
mov
inc
add
test
test
push
mov
xchg
mov
cmp
pop
sti
ds
cmp
or
pushf
inc
fsubr
jecxz
adc
mov
sbb
mov
dec
or
movsb
jp
jl
mov
adc
into
mov
adc
sti
popf
mov
imull
pop
cli
mov
in
int3
popf
ss
sarb
fidivrs
or
dec
int3
pop
jmp
xchg
cmp
fwait
jae
push
and
add
sub
pushf
xchg
hlt
adc
inc
repz
xchg
andl
bnd
jl
dec
xor
arpl
add
lds
mov
jge
push
movsl
add
in
xor
inc
or
les
cmp
push
fldcw
pop
mov
jge
mov
cmp
out
test
adc
sbb
cmp
pop
not
or
icebp
jl
lods
mov
enter
ret
movsb
andl
sbb
fsts
xchg
rcl
minps
or
cmp
sbb
push
xchg
icebp
xchg
ljmp
cmc
xchg
scas
and
jns
jb
cmc
cmp
movsb
lea
and
inc
and
or
jb
cmp
cwtl
jae
pop
push
and
out
in
movsl
inc
in
popa
enter
push
push
xor
fsts
movsb
inc
mov
pop
popf
mov
sbb
enter
test
in
add
jbe
rorb
scas
dec
inc
cltd
cld
adc
mov
int3
in
arpl
pop
mov
dec
aad
js
jl
cmp
lahf
xchg
adc
out
and
ds
push
mov
test
outsl
ret
and
xchg
icebp
jns
int3
test
or
add
add
push
out
ss
repz
or
push
mov
aad
fnstenv
sti
sahf
ljmp
out
cmc
fcompl
out
sbb
fdivrl
mov
sbb
out
rol
push
cmc
int3
fadd
ljmp
jns
je
jecxz
pop
aam
adc
xchg
pushl
or
in
adc
ret
std
lods
call
ljmp
sbb
in
icebp
cmc
xchg
adc
leave
dec
in
roll
xchg
pop
push
push
push
sub
incl
mov
imul
fldl
imul
sahf
mov
or
mov
insb
add
mov
mov
dec
push
repz
sub
test
push
shr
lret
inc
insl
add
sub
add
popf
xor
cmc
call
or
add
les
xor
lods
add
add
mov
data16
test
pop
mov
push
mov
lods
sahf
aaa
add
movsb
test
cli
repnz
inc
xchg
sub
push
pop
xlat
fs
in
push
clc
in
push
sti
jl
dec
cmp
nop
sbb
iret
idiv
lret
insb
xchg
dec
xchg
push
mov
pop
bt
aas
or
stos
adc
adc
mov
and
rol
out
xor
mov
in
out
cmp
dec
outsl
xchg
add
jl
iret
out
pusha
sbb
out
push
cs
sti
adc
lcall
push
jno,pt
lahf
and
hlt
xlat
and
imul
push
push
lods
inc
out
mov
pusha
jl
mov
rclb
std
idivl
insb
in
jl
cmp
xorb
xchg
ja
stc
add
and
mov
out
mov
add
fadds
jl
enter
movsl
pop
cmpsl
icebp
ss
aad
sti
push
lock
xor
and
sbb
mov
adc
pop
mov
add
xchg
jmp
adc
dec
xor
xchg
or
mov
cmc
adc
stc
mov
sbb
pop
add
mov
pop
shlb
xor
or
mov
sub
sbb
inc
cmp
mov
and
inc
popa
lret
sbb
scas
lods
adc
jle
std
in
je
inc
jne
repz
add
pop
icebp
rcl
jnp
cmp
ljmp
cmp
cld
add
addr16
repz
push
nop
inc
test
jmp
mov
inc
in
pop
les
arpl
push
adc
in
or
popa
sub
xor
addr16
mov
fs
xor
shl
pop
push
std
int
push
or
fstpt
pop
fistpl
jne
pop
xor
test
insb
inc
sar
or
in
out
cmp
std
xchg
add
jl
xchg
inc
push
add
movsl
pop
xor
jo
sbb
dec
bound
gs
adc
aam
insl
adc
outsb
adc
lcall
lock
roll
or
in
int
xor
iret
pop
push
mov
mov
mov
movsl
xchg
push
mov
loope
int
sti
xor
mov
sub
pop
sub
sbb
test
repnz
in
les
mov
mov
out
fs
push
jne
stos
les
cmp
fsubrs
or
lock
jp
and
push
cmp
dec
and
sub
or
adc
icebp
stc
dec
sahf
sbb
or
xor
movhps
je
push
inc
hlt
adc
mov
or
sub
and
test
lods
dec
xor
movsl
pop
aas
fdiv
jae
push
lret
in
cmp
aas
icebp
adc
repnz
xor
inc
add
in
xchg
adc
mov
test
sbbb
in
in
and
or
add
lods
sti
fdivl
or
adc
jne
in
add
xor
inc
mov
mov
xchg
jp
sti
mov
mov
xchg
add
addr16
sti
dec
jl
outsb
icebp
xor
mov
clc
int
and
testl
add
push
in
incb
fsubrl
jne
mov
dec
adc
jns
repz
or
fnstsw
into
adc
push
popf
enter
in
adc
or
mov
or
and
and
push
popa
inc
lea
mov
fdivrl
pop
loopne
adc
jae
sbbl
pushf
cmp
sbb
lods
je
cmp
sbb
lea
or
xlat
icebp
and
push
and
lea
cmp
fs
iret
jmp
repnz
iret
fdivl
je
inc
rcl
add
add
xor
add
push
mov
inc
ret
fmull
xchg
out
xchg
dec
mov
adc
add
and
cmp
mov
sbb
insl
outsb
sbb
repz
xchg
mov
data16
rcll
ficomps
into
icebp
addb
fs
or
insb
or
stc
mov
loop
int3
dec
lods
or
mov
adc
ret
sub
loopne
dec
enter
lret
addps
popf
dec
push
sbb
mov
mov
mov
dec
cmp
sar
sbb
push
sti
add
cli
cmp
or
mov
iret
push
mov
cmp
sbb
inc
ret
pop
scas
xchg
in
push
add
std
xchg
imul
xchg
jns
mov
push
shl
je
test
cmp
jmp
push
push
test
test
cld
pop
push
imul
or
enter
pusha
scas
repz
in
lea
pop
add
int
outsl
sub
mov
jo
in
or
cmp
mov
cmp
mov
dec
xlat
fisttpll
or
imul
xor
scas
repz
pop
mov
andb
xor
or
sarb
movsl
pop
push
sbb
add
sbb
int3
xor
test
in
in
xchg
outsl
cmp
xor
in
adc
pop
or
mov
je
out
sub
cmp
push
insb
adc
mov
sub
fsubl
push
adc
xlat
sub
mov
shrb
stos
stc
es
push
movzbl
push
dec
punpckldq
inc
xor
cmc
movb
sbb
mov
push
aas
adc
fcmovbe
test
pop
int3
movsl
stos
pop
popf
lret
fsubl
and
movsl
mov
in
mov
movsl
shll
mov
dec
hlt
in
int3
push
test
xor
sti
push
xor
lret
cld
add
aad
mov
stc
je
mov
test
pop
fs
pop
in
pop
mov
sbb
cmp
push
cmp
jne
cmp
outsb
cld
sbb
push
and
repz
pop
sti
jbe
lret
cmp
fmull
push
hlt
leave
dec
mov
add
jmp
mov
sbb
sub
mov
fistpl
dec
push
imul
jecxz
sbbl
out
dec
mov
aam
adc
ds
pop
pop
fnsave
cmp
rcrl
sbb
hlt
fisttpll
lea
xor
mov
out
push
pop
cmp
mov
and
lea
fcomip
decl
int3
cmpsb
ret
fmull
jg
jge
stos
ret
je
icebp
or
pop
lea
pop
outsb
adc
add
push
add
inc
aad
fldl
push
jmp
cmp
push
sbb
pop
popa
mov
xchg
clc
push
push
repz
sub
insb
jecxz
add
stos
or
push
and
pop
push
xor
cwtl
push
adc
lods
repz
cmp
shrb
in
arpl
xor
popf
jnp
repz
mov
aam
xchg
loop
xchg
inc
aaa
cmp
mov
ja
scas
in
xchg
jb
sub
sti
dec
adc
jl
cli
out
fisubs
sti
lret
sbb
mov
jp
push
mov
ss
in
call
out
dec
add
cmovl
in
mov
push
pop
lock
adc
std
outsl
push
pop
clc
cmp
icebp
call
mov
xchg
aam
jg
inc
sub
cld
jns
mov
dec
xor
les
icebp
sub
insb
pushf
std
jp
xchg
clc
cmp
pop
and
dec
in
mov
adc
shl
mov
insb
pop
jmp
pop
and
lods
xor
cmp
add
adc
add
int3
ds
jo
icebp
lock
comiss
in
jl
push
cmpsb
pop
divl
mov
aas
hlt
and
out
xor
inc
or
and
cmpl
mov
add
scas
pop
xchg
stos
fsubrp
xor
push
int3
mov
into
xchg
add
insb
bound
xchg
cmp
shr
lret
int3
call
and
inc
cmc
mov
push
mov
push
mov
sti
in
dec
push
sahf
fcmove
inc
mov
outsl
or
dec
hlt
negl
cmp
adc
mov
popf
add
std
adc
aad
add
or
es
int3
cltd
xchg
les
jo
inc
movsl
mov
out
or
add
push
sub
repz
in
xor
jg
stc
adc
ja
fsubrs
sub
add
test
out
adc
add
in
lret
icebp
cmpsb
aaa
repz
push
in
xchg
popf
cmp
or
xchg
xchg
xchg
push
xor
xchg
cmp
cmc
or
loopne
jmp
out
jmp
cmp
cmp
adc
orl
inc
in
dec
jnp
test
jl
jnp
dec
int3
xchg
arpl
aad
test
sub
repnz
push
std
inc
lret
cmp
mul
sti
dec
test
insb
std
stos
push
fwait
pop
add
inc
aad
add
inc
stos
jp
mov
mov
adc
cmp
and
and
cltd
pop
jp
std
daa
add
sbb
cmp
fs
and
cld
push
ret
hlt
imul
call
gs
in
popf
sub
pop
mov
adc
ficoml
outsl
in
das
xchg
idivb
or
adc
mov
pop
adc
mov
out
fldln2
hlt
test
mov
cmpsb
ret
dec
outsb
gs
pop
mov
push
lock
repz
xchg
out
cmc
mov
sbb
lret
jecxz
push
adc
xor
jbe
cli
inc
sub
fwait
cmp
and
adc
pop
pushl
lods
lahf
in
add
push
into
js
jecxz
or
inc
mov
dec
cmc
cli
mov
sbb
int3
inc
inc
popa
xchg
pop
push
jmp
pop
aaa
fsubs
add
ret
jmp
xor
dec
insb
adc
pop
or
je
aam
xor
addr16
sub
push
dec
inc
xchg
in
or
jg
mov
mov
cmp
xchg
je
xor
xchg
jb
aam
fdivs
push
decl
insl
lea
and
in
adc
insb
aad
aad
gs
cs
hlt
psrad
xor
xor
pop
xchg
das
mov
sbb
in
push
jb
in
jl
inc
xrelease
pop
ljmp
repz
mov
repnz
gs
or
and
sbb
repnz
mov
stc
in
and
nop
int3
or
push
aam
or
cmp
xchg
xchg
jb
test
or
int3
ds
push
test
shrl
fadds
test
ljmp
idivl
jae
sbb
mov
icebp
and
data16
jb
in
es
ror
lea
xor
jle
out
mov
lahf
call
icebp
add
jae
add
fs
fildll
inc
cmp
add
insl
adc
stc
mov
fcoml
sbb
or
sub
cmp
xchg
jge
insl
repz
xchg
ret
dec
out
and
inc
mov
mov
js
pusha
xchg
adc
push
mov
inc
in
push
adc
test
pop
lret
push
fisubrl
and
lea
xchg
jp
and
jl
lahf
add
in
fsubl
dec
prefetch
or
aaa
mov
aad
xchg
mov
lahf
or
lods
xor
xchg
mov
mov
mov
psubw
jmp
popf
repnz
pusha
and
in
inc
notb
jge
lea
aaa
movsl
xor
mov
stos
popf
xor
push
add
add
dec
mov
push
mov
sbb
jmp
je
das
adc
adc
mov
mov
mov
mov
and
fucomp
pushf
mov
iret
xor
fsubrs
addl
mov
pushf
adc
insl
call
xchg
jns
sub
notl
push
jp
fs
or
mov
sub
or
inc
inc
push
push
sub
mov
adc
sub
push
adc
js,pn
lods
mull
scas
mov
loope
fsubr
adc
popaw
inc
mov
movsb
lods
dec
shr
lret
mov
mov
inc
dec
adc
xchg
jmp
sub
or
xor
sub
cmp
pushf
cmp
iret
mov
ret
es
aad
sub
insl
pop
or
in
aaa
dec
cmp
sbb
mov
dec
shll
inc
adc
cmp
je
xor
cmp
cmp
clc
jmp
xor
les
xor
cmp
into
std
cmp
adc
movsb
pop
mov
stc
in
push
out
adc
xor
inc
movsl
pop
lea
push
imul
aam
adc
out
movsl
outsb
mov
in
je
repz
push
adc
clc
sti
mov
ds
mov
pop
repz
fdiv
movsl
mov
jl
sbb
pop
loope
xor
repz
sub
lds
push
mov
in
outsb
dec
sub
movb
test
push
mov
sti
push
lds
or
ja
int3
push
repz
mov
daa
int
pop
js
xchg
jl
and
add
pop
aad
jmp
jl
push
ja
cmp
sbb
in
jmp
adc
mov
dec
jae
adc
xor
in
imul
je
sub
inc
subb
in
xor
fdivrs
xchg
mov
or
mov
in
mov
imull
loop
cld
mov
xchg
into
subps
jae
mov
adc
and
cmc
inc
push
movsl
out
lds
mov
push
cwtl
dec
xchg
fists
add
std
jne
inc
mov
mov
pop
icebp
lods
inc
insl
xor
mov
jp
fsubrl
dec
cmpl
popf
adc
inc
hlt
push
and
cmp
fisttps
adc
cs
jecxz
gs
inc
pop
xchg
push
cmp
jns
xor
int3
push
mov
movsl
cmp
or
addr16
mov
jne
sti
cs
cmp
jne
int3
negl
adc
pop
xor
arpl
xor
mov
pusha
push
xor
dec
int3
dec
jge
ficoml
shlb
pop
xor
sbb
or
ss
mov
and
mov
outsl
fists
dec
dec
inc
jmp
xor
mov
aam
test
insb
fmul
jp
std
scas
cmp
sbb
stc
dec
xchg
in
pop
mov
test
test
lds
jge
dec
std
daa
int
fistpll
out
add
fadds
popf
xor
or
leave
ret
mov
jno
repz
jl
popa
jnp
or
sbbl
lahf
bnd
jg
cs
adc
inc
add
test
xchg
out
ret
adc
add
adc
push
test
out
mov
in
in
sbb
and
pop
je
xchg
inc
add
stos
outsb
mov
push
out
push
enter
sub
or
aad
pop
add
cmp
dec
mull
push
les
jl
push
dec
test
out
mov
out
sbb
popf
mov
movsl
adc
stc
push
add
lods
mov
cld
jg
and
negl
call
and
mov
inc
insl
mov
in
and
movsl
adc
mov
sti
insb
push
insl
movsl
vpaddw
outsl
inc
xchg
daa
push
insb
aad
repz
and
lea
or
adc
sub
pop
adcl
icebp
push
in
mov
push
andb
sbb
in
iret
test
cmpb
pop
mov
pop
xor
pushf
dec
out
inc
std
cld
and
jnp
push
xor
out
pop
out
push
dec
lea
stc
incb
in
data16
xchg
add
int3
jne
add
test
mov
mov
push
repnz
subl
add
test
loope
cmpsl
lea
std
cld
mov
mov
jae
out
cwtl
adc
sbb
sub
add
aaa
dec
xchg
dec
shr
or
test
les
sarl
jp
cmp
lret
sbb
push
sub
cmpsb
mov
in
sbb
pop
add
push
add
mov
add
xchg
jo
out
sbb
repz
scas
push
add
sbb
inc
and
mov
imul
mov
add
mov
iret
ret
mov
pushf
xor
mov
mov
mov
lods
orl
jmp
sub
insl
push
aad
idivb
xor
stos
adc
outsl
pusha
sahf
std
add
add
fimull
xor
sbb
mov
cmp
int
xlat
rorb
and
in
add
dec
adc
out
ds
jl
cmpsb
or
xlat
in
or
or
movsb
fldenv
add
out
in
mov
sub
mov
xchg
pushf
mov
jle
test
cmp
in
mov
ljmp
stos
add
outsb
xor
push
push
sbb
xchg
loop
cmp
int
or
es
frstor
inc
jl
lcall
jmp
fistpl
lret
cmp
int3
cmc
in
lahf
dec
dec
dec
push
icebp
jmp
add
mov
jge
xchg
ds
leave
cmp
std
pop
pusha
movsl
sahf
jno
push
add
fsubl
pop
inc
jp
out
pop
or
pop
mov
add
xor
push
pushf
push
inc
push
jo
dec
lods
fcoms
or
imul
stos
in
cmc
pushf
add
xchg
xchg
pop
sub
mov
add
lea
scas
andb
imul
add
inc
and
test
xchg
call
add
pop
jecxz
add
mov
xor
dec
cmp
add
dec
jmp
mov
ja
sub
sbb
sub
iret
or
sub
cmp
dec
jae
subb
mov
mov
dec
push
adc
mov
adc
jle
xchg
sub
je
xchg
and
and
mov
outsb
sbb
lods
lds
fadds
scas
rorb
cmpsl
out
sbb
mov
lods
popf
repnz
test
adc
in
pop
lock
xor
jno
push
add
xchg
and
mov
inc
imul
sbb
and
loopne
lods
mov
inc
push
inc
idivl
inc
imulb
push
repnz
sub
dec
fwait
decl
xchg
add
ljmp
cmpsb
out
mov
mov
mov
test
add
xchg
outsb
cmp
adc
jns
cmp
sbb
addr16
stos
test
stos
or
out
loop
sub
pop
xor
mov
add
int
mov
lods
or
inc
cmp
add
call
dec
xlat
add
jecxz
adc
sarb
jl
insl
add
add
sarl
imul
inc
repz
sub
rcll
and
or
push
and
mov
inc
out
add
add
cli
inc
add
cs
add
push
mov
aas
imul
nop
lods
cltd
ret
add
fcomps
hlt
xor
inc
mov
ds
add
std
out
mov
cmpsb
enter
add
sub
jnp
paddsw
shll
push
mov
je
bnd
or
aad
stc
ja
ret
mov
add
pop
push
iret
or
aad
add
jb
push
and
jae
ja
stos
jmp
or
push
mov
arpl
out
add
sub
movsb
out
add
xchg
insl
add
lcall
arpl
xlat
pop
dec
xchg
pop
addr16
mov
cwtl
ret
dec
adcb
add
loope
add
mov
std
xor
pop
movsl
nop
ret
cltd
add
jae
add
imul
vmovsd
aad
ret
js
insl
sbb
mov
xor
rclb
mov
or
adc
xor
lock
or
pop
or
sbb
and
pusha
add
push
dec
dec
jl
xor
lret
test
out
repnz
cmc
add
jae
and
inc
jmp
jns
mov
sbb
lret
add
push
xchg
pop
push
pop
bound
loop
inc
sbb
inc
push
sbb
jmp
test
dec
insl
mov
push
add
and
jne
adc
or
push
mov
lods
mov
xor
data16
fsts
add
mov
in
loope
mov
adc
add
mov
add
ljmp
in
sub
push
sbb
mov
push
lahf
pop
inc
fs
dec
cmp
or
sbb
sub
sti
xchg
lods
daa
cmp
xchg
pop
pop
push
stos
mov
sbb
xorb
subb
sbb
inc
lods
sbb
rcll
pop
call
fmull
jo
es
push
cwtl
mov
and
dec
jp
mov
loop
or
icebp
nop
iret
out
mov
adc
lea
lods
xchg
dec
lods
pop
jle
orb
ret
inc
movsl
je
mov
push
test
and
or
jp
fdiv
cmp
push
jns
pop
pushl
mov
mov
jle
in
mov
add
imul
repnz
popl
push
pop
jbe
hlt
inc
sub
test
mov
out
mov
out
cmp
rolb
dec
in
push
popf
js
mov
out
lcall
add
faddp
mov
scas
mov
hlt
in
mov
add
push
mov
mov
push
sub
iret
outsb
out
loopne
pop
mov
cmp
mov
add
mov
das
sbb
cmp
adc
nop
mov
xor
movsb
or
add
and
aas
call
bound
icebp
imul
lcall
pop
mov
cmpsl
roll
adc
push
xor
inc
gs
and
pop
fistps
jno
fwait
insl
or
js
push
or
cmpsl
ss
xchg
fcompl
push
inc
mov
and
popl
push
xchg
test
add
in
mov
add
setge
add
push
mov
mov
ljmp
gs
inc
lret
mov
push
in
pushf
repnz
test
cmp
das
roll
fisttps
jmp
or
add
pop
test
test
fnsave
rcr
or
hlt
cmp
dec
add
cmp
sub
imul
jg
lret
or
cmc
dec
push
mov
mov
sub
add
jno
lea
arpl
repz
or
mov
clc
nop
outsb
repnz
add
mov
xchg
clc
push
pop
add
inc
push
inc
dec
cs
add
test
jge
xor
fldl
pop
pop
add
testb
dec
sahf
pop
movsb
lret
in
out
loopne
cmp
add
daa
add
push
ret
mov
movsb
pusha
push
imul
in
out
add
add
cmp
or
pop
int
jl
shrl
push
push
ret
mov
push
push
dec
sbb
call
outsb
xchg
push
or
dec
push
adc
pop
int
adc
cmpl
je
pop
icebp
out
mov
adc
mov
and
test
mov
pop
enter
or
jp
dec
add
dec
leave
adc
add
and
imul
loope
dec
stos
iret
cmp
std
cmpsl
push
dec
add
fidivs
mov
jae
fwait
xlat
adc
push
jbe
adc
add
and
lods
rolb
aaa
sub
jmp
arpl
insl
imul
insb
test
rolb
test
dec
xchg
daa
pop
test
or
sbb
pop
add
je
add
sbb
jo
or
lret
or
push
push
xchg
ret
cmp
add
and
push
add
and
int3
cli
lret
movsl
mov
add
fnstsw
repnz
in
pop
mov
decb
dec
testb
cmp
and
or
adc
mov
addr16
add
adc
add
aam
add
pop
cmp
xor
or
fstps
adc
dec
xor
add
insb
xor
add
stos
lret
pop
xchg
int3
adc
repz
or
dec
add
mov
aas
shrl
sbb
gs
dec
add
xor
add
cmp
inc
repnz
xchg
pop
dec
lea
xchg
andl
xchg
add
jo
mov
jmp
inc
imul
add
pop
das
ret
shrl
loopne
lcall
out
es
push
cltd
xor
adc
lahf
rcrl
icebp
aaa
sub
dec
lea
xchg
pop
inc
clc
into
leave
in
add
mov
movsb
in
add
in
aas
add
fs
cmp
jmp
pop
dec
aad
clc
inc
pop
or
mov
push
bound
sbb
add
in
push
push
test
in
inc
sbb
mov
iret
sub
subl
add
call
in
mov
pop
inc
sbb
add
inc
push
xchg
adc
sbb
lfs
sub
dec
mov
movsl
add
or
int
fildl
mov
mov
or
add
aas
iret
addr16
loopne
add
lret
js
cld
loop
inc
add
push
repz
lock
add
pop
mov
add
lret
sub
sbb
add
mov
sub
call
subl
scas
add
add
pop
jle
mov
cmp
punpckhwd
dec
push
enter
or
pop
int3
mov
add
xchg
xchg
or
fnstcw
dec
pop
pop
lcall
inc
adc
pop
clc
sbb
out
mov
mov
xchg
mov
xchg
ret
mov
and
adc
jne
mov
aas
mov
rcr
add
xchg
dec
or
shlb
test
and
jg
xchg
add
adc
inc
insb
data16
sbb
addr16
fwait
movsl
fadds
jne
xor
mov
fdivrp
in
push
fbstp
mov
lret
mov
push
adc
push
cmc
push
add
in
add
jno
loope
js
mov
inc
repz
inc
cmc
xchg
incb
xchg
mov
xchg
ljmp
sub
adc
fdivrp
push
in
mov
lods
fstl
shl
ja
fwait
adc
mov
xor
cltd
into
push
xlat
int3
rcll
ja,pn
sahf
dec
push
jmp
add
push
loop
mov
ret
out
scas
jg
ss
cmovs
or
and
jnp
int
adc
repnz
xor
addb
jmp
push
sti
clc
jbe
jg
push
mov
insl
sbb
sbb
ja
cli
cmp
mov
data16
shr
mov
sbbl
inc
mov
leave
out
adc
add
iret
or
mov
sbb
pop
mov
hlt
mov
add
out
dec
xchg
dec
dec
insl
mov
push
aam
loope
and
subb
inc
dec
cs
into
jg
add
pop
jo
jmp
sbb
jge
sub
movsb
sarb
mov
inc
popf
add
fsubrs
adc
imul
jns
xchg
aaa
stc
sub
into
jmp
sbb
rolb
scas
test
add
out
dec
sbb
sbb
test
push
pop
fimull
je
cmp
add
inc
pop
push
jo
xor
dec
or
lret
ss
inc
push
out
scas
sub
push
mov
aas
dec
mov
add
add
push
cli
dec
lcall
pop
xchg
and
sub
cmpb
pop
in
jae
dec
sub
jb
sbb
and
outsb
adc
dec
xchg
lcall
and
push
sub
outsl
movsl
cmp
add
js
data16
sub
mov
fldenv
add
xor
lock
xchg
or
movsb
cmp
in
int3
add
xlat
push
mov
outsb
dec
add
sbb
in
dec
rorb
js
popa
push
push
push
out
jge
dec
imul
add
cmp
lret
repnz
xchg
jae
into
add
cmpsl
dec
repz
lea
add
imul
mov
sbb
jno
popf
sbb
xchg
lret
mov
fdiv
add
xchg
es
ljmp
add
bound
lahf
mov
jmp
add
addb
cmc
leave
shld
add
movsb
out
add
lcall
inc
push
pop
push
jp
negb
xor
jb
add
mov
jle
xchg
sbb
imul
sbb
in
cli
xor
fildll
mov
test
add
out
xchg
xor
addb
mov
pop
inc
mov
push
out
lcall
xchg
cmp
push
mov
or
out
lods
xor
stos
add
hlt
xchg
dec
insb
fwait
mov
fcmovne
add
xor
sbb
xchg
mov
mov
int3
testl
cld
pop
hlt
aam
push
xlat
icebp
mov
mov
mov
aam
adc
into
adc
lock
sub
xchg
fidivs
inc
cmpsl
clc
call
bound
leave
xchg
lds
outsl
scas
sub
ds
imul
pop
lock
mov
pop
std
push
sbb
mov
push
xchg
add
xlat
divl
in
les
dec
inc
cwtl
push
push
xchg
push
pop
insl
pop
mov
and
es
xlat
clc
popl
push
shlb
add
movsb
cmpl
das
sbb
xor
shl
daa
aam
jnp
dec
lods
cmp
sub
or
insb
push
pusha
inc
bound
out
pop
add
outsb
inc
in
add
fildl
in
addr16
mov
push
sub
shl
xor
xchg
add
xor
lds
sbb
cmpsl
lret
mov
dec
or
enter
mov
pusha
inc
test
or
icebp
mov
sub
fnstsw
mov
xchg
jge
fnstcw
nop
mov
mov
sub
add
push
stos
jecxz
ret
inc
add
stos
xchg
rorb
xchg
adc
dec
jl
jno
das
daa
push
dec
pop
cltd
adc
add
xor
add
sahf
aaa
inc
out
lock
inc
mov
or
div
add
ret
inc
cmpl
lea
call
test
cmp
or
int
or
call
add
jg
sub
push
push
add
jle
xor
jae
push
inc
add
ja
dec
loope
fwait
push
dec
pusha
mov
mov
ljmp
pop
inc
adc
jmp
out
push
add
pop
es
xchg
adc
sub
movsb
in
shll
dec
adc
add
push
loop
sti
mov
add
and
fwait
gs
xchg
mov
lods
sbb
insl
aas
imul
test
xchg
mov
xor
jae
pop
data16
inc
or
add
sub
rorl
lods
cmp
dec
aaa
xchg
mov
int
and
cs
scas
add
adc
call
jl
pop
out
in
and
lds
cmc
outsl
push
jp
sbb
je
push
cmp
xor
mov
mov
lea
inc
push
hlt
dec
mov
les
pop
inc
popf
jno
and
test
shl
mov
cli
add
cld
mov
mov
jno
jns
int3
call
adc
inc
push
fs
rcrb
jecxz
aaa
insl
ret
add
sub
addl
push
test
or
pop
outsl
sbb
pushf
add
bound
sbb
sbb
in
fldenv
dec
outsl
js
jnp
xor
push
aaa
pop
jg
insl
lret
loop
sub
int3
inc
fstpt
xlat
and
lods
add
mov
cmp
es
or
pop
add
lock
dec
mov
sub
dec
mov
push
pop
mov
add
int
jbe
stos
jmp
xchg
sub
pop
inc
mov
decl
add
mov
lahf
inc
scas
push
pop
mov
rorl
lcall
xor
mov
fnstcw
rolb
sbb
lahf
lods
imulb
addr16
mov
sbb
xchg
jbe
mov
push
stc
movsl
sub
jne
int3
dec
div
dec
push
repnz
daa
mov
nop
xchg
cmp
movb
clc
dec
test
mov
add
mov
sbbl
add
mov
imul
fs
mov
cmp
add
jg
sbb
add
inc
mov
cmpb
bound
add
xchg
sbbl
push
mov
mov
out
sbb
fwait
jne
dec
sub
cmc
pushf
dec
or
inc
mov
add
lds
test
loopne
mov
cmp
sub
sahf
mov
pop
ret
adc
outsl
int3
adc
popf
scas
jle,pt
lret
pop
inc
sub
adc
and
mov
call
jmp
xor
add
and
inc
push
adc
and
adc
push
add
sub
lea
sbb
les
xor
pop
mov
inc
add
jno
mov
or
xchg
push
pop
jp
mov
or
sbb
inc
mov
mov
sti
test
mov
xchg
js
cs
xor
and
lcall
pop
shrl
enter
add
insb
pop
nop
fcomi
sub
das
push
test
aaa
push
add
test
stc
mov
add
adc
and
dec
xchg
sbbb
xchg
stos
lock
flds
jno
ficomps
xor
and
mov
enter
lock
lret
loope
int
je
in
sub
sub
dec
fildll
fs
fstpl
ret
dec
mov
mov
adc
std
inc
jbe
push
stos
cmp
ds
repz
aad
add
mov
nop
add
adc
dec
repz
mov
push
jecxz
or
add
sahf
shrb
cmc
jp
data16
add
je
cltd
fcmove
mov
push
hlt
mov
jle
lock
xchg
mov
and
add
fisubrs
add
fwait
mov
mov
jecxz
mov
arpl
sbb
lock
inc
add
cmp
stc
add
bound
add
xchg
jg
dec
mov
mov
in
add
test
xchg
push
adc
sub
outsb
mov
add
xchg
lds
addb
pushf
push
or
enter
pop
sub
in
add
imul
pop
xchg
rolb
push
mov
lds
leave
add
add
aas
jbe
add
insb
cwtl
into
fcomi
sbb
lea
in
jle
or
das
ljmp
add
xchg
adc
aas
mov
das
adc
add
and
mov
cli
sbb
adc
and
flds
into
mov
outsb
andb
inc
leave
dec
pop
sbb
in
sbb
sbb
cwtl
daa
xlat
je
test
inc
push
and
lea
mov
stos
jle
orl
push
add
icebp
dec
cmc
inc
pop
aad
sub
dec
and
push
add
rolb
dec
sar
inc
push
daa
mov
xchg
je
jns
add
xor
add
shl
into
sarb
mov
add
scas
test
pop
add
sub
push
gs
add
mov
movsl
sbb
add
xchg
data16
lret
fldcw
call
xor
int3
or
ljmp
cltd
add
xor
aad
add
cmp
out
in
mov
xchg
popa
pop
add
dec
jge
add
push
cmp
das
adc
mov
sbb
int
xchg
repz
test
mov
sub
cmpsb
sub
imul
add
inc
add
int3
adc
pusha
fisubrl
lcall
and
pop
cwtl
fildll
daa
jns
or
adc
sub
fwait
lea
out
fimuls
xchg
test
add
ret
fsubs
push
cmp
mov
or
xor
add
fsubrl
shrl
stc
mov
cmpsl
lods
mov
mov
mov
adc
push
push
enter
lea
in
and
sbb
fists
sub
add
mov
test
ret
sbbb
int
inc
inc
add
out
push
sbbb
fimuls
xchg
jne
inc
mov
aaa
stc
push
pop
mov
std
mov
add
fwait
dec
jno
pop
dec
or
jle
mov
add
flds
pop
inc
add
iret
icebp
aas
sbb
cwtl
test
jb
and
xlat
adc
icebp
jmp
mov
lret
loop
inc
adc
mov
ds
testl
mov
mov
xchg
add
pop
nop
call
leave
ljmp
scas
cmp
inc
jnp
add
sbb
pop
pop
pop
popa
inc
sub
clc
sub
push
add
scas
outsl
pop
cmp
add
or
outsb
or
pop
mov
dec
lods
lock
inc
sub
add
pop
add
lds
arpl
mov
xchg
and
xor
push
in
ljmp
mov
fcmovbe
push
jnp
lods
adcb
aam
jge
ret
hlt
push
mov
test
xchg
adc
outsb
lahf
pop
mov
cs
mov
sbb
bound
fdivs
xchg
sub
adc
sbb
xor
or
add
lret
add
cmp
add
or
mov
mov
dec
xorb
add
adc
jl
mov
out
sub
repz
push
xchg
test
inc
xor
nop
pop
inc
lods
stos
add
jnp
sub
add
adc
stc
push
add
cs
add
rclb
cmp
pop
add
in
pusha
or
add
cmpsb
mov
outsl
lahf
xor
cmp
add
icebp
mov
jne
mov
or
xor
notl
xchg
ret
add
mov
adc
std
aam
incb
jo
add
mov
fadd
sti
stc
mov
hlt
xor
test
mov
push
pop
adc
inc
popf
in
shr
ja
and
sub
pusha
sub
lret
jp
out
leave
jl
xchg
adcl
add
out
mov
jbe
xchg
add
inc
mov
cmp
add
mov
jmp
mov
push
test
mov
imull
sbbl
ss
or
loope
or
enter
std
inc
jg
jmp
mov
jae
push
or
outsl
nop
adc
adc
jge
jns
int
add
inc
arpl
inc
scas
mov
lds
scas
add
adc
negl
je
cmpsb
add
mov
push
clc
mov
lahf
jl
fldl
jl
es
and
jl
fdivr
cs
adc
push
dec
add
adc
outsb
sbb
mov
and
mov
ret
mov
xorb
jns
inc
xchg
xor
push
aad
hlt
ds
std
mov
jecxz
jmp
cmp
out
cs
testb
test
mov
jne
test
je
pop
add
decb
inc
dec
mov
mov
mov
loope
add
or
xor
lret
lret
pop
sbb
add
inc
cmp
add
call
in
mov
mov
out
mov
add
jp
inc
jmp
xchg
cmp
inc
xor
jmp
sbb
hlt
add
sub
pop
push
mov
hlt
add
imul
pop
jnp
das
inc
lea
cmpsb
lcall
cmp
add
jle
add
cmc
imul
add
iret
and
ja
add
xchg
xchg
cmc
clc
outsb
add
fildl
movsl
add
and
and
repnz
mov
sub
mov
clc
pop
xchg
add
mov
fistl
push
mov
lea
bound
xchg
imul
scas
jbe
jmp
mov
add
out
mov
adcl
pop
ds
inc
lea
sub
out
jl
out
pop
mov
js
shll
test
int3
stos
jo
ja
add
mov
lret
scas
call
mov
push
cmp
sub
dec
lret
les
cmp
push
xchg
jg
pop
aad
jb
imul
mov
cmp
inc
loopne
sub
sbb
cmp
arpl
sub
movsb
lods
addl
mov
ljmp
insl
filds
leave
outsb
lds
push
scas
out
jbe
inc
loopne
adc
mov
jb
cmpsl
in
mov
lods
push
movb
jne
add
pop
test
dec
jno
add
or
movsl
and
repz
pop
xchg
pop
mov
repnz
or
pop
or
cmc
dec
mulb
sti
orl
js
lods
shll
loope
dec
xor
fs
leave
adc
testb
add
jbe
or
test
pop
testl
adc
mov
repnz
scas
add
and
jg
add
fstpl
imul
xor
mov
out
ss
out
sbb
xor
cmc
jge
inc
mov
pop
cmp
fcmovnbe
int
dec
ds
dec
hlt
or
push
cwtl
add
repz
and
fs
ljmp
or
add
faddl
push
bound
add
pop
jnp
push
xlat
popa
xchg
inc
mov
sti
mov
sub
or
xlat
mov
dec
jns
push
add
inc
add
rcrb
adc
jp
adc
fstl
lods
daa
mov
out
scas
rorl
mov
js
add
add
and
inc
pop
mov
push
xchg
sbb
cmp
pop
and
push
pusha
hlt
invlpga
xchg
fucom
mov
xchg
pop
cmp
add
in
stc
lcall
dec
push
push
xor
or
cmpl
out
in
add
imul
push
sub
jmp
cmpsb
push
aad
mov
sbb
cmp
add
inc
sbb
out
adc
es
cmp
jbe
and
add
outsb
jo
ret
mov
push
adc
push
testb
dec
push
or
cmp
ret
cmp
mov
add
test
idivb
or
xchg
adc
mov
insl
xchg
loop
pop
test
add
roll
sub
jae
lods
pop
ret
add
jmp
arpl
sbb
mov
cmp
inc
add
mov
mov
cmp
repnz
push
push
aam
in
add
mov
push
std
and
jo
in
mov
movsb
test
push
jb
add
inc
mov
add
inc
cmc
add
mov
inc
sub
mov
xchg
jl
into
xor
xchg
pop
aad
push
dec
jmp
shl
or
js
sbb
leave
add
not
jecxz
test
das
add
test
and
inc
jle
cld
or
lea
sbb
fnstcw
test
pop
mov
ret
gs
add
mov
mov
mov
cmp
dec
xchg
aam
fwait
push
jne
add
loopne
sub
mov
jge
xchg
insl
inc
cmp
insb
fbstp
cmp
sbb
cltd
js
lret
sub
mov
xchg
ds
imul
xchg
mov
xchg
dec
sbbb
mov
in
sub
lock
mov
faddl
iret
data16
ficoml
add
pop
rcrb
out
lahf
jbe
mov
mov
mov
add
xchg
mov
adc
or
mov
movsl
jns
add
cwtl
sub
and
testl
jno
jb
add
pop
rcrl
dec
clc
fsubrp
add
push
fmull
mov
push
adc
dec
inc
cwtl
in
rcl
push
int3
and
push
xchg
mov
add
fsubl
addb
js
dec
fistl
and
cltd
sbb
add
lcall
in
mov
sbb
or
dec
jb
push
daa
push
adc
popa
cmpb
loope
inc
fs
lods
or
dec
adc
or
or
xchg
add
push
aas
mov
cmpl
pop
addr16
and
add
sub
xchg
mov
js
add
or
fprem1
popf
bound
test
lret
scas
add
in
sbb
or
enter
jns
cmp
sub
ret
in
test
or
jno
outsl
dec
jnp
inc
cmp
movsl
inc
sbb
cmp
out
mov
dec
and
sti
add
inc
leave
mov
adc
sar
dec
adc
jno
loop
in
fs
add
popf
push
sub
insb
inc
and
xchg
test
cmc
addl
test
cmp
ljmp
xchg
repz
add
sbb
fdivrs
cmp
pop
xor
mov
fisubs
inc
xchg
or
int
jle
or
cld
add
inc
inc
jmp
clc
ret
dec
sbb
xchg
insb
adc
jl
jnp
inc
popa
or
cmp
mov
int
xchg
aad
add
mov
push
fiaddl
arpl
out
xchg
mov
adc
lret
jecxz
cmp
ljmp
or
jp
pop
or
dec
or
xor
std
shrl
dec
test
mov
clc
enter
push
and
jnp
sub
lret
ret
add
mov
pmullw
add
and
idivb
leave
adc
cmp
int
mov
push
mov
popf
or
add
jg
pop
pusha
push
cmpsb
or
sub
ss
cmp
add
mov
push
adc
sub
xor
inc
sbbl
cmp
out
inc
jp
or
loope
add
test
mov
icebp
push
pop
negb
mov
mov
decl
or
inc
jle
test
or
daa
into
add
loope
lds
add
mov
push
push
movl
inc
arpl
sbb
pop
add
incb
pop
cmp
hlt
lea
mov
movups
jae
sbb
lea
jbe
or
test
cwtl
pop
and
cld
int
sbb
das
add
repnz
push
je
cmp
xchg
push
ljmp
decb
xor
push
sub
fnstsw
inc
adc
sbb
or
sbb
add
cs
jns
pop
cmp
cltd
scas
loopne
aad
inc
ss
xor
lret
aaa
jmp
jmp
mov
pusha
mov
test
mov
mov
jns
outsl
sarl
roll
loop
add
cli
adc
sbb
shlb
add
sub
mov
sub
or
xchg
sub
jecxz
lret
fldt
dec
int3
sbb
shll
pop
cmp
or
mov
addr16
sbb
mov
adc
enter
xchg
stos
leave
cmp
xor
jl
test
mov
xchg
fs
push
stos
loop
je
cmpps
and
out
add
mov
mov
inc
pop
cmp
das
ret
rcll
and
scas
es
cmp
pop
sarb
adc
into
std
sbb
add
xchg
adc
add
insl
xor
add
in
sbb
imul
and
fiadds
cmp
xor
pop
and
mov
or
insl
jle
mov
cmc
mov
pop
in
mov
sbb
outsl
in
test
out
cld
mov
rcll
sbb
popf
xor
into
pop
rcll
in
or
mov
inc
mov
xchg
add
dec
test
and
decb
orb
pop
fisubl
dec
jp
loopne
and
stc
cmp
rolb
pop
fisubl
mov
jb
je
adc
in
add
ds
add
lods
out
dec
or
add
leave
sbb
sahf
and
js
sbb
push
dec
inc
lods
xor
insl
or
out
std
dec
add
cmpsl
arpl
into
sbb
aam
and
add
fbstp
cmp
xchg
pop
pusha
mov
jno
roll
xchg
cmpb
pop
mov
or
inc
repnz
enter
add
mov
sti
jl
lcall
mov
xchg
js
aaa
pushf
add
jmp
ret
pop
add
rorl
adc
lds
add
mov
cli
nop
fldenv
add
xor
jecxz
xchg
push
mov
xchg
xor
sbb
addr16
ja
inc
xor
adc
xchg
fimuls
add
lret
jnp
mov
test
fs
xchg
data16
dec
mov
iret
add
dec
inc
jnp
pusha
inc
adc
dec
mov
or
cmp
adc
repz
lods
dec
cmp
jmp
inc
nop
popa
repnz
jns
jp
inc
inc
pusha
sub
mov
jne
push
jecxz
out
inc
sub
lret
test
inc
jge
cmpsb
fwait
or
cld
fstl
rcrb
ror
mov
test
sahf
fnstsw
cmp
add
mov
xchg
xchg
mov
add
enter
addr16
lea
movsb
cmp
pop
lcall
adc
add
or
cmp
sbb
stc
cmpsl
push
mov
push
jle
cs
outsb
fwait
or
dec
push
push
or
ja
add
or
push
push
dec
out
shl
loop
addl
or
adc
add
pop
inc
sbb
mov
in
pop
dec
sbb
cmp
xchg
test
add
jno
push
sub
or
add
mov
inc
cwtl
cmp
xchg
add
push
loope
pop
scas
cmp
add
mov
movl
add
jae
scas
inc
sbb
insl
sub
fldcw
mov
adc
dec
xchg
sub
add
movsw
push
add
inc
popa
fildll
sbb
mov
add
enter
mov
pop
je
gs
insl
fnstenv
add
lods
fs
movl
dec
and
pop
add
gs
or
push
sar
cmp
shll
xchg
push
add
inc
xor
ss
enter
movb
mov
rclb
pop
js
cwtl
dec
mov
ja
adc
out
cmc
ljmp
sbb
sar
outsl
jg
adc
stos
push
or
add
les
mov
in
add
filds
dec
lret
insb
mov
sbb
xlat
push
addl
sbb
stos
aad
orb
mov
mov
mov
aas
adc
inc
aam
jg
ljmp
xchg
or
add
mov
js
push
mov
lock
imul
and
inc
pop
sub
pop
sbb
xlat
add
mov
mov
add
rcr
cmpsb
xchg
sub
call
mov
roll
cwtl
mov
fsubrl
movl
in
leave
mov
cmp
ret
add
jl
hlt
add
pop
add
cltd
cmp
repnz
pop
outsb
add
ds
add
xor
push
xor
push
popa
sbb
imul
bound
adc
sub
mov
xchg
aad
add
stos
je
xorb
sbb
xchg
out
sub
repz
xchg
in
nop
sub
inc
mov
mov
xchg
push
dec
push
fmulp
notl
inc
lods
adc
in
mov
fsubl
mov
fneni(8087
xor
jne
cmp
hlt
jns
sub
add
inc
or
add
push
aam
movsb
jns
add
aad
cmp
adc
cmp
ss
ret
out
call
inc
add
test
push
adc
out
sbb
or
dec
sbb
or
add
add
pop
dec
add
loopne
rorl
add
int
xchg
add
xchg
inc
mov
fiaddl
jge
cmp
inc
js
jnp
cld
xchg
test
xor
sub
shr
xchg
ljmp
cli
std
divl
add
hlt
add
lcall
fcomi
adc
push
add
fwait
std
fcomps
adc
xor
mov
ficomps
xchg
pusha
sbb
cmp
adc
ljmp
or
add
in
movsl
rcrb
dec
jne
ss
insb
adc
cli
icebp
stc
add
enter
add
cmp
mov
add
lahf
adc
add
negl
aad
jecxz
cmp
inc
pop
sbb
fmull
shrb
jecxz
xor
in
add
out
push
jne
lret
add
adc
inc
mov
stos
je
mov
ja
xchg
inc
rol
add
push
jb
ret
js
adc
xchg
paddsb
pop
and
sbb
cmp
or
mov
outsl
mov
and
cmpsb
add
and
push
repnz
push
mov
dec
ja
stos
loopne
sub
je
mov
push
rcrb
push
sub
rorl
out
or
pop
dec
push
jb
xchg
jnp
lret
inc
cltd
sbb
jge
mov
mov
and
dec
jns
add
ltr
and
sbb
leave
test
shlb
mov
pop
mov
std
push
push
mov
push
mov
sub
aas
fistpl
add
add
push
sub
or
fisttpl
out
xor
adc
mov
popf
scas
inc
ljmp
sbb
mov
pop
cmpsb
cwtl
fisubs
sub
xor
je
aaa
leave
push
add
test
jo
lods
inc
or
pop
bound
mov
push
push
dec
stos
add
inc
rol
add
daa
or
mov
mov
aaa
lds
test
push
sbb
aad
cwtl
cmp
sarb
lcall
mov
add
jne
lock
xor
adc
out
sub
outsl
insl
xor
pop
lcall
data16
fldcw
lret
rol
adc
faddl
mov
jb
and
arpl
stos
lret
push
pop
xchg
pop
xchg
or
jecxz
add
cmpsl
xor
mov
lea
or
shl
xchg
lahf
inc
and
add
mov
sti
add
xchg
mov
sub
stos
pop
mov
into
pop
mov
ds
mov
out
aad
mov
shrl
xor
les
inc
lcall
fbld
lea
add
push
cld
cmc
add
in
lahf
inc
imul
cli
mov
cmp
mov
lret
leave
stc
add
movsl
cli
repz
mov
add
jp
shrl
aam
add
clc
jo
pop
in
mov
add
push
ja
jle
xchg
popa
notb
scas
mov
dec
je
in
add
mov
jbe
js
sub
and
pop
mov
in
int
out
in
add
sbb
daa
add
push
loope
out
xlat
sub
pop
int
add
add
fstpl
jg
cmpsb
xor
cs
cmp
dec
mov
xor
test
icebp
iret
outsl
sub
add
sub
cmp
xchg
inc
popf
ja
into
mov
jb
es
mov
pop
push
adc
sahf
sub
into
mov
lods
pop
ljmp
call
add
nop
dec
dec
scas
mov
push
jo
or
in
pop
cs
mov
aas
inc
cmp
add
jne
fisubrs
mov
push
aad
mov
or
into
add
and
add
repz
lods
add
mov
jns
dec
inc
mov
push
in
pop
cmpb
jl
and
std
les
ljmp
mov
ljmp
and
inc
or
add
push
add
fmul
inc
add
xchg
fcomi
loopne
sub
scas
imul
shl
lea
dec
add
jnp,pn
push
loop
xor
jecxz
lret
mov
int
mov
sbbb
mov
cmc
mov
in
nop
push
dec
mov
adc
add
jl
inc
iret
inc
or
add
xrelease
sub
lds
pop
stos
xchg
lahf
ret
sub
test
xchg
push
push
aad
xchg
pop
inc
pop
dec
add
mov
add
add
sbb
repnz
ja
roll
mov
or
mov
push
adc
mov
push
and
in
es
pushf
push
sahf
ret
adc
add
xor
adc
jl
push
jnp
sbb
cmp
or
lret
add
push
stos
push
jo
jg
icebp
cmpsb
push
sbb
out
push
cs
in
dec
push
fwait
add
mov
ret
jno
jmp
out
cs
sbb
repnz
pushf
sbb
dec
mov
dec
test
xchg
shr
iret
add
fdiv
out
ret
jecxz
push
xlat
sub
xor
add
jo
clc
cs
adc
mov
pushf
mov
add
sub
ret
ret
fsub
fldcw
and
out
cmovae
es
mov
jmp
jle
mov
add
hlt
sbb
mov
in
add
mov
cmp
push
add
sbb
jae
fs
add
enter
sbb
push
push
or
inc
sub
lea
cmpsl
decb
mov
movsb
loop
xchg
cs
sbbl
cmp
sti
add
icebp
pop
ret
add
sbb
cmp
aaa
in
inc
add
repnz
clc
out
xchg
fnstcw
push
mov
push
dec
push
jmp
jo
pop
flds
mov
andl
xchg
int3
dec
sub
pop
stos
pusha
add
fwait
in
add
add
cli
adc
pop
aam
push
sti
sub
imul
stos
sbb
fistpll
jb
dec
pop
push
mov
outsb
jp
out
in
pop
mov
movsl
stos
add
dec
mov
jg
cli
adcl
bound
rorl
sub
into
arpl
lods
cltd
lods
and
int3
push
inc
mov
pushf
aas
hlt
std
cwtl
pop
or
fdivs
int
push
out
bound
stc
push
aad
inc
jp
int
cmp
lods
xor
jbe
xchg
outsb
dec
add
cmpsb
mov
mov
adc
enter
push
ss
lret
dec
xor
pop
sbb
push
loop
dec
add
push
inc
push
inc
push
pop
cmp
cmpsb
mov
push
adc
cmp
add
flds
gs
dec
push
mov
jns
int
jne
lea
push
mov
pushf
push
aaa
cmp
cmpsb
adc
jp
mov
and
push
int
js
add
push
mov
fnstcw
xchg
mov
cmpsb
rcrl
mov
nop
fcompl
insb
sub
and
arpl
aaa
scas
sub
push
mov
mov
add
cmp
push
sbb
sbb
mov
iret
sbb
xor
roll
stos
stc
adc
loope
jbe
dec
dec
mov
bound
sahf
pop
jmp
cli
push
dec
add
aad
lock
adc
gs
ljmp
inc
add
adc
sbb
push
or
push
dec
sub
jb
add
pop
hlt
adc
cmp
add
xchg
mov
xor
add
sbb
out
in
jo
or
add
in
dec
addl
div
nop
lea
adc
sbb
dec
xchg
cmpl
add
leave
imul
push
ret
inc
in
add
es
push
iret
hlt
test
adc
sbb
fstp
pop
or
and
cli
jp
movsl
jl
xchg
lea
int
cltd
push
mov
pop
gs
add
lret
dec
push
add
add
inc
mov
jg
int3
vmwrite
fsubs
mov
add
popa
shrl
lea
je
jb
dec
xchg
sub
xchg
loop
cmp
ds
add
sbb
sti
cli
mov
fisttps
sub
jl
add
shlb
add
lods
rorb
push
out
push
int
repz
cmpsb
leave
mov
pop
ss
push
popa
lcall
pop
outsb
fstpl
mov
and
mov
add
movsb
cmp
lods
sbb
dec
movb
lea
or
add
mov
add
dec
scas
jmp
mov
ds
fidivrs
fists
xor
push
add
jne
add
sar
and
cltd
xor
stc
cmp
nop
rorb
mov
add
or
and
jb
jle
dec
dec
jns
jne
xchg
mov
xor
add
int3
add
adc
lret
xchg
jle
inc
leave
sub
or
dec
add
inc
sti
inc
fnstcw
add
push
cmp
and
cli
mov
adc
test
add
adc
repz
cmp
or
es
mov
xchg
mov
cmp
shlb
adc
dec
int
pushf
stos
add
inc
mov
jae
lret
mov
sbb
lcall
fimuls
pop
fcmovbe
imul
enter
xchg
dec
jle
adcl
inc
lcall
add
rolb
add
ljmp
dec
mov
aaa
sbb
mov
shlb
test
add
cmp
push
repz
mov
inc
push
pop
std
clc
jmp
push
test
mov
xor
mov
dec
xorl
popa
inc
xor
ret
stos
stc
xchg
add
mov
les
adc
rorl
jl
jno
add
jb
jo
push
mov
adc
add
aad
push
sub
lcall
cmp
add
in
jecxz
add
xor
sub
sub
lahf
or
pop
sbb
stc
mov
lods
push
pop
in
cli
dec
fildll
add
mov
push
jp
sbb
add
dec
push
cmp
inc
push
lahf
add
lods
mov
aaa
popf
test
add
inc
add
jnp
mov
sub
aaa
sbb
jmp
jne
push
das
int3
cmpsb
jae
test
add
xchg
in
add
in
mov
add
pushf
stc
addl
leave
xchg
sub
push
mov
call
cmp
roll
insl
add
sub
push
imul
jl
ret
rclb
and
add
je
jne
psraw
jle
add
pop
addr16
std
pushf
dec
inc
divl
gs
int3
stos
jl
fistpl
fcom
inc
dec
xchg
dec
inc
in
push
add
test
dec
mov
arpl
jae
push
cwtd
dec
sub
insl
stos
pop
push
repz
xchg
add
pop
movsb
add
stos
fildll
push
out
add
mov
js
sbb
add
xor
pusha
enter
xchg
push
outsb
or
pop
add
jp
fdivs
mov
and
pushf
add
and
xor
outsl
add
inc
ss
addr16
daa
mov
jecxz
pop
scas
test
shlb
std
or
repz
dec
adc
sub
fdivrl
aad
or
mov
or
cmp
push
mov
xlat
stos
je
adc
and
xor
leave
lea
cli
add
cmp
mov
add
dec
and
fisttpl
data16
xchg
adc
add
jno
shlb
add
sbb
add
lock
pop
sbb
jge
mov
rcll
xchg
add
xor
inc
pop
rcl
jecxz
cmp
xchg
popa
loop
add
dec
cmp
push
add
orb
xchg
adc
jb
push
mov
inc
pop
push
or
mov
sub
outsb
je
cs
xor
dec
scas
mov
mov
mov
call
fdivr
clc
decl
lcall
ljmp
cmp
dec
lcall
imul
cltd
ljmp
fcos
jmp
std
sbb
sub
cmp
dec
cld
pop
add
js
mov
cwtl
or
or
or
or
push
or
jno
orl
mov
ret
or
inc
adc
in
repnz
pop
fwait
lcall
mov
push
js
ss
insb
clc
xchg
inc
xor
loop
clc
dec
cmovs
dec
xor
dec
pop
dec
xchg
dec
scas
dec
aad
jmp
jle
pop
sub
push
fisubrl
xchg
fwait
scas
fcmovnb
fcmovnbe
fucomi
fcomi
fldt
fstpt
fisttpl
popa
fndisi(8087
fcomi
iret
and
stos
mov
sub
test
xor
hlt
out
inc
inc
test
ret
inc
iret
cmp
sbb
xchg
cmp
js
adc
push
jge
lea
xchg
jle
rolb
roll
or
lcall
xchg
mov
dec
int
iret
add
insb
jl
mov
scas
in
in
lret
or
or
or
xchg
daa
jne
addl
icebp
push
adc
outsb
inc
sbbb
xor
sub
decl
sbb
sbb
fs
sub
stos
int3
sub
stos
cmpsl
sub
stos
sti
lds
jb
test
sub
stos
lock
stos
or
stos
xor
out
and
jae
xchg
pushl
aad
in
in
push
cmc
jns
mov
push
fnstcw
jmp
dec
jp
test
adc
jl
xor
pop
std
inc
push
inc
lods
dec
into
dec
out
jns
testl
scas
stos
mov
ja
pop
popf
jmp
dec
test
push
and
dec
popf
mov
test
adcl
call
mov
jle
loop
hlt
xchg
pop
mov
pushf
jns
jo
shl
ljmp
inc
or
dec
je
pop
les
pop
pop
repz
sbb
lahf
test
mov
mov
out
fdivr
call
inc
call
std
sub
lock
hlt
jl
nop
cld
fiaddl
out
add
pop
or
or
fwait
or
or
les
inc
jp
inc
inc
inc
push
dec
lahf
dec
mov
insl
loope
test
mov
sbb
sub
or
dec
jl
inc
sub
lret
inc
cmp
push
sbb
leave
mov
xchg
pusha
scas
outsb
mov
jle
incb
imul
sti
mov
sub
mov
and
xor
jp
mov
lret
stos
inc
stos
gs
jns
mov
mov
lods
sub
adc
pop
insb
in
sbb
inc
push
or
or
or
push
sahf
popa
mov
pop
aad
pop
dec
lock
or
sub
mov
jns
mov
dec
or
sbb
pop
cmp
push
fistpl
fcmovne
fcmovnu
fucomi
fisttpl
fistpl
fldt
fstpt
fisttpl
pop
fldt
jns
mov
cltd
fldt
fcmovnu
fucomi
fisttpl
iret
sbb
lahf
cmp
push
lcall
dec
fdivr
call
je
sub
cmp
dec
push
pop
push
imul
cltd
push
test
xor
jmp
sbb
cmp
dec
stos
pop
sub
js
mov
mov
stos
call
stos
sbb
dec
stos
pop
stos
imul
mov
stos
jmp
pop
pop
cmp
push
aad
xor
mov
cwtl
icebp
or
or
or
or
or
pop
cmpsb
imul
pop
leave
inc
mov
or
sbb
test
sub
pop
sub
subb
stos
mov
fsubrs
add
stos
xor
stos
gs
jne
test
mov
lds
mov
jp
pop
xor
inc
ficoml
pop
je
test
xchg
aam
in
hlt
fildl
jne
test
xchg
fcmovnbe
frstpm(287
fcomi
fildl
iret
adc
and
xor
inc
mov
je
test
xchg
jmp
aam
in
hlt
incl
pushl
jmp
jne
test
xchg
jmp
hlt
lock
or
cld
jle
pop
push
lcall
lods
fwait
mov
mov
aam
fdiv
in
add
and
xlat
test
rep
rep
repz
pop
subb
add
or
or
or
or
or
or
or
dec
adc
sbb
mov
mov
mov
pop
cmp
aad
fstl
in
fs
jl
test
mov
hlt
push
add
push
sbb
push
xor
push
gs
movsl
push
mov
mov
push
aad
fldl
in
in
push
cmc
push
adc
test
subb
testl
pushf
dec
movsb
dec
les
dec
adc
dec
sub
dec
inc
dec
dec
pop
std
lock
mov
push
fldl
in
in
push
cmc
push
std
push
push
or
fnstsw
xchg
mov
movsb
rep
repz
mov
repz
repz
repz
icebp
push
lahf
add
insl
aam
int
fldl
in
in
push
cmc
push
std
push
push
or
fnstsw
xchg
std
pushf
push
movsb
push
lods
push
mov
mov
push
in
push
sub
push
dec
push
push
push
pop
push
gs
insl
push
jne
jno
movsl
or
or
or
or
int
mov
sub
pop
sub
mov
stos
aam
fsubrl
adc
insl
jge
test
fistl
xlat
aad
xchg
int3
or
insb
lock
sub
mov
push
gs
fs
and
les
xor
add
dec
cmp
xchg
stos
popf
stos
movsl
stos
lods
stos
mov
mov
movsl
in
add
orb
xchg
fs
sub
push
jl
movsb
push
in
xor
cld
dec
add
dec
sbb
dec
xor
dec
mov
mov
dec
aad
fisttpll
dec
in
xor
adc
pop
xor
jae
xchg
xchg
mov
rcll
lods
repz
adc
repz
repz
repz
repz
repz
repz
repz
repz
js
dec
pusha
dec
jle
push
sbbb
jmp
sbb
fisttpl
fstpt
jl
jo
add
pop
subb
lcall
ret
lahf
or
xchg
mov
cmp
in
insb
in
sub
fadds
sub
xor
sbb
mov
movl
dec
add
and
les
and
cwtl
out
iret
je,pn
lahf
push
scas
mov
cmp
jl
pop
fimull
gs
xchg
cld
std
int
jp
aad
jno
punpckhwd
jle
jno
std
inc
sub
cwtl
dec
enter
jmp
jnp
xchg
mov
lret
iret
cltd
fbld
sbb
xchg
or
repz
mov
xchg
sbb
mov
push
leave
test
scas
pop
mov
fimull
dec
hlt
dec
xor
stos
adc
lahf
das
xor
popa
pushl
mov
xchg
jmp
mov
mov
pop
push
lods
or
sahf
int
popa
sbb
dec
xchg
xor
add
test
push
xor
dec
and
dec
pop
xor
or
negb
push
imul
int
xlat
stos
loope
sti
xchg
es
lods
jl
bound
cld
add
and
popf
push
jbe
pusha
mov
sub
stos
dec
and
in
stos
fndisi(8087
xlat
or
push
mov
loopne
repnz
shll
icebp
pop
mov
sub
jp
test
sub
stos
loopne
lock
sbb
sub
jg
add
push
scas
jno
shrl
mov
jle
xor
inc
jno
fcomip
pop
out
fs
clc
je
int
test
mov
push
in
or
sub
or
and
mov
push
xlat
pop
mov
insl
xlat
inc
xlat
mov
aad
push
or
shr
push
push
lds
sbbb
loop
gs
jl
test
imul
fdivrl
in
jns
jne
xor
push
mov
insl
push
mov
in
in
repz
repz
in
adc
sbb
sub
clc
cltd
mov
mov
adc
in
lods
test
push
dec
jge
test
dec
popf
cmp
jmp
add
push
push
push
cmpsb
out
mov
jmp
cli
call
je
cmp
dec
push
gs
jns
popl
mov
loope
mov
sub
xor
xchg
xorb
cli
repz
and
mov
leave
fnstenv
push
and
push
fstl
or
sbbl
adc
test
repz
icebp
popf
fbld
negb
push
sub
inc
sub
pop
gs
aad
mov
pushf
fbld
je
cld
push
add
or
or
dec
mov
jns
int
fnsave
in
imul
cs
sub
insb
pop
mov
lea
xorb
outsl
push
dec
jb
in
loope
data16
sub
xchg
xor
xor
and
push
push
sbb
and
int
and
in
sub
jl
dec
test
push
sbb
lods
adc
pushf
adc
lods
in
sub
fmuls
aas
or
sarl
clc
mov
mov
aas
pop
push
nop
dec
xchg
xor
and
fcompl
lcall
enter
sbbb
lods
push
mov
xor
test
iret
cld
repz
aaa
aam
and
call
push
push
ss
xor
shrl
jbe
aad
jns
push
bound
jle
lahf
mov
gs
sti
adc
mov
out
pop
pop
repnz
das
xchg
scas
dec
fs
jno
xchg
cs
icebp
push
call
push
stos
int3
js
xchg
insl
jo
aad
loope
popa
hlt
or
imull
jo
xchg
popf
lcall
push
stos
insl
sbb
push
inc
hlt
dec
xor
dec
orl
stos
dec
lds
dec
add
sub
jae
xchg
sahf
mov
out
or
xchg
mov
sbb
xlat
push
insl
test
jle
mov
pop
sub
dec
jle
mov
sahf
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
jno
orl
push
sbb
cltd
sahf
sbb
test
mov
xor
push
add
jno
in
clc
cmpsb
stc
jno
push
jle
push
cltd
sbb
push
mov
bound
mov
mov
loope
ficoms
fisttpll
xchg
xchg
jnp
in
js
push
hlt
push
clc
mov
mov
mov
mov
mov
or
or
shlb
jl
sub
stos
adc
das
stos
dec
sub
orb
dec
cwtl
dec
inc
xor
dec
inc
test
jae
xlat
xor
push
out
out
xchg
divl
movsl
push
lahf
push
scas
lahf
push
add
stc
enter
push
cld
cli
jno
lods
add
mov
lods
or
lods
push
lods
bswap
sub
insb
jno
in
in
fcomip
out
out
sub
dec
inc
push
outsb
push
inc
push
inc
es
cs
ss
ds
inc
dec
push
xor
add
or
das
icebp
push
mov
cmp
repz
jo
test
xor
dec
cmp
cmc
push
std
pop
inc
dec
ss
push
add
mov
int3
sub
js
mov
movsb
clc
mov
add
stos
jae
jge
icebp
xor
dec
add
pop
in
in
test
mov
xor
scas
leave
dec
dec
dec
pop
dec
imul
sub
loope
in
or
cs
pop
cld
mov
push
mov
pop
cwtl
mov
cli
subb
nop
in
pop
pop
sub
xor
add
aam
pop
xchg
test
jbe
js
popf
xor
clc
mov
scas
pop
insb
mov
jb
xor
nop
sub
aam
bound
push
dec
xchg
test
pop
jl
mov
adc
ja
jo
jp
xacquire
addl
mov
sub
xor
shlb
jns
and
inc
gs
push
xchg
shr
xchg
mov
int
mov
int
and
dec
mov
sbb
jo
xchg
mov
icebp
lea
push
in
pop
std
push
out
cs
subb
cmp
dec
push
addb
jbe
dec
insl
xor
mov
cmpsl
push
ret
push
sti
push
pop
pop
cmpb
inc
rcll
test
in
in
cmc
mov
adc
xchg
jo
dec
rorl
xchg
mov
roll
jp
nop
inc
sahf
inc
mov
push
shlb
mov
rorl
lock
dec
insl
movsl
xor
in
hlt
sub
pop
and
mov
mov
fdivrp
sbb
movl
in
subl
cmp
je
xlat
dec
push
mul
jno
int
insl
inc
jbe
inc
jg
jmp
sti
mov
les
vpaddb
push
pop
mov
adc
ret
or
clc
sub
lods
test
and
sbb
cld
adc
inc
lret
pop
mov
adc
mov
xchg
jno
add
mov
mov
push
mov
sbb
daa
fisubl
pop
outsl
movsb
xchg
shlb
add
frstor
and
pushf
jne
sub
inc
push
pop
orl
sbb
cmpb
pop
sbb
fistpl
fldt
jne
jge
test
fistl
out
xchg
adc
xor
push
adc
cld
push
inc
and
inc
or
sbb
add
and
sbbb
and
xchg
insl
xor
das
std
pop
adc
mov
shlb
scas
pop
dec
inc
dec
pop
xor
xchg
lret
dec
rorb
aaa
sbb
xchg
fcmovnbe
frstpm(287
fucomi
fcomi
fildl
jmp
sbb
and
pop
adc
or
mov
cmp
sbb
pop
pop
and
xor
popf
push
adc
xorb
add
sbb
sbb
xor
pop
aaa
push
cmp
sbb
dec
pop
je
ficoml
stos
push
pushf
mov
pop
dec
pop
repnz
or
outsb
fdivs
push
xchg
adc
ret
sbb
iret
test
or
movsl
in
and
push
hlt
mov
xchg
lods
mov
stc
pusha
mov
nop
xor
lahf
std
pop
xchg
mov
mov
dec
iret
outsl
fsubl
mov
fs
stos
cld
in
out
add
add
cltd
xor
xchg
add
mov
mov
sahf
cmp
fists
subb
out
adc
cmp
popf
xchg
dec
test
mov
out
dec
sbb
xor
rcrl
and
xchg
mov
mov
std
repnz
dec
inc
addl
mov
sti
xor
inc
test
scas
lahf
enter
lock
or
mov
sbb
and
sub
xor
cmp
sub
popa
cld
call
sub
scas
lahf
mov
insl
jl
mov
mov
mov
mov
mov
pop
push
sbb
cmpsb
xchg
mov
pop
loop
sub
fistpl
fildl
arpl
mov
or
jns
adc
insb
cmp
fstpl
push
mov
fwait
adc
shr
push
xor
push
push
ja
orl
in
dec
mov
sub
pop
dec
test
xchg
dec
mov
in
loopne
push
out
push
push
jle
sbb
lods
mov
mov
enter
lahf
pop
push
jge
mov
dec
lods
nop
lret
shrb
xor
dec
arpl
insl
mov
xor
int3
pushf
inc
xor
push
jnp
xchg
rep
repz
iret
icebp
in
adc
fucomip
pushf
mov
mov
push
ror
jmp
in
xor
int
add
std
repz
push
js
xor
push
clc
jo
xchg
cmpsb
add
lock
mov
sbb
insl
cmp
jbe
clc
pushl
xchg
push
frstor
push
mov
sbb
jl
push
cmp
rorl
mov
xor
adc
repz
add
jmp
aam
add
jl
mov
mov
jg
dec
mov
idivl
xor
jae
xchg
mov
or
mov
ficoms
dec
add
mov
inc
leave
outsl
cmp
inc
aad
inc
pusha
cld
mov
sahf
ret
or
stos
or
popa
stos
jnp
stos
stos
sti
xchg
adc
cld
mov
or
cmpsb
imul
add
and
pusha
cmp
and
std
push
scas
jb
call
cwtl
loop
clc
stos
pop
stos
pop
stos
sub
pushf
scas
fcmovne
fcmovnu
iret
mov
pop
scas
jb
or
mov
adc
fiadds
push
mov
sub
js
insl
pusha
cwtl
inc
cmp
sbb
cmpl
or
int
cmp
insb
sub
nop
in
pushf
ja
cmp
aad
mov
or
aaa
clc
sub
xchg
push
stos
ja
sbb
test
push
mov
scas
mov
mov
jmp
mov
cmpsl
mov
cmp
xchg
and
clc
or
xor
adc
mov
shll
leave
and
int3
inc
inc
xor
lret
add
adc
sbb
xor
push
mov
lahf
shrl
dec
sbb
fisttps
jp
fmuls
jmp
mov
pop
mov
push
fldl
in
in
adc
sbb
and
dec
xor
cmp
cltd
dec
lods
fmuls
pop
or
jno
push
popf
fwait
xor
stos
cwtl
icebp
lahf
sti
iret
popf
sbb
dec
iret
pop
jecxz
adc
mov
mov
pop
or
mov
mov
pop
sub
adc
fnstsw
push
jmp
rorl
adc
roll
orb
or
mov
in
sbb
adc
inc
hlt
int
popa
insl
push
mov
lahf
adc
push
push
push
popl
cmp
call
cmpsb
sub
mov
stos
clc
mov
pusha
push
pushf
push
lods
xchg
or
lahf
or
or
xor
lods
push
fdivp
js
and
xchg
into
adc
call
jb
pushf
clc
mov
mov
push
sub
or
xchg
and
fldl
lods
dec
insl
xor
jmp
test
pusha
cmp
cmp
les
pushf
fstpl
xchg
adc
inc
pop
fs
cmc
cmpsb
add
xchg
into
cltd
ret
dec
xchg
inc
or
out
and
sbb
sbb
pop
or
outsb
inc
lahf
dec
push
loope
aaa
sbb
stos
lods
adc
push
pop
lods
pop
push
in
aaa
std
and
aad
xor
mov
xchg
insl
push
push
pop
mov
and
repz
repz
xor
cmp
add
icebp
pop
push
int
loopne
mov
jl
nop
xchg
fs
hlt
int
sbb
mov
push
add
cmc
push
sbb
jno
sub
test
inc
mov
push
insb
fs
data16
icebp
test
mov
xor
adc
lods
in
add
add
fmul
jmp
cld
dec
jns
dec
adc
sbb
adc
cmp
adc
push
insl
iret
mov
mov
adc
push
sbb
int
int
fdivrs
pusha
dec
xor
insl
ret
int3
cmc
les
outsb
xor
popa
roll
pushf
hlt
jno
lods
dec
mov
mov
aam
mov
in
subb
cmp
push
push
iret
sbb
andb
cmc
push
inc
and
xor
inc
cmp
je
adc
xchg
in
lea
in
hlt
aad
fstpl
test
sub
sub
xor
cmp
orb
repz
insb
xchg
inc
icebp
jl
fcomi
movsb
sahf
hlt
aam
in
incl
decl
insl
outsb
jge
cmpb
les
bound
mov
int
aad
fs
in
dec
cmp
xchg
or
mov
xchg
insl
cld
movsb
dec
cmp
mov
mov
mov
aad
mov
dec
pop
push
je
gs
shl
adc
mov
mov
scas
xor
sub
add
pop
pop
xchg
mov
xor
das
jo
mov
popa
iret
inc
push
mov
cs
add
sarl
sub
andb
int3
push
imul
xchg
ret
incl
and
sti
push
not
movsbw
xor
push
bt
push
movzbw
test
and
mov
movzbw
mov
rcl
cmp
xchg
pushf
mov
rcl
pushl
cmc
shl
xor
lea
xchg
lods
rol
pusha
setbe
rol
rol
shl
shl
cmp
neg
pusha
not
rol
bt
push
stc
rol
pushf
inc
not
stc
stc
ror
setp
call
movb
not
movw
push
mov
pop
lea
call
push
pushf
lea
jne
ror
cmc
lea
call
dec
inc
add
xlat
sbb
int
inc
pop
push
das
jo
fisttps
clc
cltd
mov
ret
inc
push
ljmp
xchg
andl
mov
inc
adc
xchg
adc
js
in
stos
cmp
mov
or
pop
dec
xor
not
sbb
mov
call
movb
call
and
jge
icebp
outsl
push
ret
sbb
pop
out
lahf
pushf
addb
daa
add
aad
aad
mov
dec
mov
push
xchg
es
and
sbb
fidivrl
mov
push
sub
dec
ds
ja
adc
mov
inc
gs
insb
imul
inc
popa
je
add
je
or
orb
orl
and
call
daa
adcb
add
sbb
inc
pop
fmul
fs
popf
sti
adc
aas
mov
sbb
cs
inc
mov
push
push
mov
adc
pushl
repnz
pusha
lea
jne
ror
mov
add
xor
mov
shrd
sub
movzbw
bsr
bswap
mov
pushf
cmc
push
sub
jmp
movzwl
cmc
sar
mov
stc
pushf
stc
test
add
pushf
bt
cmp
cmp
mov
call
jecxz
cmp
je
xchg
rolb
loope
fwait
dec
js
or
lcall
jns
xchg
cmp
cmp
stos
aad
fwait
jbe
xchg
jg
jae
jb
loope
jl
pop
xchg
push
and
adc
out
cmp
mov
jnp
and
outsl
xchg
les
jne
or
test
mov
insb
fstp
cmp
cs
popf
std
lret
jno
mov
inc
xchg
out
stos
sub
and
outsb
sub
lret
test
das
cmpsl
je
sbbl
push
stos
rclb
push
fdivrs
negb
pop
dec
add
stc
outsb
stos
adc
or
xchg
jns
xchg
sub
push
lea
jbe
rcr
not
mov
btr
clc
shl
add
cmc
bsf
lea
mov
stc
add
cmc
cmp
sub
bt
cmp
jmp
push
lea
call
pushf
adc
jmp
lea
jae
mov
mov
push
call
push
call
push
add
inc
jb
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
test
call
mov
dec
pushf
push
add
mov
pushf
stc
cmc
add
cmp
call
push
call
loopne
ror
jmp
clc
pushf
cmp
pushf
pushf
lea
je
push
pushf
pushf
lea
jmp
add
inc
gs
gs
imul
add
fs
ja
sbb
sets
stc
rol
sub
movzbw
neg
not
add
push
shl
cmc
shrd
mov
pusha
shl
sub
mov
call
call
hlt
sbb
fwait
add
xchg
sarl
test
insb
pop
out
std
and
andps
mov
adc
lret
mov
js
mov
std
mov
mov
sub
add
pushf
call
pusha
cwtl
pop
movb
pushf
pusha
jmp
pusha
sub
lea
call
push
call
outsb
inc
and
call
add
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
inc
and
outsb
inc
add
xor
pushf
pushf
mov
pusha
pushl
ret
push
out
adc
sub
add
xchg
ficoml
mov
lods
mov
dec
shlb
cmp
xchg
push
dec
xlat
mov
cltd
inc
adc
scas
mov
lock
cmp
inc
loopne
cs
mov
jecxz
adc
jge
sbb
sub
ss
out
rcl
xor
cmp
adc
push
mov
js
mov
dec
xorb
mov
or
xor
inc
mov
bound
push
arpl
mov
dec
fidivs
cmc
jb
inc
mov
sub
pusha
mov
das
roll
iret
cmpsb
and
ja
lds
sbb
stos
cwtl
xchg
sbb
pop
jg
neg
ss
and
ljmp
mov
stos
dec
mov
fs
jle
in
mov
mov
sbb
imul
xchg
call
subb
or
call
pop
mov
lahf
daa
test
adc
xchg
je
iret
outsb
lods
sarl
cltd
imul
inc
sub
pop
jmp
pop
adc
icebp
sub
mov
cmp
rol
jmp
add
dec
inc
push
gs
outsl
insl
jo
gs
inc
jb
insl
gs
outsb
add
add
gs
sub
jns
push
stc
cmp
clc
test
or
pushf
call
call
bsr
lea
inc
mov
push
test
push
cmc
cmpb
pushf
pusha
lea
jne
cwtl
sub
sbb
neg
mov
rcl
add
inc
test
mov
test
call
pop
mov
add
push
mov
cmp
in
fldt
loope
and
std
or
xchg
xor
insb
movsb
sahf
in
cmc
or
daa
rcll
ja
addr16
adc
popa
fdivrl
les
pushf
lods
push
scas
inc
ret
sarb
sbb
cmp
xchg
loope
hlt
mov
in
scas
jmp
sub
fists
and
or
ret
push
and
and
and
inc
adc
adc
iret
adc
hlt
nop
add
sbb
addb
xchg
xchg
mov
jb
shrb
push
gs
add
sbb
bound
pop
mov
adc
fnstsw
xor
adc
cmp
add
mov
adc
mov
addr16
test
das
jns
jl
add
add
test
adc
mov
stc
mov
jmp
jmp
add
push
jb
arpl
jae
xor
js
add
add
je
push
dec
outsb
outsw
add
add
je
jne
jb
outsb
je
push
dec
fs
mov
incl
add
addr16
gs
gs
push
popa
insb
jne
inc
add
cltd
or
or
add
or
lods
adc
lahf
pusha
or
sahf
xlat
xchg
and
dec
inc
adc
add
mov
sti
rorl
testl
or
out
pop
pop
inc
das
dec
int
dec
inc
loopne
inc
pop
stc
or
sbb
scas
xlat
aad
sub
ret
or
insb
arpl
insb
gs
add
pusha
lea
jmp
call
push
call
jl
and
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
push
popf
enter
pop
pop
rcll
push
enter
aaa
cwtl
out
and
inc
inc
les
in
rorl
insb
out
test
in
inc
int3
addb
dec
xchg
out
das
pop
inc
push
push
into
movsb
pop
dec
fsubrl
dec
sbb
std
mov
add
jae
incb
jne
out
fwait
cli
jl
enter
add
jae
fcoms
inc
int3
cld
loope
xor
pushf
divl
leave
xor
jbe
cmpsl
iret
push
push
push
lcall
and
je
dec
pushf
mov
movb
movw
lea
jmp
lea
call
pusha
adc
pusha
call
push
call
push
fmull
sti
pushf
pusha
pushf
lea
je
shrd
mov
cmp
or
shl
mov
push
bt
xor
clc
movb
shr
jmp
and
stc
dec
inc
push
je
cmc
es
dec
cltd
inc
adc
add
imull
js
cli
roll
jbe
sbb
pop
and
add
add
insl
outsl
jne
gs
gs
outsb
je
cmc
pushf
bt
mov
test
clc
jmp
mov
pushl
pushf
pushl
ret
pusha
call
shr
call
push
bound
inc
int
gs
ljmp
aas
inc
adc
js
repnz
push
cmp
cmp
dec
cltd
push
bound
cmp
mov
call
pop
scas
das
dec
dec
in
mov
cltd
xchg
out
xor
jo
jnp
je
out
lahf
cli
or
push
addr16
mov
cmp
pusha
jns
aam
cs
push
jnp
adc
and
sub
insb
xor
add
push
lods
inc
mov
fbld
fwait
incl
into
push
push
cmp
in
dec
xrelease
std
pop
fmull
ja
cmc
pop
push
aad
addb
cmp
inc
jae
cmp
lcall
loope
hlt
dec
out
xchg
adc
pop
je
imul
leave
decl
gs
rorl
out
sbb
gs
push
int3
clc
or
jl
ds
jno
gs
hlt
cltd
mov
push
aaa
pop
jmp
cli
pop
mov
les
arpl
ljmp
rolb
push
in
or
jecxz
dec
xor
std
rcll
aaa
movsb
ret
cmp
jnp
xchg
nop
imul
push
mov
adc
nop
stos
or
repnz
cmpsl
and
aam
xchg
popf
icebp
xchg
add
outsb
push
lea
mov
mov
push
les
adc
les
xchg
jae
jle
jl
push
pushl
sbb
or
loope
jg
xor
cmp
add
fbld
or
loopne
mov
xchg
pushf
scas
mov
addr16
sub
into
add
test
jl
push
push
sbb
cmpsb
dec
shl
push
xchg
xchg
pop
jge
sub
movsb
pop
in
das
jb
pop
mov
pop
cli
int
sbb
xchg
jl
rol
or
xchg
addr16
je
in
xchg
andl
dec
pop
mov
push
cmp
and
push
xchg
hlt
add
out
cwtl
push
xchg
jo
inc
pop
push
jb
das
push
popf
jne
repz
jb
xchg
mov
fstpt
or
das
stc
mov
or
pop
xchg
dec
sub
test
ja
js
adc
lret
pop
mov
push
fs
jmp
clc
mov
fucompp
xorb
pushl
sbb
incl
add
fs
push
dec
jne
je
inc
jns
add
cmp
incl
add
insb
arpl
cmp
test
jae
xor
fcom
push
lock
adc
imull
outsl
js
inc
stc
rcll
fsts
fcomi
les
js
xchg
lahf
movsl
dec
mov
push
lret
int3
std
push
idivl
push
inc
out
mov
xor
jge
or
jle
sub
jbe
jns
mov
call
fldt
and
movb
inc
lea
call
pop
scas
ss
push
loope
xchg
daa
xchg
mov
sar
neg
or
ret
push
mov
mov
loopne
ret
xor
daa
cli
es
ja
loopne
and
sbb
sub
xchg
inc
xor
push
xor
stc
dec
cwtl
xor
clc
jp
lods
jmp
sub
andl
dec
les
in
cmpsl
or
rcll
mov
dec
sbbb
jae
adc
sahf
rclb
and
dec
leave
mov
ret
adc
test
jge
lods
and
std
repz
sub
inc
jmp
jl
adc
push
jl
adc
inc
flds
inc
jmp
jl
icebp
pusha
std
imul
xor
sub
dec
mov
sbb
jbe
lods
ds
and
add
mov
popf
lahf
inc
sub
dec
aaa
fcompp
pop
push
dec
test
pop
xchg
push
jmp
pusha
fsub
in
aam
adc
add
xchg
lcall
pop
imul
mov
add
jnp
das
mov
mov
in
cmpsl
xchg
mov
add
pop
mov
jg
movsl
inc
lea
pop
out
pushf
xchg
cmpsl
or
jg
lahf
scas
fsubrs
cltd
mov
call
popl
xchg
dec
add
sub
pop
stos
repnz
shll
dec
xchg
std
pop
cmpsb
pop
mov
and
dec
push
lods
aaa
xchg
in
inc
mov
sbb
lret
xlat
mov
sahf
jb
xor
fidivs
xchg
jbe
in
fstl
push
push
sub
out
cmp
sbb
jbe
mov
and
call
jmp
add
inc
js
je
jb
arpl
jae
add
push
jb
je
inc
imul
gs
outsb
je
popa
add
fucomp
mov
pop
shlb
push
fs
icebp
pop
lock
mov
inc
cmpsl
mov
xchg
sbb
xchg
jbe
iret
inc
push
int
xor
orl
dec
out
iret
jno
mov
inc
adc
ret
cltd
cmp
addr16
sar
jg
shlb
pop
mov
jl
add
cld
cltd
xor
cs
orl
ja
mov
je
ret
gs
push
outsl
inc
xchg
fisttps
jo
dec
dec
adc
adc
or
mov
add
imul
jb
jbe
insb
gs
popa
insb
jne
inc
add
test
jmp
fimuls
mov
stc
add
or
clc
test
mov
cmc
clc
test
push
lea
je
push
add
pushl
pusha
lea
jmp
add
push
mov
or
bsf
mov
movw
cmp
pusha
call
cmpb
call
add
push
gs
gs
imul
std
incl
add
fs
gs
jne
arpl
push
call
jne
sti
lea
jne
clc
mov
xchg
mov
cmc
adc
sub
bts
add
btc
rcl
mov
cmc
pusha
cmp
sub
bt
pushf
bt
pushl
popl
call
mov
pop
push
cmpb
xor
mov
bound
push
mov
mov
movsl
test
lcall
mov
retw
test
fdivrs
xor
cmp
jae
or
shll
adc
ljmp
or
jl
sub
mov
stos
lock
outsl
ja
imul
add
dec
add
mov
lea
je
cmc
cmc
pushf
cmp
call
push
call
mov
push
push
gs
imul
imul
or
call
and
es
out
mov
inc
xchg
addr16
sbb
push
or
ficompl
push
fisttpll
mov
add
inc
mov
insl
jne
and
cmpsb
loopne
inc
ljmp
sbb
sub
mov
mov
and
inc
mov
into
shl
cmpsl
sub
outsb
dec
es
mov
stos
jb
lods
adc
xchg
mov
iret
xor
dec
notb
add
pusha
ds
into
and
bound
xchg
test
std
dec
pushf
in
sub
cld
add
aad
dec
aaa
aam
rorl
cs
movb
repnz
jb
lock
fnstenv
add
inc
jmp
inc
xchg
popf
inc
aad
and
add
dec
push
inc
mov
dec
ja
pop
scas
mov
pushf
push
outsl
faddl
or
test
pusha
ds
cmp
cmp
mov
xor
daa
push
lret
loopne
adc
lahf
rcll
popf
out
cld
addb
xchg
cmp
les
bound
ret
sarb
push
and
out
rorl
out
add
int3
sub
std
cli
push
jo
rcll
ljmp
jne
xor
xor
add
gs
gs
jne
arpl
add
inc
gs
gs
arpl
popa
jo
add
sahf
cmp
decl
test
lcall
fnstcw
mov
or
cmp
xchg
jmp
loope
push
fwait
push
inc
jne,pt
lahf
or
subl
insl
rorl
subps
clc
and
cmc
int3
insl
mov
arpl
and
lea
xor
icebp
xor
xor
cltd
or
call
add
inc
outsl
outsb
je
outsl
insb
push
gs
imul
xchg
fadds
test
loop
mov
call
mov
fs
jbe
enter
xchg
inc
push
push
jge
add
inc
into
je
fisubl
push
cmp
orb
mov
jbe
mov
ss
cmp
cmp
aam
pop
push
push
shll
popa
mov
out
leave
cltd
jge
sbb
mov
jb
jno
xchg
push
es
cs
or
vpperm
push
js
add
test
clc
xchg
andl
jl
sub
xchg
push
gs
imul
outsl
arpl
jae
add
push
gs
jb
popa
je
dec
gs
js
add
xchg
aad
test
mov
fcompl
and
xor
stos
imul
notb
psrad
push
jnp
cmpsl
pushf
mov
lds
cmp
inc
mov
pop
aaa
hlt
pushf
gs
or
in
dec
movsl
adc
testb
cmp
scas
mov
sbb
inc
sub
in
pop
and
push
addr16
dec
std
jg
aaa
adc
popa
xchg
mov
mov
cld
pop
xor
movsb
mov
in
xchg
daa
loope
xchg
movsb
mov
lret
fwait
push
pushf
in
icebp
pop
inc
cmp
cmpsb
aas
xchg
das
xchg
mov
sub
dec
mov
rcl
pop
arpl
jmp
add
sub
out
popf
xor
pop
daa
cmpsl
inc
mov
sub
addb
xlat
test
es
add
mov
push
xchg
ret
pop
sub
sbb
in
fsubrs
mov
mov
scas
out
lcall
dec
enter
popf
andl
add
fnstsw
rcrl
fsubl
std
popa
lret
insb
test
lahf
movsl
fcmovb
iret
cmpsb
or
fneni(8087
fcompl
call
add
inc
outsb
popa
bound
imul
or
inc
add
arpl
cs
ljmp
fs
je
sar
adc
lea
cmc
add
btr
and
mov
call
jmp
push
call
fisttps
int
stos
cltd
or
add
lods
add
dec
gs
popa
addr16
outsl
js
add
inc
and
call
stc
push
cmp
pushl
call
xchg
add
roll
pop
test
hlt
push
add
fidivs
add
cmp
fdivr
sti
push
and
ljmp
mov
popa
jg
mov
jecxz
push
mov
rorb
jmp
shlb
and
pushf
popa
jg,pt
sub
ret
addb
push
sub
add
xlat
push
jae
cmpb
mov
and
fsubrs
fists
fcompl
sahf
lock
cltd
mov
add
sbb
icebp
cmpsl
sub
inc
popa
sahf
lea
subb
popf
sub
inc
sub
push
jle
mov
lods
pop
push
lock
dec
mov
lahf
mov
push
push
and
ja
dec
adc
ret
adcl
add
adc
xor
addb
or
mov
add
jbe
add
mov
xchg
insb
push
lcall
int
pop
pop
and
cmpsb
rcll
cs
insb
or
pop
push
jl
imul
addr16
aaa
push
scas
lahf
into
fwait
mov
arpl
pop
icebp
fs
cmp
daa
add
clc
repz
imul
xor
into
push
push
jg
sti
inc
ja
mov
into
mov
in
push
mov
arpl
fs
in
jae
pop
sti
fdivr
sbb
sbb
push
xchg
outsl
dec
scas
sahf
mov
mov
push
push
xchg
add
add
stc
sti
dec
subb
fmuls
add
lret
fistl
sub
mov
daa
cs
bound
sub
xchg
push
sbb
cltd
sbb
dec
js
mov
int3
push
in
pushf
add
xchg
imul
fwait
push
xor
int3
push
in
pushf
adc
sub
xchg
pop
lods
xor
push
std
xchg
adc
sbb
movsbl
mov
aas
cs
push
mov
int3
dec
pop
pushf
iret
je
add
sub
xchg
dec
sbb
subl
push
loope
jmp
and
dec
les
jl
cwtl
push
xchg
mov
pop
add
sbb
das
insl
push
lea
push
push
and
das
test
xchg
rorb
pop
sub
pushf
xchg
das
lods
push
fsts
pop
pop
xor
das
fcoml
xchg
sbb
push
movsl
pushf
mov
in
cmp
movsl
cmovl
fs
test
xchg
add
pop
inc
xor
jge
rcll
adc
adc
pushf
mov
mov
call
adc
xchg
cmp
gs
push
jge
xchg
push
mov
sub
xor
cld
push
and
lods
push
aad
in
jge
stos
push
xchg
inc
pusha
pop
xorb
push
rcrb
xchg
jno
pop
mov
cwtl
and
fistps
push
mov
xor
dec
push
jns
rcll
cmove
insb
push
nop
pushf
test
mov
sbb
cmp
pop
push
jne
movsl
das
rcll
sbb
test
mov
das
hlt
push
sbb
dec
imul
push
cs
push
popf
pushf
mov
dec
sbb
xorb
push
les
pop
ret
movsl
popa
adc
jne
arpl
mov
push
add
and
sbb
mov
xor
int3
push
fcoml
sub
das
insl
push
subl
std
cs
addb
ret
cmp
add
cli
jecxz
pop
movsb
das
push
les
cmp
push
test
sbb
dec
sub
and
fdivs
int3
popa
xor
push
mov
adc
fsubr
and
and
clc
xchg
in
nop
xchg
add
xchg
lret
lahf
outsb
jg
mov
cmpl
dec
xchg
add
cmp
in
push
add
scas
mov
add
cmpsl
insb
fwait
insl
cwtl
js
or
sub
xorb
add
or
jge
mov
or
xchg
mov
shl
cmovnp
sub
adc
nop
inc
push
xor
pop
mov
ror
sbb
or
adc
int3
rcr
sub
fadds
and
mov
stos
nop
rclb
es
cs
adc
and
and
insb
loope
stos
mov
outsb
loope
push
xchg
sub
adc
dec
out
pop
push
inc
mov
sbb
mov
ja
out
rorl
mov
cmp
hlt
out
fs
add
pop
popa
scas
lret
jns
and
nop
lock
lret
add
outsl
or
sub
add
cmp
cld
sub
sarl
std
jo
imul
test
push
mov
mov
sbb
lcall
ss
jbe
rorl
outsl
scas
and
int
add
jo
and
ljmp
pop
sbb
movsl
inc
mov
nop
outsl
push
xor
jo
subps
mov
movl
mov
lods
rcrl
xor
mov
add
lret
and
sub
and
dec
cli
cmp
cmpsl
mov
mov
push
mov
and
add
stc
lods
bound
dec
add
mov
add
arpl
inc
outsl
sub
xchg
mov
or
sbb
cmp
movsb
adc
xchg
or
sub
in
fmulp
out
pop
cmp
or
push
leave
icebp
testl
lret
aam
add
stc
mov
or
addr16
sbb
mov
xchg
push
jge
iret
movsl
movb
fwait
push
out
push
aad
sub
and
add
push
shll
push
push
and
jl
out
je
ss
cs
pop
xchg
xchg
test
hlt
or
and
or
sub
add
mov
and
fs
mov
push
mov
inc
out
dec
jl
sub
sahf
jecxz
pop
push
inc
xor
in
jg
fwait
mov
stc
mull
mov
sbb
pop
lea
jecxz
mov
dec
or
inc
les
jmp
in
fs
lds
sub
push
inc
stos
cmc
dec
add
leave
mov
push
xlat
mov
stc
jns
pop
dec
repnz
int3
das
test
add
lret
inc
push
xchg
push
inc
xchg
insl
mov
test
pop
cmp
adc
add
std
std
pop
push
inc
mov
and
xor
call
or
test
adc
int
jmp
jmp
and
cmp
add
push
push
stos
dec
outsb
jg
mov
cld
orb
cmc
adc
in
in
imul
xor
cmp
in
test
xchg
add
arpl
leave
lahf
push
lods
dec
and
sbb
stos
add
and
cmp
int3
lods
pop
jmp
mov
pop
mov
aaa
mov
mov
push
rolb
insl
jnp
rolb
jmp
cltd
and
sahf
xor
push
mov
inc
outsb
jmp
mov
loop
xchg
xchg
mov
test
sub
add
enter
pop
jl
sub
daa
push
ficomps
lds
jbe
sbb
loopne
push
fists
add
leave
fwait
cmpsb
push
mov
mov
out
mov
pop
cmp
imul
push
fldcw
jle
or
inc
movsl
das
sbb
lret
sbb
je
jge
repnz
add
add
mov
ds
cmc
mov
pop
leave
stos
mov
jl
mov
icebp
xchg
lahf
jb
adc
mov
jle
push
xchg
jl
jns
jle
xor
xchg
mov
pusha
xor
adc
inc
mov
dec
or
jo
sub
ret
mov
cmp
addr16
orb
mov
jb
outsl
cmp
adc
inc
and
pop
ret
adc
imul
mov
call
adc
lcall
insb
lods
popl
pop
xlat
mov
sub
dec
or
in
icebp
ljmp
adc
or
cmpsl
fsts
jg
xor
xor
mov
xchg
in
mov
mov
in
sub
or
and
or
cmpsb
mov
add
jg
pop
dec
cmp
aaa
or
test
in
mov
test
lods
adc
cltd
clc
fwait
add
pop
xlat
jno
je
add
fdivrl
les
adc
sbb
cmp
ret
int3
sub
mov
jg
add
mov
mov
xchg
pop
dec
lods
cmp
pop
js
sbb
pop
lds
fwait
daa
outsb
sub
adc
and
sub
ss
add
and
mov
add
aad
fbstp
insl
cmp
insb
sbbb
add
xlat
mov
dec
sbb
inc
lret
or
int3
negl
push
sarl
mov
mov
sub
sub
mov
jmp
in
inc
push
mov
aam
add
inc
ss
ds
dec
mov
cmc
cmc
sub
add
and
mov
hlt
pop
movsl
dec
loop
bound
cmp
ja
push
inc
push
xor
gs
push
sub
and
and
cli
pop
outsb
mov
sbb
pusha
and
mov
adc
inc
jle
pop
pop
mov
mov
pop
or
mov
mov
push
mov
or
mov
repz
fstl
and
add
movsb
or
fs
addr16
loopne
loopne
sbb
sbb
dec
adc
ret
fwait
pop
insl
nopl
jae
es
add
inc
inc
roll
dec
pusha
add
dec
mov
stc
sub
sub
xchg
adc
cmc
sbb
add
add
lea
fisttps
fstps
icebp
xor
inc
cmp
out
lock
je
in
inc
and
xor
xorb
xor
jbe
xchg
mov
lds
add
loopne
sub
in
xor
sbb
xor
cmp
inc
mov
adc
add
jne
pop
adc
pop
lss
push
jbe
add
sub
cli
xchg
movl
and
cmp
popf
js
add
sub
scas
add
out
ds
dec
and
int3
insl
cmpl
adc
xor
pop
data16
dec
movsl
or
out
mov
cmp
or
fcmovu
sbb
adc
xchg
fs
sub
ja
out
jbe
sbb
jp
xorb
dec
idivb
mov
sub
mov
in
cmp
and
imul
setb
test
add
mov
push
sbb
je
ret
hlt
xchg
add
fcomp
adc
call
outsl
push
jmp
arpl
pop
mov
add
cmp
mov
xchg
jge
push
add
dec
add
fstpt
xor
fs
mov
add
aas
sti
mulb
xor
cmp
inc
adc
jecxz
iret
cmp
sub
out
sbbl
cmpsb
xchg
movsl
test
inc
pusha
cli
xchg
xchg
push
pop
das
insb
cs
in
sbb
jge
insb
sbb
or
scas
add
ljmp
fstpt
xor
jge
push
enter
je
das
dec
mulb
pop
imul
xor
pop
iret
test
push
sub
cmp
cmp
ljmp
mov
aaa
js
lret
fwait
sbbl
push
shl
fucomi
add
push
addr16
xor
xchg
movsb
add
mov
imul
jle
in
jb
movsb
xor
ss
cmp
add
mov
shll
jmp
or
and
out
call
dec
fistps
stc
mov
mov
add
add
add
add
fwait
mov
scas
ret
pop
lods
dec
roll
nop
sub
mov
std
push
fldcw
mov
stc
inc
lds
pop
xchg
mov
jge
add
push
and
std
fimuls
outsb
into
lock
dec
push
cmpsb
or
inc
jne
enter
std
mov
add
xchg
inc
sbb
xor
push
mov
vmovaps
cli
mov
push
sar
fisttpl
inc
int
pusha
inc
push
scas
lea
push
call
cmc
btc
mov
sbb
aam
add
rcr
push
int
imul
dec
lahf
sub
sbb
cmc
cmp
pop
jmp
cmp
pop
inc
xchg
jl
add
xor
sub
push
dec
push
lret
bound
ret
ss
xchg
sbb
xorb
add
fdivrl
ret
icebp
jp
pop
into
xor
cmpsb
cmp
sub
cmpsb
push
cmc
add
jne
push
cmpsl
xor
adc
pop
lea
add
outsl
mov
cmp
rcrb
movsb
ror
es
push
mov
xor
lcall
push
inc
out
push
pushf
fdivs
add
aas
adc
insb
inc
jecxz
int
add
pop
mov
mov
loopne
dec
ljmp
test
push
aad
xor
sub
jecxz
xor
sti
pop
daa
lret
popa
xor
pop
adc
imul
in
shll
pop
popf
outsb
pop
ljmp
hlt
adc
jge
pop
sub
aad
or
mov
fidivs
mov
sub
rclb
mov
push
adc
inc
add
or
xchg
ss
cmp
mov
shlb
pop
aas
push
jne
pop
xchg
jecxz
repz
std
or
mov
pop
cmpsl
gs
imul
insl
testb
dec
pop
ficompl
or
cmp
dec
stc
in
arpl
cmp
pop
sbb
push
nop
lret
sti
int
push
or
std
fstpl
xchg
jge
mov
inc
les
jmp
sbb
add
xchg
push
sbb
sar
and
int3
pushf
pushf
mov
notl
xchg
adc
push
adc
sub
adc
xchg
int3
pop
sti
in
add
adc
push
push
loope
sbb
fdivrp
push
ds
fwait
xchg
inc
int3
add
sbb
push
shr
stos
adc
inc
addb
push
hlt
push
stos
int
enter
fldt
push
mov
jmp
cmp
add
add
jge
add
std
sti
push
sbb
sbb
push
mov
cs
ljmp
aad
cmp
in
pusha
loope
add
adc
cld
jb
lods
sub
out
je
xchg
add
jmp
insb
xchg
adc
push
jg
add
add
cmovp
sub
lea
nop
sbb
mulb
outsl
sbb
sub
mov
push
adc
dec
std
xchg
dec
ja
xor
pop
sar
test
aam
push
jmp
or
insl
jp
push
lret
adc
lds
sbb
es
sbb
push
aas
inc
adc
pop
or
lahf
ret
push
xchg
xchg
pop
cmp
xorb
xorb
sub
sbb
or
lret
int
frstor
clc
mov
scas
push
pop
cli
adc
hlt
les
push
adc
scas
in
mov
sahf
xchg
add
add
push
mov
lock
nop
popf
mov
outsl
or
and
lret
or
in
mov
fyl2xp1
push
jae
or
inc
fnsave
mov
mov
lea
xchg
sbb
in
pop
push
mov
sbb
lods
jge
jmp
add
mov
sbb
jb
cs
in
aaa
sub
add
dec
lea
add
cmpsb
sbb
inc
in
add
xchg
stc
xchg
jmp
dec
sbb
mov
pop
imul
mov
les
push
dec
push
push
mov
add
mov
push
popa
pop
scas
inc
mov
add
fwait
or
in
aad
cmp
scas
dec
lea
cltd
test
xchg
mov
push
iret
in
add
mov
inc
push
mov
jo
cmp
lea
inc
repnz
cmpsb
push
pushf
push
aam
or
dec
shl
lea
stos
loope
shr
dec
rcrb
je
popa
add
out
test
jle
adc
adc
daa
stos
imul
add
repnz
daa
mov
inc
lods
lret
les
std
pop
add
out
sub
add
mov
ljmp
rolb
push
pop
test
xchg
jl
imul
sub
or
popf
cmp
subl
add
and
sub
cmpsl
setno
xchg
movsb
push
nop
inc
or
jo
out
pop
pop
sahf
sbb
stos
hlt
cmpsl
add
repz
ljmp
or
mov
in
sbb
inc
or
xor
add
rcll
je
lock
insb
inc
push
test
add
push
xchg
sub
adc
mov
fwait
je
popa
leave
and
lods
or
mov
sar
add
scas
adc
and
xor
mov
sub
xor
push
sub
adc
adc
pop
add
adc
or
xchg
sbb
add
xchg
mov
or
out
sbb
sbb
mov
inc
adc
sbb
xor
arpl
mov
cs
lret
pop
push
fisubrs
sub
jl
sub
dec
push
pop
dec
adc
sub
mov
std
nop
scas
inc
adc
insl
daa
loope
or
arpl
add
or
icebp
int
clc
xchg
sub
cmpsl
test
and
lret
in
repnz
add
jle
inc
or
pusha
xchg
aam
rcl
xchg
jmp
fildll
sbb
add
mov
adc
pop
or
inc
sbb
dec
mov
fmull
cmp
cs
pop
int
xchg
cmc
inc
stos
sub
cmp
mov
fwait
cltd
repz
jno
jo
pop
insl
mov
mov
xchg
outsl
dec
lea
shll
scas
mov
pop
iret
sbb
movb
pop
fnsave
add
in
insb
jge
push
adc
in
sub
xor
xor
inc
sub
sbb
mov
add
mov
pop
repz
mov
test
cmp
aaa
aam
xchg
cmc
loopne
push
ret
adc
stos
mov
into
dec
in
hlt
push
cmp
inc
loopne
xor
add
pop
xchg
add
dec
push
insl
dec
mov
icebp
add
xlat
jnp
ret
jl
rolb
jle
shrb
or
adc
ja
and
sub
sub
pop
das
or
push
pop
sbb
dec
popa
in
in
sbb
push
cmpsl
test
lea
sub
shll
jnp
ljmp
jl
add
repz
pop
mov
add
outsb
subb
into
sbbl
jecxz
add
push
inc
leave
and
dec
jne,pn
js
add
pop
call
and
mov
xor
movsb
lahf
lea
xor
int3
xchg
push
sahf
dec
dec
mov
add
and
inc
sbb
add
mov
add
inc
iret
push
das
andb
xchg
xchg
mov
mov
in
icebp
mov
inc
add
fnstsw
rorl
movsb
in
popa
rcrb
mov
add
cmp
or
push
fisubrl
lods
dec
test
int
add
sub
add
leave
roll
jbe
inc
add
push
stos
ljmp
int3
imul
in
push
sbb
pushf
adc
xchg
jbe
and
cmpsb
pop
pop
dec
out
outsb
sub
rcll
push
add
loopne
push
jbe
out
and
out
dec
aam
xor
fiadds
shr
add
sub
test
std
test
xchg
add
fldcw
ficompl
arpl
add
ljmp
pushf
dec
add
pop
xchg
clc
adcw
xchg
shr
scas
push
inc
dec
push
or
or
add
sub
sbb
add
test
sub
xchg
call
lds
fdivrl
loop
xor
ss
jecxz
rclb
ss
sub
sub
jg
enter
adc
pop
cmp
mov
lahf
xchg
pop
xchg
sub
repnz
rcrl
jae
adc
pop
and
xor
inc
js
jg
pop
xchg
movsb
or
mov
mov
rorl
adc
xchg
mov
imul
dec
in
sub
push
sbb
jns
or
push
cli
inc
roll
test
pushf
in
js
fisubrs
xlat
or
mov
popf
push
call
das
xchg
adc
add
gs
dec
bound
arpl
or
cli
mov
popf
fwait
test
jp
pop
aam
pop
inc
add
lret
push
cmp
scas
xor
cmpsl
cmp
sub
gs
lcall
outsb
and
jno
inc
and
in
mov
and
xorl
dec
test
dec
jns
lcall
cmpsl
fsubl
stc
adc
fsubrl
aam
push
mov
lds
push
std
xchg
pop
mov
and
push
jmp
or
addb
xor
fs
ffreep
push
cmpsl
mov
mov
loopne
mov
rorl
and
mov
push
sbb
xchg
iret
cmpsl
or
out
mov
and
adc
pop
cmp
icebp
popf
inc
jp
adc
mov
xlat
and
imul
xchg
pop
stc
shr
dec
push
dec
mov
shl
stos
test
add
or
jne
jmp
push
jo
lcall
addr16
fldcw
cmp
lahf
jge
xchg
sbbl
es
dec
jnp
repnz
mov
adc
ds
xchg
sbb
in
lea
ljmp
mov
in
in
outsb
adc
in
inc
shl
or
and
xchg
out
or
xor
cmpsl
inc
iret
std
sbb
adc
test
add
adc
insl
test
loope
ds
into
and
pop
or
ds
pushl
cmp
pusha
bt
cmp
pushf
call
push
call
xacquire
add
fs
je
imul
jg
cli
add
rcll
cmpsl
sbb
and
shrl
mov
push
jp
xor
mov
outsl
fisttpl
into
mov
adc
adc
sbb
xchg
mov
inc
sub
cmp
add
je
jne
jb
outsb
je
push
add
addr16
popf
fsts
lea
dec
mov
xor
divl
pop
pop
inc
push
out
and
das
aaa
stc
pop
sbb
lret
jmp
dec
xchg
shll
pusha
fldcw
lock
push
addb
xchg
call
pushfw
popw
pushl
rcr
rol
jmp
add
inc
jb
popa
je
push
popa
insb
gs
add
add
popa
insb
imul
je
add
ds
mov
cmp
int3
xor
loopne
fiadds
sbb
inc
adc
rorl
dec
leave
js
fucomp
add
push
xchg
nop
repz
sahf
inc
and
ljmp
cltd
mov
call
jg
inc
push
dec
inc
inc
push
xor
cs
insb
add
lcall
add
xchg
ljmp
cltd
mov
add
movsb
jg
mov
add
je
popa
insb
gs
gs
outsb
je
imul
mov
imul
ss
pusha
mov
call
lea
sbb
cmp
lock
cld
roll
cmc
xor
mov
and
loope
cmpsl
push
cmpsb
loop
inc
inc
mov
or
mov
nop
jo
lods
mov
fildl
xor
xchg
or
mov
push
call
jne
aad
repz
push
call
cmpsl
je
lods
xor
jns
icebp
pushf
movsbl
movzbw
mov
pushf
push
lea
jne
stc
stc
jmp
add
push
push
inc
push
je
jb
jne
add
andb
add
jno
cmp
call
mov
lea
je
stc
bt
bt
cmc
add
stc
call
not
setnp
pushf
pushf
lods
clc
rol
call
lea
jne
pushf
movb
movzbw
mov
jmp
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
mov
aas
mov
loope
mov
nop
inc
cmp
lret
mov
mov
jg
xchg
aaa
sub
add
jbe
jo
pop
sbbb
xchg
add
daa
jnp
and
call
add
mov
icebp
jb
cmp
jns
imul
mov
add
ret
icebp
mov
clc
inc
add
movsl
push
sbbl
fisubl
ds
scas
dec
fimull
sub
ds
push
arpl
mov
das
scas
and
incl
add
push
outsb
fs
gs
popa
add
adc
push
push
mov
pushl
push
pushl
ret
stc
add
movb
pushl
pushf
push
lea
jmp
sub
outsl
push
xchg
xor
into
xchg
imul
cmp
mov
fsubrs
cmp
mov
jne
loope
fcmovu
xchg
or
std
push
ret
push
fs
sbb
scas
shl
xchg
and
loopne
push
fidivl
dec
loop
mov
aaa
xchg
push
outsl
push
sarl
dec
or
mov
sub
push
push
sub
repz
jg
mov
sti
push
sbb
in
sti
inc
mov
mov
mov
adc
cmpsb
rorb
aad
lret
pop
out
and
jle
mov
or
dec
std
sbb
mov
test
aad
cmpsl
ret
add
scas
mov
dec
mov
test
fmul
es
fwait
test
xor
aad
leave
iret
sbb
lret
dec
xor
cli
fsin
or
imul
add
imul
lea
je
call
loop
sub
mov
stos
sub
sub
jmp
dec
std
mov
ret
sbb
inc
test
push
inc
imull
into
dec
stos
mov
pop
fsub
addb
push
popa
je
inc
imul
jae
add
add
jae
dec
gs
popa
addr16
add
add
popa
insb
inc
insb
insb
outsl
arpl
push
arpl
inc
adc
dec
loope
fwait
add
adc
adc
jge
in
ret
test
fcomip
inc
add
or
pop
mov
test
test
in
or
or
jns
andb
test
and
lods
pushf
xchg
lcall
insb
and
lea
jae
push
bt
sub
mov
lea
call
pushf
pushf
lea
jae
bt
test
xor
jmp
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
adc
mov
push
jmp
mov
leave
jge
clc
fcoml
stc
push
lea
push
clc
mov
mov
lret
push
inc
loopne
adc
inc
sbb
mov
pop
sub
shll
divb
clc
add
xchg
rol
pop
cmp
push
and
xor
cmpsb
inc
adc
adc
mov
inc
sub
sub
cmpsl
xchg
in
stos
test
mov
sahf
and
inc
mov
movsb
cli
xor
repnz
mov
rolb
rclb
sar
sahf
xlat
mov
mov
or
rorl
pop
dec
loope
call
and
pop
push
int3
lods
jmp
ljmp
adc
mov
jl
dec
iret
jae
pop
int
pop
jae
rolb
cmpsl
cmpb
loope
xchg
pop
jbe
adc
mov
mov
fisttps
mov
out
dec
es
pop
xchg
cmpsl
sub
sbb
test
xor
xor
pop
xchg
stos
sub
jo
sub
mov
das
dec
push
out
cld
loop
arpl
jae
push
sbb
jp
mov
pop
in
add
pop
pushf
inc
lds
loop
push
ds
inc
mov
sarl
iret
les
in
dec
push
push
inc
fs
pop
mov
cmp
xchg
ja
xlat
jo
movsb
push
bnd
push
dec
out
pop
jb
stos
xchg
cmp
xor
jno
mov
sbb
pop
or
test
ds
mov
pop
mov
popf
cmpsl
out
out
sarb
xor
add
sahf
andl
adc
cmp
sbb
fwait
js
pop
out
aad
std
loop
push
sbb
sbb
mov
mov
add
mov
shlb
ja
leave
adc
add
std
movsb
shlb
shlb
adc
sub
gs
push
cmpsb
test
jle
push
hlt
arpl
and
push
dec
inc
sub
das
mov
xchg
and
cmp
and
jns
dec
fists
sub
scas
xchg
pop
push
out
mov
mov
loop
out
jae
insb
jecxz
pop
aaa
add
mov
adc
push
out
stos
adc
lock
mov
jo
adcb
mov
sub
insb
enter
inc
lahf
pop
orb
or
mov
in
insb
mov
sbb
jg
imul
pusha
push
mov
lea
je
cmp
clc
add
test
call
out
pop
add
xchg
jp
mov
sub
in
out
fstpl
sub
mov
push
cmp
pop
popa
jecxz
xor
out
test
jno
out
push
pushl
negb
or
scas
arpl
and
adc
in
hlt
pop
xchg
mov
aaa
lret
int3
mov
pusha
mov
push
jne
cmp
adc
pop
mov
sub
jle
xorl
push
jmp
inc
js
test
xchg
dec
rorl
xchg
outsl
scas
jb
sub
push
inc
int
addb
pop
dec
cmp
in
test
and
jne
mov
cmp
test
cwtl
inc
pop
adc
cmp
je
adc
lea
pop
call
nop
sarb
fcomip
cmc
fadds
push
push
lret
js
in
std
mov
cli
xor
scas
fistl
add
rorb
jp
jge
ret
jae
int
dec
je
jmp
stos
mov
jbe
sbb
rep
pop
mov
pop
popa
cld
aam
hlt
add
adc
popa
mov
add
mov
jl
mov
adc
cmpsl
jnp
jne
js
sub
or
or
sti
jl
adc
or
arpl
add
or
lcall
add
cmpb
mov
aam
push
xchg
out
xchg
lock
mov
xor
and
cwtl
mov
ds
jl
cmp
fimull
jns
pop
popa
inc
push
dec
jmp
cmp
lock
inc
add
mov
clc
test
cmp
sarb
scas
push
in
cmpb
sbb
pop
lods
call
pusha
es
pop
xor
xchg
xchg
stos
sub
aas
jmp
mov
lods
cmpsl
mov
pusha
hlt
xchg
cwtl
icebp
dec
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
into
ljmp
movsb
insb
out
or
repnz
arpl
into
in
pop
jb
mov
or
mov
fs
push
dec
sti
shlb
jge
pop
pop
out
dec
cmc
sub
jl
sti
mov
pop
mov
inc
sbb
mov
dec
icebp
aas
popa
adcl
add
loope
aas
mov
aam
pop
and
cmp
addr16
loop
or
or
stos
adc
dec
rcrl
cmp
fisttpll
push
adc
pusha
or
xchg
push
xor
lea
xchg
bswap
pop
pushf
mov
pushf
pusha
bswap
xchg
mov
lea
mov
pop
mov
jmp
lea
je
jmp
mov
adc
movb
pusha
pushf
push
lea
jmp
add
dec
popa
jo
imul
gs
add
je
xor
rol
clc
movl
test
stc
neg
bt
cmc
movb
clc
rol
pushl
call
pushf
popl
bt
call
movw
jmp
xor
mov
inc
clc
pushf
call
movb
bt
sub
push
pushf
movb
bt
ror
cmc
bt
sub
jne
xor
clc
not
stc
call
pushf
popl
pushf
pusha
call
clc
cmc
mov
pushl
cmc
mov
pushf
call
pusha
pusha
mov
push
lea
jmp
push
movb
pushl
popl
mov
pushl
lea
jmp
pushf
stc
bt
rol
cmc
bt
add
pushf
movw
pushf
movw
not
pushf
movb
lea
jmp
mov
pusha
jmp
mov
jg
pusha
pushf
pushl
dec
mov
cmp
test
pushf
add
clc
not
movb
ror
pushf
inc
mov
stc
stc
not
test
pushl
add
cmp
pushf
cbtw
test
clc
call
clc
ror
pushf
pushf
mov
movb
inc
jmp
push
bt
stc
push
pushf
mov
jmp
jnp
pusha
pusha
mov
movw
push
lea
jmp
lea
jae
rol
jmp
mov
jmp
mov
call
pushf
pushf
call
bts
call
mov
mov
pushf
popl
pushf
call
movb
pushf
popl
cmc
stc
push
clc
call
call
cmc
not
stc
rol
mov
cmc
cmc
add
jmp
cmc
xor
and
pushf
xor
add
xor
setns
pushl
mov
lea
push
pusha
lea
jg
inc
push
pusha
call
mov
call
mov
pushf
movw
call
call
ror
pushf
mov
cmc
movl
bts
mov
stc
stc
rol
push
neg
jmp
pushf
stc
cmc
jmp
bt
sub
call
rol
jmp
call
jmp
pushf
movb
mov
pushl
movb
movb
lea
jmp
pusha
mov
setnp
shl
pusha
shrd
mov
cmc
add
pushf
lea
je
pusha
pushf
mov
pushf
lea
jmp
stc
rol
stc
add
call
mov
call
movsbw
mov
pushf
jmp
pusha
jmp
jmp
stc
shrd
movb
jmp
add
pusha
mov
cmp
add
push
jmp
call
jmp
pusha
call
clc
cmc
bt
xchg
pusha
bt
jmp
pushl
pushf
mov
pushf
pushf
lea
jmp
jmp
mov
mov
movl
jmp
lea
ja
shrd
xor
sar
mov
rcr
test
aam
lea
rcr
rcr
sar
sub
aam
shl
lea
bsr
bsr
and
rol
btc
sub
pushf
movzbw
call
call
bsf
mov
call
xchg
bswap
call
jmp
push
jmp
clc
dec
movzbw
mov
push
cmc
bt
sub
mov
mov
pusha
lea
jmp
push
jmp
test
sub
bt
cwtl
lea
jge
stc
sub
jmp
mov
mov
pushl
pusha
push
lea
jmp
cmc
add
jge
pusha
add
push
mov
pushf
movl
pushf
push
lea
jmp
movsbw
lea
pushf
std
mov
pusha
mov
lea
pusha
std
mov
movb
call
xor
mov
sar
and
shr
mov
pusha
mov
sub
jmp
mov
call
jmp
rol
call
xchg
movzbw
pushf
rdtsc
clc
test
pusha
pusha
sub
mov
pushf
mov
jmp
mov
mov
pushf
mov
pushf
pushl
lea
jmp
bt
add
pusha
pushf
call
xor
sbb
test
mov
cmc
xchg
test
push
stc
cmp
sub
call
inc
jmp
pushf
pushf
rol
cmp
test
call
call
mov
pushl
lea
jmp
pushf
jmp
call
ror
movb
push
inc
clc
clc
stc
not
stc
bt
clc
call
pushl
popl
pushl
pushf
mov
push
lea
jmp
add
pushf
movb
jmp
push
clc
stc
push
pusha
mov
pusha
lea
jne
cmc
push
push
clc
movzbl
mov
lea
not
lea
movsbw
push
stc
btr
push
clc
pusha
bswap
rol
mov
pushl
clc
mov
rol
test
cmp
neg
push
rol
push
clc
test
pushf
add
pushf
call
mov
bt
bt
test
add
movb
lea
jmp
cmp
pushf
test
jmp
call
clc
btc
notl
bsr
sar
cmp
mov
clc
cmc
bt
test
sub
push
pusha
test
lea
jne
and
pushf
lea
jo
pushf
pushf
popl
jb
pusha
pusha
pushl
popl
movl
movl
movb
mov
lea
jmp
mov
jmp
pusha
pushf
popl
call
rol
xadd
neg
bswap
xchg
rol
xadd
jmp
mov
call
btr
call
clc
push
cmc
pusha
bts
mov
btc
stc
mov
movzbl
movl
rcl
rcl
mov
cmc
rol
pusha
neg
call
add
pusha
call
stc
call
cmp
mov
dec
mov
pusha
sub
call
pushf
popl
jmp
call
movb
movb
not
push
lea
jmp
mov
bswap
not
not
bswap
pushf
not
pushf
mov
xchg
mov
jmp
shl
push
sub
shld
mov
shl
bsr
cmp
inc
xor
bswap
sub
stc
btc
push
ror
shld
mov
shl
shr
xor
sets
pusha
not
btr
bts
ror
pushf
push
dec
shl
shld
xor
shl
bts
bt
mov
movb
pushl
pushf
add
call
jmp
neg
stc
mov
pushf
stc
rol
call
rol
lea
rcl
mov
pop
rcl
pop
mov
lea
mov
movsbw
mov
mov
mov
pushl
cmc
jmp
btr
movsbw
aad
xor
mov
xadd
shl
bswap
mov
jmp
push
add
pushl
call
lea
jle
xor
movsbw
jmp
pushl
mov
push
pushf
movb
pushf
popl
movw
call
test
cwtl
cmp
sub
push
mov
call
xchg
add
stc
test
mov
adc
mov
clc
clc
pushf
sub
pushl
cmp
stc
shr
pusha
jmp
push
pushf
pushf
popl
jmp
call
mov
mov
pushf
movl
lea
jmp
decl
call
mov
movb
pushf
popl
jmp
pushf
mov
not
pushf
pushl
mov
lea
jmp
pusha
rol
push
call
pushf
sbb
shr
btc
mov
stc
shl
stc
push
add
call
call
push
pushl
pushf
mov
pusha
push
lea
jmp
cmc
test
cmc
pushl
push
cmc
test
add
cmp
clc
jmp
movb
movb
pushf
popl
bt
push
stc
pushf
mov
pushf
bt
clc
pusha
xchg
rol
bts
mov
rcr
rol
movsbw
clc
mov
jmp
call
pushl
mov
pushf
push
mov
pushf
lea
jmp
jmp
movzbw
btc
mov
pushf
call
neg
jmp
push
pusha
mov
push
mov
lea
jmp
bts
xchg
not
movsbl
mov
movsbw
bts
call
aad
add
jo
pushf
mov
adc
shl
sub
mov
clc
clc
add
mov
mov
pusha
push
pushl
lea
jmp
jmp
rol
stc
clc
cmc
neg
cmc
cmc
jmp
mov
bsr
not
btc
mov
bts
mov
std
ror
mov
cld
mov
stc
bt
push
pushl
popf
movb
pusha
pushl
ret
movsbw
btr
test
mov
ror
pushf
mov
cmc
pusha
stc
jmp
pusha
mov
pop
btc
mov
movsbw
bt
mov
movzbw
push
ror
mov
rcr
jmp
pushf
cmp
cmp
add
pushf
movb
pushl
bt
not
cmc
mov
push
ror
call
pusha
xor
stc
call
mov
pusha
movl
lea
jmp
pushf
inc
pushl
mov
decl
movb
call
pushf
popl
push
jmp
jmp
push
cmc
push
bt
push
rol
bswap
movzbw
push
rcr
movsbw
push
mov
bts
movzbw
push
lea
pushf
mov
bt
jmp
mov
pusha
lea
jmp
neg
sar
shld
sar
mov
cmc
test
stc
bt
sub
call
add
add
setns
mov
test
pusha
movb
bt
and
jmp
mov
movb
pushl
movb
lea
jmp
movzbw
dec
bsr
inc
jmp
call
adc
mov
stc
sub
jmp
stc
cmc
xchg
bt
rcr
mov
mov
mov
movzbw
stc
rcl
bt
mov
lea
stc
pushf
cmc
mov
not
lea
jae
rcl
bts
push
mov
btc
ror
ror
push
bswap
jmp
bsf
shrd
mov
not
rcl
shl
ror
mov
jmp
bts
mov
rol
mov
jmp
call
call
push
sub
pushf
pushf
call
call
mov
pusha
mov
push
pushf
lea
jmp
movl
btc
cmc
jmp
call
mov
mov
push
lea
jmp
mov
mov
cmc
call
push
mov
pushf
movb
pushf
movl
pushl
ret
pushf
dec
push
lea
jmp
dec
not
pushf
jmp
lea
jg
push
mov
mov
mov
pusha
push
pushf
mov
lea
jmp
jmp
push
mov
pusha
pushf
popl
pushf
stc
mov
bt
call
mov
mov
mov
mov
lea
jmp
mov
mov
pushl
mov
lea
jmp
mov
push
mov
mov
pushf
pushl
pushf
lea
jmp
pusha
call
lea
jne
push
mov
pushf
pushf
lea
jmp
sub
movb
cmp
test
cmp
sub
jmp
dec
btr
and
clc
neg
not
neg
sub
cmc
and
and
add
mov
test
add
call
cmp
jmp
mov
pushf
jmp
mov
movb
movw
lea
jmp
jmp
neg
jmp
mov
pushf
popl
jmp
jmp
lea
jle
not
pushf
pushf
pusha
lea
jmp
clc
rol
stc
neg
cmc
pushl
call
and
pusha
movzbl
stc
xor
pushf
push
not
jmp
pushl
popl
pushf
lea
jmp
mov
movl
push
pushf
lea
jmp
stc
push
call
lea
jne
jmp
push
pushf
mov
movb
mov
lea
jmp
pusha
jmp
rcr
ror
movl
lea
pusha
btc
mov
bt
call
not
pushf
pushf
pushf
lea
jmp
pusha
inc
neg
setno
jmp
bt
push
and
mov
bt
xor
call
mov
pusha
rol
cmc
neg
bt
rol
pushf
test
pushf
bt
add
lea
jbe
pushf
not
pusha
push
lea
jmp
call
sub
call
stc
xchg
pushl
not
movzbw
mov
movzbw
call
mov
cld
pushl
rep
call
mov
rcl
mov
not
bt
pusha
mov
movzbw
movzbw
mov
not
stc
rcr
clc
movl
pushf
lea
rcl
call
test
pushf
sub
jmp
mov
mov
pusha
pushf
lea
jmp
pushf
popl
call
dec
push
clc
mov
stc
ror
call
call
mov
movb
jmp
call
jmp
cmp
sub
rol
btr
cmc
rol
shr
movsbl
neg
lea
stc
not
rol
ror
not
push
not
push
rol
setb
jmp
dec
bt
ror
mov
cmp
sub
lea
jae
cmc
cmc
clc
cwtl
test
pushf
sub
pusha
mov
movl
pusha
lea
jmp
call
cmc
sub
jmp
mov
call
btr
movb
dec
neg
clc
rol
sbb
xor
clc
call
pushf
jmp
cmp
add
jmp
pusha
call
jmp
pushl
popl
movw
lea
jmp
push
pushf
jmp
not
test
lea
mov
add
test
sub
jne
sub
jg
pushf
pushl
mov
mov
pusha
push
movb
lea
jmp
bt
clc
rol
pushf
cmc
jmp
clc
cmc
rol
cmc
test
mov
add
call
pusha
and
pusha
pushf
popl
mov
pushl
popl
pushf
pushl
lea
jmp
movsbw
mov
shr
add
sar
sar
mov
cmp
pusha
test
sub
stc
shr
pusha
pushl
movw
pushf
mov
pushf
lea
jnp
pusha
pusha
pushf
popl
push
jmp
neg
aaa
add
lea
mov
rcr
mov
jmp
pushl
not
pushl
push
movb
lea
jmp
dec
bts
stc
lea
mov
jmp
pushf
pushf
not
push
mov
lea
jmp
stc
pushf
mov
clc
cmc
call
jmp
stc
pushf
sub
call
pushf
call
push
not
movb
movb
lea
jmp
push
mov
pushf
push
pushf
lea
jmp
dec
call
sub
pushf
stc
neg
lea
jg
pushf
add
movl
mov
mov
dec
stc
ror
movl
stc
sub
movb
sub
pushf
mov
pushf
pusha
lea
jmp
jmp
clc
add
push
push
dec
pushl
ror
jmp
rol
pushf
neg
pushl
rol
cmp
pusha
clc
cmp
add
call
pushf
clc
add
mov
not
mov
pushf
mov
lea
jmp
push
pop
call
push
push
mov
movb
pushf
push
pushl
lea
jmp
shr
movzbl
btc
mov
shl
adc
mov
dec
mov
cmp
add
clc
pushf
shld
pusha
pusha
pushf
jmp
pushf
not
pushl
lea
jmp
mov
pushf
pushf
jmp
test
add
jmp
rcl
movsbw
push
clc
ror
bts
bsf
test
not
sub
shld
rol
setbe
not
adc
neg
rcl
sub
btr
shl
ror
neg
bt
cmc
shr
xor
sub
sar
xor
shrd
bsf
xor
movzbl
or
bswap
mov
call
mov
bt
jmp
mov
pusha
pushl
ret
call
pushl
popl
movw
pushf
lea
jmp
call
jmp
je
pushf
pusha
push
clc
pushf
mov
cmc
cmc
cmc
pushf
mov
jmp
push
push
mov
call
pusha
push
inc
clc
test
push
jmp
jmp
add
call
btc
mov
bt
clc
rol
test
jmp
shr
mov
push
cmc
cmc
sub
mov
movl
pushf
mov
pusha
pushf
movb
lea
jmp
mov
pushf
movsbl
rol
xchg
dec
neg
btc
pushl
rol
xchg
rol
shr
add
xchg
inc
not
add
not
mov
seta
sub
bswap
rol
mov
jmp
mov
pushf
pushl
pusha
lea
jmp
pushl
popl
pushl
push
push
lea
jmp
mov
movzbw
add
movsbw
bsf
xadd
mov
and
bts
rol
xor
adc
pushf
shrd
not
neg
rol
rcr
mov
movsbw
ror
shr
ror
pushl
sub
call
stc
rcr
mov
bswap
rcr
clc
pop
movl
btc
btc
btr
call
pushf
pushl
popl
mov
mov
lea
jmp
movb
mov
movb
pushl
popl
mov
lea
jmp
call
xchg
mov
mov
pushf
movl
rcl
clc
jmp
bt
mov
movsbl
rcr
pushl
mov
clc
bt
cmc
rcr
mov
movsbw
bt
pop
movl
cmc
bswap
jmp
inc
ror
adc
push
btc
xor
pushf
cmc
mov
clc
stc
add
push
mov
push
pushf
pushf
lea
jmp
call
add
call
bts
xor
bswap
bts
mov
pushl
add
mov
push
pushf
jmp
xchg
not
pushf
mov
bswap
lea
stc
movsbw
mov
lea
pusha
mov
mov
rcr
ror
call
call
bts
sub
btr
rol
pop
shl
neg
stc
rcr
ror
bswap
not
btc
lea
jmp
call
jmp
jmp
test
pushf
cmc
sub
pushf
mov
mov
pusha
lea
jmp
pusha
push
push
pushl
popl
pushf
movl
mov
lea
jmp
pushl
popl
push
mov
lea
jmp
pusha
call
pusha
mov
call
mov
pushf
push
pusha
lea
jmp
jmp
sub
mov
bsf
mov
jmp
push
call
daa
shr
mov
rol
mov
cmp
bt
not
pushf
clc
pusha
not
movw
stc
pushf
stc
and
mov
push
mov
pushf
push
jmp
call
lea
jbe
bt
btc
ror
not
sub
stc
movsbw
call
pushl
popl
movb
movb
movl
movb
lea
jmp
cmc
ror
btr
mov
bt
push
movzbw
mov
btr
push
call
pushf
add
call
pushf
push
pushf
cwtl
pushf
pushf
call
call
call
rol
pushf
clc
bt
add
jmp
pushf
pusha
dec
test
add
clc
pushf
clc
jmp
push
pushf
popl
pushf
pusha
mov
mov
pushl
popl
mov
pushf
lea
jmp
call
lea
pop
dec
bts
shr
not
and
lea
adc
btc
and
sets
mov
or
mov
test
clc
call
xchg
not
bswap
stc
mov
shr
xor
add
test
sub
stc
btc
movsbw
clc
movzbl
pushf
pusha
shl
jmp
divl
pushf
pusha
pushf
pushf
mov
pushf
call
not
push
sub
call
shld
pusha
daa
mov
pushf
cmp
mov
clc
bt
add
movb
mov
pushf
lea
jmp
bt
not
test
test
mov
pushl
add
stc
stc
cbtw
clc
pushf
add
jne
cwtl
cmc
sub
pushf
call
push
movb
shr
movb
mov
jmp
pusha
stc
mov
cmc
pushf
jmp
jmp
movl
jmp
test
mov
mov
test
test
pushl
popf
movb
movl
movb
lea
jmp
jmp
add
btc
adc
not
movzbl
bsf
stc
mov
bt
sar
sete
sub
xadd
sbb
mov
shl
xadd
rol
mov
shl
add
shl
or
mov
test
call
mov
dec
bsr
xor
movzbw
jmp
pusha
pusha
pushf
popl
stc
mov
bt
cmc
mov
clc
cmc
cmc
stc
xchg
mov
mov
lea
jno
push
mov
lea
mov
push
rcl
push
call
jbe
ret
add
mov
jbe
add
jb
add
ja
add
add
out
jb
and
jbe
mov
push
jae
ret
add
xchg
jbe
and
jae
xorb
add
lret
add
jae
mov
jge
add
aaa
jbe
mov
mov
jbe
ret
add
in
add
and
ret
add
stos
jbe
and
jbe
inc
xor
xorb
add
jge
add
push
jb
ret
add
push
jb
xorb
add
mov
ret
add
call
jne
ret
add
call
jbe
inc
xor
inc
xor
inc
push
add
mov
je
mov
cmc
ja
add
je
inc
out
jbe
mov
xchg
jb
add
jae
xorb
add
mov
jae
and
add
push
je
loop
jae
ret
add
cmc
ja
loop
jne
add
jae
loop
jbe
mov
mov
add
xchg
ja
and
add
xorl
add
add
in
add
xchg
ja
add
je
inc
mov
jae
bound
jbe
bound
ja
add
ja
add
jne
and
jae
bound
jae
ret
add
in
add
push
jae
ret
add
outsb
ja
subb
and
jne
ret
add
call
jne
ret
add
xor
inc
xor
inc
xor
inc
xor
xorb
add
add
xorb
add
xorl
bound
add
push
jbe
and
jne
add
jne
and
ja
add
ja
loop
jb
xorb
add
scas
ja
ret
add
fnsave
subb
add
jb
ret
add
mov
jae
loop
je
inc
mov
jne
add
jbe
and
jb
inc
loopne
add
aad
add
outsb
jbe
mov
mov
jb
add
jae
xorb
add
mov
jb
inc
lret
addb
mov
aaa
je
loop
jae
ret
add
xchg
jb
add
jbe
addb
mov
cmc
jbe
bound
ja
bound
add
call
jne
ret
add
call
jbe
inc
xor
inc
xor
inc
xor
and
add
aaa
jbe
and
ja
loop
jae
loop
je
loop
jb
ret
add
and
jae
ret
add
push
add
sbb
ret
jae
bound
jne
add
jne
add
jbe
and
je
inc
mov
jb
ret
add
lock
loop
jne
add
jbe
mov
and
push
jne
add
jae
loop
jne
add
jae
ret
add
xchg
jae
xorb
add
xorl
inc
mov
jb
and
ja
and
add
sbb
add
jne
add
ja
add
jb
add
jbe
and
jae
bound
jne
ret
add
call
jne
ret
add
xor
inc
xor
inc
xor
inc
xor
mov
jne
add
jbe
mov
stos
jne
add
jbe
add
ja
ret
add
ret
je
loop
ja
inc
scas
jae
ret
add
inc
pushf
pushf
popl
bt
pushf
clc
stc
mov
pusha
mov
mov
call
mov
pushf
pusha
pushf
mov
lea
jmp
push
pusha
pushf
popl
mov
mov
stc
pushf
push
mov
pushl
jmp
shld
movsbw
mov
pushf
rol
clc
rcr
mov
pushl
bt
push
add
movl
push
mov
pushf
lea
jmp
pushf
mov
push
lea
jmp
jmp
jmp
neg
lea
test
sub
mov
cmp
bswap
stc
clc
pushf
cmp
xor
cmc
add
pusha
cmc
cmc
stc
bswap
cmp
push
xor
stc
pushl
sub
push
bt
pushf
ror
mov
movb
stc
clc
xor
jmp
call
sub
cmc
pushf
not
stc
stc
rol
bt
add
mov
call
stc
jmp
bswap
inc
mov
add
ror
mov
call
dec
bswap
dec
mov
clc
add
pusha
jmp
jmp
call
rol
call
pusha
push
jmp
inc
ror
sets
not
btr
movzbw
sub
btr
shl
adc
pushf
neg
shl
test
cmp
xor
seto
shr
pop
xor
movzbw
sub
bswap
sbb
movzbl
stc
mov
push
sub
bt
stc
not
call
ror
cmp
xor
cmp
clc
stc
call
pusha
pushf
pushl
popl
push
lea
jmp
lea
je
clc
pushf
xchg
bts
bts
cmc
shl
mov
bt
shr
call
test
cmp
call
push
dec
jmp
mov
call
jmp
jmp
pushf
popl
jmp
movl
movb
mov
jmp
pushf
popl
call
push
pushl
popl
pushf
pushl
pushl
pushf
lea
jmp
pusha
pushf
mov
pushf
pushf
lea
jmp
pushl
popl
pushl
lea
jmp
pusha
mov
pushf
not
pusha
pushf
pushl
lea
jmp
jmp
call
mov
stc
movzbw
movzbw
stc
mov
call
push
lea
jg
pushf
mov
pushf
pushl
lea
jmp
jmp
mov
mov
pusha
mov
lea
jmp
jmp
cmp
xor
mov
pusha
pushl
pushl
not
not
dec
bsr
lea
jo
push
bsf
dec
shrd
inc
rcl
xor
bsf
movsbw
inc
sub
cmc
pushl
bts
xor
and
mov
mov
test
pusha
clc
add
push
pushf
jmp
pushl
popl
movb
movb
lea
jmp
sub
pushf
and
movw
mov
call
not
mov
pushl
lea
jmp
mov
pushf
rol
bt
neg
bt
rol
mov
add
pushf
not
pushf
lea
jmp
stc
das
shl
mov
test
mov
clc
not
pusha
pushf
cmp
not
pusha
pushf
jmp
add
mov
jmp
sub
test
sub
call
not
movl
mov
call
neg
xor
shld
stc
neg
call
call
clc
add
movzbl
call
bt
mov
movb
pushf
call
pushf
pushl
movb
mov
pusha
pushf
pushf
lea
jmp
cmp
add
call
ror
call
pushf
popl
pusha
call
mov
movw
movb
dec
pushf
mov
push
lea
jmp
clc
mov
bt
mov
jmp
cwtl
movb
pushf
call
push
pushf
popl
pushf
pusha
push
clc
mov
pusha
bt
jmp
mov
push
mov
rcr
not
push
push
btr
pushl
bts
mov
jmp
call
bt
pushf
ror
bt
stc
xor
clc
mov
push
cmc
cmc
sub
jmp
pusha
jmp
pushf
mov
btr
push
rcl
call
pusha
bt
sub
movb
movb
jmp
pusha
dec
pusha
call
sub
cmp
movb
clc
shl
pushl
mov
mov
lea
jle
push
mov
pushf
popl
pushf
movl
movb
call
stc
xchg
not
mov
cmc
stc
ror
mov
not
mov
jmp
push
not
mov
pushf
lea
jmp
pushf
mov
pushf
pushl
ret
jmp
clc
add
mov
mov
push
pushl
ret
sub
movl
push
mov
movb
lea
jmp
cmc
push
mov
pusha
jmp
not
push
push
push
pushl
lea
jmp
pusha
dec
mov
add
pushf
pushf
pushf
lea
js
push
push
pushf
movb
pushl
ret
jmp
not
push
pushl
pusha
lea
jmp
pusha
rcr
or
pusha
mov
cmp
pushf
sbb
dec
mov
stc
cmp
sub
push
pushl
clc
shl
jmp
add
jp
sub
clc
sub
jmp
call
stc
add
pushf
pushf
jmp
mov
ror
cmc
mov
clc
stc
pushf
mov
rol
jmp
mov
pushl
push
mov
push
lea
jmp
movb
pushl
popl
pushf
lea
jmp
stc
cmp
neg
cmp
bt
sub
pushf
movw
pushf
call
pushf
movb
pushf
popl
push
pushl
pusha
stc
mov
clc
movb
movl
push
mov
call
lahf
lahf
not
pushf
mov
pushf
jmp
mov
jmp
rol
pushf
bt
cmp
cmp
neg
pusha
rol
cmp
add
jmp
xchg
not
movsbl
push
rcl
push
not
cmc
mov
rol
jmp
pushf
dec
stc
xor
not
lea
jp
inc
shld
xor
sets
stc
bts
neg
mov
jmp
xor
bswap
and
or
bts
movzbl
shl
neg
cmp
stc
mov
bt
stc
cmc
push
sub
bt
jmp
xchg
rcr
mov
rol
movzbw
mov
push
bts
rcr
bswap
mov
not
btr
mov
rol
pushl
mov
mov
btr
rcl
bswap
movl
jmp
bt
call
shl
call
pushf
mov
pushl
lea
jmp
pushf
pushf
pushl
popl
pusha
lea
jmp
mov
lea
lahf
mov
movb
call
call
mov
clc
test
pushf
sub
call
neg
movb
rol
test
clc
add
movb
call
push
add
lea
ja
pushf
mov
pusha
pusha
mov
pushl
ret
sar
or
call
jmp
lea
bt
add
mov
call
lea
test
bt
bt
cmp
pushf
mov
jmp
mov
xor
test
mov
pushf
pusha
cmp
movb
add
pusha
bt
call
sub
jg
add
call
clc
dec
pushf
mov
or
add
pusha
mov
pushf
push
mov
push
mov
push
lea
jmp
mov
cld
call
call
push
call
not
stc
mov
rol
cmp
setae
mov
clc
pushf
cmc
add
push
pushf
mov
push
pushf
pushf
pushf
lea
jmp
call
bt
add
jp
sub
pushf
jmp
pushf
popl
call
jmp
mov
not
call
movzbl
rcr
movzbw
mov
push
rol
pusha
mov
clc
bt
neg
mov
cmc
pushf
rol
push
bt
add
jmp
dec
cmc
stc
pushf
add
movl
push
lea
je
pushf
mov
pusha
pushf
pushl
ret
neg
add
shr
sub
movzbl
jae
clc
cmc
add
bt
pusha
not
jmp
pushf
popl
clc
push
jmp
pushf
popl
movb
call
pushl
popf
pushl
push
pushf
push
lea
jmp
add
or
add
mov
bts
pop
xor
pop
aam
pop
movsbw
aam
xchg
pop
bts
xadd
call
xor
pushl
pushl
mov
movw
pushf
push
dec
cmp
mov
test
sub
jmp
call
mov
lea
mov
pushl
movl
pushf
jmp
bt
pushf
jmp
