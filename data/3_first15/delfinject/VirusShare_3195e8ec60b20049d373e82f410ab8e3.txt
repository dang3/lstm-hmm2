jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
sub
fistpll
fwait
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
push
push
call
mov
mov
pop
pop
ret
lea
mov
ret
mov
push
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
mov
cmpl
jne
mov
call
jmp
mov
push
mov
push
call
pop
pop
ret
mov
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
push
lea
push
mov
call
push
call
mov
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
mov
push
mov
add
push
mov
lea
push
mov
call
push
call
cmp
je
push
call
testb
jne
lea
push
lea
push
call
lea
push
lea
push
lea
push
call
test
jne
movl
mov
pop
mov
pop
ret
push
mov
mov
call
inc
setne
pop
ret
test
je
sub
mov
ret
mov
push
mov
add
push
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
lea
call
mov
mov
mov
mov
call
mov
cmpl
jbe
mov
jmp
mov
lea
push
sub
push
lea
call
add
push
mov
mov
push
mov
call
push
push
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
push
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
cmpl
je
push
call
mov
pop
pop
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
lea
mov
rep
mov
xor
push
push
pushl
mov
xor
jmp
lea
mov
call
mov
lea
call
inc
mov
test
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
add
mov
ret
lea
push
push
mov
mov
call
ret
push
movzwl
add
mov
mov
pop
ret
mov
shr
mov
ret
nop
push
mov
add
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
nop
nop
nop
nop
cmp
jle
cmp
jle
or
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
lea
xor
mov
call
lea
xor
mov
call
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
mov
call
push
mov
call
push
mov
mov
call
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movb
xor
push
push
pushl
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movl
lea
push
mov
push
mov
mov
call
test
je
lea
push
push
lea
push
mov
xor
push
push
mov
cltd
add
adc
add
push
mov
push
mov
mov
call
test
je
mov
mov
call
cmp
jg
cmpl
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
mov
mov
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
call
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
add
call
mov
mov
movzwl
sub
sub
jb
inc
mov
lea
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
mov
mov
call
test
je
lea
push
mov
mov
call
push
mov
mov
push
mov
mov
add
push
mov
push
mov
mov
call
inc
decl
jne
lea
push
push
lea
push
mov
xor
push
push
mov
cltd
add
adc
add
push
mov
push
mov
mov
call
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
call
mov
lea
push
mov
push
mov
mov
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpb
jne
push
mov
push
mov
mov
call
jmp
mov
push
mov
mov
call
ret
jmp
jmp
nop
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
xor
lea
call
mov
call
test
jle
mov
mov
mov
movzbl
cltd
idiv
xor
inc
decl
jne
cmp
jle
sar
jns
adc
mov
fildl
call
mov
cmp
jg
mov
call
test
jle
mov
mov
mov
call
push
mov
pop
mov
cltd
idiv
mov
incl
mov
call
xor
mov
mov
movzbl
mov
cltd
idiv
mov
incl
mov
cltd
idivl
mov
xor
mov
mov
mov
and
jns
dec
or
inc
xor
mov
mov
movzbl
add
shr
xor
xor
mov
mov
and
jns
dec
or
inc
test
jne
lea
mov
call
mov
lea
call
jmp
lea
xor
mov
push
mov
pop
sub
call
mov
lea
call
inc
decl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
mov
or
je
mov
or
je
mov
mov
cmp
jbe
mov
cmp
repz
je
mov
cmp
jb
cmp
ja
sub
mov
cmp
jb
cmp
ja
sub
cmp
je
movzbl
movzbl
sub
pop
pop
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
movl
mov
call
push
call
mov
mov
add
add
mov
add
mov
mov
mov
dec
test
jb
inc
mov
xor
mov
mov
add
mov
shl
add
mov
add
mov
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
test
jne
mov
mov
add
mov
add
add
movzwl
mov
mov
mov
shl
mov
mov
add
xor
push
push
mov
cltd
add
adc
add
mov
add
mov
mov
jmp
inc
decl
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
xor
mov
mov
xor
push
push
pushl
mov
mov
call
push
call
test
je
push
call
mov
test
je
push
call
mov
cmpl
je
push
call
mov
test
je
lea
mov
call
lea
call
mov
mov
call
mov
mov
call
mov
push
call
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
call
xor
push
push
pushl
mov
xor
push
call
test
je
mov
call
mov
inc
test
je
push
push
call
mov
test
je
mov
call
mov
mov
mov
call
push
push
call
test
je
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
push
push
mov
call
mov
push
call
call
sub
cmp
jae
xor
mov
pop
pop
ret
mov
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
or
add
pushf
inc
inc
add
add
inc
add
inc
add
aaa
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
add
inc
add
inc
add
add
add
add
in
mov
push
push
dec
jne
push
push
mov
call
mov
xor
push
push
pushl
mov
nop
nop
nop
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
lea
call
mov
call
mov
lea
call
mov
mov
call
jne
call
cmp
jne
mov
mov
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
push
mov
mov
mov
call
mov
push
lea
push
mov
mov
mov
call
mov
pop
call
mov
lea
push
mov
mov
mov
call
mov
call
push
call
mov
lea
push
mov
mov
mov
call
mov
call
push
call
mov
lea
push
mov
mov
mov
call
mov
call
push
call
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
push
mov
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
lea
mov
call
mov
mov
mov
call
push
push
push
push
push
push
mov
call
push
mov
mov
call
mov
call
test
je
jmp
jmp
push
lea
mov
mov
call
mov
call
push
push
mov
mov
call
test
jne
jmp
jmp
push
push
push
mov
mov
call
test
jne
xor
mov
mov
push
push
push
push
push
push
push
mov
call
mov
push
push
mov
mov
call
test
jne
movl
push
push
push
push
mov
call
push
mov
push
mov
mov
call
mov
push
mov
mov
call
xor
mov
push
push
push
push
push
mov
mov
call
test
jne
movl
movl
push
push
push
push
mov
call
push
mov
push
mov
mov
call
test
jne
cmpl
jne
mov
push
mov
mov
call
push
push
push
mov
mov
call
xor
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
cmp
je
push
call
cmpb
je
mov
jmp
xor
mov
call
mov
mov
call
mov
mov
mov
call
mov
call
lea
push
mov
call
mov
mov
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
call
mov
mov
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
push
mov
mov
mov
call
mov
mov
call
cmpb
je
mov
push
lea
push
call
mov
mov
call
mov
call
call
mov
mov
call
lea
push
mov
call
mov
mov
pop
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
pop
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
call
add
decl
add
add
outsl
push
push
add
decl
add
add
insl
imul
xor
decl
add
add
imul
add
decl
add
add
je
push
outsb
popa
xor
add
decl
add
add
insl
popa
push
cmp
add
decl
add
add
outsb
imul
add
decl
add
add
addr16
je
imul
add
decl
add
add
ja
push
ja
xor
ss
decl
add
add
insl
outsl
data16
ss
add
decl
add
add
popaw
outsw
bound
xor
decl
add
add
js
outsl
jae
cmp
add
decl
add
add
insl
popa
jbe
insl
xor
xor
decl
add
add
outsl
insl
imul
decl
add
add
imul
js
add
add
decl
add
movsb
push
mov
add
add
add
decl
add
add
push
test
pop
mov
add
decl
add
add
adc
add
decl
add
scas
push
mov
add
add
add
call
add
xchg
inc
popf
pop
mov
push
mov
dec
scas
dec
mov
add
add
decl
pop
cmpsb
push
sahf
pop
mov
pop
addb
add
decl
add
sbbl
sahf
pop
mov
pop
add
add
decl
add
sbbl
sahf
pop
mov
pop
add
add
decl
add
mov
push
sahf
pop
mov
pop
add
add
decl
add
add
cwtl
push
mov
mov
mov
decl
add
add
push
test
cmpsl
dec
mov
decl
add
add
pop
cmpsb
je
push
test
add
call
add
add
pop
cmpsb
insb
mov
dec
push
add
add
call
add
add
imul
sbbl
add
call
add
add
dec
movsl
pop
stos
inc
mov
pop
cmpsl
add
add
call
add
add
dec
scas
pop
stos
jno
pop
mov
add
add
call
add
add
scas
pop
stos
jno
pop
mov
add
add
decl
add
add
lcall
je
add
decl
add
popf
push
mov
pop
mov
mov
add
call
add
add
push
stos
dec
stos
bound
pop
add
add
decl
add
add
dec
movsl
push
mov
decl
add
add
push
cmpsl
push
stos
pop
mov
push
test
call
add
mov
arpl
inc
mov
pop
test
popa
add
add
call
add
add
pop
mov
pop
test
popa
add
decl
add
add
mov
pop
addb
call
add
add
dec
mov
push
mov
dec
mov
add
decl
add
mov
pusha
test
dec
test
add
add
decl
add
add
pop
movsb
jg
inc
addb
decl
add
add
pop
stos
inc
mov
dec
test
decl
add
add
dec
pushf
push
stos
dec
mov
add
decl
add
add
push
mov
add
decl
push
scas
jnp
pop
movsb
jge
inc
addb
add
call
add
add
pop
mov
inc
test
add
add
call
add
add
pop
movsl
push
mov
jns
dec
mov
incl
add
add
incl
add
add
decl
add
add
mov
add
decl
add
add
push
mov
add
incl
add
add
imul
xchg
push
stos
inc
mov
mov
push
add
add
decl
add
add
mov
dec
mov
incl
add
add
leave
xchg
mov
xchg
lea
cwtl
mov
addb
cld
nop
not
jmp
cld
xor
mov
inc
jnp
iret
fwait
sub
sub
add
dec
push
clc
xchg
mov
not
mov
jmp
add
add
xor
filds
adc
inc
addl
fildl
add
add
add
mov
xchg
cld
lea
mov
cld
nop
jns
mov
xor
cld
cmp
jmp
insb
sub
mov
jg
fsub
out
add
xchg
jge
mov
insb
bt
mov
add
adc
decb
add
mov
cmpsl
adc
cld
cwtl
lea
nop
dec
cld
jmp
add
add
and
mov
out
add
pop
add
inc
fbstp
add
cli
gs
add
add
add
add
add
add
xor
add
mov
add
add
add
orb
add
addb
addb
add
xor
add
push
add
xorb
add
js
add
add
add
add
add
push
roll
call
add
add
add
add
les
add
add
add
add
add
add
rolb
add
add
call
add
add
add
add
add
add
add
add
add
fadds
add
or
add
or
add
in
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
enter
xor
add
pop
add
addb
add
add
add
add
add
add
add
add
add
dec
add
add
add
adc
add
in
add
add
add
add
add
add
add
jo
add
and
add
pusha
add
add
add
add
add
add
add
sbbb
add
add
add
mov
add
test
add
add
add
add
add
inc
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
add
add
jae
insl
popa
outsw
daa
cmp
sub
add
add
add
aaa
int3
pop
loope
out
aas
cmp
cmp
add
leave
xor
aaa
ljmp
xor
leave
xor
aaa
out
ds
ret
daa
ret
jne
arpl
cmp
adcl
popa
jge
or
enter
cld
cmp
cmp
push
xlat
and
or
lret
addr16
mov
push
pushf
imul
mov
jae
nop
je
outsl
xchg
fs
insb
movb
scas
inc
ja
lods
or
lea
mov
mov
adc
lods
bound
jge
jmp
or
pop
sub
lods
push
insb
sbb
sub
cld
out
add
jp
or
jl
imul
pop
mov
sbb
shll
mov
sbbb
jb
adcb
mov
dec
mov
pop
xchg
jns
daa
mov
andb
and
sbb
data16
xor
pop
mov
aad
fnstenv
add
sbb
cmp
sub
pop
lock
ficompl
jmp
cmp
int3
and
loope
mov
fsubrs
shrb
cmpsb
arpl
inc
mov
push
cmpsb
insb
popf
js
dec
fwait
dec
mov
fcmovb
movsl
pusha
mov
mov
movsl
jns
dec
mov
scas
insb
pushf
dec
xchg
nop
pop
fwait
sbb
outsl
xchg
inc
mov
or
push
in
and
pop
jmp
and
and
pmaddwd
xor
or
pop
mov
adc
das
lds
into
and
ds
pop
sti
pop
ficompl
push
push
repnz
sbb
add
sub
scas
push
outsl
movsb
pop
lahf
jg
jb
pop
cmpsl
imul
ss
dec
mov
mov
lods
insl
xchg
push
adcb
addb
test
add
into
push
xorl
les
or
adc
arpl
inc
mulb
leave
xor
psllq
repnz
popa
test
mov
cmp
rclb
lds
stc
add
pop
out
aaa
enter
mov
xor
cwtl
sahf
movsl
js
popa
push
scas
jle
xor
dec
movsl
push
ja
dec
lods
dec
mov
mov
jg
dec
addb
inc
mov
arpl
sahf
daa
in
jmp
and
pop
out
or
xor
sbb
cmp
in
cli
push
cld
ds
and
or
xor
in
sub
xor
inc
into
add
sub
adc
and
in
fstl
fsubl
lock
cmp
mov
push
movsl
imul
jb
addr16
dec
mov
dec
xchg
pop
mov
dec
lods
jbe
jge
mov
dec
lea
repz
pushf
jg
pop
xchg
or
sbb
int3
pop
out
sub
xor
sbb
fisubrl
xlat
and
xchg
or
and
or
xor
aas
int3
aas
movl
rcrl
dec
loope
xlat
add
daa
aad
into
and
sub
jae
aas
mov
jl
push
lods
push
cmp
insb
pushf
jo
inc
test
push
je
dec
mov
stos
pop
xchg
sbb
test
jno
outsl
mov
mov
mov
xchg
outsl
cwtl
jb
inc
cmpsb
jno
or
xor
and
cmp
out
cmp
pop
loope
into
and
and
and
add
nop
or
in
sbb
adc
aas
int
push
shrb
rclb
push
aad
fiaddl
das
int
and
daa
xlat
push
cmpl
pop
mov
push
mov
xchg
jge
pop
xchg
dec
mov
pop
mov
dec
test
push
mov
push
cmpb
xchg
dec
lods
dec
mov
movsb
addr16
dec
sahf
inc
sahf
jno
aaa
sahf
stos
and
xchg
mov
cltd
negl
fwait
sbb
sbb
xlat
push
int
xchg
cli
js
leave
xchg
test
insb
push
shl
aaa
sub
cmp
cmc
jmp
or
insb
out
cmp
push
pop
push
and
imul
push
mov
js
sbb
mov
mov
imul
scas
push
push
je
xor
adc
sahf
and
mov
sbb
aad
mov
sahf
inc
mov
push
sbbb
jge
and
lock
sahf
push
sbb
daa
mov
in
and
and
or
add
aas
dec
idivb
or
mov
inc
cmp
popa
dec
cld
pop
ja
pop
test
sbb
and
ja
push
push
pop
pop
stos
jle
int
dec
gs
dec
test
xchg
jecxz
mov
aaa
add
xchg
or
dec
jp
mov
loopne
lds
mov
xor
mov
adc
xor
inc
cmp
mov
gs
fstpt
pop
push
bound
shrb
fnstsw
icebp
cmp
fbstp
fwait
sbb
xorl
leave
ds
push
fidivl
xchg
and
adc
loop
mov
mov
cld
fidivl
sub
mov
stc
or
lods
and
xchg
popa
dec
loop
inc
push
push
jb
test
mov
xor
mov
pop
and
add
rorl
mov
ret
add
and
mov
jle
fdivrs
xor
jno
fcmovnu
push
cmp
push
sbb
mov
fcoml
xchg
cmp
mov
push
addb
imul
cmp
xchg
psllw
ljmp
cs
movsb
jns
ret
into
into
fwait
pop
out
add
mov
sub
mov
cmp
test
popf
loopne
pop
inc
std
push
jnp
add
loopne
lret
dec
into
xchg
mov
gs
mov
mov
inc
ffree
lods
push
dec
and
lods
pop
mov
sub
add
cltd
mov
mov
add
out
sbb
inc
call
or
into
push
mov
inc
mov
mov
dec
push
jns
fldl
sub
pop
xor
and
dec
mov
mov
movsb
cltd
fwait
subb
lahf
fstps
idivb
pop
popa
clc
pop
mov
mov
lods
sbb
mov
addr16
fstps
es
cld
inc
and
add
ds
cmp
cmp
test
push
out
rcrl
adc
movl
pop
add
mov
ja
lds
faddl
out
add
cs
pop
push
xorb
das
add
mov
or
xchg
mov
cmp
je
stos
push
rcr
and
pop
mov
lea
orb
xchg
mov
mov
or
push
iret
aas
add
addl
stc
popf
add
push
nop
pop
push
sbbl
movsb
call
push
movsb
jb
pusha
mov
cmp
pop
jl
jns
cltd
xchg
mov
fnstenv
dec
or
sub
lds
inc
ss
lahf
sub
popf
clc
push
cmp
cs
mov
call
mov
in
inc
mov
enter
adc
notl
sub
iret
add
hlt
jns
add
negl
popa
mov
rcll
and
push
cwtl
stos
sub
stc
mov
xlat
jae
xorb
dec
shrl
rorl
mov
lret
xor
rorl
pop
jge
dec
cmp
cltd
lds
mov
push
push
movsl
jno
nop
xchg
push
cmp
cmp
cmpsl
inc
movsl
lea
mov
rolb
jge
mov
ret
sahf
lods
xor
or
mov
sub
test
stc
push
mov
lcall
leave
fistpll
mov
jbe
adc
inc
or
loop
movsl
ja
pop
movsb
pop
push
in
ja
push
dec
fnstsw
fnstsw
mov
mov
into
xchg
push
sbb
notl
scas
inc
fwait
jne
jbe
xor
cmp
xchg
jecxz
mov
in
or
sbb
or
test
test
in
jg
addr16
inc
imul
js
aam
pop
jns
or
sub
aaa
sbb
xor
outsl
add
int
pusha
fcompl
aam
add
pop
rclb
mov
icebp
adcb
pop
mov
xchg
outsl
nop
test
aaa
dec
mov
aas
enter
lcall
lods
or
ds
pop
stos
movsb
popl
jl
orl
jp
stos
imul
rolb
or
adc
adc
test
add
lods
jge
movsb
mov
push
xor
jb
lock
pop
ret
jne
filds
sahf
mov
mov
pop
cltd
jmp
lret
pop
aad
xchg
fdivrl
rcrb
dec
pop
repz
inc
popa
push
in
mov
xor
stc
and
out
sub
ss
cmc
jno
daa
jo
or
cmp
jge
scas
jg
clc
inc
cmp
jns
push
out
and
imul
int
mov
hlt
mov
xchg
adc
and
adc
stc
mov
shlb
mov
rorl
and
sub
pop
daa
repz
add
sarl
adc
or
loopne
lock
ret
push
dec
out
pushf
into
jbe
pop
mov
icebp
stos
mov
xor
and
pop
repz
hlt
sub
mov
jae
movsl
mov
and
xchg
dec
and
decb
push
xchg
inc
test
in
je
inc
ja
movsl
xchg
fdivl
loope
add
xchg
inc
outsb
icebp
or
test
cli
lea
add
fdecstp
pop
sbb
push
sub
sarb
test
jae
jne
fisttpl
jl
fsts
add
mov
push
lret
and
cmp
arpl
arpl
push
inc
push
mov
lret
fsubrp
sahf
push
push
or
outsl
pushf
cmpsl
dec
in
aad
les
movsl
leave
dec
mov
jle
adc
sub
in
inc
lods
inc
cmp
xchg
les
lods
test
dec
in
mov
sahf
cmpsl
andb
aaa
test
pop
inc
iret
pop
pop
inc
repnz
cmp
ljmp
ret
fwait
shrb
pushl
sarl
gs
idivl
pop
mov
cmc
or
dec
rol
jmp
adc
mov
mov
or
adc
icebp
pushf
inc
je
ficompl
cmp
cwtl
push
mov
mov
adcb
inc
inc
mov
in
insl
dec
add
andb
inc
aaa
jmp
and
fwait
in
and
sbb
adc
adc
xor
and
leave
push
and
pop
sub
xchg
jp
xchg
shlb
call
jp
jp
xchg
fs
sbb
movsb
xor
lret
dec
into
sbb
push
xchg
cmc
pop
or
add
push
faddp
mov
jp
and
js
jno
xorb
lods
pop
xchg
fidivrl
sub
xorb
test
je
mov
jl
leave
andb
mov
and
cmp
sub
cmp
subb
rcll
sahf
mov
int
xadd
pop
scas
and
push
imul
sbb
mov
push
stos
push
inc
cld
pusha
jge
jne
shlb
call
repnz
mov
arpl
in
cmp
adc
inc
cmc
mov
ja
test
fildll
test
dec
xchg
add
pop
sahf
rol
gs
out
scas
push
mov
fcompl
xchg
outsl
xor
dec
stos
dec
scas
pop
mov
shlb
sbb
dec
sbb
jp
loope
into
inc
push
out
mov
sub
sbb
and
adc
movsb
push
sub
xor
pop
sbbl
cmp
mov
xor
add
push
push
hlt
jp
mov
cmp
mov
cmp
ljmp
pop
arpl
cmpb
and
outsb
cli
cmp
add
sbbl
addr16
jmp
add
mov
sbb
rorb
sbb
movsl
jae
movsl
push
xchg
xchg
clc
jb
jl
sti
imul
inc
test
ficomps
xor
cmp
mov
jns
sbb
push
xlat
mov
pop
push
popf
divb
lods
les
in
add
test
sbb
in
out
das
push
mov
adcl
test
adc
in
mov
jge
xchg
scas
aad
gs
xor
pop
pop
jno
imul
push
xor
orl
scas
stos
push
jbe
cld
in
inc
mov
xchg
negb
xor
pop
jo
and
xchg
push
aas
and
in
ja
daa
jno
mov
pop
pop
loopne
mov
pslld
arpl
cmpsb
test
push
popa
fistps
out
lods
push
ds
xchg
add
out
inc
popa
scas
add
cmp
lock
repnz
pop
inc
stc
or
push
outsl
sahf
dec
jb
mov
xchg
cli
sub
jmp
scas
or
mov
test
mov
insl
pop
shrl
adc
out
mov
lds
stos
imul
adcl
push
mov
jg
ret
jge
sbb
xor
push
adc
push
subl
lds
push
mov
xchg
inc
testb
adc
lds
pop
repz
je
xlat
mov
sbb
xchg
dec
pop
clc
es
rcrl
ficompl
aam
imul
jle
mov
or
mov
inc
xchg
lods
insb
mov
or
repz
aad
stc
or
dec
inc
dec
lock
or
leave
das
pop
push
xlat
lcall
push
fld
negl
fldcw
out
lods
pushf
mov
mov
jb
jmp
xchg
loop
cmp
xor
in
outsl
jne
mov
mov
fxtract
insb
dec
adc
pop
sub
in
inc
xchg
push
inc
jnp
sub
pop
xchg
xor
mov
push
mov
das
adc
inc
lods
jo
dec
cmpb
jle
or
addr16
shlb
scas
jg
or
iret
push
jle
pusha
decb
test
push
dec
xor
lret
daa
sbb
aam
adc
jecxz
mov
mov
cld
outsl
fnsave
and
cmc
cmpsb
xor
sbb
inc
into
ret
pop
lods
push
mov
push
and
insb
inc
mov
inc
movsl
cmp
pop
lods
cltd
cmp
jle
ret
xchg
sub
sbbl
cld
enter
push
dec
test
jne
cmp
outsb
imul
int
js
in
cwtl
pop
pop
clc
add
dec
push
mov
mov
xchg
fwait
cmp
std
jge
and
mov
dec
dec
mov
inc
mov
or
jae
out
pop
adc
in
xchg
xchg
and
or
sub
dec
xchg
jb
popa
push
bound
cmc
adc
cmp
ret
and
push
or
lods
mov
ret
jnp
xchg
sbbl
xor
xchg
pop
and
faddp
mov
movsb
aad
rorl
xor
cmp
dec
out
loop
jp
rorb
test
into
xor
fbstp
test
outsl
jl
js
dec
mov
fwait
or
movswl
ret
sub
sub
inc
scas
sarb
int3
scas
test
jnp
imul
fidivl
idivl
les
out
mov
test
inc
call
daa
les
lret
dec
jne
jg
sbb
andl
loope
popa
cmpsb
cmp
mov
pop
mov
jle
inc
imul
mov
jo
mov
adc
or
mov
loop
icebp
pop
ret
pop
cld
in
iret
gs
cmp
jle
lock
pop
adc
pop
je
scas
cld
divl
jb
movsl
jmp
cld
inc
enter
sub
push
mov
ljmp
push
adc
addb
adc
fcmovbe
and
mov
lock
mov
adc
mov
pop
jmp
repz
out
and
je
insl
jb
js
mov
push
and
mov
and
loope
insb
movsl
negl
subl
fdivrs
fldl
divb
pop
inc
and
adcb
dec
fimull
add
dec
jo
and
and
xor
xchg
pop
pop
pop
cmpb
push
sbb
sbb
popf
xchg
ljmp
mov
lods
fs
inc
push
out
in
jne
adc
mov
add
jecxz
movl
cmc
dec
sarl
imul
jbe
ljmp
mov
fidivl
sub
shrl
addr16
jnp
flds
popa
pushf
sub
mov
xor
pushf
addr16
add
mov
es
scas
push
adc
cmp
leave
mov
aam
jge
cli
dec
aas
mov
sar
pop
lds
dec
push
popf
sub
insb
lock
pop
or
sbb
push
loope
mov
ja
jg
inc
loop
pop
fimuls
jae
lcall
xor
es
insl
fst
xchg
push
loop
addr16
aaa
mulb
xchg
dec
repz
jns
sti
loopne
xorb
insb
xchg
test
jp
imul
inc
mov
filds
and
pop
in
inc
jns
stos
adc
out
cld
adc
pop
inc
je
xchg
les
test
push
mov
out
sarl
add
inc
addr16
pop
cwtl
inc
mov
neg
dec
std
repz
sti
enter
aaa
jmp
cmp
cmp
sub
pop
ret
jecxz
sbbl
cmp
cwtl
add
cmp
pop
loop
mov
adc
fsubl
jl
vandnps
dec
mov
add
jb
push
adc
xchg
shlb
mov
test
jg
mov
adc
ficoml
js
out
add
out
jno
cli
mov
stos
xchg
inc
filds
fistpll
mov
mov
push
mov
push
cmpsl
push
cltd
pop
mov
jo
pop
rclb
jne
lahf
sbb
xor
dec
push
cmc
cmp
xchg
jl
inc
fnstsw
cmc
mov
mov
adc
nop
lods
cmp
cwtl
jo
daa
mov
dec
cmpb
cmpsl
repz
push
dec
idiv
jne
mov
pop
mov
sub
push
jae
pop
fcompl
pop
add
inc
jnp
out
xchg
cwtl
imul
mov
add
sbb
loope
ror
mov
pop
stos
insl
sahf
dec
xchg
push
movsl
popa
fwait
jns
mov
jl
push
mov
push
jnp
hlt
mov
lahf
loope
push
push
out
js
xor
test
cmpsb
or
popf
cmpsl
cmp
std
xor
or
add
sub
out
pop
inc
mov
enter
dec
fs
incl
inc
cmpsl
repnz
pop
std
xor
test
push
dec
mov
nop
or
push
lcall
adc
add
and
adcl
or
and
pop
mov
frstor
fcmovu
cmp
mov
and
into
pusha
xor
stc
xchg
mov
xor
pop
sub
lds
xor
mov
fidivs
adc
mov
bound
cwtl
shr
pop
push
aad
jo
jge
xchg
mov
or
sub
loopne
cwtl
adc
jnp
out
or
arpl
mov
mov
xor
mov
push
push
fisubs
cld
and
xor
aam
scas
iret
xor
mov
mov
cmpsb
les
xchg
mov
ret
or
mov
mov
rolb
mov
pop
dec
popf
sub
orb
inc
je
mov
mov
cvtdq2ps
cs
sub
or
push
lahf
sti
add
inc
dec
shrl
sbb
push
fimuls
arpl
cs
jae
out
mov
push
out
inc
pop
rorl
in
jle
adc
in
cltd
mov
leave
out
movsb
addr16
sbb
idiv
lahf
hlt
mov
dec
imul
inc
js
adc
xchg
out
ljmp
or
clc
inc
jbe
jg
sub
xchg
in
out
out
inc
popa
int
scas
push
cld
xor
dec
xchg
sub
push
sub
jbe
mov
mov
pop
mov
lcall
mov
pop
mov
dec
jbe
push
adcl
mov
mov
xchg
push
pcmpeqw
pushf
mov
stc
scas
clc
dec
or
jl
adc
and
pop
ret
lahf
orb
sarb
bound
mov
je
inc
dec
jle
dec
pushf
inc
or
in
in
or
icebp
ja
add
xor
adcl
dec
mov
inc
add
int3
fwait
or
pop
sub
inc
dec
idivl
cmc
int3
pop
out
aas
dec
into
cltd
cmp
lea
sbb
mov
push
stos
fcom
ljmp
sbb
rcrb
and
hlt
repnz
sti
lcall
aaa
ret
ja
les
jle
repz
sti
jle
and
les
mov
push
jo
out
rcrb
pop
mov
or
insl
mov
push
mov
adc
and
pop
xchg
or
lahf
outsl
mov
sub
shrl
sqrtps
jg
test
add
sbb
sub
les
hlt
sub
sub
stc
daa
xchg
fsubs
lds
inc
or
enter
mov
push
mov
pop
xchg
mov
cmp
fildl
cld
fildl
sbb
es
mov
out
sub
jg
jmp
inc
mov
loop
mov
mov
lods
mov
cmp
sub
cmp
aad
leave
test
test
inc
mov
or
adc
insb
cmp
sbb
inc
mov
jno
popa
and
and
jmp
pop
stos
jne
movsb
in
inc
add
xorb
std
daa
popa
sahf
ljmp
pop
inc
aam
adc
les
scas
mov
mov
push
fisttpl
lock
cmp
xchg
test
popa
mov
int
mov
out
xchg
dec
inc
fnstsw
jle
sub
or
ja
push
jl
cmpl
mov
movsb
xchg
cmp
lret
add
fists
cmp
jo
adc
or
mov
lods
dec
in
xchg
xchg
adc
lret
xorl
rcr
stc
mov
ss
out
inc
xor
or
bound
xchg
push
int
cmp
mov
lret
adc
cmpsl
mov
or
lods
pop
frstor
jbe
loope
adcl
fcoms
jl
movsb
inc
xchg
push
add
add
testb
and
shr
incb
mov
xchg
inc
test
ljmp
xor
popa
repnz
push
ret
lods
je
popf
fs
add
lds
mov
cmp
jo
imul
dec
jae
mov
sti
dec
jp
inc
in
mov
inc
xchg
cmp
mov
mov
daa
cld
pop
out
sub
cltd
addr16
es
pop
loopne
xchg
insl
mov
xchg
clc
rol
and
data16
nop
add
sbb
dec
fmull
inc
jns
inc
bound
not
dec
mov
fs
mov
sbb
cmpsb
inc
xchg
call
adc
add
jno
add
cmp
push
add
xchg
sbb
cmc
or
daa
mov
cmpsb
jl
pushf
pop
adc
push
sub
js
fstp
std
gs
hlt
pop
movsl
adc
and
std
lret
mov
gs
adc
fidivrs
movl
cmp
sub
and
push
mov
push
repnz
scas
jl
shl
pop
rcr
mov
pop
shr
imul
mov
mov
cli
insl
pop
mov
ds
jp
mov
aam
es
pop
adc
inc
ljmp
add
out
out
int
lea
dec
rcl
add
cmpsl
mov
xchg
mov
xor
or
xlat
xrelease
adc
repz
mov
mov
inc
sub
int
dec
mov
push
in
stos
pop
test
xchg
cmp
aad
mov
out
push
js
mov
in
repz
add
push
jl
inc
cs
push
add
jnp
negl
mov
movsb
aam
fwait
or
lahf
dec
test
add
in
enter
leave
leave
and
test
test
inc
xor
pop
adc
mov
mov
sub
xor
stc
jae
mov
and
inc
mov
jecxz
clc
test
jnp
mov
pop
push
xchg
scas
add
insl
loopne
das
lret
addr16
lods
jmp
ret
mov
fdivr
mov
movsl
pop
pop
mov
inc
lcall
xor
sbb
lret
lds
mull
shrl
bound
jno
pop
and
or
xchg
mov
nop
cwtl
mov
clc
inc
mov
in
jbe
movsl
gs
and
sti
hlt
imul
andl
xor
or
adc
sbb
cmp
xor
sbb
movsb
mov
and
or
adc
imul
ljmp
je
jne
sbb
cli
add
mov
pop
mov
scas
pop
mov
out
into
xor
jne
push
mov
and
fidivl
xor
adc
xchg
cltd
inc
ds
add
into
mov
ficoms
rcr
flds
mov
pop
aad
ficompl
push
lea
sarl
mov
xchg
incl
jecxz
cltd
aad
push
mov
adc
jbe
adc
aad
mov
cmp
sub
adc
adc
data16
in
shlb
add
dec
dec
jge
jp
sbb
adc
or
push
test
lahf
add
or
mov
nop
in
in
pop
rorb
repz
out
xor
dec
sub
stc
push
nop
rcrl
mov
and
lret
push
pushf
cmp
add
xchg
sub
jg
inc
jbe
inc
outsl
mov
arpl
lret
insl
mov
adc
mov
cli
mov
sbb
sub
or
and
add
out
mov
out
mov
repz
sahf
dec
test
xchg
sbb
dec
ret
les
lods
pop
scas
push
movsl
mov
adc
dec
test
inc
mov
dec
xchg
cmp
add
push
push
mov
or
mov
or
and
xlat
out
pop
xchg
sbb
data16
fidivrs
imul
and
jno
pop
push
popl
lds
cltd
pop
and
mov
scas
pop
adcb
fidivl
add
pop
nop
pop
int
cmp
imul
jp
add
enter
fisttpl
imulb
ds
and
sahf
dec
int
leave
popa
jae
pop
fmull
mov
xchg
cmp
push
movsl
js
dec
pop
mov
cmp
and
ficompl
lods
jo
rol
lods
lret
and
jb
mov
fmull
dec
repnz
pop
hlt
int
push
loop
inc
popl
test
xchg
out
out
ljmp
add
or
icebp
leave
push
ret
xchg
lds
dec
inc
flds
ficoml
pop
mov
sarl
sbb
xchg
stc
sub
push
test
or
out
pop
jnp
or
xchg
test
clc
mov
fldl
mov
adc
xchg
sbbb
xor
sub
sbb
sbb
dec
push
pop
jne
aaa
in
pop
rcl
and
test
lret
ret
loope
sbb
flds
push
rclb
fs
mov
ss
cmp
scas
push
lea
call
roll
lock
sub
cmp
adc
std
and
sub
jo
dec
mov
or
mov
scas
jbe
dec
testb
insb
lods
imul
arpl
sub
sub
mov
das
sub
sahf
adc
and
jnp
mov
jns
mov
mov
fldl
sub
add
adc
inc
sub
popf
dec
andl
popf
mov
call
scas
scas
push
testl
lahf
mov
push
xor
arpl
jb
aad
add
pop
out
sub
adc
push
mov
sub
or
aas
cmc
cmp
enter
pop
cmc
fwait
jp
addl
daa
in
in
push
mov
add
andl
rcrb
add
fnstenv
lock
push
in
ljmp
idivl
sets
add
or
or
pop
sbb
outsb
xchg
out
jg
mov
jno
lock
add
cmp
shlb
sahf
dec
movsl
xor
aad
mov
xlat
or
cld
sbb
sub
pop
sub
sti
mov
cmp
xor
outsb
pop
adc
and
jne
mov
add
pop
ja
mov
fisubrl
shrl
inc
cmp
mov
ja
insb
icebp
mov
pop
or
inc
fmull
jo
push
fldcw
or
mov
add
ss
push
pop
mov
ret
push
jb
mov
imul
adc
push
cmp
and
push
jmp
fs
mov
jl
xor
bound
mov
push
push
mov
or
out
sbb
ret
xor
fcmovnu
es
sbb
xor
out
inc
popa
sub
sub
xchg
mov
push
push
push
jb
add
mov
and
rclb
daa
cmp
aad
addr16
xor
sub
lods
fisttpll
jmp
cmp
xchg
push
xor
rol
adc
iret
sbb
xlat
mov
into
or
mov
jnp
insb
push
xor
cmp
jbe
fiadds
adc
mov
stos
dec
mov
or
pop
cmp
insb
cmp
push
lds
stc
pop
rcll
xor
and
data16
adc
movsb
push
dec
jo
les
sbb
sbb
mov
mov
sbb
mov
cmp
adcb
xchg
mov
test
and
dec
pop
test
fidivl
cmp
ud0
jg
cs
sbb
push
mov
sbb
pop
aad
cmp
das
nop
jae
fiadds
or
inc
mov
fmull
stos
adc
mov
rcrb
dec
movsb
push
and
sbb
sysret
mov
jno
out
xor
push
xor
outsb
inc
xchg
fsubrs
lock
mov
xchg
inc
lock
xchg
jne
push
adc
dec
jmp
push
mov
jp
dec
mov
sahf
push
loop
dec
mov
sub
or
cmp
jae
stc
adc
in
in
push
mov
xor
cli
sbb
lock
lcall
mov
and
outsl
pusha
lea
les
sti
pop
aam
mov
es
adc
add
mov
fisubs
and
dec
or
std
hlt
pushf
cmp
test
dec
shl
xor
fstpl
mov
pushf
dec
pop
sub
inc
std
cld
sysexit
xchg
call
push
sub
mov
cmp
xchg
mov
add
cmp
sbb
adc
mov
repnz
cmpsb
shld
leave
fmuls
add
test
jb
out
pop
mov
inc
stos
push
into
or
cmp
pop
ret
sbb
cld
mov
inc
xorb
dec
mov
test
xlat
dec
mulb
cmp
pop
mov
dec
mov
adc
dec
std
mov
insb
lds
mov
je
insl
cmp
pop
jns
mov
popf
mov
subb
jb
lods
mov
imulb
jge
leave
push
add
movsb
je
dec
fstpl
add
popa
sbb
sub
ja
ja
imul
into
push
out
mov
adc
pop
int
cs
mov
aas
shll
xchg
or
sub
lcall
and
fimuls
push
sahf
dec
loope
sub
fimuls
data16
test
xchg
test
shrb
adc
leave
adc
xor
leave
pop
ror
dec
test
push
js
add
push
xchg
js
or
adc
xlat
jg
dec
inc
xchg
popa
cmp
and
jecxz
push
push
mov
cmpl
xchg
inc
dec
xchg
xor
mov
sub
movsb
bswap
push
addl
mull
int
rorb
mov
fsubrs
mov
insl
das
dec
xchg
sub
test
daa
sbb
xor
jp
lahf
or
test
and
mov
in
sbb
cmp
cltd
sbb
adc
mov
xchg
cmp
insl
xor
fmull
push
les
aaa
out
stos
push
testb
sbb
push
sub
and
or
cmp
je
out
inc
lcall
in
leave
mov
pop
jno
push
xchg
push
cld
loop
bound
push
xchg
data16
push
add
inc
shlb
cmp
or
and
mov
push
repnz
and
rorl
pop
pop
mov
mov
pop
enter
mov
mov
jp
mov
rolb
ljmp
daa
clc
or
cld
or
mov
add
or
xchg
xchg
sbb
call
dec
aaa
xor
mov
dec
jp
enter
repz
ret
or
add
mov
repnz
push
jl
inc
add
cli
jb
shlb
adc
outsb
jno
roll
jl
jo
mov
xor
push
sub
and
pop
inc
mov
in
dec
sahf
cmc
dec
xor
dec
inc
mov
or
ljmp
movsl
pop
push
xor
jns
and
pop
xchg
dec
fimuls
mov
jmp
insb
insb
std
pop
mov
shl
push
jb
loop
push
push
cmp
sti
mov
popf
data16
out
mov
lds
divb
or
mov
jg
inc
icebp
cmp
sbb
xor
xchg
stc
sub
std
xor
and
adc
push
push
lahf
adc
fmuls
aam
push
fldenv
out
jecxz
pushf
pop
flds
dec
pop
pop
push
push
jno
test
jle
xor
test
mov
or
sbb
inc
pop
inc
call
xchg
push
and
mov
ficomps
xchg
lret
cmp
jg
nop
pop
or
das
adc
inc
stos
ljmp
imul
shrl
add
xchg
dec
mov
add
ficompl
mov
loope
popa
aad
loop
aad
test
movsl
cli
push
xor
dec
repz
push
aaa
mov
insl
pop
lcall
pop
xchg
mov
push
pop
test
jae
xchg
js
fnsave
add
cli
je
mov
sarl
outsl
nop
xor
sahf
inc
xor
xchg
cwtl
inc
aad
xorl
and
sbb
jae
ja
lcall
adc
sbbb
icebp
cmp
incb
pop
fdivrs
mul
jle
push
cmpb
outsl
arpl
call
adc
mov
insl
mov
inc
mov
lock
test
mov
mov
xchg
or
std
in
sbb
imull
pop
mov
add
push
fstpt
mov
ja
aam
stc
or
psubusw
stos
pop
xchg
or
data16
mov
sti
push
fistpll
xor
dec
push
add
cmc
add
cmc
mov
push
mov
push
aas
add
adc
adc
ss
pushf
mov
fsubrs
push
test
cli
mov
mov
arpl
loopne
push
inc
jmp
sbb
mov
xchg
fistps
icebp
mov
lahf
dec
cmpsl
mov
xor
popa
sbb
aam
pop
gs
shll
je
inc
fnstenv
lds
out
xor
inc
filds
std
out
adc
push
pop
mov
and
addr16
sub
inc
pop
xlat
mov
rcl
in
sub
mov
lods
shll
stos
mov
mov
jg
int
push
rcrb
test
dec
addr16
xor
and
mov
pop
roll
push
lahf
cltd
mov
sti
cmp
inc
scas
dec
xor
cmpsl
pop
mov
loop
pop
adc
push
ret
sbb
out
shrb
addr16
mov
mov
inc
cmp
inc
data16
pop
add
movsl
call
outsl
test
cmp
pop
cmpsb
inc
xor
mov
cmpb
scas
jae
insb
decb
shl
mov
test
sub
jg
push
cs
daa
cwtl
xchg
push
push
je
xchg
repz
sub
fadds
test
cmp
clc
add
and
sti
inc
cmp
cmp
pop
jmp
pop
in
adc
ret
adcl
and
sub
pushf
inc
cwtl
jmp
pop
mov
scas
xchg
or
sti
std
push
outsb
xor
mov
xchg
stc
outsl
inc
or
jns
lds
enter
test
les
or
and
test
testl
inc
cmpsb
insl
mov
enter
push
push
mov
filds
cmp
cmp
jbe
inc
and
daa
or
adc
imul
and
adc
repnz
mov
mov
sahf
sbb
daa
aas
loop
sub
push
mov
mov
mov
loopne
pushf
xchg
pop
cmp
mov
push
mov
pop
test
das
rcrl
cwtl
xlat
push
mulb
cwtl
dec
inc
cld
xor
mov
or
lret
je
movsb
xchg
fldcw
and
jo
dec
test
xchg
call
popf
mov
icebp
mov
jmp
push
xchg
and
adcl
sub
imul
pop
cmp
lods
mov
in
lret
into
jae
xor
sub
cmp
sahf
xor
movsb
into
and
scas
lods
sbb
in
xor
add
shl
outsl
and
mov
jne
hlt
cmp
jae
inc
sbb
adc
mov
xorb
cmp
pop
movsl
sti
mov
inc
xchg
or
pop
mov
fptan
cld
xchg
dec
test
inc
pop
lret
enter
cmp
mov
or
cmc
sub
cmp
xor
jnp
or
and
fwait
jp
mov
xorl
push
xor
or
and
cltd
lcall
lock
add
dec
scas
popf
ret
dec
repnz
in
rcl
or
mov
and
or
int3
pop
dec
pop
jne
mov
adc
add
imul
gs
xchg
push
or
xor
stc
lret
and
sbb
fimuls
mov
or
int3
sub
mulb
xorb
xchg
repz
pop
and
aam
daa
divb
fs
sarl
adc
or
xor
pop
adc
mov
push
mov
fisubs
iret
dec
in
mov
lods
jg
nop
jge
push
jecxz
fwait
jge
jne
sub
decb
repnz
adc
repnz
ficoms
lds
das
out
or
sub
jae
test
movsl
xorb
fs
mov
adc
rcrl
dec
mov
push
add
jecxz
inc
pop
cltd
dec
mov
arpl
cmc
dec
test
or
push
mov
cli
dec
sbb
clc
sbb
adc
push
mov
icebp
push
call
loopne
push
stos
or
mov
xchg
adc
lcall
xchg
inc
cmpl
mov
cltd
dec
mov
mov
inc
xlat
in
lret
inc
outsb
xchg
repnz
std
lea
leave
pop
push
lea
nop
cmpb
sub
sub
shlb
pop
jmp
cmpsl
out
mov
cmp
add
mov
loop
inc
fldenv
popa
imul
cmp
fmuls
cli
inc
mov
mov
and
push
sarl
xor
ds
or
push
xor
aam
jmp
xor
adc
les
fiaddl
cmpsb
xchg
adc
filds
pop
imul
mov
movsb
mov
sbb
pushf
mov
mov
xchg
xchg
mov
les
mov
mov
and
pop
popf
mov
hlt
popa
cmc
or
cld
push
aam
loopne
pop
cmc
in
cmc
push
int
mov
aaa
add
adc
das
mov
inc
xchg
push
mov
fwait
push
mov
fbstp
dec
xorb
std
xor
adc
mov
xchg
add
incl
mov
ss
popa
dec
repz
and
or
ret
out
int3
inc
inc
mov
lods
and
js
hlt
adc
clc
xchg
lods
pop
leave
in
int3
jo
xor
scas
push
lods
and
push
or
jge
fs
sbb
inc
mov
xlat
outsl
inc
iret
inc
mov
andb
in
sub
lret
insl
jne
loopne
repz
or
cmp
pop
push
dec
ds
xchg
mov
mov
ret
mov
push
push
aam
arpl
cmp
inc
in
sbb
icebp
pop
cltd
lahf
imul
cltd
pop
mov
rolb
pop
sti
and
add
pop
aam
movsl
mov
cli
or
push
mov
repnz
call
sti
jmp
inc
scas
push
ret
pop
add
jmp
addb
popf
push
clc
pop
loopne
push
in
bswap
es
jmp
push
icebp
loop
and
sbb
loopne,pn
es
adc
dec
pop
jecxz
inc
loope
call
sbb
push
jno
pop
enter
xor
outsb
lret
sbb
xchg
inc
enter
inc
adc
mov
push
in
outsl
mov
mov
xchg
sahf
adc
xor
adc
cmp
mov
adc
loop
test
xor
mov
scas
gs
xchg
mov
jge
movsl
mov
mov
dec
pop
lods
inc
lods
fwait
jne
test
cwtl
or
mov
pop
xchg
pop
xchg
and
loope
lods
je
mov
sbb
sti
xchg
xor
push
std
ja
or
xor
push
push
jb
lods
imul
std
or
add
aas
ljmp
mov
out
push
pushf
stos
xor
adc
push
xchg
ret
push
mov
lret
test
shll
jmp
fadd
pop
xor
mov
xchg
stc
xchg
sahf
sbb
sarl
aas
jo
fisttpl
movsb
sbb
cwtl
daa
stc
cmp
cmp
jecxz
insl
mov
push
das
movsl
push
test
xor
adc
dec
clc
jne
ret
inc
pop
fdivl
das
xchg
and
inc
nop
pop
sar
fcompl
push
dec
sahf
push
fmuls
loopne
sub
mov
shll
sbb
jge
jo
scas
imul
dec
and
fbstp
jnp
xchg
popa
addl
mov
jne
dec
outsl
stos
dec
je
test
and
add
test
xorb
xchg
cmpl
scas
mov
pop
loopne
pop
dec
mov
mov
add
loope
rorb
ss
decl
sub
and
mov
jp
nop
out
adc
sbb
xor
mov
lds
jle
push
adc
data16
and
pushf
inc
lods
test
rolb
sub
fwait
jge
shlb
rclb
shrl
ror
mov
jo
int3
ss
sub
rcll
int3
adc
xchg
pusha
iret
jecxz
sarl
xchg
and
xor
in
inc
mov
inc
mov
mov
popf
insb
aas
sub
mov
or
cmpl
fadds
mov
addr16
push
shll
in
lret
xlat
mul
mov
inc
or
aas
or
jmp
rolb
rolb
mov
ds
mov
dec
inc
ror
pusha
dec
insb
mov
sarl
int
pop
or
push
in
hlt
xor
adc
sbb
dec
inc
fcomps
jecxz
jle
decl
or
sahf
or
or
xchg
test
sub
push
orb
xchg
popf
dec
inc
inc
pop
inc
ret
jnp
push
std
sub
pop
xchg
jb
mov
leave
xor
sub
mov
jnp
aad
add
adc
rol
or
les
cmp
jmp
lods
mov
sbb
add
push
leave
insl
enter
pop
push
and
inc
xchg
pop
mov
insl
ja
es
sub
jbe
xor
dec
inc
test
test
aas
rorb
addb
pop
jp
mov
dec
mov
dec
xchg
cmpsl
inc
xchg
imul
mov
test
cmc
pop
mov
mov
jns
cmp
cld
popf
shrb
gs
xchg
xor
sbb
push
mov
daa
stc
jnp
add
or
inc
test
cmp
sub
ret
cmp
fcomi
jecxz
rcr
bound
mov
xchg
ficoml
bound
dec
jbe
insb
jb
xor
imull
lret
cld
xor
mov
mov
in
cmc
or
fldenv
push
sub
mov
push
dec
mov
adcb
ret
inc
push
rorl
add
and
into
aaa
mov
inc
insl
test
adc
fldenv
in
movsl
fdiv
cmp
out
shll
inc
movsb
dec
jge
dec
or
cli
push
mov
lds
es
sbb
and
das
aam
or
lahf
add
insl
sahf
mov
lret
into
xchg
pop
fldenv
arpl
incb
jbe
insb
or
sbb
push
dec
cwtl
push
sbb
dec
jnp
loope
inc
cmp
add
mov
dec
ds
jnp
sarb
inc
and
jecxz
imulb
xchg
push
cltd
mov
icebp
and
ficoms
or
daa
pop
repz
fiaddl
ret
rolb
pop
inc
cwtl
cmp
jns
aam
inc
call
fiaddl
lods
pushf
data16
loop
mov
xchg
xor
mov
or
es
jb
push
int3
and
fnstcw
in
mov
mov
sahf
push
xchg
fst
and
inc
ja
lds
sbb
push
daa
add
ds
and
enter
pop
in
orl
mov
iret
cmp
add
hlt
dec
mov
movsb
mov
and
lret
in
sbb
mov
xchg
repnz
test
bound
insb
mov
les
loope
mov
dec
add
jne
roll
bnd
loope
mov
outsb
mov
sub
inc
adc
or
adc
mov
or
popf
adc
pop
fmuls
lcall
movb
sbb
ret
aad
add
pop
loopne
adc
cmp
or
mov
add
mov
lock
mov
fldenv
adc
dec
dec
sahf
dec
pop
cld
sbb
scas
aas
mov
daa
add
pminsw
fs
or
mov
loope
pop
and
mov
add
pop
test
pop
lahf
test
and
cld
mov
jmp
nop
pop
scas
jb
xor
pushf
sub
add
or
data16
ss
loope
mov
iret
or
cmp
pop
int3
and
pop
mov
cltd
push
in
xor
js
decb
or
push
or
mov
adc
jle
pop
inc
and
sahf
mov
sbb
mov
in
mov
jp
leave
xor
or
outsl
mov
pop
rcll
add
sarb
mov
out
cld
jnp
iret
gs
jge
inc
shll
je
or
jg
cmp
or
mov
sub
sbb
leave
aas
xchg
hlt
repz
repnz
cmp
int
push
and
add
repnz
mov
movsw
pop
call
jbe
aas
adc
insb
les
fwait
das
in
push
pop
jecxz
mov
xchg
gs
movsl
xchg
les
mov
sbbb
sbb
lods
imulb
fisubs
cld
sbb
das
repnz
cmp
and
cmp
add
adc
jge
popa
adc
push
out
inc
mov
or
insl
int
lods
imul
mov
mov
dec
leave
repnz
xchg
push
enter
mov
add
std
popa
mov
subl
cmp
ret
das
jmp
sub
in
mov
sbb
mov
aam
movsl
rcrb
inc
mov
xchg
mov
lods
jae
inc
cmpsb
arpl
pop
bound
push
out
push
mov
inc
je
mov
bound
sbb
cltd
mov
dec
pop
xchg
mov
sub
fbld
cmc
mov
push
fadds
mull
xchg
je
out
xchg
sub
jl
push
mov
sbb
sbb
int
jl
adc
or
jno
insl
add
push
pop
xchg
push
aam
popf
lret
cmpsb
int
cmc
test
push
pop
leave
pushf
hlt
emms
jle
bound
jle
and
ret
cmp
push
jmp
fsubrl
lea
push
dec
icebp
pop
dec
cmp
loope
leave
and
or
roll
adc
mul
lods
imul
shl
pop
push
fs
xchg
rclb
rcll
sti
in
in
out
into
pop
jle
add
insl
arpl
jle
mov
push
movsb
mov
mov
xchg
jmp
and
cmp
adc
insb
es
std
fcoms
sbb
loope
jno
fildl
add
jb
mov
cmp
daa
lcall
or
jno
sub
pushf
xor
sahf
mov
mov
cmpsl
stc
outsb
movsl
push
shl
lds
push
mov
aam
js
pop
stos
aam
or
push
mov
in
dec
cmpl
std
cmp
adc
xchg
inc
jg
repz
mov
mov
jno
je
mov
push
stos
stos
xor
dec
stos
cmp
adc
xchg
dec
leave
inc
js
push
pop
xchg
pop
xorb
xchg
in
lea
mov
outsb
rcrl
mov
mov
cs
and
iret
movsb
pop
repnz
les
stos
xor
mull
repz
cli
add
test
popa
test
insb
rorb
lret
jbe
and
jnp
insl
push
push
popf
inc
xchg
inc
push
mov
int3
pop
adc
je
std
adc
enter
ljmp
in
pop
lock
inc
xchg
out
and
aam
loop
inc
sub
mov
xor
mov
shl
or
jno
pusha
lcall
mov
sub
jl
pop
ret
push
stc
and
sbb
pushf
jbe
push
mov
sbb
or
inc
sub
aad
divl
adc
repnz
loop
leave
xlat
lret
ljmp
dec
sub
push
mov
dec
test
int3
test
cmpsb
inc
bound
inc
imul
pop
outsl
mov
mov
aam
lea
bound
add
inc
sbb
aad
arpl
mov
fnstcw
cs
xchg
push
xlat
add
or
lea
inc
xlat
in
jle
test
inc
jl
insl
fwait
dec
inc
jmp
sub
push
movsl
dec
cs
aaa
jmp
aam
add
bnd
loopne
sub
ljmp
jg
adcb
jge
jg
rcll
pop
ja
insb
int3
sub
add
push
inc
scas
jns
mov
jo
adc
call
sub
xchg
sbb
pop
scas
jo
mov
jno
pop
push
out
ret
add
dec
mov
sar
loope
mov
cmp
shll
pop
out
xchg
push
pushf
dec
pop
into
aas
aad
mov
jns
movsb
dec
mov
push
sbb
and
stos
adc
xchg
sub
xchg
mov
inc
mov
xor
push
in
icebp
add
cmc
or
adc
cli
adc
cmp
test
lock
or
aam
jg
inc
lea
mov
ja
movsb
mov
outsb
pusha
insl
pop
in
or
jb
xor
into
sbb
push
cli
incb
in
mov
ss
add
fdiv
pop
es
cmp
sahf
int3
xor
cmp
andb
and
or
add
mov
outsb
pop
ret
jmp
lods
aam
inc
out
xor
or
repz
jns
lds
mov
sahf
mov
loope
xor
xor
xlat
aas
data16
jno
sbb
add
push
inc
mov
rcll
rcl
std
jmp
orl
mov
mov
cmp
les
imul
sub
add
inc
pop
push
mov
mov
jl
lods
cli
sub
mov
js
or
add
xchg
pusha
out
cs
aaa
loope
adc
push
mov
pop
fcoml
popa
or
lods
xor
mov
bound
cmp
dec
in
mov
and
fnstsw
jne
pop
fcmovbe
push
or
pop
xchg
imul
and
add
dec
mov
std
xchg
into
aas
enter
rorb
sbb
mov
int3
mov
push
lcall
sub
pop
mov
and
xor
jl
cmpsb
jl
push
cmpb
mov
sub
insl
mov
jb
pop
jge
js
cmp
cmpsb
rcrb
fadd
lock
inc
andl
xchg
lret
out
dec
mov
repnz
inc
sbb
pop
push
fst
push
scas
add
scas
ja
xchg
inc
mov
bound
das
mulb
dec
cmc
sub
jle
andl
jecxz
es
sahf
pushf
shrb
clc
inc
fstps
daa
pop
push
negl
aas
xor
and
fistpll
stos
repz
add
pop
iret
xor
add
jo
push
xchg
outsb
cmp
decb
rcl
or
push
push
and
pushf
xor
and
test
enter
sbb
int
sub
out
stc
xor
cmc
ds
adc
sub
shrb
enter
jnp,pn
inc
add
fsubrs
jb
mov
cmc
movsb
lods
outsb
mov
or
mov
lds
rclb
push
cmp
sub
fidivrs
call
mov
jb
out
dec
mulb
jo
dec
stos
add
std
adcl
imulb
mov
insl
popf
or
push
ret
sbb
xorb
pop
pushf
jg
inc
pop
cli
push
mov
jae
sarb
or
maskmovq
adc
lahf
pushf
ds
rorl
aad
outsb
stos
stc
sarl
lds
in
pushf
mov
and
outsl
inc
inc
jle
mov
js
inc
cmp
xchg
inc
mov
jb
mov
in
sub
xlat
cs
fisttpll
sti
into
jno
add
fcomps
movsb
fisubs
lret
or
das
pop
sbb
sarl
jmp
hlt
xor
in
jb
arpl
scas
dec
fwait
lcall
imul
sbb
lds
aad
fwait
bound
cs
dec
adcl
sub
ret
lea
add
push
mov
push
lods
insl
mov
inc
mov
push
mov
sahf
lcall
mov
jl
pop
dec
mov
cltd
das
xchg
adc
jae
call
push
test
or
mov
cmp
mov
jns
xchg
push
xlat
jl
scas
push
decb
fistpll
fdivl
add
in
daa
test
and
or
sub
sub
xchg
cmpsl
stos
data16
jmp
adc
sbb
inc
dec
rclb
sbb
in
cmpsl
loop
lret
incb
movsb
dec
xchg
std
xlat
enter
sub
daa
or
es
sarb
shlb
mov
xor
out
pop
in
into
jmp
xlat
push
stos
dec
mov
mov
ret
bound
insb
push
mov
mov
and
add
mov
mov
sub
and
cmp
add
mov
pop
sub
sbb
xlat
and
xor
shlb
push
ret
dec
movsb
aas
loop
dec
mov
dec
fwait
jbe
mov
mov
aam
mov
cmp
mov
mov
mov
xchg
ljmp
or
movsl
add
test
aas
ret
cmp
js
push
iret
push
mov
in
lods
add
and
dec
pop
cmpsl
outsl
jp
mov
mov
or
add
and
das
outsl
in
xor
pop
movsb
stos
mov
xor
jb
jae
ficoml
orb
push
psubusb
xor
rcrl
adc
sub
lret
cmp
xlat
push
cld
push
sahf
inc
mov
into
pop
aam
mov
or
xor
cwtl
cmp
xlat
mov
movsl
pop
cltd
inc
int3
out
stos
dec
mov
push
cld
push
mov
clc
shll
or
xor
adc
jg
jnp
ret
lods
and
sbb
cs
rcrb
incb
push
sub
add
test
push
push
mov
and
dec
xchg
mov
popa
ja
or
mov
xchg
jb
xchg
popa
adc
insb
lods
inc
test
cmpsb
dec
leave
sbb
inc
pushf
jle
repz
mov
mov
fidivs
ret
xchg
shll
hlt
push
cmpsb
iret
sub
xor
fistl
push
mov
popf
mov
push
push
dec
mov
adc
pop
xchg
xchg
mov
or
pop
sub
aaa
ds
mov
pop
sbb
jb
in
sbb
mov
repnz
ds
sbb
lar
int3
lret
push
mov
fildll
rorb
shll
xchg
inc
mov
or
dec
hlt
push
add
inc
mov
nop
mov
std
jbe
insl
dec
sahf
push
imul
pop
addl
test
sti
dec
xchg
addr16
and
mov
ss
xchg
jbe
xchg
cmpsb
ret
andl
xchg
aad
mov
and
sub
sub
push
daa
xchg
vpmacsswd
enter
dec
movsl
out
fiaddl
dec
adc
fs
cmp
lods
jae
lds
or
jns
push
in
fistps
cmp
and
outsl
fistl
test
cmp
add
jns
xchg
jnp
inc
dec
loop
sbb
call
push
dec
lods
pop
adc
add
and
insb
pop
sahf
fidivrs
shl
and
loopne
sub
jg
inc
adc
pop
popa
lret
dec
mov
add
fisubrs
subl
shrl
adc
mov
dec
fs
xor
inc
inc
adc
ret
shll
add
jmp
int3
les
les
int
test
pushf
push
xchg
push
push
pop
mov
pop
stos
sub
mov
je
cmp
or
sub
sub
sarl
ljmp
inc
xchg
mov
pop
rorl
mov
dec
cwtl
push
cli
and
mov
fsts
jle
mov
add
shlb
lods
pop
data16
add
andb
jns
ja
jno
lea
pusha
lods
pop
add
loopne
adc
mov
int
pop
pushf
loop
repz
hlt
movd
jmp
cwtl
push
rcrb
sub
rcl
out
movsl
stc
jmp
xor
mov
fldenv
and
add
shlb
test
xor
test
loope
jl
cmpsl
ljmp
push
jnp
jno
jne
lds
outsb
xchg
shlb
sbb
sbb
or
int3
add
stc
ret
in
cmp
mov
mov
lret
lds
subl
rolb
sarl
loop
push
in
mov
adc
mov
dec
mov
mov
xchg
fdivr
in
dec
xor
or
std
in
cmpl
cmpsb
pop
mov
push
mov
sub
lret
repz
loope
or
test
adc
fisubs
hlt
inc
mov
lcall
mov
hlt
incl
ret
xor
addl
comiss
mov
sbb
add
shlb
shl
sub
insl
add
adc
xchg
jb
lock
pop
mov
data16
cmp
ds
inc
mov
test
push
mov
loope
sbbb
repz
xchg
nop
jl
jmp
in
sub
push
pusha
clc
imul
push
ds
testb
int3
dec
shll
stos
jno
xlat
adc
aam
fldl
jecxz
cmp
insb
movsl
and
ja
mov
out
push
mov
push
rcll
stos
dec
out
jo
str
jle
in
js
clc
test
lea
jecxz
fldl
pop
dec
mov
mov
sub
lds
clc
and
sti
add
sub
xchg
decb
fildl
icebp
cmp
adc
adc
andb
scas
dec
icebp
xchg
xor
repz
add
xchg
add
stc
jo
xor
push
cli
jns
aad
cmp
xor
xlat
jns
pop
movsl
xchg
xlat
jo
sbb
or
cs
cmp
je
add
sbb
ret
stos
roll
dec
xchg
or
out
push
adcb
cmc
sbb
in
or
push
sarb
lahf
stos
add
xor
push
inc
test
fmuls
or
repz
xor
fucomp
or
push
jb
addb
inc
pop
sub
scas
movsb
lods
dec
out
ret
or
test
shrl
test
or
xor
lea
push
cwtl
movb
push
loop
jp
test
int3
or
fwait
lcall
pop
xchg
sub
aam
mov
push
ja
cmpsl
xchg
andl
mov
popa
out
dec
jns
push
fdivrs
popa
bound
jg
jg
lock
mov
or
ljmp
lea
or
fs
or
imul
push
add
lcall
lds
lcall
xor
psrld
mov
hlt
mov
mov
outsl
orb
stc
sub
insb
shll
pop
mov
insb
xchg
shl
add
cld
xor
and
push
lods
jno
outsl
rcr
hlt
push
loope
dec
cli
adc
push
mov
xchg
scas
imul
pusha
adcb
sbb
popf
inc
jle
add
jle
or
jno
lods
lods
lcall
test
lods
dec
test
movsb
lds
testl
xchg
imul
lahf
jg
les
cmpb
adc
gs
iret
cmp
or
jle
mov
stos
dec
dec
dec
stos
jp
mov
cmp
pop
mov
aaa
or
add
pushf
aas
enter
or
not
pop
xorl
and
adc
stc
in
jmp
into
xchg
in
push
clc
xor
and
lret
les
sub
fsubrl
sub
mov
inc
lcall
mov
mov
adc
mov
jns
xor
into
add
jge
in
sub
and
negl
add
push
cli
cld
add
mov
push
subb
sbb
sbb
scas
dec
and
mov
cli
test
dec
lds
jle
dec
lcall
jo
inc
fildl
lock
lahf
adc
adc
out
sahf
adc
push
mov
jecxz
adc
dec
and
push
jge
cmpsl
cmpsb
fs
mov
imul
outsl
js
xor
cli
add
lret
xchg
or
and
mov
fcoms
jbe
cmp
fs
shrl
lahf
cmp
sbb
sub
or
dec
call
mov
and
add
xor
jge
and
mov
in
pop
mov
and
ret
rcrb
cmp
push
and
fiadds
test
cltd
dec
scas
insb
mov
jnp
ret
loopne
cmp
xchg
fildl
jb
lret
sbb
es
loopne
jmp
mov
inc
outsb
rcrl
jb
push
out
in
jge
xchg
pop
lods
je
bound
ret
bound
cli
ficompl
mov
pop
jns
mov
bndstx
mov
jno
xchg
test
pop
push
mov
adcl
pop
jo
out
sbb
add
mov
xor
jns
push
cmpl
jne
insb
or
mov
insb
enter
fisubl
cld
mov
mov
outsl
dec
stc
clc
stc
cltd
pop
dec
xchg
cld
mov
push
mov
mov
xchg
push
scas
jo
pop
fs
cmp
push
lock
push
sub
sahf
jns
ror
orl
mov
xchg
bound
push
pop
mov
fucomip
dec
cmp
ds
cmp
dec
jl
push
push
shl
or
xchg
shrl
pop
outsl
push
icebp
mov
mov
or
pushf
and
call
fcmovnbe
dec
or
aad
xchg
in
mov
add
iret
mov
incl
into
xchg
xor
jge
sub
ljmp
movsl
cltd
lahf
jp
push
imul
jbe
dec
xlat
pusha
outsl
push
pop
dec
clc
or
inc
pop
cmp
movsl
addr16
add
pop
test
fisttpll
test
fbstp
fmull
fistps
cmpb
mov
dec
stc
cmpl
rclb
push
dec
ret
cmpsl
dec
xchg
push
outsb
pushf
ss
aaa
cmpsl
movsl
fcomp
xchg
or
sub
lods
xchg
hlt
in
xor
or
pop
pop
mov
push
jge
dec
icebp
sbb
xchg
jnp
nop
mov
shll
out
and
adc
pop
testb
mov
mov
iret
lea
pop
outsl
in
sub
arpl
push
lret
or
pop
fsubrs
mov
cmc
jg
fsubs
loop
mov
push
loopne
ss
adc
pop
std
add
psrlw
negl
int
jg
add
add
pushf
push
sti
ja
inc
jge
in
mov
pop
cmpsb
mov
inc
jnp
adc
stc
inc
or
or
idivl
add
mov
and
sub
mov
jle
add
cmc
rsm
es
clc
and
xchg
or
dec
push
lahf
mov
xchg
js
xchg
or
lock
dec
adc
sub
lret
popa
push
mov
push
xchg
jle
lea
cmp
es
pop
xchg
clc
mov
test
mov
or
das
jne
movsb
movsb
sbbb
ret
sbb
repz
sub
mov
sarb
xor
and
out
adc
dec
movsl
jg
sbbb
icebp
cmpsl
xchg
repnz
jnp
mov
cmp
insb
fldl
xchg
mov
cwtl
mov
test
jg
repz
pop
outsl
gs
jge
outsl
or
xor
addb
push
push
push
mov
jbe
sbb
mov
add
imul
sbb
mov
movsb
mov
dec
add
mov
pop
sub
pusha
out
sar
das
sub
jl
mov
pop
cmp
orb
add
les
pop
sbb
notb
addb
iret
push
push
pop
mov
xchg
push
std
lret
lahf
lahf
pop
inc
cmp
xor
and
jne
daa
fldenv
mov
or
xchg
cmp
push
pop
cmp
mov
pop
popa
ds
mov
add
fimuls
dec
mov
pop
shll
pushf
pop
xchg
jge
push
jmp
mov
sbb
mov
lea
xlat
adc
xchg
sbbb
add
mov
in
mov
aas
shrl
push
aam
push
sub
jmp
xchg
pop
and
pusha
lods
sub
inc
enter
int
test
sbb
lods
push
xorb
leave
test
inc
in
in
fsubrl
es
adc
push
out
idivl
stc
or
dec
in
dec
hlt
divb
jecxz
push
dec
cld
xchg
pusha
jle
pusha
mov
insl
jo
inc
and
adcb
in
hlt
add
or
imul
xor
sub
mov
icebp
or
scas
adc
push
aaa
xchg
cmp
mov
call
movsb
sub
cli
mov
add
add
lock
xchg
movsl
inc
test
mov
push
adc
jo
push
enter
dec
lods
add
inc
icebp
or
jp
loopne
sbb
or
pop
and
jg
je
incl
jo
xor
cltd
inc
mov
xlat
cmc
cli
push
adc
clc
add
xchg
pop
xor
sti
or
sbb
testl
push
das
outsl
add
sar
xor
out
ja
push
ds
pop
mov
add
inc
push
mov
ficomps
sub
insb
shrl
sbbb
add
imul
test
sbb
scas
jl
adc
mov
test
out
and
or
les
add
cmp
add
and
sbb
shll
sti
and
mov
or
mov
outsb
inc
fisubl
add
or
adc
jl
test
das
xchg
cmp
inc
lea
popa
inc
mov
icebp
insb
stos
enter
addr16
into
jb
dec
loopne
mov
mov
insl
add
shll
dec
or
cmp
add
and
sbb
pop
mov
lahf
hlt
call
js
cmp
stos
xchg
inc
lods
outsb
xor
inc
stc
push
call
mov
lea
mov
push
xchg
push
xorb
or
push
pop
fnstsw
xor
iret
nop
lock
repnz
mull
ljmp
add
push
in
das
inc
popf
add
pop
sti
into
pushf
cmp
mov
xor
das
idiv
xchg
and
dec
popa
xchg
ss
enter
xchg
pop
xor
mov
cltd
addr16
sub
mov
add
lret
inc
adc
sbb
adc
aas
lock
nop
xor
ljmp
bound
imul
enter
stc
sub
mov
push
js
pushf
push
dec
pop
loopne
insl
inc
jle
mov
es
add
add
movsl
aaa
push
int
enter
loope
xchg
pop
jle
imull
lds
es
add
or
pop
jle
add
js
aad
std
inc
rol
jp
cmp
adc
test
cs
jp
pop
notl
lahf
xchg
adc
int
ja
jl
icebp
inc
adc
std
xor
cmp
fiaddl
shlb
pop
ret
cli
jl
leave
out
add
sbb
xchg
popa
jle
xor
jae
lret
sbb
or
lahf
popa
mov
dec
movsb
and
or
aad
daa
or
out
or
add
ds
sahf
or
imul
adc
jge
shrb
test
nop
movsb
adc
sbb
outsl
test
sub
add
or
sbb
push
pop
pop
xchg
cmc
sub
in
push
mov
cmp
cmpsl
mov
rolb
ret
pop
arpl
mov
pop
cmpsb
mov
cmc
inc
push
pop
ljmp
mov
push
incl
mov
daa
es
mov
push
les
jmp
xlat
sub
and
scas
pop
scas
push
std
xor
adc
pop
test
in
daa
movb
sahf
sarb
push
push
mov
jb,pt
jp
pop
int3
andl
pop
inc
inc
push
fcomip
shrb
test
sbb
jecxz
lcall
inc
scas
ja
movsbl
ret
sbb
repz
pop
outsl
push
mov
pusha
pop
stc
add
mov
xor
and
icebp
hlt
xor
add
call
movsl
ljmp
scas
wbinvd
lock
cli
push
pop
jp
fisubl
push
stos
loop
std
jg
cmp
mov
leave
cwtl
jg
int3
adc
or
imul
fcmovne
sbb
lods
mov
add
aaa
je
push
jl
lret
xor
cmp
test
jb
add
lret
and
mov
add
lcall
aam
int
jnp
or
call
jp
mov
lcall
cmc
pop
int
int3
jge
xchg
lcall
mov
in
mov
mov
aam
xchg
callw
sysenter
add
pop
rcrl
sti
rol
mov
push
leave
jnp
rol
xor
cpuid
lret
scas
cld
pop
cmp
jl
jo
sub
add
mov
mov
fildll
mov
jae
fnstcw
cld
daa
pop
fidivrl
sbb
in
ja
insb
into
inc
in
mov
xchg
xchg
mov
or
je,pt
repz
pop
push
in
mov
lret
jmp
lret
xor
test
adc
pop
mov
jg
movb
addr16
lcall
ja
inc
jb
test
or
xchg
xor
xchg
and
sbb
cmp
mov
fsubl
test
cmpsb
rol
mov
fidivs
and
sub
cmp
notl
jmp
lods
xor
bswap
or
jp
jge
jl
and
pop
mov
push
subl
jge
push
or
pop
scas
push
fisttps
scas
test
mov
loop
sti
aaa
int
int
lahf
add
adc
fiadds
mov
inc
mov
cli
dec
ret
or
notb
dec
cmpsl
cmpsb
add
push
int
lret
inc
fadds
aad
push
inc
mov
int3
dec
lock
xor
lcall
jge
je
mov
cmp
test
stos
out
jo
leave
aas
mov
std
xor
push
fdivl
aam
stc
sub
les
pop
pop
inc
jnp
mov
lea
std
lods
nop
out
mov
mov
and
pop
mov
or
pushf
ljmp
adc
leave
sub
add
mov
add
and
pop
adc
sub
in
call
mov
inc
mov
cs
jp
fiadds
push
test
adc
outsl
lock
out
hlt
shll
addr16
push
jnp
pop
nop
sahf
xor
cmp
mov
push
dec
lret
cmp
inc
push
in
out
mov
adc
mov
lahf
imul
data16
mov
decb
push
test
push
scas
into
xchg
dec
sub
fwait
xchg
xchg
das
xchg
fistpll
sub
jp
stos
inc
mov
in
pop
neg
or
or
in
fsubl
icebp
cmpb
cld
and
or
shrb
orl
or
push
inc
inc
hlt
pop
mov
dec
mov
lds
fistps
cmpb
lock
cmp
rorb
xlat
xlat
fistl
aad
push
rcl
mov
push
fisubrs
xchg
inc
xchg
xor
mov
shrb
pushf
push
fbld
movsb
inc
mov
stos
push
fcoms
cmp
jle
in
add
jo
dec
pop
sbb
adc
pop
jle
pop
test
jb
ret
fisttps
cli
and
cmp
sar
stos
ljmp
movsl
jne
fimull
in
mov
cmp
aas
ret
sbbb
inc
scas
mov
mov
test
out
push
pop
addb
xor
mov
outsl
nop
or
inc
or
sub
push
and
lds
xor
imul
cmc
and
lret
add
aaa
mov
sub
mov
adc
cmp
pop
jmp
jge
or
inc
pusha
popf
sub
daa
cmc
and
insl
sbb
push
mov
cli
aaa
les
fsubr
pop
nop
jno
int
xchg
xor
pop
mov
and
loope
xor
adc
add
mov
hlt
call
dec
cltd
push
out
jns
idivl
xchg
les
js
or
cmp
clts
int
aas
lret
add
xchg
scas
sub
leave
pop
xor
cmp
dec
lds
xchg
cli
adc
dec
mov
dec
mov
cltd
stos
loop
or
mov
and
stos
push
out
or
jp
icebp
lret
xorb
out
mov
lea
rcrb
dec
lds
out
lahf
mov
adc
add
or
jp
je
jl
push
cltd
add
and
and
or
pop
fcomip
xchg
inc
fwait
push
ja
jne
pop
data16
fsqrt
std
in
inc
jno
dec
in
movsb
imul
add
jnp
add
mov
insl
mov
dec
cld
or
test
cli
jl
push
lock
jae
sub
push
iret
add
jns
rorb
pushf
mov
aaa
andb
sub
and
aaa
in
insb
xchg
jns
pop
les
mov
outsb
dec
sub
adc
adc
jbe,pt
test
sbb
dec
sub
sbbb
cmp
out
and
test
mov
push
mov
jmp
cmpsb
pop
jbe
push
dec
xchg
popf
addr16
outsl
ja
pop
pop
mov
dec
mov
fstpt
push
std
lahf
mov
mov
push
lcall
ffreep
jecxz
mov
repnz
jae
aad
jnp
sub
mov
or
sbb
add
add
out
pop
fldt
xchg
sub
arpl
jbe
outsb
pusha
push
fistpl
aaa
jbe
adc
cs
and
fisttpl
in
pop
push
int3
out
sbb
pushf
inc
sar
sbb
in
adc
sub
jg
mov
popf
sbb
idivb
xor
in
shlb
andb
nop
insb
scas
sbb
xchg
mov
adc
pushf
insb
push
and
icebp
movsb
add
sbb
outsb
cmp
gs
xchg
add
lcall
mov
dec
into
movsl
add
fstps
movsl
sahf
jl
fidivl
fidivs
xchg
jnp
mov
popf
pop
mov
iret
imul
ret
in
cli
sbb
das
cmpsl
and
sub
out
roll
mov
fiadds
hlt
sub
and
and
adc
cli
add
rorl
data16
inc
fadds
dec
or
inc
dec
movsb
dec
ljmp
cmp
sub
aad
pusha
mov
xor
pmullw
outsb
sbb
leave
pop
jmp
inc
xchg
lret
fdivr
push
in
and
adc
pop
in
adc
add
mov
xor
mov
cmp
icebp
xor
ss
ja
jno
push
lods
and
mov
pop
mov
lds
shr
aas
jg
dec
sub
add
call
stos
out
movsb
adc
mov
push
mov
xchg
aam
mov
and
push
ret
cmp
add
and
push
push
dec
aam
push
dec
lds
xchg
xor
or
xchg
enter
call
push
lock
jl
xchg
in
xchg
or
cmp
add
cmpsb
ja
add
jp
call
ret
and
xchg
and
push
pop
mov
mov
pushl
pop
add
shll
idivl
xor
pop
xor
scas
js
cmp
les
and
sbb
daa
test
in
aas
dec
ds
or
xor
push
fdivrs
dec
mov
lods
adc
dec
xchg
xor
jle
pop
out
enter
mov
mov
xchg
shlb
pusha
lcall
sbb
sub
arpl
inc
andl
test
daa
cmp
test
cltd
cli
inc
mov
mov
push
xchg
rorb
adc
mov
dec
cmpsl
adc
inc
jbe
sarl
addr16
push
mov
pop
addl
jnp
or
sti
jne
add
and
inc
rorl
dec
pop
subb
sbb
cltd
sub
jbe
sub
in
data16
mov
jae
into
pop
adc
xchg
jb
pop
jb
ds
mov
sbb
in
rorb
clc
and
add
iret
gs
sub
aaa
out
dec
cmpsb
adc
mov
adcb
cmp
cmp
mov
cltd
pop
sub
out
test
xchg
pop
outsb
push
xor
dec
inc
push
movsl
testb
ds
mov
push
push
lods
and
cli
push
cmp
dec
rcr
sbb
into
shlb
sbb
add
mov
cwtl
mov
dec
int3
cmpb
add
popa
xchg
pop
xchg
jno
add
inc
arpl
mov
leave
mov
xor
outsb
pusha
stos
adc
sti
dec
in
adc
adc
rcrl
sub
daa
data16
and
adc
movsb
inc
lds
daa
loope
rcl
or
mov
push
push
pop
cwtl
mov
cli
dec
xchg
pop
bound
call
out
ret
jns
icebp
cmc
cmp
xor
lock
and
or
std
stc
jns
adc
sbb
loopne
xor
out
lods
xor
dec
and
scas
sub
xchg
shlb
jge
pop
pop
xchg
fimuls
into
fs
inc
and
loopne
mov
cmp
jne
mov
xorl
xor
testb
xchg
xor
sahf
dec
xorl
popa
sbb
sbb
js
outsl
fiadds
rep
mov
cmp
jp
mov
dec
jg
inc
push
xchg
push
pop
mov
add
jae
adc
fisubl
push
nop
inc
aad
rcrl
xlat
ss
addr16
mov
add
pop
mov
fsts
out
push
sti
icebp
add
in
mov
insb
iret
inc
lea
mov
xor
xor
pop
mov
jl
cmp
pop
rolb
icebp
and
mov
in
cmp
lods
pop
push
std
or
aas
sti
push
fnstsw
dec
loope
adc
sub
adc
dec
repz
clc
inc
xor
add
xor
and
xor
push
and
dec
mov
inc
mov
push
nop
jbe
pop
adc
xchg
loopne
xor
test
mov
pop
xchg
or
and
sub
dec
mov
loop
pop
mov
scas
xchg
das
int3
and
into
sub
sahf
and
xorl
cmp
add
mov
stc
mov
xchg
shrl
pop
xchg
inc
xchg
inc
movsl
or
mov
ret
mov
mov
iret
lods
pop
das
cltd
or
add
pop
or
sub
movsl
loope
fiaddl
sub
push
popa
test
cmp
cmp
sub
sub
fdivr
or
and
or
add
dec
pop
mov
repz
popa
mov
inc
adc
add
addl
sbb
add
sarb
mov
ret
cmc
lret
xchg
movsb
ljmp
xchg
push
jmp
sub
pushf
dec
andb
jnp
dec
mov
in
in
sahf
neg
test
xchg
xchg
mov
push
pop
repz
add
lahf
lret
iret
sub
test
xchg
sahf
or
aas
inc
push
xor
scas
xchg
loopne
sahf
sub
mov
dec
mov
mov
mov
jl
inc
fnstcw
mov
sahf
jecxz
enter
mov
fisubl
decb
stos
pop
and
addl
and
jne
xor
push
dec
icebp
mov
fimuls
xlat
cmp
adc
clc
scas
mov
add
rcll
sub
dec
loopne
roll
dec
inc
xor
mov
pushl
sbb
jge
xchg
js
mov
dec
scas
daa
mov
adc
adc
xorl
dec
sarb
and
or
in
sbb
add
sti
fidivs
lds
xchg
mov
imul
add
insb
roll
xlat
mov
adc
cmp
mul
daa
pop
mov
xor
sbb
sbb
dec
cmp
pop
aaa
or
scas
jp
out
cli
pop
hlt
lea
push
repz
mov
insl
fwait
push
or
jp
sti
mov
push
lds
sbb
stc
ljmp
cmpb
stos
aam
das
js
adc
aas
aad
pushf
roll
imull
and
fwait
repnz
rorb
movsb
rorb
fisttpl
jl
iret
inc
ljmp
rolb
mov
cld
mov
ficoms
mov
sub
pop
and
sub
or
filds
add
int
sub
cltd
mov
add
mov
scas
push
push
sbb
sbb
mov
add
movsb
aam
inc
scas
js
or
orl
mov
jecxz
mov
and
inc
or
lods
cld
ljmp
pop
mov
xchg
pop
jl
movsb
cmpb
out
mov
jbe
or
stc
mov
cmp
xor
jl
xor
push
add
int3
lods
xor
push
hlt
fnstenv
inc
loopne
pop
pusha
ljmp
aas
into
dec
std
sub
shlb
cmc
mov
loopne
pop
das
inc
jae
cmp
cmpsb
pushf
shlb
xchg
cltd
repz
or
inc
sub
adc
shll
dec
mov
inc
cmp
call
adc
adc
int3
mov
push
pusha
and
mov
cmpsb
xchg
inc
loop
cmc
push
adc
or
dec
dec
and
adc
cmp
lea
dec
scas
pusha
test
mov
adc
rcl
lds
in
mov
pop
or
mov
enter
and
fsubs
and
add
mov
mov
push
hlt
sti
fdecstp
iret
push
ror
ret
mov
cli
fidivrl
outsb
push
movsl
scas
addb
out
mov
nop
stos
dec
sbb
in
add
adc
les
mov
clc
popf
lods
pushf
or
jge
mov
cmc
xchg
mov
imul
jno
sbb
nop
xlat
pop
jle
sub
jns
insb
add
shll
sub
movsl
inc
stc
fsubrl
cld
jmp
push
and
enter
xor
sbb
scas
jo
xchg
lret
cld
add
mov
pop
xchg
pop
lea
or
into
jns
cmp
repz
push
pop
cmp
pushf
pop
xchg
sti
cmp
rorl
push
pop
fdivs
ficompl
mov
in
test
bound
sub
std
mov
shlb
push
pop
fadd
fidivs
mov
push
popa
cli
or
jmp
imul
lea
and
mov
sub
aas
jnp
xchg
rclb
ljmp
jo
cmpsb
sub
xor
cmp
stc
imul
aam
shlb
jl
repz
subb
push
subl
ljmp
es
and
mov
cs
and
jle
or
mov
sarl
out
aaa
add
xchg
iret
pop
rcll
in
add
adc
xchg
out
insl
adc
fstpl
popf
into
lock
push
sbb
mov
xor
or
mov
adc
inc
push
and
outsl
leave
xchg
or
mov
dec
jmp
std
mov
cmpsl
jnp
loopne
jne
sub
cmpsl
dec
xchg
cwtl
sarb
out
loop
sub
xchg
inc
pushf
fsubrp
dec
mov
shr
push
xchg
push
aam
dec
or
cltd
in
lcall
hlt
mov
ficomps
jbe
idivl
cmpsl
stos
xor
and
inc
lea
repz
mov
stos
xchg
je
jbe
sti
pushf
mov
xchg
dec
xchg
push
fs
xchg
das
fsubs
and
xchg
cmpl
lcall
int3
imul
and
int
sti
mov
xchg
lahf
xchg
mov
inc
mov
and
cs
xchg
jg
or
mov
movsl
es
subb
inc
add
add
push
in
popf
mov
mov
into
add
and
stos
cmp
xor
xchg
movsl
imul
enter
jp
cmc
cwtl
push
inc
jmp
mov
jmp
sbb
sbb
inc
add
push
loop
cmpsl
jl
imul
fcoms
adc
xchg
mulps
repz
mov
fwait
ret
das
pop
or
xor
test
and
insb
in
lret
xchg
cs
dec
jb
std
push
push
rcrl
cmpsl
push
mov
movsb
sbb
cmpsl
lcall
mov
daa
mov
add
scas
ret
push
ds
xor
test
mov
push
rcrl
or
jbe
outsb
lret
cmp
repz
fwait
push
rcrb
insl
xchg
std
loopne
inc
shll
add
test
push
seto
int3
sbb
sar
ficoml
cmp
push
inc
adc
test
add
cmp
bswap
aaa
and
icebp
xchg
and
imul
loopne
lahf
sbb
sti
sbb
add
dec
sbb
movsb
cld
in
bnd
cmp
repz
jbe
call
or
xlat
test
xor
jmp
cltd
pop
cmp
dec
aam
inc
outsl
push
lea
mov
out
clc
mov
inc
test
inc
dec
mov
inc
test
out
push
add
fldt
in
aam
mov
mov
adc
mov
inc
pop
pop
mov
notb
push
pushw
cmpb
les
mov
inc
sub
cmp
aam
dec
and
dec
jl,pn
dec
scas
out
pop
addr16
push
jbe
adc
mov
rorl
cmp
bound
sti
mov
iret
mov
mov
lds
mov
ror
subl
test
sahf
xor
mov
add
out
mov
xchg
add
lea
inc
insb
cmp
xor
pop
mov
mov
jg
mov
dec
mov
xor
and
cwtl
mov
call
sarl
cmc
movsb
pusha
gs
icebp
xchg
mov
push
out
pop
pop
cmp
adc
sbbb
xor
aam
mov
sub
adc
fisttpll
int3
and
jle
or
lds
mov
xchg
lcall
cmpsl
insb
or
and
xlat
ja
pop
rolb
xor
mov
xchg
mov
lods
leave
fstpl
jae
stos
ret
inc
jge
jle
fildll
aam
lods
fdivrl
es
stos
push
mov
je
rorb
cs
cmp
ret
sub
test
push
mov
imul
mov
xchg
cmp
mov
aas
and
sahf
inc
lods
push
cld
lcall
or
or
int3
cmp
ret
repz
and
xchg
xchg
sti
ret
dec
loope
push
loope
test
push
adc
pop
xor
cld
test
pop
dec
jns
sub
jnp
push
fwait
fs
inc
jmp
pop
jecxz
lahf
xchg
or
and
mov
rcr
mov
loop
cmp
and
mov
mov
mov
js
pop
aas
mov
sbb
push
pop
jmp
jbe
lret
arpl
inc
jns
push
imul
cmp
or
mov
test
jae
xchg
rclb
push
out
adc
cld
outsl
imul
pop
ds
pop
dec
jle
pop
arpl
pop
aas
and
push
ficoms
and
push
shll
xor
orl
stc
adc
mov
ret
loopne
add
sbb
xor
je
xchg
dec
scas
push
add
mov
xor
pusha
loop
pushf
ljmp
dec
add
fnstcw
rcrl
pop
cmp
inc
mov
aas
aad
mov
jbe
das
inc
mov
xchg
loope,pn
inc
into
rol
push
stos
cmp
arpl
test
inc
xchg
mov
lea
fdivl
pop
popa
mov
loopne
jmp
add
sbb
inc
orb
pop
loopne
xchg
outsb
das
leave
std
psrlw
test
enter
inc
inc
or
mov
push
bound
mov
mov
mov
adc
jo
aas
adc
xchg
jge
xor
aaa
xchg
fnsave
ret
repz
gs
daa
inc
filds
repnz
pop
cmc
cmp
push
loopne
out
pop
dec
movsb
pop
ret
sub
xor
inc
gs
sbb
imul
hlt
jg
fcom
add
jae
js
insb
lret
add
sub
add
sub
sbb
out
andl
jno
xorl
dec
imul
shlb
movsl
in
scas
inc
test
test
xor
inc
pop
jecxz
jbe
push
xchg
push
or
mov
dec
push
lcall
ret
aaa
push
in
pop
rol
sbb
sbb
imul
cld
jg
lahf
push
jmp
xlat
inc
fwait
jmp
adc
and
das
push
xchg
inc
shrb
adcb
out
in
cmpsl
inc
adc
push
sub
adc
dec
inc
mov
mov
pop
cmpsb
lret
mov
jp
mov
aas
mov
addl
mov
enter
daa
movsl
push
mov
repz
jo
cmp
pop
cli
dec
loopne
popa
test
xor
in
jle
div
aas
out
stc
cmp
sub
fdivrs
int3
sarl
or
out
inc
lea
xor
ss
lahf
jp
mov
cmp
mov
popa
subl
mov
test
inc
mov
mov
jg
aas
mov
int
mov
add
pop
int3
cmp
xorl
jae
xor
mov
push
mov
loope
int
mov
lds
inc
sbb
ja
je
lcall
mov
jb
cld
add
xor
push
mov
and
ljmp
pusha
cltd
xchg
and
daa
loop
pop
lock
push
mov
call
mov
sti
add
leave
push
cwtl
pop
lods
dec
shrl
mov
inc
pop
adcl
dec
mov
xor
push
data16
in
jb
out
into
int3
pop
int
je
push
sbb
lret
insb
sub
lret
cmp
mov
fcomp
aam
out
mov
stos
cli
pop
mov
dec
xorb
sbb
mov
mov
ja
xchg
jne
mov
fwait
push
cmp
jl
out
jmp
roll
lods
jb
aas
hlt
or
and
rcll
loope
push
mov
inc
cmp
or
arpl
mov
mov
mov
mov
push
test
imul
cmp
int
testb
mov
xor
sbb
lods
dec
jg
sub
loopne
cmp
popl
cmp
pop
mov
pop
mov
rcr
es
es
sahf
dec
xorl
xor
cmp
enter
test
push
sbb
xor
into
sbb
add
mov
ds
xchg
ss
add
lods
push
mov
scas
ficompl
outsb
dec
andb
xor
jb
mov
lods
jb
orb
mov
popf
insb
dec
xchg
pop
mov
mov
dec
mov
cmpsb
mov
pop
shll
bound
aad
inc
call
pop
fsubrl
mov
adc
cmp
push
fwait
ret
mov
out
scas
addr16
xchg
xchg
test
mov
mov
mov
js
push
xor
add
mov
aam
cmp
ljmp
lock
idivl
cld
ror
ret
adc
loopne
fbstp
xor
daa
ficomps
sub
aam
mov
mov
icebp
xor
add
sub
sub
xor
push
test
dec
pop
rolb
or
pop
aaa
fsubr
sbb
cmp
lea
adc
mov
jo
jle
out
shl
mov
cmpsb
imulb
inc
push
scas
jae
add
xchg
dec
addl
scas
stos
mov
sub
test
mov
in
xchg
dec
aam
add
or
push
in
adc
cmpsb
mov
add
insb
stc
and
jns
jne
icebp
and
aad
cwtl
int3
mov
or
pusha
fisttps
push
pop
push
cli
mov
sahf
arpl
imul
test
test
cmp
scas
shll
popf
lea
out
int3
cltd
sbb
adc
iret
and
ss
sar
cltd
xor
push
rolb
add
and
adc
cwtl
xor
mov
inc
fidivrl
data16
movsb
sub
mov
test
add
sbb
sub
sbb
push
fcoms
in
sub
or
lret
les
stc
ret
int
inc
cltd
xor
ss
pop
mov
xchg
xchg
cli
pop
mov
push
movsb
pop
push
mov
jl
or
inc
mov
xchg
outsb
scas
stos
mov
loop
pushf
js
lock
add
or
dec
cld
push
shrl
cld
insb
jl
push
repnz
push
mov
or
or
jmp
adc
sub
lock
dec
popf
imul
std
pop
inc
aaa
dec
das
leave
jbe
mov
dec
mov
mov
adc
push
pop
fldcw
jl
jb
and
enter
aaa
cmp
xor
mov
out
or
in
add
inc
adc
sbb
adc
xor
inc
push
lret
mov
xor
or
add
ljmp
inc
leave
jne
dec
rorb
enter
addb
jmp
and
jae
insl
fcmovnbe
add
sbb
sbb
jmp
in
pop
mov
sub
mov
add
pop
mov
cmp
xchg
daa
movb
push
push
push
jnp
and
mov
jp
and
orb
mov
loopne
popa
test
subl
stos
jmp
dec
fs
pop
inc
into
push
push
movsb
sub
in
movsb
xchg
stos
arpl
inc
inc
and
add
xor
int
sahf
sbb
enter
sbb
xor
lods
test
imul
and
outsl
jecxz
sub
mov
inc
pop
std
mov
fdivrl
mov
aad
repz
inc
adcb
test
das
and
dec
sub
scas
adc
sbb
dec
jl
push
jecxz
xchg
sub
sti
orb
mov
sbb
not
hlt
std
shll
rcr
addb
test
das
call
call
xchg
and
mov
int3
loope
test
pop
cmp
jno
xor
and
adc
adc
and
xchg
or
test
insb
fisttpll
rcrb
ret
add
stc
jmp
call
or
flds
movsl
fdivrl
push
add
fmulp
or
mov
jle
inc
cmc
pop
pop
push
pusha
mov
dec
clc
xor
mov
sbb
das
mov
mov
sbb
or
enter
loopne
inc
xchg
xor
xchg
js
lret
sub
rorb
or
lods
pop
lea
test
sub
inc
mov
add
adc
xor
addr16
mov
test
test
arpl
dec
mov
loop
cmp
dec
ret
push
sub
adc
cmp
shrb
outsl
xchg
jns
cmpsb
mov
fisttpll
mov
rclb
adc
push
pop
jnp
mov
and
sub
shrb
sub
fmuls
push
std
sbb
and
and
pushf
roll
adc
push
dec
cmp
dec
mov
mov
cli
lahf
adc
adc
or
xchg
icebp
push
test
aaa
cld
mov
mov
leave
adc
pop
jl
mov
cli
xchg
xchg
fdivl
and
push
or
push
lea
insl
jl
repz
test
inc
movsl
adc
and
mov
jb
je
add
hlt
aam
sub
cmp
dec
faddl
fbstp
pop
std
add
cs
adc
add
mov
pop
sbb
sarl
movsb
sub
insl
sbb
jns
lods
cmpsb
popa
mov
dec
jns
mov
fdivrs
sub
aam
fimull
pop
mov
js
shlb
pop
push
mov
lods
pop
call
shl
int
mov
rorb
xchg
aam
cs
dec
and
pop
xchg
pop
cmp
mov
sbb
mov
mov
lods
jno
mov
pop
js
jns
outsl
xor
iret
les
xchg
ret
push
aad
jg
pop
jle
pop
inc
addr16
cmp
out
adc
adc
add
testb
mov
xor
aad
and
pop
andl
inc
dec
dec
outsl
jl
dec
mov
push
push
ljmp
cmc
fnstsw
das
cwtl
xor
xchg
dec
sti
sbb
push
mov
cmp
inc
dec
and
mov
fbld
add
lret
out
push
push
fxtract
lret
and
mov
addb
add
notl
jb
jns
add
lret
fadd
aad
fistpll
mov
loopne
adc
ret
cmc
ja
lds
pop
jmp
ret
pop
mov
mov
negb
add
jne
sti
test
jle
xchg
xchg
pop
cld
mov
insl
dec
es
in
inc
mov
fimuls
lea
dec
mov
in
inc
cmp
ficoml
inc
add
adc
pop
push
inc
sti
insl
jnp
and
out
sbb
mov
mov
mov
fildl
ret
jnp
jo
hlt
pushf
cmp
xor
fidivl
push
int
ja
pop
sbb
jg
pop
dec
push
or
js
add
add
sbb
orl
pusha
std
lods
jne
in
push
iret
jb
inc
movsl
add
sub
test
cmpsb
rorb
int
stos
repnz
dec
cld
hlt
mov
jb
js
add
dec
cmc
ret
test
les
cmp
jl
test
cli
mov
push
add
push
or
dec
in
adc
inc
aaa
xor
pop
into
mov
jle
dec
jge
test
push
jl
xchg
and
mov
je
xchg
aam
testb
adc
ja
bound
icebp
jb
pop
cld
test
xchg
pop
ret
sub
and
xor
rorb
fidivs
imul
cli
add
pop
popa
addl
push
enter
loope
stos
test
sub
adc
or
hlt
jnp
test
cmp
notb
push
les
out
cmp
rclb
outsl
lret
xchg
or
and
add
mov
andl
and
xor
scas
adc
and
dec
pop
xchg
mov
pop
mov
adcb
push
xchg
fimull
lds
out
adc
and
sti
inc
lahf
clc
add
lods
rorb
or
test
sahf
xor
lods
jp
mov
mov
xchg
movsb
pop
rol
or
iret
mov
or
inc
inc
lods
js
fs
dec
jge
insb
test
std
jmp
sbb
cmp
and
repnz
inc
or
jecxz
mov
sbb
leave
mov
cmc
nop
stos
cmpsb
jle
jmp
push
fdivrl
repz
jmp
roll
jmp
adc
mov
into
mov
rcrb
sub
dec
sub
outsb
push
add
movsl
addr16
ljmp
pop
fstl
frstor
jmp
leave
cmp
cltd
adc
popa
mov
mov
mov
cs
pushf
add
mov
mov
sti
sub
je
stc
pusha
xchg
xchg
inc
aad
orb
xor
call
loop
testb
int
cmc
testb
ficomps
ret
ds
and
and
xor
lret
test
dec
aas
sti
push
mov
sbb
imul
lods
pusha
aaa
lea
and
inc
jb
sub
dec
ret
or
insl
cwtl
in
or
fnsave
xlat
cmp
pop
lds
icebp
sbbb
sahf
in
js
jle
je
mov
shrl
add
lea
in
subb
or
mov
repz
add
fldl
clc
inc
outsl
mov
popf
das
xor
rcll
sbb
outsl
loopne
push
adcl
fimull
sti
add
xor
cmpsb
push
call
cmp
lcall
jne
cmp
test
inc
mov
xchg
test
pop
aad
call
shrb
sbb
cld
push
repz
dec
cmp
jb
jg
sub
or
xchg
cmp
rorl
mov
xor
les
movsb
fdivl
orb
aas
mov
fwait
test
loop
mov
je
push
sahf
jb
and
and
or
add
shrb
int
jp
sub
fistpl
jl
xor
lods
push
orb
sub
cwtl
movsl
adc
imul
ja
jbe
push
lods
xchg
jg
loop
lret
mov
loop
or
js
jge
mov
frstor
aas
adc
rcl
mov
lret
sbb
or
jne
mov
inc
shrl
push
rcll
adc
mov
xchg
add
push
xchg
add
arpl
pushfw
mov
enter
lods
sar
bound
ss
sarl
arpl
lret
ret
imul
out
in
imul
dec
jge
lods
inc
dec
mov
cmpsl
xchg
ljmp
fcompl
in
scas
lods
and
dec
dec
les
adcb
mov
stos
je
addr16
jns
pop
aam
mov
bound
sub
lods
xor
sbb
add
clc
dec
or
lock
in
mov
mov
call
imul
leave
dec
in
pop
adc
pop
aam
or
or
sub
loope
and
sub
cmc
sbb
test
mov
cmp
and
clc
add
fmull
testb
jne
dec
test
push
mov
jle
aaa
in
int
stc
mov
in
jecxz
or
push
jns
lret
idivb
sub
aas
mov
adc
inc
mov
int
enter
stos
push
mov
xorb
loope
inc
mov
jne
mov
push
and
sub
cmp
mov
pop
lcall
jno
add
repnz
popa
pop
ljmp
lcall
jl
out
cmpsl
jo
push
mov
mov
incb
xchg
pushf
push
sahf
push
lods
dec
and
pslld
add
mov
lret
mov
lock
and
outsb
add
je
inc
mov
inc
rcrb
cmp
pop
adc
inc
and
test
xchg
sbb
movl
xor
daa
test
inc
xchg
out
into
mov
adc
add
adc
or
xor
stos
add
adc
mov
lret
push
test
mov
aam
int3
rolb
mov
or
dec
xchg
aad
sbb
int3
and
lea
out
clc
cmp
add
xchg
inc
lods
jg
out
frstor
rcrb
in
jae
pop
and
shll
xchg
xchg
xchg
pop
cmpsb
fidivrs
mov
mov
and
push
test
aas
stc
pop
mov
jns
push
xchg
mov
dec
jo
inc
andb
aas
in
pusha
addb
push
cmpsb
pop
lock
icebp
sub
mov
jns
adc
repnz
and
rorb
mov
pop
testl
mov
out
add
add
out
sbb
sbb
jnp
push
mov
mov
and
cli
xor
outsl
stos
aad
pop
icebp
pop
xchg
mov
xchg
std
fwait
push
ret
hlt
or
xchg
pop
add
testl
icebp
sbbb
push
lret
subl
insb
loope
call
mov
test
adc
or
mov
imul
cmpl
stc
xchg
js
ret
and
cmp
xor
rcl
sub
cmp
sti
sbb
nop
dec
int3
mov
mov
cmpb
pop
je
fdecstp
sbb
out
xchg
lock
inc
and
pop
inc
pop
sub
push
xor
out
ret
xorb
arpl
ficoml
xchg
or
arpl
adc
jae
int
xor
mov
psraw
push
repz
jp
dec
xchg
dec
mov
pop
mov
jg
test
popl
fldl
jmp
das
hlt
or
jp
ficoms
jecxz
out
sub
std
repz
fsub
inc
lahf
dec
mov
in
mov
call
int
mov
repz
pop
mov
push
js
mov
add
mov
jge
int3
push
or
lahf
jg
pop
repnz
cmpsb
mov
cmp
mov
add
cmp
lock
out
sub
pop
sub
xchg
cld
jnp
mov
dec
clc
sarb
mov
mov
pop
lock
pop
cmpsb
or
pop
fdivl
bound
lcall
aaa
mov
fdivr
lods
fdivrl
xchg
test
and
xor
xor
out
stc
xor
sbb
lea
jmp
fdivrs
inc
sahf
mov
cmpb
ljmp
push
xchg
pop
sbb
jnp
mov
sbb
or
push
jmp
mov
ret
sub
dec
cmp
enter
inc
cmp
cmp
pop
sahf
hlt
icebp
and
ljmp
hlt
sbb
inc
in
or
cmp
push
inc
adc
loopne
push
mov
jnp
lock
ljmp
xor
loope
xchg
xchg
pop
mov
dec
xor
cmp
insb
sbb
sbb
cmpl
xor
cmp
adc
mov
mov
mov
xor
cli
xchg
imul
push
inc
mov
inc
nop
arpl
adc
add
and
out
aas
mov
bound
or
add
push
in
fimull
scas
cwtl
xor
pop
sub
mov
mov
ficoms
pop
push
jp
jno
call
std
fbstp
push
scas
inc
add
pop
cmpsl
test
jmp
popa
test
xor
fnstcw
add
add
add
push
iret
cmp
jmp
fiaddl
and
shll
and
pop
xchg
ljmp
inc
sbb
inc
mov
sub
xchg
ja
std
dec
mov
out
sub
xor
sbb
mov
sub
arpl
add
pop
mov
inc
ljmp
dec
push
sahf
stc
pop
shll
aad
pop
jp
insl
mov
fildl
and
xchg
jge
cmc
push
stos
lret
fnstcw
xor
sub
aam
or
pop
pop
inc
or
mov
add
outsl
inc
and
rorb
in
mov
ffree
mov
inc
mov
sub
pop
mov
xchg
addr16
shlb
fwait
xor
sub
jno
mov
testl
xchg
into
or
aad
adc
or
ret
decb
cmp
and
and
jg
add
arpl
push
in
lea
adc
jecxz
out
cwtl
and
je
test
mov
pop
popl
hlt
sub
das
cs
mov
mov
sbb
sbb
js
xchg
mov
jmp
lret
iret
sti
into
mov
jb
shrb
imul
ret
lret
lock
inc
xchg
push
test
inc
mov
or
inc
pop
xor
lods
adc
sbb
jl
xchg
js
lret
popa
xlat
pop
dec
mov
xchg
std
dec
and
jnp
jg
mov
xchg
mov
cmp
adc
inc
scas
sbb
ss
movsb
cltd
pop
test
pop
push
jnp
push
mov
sub
jge
fiaddl
popf
or
mov
aam
mov
adc
cmp
mov
inc
pop
mov
test
les
stos
xchg
mov
mov
shrl
pop
mov
jno
lahf
sarl
ja
int
sub
dec
lods
sub
jae
jne
pop
push
in
cs
mov
fadds
cmp
dec
clc
andl
lea
jae
sahf
in
shll
push
adc
hlt
loope
push
cmc
or
lcall
aaa
outsl
in
fsubs
cmpsl
cli
call
sbb
add
dec
lret
pop
ret
das
add
in
add
dec
int
bound
sub
testl
adc
pushf
ljmp
pop
outsl
fnstsw
loopne
test
push
push
inc
adc
out
adc
jge
inc
shlb
push
sbbb
pop
mov
jne
movsb
push
add
xlat
add
jge
and
mov
and
rcr
or
addl
inc
fstl
inc
mov
jne
sti
test
aas
jae
aad
dec
jb
add
test
pop
lahf
enter
or
mov
mov
idiv
pop
cmpsb
outsl
jno
xchg
ffree
push
sub
add
mov
sub
inc
mov
cmp
leave
repnz
imulb
out
cmp
test
mov
adc
leave
xor
roll
fdivr
mov
loop
lcall
cmc
mov
fdivl
stos
push
or
inc
inc
stos
jnp
mov
push
daa
lret
mov
insl
inc
or
mov
paddusb
test
lea
push
pop
clc
test
ficompl
push
add
cmp
les
adcb
aam
stos
and
cmp
xchg
out
out
filds
and
test
cmp
mov
insl
pop
lock
mov
rcll
pop
scas
dec
test
movsb
pop
mov
xchg
and
or
outsb
cmp
icebp
xor
push
loope
and
out
cwtl
xor
add
inc
push
dec
andl
cli
testb
movsl
lcall
adc
xchg
or
mov
mov
jns
cmp
jmp
cltd
push
xor
or
push
icebp
das
js
pop
xor
add
xor
mov
push
or
sbb
aas
mov
pop
neg
mov
andl
cmp
popa
jle
in
daa
shlb
iret
scas
mov
sub
addb
mov
mov
and
das
pop
jp
test
or
jnp
mov
jbe
mov
repz
mov
xor
cli
xor
add
in
mov
loopne
shrb
adc
out
cwtl
xor
std
cmp
hlt
sbb
in
int3
test
cmp
fidivs
xchg
movsb
fninit
pushf
and
lea
adc
mov
out
js
in
jbe
inc
push
mov
bound
push
xor
xor
xor
mov
bswap
popf
in
push
gs
aam
jns
add
or
les
insb
ficoms
lea
pop
jns
shrb
jecxz
rorl
lods
inc
je
sub
push
aas
mov
ficompl
inc
mov
imul
int3
and
enter
jns
cmpsl
adc
aaa
out
jbe
sub
fwait
add
jnp
cmp
test
cmc
stos
lods
outsl
inc
jnp
call
and
in
cmpb
lret
mov
pop
test
xor
cld
jl
push
int3
xchg
test
ficoml
adc
mov
movsl
mov
jmp
add
cvtdq2ps
inc
lock
jno
mov
decl
dec
pop
icebp
fcomi
pop
and
mov
mov
iret
test
jmp
add
sar
or
jno
out
fwait
aas
add
insl
xor
jecxz
shll
xorl
insl
notrack
inc
xchg
arpl
mov
iret
ds
jle
shll
loope
decb
xor
push
fcmovnbe
mov
sarl
iret
sub
pushw
xchg
sbb
jg
mov
jne
sti
mov
mov
lahf
dec
adc
sub
mov
shrb
jg
xchg
jl
cli
add
and
adc
or
inc
mov
and
sbb
dec
ret
orl
cmp
mov
xor
lock
pusha
and
mov
hlt
imul
fmuls
movsl
aad
and
inc
mov
sub
cmp
stc
jb
inc
icebp
out
xchg
jbe
repnz
xchg
addr16
popf
pop
xor
inc
dec
add
push
mov
adc
or
mull
and
sbb
fldt
into
mov
mov
mov
movsb
dec
adc
and
cmp
rol
jns
lret
popa
xchg
cmp
orl
inc
popa
test
andb
lds
dec
and
movsb
imul
mov
push
add
and
sbb
mov
int3
xchg
and
insl
cs
in
push
scas
aas
ret
jl
jl
lret
test
pop
push
test
popl
pop
in
je
aaa
lret
pop
adc
mov
push
xor
addb
mov
inc
mov
jo
in
mov
scas
pop
dec
divl
cld
or
jl
jp
sub
sti
icebp
push
push
pop
sbb
andb
ds
into
sbb
mov
das
pop
mov
push
mov
icebp
es
cmp
push
add
cmpsl
mov
mov
and
ret
jo
mov
push
cli
push
or
pop
or
das
xor
xor
xor
aam
mov
and
repz
jge
test
cwtl
and
add
sbbb
cld
shrb
dec
bound
sbb
mov
sahf
daa
mov
xchg
mov
xor
movsb
loop
xor
or
inc
xchg
arpl
psubsw
push
lock
cmpsl
loop,pt
xchg
sub
xchg
push
pop
jp
in
and
ljmp
dec
add
aam
add
lods
dec
mov
mov
dec
lods
sbb
mov
jns
push
fs
xor
inc
xor
push
enter
roll
data16
cmp
xchg
fwait
push
lcall
es
dec
orb
push
orl
aas
stc
aaa
outsl
push
out
aaa
cltd
ss
inc
or
push
scas
jle
or
xor
hlt
insl
cmp
pop
or
adc
pop
enter
jo
push
fdivl
xor
pusha
mov
or
mov
mov
add
leave
leave
testl
mov
push
jnp
mov
pop
mov
sahf
movsb
sarl
jmp
ja
add
xchg
sbb
xchg
mov
data16
les
lods
cwtl
mov
mov
adc
daa
icebp
imul
in
pop
aam
sbb
xor
pop
mov
mov
popa
imul
lods
pop
mov
pushl
sub
cmp
or
add
jl
outsb
pushf
adc
pop
sbb
xor
sbb
xor
adc
or
push
add
add
daa
add
jp
stc
sti
and
jp
xchg
subl
sarb
lock
mov
or
rcll
jns
sbb
jo
test
mov
mov
sub
xchg
sub
add
and
sbb
jle
pushl
or
es
loope
adc
sahf
push
jle
adc
pop
cmp
pop
je
and
daa
shlb
andb
cmp
pop
mov
popa
jp
push
mov
dec
pop
std
jno
mov
subl
mov
jbe
sub
pusha
inc
mov
fimuls
jl
push
daa
xlat
xor
mov
push
lods
inc
cmpl
xor
shll
ficoms
cmpsl
sub
xchg
iret
jecxz
mov
inc
push
ret
pusha
push
adc
fisubrl
sti
and
out
push
mov
stc
loope
dec
mov
cld
movb
rcll
adc
jge
gs
div
rorb
or
sub
lret
out
bound
pop
stos
inc
sub
sahf
or
inc
fstpl
dec
mov
popf
jne
mov
pop
cmpsb
adc
les
jno
mov
xchg
je
cmp
or
arpl
add
repz
xchg
movsb
push
mov
add
sub
in
jbe
mov
aas
jae
mov
out
cmpsb
jo
adc
push
mov
mov
xchg
lods
insb
imul
inc
xchg
test
jl
inc
addr16
pop
inc
jg
bound
jns
pop
lods
xor
data16
les
add
inc
out
in
add
push
ret
xlat
pop
sbbb
sub
mov
inc
js
xchg
or
lods
lds
popf
jp
xor
hlt
roll
icebp
lock
or
stos
dec
into
cmp
xor
sbb
fwait
jmp
cs
aas
lret
js
psrlq
adc
and
nop
push
rep
push
not
push
stc
push
test
jmp
mov
fdivrl
loop
addl
dec
into
add
jns
mov
nop
lods
mov
test
nop
dec
popl
pop
jbe
test
lahf
adc
add
sbb
adc
or
jnp
or
and
pusha
test
xchg
dec
imul
xchg
test
dec
mov
jnp
insb
adc
push
cli
pop
dec
test
mov
out
xor
xchg
popa
mov
negl
test
ds
mov
and
leave
scas
push
std
neg
xor
sbb
jp
cli
inc
pop
adc
cmp
jge
rcrl
add
sub
jl
xor
xor
jl
mov
icebp
cmp
es
dec
cmp
dec
out
cmpsb
jnp
jb
insb
cmpl
inc
pop
cmpsb
loopne
and
and
aas
or
sarl
mov
mov
pop
inc
cmp
mov
sub
mov
or
fwait
je
add
std
mov
insl
xchg
mov
cli
mov
sbb
xorb
notb
cmpsb
pop
dec
das
fldt
mov
pop
pop
push
xchg
lods
nop
cmp
in
orb
jns
bound
xchg
mov
test
ds
or
cltd
pop
cmp
and
insl
psrad
das
or
sbb
add
fsts
pop
daa
repnz
xadd
test
outsb
add
or
pop
push
dec
inc
dec
mov
push
cmp
and
jo
pop
int
in
jge
pop
lea
pop
add
sbb
sub
sbb
mov
cmp
shrw
mov
push
mov
sar
lds
movsl
cmpsl
lods
cltd
es
lret
ds
mov
testl
dec
out
out
or
ret
mov
fidivl
inc
sub
dec
cmp
les
loope
into
imulb
sahf
and
incl
jbe
filds
loope
loopne
jge
adc
arpl
shlb
mov
insl
add
or
insl
sbb
mov
mov
mov
daa
and
xor
data16
pop
mov
imul
and
popf
es
cmp
in
shrl
mov
pop
pop
sbbl
mov
ds
pop
imull
sbb
mov
or
push
jbe
mov
outsl
xchg
dec
aam
inc
ja
push
fidivl
push
push
pop
or
daa
jp
pop
movsl
in
in
adc
repz
int3
sbb
int3
outsb
lods
cltd
pop
xchg
xchg
add
sbb
mov
cmc
mov
test
iret
popf
pop
mov
mov
arpl
rcll
dec
andb
mov
outsb
test
cmp
dec
imul
sbb
in
frstor
add
int3
cs
fwait
adc
clc
fucom
lods
pushf
xor
test
xchg
rorb
ds
mov
test
add
mov
in
inc
push
inc
cltd
add
add
sub
pop
cmp
or
jo
lods
push
mov
stos
lea
adc
loopne
adc
xor
aam
jl
mov
inc
adc
add
fmull
fdivr
jne
dec
clc
enter
mov
sub
or
faddp
mov
xor
mov
testl
mov
leave
loop
add
out
cmpsb
lret
sbb
test
les
or
cli
popa
mov
jge
test
imul
iret
xor
push
sub
cmp
int
jne
inc
test
adc
jecxz
test
repz
aas
leave
mov
mov
fnstsw
fisubs
dec
dec
lahf
push
imul
sbb
cwtl
inc
add
rorl
fsts
rcr
sub
and
sbb
ds
push
jnp
or
xchg
daa
xor
insb
movsb
xor
pop
sub
sub
shl
jne
mov
mov
mov
gs
xlat
dec
aam
mov
sub
shl
fwait
sbb
sbb
cmp
push
or
dec
mov
sub
fisttps
insb
mov
loop
inc
sbb
jmp
or
jb
out
sbb
add
xchg
fs
pop
imul
lret
sub
jmp
inc
cs
idivb
cld
cmpsl
cmp
xchg
js
in
mov
popf
je
mov
sbb
dec
jecxz
mov
pop
out
mov
insb
and
xor
dec
mov
sub
mov
ret
mov
ja
or
roll
mov
sti
scas
add
pop
cmp
shlb
jp
inc
jno
dec
inc
pop
les
imul
test
repz
imul
movsb
lods
mov
int3
fistl
out
in
mov
cltd
xchg
xchg
push
lahf
clc
mov
imulb
inc
call
fmuls
cmc
popf
dec
pop
lret
int
repz
mov
jne
inc
lods
jg
or
mov
xor
stos
lock
subb
pop
addl
je
mov
mov
cld
into
into
push
loope
popf
or
jne
jmp
sbb
jge
jg
jmp
ljmp
ret
add
mov
pop
shr
fistl
inc
mov
leave
mov
pop
mov
je
mov
pop
sbb
popf
mov
push
or
psubd
arpl
mov
sub
cld
mov
push
mov
aam
scas
jp
popa
cltd
push
std
xor
push
adc
lahf
xor
ret
pop
push
mov
jno
or
popf
popa
je
cltd
loop
or
insb
pop
fstpt
daa
mov
gs
je
ret
enter
xor
stos
lods
cmp
dec
lret
aaa
aad
imul
scas
std
notb
ret
pop
sub
mov
pop
aam
movsb
pop
icebp
popa
jg
xchg
jnp
dec
popf
enter
push
lods
and
out
das
shlb
mov
mov
mov
xor
in
mov
lret
or
or
out
test
adc
sub
add
cmc
add
fnsave
sub
pushl
cs
jle
cmp
stc
std
pop
js
sti
xor
jg
negl
sbb
xchg
push
and
mov
iret
addr16
pop
pop
xor
inc
stos
mov
push
mov
inc
jp
cwtl
add
add
push
push
and
iret
pop
and
fiadds
inc
repnz
add
cmp
pop
in
enter
incl
mov
xor
push
sbb
test
cwtl
imul
or
jmp
arpl
jno
cmp
inc
out
outsl
or
stc
pop
mov
nop
jl
or
mov
bound
inc
and
lods
xchg
fabs
stos
mov
mov
shl
xor
push
stos
stc
xor
mov
ja
cld
push
mov
jg
leave
scas
out
sbb
in
in
mov
pop
rolb
dec
roll
mov
lods
iret
enter
mov
adc
xchg
out
cli
imul
js
add
daa
xchg
ljmp
push
adc
jo
lcall
cltd
jge
pushf
subl
mov
enter
mov
mov
adc
imul
sub
add
mov
movsl
push
fs
in
popl
add
mov
cmp
rcrb
push
lret
xor
fsts
lret
orl
xchg
or
stos
subb
imul
lods
lahf
push
stos
sbbb
pop
cmpsb
jg
pop
dec
and
mov
inc
mov
aaa
hlt
cmp
xor
mov
dec
imul
out
xchg
data16
loope
push
movsl
jge
lods
js
mov
jge
mov
and
subb
jnp
mov
imul
add
insb
pushl
xchg
xor
mov
mov
adc
int
ficoms
mov
mov
mov
inc
das
push
xchg
ja
es
inc
loopne
xchg
push
mov
xchg
inc
mov
pusha
xchg
je
xchg
lret
mov
mov
adc
xor
nop
xchg
pop
add
or
jno
jg
sub
ret
inc
cmp
std
cmc
mov
rol
mov
nop
lds
ret
loop
std
pop
pop
cli
shr
cmp
inc
rcl
pusha
xchg
adc
fsts
mov
movsl
adc
xchg
mov
and
enterw
addb
adc
insb
mov
or
mov
lods
jl
fiadds
jp
jmp
or
pop
nop
lret
pop
mov
rcr
mov
inc
lcall
and
or
xchg
mov
pop
cmp
xchg
clc
or
xchg
stos
adc
rcll
idivl
dec
lds
sub
lret
mov
push
adc
xchg
mov
inc
or
fimuls
shrl
mov
sub
in
dec
sbb
lock
mov
pusha
mov
lds
es
mov
pop
lods
push
inc
dec
fiaddl
fldenv
mov
cmpsl
dec
cmp
xchg
adc
movsb
jge
aam
mov
pop
fiaddl
push
xchg
leave
nop
jp
bnd
lret
push
aam
popf
js
dec
jge
sbb
xchg
das
sti
adc
test
jle
icebp
lret
movsb
test
into
repnz
add
loope
loope
fwait
adc
sub
scas
sbbb
mov
test
lods
or
ret
jnp
add
incl
out
xchg
jno
or
les
mov
shll
xchg
mov
or
sbb
ss
or
mov
jp
jl
lods
jecxz
mov
rolb
stos
outsb
xchg
adc
fwait
bound
loope
or
pusha
ret
cmc
mov
aaa
lock
sub
mov
add
push
mov
stc
pop
jg
stos
dec
push
es
pusha
adcb
out
inc
and
popa
addb
cltd
mov
scas
pop
sbb
inc
das
lock
nop
stos
loop
and
adc
adcb
int3
out
inc
jno
sti
add
jne
adc
sbb
pop
or
mov
xor
jnp
les
push
adc
sarl
add
dec
xchg
xor
adc
jnp
movsb
and
stos
xchg
jp
js,pt
jns
mov
adc
cwtl
loope
cs
adc
pop
add
pop
sub
xor
cli
cltd
xlat
cmp
rcl
scas
jne
popa
lods
test
roll
adc
add
out
push
dec
jg
pop
incb
pop
addr16
and
popf
cmp
outsb
jo
hlt
pop
cmp
movb
jnp
bound
xchg
dec
mov
cmp
mov
aaa
fidivs
cmp
loop
jno
jne
sub
imul
mov
iret
push
shll
inc
mov
sub
repz
jle
add
cmp
adc
jl
mov
loopne
les
fmuls
or
or
pop
or
cmp
push
jge
adc
or
clc
or
push
xor
lret
xor
xor
mov
pop
mov
leave
push
in
cwtl
imul
inc
sub
xor
pop
lcall
xchg
and
stos
dec
fbstp
or
ljmp
lock
push
ss
pop
mov
add
jl
test
add
cmp
cmp
adc
test
dec
into
fdiv
pop
jmp
xchg
and
stos
stc
add
jne
sub
outsl
xchg
ljmp
jb
mov
and
nop
bound
jns
lcall
pop
imul
or
and
add
and
outsb
adc
push
or
aam
repz
es
test
jns
dec
mov
sbb
add
test
and
and
cmp
dec
xchg
and
pop
push
adcl
loopne
test
dec
mov
jge
dec
scas
xchg
sub
loop
shrl
push
fchs
outsb
adc
dec
add
notl
mov
fst
fildl
or
cld
push
xchg
push
in
pop
sarb
jne
inc
in
inc
js
mov
in
es
dec
mov
hlt
addl
mov
mov
add
idivb
sbb
dec
push
decb
cmp
dec
mov
in
outsl
mov
mov
push
mov
jnp
test
int3
xchg
inc
mov
pop
push
or
cmpxchg
jle
cmp
fnstcw
int
shll
push
fldt
ljmp
je
or
add
shrb
into
mov
dec
inc
push
or
or
adc
loope
rorl
data16
jo
icebp
out
test
xchg
push
test
aaa
aad
out
leave
repz
repz
ret
xchg
aaa
loope
mov
cld
adc
setns
aas
pop
mov
xchg
inc
negl
inc
mov
mov
mov
flds
iret
icebp
in
out
in
sub
dec
dec
mov
lds
inc
cmp
adc
int
fistl
sti
sti
pop
add
stc
outsl
mov
imul
imul
hlt
xchg
ss
test
fwait
xchg
inc
sub
mov
rcr
test
sub
and
and
insl
stc
aaa
lret
mov
sbb
fdivrl
and
dec
iret
insb
orl
lods
inc
cld
dec
mov
dec
pushf
pop
pop
sahf
pop
inc
mov
loopne
js
add
rolb
jmp
cltd
add
adc
movsl
imul
push
ljmp
icebp
cli
popa
cmovb
add
aad
mov
int3
imul
dec
add
lea
push
lret
cs
mov
jp
int3
sub
je
cmp
xchg
js
int
jmp
xor
or
subb
lds
out
loopne
ficoml
mov
lds
push
dec
lods
dec
jnp
fistpll
testb
lods
push
mov
and
mov
dec
cwtl
pop
fucomp
inc
mov
pop
push
cmp
xor
test
fildl
lds
sbb
imul
nop
mov
aaa
rolb
ret
cmp
bnd
sub
leave
cmc
into
add
lods
mov
cmp
pop
cmp
imul
stos
lahf
cmp
dec
mov
inc
cmp
cmp
shlb
jmp
js
insb
cld
loope
icebp
push
pop
mov
lea
pop
xchg
add
mov
pop
mov
jno
adc
cmp
outsb
dec
mov
out
inc
add
imul
jge
pop
xor
imul
xchg
inc
xchg
insl
mov
jmp
mov
mov
in
mov
jmp
idivl
mov
or
addr16
mov
es
inc
int
mov
sub
addr16
into
xchg
push
mov
cmp
push
mov
inc
arpl
jmp
mov
xchg
xchg
xor
jbe
pop
outsb
nop
pop
scas
bound
or
mov
adc
lods
arpl
or
or
arpl
push
lret
stos
pop
andb
sbb
inc
js
addr16
pop
repnz
jg
pop
inc
mov
mov
inc
dec
ds
cmp
push
fcmovne
aad
adc
fucom
dec
stos
push
popf
cmp
lret
aaa
sub
cs
je
jne
out
dec
xchg
les
push
cmpsb
pop
cmp
or
add
sahf
cmp
or
xchg
xor
push
scas
aas
out
adc
in
pop
mov
mov
scas
jb
rcrb
sub
push
sti
xchg
scas
addb
mov
and
xchg
jnp
sub
jmp
jns
sbb
daa
adc
insb
mov
cld
push
sub
dec
loope
mov
lds
fnstcw
mov
repnz
stc
mov
cwtl
sti
cld
xor
push
fidivrl
imul
cs
push
addb
add
sbb
bound
add
mov
dec
or
mov
xchg
jg
leave
cmp
rorl
mov
xchg
jge
or
or
mov
div
nop
es
ss
jae
sub
xchg
fistps
push
mov
stos
or
add
icebp
inc
xor
test
xor
push
mov
fisttpll
inc
mov
lahf
das
cmpsl
or
add
sbb
jns
cmp
or
loope
in
xor
xchg
or
aas
mov
add
pop
fsubp
dec
or
pop
jp
dec
pop
test
mov
mov
and
ljmp
mov
xor
inc
pop
aas
in
cmpsl
adc
inc
sbb
pop
mov
jge
fwait
test
jge
in
repz
and
add
sbb
mov
dec
push
mov
loope
or
mov
popf
outsl
dec
mov
jb
insl
jg
shll
lock
adc
inc
negw
push
aam
jp
and
imul
das
pop
shll
addb
cmpsb
sti
inc
repnz
mov
sbb
lret
scas
xchg
sbb
cs
mov
pop
je
jb
sbb
sar
mov
clc
les
mov
loop
cld
mov
test
mov
mov
dec
adc
movsl
adc
cmp
inc
dec
xor
stos
lods
inc
subb
adc
or
aam
sub
mov
push
je
jne
sub
jns
out
xorl
xor
inc
inc
mov
subl
shrb
mov
mov
xchg
stos
sbb
cli
and
pop
dec
jo
and
add
insl
nop
imul
ss
sub
pusha
movsb
or
and
mov
ret
adc
shlb
jo
cmp
insb
push
mov
push
adc
popw
int
in
push
pop
inc
lock
mov
lea
inc
pop
mov
loopne
mov
pop
orl
leave
cmpps
pusha
mov
mov
pop
imull
mov
inc
lods
lahf
or
aas
ret
dec
fnstcw
or
mov
fmul
push
nop
cmp
mov
push
nop
jae
pop
pop
test
xchg
mov
sbb
mov
mov
lods
push
mov
les
mov
mov
sti
jl
cmp
nop
cmp
sub
test
aaa
call
mov
jno
cmpsl
pop
sti
cmp
cld
test
aas
inc
xchg
inc
in
lret
and
loopne
daa
mov
ja
xchg
jg
xchg
mov
daa
into
addr16
inc
jo
aas
outsl
out
push
cmpl
inc
leave
lods
imul
mov
xchg
cmp
pop
jb
imull
cld
xor
xchg
mov
push
mov
jno
lods
adc
sbb
inc
mov
stc
les
cli
daa
mov
or
test
pop
sar
or
mov
mov
xchg
sbb
jmp
shlb
femms
mov
testb
jge
mov
iret
add
fstl
lds
push
mov
adcb
or
add
jle
jl
int3
mov
xchg
and
xor
pushl
int
ljmp
dec
mov
push
rclb
mov
sti
decl
iret
sub
cmp
lea
jb
int
mov
add
push
lock
lea
or
stos
jg
iret
pop
popf
mov
pop
jbe
inc
popa
push
pop
add
cwtl
sbb
fisttpl
push
movl
in
and
and
mov
addr16
bound
jl
push
test
push
incl
es
add
scas
imul
bound
push
mov
loop
inc
or
ja
mov
xchg
mov
add
out
ret
xchg
incl
push
aas
ss
testl
add
add
push
cs
cmpb
out
sbb
xchg
pop
lcall
outsl
or
repz
and
inc
mov
fdivrl
xlat
xor
mov
ja
mov
pusha
loope
xor
push
mov
aam
pop
mov
clc
xchg
mov
mov
stc
scas
inc
scas
fwait
add
mov
addb
mov
mov
mov
and
or
out
push
popf
enter
mov
or
push
in
out
mov
or
push
dec
repz
ret
mov
decb
scas
cltd
cli
and
fldl
push
repz
sarb
test
and
adc
shufps
or
nop
fimuls
push
add
adc
or
loopne
cli
fisubl
aam
lea
mov
aam
iret
add
cli
stc
fs
in
insb
jecxz
fstpl
cli
fmul
in
cs
add
dec
fdivr
insl
add
xor
cmc
pushl
adc
fcmovnb
mov
int3
arpl
arpl
xchg
aaa
ss
into
mov
std
lods
dec
movsb
and
pop
and
fisubl
int
xchg
mov
xchg
lcall
or
loopne
xor
pushf
arpl
mov
int3
push
mov
mov
mov
popl
std
mov
or
lahf
dec
mov
stos
adcl
dec
lds
adc
negl
xchg
dec
adc
or
sub
pop
lahf
sub
lcall
sahf
mov
pop
cmpsl
es
es
ss
push
adcl
rorl
sub
stc
add
ljmp
incl
pop
les
dec
lret
iret
mov
jecxz
pop
dec
or
ljmp
mov
dec
icebp
repnz
xor
popa
mov
xor
pusha
xchg
insl
push
loope
mov
jp
cmp
jp
fstps
loopne
mov
mov
lea
mov
lret
ss
jns
or
fmull
lock
add
in
iret
mov
dec
add
sub
dec
pushf
pop
xlat
scas
mov
jp
sbb
mov
xchg
dec
in
pop
jge
imul
jnp
mov
testb
mov
std
push
popa
adc
das
rorb
das
inc
lods
pop
ja
mov
rorb
mov
cld
xor
mov
cmpsb
inc
lret
cmc
les
js
test
rcrl
cmp
je
push
adc
push
daa
movb
dec
ljmp
add
roll
cltd
imul
rclb
fs
and
jecxz
sbb
xor
pop
in
adc
xorl
call
enter
xor
adc
ret
cmp
or
pusha
rclb
test
lds
loopne
mov
loopne
cmp
mov
sub
test
xchg
and
dec
mov
and
pop
mov
push
movsb
inc
hlt
fsub
dec
adcl
loope
aad
insb
mov
jnp
and
cmp
shlb
adc
inc
mov
push
jae
sahf
popf
mov
xchg
cmp
testl
adc
jmp
ret
jg
push
lods
int3
sbb
out
cmp
xor
dec
lods
pop
cltd
fildl
stc
in
cmp
cmp
sbb
xor
push
mov
les
fwait
out
je
daa
test
scas
jle
daa
sbb
pop
add
mov
dec
cmpsl
data16
fstpt
ds
ja
into
inc
jb
out
int
add
sbb
dec
out
sub
dec
dec
push
mov
pop
push
add
push
xor
pop
sub
push
sub
fnstsw
ja
push
pop
andl
es
repnz
adc
push
test
loope
mov
sbb
dec
xorl
cltd
sub
lods
enter
mov
inc
inc
clc
xorl
aad
cs
sub
pop
pop
inc
push
lds
pop
add
dec
cltd
fld
das
fsubl
fists
ret
push
xchg
push
repz
cmp
xor
push
test
jle
sbb
push
cmp
cwtl
push
mov
nop
outsl
orb
mov
pop
int
sub
xor
push
adc
adc
scas
faddl
and
jp
out
insl
mov
rorb
inc
mov
mov
ds
push
jae
sub
popa
mov
nop
xchg
cmp
xchg
or
jg
add
jecxz
push
pop
repz
sub
insl
subl
cmc
and
lret
movsb
inc
adc
test
push
fsubrl
dec
stc
pop
outsb
daa
push
add
pop
lock
leave
mov
pop
jge
test
ja
ret
daa
rorb
jle
cmp
push
jno
mov
sbb
das
clc
mov
loope
pushf
ret
pushf
mov
ds
mov
push
mov
add
call
lret
jge
repnz
push
xchg
inc
pop
mov
pop
pop
shll
out
inc
scas
movsb
dec
rcl
and
sbb
bnd
push
test
mov
mov
xchg
lret
sub
xchg
jmp
addb
add
or
aas
cld
icebp
xorb
es
lock
out
cmp
fsubr
dec
mov
mov
neg
inc
out
jg
add
aad
adc
and
scas
pop
mov
add
pop
std
jle
xchg
ss
imul
fidivl
cmp
sub
shlb
xchg
and
mov
jg
dec
sbb
or
cmp
lahf
std
jns
push
adc
aaa
adc
lods
sbb
test
clc
mov
jnp
add
in
mov
fucom
repz
gs
ja
dec
idivl
mov
jg
test
rolb
xor
mov
iret
push
sub
add
mov
mov
fs
subl
xor
xchg
sarb
sub
out
outsb
fldenv
fmul
out
jle
inc
mov
or
dec
hlt
in
insl
add
cmpsl
cmp
rcl
sub
fcomip
cmpsl
add
pop
enter
mov
bound
aam
loop
push
inc
mov
lods
lret
push
mov
std
jns
jecxz
mov
jns
shl
loop
or
shlb
jp
jno
jo
jbe,pt
les
mov
testb
add
loope
dec
cmpb
test
sti
lret
or
movsb
xchg
loop
push
out
orl
mov
or
sub
sbb
fdivs
sbb
mov
push
sti
bound
push
out
in
cmpsl
xor
inc
loop
js
mov
into
jl
mov
aad
clc
int3
outsb
xor
dec
sahf
push
dec
sbb
dec
imul
mov
xchg
push
sub
jns
jne
jne
ljmp
fmull
dec
xchg
pushf
sbb
pop
inc
notb
jb
shrb
cmp
test
fisubs
inc
lods
pop
push
and
ss
xchg
xlat
bound
test
push
push
lahf
dec
jb
adc
pushf
sub
fnstsw
xchg
outsb
enter
or
in
mov
lea
add
pop
jle
cld
mov
dec
mov
es
mov
es
mov
sub
sub
fstps
adcb
lds
ret
dec
cs
jb
pop
shlb
ret
ficomps
xchg
pop
jno
xchg
add
shll
adc
adc
mov
add
fsub
pop
cmpb
aad
jl
push
dec
popa
sbb
sbb
add
out
jnp
xor
int3
jo
data16
dec
push
mov
std
push
subl
ds
inc
sti
rcrb
test
loop
into
mov
cmc
jg
ss
out
xor
push
loope
fstps
mov
addl
int3
xor
ljmp
popf
movsb
pop
dec
aam
xlat
inc
xchg
cmp
add
adc
pop
movsb
sub
es
or
stos
sub
mov
mov
push
sti
cmpb
push
and
dec
jbe
push
inc
outsl
or
and
ljmp
pop
mov
sbb
loopne
and
jge
outsl
mov
sbb
leave
jl
cmc
add
mov
mov
fcompl
jae
pop
in
stos
jne
xor
pop
sbb
mov
inc
lret
xor
int
lea
push
lds
shll
cmp
mov
roll
jns
mov
mov
pop
xchg
aaa
mov
pop
bound
cld
adc
and
bound
push
mov
push
lds
icebp
and
adc
xor
sub
dec
sahf
push
out
sub
call
xchg
jne
cmp
scas
push
adc
movsb
or
arpl
in
scas
dec
cmp
cmp
jp
xchg
rcll
sarl
pushw
push
into
sub
mov
mov
sub
inc
bnd
js
and
and
xor
js
aam
push
iret
sbbb
mov
cmp
rcll
xor
sub
daa
int3
add
leave
add
pop
aad
and
mov
adc
std
pop
jno
pop
jo
incb
aaa
jb
push
jge
push
aas
xchg
cmp
std
add
mov
inc
mov
pop
mov
or
shll
rorb
loope
mov
pop
std
or
in
bound
roll
sbb
lock
scas
push
sub
div
iret
rorb
or
cmpl
test
pop
and
clc
ret
push
mov
jns
insb
jno
cmp
fcomp
insb
mov
arpl
and
cwtl
sub
or
into
scas
icebp
jb
pop
xorl
adc
dec
sbbb
mov
lock
test
les
inc
jbe
lds
jl
popa
test
lcall
inc
xchg
fstps
sub
outsb
inc
dec
stc
test
addr16
or
add
mov
xor
pop
call
and
jnp
shlb
sub
push
cmpsb
jo
scas
lods
cmp
dec
inc
xchg
dec
mov
cs
fidivl
cmc
imul
pushf
adc
dec
fbld
jp
push
rol
mov
mov
bnd
int
lahf
bound
les
pop
popf
cmp
test
jle
mov
xchg
and
cld
adc
pop
addb
jne
cmp
xor
cmp
mov
lret
ljmp
sbbl
cmp
popa
fwait
push
cmpsb
add
shrl
insb
cmpsb
pusha
mov
cmp
jl
imul
xchg
ja
dec
dec
and
pop
lcall
xor
outsb
mov
push
adc
mov
add
popf
mov
test
or
jbe
inc
jge
push
test
or
clc
add
or
mov
add
int3
dec
std
pop
inc
dec
dec
divl
mov
jge
lea
sahf
mov
add
fcompl
ja
test
adc
jne
xor
xchg
inc
mov
in
cmp
fucomi
ret
add
and
dec
sarl
dec
jecxz
mov
push
jnp
inc
push
fnstsw
sbb
sti
xor
pop
xorb
sub
cmpsl
sbb
call
iret
mov
adc
xchg
inc
ss
es
into
lds
pop
jo
lret
mov
and
adc
cmpl
mov
push
ret
divb
lds
xchg
mov
sub
popa
jge
fwait
inc
lods
sbb
sbb
inc
mov
jl
or
or
xchg
ret
or
jo
inc
mov
sub
or
subb
leave
cmp
push
or
add
bnd
pop
insb
mov
loop
lcall
cmp
sbb
sub
pop
xchg
and
dec
pushf
aad
mov
in
inc
sbbl
fadd
cmc
les
std
pusha
lcall
fists
js
push
fdiv
jl
pushf
or
cld
hlt
clc
dec
sbb
dec
repnz
pop
ud1
jb
cmp
mov
add
sbb
hlt
aam
or
scas
cmpsl
inc
mov
insl
dec
lcall
mov
cld
or
pop
fwait
and
pusha
in
xor
sub
idivl
ss
push
decb
lds
mov
fdivrl
pop
shr
jne
push
shrb
sub
push
adc
aas
sub
sub
add
repz
sbbb
jns
sbb
movl
and
xor
cli
inc
je
stos
mov
sbb
nop
xchg
add
jecxz
js
pop
jp
pop
mov
lea
outsb
mov
mov
inc
xorl
orb
pushf
in
sbb
ficoms
mov
std
sbb
adc
push
mov
ljmp
test
xchg
out
mov
dec
stos
sub
xchg
mov
mov
mov
xor
gs
insl
shlb
mov
loope
pop
mov
sub
roll
lret
mov
call
cmpb
rcll
xor
jecxz
stos
insb
shl
cmc
mov
xchg
imul
in
jl
pop
xchg
dec
mov
movsb
mov
sbb
mov
jo
fucomp
lods
outsl
xor
or
pop
in
lea
fisubl
lret
ljmp
pop
push
pop
sub
adc
cmp
sbb
insb
mov
movsl
push
pusha
andb
mov
add
adc
shll
mov
test
fstpl
adc
fstl
ret
cli
rclb
loop
jns
cli
cmp
lret
clc
das
ds
sub
in
into
pop
out
inc
inc
shll
outsl
mov
cmp
dec
xchg
mov
add
mov
iret
aaa
je
dec
test
test
ret
cmp
dec
popa
cmp
pop
jle
ja
pop
in
mov
cs
and
jo
movsl
pop
add
add
xor
jp
pop
das
rol
push
cli
pop
jbe
jbe
rcll
loope
cmpsb
dec
pop
xchg
pop
imul
js
mov
cld
lea
jne
xchg
jle
test
enter
pop
adc
or
mov
cmp
add
divb
jne
sbb
dec
ret
lret
cli
cwtl
cmp
xor
dec
into
mov
mov
call
out
insl
jecxz
icebp
jle
or
mov
or
cmp
in
xor
or
pusha
fistpll
stc
shr
xchg
lret
cmp
es
or
lock
fwait
push
mov
mov
push
push
std
and
sti
lret
pop
lret
jae
test
lods
sub
test
ftst
rorl
pop
cmp
loop
imul
xor
push
pop
je
cli
enter
shrl
xor
sbb
adc
push
aad
add
cwtl
rdtsc
lret
or
lds
xor
jmp
fldenv
jp
mov
outsw
imul
or
pop
dec
adc
pop
in
pop
or
cli
xlat
adc
loopne
push
test
in
xchg
push
and
xor
push
rcrl
imul
notl
mov
clc
adc
aaa
jp
cs
cs
fists
jp
mov
aad
push
fsubs
repnz
pop
adc
push
mov
lods
cld
cmpl
jno
imul
cmp
iret
popf
and
leave
jno
in
mov
aas
cmp
push
dec
mov
and
sub
fstpt
int3
fs
push
aaa
push
lods
jge
cmp
sub
orb
in
cli
mov
add
in
loopne
lret
or
loope
aaa
movsb
imul
push
mov
xor
push
mov
mov
inc
dec
dec
mov
inc
les
and
fcmovb
fdivs
fcomps
dec
faddl
inc
jno
ret
dec
aad
mov
ds
cmp
movsl
xchg
mov
lds
fwait
cmpsb
movb
sbb
rcrb
cmp
test
in
push
clc
or
out
pop
jp
push
imul
out
bnd
ljmp
test
jp
out
fisubrl
wrmsr
les
push
in
push
pop
mov
flds
adc
stc
mov
shlb
sahf
inc
push
pushf
and
outsb
es
cmp
add
mov
sahf
nop
push
xor
fistl
incl
inc
out
or
cmp
je
rcrl
pop
fists
or
xor
arpl
mov
and
mov
xor
adc
insl
mov
es
repnz
push
out
outsl
jge
inc
xorb
jl
inc
jp
jno
jns
mov
fldl2e
cli
in
loope
lret
or
pushf
and
fdivl
xor
cmp
jg
adc
and
test
pop
mov
or
inc
mov
lahf
imul
sahf
dec
sub
lods
mov
cmpb
inc
add
adc
aas
ret
ret
and
cmp
sbb
sbb
cltd
leave
les
fcmovnu
push
out
jb
sbb
out
iret
daa
aam
jmp
orb
fistpl
push
lret
daa
rorb
jbe
sar
shrb
inc
xchg
or
xor
outsl
insl
dec
push
pusha
je
inc
call
and
imul
fndisi(8087
rcrb
xchg
dec
test
pop
xchg
or
aaa
and
cmp
lods
push
push
aam
pop
sbb
mov
mov
ror
pusha
cld
pop
cmpsl
push
mov
mov
bound
mov
xor
js
in
stos
dec
test
mov
div
inc
sbbl
int3
mov
aaa
sahf
push
imul
shll
in
xor
cld
cmp
or
fsubrs
adc
dec
mov
popa
jl
cmpsl
mov
lcall
cmp
fistpll
fnstsw
negb
test
cmp
fstl
push
jecxz
inc
movsl
insb
push
fdivrs
hlt
das
dec
cmp
xor
cltd
xchg
push
add
sub
sub
jge
sbb
xor
mov
sahf
push
or
cli
mov
add
test
jo
ds
shrb
sub
insl
insb
cmc
mov
dec
lea
ja
movsl
mov
xor
adc
movsb
and
into
data16
and
cld
sbb
popf
ss
xor
cmp
ja
gs
push
fstl
icebp
orb
imul
sub
xchg
mov
stos
fidivs
scas
movsb
mov
xchg
fcmovnb
sub
leave
xor
rcrb
jb
cs
dec
clc
lods
mov
pop
pusha
dec
lds
and
sahf
shll
and
dec
push
aaa
mov
mov
mov
cmp
push
xor
ja
ret
jg
mov
mov
fdivs
adc
sub
mov
xchg
jge
outsl
push
testb
pop
imul
inc
addl
inc
clc
rorb
aas
pop
div
or
sti
int
sub
xchg
pop
sbb
add
icebp
dec
fcom
cld
xor
repnz
sbb
xor
add
push
cmpsl
mov
pushf
and
inc
jnp
fcoms
hlt
lss
add
sbb
jle
inc
aad
cmpsl
movsb
pusha
dec
test
lock
les
add
pusha
lds
sti
mov
shlb
dec
lds
in
sbb
lds
jmp
insb
mov
and
xchg
lcall
cltd
pop
mov
outsl
movl
cmpsb
and
push
insb
dec
call
stc
jno
add
dec
movsb
dec
in
jns
mov
cmp
out
or
lods
mov
scas
xor
shll
sarl
into
pop
xor
scas
push
mov
ja
dec
push
scas
in
mov
adc
jl
aas
repnz
insb
xchg
imul
jle
stos
cmpsb
stc
push
push
test
movsb
jb
cmc
iret
sub
pop
push
mov
mov
pop
cmp
fnstcw
sub
loopne
adc
movsb
lcall
testb
sbb
push
mov
mov
mov
xorb
jecxz
in
and
mov
lea
xchg
cld
aad
dec
cmpsl
pop
sub
sub
lahf
shrb
cmc
mov
cltd
int
mov
sbb
push
xchg
in
add
out
xchg
lea
sarl
pop
dec
leave
imul
push
je
rcl
dec
int3
mov
sub
ljmp
cs
lock
std
jl
sbb
sarl
pop
notb
sub
mov
stc
mov
or
lret
pop
lahf
mov
push
lcall
jns
cld
mov
pusha
aad
add
dec
stos
outsb
xor
sub
cmp
sbbl
jp
test
test
enter
adc
add
mov
adc
lret
cmp
movsl
jbe
cwtl
sbb
in
shlb
push
xchg
pop
push
lea
and
movnti
fst
lea
add
sub
add
test
xchg
sbb
push
sub
pop
cmp
inc
adc
test
outsl
sub
cli
pushl
scas
movsb
push
mov
lahf
shrb
dec
xor
xorb
and
or
mov
pop
loopne
leave
test
imul
xlat
out
repnz
call
mov
or
or
mov
icebp
sbb
out
cs
cmp
in
sub
mov
sti
repnz
sbb
sbb
push
dec
lods
mov
insb
xchg
cld
fldt
xor
mov
jecxz
out
insl
mov
cmp
pop
repnz
dec
stos
inc
test
popa
aad
add
add
fcoms
clc
and
ds
dec
mov
in
sbb
pop
scas
pop
rcl
js
pop
movl
outsb
incl
lea
in
pop
nop
iret
arpl
orl
in
mov
and
cmp
push
jp
adc
nop
adc
dec
mov
in
iret
xor
pop
mov
cmp
xor
das
cltd
fwait
pop
imul
shrl
rclb
mov
mov
push
test
jl
add
fs
push
pop
enter
lahf
bound
push
mov
push
std
lods
aad
test
out
cmp
faddl
push
movsl
pop
in
and
popf
out
push
outsl
in
push
push
adc
sbb
cmp
dec
lea
cld
push
imul
add
idivl
push
inc
jno
mov
inc
mov
data16
sub
into
adc
sti
inc
mov
sbb
rclb
lock
ret
jne
psubusw
jp
inc
mov
in
pushf
insl
xchg
pusha
mov
jae
insb
stos
mov
fmull
mull
ficoms
mov
jno
and
mov
loopne
xor
push
fs
mov
pop
cmp
cmpsl
js
add
aaa
fadd
popf
mov
or
xor
mov
xchg
sub
mov
test
sbb
andb
hlt
aaa
sti
cmp
sub
add
and
rolb
push
cld
mov
rol
inc
ret
xor
notb
popf
rorl
or
pop
jg
mov
adc
cmpl
orb
xor
pop
cltd
enter
push
mov
mov
dec
aas
jl
jge
fstpl
outsl
push
add
jno
sbb
cmpsb
dec
add
add
inc
divb
mov
xor
test
cltd
cmp
in
mov
jne
ljmp
or
sbb
loope
add
icebp
sub
mov
out
push
cmpsl
imul
or
or
push
jecxz
bound
clc
jbe
addr16
inc
das
lret
aad
and
mov
cmc
mov
rcrl
outsl
lods
jbe
add
xor
sbb
hlt
mulb
fdivp
sub
sub
das
mov
cld
je
xor
inc
or
mov
jae
xchg
fwait
push
loop
push
mov
inc
xchg
imul
dec
sti
testl
fsubs
mov
mov
scas
push
push
hlt
mov
in
mov
outsb
cwtl
fs
repnz
js
mov
fsubs
cmp
inc
sub
pop
mov
call
xchg
push
push
mov
cs
ret
jo
out
mov
sbb
mov
xlat
and
lcall
movsb
inc
jne
and
dec
add
lret
sbb
xchg
xchg
insl
mov
fwait
out
jbe
mov
rolb
lods
or
test
insl
popa
mov
loop
ja
je
je
rcrl
ret
into
and
add
add
lods
fbstp
or
ficoms
scas
pop
push
filds
cmpsb
sbb
jg
push
or
idivb
adc
mov
pop
mov
inc
add
mov
rcll
push
mov
jl
imul
cmp
and
push
loope
ret
movsb
test
xchg
out
icebp
push
sub
dec
sbb
and
test
out
lods
lret
push
adc
jecxz
jge
out
cli
rcr
shrb
pop
test
jg
push
mov
inc
cli
test
outsb
xchg
cmp
sub
pop
jg
dec
jo
lods
out
or
loopne
in
push
jmp
push
scas
jl
dec
xchg
jb
shlb
inc
xchg
push
xchg
push
loop
aad
lea
dec
ret
addr16
loopne
enter
cltd
or
sub
xchg
cmp
cltd
sub
and
into
sbb
pop
mov
icebp
adc
aaa
fisttpll
ret
add
xchg
dec
mov
jno
pop
hlt
cwtl
inc
inc
sbb
or
in
xor
mov
jmp
cmp
add
add
ss
ljmp
cmp
mov
out
xchg
outsb
adcl
or
sub
lods
or
pop
js
add
mov
jnp
push
cwtl
xor
movsl
push
mov
mov
lcall
ret
xor
push
ds
sbb
sbb
xor
imul
xchg
sbb
dec
mov
scas
movsl
jl
xchg
jle
test
cwtl
mov
cmpsb
sahf
enter
mov
mov
lods
inc
jecxz
stos
arpl
test
pop
mov
or
jge
add
dec
filds
faddl
dec
adc
inc
cs
add
jl
add
xor
push
mov
dec
rcrb
orl
test
outsl
jb
mov
mov
cmc
orb
or
xor
es
dec
xchg
cmp
xlat
divb
push
lea
divl
scas
jno
push
in
pop
mov
shll
mov
adcl
add
repnz
or
xchg
xor
adc
lcall
test
mov
add
jg
inc
add
push
hlt
xchg
in
add
or
gs
mov
inc
cmp
sub
or
fld
mov
mov
pop
mov
sub
dec
push
push
in
and
outsl
ljmp
jb
push
jb
mov
call
xlat
loop
cmp
aam
fcomi
add
jl
xlat
mov
ds
adc
aad
lds
std
adc
stos
jae
fstl
cmpsb
sahf
xor
cwtl
jbe
cmc
pop
fmul
loopne
cwtl
jle
xchg
inc
cmpsb
orl
sahf
xchg
in
cs
cs
mov
cltd
jp
dec
test
imul
aad
ja
sbb
fnstcw
pop
mov
or
jle
popf
add
xor
sub
fidivs
adc
add
es
cmp
loope
das
pop
popf
or
cwtl
jmp
pop
push
xor
movsb
idiv
mov
test
sub
fsubl
lds
mov
out
mov
or
lahf
cmpsb
or
push
mov
push
aas
out
fs
jg
xlat
or
dec
pop
sbb
icebp
mov
xor
pop
pop
mov
push
mov
outsl
pop
and
lock
xchg
sahf
inc
xor
xchg
cmp
xor
mov
ds
shl
stos
cs
jg
xchg
jno
outsb
stos
xchg
sbb
cmp
es
adc
add
cmpsb
mov
dec
dec
push
testb
jbe
xchg
fdivrl
popl
or
xchg
movsb
mov
test
js
sub
icebp
inc
insl
call
mov
pop
mov
or
xchg
incl
scas
mov
push
mov
out
sbb
aad
mov
jmp
ss
out
inc
cmp
clc
pop
test
xchg
repnz
pop
add
scas
aad
jg
stos
jo
cmp
out
mov
jg
or
add
popa
stc
pop
dec
adc
inc
or
pop
jle
dec
cmp
sbb
mov
movsl
cmp
data16
stos
or
imul
test
jns
push
push
in
lds
mov
pop
or
loopne
dec
je
pop
jne
push
cmp
movntq
inc
add
aam
out
negb
sbb
jle
add
les
cmp
test
or
pop
test
pop
aad
xchg
cmp
xor
adc
add
inc
inc
xchg
pop
adc
mov
pop
pop
cs
push
add
arpl
outsb
mov
xor
cs
bound
mov
dec
insl
cmp
or
xchg
xchg
stos
adc
jae
jl
adc
dec
fisttps
imul
pop
cmpb
pop
lret
popa
jo
repz
fsubl
lret
xchg
inc
xchg
popf
jg
aas
adc
jns
nop
mov
inc
cmp
or
jmp
je
out
js
cmp
fbld
not
xchg
push
xlat
hlt
ss
mov
xor
mov
cmp
fldcw
pop
fsubrs
cld
sub
sub
jne
popf
popf
and
out
add
mov
or
add
cmc
add
adc
pushl
ljmp
hlt
xor
inc
xor
imul
lods
pop
push
ret
outsl
mov
xor
mov
cs
or
pop
in
jnp
imul
fisubrl
imul
jmp
pushl
inc
mov
mov
jb
inc
jmp
sbb
test
pop
pop
cmc
mov
sbb
mov
mov
sbb
fisubrl
aam
push
scas
inc
push
andb
out
jo
mov
sbb
dec
push
in
and
int
fcomp
add
push
cmpsl
and
shl
aas
sbb
aad
cmp
addr16
loope
jns
sahf
ja
adc
pop
jmp
adc
push
decl
lcall
jmp
mov
je
dec
in
xor
mov
jnp
xchg
mov
add
or
and
sbb
incb
sti
xor
adc
push
faddl
cmpb
and
or
and
daa
lcall
adc
inc
jbe
jle
fsubrl
mov
ret
mov
aaa
imulb
std
cmp
push
loopne
cmp
push
mov
fildll
mov
mov
in
xlat
sbb
jne
pusha
dec
cs
cmp
push
adc
sti
lret
jo
cmp
pop
stos
add
push
cmpsb
push
clc
rorb
inc
bound
push
mov
and
test
and
jb
mov
and
rclb
iret
jo
les
jmp
insl
mov
jle
loope
int3
test
mov
and
jg
pop
jg
mov
mov
xchg
and
push
test
jl
jno
xchg
mov
cmp
mov
add
daa
inc
test
add
in
add
add
push
outsl
xchg
sbb
xchg
popf
inc
ds
and
mov
mov
sub
sub
in
lret
mov
les
mov
sub
frstor
cs
inc
push
fidivl
mov
or
lods
xor
inc
aam
repz
jg
das
insb
adc
inc
sbb
ret
jb
mov
pop
cli
sub
sbb
ss
sub
inc
cmp
in
sub
mov
jb
xor
int3
jp
add
push
xchg
sar
subl
add
gs
daa
adc
test
scas
or
mov
add
in
mov
xchg
mov
loope
lds
mov
enter
sbb
arpl
addr16
cli
movb
nop
push
mov
lcall
lock
mov
pushf
fld
fxch
mov
std
cmpsl
ljmp
fs
subl
test
push
lahf
es
jle
roll
xchg
mov
pop
mov
testb
mov
or
pusha
or
cmp
test
fidivrl
mov
idivb
test
sub
sub
cmp
push
cmp
push
or
not
mov
jbe
mov
mov
jle
imul
cmp
jle
xor
in
adc
fsub
jecxz
xchg
add
jo
or
sbb
inc
or
idivl
or
popa
xchg
mov
subb
loop
mov
mov
xchg
sub
adcl
jb
ja
nop
and
imul
or
gs
push
sti
js
nop
mov
xchg
dec
mov
hlt
fwait
int3
aaa
mov
mov
sbb
mov
aaa
dec
cmpsb
pushf
mov
shlb
or
rorl
nop
mov
pop
cmp
jge
xchg
dec
dec
loop
sub
stos
or
inc
dec
repnz
add
pop
push
insb
xchg
sbb
sti
jne
icebp
push
clc
adc
mov
sub
mov
push
cmp
xchg
push
add
mov
ret
js
outsb
inc
add
push
jno
fwait
jmp
stc
dec
push
subb
xor
int
xchg
das
repz
mov
ljmp
int3
or
enter
dec
or
into
mov
add
mov
ret
xchg
pop
pop
sbb
dec
sahf
movsb
jl
test
jecxz
inc
xlat
add
andl
push
cltd
std
push
xorb
dec
aam
push
push
mov
mov
lods
jnp
mov
daa
sahf
inc
loop
push
sbb
popf
lods
and
out
or
lahf
fidivs
lock
hlt
push
cld
sbb
pushf
sub
add
loop
ja
int3
pop
pop
inc
scas
in
mov
ja
jae
and
inc
shll
xchg
mov
fistpll
jmp
ficomps
jo
or
push
les
xlat
jo
push
push
cmp
nop
daa
loope
and
shrl
ss
iret
ss
into
mov
xor
aam
and
cmp
int3
inc
test
inc
sti
sub
push
pop
ret
icebp
mov
or
sub
jns
mov
shrb
ljmp
mov
cmp
mov
fld
inc
mov
jl
pop
js
add
lds
xchg
jp
roll
lcall
mov
jbe
mov
outsb
inc
imul
cmp
test
lea
sub
mov
les
in
cmpsl
jmp
jmp
pop
dec
sub
in
cmp
into
xor
adc
push
xchg
stos
es
fildl
in
in
stc
pop
xchg
insb
lock
loop
imul
adc
addb
ret
daa
lret
dec
lret
fst
loopne
pop
mov
les
popf
cmpl
insl
xor
or
stc
aam
mov
sbb
adcl
cmc
sti
jno
shll
or
add
iret
les
add
xchg
cmp
lods
cmpsb
cmp
sbb
or
xor
popa
sbb
pop
pushl
adc
sub
std
or
mov
gs
or
jns
xchg
sbb
cmp
je
mov
repnz
xchg
cmpb
outsb
mov
adc
addr16
xor
jne
mov
mov
mov
orb
das
sti
test
and
aad
stos
or
cmc
adc
rcr
mov
mov
pop
aad
sbb
dec
call
jae
and
adc
das
ret
jb
iret
xor
test
daa
rolb
jle
ds
or
out
pop
hlt
xor
clc
add
pushf
pop
leave
mov
mov
fcompl
push
mov
stos
je
aaa
add
stos
pop
push
arpl
push
fsubr
xchg
push
xchg
mov
xchg
pusha
in
push
sti
and
xchg
loope
aaa
and
incb
shlb
cs
or
fsubl
add
test
cs
jns
cmp
ds
scas
addr16
mov
push
nop
arpl
add
testl
mov
push
push
push
inc
movl
clc
inc
daa
pop
mov
shlb
cli
stos
cmpl
pop
mov
cmp
roll
mov
jp
fdivrl
inc
mov
push
scas
push
or
enter
outsl
add
jae
inc
add
fwait
mov
push
sahf
push
pushl
stos
add
mov
inc
xor
cmp
movsb
push
leave
sbb
xchg
call
inc
sub
push
push
and
adc
cmpsl
jo
mov
cs
sub
sbb
lret
push
loopne
enter
push
ja
adc
push
sub
repnz
in
push
pop
xchg
es
or
movl
fs
jae
movsl
xor
imul
jmp
inc
push
lods
mov
std
mov
std
and
lock
pop
lods
ret
mov
dec
pop
push
mov
and
push
movsl
test
add
and
ds
filds
out
or
push
mov
int
jae
fdivrl
or
daa
xchg
ret
and
pop
or
jbe
dec
gs
adc
or
pop
adc
lret
push
movsb
aad
jnp
mov
clc
or
shrb
stc
and
xor
test
mov
jmp
push
pop
int3
push
or
decl
sub
mov
sub
adc
icebp
and
xchg
jp
jne
mov
mov
mov
int3
push
or
ror
pop
sub
mov
icebp
pop
sbb
stos
rorb
imul
jg
push
mov
call
sbb
daa
push
stos
aam
or
sub
mov
jge
int
adc
orb
jmp
aad
sbb
and
pop
test
insl
and
or
fnstcw
aaa
aas
cltd
jecxz
stos
ss
subb
scas
or
enter
cmp
mov
cmc
imul
dec
jbe
lcall
and
and
arpl
mov
sbbl
jne
mov
jo
push
addl
mov
in
pop
rcll
lcall
sarb
test
fsub
ja
sub
jae
fisubrl
lret
xor
pop
fistpll
or
or
es
xchg
jg
in
push
mov
decl
push
icebp
lea
fists
cli
add
or
mov
dec
lret
and
lret
sbb
loopne
inc
dec
cld
fs
movsb
adc
dec
sub
mov
xor
push
loop
mov
sahf
test
mov
fildl
test
fiaddl
gs
mov
shl
aam
out
shll
mov
addr16
push
dec
mov
jp
cmp
stos
repz
xchg
icebp
xchg
mov
loope
addb
psrlw
insl
inc
fs
mov
in
fs
jecxz
lock
add
in
and
test
leave
stos
dec
cmpl
jnp
cmpsl
popa
out
std
mov
hlt
fs
lret
adc
shrb
cmp
in
out
je
fsubs
subl
insb
adc
fidivrs
inc
fsubrs
popa
orb
popa
or
xor
cmc
shl
icebp
shll
and
and
sbb
divb
cld
inc
scas
ss
inc
sub
rcll
cmp
pop
lds
lret
mov
pop
fsts
out
push
aas
rorl
inc
popa
aad
jb
pop
ret
ret
xor
sbb
dec
xor
dec
mov
xor
jecxz
mov
mov
sbbl
loopne
data16
dec
push
and
int3
int
cmp
sbb
push
addr16
xor
jmp
mov
xlat
pushf
daa
or
push
fadd
sub
into
popa
mov
outsb
and
mov
cwtl
push
xchg
dec
mov
cmp
cltd
push
aas
lea
ficomps
mov
cwtl
adc
mov
in
std
push
fwait
imul
fisubrl
push
or
push
lahf
inc
mov
mov
add
inc
frstpm(287
pop
or
inc
dec
test
sbb
push
push
lods
sbb
jmp
clc
add
cmp
and
xor
aaa
stc
jmp
mov
movsl
std
js
or
cmp
test
pusha
das
roll
bnd
popa
jmp
jge
mov
bound
or
iret
cltd
idivb
lret
and
sub
lods
dec
mov
test
ds
shll
mov
jecxz
in
fcomps
cmc
out
mov
lcall
jl
jg
or
pop
mov
testb
sub
aam
arpl
jne
insb
or
mov
jbe
jae
cld
aaa
xor
xor
sub
movsb
scas
rorl
xor
sub
cmp
frstor
and
xor
pop
loope
out
and
sbb
xor
pop
out
xchg
cs
and
xor
or
ret
popl
push
clc
sub
scas
jbe
mov
or
cmp
fldz
fs
ja
xor
hlt
jge
lcall
arpl
aam
inc
sti
divb
popf
xor
pop
cwtl
pusha
mov
ret
dec
jne
cmpl
lds
cli
movsb
in
insl
insb
fwait
jl
mov
inc
lahf
inc
inc
mov
mov
movsb
sarl
or
xor
adc
popa
mov
int3
mov
jae
enter
mov
sub
and
scas
out
mov
into
push
aad
adc
sbb
gs
jle
jl
pop
mov
lods
subl
inc
aad
push
push
mov
mov
adc
pop
sti
and
fwait
jb
push
xchg
inc
adc
into
mov
pop
cmp
dec
fstps
hlt
jg
push
mov
or
fwait
jns
jmp
popa
shll
imul
jb
dec
sub
sbb
movsl
inc
mov
loop
loopne
add
das
lret
and
and
test
int3
add
inc
jge
in
pop
lret
sbb
jo
sub
push
jo
lea
pop
jp
dec
or
inc
dec
mov
scas
cmp
pop
pop
adc
out
dec
push
mov
inc
mov
test
scas
arpl
subl
call
pop
push
lret
cmp
cmp
jbe
aam
add
pop
jmp
dec
nop
inc
mov
mov
or
pop
xor
push
mov
dec
pop
lahf
les
sub
cmp
add
std
stc
cmp
aad
rol
cmc
fidivs
jbe
movzbl
enter
mov
out
cmp
adc
and
cld
lret
lcall
inc
scas
jnp
sbb
icebp
sub
mov
pop
mov
cli
cmp
popf
push
lods
push
adc
mov
repz
cwtl
inc
pop
mov
test
add
out
int
inc
and
and
flds
mov
mov
cmpsl
pop
mov
xchg
dec
sahf
mov
dec
lods
imul
push
mov
shl
adc
pop
lods
dec
fcmovnu
jbe
out
enter
mov
jne
dec
mulb
hlt
or
negl
iret
push
xchg
xadd
lods
les
mov
sbb
sub
movb
cmp
gs
rorb
xlat
dec
daa
adc
or
bnd
out
add
sub
outsb
add
cmp
fists
or
pop
cmp
lret
pop
add
or
std
dec
leave
insb
in
and
fists
push
inc
clc
lds
movsl
clc
adc
test
fmull
lods
dec
cld
jmp
sbb
daa
add
xor
cmp
call
push
in
jae
clc
aas
icebp
in
push
loopne
push
cli
std
aad
call
mov
pop
mov
shl
jne
stos
jne
mov
mov
icebp
jbe
jmp
aad
push
push
jg
push
mov
cltd
xchg
mov
xchg
xchg
jns
aaa
out
cs
xchg
push
sbb
or
cmp
push
jl
fldl
add
enter
adc
or
jl
pop
cs
lea
sbb
pop
adc
aaa
adc
sbb
or
pop
in
aaa
xlat
sub
add
and
fsubrs
mov
push
mov
adc
adc
or
aad
dec
ljmp
inc
lds
imul
dec
hlt
push
jnp
ja
orl
fwait
dec
les
adc
jge
cs
daa
add
cmp
pop
mov
int3
stos
fisttpll
cli
xor
in
adc
data16
dec
jge
xchg
xlat
ljmp
rorb
jo
xchg
ja
dec
push
xorb
mov
mov
inc
jp
ficoml
rcrl
test
jo
add
push
mov
stos
cmpsl
enter
popf
cmp
ss
pop
sti
inc
fimuls
or
jle
imul
jne
int3
or
mov
xor
and
leave
add
mov
sbb
sub
jge
add
xor
xchg
inc
push
xor
xchg
mov
inc
push
and
sub
hlt
push
shlb
imul
imul
cltd
xlat
or
jg
mov
cli
cmp
dec
mov
arpl
xor
inc
test
xor
xchg
insb
test
inc
mov
mov
mov
dec
or
mov
out
xor
fmull
fmulp
or
es
ss
adc
das
in
in
out
test
std
or
jno
xchg
je
dec
or
je
pop
or
sub
and
jp
jmp
pop
rclb
orb
push
mov
jp
into
popa
mov
add
add
push
inc
rorb
mov
dec
movsl
or
aaa
xorb
nop
jno
or
ret
pop
aad
cmp
inc
movsb
push
inc
cmp
xchg
subl
mov
aas
or
mov
sub
adc
cmc
notrack
xor
andb
add
xor
ret
movsl
dec
and
fiaddl
ret
or
jl
ljmp
mov
enter
call
hlt
sahf
xor
jnp
arpl
jmp
stos
push
call
xor
lds
xor
into
scas
xor
pop
push
aas
mov
xor
inc
mov
mov
not
test
and
cmp
sarl
jnp
pop
in
sbbb
dec
mov
jp
add
test
cmp
pop
mov
jl
jl
inc
leave
pop
push
lea
ljmp
gs
mov
or
dec
hlt
sub
xchg
inc
loopne
loope
jbe
loop
mov
jb
sub
fs
in
pop
test
xchg
inc
lods
pushf
out
lods
pop
test
adc
mov
add
into
sub
and
xor
sub
mov
dec
sbb
loop
fsubs
inc
repnz
and
pop
mov
pop
mov
mov
jp
pop
xchg
insl
negl
hlt
mov
mov
cltd
loop
icebp
add
hlt
ror
xchg
out
pop
mov
dec
popf
inc
sub
push
fcoml
mov
das
leave
cmp
xchg
mov
rclb
into
push
sti
mov
fs
out
push
out
ds
pop
stos
pop
das
sarb
dec
xchg
cmp
sub
nop
jo
mov
adc
mov
xchg
jecxz
mov
xchg
jb
and
dec
mov
mov
cmpsl
repnz
inc
xchg
dec
mov
xchg
add
flds
fistps
or
int3
or
and
inc
cs
aas
fs
mov
popf
mov
and
jge
jl
mov
int3
loopne
jmp
add
mov
sub
movsb
sarl
adc
push
mov
imul
ja
jge
dec
cld
insb
xor
dec
cltd
push
stos
add
aad
lret
sub
xor
ret
mov
dec
stc
in
sbb
add
pop
jns
pop
push
inc
mov
push
fisubs
outsb
xchg
inc
test
sbb
int3
or
jbe
or
je
and
fcmovne
pop
mov
dec
fsubrs
add
sub
sub
sub
jmp
and
mov
orl
or
mov
dec
cmp
dec
xchg
fdivl
push
cmp
xchg
add
pushf
out
test
cmpsb
mov
or
cmp
roll
pop
mov
pop
xchg
adc
adc
stos
jno
dec
xchg
mov
outsb
mov
lods
arpl
aaa
shlb
mov
inc
adc
pop
push
negb
and
test
fcmovnbe
data16
in
add
int3
adc
cmpxchg
xchg
push
pop
push
hlt
cmpsl
sti
inc
lock
push
movsb
adc
das
int3
sbb
sbb
pop
inc
lea
jg
xlat
roll
insb
push
adc
push
inc
inc
scas
shrb
mov
sub
push
call
roll
adc
cmp
fs
rcrl
fimuls
xchg
dec
jbe
pop
cmp
and
adc
repz
stos
add
jl
xchg
push
mov
scas
popf
ja
cs
loop
and
push
fs
mov
pop
mov
adc
dec
mov
jmp
shlb
pop
leave
or
mov
rcrl
dec
xchg
shll
insb
xor
cli
cs
add
aam
cmpsb
jne
dec
popf
fwait
scas
enter
inc
mov
outsb
test
bound
rolb
add
or
xor
and
pop
pop
mov
and
or
xchg
in
pusha
les
call
mov
adc
jp
mov
and
xor
xchg
inc
mov
and
aam
push
xchg
mov
lock
icebp
inc
mov
es
sbbb
push
fldenv
out
in
xor
sti
popa
mov
std
cmp
push
notl
xchg
push
ffree
add
jp
cld
push
mov
jl
mov
mov
cmpb
mov
scas
addr16
imul
dec
andl
aam
sub
mov
dec
xor
popa
call
mov
inc
jecxz
pop
popa
cltd
pop
iret
push
insl
mov
or
or
jp
add
mov
xor
jae
mov
adc
cli
add
xor
dec
sarb
and
adc
push
and
xor
outsb
popa
nop
jnp
loopne
insl
push
xchg
frstor
aad
xor
or
sbb
sbb
or
dec
xchg
inc
pushf
cmp
cmp
es
push
nop
insb
jecxz
dec
add
inc
mov
ret
pop
mov
add
adc
gs
sahf
lods
lret
dec
pop
test
add
add
cmp
repnz
mov
mov
adc
cmp
pop
jns
repz
mov
into
jge
nop
dec
jmp
fcomp
daa
movl
shll
xchg
jge
jne
push
xchg
bound
rolb
enter
stos
sbb
and
stc
das
add
xchg
and
or
fwait
lcall
jp
jb
or
inc
mov
sarb
jo
mov
je
dec
ljmp
push
push
and
jmp
loope
push
jns
loopne
pop
mov
cli
stc
pop
dec
popa
sti
xor
mov
cld
or
movsb
push
sbb
or
adc
add
add
cli
or
rclb
inc
sahf
push
sahf
xor
jp
test
test
or
lds
mov
in
jnp
dec
mov
jnp
repz
gs
push
pusha
push
cmp
out
dec
cmp
xchg
pop
adc
int
lret
push
dec
adc
adc
add
clc
push
adc
jb
xchg
inc
orb
subb
ljmp
mov
mov
cs
push
cltd
mov
push
push
push
and
orl
pop
push
push
iret
je
lahf
push
cld
cmp
and
sarl
xchg
call
xor
xor
push
je
push
inc
fisubrl
cmp
push
and
xchg
inc
mov
lea
xchg
std
jle
mov
cs
popf
js
inc
lcall
repz
imul
icebp
loopne
fs
cmp
xor
push
and
jae
mov
addl
jnp
fwait
jns
mov
daa
iret
call
fmulp
push
sar
out
sbb
out
mov
shll
fnsave
mov
cmp
int
xor
inc
push
out
or
outsb
mov
clc
ja
imul
int
mov
loope
add
xchg
mov
mov
mov
cs
lsl
xor
adc
jmp
or
outsb
push
and
push
xchg
or
add
mov
or
shl
pusha
adc
dec
jle
fimuls
jp
xchg
or
bound
jmp
and
stc
cli
mov
jl
xor
mov
dec
xor
notb
jg
inc
test
in
dec
mov
in
jmp
test
les
xor
xchg
dec
testb
stos
jne
mov
fmull
xor
pop
or
cmp
rclb
cmp
adcl
push
mov
ret
aas
push
mov
int
mov
fsubp
pushf
addr16
enter
negl
dec
cltd
jb
scas
pop
pop
stos
je
add
dec
cmpsb
mov
mov
in
or
and
jle
dec
mov
mov
nop
inc
adcb
cltd
push
mov
mov
fbld
pop
in
pop
cmp
push
testb
test
and
or
lock
lock
inc
imulb
testl
sub
push
mov
xchg
stos
add
das
aas
inc
dec
int3
imul
and
dec
mov
lods
scas
pushf
clc
xor
jl
xchg
add
ds
inc
fsubrl
call
adc
fs
push
sbb
add
add
movsl
jmp
cmc
or
leave
roll
fdivrs
jae
popa
stos
addr16
jbe
cmc
lea
addr16
divb
push
lods
jl
push
sarb
je
inc
leave
sub
push
lea
arpl
xchg
lret
add
stos
int
enter
xchg
out
ljmp
mov
sub
scas
stos
pusha
scas
rolb
push
scas
lock
mov
sete
lods
inc
mov
xchg
inc
test
sub
dec
add
enter
nop
sbbb
add
pop
cli
repnz
or
jle
lods
rorl
subb
popa
into
pop
inc
cmp
inc
cmp
loop
inc
mov
js
xchg
dec
mov
sub
adc
and
aam
lock
fidivs
jmp
call
sub
inc
dec
push
and
stos
inc
cmpsl
jp
jb
pop
xorb
sub
xor
imul
les
icebp
adc
mov
leave
mov
mov
jl
sbb
ja
js
outsb
xchg
pusha
and
add
pop
cmpsb
xor
and
mov
xchg
scas
scas
test
and
mov
ret
fisttps
negb
pop
mov
xor
dec
rorb
scas
sbb
pop
out
mov
mov
adc
sti
mov
scas
jg
inc
mov
jno
or
mov
repnz
jmp
aaa
ret
mov
sahf
mov
faddl
or
in
add
inc
xchg
dec
insl
jmp
mov
inc
inc
test
xchg
js
adc
aad
jmp
jb
inc
call
ja
in
sub
or
sbbb
adc
pop
and
sbb
sbb
inc
ficomps
lret
and
dec
leave
aaa
loope
adc
or
dec
xor
or
cmp
adc
scas
push
js
fcomps
shll
lret
xchg
pop
cmpsb
int3
dec
loope
xor
into
int3
out
in
ds
negb
imul
push
loop
inc
sbb
sub
test
dec
push
arpl
dec
and
out
test
mov
insb
xchg
cmp
jns
ds
xor
aas
sub
cmp
pop
insl
sub
bts
pop
ds
jns
in
repnz
or
xor
jp
js
out
and
push
dec
dec
mov
xchg
popf
mov
mov
leave
jno
aas
xchg
loope
addr16
adc
pop
out
mov
stc
push
xor
xorl
ja
add
mov
sub
xchg
faddl
add
push
mov
cmpsb
pop
repnz
sub
out
mov
je
pop
inc
adc
in
mov
out
mov
cmp
adc
pop
sbb
adc
sub
cmp
cmp
in
es
pushf
cmp
bound
out
cmp
xchg
or
adcl
int3
add
mov
dec
lret
sbb
mov
inc
rep
cmpsl
rolb
xorb
jo
sub
inc
sahf
aad
test
out
ss
and
outsb
jge
flds
mov
inc
or
dec
inc
add
int3
sub
out
jo
jg
and
icebp
mov
fsubrl
sub
push
jnp
mov
mov
fs
outsl
fsts
nop
jb
push
cmpsl
fisttpll
cltd
jne
nop
in
mov
xor
mov
outsb
dec
pop
es
sub
arpl
or
xchg
iret
cli
sub
push
cmc
popf
gs
pop
mov
es
and
jns
fidivrs
in
add
xor
das
sbb
and
stos
test
scas
stc
or
add
jmp
sub
outsl
stos
mov
cmpsb
mov
stos
ljmp
mov
gs
in
outsl
push
add
imul
test
mov
cmpsb
fnstcw
or
testb
ljmp
push
xchg
jno
ret
dec
push
rorb
or
jno
dec
jg
inc
xor
xchg
jg
ja
xor
int3
arpl
shl
subl
ss
lea
mov
jg
stos
pushf
lea
mov
dec
cmp
pop
lock
xchg
pop
mov
loope
fisubrs
mov
ret
cwtl
test
sti
outsl
pop
cmp
jecxz
pushf
sbb
dec
sbb
repnz
lea
out
adc
loope
adc
jge
xor
sbb
js
je
adc
mov
xchg
into
movsb
pop
scas
and
and
or
test
or
std
mov
stos
rcr
fidivs
sub
sub
andb
xor
fistpll
xchg
lahf
fsubs
lods
leave
mov
aaa
push
xchg
cmc
mov
call
and
nop
push
mov
sub
pop
adc
or
fs
test
jl
xchg
adc
pslld
lds
ficoml
pushl
xlat
test
popf
mov
mov
sub
inc
cmp
mov
push
test
inc
inc
fs
ret
xor
ljmp
in
xchg
ror
jbe
ret
les
adc
scas
push
mov
callw
pop
mov
idivl
shll
sti
jmp
pop
and
push
in
cmpsb
sub
rcrl
add
inc
lahf
fcmove
xchg
pushf
inc
adc
sti
mov
or
stc
icebp
push
or
leave
nop
outsl
testb
mov
cmp
shr
or
nop
pop
sahf
ljmp
iret
and
or
or
cmp
dec
sbbl
sub
dec
mov
jnp
adc
adc
dec
subb
bnd
in
ja
cli
in
dec
lret
adc
int3
gs
ds
popf
clc
imul
pusha
xchg
pushf
jmp
jb
out
dec
es
test
mov
push
pop
xchg
into
or
dec
pop
enter
pop
mov
xor
les
dec
stc
sahf
dec
cmp
lret
jg
xchg
inc
cltd
pop
or
add
rclb
push
adc
mov
addr16
push
fisttpl
jne
pop
adc
adc
and
mov
mov
cmc
push
xchg
lret
lods
inc
add
loop
daa
adc
out
clc
out
pop
cs
xor
jnp
adc
inc
mov
enter
es
fcmovbe
in
push
jmp
mov
add
cltd
nop
sbb
mov
dec
test
pop
fildl
xchg
lea
popa
jbe
imul
pop
out
jbe
inc
pop
mov
pop
mov
mov
aam
dec
dec
mov
sbb
or
cmp
cmp
lret
arpl
loope
das
test
hlt
popa
aaa
arpl
mov
adc
les
xchg
test
outsb
js
mov
add
outsl
popf
mov
jmp
clc
add
cmp
jmp
pop
popa
icebp
push
mov
repnz
sbb
dec
xchg
ds
pop
jno
ss
and
or
clc
jno
or
lods
sub
sbbl
add
faddp
and
push
addr16
inc
sbb
push
lret
mov
clc
into
push
add
enter
vmwrite
mov
xchg
cmpsb
outsl
cld
add
out
gs
adc
mov
cmc
shll
mov
ljmp
pushf
or
es
loope
andl
and
cmp
mov
push
sahf
mov
cmpsl
sbb
mov
jb
inc
sub
es
aaa
repnz
push
push
adc
sub
repnz
xchg
mov
scas
cmpsb
arpl
and
mov
inc
jae
xlat
in
rorb
push
and
inc
xchg
sub
pop
add
roll
sub
mov
pop
sbb
popf
sti
rclb
adc
ljmp
xchg
movsb
fistpl
dec
sarb
popa
xchg
lock
call
test
insl
nop
dec
mov
jns
jle
cmp
jbe
cmpl
adc
xor
inc
out
mov
xchg
xor
outsb
fisubrl
mov
lahf
xchg
jne
inc
call
xchg
js
dec
fwait
mov
jp
inc
and
xchg
push
mov
or
lahf
jp
pusha
loopne
nop
push
pop
mov
shrb
cmp
mov
xchg
jg
sbb
add
sub
and
das
sahf
das
mov
imul
lcall
int3
scas
jnp
push
into
xchg
jns
pusha
into
cmp
push
addl
mov
jo
jae
movsl
xor
adc
or
fildll
fmuls
in
push
int
adcb
or
sub
dec
fcmovnb
mov
out
jnp
mov
push
dec
mov
js
cmp
add
test
mov
cmpsb
rep
fstps
loope
enter
mov
pop
sbb
pop
repz
lods
push
sbbb
es
jbe
imul
sbb
mov
push
js
test
daa
jo
dec
xchg
jbe
fsubs
mov
jne
rorb
cmc
xchg
cltd
adc
cmpxchg
fisubs
inc
int3
pop
dec
fstps
adc
add
roll
popf
rorb
push
fwait
or
dec
test
ja
mov
bound
lret
dec
repnz
sub
loopne
enter
shlb
lret
mov
add
clc
adc
lret
push
jmp
les
and
xchg
push
into
or
push
ficomps
leave
inc
idivl
mov
cmpsl
pop
jnp
xor
idivl
bound
je
mov
dec
mov
aaa
ret
push
scas
add
inc
cltd
push
mov
lods
pop
mov
inc
mov
lds
addr16
jp
mov
push
and
shll
dec
ljmp
mov
lea
mov
int3
daa
push
test
stos
jp
cli
push
mov
popa
aas
nop
push
shlb
lds
jbe
lret
repnz
or
sbb
out
push
jbe
test
mov
ljmp
clc
or
hlt
hlt
sub
movsb
push
lds
fsts
inc
fimuls
ja
js
xor
movsb
inc
pop
lcall
push
adc
xor
hlt
icebp
or
add
imul
clc
rorb
xor
xchg
add
decl
ljmp
cli
aas
ja
loopne
loope
leave
inc
mov
mov
bound
fadds
repnz
data16
push
test
jb
retw
adc
sub
sahf
lea
add
pop
mov
test
and
fnstcw
int3
or
decb
out
lea
pop
adcl
in
jne
sub
fwait
sbb
lcall
mov
cmc
jle
cmp
lock
mov
push
mov
mov
imul
mov
jns
cmp
or
cli
sahf
scas
pop
inc
imul
or
stos
jb
cmp
or
cs
dec
mov
icebp
add
push
cld
in
xchg
jp
jg
adc
cmpsb
les
pusha
add
data16
push
movsb
push
sbb
adc
call
xorl
mov
jle
fnsave
xlat
or
pop
or
icebp
test
xor
mulb
jno
movsl
xor
or
es
xor
xor
and
movsl
jo
mov
imul
sahf
dec
mov
scas
xchg
add
jb
dec
cmc
out
add
sbb
add
not
and
icebp
add
ss
jecxz
shll
shrb
cmpb
push
mov
out
push
sub
mov
cwtl
daa
subl
lcall
pop
mov
jl
cmp
sbb
push
cmpsl
lret
fs
adc
adc
and
add
and
adc
sbb
xor
scas
push
mov
cli
pushl
xor
jp
jecxz
fs
xor
add
mov
out
pushw
and
lahf
jo
sbb
mov
fisubrs
cld
ja
imul
sahf
imull
fldenv
cmpsl
sub
push
push
add
outsl
movsl
hlt
or
push
add
arpl
stos
arpl
or
add
or
dec
test
mov
mov
mov
inc
iret
add
pop
sub
mov
dec
mov
and
adc
push
sub
and
pusha
mov
mov
jns
mov
iret
jecxz
pop
mov
pop
jmp
mov
sahf
test
jnp
jnp
nop
dec
mov
insb
int
inc
test
scas
or
hlt
mov
lea
jg
sub
push
mov
ja
mov
push
jge
popf
xor
mov
iret
je
lods
mov
gs
and
repnz
les
lea
cmp
jne
add
mov
cmp
ljmp
cmp
sub
aas
mov
movsl
mov
sahf
stos
mov
test
lea
jo
imul
into
xchg
inc
fmull
int3
sbb
and
cwtl
jg
sub
sbb
or
pop
push
sub
sub
ret
adc
jg
data16
minps
nop
cmp
jbe
test
jecxz
rorb
stos
scas
cmp
adc
in
sbb
pop
insb
shr
add
xor
jno
mov
jl
sub
and
lock
pop
and
mov
rolb
rcrl
mov
sbb
pop
sub
in
xor
aad
out
lock
inc
ljmp
push
lods
rcl
xchg
xor
mov
mov
mov
inc
in
outsb
fdivr
subl
add
add
push
dec
xorl
mov
cmp
fsubs
movsb
mov
inc
mov
into
add
sbb
adc
loope
loope
or
lcall
or
into
xor
xor
leave
adc
add
mov
lret
pop
mov
orb
mov
inc
pop
in
in
lret
pushf
or
sub
aad
fists
xchg
jg
pop
xor
icebp
mov
loope
push
mov
add
mov
push
mov
jae
imul
dec
mov
sbb
add
addr16
lods
and
jp
cs
or
leave
ret
pop
pop
mov
popf
mov
js
cmc
cmpsl
xor
sub
jns
inc
and
iret
xchg
imul
xchg
pop
in
add
adc
xor
aaa
add
fsubl
fisubs
add
inc
daa
fninit
push
mov
xor
je
out
insb
pushf
rorl
mov
add
into
or
notb
insb
pop
insb
add
push
mov
fdivrs
mov
rcll
jae
dec
adcb
imul
leave
pop
idiv
jmp
or
pop
mov
fs
punpcklbw
xchg
sub
std
cmpsb
mov
push
test
into
xchg
pop
mov
pop
lods
jns
lahf
insb
pop
mov
pop
inc
jnp
mov
ss
inc
pop
loope
dec
push
or
push
nop
lcall
mov
jne,pn
addl
loop
in
cwtl
or
and
sub
or
xor
adc
lea
cmc
mov
jbe
jno
and
shll
dec
mov
roll
fildll
enter
sbb
insb
or
and
clc
aaa
push
cld
xchg
and
jg
inc
jle
adc
push
call
test
decl
leave
sbb
add
and
lea
xor
sbb
hlt
jge
shll
pop
out
jb
negb
les
push
jo
mov
mov
inc
scas
out
hlt
mov
mov
jge
jb
test
cmc
ret
xor
push
push
dec
mov
hlt
sbb
jg
sti
dec
mov
jle
stc
js
nop
xchg
add
sub
mov
jb
jae
lea
pop
stos
mov
pop
stos
push
lea
xchg
scas
jae
sub
scas
pop
mov
mov
gs
call
sti
xor
lods
enter
fcoms
push
mov
stos
xchg
add
add
push
mov
mov
popa
mov
sub
sub
or
xchg
mov
xchg
adc
xlat
into
or
sub
daa
decl
xchg
dec
jecxz
or
sub
mov
add
stc
xor
cmp
js
ret
sub
add
ror
bound
lock
sbb
insb
cmp
aaa
out
push
mov
lock
loop
adc
dec
mov
adc
in
scas
jl
adc
push
outsb
mov
mov
jge
cs
jno
js
clc
push
fcoml
out
fisubs
mov
repnz
dec
pop
std
cmp
negb
aas
fwait
pop
cmpsl
addb
fs
repz
mov
or
pop
jle
pop
and
and
insb
les
or
ljmp
lods
adc
outsb
pop
rorb
rcrb
shld
das
movb
data16
or
add
subl
fsubs
xchg
jl
stos
cmp
inc
lahf
inc
movsl
sbb
add
mov
call
cmp
or
push
adc
cs
inc
pop
xchg
ja
fnstenv
stc
icebp
add
fnstsw
adc
sahf
xchg
or
lret
jle
jecxz
mov
and
mov
jl
dec
xchg
inc
push
sahf
dec
adcb
stc
add
outsb
stos
jp
fwait
pop
xchg
icebp
inc
dec
div
sbb
dec
leave
add
in
jns
push
inc
sahf
imul
or
clc
test
gs
data16
cwtl
jg
xchg
je
or
out
jmp
movsb
je
adcb
loope
mov
lret
nop
mov
dec
xchg
stc
lret
jne
pop
mov
mov
mov
pop
xchg
push
addl
fldl
iret
xchg
and
jmp
enter
sbb
ds
lcall
mov
push
in
lret
and
mov
xchg
inc
outsl
inc
dec
jne
outsl
xchg
xchg
pusha
mov
xchg
inc
mov
std
sbb
pop
aam
stc
test
stc
xor
shlb
push
inc
fdivrs
paddsb
pop
mov
jp
fidivrs
std
sbb
adc
cmp
data16
push
int
sbb
inc
mov
sti
paddq
jg
or
xorb
push
pop
xchg
xchg
adc
mov
enter
adc
ljmp
sbb
stos
jbe
mov
xlat
sub
pop
rcrl
mov
daa
jae
insb
push
xchg
sub
dec
movsl
shll
sub
je
dec
mov
repnz
jb
sbb
movsb
test
cmpsl
dec
push
mov
add
out
mov
lret
xor
sub
pop
push
pop
fmulp
dec
push
in
sbb
les
inc
in
add
scas
dec
aas
cmp
orb
arpl
push
ret
mov
sbb
push
sub
fcompl
dec
rorb
aad
pop
cmc
xor
dec
and
fisttps
cwtl
cwtl
add
inc
call
stos
push
pop
les
pop
lahf
xor
mov
pop
scas
jns
and
dec
cmpsl
je
cmp
mov
jo
pop
adc
xlat
mov
mov
test
sub
cmp
dec
out
aad
jle
inc
rorl
jo
or
cmpsb
pop
enter
adc
sub
adc
out
jae
sbb
mov
les
out
pusha
mov
cmc
test
inc
mov
jle
xor
sarl
cmpsb
shlb
cmpsb
push
sub
add
sti
add
mov
inc
notb
or
xlat
sub
mov
push
lods
cmpsl
inc
xchg
xor
les
dec
mov
add
cs
sub
test
test
shlb
push
jmp
cld
cld
insl
dec
insl
pop
dec
imulb
icebp
aam
loopne
add
mov
cs
adc
xchg
xor
adc
xlat
xchg
or
push
cmp
clc
adc
stc
push
pop
faddl
loopne
xchg
orb
and
sbb
and
xor
or
and
jo
jne
dec
add
enter
int
adc
stc
xor
and
dec
mov
mov
movsb
xchg
adc
mov
jle
pop
outsl
loopne
pop
pushf
mov
out
cmp
adc
mov
push
fwait
inc
cmpsl
jno
sbb
cmpsb
mov
orb
or
shlb
xor
push
pop
cli
and
dec
fdivrs
xor
cmp
jmp
lods
outsl
mov
inc
cmpsl
push
movsb
mov
shrl
xchg
push
add
sub
aad
jmp
push
enter
or
fiaddl
rcrb
sub
subb
in
pop
cmp
xor
daa
pop
ljmp
sbb
dec
jbe
adc
int3
push
call
inc
sub
jns
and
cld
xchg
mov
fisttpl
lods
mov
xchg
mov
push
dec
adc
outsb
jg
inc
outsb
or
aas
sub
jge
out
push
jle
test
mov
push
inc
sbb
out
pop
mov
mov
paddw
and
lgs
xchg
push
sub
dec
lock
into
imul
or
jle
or
cmp
adcl
and
test
dec
aaa
sbb
fidivs
dec
or
fldt
rclb
outsl
add
jnp
jo
xor
pop
fldcw
out
pop
in
pop
outsl
popa
loope
movsl
xor
xor
imul
daa
sub
int
mov
add
js
adc
mov
stos
fldlg2
jo
sub
cli
jl
pushf
push
sbb
pop
push
andb
repz
jno
je
cmp
inc
out
or
xchg
inc
pushf
clc
out
clc
data16
clc
adcb
fisubrs
cmp
fsubl
daa
out
stc
cmp
add
dec
pop
or
add
sbb
pop
in
mov
jge
pop
test
mov
out
lds
mov
js
mov
lcall
bound
mov
mov
outsl
mov
mov
clc
cmpb
test
lods
sbb
pop
stos
fidivl
sbb
imul
lahf
add
arpl
adc
jp
jmp
sti
mov
jnp
pop
or
cld
mov
lea
mov
pop
sti
xor
pop
jg
mov
fdivrl
aad
jl
add
jg
sub
mov
sbb
dec
movsb
jns
insl
add
mov
daa
mov
fistpll
mov
cltd
mov
push
into
push
rcrl
mov
or
fimull
int
mov
sbb
popa
xor
ret
int3
mov
adc
out
fsubs
inc
dec
fcmovnu
out
aas
enter
loop
icebp
cmp
clc
cli
mov
in
dec
scas
aas
cmp
and
aam
mov
movsl
inc
in
jae
bound
mov
push
pop
pop
scas
popf
inc
push
arpl
addr16
lcall
dec
mov
mov
pop
push
dec
mov
in
push
pusha
adc
test
inc
xchg
imul
add
iret
jns
sub
shlb
sti
cmp
ds
pop
fdivl
sub
hlt
mov
js
popa
and
neg
pop
arpl
lods
ret
jnp
lret
cmp
pop
pop
jno
aad
ljmp
add
cmp
push
ja
mov
xchg
decl
xchg
lret
dec
in
movsl
lods
dec
cmpsl
pop
sarb
mov
push
enter
inc
mov
cmc
out
pop
sub
aam
and
xlat
es
mov
mov
xor
icebp
mov
enter
pushf
dec
ss
mov
add
stos
mov
rcll
mov
dec
leave
popa
fisttps
cmp
mov
adc
insl
sbb
xor
hlt
mov
fs
mov
in
mov
inc
mov
cli
fs
jno
imul
sti
in
cmp
test
iret
add
outsl
outsb
add
lcall
push
insl
xor
int3
jns
inc
stc
in
jo
rorb
mov
sub
mov
ljmp
enter
sbb
and
xor
fs
add
sbb
lcall
or
inc
insb
scas
push
mov
popf
test
pop
push
mov
dec
sub
xchg
loop
dec
cmp
jno
cmp
sahf
arpl
cwtl
arpl
and
mov
pusha
adc
addr16
jns
sarb
popa
das
test
aam
popf
testb
mov
sbb
xor
leave
cmp
xchg
shll
loop
or
mov
scas
int3
cmp
mov
or
outsb
in
xlat
pop
inc
fwait
jle
jbe
push
jbe
cmp
inc
jnp
negl
dec
pop
movsl
mov
sahf
push
dec
rcll
add
inc
aas
mov
dec
stos
jno
sub
aas
pop
pop
into
pushf
adc
jecxz
roll
pop
out
ret
ja
addr16
loope
lods
or
push
cmp
cmpsl
sbb
and
xchg
push
scas
andb
jbe
inc
xorl
mov
scas
xor
ja
andl
pusha
xchg
sbb
mov
mov
push
and
jle
fidivrl
leave
pop
insb
add
inc
lret
lcall
lods
xchg
ret
ljmp
fdivrp
aam
add
call
mov
pop
mov
push
stos
add
flds
xchg
and
xchg
jo
cmp
jp
out
sub
add
push
enter
inc
add
scas
lret
mov
stc
mov
andl
in
fistps
mov
jnp
outsl
or
call
cltd
dec
movsb
js
pop
testb
mov
into
and
mov
leave
into
inc
jge
ret
adc
cmp
popa
mov
xchg
fnsave
sub
gs
cmp
dec
and
incb
or
ja
insl
xchg
lret
loope
popa
scas
inc
into
adc
stos
or
jbe
shrl
mov
sub
xchg
or
pop
mov
sbb
cmp
inc
inc
mov
xor
xor
loope
hlt
adc
insb
aas
arpl
push
cmp
sbbl
cmp
dec
stos
mov
sbb
cli
movsb
xchg
lret
jo
insl
cmp
sub
pop
fimull
and
pushf
sbb
in
lods
push
mov
outsb
cmpsl
jp
pop
sub
xchg
dec
push
cmpsl
inc
jl
cltd
mov
cmpl
push
pop
inc
ljmp
xor
dec
pop
sbb
push
enter
fmuls
cmpsb
cmp
dec
sub
pop
iret
rclb
fsubrs
ffree
into
imul
pusha
sub
lods
data16
mov
inc
mov
xchg
xchg
push
cmpsb
xchg
xchg
in
push
scas
aad
addr16
adc
notl
push
dec
mov
mov
push
sbb
xchg
mov
faddl
dec
loopne
sub
fsubrs
scas
addr16
clc
movsl
mov
sti
sti
loope
mov
sahf
fst
add
sbb
insl
out
out
sub
stos
mov
adc
pop
es
inc
cltd
inc
ja
push
ds
mov
cmpsb
iret
jg
jl
jbe,pn
mov
loop
inc
mov
insl
dec
xchg
jbe
sbb
out
sbb
aas
mov
fildll
outsb
sahf
jg
pop
pop
repz
xor
sbb
mov
jmp
sbb
bound
pop
repnz
loopne
inc
std
cltd
fnstenv
jecxz
fucom
imul
xor
pop
push
cmp
fisttpl
out
mov
mov
bound
push
jne
cld
mov
jne
jg
call
fstps
inc
push
push
sahf
xchg
fdiv
dec
xchg
test
mov
mov
ds
cmp
idivl
lods
enter
int3
cmp
call
jge
mov
cs
sahf
pop
xchg
push
cmp
mov
mov
dec
negl
mov
ljmp
push
sub
xor
mov
mov
mov
testl
mov
adc
in
sub
int
sbb
xchg
pop
repnz
ja
int
add
sti
dec
movsb
jg
dec
lea
or
mov
adc
xor
in
imul
cwtl
in
mov
lock
pop
pop
lock
add
dec
jg
sub
sbb
lock
ds
dec
mov
test
and
push
insl
cmc
lret
mov
sub
arpl
push
lea
sti
and
push
dec
stc
in
ds
test
pop
arpl
fcomps
add
pusha
sbb
inc
xchg
push
nop
ds
loop
add
sbb
fstl
fdivs
in
aas
inc
mov
cs
sbb
int3
add
addl
pop
scas
xchg
inc
jp
mov
inc
dec
vdivsd
cwtl
gs
in
pushf
cmp
mov
cmpl
dec
inc
adc
sbb
mov
insb
pop
repnz
pop
push
outsl
xlat
mov
pop
ss
and
ds
test
pusha
lds
adc
push
inc
aaa
inc
rcll
cmc
sti
decl
mov
pop
repnz
mov
xchg
data16
jo
adc
movswl
addr16
mov
popa
xchg
nop
mov
cmpsb
jmp
fldenv
repnz
jne
mov
push
pop
imul
rcrb
inc
xor
mov
jnp
ds
enter
jle
imul
rcrb
jecxz
push
in
sti
ret
jae
push
or
push
cwtl
or
lock
mov
int3
adc
popf
or
repz
lods
push
shlb
daa
icebp
into
push
pop
adc
adc
sbb
cli
sub
mov
xorl
pop
push
mov
mov
mov
ljmp
mov
push
fsubrl
and
out
jne
adc
and
mov
push
mov
push
mov
ja
lahf
adc
and
jle
popl
in
lcall
shlb
pop
pushf
or
jns
test
xchg
xchg
es
cld
fwait
mov
lcall
jecxz
aad
pop
cs
jmp
adc
movsl
lret
mov
jecxz
cmp
dec
pop
xchg
pop
movsb
add
test
mov
scas
xor
in
pop
pop
jmp
pop
addr16
rclb
sbb
dec
dec
fdivrs
xlat
enter
inc
js
dec
mov
insb
cmc
nop
pop
lds
into
mov
mov
sub
ja
mulb
mov
shr
test
or
es
clc
loope
lds
jp
sti
xor
xor
push
mov
mov
add
loop
xchg
add
rcl
lods
pop
jns
mov
add
enter
and
fwait
push
jo
adc
push
aad
ror
in
add
stc
mov
jmp
xor
dec
loope
fwait
out
outsl
jg
js
rep
pop
bound
adc
sub
inc
insb
sub
inc
push
fnstenv
lds
inc
pop
loopne
push
mov
pop
pop
ret
lods
xor
xchg
pop
iret
mov
bound
sahf
mov
insl
ret
adc
aad
jb
sbb
sub
mov
sbb
and
adc
or
pop
xchg
cmp
shlb
jbe
push
inc
neg
cld
mov
mov
or
out
xlat
push
add
xorl
and
adc
cmp
popf
sub
dec
leave
pushf
loopne
in
bound
fisubs
cld
push
out
xorb
sub
xor
pop
pop
mov
out
mov
jle
mov
pushf
push
out
int3
jmp
out
mov
jns
jl
push
sbb
outsl
or
dec
into
scas
add
mov
shlb
ja
xor
pop
lahf
inc
insl
call
std
pop
out
sub
pop
push
jmp
sbb
pop
push
mov
pusha
stos
pop
nop
or
sbb
ds
test
pop
adc
mov
push
and
mov
add
inc
jecxz
pusha
xor
lock
and
jmp
inc
stos
sbb
inc
lret
push
add
xor
lcall
jne
rorl
sub
loopne
mov
inc
xchg
jno
clc
mov
and
ffreep
ljmp
bound
mov
xchg
cmp
pop
jge
dec
mov
dec
mov
mov
pop
ss
xchg
scas
les
test
out
mov
cmp
mov
fisttpl
push
pop
imul
jg,pt
cltd
add
test
loopne
xor
out
or
sub
loope
shlb
ja
es
sub
or
cld
andb
faddl
dec
push
and
jnp
xchg
aad
xor
fisttpl
and
in
add
jno
mov
aad
cmc
jb
dec
and
rorb
or
lcall
dec
cmpsl
std
lcall
sub
movsb
sbb
cmp
ret
jle
xor
lret
cmpsl
into
and
cmp
dec
and
cmpsl
std
lret
fildll
cmp
nop
repz
cmp
or
outsb
cmp
xchg
lock
in
sahf
mov
adc
sub
and
xchg
push
test
ja
test
jbe
sub
rcl
popf
add
adc
pop
or
cltd
cmp
and
ficoml
loope
lods
mov
leave
gs
subl
sub
arpl
and
aad
mov
adcb
jb
es
leave
lods
and
mov
repnz
pop
xor
sub
repnz
decb
jl
cwtl
mov
pop
jne
cmp
sub
arpl
mov
pop
pop
ss
pusha
xor
lea
cmp
outsl
dec
bound
jmp
jp
xchg
mov
inc
jns
fldt
inc
inc
imull
sbb
mov
stc
mov
and
push
loop
adc
lods
andb
mov
rcll
aad
pop
repz
outsl
into
aas
lock
xchg
mov
push
sahf
mov
call
lret
mov
cmp
scas
push
push
mov
out
inc
aad
add
flds
jg
xchg
ret
sbb
sub
in
mov
lea
pusha
out
pop
mov
adc
jnp
popf
out
cmp
int
sub
or
cmc
repnz
int3
cwtl
pop
cmp
mov
out
or
inc
loop
loope
fisubrl
subb
scas
int
in
lret
pop
mov
sub
push
cld
jbe
mov
xlat
add
test
outsl
jg
out
inc
pop
mov
loop
xor
mov
enterw
outsb
lret
pop
pop
pusha
movsb
sub
inc
out
dec
adc
aad
pop
add
jge
lret
aas
mov
das
pop
repz
arpl
cmp
cltd
repnz
adc
cmp
cwtl
jb
and
sbbl
jmp
xchg
mov
jae
cmp
jle
add
mov
cltd
test
enter
stc
or
pop
dec
cmp
cmp
lea
sbb
push
mov
cmp
aad
or
jg
and
ficompl
mov
mov
das
or
mov
shrb
mov
mov
sti
mov
add
xchg
ljmp
or
mov
xor
or
and
fisttpl
pop
sub
push
ds
adc
out
push
push
je
inc
add
test
rcrl
mov
lds
jle
push
add
sbb
mov
sub
lock
xchg
xchg
pushl
fbstp
jge
xor
dec
mov
jg
xchg
add
cltd
leave
scas
ret
push
add
add
pop
xchg
xchg
leave
lock
inc
cmpsl
imulb
mov
ret
adc
pop
dec
mov
lret
sub
test
std
inc
pop
lcall
fwait
mov
jo
lcall
js
mov
xor
xlat
pop
adc
cmp
jns
hlt
cli
dec
popf
or
push
enter
aas
stos
cmp
imul
jecxz
repz
mov
repnz
stc
jp
test
or
aas
enter
mov
mov
inc
fdivrl
push
mov
push
dec
dec
jbe
sbb
xchg
mov
out
loop
jo
nop
dec
cwtl
ss
pushf
ss
test
fisttps
mov
push
gs
sti
mov
xchg
fidivl
shlb
popa
lret
loope
fwait
das
ret
jle
stc
push
movsb
fldenv
stc
mov
scas
ljmp
in
dec
cwtl
and
pop
ret
mov
adcb
stos
gs
inc
sub
mov
and
and
in
inc
inc
into
lods
xchg
stos
xor
push
xchg
outsl
mov
mov
daa
sarl
cmc
sbb
mov
mov
nop
insb
fdivl
add
mov
inc
paddusb
out
ss
dec
pop
push
lock
xchg
or
or
aas
int
cmpb
jmp
add
add
inc
std
sahf
and
lahf
nop
inc
cmpsb
cmp
repz
sub
mov
ror
pop
daa
jecxz
in
mov
into
lret
and
fldcw
lret
cmp
in
incl
test
std
mov
add
or
das
mov
xlat
pop
mulb
fsubr
sub
xor
in
push
jno
aaa
pop
inc
cmpsb
lcall
mov
divl
cmpsl
nop
push
mov
fs
pop
shlb
nop
jae
jb
sbb
mov
sti
xchg
out
pop
test
xor
aad
jb
test
push
fwait
push
mov
lock
xchg
repnz
xor
jle
push
sub
cld
adc
inc
es
fisubrs
ret
or
int3
add
test
std
pop
xchg
loopne
sbb
pop
sub
fildll
sub
cmc
pop
in
jbe
sahf
stos
daa
xchg
cs
sub
arpl
mov
clc
cmpl
es
pop
dec
add
mov
imull
jbe
dec
sbbl
std
or
adc
xchg
clc
mov
and
pop
xor
rorb
inc
mov
pushf
mov
xor
cmp
insb
outsl
imul
sub
sti
mov
stos
jle
xor
ljmp
arpl
sbb
scas
mov
out
pop
mov
int
in
dec
adc
adc
fs
lahf
cmc
cld
jl
xor
inc
jb,pt
out
pop
or
mov
inc
fidivl
xchg
jmp
mov
mov
nop
mov
dec
sub
dec
shr
test
lret
sub
mull
dec
jbe
stc
loopne
fdivrs
mov
dec
jl
rol
out
sub
cmc
cwtl
das
jl
data16
repnz
dec
jmp
imul
lds
cmp
fisubl
xor
xor
pop
xor
pusha
out
ret
enter
inc
andl
test
jl
pop
mov
push
idivb
sub
js
fisubl
int3
pop
outsb
in
jns
jmp
pop
addl
inc
pusha
ret
loop
aam
loope
aad
dec
xlat
jo
add
shlb
in
xor
lods
out
into
push
sahf
dec
adc
cmp
dec
mov
aam
sub
or
dec
ret
push
repnz
and
call
push
call
add
fidivrs
lahf
sbbl
pop
sti
mov
dec
sub
icebp
xor
adc
frstor
jl
fstpt
pop
pop
lcall
cmpsl
stos
or
sbb
and
mov
adc
pushf
in
cmp
sbb
push
pop
mov
jnp
jbe
jmp
stos
mov
cs
sarb
mov
or
push
push
cmpl
xchg
jmp
addr16
aad
shl
aam
movsb
inc
fiaddl
in
fwait
sahf
fldt
fidivrl
shrb
sub
pushf
adc
inc
jmp
and
lods
out
or
mov
push
push
pop
std
cs
mov
pop
popa
iret
cs
mov
leave
gs
out
pop
icebp
or
pusha
lret
fwait
test
jge
and
shlb
aaa
jg
mov
xchg
pop
bswap
shl
imul
into
std
loope
mov
xlat
clc
mov
leave
mov
pop
push
and
xlat
inc
add
in
mov
inc
and
inc
add
addl
cli
dec
call
insl
arpl
mov
cwtl
adc
out
xchg
cs
icebp
call
pop
jp
data16
stos
mov
pop
ret
sarl
xor
adc
cs
cmpsl
inc
addr16
cld
cmp
add
psrad
sbb
ret
insb
rolb
scas
aam
cmp
insl
stos
sbb
lds
mov
fs
je
popf
fiaddl
or
jg
ljmp
fprem1
dec
adc
mov
gs
cmp
dec
mov
mov
adc
stc
cmp
fbstp
push
inc
out
scas
in
jo
cli
mov
mov
jecxz
push
bound
push
add
cmp
pop
lret
mov
xor
int
ss
cli
cmp
fwait
es
cld
pop
mov
cmp
fidivs
neg
mov
sbb
sub
mov
pop
adcb
mov
jns
or
push
push
or
adc
mov
lret
bound
movsb
push
sbb
fidivrl
cmp
inc
les
lods
or
mov
jmp
fldl
cmp
int3
movsl
cwtl
dec
cmp
vaddps
popf
mov
iret
sub
loope
incb
fwait
scas
fidivrs
dec
jge
aaa
xchg
cmc
cld
mov
in
jge
xchg
jmp
adc
ret
or
mov
or
out
sub
mov
xchg
cmp
enter
push
pop
iret
andl
pop
cmp
aad
push
cmp
vpcomd
pop
mov
and
pop
cmp
es
jne
or
js
and
sbb
stos
xchg
sub
xor
and
cmpsl
xchg
lock
mov
adcb
out
repz
pop
cwtl
nop
mov
pop
push
jnp
nop
jge
add
lret
addb
hlt
dec
add
jo
mov
repnz
sti
rorb
das
addl
jg
and
test
repz
outsl
lds
cld
pop
add
cmp
push
inc
or
sub
mov
jb
mov
in
inc
fsubp
mov
push
adc
mov
mov
nop
cltd
ret
adc
and
xchg
xor
loope
sbb
les
pop
push
imul
mov
jae
ja
scas
mov
aam
cmp
sub
dec
ss
xor
popa
jo
jmp
in
fwait
jo
sub
mov
daa
fisubs
and
or
or
mov
jno
lcall
sbb
int
cwtl
lret
mov
cmc
stc
jnp
jg
mov
cmpb
fs
mov
mov
xchg
push
cmp
jo
push
mov
sub
sub
push
xchg
jbe
sub
sbb
mov
sub
std
and
jbe
cli
lods
aam
into
pop
sarl
rcrl
push
xlat
xor
or
shrb
emms
jle
loop
lock
add
cltd
test
cwtl
push
xchg
repz
insb
shl
and
mov
inc
cmpsb
adc
outsb
mov
popf
jne
dec
jle
push
andb
pop
push
xor
rep
out
push
out
cmp
dec
sbb
xchg
jns
xchg
add
xchg
add
flds
dec
or
xor
xchg
pop
xchg
sub
pop
add
adc
roll
mov
jbe
adc
xor
pop
fmuls
loope
mov
insb
mov
and
jns
pop
stos
and
mov
mov
cmpb
loop
stos
pop
mov
arpl
sub
sbb
mov
rclb
push
xor
cmp
cmpsl
lea
pop
cli
or
mov
add
imul
subb
push
out
dec
ds
in
or
inc
test
inc
cli
cmp
xchg
jge
ret
les
pop
xchg
dec
sarb
jo
mov
dec
cwtl
lahf
pop
lods
jne
cwtl
imul
adc
inc
out
add
lret
cli
mov
sahf
mov
mov
sarb
xor
je
jmp
fistpl
adc
iret
adc
jle
cld
mov
out
hlt
fistps
pop
ss
add
ljmp
subl
clc
add
mov
mov
adc
xchg
sub
vpaddb
pop
popf
xchg
cwtl
push
fs
xor
and
aam
cmpsl
cmp
fwait
add
jp
jnp
sub
adc
ds
mov
ds
xor
sbb
xchg
scas
cmp
mov
add
cmpsb
cmp
orb
dec
sbb
inc
and
and
pop
add
je
jge
fidivl
dec
pop
jecxz
imul
mov
data16
in
xchg
lret
ljmp
loope
push
imul
add
int3
xchg
movsb
icebp
mov
sub
jl
mov
lods
jne
lret
xchg
pop
test
mov
pop
enter
jns
lea
dec
icebp
into
adc
jmp
push
and
cmp
pop
sbb
scas
xorb
dec
jecxz
std
pop
push
std
xchg
sahf
mov
jb
pop
mov
test
sub
leave
pop
hlt
jno
hlt
pusha
rcrb
stos
push
mov
dec
adc
imul
push
inc
loopne
lods
cmc
xchg
or
fwait
sub
mov
lret
xchg
and
pop
shll
movsl
in
test
pop
adc
pop
jns
xor
std
dec
mulb
mov
popf
jbe
lret
mov
sbbl
lahf
outsl
fidivrs
je
adc
cltd
lret
dec
je
dec
mov
pusha
mov
dec
in
sub
jo
ljmp
mov
xchg
adc
sti
pop
pusha
es
addr16
push
sarl
loope
mov
test
int3
add
loop
rcrl
sbb
lret
popa
insb
cli
and
adc
mov
repz
jge
scas
ljmp
int
mov
call
bound
bound
pop
mov
stc
cmp
fildl
mov
inc
dec
or
pop
or
xchg
inc
dec
pop
sbb
adc
int
das
ud1
out
jnp
test
fwait
cmp
add
push
sarl
fld
aas
xor
cmp
pop
mov
clc
pop
xlat
ss
ds
jmp
in
xchg
dec
sbb
cmp
test
ror
jle
jnp
add
pop
out
jg
jmp
insb
mov
xor
cwtl
std
in
stos
in
movsl
popfw
js
pop
jge
ret
jg
add
mov
mov
mov
movl
mov
cmp
add
jmp
xor
push
and
xchg
into
sub
pusha
call
mov
sbb
mov
cmp
mov
fcompl
or
rol
sbb
aaa
cmp
inc
clc
jae
adc
xchg
push
sub
outsl
mov
aad
leave
loopne
sub
fistps
dec
rorb
sub
add
into
popa
and
sub
das
cmpsb
call
daa
addl
int3
adc
sbb
dec
js
in
mov
push
push
in
xlat
jnp
jle
mov
pop
das
fimull
mov
sub
ljmp
mov
mov
sbb
call
das
dec
xchg
mov
or
and
adc
arpl
push
xchg
jns
imul
pop
int
pop
push
stos
scas
push
cli
push
mov
and
mov
rcrb
jle
inc
mov
hlt
fs
sahf
lock
jp
or
nop
xor
pop
pop
mov
jnp
mov
sbb
test
into
movsl
sahf
sub
jle
ja
out
jmp
mov
xchg
pop
dec
std
xor
inc
xchg
das
jo
in
shll
mov
and
and
lods
popa
les
jo
daa
out
and
fcomi
or
jg
jg
test
aas
in
xlat
jbe
pop
xor
pop
loopne
push
inc
or
xchg
pop
cwtl
push
push
into
inc
les
mov
xchg
xor
pushf
mov
out
dec
filds
into
mov
push
fnstsw
adc
fcoml
loope
rcr
arpl
cltd
pop
add
js
mov
push
cld
adc
imul
cmc
xor
add
hlt
ds
fwait
cwtl
adc
fnstcw
mov
mov
iret
push
inc
push
xlat
clc
inc
mov
xor
popf
pushf
xchg
rorb
mov
out
push
rcrb
jnp
fsubrl
stc
push
shl
sub
add
rcrl
leave
mov
loopne
in
mov
cmp
fbstp
int3
sbb
cmp
mov
popf
fcoml
jp
stos
movsb
sbb
inc
pop
push
imul
mov
xchg
cmp
aad
push
orb
sub
lret
fsts
mov
incl
xor
inc
inc
out
and
in
outsb
inc
lcall
icebp
test
xchg
cmp
jecxz
sub
adc
inc
outsl
and
mov
sub
pop
mov
sti
lret
mov
or
xor
popa
dec
mov
roll
movsl
adc
jle
rolb
push
jmp
and
push
jns
jae
jo
jle
out
mov
insl
subb
lds
inc
out
pop
in
inc
xor
sbb
xchg
pushf
cmp
add
fsts
jmp
cltd
pop
icebp
ljmp
cmp
push
dec
pop
hlt
js
lods
data16
mov
xchg
adcb
cltd
shll
adc
cmp
push
mov
pop
mov
and
dec
add
insb
jmp
mov
ficomps
test
jge
jae
xor
pop
int3
or
insb
mov
mov
ss
jecxz
jmp
add
in
dec
lret
iret
cmc
sbb
or
cmc
and
jl
das
mov
cmp
insb
adc
jg
xchg
fdivrl
xchg
fisubs
stos
ss
cltd
jmp
jg
gs
testb
loopne
xor
inc
xor
push
pushf
mov
hlt
pop
adc
cmpsb
popa
cltd
ret
test
enter
jmp
jns
enter
add
xor
pop
lds
pop
cwtl
aaa
js
subps
cmpsb
push
pusha
in
jmp
ret
add
das
cli
or
cmp
push
jbe
inc
xchg
pop
das
setns
pop
and
xor
xchg
nop
fisttps
imul
mov
dec
fsubl
mov
xchg
fwait
pop
add
rcr
adc
das
jmp
mov
mulb
cmp
and
add
ficompl
enter
popa
push
sbb
cltd
in
pop
mov
pop
lods
mov
cmp
adc
je
xor
outsb
out
adc
scas
pushf
scas
test
loop
mov
jae
je
adc
mov
cmpsb
aas
cmpsl
mov
jg
imul
pushf
mov
mov
mov
pop
xchg
shrl
inc
fiadds
ds
cmpl
jae
leave
das
sub
stos
data16
sub
icebp
mov
or
xchg
sub
inc
jae
movsb
outsl
lcall
scas
mov
nop
xchg
loope
add
adc
pop
aas
inc
and
lds
or
fcoml
aam
mov
mov
push
xchg
cmp
jmp
xor
sbb
pushf
pop
dec
cld
lods
mov
lcall
xor
call
pop
hlt
xor
test
push
lahf
push
mov
xchg
lea
adc
stos
jb
mov
sarb
dec
xor
shll
es
jbe
gs
addr16
lods
pusha
mov
gs
jbe
jmp
repz
cmc
frstor
enter
mov
or
movaps
mov
mov
sbb
jbe
in
test
or
adc
xor
fsubp
sub
xchg
fdivrs
cltd
mov
les
add
cmp
or
mov
fisttpll
xchg
aaa
ret
sub
sub
dec
cli
or
xor
mov
daa
les
xor
inc
fcmove
ljmp
lock
je
jno
xor
lret
and
sub
and
push
add
mov
mov
xchg
adc
leave
jbe
movsl
or
cmpsb
xchg
out
dec
in
add
repz
insl
outsb
insb
push
int3
pop
mov
fiaddl
pop
mov
xchg
ss
scas
push
push
jl
sbb
rcl
scas
and
mov
call
and
mov
iret
test
addl
es
das
inc
push
mov
or
sub
inc
sub
add
mov
pusha
sub
inc
xor
xchg
jmp
outsb
adc
adc
mov
push
or
scas
leave
or
fsubrl
dec
pop
psadbw
imul
xor
add
lods
adc
or
fstpt
imul
insl
dec
pop
mov
mov
and
inc
fistps
mov
or
fldenv
xchg
cmpsl
bound
dec
iret
inc
dec
fs
scas
ss
je
cltd
in
loop
fwait
sahf
xor
add
test
xchg
fisttpl
stos
mov
push
shrl
imul
loop
mov
ss
hlt
cwtl
adc
push
or
sti
inc
lds
xor
cmp
sub
mov
pop
notl
cmp
push
mov
push
call
dec
mov
sub
push
out
ja
int3
sub
lahf
js
sahf
push
mov
or
rorl
xlat
imul
dec
dec
scas
lea
repz
pop
adc
es
testl
pop
popf
mov
pop
test
mov
outsl
int3
push
in
jno
xorb
addr16
xor
push
shlb
bound
pop
xlat
call
call
cs
or
sub
mov
push
pop
dec
test
jno
jmp
shl
inc
jp
mov
jl
jl
ret
push
mov
pop
and
xor
cmpsb
aas
mov
jecxz
jge
xchg
iret
jle
in
imul
jo
pop
test
fisttps
pop
xlat
out
xchg
addr16
es
push
sbb
pop
jecxz
sub
xchg
and
sti
xchg
and
imul
lock
aam
xchg
ja
test
lds
sti
xchg
jb
pop
ret
push
repz
lock
fldcw
enter
and
mov
movsl
jl
push
cmp
hlt
pop
mov
scas
fimull
cmp
inc
scas
jo
leave
or
in
xchg
ja
into
cmp
insb
sbb
or
mov
insl
cltd
stos
popf
xchg
or
int
jl
lods
sahf
adc
and
push
ret
std
les
pop
out
adc
xchg
popa
cmp
shll
dec
mov
cld
ret
jg
out
leave
push
movb
mov
hlt
mov
call
cmp
mov
jbe
xor
data16
mov
mov
js
in
jge
test
insl
pushf
dec
ss
xchg
or
and
int
in
xchg
xor
sub
sbb
scas
shlb
inc
loope
scas
lcall
lret
xchg
lods
push
inc
pop
loop
out
loop
inc
sbb
mov
push
adc
and
xchg
rcr
add
inc
ficomps
ja
aaa
mov
pop
mov
push
dec
add
and
sub
loopne
fldenv
stc
jl
dec
adc
lds
int3
cmc
punpckhdq
mov
lds
jecxz
rcrb
enter
pop
xor
mov
in
arpl
push
cmp
pop
and
repnz
or
jae
scas
pop
add
xchg
fimuls
pop
int
jg
je
ds
push
dec
addb
push
ljmp
orl
mov
rcr
sub
je
add
or
mov
icebp
xchg
sbb
xchg
insb
pop
add
sbbb
add
pop
mov
fldl
push
sti
fnstenv
jmp
shlb
xor
in
sub
or
push
mov
cmp
pop
aas
inc
mov
test
jecxz
loop
jge
lahf
add
mov
aam
mov
cmc
jmp
int3
lret
lock
out
mov
or
pop
stos
dec
imul
adc
imul
addr16
mov
repnz
cltd
clc
xchg
stos
cmp
mov
sbb
and
sbb
mov
in
cld
pop
and
jg
sbb
les
ret
pop
insb
push
push
pushl
inc
lock
jmp
aad
dec
jbe
add
and
add
dec
sub
xchg
rclb
sub
jo
cmp
push
hlt
jg
jp
push
cmp
dec
adc
xchg
into
inc
lods
imul
lcall
add
dec
rcl
fisubrs
dec
add
dec
loopne
scas
notl
jecxz
leave
adc
sub
ret
gs
lock
movl
sbb
lahf
in
xchg
mov
and
jns
or
mov
jmp
sub
xchg
push
mov
or
inc
xor
push
mov
push
daa
adc
xor
or
js
mov
ret
movsb
adc
mov
out
insl
inc
into
fldt
cmp
incb
push
clc
scas
mov
pop
push
xlat
cltd
pop
es
jecxz
mov
divl
mov
mov
addb
push
icebp
sub
adc
popf
dec
fidivrl
jle
push
jo
lret
fcomp
jne
push
popa
test
insb
or
test
out
shll
nop
stos
dec
xchg
add
mul
inc
dec
dec
cmp
cltd
popa
dec
inc
add
les
xchg
mov
dec
nop
dec
cwtl
pop
and
cmc
arpl
sub
sub
add
or
cs
inc
sbb
icebp
aaa
jmp
jp
pop
mov
outsl
or
sbb
mov
sub
int3
mov
pop
mov
sub
cld
rcl
outsl
xor
je
pop
ret
xchg
movsb
jb
push
stos
inc
mov
lea
dec
jns
outsb
xchg
or
roll
mov
add
adcl
les
mov
lret
and
lret
or
mov
jbe
xor
stc
xor
jmp
rorl
jns
lock
pop
mov
jns
mov
pop
jmp
je
out
fs
xor
iret
pop
pop
arpl
sub
push
sub
jno
insb
popf
fmuls
fwait
xor
mov
mov
mov
mov
lods
hlt
bnd
pop
and
mov
addr16
sbb
cmp
lret
pop
pop
pushf
js
jecxz
fdivl
inc
cmp
mov
cmp
enter
sahf
call
adc
dec
fistl
inc
adc
repz
adc
repz
inc
ss
xor
gs
dec
and
xchg
insb
aad
lahf
ret
xor
out
jg
fisttpll
ja
or
pop
sub
into
dec
sub
cmp
movsb
inc
gs
sbb
data16
cli
lret
mov
add
pop
jae
shll
add
xor
jnp
ret
sbb
roll
sbb
mov
lds
in
add
repnz
ja
dec
je
adc
aaa
test
sti
mov
push
dec
int
pop
cmp
inc
and
xlat
stos
cmc
push
addl
mov
and
sti
int3
pop
outsb
in
inc
cltd
js
into
dec
xor
lret
sub
lds
sbb
dec
cli
int
fidivs
xchg
pushf
adcb
cmp
pop
push
push
movsl
or
imul
popl
pminsw
fildll
in
adc
aaa
inc
pop
pop
or
adc
push
jg
shrb
fidivrl
mov
lea
in
adc
nop
daa
mov
mov
outsb
in
jnp
dec
mov
dec
fbstp
inc
fimull
and
insl
daa
mov
imul
mov
repz
out
jo
cmp
add
adc
out
or
cli
cmp
lahf
cmp
pop
shlb
test
cwtl
sub
add
or
inc
push
test
add
bnd
cltd
outsl
mov
push
lea
data16
enter
outsb
insb
lea
pop
mov
pop
leave
push
jp
inc
lret
dec
out
addr16
jmp
cmp
add
xchg
lods
and
adc
fnsave
andl
fdivs
les
int
leave
jne
and
pusha
mov
arpl
hlt
daa
out
jecxz
lods
imul
imul
into
out
xor
sub
in
inc
xor
mov
mov
mov
push
pusha
lahf
push
es
shll
scas
cmpsb
sti
outsb
xchg
inc
push
xchg
repz
pop
push
sbb
insl
xchg
jl
jg
je
in
xor
sti
sub
lock
sbb
je
mov
sub
xchg
sbb
pop
out
jo
pop
sub
adc
out
pop
sub
jnp
test
jae
jnp
andl
and
mulb
out
lahf
jne
inc
mov
jle
cwtl
or
sub
pop
jno
cli
mov
mov
ljmp
add
lcall
das
pop
ror
sbb
mov
leave
cltd
aaa
pop
cwtl
lahf
cmp
cmp
pop
call
out
inc
push
jp
inc
jmp
hlt
push
or
pusha
rcr
push
hlt
pop
inc
or
test
inc
or
decl
gs
or
out
dec
sub
pop
out
add
gs
jns
pop
hlt
pop
lods
jne
push
adc
jae
push
jecxz
jg
repz
inc
dec
rorl
dec
roll
push
cli
jle
jp
push
dec
je
xor
mull
jno
push
inc
dec
mull
inc
stc
jbe
jae
out
sbb
and
sbb
repz
movsb
adc
adcl
out
data16
jecxz
addr16
adc
xchg
jge
pop
pop
ss
adc
and
push
in
push
sub
mov
cmpsb
push
rcr
arpl
popa
inc
push
xchg
mov
inc
push
out
mov
cmp
call
mov
jbe
iret
into
sub
sets
and
enter
dec
hlt
ret
ljmp
xchg
sbb
shrl
inc
aas
aaa
stos
xor
mov
outsl
mov
hlt
inc
outsb
jmp
mov
fs
mov
mulb
push
add
jg
cmp
dec
ret
pop
aam
cmp
rcr
inc
cmp
inc
fxch
mov
sbb
in
sbb
dec
jp
arpl
mov
or
sub
loopne
sbb
xlat
mov
and
add
gs
and
pop
imul
aam
push
cmp
adc
and
iret
loope
xor
xchg
mov
filds
xor
mov
cmc
mov
cmp
pop
mov
inc
mov
lds
pop
sarb
in
cwtl
data16
lock
pop
adcl
push
push
dec
push
fs
adc
inc
insl
cmovbe
data16
dec
and
inc
ja
aas
inc
dec
push
adc
addr16
push
pop
push
aaa
imul
add
cmp
sub
or
dec
jbe
push
test
out
pop
fists
mov
fildll
in
jg
push
lret
bound
dec
lret
or
negl
push
xchg
jmp
bound
pop
out
lea
data16
mov
xchg
mov
pop
cmpsl
repz
movsb
push
and
xchg
mov
inc
movsb
ret
push
jp
out
pop
cmp
repnz
jne
adc
mov
ror
sbb
cwtl
dec
mov
jbe
sub
loope
test
push
mov
je
or
sbb
gs
mov
xchg
test
mov
mov
xor
pop
repnz
enter
mov
aas
hlt
adc
jmp
mov
aas
shr
call
dec
adc
xor
jecxz
ret
fwait
xchg
out
ret
jbe
ss
pop
xchg
and
jmp
mov
jb
sbbl
lock
dec
mov
push
mov
aas
jo
jo
jge
or
arpl
pop
movsl
imul
aaa
iret
inc
fcmovnbe
xchg
loop
out
fcomps
icebp
fwait
xchg
and
and
xlat
shlb
pop
pop
add
jl
mov
testb
sub
pushf
mov
inc
call
mov
sarl
mov
rcrb
fwait
jmp
xor
mov
jns
stos
insl
mov
lods
or
inc
andb
frstor
mov
mov
lahf
push
popf
jecxz
into
pop
iret
mov
and
movsl
iret
dec
fwait
push
in
dec
pusha
lock
jns
push
movsb
xor
cli
xchg
or
fs
jmp
sub
iret
pop
and
imul
stos
shrb
repnz
xchg
bound
add
xchg
jmp
sbbb
push
push
je
adc
subb
cld
mov
push
xor
sub
imul
shrl
adcb
subl
mov
mov
and
cltd
jmp
int
insb
mov
jb
fstps
cmc
in
mov
aaa
fiadds
scas
jge
sbb
ret
inc
mov
pop
leave
adcl
bnd
gs
add
cmpsl
outsb
icebp
loop
idivl
out
pop
lods
loopne
inc
xchg
or
pop
mov
pop
out
push
sbb
loop
sahf
ret
repnz
nop
iret
inc
clc
popf
dec
fxam
lods
mov
orb
xor
sub
push
cmp
and
sbb
clc
sub
test
je
push
xchg
sbb
mov
sbb
aaa
and
mov
pusha
leave
sahf
ret
cmpsl
and
aaa
jecxz
sub
xchg
shlb
int3
mov
aad
imul
fisttps
lds
lahf
jo
bound
mov
test
int
aas
cmp
dec
lock
mov
in
push
stc
sbb
adc
dec
bound
inc
icebp
mov
and
mov
adc
xlat
fcoml
or
iret
repnz
icebp
popf
enter
mov
popa
jp
sbb
sub
inc
xor
pop
mov
push
ja
popf
jbe
arpl
push
cmp
jno
cmp
mov
cld
lahf
int
in
mov
jmp
jp
pop
mov
imul
mov
add
cwtl
in
mov
aas
inc
pop
jecxz
xchg
pop
stos
mov
push
adc
xor
test
pop
ja
lret
or
mov
mov
stos
mov
mov
and
into
test
mov
cmp
mov
das
inc
repnz
xchg
jne
aam
arpl
pop
movb
pop
sbbl
fs
xchg
and
and
das
mov
xor
ret
loopne
int3
test
and
push
aam
mov
xor
push
push
into
push
inc
xor
daa
mov
jne
xlat
popf
adc
jae
cld
out
mov
addr16
fstl
or
xor
adc
pusha
iret
fs
insl
fmul
inc
dec
int
filds
xchg
mov
add
and
add
inc
out
mov
scas
mov
cli
jecxz
pop
pop
ljmp
aaa
daa
cmpsl
jmp
xchg
jg
movsl
cwtl
dec
gs
in
mov
jge
loop
int
js
shll
cmpsb
daa
hlt
cs
push
mov
test
in
orl
push
inc
test
dec
inc
sub
pop
dec
mov
dec
shrb
xchg
pop
into
inc
das
cmp
stc
icebp
pop
aas
ds
into
decl
inc
scas
ljmp
cli
outsl
sbb
mov
sbb
xchg
xor
inc
aaa
fbld
jbe
pop
xchg
lock
rolb
decl
enter
packsswb
add
dec
iret
daa
push
imul
insl
xchg
pop
jb
inc
or
mov
lea
pop
xchg
pop
mov
mov
or
faddl
call
sar
js
daa
mov
icebp
mov
pop
mov
cmp
gs
fidivs
adc
or
push
movsl
sub
sub
xor
repz
mov
dec
mov
mov
adc
aas
je
outsb
push
loop
adc
add
mov
imul
mov
xor
push
adc
sbb
outsl
fwait
aas
loope
inc
ficoml
sarl
stos
jb
mov
daa
jge
cmp
and
ret
sbb
sbb
loop
xchg
sub
jae
mov
mov
cmp
fbld
stos
xchg
jle
cmpsb
lret
test
xlat
in
dec
lahf
lretw
aaa
and
pop
sub
cld
in
and
fwait
xchg
jbe
push
add
scas
jmp
pcmpgtb
lcall
mov
push
scas
xchg
shr
jmp
dec
or
jne
scas
lods
mov
mov
xchg
data16
call
and
xchg
xchg
cmpsl
das
js
jae
hlt
adc
push
jb
sti
popa
imul
mov
jp
mov
sub
and
out
outsl
hlt
mov
popf
movsl
fidivrl
xchg
insb
xor
out
add
mov
rcl
dec
or
adc
subl
lret
clc
inc
mov
push
cmp
mov
push
mov
xchg
cmc
sbbb
sbb
and
imul
in
sbb
xor
nop
mov
sub
inc
sti
push
movsl
xor
sbb
lcall
inc
pop
aad
mov
sbb
lock
xor
pslld
ja
ljmp
sbb
dec
fldt
mov
jo
xor
mov
xchg
nop
rolb
jmp
sbb
ja
and
sarb
std
jmp
adc
movsb
and
add
sti
das
mov
sbb
pop
adc
push
dec
test
inc
fistl
clc
fs
pop
gs
jno
sub
cmp
repz
dec
inc
xchg
inc
inc
sub
rcrb
das
das
pop
orb
addr16
mov
mov
mov
cmp
lret
pop
mov
test
scas
mov
mov
dec
stos
bound
mov
int
dec
adc
fs
stos
lcall
and
push
jb
imul
mov
mul
aas
rcrl
aam
in
pop
ficoml
aam
xlat
xorb
jg
jns
subl
leave
pop
pop
mov
jmp
dec
cs
leave
aas
or
mov
dec
inc
lret
mov
test
mov
pop
mov
je
pop
in
mov
sbb
cmpsb
cmpsb
aaa
adc
sbb
inc
and
jae
ret
into
or
int
lret
ds
push
icebp
in
cmpsb
stc
mov
inc
pusha
add
and
in
leave
add
popf
and
push
pop
scas
out
mov
lock
mov
cmp
scas
and
xchg
xchg
xor
pusha
cmp
mov
test
inc
fsubrl
test
xor
insb
mov
sbb
out
pop
popa
les
movsb
ss
out
lods
add
in
mov
ja
iret
lea
sub
inc
mov
jo
add
rorl
adc
fdivl
test
mov
mov
mov
push
cmp
movb
push
sbb
test
xor
and
pop
mov
or
xchg
dec
pop
pop
hlt
out
mov
sbb
test
jb
sti
adc
popa
int3
push
jne
cmp
xor
pop
jb
fists
sbb
xlat
adc
movsl
cmc
push
cli
test
les
lret
cmp
xchg
insb
scas
fsubp
stos
pop
mov
jle
in
push
rcll
xchg
lods
aam
push
sub
das
mov
adc
inc
mov
jge
or
loop
fsts
mov
inc
pop
jecxz
loope
jb
call
call
test
xchg
adc
xor
int3
mov
iret
push
addr16
test
push
call
stc
inc
loope
out
or
aaa
fisttpll
push
cmpsl
sbb
add
push
jno
jle
lods
pop
mov
xor
adc
push
adc
cmp
ret
lods
xchg
pop
xchg
sbb
cmc
adc
lea
scas
orl
stos
sub
les
mov
stc
mov
cmp
xchg
mov
lock
xchg
mov
repnz
pop
inc
test
stos
push
and
cmc
les
add
or
jns
jmp
push
inc
cmpsl
xor
mov
xchg
int3
rclb
xchg
jmp
int3
mov
mov
xchg
loopne
rcl
je
mov
add
lahf
test
jp
lock
or
pop
pause
push
xchg
aas
cmp
sbb
xchg
cmp
popa
fidivs
add
xor
or
pop
insl
rcrb
fidivl
sbb
dec
fwait
cmpsl
int3
je
mov
loope
mov
push
dec
loopne
xor
mov
repnz
mov
mov
and
jb
adc
mov
cs
lods
in
sbb
mov
idiv
mov
leave
inc
or
test
or
fisubrs
cmp
add
dec
ljmp
int3
push
cmp
adc
outsl
and
jns
or
inc
push
sub
int
mov
test
je
sbb
cwtl
je
and
inc
aaa
in
xchg
imul
jb
add
xor
addr16
insb
inc
inc
sub
icebp
data16
ja
aam
pusha
ljmp
and
fcoml
and
lcall
add
lcall
mov
sahf
movsl
lds
adc
mov
into
daa
push
or
jae
sub
jns
push
out
mov
in
test
or
push
lahf
push
jb
dec
push
popa
adc
cmp
dec
or
cld
pushf
adc
subb
nop
jb
sub
mov
jl
test
mov
sahf
xor
repnz
out
je
sahf
xchg
jmp
mov
sub
imul
arpl
out
mov
mov
aad
aam
dec
das
add
push
fwait
push
roll
rcrl
dec
test
les
inc
xrelease
sub
xor
xlat
ret
sti
hlt
shl
mov
fsts
into
into
divl
jb
push
andl
or
jmp
daa
or
pop
jo
dec
into
xchg
jecxz
push
adc
push
xchg
enter
stos
cmpsb
dec
pop
push
fistps
idiv
icebp
pop
or
xchg
ret
mov
lret
es
sbb
mov
add
push
xchg
fucom
jae
xor
mulb
fdiv
dec
add
out
rcrb
je
out
jecxz
lret
dec
loop
lret
xor
xchg
js
xor
into
pusha
sbb
xor
push
inc
adc
imul
mov
mov
or
repnz
addb
aam
repnz
mov
mov
push
mov
pushl
push
sbb
fidivrl
push
mov
adc
int3
lods
shl
jns
sti
mov
mov
jle
sahf
pop
mov
adc
aas
cmpl
mov
enter
inc
clc
ja
jnp
fadd
sbb
xchg
sbb
lock
add
xchg
pop
mov
movsl
mov
pop
int3
xor
in
leave
add
pop
mov
cmp
pop
icebp
pop
mov
adc
ja
aaa
sbb
lcall
ss
and
pushl
int3
sarl
popf
mov
mulb
je
and
repnz
addl
movsl
call
inc
mov
sub
fcomps
leave
popf
sbb
jno
mov
cmp
insb
jle
test
fs
mov
dec
adc
jge
push
movsl
pop
jle
pushf
mov
test
xchg
lds
sub
xor
lods
es
std
push
cmp
mov
sbb
sahf
jns
xor
lret
rcrl
movsb
cmc
out
nop
xor
ror
scas
sbb
or
pop
adcb
je
pop
gs
rcl
out
xlat
in
repz
ljmp
adc
sbb
mov
jo
xchg
xchg
mov
sahf
sahf
xor
jmp
sbb
jns
popa
mov
inc
mov
fldl
lret
nop
sti
in
jecxz
mov
lods
xchg
fbld
mov
test
pushf
sub
les
insb
pop
in
adc
inc
pusha
adc
stc
cltd
icebp
pop
aas
mov
cltd
or
into
push
pop
cmpl
mov
pop
std
pusha
int3
loope
shrb
out
repz
pop
and
js
push
jecxz,pn
mov
das
cld
jp
jb
sbb
inc
test
dec
mov
popf
adc
pop
mov
pop
xchg
jns
fdivr
adc
xor
push
lcall
insb
lock
dec
cmpsl
sbb
sbb
out
aaa
out
inc
inc
test
and
inc
xchg
add
sbb
out
push
aas
loopne
flds
sub
cmp
lret
and
push
fsubrs
test
call
sbb
push
test
mov
popa
stos
push
sbb
inc
fwait
ja
sub
inc
stos
pop
rcrb
pop
jmp
pop
lea
push
mov
cmpsl
pop
mov
sbb
pushf
retw
stos
pop
shlb
pusha
jae
jnp
mov
mov
call
out
iret
mov
in
adc
and
push
cli
xor
or
push
dec
rorl
push
fbld
leave
sti
dec
aaa
cmpsl
outsl
dec
mov
mov
mov
clc
push
and
cmpsl
scas
fsubs
cmp
mov
vdivps
push
pop
xlat
inc
jo
xor
dec
jecxz
enter
mov
and
pop
lahf
jle
mov
out
cmp
sbb
imul
push
aam
sbbb
jp
mov
mov
mov
cmp
dec
in
lds
aam
sti
fincstp
pop
jo
sub
sbb
pop
adc
mov
fildll
xchg
jne
push
mov
dec
mov
sbb
gs
pop
lods
dec
push
cmp
mov
jle
popf
popa
sti
je
jne
popf
sub
jbe
arpl
push
mov
add
fwait
jecxz
shl
popf
push
bound
add
fcoms
push
push
fmull
sti
add
sub
sub
and
jae
or
adc
pop
es
xchg
in
js
jge
pop
and
mov
sbb
jge
ret
movsb
loopne
dec
cld
lahf
push
xor
icebp
pop
sbb
pop
jbe
and
das
outsl
jae
mov
add
jb
ss
pop
cmp
or
mov
cltd
test
push
or
ficoms
scas
sbb
add
sbb
sub
sbb
push
sub
push
cmp
cltd
mov
push
or
xchg
inc
cmp
scas
lcall
pop
cmpsl
inc
fldcw
adc
xchg
int3
cld
jo
js
cmp
mov
mov
clc
inc
scas
xchg
movb
jle
enter
dec
xor
xchg
addb
mov
clc
repnz
cltd
dec
sub
arpl
in
inc
jecxz
shll
inc
rolb
pop
jecxz
fxch
mov
adc
or
sbb
and
aad
ret
insl
negl
aaa
popf
xchg
xchg
pop
rcrl
clc
lea
fs
shll
pushf
push
sbbb
subl
inc
das
xchg
lcall
mov
bound
fcmovnu
lret
cmp
xor
int
call
add
inc
push
lret
mov
lret
inc
push
add
rcrl
int
sub
enter
rcrb
mov
js
loopne
cmp
into
adc
or
jb
addr16
mov
stos
push
xor
mov
pop
inc
mov
loopne
cmp
add
mov
push
mov
mov
mov
pop
nop
pop
clc
dec
int
push
push
lds
mov
in
mov
lods
ret
pop
or
pop
sub
cmovno
ja
sarb
mov
sub
cmp
cmp
or
shl
pop
adc
xchg
add
xor
out
mov
fldenv
lods
xchg
mov
jp
fwait
std
dec
push
sbb
sbb
pop
inc
cmovno
call
or
push
adc
shll
cmp
ds
loop
and
inc
aam
pushf
call
rcr
rorl
stos
arpl
stos
mov
in
pop
icebp
mov
mov
xor
in
in
enter
add
jbe
jl
fldcw
cmp
pop
ja,pn
aaa
mov
out
outsb
sbb
push
in
test
mov
cs
mov
sbb
inc
mov
jnp
xchg
jmp
int3
mov
cld
pop
int
inc
and
sbb
bound
xchg
repnz
inc
fbstp
add
stc
in
movsb
mov
ffree
cmpb
aam
mov
sub
xor
out
shll
pop
cli
or
dec
mov
sbb
cwtl
lahf
xchg
imul
inc
dec
int3
cmpsl
cmc
data16
fistpll
and
push
lods
hlt
pop
push
das
mov
adcb
and
sahf
and
shlb
unpckhps
adc
xchg
push
lods
mov
lret
mov
jmp
mov
fsubrs
jecxz
push
adc
sbb
cmp
sub
mov
and
or
jne
dec
adc
mov
out
jge
adc
or
pop
push
jae
clc
inc
daa
mov
lahf
lods
decl
inc
add
add
js
cwtl
jo
jle
xor
iret
xchg
sahf
cmp
inc
mov
pushl
mov
xor
js
cli
int
sub
aaa
ret
or
cmp
mov
mov
aam
jbe
sbb
sub
movsb
and
lahf
adc
int3
lock
and
mov
rcl
jae
mov
insb
mov
push
cmp
cmc
pusha
in
xor
inc
pop
inc
clc
mov
cmp
jb
adc
or
test
jg
mov
inc
jbe
icebp
clc
lret
lret
mov
in
mov
test
xchg
mov
sbb
popa
push
int3
addl
jnp
jp
mov
test
or
test
cmpsb
mov
cmpsb
sbb
push
pusha
sbb
decl
stc
data16
or
sub
nop
movsb
sahf
cmp
cs
mov
sub
repnz
les
sbb
cmc
push
push
mov
push
dec
leave
or
pusha
stc
fimull
ret
icebp
out
fmull
enter
add
xor
push
xchg
xchg
ljmp
pop
cs
sbb
mov
lahf
jbe
inc
movsb
cmp
aam
insl
or
inc
insb
mov
mov
mov
imul
dec
subb
xor
lea
mov
adc
sub
push
dec
out
mov
arpl
addr16
int3
lcall
gs
daa
hlt
sbb
leave
pop
iret
jl
add
and
add
inc
add
dec
daa
cmpb
ret
es
sar
sbb
pushf
in
dec
jge
incb
out
test
loopne
sahf
fldcw
dec
adc
xor
xor
fildll
or
inc
push
and
fisttps
stc
das
jmp
sbb
test
in
or
test
jle
add
mov
adc
loop
cmp
pop
lds
addl
xchg
adc
xchg
xchg
or
out
jns
cld
gs
sti
pop
sbb
mov
and
xchg
jl
cmp
int3
test
mov
out
aad
xor
aaa
call
fisubl
fdivs
or
psubsb
sub
add
xchg
adc
outsl
inc
into
xor
xchg
cmp
pushf
stos
add
mov
les
jle
jecxz
fstp
and
sbb
pop
test
lcall
push
mov
sahf
repnz
push
mov
dec
add
dec
aaa
test
add
xchg
inc
addr16
jne
mov
dec
jg
add
in
or
mov
jl
loope
insb
lcall
adc
imul
and
pop
test
les
pop
leave
push
idiv
and
int3
add
sbb
push
push
sbb
movsl
outsb
jae,pt
inc
out
mov
mov
js
sarl
dec
in
or
push
stos
in
test
jp
dec
jp
jle
inc
lcall
setp
leave
pusha
push
sbbl
mov
daa
into
int3
xchg
rolb
sub
xor
stos
push
jmp
adc
xlat
xor
mov
xchg
fiaddl
les
cmp
ljmp
fsubs
lret
or
fistpl
test
push
mov
adc
ficoms
leave
add
fnstcw
mov
arpl
pop
aaa
pop
stos
push
mov
mov
mov
mul
mull
out
sub
mov
int3
sbb
sbb
stos
add
and
pop
jnp
mov
flds
add
inc
pop
cmp
loopne
jge
pop
lret
push
or
stc
lret
xchg
cltd
push
xor
sbb
xor
ret
jae
es
pushf
ljmp
test
push
dec
mov
mov
mov
mov
cmp
nop
enter
jecxz
sbb
notl
inc
dec
icebp
jmp
pop
out
and
mov
xor
sbb
jne
mov
decb
test
sbb
and
adc
push
loope
jb
shlb
add
cmp
lea
fcomps
pop
scas
mov
cmpsw
pop
lods
xchg
xor
mov
mov
push
pop
xchg
inc
andb
and
push
push
or
pop
push
jp
or
lcall
pop
iret
jge
pop
mov
in
stos
pop
gs
clc
stos
and
int3
shll
pop
enter
outsb
cvtpi2ps
dec
out
mov
dec
jmp
icebp
mov
testb
das
arpl
fildl
inc
aad
xchg
push
mov
pop
push
and
cmp
movsb
pop
int
jae
adc
rcrb
or
arpl
ret
jecxz
add
inc
in
icebp
or
mov
xchg
mov
ss
into
stos
jmp
ret
fcmove
mov
sbb
cs
int3
lahf
mov
into
dec
icebp
subb
inc
dec
in
mov
cmp
pop
jne
jae
sbb
xchg
mov
mov
stos
xlat
pop
popl
sub
fldt
loop
cmp
pop
int
push
sub
mov
sbb
xchg
and
push
xorl
pop
test
mov
orl
lods
or
int
nop
fdivr
scas
xchg
sbb
jp
notl
lret
shll
mov
fisubrl
shrb
xor
jge
sbb
xlat
int
inc
jg
adc
inc
cmp
push
cmp
mov
jp
dec
clc
mov
rcl
outsl
and
test
nop
adc
mov
inc
inc
cwtl
push
mov
pop
inc
rcrl
jmp
sbb
aad
subl
add
in
add
xchg
dec
fadds
fs
pop
mov
push
pop
aam
in
mov
jg
or
mulb
mov
das
les
dec
loopne
stc
insl
lock
and
inc
fmull
lahf
jb
add
loopne
cmpsl
xor
popa
fisttpl
int3
sbb
test
jnp
and
call
and
lock
push
dec
mov
xor
aaa
inc
cltd
push
hlt
das
jge
pushf
xlat
loop
jbe
mov
pop
xor
fnstcw
lret
aad
dec
jnp
in
cwtl
pop
xor
or
push
push
inc
dec
iret
js
mov
fisubs
inc
addr16
dec
dec
xchg
mov
test
xchg
fstpt
add
movsl
lds
jb
jne,pn
outsl
gs
pusha
jnp
push
jae
ucomiss
ficoml
mov
test
lret
sbb
sub
adc
and
pop
mov
loope
and
push
movsb
cmpsl
rol
lcall
sub
push
and
or
mov
dec
ljmp
out
xor
insl
test
inc
popa
or
lret
xor
lods
call
mov
test
xchg
cmp
lods
outsb
ja
mov
loope
push
or
lret
pushf
push
insl
inc
xlat
mov
pusha
pop
aaa
mov
js
sbb
sub
rclb
xor
lds
orb
sahf
mov
insb
xchg
mov
jo
and
incb
aaa
inc
cltd
jne
dec
mov
mov
adc
cmpsb
jnp
push
repz
jnp
andb
xor
xlat
mov
out
ret
mov
sub
push
jmp
lret
jb
out
scas
push
mov
mov
mov
cwtl
mov
pop
lret
and
pop
pop
push
data16
pop
add
adc
sub
stc
outsl
in
movsb
mov
dec
push
jbe
dec
ljmp
lock
scas
jns
dec
es
mov
rcrb
icebp
sub
and
mov
inc
scas
adc
sbb
rorl
pop
cli
out
into
or
adc
mulb
clc
and
jmp
jmp
fidivrl
add
mov
ret
mov
push
mov
mulb
mov
rsm
cmc
inc
pop
out
pop
mov
shlb
loopne
mov
jl
dec
mov
pop
icebp
inc
mov
test
jg
push
jne
inc
cli
dec
or
repnz
negl
out
cwtl
mov
insb
mov
sti
jmp
mov
dec
movsl
test
add
add
push
inc
mov
rorb
inc
mov
mov
adc
and
neg
jmp
divl
xor
add
cs
xchg
cmc
std
repz
and
xlat
icebp
mov
jecxz
mov
dec
xchg
pop
or
jne
gs
out
rorl
test
mov
and
jmp
mov
ljmp
movsb
dec
cwtl
inc
mov
push
push
mov
ret
jge
lret
pop
jmp
cmp
cmp
sub
das
cmp
lds
or
or
cmp
cs
sbb
dec
mov
and
ficompl
xor
daa
mov
aas
fcomps
fistl
jb
push
stc
popf
pop
lods
test
mov
data16
das
inc
xchg
jno
int
xchg
es
pop
mov
ret
scas
dec
mov
and
pop
sbb
xchg
rorl
les
mov
insb
insl
je
loopne
pop
imul
insb
pop
ss
and
add
idivb
loope
ret
gs
cmp
jmp
xor
cli
sahf
lods
mov
inc
into
fiaddl
sub
xor
add
mov
test
mov
lods
imul
xchg
nop
xor
mov
adc
movsl
dec
xchg
mov
mov
loop
aam
pop
dec
push
icebp
sbb
jmp
leave
or
adc
jbe
or
adc
jmp
out
dec
or
inc
jo
add
pop
push
js
dec
les
xchg
repz
mov
mov
divb
add
xor
dec
xchg
test
jg
cld
xchg
inc
sbb
mov
int
imul
push
and
js
mov
lcall
fcoml
out
add
add
and
sub
inc
pop
divb
push
call
aas
rclb
xchg
push
push
or
sub
ss
scas
cmp
popa
ret
dec
in
push
push
std
xlat
pop
push
shlb
xlat
push
and
dec
out
inc
jmp
fsubl
lods
idiv
lea
andb
dec
scas
xor
mov
pop
sub
mov
inc
ljmp
outsb
andl
call
and
loop
lcall
sub
sbb
xchg
and
scas
and
arpl
insl
inc
dec
lcall
jmp
and
push
lahf
xchg
js
into
dec
inc
movsl
das
mov
cltd
je
xor
xchg
xor
xchg
repz
dec
or
add
pushw
xchg
mov
ja
cmpb
outsl
xchg
xor
sub
mov
stc
jae
dec
cmpb
add
stc
push
testb
rcrl
lret
or
adc
dec
push
vmread
incb
xor
stos
sarb
mov
or
mov
imul
sbb
sahf
outsl
dec
pushf
mov
jb
imul
inc
cmp
pop
pushf
fbstp
rolb
leave
add
outsb
scas
lea
add
push
xchg
sbb
enter
cmp
popf
and
jecxz
adc
dec
ret
mov
push
xlat
inc
cmp
dec
push
jecxz
or
loopne
sub
lahf
and
mov
sbb
mov
daa
lods
mov
inc
outsb
pop
mov
enter
xlat
jg
dec
push
cmp
shll
adc
insb
xor
outsl
or
dec
adc
aad
es
dec
or
sbb
sbbb
jo
or
jle
sahf
inc
push
jo
push
and
std
jb
jl
jbe
iretw
pop
pop
jae
js
arpl
push
arpl
inc
pop
dec
hlt
jae
pop
std
pusha
pop
pop
repnz
addr16
dec
jbe
fsts
pop
jb
jnp
pop
insl
imul
fnstcw
popf
jg
int
push
sub
dec
jb
clc
jnp
inc
out
pop
sub
test
fsubrs
add
and
mov
in
dec
testl
ds
pop
push
scas
adc
insb
sub
std
cwtl
xchg
xor
xchg
dec
movsl
push
iret
pushw
int
jb
fistpll
sbb
out
lods
sub
dec
fiaddl
mov
and
push
xchg
xor
xor
mov
popa
lcall
dec
push
mov
push
dec
subb
dec
push
add
add
iret
dec
adc
les
mov
cmp
mov
out
sub
jle
lret
add
repz
push
dec
notb
mov
cmp
jge
xchg
insl
jno
lret
push
push
shll
sub
pop
pop
cld
ljmp
sub
push
stos
out
cwtd
popa
dec
loope
dec
cmp
inc
cmp
jae
add
add
mov
call
mov
xchg
insl
jnp
sbb
mov
cld
jge
sbb
cmpsl
loop,pn
movsb
aaa
shlb
and
cmp
push
push
mov
add
pop
inc
add
dec
sbb
jne
dec
jp
jle
jb
push
xor
push
popa
jne
sbb
adc
xor
es
jl
sbb
jbe
add
dec
sub
cmp
dec
ds
mov
inc
push
test
popa
or
jnp
clc
insl
add
ret
imul
fs
insl
icebp
add
stos
add
jno
arpl
push
push
mov
adc
std
aam
or
hlt
fs
test
mov
cwtl
clc
ds
push
fisttps
mov
out
inc
in
inc
or
subb
stos
pop
mov
jo
in
or
xor
and
adc
sbb
adc
fcomp
pop
loop
xor
jbe
jne
and
mov
pop
jns
testl
sub
mov
push
dec
outsb
ficoms
stos
sbb
lcall
int
movsl
mov
add
fadds
jns
aas
lahf
outsb
xchg
and
ficompl
jb
xor
bndldx
stc
repnz
mov
push
in
push
test
negb
push
xchg
and
dec
test
pop
ret
pop
popf
into
xor
imul
stc
fbld
les
mov
inc
out
mov
inc
cmpsl
add
lahf
push
ljmp
int3
adc
lods
pop
lret
enter
dec
fsubs
mov
mov
sbb
dec
xor
mov
push
sti
jp
sub
lods
pop
insb
test
and
sbb
cmpsl
push
dec
dec
lods
inc
mov
pop
mov
pop
adc
push
jge
sbb
sti
push
ficoms
or
push
shrl
push
adc
add
mov
xchg
xchg
scas
aas
negl
mov
cmp
push
inc
xchg
aas
xchg
dec
mov
ds
adc
jno
dec
and
popa
aaa
sbb
xchg
dec
mov
and
daa
mov
mov
pop
scas
out
cli
ja
movsb
cmc
insl
scas
popa
fnstsw
pop
sbb
iret
xchg
repnz
daa
lods
jnp
jne
mov
nop
aas
mov
int
cld
mov
pushf
fxch
test
xchg
pop
jge
dec
add
push
call
mov
or
sub
xor
inc
mov
sub
ds
dec
add
and
and
mov
xchg
aam
jl
adc
pop
sbb
inc
addl
sbb
sti
cmpsl
add
pop
sub
lea
mov
ret
aas
rorl
lret
or
cmpsb
xchg
aaa
cmp
or
pop
frstor
jecxz
mov
dec
inc
in
test
aaa
pop
ffree
inc
in
sub
decb
sti
add
loopne
mov
or
xchg
push
out
dec
mov
nop
and
dec
pushf
cmp
jne
xor
stc
adc
ret
push
push
lods
arpl
dec
or
sti
lods
adc
pusha
les
and
pop
cmp
imul
push
je
cltd
mov
fcoms
das
mov
arpl
jno
data16
or
inc
fnstenv
jnp
jmp
loope
mov
or
movsb
add
sarl
adc
mov
push
into
imul
idivb
int3
lahf
hlt
jmp
ret
pop
roll
push
pop
ret
out
jg
push
mov
pop
jle
xor
data16
int3
orl
lahf
mov
aas
dec
push
sarl
aaa
xchg
adc
mov
push
pop
in
pop
in
cmp
daa
int3
xor
pop
cwtl
aaa
jne
xor
outsl
out
shlb
out
add
mov
out
push
pop
out
xor
sbb
sbb
cmp
mov
fs
cwtl
nop
push
inc
jbe
mov
xchg
xchg
adc
insb
and
sub
pop
es
fs
outsb
jle
das
addr16
mov
mov
stos
dec
pop
sbb
or
cld
stc
fistl
ss
lahf
cmc
lret
popa
repz
leave
lret
pop
rorl
scas
lock
add
and
push
lret
sbb
or
mov
and
mov
in
fsubl
mov
iret
out
dec
cmpsb
pop
dec
fiadds
xchg
mov
lea
xor
lret
dec
inc
or
inc
cltd
incl
dec
sub
dec
stos
outsl
xchg
mov
arpl
mov
dec
fdivrl
in
stos
orl
push
mov
sbb
push
sub
dec
mov
xchg
or
test
sbb
cmpsb
mov
and
sbb
dec
test
jmp
lods
ffreep
mov
sbb
push
stos
mov
sar
xchg
lret
pop
push
fidivl
jg
loope
xor
ss
arpl
call
jge
mov
cwtl
fsts
xor
aas
mov
loop
jp
push
xlat
loope
aas
shrb
push
shl
pop
dec
stc
push
fisubrs
addr16
outsl
imul
mov
xchg
jge
sbb
sbb
pop
bound
pop
pop
push
icebp
xor
jnp
int
lret
push
je
loope
dec
jle
adc
out
insb
ja
loopnew
das
mov
sti
pop
inc
pop
mov
ret
mov
sub
jne
push
call
cmpsb
ss
adc
sti
or
jb
js
in
out
out
or
insb
int3
les
jg
loope
jmp
stc
jmp
jp
mov
dec
push
sbb
lds
add
add
or
mov
nop
shlb
loope
test
lods
outsb
lret
add
xchg
add
js
sbb
imul
popa
sbb
cmpsl
insl
test
or
inc
mov
mov
icebp
fcoms
add
jmp
testb
fwait
pop
push
push
repnz
loope
icebp
cltd
mov
js
lock
dec
bound
sarl
decb
push
pop
adc
es
movsb
stc
sub
pushf
mov
mov
inc
ss
mov
inc
sub
dec
cltd
mov
int
sbb
add
int
xchg
mov
jge
dec
xchg
mov
and
scas
sbb
sbb
sbb
mov
pop
ret
sbb
xor
in
ss
add
or
sbb
or
mov
or
push
and
cmpsb
pop
push
fwait
lods
bound
and
sub
cmpb
xchg
xchg
pop
ljmp
xchg
es
xor
test
pushf
mov
hlt
and
push
mov
mov
sub
jp
sbb
addr16
cmp
mov
push
or
mov
bound
xchg
push
push
int3
xor
sub
cmp
mov
add
stos
adc
aam
enter
test
imul
in
adc
sbb
cld
jne
xchg
aas
pop
dec
push
mov
ret
loop
or
mov
add
pop
mov
xchg
mov
imul
push
mov
cmp
in
mov
sub
test
lea
ljmp
mov
sub
adc
mov
inc
jecxz
push
cmpl
addr16
push
pop
test
shlb
mov
shll
and
xchg
mov
mov
imul
xchg
pushl
ljmp
mov
sbb
imul
xchg
or
xchg
sbb
adc
sbb
cmp
inc
jns
loopne
ss
gs
mov
mov
or
and
out
and
xor
cld
lods
mov
and
mov
or
push
push
lea
cmp
pop
mov
das
mov
in
jbe
and
into
sahf
xor
sub
daa
jb
dec
sub
pop
pop
jb
add
mov
push
stc
mov
mov
stc
adc
aaa
xchg
dec
inc
sti
icebp
push
lret
sub
popf
adc
clc
jmp
imul
movsl
mov
ret
lret
and
xchg
sbb
pop
paddq
lcall
mov
push
push
icebp
imull
xlat
sub
push
jge
lods
jne
push
inc
aas
dec
in
mov
loop
ds
or
jle
lcall
inc
emms
or
jge
clc
inc
jge
push
or
mov
jmp
adc
sbb
inc
int
scas
adc
inc
out
push
fistpl
dec
dec
out
outsl
imulb
xchg
cmpsl
aas
push
sbb
cld
jl
enter
es
lret
and
adc
repz
add
outsb
imul
aam
arpl
add
in
test
jmp
imul
fwait
loopne
push
mov
xchg
imul
inc
xchg
mov
or
stc
call
mov
imul
rcrl
or
mov
lods
fsubrl
lds
negl
in
lret
popf
nop
lea
shrl
negl
inc
rolb
jae
inc
sti
inc
cmpsb
xchg
jae
inc
in
pop
sahf
lock
mov
pop
xlat
outsl
lcall
cld
ret
idivl
jmp
jb
clc
out
mov
jno
pusha
push
daa
jo
add
jbe
lahf
adc
mov
popl
or
iret
sbb
inc
jecxz
xor
rcrb
adc
push
out
sti
jecxz
data16
xlat
lcall
test
add
add
adcl
mov
pop
jle
pushw
and
in
push
fstl
push
cmpsl
jle
mov
outsb
mov
movsl
add
test
dec
xchg
movsl
push
and
in
hlt
icebp
and
clc
or
sub
shrl
sti
jbe
jp
sbb
adc
cld
frstor
fmuls
xchg
mov
jae
repz
inc
icebp
in
icebp
and
jecxz
pop
add
inc
sbb
pusha
scas
dec
outsl
dec
bound
adc
rorl
push
fidivrl
pusha
jns
jl
lret
ja
sub
inc
in
dec
xor
push
mov
pop
sbb
lret
sbb
and
cmp
popf
movsb
ret
mov
pushw
cmp
dec
in
mov
cmp
cmpsb
sub
in
add
cli
orl
stc
movsb
or
int
mov
pop
sbb
insl
out
out
aam
cld
lods
and
cmp
sar
lock
lea
push
push
scas
imul
mov
push
mov
cmpsl
pop
lods
ja
dec
sahf
bound
adc
push
ret
adc
loopne
icebp
or
xlat
sub
pop
loop
in
std
adc
aas
fsubrl
in
rcrb
pop
repz
rolb
push
ret
or
push
mov
jae
outsb
mov
push
scas
jo
inc
mov
mov
gs
inc
mov
dec
mov
dec
cmpsl
pop
mov
popf
dec
mov
jnp
add
dec
mov
push
mov
adc
rorb
sbb
daa
fstpl
leave
es
imul
sti
sbb
insl
lret
sbb
sbb
add
int3
or
add
aaa
leave
pop
in
push
lock
std
adc
addr16
sub
ja
js
pop
xchg
push
mov
jo
js
inc
movsb
jnp
dec
mov
dec
mov
mov
inc
mov
dec
mov
push
mov
jle
sbb
pop
mov
jl
daa
mov
ljmp
push
lahf
out
cmp
scas
fmull
adc
fwait
repnz
xchg
call
sub
sarb
clc
or
lahf
icebp
daa
insb
stos
fidivrs
test
arpl
lea
lods
cmpsl
pusha
jbe
mov
jge
loope
push
mov
shll
call
roll
push
mov
pusha
and
lea
les
sub
ljmp
or
popf
out
sub
movsb
shrb
fisttpll
xchg
std
divl
mov
xchg
ljmp
mov
adc
int3
pop
xor
cmp
ja
imull
stos
call
scas
arpl
jmp
outsb
dec
test
dec
sub
mov
ja
dec
xchg
mov
push
mov
arpl
ja
imul
or
es
pop
in
out
into
sbb
lds
xchg
sbb
sbb
movsb
jl
sbb
inc
call
aaa
aas
mov
sub
sbb
jg
pop
cmc
and
sbb
popa
rclb
faddl
les
mov
inc
shrb
loope
icebp
dec
lret
ss
enter
mov
and
jp
inc
mov
adc
or
xor
pop
mov
adc
data16
stc
push
mov
pop
lahf
lods
aaa
xchg
jge
xor
pop
stos
and
js
pop
lea
outsb
xchg
dec
mov
add
or
push
jg
xor
push
repz
push
cli
pop
out
or
cmp
cmp
adc
push
enter
lcall
add
sub
out
sub
ds
and
pop
loopne
clc
outsl
pop
out
fwait
dec
cmpsb
imul
addr16
gs
push
push
adc
sbb
sti
xor
fistps
enter
xchg
inc
lahf
dec
loope
test
arpl
adc
sub
inc
rclb
and
js
das
shll
adc
add
fstpt
lea
jae
adc
pop
mov
jp
pop
jecxz
test
into
push
lret
xor
sbb
add
adc
pushf
jge
das
andb
pop
mov
mov
dec
xchg
xchg
pusha
popf
imul
xchg
add
pop
mov
imul
out
jl
inc
loopne
fiaddl
fsubrl
fnstenv
sub
cmp
add
sub
adc
out
and
sub
imul
cmp
add
cmp
jns
xor
and
sbb
roll
notl
mov
outsb
mov
cmp
mov
movsb
adc
push
lcall
or
gs
push
std
lods
outsl
ficomps
pusha
mov
xchg
sahf
pop
sahf
dec
cwtl
mov
add
or
or
adc
iret
sbb
jl
bound
jge
jo
inc
mov
and
cmp
or
pop
loopne
fimull
or
cmp
dec
cli
sub
push
xchg
jbe
pop
xchg
pop
cmpsl
cmp
jae
push
test
repnz
xchg
imul
push
or
inc
mov
lods
dec
mov
cwtl
data16
adc
adc
adc
pop
mull
sbbb
orb
or
or
ss
push
aad
cld
sub
call
insb
xchg
add
add
and
testb
cs
push
int3
xor
clc
jg
ss
ds
cmp
mov
xor
sbb
jge
jae
push
xchg
jne
jb
xor
and
pop
pushf
sub
inc
lds
popf
push
popf
outsl
movsb
outsb
xlat
and
adc
cmp
pop
loope
mov
pop
lds
mov
cs
cmp
inc
jmp
inc
and
pop
int
mulb
fdivrl
and
push
rcrl
adc
pop
cli
push
aad
mov
pop
jmp
pop
mov
sbb
dec
xchg
or
jns
add
xchg
push
xchg
pop
jecxz
xchg
add
add
das
in
enter
fists
aas
iret
jns
pop
icebp
jp
js
push
scas
daa
mov
sahf
xor
nop
inc
lods
push
call
adc
test
lds
sub
push
lea
push
mov
sbb
push
sub
lret
push
lock
aaa
ficoms
into
or
pop
fwait
pop
outsb
xchg
xor
cmp
xor
dec
cwtl
inc
out
xchg
pop
mov
inc
movsl
jbe
pop
movsb
dec
test
inc
lret
adc
and
or
into
dec
movsb
jbe
jbe
inc
mov
or
pop
mov
pop
int
fbstp
cmp
or
cmp
jle
push
jg
jge
dec
sahf
sub
lret
ss
jecxz,pt
out
dec
out
leave
dec
shrl
leave
sbb
ss
xor
pusha
cwtl
aaa
sbb
jbe
inc
mov
je
inc
xchg
and
dec
lcall
push
insl
xchg
imul
pushf
push
xlat
jne
push
andl
sub
js
jae
sbbb
cmpsl
inc
rorb
arpl
adc
and
push
test
stc
and
pop
in
mov
add
xor
es
sub
push
call
cli
sub
push
fdivl
jmp
ficomps
mov
divl
xchg
dec
std
push
mov
jns
je
je
addr16
inc
movsl
inc
out
das
rclb
or
or
aas
int3
jae
popa
sarl
mov
lods
xor
mov
pushf
jae
and
mov
mov
jmp
push
scas
outsl
lea
push
mov
dec
loopne
leave
sbb
outsl
int
xlat
and
jl
cmp
jge
cmp
aas
rcll
ss
divb
dec
stc
imul
movsl
and
cmp
sbb
jns
push
mov
sub
insl
xchg
pop
test
add
inc
in
ret
pop
out
xchg
js
gs
push
lods
sub
imul
lea
js
push
cmp
ret
arpl
inc
mov
ss
sub
imul
sbb
fnstcw
in
jecxz
cli
cmp
and
push
movsl
pusha
out
into
or
add
xor
xor
xor
psadbw
out
xchg
rorl
inc
lahf
and
out
int
xor
sub
add
sbb
in
sbb
sub
and
adc
fcmovnu
icebp
xor
loope
jae
fsubr
mov
jne
push
stos
push
adc
xchg
xchg
push
mov
adc
test
jno
pop
mov
mov
mov
add
mov
dec
lods
inc
sub
mov
inc
xchg
sbb
imul
js
jno
pop
mov
xchg
pop
mov
test
sub
add
sbb
xor
cmp
popf
sub
mov
and
ljmp
push
aad
ret
sub
push
rcrb
pusha
testb
or
repnz
xor
ljmp
cmp
pop
leave
es
sub
push
in
stc
xor
xchg
js
mov
dec
lcall
inc
sahf
and
stc
push
push
cltd
jno
or
lahf
dec
mov
mov
insl
scas
outsl
orb
mov
inc
mov
adc
adc
or
jecxz
out
data16
adc
inc
xchg
or
and
dec
cwtl
dec
mov
addr16
test
addb
ljmp
outsb
xchg
dec
mov
pop
hlt
adc
push
ret
dec
int
shll
xor
pavgw
in
inc
lds
ret
push
ret
xor
push
mov
pusha
movsl
push
scas
jge
push
xchg
inc
mov
push
xchg
pop
mov
ja
dec
lea
jp
pop
in
sbb
inc
lds
aaa
aam
int
divl
into
psubb
lock
mov
add
sbb
aas
dec
scas
outsl
push
stos
jp
popa
mov
mov
dec
mov
mov
addr16
push
mov
outsl
xchg
pop
iret
outsl
leave
es
xor
pop
hlt
cmp
ss
daa
adc
sbb
and
or
and
and
psrld
mov
sbb
cmp
or
dec
in
das
iret
sbb
add
das
aad
pop
ljmp
jae
jbe
pop
mov
mov
jbe
pop
cwtl
jl
insl
lods
pop
mov
mov
xchg
inc
mov
dec
mov
xorl
xchg
jo
ja
lea
data16
inc
mov
pop
mov
xchg
aaa
fbld
xlat
sbb
xor
pop
iret
and
in
mov
rorb
in
hlt
ja
psllw
in
int3
xor
and
adc
cmp
sub
add
hlt
sub
and
add
sub
pop
xchg
push
xchg
adcb
scas
xchg
pop
mov
bound
je
jl
dec
stos
push
scas
sbb
outsl
lods
push
mov
lret
dec
xchg
je
insb
iret
pop
cltd
jns
pop
movsb
bound
ss
lret
ss
ds
aas
das
sti
cs
or
sub
and
or
push
out
sbb
pop
andl
cmp
xor
sbb
out
sbb
les
into
xor
ja
aas
lea
jb
push
push
je
push
ss
xor
bound
data16
push
sub
jo
inc
mov
mov
jle
push
pop
jg
dec
sbb
push
mov
dec
mov
cmp
pop
in
and
cmp
pop
rolb
fcoms
icebp
cmp
or
push
out
inc
repz
call
add
dec
add
imul
pinsrw
sbb
daa
loop
aam
mov
jo
pop
scas
push
push
sbbb
stos
jne
imul
dec
mov
pop
mov
inc
xchg
jg
dec
mov
push
mov
inc
mov
popf
leave
sbb
cs
xor
sbb
idivb
ret
daa
lret
add
es
cmp
out
in
leave
adc
into
cmp
xor
psrlw
adc
and
aas
enter
shrb
fistl
inc
scas
jb
xor
pop
movsl
push
mov
sbbb
xchg
jb
push
lahf
dec
mov
xchg
inc
mov
mov
stos
pop
mov
jnp
inc
adcb
xchg
push
stos
inc
mov
mov
dec
xchg
popa
xorb
sbb
rcrl
in
add
and
adc
and
out
add
push
out
push
repnz
or
cmc
add
pslld
lret
sbb
xor
das
fstpl
jae
sbb
dec
mov
pop
test
xchg
popa
lcall
jo
arpl
inc
cmpsl
push
test
pop
cmpsl
dec
mov
push
test
pop
lods
pop
ret
das
jmp
pop
jmp
shrl
into
and
repz
cmc
pop
pushl
sbb
dec
lcall
or
pop
loopne
jmp
sub
das
shlb
insb
popf
push
fdivl
pop
mov
push
and
push
sbb
jp
jns
pop
test
pop
mov
dec
mov
das
jl
jb
arpl
ss
sub
adc
js
or
cld
sbb
aaa
jmp
jmp
and
add
adc
pop
icebp
and
or
adc
sbb
mov
sbb
sub
js
insl
adc
fistpl
rclb
hlt
xor
jp
jo
push
popf
jbe
dec
xchg
jno
push
mov
jae
push
xchg
inc
xchg
pop
mov
mov
push
xchg
jne
push
mov
movsb
inc
mov
test
inc
fwait
dec
mov
mov
movsb
outsb
mov
sub
jmp
pusha
mov
shll
das
jmp
fdivrl
and
or
sbb
sbb
xor
sbb
xchg
cli
cmp
and
cmc
adc
xor
sub
add
or
outsb
mov
jae
pop
cmpsb
pusha
mov
xchg
pop
mov
xchg
insb
iret
pop
lods
popa
mov
mov
push
mov
jg
dec
xchg
stos
jl
fs
inc
popf
imul
fmuls
sub
xor
or
sub
xor
es
cmp
cmc
fisttpl
lock
add
aaa
loop
in
les
adc
xor
ss
and
sub
adc
and
movsb
push
xlat
jnp
inc
mov
push
xchg
ss
inc
fwait
arpl
js
xchg
push
test
push
mov
gs
addl
sub
das
aad
in
les
push
in
fwait
push
inc
movsl
pop
lea
xchg
jne
insb
mov
jae
arpl
push
mov
movsl
jl
pop
popf
pop
test
inc
pop
popf
addr16
jne
and
ret
cmp
or
cmp
sbb
jne
push
mov
mov
jle
push
mov
jno
jne
jne
jbe
inc
fwait
push
test
dec
mov
scas
inc
movsl
pop
test
push
mov
mov
mov
ja
jge
imul
aas
lret
xor
or
xor
adc
es
js
aas
std
das
cmc
push
cs
les
out
aad
out
or
add
and
push
std
daa
mulb
lret
xor
push
mov
gs
dec
mov
mov
mov
or
xor
or
xor
sbb
jmp
add
notb
aam
scas
sub
xor
sub
daa
fisttps
or
xor
xor
add
cmp
pop
in
sbb
adc
sbb
cmp
or
pop
in
push
xchg
jo
inc
cmpsb
jge
xor
mov
lcall
jae
pop
lahf
jg
ja
push
mov
enter
cmpsb
aas
cld
mov
enter
fildl
xor
sbb
pop
mov
movsb
inc
xchg
jne
jl
push
cmpl
xchg
jp
jb
dec
xchg
pop
mov
pop
mov
sbb
jge
je
pop
test
adc
xor
call
cs
mov
popl
bound
push
mov
jg
push
mov
movsb
dec
mov
hlt
inc
loop
xchg
xchg
mov
sbb
or
cld
sbb
or
outsb
loop
cmc
inc
lods
addr16
push
mov
jl
outsb
xorb
mov
jae
cs
mov
mov
pop
mov
jne
jl
pop
subl
mov
addr16
outsl
lods
imul
iret
or
pop
shrl
hlt
sub
add
xor
pop
sarb
aas
loop
aad
ficoms
sub
js
cs
pop
fcoms
into
add
aaa
cld
xor
sbb
sbb
jo
jb
push
pushf
dec
mov
sarl
fstpl
and
or
and
add
push
jmp
and
and
adc
cmp
jns
add
adc
les
clc
sub
and
sbb
push
out
sub
mov
loope
shlb
clc
or
push
int
call
pop
mov
pop
mov
mov
cmpb
shrb
ret
push
cltd
inc
nop
lods
push
mov
dec
movsb
fs
gs
js
xor
sub
shufps
xor
push
movsb
outsl
mov
pop
mov
push
pop
test
aaa
xchg
jns
jnp
jp
push
mov
push
movsb
pop
xchg
pop
mov
pop
lods
pop
test
test
xchg
clc
mov
or
cli
or
jnp
inc
cmpsl
ds
pop
int3
jg
add
dec
jmp
sub
or
pop
mov
pop
loope
cltd
jo
pop
mov
sub
adc
outsl
stc
pop
lds
sub
add
push
and
es
xor
sub
pop
mov
and
adc
inc
cli
psrld
mov
push
mov
cmp
jne
inc
divb
outsl
filds
push
cmp
cmp
sbb
dec
lret
cmp
adc
push
mov
aad
mov
pushf
push
fwait
adc
ja
add
cmpsb
insb
mov
mov
sub
jbe
pop
mov
lcall
dec
mov
and
call
sub
push
cld
push
fbstp
mov
xor
cmp
aam
stos
jg
xor
xor
sbb
pop
mov
fnstcw
loop
mov
sub
push
movsl
and
inc
xchg
or
inc
mov
xchg
stos
pop
cwtl
jle
mov
sub
movsl
pop
movsb
jge
ja
gs
jle
jae
jp
dec
mov
stos
sub
or
and
sbb
xor
and
out
in
decl
sub
adc
cli
add
mov
jge
inc
sbbb
mov
dec
xchg
dec
lahf
inc
cmpsb
bound
jg
jae
pop
fisubrs
jecxz
fdivrl
decb
out
enter
sti
or
in
and
add
pop
jmp
mov
pop
test
lahf
sbb
sbb
push
adc
push
cmpsl
dec
cli
das
cmp
and
and
push
xchg
imul
les
je
lcall
sub
dec
lods
insl
outsl
mov
movsl
out
outsl
jge
push
iret
push
mov
in
fisubrl
dec
mov
mov
fisubl
leave
xor
sbb
aad
icebp
lret
daa
mov
aaa
xlat
and
sbb
movl
int3
int
loopne
xor
adc
mov
mov
andl
lock
and
and
out
daa
aad
pop
addb
insb
mov
xchg
xchg
dec
stos
inc
pop
jnp
sub
popa
mov
push
stos
jl
lods
pop
nop
jns
lods
jae
movsb
jno
inc
inc
lcall
and
push
pusha
mov
rorl
mov
in
jecxz
adc
ss
aaa
fsts
sbb
ds
push
idivl
aaa
in
int
sbb
sbb
ss
ret
and
cmc
cmp
ret
xor
mov
insl
test
ja
push
movsb
in
test
mov
pop
orl
gs
jecxz
mov
mov
xchg
mov
mov
mov
scas
mov
daa
idivb
cwtl
ss
adc
adc
fisttpll
jmp
adc
bswap
shrl
faddl
add
or
int3
sbb
nop
or
adc
aas
cmp
das
movsb
movsb
aas
movl
repz
aas
cmp
sub
sub
test
jbe
push
jno
pop
push
xchg
pop
out
sbbb
dec
mov
mov
dec
popl
orb
pop
dec
loopne
movsb
inc
mov
mov
jnp
inc
mov
jg
imul
fidivs
rolb
aad
jmp
and
push
fcomip
rorb
or
add
orb
pop
cmp
idivb
sub
xor
mov
cld
add
testb
and
in
shl
and
insl
dec
rolb
nop
push
push
movsl
push
mov
jge
mov
push
dec
subb
dec
mov
push
mov
cmpsb
jns
mov
mov
mov
jne
imul
fwait
aaa
and
sub
into
sbb
enter
push
lds
aad
and
or
fildl
jecxz
add
cmpsb
xor
add
sub
out
lds
daa
call
fsubs
and
sub
out
lret
dec
push
xor
adc
lea
xchg
dec
mov
lcall
imul
and
test
jno
inc
xor
mov
xchg
lods
arpl
xchg
aas
leave
xor
and
loope
out
rcrb
rolb
push
movsb
int
dec
mov
notb
adc
lods
aas
xor
adc
mov
lods
sub
lahf
aad
mov
fisubs
icebp
mov
jo
rorb
xor
cmpsl
or
pushf
dec
push
in
addr16
enter
xlat
test
mov
lock
dec
mov
test
xlat
mov
outsl
out
aam
inc
cli
out
cwtl
jae,pn
cmp
int
push
sub
push
cltd
in
add
cmc
or
movsb
cmc
es
cwtl
cld
add
lods
int3
add
mov
ds
int
cwtl
mov
pop
push
xchg
lods
aas
jae
shrl
scas
shlb
mov
pop
jo
movsl
dec
dec
ret
mov
imul
fwait
inc
mov
shll
mov
cmp
outsl
mov
push
cli
or
xlat
add
pop
adcl
mov
jl
adc
pop
mov
ret
pop
mov
jns
jns
pusha
mov
dec
lods
pop
cmpsb
jbe
push
movsb
dec
movsb
xor
and
jg
jp
inc
movsb
sbb
aaa
in
sbb
adc
or
les
ljmp
sbb
adc
outsl
cmpsb
sub
xor
cmp
pop
in
ds
and
adc
xor
push
sbb
and
adc
xor
and
andb
mov
dec
lcall
js
dec
test
push
jb
gs
outsb
ljmp
arpl
dec
stos
arpl
pop
mov
das
popa
inc
int3
push
aas
in
in
out
ret
dec
mov
daa
out
clc
push
icebp
push
sti
or
and
stc
cmp
pop
fimuls
shll
cmp
cmp
icebp
pop
in
aas
adc
sub
or
pop
loop
mov
mov
jns
jg
data16
inc
stc
movsbl
fbstp
push
push
mov
xchg
ja
arpl
imul
mov
push
lods
jb
push
xchg
dec
mov
pop
mov
pop
into
cs
sbb
idivl
out
adc
cmp
add
sub
sub
push
sti
sub
sub
sbb
sub
cmp
imul
cmp
sub
sarl
sbb
sbb
push
loope
call
mov
dec
sbbb
mov
shrb
popf
sbb
xor
aas
xchg
addr16
pop
mov
inc
mov
je
ja
pop
cmpsl
jo
or
mov
inc
stos
dec
mov
add
das
hlt
push
shll
aam
lock
sub
xor
add
or
call
cld
sub
ss
shlb
sbb
push
jmp
jecxz
call
pop
mull
adc
sbb
mov
cmp
jg
push
fwait
push
subl
adc
push
mov
cmp
xchg
inc
andl
lcall
js
push
mov
xchg
xchg
jge
jnp
inc
popf
dec
mov
jae
adc
push
rolb
rorb
or
in
aaa
rorb
inc
jmp
adc
xor
aaa
jecxz
lds
ss
out
out
out
fimuls
or
addr16
sbb
adc
and
push
icebp
push
scas
insb
out
or
xor
sbb
jge
inc
mov
dec
mov
mov
xchg
dec
imulb
data16
mov
cmpl
xchg
jp
pusha
subl
jo
sbb
xchg
jl
push
xchg
push
movsl
push
jecxz
fstps
mov
fs
push
int
ret
pop
cmc
or
add
and
bswap
sbb
enter
mov
sbb
cmp
or
and
cmp
aas
stc
jne
pop
jmp
popa
jg
add
pop
sbbl
popl
jecxz
inc
xor
push
pop
mov
dec
lahf
push
mov
jnp
pop
ret
dec
pop
lahf
push
js
push
mov
xor
lods
test
cwtl
push
int3
or
xor
adc
jecxz
into
sbb
sub
push
retw
pop
fadds
loop
shrb
or
xor
sub
jns
sbb
and
push
out
dec
lds
fimuls
clc
sub
out
adc
adc
orl
mov
data16
xor
mov
jo
je,pt
mov
imul
xorl
addr16
insl
fstps
cmp
jg
push
in
cs
out
scas
push
lea
imul
sub
sbb
pop
shll
mov
rorl
in
out
xor
cmp
adc
cmp
and
outsl
fistpl
enter
repz
loopne
xorb
mov
push
cmpsl
push
shrl
sarl
dec
mov
push
jo
sbb
add
or
aas
aad
xor
cmp
shlb
add
das
frstor
psrad
aam
cmpl
mov
pop
mov
pop
mov
mov
jae
inc
mov
mov
mov
inc
stos
xor
pop
mov
insl
xchg
popa
movsl
inc
sti
add
insl
xchg
push
xchg
push
stos
imul
lret
sbb
paddq
out
daa
ret
and
jp
xor
and
pmaddwd
cli
pusha
repnz
ud0
sub
adc
xor
add
and
add
loop
aad
fiaddl
lret
ja
jns
jbe
outsl
mov
jb
jp
dec
scas
inc
pushf
dec
mov
jno
pop
mov
inc
mov
stos
arpl
xchg
dec
mov
jno
push
mov
sbb
jne
outsb
xor
ret
xor
adc
ficompl
in
fldcw
xlat
and
psllw
cli
ds
stc
cmp
pop
jmp
sub
idivb
shrb
or
xor
or
rolb
cld
aas
fistpl
jl
jbe
inc
mov
jp
jo
inc
cmpsl
addr16
inc
mov
dec
lods
jp
jle
inc
mov
stos
pop
test
push
xchg
dec
mov
orl
xchg
push
inc
cwtl
ja
pop
xchg
pop
mov
aas
lret
cmp
xor
outsl
stos
das
shrb
fisubrs
mov
add
hlt
jns
dec
in
hlt
add
les
add
inc
mov
cli
sbb
test
iret
add
pop
incb
jl
push
mov
imul
dec
mov
das
loopne
mov
adc
dec
mov
aaa
jbe
inc
mov
xor
jnp
dec
xchg
jp
lret
dec
mov
out
adcl
adc
cmp
lcall
gs
or
mov
cmp
cmp
mov
push
mov
cmp
mov
xor
dec
test
inc
cmc
push
xor
pusha
mov
pop
mov
test
sbb
mov
lods
jg
dec
nop
pop
scas
pop
mov
inc
mov
xchg
imul
xor
stc
sbb
sbb
and
es
adc
ds
aad
nop
sbb
loop
mov
xor
aaa
int
les
jecxz
shrl
or
push
sti
add
xor
ss
jecxz
aad
mov
jl
pop
xchg
push
mov
das
mov
fs
jp
inc
orl
mov
pop
lcall
push
xchg
pop
addb
mov
addr16
jp
dec
subb
mov
in
iret
xor
in
cmp
sbb
daa
xor
push
xlat
sub
repnz
shrb
icebp
daa
in
in
pop
call
or
xor
cmp
decl
iret
pop
clc
das
fistl
sub
mov
insl
xchg
dec
mov
js
pop
cmpsb
pusha
subl
sub
xchg
dec
mov
push
scas
push
mov
push
mov
insl
cltd
pop
mov
pop
mov
hlt
imul
or
cs
push
ret
xor
fimuls
into
or
inc
jmp
out
and
aaa
in
xor
repnz
pop
sti
das
repz
fisubrs
shrb
shlb
jbe
jp
push
lcall
pop
mov
subb
xchg
fs
test
inc
stos
ja
jno
dec
mov
ja
inc
mov
lea
jl
push
mov
inc
sahf
pop
mov
mov
rclb
adc
xor
sbb
and
gs
sbb
daa
fbld
sub
push
iret
or
cmp
jge
or
lds
repz
push
aad
rcrb
cmp
clc
add
add
sub
aam
mov
int
mov
pop
xchg
inc
xchg
insl
mov
inc
fimull
pop
scas
pop
xchg
inc
mov
ljmp
jbe
dec
mov
jg
inc
jecxz
test
js
dec
mov
insl
xchg
xor
xor
pop
mov
out
aad
jmp
fdivrs
fcoml
sahf
xor
daa
in
push
out
mov
adc
into
sbb
sub
jmp
sub
push
mov
shlb
jge
push
test
daa
jg
push
pop
mov
sbb
sbbl
pop
xchg
inc
mov
sbb
pop
mov
dec
mov
jno
push
xor
push
mov
test
push
test
and
xor
and
xor
paddsb
sbb
nop
xor
sub
sub
paddsw
adc
add
adc
xor
and
sbb
das
lds
mov
mov
daa
xchg
pop
lahf
ljmp
ja
and
test
out
out
inc
pop
cli
imul
clc
pop
adc
dec
cltd
je
dec
lcall
js
push
movsb
jge
inc
adcb
pop
lcall
dec
xchg
gs
inc
xchg
and
xor
enter
hlt
sub
or
and
daa
fiaddl
iret
sub
mulb
lcall
adc
push
in
enter
mov
cmp
or
pop
int
rclb
xor
daa
iret
outsb
fwait
insl
mov
inc
scas
imul
xorb
outsb
xorl
arpl
arpl
pop
test
pop
mov
mov
outsb
mov
insb
xchg
dec
pushf
arpl
ss
cmp
ds
cs
mov
loope
in
xor
daa
divl
aam
leave
and
sub
or
pop
jmp
in
jmp
hlt
aaa
lds
movb
lret
das
jmp
ret
ss
enter
into
popa
divb
push
xchg
pop
stos
jno
pop
scas
push
cmpsl
pop
stos
bound
dec
mov
dec
mov
inc
jmp
stos
jns
push
cmpsl
inc
mov
pop
mov
lea
mov
xchg
cmp
sub
icebp
sbb
push
in
sbb
xor
sub
stc
push
std
cmp
data16
icebp
daa
call
adc
ficomps
rcrb
cld
or
aam
out
cmp
inc
sarl
cmp
add
sbb
sub
daa
test
cld
add
cmp
mov
pop
ljmp
das
into
add
add
das
rorb
cli
sbb
add
adc
xor
mov
xor
pop
fnstcw
lds
hlt
adc
cmp
adc
add
adc
xor
add
or
mov
ret
pop
call
psrad
fldcw
lds
decl
int
std
daa
lds
add
xor
jbe
jg
subb
lea
sbbb
mov
outsb
lea
dec
mov
pop
mov
push
mov
xchg
jg
pusha
test
pop
mov
push
addb
lcall
popa
xorb
xor
hlt
xor
sbb
leavew
insb
stc
and
add
or
cmp
aaa
ret
pop
in
sub
add
sbb
sbb
sub
add
or
repnz
fcompl
into
sub
das
xlat
jno
imul
mov
mov
orb
mov
insb
mov
pop
scas
jle
cmp
jae
jbe
jl
pop
subb
sbbb
mov
pusha
mov
inc
mov
push
lret
adc
xor
loope
fisttps
aad
out
in
hlt
xor
or
add
sbb
sbb
aaa
ljmp
sub
adc
add
inc
std
add
int3
sbb
das
shlb
lea
lea
push
mov
push
test
addb
subl
mov
dec
mov
mov
dec
pushf
jnp
data16
arpl
pop
mov
jnp
pop
xchg
dec
scas
popa
cmpl
pop
xlat
xor
ds
out
idivb
rorb
jmp
xor
ljmp
decl
jmp
in
pop
jmp
call
pop
fidivrl
daa
jmp
loope
incl
cmc
sub
pop
rorb
fidivl
daa
mov
jb
je
pop
mov
xor
add
add
sbb
sub
and
or
cmp
and
and
ja
outsl
mov
adc
cmp
adc
cmp
cmp
push
fisubs
lds
sarl
data16
xor
push
in
out
sub
add
or
enter
aad
hlt
fmuls
out
xor
sbb
in
cmp
or
or
sub
cmp
adc
psubw
rorb
scas
das
ja
andl
mov
subl
inc
fwait
jb
arpl
push
cltd
jg
pop
stos
jg
dec
test
xchg
adc
imul
xchg
cmp
leave
xor
sbb
jmp
in
imul
mov
cs
or
add
aas
jo
sbb
xor
or
bound
stos
sub
cltd
je
rcrb
icebp
mov
xor
fwait
jge
bound
inc
mov
xchg
inc
mov
jle
pop
stos
ja
mov
push
mov
adcl
out
int3
mov
imul
adc
sbb
pop
jo
iret
je
xor
xor
pop
jb
subl
sub
xlat
paddd
mov
dec
das
fstl
mov
test
pop
call
push
scas
pop
ret
dec
xchg
insl
fcomps
jmp
jp
jno
inc
test
mov
push
scas
jl
jle
shrb
dec
mov
add
addr16
cmpsb
jnp
sbb
pop
cmpsb
and
and
or
aaa
ret
or
and
sbb
add
mov
and
jmp
std
adc
adc
and
and
inc
out
das
shll
stos
mov
pop
mov
push
mov
jb
ja
inc
scas
jp
popa
pushf
pop
mov
inc
subl
fwait
rcl
pop
out
jg
inc
jmp
mov
mov
icebp
testl
cmp
add
rorb
and
sub
and
out
mov
sub
cmp
push
cmp
aaa
aad
test
sub
inc
ljmp
sub
push
les
rcrl
jo
aaa
enter
cmpsl
pop
mov
fidivl
fs
imul
push
pop
cmp
add
ror
dec
jecxz
mov
sar
inc
pop
mov
ljmp
lret
and
pop
jecxz
incb
cmpsb
pop
loop
and
pop
xchg
or
rolb
out
jecxz
mov
sub
orb
jmp
cltd
adc
xchg
mov
adc
lods
sahf
je
mov
insl
arpl
ja
iret
out
js
out
xchg
jbe
jmp
dec
sbb
enter
fsubl
jns
fadd
inc
es
lds
fdivrp
dec
sub
out
jne
icebp
cld
shrl
dec
lods
pushf
push
mov
cmpsl
add
sahf
cmpsb
ja
lcall
push
mov
mov
xchg
rorb
mov
adcb
mov
stos
sub
fwait
xchg
sbb
cltd
fmuls
out
pop
dec
loop
js
pop
stos
ja
jle
dec
xchg
push
repz
xchg
push
gs
push
pop
fmulp
rclb
jecxz
fldl
in
lds
out
jbe
aam
aaa
stos
mov
ss
rorl
fwait
dec
movsl
outsb
popf
push
sbb
and
sub
sbb
loop
jmp
ja
std
adc
aaa
rorb
leave
xor
sti
inc
negl
divl
and
sub
jne
sarl
sahf
jle
pop
mov
cmpsb
inc
into
push
mov
jo
inc
xchg
inc
mov
dec
mov
lods
pop
mov
jg
pusha
xchg
scas
jge
inc
lcall
arpl
addr16
and
enter
out
adc
icebp
and
cmp
or
and
xor
or
xor
sti
xor
xor
sbb
add
xor
sbb
pop
divl
repz
das
lcall
fmull
scas
sub
loope
sub
lds
xchg
pop
fwait
mov
mov
gs
ja
mov
mov
lcall
mov
mov
jnp
pop
ret
jb
push
sub
ja
pop
mov
outsb
xchg
aas
cmp
repnz
sbb
ds
adc
frstor
push
lds
hlt
cmc
push
hlt
cmp
or
aaa
mov
sti
sbb
and
and
ret
add
std
adc
les
sub
arpl
insl
mov
pop
lods
bound
inc
sahf
pop
data16
insl
loope
cmpsb
insl
adc
movsb
pop
xchg
fs
jnp
sbb
ss
or
add
lock
icebp
push
ret
sub
mov
jb
push
mov
insl
aam
mov
cltd
test
out
fsubl
shlb
lret
ss
cmp
sarb
fsubs
enter
scas
cmp
add
sub
sub
fwait
mov
roll
cmpb
mov
dec
nop
lea
outsl
push
xchg
pop
cmpsl
push
orl
jo
mov
xchg
xchg
xlat
sbb
fwait
addr16
cmp
and
inc
movl
out
or
add
ds
sub
xor
cmp
push
ret
jo
shrl
xchg
xor
adc
inc
negl
pop
sahf
cs
ret
mov
mov
mov
push
mov
cld
and
xchg
jmp
pop
loop
das
notb
jmp
cmc
scas
notb
sub
cmp
or
sar
aas
leave
sub
sub
pusha
aad
std
or
add
cmc
int
xchg
ret
sub
sub
std
lcall
mov
jnp
jbe
jbe
and
daa
inc
pop
in
cmp
std
sub
shrl
or
jbe
push
scas
sub
das
fst
shr
repz
loop
enter
into
jecxz,pt
mov
rorl
fimull
push
lea
rorb
incl
scas
mov
js
scas
cmpsl
jp
inc
mov
fs
mov
test
jge
dec
jg
jge
mov
xchg
jnp
mov
das
push
das
shlb
hlt
add
leave
cmp
or
divb
ds
inc
movsb
sbb
pop
and
clc
iret
add
or
lock
aaa
test
xchg
es
inc
testb
subb
inc
xlat
sbb
repnz
jp
sti
pop
iret
cmp
sbb
mov
sbb
xchg
xor
std
in
adc
add
ret
rcrl
push
daa
std
xchg
adc
es
sbb
dec
sub
repnz
sarb
inc
pusha
cmc
sub
rol
mov
sti
and
pusha
fidivrs
mov
fs
pop
fadds
lds
cltd
sbb
xor
jae
into
add
adc
fidivs
pop
hlt
adc
and
or
and
pop
addl
jae
pusha
subb
bound
or
lcall
imul
jno
jae
inc
shll
push
test
test
addr16
nop
data16
dec
popf
inc
mov
push
test
dec
inc
mov
push
jbe
dec
mov
fwait
jae
data16
inc
stos
push
pop
push
fsts
mov
dec
mov
nop
ja
mov
rcrb
sbb
xor
cmp
sub
push
sub
push
adc
iret
imul
out
stc
push
clc
sbb
pop
iret
xor
cmp
xacquire
cmp
ja
push
lcall
add
mov
ss
cmp
push
les
push
stos
daa
and
rcrb
add
adc
pop
out
and
add
sbb
jmp
shlb
in
repz
sbb
icebp
add
push
jnp
js
dec
orb
mov
fildl
inc
mov
inc
mov
mov
xorb
mov
mov
imul
mov
pushf
jge
inc
movsb
pop
mov
icebp
inc
pinsrw
aas
sarl
daa
aam
sahf
jno
dec
mov
mov
mov
dec
icebp
or
inc
test
arpl
orb
mov
mov
xchg
int3
push
andl
repz
push
lods
push
ret
and
pop
lret
push
rorl
out
lds
out
ret
sbb
xor
or
add
cs
push
out
add
cmp
sub
xor
repz
jns
jnp
pop
mov
lods
xchg
push
call
adc
cmp
xor
xlat
inc
add
data16
sbb
jmp
lock
rcl
sub
mov
sahf
xchg
cmpsl
sarl
cwtl
rclb
dec
sahf
inc
popf
jg
push
movsb
loopne
rol
jle
dec
lahf
jae
les
popa
xchg
xchg
stc
mov
lahf
dec
test
testb
rclb
test
test
pushf
arpl
mov
push
mov
out
lea
inc
mov
dec
jp
mov
mov
scas
in
xchg
shll
jo
jno
jae
dec
cltd
inc
sub
pop
sbb
cmpsl
sub
jp
scas
add
sub
dec
popa
cmp
and
insl
pop
jmp
je
pop
mov
jno
ret
sub
sub
add
cmp
ja
dec
adc
dec
add
sbb
add
inc
cmp
daa
gs
inc
loopne,pn
cli
push
ljmp
pop
iret
cmp
or
push
sub
cmp
cmp
adc
pop
rorb
and
repz
and
pop
shrl
lret
das
pushf
jle
and
mov
push
stos
dec
stos
je
dec
andl
inc
xchg
inc
fwait
gs
inc
mov
cltd
push
mov
iret
adc
add
daa
rclb
fisttpl
aas
ret
jge
outsb
pushf
bound
push
mov
das
test
in
jbe
dec
lahf
jg
pop
mov
outsl
mov
gs
je
lea
movsl
aaa
xchg
inc
mov
xchg
subb
pop
mov
cmp
xor
and
out
pop
lret
push
lock
sbb
aas
jnp
push
les
lds
cli
adc
cs
xor
push
aas
iret
xor
jno
jnp
pop
cwtl
jae
dec
repz
add
xor
cmp
adc
jnp
shrb
pop
out
call
lcall
les
pop
cli
add
push
daa
fsubl
push
pop
je
dec
ja
gs
je
bound
inc
lcall
inc
pop
push
pushf
push
sbb
adc
xchg
dec
sbb
push
mov
jae
mov
push
call
es
push
jg
pop
bound
inc
xor
jl
arpl
dec
stos
dec
xor
inc
mov
mov
or
lahf
add
insl
test
mov
js
inc
mov
mov
stos
mov
dec
movsl
dec
lds
ror
xchg
ljmp
mov
mov
in
repnz
in
cmp
stos
aas
ret
test
mov
insl
mov
jnp
push
mov
int
fsub
mov
cwtl
iret
xor
xor
aad
iret
push
shlb
dec
repz
pmaddwd
loope
jecxz
sti
pop
ret
cmp
aas
in
push
add
add
or
cltd
jb
lods
lea
mov
popf
push
mov
push
mov
fwait
scas
mov
mov
insl
xchg
test
sub
mov
mov
aaa
mov
popf
js
add
data16
adc
aaa
fimull
mov
mov
lods
dec
xchg
jo
sub
inc
mov
mov
clc
cmp
ja
fnstcw
or
pusha
mov
lret
inc
cmpsl
inc
jp
jb
jle
jge
push
lcall
adc
or
sbb
aaa
notl
sarb
cmp
add
adc
in
sbb
or
sub
adc
add
cmp
iret
cmp
mov
inc
cltd
inc
pop
mov
dec
enter
pop
pushl
std
sub
and
cmp
sbb
ret
cmp
push
ds
mov
and
shrl
out
fisubs
xchg
cmp
rclb
dec
mov
mov
mov
fwait
fwait
mov
mov
xchg
dec
sahf
inc
dec
outsl
cmpsl
mov
orb
outsl
fs
mov
outsl
mov
jp
mov
mov
and
arpl
jbe
insb
popf
inc
mov
std
inc
mov
mov
lods
xchg
inc
mov
mov
mov
ficomps
test
mov
xchg
dec
fwait
scas
mov
imul
jb
fistps
mov
ss
repnz
jmp
pandn
cmpsl
cmp
sbb
aaa
iret
pop
jecxz
xchg
sbb
iret
xor
cmc
addl
repnz
mov
sub
mov
push
into
movntq
loop
mov
fistpll
mov
sbb
sti
out
xor
int
push
fcoml
hlt
aaa
jmp
fbstp
aad
in
in
lret
ds
stos
sbb
fcmove
mov
fisubrs
faddl
aad
jecxz
fdivrs
jne
js
dec
movsb
dec
mov
test
stos
pop
scas
jb
bound
push
decl
pushf
jge
jp
jnp
imul
mov
push
aam
cld
adc
and
js
daa
cmc
adc
push
test
aaa
mov
cwtl
arpl
pop
xchg
inc
xchg
ja
push
cli
push
mov
inc
jge
mov
dec
jle
insb
imul
dec
mov
test
outsb
mov
inc
mov
std
sub
sub
or
add
cmp
pop
in
lret
adc
cmp
and
cmp
daa
jmp
aam
xlat
jne
jl
sbb
push
xlat
push
ljmp
imul
movsb
push
xorb
mov
ficoms
sti
sbb
xor
les
iret
jge
cmp
xor
adc
notl
stc
dec
out
adc
jno
pop
aaa
out
aaa
ret
cmp
or
repnz
fucom
sti
ret
fmull
imul
push
mov
cmpsb
pop
mov
push
mov
inc
jnp
cltd
cmp
inc
mov
pop
xchg
dec
mov
cmp
dec
testb
das
xlat
sbb
adc
inc
lahf
xor
ja
pop
std
arpl
fs
jge
dec
mov
pop
xchg
js
pop
orb
test
movsb
pop
mov
mov
pop
mov
pop
insl
jae
mov
lcall
clc
ret
xlat
pop
repz
fstpt
cmp
negl
jecxz
repz
cmp
hlt
fimuls
negl
xlat
push
into
sbb
icebp
sarb
xchg
cmp
push
loopne
lock
test
ljmp
push
hlt
cmp
push
movsl
aas
cmp
cmp
out
inc
xchg
push
mov
mov
pop
inc
jp
add
idivl
cltd
lret
pop
jnp
sub
inc
xchg
ret
jge
pop
push
mov
pop
cmc
xor
sub
jge
sub
adc
or
pusha
decl
xor
out
adc
cmp
or
pop
lock
test
inc
test
nop
push
scas
pop
in
jge
jns
dec
xlat
dec
fwait
popa
mov
lret
es
sub
adc
repnz
sbb
into
in
into
and
fstpl
leave
xor
add
and
test
or
xor
add
jecxz
ret
dec
mov
je
cmpsl
mov
mov
mov
mov
inc
jmp
mov
test
mov
mov
inc
icebp
arpl
push
lods
pop
xchg
inc
cli
push
fdivl
sub
or
notb
hlt
sub
xor
or
fs
push
orl
addl
inc
movsb
addr16
xchg
stos
jo
nop
movsb
push
push
mov
imul
scas
jge
and
mov
dec
xlat
and
xlat
sbb
sub
add
and
and
xorl
in
enter
mov
call
outsb
mov
xchg
and
inc
test
je
pop
stos
dec
imull
hlt
mov
mull
lret
test
adc
push
shlb
sarl
in
jl
push
sbb
shlb
add
add
adc
or
rcr
sub
push
sub
cmc
sbb
aam
or
or
leave
enter
and
sub
test
je
xor
mov
fs
inc
mov
rorb
gs
test
sti
mov
mov
adc
int
in
loop,pn
cmp
sub
inc
mov
dec
lea
xchg
mov
jns
imul
jp
inc
scas
jle
sub
jne
cmpb
inc
ja
xchg
data16
mov
test
cwtl
jle
arpl
insl
movsb
inc
out
aaa
out
inc
add
ds
sbb
cmp
pop
shlb
cmp
jp
add
fimuls
les
mov
cmp
insl
popf
pop
fistpll
iret
dec
mov
push
imul
sub
aam
ret
das
clc
adc
aas
into
xor
leave
fisubrl
ss
stc
adc
adc
jno
sbb
in
xor
iret
ds
clc
push
rcr
ror
xor
enter
aam
scas
addr16
orb
jg
jbe
ja
imul
ja
insb
test
push
adcl
adc
push
into
or
aad
ret
ds
sbb
shlb
sbb
cmp
imul
mov
dec
cwtl
xchg
mov
mov
jo
pop
mov
outsb
inc
push
bound
mov
imul
mov
mov
mov
out
sbb
sub
repnz
cmp
sub
add
aam
fcompl
sarb
mov
xchg
adc
and
pusha
mov
insl
lret
insl
mov
mov
mov
out
pop
popf
insl
mov
dec
testb
das
in
lcall
or
cmp
loopne
int
cmp
repz
ljmp
push
das
and
and
loop
sub
imull
xor
xor
jl
pop
xchg
pop
cltd
mov
mov
xchg
pop
mov
pop
icebp
pop
xchg
sbb
dec
xchg
jb
push
mov
dec
out
cmp
adc
inc
in
xor
pop
lock
inc
rorl
pop
xchg
ds
xor
insb
mov
mov
pop
stos
xchg
lods
inc
test
jb
popa
rcll
mov
xchg
fwait
mov
test
pop
insb
arpl
mov
or
aas
std
adc
rcr
jae
adc
inc
lock
cs
and
push
int
repnz
sbb
dec
rclb
mov
sbbb
xor
jg
insb
stos
lea
inc
mov
xor
mov
inc
ljmp
jb
add
or
cs
sbb
and
and
adc
sbb
hlt
in
ror
clc
icebp
fistpll
sub
mov
aad
inc
sub
sub
jl
dec
int3
shlb
ja
mov
xor
and
push
mov
dec
andb
push
xor
push
xor
xor
cmp
push
in
fisttps
in
enter
out
mulb
insb
inc
sbb
dec
xchg
jp
jl
pop
xchg
dec
mov
js
inc
push
pop
cld
jge
inc
xchg
imul
bound
pop
mov
push
mov
dec
xchg
jge
dec
leave
add
and
das
mov
adc
sbb
and
je
xor
push
int3
push
out
sti
add
jl
bound
and
inc
subl
ja
bound
pop
adc
fcoms
cmp
rcll
or
add
cmp
xor
aas
divl
out
fsubl
out
pop
sbb
hlt
mov
shl
sbb
loope
jecxz
jmp
lret
adc
enter
loopne
mov
dec
mov
je
dec
movsl
or
jbe
jg
inc
mov
jge
push
jmp
mov
sub
sbb
cmp
out
xor
cmp
rcll
cmp
and
and
push
stos
jl
dec
mov
mov
push
push
cltd
inc
cmpsb
jg
mov
jp
and
lea
orl
andl
adc
mov
add
testb
stos
sub
or
xchg
sub
and
ret
sub
notb
fisttpl
xchg
or
or
jne
movsl
push
mov
gs
fstpl
pop
mov
mov
cld
adc
cs
or
and
push
clc
fsubr
or
hlt
xor
add
and
adc
icebp
fmul
cmc
cs
add
add
jne
sub
add
add
fcom
addl
push
jp
dec
jle
pop
mov
arpl
popa
xchg
js
insl
enter
cs
clc
filds
add
xor
stc
dec
rorl
or
pop
add
dec
icebp
push
cwtl
pop
push
pop
mov
sbbl
mov
push
push
mov
mov
sarl
imul
inc
outsb
push
mov
push
mov
addr16
jns
scas
mov
sub
and
jns
inc
fnstsw
sub
cmp
bound
inc
lret
pusha
mov
lahf
loopne
mov
cwtl
shlb
mov
dec
mov
mov
sbb
adc
and
pop
repz
test
cli
sbb
xor
mov
sarb
adc
in
and
cmp
push
stos
pop
repz
loopne
sarl
sarl
adc
cmp
jo
bound
pop
mov
daa
mov
jge
dec
cltd
xor
loope
adc
cmp
loope
jns
dec
cmp
sbb
adc
jmp
into
and
out
insb
xchg
pop
gs
mov
cmpsl
dec
jl
inc
mov
popa
xchg
inc
lea
jp
push
push
pop
mov
test
pushf
fldt
dec
push
mov
adc
popa
aam
test
popa
subb
mov
xchg
mov
inc
mov
popa
mov
push
cli
push
mov
xor
mov
mov
les
in
ljmp
and
sbb
cmp
xor
dec
fisubrl
in
sbb
std
lock
lret
pop
lret
dec
loopne
call
xor
loope
rorb
adc
dec
cmp
in
sub
or
cmp
mov
push
int
lea
psadbw
push
fbstp
inc
xchg
gs
jbe
imul
fdivrs
out
into
xor
or
add
sbb
jmp
and
adc
cmp
pop
cwtl
adcl
inc
inc
inc
xchg
pop
test
test
pop
xchg
dec
test
bound
outsl
lea
mov
xor
mov
fdivs
mov
mov
push
push
xchg
inc
fsubp
mov
aam
xchg
sub
pop
xchg
imul
sub
add
inc
ficomps
out
push
inc
or
dec
aad
xchg
inc
cmpsb
adc
mov
inc
xlat
pop
orb
mov
xor
clc
add
sub
jae
add
sub
xor
cmp
cld
sbb
jecxz
shrl
add
fdivl
lock
jb
std
sub
aaa
out
mov
in
add
push
or
xchg
outsl
jle
mov
jle
inc
xchg
bound
cmp
bound
mov
jno
cmp
pop
test
test
or
sub
and
lock
jns
mov
imul
jbe
pop
repz
mov
test
mov
scas
jle
js
std
xchg
mov
cmpb
dec
incb
dec
fs
xorb
dec
dec
xchg
dec
fcoms
loop
aam
fbld
notb
dec
out
xor
shrb
out
test
push
rorl
add
pop
rorb
dec
xchg
inc
scas
es
lret
pop
leave
imul
aas
mov
daa
int3
xor
es
sbb
sub
cmp
sbb
sbb
negb
cmc
int3
sti
rcr
xor
sbb
sub
lcall
leave
shll
loop
sar
enter
test
insl
subl
mov
add
jge
imul
sbb
jnp
push
mov
es
push
stc
pop
testl
clc
pop
in
leave
arpl
pop
mov
mov
dec
mov
xchg
stos
jns
jae
push
xchg
xchg
gs
push
jae
arpl
test
inc
movsl
sbb
mov
dec
mov
mov
cmpsb
adc
hlt
or
or
inc
mov
das
mov
push
lahf
aas
scas
pop
mov
popa
ret
jg
adc
mov
sbbl
mov
push
xlat
inc
repnz
cmp
sub
lock
ret
aaa
or
sub
xor
cmp
adc
fs
js
fsubrs
pop
fiadds
fmull
roll
in
divl
sub
mov
repz
adc
adc
aam
cmc
ds
mov
pop
cmpsl
dec
mov
test
pop
xchg
push
mov
mov
pop
cltd
push
lahf
push
xchg
pop
fisubs
dec
fwait
inc
movsl
push
loope
lock
xlat
imul
out
insb
test
xor
jns
cmp
adc
push
out
xor
inc
mov
pop
test
movsb
push
adcb
mov
inc
mov
ljmp
jbe
addr16
inc
jge
dec
popa
insl
xchg
cmpsl
cwtl
dec
popa
dec
mov
imul
mov
push
in
cmp
adc
mul
and
cmp
or
stc
fnstenv
ds
sub
cs
cmp
push
out
sbb
xlat
jge
aas
sahf
popa
lea
xor
jae
je
pop
aad
enter
mov
adc
adc
fs
or
pop
cmp
or
adc
popf
mov
aam
ljmp
or
testl
sbb
leave
fmuls
rorl
cmp
jecxz
sahf
dec
stos
push
lods
pushf
sbbl
cwtl
pop
pusha
push
shlb
les
dec
mov
jnp
aaa
mov
adc
push
leave
sbb
je
cmp
xor
adc
in
sub
push
mov
jnp
or
inc
mov
icebp
imul
dec
lcall
pop
test
xchg
outsl
lahf
jo
dec
mov
pop
lea
imul
pop
or
lock
push
mov
lds
pop
ds
std
jae
cmp
xor
je
fisttps
mov
mov
inc
xchg
inc
stos
adc
push
mov
repnz
mov
scas
mov
pop
rolb
inc
ret
cmp
fidivrs
dec
fldcw
div
pop
test
testb
and
mov
mov
cmp
pop
enter
call
ds
cmp
push
mov
dec
mov
pop
lods
outsl
xchg
psrld
les
push
out
mov
mov
loope
lods
adc
test
lret
cmp
imull
xor
adc
and
add
push
movsl
push
scas
xchg
cltd
das
scas
inc
sahf
pop
popf
mov
pop
mov
mov
push
testb
cmpsb
jle
js
cmp
andb
mov
push
mov
movsb
inc
mov
pmulhuw
int3
sbb
add
push
leave
push
mov
lds
dec
loope
out
cmp
push
adc
pop
mov
jno
dec
mov
mov
pop
stos
jne
dec
xchg
push
mov
xchg
popa
mov
outsb
xchg
push
xchg
pop
mov
aaa
es
aaa
mov
pop
fwait
cmp
add
add
or
add
add
imul
jae
add
push
push
jns
gs
add
push
jns
je
insl
add
adcl
je
or
dec
dec
push
jns
je
insl
add
push
imul
add
xor
add
inc
popa
je
xor
add
inc
popa
je
xor
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
xor
add
cmp
rcr
iret
movb
jne
cmp
daa
leave
xchg
pop
scas
lods
lods
cmp
sarl
and
mov
lcall
xchg
xrstor
adc
xchg
or
mov
jg
xor
cmp
lods
lods
adc
xchg
enter
mov
lods
std
aas
mov
lods
lods
mov
lods
pop
loope
xor
lods
lods
lods
pop
test
xchg
out
scas
lods
lods
imulb
pushf
xor
scas
lods
lods
jo
and
and
xchg
adc
lods
lods
movb
lods
lods
ja,pn
cmp
lods
xchg
adc
lods
lods
insl
pop
lods
jl,pn
ret
sub
xor
subl
jmp
mov
movb
xchg
jae
lods
lods
xchg
scas
lods
lods
lods
cmp
or
lods
xchg
lret
lods
lods
lods
cmp
movsl
scas
lods
lods
movsb
test
cltd
scas
lods
lods
xor
ja
pop
lods
cmp
xchg
fdivrl
add
mov
div
lods
lods
cmp
lods
lods
adc
xchg
out
lods
lods
push
test
scas
ss
mov
mov
mov
mov
lods
lods
mov
lods
lods
lods
lods
lods
cwtl
mov
push
nop
dec
std
cmp
cmp
lock
lods
lods
xchg
into
lods
lods
lods
cmp
lods
lods
scas
movsl
aaa
fwait
xchg
adc
xchg
jne
lods
lods
lods
and
out
xor
mov
lods
or
lods
test
test
lods
xor
inc
inc
dec
aaa
jg
jmp
xchg
xor
call
mov
movsb
jg
mov
push
inc
cmp
cmp
mov
jg
xchg
test
mov
xchg
xchg
scas
lods
lods
lods
jle
sub
notb
cmp
jg
outsb
xchg
mov
outsb
xchg
mov
or
lods
lods
cmp
cmc
add
cmp
lds
rol
lods
repnz
lods
loop
inc
sarl
fdiv
shll
lods
lods
xchg
jnp
lods
lods
mov
lods
cmc
in
lods
inc
cmp
lods
lods
lods
inc
aas
cmc
lods
lods
xchg
jno
lods
lods
std
sub
lods
adcl
andb
lods
lods
cmp
xchg
lods
xor
andb
sub
mov
lods
lods
dec
aaa
jbe
xchg
xchg
mov
movsl
cmpsb
mov
push
adc
cmp
sahf
scas
sahf
dec
cmp
inc
in
or
xchg
stos
lods
lods
cmp
cld
push
aaa
jbe
jl
jl
xor
xor
jle
push
mov
lods
lods
inc
cmp
lods
lods
xchg
add
cld
std
lods
test
xor
lods
lods
cmp
insl
jp
add
into
stos
lods
lods
inc
movsb
jg
push
push
loope
inc
ja,pn
or
add
cs
lods
scas
lods
lods
xchg
jmp
fdivrs
pop
sbb
shll
cmp
movsb
sahf
cwtl
in
clc
repnz
mov
shl
adc
jp
mov
icebp
sbb
or
aaa
mov
lods
lods
mov
cmp
test
mov
arpl
jg
ficoms
xor
cmp
scas
lods
lods
xchg
data16
lods
lods
xor
out
mov
lods
lods
jo
stos
lods
lods
cmp
lods
xchg
jnp
lods
lods
jmp
test
xchg
fisubrl
lods
lods
lods
mov
mov
lcall
xor
lods
lods
lods
cmp
xor
mov
jle
mov
aaa
xchg
lods
adcl
pop
test
lods
lods
lods
xor
jl
cwtl
pop
cmp
std
cmp
lods
mov
test
mov
lods
lods
sub
ss
lods
xchg
sbb
lret
adc
xchg
push
test
adc
xor
xchg
push
stos
lods
lods
cmp
push
test
test
stos
lods
lods
xchg
xor
lods
ss
mov
jbe
jo
jle
mov
cmp
mov
cmp
mov
lods
xchg
push
stos
lods
lods
add
cmp
mov
cmc
cmc
dec
and
test
cwtl
cwtl
cwtl
cwtl
push
and
inc
hlt
cmc
cmc
and
pop
push
xchg
mov
mov
xchg
loope
xchg
cwtl
sbb
arpl
inc
fstl
hlt
pop
add
dec
xchg
cwtl
sbb
inc
mov
cmp
sbb
xchg
cwtl
pop
sbb
xchg
cwtl
pop
or
xchg
cwtl
pop
adc
test
dec
xchg
cwtl
pop
fmulp
mov
cwtl
daa
roll
cmpsb
cwtl
cwtl
push
movsl
cmpsl
pop
sbb
dec
xchg
cwtl
sbb
mov
xchg
cwtl
xchg
imul
cwtl
sbbb
cwtl
movsl
sub
mov
xchg
cwtl
pop
push
scas
mov
push
xchg
cwtl
xchg
add
xchg
cwtl
cwtl
and
loopne
xchg
cwtl
ficomps
push
mov
cltd
add
mov
push
mov
or
add
cwtl
cwtl
and
sbbb
sbbb
inc
dec
xchg
cwtl
sbbb
sbbb
cwtl
sbb
insb
insl
add
mov
test
mov
inc
and
pop
dec
mov
pop
xchg
dec
sbbb
inc
dec
xchg
cwtl
sbb
mov
or
sbbb
cwtl
xchg
cwtl
cmc
or
cwtl
sbb
insb
les
cwtl
pushf
cwtl
sbbb
xchg
dec
adcb
inc
dec
xchg
cwtl
andb
inc
dec
xchg
cwtl
add
mov
pop
cwtl
cmc
or
xchg
cwtl
cmc
std
sbbb
cmc
or
xchg
cwtl
add
fstps
xor
dec
xchg
cwtl
cwtl
insb
rcrb
cmp
cwtl
cwtl
xor
div
or
cwtl
add
dec
pop
fs
cmc
or
xchg
cwtl
dec
test
mov
js
xchg
cwtl
daa
mov
add
movsb
cwtl
cwtl
push
sbb
adc
xchg
cwtl
cwtl
insb
or
xchg
cwtl
cmc
push
dec
xchg
cwtl
pop
ss
xchg
cwtl
cmc
cmc
cwtl
cwtl
movsl
sbb
and
je
xchg
cwtl
cmc
push
dec
xchg
cwtl
pop
ss
dec
xchg
cwtl
cmc
cmc
cwtl
cwtl
movsl
sbb
and
orb
cmc
push
dec
xchg
cwtl
pop
ss
cmc
cwtl
cwtl
movsl
sbb
and
test
cwtl
stc
mov
addr16
and
cwtl
pop
ss
xchg
cwtl
cmc
cmc
cwtl
cwtl
movsl
sbb
and
insb
dec
xchg
cwtl
stc
cmc
addr16
and
cwtl
pop
ss
xchg
cwtl
cmc
cmc
cwtl
cwtl
movsl
sbb
and
and
xchg
cwtl
stc
xchg
cmc
addr16
and
cwtl
pop
ss
xchg
cwtl
cmc
cmc
cwtl
cwtl
outsb
popf
sbb
and
xchg
cwtl
cwtl
and
cmp
xchg
cwtl
and
mov
cwtl
dec
dec
cmc
or
dec
xchg
cwtl
add
cmpsb
cwtl
cwtl
imul
aaa
test
cwtl
cwtl
and
and
cmc
push
fmull
cwtl
and
fidivs
cmc
or
xchg
cwtl
add
cwtl
cwtl
movsl
sbb
div
cmc
sbbb
and
sbbb
cwtl
sbbb
arpl
xor
cmc
or
xchg
cwtl
push
dec
sbb
movsl
sbb
div
cmc
add
dec
cmpb
dec
xchg
cwtl
sbb
push
imul
xchg
pop
jnp
imul
jg
jg
jnp
jnp
dec
add
sub
dec
xchg
cwtl
cmc
or
xchg
cwtl
dec
cmc
or
xchg
cwtl
sbbb
dec
xchg
cwtl
das
rclb
pop
movsb
mov
test
xchg
cwtl
test
dec
xchg
cwtl
cwtl
dec
dec
cmc
or
insb
xchg
negb
mov
cmc
or
dec
xchg
cwtl
sbb
insb
aam
add
cwtl
cwtl
test
scas
sbb
dec
xchg
cwtl
imul
loop
mov
jns
push
insb
rclb
gs
cwtl
cwtl
dec
dec
dec
dec
inc
dec
dec
dec
cmc
or
dec
xchg
cwtl
sbb
dec
insb
movsl
cmc
insb
mov
dec
xchg
cwtl
add
cmc
or
xchg
cwtl
add
pop
fadd
xchg
cwtl
cwtl
dec
cmc
or
xchg
cwtl
call
cmc
cmc
cwtl
mov
push
push
cwtl
pop
arpl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
out
mov
and
pushf
lcall
xchg
cwtl
and
dec
das
add
and
inc
dec
xchg
cwtl
das
xchg
cwtl
cwtl
jmp
sbb
add
xor
pushf
mov
xchg
cwtl
test
lea
adc
popa
lea
lret
arpl
mov
loope
xchg
cwtl
outsb
sahf
pop
add
cwtl
cwtl
pop
div
jne
cwtl
movsl
cmp
sbb
cltd
pop
add
xchg
cwtl
cwtl
insb
xchg
and
rcrl
xchg
xchg
cwtl
push
mov
cwtl
cwtl
cwtl
imul
inc
add
neg
push
mov
pop
lea
mov
sub
xchg
xchg
cwtl
dec
movsl
sub
pushf
movsl
sub
pop
sbb
cwtl
mov
cli
std
ficomps
push
xchg
hlt
xchg
outsb
push
xchg
cwtl
cwtl
fnstenv
std
cwtl
mov
cwtl
mov
mov
fwait
cwtl
xchg
cwtl
jp
mov
cwtl
mov
mov
shlb
mov
cltd
xchg
sbb
cwtl
mov
cwtl
push
nop
cwtl
lahf
cwtl
jnp
dec
cwtl
mov
cwtl
out
xchg
movsb
cwtl
mov
cwtl
mov
cwtl
out
lcall
rclb
cwtl
imul
xchg
cwtl
lcall
sbb
lcall
in
cwtl
mov
icebp
cltd
cltd
cwtl
sahf
cwtl
fcomps
cmpsb
cwtl
ficomps
mov
xchg
mov
addr16
xchg
cwtl
mov
xchg
movsl
cwtl
sahf
cwtl
jmp
sbb
lcall
sbb
cmpsb
xchg
popf
lcall
xchg
pusha
sahf
cwtl
cltd
cwtl
xchg
xchg
xor
xchg
xchg
aaa
xchg
xchg
cwtl
mov
xchg
mov
xchg
jp
mov
xchg
sub
pop
xchg
push
pushf
mov
xchg
lcall
cwtl
cwtl
mov
xlat
xchg
mov
mov
cltd
xchg
popa
lcall
pop
cltd
lods
cwtl
lcall
sbb
cwtl
mov
inc
lcall
cmp
adc
cwtl
popf
cwtl
inc
xchg
std
xchg
mov
xchg
cld
cltd
mov
cmp
cwtl
ficoms
lahf
cwtl
leave
xchg
jbe
lahf
cwtl
lahf
cwtl
aam
pop
pusha
nop
cwtl
mov
lea
and
mov
imul
pushf
xchg
inc
fstps
pop
cltd
cwtl
inc
pop
pushf
lcall
jmp
jle
movsb
cwtl
cltd
cwtl
xchg
lcall
pushf
lcall
pushf
lcall
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
lock
nop
negb
cwtl
pushf
pop
lcall
cwtl
popf
hlt
cwtl
jmp
cwtl
sub
jbe
xchg
sbb
lods
cli
sbb
popf
push
lock
cmc
xchg
divb
cltd
aam
mov
cwtl
mov
mov
hlt
in
adc
stc
jne
jne
sbb
add
mov
cltd
call
xchg
push
cmc
pop
cmc
jo
cwtl
lock
cwtl
movsb
cltd
movsl
lock
lock
movsl
fcoms
pop
popf
cmpsb
call
jne
xchg
popf
cmpsb
cltd
xchg
jo
cmc
cltd
cmc
xchg
stc
lock
lock
icebp
cmc
sbb
xchg
adc
lock
mov
xchg
div
sbb
clc
jmp
cwtl
sbb
push
popf
lock
stc
popf
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
or
cwtl
imul
cmc
imul
cwtl
rcrb
inc
cwtl
enter
adc
cwtl
fwait
cwtl
or
sahf
xchg
mov
xchg
lds
inc
xchg
lods
xchg
push
xchg
js
xchg
xchg
sbb
mov
cwtl
lds
mov
mov
xchg
cwtl
pop
cwtl
pusha
cwtl
mov
cwtl
adc
cwtl
push
cwtl
mov
cwtl
or
push
cwtl
jns
inc
cwtl
jge
sbbl
and
or
adc
cmp
fwait
cwtl
or
adc
cmp
sub
xor
ficoml
rclb
add
lock
fwait
cwtl
in
cwtl
out
fwait
cwtl
pushf
lcall
mov
xchg
mov
mov
cwtl
aaa
mov
mov
cwtl
rcrb
pushf
cwtl
xchg
xchg
cwtl
xchg
xchg
xchg
cwtl
mov
xchg
xchg
cwtl
pop
xchg
xchg
cwtl
js
xchg
cwtl
adcb
cwtl
aas
xchg
xchg
cwtl
xchg
xchg
cwtl
notl
sbb
movsb
cwtl
sub
cwtl
test
cwtl
cmp
cwtl
test
lods
cwtl
je
cs
sbb
sub
cwtl
adc
scas
cwtl
cmp
cmc
cwtl
cmp
cwtl
sbb
cwtl
int3
cwtl
push
cwtl
rcrb
sbb
mov
xchg
sub
cwtl
mov
aaa
cwtl
xchg
xchg
cmp
lds
cwtl
cwtl
js
pop
cwtl
jle
sbb
addr16
sbb
cwtl
sbb
cmp
and
sub
aas
xchg
cmp
das
xchg
cmp
ficoms
test
xchg
sub
notl
sub
call
sub
cwtl
hlt
xchg
sub
sbb
outsb
push
xchg
cwtl
cwtl
insb
mov
xchg
cwtl
add
xchg
cwtl
dec
pop
cmp
xchg
cwtl
sbb
outsb
push
xchg
cwtl
cwtl
insb
mov
xchg
cwtl
add
cmc
mov
jb
xchg
cwtl
imul
and
and
rcr
pop
xchg
jo
test
pop
xchg
je
ret
pop
and
inc
mov
insb
cltd
inc
add
xor
pop
fs
sub
sub
xchg
cwtl
sbb
pop
dec
dec
cmc
or
xchg
cwtl
add
inc
pop
movsl
sbb
cmc
cmc
flds
mov
pop
dec
push
dec
pop
test
fs
cmc
or
cmp
cwtl
add
test
push
outsb
jg
jnp
jnp
ja
imul
dec
cmc
or
xchg
cwtl
pop
sbb
xchg
cwtl
fsts
cwtl
ja
imul
jnp
jl
gs
jp
sbbb
cwtl
imul
insb
cwtl
dec
cwtl
insb
cwtl
cwtl
cwtl
jg
mull
daa
and
xchg
add
xchg
xchg
js
adc
xor
adcl
mov
xorb
pop
daa
mov
xchg
mov
in
testl
add
test
popa
sbb
xchg
stc
cmp
lods
fistl
stos
jmp
addb
cld
out
dec
mov
ret
adc
adc
out
sti
or
jmp
jne
imul
sbb
lods
push
dec
hlt
popa
push
mov
mov
outsl
jmp
inc
dec
push
mov
pop
xchg
stos
pop
xchg
das
cmpsl
test
addr16
repz
xor
cmp
dec
sub
shrb
mov
mov
fwait
rorl
jl
frstor
sub
sbb
xchg
sahf
xchg
sbb
nop
or
add
pop
sub
jge
dec
xor
mov
sub
cmc
mov
push
lret
push
not
sti
sti
jns
lret
jae
xchg
add
xchg
movsl
mov
in
aad
fwait
pop
push
cs
test
dec
and
adcb
cmc
or
xchg
cwtl
and
dec
dec
dec
dec
dec
cmc
push
dec
xchg
cwtl
sbb
mov
mov
shl
sbbb
mov
fwait
inc
dec
dec
sbbb
dec
dec
sbbb
dec
cmc
or
dec
xchg
cwtl
sbb
movsb
cmc
or
dec
xchg
cwtl
sbb
mov
dec
xchg
cwtl
and
out
rcrb
clc
cltd
cltd
rorb
cmc
or
dec
xchg
cwtl
dec
cmc
or
dec
xchg
cwtl
xbegin
xchg
cwtl
jle
pop
lock
lcall
hlt
sbb
sbb
mov
cmc
sbbb
cwtl
adcb
pop
and
cwtl
and
sbbb
sbbb
andb
xchg
cwtl
test
movsl
pminub
fsubrl
and
or
cwtl
and
mov
cwtl
sbb
lcall
jle
sbb
dec
xchg
cwtl
dec
dec
and
inc
inc
sbbb
adcb
cmpsb
dec
cmc
or
mov
movsl
pminub
rclb
fcmovu
dec
test
cmc
cmc
movsl
sbb
cwtl
cwtl
cwtl
dec
sbbb
and
sbbb
cwtl
cwtl
mov
cwtl
sbbb
sbbb
jo
xchg
cwtl
push
dec
cmc
or
xchg
cwtl
sbb
movsl
sbb
cwtl
cwtl
cwtl
and
inc
mov
or
dec
dec
cmc
lret
jl
xchg
cwtl
and
add
div
cmc
and
je
xchg
cwtl
and
add
cmc
cmc
and
orb
and
add
cmc
cmc
and
test
cwtl
sbb
insb
mov
cwtl
cwtl
add
cmc
cmc
and
insb
dec
xchg
cwtl
sbb
insb
mov
cwtl
cwtl
add
cmc
cmc
and
and
xchg
cwtl
sbb
insb
mov
cwtl
cwtl
add
push
cwtl
cwtl
cwtl
cwtl
push
pop
add
mov
and
gs
xchg
cwtl
inc
dec
inc
inc
dec
inc
inc
cmc
or
dec
xchg
cwtl
sbb
or
xchg
cwtl
push
ficompl
cwtl
cwtl
push
pop
add
mov
and
in
mov
jecxz
mov
fsubl
xchg
cwtl
jecxz
fstpl
mov
xchg
cwtl
mov
flds
test
mov
fsubrs
mov
enter
mov
sub
xchg
cwtl
and
movsb
xchg
cwtl
cwtl
and
mov
lock
and
jmp
pop
cli
jmp
ficompl
frstor
and
dec
dec
sbbb
xor
or
dec
xchg
cwtl
sbb
movsb
and
add
cwtl
ror
add
add
add
fnstcw
add
cwtl
fwait
sbb
mov
dec
xchg
cwtl
in
cli
flds
cmc
cmc
cmc
and
inc
or
fildll
cwtl
cwtl
cwtl
cwtl
push
pop
add
mov
push
dec
xchg
cwtl
sbb
cwtl
movsl
sbb
cwtl
cwtl
cwtl
pop
add
lcall
cwtl
cwtl
cmc
or
hlt
and
pushf
xchg
cwtl
cwtl
dec
sbbb
dec
dec
dec
cwtl
dec
cmc
or
and
inc
inc
sbbb
cwtl
cwtl
pop
dec
cmc
or
dec
xchg
cwtl
push
sbb
insb
push
dec
dec
sbbb
mov
cmc
or
dec
xchg
cwtl
dec
sbb
insb
mov
mov
int3
sbbb
or
cwtl
dec
sbb
imul
cmc
or
xchg
cwtl
and
dec
dec
sbbb
pushf
xchg
cwtl
cwtl
inc
test
jmp
dec
dec
dec
dec
dec
cmc
or
dec
xchg
cwtl
pop
fsubl
insb
mov
dec
xchg
cwtl
dec
cmc
or
pushf
cwtl
sbb
and
arpl
and
cwtl
mov
cmc
lret
movsl
and
cwtl
cwtl
movsl
sbb
xchg
cwtl
cwtl
sbb
sbb
xchg
cwtl
cwtl
sbb
pop
mov
pop
pop
imul
gs
sbbb
xchg
cwtl
cwtl
dec
mov
movsl
sbb
fwait
cwtl
cwtl
lcall
mov
dec
pop
dec
movsl
sbb
cwtl
cwtl
cwtl
sbb
mov
sbb
cwtl
cwtl
cwtl
mov
imul
mov
movsl
sbb
cwtl
cwtl
cwtl
inc
mov
mov
jge
insb
movsl
sbb
cwtl
cwtl
cwtl
inc
mov
movsl
sbb
cwtl
cwtl
cwtl
pop
jbe
mov
sbb
cwtl
cwtl
cwtl
pop
jbe
push
sbb
cwtl
cwtl
cwtl
ficomps
cwtl
test
shl
cmc
dec
cmc
or
xchg
cwtl
test
dec
add
test
test
or
dec
xchg
cwtl
sbb
insb
jbe
fistps
sbb
dec
xchg
cwtl
inc
sbbb
dec
dec
cmc
or
dec
xchg
cwtl
and
in
mov
fisttps
dec
inc
inc
cmc
or
dec
xchg
cwtl
sbb
or
xchg
cwtl
add
mov
test
mov
inc
movsb
mov
imul
cwtl
xorb
mov
imul
out
cwtl
inc
cli
add
int
mov
cwtl
sbb
cwtl
insb
xchg
inc
inc
movsl
cmpsl
pop
sbb
fstps
and
xchg
cwtl
xchg
out
fnstcw
insb
mov
push
xchg
cwtl
and
pop
je
shlb
adc
inc
stos
fiaddl
loop
negb
adc
cmp
imul
pop
or
push
xchg
cwtl
ja
cmp
mov
cwtl
cwtl
push
pop
add
rclb
xchg
cwtl
and
ret
cwtl
cltd
icebp
and
mov
xchg
cwtl
jmp
push
xchg
cwtl
and
scas
push
xchg
cwtl
cltd
sbb
push
xchg
cwtl
pop
lcall
or
xchg
cwtl
add
push
pop
jnp
jg
jnp
dec
subb
jns
test
addl
and
dec
out
iret
dec
sbb
cltd
sbbb
dec
dec
adcb
cwtl
das
lea
arpl
cmc
cmc
cmc
jle
and
jle
and
inc
stos
cld
inc
jle
cli
icebp
and
mov
sbbb
xchg
cwtl
and
sbb
nop
sbb
movsl
sbb
lcall
xchg
cwtl
cwtl
dec
andb
cwtl
and
and
pop
adc
push
xchg
cwtl
pop
and
stc
cwtl
call
sbbb
push
xchg
cwtl
cmc
or
dec
xchg
cwtl
dec
cmc
sub
or
xchg
cwtl
push
sbb
or
cwtl
jle
mov
push
insb
movsb
dec
cmc
or
cwtl
fcoml
loopne
cwtl
cwtl
movsl
sub
cmpsl
xchg
sbbb
cwtl
dec
xchg
cwtl
dec
add
dec
dec
pop
fs
pop
cwtl
dec
cmc
or
dec
xchg
cwtl
test
cltd
dec
adcb
dec
cmc
or
dec
xchg
cwtl
dec
cmc
or
xchg
cwtl
push
ficomps
or
dec
xchg
cwtl
and
cltd
fldenv
dec
jo
leave
and
and
and
pop
jo
jnp
jnp
insb
mov
xchg
cmc
cmc
mov
mov
dec
xchg
movsl
sub
and
mov
xchg
cwtl
and
xchg
cwtl
movsl
sbb
cmc
cmc
shrl
push
xchg
cwtl
mov
stos
push
xchg
cwtl
movsl
sbb
cmc
cmc
cmc
test
push
xchg
cwtl
pop
and
dec
sbbb
cwtl
cwtl
sbb
sbb
xchg
cwtl
cmc
or
dec
xchg
cwtl
cmc
and
xchg
cwtl
sbb
cmc
movsl
sbb
div
cmc
pop
sbb
pop
mov
fldenv
sub
lcall
insl
popf
cltd
dec
mov
fadd
cli
add
sub
or
xchg
cwtl
pushl
div
cmc
shrl
cwtl
cltd
push
cmc
sub
or
cwtl
and
mov
xchg
cwtl
xlat
clc
lcall
mov
sbb
push
xchg
cwtl
and
sbbb
sub
or
sbb
pushf
mov
xchg
cwtl
and
and
ret
cwtl
and
and
rorl
push
xchg
cwtl
and
mov
xchg
cwtl
inc
rcr
cli
repnz
or
xchg
cwtl
inc
inc
dec
dec
inc
inc
cmc
or
dec
xchg
cwtl
dec
cmc
or
xchg
cwtl
fnstcw
jnp
ja
test
mov
imul
test
ret
cmpsl
cwtl
dec
dec
dec
dec
pop
arpl
push
jnp
insb
pop
test
dec
jnp
push
dec
jnp
outsb
jg
jnp
push
dec
xorb
jl
jns
jnp
imul
insb
jnp
imul
test
outsl
push
dec
insb
ja
jl
push
dec
push
jle
test
push
imul
jg
jnp
push
push
ja
jg
xchg
fs
insb
cwtl
dec
gs
dec
dec
push
dec
pop
push
arpl
push
imul
insl
imul
insb
dec
jnp
imul
push
push
dec
push
pusha
test
cwtl
lcall
cwtl
jg
jns
jb
jnp
push
test
add
push
jge
test
outsl
push
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
pop
pop
popa
mov
xorl
mov
mov
cwtl
and
mov
cwtl
cwtl
dec
movsl
sub
xchg
cwtl
cmpsl
sbb
cwtl
mov
add
and
mov
dec
adcb
cwtl
cwtl
sbb
or
dec
xchg
cwtl
sbb
push
imul
cwtl
dec
sbbb
cwtl
dec
dec
dec
dec
inc
dec
cmc
or
dec
xchg
cwtl
push
cmc
or
dec
xchg
cwtl
fldenv
or
dec
sbbb
cwtl
cwtl
sbb
or
dec
xchg
cwtl
sbb
push
imul
cwtl
dec
and
pusha
les
sbbb
or
dec
xchg
cwtl
cmc
or
dec
xchg
cwtl
ficomps
xchg
dec
add
pop
add
xchg
cwtl
ficomps
pop
mov
inc
dec
xchg
cwtl
cwtl
insb
data16
cwtl
dec
inc
mov
imul
pop
mov
xchg
imul
cwtl
and
dec
cmp
and
jg
xchg
cwtl
and
cwtl
repnz
pop
repnz
div
daa
xchg
cli
in
sub
dec
xchg
cwtl
sbbb
xchg
dec
xchg
cwtl
add
mov
je
mov
mov
pop
pop
pop
fs
cmc
or
xchg
cwtl
mov
lcall
cmc
or
xchg
cwtl
sbb
insb
lcall
cwtl
dec
pop
pop
push
gs
pop
fs
cmc
or
xchg
cwtl
add
cmc
cmc
and
ljmp
cwtl
cwtl
dec
cmc
or
mov
pop
dec
pop
dec
pop
dec
dec
push
pop
dec
pop
cwtl
dec
cmc
or
dec
xchg
cwtl
add
pusha
gs
dec
dec
cwtl
dec
cmc
or
dec
xchg
cwtl
test
cltd
inc
sbbb
dec
cmc
or
dec
xchg
cwtl
sbb
cmc
insb
mov
dec
xchg
cwtl
and
mov
cwtl
dec
adcb
cmc
or
cwtl
cmc
or
xchg
cwtl
add
dec
pop
dec
test
fs
cmc
or
cwtl
cwtl
cwtl
insl
imul
push
cwtl
dec
cmc
or
xchg
cwtl
and
jp
xchg
cwtl
pop
sbb
dec
xchg
cwtl
inc
cmc
or
pushf
cwtl
cwtl
cwtl
and
ljmp
enter
add
out
cmc
dec
pop
fistpl
fincstp
cmc
cmc
push
cmc
or
pop
push
xchg
cwtl
and
dec
xchg
cmc
cmc
movsl
cmpsl
pop
sbb
xchg
cwtl
cwtl
sbb
xchg
cmc
cmc
test
cwtl
mov
and
xchg
xchg
cwtl
movsl
cs
xor
xchg
cwtl
cltd
call
cwtl
cwtl
sbbb
cmc
mov
out
xchg
and
ljmp
cmp
arpl
cmp
dec
and
ljmp
dec
cli
loop
not
sbb
mov
push
add
cmc
cmc
sbb
imul
cwtl
daa
pushf
add
cmc
cmc
cmpb
cmc
test
out
mov
cwtl
and
pop
push
xchg
cwtl
inc
inc
inc
inc
dec
inc
inc
inc
cmc
or
sbb
xchg
cwtl
sbb
pop
push
xchg
cwtl
cwtl
insb
mov
xchg
cwtl
add
xchg
cwtl
insb
popf
ficomps
xchg
and
mov
dec
xchg
cwtl
cwtl
imul
cwtl
cwtl
dec
pusha
fs
push
dec
pop
pop
fs
cmc
or
cwtl
cwtl
cwtl
dec
pusha
dec
jnp
dec
ja
imul
dec
cmc
or
xchg
cwtl
or
sub
dec
xchg
cwtl
and
cwtl
cwtl
dec
sbbb
cwtl
and
outsb
rcll
xchg
cwtl
dec
dec
dec
cmc
or
dec
xchg
cwtl
sbb
movsb
and
or
xchg
cwtl
dec
dec
adcb
cwtl
sbb
leave
add
lock
cmc
add
gs
popa
test
fs
cmc
or
popf
cwtl
cwtl
cwtl
and
fidivrl
xor
dec
xchg
cwtl
add
cmc
cmc
add
pop
pop
dec
pop
fs
cmc
or
movsl
sbb
lcall
cwtl
cwtl
and
mov
xor
call
fmuls
cwtl
cwtl
movsl
sbb
lcall
cwtl
cwtl
dec
adcb
cmp
cwtl
pop
fmull
xchg
cwtl
cwtl
dec
and
sbbb
xchg
cwtl
sbb
dec
imul
cmc
or
xchg
cwtl
add
jle
sbb
xchg
cwtl
cmc
call
xchg
cwtl
cwtl
and
les
inc
dec
xchg
cwtl
sbb
imul
cwtl
and
sbb
or
cmc
cmc
sbb
les
popf
lcall
movsb
and
les
xchg
sbbb
cwtl
sbb
cmc
movsl
sbb
xchg
cwtl
cwtl
or
or
xchg
cwtl
orb
dec
xchg
cwtl
sbb
movsl
sbb
xchg
cwtl
cwtl
sbb
cmc
add
cmc
cmc
pop
and
or
xchg
cwtl
pop
or
push
xchg
cwtl
ficomps
push
push
xchg
cwtl
cwtl
pop
or
push
xchg
cwtl
ficomps
adc
daa
mov
cmc
orb
cwtl
push
sar
lods
mov
dec
xchg
cwtl
and
aaa
les
mov
cmc
cmc
and
les
mov
add
cmc
cmc
and
and
pop
push
xchg
cwtl
dec
movsl
mov
xlat
clc
mov
bound
pop
mov
xlat
clc
mov
mov
stos
cmpb
xchg
cwtl
add
scas
jo
mov
jns
mov
mov
mov
mov
sub
cwtl
pop
fsubrl
cwtl
cwtl
cwtl
sbbb
out
cmc
cmc
and
scas
mov
fbld
cwtl
cwtl
mov
cwtl
dec
cmc
or
dec
xchg
cwtl
sbb
movsb
dec
dec
dec
add
jmp
cmc
sbb
movsl
es
sub
dec
xchg
cwtl
and
out
xchg
cwtl
shl
cwtl
inc
dec
dec
cmc
or
dec
xchg
cwtl
sbb
cwtl
movsl
adc
and
and
push
push
xchg
cwtl
test
xlat
loop
negb
push
push
xchg
cwtl
sbb
push
push
xchg
cwtl
xchg
imul
or
push
xchg
cwtl
pusha
imul
sub
dec
xchg
cwtl
sub
js
jmp
cmc
cmc
ja
push
stc
lahf
and
add
and
shl
xor
dec
xchg
cwtl
jmp
mov
pop
mov
cwtl
dec
add
cwtl
push
sbb
movsl
sbb
cmc
cmc
cmc
inc
cmpb
dec
xchg
cwtl
dec
cli
clc
cmc
or
pop
push
xchg
cwtl
mov
add
cmc
cmc
cmc
sbb
pop
mov
cmc
cmc
cmc
dec
cmc
or
pop
mov
subb
dec
dec
xchg
cwtl
pushl
cmc
cmc
push
ficompl
push
xchg
cwtl
cwtl
sbb
sbb
cwtl
cwtl
movsl
sub
nop
movsl
sub
and
rcrl
mov
mov
mov
pop
movsb
pop
or
xchg
cwtl
pop
sbb
push
xchg
cwtl
add
iret
ja
pushf
cwtl
dec
sbb
inc
dec
xchg
cwtl
cwtl
movsl
sbb
dec
add
cmc
cmc
or
dec
xchg
cwtl
sbb
push
movsl
and
pop
add
cmc
add
jnp
pop
jg
jnp
jnp
imul
outsl
push
cwtl
cmc
sub
dec
xchg
cwtl
cmc
or
xchg
cwtl
pop
sbb
xchg
cwtl
add
jnp
ja
jnp
insl
xchg
imul
jnp
jnp
dec
add
push
cmc
cmc
add
jnp
jnp
insb
test
dec
push
outsb
jg
jnp
jnp
dec
add
push
cmc
cmc
add
jnp
ja
subl
jg
jnp
jnp
dec
add
nop
cwtl
cwtl
cwtl
dec
jnp
xorb
jnp
test
outsl
dec
push
outsb
jg
jnp
jnp
dec
add
cmc
cmc
dec
dec
and
inc
dec
xchg
cwtl
cmpb
dec
cmc
or
dec
xchg
cwtl
pop
mov
cmc
or
xchg
cwtl
ret
xor
dec
xchg
cwtl
dec
dec
dec
cmc
sub
cwtl
adcb
xchg
dec
cmc
or
xchg
cwtl
dec
sbbb
cwtl
sbb
mov
sub
dec
xchg
cwtl
cmc
or
xchg
cwtl
push
fldenv
sub
dec
xchg
cwtl
sbb
insb
mov
dec
xchg
cwtl
sbb
cmc
insb
pop
sbb
push
xchg
cwtl
sbbb
xchg
cwtl
sbb
insb
sahf
negb
cmp
cwtl
rcr
dec
sbbb
sbb
inc
dec
xchg
cwtl
cwtl
imul
cwtl
sbb
popf
adcb
dec
cmc
or
dec
xchg
cwtl
sbb
cmc
movsl
sbb
mov
push
xchg
cwtl
sbb
insb
mov
and
push
xchg
cwtl
and
sahf
push
xchg
cwtl
inc
dec
sbbb
xchg
cwtl
sbb
insb
sahf
negb
cmp
cwtl
sbbb
cwtl
cmc
or
dec
xchg
cwtl
sbb
cmc
movsl
sbb
mov
push
xchg
cwtl
test
dec
inc
mov
xor
cwtl
cwtl
insb
pushf
sbbb
sub
push
xchg
cwtl
cmc
or
dec
xchg
cwtl
sbb
movsl
sbb
mov
sbb
inc
inc
sbb
mov
xor
cwtl
cwtl
insb
popf
adcb
adcb
or
dec
xchg
cwtl
sbb
movsl
sbb
mov
push
xchg
cwtl
fldenv
sbb
xchg
xchg
cwtl
and
fwait
adc
and
in
out
negl
sbb
popa
mov
sbb
xchg
xchg
cwtl
test
cmc
in
out
negl
sbb
movsl
sub
pop
and
movsl
sub
pop
adc
mov
insl
jg
out
insb
ret
jb
xchg
push
and
cmpsb
push
xchg
cwtl
and
rcrl
dec
and
and
xchg
movsb
mov
mov
mov
fldln2
fstpl
mov
pop
inc
andb
cmc
and
fcomps
sub
inc
fstps
popf
fwait
sub
leave
sub
movsl
cmp
imul
cmc
test
imul
imul
add
lcall
sbb
es
xchg
cwtl
f2xm1
out
jmp
unpckhps
pop
pop
pop
pop
pop
pop
fwait
sbb
sbb
sbb
sbb
sub
xchg
cwtl
and
cwtl
mov
mov
xchg
xchg
cwtl
sbb
pushf
mov
cwtl
cwtl
cwtl
push
sbb
xchg
cwtl
cwtl
insb
sub
xlat
jne
pushf
sbbb
xor
push
insb
lahf
add
push
cmc
cmc
mov
imul
sbb
sbb
cmc
cmc
mov
imul
hlt
add
imul
out
xlat
sbb
pushf
sahf
add
cmc
mov
imul
mov
cmc
cmc
and
scas
xchg
cwtl
add
scas
xchg
cwtl
add
or
pop
add
fcomps
and
lret
cwtl
inc
lcall
shrb
jne
shrl
sub
sbb
xchg
cwtl
imul
cmc
cmc
add
cmc
and
out
xlat
sbb
lret
add
cmc
mov
movsl
sbb
xchg
cwtl
cwtl
sbb
inc
push
xchg
cwtl
xchg
imul
pushf
movsl
or
add
add
cmc
cmc
mov
imul
xor
imul
lock
pushf
mov
sbb
xchg
cwtl
inc
xlat
clc
cltd
lcall
cwtl
inc
sbb
cmc
add
cmc
cmc
inc
incl
imul
fstps
push
xchg
cwtl
not
jmp
xchg
cwtl
cwtl
mov
imul
inc
push
xchg
cwtl
xchg
imul
cwtl
pushf
imul
cwtl
add
add
cmc
add
cmc
and
inc
push
xchg
cwtl
sbb
cwtl
insb
xchg
mov
or
sbb
mov
cwtl
or
mov
fsubrs
push
fldl
add
lea
std
fdivr
cltd
lcall
lcall
xchg
cwtl
jle
stc
cwtl
not
jle
cli
hlt
dec
cwtl
cwtl
cwtl
enter
lcall
fdiv
fstps
xor
xchg
cwtl
cwtl
imul
cmc
and
push
inc
sbb
and
sub
xchg
cwtl
cwtl
imul
xor
outsb
mov
xchg
cwtl
cltd
outsb
nop
neg
sbb
xchg
cwtl
fwait
outsb
mov
xchg
cwtl
sahf
outsb
lcall
cmc
mov
imul
mov
sbb
shrl
sub
cmc
pushf
fcomps
xor
xchg
cwtl
cwtl
insb
lcall
lcall
mov
popf
mov
imul
stos
add
cmc
inc
mov
mov
cltd
sbb
sbb
icebp
pop
imul
add
icebp
pop
push
sbb
sbb
inc
add
xor
xchg
cwtl
cwtl
imul
mov
xor
imul
lcall
xchg
cwtl
cwtl
insb
lcall
mov
sub
inc
push
pushf
mov
loopne
clc
cltd
lcall
xchg
cwtl
cwtl
insb
movsb
mov
sub
inc
push
lods
mov
sbb
xchg
cwtl
sbb
xchg
cwtl
pushf
imul
nop
mov
movsl
sbb
cwtl
cwtl
cwtl
mov
movsl
sbb
cwtl
cwtl
cwtl
mov
movsl
sbb
cwtl
cwtl
cwtl
dec
sub
cmc
push
sbb
xchg
movsl
sbb
cwtl
cwtl
cwtl
mov
imul
cltd
lcall
xchg
cwtl
cwtl
insb
mov
xor
xchg
cwtl
xchg
insb
ret
inc
push
xchg
cwtl
pushf
insb
mov
mov
cmc
sbb
inc
push
xchg
cwtl
cwtl
insb
mov
xor
xchg
cwtl
popf
imul
and
fdivr
cltd
pushf
fcomps
inc
push
xchg
cwtl
cwtl
insb
les
xor
xchg
cwtl
cwtl
insb
mov
xor
xchg
cwtl
fwait
insb
lahf
sbb
inc
push
xchg
cwtl
sahf
imul
xor
xchg
cwtl
sahf
insb
lcall
div
cmc
fdivrs
inc
push
xchg
cwtl
cltd
sbb
cmc
sbb
inc
push
xchg
cwtl
cwtl
insb
lahf
sbb
inc
push
xchg
cwtl
mov
popf
add
add
cmc
add
xchg
cwtl
mov
pop
sbb
push
xchg
cwtl
ror
cmc
movsl
or
rcr
fisubl
fiaddl
cltd
sbb
pushf
scas
or
mov
xchg
cwtl
mov
xor
xchg
cwtl
nop
imul
cmc
test
push
xchg
cwtl
xchg
add
sbb
cwtl
insb
mov
xor
xchg
cwtl
pop
insb
cmpsl
pop
xor
push
xchg
cwtl
cwtl
xchg
cwtl
cwtl
push
sub
cmc
mov
insb
xchg
sub
inc
sub
lcall
fldl
sbb
push
xchg
cwtl
inc
call
cmc
imul
cwtl
pop
insb
mov
inc
push
xchg
cwtl
add
sbb
inc
push
xchg
cwtl
pop
insb
mov
inc
push
xchg
cwtl
add
inc
mov
fcomps
ds
xchg
cwtl
mov
add
cmc
cmc
cmp
pop
mov
cwtl
cwtl
cwtl
test
lods
test
test
cmpsl
mov
subb
push
mov
jle
ja
jnp
imul
insb
push
fs
jns
mov
imul
push
lds
test
mov
test
jg
push
xchg
mov
jg
push
cmpl
mov
cmpsb
push
xchg
cwtl
sub
pushf
ljmp
jns
imul
and
and
cmpsb
push
xchg
cwtl
sbb
fwait
sub
mov
imul
pop
xchg
mov
mov
gs
dec
imul
shl
lds
cwtl
cwtl
cwtl
push
add
movsb
add
out
cmc
cmc
add
mov
xchg
cwtl
and
mov
repz
jbe
and
mov
jmp
inc
push
xchg
cwtl
cmc
insb
mov
ds
imul
cwtl
rcrl
push
xchg
cwtl
fldcw
lret
pop
lea
movsl
sub
lret
popa
lea
xchg
xchg
cwtl
and
push
insb
mov
add
cwtl
cwtl
movsl
cmp
sbb
cltd
pop
jo
pop
pop
add
cltd
xlat
dec
fnstcw
sbb
pop
lea
or
xchg
cwtl
imul
sbb
xchg
xchg
cwtl
fldenv
in
mov
xchg
cwtl
hlt
and
test
push
mov
insl
lcall
add
insb
shll
and
xchg
cwtl
cwtl
mov
push
pop
cwtl
insb
pop
mov
pop
dec
cwtl
insb
mov
sbb
mov
cwtl
mov
sbb
cmc
cmc
cmc
mov
mov
dec
arpl
pusha
dec
cwtl
insb
mov
cwtl
movsl
sbb
sbb
dec
xchg
cwtl
add
cmc
and
pop
insb
ljmp
add
insb
cld
mov
dec
dec
dec
insb
rcrl
cmp
push
xchg
cwtl
cwtl
jle
cmp
push
xchg
cwtl
cwtl
ficomps
or
cwtl
test
cwtl
cwtl
add
repz
cmc
add
pop
add
inc
mov
stos
jl
mov
xchg
cwtl
pop
sbb
xchg
cwtl
test
cmc
cmc
movsl
sbb
mov
mov
cwtl
sbb
out
xchg
cwtl
xchg
imul
ljmp
cwtl
cwtl
jle
mov
push
movsl
sbb
push
mov
icebp
cmc
cmc
cwtl
cwtl
movsl
sbb
cltd
jle
mov
pop
movsl
sbb
cwtl
cwtl
in
pop
mov
sbb
cwtl
cwtl
out
pop
push
lcall
and
mov
pop
xchg
movsl
sbb
mov
in
cmc
cmc
movsl
sbb
pop
mov
lcall
xchg
cwtl
fstpl
fstl
cwtl
cwtl
add
lcall
push
xchg
cwtl
cltd
adc
aad
cmc
cmc
imul
add
jmp
cmc
movsl
sbb
mov
test
xchg
cwtl
cltd
sbb
in
xchg
cwtl
cwtl
ficomps
pop
lea
cwtl
mov
lea
lcall
mov
sahf
cwtl
sbb
and
cmc
cmc
and
inc
and
inc
mov
mov
xchg
mov
cwtl
dec
add
sbbb
imul
cwtl
dec
add
insb
movsb
mov
insb
mov
mov
imul
pushf
ficomps
cwtl
add
xchg
movsl
and
pushf
mov
call
adc
sbb
xchg
cwtl
sbb
pop
lea
jle
pop
lcall
jle
pop
lcall
sbb
lods
cmc
cmc
cmc
sbb
mov
pop
jle
pop
lcall
inc
fdecstp
sbb
xchg
cwtl
and
mov
cwtl
and
cltd
add
sbb
lahf
cwtl
cwtl
and
pop
bound
sbb
bound
mov
pop
mov
cmp
xchg
cwtl
cwtl
sbb
dec
push
xchg
cwtl
cwtl
sbb
dec
push
xchg
cwtl
cwtl
sbb
push
push
xchg
cwtl
cwtl
sbb
push
push
xchg
cwtl
cwtl
sbb
jp
xchg
cwtl
cwtl
sbb
jle
xchg
cwtl
cwtl
cltd
loopne
lock
pop
mov
mov
and
xchg
xchg
cwtl
cmc
pop
and
push
xchg
cwtl
pop
xor
sbb
pushf
cwtl
cwtl
and
cwtl
ficomps
inc
push
xchg
cwtl
cmc
in
sbb
mov
cwtl
xchg
cwtl
cwtl
cwtl
movsl
sbb
xchg
cwtl
cwtl
sbb
cwtl
movsl
sbb
xchg
cwtl
cwtl
and
sbb
sub
cmc
cmc
cltd
or
push
xchg
cwtl
cltd
or
xor
xchg
cwtl
sbb
cwtl
movsl
sbb
xchg
cwtl
cwtl
sbb
cwtl
movsl
sbb
xchg
cwtl
cwtl
and
cltd
sbb
push
xchg
cwtl
cltd
sbb
dec
add
pop
dec
pop
fs
fs
cmc
or
dec
xchg
cwtl
sbb
push
insb
fwait
sbb
mov
das
dec
and
sbb
cmc
cltd
xor
push
xchg
cwtl
test
push
xchg
cwtl
pop
xor
push
xchg
cwtl
ljmp
or
cwtl
push
and
dec
add
or
xchg
cwtl
and
cltd
bound
movsl
and
cwtl
cwtl
cwtl
movsl
sbb
cwtl
cwtl
cwtl
cltd
sub
push
xchg
cwtl
cltd
sub
sub
push
xchg
cwtl
inc
mov
imul
mov
cwtl
rcrl
push
xchg
cwtl
cltd
sahf
dec
add
out
cmc
sbb
jbe
xchg
cwtl
cwtl
imul
add
xchg
cwtl
cltd
sbb
pop
mov
mov
lcall
sbb
pop
xchg
add
xchg
cwtl
cmc
sbb
push
xchg
cwtl
pop
imul
imul
xchg
cwtl
add
push
push
xchg
cwtl
rcrl
add
cmc
cmc
scas
xor
xchg
cwtl
imul
sbb
push
xchg
cwtl
cltd
sbb
sbb
push
xchg
cwtl
push
mov
or
cwtl
imul
xchg
cwtl
negb
inc
push
xchg
cwtl
pop
bound
lcall
and
inc
push
xchg
cwtl
and
adcb
movsl
and
xchg
cwtl
and
add
stc
cmc
cmc
test
push
xchg
cwtl
push
mul
jo
neg
add
sbb
xchg
cwtl
rorl
push
xchg
cwtl
inc
jle
or
popa
lea
fistpl
xchg
cwtl
movsl
sub
xchg
cwtl
pop
negb
stos
cwtl
mov
lcall
xchg
cwtl
jmp
cwtl
cwtl
sbb
movsl
sbb
xchg
cwtl
cwtl
inc
dec
sub
cmc
sbb
lcall
and
rcr
inc
mov
fwait
cwtl
cwtl
cwtl
dec
jmp
in
mov
lcall
mov
xchg
fwait
dec
decl
xor
cwtl
cmc
insb
jo
mov
mov
mov
int
cltd
cwtl
cwtl
cwtl
and
leave
xchg
xchg
cwtl
dec
and
inc
sub
xchg
cwtl
inc
sbbb
push
push
xchg
cwtl
mov
loope
xchg
cwtl
outsb
sahf
pop
add
cwtl
cwtl
dec
inc
pop
or
xchg
xchg
cwtl
movsl
sub
sbb
cli
out
and
arpl
pop
test
daa
cltd
pushl
cwtl
cwtl
cwtl
decl
cwtl
cwtl
cwtl
mov
mov
cwtl
cwtl
cwtl
sbb
inc
push
xchg
cwtl
cwtl
push
sbb
inc
push
xchg
cwtl
lcall
xchg
cwtl
cwtl
imul
cwtl
movsl
sbb
xchg
cwtl
sbbb
or
push
xchg
cwtl
sbb
inc
push
xchg
cwtl
xchg
imul
cltd
loopne
ficomps
cwtl
inc
sub
pop
lods
inc
cltd
or
push
xchg
cwtl
cltd
or
lcall
cwtl
imul
sbb
cwtl
sbb
inc
push
xchg
cwtl
xchg
add
add
cwtl
ficomps
popa
pop
xchg
cwtl
sub
fs
add
add
ljmp
and
sbb
xchg
cwtl
inc
and
arpl
cmc
stc
xchg
rorl
push
xchg
cwtl
mov
loope
xchg
cwtl
outsb
sahf
pop
add
cwtl
cwtl
movsl
sub
sbb
cli
out
push
dec
lcall
cmc
cmc
dec
out
sbb
lea
sub
inc
sbb
cmc
add
cmc
cmc
or
fbld
cmc
and
rorl
push
xchg
cwtl
pop
or
xchg
xchg
cwtl
movsl
sub
xchg
cwtl
add
cmc
cmc
dec
movsl
sub
xchg
cwtl
pusha
add
cmc
cmc
pop
mov
sbb
into
xchg
xchg
cwtl
add
sbb
cwtl
sbb
sahf
pop
out
cld
cwtl
cwtl
cwtl
push
and
adcb
and
pop
lea
xchg
xchg
cwtl
andb
pop
fwait
cwtl
cwtl
dec
jmp
sbb
lea
movsl
sub
xchg
cwtl
movsl
sub
xchg
cwtl
pop
cli
cmc
jne
cwtl
and
movsl
sub
xchg
cwtl
ror
sbb
repnz
bnd
fwait
and
add
pop
idiv
pop
dec
cmc
not
mov
pop
lea
cmc
cmc
cwtl
cwtl
add
clc
cmc
cmc
pop
dec
xor
cwtl
cwtl
cwtl
add
in
cmc
cmc
cltd
sbb
jle
mov
xchg
cwtl
and
loope
xchg
cwtl
cltd
and
push
xchg
cwtl
cltd
sbb
and
push
xchg
cwtl
das
inc
pop
cwtl
cwtl
test
cwtl
mov
out
add
cmc
cmc
negb
or
sbb
rcrl
cwtl
cwtl
in
sbb
mov
cwtl
lcall
cltd
cwtl
cwtl
cmc
imul
cmc
and
jbe
xchg
cwtl
and
rcrl
sbb
cwtl
sbb
pop
movsl
sbb
cwtl
cwtl
pop
sbb
sub
push
xchg
cwtl
dec
and
cltd
pop
mov
add
cmc
cmc
push
and
cwtl
scas
or
xchg
cwtl
insb
mov
xor
xchg
cwtl
cwtl
movsl
sbb
or
xchg
cwtl
xor
cwtl
cwtl
push
add
aad
cmc
pop
and
rcrl
cwtl
sbbb
cmc
and
or
sbb
push
xchg
cwtl
stos
test
push
xchg
cwtl
cwtl
and
cs
xchg
cwtl
ficomps
or
cwtl
adc
push
xchg
cwtl
cltd
lock
sbb
cwtl
cwtl
cwtl
sbb
or
xchg
cwtl
cwtl
imul
aad
cmc
sbb
lcall
sbb
xchg
cwtl
sbbb
cmc
mov
sbb
or
xchg
cwtl
cwtl
insb
cmpsb
sbb
cltd
imul
cwtl
xchg
imul
add
sbb
push
xchg
cwtl
sbb
cltd
dec
imul
cwtl
cwtl
imul
popa
call
int
dec
mov
push
xchg
cwtl
dec
ljmp
cwtl
cwtl
cwtl
sbb
or
xchg
imul
cwtl
cwtl
imul
or
xchg
cwtl
adc
cs
xchg
cwtl
and
cwtl
in
rcrb
outsb
push
xchg
cwtl
push
sbb
pushf
movsl
sbb
jo
addr16
mov
xor
cwtl
inc
and
fstl
add
xchg
imul
out
mov
cwtl
pushf
cwtl
cwtl
cwtl
movsl
or
and
sbb
push
xchg
cwtl
pushf
sbb
sbb
push
xchg
cwtl
cltd
pop
lods
inc
and
rcrl
cwtl
inc
add
mov
or
inc
add
pop
inc
pop
xor
push
xchg
cwtl
inc
negb
or
jmp
div
cmc
and
jbe
xchg
cwtl
and
cltd
jb
cmc
push
and
es
xchg
cwtl
cwtl
cltd
xor
push
xchg
cwtl
cltd
xor
or
push
xchg
cwtl
test
cmp
es
xchg
cwtl
push
pop
push
sbb
pushf
imul
add
cmc
cmc
test
es
xchg
cwtl
push
bound
push
add
movsl
inc
and
push
xchg
cwtl
pop
xor
jb
xchg
cwtl
adc
shrb
xchg
cwtl
movsl
cs
outsb
push
xchg
cwtl
jmp
inc
and
xchg
cwtl
xlat
add
cmc
and
stc
xor
shl
cmc
sbb
mov
fwait
sbb
mov
lcall
negb
outsb
push
xchg
cwtl
sbb
es
xchg
cwtl
movsl
movsl
sbb
cmc
cmc
test
imul
cltd
sbb
push
xchg
cwtl
cltd
sbb
popf
and
jbe
xchg
cwtl
movsl
cs
outsb
push
xchg
cwtl
cltd
xor
jb
xchg
cwtl
rcr
sbb
sbb
lock
popf
ficomps
add
pushf
sbb
cltd
inc
push
sbb
pushf
imul
sbb
xchg
cwtl
and
pop
push
xchg
cwtl
and
push
push
xchg
cwtl
and
and
shl
out
rcr
lock
lock
rcr
imulb
pop
cmc
fstpl
xchg
cwtl
pushf
cwtl
cwtl
cwtl
rcr
daa
sbb
cmc
dec
shl
and
add
pushf
sbb
pushf
inc
and
jb
xchg
cwtl
rcrl
push
xchg
cwtl
rcrl
push
xchg
cwtl
pop
sbb
push
xchg
cwtl
push
and
xchg
push
xchg
cwtl
and
mov
cwtl
sub
push
loope
pop
xchg
xchg
bound
and
mov
pop
mov
cmp
cwtl
cwtl
cwtl
cwtl
and
adc
cwtl
sbb
in
cwtl
cwtl
cwtl
cltd
pop
lods
jle
jns
mov
in
rorb
cmpsb
cwtl
cwtl
cwtl
push
add
jmp
adcb
and
sub
cwtl
and
push
xchg
cwtl
cmc
imul
and
mov
cwtl
cltd
xor
push
xchg
cwtl
cltd
xor
push
xchg
cwtl
sub
inc
and
rcrl
push
xchg
cwtl
inc
sbb
rcrl
cwtl
cwtl
insb
test
xchg
cwtl
and
fstl
out
mov
cwtl
pushf
cwtl
cwtl
cwtl
and
insb
lahf
sbb
rcrb
cwtl
int
popf
sbb
rcrb
cwtl
shl
cli
repnz
jl
lcall
cwtl
cwtl
movsl
sbb
cwtl
cwtl
cwtl
cmc
sub
or
cwtl
cmc
sub
or
xchg
cwtl
sbb
cmp
cwtl
cwtl
insb
xchg
and
notb
cwtl
and
sahf
push
xchg
cwtl
inc
dec
sbbb
cwtl
cmc
or
xchg
cwtl
sbb
or
cwtl
insb
lds
sbb
cwtl
cltd
sbb
sbb
cwtl
dec
cmc
sub
push
xchg
cwtl
cmc
or
cwtl
cmc
sub
push
xchg
cwtl
cmc
or
repnz
xchg
cwtl
cmc
or
xchg
cwtl
sbb
cmp
cwtl
cwtl
insb
mov
sub
dec
xchg
cwtl
cmc
sub
push
xchg
cwtl
dec
cmc
or
xchg
cwtl
jle
cmp
push
xchg
cwtl
cwtl
sbb
repnz
xchg
cwtl
cwtl
fstps
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
mov
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
lcall
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
lcall
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
lcall
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
lcall
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
lcall
cwtl
sahf
cwtl
cwtl
cwtl
mov
cwtl
cwtl
cwtl
pop
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
xchg
cwtl
cwtl
pop
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
sbb
cwtl
cwtl
sbb
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
xchg
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
mov
cwtl
pushf
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
pop
xchg
cwtl
cwtl
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
mov
cwtl
pushf
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
pushf
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
cwtl
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
lcall
cwtl
lcall
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
sbb
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
lcall
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
mov
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
pop
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
mov
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
xchg
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
dec
test
push
xchg
cwtl
xchg
ficomps
cmp
cwtl
xchg
test
sbb
bound
cwtl
cwtl
insb
mov
and
cmp
cwtl
aas
cwtl
cwtl
mov
cwtl
xchg
cwtl
cwtl
aas
pushf
cwtl
cwtl
cwtl
insb
popf
sbb
cmp
xchg
cwtl
xchg
aas
mov
popf
sbb
cmp
cwtl
xchg
aas
lcall
add
aas
mov
cwtl
cwtl
insb
xchg
push
aas
mov
xchg
push
aas
cwtl
js
cwtl
insb
xchg
xor
xchg
cwtl
cwtl
imul
sbb
sahf
aas
sbb
sbb
cmp
cwtl
xchg
imul
lcall
movsl
sbb
cmp
xchg
cwtl
xchg
imul
lcall
lock
mov
mov
imul
mov
push
aas
cwtl
sbb
mov
cli
mov
mov
cwtl
inc
cmc
cmc
cmc
xor
mov
cwtl
cwtl
xchg
cwtl
insb
xchg
and
mov
cwtl
jmp
cwtl
xchg
cwtl
cwtl
lcall
cwtl
cwtl
lcall
cwtl
cwtl
ljmp
cwtl
cwtl
insb
xchg
enter
cli
popf
fadds
sahf
mov
insb
push
sbb
cmp
cwtl
cwtl
imul
repnz
imul
mov
imul
imul
repnz
imul
mov
sahf
mov
cltd
sbb
pushf
sub
sbb
fwait
imul
mov
imul
imul
flds
cwtl
cwtl
cwtl
cwtl
push
adcb
cwtl
push
call
mov
sbb
cmc
call
mov
cwtl
ret
xchg
jle
je
movsb
test
mov
fdiv
cmc
cmc
imul
add
cmc
cmc
cmc
ja
cmc
ret
jo
lods
mov
mov
pop
and
and
jle
mov
lcall
cmc
imul
cwtl
cwtl
and
cwtl
and
ljmp
cwtl
cmc
cwtl
and
sbbb
dec
xchg
cwtl
sbb
mov
mov
imul
add
cmc
add
cmc
cmc
ja
jl
mov
sbb
xchg
cwtl
imul
and
xchg
cwtl
imul
xchg
cwtl
cwtl
add
pop
fs
cwtl
add
xor
cwtl
ljmp
cmc
cmc
xor
cwtl
cwtl
cwtl
add
mov
cwtl
cwtl
add
mov
cwtl
cwtl
add
les
jecxz
sbb
cwtl
je
js
cwtl
cwtl
cwtl
cwtl
and
push
and
xchg
cwtl
add
out
cmc
ja
pushf
cwtl
xor
cwtl
cwtl
cwtl
sbb
mov
mov
add
sbb
xlat
fdiv
cmc
cwtl
jbe
and
jecxz
sbb
cwtl
je
and
sbb
cwtl
fldenv
pop
cwtl
cmp
int
loope
xchg
cmp
dec
fstps
xorb
cmp
and
pop
scas
mov
lods
xchg
outsl
lods
lods
sub
xchg
sbb
aaa
jns
test
lods
pop
mov
xchg
dec
push
lods
xor
movsb
jg
mov
jns
lods
lods
loopne
mov
jl
mov
mov
jp
xor
mov
pop
lods
lods
add
dec
mov
popl
mov
ret
push
adc
push
call
adc
xchg
cmp
jmp
push
shl
xchg
sub
jmp
pop
not
jmp
nop
inc
push
cld
lea
or
call
xchg
or
call
jmp
pop
cmpb
nop
jne
nop
lea
xor
cmp
jmp
cld
cld
fwait
dec
xchg
nop
nop
jne
jmp
setae
mul
or
cmp
sub
and
adc
add
jmp
sub
push
inc
dec
push
fwait
xchg
xchg
xor
xor
sahf
dec
inc
or
or
push
push
call
jmp
add
or
xchg
xchg
nop
div
not
lea
jmp
mov
xchg
xchg
test
je
call
cmp
dec
popa
sahf
ret
mov
xor
inc
nop
cld
lea
clc
sub
add
imul
jmp
ret
inc
inc
nop
cmp
push
cmp
cpuid
cmp
nop
adc
shr
jmp
loop
fwait
bts
pop
lea
nop
inc
inc
xchg
not
inc
not
add
push
and
cwtl
push
jmp
test
sub
not
mov
add
cld
lea
add
ret
sbb
or
add
mov
not
ret
not
xor
nop
lea
jmp
add
not
dec
add
dec
movzwl
jmp
ffree
sub
jnp
add
add
xchg
sbb
xchg
push
call
jmp
sbb
or
sbb
call
and
cmp
mov
add
call
mov
xchg
cld
test
jmp
and
stc
mov
sub
and
dec
lea
mov
lea
xchg
add
add
or
ret
icebp
jmp
xor
inc
inc
mov
ret
mov
mov
lahf
mov
not
mov
lea
mov
cmc
cmp
mov
jmp
not
not
not
mov
inc
dec
and
nop
mov
cld
cld
cld
push
lea
sbb
add
call
sub
sub
sbb
jmp
not
shr
jne
and
mov
xor
sahf
pushl
xchg
inc
xchg
or
int
jmp
xchg
xchg
lea
inc
dec
not
not
push
push
inc
push
add
jmp
adc
ret
decl
call
xchg
add
add
test
jmp
lret
lcall
sahf
into
inc
sub
push
nop
mov
nop
test
popl
and
mov
mov
sub
jmp
mov
push
lea
call
test
call
lea
push
sub
push
jmp
not
mov
inc
mov
not
push
mov
lea
clc
pop
xor
xor
xchg
xchg
lods
jmp
dec
call
not
inc
mov
push
jmp
cld
not
cmp
lea
push
cld
xchg
not
fwait
mov
jmp
xchg
je
pop
xchg
xchg
sub
rdtsc
jmp
jne
not
sub
je
jmp
cld
not
not
xchg
xchg
cld
xchg
xchg
jne
mov
mov
jmp
cld
sub
or
xor
movzbl
add
sub
sub
inc
jmp
call
pusha
nop
